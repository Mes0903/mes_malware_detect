
9a18df3188a3d298447e69048b24b36ab6ddacb161b23c1347f5a91092e7d74e.exe:     file format pei-i386


Disassembly of section .text:

10001000 <.text>:
10001000:	mov    DWORD PTR [ecx],0x100665c8
10001006:	jmp    0x100430c0
1000100b:	push   esi
1000100c:	mov    esi,ecx
1000100e:	mov    DWORD PTR [esi],0x100665c8
10001014:	call   0x100430c0
10001019:	test   BYTE PTR [esp+0x8],0x1
1000101e:	je     0x10001027
10001020:	push   esi
10001021:	call   0x10042f82
10001026:	pop    ecx
10001027:	mov    eax,esi
10001029:	pop    esi
1000102a:	ret    0x4
1000102d:	push   ebp
1000102e:	mov    ebp,esp
10001030:	push   DWORD PTR [ebp+0x14]
10001033:	push   DWORD PTR [ebp+0x10]
10001036:	push   DWORD PTR [ebp+0xc]
10001039:	push   DWORD PTR [ebp+0x8]
1000103c:	call   0x100434b5
10001041:	mov    eax,DWORD PTR [ebp+0x8]
10001044:	add    esp,0x10
10001047:	pop    ebp
10001048:	ret    
10001049:	push   ebp
1000104a:	mov    ebp,esp
1000104c:	push   DWORD PTR [ebp+0x14]
1000104f:	push   DWORD PTR [ebp+0x10]
10001052:	push   DWORD PTR [ebp+0xc]
10001055:	push   DWORD PTR [ebp+0x8]
10001058:	call   0x10042f96
1000105d:	mov    eax,DWORD PTR [ebp+0x8]
10001060:	add    esp,0x10
10001063:	pop    ebp
10001064:	ret    
10001065:	push   0x4
10001067:	mov    eax,0x1005fa11
1000106c:	call   0x10059b25
10001071:	mov    esi,ecx
10001073:	mov    DWORD PTR [ebp-0x10],esi
10001076:	call   0x10042ff1
1000107b:	and    DWORD PTR [ebp-0x4],0x0
1000107f:	push   DWORD PTR [ebp+0x8]
10001082:	lea    ecx,[esi+0xc]
10001085:	mov    DWORD PTR [esi],0x1006b960
1000108b:	call   0x100011a2
10001090:	mov    eax,esi
10001092:	call   0x10059bfd
10001097:	ret    0x4
1000109a:	push   esi
1000109b:	mov    esi,ecx
1000109d:	push   0x0
1000109f:	push   0x1
100010a1:	lea    ecx,[esi+0xc]
100010a4:	mov    DWORD PTR [esi],0x1006b960
100010aa:	call   0x100012eb
100010af:	mov    ecx,esi
100010b1:	pop    esi
100010b2:	jmp    0x100430c0
100010b7:	push   esi
100010b8:	mov    esi,ecx
100010ba:	call   0x1000109a
100010bf:	test   BYTE PTR [esp+0x8],0x1
100010c4:	je     0x100010cd
100010c6:	push   esi
100010c7:	call   0x10042f82
100010cc:	pop    ecx
100010cd:	mov    eax,esi
100010cf:	pop    esi
100010d0:	ret    0x4
100010d3:	mov    DWORD PTR [ecx],0x1006b978
100010d9:	jmp    0x1000109a
100010de:	push   esi
100010df:	mov    esi,ecx
100010e1:	mov    DWORD PTR [esi],0x1006b978
100010e7:	call   0x1000109a
100010ec:	test   BYTE PTR [esp+0x8],0x1
100010f1:	je     0x100010fa
100010f3:	push   esi
100010f4:	call   0x10042f82
100010f9:	pop    ecx
100010fa:	mov    eax,esi
100010fc:	pop    esi
100010fd:	ret    0x4
10001100:	push   esi
10001101:	push   DWORD PTR [esp+0x8]
10001105:	mov    esi,ecx
10001107:	call   0x10001118
1000110c:	mov    DWORD PTR [esi],0x1006b978
10001112:	mov    eax,esi
10001114:	pop    esi
10001115:	ret    0x4
10001118:	push   0x4
1000111a:	mov    eax,0x1005fa11
1000111f:	call   0x10059b25
10001124:	mov    esi,ecx
10001126:	mov    DWORD PTR [ebp-0x10],esi
10001129:	mov    edi,DWORD PTR [ebp+0x8]
1000112c:	push   edi
1000112d:	call   0x10043068
10001132:	and    DWORD PTR [ebp-0x4],0x0
10001136:	add    edi,0xc
10001139:	push   edi
1000113a:	lea    ecx,[esi+0xc]
1000113d:	mov    DWORD PTR [esi],0x1006b960
10001143:	call   0x100011a2
10001148:	mov    eax,esi
1000114a:	call   0x10059bfd
1000114f:	ret    0x4
10001152:	push   0x28
10001154:	mov    eax,0x100631b4
10001159:	call   0x10059b8e
1000115e:	mov    eax,DWORD PTR [ebp+0x8]
10001161:	lea    edx,[ebp-0x34]
10001164:	push   edx
10001165:	push   eax
10001166:	call   0x10019b04
1000116b:	and    DWORD PTR [ebp-0x4],0x0
1000116f:	lea    edi,[ebp-0x34]
10001172:	call   0x100199a9
10001177:	mov    bl,al
10001179:	neg    bl
1000117b:	push   0x0
1000117d:	sbb    bl,bl
1000117f:	push   0x1
10001181:	lea    ecx,[ebp-0x30]
10001184:	inc    bl
10001186:	call   0x100012eb
1000118b:	mov    al,bl
1000118d:	call   0x10059c11
10001192:	ret    0x4
10001195:	push   0x0
10001197:	push   0x1
10001199:	add    ecx,0x4
1000119c:	call   0x100012eb
100011a1:	ret    
100011a2:	push   esi
100011a3:	mov    esi,ecx
100011a5:	push   0x0
100011a7:	mov    DWORD PTR [esi+0x18],0xf
100011ae:	call   0x10001417
100011b3:	push   0xffffffff
100011b5:	push   0x0
100011b7:	push   DWORD PTR [esp+0x10]
100011bb:	mov    ecx,esi
100011bd:	call   0x1000123c
100011c2:	mov    eax,esi
100011c4:	pop    esi
100011c5:	ret    0x4
100011c8:	push   esi
100011c9:	mov    esi,ecx
100011cb:	push   0x0
100011cd:	mov    DWORD PTR [esi+0x18],0xf
100011d4:	call   0x10001417
100011d9:	push   DWORD PTR [esp+0x8]
100011dd:	mov    ecx,esi
100011df:	call   0x100012ce
100011e4:	mov    eax,esi
100011e6:	pop    esi
100011e7:	ret    0x4
100011ea:	cmp    DWORD PTR [ecx+0x18],0x10
100011ee:	jb     0x100011f4
100011f0:	mov    eax,DWORD PTR [ecx+0x4]
100011f3:	ret    
100011f4:	lea    eax,[ecx+0x4]
100011f7:	ret    
100011f8:	push   0x0
100011fa:	mov    eax,0x10061d81
100011ff:	call   0x10059b25
10001204:	mov    esi,DWORD PTR [ebp+0x8]
10001207:	and    DWORD PTR [ebp-0x4],0x0
1000120b:	push   DWORD PTR [esi+0x18]
1000120e:	call   DWORD PTR ds:0x10066070
10001214:	lea    eax,[esi+0xc]
10001217:	call   0x10001491
1000121c:	or     DWORD PTR [ebp-0x4],0xffffffff
10001220:	mov    eax,esi
10001222:	call   0x100014c6
10001227:	call   0x10059bfd
1000122c:	ret    0x4
1000122f:	jmp    0x100014c6
10001234:	push   ecx
10001235:	call   0x10001491
1000123a:	pop    ecx
1000123b:	ret    
1000123c:	push   ebp
1000123d:	mov    ebp,esp
1000123f:	mov    eax,DWORD PTR [ebp+0xc]
10001242:	push   ebx
10001243:	push   esi
10001244:	push   edi
10001245:	mov    edi,DWORD PTR [ebp+0x8]
10001248:	cmp    DWORD PTR [edi+0x14],eax
1000124b:	mov    ebx,ecx
1000124d:	jae    0x10001254
1000124f:	call   0x100572cf
10001254:	mov    esi,DWORD PTR [edi+0x14]
10001257:	mov    eax,DWORD PTR [ebp+0xc]
1000125a:	sub    esi,eax
1000125c:	cmp    DWORD PTR [ebp+0x10],esi
1000125f:	jae    0x10001264
10001261:	mov    esi,DWORD PTR [ebp+0x10]
10001264:	cmp    ebx,edi
10001266:	mov    ecx,ebx
10001268:	jne    0x10001282
1000126a:	push   0xffffffff
1000126c:	add    esi,eax
1000126e:	push   esi
1000126f:	call   0x100013a8
10001274:	push   DWORD PTR [ebp+0xc]
10001277:	mov    ecx,ebx
10001279:	push   0x0
1000127b:	call   0x100013a8
10001280:	jmp    0x100012c5
10001282:	push   0x0
10001284:	push   esi
10001285:	call   0x10001433
1000128a:	test   al,al
1000128c:	je     0x100012c5
1000128e:	cmp    DWORD PTR [edi+0x18],0x10
10001292:	jb     0x10001299
10001294:	mov    edi,DWORD PTR [edi+0x4]
10001297:	jmp    0x1000129c
10001299:	add    edi,0x4
1000129c:	mov    ecx,DWORD PTR [ebx+0x18]
1000129f:	cmp    ecx,0x10
100012a2:	jb     0x100012a9
100012a4:	mov    eax,DWORD PTR [ebx+0x4]
100012a7:	jmp    0x100012ac
100012a9:	lea    eax,[ebx+0x4]
100012ac:	mov    edx,DWORD PTR [ebp+0xc]
100012af:	push   esi
100012b0:	add    edi,edx
100012b2:	push   edi
100012b3:	push   ecx
100012b4:	push   eax
100012b5:	call   0x1000102d
100012ba:	add    esp,0x10
100012bd:	push   esi
100012be:	mov    ecx,ebx
100012c0:	call   0x10001417
100012c5:	pop    edi
100012c6:	pop    esi
100012c7:	mov    eax,ebx
100012c9:	pop    ebx
100012ca:	pop    ebp
100012cb:	ret    0xc
100012ce:	push   esi
100012cf:	push   DWORD PTR [esp+0x8]
100012d3:	mov    esi,ecx
100012d5:	call   0x10043100
100012da:	pop    ecx
100012db:	push   eax
100012dc:	push   DWORD PTR [esp+0xc]
100012e0:	mov    ecx,esi
100012e2:	call   0x10001336
100012e7:	pop    esi
100012e8:	ret    0x4
100012eb:	cmp    BYTE PTR [esp+0x4],0x0
100012f0:	push   esi
100012f1:	mov    esi,ecx
100012f3:	je     0x10001320
100012f5:	cmp    DWORD PTR [esi+0x18],0x10
100012f9:	jb     0x10001320
100012fb:	cmp    DWORD PTR [esp+0xc],0x0
10001300:	lea    eax,[esi+0x4]
10001303:	push   edi
10001304:	mov    edi,DWORD PTR [eax]
10001306:	jbe    0x10001318
10001308:	push   DWORD PTR [esp+0x10]
1000130c:	push   edi
1000130d:	push   0x10
1000130f:	push   eax
10001310:	call   0x1000102d
10001315:	add    esp,0x10
10001318:	push   edi
10001319:	call   0x10042f82
1000131e:	pop    ecx
1000131f:	pop    edi
10001320:	push   DWORD PTR [esp+0xc]
10001324:	mov    ecx,esi
10001326:	mov    DWORD PTR [esi+0x18],0xf
1000132d:	call   0x10001417
10001332:	pop    esi
10001333:	ret    0x8
10001336:	push   ebp
10001337:	mov    ebp,esp
10001339:	push   esi
1000133a:	push   edi
1000133b:	mov    edi,DWORD PTR [ebp+0x8]
1000133e:	push   edi
1000133f:	mov    esi,ecx
10001341:	call   0x100015dd
10001346:	test   al,al
10001348:	je     0x10001368
1000134a:	cmp    DWORD PTR [esi+0x18],0x10
1000134e:	jb     0x10001355
10001350:	mov    eax,DWORD PTR [esi+0x4]
10001353:	jmp    0x10001358
10001355:	lea    eax,[esi+0x4]
10001358:	push   DWORD PTR [ebp+0xc]
1000135b:	sub    edi,eax
1000135d:	push   edi
1000135e:	push   esi
1000135f:	mov    ecx,esi
10001361:	call   0x1000123c
10001366:	jmp    0x100013a2
10001368:	push   0x0
1000136a:	push   DWORD PTR [ebp+0xc]
1000136d:	mov    ecx,esi
1000136f:	call   0x10001433
10001374:	test   al,al
10001376:	je     0x100013a0
10001378:	mov    ecx,DWORD PTR [esi+0x18]
1000137b:	cmp    ecx,0x10
1000137e:	jb     0x10001385
10001380:	mov    eax,DWORD PTR [esi+0x4]
10001383:	jmp    0x10001388
10001385:	lea    eax,[esi+0x4]
10001388:	push   DWORD PTR [ebp+0xc]
1000138b:	push   edi
1000138c:	push   ecx
1000138d:	push   eax
1000138e:	call   0x1000102d
10001393:	add    esp,0x10
10001396:	push   DWORD PTR [ebp+0xc]
10001399:	mov    ecx,esi
1000139b:	call   0x10001417
100013a0:	mov    eax,esi
100013a2:	pop    edi
100013a3:	pop    esi
100013a4:	pop    ebp
100013a5:	ret    0x8
100013a8:	push   ebp
100013a9:	mov    ebp,esp
100013ab:	push   esi
100013ac:	push   edi
100013ad:	mov    edi,DWORD PTR [ebp+0x8]
100013b0:	mov    esi,ecx
100013b2:	cmp    DWORD PTR [esi+0x14],edi
100013b5:	jae    0x100013bc
100013b7:	call   0x100572cf
100013bc:	mov    eax,DWORD PTR [esi+0x14]
100013bf:	sub    eax,edi
100013c1:	cmp    eax,DWORD PTR [ebp+0xc]
100013c4:	jae    0x100013c9
100013c6:	mov    DWORD PTR [ebp+0xc],eax
100013c9:	cmp    DWORD PTR [ebp+0xc],0x0
100013cd:	jbe    0x1000140f
100013cf:	mov    ecx,DWORD PTR [esi+0x18]
100013d2:	cmp    ecx,0x10
100013d5:	push   ebx
100013d6:	lea    edx,[esi+0x4]
100013d9:	jb     0x100013df
100013db:	mov    ebx,DWORD PTR [edx]
100013dd:	jmp    0x100013e1
100013df:	mov    ebx,edx
100013e1:	cmp    ecx,0x10
100013e4:	jb     0x100013e8
100013e6:	mov    edx,DWORD PTR [edx]
100013e8:	sub    eax,DWORD PTR [ebp+0xc]
100013eb:	add    ebx,edi
100013ed:	add    ebx,DWORD PTR [ebp+0xc]
100013f0:	push   eax
100013f1:	push   ebx
100013f2:	sub    ecx,edi
100013f4:	push   ecx
100013f5:	add    edx,edi
100013f7:	push   edx
100013f8:	call   0x10001049
100013fd:	mov    eax,DWORD PTR [esi+0x14]
10001400:	sub    eax,DWORD PTR [ebp+0xc]
10001403:	add    esp,0x10
10001406:	push   eax
10001407:	mov    ecx,esi
10001409:	call   0x10001417
1000140e:	pop    ebx
1000140f:	pop    edi
10001410:	mov    eax,esi
10001412:	pop    esi
10001413:	pop    ebp
10001414:	ret    0x8
10001417:	cmp    DWORD PTR [ecx+0x18],0x10
1000141b:	mov    eax,DWORD PTR [esp+0x4]
1000141f:	mov    DWORD PTR [ecx+0x14],eax
10001422:	jb     0x10001429
10001424:	mov    ecx,DWORD PTR [ecx+0x4]
10001427:	jmp    0x1000142c
10001429:	add    ecx,0x4
1000142c:	mov    BYTE PTR [ecx+eax*1],0x0
10001430:	ret    0x4
10001433:	push   esi
10001434:	push   edi
10001435:	mov    edi,DWORD PTR [esp+0xc]
10001439:	cmp    edi,0xfffffffe
1000143c:	mov    esi,ecx
1000143e:	jbe    0x10001445
10001440:	call   0x10057290
10001445:	cmp    DWORD PTR [esi+0x18],edi
10001448:	jae    0x10001457
1000144a:	push   DWORD PTR [esi+0x14]
1000144d:	mov    ecx,esi
1000144f:	push   edi
10001450:	call   0x100014fb
10001455:	jmp    0x10001484
10001457:	cmp    BYTE PTR [esp+0x10],0x0
1000145c:	je     0x10001478
1000145e:	cmp    edi,0x10
10001461:	jae    0x10001478
10001463:	mov    eax,DWORD PTR [esi+0x14]
10001466:	cmp    edi,eax
10001468:	jae    0x1000146c
1000146a:	mov    eax,edi
1000146c:	push   eax
1000146d:	push   0x1
1000146f:	mov    ecx,esi
10001471:	call   0x100012eb
10001476:	jmp    0x10001484
10001478:	test   edi,edi
1000147a:	jne    0x10001484
1000147c:	push   edi
1000147d:	mov    ecx,esi
1000147f:	call   0x10001417
10001484:	xor    eax,eax
10001486:	cmp    eax,edi
10001488:	sbb    eax,eax
1000148a:	pop    edi
1000148b:	neg    eax
1000148d:	pop    esi
1000148e:	ret    0x8
10001491:	push   ebp
10001492:	mov    ebp,esp
10001494:	and    esp,0xfffffff8
10001497:	push   ecx
10001498:	push   ecx
10001499:	push   ebx
1000149a:	push   edi
1000149b:	mov    edi,eax
1000149d:	mov    eax,DWORD PTR [edi+0x4]
100014a0:	mov    ecx,DWORD PTR [eax]
100014a2:	push   eax
100014a3:	push   edi
100014a4:	push   ecx
100014a5:	push   edi
100014a6:	lea    ebx,[esp+0x18]
100014aa:	call   0x10001611
100014af:	push   DWORD PTR [edi+0x4]
100014b2:	call   0x10042f82
100014b7:	and    DWORD PTR [edi+0x4],0x0
100014bb:	and    DWORD PTR [edi+0x8],0x0
100014bf:	pop    ecx
100014c0:	pop    edi
100014c1:	pop    ebx
100014c2:	mov    esp,ebp
100014c4:	pop    ebp
100014c5:	ret    
100014c6:	push   ebp
100014c7:	mov    ebp,esp
100014c9:	and    esp,0xfffffff8
100014cc:	push   ecx
100014cd:	push   ecx
100014ce:	push   ebx
100014cf:	push   edi
100014d0:	mov    edi,eax
100014d2:	mov    eax,DWORD PTR [edi+0x4]
100014d5:	mov    ecx,DWORD PTR [eax]
100014d7:	push   eax
100014d8:	push   edi
100014d9:	push   ecx
100014da:	push   edi
100014db:	lea    ebx,[esp+0x18]
100014df:	call   0x100016bd
100014e4:	push   DWORD PTR [edi+0x4]
100014e7:	call   0x10042f82
100014ec:	and    DWORD PTR [edi+0x4],0x0
100014f0:	and    DWORD PTR [edi+0x8],0x0
100014f4:	pop    ecx
100014f5:	pop    edi
100014f6:	pop    ebx
100014f7:	mov    esp,ebp
100014f9:	pop    ebp
100014fa:	ret    
100014fb:	push   0xc
100014fd:	mov    eax,0x1005f9ee
10001502:	call   0x10059b58
10001507:	mov    edi,ecx
10001509:	mov    DWORD PTR [ebp-0x18],edi
1000150c:	mov    esi,DWORD PTR [ebp+0x8]
1000150f:	or     esi,0xf
10001512:	cmp    esi,0xfffffffe
10001515:	jbe    0x1000151c
10001517:	mov    esi,DWORD PTR [ebp+0x8]
1000151a:	jmp    0x10001541
1000151c:	xor    edx,edx
1000151e:	push   0x3
10001520:	mov    eax,esi
10001522:	pop    ebx
10001523:	div    ebx
10001525:	mov    ecx,DWORD PTR [edi+0x18]
10001528:	mov    DWORD PTR [ebp-0x14],ecx
1000152b:	shr    DWORD PTR [ebp-0x14],1
1000152e:	mov    edx,DWORD PTR [ebp-0x14]
10001531:	cmp    eax,edx
10001533:	jae    0x10001541
10001535:	push   0xfffffffe
10001537:	pop    eax
10001538:	sub    eax,edx
1000153a:	cmp    ecx,eax
1000153c:	ja     0x10001541
1000153e:	lea    esi,[edx+ecx*1]
10001541:	and    DWORD PTR [ebp-0x4],0x0
10001545:	lea    eax,[esi+0x1]
10001548:	push   0x0
1000154a:	push   eax
1000154b:	call   0x10001eb9
10001550:	pop    ecx
10001551:	pop    ecx
10001552:	mov    ebx,eax
10001554:	jmp    0x10001580
10001556:	mov    eax,DWORD PTR [ebp+0x8]
10001559:	mov    DWORD PTR [ebp-0x10],esp
1000155c:	mov    DWORD PTR [ebp+0x8],eax
1000155f:	inc    eax
10001560:	push   0x0
10001562:	push   eax
10001563:	mov    BYTE PTR [ebp-0x4],0x2
10001567:	call   0x10001eb9
1000156c:	pop    ecx
1000156d:	mov    DWORD PTR [ebp-0x14],eax
10001570:	pop    ecx
10001571:	mov    eax,0x10001577
10001576:	ret    
10001577:	mov    edi,DWORD PTR [ebp-0x18]
1000157a:	mov    esi,DWORD PTR [ebp+0x8]
1000157d:	mov    ebx,DWORD PTR [ebp-0x14]
10001580:	cmp    DWORD PTR [ebp+0xc],0x0
10001584:	jbe    0x100015a5
10001586:	cmp    DWORD PTR [edi+0x18],0x10
1000158a:	jb     0x10001591
1000158c:	mov    eax,DWORD PTR [edi+0x4]
1000158f:	jmp    0x10001594
10001591:	lea    eax,[edi+0x4]
10001594:	push   DWORD PTR [ebp+0xc]
10001597:	push   eax
10001598:	lea    eax,[esi+0x1]
1000159b:	push   eax
1000159c:	push   ebx
1000159d:	call   0x1000102d
100015a2:	add    esp,0x10
100015a5:	push   0x0
100015a7:	push   0x1
100015a9:	mov    ecx,edi
100015ab:	call   0x100012eb
100015b0:	push   DWORD PTR [ebp+0xc]
100015b3:	mov    ecx,edi
100015b5:	mov    DWORD PTR [edi+0x4],ebx
100015b8:	mov    DWORD PTR [edi+0x18],esi
100015bb:	call   0x10001417
100015c0:	call   0x10059bfd
100015c5:	ret    0x8
100015c8:	mov    ecx,DWORD PTR [ebp-0x18]
100015cb:	xor    esi,esi
100015cd:	push   esi
100015ce:	push   0x1
100015d0:	call   0x100012eb
100015d5:	push   esi
100015d6:	push   esi
100015d7:	call   0x10047aa4
100015dc:	int3   
100015dd:	push   esi
100015de:	mov    esi,DWORD PTR [ecx+0x18]
100015e1:	cmp    esi,0x10
100015e4:	lea    eax,[ecx+0x4]
100015e7:	jb     0x100015ed
100015e9:	mov    edx,DWORD PTR [eax]
100015eb:	jmp    0x100015ef
100015ed:	mov    edx,eax
100015ef:	cmp    DWORD PTR [esp+0x8],edx
100015f3:	jb     0x1000160b
100015f5:	cmp    esi,0x10
100015f8:	jb     0x100015fc
100015fa:	mov    eax,DWORD PTR [eax]
100015fc:	mov    ecx,DWORD PTR [ecx+0x14]
100015ff:	add    ecx,eax
10001601:	cmp    ecx,DWORD PTR [esp+0x8]
10001605:	jbe    0x1000160b
10001607:	mov    al,0x1
10001609:	jmp    0x1000160d
1000160b:	xor    al,al
1000160d:	pop    esi
1000160e:	ret    0x4
10001611:	push   ebp
10001612:	mov    ebp,esp
10001614:	mov    eax,DWORD PTR [edi+0x4]
10001617:	sub    esp,0x14
1000161a:	cmp    DWORD PTR [ebp+0x8],0x0
1000161e:	push   esi
1000161f:	mov    esi,DWORD PTR [eax]
10001621:	je     0x10001628
10001623:	cmp    DWORD PTR [ebp+0x8],edi
10001626:	je     0x1000162d
10001628:	call   0x100434a0
1000162d:	cmp    DWORD PTR [ebp+0xc],esi
10001630:	jne    0x10001675
10001632:	cmp    DWORD PTR [ebp+0x10],0x0
10001636:	mov    esi,DWORD PTR [edi+0x4]
10001639:	je     0x10001640
1000163b:	cmp    DWORD PTR [ebp+0x10],edi
1000163e:	je     0x10001645
10001640:	call   0x100434a0
10001645:	cmp    DWORD PTR [ebp+0x14],esi
10001648:	jne    0x10001675
1000164a:	mov    eax,DWORD PTR [edi+0x4]
1000164d:	push   DWORD PTR [eax+0x4]
10001650:	mov    ecx,edi
10001652:	call   0x10001c97
10001657:	mov    eax,DWORD PTR [edi+0x4]
1000165a:	mov    DWORD PTR [eax+0x4],eax
1000165d:	mov    eax,DWORD PTR [edi+0x4]
10001660:	and    DWORD PTR [edi+0x8],0x0
10001664:	mov    DWORD PTR [eax],eax
10001666:	mov    eax,DWORD PTR [edi+0x4]
10001669:	mov    DWORD PTR [eax+0x8],eax
1000166c:	mov    eax,DWORD PTR [edi+0x4]
1000166f:	mov    eax,DWORD PTR [eax]
10001671:	mov    DWORD PTR [ebx],edi
10001673:	jmp    0x100016b3
10001675:	mov    eax,DWORD PTR [ebp+0x8]
10001678:	test   eax,eax
1000167a:	je     0x10001681
1000167c:	cmp    eax,DWORD PTR [ebp+0x10]
1000167f:	je     0x10001686
10001681:	call   0x100434a0
10001686:	mov    eax,DWORD PTR [ebp+0xc]
10001689:	cmp    eax,DWORD PTR [ebp+0x14]
1000168c:	mov    ecx,DWORD PTR [ebp+0x8]
1000168f:	je     0x100016b1
10001691:	lea    esi,[ebp+0x8]
10001694:	mov    DWORD PTR [ebp-0x8],ecx
10001697:	mov    DWORD PTR [ebp-0x4],eax
1000169a:	call   0x10001e6c
1000169f:	push   DWORD PTR [ebp-0x4]
100016a2:	lea    eax,[ebp-0x10]
100016a5:	push   DWORD PTR [ebp-0x8]
100016a8:	push   eax
100016a9:	push   edi
100016aa:	call   0x10001769
100016af:	jmp    0x10001675
100016b1:	mov    DWORD PTR [ebx],ecx
100016b3:	mov    DWORD PTR [ebx+0x4],eax
100016b6:	mov    eax,ebx
100016b8:	pop    esi
100016b9:	leave  
100016ba:	ret    0x10
100016bd:	push   ebp
100016be:	mov    ebp,esp
100016c0:	mov    eax,DWORD PTR [edi+0x4]
100016c3:	sub    esp,0x14
100016c6:	cmp    DWORD PTR [ebp+0x8],0x0
100016ca:	push   esi
100016cb:	mov    esi,DWORD PTR [eax]
100016cd:	je     0x100016d4
100016cf:	cmp    DWORD PTR [ebp+0x8],edi
100016d2:	je     0x100016d9
100016d4:	call   0x100434a0
100016d9:	cmp    DWORD PTR [ebp+0xc],esi
100016dc:	jne    0x10001721
100016de:	cmp    DWORD PTR [ebp+0x10],0x0
100016e2:	mov    esi,DWORD PTR [edi+0x4]
100016e5:	je     0x100016ec
100016e7:	cmp    DWORD PTR [ebp+0x10],edi
100016ea:	je     0x100016f1
100016ec:	call   0x100434a0
100016f1:	cmp    DWORD PTR [ebp+0x14],esi
100016f4:	jne    0x10001721
100016f6:	mov    eax,DWORD PTR [edi+0x4]
100016f9:	push   DWORD PTR [eax+0x4]
100016fc:	mov    ecx,edi
100016fe:	call   0x10001d4b
10001703:	mov    eax,DWORD PTR [edi+0x4]
10001706:	mov    DWORD PTR [eax+0x4],eax
10001709:	mov    eax,DWORD PTR [edi+0x4]
1000170c:	and    DWORD PTR [edi+0x8],0x0
10001710:	mov    DWORD PTR [eax],eax
10001712:	mov    eax,DWORD PTR [edi+0x4]
10001715:	mov    DWORD PTR [eax+0x8],eax
10001718:	mov    eax,DWORD PTR [edi+0x4]
1000171b:	mov    eax,DWORD PTR [eax]
1000171d:	mov    DWORD PTR [ebx],edi
1000171f:	jmp    0x1000175f
10001721:	mov    eax,DWORD PTR [ebp+0x8]
10001724:	test   eax,eax
10001726:	je     0x1000172d
10001728:	cmp    eax,DWORD PTR [ebp+0x10]
1000172b:	je     0x10001732
1000172d:	call   0x100434a0
10001732:	mov    eax,DWORD PTR [ebp+0xc]
10001735:	cmp    eax,DWORD PTR [ebp+0x14]
10001738:	mov    ecx,DWORD PTR [ebp+0x8]
1000173b:	je     0x1000175d
1000173d:	lea    esi,[ebp+0x8]
10001740:	mov    DWORD PTR [ebp-0x8],ecx
10001743:	mov    DWORD PTR [ebp-0x4],eax
10001746:	call   0x10001e1f
1000174b:	push   DWORD PTR [ebp-0x4]
1000174e:	lea    eax,[ebp-0x10]
10001751:	push   DWORD PTR [ebp-0x8]
10001754:	push   eax
10001755:	push   edi
10001756:	call   0x100019f3
1000175b:	jmp    0x10001721
1000175d:	mov    DWORD PTR [ebx],ecx
1000175f:	mov    DWORD PTR [ebx+0x4],eax
10001762:	mov    eax,ebx
10001764:	pop    esi
10001765:	leave  
10001766:	ret    0x10
10001769:	push   0x44
1000176b:	mov    eax,0x10060374
10001770:	call   0x10059b25
10001775:	mov    ebx,DWORD PTR [ebp+0x14]
10001778:	cmp    BYTE PTR [ebx+0x11],0x0
1000177c:	je     0x100017b0
1000177e:	push   0x1006ccec
10001783:	lea    ecx,[ebp-0x28]
10001786:	call   0x100011c8
1000178b:	and    DWORD PTR [ebp-0x4],0x0
1000178f:	lea    eax,[ebp-0x28]
10001792:	push   eax
10001793:	lea    ecx,[ebp-0x50]
10001796:	call   0x10001065
1000179b:	push   0x10074de8
100017a0:	lea    eax,[ebp-0x50]
100017a3:	push   eax
100017a4:	mov    DWORD PTR [ebp-0x50],0x1006b978
100017ab:	call   0x10047aa4
100017b0:	lea    esi,[ebp+0x10]
100017b3:	call   0x10001e6c
100017b8:	mov    ecx,DWORD PTR [ebx]
100017ba:	cmp    BYTE PTR [ecx+0x11],0x0
100017be:	je     0x100017c5
100017c0:	mov    edi,DWORD PTR [ebx+0x8]
100017c3:	jmp    0x100017dc
100017c5:	mov    eax,DWORD PTR [ebx+0x8]
100017c8:	cmp    BYTE PTR [eax+0x11],0x0
100017cc:	je     0x100017d2
100017ce:	mov    edi,ecx
100017d0:	jmp    0x100017dc
100017d2:	mov    eax,DWORD PTR [ebp+0x14]
100017d5:	cmp    eax,ebx
100017d7:	mov    edi,DWORD PTR [eax+0x8]
100017da:	jne    0x10001852
100017dc:	cmp    BYTE PTR [edi+0x11],0x0
100017e0:	mov    esi,DWORD PTR [ebx+0x4]
100017e3:	jne    0x100017e8
100017e5:	mov    DWORD PTR [edi+0x4],esi
100017e8:	mov    ecx,DWORD PTR [ebp+0x8]
100017eb:	mov    eax,DWORD PTR [ecx+0x4]
100017ee:	cmp    DWORD PTR [eax+0x4],ebx
100017f1:	jne    0x100017f8
100017f3:	mov    DWORD PTR [eax+0x4],edi
100017f6:	jmp    0x10001803
100017f8:	cmp    DWORD PTR [esi],ebx
100017fa:	jne    0x10001800
100017fc:	mov    DWORD PTR [esi],edi
100017fe:	jmp    0x10001803
10001800:	mov    DWORD PTR [esi+0x8],edi
10001803:	mov    edx,DWORD PTR [ecx+0x4]
10001806:	cmp    DWORD PTR [edx],ebx
10001808:	jne    0x10001826
1000180a:	cmp    BYTE PTR [edi+0x11],0x0
1000180e:	je     0x10001814
10001810:	mov    ecx,esi
10001812:	jmp    0x10001824
10001814:	mov    eax,DWORD PTR [edi]
10001816:	mov    ecx,edi
10001818:	jmp    0x1000181e
1000181a:	mov    ecx,eax
1000181c:	mov    eax,DWORD PTR [ecx]
1000181e:	cmp    BYTE PTR [eax+0x11],0x0
10001822:	je     0x1000181a
10001824:	mov    DWORD PTR [edx],ecx
10001826:	mov    eax,DWORD PTR [ebp+0x8]
10001829:	mov    edx,DWORD PTR [eax+0x4]
1000182c:	cmp    DWORD PTR [edx+0x8],ebx
1000182f:	jne    0x100018ac
10001831:	cmp    BYTE PTR [edi+0x11],0x0
10001835:	je     0x1000183b
10001837:	mov    ecx,esi
10001839:	jmp    0x1000184d
1000183b:	mov    eax,DWORD PTR [edi+0x8]
1000183e:	mov    ecx,edi
10001840:	jmp    0x10001847
10001842:	mov    ecx,eax
10001844:	mov    eax,DWORD PTR [ecx+0x8]
10001847:	cmp    BYTE PTR [eax+0x11],0x0
1000184b:	je     0x10001842
1000184d:	mov    DWORD PTR [edx+0x8],ecx
10001850:	jmp    0x100018ac
10001852:	mov    DWORD PTR [ecx+0x4],eax
10001855:	mov    ecx,DWORD PTR [ebx]
10001857:	mov    DWORD PTR [eax],ecx
10001859:	cmp    eax,DWORD PTR [ebx+0x8]
1000185c:	jne    0x10001862
1000185e:	mov    esi,eax
10001860:	jmp    0x1000187c
10001862:	cmp    BYTE PTR [edi+0x11],0x0
10001866:	mov    esi,DWORD PTR [eax+0x4]
10001869:	jne    0x1000186e
1000186b:	mov    DWORD PTR [edi+0x4],esi
1000186e:	mov    DWORD PTR [esi],edi
10001870:	mov    ecx,DWORD PTR [ebx+0x8]
10001873:	mov    DWORD PTR [eax+0x8],ecx
10001876:	mov    ecx,DWORD PTR [ebx+0x8]
10001879:	mov    DWORD PTR [ecx+0x4],eax
1000187c:	mov    ecx,DWORD PTR [ebp+0x8]
1000187f:	mov    ecx,DWORD PTR [ecx+0x4]
10001882:	cmp    DWORD PTR [ecx+0x4],ebx
10001885:	jne    0x1000188c
10001887:	mov    DWORD PTR [ecx+0x4],eax
1000188a:	jmp    0x1000189a
1000188c:	mov    ecx,DWORD PTR [ebx+0x4]
1000188f:	cmp    DWORD PTR [ecx],ebx
10001891:	jne    0x10001897
10001893:	mov    DWORD PTR [ecx],eax
10001895:	jmp    0x1000189a
10001897:	mov    DWORD PTR [ecx+0x8],eax
1000189a:	mov    ecx,DWORD PTR [ebx+0x4]
1000189d:	mov    DWORD PTR [eax+0x4],ecx
100018a0:	mov    dl,BYTE PTR [ebx+0x10]
100018a3:	mov    cl,BYTE PTR [eax+0x10]
100018a6:	mov    BYTE PTR [eax+0x10],dl
100018a9:	mov    BYTE PTR [ebx+0x10],cl
100018ac:	cmp    BYTE PTR [ebx+0x10],0x1
100018b0:	jne    0x100019c8
100018b6:	jmp    0x1000197c
100018bb:	cmp    BYTE PTR [edi+0x10],0x1
100018bf:	jne    0x100019c4
100018c5:	mov    ecx,DWORD PTR [esi]
100018c7:	cmp    edi,ecx
100018c9:	jne    0x10001942
100018cb:	mov    ecx,DWORD PTR [esi+0x8]
100018ce:	cmp    BYTE PTR [ecx+0x10],0x0
100018d2:	jne    0x100018e9
100018d4:	push   DWORD PTR [ebp+0x8]
100018d7:	mov    BYTE PTR [ecx+0x10],0x1
100018db:	mov    ecx,esi
100018dd:	mov    BYTE PTR [esi+0x10],0x0
100018e1:	call   0x10001cc9
100018e6:	mov    ecx,DWORD PTR [esi+0x8]
100018e9:	cmp    BYTE PTR [ecx+0x11],0x0
100018ed:	jne    0x10001977
100018f3:	mov    eax,DWORD PTR [ecx]
100018f5:	cmp    BYTE PTR [eax+0x10],0x1
100018f9:	jne    0x10001904
100018fb:	mov    eax,DWORD PTR [ecx+0x8]
100018fe:	cmp    BYTE PTR [eax+0x10],0x1
10001902:	je     0x10001973
10001904:	mov    eax,DWORD PTR [ecx+0x8]
10001907:	cmp    BYTE PTR [eax+0x10],0x1
1000190b:	jne    0x10001922
1000190d:	mov    eax,DWORD PTR [ecx]
1000190f:	push   DWORD PTR [ebp+0x8]
10001912:	mov    BYTE PTR [eax+0x10],0x1
10001916:	mov    BYTE PTR [ecx+0x10],0x0
1000191a:	call   0x10001d09
1000191f:	mov    ecx,DWORD PTR [esi+0x8]
10001922:	mov    al,BYTE PTR [esi+0x10]
10001925:	push   DWORD PTR [ebp+0x8]
10001928:	mov    BYTE PTR [ecx+0x10],al
1000192b:	mov    BYTE PTR [esi+0x10],0x1
1000192f:	mov    eax,DWORD PTR [ecx+0x8]
10001932:	mov    ecx,esi
10001934:	mov    BYTE PTR [eax+0x10],0x1
10001938:	call   0x10001cc9
1000193d:	jmp    0x100019c4
10001942:	cmp    BYTE PTR [ecx+0x10],0x0
10001946:	jne    0x1000195c
10001948:	push   DWORD PTR [ebp+0x8]
1000194b:	mov    BYTE PTR [ecx+0x10],0x1
1000194f:	mov    ecx,esi
10001951:	mov    BYTE PTR [esi+0x10],0x0
10001955:	call   0x10001d09
1000195a:	mov    ecx,DWORD PTR [esi]
1000195c:	cmp    BYTE PTR [ecx+0x11],0x0
10001960:	jne    0x10001977
10001962:	mov    eax,DWORD PTR [ecx+0x8]
10001965:	cmp    BYTE PTR [eax+0x10],0x1
10001969:	jne    0x1000198d
1000196b:	mov    eax,DWORD PTR [ecx]
1000196d:	cmp    BYTE PTR [eax+0x10],0x1
10001971:	jne    0x1000198d
10001973:	mov    BYTE PTR [ecx+0x10],0x0
10001977:	mov    edi,esi
10001979:	mov    esi,DWORD PTR [esi+0x4]
1000197c:	mov    eax,DWORD PTR [ebp+0x8]
1000197f:	mov    eax,DWORD PTR [eax+0x4]
10001982:	cmp    edi,DWORD PTR [eax+0x4]
10001985:	jne    0x100018bb
1000198b:	jmp    0x100019c4
1000198d:	mov    eax,DWORD PTR [ecx]
1000198f:	cmp    BYTE PTR [eax+0x10],0x1
10001993:	jne    0x100019aa
10001995:	mov    eax,DWORD PTR [ecx+0x8]
10001998:	push   DWORD PTR [ebp+0x8]
1000199b:	mov    BYTE PTR [eax+0x10],0x1
1000199f:	mov    BYTE PTR [ecx+0x10],0x0
100019a3:	call   0x10001cc9
100019a8:	mov    ecx,DWORD PTR [esi]
100019aa:	mov    al,BYTE PTR [esi+0x10]
100019ad:	push   DWORD PTR [ebp+0x8]
100019b0:	mov    BYTE PTR [ecx+0x10],al
100019b3:	mov    BYTE PTR [esi+0x10],0x1
100019b7:	mov    eax,DWORD PTR [ecx]
100019b9:	mov    ecx,esi
100019bb:	mov    BYTE PTR [eax+0x10],0x1
100019bf:	call   0x10001d09
100019c4:	mov    BYTE PTR [edi+0x10],0x1
100019c8:	push   ebx
100019c9:	call   0x10042f82
100019ce:	pop    ecx
100019cf:	mov    ecx,DWORD PTR [ebp+0x8]
100019d2:	mov    eax,DWORD PTR [ecx+0x8]
100019d5:	test   eax,eax
100019d7:	jbe    0x100019dd
100019d9:	dec    eax
100019da:	mov    DWORD PTR [ecx+0x8],eax
100019dd:	mov    ecx,DWORD PTR [ebp+0x10]
100019e0:	mov    eax,DWORD PTR [ebp+0xc]
100019e3:	mov    DWORD PTR [eax],ecx
100019e5:	mov    ecx,DWORD PTR [ebp+0x14]
100019e8:	mov    DWORD PTR [eax+0x4],ecx
100019eb:	call   0x10059bfd
100019f0:	ret    0x10
100019f3:	push   0x44
100019f5:	mov    eax,0x10060374
100019fa:	call   0x10059b25
100019ff:	mov    edi,DWORD PTR [ebp+0x14]
10001a02:	cmp    BYTE PTR [edi+0x4d],0x0
10001a06:	je     0x10001a3a
10001a08:	push   0x1006ccec
10001a0d:	lea    ecx,[ebp-0x28]
10001a10:	call   0x100011c8
10001a15:	and    DWORD PTR [ebp-0x4],0x0
10001a19:	lea    eax,[ebp-0x28]
10001a1c:	push   eax
10001a1d:	lea    ecx,[ebp-0x50]
10001a20:	call   0x10001065
10001a25:	push   0x10074de8
10001a2a:	lea    eax,[ebp-0x50]
10001a2d:	push   eax
10001a2e:	mov    DWORD PTR [ebp-0x50],0x1006b978
10001a35:	call   0x10047aa4
10001a3a:	lea    esi,[ebp+0x10]
10001a3d:	call   0x10001e1f
10001a42:	mov    ecx,DWORD PTR [edi]
10001a44:	cmp    BYTE PTR [ecx+0x4d],0x0
10001a48:	je     0x10001a4f
10001a4a:	mov    ebx,DWORD PTR [edi+0x8]
10001a4d:	jmp    0x10001a66
10001a4f:	mov    eax,DWORD PTR [edi+0x8]
10001a52:	cmp    BYTE PTR [eax+0x4d],0x0
10001a56:	je     0x10001a5c
10001a58:	mov    ebx,ecx
10001a5a:	jmp    0x10001a66
10001a5c:	mov    eax,DWORD PTR [ebp+0x14]
10001a5f:	cmp    eax,edi
10001a61:	mov    ebx,DWORD PTR [eax+0x8]
10001a64:	jne    0x10001adc
10001a66:	cmp    BYTE PTR [ebx+0x4d],0x0
10001a6a:	mov    esi,DWORD PTR [edi+0x4]
10001a6d:	jne    0x10001a72
10001a6f:	mov    DWORD PTR [ebx+0x4],esi
10001a72:	mov    ecx,DWORD PTR [ebp+0x8]
10001a75:	mov    eax,DWORD PTR [ecx+0x4]
10001a78:	cmp    DWORD PTR [eax+0x4],edi
10001a7b:	jne    0x10001a82
10001a7d:	mov    DWORD PTR [eax+0x4],ebx
10001a80:	jmp    0x10001a8d
10001a82:	cmp    DWORD PTR [esi],edi
10001a84:	jne    0x10001a8a
10001a86:	mov    DWORD PTR [esi],ebx
10001a88:	jmp    0x10001a8d
10001a8a:	mov    DWORD PTR [esi+0x8],ebx
10001a8d:	mov    edx,DWORD PTR [ecx+0x4]
10001a90:	cmp    DWORD PTR [edx],edi
10001a92:	jne    0x10001ab0
10001a94:	cmp    BYTE PTR [ebx+0x4d],0x0
10001a98:	je     0x10001a9e
10001a9a:	mov    ecx,esi
10001a9c:	jmp    0x10001aae
10001a9e:	mov    eax,DWORD PTR [ebx]
10001aa0:	mov    ecx,ebx
10001aa2:	jmp    0x10001aa8
10001aa4:	mov    ecx,eax
10001aa6:	mov    eax,DWORD PTR [ecx]
10001aa8:	cmp    BYTE PTR [eax+0x4d],0x0
10001aac:	je     0x10001aa4
10001aae:	mov    DWORD PTR [edx],ecx
10001ab0:	mov    eax,DWORD PTR [ebp+0x8]
10001ab3:	mov    edx,DWORD PTR [eax+0x4]
10001ab6:	cmp    DWORD PTR [edx+0x8],edi
10001ab9:	jne    0x10001b36
10001abb:	cmp    BYTE PTR [ebx+0x4d],0x0
10001abf:	je     0x10001ac5
10001ac1:	mov    ecx,esi
10001ac3:	jmp    0x10001ad7
10001ac5:	mov    eax,DWORD PTR [ebx+0x8]
10001ac8:	mov    ecx,ebx
10001aca:	jmp    0x10001ad1
10001acc:	mov    ecx,eax
10001ace:	mov    eax,DWORD PTR [ecx+0x8]
10001ad1:	cmp    BYTE PTR [eax+0x4d],0x0
10001ad5:	je     0x10001acc
10001ad7:	mov    DWORD PTR [edx+0x8],ecx
10001ada:	jmp    0x10001b36
10001adc:	mov    DWORD PTR [ecx+0x4],eax
10001adf:	mov    ecx,DWORD PTR [edi]
10001ae1:	mov    DWORD PTR [eax],ecx
10001ae3:	cmp    eax,DWORD PTR [edi+0x8]
10001ae6:	jne    0x10001aec
10001ae8:	mov    esi,eax
10001aea:	jmp    0x10001b06
10001aec:	cmp    BYTE PTR [ebx+0x4d],0x0
10001af0:	mov    esi,DWORD PTR [eax+0x4]
10001af3:	jne    0x10001af8
10001af5:	mov    DWORD PTR [ebx+0x4],esi
10001af8:	mov    DWORD PTR [esi],ebx
10001afa:	mov    ecx,DWORD PTR [edi+0x8]
10001afd:	mov    DWORD PTR [eax+0x8],ecx
10001b00:	mov    ecx,DWORD PTR [edi+0x8]
10001b03:	mov    DWORD PTR [ecx+0x4],eax
10001b06:	mov    ecx,DWORD PTR [ebp+0x8]
10001b09:	mov    ecx,DWORD PTR [ecx+0x4]
10001b0c:	cmp    DWORD PTR [ecx+0x4],edi
10001b0f:	jne    0x10001b16
10001b11:	mov    DWORD PTR [ecx+0x4],eax
10001b14:	jmp    0x10001b24
10001b16:	mov    ecx,DWORD PTR [edi+0x4]
10001b19:	cmp    DWORD PTR [ecx],edi
10001b1b:	jne    0x10001b21
10001b1d:	mov    DWORD PTR [ecx],eax
10001b1f:	jmp    0x10001b24
10001b21:	mov    DWORD PTR [ecx+0x8],eax
10001b24:	mov    ecx,DWORD PTR [edi+0x4]
10001b27:	mov    DWORD PTR [eax+0x4],ecx
10001b2a:	mov    dl,BYTE PTR [edi+0x4c]
10001b2d:	mov    cl,BYTE PTR [eax+0x4c]
10001b30:	mov    BYTE PTR [eax+0x4c],dl
10001b33:	mov    BYTE PTR [edi+0x4c],cl
10001b36:	cmp    BYTE PTR [edi+0x4c],0x1
10001b3a:	jne    0x10001c52
10001b40:	jmp    0x10001c06
10001b45:	cmp    BYTE PTR [ebx+0x4c],0x1
10001b49:	jne    0x10001c4e
10001b4f:	mov    ecx,DWORD PTR [esi]
10001b51:	cmp    ebx,ecx
10001b53:	jne    0x10001bcc
10001b55:	mov    ecx,DWORD PTR [esi+0x8]
10001b58:	cmp    BYTE PTR [ecx+0x4c],0x0
10001b5c:	jne    0x10001b73
10001b5e:	push   DWORD PTR [ebp+0x8]
10001b61:	mov    BYTE PTR [ecx+0x4c],0x1
10001b65:	mov    ecx,esi
10001b67:	mov    BYTE PTR [esi+0x4c],0x0
10001b6b:	call   0x10001d9d
10001b70:	mov    ecx,DWORD PTR [esi+0x8]
10001b73:	cmp    BYTE PTR [ecx+0x4d],0x0
10001b77:	jne    0x10001c01
10001b7d:	mov    eax,DWORD PTR [ecx]
10001b7f:	cmp    BYTE PTR [eax+0x4c],0x1
10001b83:	jne    0x10001b8e
10001b85:	mov    eax,DWORD PTR [ecx+0x8]
10001b88:	cmp    BYTE PTR [eax+0x4c],0x1
10001b8c:	je     0x10001bfd
10001b8e:	mov    eax,DWORD PTR [ecx+0x8]
10001b91:	cmp    BYTE PTR [eax+0x4c],0x1
10001b95:	jne    0x10001bac
10001b97:	mov    eax,DWORD PTR [ecx]
10001b99:	push   DWORD PTR [ebp+0x8]
10001b9c:	mov    BYTE PTR [eax+0x4c],0x1
10001ba0:	mov    BYTE PTR [ecx+0x4c],0x0
10001ba4:	call   0x10001ddd
10001ba9:	mov    ecx,DWORD PTR [esi+0x8]
10001bac:	mov    al,BYTE PTR [esi+0x4c]
10001baf:	push   DWORD PTR [ebp+0x8]
10001bb2:	mov    BYTE PTR [ecx+0x4c],al
10001bb5:	mov    BYTE PTR [esi+0x4c],0x1
10001bb9:	mov    eax,DWORD PTR [ecx+0x8]
10001bbc:	mov    ecx,esi
10001bbe:	mov    BYTE PTR [eax+0x4c],0x1
10001bc2:	call   0x10001d9d
10001bc7:	jmp    0x10001c4e
10001bcc:	cmp    BYTE PTR [ecx+0x4c],0x0
10001bd0:	jne    0x10001be6
10001bd2:	push   DWORD PTR [ebp+0x8]
10001bd5:	mov    BYTE PTR [ecx+0x4c],0x1
10001bd9:	mov    ecx,esi
10001bdb:	mov    BYTE PTR [esi+0x4c],0x0
10001bdf:	call   0x10001ddd
10001be4:	mov    ecx,DWORD PTR [esi]
10001be6:	cmp    BYTE PTR [ecx+0x4d],0x0
10001bea:	jne    0x10001c01
10001bec:	mov    eax,DWORD PTR [ecx+0x8]
10001bef:	cmp    BYTE PTR [eax+0x4c],0x1
10001bf3:	jne    0x10001c17
10001bf5:	mov    eax,DWORD PTR [ecx]
10001bf7:	cmp    BYTE PTR [eax+0x4c],0x1
10001bfb:	jne    0x10001c17
10001bfd:	mov    BYTE PTR [ecx+0x4c],0x0
10001c01:	mov    ebx,esi
10001c03:	mov    esi,DWORD PTR [esi+0x4]
10001c06:	mov    eax,DWORD PTR [ebp+0x8]
10001c09:	mov    eax,DWORD PTR [eax+0x4]
10001c0c:	cmp    ebx,DWORD PTR [eax+0x4]
10001c0f:	jne    0x10001b45
10001c15:	jmp    0x10001c4e
10001c17:	mov    eax,DWORD PTR [ecx]
10001c19:	cmp    BYTE PTR [eax+0x4c],0x1
10001c1d:	jne    0x10001c34
10001c1f:	mov    eax,DWORD PTR [ecx+0x8]
10001c22:	push   DWORD PTR [ebp+0x8]
10001c25:	mov    BYTE PTR [eax+0x4c],0x1
10001c29:	mov    BYTE PTR [ecx+0x4c],0x0
10001c2d:	call   0x10001d9d
10001c32:	mov    ecx,DWORD PTR [esi]
10001c34:	mov    al,BYTE PTR [esi+0x4c]
10001c37:	push   DWORD PTR [ebp+0x8]
10001c3a:	mov    BYTE PTR [ecx+0x4c],al
10001c3d:	mov    BYTE PTR [esi+0x4c],0x1
10001c41:	mov    eax,DWORD PTR [ecx]
10001c43:	mov    ecx,esi
10001c45:	mov    BYTE PTR [eax+0x4c],0x1
10001c49:	call   0x10001ddd
10001c4e:	mov    BYTE PTR [ebx+0x4c],0x1
10001c52:	push   0x0
10001c54:	lea    esi,[edi+0xc]
10001c57:	push   0x1
10001c59:	lea    ecx,[esi+0x20]
10001c5c:	call   0x100012eb
10001c61:	push   0x0
10001c63:	push   0x1
10001c65:	mov    ecx,esi
10001c67:	call   0x100012eb
10001c6c:	push   edi
10001c6d:	call   0x10042f82
10001c72:	pop    ecx
10001c73:	mov    ecx,DWORD PTR [ebp+0x8]
10001c76:	mov    eax,DWORD PTR [ecx+0x8]
10001c79:	test   eax,eax
10001c7b:	jbe    0x10001c81
10001c7d:	dec    eax
10001c7e:	mov    DWORD PTR [ecx+0x8],eax
10001c81:	mov    ecx,DWORD PTR [ebp+0x10]
10001c84:	mov    eax,DWORD PTR [ebp+0xc]
10001c87:	mov    DWORD PTR [eax],ecx
10001c89:	mov    ecx,DWORD PTR [ebp+0x14]
10001c8c:	mov    DWORD PTR [eax+0x4],ecx
10001c8f:	call   0x10059bfd
10001c94:	ret    0x10
10001c97:	push   ebx
10001c98:	push   esi
10001c99:	push   edi
10001c9a:	mov    edi,DWORD PTR [esp+0x10]
10001c9e:	cmp    BYTE PTR [edi+0x11],0x0
10001ca2:	mov    ebx,ecx
10001ca4:	mov    esi,edi
10001ca6:	jne    0x10001cc3
10001ca8:	push   DWORD PTR [esi+0x8]
10001cab:	mov    ecx,ebx
10001cad:	call   0x10001c97
10001cb2:	mov    esi,DWORD PTR [esi]
10001cb4:	push   edi
10001cb5:	call   0x10042f82
10001cba:	cmp    BYTE PTR [esi+0x11],0x0
10001cbe:	pop    ecx
10001cbf:	mov    edi,esi
10001cc1:	je     0x10001ca8
10001cc3:	pop    edi
10001cc4:	pop    esi
10001cc5:	pop    ebx
10001cc6:	ret    0x4
10001cc9:	mov    eax,DWORD PTR [ecx+0x8]
10001ccc:	mov    edx,DWORD PTR [eax]
10001cce:	mov    DWORD PTR [ecx+0x8],edx
10001cd1:	mov    edx,DWORD PTR [eax]
10001cd3:	cmp    BYTE PTR [edx+0x11],0x0
10001cd7:	jne    0x10001cdc
10001cd9:	mov    DWORD PTR [edx+0x4],ecx
10001cdc:	mov    edx,DWORD PTR [ecx+0x4]
10001cdf:	mov    DWORD PTR [eax+0x4],edx
10001ce2:	mov    edx,DWORD PTR [esp+0x4]
10001ce6:	mov    edx,DWORD PTR [edx+0x4]
10001ce9:	cmp    ecx,DWORD PTR [edx+0x4]
10001cec:	jne    0x10001cf3
10001cee:	mov    DWORD PTR [edx+0x4],eax
10001cf1:	jmp    0x10001d01
10001cf3:	mov    edx,DWORD PTR [ecx+0x4]
10001cf6:	cmp    ecx,DWORD PTR [edx]
10001cf8:	jne    0x10001cfe
10001cfa:	mov    DWORD PTR [edx],eax
10001cfc:	jmp    0x10001d01
10001cfe:	mov    DWORD PTR [edx+0x8],eax
10001d01:	mov    DWORD PTR [eax],ecx
10001d03:	mov    DWORD PTR [ecx+0x4],eax
10001d06:	ret    0x4
10001d09:	mov    eax,DWORD PTR [ecx]
10001d0b:	mov    edx,DWORD PTR [eax+0x8]
10001d0e:	mov    DWORD PTR [ecx],edx
10001d10:	mov    edx,DWORD PTR [eax+0x8]
10001d13:	cmp    BYTE PTR [edx+0x11],0x0
10001d17:	jne    0x10001d1c
10001d19:	mov    DWORD PTR [edx+0x4],ecx
10001d1c:	mov    edx,DWORD PTR [ecx+0x4]
10001d1f:	mov    DWORD PTR [eax+0x4],edx
10001d22:	mov    edx,DWORD PTR [esp+0x4]
10001d26:	mov    edx,DWORD PTR [edx+0x4]
10001d29:	cmp    ecx,DWORD PTR [edx+0x4]
10001d2c:	jne    0x10001d33
10001d2e:	mov    DWORD PTR [edx+0x4],eax
10001d31:	jmp    0x10001d42
10001d33:	mov    edx,DWORD PTR [ecx+0x4]
10001d36:	cmp    ecx,DWORD PTR [edx+0x8]
10001d39:	jne    0x10001d40
10001d3b:	mov    DWORD PTR [edx+0x8],eax
10001d3e:	jmp    0x10001d42
10001d40:	mov    DWORD PTR [edx],eax
10001d42:	mov    DWORD PTR [eax+0x8],ecx
10001d45:	mov    DWORD PTR [ecx+0x4],eax
10001d48:	ret    0x4
10001d4b:	push   ebp
10001d4c:	mov    ebp,esp
10001d4e:	push   ecx
10001d4f:	push   esi
10001d50:	push   edi
10001d51:	mov    edi,DWORD PTR [ebp+0x8]
10001d54:	cmp    BYTE PTR [edi+0x4d],0x0
10001d58:	mov    DWORD PTR [ebp-0x4],ecx
10001d5b:	mov    esi,edi
10001d5d:	jne    0x10001d97
10001d5f:	push   ebx
10001d60:	push   DWORD PTR [esi+0x8]
10001d63:	mov    ecx,DWORD PTR [ebp-0x4]
10001d66:	call   0x10001d4b
10001d6b:	mov    esi,DWORD PTR [esi]
10001d6d:	push   0x0
10001d6f:	lea    ebx,[edi+0xc]
10001d72:	push   0x1
10001d74:	lea    ecx,[ebx+0x20]
10001d77:	call   0x100012eb
10001d7c:	push   0x0
10001d7e:	push   0x1
10001d80:	mov    ecx,ebx
10001d82:	call   0x100012eb
10001d87:	push   edi
10001d88:	call   0x10042f82
10001d8d:	cmp    BYTE PTR [esi+0x4d],0x0
10001d91:	pop    ecx
10001d92:	mov    edi,esi
10001d94:	je     0x10001d60
10001d96:	pop    ebx
10001d97:	pop    edi
10001d98:	pop    esi
10001d99:	leave  
10001d9a:	ret    0x4
10001d9d:	mov    eax,DWORD PTR [ecx+0x8]
10001da0:	mov    edx,DWORD PTR [eax]
10001da2:	mov    DWORD PTR [ecx+0x8],edx
10001da5:	mov    edx,DWORD PTR [eax]
10001da7:	cmp    BYTE PTR [edx+0x4d],0x0
10001dab:	jne    0x10001db0
10001dad:	mov    DWORD PTR [edx+0x4],ecx
10001db0:	mov    edx,DWORD PTR [ecx+0x4]
10001db3:	mov    DWORD PTR [eax+0x4],edx
10001db6:	mov    edx,DWORD PTR [esp+0x4]
10001dba:	mov    edx,DWORD PTR [edx+0x4]
10001dbd:	cmp    ecx,DWORD PTR [edx+0x4]
10001dc0:	jne    0x10001dc7
10001dc2:	mov    DWORD PTR [edx+0x4],eax
10001dc5:	jmp    0x10001dd5
10001dc7:	mov    edx,DWORD PTR [ecx+0x4]
10001dca:	cmp    ecx,DWORD PTR [edx]
10001dcc:	jne    0x10001dd2
10001dce:	mov    DWORD PTR [edx],eax
10001dd0:	jmp    0x10001dd5
10001dd2:	mov    DWORD PTR [edx+0x8],eax
10001dd5:	mov    DWORD PTR [eax],ecx
10001dd7:	mov    DWORD PTR [ecx+0x4],eax
10001dda:	ret    0x4
10001ddd:	mov    eax,DWORD PTR [ecx]
10001ddf:	mov    edx,DWORD PTR [eax+0x8]
10001de2:	mov    DWORD PTR [ecx],edx
10001de4:	mov    edx,DWORD PTR [eax+0x8]
10001de7:	cmp    BYTE PTR [edx+0x4d],0x0
10001deb:	jne    0x10001df0
10001ded:	mov    DWORD PTR [edx+0x4],ecx
10001df0:	mov    edx,DWORD PTR [ecx+0x4]
10001df3:	mov    DWORD PTR [eax+0x4],edx
10001df6:	mov    edx,DWORD PTR [esp+0x4]
10001dfa:	mov    edx,DWORD PTR [edx+0x4]
10001dfd:	cmp    ecx,DWORD PTR [edx+0x4]
10001e00:	jne    0x10001e07
10001e02:	mov    DWORD PTR [edx+0x4],eax
10001e05:	jmp    0x10001e16
10001e07:	mov    edx,DWORD PTR [ecx+0x4]
10001e0a:	cmp    ecx,DWORD PTR [edx+0x8]
10001e0d:	jne    0x10001e14
10001e0f:	mov    DWORD PTR [edx+0x8],eax
10001e12:	jmp    0x10001e16
10001e14:	mov    DWORD PTR [edx],eax
10001e16:	mov    DWORD PTR [eax+0x8],ecx
10001e19:	mov    DWORD PTR [ecx+0x4],eax
10001e1c:	ret    0x4
10001e1f:	push   ebx
10001e20:	xor    ebx,ebx
10001e22:	cmp    DWORD PTR [esi],ebx
10001e24:	jne    0x10001e2b
10001e26:	call   0x100434a0
10001e2b:	mov    eax,DWORD PTR [esi+0x4]
10001e2e:	cmp    BYTE PTR [eax+0x4d],bl
10001e31:	je     0x10001e3a
10001e33:	call   0x100434a0
10001e38:	jmp    0x10001e68
10001e3a:	mov    ecx,DWORD PTR [eax+0x8]
10001e3d:	cmp    BYTE PTR [ecx+0x4d],bl
10001e40:	jne    0x10001e5d
10001e42:	jmp    0x10001e46
10001e44:	mov    ecx,eax
10001e46:	mov    eax,DWORD PTR [ecx]
10001e48:	cmp    BYTE PTR [eax+0x4d],bl
10001e4b:	je     0x10001e44
10001e4d:	mov    DWORD PTR [esi+0x4],ecx
10001e50:	jmp    0x10001e68
10001e52:	mov    ecx,DWORD PTR [esi+0x4]
10001e55:	cmp    ecx,DWORD PTR [eax+0x8]
10001e58:	jne    0x10001e65
10001e5a:	mov    DWORD PTR [esi+0x4],eax
10001e5d:	mov    eax,DWORD PTR [eax+0x4]
10001e60:	cmp    BYTE PTR [eax+0x4d],bl
10001e63:	je     0x10001e52
10001e65:	mov    DWORD PTR [esi+0x4],eax
10001e68:	mov    eax,esi
10001e6a:	pop    ebx
10001e6b:	ret    
10001e6c:	push   ebx
10001e6d:	xor    ebx,ebx
10001e6f:	cmp    DWORD PTR [esi],ebx
10001e71:	jne    0x10001e78
10001e73:	call   0x100434a0
10001e78:	mov    eax,DWORD PTR [esi+0x4]
10001e7b:	cmp    BYTE PTR [eax+0x11],bl
10001e7e:	je     0x10001e87
10001e80:	call   0x100434a0
10001e85:	jmp    0x10001eb5
10001e87:	mov    ecx,DWORD PTR [eax+0x8]
10001e8a:	cmp    BYTE PTR [ecx+0x11],bl
10001e8d:	jne    0x10001eaa
10001e8f:	jmp    0x10001e93
10001e91:	mov    ecx,eax
10001e93:	mov    eax,DWORD PTR [ecx]
10001e95:	cmp    BYTE PTR [eax+0x11],bl
10001e98:	je     0x10001e91
10001e9a:	mov    DWORD PTR [esi+0x4],ecx
10001e9d:	jmp    0x10001eb5
10001e9f:	mov    ecx,DWORD PTR [esi+0x4]
10001ea2:	cmp    ecx,DWORD PTR [eax+0x8]
10001ea5:	jne    0x10001eb2
10001ea7:	mov    DWORD PTR [esi+0x4],eax
10001eaa:	mov    eax,DWORD PTR [eax+0x4]
10001ead:	cmp    BYTE PTR [eax+0x11],bl
10001eb0:	je     0x10001e9f
10001eb2:	mov    DWORD PTR [esi+0x4],eax
10001eb5:	mov    eax,esi
10001eb7:	pop    ebx
10001eb8:	ret    
10001eb9:	push   ebp
10001eba:	mov    ebp,esp
10001ebc:	mov    ecx,DWORD PTR [ebp+0x8]
10001ebf:	sub    esp,0xc
10001ec2:	test   ecx,ecx
10001ec4:	ja     0x10001ed1
10001ec6:	xor    ecx,ecx
10001ec8:	push   ecx
10001ec9:	call   0x1004358e
10001ece:	pop    ecx
10001ecf:	leave  
10001ed0:	ret    
10001ed1:	or     eax,0xffffffff
10001ed4:	xor    edx,edx
10001ed6:	div    ecx
10001ed8:	cmp    eax,0x1
10001edb:	jae    0x10001ec8
10001edd:	and    DWORD PTR [ebp+0x8],0x0
10001ee1:	lea    eax,[ebp+0x8]
10001ee4:	push   eax
10001ee5:	lea    ecx,[ebp-0xc]
10001ee8:	call   0x10043002
10001eed:	push   0x10074e20
10001ef2:	lea    eax,[ebp-0xc]
10001ef5:	push   eax
10001ef6:	mov    DWORD PTR [ebp-0xc],0x100665c8
10001efd:	call   0x10047aa4
10001f02:	int3   
10001f03:	push   esi
10001f04:	push   DWORD PTR [esp+0x8]
10001f08:	mov    esi,ecx
10001f0a:	call   0x10043068
10001f0f:	mov    DWORD PTR [esi],0x100665c8
10001f15:	mov    eax,esi
10001f17:	pop    esi
10001f18:	ret    0x4
10001f1b:	push   0x0
10001f1d:	push   0x1
10001f1f:	lea    ecx,[esi+0x20]
10001f22:	call   0x100012eb
10001f27:	push   0x0
10001f29:	push   0x1
10001f2b:	mov    ecx,esi
10001f2d:	call   0x100012eb
10001f32:	ret    
10001f33:	push   ebp
10001f34:	mov    ebp,esp
10001f36:	mov    eax,DWORD PTR [ebp+0x8]
10001f39:	mov    DWORD PTR [ebp+0x8],eax
10001f3c:	push   0x10074e54
10001f41:	lea    eax,[ebp+0x8]
10001f44:	push   eax
10001f45:	call   0x10047aa4
10001f4a:	int3   
10001f4b:	mov    eax,DWORD PTR [esp+0x4]
10001f4f:	test   eax,eax
10001f51:	je     0x10001f7f
10001f53:	cmp    eax,0xc
10001f56:	je     0x10001f78
10001f58:	cmp    eax,0x16
10001f5b:	je     0x10001f71
10001f5d:	cmp    eax,0x22
10001f60:	je     0x10001f71
10001f62:	cmp    eax,0x50
10001f65:	je     0x10001f7f
10001f67:	push   0x80004005
10001f6c:	call   0x10001f33
10001f71:	push   0x80070057
10001f76:	jmp    0x10001f6c
10001f78:	push   0x8007000e
10001f7d:	jmp    0x10001f6c
10001f7f:	ret    
10001f80:	push   esi
10001f81:	push   DWORD PTR [esp+0xc]
10001f85:	mov    esi,eax
10001f87:	push   DWORD PTR [esp+0xc]
10001f8b:	call   DWORD PTR ds:0x10066080
10001f91:	test   eax,eax
10001f93:	jne    0x10001f97
10001f95:	pop    esi
10001f96:	ret    
10001f97:	push   edi
10001f98:	push   eax
10001f99:	call   DWORD PTR ds:0x10066090
10001f9f:	mov    edi,eax
10001fa1:	test   edi,edi
10001fa3:	je     0x10001fcc
10001fa5:	push   DWORD PTR [esp+0x10]
10001fa9:	push   DWORD PTR [esp+0x10]
10001fad:	call   DWORD PTR ds:0x10066088
10001fb3:	add    eax,edi
10001fb5:	and    esi,0xf
10001fb8:	jbe    0x10001fc8
10001fba:	cmp    edi,eax
10001fbc:	jae    0x10001fcc
10001fbe:	dec    esi
10001fbf:	movzx  ecx,WORD PTR [edi]
10001fc2:	lea    edi,[edi+ecx*2+0x2]
10001fc6:	jne    0x10001fba
10001fc8:	cmp    edi,eax
10001fca:	jb     0x10001fd0
10001fcc:	xor    eax,eax
10001fce:	jmp    0x10001fda
10001fd0:	mov    ax,WORD PTR [edi]
10001fd3:	neg    ax
10001fd6:	sbb    eax,eax
10001fd8:	and    eax,edi
10001fda:	pop    edi
10001fdb:	pop    esi
10001fdc:	ret    
10001fdd:	mov    eax,DWORD PTR [esp+0x8]
10001fe1:	shr    eax,0x4
10001fe4:	inc    eax
10001fe5:	movzx  eax,ax
10001fe8:	push   0x6
10001fea:	push   eax
10001feb:	push   DWORD PTR [esp+0xc]
10001fef:	call   DWORD PTR ds:0x1006607c
10001ff5:	test   eax,eax
10001ff7:	jne    0x10001ffa
10001ff9:	ret    
10001ffa:	push   eax
10001ffb:	push   DWORD PTR [esp+0x8]
10001fff:	mov    eax,DWORD PTR [esp+0x10]
10002003:	call   0x10001f80
10002008:	pop    ecx
10002009:	pop    ecx
1000200a:	ret    
1000200b:	push   ebx
1000200c:	push   ebp
1000200d:	push   esi
1000200e:	push   edi
1000200f:	xor    edi,edi
10002011:	mov    ebx,0x10080a00
10002016:	push   edi
10002017:	mov    ecx,ebx
10002019:	call   0x10056dd5
1000201e:	xor    ebp,ebp
10002020:	inc    ebp
10002021:	jmp    0x1000205d
10002023:	test   edi,edi
10002025:	jne    0x10002063
10002027:	mov    eax,DWORD PTR [esp+0x14]
1000202b:	shr    eax,0x4
1000202e:	inc    eax
1000202f:	push   edi
10002030:	movzx  eax,ax
10002033:	push   eax
10002034:	push   0x6
10002036:	push   esi
10002037:	call   DWORD PTR ds:0x10066078
1000203d:	test   eax,eax
1000203f:	je     0x10002054
10002041:	push   eax
10002042:	mov    eax,DWORD PTR [esp+0x18]
10002046:	push   esi
10002047:	call   0x10001f80
1000204c:	mov    edi,eax
1000204e:	test   edi,edi
10002050:	pop    ecx
10002051:	pop    ecx
10002052:	jne    0x1000206a
10002054:	push   ebp
10002055:	mov    ecx,ebx
10002057:	call   0x10056dd5
1000205c:	inc    ebp
1000205d:	mov    esi,eax
1000205f:	test   esi,esi
10002061:	jne    0x10002023
10002063:	xor    eax,eax
10002065:	pop    edi
10002066:	pop    esi
10002067:	pop    ebp
10002068:	pop    ebx
10002069:	ret    
1000206a:	mov    eax,esi
1000206c:	jmp    0x10002065
1000206e:	ret    
1000206f:	lea    ecx,[eax+0xc]
10002072:	or     edx,0xffffffff
10002075:	lock xadd DWORD PTR [ecx],edx
10002079:	dec    edx
1000207a:	test   edx,edx
1000207c:	jg     0x10002086
1000207e:	mov    ecx,DWORD PTR [eax]
10002080:	mov    edx,DWORD PTR [ecx]
10002082:	push   eax
10002083:	call   DWORD PTR [edx+0x4]
10002086:	ret    
10002087:	mov    eax,DWORD PTR [eax]
10002089:	sub    eax,0x10
1000208c:	jmp    0x1000206f
10002091:	mov    eax,DWORD PTR [esp+0x4]
10002095:	push   esi
10002096:	mov    esi,DWORD PTR [eax]
10002098:	and    DWORD PTR [eax],0x0
1000209b:	mov    eax,DWORD PTR [edi]
1000209d:	cmp    esi,eax
1000209f:	je     0x100020a8
100020a1:	push   eax
100020a2:	call   0x10042f82
100020a7:	pop    ecx
100020a8:	mov    DWORD PTR [edi],esi
100020aa:	mov    eax,edi
100020ac:	pop    esi
100020ad:	ret    0x4
100020b0:	push   ebp
100020b1:	mov    ebp,esp
100020b3:	push   ebx
100020b4:	mov    ebx,DWORD PTR ds:0x1006608c
100020ba:	push   esi
100020bb:	xor    esi,esi
100020bd:	cmp    DWORD PTR [ebp+0xc],esi
100020c0:	push   edi
100020c1:	je     0x100020d9
100020c3:	call   DWORD PTR ds:0x1007efec
100020c9:	push   esi
100020ca:	push   esi
100020cb:	push   0xffffffff
100020cd:	push   DWORD PTR [ebp+0xc]
100020d0:	push   esi
100020d1:	push   eax
100020d2:	call   ebx
100020d4:	mov    edi,eax
100020d6:	dec    edi
100020d7:	jmp    0x100020db
100020d9:	xor    edi,edi
100020db:	cmp    edi,esi
100020dd:	mov    esi,DWORD PTR [ebp+0x8]
100020e0:	jle    0x10002105
100020e2:	push   edi
100020e3:	call   0x100021a4
100020e8:	push   edi
100020e9:	push   eax
100020ea:	push   0xffffffff
100020ec:	push   DWORD PTR [ebp+0xc]
100020ef:	push   0x0
100020f1:	call   DWORD PTR ds:0x1007efec
100020f7:	push   eax
100020f8:	call   ebx
100020fa:	mov    eax,edi
100020fc:	mov    edx,esi
100020fe:	call   0x1000222f
10002103:	jmp    0x1000210a
10002105:	call   0x10002164
1000210a:	mov    eax,DWORD PTR [ebp+0x8]
1000210d:	pop    edi
1000210e:	pop    esi
1000210f:	pop    ebx
10002110:	pop    ebp
10002111:	ret    0x8
10002114:	xor    al,al
10002116:	cmp    DWORD PTR [esp+0x8],0x0
1000211b:	je     0x10002146
1000211d:	test   DWORD PTR [esp+0x8],0xffff0000
10002125:	jne    0x10002146
10002127:	push   esi
10002128:	movzx  esi,WORD PTR [esp+0xc]
1000212d:	push   esi
1000212e:	call   0x1000200b
10002133:	test   eax,eax
10002135:	pop    ecx
10002136:	je     0x10002143
10002138:	push   esi
10002139:	push   eax
1000213a:	push   DWORD PTR [esp+0x10]
1000213e:	call   0x100021ca
10002143:	mov    al,0x1
10002145:	pop    esi
10002146:	ret    0x8
10002149:	test   ecx,ecx
1000214b:	jne    0x10002157
1000214d:	push   0x80004005
10002152:	call   0x10001f33
10002157:	mov    eax,DWORD PTR [ecx]
10002159:	call   DWORD PTR [eax+0xc]
1000215c:	add    eax,0x10
1000215f:	mov    DWORD PTR [esi],eax
10002161:	mov    eax,esi
10002163:	ret    
10002164:	mov    ecx,DWORD PTR [esi]
10002166:	lea    eax,[ecx-0x10]
10002169:	xor    edx,edx
1000216b:	cmp    DWORD PTR [eax+0x4],edx
1000216e:	push   edi
1000216f:	mov    edi,DWORD PTR [eax]
10002171:	je     0x100021a2
10002173:	cmp    DWORD PTR [eax+0xc],edx
10002176:	jge    0x10002191
10002178:	cmp    DWORD PTR [ecx-0x8],edx
1000217b:	jge    0x10002187
1000217d:	push   0x80070057
10002182:	call   0x10001f33
10002187:	mov    DWORD PTR [ecx-0xc],edx
1000218a:	mov    eax,DWORD PTR [esi]
1000218c:	mov    WORD PTR [eax],dx
1000218f:	pop    edi
10002190:	ret    
10002191:	call   0x1000206f
10002196:	mov    eax,DWORD PTR [edi]
10002198:	mov    ecx,edi
1000219a:	call   DWORD PTR [eax+0xc]
1000219d:	add    eax,0x10
100021a0:	mov    DWORD PTR [esi],eax
100021a2:	pop    edi
100021a3:	ret    
100021a4:	mov    eax,DWORD PTR [esi]
100021a6:	xor    ecx,ecx
100021a8:	sub    eax,0x10
100021ab:	inc    ecx
100021ac:	sub    ecx,DWORD PTR [eax+0xc]
100021af:	mov    eax,DWORD PTR [eax+0x8]
100021b2:	sub    eax,DWORD PTR [esp+0x4]
100021b6:	or     ecx,eax
100021b8:	jge    0x100021c5
100021ba:	mov    eax,DWORD PTR [esp+0x4]
100021be:	mov    ecx,esi
100021c0:	call   0x10002250
100021c5:	mov    eax,DWORD PTR [esi]
100021c7:	ret    0x4
100021ca:	push   edi
100021cb:	push   DWORD PTR [esp+0x10]
100021cf:	push   DWORD PTR [esp+0x10]
100021d3:	call   0x10001fdd
100021d8:	mov    edi,eax
100021da:	test   edi,edi
100021dc:	pop    ecx
100021dd:	pop    ecx
100021de:	je     0x1000222b
100021e0:	push   ebx
100021e1:	movzx  ebx,WORD PTR [edi]
100021e4:	push   esi
100021e5:	mov    esi,DWORD PTR [esp+0x10]
100021e9:	push   ebx
100021ea:	call   0x100021a4
100021ef:	mov    esi,eax
100021f1:	movzx  eax,WORD PTR [edi]
100021f4:	add    edi,0x2
100021f7:	cmp    eax,0xffffffff
100021fa:	jne    0x10002204
100021fc:	push   edi
100021fd:	call   0x100437e3
10002202:	pop    ecx
10002203:	inc    eax
10002204:	add    eax,eax
10002206:	push   eax
10002207:	push   edi
10002208:	lea    eax,[ebx+ebx*1]
1000220b:	push   eax
1000220c:	push   esi
1000220d:	call   0x100434b5
10002212:	push   eax
10002213:	call   0x10001f4b
10002218:	mov    edx,DWORD PTR [esp+0x24]
1000221c:	add    esp,0x14
1000221f:	mov    eax,ebx
10002221:	call   0x1000222f
10002226:	xor    eax,eax
10002228:	pop    esi
10002229:	inc    eax
1000222a:	pop    ebx
1000222b:	pop    edi
1000222c:	ret    0xc
1000222f:	test   eax,eax
10002231:	jl     0x10002245
10002233:	mov    ecx,DWORD PTR [edx]
10002235:	cmp    eax,DWORD PTR [ecx-0x8]
10002238:	jg     0x10002245
1000223a:	mov    DWORD PTR [ecx-0xc],eax
1000223d:	mov    ecx,DWORD PTR [edx]
1000223f:	and    WORD PTR [ecx+eax*2],0x0
10002244:	ret    
10002245:	push   0x80070057
1000224a:	call   0x10001f33
1000224f:	int3   
10002250:	push   esi
10002251:	mov    esi,ecx
10002253:	push   edi
10002254:	mov    edi,eax
10002256:	mov    eax,DWORD PTR [esi]
10002258:	mov    ecx,DWORD PTR [eax-0xc]
1000225b:	sub    eax,0x10
1000225e:	cmp    ecx,edi
10002260:	jle    0x10002264
10002262:	mov    edi,ecx
10002264:	cmp    DWORD PTR [eax+0xc],0x1
10002268:	jle    0x10002273
1000226a:	push   edi
1000226b:	push   esi
1000226c:	call   0x10002299
10002271:	jmp    0x10002296
10002273:	mov    eax,DWORD PTR [eax+0x8]
10002276:	cmp    eax,edi
10002278:	jge    0x10002296
1000227a:	mov    edx,eax
1000227c:	mov    eax,0x400
10002281:	cmp    edx,eax
10002283:	jle    0x10002289
10002285:	add    edx,eax
10002287:	jmp    0x1000228b
10002289:	add    edx,edx
1000228b:	cmp    edx,edi
1000228d:	jge    0x10002291
1000228f:	mov    edx,edi
10002291:	call   0x100022ff
10002296:	pop    edi
10002297:	pop    esi
10002298:	ret    
10002299:	push   ebp
1000229a:	mov    ebp,esp
1000229c:	push   ecx
1000229d:	mov    eax,DWORD PTR [ebp+0x8]
100022a0:	push   ebx
100022a1:	push   esi
100022a2:	mov    esi,DWORD PTR [eax]
100022a4:	mov    ebx,DWORD PTR [esi-0xc]
100022a7:	sub    esi,0x10
100022aa:	mov    ecx,DWORD PTR [esi]
100022ac:	mov    eax,DWORD PTR [ecx]
100022ae:	push   edi
100022af:	mov    DWORD PTR [ebp-0x4],ebx
100022b2:	call   DWORD PTR [eax+0x10]
100022b5:	mov    edx,DWORD PTR [eax]
100022b7:	push   0x2
100022b9:	push   DWORD PTR [ebp+0xc]
100022bc:	mov    ecx,eax
100022be:	call   DWORD PTR [edx]
100022c0:	mov    edi,eax
100022c2:	test   edi,edi
100022c4:	jne    0x100022cb
100022c6:	call   0x10002344
100022cb:	mov    eax,DWORD PTR [ebp+0xc]
100022ce:	cmp    ebx,eax
100022d0:	jge    0x100022d4
100022d2:	mov    eax,ebx
100022d4:	lea    ecx,[esi+0x10]
100022d7:	push   ecx
100022d8:	inc    eax
100022d9:	push   eax
100022da:	lea    ebx,[edi+0x10]
100022dd:	push   ebx
100022de:	call   0x10002329
100022e3:	mov    eax,DWORD PTR [ebp-0x4]
100022e6:	mov    DWORD PTR [edi+0x4],eax
100022e9:	add    esp,0xc
100022ec:	mov    eax,esi
100022ee:	call   0x1000206f
100022f3:	mov    eax,DWORD PTR [ebp+0x8]
100022f6:	pop    edi
100022f7:	pop    esi
100022f8:	mov    DWORD PTR [eax],ebx
100022fa:	pop    ebx
100022fb:	leave  
100022fc:	ret    0x8
100022ff:	mov    eax,DWORD PTR [esi]
10002301:	sub    eax,0x10
10002304:	cmp    DWORD PTR [eax+0x8],edx
10002307:	mov    ecx,DWORD PTR [eax]
10002309:	jge    0x1000231e
1000230b:	test   edx,edx
1000230d:	jle    0x1000231e
1000230f:	push   edi
10002310:	mov    edi,DWORD PTR [ecx]
10002312:	push   0x2
10002314:	push   edx
10002315:	push   eax
10002316:	call   DWORD PTR [edi+0x8]
10002319:	test   eax,eax
1000231b:	pop    edi
1000231c:	jne    0x10002323
1000231e:	jmp    0x10002344
10002323:	add    eax,0x10
10002326:	mov    DWORD PTR [esi],eax
10002328:	ret    
10002329:	add    eax,eax
1000232b:	push   eax
1000232c:	push   DWORD PTR [esp+0x10]
10002330:	mov    eax,DWORD PTR [esp+0x10]
10002334:	add    eax,eax
10002336:	push   eax
10002337:	push   DWORD PTR [esp+0x10]
1000233b:	call   0x100434b5
10002340:	add    esp,0x10
10002343:	ret    
10002344:	push   0x8007000e
10002349:	call   0x10001f33
1000234e:	int3   
1000234f:	push   0x0
10002351:	mov    eax,0x10062492
10002356:	call   0x10059b25
1000235b:	mov    esi,DWORD PTR [ebp+0x8]
1000235e:	mov    ecx,0x10080a74
10002363:	call   0x10002149
10002368:	push   DWORD PTR [ebp+0xc]
1000236b:	and    DWORD PTR [ebp-0x4],0x0
1000236f:	push   esi
10002370:	call   0x10002114
10002375:	test   al,al
10002377:	jne    0x10002382
10002379:	push   DWORD PTR [ebp+0xc]
1000237c:	push   esi
1000237d:	call   0x1000238c
10002382:	mov    eax,esi
10002384:	call   0x10059bfd
10002389:	ret    0x8
1000238c:	push   ebp
1000238d:	mov    ebp,esp
1000238f:	xor    eax,eax
10002391:	cmp    DWORD PTR [ebp+0xc],eax
10002394:	je     0x1000239f
10002396:	push   DWORD PTR [ebp+0xc]
10002399:	call   0x100437e3
1000239e:	pop    ecx
1000239f:	push   ebx
100023a0:	push   DWORD PTR [ebp+0xc]
100023a3:	mov    ebx,eax
100023a5:	mov    eax,DWORD PTR [ebp+0x8]
100023a8:	call   0x100023b5
100023ad:	mov    eax,DWORD PTR [ebp+0x8]
100023b0:	pop    ebx
100023b1:	pop    ebp
100023b2:	ret    0x8
100023b5:	push   ebp
100023b6:	mov    ebp,esp
100023b8:	push   ecx
100023b9:	test   ebx,ebx
100023bb:	push   esi
100023bc:	mov    esi,eax
100023be:	jne    0x100023c7
100023c0:	call   0x10002164
100023c5:	jmp    0x1000241d
100023c7:	push   edi
100023c8:	mov    edi,DWORD PTR [ebp+0x8]
100023cb:	test   edi,edi
100023cd:	jne    0x100023d9
100023cf:	push   0x80070057
100023d4:	call   0x10001f33
100023d9:	mov    eax,DWORD PTR [esi]
100023db:	mov    ecx,DWORD PTR [eax-0xc]
100023de:	sub    edi,eax
100023e0:	push   ebx
100023e1:	mov    DWORD PTR [ebp-0x4],ecx
100023e4:	sar    edi,1
100023e6:	call   0x100021a4
100023eb:	cmp    edi,DWORD PTR [ebp-0x4]
100023ee:	ja     0x10002404
100023f0:	lea    ecx,[ebx+ebx*1]
100023f3:	push   ecx
100023f4:	lea    edx,[eax+edi*2]
100023f7:	push   edx
100023f8:	push   ecx
100023f9:	push   eax
100023fa:	call   0x10042f96
100023ff:	add    esp,0x10
10002402:	jmp    0x10002413
10002404:	push   DWORD PTR [ebp+0x8]
10002407:	push   ebx
10002408:	push   eax
10002409:	mov    eax,ebx
1000240b:	call   0x10002329
10002410:	add    esp,0xc
10002413:	mov    eax,ebx
10002415:	mov    edx,esi
10002417:	call   0x1000222f
1000241c:	pop    edi
1000241d:	pop    esi
1000241e:	leave  
1000241f:	ret    0x4
10002422:	xor    eax,eax
10002424:	cmp    esi,eax
10002426:	je     0x10002450
10002428:	cmp    DWORD PTR [esp+0x4],eax
1000242c:	je     0x10002450
1000242e:	push   eax
1000242f:	push   eax
10002430:	push   DWORD PTR [esp+0x10]
10002434:	mov    BYTE PTR [esi],al
10002436:	push   esi
10002437:	push   0xffffffff
10002439:	push   DWORD PTR [esp+0x18]
1000243d:	push   eax
1000243e:	push   DWORD PTR [esp+0x28]
10002442:	call   DWORD PTR ds:0x100660b8
10002448:	neg    eax
1000244a:	sbb    eax,eax
1000244c:	and    eax,esi
1000244e:	jmp    0x10002452
10002450:	xor    eax,eax
10002452:	ret    0xc
10002455:	push   0x4
10002457:	mov    eax,0x1005f77f
1000245c:	call   0x10059b25
10002461:	push   0xc
10002463:	call   0x1004358e
10002468:	mov    esi,eax
1000246a:	pop    ecx
1000246b:	mov    DWORD PTR [ebp-0x10],esi
1000246e:	and    DWORD PTR [ebp-0x4],0x0
10002472:	test   esi,esi
10002474:	je     0x1000248d
10002476:	push   DWORD PTR [ebp+0x8]
10002479:	and    DWORD PTR [esi+0x4],0x0
1000247d:	mov    DWORD PTR [esi+0x8],0x1
10002484:	call   0x10050990
10002489:	mov    DWORD PTR [esi],eax
1000248b:	jmp    0x1000248f
1000248d:	xor    esi,esi
1000248f:	or     DWORD PTR [ebp-0x4],0xffffffff
10002493:	test   esi,esi
10002495:	mov    DWORD PTR [edi],esi
10002497:	jne    0x100024a3
10002499:	push   0x8007000e
1000249e:	call   0x10050c80
100024a3:	mov    eax,edi
100024a5:	call   0x10059bfd
100024aa:	ret    0x4
100024ad:	push   0x4
100024af:	mov    eax,0x1005f77f
100024b4:	call   0x10059b25
100024b9:	push   0xc
100024bb:	call   0x1004358e
100024c0:	mov    esi,eax
100024c2:	pop    ecx
100024c3:	mov    DWORD PTR [ebp-0x10],esi
100024c6:	and    DWORD PTR [ebp-0x4],0x0
100024ca:	test   esi,esi
100024cc:	je     0x100024d8
100024ce:	push   DWORD PTR [ebp+0x8]
100024d1:	call   0x100025f0
100024d6:	jmp    0x100024da
100024d8:	xor    eax,eax
100024da:	or     DWORD PTR [ebp-0x4],0xffffffff
100024de:	test   eax,eax
100024e0:	mov    DWORD PTR [edi],eax
100024e2:	jne    0x100024ee
100024e4:	push   0x8007000e
100024e9:	call   0x10050c80
100024ee:	mov    eax,edi
100024f0:	call   0x10059bfd
100024f5:	ret    0x4
100024f8:	jmp    0x100025b0
100024fd:	push   0x4
100024ff:	mov    eax,0x1005f77f
10002504:	call   0x10059b25
10002509:	push   0xc
1000250b:	call   0x1004358e
10002510:	mov    edi,eax
10002512:	pop    ecx
10002513:	mov    DWORD PTR [ebp-0x10],edi
10002516:	xor    esi,esi
10002518:	cmp    edi,esi
1000251a:	mov    DWORD PTR [ebp-0x4],esi
1000251d:	je     0x1000252a
1000251f:	push   DWORD PTR [ebp+0x8]
10002522:	push   ebx
10002523:	call   0x10002620
10002528:	mov    esi,eax
1000252a:	or     DWORD PTR [ebp-0x4],0xffffffff
1000252e:	test   esi,esi
10002530:	jne    0x1000253e
10002532:	push   0x8007000e
10002537:	call   0x10050c80
1000253c:	jmp    0x10002547
1000253e:	mov    edi,ebx
10002540:	call   0x100025b0
10002545:	mov    DWORD PTR [ebx],esi
10002547:	mov    eax,ebx
10002549:	call   0x10059bfd
1000254e:	ret    0x4
10002551:	push   0x4
10002553:	mov    eax,0x1005f9d3
10002558:	call   0x10059b25
1000255d:	mov    ebx,DWORD PTR [ebp+0x8]
10002560:	and    DWORD PTR [ebp-0x4],0x0
10002564:	push   DWORD PTR [ebp+0xc]
10002567:	and    DWORD PTR [ebp-0x10],0x0
1000256b:	mov    edi,ebx
1000256d:	call   0x100024ad
10002572:	and    DWORD PTR [ebp-0x4],0x0
10002576:	push   DWORD PTR [ebp+0x10]
10002579:	mov    DWORD PTR [ebp-0x10],0x1
10002580:	call   0x100024fd
10002585:	mov    eax,ebx
10002587:	call   0x10059bfd
1000258c:	ret    
1000258d:	mov    eax,DWORD PTR [eax]
1000258f:	test   eax,eax
10002591:	je     0x10002596
10002593:	mov    eax,DWORD PTR [eax]
10002595:	ret    
10002596:	xor    eax,eax
10002598:	ret    
10002599:	mov    eax,DWORD PTR [eax]
1000259b:	test   eax,eax
1000259d:	je     0x100025ad
1000259f:	mov    eax,DWORD PTR [eax]
100025a1:	test   eax,eax
100025a3:	je     0x100025ad
100025a5:	push   eax
100025a6:	call   DWORD PTR ds:0x100662ac
100025ac:	ret    
100025ad:	xor    eax,eax
100025af:	ret    
100025b0:	push   esi
100025b1:	mov    esi,DWORD PTR [edi]
100025b3:	test   esi,esi
100025b5:	je     0x100025ee
100025b7:	lea    eax,[esi+0x8]
100025ba:	push   eax
100025bb:	call   DWORD PTR ds:0x100660ac
100025c1:	test   eax,eax
100025c3:	jne    0x100025eb
100025c5:	test   esi,esi
100025c7:	je     0x100025eb
100025c9:	mov    eax,DWORD PTR [esi]
100025cb:	test   eax,eax
100025cd:	je     0x100025d6
100025cf:	push   eax
100025d0:	call   DWORD PTR ds:0x100662b4
100025d6:	mov    eax,DWORD PTR [esi+0x4]
100025d9:	test   eax,eax
100025db:	je     0x100025e4
100025dd:	push   eax
100025de:	call   0x100434b0
100025e3:	pop    ecx
100025e4:	push   esi
100025e5:	call   0x10042f82
100025ea:	pop    ecx
100025eb:	and    DWORD PTR [edi],0x0
100025ee:	pop    esi
100025ef:	ret    
100025f0:	push   DWORD PTR [esp+0x4]
100025f4:	and    DWORD PTR [esi+0x4],0x0
100025f8:	mov    DWORD PTR [esi+0x8],0x1
100025ff:	call   DWORD PTR ds:0x100662b0
10002605:	test   eax,eax
10002607:	mov    DWORD PTR [esi],eax
10002609:	jne    0x1000261b
1000260b:	cmp    DWORD PTR [esp+0x4],eax
1000260f:	je     0x1000261b
10002611:	push   0x8007000e
10002616:	call   0x10050c80
1000261b:	mov    eax,esi
1000261d:	ret    0x4
10002620:	push   ebp
10002621:	mov    ebp,esp
10002623:	push   ecx
10002624:	mov    eax,DWORD PTR [ebp+0x8]
10002627:	and    DWORD PTR [edi+0x4],0x0
1000262b:	push   ebx
1000262c:	push   esi
1000262d:	mov    DWORD PTR [edi+0x8],0x1
10002634:	call   0x10002599
10002639:	mov    ebx,eax
1000263b:	mov    eax,DWORD PTR [ebp+0xc]
1000263e:	call   0x10002599
10002643:	lea    esi,[eax+ebx*1]
10002646:	add    esi,esi
10002648:	push   esi
10002649:	push   0x0
1000264b:	mov    DWORD PTR [ebp-0x4],eax
1000264e:	call   DWORD PTR ds:0x100662a8
10002654:	test   eax,eax
10002656:	mov    DWORD PTR [edi],eax
10002658:	jne    0x10002666
1000265a:	push   0x8007000e
1000265f:	call   0x10050c80
10002664:	jmp    0x100026b7
10002666:	mov    ecx,DWORD PTR [ebp+0x8]
10002669:	mov    ecx,DWORD PTR [ecx]
1000266b:	test   ecx,ecx
1000266d:	je     0x10002673
1000266f:	mov    ecx,DWORD PTR [ecx]
10002671:	jmp    0x10002675
10002673:	xor    ecx,ecx
10002675:	test   ecx,ecx
10002677:	je     0x1000268c
10002679:	lea    edx,[ebx+ebx*1+0x2]
1000267d:	push   edx
1000267e:	push   ecx
1000267f:	add    esi,0x2
10002682:	push   esi
10002683:	push   eax
10002684:	call   0x100434b5
10002689:	add    esp,0x10
1000268c:	mov    eax,DWORD PTR [ebp+0xc]
1000268f:	mov    eax,DWORD PTR [eax]
10002691:	test   eax,eax
10002693:	je     0x10002699
10002695:	mov    ecx,DWORD PTR [eax]
10002697:	jmp    0x1000269b
10002699:	xor    ecx,ecx
1000269b:	test   ecx,ecx
1000269d:	je     0x100026b7
1000269f:	mov    eax,DWORD PTR [ebp-0x4]
100026a2:	lea    eax,[eax+eax*1+0x2]
100026a6:	push   eax
100026a7:	push   ecx
100026a8:	push   eax
100026a9:	mov    eax,DWORD PTR [edi]
100026ab:	lea    eax,[eax+ebx*2]
100026ae:	push   eax
100026af:	call   0x100434b5
100026b4:	add    esp,0x10
100026b7:	pop    esi
100026b8:	mov    eax,edi
100026ba:	pop    ebx
100026bb:	leave  
100026bc:	ret    0x8
100026bf:	mov    DWORD PTR [ecx],0x1006b96c
100026c5:	jmp    0x1000109a
100026ca:	push   esi
100026cb:	mov    esi,ecx
100026cd:	mov    DWORD PTR [esi],0x1006b96c
100026d3:	call   0x1000109a
100026d8:	test   BYTE PTR [esp+0x8],0x1
100026dd:	je     0x100026e6
100026df:	push   esi
100026e0:	call   0x10042f82
100026e5:	pop    ecx
100026e6:	mov    eax,esi
100026e8:	pop    esi
100026e9:	ret    0x4
100026ec:	push   0x0
100026ee:	mov    eax,0x1005fe80
100026f3:	call   0x10059b25
100026f8:	mov    esi,DWORD PTR [ebp+0x8]
100026fb:	mov    ecx,esi
100026fd:	call   0x10042ff1
10002702:	and    DWORD PTR [ebp-0x4],0x0
10002706:	push   DWORD PTR [ebp+0xc]
10002709:	lea    ecx,[esi+0xc]
1000270c:	mov    DWORD PTR [esi],0x10073634
10002712:	call   0x100011a2
10002717:	mov    eax,esi
10002719:	call   0x10059bfd
1000271e:	ret    0x8
10002721:	push   esi
10002722:	mov    esi,ecx
10002724:	push   0x0
10002726:	push   0x1
10002728:	lea    ecx,[esi+0xc]
1000272b:	mov    DWORD PTR [esi],0x10073634
10002731:	call   0x100012eb
10002736:	mov    ecx,esi
10002738:	pop    esi
10002739:	jmp    0x100430c0
1000273e:	cmp    DWORD PTR [ecx+0x24],0x10
10002742:	jb     0x10002748
10002744:	mov    eax,DWORD PTR [ecx+0x10]
10002747:	ret    
10002748:	lea    eax,[ecx+0x10]
1000274b:	ret    
1000274c:	push   esi
1000274d:	mov    esi,ecx
1000274f:	call   0x10002721
10002754:	test   BYTE PTR [esp+0x8],0x1
10002759:	je     0x10002762
1000275b:	push   esi
1000275c:	call   0x10042f82
10002761:	pop    ecx
10002762:	mov    eax,esi
10002764:	pop    esi
10002765:	ret    0x4
10002768:	push   0x4
1000276a:	mov    eax,0x1005fa11
1000276f:	call   0x10059b25
10002774:	mov    esi,ecx
10002776:	mov    DWORD PTR [ebp-0x10],esi
10002779:	mov    edi,DWORD PTR [ebp+0x8]
1000277c:	push   edi
1000277d:	call   0x10043068
10002782:	and    DWORD PTR [ebp-0x4],0x0
10002786:	add    edi,0xc
10002789:	push   edi
1000278a:	lea    ecx,[esi+0xc]
1000278d:	mov    DWORD PTR [esi],0x10073634
10002793:	call   0x100011a2
10002798:	mov    eax,esi
1000279a:	call   0x10059bfd
1000279f:	ret    0x4
100027a2:	push   0x0
100027a4:	mov    eax,0x1005fd03
100027a9:	call   0x10059b25
100027ae:	mov    esi,DWORD PTR [ebp+0x8]
100027b1:	push   DWORD PTR [ebp+0xc]
100027b4:	mov    ecx,esi
100027b6:	call   0x100011a2
100027bb:	push   DWORD PTR [ebp+0x10]
100027be:	and    DWORD PTR [ebp-0x4],0x0
100027c2:	lea    ecx,[esi+0x1c]
100027c5:	call   0x100011a2
100027ca:	push   DWORD PTR [ebp+0x14]
100027cd:	lea    ecx,[esi+0x38]
100027d0:	mov    BYTE PTR [ebp-0x4],0x1
100027d4:	call   0x100011a2
100027d9:	push   DWORD PTR [ebp+0x18]
100027dc:	lea    ecx,[esi+0x54]
100027df:	mov    BYTE PTR [ebp-0x4],0x2
100027e3:	call   0x100011a2
100027e8:	mov    eax,DWORD PTR [ebp+0x1c]
100027eb:	mov    DWORD PTR [esi+0x70],eax
100027ee:	mov    eax,DWORD PTR [edi]
100027f0:	mov    DWORD PTR [esi+0x80],eax
100027f6:	mov    eax,DWORD PTR [edi+0x4]
100027f9:	mov    DWORD PTR [esi+0x84],eax
100027ff:	mov    eax,DWORD PTR [ebx]
10002801:	mov    DWORD PTR [esi+0x78],eax
10002804:	mov    eax,DWORD PTR [ebx+0x4]
10002807:	mov    DWORD PTR [esi+0x7c],eax
1000280a:	mov    eax,esi
1000280c:	call   0x10059bfd
10002811:	ret    0x18
10002814:	push   0x4
10002816:	mov    eax,0x1005fe5d
1000281b:	call   0x10059b25
10002820:	mov    esi,ecx
10002822:	mov    DWORD PTR [ebp-0x10],esi
10002825:	and    DWORD PTR [ebp-0x4],0x0
10002829:	call   0x100040d0
1000282e:	push   0xffffffff
10002830:	push   0x0
10002832:	lea    eax,[ebp+0x8]
10002835:	push   eax
10002836:	mov    ecx,esi
10002838:	mov    BYTE PTR [ebp-0x4],0x1
1000283c:	call   0x1000123c
10002841:	mov    eax,DWORD PTR [ebp+0x24]
10002844:	push   0x0
10002846:	push   0x1
10002848:	lea    ecx,[ebp+0x8]
1000284b:	mov    DWORD PTR [esi+0x1c],eax
1000284e:	call   0x100012eb
10002853:	mov    eax,esi
10002855:	call   0x10059bfd
1000285a:	ret    0x20
1000285d:	push   0x0
1000285f:	mov    eax,0x1006214a
10002864:	call   0x10059b25
10002869:	mov    edi,DWORD PTR [ebp+0x8]
1000286c:	mov    esi,edi
1000286e:	call   0x100040d0
10002873:	mov    esi,DWORD PTR [ebp+0x10]
10002876:	xor    eax,eax
10002878:	mov    DWORD PTR [ebp-0x4],eax
1000287b:	mov    DWORD PTR [edi+0x1c],eax
1000287e:	mov    DWORD PTR [edi+0x20],eax
10002881:	mov    DWORD PTR [edi+0x24],eax
10002884:	mov    eax,DWORD PTR [ebp+0xc]
10002887:	mov    ecx,edi
10002889:	call   0x10039f40
1000288e:	mov    eax,edi
10002890:	call   0x10059bfd
10002895:	ret    0xc
10002898:	push   0x8
1000289a:	mov    eax,0x100624e2
1000289f:	call   0x10059b25
100028a4:	and    DWORD PTR [ebp-0x14],0x0
100028a8:	push   0x4
100028aa:	call   0x1004358e
100028af:	pop    ecx
100028b0:	mov    DWORD PTR [ebp-0x14],eax
100028b3:	and    DWORD PTR [ebp-0x4],0x0
100028b7:	test   eax,eax
100028b9:	je     0x100028c8
100028bb:	push   DWORD PTR [ebp+0xc]
100028be:	push   eax
100028bf:	call   0x10034a90
100028c4:	mov    esi,eax
100028c6:	jmp    0x100028ca
100028c8:	xor    esi,esi
100028ca:	mov    edi,esi
100028cc:	mov    DWORD PTR [ebp-0x14],edi
100028cf:	push   0x4
100028d1:	mov    DWORD PTR [ebp-0x4],0x1
100028d8:	call   0x1004358e
100028dd:	test   eax,eax
100028df:	pop    ecx
100028e0:	je     0x100028e8
100028e2:	xor    edi,edi
100028e4:	mov    DWORD PTR [eax],esi
100028e6:	jmp    0x100028ea
100028e8:	xor    eax,eax
100028ea:	mov    esi,DWORD PTR [ebp+0x8]
100028ed:	and    DWORD PTR [ebp-0x10],0x0
100028f1:	mov    DWORD PTR [esi],eax
100028f3:	lea    eax,[ebp-0x10]
100028f6:	call   0x10004296
100028fb:	test   edi,edi
100028fd:	je     0x1000290e
100028ff:	push   DWORD PTR [edi]
10002901:	call   DWORD PTR ds:0x10066070
10002907:	push   edi
10002908:	call   0x10042f82
1000290d:	pop    ecx
1000290e:	mov    eax,esi
10002910:	call   0x10059bfd
10002915:	ret    
10002916:	push   ebp
10002917:	mov    ebp,esp
10002919:	and    esp,0xfffffff8
1000291c:	push   ecx
1000291d:	push   ecx
1000291e:	push   esi
1000291f:	push   edi
10002920:	call   0x1002fa60
10002925:	mov    edi,eax
10002927:	mov    eax,DWORD PTR [ebp+0x8]
1000292a:	mov    eax,DWORD PTR [eax]
1000292c:	push   0x1
1000292e:	push   eax
1000292f:	lea    ecx,[esp+0x10]
10002933:	mov    esi,edx
10002935:	call   0x10035b10
1000293a:	mov    ecx,DWORD PTR [eax]
1000293c:	mov    eax,DWORD PTR [eax+0x4]
1000293f:	add    ecx,0x9534e000
10002945:	adc    eax,0x64
10002948:	cmp    esi,eax
1000294a:	ja     0x10002957
1000294c:	jb     0x10002952
1000294e:	cmp    edi,ecx
10002950:	jae    0x10002957
10002952:	xor    eax,eax
10002954:	inc    eax
10002955:	jmp    0x10002959
10002957:	xor    eax,eax
10002959:	pop    edi
1000295a:	pop    esi
1000295b:	mov    esp,ebp
1000295d:	pop    ebp
1000295e:	ret    0x4
10002961:	xor    eax,eax
10002963:	push   eax
10002964:	push   eax
10002965:	push   eax
10002966:	push   0x10002974
1000296b:	push   eax
1000296c:	push   eax
1000296d:	call   DWORD PTR ds:0x10066098
10002973:	ret    
10002974:	push   ebp
10002975:	sub    esp,0x8c
1000297b:	lea    ebp,[esp-0x4]
1000297f:	mov    eax,ds:0x1007e030
10002984:	xor    eax,ebp
10002986:	mov    DWORD PTR [ebp+0x8c],eax
1000298c:	push   0xa4
10002991:	mov    eax,0x10064a53
10002996:	call   0x10059b58
1000299b:	lea    eax,[ebp-0x21]
1000299e:	push   eax
1000299f:	call   0x100379b0
100029a4:	push   0x1
100029a6:	lea    eax,[ebp-0x14]
100029a9:	xor    ebx,ebx
100029ab:	mov    DWORD PTR [ebp-0x4],ebx
100029ae:	push   eax
100029af:	mov    BYTE PTR [ebp-0x4],0x1
100029b3:	call   0x10034a90
100029b8:	mov    BYTE PTR [ebp-0x4],0x2
100029bc:	call   0x1002fa60
100029c1:	mov    edi,eax
100029c3:	push   0x4
100029c5:	lea    eax,[ebp-0x14]
100029c8:	push   eax
100029c9:	lea    ecx,[ebp-0x20]
100029cc:	mov    esi,edx
100029ce:	call   0x10035b10
100029d3:	mov    ecx,DWORD PTR [eax]
100029d5:	mov    eax,DWORD PTR [eax+0x4]
100029d8:	add    ecx,0x65a0bc00
100029de:	adc    eax,0x1
100029e1:	cmp    esi,eax
100029e3:	ja     0x10002a26
100029e5:	jb     0x100029eb
100029e7:	cmp    edi,ecx
100029e9:	jae    0x10002a26
100029eb:	push   DWORD PTR [ebp-0x14]
100029ee:	call   DWORD PTR ds:0x10066070
100029f4:	call   0x100379d0
100029f9:	xor    eax,eax
100029fb:	lea    esp,[ebp-0xc0]
10002a01:	mov    ecx,DWORD PTR [ebp-0xc]
10002a04:	mov    DWORD PTR fs:0x0,ecx
10002a0b:	pop    ecx
10002a0c:	pop    edi
10002a0d:	pop    esi
10002a0e:	pop    ebx
10002a0f:	mov    ecx,DWORD PTR [ebp+0x8c]
10002a15:	xor    ecx,ebp
10002a17:	call   0x10042f87
10002a1c:	add    ebp,0x90
10002a22:	leave  
10002a23:	ret    0x4
10002a26:	call   0x1002fa60
10002a2b:	mov    DWORD PTR [ebp-0x20],eax
10002a2e:	lea    eax,[ebp-0x20]
10002a31:	push   eax
10002a32:	lea    eax,[ebp-0x14]
10002a35:	push   eax
10002a36:	push   0x4
10002a38:	pop    ecx
10002a39:	mov    DWORD PTR [ebp-0x1c],edx
10002a3c:	call   0x10035c30
10002a41:	push   DWORD PTR [ebp-0x14]
10002a44:	call   DWORD PTR ds:0x10066070
10002a4a:	push   0xf
10002a4c:	pop    esi
10002a4d:	push   ebx
10002a4e:	lea    ecx,[ebp+0x70]
10002a51:	mov    DWORD PTR [ebp+0x88],esi
10002a57:	call   0x10001417
10002a5c:	mov    BYTE PTR [ebp-0x4],0x3
10002a60:	cmp    BYTE PTR ds:0x10080c3c,bl
10002a66:	jne    0x10002a91
10002a68:	lea    eax,[ebp-0x14]
10002a6b:	push   eax
10002a6c:	call   0x10037ef0
10002a71:	mov    eax,DWORD PTR [eax]
10002a73:	cmp    DWORD PTR [eax-0xc],ebx
10002a76:	pop    ecx
10002a77:	setne  al
10002a7a:	mov    ds:0x10080c3d,al
10002a7f:	mov    eax,DWORD PTR [ebp-0x14]
10002a82:	add    eax,0xfffffff0
10002a85:	call   0x1000206f
10002a8a:	mov    BYTE PTR ds:0x10080c3c,0x1
10002a91:	cmp    BYTE PTR ds:0x10080c3d,bl
10002a97:	mov    edi,0x1006cce8
10002a9c:	jne    0x10002aa3
10002a9e:	mov    edi,0x1006cd0c
10002aa3:	push   0x1006cd10
10002aa8:	push   0x3
10002aaa:	push   0x1006cd38
10002aaf:	call   0x100042cf
10002ab4:	add    esp,0xc
10002ab7:	push   eax
10002ab8:	lea    ecx,[ebp-0x5c]
10002abb:	call   0x100011c8
10002ac0:	push   edi
10002ac1:	push   eax
10002ac2:	lea    eax,[ebp-0x94]
10002ac8:	push   eax
10002ac9:	mov    BYTE PTR [ebp-0x4],0x4
10002acd:	call   0x1000653b
10002ad2:	add    esp,0xc
10002ad5:	push   0xffffffff
10002ad7:	push   ebx
10002ad8:	push   eax
10002ad9:	lea    ecx,[ebp+0x70]
10002adc:	mov    BYTE PTR [ebp-0x4],0x5
10002ae0:	call   0x1000123c
10002ae5:	push   ebx
10002ae6:	push   0x1
10002ae8:	lea    ecx,[ebp-0x94]
10002aee:	call   0x100012eb
10002af3:	push   ebx
10002af4:	push   0x1
10002af6:	lea    ecx,[ebp-0x5c]
10002af9:	call   0x100012eb
10002afe:	push   ebx
10002aff:	lea    ecx,[ebp+0x1c]
10002b02:	mov    DWORD PTR [ebp+0x34],esi
10002b05:	call   0x10001417
10002b0a:	push   ebx
10002b0b:	lea    ecx,[ebp+0x0]
10002b0e:	mov    DWORD PTR [ebp+0x18],esi
10002b11:	call   0x10001417
10002b16:	push   ebx
10002b17:	lea    ecx,[ebp+0x38]
10002b1a:	mov    DWORD PTR [ebp+0x50],esi
10002b1d:	call   0x10001417
10002b22:	mov    BYTE PTR [ebp-0x4],0x8
10002b26:	lea    eax,[ebp+0x1c]
10002b29:	mov    DWORD PTR [ebp-0x20],ebx
10002b2c:	mov    DWORD PTR [ebp-0x1c],ebx
10002b2f:	push   eax
10002b30:	lea    ebx,[ebp-0x20]
10002b33:	lea    ecx,[ebp+0x38]
10002b36:	call   0x10038840
10002b3b:	xor    ebx,ebx
10002b3d:	cmp    al,bl
10002b3f:	pop    ecx
10002b40:	je     0x10002d47
10002b46:	lea    eax,[ebp+0x38]
10002b49:	push   eax
10002b4a:	lea    ecx,[ebp-0x78]
10002b4d:	call   0x10031060
10002b52:	pop    ecx
10002b53:	mov    esi,eax
10002b55:	push   0x1fd80c5e
10002b5a:	push   0x1006cd3c
10002b5f:	mov    BYTE PTR [ebp-0x4],0x9
10002b63:	call   0x100042bd
10002b68:	pop    ecx
10002b69:	pop    ecx
10002b6a:	push   eax
10002b6b:	push   0x5
10002b6d:	push   0x1006cd74
10002b72:	call   0x100042cf
10002b77:	add    esp,0xc
10002b7a:	push   eax
10002b7b:	lea    ecx,[ebp-0x94]
10002b81:	call   0x100011c8
10002b86:	push   esi
10002b87:	push   eax
10002b88:	lea    eax,[ebp-0x5c]
10002b8b:	push   eax
10002b8c:	mov    BYTE PTR [ebp-0x4],0xa
10002b90:	call   0x10006581
10002b95:	add    esp,0xc
10002b98:	push   0xffffffff
10002b9a:	push   ebx
10002b9b:	lea    esi,[ebp+0x70]
10002b9e:	mov    BYTE PTR [ebp-0x4],0xb
10002ba2:	call   0x10004ce1
10002ba7:	xor    edi,edi
10002ba9:	push   ebx
10002baa:	inc    edi
10002bab:	push   edi
10002bac:	lea    ecx,[ebp-0x5c]
10002baf:	call   0x100012eb
10002bb4:	push   ebx
10002bb5:	push   edi
10002bb6:	lea    ecx,[ebp-0x94]
10002bbc:	call   0x100012eb
10002bc1:	push   ebx
10002bc2:	push   edi
10002bc3:	lea    ecx,[ebp-0x78]
10002bc6:	mov    BYTE PTR [ebp-0x4],0x8
10002bca:	call   0x100012eb
10002bcf:	lea    eax,[ebp+0x1c]
10002bd2:	push   eax
10002bd3:	lea    ecx,[ebp-0x94]
10002bd9:	call   0x10031060
10002bde:	pop    ecx
10002bdf:	mov    esi,eax
10002be1:	push   0xc0f781a
10002be6:	push   0x1006cd7c
10002beb:	mov    BYTE PTR [ebp-0x4],0xc
10002bef:	call   0x100042bd
10002bf4:	pop    ecx
10002bf5:	pop    ecx
10002bf6:	push   0xac3857c
10002bfb:	push   eax
10002bfc:	call   0x100042bd
10002c01:	pop    ecx
10002c02:	pop    ecx
10002c03:	push   eax
10002c04:	push   0x7
10002c06:	push   0x1006cda8
10002c0b:	call   0x100042cf
10002c10:	add    esp,0xc
10002c13:	push   eax
10002c14:	lea    ecx,[ebp-0x5c]
10002c17:	call   0x100011c8
10002c1c:	push   esi
10002c1d:	push   eax
10002c1e:	mov    BYTE PTR [ebp-0x4],0xd
10002c22:	lea    eax,[ebp-0x78]
10002c25:	push   eax
10002c26:	call   0x10006581
10002c2b:	add    esp,0xc
10002c2e:	push   0xffffffff
10002c30:	push   ebx
10002c31:	lea    esi,[ebp+0x70]
10002c34:	mov    BYTE PTR [ebp-0x4],0xe
10002c38:	call   0x10004ce1
10002c3d:	push   ebx
10002c3e:	push   edi
10002c3f:	lea    ecx,[ebp-0x78]
10002c42:	call   0x100012eb
10002c47:	push   ebx
10002c48:	push   edi
10002c49:	lea    ecx,[ebp-0x5c]
10002c4c:	call   0x100012eb
10002c51:	push   ebx
10002c52:	push   edi
10002c53:	lea    ecx,[ebp-0x94]
10002c59:	mov    BYTE PTR [ebp-0x4],0x8
10002c5d:	call   0x100012eb
10002c62:	mov    eax,ds:0x10080a74
10002c67:	mov    ecx,0x10080a74
10002c6c:	call   DWORD PTR [eax+0xc]
10002c6f:	add    eax,0x10
10002c72:	mov    DWORD PTR [ebp-0x14],eax
10002c75:	push   0x4ba8916c
10002c7a:	push   0x1006cdb0
10002c7f:	mov    BYTE PTR [ebp-0x4],0xf
10002c83:	call   0x100042bd
10002c88:	pop    ecx
10002c89:	pop    ecx
10002c8a:	push   0x20f38058
10002c8f:	push   eax
10002c90:	call   0x100042bd
10002c95:	pop    ecx
10002c96:	pop    ecx
10002c97:	push   0x34e44354
10002c9c:	push   eax
10002c9d:	call   0x100042bd
10002ca2:	pop    ecx
10002ca3:	pop    ecx
10002ca4:	push   0x71f701f2
10002ca9:	push   eax
10002caa:	call   0x100042bd
10002caf:	pop    ecx
10002cb0:	pop    ecx
10002cb1:	push   0x6947d0da
10002cb6:	push   eax
10002cb7:	call   0x100042bd
10002cbc:	pop    ecx
10002cbd:	pop    ecx
10002cbe:	push   0x285033b0
10002cc3:	push   eax
10002cc4:	call   0x100042bd
10002cc9:	pop    ecx
10002cca:	pop    ecx
10002ccb:	push   eax
10002ccc:	push   0xc
10002cce:	push   0x1006cdd4
10002cd3:	call   0x1000448e
10002cd8:	add    esp,0xc
10002cdb:	push   DWORD PTR [ebp-0x1c]
10002cde:	push   DWORD PTR [ebp-0x20]
10002ce1:	push   eax
10002ce2:	lea    eax,[ebp-0x14]
10002ce5:	call   0x100064f0
10002cea:	add    esp,0xc
10002ced:	call   DWORD PTR ds:0x1007efec
10002cf3:	lea    esi,[ebp-0x14]
10002cf6:	mov    DWORD PTR [ebp-0x18],eax
10002cf9:	call   0x100041ef
10002cfe:	mov    edi,eax
10002d00:	cmp    edi,ebx
10002d02:	je     0x10002d13
10002d04:	push   edi
10002d05:	call   DWORD PTR ds:0x100660c4
10002d0b:	inc    eax
10002d0c:	cmp    eax,0x3fffffff
10002d11:	jle    0x10002d17
10002d13:	xor    eax,eax
10002d15:	jmp    0x10002d32
10002d17:	lea    esi,[eax+eax*1]
10002d1a:	mov    eax,esi
10002d1c:	call   0x1004b7e0
10002d21:	mov    eax,esp
10002d23:	mov    DWORD PTR [ebp-0x10],esp
10002d26:	push   DWORD PTR [ebp-0x18]
10002d29:	push   esi
10002d2a:	push   edi
10002d2b:	mov    esi,eax
10002d2d:	call   0x10002422
10002d32:	push   eax
10002d33:	lea    eax,[ebp+0x70]
10002d36:	push   eax
10002d37:	call   0x10004107
10002d3c:	mov    eax,DWORD PTR [ebp-0x14]
10002d3f:	add    eax,0xfffffff0
10002d42:	call   0x1000206f
10002d47:	mov    DWORD PTR [ebp-0x3c],ebx
10002d4a:	mov    DWORD PTR [ebp-0x38],ebx
10002d4d:	mov    DWORD PTR [ebp-0x34],ebx
10002d50:	lea    eax,[ebp-0x40]
10002d53:	push   eax
10002d54:	mov    BYTE PTR [ebp-0x4],0x10
10002d58:	call   0x10038a00
10002d5d:	pop    ecx
10002d5e:	mov    DWORD PTR [ebp-0x14],ebx
10002d61:	lea    eax,[ebp-0x40]
10002d64:	call   0x10004660
10002d69:	cmp    DWORD PTR [ebp-0x14],eax
10002d6c:	je     0x10002df9
10002d72:	push   0x63fc31d2
10002d77:	push   0x1006cdf0
10002d7c:	call   0x100042bd
10002d81:	pop    ecx
10002d82:	pop    ecx
10002d83:	push   0x307275cc
10002d88:	push   eax
10002d89:	call   0x100042bd
10002d8e:	pop    ecx
10002d8f:	pop    ecx
10002d90:	push   eax
10002d91:	push   0x5
10002d93:	push   0x1006ce30
10002d98:	call   0x100042cf
10002d9d:	add    esp,0xc
10002da0:	push   eax
10002da1:	lea    ecx,[ebp-0x5c]
10002da4:	call   0x100011c8
10002da9:	mov    edi,eax
10002dab:	mov    BYTE PTR [ebp-0x4],0x11
10002daf:	push   DWORD PTR [ebp-0x14]
10002db2:	lea    esi,[ebp-0x40]
10002db5:	call   0x10004676
10002dba:	push   eax
10002dbb:	lea    eax,[ebp-0x78]
10002dbe:	push   edi
10002dbf:	push   eax
10002dc0:	call   0x10006581
10002dc5:	add    esp,0xc
10002dc8:	push   0xffffffff
10002dca:	push   ebx
10002dcb:	lea    esi,[ebp+0x70]
10002dce:	mov    BYTE PTR [ebp-0x4],0x12
10002dd2:	call   0x10004ce1
10002dd7:	push   ebx
10002dd8:	push   0x1
10002dda:	lea    ecx,[ebp-0x78]
10002ddd:	call   0x100012eb
10002de2:	push   ebx
10002de3:	push   0x1
10002de5:	lea    ecx,[ebp-0x5c]
10002de8:	mov    BYTE PTR [ebp-0x4],0x10
10002dec:	call   0x100012eb
10002df1:	inc    DWORD PTR [ebp-0x14]
10002df4:	jmp    0x10002d61
10002df9:	lea    eax,[ebp-0xb0]
10002dff:	push   eax
10002e00:	call   0x100391c0
10002e05:	pop    ecx
10002e06:	push   eax
10002e07:	lea    ecx,[ebp-0x94]
10002e0d:	mov    BYTE PTR [ebp-0x4],0x13
10002e11:	call   0x10031060
10002e16:	pop    ecx
10002e17:	mov    esi,eax
10002e19:	push   0x3d682b04
10002e1e:	push   0x1006ce38
10002e23:	mov    BYTE PTR [ebp-0x4],0x14
10002e27:	call   0x100042bd
10002e2c:	pop    ecx
10002e2d:	pop    ecx
10002e2e:	push   eax
10002e2f:	push   0x7
10002e31:	push   0x1006ce70
10002e36:	call   0x100042cf
10002e3b:	add    esp,0xc
10002e3e:	push   eax
10002e3f:	lea    ecx,[ebp-0x5c]
10002e42:	call   0x100011c8
10002e47:	push   esi
10002e48:	push   eax
10002e49:	lea    eax,[ebp-0x78]
10002e4c:	push   eax
10002e4d:	mov    BYTE PTR [ebp-0x4],0x15
10002e51:	call   0x10006581
10002e56:	add    esp,0xc
10002e59:	push   0xffffffff
10002e5b:	push   ebx
10002e5c:	lea    esi,[ebp+0x70]
10002e5f:	mov    BYTE PTR [ebp-0x4],0x16
10002e63:	call   0x10004ce1
10002e68:	xor    esi,esi
10002e6a:	push   ebx
10002e6b:	inc    esi
10002e6c:	push   esi
10002e6d:	lea    ecx,[ebp-0x78]
10002e70:	call   0x100012eb
10002e75:	push   ebx
10002e76:	push   esi
10002e77:	lea    ecx,[ebp-0x5c]
10002e7a:	call   0x100012eb
10002e7f:	push   ebx
10002e80:	push   esi
10002e81:	lea    ecx,[ebp-0x94]
10002e87:	call   0x100012eb
10002e8c:	push   ebx
10002e8d:	push   esi
10002e8e:	lea    ecx,[ebp-0xb0]
10002e94:	mov    BYTE PTR [ebp-0x4],0x10
10002e98:	call   0x100012eb
10002e9d:	call   DWORD PTR ds:0x1007efec
10002ea3:	mov    DWORD PTR [ebp-0x18],eax
10002ea6:	mov    eax,ds:0x10080a74
10002eab:	mov    ecx,0x10080a74
10002eb0:	call   DWORD PTR [eax+0xc]
10002eb3:	add    eax,0x10
10002eb6:	mov    DWORD PTR [ebp-0x14],eax
10002eb9:	push   0x633e0d1e
10002ebe:	push   0x1006ce78
10002ec3:	mov    BYTE PTR [ebp-0x4],0x17
10002ec7:	call   0x100042bd
10002ecc:	pop    ecx
10002ecd:	pop    ecx
10002ece:	push   0x167a5f6
10002ed3:	push   eax
10002ed4:	call   0x100042bd
10002ed9:	pop    ecx
10002eda:	pop    ecx
10002edb:	push   0x167a6980
10002ee0:	push   eax
10002ee1:	call   0x100042bd
10002ee6:	pop    ecx
10002ee7:	pop    ecx
10002ee8:	mov    esi,eax
10002eea:	call   0x10033500
10002eef:	push   esi
10002ef0:	push   0x4
10002ef2:	push   0x1006ceac
10002ef7:	mov    edi,eax
10002ef9:	call   0x1000448e
10002efe:	add    esp,0xc
10002f01:	push   edi
10002f02:	push   eax
10002f03:	lea    eax,[ebp-0x14]
10002f06:	call   0x100064f0
10002f0b:	pop    ecx
10002f0c:	pop    ecx
10002f0d:	push   0xffffffff
10002f0f:	lea    esi,[ebp-0x14]
10002f12:	call   0x100021a4
10002f17:	mov    edi,eax
10002f19:	cmp    edi,ebx
10002f1b:	je     0x10002f2c
10002f1d:	push   edi
10002f1e:	call   DWORD PTR ds:0x100660c4
10002f24:	inc    eax
10002f25:	cmp    eax,0x3fffffff
10002f2a:	jle    0x10002f30
10002f2c:	xor    eax,eax
10002f2e:	jmp    0x10002f4b
10002f30:	lea    esi,[eax+eax*1]
10002f33:	mov    eax,esi
10002f35:	call   0x1004b7e0
10002f3a:	mov    eax,esp
10002f3c:	mov    DWORD PTR [ebp-0x10],esp
10002f3f:	push   DWORD PTR [ebp-0x18]
10002f42:	push   esi
10002f43:	push   edi
10002f44:	mov    esi,eax
10002f46:	call   0x10002422
10002f4b:	push   eax
10002f4c:	lea    ecx,[ebp-0x78]
10002f4f:	call   0x100011c8
10002f54:	mov    esi,eax
10002f56:	push   0x1006ceb8
10002f5b:	push   0x5
10002f5d:	push   0x1006cef0
10002f62:	mov    BYTE PTR [ebp-0x4],0x18
10002f66:	call   0x100042cf
10002f6b:	add    esp,0xc
10002f6e:	push   esi
10002f6f:	push   eax
10002f70:	lea    eax,[ebp-0xb0]
10002f76:	push   eax
10002f77:	call   0x100065cc
10002f7c:	add    esp,0xc
10002f7f:	push   0xffffffff
10002f81:	push   ebx
10002f82:	lea    esi,[ebp+0x70]
10002f85:	mov    BYTE PTR [ebp-0x4],0x19
10002f89:	call   0x10004ce1
10002f8e:	push   ebx
10002f8f:	push   0x1
10002f91:	lea    ecx,[ebp-0xb0]
10002f97:	call   0x100012eb
10002f9c:	push   ebx
10002f9d:	push   0x1
10002f9f:	lea    ecx,[ebp-0x78]
10002fa2:	call   0x100012eb
10002fa7:	mov    BYTE PTR [ebp-0x4],0x10
10002fab:	mov    eax,DWORD PTR [ebp-0x14]
10002fae:	add    eax,0xfffffff0
10002fb1:	call   0x1000206f
10002fb6:	lea    ecx,[ebp+0x54]
10002fb9:	call   0x100185fb
10002fbe:	mov    BYTE PTR [ebp-0x4],0x1a
10002fc2:	cmp    DWORD PTR [ebp+0x6c],0x10
10002fc6:	mov    eax,DWORD PTR [ebp+0x58]
10002fc9:	jae    0x10002fce
10002fcb:	lea    eax,[ebp+0x58]
10002fce:	push   eax
10002fcf:	call   0x1000206e
10002fd4:	pop    ecx
10002fd5:	push   DWORD PTR ds:0x10080d8c
10002fdb:	lea    ecx,[ebp-0x94]
10002fe1:	mov    DWORD PTR [ebp-0x14],ebx
10002fe4:	call   0x100011c8
10002fe9:	push   0xffffffff
10002feb:	lea    eax,[ebp-0x14]
10002fee:	push   eax
10002fef:	lea    eax,[ebp+0x70]
10002ff2:	push   eax
10002ff3:	lea    eax,[ebp+0x54]
10002ff6:	push   eax
10002ff7:	lea    eax,[ebp-0x18]
10002ffa:	push   eax
10002ffb:	lea    edx,[ebp-0x94]
10003001:	mov    BYTE PTR [ebp-0x4],0x1b
10003005:	call   0x10030f40
1000300a:	mov    ecx,DWORD PTR [eax]
1000300c:	mov    edi,ecx
1000300e:	add    esp,0x14
10003011:	mov    DWORD PTR [eax],ebx
10003013:	mov    DWORD PTR [ebp-0x1c],edi
10003016:	push   DWORD PTR [ebp-0x18]
10003019:	call   0x10042f82
1000301e:	pop    ecx
1000301f:	push   ebx
10003020:	push   0x1
10003022:	lea    ecx,[ebp-0x94]
10003028:	mov    BYTE PTR [ebp-0x4],0x1d
1000302c:	call   0x100012eb
10003031:	cmp    edi,ebx
10003033:	jne    0x1000307b
10003035:	call   0x1001857a
1000303a:	push   ebx
1000303b:	call   0x10042f82
10003040:	pop    ecx
10003041:	xor    edi,edi
10003043:	push   ebx
10003044:	inc    edi
10003045:	push   edi
10003046:	lea    ecx,[ebp+0x54]
10003049:	call   0x100012eb
1000304e:	lea    esi,[ebp-0x40]
10003051:	call   0x100049d4
10003056:	push   ebx
10003057:	push   edi
10003058:	lea    ecx,[ebp+0x38]
1000305b:	call   0x100012eb
10003060:	push   ebx
10003061:	push   edi
10003062:	lea    ecx,[ebp+0x0]
10003065:	call   0x100012eb
1000306a:	push   ebx
1000306b:	push   edi
1000306c:	lea    ecx,[ebp+0x1c]
1000306f:	call   0x100012eb
10003074:	push   ebx
10003075:	push   edi
10003076:	jmp    0x10003175
1000307b:	mov    eax,DWORD PTR [ebp-0x14]
1000307e:	mov    DWORD PTR [ebp-0x2c],eax
10003081:	lea    eax,[ebp-0x30]
10003084:	push   eax
10003085:	mov    DWORD PTR [ebp-0x30],ebx
10003088:	mov    DWORD PTR [ebp-0x28],edi
1000308b:	call   0x10037840
10003090:	sub    eax,ebx
10003092:	je     0x1000310b
10003094:	dec    eax
10003095:	je     0x100030e8
10003097:	dec    eax
10003098:	je     0x100030cd
1000309a:	dec    eax
1000309b:	je     0x100030af
1000309d:	call   0x1000206e
100030a2:	push   0x5
100030a4:	call   0x100379e0
100030a9:	pop    ecx
100030aa:	jmp    0x10003138
100030af:	lea    eax,[ebp-0x30]
100030b2:	push   eax
100030b3:	lea    esi,[ebp-0xb0]
100030b9:	call   0x10037500
100030be:	push   eax
100030bf:	mov    BYTE PTR [ebp-0x4],0x21
100030c3:	call   0x10003e2e
100030c8:	pop    ecx
100030c9:	mov    ecx,esi
100030cb:	jmp    0x10003101
100030cd:	lea    eax,[ebp-0x30]
100030d0:	push   eax
100030d1:	lea    esi,[ebp-0x78]
100030d4:	call   0x10037500
100030d9:	push   eax
100030da:	mov    BYTE PTR [ebp-0x4],0x20
100030de:	call   0x10003bee
100030e3:	pop    ecx
100030e4:	mov    ecx,esi
100030e6:	jmp    0x10003101
100030e8:	lea    eax,[ebp-0x30]
100030eb:	push   eax
100030ec:	lea    esi,[ebp-0x5c]
100030ef:	call   0x10037500
100030f4:	push   eax
100030f5:	mov    BYTE PTR [ebp-0x4],0x1f
100030f9:	call   0x10003a62
100030fe:	pop    ecx
100030ff:	mov    ecx,esi
10003101:	push   ebx
10003102:	push   0x1
10003104:	call   0x100012eb
10003109:	jmp    0x10003138
1000310b:	call   0x1000206e
10003110:	lea    eax,[ebp-0x14]
10003113:	push   0x1
10003115:	push   eax
10003116:	call   0x10002898
1000311b:	pop    ecx
1000311c:	pop    ecx
1000311d:	mov    BYTE PTR [ebp-0x4],0x1e
10003121:	mov    esi,DWORD PTR [eax]
10003123:	lea    eax,[ebp-0x30]
10003126:	call   0x100031a5
1000312b:	lea    eax,[ebp-0x14]
1000312e:	call   0x10004296
10003133:	call   0x1000206e
10003138:	push   edi
10003139:	call   0x10042f82
1000313e:	pop    ecx
1000313f:	push   ebx
10003140:	push   0x1
10003142:	lea    ecx,[ebp+0x54]
10003145:	call   0x100012eb
1000314a:	lea    esi,[ebp-0x40]
1000314d:	call   0x100049d4
10003152:	xor    esi,esi
10003154:	push   ebx
10003155:	inc    esi
10003156:	push   esi
10003157:	lea    ecx,[ebp+0x38]
1000315a:	call   0x100012eb
1000315f:	push   ebx
10003160:	push   esi
10003161:	lea    ecx,[ebp+0x0]
10003164:	call   0x100012eb
10003169:	push   ebx
1000316a:	push   esi
1000316b:	lea    ecx,[ebp+0x1c]
1000316e:	call   0x100012eb
10003173:	push   ebx
10003174:	push   esi
10003175:	lea    ecx,[ebp+0x70]
10003178:	call   0x100012eb
1000317d:	jmp    0x100029f4
10003182:	call   0x1001857a
10003187:	mov    eax,0x1000318d
1000318c:	ret    
1000318d:	jmp    0x100029f4
10003192:	push   0x4
10003194:	call   0x100379e0
10003199:	pop    ecx
1000319a:	call   0x1001857a
1000319f:	mov    eax,0x100029f4
100031a4:	ret    
100031a5:	push   ebp
100031a6:	mov    ebp,esp
100031a8:	and    esp,0xfffffff8
100031ab:	push   ecx
100031ac:	push   ecx
100031ad:	mov    ecx,DWORD PTR [esi]
100031af:	push   ebx
100031b0:	push   edi
100031b1:	mov    ebx,eax
100031b3:	call   0x10034df0
100031b8:	and    DWORD PTR [esp+0x8],0x0
100031bd:	xor    eax,eax
100031bf:	lea    edi,[esp+0xc]
100031c3:	stos   DWORD PTR es:[edi],eax
100031c4:	lea    eax,[esp+0x8]
100031c8:	push   eax
100031c9:	push   DWORD PTR [esi]
100031cb:	xor    ecx,ecx
100031cd:	inc    ecx
100031ce:	call   0x10035c30
100031d3:	push   esi
100031d4:	mov    ecx,ebx
100031d6:	call   0x1000324d
100031db:	push   esi
100031dc:	mov    ecx,ebx
100031de:	call   0x10003714
100031e3:	push   esi
100031e4:	call   0x10003453
100031e9:	call   0x10003552
100031ee:	push   esi
100031ef:	call   0x10003682
100031f4:	push   ebx
100031f5:	call   0x10037840
100031fa:	push   ebx
100031fb:	mov    edi,eax
100031fd:	call   0x10037840
10003202:	push   edi
10003203:	push   DWORD PTR [esi]
10003205:	mov    ecx,eax
10003207:	call   0x10035d40
1000320c:	push   ebx
1000320d:	call   0x10037840
10003212:	push   ebx
10003213:	mov    edi,eax
10003215:	call   0x10037840
1000321a:	push   edi
1000321b:	push   DWORD PTR [esi]
1000321d:	mov    ecx,eax
1000321f:	call   0x10035f60
10003224:	call   0x1002fa60
10003229:	mov    DWORD PTR [esp+0x8],eax
1000322d:	lea    eax,[esp+0x8]
10003231:	push   eax
10003232:	push   DWORD PTR [esi]
10003234:	xor    ecx,ecx
10003236:	inc    ecx
10003237:	mov    DWORD PTR [esp+0x14],edx
1000323b:	call   0x10035c30
10003240:	mov    ecx,ebx
10003242:	call   0x100039d4
10003247:	pop    edi
10003248:	pop    ebx
10003249:	mov    esp,ebp
1000324b:	pop    ebp
1000324c:	ret    
1000324d:	push   0x140
10003252:	mov    eax,0x10063184
10003257:	call   0x10059b8e
1000325c:	mov    eax,DWORD PTR [ebp+0x8]
1000325f:	mov    edi,ecx
10003261:	push   edi
10003262:	mov    DWORD PTR [ebp-0x9c],eax
10003268:	mov    DWORD PTR [ebp-0x98],edi
1000326e:	call   0x10037840
10003273:	xor    ebx,ebx
10003275:	cmp    eax,ebx
10003277:	je     0x1000341b
1000327d:	mov    DWORD PTR [ebp-0x90],eax
10003283:	jmp    0x1000328d
10003285:	mov    edi,DWORD PTR [ebp-0x98]
1000328b:	xor    ebx,ebx
1000328d:	push   edi
1000328e:	lea    esi,[ebp-0xc0]
10003294:	call   0x10037500
10003299:	push   eax
1000329a:	lea    esi,[ebp-0x30]
1000329d:	mov    DWORD PTR [ebp-0x4],ebx
100032a0:	call   0x1002fa90
100032a5:	pop    ecx
100032a6:	push   ebx
100032a7:	push   0x1
100032a9:	lea    ecx,[ebp-0xc0]
100032af:	mov    BYTE PTR [ebp-0x4],0x2
100032b3:	call   0x100012eb
100032b8:	push   edi
100032b9:	lea    esi,[ebp-0x4c]
100032bc:	call   0x10037500
100032c1:	push   edi
100032c2:	lea    esi,[ebp-0x68]
100032c5:	mov    BYTE PTR [ebp-0x4],0x3
100032c9:	call   0x10037500
100032ce:	push   edi
100032cf:	lea    esi,[ebp-0x84]
100032d5:	mov    BYTE PTR [ebp-0x4],0x4
100032d9:	call   0x10037500
100032de:	push   edi
100032df:	mov    BYTE PTR [ebp-0x4],0x5
100032e3:	call   0x10037840
100032e8:	push   edi
100032e9:	mov    DWORD PTR [ebp-0x94],eax
100032ef:	call   0x10037840
100032f4:	push   ebx
100032f5:	cdq    
100032f6:	mov    esi,0x2710
100032fb:	push   esi
100032fc:	push   edx
100032fd:	push   eax
100032fe:	call   0x1004f4f0
10003303:	push   edi
10003304:	mov    DWORD PTR [ebp-0xa4],eax
1000330a:	mov    DWORD PTR [ebp-0xa0],edx
10003310:	call   0x10037840
10003315:	push   ebx
10003316:	cdq    
10003317:	push   esi
10003318:	push   edx
10003319:	push   eax
1000331a:	call   0x1004f4f0
1000331f:	mov    DWORD PTR [ebp-0x8c],eax
10003325:	mov    DWORD PTR [ebp-0x88],edx
1000332b:	call   0x1002fa60
10003330:	add    DWORD PTR [ebp-0x8c],eax
10003336:	mov    eax,DWORD PTR [ebp-0x94]
1000333c:	lea    ecx,[ebp-0x30]
1000333f:	adc    DWORD PTR [ebp-0x88],edx
10003345:	shr    eax,0x2
10003348:	test   al,0x1
1000334a:	lea    eax,[ebp-0xc0]
10003350:	push   eax
10003351:	je     0x1000335f
10003353:	call   0x10030b80
10003358:	pop    ecx
10003359:	mov    BYTE PTR [ebp-0x4],0x6
1000335d:	jmp    0x10003369
1000335f:	call   0x1002fbd0
10003364:	pop    ecx
10003365:	mov    BYTE PTR [ebp-0x4],0x7
10003369:	push   0xffffffff
1000336b:	push   ebx
1000336c:	push   eax
1000336d:	lea    ecx,[ebp-0x30]
10003370:	call   0x1000123c
10003375:	push   ebx
10003376:	push   0x1
10003378:	lea    ecx,[ebp-0xc0]
1000337e:	mov    BYTE PTR [ebp-0x4],0x5
10003382:	call   0x100012eb
10003387:	push   DWORD PTR [ebp-0x94]
1000338d:	lea    eax,[ebp-0x84]
10003393:	push   eax
10003394:	lea    eax,[ebp-0x68]
10003397:	push   eax
10003398:	lea    eax,[ebp-0x4c]
1000339b:	push   eax
1000339c:	lea    eax,[ebp-0x30]
1000339f:	push   eax
100033a0:	lea    eax,[ebp-0x14c]
100033a6:	push   eax
100033a7:	lea    edi,[ebp-0x8c]
100033ad:	lea    ebx,[ebp-0xa4]
100033b3:	call   0x100027a2
100033b8:	mov    ecx,DWORD PTR [ebp-0x9c]
100033be:	mov    BYTE PTR [ebp-0x4],0x8
100033c2:	mov    edx,DWORD PTR [ecx]
100033c4:	lea    ecx,[ebp-0x30]
100033c7:	push   ecx
100033c8:	push   edx
100033c9:	mov    ecx,eax
100033cb:	call   0x10034ee0
100033d0:	lea    esi,[ebp-0x14c]
100033d6:	call   0x10003423
100033db:	xor    edi,edi
100033dd:	xor    esi,esi
100033df:	push   edi
100033e0:	inc    esi
100033e1:	push   esi
100033e2:	lea    ecx,[ebp-0x84]
100033e8:	call   0x100012eb
100033ed:	push   edi
100033ee:	push   esi
100033ef:	lea    ecx,[ebp-0x68]
100033f2:	call   0x100012eb
100033f7:	push   edi
100033f8:	push   esi
100033f9:	lea    ecx,[ebp-0x4c]
100033fc:	call   0x100012eb
10003401:	or     DWORD PTR [ebp-0x4],0xffffffff
10003405:	push   edi
10003406:	push   esi
10003407:	lea    ecx,[ebp-0x30]
1000340a:	call   0x100012eb
1000340f:	dec    DWORD PTR [ebp-0x90]
10003415:	jne    0x10003285
1000341b:	call   0x10059c11
10003420:	ret    0x4
10003423:	push   0x0
10003425:	push   0x1
10003427:	lea    ecx,[esi+0x54]
1000342a:	call   0x100012eb
1000342f:	push   0x0
10003431:	push   0x1
10003433:	lea    ecx,[esi+0x38]
10003436:	call   0x100012eb
1000343b:	push   0x0
1000343d:	push   0x1
1000343f:	lea    ecx,[esi+0x1c]
10003442:	call   0x100012eb
10003447:	push   0x0
10003449:	push   0x1
1000344b:	mov    ecx,esi
1000344d:	call   0x100012eb
10003452:	ret    
10003453:	push   0x50
10003455:	mov    eax,0x10063110
1000345a:	call   0x10059b8e
1000345f:	mov    eax,DWORD PTR [ebp+0x8]
10003462:	mov    DWORD PTR [ebp-0x34],eax
10003465:	mov    eax,DWORD PTR [ebx]
10003467:	push   0x4
10003469:	pop    edi
1000346a:	mov    DWORD PTR [ebp-0x3c],ebx
1000346d:	mov    DWORD PTR [ebp-0x38],eax
10003470:	and    DWORD PTR [ebp-0x4],0x0
10003474:	push   ebx
10003475:	call   0x10037840
1000347a:	test   eax,eax
1000347c:	je     0x1000350e
10003482:	mov    DWORD PTR [ebp-0x30],eax
10003485:	push   ebx
10003486:	lea    esi,[ebp-0x2c]
10003489:	call   0x10037500
1000348e:	mov    BYTE PTR [ebp-0x4],0x1
10003492:	mov    eax,DWORD PTR [ebp-0x18]
10003495:	push   ebx
10003496:	lea    esi,[ebp-0x58]
10003499:	lea    edi,[edi+eax*1+0x1]
1000349d:	call   0x10037500
100034a2:	push   0xffffffff
100034a4:	push   0x0
100034a6:	push   eax
100034a7:	lea    ecx,[ebp-0x2c]
100034aa:	mov    BYTE PTR [ebp-0x4],0x2
100034ae:	call   0x1000123c
100034b3:	push   0x0
100034b5:	push   0x1
100034b7:	mov    ecx,esi
100034b9:	mov    BYTE PTR [ebp-0x4],0x1
100034bd:	call   0x100012eb
100034c2:	mov    eax,DWORD PTR [ebp-0x18]
100034c5:	push   ebx
100034c6:	lea    esi,[ebp-0x58]
100034c9:	lea    edi,[edi+eax*1+0x1]
100034cd:	call   0x10037500
100034d2:	push   0xffffffff
100034d4:	push   0x0
100034d6:	push   eax
100034d7:	lea    ecx,[ebp-0x2c]
100034da:	mov    BYTE PTR [ebp-0x4],0x3
100034de:	call   0x1000123c
100034e3:	push   0x0
100034e5:	push   0x1
100034e7:	mov    ecx,esi
100034e9:	call   0x100012eb
100034ee:	mov    eax,DWORD PTR [ebp-0x18]
100034f1:	push   0x0
100034f3:	push   0x1
100034f5:	lea    ecx,[ebp-0x2c]
100034f8:	lea    edi,[edi+eax*1+0x1]
100034fc:	mov    BYTE PTR [ebp-0x4],0x0
10003500:	call   0x100012eb
10003505:	dec    DWORD PTR [ebp-0x30]
10003508:	jne    0x10003485
1000350e:	or     DWORD PTR [ebp-0x4],0xffffffff
10003512:	mov    eax,DWORD PTR [ebp-0x38]
10003515:	push   edi
10003516:	mov    DWORD PTR [ebx],eax
10003518:	call   0x10043811
1000351d:	pop    ecx
1000351e:	mov    DWORD PTR [ebp-0x30],eax
10003521:	push   eax
10003522:	mov    esi,ebx
10003524:	mov    DWORD PTR [ebp-0x4],0x4
1000352b:	call   0x10037950
10003530:	push   DWORD PTR [ebp-0x30]
10003533:	mov    eax,DWORD PTR [ebp-0x34]
10003536:	push   0x1
10003538:	push   DWORD PTR [eax]
1000353a:	mov    ecx,edi
1000353c:	call   0x10036a00
10003541:	push   DWORD PTR [ebp-0x30]
10003544:	call   0x10042f82
10003549:	pop    ecx
1000354a:	call   0x10059c11
1000354f:	ret    0x4
10003552:	push   0x7c
10003554:	mov    eax,0x10063e5a
10003559:	call   0x10059b8e
1000355e:	push   ebx
1000355f:	call   0x10037840
10003564:	xor    edi,edi
10003566:	mov    esi,eax
10003568:	mov    DWORD PTR [ebp-0x54],esi
1000356b:	mov    DWORD PTR [ebp-0x60],edi
1000356e:	mov    DWORD PTR [ebp-0x5c],edi
10003571:	mov    DWORD PTR [ebp-0x58],edi
10003574:	lea    ecx,[ebp-0x30]
10003577:	mov    DWORD PTR [ebp-0x4],edi
1000357a:	call   0x100185fb
1000357f:	cmp    esi,edi
10003581:	mov    BYTE PTR [ebp-0x4],0x1
10003585:	jle    0x1000360c
1000358b:	mov    DWORD PTR [ebp-0x50],esi
1000358e:	push   ebx
1000358f:	lea    esi,[ebp-0x4c]
10003592:	call   0x10037500
10003597:	push   ebx
10003598:	mov    BYTE PTR [ebp-0x4],0x2
1000359c:	call   0x10037840
100035a1:	push   eax
100035a2:	sub    esp,0x1c
100035a5:	mov    eax,esi
100035a7:	mov    ecx,esp
100035a9:	mov    DWORD PTR [ebp-0x68],esp
100035ac:	push   eax
100035ad:	call   0x100011a2
100035b2:	lea    ecx,[ebp-0x88]
100035b8:	call   0x10002814
100035bd:	push   eax
100035be:	lea    esi,[ebp-0x64]
100035c1:	mov    BYTE PTR [ebp-0x4],0x3
100035c5:	call   0x10004237
100035ca:	push   edi
100035cb:	push   0x1
100035cd:	lea    ecx,[ebp-0x88]
100035d3:	mov    BYTE PTR [ebp-0x4],0x2
100035d7:	call   0x100012eb
100035dc:	lea    ecx,[ebp-0x30]
100035df:	lea    eax,[ebp-0x4c]
100035e2:	call   0x10006617
100035e7:	test   al,al
100035e9:	je     0x100035f8
100035eb:	push   0x1006cd08
100035f0:	lea    ecx,[ebp-0x30]
100035f3:	call   0x100012ce
100035f8:	push   edi
100035f9:	push   0x1
100035fb:	lea    ecx,[ebp-0x4c]
100035fe:	mov    BYTE PTR [ebp-0x4],0x1
10003602:	call   0x100012eb
10003607:	dec    DWORD PTR [ebp-0x50]
1000360a:	jne    0x1000358e
1000360c:	cmp    DWORD PTR [ebp-0x54],edi
1000360f:	je     0x10003652
10003611:	push   0x3e8
10003616:	push   DWORD PTR ds:0x10080ec8
1000361c:	call   DWORD PTR ds:0x10066084
10003622:	test   eax,eax
10003624:	jne    0x10003652
10003626:	call   0x1001884e
1000362b:	lea    eax,[ebp-0x64]
1000362e:	mov    ecx,0x10080eb8
10003633:	call   0x10018d3d
10003638:	movzx  eax,BYTE PTR ds:0x1007f6b0
1000363f:	push   eax
10003640:	call   0x10018b4a
10003645:	pop    ecx
10003646:	push   DWORD PTR ds:0x10080ec8
1000364c:	call   DWORD PTR ds:0x10066094
10003652:	push   0x1006cd08
10003657:	lea    esi,[ebp-0x30]
1000365a:	call   0x10006639
1000365f:	test   al,al
10003661:	pop    ecx
10003662:	jne    0x10003669
10003664:	call   0x1001857a
10003669:	push   edi
1000366a:	push   0x1
1000366c:	lea    ecx,[ebp-0x30]
1000366f:	call   0x100012eb
10003674:	lea    esi,[ebp-0x64]
10003677:	call   0x100047e3
1000367c:	call   0x10059c11
10003681:	ret    
10003682:	push   0x30
10003684:	mov    eax,0x100630c3
10003689:	call   0x10059b8e
1000368e:	mov    eax,DWORD PTR [ebp+0x8]
10003691:	mov    DWORD PTR [ebp-0x34],eax
10003694:	mov    eax,DWORD PTR [ebx]
10003696:	push   0x4
10003698:	pop    edi
10003699:	mov    DWORD PTR [ebp-0x3c],ebx
1000369c:	mov    DWORD PTR [ebp-0x38],eax
1000369f:	and    DWORD PTR [ebp-0x4],0x0
100036a3:	push   ebx
100036a4:	call   0x10037840
100036a9:	test   eax,eax
100036ab:	je     0x100036d0
100036ad:	mov    DWORD PTR [ebp-0x30],eax
100036b0:	push   ebx
100036b1:	lea    esi,[ebp-0x2c]
100036b4:	call   0x10037500
100036b9:	mov    eax,DWORD PTR [ebp-0x18]
100036bc:	push   0x0
100036be:	push   0x1
100036c0:	mov    ecx,esi
100036c2:	lea    edi,[edi+eax*1+0x1]
100036c6:	call   0x100012eb
100036cb:	dec    DWORD PTR [ebp-0x30]
100036ce:	jne    0x100036b0
100036d0:	or     DWORD PTR [ebp-0x4],0xffffffff
100036d4:	mov    eax,DWORD PTR [ebp-0x38]
100036d7:	push   edi
100036d8:	mov    DWORD PTR [ebx],eax
100036da:	call   0x10043811
100036df:	pop    ecx
100036e0:	mov    DWORD PTR [ebp-0x30],eax
100036e3:	push   eax
100036e4:	mov    esi,ebx
100036e6:	mov    DWORD PTR [ebp-0x4],0x1
100036ed:	call   0x10037950
100036f2:	push   DWORD PTR [ebp-0x30]
100036f5:	mov    eax,DWORD PTR [ebp-0x34]
100036f8:	push   0x3
100036fa:	push   DWORD PTR [eax]
100036fc:	mov    ecx,edi
100036fe:	call   0x10036a00
10003703:	push   DWORD PTR [ebp-0x30]
10003706:	call   0x10042f82
1000370b:	pop    ecx
1000370c:	call   0x10059c11
10003711:	ret    0x4
10003714:	push   0x58
10003716:	mov    eax,0x1006308e
1000371b:	call   0x10059b8e
10003720:	mov    eax,DWORD PTR [ebp+0x8]
10003723:	mov    edi,ecx
10003725:	push   edi
10003726:	lea    esi,[ebp-0x2c]
10003729:	mov    DWORD PTR [ebp-0x34],eax
1000372c:	call   0x10037500
10003731:	xor    ebx,ebx
10003733:	push   edi
10003734:	mov    DWORD PTR [ebp-0x4],ebx
10003737:	call   0x10037840
1000373c:	mov    esi,eax
1000373e:	push   0x34
10003740:	mov    DWORD PTR [ebp-0x38],esi
10003743:	call   0x1004358e
10003748:	pop    ecx
10003749:	mov    DWORD PTR [ebp-0x30],eax
1000374c:	cmp    eax,ebx
1000374e:	mov    BYTE PTR [ebp-0x4],0x1
10003752:	je     0x10003770
10003754:	lea    ecx,[ebp-0x44]
10003757:	push   ecx
10003758:	lea    ecx,[ebp-0x2c]
1000375b:	push   ecx
1000375c:	push   eax
1000375d:	mov    DWORD PTR [ebp-0x44],ebx
10003760:	mov    DWORD PTR [ebp-0x40],ebx
10003763:	mov    DWORD PTR [ebp-0x3c],esi
10003766:	call   0x1000285d
1000376b:	mov    DWORD PTR [ebp-0x30],eax
1000376e:	jmp    0x10003775
10003770:	mov    DWORD PTR [ebp-0x30],ebx
10003773:	mov    eax,ebx
10003775:	mov    DWORD PTR [ebp-0x48],eax
10003778:	mov    BYTE PTR [ebp-0x4],0x2
1000377c:	mov    eax,DWORD PTR [eax+0x30]
1000377f:	mov    edi,0x1006cd08
10003784:	push   edi
10003785:	mov    esi,eax
10003787:	call   0x10006639
1000378c:	test   al,al
1000378e:	pop    ecx
1000378f:	je     0x100037a4
10003791:	mov    eax,DWORD PTR [ebp-0x34]
10003794:	push   DWORD PTR [ebp-0x38]
10003797:	mov    eax,DWORD PTR [eax]
10003799:	push   eax
1000379a:	lea    ecx,[ebp-0x2c]
1000379d:	call   0x100362a0
100037a2:	jmp    0x100037cb
100037a4:	push   edi
100037a5:	lea    ecx,[ebp-0x64]
100037a8:	call   0x100011c8
100037ad:	mov    eax,DWORD PTR [ebp-0x34]
100037b0:	mov    BYTE PTR [ebp-0x4],0x3
100037b4:	mov    eax,DWORD PTR [eax]
100037b6:	push   ebx
100037b7:	push   eax
100037b8:	lea    ecx,[ebp-0x64]
100037bb:	call   0x100362a0
100037c0:	push   ebx
100037c1:	push   0x1
100037c3:	lea    ecx,[ebp-0x64]
100037c6:	call   0x100012eb
100037cb:	mov    BYTE PTR [ebp-0x4],bl
100037ce:	push   DWORD PTR [ebp-0x30]
100037d1:	call   0x1003a020
100037d6:	push   DWORD PTR [ebp-0x30]
100037d9:	call   0x10042f82
100037de:	pop    ecx
100037df:	push   ebx
100037e0:	push   0x1
100037e2:	lea    ecx,[ebp-0x2c]
100037e5:	call   0x100012eb
100037ea:	call   0x10059c11
100037ef:	ret    0x4
100037f2:	push   0x18
100037f4:	mov    eax,0x1006079c
100037f9:	call   0x10059b25
100037fe:	mov    eax,ds:0x10080a74
10003803:	mov    ebx,0x10080a74
10003808:	mov    ecx,ebx
1000380a:	call   DWORD PTR [eax+0xc]
1000380d:	add    eax,0x10
10003810:	mov    DWORD PTR [ebp-0x10],eax
10003813:	and    DWORD PTR [ebp-0x4],0x0
10003817:	mov    edi,0x104
1000381c:	push   edi
1000381d:	lea    esi,[ebp-0x10]
10003820:	call   0x100021a4
10003825:	push   eax
10003826:	push   edi
10003827:	call   DWORD PTR ds:0x100660c8
1000382d:	test   eax,eax
1000382f:	je     0x1000395e
10003835:	cmp    eax,edi
10003837:	ja     0x1000395e
1000383d:	cmp    DWORD PTR [ebp-0x10],0x0
10003841:	jne    0x10003847
10003843:	xor    eax,eax
10003845:	jmp    0x10003850
10003847:	push   DWORD PTR [ebp-0x10]
1000384a:	call   0x100437e3
1000384f:	pop    ecx
10003850:	lea    edx,[ebp-0x10]
10003853:	call   0x1000222f
10003858:	mov    eax,ds:0x10080a74
1000385d:	mov    ecx,ebx
1000385f:	call   DWORD PTR [eax+0xc]
10003862:	add    eax,0x10
10003865:	mov    DWORD PTR [ebp-0x14],eax
10003868:	push   edi
10003869:	lea    esi,[ebp-0x14]
1000386c:	mov    BYTE PTR [ebp-0x4],0x1
10003870:	call   0x100021a4
10003875:	mov    esi,DWORD PTR [ebp-0x10]
10003878:	push   eax
10003879:	xor    ebx,ebx
1000387b:	push   ebx
1000387c:	push   0x1006cef8
10003881:	push   esi
10003882:	call   DWORD PTR ds:0x1006609c
10003888:	test   eax,eax
1000388a:	jne    0x1000389f
1000388c:	mov    eax,DWORD PTR [ebp-0x14]
1000388f:	add    eax,0xfffffff0
10003892:	call   0x1000206f
10003897:	lea    eax,[esi-0x10]
1000389a:	jmp    0x10003964
1000389f:	mov    esi,DWORD PTR [ebp-0x14]
100038a2:	cmp    esi,ebx
100038a4:	jne    0x100038aa
100038a6:	xor    eax,eax
100038a8:	jmp    0x100038b1
100038aa:	push   esi
100038ab:	call   0x100437e3
100038b0:	pop    ecx
100038b1:	lea    edx,[ebp-0x14]
100038b4:	call   0x1000222f
100038b9:	push   esi
100038ba:	call   DWORD PTR ds:0x100660d0
100038c0:	push   ebx
100038c1:	push   esi
100038c2:	call   DWORD PTR ds:0x100660b0
100038c8:	push   0x1006cefc
100038cd:	lea    edi,[ebp-0x1c]
100038d0:	call   0x10002455
100038d5:	mov    eax,edi
100038d7:	push   eax
100038d8:	lea    eax,[ebp-0x20]
100038db:	push   esi
100038dc:	push   eax
100038dd:	mov    BYTE PTR [ebp-0x4],0x2
100038e1:	call   0x10002551
100038e6:	add    esp,0xc
100038e9:	mov    BYTE PTR [ebp-0x4],0x3
100038ed:	mov    eax,DWORD PTR [eax]
100038ef:	cmp    eax,ebx
100038f1:	je     0x100038f7
100038f3:	mov    eax,DWORD PTR [eax]
100038f5:	jmp    0x100038f9
100038f7:	xor    eax,eax
100038f9:	mov    ecx,DWORD PTR [ebp+0x10]
100038fc:	push   eax
100038fd:	lea    eax,[ebp-0x18]
10003900:	push   eax
10003901:	call   0x10004163
10003906:	pop    ecx
10003907:	pop    ecx
10003908:	lea    edi,[ebp-0x20]
1000390b:	call   0x100025b0
10003910:	lea    edi,[ebp-0x1c]
10003913:	call   0x100025b0
10003918:	push   ebx
10003919:	push   0x80
1000391e:	push   0x2
10003920:	push   ebx
10003921:	push   ebx
10003922:	push   0x40000000
10003927:	push   DWORD PTR [ebp-0x18]
1000392a:	call   DWORD PTR ds:0x100660c0
10003930:	mov    edi,eax
10003932:	mov    DWORD PTR [ebp-0x1c],edi
10003935:	cmp    edi,0xffffffff
10003938:	mov    BYTE PTR [ebp-0x4],0x7
1000393c:	jne    0x10003971
1000393e:	call   DWORD PTR ds:0x100660cc
10003944:	push   edi
10003945:	call   DWORD PTR ds:0x10066070
1000394b:	mov    eax,DWORD PTR [ebp-0x18]
1000394e:	add    eax,0xfffffff0
10003951:	call   0x1000206f
10003956:	lea    eax,[esi-0x10]
10003959:	call   0x1000206f
1000395e:	mov    eax,DWORD PTR [ebp-0x10]
10003961:	add    eax,0xfffffff0
10003964:	call   0x1000206f
10003969:	xor    al,al
1000396b:	call   0x10059bfd
10003970:	ret    
10003971:	push   ebx
10003972:	lea    eax,[ebp-0x24]
10003975:	push   eax
10003976:	push   DWORD PTR [ebp+0xc]
10003979:	push   DWORD PTR [ebp+0x8]
1000397c:	push   edi
1000397d:	call   DWORD PTR ds:0x100660b4
10003983:	test   eax,eax
10003985:	jne    0x1000398e
10003987:	cmp    edi,ebx
10003989:	je     0x1000394b
1000398b:	push   edi
1000398c:	jmp    0x10003945
1000398e:	mov    edi,DWORD PTR [ebp+0x18]
10003991:	lea    eax,[ebp-0x18]
10003994:	call   0x10004122
10003999:	mov    edi,DWORD PTR [ebp+0x14]
1000399c:	lea    eax,[ebp-0x14]
1000399f:	call   0x10004122
100039a4:	cmp    DWORD PTR [ebp-0x1c],ebx
100039a7:	je     0x100039b2
100039a9:	push   DWORD PTR [ebp-0x1c]
100039ac:	call   DWORD PTR ds:0x10066070
100039b2:	mov    eax,DWORD PTR [ebp-0x18]
100039b5:	add    eax,0xfffffff0
100039b8:	call   0x1000206f
100039bd:	lea    eax,[esi-0x10]
100039c0:	call   0x1000206f
100039c5:	mov    eax,DWORD PTR [ebp-0x10]
100039c8:	add    eax,0xfffffff0
100039cb:	call   0x1000206f
100039d0:	mov    al,0x1
100039d2:	jmp    0x1000396b
100039d4:	push   0x24
100039d6:	mov    eax,0x100637cb
100039db:	call   0x10059bc4
100039e0:	and    DWORD PTR [ebp-0x4],0x0
100039e4:	mov    esi,ecx
100039e6:	push   esi
100039e7:	call   0x10037840
100039ec:	lea    edi,[ebp-0x30]
100039ef:	mov    ebx,eax
100039f1:	call   0x10037630
100039f6:	mov    eax,ebx
100039f8:	dec    eax
100039f9:	mov    BYTE PTR [ebp-0x4],0x1
100039fd:	je     0x10003a33
100039ff:	dec    eax
10003a00:	je     0x10003a1c
10003a02:	dec    eax
10003a03:	jne    0x10003a4a
10003a05:	cmp    DWORD PTR [ebp-0x18],0x10
10003a09:	mov    eax,DWORD PTR [ebp-0x2c]
10003a0c:	jae    0x10003a11
10003a0e:	lea    eax,[ebp-0x2c]
10003a11:	push   DWORD PTR [ebp-0x1c]
10003a14:	push   eax
10003a15:	call   0x10003eba
10003a1a:	jmp    0x10003a48
10003a1c:	cmp    DWORD PTR [ebp-0x18],0x10
10003a20:	mov    eax,DWORD PTR [ebp-0x2c]
10003a23:	jae    0x10003a28
10003a25:	lea    eax,[ebp-0x2c]
10003a28:	push   DWORD PTR [ebp-0x1c]
10003a2b:	push   eax
10003a2c:	call   0x10003c7a
10003a31:	jmp    0x10003a48
10003a33:	cmp    DWORD PTR [ebp-0x18],0x10
10003a37:	mov    eax,DWORD PTR [ebp-0x2c]
10003a3a:	jae    0x10003a3f
10003a3c:	lea    eax,[ebp-0x2c]
10003a3f:	push   DWORD PTR [ebp-0x1c]
10003a42:	push   eax
10003a43:	call   0x10003aee
10003a48:	pop    ecx
10003a49:	pop    ecx
10003a4a:	push   0x0
10003a4c:	push   0x1
10003a4e:	lea    ecx,[ebp-0x30]
10003a51:	call   0x100012eb
10003a56:	call   0x10059c20
10003a5b:	ret    
10003a5c:	mov    eax,0x10003a56
10003a61:	ret    
10003a62:	push   0x2c
10003a64:	mov    eax,0x10064923
10003a69:	call   0x10059b25
10003a6e:	call   0x1000206e
10003a73:	xor    ebx,ebx
10003a75:	mov    DWORD PTR [ebp-0x14],ebx
10003a78:	mov    DWORD PTR [ebp-0x10],ebx
10003a7b:	lea    ecx,[ebp-0x38]
10003a7e:	mov    DWORD PTR [ebp-0x4],ebx
10003a81:	call   0x100185fb
10003a86:	push   0xffffffff
10003a88:	lea    ecx,[ebp-0x14]
10003a8b:	push   ecx
10003a8c:	push   DWORD PTR [ebp+0x8]
10003a8f:	lea    esi,[ebp-0x18]
10003a92:	push   eax
10003a93:	mov    BYTE PTR [ebp-0x4],0x1
10003a97:	call   0x10030e80
10003a9c:	add    esp,0x10
10003a9f:	push   eax
10003aa0:	lea    edi,[ebp-0x10]
10003aa3:	call   0x10002091
10003aa8:	push   DWORD PTR [ebp-0x18]
10003aab:	call   0x10042f82
10003ab0:	pop    ecx
10003ab1:	push   ebx
10003ab2:	push   0x1
10003ab4:	lea    ecx,[ebp-0x38]
10003ab7:	mov    BYTE PTR [ebp-0x4],bl
10003aba:	call   0x100012eb
10003abf:	cmp    DWORD PTR [ebp-0x10],ebx
10003ac2:	jne    0x10003ad2
10003ac4:	call   0x1001857a
10003ac9:	push   ebx
10003aca:	call   0x10042f82
10003acf:	pop    ecx
10003ad0:	jmp    0x10003ae8
10003ad2:	push   DWORD PTR [ebp-0x14]
10003ad5:	push   DWORD PTR [ebp-0x10]
10003ad8:	call   0x10003aee
10003add:	push   DWORD PTR [ebp-0x10]
10003ae0:	call   0x10042f82
10003ae5:	add    esp,0xc
10003ae8:	call   0x10059bfd
10003aed:	ret    
10003aee:	push   0xc
10003af0:	mov    eax,0x10063051
10003af5:	call   0x10059b25
10003afa:	mov    eax,ds:0x10080a74
10003aff:	mov    edi,0x10080a74
10003b04:	mov    ecx,edi
10003b06:	call   DWORD PTR [eax+0xc]
10003b09:	add    eax,0x10
10003b0c:	mov    DWORD PTR [ebp-0x18],eax
10003b0f:	xor    esi,esi
10003b11:	mov    DWORD PTR [ebp-0x4],esi
10003b14:	mov    eax,ds:0x10080a74
10003b19:	mov    ecx,edi
10003b1b:	call   DWORD PTR [eax+0xc]
10003b1e:	add    eax,0x10
10003b21:	mov    DWORD PTR [ebp-0x14],eax
10003b24:	push   0x720a00e6
10003b29:	push   0x1006cf00
10003b2e:	mov    BYTE PTR [ebp-0x4],0x1
10003b32:	call   0x100042bd
10003b37:	push   eax
10003b38:	push   0x9
10003b3a:	push   0x1006cf24
10003b3f:	call   0x1000448e
10003b44:	add    esp,0x14
10003b47:	push   eax
10003b48:	lea    eax,[ebp-0x10]
10003b4b:	push   eax
10003b4c:	call   0x1000234f
10003b51:	lea    eax,[ebp-0x14]
10003b54:	push   eax
10003b55:	lea    eax,[ebp-0x18]
10003b58:	push   eax
10003b59:	lea    eax,[ebp-0x10]
10003b5c:	push   eax
10003b5d:	push   DWORD PTR [ebp+0xc]
10003b60:	mov    BYTE PTR [ebp-0x4],0x2
10003b64:	push   DWORD PTR [ebp+0x8]
10003b67:	call   0x100037f2
10003b6c:	mov    bl,al
10003b6e:	add    esp,0x14
10003b71:	neg    bl
10003b73:	mov    BYTE PTR [ebp-0x4],0x1
10003b77:	mov    eax,DWORD PTR [ebp-0x10]
10003b7a:	sbb    bl,bl
10003b7c:	add    eax,0xfffffff0
10003b7f:	inc    bl
10003b81:	call   0x1000206f
10003b86:	test   bl,bl
10003b88:	je     0x10003b8f
10003b8a:	call   0x1000206e
10003b8f:	call   0x10003ffd
10003b94:	call   0x1000206e
10003b99:	push   0x1
10003b9b:	lea    eax,[ebp-0x10]
10003b9e:	push   eax
10003b9f:	call   0x10034a90
10003ba4:	mov    BYTE PTR [ebp-0x4],0x3
10003ba8:	call   DWORD PTR ds:0x1007efec
10003bae:	mov    edi,DWORD PTR [ebp-0x14]
10003bb1:	lea    eax,[ebp-0x10]
10003bb4:	push   eax
10003bb5:	call   0x100370d0
10003bba:	push   DWORD PTR [ebp-0x10]
10003bbd:	call   DWORD PTR ds:0x10066070
10003bc3:	mov    ebx,DWORD PTR ds:0x100660a8
10003bc9:	push   0x4
10003bcb:	push   esi
10003bcc:	push   edi
10003bcd:	call   ebx
10003bcf:	push   0x4
10003bd1:	push   esi
10003bd2:	mov    esi,DWORD PTR [ebp-0x18]
10003bd5:	push   esi
10003bd6:	call   ebx
10003bd8:	lea    eax,[edi-0x10]
10003bdb:	call   0x1000206f
10003be0:	lea    eax,[esi-0x10]
10003be3:	call   0x1000206f
10003be8:	call   0x10059bfd
10003bed:	ret    
10003bee:	push   0x2c
10003bf0:	mov    eax,0x10064923
10003bf5:	call   0x10059b25
10003bfa:	call   0x1000206e
10003bff:	xor    ebx,ebx
10003c01:	mov    DWORD PTR [ebp-0x14],ebx
10003c04:	mov    DWORD PTR [ebp-0x10],ebx
10003c07:	lea    ecx,[ebp-0x38]
10003c0a:	mov    DWORD PTR [ebp-0x4],ebx
10003c0d:	call   0x100185fb
10003c12:	push   0xffffffff
10003c14:	lea    ecx,[ebp-0x14]
10003c17:	push   ecx
10003c18:	push   DWORD PTR [ebp+0x8]
10003c1b:	lea    esi,[ebp-0x18]
10003c1e:	push   eax
10003c1f:	mov    BYTE PTR [ebp-0x4],0x1
10003c23:	call   0x10030e80
10003c28:	add    esp,0x10
10003c2b:	push   eax
10003c2c:	lea    edi,[ebp-0x10]
10003c2f:	call   0x10002091
10003c34:	push   DWORD PTR [ebp-0x18]
10003c37:	call   0x10042f82
10003c3c:	pop    ecx
10003c3d:	push   ebx
10003c3e:	push   0x1
10003c40:	lea    ecx,[ebp-0x38]
10003c43:	mov    BYTE PTR [ebp-0x4],bl
10003c46:	call   0x100012eb
10003c4b:	cmp    DWORD PTR [ebp-0x10],ebx
10003c4e:	jne    0x10003c5e
10003c50:	call   0x1001857a
10003c55:	push   ebx
10003c56:	call   0x10042f82
10003c5b:	pop    ecx
10003c5c:	jmp    0x10003c74
10003c5e:	push   DWORD PTR [ebp-0x14]
10003c61:	push   DWORD PTR [ebp-0x10]
10003c64:	call   0x10003c7a
10003c69:	push   DWORD PTR [ebp-0x10]
10003c6c:	call   0x10042f82
10003c71:	add    esp,0xc
10003c74:	call   0x10059bfd
10003c79:	ret    
10003c7a:	push   ebp
10003c7b:	mov    ebp,esp
10003c7d:	and    esp,0xfffffff8
10003c80:	push   0xffffffff
10003c82:	push   0x10063016
10003c87:	mov    eax,fs:0x0
10003c8d:	push   eax
10003c8e:	sub    esp,0x70
10003c91:	push   ebx
10003c92:	push   esi
10003c93:	push   edi
10003c94:	mov    eax,ds:0x1007e030
10003c99:	xor    eax,esp
10003c9b:	push   eax
10003c9c:	lea    eax,[esp+0x80]
10003ca3:	mov    fs:0x0,eax
10003ca9:	push   0x64ffa248
10003cae:	push   0x1006cf38
10003cb3:	call   0x100042bd
10003cb8:	push   0x1e093fb0
10003cbd:	push   eax
10003cbe:	call   0x100042bd
10003cc3:	push   0x69125448
10003cc8:	push   eax
10003cc9:	call   0x100042bd
10003cce:	push   eax
10003ccf:	push   0xc
10003cd1:	push   0x1006cf64
10003cd6:	call   0x1000448e
10003cdb:	add    esp,0x24
10003cde:	push   eax
10003cdf:	lea    eax,[esp+0x18]
10003ce3:	push   eax
10003ce4:	call   0x1000234f
10003ce9:	xor    ebx,ebx
10003ceb:	mov    DWORD PTR [esp+0x88],ebx
10003cf2:	mov    eax,ds:0x10080a74
10003cf7:	mov    esi,0x10080a74
10003cfc:	mov    ecx,esi
10003cfe:	call   DWORD PTR [eax+0xc]
10003d01:	add    eax,0x10
10003d04:	mov    DWORD PTR [esp+0x20],eax
10003d08:	mov    BYTE PTR [esp+0x88],0x1
10003d10:	mov    eax,ds:0x10080a74
10003d15:	mov    ecx,esi
10003d17:	call   DWORD PTR [eax+0xc]
10003d1a:	add    eax,0x10
10003d1d:	mov    DWORD PTR [esp+0x1c],eax
10003d21:	lea    eax,[esp+0x1c]
10003d25:	push   eax
10003d26:	lea    eax,[esp+0x24]
10003d2a:	push   eax
10003d2b:	lea    eax,[esp+0x1c]
10003d2f:	push   eax
10003d30:	push   DWORD PTR [ebp+0xc]
10003d33:	mov    BYTE PTR [esp+0x98],0x2
10003d3b:	push   DWORD PTR [ebp+0x8]
10003d3e:	call   0x100037f2
10003d43:	add    esp,0x14
10003d46:	test   al,al
10003d48:	jne    0x10003d4f
10003d4a:	call   0x1000206e
10003d4f:	call   0x10003ffd
10003d54:	call   0x1000206e
10003d59:	push   0x1
10003d5b:	lea    eax,[esp+0x1c]
10003d5f:	push   eax
10003d60:	call   0x10034a90
10003d65:	mov    BYTE PTR [esp+0x88],0x3
10003d6d:	mov    ecx,DWORD PTR [esp+0x14]
10003d71:	lea    edx,[esp+0x18]
10003d75:	call   0x10036e60
10003d7a:	push   DWORD PTR [esp+0x18]
10003d7e:	mov    esi,DWORD PTR ds:0x10066070
10003d84:	call   esi
10003d86:	push   0x40
10003d88:	lea    eax,[esp+0x3c]
10003d8c:	push   ebx
10003d8d:	push   eax
10003d8e:	call   0x10045cf0
10003d93:	xor    eax,eax
10003d95:	mov    DWORD PTR [esp+0x30],ebx
10003d99:	lea    edi,[esp+0x34]
10003d9d:	stos   DWORD PTR es:[edi],eax
10003d9e:	add    esp,0xc
10003da1:	stos   DWORD PTR es:[edi],eax
10003da2:	stos   DWORD PTR es:[edi],eax
10003da3:	mov    edi,DWORD PTR [esp+0x1c]
10003da7:	lea    eax,[esp+0x24]
10003dab:	push   eax
10003dac:	lea    eax,[esp+0x38]
10003db0:	push   eax
10003db1:	push   ebx
10003db2:	push   ebx
10003db3:	push   ebx
10003db4:	push   ebx
10003db5:	push   ebx
10003db6:	push   ebx
10003db7:	push   ebx
10003db8:	push   edi
10003db9:	mov    DWORD PTR [esp+0x5c],0x44
10003dc1:	call   DWORD PTR ds:0x100660a0
10003dc7:	test   eax,eax
10003dc9:	je     0x10003dd9
10003dcb:	push   DWORD PTR [esp+0x28]
10003dcf:	call   esi
10003dd1:	push   DWORD PTR [esp+0x24]
10003dd5:	call   esi
10003dd7:	jmp    0x10003de6
10003dd9:	call   DWORD PTR ds:0x100660cc
10003ddf:	push   eax
10003de0:	call   0x1000206e
10003de5:	pop    ecx
10003de6:	mov    esi,DWORD PTR ds:0x100660a8
10003dec:	push   0x4
10003dee:	push   ebx
10003def:	push   edi
10003df0:	call   esi
10003df2:	push   0x4
10003df4:	push   ebx
10003df5:	mov    ebx,DWORD PTR [esp+0x28]
10003df9:	push   ebx
10003dfa:	call   esi
10003dfc:	lea    eax,[edi-0x10]
10003dff:	call   0x1000206f
10003e04:	lea    eax,[ebx-0x10]
10003e07:	call   0x1000206f
10003e0c:	mov    eax,DWORD PTR [esp+0x14]
10003e10:	add    eax,0xfffffff0
10003e13:	call   0x1000206f
10003e18:	mov    ecx,DWORD PTR [esp+0x80]
10003e1f:	mov    DWORD PTR fs:0x0,ecx
10003e26:	pop    ecx
10003e27:	pop    edi
10003e28:	pop    esi
10003e29:	pop    ebx
10003e2a:	mov    esp,ebp
10003e2c:	pop    ebp
10003e2d:	ret    
10003e2e:	push   0x2c
10003e30:	mov    eax,0x10064923
10003e35:	call   0x10059b25
10003e3a:	call   0x1000206e
10003e3f:	xor    ebx,ebx
10003e41:	mov    DWORD PTR [ebp-0x14],ebx
10003e44:	mov    DWORD PTR [ebp-0x10],ebx
10003e47:	lea    ecx,[ebp-0x38]
10003e4a:	mov    DWORD PTR [ebp-0x4],ebx
10003e4d:	call   0x100185fb
10003e52:	push   0xffffffff
10003e54:	lea    ecx,[ebp-0x14]
10003e57:	push   ecx
10003e58:	push   DWORD PTR [ebp+0x8]
10003e5b:	lea    esi,[ebp-0x18]
10003e5e:	push   eax
10003e5f:	mov    BYTE PTR [ebp-0x4],0x1
10003e63:	call   0x10030e80
10003e68:	add    esp,0x10
10003e6b:	push   eax
10003e6c:	lea    edi,[ebp-0x10]
10003e6f:	call   0x10002091
10003e74:	push   DWORD PTR [ebp-0x18]
10003e77:	call   0x10042f82
10003e7c:	pop    ecx
10003e7d:	push   ebx
10003e7e:	push   0x1
10003e80:	lea    ecx,[ebp-0x38]
10003e83:	mov    BYTE PTR [ebp-0x4],bl
10003e86:	call   0x100012eb
10003e8b:	cmp    DWORD PTR [ebp-0x10],ebx
10003e8e:	jne    0x10003e9e
10003e90:	call   0x1001857a
10003e95:	push   ebx
10003e96:	call   0x10042f82
10003e9b:	pop    ecx
10003e9c:	jmp    0x10003eb4
10003e9e:	push   DWORD PTR [ebp-0x14]
10003ea1:	push   DWORD PTR [ebp-0x10]
10003ea4:	call   0x10003eba
10003ea9:	push   DWORD PTR [ebp-0x10]
10003eac:	call   0x10042f82
10003eb1:	add    esp,0xc
10003eb4:	call   0x10059bfd
10003eb9:	ret    
10003eba:	push   ebp
10003ebb:	mov    ebp,esp
10003ebd:	and    esp,0xfffffff8
10003ec0:	push   0xffffffff
10003ec2:	push   0x10062fdb
10003ec7:	mov    eax,fs:0x0
10003ecd:	push   eax
10003ece:	sub    esp,0x10
10003ed1:	push   ebx
10003ed2:	push   esi
10003ed3:	push   edi
10003ed4:	mov    eax,ds:0x1007e030
10003ed9:	xor    eax,esp
10003edb:	push   eax
10003edc:	lea    eax,[esp+0x20]
10003ee0:	mov    fs:0x0,eax
10003ee6:	mov    eax,ds:0x10080a74
10003eeb:	mov    esi,0x10080a74
10003ef0:	mov    ecx,esi
10003ef2:	call   DWORD PTR [eax+0xc]
10003ef5:	add    eax,0x10
10003ef8:	mov    DWORD PTR [esp+0x18],eax
10003efc:	xor    edi,edi
10003efe:	mov    DWORD PTR [esp+0x28],edi
10003f02:	mov    eax,ds:0x10080a74
10003f07:	mov    ecx,esi
10003f09:	call   DWORD PTR [eax+0xc]
10003f0c:	add    eax,0x10
10003f0f:	mov    DWORD PTR [esp+0x14],eax
10003f13:	push   0x1006cf80
10003f18:	push   0x8
10003f1a:	push   0x1006cfbc
10003f1f:	mov    BYTE PTR [esp+0x34],0x1
10003f24:	call   0x1000448e
10003f29:	add    esp,0xc
10003f2c:	push   eax
10003f2d:	lea    eax,[esp+0x14]
10003f31:	push   eax
10003f32:	call   0x1000234f
10003f37:	lea    eax,[esp+0x14]
10003f3b:	push   eax
10003f3c:	lea    eax,[esp+0x1c]
10003f40:	push   eax
10003f41:	lea    eax,[esp+0x18]
10003f45:	push   eax
10003f46:	push   DWORD PTR [ebp+0xc]
10003f49:	mov    BYTE PTR [esp+0x38],0x2
10003f4e:	push   DWORD PTR [ebp+0x8]
10003f51:	call   0x100037f2
10003f56:	mov    bl,al
10003f58:	add    esp,0x14
10003f5b:	neg    bl
10003f5d:	mov    BYTE PTR [esp+0x28],0x1
10003f62:	mov    eax,DWORD PTR [esp+0x10]
10003f66:	sbb    bl,bl
10003f68:	add    eax,0xfffffff0
10003f6b:	inc    bl
10003f6d:	call   0x1000206f
10003f72:	test   bl,bl
10003f74:	je     0x10003f7b
10003f76:	call   0x1000206e
10003f7b:	call   0x10003ffd
10003f80:	call   0x1000206e
10003f85:	push   0x1
10003f87:	lea    eax,[esp+0x14]
10003f8b:	push   eax
10003f8c:	call   0x10034a90
10003f91:	push   0x1006cfd0
10003f96:	push   0xb
10003f98:	push   0x1006cff8
10003f9d:	mov    BYTE PTR [esp+0x34],0x3
10003fa2:	call   0x1000448e
10003fa7:	mov    ebx,DWORD PTR [esp+0x20]
10003fab:	add    esp,0xc
10003fae:	push   eax
10003faf:	push   ebx
10003fb0:	lea    eax,[esp+0x18]
10003fb4:	push   eax
10003fb5:	call   0x10037150
10003fba:	push   DWORD PTR [esp+0x10]
10003fbe:	call   DWORD PTR ds:0x10066070
10003fc4:	mov    esi,DWORD PTR ds:0x100660a8
10003fca:	push   0x4
10003fcc:	push   edi
10003fcd:	push   ebx
10003fce:	call   esi
10003fd0:	push   0x4
10003fd2:	push   edi
10003fd3:	mov    edi,DWORD PTR [esp+0x20]
10003fd7:	push   edi
10003fd8:	call   esi
10003fda:	lea    eax,[ebx-0x10]
10003fdd:	call   0x1000206f
10003fe2:	lea    eax,[edi-0x10]
10003fe5:	call   0x1000206f
10003fea:	mov    ecx,DWORD PTR [esp+0x20]
10003fee:	mov    DWORD PTR fs:0x0,ecx
10003ff5:	pop    ecx
10003ff6:	pop    edi
10003ff7:	pop    esi
10003ff8:	pop    ebx
10003ff9:	mov    esp,ebp
10003ffb:	pop    ebp
10003ffc:	ret    
10003ffd:	push   ebp
10003ffe:	mov    ebp,esp
10004000:	and    esp,0xfffffff8
10004003:	push   0xffffffff
10004005:	push   0x100624b5
1000400a:	mov    eax,fs:0x0
10004010:	push   eax
10004011:	sub    esp,0x14
10004014:	mov    eax,ds:0x1007e030
10004019:	xor    eax,esp
1000401b:	push   eax
1000401c:	lea    eax,[esp+0x18]
10004020:	mov    fs:0x0,eax
10004026:	push   0x1
10004028:	lea    eax,[esp+0xc]
1000402c:	push   eax
1000402d:	call   0x10034a90
10004032:	and    DWORD PTR [esp+0x20],0x0
10004037:	call   0x1002fa60
1000403c:	add    eax,0x78c6c000
10004041:	mov    DWORD PTR [esp+0xc],eax
10004045:	lea    eax,[esp+0xc]
10004049:	push   eax
1000404a:	lea    eax,[esp+0xc]
1000404e:	push   eax
1000404f:	push   0x4
10004051:	adc    edx,0x11ed1
10004057:	pop    ecx
10004058:	mov    DWORD PTR [esp+0x18],edx
1000405c:	call   0x10035c30
10004061:	push   DWORD PTR [esp+0x8]
10004065:	call   DWORD PTR ds:0x10066070
1000406b:	mov    ecx,DWORD PTR [esp+0x18]
1000406f:	mov    DWORD PTR fs:0x0,ecx
10004076:	pop    ecx
10004077:	mov    esp,ebp
10004079:	pop    ebp
1000407a:	ret    
1000407b:	push   0xc
1000407d:	mov    eax,0x10064da9
10004082:	call   0x10059b58
10004087:	xor    ebx,ebx
10004089:	lea    eax,[ebp-0x14]
1000408c:	push   ebx
1000408d:	push   eax
1000408e:	mov    DWORD PTR [ebp-0x4],ebx
10004091:	call   0x10002898
10004096:	pop    ecx
10004097:	pop    ecx
10004098:	mov    ecx,DWORD PTR [eax]
1000409a:	mov    esi,ecx
1000409c:	mov    DWORD PTR [eax],ebx
1000409e:	mov    DWORD PTR [ebp-0x18],esi
100040a1:	lea    eax,[ebp-0x14]
100040a4:	mov    BYTE PTR [ebp-0x4],0x1
100040a8:	call   0x10004296
100040ad:	push   esi
100040ae:	call   0x10002916
100040b3:	cmp    al,bl
100040b5:	jne    0x100040bc
100040b7:	call   0x10002961
100040bc:	lea    eax,[ebp-0x18]
100040bf:	call   0x10004296
100040c4:	call   0x10059bfd
100040c9:	ret    
100040ca:	mov    eax,0x100040c4
100040cf:	ret    
100040d0:	push   0x0
100040d2:	mov    ecx,esi
100040d4:	mov    DWORD PTR [esi+0x18],0xf
100040db:	call   0x10001417
100040e0:	mov    eax,esi
100040e2:	ret    
100040e3:	push   0x0
100040e5:	mov    ecx,esi
100040e7:	mov    DWORD PTR [esi+0x18],0xf
100040ee:	call   0x10001417
100040f3:	push   DWORD PTR [esp+0x8]
100040f7:	mov    ecx,esi
100040f9:	push   DWORD PTR [esp+0x8]
100040fd:	call   0x10001336
10004102:	mov    eax,esi
10004104:	ret    0x8
10004107:	push   DWORD PTR [esp+0x8]
1000410b:	call   0x10043100
10004110:	pop    ecx
10004111:	push   eax
10004112:	push   DWORD PTR [esp+0xc]
10004116:	mov    eax,DWORD PTR [esp+0xc]
1000411a:	call   0x10004d85
1000411f:	ret    0x8
10004122:	mov    ecx,DWORD PTR [eax]
10004124:	push   esi
10004125:	mov    esi,DWORD PTR [edi]
10004127:	lea    eax,[ecx-0x10]
1000412a:	sub    esi,0x10
1000412d:	cmp    eax,esi
1000412f:	je     0x1000415f
10004131:	cmp    DWORD PTR [esi+0xc],0x0
10004135:	push   ebx
10004136:	jl     0x10004153
10004138:	mov    edx,DWORD PTR [eax]
1000413a:	cmp    edx,DWORD PTR [esi]
1000413c:	jne    0x10004153
1000413e:	call   0x10004e1f
10004143:	mov    ebx,eax
10004145:	mov    eax,esi
10004147:	call   0x1000206f
1000414c:	add    ebx,0x10
1000414f:	mov    DWORD PTR [edi],ebx
10004151:	jmp    0x1000415e
10004153:	mov    ebx,DWORD PTR [ecx-0xc]
10004156:	push   ecx
10004157:	mov    eax,edi
10004159:	call   0x100023b5
1000415e:	pop    ebx
1000415f:	mov    eax,edi
10004161:	pop    esi
10004162:	ret    
10004163:	push   0xc
10004165:	mov    eax,0x1005fe32
1000416a:	call   0x10059b25
1000416f:	mov    ebx,ecx
10004171:	xor    edi,edi
10004173:	mov    DWORD PTR [ebp-0x4],edi
10004176:	mov    eax,ebx
10004178:	mov    DWORD PTR [ebp-0x10],edi
1000417b:	call   0x10004704
10004180:	mov    esi,DWORD PTR [ebp+0x8]
10004183:	mov    ecx,eax
10004185:	call   0x10002149
1000418a:	cmp    DWORD PTR [ebp+0xc],edi
1000418d:	mov    DWORD PTR [ebp-0x4],edi
10004190:	mov    eax,DWORD PTR [ebx]
10004192:	mov    ebx,DWORD PTR [eax-0xc]
10004195:	mov    DWORD PTR [ebp-0x10],0x1
1000419c:	mov    DWORD PTR [ebp-0x14],eax
1000419f:	je     0x100041ac
100041a1:	push   DWORD PTR [ebp+0xc]
100041a4:	call   0x100437e3
100041a9:	pop    ecx
100041aa:	mov    edi,eax
100041ac:	mov    esi,DWORD PTR [ebp+0x8]
100041af:	lea    eax,[edi+ebx*1]
100041b2:	push   eax
100041b3:	mov    DWORD PTR [ebp-0x18],eax
100041b6:	call   0x100021a4
100041bb:	push   DWORD PTR [ebp+0xc]
100041be:	mov    esi,eax
100041c0:	push   edi
100041c1:	push   esi
100041c2:	mov    eax,edi
100041c4:	call   0x10002329
100041c9:	push   DWORD PTR [ebp-0x14]
100041cc:	lea    eax,[esi+edi*2]
100041cf:	push   ebx
100041d0:	push   eax
100041d1:	mov    eax,ebx
100041d3:	call   0x10002329
100041d8:	mov    eax,DWORD PTR [ebp-0x18]
100041db:	mov    edx,DWORD PTR [ebp+0x8]
100041de:	add    esp,0x18
100041e1:	call   0x1000222f
100041e6:	mov    eax,DWORD PTR [ebp+0x8]
100041e9:	call   0x10059bfd
100041ee:	ret    
100041ef:	mov    eax,DWORD PTR [esi]
100041f1:	sub    eax,0x10
100041f4:	cmp    DWORD PTR [eax+0xc],0x1
100041f8:	jle    0x10004203
100041fa:	push   DWORD PTR [eax+0x4]
100041fd:	push   esi
100041fe:	call   0x10002299
10004203:	mov    eax,DWORD PTR [esi]
10004205:	ret    
10004206:	mov    eax,DWORD PTR [esi]
10004208:	test   eax,eax
1000420a:	je     0x10004213
1000420c:	push   eax
1000420d:	call   0x100437e3
10004212:	pop    ecx
10004213:	mov    edx,esi
10004215:	jmp    0x1000222f
1000421a:	push   esi
1000421b:	mov    esi,DWORD PTR [eax]
1000421d:	test   esi,esi
1000421f:	je     0x10004230
10004221:	push   DWORD PTR [esi]
10004223:	call   DWORD PTR ds:0x10066070
10004229:	push   esi
1000422a:	call   0x10042f82
1000422f:	pop    ecx
10004230:	pop    esi
10004231:	ret    
10004232:	jmp    0x100047e3
10004237:	push   ebp
10004238:	mov    ebp,esp
1000423a:	and    esp,0xfffffff8
1000423d:	push   ecx
1000423e:	push   ecx
1000423f:	push   ebx
10004240:	mov    ebx,DWORD PTR [esi+0x4]
10004243:	test   ebx,ebx
10004245:	push   edi
10004246:	jne    0x1000424c
10004248:	xor    edi,edi
1000424a:	jmp    0x10004254
1000424c:	mov    edi,DWORD PTR [esi+0xc]
1000424f:	sub    edi,ebx
10004251:	sar    edi,0x5
10004254:	mov    eax,esi
10004256:	call   0x10004728
1000425b:	cmp    eax,edi
1000425d:	jae    0x10004271
1000425f:	push   DWORD PTR [ebp+0x8]
10004262:	push   0x1
10004264:	push   DWORD PTR [esi+0x8]
10004267:	call   0x1000a31e
1000426c:	mov    DWORD PTR [esi+0x8],eax
1000426f:	jmp    0x1000428e
10004271:	mov    edi,DWORD PTR [esi+0x8]
10004274:	cmp    ebx,edi
10004276:	jbe    0x1000427d
10004278:	call   0x100434a0
1000427d:	push   edi
1000427e:	push   esi
1000427f:	push   DWORD PTR [ebp+0x8]
10004282:	lea    eax,[esp+0x14]
10004286:	push   eax
10004287:	mov    eax,esi
10004289:	call   0x1000473b
1000428e:	pop    edi
1000428f:	pop    ebx
10004290:	mov    esp,ebp
10004292:	pop    ebp
10004293:	ret    0x4
10004296:	push   esi
10004297:	mov    esi,DWORD PTR [eax]
10004299:	test   esi,esi
1000429b:	je     0x100042bb
1000429d:	push   edi
1000429e:	mov    edi,DWORD PTR [esi]
100042a0:	test   edi,edi
100042a2:	je     0x100042b3
100042a4:	push   DWORD PTR [edi]
100042a6:	call   DWORD PTR ds:0x10066070
100042ac:	push   edi
100042ad:	call   0x10042f82
100042b2:	pop    ecx
100042b3:	push   esi
100042b4:	call   0x10042f82
100042b9:	pop    ecx
100042ba:	pop    edi
100042bb:	pop    esi
100042bc:	ret    
100042bd:	jmp    0x100042c3
100042bf:	dec    DWORD PTR [esp+0x8]
100042c3:	test   BYTE PTR [esp+0x8],0x1
100042c8:	jne    0x100042bf
100042ca:	mov    eax,DWORD PTR [esp+0x4]
100042ce:	ret    
100042cf:	push   ebp
100042d0:	mov    ebp,esp
100042d2:	and    esp,0xfffffff8
100042d5:	push   0xffffffff
100042d7:	push   0x10061251
100042dc:	mov    eax,fs:0x0
100042e2:	push   eax
100042e3:	sub    esp,0x78
100042e6:	mov    eax,ds:0x1007e030
100042eb:	xor    eax,esp
100042ed:	mov    DWORD PTR [esp+0x70],eax
100042f1:	push   ebx
100042f2:	push   esi
100042f3:	push   edi
100042f4:	mov    eax,ds:0x1007e030
100042f9:	xor    eax,esp
100042fb:	push   eax
100042fc:	lea    eax,[esp+0x88]
10004303:	mov    fs:0x0,eax
10004309:	push   DWORD PTR [ebp+0xc]
1000430c:	mov    eax,DWORD PTR [ebp+0x8]
1000430f:	push   eax
10004310:	lea    esi,[esp+0x50]
10004314:	call   0x100040e3
10004319:	mov    eax,esi
1000431b:	push   eax
1000431c:	lea    eax,[esp+0x1c]
10004320:	xor    ebx,ebx
10004322:	push   eax
10004323:	mov    DWORD PTR [esp+0x98],ebx
1000432a:	call   0x10004808
1000432f:	push   eax
10004330:	call   0x10004ae3
10004335:	call   0x10004808
1000433a:	mov    ecx,DWORD PTR [eax+0x4]
1000433d:	lea    edi,[esp+0x10]
10004341:	lea    esi,[esp+0x18]
10004345:	mov    DWORD PTR [esp+0x14],ecx
10004349:	mov    DWORD PTR [esp+0x10],eax
1000434d:	call   0x10009d5c
10004352:	test   al,al
10004354:	je     0x100043ae
10004356:	sub    esp,0x1c
10004359:	lea    eax,[esp+0x64]
1000435d:	mov    ecx,esp
1000435f:	mov    DWORD PTR [esp+0x2c],esp
10004363:	push   eax
10004364:	call   0x100011a2
10004369:	lea    esi,[esp+0x80]
10004370:	call   0x1000486b
10004375:	add    esp,0x1c
10004378:	lea    eax,[esp+0x48]
1000437c:	push   eax
1000437d:	mov    BYTE PTR [esp+0x94],0x1
10004385:	call   0x10004808
1000438a:	push   eax
1000438b:	call   0x10004a0f
10004390:	push   0xffffffff
10004392:	push   ebx
10004393:	mov    ecx,esi
10004395:	push   ecx
10004396:	mov    ecx,eax
10004398:	call   0x1000123c
1000439d:	push   ebx
1000439e:	push   0x1
100043a0:	mov    ecx,esi
100043a2:	mov    BYTE PTR [esp+0x98],bl
100043a9:	call   0x100012eb
100043ae:	mov    eax,DWORD PTR [ebp+0x10]
100043b1:	movzx  eax,BYTE PTR [eax]
100043b4:	cmp    eax,0x100
100043b9:	jge    0x100043df
100043bb:	lea    eax,[esp+0x48]
100043bf:	push   eax
100043c0:	lea    eax,[esp+0x14]
100043c4:	push   eax
100043c5:	call   0x10004808
100043ca:	push   eax
100043cb:	call   0x10004ae3
100043d0:	mov    ecx,DWORD PTR [eax]
100043d2:	mov    ebx,DWORD PTR [eax+0x4]
100043d5:	mov    DWORD PTR [esp+0x18],ecx
100043d9:	mov    DWORD PTR [esp+0x1c],ebx
100043dd:	jmp    0x100043e3
100043df:	mov    ebx,DWORD PTR [esp+0x1c]
100043e3:	call   0x10004808
100043e8:	mov    ecx,DWORD PTR [eax+0x4]
100043eb:	lea    edi,[esp+0x10]
100043ef:	lea    esi,[esp+0x18]
100043f3:	mov    DWORD PTR [esp+0x14],ecx
100043f7:	mov    DWORD PTR [esp+0x10],eax
100043fb:	call   0x10009d5c
10004400:	test   al,al
10004402:	jne    0x10004459
10004404:	mov    esi,DWORD PTR [esp+0x18]
10004408:	test   esi,esi
1000440a:	jne    0x10004411
1000440c:	call   0x100434a0
10004411:	cmp    ebx,DWORD PTR [esi+0x4]
10004414:	jne    0x1000441b
10004416:	call   0x100434a0
1000441b:	cmp    DWORD PTR [ebx+0x40],0x10
1000441f:	jb     0x10004426
10004421:	mov    ebx,DWORD PTR [ebx+0x2c]
10004424:	jmp    0x10004429
10004426:	add    ebx,0x2c
10004429:	push   0x0
1000442b:	push   0x1
1000442d:	lea    ecx,[esp+0x50]
10004431:	call   0x100012eb
10004436:	mov    eax,ebx
10004438:	mov    ecx,DWORD PTR [esp+0x88]
1000443f:	mov    DWORD PTR fs:0x0,ecx
10004446:	pop    ecx
10004447:	pop    edi
10004448:	pop    esi
10004449:	pop    ebx
1000444a:	mov    ecx,DWORD PTR [esp+0x70]
1000444e:	xor    ecx,esp
10004450:	call   0x10042f87
10004455:	mov    esp,ebp
10004457:	pop    ebp
10004458:	ret    
10004459:	push   0x1006d010
1000445e:	lea    ecx,[esp+0x68]
10004462:	call   0x100011c8
10004467:	lea    eax,[esp+0x64]
1000446b:	push   eax
1000446c:	lea    eax,[esp+0x24]
10004470:	push   eax
10004471:	mov    BYTE PTR [esp+0x98],0x2
10004479:	call   0x100026ec
1000447e:	push   0x10074e8c
10004483:	lea    eax,[esp+0x24]
10004487:	push   eax
10004488:	call   0x10047aa4
1000448d:	int3   
1000448e:	push   ebp
1000448f:	mov    ebp,esp
10004491:	and    esp,0xfffffff8
10004494:	push   0xffffffff
10004496:	push   0x1006073e
1000449b:	mov    eax,fs:0x0
100044a1:	push   eax
100044a2:	sub    esp,0x78
100044a5:	mov    eax,ds:0x1007e030
100044aa:	xor    eax,esp
100044ac:	mov    DWORD PTR [esp+0x70],eax
100044b0:	push   ebx
100044b1:	push   esi
100044b2:	push   edi
100044b3:	mov    eax,ds:0x1007e030
100044b8:	xor    eax,esp
100044ba:	push   eax
100044bb:	lea    eax,[esp+0x88]
100044c2:	mov    fs:0x0,eax
100044c8:	mov    eax,DWORD PTR [ebp+0x8]
100044cb:	xor    edi,edi
100044cd:	push   eax
100044ce:	mov    eax,DWORD PTR [ebp+0xc]
100044d1:	lea    esi,[esp+0x4c]
100044d5:	mov    DWORD PTR [esp+0x64],0x7
100044dd:	mov    DWORD PTR [esp+0x60],edi
100044e1:	mov    WORD PTR [esp+0x50],di
100044e6:	call   0x100051f4
100044eb:	mov    eax,esi
100044ed:	push   eax
100044ee:	lea    eax,[esp+0x1c]
100044f2:	push   eax
100044f3:	mov    DWORD PTR [esp+0x98],edi
100044fa:	call   0x100048c9
100044ff:	push   eax
10004500:	call   0x10004c48
10004505:	call   0x100048c9
1000450a:	mov    ecx,DWORD PTR [eax+0x4]
1000450d:	lea    edi,[esp+0x10]
10004511:	lea    esi,[esp+0x18]
10004515:	mov    DWORD PTR [esp+0x14],ecx
10004519:	mov    DWORD PTR [esp+0x10],eax
1000451d:	call   0x10009d5c
10004522:	test   al,al
10004524:	je     0x1000457b
10004526:	sub    esp,0x1c
10004529:	lea    eax,[esp+0x64]
1000452d:	mov    esi,esp
1000452f:	mov    DWORD PTR [esp+0x2c],esp
10004533:	call   0x10004b4a
10004538:	lea    edi,[esp+0x80]
1000453f:	call   0x1000492c
10004544:	add    esp,0x1c
10004547:	lea    eax,[esp+0x48]
1000454b:	push   eax
1000454c:	mov    BYTE PTR [esp+0x94],0x1
10004554:	call   0x100048c9
10004559:	push   eax
1000455a:	call   0x10004b75
1000455f:	push   0xffffffff
10004561:	push   eax
10004562:	xor    ebx,ebx
10004564:	mov    eax,edi
10004566:	call   0x1000516e
1000456b:	push   0x1
1000456d:	mov    esi,edi
1000456f:	mov    BYTE PTR [esp+0x94],bl
10004576:	call   0x10005279
1000457b:	mov    eax,DWORD PTR [ebp+0x10]
1000457e:	movzx  eax,BYTE PTR [eax]
10004581:	cmp    eax,0x100
10004586:	jge    0x100045ac
10004588:	lea    eax,[esp+0x48]
1000458c:	push   eax
1000458d:	lea    eax,[esp+0x14]
10004591:	push   eax
10004592:	call   0x100048c9
10004597:	push   eax
10004598:	call   0x10004c48
1000459d:	mov    ecx,DWORD PTR [eax]
1000459f:	mov    ebx,DWORD PTR [eax+0x4]
100045a2:	mov    DWORD PTR [esp+0x18],ecx
100045a6:	mov    DWORD PTR [esp+0x1c],ebx
100045aa:	jmp    0x100045b0
100045ac:	mov    ebx,DWORD PTR [esp+0x1c]
100045b0:	call   0x100048c9
100045b5:	mov    ecx,DWORD PTR [eax+0x4]
100045b8:	lea    edi,[esp+0x10]
100045bc:	lea    esi,[esp+0x18]
100045c0:	mov    DWORD PTR [esp+0x14],ecx
100045c4:	mov    DWORD PTR [esp+0x10],eax
100045c8:	call   0x10009d5c
100045cd:	test   al,al
100045cf:	jne    0x10004626
100045d1:	mov    esi,DWORD PTR [esp+0x18]
100045d5:	test   esi,esi
100045d7:	jne    0x100045de
100045d9:	call   0x100434a0
100045de:	cmp    ebx,DWORD PTR [esi+0x4]
100045e1:	jne    0x100045e8
100045e3:	call   0x100434a0
100045e8:	cmp    DWORD PTR [ebx+0x40],0x8
100045ec:	jb     0x100045f3
100045ee:	mov    edi,DWORD PTR [ebx+0x2c]
100045f1:	jmp    0x100045f6
100045f3:	lea    edi,[ebx+0x2c]
100045f6:	push   0x1
100045f8:	xor    ebx,ebx
100045fa:	lea    esi,[esp+0x4c]
100045fe:	call   0x10005279
10004603:	mov    eax,edi
10004605:	mov    ecx,DWORD PTR [esp+0x88]
1000460c:	mov    DWORD PTR fs:0x0,ecx
10004613:	pop    ecx
10004614:	pop    edi
10004615:	pop    esi
10004616:	pop    ebx
10004617:	mov    ecx,DWORD PTR [esp+0x70]
1000461b:	xor    ecx,esp
1000461d:	call   0x10042f87
10004622:	mov    esp,ebp
10004624:	pop    ebp
10004625:	ret    
10004626:	push   0x1006d010
1000462b:	lea    ecx,[esp+0x68]
1000462f:	call   0x100011c8
10004634:	lea    eax,[esp+0x64]
10004638:	push   eax
10004639:	lea    eax,[esp+0x24]
1000463d:	push   eax
1000463e:	mov    BYTE PTR [esp+0x98],0x2
10004646:	call   0x100026ec
1000464b:	push   0x10074e8c
10004650:	lea    eax,[esp+0x24]
10004654:	push   eax
10004655:	call   0x10047aa4
1000465a:	int3   
1000465b:	jmp    0x100049d4
10004660:	mov    ecx,DWORD PTR [eax+0x4]
10004663:	test   ecx,ecx
10004665:	jne    0x1000466a
10004667:	xor    eax,eax
10004669:	ret    
1000466a:	mov    eax,DWORD PTR [eax+0x8]
1000466d:	sub    eax,ecx
1000466f:	push   0x1c
10004671:	cdq    
10004672:	pop    ecx
10004673:	idiv   ecx
10004675:	ret    
10004676:	mov    eax,esi
10004678:	call   0x10004660
1000467d:	cmp    DWORD PTR [esp+0x4],eax
10004681:	jb     0x10004688
10004683:	call   0x100434a0
10004688:	mov    eax,DWORD PTR [esp+0x4]
1000468c:	imul   eax,eax,0x1c
1000468f:	add    eax,DWORD PTR [esi+0x4]
10004692:	ret    0x4
10004695:	push   esi
10004696:	mov    esi,DWORD PTR [eax]
10004698:	test   esi,esi
1000469a:	je     0x100046a9
1000469c:	push   esi
1000469d:	call   0x1003a020
100046a2:	push   esi
100046a3:	call   0x10042f82
100046a8:	pop    ecx
100046a9:	pop    esi
100046aa:	ret    
100046ab:	mov    eax,DWORD PTR [esi]
100046ad:	test   eax,eax
100046af:	je     0x100046b8
100046b1:	push   eax
100046b2:	call   DWORD PTR ds:0x10066070
100046b8:	and    DWORD PTR [esi],0x0
100046bb:	ret    
100046bc:	push   esi
100046bd:	mov    esi,ecx
100046bf:	mov    ecx,DWORD PTR [eax+0x14]
100046c2:	cmp    ecx,esi
100046c4:	jae    0x100046c8
100046c6:	mov    esi,ecx
100046c8:	cmp    esi,edi
100046ca:	mov    ecx,esi
100046cc:	jb     0x100046d0
100046ce:	mov    ecx,edi
100046d0:	cmp    DWORD PTR [eax+0x18],0x10
100046d4:	jb     0x100046db
100046d6:	mov    eax,DWORD PTR [eax+0x4]
100046d9:	jmp    0x100046de
100046db:	add    eax,0x4
100046de:	push   ecx
100046df:	push   DWORD PTR [esp+0xc]
100046e3:	push   eax
100046e4:	call   0x10043816
100046e9:	add    esp,0xc
100046ec:	test   eax,eax
100046ee:	jne    0x10004700
100046f0:	cmp    esi,edi
100046f2:	jae    0x100046f9
100046f4:	or     eax,0xffffffff
100046f7:	jmp    0x10004700
100046f9:	xor    eax,eax
100046fb:	cmp    esi,edi
100046fd:	setne  al
10004700:	pop    esi
10004701:	ret    0x4
10004704:	mov    eax,DWORD PTR [eax]
10004706:	mov    ecx,DWORD PTR [eax-0x10]
10004709:	test   ecx,ecx
1000470b:	je     0x10004714
1000470d:	mov    eax,DWORD PTR [ecx]
1000470f:	call   DWORD PTR [eax+0x10]
10004712:	jmp    0x10004716
10004714:	xor    eax,eax
10004716:	test   eax,eax
10004718:	jne    0x10004727
1000471a:	mov    ecx,0x10080a74
1000471f:	mov    eax,ds:0x10080a74
10004724:	jmp    DWORD PTR [eax+0x10]
10004727:	ret    
10004728:	mov    ecx,DWORD PTR [eax+0x4]
1000472b:	test   ecx,ecx
1000472d:	jne    0x10004732
1000472f:	xor    eax,eax
10004731:	ret    
10004732:	mov    eax,DWORD PTR [eax+0x8]
10004735:	sub    eax,ecx
10004737:	sar    eax,0x5
1000473a:	ret    
1000473b:	push   ebp
1000473c:	mov    ebp,esp
1000473e:	push   ecx
1000473f:	push   ebx
10004740:	push   esi
10004741:	push   edi
10004742:	mov    esi,eax
10004744:	call   0x10004728
10004749:	test   eax,eax
1000474b:	jne    0x10004751
1000474d:	xor    edi,edi
1000474f:	jmp    0x10004776
10004751:	mov    ebx,DWORD PTR [esi+0x4]
10004754:	cmp    ebx,DWORD PTR [esi+0x8]
10004757:	jbe    0x1000475e
10004759:	call   0x100434a0
1000475e:	cmp    DWORD PTR [ebp+0x10],0x0
10004762:	je     0x10004769
10004764:	cmp    DWORD PTR [ebp+0x10],esi
10004767:	je     0x1000476e
10004769:	call   0x100434a0
1000476e:	mov    edi,DWORD PTR [ebp+0x14]
10004771:	sub    edi,ebx
10004773:	sar    edi,0x5
10004776:	push   DWORD PTR [ebp+0x14]
10004779:	mov    edx,DWORD PTR [ebp+0xc]
1000477c:	push   DWORD PTR [ebp+0x10]
1000477f:	mov    ecx,esi
10004781:	call   0x1000a66e
10004786:	mov    ebx,DWORD PTR [esi+0x4]
10004789:	cmp    ebx,DWORD PTR [esi+0x8]
1000478c:	jbe    0x10004793
1000478e:	call   0x100434a0
10004793:	shl    edi,0x5
10004796:	add    edi,ebx
10004798:	cmp    edi,DWORD PTR [esi+0x8]
1000479b:	mov    DWORD PTR [ebp+0x14],ebx
1000479e:	ja     0x100047a5
100047a0:	cmp    edi,DWORD PTR [esi+0x4]
100047a3:	jae    0x100047aa
100047a5:	call   0x100434a0
100047aa:	mov    eax,DWORD PTR [ebp+0x8]
100047ad:	mov    DWORD PTR [eax+0x4],edi
100047b0:	pop    edi
100047b1:	mov    DWORD PTR [eax],esi
100047b3:	pop    esi
100047b4:	pop    ebx
100047b5:	pop    ecx
100047b6:	pop    ebp
100047b7:	ret    0x10
100047ba:	push   esi
100047bb:	mov    esi,eax
100047bd:	cmp    esi,0x7ffffff
100047c3:	jbe    0x100047ca
100047c5:	jmp    0x1000fb8b
100047ca:	mov    ecx,esi
100047cc:	call   0x10004e94
100047d1:	shl    esi,0x5
100047d4:	add    esi,eax
100047d6:	mov    DWORD PTR [edi+0x4],eax
100047d9:	mov    DWORD PTR [edi+0x8],eax
100047dc:	mov    DWORD PTR [edi+0xc],esi
100047df:	mov    al,0x1
100047e1:	pop    esi
100047e2:	ret    
100047e3:	mov    eax,DWORD PTR [esi+0x4]
100047e6:	test   eax,eax
100047e8:	je     0x100047fb
100047ea:	push   DWORD PTR [esi+0x8]
100047ed:	call   0x10004e77
100047f2:	push   DWORD PTR [esi+0x4]
100047f5:	call   0x10042f82
100047fa:	pop    ecx
100047fb:	and    DWORD PTR [esi+0x4],0x0
100047ff:	and    DWORD PTR [esi+0x8],0x0
10004803:	and    DWORD PTR [esi+0xc],0x0
10004807:	ret    
10004808:	push   0x0
1000480a:	mov    eax,0x1006070b
1000480f:	call   0x10059b25
10004814:	test   BYTE PTR ds:0x10080c38,0x1
1000481b:	jne    0x10004860
1000481d:	or     DWORD PTR ds:0x10080c38,0x1
10004824:	and    DWORD PTR [esp+0x18],0x0
10004829:	call   0x100060bd
1000482e:	mov    ds:0x10080c30,eax
10004833:	mov    BYTE PTR [eax+0x45],0x1
10004837:	mov    eax,ds:0x10080c30
1000483c:	mov    DWORD PTR [eax+0x4],eax
1000483f:	mov    eax,ds:0x10080c30
10004844:	mov    DWORD PTR [eax],eax
10004846:	mov    eax,ds:0x10080c30
1000484b:	mov    DWORD PTR [eax+0x8],eax
1000484e:	and    DWORD PTR ds:0x10080c34,0x0
10004855:	push   0x10065811
1000485a:	call   0x10043364
1000485f:	pop    ecx
10004860:	mov    eax,0x10080c2c
10004865:	call   0x10059bfd
1000486a:	ret    
1000486b:	push   0x4
1000486d:	mov    eax,0x10063c35
10004872:	call   0x10059b25
10004877:	and    DWORD PTR [ebp-0x10],0x0
1000487b:	and    DWORD PTR [ebp-0x4],0x0
1000487f:	lea    eax,[ebp+0x8]
10004882:	push   eax
10004883:	mov    ecx,esi
10004885:	call   0x100011a2
1000488a:	xor    ebx,ebx
1000488c:	inc    ebx
1000488d:	cmp    DWORD PTR [esi+0x14],ebx
10004890:	jbe    0x100048b5
10004892:	mov    edi,ebx
10004894:	mov    eax,esi
10004896:	call   0x10011ec7
1000489b:	mov    DWORD PTR [ebp-0x10],eax
1000489e:	lea    edi,[ebx-0x1]
100048a1:	mov    eax,esi
100048a3:	call   0x10011ec7
100048a8:	mov    cl,BYTE PTR [eax]
100048aa:	mov    eax,DWORD PTR [ebp-0x10]
100048ad:	xor    BYTE PTR [eax],cl
100048af:	inc    ebx
100048b0:	cmp    ebx,DWORD PTR [esi+0x14]
100048b3:	jb     0x10004892
100048b5:	push   0x0
100048b7:	push   0x1
100048b9:	lea    ecx,[ebp+0x8]
100048bc:	call   0x100012eb
100048c1:	mov    eax,esi
100048c3:	call   0x10059bfd
100048c8:	ret    
100048c9:	push   0x0
100048cb:	mov    eax,0x100606e2
100048d0:	call   0x10059b25
100048d5:	test   BYTE PTR ds:0x10080c1c,0x1
100048dc:	jne    0x10004921
100048de:	or     DWORD PTR ds:0x10080c1c,0x1
100048e5:	and    DWORD PTR [esp+0x18],0x0
100048ea:	call   0x100060bd
100048ef:	mov    ds:0x10080c24,eax
100048f4:	mov    BYTE PTR [eax+0x45],0x1
100048f8:	mov    eax,ds:0x10080c24
100048fd:	mov    DWORD PTR [eax+0x4],eax
10004900:	mov    eax,ds:0x10080c24
10004905:	mov    DWORD PTR [eax],eax
10004907:	mov    eax,ds:0x10080c24
1000490c:	mov    DWORD PTR [eax+0x8],eax
1000490f:	and    DWORD PTR ds:0x10080c28,0x0
10004916:	push   0x1006580c
1000491b:	call   0x10043364
10004920:	pop    ecx
10004921:	mov    eax,0x10080c20
10004926:	call   0x10059bfd
1000492b:	ret    
1000492c:	push   0x4
1000492e:	mov    eax,0x1005fdfe
10004933:	call   0x10059b25
10004938:	and    DWORD PTR [ebp-0x10],0x0
1000493c:	and    DWORD PTR [ebp-0x4],0x0
10004940:	lea    eax,[ebp+0x8]
10004943:	mov    esi,edi
10004945:	call   0x10004b4a
1000494a:	mov    eax,DWORD PTR [edi+0x14]
1000494d:	xor    ebx,ebx
1000494f:	inc    ebx
10004950:	cmp    ebx,eax
10004952:	jae    0x10004997
10004954:	jbe    0x1000495b
10004956:	call   0x100434a0
1000495b:	cmp    DWORD PTR [edi+0x18],0x8
1000495f:	jb     0x10004966
10004961:	mov    esi,DWORD PTR [edi+0x4]
10004964:	jmp    0x10004969
10004966:	lea    esi,[edi+0x4]
10004969:	lea    eax,[ebx-0x1]
1000496c:	cmp    eax,DWORD PTR [edi+0x14]
1000496f:	lea    esi,[esi+ebx*2]
10004972:	jbe    0x10004979
10004974:	call   0x100434a0
10004979:	cmp    DWORD PTR [edi+0x18],0x8
1000497d:	jb     0x10004984
1000497f:	mov    eax,DWORD PTR [edi+0x4]
10004982:	jmp    0x10004987
10004984:	lea    eax,[edi+0x4]
10004987:	mov    ax,WORD PTR [eax+ebx*2-0x2]
1000498c:	xor    WORD PTR [esi],ax
1000498f:	mov    eax,DWORD PTR [edi+0x14]
10004992:	inc    ebx
10004993:	cmp    ebx,eax
10004995:	jb     0x1000495b
10004997:	push   0x1
10004999:	xor    ebx,ebx
1000499b:	lea    esi,[ebp+0x8]
1000499e:	call   0x10005279
100049a3:	mov    eax,edi
100049a5:	call   0x10059bfd
100049aa:	ret    
100049ab:	push   esi
100049ac:	mov    esi,eax
100049ae:	cmp    esi,0x9249249
100049b4:	jbe    0x100049bb
100049b6:	jmp    0x1000fb8b
100049bb:	mov    ecx,esi
100049bd:	call   0x10004ede
100049c2:	imul   esi,esi,0x1c
100049c5:	add    esi,eax
100049c7:	mov    DWORD PTR [edi+0x4],eax
100049ca:	mov    DWORD PTR [edi+0x8],eax
100049cd:	mov    DWORD PTR [edi+0xc],esi
100049d0:	mov    al,0x1
100049d2:	pop    esi
100049d3:	ret    
100049d4:	mov    eax,DWORD PTR [esi+0x4]
100049d7:	test   eax,eax
100049d9:	je     0x100049ec
100049db:	push   DWORD PTR [esi+0x8]
100049de:	call   0x10004f4e
100049e3:	push   DWORD PTR [esi+0x4]
100049e6:	call   0x10042f82
100049eb:	pop    ecx
100049ec:	and    DWORD PTR [esi+0x4],0x0
100049f0:	and    DWORD PTR [esi+0x8],0x0
100049f4:	and    DWORD PTR [esi+0xc],0x0
100049f8:	ret    
100049f9:	mov    eax,DWORD PTR [esi]
100049fb:	test   eax,eax
100049fd:	je     0x10004a06
100049ff:	push   eax
10004a00:	call   DWORD PTR ds:0x10066070
10004a06:	mov    eax,DWORD PTR [esp+0x4]
10004a0a:	mov    DWORD PTR [esi],eax
10004a0c:	ret    0x4
10004a0f:	push   0x64
10004a11:	mov    eax,0x100606b9
10004a16:	call   0x10059b25
10004a1b:	push   DWORD PTR [ebp+0xc]
10004a1e:	mov    edi,DWORD PTR [ebp+0x8]
10004a21:	lea    ebx,[ebp-0x14]
10004a24:	call   0x10005130
10004a29:	mov    eax,DWORD PTR [edi+0x4]
10004a2c:	mov    DWORD PTR [ebp-0x1c],edi
10004a2f:	lea    edi,[ebp-0x1c]
10004a32:	mov    esi,ebx
10004a34:	mov    DWORD PTR [ebp-0x18],eax
10004a37:	call   0x10009d5c
10004a3c:	mov    ebx,DWORD PTR [ebp-0x10]
10004a3f:	xor    esi,esi
10004a41:	test   al,al
10004a43:	jne    0x10004a54
10004a45:	mov    eax,DWORD PTR [ebp+0xc]
10004a48:	lea    ecx,[ebx+0xc]
10004a4b:	call   0x10004f28
10004a50:	test   al,al
10004a52:	je     0x10004ac2
10004a54:	push   esi
10004a55:	lea    ecx,[ebp-0x38]
10004a58:	mov    DWORD PTR [ebp-0x20],0xf
10004a5f:	call   0x10001417
10004a64:	push   DWORD PTR [ebp+0xc]
10004a67:	lea    ecx,[ebp-0x70]
10004a6a:	mov    DWORD PTR [ebp-0x4],esi
10004a6d:	call   0x100011a2
10004a72:	lea    eax,[ebp-0x38]
10004a75:	push   eax
10004a76:	lea    ecx,[ebp-0x54]
10004a79:	mov    BYTE PTR [ebp-0x4],0x1
10004a7d:	call   0x100011a2
10004a82:	push   ebx
10004a83:	mov    BYTE PTR [ebp-0x4],0x2
10004a87:	push   DWORD PTR [ebp-0x14]
10004a8a:	lea    eax,[ebp-0x70]
10004a8d:	push   eax
10004a8e:	lea    eax,[ebp-0x1c]
10004a91:	push   eax
10004a92:	mov    eax,DWORD PTR [ebp+0x8]
10004a95:	call   0x10004fad
10004a9a:	mov    edi,DWORD PTR [eax]
10004a9c:	mov    ebx,DWORD PTR [eax+0x4]
10004a9f:	push   esi
10004aa0:	push   0x1
10004aa2:	lea    ecx,[ebp-0x54]
10004aa5:	call   0x100012eb
10004aaa:	push   esi
10004aab:	push   0x1
10004aad:	lea    ecx,[ebp-0x70]
10004ab0:	call   0x100012eb
10004ab5:	push   esi
10004ab6:	push   0x1
10004ab8:	lea    ecx,[ebp-0x38]
10004abb:	call   0x100012eb
10004ac0:	jmp    0x10004ac5
10004ac2:	mov    edi,DWORD PTR [ebp-0x14]
10004ac5:	cmp    edi,esi
10004ac7:	jne    0x10004ace
10004ac9:	call   0x100434a0
10004ace:	cmp    ebx,DWORD PTR [edi+0x4]
10004ad1:	jne    0x10004ad8
10004ad3:	call   0x100434a0
10004ad8:	lea    eax,[ebx+0x28]
10004adb:	call   0x10059bfd
10004ae0:	ret    0x8
10004ae3:	push   ebp
10004ae4:	mov    ebp,esp
10004ae6:	sub    esp,0x18
10004ae9:	push   ebx
10004aea:	push   esi
10004aeb:	push   edi
10004aec:	push   DWORD PTR [ebp+0x10]
10004aef:	mov    edi,DWORD PTR [ebp+0x8]
10004af2:	lea    ebx,[ebp-0xc]
10004af5:	call   0x10005130
10004afa:	mov    eax,DWORD PTR [edi+0x4]
10004afd:	mov    DWORD PTR [ebp-0x14],edi
10004b00:	lea    edi,[ebp-0x14]
10004b03:	mov    esi,ebx
10004b05:	mov    DWORD PTR [ebp-0x10],eax
10004b08:	call   0x10009d5c
10004b0d:	test   al,al
10004b0f:	jne    0x10004b27
10004b11:	mov    ecx,DWORD PTR [ebp-0x8]
10004b14:	mov    eax,DWORD PTR [ebp+0x10]
10004b17:	add    ecx,0xc
10004b1a:	call   0x10004f28
10004b1f:	test   al,al
10004b21:	jne    0x10004b27
10004b23:	mov    ecx,ebx
10004b25:	jmp    0x10004b36
10004b27:	mov    eax,DWORD PTR [ebp+0x8]
10004b2a:	mov    ecx,DWORD PTR [eax+0x4]
10004b2d:	mov    DWORD PTR [ebp-0x10],ecx
10004b30:	mov    DWORD PTR [ebp-0x14],eax
10004b33:	lea    ecx,[ebp-0x14]
10004b36:	mov    edx,DWORD PTR [ecx]
10004b38:	mov    eax,DWORD PTR [ebp+0xc]
10004b3b:	mov    ecx,DWORD PTR [ecx+0x4]
10004b3e:	pop    edi
10004b3f:	pop    esi
10004b40:	mov    DWORD PTR [eax],edx
10004b42:	mov    DWORD PTR [eax+0x4],ecx
10004b45:	pop    ebx
10004b46:	leave  
10004b47:	ret    0xc
10004b4a:	and    DWORD PTR [esi+0x14],0x0
10004b4e:	push   ebx
10004b4f:	push   0xffffffff
10004b51:	mov    DWORD PTR [esi+0x18],0x7
10004b58:	and    WORD PTR [esi+0x4],0x0
10004b5d:	push   esi
10004b5e:	xor    ebx,ebx
10004b60:	call   0x1000516e
10004b65:	mov    eax,esi
10004b67:	pop    ebx
10004b68:	ret    
10004b69:	push   ebx
10004b6a:	push   0x1
10004b6c:	xor    ebx,ebx
10004b6e:	call   0x10005279
10004b73:	pop    ebx
10004b74:	ret    
10004b75:	push   0x64
10004b77:	mov    eax,0x10060686
10004b7c:	call   0x10059b25
10004b81:	push   DWORD PTR [ebp+0xc]
10004b84:	mov    edi,DWORD PTR [ebp+0x8]
10004b87:	lea    ebx,[ebp-0x14]
10004b8a:	call   0x10005483
10004b8f:	mov    eax,DWORD PTR [edi+0x4]
10004b92:	mov    DWORD PTR [ebp-0x1c],edi
10004b95:	lea    edi,[ebp-0x1c]
10004b98:	mov    esi,ebx
10004b9a:	mov    DWORD PTR [ebp-0x18],eax
10004b9d:	call   0x10009d5c
10004ba2:	test   al,al
10004ba4:	mov    ebx,DWORD PTR [ebp-0x10]
10004ba7:	jne    0x10004bb8
10004ba9:	mov    eax,DWORD PTR [ebp+0xc]
10004bac:	lea    ecx,[ebx+0xc]
10004baf:	call   0x100054c1
10004bb4:	test   al,al
10004bb6:	je     0x10004c27
10004bb8:	xor    eax,eax
10004bba:	mov    DWORD PTR [ebp-0x20],0x7
10004bc1:	mov    DWORD PTR [ebp-0x24],eax
10004bc4:	mov    WORD PTR [ebp-0x34],ax
10004bc8:	mov    DWORD PTR [ebp-0x4],eax
10004bcb:	mov    eax,DWORD PTR [ebp+0xc]
10004bce:	lea    esi,[ebp-0x70]
10004bd1:	call   0x10004b4a
10004bd6:	lea    eax,[ebp-0x38]
10004bd9:	lea    esi,[ebp-0x54]
10004bdc:	mov    BYTE PTR [ebp-0x4],0x1
10004be0:	call   0x10004b4a
10004be5:	push   ebx
10004be6:	mov    BYTE PTR [ebp-0x4],0x2
10004bea:	push   DWORD PTR [ebp-0x14]
10004bed:	lea    eax,[ebp-0x70]
10004bf0:	push   eax
10004bf1:	lea    eax,[ebp-0x1c]
10004bf4:	push   eax
10004bf5:	mov    eax,DWORD PTR [ebp+0x8]
10004bf8:	call   0x10005300
10004bfd:	mov    edi,DWORD PTR [eax]
10004bff:	mov    eax,DWORD PTR [eax+0x4]
10004c02:	push   0x1
10004c04:	xor    ebx,ebx
10004c06:	mov    DWORD PTR [ebp-0x10],eax
10004c09:	call   0x10005279
10004c0e:	push   0x1
10004c10:	lea    esi,[ebp-0x70]
10004c13:	call   0x10005279
10004c18:	push   0x1
10004c1a:	lea    esi,[ebp-0x38]
10004c1d:	call   0x10005279
10004c22:	mov    ebx,DWORD PTR [ebp-0x10]
10004c25:	jmp    0x10004c2a
10004c27:	mov    edi,DWORD PTR [ebp-0x14]
10004c2a:	test   edi,edi
10004c2c:	jne    0x10004c33
10004c2e:	call   0x100434a0
10004c33:	cmp    ebx,DWORD PTR [edi+0x4]
10004c36:	jne    0x10004c3d
10004c38:	call   0x100434a0
10004c3d:	lea    eax,[ebx+0x28]
10004c40:	call   0x10059bfd
10004c45:	ret    0x8
10004c48:	push   ebp
10004c49:	mov    ebp,esp
10004c4b:	sub    esp,0x18
10004c4e:	push   ebx
10004c4f:	push   esi
10004c50:	push   edi
10004c51:	push   DWORD PTR [ebp+0x10]
10004c54:	mov    edi,DWORD PTR [ebp+0x8]
10004c57:	lea    ebx,[ebp-0xc]
10004c5a:	call   0x10005483
10004c5f:	mov    eax,DWORD PTR [edi+0x4]
10004c62:	mov    DWORD PTR [ebp-0x14],edi
10004c65:	lea    edi,[ebp-0x14]
10004c68:	mov    esi,ebx
10004c6a:	mov    DWORD PTR [ebp-0x10],eax
10004c6d:	call   0x10009d5c
10004c72:	test   al,al
10004c74:	jne    0x10004c8c
10004c76:	mov    ecx,DWORD PTR [ebp-0x8]
10004c79:	mov    eax,DWORD PTR [ebp+0x10]
10004c7c:	add    ecx,0xc
10004c7f:	call   0x100054c1
10004c84:	test   al,al
10004c86:	jne    0x10004c8c
10004c88:	mov    ecx,ebx
10004c8a:	jmp    0x10004c9b
10004c8c:	mov    eax,DWORD PTR [ebp+0x8]
10004c8f:	mov    ecx,DWORD PTR [eax+0x4]
10004c92:	mov    DWORD PTR [ebp-0x10],ecx
10004c95:	mov    DWORD PTR [ebp-0x14],eax
10004c98:	lea    ecx,[ebp-0x14]
10004c9b:	mov    edx,DWORD PTR [ecx]
10004c9d:	mov    eax,DWORD PTR [ebp+0xc]
10004ca0:	mov    ecx,DWORD PTR [ecx+0x4]
10004ca3:	pop    edi
10004ca4:	pop    esi
10004ca5:	mov    DWORD PTR [eax],edx
10004ca7:	mov    DWORD PTR [eax+0x4],ecx
10004caa:	pop    ebx
10004cab:	leave  
10004cac:	ret    0xc
10004caf:	push   0x0
10004cb1:	push   0x1
10004cb3:	lea    ecx,[esi+0x1c]
10004cb6:	call   0x100012eb
10004cbb:	push   0x0
10004cbd:	push   0x1
10004cbf:	mov    ecx,esi
10004cc1:	call   0x100012eb
10004cc6:	ret    
10004cc7:	push   ebx
10004cc8:	push   esi
10004cc9:	push   0x1
10004ccb:	lea    esi,[edi+0x1c]
10004cce:	xor    ebx,ebx
10004cd0:	call   0x10005279
10004cd5:	push   0x1
10004cd7:	mov    esi,edi
10004cd9:	call   0x10005279
10004cde:	pop    esi
10004cdf:	pop    ebx
10004ce0:	ret    
10004ce1:	push   ebp
10004ce2:	mov    ebp,esp
10004ce4:	push   ecx
10004ce5:	push   ebx
10004ce6:	mov    ebx,DWORD PTR [ebp+0xc]
10004ce9:	push   edi
10004cea:	mov    edi,eax
10004cec:	mov    eax,DWORD PTR [edi+0x14]
10004cef:	cmp    eax,DWORD PTR [ebp+0x8]
10004cf2:	jae    0x10004cf9
10004cf4:	call   0x100572cf
10004cf9:	mov    eax,DWORD PTR [edi+0x14]
10004cfc:	sub    eax,DWORD PTR [ebp+0x8]
10004cff:	cmp    eax,ebx
10004d01:	jae    0x10004d08
10004d03:	mov    ebx,eax
10004d05:	mov    DWORD PTR [ebp+0xc],ebx
10004d08:	or     eax,0xffffffff
10004d0b:	sub    eax,DWORD PTR [esi+0x14]
10004d0e:	cmp    eax,ebx
10004d10:	jbe    0x10004d1c
10004d12:	mov    eax,DWORD PTR [esi+0x14]
10004d15:	lea    ecx,[eax+ebx*1]
10004d18:	cmp    ecx,eax
10004d1a:	jae    0x10004d21
10004d1c:	call   0x10057290
10004d21:	test   ebx,ebx
10004d23:	jbe    0x10004d7d
10004d25:	mov    eax,DWORD PTR [esi+0x14]
10004d28:	add    eax,ebx
10004d2a:	push   0x0
10004d2c:	push   eax
10004d2d:	mov    ecx,esi
10004d2f:	mov    DWORD PTR [ebp-0x4],eax
10004d32:	call   0x10001433
10004d37:	test   al,al
10004d39:	je     0x10004d7d
10004d3b:	cmp    DWORD PTR [edi+0x18],0x10
10004d3f:	jb     0x10004d46
10004d41:	mov    edi,DWORD PTR [edi+0x4]
10004d44:	jmp    0x10004d49
10004d46:	add    edi,0x4
10004d49:	mov    eax,DWORD PTR [esi+0x18]
10004d4c:	cmp    eax,0x10
10004d4f:	jb     0x10004d56
10004d51:	mov    edx,DWORD PTR [esi+0x4]
10004d54:	jmp    0x10004d59
10004d56:	lea    edx,[esi+0x4]
10004d59:	push   DWORD PTR [ebp+0xc]
10004d5c:	mov    ecx,DWORD PTR [esi+0x14]
10004d5f:	mov    ebx,DWORD PTR [ebp+0x8]
10004d62:	add    edi,ebx
10004d64:	sub    eax,ecx
10004d66:	push   edi
10004d67:	push   eax
10004d68:	add    ecx,edx
10004d6a:	push   ecx
10004d6b:	call   0x1000102d
10004d70:	add    esp,0x10
10004d73:	push   DWORD PTR [ebp-0x4]
10004d76:	mov    ecx,esi
10004d78:	call   0x10001417
10004d7d:	pop    edi
10004d7e:	mov    eax,esi
10004d80:	pop    ebx
10004d81:	leave  
10004d82:	ret    0x8
10004d85:	push   ebx
10004d86:	mov    ebx,DWORD PTR [esp+0xc]
10004d8a:	push   esi
10004d8b:	push   edi
10004d8c:	mov    edi,DWORD PTR [esp+0x10]
10004d90:	mov    esi,eax
10004d92:	push   edi
10004d93:	mov    ecx,esi
10004d95:	call   0x100015dd
10004d9a:	test   al,al
10004d9c:	je     0x10004db9
10004d9e:	cmp    DWORD PTR [esi+0x18],0x10
10004da2:	jb     0x10004da9
10004da4:	mov    eax,DWORD PTR [esi+0x4]
10004da7:	jmp    0x10004dac
10004da9:	lea    eax,[esi+0x4]
10004dac:	sub    edi,eax
10004dae:	push   ebx
10004daf:	push   edi
10004db0:	mov    eax,esi
10004db2:	call   0x10004ce1
10004db7:	jmp    0x10004e19
10004db9:	or     eax,0xffffffff
10004dbc:	sub    eax,DWORD PTR [esi+0x14]
10004dbf:	cmp    eax,ebx
10004dc1:	jbe    0x10004dcd
10004dc3:	mov    eax,DWORD PTR [esi+0x14]
10004dc6:	lea    ecx,[eax+ebx*1]
10004dc9:	cmp    ecx,eax
10004dcb:	jae    0x10004dd2
10004dcd:	call   0x10057290
10004dd2:	test   ebx,ebx
10004dd4:	jbe    0x10004e17
10004dd6:	mov    edi,DWORD PTR [esi+0x14]
10004dd9:	push   0x0
10004ddb:	add    edi,ebx
10004ddd:	push   edi
10004dde:	mov    ecx,esi
10004de0:	call   0x10001433
10004de5:	test   al,al
10004de7:	je     0x10004e17
10004de9:	mov    eax,DWORD PTR [esi+0x18]
10004dec:	cmp    eax,0x10
10004def:	jb     0x10004df6
10004df1:	mov    edx,DWORD PTR [esi+0x4]
10004df4:	jmp    0x10004df9
10004df6:	lea    edx,[esi+0x4]
10004df9:	mov    ecx,DWORD PTR [esi+0x14]
10004dfc:	push   ebx
10004dfd:	push   DWORD PTR [esp+0x14]
10004e01:	sub    eax,ecx
10004e03:	push   eax
10004e04:	add    ecx,edx
10004e06:	push   ecx
10004e07:	call   0x1000102d
10004e0c:	add    esp,0x10
10004e0f:	push   edi
10004e10:	mov    ecx,esi
10004e12:	call   0x10001417
10004e17:	mov    eax,esi
10004e19:	pop    edi
10004e1a:	pop    esi
10004e1b:	pop    ebx
10004e1c:	ret    0x8
10004e1f:	push   esi
10004e20:	mov    esi,eax
10004e22:	mov    ecx,DWORD PTR [esi]
10004e24:	mov    eax,DWORD PTR [ecx]
10004e26:	push   edi
10004e27:	call   DWORD PTR [eax+0x10]
10004e2a:	lea    edx,[esi+0xc]
10004e2d:	cmp    DWORD PTR [edx],0x0
10004e30:	jl     0x10004e41
10004e32:	cmp    eax,DWORD PTR [esi]
10004e34:	jne    0x10004e41
10004e36:	xor    eax,eax
10004e38:	mov    edi,esi
10004e3a:	inc    eax
10004e3b:	lock xadd DWORD PTR [edx],eax
10004e3f:	jmp    0x10004e72
10004e41:	mov    edx,DWORD PTR [eax]
10004e43:	push   0x2
10004e45:	push   DWORD PTR [esi+0x4]
10004e48:	mov    ecx,eax
10004e4a:	call   DWORD PTR [edx]
10004e4c:	mov    edi,eax
10004e4e:	test   edi,edi
10004e50:	jne    0x10004e57
10004e52:	jmp    0x10002344
10004e57:	mov    eax,DWORD PTR [esi+0x4]
10004e5a:	mov    DWORD PTR [edi+0x4],eax
10004e5d:	mov    eax,DWORD PTR [esi+0x4]
10004e60:	add    esi,0x10
10004e63:	inc    eax
10004e64:	push   esi
10004e65:	push   eax
10004e66:	lea    ecx,[edi+0x10]
10004e69:	push   ecx
10004e6a:	call   0x10002329
10004e6f:	add    esp,0xc
10004e72:	mov    eax,edi
10004e74:	pop    edi
10004e75:	pop    esi
10004e76:	ret    
10004e77:	push   esi
10004e78:	mov    esi,eax
10004e7a:	jmp    0x10004e8a
10004e7c:	push   0x0
10004e7e:	push   0x1
10004e80:	mov    ecx,esi
10004e82:	call   0x100012eb
10004e87:	add    esi,0x20
10004e8a:	cmp    esi,DWORD PTR [esp+0x8]
10004e8e:	jne    0x10004e7c
10004e90:	pop    esi
10004e91:	ret    0x4
10004e94:	push   ebp
10004e95:	mov    ebp,esp
10004e97:	sub    esp,0x10
10004e9a:	test   ecx,ecx
10004e9c:	ja     0x10004eac
10004e9e:	xor    ecx,ecx
10004ea0:	shl    ecx,0x5
10004ea3:	push   ecx
10004ea4:	call   0x1004358e
10004ea9:	pop    ecx
10004eaa:	leave  
10004eab:	ret    
10004eac:	or     eax,0xffffffff
10004eaf:	xor    edx,edx
10004eb1:	div    ecx
10004eb3:	cmp    eax,0x20
10004eb6:	jae    0x10004ea0
10004eb8:	and    DWORD PTR [ebp-0x4],0x0
10004ebc:	lea    eax,[ebp-0x4]
10004ebf:	push   eax
10004ec0:	lea    ecx,[ebp-0x10]
10004ec3:	call   0x10043002
10004ec8:	push   0x10074e20
10004ecd:	lea    eax,[ebp-0x10]
10004ed0:	push   eax
10004ed1:	mov    DWORD PTR [ebp-0x10],0x100665c8
10004ed8:	call   0x10047aa4
10004edd:	int3   
10004ede:	push   ebp
10004edf:	mov    ebp,esp
10004ee1:	sub    esp,0x10
10004ee4:	test   ecx,ecx
10004ee6:	ja     0x10004ef6
10004ee8:	xor    ecx,ecx
10004eea:	imul   ecx,ecx,0x1c
10004eed:	push   ecx
10004eee:	call   0x1004358e
10004ef3:	pop    ecx
10004ef4:	leave  
10004ef5:	ret    
10004ef6:	or     eax,0xffffffff
10004ef9:	xor    edx,edx
10004efb:	div    ecx
10004efd:	cmp    eax,0x1c
10004f00:	jae    0x10004eea
10004f02:	and    DWORD PTR [ebp-0x4],0x0
10004f06:	lea    eax,[ebp-0x4]
10004f09:	push   eax
10004f0a:	lea    ecx,[ebp-0x10]
10004f0d:	call   0x10043002
10004f12:	push   0x10074e20
10004f17:	lea    eax,[ebp-0x10]
10004f1a:	push   eax
10004f1b:	mov    DWORD PTR [ebp-0x10],0x100665c8
10004f22:	call   0x10047aa4
10004f27:	int3   
10004f28:	cmp    DWORD PTR [ecx+0x18],0x10
10004f2c:	push   edi
10004f2d:	mov    edi,DWORD PTR [ecx+0x14]
10004f30:	jb     0x10004f37
10004f32:	mov    ecx,DWORD PTR [ecx+0x4]
10004f35:	jmp    0x10004f3a
10004f37:	add    ecx,0x4
10004f3a:	push   ecx
10004f3b:	mov    ecx,DWORD PTR [eax+0x14]
10004f3e:	call   0x100046bc
10004f43:	xor    ecx,ecx
10004f45:	test   eax,eax
10004f47:	setl   cl
10004f4a:	mov    al,cl
10004f4c:	pop    edi
10004f4d:	ret    
10004f4e:	push   esi
10004f4f:	mov    esi,eax
10004f51:	jmp    0x10004f5e
10004f53:	push   0x0
10004f55:	push   esi
10004f56:	call   0x1000672a
10004f5b:	add    esi,0x1c
10004f5e:	cmp    esi,DWORD PTR [esp+0x8]
10004f62:	jne    0x10004f53
10004f64:	pop    esi
10004f65:	ret    0x4
10004f68:	push   ebp
10004f69:	mov    ebp,esp
10004f6b:	and    esp,0xfffffff8
10004f6e:	mov    eax,ds:0x10080c30
10004f73:	mov    edx,DWORD PTR [eax]
10004f75:	sub    esp,0xc
10004f78:	push   esi
10004f79:	push   eax
10004f7a:	mov    ecx,0x10080c2c
10004f7f:	mov    esi,ecx
10004f81:	push   esi
10004f82:	push   edx
10004f83:	push   ecx
10004f84:	lea    eax,[esp+0x18]
10004f88:	push   eax
10004f89:	call   0x10005a9c
10004f8e:	push   DWORD PTR ds:0x10080c30
10004f94:	call   0x10042f82
10004f99:	and    DWORD PTR ds:0x10080c30,0x0
10004fa0:	and    DWORD PTR ds:0x10080c34,0x0
10004fa7:	pop    ecx
10004fa8:	pop    esi
10004fa9:	mov    esp,ebp
10004fab:	pop    ebp
10004fac:	ret    
10004fad:	push   ebp
10004fae:	mov    ebp,esp
10004fb0:	sub    esp,0x14
10004fb3:	push   ebx
10004fb4:	mov    ebx,eax
10004fb6:	xor    eax,eax
10004fb8:	cmp    DWORD PTR [ebx+0x8],eax
10004fbb:	push   esi
10004fbc:	push   edi
10004fbd:	mov    DWORD PTR [ebp-0x8],eax
10004fc0:	mov    DWORD PTR [ebp-0x4],eax
10004fc3:	jne    0x10004fdf
10004fc5:	mov    ecx,DWORD PTR [ebx+0x4]
10004fc8:	push   DWORD PTR [ebp+0xc]
10004fcb:	push   0x1
10004fcd:	mov    esi,ebx
10004fcf:	push   DWORD PTR [ebp+0x8]
10004fd2:	call   0x100055c0
10004fd7:	mov    eax,DWORD PTR [ebp+0x8]
10004fda:	jmp    0x10005129
10004fdf:	mov    eax,DWORD PTR [ebx+0x4]
10004fe2:	mov    eax,DWORD PTR [eax]
10004fe4:	lea    edi,[ebp-0x10]
10004fe7:	lea    esi,[ebp+0x10]
10004fea:	mov    DWORD PTR [ebp-0xc],eax
10004fed:	mov    DWORD PTR [ebp-0x10],ebx
10004ff0:	call   0x10009d5c
10004ff5:	test   al,al
10004ff7:	je     0x10005013
10004ff9:	mov    esi,DWORD PTR [ebp+0x14]
10004ffc:	mov    eax,DWORD PTR [ebp+0xc]
10004fff:	lea    ecx,[esi+0xc]
10005002:	call   0x10004f28
10005007:	test   al,al
10005009:	je     0x1000510e
1000500f:	mov    ecx,esi
10005011:	jmp    0x10004fc8
10005013:	mov    eax,DWORD PTR [ebx+0x4]
10005016:	lea    edi,[ebp-0x10]
10005019:	lea    esi,[ebp+0x10]
1000501c:	mov    DWORD PTR [ebp-0xc],eax
1000501f:	mov    DWORD PTR [ebp-0x10],ebx
10005022:	call   0x10009d5c
10005027:	test   al,al
10005029:	je     0x10005054
1000502b:	mov    eax,DWORD PTR [ebx+0x4]
1000502e:	mov    eax,DWORD PTR [eax+0x8]
10005031:	mov    ecx,DWORD PTR [ebp+0xc]
10005034:	add    eax,0xc
10005037:	call   0x10004f28
1000503c:	test   al,al
1000503e:	je     0x1000510e
10005044:	push   DWORD PTR [ebp+0xc]
10005047:	mov    eax,DWORD PTR [ebx+0x4]
1000504a:	mov    ecx,DWORD PTR [eax+0x8]
1000504d:	push   0x0
1000504f:	jmp    0x10004fcd
10005054:	mov    edi,DWORD PTR [ebp+0x14]
10005057:	mov    eax,DWORD PTR [ebp+0xc]
1000505a:	lea    ecx,[edi+0xc]
1000505d:	call   0x10004f28
10005062:	test   al,al
10005064:	je     0x100050aa
10005066:	mov    eax,DWORD PTR [ebp+0x10]
10005069:	lea    esi,[ebp-0x8]
1000506c:	mov    DWORD PTR [ebp-0x8],eax
1000506f:	mov    DWORD PTR [ebp-0x4],edi
10005072:	call   0x10005a3b
10005077:	mov    eax,DWORD PTR [eax+0x4]
1000507a:	mov    ecx,DWORD PTR [ebp+0xc]
1000507d:	add    eax,0xc
10005080:	call   0x10004f28
10005085:	test   al,al
10005087:	je     0x100050aa
10005089:	mov    ecx,DWORD PTR [ebp-0x4]
1000508c:	mov    eax,DWORD PTR [ecx+0x8]
1000508f:	cmp    BYTE PTR [eax+0x45],0x0
10005093:	push   DWORD PTR [ebp+0xc]
10005096:	mov    esi,ebx
10005098:	je     0x100050a1
1000509a:	push   0x0
1000509c:	jmp    0x10004fcf
100050a1:	push   0x1
100050a3:	mov    ecx,edi
100050a5:	jmp    0x10004fcf
100050aa:	mov    ecx,DWORD PTR [ebp+0xc]
100050ad:	lea    eax,[edi+0xc]
100050b0:	call   0x10004f28
100050b5:	test   al,al
100050b7:	je     0x1000510e
100050b9:	mov    eax,DWORD PTR [ebp+0x10]
100050bc:	mov    DWORD PTR [ebp-0x8],eax
100050bf:	mov    eax,DWORD PTR [ebx+0x4]
100050c2:	lea    esi,[ebp-0x8]
100050c5:	mov    DWORD PTR [ebp-0x4],edi
100050c8:	mov    DWORD PTR [ebp-0xc],eax
100050cb:	mov    DWORD PTR [ebp-0x10],ebx
100050ce:	call   0x1000570b
100050d3:	lea    edi,[ebp-0x10]
100050d6:	mov    esi,eax
100050d8:	call   0x10009d5c
100050dd:	test   al,al
100050df:	jne    0x100050f3
100050e1:	mov    ecx,DWORD PTR [ebp-0x4]
100050e4:	mov    eax,DWORD PTR [ebp+0xc]
100050e7:	add    ecx,0xc
100050ea:	call   0x10004f28
100050ef:	test   al,al
100050f1:	je     0x1000510e
100050f3:	mov    ecx,DWORD PTR [ebp+0x14]
100050f6:	mov    eax,DWORD PTR [ecx+0x8]
100050f9:	cmp    BYTE PTR [eax+0x45],0x0
100050fd:	push   DWORD PTR [ebp+0xc]
10005100:	mov    esi,ebx
10005102:	jne    0x1000509a
10005104:	mov    ecx,DWORD PTR [ebp-0x4]
10005107:	push   0x1
10005109:	jmp    0x10004fcf
1000510e:	push   DWORD PTR [ebp+0xc]
10005111:	push   ebx
10005112:	lea    ebx,[ebp-0x14]
10005115:	call   0x100054ff
1000511a:	mov    edx,DWORD PTR [eax]
1000511c:	mov    ecx,DWORD PTR [ebp+0x8]
1000511f:	mov    DWORD PTR [ecx],edx
10005121:	mov    eax,DWORD PTR [eax+0x4]
10005124:	mov    DWORD PTR [ecx+0x4],eax
10005127:	mov    eax,ecx
10005129:	pop    edi
1000512a:	pop    esi
1000512b:	pop    ebx
1000512c:	leave  
1000512d:	ret    0x10
10005130:	push   ebp
10005131:	mov    ebp,esp
10005133:	push   ecx
10005134:	mov    eax,DWORD PTR [edi+0x4]
10005137:	push   esi
10005138:	mov    esi,DWORD PTR [eax+0x4]
1000513b:	mov    DWORD PTR [ebp-0x4],eax
1000513e:	jmp    0x10005159
10005140:	mov    ecx,DWORD PTR [ebp+0x8]
10005143:	lea    eax,[esi+0xc]
10005146:	call   0x10004f28
1000514b:	test   al,al
1000514d:	je     0x10005154
1000514f:	mov    esi,DWORD PTR [esi+0x8]
10005152:	jmp    0x10005159
10005154:	mov    DWORD PTR [ebp-0x4],esi
10005157:	mov    esi,DWORD PTR [esi]
10005159:	cmp    BYTE PTR [esi+0x45],0x0
1000515d:	je     0x10005140
1000515f:	mov    eax,DWORD PTR [ebp-0x4]
10005162:	mov    DWORD PTR [ebx+0x4],eax
10005165:	mov    DWORD PTR [ebx],edi
10005167:	mov    eax,ebx
10005169:	pop    esi
1000516a:	leave  
1000516b:	ret    0x4
1000516e:	push   ebp
1000516f:	mov    ebp,esp
10005171:	push   esi
10005172:	mov    esi,eax
10005174:	cmp    DWORD PTR [esi+0x14],ebx
10005177:	push   edi
10005178:	jae    0x1000517f
1000517a:	call   0x100572cf
1000517f:	mov    edi,DWORD PTR [esi+0x14]
10005182:	sub    edi,ebx
10005184:	cmp    DWORD PTR [ebp+0xc],edi
10005187:	jae    0x1000518c
10005189:	mov    edi,DWORD PTR [ebp+0xc]
1000518c:	mov    eax,DWORD PTR [ebp+0x8]
1000518f:	cmp    eax,esi
10005191:	jne    0x100051a8
10005193:	push   0xffffffff
10005195:	add    edi,ebx
10005197:	mov    esi,eax
10005199:	call   0x10005758
1000519e:	push   ebx
1000519f:	xor    edi,edi
100051a1:	call   0x10005758
100051a6:	jmp    0x100051eb
100051a8:	call   0x100057ea
100051ad:	test   al,al
100051af:	je     0x100051eb
100051b1:	cmp    DWORD PTR [esi+0x18],0x8
100051b5:	jb     0x100051bc
100051b7:	mov    eax,DWORD PTR [esi+0x4]
100051ba:	jmp    0x100051bf
100051bc:	lea    eax,[esi+0x4]
100051bf:	mov    esi,DWORD PTR [ebp+0x8]
100051c2:	mov    edx,DWORD PTR [esi+0x18]
100051c5:	cmp    edx,0x8
100051c8:	jb     0x100051cf
100051ca:	mov    ecx,DWORD PTR [esi+0x4]
100051cd:	jmp    0x100051d2
100051cf:	lea    ecx,[esi+0x4]
100051d2:	lea    eax,[eax+ebx*2]
100051d5:	push   eax
100051d6:	push   edx
100051d7:	push   ecx
100051d8:	mov    eax,edi
100051da:	call   0x1000665b
100051df:	add    esp,0xc
100051e2:	mov    ecx,edi
100051e4:	mov    eax,esi
100051e6:	call   0x100057d3
100051eb:	mov    eax,DWORD PTR [ebp+0x8]
100051ee:	pop    edi
100051ef:	pop    esi
100051f0:	pop    ebp
100051f1:	ret    0x8
100051f4:	mov    ecx,DWORD PTR [esi+0x18]
100051f7:	cmp    ecx,0x8
100051fa:	push   ebx
100051fb:	push   edi
100051fc:	mov    edi,eax
100051fe:	lea    ebx,[esi+0x4]
10005201:	jb     0x10005207
10005203:	mov    eax,DWORD PTR [ebx]
10005205:	jmp    0x10005209
10005207:	mov    eax,ebx
10005209:	cmp    DWORD PTR [esp+0xc],eax
1000520d:	jb     0x10005244
1000520f:	cmp    ecx,0x8
10005212:	jb     0x10005218
10005214:	mov    eax,DWORD PTR [ebx]
10005216:	jmp    0x1000521a
10005218:	mov    eax,ebx
1000521a:	mov    edx,DWORD PTR [esi+0x14]
1000521d:	lea    eax,[eax+edx*2]
10005220:	cmp    eax,DWORD PTR [esp+0xc]
10005224:	jbe    0x10005244
10005226:	cmp    ecx,0x8
10005229:	jb     0x1000522f
1000522b:	mov    eax,DWORD PTR [ebx]
1000522d:	jmp    0x10005231
1000522f:	mov    eax,ebx
10005231:	mov    ebx,DWORD PTR [esp+0xc]
10005235:	sub    ebx,eax
10005237:	push   edi
10005238:	sar    ebx,1
1000523a:	push   esi
1000523b:	mov    eax,esi
1000523d:	call   0x1000516e
10005242:	jmp    0x10005274
10005244:	mov    eax,esi
10005246:	call   0x100057ea
1000524b:	test   al,al
1000524d:	je     0x10005272
1000524f:	mov    eax,DWORD PTR [esi+0x18]
10005252:	cmp    eax,0x8
10005255:	jb     0x10005259
10005257:	mov    ebx,DWORD PTR [ebx]
10005259:	push   DWORD PTR [esp+0xc]
1000525d:	push   eax
1000525e:	push   ebx
1000525f:	mov    eax,edi
10005261:	call   0x1000665b
10005266:	add    esp,0xc
10005269:	mov    ecx,edi
1000526b:	mov    eax,esi
1000526d:	call   0x100057d3
10005272:	mov    eax,esi
10005274:	pop    edi
10005275:	pop    ebx
10005276:	ret    0x4
10005279:	cmp    BYTE PTR [esp+0x4],0x0
1000527e:	je     0x100052a8
10005280:	cmp    DWORD PTR [esi+0x18],0x8
10005284:	jb     0x100052a8
10005286:	test   ebx,ebx
10005288:	lea    eax,[esi+0x4]
1000528b:	push   edi
1000528c:	mov    edi,DWORD PTR [eax]
1000528e:	jbe    0x100052a0
10005290:	lea    ecx,[ebx+ebx*1]
10005293:	push   ecx
10005294:	push   edi
10005295:	push   0x10
10005297:	push   eax
10005298:	call   0x100434b5
1000529d:	add    esp,0x10
100052a0:	push   edi
100052a1:	call   0x10042f82
100052a6:	pop    ecx
100052a7:	pop    edi
100052a8:	mov    ecx,ebx
100052aa:	mov    eax,esi
100052ac:	mov    DWORD PTR [esi+0x18],0x7
100052b3:	call   0x100057d3
100052b8:	ret    0x4
100052bb:	push   ebp
100052bc:	mov    ebp,esp
100052be:	and    esp,0xfffffff8
100052c1:	mov    eax,ds:0x10080c24
100052c6:	mov    edx,DWORD PTR [eax]
100052c8:	sub    esp,0xc
100052cb:	push   esi
100052cc:	push   eax
100052cd:	mov    ecx,0x10080c20
100052d2:	mov    esi,ecx
100052d4:	push   esi
100052d5:	push   edx
100052d6:	push   ecx
100052d7:	lea    eax,[esp+0x18]
100052db:	push   eax
100052dc:	call   0x10005cc7
100052e1:	push   DWORD PTR ds:0x10080c24
100052e7:	call   0x10042f82
100052ec:	and    DWORD PTR ds:0x10080c24,0x0
100052f3:	and    DWORD PTR ds:0x10080c28,0x0
100052fa:	pop    ecx
100052fb:	pop    esi
100052fc:	mov    esp,ebp
100052fe:	pop    ebp
100052ff:	ret    
10005300:	push   ebp
10005301:	mov    ebp,esp
10005303:	sub    esp,0x14
10005306:	push   ebx
10005307:	mov    ebx,eax
10005309:	xor    eax,eax
1000530b:	cmp    DWORD PTR [ebx+0x8],eax
1000530e:	push   esi
1000530f:	push   edi
10005310:	mov    DWORD PTR [ebp-0x8],eax
10005313:	mov    DWORD PTR [ebp-0x4],eax
10005316:	jne    0x10005332
10005318:	mov    ecx,DWORD PTR [ebx+0x4]
1000531b:	push   DWORD PTR [ebp+0xc]
1000531e:	push   0x1
10005320:	mov    esi,ebx
10005322:	push   DWORD PTR [ebp+0x8]
10005325:	call   0x100058f0
1000532a:	mov    eax,DWORD PTR [ebp+0x8]
1000532d:	jmp    0x1000547c
10005332:	mov    eax,DWORD PTR [ebx+0x4]
10005335:	mov    eax,DWORD PTR [eax]
10005337:	lea    edi,[ebp-0x10]
1000533a:	lea    esi,[ebp+0x10]
1000533d:	mov    DWORD PTR [ebp-0xc],eax
10005340:	mov    DWORD PTR [ebp-0x10],ebx
10005343:	call   0x10009d5c
10005348:	test   al,al
1000534a:	je     0x10005366
1000534c:	mov    esi,DWORD PTR [ebp+0x14]
1000534f:	mov    eax,DWORD PTR [ebp+0xc]
10005352:	lea    ecx,[esi+0xc]
10005355:	call   0x100054c1
1000535a:	test   al,al
1000535c:	je     0x10005461
10005362:	mov    ecx,esi
10005364:	jmp    0x1000531b
10005366:	mov    eax,DWORD PTR [ebx+0x4]
10005369:	lea    edi,[ebp-0x10]
1000536c:	lea    esi,[ebp+0x10]
1000536f:	mov    DWORD PTR [ebp-0xc],eax
10005372:	mov    DWORD PTR [ebp-0x10],ebx
10005375:	call   0x10009d5c
1000537a:	test   al,al
1000537c:	je     0x100053a7
1000537e:	mov    eax,DWORD PTR [ebx+0x4]
10005381:	mov    eax,DWORD PTR [eax+0x8]
10005384:	mov    ecx,DWORD PTR [ebp+0xc]
10005387:	add    eax,0xc
1000538a:	call   0x100054c1
1000538f:	test   al,al
10005391:	je     0x10005461
10005397:	push   DWORD PTR [ebp+0xc]
1000539a:	mov    eax,DWORD PTR [ebx+0x4]
1000539d:	mov    ecx,DWORD PTR [eax+0x8]
100053a0:	push   0x0
100053a2:	jmp    0x10005320
100053a7:	mov    edi,DWORD PTR [ebp+0x14]
100053aa:	mov    eax,DWORD PTR [ebp+0xc]
100053ad:	lea    ecx,[edi+0xc]
100053b0:	call   0x100054c1
100053b5:	test   al,al
100053b7:	je     0x100053fd
100053b9:	mov    eax,DWORD PTR [ebp+0x10]
100053bc:	lea    esi,[ebp-0x8]
100053bf:	mov    DWORD PTR [ebp-0x8],eax
100053c2:	mov    DWORD PTR [ebp-0x4],edi
100053c5:	call   0x10005a3b
100053ca:	mov    eax,DWORD PTR [eax+0x4]
100053cd:	mov    ecx,DWORD PTR [ebp+0xc]
100053d0:	add    eax,0xc
100053d3:	call   0x100054c1
100053d8:	test   al,al
100053da:	je     0x100053fd
100053dc:	mov    ecx,DWORD PTR [ebp-0x4]
100053df:	mov    eax,DWORD PTR [ecx+0x8]
100053e2:	cmp    BYTE PTR [eax+0x45],0x0
100053e6:	push   DWORD PTR [ebp+0xc]
100053e9:	mov    esi,ebx
100053eb:	je     0x100053f4
100053ed:	push   0x0
100053ef:	jmp    0x10005322
100053f4:	push   0x1
100053f6:	mov    ecx,edi
100053f8:	jmp    0x10005322
100053fd:	mov    ecx,DWORD PTR [ebp+0xc]
10005400:	lea    eax,[edi+0xc]
10005403:	call   0x100054c1
10005408:	test   al,al
1000540a:	je     0x10005461
1000540c:	mov    eax,DWORD PTR [ebp+0x10]
1000540f:	mov    DWORD PTR [ebp-0x8],eax
10005412:	mov    eax,DWORD PTR [ebx+0x4]
10005415:	lea    esi,[ebp-0x8]
10005418:	mov    DWORD PTR [ebp-0x4],edi
1000541b:	mov    DWORD PTR [ebp-0xc],eax
1000541e:	mov    DWORD PTR [ebp-0x10],ebx
10005421:	call   0x1000570b
10005426:	lea    edi,[ebp-0x10]
10005429:	mov    esi,eax
1000542b:	call   0x10009d5c
10005430:	test   al,al
10005432:	jne    0x10005446
10005434:	mov    ecx,DWORD PTR [ebp-0x4]
10005437:	mov    eax,DWORD PTR [ebp+0xc]
1000543a:	add    ecx,0xc
1000543d:	call   0x100054c1
10005442:	test   al,al
10005444:	je     0x10005461
10005446:	mov    ecx,DWORD PTR [ebp+0x14]
10005449:	mov    eax,DWORD PTR [ecx+0x8]
1000544c:	cmp    BYTE PTR [eax+0x45],0x0
10005450:	push   DWORD PTR [ebp+0xc]
10005453:	mov    esi,ebx
10005455:	jne    0x100053ed
10005457:	mov    ecx,DWORD PTR [ebp-0x4]
1000545a:	push   0x1
1000545c:	jmp    0x10005322
10005461:	push   DWORD PTR [ebp+0xc]
10005464:	push   ebx
10005465:	lea    ebx,[ebp-0x14]
10005468:	call   0x1000582f
1000546d:	mov    edx,DWORD PTR [eax]
1000546f:	mov    ecx,DWORD PTR [ebp+0x8]
10005472:	mov    DWORD PTR [ecx],edx
10005474:	mov    eax,DWORD PTR [eax+0x4]
10005477:	mov    DWORD PTR [ecx+0x4],eax
1000547a:	mov    eax,ecx
1000547c:	pop    edi
1000547d:	pop    esi
1000547e:	pop    ebx
1000547f:	leave  
10005480:	ret    0x10
10005483:	push   ebp
10005484:	mov    ebp,esp
10005486:	push   ecx
10005487:	mov    eax,DWORD PTR [edi+0x4]
1000548a:	push   esi
1000548b:	mov    esi,DWORD PTR [eax+0x4]
1000548e:	mov    DWORD PTR [ebp-0x4],eax
10005491:	jmp    0x100054ac
10005493:	mov    ecx,DWORD PTR [ebp+0x8]
10005496:	lea    eax,[esi+0xc]
10005499:	call   0x100054c1
1000549e:	test   al,al
100054a0:	je     0x100054a7
100054a2:	mov    esi,DWORD PTR [esi+0x8]
100054a5:	jmp    0x100054ac
100054a7:	mov    DWORD PTR [ebp-0x4],esi
100054aa:	mov    esi,DWORD PTR [esi]
100054ac:	cmp    BYTE PTR [esi+0x45],0x0
100054b0:	je     0x10005493
100054b2:	mov    eax,DWORD PTR [ebp-0x4]
100054b5:	mov    DWORD PTR [ebx+0x4],eax
100054b8:	mov    DWORD PTR [ebx],edi
100054ba:	mov    eax,ebx
100054bc:	pop    esi
100054bd:	leave  
100054be:	ret    0x4
100054c1:	cmp    DWORD PTR [ecx+0x18],0x8
100054c5:	push   edi
100054c6:	mov    edi,DWORD PTR [ecx+0x14]
100054c9:	jb     0x100054d0
100054cb:	mov    ecx,DWORD PTR [ecx+0x4]
100054ce:	jmp    0x100054d3
100054d0:	add    ecx,0x4
100054d3:	push   ecx
100054d4:	mov    ecx,DWORD PTR [eax+0x14]
100054d7:	call   0x1000669e
100054dc:	xor    ecx,ecx
100054de:	test   eax,eax
100054e0:	setl   cl
100054e3:	mov    al,cl
100054e5:	pop    edi
100054e6:	ret    
100054e7:	push   esi
100054e8:	push   DWORD PTR [esp+0x8]
100054ec:	mov    esi,ecx
100054ee:	call   0x10001118
100054f3:	mov    DWORD PTR [esi],0x1006b96c
100054f9:	mov    eax,esi
100054fb:	pop    esi
100054fc:	ret    0x4
100054ff:	push   ebp
10005500:	mov    ebp,esp
10005502:	sub    esp,0x18
10005505:	push   esi
10005506:	mov    esi,DWORD PTR [ebp+0x8]
10005509:	mov    eax,DWORD PTR [esi+0x4]
1000550c:	push   edi
1000550d:	mov    edi,DWORD PTR [eax+0x4]
10005510:	mov    DWORD PTR [ebp-0x4],eax
10005513:	mov    al,0x1
10005515:	mov    BYTE PTR [ebp-0x8],al
10005518:	jmp    0x10005536
1000551a:	mov    eax,DWORD PTR [ebp+0xc]
1000551d:	lea    ecx,[edi+0xc]
10005520:	mov    DWORD PTR [ebp-0x4],edi
10005523:	call   0x10004f28
10005528:	test   al,al
1000552a:	mov    BYTE PTR [ebp-0x8],al
1000552d:	je     0x10005533
1000552f:	mov    edi,DWORD PTR [edi]
10005531:	jmp    0x10005536
10005533:	mov    edi,DWORD PTR [edi+0x8]
10005536:	cmp    BYTE PTR [edi+0x45],0x0
1000553a:	je     0x1000551a
1000553c:	test   al,al
1000553e:	mov    edi,DWORD PTR [ebp-0x4]
10005541:	mov    DWORD PTR [ebp-0xc],edi
10005544:	mov    DWORD PTR [ebp-0x10],esi
10005547:	je     0x10005595
10005549:	mov    eax,DWORD PTR [esi+0x4]
1000554c:	mov    eax,DWORD PTR [eax]
1000554e:	mov    DWORD PTR [ebp-0x18],esi
10005551:	lea    edi,[ebp-0x18]
10005554:	lea    esi,[ebp-0x10]
10005557:	mov    DWORD PTR [ebp-0x14],eax
1000555a:	call   0x10009d5c
1000555f:	test   al,al
10005561:	je     0x10005587
10005563:	push   DWORD PTR [ebp+0xc]
10005566:	mov    esi,DWORD PTR [ebp+0x8]
10005569:	push   0x1
1000556b:	mov    ecx,DWORD PTR [ebp-0x4]
1000556e:	lea    eax,[ebp-0x18]
10005571:	push   eax
10005572:	call   0x100055c0
10005577:	mov    ecx,DWORD PTR [eax]
10005579:	mov    eax,DWORD PTR [eax+0x4]
1000557c:	mov    DWORD PTR [ebx],ecx
1000557e:	mov    DWORD PTR [ebx+0x4],eax
10005581:	mov    BYTE PTR [ebx+0x8],0x1
10005585:	jmp    0x100055b8
10005587:	lea    esi,[ebp-0x10]
1000558a:	call   0x10005a3b
1000558f:	mov    edi,DWORD PTR [ebp-0xc]
10005592:	mov    esi,DWORD PTR [ebp+0x8]
10005595:	mov    ecx,DWORD PTR [ebp+0xc]
10005598:	lea    eax,[edi+0xc]
1000559b:	call   0x10004f28
100055a0:	test   al,al
100055a2:	je     0x100055ac
100055a4:	push   DWORD PTR [ebp+0xc]
100055a7:	push   DWORD PTR [ebp-0x8]
100055aa:	jmp    0x1000556b
100055ac:	mov    eax,DWORD PTR [ebp-0x10]
100055af:	mov    DWORD PTR [ebx],eax
100055b1:	mov    DWORD PTR [ebx+0x4],edi
100055b4:	mov    BYTE PTR [ebx+0x8],0x0
100055b8:	pop    edi
100055b9:	mov    eax,ebx
100055bb:	pop    esi
100055bc:	leave  
100055bd:	ret    0x8
100055c0:	push   0x48
100055c2:	mov    eax,0x100621c0
100055c7:	call   0x10059b25
100055cc:	mov    edi,ecx
100055ce:	cmp    DWORD PTR [esi+0x8],0x4924923
100055d5:	jb     0x10005609
100055d7:	push   0x1006d02c
100055dc:	lea    ecx,[ebp-0x2c]
100055df:	call   0x100011c8
100055e4:	and    DWORD PTR [ebp-0x4],0x0
100055e8:	lea    eax,[ebp-0x2c]
100055eb:	push   eax
100055ec:	lea    ecx,[ebp-0x54]
100055ef:	call   0x10001065
100055f4:	push   0x10074ec8
100055f9:	lea    eax,[ebp-0x54]
100055fc:	push   eax
100055fd:	mov    DWORD PTR [ebp-0x54],0x1006b96c
10005604:	call   0x10047aa4
10005609:	push   DWORD PTR [ebp+0x10]
1000560c:	mov    eax,DWORD PTR [esi+0x4]
1000560f:	push   eax
10005610:	push   edi
10005611:	push   eax
10005612:	call   0x10005b98
10005617:	inc    DWORD PTR [esi+0x8]
1000561a:	mov    ebx,eax
1000561c:	mov    eax,DWORD PTR [esi+0x4]
1000561f:	cmp    edi,eax
10005621:	jne    0x10005630
10005623:	mov    DWORD PTR [eax+0x4],ebx
10005626:	mov    eax,DWORD PTR [esi+0x4]
10005629:	mov    DWORD PTR [eax],ebx
1000562b:	mov    eax,DWORD PTR [esi+0x4]
1000562e:	jmp    0x1000564e
10005630:	cmp    BYTE PTR [ebp+0xc],0x0
10005634:	je     0x10005643
10005636:	mov    DWORD PTR [edi],ebx
10005638:	mov    eax,DWORD PTR [esi+0x4]
1000563b:	cmp    edi,DWORD PTR [eax]
1000563d:	jne    0x10005651
1000563f:	mov    DWORD PTR [eax],ebx
10005641:	jmp    0x10005651
10005643:	mov    DWORD PTR [edi+0x8],ebx
10005646:	mov    eax,DWORD PTR [esi+0x4]
10005649:	cmp    edi,DWORD PTR [eax+0x8]
1000564c:	jne    0x10005651
1000564e:	mov    DWORD PTR [eax+0x8],ebx
10005651:	mov    edi,ebx
10005653:	lea    eax,[ebx+0x4]
10005656:	jmp    0x100056e5
1000565b:	mov    ecx,DWORD PTR [eax]
1000565d:	mov    edx,DWORD PTR [ecx+0x4]
10005660:	cmp    ecx,DWORD PTR [edx]
10005662:	jne    0x10005699
10005664:	mov    edx,DWORD PTR [edx+0x8]
10005667:	cmp    BYTE PTR [edx+0x44],0x0
1000566b:	je     0x100056a1
1000566d:	cmp    edi,DWORD PTR [ecx+0x8]
10005670:	jne    0x1000567a
10005672:	push   esi
10005673:	mov    edi,ecx
10005675:	call   0x10005b58
1000567a:	mov    eax,DWORD PTR [edi+0x4]
1000567d:	mov    BYTE PTR [eax+0x44],0x1
10005681:	mov    eax,DWORD PTR [edi+0x4]
10005684:	mov    eax,DWORD PTR [eax+0x4]
10005687:	mov    BYTE PTR [eax+0x44],0x0
1000568b:	mov    eax,DWORD PTR [edi+0x4]
1000568e:	mov    ecx,DWORD PTR [eax+0x4]
10005691:	push   esi
10005692:	call   0x10005d83
10005697:	jmp    0x100056e2
10005699:	mov    edx,DWORD PTR [edx]
1000569b:	cmp    BYTE PTR [edx+0x44],0x0
1000569f:	jne    0x100056b9
100056a1:	mov    BYTE PTR [ecx+0x44],0x1
100056a5:	mov    BYTE PTR [edx+0x44],0x1
100056a9:	mov    ecx,DWORD PTR [eax]
100056ab:	mov    ecx,DWORD PTR [ecx+0x4]
100056ae:	mov    BYTE PTR [ecx+0x44],0x0
100056b2:	mov    eax,DWORD PTR [eax]
100056b4:	mov    edi,DWORD PTR [eax+0x4]
100056b7:	jmp    0x100056e2
100056b9:	cmp    edi,DWORD PTR [ecx]
100056bb:	jne    0x100056c5
100056bd:	push   esi
100056be:	mov    edi,ecx
100056c0:	call   0x10005d83
100056c5:	mov    eax,DWORD PTR [edi+0x4]
100056c8:	mov    BYTE PTR [eax+0x44],0x1
100056cc:	mov    eax,DWORD PTR [edi+0x4]
100056cf:	mov    eax,DWORD PTR [eax+0x4]
100056d2:	mov    BYTE PTR [eax+0x44],0x0
100056d6:	mov    eax,DWORD PTR [edi+0x4]
100056d9:	mov    ecx,DWORD PTR [eax+0x4]
100056dc:	push   esi
100056dd:	call   0x10005b58
100056e2:	lea    eax,[edi+0x4]
100056e5:	mov    ecx,DWORD PTR [eax]
100056e7:	cmp    BYTE PTR [ecx+0x44],0x0
100056eb:	je     0x1000565b
100056f1:	mov    eax,DWORD PTR [esi+0x4]
100056f4:	mov    eax,DWORD PTR [eax+0x4]
100056f7:	mov    BYTE PTR [eax+0x44],0x1
100056fb:	mov    eax,DWORD PTR [ebp+0x8]
100056fe:	mov    DWORD PTR [eax+0x4],ebx
10005701:	mov    DWORD PTR [eax],esi
10005703:	call   0x10059bfd
10005708:	ret    0xc
1000570b:	push   ebx
1000570c:	xor    ebx,ebx
1000570e:	cmp    DWORD PTR [esi],ebx
10005710:	jne    0x10005717
10005712:	call   0x100434a0
10005717:	mov    eax,DWORD PTR [esi+0x4]
1000571a:	cmp    BYTE PTR [eax+0x45],bl
1000571d:	je     0x10005726
1000571f:	call   0x100434a0
10005724:	jmp    0x10005754
10005726:	mov    ecx,DWORD PTR [eax+0x8]
10005729:	cmp    BYTE PTR [ecx+0x45],bl
1000572c:	jne    0x10005749
1000572e:	jmp    0x10005732
10005730:	mov    ecx,eax
10005732:	mov    eax,DWORD PTR [ecx]
10005734:	cmp    BYTE PTR [eax+0x45],bl
10005737:	je     0x10005730
10005739:	mov    DWORD PTR [esi+0x4],ecx
1000573c:	jmp    0x10005754
1000573e:	mov    ecx,DWORD PTR [esi+0x4]
10005741:	cmp    ecx,DWORD PTR [eax+0x8]
10005744:	jne    0x10005751
10005746:	mov    DWORD PTR [esi+0x4],eax
10005749:	mov    eax,DWORD PTR [eax+0x4]
1000574c:	cmp    BYTE PTR [eax+0x45],bl
1000574f:	je     0x1000573e
10005751:	mov    DWORD PTR [esi+0x4],eax
10005754:	mov    eax,esi
10005756:	pop    ebx
10005757:	ret    
10005758:	push   ebp
10005759:	mov    ebp,esp
1000575b:	push   ecx
1000575c:	push   ecx
1000575d:	cmp    DWORD PTR [esi+0x14],edi
10005760:	jae    0x10005767
10005762:	call   0x100572cf
10005767:	mov    eax,DWORD PTR [esi+0x14]
1000576a:	sub    eax,edi
1000576c:	cmp    eax,DWORD PTR [ebp+0x8]
1000576f:	jae    0x10005774
10005771:	mov    DWORD PTR [ebp+0x8],eax
10005774:	cmp    DWORD PTR [ebp+0x8],0x0
10005778:	jbe    0x100057cd
1000577a:	mov    ecx,DWORD PTR [esi+0x18]
1000577d:	cmp    ecx,0x8
10005780:	push   ebx
10005781:	lea    edx,[esi+0x4]
10005784:	jb     0x1000578d
10005786:	mov    ebx,DWORD PTR [edx]
10005788:	mov    DWORD PTR [ebp-0x4],ebx
1000578b:	jmp    0x10005790
1000578d:	mov    DWORD PTR [ebp-0x4],edx
10005790:	cmp    ecx,0x8
10005793:	jb     0x10005797
10005795:	mov    edx,DWORD PTR [edx]
10005797:	mov    ebx,DWORD PTR [ebp+0x8]
1000579a:	sub    eax,ebx
1000579c:	add    eax,eax
1000579e:	push   eax
1000579f:	mov    DWORD PTR [ebp-0x8],edx
100057a2:	mov    edx,DWORD PTR [ebp-0x4]
100057a5:	lea    eax,[edi+ebx*1]
100057a8:	lea    eax,[edx+eax*2]
100057ab:	push   eax
100057ac:	mov    eax,DWORD PTR [ebp-0x8]
100057af:	sub    ecx,edi
100057b1:	add    ecx,ecx
100057b3:	push   ecx
100057b4:	lea    eax,[eax+edi*2]
100057b7:	push   eax
100057b8:	call   0x10042f96
100057bd:	mov    ecx,DWORD PTR [esi+0x14]
100057c0:	add    esp,0x10
100057c3:	sub    ecx,ebx
100057c5:	mov    eax,esi
100057c7:	call   0x100057d3
100057cc:	pop    ebx
100057cd:	mov    eax,esi
100057cf:	leave  
100057d0:	ret    0x4
100057d3:	cmp    DWORD PTR [eax+0x18],0x8
100057d7:	mov    DWORD PTR [eax+0x14],ecx
100057da:	jb     0x100057e1
100057dc:	mov    eax,DWORD PTR [eax+0x4]
100057df:	jmp    0x100057e4
100057e1:	add    eax,0x4
100057e4:	and    WORD PTR [eax+ecx*2],0x0
100057e9:	ret    
100057ea:	cmp    edi,0x7ffffffe
100057f0:	push   esi
100057f1:	mov    esi,eax
100057f3:	jbe    0x100057fa
100057f5:	call   0x10057290
100057fa:	mov    eax,DWORD PTR [esi+0x18]
100057fd:	cmp    eax,edi
100057ff:	jae    0x1000580d
10005801:	push   DWORD PTR [esi+0x14]
10005804:	push   edi
10005805:	push   esi
10005806:	call   0x10005bea
1000580b:	jmp    0x10005825
1000580d:	test   edi,edi
1000580f:	jne    0x10005825
10005811:	and    DWORD PTR [esi+0x14],edi
10005814:	cmp    eax,0x8
10005817:	jb     0x1000581e
10005819:	mov    esi,DWORD PTR [esi+0x4]
1000581c:	jmp    0x10005821
1000581e:	add    esi,0x4
10005821:	and    WORD PTR [esi],0x0
10005825:	xor    eax,eax
10005827:	cmp    eax,edi
10005829:	sbb    eax,eax
1000582b:	neg    eax
1000582d:	pop    esi
1000582e:	ret    
1000582f:	push   ebp
10005830:	mov    ebp,esp
10005832:	sub    esp,0x18
10005835:	push   esi
10005836:	mov    esi,DWORD PTR [ebp+0x8]
10005839:	mov    eax,DWORD PTR [esi+0x4]
1000583c:	push   edi
1000583d:	mov    edi,DWORD PTR [eax+0x4]
10005840:	mov    DWORD PTR [ebp-0x4],eax
10005843:	mov    al,0x1
10005845:	mov    BYTE PTR [ebp-0x8],al
10005848:	jmp    0x10005866
1000584a:	mov    eax,DWORD PTR [ebp+0xc]
1000584d:	lea    ecx,[edi+0xc]
10005850:	mov    DWORD PTR [ebp-0x4],edi
10005853:	call   0x100054c1
10005858:	test   al,al
1000585a:	mov    BYTE PTR [ebp-0x8],al
1000585d:	je     0x10005863
1000585f:	mov    edi,DWORD PTR [edi]
10005861:	jmp    0x10005866
10005863:	mov    edi,DWORD PTR [edi+0x8]
10005866:	cmp    BYTE PTR [edi+0x45],0x0
1000586a:	je     0x1000584a
1000586c:	test   al,al
1000586e:	mov    edi,DWORD PTR [ebp-0x4]
10005871:	mov    DWORD PTR [ebp-0xc],edi
10005874:	mov    DWORD PTR [ebp-0x10],esi
10005877:	je     0x100058c5
10005879:	mov    eax,DWORD PTR [esi+0x4]
1000587c:	mov    eax,DWORD PTR [eax]
1000587e:	mov    DWORD PTR [ebp-0x18],esi
10005881:	lea    edi,[ebp-0x18]
10005884:	lea    esi,[ebp-0x10]
10005887:	mov    DWORD PTR [ebp-0x14],eax
1000588a:	call   0x10009d5c
1000588f:	test   al,al
10005891:	je     0x100058b7
10005893:	push   DWORD PTR [ebp+0xc]
10005896:	mov    esi,DWORD PTR [ebp+0x8]
10005899:	push   0x1
1000589b:	mov    ecx,DWORD PTR [ebp-0x4]
1000589e:	lea    eax,[ebp-0x18]
100058a1:	push   eax
100058a2:	call   0x100058f0
100058a7:	mov    ecx,DWORD PTR [eax]
100058a9:	mov    eax,DWORD PTR [eax+0x4]
100058ac:	mov    DWORD PTR [ebx],ecx
100058ae:	mov    DWORD PTR [ebx+0x4],eax
100058b1:	mov    BYTE PTR [ebx+0x8],0x1
100058b5:	jmp    0x100058e8
100058b7:	lea    esi,[ebp-0x10]
100058ba:	call   0x10005a3b
100058bf:	mov    edi,DWORD PTR [ebp-0xc]
100058c2:	mov    esi,DWORD PTR [ebp+0x8]
100058c5:	mov    ecx,DWORD PTR [ebp+0xc]
100058c8:	lea    eax,[edi+0xc]
100058cb:	call   0x100054c1
100058d0:	test   al,al
100058d2:	je     0x100058dc
100058d4:	push   DWORD PTR [ebp+0xc]
100058d7:	push   DWORD PTR [ebp-0x8]
100058da:	jmp    0x1000589b
100058dc:	mov    eax,DWORD PTR [ebp-0x10]
100058df:	mov    DWORD PTR [ebx],eax
100058e1:	mov    DWORD PTR [ebx+0x4],edi
100058e4:	mov    BYTE PTR [ebx+0x8],0x0
100058e8:	pop    edi
100058e9:	mov    eax,ebx
100058eb:	pop    esi
100058ec:	leave  
100058ed:	ret    0x8
100058f0:	push   0x48
100058f2:	mov    eax,0x100621c0
100058f7:	call   0x10059b25
100058fc:	mov    edi,ecx
100058fe:	cmp    DWORD PTR [esi+0x8],0x4924923
10005905:	jb     0x10005939
10005907:	push   0x1006d02c
1000590c:	lea    ecx,[ebp-0x2c]
1000590f:	call   0x100011c8
10005914:	and    DWORD PTR [ebp-0x4],0x0
10005918:	lea    eax,[ebp-0x2c]
1000591b:	push   eax
1000591c:	lea    ecx,[ebp-0x54]
1000591f:	call   0x10001065
10005924:	push   0x10074ec8
10005929:	lea    eax,[ebp-0x54]
1000592c:	push   eax
1000592d:	mov    DWORD PTR [ebp-0x54],0x1006b96c
10005934:	call   0x10047aa4
10005939:	push   DWORD PTR [ebp+0x10]
1000593c:	mov    eax,DWORD PTR [esi+0x4]
1000593f:	push   eax
10005940:	push   edi
10005941:	push   eax
10005942:	call   0x10005dc5
10005947:	inc    DWORD PTR [esi+0x8]
1000594a:	mov    ebx,eax
1000594c:	mov    eax,DWORD PTR [esi+0x4]
1000594f:	cmp    edi,eax
10005951:	jne    0x10005960
10005953:	mov    DWORD PTR [eax+0x4],ebx
10005956:	mov    eax,DWORD PTR [esi+0x4]
10005959:	mov    DWORD PTR [eax],ebx
1000595b:	mov    eax,DWORD PTR [esi+0x4]
1000595e:	jmp    0x1000597e
10005960:	cmp    BYTE PTR [ebp+0xc],0x0
10005964:	je     0x10005973
10005966:	mov    DWORD PTR [edi],ebx
10005968:	mov    eax,DWORD PTR [esi+0x4]
1000596b:	cmp    edi,DWORD PTR [eax]
1000596d:	jne    0x10005981
1000596f:	mov    DWORD PTR [eax],ebx
10005971:	jmp    0x10005981
10005973:	mov    DWORD PTR [edi+0x8],ebx
10005976:	mov    eax,DWORD PTR [esi+0x4]
10005979:	cmp    edi,DWORD PTR [eax+0x8]
1000597c:	jne    0x10005981
1000597e:	mov    DWORD PTR [eax+0x8],ebx
10005981:	mov    edi,ebx
10005983:	lea    eax,[ebx+0x4]
10005986:	jmp    0x10005a15
1000598b:	mov    ecx,DWORD PTR [eax]
1000598d:	mov    edx,DWORD PTR [ecx+0x4]
10005990:	cmp    ecx,DWORD PTR [edx]
10005992:	jne    0x100059c9
10005994:	mov    edx,DWORD PTR [edx+0x8]
10005997:	cmp    BYTE PTR [edx+0x44],0x0
1000599b:	je     0x100059d1
1000599d:	cmp    edi,DWORD PTR [ecx+0x8]
100059a0:	jne    0x100059aa
100059a2:	push   esi
100059a3:	mov    edi,ecx
100059a5:	call   0x10005b58
100059aa:	mov    eax,DWORD PTR [edi+0x4]
100059ad:	mov    BYTE PTR [eax+0x44],0x1
100059b1:	mov    eax,DWORD PTR [edi+0x4]
100059b4:	mov    eax,DWORD PTR [eax+0x4]
100059b7:	mov    BYTE PTR [eax+0x44],0x0
100059bb:	mov    eax,DWORD PTR [edi+0x4]
100059be:	mov    ecx,DWORD PTR [eax+0x4]
100059c1:	push   esi
100059c2:	call   0x10005d83
100059c7:	jmp    0x10005a12
100059c9:	mov    edx,DWORD PTR [edx]
100059cb:	cmp    BYTE PTR [edx+0x44],0x0
100059cf:	jne    0x100059e9
100059d1:	mov    BYTE PTR [ecx+0x44],0x1
100059d5:	mov    BYTE PTR [edx+0x44],0x1
100059d9:	mov    ecx,DWORD PTR [eax]
100059db:	mov    ecx,DWORD PTR [ecx+0x4]
100059de:	mov    BYTE PTR [ecx+0x44],0x0
100059e2:	mov    eax,DWORD PTR [eax]
100059e4:	mov    edi,DWORD PTR [eax+0x4]
100059e7:	jmp    0x10005a12
100059e9:	cmp    edi,DWORD PTR [ecx]
100059eb:	jne    0x100059f5
100059ed:	push   esi
100059ee:	mov    edi,ecx
100059f0:	call   0x10005d83
100059f5:	mov    eax,DWORD PTR [edi+0x4]
100059f8:	mov    BYTE PTR [eax+0x44],0x1
100059fc:	mov    eax,DWORD PTR [edi+0x4]
100059ff:	mov    eax,DWORD PTR [eax+0x4]
10005a02:	mov    BYTE PTR [eax+0x44],0x0
10005a06:	mov    eax,DWORD PTR [edi+0x4]
10005a09:	mov    ecx,DWORD PTR [eax+0x4]
10005a0c:	push   esi
10005a0d:	call   0x10005b58
10005a12:	lea    eax,[edi+0x4]
10005a15:	mov    ecx,DWORD PTR [eax]
10005a17:	cmp    BYTE PTR [ecx+0x44],0x0
10005a1b:	je     0x1000598b
10005a21:	mov    eax,DWORD PTR [esi+0x4]
10005a24:	mov    eax,DWORD PTR [eax+0x4]
10005a27:	mov    BYTE PTR [eax+0x44],0x1
10005a2b:	mov    eax,DWORD PTR [ebp+0x8]
10005a2e:	mov    DWORD PTR [eax+0x4],ebx
10005a31:	mov    DWORD PTR [eax],esi
10005a33:	call   0x10059bfd
10005a38:	ret    0xc
10005a3b:	push   ebx
10005a3c:	xor    ebx,ebx
10005a3e:	cmp    DWORD PTR [esi],ebx
10005a40:	jne    0x10005a47
10005a42:	call   0x100434a0
10005a47:	mov    eax,DWORD PTR [esi+0x4]
10005a4a:	cmp    BYTE PTR [eax+0x45],bl
10005a4d:	je     0x10005a5c
10005a4f:	mov    eax,DWORD PTR [eax+0x8]
10005a52:	mov    DWORD PTR [esi+0x4],eax
10005a55:	cmp    BYTE PTR [eax+0x45],bl
10005a58:	je     0x10005a98
10005a5a:	jmp    0x10005a8e
10005a5c:	mov    ecx,DWORD PTR [eax]
10005a5e:	cmp    BYTE PTR [ecx+0x45],bl
10005a61:	jne    0x10005a7e
10005a63:	jmp    0x10005a67
10005a65:	mov    ecx,eax
10005a67:	mov    eax,DWORD PTR [ecx+0x8]
10005a6a:	cmp    BYTE PTR [eax+0x45],bl
10005a6d:	je     0x10005a65
10005a6f:	mov    DWORD PTR [esi+0x4],ecx
10005a72:	jmp    0x10005a98
10005a74:	mov    ecx,DWORD PTR [esi+0x4]
10005a77:	cmp    ecx,DWORD PTR [eax]
10005a79:	jne    0x10005a86
10005a7b:	mov    DWORD PTR [esi+0x4],eax
10005a7e:	mov    eax,DWORD PTR [eax+0x4]
10005a81:	cmp    BYTE PTR [eax+0x45],bl
10005a84:	je     0x10005a74
10005a86:	mov    ecx,DWORD PTR [esi+0x4]
10005a89:	cmp    BYTE PTR [ecx+0x45],bl
10005a8c:	je     0x10005a95
10005a8e:	call   0x100434a0
10005a93:	jmp    0x10005a98
10005a95:	mov    DWORD PTR [esi+0x4],eax
10005a98:	mov    eax,esi
10005a9a:	pop    ebx
10005a9b:	ret    
10005a9c:	push   ebp
10005a9d:	mov    ebp,esp
10005a9f:	sub    esp,0x10
10005aa2:	mov    eax,ds:0x10080c30
10005aa7:	mov    eax,DWORD PTR [eax]
10005aa9:	push   ebx
10005aaa:	push   esi
10005aab:	push   edi
10005aac:	mov    ebx,0x10080c2c
10005ab1:	lea    edi,[ebp-0xc]
10005ab4:	lea    esi,[ebp+0xc]
10005ab7:	mov    DWORD PTR [ebp-0x8],eax
10005aba:	mov    DWORD PTR [ebp-0xc],ebx
10005abd:	call   0x10009d5c
10005ac2:	test   al,al
10005ac4:	je     0x10005b34
10005ac6:	mov    eax,ds:0x10080c30
10005acb:	lea    edi,[ebp-0xc]
10005ace:	lea    esi,[ebp+0x14]
10005ad1:	mov    DWORD PTR [ebp-0x8],eax
10005ad4:	mov    DWORD PTR [ebp-0xc],ebx
10005ad7:	call   0x10009d5c
10005adc:	test   al,al
10005ade:	je     0x10005b34
10005ae0:	mov    eax,ds:0x10080c30
10005ae5:	push   DWORD PTR [eax+0x4]
10005ae8:	mov    ecx,ebx
10005aea:	call   0x10006462
10005aef:	mov    eax,ds:0x10080c30
10005af4:	mov    DWORD PTR [eax+0x4],eax
10005af7:	mov    eax,ds:0x10080c30
10005afc:	and    DWORD PTR ds:0x10080c34,0x0
10005b03:	mov    DWORD PTR [eax],eax
10005b05:	mov    eax,ds:0x10080c30
10005b0a:	mov    DWORD PTR [eax+0x8],eax
10005b0d:	mov    eax,ds:0x10080c30
10005b12:	mov    ecx,DWORD PTR [eax]
10005b14:	mov    eax,DWORD PTR [ebp+0x8]
10005b17:	mov    DWORD PTR [eax],ebx
10005b19:	jmp    0x10005b4e
10005b1b:	mov    edi,DWORD PTR [ebp+0xc]
10005b1e:	mov    ebx,DWORD PTR [ebp+0x10]
10005b21:	lea    esi,[ebp+0xc]
10005b24:	call   0x1000570b
10005b29:	push   ebx
10005b2a:	push   edi
10005b2b:	lea    eax,[ebp-0xc]
10005b2e:	push   eax
10005b2f:	call   0x10005e17
10005b34:	lea    edi,[ebp+0x14]
10005b37:	lea    esi,[ebp+0xc]
10005b3a:	call   0x10009d5c
10005b3f:	test   al,al
10005b41:	je     0x10005b1b
10005b43:	mov    ecx,DWORD PTR [ebp+0xc]
10005b46:	mov    eax,DWORD PTR [ebp+0x8]
10005b49:	mov    DWORD PTR [eax],ecx
10005b4b:	mov    ecx,DWORD PTR [ebp+0x10]
10005b4e:	pop    edi
10005b4f:	pop    esi
10005b50:	mov    DWORD PTR [eax+0x4],ecx
10005b53:	pop    ebx
10005b54:	leave  
10005b55:	ret    0x14
10005b58:	mov    eax,DWORD PTR [ecx+0x8]
10005b5b:	mov    edx,DWORD PTR [eax]
10005b5d:	mov    DWORD PTR [ecx+0x8],edx
10005b60:	mov    edx,DWORD PTR [eax]
10005b62:	cmp    BYTE PTR [edx+0x45],0x0
10005b66:	jne    0x10005b6b
10005b68:	mov    DWORD PTR [edx+0x4],ecx
10005b6b:	mov    edx,DWORD PTR [ecx+0x4]
10005b6e:	mov    DWORD PTR [eax+0x4],edx
10005b71:	mov    edx,DWORD PTR [esp+0x4]
10005b75:	mov    edx,DWORD PTR [edx+0x4]
10005b78:	cmp    ecx,DWORD PTR [edx+0x4]
10005b7b:	jne    0x10005b82
10005b7d:	mov    DWORD PTR [edx+0x4],eax
10005b80:	jmp    0x10005b90
10005b82:	mov    edx,DWORD PTR [ecx+0x4]
10005b85:	cmp    ecx,DWORD PTR [edx]
10005b87:	jne    0x10005b8d
10005b89:	mov    DWORD PTR [edx],eax
10005b8b:	jmp    0x10005b90
10005b8d:	mov    DWORD PTR [edx+0x8],eax
10005b90:	mov    DWORD PTR [eax],ecx
10005b92:	mov    DWORD PTR [ecx+0x4],eax
10005b95:	ret    0x4
10005b98:	push   0x8
10005b9a:	mov    eax,0x1005fddb
10005b9f:	call   0x10059b58
10005ba4:	push   0x48
10005ba6:	call   0x1004358e
10005bab:	mov    esi,eax
10005bad:	pop    ecx
10005bae:	mov    DWORD PTR [ebp-0x14],esi
10005bb1:	test   esi,esi
10005bb3:	mov    DWORD PTR [ebp-0x4],0x1
10005bba:	je     0x10005bcd
10005bbc:	push   DWORD PTR [ebp+0x10]
10005bbf:	mov    ecx,DWORD PTR [ebp+0x14]
10005bc2:	push   DWORD PTR [ebp+0xc]
10005bc5:	push   DWORD PTR [ebp+0x8]
10005bc8:	call   0x100063c8
10005bcd:	mov    eax,esi
10005bcf:	call   0x10059bfd
10005bd4:	ret    0x10
10005bd7:	push   DWORD PTR [ebp-0x14]
10005bda:	call   0x10042f82
10005bdf:	pop    ecx
10005be0:	push   0x0
10005be2:	push   0x0
10005be4:	call   0x10047aa4
10005be9:	int3   
10005bea:	push   0x8
10005bec:	mov    eax,0x1005fdbb
10005bf1:	call   0x10059b58
10005bf6:	mov    esi,DWORD PTR [ebp+0x8]
10005bf9:	mov    edi,DWORD PTR [ebp+0xc]
10005bfc:	or     edi,0x7
10005bff:	cmp    edi,0x7ffffffe
10005c05:	jbe    0x10005c0c
10005c07:	mov    edi,DWORD PTR [ebp+0xc]
10005c0a:	jmp    0x10005c33
10005c0c:	xor    edx,edx
10005c0e:	push   0x3
10005c10:	mov    eax,edi
10005c12:	pop    ebx
10005c13:	div    ebx
10005c15:	mov    ecx,DWORD PTR [esi+0x18]
10005c18:	mov    DWORD PTR [ebp-0x14],ecx
10005c1b:	shr    DWORD PTR [ebp-0x14],1
10005c1e:	mov    edx,DWORD PTR [ebp-0x14]
10005c21:	cmp    eax,edx
10005c23:	jae    0x10005c33
10005c25:	mov    eax,0x7ffffffe
10005c2a:	sub    eax,edx
10005c2c:	cmp    ecx,eax
10005c2e:	ja     0x10005c33
10005c30:	lea    edi,[edx+ecx*1]
10005c33:	and    DWORD PTR [ebp-0x4],0x0
10005c37:	lea    ecx,[edi+0x1]
10005c3a:	call   0x100060e7
10005c3f:	mov    DWORD PTR [ebp+0xc],eax
10005c42:	jmp    0x10005c68
10005c44:	mov    eax,DWORD PTR [ebp+0xc]
10005c47:	lea    ecx,[eax+0x1]
10005c4a:	mov    DWORD PTR [ebp-0x10],esp
10005c4d:	mov    DWORD PTR [ebp-0x14],eax
10005c50:	mov    BYTE PTR [ebp-0x4],0x2
10005c54:	call   0x100060e7
10005c59:	mov    DWORD PTR [ebp+0xc],eax
10005c5c:	mov    eax,0x10005c62
10005c61:	ret    
10005c62:	mov    esi,DWORD PTR [ebp+0x8]
10005c65:	mov    edi,DWORD PTR [ebp-0x14]
10005c68:	cmp    DWORD PTR [ebp+0x10],0x0
10005c6c:	jbe    0x10005c8f
10005c6e:	cmp    DWORD PTR [esi+0x18],0x8
10005c72:	jb     0x10005c79
10005c74:	mov    eax,DWORD PTR [esi+0x4]
10005c77:	jmp    0x10005c7c
10005c79:	lea    eax,[esi+0x4]
10005c7c:	push   eax
10005c7d:	lea    eax,[edi+0x1]
10005c80:	push   eax
10005c81:	push   DWORD PTR [ebp+0xc]
10005c84:	mov    eax,DWORD PTR [ebp+0x10]
10005c87:	call   0x1000665b
10005c8c:	add    esp,0xc
10005c8f:	push   0x1
10005c91:	xor    ebx,ebx
10005c93:	call   0x10005279
10005c98:	mov    eax,DWORD PTR [ebp+0xc]
10005c9b:	mov    ecx,DWORD PTR [ebp+0x10]
10005c9e:	mov    DWORD PTR [esi+0x4],eax
10005ca1:	mov    eax,esi
10005ca3:	mov    DWORD PTR [esi+0x18],edi
10005ca6:	call   0x100057d3
10005cab:	call   0x10059bfd
10005cb0:	ret    0xc
10005cb3:	mov    esi,DWORD PTR [ebp+0x8]
10005cb6:	push   0x1
10005cb8:	xor    ebx,ebx
10005cba:	call   0x10005279
10005cbf:	push   ebx
10005cc0:	push   ebx
10005cc1:	call   0x10047aa4
10005cc6:	int3   
10005cc7:	push   ebp
10005cc8:	mov    ebp,esp
10005cca:	sub    esp,0x10
10005ccd:	mov    eax,ds:0x10080c24
10005cd2:	mov    eax,DWORD PTR [eax]
10005cd4:	push   ebx
10005cd5:	push   esi
10005cd6:	push   edi
10005cd7:	mov    ebx,0x10080c20
10005cdc:	lea    edi,[ebp-0xc]
10005cdf:	lea    esi,[ebp+0xc]
10005ce2:	mov    DWORD PTR [ebp-0x8],eax
10005ce5:	mov    DWORD PTR [ebp-0xc],ebx
10005ce8:	call   0x10009d5c
10005ced:	test   al,al
10005cef:	je     0x10005d5f
10005cf1:	mov    eax,ds:0x10080c24
10005cf6:	lea    edi,[ebp-0xc]
10005cf9:	lea    esi,[ebp+0x14]
10005cfc:	mov    DWORD PTR [ebp-0x8],eax
10005cff:	mov    DWORD PTR [ebp-0xc],ebx
10005d02:	call   0x10009d5c
10005d07:	test   al,al
10005d09:	je     0x10005d5f
10005d0b:	mov    eax,ds:0x10080c24
10005d10:	push   DWORD PTR [eax+0x4]
10005d13:	mov    ecx,ebx
10005d15:	call   0x100064b4
10005d1a:	mov    eax,ds:0x10080c24
10005d1f:	mov    DWORD PTR [eax+0x4],eax
10005d22:	mov    eax,ds:0x10080c24
10005d27:	and    DWORD PTR ds:0x10080c28,0x0
10005d2e:	mov    DWORD PTR [eax],eax
10005d30:	mov    eax,ds:0x10080c24
10005d35:	mov    DWORD PTR [eax+0x8],eax
10005d38:	mov    eax,ds:0x10080c24
10005d3d:	mov    ecx,DWORD PTR [eax]
10005d3f:	mov    eax,DWORD PTR [ebp+0x8]
10005d42:	mov    DWORD PTR [eax],ebx
10005d44:	jmp    0x10005d79
10005d46:	mov    edi,DWORD PTR [ebp+0xc]
10005d49:	mov    ebx,DWORD PTR [ebp+0x10]
10005d4c:	lea    esi,[ebp+0xc]
10005d4f:	call   0x1000570b
10005d54:	push   ebx
10005d55:	push   edi
10005d56:	lea    eax,[ebp-0xc]
10005d59:	push   eax
10005d5a:	call   0x10006131
10005d5f:	lea    edi,[ebp+0x14]
10005d62:	lea    esi,[ebp+0xc]
10005d65:	call   0x10009d5c
10005d6a:	test   al,al
10005d6c:	je     0x10005d46
10005d6e:	mov    ecx,DWORD PTR [ebp+0xc]
10005d71:	mov    eax,DWORD PTR [ebp+0x8]
10005d74:	mov    DWORD PTR [eax],ecx
10005d76:	mov    ecx,DWORD PTR [ebp+0x10]
10005d79:	pop    edi
10005d7a:	pop    esi
10005d7b:	mov    DWORD PTR [eax+0x4],ecx
10005d7e:	pop    ebx
10005d7f:	leave  
10005d80:	ret    0x14
10005d83:	mov    eax,DWORD PTR [ecx]
10005d85:	mov    edx,DWORD PTR [eax+0x8]
10005d88:	mov    DWORD PTR [ecx],edx
10005d8a:	mov    edx,DWORD PTR [eax+0x8]
10005d8d:	cmp    BYTE PTR [edx+0x45],0x0
10005d91:	jne    0x10005d96
10005d93:	mov    DWORD PTR [edx+0x4],ecx
10005d96:	mov    edx,DWORD PTR [ecx+0x4]
10005d99:	mov    DWORD PTR [eax+0x4],edx
10005d9c:	mov    edx,DWORD PTR [esp+0x4]
10005da0:	mov    edx,DWORD PTR [edx+0x4]
10005da3:	cmp    ecx,DWORD PTR [edx+0x4]
10005da6:	jne    0x10005dad
10005da8:	mov    DWORD PTR [edx+0x4],eax
10005dab:	jmp    0x10005dbc
10005dad:	mov    edx,DWORD PTR [ecx+0x4]
10005db0:	cmp    ecx,DWORD PTR [edx+0x8]
10005db3:	jne    0x10005dba
10005db5:	mov    DWORD PTR [edx+0x8],eax
10005db8:	jmp    0x10005dbc
10005dba:	mov    DWORD PTR [edx],eax
10005dbc:	mov    DWORD PTR [eax+0x8],ecx
10005dbf:	mov    DWORD PTR [ecx+0x4],eax
10005dc2:	ret    0x4
10005dc5:	push   0x8
10005dc7:	mov    eax,0x10060653
10005dcc:	call   0x10059b58
10005dd1:	push   0x48
10005dd3:	call   0x1004358e
10005dd8:	mov    edi,eax
10005dda:	pop    ecx
10005ddb:	mov    DWORD PTR [ebp-0x14],edi
10005dde:	test   edi,edi
10005de0:	mov    DWORD PTR [ebp-0x4],0x1
10005de7:	je     0x10005dfa
10005de9:	push   DWORD PTR [ebp+0x10]
10005dec:	mov    ebx,DWORD PTR [ebp+0x14]
10005def:	push   DWORD PTR [ebp+0xc]
10005df2:	push   DWORD PTR [ebp+0x8]
10005df5:	call   0x10006417
10005dfa:	mov    eax,edi
10005dfc:	call   0x10059bfd
10005e01:	ret    0x10
10005e04:	push   DWORD PTR [ebp-0x14]
10005e07:	call   0x10042f82
10005e0c:	pop    ecx
10005e0d:	push   0x0
10005e0f:	push   0x0
10005e11:	call   0x10047aa4
10005e16:	int3   
10005e17:	push   0x48
10005e19:	mov    eax,0x100621c0
10005e1e:	call   0x10059b25
10005e23:	mov    edi,DWORD PTR [ebp+0x10]
10005e26:	cmp    BYTE PTR [edi+0x45],0x0
10005e2a:	je     0x10005e5e
10005e2c:	push   0x1006ccec
10005e31:	lea    ecx,[ebp-0x2c]
10005e34:	call   0x100011c8
10005e39:	and    DWORD PTR [ebp-0x4],0x0
10005e3d:	lea    eax,[ebp-0x2c]
10005e40:	push   eax
10005e41:	lea    ecx,[ebp-0x54]
10005e44:	call   0x10001065
10005e49:	push   0x10074de8
10005e4e:	lea    eax,[ebp-0x54]
10005e51:	push   eax
10005e52:	mov    DWORD PTR [ebp-0x54],0x1006b978
10005e59:	call   0x10047aa4
10005e5e:	lea    esi,[ebp+0xc]
10005e61:	mov    DWORD PTR [ebp-0x10],edi
10005e64:	call   0x1000570b
10005e69:	mov    ecx,DWORD PTR [edi]
10005e6b:	cmp    BYTE PTR [ecx+0x45],0x0
10005e6f:	je     0x10005e76
10005e71:	mov    ebx,DWORD PTR [edi+0x8]
10005e74:	jmp    0x10005e8d
10005e76:	mov    eax,DWORD PTR [edi+0x8]
10005e79:	cmp    BYTE PTR [eax+0x45],0x0
10005e7d:	je     0x10005e83
10005e7f:	mov    ebx,ecx
10005e81:	jmp    0x10005e8d
10005e83:	mov    eax,DWORD PTR [ebp+0x10]
10005e86:	cmp    eax,edi
10005e88:	mov    ebx,DWORD PTR [eax+0x8]
10005e8b:	jne    0x10005f05
10005e8d:	cmp    BYTE PTR [ebx+0x45],0x0
10005e91:	mov    esi,DWORD PTR [edi+0x4]
10005e94:	jne    0x10005e99
10005e96:	mov    DWORD PTR [ebx+0x4],esi
10005e99:	mov    eax,ds:0x10080c30
10005e9e:	cmp    DWORD PTR [eax+0x4],edi
10005ea1:	jne    0x10005ea8
10005ea3:	mov    DWORD PTR [eax+0x4],ebx
10005ea6:	jmp    0x10005eb3
10005ea8:	cmp    DWORD PTR [esi],edi
10005eaa:	jne    0x10005eb0
10005eac:	mov    DWORD PTR [esi],ebx
10005eae:	jmp    0x10005eb3
10005eb0:	mov    DWORD PTR [esi+0x8],ebx
10005eb3:	mov    edx,DWORD PTR ds:0x10080c30
10005eb9:	cmp    DWORD PTR [edx],edi
10005ebb:	jne    0x10005ed9
10005ebd:	cmp    BYTE PTR [ebx+0x45],0x0
10005ec1:	je     0x10005ec7
10005ec3:	mov    ecx,esi
10005ec5:	jmp    0x10005ed7
10005ec7:	mov    eax,DWORD PTR [ebx]
10005ec9:	mov    ecx,ebx
10005ecb:	jmp    0x10005ed1
10005ecd:	mov    ecx,eax
10005ecf:	mov    eax,DWORD PTR [ecx]
10005ed1:	cmp    BYTE PTR [eax+0x45],0x0
10005ed5:	je     0x10005ecd
10005ed7:	mov    DWORD PTR [edx],ecx
10005ed9:	mov    edx,DWORD PTR ds:0x10080c30
10005edf:	cmp    DWORD PTR [edx+0x8],edi
10005ee2:	jne    0x10005f5f
10005ee4:	cmp    BYTE PTR [ebx+0x45],0x0
10005ee8:	je     0x10005eee
10005eea:	mov    ecx,esi
10005eec:	jmp    0x10005f00
10005eee:	mov    eax,DWORD PTR [ebx+0x8]
10005ef1:	mov    ecx,ebx
10005ef3:	jmp    0x10005efa
10005ef5:	mov    ecx,eax
10005ef7:	mov    eax,DWORD PTR [ecx+0x8]
10005efa:	cmp    BYTE PTR [eax+0x45],0x0
10005efe:	je     0x10005ef5
10005f00:	mov    DWORD PTR [edx+0x8],ecx
10005f03:	jmp    0x10005f5f
10005f05:	mov    DWORD PTR [ecx+0x4],eax
10005f08:	mov    ecx,DWORD PTR [edi]
10005f0a:	mov    DWORD PTR [eax],ecx
10005f0c:	cmp    eax,DWORD PTR [edi+0x8]
10005f0f:	jne    0x10005f15
10005f11:	mov    esi,eax
10005f13:	jmp    0x10005f2f
10005f15:	cmp    BYTE PTR [ebx+0x45],0x0
10005f19:	mov    esi,DWORD PTR [eax+0x4]
10005f1c:	jne    0x10005f21
10005f1e:	mov    DWORD PTR [ebx+0x4],esi
10005f21:	mov    DWORD PTR [esi],ebx
10005f23:	mov    ecx,DWORD PTR [edi+0x8]
10005f26:	mov    DWORD PTR [eax+0x8],ecx
10005f29:	mov    ecx,DWORD PTR [edi+0x8]
10005f2c:	mov    DWORD PTR [ecx+0x4],eax
10005f2f:	mov    ecx,DWORD PTR ds:0x10080c30
10005f35:	cmp    DWORD PTR [ecx+0x4],edi
10005f38:	jne    0x10005f3f
10005f3a:	mov    DWORD PTR [ecx+0x4],eax
10005f3d:	jmp    0x10005f4d
10005f3f:	mov    ecx,DWORD PTR [edi+0x4]
10005f42:	cmp    DWORD PTR [ecx],edi
10005f44:	jne    0x10005f4a
10005f46:	mov    DWORD PTR [ecx],eax
10005f48:	jmp    0x10005f4d
10005f4a:	mov    DWORD PTR [ecx+0x8],eax
10005f4d:	mov    ecx,DWORD PTR [edi+0x4]
10005f50:	mov    DWORD PTR [eax+0x4],ecx
10005f53:	mov    dl,BYTE PTR [edi+0x44]
10005f56:	mov    cl,BYTE PTR [eax+0x44]
10005f59:	mov    BYTE PTR [eax+0x44],dl
10005f5c:	mov    BYTE PTR [edi+0x44],cl
10005f5f:	cmp    BYTE PTR [edi+0x44],0x1
10005f63:	jne    0x10006078
10005f69:	mov    eax,ds:0x10080c30
10005f6e:	cmp    ebx,DWORD PTR [eax+0x4]
10005f71:	je     0x10006074
10005f77:	mov    edi,0x10080c2c
10005f7c:	cmp    BYTE PTR [ebx+0x44],0x1
10005f80:	jne    0x10006071
10005f86:	mov    ecx,DWORD PTR [esi]
10005f88:	cmp    ebx,ecx
10005f8a:	jne    0x10005ff6
10005f8c:	mov    ecx,DWORD PTR [esi+0x8]
10005f8f:	cmp    BYTE PTR [ecx+0x44],0x0
10005f93:	jne    0x10005fa8
10005f95:	mov    BYTE PTR [ecx+0x44],0x1
10005f99:	push   edi
10005f9a:	mov    ecx,esi
10005f9c:	mov    BYTE PTR [esi+0x44],0x0
10005fa0:	call   0x10005b58
10005fa5:	mov    ecx,DWORD PTR [esi+0x8]
10005fa8:	cmp    BYTE PTR [ecx+0x45],0x0
10005fac:	jne    0x10006029
10005fae:	mov    eax,DWORD PTR [ecx]
10005fb0:	cmp    BYTE PTR [eax+0x44],0x1
10005fb4:	jne    0x10005fbf
10005fb6:	mov    eax,DWORD PTR [ecx+0x8]
10005fb9:	cmp    BYTE PTR [eax+0x44],0x1
10005fbd:	je     0x10006025
10005fbf:	mov    eax,DWORD PTR [ecx+0x8]
10005fc2:	cmp    BYTE PTR [eax+0x44],0x1
10005fc6:	jne    0x10005fdb
10005fc8:	mov    eax,DWORD PTR [ecx]
10005fca:	mov    BYTE PTR [eax+0x44],0x1
10005fce:	push   edi
10005fcf:	mov    BYTE PTR [ecx+0x44],0x0
10005fd3:	call   0x10005d83
10005fd8:	mov    ecx,DWORD PTR [esi+0x8]
10005fdb:	mov    al,BYTE PTR [esi+0x44]
10005fde:	mov    BYTE PTR [ecx+0x44],al
10005fe1:	mov    BYTE PTR [esi+0x44],0x1
10005fe5:	mov    eax,DWORD PTR [ecx+0x8]
10005fe8:	push   edi
10005fe9:	mov    ecx,esi
10005feb:	mov    BYTE PTR [eax+0x44],0x1
10005fef:	call   0x10005b58
10005ff4:	jmp    0x10006071
10005ff6:	cmp    BYTE PTR [ecx+0x44],0x0
10005ffa:	jne    0x1000600e
10005ffc:	mov    BYTE PTR [ecx+0x44],0x1
10006000:	push   edi
10006001:	mov    ecx,esi
10006003:	mov    BYTE PTR [esi+0x44],0x0
10006007:	call   0x10005d83
1000600c:	mov    ecx,DWORD PTR [esi]
1000600e:	cmp    BYTE PTR [ecx+0x45],0x0
10006012:	jne    0x10006029
10006014:	mov    eax,DWORD PTR [ecx+0x8]
10006017:	cmp    BYTE PTR [eax+0x44],0x1
1000601b:	jne    0x1000603e
1000601d:	mov    eax,DWORD PTR [ecx]
1000601f:	cmp    BYTE PTR [eax+0x44],0x1
10006023:	jne    0x1000603e
10006025:	mov    BYTE PTR [ecx+0x44],0x0
10006029:	mov    eax,ds:0x10080c30
1000602e:	mov    ebx,esi
10006030:	cmp    ebx,DWORD PTR [eax+0x4]
10006033:	mov    esi,DWORD PTR [esi+0x4]
10006036:	jne    0x10005f7c
1000603c:	jmp    0x10006071
1000603e:	mov    eax,DWORD PTR [ecx]
10006040:	cmp    BYTE PTR [eax+0x44],0x1
10006044:	jne    0x10006059
10006046:	mov    eax,DWORD PTR [ecx+0x8]
10006049:	mov    BYTE PTR [eax+0x44],0x1
1000604d:	push   edi
1000604e:	mov    BYTE PTR [ecx+0x44],0x0
10006052:	call   0x10005b58
10006057:	mov    ecx,DWORD PTR [esi]
10006059:	mov    al,BYTE PTR [esi+0x44]
1000605c:	mov    BYTE PTR [ecx+0x44],al
1000605f:	mov    BYTE PTR [esi+0x44],0x1
10006063:	mov    eax,DWORD PTR [ecx]
10006065:	push   edi
10006066:	mov    ecx,esi
10006068:	mov    BYTE PTR [eax+0x44],0x1
1000606c:	call   0x10005d83
10006071:	mov    edi,DWORD PTR [ebp-0x10]
10006074:	mov    BYTE PTR [ebx+0x44],0x1
10006078:	xor    ebx,ebx
1000607a:	push   ebx
1000607b:	lea    esi,[edi+0xc]
1000607e:	push   0x1
10006080:	lea    ecx,[esi+0x1c]
10006083:	call   0x100012eb
10006088:	push   ebx
10006089:	push   0x1
1000608b:	mov    ecx,esi
1000608d:	call   0x100012eb
10006092:	push   edi
10006093:	call   0x10042f82
10006098:	cmp    DWORD PTR ds:0x10080c34,ebx
1000609e:	pop    ecx
1000609f:	jbe    0x100060a7
100060a1:	dec    DWORD PTR ds:0x10080c34
100060a7:	mov    ecx,DWORD PTR [ebp+0xc]
100060aa:	mov    eax,DWORD PTR [ebp+0x8]
100060ad:	mov    DWORD PTR [eax],ecx
100060af:	mov    ecx,DWORD PTR [ebp+0x10]
100060b2:	mov    DWORD PTR [eax+0x4],ecx
100060b5:	call   0x10059bfd
100060ba:	ret    0xc
100060bd:	push   0x48
100060bf:	call   0x1004358e
100060c4:	xor    edx,edx
100060c6:	cmp    eax,edx
100060c8:	pop    ecx
100060c9:	je     0x100060cd
100060cb:	mov    DWORD PTR [eax],edx
100060cd:	lea    ecx,[eax+0x4]
100060d0:	cmp    ecx,edx
100060d2:	je     0x100060d6
100060d4:	mov    DWORD PTR [ecx],edx
100060d6:	lea    ecx,[eax+0x8]
100060d9:	cmp    ecx,edx
100060db:	je     0x100060df
100060dd:	mov    DWORD PTR [ecx],edx
100060df:	mov    BYTE PTR [eax+0x44],0x1
100060e3:	mov    BYTE PTR [eax+0x45],dl
100060e6:	ret    
100060e7:	push   ebp
100060e8:	mov    ebp,esp
100060ea:	sub    esp,0x10
100060ed:	test   ecx,ecx
100060ef:	ja     0x100060ff
100060f1:	xor    ecx,ecx
100060f3:	lea    eax,[ecx+ecx*1]
100060f6:	push   eax
100060f7:	call   0x1004358e
100060fc:	pop    ecx
100060fd:	leave  
100060fe:	ret    
100060ff:	or     eax,0xffffffff
10006102:	xor    edx,edx
10006104:	div    ecx
10006106:	cmp    eax,0x2
10006109:	jae    0x100060f3
1000610b:	and    DWORD PTR [ebp-0x4],0x0
1000610f:	lea    eax,[ebp-0x4]
10006112:	push   eax
10006113:	lea    ecx,[ebp-0x10]
10006116:	call   0x10043002
1000611b:	push   0x10074e20
10006120:	lea    eax,[ebp-0x10]
10006123:	push   eax
10006124:	mov    DWORD PTR [ebp-0x10],0x100665c8
1000612b:	call   0x10047aa4
10006130:	int3   
10006131:	push   0x48
10006133:	mov    eax,0x100621c0
10006138:	call   0x10059b25
1000613d:	mov    edi,DWORD PTR [ebp+0x10]
10006140:	cmp    BYTE PTR [edi+0x45],0x0
10006144:	je     0x10006178
10006146:	push   0x1006ccec
1000614b:	lea    ecx,[ebp-0x2c]
1000614e:	call   0x100011c8
10006153:	and    DWORD PTR [ebp-0x4],0x0
10006157:	lea    eax,[ebp-0x2c]
1000615a:	push   eax
1000615b:	lea    ecx,[ebp-0x54]
1000615e:	call   0x10001065
10006163:	push   0x10074de8
10006168:	lea    eax,[ebp-0x54]
1000616b:	push   eax
1000616c:	mov    DWORD PTR [ebp-0x54],0x1006b978
10006173:	call   0x10047aa4
10006178:	lea    esi,[ebp+0xc]
1000617b:	mov    DWORD PTR [ebp-0x10],edi
1000617e:	call   0x1000570b
10006183:	mov    ecx,DWORD PTR [edi]
10006185:	cmp    BYTE PTR [ecx+0x45],0x0
10006189:	je     0x10006190
1000618b:	mov    ebx,DWORD PTR [edi+0x8]
1000618e:	jmp    0x100061a7
10006190:	mov    eax,DWORD PTR [edi+0x8]
10006193:	cmp    BYTE PTR [eax+0x45],0x0
10006197:	je     0x1000619d
10006199:	mov    ebx,ecx
1000619b:	jmp    0x100061a7
1000619d:	mov    eax,DWORD PTR [ebp+0x10]
100061a0:	cmp    eax,edi
100061a2:	mov    ebx,DWORD PTR [eax+0x8]
100061a5:	jne    0x1000621f
100061a7:	cmp    BYTE PTR [ebx+0x45],0x0
100061ab:	mov    esi,DWORD PTR [edi+0x4]
100061ae:	jne    0x100061b3
100061b0:	mov    DWORD PTR [ebx+0x4],esi
100061b3:	mov    eax,ds:0x10080c24
100061b8:	cmp    DWORD PTR [eax+0x4],edi
100061bb:	jne    0x100061c2
100061bd:	mov    DWORD PTR [eax+0x4],ebx
100061c0:	jmp    0x100061cd
100061c2:	cmp    DWORD PTR [esi],edi
100061c4:	jne    0x100061ca
100061c6:	mov    DWORD PTR [esi],ebx
100061c8:	jmp    0x100061cd
100061ca:	mov    DWORD PTR [esi+0x8],ebx
100061cd:	mov    edx,DWORD PTR ds:0x10080c24
100061d3:	cmp    DWORD PTR [edx],edi
100061d5:	jne    0x100061f3
100061d7:	cmp    BYTE PTR [ebx+0x45],0x0
100061db:	je     0x100061e1
100061dd:	mov    ecx,esi
100061df:	jmp    0x100061f1
100061e1:	mov    eax,DWORD PTR [ebx]
100061e3:	mov    ecx,ebx
100061e5:	jmp    0x100061eb
100061e7:	mov    ecx,eax
100061e9:	mov    eax,DWORD PTR [ecx]
100061eb:	cmp    BYTE PTR [eax+0x45],0x0
100061ef:	je     0x100061e7
100061f1:	mov    DWORD PTR [edx],ecx
100061f3:	mov    edx,DWORD PTR ds:0x10080c24
100061f9:	cmp    DWORD PTR [edx+0x8],edi
100061fc:	jne    0x10006279
100061fe:	cmp    BYTE PTR [ebx+0x45],0x0
10006202:	je     0x10006208
10006204:	mov    ecx,esi
10006206:	jmp    0x1000621a
10006208:	mov    eax,DWORD PTR [ebx+0x8]
1000620b:	mov    ecx,ebx
1000620d:	jmp    0x10006214
1000620f:	mov    ecx,eax
10006211:	mov    eax,DWORD PTR [ecx+0x8]
10006214:	cmp    BYTE PTR [eax+0x45],0x0
10006218:	je     0x1000620f
1000621a:	mov    DWORD PTR [edx+0x8],ecx
1000621d:	jmp    0x10006279
1000621f:	mov    DWORD PTR [ecx+0x4],eax
10006222:	mov    ecx,DWORD PTR [edi]
10006224:	mov    DWORD PTR [eax],ecx
10006226:	cmp    eax,DWORD PTR [edi+0x8]
10006229:	jne    0x1000622f
1000622b:	mov    esi,eax
1000622d:	jmp    0x10006249
1000622f:	cmp    BYTE PTR [ebx+0x45],0x0
10006233:	mov    esi,DWORD PTR [eax+0x4]
10006236:	jne    0x1000623b
10006238:	mov    DWORD PTR [ebx+0x4],esi
1000623b:	mov    DWORD PTR [esi],ebx
1000623d:	mov    ecx,DWORD PTR [edi+0x8]
10006240:	mov    DWORD PTR [eax+0x8],ecx
10006243:	mov    ecx,DWORD PTR [edi+0x8]
10006246:	mov    DWORD PTR [ecx+0x4],eax
10006249:	mov    ecx,DWORD PTR ds:0x10080c24
1000624f:	cmp    DWORD PTR [ecx+0x4],edi
10006252:	jne    0x10006259
10006254:	mov    DWORD PTR [ecx+0x4],eax
10006257:	jmp    0x10006267
10006259:	mov    ecx,DWORD PTR [edi+0x4]
1000625c:	cmp    DWORD PTR [ecx],edi
1000625e:	jne    0x10006264
10006260:	mov    DWORD PTR [ecx],eax
10006262:	jmp    0x10006267
10006264:	mov    DWORD PTR [ecx+0x8],eax
10006267:	mov    ecx,DWORD PTR [edi+0x4]
1000626a:	mov    DWORD PTR [eax+0x4],ecx
1000626d:	mov    dl,BYTE PTR [edi+0x44]
10006270:	mov    cl,BYTE PTR [eax+0x44]
10006273:	mov    BYTE PTR [eax+0x44],dl
10006276:	mov    BYTE PTR [edi+0x44],cl
10006279:	cmp    BYTE PTR [edi+0x44],0x1
1000627d:	jne    0x10006392
10006283:	mov    eax,ds:0x10080c24
10006288:	cmp    ebx,DWORD PTR [eax+0x4]
1000628b:	je     0x1000638e
10006291:	mov    edi,0x10080c20
10006296:	cmp    BYTE PTR [ebx+0x44],0x1
1000629a:	jne    0x1000638b
100062a0:	mov    ecx,DWORD PTR [esi]
100062a2:	cmp    ebx,ecx
100062a4:	jne    0x10006310
100062a6:	mov    ecx,DWORD PTR [esi+0x8]
100062a9:	cmp    BYTE PTR [ecx+0x44],0x0
100062ad:	jne    0x100062c2
100062af:	mov    BYTE PTR [ecx+0x44],0x1
100062b3:	push   edi
100062b4:	mov    ecx,esi
100062b6:	mov    BYTE PTR [esi+0x44],0x0
100062ba:	call   0x10005b58
100062bf:	mov    ecx,DWORD PTR [esi+0x8]
100062c2:	cmp    BYTE PTR [ecx+0x45],0x0
100062c6:	jne    0x10006343
100062c8:	mov    eax,DWORD PTR [ecx]
100062ca:	cmp    BYTE PTR [eax+0x44],0x1
100062ce:	jne    0x100062d9
100062d0:	mov    eax,DWORD PTR [ecx+0x8]
100062d3:	cmp    BYTE PTR [eax+0x44],0x1
100062d7:	je     0x1000633f
100062d9:	mov    eax,DWORD PTR [ecx+0x8]
100062dc:	cmp    BYTE PTR [eax+0x44],0x1
100062e0:	jne    0x100062f5
100062e2:	mov    eax,DWORD PTR [ecx]
100062e4:	mov    BYTE PTR [eax+0x44],0x1
100062e8:	push   edi
100062e9:	mov    BYTE PTR [ecx+0x44],0x0
100062ed:	call   0x10005d83
100062f2:	mov    ecx,DWORD PTR [esi+0x8]
100062f5:	mov    al,BYTE PTR [esi+0x44]
100062f8:	mov    BYTE PTR [ecx+0x44],al
100062fb:	mov    BYTE PTR [esi+0x44],0x1
100062ff:	mov    eax,DWORD PTR [ecx+0x8]
10006302:	push   edi
10006303:	mov    ecx,esi
10006305:	mov    BYTE PTR [eax+0x44],0x1
10006309:	call   0x10005b58
1000630e:	jmp    0x1000638b
10006310:	cmp    BYTE PTR [ecx+0x44],0x0
10006314:	jne    0x10006328
10006316:	mov    BYTE PTR [ecx+0x44],0x1
1000631a:	push   edi
1000631b:	mov    ecx,esi
1000631d:	mov    BYTE PTR [esi+0x44],0x0
10006321:	call   0x10005d83
10006326:	mov    ecx,DWORD PTR [esi]
10006328:	cmp    BYTE PTR [ecx+0x45],0x0
1000632c:	jne    0x10006343
1000632e:	mov    eax,DWORD PTR [ecx+0x8]
10006331:	cmp    BYTE PTR [eax+0x44],0x1
10006335:	jne    0x10006358
10006337:	mov    eax,DWORD PTR [ecx]
10006339:	cmp    BYTE PTR [eax+0x44],0x1
1000633d:	jne    0x10006358
1000633f:	mov    BYTE PTR [ecx+0x44],0x0
10006343:	mov    eax,ds:0x10080c24
10006348:	mov    ebx,esi
1000634a:	cmp    ebx,DWORD PTR [eax+0x4]
1000634d:	mov    esi,DWORD PTR [esi+0x4]
10006350:	jne    0x10006296
10006356:	jmp    0x1000638b
10006358:	mov    eax,DWORD PTR [ecx]
1000635a:	cmp    BYTE PTR [eax+0x44],0x1
1000635e:	jne    0x10006373
10006360:	mov    eax,DWORD PTR [ecx+0x8]
10006363:	mov    BYTE PTR [eax+0x44],0x1
10006367:	push   edi
10006368:	mov    BYTE PTR [ecx+0x44],0x0
1000636c:	call   0x10005b58
10006371:	mov    ecx,DWORD PTR [esi]
10006373:	mov    al,BYTE PTR [esi+0x44]
10006376:	mov    BYTE PTR [ecx+0x44],al
10006379:	mov    BYTE PTR [esi+0x44],0x1
1000637d:	mov    eax,DWORD PTR [ecx]
1000637f:	push   edi
10006380:	mov    ecx,esi
10006382:	mov    BYTE PTR [eax+0x44],0x1
10006386:	call   0x10005d83
1000638b:	mov    edi,DWORD PTR [ebp-0x10]
1000638e:	mov    BYTE PTR [ebx+0x44],0x1
10006392:	add    edi,0xc
10006395:	call   0x10004cc7
1000639a:	push   DWORD PTR [ebp-0x10]
1000639d:	call   0x10042f82
100063a2:	cmp    DWORD PTR ds:0x10080c28,0x0
100063a9:	pop    ecx
100063aa:	jbe    0x100063b2
100063ac:	dec    DWORD PTR ds:0x10080c28
100063b2:	mov    ecx,DWORD PTR [ebp+0xc]
100063b5:	mov    eax,DWORD PTR [ebp+0x8]
100063b8:	mov    DWORD PTR [eax],ecx
100063ba:	mov    ecx,DWORD PTR [ebp+0x10]
100063bd:	mov    DWORD PTR [eax+0x4],ecx
100063c0:	call   0x10059bfd
100063c5:	ret    0xc
100063c8:	push   0x0
100063ca:	mov    eax,0x1006214a
100063cf:	call   0x10059b25
100063d4:	mov    ebx,ecx
100063d6:	mov    eax,DWORD PTR [ebp+0x8]
100063d9:	mov    DWORD PTR [esi],eax
100063db:	mov    eax,DWORD PTR [ebp+0xc]
100063de:	mov    DWORD PTR [esi+0x4],eax
100063e1:	mov    eax,DWORD PTR [ebp+0x10]
100063e4:	lea    edi,[esi+0xc]
100063e7:	push   ebx
100063e8:	mov    ecx,edi
100063ea:	mov    DWORD PTR [esi+0x8],eax
100063ed:	mov    DWORD PTR [ebp+0x8],edi
100063f0:	call   0x100011a2
100063f5:	and    DWORD PTR [ebp-0x4],0x0
100063f9:	add    ebx,0x1c
100063fc:	push   ebx
100063fd:	lea    ecx,[edi+0x1c]
10006400:	call   0x100011a2
10006405:	mov    BYTE PTR [esi+0x44],0x0
10006409:	mov    BYTE PTR [esi+0x45],0x0
1000640d:	mov    eax,esi
1000640f:	call   0x10059bfd
10006414:	ret    0xc
10006417:	push   0x0
10006419:	mov    eax,0x10060633
1000641e:	call   0x10059b25
10006423:	mov    eax,DWORD PTR [ebp+0x8]
10006426:	mov    DWORD PTR [edi],eax
10006428:	mov    eax,DWORD PTR [ebp+0xc]
1000642b:	mov    DWORD PTR [edi+0x4],eax
1000642e:	mov    eax,DWORD PTR [ebp+0x10]
10006431:	mov    DWORD PTR [edi+0x8],eax
10006434:	lea    esi,[edi+0xc]
10006437:	mov    eax,ebx
10006439:	mov    DWORD PTR [ebp+0x8],esi
1000643c:	call   0x10004b4a
10006441:	and    DWORD PTR [ebp-0x4],0x0
10006445:	lea    eax,[ebx+0x1c]
10006448:	add    esi,0x1c
1000644b:	call   0x10004b4a
10006450:	mov    BYTE PTR [edi+0x44],0x0
10006454:	mov    BYTE PTR [edi+0x45],0x0
10006458:	mov    eax,edi
1000645a:	call   0x10059bfd
1000645f:	ret    0xc
10006462:	push   ebp
10006463:	mov    ebp,esp
10006465:	push   ecx
10006466:	push   esi
10006467:	push   edi
10006468:	mov    edi,DWORD PTR [ebp+0x8]
1000646b:	cmp    BYTE PTR [edi+0x45],0x0
1000646f:	mov    DWORD PTR [ebp-0x4],ecx
10006472:	mov    esi,edi
10006474:	jne    0x100064ae
10006476:	push   ebx
10006477:	push   DWORD PTR [esi+0x8]
1000647a:	mov    ecx,DWORD PTR [ebp-0x4]
1000647d:	call   0x10006462
10006482:	mov    esi,DWORD PTR [esi]
10006484:	push   0x0
10006486:	lea    ebx,[edi+0xc]
10006489:	push   0x1
1000648b:	lea    ecx,[ebx+0x1c]
1000648e:	call   0x100012eb
10006493:	push   0x0
10006495:	push   0x1
10006497:	mov    ecx,ebx
10006499:	call   0x100012eb
1000649e:	push   edi
1000649f:	call   0x10042f82
100064a4:	cmp    BYTE PTR [esi+0x45],0x0
100064a8:	pop    ecx
100064a9:	mov    edi,esi
100064ab:	je     0x10006477
100064ad:	pop    ebx
100064ae:	pop    edi
100064af:	pop    esi
100064b0:	leave  
100064b1:	ret    0x4
100064b4:	push   ebx
100064b5:	mov    ebx,DWORD PTR [esp+0x8]
100064b9:	cmp    BYTE PTR [ebx+0x45],0x0
100064bd:	push   ebp
100064be:	push   esi
100064bf:	mov    ebp,ecx
100064c1:	mov    esi,ebx
100064c3:	jne    0x100064ea
100064c5:	push   edi
100064c6:	push   DWORD PTR [esi+0x8]
100064c9:	mov    ecx,ebp
100064cb:	call   0x100064b4
100064d0:	mov    esi,DWORD PTR [esi]
100064d2:	lea    edi,[ebx+0xc]
100064d5:	call   0x10004cc7
100064da:	push   ebx
100064db:	call   0x10042f82
100064e0:	cmp    BYTE PTR [esi+0x45],0x0
100064e4:	pop    ecx
100064e5:	mov    ebx,esi
100064e7:	je     0x100064c6
100064e9:	pop    edi
100064ea:	pop    esi
100064eb:	pop    ebp
100064ec:	pop    ebx
100064ed:	ret    0x4
100064f0:	push   ebx
100064f1:	mov    ebx,DWORD PTR [esp+0x8]
100064f5:	test   ebx,ebx
100064f7:	push   esi
100064f8:	mov    esi,eax
100064fa:	jne    0x10006506
100064fc:	push   0x80070057
10006501:	call   0x10001f33
10006506:	push   edi
10006507:	lea    eax,[esp+0x14]
1000650b:	push   eax
1000650c:	push   ebx
1000650d:	call   0x100437f9
10006512:	pop    ecx
10006513:	pop    ecx
10006514:	mov    edi,eax
10006516:	push   edi
10006517:	call   0x100021a4
1000651c:	lea    ecx,[esp+0x14]
10006520:	push   ecx
10006521:	push   ebx
10006522:	lea    ecx,[edi+0x1]
10006525:	push   ecx
10006526:	push   eax
10006527:	call   0x10045013
1000652c:	add    esp,0x10
1000652f:	mov    eax,edi
10006531:	pop    edi
10006532:	mov    edx,esi
10006534:	pop    esi
10006535:	pop    ebx
10006536:	jmp    0x1000222f
1000653b:	push   0x20
1000653d:	mov    eax,0x10060610
10006542:	call   0x10059b25
10006547:	push   DWORD PTR [ebp+0xc]
1000654a:	and    DWORD PTR [ebp-0x10],0x0
1000654e:	lea    ecx,[ebp-0x2c]
10006551:	call   0x100011a2
10006556:	push   DWORD PTR [ebp+0x10]
10006559:	and    DWORD PTR [ebp-0x4],0x0
1000655d:	push   eax
1000655e:	call   0x10004107
10006563:	mov    ecx,DWORD PTR [ebp+0x8]
10006566:	push   eax
10006567:	call   0x100011a2
1000656c:	push   0x0
1000656e:	push   0x1
10006570:	lea    ecx,[ebp-0x2c]
10006573:	call   0x100012eb
10006578:	mov    eax,DWORD PTR [ebp+0x8]
1000657b:	call   0x10059bfd
10006580:	ret    
10006581:	push   0x20
10006583:	mov    eax,0x10060610
10006588:	call   0x10059b25
1000658d:	push   DWORD PTR [ebp+0xc]
10006590:	and    DWORD PTR [ebp-0x10],0x0
10006594:	lea    ecx,[ebp-0x2c]
10006597:	call   0x100011a2
1000659c:	mov    esi,eax
1000659e:	mov    eax,DWORD PTR [ebp+0x10]
100065a1:	and    DWORD PTR [ebp-0x4],0x0
100065a5:	push   0xffffffff
100065a7:	push   0x0
100065a9:	call   0x10004ce1
100065ae:	mov    ecx,DWORD PTR [ebp+0x8]
100065b1:	push   eax
100065b2:	call   0x100011a2
100065b7:	push   0x0
100065b9:	push   0x1
100065bb:	lea    ecx,[ebp-0x2c]
100065be:	call   0x100012eb
100065c3:	mov    eax,DWORD PTR [ebp+0x8]
100065c6:	call   0x10059bfd
100065cb:	ret    
100065cc:	push   0x20
100065ce:	mov    eax,0x10060610
100065d3:	call   0x10059b25
100065d8:	push   DWORD PTR [ebp+0xc]
100065db:	and    DWORD PTR [ebp-0x10],0x0
100065df:	lea    ecx,[ebp-0x2c]
100065e2:	call   0x100011c8
100065e7:	mov    esi,eax
100065e9:	mov    eax,DWORD PTR [ebp+0x10]
100065ec:	and    DWORD PTR [ebp-0x4],0x0
100065f0:	push   0xffffffff
100065f2:	push   0x0
100065f4:	call   0x10004ce1
100065f9:	mov    ecx,DWORD PTR [ebp+0x8]
100065fc:	push   eax
100065fd:	call   0x100011a2
10006602:	push   0x0
10006604:	push   0x1
10006606:	lea    ecx,[ebp-0x2c]
10006609:	call   0x100012eb
1000660e:	mov    eax,DWORD PTR [ebp+0x8]
10006611:	call   0x10059bfd
10006616:	ret    
10006617:	cmp    DWORD PTR [ecx+0x18],0x10
1000661b:	push   edi
1000661c:	mov    edi,DWORD PTR [ecx+0x14]
1000661f:	jb     0x10006626
10006621:	mov    ecx,DWORD PTR [ecx+0x4]
10006624:	jmp    0x10006629
10006626:	add    ecx,0x4
10006629:	push   ecx
1000662a:	mov    ecx,DWORD PTR [eax+0x14]
1000662d:	call   0x100046bc
10006632:	neg    eax
10006634:	sbb    eax,eax
10006636:	inc    eax
10006637:	pop    edi
10006638:	ret    
10006639:	push   edi
1000663a:	push   DWORD PTR [esp+0x8]
1000663e:	call   0x10043100
10006643:	pop    ecx
10006644:	push   DWORD PTR [esp+0x8]
10006648:	mov    ecx,DWORD PTR [esi+0x14]
1000664b:	mov    edi,eax
1000664d:	mov    eax,esi
1000664f:	call   0x100046bc
10006654:	neg    eax
10006656:	sbb    eax,eax
10006658:	inc    eax
10006659:	pop    edi
1000665a:	ret    
1000665b:	add    eax,eax
1000665d:	push   eax
1000665e:	push   DWORD PTR [esp+0x10]
10006662:	mov    eax,DWORD PTR [esp+0x10]
10006666:	add    eax,eax
10006668:	push   eax
10006669:	push   DWORD PTR [esp+0x10]
1000666d:	call   0x100434b5
10006672:	mov    eax,DWORD PTR [esp+0x14]
10006676:	add    esp,0x10
10006679:	ret    
1000667a:	push   ebp
1000667b:	mov    ebp,esp
1000667d:	push   ecx
1000667e:	push   edi
1000667f:	xor    eax,eax
10006681:	lea    edi,[ebp-0x4]
10006684:	stos   BYTE PTR es:[edi],al
10006685:	push   DWORD PTR [ebp-0x4]
10006688:	push   DWORD PTR [ebp+0xc]
1000668b:	push   DWORD PTR [ebp+0xc]
1000668e:	push   DWORD PTR [ebp+0x8]
10006691:	call   0x1000674f
10006696:	add    esp,0x10
10006699:	pop    edi
1000669a:	leave  
1000669b:	ret    0x8
1000669e:	push   esi
1000669f:	mov    esi,ecx
100066a1:	mov    ecx,DWORD PTR [eax+0x14]
100066a4:	cmp    ecx,esi
100066a6:	jae    0x100066aa
100066a8:	mov    esi,ecx
100066aa:	cmp    esi,edi
100066ac:	mov    edx,esi
100066ae:	jb     0x100066b2
100066b0:	mov    edx,edi
100066b2:	cmp    DWORD PTR [eax+0x18],0x8
100066b6:	jb     0x100066bd
100066b8:	mov    eax,DWORD PTR [eax+0x4]
100066bb:	jmp    0x100066c0
100066bd:	add    eax,0x4
100066c0:	test   edx,edx
100066c2:	mov    ecx,DWORD PTR [esp+0x8]
100066c6:	push   ebx
100066c7:	jbe    0x100066d8
100066c9:	mov    bx,WORD PTR [eax]
100066cc:	cmp    bx,WORD PTR [ecx]
100066cf:	jne    0x100066e8
100066d1:	inc    eax
100066d2:	inc    eax
100066d3:	inc    ecx
100066d4:	inc    ecx
100066d5:	dec    edx
100066d6:	jne    0x100066c9
100066d8:	xor    eax,eax
100066da:	test   eax,eax
100066dc:	pop    ebx
100066dd:	jne    0x100066fd
100066df:	cmp    esi,edi
100066e1:	jae    0x100066f6
100066e3:	or     eax,0xffffffff
100066e6:	jmp    0x100066fd
100066e8:	movzx  eax,WORD PTR [eax]
100066eb:	cmp    ax,WORD PTR [ecx]
100066ee:	sbb    eax,eax
100066f0:	and    eax,0xfffffffe
100066f3:	inc    eax
100066f4:	jmp    0x100066da
100066f6:	xor    eax,eax
100066f8:	cmp    esi,edi
100066fa:	setne  al
100066fd:	pop    esi
100066fe:	ret    0x4
10006701:	push   0x0
10006703:	mov    eax,0x1005fa31
10006708:	call   0x10059b25
1000670d:	and    DWORD PTR [esp+0x18],0x0
10006712:	test   esi,esi
10006714:	je     0x10006724
10006716:	push   edi
10006717:	mov    ecx,esi
10006719:	call   0x100011a2
1000671e:	mov    eax,DWORD PTR [edi+0x1c]
10006721:	mov    DWORD PTR [esi+0x1c],eax
10006724:	call   0x10059bfd
10006729:	ret    
1000672a:	mov    ecx,DWORD PTR [esp+0x4]
1000672e:	push   0x0
10006730:	push   0x1
10006732:	call   0x100012eb
10006737:	test   BYTE PTR [esp+0x8],0x1
1000673c:	je     0x10006748
1000673e:	push   DWORD PTR [esp+0x4]
10006742:	call   0x10042f82
10006747:	pop    ecx
10006748:	mov    eax,DWORD PTR [esp+0x4]
1000674c:	ret    0x8
1000674f:	push   0x8
10006751:	mov    eax,0x1006121e
10006756:	call   0x10059b58
1000675b:	mov    esi,DWORD PTR [ebp+0xc]
1000675e:	mov    edi,ecx
10006760:	and    DWORD PTR [ebp-0x4],0x0
10006764:	mov    DWORD PTR [ebp-0x14],esi
10006767:	cmp    edi,DWORD PTR [ebp+0x8]
1000676a:	je     0x1000679b
1000676c:	call   0x10006701
10006771:	add    esi,0x20
10006774:	mov    DWORD PTR [ebp+0xc],esi
10006777:	add    edi,0x20
1000677a:	jmp    0x10006767
1000677c:	mov    esi,DWORD PTR [ebp-0x14]
1000677f:	jmp    0x1000678d
10006781:	push   0x1
10006783:	mov    ecx,esi
10006785:	call   0x100012eb
1000678a:	add    esi,0x20
1000678d:	cmp    esi,DWORD PTR [ebp+0xc]
10006790:	push   0x0
10006792:	jne    0x10006781
10006794:	push   0x0
10006796:	call   0x10047aa4
1000679b:	mov    eax,esi
1000679d:	call   0x10059bfd
100067a2:	ret    
100067a3:	call   DWORD PTR ds:0x100660cc
100067a9:	test   eax,eax
100067ab:	jle    0x100067b7
100067ad:	and    eax,0xffff
100067b2:	or     eax,0x80070000
100067b7:	ret    
100067b8:	push   ebp
100067b9:	mov    ebp,esp
100067bb:	push   0x0
100067bd:	push   DWORD PTR [ebp+0x1c]
100067c0:	push   DWORD PTR [ebp+0x18]
100067c3:	push   0x0
100067c5:	push   DWORD PTR [ebp+0x14]
100067c8:	push   DWORD PTR [ebp+0x10]
100067cb:	push   DWORD PTR [ebp+0xc]
100067ce:	call   DWORD PTR ds:0x100660c0
100067d4:	cmp    eax,0xffffffff
100067d7:	jne    0x100067e0
100067d9:	call   0x100067a3
100067de:	jmp    0x100067e7
100067e0:	mov    ecx,DWORD PTR [ebp+0x8]
100067e3:	mov    DWORD PTR [ecx],eax
100067e5:	xor    eax,eax
100067e7:	pop    ebp
100067e8:	ret    0x18
100067eb:	mov    eax,DWORD PTR [esi]
100067ed:	test   eax,eax
100067ef:	je     0x100067fb
100067f1:	push   eax
100067f2:	call   DWORD PTR ds:0x10066070
100067f8:	and    DWORD PTR [esi],0x0
100067fb:	ret    
100067fc:	push   DWORD PTR [ecx]
100067fe:	call   DWORD PTR ds:0x100662b4
10006804:	ret    
10006805:	push   0x254
1000680a:	mov    eax,0x10063e0f
1000680f:	call   0x10059b8e
10006814:	test   BYTE PTR ds:0x10081434,0x1
1000681b:	jne    0x10006b8d
10006821:	or     DWORD PTR ds:0x10081434,0x1
10006828:	and    DWORD PTR ds:0x10081428,0x0
1000682f:	push   0x10065816
10006834:	call   0x10043364
10006839:	pop    ecx
1000683a:	jmp    0x10006b8d
1000683f:	lea    eax,[ebp-0x218]
10006845:	push   eax
10006846:	mov    esi,0x100
1000684b:	push   esi
1000684c:	mov    BYTE PTR ds:0x10080c3e,0x1
10006853:	call   DWORD PTR ds:0x100660c8
10006859:	cmp    eax,esi
1000685b:	ja     0x10006c30
10006861:	lea    eax,[ebp-0x218]
10006867:	push   eax
10006868:	lea    eax,[ebp-0x21c]
1000686e:	push   eax
1000686f:	call   0x1000234f
10006874:	xor    ebx,ebx
10006876:	lea    eax,[ebp-0x21c]
1000687c:	mov    DWORD PTR [ebp-0x4],ebx
1000687f:	call   0x10006d24
10006884:	lea    edi,[ebp-0x260]
1000688a:	call   0x10033740
1000688f:	mov    BYTE PTR [ebp-0x4],0x1
10006893:	cmp    DWORD PTR [eax+0x18],0x10
10006897:	jb     0x1000689e
10006899:	mov    eax,DWORD PTR [eax+0x4]
1000689c:	jmp    0x100068a1
1000689e:	add    eax,0x4
100068a1:	push   eax
100068a2:	lea    eax,[ebp-0x21c]
100068a8:	push   eax
100068a9:	call   0x10006c49
100068ae:	push   ebx
100068af:	push   0x1
100068b1:	lea    ecx,[ebp-0x260]
100068b7:	mov    BYTE PTR [ebp-0x4],0x0
100068bb:	call   0x100012eb
100068c0:	push   0x33b1ac8e
100068c5:	push   0x1006d160
100068ca:	call   0x100042bd
100068cf:	push   0x293dd01c
100068d4:	push   eax
100068d5:	call   0x100042bd
100068da:	push   eax
100068db:	push   0x4
100068dd:	push   0x1006d19c
100068e2:	call   0x100042cf
100068e7:	add    esp,0x1c
100068ea:	push   eax
100068eb:	lea    eax,[ebp-0x21c]
100068f1:	push   eax
100068f2:	call   0x10006c49
100068f7:	mov    DWORD PTR [ebp-0x220],ebx
100068fd:	push   ebx
100068fe:	push   0x4
10006900:	push   0x7
10006902:	push   0xc0000000
10006907:	lea    esi,[ebp-0x21c]
1000690d:	mov    BYTE PTR [ebp-0x4],0x2
10006911:	call   0x100041ef
10006916:	push   eax
10006917:	lea    eax,[ebp-0x220]
1000691d:	push   eax
1000691e:	call   0x100067b8
10006923:	test   eax,eax
10006925:	je     0x10006a62
1000692b:	call   DWORD PTR ds:0x100660cc
10006931:	cmp    eax,0x20
10006934:	jne    0x10006c0a
1000693a:	push   ebx
1000693b:	push   0x4
1000693d:	push   0x7
1000693f:	push   0x80000000
10006944:	call   0x100041ef
10006949:	push   eax
1000694a:	lea    eax,[ebp-0x220]
10006950:	push   eax
10006951:	call   0x100067b8
10006956:	test   eax,eax
10006958:	jne    0x10006c0a
1000695e:	mov    eax,ds:0x10080d34
10006963:	push   0xa
10006965:	push   0x12c
1000696a:	push   eax
1000696b:	mov    ebx,eax
1000696d:	call   DWORD PTR ds:0x1006607c
10006973:	test   eax,eax
10006975:	je     0x10006b9f
1000697b:	lea    ecx,[ebp-0x234]
10006981:	push   ecx
10006982:	mov    edi,eax
10006984:	call   0x10033800
10006989:	test   eax,eax
1000698b:	pop    ecx
1000698c:	je     0x10006b9f
10006992:	xor    edi,edi
10006994:	push   edi
10006995:	push   DWORD PTR ds:0x10080db8
1000699b:	lea    edx,[ebp-0x225]
100069a1:	push   DWORD PTR [ebp-0x234]
100069a7:	lea    ecx,[ebp-0x224]
100069ad:	push   eax
100069ae:	lea    eax,[ebp-0x238]
100069b4:	push   eax
100069b5:	mov    DWORD PTR [ebp-0x224],edi
100069bb:	call   0x10039830
100069c0:	mov    ecx,DWORD PTR [eax]
100069c2:	mov    esi,ecx
100069c4:	add    esp,0x14
100069c7:	mov    DWORD PTR [eax],edi
100069c9:	mov    DWORD PTR [ebp-0x230],esi
100069cf:	mov    BYTE PTR [ebp-0x4],0x3
100069d3:	push   DWORD PTR [ebp-0x238]
100069d9:	call   0x10042f82
100069de:	mov    ebx,DWORD PTR [ebp-0x224]
100069e4:	cmp    ebx,edi
100069e6:	pop    ecx
100069e7:	je     0x10006bcc
100069ed:	cmp    esi,edi
100069ef:	je     0x10006bcc
100069f5:	lea    edi,[ebx+0x1]
100069f8:	push   edi
100069f9:	call   0x10043811
100069fe:	and    DWORD PTR [ebp-0x22c],0x0
10006a05:	pop    ecx
10006a06:	push   0x0
10006a08:	lea    ecx,[ebp-0x22c]
10006a0e:	push   ecx
10006a0f:	push   edi
10006a10:	mov    edi,DWORD PTR [ebp-0x220]
10006a16:	push   eax
10006a17:	push   edi
10006a18:	mov    DWORD PTR [ebp-0x224],eax
10006a1e:	call   DWORD PTR ds:0x100660d4
10006a24:	test   eax,eax
10006a26:	jne    0x10006a2d
10006a28:	call   0x100067a3
10006a2d:	cmp    DWORD PTR [ebp-0x22c],ebx
10006a33:	jne    0x10006bad
10006a39:	push   ebx
10006a3a:	push   esi
10006a3b:	push   DWORD PTR [ebp-0x224]
10006a41:	call   0x10043816
10006a46:	add    esp,0xc
10006a49:	test   eax,eax
10006a4b:	jne    0x10006bad
10006a51:	push   DWORD PTR [ebp-0x224]
10006a57:	call   0x10042f82
10006a5c:	pop    ecx
10006a5d:	jmp    0x10006b4c
10006a62:	mov    eax,ds:0x10080d34
10006a67:	push   0xa
10006a69:	push   0x12c
10006a6e:	push   eax
10006a6f:	mov    ebx,eax
10006a71:	call   DWORD PTR ds:0x1006607c
10006a77:	test   eax,eax
10006a79:	je     0x10006b9f
10006a7f:	lea    ecx,[ebp-0x240]
10006a85:	push   ecx
10006a86:	mov    edi,eax
10006a88:	call   0x10033800
10006a8d:	test   eax,eax
10006a8f:	pop    ecx
10006a90:	je     0x10006b9f
10006a96:	xor    ebx,ebx
10006a98:	push   ebx
10006a99:	push   DWORD PTR ds:0x10080db8
10006a9f:	lea    edx,[ebp-0x226]
10006aa5:	push   DWORD PTR [ebp-0x240]
10006aab:	lea    ecx,[ebp-0x224]
10006ab1:	push   eax
10006ab2:	lea    eax,[ebp-0x23c]
10006ab8:	push   eax
10006ab9:	mov    DWORD PTR [ebp-0x224],ebx
10006abf:	call   0x10039830
10006ac4:	mov    ecx,DWORD PTR [eax]
10006ac6:	add    esp,0x14
10006ac9:	mov    DWORD PTR [eax],ebx
10006acb:	push   DWORD PTR [ebp-0x23c]
10006ad1:	mov    esi,ecx
10006ad3:	call   0x10042f82
10006ad8:	cmp    DWORD PTR [ebp-0x224],ebx
10006ade:	pop    ecx
10006adf:	je     0x10006bfe
10006ae5:	cmp    esi,ebx
10006ae7:	je     0x10006bfe
10006aed:	mov    edi,DWORD PTR [ebp-0x220]
10006af3:	push   ebx
10006af4:	lea    eax,[ebp-0x244]
10006afa:	push   eax
10006afb:	push   DWORD PTR [ebp-0x224]
10006b01:	push   esi
10006b02:	push   edi
10006b03:	call   DWORD PTR ds:0x100660b4
10006b09:	cmp    eax,ebx
10006b0b:	jne    0x10006b14
10006b0d:	call   0x100067a3
10006b12:	jmp    0x10006b16
10006b14:	xor    eax,eax
10006b16:	cmp    eax,ebx
10006b18:	jl     0x10006be0
10006b1e:	mov    eax,DWORD PTR [ebp-0x224]
10006b24:	cmp    DWORD PTR [ebp-0x244],eax
10006b2a:	jne    0x10006bf7
10006b30:	push   edi
10006b31:	call   DWORD PTR ds:0x100660d8
10006b37:	test   eax,eax
10006b39:	jne    0x10006b42
10006b3b:	call   0x100067a3
10006b40:	jmp    0x10006b44
10006b42:	xor    eax,eax
10006b44:	cmp    eax,ebx
10006b46:	jl     0x10006bed
10006b4c:	push   esi
10006b4d:	call   0x10042f82
10006b52:	test   edi,edi
10006b54:	pop    ecx
10006b55:	mov    BYTE PTR [ebp-0x4],0x0
10006b59:	je     0x10006b62
10006b5b:	push   edi
10006b5c:	call   DWORD PTR ds:0x10066070
10006b62:	push   0x10081428
10006b67:	push   0x2
10006b69:	lea    esi,[ebp-0x21c]
10006b6f:	call   0x100041ef
10006b74:	push   eax
10006b75:	call   DWORD PTR ds:0x100662a4
10006b7b:	or     DWORD PTR [ebp-0x4],0xffffffff
10006b7f:	mov    eax,DWORD PTR [ebp-0x21c]
10006b85:	add    eax,0xfffffff0
10006b88:	call   0x1000206f
10006b8d:	cmp    BYTE PTR ds:0x10080c3e,0x0
10006b94:	je     0x1000683f
10006b9a:	jmp    0x10006c30
10006b9f:	call   0x1000206e
10006ba4:	cmp    DWORD PTR [ebp-0x220],0x0
10006bab:	jmp    0x10006c10
10006bad:	call   0x1000206e
10006bb2:	push   DWORD PTR [ebp-0x224]
10006bb8:	call   0x10042f82
10006bbd:	pop    ecx
10006bbe:	push   esi
10006bbf:	call   0x10042f82
10006bc4:	test   edi,edi
10006bc6:	pop    ecx
10006bc7:	je     0x10006c1e
10006bc9:	push   edi
10006bca:	jmp    0x10006c18
10006bcc:	call   0x1000206e
10006bd1:	push   esi
10006bd2:	call   0x10042f82
10006bd7:	cmp    DWORD PTR [ebp-0x220],edi
10006bdd:	pop    ecx
10006bde:	jmp    0x10006c10
10006be0:	call   DWORD PTR ds:0x100660cc
10006be6:	push   eax
10006be7:	call   0x1000206e
10006bec:	pop    ecx
10006bed:	push   esi
10006bee:	call   0x10042f82
10006bf3:	cmp    edi,ebx
10006bf5:	jmp    0x10006bc6
10006bf7:	call   0x1000206e
10006bfc:	jmp    0x10006bed
10006bfe:	call   0x1000206e
10006c03:	push   esi
10006c04:	call   0x10042f82
10006c09:	pop    ecx
10006c0a:	cmp    DWORD PTR [ebp-0x220],ebx
10006c10:	je     0x10006c1e
10006c12:	push   DWORD PTR [ebp-0x220]
10006c18:	call   DWORD PTR ds:0x10066070
10006c1e:	or     DWORD PTR [ebp-0x4],0xffffffff
10006c22:	mov    eax,DWORD PTR [ebp-0x21c]
10006c28:	add    eax,0xfffffff0
10006c2b:	call   0x1000206f
10006c30:	mov    eax,ds:0x10081428
10006c35:	test   eax,eax
10006c37:	mov    esi,eax
10006c39:	je     0x10006c41
10006c3b:	mov    ecx,DWORD PTR [eax]
10006c3d:	push   eax
10006c3e:	call   DWORD PTR [ecx+0x4]
10006c41:	mov    eax,esi
10006c43:	call   0x10059c11
10006c48:	ret    
10006c49:	push   0x4
10006c4b:	mov    eax,0x100628cd
10006c50:	call   0x10059b25
10006c55:	mov    eax,DWORD PTR [ebp+0x8]
10006c58:	call   0x10004704
10006c5d:	push   DWORD PTR [ebp+0xc]
10006c60:	lea    ecx,[ebp-0x10]
10006c63:	push   ecx
10006c64:	mov    ecx,eax
10006c66:	call   0x10006c91
10006c6b:	mov    ecx,DWORD PTR [ebp+0x8]
10006c6e:	and    DWORD PTR [ebp-0x4],0x0
10006c72:	lea    eax,[ebp-0x10]
10006c75:	call   0x10006cc9
10006c7a:	mov    esi,eax
10006c7c:	mov    eax,DWORD PTR [ebp-0x10]
10006c7f:	add    eax,0xfffffff0
10006c82:	call   0x1000206f
10006c87:	mov    eax,esi
10006c89:	call   0x10059bfd
10006c8e:	ret    0x8
10006c91:	push   0x0
10006c93:	mov    eax,0x10062492
10006c98:	call   0x10059b25
10006c9d:	mov    esi,DWORD PTR [ebp+0x8]
10006ca0:	call   0x10002149
10006ca5:	push   DWORD PTR [ebp+0xc]
10006ca8:	and    DWORD PTR [ebp-0x4],0x0
10006cac:	push   esi
10006cad:	call   0x10002114
10006cb2:	test   al,al
10006cb4:	jne    0x10006cbf
10006cb6:	push   DWORD PTR [ebp+0xc]
10006cb9:	push   esi
10006cba:	call   0x100020b0
10006cbf:	mov    eax,esi
10006cc1:	call   0x10059bfd
10006cc6:	ret    0x8
10006cc9:	push   ebp
10006cca:	mov    ebp,esp
10006ccc:	sub    esp,0xc
10006ccf:	mov    eax,DWORD PTR [eax]
10006cd1:	push   ebx
10006cd2:	push   esi
10006cd3:	push   edi
10006cd4:	mov    edi,eax
10006cd6:	mov    esi,ecx
10006cd8:	mov    ecx,DWORD PTR [eax-0xc]
10006cdb:	mov    eax,DWORD PTR [esi]
10006cdd:	mov    ebx,DWORD PTR [eax-0xc]
10006ce0:	mov    DWORD PTR [ebp-0x8],edi
10006ce3:	sub    edi,eax
10006ce5:	lea    eax,[ebx+ecx*1]
10006ce8:	push   eax
10006ce9:	mov    DWORD PTR [ebp-0x4],ecx
10006cec:	sar    edi,1
10006cee:	mov    DWORD PTR [ebp-0xc],eax
10006cf1:	call   0x100021a4
10006cf6:	cmp    edi,ebx
10006cf8:	lea    edi,[eax+edi*2]
10006cfb:	jbe    0x10006d00
10006cfd:	mov    edi,DWORD PTR [ebp-0x8]
10006d00:	push   edi
10006d01:	push   DWORD PTR [ebp-0x4]
10006d04:	lea    eax,[eax+ebx*2]
10006d07:	push   eax
10006d08:	mov    eax,DWORD PTR [ebp-0x4]
10006d0b:	call   0x10002329
10006d10:	mov    eax,DWORD PTR [ebp-0xc]
10006d13:	add    esp,0xc
10006d16:	mov    edx,esi
10006d18:	call   0x1000222f
10006d1d:	pop    edi
10006d1e:	mov    eax,esi
10006d20:	pop    esi
10006d21:	pop    ebx
10006d22:	leave  
10006d23:	ret    
10006d24:	push   ebx
10006d25:	push   esi
10006d26:	mov    esi,eax
10006d28:	mov    eax,DWORD PTR [esi]
10006d2a:	push   edi
10006d2b:	mov    edi,DWORD PTR [eax-0xc]
10006d2e:	lea    ebx,[edi+0x1]
10006d31:	push   ebx
10006d32:	call   0x100021a4
10006d37:	mov    WORD PTR [eax+edi*2],0x5c
10006d3d:	pop    edi
10006d3e:	mov    edx,esi
10006d40:	pop    esi
10006d41:	mov    eax,ebx
10006d43:	pop    ebx
10006d44:	jmp    0x1000222f
10006d49:	push   0x14
10006d4b:	push   0x10074f48
10006d50:	call   0x1005f4dc
10006d55:	mov    BYTE PTR [ebp-0x1d],0x1
10006d59:	xor    ebx,ebx
10006d5b:	mov    DWORD PTR [ebp-0x4],ebx
10006d5e:	mov    DWORD PTR [ebp-0x24],ebx
10006d61:	push   0x2000
10006d66:	push   DWORD PTR [ebp+0x8]
10006d69:	lea    eax,[ebp-0x24]
10006d6c:	push   eax
10006d6d:	call   0x10007759
10006d72:	add    esp,0xc
10006d75:	cmp    eax,ebx
10006d77:	jge    0x10006d7e
10006d79:	mov    BYTE PTR [ebp-0x1d],bl
10006d7c:	jmp    0x10006dab
10006d7e:	mov    eax,DWORD PTR [ebp-0x24]
10006d81:	call   0x1004b7e0
10006d86:	mov    DWORD PTR [ebp-0x18],esp
10006d89:	jmp    0x10006dab
10006d8b:	mov    eax,DWORD PTR [ebp-0x14]
10006d8e:	mov    eax,DWORD PTR [eax]
10006d90:	mov    eax,DWORD PTR [eax]
10006d92:	xor    ecx,ecx
10006d94:	cmp    eax,0xc00000fd
10006d99:	sete   cl
10006d9c:	mov    eax,ecx
10006d9e:	ret    
10006d9f:	mov    esp,DWORD PTR [ebp-0x18]
10006da2:	mov    BYTE PTR [ebp-0x1d],0x0
10006da6:	call   0x10045140
10006dab:	mov    DWORD PTR [ebp-0x4],0xfffffffe
10006db2:	mov    al,BYTE PTR [ebp-0x1d]
10006db5:	lea    esp,[ebp-0x34]
10006db8:	call   0x1005f524
10006dbd:	ret    
10006dbe:	xor    eax,eax
10006dc0:	cmp    esi,eax
10006dc2:	je     0x10006deb
10006dc4:	cmp    DWORD PTR [esp+0x4],eax
10006dc8:	je     0x10006deb
10006dca:	push   DWORD PTR [esp+0x8]
10006dce:	mov    WORD PTR [esi],ax
10006dd1:	push   esi
10006dd2:	push   0xffffffff
10006dd4:	push   DWORD PTR [esp+0x10]
10006dd8:	push   eax
10006dd9:	push   DWORD PTR [esp+0x20]
10006ddd:	call   DWORD PTR ds:0x1006608c
10006de3:	neg    eax
10006de5:	sbb    eax,eax
10006de7:	and    eax,esi
10006de9:	jmp    0x10006ded
10006deb:	xor    eax,eax
10006ded:	ret    0xc
10006df0:	mov    edx,DWORD PTR [ecx]
10006df2:	mov    eax,DWORD PTR [esp+0x4]
10006df6:	cmp    edx,DWORD PTR [eax]
10006df8:	jne    0x10006e17
10006dfa:	mov    edx,DWORD PTR [ecx+0x4]
10006dfd:	cmp    edx,DWORD PTR [eax+0x4]
10006e00:	jne    0x10006e17
10006e02:	mov    edx,DWORD PTR [ecx+0x8]
10006e05:	cmp    edx,DWORD PTR [eax+0x8]
10006e08:	jne    0x10006e17
10006e0a:	mov    ecx,DWORD PTR [ecx+0xc]
10006e0d:	cmp    ecx,DWORD PTR [eax+0xc]
10006e10:	jne    0x10006e17
10006e12:	xor    eax,eax
10006e14:	inc    eax
10006e15:	jmp    0x10006e19
10006e17:	xor    eax,eax
10006e19:	ret    0x4
10006e1c:	push   DWORD PTR [esp+0x4]
10006e20:	call   0x10050edf
10006e25:	pop    ecx
10006e26:	ret    0x4
10006e29:	push   ecx
10006e2a:	call   0x10050f22
10006e2f:	pop    ecx
10006e30:	ret    
10006e31:	push   0x20
10006e33:	mov    eax,0x100605e3
10006e38:	call   0x10059b8e
10006e3d:	mov    eax,DWORD PTR [ebp+0x8]
10006e40:	xor    edi,edi
10006e42:	mov    DWORD PTR [ebp-0x18],eax
10006e45:	mov    esi,ecx
10006e47:	mov    DWORD PTR [ebp-0x1c],edi
10006e4a:	call   DWORD PTR ds:0x1007efec
10006e50:	mov    DWORD PTR [ebp-0x24],eax
10006e53:	mov    DWORD PTR [ebp-0x14],edi
10006e56:	push   edi
10006e57:	lea    eax,[ebp-0x20]
10006e5a:	push   eax
10006e5b:	push   esi
10006e5c:	mov    DWORD PTR [ebp-0x4],edi
10006e5f:	call   0x10050eeb
10006e64:	push   edi
10006e65:	lea    eax,[ebp-0x28]
10006e68:	push   eax
10006e69:	push   esi
10006e6a:	call   0x10050eeb
10006e6f:	mov    eax,DWORD PTR [ebp-0x20]
10006e72:	add    esp,0x18
10006e75:	cmp    eax,edi
10006e77:	mov    DWORD PTR [ebp-0x1c],eax
10006e7a:	je     0x10006ea2
10006e7c:	push   eax
10006e7d:	call   DWORD PTR ds:0x100660c4
10006e83:	push   edi
10006e84:	inc    eax
10006e85:	cdq    
10006e86:	push   0x2
10006e88:	push   edx
10006e89:	push   eax
10006e8a:	call   0x1004f4f0
10006e8f:	mov    ebx,eax
10006e91:	add    eax,0x80000000
10006e96:	adc    edx,edi
10006e98:	mov    DWORD PTR [ebp-0x28],edx
10006e9b:	jne    0x10006ea2
10006e9d:	cmp    eax,0xffffffff
10006ea0:	jbe    0x10006ea6
10006ea2:	xor    eax,eax
10006ea4:	jmp    0x10006edb
10006ea6:	cmp    ebx,0x400
10006eac:	jg     0x10006ec4
10006eae:	push   ebx
10006eaf:	call   0x10006d49
10006eb4:	test   al,al
10006eb6:	pop    ecx
10006eb7:	je     0x10006ec4
10006eb9:	mov    eax,ebx
10006ebb:	call   0x1004b7e0
10006ec0:	mov    eax,esp
10006ec2:	jmp    0x10006ecd
10006ec4:	push   ebx
10006ec5:	lea    esi,[ebp-0x14]
10006ec8:	call   0x100076f6
10006ecd:	push   DWORD PTR [ebp-0x24]
10006ed0:	mov    esi,eax
10006ed2:	push   ebx
10006ed3:	push   DWORD PTR [ebp-0x1c]
10006ed6:	call   0x10002422
10006edb:	mov    ecx,DWORD PTR [ebp-0x18]
10006ede:	push   eax
10006edf:	call   0x100011c8
10006ee4:	cmp    DWORD PTR [ebp-0x14],edi
10006ee7:	je     0x10006efc
10006ee9:	mov    eax,DWORD PTR [ebp-0x14]
10006eec:	mov    esi,DWORD PTR [eax]
10006eee:	push   eax
10006eef:	mov    DWORD PTR [ebp-0x14],esi
10006ef2:	call   0x100435f8
10006ef7:	cmp    esi,edi
10006ef9:	pop    ecx
10006efa:	jne    0x10006ee9
10006efc:	mov    eax,DWORD PTR [ebp-0x18]
10006eff:	lea    esp,[ebp-0x3c]
10006f02:	call   0x10059c11
10006f07:	ret    
10006f08:	push   0xc
10006f0a:	mov    eax,0x10061203
10006f0f:	call   0x10059b25
10006f14:	xor    edi,edi
10006f16:	mov    esi,ecx
10006f18:	mov    DWORD PTR [ebp-0x10],edi
10006f1b:	call   DWORD PTR ds:0x1007efec
10006f21:	mov    DWORD PTR [ebp-0x18],edi
10006f24:	push   edi
10006f25:	lea    eax,[ebp-0x10]
10006f28:	push   eax
10006f29:	push   ebx
10006f2a:	mov    DWORD PTR [ebp-0x4],edi
10006f2d:	call   0x10050f2e
10006f32:	push   edi
10006f33:	lea    eax,[ebp-0x14]
10006f36:	push   eax
10006f37:	push   ebx
10006f38:	call   0x10050f2e
10006f3d:	mov    ecx,DWORD PTR [ebp-0x14]
10006f40:	add    eax,ecx
10006f42:	sub    eax,DWORD PTR [ebp-0x10]
10006f45:	add    esp,0x18
10006f48:	push   eax
10006f49:	push   DWORD PTR [ebp-0x10]
10006f4c:	call   0x100040e3
10006f51:	mov    eax,esi
10006f53:	call   0x10059bfd
10006f58:	ret    
10006f59:	push   0x74
10006f5b:	mov    eax,0x10062f93
10006f60:	call   0x10059b8e
10006f65:	mov    eax,DWORD PTR [ebp+0xc]
10006f68:	mov    esi,DWORD PTR [ebp+0x8]
10006f6b:	push   eax
10006f6c:	push   esi
10006f6d:	mov    DWORD PTR [ebp-0x34],eax
10006f70:	call   DWORD PTR ds:0x10080c4c
10006f76:	mov    ebx,eax
10006f78:	mov    edi,0x80000000
10006f7d:	test   edi,ebx
10006f7f:	mov    DWORD PTR [ebp-0x38],ebx
10006f82:	jne    0x10007098
10006f88:	lea    eax,[ebp-0x48]
10006f8b:	push   eax
10006f8c:	call   0x10050ece
10006f91:	pop    ecx
10006f92:	and    DWORD PTR [ebp-0x4],0x0
10006f96:	mov    eax,DWORD PTR [esi]
10006f98:	lea    ecx,[ebp-0x48]
10006f9b:	push   ecx
10006f9c:	push   esi
10006f9d:	call   DWORD PTR [eax+0xc4]
10006fa3:	test   edi,eax
10006fa5:	je     0x10006fb7
10006fa7:	lea    eax,[ebp-0x48]
10006faa:	push   eax
10006fab:	call   0x10050edf
10006fb0:	mov    eax,ebx
10006fb2:	jmp    0x10007097
10006fb7:	lea    eax,[ebp-0x80]
10006fba:	push   eax
10006fbb:	lea    ecx,[ebp-0x48]
10006fbe:	call   0x10006e31
10006fc3:	pop    ecx
10006fc4:	lea    ecx,[ebp-0x30]
10006fc7:	push   ecx
10006fc8:	push   0x10080ee8
10006fcd:	mov    ecx,eax
10006fcf:	mov    BYTE PTR [ebp-0x4],0x1
10006fd3:	call   0x10019b04
10006fd8:	push   0x0
10006fda:	push   0x1
10006fdc:	lea    ecx,[ebp-0x80]
10006fdf:	mov    BYTE PTR [ebp-0x4],0x3
10006fe3:	call   0x100012eb
10006fe8:	lea    edi,[ebp-0x30]
10006feb:	call   0x100199a9
10006ff0:	test   al,al
10006ff2:	jne    0x1000707f
10006ff8:	call   DWORD PTR ds:0x1007efec
10006ffe:	mov    ebx,eax
10007000:	mov    eax,DWORD PTR [ebp-0x30]
10007003:	dec    eax
10007004:	je     0x1000701d
10007006:	dec    eax
10007007:	jne    0x1000707f
10007009:	push   0xffffffff
1000700b:	push   0x1006d1a4
10007010:	push   DWORD PTR [ebp-0x34]
10007013:	call   0x10050f00
10007018:	add    esp,0xc
1000701b:	jmp    0x1000707f
1000701d:	lea    eax,[ebp-0x64]
10007020:	push   eax
10007021:	lea    eax,[ebp-0x30]
10007024:	call   0x100199c9
10007029:	cmp    DWORD PTR [eax+0x18],0x10
1000702d:	jb     0x10007034
1000702f:	mov    esi,DWORD PTR [eax+0x4]
10007032:	jmp    0x10007037
10007034:	lea    esi,[eax+0x4]
10007037:	test   esi,esi
10007039:	je     0x1000704d
1000703b:	push   esi
1000703c:	call   DWORD PTR ds:0x100660dc
10007042:	mov    edi,eax
10007044:	inc    edi
10007045:	cmp    edi,0x3fffffff
1000704b:	jle    0x10007051
1000704d:	xor    eax,eax
1000704f:	jmp    0x10007065
10007051:	lea    eax,[edi+edi*1]
10007054:	call   0x1004b7e0
10007059:	mov    eax,esp
1000705b:	push   ebx
1000705c:	push   edi
1000705d:	push   esi
1000705e:	mov    esi,eax
10007060:	call   0x10006dbe
10007065:	push   0xffffffff
10007067:	push   eax
10007068:	push   DWORD PTR [ebp-0x34]
1000706b:	call   0x10050f00
10007070:	add    esp,0xc
10007073:	push   0x0
10007075:	push   0x1
10007077:	lea    ecx,[ebp-0x64]
1000707a:	call   0x100012eb
1000707f:	push   0x0
10007081:	push   0x1
10007083:	lea    ecx,[ebp-0x2c]
10007086:	call   0x100012eb
1000708b:	lea    eax,[ebp-0x48]
1000708e:	push   eax
1000708f:	call   0x10050edf
10007094:	mov    eax,DWORD PTR [ebp-0x38]
10007097:	pop    ecx
10007098:	lea    esp,[ebp-0x90]
1000709e:	call   0x10059c11
100070a3:	ret    0x8
100070a6:	push   0x30
100070a8:	mov    eax,0x1006379e
100070ad:	call   0x10059b8e
100070b2:	mov    esi,DWORD PTR [ebp+0x18]
100070b5:	mov    edx,DWORD PTR [ebp+0x14]
100070b8:	mov    ecx,DWORD PTR [ebp+0x10]
100070bb:	mov    edi,DWORD PTR [ebp+0xc]
100070be:	mov    eax,DWORD PTR [ebp+0x8]
100070c1:	push   esi
100070c2:	push   edx
100070c3:	push   ecx
100070c4:	push   edi
100070c5:	push   eax
100070c6:	mov    DWORD PTR [ebp-0x3c],esi
100070c9:	call   DWORD PTR ds:0x10080c44
100070cf:	xor    ebx,ebx
100070d1:	push   ebx
100070d2:	mov    esi,0x10080d94
100070d7:	push   esi
100070d8:	mov    DWORD PTR [ebp-0x38],eax
100070db:	call   DWORD PTR ds:0x100660e4
100070e1:	test   eax,eax
100070e3:	jne    0x100071b4
100070e9:	lea    eax,[ebp-0x20]
100070ec:	push   eax
100070ed:	mov    ecx,edi
100070ef:	mov    DWORD PTR [ebp-0x20],0x5d0fcdd0
100070f6:	mov    WORD PTR [ebp-0x1c],0x4daa
100070fc:	mov    WORD PTR [ebp-0x1a],0x11d2
10007102:	mov    BYTE PTR [ebp-0x18],0xb3
10007106:	mov    BYTE PTR [ebp-0x17],0x28
1000710a:	mov    BYTE PTR [ebp-0x16],bl
1000710d:	mov    BYTE PTR [ebp-0x15],0x80
10007111:	mov    BYTE PTR [ebp-0x14],0x5f
10007115:	mov    BYTE PTR [ebp-0x13],0x8a
10007119:	mov    BYTE PTR [ebp-0x12],0x38
1000711d:	mov    BYTE PTR [ebp-0x11],0x59
10007121:	mov    DWORD PTR [ebp-0x30],0xa6cf9084
10007128:	mov    WORD PTR [ebp-0x2c],0x15b3
1000712e:	mov    WORD PTR [ebp-0x2a],0x11d2
10007134:	mov    BYTE PTR [ebp-0x28],0x93
10007138:	mov    BYTE PTR [ebp-0x27],0x2e
1000713c:	mov    BYTE PTR [ebp-0x26],bl
1000713f:	mov    BYTE PTR [ebp-0x25],0x80
10007143:	mov    BYTE PTR [ebp-0x24],0x5f
10007147:	mov    BYTE PTR [ebp-0x23],0x8a
1000714b:	mov    BYTE PTR [ebp-0x22],0xdd
1000714f:	mov    BYTE PTR [ebp-0x21],0x32
10007153:	call   0x10006df0
10007158:	test   eax,eax
1000715a:	je     0x100071b4
1000715c:	mov    eax,DWORD PTR [ebp-0x3c]
1000715f:	lea    edx,[ebp-0x34]
10007162:	push   edx
10007163:	mov    DWORD PTR [ebp-0x4],ebx
10007166:	mov    eax,DWORD PTR [eax]
10007168:	lea    edx,[ebp-0x30]
1000716b:	push   edx
1000716c:	mov    DWORD PTR [ebp-0x34],ebx
1000716f:	mov    ecx,DWORD PTR [eax]
10007171:	push   eax
10007172:	call   DWORD PTR [ecx]
10007174:	test   eax,eax
10007176:	js     0x100071a8
10007178:	mov    eax,DWORD PTR [ebp-0x34]
1000717b:	mov    eax,DWORD PTR [eax]
1000717d:	push   0x10006f59
10007182:	push   DWORD PTR [eax+0xbc]
10007188:	call   0x10057560
1000718d:	push   ebx
1000718e:	push   0x1
10007190:	push   esi
10007191:	mov    esi,DWORD PTR ds:0x100660e0
10007197:	mov    ds:0x10080c4c,eax
1000719c:	call   esi
1000719e:	push   ebx
1000719f:	push   0x1
100071a1:	push   0x10080da0
100071a6:	call   esi
100071a8:	or     DWORD PTR [ebp-0x4],0xffffffff
100071ac:	lea    ecx,[ebp-0x34]
100071af:	call   0x10050f54
100071b4:	mov    eax,DWORD PTR [ebp-0x38]
100071b7:	call   0x10059c11
100071bc:	ret    0x14
100071bf:	push   0x4
100071c1:	mov    eax,0x10063dc8
100071c6:	call   0x10059b25
100071cb:	push   0x0
100071cd:	mov    esi,0x10080d9c
100071d2:	push   esi
100071d3:	call   DWORD PTR ds:0x100660e4
100071d9:	test   eax,eax
100071db:	jne    0x10007225
100071dd:	push   eax
100071de:	push   0x1
100071e0:	push   esi
100071e1:	call   DWORD PTR ds:0x100660e0
100071e7:	and    DWORD PTR [ebp-0x10],0x0
100071eb:	and    DWORD PTR [ebp-0x4],0x0
100071ef:	lea    ecx,[ebp-0x10]
100071f2:	call   0x10007743
100071f7:	push   eax
100071f8:	call   0x10050eac
100071fd:	test   eax,eax
100071ff:	pop    ecx
10007200:	js     0x10007219
10007202:	mov    eax,DWORD PTR [ebp-0x10]
10007205:	mov    eax,DWORD PTR [eax]
10007207:	push   0x100070a6
1000720c:	push   DWORD PTR [eax+0x14]
1000720f:	call   0x10057560
10007214:	mov    ds:0x10080c44,eax
10007219:	or     DWORD PTR [ebp-0x4],0xffffffff
1000721d:	lea    ecx,[ebp-0x10]
10007220:	call   0x10050f54
10007225:	call   0x10059bfd
1000722a:	ret    
1000722b:	jmp    0x10050f54
10007230:	push   esi
10007231:	push   DWORD PTR [esp+0x10]
10007235:	push   DWORD PTR [esp+0x10]
10007239:	push   DWORD PTR [esp+0x10]
1000723d:	call   DWORD PTR ds:0x10080c50
10007243:	mov    esi,eax
10007245:	add    esp,0xc
10007248:	test   esi,esi
1000724a:	js     0x10007253
1000724c:	call   0x100071bf
10007251:	mov    eax,esi
10007253:	pop    esi
10007254:	ret    
10007255:	push   0x78
10007257:	mov    eax,0x10062462
1000725c:	call   0x10059b8e
10007261:	mov    eax,DWORD PTR [ebp+0x8]
10007264:	mov    DWORD PTR [ebp-0x48],eax
10007267:	lea    eax,[ebp-0x68]
1000726a:	xor    esi,esi
1000726c:	push   eax
1000726d:	mov    DWORD PTR [edi],esi
1000726f:	call   0x10050f11
10007274:	push   0xffffffff
10007276:	lea    eax,[ebp-0x68]
10007279:	push   0x1006d1a8
1000727e:	push   eax
1000727f:	mov    DWORD PTR [ebp-0x4],esi
10007282:	call   0x10050f43
10007287:	mov    eax,ds:0x10080c78
1000728c:	mov    ecx,DWORD PTR [eax]
1000728e:	add    esp,0x10
10007291:	lea    edx,[ebp-0x44]
10007294:	push   edx
10007295:	push   esi
10007296:	push   esi
10007297:	lea    edx,[ebp-0x68]
1000729a:	push   edx
1000729b:	push   eax
1000729c:	call   DWORD PTR [ecx+0x14]
1000729f:	cmp    eax,esi
100072a1:	je     0x100072b5
100072a3:	lea    eax,[ebp-0x68]
100072a6:	push   eax
100072a7:	call   0x10050f22
100072ac:	pop    ecx
100072ad:	xor    al,al
100072af:	call   0x10059c11
100072b4:	ret    
100072b5:	lea    edx,[ebp-0x30]
100072b8:	push   edx
100072b9:	xor    ebx,ebx
100072bb:	push   esi
100072bc:	inc    ebx
100072bd:	mov    BYTE PTR [ebp-0x4],bl
100072c0:	mov    eax,ds:0x10080c74
100072c5:	push   DWORD PTR [ebp-0x44]
100072c8:	mov    DWORD PTR [ebp-0x30],esi
100072cb:	mov    ecx,DWORD PTR [eax]
100072cd:	push   eax
100072ce:	call   DWORD PTR [ecx+0xc]
100072d1:	cmp    eax,esi
100072d3:	je     0x100072f1
100072d5:	xor    bl,bl
100072d7:	lea    ecx,[ebp-0x30]
100072da:	mov    BYTE PTR [ebp-0x4],0x0
100072de:	call   0x10050f54
100072e3:	lea    eax,[ebp-0x68]
100072e6:	push   eax
100072e7:	call   0x10050f22
100072ec:	pop    ecx
100072ed:	mov    al,bl
100072ef:	jmp    0x100072af
100072f1:	cmp    DWORD PTR [ebp-0x30],esi
100072f4:	je     0x100072d7
100072f6:	lea    eax,[ebp-0x40]
100072f9:	push   eax
100072fa:	call   0x10050f11
100072ff:	pop    ecx
10007300:	push   esi
10007301:	lea    ecx,[ebp-0x2c]
10007304:	mov    DWORD PTR [ebp-0x14],0xf
1000730b:	call   0x10001417
10007310:	mov    BYTE PTR [ebp-0x4],0x3
10007314:	mov    eax,DWORD PTR [ebp-0x30]
10007317:	mov    ecx,DWORD PTR [eax]
10007319:	lea    edx,[ebp-0x40]
1000731c:	push   edx
1000731d:	push   eax
1000731e:	call   DWORD PTR [ecx+0x14]
10007321:	cmp    eax,esi
10007323:	je     0x1000733b
10007325:	push   esi
10007326:	push   ebx
10007327:	lea    ecx,[ebp-0x2c]
1000732a:	call   0x100012eb
1000732f:	lea    eax,[ebp-0x40]
10007332:	push   eax
10007333:	call   0x10050f22
10007338:	pop    ecx
10007339:	jmp    0x100072d5
1000733b:	lea    ebx,[ebp-0x40]
1000733e:	lea    ecx,[ebp-0x84]
10007344:	call   0x10006f08
10007349:	push   0x1006d1c0
1000734e:	mov    esi,eax
10007350:	mov    BYTE PTR [ebp-0x4],0x4
10007354:	call   0x10006639
10007359:	mov    bl,al
1000735b:	neg    bl
1000735d:	pop    ecx
1000735e:	sbb    bl,bl
10007360:	xor    esi,esi
10007362:	push   esi
10007363:	push   0x1
10007365:	lea    ecx,[ebp-0x84]
1000736b:	inc    bl
1000736d:	call   0x100012eb
10007372:	test   bl,bl
10007374:	je     0x10007392
10007376:	push   esi
10007377:	push   0x1
10007379:	lea    ecx,[ebp-0x2c]
1000737c:	call   0x100012eb
10007381:	lea    eax,[ebp-0x40]
10007384:	push   eax
10007385:	call   0x10050f22
1000738a:	pop    ecx
1000738b:	mov    bl,0x1
1000738d:	jmp    0x100072d7
10007392:	lea    eax,[ebp-0x58]
10007395:	push   eax
10007396:	call   0x10050f11
1000739b:	pop    ecx
1000739c:	mov    BYTE PTR [ebp-0x4],0x5
100073a0:	mov    eax,DWORD PTR [ebp-0x30]
100073a3:	mov    ecx,DWORD PTR [eax]
100073a5:	lea    edx,[ebp-0x58]
100073a8:	push   edx
100073a9:	push   eax
100073aa:	call   DWORD PTR [ecx+0xc]
100073ad:	cmp    eax,esi
100073af:	je     0x100073c3
100073b1:	lea    eax,[ebp-0x58]
100073b4:	push   eax
100073b5:	call   0x10050f22
100073ba:	pop    ecx
100073bb:	push   esi
100073bc:	push   0x1
100073be:	jmp    0x10007327
100073c3:	lea    ebx,[ebp-0x58]
100073c6:	lea    ecx,[ebp-0x84]
100073cc:	call   0x10006f08
100073d1:	mov    ecx,DWORD PTR [ebp-0x48]
100073d4:	push   0xffffffff
100073d6:	xor    ebx,ebx
100073d8:	push   ebx
100073d9:	push   eax
100073da:	mov    BYTE PTR [ebp-0x4],0x6
100073de:	call   0x1000123c
100073e3:	push   ebx
100073e4:	push   0x1
100073e6:	lea    ecx,[ebp-0x84]
100073ec:	mov    BYTE PTR [ebp-0x4],0x5
100073f0:	call   0x100012eb
100073f5:	mov    eax,DWORD PTR [ebp-0x30]
100073f8:	mov    ecx,DWORD PTR [eax]
100073fa:	push   edi
100073fb:	push   eax
100073fc:	call   DWORD PTR [ecx+0x10]
100073ff:	cmp    eax,ebx
10007401:	lea    eax,[ebp-0x58]
10007404:	push   eax
10007405:	je     0x10007427
10007407:	call   0x10050f22
1000740c:	pop    ecx
1000740d:	push   ebx
1000740e:	push   0x1
10007410:	lea    ecx,[ebp-0x2c]
10007413:	call   0x100012eb
10007418:	lea    eax,[ebp-0x40]
1000741b:	push   eax
1000741c:	call   0x10050f22
10007421:	pop    ecx
10007422:	jmp    0x100072d7
10007427:	call   0x10050f22
1000742c:	pop    ecx
1000742d:	push   ebx
1000742e:	jmp    0x10007377
10007433:	push   ebp
10007434:	mov    ebp,esp
10007436:	sub    esp,0x1c
10007439:	mov    eax,ds:0x1007e030
1000743e:	xor    eax,ebp
10007440:	mov    DWORD PTR [ebp-0x8],eax
10007443:	mov    edx,DWORD PTR [ebp+0x14]
10007446:	mov    ecx,DWORD PTR [ebp+0x10]
10007449:	mov    eax,DWORD PTR [ebp+0xc]
1000744c:	push   esi
1000744d:	mov    esi,DWORD PTR [ebp+0x8]
10007450:	push   edi
10007451:	push   DWORD PTR [ebp+0x18]
10007454:	push   edx
10007455:	push   ecx
10007456:	push   eax
10007457:	push   esi
10007458:	call   DWORD PTR ds:0x10080c40
1000745e:	mov    edi,eax
10007460:	add    esp,0x14
10007463:	test   edi,edi
10007465:	js     0x10007508
1000746b:	mov    esi,DWORD PTR [esi]
1000746d:	mov    eax,DWORD PTR [esi]
1000746f:	push   esi
10007470:	call   DWORD PTR [eax+0x4]
10007473:	mov    eax,DWORD PTR [esi]
10007475:	push   0x10080c74
1000747a:	lea    ecx,[ebp-0x18]
1000747d:	push   ecx
1000747e:	push   0x1006d1c8
10007483:	push   esi
10007484:	mov    DWORD PTR [ebp-0x18],0xe38ab577
1000748b:	mov    WORD PTR [ebp-0x14],0x786e
10007491:	mov    WORD PTR [ebp-0x12],0x4a7f
10007497:	mov    BYTE PTR [ebp-0x10],0x93
1000749b:	mov    BYTE PTR [ebp-0xf],0x6b
1000749f:	mov    BYTE PTR [ebp-0xe],0x7a
100074a3:	mov    BYTE PTR [ebp-0xd],0xe4
100074a7:	mov    BYTE PTR [ebp-0xc],0xc7
100074ab:	mov    BYTE PTR [ebp-0xb],0xd8
100074af:	mov    BYTE PTR [ebp-0xa],0x77
100074b3:	mov    BYTE PTR [ebp-0x9],0xb2
100074b7:	call   DWORD PTR [eax+0x10]
100074ba:	mov    eax,DWORD PTR [esi]
100074bc:	push   0x10080c78
100074c1:	lea    ecx,[ebp-0x18]
100074c4:	push   ecx
100074c5:	push   0x1006d1f8
100074ca:	push   esi
100074cb:	mov    DWORD PTR [ebp-0x18],0xbddeda3f
100074d2:	mov    WORD PTR [ebp-0x14],0x9020
100074d8:	mov    WORD PTR [ebp-0x12],0x4d12
100074de:	mov    BYTE PTR [ebp-0x10],0x8c
100074e2:	mov    BYTE PTR [ebp-0xf],0x70
100074e6:	mov    BYTE PTR [ebp-0xe],0x98
100074ea:	mov    BYTE PTR [ebp-0xd],0x4e
100074ee:	mov    BYTE PTR [ebp-0xc],0xe9
100074f2:	mov    BYTE PTR [ebp-0xb],0xf7
100074f6:	mov    BYTE PTR [ebp-0xa],0x93
100074fa:	mov    BYTE PTR [ebp-0x9],0x5e
100074fe:	call   DWORD PTR [eax+0x10]
10007501:	call   0x100071bf
10007506:	mov    eax,edi
10007508:	mov    ecx,DWORD PTR [ebp-0x8]
1000750b:	pop    edi
1000750c:	xor    ecx,ebp
1000750e:	pop    esi
1000750f:	call   0x10042f87
10007514:	leave  
10007515:	ret    
10007516:	push   ebx
10007517:	push   esi
10007518:	push   edi
10007519:	mov    edi,DWORD PTR [esp+0x10]
1000751d:	push   edi
1000751e:	call   DWORD PTR ds:0x10080c48
10007524:	pop    ecx
10007525:	push   0x0
10007527:	mov    esi,0x10080d9c
1000752c:	push   esi
1000752d:	mov    ebx,eax
1000752f:	call   DWORD PTR ds:0x100660e4
10007535:	test   eax,eax
10007537:	jne    0x1000755b
10007539:	push   eax
1000753a:	push   0x1
1000753c:	push   esi
1000753d:	call   DWORD PTR ds:0x100660e0
10007543:	mov    eax,DWORD PTR [edi]
10007545:	mov    eax,DWORD PTR [eax]
10007547:	add    eax,0x14
1000754a:	push   0x100070a6
1000754f:	push   DWORD PTR [eax]
10007551:	call   0x10057560
10007556:	mov    ds:0x10080c44,eax
1000755b:	pop    edi
1000755c:	pop    esi
1000755d:	mov    eax,ebx
1000755f:	pop    ebx
10007560:	ret    
10007561:	push   ebp
10007562:	mov    ebp,esp
10007564:	and    esp,0xfffffff8
10007567:	push   ecx
10007568:	push   esi
10007569:	push   0x0
1000756b:	mov    esi,0x10080d98
10007570:	push   esi
10007571:	call   DWORD PTR ds:0x100660e4
10007577:	test   eax,eax
10007579:	jne    0x100076f1
1000757f:	push   eax
10007580:	push   0x1
10007582:	push   esi
10007583:	call   DWORD PTR ds:0x100660e0
10007589:	push   0x0
1000758b:	call   0x10050d82
10007590:	test   eax,eax
10007592:	pop    ecx
10007593:	js     0x100076f1
10007599:	push   0x24129e20
1000759e:	push   0x2d9a943a
100075a3:	push   0x31873fe4
100075a8:	push   0x64f50474
100075ad:	push   0x3334390c
100075b2:	push   0x1006d21c
100075b7:	call   0x100042bd
100075bc:	pop    ecx
100075bd:	pop    ecx
100075be:	push   eax
100075bf:	call   0x100042bd
100075c4:	pop    ecx
100075c5:	pop    ecx
100075c6:	push   eax
100075c7:	call   0x100042bd
100075cc:	pop    ecx
100075cd:	pop    ecx
100075ce:	push   eax
100075cf:	call   0x100042bd
100075d4:	pop    ecx
100075d5:	pop    ecx
100075d6:	push   eax
100075d7:	call   0x100042bd
100075dc:	push   eax
100075dd:	push   0xd
100075df:	push   0x1006d24c
100075e4:	call   0x100042cf
100075e9:	add    esp,0x14
100075ec:	push   eax
100075ed:	push   0x395b50ae
100075f2:	push   0x784a598e
100075f7:	push   0x60504ba0
100075fc:	push   0xcb0d51c
10007601:	push   0x1ae4f6f4
10007606:	push   0x1006d25c
1000760b:	call   0x100042bd
10007610:	pop    ecx
10007611:	pop    ecx
10007612:	push   eax
10007613:	call   0x100042bd
10007618:	pop    ecx
10007619:	pop    ecx
1000761a:	push   eax
1000761b:	call   0x100042bd
10007620:	pop    ecx
10007621:	pop    ecx
10007622:	push   eax
10007623:	call   0x100042bd
10007628:	pop    ecx
10007629:	pop    ecx
1000762a:	push   eax
1000762b:	call   0x100042bd
10007630:	push   eax
10007631:	push   0x9
10007633:	mov    esi,0x1006d294
10007638:	push   esi
10007639:	call   0x100042cf
1000763e:	add    esp,0x14
10007641:	push   eax
10007642:	call   0x10057bc0
10007647:	test   eax,eax
10007649:	je     0x1000765b
1000764b:	push   0x10007230
10007650:	push   eax
10007651:	call   0x10057560
10007656:	mov    ds:0x10080c50,eax
1000765b:	push   0x1006d2a0
10007660:	push   0xd
10007662:	push   0x1006d2e0
10007667:	call   0x100042cf
1000766c:	add    esp,0xc
1000766f:	push   eax
10007670:	push   0x1006d2f0
10007675:	push   0x9
10007677:	push   esi
10007678:	call   0x100042cf
1000767d:	add    esp,0xc
10007680:	push   eax
10007681:	call   0x10057bc0
10007686:	test   eax,eax
10007688:	je     0x1000769a
1000768a:	push   0x10007433
1000768f:	push   eax
10007690:	call   0x10057560
10007695:	mov    ds:0x10080c40,eax
1000769a:	push   0x4ba6cf14
1000769f:	push   0x50fd148c
100076a4:	push   0x1006d31c
100076a9:	call   0x100042bd
100076ae:	pop    ecx
100076af:	pop    ecx
100076b0:	push   eax
100076b1:	call   0x100042bd
100076b6:	push   eax
100076b7:	push   0x16
100076b9:	push   0x1006d358
100076be:	call   0x100042cf
100076c3:	add    esp,0x14
100076c6:	push   eax
100076c7:	push   0x1006d370
100076cc:	push   0x9
100076ce:	push   esi
100076cf:	call   0x100042cf
100076d4:	add    esp,0xc
100076d7:	push   eax
100076d8:	call   0x10057bc0
100076dd:	test   eax,eax
100076df:	je     0x100076f1
100076e1:	push   0x10007516
100076e6:	push   eax
100076e7:	call   0x10057560
100076ec:	mov    ds:0x10080c48,eax
100076f1:	pop    esi
100076f2:	mov    esp,ebp
100076f4:	pop    ebp
100076f5:	ret    
100076f6:	push   ebp
100076f7:	mov    ebp,esp
100076f9:	push   0x8
100076fb:	push   DWORD PTR [ebp+0x8]
100076fe:	lea    eax,[ebp+0x8]
10007701:	push   eax
10007702:	call   0x10007759
10007707:	add    esp,0xc
1000770a:	test   eax,eax
1000770c:	jge    0x10007714
1000770e:	push   eax
1000770f:	call   0x10001f33
10007714:	push   DWORD PTR [ebp+0x8]
10007717:	call   0x1004507d
1000771c:	test   eax,eax
1000771e:	pop    ecx
1000771f:	je     0x1000772a
10007721:	mov    ecx,DWORD PTR [esi]
10007723:	mov    DWORD PTR [eax],ecx
10007725:	mov    DWORD PTR [esi],eax
10007727:	add    eax,0x8
1000772a:	pop    ebp
1000772b:	ret    0x4
1000772e:	jmp    0x1000773d
10007730:	mov    eax,DWORD PTR [esi]
10007732:	mov    ecx,DWORD PTR [eax]
10007734:	push   eax
10007735:	mov    DWORD PTR [esi],ecx
10007737:	call   0x100435f8
1000773c:	pop    ecx
1000773d:	cmp    DWORD PTR [esi],0x0
10007740:	jne    0x10007730
10007742:	ret    
10007743:	push   esi
10007744:	mov    esi,ecx
10007746:	mov    eax,DWORD PTR [esi]
10007748:	and    DWORD PTR [esi],0x0
1000774b:	test   eax,eax
1000774d:	je     0x10007755
1000774f:	mov    ecx,DWORD PTR [eax]
10007751:	push   eax
10007752:	call   DWORD PTR [ecx+0x8]
10007755:	mov    eax,esi
10007757:	pop    esi
10007758:	ret    
10007759:	mov    eax,DWORD PTR [esp+0x8]
1000775d:	mov    ecx,DWORD PTR [esp+0xc]
10007761:	or     edx,0xffffffff
10007764:	sub    edx,eax
10007766:	cmp    edx,ecx
10007768:	jae    0x10007770
1000776a:	mov    eax,0x80070057
1000776f:	ret    
10007770:	add    eax,ecx
10007772:	mov    ecx,DWORD PTR [esp+0x4]
10007776:	mov    DWORD PTR [ecx],eax
10007778:	xor    eax,eax
1000777a:	ret    
1000777b:	test   esi,esi
1000777d:	jne    0x10007782
1000777f:	xor    eax,eax
10007781:	ret    
10007782:	test   edi,edi
10007784:	je     0x1000778c
10007786:	mov    eax,DWORD PTR [edi]
10007788:	push   edi
10007789:	call   DWORD PTR [eax+0x4]
1000778c:	mov    eax,DWORD PTR [esi]
1000778e:	test   eax,eax
10007790:	je     0x10007798
10007792:	mov    ecx,DWORD PTR [eax]
10007794:	push   eax
10007795:	call   DWORD PTR [ecx+0x8]
10007798:	mov    DWORD PTR [esi],edi
1000779a:	mov    eax,edi
1000779c:	ret    
1000779d:	cmp    DWORD PTR [eax+0x18],0x10
100077a1:	jb     0x100077a8
100077a3:	mov    eax,DWORD PTR [eax+0x4]
100077a6:	jmp    0x100077ab
100077a8:	add    eax,0x4
100077ab:	cmp    DWORD PTR [ecx+0x18],0x10
100077af:	jb     0x100077b6
100077b1:	mov    ecx,DWORD PTR [ecx+0x4]
100077b4:	jmp    0x100077b9
100077b6:	add    ecx,0x4
100077b9:	push   eax
100077ba:	push   ecx
100077bb:	call   0x1004575f
100077c0:	pop    ecx
100077c1:	pop    ecx
100077c2:	xor    ecx,ecx
100077c4:	test   eax,eax
100077c6:	setl   cl
100077c9:	mov    al,cl
100077cb:	ret    
100077cc:	push   0x0
100077ce:	mov    eax,0x100605c0
100077d3:	call   0x10059b25
100077d8:	mov    esi,DWORD PTR [ebp+0x8]
100077db:	xor    ebx,ebx
100077dd:	mov    DWORD PTR [esi],ebx
100077df:	mov    DWORD PTR [ebp-0x4],ebx
100077e2:	mov    DWORD PTR [esi+0x8],ebx
100077e5:	mov    DWORD PTR [esi+0xc],ebx
100077e8:	mov    DWORD PTR [esi+0x10],ebx
100077eb:	push   0x400
100077f0:	mov    BYTE PTR [ebp-0x4],0x1
100077f4:	call   0x10043811
100077f9:	mov    DWORD PTR [esi+0x14],eax
100077fc:	pop    ecx
100077fd:	mov    DWORD PTR [esi+0x18],ebx
10007800:	mov    DWORD PTR [esi+0x1c],0x400
10007807:	mov    DWORD PTR [esi+0x20],ebx
1000780a:	mov    eax,esi
1000780c:	call   0x10059bfd
10007811:	ret    0x4
10007814:	push   esi
10007815:	mov    esi,eax
10007817:	mov    eax,DWORD PTR [esi+0x18]
1000781a:	add    eax,edi
1000781c:	call   0x100079f1
10007821:	mov    eax,DWORD PTR [esi+0x14]
10007824:	add    eax,DWORD PTR [esi+0x18]
10007827:	push   edi
10007828:	push   DWORD PTR [esp+0xc]
1000782c:	push   eax
1000782d:	call   0x10045270
10007832:	add    DWORD PTR [esi+0x18],edi
10007835:	add    esp,0xc
10007838:	pop    esi
10007839:	ret    0x4
1000783c:	push   ebp
1000783d:	mov    ebp,esp
1000783f:	push   ecx
10007840:	mov    ecx,DWORD PTR [edi+0x4]
10007843:	push   ebx
10007844:	mov    ebx,DWORD PTR [ebp+0xc]
10007847:	cmp    ebx,ecx
10007849:	push   esi
1000784a:	mov    esi,eax
1000784c:	jbe    0x1000785a
1000784e:	mov    eax,DWORD PTR [esi+0x18]
10007851:	sub    eax,ecx
10007853:	add    eax,ebx
10007855:	call   0x100079f1
1000785a:	mov    ecx,DWORD PTR [edi+0x4]
1000785d:	mov    eax,DWORD PTR [edi]
1000785f:	mov    edx,DWORD PTR [esi+0x18]
10007862:	sub    ebx,ecx
10007864:	add    ecx,eax
10007866:	mov    DWORD PTR [ebp-0x4],ecx
10007869:	sub    edx,DWORD PTR [ebp-0x4]
1000786c:	mov    ecx,DWORD PTR [esi+0x14]
1000786f:	push   edx
10007870:	mov    edx,DWORD PTR [ebp-0x4]
10007873:	add    edx,ecx
10007875:	add    ecx,eax
10007877:	add    ecx,DWORD PTR [ebp+0xc]
1000787a:	push   edx
1000787b:	push   ecx
1000787c:	call   0x100457b0
10007881:	push   DWORD PTR [ebp+0xc]
10007884:	mov    eax,DWORD PTR [esi+0x14]
10007887:	add    eax,DWORD PTR [edi]
10007889:	push   DWORD PTR [ebp+0x8]
1000788c:	push   eax
1000788d:	call   0x100457b0
10007892:	add    esp,0x18
10007895:	push   ebx
10007896:	push   DWORD PTR [edi]
10007898:	mov    eax,esi
1000789a:	call   0x10007989
1000789f:	mov    eax,DWORD PTR [ebp+0xc]
100078a2:	mov    DWORD PTR [edi+0x4],eax
100078a5:	add    DWORD PTR [esi+0x18],ebx
100078a8:	pop    esi
100078a9:	pop    ebx
100078aa:	leave  
100078ab:	ret    0x8
100078ae:	push   ebp
100078af:	mov    ebp,esp
100078b1:	sub    esp,0xc
100078b4:	push   esi
100078b5:	mov    esi,eax
100078b7:	mov    edx,DWORD PTR [esi+0x8]
100078ba:	add    esi,0x4
100078bd:	test   edx,edx
100078bf:	push   edi
100078c0:	jne    0x100078c6
100078c2:	xor    ecx,ecx
100078c4:	jmp    0x100078ce
100078c6:	mov    ecx,DWORD PTR [esi+0x8]
100078c9:	sub    ecx,edx
100078cb:	sar    ecx,0x2
100078ce:	test   edx,edx
100078d0:	je     0x100078ee
100078d2:	mov    eax,DWORD PTR [esi+0xc]
100078d5:	sub    eax,edx
100078d7:	sar    eax,0x2
100078da:	cmp    ecx,eax
100078dc:	jae    0x100078ee
100078de:	mov    eax,DWORD PTR [esi+0x8]
100078e1:	mov    ecx,DWORD PTR [ebp+0x8]
100078e4:	mov    DWORD PTR [eax],ecx
100078e6:	add    eax,0x4
100078e9:	mov    DWORD PTR [esi+0x8],eax
100078ec:	jmp    0x1000790b
100078ee:	mov    edi,DWORD PTR [esi+0x8]
100078f1:	cmp    edx,edi
100078f3:	jbe    0x100078fa
100078f5:	call   0x100434a0
100078fa:	push   edi
100078fb:	push   esi
100078fc:	lea    eax,[ebp+0x8]
100078ff:	push   eax
10007900:	lea    eax,[ebp-0xc]
10007903:	push   eax
10007904:	mov    eax,esi
10007906:	call   0x1000a04b
1000790b:	pop    edi
1000790c:	pop    esi
1000790d:	leave  
1000790e:	ret    0x4
10007911:	push   ebx
10007912:	push   esi
10007913:	mov    esi,eax
10007915:	add    esi,0x4
10007918:	push   edi
10007919:	mov    edi,DWORD PTR [esi+0x4]
1000791c:	cmp    edi,DWORD PTR [esi+0x8]
1000791f:	jbe    0x10007926
10007921:	call   0x100434a0
10007926:	mov    ebx,DWORD PTR [esi+0x8]
10007929:	cmp    DWORD PTR [esi+0x4],ebx
1000792c:	jbe    0x10007933
1000792e:	call   0x100434a0
10007933:	cmp    esi,esi
10007935:	je     0x1000793c
10007937:	call   0x100434a0
1000793c:	cmp    edi,ebx
1000793e:	je     0x10007983
10007940:	cmp    edi,DWORD PTR [esi+0x8]
10007943:	jb     0x1000794a
10007945:	call   0x100434a0
1000794a:	mov    eax,DWORD PTR [edi]
1000794c:	cmp    eax,DWORD PTR [esp+0x10]
10007950:	je     0x10007961
10007952:	cmp    edi,DWORD PTR [esi+0x8]
10007955:	jb     0x1000795c
10007957:	call   0x100434a0
1000795c:	add    edi,0x4
1000795f:	jmp    0x10007926
10007961:	mov    eax,DWORD PTR [esi+0x8]
10007964:	lea    ecx,[edi+0x4]
10007967:	sub    eax,ecx
10007969:	sar    eax,0x2
1000796c:	test   eax,eax
1000796e:	jle    0x1000797f
10007970:	shl    eax,0x2
10007973:	push   eax
10007974:	push   ecx
10007975:	push   eax
10007976:	push   edi
10007977:	call   0x10042f96
1000797c:	add    esp,0x10
1000797f:	add    DWORD PTR [esi+0x8],0xfffffffc
10007983:	pop    edi
10007984:	pop    esi
10007985:	pop    ebx
10007986:	ret    0x4
10007989:	push   ebp
1000798a:	mov    ebp,esp
1000798c:	and    esp,0xfffffff8
1000798f:	push   ecx
10007990:	push   ebx
10007991:	push   esi
10007992:	mov    esi,eax
10007994:	add    esi,0x4
10007997:	push   edi
10007998:	mov    edi,DWORD PTR [esi+0x4]
1000799b:	cmp    edi,DWORD PTR [esi+0x8]
1000799e:	jbe    0x100079a5
100079a0:	call   0x100434a0
100079a5:	mov    ebx,DWORD PTR [esi+0x8]
100079a8:	cmp    DWORD PTR [esi+0x4],ebx
100079ab:	jbe    0x100079b2
100079ad:	call   0x100434a0
100079b2:	cmp    esi,esi
100079b4:	je     0x100079bb
100079b6:	call   0x100434a0
100079bb:	cmp    edi,ebx
100079bd:	je     0x100079e8
100079bf:	cmp    edi,DWORD PTR [esi+0x8]
100079c2:	jb     0x100079c9
100079c4:	call   0x100434a0
100079c9:	mov    eax,DWORD PTR [edi]
100079cb:	mov    ecx,DWORD PTR [eax]
100079cd:	cmp    ecx,DWORD PTR [ebp+0x8]
100079d0:	jbe    0x100079d9
100079d2:	mov    edx,DWORD PTR [ebp+0xc]
100079d5:	add    ecx,edx
100079d7:	mov    DWORD PTR [eax],ecx
100079d9:	cmp    edi,DWORD PTR [esi+0x8]
100079dc:	jb     0x100079e3
100079de:	call   0x100434a0
100079e3:	add    edi,0x4
100079e6:	jmp    0x100079a5
100079e8:	pop    edi
100079e9:	pop    esi
100079ea:	pop    ebx
100079eb:	mov    esp,ebp
100079ed:	pop    ebp
100079ee:	ret    0x8
100079f1:	mov    ecx,DWORD PTR [esi+0x1c]
100079f4:	cmp    eax,ecx
100079f6:	jbe    0x10007a3c
100079f8:	shr    eax,0xa
100079fb:	inc    eax
100079fc:	shl    eax,0xa
100079ff:	push   ebx
10007a00:	mov    ebx,eax
10007a02:	cmp    ebx,ecx
10007a04:	je     0x10007a3b
10007a06:	push   edi
10007a07:	push   ebx
10007a08:	call   0x10043811
10007a0d:	push   DWORD PTR [esi+0x18]
10007a10:	mov    edi,eax
10007a12:	push   DWORD PTR [esi+0x14]
10007a15:	push   edi
10007a16:	call   0x10045270
10007a1b:	mov    eax,DWORD PTR [esi+0x14]
10007a1e:	add    esp,0x10
10007a21:	cmp    edi,eax
10007a23:	je     0x10007a2c
10007a25:	push   eax
10007a26:	call   0x10042f82
10007a2b:	pop    ecx
10007a2c:	mov    DWORD PTR [esi+0x14],edi
10007a2f:	push   0x0
10007a31:	mov    DWORD PTR [esi+0x1c],ebx
10007a34:	call   0x10042f82
10007a39:	pop    ecx
10007a3a:	pop    edi
10007a3b:	pop    ebx
10007a3c:	ret    
10007a3d:	push   0x0
10007a3f:	mov    eax,0x1005fda0
10007a44:	call   0x10059b25
10007a49:	mov    esi,DWORD PTR [ebp+0x8]
10007a4c:	push   0x8
10007a4e:	call   0x1004358e
10007a53:	test   eax,eax
10007a55:	pop    ecx
10007a56:	je     0x10007a65
10007a58:	mov    ecx,DWORD PTR [ebp+0x10]
10007a5b:	mov    DWORD PTR [eax],ecx
10007a5d:	mov    ecx,DWORD PTR [ebp+0x14]
10007a60:	mov    DWORD PTR [eax+0x4],ecx
10007a63:	jmp    0x10007a67
10007a65:	xor    eax,eax
10007a67:	mov    DWORD PTR [esi],eax
10007a69:	push   DWORD PTR [ebp+0xc]
10007a6c:	and    DWORD PTR [ebp-0x4],0x0
10007a70:	lea    ecx,[esi+0x4]
10007a73:	call   0x100011a2
10007a78:	and    DWORD PTR [esi+0x20],0x0
10007a7c:	mov    eax,esi
10007a7e:	call   0x10059bfd
10007a83:	ret    0x10
10007a86:	push   0x4
10007a88:	mov    eax,0x1005f77f
10007a8d:	call   0x10059b25
10007a92:	mov    esi,ecx
10007a94:	push   0x24
10007a96:	call   0x1004358e
10007a9b:	pop    ecx
10007a9c:	mov    DWORD PTR [ebp-0x10],eax
10007a9f:	xor    eax,eax
10007aa1:	mov    DWORD PTR [ebp-0x4],eax
10007aa4:	cmp    DWORD PTR [ebp-0x10],eax
10007aa7:	je     0x10007abc
10007aa9:	mov    eax,DWORD PTR [esi]
10007aab:	push   DWORD PTR [eax+0x4]
10007aae:	add    esi,0x4
10007ab1:	push   DWORD PTR [eax]
10007ab3:	push   esi
10007ab4:	push   DWORD PTR [ebp-0x10]
10007ab7:	call   0x10007a3d
10007abc:	call   0x10059bfd
10007ac1:	ret    
10007ac2:	push   ecx
10007ac3:	mov    ecx,DWORD PTR [esp+0x8]
10007ac7:	push   edi
10007ac8:	lea    edi,[esi+0x4]
10007acb:	mov    eax,edi
10007acd:	call   0x10006617
10007ad2:	test   al,al
10007ad4:	je     0x10007ada
10007ad6:	xor    al,al
10007ad8:	jmp    0x10007b0c
10007ada:	push   0xffffffff
10007adc:	push   0x0
10007ade:	push   DWORD PTR [esp+0x14]
10007ae2:	mov    ecx,edi
10007ae4:	call   0x1000123c
10007ae9:	mov    eax,DWORD PTR [esi+0x20]
10007aec:	test   eax,eax
10007aee:	je     0x10007b0a
10007af0:	cmp    DWORD PTR [edi+0x18],0x10
10007af4:	mov    ecx,DWORD PTR [esi+0x18]
10007af7:	jb     0x10007afe
10007af9:	mov    edi,DWORD PTR [edi+0x4]
10007afc:	jmp    0x10007b01
10007afe:	add    edi,0x4
10007b01:	push   ecx
10007b02:	push   edi
10007b03:	mov    edi,DWORD PTR [esi]
10007b05:	call   0x1000783c
10007b0a:	mov    al,0x1
10007b0c:	pop    edi
10007b0d:	pop    ecx
10007b0e:	ret    0x4
10007b11:	push   ecx
10007b12:	mov    eax,DWORD PTR [esi]
10007b14:	add    DWORD PTR [eax],ecx
10007b16:	push   DWORD PTR [esi]
10007b18:	mov    eax,edi
10007b1a:	call   0x100078ae
10007b1f:	mov    DWORD PTR [esi+0x20],edi
10007b22:	pop    ecx
10007b23:	ret    
10007b24:	call   0x1000a87d
10007b29:	lea    ecx,[esi+0x4]
10007b2c:	mov    DWORD PTR [ecx],eax
10007b2e:	mov    BYTE PTR [eax+0x39],0x1
10007b32:	mov    eax,DWORD PTR [ecx]
10007b34:	mov    DWORD PTR [eax+0x4],eax
10007b37:	mov    eax,DWORD PTR [ecx]
10007b39:	mov    DWORD PTR [eax],eax
10007b3b:	mov    ecx,DWORD PTR [ecx]
10007b3d:	xor    eax,eax
10007b3f:	mov    DWORD PTR [ecx+0x8],ecx
10007b42:	mov    DWORD PTR [esi+0x8],eax
10007b45:	mov    DWORD PTR [esi+0xc],eax
10007b48:	mov    DWORD PTR [esi+0x10],eax
10007b4b:	mov    eax,esi
10007b4d:	ret    
10007b4e:	push   esi
10007b4f:	push   0x8
10007b51:	call   0x1004358e
10007b56:	xor    esi,esi
10007b58:	cmp    eax,esi
10007b5a:	pop    ecx
10007b5b:	je     0x10007b68
10007b5d:	mov    ecx,DWORD PTR [esp+0x8]
10007b61:	mov    DWORD PTR [eax+0x4],esi
10007b64:	mov    DWORD PTR [eax],ecx
10007b66:	mov    esi,eax
10007b68:	mov    eax,DWORD PTR [edi+0x10]
10007b6b:	cmp    esi,eax
10007b6d:	je     0x10007b76
10007b6f:	push   eax
10007b70:	call   0x10042f82
10007b75:	pop    ecx
10007b76:	mov    DWORD PTR [edi+0x10],esi
10007b79:	pop    esi
10007b7a:	ret    0x4
10007b7d:	push   ebp
10007b7e:	mov    ebp,esp
10007b80:	and    esp,0xfffffff8
10007b83:	sub    esp,0x10
10007b86:	mov    eax,DWORD PTR [ebx+0x4]
10007b89:	mov    eax,DWORD PTR [eax]
10007b8b:	push   esi
10007b8c:	push   edi
10007b8d:	mov    DWORD PTR [esp+0xc],eax
10007b91:	mov    DWORD PTR [esp+0x8],ebx
10007b95:	mov    DWORD PTR [esp+0x10],ebx
10007b99:	mov    eax,DWORD PTR [ebx+0x4]
10007b9c:	lea    edi,[esp+0x10]
10007ba0:	lea    esi,[esp+0x8]
10007ba4:	mov    DWORD PTR [esp+0x14],eax
10007ba8:	call   0x10009d5c
10007bad:	test   al,al
10007baf:	jne    0x10007c00
10007bb1:	xor    edi,edi
10007bb3:	call   0x10013f4a
10007bb8:	add    eax,0x1c
10007bbb:	call   0x10004728
10007bc0:	test   eax,eax
10007bc2:	je     0x10007bf5
10007bc4:	lea    esi,[esp+0x8]
10007bc8:	call   0x10013f4a
10007bcd:	push   edi
10007bce:	lea    esi,[eax+0x1c]
10007bd1:	call   0x10009e0a
10007bd6:	push   DWORD PTR [eax+0x1c]
10007bd9:	call   0x10042f82
10007bde:	pop    ecx
10007bdf:	lea    esi,[esp+0x8]
10007be3:	inc    edi
10007be4:	call   0x10013f4a
10007be9:	add    eax,0x1c
10007bec:	call   0x10004728
10007bf1:	cmp    edi,eax
10007bf3:	jne    0x10007bc4
10007bf5:	lea    esi,[esp+0x8]
10007bf9:	call   0x1000cdd4
10007bfe:	jmp    0x10007b99
10007c00:	push   DWORD PTR [ebx+0x10]
10007c03:	call   0x10042f82
10007c08:	pop    ecx
10007c09:	mov    eax,ebx
10007c0b:	call   0x1000a277
10007c10:	pop    edi
10007c11:	pop    esi
10007c12:	mov    esp,ebp
10007c14:	pop    ebp
10007c15:	ret    
10007c16:	push   0x1c
10007c18:	mov    eax,0x10062409
10007c1d:	call   0x10059b25
10007c22:	mov    eax,DWORD PTR [ebp+0x8]
10007c25:	mov    ecx,DWORD PTR [ebp+0xc]
10007c28:	xor    ebx,ebx
10007c2a:	mov    DWORD PTR [eax+0xc],ebx
10007c2d:	mov    eax,DWORD PTR [ecx+0x4]
10007c30:	mov    eax,DWORD PTR [eax]
10007c32:	mov    DWORD PTR [ebp-0x1c],eax
10007c35:	mov    DWORD PTR [ebp-0x20],ecx
10007c38:	mov    DWORD PTR [ebp-0x28],ecx
10007c3b:	mov    eax,DWORD PTR [ecx+0x4]
10007c3e:	lea    edi,[ebp-0x28]
10007c41:	lea    esi,[ebp-0x20]
10007c44:	mov    DWORD PTR [ebp-0x24],eax
10007c47:	call   0x10009d5c
10007c4c:	test   al,al
10007c4e:	jne    0x10007d52
10007c54:	mov    DWORD PTR [ebp-0x10],ebx
10007c57:	call   0x10013f4a
10007c5c:	add    eax,0x1c
10007c5f:	call   0x10004728
10007c64:	test   eax,eax
10007c66:	je     0x10007d42
10007c6c:	mov    DWORD PTR [ebp-0x14],ebx
10007c6f:	push   DWORD PTR [ebp-0x10]
10007c72:	lea    esi,[ebp-0x20]
10007c75:	mov    DWORD PTR [ebp-0x4],ebx
10007c78:	call   0x10013f4a
10007c7d:	mov    esi,eax
10007c7f:	add    esi,0x1c
10007c82:	call   0x10009e0a
10007c87:	cmp    DWORD PTR [eax+0x1c],ebx
10007c8a:	je     0x10007ce8
10007c8c:	push   0x8
10007c8e:	call   0x1004358e
10007c93:	mov    edi,eax
10007c95:	cmp    edi,ebx
10007c97:	pop    ecx
10007c98:	je     0x10007cd8
10007c9a:	push   DWORD PTR [ebp-0x10]
10007c9d:	lea    esi,[ebp-0x20]
10007ca0:	call   0x10013f4a
10007ca5:	mov    esi,eax
10007ca7:	add    esi,0x1c
10007caa:	call   0x10009e0a
10007caf:	mov    eax,DWORD PTR [eax+0x1c]
10007cb2:	push   DWORD PTR [ebp-0x10]
10007cb5:	mov    ebx,DWORD PTR [eax+0x4]
10007cb8:	lea    esi,[ebp-0x20]
10007cbb:	call   0x10013f4a
10007cc0:	mov    esi,eax
10007cc2:	add    esi,0x1c
10007cc5:	call   0x10009e0a
10007cca:	mov    eax,DWORD PTR [eax+0x1c]
10007ccd:	mov    eax,DWORD PTR [eax]
10007ccf:	mov    DWORD PTR [edi+0x4],ebx
10007cd2:	mov    DWORD PTR [edi],eax
10007cd4:	xor    ebx,ebx
10007cd6:	jmp    0x10007cda
10007cd8:	xor    edi,edi
10007cda:	cmp    edi,ebx
10007cdc:	je     0x10007ce5
10007cde:	push   ebx
10007cdf:	call   0x10042f82
10007ce4:	pop    ecx
10007ce5:	mov    DWORD PTR [ebp-0x14],edi
10007ce8:	push   ecx
10007ce9:	mov    ecx,DWORD PTR [ebp-0x14]
10007cec:	mov    eax,esp
10007cee:	mov    DWORD PTR [ebp-0x18],esp
10007cf1:	push   DWORD PTR [ebp-0x10]
10007cf4:	lea    esi,[ebp-0x20]
10007cf7:	mov    DWORD PTR [ebp-0x14],ebx
10007cfa:	mov    DWORD PTR [eax],ecx
10007cfc:	call   0x10013f4a
10007d01:	mov    esi,eax
10007d03:	add    esi,0x1c
10007d06:	call   0x10009e0a
10007d0b:	push   eax
10007d0c:	lea    esi,[ebp-0x20]
10007d0f:	call   0x10013f4a
10007d14:	mov    ecx,DWORD PTR [ebp+0x8]
10007d17:	mov    edx,eax
10007d19:	call   0x10007f3e
10007d1e:	or     DWORD PTR [ebp-0x4],0xffffffff
10007d22:	push   ebx
10007d23:	call   0x10042f82
10007d28:	inc    DWORD PTR [ebp-0x10]
10007d2b:	pop    ecx
10007d2c:	call   0x10013f4a
10007d31:	add    eax,0x1c
10007d34:	call   0x10004728
10007d39:	cmp    DWORD PTR [ebp-0x10],eax
10007d3c:	jne    0x10007c6c
10007d42:	lea    esi,[ebp-0x20]
10007d45:	call   0x1000cdd4
10007d4a:	mov    ecx,DWORD PTR [ebp+0xc]
10007d4d:	jmp    0x10007c3b
10007d52:	call   0x10059bfd
10007d57:	ret    0x8
10007d5a:	push   ebp
10007d5b:	mov    ebp,esp
10007d5d:	mov    eax,DWORD PTR [ebp+0x8]
10007d60:	mov    ecx,DWORD PTR [eax+0x8]
10007d63:	mov    edx,DWORD PTR [ebp+0xc]
10007d66:	sub    esp,0x2c
10007d69:	cmp    ecx,DWORD PTR [edx+0x8]
10007d6c:	push   ebx
10007d6d:	push   esi
10007d6e:	push   edi
10007d6f:	je     0x10007d78
10007d71:	xor    al,al
10007d73:	jmp    0x10007e54
10007d78:	mov    ecx,DWORD PTR [eax+0x4]
10007d7b:	mov    ecx,DWORD PTR [ecx]
10007d7d:	mov    DWORD PTR [ebp-0xc],ecx
10007d80:	mov    DWORD PTR [ebp-0x10],eax
10007d83:	mov    DWORD PTR [ebp-0x18],eax
10007d86:	mov    eax,DWORD PTR [eax+0x4]
10007d89:	lea    edi,[ebp-0x18]
10007d8c:	lea    esi,[ebp-0x10]
10007d8f:	mov    DWORD PTR [ebp-0x14],eax
10007d92:	call   0x10009d5c
10007d97:	test   al,al
10007d99:	jne    0x10007e52
10007d9f:	call   0x10013f4a
10007da4:	mov    ebx,DWORD PTR [ebp+0xc]
10007da7:	push   eax
10007da8:	lea    eax,[ebp-0x28]
10007dab:	push   eax
10007dac:	call   0x10009c92
10007db1:	mov    eax,ebx
10007db3:	mov    ecx,DWORD PTR [eax+0x4]
10007db6:	lea    edi,[ebp-0x20]
10007db9:	lea    esi,[ebp-0x28]
10007dbc:	mov    DWORD PTR [ebp-0x1c],ecx
10007dbf:	mov    DWORD PTR [ebp-0x20],eax
10007dc2:	call   0x10009d5c
10007dc7:	test   al,al
10007dc9:	jne    0x10007d71
10007dcb:	lea    esi,[ebp-0x10]
10007dce:	call   0x10013f4a
10007dd3:	mov    edi,eax
10007dd5:	lea    esi,[ebp-0x28]
10007dd8:	add    edi,0x1c
10007ddb:	call   0x10013f4a
10007de0:	mov    ebx,eax
10007de2:	add    ebx,0x1c
10007de5:	mov    eax,ebx
10007de7:	call   0x10004728
10007dec:	mov    esi,eax
10007dee:	mov    eax,edi
10007df0:	call   0x10004728
10007df5:	cmp    eax,esi
10007df7:	jne    0x10007d71
10007dfd:	and    DWORD PTR [ebp-0x4],0x0
10007e01:	mov    eax,edi
10007e03:	call   0x10004728
10007e08:	test   eax,eax
10007e0a:	je     0x10007e42
10007e0c:	push   DWORD PTR [ebp-0x4]
10007e0f:	mov    esi,ebx
10007e11:	call   0x10009e0a
10007e16:	push   DWORD PTR [ebp-0x4]
10007e19:	mov    esi,edi
10007e1b:	mov    DWORD PTR [ebp-0x8],eax
10007e1e:	call   0x10009e0a
10007e23:	mov    ecx,DWORD PTR [ebp-0x8]
10007e26:	call   0x10006617
10007e2b:	test   al,al
10007e2d:	je     0x10007d71
10007e33:	inc    DWORD PTR [ebp-0x4]
10007e36:	mov    eax,edi
10007e38:	call   0x10004728
10007e3d:	cmp    DWORD PTR [ebp-0x4],eax
10007e40:	jne    0x10007e0c
10007e42:	lea    esi,[ebp-0x10]
10007e45:	call   0x1000cdd4
10007e4a:	mov    eax,DWORD PTR [ebp+0x8]
10007e4d:	jmp    0x10007d86
10007e52:	mov    al,0x1
10007e54:	pop    edi
10007e55:	pop    esi
10007e56:	pop    ebx
10007e57:	leave  
10007e58:	ret    0x8
10007e5b:	push   0x3c
10007e5d:	mov    eax,0x100623dc
10007e62:	call   0x10059b8e
10007e67:	mov    edi,ecx
10007e69:	push   ebx
10007e6a:	push   edi
10007e6b:	mov    DWORD PTR [ebp-0x40],edi
10007e6e:	call   0x10007d5a
10007e73:	test   al,al
10007e75:	je     0x10007e7e
10007e77:	xor    al,al
10007e79:	jmp    0x10007f38
10007e7e:	call   0x100084b3
10007e83:	mov    eax,DWORD PTR [ebx+0x4]
10007e86:	mov    eax,DWORD PTR [eax]
10007e88:	mov    DWORD PTR [ebp-0x38],eax
10007e8b:	mov    DWORD PTR [ebp-0x3c],ebx
10007e8e:	mov    DWORD PTR [ebp-0x48],ebx
10007e91:	mov    eax,DWORD PTR [ebx+0x4]
10007e94:	lea    edi,[ebp-0x48]
10007e97:	lea    esi,[ebp-0x3c]
10007e9a:	mov    DWORD PTR [ebp-0x44],eax
10007e9d:	call   0x10009d5c
10007ea2:	test   al,al
10007ea4:	jne    0x10007f36
10007eaa:	xor    edi,edi
10007eac:	push   edi
10007ead:	mov    DWORD PTR [ebp-0x34],edi
10007eb0:	call   0x10013f4a
10007eb5:	push   eax
10007eb6:	lea    eax,[ebp-0x30]
10007eb9:	push   eax
10007eba:	mov    eax,ebx
10007ebc:	call   0x10008602
10007ec1:	mov    DWORD PTR [ebp-0x4],edi
10007ec4:	mov    edi,0x1006cd08
10007ec9:	jmp    0x10007f0c
10007ecb:	push   0x1
10007ecd:	lea    esi,[ebp-0x3c]
10007ed0:	call   0x10013f4a
10007ed5:	mov    edx,DWORD PTR [ebp-0x40]
10007ed8:	push   eax
10007ed9:	lea    ecx,[ebp-0x30]
10007edc:	call   0x10008097
10007ee1:	inc    DWORD PTR [ebp-0x34]
10007ee4:	or     DWORD PTR [ebp-0x4],0xffffffff
10007ee8:	push   0x0
10007eea:	push   0x1
10007eec:	lea    ecx,[ebp-0x30]
10007eef:	call   0x100012eb
10007ef4:	push   DWORD PTR [ebp-0x34]
10007ef7:	call   0x10013f4a
10007efc:	push   eax
10007efd:	lea    eax,[ebp-0x30]
10007f00:	push   eax
10007f01:	mov    eax,ebx
10007f03:	call   0x10008602
10007f08:	and    DWORD PTR [ebp-0x4],0x0
10007f0c:	push   edi
10007f0d:	lea    esi,[ebp-0x30]
10007f10:	call   0x10006639
10007f15:	test   al,al
10007f17:	pop    ecx
10007f18:	je     0x10007ecb
10007f1a:	or     DWORD PTR [ebp-0x4],0xffffffff
10007f1e:	push   0x0
10007f20:	push   0x1
10007f22:	mov    ecx,esi
10007f24:	call   0x100012eb
10007f29:	lea    esi,[ebp-0x3c]
10007f2c:	call   0x1000cdd4
10007f31:	jmp    0x10007e91
10007f36:	mov    al,0x1
10007f38:	call   0x10059c11
10007f3d:	ret    
10007f3e:	push   0x9c
10007f43:	mov    eax,0x100623ac
10007f48:	call   0x10059b8e
10007f4d:	mov    edi,DWORD PTR [ebp+0x8]
10007f50:	mov    ebx,ecx
10007f52:	mov    esi,edx
10007f54:	mov    DWORD PTR [ebp-0x34],ebx
10007f57:	mov    DWORD PTR [ebp-0x38],esi
10007f5a:	and    DWORD PTR [ebp-0x4],0x0
10007f5e:	push   0x0
10007f60:	lea    ecx,[ebp-0x30]
10007f63:	mov    DWORD PTR [ebp-0x18],0xf
10007f6a:	call   0x10001417
10007f6f:	push   0xffffffff
10007f71:	push   0x0
10007f73:	push   edi
10007f74:	lea    ecx,[ebp-0x30]
10007f77:	mov    BYTE PTR [ebp-0x4],0x1
10007f7b:	call   0x1000123c
10007f80:	mov    eax,DWORD PTR [ebp+0xc]
10007f83:	mov    DWORD PTR [ebp-0x14],eax
10007f86:	push   esi
10007f87:	lea    eax,[ebp-0x40]
10007f8a:	push   eax
10007f8b:	call   0x10009c92
10007f90:	mov    eax,DWORD PTR [ebx+0x4]
10007f93:	lea    edi,[ebp-0x48]
10007f96:	lea    esi,[ebp-0x40]
10007f99:	mov    DWORD PTR [ebp-0x44],eax
10007f9c:	mov    DWORD PTR [ebp-0x48],ebx
10007f9f:	call   0x10009d5c
10007fa4:	test   al,al
10007fa6:	je     0x10008051
10007fac:	sub    esp,0x10
10007faf:	mov    eax,esp
10007fb1:	xor    ecx,ecx
10007fb3:	mov    DWORD PTR [ebp-0x50],esp
10007fb6:	mov    DWORD PTR [eax+0x4],ecx
10007fb9:	mov    DWORD PTR [eax+0x8],ecx
10007fbc:	mov    DWORD PTR [eax+0xc],ecx
10007fbf:	sub    esp,0x1c
10007fc2:	mov    BYTE PTR [ebp-0x4],0x2
10007fc6:	mov    ecx,esp
10007fc8:	mov    DWORD PTR [ebp-0x44],esp
10007fcb:	push   DWORD PTR [ebp-0x38]
10007fce:	call   0x100011a2
10007fd3:	lea    edi,[ebp-0xa8]
10007fd9:	mov    BYTE PTR [ebp-0x4],0x1
10007fdd:	call   0x1000a944
10007fe2:	add    esp,0x2c
10007fe5:	lea    ecx,[ebp-0x7c]
10007fe8:	push   ecx
10007fe9:	mov    edi,eax
10007feb:	mov    BYTE PTR [ebp-0x4],0x3
10007fef:	call   0x1000a993
10007ff4:	lea    eax,[ebp-0x7c]
10007ff7:	push   eax
10007ff8:	push   ebx
10007ff9:	lea    ebx,[ebp-0x4c]
10007ffc:	mov    BYTE PTR [ebp-0x4],0x4
10008000:	call   0x10009931
10008005:	lea    esi,[ebp-0x60]
10008008:	call   0x100047e3
1000800d:	push   0x0
1000800f:	push   0x1
10008011:	lea    ecx,[ebp-0x7c]
10008014:	call   0x100012eb
10008019:	lea    esi,[ebp-0x8c]
1000801f:	mov    BYTE PTR [ebp-0x4],0x1
10008023:	call   0x100047e3
10008028:	push   0x0
1000802a:	push   0x1
1000802c:	lea    ecx,[ebp-0xa8]
10008032:	call   0x100012eb
10008037:	push   DWORD PTR [ebp-0x38]
1000803a:	mov    ebx,DWORD PTR [ebp-0x34]
1000803d:	lea    eax,[ebp-0x48]
10008040:	push   eax
10008041:	call   0x10009c92
10008046:	mov    ecx,DWORD PTR [eax]
10008048:	mov    eax,DWORD PTR [eax+0x4]
1000804b:	mov    DWORD PTR [ebp-0x40],ecx
1000804e:	mov    DWORD PTR [ebp-0x3c],eax
10008051:	lea    eax,[ebp-0x30]
10008054:	push   eax
10008055:	lea    esi,[ebp-0x40]
10008058:	call   0x10013f4a
1000805d:	add    eax,0x1c
10008060:	call   0x10009e29
10008065:	push   0x0
10008067:	push   0x1
10008069:	lea    ecx,[ebp-0x30]
1000806c:	call   0x100012eb
10008071:	push   0x0
10008073:	call   0x10042f82
10008078:	pop    ecx
10008079:	call   0x10059c11
1000807e:	ret    0x8
10008081:	push   esi
10008082:	lea    esi,[edi+0x1c]
10008085:	call   0x100047e3
1000808a:	push   0x0
1000808c:	push   0x1
1000808e:	mov    ecx,edi
10008090:	call   0x100012eb
10008095:	pop    esi
10008096:	ret    
10008097:	push   ebp
10008098:	mov    ebp,esp
1000809a:	and    esp,0xfffffff8
1000809d:	push   0xffffffff
1000809f:	push   0x10062353
100080a4:	mov    eax,fs:0x0
100080aa:	push   eax
100080ab:	sub    esp,0xd0
100080b1:	mov    eax,ds:0x1007e030
100080b6:	xor    eax,esp
100080b8:	mov    DWORD PTR [esp+0xc8],eax
100080bf:	push   ebx
100080c0:	push   esi
100080c1:	push   edi
100080c2:	mov    eax,ds:0x1007e030
100080c7:	xor    eax,esp
100080c9:	push   eax
100080ca:	lea    eax,[esp+0xe0]
100080d1:	mov    fs:0x0,eax
100080d7:	mov    eax,DWORD PTR [ebp+0x8]
100080da:	push   eax
100080db:	mov    DWORD PTR [esp+0x14],eax
100080df:	lea    eax,[esp+0x2c]
100080e3:	mov    ebx,edx
100080e5:	push   eax
100080e6:	mov    DWORD PTR [esp+0x28],ebx
100080ea:	mov    DWORD PTR [esp+0x2c],ecx
100080ee:	call   0x10009c92
100080f3:	mov    eax,DWORD PTR [ebx+0x4]
100080f6:	lea    edi,[esp+0x18]
100080fa:	lea    esi,[esp+0x28]
100080fe:	mov    DWORD PTR [esp+0x1c],eax
10008102:	mov    DWORD PTR [esp+0x18],ebx
10008106:	call   0x10009d5c
1000810b:	xor    ebx,ebx
1000810d:	test   al,al
1000810f:	jne    0x1000811a
10008111:	cmp    BYTE PTR [ebp+0xc],bl
10008114:	je     0x1000837a
1000811a:	push   DWORD PTR [esp+0x24]
1000811e:	lea    eax,[esp+0xa0]
10008125:	push   DWORD PTR [esp+0x14]
10008129:	push   eax
1000812a:	call   0x100086c9
1000812f:	add    esp,0xc
10008132:	mov    esi,DWORD PTR [esp+0x20]
10008136:	mov    DWORD PTR [esp+0xe8],ebx
1000813d:	mov    eax,DWORD PTR [esi+0xc]
10008140:	cmp    eax,ebx
10008142:	je     0x1000816c
10008144:	cmp    DWORD PTR [esp+0xb4],0x10
1000814c:	mov    ecx,DWORD PTR [esp+0xa0]
10008153:	jae    0x1000815c
10008155:	lea    ecx,[esp+0xa0]
1000815c:	push   DWORD PTR [esp+0xb0]
10008163:	mov    edi,DWORD PTR [esi+0x10]
10008166:	push   ecx
10008167:	call   0x1000783c
1000816c:	mov    DWORD PTR [esp+0x14],ebx
10008170:	mov    BYTE PTR [esp+0xe8],0x1
10008178:	cmp    DWORD PTR [esi+0xc],ebx
1000817b:	je     0x100081ab
1000817d:	push   0x8
1000817f:	call   0x1004358e
10008184:	cmp    eax,ebx
10008186:	pop    ecx
10008187:	je     0x1000819a
10008189:	mov    ecx,DWORD PTR [esi+0x10]
1000818c:	mov    edx,DWORD PTR [ecx+0x4]
1000818f:	add    edx,DWORD PTR [ecx]
10008191:	mov    DWORD PTR [eax+0x4],ebx
10008194:	mov    DWORD PTR [eax],edx
10008196:	mov    edi,eax
10008198:	jmp    0x1000819c
1000819a:	xor    edi,edi
1000819c:	cmp    edi,ebx
1000819e:	je     0x100081a7
100081a0:	push   ebx
100081a1:	call   0x10042f82
100081a6:	pop    ecx
100081a7:	mov    DWORD PTR [esp+0x14],edi
100081ab:	push   ebx
100081ac:	lea    ecx,[esp+0xbc]
100081b3:	mov    DWORD PTR [esp+0xd4],0xf
100081be:	call   0x10001417
100081c3:	push   0xffffffff
100081c5:	push   ebx
100081c6:	mov    BYTE PTR [esp+0xf0],0x2
100081ce:	push   DWORD PTR [esp+0x2c]
100081d2:	lea    ecx,[esp+0xc4]
100081d9:	call   0x1000123c
100081de:	mov    eax,DWORD PTR [esi+0x10]
100081e1:	mov    DWORD PTR [esp+0xd4],eax
100081e8:	mov    DWORD PTR [esp+0x38],ebx
100081ec:	mov    DWORD PTR [esp+0x3c],ebx
100081f0:	mov    DWORD PTR [esp+0x40],ebx
100081f4:	push   DWORD PTR [esp+0x10]
100081f8:	lea    eax,[esp+0x1c]
100081fc:	push   eax
100081fd:	mov    ebx,esi
100081ff:	mov    BYTE PTR [esp+0xf0],0x3
10008207:	call   0x10009c92
1000820c:	mov    eax,DWORD PTR [esi+0x4]
1000820f:	mov    DWORD PTR [esp+0x28],esi
10008213:	lea    edi,[esp+0x28]
10008217:	lea    esi,[esp+0x18]
1000821b:	mov    DWORD PTR [esp+0x2c],eax
1000821f:	call   0x10009d5c
10008224:	test   al,al
10008226:	je     0x100082f5
1000822c:	sub    esp,0x10
1000822f:	mov    eax,esp
10008231:	mov    DWORD PTR [esp+0x34],esp
10008235:	push   eax
10008236:	lea    ecx,[esp+0x48]
1000823a:	call   0x10009d77
1000823f:	sub    esp,0x1c
10008242:	mov    BYTE PTR [esp+0x114],0x4
1000824a:	mov    ecx,esp
1000824c:	mov    DWORD PTR [esp+0x54],esp
10008250:	push   DWORD PTR [esp+0x3c]
10008254:	call   0x100011a2
10008259:	lea    edi,[esp+0x9c]
10008260:	mov    BYTE PTR [esp+0x114],0x3
10008268:	call   0x1000a944
1000826d:	add    esp,0x2c
10008270:	lea    ecx,[esp+0x44]
10008274:	push   ecx
10008275:	mov    edi,eax
10008277:	mov    BYTE PTR [esp+0xec],0x5
1000827f:	call   0x1000a993
10008284:	mov    edi,DWORD PTR [esp+0x20]
10008288:	lea    eax,[esp+0x44]
1000828c:	push   eax
1000828d:	push   edi
1000828e:	lea    ebx,[esp+0x30]
10008292:	mov    BYTE PTR [esp+0xf0],0x6
1000829a:	call   0x10009931
1000829f:	lea    esi,[esp+0x60]
100082a3:	call   0x100047e3
100082a8:	push   0x0
100082aa:	push   0x1
100082ac:	lea    ecx,[esp+0x4c]
100082b0:	call   0x100012eb
100082b5:	lea    esi,[esp+0x8c]
100082bc:	mov    BYTE PTR [esp+0xe8],0x3
100082c4:	call   0x100047e3
100082c9:	push   0x0
100082cb:	push   0x1
100082cd:	lea    ecx,[esp+0x78]
100082d1:	call   0x100012eb
100082d6:	push   DWORD PTR [esp+0x10]
100082da:	lea    eax,[esp+0x2c]
100082de:	push   eax
100082df:	mov    ebx,edi
100082e1:	call   0x10009c92
100082e6:	mov    ecx,DWORD PTR [eax]
100082e8:	mov    eax,DWORD PTR [eax+0x4]
100082eb:	mov    DWORD PTR [esp+0x18],ecx
100082ef:	mov    DWORD PTR [esp+0x1c],eax
100082f3:	jmp    0x100082f7
100082f5:	mov    edi,ebx
100082f7:	lea    eax,[esp+0xb8]
100082fe:	push   eax
100082ff:	lea    esi,[esp+0x1c]
10008303:	call   0x10013f4a
10008308:	add    eax,0x1c
1000830b:	call   0x10009e29
10008310:	lea    esi,[esp+0x34]
10008314:	mov    BYTE PTR [esp+0xe8],0x2
1000831c:	call   0x100047e3
10008321:	xor    ebx,ebx
10008323:	cmp    DWORD PTR [edi+0xc],ebx
10008326:	je     0x10008350
10008328:	mov    esi,DWORD PTR [esp+0x14]
1000832c:	mov    eax,ebx
1000832e:	cmp    esi,eax
10008330:	mov    DWORD PTR [edi+0x10],ebx
10008333:	mov    DWORD PTR [esp+0x14],ebx
10008337:	je     0x10008340
10008339:	push   eax
1000833a:	call   0x10042f82
1000833f:	pop    ecx
10008340:	mov    DWORD PTR [edi+0x10],esi
10008343:	mov    eax,DWORD PTR [edi+0xc]
10008346:	cmp    eax,ebx
10008348:	je     0x10008350
1000834a:	push   esi
1000834b:	call   0x100078ae
10008350:	push   ebx
10008351:	push   0x1
10008353:	lea    ecx,[esp+0xc0]
1000835a:	call   0x100012eb
1000835f:	push   DWORD PTR [esp+0x14]
10008363:	call   0x10042f82
10008368:	pop    ecx
10008369:	push   ebx
1000836a:	push   0x1
1000836c:	lea    ecx,[esp+0xa4]
10008373:	call   0x100012eb
10008378:	mov    al,0x1
1000837a:	mov    ecx,DWORD PTR [esp+0xe0]
10008381:	mov    DWORD PTR fs:0x0,ecx
10008388:	pop    ecx
10008389:	pop    edi
1000838a:	pop    esi
1000838b:	pop    ebx
1000838c:	mov    ecx,DWORD PTR [esp+0xc8]
10008393:	xor    ecx,esp
10008395:	call   0x10042f87
1000839a:	mov    esp,ebp
1000839c:	pop    ebp
1000839d:	ret    0x8
100083a0:	push   ebp
100083a1:	mov    ebp,esp
100083a3:	and    esp,0xfffffff8
100083a6:	sub    esp,0x1c
100083a9:	push   ebx
100083aa:	mov    ebx,DWORD PTR [ebp+0x8]
100083ad:	push   esi
100083ae:	push   edi
100083af:	push   DWORD PTR [ebp+0xc]
100083b2:	lea    eax,[esp+0x14]
100083b6:	push   eax
100083b7:	call   0x10009c92
100083bc:	mov    eax,DWORD PTR [ebx+0x4]
100083bf:	lea    edi,[esp+0x18]
100083c3:	lea    esi,[esp+0x10]
100083c7:	mov    DWORD PTR [esp+0x1c],eax
100083cb:	mov    DWORD PTR [esp+0x18],ebx
100083cf:	call   0x10009d5c
100083d4:	test   al,al
100083d6:	je     0x100083df
100083d8:	xor    al,al
100083da:	jmp    0x100084aa
100083df:	lea    esi,[esp+0x10]
100083e3:	call   0x10013f4a
100083e8:	add    eax,0x1c
100083eb:	call   0x10004728
100083f0:	test   eax,eax
100083f2:	jbe    0x100083d8
100083f4:	call   0x10013f4a
100083f9:	push   0x0
100083fb:	lea    esi,[eax+0x1c]
100083fe:	call   0x10009e0a
10008403:	mov    esi,eax
10008405:	mov    eax,DWORD PTR [ebx+0xc]
10008408:	test   eax,eax
1000840a:	je     0x10008426
1000840c:	push   DWORD PTR [esi+0x1c]
1000840f:	call   0x10007911
10008414:	mov    edi,DWORD PTR [esi+0x1c]
10008417:	mov    eax,DWORD PTR [ebx+0xc]
1000841a:	push   0x0
1000841c:	push   0x1006cd08
10008421:	call   0x1000783c
10008426:	push   DWORD PTR [esi+0x1c]
10008429:	call   0x10042f82
1000842e:	pop    ecx
1000842f:	lea    esi,[esp+0x10]
10008433:	call   0x10013f4a
10008438:	mov    esi,eax
1000843a:	mov    edi,DWORD PTR [esi+0x20]
1000843d:	add    esi,0x1c
10008440:	cmp    edi,DWORD PTR [esi+0x8]
10008443:	jbe    0x1000844a
10008445:	call   0x100434a0
1000844a:	mov    DWORD PTR [esp+0x18],esi
1000844e:	lea    esi,[esp+0x10]
10008452:	mov    DWORD PTR [esp+0x1c],edi
10008456:	call   0x10013f4a
1000845b:	mov    esi,eax
1000845d:	lea    eax,[esp+0x20]
10008461:	push   eax
10008462:	xor    ecx,ecx
10008464:	lea    eax,[esp+0x1c]
10008468:	call   0x10009ed5
1000846d:	push   DWORD PTR [eax+0x4]
10008470:	add    esi,0x1c
10008473:	push   DWORD PTR [eax]
10008475:	lea    ebx,[esp+0x20]
10008479:	call   0x10009e83
1000847e:	lea    esi,[esp+0x10]
10008482:	call   0x10013f4a
10008487:	add    eax,0x1c
1000848a:	call   0x10004728
1000848f:	test   eax,eax
10008491:	jne    0x100084a8
10008493:	push   DWORD PTR [esp+0x14]
10008497:	lea    eax,[esp+0x24]
1000849b:	push   DWORD PTR [esp+0x14]
1000849f:	push   eax
100084a0:	push   DWORD PTR [ebp+0x8]
100084a3:	call   0x100099f2
100084a8:	mov    al,0x1
100084aa:	pop    edi
100084ab:	pop    esi
100084ac:	pop    ebx
100084ad:	mov    esp,ebp
100084af:	pop    ebp
100084b0:	ret    0x8
100084b3:	push   ebp
100084b4:	mov    ebp,esp
100084b6:	and    esp,0xfffffff8
100084b9:	sub    esp,0xc
100084bc:	cmp    DWORD PTR [edi+0x8],0x0
100084c0:	push   esi
100084c1:	je     0x100084e6
100084c3:	mov    DWORD PTR [esp+0x8],edi
100084c7:	mov    eax,DWORD PTR [edi+0x4]
100084ca:	mov    eax,DWORD PTR [eax]
100084cc:	lea    esi,[esp+0x8]
100084d0:	mov    DWORD PTR [esp+0xc],eax
100084d4:	call   0x10013f4a
100084d9:	push   eax
100084da:	push   edi
100084db:	call   0x100083a0
100084e0:	cmp    DWORD PTR [edi+0x8],0x0
100084e4:	jne    0x100084c7
100084e6:	pop    esi
100084e7:	mov    esp,ebp
100084e9:	pop    ebp
100084ea:	ret    
100084eb:	push   ebp
100084ec:	mov    ebp,esp
100084ee:	and    esp,0xfffffff8
100084f1:	push   0xffffffff
100084f3:	push   0x100622e7
100084f8:	mov    eax,fs:0x0
100084fe:	push   eax
100084ff:	sub    esp,0x38
10008502:	mov    eax,ds:0x1007e030
10008507:	xor    eax,esp
10008509:	mov    DWORD PTR [esp+0x30],eax
1000850d:	push   ebx
1000850e:	push   esi
1000850f:	push   edi
10008510:	mov    eax,ds:0x1007e030
10008515:	xor    eax,esp
10008517:	push   eax
10008518:	lea    eax,[esp+0x48]
1000851c:	mov    fs:0x0,eax
10008522:	mov    eax,DWORD PTR [ebp+0x8]
10008525:	push   eax
10008526:	lea    eax,[esp+0x18]
1000852a:	mov    ebx,edx
1000852c:	push   eax
1000852d:	mov    DWORD PTR [esp+0x18],ecx
10008531:	call   0x10009c92
10008536:	mov    eax,DWORD PTR [ebx+0x4]
10008539:	lea    edi,[esp+0x1c]
1000853d:	lea    esi,[esp+0x14]
10008541:	mov    DWORD PTR [esp+0x20],eax
10008545:	mov    DWORD PTR [esp+0x1c],ebx
10008549:	call   0x10009d5c
1000854e:	test   al,al
10008550:	je     0x10008559
10008552:	xor    al,al
10008554:	jmp    0x100085e2
10008559:	lea    esi,[esp+0x14]
1000855d:	call   0x10013f4a
10008562:	add    eax,0x1c
10008565:	call   0x10004728
1000856a:	test   eax,eax
1000856c:	jbe    0x10008552
1000856e:	call   0x10013f4a
10008573:	push   0x0
10008575:	lea    esi,[eax+0x1c]
10008578:	call   0x10009e0a
1000857d:	push   0xffffffff
1000857f:	push   0x0
10008581:	push   DWORD PTR [esp+0x18]
10008585:	mov    edi,eax
10008587:	mov    ecx,edi
10008589:	call   0x1000123c
1000858e:	lea    esi,[esp+0x14]
10008592:	call   0x10013f4a
10008597:	push   DWORD PTR [esp+0x10]
1000859b:	push   eax
1000859c:	lea    eax,[esp+0x2c]
100085a0:	push   eax
100085a1:	call   0x100086c9
100085a6:	add    esp,0xc
100085a9:	and    DWORD PTR [esp+0x50],0x0
100085ae:	mov    ebx,DWORD PTR [ebx+0xc]
100085b1:	test   ebx,ebx
100085b3:	je     0x100085d3
100085b5:	cmp    DWORD PTR [esp+0x3c],0x10
100085ba:	mov    eax,DWORD PTR [esp+0x28]
100085be:	jae    0x100085c4
100085c0:	lea    eax,[esp+0x28]
100085c4:	push   DWORD PTR [esp+0x38]
100085c8:	mov    edi,DWORD PTR [edi+0x1c]
100085cb:	push   eax
100085cc:	mov    eax,ebx
100085ce:	call   0x1000783c
100085d3:	push   0x0
100085d5:	push   0x1
100085d7:	lea    ecx,[esp+0x2c]
100085db:	call   0x100012eb
100085e0:	mov    al,0x1
100085e2:	mov    ecx,DWORD PTR [esp+0x48]
100085e6:	mov    DWORD PTR fs:0x0,ecx
100085ed:	pop    ecx
100085ee:	pop    edi
100085ef:	pop    esi
100085f0:	pop    ebx
100085f1:	mov    ecx,DWORD PTR [esp+0x30]
100085f5:	xor    ecx,esp
100085f7:	call   0x10042f87
100085fc:	mov    esp,ebp
100085fe:	pop    ebp
100085ff:	ret    0x4
10008602:	push   ebp
10008603:	mov    ebp,esp
10008605:	sub    esp,0x18
10008608:	and    DWORD PTR [ebp-0x8],0x0
1000860c:	push   ebx
1000860d:	push   esi
1000860e:	push   edi
1000860f:	push   DWORD PTR [ebp+0xc]
10008612:	mov    ebx,eax
10008614:	lea    eax,[ebp-0xc]
10008617:	push   eax
10008618:	call   0x10009c92
1000861d:	mov    eax,DWORD PTR [ebx+0x4]
10008620:	lea    edi,[ebp-0x14]
10008623:	lea    esi,[ebp-0xc]
10008626:	mov    DWORD PTR [ebp-0x10],eax
10008629:	mov    DWORD PTR [ebp-0x14],ebx
1000862c:	call   0x10009d5c
10008631:	test   al,al
10008633:	jne    0x10008664
10008635:	call   0x10013f4a
1000863a:	add    eax,0x1c
1000863d:	call   0x10004728
10008642:	cmp    DWORD PTR [ebp+0x10],eax
10008645:	jae    0x10008664
10008647:	push   DWORD PTR [ebp+0x10]
1000864a:	call   0x10013f4a
1000864f:	mov    esi,eax
10008651:	add    esi,0x1c
10008654:	call   0x10009e0a
10008659:	mov    ecx,DWORD PTR [ebp+0x8]
1000865c:	push   eax
1000865d:	call   0x100011a2
10008662:	jmp    0x10008671
10008664:	mov    ecx,DWORD PTR [ebp+0x8]
10008667:	push   0x1006cd08
1000866c:	call   0x100011c8
10008671:	mov    eax,DWORD PTR [ebp+0x8]
10008674:	pop    edi
10008675:	pop    esi
10008676:	pop    ebx
10008677:	leave  
10008678:	ret    0xc
1000867b:	push   ebp
1000867c:	mov    ebp,esp
1000867e:	sub    esp,0x18
10008681:	push   ebx
10008682:	push   esi
10008683:	push   edi
10008684:	push   DWORD PTR [ebp+0x8]
10008687:	mov    ebx,eax
10008689:	lea    eax,[ebp-0x14]
1000868c:	push   eax
1000868d:	call   0x10009c92
10008692:	mov    eax,DWORD PTR [ebx+0x4]
10008695:	lea    edi,[ebp-0xc]
10008698:	lea    esi,[ebp-0x14]
1000869b:	mov    DWORD PTR [ebp-0x8],eax
1000869e:	mov    DWORD PTR [ebp-0xc],ebx
100086a1:	call   0x10009d5c
100086a6:	test   al,al
100086a8:	jne    0x100086c0
100086aa:	call   0x10013f4a
100086af:	add    eax,0x1c
100086b2:	call   0x10004728
100086b7:	test   eax,eax
100086b9:	jbe    0x100086c0
100086bb:	xor    eax,eax
100086bd:	inc    eax
100086be:	jmp    0x100086c2
100086c0:	xor    eax,eax
100086c2:	pop    edi
100086c3:	pop    esi
100086c4:	pop    ebx
100086c5:	leave  
100086c6:	ret    0x4
100086c9:	push   0x3c
100086cb:	mov    eax,0x100622c4
100086d0:	call   0x10059b25
100086d5:	and    DWORD PTR [ebp-0x10],0x0
100086d9:	push   0x1006d3b4
100086de:	push   DWORD PTR [ebp+0xc]
100086e1:	lea    eax,[ebp-0x48]
100086e4:	push   eax
100086e5:	call   0x1000653b
100086ea:	push   DWORD PTR [ebp+0x10]
100086ed:	and    DWORD PTR [ebp-0x4],0x0
100086f1:	push   eax
100086f2:	lea    eax,[ebp-0x2c]
100086f5:	push   eax
100086f6:	call   0x10006581
100086fb:	push   0x1006d3b0
10008700:	push   eax
10008701:	push   DWORD PTR [ebp+0x8]
10008704:	mov    BYTE PTR [ebp-0x4],0x1
10008708:	call   0x1000653b
1000870d:	add    esp,0x24
10008710:	push   0x0
10008712:	push   0x1
10008714:	lea    ecx,[ebp-0x2c]
10008717:	call   0x100012eb
1000871c:	push   0x0
1000871e:	push   0x1
10008720:	lea    ecx,[ebp-0x48]
10008723:	call   0x100012eb
10008728:	mov    eax,DWORD PTR [ebp+0x8]
1000872b:	call   0x10059bfd
10008730:	ret    
10008731:	push   ebp
10008732:	mov    ebp,esp
10008734:	sub    esp,0x10
10008737:	mov    eax,DWORD PTR [ebx+0x4]
1000873a:	mov    eax,DWORD PTR [eax]
1000873c:	push   esi
1000873d:	push   edi
1000873e:	mov    DWORD PTR [ebp-0x4],eax
10008741:	mov    DWORD PTR [ebp-0x8],ebx
10008744:	mov    DWORD PTR [ebp-0x10],ebx
10008747:	mov    eax,DWORD PTR [ebx+0x4]
1000874a:	lea    edi,[ebp-0x10]
1000874d:	lea    esi,[ebp-0x8]
10008750:	mov    DWORD PTR [ebp-0xc],eax
10008753:	call   0x10009d5c
10008758:	test   al,al
1000875a:	jne    0x100087aa
1000875c:	xor    edi,edi
1000875e:	call   0x10013f4a
10008763:	add    eax,0x1c
10008766:	call   0x10004728
1000876b:	test   eax,eax
1000876d:	je     0x100087a0
1000876f:	lea    esi,[ebp-0x8]
10008772:	call   0x10013f4a
10008777:	push   edi
10008778:	lea    esi,[eax+0x1c]
1000877b:	call   0x10009e0a
10008780:	push   DWORD PTR [eax+0x1c]
10008783:	mov    eax,DWORD PTR [ebx+0xc]
10008786:	call   0x100078ae
1000878b:	lea    esi,[ebp-0x8]
1000878e:	inc    edi
1000878f:	call   0x10013f4a
10008794:	add    eax,0x1c
10008797:	call   0x10004728
1000879c:	cmp    edi,eax
1000879e:	jne    0x1000876f
100087a0:	lea    esi,[ebp-0x8]
100087a3:	call   0x1000cdd4
100087a8:	jmp    0x10008747
100087aa:	push   DWORD PTR [ebx+0x10]
100087ad:	mov    eax,DWORD PTR [ebx+0xc]
100087b0:	call   0x100078ae
100087b5:	pop    edi
100087b6:	pop    esi
100087b7:	leave  
100087b8:	ret    
100087b9:	push   0x0
100087bb:	mov    eax,0x1006377b
100087c0:	call   0x10059b25
100087c5:	mov    edi,DWORD PTR [ebp+0x8]
100087c8:	xor    ebx,ebx
100087ca:	mov    DWORD PTR [edi],ebx
100087cc:	mov    DWORD PTR [ebp-0x4],ebx
100087cf:	mov    DWORD PTR [edi+0x4],ebx
100087d2:	mov    DWORD PTR [edi+0x8],ebx
100087d5:	mov    BYTE PTR [ebp-0x4],0x2
100087d9:	lea    esi,[edi+0x18]
100087dc:	mov    DWORD PTR [edi+0x10],ebx
100087df:	mov    DWORD PTR [edi+0x14],ebx
100087e2:	call   0x10007b24
100087e7:	mov    BYTE PTR [edi+0x2c],bl
100087ea:	mov    DWORD PTR [edi+0x30],ebx
100087ed:	mov    DWORD PTR [edi+0x34],ebx
100087f0:	mov    DWORD PTR [edi+0x38],ebx
100087f3:	mov    eax,edi
100087f5:	call   0x10059bfd
100087fa:	ret    0x4
100087fd:	push   ebx
100087fe:	push   esi
100087ff:	mov    esi,ecx
10008801:	push   edi
10008802:	mov    edi,DWORD PTR [esi+0x30]
10008805:	mov    ebx,eax
10008807:	cmp    ebx,edi
10008809:	je     0x10008814
1000880b:	test   edi,edi
1000880d:	je     0x10008814
1000880f:	call   0x10009f5d
10008814:	mov    DWORD PTR [esi+0x30],ebx
10008817:	mov    edi,DWORD PTR [esi]
10008819:	test   edi,edi
1000881b:	je     0x10008829
1000881d:	push   DWORD PTR [edi]
1000881f:	mov    eax,ebx
10008821:	call   0x100078ae
10008826:	mov    DWORD PTR [edi+0x20],ebx
10008829:	mov    edi,DWORD PTR [esi+0x4]
1000882c:	test   edi,edi
1000882e:	je     0x1000883f
10008830:	mov    ebx,DWORD PTR [esi+0x30]
10008833:	push   DWORD PTR [edi]
10008835:	mov    eax,ebx
10008837:	call   0x100078ae
1000883c:	mov    DWORD PTR [edi+0x20],ebx
1000883f:	mov    edi,DWORD PTR [esi+0x8]
10008842:	test   edi,edi
10008844:	je     0x10008855
10008846:	mov    ebx,DWORD PTR [esi+0x30]
10008849:	push   DWORD PTR [edi]
1000884b:	mov    eax,ebx
1000884d:	call   0x100078ae
10008852:	mov    DWORD PTR [edi+0x20],ebx
10008855:	lea    ebx,[esi+0x18]
10008858:	mov    esi,DWORD PTR [esi+0x30]
1000885b:	test   esi,esi
1000885d:	mov    DWORD PTR [ebx+0xc],esi
10008860:	je     0x10008867
10008862:	call   0x10008731
10008867:	pop    edi
10008868:	pop    esi
10008869:	pop    ebx
1000886a:	ret    
1000886b:	mov    eax,DWORD PTR [ecx+0x30]
1000886e:	test   eax,eax
10008870:	je     0x10008876
10008872:	mov    eax,DWORD PTR [eax+0x18]
10008875:	ret    
10008876:	mov    eax,DWORD PTR [ecx+0x34]
10008879:	ret    
1000887a:	push   ebp
1000887b:	mov    ebp,esp
1000887d:	sub    esp,0x18
10008880:	mov    eax,ds:0x1007e030
10008885:	xor    eax,ebp
10008887:	mov    DWORD PTR [ebp-0x4],eax
1000888a:	mov    eax,DWORD PTR [ebp+0x8]
1000888d:	mov    eax,DWORD PTR [eax+0x38]
10008890:	test   eax,eax
10008892:	push   esi
10008893:	push   edi
10008894:	lea    esi,[ebp+0xc]
10008897:	lea    edi,[ebp-0x14]
1000889a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1000889b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1000889c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1000889d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1000889e:	pop    edi
1000889f:	pop    esi
100088a0:	jne    0x100088a6
100088a2:	xor    eax,eax
100088a4:	jmp    0x100088be
100088a6:	and    DWORD PTR [ebp-0x18],0x0
100088aa:	mov    ecx,DWORD PTR [eax]
100088ac:	lea    edx,[ebp-0x18]
100088af:	push   edx
100088b0:	lea    edx,[ebp-0x14]
100088b3:	push   edx
100088b4:	push   eax
100088b5:	call   DWORD PTR [ecx]
100088b7:	test   eax,eax
100088b9:	jl     0x100088a2
100088bb:	mov    eax,DWORD PTR [ebp-0x18]
100088be:	mov    ecx,DWORD PTR [ebp-0x4]
100088c1:	xor    ecx,ebp
100088c3:	call   0x10042f87
100088c8:	leave  
100088c9:	ret    0x14
100088cc:	push   ebp
100088cd:	mov    ebp,esp
100088cf:	sub    esp,0x14
100088d2:	mov    eax,ds:0x1007e030
100088d7:	xor    eax,ebp
100088d9:	mov    DWORD PTR [ebp-0x4],eax
100088dc:	push   esi
100088dd:	push   edi
100088de:	mov    eax,DWORD PTR [ebp+0x8]
100088e1:	lea    esi,[ebp+0xc]
100088e4:	lea    edi,[ebp-0x14]
100088e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
100088e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
100088e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
100088ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
100088eb:	sub    esp,0x10
100088ee:	mov    edi,esp
100088f0:	lea    esi,[ebp-0x14]
100088f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
100088f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
100088f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
100088f6:	push   eax
100088f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
100088f8:	call   0x1000887a
100088fd:	mov    ecx,DWORD PTR [ebp-0x4]
10008900:	pop    edi
10008901:	xor    ecx,ebp
10008903:	pop    esi
10008904:	call   0x10042f87
10008909:	leave  
1000890a:	ret    0x14
1000890d:	push   0x8
1000890f:	mov    eax,0x10063da5
10008914:	call   0x10059b25
10008919:	push   0x40
1000891b:	call   0x1004358e
10008920:	pop    ecx
10008921:	mov    DWORD PTR [ebp-0x10],eax
10008924:	and    DWORD PTR [ebp-0x4],0x0
10008928:	test   eax,eax
1000892a:	je     0x10008939
1000892c:	push   eax
1000892d:	call   0x100087b9
10008932:	mov    esi,eax
10008934:	mov    DWORD PTR [ebp-0x10],esi
10008937:	jmp    0x10008940
10008939:	and    DWORD PTR [ebp-0x10],0x0
1000893d:	mov    esi,DWORD PTR [ebp-0x10]
10008940:	mov    DWORD PTR [ebp-0x14],esi
10008943:	mov    eax,DWORD PTR [ebp+0x8]
10008946:	mov    DWORD PTR [ebp-0x4],0x1
1000894d:	mov    ecx,DWORD PTR [eax]
1000894f:	call   0x10007a86
10008954:	mov    ebx,eax
10008956:	mov    edi,esi
10008958:	call   0x10009d24
1000895d:	mov    eax,DWORD PTR [ebp+0x8]
10008960:	mov    ecx,DWORD PTR [eax+0x4]
10008963:	call   0x10007a86
10008968:	lea    edi,[esi+0x4]
1000896b:	mov    ebx,eax
1000896d:	call   0x10009d24
10008972:	mov    eax,DWORD PTR [ebp+0x8]
10008975:	mov    ecx,DWORD PTR [eax+0x8]
10008978:	call   0x10007a86
1000897d:	lea    edi,[esi+0x8]
10008980:	mov    ebx,eax
10008982:	call   0x10009d24
10008987:	mov    ebx,DWORD PTR [ebp+0x8]
1000898a:	lea    eax,[ebx+0x18]
1000898d:	push   eax
1000898e:	lea    eax,[esi+0x18]
10008991:	push   eax
10008992:	call   0x10007c16
10008997:	mov    al,BYTE PTR [ebx+0x2c]
1000899a:	mov    BYTE PTR [esi+0x2c],al
1000899d:	mov    eax,DWORD PTR [ebx+0x10]
100089a0:	mov    DWORD PTR [esi+0x10],eax
100089a3:	mov    eax,DWORD PTR [ebx+0x14]
100089a6:	mov    DWORD PTR [esi+0x14],eax
100089a9:	mov    edi,DWORD PTR [ebx+0x38]
100089ac:	lea    eax,[esi+0x38]
100089af:	cmp    DWORD PTR [eax],edi
100089b1:	je     0x100089bd
100089b3:	mov    esi,eax
100089b5:	call   0x1000777b
100089ba:	mov    esi,DWORD PTR [ebp-0x10]
100089bd:	mov    ecx,ebx
100089bf:	call   0x1000886b
100089c4:	mov    DWORD PTR [esi+0x34],eax
100089c7:	mov    eax,esi
100089c9:	call   0x10059bfd
100089ce:	ret    0x4
100089d1:	push   0x44
100089d3:	mov    eax,0x10062f5e
100089d8:	call   0x10059b25
100089dd:	and    DWORD PTR [ebp-0x14],0x0
100089e1:	mov    ebx,DWORD PTR [ebp+0xc]
100089e4:	mov    eax,DWORD PTR [ebx]
100089e6:	lea    ecx,[ebp-0x30]
100089e9:	push   ecx
100089ea:	call   0x100199c9
100089ef:	and    DWORD PTR [ebp-0x4],0x0
100089f3:	mov    edi,DWORD PTR [ebp+0x8]
100089f6:	mov    esi,DWORD PTR [edi]
100089f8:	push   eax
100089f9:	mov    DWORD PTR [ebp-0x14],0x1
10008a00:	call   0x10007ac2
10008a05:	test   al,al
10008a07:	setne  BYTE PTR [ebp-0xd]
10008a0b:	or     DWORD PTR [ebp-0x4],0xffffffff
10008a0f:	xor    esi,esi
10008a11:	push   0x0
10008a13:	inc    esi
10008a14:	push   esi
10008a15:	lea    ecx,[ebp-0x30]
10008a18:	call   0x100012eb
10008a1d:	mov    eax,DWORD PTR [ebx+0x4]
10008a20:	lea    ecx,[ebp-0x30]
10008a23:	push   ecx
10008a24:	call   0x100199c9
10008a29:	mov    DWORD PTR [ebp-0x4],esi
10008a2c:	mov    esi,DWORD PTR [edi+0x4]
10008a2f:	push   eax
10008a30:	mov    DWORD PTR [ebp-0x14],0x2
10008a37:	call   0x10007ac2
10008a3c:	test   al,al
10008a3e:	jne    0x10008a48
10008a40:	cmp    BYTE PTR [ebp-0xd],al
10008a43:	mov    BYTE PTR [ebp-0xd],al
10008a46:	je     0x10008a4c
10008a48:	mov    BYTE PTR [ebp-0xd],0x1
10008a4c:	or     DWORD PTR [ebp-0x4],0xffffffff
10008a50:	push   0x0
10008a52:	push   0x1
10008a54:	lea    ecx,[ebp-0x30]
10008a57:	call   0x100012eb
10008a5c:	mov    eax,DWORD PTR [ebx+0x8]
10008a5f:	lea    ecx,[ebp-0x4c]
10008a62:	push   ecx
10008a63:	call   0x100199c9
10008a68:	mov    DWORD PTR [ebp-0x4],0x2
10008a6f:	mov    esi,DWORD PTR [edi+0x8]
10008a72:	push   eax
10008a73:	mov    DWORD PTR [ebp-0x14],0x4
10008a7a:	call   0x10007ac2
10008a7f:	test   al,al
10008a81:	jne    0x10008a8b
10008a83:	cmp    BYTE PTR [ebp-0xd],al
10008a86:	mov    BYTE PTR [ebp-0xd],al
10008a89:	je     0x10008a8f
10008a8b:	mov    BYTE PTR [ebp-0xd],0x1
10008a8f:	or     DWORD PTR [ebp-0x4],0xffffffff
10008a93:	push   0x0
10008a95:	push   0x1
10008a97:	lea    ecx,[ebp-0x4c]
10008a9a:	call   0x100012eb
10008a9f:	add    ebx,0x18
10008aa2:	lea    ecx,[edi+0x18]
10008aa5:	call   0x10007e5b
10008aaa:	test   al,al
10008aac:	jne    0x10008ab7
10008aae:	cmp    BYTE PTR [ebp-0xd],al
10008ab1:	jne    0x10008ab7
10008ab3:	xor    bl,bl
10008ab5:	jmp    0x10008ab9
10008ab7:	mov    bl,0x1
10008ab9:	mov    edx,DWORD PTR [ebp+0xc]
10008abc:	mov    al,BYTE PTR [edx+0x2c]
10008abf:	cmp    BYTE PTR [edi+0x2c],al
10008ac2:	je     0x10008ac9
10008ac4:	mov    bl,0x1
10008ac6:	mov    BYTE PTR [edi+0x2c],al
10008ac9:	mov    eax,DWORD PTR [edx+0x10]
10008acc:	mov    ecx,DWORD PTR [edi+0x10]
10008acf:	cmp    ecx,eax
10008ad1:	mov    esi,DWORD PTR [edx+0x14]
10008ad4:	jne    0x10008add
10008ad6:	mov    ecx,DWORD PTR [edi+0x14]
10008ad9:	cmp    ecx,esi
10008adb:	je     0x10008ae5
10008add:	mov    bl,0x1
10008adf:	mov    DWORD PTR [edi+0x10],eax
10008ae2:	mov    DWORD PTR [edi+0x14],esi
10008ae5:	mov    eax,DWORD PTR [edx+0x38]
10008ae8:	lea    esi,[edi+0x38]
10008aeb:	cmp    DWORD PTR [esi],eax
10008aed:	je     0x10008afe
10008aef:	mov    edi,eax
10008af1:	mov    bl,0x1
10008af3:	call   0x1000777b
10008af8:	mov    edi,DWORD PTR [ebp+0x8]
10008afb:	mov    edx,DWORD PTR [ebp+0xc]
10008afe:	cmp    DWORD PTR [edi+0x30],0x0
10008b02:	jne    0x10008b24
10008b04:	mov    ecx,edx
10008b06:	call   0x1000886b
10008b0b:	mov    ecx,edi
10008b0d:	mov    esi,eax
10008b0f:	call   0x1000886b
10008b14:	cmp    esi,eax
10008b16:	je     0x10008b24
10008b18:	mov    ecx,edx
10008b1a:	mov    bl,0x1
10008b1c:	call   0x1000886b
10008b21:	mov    DWORD PTR [edi+0x34],eax
10008b24:	mov    al,bl
10008b26:	call   0x10059bfd
10008b2b:	ret    0x8
10008b2e:	push   0x74
10008b30:	mov    eax,0x1006058f
10008b35:	call   0x10059b25
10008b3a:	mov    eax,DWORD PTR [esi]
10008b3c:	lea    ecx,[ebp-0x44]
10008b3f:	push   ecx
10008b40:	call   0x100199c9
10008b45:	mov    ebx,eax
10008b47:	and    DWORD PTR [ebp-0x4],0x0
10008b4b:	mov    eax,DWORD PTR [edi]
10008b4d:	lea    ecx,[ebp-0x28]
10008b50:	push   ecx
10008b51:	call   0x100199c9
10008b56:	mov    ecx,ebx
10008b58:	mov    BYTE PTR [ebp-0x4],0x1
10008b5c:	call   0x10006617
10008b61:	mov    bl,al
10008b63:	neg    bl
10008b65:	push   0x0
10008b67:	sbb    bl,bl
10008b69:	push   0x1
10008b6b:	lea    ecx,[ebp-0x28]
10008b6e:	inc    bl
10008b70:	call   0x100012eb
10008b75:	or     DWORD PTR [ebp-0x4],0xffffffff
10008b79:	push   0x0
10008b7b:	push   0x1
10008b7d:	lea    ecx,[ebp-0x44]
10008b80:	call   0x100012eb
10008b85:	test   bl,bl
10008b87:	je     0x10008b90
10008b89:	xor    al,al
10008b8b:	jmp    0x10008c77
10008b90:	mov    eax,DWORD PTR [esi+0x4]
10008b93:	lea    ecx,[ebp-0x28]
10008b96:	push   ecx
10008b97:	call   0x100199c9
10008b9c:	mov    ebx,eax
10008b9e:	lea    ecx,[ebp-0x44]
10008ba1:	mov    DWORD PTR [ebp-0x4],0x2
10008ba8:	mov    eax,DWORD PTR [edi+0x4]
10008bab:	push   ecx
10008bac:	call   0x100199c9
10008bb1:	mov    ecx,ebx
10008bb3:	mov    BYTE PTR [ebp-0x4],0x3
10008bb7:	call   0x10006617
10008bbc:	mov    bl,al
10008bbe:	neg    bl
10008bc0:	push   0x0
10008bc2:	sbb    bl,bl
10008bc4:	push   0x1
10008bc6:	lea    ecx,[ebp-0x44]
10008bc9:	inc    bl
10008bcb:	call   0x100012eb
10008bd0:	or     DWORD PTR [ebp-0x4],0xffffffff
10008bd4:	push   0x0
10008bd6:	push   0x1
10008bd8:	lea    ecx,[ebp-0x28]
10008bdb:	call   0x100012eb
10008be0:	test   bl,bl
10008be2:	jne    0x10008b89
10008be4:	mov    eax,DWORD PTR [esi+0x8]
10008be7:	lea    ecx,[ebp-0x7c]
10008bea:	push   ecx
10008beb:	call   0x100199c9
10008bf0:	mov    ebx,eax
10008bf2:	lea    ecx,[ebp-0x60]
10008bf5:	mov    DWORD PTR [ebp-0x4],0x4
10008bfc:	mov    eax,DWORD PTR [edi+0x8]
10008bff:	push   ecx
10008c00:	call   0x100199c9
10008c05:	mov    ecx,ebx
10008c07:	mov    BYTE PTR [ebp-0x4],0x5
10008c0b:	call   0x10006617
10008c10:	mov    bl,al
10008c12:	neg    bl
10008c14:	push   0x0
10008c16:	sbb    bl,bl
10008c18:	push   0x1
10008c1a:	lea    ecx,[ebp-0x60]
10008c1d:	inc    bl
10008c1f:	call   0x100012eb
10008c24:	or     DWORD PTR [ebp-0x4],0xffffffff
10008c28:	push   0x0
10008c2a:	push   0x1
10008c2c:	lea    ecx,[ebp-0x7c]
10008c2f:	call   0x100012eb
10008c34:	test   bl,bl
10008c36:	jne    0x10008b89
10008c3c:	lea    eax,[esi+0x18]
10008c3f:	push   eax
10008c40:	lea    eax,[edi+0x18]
10008c43:	push   eax
10008c44:	call   0x10007d5a
10008c49:	test   al,al
10008c4b:	je     0x10008b89
10008c51:	mov    al,BYTE PTR [edi+0x2c]
10008c54:	cmp    al,BYTE PTR [esi+0x2c]
10008c57:	jne    0x10008b89
10008c5d:	mov    eax,DWORD PTR [edi+0x10]
10008c60:	cmp    eax,DWORD PTR [esi+0x10]
10008c63:	jne    0x10008b89
10008c69:	mov    eax,DWORD PTR [edi+0x14]
10008c6c:	cmp    eax,DWORD PTR [esi+0x14]
10008c6f:	jne    0x10008b89
10008c75:	mov    al,0x1
10008c77:	call   0x10059bfd
10008c7c:	ret    
10008c7d:	push   ebp
10008c7e:	mov    ebp,esp
10008c80:	and    esp,0xfffffff8
10008c83:	push   0xffffffff
10008c85:	push   0x10062286
10008c8a:	mov    eax,fs:0x0
10008c90:	push   eax
10008c91:	sub    esp,0xc0
10008c97:	mov    eax,ds:0x1007e030
10008c9c:	xor    eax,esp
10008c9e:	mov    DWORD PTR [esp+0xb8],eax
10008ca5:	push   ebx
10008ca6:	push   esi
10008ca7:	push   edi
10008ca8:	mov    eax,ds:0x1007e030
10008cad:	xor    eax,esp
10008caf:	push   eax
10008cb0:	lea    eax,[esp+0xd0]
10008cb7:	mov    fs:0x0,eax
10008cbd:	mov    eax,DWORD PTR [ebp+0x8]
10008cc0:	xor    edi,edi
10008cc2:	mov    DWORD PTR [esp+0x1c],eax
10008cc6:	mov    DWORD PTR [esp+0x10],edi
10008cca:	mov    eax,DWORD PTR [eax+0x4]
10008ccd:	cmp    eax,edi
10008ccf:	mov    DWORD PTR [esp+0x18],ecx
10008cd3:	je     0x10008cef
10008cd5:	lea    ecx,[esp+0x3c]
10008cd9:	push   ecx
10008cda:	call   0x100199c9
10008cdf:	xor    ebx,ebx
10008ce1:	inc    ebx
10008ce2:	mov    DWORD PTR [esp+0xd8],edi
10008ce9:	mov    DWORD PTR [esp+0x10],ebx
10008ced:	jmp    0x10008d0f
10008cef:	push   0x1006cd08
10008cf4:	lea    ecx,[esp+0x24]
10008cf8:	call   0x100011c8
10008cfd:	xor    ebx,ebx
10008cff:	inc    ebx
10008d00:	mov    DWORD PTR [esp+0xd8],ebx
10008d07:	mov    DWORD PTR [esp+0x10],0x2
10008d0f:	push   eax
10008d10:	lea    ecx,[esp+0xb0]
10008d17:	call   0x100011a2
10008d1c:	mov    DWORD PTR [esp+0xd8],0x2
10008d27:	test   BYTE PTR [esp+0x10],0x2
10008d2c:	je     0x10008d3e
10008d2e:	and    DWORD PTR [esp+0x10],0xfffffffd
10008d33:	push   edi
10008d34:	push   ebx
10008d35:	lea    ecx,[esp+0x28]
10008d39:	call   0x100012eb
10008d3e:	mov    BYTE PTR [esp+0xd8],0x4
10008d46:	test   BYTE PTR [esp+0x10],bl
10008d4a:	je     0x10008d57
10008d4c:	push   edi
10008d4d:	push   ebx
10008d4e:	lea    ecx,[esp+0x44]
10008d52:	call   0x100012eb
10008d57:	push   0x1006cd08
10008d5c:	lea    esi,[esp+0xb0]
10008d63:	call   0x10006639
10008d68:	test   al,al
10008d6a:	pop    ecx
10008d6b:	je     0x10008d80
10008d6d:	mov    ecx,DWORD PTR [esp+0x18]
10008d71:	push   0x1006cd08
10008d76:	call   0x100011c8
10008d7b:	jmp    0x10008fef
10008d80:	push   edi
10008d81:	lea    ecx,[esp+0x94]
10008d88:	mov    DWORD PTR [esp+0xac],0xf
10008d93:	call   0x10001417
10008d98:	push   0x19f28dca
10008d9d:	push   0x1006d3b8
10008da2:	mov    BYTE PTR [esp+0xe0],0x5
10008daa:	call   0x100042bd
10008daf:	push   0x5739aa8e
10008db4:	push   eax
10008db5:	call   0x100042bd
10008dba:	mov    ecx,DWORD PTR [esp+0xc0]
10008dc1:	add    esp,0x10
10008dc4:	cmp    DWORD PTR [esp+0xc4],0x10
10008dcc:	jb     0x10008dd4
10008dce:	mov    DWORD PTR [esp+0x10],ecx
10008dd2:	jmp    0x10008ddf
10008dd4:	lea    edx,[esp+0xb0]
10008ddb:	mov    DWORD PTR [esp+0x10],edx
10008ddf:	cmp    DWORD PTR [esp+0xc4],0x10
10008de7:	jae    0x10008df0
10008de9:	lea    ecx,[esp+0xb0]
10008df0:	push   eax
10008df1:	push   0x7
10008df3:	mov    esi,0x1006d3e4
10008df8:	push   esi
10008df9:	mov    DWORD PTR [esp+0x20],ecx
10008dfd:	call   0x100042cf
10008e02:	add    esp,0xc
10008e05:	push   eax
10008e06:	push   DWORD PTR [esp+0x14]
10008e0a:	call   0x10045b20
10008e0f:	cmp    eax,DWORD PTR [esp+0x1c]
10008e13:	pop    ecx
10008e14:	pop    ecx
10008e15:	jne    0x10008e33
10008e17:	push   0xffffffff
10008e19:	push   edi
10008e1a:	lea    eax,[esp+0xb4]
10008e21:	push   eax
10008e22:	lea    ecx,[esp+0x9c]
10008e29:	call   0x1000123c
10008e2e:	jmp    0x10008fd0
10008e33:	push   0x1487e13e
10008e38:	push   0x1006d3ec
10008e3d:	call   0x100042bd
10008e42:	push   eax
10008e43:	push   0x4
10008e45:	push   0x1006d414
10008e4a:	call   0x100042cf
10008e4f:	add    esp,0x14
10008e52:	push   eax
10008e53:	lea    ecx,[esp+0x24]
10008e57:	call   0x100011c8
10008e5c:	push   edi
10008e5d:	lea    eax,[esp+0x24]
10008e61:	push   eax
10008e62:	lea    eax,[esp+0x60]
10008e66:	push   eax
10008e67:	mov    eax,DWORD PTR [esp+0x28]
10008e6b:	add    eax,0x18
10008e6e:	mov    BYTE PTR [esp+0xe4],0x6
10008e76:	call   0x10008602
10008e7b:	lea    ecx,[esp+0xac]
10008e82:	push   ecx
10008e83:	push   eax
10008e84:	lea    eax,[esp+0x44]
10008e88:	push   eax
10008e89:	mov    BYTE PTR [esp+0xe4],0x7
10008e91:	call   0x10006581
10008e96:	add    esp,0xc
10008e99:	push   0xffffffff
10008e9b:	push   edi
10008e9c:	push   eax
10008e9d:	lea    ecx,[esp+0x9c]
10008ea4:	mov    BYTE PTR [esp+0xe4],0x8
10008eac:	call   0x1000123c
10008eb1:	push   edi
10008eb2:	push   ebx
10008eb3:	lea    ecx,[esp+0x44]
10008eb7:	call   0x100012eb
10008ebc:	push   edi
10008ebd:	push   ebx
10008ebe:	lea    ecx,[esp+0x60]
10008ec2:	call   0x100012eb
10008ec7:	push   edi
10008ec8:	push   ebx
10008ec9:	lea    ecx,[esp+0x28]
10008ecd:	mov    BYTE PTR [esp+0xe0],0x5
10008ed5:	call   0x100012eb
10008eda:	push   0x3f0452a2
10008edf:	push   0x1006d41c
10008ee4:	call   0x100042bd
10008ee9:	push   0x6f7e75a4
10008eee:	push   eax
10008eef:	call   0x100042bd
10008ef4:	push   0x68d22208
10008ef9:	push   eax
10008efa:	call   0x100042bd
10008eff:	mov    ecx,DWORD PTR [esp+0xac]
10008f06:	add    esp,0x18
10008f09:	cmp    DWORD PTR [esp+0xa8],0x10
10008f11:	jb     0x10008f19
10008f13:	mov    DWORD PTR [esp+0x14],ecx
10008f17:	jmp    0x10008f24
10008f19:	lea    edx,[esp+0x94]
10008f20:	mov    DWORD PTR [esp+0x14],edx
10008f24:	cmp    DWORD PTR [esp+0xa8],0x10
10008f2c:	jae    0x10008f35
10008f2e:	lea    ecx,[esp+0x94]
10008f35:	push   eax
10008f36:	push   0x7
10008f38:	push   esi
10008f39:	mov    DWORD PTR [esp+0x1c],ecx
10008f3d:	call   0x100042cf
10008f42:	add    esp,0xc
10008f45:	push   eax
10008f46:	push   DWORD PTR [esp+0x18]
10008f4a:	call   0x10045b20
10008f4f:	cmp    eax,DWORD PTR [esp+0x18]
10008f53:	pop    ecx
10008f54:	pop    ecx
10008f55:	je     0x10008fd0
10008f57:	push   0x27b6db5e
10008f5c:	push   0x1006d45c
10008f61:	call   0x100042bd
10008f66:	push   eax
10008f67:	push   0x7
10008f69:	push   esi
10008f6a:	call   0x100042cf
10008f6f:	add    esp,0x14
10008f72:	push   eax
10008f73:	lea    ecx,[esp+0x78]
10008f77:	call   0x100011c8
10008f7c:	lea    ecx,[esp+0x90]
10008f83:	push   ecx
10008f84:	push   eax
10008f85:	lea    eax,[esp+0x60]
10008f89:	push   eax
10008f8a:	mov    BYTE PTR [esp+0xe4],0x9
10008f92:	call   0x10006581
10008f97:	add    esp,0xc
10008f9a:	push   0xffffffff
10008f9c:	push   edi
10008f9d:	push   eax
10008f9e:	lea    ecx,[esp+0x9c]
10008fa5:	mov    BYTE PTR [esp+0xe4],0xa
10008fad:	call   0x1000123c
10008fb2:	push   edi
10008fb3:	push   ebx
10008fb4:	lea    ecx,[esp+0x60]
10008fb8:	call   0x100012eb
10008fbd:	push   edi
10008fbe:	push   ebx
10008fbf:	lea    ecx,[esp+0x7c]
10008fc3:	mov    BYTE PTR [esp+0xe0],0x5
10008fcb:	call   0x100012eb
10008fd0:	mov    ecx,DWORD PTR [esp+0x18]
10008fd4:	lea    eax,[esp+0x90]
10008fdb:	push   eax
10008fdc:	call   0x100011a2
10008fe1:	push   edi
10008fe2:	push   ebx
10008fe3:	lea    ecx,[esp+0x98]
10008fea:	call   0x100012eb
10008fef:	push   edi
10008ff0:	push   ebx
10008ff1:	lea    ecx,[esp+0xb4]
10008ff8:	call   0x100012eb
10008ffd:	mov    eax,DWORD PTR [esp+0x18]
10009001:	mov    ecx,DWORD PTR [esp+0xd0]
10009008:	mov    DWORD PTR fs:0x0,ecx
1000900f:	pop    ecx
10009010:	pop    edi
10009011:	pop    esi
10009012:	pop    ebx
10009013:	mov    ecx,DWORD PTR [esp+0xb8]
1000901a:	xor    ecx,esp
1000901c:	call   0x10042f87
10009021:	mov    esp,ebp
10009023:	pop    ebp
10009024:	ret    0x4
10009027:	push   0x0
10009029:	mov    eax,0x10063742
1000902e:	call   0x10059b25
10009033:	mov    edi,DWORD PTR [ebp+0x8]
10009036:	xor    ebx,ebx
10009038:	mov    DWORD PTR [edi],ebx
1000903a:	mov    DWORD PTR [ebp-0x4],ebx
1000903d:	mov    DWORD PTR [edi+0x4],ebx
10009040:	mov    DWORD PTR [edi+0x8],ebx
10009043:	mov    DWORD PTR [edi+0xc],ebx
10009046:	mov    BYTE PTR [ebp-0x4],0x3
1000904a:	lea    esi,[edi+0x20]
1000904d:	mov    DWORD PTR [edi+0x10],ebx
10009050:	mov    DWORD PTR [edi+0x14],ebx
10009053:	mov    DWORD PTR [edi+0x18],ebx
10009056:	mov    DWORD PTR [edi+0x1c],ebx
10009059:	call   0x10007b24
1000905e:	mov    DWORD PTR [edi+0x34],ebx
10009061:	mov    DWORD PTR [edi+0x38],ebx
10009064:	mov    eax,edi
10009066:	call   0x10059bfd
1000906b:	ret    0x4
1000906e:	push   ebx
1000906f:	push   esi
10009070:	mov    esi,ecx
10009072:	push   edi
10009073:	mov    edi,DWORD PTR [esi+0x34]
10009076:	mov    ebx,eax
10009078:	cmp    ebx,edi
1000907a:	je     0x10009085
1000907c:	test   edi,edi
1000907e:	je     0x10009085
10009080:	call   0x10009f5d
10009085:	mov    DWORD PTR [esi+0x34],ebx
10009088:	mov    edi,DWORD PTR [esi]
1000908a:	test   edi,edi
1000908c:	je     0x1000909a
1000908e:	push   DWORD PTR [edi]
10009090:	mov    eax,ebx
10009092:	call   0x100078ae
10009097:	mov    DWORD PTR [edi+0x20],ebx
1000909a:	mov    edi,DWORD PTR [esi+0x4]
1000909d:	test   edi,edi
1000909f:	je     0x100090b0
100090a1:	mov    ebx,DWORD PTR [esi+0x34]
100090a4:	push   DWORD PTR [edi]
100090a6:	mov    eax,ebx
100090a8:	call   0x100078ae
100090ad:	mov    DWORD PTR [edi+0x20],ebx
100090b0:	mov    edi,DWORD PTR [esi+0x8]
100090b3:	test   edi,edi
100090b5:	je     0x100090c6
100090b7:	mov    ebx,DWORD PTR [esi+0x34]
100090ba:	push   DWORD PTR [edi]
100090bc:	mov    eax,ebx
100090be:	call   0x100078ae
100090c3:	mov    DWORD PTR [edi+0x20],ebx
100090c6:	lea    ebx,[esi+0x20]
100090c9:	mov    esi,DWORD PTR [esi+0x34]
100090cc:	test   esi,esi
100090ce:	mov    DWORD PTR [ebx+0xc],esi
100090d1:	je     0x100090d8
100090d3:	call   0x10008731
100090d8:	pop    edi
100090d9:	pop    esi
100090da:	pop    ebx
100090db:	ret    
100090dc:	push   0xc
100090de:	mov    eax,0x100621e3
100090e3:	call   0x10059b25
100090e8:	mov    esi,ecx
100090ea:	mov    DWORD PTR [ebp-0x14],ebx
100090ed:	and    DWORD PTR [ebp-0x4],0x0
100090f1:	mov    eax,DWORD PTR [esi+0x34]
100090f4:	mov    edi,DWORD PTR [ebx+0x18]
100090f7:	test   edi,edi
100090f9:	mov    ecx,DWORD PTR [eax+0x18]
100090fc:	mov    DWORD PTR [ebp-0x10],ecx
100090ff:	je     0x10009109
10009101:	push   DWORD PTR [ebx+0x14]
10009104:	call   0x10007814
10009109:	mov    eax,DWORD PTR [esi+0xc]
1000910c:	test   eax,eax
1000910e:	je     0x1000911d
10009110:	mov    edi,DWORD PTR [esi+0x34]
10009113:	mov    ecx,DWORD PTR [ebp-0x10]
10009116:	mov    esi,eax
10009118:	call   0x10007b11
1000911d:	mov    edi,ebx
1000911f:	call   0x10009f5d
10009124:	call   0x10059bfd
10009129:	ret    
1000912a:	mov    eax,DWORD PTR [ecx+0x34]
1000912d:	test   eax,eax
1000912f:	je     0x10009135
10009131:	mov    eax,DWORD PTR [eax+0x18]
10009134:	ret    
10009135:	mov    eax,DWORD PTR [ecx+0x38]
10009138:	ret    
10009139:	push   0x8
1000913b:	mov    eax,0x10063d78
10009140:	call   0x10059b25
10009145:	push   0x40
10009147:	call   0x1004358e
1000914c:	pop    ecx
1000914d:	mov    DWORD PTR [ebp-0x10],eax
10009150:	xor    esi,esi
10009152:	cmp    eax,esi
10009154:	mov    DWORD PTR [ebp-0x4],esi
10009157:	je     0x10009161
10009159:	push   eax
1000915a:	call   0x10009027
1000915f:	mov    esi,eax
10009161:	mov    DWORD PTR [ebp-0x10],esi
10009164:	mov    eax,DWORD PTR [ebp+0x8]
10009167:	mov    DWORD PTR [ebp-0x4],0x1
1000916e:	mov    ecx,DWORD PTR [eax]
10009170:	call   0x10007a86
10009175:	mov    ebx,eax
10009177:	mov    edi,esi
10009179:	call   0x10009d24
1000917e:	mov    eax,DWORD PTR [ebp+0x8]
10009181:	mov    ecx,DWORD PTR [eax+0x4]
10009184:	call   0x10007a86
10009189:	lea    edi,[esi+0x4]
1000918c:	mov    ebx,eax
1000918e:	call   0x10009d24
10009193:	mov    eax,DWORD PTR [ebp+0x8]
10009196:	mov    ecx,DWORD PTR [eax+0x8]
10009199:	call   0x10007a86
1000919e:	lea    edi,[esi+0x8]
100091a1:	mov    ebx,eax
100091a3:	call   0x10009d24
100091a8:	mov    edi,DWORD PTR [ebp+0x8]
100091ab:	mov    ecx,DWORD PTR [edi+0xc]
100091ae:	test   ecx,ecx
100091b0:	je     0x100091c4
100091b2:	call   0x10007a86
100091b7:	lea    edi,[esi+0xc]
100091ba:	mov    ebx,eax
100091bc:	call   0x10009d24
100091c1:	mov    edi,DWORD PTR [ebp+0x8]
100091c4:	lea    eax,[edi+0x20]
100091c7:	push   eax
100091c8:	lea    eax,[esi+0x20]
100091cb:	push   eax
100091cc:	call   0x10007c16
100091d1:	mov    eax,DWORD PTR [edi+0x10]
100091d4:	mov    DWORD PTR [esi+0x10],eax
100091d7:	mov    eax,DWORD PTR [edi+0x14]
100091da:	mov    DWORD PTR [esi+0x14],eax
100091dd:	mov    eax,DWORD PTR [edi+0x18]
100091e0:	mov    DWORD PTR [esi+0x18],eax
100091e3:	mov    eax,DWORD PTR [edi+0x1c]
100091e6:	mov    ecx,edi
100091e8:	mov    DWORD PTR [esi+0x1c],eax
100091eb:	call   0x1000912a
100091f0:	and    DWORD PTR [ebp-0x10],0x0
100091f4:	or     DWORD PTR [ebp-0x4],0xffffffff
100091f8:	mov    DWORD PTR [esi+0x38],eax
100091fb:	lea    eax,[ebp-0x10]
100091fe:	call   0x10009f1a
10009203:	mov    eax,esi
10009205:	call   0x10059bfd
1000920a:	ret    0x4
1000920d:	push   0x40
1000920f:	mov    eax,0x10062ef8
10009214:	call   0x10059b25
10009219:	and    DWORD PTR [ebp-0x14],0x0
1000921d:	mov    ebx,DWORD PTR [ebp+0x8]
10009220:	mov    eax,DWORD PTR [ebx]
10009222:	lea    ecx,[ebp-0x30]
10009225:	push   ecx
10009226:	call   0x100199c9
1000922b:	and    DWORD PTR [ebp-0x4],0x0
1000922f:	mov    esi,DWORD PTR [edi]
10009231:	push   eax
10009232:	mov    DWORD PTR [ebp-0x14],0x1
10009239:	call   0x10007ac2
1000923e:	test   al,al
10009240:	setne  BYTE PTR [ebp-0xd]
10009244:	or     DWORD PTR [ebp-0x4],0xffffffff
10009248:	xor    esi,esi
1000924a:	push   0x0
1000924c:	inc    esi
1000924d:	push   esi
1000924e:	lea    ecx,[ebp-0x30]
10009251:	call   0x100012eb
10009256:	mov    eax,DWORD PTR [ebx+0x4]
10009259:	lea    ecx,[ebp-0x30]
1000925c:	push   ecx
1000925d:	call   0x100199c9
10009262:	mov    DWORD PTR [ebp-0x4],esi
10009265:	mov    esi,DWORD PTR [edi+0x4]
10009268:	push   eax
10009269:	mov    DWORD PTR [ebp-0x14],0x2
10009270:	call   0x10007ac2
10009275:	test   al,al
10009277:	jne    0x10009281
10009279:	cmp    BYTE PTR [ebp-0xd],al
1000927c:	mov    BYTE PTR [ebp-0xd],al
1000927f:	je     0x10009285
10009281:	mov    BYTE PTR [ebp-0xd],0x1
10009285:	or     DWORD PTR [ebp-0x4],0xffffffff
10009289:	push   0x0
1000928b:	push   0x1
1000928d:	lea    ecx,[ebp-0x30]
10009290:	call   0x100012eb
10009295:	mov    eax,DWORD PTR [ebx+0x8]
10009298:	lea    ecx,[ebp-0x30]
1000929b:	push   ecx
1000929c:	call   0x100199c9
100092a1:	mov    DWORD PTR [ebp-0x4],0x2
100092a8:	mov    esi,DWORD PTR [edi+0x8]
100092ab:	push   eax
100092ac:	mov    DWORD PTR [ebp-0x14],0x4
100092b3:	call   0x10007ac2
100092b8:	test   al,al
100092ba:	jne    0x100092c4
100092bc:	cmp    BYTE PTR [ebp-0xd],al
100092bf:	mov    BYTE PTR [ebp-0xd],al
100092c2:	je     0x100092c8
100092c4:	mov    BYTE PTR [ebp-0xd],0x1
100092c8:	or     DWORD PTR [ebp-0x4],0xffffffff
100092cc:	push   0x0
100092ce:	push   0x1
100092d0:	lea    ecx,[ebp-0x30]
100092d3:	call   0x100012eb
100092d8:	mov    eax,DWORD PTR [ebx+0xc]
100092db:	test   eax,eax
100092dd:	je     0x10009325
100092df:	cmp    DWORD PTR [edi+0xc],0x0
100092e3:	je     0x10009325
100092e5:	lea    ecx,[ebp-0x4c]
100092e8:	push   ecx
100092e9:	call   0x100199c9
100092ee:	mov    DWORD PTR [ebp-0x4],0x3
100092f5:	mov    esi,DWORD PTR [edi+0xc]
100092f8:	push   eax
100092f9:	mov    DWORD PTR [ebp-0x14],0x8
10009300:	call   0x10007ac2
10009305:	test   al,al
10009307:	jne    0x10009311
10009309:	cmp    BYTE PTR [ebp-0xd],al
1000930c:	mov    BYTE PTR [ebp-0xd],al
1000930f:	je     0x10009315
10009311:	mov    BYTE PTR [ebp-0xd],0x1
10009315:	or     DWORD PTR [ebp-0x4],0xffffffff
10009319:	push   0x0
1000931b:	push   0x1
1000931d:	lea    ecx,[ebp-0x4c]
10009320:	call   0x100012eb
10009325:	add    ebx,0x20
10009328:	lea    ecx,[edi+0x20]
1000932b:	call   0x10007e5b
10009330:	test   al,al
10009332:	jne    0x1000933b
10009334:	xor    bl,bl
10009336:	cmp    BYTE PTR [ebp-0xd],bl
10009339:	je     0x1000933d
1000933b:	mov    bl,0x1
1000933d:	mov    edx,DWORD PTR [ebp+0x8]
10009340:	mov    eax,DWORD PTR [edx+0x10]
10009343:	cmp    eax,DWORD PTR [edi+0x10]
10009346:	mov    esi,DWORD PTR [edx+0x14]
10009349:	jne    0x10009350
1000934b:	cmp    esi,DWORD PTR [edi+0x14]
1000934e:	je     0x10009358
10009350:	mov    bl,0x1
10009352:	mov    DWORD PTR [edi+0x10],eax
10009355:	mov    DWORD PTR [edi+0x14],esi
10009358:	mov    eax,DWORD PTR [edx+0x18]
1000935b:	cmp    eax,DWORD PTR [edi+0x18]
1000935e:	mov    esi,DWORD PTR [edx+0x1c]
10009361:	jne    0x10009368
10009363:	cmp    esi,DWORD PTR [edi+0x1c]
10009366:	je     0x10009370
10009368:	mov    bl,0x1
1000936a:	mov    DWORD PTR [edi+0x18],eax
1000936d:	mov    DWORD PTR [edi+0x1c],esi
10009370:	cmp    DWORD PTR [edi+0x34],0x0
10009374:	jne    0x10009396
10009376:	mov    ecx,edx
10009378:	call   0x1000912a
1000937d:	mov    ecx,edi
1000937f:	mov    esi,eax
10009381:	call   0x1000912a
10009386:	cmp    esi,eax
10009388:	je     0x10009396
1000938a:	mov    ecx,edx
1000938c:	mov    bl,0x1
1000938e:	call   0x1000912a
10009393:	mov    DWORD PTR [edi+0x38],eax
10009396:	mov    al,bl
10009398:	call   0x10059bfd
1000939d:	ret    0x4
100093a0:	push   0x74
100093a2:	mov    eax,0x1006058f
100093a7:	call   0x10059b25
100093ac:	mov    eax,DWORD PTR [esi]
100093ae:	lea    ecx,[ebp-0x44]
100093b1:	push   ecx
100093b2:	call   0x100199c9
100093b7:	mov    ebx,eax
100093b9:	and    DWORD PTR [ebp-0x4],0x0
100093bd:	mov    eax,DWORD PTR [edi]
100093bf:	lea    ecx,[ebp-0x28]
100093c2:	push   ecx
100093c3:	call   0x100199c9
100093c8:	mov    ecx,ebx
100093ca:	mov    BYTE PTR [ebp-0x4],0x1
100093ce:	call   0x10006617
100093d3:	mov    bl,al
100093d5:	neg    bl
100093d7:	push   0x0
100093d9:	sbb    bl,bl
100093db:	push   0x1
100093dd:	lea    ecx,[ebp-0x28]
100093e0:	inc    bl
100093e2:	call   0x100012eb
100093e7:	or     DWORD PTR [ebp-0x4],0xffffffff
100093eb:	push   0x0
100093ed:	push   0x1
100093ef:	lea    ecx,[ebp-0x44]
100093f2:	call   0x100012eb
100093f7:	test   bl,bl
100093f9:	je     0x10009402
100093fb:	xor    al,al
100093fd:	jmp    0x10009508
10009402:	mov    eax,DWORD PTR [esi+0x4]
10009405:	lea    ecx,[ebp-0x28]
10009408:	push   ecx
10009409:	call   0x100199c9
1000940e:	mov    ebx,eax
10009410:	lea    ecx,[ebp-0x44]
10009413:	mov    DWORD PTR [ebp-0x4],0x2
1000941a:	mov    eax,DWORD PTR [edi+0x4]
1000941d:	push   ecx
1000941e:	call   0x100199c9
10009423:	mov    ecx,ebx
10009425:	mov    BYTE PTR [ebp-0x4],0x3
10009429:	call   0x10006617
1000942e:	mov    bl,al
10009430:	neg    bl
10009432:	push   0x0
10009434:	sbb    bl,bl
10009436:	push   0x1
10009438:	lea    ecx,[ebp-0x44]
1000943b:	inc    bl
1000943d:	call   0x100012eb
10009442:	or     DWORD PTR [ebp-0x4],0xffffffff
10009446:	push   0x0
10009448:	push   0x1
1000944a:	lea    ecx,[ebp-0x28]
1000944d:	call   0x100012eb
10009452:	test   bl,bl
10009454:	jne    0x100093fb
10009456:	mov    eax,DWORD PTR [esi+0x8]
10009459:	lea    ecx,[ebp-0x7c]
1000945c:	push   ecx
1000945d:	call   0x100199c9
10009462:	mov    ebx,eax
10009464:	lea    ecx,[ebp-0x60]
10009467:	mov    DWORD PTR [ebp-0x4],0x4
1000946e:	mov    eax,DWORD PTR [edi+0x8]
10009471:	push   ecx
10009472:	call   0x100199c9
10009477:	mov    ecx,ebx
10009479:	mov    BYTE PTR [ebp-0x4],0x5
1000947d:	call   0x10006617
10009482:	mov    bl,al
10009484:	neg    bl
10009486:	push   0x0
10009488:	sbb    bl,bl
1000948a:	push   0x1
1000948c:	lea    ecx,[ebp-0x60]
1000948f:	inc    bl
10009491:	call   0x100012eb
10009496:	or     DWORD PTR [ebp-0x4],0xffffffff
1000949a:	push   0x0
1000949c:	push   0x1
1000949e:	lea    ecx,[ebp-0x7c]
100094a1:	call   0x100012eb
100094a6:	test   bl,bl
100094a8:	jne    0x100093fb
100094ae:	lea    eax,[esi+0x20]
100094b1:	push   eax
100094b2:	lea    eax,[edi+0x20]
100094b5:	push   eax
100094b6:	call   0x10007d5a
100094bb:	test   al,al
100094bd:	je     0x100093fb
100094c3:	mov    eax,DWORD PTR [esi+0x10]
100094c6:	cmp    eax,DWORD PTR [edi+0x10]
100094c9:	jne    0x100093fb
100094cf:	mov    eax,DWORD PTR [esi+0x14]
100094d2:	cmp    eax,DWORD PTR [edi+0x14]
100094d5:	jne    0x100093fb
100094db:	mov    eax,DWORD PTR [esi+0x18]
100094de:	cmp    eax,DWORD PTR [edi+0x18]
100094e1:	jne    0x100093fb
100094e7:	mov    eax,DWORD PTR [esi+0x1c]
100094ea:	cmp    eax,DWORD PTR [edi+0x1c]
100094ed:	jne    0x100093fb
100094f3:	mov    ecx,esi
100094f5:	call   0x1000912a
100094fa:	mov    ecx,edi
100094fc:	mov    edx,eax
100094fe:	call   0x1000912a
10009503:	cmp    edx,eax
10009505:	sete   al
10009508:	call   0x10059bfd
1000950d:	ret    
1000950e:	push   0x34
10009510:	mov    eax,0x10063d41
10009515:	call   0x10059b8e
1000951a:	mov    eax,DWORD PTR [ebp+0x8]
1000951d:	mov    DWORD PTR [ebp-0x3c],eax
10009520:	mov    eax,DWORD PTR [ebp+0xc]
10009523:	push   0x40
10009525:	mov    ebx,ecx
10009527:	mov    DWORD PTR [ebp-0x34],eax
1000952a:	call   0x1004358e
1000952f:	pop    ecx
10009530:	mov    DWORD PTR [ebp-0x30],eax
10009533:	xor    esi,esi
10009535:	cmp    eax,esi
10009537:	mov    DWORD PTR [ebp-0x4],esi
1000953a:	je     0x10009547
1000953c:	push   eax
1000953d:	call   0x100087b9
10009542:	mov    DWORD PTR [ebp-0x30],eax
10009545:	jmp    0x1000954a
10009547:	mov    DWORD PTR [ebp-0x30],esi
1000954a:	mov    eax,DWORD PTR [ebp-0x30]
1000954d:	mov    DWORD PTR [ebp-0x40],eax
10009550:	mov    DWORD PTR [ebp-0x4],0x1
10009557:	push   esi
10009558:	lea    ecx,[ebp-0x2c]
1000955b:	mov    DWORD PTR [ebp-0x14],0xf
10009562:	call   0x10001417
10009567:	push   0xffffffff
10009569:	push   esi
1000956a:	mov    BYTE PTR [ebp-0x4],0x2
1000956e:	mov    edi,DWORD PTR [ebp-0x18]
10009571:	mov    eax,ebx
10009573:	lea    esi,[ebp-0x2c]
10009576:	call   0x10004ce1
1000957b:	mov    esi,DWORD PTR [ebp-0x18]
1000957e:	push   0x24
10009580:	call   0x1004358e
10009585:	pop    ecx
10009586:	mov    DWORD PTR [ebp-0x38],eax
10009589:	test   eax,eax
1000958b:	mov    BYTE PTR [ebp-0x4],0x3
1000958f:	je     0x1000959e
10009591:	sub    esi,edi
10009593:	push   esi
10009594:	push   edi
10009595:	push   ebx
10009596:	push   eax
10009597:	call   0x10007a3d
1000959c:	jmp    0x100095a0
1000959e:	xor    eax,eax
100095a0:	mov    BYTE PTR [ebp-0x4],0x2
100095a4:	mov    edi,DWORD PTR [ebp-0x30]
100095a7:	mov    ebx,eax
100095a9:	call   0x10009d24
100095ae:	push   0x1006d48c
100095b3:	lea    eax,[ebp-0x2c]
100095b6:	push   eax
100095b7:	call   0x10004107
100095bc:	mov    eax,DWORD PTR [ebp-0x3c]
100095bf:	mov    edi,DWORD PTR [ebp-0x18]
100095c2:	push   0xffffffff
100095c4:	push   0x0
100095c6:	lea    esi,[ebp-0x2c]
100095c9:	call   0x10004ce1
100095ce:	mov    esi,DWORD PTR [ebp-0x18]
100095d1:	push   0x24
100095d3:	call   0x1004358e
100095d8:	pop    ecx
100095d9:	mov    DWORD PTR [ebp-0x38],eax
100095dc:	test   eax,eax
100095de:	mov    BYTE PTR [ebp-0x4],0x4
100095e2:	je     0x100095f3
100095e4:	sub    esi,edi
100095e6:	push   esi
100095e7:	push   edi
100095e8:	push   DWORD PTR [ebp-0x3c]
100095eb:	push   eax
100095ec:	call   0x10007a3d
100095f1:	jmp    0x100095f5
100095f3:	xor    eax,eax
100095f5:	mov    BYTE PTR [ebp-0x4],0x2
100095f9:	mov    edi,DWORD PTR [ebp-0x30]
100095fc:	add    edi,0x4
100095ff:	mov    ebx,eax
10009601:	call   0x10009d24
10009606:	push   0x1006d48c
1000960b:	lea    eax,[ebp-0x2c]
1000960e:	push   eax
1000960f:	call   0x10004107
10009614:	push   0x788a8c
10009619:	push   0x1006d490
1000961e:	call   0x100042bd
10009623:	push   0x69e89744
10009628:	push   eax
10009629:	call   0x100042bd
1000962e:	push   eax
1000962f:	push   0x5
10009631:	push   0x1006d4bc
10009636:	call   0x100042cf
1000963b:	add    esp,0x1c
1000963e:	push   eax
1000963f:	lea    eax,[ebp-0x2c]
10009642:	push   eax
10009643:	call   0x10004107
10009648:	mov    eax,DWORD PTR [ebp-0x34]
1000964b:	mov    edi,DWORD PTR [ebp-0x18]
1000964e:	push   0xffffffff
10009650:	push   0x0
10009652:	lea    esi,[ebp-0x2c]
10009655:	call   0x10004ce1
1000965a:	mov    esi,DWORD PTR [ebp-0x18]
1000965d:	push   0x24
1000965f:	call   0x1004358e
10009664:	pop    ecx
10009665:	mov    DWORD PTR [ebp-0x38],eax
10009668:	test   eax,eax
1000966a:	mov    BYTE PTR [ebp-0x4],0x5
1000966e:	je     0x10009681
10009670:	mov    ecx,esi
10009672:	sub    ecx,edi
10009674:	push   ecx
10009675:	push   edi
10009676:	push   DWORD PTR [ebp-0x34]
10009679:	push   eax
1000967a:	call   0x10007a3d
1000967f:	jmp    0x10009683
10009681:	xor    eax,eax
10009683:	mov    BYTE PTR [ebp-0x4],0x2
10009687:	mov    edi,DWORD PTR [ebp-0x30]
1000968a:	add    edi,0x8
1000968d:	mov    ebx,eax
1000968f:	call   0x10009d24
10009694:	mov    ebx,0x1006d3b0
10009699:	push   ebx
1000969a:	lea    eax,[ebp-0x2c]
1000969d:	push   eax
1000969e:	call   0x10004107
100096a3:	mov    edi,DWORD PTR [ebp-0x30]
100096a6:	push   DWORD PTR [ebp-0x18]
100096a9:	add    edi,0x18
100096ac:	call   0x10007b4e
100096b1:	push   ebx
100096b2:	lea    eax,[ebp-0x2c]
100096b5:	push   eax
100096b6:	call   0x10004107
100096bb:	push   0x24
100096bd:	call   0x1004358e
100096c2:	pop    ecx
100096c3:	mov    DWORD PTR [ebp-0x38],eax
100096c6:	test   eax,eax
100096c8:	mov    BYTE PTR [ebp-0x4],0x6
100096cc:	je     0x100096d8
100096ce:	push   eax
100096cf:	call   0x100077cc
100096d4:	mov    ebx,eax
100096d6:	jmp    0x100096da
100096d8:	xor    ebx,ebx
100096da:	mov    DWORD PTR [ebp-0x34],ebx
100096dd:	mov    eax,esi
100096df:	mov    esi,ebx
100096e1:	mov    BYTE PTR [ebp-0x4],0x7
100096e5:	call   0x100079f1
100096ea:	cmp    DWORD PTR [ebp-0x14],0x10
100096ee:	mov    eax,DWORD PTR [ebp-0x28]
100096f1:	jae    0x100096f6
100096f3:	lea    eax,[ebp-0x28]
100096f6:	mov    edi,DWORD PTR [ebp-0x18]
100096f9:	push   eax
100096fa:	mov    eax,ebx
100096fc:	call   0x10007814
10009701:	mov    ecx,DWORD PTR [ebp-0x30]
10009704:	and    DWORD PTR [ebp-0x34],0x0
10009708:	mov    eax,ebx
1000970a:	call   0x100087fd
1000970f:	push   0x0
10009711:	push   0x1
10009713:	lea    ecx,[ebp-0x2c]
10009716:	call   0x100012eb
1000971b:	mov    eax,DWORD PTR [ebp-0x30]
1000971e:	call   0x10059c11
10009723:	ret    
10009724:	push   0x3c
10009726:	mov    eax,0x10063cd2
1000972b:	call   0x10059b8e
10009730:	mov    eax,DWORD PTR [ebp+0x8]
10009733:	mov    DWORD PTR [ebp-0x44],eax
10009736:	mov    eax,DWORD PTR [ebp+0xc]
10009739:	mov    esi,ecx
1000973b:	xor    ebx,ebx
1000973d:	push   0x40
1000973f:	mov    DWORD PTR [ebp-0x3c],esi
10009742:	mov    DWORD PTR [ebp-0x38],eax
10009745:	mov    DWORD PTR [ebp-0x34],ebx
10009748:	call   0x1004358e
1000974d:	pop    ecx
1000974e:	mov    DWORD PTR [ebp-0x34],eax
10009751:	cmp    eax,ebx
10009753:	mov    DWORD PTR [ebp-0x4],ebx
10009756:	je     0x10009763
10009758:	push   eax
10009759:	call   0x10009027
1000975e:	mov    DWORD PTR [ebp-0x30],eax
10009761:	jmp    0x10009766
10009763:	mov    DWORD PTR [ebp-0x30],ebx
10009766:	mov    eax,DWORD PTR [ebp-0x30]
10009769:	mov    DWORD PTR [ebp-0x34],eax
1000976c:	mov    DWORD PTR [ebp-0x4],0x1
10009773:	push   ebx
10009774:	lea    ecx,[ebp-0x2c]
10009777:	mov    DWORD PTR [ebp-0x14],0xf
1000977e:	call   0x10001417
10009783:	push   0xffffffff
10009785:	mov    eax,esi
10009787:	mov    BYTE PTR [ebp-0x4],0x2
1000978b:	mov    edi,DWORD PTR [ebp-0x18]
1000978e:	push   ebx
1000978f:	lea    esi,[ebp-0x2c]
10009792:	call   0x10004ce1
10009797:	mov    esi,DWORD PTR [ebp-0x18]
1000979a:	push   0x24
1000979c:	call   0x1004358e
100097a1:	pop    ecx
100097a2:	mov    DWORD PTR [ebp-0x40],eax
100097a5:	cmp    eax,ebx
100097a7:	mov    BYTE PTR [ebp-0x4],0x3
100097ab:	je     0x100097bc
100097ad:	sub    esi,edi
100097af:	push   esi
100097b0:	push   edi
100097b1:	push   DWORD PTR [ebp-0x3c]
100097b4:	push   eax
100097b5:	call   0x10007a3d
100097ba:	jmp    0x100097be
100097bc:	xor    eax,eax
100097be:	mov    edi,DWORD PTR [ebp-0x30]
100097c1:	mov    ebx,eax
100097c3:	mov    BYTE PTR [ebp-0x4],0x2
100097c7:	call   0x10009d24
100097cc:	push   0x1006d48c
100097d1:	lea    eax,[ebp-0x2c]
100097d4:	push   eax
100097d5:	call   0x10004107
100097da:	mov    eax,DWORD PTR [ebp-0x44]
100097dd:	mov    edi,DWORD PTR [ebp-0x18]
100097e0:	push   0xffffffff
100097e2:	push   0x0
100097e4:	lea    esi,[ebp-0x2c]
100097e7:	call   0x10004ce1
100097ec:	mov    esi,DWORD PTR [ebp-0x18]
100097ef:	push   0x24
100097f1:	call   0x1004358e
100097f6:	pop    ecx
100097f7:	mov    DWORD PTR [ebp-0x40],eax
100097fa:	test   eax,eax
100097fc:	mov    BYTE PTR [ebp-0x4],0x4
10009800:	je     0x10009811
10009802:	sub    esi,edi
10009804:	push   esi
10009805:	push   edi
10009806:	push   DWORD PTR [ebp-0x44]
10009809:	push   eax
1000980a:	call   0x10007a3d
1000980f:	jmp    0x10009813
10009811:	xor    eax,eax
10009813:	mov    edi,DWORD PTR [ebp-0x30]
10009816:	add    edi,0x4
10009819:	mov    ebx,eax
1000981b:	mov    BYTE PTR [ebp-0x4],0x2
1000981f:	call   0x10009d24
10009824:	push   0x1006d48c
10009829:	lea    eax,[ebp-0x2c]
1000982c:	push   eax
1000982d:	call   0x10004107
10009832:	mov    eax,DWORD PTR [ebp-0x38]
10009835:	mov    edi,DWORD PTR [ebp-0x18]
10009838:	push   0xffffffff
1000983a:	push   0x0
1000983c:	lea    esi,[ebp-0x2c]
1000983f:	call   0x10004ce1
10009844:	mov    esi,DWORD PTR [ebp-0x18]
10009847:	push   0x24
10009849:	mov    DWORD PTR [ebp-0x3c],esi
1000984c:	call   0x1004358e
10009851:	pop    ecx
10009852:	mov    DWORD PTR [ebp-0x40],eax
10009855:	test   eax,eax
10009857:	mov    BYTE PTR [ebp-0x4],0x5
1000985b:	je     0x1000986c
1000985d:	sub    esi,edi
1000985f:	push   esi
10009860:	push   edi
10009861:	push   DWORD PTR [ebp-0x38]
10009864:	push   eax
10009865:	call   0x10007a3d
1000986a:	jmp    0x1000986e
1000986c:	xor    eax,eax
1000986e:	mov    esi,DWORD PTR [ebp-0x30]
10009871:	lea    edi,[esi+0x8]
10009874:	mov    ebx,eax
10009876:	mov    BYTE PTR [ebp-0x4],0x2
1000987a:	call   0x10009d24
1000987f:	mov    ebx,0x1006d3b0
10009884:	push   ebx
10009885:	lea    eax,[ebp-0x2c]
10009888:	push   eax
10009889:	call   0x10004107
1000988e:	push   DWORD PTR [ebp-0x18]
10009891:	lea    edi,[esi+0x20]
10009894:	call   0x10007b4e
10009899:	push   ebx
1000989a:	lea    eax,[ebp-0x2c]
1000989d:	push   eax
1000989e:	call   0x10004107
100098a3:	push   0x24
100098a5:	call   0x1004358e
100098aa:	pop    ecx
100098ab:	mov    DWORD PTR [ebp-0x40],eax
100098ae:	xor    ebx,ebx
100098b0:	cmp    eax,ebx
100098b2:	mov    BYTE PTR [ebp-0x4],0x6
100098b6:	je     0x100098c2
100098b8:	push   eax
100098b9:	call   0x100077cc
100098be:	mov    esi,eax
100098c0:	jmp    0x100098c4
100098c2:	xor    esi,esi
100098c4:	mov    DWORD PTR [ebp-0x38],esi
100098c7:	mov    eax,DWORD PTR [ebp-0x3c]
100098ca:	mov    BYTE PTR [ebp-0x4],0x7
100098ce:	call   0x100079f1
100098d3:	cmp    DWORD PTR [ebp-0x14],0x10
100098d7:	mov    eax,DWORD PTR [ebp-0x28]
100098da:	jae    0x100098df
100098dc:	lea    eax,[ebp-0x28]
100098df:	mov    edi,DWORD PTR [ebp-0x18]
100098e2:	push   eax
100098e3:	mov    eax,esi
100098e5:	call   0x10007814
100098ea:	mov    ecx,DWORD PTR [ebp-0x30]
100098ed:	mov    eax,esi
100098ef:	mov    DWORD PTR [ebp-0x38],ebx
100098f2:	call   0x1000906e
100098f7:	push   ebx
100098f8:	push   0x1
100098fa:	lea    ecx,[ebp-0x2c]
100098fd:	mov    DWORD PTR [ebp-0x34],ebx
10009900:	call   0x100012eb
10009905:	or     DWORD PTR [ebp-0x4],0xffffffff
10009909:	lea    eax,[ebp-0x34]
1000990c:	call   0x10009f1a
10009911:	mov    eax,DWORD PTR [ebp-0x30]
10009914:	call   0x10059c11
10009919:	ret    
1000991a:	push   esi
1000991b:	mov    esi,DWORD PTR [eax]
1000991d:	test   esi,esi
1000991f:	je     0x10009926
10009921:	call   0x10009f30
10009926:	pop    esi
10009927:	ret    
10009928:	push   DWORD PTR [eax]
1000992a:	call   0x10042f82
1000992f:	pop    ecx
10009930:	ret    
10009931:	push   ebp
10009932:	mov    ebp,esp
10009934:	sub    esp,0x18
10009937:	push   esi
10009938:	mov    esi,DWORD PTR [ebp+0x8]
1000993b:	mov    eax,DWORD PTR [esi+0x4]
1000993e:	push   edi
1000993f:	mov    edi,DWORD PTR [eax+0x4]
10009942:	mov    DWORD PTR [ebp-0x4],eax
10009945:	mov    al,0x1
10009947:	mov    BYTE PTR [ebp-0x8],al
1000994a:	jmp    0x10009968
1000994c:	mov    ecx,DWORD PTR [ebp+0xc]
1000994f:	lea    eax,[edi+0xc]
10009952:	mov    DWORD PTR [ebp-0x4],edi
10009955:	call   0x1000779d
1000995a:	test   al,al
1000995c:	mov    BYTE PTR [ebp-0x8],al
1000995f:	je     0x10009965
10009961:	mov    edi,DWORD PTR [edi]
10009963:	jmp    0x10009968
10009965:	mov    edi,DWORD PTR [edi+0x8]
10009968:	cmp    BYTE PTR [edi+0x39],0x0
1000996c:	je     0x1000994c
1000996e:	test   al,al
10009970:	mov    edi,DWORD PTR [ebp-0x4]
10009973:	mov    DWORD PTR [ebp-0xc],edi
10009976:	mov    DWORD PTR [ebp-0x10],esi
10009979:	je     0x100099c7
1000997b:	mov    eax,DWORD PTR [esi+0x4]
1000997e:	mov    eax,DWORD PTR [eax]
10009980:	mov    DWORD PTR [ebp-0x18],esi
10009983:	lea    edi,[ebp-0x18]
10009986:	lea    esi,[ebp-0x10]
10009989:	mov    DWORD PTR [ebp-0x14],eax
1000998c:	call   0x10009d5c
10009991:	test   al,al
10009993:	je     0x100099b9
10009995:	push   DWORD PTR [ebp+0xc]
10009998:	mov    esi,DWORD PTR [ebp+0x8]
1000999b:	push   0x1
1000999d:	mov    ecx,DWORD PTR [ebp-0x4]
100099a0:	lea    eax,[ebp-0x18]
100099a3:	push   eax
100099a4:	call   0x1000a0ea
100099a9:	mov    ecx,DWORD PTR [eax]
100099ab:	mov    eax,DWORD PTR [eax+0x4]
100099ae:	mov    DWORD PTR [ebx],ecx
100099b0:	mov    DWORD PTR [ebx+0x4],eax
100099b3:	mov    BYTE PTR [ebx+0x8],0x1
100099b7:	jmp    0x100099ea
100099b9:	lea    esi,[ebp-0x10]
100099bc:	call   0x1000d329
100099c1:	mov    edi,DWORD PTR [ebp-0xc]
100099c4:	mov    esi,DWORD PTR [ebp+0x8]
100099c7:	mov    eax,DWORD PTR [ebp+0xc]
100099ca:	lea    ecx,[edi+0xc]
100099cd:	call   0x1000779d
100099d2:	test   al,al
100099d4:	je     0x100099de
100099d6:	push   DWORD PTR [ebp+0xc]
100099d9:	push   DWORD PTR [ebp-0x8]
100099dc:	jmp    0x1000999d
100099de:	mov    eax,DWORD PTR [ebp-0x10]
100099e1:	mov    DWORD PTR [ebx],eax
100099e3:	mov    DWORD PTR [ebx+0x4],edi
100099e6:	mov    BYTE PTR [ebx+0x8],0x0
100099ea:	pop    edi
100099eb:	mov    eax,ebx
100099ed:	pop    esi
100099ee:	leave  
100099ef:	ret    0x8
100099f2:	push   0x44
100099f4:	mov    eax,0x10060374
100099f9:	call   0x10059b25
100099fe:	mov    edi,DWORD PTR [ebp+0x14]
10009a01:	cmp    BYTE PTR [edi+0x39],0x0
10009a05:	je     0x10009a39
10009a07:	push   0x1006ccec
10009a0c:	lea    ecx,[ebp-0x28]
10009a0f:	call   0x100011c8
10009a14:	and    DWORD PTR [ebp-0x4],0x0
10009a18:	lea    eax,[ebp-0x28]
10009a1b:	push   eax
10009a1c:	lea    ecx,[ebp-0x50]
10009a1f:	call   0x10001065
10009a24:	push   0x10074de8
10009a29:	lea    eax,[ebp-0x50]
10009a2c:	push   eax
10009a2d:	mov    DWORD PTR [ebp-0x50],0x1006b978
10009a34:	call   0x10047aa4
10009a39:	lea    esi,[ebp+0x10]
10009a3c:	call   0x1000cdd4
10009a41:	mov    ecx,DWORD PTR [edi]
10009a43:	cmp    BYTE PTR [ecx+0x39],0x0
10009a47:	je     0x10009a4e
10009a49:	mov    ebx,DWORD PTR [edi+0x8]
10009a4c:	jmp    0x10009a65
10009a4e:	mov    eax,DWORD PTR [edi+0x8]
10009a51:	cmp    BYTE PTR [eax+0x39],0x0
10009a55:	je     0x10009a5b
10009a57:	mov    ebx,ecx
10009a59:	jmp    0x10009a65
10009a5b:	mov    eax,DWORD PTR [ebp+0x14]
10009a5e:	cmp    eax,edi
10009a60:	mov    ebx,DWORD PTR [eax+0x8]
10009a63:	jne    0x10009adb
10009a65:	cmp    BYTE PTR [ebx+0x39],0x0
10009a69:	mov    esi,DWORD PTR [edi+0x4]
10009a6c:	jne    0x10009a71
10009a6e:	mov    DWORD PTR [ebx+0x4],esi
10009a71:	mov    ecx,DWORD PTR [ebp+0x8]
10009a74:	mov    eax,DWORD PTR [ecx+0x4]
10009a77:	cmp    DWORD PTR [eax+0x4],edi
10009a7a:	jne    0x10009a81
10009a7c:	mov    DWORD PTR [eax+0x4],ebx
10009a7f:	jmp    0x10009a8c
10009a81:	cmp    DWORD PTR [esi],edi
10009a83:	jne    0x10009a89
10009a85:	mov    DWORD PTR [esi],ebx
10009a87:	jmp    0x10009a8c
10009a89:	mov    DWORD PTR [esi+0x8],ebx
10009a8c:	mov    edx,DWORD PTR [ecx+0x4]
10009a8f:	cmp    DWORD PTR [edx],edi
10009a91:	jne    0x10009aaf
10009a93:	cmp    BYTE PTR [ebx+0x39],0x0
10009a97:	je     0x10009a9d
10009a99:	mov    ecx,esi
10009a9b:	jmp    0x10009aad
10009a9d:	mov    eax,DWORD PTR [ebx]
10009a9f:	mov    ecx,ebx
10009aa1:	jmp    0x10009aa7
10009aa3:	mov    ecx,eax
10009aa5:	mov    eax,DWORD PTR [ecx]
10009aa7:	cmp    BYTE PTR [eax+0x39],0x0
10009aab:	je     0x10009aa3
10009aad:	mov    DWORD PTR [edx],ecx
10009aaf:	mov    eax,DWORD PTR [ebp+0x8]
10009ab2:	mov    edx,DWORD PTR [eax+0x4]
10009ab5:	cmp    DWORD PTR [edx+0x8],edi
10009ab8:	jne    0x10009b35
10009aba:	cmp    BYTE PTR [ebx+0x39],0x0
10009abe:	je     0x10009ac4
10009ac0:	mov    ecx,esi
10009ac2:	jmp    0x10009ad6
10009ac4:	mov    eax,DWORD PTR [ebx+0x8]
10009ac7:	mov    ecx,ebx
10009ac9:	jmp    0x10009ad0
10009acb:	mov    ecx,eax
10009acd:	mov    eax,DWORD PTR [ecx+0x8]
10009ad0:	cmp    BYTE PTR [eax+0x39],0x0
10009ad4:	je     0x10009acb
10009ad6:	mov    DWORD PTR [edx+0x8],ecx
10009ad9:	jmp    0x10009b35
10009adb:	mov    DWORD PTR [ecx+0x4],eax
10009ade:	mov    ecx,DWORD PTR [edi]
10009ae0:	mov    DWORD PTR [eax],ecx
10009ae2:	cmp    eax,DWORD PTR [edi+0x8]
10009ae5:	jne    0x10009aeb
10009ae7:	mov    esi,eax
10009ae9:	jmp    0x10009b05
10009aeb:	cmp    BYTE PTR [ebx+0x39],0x0
10009aef:	mov    esi,DWORD PTR [eax+0x4]
10009af2:	jne    0x10009af7
10009af4:	mov    DWORD PTR [ebx+0x4],esi
10009af7:	mov    DWORD PTR [esi],ebx
10009af9:	mov    ecx,DWORD PTR [edi+0x8]
10009afc:	mov    DWORD PTR [eax+0x8],ecx
10009aff:	mov    ecx,DWORD PTR [edi+0x8]
10009b02:	mov    DWORD PTR [ecx+0x4],eax
10009b05:	mov    ecx,DWORD PTR [ebp+0x8]
10009b08:	mov    ecx,DWORD PTR [ecx+0x4]
10009b0b:	cmp    DWORD PTR [ecx+0x4],edi
10009b0e:	jne    0x10009b15
10009b10:	mov    DWORD PTR [ecx+0x4],eax
10009b13:	jmp    0x10009b23
10009b15:	mov    ecx,DWORD PTR [edi+0x4]
10009b18:	cmp    DWORD PTR [ecx],edi
10009b1a:	jne    0x10009b20
10009b1c:	mov    DWORD PTR [ecx],eax
10009b1e:	jmp    0x10009b23
10009b20:	mov    DWORD PTR [ecx+0x8],eax
10009b23:	mov    ecx,DWORD PTR [edi+0x4]
10009b26:	mov    DWORD PTR [eax+0x4],ecx
10009b29:	mov    dl,BYTE PTR [edi+0x38]
10009b2c:	mov    cl,BYTE PTR [eax+0x38]
10009b2f:	mov    BYTE PTR [eax+0x38],dl
10009b32:	mov    BYTE PTR [edi+0x38],cl
10009b35:	cmp    BYTE PTR [edi+0x38],0x1
10009b39:	jne    0x10009c51
10009b3f:	jmp    0x10009c05
10009b44:	cmp    BYTE PTR [ebx+0x38],0x1
10009b48:	jne    0x10009c4d
10009b4e:	mov    ecx,DWORD PTR [esi]
10009b50:	cmp    ebx,ecx
10009b52:	jne    0x10009bcb
10009b54:	mov    ecx,DWORD PTR [esi+0x8]
10009b57:	cmp    BYTE PTR [ecx+0x38],0x0
10009b5b:	jne    0x10009b72
10009b5d:	push   DWORD PTR [ebp+0x8]
10009b60:	mov    BYTE PTR [ecx+0x38],0x1
10009b64:	mov    ecx,esi
10009b66:	mov    BYTE PTR [esi+0x38],0x0
10009b6a:	call   0x1000d2b4
10009b6f:	mov    ecx,DWORD PTR [esi+0x8]
10009b72:	cmp    BYTE PTR [ecx+0x39],0x0
10009b76:	jne    0x10009c00
10009b7c:	mov    eax,DWORD PTR [ecx]
10009b7e:	cmp    BYTE PTR [eax+0x38],0x1
10009b82:	jne    0x10009b8d
10009b84:	mov    eax,DWORD PTR [ecx+0x8]
10009b87:	cmp    BYTE PTR [eax+0x38],0x1
10009b8b:	je     0x10009bfc
10009b8d:	mov    eax,DWORD PTR [ecx+0x8]
10009b90:	cmp    BYTE PTR [eax+0x38],0x1
10009b94:	jne    0x10009bab
10009b96:	mov    eax,DWORD PTR [ecx]
10009b98:	push   DWORD PTR [ebp+0x8]
10009b9b:	mov    BYTE PTR [eax+0x38],0x1
10009b9f:	mov    BYTE PTR [ecx+0x38],0x0
10009ba3:	call   0x1000a235
10009ba8:	mov    ecx,DWORD PTR [esi+0x8]
10009bab:	mov    al,BYTE PTR [esi+0x38]
10009bae:	push   DWORD PTR [ebp+0x8]
10009bb1:	mov    BYTE PTR [ecx+0x38],al
10009bb4:	mov    BYTE PTR [esi+0x38],0x1
10009bb8:	mov    eax,DWORD PTR [ecx+0x8]
10009bbb:	mov    ecx,esi
10009bbd:	mov    BYTE PTR [eax+0x38],0x1
10009bc1:	call   0x1000d2b4
10009bc6:	jmp    0x10009c4d
10009bcb:	cmp    BYTE PTR [ecx+0x38],0x0
10009bcf:	jne    0x10009be5
10009bd1:	push   DWORD PTR [ebp+0x8]
10009bd4:	mov    BYTE PTR [ecx+0x38],0x1
10009bd8:	mov    ecx,esi
10009bda:	mov    BYTE PTR [esi+0x38],0x0
10009bde:	call   0x1000a235
10009be3:	mov    ecx,DWORD PTR [esi]
10009be5:	cmp    BYTE PTR [ecx+0x39],0x0
10009be9:	jne    0x10009c00
10009beb:	mov    eax,DWORD PTR [ecx+0x8]
10009bee:	cmp    BYTE PTR [eax+0x38],0x1
10009bf2:	jne    0x10009c16
10009bf4:	mov    eax,DWORD PTR [ecx]
10009bf6:	cmp    BYTE PTR [eax+0x38],0x1
10009bfa:	jne    0x10009c16
10009bfc:	mov    BYTE PTR [ecx+0x38],0x0
10009c00:	mov    ebx,esi
10009c02:	mov    esi,DWORD PTR [esi+0x4]
10009c05:	mov    eax,DWORD PTR [ebp+0x8]
10009c08:	mov    eax,DWORD PTR [eax+0x4]
10009c0b:	cmp    ebx,DWORD PTR [eax+0x4]
10009c0e:	jne    0x10009b44
10009c14:	jmp    0x10009c4d
10009c16:	mov    eax,DWORD PTR [ecx]
10009c18:	cmp    BYTE PTR [eax+0x38],0x1
10009c1c:	jne    0x10009c33
10009c1e:	mov    eax,DWORD PTR [ecx+0x8]
10009c21:	push   DWORD PTR [ebp+0x8]
10009c24:	mov    BYTE PTR [eax+0x38],0x1
10009c28:	mov    BYTE PTR [ecx+0x38],0x0
10009c2c:	call   0x1000d2b4
10009c31:	mov    ecx,DWORD PTR [esi]
10009c33:	mov    al,BYTE PTR [esi+0x38]
10009c36:	push   DWORD PTR [ebp+0x8]
10009c39:	mov    BYTE PTR [ecx+0x38],al
10009c3c:	mov    BYTE PTR [esi+0x38],0x1
10009c40:	mov    eax,DWORD PTR [ecx]
10009c42:	mov    ecx,esi
10009c44:	mov    BYTE PTR [eax+0x38],0x1
10009c48:	call   0x1000a235
10009c4d:	mov    BYTE PTR [ebx+0x38],0x1
10009c51:	lea    ebx,[edi+0xc]
10009c54:	lea    esi,[ebx+0x1c]
10009c57:	call   0x100047e3
10009c5c:	push   0x0
10009c5e:	push   0x1
10009c60:	mov    ecx,ebx
10009c62:	call   0x100012eb
10009c67:	push   edi
10009c68:	call   0x10042f82
10009c6d:	pop    ecx
10009c6e:	mov    ecx,DWORD PTR [ebp+0x8]
10009c71:	mov    eax,DWORD PTR [ecx+0x8]
10009c74:	test   eax,eax
10009c76:	jbe    0x10009c7c
10009c78:	dec    eax
10009c79:	mov    DWORD PTR [ecx+0x8],eax
10009c7c:	mov    ecx,DWORD PTR [ebp+0x10]
10009c7f:	mov    eax,DWORD PTR [ebp+0xc]
10009c82:	mov    DWORD PTR [eax],ecx
10009c84:	mov    ecx,DWORD PTR [ebp+0x14]
10009c87:	mov    DWORD PTR [eax+0x4],ecx
10009c8a:	call   0x10059bfd
10009c8f:	ret    0x10
10009c92:	push   ebp
10009c93:	mov    ebp,esp
10009c95:	sub    esp,0x10
10009c98:	push   esi
10009c99:	push   edi
10009c9a:	push   DWORD PTR [ebp+0xc]
10009c9d:	mov    eax,ebx
10009c9f:	call   0x1000a5ea
10009ca4:	test   ebx,ebx
10009ca6:	mov    DWORD PTR [ebp-0x4],eax
10009ca9:	jne    0x10009cb0
10009cab:	call   0x100434a0
10009cb0:	mov    eax,DWORD PTR [ebx+0x4]
10009cb3:	lea    edi,[ebp-0x10]
10009cb6:	lea    esi,[ebp-0x8]
10009cb9:	mov    DWORD PTR [ebp-0x8],ebx
10009cbc:	mov    DWORD PTR [ebp-0xc],eax
10009cbf:	mov    DWORD PTR [ebp-0x10],ebx
10009cc2:	call   0x10009d5c
10009cc7:	test   al,al
10009cc9:	jne    0x10009ce1
10009ccb:	mov    eax,DWORD PTR [ebp-0x4]
10009cce:	mov    ecx,DWORD PTR [ebp+0xc]
10009cd1:	add    eax,0xc
10009cd4:	call   0x1000779d
10009cd9:	test   al,al
10009cdb:	jne    0x10009ce1
10009cdd:	mov    ecx,esi
10009cdf:	jmp    0x10009ced
10009ce1:	mov    eax,DWORD PTR [ebx+0x4]
10009ce4:	mov    DWORD PTR [ebp-0xc],eax
10009ce7:	mov    DWORD PTR [ebp-0x10],ebx
10009cea:	lea    ecx,[ebp-0x10]
10009ced:	mov    edx,DWORD PTR [ecx]
10009cef:	mov    eax,DWORD PTR [ebp+0x8]
10009cf2:	mov    ecx,DWORD PTR [ecx+0x4]
10009cf5:	pop    edi
10009cf6:	mov    DWORD PTR [eax],edx
10009cf8:	mov    DWORD PTR [eax+0x4],ecx
10009cfb:	pop    esi
10009cfc:	leave  
10009cfd:	ret    0x8
10009d00:	push   esi
10009d01:	mov    esi,DWORD PTR [eax]
10009d03:	test   esi,esi
10009d05:	je     0x10009d22
10009d07:	push   0x0
10009d09:	push   0x1
10009d0b:	lea    ecx,[esi+0x4]
10009d0e:	call   0x100012eb
10009d13:	push   DWORD PTR [esi]
10009d15:	call   0x10042f82
10009d1a:	push   esi
10009d1b:	call   0x10042f82
10009d20:	pop    ecx
10009d21:	pop    ecx
10009d22:	pop    esi
10009d23:	ret    
10009d24:	push   esi
10009d25:	mov    esi,DWORD PTR [edi]
10009d27:	cmp    ebx,esi
10009d29:	je     0x10009d4a
10009d2b:	test   esi,esi
10009d2d:	je     0x10009d4a
10009d2f:	push   0x0
10009d31:	push   0x1
10009d33:	lea    ecx,[esi+0x4]
10009d36:	call   0x100012eb
10009d3b:	push   DWORD PTR [esi]
10009d3d:	call   0x10042f82
10009d42:	push   esi
10009d43:	call   0x10042f82
10009d48:	pop    ecx
10009d49:	pop    ecx
10009d4a:	mov    DWORD PTR [edi],ebx
10009d4c:	pop    esi
10009d4d:	ret    
10009d4e:	push   edi
10009d4f:	mov    edi,DWORD PTR [eax]
10009d51:	test   edi,edi
10009d53:	je     0x10009d5a
10009d55:	call   0x10009f5d
10009d5a:	pop    edi
10009d5b:	ret    
10009d5c:	mov    eax,DWORD PTR [esi]
10009d5e:	test   eax,eax
10009d60:	je     0x10009d66
10009d62:	cmp    eax,DWORD PTR [edi]
10009d64:	je     0x10009d6b
10009d66:	call   0x100434a0
10009d6b:	mov    eax,DWORD PTR [esi+0x4]
10009d6e:	sub    eax,DWORD PTR [edi+0x4]
10009d71:	neg    eax
10009d73:	sbb    eax,eax
10009d75:	inc    eax
10009d76:	ret    
10009d77:	push   0x10
10009d79:	mov    eax,0x100611e0
10009d7e:	call   0x10059b58
10009d83:	mov    ebx,ecx
10009d85:	mov    esi,DWORD PTR [ebp+0x8]
10009d88:	mov    eax,ebx
10009d8a:	call   0x10004728
10009d8f:	xor    ecx,ecx
10009d91:	cmp    eax,ecx
10009d93:	mov    DWORD PTR [esi+0x4],ecx
10009d96:	mov    DWORD PTR [esi+0x8],ecx
10009d99:	mov    DWORD PTR [esi+0xc],ecx
10009d9c:	je     0x10009dee
10009d9e:	mov    edi,esi
10009da0:	call   0x100047ba
10009da5:	test   al,al
10009da7:	je     0x10009dee
10009da9:	and    DWORD PTR [ebp-0x4],0x0
10009dad:	mov    eax,DWORD PTR [ebx+0x8]
10009db0:	cmp    DWORD PTR [ebx+0x4],eax
10009db3:	mov    DWORD PTR [ebp-0x18],eax
10009db6:	jbe    0x10009dbd
10009db8:	call   0x100434a0
10009dbd:	mov    eax,DWORD PTR [ebx+0x4]
10009dc0:	cmp    eax,DWORD PTR [ebx+0x8]
10009dc3:	mov    DWORD PTR [ebp-0x1c],eax
10009dc6:	jbe    0x10009dcd
10009dc8:	call   0x100434a0
10009dcd:	mov    ecx,DWORD PTR [esi+0x4]
10009dd0:	xor    eax,eax
10009dd2:	lea    edi,[ebp-0x14]
10009dd5:	stos   BYTE PTR es:[edi],al
10009dd6:	push   DWORD PTR [ebp-0x14]
10009dd9:	push   DWORD PTR [ebp+0x8]
10009ddc:	push   ecx
10009ddd:	push   DWORD PTR [ebp-0x18]
10009de0:	mov    ecx,DWORD PTR [ebp-0x1c]
10009de3:	call   0x1000674f
10009de8:	add    esp,0x10
10009deb:	mov    DWORD PTR [esi+0x8],eax
10009dee:	mov    eax,esi
10009df0:	call   0x10059bfd
10009df5:	ret    0x4
10009df8:	mov    esi,DWORD PTR [ebp+0x8]
10009dfb:	call   0x100047e3
10009e00:	push   0x0
10009e02:	push   0x0
10009e04:	call   0x10047aa4
10009e09:	int3   
10009e0a:	mov    eax,esi
10009e0c:	call   0x10004728
10009e11:	cmp    DWORD PTR [esp+0x4],eax
10009e15:	jb     0x10009e1c
10009e17:	call   0x100434a0
10009e1c:	mov    eax,DWORD PTR [esp+0x4]
10009e20:	shl    eax,0x5
10009e23:	add    eax,DWORD PTR [esi+0x4]
10009e26:	ret    0x4
10009e29:	push   ebp
10009e2a:	mov    ebp,esp
10009e2c:	sub    esp,0x10
10009e2f:	push   ebx
10009e30:	push   esi
10009e31:	mov    esi,eax
10009e33:	mov    ebx,DWORD PTR [esi+0x4]
10009e36:	test   ebx,ebx
10009e38:	push   edi
10009e39:	jne    0x10009e3f
10009e3b:	xor    edi,edi
10009e3d:	jmp    0x10009e47
10009e3f:	mov    edi,DWORD PTR [esi+0xc]
10009e42:	sub    edi,ebx
10009e44:	sar    edi,0x5
10009e47:	call   0x10004728
10009e4c:	cmp    eax,edi
10009e4e:	jae    0x10009e62
10009e50:	push   DWORD PTR [ebp+0x8]
10009e53:	push   0x1
10009e55:	push   DWORD PTR [esi+0x8]
10009e58:	call   0x1000a31e
10009e5d:	mov    DWORD PTR [esi+0x8],eax
10009e60:	jmp    0x10009e7c
10009e62:	mov    edi,DWORD PTR [esi+0x8]
10009e65:	cmp    ebx,edi
10009e67:	jbe    0x10009e6e
10009e69:	call   0x100434a0
10009e6e:	push   edi
10009e6f:	push   esi
10009e70:	push   DWORD PTR [ebp+0x8]
10009e73:	lea    eax,[ebp-0xc]
10009e76:	push   eax
10009e77:	call   0x1000a2ac
10009e7c:	pop    edi
10009e7d:	pop    esi
10009e7e:	pop    ebx
10009e7f:	leave  
10009e80:	ret    0x4
10009e83:	push   ebp
10009e84:	mov    ebp,esp
10009e86:	push   ecx
10009e87:	mov    eax,DWORD PTR [esi+0x8]
10009e8a:	push   edi
10009e8b:	mov    edi,DWORD PTR [ebp+0xc]
10009e8e:	add    edi,0x20
10009e91:	cmp    edi,eax
10009e93:	mov    DWORD PTR [ebp-0x4],eax
10009e96:	je     0x10009eb3
10009e98:	push   0xffffffff
10009e9a:	push   0x0
10009e9c:	push   edi
10009e9d:	lea    ecx,[edi-0x20]
10009ea0:	call   0x1000123c
10009ea5:	mov    eax,DWORD PTR [edi+0x1c]
10009ea8:	mov    DWORD PTR [edi-0x4],eax
10009eab:	add    edi,0x20
10009eae:	cmp    edi,DWORD PTR [ebp-0x4]
10009eb1:	jne    0x10009e98
10009eb3:	mov    eax,DWORD PTR [esi+0x8]
10009eb6:	push   eax
10009eb7:	add    eax,0xffffffe0
10009eba:	call   0x10004e77
10009ebf:	mov    eax,DWORD PTR [ebp+0x8]
10009ec2:	add    DWORD PTR [esi+0x8],0xffffffe0
10009ec6:	mov    DWORD PTR [ebx],eax
10009ec8:	mov    eax,DWORD PTR [ebp+0xc]
10009ecb:	mov    DWORD PTR [ebx+0x4],eax
10009ece:	mov    eax,ebx
10009ed0:	pop    edi
10009ed1:	leave  
10009ed2:	ret    0x8
10009ed5:	push   ebx
10009ed6:	mov    ebx,DWORD PTR [eax+0x4]
10009ed9:	push   esi
10009eda:	mov    esi,DWORD PTR [eax]
10009edc:	test   esi,esi
10009ede:	push   edi
10009edf:	mov    edi,ecx
10009ee1:	jne    0x10009ee8
10009ee3:	call   0x100434a0
10009ee8:	shl    edi,0x5
10009eeb:	add    edi,ebx
10009eed:	cmp    edi,DWORD PTR [esi+0x8]
10009ef0:	ja     0x10009ef7
10009ef2:	cmp    edi,DWORD PTR [esi+0x4]
10009ef5:	jae    0x10009efc
10009ef7:	call   0x100434a0
10009efc:	mov    eax,DWORD PTR [esp+0x10]
10009f00:	mov    DWORD PTR [eax+0x4],edi
10009f03:	pop    edi
10009f04:	mov    DWORD PTR [eax],esi
10009f06:	pop    esi
10009f07:	pop    ebx
10009f08:	ret    0x4
10009f0b:	push   ecx
10009f0c:	mov    eax,DWORD PTR [eax]
10009f0e:	test   eax,eax
10009f10:	je     0x10009f18
10009f12:	push   eax
10009f13:	call   0x10009f97
10009f18:	pop    ecx
10009f19:	ret    
10009f1a:	push   esi
10009f1b:	mov    esi,DWORD PTR [eax]
10009f1d:	test   esi,esi
10009f1f:	je     0x10009f2e
10009f21:	push   esi
10009f22:	call   0x10009ffa
10009f27:	push   esi
10009f28:	call   0x10042f82
10009f2d:	pop    ecx
10009f2e:	pop    esi
10009f2f:	ret    
10009f30:	push   0x0
10009f32:	push   0x1
10009f34:	lea    ecx,[esi+0x38]
10009f37:	call   0x100012eb
10009f3c:	push   0x0
10009f3e:	push   0x1
10009f40:	lea    ecx,[esi+0x1c]
10009f43:	call   0x100012eb
10009f48:	push   0x0
10009f4a:	push   0x1
10009f4c:	mov    ecx,esi
10009f4e:	call   0x100012eb
10009f53:	push   esi
10009f54:	call   0x10042f82
10009f59:	pop    ecx
10009f5a:	mov    eax,esi
10009f5c:	ret    
10009f5d:	push   DWORD PTR [edi+0x14]
10009f60:	call   0x10042f82
10009f65:	mov    eax,DWORD PTR [edi+0x8]
10009f68:	test   eax,eax
10009f6a:	pop    ecx
10009f6b:	je     0x10009f74
10009f6d:	push   eax
10009f6e:	call   0x10042f82
10009f73:	pop    ecx
10009f74:	and    DWORD PTR [edi+0x8],0x0
10009f78:	and    DWORD PTR [edi+0xc],0x0
10009f7c:	and    DWORD PTR [edi+0x10],0x0
10009f80:	push   esi
10009f81:	mov    esi,DWORD PTR [edi]
10009f83:	test   esi,esi
10009f85:	je     0x10009f8c
10009f87:	call   0x10009f30
10009f8c:	push   edi
10009f8d:	call   0x10042f82
10009f92:	pop    ecx
10009f93:	mov    eax,edi
10009f95:	pop    esi
10009f96:	ret    
10009f97:	push   0x0
10009f99:	mov    eax,0x100636fe
10009f9e:	call   0x10059b25
10009fa3:	mov    esi,DWORD PTR [ebp+0x8]
10009fa6:	mov    DWORD PTR [ebp-0x4],0x4
10009fad:	mov    eax,DWORD PTR [esi+0x38]
10009fb0:	test   eax,eax
10009fb2:	je     0x10009fba
10009fb4:	mov    ecx,DWORD PTR [eax]
10009fb6:	push   eax
10009fb7:	call   DWORD PTR [ecx+0x8]
10009fba:	mov    edi,DWORD PTR [esi+0x30]
10009fbd:	test   edi,edi
10009fbf:	je     0x10009fc6
10009fc1:	call   0x10009f5d
10009fc6:	lea    ebx,[esi+0x18]
10009fc9:	mov    BYTE PTR [ebp-0x4],0x2
10009fcd:	call   0x10007b7d
10009fd2:	lea    eax,[esi+0x8]
10009fd5:	call   0x10009d00
10009fda:	lea    eax,[esi+0x4]
10009fdd:	call   0x10009d00
10009fe2:	mov    eax,esi
10009fe4:	call   0x10009d00
10009fe9:	push   esi
10009fea:	call   0x10042f82
10009fef:	pop    ecx
10009ff0:	mov    eax,esi
10009ff2:	call   0x10059bfd
10009ff7:	ret    0x4
10009ffa:	push   0x0
10009ffc:	mov    eax,0x10063742
1000a001:	call   0x10059b25
1000a006:	mov    esi,DWORD PTR [ebp+0x8]
1000a009:	mov    DWORD PTR [ebp-0x4],0x3
1000a010:	mov    edi,DWORD PTR [esi+0x34]
1000a013:	test   edi,edi
1000a015:	je     0x1000a01c
1000a017:	call   0x10009f5d
1000a01c:	lea    ebx,[esi+0x20]
1000a01f:	call   0x10007b7d
1000a024:	lea    eax,[esi+0xc]
1000a027:	call   0x10009d00
1000a02c:	lea    eax,[esi+0x8]
1000a02f:	call   0x10009d00
1000a034:	lea    eax,[esi+0x4]
1000a037:	call   0x10009d00
1000a03c:	mov    eax,esi
1000a03e:	call   0x10009d00
1000a043:	call   0x10059bfd
1000a048:	ret    0x4
1000a04b:	push   ebp
1000a04c:	mov    ebp,esp
1000a04e:	push   ecx
1000a04f:	push   ebx
1000a050:	push   esi
1000a051:	mov    esi,eax
1000a053:	push   edi
1000a054:	mov    edi,DWORD PTR [esi+0x4]
1000a057:	xor    ebx,ebx
1000a059:	cmp    edi,ebx
1000a05b:	je     0x1000a089
1000a05d:	mov    eax,DWORD PTR [esi+0x8]
1000a060:	mov    ecx,eax
1000a062:	sub    ecx,edi
1000a064:	sar    ecx,0x2
1000a067:	je     0x1000a089
1000a069:	cmp    edi,eax
1000a06b:	jbe    0x1000a072
1000a06d:	call   0x100434a0
1000a072:	cmp    DWORD PTR [ebp+0x10],ebx
1000a075:	je     0x1000a07c
1000a077:	cmp    DWORD PTR [ebp+0x10],esi
1000a07a:	je     0x1000a081
1000a07c:	call   0x100434a0
1000a081:	mov    ebx,DWORD PTR [ebp+0x14]
1000a084:	sub    ebx,edi
1000a086:	sar    ebx,0x2
1000a089:	push   DWORD PTR [ebp+0x14]
1000a08c:	mov    eax,DWORD PTR [ebp+0xc]
1000a08f:	push   DWORD PTR [ebp+0x10]
1000a092:	mov    ecx,esi
1000a094:	call   0x1000a34e
1000a099:	mov    edi,DWORD PTR [esi+0x4]
1000a09c:	cmp    edi,DWORD PTR [esi+0x8]
1000a09f:	jbe    0x1000a0a6
1000a0a1:	call   0x100434a0
1000a0a6:	mov    DWORD PTR [ebp+0x14],edi
1000a0a9:	lea    edi,[edi+ebx*4]
1000a0ac:	cmp    edi,DWORD PTR [esi+0x8]
1000a0af:	ja     0x1000a0b6
1000a0b1:	cmp    edi,DWORD PTR [esi+0x4]
1000a0b4:	jae    0x1000a0bb
1000a0b6:	call   0x100434a0
1000a0bb:	mov    eax,DWORD PTR [ebp+0x8]
1000a0be:	mov    DWORD PTR [eax+0x4],edi
1000a0c1:	pop    edi
1000a0c2:	mov    DWORD PTR [eax],esi
1000a0c4:	pop    esi
1000a0c5:	pop    ebx
1000a0c6:	leave  
1000a0c7:	ret    0x10
1000a0ca:	test   edx,edx
1000a0cc:	mov    ecx,edx
1000a0ce:	mov    eax,esi
1000a0d0:	jbe    0x1000a0e4
1000a0d2:	push   edi
1000a0d3:	mov    edi,DWORD PTR [esp+0x8]
1000a0d7:	mov    edi,DWORD PTR [edi]
1000a0d9:	mov    DWORD PTR [eax],edi
1000a0db:	dec    ecx
1000a0dc:	add    eax,0x4
1000a0df:	test   ecx,ecx
1000a0e1:	ja     0x1000a0d3
1000a0e3:	pop    edi
1000a0e4:	lea    eax,[esi+edx*4]
1000a0e7:	ret    0x4
1000a0ea:	push   0x48
1000a0ec:	mov    eax,0x100621c0
1000a0f1:	call   0x10059b25
1000a0f6:	mov    edi,ecx
1000a0f8:	cmp    DWORD PTR [esi+0x8],0x5d1745c
1000a0ff:	jb     0x1000a133
1000a101:	push   0x1006d02c
1000a106:	lea    ecx,[ebp-0x2c]
1000a109:	call   0x100011c8
1000a10e:	and    DWORD PTR [ebp-0x4],0x0
1000a112:	lea    eax,[ebp-0x2c]
1000a115:	push   eax
1000a116:	lea    ecx,[ebp-0x54]
1000a119:	call   0x10001065
1000a11e:	push   0x10074ec8
1000a123:	lea    eax,[ebp-0x54]
1000a126:	push   eax
1000a127:	mov    DWORD PTR [ebp-0x54],0x1006b96c
1000a12e:	call   0x10047aa4
1000a133:	push   DWORD PTR [ebp+0x10]
1000a136:	mov    eax,DWORD PTR [esi+0x4]
1000a139:	push   eax
1000a13a:	push   edi
1000a13b:	push   eax
1000a13c:	call   0x1000a61c
1000a141:	inc    DWORD PTR [esi+0x8]
1000a144:	mov    ebx,eax
1000a146:	mov    eax,DWORD PTR [esi+0x4]
1000a149:	cmp    edi,eax
1000a14b:	jne    0x1000a15a
1000a14d:	mov    DWORD PTR [eax+0x4],ebx
1000a150:	mov    eax,DWORD PTR [esi+0x4]
1000a153:	mov    DWORD PTR [eax],ebx
1000a155:	mov    eax,DWORD PTR [esi+0x4]
1000a158:	jmp    0x1000a178
1000a15a:	cmp    BYTE PTR [ebp+0xc],0x0
1000a15e:	je     0x1000a16d
1000a160:	mov    DWORD PTR [edi],ebx
1000a162:	mov    eax,DWORD PTR [esi+0x4]
1000a165:	cmp    edi,DWORD PTR [eax]
1000a167:	jne    0x1000a17b
1000a169:	mov    DWORD PTR [eax],ebx
1000a16b:	jmp    0x1000a17b
1000a16d:	mov    DWORD PTR [edi+0x8],ebx
1000a170:	mov    eax,DWORD PTR [esi+0x4]
1000a173:	cmp    edi,DWORD PTR [eax+0x8]
1000a176:	jne    0x1000a17b
1000a178:	mov    DWORD PTR [eax+0x8],ebx
1000a17b:	mov    edi,ebx
1000a17d:	lea    eax,[ebx+0x4]
1000a180:	jmp    0x1000a20f
1000a185:	mov    ecx,DWORD PTR [eax]
1000a187:	mov    edx,DWORD PTR [ecx+0x4]
1000a18a:	cmp    ecx,DWORD PTR [edx]
1000a18c:	jne    0x1000a1c3
1000a18e:	mov    edx,DWORD PTR [edx+0x8]
1000a191:	cmp    BYTE PTR [edx+0x38],0x0
1000a195:	je     0x1000a1cb
1000a197:	cmp    edi,DWORD PTR [ecx+0x8]
1000a19a:	jne    0x1000a1a4
1000a19c:	push   esi
1000a19d:	mov    edi,ecx
1000a19f:	call   0x1000d2b4
1000a1a4:	mov    eax,DWORD PTR [edi+0x4]
1000a1a7:	mov    BYTE PTR [eax+0x38],0x1
1000a1ab:	mov    eax,DWORD PTR [edi+0x4]
1000a1ae:	mov    eax,DWORD PTR [eax+0x4]
1000a1b1:	mov    BYTE PTR [eax+0x38],0x0
1000a1b5:	mov    eax,DWORD PTR [edi+0x4]
1000a1b8:	mov    ecx,DWORD PTR [eax+0x4]
1000a1bb:	push   esi
1000a1bc:	call   0x1000a235
1000a1c1:	jmp    0x1000a20c
1000a1c3:	mov    edx,DWORD PTR [edx]
1000a1c5:	cmp    BYTE PTR [edx+0x38],0x0
1000a1c9:	jne    0x1000a1e3
1000a1cb:	mov    BYTE PTR [ecx+0x38],0x1
1000a1cf:	mov    BYTE PTR [edx+0x38],0x1
1000a1d3:	mov    ecx,DWORD PTR [eax]
1000a1d5:	mov    ecx,DWORD PTR [ecx+0x4]
1000a1d8:	mov    BYTE PTR [ecx+0x38],0x0
1000a1dc:	mov    eax,DWORD PTR [eax]
1000a1de:	mov    edi,DWORD PTR [eax+0x4]
1000a1e1:	jmp    0x1000a20c
1000a1e3:	cmp    edi,DWORD PTR [ecx]
1000a1e5:	jne    0x1000a1ef
1000a1e7:	push   esi
1000a1e8:	mov    edi,ecx
1000a1ea:	call   0x1000a235
1000a1ef:	mov    eax,DWORD PTR [edi+0x4]
1000a1f2:	mov    BYTE PTR [eax+0x38],0x1
1000a1f6:	mov    eax,DWORD PTR [edi+0x4]
1000a1f9:	mov    eax,DWORD PTR [eax+0x4]
1000a1fc:	mov    BYTE PTR [eax+0x38],0x0
1000a200:	mov    eax,DWORD PTR [edi+0x4]
1000a203:	mov    ecx,DWORD PTR [eax+0x4]
1000a206:	push   esi
1000a207:	call   0x1000d2b4
1000a20c:	lea    eax,[edi+0x4]
1000a20f:	mov    ecx,DWORD PTR [eax]
1000a211:	cmp    BYTE PTR [ecx+0x38],0x0
1000a215:	je     0x1000a185
1000a21b:	mov    eax,DWORD PTR [esi+0x4]
1000a21e:	mov    eax,DWORD PTR [eax+0x4]
1000a221:	mov    BYTE PTR [eax+0x38],0x1
1000a225:	mov    eax,DWORD PTR [ebp+0x8]
1000a228:	mov    DWORD PTR [eax+0x4],ebx
1000a22b:	mov    DWORD PTR [eax],esi
1000a22d:	call   0x10059bfd
1000a232:	ret    0xc
1000a235:	mov    eax,DWORD PTR [ecx]
1000a237:	mov    edx,DWORD PTR [eax+0x8]
1000a23a:	mov    DWORD PTR [ecx],edx
1000a23c:	mov    edx,DWORD PTR [eax+0x8]
1000a23f:	cmp    BYTE PTR [edx+0x39],0x0
1000a243:	jne    0x1000a248
1000a245:	mov    DWORD PTR [edx+0x4],ecx
1000a248:	mov    edx,DWORD PTR [ecx+0x4]
1000a24b:	mov    DWORD PTR [eax+0x4],edx
1000a24e:	mov    edx,DWORD PTR [esp+0x4]
1000a252:	mov    edx,DWORD PTR [edx+0x4]
1000a255:	cmp    ecx,DWORD PTR [edx+0x4]
1000a258:	jne    0x1000a25f
1000a25a:	mov    DWORD PTR [edx+0x4],eax
1000a25d:	jmp    0x1000a26e
1000a25f:	mov    edx,DWORD PTR [ecx+0x4]
1000a262:	cmp    ecx,DWORD PTR [edx+0x8]
1000a265:	jne    0x1000a26c
1000a267:	mov    DWORD PTR [edx+0x8],eax
1000a26a:	jmp    0x1000a26e
1000a26c:	mov    DWORD PTR [edx],eax
1000a26e:	mov    DWORD PTR [eax+0x8],ecx
1000a271:	mov    DWORD PTR [ecx+0x4],eax
1000a274:	ret    0x4
1000a277:	push   ebp
1000a278:	mov    ebp,esp
1000a27a:	and    esp,0xfffffff8
1000a27d:	sub    esp,0xc
1000a280:	push   ebx
1000a281:	mov    ebx,eax
1000a283:	mov    eax,DWORD PTR [ebx+0x4]
1000a286:	mov    ecx,DWORD PTR [eax]
1000a288:	push   eax
1000a289:	push   ebx
1000a28a:	push   ecx
1000a28b:	push   ebx
1000a28c:	lea    eax,[esp+0x18]
1000a290:	push   eax
1000a291:	call   0x1000a540
1000a296:	push   DWORD PTR [ebx+0x4]
1000a299:	call   0x10042f82
1000a29e:	and    DWORD PTR [ebx+0x4],0x0
1000a2a2:	and    DWORD PTR [ebx+0x8],0x0
1000a2a6:	pop    ecx
1000a2a7:	pop    ebx
1000a2a8:	mov    esp,ebp
1000a2aa:	pop    ebp
1000a2ab:	ret    
1000a2ac:	push   ebp
1000a2ad:	mov    ebp,esp
1000a2af:	push   ebx
1000a2b0:	push   edi
1000a2b1:	mov    eax,esi
1000a2b3:	call   0x10004728
1000a2b8:	test   eax,eax
1000a2ba:	jne    0x1000a2c0
1000a2bc:	xor    ebx,ebx
1000a2be:	jmp    0x1000a2e5
1000a2c0:	mov    edi,DWORD PTR [esi+0x4]
1000a2c3:	cmp    edi,DWORD PTR [esi+0x8]
1000a2c6:	jbe    0x1000a2cd
1000a2c8:	call   0x100434a0
1000a2cd:	cmp    DWORD PTR [ebp+0x10],0x0
1000a2d1:	je     0x1000a2d8
1000a2d3:	cmp    DWORD PTR [ebp+0x10],esi
1000a2d6:	je     0x1000a2dd
1000a2d8:	call   0x100434a0
1000a2dd:	mov    ebx,DWORD PTR [ebp+0x14]
1000a2e0:	sub    ebx,edi
1000a2e2:	sar    ebx,0x5
1000a2e5:	push   DWORD PTR [ebp+0x14]
1000a2e8:	mov    edx,DWORD PTR [ebp+0xc]
1000a2eb:	push   DWORD PTR [ebp+0x10]
1000a2ee:	mov    ecx,esi
1000a2f0:	call   0x1000a66e
1000a2f5:	mov    edi,DWORD PTR [esi+0x4]
1000a2f8:	cmp    edi,DWORD PTR [esi+0x8]
1000a2fb:	jbe    0x1000a302
1000a2fd:	call   0x100434a0
1000a302:	push   DWORD PTR [ebp+0x8]
1000a305:	mov    ecx,ebx
1000a307:	lea    eax,[ebp+0x10]
1000a30a:	mov    DWORD PTR [ebp+0x10],esi
1000a30d:	mov    DWORD PTR [ebp+0x14],edi
1000a310:	call   0x10009ed5
1000a315:	mov    eax,DWORD PTR [ebp+0x8]
1000a318:	pop    edi
1000a319:	pop    ebx
1000a31a:	pop    ebp
1000a31b:	ret    0x10
1000a31e:	push   ebp
1000a31f:	mov    ebp,esp
1000a321:	push   ecx
1000a322:	push   edi
1000a323:	xor    eax,eax
1000a325:	lea    edi,[ebp-0x4]
1000a328:	stos   BYTE PTR es:[edi],al
1000a329:	push   DWORD PTR [ebp-0x4]
1000a32c:	push   DWORD PTR [ebp+0xc]
1000a32f:	push   DWORD PTR [ebp+0x10]
1000a332:	push   DWORD PTR [ebp+0xc]
1000a335:	push   DWORD PTR [ebp+0x8]
1000a338:	call   0x1000a9ed
1000a33d:	mov    eax,DWORD PTR [ebp+0xc]
1000a340:	add    esp,0x14
1000a343:	shl    eax,0x5
1000a346:	add    eax,DWORD PTR [ebp+0x8]
1000a349:	pop    edi
1000a34a:	leave  
1000a34b:	ret    0xc
1000a34e:	push   ebp
1000a34f:	mov    ebp,esp
1000a351:	sub    esp,0xc
1000a354:	mov    eax,DWORD PTR [eax]
1000a356:	push   ebx
1000a357:	push   esi
1000a358:	push   edi
1000a359:	mov    edi,ecx
1000a35b:	mov    ecx,DWORD PTR [edi+0x4]
1000a35e:	test   ecx,ecx
1000a360:	mov    DWORD PTR [ebp-0x8],eax
1000a363:	jne    0x1000a36a
1000a365:	and    DWORD PTR [ebp-0x4],ecx
1000a368:	jmp    0x1000a375
1000a36a:	mov    eax,DWORD PTR [edi+0xc]
1000a36d:	sub    eax,ecx
1000a36f:	sar    eax,0x2
1000a372:	mov    DWORD PTR [ebp-0x4],eax
1000a375:	test   ecx,ecx
1000a377:	jne    0x1000a37d
1000a379:	xor    eax,eax
1000a37b:	jmp    0x1000a385
1000a37d:	mov    eax,DWORD PTR [edi+0x8]
1000a380:	sub    eax,ecx
1000a382:	sar    eax,0x2
1000a385:	mov    edx,0x3fffffff
1000a38a:	mov    esi,edx
1000a38c:	sub    esi,eax
1000a38e:	cmp    esi,0x1
1000a391:	jae    0x1000a398
1000a393:	call   0x1000fb8b
1000a398:	test   ecx,ecx
1000a39a:	jne    0x1000a3a0
1000a39c:	xor    eax,eax
1000a39e:	jmp    0x1000a3a8
1000a3a0:	mov    eax,DWORD PTR [edi+0x8]
1000a3a3:	sub    eax,ecx
1000a3a5:	sar    eax,0x2
1000a3a8:	inc    eax
1000a3a9:	cmp    DWORD PTR [ebp-0x4],eax
1000a3ac:	jae    0x1000a459
1000a3b2:	mov    eax,DWORD PTR [ebp-0x4]
1000a3b5:	shr    eax,1
1000a3b7:	sub    edx,eax
1000a3b9:	cmp    edx,DWORD PTR [ebp-0x4]
1000a3bc:	jae    0x1000a3c4
1000a3be:	and    DWORD PTR [ebp-0x4],0x0
1000a3c2:	jmp    0x1000a3c7
1000a3c4:	add    DWORD PTR [ebp-0x4],eax
1000a3c7:	test   ecx,ecx
1000a3c9:	jne    0x1000a3cf
1000a3cb:	xor    eax,eax
1000a3cd:	jmp    0x1000a3d7
1000a3cf:	mov    eax,DWORD PTR [edi+0x8]
1000a3d2:	sub    eax,ecx
1000a3d4:	sar    eax,0x2
1000a3d7:	inc    eax
1000a3d8:	cmp    DWORD PTR [ebp-0x4],eax
1000a3db:	jae    0x1000a3f1
1000a3dd:	test   ecx,ecx
1000a3df:	jne    0x1000a3e5
1000a3e1:	xor    eax,eax
1000a3e3:	jmp    0x1000a3ed
1000a3e5:	mov    eax,DWORD PTR [edi+0x8]
1000a3e8:	sub    eax,ecx
1000a3ea:	sar    eax,0x2
1000a3ed:	inc    eax
1000a3ee:	mov    DWORD PTR [ebp-0x4],eax
1000a3f1:	mov    ecx,DWORD PTR [ebp-0x4]
1000a3f4:	call   0x1000a4f4
1000a3f9:	push   DWORD PTR [edi+0x4]
1000a3fc:	mov    ebx,eax
1000a3fe:	mov    eax,DWORD PTR [ebp+0xc]
1000a401:	mov    ecx,ebx
1000a403:	call   0x1000a9c4
1000a408:	lea    ecx,[ebp-0x8]
1000a40b:	xor    edx,edx
1000a40d:	push   ecx
1000a40e:	inc    edx
1000a40f:	mov    esi,eax
1000a411:	call   0x1000a0ca
1000a416:	push   DWORD PTR [ebp+0xc]
1000a419:	mov    ecx,eax
1000a41b:	mov    eax,DWORD PTR [edi+0x8]
1000a41e:	call   0x1000a9c4
1000a423:	mov    eax,DWORD PTR [edi+0x4]
1000a426:	test   eax,eax
1000a428:	jne    0x1000a42e
1000a42a:	xor    esi,esi
1000a42c:	jmp    0x1000a436
1000a42e:	mov    esi,DWORD PTR [edi+0x8]
1000a431:	sub    esi,eax
1000a433:	sar    esi,0x2
1000a436:	test   eax,eax
1000a438:	je     0x1000a441
1000a43a:	push   eax
1000a43b:	call   0x10042f82
1000a440:	pop    ecx
1000a441:	mov    eax,DWORD PTR [ebp-0x4]
1000a444:	lea    eax,[ebx+eax*4]
1000a447:	mov    DWORD PTR [edi+0xc],eax
1000a44a:	lea    eax,[ebx+esi*4+0x4]
1000a44e:	mov    DWORD PTR [edi+0x8],eax
1000a451:	mov    DWORD PTR [edi+0x4],ebx
1000a454:	jmp    0x1000a4ed
1000a459:	mov    esi,DWORD PTR [edi+0x8]
1000a45c:	mov    ebx,DWORD PTR [ebp+0xc]
1000a45f:	mov    eax,esi
1000a461:	sub    eax,ebx
1000a463:	sar    eax,0x2
1000a466:	cmp    eax,0x1
1000a469:	jae    0x1000a4ac
1000a46b:	lea    ecx,[ebx+0x4]
1000a46e:	push   ebx
1000a46f:	mov    eax,esi
1000a471:	call   0x1000a9c4
1000a476:	mov    esi,DWORD PTR [edi+0x8]
1000a479:	lea    eax,[ebp-0x8]
1000a47c:	push   eax
1000a47d:	mov    eax,esi
1000a47f:	xor    edx,edx
1000a481:	sub    eax,ebx
1000a483:	sar    eax,0x2
1000a486:	inc    edx
1000a487:	sub    edx,eax
1000a489:	call   0x1000a0ca
1000a48e:	add    DWORD PTR [edi+0x8],0x4
1000a492:	mov    edi,DWORD PTR [edi+0x8]
1000a495:	lea    eax,[edi-0x4]
1000a498:	cmp    ebx,eax
1000a49a:	mov    ecx,ebx
1000a49c:	je     0x1000a4ed
1000a49e:	mov    edx,DWORD PTR [ebp-0x8]
1000a4a1:	mov    DWORD PTR [ecx],edx
1000a4a3:	add    ecx,0x4
1000a4a6:	cmp    ecx,eax
1000a4a8:	jne    0x1000a49e
1000a4aa:	jmp    0x1000a4ed
1000a4ac:	lea    eax,[esi-0x4]
1000a4af:	mov    DWORD PTR [ebp+0xc],eax
1000a4b2:	push   eax
1000a4b3:	mov    ecx,esi
1000a4b5:	mov    eax,esi
1000a4b7:	call   0x1000a9c4
1000a4bc:	mov    DWORD PTR [edi+0x8],eax
1000a4bf:	mov    eax,DWORD PTR [ebp+0xc]
1000a4c2:	sub    eax,ebx
1000a4c4:	sar    eax,0x2
1000a4c7:	test   eax,eax
1000a4c9:	jle    0x1000a4dc
1000a4cb:	shl    eax,0x2
1000a4ce:	push   eax
1000a4cf:	push   ebx
1000a4d0:	push   eax
1000a4d1:	sub    esi,eax
1000a4d3:	push   esi
1000a4d4:	call   0x10042f96
1000a4d9:	add    esp,0x10
1000a4dc:	lea    eax,[ebx+0x4]
1000a4df:	jmp    0x1000a4e9
1000a4e1:	mov    ecx,DWORD PTR [ebp-0x8]
1000a4e4:	mov    DWORD PTR [ebx],ecx
1000a4e6:	add    ebx,0x4
1000a4e9:	cmp    ebx,eax
1000a4eb:	jne    0x1000a4e1
1000a4ed:	pop    edi
1000a4ee:	pop    esi
1000a4ef:	pop    ebx
1000a4f0:	leave  
1000a4f1:	ret    0x8
1000a4f4:	push   ebp
1000a4f5:	mov    ebp,esp
1000a4f7:	sub    esp,0x10
1000a4fa:	test   ecx,ecx
1000a4fc:	ja     0x1000a50e
1000a4fe:	xor    ecx,ecx
1000a500:	mov    eax,ecx
1000a502:	shl    eax,0x2
1000a505:	push   eax
1000a506:	call   0x1004358e
1000a50b:	pop    ecx
1000a50c:	leave  
1000a50d:	ret    
1000a50e:	or     eax,0xffffffff
1000a511:	xor    edx,edx
1000a513:	div    ecx
1000a515:	cmp    eax,0x4
1000a518:	jae    0x1000a500
1000a51a:	and    DWORD PTR [ebp-0x4],0x0
1000a51e:	lea    eax,[ebp-0x4]
1000a521:	push   eax
1000a522:	lea    ecx,[ebp-0x10]
1000a525:	call   0x10043002
1000a52a:	push   0x10074e20
1000a52f:	lea    eax,[ebp-0x10]
1000a532:	push   eax
1000a533:	mov    DWORD PTR [ebp-0x10],0x100665c8
1000a53a:	call   0x10047aa4
1000a53f:	int3   
1000a540:	push   ebp
1000a541:	mov    ebp,esp
1000a543:	sub    esp,0x14
1000a546:	mov    eax,DWORD PTR [ebx+0x4]
1000a549:	mov    eax,DWORD PTR [eax]
1000a54b:	push   esi
1000a54c:	push   edi
1000a54d:	lea    edi,[ebp-0xc]
1000a550:	lea    esi,[ebp+0xc]
1000a553:	mov    DWORD PTR [ebp-0x8],eax
1000a556:	mov    DWORD PTR [ebp-0xc],ebx
1000a559:	call   0x10009d5c
1000a55e:	test   al,al
1000a560:	je     0x1000a5c7
1000a562:	mov    eax,DWORD PTR [ebx+0x4]
1000a565:	lea    edi,[ebp-0xc]
1000a568:	lea    esi,[ebp+0x14]
1000a56b:	mov    DWORD PTR [ebp-0x8],eax
1000a56e:	mov    DWORD PTR [ebp-0xc],ebx
1000a571:	call   0x10009d5c
1000a576:	test   al,al
1000a578:	je     0x1000a5c7
1000a57a:	mov    eax,DWORD PTR [ebx+0x4]
1000a57d:	push   DWORD PTR [eax+0x4]
1000a580:	mov    ecx,ebx
1000a582:	call   0x1000a8f4
1000a587:	mov    eax,DWORD PTR [ebx+0x4]
1000a58a:	mov    DWORD PTR [eax+0x4],eax
1000a58d:	mov    eax,DWORD PTR [ebx+0x4]
1000a590:	and    DWORD PTR [ebx+0x8],0x0
1000a594:	mov    DWORD PTR [eax],eax
1000a596:	mov    eax,DWORD PTR [ebx+0x4]
1000a599:	mov    DWORD PTR [eax+0x8],eax
1000a59c:	mov    eax,DWORD PTR [ebx+0x4]
1000a59f:	mov    ecx,DWORD PTR [eax]
1000a5a1:	mov    eax,DWORD PTR [ebp+0x8]
1000a5a4:	mov    DWORD PTR [eax],ebx
1000a5a6:	jmp    0x1000a5e1
1000a5a8:	mov    eax,DWORD PTR [ebp+0x10]
1000a5ab:	mov    edi,DWORD PTR [ebp+0xc]
1000a5ae:	lea    esi,[ebp+0xc]
1000a5b1:	mov    DWORD PTR [ebp-0x8],eax
1000a5b4:	call   0x1000cdd4
1000a5b9:	push   DWORD PTR [ebp-0x8]
1000a5bc:	lea    eax,[ebp-0x14]
1000a5bf:	push   edi
1000a5c0:	push   eax
1000a5c1:	push   ebx
1000a5c2:	call   0x100099f2
1000a5c7:	lea    edi,[ebp+0x14]
1000a5ca:	lea    esi,[ebp+0xc]
1000a5cd:	call   0x10009d5c
1000a5d2:	test   al,al
1000a5d4:	je     0x1000a5a8
1000a5d6:	mov    ecx,DWORD PTR [ebp+0xc]
1000a5d9:	mov    eax,DWORD PTR [ebp+0x8]
1000a5dc:	mov    DWORD PTR [eax],ecx
1000a5de:	mov    ecx,DWORD PTR [ebp+0x10]
1000a5e1:	pop    edi
1000a5e2:	mov    DWORD PTR [eax+0x4],ecx
1000a5e5:	pop    esi
1000a5e6:	leave  
1000a5e7:	ret    0x14
1000a5ea:	mov    eax,DWORD PTR [eax+0x4]
1000a5ed:	push   esi
1000a5ee:	mov    esi,DWORD PTR [eax+0x4]
1000a5f1:	push   edi
1000a5f2:	mov    edi,eax
1000a5f4:	jmp    0x1000a60f
1000a5f6:	mov    eax,DWORD PTR [esp+0xc]
1000a5fa:	lea    ecx,[esi+0xc]
1000a5fd:	call   0x1000779d
1000a602:	test   al,al
1000a604:	je     0x1000a60b
1000a606:	mov    esi,DWORD PTR [esi+0x8]
1000a609:	jmp    0x1000a60f
1000a60b:	mov    edi,esi
1000a60d:	mov    esi,DWORD PTR [esi]
1000a60f:	cmp    BYTE PTR [esi+0x39],0x0
1000a613:	je     0x1000a5f6
1000a615:	mov    eax,edi
1000a617:	pop    edi
1000a618:	pop    esi
1000a619:	ret    0x4
1000a61c:	push   0xc
1000a61e:	mov    eax,0x1006219d
1000a623:	call   0x10059b58
1000a628:	push   0x3c
1000a62a:	call   0x1004358e
1000a62f:	mov    esi,eax
1000a631:	pop    ecx
1000a632:	mov    DWORD PTR [ebp-0x14],esi
1000a635:	test   esi,esi
1000a637:	mov    DWORD PTR [ebp-0x4],0x1
1000a63e:	je     0x1000a651
1000a640:	push   DWORD PTR [ebp+0x10]
1000a643:	mov    ebx,DWORD PTR [ebp+0x14]
1000a646:	push   DWORD PTR [ebp+0xc]
1000a649:	push   DWORD PTR [ebp+0x8]
1000a64c:	call   0x1000a8a7
1000a651:	mov    eax,esi
1000a653:	call   0x10059bfd
1000a658:	ret    0x10
1000a65b:	push   DWORD PTR [ebp-0x14]
1000a65e:	call   0x10042f82
1000a663:	pop    ecx
1000a664:	push   0x0
1000a666:	push   0x0
1000a668:	call   0x10047aa4
1000a66d:	int3   
1000a66e:	push   0x34
1000a670:	mov    eax,0x100611bb
1000a675:	call   0x10059bc4
1000a67a:	mov    esi,ecx
1000a67c:	mov    edi,edx
1000a67e:	push   edi
1000a67f:	lea    ecx,[ebp-0x38]
1000a682:	mov    DWORD PTR [ebp-0x3c],esi
1000a685:	call   0x100011a2
1000a68a:	mov    eax,DWORD PTR [edi+0x1c]
1000a68d:	mov    DWORD PTR [ebp-0x1c],eax
1000a690:	xor    edi,edi
1000a692:	mov    DWORD PTR [ebp-0x4],edi
1000a695:	mov    eax,DWORD PTR [esi+0x4]
1000a698:	cmp    eax,edi
1000a69a:	je     0x1000a6a4
1000a69c:	mov    edi,DWORD PTR [esi+0xc]
1000a69f:	sub    edi,eax
1000a6a1:	sar    edi,0x5
1000a6a4:	mov    eax,esi
1000a6a6:	call   0x10004728
1000a6ab:	mov    ebx,0x7ffffff
1000a6b0:	mov    ecx,ebx
1000a6b2:	sub    ecx,eax
1000a6b4:	cmp    ecx,0x1
1000a6b7:	jae    0x1000a6be
1000a6b9:	call   0x1000fb8b
1000a6be:	mov    eax,esi
1000a6c0:	call   0x10004728
1000a6c5:	inc    eax
1000a6c6:	cmp    edi,eax
1000a6c8:	jae    0x1000a789
1000a6ce:	mov    eax,edi
1000a6d0:	shr    eax,1
1000a6d2:	sub    ebx,eax
1000a6d4:	cmp    ebx,edi
1000a6d6:	jae    0x1000a6dc
1000a6d8:	xor    edi,edi
1000a6da:	jmp    0x1000a6de
1000a6dc:	add    edi,eax
1000a6de:	mov    eax,esi
1000a6e0:	call   0x10004728
1000a6e5:	inc    eax
1000a6e6:	cmp    edi,eax
1000a6e8:	jae    0x1000a6f4
1000a6ea:	mov    eax,esi
1000a6ec:	call   0x10004728
1000a6f1:	mov    edi,eax
1000a6f3:	inc    edi
1000a6f4:	mov    ecx,edi
1000a6f6:	call   0x10004e94
1000a6fb:	push   eax
1000a6fc:	push   DWORD PTR [ebp+0xc]
1000a6ff:	mov    BYTE PTR [ebp-0x4],0x1
1000a703:	mov    ecx,DWORD PTR [esi+0x4]
1000a706:	mov    DWORD PTR [ebp-0x3c],eax
1000a709:	mov    DWORD PTR [ebp-0x40],eax
1000a70c:	call   0x1000667a
1000a711:	lea    ecx,[ebp-0x38]
1000a714:	push   ecx
1000a715:	push   0x1
1000a717:	push   eax
1000a718:	mov    DWORD PTR [ebp-0x40],eax
1000a71b:	call   0x1000a31e
1000a720:	mov    ecx,DWORD PTR [ebp+0xc]
1000a723:	push   eax
1000a724:	push   DWORD PTR [esi+0x8]
1000a727:	mov    DWORD PTR [ebp-0x40],eax
1000a72a:	call   0x1000667a
1000a72f:	mov    eax,esi
1000a731:	call   0x10004728
1000a736:	mov    ebx,eax
1000a738:	mov    eax,DWORD PTR [esi+0x4]
1000a73b:	inc    ebx
1000a73c:	test   eax,eax
1000a73e:	je     0x1000a751
1000a740:	push   DWORD PTR [esi+0x8]
1000a743:	call   0x10004e77
1000a748:	push   DWORD PTR [esi+0x4]
1000a74b:	call   0x10042f82
1000a750:	pop    ecx
1000a751:	mov    eax,DWORD PTR [ebp-0x3c]
1000a754:	shl    edi,0x5
1000a757:	add    edi,eax
1000a759:	shl    ebx,0x5
1000a75c:	add    ebx,eax
1000a75e:	mov    DWORD PTR [esi+0xc],edi
1000a761:	mov    DWORD PTR [esi+0x8],ebx
1000a764:	mov    DWORD PTR [esi+0x4],eax
1000a767:	jmp    0x1000a869
1000a76c:	push   DWORD PTR [ebp-0x40]
1000a76f:	mov    eax,DWORD PTR [ebp-0x3c]
1000a772:	call   0x10004e77
1000a777:	push   DWORD PTR [ebp-0x3c]
1000a77a:	call   0x10042f82
1000a77f:	pop    ecx
1000a780:	push   0x0
1000a782:	push   0x0
1000a784:	call   0x10047aa4
1000a789:	mov    eax,DWORD PTR [esi+0x8]
1000a78c:	mov    edi,DWORD PTR [ebp+0xc]
1000a78f:	mov    ecx,eax
1000a791:	sub    ecx,edi
1000a793:	sar    ecx,0x5
1000a796:	cmp    ecx,0x1
1000a799:	jae    0x1000a815
1000a79b:	lea    ecx,[edi+0x20]
1000a79e:	push   ecx
1000a79f:	push   eax
1000a7a0:	mov    ecx,edi
1000a7a2:	call   0x1000667a
1000a7a7:	mov    BYTE PTR [ebp-0x4],0x3
1000a7ab:	mov    eax,DWORD PTR [esi+0x8]
1000a7ae:	lea    ecx,[ebp-0x38]
1000a7b1:	push   ecx
1000a7b2:	mov    ecx,eax
1000a7b4:	xor    edx,edx
1000a7b6:	sub    ecx,edi
1000a7b8:	sar    ecx,0x5
1000a7bb:	inc    edx
1000a7bc:	sub    edx,ecx
1000a7be:	push   edx
1000a7bf:	push   eax
1000a7c0:	call   0x1000a31e
1000a7c5:	and    DWORD PTR [ebp-0x4],0x0
1000a7c9:	add    DWORD PTR [esi+0x8],0x20
1000a7cd:	mov    esi,DWORD PTR [esi+0x8]
1000a7d0:	lea    ebx,[esi-0x20]
1000a7d3:	cmp    edi,ebx
1000a7d5:	mov    esi,edi
1000a7d7:	je     0x1000a869
1000a7dd:	push   0xffffffff
1000a7df:	push   0x0
1000a7e1:	lea    eax,[ebp-0x38]
1000a7e4:	push   eax
1000a7e5:	mov    ecx,esi
1000a7e7:	call   0x1000123c
1000a7ec:	mov    eax,DWORD PTR [ebp-0x1c]
1000a7ef:	mov    DWORD PTR [esi+0x1c],eax
1000a7f2:	add    esi,0x20
1000a7f5:	cmp    esi,ebx
1000a7f7:	jne    0x1000a7dd
1000a7f9:	jmp    0x1000a869
1000a7fb:	mov    eax,DWORD PTR [ebp-0x3c]
1000a7fe:	mov    eax,DWORD PTR [eax+0x8]
1000a801:	add    eax,0x20
1000a804:	push   eax
1000a805:	mov    eax,DWORD PTR [ebp+0xc]
1000a808:	add    eax,0x20
1000a80b:	call   0x10004e77
1000a810:	jmp    0x1000a780
1000a815:	lea    ebx,[eax-0x20]
1000a818:	push   eax
1000a819:	push   eax
1000a81a:	mov    ecx,ebx
1000a81c:	call   0x1000667a
1000a821:	mov    DWORD PTR [esi+0x8],eax
1000a824:	mov    esi,ebx
1000a826:	cmp    edi,esi
1000a828:	je     0x1000a844
1000a82a:	push   0xffffffff
1000a82c:	sub    esi,0x20
1000a82f:	push   0x0
1000a831:	push   esi
1000a832:	lea    ecx,[esi+0x20]
1000a835:	call   0x1000123c
1000a83a:	cmp    esi,edi
1000a83c:	mov    eax,DWORD PTR [esi+0x1c]
1000a83f:	mov    DWORD PTR [esi+0x3c],eax
1000a842:	jne    0x1000a82a
1000a844:	lea    ebx,[edi+0x20]
1000a847:	cmp    edi,ebx
1000a849:	mov    esi,edi
1000a84b:	je     0x1000a869
1000a84d:	push   0xffffffff
1000a84f:	push   0x0
1000a851:	lea    eax,[ebp-0x38]
1000a854:	push   eax
1000a855:	mov    ecx,esi
1000a857:	call   0x1000123c
1000a85c:	mov    eax,DWORD PTR [ebp-0x1c]
1000a85f:	mov    DWORD PTR [esi+0x1c],eax
1000a862:	add    esi,0x20
1000a865:	cmp    esi,ebx
1000a867:	jne    0x1000a84d
1000a869:	push   0x0
1000a86b:	push   0x1
1000a86d:	lea    ecx,[ebp-0x38]
1000a870:	call   0x100012eb
1000a875:	call   0x10059c20
1000a87a:	ret    0x8
1000a87d:	push   0x3c
1000a87f:	call   0x1004358e
1000a884:	xor    edx,edx
1000a886:	cmp    eax,edx
1000a888:	pop    ecx
1000a889:	je     0x1000a88d
1000a88b:	mov    DWORD PTR [eax],edx
1000a88d:	lea    ecx,[eax+0x4]
1000a890:	cmp    ecx,edx
1000a892:	je     0x1000a896
1000a894:	mov    DWORD PTR [ecx],edx
1000a896:	lea    ecx,[eax+0x8]
1000a899:	cmp    ecx,edx
1000a89b:	je     0x1000a89f
1000a89d:	mov    DWORD PTR [ecx],edx
1000a89f:	mov    BYTE PTR [eax+0x38],0x1
1000a8a3:	mov    BYTE PTR [eax+0x39],dl
1000a8a6:	ret    
1000a8a7:	push   0x0
1000a8a9:	mov    eax,0x1006214a
1000a8ae:	call   0x10059b25
1000a8b3:	mov    eax,DWORD PTR [ebp+0x8]
1000a8b6:	mov    DWORD PTR [esi],eax
1000a8b8:	mov    eax,DWORD PTR [ebp+0xc]
1000a8bb:	mov    DWORD PTR [esi+0x4],eax
1000a8be:	mov    eax,DWORD PTR [ebp+0x10]
1000a8c1:	lea    edi,[esi+0xc]
1000a8c4:	push   ebx
1000a8c5:	mov    ecx,edi
1000a8c7:	mov    DWORD PTR [esi+0x8],eax
1000a8ca:	mov    DWORD PTR [ebp+0x8],edi
1000a8cd:	call   0x100011a2
1000a8d2:	and    DWORD PTR [ebp-0x4],0x0
1000a8d6:	add    edi,0x1c
1000a8d9:	lea    ecx,[ebx+0x1c]
1000a8dc:	push   edi
1000a8dd:	call   0x10009d77
1000a8e2:	mov    BYTE PTR [esi+0x38],0x0
1000a8e6:	mov    BYTE PTR [esi+0x39],0x0
1000a8ea:	mov    eax,esi
1000a8ec:	call   0x10059bfd
1000a8f1:	ret    0xc
1000a8f4:	push   ecx
1000a8f5:	push   ebp
1000a8f6:	mov    ebp,DWORD PTR [esp+0xc]
1000a8fa:	cmp    BYTE PTR [ebp+0x39],0x0
1000a8fe:	push   edi
1000a8ff:	mov    DWORD PTR [esp+0x8],ecx
1000a903:	mov    edi,ebp
1000a905:	jne    0x1000a93e
1000a907:	push   ebx
1000a908:	push   esi
1000a909:	push   DWORD PTR [edi+0x8]
1000a90c:	mov    ecx,DWORD PTR [esp+0x14]
1000a910:	call   0x1000a8f4
1000a915:	mov    edi,DWORD PTR [edi]
1000a917:	lea    ebx,[ebp+0xc]
1000a91a:	lea    esi,[ebx+0x1c]
1000a91d:	call   0x100047e3
1000a922:	push   0x0
1000a924:	push   0x1
1000a926:	mov    ecx,ebx
1000a928:	call   0x100012eb
1000a92d:	push   ebp
1000a92e:	call   0x10042f82
1000a933:	cmp    BYTE PTR [edi+0x39],0x0
1000a937:	pop    ecx
1000a938:	mov    ebp,edi
1000a93a:	je     0x1000a909
1000a93c:	pop    esi
1000a93d:	pop    ebx
1000a93e:	pop    edi
1000a93f:	pop    ebp
1000a940:	pop    ecx
1000a941:	ret    0x4
1000a944:	push   0x8
1000a946:	mov    eax,0x1006217d
1000a94b:	call   0x10059b25
1000a950:	and    DWORD PTR [ebp-0x14],0x0
1000a954:	mov    DWORD PTR [ebp-0x10],edi
1000a957:	xor    esi,esi
1000a959:	lea    eax,[ebp+0x8]
1000a95c:	inc    esi
1000a95d:	push   eax
1000a95e:	mov    ecx,edi
1000a960:	mov    DWORD PTR [ebp-0x4],esi
1000a963:	call   0x100011a2
1000a968:	lea    eax,[edi+0x1c]
1000a96b:	push   eax
1000a96c:	lea    ecx,[ebp+0x24]
1000a96f:	mov    BYTE PTR [ebp-0x4],0x2
1000a973:	call   0x10009d77
1000a978:	push   0x0
1000a97a:	push   esi
1000a97b:	lea    ecx,[ebp+0x8]
1000a97e:	call   0x100012eb
1000a983:	lea    esi,[ebp+0x24]
1000a986:	call   0x100047e3
1000a98b:	mov    eax,edi
1000a98d:	call   0x10059bfd
1000a992:	ret    
1000a993:	push   0x0
1000a995:	mov    eax,0x1006214a
1000a99a:	call   0x10059b25
1000a99f:	mov    esi,DWORD PTR [ebp+0x8]
1000a9a2:	push   edi
1000a9a3:	mov    ecx,esi
1000a9a5:	call   0x100011a2
1000a9aa:	and    DWORD PTR [ebp-0x4],0x0
1000a9ae:	lea    eax,[esi+0x1c]
1000a9b1:	lea    ecx,[edi+0x1c]
1000a9b4:	push   eax
1000a9b5:	call   0x10009d77
1000a9ba:	mov    eax,esi
1000a9bc:	call   0x10059bfd
1000a9c1:	ret    0x4
1000a9c4:	sub    eax,DWORD PTR [esp+0x4]
1000a9c8:	push   esi
1000a9c9:	sar    eax,0x2
1000a9cc:	lea    eax,[eax*4+0x0]
1000a9d3:	lea    esi,[eax+ecx*1]
1000a9d6:	je     0x1000a9e7
1000a9d8:	push   eax
1000a9d9:	push   DWORD PTR [esp+0xc]
1000a9dd:	push   eax
1000a9de:	push   ecx
1000a9df:	call   0x10042f96
1000a9e4:	add    esp,0x10
1000a9e7:	mov    eax,esi
1000a9e9:	pop    esi
1000a9ea:	ret    0x4
1000a9ed:	push   0x8
1000a9ef:	mov    eax,0x10060544
1000a9f4:	call   0x10059b58
1000a9f9:	mov    esi,DWORD PTR [ebp+0x8]
1000a9fc:	and    DWORD PTR [ebp-0x4],0x0
1000aa00:	mov    DWORD PTR [ebp-0x14],esi
1000aa03:	cmp    DWORD PTR [ebp+0xc],0x0
1000aa07:	jbe    0x1000aa3b
1000aa09:	mov    edi,DWORD PTR [ebp+0x10]
1000aa0c:	call   0x10006701
1000aa11:	dec    DWORD PTR [ebp+0xc]
1000aa14:	add    esi,0x20
1000aa17:	mov    DWORD PTR [ebp+0x8],esi
1000aa1a:	jmp    0x1000aa03
1000aa1c:	mov    esi,DWORD PTR [ebp-0x14]
1000aa1f:	jmp    0x1000aa2d
1000aa21:	push   0x1
1000aa23:	mov    ecx,esi
1000aa25:	call   0x100012eb
1000aa2a:	add    esi,0x20
1000aa2d:	cmp    esi,DWORD PTR [ebp+0x8]
1000aa30:	push   0x0
1000aa32:	jne    0x1000aa21
1000aa34:	push   0x0
1000aa36:	call   0x10047aa4
1000aa3b:	call   0x10059bfd
1000aa40:	ret    
1000aa41:	mov    eax,DWORD PTR [esi]
1000aa43:	test   eax,eax
1000aa45:	je     0x1000aa51
1000aa47:	push   eax
1000aa48:	call   DWORD PTR ds:0x10066094
1000aa4e:	and    DWORD PTR [esi],0x0
1000aa51:	ret    
1000aa52:	push   ebp
1000aa53:	mov    ebp,esp
1000aa55:	push   ecx
1000aa56:	push   ecx
1000aa57:	mov    eax,ds:0x10080fa0
1000aa5c:	push   0x0
1000aa5e:	mov    DWORD PTR [ebp-0x4],eax
1000aa61:	push   0x0
1000aa63:	lea    eax,[ebp-0x8]
1000aa66:	push   eax
1000aa67:	push   0x2
1000aa69:	mov    DWORD PTR [ebp-0x8],esi
1000aa6c:	call   DWORD PTR ds:0x100660e8
1000aa72:	sub    eax,0x0
1000aa75:	je     0x1000aa8f
1000aa77:	dec    eax
1000aa78:	je     0x1000aa8a
1000aa7a:	sub    eax,0x101
1000aa7f:	je     0x1000aa85
1000aa81:	push   0x3
1000aa83:	jmp    0x1000aa87
1000aa85:	push   0x2
1000aa87:	pop    eax
1000aa88:	jmp    0x1000aa96
1000aa8a:	xor    eax,eax
1000aa8c:	inc    eax
1000aa8d:	jmp    0x1000aa96
1000aa8f:	mov    eax,DWORD PTR [ebp+0x8]
1000aa92:	mov    DWORD PTR [eax],esi
1000aa94:	xor    eax,eax
1000aa96:	leave  
1000aa97:	ret    0x4
1000aa9a:	push   ebp
1000aa9b:	mov    ebp,esp
1000aa9d:	and    esp,0xfffffff8
1000aaa0:	push   ecx
1000aaa1:	push   edi
1000aaa2:	mov    edi,eax
1000aaa4:	mov    eax,ds:0x10080c7c
1000aaa9:	and    DWORD PTR [edi],0x0
1000aaac:	cmp    eax,0x2
1000aaaf:	jne    0x1000aabc
1000aab1:	push   DWORD PTR [ebp+0x8]
1000aab4:	call   0x10007255
1000aab9:	pop    ecx
1000aaba:	jmp    0x1000aacf
1000aabc:	cmp    eax,0x1
1000aabf:	jne    0x1000aacd
1000aac1:	push   edi
1000aac2:	push   DWORD PTR [ebp+0x8]
1000aac5:	call   0x10012587
1000aaca:	pop    ecx
1000aacb:	jmp    0x1000aab9
1000aacd:	xor    al,al
1000aacf:	pop    edi
1000aad0:	mov    esp,ebp
1000aad2:	pop    ebp
1000aad3:	ret    
1000aad4:	push   ebp
1000aad5:	mov    ebp,esp
1000aad7:	sub    esp,0x10
1000aada:	mov    eax,DWORD PTR [ebp+0xc]
1000aadd:	and    DWORD PTR [ebp+0xc],0x0
1000aae1:	push   esi
1000aae2:	push   edi
1000aae3:	mov    DWORD PTR [ebp-0x8],eax
1000aae6:	mov    eax,DWORD PTR [ebp+0x8]
1000aae9:	push   0x0
1000aaeb:	mov    esi,ecx
1000aaed:	mov    DWORD PTR [ebp-0x4],eax
1000aaf0:	lea    edi,[esi+0x8]
1000aaf3:	push   edi
1000aaf4:	lea    eax,[ebp+0xc]
1000aaf7:	push   eax
1000aaf8:	lea    eax,[ebp+0x8]
1000aafb:	push   eax
1000aafc:	push   0x1
1000aafe:	lea    eax,[ebp-0x8]
1000ab01:	push   eax
1000ab02:	push   DWORD PTR [esi+0x4]
1000ab05:	call   DWORD PTR ds:0x100663e4
1000ab0b:	cmp    eax,0xffffffff
1000ab0e:	jne    0x1000ab21
1000ab10:	call   DWORD PTR ds:0x100663f0
1000ab16:	cmp    eax,0x3e5
1000ab1b:	je     0x1000ab21
1000ab1d:	xor    al,al
1000ab1f:	jmp    0x1000ab6e
1000ab21:	mov    eax,DWORD PTR [esi+0x18]
1000ab24:	push   0x1
1000ab26:	mov    DWORD PTR [ebp-0x10],eax
1000ab29:	mov    eax,DWORD PTR [esi+0x1c]
1000ab2c:	push   0xffffffff
1000ab2e:	mov    DWORD PTR [ebp-0xc],eax
1000ab31:	push   0x0
1000ab33:	lea    eax,[ebp-0x10]
1000ab36:	push   eax
1000ab37:	push   0x2
1000ab39:	call   DWORD PTR ds:0x100663ac
1000ab3f:	test   eax,eax
1000ab41:	jne    0x1000ab1d
1000ab43:	lea    eax,[ebp+0xc]
1000ab46:	push   eax
1000ab47:	push   0x0
1000ab49:	lea    eax,[ebp+0x8]
1000ab4c:	push   eax
1000ab4d:	push   edi
1000ab4e:	push   DWORD PTR [esi+0x4]
1000ab51:	call   DWORD PTR ds:0x100663c0
1000ab57:	test   eax,eax
1000ab59:	je     0x1000ab1d
1000ab5b:	mov    eax,DWORD PTR [ebp+0x10]
1000ab5e:	mov    ecx,DWORD PTR [ebp+0x8]
1000ab61:	mov    DWORD PTR [eax],ecx
1000ab63:	push   DWORD PTR [esi+0x18]
1000ab66:	call   DWORD PTR ds:0x100663b4
1000ab6c:	mov    al,0x1
1000ab6e:	pop    edi
1000ab6f:	pop    esi
1000ab70:	leave  
1000ab71:	ret    0xc
1000ab74:	push   esi
1000ab75:	mov    esi,ecx
1000ab77:	push   DWORD PTR [esi+0x18]
1000ab7a:	mov    DWORD PTR [esi],0x1006d914
1000ab80:	call   DWORD PTR ds:0x100663d4
1000ab86:	test   BYTE PTR [esp+0x8],0x1
1000ab8b:	mov    DWORD PTR [esi],0x1006d90c
1000ab91:	je     0x1000ab9a
1000ab93:	push   esi
1000ab94:	call   0x10042f82
1000ab99:	pop    ecx
1000ab9a:	mov    eax,esi
1000ab9c:	pop    esi
1000ab9d:	ret    0x4
1000aba0:	push   ebx
1000aba1:	xor    ebx,ebx
1000aba3:	mov    DWORD PTR [edi],ebx
1000aba5:	mov    DWORD PTR [edi+0x4],ebx
1000aba8:	mov    DWORD PTR [edi+0x8],ebx
1000abab:	mov    DWORD PTR [edi+0xc],ebx
1000abae:	push   esi
1000abaf:	mov    DWORD PTR [edi+0x10],ebx
1000abb2:	lea    esi,[edi+0x18]
1000abb5:	mov    DWORD PTR [edi+0x14],ebx
1000abb8:	call   0x100040d0
1000abbd:	lea    esi,[edi+0x38]
1000abc0:	mov    WORD PTR [edi+0x34],bx
1000abc4:	call   0x100040d0
1000abc9:	mov    BYTE PTR [edi+0x58],bl
1000abcc:	call   DWORD PTR ds:0x100663bc
1000abd2:	mov    esi,eax
1000abd4:	mov    eax,DWORD PTR [edi+0x4]
1000abd7:	cmp    eax,ebx
1000abd9:	je     0x1000abe2
1000abdb:	push   eax
1000abdc:	call   DWORD PTR ds:0x100663d4
1000abe2:	mov    DWORD PTR [edi+0x4],esi
1000abe5:	pop    esi
1000abe6:	mov    eax,edi
1000abe8:	pop    ebx
1000abe9:	ret    
1000abea:	push   ebp
1000abeb:	mov    ebp,esp
1000abed:	sub    esp,0x1c
1000abf0:	mov    eax,ds:0x1007e030
1000abf5:	xor    eax,ebp
1000abf7:	mov    DWORD PTR [ebp-0x4],eax
1000abfa:	push   edi
1000abfb:	push   0x0
1000abfd:	push   0x1
1000abff:	push   0x2
1000ac01:	call   DWORD PTR ds:0x100663c4
1000ac07:	mov    edi,eax
1000ac09:	mov    eax,DWORD PTR [esi+0x8]
1000ac0c:	test   eax,eax
1000ac0e:	je     0x1000ac17
1000ac10:	push   eax
1000ac11:	call   DWORD PTR ds:0x100663b8
1000ac17:	test   edi,edi
1000ac19:	mov    DWORD PTR [esi+0x8],edi
1000ac1c:	jne    0x1000ac25
1000ac1e:	xor    al,al
1000ac20:	jmp    0x1000ad13
1000ac25:	xor    eax,eax
1000ac27:	cmp    DWORD PTR [esi+0x54],0x0
1000ac2b:	lea    edi,[ebp-0x12]
1000ac2e:	stos   DWORD PTR es:[edi],eax
1000ac2f:	stos   DWORD PTR es:[edi],eax
1000ac30:	stos   DWORD PTR es:[edi],eax
1000ac31:	stos   WORD PTR es:[edi],ax
1000ac33:	mov    WORD PTR [ebp-0x14],0x2
1000ac39:	jne    0x1000ac6c
1000ac3b:	cmp    DWORD PTR [esi+0x30],0x10
1000ac3f:	jb     0x1000ac46
1000ac41:	mov    eax,DWORD PTR [esi+0x1c]
1000ac44:	jmp    0x1000ac49
1000ac46:	lea    eax,[esi+0x1c]
1000ac49:	push   eax
1000ac4a:	call   DWORD PTR ds:0x100663b0
1000ac50:	movsx  ecx,WORD PTR [eax+0xa]
1000ac54:	mov    eax,DWORD PTR [eax+0xc]
1000ac57:	push   ecx
1000ac58:	push   DWORD PTR [eax]
1000ac5a:	lea    eax,[ebp-0x10]
1000ac5d:	push   eax
1000ac5e:	call   0x10045270
1000ac63:	movzx  eax,WORD PTR [esi+0x34]
1000ac67:	add    esp,0xc
1000ac6a:	jmp    0x1000ac88
1000ac6c:	cmp    DWORD PTR [esi+0x50],0x10
1000ac70:	jb     0x1000ac77
1000ac72:	mov    eax,DWORD PTR [esi+0x3c]
1000ac75:	jmp    0x1000ac7a
1000ac77:	lea    eax,[esi+0x3c]
1000ac7a:	push   eax
1000ac7b:	call   DWORD PTR ds:0x100663e0
1000ac81:	mov    DWORD PTR [ebp-0x10],eax
1000ac84:	movzx  eax,WORD PTR [esi+0x54]
1000ac88:	push   eax
1000ac89:	call   DWORD PTR ds:0x100663f4
1000ac8f:	mov    WORD PTR [ebp-0x12],ax
1000ac93:	call   DWORD PTR ds:0x100663bc
1000ac99:	mov    edi,eax
1000ac9b:	call   0x1000206e
1000aca0:	mov    eax,DWORD PTR [esi+0x8]
1000aca3:	push   0x10
1000aca5:	push   edi
1000aca6:	push   eax
1000aca7:	call   DWORD PTR ds:0x100663cc
1000acad:	test   eax,eax
1000acaf:	je     0x1000acc5
1000acb1:	test   edi,edi
1000acb3:	je     0x1000ac1e
1000acb9:	push   edi
1000acba:	call   DWORD PTR ds:0x100663d4
1000acc0:	jmp    0x1000ac1e
1000acc5:	mov    eax,DWORD PTR [esi+0x8]
1000acc8:	push   0x10
1000acca:	lea    ecx,[ebp-0x14]
1000accd:	push   ecx
1000acce:	push   eax
1000accf:	call   DWORD PTR ds:0x100663dc
1000acd5:	cmp    eax,0xffffffff
1000acd8:	jne    0x1000ad06
1000acda:	call   DWORD PTR ds:0x100663f0
1000ace0:	cmp    eax,0x2733
1000ace5:	jne    0x1000acb1
1000ace7:	mov    eax,DWORD PTR [esi+0x4]
1000acea:	push   0x1
1000acec:	push   0xffffffff
1000acee:	mov    DWORD PTR [ebp-0x18],eax
1000acf1:	push   0x0
1000acf3:	lea    eax,[ebp-0x1c]
1000acf6:	push   eax
1000acf7:	push   0x2
1000acf9:	mov    DWORD PTR [ebp-0x1c],edi
1000acfc:	call   DWORD PTR ds:0x100663ac
1000ad02:	test   eax,eax
1000ad04:	jne    0x1000acb1
1000ad06:	test   edi,edi
1000ad08:	je     0x1000ad11
1000ad0a:	push   edi
1000ad0b:	call   DWORD PTR ds:0x100663d4
1000ad11:	mov    al,0x1
1000ad13:	mov    ecx,DWORD PTR [ebp-0x4]
1000ad16:	xor    ecx,ebp
1000ad18:	pop    edi
1000ad19:	call   0x10042f87
1000ad1e:	leave  
1000ad1f:	ret    
1000ad20:	mov    eax,DWORD PTR [esi+0x14]
1000ad23:	push   ebx
1000ad24:	xor    ebx,ebx
1000ad26:	cmp    eax,ebx
1000ad28:	je     0x1000ad31
1000ad2a:	push   eax
1000ad2b:	call   0x10042f82
1000ad30:	pop    ecx
1000ad31:	push   ebp
1000ad32:	push   edi
1000ad33:	mov    DWORD PTR [esi+0x14],ebx
1000ad36:	mov    edi,DWORD PTR [esi+0x10]
1000ad39:	cmp    edi,ebx
1000ad3b:	je     0x1000ad4b
1000ad3d:	mov    eax,edi
1000ad3f:	call   0x1000dc4f
1000ad44:	push   edi
1000ad45:	call   0x10042f82
1000ad4a:	pop    ecx
1000ad4b:	push   0x20
1000ad4d:	mov    DWORD PTR [esi+0x10],ebx
1000ad50:	call   0x1004358e
1000ad55:	mov    edi,eax
1000ad57:	cmp    edi,ebx
1000ad59:	pop    ecx
1000ad5a:	je     0x1000ad88
1000ad5c:	mov    eax,DWORD PTR [esi+0x4]
1000ad5f:	mov    ecx,DWORD PTR [esi+0x8]
1000ad62:	push   0x14
1000ad64:	mov    DWORD PTR [edi+0x1c],eax
1000ad67:	lea    eax,[edi+0x8]
1000ad6a:	push   ebx
1000ad6b:	push   eax
1000ad6c:	mov    DWORD PTR [edi],0x1006d914
1000ad72:	mov    DWORD PTR [edi+0x4],ecx
1000ad75:	call   0x10045cf0
1000ad7a:	add    esp,0xc
1000ad7d:	call   DWORD PTR ds:0x100663bc
1000ad83:	mov    DWORD PTR [edi+0x18],eax
1000ad86:	jmp    0x1000ad8a
1000ad88:	xor    edi,edi
1000ad8a:	mov    ecx,DWORD PTR [esi+0xc]
1000ad8d:	cmp    edi,ecx
1000ad8f:	je     0x1000ad9b
1000ad91:	cmp    ecx,ebx
1000ad93:	je     0x1000ad9b
1000ad95:	mov    eax,DWORD PTR [ecx]
1000ad97:	push   0x1
1000ad99:	call   DWORD PTR [eax]
1000ad9b:	push   0x1c
1000ad9d:	mov    DWORD PTR [esi+0xc],edi
1000ada0:	call   0x1004358e
1000ada5:	cmp    eax,ebx
1000ada7:	pop    ecx
1000ada8:	je     0x1000adc5
1000adaa:	mov    ecx,DWORD PTR [esi+0xc]
1000adad:	mov    DWORD PTR [eax],ebx
1000adaf:	mov    DWORD PTR [eax+0x4],ebx
1000adb2:	mov    DWORD PTR [eax+0x8],ebx
1000adb5:	mov    DWORD PTR [eax+0xc],ebx
1000adb8:	mov    BYTE PTR [eax+0x10],bl
1000adbb:	mov    DWORD PTR [eax+0x14],ebx
1000adbe:	mov    DWORD PTR [eax+0x18],ecx
1000adc1:	mov    edi,eax
1000adc3:	jmp    0x1000adc7
1000adc5:	xor    edi,edi
1000adc7:	mov    ebp,DWORD PTR [esi+0x10]
1000adca:	cmp    edi,ebp
1000adcc:	je     0x1000ade0
1000adce:	cmp    ebp,ebx
1000add0:	je     0x1000ade0
1000add2:	mov    eax,ebp
1000add4:	call   0x1000dc4f
1000add9:	push   ebp
1000adda:	call   0x10042f82
1000addf:	pop    ecx
1000ade0:	push   0x4
1000ade2:	mov    DWORD PTR [esi+0x10],edi
1000ade5:	call   0x1004358e
1000adea:	cmp    eax,ebx
1000adec:	pop    ecx
1000aded:	pop    edi
1000adee:	pop    ebp
1000adef:	je     0x1000adf8
1000adf1:	mov    ecx,DWORD PTR [esi+0x10]
1000adf4:	mov    DWORD PTR [eax],ecx
1000adf6:	mov    ebx,eax
1000adf8:	mov    eax,DWORD PTR [esi+0x14]
1000adfb:	cmp    ebx,eax
1000adfd:	je     0x1000ae06
1000adff:	push   eax
1000ae00:	call   0x10042f82
1000ae05:	pop    ecx
1000ae06:	mov    DWORD PTR [esi+0x14],ebx
1000ae09:	pop    ebx
1000ae0a:	ret    
1000ae0b:	push   0x4
1000ae0d:	mov    eax,0x10064846
1000ae12:	call   0x10059b25
1000ae17:	mov    edi,ecx
1000ae19:	mov    esi,edx
1000ae1b:	push   0xffffffff
1000ae1d:	xor    ebx,ebx
1000ae1f:	push   ebx
1000ae20:	mov    DWORD PTR [ebp-0x10],ebx
1000ae23:	push   DWORD PTR [ebp+0xc]
1000ae26:	lea    ecx,[esi+0x18]
1000ae29:	call   0x1000123c
1000ae2e:	mov    ax,WORD PTR [ebp+0x10]
1000ae32:	lea    ecx,[esi+0x38]
1000ae35:	mov    WORD PTR [esi+0x34],ax
1000ae39:	lea    eax,[esi+0x54]
1000ae3c:	push   ecx
1000ae3d:	call   0x1000aa9a
1000ae42:	pop    ecx
1000ae43:	mov    DWORD PTR [ebp+0xc],ebx
1000ae46:	mov    DWORD PTR [ebp-0x4],0x1
1000ae4d:	mov    eax,DWORD PTR [ebp+0x1c]
1000ae50:	mov    DWORD PTR [eax],ebx
1000ae52:	push   DWORD PTR [esi+0x4]
1000ae55:	call   DWORD PTR ds:0x100663b4
1000ae5b:	cmp    edi,0xffffffff
1000ae5e:	je     0x1000aeac
1000ae60:	push   0x8
1000ae62:	call   0x1004358e
1000ae67:	cmp    eax,ebx
1000ae69:	pop    ecx
1000ae6a:	je     0x1000ae78
1000ae6c:	mov    ecx,DWORD PTR [esi+0x4]
1000ae6f:	mov    DWORD PTR [eax+0x4],edi
1000ae72:	mov    DWORD PTR [eax],ecx
1000ae74:	mov    edi,eax
1000ae76:	jmp    0x1000ae7a
1000ae78:	xor    edi,edi
1000ae7a:	push   ebx
1000ae7b:	push   ebx
1000ae7c:	push   edi
1000ae7d:	push   0x1000af67
1000ae82:	push   ebx
1000ae83:	push   ebx
1000ae84:	call   DWORD PTR ds:0x10066098
1000ae8a:	push   eax
1000ae8b:	call   0x100049f9
1000ae90:	cmp    DWORD PTR [esi],ebx
1000ae92:	jne    0x1000aea5
1000ae94:	push   edi
1000ae95:	call   0x10042f82
1000ae9a:	mov    esi,DWORD PTR [ebp+0x8]
1000ae9d:	pop    ecx
1000ae9e:	mov    DWORD PTR [esi],ebx
1000aea0:	jmp    0x1000af56
1000aea5:	push   ebx
1000aea6:	call   0x10042f82
1000aeab:	pop    ecx
1000aeac:	cmp    DWORD PTR [esi+0x8],ebx
1000aeaf:	jne    0x1000aec4
1000aeb1:	call   0x1000abea
1000aeb6:	test   al,al
1000aeb8:	jne    0x1000aec4
1000aeba:	mov    esi,DWORD PTR [ebp+0x8]
1000aebd:	mov    DWORD PTR [esi],ebx
1000aebf:	jmp    0x1000af56
1000aec4:	call   0x1000ad20
1000aec9:	mov    DWORD PTR [ebp+0x10],ebx
1000aecc:	push   DWORD PTR [ebp+0x18]
1000aecf:	mov    ecx,DWORD PTR [ebp+0x14]
1000aed2:	push   esi
1000aed3:	lea    edi,[ebp+0x10]
1000aed6:	mov    BYTE PTR [ebp-0x4],0x2
1000aeda:	call   0x1000b0a8
1000aedf:	test   al,al
1000aee1:	jne    0x1000aeea
1000aee3:	mov    esi,DWORD PTR [ebp+0x8]
1000aee6:	mov    DWORD PTR [esi],ebx
1000aee8:	jmp    0x1000af3b
1000aeea:	push   DWORD PTR [ebp+0x10]
1000aeed:	mov    ecx,DWORD PTR [ebp+0x1c]
1000aef0:	lea    eax,[ebp+0x1c]
1000aef3:	push   eax
1000aef4:	push   esi
1000aef5:	call   0x1000b385
1000aefa:	push   eax
1000aefb:	lea    edi,[ebp+0xc]
1000aefe:	call   0x10002091
1000af03:	push   DWORD PTR [ebp+0x1c]
1000af06:	call   0x10042f82
1000af0b:	cmp    DWORD PTR [esi],ebx
1000af0d:	pop    ecx
1000af0e:	je     0x1000af24
1000af10:	push   DWORD PTR [esi+0x4]
1000af13:	call   DWORD PTR ds:0x100663d8
1000af19:	mov    eax,DWORD PTR [esi]
1000af1b:	push   0xffffffff
1000af1d:	push   eax
1000af1e:	call   DWORD PTR ds:0x10066084
1000af24:	mov    eax,DWORD PTR [esi]
1000af26:	cmp    eax,ebx
1000af28:	je     0x1000af31
1000af2a:	push   eax
1000af2b:	call   DWORD PTR ds:0x10066070
1000af31:	mov    eax,DWORD PTR [ebp+0xc]
1000af34:	mov    DWORD PTR [esi],ebx
1000af36:	mov    esi,DWORD PTR [ebp+0x8]
1000af39:	mov    DWORD PTR [esi],eax
1000af3b:	mov    BYTE PTR [ebp-0x4],0x1
1000af3f:	cmp    DWORD PTR [ebp+0x10],ebx
1000af42:	mov    DWORD PTR [ebp-0x10],0x1
1000af49:	mov    DWORD PTR [ebp+0xc],ebx
1000af4c:	je     0x1000af56
1000af4e:	push   DWORD PTR [ebp+0x10]
1000af51:	call   0x10009f97
1000af56:	push   ebx
1000af57:	call   0x10042f82
1000af5c:	mov    eax,esi
1000af5e:	pop    ecx
1000af5f:	call   0x10059bfd
1000af64:	ret    0x18
1000af67:	push   ebp
1000af68:	mov    ebp,esp
1000af6a:	push   ecx
1000af6b:	push   ecx
1000af6c:	push   esi
1000af6d:	push   edi
1000af6e:	lea    eax,[ebp+0xb]
1000af71:	push   eax
1000af72:	call   0x100379b0
1000af77:	mov    eax,DWORD PTR [ebp+0x8]
1000af7a:	mov    esi,DWORD PTR [eax]
1000af7c:	mov    edi,DWORD PTR [eax+0x4]
1000af7f:	push   eax
1000af80:	call   0x10042f82
1000af85:	mov    eax,ds:0x10080fa0
1000af8a:	pop    ecx
1000af8b:	push   edi
1000af8c:	mov    DWORD PTR [ebp-0x4],eax
1000af8f:	push   0x0
1000af91:	lea    eax,[ebp-0x8]
1000af94:	push   eax
1000af95:	push   0x2
1000af97:	mov    DWORD PTR [ebp-0x8],esi
1000af9a:	call   DWORD PTR ds:0x100660e8
1000afa0:	cmp    eax,0x102
1000afa5:	jne    0x1000afae
1000afa7:	push   esi
1000afa8:	call   DWORD PTR ds:0x100663d8
1000afae:	call   0x100379d0
1000afb3:	pop    edi
1000afb4:	xor    eax,eax
1000afb6:	pop    esi
1000afb7:	leave  
1000afb8:	ret    0x4
1000afbb:	push   ebp
1000afbc:	mov    ebp,esp
1000afbe:	push   ecx
1000afbf:	mov    ecx,DWORD PTR [ebp+0x8]
1000afc2:	and    DWORD PTR [ebp-0x4],0x0
1000afc6:	add    eax,0x18
1000afc9:	push   eax
1000afca:	call   0x100011a2
1000afcf:	mov    eax,DWORD PTR [ebp+0x8]
1000afd2:	leave  
1000afd3:	ret    0x4
1000afd6:	push   ebp
1000afd7:	mov    ebp,esp
1000afd9:	sub    esp,0x2c
1000afdc:	push   ebx
1000afdd:	push   esi
1000afde:	mov    esi,eax
1000afe0:	push   edi
1000afe1:	xor    eax,eax
1000afe3:	xor    ebx,ebx
1000afe5:	mov    DWORD PTR [ebp-0x2c],ebx
1000afe8:	lea    edi,[ebp-0x28]
1000afeb:	stos   DWORD PTR es:[edi],eax
1000afec:	stos   DWORD PTR es:[edi],eax
1000afed:	stos   DWORD PTR es:[edi],eax
1000afee:	stos   DWORD PTR es:[edi],eax
1000afef:	mov    eax,DWORD PTR [ebp+0x8]
1000aff2:	mov    eax,DWORD PTR [eax+0x30]
1000aff5:	mov    ecx,DWORD PTR [eax+0x18]
1000aff8:	mov    DWORD PTR [ebp-0x10],ecx
1000affb:	mov    eax,DWORD PTR [eax+0x14]
1000affe:	mov    DWORD PTR [ebp-0xc],eax
1000b001:	call   DWORD PTR ds:0x100663bc
1000b007:	push   ebx
1000b008:	lea    ecx,[ebp-0x2c]
1000b00b:	push   ecx
1000b00c:	push   ebx
1000b00d:	lea    ecx,[ebp-0x4]
1000b010:	push   ecx
1000b011:	push   0x1
1000b013:	mov    edi,eax
1000b015:	mov    eax,DWORD PTR [esi+0x8]
1000b018:	lea    ecx,[ebp-0x10]
1000b01b:	push   ecx
1000b01c:	push   eax
1000b01d:	mov    DWORD PTR [ebp-0x1c],edi
1000b020:	mov    DWORD PTR [ebp-0x8],ebx
1000b023:	call   DWORD PTR ds:0x100663e8
1000b029:	cmp    eax,0xffffffff
1000b02c:	jne    0x1000b04a
1000b02e:	call   DWORD PTR ds:0x100663f0
1000b034:	cmp    eax,0x3e5
1000b039:	je     0x1000b04a
1000b03b:	cmp    edi,ebx
1000b03d:	je     0x1000b046
1000b03f:	push   edi
1000b040:	call   DWORD PTR ds:0x100663d4
1000b046:	xor    al,al
1000b048:	jmp    0x1000b0a1
1000b04a:	mov    eax,DWORD PTR [ebp-0x1c]
1000b04d:	push   0x1
1000b04f:	mov    DWORD PTR [ebp-0x18],eax
1000b052:	mov    eax,DWORD PTR [esi+0x4]
1000b055:	push   0xffffffff
1000b057:	mov    DWORD PTR [ebp-0x14],eax
1000b05a:	push   ebx
1000b05b:	lea    eax,[ebp-0x18]
1000b05e:	push   eax
1000b05f:	push   0x2
1000b061:	call   DWORD PTR ds:0x100663ac
1000b067:	test   eax,eax
1000b069:	jne    0x1000b03b
1000b06b:	mov    esi,DWORD PTR [esi+0x8]
1000b06e:	lea    eax,[ebp-0x8]
1000b071:	push   eax
1000b072:	push   ebx
1000b073:	lea    eax,[ebp-0x4]
1000b076:	push   eax
1000b077:	lea    eax,[ebp-0x2c]
1000b07a:	push   eax
1000b07b:	push   esi
1000b07c:	call   DWORD PTR ds:0x100663c0
1000b082:	test   eax,eax
1000b084:	je     0x1000b03b
1000b086:	mov    eax,DWORD PTR [ebp+0x8]
1000b089:	mov    eax,DWORD PTR [eax+0x30]
1000b08c:	mov    ecx,DWORD PTR [ebp-0x4]
1000b08f:	cmp    ecx,DWORD PTR [eax+0x18]
1000b092:	jne    0x1000b03b
1000b094:	cmp    edi,ebx
1000b096:	je     0x1000b09f
1000b098:	push   edi
1000b099:	call   DWORD PTR ds:0x100663d4
1000b09f:	mov    al,0x1
1000b0a1:	pop    edi
1000b0a2:	pop    esi
1000b0a3:	pop    ebx
1000b0a4:	leave  
1000b0a5:	ret    0x4
1000b0a8:	push   ebp
1000b0a9:	mov    ebp,esp
1000b0ab:	and    esp,0xfffffff8
1000b0ae:	push   0xffffffff
1000b0b0:	push   0x100647fc
1000b0b5:	mov    eax,fs:0x0
1000b0bb:	push   eax
1000b0bc:	sub    esp,0x94
1000b0c2:	push   ebx
1000b0c3:	push   esi
1000b0c4:	mov    eax,ds:0x1007e030
1000b0c9:	xor    eax,esp
1000b0cb:	push   eax
1000b0cc:	lea    eax,[esp+0xa0]
1000b0d3:	mov    fs:0x0,eax
1000b0d9:	mov    esi,ecx
1000b0db:	push   0x2f466872
1000b0e0:	push   0x1006d4c4
1000b0e5:	call   0x100042bd
1000b0ea:	push   0x104cbfb6
1000b0ef:	push   eax
1000b0f0:	call   0x100042bd
1000b0f5:	push   eax
1000b0f6:	push   0x3
1000b0f8:	push   0x1006d500
1000b0fd:	call   0x100042cf
1000b102:	add    esp,0x1c
1000b105:	push   eax
1000b106:	lea    ecx,[esp+0x4c]
1000b10a:	call   0x100011c8
1000b10f:	xor    ebx,ebx
1000b111:	mov    DWORD PTR [esp+0xa8],ebx
1000b118:	cmp    DWORD PTR [esi+0x18],0x10
1000b11c:	jb     0x1000b123
1000b11e:	mov    esi,DWORD PTR [esi+0x4]
1000b121:	jmp    0x1000b126
1000b123:	add    esi,0x4
1000b126:	push   esi
1000b127:	lea    ecx,[esp+0x68]
1000b12b:	call   0x100011c8
1000b130:	push   0x6489ce5a
1000b135:	push   0x1006d504
1000b13a:	mov    BYTE PTR [esp+0xb0],0x1
1000b142:	call   0x100042bd
1000b147:	push   0x759ecfb6
1000b14c:	push   eax
1000b14d:	call   0x100042bd
1000b152:	push   0x51f34b12
1000b157:	push   eax
1000b158:	call   0x100042bd
1000b15d:	push   eax
1000b15e:	push   0x3
1000b160:	push   0x1006d528
1000b165:	call   0x100042cf
1000b16a:	add    esp,0x24
1000b16d:	push   eax
1000b16e:	lea    ecx,[esp+0x30]
1000b172:	call   0x100011c8
1000b177:	lea    eax,[esp+0x48]
1000b17b:	push   eax
1000b17c:	lea    eax,[esp+0x68]
1000b180:	push   eax
1000b181:	lea    ecx,[esp+0x34]
1000b185:	mov    BYTE PTR [esp+0xb0],0x2
1000b18d:	call   0x1000950e
1000b192:	mov    esi,eax
1000b194:	mov    eax,DWORD PTR [edi]
1000b196:	cmp    esi,eax
1000b198:	pop    ecx
1000b199:	pop    ecx
1000b19a:	je     0x1000b1a6
1000b19c:	cmp    eax,ebx
1000b19e:	je     0x1000b1a6
1000b1a0:	push   eax
1000b1a1:	call   0x10009f97
1000b1a6:	push   ebx
1000b1a7:	push   0x1
1000b1a9:	lea    ecx,[esp+0x34]
1000b1ad:	mov    DWORD PTR [edi],esi
1000b1af:	call   0x100012eb
1000b1b4:	push   ebx
1000b1b5:	push   0x1
1000b1b7:	lea    ecx,[esp+0x6c]
1000b1bb:	call   0x100012eb
1000b1c0:	or     DWORD PTR [esp+0xa8],0xffffffff
1000b1c8:	push   ebx
1000b1c9:	push   0x1
1000b1cb:	lea    ecx,[esp+0x50]
1000b1cf:	call   0x100012eb
1000b1d4:	push   0x4d7a8caa
1000b1d9:	push   0x1006d52c
1000b1de:	call   0x100042bd
1000b1e3:	push   0x34ef162
1000b1e8:	push   eax
1000b1e9:	call   0x100042bd
1000b1ee:	push   0x4603d074
1000b1f3:	push   eax
1000b1f4:	call   0x100042bd
1000b1f9:	push   eax
1000b1fa:	push   0x4
1000b1fc:	push   0x1006d414
1000b201:	call   0x100042cf
1000b206:	add    esp,0x24
1000b209:	push   eax
1000b20a:	lea    ecx,[esp+0x84]
1000b211:	call   0x100011c8
1000b216:	mov    esi,DWORD PTR [ebp+0x8]
1000b219:	mov    DWORD PTR [esp+0xa8],0x3
1000b224:	mov    eax,DWORD PTR [edi]
1000b226:	push   ebx
1000b227:	lea    edx,[esp+0x84]
1000b22e:	push   edx
1000b22f:	lea    ecx,[esi+0x18]
1000b232:	lea    edx,[eax+0x18]
1000b235:	call   0x10008097
1000b23a:	or     DWORD PTR [esp+0xa8],0xffffffff
1000b242:	push   ebx
1000b243:	push   0x1
1000b245:	lea    ecx,[esp+0x88]
1000b24c:	call   0x100012eb
1000b251:	push   DWORD PTR [ebp+0xc]
1000b254:	lea    eax,[esp+0x18]
1000b258:	push   eax
1000b259:	call   0x1000f541
1000b25e:	pop    ecx
1000b25f:	pop    ecx
1000b260:	mov    DWORD PTR [esp+0xa8],0x4
1000b26b:	mov    DWORD PTR [esp+0x10],ebx
1000b26f:	cmp    DWORD PTR [esp+0x18],ebx
1000b273:	jne    0x1000b279
1000b275:	xor    eax,eax
1000b277:	jmp    0x1000b284
1000b279:	mov    eax,DWORD PTR [esp+0x1c]
1000b27d:	sub    eax,DWORD PTR [esp+0x18]
1000b281:	sar    eax,0x4
1000b284:	cmp    DWORD PTR [esp+0x10],eax
1000b288:	je     0x1000b2ef
1000b28a:	push   DWORD PTR [esp+0x10]
1000b28e:	lea    esi,[esp+0x18]
1000b292:	call   0x1000ca00
1000b297:	call   0x10004660
1000b29c:	cmp    eax,0x2
1000b29f:	jne    0x1000b2e6
1000b2a1:	mov    eax,DWORD PTR [edi]
1000b2a3:	push   ebx
1000b2a4:	push   0x1
1000b2a6:	push   DWORD PTR [esp+0x18]
1000b2aa:	mov    DWORD PTR [esp+0x34],eax
1000b2ae:	call   0x1000ca00
1000b2b3:	mov    esi,eax
1000b2b5:	call   0x10004676
1000b2ba:	push   ebx
1000b2bb:	push   DWORD PTR [esp+0x18]
1000b2bf:	lea    esi,[esp+0x20]
1000b2c3:	mov    DWORD PTR [esp+0x30],eax
1000b2c7:	call   0x1000ca00
1000b2cc:	mov    esi,eax
1000b2ce:	call   0x10004676
1000b2d3:	mov    edx,DWORD PTR [esp+0x2c]
1000b2d7:	push   eax
1000b2d8:	mov    eax,DWORD PTR [esp+0x2c]
1000b2dc:	add    edx,0x18
1000b2df:	mov    ecx,eax
1000b2e1:	call   0x10008097
1000b2e6:	inc    DWORD PTR [esp+0x10]
1000b2ea:	mov    esi,DWORD PTR [ebp+0x8]
1000b2ed:	jmp    0x1000b26f
1000b2ef:	cmp    DWORD PTR [esi+0x54],ebx
1000b2f2:	mov    ecx,DWORD PTR [edi]
1000b2f4:	setne  al
1000b2f7:	push   eax
1000b2f8:	call   0x1000b67c
1000b2fd:	call   0x1000206e
1000b302:	push   DWORD PTR [edi]
1000b304:	mov    eax,esi
1000b306:	call   0x1000afd6
1000b30b:	test   al,al
1000b30d:	je     0x1000b31e
1000b30f:	mov    esi,DWORD PTR [esi+0x10]
1000b312:	call   0x1000ddd2
1000b317:	test   al,al
1000b319:	je     0x1000b381
1000b31b:	mov    esi,DWORD PTR [ebp+0x8]
1000b31e:	call   0x1000206e
1000b323:	mov    eax,DWORD PTR [esi+0x8]
1000b326:	cmp    eax,ebx
1000b328:	je     0x1000b331
1000b32a:	push   eax
1000b32b:	call   DWORD PTR ds:0x100663b8
1000b331:	mov    DWORD PTR [esi+0x8],ebx
1000b334:	call   0x1000abea
1000b339:	test   al,al
1000b33b:	jne    0x1000b35f
1000b33d:	lea    esi,[esp+0x14]
1000b341:	call   0x1000d144
1000b346:	xor    al,al
1000b348:	mov    ecx,DWORD PTR [esp+0xa0]
1000b34f:	mov    DWORD PTR fs:0x0,ecx
1000b356:	pop    ecx
1000b357:	pop    esi
1000b358:	pop    ebx
1000b359:	mov    esp,ebp
1000b35b:	pop    ebp
1000b35c:	ret    0x8
1000b35f:	mov    esi,DWORD PTR [ebp+0x8]
1000b362:	call   0x1000ad20
1000b367:	push   DWORD PTR [edi]
1000b369:	mov    eax,esi
1000b36b:	call   0x1000afd6
1000b370:	test   al,al
1000b372:	jne    0x1000b381
1000b374:	lea    esi,[esp+0x14]
1000b378:	call   0x1000d144
1000b37d:	mov    al,bl
1000b37f:	jmp    0x1000b348
1000b381:	mov    bl,0x1
1000b383:	jmp    0x1000b374
1000b385:	push   0x50
1000b387:	mov    eax,0x100647b6
1000b38c:	call   0x10059b25
1000b391:	mov    esi,ecx
1000b393:	xor    edi,edi
1000b395:	mov    DWORD PTR [ebp-0x18],edi
1000b398:	mov    DWORD PTR [ebp-0x14],edi
1000b39b:	xor    ebx,ebx
1000b39d:	lea    eax,[ebp-0x5c]
1000b3a0:	inc    ebx
1000b3a1:	mov    DWORD PTR [ebp-0x4],ebx
1000b3a4:	push   eax
1000b3a5:	mov    DWORD PTR [esi],edi
1000b3a7:	call   0x10009027
1000b3ac:	mov    eax,DWORD PTR [ebp+0x8]
1000b3af:	lea    ecx,[ebp-0x5c]
1000b3b2:	mov    BYTE PTR [ebp-0x4],0x2
1000b3b6:	mov    eax,DWORD PTR [eax+0x14]
1000b3b9:	push   ecx
1000b3ba:	push   eax
1000b3bb:	call   0x1000e4bf
1000b3c0:	test   eax,eax
1000b3c2:	je     0x1000b3ce
1000b3c4:	mov    esi,DWORD PTR [ebp+0xc]
1000b3c7:	mov    DWORD PTR [ebp-0x14],edi
1000b3ca:	mov    DWORD PTR [esi],edi
1000b3cc:	jmp    0x1000b43c
1000b3ce:	mov    eax,DWORD PTR [ebp+0x8]
1000b3d1:	push   DWORD PTR [ebp+0x10]
1000b3d4:	mov    ecx,DWORD PTR [eax+0x14]
1000b3d7:	lea    edx,[ebp-0x5c]
1000b3da:	call   0x1000e59d
1000b3df:	test   eax,eax
1000b3e1:	je     0x1000b3ea
1000b3e3:	mov    esi,DWORD PTR [ebp+0xc]
1000b3e6:	mov    DWORD PTR [esi],edi
1000b3e8:	jmp    0x1000b439
1000b3ea:	push   DWORD PTR [ebp+0x8]
1000b3ed:	lea    ecx,[ebp-0x5c]
1000b3f0:	call   0x1000b45c
1000b3f5:	mov    eax,DWORD PTR [ebp-0x50]
1000b3f8:	mov    eax,DWORD PTR [eax+0x18]
1000b3fb:	push   eax
1000b3fc:	mov    DWORD PTR [esi],eax
1000b3fe:	call   0x10043811
1000b403:	cmp    eax,edi
1000b405:	pop    ecx
1000b406:	mov    DWORD PTR [ebp+0x8],eax
1000b409:	je     0x1000b412
1000b40b:	push   edi
1000b40c:	call   0x10042f82
1000b411:	pop    ecx
1000b412:	mov    eax,DWORD PTR [ebp-0x50]
1000b415:	cmp    DWORD PTR [eax+0x1c],0x10
1000b419:	jb     0x1000b420
1000b41b:	mov    eax,DWORD PTR [eax+0x8]
1000b41e:	jmp    0x1000b423
1000b420:	add    eax,0x8
1000b423:	push   DWORD PTR [esi]
1000b425:	push   eax
1000b426:	push   DWORD PTR [ebp+0x8]
1000b429:	call   0x10045270
1000b42e:	mov    eax,DWORD PTR [ebp+0x8]
1000b431:	mov    esi,DWORD PTR [ebp+0xc]
1000b434:	add    esp,0xc
1000b437:	mov    DWORD PTR [esi],eax
1000b439:	mov    DWORD PTR [ebp-0x14],edi
1000b43c:	lea    eax,[ebp-0x5c]
1000b43f:	push   eax
1000b440:	mov    DWORD PTR [ebp-0x18],ebx
1000b443:	mov    BYTE PTR [ebp-0x4],bl
1000b446:	call   0x10009ffa
1000b44b:	push   edi
1000b44c:	call   0x10042f82
1000b451:	pop    ecx
1000b452:	mov    eax,esi
1000b454:	call   0x10059bfd
1000b459:	ret    0xc
1000b45c:	push   ebp
1000b45d:	mov    ebp,esp
1000b45f:	and    esp,0xfffffff8
1000b462:	push   0xffffffff
1000b464:	push   0x10062121
1000b469:	mov    eax,fs:0x0
1000b46f:	push   eax
1000b470:	sub    esp,0x78
1000b473:	push   ebx
1000b474:	push   esi
1000b475:	push   edi
1000b476:	mov    eax,ds:0x1007e030
1000b47b:	xor    eax,esp
1000b47d:	push   eax
1000b47e:	lea    eax,[esp+0x88]
1000b485:	mov    fs:0x0,eax
1000b48b:	mov    ebx,ecx
1000b48d:	mov    eax,DWORD PTR [ebx]
1000b48f:	lea    ecx,[esp+0x14]
1000b493:	push   ecx
1000b494:	call   0x100199c9
1000b499:	mov    esi,eax
1000b49b:	push   0x215c01c8
1000b4a0:	xor    edi,edi
1000b4a2:	push   0x1006d550
1000b4a7:	mov    DWORD PTR [esp+0x98],edi
1000b4ae:	call   0x100042bd
1000b4b3:	push   0x2daf5ba4
1000b4b8:	push   eax
1000b4b9:	call   0x100042bd
1000b4be:	push   0x4e9f6c5a
1000b4c3:	push   eax
1000b4c4:	call   0x100042bd
1000b4c9:	push   0x55fee822
1000b4ce:	push   eax
1000b4cf:	call   0x100042bd
1000b4d4:	push   eax
1000b4d5:	push   0x3
1000b4d7:	push   0x1006d500
1000b4dc:	call   0x100042cf
1000b4e1:	add    esp,0x2c
1000b4e4:	push   eax
1000b4e5:	call   0x10006639
1000b4ea:	or     DWORD PTR [esp+0x94],0xffffffff
1000b4f2:	pop    ecx
1000b4f3:	xor    esi,esi
1000b4f5:	push   edi
1000b4f6:	inc    esi
1000b4f7:	push   esi
1000b4f8:	lea    ecx,[esp+0x1c]
1000b4fc:	mov    BYTE PTR [esp+0x1b],al
1000b500:	call   0x100012eb
1000b505:	cmp    BYTE PTR [esp+0x13],0x0
1000b50a:	je     0x1000b5cc
1000b510:	push   0x1006d5b4
1000b515:	push   0xa
1000b517:	push   0x1006d5f0
1000b51c:	call   0x100042cf
1000b521:	add    esp,0xc
1000b524:	push   eax
1000b525:	lea    ecx,[esp+0x18]
1000b529:	call   0x100011c8
1000b52e:	push   edi
1000b52f:	lea    eax,[esp+0x18]
1000b533:	push   eax
1000b534:	lea    eax,[esp+0x54]
1000b538:	push   eax
1000b539:	lea    eax,[ebx+0x20]
1000b53c:	mov    DWORD PTR [esp+0x9c],esi
1000b543:	call   0x10008602
1000b548:	mov    ebx,eax
1000b54a:	push   0x72e7fd6a
1000b54f:	push   0x1c110604
1000b554:	push   0x4ee895c2
1000b559:	push   0x1006d57c
1000b55e:	mov    BYTE PTR [esp+0xa0],0x2
1000b566:	call   0x100042bd
1000b56b:	pop    ecx
1000b56c:	pop    ecx
1000b56d:	push   eax
1000b56e:	call   0x100042bd
1000b573:	pop    ecx
1000b574:	pop    ecx
1000b575:	push   eax
1000b576:	call   0x100042bd
1000b57b:	cmp    DWORD PTR [ebx+0x18],0x10
1000b57f:	pop    ecx
1000b580:	pop    ecx
1000b581:	jb     0x1000b588
1000b583:	mov    ebx,DWORD PTR [ebx+0x4]
1000b586:	jmp    0x1000b58b
1000b588:	add    ebx,0x4
1000b58b:	push   eax
1000b58c:	push   0xa
1000b58e:	push   0x1006d5a8
1000b593:	call   0x100042cf
1000b598:	add    esp,0xc
1000b59b:	push   eax
1000b59c:	push   ebx
1000b59d:	call   0x1004575f
1000b5a2:	pop    ecx
1000b5a3:	pop    ecx
1000b5a4:	mov    ebx,eax
1000b5a6:	neg    ebx
1000b5a8:	push   edi
1000b5a9:	sbb    bl,bl
1000b5ab:	push   esi
1000b5ac:	lea    ecx,[esp+0x54]
1000b5b0:	inc    bl
1000b5b2:	call   0x100012eb
1000b5b7:	push   edi
1000b5b8:	push   esi
1000b5b9:	lea    ecx,[esp+0x1c]
1000b5bd:	call   0x100012eb
1000b5c2:	test   bl,bl
1000b5c4:	setne  al
1000b5c7:	jmp    0x1000b65e
1000b5cc:	push   0x1006d634
1000b5d1:	push   0xa
1000b5d3:	push   0x1006d5f0
1000b5d8:	call   0x100042cf
1000b5dd:	add    esp,0xc
1000b5e0:	push   eax
1000b5e1:	lea    ecx,[esp+0x34]
1000b5e5:	call   0x100011c8
1000b5ea:	push   edi
1000b5eb:	lea    eax,[esp+0x34]
1000b5ef:	push   eax
1000b5f0:	lea    eax,[esp+0x70]
1000b5f4:	push   eax
1000b5f5:	lea    eax,[ebx+0x20]
1000b5f8:	mov    DWORD PTR [esp+0x9c],0x3
1000b603:	call   0x10008602
1000b608:	mov    BYTE PTR [esp+0x90],0x4
1000b610:	cmp    DWORD PTR [eax+0x18],0x10
1000b614:	jb     0x1000b61b
1000b616:	mov    ebx,DWORD PTR [eax+0x4]
1000b619:	jmp    0x1000b61e
1000b61b:	lea    ebx,[eax+0x4]
1000b61e:	push   0x1006d5fc
1000b623:	push   0x5
1000b625:	push   0x1006d62c
1000b62a:	call   0x100042cf
1000b62f:	add    esp,0xc
1000b632:	push   eax
1000b633:	push   ebx
1000b634:	call   0x1004575f
1000b639:	pop    ecx
1000b63a:	pop    ecx
1000b63b:	mov    ebx,eax
1000b63d:	neg    ebx
1000b63f:	push   edi
1000b640:	sbb    bl,bl
1000b642:	push   esi
1000b643:	lea    ecx,[esp+0x70]
1000b647:	inc    bl
1000b649:	call   0x100012eb
1000b64e:	push   edi
1000b64f:	push   esi
1000b650:	lea    ecx,[esp+0x38]
1000b654:	call   0x100012eb
1000b659:	test   bl,bl
1000b65b:	sete   al
1000b65e:	mov    ecx,DWORD PTR [ebp+0x8]
1000b661:	mov    BYTE PTR [ecx+0x58],al
1000b664:	mov    ecx,DWORD PTR [esp+0x88]
1000b66b:	mov    DWORD PTR fs:0x0,ecx
1000b672:	pop    ecx
1000b673:	pop    edi
1000b674:	pop    esi
1000b675:	pop    ebx
1000b676:	mov    esp,ebp
1000b678:	pop    ebp
1000b679:	ret    0x4
1000b67c:	push   0x200
1000b681:	mov    eax,0x10062e6c
1000b686:	call   0x10059b8e
1000b68b:	mov    esi,ecx
1000b68d:	push   0x110a4f14
1000b692:	push   0x1006d660
1000b697:	mov    DWORD PTR [ebp-0x160],esi
1000b69d:	call   0x100042bd
1000b6a2:	push   0x3a340758
1000b6a7:	push   eax
1000b6a8:	call   0x100042bd
1000b6ad:	push   0x7bd4cb4
1000b6b2:	push   eax
1000b6b3:	call   0x100042bd
1000b6b8:	push   eax
1000b6b9:	push   0x7
1000b6bb:	push   0x1006d698
1000b6c0:	call   0x100042cf
1000b6c5:	add    esp,0x24
1000b6c8:	push   eax
1000b6c9:	lea    ecx,[ebp-0x180]
1000b6cf:	call   0x100011c8
1000b6d4:	lea    ecx,[ebp-0x180]
1000b6da:	lea    eax,[esi+0x18]
1000b6dd:	push   ecx
1000b6de:	xor    ebx,ebx
1000b6e0:	push   eax
1000b6e1:	mov    DWORD PTR [ebp-0x4],ebx
1000b6e4:	mov    DWORD PTR [ebp-0x15c],eax
1000b6ea:	call   0x100083a0
1000b6ef:	or     DWORD PTR [ebp-0x4],0xffffffff
1000b6f3:	xor    edi,edi
1000b6f5:	push   ebx
1000b6f6:	inc    edi
1000b6f7:	push   edi
1000b6f8:	lea    ecx,[ebp-0x180]
1000b6fe:	call   0x100012eb
1000b703:	lea    ecx,[ebp-0xc0]
1000b709:	call   0x10012bdb
1000b70e:	push   0x1006cd08
1000b713:	lea    esi,[ebp-0xc0]
1000b719:	mov    DWORD PTR [ebp-0x4],edi
1000b71c:	call   0x10006639
1000b721:	test   al,al
1000b723:	pop    ecx
1000b724:	jne    0x1000b7d2
1000b72a:	push   0x1006d6a0
1000b72f:	push   0xa
1000b731:	mov    esi,0x1006d6dc
1000b736:	push   esi
1000b737:	call   0x100042cf
1000b73c:	add    esp,0xc
1000b73f:	push   eax
1000b740:	lea    ecx,[ebp-0x180]
1000b746:	call   0x100011c8
1000b74b:	lea    eax,[ebp-0x180]
1000b751:	push   eax
1000b752:	push   DWORD PTR [ebp-0x15c]
1000b758:	mov    BYTE PTR [ebp-0x4],0x2
1000b75c:	call   0x100083a0
1000b761:	push   ebx
1000b762:	push   edi
1000b763:	lea    ecx,[ebp-0x180]
1000b769:	mov    BYTE PTR [ebp-0x4],0x1
1000b76d:	call   0x100012eb
1000b772:	push   0x7bd8700c
1000b777:	push   0x1006d6e8
1000b77c:	call   0x100042bd
1000b781:	push   0x76adf216
1000b786:	push   eax
1000b787:	call   0x100042bd
1000b78c:	push   eax
1000b78d:	push   0xa
1000b78f:	push   esi
1000b790:	call   0x100042cf
1000b795:	add    esp,0x1c
1000b798:	push   eax
1000b799:	lea    ecx,[ebp-0x180]
1000b79f:	call   0x100011c8
1000b7a4:	mov    edx,DWORD PTR [ebp-0x15c]
1000b7aa:	push   ebx
1000b7ab:	lea    eax,[ebp-0x180]
1000b7b1:	push   eax
1000b7b2:	lea    ecx,[ebp-0xc0]
1000b7b8:	mov    BYTE PTR [ebp-0x4],0x3
1000b7bc:	call   0x10008097
1000b7c1:	push   ebx
1000b7c2:	push   edi
1000b7c3:	lea    ecx,[ebp-0x180]
1000b7c9:	mov    BYTE PTR [ebp-0x4],0x1
1000b7cd:	call   0x100012eb
1000b7d2:	push   0x1006cd08
1000b7d7:	lea    esi,[ebp-0x6c]
1000b7da:	call   0x10006639
1000b7df:	test   al,al
1000b7e1:	pop    ecx
1000b7e2:	jne    0x1000b877
1000b7e8:	push   0x1006d720
1000b7ed:	push   0xf
1000b7ef:	mov    esi,0x1006d760
1000b7f4:	push   esi
1000b7f5:	call   0x100042cf
1000b7fa:	add    esp,0xc
1000b7fd:	push   eax
1000b7fe:	lea    ecx,[ebp-0x180]
1000b804:	call   0x100011c8
1000b809:	lea    eax,[ebp-0x180]
1000b80f:	push   eax
1000b810:	push   DWORD PTR [ebp-0x15c]
1000b816:	mov    BYTE PTR [ebp-0x4],0x4
1000b81a:	call   0x100083a0
1000b81f:	push   ebx
1000b820:	push   edi
1000b821:	lea    ecx,[ebp-0x180]
1000b827:	mov    BYTE PTR [ebp-0x4],0x1
1000b82b:	call   0x100012eb
1000b830:	push   0x1006d770
1000b835:	push   0xf
1000b837:	push   esi
1000b838:	call   0x100042cf
1000b83d:	add    esp,0xc
1000b840:	push   eax
1000b841:	lea    ecx,[ebp-0x180]
1000b847:	call   0x100011c8
1000b84c:	mov    edx,DWORD PTR [ebp-0x15c]
1000b852:	push   ebx
1000b853:	lea    eax,[ebp-0x180]
1000b859:	push   eax
1000b85a:	lea    ecx,[ebp-0x6c]
1000b85d:	mov    BYTE PTR [ebp-0x4],0x5
1000b861:	call   0x10008097
1000b866:	push   ebx
1000b867:	push   edi
1000b868:	lea    ecx,[ebp-0x180]
1000b86e:	mov    BYTE PTR [ebp-0x4],0x1
1000b872:	call   0x100012eb
1000b877:	push   0x1006cd08
1000b87c:	lea    esi,[ebp-0x88]
1000b882:	call   0x10006639
1000b887:	test   al,al
1000b889:	pop    ecx
1000b88a:	jne    0x1000ba3e
1000b890:	lea    edi,[ebp-0x158]
1000b896:	call   0x1000bce8
1000b89b:	mov    eax,esi
1000b89d:	push   eax
1000b89e:	lea    ecx,[ebp-0x2c]
1000b8a1:	mov    BYTE PTR [ebp-0x4],0x6
1000b8a5:	call   0x100011a2
1000b8aa:	cmp    BYTE PTR [ebp+0x8],bl
1000b8ad:	mov    BYTE PTR [ebp-0x4],0x7
1000b8b1:	je     0x1000ba0d
1000b8b7:	mov    eax,edi
1000b8b9:	push   eax
1000b8ba:	lea    ecx,[ebp-0x2c]
1000b8bd:	call   0x10032ca0
1000b8c2:	test   al,al
1000b8c4:	pop    ecx
1000b8c5:	je     0x1000ba0d
1000b8cb:	push   0x1369f6ae
1000b8d0:	push   0x1006d7ac
1000b8d5:	call   0x100042bd
1000b8da:	push   0x84bf9f4
1000b8df:	push   eax
1000b8e0:	call   0x100042bd
1000b8e5:	push   eax
1000b8e6:	push   0x4
1000b8e8:	push   0x1006d414
1000b8ed:	call   0x100042cf
1000b8f2:	add    esp,0x1c
1000b8f5:	push   eax
1000b8f6:	lea    ecx,[ebp-0x180]
1000b8fc:	call   0x100011c8
1000b901:	push   ebx
1000b902:	lea    eax,[ebp-0x180]
1000b908:	push   eax
1000b909:	lea    eax,[ebp-0x1b8]
1000b90f:	push   eax
1000b910:	mov    eax,DWORD PTR [ebp-0x15c]
1000b916:	mov    BYTE PTR [ebp-0x4],0x8
1000b91a:	call   0x10008602
1000b91f:	mov    esi,eax
1000b921:	push   0x4098e0aa
1000b926:	push   0x1006d7d8
1000b92b:	mov    BYTE PTR [ebp-0x4],0x9
1000b92f:	call   0x100042bd
1000b934:	push   0x1373dea2
1000b939:	push   eax
1000b93a:	call   0x100042bd
1000b93f:	push   eax
1000b940:	push   0x7
1000b942:	push   0x1006d3e4
1000b947:	call   0x100042cf
1000b94c:	add    esp,0x1c
1000b94f:	push   eax
1000b950:	lea    ecx,[ebp-0x1f0]
1000b956:	call   0x100011c8
1000b95b:	push   esi
1000b95c:	push   eax
1000b95d:	lea    eax,[ebp-0x20c]
1000b963:	push   eax
1000b964:	mov    BYTE PTR [ebp-0x4],0xa
1000b968:	call   0x10006581
1000b96d:	add    esp,0xc
1000b970:	lea    ecx,[ebp-0xfc]
1000b976:	push   ecx
1000b977:	push   eax
1000b978:	lea    eax,[ebp-0x1d4]
1000b97e:	push   eax
1000b97f:	mov    BYTE PTR [ebp-0x4],0xb
1000b983:	call   0x10006581
1000b988:	add    esp,0xc
1000b98b:	lea    ecx,[ebp-0xe0]
1000b991:	push   ecx
1000b992:	push   eax
1000b993:	lea    eax,[ebp-0x19c]
1000b999:	push   eax
1000b99a:	mov    BYTE PTR [ebp-0x4],0xc
1000b99e:	call   0x10006581
1000b9a3:	add    esp,0xc
1000b9a6:	push   0xffffffff
1000b9a8:	push   ebx
1000b9a9:	push   eax
1000b9aa:	lea    ecx,[ebp-0x2c]
1000b9ad:	mov    BYTE PTR [ebp-0x4],0xd
1000b9b1:	call   0x1000123c
1000b9b6:	xor    edi,edi
1000b9b8:	push   ebx
1000b9b9:	inc    edi
1000b9ba:	push   edi
1000b9bb:	lea    ecx,[ebp-0x19c]
1000b9c1:	call   0x100012eb
1000b9c6:	push   ebx
1000b9c7:	push   edi
1000b9c8:	lea    ecx,[ebp-0x1d4]
1000b9ce:	call   0x100012eb
1000b9d3:	push   ebx
1000b9d4:	push   edi
1000b9d5:	lea    ecx,[ebp-0x20c]
1000b9db:	call   0x100012eb
1000b9e0:	push   ebx
1000b9e1:	push   edi
1000b9e2:	lea    ecx,[ebp-0x1f0]
1000b9e8:	call   0x100012eb
1000b9ed:	push   ebx
1000b9ee:	push   edi
1000b9ef:	lea    ecx,[ebp-0x1b8]
1000b9f5:	call   0x100012eb
1000b9fa:	push   ebx
1000b9fb:	push   edi
1000b9fc:	lea    ecx,[ebp-0x180]
1000ba02:	mov    BYTE PTR [ebp-0x4],0x7
1000ba06:	call   0x100012eb
1000ba0b:	jmp    0x1000ba10
1000ba0d:	xor    edi,edi
1000ba0f:	inc    edi
1000ba10:	mov    eax,DWORD PTR [ebp-0x160]
1000ba16:	mov    esi,DWORD PTR [eax+0x4]
1000ba19:	lea    eax,[ebp-0x2c]
1000ba1c:	push   eax
1000ba1d:	call   0x10007ac2
1000ba22:	push   ebx
1000ba23:	push   edi
1000ba24:	lea    ecx,[ebp-0x2c]
1000ba27:	call   0x100012eb
1000ba2c:	lea    esi,[ebp-0x158]
1000ba32:	mov    BYTE PTR [ebp-0x4],0x1
1000ba36:	call   0x1000bd15
1000ba3b:	xor    edi,edi
1000ba3d:	inc    edi
1000ba3e:	cmp    BYTE PTR [ebp+0x8],bl
1000ba41:	jne    0x1000baf2
1000ba47:	push   0x1006cd08
1000ba4c:	lea    esi,[ebp-0xa4]
1000ba52:	call   0x10006639
1000ba57:	test   al,al
1000ba59:	pop    ecx
1000ba5a:	jne    0x1000baf2
1000ba60:	push   0x1006d814
1000ba65:	push   0x4
1000ba67:	mov    esi,0x1006d414
1000ba6c:	push   esi
1000ba6d:	call   0x100042cf
1000ba72:	add    esp,0xc
1000ba75:	push   eax
1000ba76:	lea    ecx,[ebp-0x180]
1000ba7c:	call   0x100011c8
1000ba81:	lea    eax,[ebp-0x180]
1000ba87:	push   eax
1000ba88:	push   DWORD PTR [ebp-0x15c]
1000ba8e:	mov    BYTE PTR [ebp-0x4],0xe
1000ba92:	call   0x100083a0
1000ba97:	push   ebx
1000ba98:	push   edi
1000ba99:	lea    ecx,[ebp-0x180]
1000ba9f:	mov    BYTE PTR [ebp-0x4],0x1
1000baa3:	call   0x100012eb
1000baa8:	push   0x1006d854
1000baad:	push   0x4
1000baaf:	push   esi
1000bab0:	call   0x100042cf
1000bab5:	add    esp,0xc
1000bab8:	push   eax
1000bab9:	lea    ecx,[ebp-0x180]
1000babf:	call   0x100011c8
1000bac4:	mov    edx,DWORD PTR [ebp-0x15c]
1000baca:	push   ebx
1000bacb:	lea    eax,[ebp-0x180]
1000bad1:	push   eax
1000bad2:	lea    ecx,[ebp-0xa4]
1000bad8:	mov    BYTE PTR [ebp-0x4],0xf
1000badc:	call   0x10008097
1000bae1:	push   ebx
1000bae2:	push   edi
1000bae3:	lea    ecx,[ebp-0x180]
1000bae9:	mov    BYTE PTR [ebp-0x4],0x1
1000baed:	call   0x100012eb
1000baf2:	push   0x1006cd08
1000baf7:	lea    esi,[ebp-0x50]
1000bafa:	call   0x10006639
1000baff:	test   al,al
1000bb01:	pop    ecx
1000bb02:	jne    0x1000bb16
1000bb04:	mov    eax,DWORD PTR [ebp-0x160]
1000bb0a:	mov    esi,DWORD PTR [eax+0x8]
1000bb0d:	lea    eax,[ebp-0x50]
1000bb10:	push   eax
1000bb11:	call   0x10007ac2
1000bb16:	push   0x1006d878
1000bb1b:	push   0x6
1000bb1d:	mov    esi,0x1006d8ac
1000bb22:	push   esi
1000bb23:	call   0x100042cf
1000bb28:	add    esp,0xc
1000bb2b:	push   eax
1000bb2c:	lea    ecx,[ebp-0x180]
1000bb32:	call   0x100011c8
1000bb37:	push   ebx
1000bb38:	lea    eax,[ebp-0x180]
1000bb3e:	push   eax
1000bb3f:	lea    eax,[ebp-0x2c]
1000bb42:	push   eax
1000bb43:	mov    eax,DWORD PTR [ebp-0x15c]
1000bb49:	mov    BYTE PTR [ebp-0x4],0x10
1000bb4d:	call   0x10008602
1000bb52:	push   ebx
1000bb53:	push   edi
1000bb54:	lea    ecx,[ebp-0x180]
1000bb5a:	mov    BYTE PTR [ebp-0x4],0x12
1000bb5e:	call   0x100012eb
1000bb63:	push   0x7143031a
1000bb68:	push   0x1006d8b4
1000bb6d:	call   0x100042bd
1000bb72:	push   eax
1000bb73:	push   0x6
1000bb75:	push   esi
1000bb76:	call   0x100042cf
1000bb7b:	add    esp,0x14
1000bb7e:	push   eax
1000bb7f:	lea    ecx,[ebp-0x19c]
1000bb85:	call   0x100011c8
1000bb8a:	lea    eax,[ebp-0x19c]
1000bb90:	push   eax
1000bb91:	push   DWORD PTR [ebp-0x15c]
1000bb97:	mov    BYTE PTR [ebp-0x4],0x13
1000bb9b:	call   0x100083a0
1000bba0:	push   ebx
1000bba1:	push   edi
1000bba2:	lea    ecx,[ebp-0x19c]
1000bba8:	mov    BYTE PTR [ebp-0x4],0x12
1000bbac:	call   0x100012eb
1000bbb1:	cmp    DWORD PTR [ebp-0x18],ebx
1000bbb4:	mov    DWORD PTR [ebp-0x164],ebx
1000bbba:	jbe    0x1000bc90
1000bbc0:	push   DWORD PTR [ebp-0x164]
1000bbc6:	lea    eax,[ebp-0x2c]
1000bbc9:	push   0x1006d8d8
1000bbce:	push   eax
1000bbcf:	call   0x1000c970
1000bbd4:	cmp    eax,0xffffffff
1000bbd7:	mov    DWORD PTR [ebp-0x160],eax
1000bbdd:	jne    0x1000bbe8
1000bbdf:	mov    eax,DWORD PTR [ebp-0x18]
1000bbe2:	mov    DWORD PTR [ebp-0x160],eax
1000bbe8:	cmp    eax,DWORD PTR [ebp-0x164]
1000bbee:	jbe    0x1000bc7e
1000bbf4:	push   0x56db7c00
1000bbf9:	push   0x1006d8dc
1000bbfe:	call   0x100042bd
1000bc03:	push   eax
1000bc04:	push   0x6
1000bc06:	push   esi
1000bc07:	call   0x100042cf
1000bc0c:	add    esp,0x14
1000bc0f:	push   eax
1000bc10:	lea    ecx,[ebp-0x19c]
1000bc16:	call   0x100011c8
1000bc1b:	mov    eax,DWORD PTR [ebp-0x160]
1000bc21:	sub    eax,DWORD PTR [ebp-0x164]
1000bc27:	mov    BYTE PTR [ebp-0x4],0x14
1000bc2b:	push   eax
1000bc2c:	push   DWORD PTR [ebp-0x164]
1000bc32:	lea    eax,[ebp-0x2c]
1000bc35:	push   eax
1000bc36:	lea    eax,[ebp-0x1b8]
1000bc3c:	call   0x1000c98f
1000bc41:	mov    edx,DWORD PTR [ebp-0x15c]
1000bc47:	push   edi
1000bc48:	lea    ecx,[ebp-0x19c]
1000bc4e:	push   ecx
1000bc4f:	mov    ecx,eax
1000bc51:	mov    BYTE PTR [ebp-0x4],0x15
1000bc55:	call   0x10008097
1000bc5a:	push   ebx
1000bc5b:	push   edi
1000bc5c:	lea    ecx,[ebp-0x1b8]
1000bc62:	call   0x100012eb
1000bc67:	push   ebx
1000bc68:	push   edi
1000bc69:	lea    ecx,[ebp-0x19c]
1000bc6f:	mov    BYTE PTR [ebp-0x4],0x12
1000bc73:	call   0x100012eb
1000bc78:	mov    eax,DWORD PTR [ebp-0x160]
1000bc7e:	cmp    eax,DWORD PTR [ebp-0x18]
1000bc81:	lea    ecx,[eax+0x1]
1000bc84:	mov    DWORD PTR [ebp-0x164],ecx
1000bc8a:	jb     0x1000bbc0
1000bc90:	push   ebx
1000bc91:	push   edi
1000bc92:	lea    ecx,[ebp-0x2c]
1000bc95:	call   0x100012eb
1000bc9a:	lea    esi,[ebp-0xc0]
1000bca0:	call   0x1000bcad
1000bca5:	call   0x10059c11
1000bcaa:	ret    0x4
1000bcad:	push   ebx
1000bcae:	xor    ebx,ebx
1000bcb0:	push   ebx
1000bcb1:	push   0x1
1000bcb3:	lea    ecx,[esi+0x70]
1000bcb6:	call   0x100012eb
1000bcbb:	push   ebx
1000bcbc:	push   0x1
1000bcbe:	lea    ecx,[esi+0x54]
1000bcc1:	call   0x100012eb
1000bcc6:	push   ebx
1000bcc7:	push   0x1
1000bcc9:	lea    ecx,[esi+0x38]
1000bccc:	call   0x100012eb
1000bcd1:	push   ebx
1000bcd2:	push   0x1
1000bcd4:	lea    ecx,[esi+0x1c]
1000bcd7:	call   0x100012eb
1000bcdc:	push   ebx
1000bcdd:	push   0x1
1000bcdf:	mov    ecx,esi
1000bce1:	call   0x100012eb
1000bce6:	pop    ebx
1000bce7:	ret    
1000bce8:	push   esi
1000bce9:	lea    esi,[edi+0x4]
1000bcec:	call   0x100040d0
1000bcf1:	lea    esi,[edi+0x24]
1000bcf4:	call   0x100040d0
1000bcf9:	lea    esi,[edi+0x40]
1000bcfc:	call   0x100040d0
1000bd01:	lea    esi,[edi+0x5c]
1000bd04:	call   0x100040d0
1000bd09:	lea    esi,[edi+0x78]
1000bd0c:	call   0x100040d0
1000bd11:	mov    eax,edi
1000bd13:	pop    esi
1000bd14:	ret    
1000bd15:	push   ebx
1000bd16:	xor    ebx,ebx
1000bd18:	push   ebx
1000bd19:	push   0x1
1000bd1b:	lea    ecx,[esi+0x78]
1000bd1e:	call   0x100012eb
1000bd23:	push   ebx
1000bd24:	push   0x1
1000bd26:	lea    ecx,[esi+0x5c]
1000bd29:	call   0x100012eb
1000bd2e:	push   ebx
1000bd2f:	push   0x1
1000bd31:	lea    ecx,[esi+0x40]
1000bd34:	call   0x100012eb
1000bd39:	push   ebx
1000bd3a:	push   0x1
1000bd3c:	lea    ecx,[esi+0x24]
1000bd3f:	call   0x100012eb
1000bd44:	push   ebx
1000bd45:	push   0x1
1000bd47:	lea    ecx,[esi+0x4]
1000bd4a:	call   0x100012eb
1000bd4f:	pop    ebx
1000bd50:	ret    
1000bd51:	push   0x4
1000bd53:	mov    eax,0x10061198
1000bd58:	call   0x10059b25
1000bd5d:	mov    edi,0x10080da4
1000bd62:	xor    ebx,ebx
1000bd64:	mov    DWORD PTR [ebp-0x10],edi
1000bd67:	mov    DWORD PTR ds:0x10080da4,ebx
1000bd6d:	mov    DWORD PTR [ebp-0x4],ebx
1000bd70:	mov    DWORD PTR ds:0x10080da8,ebx
1000bd76:	mov    BYTE PTR [ebp-0x4],0x1
1000bd7a:	call   0x1000a87d
1000bd7f:	mov    ds:0x10080db0,eax
1000bd84:	mov    BYTE PTR [eax+0x39],0x1
1000bd88:	mov    eax,ds:0x10080db0
1000bd8d:	mov    DWORD PTR [eax+0x4],eax
1000bd90:	mov    eax,ds:0x10080db0
1000bd95:	mov    DWORD PTR [eax],eax
1000bd97:	mov    eax,ds:0x10080db0
1000bd9c:	push   ebx
1000bd9d:	push   ebx
1000bd9e:	mov    DWORD PTR [eax+0x8],eax
1000bda1:	push   ebx
1000bda2:	mov    DWORD PTR ds:0x10080db4,ebx
1000bda8:	call   DWORD PTR ds:0x10066074
1000bdae:	push   eax
1000bdaf:	mov    esi,edi
1000bdb1:	call   0x100049f9
1000bdb6:	push   ebx
1000bdb7:	push   ebx
1000bdb8:	push   edi
1000bdb9:	push   0x1000c3b3
1000bdbe:	push   ebx
1000bdbf:	push   ebx
1000bdc0:	call   DWORD PTR ds:0x10066098
1000bdc6:	push   eax
1000bdc7:	mov    esi,0x10080da8
1000bdcc:	call   0x100049f9
1000bdd1:	mov    eax,edi
1000bdd3:	call   0x10059bfd
1000bdd8:	ret    
1000bdd9:	push   0x40
1000bddb:	mov    eax,0x100620de
1000bde0:	call   0x10059b25
1000bde5:	mov    edi,ecx
1000bde7:	lea    eax,[ebp-0x30]
1000bdea:	push   eax
1000bdeb:	xor    ebx,ebx
1000bded:	mov    eax,edi
1000bdef:	mov    DWORD PTR [ebp-0x14],ebx
1000bdf2:	call   0x1000afbb
1000bdf7:	mov    DWORD PTR [ebp-0x4],ebx
1000bdfa:	push   0x1006cd08
1000bdff:	mov    esi,eax
1000be01:	mov    DWORD PTR [ebp-0x14],0x1
1000be08:	call   0x10006639
1000be0d:	test   al,al
1000be0f:	pop    ecx
1000be10:	jne    0x1000be1e
1000be12:	movzx  eax,WORD PTR [edi+0x34]
1000be16:	cmp    ax,bx
1000be19:	mov    BYTE PTR [ebp-0xd],bl
1000be1c:	jne    0x1000be22
1000be1e:	mov    BYTE PTR [ebp-0xd],0x1
1000be22:	or     DWORD PTR [ebp-0x4],0xffffffff
1000be26:	xor    esi,esi
1000be28:	push   ebx
1000be29:	inc    esi
1000be2a:	push   esi
1000be2b:	lea    ecx,[ebp-0x30]
1000be2e:	call   0x100012eb
1000be33:	cmp    BYTE PTR [ebp-0xd],bl
1000be36:	je     0x1000be3f
1000be38:	xor    al,al
1000be3a:	jmp    0x1000bec4
1000be3f:	mov    DWORD PTR [ebp-0x14],ebx
1000be42:	lea    eax,[ebp-0x14]
1000be45:	mov    DWORD PTR [ebp-0x4],esi
1000be48:	mov    esi,DWORD PTR ds:0x10080da4
1000be4e:	push   eax
1000be4f:	call   0x1000aa52
1000be54:	test   eax,eax
1000be56:	je     0x1000be68
1000be58:	cmp    DWORD PTR [ebp-0x14],ebx
1000be5b:	je     0x1000be38
1000be5d:	push   DWORD PTR [ebp-0x14]
1000be60:	call   DWORD PTR ds:0x10066094
1000be66:	jmp    0x1000be38
1000be68:	lea    eax,[ebp-0x4c]
1000be6b:	push   eax
1000be6c:	mov    eax,edi
1000be6e:	call   0x1000afbb
1000be73:	mov    BYTE PTR [ebp-0x4],0x2
1000be77:	movzx  ecx,WORD PTR [edi+0x34]
1000be7b:	push   0x1
1000be7d:	push   ecx
1000be7e:	push   eax
1000be7f:	call   0x1000c6cd
1000be84:	push   ebx
1000be85:	push   0x1
1000be87:	lea    ecx,[ebp-0x4c]
1000be8a:	mov    esi,eax
1000be8c:	call   0x100012eb
1000be91:	cmp    esi,ebx
1000be93:	je     0x1000be58
1000be95:	mov    BYTE PTR [esi],bl
1000be97:	call   0x1002fa60
1000be9c:	mov    ecx,eax
1000be9e:	mov    eax,DWORD PTR [ebp+0x8]
1000bea1:	mov    edi,edx
1000bea3:	mov    edx,0x2710
1000bea8:	mul    edx
1000beaa:	add    eax,ecx
1000beac:	adc    edx,edi
1000beae:	cmp    DWORD PTR [ebp-0x14],ebx
1000beb1:	mov    DWORD PTR [esi+0x8],eax
1000beb4:	mov    DWORD PTR [esi+0xc],edx
1000beb7:	je     0x1000bec2
1000beb9:	push   DWORD PTR [ebp-0x14]
1000bebc:	call   DWORD PTR ds:0x10066094
1000bec2:	mov    al,0x1
1000bec4:	call   0x10059bfd
1000bec9:	ret    0x4
1000becc:	push   ebp
1000becd:	mov    ebp,esp
1000becf:	and    esp,0xfffffff8
1000bed2:	push   0xffffffff
1000bed4:	push   0x10061157
1000bed9:	mov    eax,fs:0x0
1000bedf:	push   eax
1000bee0:	sub    esp,0xc0
1000bee6:	mov    eax,ds:0x1007e030
1000beeb:	xor    eax,esp
1000beed:	mov    DWORD PTR [esp+0xb8],eax
1000bef4:	push   ebx
1000bef5:	push   esi
1000bef6:	push   edi
1000bef7:	mov    eax,ds:0x1007e030
1000befc:	xor    eax,esp
1000befe:	push   eax
1000beff:	lea    eax,[esp+0xd0]
1000bf06:	mov    fs:0x0,eax
1000bf0c:	and    DWORD PTR [esp+0x14],0x0
1000bf11:	mov    edi,ecx
1000bf13:	lea    eax,[esp+0x1c]
1000bf17:	push   eax
1000bf18:	mov    eax,edi
1000bf1a:	mov    DWORD PTR [esp+0x1c],edi
1000bf1e:	call   0x1000afbb
1000bf23:	and    DWORD PTR [esp+0xd8],0x0
1000bf2b:	xor    ebx,ebx
1000bf2d:	inc    ebx
1000bf2e:	push   0x1006cd08
1000bf33:	mov    esi,eax
1000bf35:	mov    DWORD PTR [esp+0x18],ebx
1000bf39:	call   0x10006639
1000bf3e:	test   al,al
1000bf40:	pop    ecx
1000bf41:	jne    0x1000bf51
1000bf43:	movzx  eax,WORD PTR [edi+0x34]
1000bf47:	test   ax,ax
1000bf4a:	mov    BYTE PTR [esp+0x13],0x0
1000bf4f:	jne    0x1000bf56
1000bf51:	mov    BYTE PTR [esp+0x13],0x1
1000bf56:	or     DWORD PTR [esp+0xd8],0xffffffff
1000bf5e:	push   0x0
1000bf60:	push   ebx
1000bf61:	lea    ecx,[esp+0x24]
1000bf65:	call   0x100012eb
1000bf6a:	cmp    BYTE PTR [esp+0x13],0x0
1000bf6f:	je     0x1000bf78
1000bf71:	xor    al,al
1000bf73:	jmp    0x1000c15f
1000bf78:	and    DWORD PTR [esp+0x14],0x0
1000bf7d:	lea    eax,[esp+0x14]
1000bf81:	mov    DWORD PTR [esp+0xd8],ebx
1000bf88:	mov    esi,DWORD PTR ds:0x10080da4
1000bf8e:	push   eax
1000bf8f:	call   0x1000aa52
1000bf94:	test   eax,eax
1000bf96:	je     0x1000bfab
1000bf98:	cmp    DWORD PTR [esp+0x14],0x0
1000bf9d:	je     0x1000bf71
1000bf9f:	push   DWORD PTR [esp+0x14]
1000bfa3:	call   DWORD PTR ds:0x10066094
1000bfa9:	jmp    0x1000bf71
1000bfab:	lea    eax,[esp+0x54]
1000bfaf:	push   eax
1000bfb0:	mov    eax,edi
1000bfb2:	call   0x1000afbb
1000bfb7:	mov    BYTE PTR [esp+0xd8],0x2
1000bfbf:	movzx  ecx,WORD PTR [edi+0x34]
1000bfc3:	push   ecx
1000bfc4:	push   eax
1000bfc5:	lea    ecx,[esp+0xb4]
1000bfcc:	call   0x1000c676
1000bfd1:	push   0x0
1000bfd3:	push   ebx
1000bfd4:	lea    ecx,[esp+0x5c]
1000bfd8:	mov    BYTE PTR [esp+0xe0],0x4
1000bfe0:	call   0x100012eb
1000bfe5:	lea    eax,[esp+0xac]
1000bfec:	push   eax
1000bfed:	lea    eax,[esp+0x20]
1000bff1:	mov    ebx,0x10080dac
1000bff6:	push   eax
1000bff7:	mov    edi,ebx
1000bff9:	call   0x1000cd66
1000bffe:	mov    esi,DWORD PTR ds:0x10080db0
1000c004:	xor    edi,edi
1000c006:	cmp    DWORD PTR [esp+0x1c],edi
1000c00a:	je     0x1000c012
1000c00c:	cmp    DWORD PTR [esp+0x1c],ebx
1000c010:	je     0x1000c017
1000c012:	call   0x100434a0
1000c017:	cmp    DWORD PTR [esp+0x20],esi
1000c01b:	jne    0x1000c116
1000c021:	mov    DWORD PTR [esp+0x40],edi
1000c025:	mov    DWORD PTR [esp+0x44],edi
1000c029:	mov    DWORD PTR [esp+0x48],edi
1000c02d:	push   edi
1000c02e:	push   DWORD PTR [ebp+0x8]
1000c031:	mov    BYTE PTR [esp+0xe0],0x5
1000c039:	push   DWORD PTR [esp+0x20]
1000c03d:	lea    esi,[esp+0x28]
1000c041:	call   0x1000c621
1000c046:	push   eax
1000c047:	lea    eax,[esp+0x40]
1000c04b:	call   0x1000cefc
1000c050:	sub    esp,0x10
1000c053:	mov    eax,esp
1000c055:	mov    DWORD PTR [esp+0x28],esp
1000c059:	push   eax
1000c05a:	lea    ecx,[esp+0x50]
1000c05e:	call   0x1000ce21
1000c063:	sub    esp,0x1c
1000c066:	mov    BYTE PTR [esp+0x104],0x6
1000c06e:	lea    eax,[esp+0xd8]
1000c075:	mov    ecx,esp
1000c077:	mov    DWORD PTR [esp+0x48],esp
1000c07b:	push   eax
1000c07c:	call   0x100011a2
1000c081:	lea    edi,[esp+0xac]
1000c088:	mov    BYTE PTR [esp+0x104],0x5
1000c090:	call   0x1000d810
1000c095:	add    esp,0x2c
1000c098:	mov    esi,eax
1000c09a:	push   esi
1000c09b:	lea    ecx,[esp+0x58]
1000c09f:	mov    BYTE PTR [esp+0xdc],0x7
1000c0a7:	call   0x100011a2
1000c0ac:	lea    eax,[esp+0x70]
1000c0b0:	lea    ecx,[esi+0x1c]
1000c0b3:	push   eax
1000c0b4:	mov    BYTE PTR [esp+0xdc],0x8
1000c0bc:	call   0x1000ce21
1000c0c1:	lea    eax,[esp+0x54]
1000c0c5:	push   eax
1000c0c6:	lea    edi,[esp+0x20]
1000c0ca:	mov    BYTE PTR [esp+0xdc],0x9
1000c0d2:	call   0x1000ca1f
1000c0d7:	lea    esi,[esp+0x70]
1000c0db:	call   0x10011ee7
1000c0e0:	push   0x0
1000c0e2:	push   0x1
1000c0e4:	lea    ecx,[esp+0x5c]
1000c0e8:	call   0x100012eb
1000c0ed:	lea    esi,[esp+0x9c]
1000c0f4:	call   0x10011ee7
1000c0f9:	push   0x0
1000c0fb:	push   0x1
1000c0fd:	lea    ecx,[esp+0x88]
1000c104:	call   0x100012eb
1000c109:	lea    esi,[esp+0x3c]
1000c10d:	call   0x10011ee7
1000c112:	xor    edi,edi
1000c114:	jmp    0x1000c139
1000c116:	push   edi
1000c117:	push   DWORD PTR [ebp+0x8]
1000c11a:	lea    esi,[esp+0x44]
1000c11e:	push   DWORD PTR [esp+0x20]
1000c122:	call   0x1000c621
1000c127:	push   eax
1000c128:	lea    esi,[esp+0x20]
1000c12c:	call   0x10013f4a
1000c131:	add    eax,0x1c
1000c134:	call   0x1000cefc
1000c139:	call   0x1000206e
1000c13e:	push   edi
1000c13f:	push   0x1
1000c141:	lea    ecx,[esp+0xb4]
1000c148:	call   0x100012eb
1000c14d:	cmp    DWORD PTR [esp+0x14],edi
1000c151:	je     0x1000c15d
1000c153:	push   DWORD PTR [esp+0x14]
1000c157:	call   DWORD PTR ds:0x10066094
1000c15d:	mov    al,0x1
1000c15f:	mov    ecx,DWORD PTR [esp+0xd0]
1000c166:	mov    DWORD PTR fs:0x0,ecx
1000c16d:	pop    ecx
1000c16e:	pop    edi
1000c16f:	pop    esi
1000c170:	pop    ebx
1000c171:	mov    ecx,DWORD PTR [esp+0xb8]
1000c178:	xor    ecx,esp
1000c17a:	call   0x10042f87
1000c17f:	mov    esp,ebp
1000c181:	pop    ebp
1000c182:	ret    0x4
1000c185:	push   ebp
1000c186:	mov    ebp,esp
1000c188:	and    esp,0xfffffff8
1000c18b:	push   0xffffffff
1000c18d:	push   0x100610bb
1000c192:	mov    eax,fs:0x0
1000c198:	push   eax
1000c199:	sub    esp,0x60
1000c19c:	mov    eax,ds:0x1007e030
1000c1a1:	xor    eax,esp
1000c1a3:	mov    DWORD PTR [esp+0x58],eax
1000c1a7:	push   ebx
1000c1a8:	push   esi
1000c1a9:	push   edi
1000c1aa:	mov    eax,ds:0x1007e030
1000c1af:	xor    eax,esp
1000c1b1:	push   eax
1000c1b2:	lea    eax,[esp+0x70]
1000c1b6:	mov    fs:0x0,eax
1000c1bc:	and    DWORD PTR [esp+0x14],0x0
1000c1c1:	mov    edi,ecx
1000c1c3:	lea    eax,[esp+0x30]
1000c1c7:	push   eax
1000c1c8:	mov    eax,edi
1000c1ca:	mov    DWORD PTR [esp+0x24],edi
1000c1ce:	call   0x1000afbb
1000c1d3:	and    DWORD PTR [esp+0x78],0x0
1000c1d8:	xor    ebx,ebx
1000c1da:	inc    ebx
1000c1db:	push   0x1006cd08
1000c1e0:	mov    esi,eax
1000c1e2:	mov    DWORD PTR [esp+0x18],ebx
1000c1e6:	call   0x10006639
1000c1eb:	test   al,al
1000c1ed:	pop    ecx
1000c1ee:	jne    0x1000c1fe
1000c1f0:	movzx  eax,WORD PTR [edi+0x34]
1000c1f4:	test   ax,ax
1000c1f7:	mov    BYTE PTR [esp+0x13],0x0
1000c1fc:	jne    0x1000c203
1000c1fe:	mov    BYTE PTR [esp+0x13],0x1
1000c203:	or     DWORD PTR [esp+0x78],0xffffffff
1000c208:	push   0x0
1000c20a:	push   ebx
1000c20b:	lea    ecx,[esp+0x38]
1000c20f:	call   0x100012eb
1000c214:	cmp    BYTE PTR [esp+0x13],0x0
1000c219:	je     0x1000c222
1000c21b:	xor    al,al
1000c21d:	jmp    0x1000c395
1000c222:	and    DWORD PTR [esp+0x14],0x0
1000c227:	lea    eax,[esp+0x14]
1000c22b:	mov    DWORD PTR [esp+0x78],ebx
1000c22f:	mov    esi,DWORD PTR ds:0x10080da4
1000c235:	push   eax
1000c236:	call   0x1000aa52
1000c23b:	test   eax,eax
1000c23d:	je     0x1000c252
1000c23f:	cmp    DWORD PTR [esp+0x14],0x0
1000c244:	je     0x1000c21b
1000c246:	push   DWORD PTR [esp+0x14]
1000c24a:	call   DWORD PTR ds:0x10066094
1000c250:	jmp    0x1000c21b
1000c252:	lea    eax,[esp+0x30]
1000c256:	push   eax
1000c257:	mov    eax,edi
1000c259:	call   0x1000afbb
1000c25e:	mov    BYTE PTR [esp+0x78],0x2
1000c263:	movzx  ecx,WORD PTR [edi+0x34]
1000c267:	push   ecx
1000c268:	push   eax
1000c269:	lea    ecx,[esp+0x54]
1000c26d:	call   0x1000c676
1000c272:	push   0x0
1000c274:	push   ebx
1000c275:	lea    ecx,[esp+0x38]
1000c279:	mov    BYTE PTR [esp+0x80],0x4
1000c281:	call   0x100012eb
1000c286:	lea    eax,[esp+0x4c]
1000c28a:	push   eax
1000c28b:	lea    eax,[esp+0x1c]
1000c28f:	push   eax
1000c290:	mov    edi,0x10080dac
1000c295:	call   0x1000cd66
1000c29a:	cmp    DWORD PTR [esp+0x18],0x0
1000c29f:	mov    esi,DWORD PTR ds:0x10080db0
1000c2a5:	je     0x1000c2ad
1000c2a7:	cmp    DWORD PTR [esp+0x18],edi
1000c2ab:	je     0x1000c2b2
1000c2ad:	call   0x100434a0
1000c2b2:	cmp    DWORD PTR [esp+0x1c],esi
1000c2b6:	jne    0x1000c2c9
1000c2b8:	push   0x0
1000c2ba:	push   ebx
1000c2bb:	lea    ecx,[esp+0x54]
1000c2bf:	call   0x100012eb
1000c2c4:	jmp    0x1000c23f
1000c2c9:	lea    esi,[esp+0x18]
1000c2cd:	call   0x10013f4a
1000c2d2:	mov    ebx,eax
1000c2d4:	add    ebx,0x1c
1000c2d7:	mov    eax,ebx
1000c2d9:	xor    edi,edi
1000c2db:	call   0x1000cec7
1000c2e0:	test   eax,eax
1000c2e2:	je     0x1000c301
1000c2e4:	push   edi
1000c2e5:	mov    esi,ebx
1000c2e7:	call   0x1000cedd
1000c2ec:	mov    ecx,DWORD PTR [esp+0x20]
1000c2f0:	cmp    DWORD PTR [eax+0x10],ecx
1000c2f3:	je     0x1000c307
1000c2f5:	mov    eax,ebx
1000c2f7:	inc    edi
1000c2f8:	call   0x1000cec7
1000c2fd:	cmp    edi,eax
1000c2ff:	jne    0x1000c2e4
1000c301:	push   0x0
1000c303:	push   0x1
1000c305:	jmp    0x1000c2bb
1000c307:	mov    esi,DWORD PTR [ebx+0x4]
1000c30a:	cmp    esi,DWORD PTR [ebx+0x8]
1000c30d:	jbe    0x1000c314
1000c30f:	call   0x100434a0
1000c314:	lea    eax,[esp+0x20]
1000c318:	push   eax
1000c319:	mov    ecx,edi
1000c31b:	lea    eax,[esp+0x2c]
1000c31f:	mov    DWORD PTR [esp+0x2c],ebx
1000c323:	mov    DWORD PTR [esp+0x30],esi
1000c327:	call   0x1000cfc0
1000c32c:	lea    esi,[esp+0x20]
1000c330:	call   0x1000cfa3
1000c335:	mov    edi,eax
1000c337:	call   0x1000c65b
1000c33c:	push   DWORD PTR [esp+0x24]
1000c340:	lea    eax,[esp+0x2c]
1000c344:	push   DWORD PTR [esp+0x24]
1000c348:	push   eax
1000c349:	call   0x1000cf5d
1000c34e:	mov    eax,ebx
1000c350:	call   0x1000cec7
1000c355:	test   eax,eax
1000c357:	jne    0x1000c370
1000c359:	push   DWORD PTR [esp+0x1c]
1000c35d:	lea    eax,[esp+0x2c]
1000c361:	push   DWORD PTR [esp+0x1c]
1000c365:	push   eax
1000c366:	push   0x10080dac
1000c36b:	call   0x1000cac6
1000c370:	call   0x1000206e
1000c375:	push   0x0
1000c377:	push   0x1
1000c379:	lea    ecx,[esp+0x54]
1000c37d:	call   0x100012eb
1000c382:	cmp    DWORD PTR [esp+0x14],0x0
1000c387:	je     0x1000c393
1000c389:	push   DWORD PTR [esp+0x14]
1000c38d:	call   DWORD PTR ds:0x10066094
1000c393:	mov    al,0x1
1000c395:	mov    ecx,DWORD PTR [esp+0x70]
1000c399:	mov    DWORD PTR fs:0x0,ecx
1000c3a0:	pop    ecx
1000c3a1:	pop    edi
1000c3a2:	pop    esi
1000c3a3:	pop    ebx
1000c3a4:	mov    ecx,DWORD PTR [esp+0x58]
1000c3a8:	xor    ecx,esp
1000c3aa:	call   0x10042f87
1000c3af:	mov    esp,ebp
1000c3b1:	pop    ebp
1000c3b2:	ret    
1000c3b3:	push   ebp
1000c3b4:	mov    ebp,esp
1000c3b6:	and    esp,0xfffffff8
1000c3b9:	push   0xffffffff
1000c3bb:	push   0x1006106f
1000c3c0:	mov    eax,fs:0x0
1000c3c6:	push   eax
1000c3c7:	sub    esp,0xc
1000c3ca:	push   esi
1000c3cb:	push   edi
1000c3cc:	mov    eax,ds:0x1007e030
1000c3d1:	xor    eax,esp
1000c3d3:	push   eax
1000c3d4:	lea    eax,[esp+0x18]
1000c3d8:	mov    fs:0x0,eax
1000c3de:	lea    eax,[esp+0x13]
1000c3e2:	push   eax
1000c3e3:	call   0x100379b0
1000c3e8:	and    DWORD PTR [esp+0x20],0x0
1000c3ed:	mov    esi,DWORD PTR ds:0x10066084
1000c3f3:	mov    edi,0x7d0
1000c3f8:	jmp    0x1000c402
1000c3fa:	mov    ecx,DWORD PTR [ebp+0x8]
1000c3fd:	call   0x1000c42a
1000c402:	push   edi
1000c403:	push   DWORD PTR ds:0x10080fa0
1000c409:	call   esi
1000c40b:	test   eax,eax
1000c40d:	jne    0x1000c3fa
1000c40f:	call   0x100379d0
1000c414:	xor    eax,eax
1000c416:	mov    ecx,DWORD PTR [esp+0x18]
1000c41a:	mov    DWORD PTR fs:0x0,ecx
1000c421:	pop    ecx
1000c422:	pop    edi
1000c423:	pop    esi
1000c424:	mov    esp,ebp
1000c426:	pop    ebp
1000c427:	ret    0x4
1000c42a:	push   0x14c
1000c42f:	mov    eax,0x1006104c
1000c434:	call   0x10059b25
1000c439:	mov    edi,ecx
1000c43b:	call   0x1002fa60
1000c440:	xor    ebx,ebx
1000c442:	mov    DWORD PTR [ebp-0x30],eax
1000c445:	mov    DWORD PTR [ebp-0x2c],edx
1000c448:	mov    DWORD PTR [ebp-0x18],ebx
1000c44b:	lea    eax,[ebp-0x18]
1000c44e:	mov    DWORD PTR [ebp-0x4],ebx
1000c451:	mov    esi,DWORD PTR [edi]
1000c453:	push   eax
1000c454:	call   0x1000aa52
1000c459:	test   eax,eax
1000c45b:	je     0x1000c465
1000c45d:	cmp    DWORD PTR [ebp-0x18],ebx
1000c460:	jmp    0x1000c610
1000c465:	mov    eax,DWORD PTR [edi+0xc]
1000c468:	mov    eax,DWORD PTR [eax]
1000c46a:	add    edi,0x8
1000c46d:	mov    DWORD PTR [ebp-0x28],edi
1000c470:	mov    DWORD PTR [ebp-0x20],edi
1000c473:	mov    DWORD PTR [ebp-0x1c],eax
1000c476:	cmp    DWORD PTR [ebp-0x20],0x0
1000c47a:	mov    esi,DWORD PTR [edi+0x4]
1000c47d:	je     0x1000c484
1000c47f:	cmp    DWORD PTR [ebp-0x20],edi
1000c482:	je     0x1000c489
1000c484:	call   0x100434a0
1000c489:	cmp    DWORD PTR [ebp-0x1c],esi
1000c48c:	je     0x1000c60c
1000c492:	lea    esi,[ebp-0x20]
1000c495:	call   0x10013f4a
1000c49a:	mov    ebx,eax
1000c49c:	mov    esi,DWORD PTR [ebx+0x20]
1000c49f:	add    ebx,0x1c
1000c4a2:	cmp    esi,DWORD PTR [ebx+0x8]
1000c4a5:	jbe    0x1000c4ac
1000c4a7:	call   0x100434a0
1000c4ac:	mov    DWORD PTR [ebp-0x14],ebx
1000c4af:	mov    DWORD PTR [ebp-0x10],esi
1000c4b2:	mov    esi,DWORD PTR [ebx+0x8]
1000c4b5:	cmp    DWORD PTR [ebx+0x4],esi
1000c4b8:	jbe    0x1000c4bf
1000c4ba:	call   0x100434a0
1000c4bf:	cmp    DWORD PTR [ebp-0x14],0x0
1000c4c3:	je     0x1000c4ca
1000c4c5:	cmp    DWORD PTR [ebp-0x14],ebx
1000c4c8:	je     0x1000c4cf
1000c4ca:	call   0x100434a0
1000c4cf:	cmp    DWORD PTR [ebp-0x10],esi
1000c4d2:	je     0x1000c5d1
1000c4d8:	lea    esi,[ebp-0x14]
1000c4db:	call   0x1000cfa3
1000c4e0:	cmp    BYTE PTR [eax],0x0
1000c4e3:	jne    0x1000c52c
1000c4e5:	call   0x1000cfa3
1000c4ea:	mov    ecx,DWORD PTR [eax+0xc]
1000c4ed:	cmp    ecx,DWORD PTR [ebp-0x2c]
1000c4f0:	ja     0x1000c52c
1000c4f2:	jb     0x1000c4fc
1000c4f4:	mov    eax,DWORD PTR [eax+0x8]
1000c4f7:	cmp    eax,DWORD PTR [ebp-0x30]
1000c4fa:	jae    0x1000c52c
1000c4fc:	call   0x1000206e
1000c501:	lea    esi,[ebp-0x14]
1000c504:	call   0x1000cfa3
1000c509:	mov    edi,eax
1000c50b:	call   0x1000c65b
1000c510:	lea    eax,[ebp-0x50]
1000c513:	push   DWORD PTR [ebp-0x10]
1000c516:	push   DWORD PTR [ebp-0x14]
1000c519:	push   eax
1000c51a:	call   0x1000cf5d
1000c51f:	mov    ecx,DWORD PTR [eax]
1000c521:	mov    eax,DWORD PTR [eax+0x4]
1000c524:	mov    DWORD PTR [ebp-0x14],ecx
1000c527:	mov    DWORD PTR [ebp-0x10],eax
1000c52a:	jmp    0x1000c4b2
1000c52c:	lea    esi,[ebp-0x14]
1000c52f:	call   0x1000cfa3
1000c534:	cmp    BYTE PTR [eax],0x0
1000c537:	jne    0x1000c5af
1000c539:	call   0x1000cfa3
1000c53e:	mov    esi,DWORD PTR [eax+0x10]
1000c541:	mov    eax,DWORD PTR [esi+0x8]
1000c544:	and    DWORD PTR [ebp-0x38],0x0
1000c548:	mov    DWORD PTR [ebp-0x154],eax
1000c54e:	xor    eax,eax
1000c550:	lea    edi,[ebp-0x34]
1000c553:	stos   DWORD PTR es:[edi],eax
1000c554:	lea    eax,[ebp-0x38]
1000c557:	push   eax
1000c558:	xor    eax,eax
1000c55a:	push   eax
1000c55b:	push   eax
1000c55c:	lea    ecx,[ebp-0x158]
1000c562:	push   ecx
1000c563:	push   eax
1000c564:	mov    DWORD PTR [ebp-0x158],0x1
1000c56e:	call   DWORD PTR ds:0x100663ec
1000c574:	cmp    eax,0x1
1000c577:	jne    0x1000c5af
1000c579:	mov    esi,DWORD PTR [esi+0x8]
1000c57c:	push   0x2
1000c57e:	push   eax
1000c57f:	lea    eax,[ebp-0x21]
1000c582:	push   eax
1000c583:	push   esi
1000c584:	call   DWORD PTR ds:0x100663c8
1000c58a:	test   eax,eax
1000c58c:	setne  al
1000c58f:	test   al,al
1000c591:	jne    0x1000c5af
1000c593:	call   0x1000206e
1000c598:	lea    esi,[ebp-0x14]
1000c59b:	call   0x1000cfa3
1000c5a0:	mov    edi,eax
1000c5a2:	call   0x1000c65b
1000c5a7:	lea    eax,[ebp-0x40]
1000c5aa:	jmp    0x1000c513
1000c5af:	mov    esi,DWORD PTR [ebp-0x14]
1000c5b2:	test   esi,esi
1000c5b4:	jne    0x1000c5bb
1000c5b6:	call   0x100434a0
1000c5bb:	mov    eax,DWORD PTR [ebp-0x10]
1000c5be:	cmp    eax,DWORD PTR [esi+0x8]
1000c5c1:	jb     0x1000c5c8
1000c5c3:	call   0x100434a0
1000c5c8:	add    DWORD PTR [ebp-0x10],0x18
1000c5cc:	jmp    0x1000c4b2
1000c5d1:	mov    eax,ebx
1000c5d3:	call   0x1000cec7
1000c5d8:	test   eax,eax
1000c5da:	jne    0x1000c5fc
1000c5dc:	push   DWORD PTR [ebp-0x1c]
1000c5df:	mov    edi,DWORD PTR [ebp-0x28]
1000c5e2:	push   DWORD PTR [ebp-0x20]
1000c5e5:	lea    eax,[ebp-0x48]
1000c5e8:	push   eax
1000c5e9:	push   edi
1000c5ea:	call   0x1000cac6
1000c5ef:	mov    ecx,DWORD PTR [eax]
1000c5f1:	mov    eax,DWORD PTR [eax+0x4]
1000c5f4:	mov    DWORD PTR [ebp-0x20],ecx
1000c5f7:	jmp    0x1000c473
1000c5fc:	lea    esi,[ebp-0x20]
1000c5ff:	call   0x1000cdd4
1000c604:	mov    edi,DWORD PTR [ebp-0x28]
1000c607:	jmp    0x1000c476
1000c60c:	cmp    DWORD PTR [ebp-0x18],0x0
1000c610:	je     0x1000c61b
1000c612:	push   DWORD PTR [ebp-0x18]
1000c615:	call   DWORD PTR ds:0x10066094
1000c61b:	call   0x10059bfd
1000c620:	ret    
1000c621:	push   ebx
1000c622:	push   edi
1000c623:	mov    BYTE PTR [esi],0x0
1000c626:	call   0x1002fa60
1000c62b:	push   0x0
1000c62d:	push   0x2710
1000c632:	push   DWORD PTR [esp+0x1c]
1000c636:	mov    edi,eax
1000c638:	push   DWORD PTR [esp+0x1c]
1000c63c:	mov    ebx,edx
1000c63e:	call   0x1004f4f0
1000c643:	add    eax,edi
1000c645:	mov    DWORD PTR [esi+0x8],eax
1000c648:	mov    eax,DWORD PTR [esp+0xc]
1000c64c:	adc    edx,ebx
1000c64e:	pop    edi
1000c64f:	mov    DWORD PTR [esi+0x10],eax
1000c652:	mov    DWORD PTR [esi+0xc],edx
1000c655:	mov    eax,esi
1000c657:	pop    ebx
1000c658:	ret    0xc
1000c65b:	push   esi
1000c65c:	mov    esi,DWORD PTR [edi+0x10]
1000c65f:	test   esi,esi
1000c661:	je     0x1000c674
1000c663:	push   esi
1000c664:	call   0x1000c785
1000c669:	push   esi
1000c66a:	call   0x10042f82
1000c66f:	and    DWORD PTR [edi+0x10],0x0
1000c673:	pop    ecx
1000c674:	pop    esi
1000c675:	ret    
1000c676:	push   0x50
1000c678:	mov    eax,0x1006101f
1000c67d:	call   0x10059b8e
1000c682:	mov    eax,DWORD PTR [ebp+0x8]
1000c685:	and    DWORD PTR [ebp-0x4],0x0
1000c689:	and    DWORD PTR [ebp-0x58],0x0
1000c68d:	mov    esi,ecx
1000c68f:	push   eax
1000c690:	mov    DWORD PTR [ebp-0x5c],esi
1000c693:	call   0x100011a2
1000c698:	and    DWORD PTR [ebp-0x4],0x0
1000c69c:	xor    ebx,ebx
1000c69e:	inc    ebx
1000c69f:	push   0x3a
1000c6a1:	mov    DWORD PTR [ebp-0x58],ebx
1000c6a4:	call   0x1000d034
1000c6a9:	push   0xa
1000c6ab:	lea    eax,[ebp-0x54]
1000c6ae:	push   eax
1000c6af:	movzx  eax,WORD PTR [ebp+0xc]
1000c6b3:	push   eax
1000c6b4:	call   0x10045be6
1000c6b9:	add    esp,0xc
1000c6bc:	push   eax
1000c6bd:	push   esi
1000c6be:	call   0x10004107
1000c6c3:	mov    eax,esi
1000c6c5:	call   0x10059c11
1000c6ca:	ret    0x8
1000c6cd:	push   0x28
1000c6cf:	mov    eax,0x10062090
1000c6d4:	call   0x10059b8e
1000c6d9:	push   DWORD PTR [ebp+0xc]
1000c6dc:	lea    ecx,[ebp-0x2c]
1000c6df:	push   DWORD PTR [ebp+0x8]
1000c6e2:	call   0x1000c676
1000c6e7:	and    DWORD PTR [ebp-0x4],0x0
1000c6eb:	lea    eax,[ebp-0x2c]
1000c6ee:	push   eax
1000c6ef:	lea    eax,[ebp-0x34]
1000c6f2:	push   eax
1000c6f3:	mov    edi,0x10080dac
1000c6f8:	call   0x1000cd66
1000c6fd:	cmp    DWORD PTR [ebp-0x34],0x0
1000c701:	mov    esi,DWORD PTR ds:0x10080db0
1000c707:	je     0x1000c70e
1000c709:	cmp    DWORD PTR [ebp-0x34],edi
1000c70c:	je     0x1000c713
1000c70e:	call   0x100434a0
1000c713:	cmp    DWORD PTR [ebp-0x30],esi
1000c716:	jne    0x1000c730
1000c718:	xor    esi,esi
1000c71a:	push   0x0
1000c71c:	push   0x1
1000c71e:	lea    ecx,[ebp-0x2c]
1000c721:	call   0x100012eb
1000c726:	mov    eax,esi
1000c728:	call   0x10059c11
1000c72d:	ret    0xc
1000c730:	lea    esi,[ebp-0x34]
1000c733:	call   0x10013f4a
1000c738:	mov    esi,eax
1000c73a:	add    esi,0x1c
1000c73d:	mov    eax,esi
1000c73f:	xor    edi,edi
1000c741:	call   0x1000cec7
1000c746:	test   eax,eax
1000c748:	je     0x1000c718
1000c74a:	push   edi
1000c74b:	call   0x1000cedd
1000c750:	mov    al,BYTE PTR [eax]
1000c752:	cmp    al,BYTE PTR [ebp+0x10]
1000c755:	je     0x1000c765
1000c757:	mov    eax,esi
1000c759:	inc    edi
1000c75a:	call   0x1000cec7
1000c75f:	cmp    edi,eax
1000c761:	jne    0x1000c74a
1000c763:	jmp    0x1000c718
1000c765:	push   edi
1000c766:	call   0x1000cedd
1000c76b:	mov    esi,eax
1000c76d:	jmp    0x1000c71a
1000c76f:	push   esi
1000c770:	lea    esi,[edi+0x1c]
1000c773:	call   0x10011ee7
1000c778:	push   0x0
1000c77a:	push   0x1
1000c77c:	mov    ecx,edi
1000c77e:	call   0x100012eb
1000c783:	pop    esi
1000c784:	ret    
1000c785:	push   0x0
1000c787:	mov    eax,0x10060feb
1000c78c:	call   0x10059b25
1000c791:	mov    esi,DWORD PTR [ebp+0x8]
1000c794:	xor    edi,edi
1000c796:	push   edi
1000c797:	push   0x1
1000c799:	lea    ecx,[esi+0x38]
1000c79c:	mov    DWORD PTR [ebp-0x4],0x3
1000c7a3:	call   0x100012eb
1000c7a8:	push   edi
1000c7a9:	push   0x1
1000c7ab:	lea    ecx,[esi+0x18]
1000c7ae:	call   0x100012eb
1000c7b3:	push   DWORD PTR [esi+0x14]
1000c7b6:	call   0x10042f82
1000c7bb:	pop    ecx
1000c7bc:	lea    eax,[esi+0x10]
1000c7bf:	call   0x1000c9d1
1000c7c4:	mov    BYTE PTR [ebp-0x4],0x2
1000c7c8:	mov    ecx,DWORD PTR [esi+0xc]
1000c7cb:	cmp    ecx,edi
1000c7cd:	je     0x1000c7d5
1000c7cf:	mov    eax,DWORD PTR [ecx]
1000c7d1:	push   0x1
1000c7d3:	call   DWORD PTR [eax]
1000c7d5:	mov    eax,DWORD PTR [esi+0x8]
1000c7d8:	cmp    eax,edi
1000c7da:	je     0x1000c7e3
1000c7dc:	push   eax
1000c7dd:	call   DWORD PTR ds:0x100663b8
1000c7e3:	mov    DWORD PTR [esi+0x8],edi
1000c7e6:	mov    eax,DWORD PTR [esi+0x4]
1000c7e9:	cmp    eax,edi
1000c7eb:	je     0x1000c7f4
1000c7ed:	push   eax
1000c7ee:	call   DWORD PTR ds:0x100663d4
1000c7f4:	mov    DWORD PTR [esi+0x4],edi
1000c7f7:	mov    eax,DWORD PTR [esi]
1000c7f9:	cmp    eax,edi
1000c7fb:	je     0x1000c804
1000c7fd:	push   eax
1000c7fe:	call   DWORD PTR ds:0x10066070
1000c804:	mov    DWORD PTR [esi],edi
1000c806:	call   0x10059bfd
1000c80b:	ret    0x4
1000c80e:	push   0x10
1000c810:	mov    eax,0x100648f8
1000c815:	call   0x10059b25
1000c81a:	xor    ebx,ebx
1000c81c:	mov    DWORD PTR [ebp-0x18],ebx
1000c81f:	mov    DWORD PTR [ebp-0x14],ebx
1000c822:	mov    DWORD PTR [ebp-0x4],0x1
1000c829:	mov    DWORD PTR [ebp-0x10],ebx
1000c82c:	lea    eax,[ebp-0x10]
1000c82f:	mov    BYTE PTR [ebp-0x4],0x2
1000c833:	mov    esi,DWORD PTR ds:0x10080da4
1000c839:	push   eax
1000c83a:	call   0x1000aa52
1000c83f:	test   eax,eax
1000c841:	je     0x1000c857
1000c843:	mov    BYTE PTR [ebp-0x4],0x1
1000c847:	cmp    DWORD PTR [ebp-0x10],ebx
1000c84a:	je     0x1000c88c
1000c84c:	push   DWORD PTR [ebp-0x10]
1000c84f:	call   DWORD PTR ds:0x10066094
1000c855:	jmp    0x1000c88c
1000c857:	push   ebx
1000c858:	push   DWORD PTR [ebp+0x10]
1000c85b:	push   DWORD PTR [ebp+0xc]
1000c85e:	call   0x1000c6cd
1000c863:	mov    esi,eax
1000c865:	cmp    esi,ebx
1000c867:	je     0x1000c843
1000c869:	mov    BYTE PTR [esi],0x1
1000c86c:	call   0x1000206e
1000c871:	mov    esi,DWORD PTR [esi+0x10]
1000c874:	mov    BYTE PTR [ebp-0x4],0x1
1000c878:	cmp    DWORD PTR [ebp-0x10],ebx
1000c87b:	je     0x1000c886
1000c87d:	push   DWORD PTR [ebp-0x10]
1000c880:	call   DWORD PTR ds:0x10066094
1000c886:	cmp    esi,ebx
1000c888:	mov    edi,esi
1000c88a:	jne    0x1000c8a8
1000c88c:	push   0x5c
1000c88e:	call   0x1004358e
1000c893:	cmp    eax,ebx
1000c895:	pop    ecx
1000c896:	je     0x1000c8a1
1000c898:	mov    edi,eax
1000c89a:	call   0x1000aba0
1000c89f:	jmp    0x1000c8a3
1000c8a1:	xor    eax,eax
1000c8a3:	mov    DWORD PTR [ebp-0x14],eax
1000c8a6:	mov    edi,eax
1000c8a8:	push   DWORD PTR [ebp+0x24]
1000c8ab:	mov    ecx,DWORD PTR [ebp+0x28]
1000c8ae:	push   DWORD PTR [ebp+0x18]
1000c8b1:	lea    eax,[ebp-0x10]
1000c8b4:	push   DWORD PTR [ebp+0x14]
1000c8b7:	mov    edx,edi
1000c8b9:	push   DWORD PTR [ebp+0x10]
1000c8bc:	push   DWORD PTR [ebp+0xc]
1000c8bf:	push   eax
1000c8c0:	call   0x1000ae0b
1000c8c5:	mov    ecx,DWORD PTR [eax]
1000c8c7:	mov    esi,ecx
1000c8c9:	mov    DWORD PTR [eax],ebx
1000c8cb:	mov    DWORD PTR [ebp-0x1c],esi
1000c8ce:	mov    BYTE PTR [ebp-0x4],0x3
1000c8d2:	push   DWORD PTR [ebp-0x10]
1000c8d5:	call   0x10042f82
1000c8da:	cmp    esi,ebx
1000c8dc:	pop    ecx
1000c8dd:	jne    0x1000c910
1000c8df:	mov    esi,DWORD PTR [ebp-0x14]
1000c8e2:	cmp    esi,ebx
1000c8e4:	jne    0x1000c8ed
1000c8e6:	mov    ecx,edi
1000c8e8:	call   0x1000c185
1000c8ed:	mov    edi,DWORD PTR [ebp+0x8]
1000c8f0:	mov    DWORD PTR [edi],ebx
1000c8f2:	push   ebx
1000c8f3:	mov    DWORD PTR [ebp-0x18],0x1
1000c8fa:	call   0x10042f82
1000c8ff:	cmp    esi,ebx
1000c901:	pop    ecx
1000c902:	mov    BYTE PTR [ebp-0x4],bl
1000c905:	je     0x1000c968
1000c907:	push   esi
1000c908:	call   0x1000c785
1000c90d:	push   esi
1000c90e:	jmp    0x1000c962
1000c910:	mov    al,BYTE PTR [edi+0x58]
1000c913:	neg    al
1000c915:	mov    ecx,edi
1000c917:	sbb    eax,eax
1000c919:	and    eax,0x3a98
1000c91e:	add    eax,0x1388
1000c923:	cmp    DWORD PTR [ebp-0x14],ebx
1000c926:	push   eax
1000c927:	je     0x1000c937
1000c929:	call   0x1000becc
1000c92e:	test   al,al
1000c930:	je     0x1000c93c
1000c932:	mov    DWORD PTR [ebp-0x14],ebx
1000c935:	jmp    0x1000c93c
1000c937:	call   0x1000bdd9
1000c93c:	mov    edi,DWORD PTR [ebp+0x8]
1000c93f:	push   ebx
1000c940:	mov    DWORD PTR [edi],esi
1000c942:	mov    DWORD PTR [ebp-0x18],0x1
1000c949:	call   0x10042f82
1000c94e:	mov    BYTE PTR [ebp-0x4],bl
1000c951:	cmp    DWORD PTR [ebp-0x14],ebx
1000c954:	pop    ecx
1000c955:	je     0x1000c968
1000c957:	push   DWORD PTR [ebp-0x14]
1000c95a:	call   0x1000c785
1000c95f:	push   DWORD PTR [ebp-0x14]
1000c962:	call   0x10042f82
1000c967:	pop    ecx
1000c968:	mov    eax,edi
1000c96a:	call   0x10059bfd
1000c96f:	ret    
1000c970:	push   DWORD PTR [esp+0x8]
1000c974:	call   0x10043100
1000c979:	pop    ecx
1000c97a:	push   eax
1000c97b:	push   DWORD PTR [esp+0xc]
1000c97f:	mov    eax,DWORD PTR [esp+0x14]
1000c983:	push   DWORD PTR [esp+0xc]
1000c987:	call   0x1000d0a8
1000c98c:	ret    0xc
1000c98f:	push   ebp
1000c990:	mov    ebp,esp
1000c992:	push   ecx
1000c993:	and    DWORD PTR [ebp-0x4],0x0
1000c997:	push   esi
1000c998:	push   DWORD PTR [ebp+0x10]
1000c99b:	mov    esi,eax
1000c99d:	push   DWORD PTR [ebp+0xc]
1000c9a0:	push   DWORD PTR [ebp+0x8]
1000c9a3:	call   0x1000d00c
1000c9a8:	mov    eax,esi
1000c9aa:	pop    esi
1000c9ab:	leave  
1000c9ac:	ret    0xc
1000c9af:	mov    eax,DWORD PTR [esi]
1000c9b1:	test   eax,eax
1000c9b3:	je     0x1000c9bc
1000c9b5:	push   eax
1000c9b6:	call   DWORD PTR ds:0x100663d4
1000c9bc:	and    DWORD PTR [esi],0x0
1000c9bf:	ret    
1000c9c0:	mov    eax,DWORD PTR [esi]
1000c9c2:	test   eax,eax
1000c9c4:	je     0x1000c9cd
1000c9c6:	push   eax
1000c9c7:	call   DWORD PTR ds:0x100663b8
1000c9cd:	and    DWORD PTR [esi],0x0
1000c9d0:	ret    
1000c9d1:	push   esi
1000c9d2:	mov    esi,DWORD PTR [eax]
1000c9d4:	test   esi,esi
1000c9d6:	je     0x1000c9e6
1000c9d8:	mov    eax,esi
1000c9da:	call   0x1000dc4f
1000c9df:	push   esi
1000c9e0:	call   0x10042f82
1000c9e5:	pop    ecx
1000c9e6:	pop    esi
1000c9e7:	ret    
1000c9e8:	jmp    0x1000d144
1000c9ed:	mov    ecx,DWORD PTR [eax+0x4]
1000c9f0:	test   ecx,ecx
1000c9f2:	jne    0x1000c9f7
1000c9f4:	xor    eax,eax
1000c9f6:	ret    
1000c9f7:	mov    eax,DWORD PTR [eax+0x8]
1000c9fa:	sub    eax,ecx
1000c9fc:	sar    eax,0x4
1000c9ff:	ret    
1000ca00:	mov    eax,esi
1000ca02:	call   0x1000c9ed
1000ca07:	cmp    DWORD PTR [esp+0x4],eax
1000ca0b:	jb     0x1000ca12
1000ca0d:	call   0x100434a0
1000ca12:	mov    eax,DWORD PTR [esp+0x4]
1000ca16:	shl    eax,0x4
1000ca19:	add    eax,DWORD PTR [esi+0x4]
1000ca1c:	ret    0x4
1000ca1f:	push   ebp
1000ca20:	mov    ebp,esp
1000ca22:	sub    esp,0x18
1000ca25:	mov    eax,DWORD PTR [ebx+0x4]
1000ca28:	push   esi
1000ca29:	mov    esi,DWORD PTR [eax+0x4]
1000ca2c:	mov    DWORD PTR [ebp-0x8],eax
1000ca2f:	mov    al,0x1
1000ca31:	mov    BYTE PTR [ebp-0xc],al
1000ca34:	jmp    0x1000ca52
1000ca36:	mov    eax,DWORD PTR [ebp+0x8]
1000ca39:	lea    ecx,[esi+0xc]
1000ca3c:	mov    DWORD PTR [ebp-0x8],esi
1000ca3f:	call   0x10004f28
1000ca44:	test   al,al
1000ca46:	mov    BYTE PTR [ebp-0xc],al
1000ca49:	je     0x1000ca4f
1000ca4b:	mov    esi,DWORD PTR [esi]
1000ca4d:	jmp    0x1000ca52
1000ca4f:	mov    esi,DWORD PTR [esi+0x8]
1000ca52:	cmp    BYTE PTR [esi+0x39],0x0
1000ca56:	je     0x1000ca36
1000ca58:	test   al,al
1000ca5a:	mov    ecx,DWORD PTR [ebp-0x8]
1000ca5d:	mov    esi,ecx
1000ca5f:	mov    DWORD PTR [ebp-0x10],esi
1000ca62:	mov    DWORD PTR [ebp-0x14],ebx
1000ca65:	je     0x1000ca99
1000ca67:	mov    eax,DWORD PTR [ebx+0x4]
1000ca6a:	cmp    ecx,DWORD PTR [eax]
1000ca6c:	jne    0x1000ca8e
1000ca6e:	push   DWORD PTR [ebp+0x8]
1000ca71:	push   0x1
1000ca73:	lea    eax,[ebp-0x14]
1000ca76:	push   eax
1000ca77:	mov    esi,ebx
1000ca79:	call   0x1000d169
1000ca7e:	mov    ecx,DWORD PTR [eax]
1000ca80:	mov    eax,DWORD PTR [eax+0x4]
1000ca83:	mov    DWORD PTR [edi],ecx
1000ca85:	mov    DWORD PTR [edi+0x4],eax
1000ca88:	mov    BYTE PTR [edi+0x8],0x1
1000ca8c:	jmp    0x1000cabf
1000ca8e:	lea    esi,[ebp-0x14]
1000ca91:	call   0x1000d329
1000ca96:	mov    esi,DWORD PTR [ebp-0x10]
1000ca99:	mov    ecx,DWORD PTR [ebp+0x8]
1000ca9c:	lea    eax,[esi+0xc]
1000ca9f:	call   0x10004f28
1000caa4:	test   al,al
1000caa6:	je     0x1000cab3
1000caa8:	push   DWORD PTR [ebp+0x8]
1000caab:	mov    ecx,DWORD PTR [ebp-0x8]
1000caae:	push   DWORD PTR [ebp-0xc]
1000cab1:	jmp    0x1000ca73
1000cab3:	mov    eax,DWORD PTR [ebp-0x14]
1000cab6:	mov    DWORD PTR [edi],eax
1000cab8:	mov    DWORD PTR [edi+0x4],esi
1000cabb:	mov    BYTE PTR [edi+0x8],0x0
1000cabf:	mov    eax,edi
1000cac1:	pop    esi
1000cac2:	leave  
1000cac3:	ret    0x4
1000cac6:	push   0x44
1000cac8:	mov    eax,0x10060374
1000cacd:	call   0x10059b25
1000cad2:	mov    edi,DWORD PTR [ebp+0x14]
1000cad5:	cmp    BYTE PTR [edi+0x39],0x0
1000cad9:	je     0x1000cb0d
1000cadb:	push   0x1006ccec
1000cae0:	lea    ecx,[ebp-0x28]
1000cae3:	call   0x100011c8
1000cae8:	and    DWORD PTR [ebp-0x4],0x0
1000caec:	lea    eax,[ebp-0x28]
1000caef:	push   eax
1000caf0:	lea    ecx,[ebp-0x50]
1000caf3:	call   0x10001065
1000caf8:	push   0x10074de8
1000cafd:	lea    eax,[ebp-0x50]
1000cb00:	push   eax
1000cb01:	mov    DWORD PTR [ebp-0x50],0x1006b978
1000cb08:	call   0x10047aa4
1000cb0d:	lea    esi,[ebp+0x10]
1000cb10:	call   0x1000cdd4
1000cb15:	mov    ecx,DWORD PTR [edi]
1000cb17:	cmp    BYTE PTR [ecx+0x39],0x0
1000cb1b:	je     0x1000cb22
1000cb1d:	mov    ebx,DWORD PTR [edi+0x8]
1000cb20:	jmp    0x1000cb39
1000cb22:	mov    eax,DWORD PTR [edi+0x8]
1000cb25:	cmp    BYTE PTR [eax+0x39],0x0
1000cb29:	je     0x1000cb2f
1000cb2b:	mov    ebx,ecx
1000cb2d:	jmp    0x1000cb39
1000cb2f:	mov    eax,DWORD PTR [ebp+0x14]
1000cb32:	cmp    eax,edi
1000cb34:	mov    ebx,DWORD PTR [eax+0x8]
1000cb37:	jne    0x1000cbaf
1000cb39:	cmp    BYTE PTR [ebx+0x39],0x0
1000cb3d:	mov    esi,DWORD PTR [edi+0x4]
1000cb40:	jne    0x1000cb45
1000cb42:	mov    DWORD PTR [ebx+0x4],esi
1000cb45:	mov    ecx,DWORD PTR [ebp+0x8]
1000cb48:	mov    eax,DWORD PTR [ecx+0x4]
1000cb4b:	cmp    DWORD PTR [eax+0x4],edi
1000cb4e:	jne    0x1000cb55
1000cb50:	mov    DWORD PTR [eax+0x4],ebx
1000cb53:	jmp    0x1000cb60
1000cb55:	cmp    DWORD PTR [esi],edi
1000cb57:	jne    0x1000cb5d
1000cb59:	mov    DWORD PTR [esi],ebx
1000cb5b:	jmp    0x1000cb60
1000cb5d:	mov    DWORD PTR [esi+0x8],ebx
1000cb60:	mov    edx,DWORD PTR [ecx+0x4]
1000cb63:	cmp    DWORD PTR [edx],edi
1000cb65:	jne    0x1000cb83
1000cb67:	cmp    BYTE PTR [ebx+0x39],0x0
1000cb6b:	je     0x1000cb71
1000cb6d:	mov    ecx,esi
1000cb6f:	jmp    0x1000cb81
1000cb71:	mov    eax,DWORD PTR [ebx]
1000cb73:	mov    ecx,ebx
1000cb75:	jmp    0x1000cb7b
1000cb77:	mov    ecx,eax
1000cb79:	mov    eax,DWORD PTR [ecx]
1000cb7b:	cmp    BYTE PTR [eax+0x39],0x0
1000cb7f:	je     0x1000cb77
1000cb81:	mov    DWORD PTR [edx],ecx
1000cb83:	mov    eax,DWORD PTR [ebp+0x8]
1000cb86:	mov    edx,DWORD PTR [eax+0x4]
1000cb89:	cmp    DWORD PTR [edx+0x8],edi
1000cb8c:	jne    0x1000cc09
1000cb8e:	cmp    BYTE PTR [ebx+0x39],0x0
1000cb92:	je     0x1000cb98
1000cb94:	mov    ecx,esi
1000cb96:	jmp    0x1000cbaa
1000cb98:	mov    eax,DWORD PTR [ebx+0x8]
1000cb9b:	mov    ecx,ebx
1000cb9d:	jmp    0x1000cba4
1000cb9f:	mov    ecx,eax
1000cba1:	mov    eax,DWORD PTR [ecx+0x8]
1000cba4:	cmp    BYTE PTR [eax+0x39],0x0
1000cba8:	je     0x1000cb9f
1000cbaa:	mov    DWORD PTR [edx+0x8],ecx
1000cbad:	jmp    0x1000cc09
1000cbaf:	mov    DWORD PTR [ecx+0x4],eax
1000cbb2:	mov    ecx,DWORD PTR [edi]
1000cbb4:	mov    DWORD PTR [eax],ecx
1000cbb6:	cmp    eax,DWORD PTR [edi+0x8]
1000cbb9:	jne    0x1000cbbf
1000cbbb:	mov    esi,eax
1000cbbd:	jmp    0x1000cbd9
1000cbbf:	cmp    BYTE PTR [ebx+0x39],0x0
1000cbc3:	mov    esi,DWORD PTR [eax+0x4]
1000cbc6:	jne    0x1000cbcb
1000cbc8:	mov    DWORD PTR [ebx+0x4],esi
1000cbcb:	mov    DWORD PTR [esi],ebx
1000cbcd:	mov    ecx,DWORD PTR [edi+0x8]
1000cbd0:	mov    DWORD PTR [eax+0x8],ecx
1000cbd3:	mov    ecx,DWORD PTR [edi+0x8]
1000cbd6:	mov    DWORD PTR [ecx+0x4],eax
1000cbd9:	mov    ecx,DWORD PTR [ebp+0x8]
1000cbdc:	mov    ecx,DWORD PTR [ecx+0x4]
1000cbdf:	cmp    DWORD PTR [ecx+0x4],edi
1000cbe2:	jne    0x1000cbe9
1000cbe4:	mov    DWORD PTR [ecx+0x4],eax
1000cbe7:	jmp    0x1000cbf7
1000cbe9:	mov    ecx,DWORD PTR [edi+0x4]
1000cbec:	cmp    DWORD PTR [ecx],edi
1000cbee:	jne    0x1000cbf4
1000cbf0:	mov    DWORD PTR [ecx],eax
1000cbf2:	jmp    0x1000cbf7
1000cbf4:	mov    DWORD PTR [ecx+0x8],eax
1000cbf7:	mov    ecx,DWORD PTR [edi+0x4]
1000cbfa:	mov    DWORD PTR [eax+0x4],ecx
1000cbfd:	mov    dl,BYTE PTR [edi+0x38]
1000cc00:	mov    cl,BYTE PTR [eax+0x38]
1000cc03:	mov    BYTE PTR [eax+0x38],dl
1000cc06:	mov    BYTE PTR [edi+0x38],cl
1000cc09:	cmp    BYTE PTR [edi+0x38],0x1
1000cc0d:	jne    0x1000cd25
1000cc13:	jmp    0x1000ccd9
1000cc18:	cmp    BYTE PTR [ebx+0x38],0x1
1000cc1c:	jne    0x1000cd21
1000cc22:	mov    ecx,DWORD PTR [esi]
1000cc24:	cmp    ebx,ecx
1000cc26:	jne    0x1000cc9f
1000cc28:	mov    ecx,DWORD PTR [esi+0x8]
1000cc2b:	cmp    BYTE PTR [ecx+0x38],0x0
1000cc2f:	jne    0x1000cc46
1000cc31:	push   DWORD PTR [ebp+0x8]
1000cc34:	mov    BYTE PTR [ecx+0x38],0x1
1000cc38:	mov    ecx,esi
1000cc3a:	mov    BYTE PTR [esi+0x38],0x0
1000cc3e:	call   0x1000d2b4
1000cc43:	mov    ecx,DWORD PTR [esi+0x8]
1000cc46:	cmp    BYTE PTR [ecx+0x39],0x0
1000cc4a:	jne    0x1000ccd4
1000cc50:	mov    eax,DWORD PTR [ecx]
1000cc52:	cmp    BYTE PTR [eax+0x38],0x1
1000cc56:	jne    0x1000cc61
1000cc58:	mov    eax,DWORD PTR [ecx+0x8]
1000cc5b:	cmp    BYTE PTR [eax+0x38],0x1
1000cc5f:	je     0x1000ccd0
1000cc61:	mov    eax,DWORD PTR [ecx+0x8]
1000cc64:	cmp    BYTE PTR [eax+0x38],0x1
1000cc68:	jne    0x1000cc7f
1000cc6a:	mov    eax,DWORD PTR [ecx]
1000cc6c:	push   DWORD PTR [ebp+0x8]
1000cc6f:	mov    BYTE PTR [eax+0x38],0x1
1000cc73:	mov    BYTE PTR [ecx+0x38],0x0
1000cc77:	call   0x1000a235
1000cc7c:	mov    ecx,DWORD PTR [esi+0x8]
1000cc7f:	mov    al,BYTE PTR [esi+0x38]
1000cc82:	push   DWORD PTR [ebp+0x8]
1000cc85:	mov    BYTE PTR [ecx+0x38],al
1000cc88:	mov    BYTE PTR [esi+0x38],0x1
1000cc8c:	mov    eax,DWORD PTR [ecx+0x8]
1000cc8f:	mov    ecx,esi
1000cc91:	mov    BYTE PTR [eax+0x38],0x1
1000cc95:	call   0x1000d2b4
1000cc9a:	jmp    0x1000cd21
1000cc9f:	cmp    BYTE PTR [ecx+0x38],0x0
1000cca3:	jne    0x1000ccb9
1000cca5:	push   DWORD PTR [ebp+0x8]
1000cca8:	mov    BYTE PTR [ecx+0x38],0x1
1000ccac:	mov    ecx,esi
1000ccae:	mov    BYTE PTR [esi+0x38],0x0
1000ccb2:	call   0x1000a235
1000ccb7:	mov    ecx,DWORD PTR [esi]
1000ccb9:	cmp    BYTE PTR [ecx+0x39],0x0
1000ccbd:	jne    0x1000ccd4
1000ccbf:	mov    eax,DWORD PTR [ecx+0x8]
1000ccc2:	cmp    BYTE PTR [eax+0x38],0x1
1000ccc6:	jne    0x1000ccea
1000ccc8:	mov    eax,DWORD PTR [ecx]
1000ccca:	cmp    BYTE PTR [eax+0x38],0x1
1000ccce:	jne    0x1000ccea
1000ccd0:	mov    BYTE PTR [ecx+0x38],0x0
1000ccd4:	mov    ebx,esi
1000ccd6:	mov    esi,DWORD PTR [esi+0x4]
1000ccd9:	mov    eax,DWORD PTR [ebp+0x8]
1000ccdc:	mov    eax,DWORD PTR [eax+0x4]
1000ccdf:	cmp    ebx,DWORD PTR [eax+0x4]
1000cce2:	jne    0x1000cc18
1000cce8:	jmp    0x1000cd21
1000ccea:	mov    eax,DWORD PTR [ecx]
1000ccec:	cmp    BYTE PTR [eax+0x38],0x1
1000ccf0:	jne    0x1000cd07
1000ccf2:	mov    eax,DWORD PTR [ecx+0x8]
1000ccf5:	push   DWORD PTR [ebp+0x8]
1000ccf8:	mov    BYTE PTR [eax+0x38],0x1
1000ccfc:	mov    BYTE PTR [ecx+0x38],0x0
1000cd00:	call   0x1000d2b4
1000cd05:	mov    ecx,DWORD PTR [esi]
1000cd07:	mov    al,BYTE PTR [esi+0x38]
1000cd0a:	push   DWORD PTR [ebp+0x8]
1000cd0d:	mov    BYTE PTR [ecx+0x38],al
1000cd10:	mov    BYTE PTR [esi+0x38],0x1
1000cd14:	mov    eax,DWORD PTR [ecx]
1000cd16:	mov    ecx,esi
1000cd18:	mov    BYTE PTR [eax+0x38],0x1
1000cd1c:	call   0x1000a235
1000cd21:	mov    BYTE PTR [ebx+0x38],0x1
1000cd25:	lea    ebx,[edi+0xc]
1000cd28:	lea    esi,[ebx+0x1c]
1000cd2b:	call   0x10011ee7
1000cd30:	push   0x0
1000cd32:	push   0x1
1000cd34:	mov    ecx,ebx
1000cd36:	call   0x100012eb
1000cd3b:	push   edi
1000cd3c:	call   0x10042f82
1000cd41:	pop    ecx
1000cd42:	mov    ecx,DWORD PTR [ebp+0x8]
1000cd45:	mov    eax,DWORD PTR [ecx+0x8]
1000cd48:	test   eax,eax
1000cd4a:	jbe    0x1000cd50
1000cd4c:	dec    eax
1000cd4d:	mov    DWORD PTR [ecx+0x8],eax
1000cd50:	mov    ecx,DWORD PTR [ebp+0x10]
1000cd53:	mov    eax,DWORD PTR [ebp+0xc]
1000cd56:	mov    DWORD PTR [eax],ecx
1000cd58:	mov    ecx,DWORD PTR [ebp+0x14]
1000cd5b:	mov    DWORD PTR [eax+0x4],ecx
1000cd5e:	call   0x10059bfd
1000cd63:	ret    0x10
1000cd66:	push   ebp
1000cd67:	mov    ebp,esp
1000cd69:	mov    eax,DWORD PTR [edi+0x4]
1000cd6c:	sub    esp,0x10
1000cd6f:	push   ebx
1000cd70:	push   esi
1000cd71:	mov    esi,DWORD PTR [eax+0x4]
1000cd74:	mov    ebx,eax
1000cd76:	jmp    0x1000cd90
1000cd78:	mov    ecx,DWORD PTR [ebp+0xc]
1000cd7b:	lea    eax,[esi+0xc]
1000cd7e:	call   0x10004f28
1000cd83:	test   al,al
1000cd85:	je     0x1000cd8c
1000cd87:	mov    esi,DWORD PTR [esi+0x8]
1000cd8a:	jmp    0x1000cd90
1000cd8c:	mov    ebx,esi
1000cd8e:	mov    esi,DWORD PTR [esi]
1000cd90:	cmp    BYTE PTR [esi+0x39],0x0
1000cd94:	je     0x1000cd78
1000cd96:	cmp    ebx,DWORD PTR [edi+0x4]
1000cd99:	mov    DWORD PTR [ebp-0x4],ebx
1000cd9c:	mov    DWORD PTR [ebp-0x8],edi
1000cd9f:	je     0x1000cdb5
1000cda1:	mov    eax,DWORD PTR [ebp+0xc]
1000cda4:	lea    ecx,[ebx+0xc]
1000cda7:	call   0x10004f28
1000cdac:	test   al,al
1000cdae:	jne    0x1000cdb5
1000cdb0:	lea    ecx,[ebp-0x8]
1000cdb3:	jmp    0x1000cdc1
1000cdb5:	mov    eax,DWORD PTR [edi+0x4]
1000cdb8:	mov    DWORD PTR [ebp-0xc],eax
1000cdbb:	mov    DWORD PTR [ebp-0x10],edi
1000cdbe:	lea    ecx,[ebp-0x10]
1000cdc1:	mov    edx,DWORD PTR [ecx]
1000cdc3:	mov    eax,DWORD PTR [ebp+0x8]
1000cdc6:	mov    ecx,DWORD PTR [ecx+0x4]
1000cdc9:	pop    esi
1000cdca:	mov    DWORD PTR [eax],edx
1000cdcc:	mov    DWORD PTR [eax+0x4],ecx
1000cdcf:	pop    ebx
1000cdd0:	leave  
1000cdd1:	ret    0x8
1000cdd4:	push   ebx
1000cdd5:	xor    ebx,ebx
1000cdd7:	cmp    DWORD PTR [esi],ebx
1000cdd9:	jne    0x1000cde0
1000cddb:	call   0x100434a0
1000cde0:	mov    eax,DWORD PTR [esi+0x4]
1000cde3:	cmp    BYTE PTR [eax+0x39],bl
1000cde6:	je     0x1000cdef
1000cde8:	call   0x100434a0
1000cded:	jmp    0x1000ce1d
1000cdef:	mov    ecx,DWORD PTR [eax+0x8]
1000cdf2:	cmp    BYTE PTR [ecx+0x39],bl
1000cdf5:	jne    0x1000ce12
1000cdf7:	jmp    0x1000cdfb
1000cdf9:	mov    ecx,eax
1000cdfb:	mov    eax,DWORD PTR [ecx]
1000cdfd:	cmp    BYTE PTR [eax+0x39],bl
1000ce00:	je     0x1000cdf9
1000ce02:	mov    DWORD PTR [esi+0x4],ecx
1000ce05:	jmp    0x1000ce1d
1000ce07:	mov    ecx,DWORD PTR [esi+0x4]
1000ce0a:	cmp    ecx,DWORD PTR [eax+0x8]
1000ce0d:	jne    0x1000ce1a
1000ce0f:	mov    DWORD PTR [esi+0x4],eax
1000ce12:	mov    eax,DWORD PTR [eax+0x4]
1000ce15:	cmp    BYTE PTR [eax+0x39],bl
1000ce18:	je     0x1000ce07
1000ce1a:	mov    DWORD PTR [esi+0x4],eax
1000ce1d:	mov    eax,esi
1000ce1f:	pop    ebx
1000ce20:	ret    
1000ce21:	push   0x10
1000ce23:	mov    eax,0x10060529
1000ce28:	call   0x10059b58
1000ce2d:	mov    ebx,ecx
1000ce2f:	mov    esi,DWORD PTR [ebp+0x8]
1000ce32:	mov    eax,ebx
1000ce34:	call   0x1000cec7
1000ce39:	xor    ecx,ecx
1000ce3b:	cmp    eax,ecx
1000ce3d:	mov    DWORD PTR [esi+0x4],ecx
1000ce40:	mov    DWORD PTR [esi+0x8],ecx
1000ce43:	mov    DWORD PTR [esi+0xc],ecx
1000ce46:	je     0x1000ce99
1000ce48:	mov    edi,esi
1000ce4a:	call   0x1000d401
1000ce4f:	test   al,al
1000ce51:	je     0x1000ce99
1000ce53:	and    DWORD PTR [ebp-0x4],0x0
1000ce57:	mov    eax,DWORD PTR [ebx+0x8]
1000ce5a:	cmp    DWORD PTR [ebx+0x4],eax
1000ce5d:	mov    DWORD PTR [ebp-0x18],eax
1000ce60:	jbe    0x1000ce67
1000ce62:	call   0x100434a0
1000ce67:	mov    eax,DWORD PTR [ebx+0x4]
1000ce6a:	cmp    eax,DWORD PTR [ebx+0x8]
1000ce6d:	mov    DWORD PTR [ebp-0x1c],eax
1000ce70:	jbe    0x1000ce77
1000ce72:	call   0x100434a0
1000ce77:	mov    ecx,DWORD PTR [esi+0x4]
1000ce7a:	mov    edx,DWORD PTR [ebp-0x1c]
1000ce7d:	xor    eax,eax
1000ce7f:	lea    edi,[ebp-0x14]
1000ce82:	stos   BYTE PTR es:[edi],al
1000ce83:	push   DWORD PTR [ebp-0x14]
1000ce86:	mov    eax,ecx
1000ce88:	push   DWORD PTR [ebp+0x8]
1000ce8b:	push   DWORD PTR [ebp-0x18]
1000ce8e:	call   0x1000d8af
1000ce93:	add    esp,0xc
1000ce96:	mov    DWORD PTR [esi+0x8],eax
1000ce99:	mov    eax,esi
1000ce9b:	call   0x10059bfd
1000cea0:	ret    0x4
1000cea3:	mov    esi,DWORD PTR [ebp+0x8]
1000cea6:	mov    eax,DWORD PTR [esi+0x4]
1000cea9:	xor    edi,edi
1000ceab:	cmp    eax,edi
1000cead:	je     0x1000ceb6
1000ceaf:	push   eax
1000ceb0:	call   0x10042f82
1000ceb5:	pop    ecx
1000ceb6:	push   edi
1000ceb7:	push   edi
1000ceb8:	mov    DWORD PTR [esi+0x4],edi
1000cebb:	mov    DWORD PTR [esi+0x8],edi
1000cebe:	mov    DWORD PTR [esi+0xc],edi
1000cec1:	call   0x10047aa4
1000cec6:	int3   
1000cec7:	mov    ecx,DWORD PTR [eax+0x4]
1000ceca:	test   ecx,ecx
1000cecc:	jne    0x1000ced1
1000cece:	xor    eax,eax
1000ced0:	ret    
1000ced1:	mov    eax,DWORD PTR [eax+0x8]
1000ced4:	sub    eax,ecx
1000ced6:	push   0x18
1000ced8:	cdq    
1000ced9:	pop    ecx
1000ceda:	idiv   ecx
1000cedc:	ret    
1000cedd:	mov    eax,esi
1000cedf:	call   0x1000cec7
1000cee4:	cmp    DWORD PTR [esp+0x4],eax
1000cee8:	jb     0x1000ceef
1000ceea:	call   0x100434a0
1000ceef:	mov    eax,DWORD PTR [esp+0x4]
1000cef3:	imul   eax,eax,0x18
1000cef6:	add    eax,DWORD PTR [esi+0x4]
1000cef9:	ret    0x4
1000cefc:	push   ebp
1000cefd:	mov    ebp,esp
1000ceff:	sub    esp,0x10
1000cf02:	push   ebx
1000cf03:	push   esi
1000cf04:	mov    esi,eax
1000cf06:	push   edi
1000cf07:	mov    edi,DWORD PTR [esi+0x4]
1000cf0a:	test   edi,edi
1000cf0c:	jne    0x1000cf12
1000cf0e:	xor    ebx,ebx
1000cf10:	jmp    0x1000cf1f
1000cf12:	mov    eax,DWORD PTR [esi+0xc]
1000cf15:	sub    eax,edi
1000cf17:	push   0x18
1000cf19:	cdq    
1000cf1a:	pop    ecx
1000cf1b:	idiv   ecx
1000cf1d:	mov    ebx,eax
1000cf1f:	mov    eax,esi
1000cf21:	call   0x1000cec7
1000cf26:	cmp    eax,ebx
1000cf28:	jae    0x1000cf3c
1000cf2a:	push   DWORD PTR [ebp+0x8]
1000cf2d:	push   0x1
1000cf2f:	push   DWORD PTR [esi+0x8]
1000cf32:	call   0x1000d42a
1000cf37:	mov    DWORD PTR [esi+0x8],eax
1000cf3a:	jmp    0x1000cf56
1000cf3c:	mov    ebx,DWORD PTR [esi+0x8]
1000cf3f:	cmp    edi,ebx
1000cf41:	jbe    0x1000cf48
1000cf43:	call   0x100434a0
1000cf48:	push   ebx
1000cf49:	push   esi
1000cf4a:	push   DWORD PTR [ebp+0x8]
1000cf4d:	lea    eax,[ebp-0xc]
1000cf50:	push   eax
1000cf51:	call   0x1000d38a
1000cf56:	pop    edi
1000cf57:	pop    esi
1000cf58:	pop    ebx
1000cf59:	leave  
1000cf5a:	ret    0x4
1000cf5d:	push   ebp
1000cf5e:	mov    ebp,esp
1000cf60:	push   ecx
1000cf61:	mov    edx,DWORD PTR [ebp+0x10]
1000cf64:	mov    eax,DWORD PTR [ebx+0x8]
1000cf67:	add    edx,0x18
1000cf6a:	cmp    edx,eax
1000cf6c:	je     0x1000cf8d
1000cf6e:	lea    ecx,[edx-0x18]
1000cf71:	push   esi
1000cf72:	mov    DWORD PTR [ebp-0x4],ecx
1000cf75:	push   edi
1000cf76:	mov    edi,DWORD PTR [ebp-0x4]
1000cf79:	add    DWORD PTR [ebp-0x4],0x18
1000cf7d:	mov    esi,edx
1000cf7f:	push   0x6
1000cf81:	add    edx,0x18
1000cf84:	cmp    edx,eax
1000cf86:	pop    ecx
1000cf87:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
1000cf89:	jne    0x1000cf76
1000cf8b:	pop    edi
1000cf8c:	pop    esi
1000cf8d:	mov    ecx,DWORD PTR [ebp+0xc]
1000cf90:	mov    eax,DWORD PTR [ebp+0x8]
1000cf93:	add    DWORD PTR [ebx+0x8],0xffffffe8
1000cf97:	mov    DWORD PTR [eax],ecx
1000cf99:	mov    ecx,DWORD PTR [ebp+0x10]
1000cf9c:	mov    DWORD PTR [eax+0x4],ecx
1000cf9f:	leave  
1000cfa0:	ret    0xc
1000cfa3:	cmp    DWORD PTR [esi],0x0
1000cfa6:	jne    0x1000cfad
1000cfa8:	call   0x100434a0
1000cfad:	mov    eax,DWORD PTR [esi]
1000cfaf:	mov    ecx,DWORD PTR [esi+0x4]
1000cfb2:	cmp    ecx,DWORD PTR [eax+0x8]
1000cfb5:	jb     0x1000cfbc
1000cfb7:	call   0x100434a0
1000cfbc:	mov    eax,DWORD PTR [esi+0x4]
1000cfbf:	ret    
1000cfc0:	push   ebx
1000cfc1:	mov    ebx,DWORD PTR [eax+0x4]
1000cfc4:	push   esi
1000cfc5:	mov    esi,DWORD PTR [eax]
1000cfc7:	test   esi,esi
1000cfc9:	push   edi
1000cfca:	mov    edi,ecx
1000cfcc:	jne    0x1000cfd3
1000cfce:	call   0x100434a0
1000cfd3:	imul   edi,edi,0x18
1000cfd6:	add    edi,ebx
1000cfd8:	cmp    edi,DWORD PTR [esi+0x8]
1000cfdb:	ja     0x1000cfe2
1000cfdd:	cmp    edi,DWORD PTR [esi+0x4]
1000cfe0:	jae    0x1000cfe7
1000cfe2:	call   0x100434a0
1000cfe7:	mov    eax,DWORD PTR [esp+0x10]
1000cfeb:	mov    DWORD PTR [eax+0x4],edi
1000cfee:	pop    edi
1000cfef:	mov    DWORD PTR [eax],esi
1000cff1:	pop    esi
1000cff2:	pop    ebx
1000cff3:	ret    0x4
1000cff6:	push   esi
1000cff7:	mov    esi,DWORD PTR [eax]
1000cff9:	test   esi,esi
1000cffb:	je     0x1000d00a
1000cffd:	push   esi
1000cffe:	call   0x1000c785
1000d003:	push   esi
1000d004:	call   0x10042f82
1000d009:	pop    ecx
1000d00a:	pop    esi
1000d00b:	ret    
1000d00c:	push   0x0
1000d00e:	mov    ecx,esi
1000d010:	mov    DWORD PTR [esi+0x18],0xf
1000d017:	call   0x10001417
1000d01c:	push   DWORD PTR [esp+0xc]
1000d020:	mov    ecx,esi
1000d022:	push   DWORD PTR [esp+0xc]
1000d026:	push   DWORD PTR [esp+0xc]
1000d02a:	call   0x1000123c
1000d02f:	mov    eax,esi
1000d031:	ret    0xc
1000d034:	or     eax,0xffffffff
1000d037:	sub    eax,DWORD PTR [esi+0x14]
1000d03a:	cmp    eax,ebx
1000d03c:	ja     0x1000d043
1000d03e:	call   0x10057290
1000d043:	test   ebx,ebx
1000d045:	jbe    0x1000d0a3
1000d047:	push   edi
1000d048:	mov    edi,DWORD PTR [esi+0x14]
1000d04b:	push   0x0
1000d04d:	add    edi,ebx
1000d04f:	push   edi
1000d050:	mov    ecx,esi
1000d052:	call   0x10001433
1000d057:	test   al,al
1000d059:	je     0x1000d0a2
1000d05b:	cmp    ebx,0x1
1000d05e:	mov    ecx,DWORD PTR [esi+0x14]
1000d061:	jne    0x1000d07a
1000d063:	cmp    DWORD PTR [esi+0x18],0x10
1000d067:	jb     0x1000d06e
1000d069:	mov    eax,DWORD PTR [esi+0x4]
1000d06c:	jmp    0x1000d071
1000d06e:	lea    eax,[esi+0x4]
1000d071:	mov    dl,BYTE PTR [esp+0x8]
1000d075:	mov    BYTE PTR [eax+ecx*1],dl
1000d078:	jmp    0x1000d09a
1000d07a:	cmp    DWORD PTR [esi+0x18],0x10
1000d07e:	jb     0x1000d085
1000d080:	mov    eax,DWORD PTR [esi+0x4]
1000d083:	jmp    0x1000d088
1000d085:	lea    eax,[esi+0x4]
1000d088:	movsx  edx,BYTE PTR [esp+0x8]
1000d08d:	push   ebx
1000d08e:	push   edx
1000d08f:	add    eax,ecx
1000d091:	push   eax
1000d092:	call   0x10045cf0
1000d097:	add    esp,0xc
1000d09a:	push   edi
1000d09b:	mov    ecx,esi
1000d09d:	call   0x10001417
1000d0a2:	pop    edi
1000d0a3:	mov    eax,esi
1000d0a5:	ret    0x4
1000d0a8:	push   ebp
1000d0a9:	mov    ebp,esp
1000d0ab:	push   ecx
1000d0ac:	cmp    DWORD PTR [ebp+0x10],0x0
1000d0b0:	mov    ecx,DWORD PTR [ebp+0x8]
1000d0b3:	jne    0x1000d0ba
1000d0b5:	cmp    eax,DWORD PTR [ecx+0x14]
1000d0b8:	jbe    0x1000d127
1000d0ba:	push   ebx
1000d0bb:	push   esi
1000d0bc:	mov    esi,DWORD PTR [ecx+0x14]
1000d0bf:	cmp    eax,esi
1000d0c1:	push   edi
1000d0c2:	jae    0x1000d121
1000d0c4:	sub    esi,eax
1000d0c6:	cmp    DWORD PTR [ebp+0x10],esi
1000d0c9:	ja     0x1000d121
1000d0cb:	xor    edx,edx
1000d0cd:	inc    edx
1000d0ce:	sub    edx,DWORD PTR [ebp+0x10]
1000d0d1:	add    esi,edx
1000d0d3:	cmp    DWORD PTR [ecx+0x18],0x10
1000d0d7:	jb     0x1000d0e3
1000d0d9:	add    ecx,0x4
1000d0dc:	mov    DWORD PTR [ebp-0x4],ecx
1000d0df:	mov    ecx,DWORD PTR [ecx]
1000d0e1:	jmp    0x1000d0e9
1000d0e3:	add    ecx,0x4
1000d0e6:	mov    DWORD PTR [ebp-0x4],ecx
1000d0e9:	lea    ebx,[ecx+eax*1]
1000d0ec:	jmp    0x1000d10a
1000d0ee:	push   DWORD PTR [ebp+0x10]
1000d0f1:	push   DWORD PTR [ebp+0xc]
1000d0f4:	push   edi
1000d0f5:	call   0x10043816
1000d0fa:	add    esp,0xc
1000d0fd:	test   eax,eax
1000d0ff:	je     0x1000d12b
1000d101:	sub    ebx,edi
1000d103:	lea    esi,[esi+ebx*1-0x1]
1000d107:	lea    ebx,[edi+0x1]
1000d10a:	mov    eax,DWORD PTR [ebp+0xc]
1000d10d:	movsx  eax,BYTE PTR [eax]
1000d110:	push   esi
1000d111:	push   eax
1000d112:	push   ebx
1000d113:	call   0x10045c40
1000d118:	mov    edi,eax
1000d11a:	add    esp,0xc
1000d11d:	test   edi,edi
1000d11f:	jne    0x1000d0ee
1000d121:	or     eax,0xffffffff
1000d124:	pop    edi
1000d125:	pop    esi
1000d126:	pop    ebx
1000d127:	leave  
1000d128:	ret    0xc
1000d12b:	mov    eax,DWORD PTR [ebp+0x8]
1000d12e:	cmp    DWORD PTR [eax+0x18],0x10
1000d132:	jb     0x1000d13b
1000d134:	mov    eax,DWORD PTR [ebp-0x4]
1000d137:	mov    ecx,DWORD PTR [eax]
1000d139:	jmp    0x1000d13e
1000d13b:	mov    ecx,DWORD PTR [ebp-0x4]
1000d13e:	mov    eax,edi
1000d140:	sub    eax,ecx
1000d142:	jmp    0x1000d124
1000d144:	mov    eax,DWORD PTR [esi+0x4]
1000d147:	test   eax,eax
1000d149:	je     0x1000d15c
1000d14b:	push   DWORD PTR [esi+0x8]
1000d14e:	call   0x1000d45a
1000d153:	push   DWORD PTR [esi+0x4]
1000d156:	call   0x10042f82
1000d15b:	pop    ecx
1000d15c:	and    DWORD PTR [esi+0x4],0x0
1000d160:	and    DWORD PTR [esi+0x8],0x0
1000d164:	and    DWORD PTR [esi+0xc],0x0
1000d168:	ret    
1000d169:	push   0x48
1000d16b:	mov    eax,0x100621c0
1000d170:	call   0x10059b25
1000d175:	mov    edi,ecx
1000d177:	cmp    DWORD PTR [esi+0x8],0x5d1745c
1000d17e:	jb     0x1000d1b2
1000d180:	push   0x1006d02c
1000d185:	lea    ecx,[ebp-0x2c]
1000d188:	call   0x100011c8
1000d18d:	and    DWORD PTR [ebp-0x4],0x0
1000d191:	lea    eax,[ebp-0x2c]
1000d194:	push   eax
1000d195:	lea    ecx,[ebp-0x54]
1000d198:	call   0x10001065
1000d19d:	push   0x10074ec8
1000d1a2:	lea    eax,[ebp-0x54]
1000d1a5:	push   eax
1000d1a6:	mov    DWORD PTR [ebp-0x54],0x1006b96c
1000d1ad:	call   0x10047aa4
1000d1b2:	push   DWORD PTR [ebp+0x10]
1000d1b5:	mov    eax,DWORD PTR [esi+0x4]
1000d1b8:	push   eax
1000d1b9:	push   edi
1000d1ba:	push   eax
1000d1bb:	call   0x1000d51d
1000d1c0:	inc    DWORD PTR [esi+0x8]
1000d1c3:	mov    ebx,eax
1000d1c5:	mov    eax,DWORD PTR [esi+0x4]
1000d1c8:	cmp    edi,eax
1000d1ca:	jne    0x1000d1d9
1000d1cc:	mov    DWORD PTR [eax+0x4],ebx
1000d1cf:	mov    eax,DWORD PTR [esi+0x4]
1000d1d2:	mov    DWORD PTR [eax],ebx
1000d1d4:	mov    eax,DWORD PTR [esi+0x4]
1000d1d7:	jmp    0x1000d1f7
1000d1d9:	cmp    BYTE PTR [ebp+0xc],0x0
1000d1dd:	je     0x1000d1ec
1000d1df:	mov    DWORD PTR [edi],ebx
1000d1e1:	mov    eax,DWORD PTR [esi+0x4]
1000d1e4:	cmp    edi,DWORD PTR [eax]
1000d1e6:	jne    0x1000d1fa
1000d1e8:	mov    DWORD PTR [eax],ebx
1000d1ea:	jmp    0x1000d1fa
1000d1ec:	mov    DWORD PTR [edi+0x8],ebx
1000d1ef:	mov    eax,DWORD PTR [esi+0x4]
1000d1f2:	cmp    edi,DWORD PTR [eax+0x8]
1000d1f5:	jne    0x1000d1fa
1000d1f7:	mov    DWORD PTR [eax+0x8],ebx
1000d1fa:	mov    edi,ebx
1000d1fc:	lea    eax,[ebx+0x4]
1000d1ff:	jmp    0x1000d28e
1000d204:	mov    ecx,DWORD PTR [eax]
1000d206:	mov    edx,DWORD PTR [ecx+0x4]
1000d209:	cmp    ecx,DWORD PTR [edx]
1000d20b:	jne    0x1000d242
1000d20d:	mov    edx,DWORD PTR [edx+0x8]
1000d210:	cmp    BYTE PTR [edx+0x38],0x0
1000d214:	je     0x1000d24a
1000d216:	cmp    edi,DWORD PTR [ecx+0x8]
1000d219:	jne    0x1000d223
1000d21b:	push   esi
1000d21c:	mov    edi,ecx
1000d21e:	call   0x1000d2b4
1000d223:	mov    eax,DWORD PTR [edi+0x4]
1000d226:	mov    BYTE PTR [eax+0x38],0x1
1000d22a:	mov    eax,DWORD PTR [edi+0x4]
1000d22d:	mov    eax,DWORD PTR [eax+0x4]
1000d230:	mov    BYTE PTR [eax+0x38],0x0
1000d234:	mov    eax,DWORD PTR [edi+0x4]
1000d237:	mov    ecx,DWORD PTR [eax+0x4]
1000d23a:	push   esi
1000d23b:	call   0x1000a235
1000d240:	jmp    0x1000d28b
1000d242:	mov    edx,DWORD PTR [edx]
1000d244:	cmp    BYTE PTR [edx+0x38],0x0
1000d248:	jne    0x1000d262
1000d24a:	mov    BYTE PTR [ecx+0x38],0x1
1000d24e:	mov    BYTE PTR [edx+0x38],0x1
1000d252:	mov    ecx,DWORD PTR [eax]
1000d254:	mov    ecx,DWORD PTR [ecx+0x4]
1000d257:	mov    BYTE PTR [ecx+0x38],0x0
1000d25b:	mov    eax,DWORD PTR [eax]
1000d25d:	mov    edi,DWORD PTR [eax+0x4]
1000d260:	jmp    0x1000d28b
1000d262:	cmp    edi,DWORD PTR [ecx]
1000d264:	jne    0x1000d26e
1000d266:	push   esi
1000d267:	mov    edi,ecx
1000d269:	call   0x1000a235
1000d26e:	mov    eax,DWORD PTR [edi+0x4]
1000d271:	mov    BYTE PTR [eax+0x38],0x1
1000d275:	mov    eax,DWORD PTR [edi+0x4]
1000d278:	mov    eax,DWORD PTR [eax+0x4]
1000d27b:	mov    BYTE PTR [eax+0x38],0x0
1000d27f:	mov    eax,DWORD PTR [edi+0x4]
1000d282:	mov    ecx,DWORD PTR [eax+0x4]
1000d285:	push   esi
1000d286:	call   0x1000d2b4
1000d28b:	lea    eax,[edi+0x4]
1000d28e:	mov    ecx,DWORD PTR [eax]
1000d290:	cmp    BYTE PTR [ecx+0x38],0x0
1000d294:	je     0x1000d204
1000d29a:	mov    eax,DWORD PTR [esi+0x4]
1000d29d:	mov    eax,DWORD PTR [eax+0x4]
1000d2a0:	mov    BYTE PTR [eax+0x38],0x1
1000d2a4:	mov    eax,DWORD PTR [ebp+0x8]
1000d2a7:	mov    DWORD PTR [eax+0x4],ebx
1000d2aa:	mov    DWORD PTR [eax],esi
1000d2ac:	call   0x10059bfd
1000d2b1:	ret    0xc
1000d2b4:	mov    eax,DWORD PTR [ecx+0x8]
1000d2b7:	mov    edx,DWORD PTR [eax]
1000d2b9:	mov    DWORD PTR [ecx+0x8],edx
1000d2bc:	mov    edx,DWORD PTR [eax]
1000d2be:	cmp    BYTE PTR [edx+0x39],0x0
1000d2c2:	jne    0x1000d2c7
1000d2c4:	mov    DWORD PTR [edx+0x4],ecx
1000d2c7:	mov    edx,DWORD PTR [ecx+0x4]
1000d2ca:	mov    DWORD PTR [eax+0x4],edx
1000d2cd:	mov    edx,DWORD PTR [esp+0x4]
1000d2d1:	mov    edx,DWORD PTR [edx+0x4]
1000d2d4:	cmp    ecx,DWORD PTR [edx+0x4]
1000d2d7:	jne    0x1000d2de
1000d2d9:	mov    DWORD PTR [edx+0x4],eax
1000d2dc:	jmp    0x1000d2ec
1000d2de:	mov    edx,DWORD PTR [ecx+0x4]
1000d2e1:	cmp    ecx,DWORD PTR [edx]
1000d2e3:	jne    0x1000d2e9
1000d2e5:	mov    DWORD PTR [edx],eax
1000d2e7:	jmp    0x1000d2ec
1000d2e9:	mov    DWORD PTR [edx+0x8],eax
1000d2ec:	mov    DWORD PTR [eax],ecx
1000d2ee:	mov    DWORD PTR [ecx+0x4],eax
1000d2f1:	ret    0x4
1000d2f4:	push   ebp
1000d2f5:	mov    ebp,esp
1000d2f7:	and    esp,0xfffffff8
1000d2fa:	push   ecx
1000d2fb:	push   ecx
1000d2fc:	push   ebx
1000d2fd:	push   edi
1000d2fe:	mov    edi,eax
1000d300:	mov    eax,DWORD PTR [edi+0x4]
1000d303:	mov    ecx,DWORD PTR [eax]
1000d305:	push   eax
1000d306:	push   edi
1000d307:	push   ecx
1000d308:	push   edi
1000d309:	lea    ebx,[esp+0x18]
1000d30d:	call   0x1000d471
1000d312:	push   DWORD PTR [edi+0x4]
1000d315:	call   0x10042f82
1000d31a:	and    DWORD PTR [edi+0x4],0x0
1000d31e:	and    DWORD PTR [edi+0x8],0x0
1000d322:	pop    ecx
1000d323:	pop    edi
1000d324:	pop    ebx
1000d325:	mov    esp,ebp
1000d327:	pop    ebp
1000d328:	ret    
1000d329:	push   ebx
1000d32a:	xor    ebx,ebx
1000d32c:	cmp    DWORD PTR [esi],ebx
1000d32e:	jne    0x1000d335
1000d330:	call   0x100434a0
1000d335:	mov    eax,DWORD PTR [esi+0x4]
1000d338:	cmp    BYTE PTR [eax+0x39],bl
1000d33b:	je     0x1000d34a
1000d33d:	mov    eax,DWORD PTR [eax+0x8]
1000d340:	mov    DWORD PTR [esi+0x4],eax
1000d343:	cmp    BYTE PTR [eax+0x39],bl
1000d346:	je     0x1000d386
1000d348:	jmp    0x1000d37c
1000d34a:	mov    ecx,DWORD PTR [eax]
1000d34c:	cmp    BYTE PTR [ecx+0x39],bl
1000d34f:	jne    0x1000d36c
1000d351:	jmp    0x1000d355
1000d353:	mov    ecx,eax
1000d355:	mov    eax,DWORD PTR [ecx+0x8]
1000d358:	cmp    BYTE PTR [eax+0x39],bl
1000d35b:	je     0x1000d353
1000d35d:	mov    DWORD PTR [esi+0x4],ecx
1000d360:	jmp    0x1000d386
1000d362:	mov    ecx,DWORD PTR [esi+0x4]
1000d365:	cmp    ecx,DWORD PTR [eax]
1000d367:	jne    0x1000d374
1000d369:	mov    DWORD PTR [esi+0x4],eax
1000d36c:	mov    eax,DWORD PTR [eax+0x4]
1000d36f:	cmp    BYTE PTR [eax+0x39],bl
1000d372:	je     0x1000d362
1000d374:	mov    ecx,DWORD PTR [esi+0x4]
1000d377:	cmp    BYTE PTR [ecx+0x39],bl
1000d37a:	je     0x1000d383
1000d37c:	call   0x100434a0
1000d381:	jmp    0x1000d386
1000d383:	mov    DWORD PTR [esi+0x4],eax
1000d386:	mov    eax,esi
1000d388:	pop    ebx
1000d389:	ret    
1000d38a:	push   ebp
1000d38b:	mov    ebp,esp
1000d38d:	push   ebx
1000d38e:	push   edi
1000d38f:	mov    eax,esi
1000d391:	call   0x1000cec7
1000d396:	test   eax,eax
1000d398:	jne    0x1000d39e
1000d39a:	xor    ebx,ebx
1000d39c:	jmp    0x1000d3c8
1000d39e:	mov    edi,DWORD PTR [esi+0x4]
1000d3a1:	cmp    edi,DWORD PTR [esi+0x8]
1000d3a4:	jbe    0x1000d3ab
1000d3a6:	call   0x100434a0
1000d3ab:	cmp    DWORD PTR [ebp+0x10],0x0
1000d3af:	je     0x1000d3b6
1000d3b1:	cmp    DWORD PTR [ebp+0x10],esi
1000d3b4:	je     0x1000d3bb
1000d3b6:	call   0x100434a0
1000d3bb:	mov    eax,DWORD PTR [ebp+0x14]
1000d3be:	sub    eax,edi
1000d3c0:	push   0x18
1000d3c2:	cdq    
1000d3c3:	pop    ecx
1000d3c4:	idiv   ecx
1000d3c6:	mov    ebx,eax
1000d3c8:	push   DWORD PTR [ebp+0x14]
1000d3cb:	mov    edx,DWORD PTR [ebp+0xc]
1000d3ce:	push   DWORD PTR [ebp+0x10]
1000d3d1:	mov    ecx,esi
1000d3d3:	call   0x1000d56f
1000d3d8:	mov    edi,DWORD PTR [esi+0x4]
1000d3db:	cmp    edi,DWORD PTR [esi+0x8]
1000d3de:	jbe    0x1000d3e5
1000d3e0:	call   0x100434a0
1000d3e5:	push   DWORD PTR [ebp+0x8]
1000d3e8:	mov    ecx,ebx
1000d3ea:	lea    eax,[ebp+0x10]
1000d3ed:	mov    DWORD PTR [ebp+0x10],esi
1000d3f0:	mov    DWORD PTR [ebp+0x14],edi
1000d3f3:	call   0x1000cfc0
1000d3f8:	mov    eax,DWORD PTR [ebp+0x8]
1000d3fb:	pop    edi
1000d3fc:	pop    ebx
1000d3fd:	pop    ebp
1000d3fe:	ret    0x10
1000d401:	push   esi
1000d402:	mov    esi,eax
1000d404:	cmp    esi,0xaaaaaaa
1000d40a:	jbe    0x1000d411
1000d40c:	jmp    0x1000fb8b
1000d411:	mov    ecx,esi
1000d413:	call   0x1000d729
1000d418:	imul   esi,esi,0x18
1000d41b:	add    esi,eax
1000d41d:	mov    DWORD PTR [edi+0x4],eax
1000d420:	mov    DWORD PTR [edi+0x8],eax
1000d423:	mov    DWORD PTR [edi+0xc],esi
1000d426:	mov    al,0x1
1000d428:	pop    esi
1000d429:	ret    
1000d42a:	push   ebp
1000d42b:	mov    ebp,esp
1000d42d:	push   ecx
1000d42e:	push   edi
1000d42f:	xor    eax,eax
1000d431:	lea    edi,[ebp-0x4]
1000d434:	stos   BYTE PTR es:[edi],al
1000d435:	push   DWORD PTR [ebp-0x4]
1000d438:	push   DWORD PTR [ebp+0xc]
1000d43b:	push   DWORD PTR [ebp+0x10]
1000d43e:	push   DWORD PTR [ebp+0xc]
1000d441:	push   DWORD PTR [ebp+0x8]
1000d444:	call   0x1000d883
1000d449:	mov    eax,DWORD PTR [ebp+0xc]
1000d44c:	imul   eax,eax,0x18
1000d44f:	add    esp,0x14
1000d452:	add    eax,DWORD PTR [ebp+0x8]
1000d455:	pop    edi
1000d456:	leave  
1000d457:	ret    0xc
1000d45a:	push   esi
1000d45b:	mov    esi,eax
1000d45d:	jmp    0x1000d467
1000d45f:	call   0x100049d4
1000d464:	add    esi,0x10
1000d467:	cmp    esi,DWORD PTR [esp+0x8]
1000d46b:	jne    0x1000d45f
1000d46d:	pop    esi
1000d46e:	ret    0x4
1000d471:	push   ebp
1000d472:	mov    ebp,esp
1000d474:	mov    eax,DWORD PTR [edi+0x4]
1000d477:	sub    esp,0x14
1000d47a:	cmp    DWORD PTR [ebp+0x8],0x0
1000d47e:	push   esi
1000d47f:	mov    esi,DWORD PTR [eax]
1000d481:	je     0x1000d488
1000d483:	cmp    DWORD PTR [ebp+0x8],edi
1000d486:	je     0x1000d48d
1000d488:	call   0x100434a0
1000d48d:	cmp    DWORD PTR [ebp+0xc],esi
1000d490:	jne    0x1000d4d5
1000d492:	cmp    DWORD PTR [ebp+0x10],0x0
1000d496:	mov    esi,DWORD PTR [edi+0x4]
1000d499:	je     0x1000d4a0
1000d49b:	cmp    DWORD PTR [ebp+0x10],edi
1000d49e:	je     0x1000d4a5
1000d4a0:	call   0x100434a0
1000d4a5:	cmp    DWORD PTR [ebp+0x14],esi
1000d4a8:	jne    0x1000d4d5
1000d4aa:	mov    eax,DWORD PTR [edi+0x4]
1000d4ad:	push   DWORD PTR [eax+0x4]
1000d4b0:	mov    ecx,edi
1000d4b2:	call   0x1000d7c0
1000d4b7:	mov    eax,DWORD PTR [edi+0x4]
1000d4ba:	mov    DWORD PTR [eax+0x4],eax
1000d4bd:	mov    eax,DWORD PTR [edi+0x4]
1000d4c0:	and    DWORD PTR [edi+0x8],0x0
1000d4c4:	mov    DWORD PTR [eax],eax
1000d4c6:	mov    eax,DWORD PTR [edi+0x4]
1000d4c9:	mov    DWORD PTR [eax+0x8],eax
1000d4cc:	mov    eax,DWORD PTR [edi+0x4]
1000d4cf:	mov    eax,DWORD PTR [eax]
1000d4d1:	mov    DWORD PTR [ebx],edi
1000d4d3:	jmp    0x1000d513
1000d4d5:	mov    eax,DWORD PTR [ebp+0x8]
1000d4d8:	test   eax,eax
1000d4da:	je     0x1000d4e1
1000d4dc:	cmp    eax,DWORD PTR [ebp+0x10]
1000d4df:	je     0x1000d4e6
1000d4e1:	call   0x100434a0
1000d4e6:	mov    eax,DWORD PTR [ebp+0xc]
1000d4e9:	cmp    eax,DWORD PTR [ebp+0x14]
1000d4ec:	mov    ecx,DWORD PTR [ebp+0x8]
1000d4ef:	je     0x1000d511
1000d4f1:	lea    esi,[ebp+0x8]
1000d4f4:	mov    DWORD PTR [ebp-0x8],ecx
1000d4f7:	mov    DWORD PTR [ebp-0x4],eax
1000d4fa:	call   0x1000cdd4
1000d4ff:	push   DWORD PTR [ebp-0x4]
1000d502:	lea    eax,[ebp-0x10]
1000d505:	push   DWORD PTR [ebp-0x8]
1000d508:	push   eax
1000d509:	push   edi
1000d50a:	call   0x1000cac6
1000d50f:	jmp    0x1000d4d5
1000d511:	mov    DWORD PTR [ebx],ecx
1000d513:	mov    DWORD PTR [ebx+0x4],eax
1000d516:	mov    eax,ebx
1000d518:	pop    esi
1000d519:	leave  
1000d51a:	ret    0x10
1000d51d:	push   0xc
1000d51f:	mov    eax,0x10060fa7
1000d524:	call   0x10059b58
1000d529:	push   0x3c
1000d52b:	call   0x1004358e
1000d530:	mov    esi,eax
1000d532:	pop    ecx
1000d533:	mov    DWORD PTR [ebp-0x14],esi
1000d536:	test   esi,esi
1000d538:	mov    DWORD PTR [ebp-0x4],0x1
1000d53f:	je     0x1000d552
1000d541:	push   DWORD PTR [ebp+0x10]
1000d544:	mov    ebx,DWORD PTR [ebp+0x14]
1000d547:	push   DWORD PTR [ebp+0xc]
1000d54a:	push   DWORD PTR [ebp+0x8]
1000d54d:	call   0x1000d773
1000d552:	mov    eax,esi
1000d554:	call   0x10059bfd
1000d559:	ret    0x10
1000d55c:	push   DWORD PTR [ebp-0x14]
1000d55f:	call   0x10042f82
1000d564:	pop    ecx
1000d565:	push   0x0
1000d567:	push   0x0
1000d569:	call   0x10047aa4
1000d56e:	int3   
1000d56f:	push   0x24
1000d571:	mov    eax,0x1006050e
1000d576:	call   0x10059b58
1000d57b:	mov    ebx,ecx
1000d57d:	push   0x6
1000d57f:	pop    ecx
1000d580:	mov    esi,edx
1000d582:	lea    edi,[ebp-0x30]
1000d585:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
1000d587:	mov    ecx,DWORD PTR [ebx+0x4]
1000d58a:	test   ecx,ecx
1000d58c:	jne    0x1000d592
1000d58e:	xor    edi,edi
1000d590:	jmp    0x1000d59f
1000d592:	mov    eax,DWORD PTR [ebx+0xc]
1000d595:	sub    eax,ecx
1000d597:	push   0x18
1000d599:	cdq    
1000d59a:	pop    ecx
1000d59b:	idiv   ecx
1000d59d:	mov    edi,eax
1000d59f:	mov    eax,ebx
1000d5a1:	call   0x1000cec7
1000d5a6:	mov    esi,0xaaaaaaa
1000d5ab:	mov    ecx,esi
1000d5ad:	sub    ecx,eax
1000d5af:	cmp    ecx,0x1
1000d5b2:	jae    0x1000d5b9
1000d5b4:	call   0x1000fb8b
1000d5b9:	mov    eax,ebx
1000d5bb:	call   0x1000cec7
1000d5c0:	inc    eax
1000d5c1:	cmp    edi,eax
1000d5c3:	jae    0x1000d674
1000d5c9:	mov    eax,edi
1000d5cb:	shr    eax,1
1000d5cd:	sub    esi,eax
1000d5cf:	cmp    esi,edi
1000d5d1:	jae    0x1000d5d7
1000d5d3:	xor    edi,edi
1000d5d5:	jmp    0x1000d5d9
1000d5d7:	add    edi,eax
1000d5d9:	mov    eax,ebx
1000d5db:	call   0x1000cec7
1000d5e0:	inc    eax
1000d5e1:	cmp    edi,eax
1000d5e3:	jae    0x1000d5ef
1000d5e5:	mov    eax,ebx
1000d5e7:	call   0x1000cec7
1000d5ec:	mov    edi,eax
1000d5ee:	inc    edi
1000d5ef:	mov    ecx,edi
1000d5f1:	call   0x1000d729
1000d5f6:	and    DWORD PTR [ebp-0x4],0x0
1000d5fa:	mov    edx,DWORD PTR [ebx+0x4]
1000d5fd:	push   eax
1000d5fe:	push   DWORD PTR [ebp+0xc]
1000d601:	mov    DWORD PTR [ebp-0x14],eax
1000d604:	call   0x1000d85f
1000d609:	lea    ecx,[ebp-0x30]
1000d60c:	push   ecx
1000d60d:	push   0x1
1000d60f:	push   eax
1000d610:	call   0x1000d42a
1000d615:	mov    edx,DWORD PTR [ebp+0xc]
1000d618:	push   eax
1000d619:	push   DWORD PTR [ebx+0x8]
1000d61c:	call   0x1000d85f
1000d621:	mov    eax,ebx
1000d623:	call   0x1000cec7
1000d628:	mov    esi,eax
1000d62a:	mov    eax,DWORD PTR [ebx+0x4]
1000d62d:	inc    esi
1000d62e:	test   eax,eax
1000d630:	je     0x1000d647
1000d632:	mov    ecx,DWORD PTR [ebx+0x8]
1000d635:	jmp    0x1000d63a
1000d637:	add    eax,0x18
1000d63a:	cmp    eax,ecx
1000d63c:	jne    0x1000d637
1000d63e:	push   DWORD PTR [ebx+0x4]
1000d641:	call   0x10042f82
1000d646:	pop    ecx
1000d647:	mov    eax,DWORD PTR [ebp-0x14]
1000d64a:	imul   edi,edi,0x18
1000d64d:	imul   esi,esi,0x18
1000d650:	add    edi,eax
1000d652:	add    esi,eax
1000d654:	mov    DWORD PTR [ebx+0xc],edi
1000d657:	mov    DWORD PTR [ebx+0x8],esi
1000d65a:	mov    DWORD PTR [ebx+0x4],eax
1000d65d:	jmp    0x1000d721
1000d662:	push   DWORD PTR [ebp-0x14]
1000d665:	call   0x10042f82
1000d66a:	pop    ecx
1000d66b:	push   0x0
1000d66d:	push   0x0
1000d66f:	call   0x10047aa4
1000d674:	mov    ecx,DWORD PTR [ebx+0x8]
1000d677:	mov    edi,DWORD PTR [ebp+0xc]
1000d67a:	mov    eax,ecx
1000d67c:	sub    eax,edi
1000d67e:	push   0x18
1000d680:	cdq    
1000d681:	pop    esi
1000d682:	idiv   esi
1000d684:	cmp    eax,0x1
1000d687:	jae    0x1000d6d8
1000d689:	lea    eax,[edi+0x18]
1000d68c:	push   eax
1000d68d:	push   ecx
1000d68e:	mov    edx,edi
1000d690:	call   0x1000d85f
1000d695:	mov    DWORD PTR [ebp-0x4],0x2
1000d69c:	mov    ecx,DWORD PTR [ebx+0x8]
1000d69f:	lea    eax,[ebp-0x30]
1000d6a2:	push   eax
1000d6a3:	mov    eax,ecx
1000d6a5:	sub    eax,edi
1000d6a7:	cdq    
1000d6a8:	idiv   esi
1000d6aa:	xor    edx,edx
1000d6ac:	inc    edx
1000d6ad:	sub    edx,eax
1000d6af:	push   edx
1000d6b0:	push   ecx
1000d6b1:	call   0x1000d42a
1000d6b6:	add    DWORD PTR [ebx+0x8],esi
1000d6b9:	mov    ebx,DWORD PTR [ebx+0x8]
1000d6bc:	lea    eax,[ebx-0x18]
1000d6bf:	cmp    edi,eax
1000d6c1:	mov    edx,edi
1000d6c3:	je     0x1000d721
1000d6c5:	mov    edi,edx
1000d6c7:	push   0x6
1000d6c9:	add    edx,0x18
1000d6cc:	cmp    edx,eax
1000d6ce:	pop    ecx
1000d6cf:	lea    esi,[ebp-0x30]
1000d6d2:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
1000d6d4:	jne    0x1000d6c5
1000d6d6:	jmp    0x1000d721
1000d6d8:	lea    esi,[ecx-0x18]
1000d6db:	push   ecx
1000d6dc:	push   ecx
1000d6dd:	mov    edx,esi
1000d6df:	call   0x1000d85f
1000d6e4:	mov    DWORD PTR [ebx+0x8],eax
1000d6e7:	mov    eax,esi
1000d6e9:	cmp    edi,eax
1000d6eb:	je     0x1000d707
1000d6ed:	lea    edx,[eax+0x18]
1000d6f0:	sub    eax,0x18
1000d6f3:	sub    edx,0x18
1000d6f6:	cmp    eax,DWORD PTR [ebp+0xc]
1000d6f9:	push   0x6
1000d6fb:	pop    ecx
1000d6fc:	mov    esi,eax
1000d6fe:	mov    edi,edx
1000d700:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
1000d702:	jne    0x1000d6f0
1000d704:	mov    edi,DWORD PTR [ebp+0xc]
1000d707:	lea    eax,[edi+0x18]
1000d70a:	cmp    edi,eax
1000d70c:	mov    edx,edi
1000d70e:	je     0x1000d721
1000d710:	mov    edi,edx
1000d712:	push   0x6
1000d714:	add    edx,0x18
1000d717:	cmp    edx,eax
1000d719:	pop    ecx
1000d71a:	lea    esi,[ebp-0x30]
1000d71d:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
1000d71f:	jne    0x1000d710
1000d721:	call   0x10059bfd
1000d726:	ret    0x8
1000d729:	push   ebp
1000d72a:	mov    ebp,esp
1000d72c:	sub    esp,0x10
1000d72f:	test   ecx,ecx
1000d731:	ja     0x1000d741
1000d733:	xor    ecx,ecx
1000d735:	imul   ecx,ecx,0x18
1000d738:	push   ecx
1000d739:	call   0x1004358e
1000d73e:	pop    ecx
1000d73f:	leave  
1000d740:	ret    
1000d741:	or     eax,0xffffffff
1000d744:	xor    edx,edx
1000d746:	div    ecx
1000d748:	cmp    eax,0x18
1000d74b:	jae    0x1000d735
1000d74d:	and    DWORD PTR [ebp-0x4],0x0
1000d751:	lea    eax,[ebp-0x4]
1000d754:	push   eax
1000d755:	lea    ecx,[ebp-0x10]
1000d758:	call   0x10043002
1000d75d:	push   0x10074e20
1000d762:	lea    eax,[ebp-0x10]
1000d765:	push   eax
1000d766:	mov    DWORD PTR [ebp-0x10],0x100665c8
1000d76d:	call   0x10047aa4
1000d772:	int3   
1000d773:	push   0x0
1000d775:	mov    eax,0x1006214a
1000d77a:	call   0x10059b25
1000d77f:	mov    eax,DWORD PTR [ebp+0x8]
1000d782:	mov    DWORD PTR [esi],eax
1000d784:	mov    eax,DWORD PTR [ebp+0xc]
1000d787:	mov    DWORD PTR [esi+0x4],eax
1000d78a:	mov    eax,DWORD PTR [ebp+0x10]
1000d78d:	lea    edi,[esi+0xc]
1000d790:	push   ebx
1000d791:	mov    ecx,edi
1000d793:	mov    DWORD PTR [esi+0x8],eax
1000d796:	mov    DWORD PTR [ebp+0x8],edi
1000d799:	call   0x100011a2
1000d79e:	and    DWORD PTR [ebp-0x4],0x0
1000d7a2:	add    edi,0x1c
1000d7a5:	lea    ecx,[ebx+0x1c]
1000d7a8:	push   edi
1000d7a9:	call   0x1000ce21
1000d7ae:	mov    BYTE PTR [esi+0x38],0x0
1000d7b2:	mov    BYTE PTR [esi+0x39],0x0
1000d7b6:	mov    eax,esi
1000d7b8:	call   0x10059bfd
1000d7bd:	ret    0xc
1000d7c0:	push   ecx
1000d7c1:	push   ebp
1000d7c2:	mov    ebp,DWORD PTR [esp+0xc]
1000d7c6:	cmp    BYTE PTR [ebp+0x39],0x0
1000d7ca:	push   edi
1000d7cb:	mov    DWORD PTR [esp+0x8],ecx
1000d7cf:	mov    edi,ebp
1000d7d1:	jne    0x1000d80a
1000d7d3:	push   ebx
1000d7d4:	push   esi
1000d7d5:	push   DWORD PTR [edi+0x8]
1000d7d8:	mov    ecx,DWORD PTR [esp+0x14]
1000d7dc:	call   0x1000d7c0
1000d7e1:	mov    edi,DWORD PTR [edi]
1000d7e3:	lea    ebx,[ebp+0xc]
1000d7e6:	lea    esi,[ebx+0x1c]
1000d7e9:	call   0x10011ee7
1000d7ee:	push   0x0
1000d7f0:	push   0x1
1000d7f2:	mov    ecx,ebx
1000d7f4:	call   0x100012eb
1000d7f9:	push   ebp
1000d7fa:	call   0x10042f82
1000d7ff:	cmp    BYTE PTR [edi+0x39],0x0
1000d803:	pop    ecx
1000d804:	mov    ebp,edi
1000d806:	je     0x1000d7d5
1000d808:	pop    esi
1000d809:	pop    ebx
1000d80a:	pop    edi
1000d80b:	pop    ebp
1000d80c:	pop    ecx
1000d80d:	ret    0x4
1000d810:	push   0x8
1000d812:	mov    eax,0x10060f87
1000d817:	call   0x10059b25
1000d81c:	and    DWORD PTR [ebp-0x14],0x0
1000d820:	mov    DWORD PTR [ebp-0x10],edi
1000d823:	xor    esi,esi
1000d825:	lea    eax,[ebp+0x8]
1000d828:	inc    esi
1000d829:	push   eax
1000d82a:	mov    ecx,edi
1000d82c:	mov    DWORD PTR [ebp-0x4],esi
1000d82f:	call   0x100011a2
1000d834:	lea    eax,[edi+0x1c]
1000d837:	push   eax
1000d838:	lea    ecx,[ebp+0x24]
1000d83b:	mov    BYTE PTR [ebp-0x4],0x2
1000d83f:	call   0x1000ce21
1000d844:	push   0x0
1000d846:	push   esi
1000d847:	lea    ecx,[ebp+0x8]
1000d84a:	call   0x100012eb
1000d84f:	lea    esi,[ebp+0x24]
1000d852:	call   0x10011ee7
1000d857:	mov    eax,edi
1000d859:	call   0x10059bfd
1000d85e:	ret    
1000d85f:	push   ebp
1000d860:	mov    ebp,esp
1000d862:	push   ecx
1000d863:	push   edi
1000d864:	xor    eax,eax
1000d866:	lea    edi,[ebp-0x4]
1000d869:	stos   BYTE PTR es:[edi],al
1000d86a:	push   DWORD PTR [ebp-0x4]
1000d86d:	mov    eax,DWORD PTR [ebp+0xc]
1000d870:	push   DWORD PTR [ebp+0x8]
1000d873:	push   DWORD PTR [ebp+0x8]
1000d876:	call   0x1000d8af
1000d87b:	add    esp,0xc
1000d87e:	pop    edi
1000d87f:	leave  
1000d880:	ret    0x8
1000d883:	push   ebp
1000d884:	mov    ebp,esp
1000d886:	xor    eax,eax
1000d888:	cmp    DWORD PTR [ebp+0xc],eax
1000d88b:	jbe    0x1000d8ad
1000d88d:	push   esi
1000d88e:	push   edi
1000d88f:	cmp    DWORD PTR [ebp+0x8],eax
1000d892:	je     0x1000d89f
1000d894:	mov    esi,DWORD PTR [ebp+0x10]
1000d897:	mov    edi,DWORD PTR [ebp+0x8]
1000d89a:	push   0x6
1000d89c:	pop    ecx
1000d89d:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
1000d89f:	dec    DWORD PTR [ebp+0xc]
1000d8a2:	add    DWORD PTR [ebp+0x8],0x18
1000d8a6:	cmp    DWORD PTR [ebp+0xc],eax
1000d8a9:	ja     0x1000d88f
1000d8ab:	pop    edi
1000d8ac:	pop    esi
1000d8ad:	pop    ebp
1000d8ae:	ret    
1000d8af:	cmp    edx,DWORD PTR [esp+0x4]
1000d8b3:	je     0x1000d8d2
1000d8b5:	push   esi
1000d8b6:	push   edi
1000d8b7:	test   eax,eax
1000d8b9:	je     0x1000d8c4
1000d8bb:	push   0x6
1000d8bd:	pop    ecx
1000d8be:	mov    esi,edx
1000d8c0:	mov    edi,eax
1000d8c2:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
1000d8c4:	add    edx,0x18
1000d8c7:	add    eax,0x18
1000d8ca:	cmp    edx,DWORD PTR [esp+0xc]
1000d8ce:	jne    0x1000d8b7
1000d8d0:	pop    edi
1000d8d1:	pop    esi
1000d8d2:	ret    
1000d8d3:	push   0x4
1000d8d5:	mov    eax,0x1005f77f
1000d8da:	call   0x10059b25
1000d8df:	mov    esi,ecx
1000d8e1:	push   0xc
1000d8e3:	call   0x1004358e
1000d8e8:	pop    ecx
1000d8e9:	mov    DWORD PTR [ebp-0x10],eax
1000d8ec:	and    DWORD PTR [ebp-0x4],0x0
1000d8f0:	test   eax,eax
1000d8f2:	je     0x1000d913
1000d8f4:	and    DWORD PTR [eax+0x4],0x0
1000d8f8:	cmp    BYTE PTR [ebp+0x8],0x0
1000d8fc:	mov    DWORD PTR [eax+0x8],0x1
1000d903:	je     0x1000d90f
1000d905:	push   esi
1000d906:	mov    esi,eax
1000d908:	call   0x1000d97d
1000d90d:	jmp    0x1000d915
1000d90f:	mov    DWORD PTR [eax],esi
1000d911:	jmp    0x1000d915
1000d913:	xor    eax,eax
1000d915:	or     DWORD PTR [ebp-0x4],0xffffffff
1000d919:	test   eax,eax
1000d91b:	mov    DWORD PTR [edi],eax
1000d91d:	jne    0x1000d929
1000d91f:	push   0x8007000e
1000d924:	call   0x10050c80
1000d929:	mov    eax,edi
1000d92b:	call   0x10059bfd
1000d930:	ret    0x4
1000d933:	push   esi
1000d934:	mov    esi,DWORD PTR [eax]
1000d936:	xor    eax,eax
1000d938:	cmp    esi,eax
1000d93a:	je     0x1000d94e
1000d93c:	cmp    DWORD PTR [esi+0x4],eax
1000d93f:	jne    0x1000d94b
1000d941:	push   DWORD PTR [esi]
1000d943:	call   0x10050b20
1000d948:	mov    DWORD PTR [esi+0x4],eax
1000d94b:	mov    eax,DWORD PTR [esi+0x4]
1000d94e:	pop    esi
1000d94f:	ret    
1000d950:	push   edi
1000d951:	mov    edi,eax
1000d953:	mov    eax,DWORD PTR [edi]
1000d955:	test   eax,eax
1000d957:	je     0x1000d96f
1000d959:	cmp    DWORD PTR [eax+0x8],0x1
1000d95d:	jne    0x1000d96f
1000d95f:	push   esi
1000d960:	mov    esi,DWORD PTR [eax]
1000d962:	and    DWORD PTR [eax],0x0
1000d965:	call   0x100025b0
1000d96a:	mov    eax,esi
1000d96c:	pop    esi
1000d96d:	pop    edi
1000d96e:	ret    
1000d96f:	push   0x80004003
1000d974:	call   0x10050c80
1000d979:	xor    eax,eax
1000d97b:	pop    edi
1000d97c:	ret    
1000d97d:	cmp    DWORD PTR [esp+0x4],0x0
1000d982:	je     0x1000d9ab
1000d984:	push   DWORD PTR [esp+0x4]
1000d988:	call   DWORD PTR ds:0x100662a0
1000d98e:	push   eax
1000d98f:	push   DWORD PTR [esp+0x8]
1000d993:	call   DWORD PTR ds:0x100662a8
1000d999:	test   eax,eax
1000d99b:	mov    DWORD PTR [esi],eax
1000d99d:	jne    0x1000d9ae
1000d99f:	push   0x8007000e
1000d9a4:	call   0x10050c80
1000d9a9:	jmp    0x1000d9ae
1000d9ab:	and    DWORD PTR [esi],0x0
1000d9ae:	mov    eax,esi
1000d9b0:	ret    0x4
1000d9b3:	push   0x38
1000d9b5:	mov    eax,0x10062d70
1000d9ba:	call   0x10059b25
1000d9bf:	mov    esi,DWORD PTR [ebp+0x8]
1000d9c2:	xor    ebx,ebx
1000d9c4:	cmp    DWORD PTR [esi+0x8],ebx
1000d9c7:	jne    0x1000d9d3
1000d9c9:	mov    eax,0x80004005
1000d9ce:	jmp    0x1000da5c
1000d9d3:	mov    ecx,DWORD PTR [ebp+0xc]
1000d9d6:	push   0x1
1000d9d8:	lea    edi,[ebp+0xc]
1000d9db:	call   0x1000d8d3
1000d9e0:	mov    ecx,DWORD PTR [ebp+0x10]
1000d9e3:	push   0x1
1000d9e5:	lea    edi,[ebp+0x8]
1000d9e8:	mov    DWORD PTR [ebp-0x4],ebx
1000d9eb:	call   0x1000d8d3
1000d9f0:	mov    eax,edi
1000d9f2:	mov    BYTE PTR [ebp-0x4],0x1
1000d9f6:	call   0x1000d933
1000d9fb:	push   eax
1000d9fc:	lea    ecx,[ebp-0x44]
1000d9ff:	call   0x100011c8
1000da04:	lea    eax,[ebp+0xc]
1000da07:	mov    BYTE PTR [ebp-0x4],0x2
1000da0b:	call   0x1000d933
1000da10:	push   eax
1000da11:	lea    ecx,[ebp-0x28]
1000da14:	call   0x100011c8
1000da19:	push   ebx
1000da1a:	lea    eax,[ebp-0x28]
1000da1d:	mov    BYTE PTR [ebp-0x4],0x3
1000da21:	mov    edx,DWORD PTR [esi+0x8]
1000da24:	push   eax
1000da25:	lea    ecx,[ebp-0x44]
1000da28:	call   0x10008097
1000da2d:	mov    ecx,DWORD PTR [ebp+0x14]
1000da30:	neg    al
1000da32:	push   ebx
1000da33:	push   0x1
1000da35:	sbb    eax,eax
1000da37:	mov    WORD PTR [ecx],ax
1000da3a:	lea    ecx,[ebp-0x28]
1000da3d:	call   0x100012eb
1000da42:	push   ebx
1000da43:	push   0x1
1000da45:	lea    ecx,[ebp-0x44]
1000da48:	call   0x100012eb
1000da4d:	call   0x100025b0
1000da52:	lea    edi,[ebp+0xc]
1000da55:	call   0x100025b0
1000da5a:	xor    eax,eax
1000da5c:	call   0x10059bfd
1000da61:	ret    0x10
1000da64:	push   0x1c
1000da66:	mov    eax,0x1006206d
1000da6b:	call   0x10059b25
1000da70:	mov    esi,DWORD PTR [ebp+0x8]
1000da73:	cmp    DWORD PTR [esi+0x8],0x0
1000da77:	jne    0x1000da80
1000da79:	mov    eax,0x80004005
1000da7e:	jmp    0x1000dace
1000da80:	mov    ecx,DWORD PTR [ebp+0xc]
1000da83:	push   0x1
1000da85:	lea    edi,[ebp+0x8]
1000da88:	call   0x1000d8d3
1000da8d:	and    DWORD PTR [ebp-0x4],0x0
1000da91:	mov    eax,edi
1000da93:	call   0x1000d933
1000da98:	push   eax
1000da99:	lea    ecx,[ebp-0x28]
1000da9c:	call   0x100011c8
1000daa1:	lea    eax,[ebp-0x28]
1000daa4:	push   eax
1000daa5:	mov    BYTE PTR [ebp-0x4],0x1
1000daa9:	push   DWORD PTR [esi+0x8]
1000daac:	call   0x100083a0
1000dab1:	mov    ecx,DWORD PTR [ebp+0x10]
1000dab4:	neg    al
1000dab6:	push   0x0
1000dab8:	push   0x1
1000daba:	sbb    eax,eax
1000dabc:	mov    WORD PTR [ecx],ax
1000dabf:	lea    ecx,[ebp-0x28]
1000dac2:	call   0x100012eb
1000dac7:	call   0x100025b0
1000dacc:	xor    eax,eax
1000dace:	call   0x10059bfd
1000dad3:	ret    0xc
1000dad6:	mov    eax,DWORD PTR [esp+0x4]
1000dada:	push   edi
1000dadb:	mov    edi,DWORD PTR [eax+0x8]
1000dade:	test   edi,edi
1000dae0:	jne    0x1000dae9
1000dae2:	mov    eax,0x80004005
1000dae7:	jmp    0x1000daf0
1000dae9:	call   0x100084b3
1000daee:	xor    eax,eax
1000daf0:	pop    edi
1000daf1:	ret    0x4
1000daf4:	push   0x38
1000daf6:	mov    eax,0x10062d70
1000dafb:	call   0x10059b25
1000db00:	mov    esi,DWORD PTR [ebp+0x8]
1000db03:	cmp    DWORD PTR [esi+0x8],0x0
1000db07:	jne    0x1000db13
1000db09:	mov    eax,0x80004005
1000db0e:	jmp    0x1000db9e
1000db13:	mov    ecx,DWORD PTR [ebp+0xc]
1000db16:	push   0x1
1000db18:	lea    edi,[ebp+0xc]
1000db1b:	call   0x1000d8d3
1000db20:	mov    ecx,DWORD PTR [ebp+0x10]
1000db23:	and    DWORD PTR [ebp-0x4],0x0
1000db27:	push   0x1
1000db29:	lea    edi,[ebp+0x8]
1000db2c:	call   0x1000d8d3
1000db31:	mov    eax,edi
1000db33:	mov    BYTE PTR [ebp-0x4],0x1
1000db37:	call   0x1000d933
1000db3c:	push   eax
1000db3d:	lea    ecx,[ebp-0x44]
1000db40:	call   0x100011c8
1000db45:	lea    eax,[ebp+0xc]
1000db48:	mov    BYTE PTR [ebp-0x4],0x2
1000db4c:	call   0x1000d933
1000db51:	push   eax
1000db52:	lea    ecx,[ebp-0x28]
1000db55:	call   0x100011c8
1000db5a:	lea    eax,[ebp-0x28]
1000db5d:	mov    BYTE PTR [ebp-0x4],0x3
1000db61:	mov    edx,DWORD PTR [esi+0x8]
1000db64:	push   eax
1000db65:	lea    ecx,[ebp-0x44]
1000db68:	call   0x100084eb
1000db6d:	mov    ecx,DWORD PTR [ebp+0x14]
1000db70:	neg    al
1000db72:	push   0x0
1000db74:	push   0x1
1000db76:	sbb    eax,eax
1000db78:	mov    WORD PTR [ecx],ax
1000db7b:	lea    ecx,[ebp-0x28]
1000db7e:	call   0x100012eb
1000db83:	push   0x0
1000db85:	push   0x1
1000db87:	lea    ecx,[ebp-0x44]
1000db8a:	call   0x100012eb
1000db8f:	call   0x100025b0
1000db94:	lea    edi,[ebp+0xc]
1000db97:	call   0x100025b0
1000db9c:	xor    eax,eax
1000db9e:	call   0x10059bfd
1000dba3:	ret    0x10
1000dba6:	push   0x38
1000dba8:	mov    eax,0x10060f54
1000dbad:	call   0x10059b25
1000dbb2:	mov    esi,DWORD PTR [ebp+0x8]
1000dbb5:	xor    ebx,ebx
1000dbb7:	cmp    DWORD PTR [esi+0x8],ebx
1000dbba:	jne    0x1000dbc6
1000dbbc:	mov    eax,0x80004005
1000dbc1:	jmp    0x1000dc47
1000dbc6:	mov    ecx,DWORD PTR [ebp+0xc]
1000dbc9:	push   0x1
1000dbcb:	lea    edi,[ebp+0xc]
1000dbce:	call   0x1000d8d3
1000dbd3:	mov    eax,edi
1000dbd5:	mov    DWORD PTR [ebp-0x4],ebx
1000dbd8:	call   0x1000d933
1000dbdd:	push   eax
1000dbde:	lea    ecx,[ebp-0x28]
1000dbe1:	call   0x100011c8
1000dbe6:	push   ebx
1000dbe7:	lea    eax,[ebp-0x28]
1000dbea:	push   eax
1000dbeb:	lea    eax,[ebp-0x44]
1000dbee:	mov    BYTE PTR [ebp-0x4],0x1
1000dbf2:	push   eax
1000dbf3:	mov    eax,DWORD PTR [esi+0x8]
1000dbf6:	call   0x10008602
1000dbfb:	mov    BYTE PTR [ebp-0x4],0x2
1000dbff:	cmp    DWORD PTR [eax+0x18],0x10
1000dc03:	jb     0x1000dc0a
1000dc05:	mov    eax,DWORD PTR [eax+0x4]
1000dc08:	jmp    0x1000dc0d
1000dc0a:	add    eax,0x4
1000dc0d:	push   eax
1000dc0e:	lea    edi,[ebp+0x8]
1000dc11:	call   0x10002455
1000dc16:	push   ebx
1000dc17:	push   0x1
1000dc19:	lea    ecx,[ebp-0x44]
1000dc1c:	call   0x100012eb
1000dc21:	push   ebx
1000dc22:	push   0x1
1000dc24:	lea    ecx,[ebp-0x28]
1000dc27:	call   0x100012eb
1000dc2c:	mov    eax,edi
1000dc2e:	call   0x1000d950
1000dc33:	mov    ecx,DWORD PTR [ebp+0x10]
1000dc36:	mov    DWORD PTR [ecx],eax
1000dc38:	call   0x100025b0
1000dc3d:	lea    edi,[ebp+0xc]
1000dc40:	call   0x100025b0
1000dc45:	xor    eax,eax
1000dc47:	call   0x10059bfd
1000dc4c:	ret    0xc
1000dc4f:	push   esi
1000dc50:	mov    esi,eax
1000dc52:	call   0x1000dc80
1000dc57:	cmp    DWORD PTR [esi],0x0
1000dc5a:	je     0x1000dc7e
1000dc5c:	push   edi
1000dc5d:	mov    edi,DWORD PTR [esi]
1000dc5f:	test   edi,edi
1000dc61:	mov    eax,DWORD PTR [edi+0x4]
1000dc64:	mov    DWORD PTR [esi],eax
1000dc66:	je     0x1000dc78
1000dc68:	push   DWORD PTR [edi+0x8]
1000dc6b:	call   0x10042f82
1000dc70:	push   edi
1000dc71:	call   0x10042f82
1000dc76:	pop    ecx
1000dc77:	pop    ecx
1000dc78:	cmp    DWORD PTR [esi],0x0
1000dc7b:	jne    0x1000dc5d
1000dc7d:	pop    edi
1000dc7e:	pop    esi
1000dc7f:	ret    
1000dc80:	push   0x8
1000dc82:	mov    eax,0x10060f21
1000dc87:	call   0x10059b25
1000dc8c:	xor    edi,edi
1000dc8e:	cmp    DWORD PTR [esi+0x14],edi
1000dc91:	je     0x1000dcd7
1000dc93:	lea    eax,[ebp-0x14]
1000dc96:	push   eax
1000dc97:	mov    ebx,esi
1000dc99:	call   0x1000ddf7
1000dc9e:	mov    ecx,DWORD PTR [eax]
1000dca0:	mov    ebx,ecx
1000dca2:	mov    DWORD PTR [eax],edi
1000dca4:	mov    DWORD PTR [ebp-0x10],ebx
1000dca7:	mov    DWORD PTR [ebp-0x4],edi
1000dcaa:	cmp    DWORD PTR [ebp-0x14],edi
1000dcad:	je     0x1000dcb9
1000dcaf:	mov    edi,DWORD PTR [ebp-0x14]
1000dcb2:	call   0x10009f5d
1000dcb7:	xor    edi,edi
1000dcb9:	cmp    DWORD PTR [ebx+0x18],edi
1000dcbc:	jbe    0x1000dcca
1000dcbe:	mov    ecx,DWORD PTR [esi+0x14]
1000dcc1:	mov    eax,DWORD PTR [ecx]
1000dcc3:	push   ebx
1000dcc4:	mov    DWORD PTR [ebp-0x10],edi
1000dcc7:	call   DWORD PTR [eax+0x4]
1000dcca:	cmp    DWORD PTR [ebp-0x10],edi
1000dccd:	je     0x1000dcd7
1000dccf:	mov    edi,DWORD PTR [ebp-0x10]
1000dcd2:	call   0x10009f5d
1000dcd7:	call   0x10059bfd
1000dcdc:	ret    
1000dcdd:	push   ebp
1000dcde:	lea    ebp,[esp-0x10004]
1000dce5:	mov    eax,0x10004
1000dcea:	call   0x10049ed0
1000dcef:	push   0xffffffff
1000dcf1:	push   0x10062035
1000dcf6:	mov    eax,fs:0x0
1000dcfc:	push   eax
1000dcfd:	push   ecx
1000dcfe:	push   ecx
1000dcff:	mov    eax,ds:0x1007e030
1000dd04:	xor    eax,ebp
1000dd06:	mov    DWORD PTR [ebp+0x10000],eax
1000dd0c:	push   ebx
1000dd0d:	push   esi
1000dd0e:	push   edi
1000dd0f:	push   eax
1000dd10:	lea    eax,[ebp-0xc]
1000dd13:	mov    fs:0x0,eax
1000dd19:	mov    esi,ecx
1000dd1b:	call   0x1000dc80
1000dd20:	mov    ecx,DWORD PTR [esi+0x18]
1000dd23:	lea    edx,[ebp-0x10]
1000dd26:	push   edx
1000dd27:	xor    ebx,ebx
1000dd29:	push   0x10000
1000dd2e:	lea    edx,[ebp+0x0]
1000dd31:	mov    DWORD PTR [ebp-0x10],ebx
1000dd34:	mov    eax,DWORD PTR [ecx]
1000dd36:	push   edx
1000dd37:	call   DWORD PTR [eax+0x4]
1000dd3a:	test   al,al
1000dd3c:	jne    0x1000dd41
1000dd3e:	mov    DWORD PTR [ebp-0x10],ebx
1000dd41:	cmp    DWORD PTR [ebp-0x10],ebx
1000dd44:	jne    0x1000dd4c
1000dd46:	mov    BYTE PTR [esi+0x10],0x1
1000dd4a:	jmp    0x1000ddaf
1000dd4c:	push   0xc
1000dd4e:	call   0x1004358e
1000dd53:	mov    edi,eax
1000dd55:	pop    ecx
1000dd56:	mov    DWORD PTR [ebp-0x14],edi
1000dd59:	cmp    edi,ebx
1000dd5b:	mov    DWORD PTR [ebp-0x4],ebx
1000dd5e:	je     0x1000dd82
1000dd60:	mov    eax,DWORD PTR [ebp-0x10]
1000dd63:	push   eax
1000dd64:	mov    DWORD PTR [edi],eax
1000dd66:	mov    DWORD PTR [edi+0x4],ebx
1000dd69:	call   0x10043811
1000dd6e:	push   DWORD PTR [edi]
1000dd70:	lea    ecx,[ebp+0x0]
1000dd73:	push   ecx
1000dd74:	push   eax
1000dd75:	mov    DWORD PTR [edi+0x8],eax
1000dd78:	call   0x10045270
1000dd7d:	add    esp,0x10
1000dd80:	jmp    0x1000dd84
1000dd82:	xor    edi,edi
1000dd84:	mov    eax,DWORD PTR [esi]
1000dd86:	cmp    eax,ebx
1000dd88:	jne    0x1000dd94
1000dd8a:	mov    DWORD PTR [esi],edi
1000dd8c:	mov    DWORD PTR [esi+0x4],edi
1000dd8f:	jmp    0x1000dd9c
1000dd91:	mov    eax,DWORD PTR [eax+0x4]
1000dd94:	cmp    DWORD PTR [eax+0x4],ebx
1000dd97:	jne    0x1000dd91
1000dd99:	mov    DWORD PTR [eax+0x4],edi
1000dd9c:	mov    eax,DWORD PTR [esi+0x4]
1000dd9f:	mov    ecx,DWORD PTR [esi+0x8]
1000dda2:	cmp    ecx,DWORD PTR [eax]
1000dda4:	jne    0x1000ddaf
1000dda6:	mov    eax,DWORD PTR [eax+0x4]
1000dda9:	mov    DWORD PTR [esi+0x4],eax
1000ddac:	mov    DWORD PTR [esi+0x8],ebx
1000ddaf:	mov    ecx,DWORD PTR [ebp-0xc]
1000ddb2:	mov    DWORD PTR fs:0x0,ecx
1000ddb9:	pop    ecx
1000ddba:	pop    edi
1000ddbb:	pop    esi
1000ddbc:	pop    ebx
1000ddbd:	mov    ecx,DWORD PTR [ebp+0x10000]
1000ddc3:	xor    ecx,ebp
1000ddc5:	call   0x10042f87
1000ddca:	add    ebp,0x10004
1000ddd0:	leave  
1000ddd1:	ret    
1000ddd2:	cmp    BYTE PTR [esi+0x10],0x0
1000ddd6:	je     0x1000dddb
1000ddd8:	mov    al,0x1
1000ddda:	ret    
1000dddb:	mov    eax,DWORD PTR [esi+0x4]
1000ddde:	test   eax,eax
1000dde0:	je     0x1000ddec
1000dde2:	mov    ecx,DWORD PTR [esi+0x8]
1000dde5:	cmp    ecx,DWORD PTR [eax]
1000dde7:	jae    0x1000ddec
1000dde9:	xor    al,al
1000ddeb:	ret    
1000ddec:	mov    ecx,esi
1000ddee:	call   0x1000dcdd
1000ddf3:	mov    al,BYTE PTR [esi+0x10]
1000ddf6:	ret    
1000ddf7:	push   0x8
1000ddf9:	mov    eax,0x10060efe
1000ddfe:	call   0x10059b25
1000de03:	xor    esi,esi
1000de05:	mov    DWORD PTR [ebp-0x4],esi
1000de08:	push   0x24
1000de0a:	mov    DWORD PTR [ebp-0x10],esi
1000de0d:	call   0x1004358e
1000de12:	pop    ecx
1000de13:	mov    DWORD PTR [ebp-0x14],eax
1000de16:	xor    edi,edi
1000de18:	inc    edi
1000de19:	cmp    eax,esi
1000de1b:	mov    DWORD PTR [ebp-0x4],edi
1000de1e:	je     0x1000de2a
1000de20:	push   eax
1000de21:	call   0x100077cc
1000de26:	mov    ecx,eax
1000de28:	jmp    0x1000de2c
1000de2a:	xor    ecx,ecx
1000de2c:	mov    eax,DWORD PTR [ebp+0x8]
1000de2f:	mov    DWORD PTR [eax],ecx
1000de31:	mov    DWORD PTR [ebp-0x4],esi
1000de34:	mov    eax,DWORD PTR [ebx+0xc]
1000de37:	mov    esi,ecx
1000de39:	mov    DWORD PTR [ebp-0x10],edi
1000de3c:	call   0x100079f1
1000de41:	jmp    0x1000de70
1000de43:	mov    ecx,DWORD PTR [ebx]
1000de45:	mov    edx,DWORD PTR [ecx+0x8]
1000de48:	mov    eax,DWORD PTR [ebp+0x8]
1000de4b:	mov    eax,DWORD PTR [eax]
1000de4d:	mov    edi,DWORD PTR [ecx]
1000de4f:	push   edx
1000de50:	call   0x10007814
1000de55:	mov    esi,DWORD PTR [ebx]
1000de57:	test   esi,esi
1000de59:	mov    eax,DWORD PTR [esi+0x4]
1000de5c:	mov    DWORD PTR [ebx],eax
1000de5e:	je     0x1000de70
1000de60:	push   DWORD PTR [esi+0x8]
1000de63:	call   0x10042f82
1000de68:	push   esi
1000de69:	call   0x10042f82
1000de6e:	pop    ecx
1000de6f:	pop    ecx
1000de70:	mov    eax,DWORD PTR [ebx]
1000de72:	cmp    eax,DWORD PTR [ebx+0x4]
1000de75:	jne    0x1000de43
1000de77:	test   eax,eax
1000de79:	je     0x1000df0b
1000de7f:	mov    edi,DWORD PTR [ebx+0x8]
1000de82:	test   edi,edi
1000de84:	je     0x1000df0b
1000de8a:	mov    eax,DWORD PTR [eax+0x8]
1000de8d:	mov    ecx,DWORD PTR [ebp+0x8]
1000de90:	mov    ecx,DWORD PTR [ecx]
1000de92:	push   eax
1000de93:	mov    eax,ecx
1000de95:	xor    esi,esi
1000de97:	call   0x10007814
1000de9c:	mov    eax,DWORD PTR [ebx]
1000de9e:	mov    ecx,DWORD PTR [ebx+0x8]
1000dea1:	cmp    ecx,DWORD PTR [eax]
1000dea3:	jae    0x1000def3
1000dea5:	push   0xc
1000dea7:	call   0x1004358e
1000deac:	mov    esi,eax
1000deae:	pop    ecx
1000deaf:	mov    DWORD PTR [ebp-0x14],esi
1000deb2:	test   esi,esi
1000deb4:	mov    DWORD PTR [ebp-0x4],0x2
1000debb:	je     0x1000dee9
1000debd:	mov    eax,DWORD PTR [ebx]
1000debf:	mov    edx,DWORD PTR [eax+0x8]
1000dec2:	mov    ecx,DWORD PTR [ebx+0x8]
1000dec5:	mov    eax,DWORD PTR [eax]
1000dec7:	and    DWORD PTR [esi+0x4],0x0
1000decb:	sub    eax,ecx
1000decd:	push   eax
1000dece:	lea    edi,[ecx+edx*1]
1000ded1:	mov    DWORD PTR [esi],eax
1000ded3:	call   0x10043811
1000ded8:	push   DWORD PTR [esi]
1000deda:	mov    DWORD PTR [esi+0x8],eax
1000dedd:	push   edi
1000dede:	push   eax
1000dedf:	call   0x10045270
1000dee4:	add    esp,0x10
1000dee7:	jmp    0x1000deeb
1000dee9:	xor    esi,esi
1000deeb:	mov    eax,DWORD PTR [ebx]
1000deed:	mov    eax,DWORD PTR [eax+0x4]
1000def0:	mov    DWORD PTR [esi+0x4],eax
1000def3:	mov    edi,DWORD PTR [ebx]
1000def5:	test   edi,edi
1000def7:	mov    DWORD PTR [ebx],esi
1000def9:	je     0x1000df0b
1000defb:	push   DWORD PTR [edi+0x8]
1000defe:	call   0x10042f82
1000df03:	push   edi
1000df04:	call   0x10042f82
1000df09:	pop    ecx
1000df0a:	pop    ecx
1000df0b:	mov    eax,DWORD PTR [ebx]
1000df0d:	and    DWORD PTR [ebx+0x8],0x0
1000df11:	and    DWORD PTR [ebx+0xc],0x0
1000df15:	mov    DWORD PTR [ebx+0x4],eax
1000df18:	mov    eax,DWORD PTR [ebp+0x8]
1000df1b:	call   0x10059bfd
1000df20:	ret    0x4
1000df23:	push   esi
1000df24:	mov    esi,eax
1000df26:	call   0x1000ddd2
1000df2b:	test   al,al
1000df2d:	jne    0x1000df3d
1000df2f:	mov    eax,DWORD PTR [esi+0x4]
1000df32:	mov    ecx,DWORD PTR [esi+0x8]
1000df35:	mov    eax,DWORD PTR [eax+0x8]
1000df38:	mov    al,BYTE PTR [eax+ecx*1]
1000df3b:	pop    esi
1000df3c:	ret    
1000df3d:	xor    al,al
1000df3f:	pop    esi
1000df40:	ret    
1000df41:	push   esi
1000df42:	mov    esi,eax
1000df44:	call   0x1000ddd2
1000df49:	test   al,al
1000df4b:	je     0x1000df51
1000df4d:	xor    al,al
1000df4f:	pop    esi
1000df50:	ret    
1000df51:	mov    eax,DWORD PTR [esi+0x4]
1000df54:	test   eax,eax
1000df56:	je     0x1000df76
1000df58:	mov    ecx,DWORD PTR [esi+0x8]
1000df5b:	inc    ecx
1000df5c:	cmp    ecx,DWORD PTR [eax]
1000df5e:	jb     0x1000df70
1000df60:	mov    eax,DWORD PTR [eax+0x4]
1000df63:	test   eax,eax
1000df65:	je     0x1000df70
1000df67:	and    DWORD PTR [esi+0x8],0x0
1000df6b:	mov    DWORD PTR [esi+0x4],eax
1000df6e:	jmp    0x1000df73
1000df70:	mov    DWORD PTR [esi+0x8],ecx
1000df73:	inc    DWORD PTR [esi+0xc]
1000df76:	mov    al,0x1
1000df78:	pop    esi
1000df79:	ret    
1000df7a:	push   esi
1000df7b:	mov    esi,eax
1000df7d:	call   0x1000ddd2
1000df82:	test   al,al
1000df84:	je     0x1000df8a
1000df86:	xor    eax,eax
1000df88:	jmp    0x1000dfd8
1000df8a:	mov    eax,DWORD PTR [esi+0x4]
1000df8d:	mov    ecx,DWORD PTR [esi+0x8]
1000df90:	push   edi
1000df91:	mov    edi,DWORD PTR [eax]
1000df93:	sub    edi,ecx
1000df95:	cmp    edi,DWORD PTR [esp+0x10]
1000df99:	jbe    0x1000df9f
1000df9b:	mov    edi,DWORD PTR [esp+0x10]
1000df9f:	mov    eax,DWORD PTR [eax+0x8]
1000dfa2:	push   edi
1000dfa3:	add    eax,ecx
1000dfa5:	push   eax
1000dfa6:	push   DWORD PTR [esp+0x14]
1000dfaa:	call   0x10045270
1000dfaf:	mov    eax,DWORD PTR [esi+0x8]
1000dfb2:	lea    ecx,[edi+eax*1]
1000dfb5:	mov    eax,DWORD PTR [esi+0x4]
1000dfb8:	add    esp,0xc
1000dfbb:	cmp    ecx,DWORD PTR [eax]
1000dfbd:	jb     0x1000dfcf
1000dfbf:	mov    eax,DWORD PTR [eax+0x4]
1000dfc2:	test   eax,eax
1000dfc4:	je     0x1000dfcf
1000dfc6:	and    DWORD PTR [esi+0x8],0x0
1000dfca:	mov    DWORD PTR [esi+0x4],eax
1000dfcd:	jmp    0x1000dfd2
1000dfcf:	mov    DWORD PTR [esi+0x8],ecx
1000dfd2:	add    DWORD PTR [esi+0xc],edi
1000dfd5:	mov    eax,edi
1000dfd7:	pop    edi
1000dfd8:	pop    esi
1000dfd9:	ret    0x8
1000dfdc:	push   esi
1000dfdd:	mov    esi,eax
1000dfdf:	call   0x1000ddd2
1000dfe4:	test   al,al
1000dfe6:	je     0x1000dfec
1000dfe8:	xor    al,al
1000dfea:	pop    esi
1000dfeb:	ret    
1000dfec:	mov    eax,DWORD PTR [esi+0x4]
1000dfef:	xor    ecx,ecx
1000dff1:	jmp    0x1000e004
1000dff3:	mov    edx,DWORD PTR [eax]
1000dff5:	sub    edx,DWORD PTR [esi+0x8]
1000dff8:	add    DWORD PTR [esi+0xc],edx
1000dffb:	mov    eax,DWORD PTR [eax+0x4]
1000dffe:	mov    DWORD PTR [esi+0x4],eax
1000e001:	mov    DWORD PTR [esi+0x8],ecx
1000e004:	cmp    DWORD PTR [eax+0x4],ecx
1000e007:	mov    eax,DWORD PTR [esi+0x4]
1000e00a:	jne    0x1000dff3
1000e00c:	mov    ecx,DWORD PTR [eax]
1000e00e:	sub    ecx,DWORD PTR [esi+0x8]
1000e011:	add    DWORD PTR [esi+0xc],ecx
1000e014:	mov    eax,DWORD PTR [eax]
1000e016:	mov    DWORD PTR [esi+0x8],eax
1000e019:	mov    al,0x1
1000e01b:	pop    esi
1000e01c:	ret    
1000e01d:	push   0x10
1000e01f:	mov    eax,0x10064770
1000e024:	call   0x10059b25
1000e029:	mov    ebx,ecx
1000e02b:	xor    edi,edi
1000e02d:	mov    DWORD PTR [ebp-0x10],edi
1000e030:	mov    DWORD PTR [ebp-0x4],edi
1000e033:	mov    DWORD PTR [ebp-0x14],edi
1000e036:	mov    DWORD PTR [ebp-0x18],edi
1000e039:	lea    eax,[ebp-0x18]
1000e03c:	push   eax
1000e03d:	lea    eax,[ebp-0x14]
1000e040:	push   eax
1000e041:	lea    eax,[ebp-0x10]
1000e044:	push   eax
1000e045:	mov    BYTE PTR [ebp-0x4],0x2
1000e049:	call   0x1000e0e6
1000e04e:	cmp    eax,edi
1000e050:	je     0x1000e076
1000e052:	mov    esi,eax
1000e054:	lea    eax,[ebp-0x18]
1000e057:	call   0x10009d00
1000e05c:	lea    eax,[ebp-0x14]
1000e05f:	call   0x10009d00
1000e064:	lea    eax,[ebp-0x10]
1000e067:	call   0x10009d00
1000e06c:	mov    eax,esi
1000e06e:	call   0x10059bfd
1000e073:	ret    0x4
1000e076:	mov    esi,DWORD PTR [ebx]
1000e078:	call   0x1000ddd2
1000e07d:	test   al,al
1000e07f:	je     0x1000e086
1000e081:	xor    esi,esi
1000e083:	inc    esi
1000e084:	jmp    0x1000e054
1000e086:	mov    esi,DWORD PTR [ebp+0x8]
1000e089:	lea    eax,[esi+0x18]
1000e08c:	push   eax
1000e08d:	mov    ecx,ebx
1000e08f:	call   0x1000ec68
1000e094:	cmp    eax,edi
1000e096:	jne    0x1000e052
1000e098:	push   edi
1000e099:	sub    esp,0x1c
1000e09c:	mov    ecx,esp
1000e09e:	mov    DWORD PTR [ebp+0x8],esp
1000e0a1:	push   0x1006d3b0
1000e0a6:	call   0x100011c8
1000e0ab:	call   0x1000ee17
1000e0b0:	cmp    eax,edi
1000e0b2:	jne    0x1000e052
1000e0b4:	mov    ebx,DWORD PTR [ebp-0x10]
1000e0b7:	mov    DWORD PTR [ebp-0x10],edi
1000e0ba:	mov    edi,esi
1000e0bc:	call   0x10009d24
1000e0c1:	mov    ebx,DWORD PTR [ebp-0x14]
1000e0c4:	and    DWORD PTR [ebp-0x14],0x0
1000e0c8:	lea    edi,[esi+0x4]
1000e0cb:	call   0x10009d24
1000e0d0:	mov    ebx,DWORD PTR [ebp-0x18]
1000e0d3:	and    DWORD PTR [ebp-0x18],0x0
1000e0d7:	lea    edi,[esi+0x8]
1000e0da:	call   0x10009d24
1000e0df:	xor    esi,esi
1000e0e1:	jmp    0x1000e054
1000e0e6:	push   0x50
1000e0e8:	mov    eax,0x10064733
1000e0ed:	call   0x10059b8e
1000e0f2:	mov    eax,DWORD PTR [ebp+0x8]
1000e0f5:	mov    DWORD PTR [ebp-0x58],eax
1000e0f8:	mov    eax,DWORD PTR [ebp+0xc]
1000e0fb:	mov    edi,ecx
1000e0fd:	mov    DWORD PTR [ebp-0x5c],eax
1000e100:	mov    eax,DWORD PTR [ebp+0x10]
1000e103:	push   0x0
1000e105:	lea    ecx,[ebp-0x2c]
1000e108:	mov    DWORD PTR [ebp-0x4c],edi
1000e10b:	mov    DWORD PTR [ebp-0x54],eax
1000e10e:	mov    DWORD PTR [ebp-0x14],0xf
1000e115:	call   0x10001417
1000e11a:	and    DWORD PTR [ebp-0x4],0x0
1000e11e:	mov    eax,DWORD PTR [edi]
1000e120:	mov    ebx,DWORD PTR [eax+0xc]
1000e123:	push   0x1
1000e125:	lea    eax,[ebp-0x2c]
1000e128:	push   eax
1000e129:	call   0x1000f13b
1000e12e:	test   eax,eax
1000e130:	mov    ecx,DWORD PTR [edi]
1000e132:	mov    edi,DWORD PTR [ecx+0xc]
1000e135:	je     0x1000e14c
1000e137:	mov    esi,eax
1000e139:	push   0x0
1000e13b:	push   0x1
1000e13d:	lea    ecx,[ebp-0x2c]
1000e140:	call   0x100012eb
1000e145:	mov    eax,esi
1000e147:	jmp    0x1000e2c6
1000e14c:	push   0x553b291a
1000e151:	push   0x1006d91c
1000e156:	call   0x100042bd
1000e15b:	push   0x3264d1c4
1000e160:	push   eax
1000e161:	call   0x100042bd
1000e166:	push   eax
1000e167:	push   0x3
1000e169:	push   0x1006d528
1000e16e:	call   0x100042cf
1000e173:	add    esp,0x1c
1000e176:	push   eax
1000e177:	lea    esi,[ebp-0x2c]
1000e17a:	call   0x10006639
1000e17f:	test   al,al
1000e181:	pop    ecx
1000e182:	jne    0x1000e1c1
1000e184:	push   0x756c2896
1000e189:	push   0x1006d958
1000e18e:	call   0x100042bd
1000e193:	push   0x696618
1000e198:	push   eax
1000e199:	call   0x100042bd
1000e19e:	push   eax
1000e19f:	push   0x4
1000e1a1:	push   0x1006d990
1000e1a6:	call   0x100042cf
1000e1ab:	add    esp,0x1c
1000e1ae:	push   eax
1000e1af:	call   0x10006639
1000e1b4:	test   al,al
1000e1b6:	pop    ecx
1000e1b7:	jne    0x1000e1c1
1000e1b9:	xor    esi,esi
1000e1bb:	inc    esi
1000e1bc:	jmp    0x1000e139
1000e1c1:	push   0x24
1000e1c3:	call   0x1004358e
1000e1c8:	pop    ecx
1000e1c9:	mov    DWORD PTR [ebp-0x50],eax
1000e1cc:	test   eax,eax
1000e1ce:	mov    BYTE PTR [ebp-0x4],0x1
1000e1d2:	je     0x1000e1e4
1000e1d4:	sub    edi,ebx
1000e1d6:	push   edi
1000e1d7:	push   ebx
1000e1d8:	lea    ecx,[ebp-0x2c]
1000e1db:	push   ecx
1000e1dc:	push   eax
1000e1dd:	call   0x10007a3d
1000e1e2:	jmp    0x1000e1e6
1000e1e4:	xor    eax,eax
1000e1e6:	mov    edi,DWORD PTR [ebp-0x58]
1000e1e9:	mov    ebx,eax
1000e1eb:	call   0x10009d24
1000e1f0:	or     DWORD PTR [ebp-0x4],0xffffffff
1000e1f4:	push   0x0
1000e1f6:	push   0x1
1000e1f8:	lea    ecx,[ebp-0x2c]
1000e1fb:	call   0x100012eb
1000e200:	mov    esi,DWORD PTR [ebp-0x4c]
1000e203:	mov    edi,esi
1000e205:	call   0x1000eea6
1000e20a:	test   eax,eax
1000e20c:	jne    0x1000e2c6
1000e212:	push   eax
1000e213:	lea    ecx,[ebp-0x48]
1000e216:	mov    DWORD PTR [ebp-0x30],0xf
1000e21d:	call   0x10001417
1000e222:	mov    DWORD PTR [ebp-0x4],0x2
1000e229:	mov    eax,DWORD PTR [esi]
1000e22b:	mov    ebx,DWORD PTR [eax+0xc]
1000e22e:	lea    eax,[ebp-0x48]
1000e231:	push   eax
1000e232:	call   0x1000f206
1000e237:	test   eax,eax
1000e239:	mov    ecx,DWORD PTR [esi]
1000e23b:	mov    edi,DWORD PTR [ecx+0xc]
1000e23e:	mov    DWORD PTR [ebp-0x4c],eax
1000e241:	je     0x1000e254
1000e243:	push   0x0
1000e245:	push   0x1
1000e247:	lea    ecx,[ebp-0x48]
1000e24a:	call   0x100012eb
1000e24f:	mov    eax,DWORD PTR [ebp-0x4c]
1000e252:	jmp    0x1000e2c6
1000e254:	push   0x24
1000e256:	call   0x1004358e
1000e25b:	pop    ecx
1000e25c:	mov    DWORD PTR [ebp-0x50],eax
1000e25f:	test   eax,eax
1000e261:	mov    BYTE PTR [ebp-0x4],0x3
1000e265:	je     0x1000e277
1000e267:	sub    edi,ebx
1000e269:	push   edi
1000e26a:	push   ebx
1000e26b:	lea    ecx,[ebp-0x48]
1000e26e:	push   ecx
1000e26f:	push   eax
1000e270:	call   0x10007a3d
1000e275:	jmp    0x1000e279
1000e277:	xor    eax,eax
1000e279:	mov    edi,DWORD PTR [ebp-0x5c]
1000e27c:	mov    ebx,eax
1000e27e:	call   0x10009d24
1000e283:	or     DWORD PTR [ebp-0x4],0xffffffff
1000e287:	push   0x0
1000e289:	push   0x1
1000e28b:	lea    ecx,[ebp-0x48]
1000e28e:	call   0x100012eb
1000e293:	mov    edi,esi
1000e295:	call   0x1000eea6
1000e29a:	test   eax,eax
1000e29c:	jne    0x1000e2c6
1000e29e:	push   DWORD PTR [ebp-0x54]
1000e2a1:	mov    ecx,esi
1000e2a3:	call   0x1000eed4
1000e2a8:	test   eax,eax
1000e2aa:	jne    0x1000e2c6
1000e2ac:	push   eax
1000e2ad:	sub    esp,0x1c
1000e2b0:	mov    ecx,esp
1000e2b2:	mov    DWORD PTR [ebp-0x50],esp
1000e2b5:	push   0x1006d3b0
1000e2ba:	call   0x100011c8
1000e2bf:	mov    ebx,esi
1000e2c1:	call   0x1000ee17
1000e2c6:	call   0x10059c11
1000e2cb:	ret    0xc
1000e2ce:	push   0x80
1000e2d3:	mov    eax,0x10063c60
1000e2d8:	call   0x10059b8e
1000e2dd:	mov    eax,DWORD PTR [ebp+0x8]
1000e2e0:	push   0x1006d998
1000e2e5:	push   0xe
1000e2e7:	mov    esi,0x1006d9c4
1000e2ec:	xor    ebx,ebx
1000e2ee:	push   esi
1000e2ef:	mov    DWORD PTR [ebp-0x38],eax
1000e2f2:	mov    edi,ecx
1000e2f4:	mov    DWORD PTR [ebp-0x34],ebx
1000e2f7:	call   0x100042cf
1000e2fc:	add    esp,0xc
1000e2ff:	push   eax
1000e300:	lea    ecx,[ebp-0x54]
1000e303:	call   0x100011c8
1000e308:	lea    eax,[ebp-0x54]
1000e30b:	add    edi,0x18
1000e30e:	push   eax
1000e30f:	mov    eax,edi
1000e311:	call   0x1000867b
1000e316:	push   ebx
1000e317:	push   0x1
1000e319:	lea    ecx,[ebp-0x54]
1000e31c:	mov    BYTE PTR [ebp-0x2d],al
1000e31f:	call   0x100012eb
1000e324:	cmp    BYTE PTR [ebp-0x2d],bl
1000e327:	je     0x1000e3df
1000e32d:	push   ebx
1000e32e:	lea    ecx,[ebp-0x2c]
1000e331:	mov    DWORD PTR [ebp-0x14],0xf
1000e338:	call   0x10001417
1000e33d:	push   0x67126a98
1000e342:	push   0x1006d9d4
1000e347:	mov    DWORD PTR [ebp-0x4],ebx
1000e34a:	call   0x100042bd
1000e34f:	push   0x4bfa721e
1000e354:	push   eax
1000e355:	call   0x100042bd
1000e35a:	push   0x368a22f2
1000e35f:	push   eax
1000e360:	call   0x100042bd
1000e365:	push   eax
1000e366:	push   0xe
1000e368:	push   esi
1000e369:	call   0x100042cf
1000e36e:	add    esp,0x24
1000e371:	push   eax
1000e372:	lea    ecx,[ebp-0x70]
1000e375:	call   0x100011c8
1000e37a:	push   ebx
1000e37b:	lea    eax,[ebp-0x70]
1000e37e:	push   eax
1000e37f:	lea    eax,[ebp-0x8c]
1000e385:	push   eax
1000e386:	mov    eax,edi
1000e388:	mov    BYTE PTR [ebp-0x4],0x1
1000e38c:	call   0x10008602
1000e391:	cmp    DWORD PTR [eax+0x18],0x10
1000e395:	jb     0x1000e39c
1000e397:	mov    eax,DWORD PTR [eax+0x4]
1000e39a:	jmp    0x1000e39f
1000e39c:	add    eax,0x4
1000e39f:	push   eax
1000e3a0:	call   0x10045da5
1000e3a5:	pop    ecx
1000e3a6:	push   ebx
1000e3a7:	push   0x1
1000e3a9:	lea    ecx,[ebp-0x8c]
1000e3af:	mov    esi,eax
1000e3b1:	call   0x100012eb
1000e3b6:	push   ebx
1000e3b7:	push   0x1
1000e3b9:	lea    ecx,[ebp-0x70]
1000e3bc:	mov    BYTE PTR [ebp-0x4],bl
1000e3bf:	call   0x100012eb
1000e3c4:	push   esi
1000e3c5:	lea    eax,[ebp-0x2c]
1000e3c8:	push   eax
1000e3c9:	push   DWORD PTR [ebp-0x38]
1000e3cc:	call   0x1000f294
1000e3d1:	push   ebx
1000e3d2:	push   0x1
1000e3d4:	lea    ecx,[ebp-0x2c]
1000e3d7:	mov    DWORD PTR [ebp-0x34],eax
1000e3da:	call   0x100012eb
1000e3df:	mov    eax,DWORD PTR [ebp-0x34]
1000e3e2:	call   0x10059c11
1000e3e7:	ret    0x4
1000e3ea:	push   0x40
1000e3ec:	mov    eax,0x10062006
1000e3f1:	call   0x10059b8e
1000e3f6:	mov    eax,DWORD PTR [ebp+0x8]
1000e3f9:	mov    eax,DWORD PTR [eax]
1000e3fb:	mov    edi,ecx
1000e3fd:	lea    ecx,[ebp-0x4c]
1000e400:	push   ecx
1000e401:	call   0x100199c9
1000e406:	mov    esi,eax
1000e408:	and    DWORD PTR [ebp-0x4],0x0
1000e40c:	push   0x1006da00
1000e411:	push   0x4
1000e413:	push   0x1006da34
1000e418:	call   0x100042cf
1000e41d:	push   eax
1000e41e:	call   0x10006639
1000e423:	or     DWORD PTR [ebp-0x4],0xffffffff
1000e427:	add    esp,0x10
1000e42a:	xor    ebx,ebx
1000e42c:	push   0x0
1000e42e:	inc    ebx
1000e42f:	push   ebx
1000e430:	lea    ecx,[ebp-0x4c]
1000e433:	mov    BYTE PTR [ebp-0x2d],al
1000e436:	call   0x100012eb
1000e43b:	cmp    BYTE PTR [ebp-0x2d],0x0
1000e43f:	jne    0x1000e4b7
1000e441:	mov    eax,DWORD PTR [edi+0x4]
1000e444:	lea    ecx,[ebp-0x2c]
1000e447:	push   ecx
1000e448:	call   0x100199c9
1000e44d:	xor    edi,edi
1000e44f:	lea    eax,[ebp-0x2c]
1000e452:	mov    DWORD PTR [ebp-0x4],ebx
1000e455:	call   0x10011ec7
1000e45a:	cmp    BYTE PTR [eax],0x31
1000e45d:	je     0x1000e4ac
1000e45f:	push   0x1006da3c
1000e464:	push   0x3
1000e466:	push   0x1006da78
1000e46b:	call   0x100042cf
1000e470:	push   eax
1000e471:	lea    esi,[ebp-0x2c]
1000e474:	call   0x10006639
1000e479:	add    esp,0x10
1000e47c:	test   al,al
1000e47e:	jne    0x1000e4ac
1000e480:	push   0x1006da7c
1000e485:	push   0x3
1000e487:	push   0x1006daac
1000e48c:	call   0x100042cf
1000e491:	push   eax
1000e492:	call   0x10006639
1000e497:	add    esp,0x10
1000e49a:	test   al,al
1000e49c:	jne    0x1000e4ac
1000e49e:	push   0x0
1000e4a0:	push   ebx
1000e4a1:	mov    ecx,esi
1000e4a3:	call   0x100012eb
1000e4a8:	mov    al,bl
1000e4aa:	jmp    0x1000e4b9
1000e4ac:	push   0x0
1000e4ae:	push   ebx
1000e4af:	lea    ecx,[ebp-0x2c]
1000e4b2:	call   0x100012eb
1000e4b7:	xor    al,al
1000e4b9:	call   0x10059c11
1000e4be:	ret    
1000e4bf:	push   0xc
1000e4c1:	mov    eax,0x100646f4
1000e4c6:	call   0x10059b25
1000e4cb:	xor    edi,edi
1000e4cd:	mov    DWORD PTR [ebp-0x18],edi
1000e4d0:	mov    DWORD PTR [ebp-0x4],edi
1000e4d3:	mov    DWORD PTR [ebp-0x14],edi
1000e4d6:	mov    DWORD PTR [ebp-0x10],edi
1000e4d9:	mov    esi,DWORD PTR [ebp+0x8]
1000e4dc:	lea    eax,[ebp-0x10]
1000e4df:	push   eax
1000e4e0:	lea    eax,[ebp-0x18]
1000e4e3:	push   eax
1000e4e4:	lea    ecx,[ebp-0x14]
1000e4e7:	mov    BYTE PTR [ebp-0x4],0x2
1000e4eb:	call   0x1000eab6
1000e4f0:	mov    esi,eax
1000e4f2:	cmp    esi,edi
1000e4f4:	jne    0x1000e57b
1000e4fa:	mov    esi,DWORD PTR [ebp+0xc]
1000e4fd:	mov    ecx,DWORD PTR [ebp+0x8]
1000e500:	lea    eax,[esi+0x20]
1000e503:	push   eax
1000e504:	call   0x1000ec68
1000e509:	mov    ebx,eax
1000e50b:	cmp    ebx,edi
1000e50d:	je     0x1000e52b
1000e50f:	lea    eax,[ebp-0x10]
1000e512:	call   0x10009d00
1000e517:	lea    eax,[ebp-0x14]
1000e51a:	call   0x10009d00
1000e51f:	lea    eax,[ebp-0x18]
1000e522:	call   0x10009d00
1000e527:	mov    eax,ebx
1000e529:	jmp    0x1000e595
1000e52b:	mov    ebx,DWORD PTR [ebp-0x18]
1000e52e:	mov    DWORD PTR [ebp-0x18],edi
1000e531:	mov    edi,esi
1000e533:	call   0x10009d24
1000e538:	mov    ebx,DWORD PTR [ebp-0x14]
1000e53b:	and    DWORD PTR [ebp-0x14],0x0
1000e53f:	lea    edi,[esi+0x4]
1000e542:	call   0x10009d24
1000e547:	mov    ebx,DWORD PTR [ebp-0x10]
1000e54a:	and    DWORD PTR [ebp-0x10],0x0
1000e54e:	add    esi,0x8
1000e551:	mov    edi,esi
1000e553:	call   0x10009d24
1000e558:	xor    esi,esi
1000e55a:	push   esi
1000e55b:	sub    esp,0x1c
1000e55e:	mov    ecx,esp
1000e560:	mov    DWORD PTR [ebp+0xc],esp
1000e563:	push   0x1006d3b0
1000e568:	call   0x100011c8
1000e56d:	mov    ebx,DWORD PTR [ebp+0x8]
1000e570:	call   0x1000ee17
1000e575:	cmp    eax,esi
1000e577:	je     0x1000e57b
1000e579:	mov    esi,eax
1000e57b:	lea    eax,[ebp-0x10]
1000e57e:	call   0x10009d00
1000e583:	lea    eax,[ebp-0x14]
1000e586:	call   0x10009d00
1000e58b:	lea    eax,[ebp-0x18]
1000e58e:	call   0x10009d00
1000e593:	mov    eax,esi
1000e595:	call   0x10059bfd
1000e59a:	ret    0x8
1000e59d:	push   ebp
1000e59e:	mov    ebp,esp
1000e5a0:	and    esp,0xfffffff8
1000e5a3:	push   0xffffffff
1000e5a5:	push   0x100646ae
1000e5aa:	mov    eax,fs:0x0
1000e5b0:	push   eax
1000e5b1:	sub    esp,0xc8
1000e5b7:	mov    eax,ds:0x1007e030
1000e5bc:	xor    eax,esp
1000e5be:	mov    DWORD PTR [esp+0xc0],eax
1000e5c5:	push   ebx
1000e5c6:	push   esi
1000e5c7:	push   edi
1000e5c8:	mov    eax,ds:0x1007e030
1000e5cd:	xor    eax,esp
1000e5cf:	push   eax
1000e5d0:	lea    eax,[esp+0xd8]
1000e5d7:	mov    fs:0x0,eax
1000e5dd:	mov    eax,DWORD PTR [ebp+0x8]
1000e5e0:	mov    esi,edx
1000e5e2:	mov    edi,ecx
1000e5e4:	xor    ebx,ebx
1000e5e6:	push   eax
1000e5e7:	mov    ecx,esi
1000e5e9:	mov    DWORD PTR [esp+0x24],edi
1000e5ed:	mov    DWORD PTR [esp+0x20],esi
1000e5f1:	mov    DWORD PTR [esp+0x1c],ebx
1000e5f5:	call   0x1000e3ea
1000e5fa:	test   al,al
1000e5fc:	pop    ecx
1000e5fd:	je     0x1000ea8e
1000e603:	push   ebx
1000e604:	lea    ecx,[esp+0xb8]
1000e60b:	mov    DWORD PTR [esp+0xd0],0xf
1000e616:	call   0x10001417
1000e61b:	mov    DWORD PTR [esp+0xe0],ebx
1000e622:	mov    eax,DWORD PTR [edi]
1000e624:	mov    eax,DWORD PTR [eax+0xc]
1000e627:	lea    ecx,[esp+0x44]
1000e62b:	mov    DWORD PTR [esp+0x24],eax
1000e62f:	mov    eax,DWORD PTR [esi]
1000e631:	push   ecx
1000e632:	call   0x100199c9
1000e637:	mov    esi,eax
1000e639:	push   0x1006dab0
1000e63e:	push   0x3
1000e640:	push   0x1006d500
1000e645:	mov    BYTE PTR [esp+0xec],0x1
1000e64d:	call   0x100042cf
1000e652:	add    esp,0xc
1000e655:	push   eax
1000e656:	call   0x10006639
1000e65b:	pop    ecx
1000e65c:	xor    edi,edi
1000e65e:	push   ebx
1000e65f:	inc    edi
1000e660:	push   edi
1000e661:	lea    ecx,[esp+0x4c]
1000e665:	mov    BYTE PTR [esp+0x1f],al
1000e669:	mov    BYTE PTR [esp+0xe8],bl
1000e670:	call   0x100012eb
1000e675:	cmp    BYTE PTR [esp+0x17],bl
1000e679:	je     0x1000e771
1000e67f:	push   0xfe778ec
1000e684:	push   0x1006dae8
1000e689:	call   0x100042bd
1000e68e:	push   eax
1000e68f:	push   0xe
1000e691:	mov    esi,0x1006d9c4
1000e696:	push   esi
1000e697:	call   0x100042cf
1000e69c:	add    esp,0x14
1000e69f:	push   eax
1000e6a0:	lea    ecx,[esp+0x2c]
1000e6a4:	call   0x100011c8
1000e6a9:	mov    eax,DWORD PTR [esp+0x1c]
1000e6ad:	lea    ecx,[esp+0x28]
1000e6b1:	add    eax,0x20
1000e6b4:	push   ecx
1000e6b5:	call   0x1000867b
1000e6ba:	push   ebx
1000e6bb:	push   edi
1000e6bc:	lea    ecx,[esp+0x30]
1000e6c0:	mov    BYTE PTR [esp+0x1f],al
1000e6c4:	call   0x100012eb
1000e6c9:	cmp    BYTE PTR [esp+0x17],bl
1000e6cd:	je     0x1000e757
1000e6d3:	push   0x1006db1c
1000e6d8:	push   0xe
1000e6da:	push   esi
1000e6db:	call   0x100042cf
1000e6e0:	add    esp,0xc
1000e6e3:	push   eax
1000e6e4:	lea    ecx,[esp+0x2c]
1000e6e8:	call   0x100011c8
1000e6ed:	mov    BYTE PTR [esp+0xe0],0x2
1000e6f5:	push   ebx
1000e6f6:	lea    eax,[esp+0x2c]
1000e6fa:	push   eax
1000e6fb:	lea    eax,[esp+0x4c]
1000e6ff:	push   eax
1000e700:	mov    eax,DWORD PTR [esp+0x28]
1000e704:	add    eax,0x20
1000e707:	call   0x10008602
1000e70c:	cmp    DWORD PTR [eax+0x18],0x10
1000e710:	jb     0x1000e717
1000e712:	mov    eax,DWORD PTR [eax+0x4]
1000e715:	jmp    0x1000e71a
1000e717:	add    eax,0x4
1000e71a:	push   eax
1000e71b:	call   0x10045da5
1000e720:	pop    ecx
1000e721:	push   ebx
1000e722:	push   edi
1000e723:	lea    ecx,[esp+0x4c]
1000e727:	mov    esi,eax
1000e729:	call   0x100012eb
1000e72e:	push   ebx
1000e72f:	push   edi
1000e730:	lea    ecx,[esp+0x30]
1000e734:	mov    BYTE PTR [esp+0xe8],bl
1000e73b:	call   0x100012eb
1000e740:	push   esi
1000e741:	lea    eax,[esp+0xb8]
1000e748:	push   eax
1000e749:	push   DWORD PTR [esp+0x28]
1000e74d:	call   0x1000f294
1000e752:	jmp    0x1000ea1c
1000e757:	mov    edi,DWORD PTR [esp+0x20]
1000e75b:	lea    ebx,[esp+0xb4]
1000e762:	call   0x1000f341
1000e767:	xor    edi,edi
1000e769:	xor    ebx,ebx
1000e76b:	inc    edi
1000e76c:	jmp    0x1000ea1c
1000e771:	push   0x30576296
1000e776:	push   0x1006db44
1000e77b:	call   0x100042bd
1000e780:	push   eax
1000e781:	push   0xe
1000e783:	mov    esi,0x1006d9c4
1000e788:	push   esi
1000e789:	call   0x100042cf
1000e78e:	add    esp,0x14
1000e791:	push   eax
1000e792:	lea    ecx,[esp+0x2c]
1000e796:	call   0x100011c8
1000e79b:	mov    eax,DWORD PTR [esp+0x1c]
1000e79f:	lea    ecx,[esp+0x28]
1000e7a3:	add    eax,0x20
1000e7a6:	push   ecx
1000e7a7:	call   0x1000867b
1000e7ac:	push   ebx
1000e7ad:	push   edi
1000e7ae:	lea    ecx,[esp+0x30]
1000e7b2:	mov    BYTE PTR [esp+0x1f],al
1000e7b6:	call   0x100012eb
1000e7bb:	cmp    BYTE PTR [esp+0x17],bl
1000e7bf:	je     0x1000e7fe
1000e7c1:	push   0x22985d02
1000e7c6:	push   0x1006db74
1000e7cb:	call   0x100042bd
1000e7d0:	push   0x652cdfe
1000e7d5:	push   eax
1000e7d6:	call   0x100042bd
1000e7db:	push   eax
1000e7dc:	push   0xe
1000e7de:	push   esi
1000e7df:	call   0x100042cf
1000e7e4:	add    esp,0x1c
1000e7e7:	push   eax
1000e7e8:	lea    ecx,[esp+0x2c]
1000e7ec:	call   0x100011c8
1000e7f1:	mov    BYTE PTR [esp+0xe0],0x3
1000e7f9:	jmp    0x1000e6f5
1000e7fe:	push   0x1006dbd8
1000e803:	push   0xa
1000e805:	push   0x1006d5f0
1000e80a:	call   0x100042cf
1000e80f:	add    esp,0xc
1000e812:	push   eax
1000e813:	lea    ecx,[esp+0x48]
1000e817:	call   0x100011c8
1000e81c:	push   ebx
1000e81d:	lea    eax,[esp+0x48]
1000e821:	push   eax
1000e822:	lea    eax,[esp+0x84]
1000e829:	push   eax
1000e82a:	mov    eax,DWORD PTR [esp+0x28]
1000e82e:	mov    BYTE PTR [esp+0xec],0x4
1000e836:	add    eax,0x20
1000e839:	mov    DWORD PTR [esp+0x24],edi
1000e83d:	call   0x10008602
1000e842:	mov    esi,eax
1000e844:	push   0x285c51c0
1000e849:	mov    DWORD PTR [esp+0xe4],0x5
1000e854:	push   0x1006db9c
1000e859:	mov    DWORD PTR [esp+0x20],0x3
1000e861:	call   0x100042bd
1000e866:	push   0x53b5689a
1000e86b:	push   eax
1000e86c:	call   0x100042bd
1000e871:	push   0x79e4e3ea
1000e876:	push   eax
1000e877:	call   0x100042bd
1000e87c:	add    esp,0x18
1000e87f:	cmp    DWORD PTR [esi+0x18],0x10
1000e883:	jb     0x1000e88a
1000e885:	mov    esi,DWORD PTR [esi+0x4]
1000e888:	jmp    0x1000e88d
1000e88a:	add    esi,0x4
1000e88d:	push   eax
1000e88e:	push   0x5
1000e890:	push   0x1006dbd0
1000e895:	call   0x100042cf
1000e89a:	add    esp,0xc
1000e89d:	push   eax
1000e89e:	push   esi
1000e89f:	call   0x1004575f
1000e8a4:	test   eax,eax
1000e8a6:	pop    ecx
1000e8a7:	pop    ecx
1000e8a8:	jne    0x1000e982
1000e8ae:	push   0x29ea2b34
1000e8b3:	push   0x1006dc44
1000e8b8:	call   0x100042bd
1000e8bd:	push   eax
1000e8be:	push   0x11
1000e8c0:	push   0x1006dc7c
1000e8c5:	call   0x100042cf
1000e8ca:	add    esp,0x14
1000e8cd:	push   eax
1000e8ce:	lea    ecx,[esp+0x2c]
1000e8d2:	call   0x100011c8
1000e8d7:	push   0x7
1000e8d9:	pop    edi
1000e8da:	push   ebx
1000e8db:	lea    eax,[esp+0x2c]
1000e8df:	push   eax
1000e8e0:	lea    eax,[esp+0xa0]
1000e8e7:	push   eax
1000e8e8:	mov    eax,DWORD PTR [esp+0x28]
1000e8ec:	mov    DWORD PTR [esp+0xec],0x6
1000e8f7:	add    eax,0x20
1000e8fa:	mov    DWORD PTR [esp+0x24],edi
1000e8fe:	call   0x10008602
1000e903:	mov    DWORD PTR [esp+0xe0],edi
1000e90a:	push   eax
1000e90b:	lea    esi,[esp+0x64]
1000e90f:	mov    DWORD PTR [esp+0x1c],0xf
1000e917:	call   0x1002fa90
1000e91c:	mov    esi,eax
1000e91e:	mov    DWORD PTR [esp+0xe4],0x8
1000e929:	mov    DWORD PTR [esp],0x5189892c
1000e930:	push   0x1006dbfc
1000e935:	mov    DWORD PTR [esp+0x20],0x1f
1000e93d:	call   0x100042bd
1000e942:	push   0x7082a76e
1000e947:	push   eax
1000e948:	call   0x100042bd
1000e94d:	add    esp,0x10
1000e950:	cmp    DWORD PTR [esi+0x18],0x10
1000e954:	jb     0x1000e95b
1000e956:	mov    esi,DWORD PTR [esi+0x4]
1000e959:	jmp    0x1000e95e
1000e95b:	add    esi,0x4
1000e95e:	push   eax
1000e95f:	push   edi
1000e960:	push   0x1006dc3c
1000e965:	call   0x100042cf
1000e96a:	add    esp,0xc
1000e96d:	push   eax
1000e96e:	push   esi
1000e96f:	call   0x10045b20
1000e974:	xor    edi,edi
1000e976:	pop    ecx
1000e977:	inc    edi
1000e978:	test   eax,eax
1000e97a:	pop    ecx
1000e97b:	mov    BYTE PTR [esp+0x17],0x1
1000e980:	je     0x1000e986
1000e982:	mov    BYTE PTR [esp+0x17],bl
1000e986:	test   BYTE PTR [esp+0x18],0x10
1000e98b:	je     0x1000e99d
1000e98d:	and    DWORD PTR [esp+0x18],0xffffffef
1000e992:	push   ebx
1000e993:	push   edi
1000e994:	lea    ecx,[esp+0x68]
1000e998:	call   0x100012eb
1000e99d:	test   BYTE PTR [esp+0x18],0x8
1000e9a2:	je     0x1000e9b7
1000e9a4:	and    DWORD PTR [esp+0x18],0xfffffff7
1000e9a9:	push   ebx
1000e9aa:	push   edi
1000e9ab:	lea    ecx,[esp+0xa0]
1000e9b2:	call   0x100012eb
1000e9b7:	test   BYTE PTR [esp+0x18],0x4
1000e9bc:	je     0x1000e9ce
1000e9be:	and    DWORD PTR [esp+0x18],0xfffffffb
1000e9c3:	push   ebx
1000e9c4:	push   edi
1000e9c5:	lea    ecx,[esp+0x30]
1000e9c9:	call   0x100012eb
1000e9ce:	test   BYTE PTR [esp+0x18],0x2
1000e9d3:	je     0x1000e9e8
1000e9d5:	and    DWORD PTR [esp+0x18],0xfffffffd
1000e9da:	push   ebx
1000e9db:	push   edi
1000e9dc:	lea    ecx,[esp+0x84]
1000e9e3:	call   0x100012eb
1000e9e8:	mov    DWORD PTR [esp+0xe0],ebx
1000e9ef:	test   BYTE PTR [esp+0x18],0x1
1000e9f4:	je     0x1000ea01
1000e9f6:	push   ebx
1000e9f7:	push   edi
1000e9f8:	lea    ecx,[esp+0x4c]
1000e9fc:	call   0x100012eb
1000ea01:	cmp    BYTE PTR [esp+0x17],bl
1000ea05:	jne    0x1000e757
1000ea0b:	mov    ecx,DWORD PTR [esp+0x20]
1000ea0f:	lea    eax,[esp+0xb4]
1000ea16:	push   eax
1000ea17:	call   0x1000f3a5
1000ea1c:	mov    esi,eax
1000ea1e:	cmp    esi,ebx
1000ea20:	je     0x1000ea34
1000ea22:	push   ebx
1000ea23:	push   edi
1000ea24:	lea    ecx,[esp+0xbc]
1000ea2b:	call   0x100012eb
1000ea30:	mov    eax,esi
1000ea32:	jmp    0x1000ea90
1000ea34:	mov    eax,DWORD PTR [esp+0x20]
1000ea38:	mov    eax,DWORD PTR [eax]
1000ea3a:	mov    esi,DWORD PTR [eax+0xc]
1000ea3d:	push   0x24
1000ea3f:	call   0x1004358e
1000ea44:	pop    ecx
1000ea45:	mov    DWORD PTR [esp+0x20],eax
1000ea49:	cmp    eax,ebx
1000ea4b:	mov    BYTE PTR [esp+0xe0],0x9
1000ea53:	je     0x1000ea6e
1000ea55:	sub    esi,DWORD PTR [esp+0x24]
1000ea59:	lea    ecx,[esp+0xb4]
1000ea60:	push   esi
1000ea61:	push   DWORD PTR [esp+0x28]
1000ea65:	push   ecx
1000ea66:	push   eax
1000ea67:	call   0x10007a3d
1000ea6c:	jmp    0x1000ea70
1000ea6e:	xor    eax,eax
1000ea70:	mov    edi,DWORD PTR [esp+0x1c]
1000ea74:	add    edi,0xc
1000ea77:	mov    ebx,eax
1000ea79:	call   0x10009d24
1000ea7e:	push   0x0
1000ea80:	push   0x1
1000ea82:	lea    ecx,[esp+0xbc]
1000ea89:	call   0x100012eb
1000ea8e:	xor    eax,eax
1000ea90:	mov    ecx,DWORD PTR [esp+0xd8]
1000ea97:	mov    DWORD PTR fs:0x0,ecx
1000ea9e:	pop    ecx
1000ea9f:	pop    edi
1000eaa0:	pop    esi
1000eaa1:	pop    ebx
1000eaa2:	mov    ecx,DWORD PTR [esp+0xc0]
1000eaa9:	xor    ecx,esp
1000eaab:	call   0x10042f87
1000eab0:	mov    esp,ebp
1000eab2:	pop    ebp
1000eab3:	ret    0x4
1000eab6:	push   0x4c
1000eab8:	mov    eax,0x100645af
1000eabd:	call   0x10059b8e
1000eac2:	mov    eax,DWORD PTR [ebp+0x8]
1000eac5:	mov    DWORD PTR [ebp-0x54],ecx
1000eac8:	mov    ecx,DWORD PTR [ebp+0xc]
1000eacb:	mov    DWORD PTR [ebp-0x50],ecx
1000eace:	push   eax
1000eacf:	mov    ecx,esi
1000ead1:	call   0x1000eed4
1000ead6:	test   eax,eax
1000ead8:	jne    0x1000ec10
1000eade:	mov    edi,esi
1000eae0:	call   0x1000eea6
1000eae5:	test   eax,eax
1000eae7:	jne    0x1000ec10
1000eaed:	push   eax
1000eaee:	lea    ecx,[ebp-0x2c]
1000eaf1:	mov    DWORD PTR [ebp-0x14],0xf
1000eaf8:	call   0x10001417
1000eafd:	and    DWORD PTR [ebp-0x4],0x0
1000eb01:	mov    eax,DWORD PTR [esi]
1000eb03:	mov    ebx,DWORD PTR [eax+0xc]
1000eb06:	lea    eax,[ebp-0x2c]
1000eb09:	push   eax
1000eb0a:	call   0x1000ec18
1000eb0f:	test   eax,eax
1000eb11:	mov    ecx,DWORD PTR [esi]
1000eb13:	mov    edi,DWORD PTR [ecx+0xc]
1000eb16:	mov    DWORD PTR [ebp-0x4c],eax
1000eb19:	je     0x1000eb2f
1000eb1b:	lea    ecx,[ebp-0x2c]
1000eb1e:	push   0x0
1000eb20:	push   0x1
1000eb22:	call   0x100012eb
1000eb27:	mov    eax,DWORD PTR [ebp-0x4c]
1000eb2a:	jmp    0x1000ec10
1000eb2f:	push   0x24
1000eb31:	call   0x1004358e
1000eb36:	pop    ecx
1000eb37:	mov    DWORD PTR [ebp-0x4c],eax
1000eb3a:	test   eax,eax
1000eb3c:	mov    BYTE PTR [ebp-0x4],0x1
1000eb40:	je     0x1000eb52
1000eb42:	sub    edi,ebx
1000eb44:	push   edi
1000eb45:	push   ebx
1000eb46:	lea    ecx,[ebp-0x2c]
1000eb49:	push   ecx
1000eb4a:	push   eax
1000eb4b:	call   0x10007a3d
1000eb50:	jmp    0x1000eb54
1000eb52:	xor    eax,eax
1000eb54:	mov    edi,DWORD PTR [ebp-0x54]
1000eb57:	mov    ebx,eax
1000eb59:	call   0x10009d24
1000eb5e:	or     DWORD PTR [ebp-0x4],0xffffffff
1000eb62:	push   0x0
1000eb64:	push   0x1
1000eb66:	lea    ecx,[ebp-0x2c]
1000eb69:	call   0x100012eb
1000eb6e:	mov    edi,esi
1000eb70:	call   0x1000eea6
1000eb75:	test   eax,eax
1000eb77:	jne    0x1000ec10
1000eb7d:	push   eax
1000eb7e:	lea    ecx,[ebp-0x48]
1000eb81:	mov    DWORD PTR [ebp-0x30],0xf
1000eb88:	call   0x10001417
1000eb8d:	mov    DWORD PTR [ebp-0x4],0x2
1000eb94:	mov    eax,DWORD PTR [esi]
1000eb96:	mov    ebx,DWORD PTR [eax+0xc]
1000eb99:	lea    eax,[ebp-0x48]
1000eb9c:	push   eax
1000eb9d:	call   0x1000f252
1000eba2:	test   eax,eax
1000eba4:	mov    ecx,DWORD PTR [esi]
1000eba6:	mov    edi,DWORD PTR [ecx+0xc]
1000eba9:	mov    DWORD PTR [ebp-0x4c],eax
1000ebac:	je     0x1000ebb6
1000ebae:	lea    ecx,[ebp-0x48]
1000ebb1:	jmp    0x1000eb1e
1000ebb6:	push   0x24
1000ebb8:	call   0x1004358e
1000ebbd:	pop    ecx
1000ebbe:	mov    DWORD PTR [ebp-0x54],eax
1000ebc1:	test   eax,eax
1000ebc3:	mov    BYTE PTR [ebp-0x4],0x3
1000ebc7:	je     0x1000ebd9
1000ebc9:	sub    edi,ebx
1000ebcb:	push   edi
1000ebcc:	push   ebx
1000ebcd:	lea    ecx,[ebp-0x48]
1000ebd0:	push   ecx
1000ebd1:	push   eax
1000ebd2:	call   0x10007a3d
1000ebd7:	jmp    0x1000ebdb
1000ebd9:	xor    eax,eax
1000ebdb:	mov    edi,DWORD PTR [ebp-0x50]
1000ebde:	mov    ebx,eax
1000ebe0:	call   0x10009d24
1000ebe5:	or     DWORD PTR [ebp-0x4],0xffffffff
1000ebe9:	push   0x0
1000ebeb:	push   0x1
1000ebed:	lea    ecx,[ebp-0x48]
1000ebf0:	call   0x100012eb
1000ebf5:	push   0x0
1000ebf7:	sub    esp,0x1c
1000ebfa:	mov    ecx,esp
1000ebfc:	mov    DWORD PTR [ebp-0x50],esp
1000ebff:	push   0x1006d3b0
1000ec04:	call   0x100011c8
1000ec09:	mov    ebx,esi
1000ec0b:	call   0x1000ee17
1000ec10:	call   0x10059c11
1000ec15:	ret    0x8
1000ec18:	push   ebp
1000ec19:	mov    ebp,esp
1000ec1b:	push   ecx
1000ec1c:	push   ecx
1000ec1d:	and    DWORD PTR [ebp-0x4],0x0
1000ec21:	push   ebx
1000ec22:	xor    ebx,ebx
1000ec24:	push   esi
1000ec25:	inc    ebx
1000ec26:	mov    esi,DWORD PTR [edi]
1000ec28:	call   0x1000ddd2
1000ec2d:	test   al,al
1000ec2f:	jne    0x1000ec64
1000ec31:	mov    eax,DWORD PTR [edi]
1000ec33:	call   0x1000df23
1000ec38:	mov    BYTE PTR [ebp-0x8],al
1000ec3b:	sub    al,0x30
1000ec3d:	cmp    al,0x9
1000ec3f:	ja     0x1000ec64
1000ec41:	push   DWORD PTR [ebp-0x8]
1000ec44:	mov    esi,DWORD PTR [ebp+0x8]
1000ec47:	call   0x1000d034
1000ec4c:	mov    eax,DWORD PTR [edi]
1000ec4e:	call   0x1000df41
1000ec53:	inc    DWORD PTR [ebp-0x4]
1000ec56:	cmp    DWORD PTR [ebp-0x4],0x3
1000ec5a:	jne    0x1000ec26
1000ec5c:	xor    eax,eax
1000ec5e:	pop    esi
1000ec5f:	pop    ebx
1000ec60:	leave  
1000ec61:	ret    0x4
1000ec64:	mov    eax,ebx
1000ec66:	jmp    0x1000ec5e
1000ec68:	push   ebp
1000ec69:	mov    ebp,esp
1000ec6b:	and    esp,0xfffffff8
1000ec6e:	push   0xffffffff
1000ec70:	push   0x10064563
1000ec75:	mov    eax,fs:0x0
1000ec7b:	push   eax
1000ec7c:	sub    esp,0x58
1000ec7f:	mov    eax,ds:0x1007e030
1000ec84:	xor    eax,esp
1000ec86:	mov    DWORD PTR [esp+0x50],eax
1000ec8a:	push   ebx
1000ec8b:	push   esi
1000ec8c:	push   edi
1000ec8d:	mov    eax,ds:0x1007e030
1000ec92:	xor    eax,esp
1000ec94:	push   eax
1000ec95:	lea    eax,[esp+0x68]
1000ec99:	mov    fs:0x0,eax
1000ec9f:	mov    eax,DWORD PTR [ebp+0x8]
1000eca2:	mov    edi,ecx
1000eca4:	mov    esi,DWORD PTR [edi]
1000eca6:	mov    DWORD PTR [esp+0x14],eax
1000ecaa:	call   0x1000ddd2
1000ecaf:	test   al,al
1000ecb1:	je     0x1000ecbb
1000ecb3:	xor    eax,eax
1000ecb5:	inc    eax
1000ecb6:	jmp    0x1000eddb
1000ecbb:	mov    eax,DWORD PTR [edi]
1000ecbd:	call   0x1000df23
1000ecc2:	cmp    al,0xd
1000ecc4:	je     0x1000edcb
1000ecca:	xor    esi,esi
1000eccc:	push   0xf
1000ecce:	pop    ebx
1000eccf:	push   esi
1000ecd0:	lea    ecx,[esp+0x48]
1000ecd4:	mov    DWORD PTR [esp+0x60],ebx
1000ecd8:	call   0x10001417
1000ecdd:	mov    DWORD PTR [esp+0x70],esi
1000ece1:	push   esi
1000ece2:	lea    ecx,[esp+0x2c]
1000ece6:	mov    DWORD PTR [esp+0x44],ebx
1000ecea:	call   0x10001417
1000ecef:	mov    BYTE PTR [esp+0x70],0x1
1000ecf4:	mov    eax,DWORD PTR [edi]
1000ecf6:	mov    eax,DWORD PTR [eax+0xc]
1000ecf9:	mov    DWORD PTR [esp+0x20],eax
1000ecfd:	push   esi
1000ecfe:	lea    eax,[esp+0x48]
1000ed02:	push   eax
1000ed03:	call   0x1000f13b
1000ed08:	cmp    eax,esi
1000ed0a:	je     0x1000ed10
1000ed0c:	mov    ebx,eax
1000ed0e:	jmp    0x1000ed4a
1000ed10:	push   esi
1000ed11:	sub    esp,0x1c
1000ed14:	mov    ecx,esp
1000ed16:	mov    DWORD PTR [esp+0x3c],esp
1000ed1a:	push   0x1006dcc4
1000ed1f:	call   0x100011c8
1000ed24:	mov    ebx,edi
1000ed26:	call   0x1000ee17
1000ed2b:	cmp    eax,esi
1000ed2d:	jne    0x1000ed0c
1000ed2f:	lea    eax,[esp+0x28]
1000ed33:	push   eax
1000ed34:	mov    ecx,edi
1000ed36:	call   0x1000f065
1000ed3b:	cmp    eax,esi
1000ed3d:	jne    0x1000ed0c
1000ed3f:	mov    eax,DWORD PTR [edi]
1000ed41:	mov    eax,DWORD PTR [eax+0xc]
1000ed44:	mov    DWORD PTR [esp+0x24],eax
1000ed48:	xor    ebx,ebx
1000ed4a:	cmp    ebx,esi
1000ed4c:	jne    0x1000edfb
1000ed52:	push   0x8
1000ed54:	call   0x1004358e
1000ed59:	cmp    eax,esi
1000ed5b:	pop    ecx
1000ed5c:	je     0x1000ed6f
1000ed5e:	mov    edx,DWORD PTR [esp+0x20]
1000ed62:	mov    ecx,DWORD PTR [esp+0x24]
1000ed66:	sub    ecx,edx
1000ed68:	mov    DWORD PTR [eax],edx
1000ed6a:	mov    DWORD PTR [eax+0x4],ecx
1000ed6d:	jmp    0x1000ed71
1000ed6f:	xor    eax,eax
1000ed71:	push   ecx
1000ed72:	mov    ecx,esp
1000ed74:	mov    BYTE PTR [esp+0x74],0x2
1000ed79:	mov    DWORD PTR [esp+0x1c],esi
1000ed7d:	mov    DWORD PTR [ecx],eax
1000ed7f:	mov    ecx,DWORD PTR [esp+0x18]
1000ed83:	lea    eax,[esp+0x2c]
1000ed87:	mov    DWORD PTR [esp+0x20],esp
1000ed8b:	push   eax
1000ed8c:	lea    edx,[esp+0x4c]
1000ed90:	call   0x10007f3e
1000ed95:	push   DWORD PTR [esp+0x18]
1000ed99:	call   0x10042f82
1000ed9e:	pop    ecx
1000ed9f:	push   esi
1000eda0:	push   0x1
1000eda2:	lea    ecx,[esp+0x30]
1000eda6:	call   0x100012eb
1000edab:	or     DWORD PTR [esp+0x70],0xffffffff
1000edb0:	push   esi
1000edb1:	push   0x1
1000edb3:	lea    ecx,[esp+0x4c]
1000edb7:	call   0x100012eb
1000edbc:	mov    eax,DWORD PTR [edi]
1000edbe:	call   0x1000df23
1000edc3:	cmp    al,0xd
1000edc5:	jne    0x1000eccc
1000edcb:	mov    eax,DWORD PTR [edi]
1000edcd:	push   DWORD PTR [eax+0xc]
1000edd0:	mov    edi,DWORD PTR [esp+0x18]
1000edd4:	call   0x10007b4e
1000edd9:	xor    eax,eax
1000eddb:	mov    ecx,DWORD PTR [esp+0x68]
1000eddf:	mov    DWORD PTR fs:0x0,ecx
1000ede6:	pop    ecx
1000ede7:	pop    edi
1000ede8:	pop    esi
1000ede9:	pop    ebx
1000edea:	mov    ecx,DWORD PTR [esp+0x50]
1000edee:	xor    ecx,esp
1000edf0:	call   0x10042f87
1000edf5:	mov    esp,ebp
1000edf7:	pop    ebp
1000edf8:	ret    0x4
1000edfb:	push   esi
1000edfc:	push   0x1
1000edfe:	lea    ecx,[esp+0x30]
1000ee02:	call   0x100012eb
1000ee07:	push   esi
1000ee08:	push   0x1
1000ee0a:	lea    ecx,[esp+0x4c]
1000ee0e:	call   0x100012eb
1000ee13:	mov    eax,ebx
1000ee15:	jmp    0x1000eddb
1000ee17:	push   0x4
1000ee19:	mov    eax,0x10063c35
1000ee1e:	call   0x10059b25
1000ee23:	xor    edi,edi
1000ee25:	mov    DWORD PTR [ebp-0x4],edi
1000ee28:	cmp    DWORD PTR [ebp+0x1c],edi
1000ee2b:	je     0x1000ee8f
1000ee2d:	cmp    BYTE PTR [ebp+0x24],0x0
1000ee31:	je     0x1000ee5e
1000ee33:	test   edi,edi
1000ee35:	jle    0x1000ee5e
1000ee37:	mov    eax,DWORD PTR [ebx]
1000ee39:	mov    ecx,DWORD PTR [eax+0x4]
1000ee3c:	test   ecx,ecx
1000ee3e:	je     0x1000ee47
1000ee40:	mov    eax,DWORD PTR [eax+0x8]
1000ee43:	cmp    eax,DWORD PTR [ecx]
1000ee45:	jb     0x1000ee69
1000ee47:	push   0x0
1000ee49:	push   0x1
1000ee4b:	lea    ecx,[ebp+0x8]
1000ee4e:	call   0x100012eb
1000ee53:	xor    eax,eax
1000ee55:	inc    eax
1000ee56:	call   0x10059bfd
1000ee5b:	ret    0x20
1000ee5e:	mov    esi,DWORD PTR [ebx]
1000ee60:	call   0x1000ddd2
1000ee65:	test   al,al
1000ee67:	jne    0x1000ee47
1000ee69:	mov    eax,DWORD PTR [ebx]
1000ee6b:	call   0x1000df23
1000ee70:	mov    BYTE PTR [ebp-0xd],al
1000ee73:	lea    eax,[ebp+0x8]
1000ee76:	call   0x10011ec7
1000ee7b:	mov    cl,BYTE PTR [ebp-0xd]
1000ee7e:	cmp    BYTE PTR [eax],cl
1000ee80:	jne    0x1000ee93
1000ee82:	mov    eax,DWORD PTR [ebx]
1000ee84:	call   0x1000df41
1000ee89:	inc    edi
1000ee8a:	cmp    edi,DWORD PTR [ebp+0x1c]
1000ee8d:	jne    0x1000ee2d
1000ee8f:	xor    esi,esi
1000ee91:	jmp    0x1000ee96
1000ee93:	xor    esi,esi
1000ee95:	inc    esi
1000ee96:	push   0x0
1000ee98:	push   0x1
1000ee9a:	lea    ecx,[ebp+0x8]
1000ee9d:	call   0x100012eb
1000eea2:	mov    eax,esi
1000eea4:	jmp    0x1000ee56
1000eea6:	push   ebx
1000eea7:	push   esi
1000eea8:	xor    ebx,ebx
1000eeaa:	jmp    0x1000eebf
1000eeac:	mov    eax,DWORD PTR [edi]
1000eeae:	call   0x1000df23
1000eeb3:	cmp    al,0x20
1000eeb5:	jne    0x1000eeca
1000eeb7:	mov    eax,DWORD PTR [edi]
1000eeb9:	inc    ebx
1000eeba:	call   0x1000df41
1000eebf:	mov    esi,DWORD PTR [edi]
1000eec1:	call   0x1000ddd2
1000eec6:	test   al,al
1000eec8:	je     0x1000eeac
1000eeca:	xor    eax,eax
1000eecc:	test   ebx,ebx
1000eece:	pop    esi
1000eecf:	setle  al
1000eed2:	pop    ebx
1000eed3:	ret    
1000eed4:	push   0x30
1000eed6:	mov    eax,0x10064526
1000eedb:	call   0x10059b8e
1000eee0:	mov    eax,DWORD PTR [ebp+0x8]
1000eee3:	push   0x1
1000eee5:	push   0x7619c036
1000eeea:	push   0x1006dc90
1000eeef:	mov    edi,ecx
1000eef1:	mov    DWORD PTR [ebp-0x3c],eax
1000eef4:	call   0x100042bd
1000eef9:	push   0x6624eef2
1000eefe:	push   eax
1000eeff:	call   0x100042bd
1000ef04:	push   eax
1000ef05:	push   0x5
1000ef07:	push   0x1006d4bc
1000ef0c:	call   0x100042cf
1000ef11:	mov    ecx,esp
1000ef13:	mov    DWORD PTR [ebp-0x34],esp
1000ef16:	push   eax
1000ef17:	call   0x100011c8
1000ef1c:	mov    ebx,edi
1000ef1e:	call   0x1000ee17
1000ef23:	xor    ebx,ebx
1000ef25:	cmp    eax,ebx
1000ef27:	jne    0x1000ef90
1000ef29:	push   ebx
1000ef2a:	lea    ecx,[ebp-0x2c]
1000ef2d:	mov    DWORD PTR [ebp-0x14],0xf
1000ef34:	call   0x10001417
1000ef39:	mov    DWORD PTR [ebp-0x4],ebx
1000ef3c:	mov    esi,DWORD PTR [edi]
1000ef3e:	mov    eax,DWORD PTR [esi+0xc]
1000ef41:	mov    DWORD PTR [ebp-0x38],eax
1000ef44:	mov    DWORD PTR [ebp-0x30],ebx
1000ef47:	jmp    0x1000ef73
1000ef49:	mov    eax,DWORD PTR [edi]
1000ef4b:	call   0x1000df23
1000ef50:	mov    BYTE PTR [ebp-0x34],al
1000ef53:	sub    al,0x30
1000ef55:	cmp    al,0x9
1000ef57:	ja     0x1000ef98
1000ef59:	push   DWORD PTR [ebp-0x34]
1000ef5c:	xor    ebx,ebx
1000ef5e:	inc    ebx
1000ef5f:	lea    esi,[ebp-0x2c]
1000ef62:	call   0x1000d034
1000ef67:	mov    eax,DWORD PTR [edi]
1000ef69:	inc    DWORD PTR [ebp-0x30]
1000ef6c:	call   0x1000df41
1000ef71:	mov    esi,DWORD PTR [edi]
1000ef73:	call   0x1000ddd2
1000ef78:	test   al,al
1000ef7a:	je     0x1000ef49
1000ef7c:	push   0x0
1000ef7e:	push   0x1
1000ef80:	lea    ecx,[ebp-0x2c]
1000ef83:	call   0x100012eb
1000ef88:	xor    eax,eax
1000ef8a:	cmp    DWORD PTR [ebp-0x30],eax
1000ef8d:	setle  al
1000ef90:	call   0x10059c11
1000ef95:	ret    0x4
1000ef98:	cmp    DWORD PTR [ebp-0x30],0x0
1000ef9c:	jne    0x1000efb1
1000ef9e:	xor    esi,esi
1000efa0:	inc    esi
1000efa1:	push   0x0
1000efa3:	push   0x1
1000efa5:	lea    ecx,[ebp-0x2c]
1000efa8:	call   0x100012eb
1000efad:	mov    eax,esi
1000efaf:	jmp    0x1000ef90
1000efb1:	push   0x0
1000efb3:	sub    esp,0x1c
1000efb6:	mov    ecx,esp
1000efb8:	mov    DWORD PTR [ebp-0x34],esp
1000efbb:	mov    esi,0x1006dcc0
1000efc0:	push   esi
1000efc1:	call   0x100011c8
1000efc6:	mov    ebx,edi
1000efc8:	call   0x1000ee17
1000efcd:	test   eax,eax
1000efcf:	je     0x1000efd5
1000efd1:	mov    esi,eax
1000efd3:	jmp    0x1000efa1
1000efd5:	push   esi
1000efd6:	lea    eax,[ebp-0x2c]
1000efd9:	push   eax
1000efda:	call   0x10004107
1000efdf:	and    DWORD PTR [ebp-0x30],0x0
1000efe3:	jmp    0x1000f00d
1000efe5:	mov    eax,DWORD PTR [edi]
1000efe7:	call   0x1000df23
1000efec:	mov    BYTE PTR [ebp-0x34],al
1000efef:	sub    al,0x30
1000eff1:	cmp    al,0x9
1000eff3:	ja     0x1000f01d
1000eff5:	push   DWORD PTR [ebp-0x34]
1000eff8:	xor    ebx,ebx
1000effa:	inc    ebx
1000effb:	lea    esi,[ebp-0x2c]
1000effe:	call   0x1000d034
1000f003:	mov    eax,DWORD PTR [edi]
1000f005:	inc    DWORD PTR [ebp-0x30]
1000f008:	call   0x1000df41
1000f00d:	mov    esi,DWORD PTR [edi]
1000f00f:	call   0x1000ddd2
1000f014:	test   al,al
1000f016:	je     0x1000efe5
1000f018:	jmp    0x1000ef7c
1000f01d:	cmp    DWORD PTR [ebp-0x30],0x0
1000f021:	je     0x1000ef9e
1000f027:	mov    eax,DWORD PTR [edi]
1000f029:	mov    esi,DWORD PTR [eax+0xc]
1000f02c:	push   0x24
1000f02e:	call   0x1004358e
1000f033:	pop    ecx
1000f034:	mov    DWORD PTR [ebp-0x34],eax
1000f037:	test   eax,eax
1000f039:	mov    BYTE PTR [ebp-0x4],0x1
1000f03d:	je     0x1000f052
1000f03f:	sub    esi,DWORD PTR [ebp-0x38]
1000f042:	lea    ecx,[ebp-0x2c]
1000f045:	push   esi
1000f046:	push   DWORD PTR [ebp-0x38]
1000f049:	push   ecx
1000f04a:	push   eax
1000f04b:	call   0x10007a3d
1000f050:	jmp    0x1000f054
1000f052:	xor    eax,eax
1000f054:	mov    edi,DWORD PTR [ebp-0x3c]
1000f057:	mov    ebx,eax
1000f059:	call   0x10009d24
1000f05e:	xor    esi,esi
1000f060:	jmp    0x1000efa1
1000f065:	push   0x24
1000f067:	mov    eax,0x100644f9
1000f06c:	call   0x10059b25
1000f071:	mov    edi,ecx
1000f073:	and    DWORD PTR [ebp-0x10],0x0
1000f077:	jmp    0x1000f09f
1000f079:	mov    eax,DWORD PTR [edi]
1000f07b:	call   0x1000df23
1000f080:	cmp    al,0xd
1000f082:	mov    BYTE PTR [ebp-0x14],al
1000f085:	je     0x1000f0b4
1000f087:	push   DWORD PTR [ebp-0x14]
1000f08a:	mov    esi,DWORD PTR [ebp+0x8]
1000f08d:	inc    DWORD PTR [ebp-0x10]
1000f090:	xor    ebx,ebx
1000f092:	inc    ebx
1000f093:	call   0x1000d034
1000f098:	mov    eax,DWORD PTR [edi]
1000f09a:	call   0x1000df41
1000f09f:	mov    esi,DWORD PTR [edi]
1000f0a1:	call   0x1000ddd2
1000f0a6:	test   al,al
1000f0a8:	je     0x1000f079
1000f0aa:	xor    eax,eax
1000f0ac:	cmp    DWORD PTR [ebp-0x10],eax
1000f0af:	setle  al
1000f0b2:	jmp    0x1000f133
1000f0b4:	push   0x0
1000f0b6:	sub    esp,0x1c
1000f0b9:	mov    ecx,esp
1000f0bb:	mov    DWORD PTR [ebp-0x14],esp
1000f0be:	push   0x1006d3b0
1000f0c3:	call   0x100011c8
1000f0c8:	mov    ebx,edi
1000f0ca:	call   0x1000ee17
1000f0cf:	test   eax,eax
1000f0d1:	jne    0x1000f133
1000f0d3:	mov    ebx,DWORD PTR [ebp+0x8]
1000f0d6:	mov    eax,DWORD PTR [ebx+0x14]
1000f0d9:	xor    edi,edi
1000f0db:	test   eax,eax
1000f0dd:	je     0x1000f0f1
1000f0df:	mov    eax,ebx
1000f0e1:	call   0x10011ec7
1000f0e6:	cmp    BYTE PTR [eax],0x20
1000f0e9:	jne    0x1000f0f1
1000f0eb:	inc    edi
1000f0ec:	cmp    edi,DWORD PTR [ebx+0x14]
1000f0ef:	jne    0x1000f0df
1000f0f1:	mov    esi,DWORD PTR [ebx+0x14]
1000f0f4:	dec    esi
1000f0f5:	test   edi,edi
1000f0f7:	jl     0x1000f108
1000f0f9:	mov    eax,ebx
1000f0fb:	call   0x10011ec7
1000f100:	cmp    BYTE PTR [eax],0x20
1000f103:	jne    0x1000f108
1000f105:	dec    edi
1000f106:	jns    0x1000f0f9
1000f108:	sub    esi,edi
1000f10a:	inc    esi
1000f10b:	push   esi
1000f10c:	push   edi
1000f10d:	push   ebx
1000f10e:	lea    eax,[ebp-0x30]
1000f111:	call   0x1000c98f
1000f116:	push   0xffffffff
1000f118:	xor    esi,esi
1000f11a:	push   esi
1000f11b:	push   eax
1000f11c:	mov    ecx,ebx
1000f11e:	mov    DWORD PTR [ebp-0x4],esi
1000f121:	call   0x1000123c
1000f126:	push   esi
1000f127:	push   0x1
1000f129:	lea    ecx,[ebp-0x30]
1000f12c:	call   0x100012eb
1000f131:	xor    eax,eax
1000f133:	call   0x10059bfd
1000f138:	ret    0x4
1000f13b:	push   ebp
1000f13c:	mov    ebp,esp
1000f13e:	push   ecx
1000f13f:	push   ecx
1000f140:	push   ebx
1000f141:	xor    ebx,ebx
1000f143:	push   esi
1000f144:	mov    DWORD PTR [ebp-0x4],ebx
1000f147:	cmp    DWORD PTR [ebp-0x4],ebx
1000f14a:	jle    0x1000f168
1000f14c:	cmp    BYTE PTR [ebp+0xc],bl
1000f14f:	je     0x1000f168
1000f151:	mov    eax,DWORD PTR [edi]
1000f153:	mov    ecx,DWORD PTR [eax+0x4]
1000f156:	cmp    ecx,ebx
1000f158:	je     0x1000f161
1000f15a:	mov    eax,DWORD PTR [eax+0x8]
1000f15d:	cmp    eax,DWORD PTR [ecx]
1000f15f:	jb     0x1000f177
1000f161:	xor    eax,eax
1000f163:	jmp    0x1000f200
1000f168:	mov    esi,DWORD PTR [edi]
1000f16a:	call   0x1000ddd2
1000f16f:	test   al,al
1000f171:	jne    0x1000f1f8
1000f177:	mov    eax,DWORD PTR [edi]
1000f179:	call   0x1000df23
1000f17e:	cmp    al,0x28
1000f180:	mov    BYTE PTR [ebp-0x8],al
1000f183:	je     0x1000f1f8
1000f185:	cmp    al,0x29
1000f187:	je     0x1000f1f8
1000f189:	cmp    al,0x3c
1000f18b:	je     0x1000f1f8
1000f18d:	cmp    al,0x3e
1000f18f:	je     0x1000f1f8
1000f191:	cmp    al,0x40
1000f193:	je     0x1000f1f8
1000f195:	cmp    al,0x2c
1000f197:	je     0x1000f1f8
1000f199:	cmp    al,0x3b
1000f19b:	je     0x1000f1f8
1000f19d:	cmp    al,0x3a
1000f19f:	je     0x1000f1f8
1000f1a1:	cmp    al,0x5c
1000f1a3:	je     0x1000f1f8
1000f1a5:	cmp    al,0x22
1000f1a7:	je     0x1000f1f8
1000f1a9:	cmp    al,0x2f
1000f1ab:	je     0x1000f1f8
1000f1ad:	cmp    al,0x5b
1000f1af:	je     0x1000f1f8
1000f1b1:	cmp    al,0x5d
1000f1b3:	je     0x1000f1f8
1000f1b5:	cmp    al,0x3f
1000f1b7:	je     0x1000f1f8
1000f1b9:	cmp    al,0x3d
1000f1bb:	je     0x1000f1f8
1000f1bd:	cmp    al,0x7b
1000f1bf:	je     0x1000f1f8
1000f1c1:	cmp    al,0x7d
1000f1c3:	je     0x1000f1f8
1000f1c5:	cmp    al,0x20
1000f1c7:	je     0x1000f1f8
1000f1c9:	cmp    al,0x9
1000f1cb:	je     0x1000f1f8
1000f1cd:	cmp    al,bl
1000f1cf:	jl     0x1000f1d5
1000f1d1:	cmp    al,0x1f
1000f1d3:	jle    0x1000f1f8
1000f1d5:	cmp    al,0x7f
1000f1d7:	je     0x1000f1f8
1000f1d9:	push   DWORD PTR [ebp-0x8]
1000f1dc:	mov    esi,DWORD PTR [ebp+0x8]
1000f1df:	inc    DWORD PTR [ebp-0x4]
1000f1e2:	xor    ebx,ebx
1000f1e4:	inc    ebx
1000f1e5:	call   0x1000d034
1000f1ea:	mov    eax,DWORD PTR [edi]
1000f1ec:	call   0x1000df41
1000f1f1:	xor    ebx,ebx
1000f1f3:	jmp    0x1000f147
1000f1f8:	xor    eax,eax
1000f1fa:	cmp    DWORD PTR [ebp-0x4],ebx
1000f1fd:	setle  al
1000f200:	pop    esi
1000f201:	pop    ebx
1000f202:	leave  
1000f203:	ret    0x8
1000f206:	push   ebp
1000f207:	mov    ebp,esp
1000f209:	push   ecx
1000f20a:	push   ecx
1000f20b:	and    DWORD PTR [ebp-0x4],0x0
1000f20f:	push   ebx
1000f210:	push   esi
1000f211:	jmp    0x1000f239
1000f213:	mov    eax,DWORD PTR [edi]
1000f215:	call   0x1000df23
1000f21a:	cmp    al,0x20
1000f21c:	mov    BYTE PTR [ebp-0x8],al
1000f21f:	je     0x1000f244
1000f221:	push   DWORD PTR [ebp-0x8]
1000f224:	mov    esi,DWORD PTR [ebp+0x8]
1000f227:	inc    DWORD PTR [ebp-0x4]
1000f22a:	xor    ebx,ebx
1000f22c:	inc    ebx
1000f22d:	call   0x1000d034
1000f232:	mov    eax,DWORD PTR [edi]
1000f234:	call   0x1000df41
1000f239:	mov    esi,DWORD PTR [edi]
1000f23b:	call   0x1000ddd2
1000f240:	test   al,al
1000f242:	je     0x1000f213
1000f244:	xor    eax,eax
1000f246:	cmp    DWORD PTR [ebp-0x4],eax
1000f249:	pop    esi
1000f24a:	setle  al
1000f24d:	pop    ebx
1000f24e:	leave  
1000f24f:	ret    0x4
1000f252:	push   ebp
1000f253:	mov    ebp,esp
1000f255:	push   ecx
1000f256:	push   ebx
1000f257:	push   esi
1000f258:	jmp    0x1000f281
1000f25a:	mov    eax,DWORD PTR [edi]
1000f25c:	call   0x1000df23
1000f261:	cmp    al,0xd
1000f263:	mov    BYTE PTR [ebp-0x4],al
1000f266:	je     0x1000f28c
1000f268:	cmp    al,0xa
1000f26a:	je     0x1000f28c
1000f26c:	push   DWORD PTR [ebp-0x4]
1000f26f:	mov    esi,DWORD PTR [ebp+0x8]
1000f272:	xor    ebx,ebx
1000f274:	inc    ebx
1000f275:	call   0x1000d034
1000f27a:	mov    eax,DWORD PTR [edi]
1000f27c:	call   0x1000df41
1000f281:	mov    esi,DWORD PTR [edi]
1000f283:	call   0x1000ddd2
1000f288:	test   al,al
1000f28a:	je     0x1000f25a
1000f28c:	pop    esi
1000f28d:	xor    eax,eax
1000f28f:	pop    ebx
1000f290:	leave  
1000f291:	ret    0x4
1000f294:	push   0xc
1000f296:	mov    eax,0x10063c12
1000f29b:	call   0x10059b25
1000f2a0:	xor    eax,eax
1000f2a2:	mov    DWORD PTR [ebp-0x10],eax
1000f2a5:	mov    DWORD PTR [ebp-0x18],eax
1000f2a8:	mov    ebx,0xf4240
1000f2ad:	cmp    DWORD PTR [ebp+0x10],ebx
1000f2b0:	mov    DWORD PTR [ebp-0x4],eax
1000f2b3:	mov    edi,0x10000
1000f2b8:	jbe    0x1000f2bf
1000f2ba:	mov    edi,0x100000
1000f2bf:	push   edi
1000f2c0:	call   0x10043811
1000f2c5:	mov    esi,eax
1000f2c7:	test   esi,esi
1000f2c9:	pop    ecx
1000f2ca:	mov    DWORD PTR [ebp-0x14],esi
1000f2cd:	je     0x1000f2d7
1000f2cf:	push   0x0
1000f2d1:	call   0x10042f82
1000f2d6:	pop    ecx
1000f2d7:	cmp    DWORD PTR [ebp+0x10],0x0
1000f2db:	mov    DWORD PTR [ebp-0x18],esi
1000f2de:	je     0x1000f327
1000f2e0:	mov    eax,DWORD PTR [ebp+0x8]
1000f2e3:	mov    esi,DWORD PTR [eax]
1000f2e5:	call   0x1000ddd2
1000f2ea:	test   al,al
1000f2ec:	jne    0x1000f32b
1000f2ee:	mov    eax,DWORD PTR [ebp-0x10]
1000f2f1:	mov    esi,DWORD PTR [ebp+0x10]
1000f2f4:	lea    ecx,[edi+eax*1]
1000f2f7:	cmp    ecx,esi
1000f2f9:	jbe    0x1000f2ff
1000f2fb:	mov    edi,esi
1000f2fd:	sub    edi,eax
1000f2ff:	mov    eax,DWORD PTR [ebp+0x8]
1000f302:	mov    eax,DWORD PTR [eax]
1000f304:	push   edi
1000f305:	push   DWORD PTR [ebp-0x14]
1000f308:	call   0x1000df7a
1000f30d:	mov    edi,eax
1000f30f:	add    DWORD PTR [ebp-0x10],edi
1000f312:	cmp    esi,ebx
1000f314:	ja     0x1000f322
1000f316:	mov    eax,DWORD PTR [ebp+0xc]
1000f319:	push   edi
1000f31a:	push   DWORD PTR [ebp-0x14]
1000f31d:	call   0x10004d85
1000f322:	cmp    DWORD PTR [ebp-0x10],esi
1000f325:	jne    0x1000f2e0
1000f327:	xor    esi,esi
1000f329:	jmp    0x1000f32e
1000f32b:	xor    esi,esi
1000f32d:	inc    esi
1000f32e:	push   DWORD PTR [ebp-0x14]
1000f331:	call   0x10042f82
1000f336:	pop    ecx
1000f337:	mov    eax,esi
1000f339:	call   0x10059bfd
1000f33e:	ret    0xc
1000f341:	push   ebp
1000f342:	mov    ebp,esp
1000f344:	mov    eax,0x10004
1000f349:	call   0x10049ed0
1000f34e:	mov    eax,ds:0x1007e030
1000f353:	xor    eax,ebp
1000f355:	mov    DWORD PTR [ebp-0x4],eax
1000f358:	push   esi
1000f359:	jmp    0x1000f386
1000f35b:	push   0x10000
1000f360:	lea    eax,[ebp-0x10004]
1000f366:	push   eax
1000f367:	mov    eax,DWORD PTR [edi]
1000f369:	call   0x1000df7a
1000f36e:	push   eax
1000f36f:	lea    eax,[ebp-0x10004]
1000f375:	push   eax
1000f376:	mov    eax,ebx
1000f378:	call   0x10004d85
1000f37d:	cmp    DWORD PTR [ebx+0x14],0xf4240
1000f384:	jae    0x1000f395
1000f386:	mov    esi,DWORD PTR [edi]
1000f388:	call   0x1000ddd2
1000f38d:	test   al,al
1000f38f:	je     0x1000f35b
1000f391:	xor    eax,eax
1000f393:	jmp    0x1000f398
1000f395:	xor    eax,eax
1000f397:	inc    eax
1000f398:	mov    ecx,DWORD PTR [ebp-0x4]
1000f39b:	xor    ecx,ebp
1000f39d:	pop    esi
1000f39e:	call   0x10042f87
1000f3a3:	leave  
1000f3a4:	ret    
1000f3a5:	push   0x2c
1000f3a7:	mov    eax,0x100644cc
1000f3ac:	call   0x10059b8e
1000f3b1:	mov    eax,DWORD PTR [ebp+0x8]
1000f3b4:	mov    ebx,ecx
1000f3b6:	mov    DWORD PTR [ebp-0x34],eax
1000f3b9:	lea    eax,[ebp-0x30]
1000f3bc:	mov    edi,ebx
1000f3be:	call   0x1000f48e
1000f3c3:	xor    edi,edi
1000f3c5:	cmp    eax,edi
1000f3c7:	jne    0x1000f486
1000f3cd:	jmp    0x1000f3d1
1000f3cf:	xor    edi,edi
1000f3d1:	cmp    DWORD PTR [ebp-0x30],edi
1000f3d4:	push   edi
1000f3d5:	je     0x1000f456
1000f3d7:	lea    ecx,[ebp-0x2c]
1000f3da:	mov    DWORD PTR [ebp-0x14],0xf
1000f3e1:	call   0x10001417
1000f3e6:	mov    DWORD PTR [ebp-0x4],edi
1000f3e9:	push   DWORD PTR [ebp-0x30]
1000f3ec:	lea    eax,[ebp-0x2c]
1000f3ef:	push   eax
1000f3f0:	push   ebx
1000f3f1:	call   0x1000f294
1000f3f6:	mov    esi,eax
1000f3f8:	cmp    esi,edi
1000f3fa:	push   edi
1000f3fb:	jne    0x1000f470
1000f3fd:	sub    esp,0x1c
1000f400:	mov    ecx,esp
1000f402:	mov    DWORD PTR [ebp-0x38],esp
1000f405:	push   0x1006d3b0
1000f40a:	call   0x100011c8
1000f40f:	call   0x1000ee17
1000f414:	mov    esi,eax
1000f416:	cmp    esi,edi
1000f418:	jne    0x1000f46f
1000f41a:	mov    esi,DWORD PTR [ebp-0x34]
1000f41d:	push   0xffffffff
1000f41f:	push   edi
1000f420:	lea    eax,[ebp-0x2c]
1000f423:	call   0x10004ce1
1000f428:	mov    eax,esi
1000f42a:	cmp    DWORD PTR [eax+0x14],0xf4240
1000f431:	push   edi
1000f432:	lea    ecx,[ebp-0x2c]
1000f435:	push   0x1
1000f437:	jae    0x1000f47e
1000f439:	or     DWORD PTR [ebp-0x4],0xffffffff
1000f43d:	call   0x100012eb
1000f442:	lea    eax,[ebp-0x30]
1000f445:	mov    edi,ebx
1000f447:	call   0x1000f48e
1000f44c:	test   eax,eax
1000f44e:	je     0x1000f3cf
1000f454:	jmp    0x1000f486
1000f456:	sub    esp,0x1c
1000f459:	mov    ecx,esp
1000f45b:	mov    DWORD PTR [ebp-0x38],esp
1000f45e:	push   0x1006d3b0
1000f463:	call   0x100011c8
1000f468:	call   0x1000ee17
1000f46d:	jmp    0x1000f486
1000f46f:	push   edi
1000f470:	push   0x1
1000f472:	lea    ecx,[ebp-0x2c]
1000f475:	call   0x100012eb
1000f47a:	mov    eax,esi
1000f47c:	jmp    0x1000f486
1000f47e:	call   0x100012eb
1000f483:	xor    eax,eax
1000f485:	inc    eax
1000f486:	call   0x10059c11
1000f48b:	ret    0x4
1000f48e:	push   ebp
1000f48f:	mov    ebp,esp
1000f491:	push   ecx
1000f492:	push   ecx
1000f493:	and    DWORD PTR [ebp-0x8],0x0
1000f497:	push   ebx
1000f498:	mov    ebx,eax
1000f49a:	and    DWORD PTR [ebx],0x0
1000f49d:	push   esi
1000f49e:	jmp    0x1000f4ed
1000f4a0:	mov    eax,DWORD PTR [edi]
1000f4a2:	call   0x1000df23
1000f4a7:	movsx  esi,al
1000f4aa:	push   esi
1000f4ab:	mov    BYTE PTR [ebp-0x1],al
1000f4ae:	call   0x10045ec1
1000f4b3:	pop    ecx
1000f4b4:	mov    cl,BYTE PTR [ebp-0x1]
1000f4b7:	sub    cl,0x30
1000f4ba:	cmp    cl,0x9
1000f4bd:	mov    BYTE PTR [ebp-0x1],cl
1000f4c0:	jbe    0x1000f4ca
1000f4c2:	cmp    al,0x61
1000f4c4:	jl     0x1000f4fd
1000f4c6:	cmp    al,0x66
1000f4c8:	jg     0x1000f4fd
1000f4ca:	mov    eax,DWORD PTR [edi]
1000f4cc:	call   0x1000df41
1000f4d1:	mov    eax,DWORD PTR [ebx]
1000f4d3:	shl    eax,0x4
1000f4d6:	cmp    BYTE PTR [ebp-0x1],0x9
1000f4da:	mov    DWORD PTR [ebx],eax
1000f4dc:	ja     0x1000f4e4
1000f4de:	lea    eax,[eax+esi*1-0x30]
1000f4e2:	jmp    0x1000f4e8
1000f4e4:	lea    eax,[eax+esi*1-0x57]
1000f4e8:	inc    DWORD PTR [ebp-0x8]
1000f4eb:	mov    DWORD PTR [ebx],eax
1000f4ed:	mov    esi,DWORD PTR [edi]
1000f4ef:	call   0x1000ddd2
1000f4f4:	test   al,al
1000f4f6:	je     0x1000f4a0
1000f4f8:	xor    eax,eax
1000f4fa:	inc    eax
1000f4fb:	jmp    0x1000f53d
1000f4fd:	cmp    DWORD PTR [ebp-0x8],0x0
1000f501:	jne    0x1000f517
1000f503:	jmp    0x1000f4f8
1000f505:	mov    eax,DWORD PTR [edi]
1000f507:	call   0x1000df23
1000f50c:	cmp    al,0xd
1000f50e:	je     0x1000f522
1000f510:	mov    eax,DWORD PTR [edi]
1000f512:	call   0x1000df41
1000f517:	mov    esi,DWORD PTR [edi]
1000f519:	call   0x1000ddd2
1000f51e:	test   al,al
1000f520:	je     0x1000f505
1000f522:	push   0x0
1000f524:	sub    esp,0x1c
1000f527:	mov    ecx,esp
1000f529:	mov    DWORD PTR [ebp-0x8],esp
1000f52c:	push   0x1006d3b0
1000f531:	call   0x100011c8
1000f536:	mov    ebx,edi
1000f538:	call   0x1000ee17
1000f53d:	pop    esi
1000f53e:	pop    ebx
1000f53f:	leave  
1000f540:	ret    
1000f541:	push   ebp
1000f542:	mov    ebp,esp
1000f544:	push   ecx
1000f545:	push   ecx
1000f546:	push   DWORD PTR [ebp+0xc]
1000f549:	and    DWORD PTR [ebp-0x4],0x0
1000f54d:	push   DWORD PTR [ebp+0x8]
1000f550:	call   0x1000f55c
1000f555:	mov    eax,DWORD PTR [ebp+0x8]
1000f558:	pop    ecx
1000f559:	pop    ecx
1000f55a:	leave  
1000f55b:	ret    
1000f55c:	push   0x34
1000f55e:	mov    eax,0x10063615
1000f563:	call   0x10059b25
1000f568:	mov    edi,DWORD PTR [ebp+0x8]
1000f56b:	xor    esi,esi
1000f56d:	mov    DWORD PTR [ebp-0x10],esi
1000f570:	mov    DWORD PTR [edi+0x4],esi
1000f573:	mov    DWORD PTR [edi+0x8],esi
1000f576:	mov    DWORD PTR [edi+0xc],esi
1000f579:	mov    DWORD PTR [ebp-0x4],esi
1000f57c:	push   DWORD PTR ds:0x10081438
1000f582:	mov    DWORD PTR [ebp-0x10],0x1
1000f589:	call   0x10043100
1000f58e:	pop    ecx
1000f58f:	mov    DWORD PTR [ebp-0x14],eax
1000f592:	push   esi
1000f593:	push   DWORD PTR ds:0x10081438
1000f599:	push   DWORD PTR [ebp+0xc]
1000f59c:	call   0x1000c970
1000f5a1:	mov    ebx,eax
1000f5a3:	cmp    ebx,0xffffffff
1000f5a6:	jne    0x1000f5ae
1000f5a8:	mov    eax,DWORD PTR [ebp+0xc]
1000f5ab:	mov    ebx,DWORD PTR [eax+0x14]
1000f5ae:	cmp    ebx,esi
1000f5b0:	jb     0x1000f600
1000f5b2:	mov    eax,ebx
1000f5b4:	sub    eax,esi
1000f5b6:	push   eax
1000f5b7:	push   esi
1000f5b8:	push   DWORD PTR [ebp+0xc]
1000f5bb:	lea    eax,[ebp-0x40]
1000f5be:	call   0x1000c98f
1000f5c3:	push   eax
1000f5c4:	lea    eax,[ebp-0x24]
1000f5c7:	push   eax
1000f5c8:	mov    DWORD PTR [ebp-0x4],0x1
1000f5cf:	call   0x1000f610
1000f5d4:	pop    ecx
1000f5d5:	pop    ecx
1000f5d6:	push   eax
1000f5d7:	mov    esi,edi
1000f5d9:	mov    BYTE PTR [ebp-0x4],0x2
1000f5dd:	call   0x1000f6cb
1000f5e2:	lea    esi,[ebp-0x24]
1000f5e5:	call   0x100049d4
1000f5ea:	push   0x0
1000f5ec:	push   0x1
1000f5ee:	lea    ecx,[ebp-0x40]
1000f5f1:	mov    BYTE PTR [ebp-0x4],0x0
1000f5f5:	call   0x100012eb
1000f5fa:	mov    eax,DWORD PTR [ebp-0x14]
1000f5fd:	lea    esi,[ebx+eax*1]
1000f600:	mov    eax,DWORD PTR [ebp+0xc]
1000f603:	cmp    esi,DWORD PTR [eax+0x14]
1000f606:	jb     0x1000f592
1000f608:	mov    eax,edi
1000f60a:	call   0x10059bfd
1000f60f:	ret    
1000f610:	push   0x44
1000f612:	mov    eax,0x10060eb6
1000f617:	call   0x10059b25
1000f61c:	mov    esi,DWORD PTR [ebp+0x8]
1000f61f:	xor    ebx,ebx
1000f621:	mov    DWORD PTR [ebp-0x14],ebx
1000f624:	mov    DWORD PTR [esi+0x4],ebx
1000f627:	mov    DWORD PTR [esi+0x8],ebx
1000f62a:	mov    DWORD PTR [esi+0xc],ebx
1000f62d:	xor    edi,edi
1000f62f:	inc    edi
1000f630:	mov    DWORD PTR [ebp-0x4],ebx
1000f633:	push   0x1006dcc4
1000f638:	mov    DWORD PTR [ebp-0x14],edi
1000f63b:	call   0x10043100
1000f640:	pop    ecx
1000f641:	mov    DWORD PTR [ebp-0x18],eax
1000f644:	mov    DWORD PTR [ebp-0x10],ebx
1000f647:	push   DWORD PTR [ebp-0x10]
1000f64a:	push   0x1006dcc4
1000f64f:	push   DWORD PTR [ebp+0xc]
1000f652:	call   0x1000c970
1000f657:	mov    ebx,eax
1000f659:	cmp    ebx,0xffffffff
1000f65c:	jne    0x1000f664
1000f65e:	mov    eax,DWORD PTR [ebp+0xc]
1000f661:	mov    ebx,DWORD PTR [eax+0x14]
1000f664:	cmp    ebx,DWORD PTR [ebp-0x10]
1000f667:	jb     0x1000f6b8
1000f669:	mov    eax,ebx
1000f66b:	sub    eax,DWORD PTR [ebp-0x10]
1000f66e:	push   eax
1000f66f:	push   DWORD PTR [ebp-0x10]
1000f672:	lea    eax,[ebp-0x50]
1000f675:	push   DWORD PTR [ebp+0xc]
1000f678:	call   0x1000c98f
1000f67d:	lea    ecx,[ebp-0x34]
1000f680:	push   ecx
1000f681:	mov    ecx,eax
1000f683:	mov    DWORD PTR [ebp-0x4],edi
1000f686:	call   0x1002dec2
1000f68b:	pop    ecx
1000f68c:	push   eax
1000f68d:	mov    BYTE PTR [ebp-0x4],0x2
1000f691:	call   0x1000f890
1000f696:	push   0x0
1000f698:	push   edi
1000f699:	lea    ecx,[ebp-0x34]
1000f69c:	call   0x100012eb
1000f6a1:	push   0x0
1000f6a3:	push   edi
1000f6a4:	lea    ecx,[ebp-0x50]
1000f6a7:	mov    BYTE PTR [ebp-0x4],0x0
1000f6ab:	call   0x100012eb
1000f6b0:	mov    eax,DWORD PTR [ebp-0x18]
1000f6b3:	add    ebx,eax
1000f6b5:	mov    DWORD PTR [ebp-0x10],ebx
1000f6b8:	mov    eax,DWORD PTR [ebp-0x10]
1000f6bb:	mov    ecx,DWORD PTR [ebp+0xc]
1000f6be:	cmp    eax,DWORD PTR [ecx+0x14]
1000f6c1:	jb     0x1000f647
1000f6c3:	mov    eax,esi
1000f6c5:	call   0x10059bfd
1000f6ca:	ret    
1000f6cb:	push   ebp
1000f6cc:	mov    ebp,esp
1000f6ce:	sub    esp,0xc
1000f6d1:	push   ebx
1000f6d2:	mov    ebx,DWORD PTR [esi+0x4]
1000f6d5:	test   ebx,ebx
1000f6d7:	push   edi
1000f6d8:	jne    0x1000f6de
1000f6da:	xor    edi,edi
1000f6dc:	jmp    0x1000f6e6
1000f6de:	mov    edi,DWORD PTR [esi+0xc]
1000f6e1:	sub    edi,ebx
1000f6e3:	sar    edi,0x4
1000f6e6:	mov    eax,esi
1000f6e8:	call   0x1000c9ed
1000f6ed:	cmp    eax,edi
1000f6ef:	jae    0x1000f703
1000f6f1:	push   DWORD PTR [ebp+0x8]
1000f6f4:	push   0x1
1000f6f6:	push   DWORD PTR [esi+0x8]
1000f6f9:	call   0x1000f7cc
1000f6fe:	mov    DWORD PTR [esi+0x8],eax
1000f701:	jmp    0x1000f71f
1000f703:	mov    edi,DWORD PTR [esi+0x8]
1000f706:	cmp    ebx,edi
1000f708:	jbe    0x1000f70f
1000f70a:	call   0x100434a0
1000f70f:	push   edi
1000f710:	push   esi
1000f711:	push   DWORD PTR [ebp+0x8]
1000f714:	lea    eax,[ebp-0xc]
1000f717:	push   eax
1000f718:	mov    eax,esi
1000f71a:	call   0x1000f725
1000f71f:	pop    edi
1000f720:	pop    ebx
1000f721:	leave  
1000f722:	ret    0x4
1000f725:	push   ebp
1000f726:	mov    ebp,esp
1000f728:	push   ecx
1000f729:	push   ebx
1000f72a:	push   esi
1000f72b:	push   edi
1000f72c:	mov    esi,eax
1000f72e:	call   0x1000c9ed
1000f733:	test   eax,eax
1000f735:	jne    0x1000f73b
1000f737:	xor    edi,edi
1000f739:	jmp    0x1000f760
1000f73b:	mov    ebx,DWORD PTR [esi+0x4]
1000f73e:	cmp    ebx,DWORD PTR [esi+0x8]
1000f741:	jbe    0x1000f748
1000f743:	call   0x100434a0
1000f748:	cmp    DWORD PTR [ebp+0x10],0x0
1000f74c:	je     0x1000f753
1000f74e:	cmp    DWORD PTR [ebp+0x10],esi
1000f751:	je     0x1000f758
1000f753:	call   0x100434a0
1000f758:	mov    edi,DWORD PTR [ebp+0x14]
1000f75b:	sub    edi,ebx
1000f75d:	sar    edi,0x4
1000f760:	push   DWORD PTR [ebp+0x14]
1000f763:	mov    ecx,DWORD PTR [ebp+0xc]
1000f766:	push   DWORD PTR [ebp+0x10]
1000f769:	push   esi
1000f76a:	call   0x1000f9c2
1000f76f:	mov    ebx,DWORD PTR [esi+0x4]
1000f772:	cmp    ebx,DWORD PTR [esi+0x8]
1000f775:	jbe    0x1000f77c
1000f777:	call   0x100434a0
1000f77c:	shl    edi,0x4
1000f77f:	add    edi,ebx
1000f781:	cmp    edi,DWORD PTR [esi+0x8]
1000f784:	mov    DWORD PTR [ebp+0x14],ebx
1000f787:	ja     0x1000f78e
1000f789:	cmp    edi,DWORD PTR [esi+0x4]
1000f78c:	jae    0x1000f793
1000f78e:	call   0x100434a0
1000f793:	mov    eax,DWORD PTR [ebp+0x8]
1000f796:	mov    DWORD PTR [eax+0x4],edi
1000f799:	pop    edi
1000f79a:	mov    DWORD PTR [eax],esi
1000f79c:	pop    esi
1000f79d:	pop    ebx
1000f79e:	pop    ecx
1000f79f:	pop    ebp
1000f7a0:	ret    0x10
1000f7a3:	push   esi
1000f7a4:	mov    esi,eax
1000f7a6:	cmp    esi,0xfffffff
1000f7ac:	jbe    0x1000f7b3
1000f7ae:	jmp    0x1000fb8b
1000f7b3:	mov    ecx,esi
1000f7b5:	call   0x1000fbca
1000f7ba:	shl    esi,0x4
1000f7bd:	add    esi,eax
1000f7bf:	mov    DWORD PTR [edi+0x4],eax
1000f7c2:	mov    DWORD PTR [edi+0x8],eax
1000f7c5:	mov    DWORD PTR [edi+0xc],esi
1000f7c8:	mov    al,0x1
1000f7ca:	pop    esi
1000f7cb:	ret    
1000f7cc:	push   ebp
1000f7cd:	mov    ebp,esp
1000f7cf:	push   ecx
1000f7d0:	push   ecx
1000f7d1:	push   edi
1000f7d2:	xor    eax,eax
1000f7d4:	lea    edi,[ebp-0x4]
1000f7d7:	stos   BYTE PTR es:[edi],al
1000f7d8:	push   DWORD PTR [ebp-0x4]
1000f7db:	push   DWORD PTR [ebp+0xc]
1000f7de:	push   DWORD PTR [ebp+0x10]
1000f7e1:	push   DWORD PTR [ebp+0xc]
1000f7e4:	push   DWORD PTR [ebp+0x8]
1000f7e7:	call   0x1000ff5e
1000f7ec:	mov    eax,DWORD PTR [ebp+0xc]
1000f7ef:	add    esp,0x14
1000f7f2:	shl    eax,0x4
1000f7f5:	add    eax,DWORD PTR [ebp+0x8]
1000f7f8:	pop    edi
1000f7f9:	leave  
1000f7fa:	ret    0xc
1000f7fd:	push   0x10
1000f7ff:	mov    eax,0x10060e72
1000f804:	call   0x10059b58
1000f809:	mov    ebx,ecx
1000f80b:	mov    esi,DWORD PTR [ebp+0x8]
1000f80e:	mov    eax,ebx
1000f810:	call   0x10004660
1000f815:	xor    ecx,ecx
1000f817:	cmp    eax,ecx
1000f819:	mov    DWORD PTR [esi+0x4],ecx
1000f81c:	mov    DWORD PTR [esi+0x8],ecx
1000f81f:	mov    DWORD PTR [esi+0xc],ecx
1000f822:	je     0x1000f874
1000f824:	mov    edi,esi
1000f826:	call   0x100049ab
1000f82b:	test   al,al
1000f82d:	je     0x1000f874
1000f82f:	and    DWORD PTR [ebp-0x4],0x0
1000f833:	mov    eax,DWORD PTR [ebx+0x8]
1000f836:	cmp    DWORD PTR [ebx+0x4],eax
1000f839:	mov    DWORD PTR [ebp-0x18],eax
1000f83c:	jbe    0x1000f843
1000f83e:	call   0x100434a0
1000f843:	mov    eax,DWORD PTR [ebx+0x4]
1000f846:	cmp    eax,DWORD PTR [ebx+0x8]
1000f849:	mov    DWORD PTR [ebp-0x1c],eax
1000f84c:	jbe    0x1000f853
1000f84e:	call   0x100434a0
1000f853:	mov    ecx,DWORD PTR [esi+0x4]
1000f856:	xor    eax,eax
1000f858:	lea    edi,[ebp-0x14]
1000f85b:	stos   BYTE PTR es:[edi],al
1000f85c:	push   DWORD PTR [ebp-0x14]
1000f85f:	push   DWORD PTR [ebp+0x8]
1000f862:	push   ecx
1000f863:	push   DWORD PTR [ebp-0x18]
1000f866:	mov    ecx,DWORD PTR [ebp-0x1c]
1000f869:	call   0x1001034a
1000f86e:	add    esp,0x10
1000f871:	mov    DWORD PTR [esi+0x8],eax
1000f874:	mov    eax,esi
1000f876:	call   0x10059bfd
1000f87b:	ret    0x4
1000f87e:	mov    esi,DWORD PTR [ebp+0x8]
1000f881:	call   0x100049d4
1000f886:	push   0x0
1000f888:	push   0x0
1000f88a:	call   0x10047aa4
1000f88f:	int3   
1000f890:	push   ebp
1000f891:	mov    ebp,esp
1000f893:	sub    esp,0xc
1000f896:	push   ebx
1000f897:	push   edi
1000f898:	mov    edi,DWORD PTR [esi+0x4]
1000f89b:	test   edi,edi
1000f89d:	jne    0x1000f8a3
1000f89f:	xor    ebx,ebx
1000f8a1:	jmp    0x1000f8b0
1000f8a3:	mov    eax,DWORD PTR [esi+0xc]
1000f8a6:	sub    eax,edi
1000f8a8:	push   0x1c
1000f8aa:	cdq    
1000f8ab:	pop    ecx
1000f8ac:	idiv   ecx
1000f8ae:	mov    ebx,eax
1000f8b0:	mov    eax,esi
1000f8b2:	call   0x10004660
1000f8b7:	cmp    eax,ebx
1000f8b9:	jae    0x1000f8cd
1000f8bb:	push   DWORD PTR [ebp+0x8]
1000f8be:	push   0x1
1000f8c0:	push   DWORD PTR [esi+0x8]
1000f8c3:	call   0x1000fc98
1000f8c8:	mov    DWORD PTR [esi+0x8],eax
1000f8cb:	jmp    0x1000f8e9
1000f8cd:	mov    ebx,DWORD PTR [esi+0x8]
1000f8d0:	cmp    edi,ebx
1000f8d2:	jbe    0x1000f8d9
1000f8d4:	call   0x100434a0
1000f8d9:	push   ebx
1000f8da:	push   esi
1000f8db:	push   DWORD PTR [ebp+0x8]
1000f8de:	lea    eax,[ebp-0xc]
1000f8e1:	push   eax
1000f8e2:	mov    eax,esi
1000f8e4:	call   0x1000fc14
1000f8e9:	pop    edi
1000f8ea:	pop    ebx
1000f8eb:	leave  
1000f8ec:	ret    0x4
1000f8ef:	push   ebp
1000f8f0:	mov    ebp,esp
1000f8f2:	push   ecx
1000f8f3:	push   ecx
1000f8f4:	mov    ecx,DWORD PTR [ebx+0x14]
1000f8f7:	test   ecx,ecx
1000f8f9:	push   esi
1000f8fa:	push   edi
1000f8fb:	mov    BYTE PTR [ebp-0x4],0x20
1000f8ff:	jbe    0x1000f942
1000f901:	mov    edx,DWORD PTR [ebx+0x18]
1000f904:	cmp    edx,0x10
1000f907:	lea    esi,[ebx+0x4]
1000f90a:	jb     0x1000f910
1000f90c:	mov    eax,DWORD PTR [esi]
1000f90e:	jmp    0x1000f912
1000f910:	mov    eax,esi
1000f912:	add    eax,ecx
1000f914:	cmp    edx,0x10
1000f917:	mov    DWORD PTR [ebp-0x8],eax
1000f91a:	jb     0x1000f920
1000f91c:	mov    edi,DWORD PTR [esi]
1000f91e:	jmp    0x1000f922
1000f920:	mov    edi,esi
1000f922:	cmp    edi,eax
1000f924:	jae    0x1000f942
1000f926:	movsx  eax,BYTE PTR [edi]
1000f929:	push   0x1
1000f92b:	push   eax
1000f92c:	lea    eax,[ebp-0x4]
1000f92f:	push   eax
1000f930:	call   0x10045c40
1000f935:	add    esp,0xc
1000f938:	test   eax,eax
1000f93a:	je     0x1000f949
1000f93c:	inc    edi
1000f93d:	cmp    edi,DWORD PTR [ebp-0x8]
1000f940:	jb     0x1000f926
1000f942:	or     eax,0xffffffff
1000f945:	pop    edi
1000f946:	pop    esi
1000f947:	leave  
1000f948:	ret    
1000f949:	cmp    DWORD PTR [ebx+0x18],0x10
1000f94d:	jb     0x1000f951
1000f94f:	mov    esi,DWORD PTR [esi]
1000f951:	sub    edi,esi
1000f953:	mov    eax,edi
1000f955:	jmp    0x1000f945
1000f957:	push   ebp
1000f958:	mov    ebp,esp
1000f95a:	push   ecx
1000f95b:	mov    eax,DWORD PTR [ebx+0x14]
1000f95e:	test   eax,eax
1000f960:	push   esi
1000f961:	push   edi
1000f962:	mov    BYTE PTR [ebp-0x4],0x20
1000f966:	jbe    0x1000f9bb
1000f968:	or     ecx,0xffffffff
1000f96b:	cmp    eax,ecx
1000f96d:	ja     0x1000f972
1000f96f:	lea    ecx,[eax-0x1]
1000f972:	cmp    DWORD PTR [ebx+0x18],0x10
1000f976:	lea    edi,[ebx+0x4]
1000f979:	jb     0x1000f97f
1000f97b:	mov    eax,DWORD PTR [edi]
1000f97d:	jmp    0x1000f981
1000f97f:	mov    eax,edi
1000f981:	lea    esi,[eax+ecx*1]
1000f984:	jmp    0x1000f997
1000f986:	cmp    DWORD PTR [ebx+0x18],0x10
1000f98a:	jb     0x1000f990
1000f98c:	mov    eax,DWORD PTR [edi]
1000f98e:	jmp    0x1000f992
1000f990:	mov    eax,edi
1000f992:	cmp    esi,eax
1000f994:	je     0x1000f9bb
1000f996:	dec    esi
1000f997:	movsx  eax,BYTE PTR [esi]
1000f99a:	push   0x1
1000f99c:	push   eax
1000f99d:	lea    eax,[ebp-0x4]
1000f9a0:	push   eax
1000f9a1:	call   0x10045c40
1000f9a6:	add    esp,0xc
1000f9a9:	test   eax,eax
1000f9ab:	jne    0x1000f986
1000f9ad:	cmp    DWORD PTR [ebx+0x18],0x10
1000f9b1:	jb     0x1000f9b5
1000f9b3:	mov    edi,DWORD PTR [edi]
1000f9b5:	sub    esi,edi
1000f9b7:	mov    eax,esi
1000f9b9:	jmp    0x1000f9be
1000f9bb:	or     eax,0xffffffff
1000f9be:	pop    edi
1000f9bf:	pop    esi
1000f9c0:	leave  
1000f9c1:	ret    
1000f9c2:	push   0x18
1000f9c4:	mov    eax,0x10062d35
1000f9c9:	call   0x10059b58
1000f9ce:	mov    esi,DWORD PTR [ebp+0x8]
1000f9d1:	lea    eax,[ebp-0x24]
1000f9d4:	push   eax
1000f9d5:	call   0x1000f7fd
1000f9da:	xor    edi,edi
1000f9dc:	mov    DWORD PTR [ebp-0x4],edi
1000f9df:	mov    eax,DWORD PTR [esi+0x4]
1000f9e2:	cmp    eax,edi
1000f9e4:	je     0x1000f9ee
1000f9e6:	mov    edi,DWORD PTR [esi+0xc]
1000f9e9:	sub    edi,eax
1000f9eb:	sar    edi,0x4
1000f9ee:	mov    eax,esi
1000f9f0:	call   0x1000c9ed
1000f9f5:	mov    ebx,0xfffffff
1000f9fa:	mov    ecx,ebx
1000f9fc:	sub    ecx,eax
1000f9fe:	cmp    ecx,0x1
1000fa01:	jae    0x1000fa08
1000fa03:	call   0x1000fb8b
1000fa08:	mov    eax,esi
1000fa0a:	call   0x1000c9ed
1000fa0f:	inc    eax
1000fa10:	cmp    edi,eax
1000fa12:	jae    0x1000fad3
1000fa18:	mov    eax,edi
1000fa1a:	shr    eax,1
1000fa1c:	sub    ebx,eax
1000fa1e:	cmp    ebx,edi
1000fa20:	jae    0x1000fa26
1000fa22:	xor    edi,edi
1000fa24:	jmp    0x1000fa28
1000fa26:	add    edi,eax
1000fa28:	mov    eax,esi
1000fa2a:	call   0x1000c9ed
1000fa2f:	inc    eax
1000fa30:	cmp    edi,eax
1000fa32:	jae    0x1000fa3e
1000fa34:	mov    eax,esi
1000fa36:	call   0x1000c9ed
1000fa3b:	mov    edi,eax
1000fa3d:	inc    edi
1000fa3e:	mov    ecx,edi
1000fa40:	call   0x1000fbca
1000fa45:	push   eax
1000fa46:	push   DWORD PTR [ebp+0x10]
1000fa49:	mov    BYTE PTR [ebp-0x4],0x1
1000fa4d:	mov    ecx,DWORD PTR [esi+0x4]
1000fa50:	mov    DWORD PTR [ebp-0x14],eax
1000fa53:	mov    DWORD PTR [ebp+0x8],eax
1000fa56:	call   0x1000fec3
1000fa5b:	lea    ecx,[ebp-0x24]
1000fa5e:	push   ecx
1000fa5f:	push   0x1
1000fa61:	push   eax
1000fa62:	mov    DWORD PTR [ebp+0x8],eax
1000fa65:	call   0x1000f7cc
1000fa6a:	mov    ecx,DWORD PTR [ebp+0x10]
1000fa6d:	push   eax
1000fa6e:	push   DWORD PTR [esi+0x8]
1000fa71:	mov    DWORD PTR [ebp+0x8],eax
1000fa74:	call   0x1000fec3
1000fa79:	mov    eax,esi
1000fa7b:	call   0x1000c9ed
1000fa80:	mov    ebx,eax
1000fa82:	mov    eax,DWORD PTR [esi+0x4]
1000fa85:	inc    ebx
1000fa86:	test   eax,eax
1000fa88:	je     0x1000fa9b
1000fa8a:	push   DWORD PTR [esi+0x8]
1000fa8d:	call   0x1000d45a
1000fa92:	push   DWORD PTR [esi+0x4]
1000fa95:	call   0x10042f82
1000fa9a:	pop    ecx
1000fa9b:	mov    eax,DWORD PTR [ebp-0x14]
1000fa9e:	shl    edi,0x4
1000faa1:	add    edi,eax
1000faa3:	shl    ebx,0x4
1000faa6:	add    ebx,eax
1000faa8:	mov    DWORD PTR [esi+0xc],edi
1000faab:	mov    DWORD PTR [esi+0x8],ebx
1000faae:	mov    DWORD PTR [esi+0x4],eax
1000fab1:	jmp    0x1000fb7b
1000fab6:	push   DWORD PTR [ebp+0x8]
1000fab9:	mov    eax,DWORD PTR [ebp-0x14]
1000fabc:	call   0x1000d45a
1000fac1:	push   DWORD PTR [ebp-0x14]
1000fac4:	call   0x10042f82
1000fac9:	pop    ecx
1000faca:	push   0x0
1000facc:	push   0x0
1000face:	call   0x10047aa4
1000fad3:	mov    ebx,DWORD PTR [esi+0x8]
1000fad6:	mov    edi,DWORD PTR [ebp+0x10]
1000fad9:	mov    eax,ebx
1000fadb:	sub    eax,edi
1000fadd:	sar    eax,0x4
1000fae0:	cmp    eax,0x1
1000fae3:	jae    0x1000fb49
1000fae5:	lea    eax,[edi+0x10]
1000fae8:	push   eax
1000fae9:	push   ebx
1000faea:	mov    ecx,edi
1000faec:	call   0x1000fec3
1000faf1:	mov    BYTE PTR [ebp-0x4],0x3
1000faf5:	mov    eax,DWORD PTR [esi+0x8]
1000faf8:	lea    ecx,[ebp-0x24]
1000fafb:	push   ecx
1000fafc:	mov    ecx,eax
1000fafe:	xor    edx,edx
1000fb00:	sub    ecx,edi
1000fb02:	sar    ecx,0x4
1000fb05:	inc    edx
1000fb06:	sub    edx,ecx
1000fb08:	push   edx
1000fb09:	push   eax
1000fb0a:	call   0x1000f7cc
1000fb0f:	and    DWORD PTR [ebp-0x4],0x0
1000fb13:	add    DWORD PTR [esi+0x8],0x10
1000fb17:	mov    esi,DWORD PTR [esi+0x8]
1000fb1a:	add    esi,0xfffffff0
1000fb1d:	jmp    0x1000fb2c
1000fb1f:	lea    eax,[ebp-0x24]
1000fb22:	mov    ecx,edi
1000fb24:	call   0x1001004b
1000fb29:	add    edi,0x10
1000fb2c:	cmp    edi,esi
1000fb2e:	jne    0x1000fb1f
1000fb30:	jmp    0x1000fb7b
1000fb32:	mov    eax,DWORD PTR [ebp+0x8]
1000fb35:	mov    eax,DWORD PTR [eax+0x8]
1000fb38:	add    eax,0x10
1000fb3b:	push   eax
1000fb3c:	mov    eax,DWORD PTR [ebp+0x10]
1000fb3f:	add    eax,0x10
1000fb42:	call   0x1000d45a
1000fb47:	jmp    0x1000faca
1000fb49:	push   ebx
1000fb4a:	lea    ecx,[ebx-0x10]
1000fb4d:	push   ebx
1000fb4e:	mov    DWORD PTR [ebp+0x8],ecx
1000fb51:	call   0x1000fec3
1000fb56:	mov    ecx,DWORD PTR [ebp+0x8]
1000fb59:	mov    DWORD PTR [esi+0x8],eax
1000fb5c:	push   edi
1000fb5d:	mov    eax,ebx
1000fb5f:	call   0x1000fee7
1000fb64:	pop    ecx
1000fb65:	lea    esi,[edi+0x10]
1000fb68:	jmp    0x1000fb77
1000fb6a:	lea    eax,[ebp-0x24]
1000fb6d:	mov    ecx,edi
1000fb6f:	call   0x1001004b
1000fb74:	add    edi,0x10
1000fb77:	cmp    edi,esi
1000fb79:	jne    0x1000fb6a
1000fb7b:	lea    esi,[ebp-0x24]
1000fb7e:	call   0x100049d4
1000fb83:	call   0x10059bfd
1000fb88:	ret    0xc
1000fb8b:	push   0x44
1000fb8d:	mov    eax,0x10060374
1000fb92:	call   0x10059b25
1000fb97:	push   0x1006d018
1000fb9c:	lea    ecx,[ebp-0x28]
1000fb9f:	call   0x100011c8
1000fba4:	and    DWORD PTR [ebp-0x4],0x0
1000fba8:	lea    eax,[ebp-0x28]
1000fbab:	push   eax
1000fbac:	lea    ecx,[ebp-0x50]
1000fbaf:	call   0x10001065
1000fbb4:	push   0x10074ec8
1000fbb9:	lea    eax,[ebp-0x50]
1000fbbc:	push   eax
1000fbbd:	mov    DWORD PTR [ebp-0x50],0x1006b96c
1000fbc4:	call   0x10047aa4
1000fbc9:	int3   
1000fbca:	push   ebp
1000fbcb:	mov    ebp,esp
1000fbcd:	sub    esp,0x10
1000fbd0:	test   ecx,ecx
1000fbd2:	ja     0x1000fbe2
1000fbd4:	xor    ecx,ecx
1000fbd6:	shl    ecx,0x4
1000fbd9:	push   ecx
1000fbda:	call   0x1004358e
1000fbdf:	pop    ecx
1000fbe0:	leave  
1000fbe1:	ret    
1000fbe2:	or     eax,0xffffffff
1000fbe5:	xor    edx,edx
1000fbe7:	div    ecx
1000fbe9:	cmp    eax,0x10
1000fbec:	jae    0x1000fbd6
1000fbee:	and    DWORD PTR [ebp-0x4],0x0
1000fbf2:	lea    eax,[ebp-0x4]
1000fbf5:	push   eax
1000fbf6:	lea    ecx,[ebp-0x10]
1000fbf9:	call   0x10043002
1000fbfe:	push   0x10074e20
1000fc03:	lea    eax,[ebp-0x10]
1000fc06:	push   eax
1000fc07:	mov    DWORD PTR [ebp-0x10],0x100665c8
1000fc0e:	call   0x10047aa4
1000fc13:	int3   
1000fc14:	push   ebp
1000fc15:	mov    ebp,esp
1000fc17:	push   ecx
1000fc18:	push   ebx
1000fc19:	push   esi
1000fc1a:	push   edi
1000fc1b:	mov    esi,eax
1000fc1d:	call   0x10004660
1000fc22:	test   eax,eax
1000fc24:	jne    0x1000fc2a
1000fc26:	xor    ebx,ebx
1000fc28:	jmp    0x1000fc54
1000fc2a:	mov    edi,DWORD PTR [esi+0x4]
1000fc2d:	cmp    edi,DWORD PTR [esi+0x8]
1000fc30:	jbe    0x1000fc37
1000fc32:	call   0x100434a0
1000fc37:	cmp    DWORD PTR [ebp+0x10],0x0
1000fc3b:	je     0x1000fc42
1000fc3d:	cmp    DWORD PTR [ebp+0x10],esi
1000fc40:	je     0x1000fc47
1000fc42:	call   0x100434a0
1000fc47:	mov    eax,DWORD PTR [ebp+0x14]
1000fc4a:	sub    eax,edi
1000fc4c:	push   0x1c
1000fc4e:	cdq    
1000fc4f:	pop    ecx
1000fc50:	idiv   ecx
1000fc52:	mov    ebx,eax
1000fc54:	push   DWORD PTR [ebp+0x14]
1000fc57:	mov    ecx,esi
1000fc59:	push   DWORD PTR [ebp+0x10]
1000fc5c:	push   DWORD PTR [ebp+0xc]
1000fc5f:	call   0x1000fcc8
1000fc64:	mov    edi,DWORD PTR [esi+0x4]
1000fc67:	cmp    edi,DWORD PTR [esi+0x8]
1000fc6a:	jbe    0x1000fc71
1000fc6c:	call   0x100434a0
1000fc71:	imul   ebx,ebx,0x1c
1000fc74:	mov    DWORD PTR [ebp+0x14],edi
1000fc77:	add    edi,ebx
1000fc79:	cmp    edi,DWORD PTR [esi+0x8]
1000fc7c:	ja     0x1000fc83
1000fc7e:	cmp    edi,DWORD PTR [esi+0x4]
1000fc81:	jae    0x1000fc88
1000fc83:	call   0x100434a0
1000fc88:	mov    eax,DWORD PTR [ebp+0x8]
1000fc8b:	mov    DWORD PTR [eax+0x4],edi
1000fc8e:	pop    edi
1000fc8f:	mov    DWORD PTR [eax],esi
1000fc91:	pop    esi
1000fc92:	pop    ebx
1000fc93:	pop    ecx
1000fc94:	pop    ebp
1000fc95:	ret    0x10
1000fc98:	push   ebp
1000fc99:	mov    ebp,esp
1000fc9b:	push   ecx
1000fc9c:	push   edi
1000fc9d:	xor    eax,eax
1000fc9f:	lea    edi,[ebp-0x4]
1000fca2:	stos   BYTE PTR es:[edi],al
1000fca3:	push   DWORD PTR [ebp-0x4]
1000fca6:	push   DWORD PTR [ebp+0xc]
1000fca9:	push   DWORD PTR [ebp+0x10]
1000fcac:	push   DWORD PTR [ebp+0xc]
1000fcaf:	push   DWORD PTR [ebp+0x8]
1000fcb2:	call   0x1000ffaf
1000fcb7:	mov    eax,DWORD PTR [ebp+0xc]
1000fcba:	imul   eax,eax,0x1c
1000fcbd:	add    esp,0x14
1000fcc0:	add    eax,DWORD PTR [ebp+0x8]
1000fcc3:	pop    edi
1000fcc4:	leave  
1000fcc5:	ret    0xc
1000fcc8:	push   0x30
1000fcca:	mov    eax,0x10060e4d
1000fccf:	call   0x10059bc4
1000fcd4:	mov    eax,DWORD PTR [ebp+0x8]
1000fcd7:	mov    esi,ecx
1000fcd9:	push   eax
1000fcda:	lea    ecx,[ebp-0x30]
1000fcdd:	mov    DWORD PTR [ebp-0x34],esi
1000fce0:	call   0x100011a2
1000fce5:	xor    ebx,ebx
1000fce7:	mov    DWORD PTR [ebp-0x4],ebx
1000fcea:	mov    ecx,DWORD PTR [esi+0x4]
1000fced:	cmp    ecx,ebx
1000fcef:	je     0x1000fcfe
1000fcf1:	mov    eax,DWORD PTR [esi+0xc]
1000fcf4:	sub    eax,ecx
1000fcf6:	push   0x1c
1000fcf8:	cdq    
1000fcf9:	pop    ecx
1000fcfa:	idiv   ecx
1000fcfc:	mov    ebx,eax
1000fcfe:	mov    eax,esi
1000fd00:	call   0x10004660
1000fd05:	mov    edi,0x9249249
1000fd0a:	mov    ecx,edi
1000fd0c:	sub    ecx,eax
1000fd0e:	cmp    ecx,0x1
1000fd11:	jae    0x1000fd18
1000fd13:	call   0x1000fb8b
1000fd18:	mov    eax,esi
1000fd1a:	call   0x10004660
1000fd1f:	inc    eax
1000fd20:	cmp    ebx,eax
1000fd22:	jae    0x1000fde5
1000fd28:	mov    eax,ebx
1000fd2a:	shr    eax,1
1000fd2c:	sub    edi,eax
1000fd2e:	cmp    edi,ebx
1000fd30:	jae    0x1000fd36
1000fd32:	xor    ebx,ebx
1000fd34:	jmp    0x1000fd38
1000fd36:	add    ebx,eax
1000fd38:	mov    eax,esi
1000fd3a:	call   0x10004660
1000fd3f:	inc    eax
1000fd40:	cmp    ebx,eax
1000fd42:	jae    0x1000fd4e
1000fd44:	mov    eax,esi
1000fd46:	call   0x10004660
1000fd4b:	mov    ebx,eax
1000fd4d:	inc    ebx
1000fd4e:	mov    ecx,ebx
1000fd50:	call   0x10004ede
1000fd55:	push   DWORD PTR [ebp+0x10]
1000fd58:	mov    BYTE PTR [ebp-0x4],0x1
1000fd5c:	mov    ecx,DWORD PTR [esi+0x4]
1000fd5f:	mov    edx,eax
1000fd61:	mov    DWORD PTR [ebp-0x34],eax
1000fd64:	mov    DWORD PTR [ebp-0x38],eax
1000fd67:	call   0x1000ff3d
1000fd6c:	lea    ecx,[ebp-0x30]
1000fd6f:	push   ecx
1000fd70:	push   0x1
1000fd72:	push   eax
1000fd73:	mov    DWORD PTR [ebp-0x38],eax
1000fd76:	call   0x1000fc98
1000fd7b:	push   DWORD PTR [esi+0x8]
1000fd7e:	mov    ecx,DWORD PTR [ebp+0x10]
1000fd81:	mov    edx,eax
1000fd83:	mov    DWORD PTR [ebp-0x38],edx
1000fd86:	call   0x1000ff3d
1000fd8b:	mov    eax,esi
1000fd8d:	call   0x10004660
1000fd92:	mov    edi,eax
1000fd94:	mov    eax,DWORD PTR [esi+0x4]
1000fd97:	inc    edi
1000fd98:	test   eax,eax
1000fd9a:	je     0x1000fdad
1000fd9c:	push   DWORD PTR [esi+0x8]
1000fd9f:	call   0x10004f4e
1000fda4:	push   DWORD PTR [esi+0x4]
1000fda7:	call   0x10042f82
1000fdac:	pop    ecx
1000fdad:	mov    eax,DWORD PTR [ebp-0x34]
1000fdb0:	imul   ebx,ebx,0x1c
1000fdb3:	imul   edi,edi,0x1c
1000fdb6:	add    ebx,eax
1000fdb8:	add    edi,eax
1000fdba:	mov    DWORD PTR [esi+0xc],ebx
1000fdbd:	mov    DWORD PTR [esi+0x8],edi
1000fdc0:	mov    DWORD PTR [esi+0x4],eax
1000fdc3:	jmp    0x1000feaf
1000fdc8:	push   DWORD PTR [ebp-0x38]
1000fdcb:	mov    eax,DWORD PTR [ebp-0x34]
1000fdce:	call   0x10004f4e
1000fdd3:	push   DWORD PTR [ebp-0x34]
1000fdd6:	call   0x10042f82
1000fddb:	pop    ecx
1000fddc:	push   0x0
1000fdde:	push   0x0
1000fde0:	call   0x10047aa4
1000fde5:	mov    edi,DWORD PTR [esi+0x8]
1000fde8:	mov    ebx,DWORD PTR [ebp+0x10]
1000fdeb:	mov    eax,edi
1000fded:	sub    eax,ebx
1000fdef:	push   0x1c
1000fdf1:	cdq    
1000fdf2:	pop    ecx
1000fdf3:	idiv   ecx
1000fdf5:	push   edi
1000fdf6:	cmp    eax,0x1
1000fdf9:	jae    0x1000fe67
1000fdfb:	lea    edx,[ebx+0x1c]
1000fdfe:	mov    ecx,ebx
1000fe00:	call   0x1000ff3d
1000fe05:	mov    BYTE PTR [ebp-0x4],0x3
1000fe09:	mov    ecx,DWORD PTR [esi+0x8]
1000fe0c:	lea    eax,[ebp-0x30]
1000fe0f:	push   eax
1000fe10:	mov    eax,ecx
1000fe12:	sub    eax,ebx
1000fe14:	push   0x1c
1000fe16:	pop    edi
1000fe17:	cdq    
1000fe18:	idiv   edi
1000fe1a:	xor    edx,edx
1000fe1c:	inc    edx
1000fe1d:	sub    edx,eax
1000fe1f:	push   edx
1000fe20:	push   ecx
1000fe21:	call   0x1000fc98
1000fe26:	and    DWORD PTR [ebp-0x4],0x0
1000fe2a:	add    DWORD PTR [esi+0x8],edi
1000fe2d:	mov    esi,DWORD PTR [esi+0x8]
1000fe30:	add    esi,0xffffffe4
1000fe33:	jmp    0x1000fe47
1000fe35:	push   0xffffffff
1000fe37:	push   0x0
1000fe39:	lea    eax,[ebp-0x30]
1000fe3c:	push   eax
1000fe3d:	mov    ecx,ebx
1000fe3f:	call   0x1000123c
1000fe44:	add    ebx,0x1c
1000fe47:	cmp    ebx,esi
1000fe49:	jne    0x1000fe35
1000fe4b:	jmp    0x1000feaf
1000fe4d:	mov    eax,DWORD PTR [ebp-0x34]
1000fe50:	mov    eax,DWORD PTR [eax+0x8]
1000fe53:	add    eax,0x1c
1000fe56:	push   eax
1000fe57:	mov    eax,DWORD PTR [ebp+0x10]
1000fe5a:	add    eax,0x1c
1000fe5d:	call   0x10004f4e
1000fe62:	jmp    0x1000fddc
1000fe67:	lea    ecx,[edi-0x1c]
1000fe6a:	mov    edx,edi
1000fe6c:	call   0x1000ff3d
1000fe71:	mov    DWORD PTR [esi+0x8],eax
1000fe74:	lea    esi,[edi-0x1c]
1000fe77:	cmp    ebx,esi
1000fe79:	je     0x1000fe90
1000fe7b:	sub    edi,esi
1000fe7d:	sub    esi,0x1c
1000fe80:	lea    eax,[edi+esi*1]
1000fe83:	push   eax
1000fe84:	mov    ecx,esi
1000fe86:	call   0x100102ed
1000fe8b:	cmp    esi,ebx
1000fe8d:	pop    ecx
1000fe8e:	jne    0x1000fe7d
1000fe90:	lea    edi,[ebx+0x1c]
1000fe93:	cmp    ebx,edi
1000fe95:	mov    esi,ebx
1000fe97:	je     0x1000feaf
1000fe99:	push   0xffffffff
1000fe9b:	push   0x0
1000fe9d:	lea    eax,[ebp-0x30]
1000fea0:	push   eax
1000fea1:	mov    ecx,esi
1000fea3:	call   0x1000123c
1000fea8:	add    esi,0x1c
1000feab:	cmp    esi,edi
1000fead:	jne    0x1000fe99
1000feaf:	push   0x0
1000feb1:	push   0x1
1000feb3:	lea    ecx,[ebp-0x30]
1000feb6:	call   0x100012eb
1000febb:	call   0x10059c20
1000fec0:	ret    0xc
1000fec3:	push   ebp
1000fec4:	mov    ebp,esp
1000fec6:	push   ecx
1000fec7:	push   edi
1000fec8:	xor    eax,eax
1000feca:	lea    edi,[ebp-0x4]
1000fecd:	stos   BYTE PTR es:[edi],al
1000fece:	push   DWORD PTR [ebp-0x4]
1000fed1:	push   DWORD PTR [ebp+0xc]
1000fed4:	push   DWORD PTR [ebp+0xc]
1000fed7:	push   DWORD PTR [ebp+0x8]
1000feda:	call   0x1001017b
1000fedf:	add    esp,0x10
1000fee2:	pop    edi
1000fee3:	leave  
1000fee4:	ret    0x8
1000fee7:	push   ecx
1000fee8:	push   ebx
1000fee9:	push   esi
1000feea:	push   edi
1000feeb:	mov    edi,ecx
1000feed:	sub    ecx,DWORD PTR [esp+0x14]
1000fef1:	mov    esi,eax
1000fef3:	sar    ecx,0x4
1000fef6:	shl    ecx,0x4
1000fef9:	sub    eax,ecx
1000fefb:	cmp    DWORD PTR [esp+0x14],edi
1000feff:	je     0x1000ff38
1000ff01:	lea    edx,[edi+0xc]
1000ff04:	lea    ecx,[esi+0x8]
1000ff07:	sub    edi,esi
1000ff09:	mov    ebx,DWORD PTR [edx-0x18]
1000ff0c:	mov    esi,DWORD PTR [ecx-0x14]
1000ff0f:	sub    ecx,0x10
1000ff12:	sub    edx,0x10
1000ff15:	mov    DWORD PTR [ecx-0x4],ebx
1000ff18:	mov    DWORD PTR [edx-0x8],esi
1000ff1b:	mov    ebx,DWORD PTR [edi+ecx*1]
1000ff1e:	mov    esi,DWORD PTR [ecx]
1000ff20:	mov    DWORD PTR [ecx],ebx
1000ff22:	mov    DWORD PTR [edi+ecx*1],esi
1000ff25:	mov    esi,DWORD PTR [ecx+0x4]
1000ff28:	mov    ebx,DWORD PTR [edx]
1000ff2a:	mov    DWORD PTR [ecx+0x4],ebx
1000ff2d:	mov    DWORD PTR [edx],esi
1000ff2f:	lea    esi,[edx-0xc]
1000ff32:	cmp    esi,DWORD PTR [esp+0x14]
1000ff36:	jne    0x1000ff09
1000ff38:	pop    edi
1000ff39:	pop    esi
1000ff3a:	pop    ebx
1000ff3b:	pop    ecx
1000ff3c:	ret    
1000ff3d:	push   ebp
1000ff3e:	mov    ebp,esp
1000ff40:	push   ecx
1000ff41:	push   edi
1000ff42:	xor    eax,eax
1000ff44:	lea    edi,[ebp-0x4]
1000ff47:	stos   BYTE PTR es:[edi],al
1000ff48:	push   DWORD PTR [ebp-0x4]
1000ff4b:	push   DWORD PTR [ebp+0x8]
1000ff4e:	push   DWORD PTR [ebp+0x8]
1000ff51:	call   0x10010209
1000ff56:	add    esp,0xc
1000ff59:	pop    edi
1000ff5a:	leave  
1000ff5b:	ret    0x4
1000ff5e:	push   0x8
1000ff60:	mov    eax,0x10061fdb
1000ff65:	call   0x10059b58
1000ff6a:	mov    eax,DWORD PTR [ebp+0x8]
1000ff6d:	and    DWORD PTR [ebp-0x4],0x0
1000ff71:	mov    DWORD PTR [ebp-0x14],eax
1000ff74:	cmp    DWORD PTR [ebp+0xc],0x0
1000ff78:	jbe    0x1000ffa9
1000ff7a:	push   DWORD PTR [ebp+0x8]
1000ff7d:	mov    ecx,DWORD PTR [ebp+0x10]
1000ff80:	call   0x10010025
1000ff85:	dec    DWORD PTR [ebp+0xc]
1000ff88:	add    DWORD PTR [ebp+0x8],0x10
1000ff8c:	jmp    0x1000ff74
1000ff8e:	mov    esi,DWORD PTR [ebp-0x14]
1000ff91:	jmp    0x1000ff9b
1000ff93:	call   0x100049d4
1000ff98:	add    esi,0x10
1000ff9b:	cmp    esi,DWORD PTR [ebp+0x8]
1000ff9e:	jne    0x1000ff93
1000ffa0:	push   0x0
1000ffa2:	push   0x0
1000ffa4:	call   0x10047aa4
1000ffa9:	call   0x10059bfd
1000ffae:	ret    
1000ffaf:	push   0x8
1000ffb1:	mov    eax,0x1005fd7d
1000ffb6:	call   0x10059b58
1000ffbb:	mov    eax,DWORD PTR [ebp+0x8]
1000ffbe:	and    DWORD PTR [ebp-0x4],0x0
1000ffc2:	mov    DWORD PTR [ebp-0x14],eax
1000ffc5:	cmp    DWORD PTR [ebp+0xc],0x0
1000ffc9:	jbe    0x1000fffb
1000ffcb:	push   DWORD PTR [ebp+0x10]
1000ffce:	mov    ecx,DWORD PTR [ebp+0x8]
1000ffd1:	call   0x10010001
1000ffd6:	dec    DWORD PTR [ebp+0xc]
1000ffd9:	add    DWORD PTR [ebp+0x8],0x1c
1000ffdd:	jmp    0x1000ffc5
1000ffdf:	mov    esi,DWORD PTR [ebp-0x14]
1000ffe2:	jmp    0x1000ffed
1000ffe4:	push   esi
1000ffe5:	call   0x1000672a
1000ffea:	add    esi,0x1c
1000ffed:	cmp    esi,DWORD PTR [ebp+0x8]
1000fff0:	push   0x0
1000fff2:	jne    0x1000ffe4
1000fff4:	push   0x0
1000fff6:	call   0x10047aa4
1000fffb:	call   0x10059bfd
10010000:	ret    
10010001:	push   0x0
10010003:	mov    eax,0x1005fa31
10010008:	call   0x10059b25
1001000d:	and    DWORD PTR [ebp-0x4],0x0
10010011:	test   ecx,ecx
10010013:	je     0x1001001d
10010015:	push   DWORD PTR [ebp+0x8]
10010018:	call   0x100011a2
1001001d:	call   0x10059bfd
10010022:	ret    0x4
10010025:	push   0x0
10010027:	mov    eax,0x1005fa31
1001002c:	call   0x10059b25
10010031:	and    DWORD PTR [ebp-0x4],0x0
10010035:	cmp    DWORD PTR [ebp+0x8],0x0
10010039:	je     0x10010043
1001003b:	push   DWORD PTR [ebp+0x8]
1001003e:	call   0x1000f7fd
10010043:	call   0x10059bfd
10010048:	ret    0x4
1001004b:	push   ebp
1001004c:	mov    ebp,esp
1001004e:	push   ecx
1001004f:	push   ebx
10010050:	push   esi
10010051:	push   edi
10010052:	mov    ebx,eax
10010054:	mov    edi,ecx
10010056:	cmp    edi,ebx
10010058:	je     0x10010174
1001005e:	call   0x10004660
10010063:	test   eax,eax
10010065:	jne    0x100100a8
10010067:	mov    ebx,DWORD PTR [edi+0x8]
1001006a:	cmp    DWORD PTR [edi+0x4],ebx
1001006d:	jbe    0x10010074
1001006f:	call   0x100434a0
10010074:	mov    esi,DWORD PTR [edi+0x4]
10010077:	cmp    esi,DWORD PTR [edi+0x8]
1001007a:	jbe    0x10010081
1001007c:	call   0x100434a0
10010081:	cmp    esi,ebx
10010083:	je     0x10010174
10010089:	push   DWORD PTR [edi+0x8]
1001008c:	mov    eax,esi
1001008e:	mov    ecx,ebx
10010090:	call   0x1001028b
10010095:	pop    ecx
10010096:	push   DWORD PTR [edi+0x8]
10010099:	mov    esi,eax
1001009b:	call   0x10004f4e
100100a0:	mov    DWORD PTR [edi+0x8],esi
100100a3:	jmp    0x10010174
100100a8:	mov    eax,ebx
100100aa:	call   0x10004660
100100af:	mov    esi,eax
100100b1:	mov    eax,edi
100100b3:	call   0x10004660
100100b8:	cmp    esi,eax
100100ba:	ja     0x100100e5
100100bc:	push   DWORD PTR [ebx+0x8]
100100bf:	mov    eax,DWORD PTR [edi+0x4]
100100c2:	mov    ecx,DWORD PTR [ebx+0x4]
100100c5:	call   0x1001028b
100100ca:	pop    ecx
100100cb:	push   DWORD PTR [edi+0x8]
100100ce:	call   0x10004f4e
100100d3:	mov    eax,ebx
100100d5:	call   0x10004660
100100da:	imul   eax,eax,0x1c
100100dd:	add    eax,DWORD PTR [edi+0x4]
100100e0:	jmp    0x10010171
100100e5:	mov    esi,DWORD PTR [edi+0x4]
100100e8:	test   esi,esi
100100ea:	jne    0x100100f1
100100ec:	and    DWORD PTR [ebp-0x4],esi
100100ef:	jmp    0x100100ff
100100f1:	mov    eax,DWORD PTR [edi+0xc]
100100f4:	sub    eax,esi
100100f6:	push   0x1c
100100f8:	cdq    
100100f9:	pop    ecx
100100fa:	idiv   ecx
100100fc:	mov    DWORD PTR [ebp-0x4],eax
100100ff:	mov    eax,ebx
10010101:	call   0x10004660
10010106:	cmp    eax,DWORD PTR [ebp-0x4]
10010109:	ja     0x1001012d
1001010b:	mov    eax,edi
1001010d:	call   0x10004660
10010112:	mov    ecx,DWORD PTR [ebx+0x4]
10010115:	mov    esi,eax
10010117:	mov    eax,DWORD PTR [edi+0x4]
1001011a:	imul   esi,esi,0x1c
1001011d:	add    esi,ecx
1001011f:	push   esi
10010120:	call   0x1001028b
10010125:	pop    ecx
10010126:	push   DWORD PTR [edi+0x8]
10010129:	mov    ecx,esi
1001012b:	jmp    0x10010169
1001012d:	test   esi,esi
1001012f:	je     0x10010144
10010131:	push   DWORD PTR [edi+0x8]
10010134:	mov    eax,esi
10010136:	call   0x10004f4e
1001013b:	push   DWORD PTR [edi+0x4]
1001013e:	call   0x10042f82
10010143:	pop    ecx
10010144:	mov    eax,ebx
10010146:	call   0x10004660
1001014b:	xor    ecx,ecx
1001014d:	cmp    eax,ecx
1001014f:	mov    DWORD PTR [edi+0x4],ecx
10010152:	mov    DWORD PTR [edi+0x8],ecx
10010155:	mov    DWORD PTR [edi+0xc],ecx
10010158:	je     0x10010174
1001015a:	call   0x100049ab
1001015f:	test   al,al
10010161:	je     0x10010174
10010163:	push   DWORD PTR [edi+0x4]
10010166:	mov    ecx,DWORD PTR [ebx+0x4]
10010169:	push   DWORD PTR [ebx+0x8]
1001016c:	call   0x100102c9
10010171:	mov    DWORD PTR [edi+0x8],eax
10010174:	mov    eax,edi
10010176:	pop    edi
10010177:	pop    esi
10010178:	pop    ebx
10010179:	leave  
1001017a:	ret    
1001017b:	push   0x1c
1001017d:	mov    eax,0x10062d12
10010182:	call   0x10059b58
10010187:	mov    edi,DWORD PTR [ebp+0xc]
1001018a:	mov    esi,ecx
1001018c:	xor    eax,eax
1001018e:	mov    DWORD PTR [ebp-0x18],edi
10010191:	mov    DWORD PTR [ebp-0x24],eax
10010194:	mov    DWORD PTR [ebp-0x20],eax
10010197:	mov    DWORD PTR [ebp-0x1c],eax
1001019a:	mov    DWORD PTR [ebp-0x4],eax
1001019d:	mov    BYTE PTR [ebp-0x4],0x1
100101a1:	cmp    esi,DWORD PTR [ebp+0x8]
100101a4:	je     0x100101f9
100101a6:	push   edi
100101a7:	lea    ecx,[ebp-0x28]
100101aa:	call   0x10010025
100101af:	mov    ecx,DWORD PTR [esi+0x4]
100101b2:	mov    eax,DWORD PTR [edi+0x4]
100101b5:	mov    DWORD PTR [edi+0x4],ecx
100101b8:	mov    DWORD PTR [esi+0x4],eax
100101bb:	mov    ecx,DWORD PTR [esi+0x8]
100101be:	mov    eax,DWORD PTR [edi+0x8]
100101c1:	mov    DWORD PTR [edi+0x8],ecx
100101c4:	mov    DWORD PTR [esi+0x8],eax
100101c7:	mov    ecx,DWORD PTR [esi+0xc]
100101ca:	mov    eax,DWORD PTR [edi+0xc]
100101cd:	mov    DWORD PTR [edi+0xc],ecx
100101d0:	add    edi,0x10
100101d3:	mov    DWORD PTR [esi+0xc],eax
100101d6:	mov    DWORD PTR [ebp+0xc],edi
100101d9:	add    esi,0x10
100101dc:	jmp    0x100101a1
100101de:	mov    esi,DWORD PTR [ebp-0x18]
100101e1:	jmp    0x100101eb
100101e3:	call   0x100049d4
100101e8:	add    esi,0x10
100101eb:	cmp    esi,DWORD PTR [ebp+0xc]
100101ee:	jne    0x100101e3
100101f0:	xor    eax,eax
100101f2:	push   eax
100101f3:	push   eax
100101f4:	call   0x10047aa4
100101f9:	lea    esi,[ebp-0x28]
100101fc:	call   0x100049d4
10010201:	mov    eax,edi
10010203:	call   0x10059bfd
10010208:	ret    
10010209:	push   0x2c
1001020b:	mov    eax,0x100604e9
10010210:	call   0x10059bc4
10010215:	mov    esi,edx
10010217:	xor    ebx,ebx
10010219:	mov    edi,ecx
1001021b:	push   ebx
1001021c:	lea    ecx,[ebp-0x30]
1001021f:	mov    DWORD PTR [ebp-0x34],esi
10010222:	mov    DWORD PTR [ebp-0x38],esi
10010225:	mov    DWORD PTR [ebp-0x18],0xf
1001022c:	call   0x10001417
10010231:	mov    DWORD PTR [ebp-0x4],ebx
10010234:	mov    BYTE PTR [ebp-0x4],0x1
10010238:	cmp    edi,DWORD PTR [ebp+0x8]
1001023b:	je     0x10010278
1001023d:	lea    eax,[ebp-0x30]
10010240:	push   eax
10010241:	mov    ecx,esi
10010243:	call   0x10010001
10010248:	push   esi
10010249:	mov    ecx,edi
1001024b:	call   0x100102ed
10010250:	add    esi,0x1c
10010253:	pop    ecx
10010254:	mov    DWORD PTR [ebp-0x34],esi
10010257:	add    edi,0x1c
1001025a:	jmp    0x10010238
1001025c:	mov    esi,DWORD PTR [ebp-0x38]
1001025f:	jmp    0x1001026a
10010261:	push   esi
10010262:	call   0x1000672a
10010267:	add    esi,0x1c
1001026a:	cmp    esi,DWORD PTR [ebp-0x34]
1001026d:	push   0x0
1001026f:	jne    0x10010261
10010271:	push   0x0
10010273:	call   0x10047aa4
10010278:	push   ebx
10010279:	push   0x1
1001027b:	lea    ecx,[ebp-0x30]
1001027e:	call   0x100012eb
10010283:	mov    eax,esi
10010285:	call   0x10059c20
1001028a:	ret    
1001028b:	push   ebx
1001028c:	push   esi
1001028d:	mov    ebx,eax
1001028f:	mov    eax,DWORD PTR [esp+0xc]
10010293:	push   edi
10010294:	mov    edi,ecx
10010296:	sub    eax,edi
10010298:	push   0x1c
1001029a:	cdq    
1001029b:	pop    ecx
1001029c:	idiv   ecx
1001029e:	mov    esi,eax
100102a0:	imul   esi,esi,0x1c
100102a3:	add    esi,ebx
100102a5:	cmp    edi,DWORD PTR [esp+0x10]
100102a9:	je     0x100102c3
100102ab:	sub    ebx,edi
100102ad:	push   0xffffffff
100102af:	push   0x0
100102b1:	push   edi
100102b2:	lea    ecx,[ebx+edi*1]
100102b5:	call   0x1000123c
100102ba:	add    edi,0x1c
100102bd:	cmp    edi,DWORD PTR [esp+0x10]
100102c1:	jne    0x100102ad
100102c3:	pop    edi
100102c4:	mov    eax,esi
100102c6:	pop    esi
100102c7:	pop    ebx
100102c8:	ret    
100102c9:	push   ebp
100102ca:	mov    ebp,esp
100102cc:	push   ecx
100102cd:	push   edi
100102ce:	xor    eax,eax
100102d0:	lea    edi,[ebp-0x4]
100102d3:	stos   BYTE PTR es:[edi],al
100102d4:	push   DWORD PTR [ebp-0x4]
100102d7:	push   DWORD PTR [ebp+0xc]
100102da:	push   DWORD PTR [ebp+0xc]
100102dd:	push   DWORD PTR [ebp+0x8]
100102e0:	call   0x1001034a
100102e5:	add    esp,0x10
100102e8:	pop    edi
100102e9:	leave  
100102ea:	ret    0x8
100102ed:	push   ebp
100102ee:	mov    ebp,esp
100102f0:	sub    esp,0x14
100102f3:	mov    eax,ds:0x1007e030
100102f8:	xor    eax,ebp
100102fa:	mov    DWORD PTR [ebp-0x4],eax
100102fd:	mov    eax,DWORD PTR [ebp+0x8]
10010300:	push   ebx
10010301:	push   esi
10010302:	push   edi
10010303:	lea    edx,[eax+0x4]
10010306:	mov    esi,edx
10010308:	lea    edi,[ebp-0x14]
1001030b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1001030c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1001030d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1001030e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1001030f:	lea    ebx,[ecx+0x4]
10010312:	mov    edi,edx
10010314:	mov    esi,ebx
10010316:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10010317:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10010318:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10010319:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1001031a:	mov    edi,ebx
1001031c:	lea    esi,[ebp-0x14]
1001031f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10010320:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10010321:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10010322:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10010323:	mov    esi,DWORD PTR [ecx+0x14]
10010326:	mov    edx,DWORD PTR [eax+0x14]
10010329:	mov    DWORD PTR [eax+0x14],esi
1001032c:	mov    esi,DWORD PTR [ecx+0x18]
1001032f:	mov    DWORD PTR [ecx+0x14],edx
10010332:	mov    edx,DWORD PTR [eax+0x18]
10010335:	mov    DWORD PTR [eax+0x18],esi
10010338:	mov    DWORD PTR [ecx+0x18],edx
1001033b:	mov    ecx,DWORD PTR [ebp-0x4]
1001033e:	pop    edi
1001033f:	pop    esi
10010340:	xor    ecx,ebp
10010342:	pop    ebx
10010343:	call   0x10042f87
10010348:	leave  
10010349:	ret    
1001034a:	push   0x8
1001034c:	mov    eax,0x100604c6
10010351:	call   0x10059b58
10010356:	mov    esi,ecx
10010358:	mov    eax,DWORD PTR [ebp+0xc]
1001035b:	and    DWORD PTR [ebp-0x4],0x0
1001035f:	mov    DWORD PTR [ebp-0x14],eax
10010362:	cmp    esi,DWORD PTR [ebp+0x8]
10010365:	je     0x10010395
10010367:	mov    ecx,DWORD PTR [ebp+0xc]
1001036a:	push   esi
1001036b:	call   0x10010001
10010370:	add    DWORD PTR [ebp+0xc],0x1c
10010374:	add    esi,0x1c
10010377:	jmp    0x10010362
10010379:	mov    esi,DWORD PTR [ebp-0x14]
1001037c:	jmp    0x10010387
1001037e:	push   esi
1001037f:	call   0x1000672a
10010384:	add    esi,0x1c
10010387:	cmp    esi,DWORD PTR [ebp+0xc]
1001038a:	push   0x0
1001038c:	jne    0x1001037e
1001038e:	push   0x0
10010390:	call   0x10047aa4
10010395:	mov    eax,DWORD PTR [ebp+0xc]
10010398:	call   0x10059bfd
1001039d:	ret    
1001039e:	mov    edx,DWORD PTR [ecx]
100103a0:	cmp    edx,DWORD PTR [eax]
100103a2:	jne    0x100103c0
100103a4:	mov    edx,DWORD PTR [ecx+0x4]
100103a7:	cmp    edx,DWORD PTR [eax+0x4]
100103aa:	jne    0x100103c0
100103ac:	mov    edx,DWORD PTR [ecx+0x8]
100103af:	cmp    edx,DWORD PTR [eax+0x8]
100103b2:	jne    0x100103c0
100103b4:	mov    ecx,DWORD PTR [ecx+0xc]
100103b7:	cmp    ecx,DWORD PTR [eax+0xc]
100103ba:	jne    0x100103c0
100103bc:	xor    eax,eax
100103be:	inc    eax
100103bf:	ret    
100103c0:	xor    eax,eax
100103c2:	ret    
100103c3:	test   esi,esi
100103c5:	jne    0x100103cb
100103c7:	xor    eax,eax
100103c9:	jmp    0x100103ec
100103cb:	push   edi
100103cc:	mov    edi,DWORD PTR [esi]
100103ce:	and    DWORD PTR [esi],0x0
100103d1:	test   eax,eax
100103d3:	je     0x100103df
100103d5:	mov    ecx,DWORD PTR [eax]
100103d7:	push   esi
100103d8:	push   DWORD PTR [esp+0xc]
100103dc:	push   eax
100103dd:	call   DWORD PTR [ecx]
100103df:	test   edi,edi
100103e1:	je     0x100103e9
100103e3:	mov    eax,DWORD PTR [edi]
100103e5:	push   edi
100103e6:	call   DWORD PTR [eax+0x8]
100103e9:	mov    eax,DWORD PTR [esi]
100103eb:	pop    edi
100103ec:	ret    0x4
100103ef:	cmp    DWORD PTR [eax],0x0
100103f2:	jne    0x10010410
100103f4:	cmp    DWORD PTR [eax+0x4],0x0
100103f8:	jne    0x10010410
100103fa:	cmp    DWORD PTR [eax+0x8],0xc0
10010401:	jne    0x10010410
10010403:	cmp    DWORD PTR [eax+0xc],0x46000000
1001040a:	jne    0x10010410
1001040c:	xor    eax,eax
1001040e:	inc    eax
1001040f:	ret    
10010410:	xor    eax,eax
10010412:	ret    
10010413:	push   ebp
10010414:	mov    ebp,esp
10010416:	push   ecx
10010417:	cmp    DWORD PTR [ebp+0x8],0x0
1001041b:	push   esi
1001041c:	push   edi
1001041d:	mov    esi,eax
1001041f:	je     0x1001049d
10010421:	test   esi,esi
10010423:	je     0x1001049d
10010425:	test   ebx,ebx
10010427:	jne    0x10010430
10010429:	mov    eax,0x80004003
1001042e:	jmp    0x100104a2
10010430:	mov    eax,DWORD PTR [ebp+0xc]
10010433:	and    DWORD PTR [ebx],0x0
10010436:	call   0x100103ef
1001043b:	test   eax,eax
1001043d:	je     0x1001048f
1001043f:	mov    esi,DWORD PTR [esi+0x4]
10010442:	add    esi,DWORD PTR [ebp+0x8]
10010445:	mov    eax,DWORD PTR [esi]
10010447:	push   esi
10010448:	call   DWORD PTR [eax+0x4]
1001044b:	mov    DWORD PTR [ebx],esi
1001044d:	xor    eax,eax
1001044f:	jmp    0x100104a2
10010451:	mov    ecx,DWORD PTR [esi]
10010453:	xor    eax,eax
10010455:	test   ecx,ecx
10010457:	sete   al
1001045a:	test   eax,eax
1001045c:	mov    DWORD PTR [ebp-0x4],eax
1001045f:	jne    0x1001046d
10010461:	mov    eax,DWORD PTR [ebp+0xc]
10010464:	call   0x1001039e
10010469:	test   eax,eax
1001046b:	je     0x1001048c
1001046d:	cmp    edi,0x1
10010470:	je     0x1001043f
10010472:	push   DWORD PTR [esi+0x4]
10010475:	push   ebx
10010476:	push   DWORD PTR [ebp+0xc]
10010479:	push   DWORD PTR [ebp+0x8]
1001047c:	call   edi
1001047e:	test   eax,eax
10010480:	je     0x100104a2
10010482:	cmp    DWORD PTR [ebp-0x4],0x0
10010486:	jne    0x1001048c
10010488:	test   eax,eax
1001048a:	jl     0x100104a2
1001048c:	add    esi,0xc
1001048f:	mov    edi,DWORD PTR [esi+0x8]
10010492:	test   edi,edi
10010494:	jne    0x10010451
10010496:	mov    eax,0x80004002
1001049b:	jmp    0x100104a2
1001049d:	mov    eax,0x80070057
100104a2:	pop    edi
100104a3:	pop    esi
100104a4:	leave  
100104a5:	ret    0x8
100104a8:	push   0xc
100104aa:	mov    eax,0x1005f99f
100104af:	call   0x10059b58
100104b4:	mov    edi,DWORD PTR [ebp+0x8]
100104b7:	test   edi,edi
100104b9:	jne    0x100104c2
100104bb:	mov    eax,0x80070057
100104c0:	jmp    0x1001051e
100104c2:	and    DWORD PTR [ebp-0x14],0x0
100104c6:	and    DWORD PTR [ebp-0x4],0x0
100104ca:	push   0xc
100104cc:	call   0x1004358e
100104d1:	pop    ecx
100104d2:	mov    esi,eax
100104d4:	jmp    0x100104e2
100104d6:	mov    eax,0x100104dc
100104db:	ret    
100104dc:	mov    edi,DWORD PTR [ebp+0x8]
100104df:	mov    esi,DWORD PTR [ebp-0x14]
100104e2:	test   esi,esi
100104e4:	jne    0x100104ed
100104e6:	mov    ebx,0x8007000e
100104eb:	jmp    0x1001051c
100104ed:	mov    eax,DWORD PTR [ebp+0xc]
100104f0:	mov    DWORD PTR [esi],eax
100104f2:	mov    eax,DWORD PTR [ebp+0x10]
100104f5:	mov    DWORD PTR [esi+0x4],eax
100104f8:	lea    eax,[edi+0xc]
100104fb:	push   eax
100104fc:	mov    DWORD PTR [ebp-0x18],eax
100104ff:	call   DWORD PTR ds:0x100660f0
10010505:	mov    eax,DWORD PTR [edi+0x8]
10010508:	mov    DWORD PTR [esi+0x8],eax
1001050b:	lea    ecx,[ebp-0x18]
1001050e:	mov    BYTE PTR [ebp-0x14],0x1
10010512:	xor    ebx,ebx
10010514:	mov    DWORD PTR [edi+0x8],esi
10010517:	call   0x10010d7e
1001051c:	mov    eax,ebx
1001051e:	call   0x10059bfd
10010523:	ret    0xc
10010526:	mov    eax,ecx
10010528:	and    DWORD PTR [eax],0x0
1001052b:	and    DWORD PTR [eax+0x4],0x0
1001052f:	or     DWORD PTR [eax+0x8],0xffffffff
10010533:	ret    
10010534:	test   edi,edi
10010536:	jne    0x1001053e
10010538:	mov    eax,0x80004003
1001053d:	ret    
1001053e:	push   esi
1001053f:	xor    eax,eax
10010541:	lea    esi,[ecx+0xc]
10010544:	cmp    DWORD PTR [esi],eax
10010546:	jne    0x1001054d
10010548:	call   0x100107f5
1001054d:	mov    ecx,DWORD PTR [esi]
1001054f:	mov    DWORD PTR [edi],ecx
10010551:	cmp    DWORD PTR [esi],0x0
10010554:	je     0x10010560
10010556:	mov    esi,DWORD PTR [esi]
10010558:	mov    eax,DWORD PTR [esi]
1001055a:	push   esi
1001055b:	call   DWORD PTR [eax+0x4]
1001055e:	xor    eax,eax
10010560:	pop    esi
10010561:	ret    
10010562:	push   ebp
10010563:	mov    ebp,esp
10010565:	push   ecx
10010566:	push   esi
10010567:	push   edi
10010568:	mov    esi,eax
1001056a:	xor    edi,edi
1001056c:	xor    eax,eax
1001056e:	cmp    DWORD PTR [esi+0xc],edi
10010571:	je     0x10010578
10010573:	cmp    DWORD PTR [esi+0x14],edi
10010576:	jne    0x1001057f
10010578:	mov    ecx,esi
1001057a:	call   0x100107f5
1001057f:	cmp    DWORD PTR [esi+0xc],edi
10010582:	je     0x100105ec
10010584:	cmp    DWORD PTR [esi+0x14],edi
10010587:	push   ebx
10010588:	je     0x100105d9
1001058a:	cmp    DWORD PTR [ebp+0xc],0x1
1001058e:	jne    0x100105d9
10010590:	mov    eax,DWORD PTR [ebp+0x8]
10010593:	push   DWORD PTR [eax]
10010595:	call   DWORD PTR ds:0x100660c4
1001059b:	mov    edi,DWORD PTR [esi+0x18]
1001059e:	dec    edi
1001059f:	mov    DWORD PTR [ebp-0x4],eax
100105a2:	js     0x100105d9
100105a4:	mov    ebx,edi
100105a6:	imul   ebx,ebx,0xc
100105a9:	mov    eax,DWORD PTR [esi+0x14]
100105ac:	mov    ecx,DWORD PTR [ebp-0x4]
100105af:	cmp    ecx,DWORD PTR [ebx+eax*1+0x4]
100105b3:	jne    0x100105d1
100105b5:	add    eax,ebx
100105b7:	mov    ecx,DWORD PTR [eax]
100105b9:	mov    eax,DWORD PTR [eax+0x4]
100105bc:	add    eax,eax
100105be:	push   eax
100105bf:	mov    eax,DWORD PTR [ebp+0x8]
100105c2:	push   DWORD PTR [eax]
100105c4:	push   ecx
100105c5:	call   0x10043816
100105ca:	add    esp,0xc
100105cd:	test   eax,eax
100105cf:	je     0x100105f2
100105d1:	dec    edi
100105d2:	sub    ebx,0xc
100105d5:	test   edi,edi
100105d7:	jge    0x100105a9
100105d9:	push   DWORD PTR [ebp+0x10]
100105dc:	mov    esi,DWORD PTR [esi+0xc]
100105df:	push   DWORD PTR [ebp+0xc]
100105e2:	mov    eax,DWORD PTR [esi]
100105e4:	push   DWORD PTR [ebp+0x8]
100105e7:	push   esi
100105e8:	call   DWORD PTR [eax+0x28]
100105eb:	pop    ebx
100105ec:	pop    edi
100105ed:	pop    esi
100105ee:	leave  
100105ef:	ret    0xc
100105f2:	mov    eax,DWORD PTR [esi+0x14]
100105f5:	imul   edi,edi,0xc
100105f8:	mov    eax,DWORD PTR [edi+eax*1+0x8]
100105fc:	mov    ecx,DWORD PTR [ebp+0x10]
100105ff:	mov    DWORD PTR [ecx],eax
10010601:	xor    eax,eax
10010603:	jmp    0x100105eb
10010605:	push   ebp
10010606:	mov    ebp,esp
10010608:	push   esi
10010609:	mov    esi,eax
1001060b:	xor    eax,eax
1001060d:	cmp    DWORD PTR [esi+0xc],eax
10010610:	je     0x10010617
10010612:	cmp    DWORD PTR [esi+0x14],eax
10010615:	jne    0x1001061e
10010617:	mov    ecx,esi
10010619:	call   0x100107f5
1001061e:	cmp    DWORD PTR [esi+0xc],0x0
10010622:	je     0x10010642
10010624:	push   DWORD PTR [ebp+0x20]
10010627:	mov    esi,DWORD PTR [esi+0xc]
1001062a:	push   DWORD PTR [ebp+0x1c]
1001062d:	mov    eax,DWORD PTR [esi]
1001062f:	push   DWORD PTR [ebp+0x18]
10010632:	push   DWORD PTR [ebp+0x14]
10010635:	push   DWORD PTR [ebp+0x10]
10010638:	push   DWORD PTR [ebp+0xc]
1001063b:	push   DWORD PTR [ebp+0x8]
1001063e:	push   esi
1001063f:	call   DWORD PTR [eax+0x2c]
10010642:	pop    esi
10010643:	pop    ebp
10010644:	ret    0x1c
10010647:	push   0x14
10010649:	mov    eax,0x1005f984
1001064e:	call   0x10059b58
10010653:	mov    edi,DWORD PTR [ebp+0x8]
10010656:	mov    ebx,DWORD PTR [ebp+0xc]
10010659:	mov    eax,DWORD PTR [ebx]
1001065b:	lea    ecx,[ebp-0x20]
1001065e:	push   ecx
1001065f:	push   ebx
10010660:	call   DWORD PTR [eax+0xc]
10010663:	xor    ecx,ecx
10010665:	cmp    eax,ecx
10010667:	jl     0x100107a7
1001066d:	mov    eax,DWORD PTR [ebp-0x20]
10010670:	movzx  eax,WORD PTR [eax+0x2c]
10010674:	mov    esi,eax
10010676:	cmp    esi,ecx
10010678:	mov    DWORD PTR [ebp-0x18],ecx
1001067b:	mov    DWORD PTR [edi+0x18],eax
1001067e:	mov    DWORD PTR [edi+0x14],ecx
10010681:	je     0x10010702
10010683:	push   0xc
10010685:	pop    edx
10010686:	mul    edx
10010688:	mov    DWORD PTR [ebp-0x4],ecx
1001068b:	seto   cl
1001068e:	neg    ecx
10010690:	or     ecx,eax
10010692:	xor    eax,eax
10010694:	add    ecx,0x4
10010697:	setb   al
1001069a:	neg    eax
1001069c:	or     eax,ecx
1001069e:	push   eax
1001069f:	call   0x10043811
100106a4:	pop    ecx
100106a5:	mov    DWORD PTR [ebp-0x14],eax
100106a8:	test   eax,eax
100106aa:	mov    BYTE PTR [ebp-0x4],0x1
100106ae:	je     0x100106d0
100106b0:	push   0x100067fc
100106b5:	push   0x10010526
100106ba:	push   esi
100106bb:	mov    DWORD PTR [eax],esi
100106bd:	add    eax,0x4
100106c0:	push   0xc
100106c2:	push   eax
100106c3:	mov    DWORD PTR [ebp-0x1c],eax
100106c6:	call   0x10045ee8
100106cb:	mov    eax,DWORD PTR [ebp-0x1c]
100106ce:	jmp    0x100106d2
100106d0:	xor    eax,eax
100106d2:	or     DWORD PTR [ebp-0x4],0xffffffff
100106d6:	mov    DWORD PTR [ebp-0x18],eax
100106d9:	jmp    0x100106e7
100106db:	mov    eax,0x100106e1
100106e0:	ret    
100106e1:	mov    edi,DWORD PTR [ebp+0x8]
100106e4:	mov    ebx,DWORD PTR [ebp+0xc]
100106e7:	cmp    DWORD PTR [ebp-0x18],0x0
100106eb:	jne    0x10010700
100106ed:	push   DWORD PTR [ebp-0x20]
100106f0:	mov    eax,DWORD PTR [ebx]
100106f2:	push   ebx
100106f3:	call   DWORD PTR [eax+0x4c]
100106f6:	mov    eax,0x8007000e
100106fb:	jmp    0x100107a9
10010700:	xor    ecx,ecx
10010702:	cmp    DWORD PTR [edi+0x18],ecx
10010705:	mov    DWORD PTR [ebp-0x14],ecx
10010708:	jle    0x10010798
1001070e:	mov    esi,DWORD PTR [ebp-0x18]
10010711:	mov    eax,DWORD PTR [ebx]
10010713:	lea    ecx,[ebp-0x1c]
10010716:	push   ecx
10010717:	push   DWORD PTR [ebp-0x14]
1001071a:	push   ebx
1001071b:	call   DWORD PTR [eax+0x14]
1001071e:	test   eax,eax
10010720:	jl     0x10010786
10010722:	xor    eax,eax
10010724:	mov    DWORD PTR [ebp+0x8],eax
10010727:	push   eax
10010728:	push   eax
10010729:	push   eax
1001072a:	mov    DWORD PTR [ebp-0x4],0x3
10010731:	mov    ecx,DWORD PTR [ebx]
10010733:	lea    eax,[ebp+0x8]
10010736:	push   eax
10010737:	mov    eax,DWORD PTR [ebp-0x1c]
1001073a:	push   DWORD PTR [eax]
1001073c:	push   ebx
1001073d:	call   DWORD PTR [ecx+0x30]
10010740:	test   eax,eax
10010742:	jl     0x10010770
10010744:	mov    ebx,DWORD PTR [ebp+0x8]
10010747:	mov    eax,DWORD PTR [esi]
10010749:	and    DWORD PTR [ebp+0x8],0x0
1001074d:	cmp    eax,ebx
1001074f:	je     0x1001075a
10010751:	push   eax
10010752:	call   DWORD PTR ds:0x100662b4
10010758:	mov    DWORD PTR [esi],ebx
1001075a:	push   DWORD PTR [esi]
1001075c:	call   DWORD PTR ds:0x100662ac
10010762:	mov    ebx,DWORD PTR [ebp+0xc]
10010765:	mov    DWORD PTR [esi+0x4],eax
10010768:	mov    eax,DWORD PTR [ebp-0x1c]
1001076b:	mov    eax,DWORD PTR [eax]
1001076d:	mov    DWORD PTR [esi+0x8],eax
10010770:	push   DWORD PTR [ebp-0x1c]
10010773:	mov    eax,DWORD PTR [ebx]
10010775:	push   ebx
10010776:	call   DWORD PTR [eax+0x50]
10010779:	or     DWORD PTR [ebp-0x4],0xffffffff
1001077d:	push   DWORD PTR [ebp+0x8]
10010780:	call   DWORD PTR ds:0x100662b4
10010786:	inc    DWORD PTR [ebp-0x14]
10010789:	mov    eax,DWORD PTR [ebp-0x14]
1001078c:	add    esi,0xc
1001078f:	cmp    eax,DWORD PTR [edi+0x18]
10010792:	jl     0x10010711
10010798:	mov    eax,DWORD PTR [ebp-0x18]
1001079b:	push   DWORD PTR [ebp-0x20]
1001079e:	mov    DWORD PTR [edi+0x14],eax
100107a1:	mov    eax,DWORD PTR [ebx]
100107a3:	push   ebx
100107a4:	call   DWORD PTR [eax+0x4c]
100107a7:	xor    eax,eax
100107a9:	call   0x10059bfd
100107ae:	ret    0x8
100107b1:	push   esi
100107b2:	mov    esi,DWORD PTR [esp+0x8]
100107b6:	test   esi,esi
100107b8:	je     0x100107f1
100107ba:	mov    eax,DWORD PTR [esi+0xc]
100107bd:	test   eax,eax
100107bf:	je     0x100107c7
100107c1:	mov    ecx,DWORD PTR [eax]
100107c3:	push   eax
100107c4:	call   DWORD PTR [ecx+0x8]
100107c7:	mov    eax,DWORD PTR [esi+0x14]
100107ca:	and    DWORD PTR [esi+0xc],0x0
100107ce:	test   eax,eax
100107d0:	je     0x100107ed
100107d2:	push   edi
100107d3:	push   0x100067fc
100107d8:	lea    edi,[eax-0x4]
100107db:	push   DWORD PTR [edi]
100107dd:	push   0xc
100107df:	push   eax
100107e0:	call   0x100431e9
100107e5:	push   edi
100107e6:	call   0x100434b0
100107eb:	pop    ecx
100107ec:	pop    edi
100107ed:	and    DWORD PTR [esi+0x14],0x0
100107f1:	pop    esi
100107f2:	ret    0x4
100107f5:	push   ebp
100107f6:	mov    ebp,esp
100107f8:	and    esp,0xfffffff8
100107fb:	push   0xffffffff
100107fd:	push   0x100644a9
10010802:	mov    eax,fs:0x0
10010808:	push   eax
10010809:	sub    esp,0x20
1001080c:	push   ebx
1001080d:	push   esi
1001080e:	push   edi
1001080f:	mov    eax,ds:0x1007e030
10010814:	xor    eax,esp
10010816:	push   eax
10010817:	lea    eax,[esp+0x30]
1001081b:	mov    fs:0x0,eax
10010821:	mov    esi,ecx
10010823:	xor    ebx,ebx
10010825:	cmp    DWORD PTR [esi+0xc],ebx
10010828:	je     0x10010844
1001082a:	cmp    DWORD PTR [esi+0x14],ebx
1001082d:	je     0x10010844
1001082f:	xor    eax,eax
10010831:	mov    ecx,DWORD PTR [esp+0x30]
10010835:	mov    DWORD PTR fs:0x0,ecx
1001083c:	pop    ecx
1001083d:	pop    edi
1001083e:	pop    esi
1001083f:	pop    ebx
10010840:	mov    esp,ebp
10010842:	pop    ebp
10010843:	ret    
10010844:	mov    eax,ds:0x10080c04
10010849:	add    eax,0x10
1001084c:	mov    DWORD PTR [esp+0x24],eax
10010850:	push   eax
10010851:	mov    DWORD PTR [esp+0x3c],ebx
10010855:	call   DWORD PTR ds:0x100660f0
1001085b:	cmp    DWORD PTR [esi+0xc],ebx
1001085e:	mov    BYTE PTR [esp+0x28],0x1
10010863:	jne    0x1001094f
10010869:	call   0x10006805
1001086e:	mov    edi,eax
10010870:	cmp    edi,ebx
10010872:	jne    0x10010886
10010874:	mov    esi,0x80004005
10010879:	lea    ecx,[esp+0x24]
1001087d:	call   0x10010d7e
10010882:	mov    eax,esi
10010884:	jmp    0x10010831
10010886:	mov    DWORD PTR [esp+0x18],ebx
1001088a:	lea    ecx,[esp+0x18]
1001088e:	push   ecx
1001088f:	mov    BYTE PTR [esp+0x3c],0x1
10010894:	push   DWORD PTR [esi]
10010896:	mov    eax,DWORD PTR [edi]
10010898:	push   edi
10010899:	call   DWORD PTR [eax+0x18]
1001089c:	cmp    eax,ebx
1001089e:	mov    DWORD PTR [esp+0x20],eax
100108a2:	jl     0x10010935
100108a8:	mov    eax,DWORD PTR [esp+0x18]
100108ac:	cmp    eax,ebx
100108ae:	mov    DWORD PTR [esp+0x14],eax
100108b2:	je     0x100108be
100108b4:	mov    ecx,DWORD PTR [eax]
100108b6:	push   eax
100108b7:	call   DWORD PTR [ecx+0x4]
100108ba:	mov    eax,DWORD PTR [esp+0x18]
100108be:	mov    DWORD PTR [esp+0x1c],ebx
100108c2:	lea    edx,[esp+0x1c]
100108c6:	push   edx
100108c7:	push   0x1006dd80
100108cc:	mov    BYTE PTR [esp+0x40],0x3
100108d1:	mov    ecx,DWORD PTR [eax]
100108d3:	push   eax
100108d4:	call   DWORD PTR [ecx]
100108d6:	test   eax,eax
100108d8:	jl     0x100108e8
100108da:	lea    eax,[esp+0x14]
100108de:	push   eax
100108df:	lea    eax,[esp+0x20]
100108e3:	call   0x10010d95
100108e8:	mov    eax,DWORD PTR [esp+0x14]
100108ec:	mov    DWORD PTR [esi+0xc],eax
100108ef:	mov    eax,ds:0x10080c04
100108f4:	mov    ecx,eax
100108f6:	add    eax,0x4
100108f9:	neg    ecx
100108fb:	push   esi
100108fc:	sbb    ecx,ecx
100108fe:	push   0x100107b1
10010903:	and    ecx,eax
10010905:	push   ecx
10010906:	mov    DWORD PTR [esp+0x20],ebx
1001090a:	call   0x100104a8
1001090f:	mov    BYTE PTR [esp+0x38],0x2
10010914:	mov    eax,DWORD PTR [esp+0x1c]
10010918:	cmp    eax,ebx
1001091a:	je     0x10010922
1001091c:	mov    ecx,DWORD PTR [eax]
1001091e:	push   eax
1001091f:	call   DWORD PTR [ecx+0x8]
10010922:	mov    BYTE PTR [esp+0x38],0x1
10010927:	mov    eax,DWORD PTR [esp+0x14]
1001092b:	cmp    eax,ebx
1001092d:	je     0x10010935
1001092f:	mov    ecx,DWORD PTR [eax]
10010931:	push   eax
10010932:	call   DWORD PTR [ecx+0x8]
10010935:	mov    eax,DWORD PTR [edi]
10010937:	push   edi
10010938:	call   DWORD PTR [eax+0x8]
1001093b:	mov    BYTE PTR [esp+0x38],bl
1001093f:	mov    eax,DWORD PTR [esp+0x18]
10010943:	cmp    eax,ebx
10010945:	je     0x10010953
10010947:	mov    ecx,DWORD PTR [eax]
10010949:	push   eax
1001094a:	call   DWORD PTR [ecx+0x8]
1001094d:	jmp    0x10010953
1001094f:	mov    DWORD PTR [esp+0x20],ebx
10010953:	mov    eax,DWORD PTR [esi+0xc]
10010956:	cmp    eax,ebx
10010958:	je     0x1001096a
1001095a:	cmp    DWORD PTR [esi+0x14],ebx
1001095d:	jne    0x1001096a
1001095f:	push   eax
10010960:	push   esi
10010961:	call   0x10010647
10010966:	mov    DWORD PTR [esp+0x20],eax
1001096a:	mov    esi,DWORD PTR [esp+0x20]
1001096e:	jmp    0x10010879
10010973:	push   ebp
10010974:	mov    ebp,esp
10010976:	push   ecx
10010977:	push   ebx
10010978:	mov    ebx,eax
1001097a:	push   edi
1001097b:	lea    eax,[ebp-0x4]
1001097e:	mov    edi,ecx
10010980:	push   eax
10010981:	mov    DWORD PTR [edi+0x8],ebx
10010984:	call   0x10010e19
10010989:	test   eax,eax
1001098b:	jl     0x100109bb
1001098d:	push   esi
1001098e:	mov    esi,DWORD PTR [ebp-0x4]
10010991:	test   esi,esi
10010993:	mov    DWORD PTR [ebp-0x4],esi
10010996:	je     0x1001099e
10010998:	mov    eax,DWORD PTR [esi]
1001099a:	push   esi
1001099b:	call   DWORD PTR [eax+0x4]
1001099e:	add    edi,0xc
100109a1:	push   edi
100109a2:	lea    eax,[ebp-0x4]
100109a5:	call   0x10010e95
100109aa:	test   esi,esi
100109ac:	je     0x100109b4
100109ae:	mov    eax,DWORD PTR [esi]
100109b0:	push   esi
100109b1:	call   DWORD PTR [eax+0x8]
100109b4:	add    ebx,0x18
100109b7:	mov    DWORD PTR [esi+0x8],ebx
100109ba:	pop    esi
100109bb:	pop    edi
100109bc:	pop    ebx
100109bd:	leave  
100109be:	ret    
100109bf:	push   0x1c
100109c1:	mov    eax,0x100604ab
100109c6:	call   0x10059b25
100109cb:	mov    eax,DWORD PTR [ebp+0x8]
100109ce:	mov    eax,DWORD PTR [eax+0x8]
100109d1:	test   eax,eax
100109d3:	jne    0x100109dc
100109d5:	mov    eax,0x80004005
100109da:	jmp    0x10010a26
100109dc:	cmp    DWORD PTR [eax],0x0
100109df:	je     0x100109d5
100109e1:	mov    eax,DWORD PTR [eax]
100109e3:	lea    ecx,[ebp-0x28]
100109e6:	push   ecx
100109e7:	call   0x100199c9
100109ec:	and    DWORD PTR [ebp-0x4],0x0
100109f0:	cmp    DWORD PTR [eax+0x18],0x10
100109f4:	jb     0x100109fb
100109f6:	mov    eax,DWORD PTR [eax+0x4]
100109f9:	jmp    0x100109fe
100109fb:	add    eax,0x4
100109fe:	push   eax
100109ff:	lea    edi,[ebp+0x8]
10010a02:	call   0x10002455
10010a07:	push   0x0
10010a09:	push   0x1
10010a0b:	lea    ecx,[ebp-0x28]
10010a0e:	call   0x100012eb
10010a13:	mov    eax,edi
10010a15:	call   0x1000d950
10010a1a:	mov    ecx,DWORD PTR [ebp+0xc]
10010a1d:	mov    DWORD PTR [ecx],eax
10010a1f:	call   0x100025b0
10010a24:	xor    eax,eax
10010a26:	call   0x10059bfd
10010a2b:	ret    0x8
10010a2e:	push   0x1c
10010a30:	mov    eax,0x1006206d
10010a35:	call   0x10059b25
10010a3a:	mov    esi,DWORD PTR [ebp+0x8]
10010a3d:	mov    eax,DWORD PTR [esi+0x8]
10010a40:	test   eax,eax
10010a42:	jne    0x10010a4b
10010a44:	mov    eax,0x80004005
10010a49:	jmp    0x10010a96
10010a4b:	cmp    DWORD PTR [eax],0x0
10010a4e:	je     0x10010a44
10010a50:	mov    ecx,DWORD PTR [ebp+0xc]
10010a53:	push   0x1
10010a55:	lea    edi,[ebp+0x8]
10010a58:	call   0x1000d8d3
10010a5d:	and    DWORD PTR [ebp-0x4],0x0
10010a61:	mov    eax,edi
10010a63:	call   0x1000d933
10010a68:	push   eax
10010a69:	lea    ecx,[ebp-0x28]
10010a6c:	call   0x100011c8
10010a71:	lea    eax,[ebp-0x28]
10010a74:	mov    BYTE PTR [ebp-0x4],0x1
10010a78:	push   eax
10010a79:	mov    eax,DWORD PTR [esi+0x8]
10010a7c:	mov    esi,DWORD PTR [eax]
10010a7e:	call   0x10007ac2
10010a83:	push   0x0
10010a85:	push   0x1
10010a87:	lea    ecx,[ebp-0x28]
10010a8a:	call   0x100012eb
10010a8f:	call   0x100025b0
10010a94:	xor    eax,eax
10010a96:	call   0x10059bfd
10010a9b:	ret    0x8
10010a9e:	push   0x1c
10010aa0:	mov    eax,0x100604ab
10010aa5:	call   0x10059b25
10010aaa:	mov    eax,DWORD PTR [ebp+0x8]
10010aad:	mov    eax,DWORD PTR [eax+0x8]
10010ab0:	test   eax,eax
10010ab2:	jne    0x10010abb
10010ab4:	mov    eax,0x80004005
10010ab9:	jmp    0x10010b07
10010abb:	cmp    DWORD PTR [eax+0x4],0x0
10010abf:	je     0x10010ab4
10010ac1:	mov    eax,DWORD PTR [eax+0x4]
10010ac4:	lea    ecx,[ebp-0x28]
10010ac7:	push   ecx
10010ac8:	call   0x100199c9
10010acd:	and    DWORD PTR [ebp-0x4],0x0
10010ad1:	cmp    DWORD PTR [eax+0x18],0x10
10010ad5:	jb     0x10010adc
10010ad7:	mov    eax,DWORD PTR [eax+0x4]
10010ada:	jmp    0x10010adf
10010adc:	add    eax,0x4
10010adf:	push   eax
10010ae0:	lea    edi,[ebp+0x8]
10010ae3:	call   0x10002455
10010ae8:	push   0x0
10010aea:	push   0x1
10010aec:	lea    ecx,[ebp-0x28]
10010aef:	call   0x100012eb
10010af4:	mov    eax,edi
10010af6:	call   0x1000d950
10010afb:	mov    ecx,DWORD PTR [ebp+0xc]
10010afe:	mov    DWORD PTR [ecx],eax
10010b00:	call   0x100025b0
10010b05:	xor    eax,eax
10010b07:	call   0x10059bfd
10010b0c:	ret    0x8
10010b0f:	push   0x1c
10010b11:	mov    eax,0x1006206d
10010b16:	call   0x10059b25
10010b1b:	mov    esi,DWORD PTR [ebp+0x8]
10010b1e:	mov    eax,DWORD PTR [esi+0x8]
10010b21:	test   eax,eax
10010b23:	jne    0x10010b2c
10010b25:	mov    eax,0x80004005
10010b2a:	jmp    0x10010b79
10010b2c:	cmp    DWORD PTR [eax+0x4],0x0
10010b30:	je     0x10010b25
10010b32:	mov    ecx,DWORD PTR [ebp+0xc]
10010b35:	push   0x1
10010b37:	lea    edi,[ebp+0x8]
10010b3a:	call   0x1000d8d3
10010b3f:	and    DWORD PTR [ebp-0x4],0x0
10010b43:	mov    eax,edi
10010b45:	call   0x1000d933
10010b4a:	push   eax
10010b4b:	lea    ecx,[ebp-0x28]
10010b4e:	call   0x100011c8
10010b53:	lea    eax,[ebp-0x28]
10010b56:	mov    BYTE PTR [ebp-0x4],0x1
10010b5a:	push   eax
10010b5b:	mov    eax,DWORD PTR [esi+0x8]
10010b5e:	mov    esi,DWORD PTR [eax+0x4]
10010b61:	call   0x10007ac2
10010b66:	push   0x0
10010b68:	push   0x1
10010b6a:	lea    ecx,[ebp-0x28]
10010b6d:	call   0x100012eb
10010b72:	call   0x100025b0
10010b77:	xor    eax,eax
10010b79:	call   0x10059bfd
10010b7e:	ret    0x8
10010b81:	push   0x1c
10010b83:	mov    eax,0x100604ab
10010b88:	call   0x10059b25
10010b8d:	mov    eax,DWORD PTR [ebp+0x8]
10010b90:	mov    eax,DWORD PTR [eax+0x8]
10010b93:	test   eax,eax
10010b95:	jne    0x10010b9e
10010b97:	mov    eax,0x80004005
10010b9c:	jmp    0x10010bea
10010b9e:	cmp    DWORD PTR [eax+0x8],0x0
10010ba2:	je     0x10010b97
10010ba4:	mov    eax,DWORD PTR [eax+0x8]
10010ba7:	lea    ecx,[ebp-0x28]
10010baa:	push   ecx
10010bab:	call   0x100199c9
10010bb0:	and    DWORD PTR [ebp-0x4],0x0
10010bb4:	cmp    DWORD PTR [eax+0x18],0x10
10010bb8:	jb     0x10010bbf
10010bba:	mov    eax,DWORD PTR [eax+0x4]
10010bbd:	jmp    0x10010bc2
10010bbf:	add    eax,0x4
10010bc2:	push   eax
10010bc3:	lea    edi,[ebp+0x8]
10010bc6:	call   0x10002455
10010bcb:	push   0x0
10010bcd:	push   0x1
10010bcf:	lea    ecx,[ebp-0x28]
10010bd2:	call   0x100012eb
10010bd7:	mov    eax,edi
10010bd9:	call   0x1000d950
10010bde:	mov    ecx,DWORD PTR [ebp+0xc]
10010be1:	mov    DWORD PTR [ecx],eax
10010be3:	call   0x100025b0
10010be8:	xor    eax,eax
10010bea:	call   0x10059bfd
10010bef:	ret    0x8
10010bf2:	push   0x1c
10010bf4:	mov    eax,0x1006206d
10010bf9:	call   0x10059b25
10010bfe:	mov    esi,DWORD PTR [ebp+0x8]
10010c01:	mov    eax,DWORD PTR [esi+0x8]
10010c04:	test   eax,eax
10010c06:	jne    0x10010c0f
10010c08:	mov    eax,0x80004005
10010c0d:	jmp    0x10010c5c
10010c0f:	cmp    DWORD PTR [eax+0x8],0x0
10010c13:	je     0x10010c08
10010c15:	mov    ecx,DWORD PTR [ebp+0xc]
10010c18:	push   0x1
10010c1a:	lea    edi,[ebp+0x8]
10010c1d:	call   0x1000d8d3
10010c22:	and    DWORD PTR [ebp-0x4],0x0
10010c26:	mov    eax,edi
10010c28:	call   0x1000d933
10010c2d:	push   eax
10010c2e:	lea    ecx,[ebp-0x28]
10010c31:	call   0x100011c8
10010c36:	lea    eax,[ebp-0x28]
10010c39:	mov    BYTE PTR [ebp-0x4],0x1
10010c3d:	push   eax
10010c3e:	mov    eax,DWORD PTR [esi+0x8]
10010c41:	mov    esi,DWORD PTR [eax+0x8]
10010c44:	call   0x10007ac2
10010c49:	push   0x0
10010c4b:	push   0x1
10010c4d:	lea    ecx,[ebp-0x28]
10010c50:	call   0x100012eb
10010c55:	call   0x100025b0
10010c5a:	xor    eax,eax
10010c5c:	call   0x10059bfd
10010c61:	ret    0x8
10010c64:	mov    eax,DWORD PTR [esp+0x4]
10010c68:	push   esi
10010c69:	mov    esi,DWORD PTR [eax+0xc]
10010c6c:	test   esi,esi
10010c6e:	push   edi
10010c6f:	je     0x10010c77
10010c71:	mov    eax,DWORD PTR [esi]
10010c73:	push   esi
10010c74:	call   DWORD PTR [eax+0x4]
10010c77:	mov    eax,DWORD PTR [esp+0x10]
10010c7b:	test   eax,eax
10010c7d:	jne    0x10010c86
10010c7f:	mov    edi,0x80004003
10010c84:	jmp    0x10010c94
10010c86:	test   esi,esi
10010c88:	mov    DWORD PTR [eax],esi
10010c8a:	je     0x10010c92
10010c8c:	mov    eax,DWORD PTR [esi]
10010c8e:	push   esi
10010c8f:	call   DWORD PTR [eax+0x4]
10010c92:	xor    edi,edi
10010c94:	test   esi,esi
10010c96:	je     0x10010c9e
10010c98:	mov    eax,DWORD PTR [esi]
10010c9a:	push   esi
10010c9b:	call   DWORD PTR [eax+0x8]
10010c9e:	mov    eax,edi
10010ca0:	pop    edi
10010ca1:	pop    esi
10010ca2:	ret    0x8
10010ca5:	mov    eax,DWORD PTR [esp+0x8]
10010ca9:	test   eax,eax
10010cab:	jne    0x10010cb4
10010cad:	mov    eax,0x80004003
10010cb2:	jmp    0x10010cbc
10010cb4:	mov    DWORD PTR [eax],0x1
10010cba:	xor    eax,eax
10010cbc:	ret    0x8
10010cbf:	push   edi
10010cc0:	mov    edi,DWORD PTR [esp+0x14]
10010cc4:	mov    ecx,0x1007f7f8
10010cc9:	call   0x10010534
10010cce:	pop    edi
10010ccf:	ret    0x10
10010cd2:	push   DWORD PTR [esp+0x18]
10010cd6:	mov    eax,0x1007f7f8
10010cdb:	push   DWORD PTR [esp+0x14]
10010cdf:	push   DWORD PTR [esp+0x14]
10010ce3:	call   0x10010562
10010ce8:	ret    0x18
10010ceb:	push   ebp
10010cec:	mov    ebp,esp
10010cee:	push   DWORD PTR [ebp+0x28]
10010cf1:	mov    eax,0x1007f7f8
10010cf6:	push   DWORD PTR [ebp+0x24]
10010cf9:	push   DWORD PTR [ebp+0x20]
10010cfc:	push   DWORD PTR [ebp+0x1c]
10010cff:	push   DWORD PTR [ebp+0x18]
10010d02:	push   DWORD PTR [ebp+0xc]
10010d05:	push   DWORD PTR [ebp+0x8]
10010d08:	call   0x10010605
10010d0d:	pop    ebp
10010d0e:	ret    0x24
10010d11:	mov    DWORD PTR [ecx],0x1006dd3c
10010d17:	mov    DWORD PTR [ecx+0x4],0xc0000001
10010d1e:	mov    ecx,DWORD PTR ds:0x10080c04
10010d24:	mov    eax,DWORD PTR [ecx]
10010d26:	jmp    DWORD PTR [eax+0x8]
10010d29:	mov    ecx,DWORD PTR [esp+0x4]
10010d2d:	dec    DWORD PTR [ecx+0x4]
10010d30:	push   esi
10010d31:	mov    esi,DWORD PTR [ecx+0x4]
10010d34:	jne    0x10010d41
10010d36:	test   ecx,ecx
10010d38:	je     0x10010d41
10010d3a:	mov    eax,DWORD PTR [ecx]
10010d3c:	push   0x1
10010d3e:	call   DWORD PTR [eax+0x30]
10010d41:	mov    eax,esi
10010d43:	pop    esi
10010d44:	ret    0x4
10010d47:	push   ebx
10010d48:	push   DWORD PTR [esp+0xc]
10010d4c:	mov    ebx,DWORD PTR [esp+0x14]
10010d50:	push   DWORD PTR [esp+0xc]
10010d54:	mov    eax,0x1006dd18
10010d59:	call   0x10010413
10010d5e:	pop    ebx
10010d5f:	ret    0xc
10010d62:	push   esi
10010d63:	mov    esi,ecx
10010d65:	call   0x10010d11
10010d6a:	test   BYTE PTR [esp+0x8],0x1
10010d6f:	je     0x10010d78
10010d71:	push   esi
10010d72:	call   0x10042f82
10010d77:	pop    ecx
10010d78:	mov    eax,esi
10010d7a:	pop    esi
10010d7b:	ret    0x4
10010d7e:	push   esi
10010d7f:	mov    esi,ecx
10010d81:	cmp    BYTE PTR [esi+0x4],0x0
10010d85:	je     0x10010d93
10010d87:	push   DWORD PTR [esi]
10010d89:	call   DWORD PTR ds:0x100660ec
10010d8f:	mov    BYTE PTR [esi+0x4],0x0
10010d93:	pop    esi
10010d94:	ret    
10010d95:	push   ebp
10010d96:	mov    ebp,esp
10010d98:	push   ecx
10010d99:	push   ecx
10010d9a:	mov    ecx,DWORD PTR [ebp+0x8]
10010d9d:	push   ebx
10010d9e:	push   esi
10010d9f:	mov    esi,eax
10010da1:	mov    eax,DWORD PTR [ecx]
10010da3:	test   eax,eax
10010da5:	mov    ebx,DWORD PTR [esi]
10010da7:	jne    0x10010dc3
10010da9:	test   ebx,ebx
10010dab:	je     0x10010e11
10010dad:	xor    al,al
10010daf:	test   al,al
10010db1:	jne    0x10010e11
10010db3:	mov    eax,DWORD PTR [esi]
10010db5:	push   0x1006dd90
10010dba:	mov    esi,ecx
10010dbc:	call   0x100103c3
10010dc1:	jmp    0x10010e13
10010dc3:	test   ebx,ebx
10010dc5:	je     0x10010dad
10010dc7:	and    DWORD PTR [ebp-0x4],0x0
10010dcb:	and    DWORD PTR [ebp-0x8],0x0
10010dcf:	mov    ecx,DWORD PTR [eax]
10010dd1:	push   edi
10010dd2:	lea    edx,[ebp-0x4]
10010dd5:	push   edx
10010dd6:	mov    edi,0x1006dd70
10010ddb:	push   edi
10010ddc:	push   eax
10010ddd:	call   DWORD PTR [ecx]
10010ddf:	mov    eax,DWORD PTR [ebx]
10010de1:	lea    ecx,[ebp-0x8]
10010de4:	push   ecx
10010de5:	push   edi
10010de6:	push   ebx
10010de7:	call   DWORD PTR [eax]
10010de9:	mov    eax,DWORD PTR [ebp-0x8]
10010dec:	cmp    DWORD PTR [ebp-0x4],eax
10010def:	pop    edi
10010df0:	sete   bl
10010df3:	test   eax,eax
10010df5:	je     0x10010dfd
10010df7:	mov    ecx,DWORD PTR [eax]
10010df9:	push   eax
10010dfa:	call   DWORD PTR [ecx+0x8]
10010dfd:	mov    eax,DWORD PTR [ebp-0x4]
10010e00:	test   eax,eax
10010e02:	je     0x10010e0a
10010e04:	mov    ecx,DWORD PTR [eax]
10010e06:	push   eax
10010e07:	call   DWORD PTR [ecx+0x8]
10010e0a:	mov    ecx,DWORD PTR [ebp+0x8]
10010e0d:	mov    al,bl
10010e0f:	jmp    0x10010daf
10010e11:	mov    eax,DWORD PTR [ecx]
10010e13:	pop    esi
10010e14:	pop    ebx
10010e15:	leave  
10010e16:	ret    0x4
10010e19:	push   0xc
10010e1b:	mov    eax,0x1005fd62
10010e20:	call   0x10059b58
10010e25:	mov    ebx,DWORD PTR [ebp+0x8]
10010e28:	xor    edi,edi
10010e2a:	cmp    ebx,edi
10010e2c:	jne    0x10010e35
10010e2e:	mov    eax,0x80004003
10010e33:	jmp    0x10010e8d
10010e35:	push   0xc
10010e37:	mov    DWORD PTR [ebx],edi
10010e39:	mov    DWORD PTR [ebp-0x14],0x8007000e
10010e40:	mov    DWORD PTR [ebp-0x4],edi
10010e43:	call   0x1004358e
10010e48:	mov    esi,eax
10010e4a:	cmp    esi,edi
10010e4c:	pop    ecx
10010e4d:	je     0x10010e6a
10010e4f:	mov    DWORD PTR [esi+0x4],edi
10010e52:	mov    DWORD PTR [esi+0x8],edi
10010e55:	mov    DWORD PTR [esi],0x1006dd3c
10010e5b:	mov    ecx,DWORD PTR ds:0x10080c04
10010e61:	mov    eax,DWORD PTR [ecx]
10010e63:	call   DWORD PTR [eax+0x4]
10010e66:	mov    eax,esi
10010e68:	jmp    0x10010e7b
10010e6a:	xor    eax,eax
10010e6c:	jmp    0x10010e7b
10010e6e:	mov    eax,0x10010e74
10010e73:	ret    
10010e74:	mov    ebx,DWORD PTR [ebp+0x8]
10010e77:	xor    edi,edi
10010e79:	mov    eax,edi
10010e7b:	cmp    eax,edi
10010e7d:	je     0x10010e88
10010e7f:	inc    DWORD PTR [eax+0x4]
10010e82:	dec    DWORD PTR [eax+0x4]
10010e85:	mov    DWORD PTR [ebp-0x14],edi
10010e88:	mov    DWORD PTR [ebx],eax
10010e8a:	mov    eax,DWORD PTR [ebp-0x14]
10010e8d:	call   0x10059bfd
10010e92:	ret    0x4
10010e95:	push   ebp
10010e96:	mov    ebp,esp
10010e98:	push   ecx
10010e99:	push   ecx
10010e9a:	mov    ecx,DWORD PTR [ebp+0x8]
10010e9d:	push   ebx
10010e9e:	push   esi
10010e9f:	mov    esi,eax
10010ea1:	mov    eax,DWORD PTR [ecx]
10010ea3:	test   eax,eax
10010ea5:	mov    ebx,DWORD PTR [esi]
10010ea7:	jne    0x10010ec3
10010ea9:	test   ebx,ebx
10010eab:	je     0x10010f11
10010ead:	xor    al,al
10010eaf:	test   al,al
10010eb1:	jne    0x10010f11
10010eb3:	mov    eax,DWORD PTR [esi]
10010eb5:	push   0x1006dd08
10010eba:	mov    esi,ecx
10010ebc:	call   0x100103c3
10010ec1:	jmp    0x10010f13
10010ec3:	test   ebx,ebx
10010ec5:	je     0x10010ead
10010ec7:	and    DWORD PTR [ebp-0x4],0x0
10010ecb:	and    DWORD PTR [ebp-0x8],0x0
10010ecf:	mov    ecx,DWORD PTR [eax]
10010ed1:	push   edi
10010ed2:	lea    edx,[ebp-0x4]
10010ed5:	push   edx
10010ed6:	mov    edi,0x1006dd70
10010edb:	push   edi
10010edc:	push   eax
10010edd:	call   DWORD PTR [ecx]
10010edf:	mov    eax,DWORD PTR [ebx]
10010ee1:	lea    ecx,[ebp-0x8]
10010ee4:	push   ecx
10010ee5:	push   edi
10010ee6:	push   ebx
10010ee7:	call   DWORD PTR [eax]
10010ee9:	mov    eax,DWORD PTR [ebp-0x8]
10010eec:	cmp    DWORD PTR [ebp-0x4],eax
10010eef:	pop    edi
10010ef0:	sete   bl
10010ef3:	test   eax,eax
10010ef5:	je     0x10010efd
10010ef7:	mov    ecx,DWORD PTR [eax]
10010ef9:	push   eax
10010efa:	call   DWORD PTR [ecx+0x8]
10010efd:	mov    eax,DWORD PTR [ebp-0x4]
10010f00:	test   eax,eax
10010f02:	je     0x10010f0a
10010f04:	mov    ecx,DWORD PTR [eax]
10010f06:	push   eax
10010f07:	call   DWORD PTR [ecx+0x8]
10010f0a:	mov    ecx,DWORD PTR [ebp+0x8]
10010f0d:	mov    al,bl
10010f0f:	jmp    0x10010eaf
10010f11:	mov    eax,DWORD PTR [ecx]
10010f13:	pop    esi
10010f14:	pop    ebx
10010f15:	leave  
10010f16:	ret    0x4
10010f19:	push   edi
10010f1a:	mov    edi,eax
10010f1c:	cmp    edi,esi
10010f1e:	je     0x10010f37
10010f20:	call   0x100025b0
10010f25:	mov    eax,DWORD PTR [esi]
10010f27:	test   eax,eax
10010f29:	mov    DWORD PTR [edi],eax
10010f2b:	je     0x10010f37
10010f2d:	add    eax,0x8
10010f30:	push   eax
10010f31:	call   DWORD PTR ds:0x100660a4
10010f37:	mov    eax,edi
10010f39:	pop    edi
10010f3a:	ret    
10010f3b:	push   0x4
10010f3d:	mov    eax,0x1005f77f
10010f42:	call   0x10059b25
10010f47:	mov    edi,ecx
10010f49:	cmp    DWORD PTR [ebp+0x8],0x0
10010f4d:	je     0x10010f60
10010f4f:	mov    eax,DWORD PTR [edi]
10010f51:	test   eax,eax
10010f53:	je     0x10010f59
10010f55:	mov    eax,DWORD PTR [eax]
10010f57:	jmp    0x10010f5b
10010f59:	xor    eax,eax
10010f5b:	cmp    eax,DWORD PTR [ebp+0x8]
10010f5e:	je     0x10010f9a
10010f60:	call   0x100025b0
10010f65:	push   0xc
10010f67:	call   0x1004358e
10010f6c:	mov    esi,eax
10010f6e:	pop    ecx
10010f6f:	mov    DWORD PTR [ebp-0x10],esi
10010f72:	and    DWORD PTR [ebp-0x4],0x0
10010f76:	test   esi,esi
10010f78:	je     0x10010f84
10010f7a:	push   DWORD PTR [ebp+0x8]
10010f7d:	call   0x100025f0
10010f82:	jmp    0x10010f86
10010f84:	xor    eax,eax
10010f86:	or     DWORD PTR [ebp-0x4],0xffffffff
10010f8a:	test   eax,eax
10010f8c:	mov    DWORD PTR [edi],eax
10010f8e:	jne    0x10010f9a
10010f90:	push   0x8007000e
10010f95:	call   0x10050c80
10010f9a:	mov    eax,edi
10010f9c:	call   0x10059bfd
10010fa1:	ret    0x4
10010fa4:	push   0x4
10010fa6:	mov    eax,0x1005f77f
10010fab:	call   0x10059b25
10010fb0:	cmp    DWORD PTR [esi],0x0
10010fb3:	jne    0x10010fe8
10010fb5:	push   0xc
10010fb7:	call   0x1004358e
10010fbc:	pop    ecx
10010fbd:	test   eax,eax
10010fbf:	je     0x10010fd1
10010fc1:	and    DWORD PTR [eax+0x4],0x0
10010fc5:	and    DWORD PTR [eax],0x0
10010fc8:	mov    DWORD PTR [eax+0x8],0x1
10010fcf:	jmp    0x10010fd3
10010fd1:	xor    eax,eax
10010fd3:	or     DWORD PTR [esp+0x1c],0xffffffff
10010fd8:	test   eax,eax
10010fda:	mov    DWORD PTR [esi],eax
10010fdc:	jne    0x10010fe8
10010fde:	push   0x8007000e
10010fe3:	call   0x10050c80
10010fe8:	mov    eax,DWORD PTR [esi]
10010fea:	call   0x10059bfd
10010fef:	ret    
10010ff0:	push   0x34
10010ff2:	mov    eax,0x10061fb6
10010ff7:	call   0x10059b8e
10010ffc:	mov    eax,DWORD PTR [ebp+0x8]
10010fff:	xor    ebx,ebx
10011001:	mov    esi,ecx
10011003:	mov    DWORD PTR [ebp-0x34],eax
10011006:	mov    DWORD PTR [ebp-0x40],esi
10011009:	mov    DWORD PTR [ebp-0x3c],ebx
1001100c:	xor    edi,edi
1001100e:	push   0x1
10011010:	lea    eax,[ebp-0x30]
10011013:	push   eax
10011014:	push   esi
10011015:	mov    eax,edi
10011017:	mov    BYTE PTR [ebp-0x30],0x3b
1001101b:	call   0x1000d0a8
10011020:	cmp    eax,0xffffffff
10011023:	mov    DWORD PTR [ebp-0x38],eax
10011026:	jne    0x1001102e
10011028:	mov    eax,DWORD PTR [esi+0x14]
1001102b:	mov    DWORD PTR [ebp-0x38],eax
1001102e:	cmp    DWORD PTR [ebp-0x38],edi
10011031:	jbe    0x100110b8
10011037:	push   ebx
10011038:	lea    ecx,[ebp-0x2c]
1001103b:	mov    DWORD PTR [ebp-0x14],0xf
10011042:	call   0x10001417
10011047:	mov    DWORD PTR [ebp-0x4],ebx
1001104a:	jmp    0x10011080
1001104c:	mov    eax,esi
1001104e:	call   0x10011ec7
10011053:	cmp    BYTE PTR [eax],0x20
10011056:	je     0x1001107f
10011058:	mov    eax,esi
1001105a:	call   0x10011ec7
1001105f:	movsx  eax,BYTE PTR [eax]
10011062:	push   eax
10011063:	call   0x10045ec1
10011068:	pop    ecx
10011069:	mov    BYTE PTR [ebp-0x3c],al
1001106c:	push   DWORD PTR [ebp-0x3c]
1001106f:	xor    ebx,ebx
10011071:	inc    ebx
10011072:	lea    esi,[ebp-0x2c]
10011075:	call   0x1000d034
1001107a:	mov    esi,DWORD PTR [ebp-0x40]
1001107d:	xor    ebx,ebx
1001107f:	inc    edi
10011080:	cmp    edi,DWORD PTR [ebp-0x38]
10011083:	jb     0x1001104c
10011085:	push   ebx
10011086:	push   0x1006dda0
1001108b:	push   0x8
1001108d:	push   0x1006ddcc
10011092:	inc    edi
10011093:	call   0x100042cf
10011098:	add    esp,0xc
1001109b:	push   eax
1001109c:	lea    eax,[ebp-0x2c]
1001109f:	push   eax
100110a0:	call   0x1000c970
100110a5:	test   eax,eax
100110a7:	lea    ecx,[ebp-0x2c]
100110aa:	je     0x100110d7
100110ac:	or     DWORD PTR [ebp-0x4],0xffffffff
100110b0:	push   ebx
100110b1:	push   0x1
100110b3:	call   0x100012eb
100110b8:	cmp    edi,DWORD PTR [esi+0x14]
100110bb:	jb     0x1001100e
100110c1:	mov    ecx,DWORD PTR [ebp-0x34]
100110c4:	push   0x1006cd08
100110c9:	call   0x100011c8
100110ce:	mov    eax,DWORD PTR [ebp-0x34]
100110d1:	call   0x10059c11
100110d6:	ret    
100110d7:	push   0x8
100110d9:	push   ebx
100110da:	call   0x100013a8
100110df:	mov    ecx,DWORD PTR [ebp-0x34]
100110e2:	lea    eax,[ebp-0x2c]
100110e5:	push   eax
100110e6:	call   0x100011a2
100110eb:	push   ebx
100110ec:	push   0x1
100110ee:	lea    ecx,[ebp-0x2c]
100110f1:	call   0x100012eb
100110f6:	jmp    0x100110ce
100110f8:	push   0x3c
100110fa:	mov    eax,0x10061f93
100110ff:	call   0x10059b25
10011104:	mov    edi,ecx
10011106:	push   0x3831542
1001110b:	push   0x1006dde0
10011110:	call   0x100042bd
10011115:	push   0x7d808aac
1001111a:	push   eax
1001111b:	call   0x100042bd
10011120:	push   0x3a382d9c
10011125:	push   eax
10011126:	call   0x100042bd
1001112b:	push   eax
1001112c:	push   0x10
1001112e:	push   0x1006de08
10011133:	call   0x100042cf
10011138:	add    esp,0x24
1001113b:	push   eax
1001113c:	lea    ecx,[ebp-0x28]
1001113f:	call   0x100011c8
10011144:	xor    ebx,ebx
10011146:	push   ebx
10011147:	lea    eax,[ebp-0x28]
1001114a:	push   eax
1001114b:	lea    eax,[ebp-0x44]
1001114e:	push   eax
1001114f:	mov    eax,DWORD PTR [ebp+0x8]
10011152:	mov    DWORD PTR [ebp-0x4],ebx
10011155:	mov    eax,DWORD PTR [eax+0x34]
10011158:	add    eax,0x20
1001115b:	call   0x10008602
10011160:	push   0x1006ddd8
10011165:	mov    esi,eax
10011167:	mov    BYTE PTR [ebp-0x4],0x1
1001116b:	call   0x10006639
10011170:	pop    ecx
10011171:	push   ebx
10011172:	push   0x1
10011174:	lea    ecx,[ebp-0x44]
10011177:	mov    BYTE PTR [ebp+0xb],al
1001117a:	call   0x100012eb
1001117f:	or     DWORD PTR [ebp-0x4],0xffffffff
10011183:	push   ebx
10011184:	push   0x1
10011186:	lea    ecx,[ebp-0x28]
10011189:	call   0x100012eb
1001118e:	cmp    BYTE PTR [ebp+0xb],bl
10011191:	je     0x100111bb
10011193:	push   DWORD PTR [ebp+0x14]
10011196:	lea    eax,[ebp+0x10]
10011199:	push   DWORD PTR [ebp+0x10]
1001119c:	push   DWORD PTR [ebp+0xc]
1001119f:	push   eax
100111a0:	call   0x1002f560
100111a5:	add    esp,0x10
100111a8:	push   eax
100111a9:	call   0x10002091
100111ae:	push   DWORD PTR [ebp+0x10]
100111b1:	call   0x10042f82
100111b6:	mov    eax,DWORD PTR [edi]
100111b8:	pop    ecx
100111b9:	jmp    0x100111c6
100111bb:	mov    eax,DWORD PTR [ebp+0x10]
100111be:	mov    ecx,DWORD PTR [ebp+0x14]
100111c1:	mov    DWORD PTR [ecx],eax
100111c3:	mov    eax,DWORD PTR [ebp+0xc]
100111c6:	call   0x10059bfd
100111cb:	ret    0x10
100111ce:	xor    ecx,ecx
100111d0:	cmp    DWORD PTR [esp+0x8],ecx
100111d4:	je     0x100111e8
100111d6:	mov    eax,DWORD PTR [esp+0x4]
100111da:	lea    eax,[eax+ecx*2]
100111dd:	rol    WORD PTR [eax],0x8
100111e1:	inc    ecx
100111e2:	cmp    ecx,DWORD PTR [esp+0x8]
100111e6:	jne    0x100111d6
100111e8:	ret    
100111e9:	push   0x14
100111eb:	mov    eax,0x10060488
100111f0:	call   0x10059b25
100111f5:	mov    edi,DWORD PTR ds:0x1006608c
100111fb:	xor    esi,esi
100111fd:	push   esi
100111fe:	push   esi
100111ff:	push   DWORD PTR [ebp+0x14]
10011202:	push   DWORD PTR [ebp+0x10]
10011205:	push   0x8
10011207:	push   DWORD PTR [ebp+0xc]
1001120a:	call   edi
1001120c:	mov    ebx,eax
1001120e:	cmp    ebx,esi
10011210:	je     0x100112af
10011216:	lea    eax,[ebp-0x10]
10011219:	mov    DWORD PTR [ebp-0x10],esi
1001121c:	push   eax
1001121d:	mov    eax,ebx
1001121f:	lea    esi,[ebp-0x20]
10011222:	call   0x10011f23
10011227:	and    DWORD PTR [ebp-0x4],0x0
1001122b:	mov    esi,DWORD PTR [ebp-0x1c]
1001122e:	test   esi,esi
10011230:	je     0x1001123b
10011232:	mov    eax,DWORD PTR [ebp-0x18]
10011235:	sub    eax,esi
10011237:	sar    eax,1
10011239:	jne    0x10011240
1001123b:	call   0x100434a0
10011240:	push   ebx
10011241:	push   esi
10011242:	push   DWORD PTR [ebp+0x14]
10011245:	push   DWORD PTR [ebp+0x10]
10011248:	push   0x8
1001124a:	push   DWORD PTR [ebp+0xc]
1001124d:	call   edi
1001124f:	cmp    eax,ebx
10011251:	jne    0x100112a4
10011253:	test   esi,esi
10011255:	je     0x10011260
10011257:	mov    eax,DWORD PTR [ebp-0x18]
1001125a:	sub    eax,esi
1001125c:	sar    eax,1
1001125e:	jne    0x10011265
10011260:	call   0x100434a0
10011265:	push   0x0
10011267:	push   ebx
10011268:	push   esi
10011269:	call   DWORD PTR ds:0x1006629c
1001126f:	mov    ecx,eax
10011271:	lea    edi,[ebp+0x14]
10011274:	call   0x1000d8d3
10011279:	mov    ebx,DWORD PTR [ebp+0x8]
1001127c:	mov    esi,eax
1001127e:	lea    eax,[ebx+0x30]
10011281:	call   0x10010f19
10011286:	call   0x100025b0
1001128b:	cmp    DWORD PTR [ebp-0x1c],0x0
1001128f:	mov    eax,DWORD PTR [ebp+0xc]
10011292:	mov    DWORD PTR [ebx+0x24],eax
10011295:	je     0x100112a0
10011297:	push   DWORD PTR [ebp-0x1c]
1001129a:	call   0x10042f82
1001129f:	pop    ecx
100112a0:	mov    al,0x1
100112a2:	jmp    0x100112b1
100112a4:	test   esi,esi
100112a6:	je     0x100112af
100112a8:	push   esi
100112a9:	call   0x10042f82
100112ae:	pop    ecx
100112af:	xor    al,al
100112b1:	call   0x10059bfd
100112b6:	ret    0x10
100112b9:	push   0x8
100112bb:	mov    eax,0x1005f957
100112c0:	call   0x10059b25
100112c5:	mov    ebx,ecx
100112c7:	test   bl,0x1
100112ca:	je     0x100112d3
100112cc:	xor    al,al
100112ce:	jmp    0x10011362
100112d3:	xor    edi,edi
100112d5:	mov    DWORD PTR [ebp-0x10],edi
100112d8:	cmp    DWORD PTR [ebp+0xc],0x4b1
100112df:	mov    DWORD PTR [ebp-0x4],edi
100112e2:	mov    esi,DWORD PTR [ebp+0x10]
100112e5:	jne    0x10011329
100112e7:	mov    eax,ebx
100112e9:	shr    eax,1
100112eb:	xor    ecx,ecx
100112ed:	push   0x2
100112ef:	pop    edx
100112f0:	mov    DWORD PTR [ebp-0x14],eax
100112f3:	mul    edx
100112f5:	seto   cl
100112f8:	neg    ecx
100112fa:	or     ecx,eax
100112fc:	push   ecx
100112fd:	call   0x10043811
10011302:	mov    esi,eax
10011304:	cmp    esi,edi
10011306:	pop    ecx
10011307:	je     0x10011310
10011309:	push   edi
1001130a:	call   0x10042f82
1001130f:	pop    ecx
10011310:	push   ebx
10011311:	push   DWORD PTR [ebp+0x10]
10011314:	mov    DWORD PTR [ebp-0x10],esi
10011317:	push   esi
10011318:	call   0x10045270
1001131d:	push   DWORD PTR [ebp-0x14]
10011320:	push   esi
10011321:	call   0x100111ce
10011326:	add    esp,0x14
10011329:	push   0x0
1001132b:	shr    ebx,1
1001132d:	push   ebx
1001132e:	push   esi
1001132f:	call   DWORD PTR ds:0x1006629c
10011335:	mov    ecx,eax
10011337:	lea    edi,[ebp+0x10]
1001133a:	call   0x1000d8d3
1001133f:	mov    ebx,DWORD PTR [ebp+0x8]
10011342:	mov    esi,eax
10011344:	lea    eax,[ebx+0x30]
10011347:	call   0x10010f19
1001134c:	call   0x100025b0
10011351:	mov    eax,DWORD PTR [ebp+0xc]
10011354:	push   DWORD PTR [ebp-0x10]
10011357:	mov    DWORD PTR [ebx+0x24],eax
1001135a:	call   0x10042f82
1001135f:	pop    ecx
10011360:	mov    al,0x1
10011362:	call   0x10059bfd
10011367:	ret    0xc
1001136a:	mov    cl,BYTE PTR [eax]
1001136c:	cmp    cl,0xff
1001136f:	jne    0x10011383
10011371:	cmp    BYTE PTR [eax+0x1],0xfe
10011375:	jne    0x10011383
10011377:	mov    eax,0x4b0
1001137c:	mov    DWORD PTR [edx],0x2
10011382:	ret    
10011383:	cmp    cl,0xfe
10011386:	jne    0x10011395
10011388:	cmp    BYTE PTR [eax+0x1],0xff
1001138c:	jne    0x10011395
1001138e:	mov    eax,0x4b1
10011393:	jmp    0x1001137c
10011395:	and    DWORD PTR [edx],0x0
10011398:	xor    eax,eax
1001139a:	ret    
1001139b:	push   0x14
1001139d:	mov    eax,0x10062cef
100113a2:	call   0x10059b25
100113a7:	xor    esi,esi
100113a9:	mov    DWORD PTR [ebp-0x18],esi
100113ac:	mov    DWORD PTR [ebp-0x4],esi
100113af:	mov    eax,DWORD PTR [edi+0x34]
100113b2:	mov    eax,DWORD PTR [eax+0xc]
100113b5:	cmp    DWORD PTR [eax+0x1c],0x10
100113b9:	mov    ecx,DWORD PTR [eax+0x18]
100113bc:	mov    DWORD PTR [ebp-0x10],esi
100113bf:	jb     0x100113c6
100113c1:	mov    eax,DWORD PTR [eax+0x8]
100113c4:	jmp    0x100113c9
100113c6:	add    eax,0x8
100113c9:	lea    edx,[ebp-0x10]
100113cc:	push   edx
100113cd:	push   ecx
100113ce:	push   eax
100113cf:	push   edi
100113d0:	lea    ecx,[ebp-0x18]
100113d3:	call   0x100110f8
100113d8:	cmp    eax,esi
100113da:	mov    DWORD PTR [ebp-0x14],eax
100113dd:	je     0x100115f8
100113e3:	or     DWORD PTR [edi+0x28],0xffffffff
100113e7:	mov    eax,DWORD PTR [edi+0x34]
100113ea:	mov    eax,DWORD PTR [eax+0xc]
100113ed:	cmp    DWORD PTR [eax+0x18],esi
100113f0:	je     0x100115f8
100113f6:	push   0x1ddf8c96
100113fb:	push   0x4e0a5fd4
10011400:	push   0x1006de1c
10011405:	call   0x100042bd
1001140a:	pop    ecx
1001140b:	pop    ecx
1001140c:	push   eax
1001140d:	call   0x100042bd
10011412:	push   eax
10011413:	push   0x5
10011415:	push   0x1006de54
1001141a:	lea    esi,[edi+0x8]
1001141d:	call   0x100042cf
10011422:	add    esp,0x14
10011425:	push   eax
10011426:	call   0x10006639
1001142b:	test   al,al
1001142d:	pop    ecx
1001142e:	je     0x10011446
10011430:	push   DWORD PTR [ebp-0x10]
10011433:	push   DWORD PTR [ebp-0x14]
10011436:	push   0xfde9
1001143b:	push   edi
1001143c:	call   0x100111e9
10011441:	jmp    0x100115ed
10011446:	push   0x35400216
1001144b:	push   0x498c1d3e
10011450:	push   0x1006de5c
10011455:	call   0x100042bd
1001145a:	pop    ecx
1001145b:	pop    ecx
1001145c:	push   eax
1001145d:	call   0x100042bd
10011462:	push   eax
10011463:	push   0x6
10011465:	push   0x1006de8c
1001146a:	call   0x100042cf
1001146f:	add    esp,0x14
10011472:	push   eax
10011473:	call   0x10006639
10011478:	test   al,al
1001147a:	pop    ecx
1001147b:	mov    ebx,0x1006df08
10011480:	jne    0x1001154b
10011486:	push   0x2bbb1e6
1001148b:	push   0x1006de94
10011490:	call   0x100042bd
10011495:	push   eax
10011496:	push   0x8
10011498:	push   0x1006debc
1001149d:	call   0x100042cf
100114a2:	add    esp,0x14
100114a5:	push   eax
100114a6:	call   0x10006639
100114ab:	test   al,al
100114ad:	pop    ecx
100114ae:	jne    0x1001154b
100114b4:	push   0x5e000656
100114b9:	push   0x1006dec8
100114be:	call   0x100042bd
100114c3:	push   eax
100114c4:	push   0x8
100114c6:	push   ebx
100114c7:	call   0x100042cf
100114cc:	add    esp,0x14
100114cf:	push   eax
100114d0:	call   0x10006639
100114d5:	test   al,al
100114d7:	pop    ecx
100114d8:	jne    0x1001154b
100114da:	push   0x1006cd08
100114df:	call   0x10006639
100114e4:	test   al,al
100114e6:	pop    ecx
100114e7:	push   DWORD PTR [ebp-0x10]
100114ea:	push   DWORD PTR [ebp-0x14]
100114ed:	je     0x1001152f
100114ef:	push   0xfde9
100114f4:	push   edi
100114f5:	call   0x100111e9
100114fa:	test   al,al
100114fc:	je     0x1001150a
100114fe:	mov    DWORD PTR [edi+0x28],0x2
10011505:	jmp    0x100115f8
1001150a:	push   DWORD PTR [ebp-0x10]
1001150d:	push   DWORD PTR [ebp-0x14]
10011510:	push   0x6faf
10011515:	push   edi
10011516:	call   0x100111e9
1001151b:	test   al,al
1001151d:	je     0x100115f8
10011523:	mov    DWORD PTR [edi+0x28],0x1
1001152a:	jmp    0x100115f8
1001152f:	push   0x6faf
10011534:	push   edi
10011535:	call   0x100111e9
1001153a:	test   al,al
1001153c:	je     0x100115f8
10011542:	and    DWORD PTR [edi+0x28],0x0
10011546:	jmp    0x100115f8
1001154b:	and    DWORD PTR [ebp-0x1c],0x0
1001154f:	cmp    DWORD PTR [ebp-0x10],0x2
10011553:	jb     0x10011575
10011555:	mov    eax,DWORD PTR [ebp-0x14]
10011558:	lea    edx,[ebp-0x1c]
1001155b:	call   0x1001136a
10011560:	test   eax,eax
10011562:	je     0x10011575
10011564:	mov    edx,DWORD PTR [ebp-0x1c]
10011567:	mov    ecx,DWORD PTR [ebp-0x10]
1001156a:	mov    esi,DWORD PTR [ebp-0x14]
1001156d:	sub    ecx,edx
1001156f:	add    edx,esi
10011571:	push   edx
10011572:	push   eax
10011573:	jmp    0x100115e7
10011575:	push   0x2f202d66
1001157a:	push   0x3a05fd7c
1001157f:	push   0x1006df14
10011584:	call   0x100042bd
10011589:	pop    ecx
1001158a:	pop    ecx
1001158b:	push   eax
1001158c:	call   0x100042bd
10011591:	push   eax
10011592:	push   0x8
10011594:	push   ebx
10011595:	call   0x100042cf
1001159a:	add    esp,0x14
1001159d:	push   eax
1001159e:	call   0x10006639
100115a3:	test   al,al
100115a5:	pop    ecx
100115a6:	je     0x100115b2
100115a8:	push   DWORD PTR [ebp-0x14]
100115ab:	push   0x4b0
100115b0:	jmp    0x100115e4
100115b2:	push   0x454af8e0
100115b7:	push   0x1006df4c
100115bc:	call   0x100042bd
100115c1:	push   eax
100115c2:	push   0x8
100115c4:	push   0x1006debc
100115c9:	call   0x100042cf
100115ce:	add    esp,0x14
100115d1:	push   eax
100115d2:	call   0x10006639
100115d7:	test   al,al
100115d9:	pop    ecx
100115da:	je     0x100115f8
100115dc:	push   DWORD PTR [ebp-0x14]
100115df:	push   0x4b1
100115e4:	mov    ecx,DWORD PTR [ebp-0x10]
100115e7:	push   edi
100115e8:	call   0x100112b9
100115ed:	test   al,al
100115ef:	je     0x100115f8
100115f1:	mov    DWORD PTR [edi+0x28],0x3
100115f8:	push   DWORD PTR [ebp-0x18]
100115fb:	call   0x10042f82
10011600:	pop    ecx
10011601:	call   0x10059bfd
10011606:	ret    
10011607:	push   0x0
10011609:	push   0x1006df70
1001160e:	push   0x5
10011610:	push   0x1006dfac
10011615:	call   0x100042cf
1001161a:	add    esp,0xc
1001161d:	push   eax
1001161e:	push   esi
1001161f:	call   0x1000c970
10011624:	cmp    eax,0xffffffff
10011627:	jne    0x100116d3
1001162d:	push   0x0
1001162f:	push   0x14439050
10011634:	push   0x7e9f758
10011639:	push   0x446d94e
1001163e:	push   0x724e4562
10011643:	push   0x1006dfb4
10011648:	call   0x100042bd
1001164d:	pop    ecx
1001164e:	pop    ecx
1001164f:	push   eax
10011650:	call   0x100042bd
10011655:	pop    ecx
10011656:	pop    ecx
10011657:	push   eax
10011658:	call   0x100042bd
1001165d:	pop    ecx
1001165e:	pop    ecx
1001165f:	push   eax
10011660:	call   0x100042bd
10011665:	push   eax
10011666:	push   0x16
10011668:	push   0x1006dff0
1001166d:	call   0x100042cf
10011672:	add    esp,0x14
10011675:	push   eax
10011676:	push   esi
10011677:	call   0x1000c970
1001167c:	cmp    eax,0xffffffff
1001167f:	jne    0x100116d3
10011681:	push   0x0
10011683:	push   0x1006e008
10011688:	push   0x18
1001168a:	push   0x1006e030
1001168f:	call   0x100042cf
10011694:	add    esp,0xc
10011697:	push   eax
10011698:	push   esi
10011699:	call   0x1000c970
1001169e:	cmp    eax,0xffffffff
100116a1:	jne    0x100116d3
100116a3:	push   0x0
100116a5:	push   0x6c01dce8
100116aa:	push   0x1006e04c
100116af:	call   0x100042bd
100116b4:	push   eax
100116b5:	push   0x16
100116b7:	push   0x1006e084
100116bc:	call   0x100042cf
100116c1:	add    esp,0x14
100116c4:	push   eax
100116c5:	push   esi
100116c6:	call   0x1000c970
100116cb:	cmp    eax,0xffffffff
100116ce:	jne    0x100116d3
100116d0:	xor    al,al
100116d2:	ret    
100116d3:	mov    al,0x1
100116d5:	ret    
100116d6:	push   ebp
100116d7:	mov    ebp,esp
100116d9:	and    esp,0xfffffff8
100116dc:	push   0xffffffff
100116de:	push   0x1006369c
100116e3:	mov    eax,fs:0x0
100116e9:	push   eax
100116ea:	sub    esp,0x84
100116f0:	mov    eax,ds:0x1007e030
100116f5:	xor    eax,esp
100116f7:	mov    DWORD PTR [esp+0x7c],eax
100116fb:	push   esi
100116fc:	push   edi
100116fd:	mov    eax,ds:0x1007e030
10011702:	xor    eax,esp
10011704:	push   eax
10011705:	lea    eax,[esp+0x90]
1001170c:	mov    fs:0x0,eax
10011712:	lea    eax,[esp+0x10]
10011716:	mov    edi,ecx
10011718:	push   eax
10011719:	mov    DWORD PTR [ebx+0x34],edi
1001171c:	call   0x10010e19
10011721:	test   eax,eax
10011723:	jl     0x10011856
10011729:	mov    esi,DWORD PTR [esp+0x10]
1001172d:	test   esi,esi
1001172f:	mov    DWORD PTR [esp+0x10],esi
10011733:	je     0x1001173b
10011735:	mov    eax,DWORD PTR [esi]
10011737:	push   esi
10011738:	call   DWORD PTR [eax+0x4]
1001173b:	lea    eax,[ebx+0x38]
1001173e:	push   eax
1001173f:	lea    eax,[esp+0x14]
10011743:	call   0x10010e95
10011748:	test   esi,esi
1001174a:	je     0x10011752
1001174c:	mov    eax,DWORD PTR [esi]
1001174e:	push   esi
1001174f:	call   DWORD PTR [eax+0x8]
10011752:	lea    eax,[edi+0x20]
10011755:	push   0x1006cd08
1001175a:	lea    edi,[esp+0x14]
1001175e:	mov    DWORD PTR [esp+0x18],eax
10011762:	mov    DWORD PTR [esi+0x8],eax
10011765:	call   0x10002455
1001176a:	mov    esi,eax
1001176c:	lea    eax,[ebx+0x30]
1001176f:	call   0x10010f19
10011774:	call   0x100025b0
10011779:	push   0x1006e09c
1001177e:	push   0xc
10011780:	push   0x1006e0c4
10011785:	call   0x100042cf
1001178a:	add    esp,0xc
1001178d:	push   eax
1001178e:	lea    ecx,[esp+0x1c]
10011792:	call   0x100011c8
10011797:	xor    edi,edi
10011799:	push   edi
1001179a:	lea    eax,[esp+0x1c]
1001179e:	push   eax
1001179f:	lea    eax,[esp+0x74]
100117a3:	push   eax
100117a4:	mov    DWORD PTR [esp+0xa4],edi
100117ab:	mov    eax,DWORD PTR [ebx+0x34]
100117ae:	add    eax,0x20
100117b1:	call   0x10008602
100117b6:	push   edi
100117b7:	push   0x1
100117b9:	lea    ecx,[esp+0x20]
100117bd:	mov    BYTE PTR [esp+0xa0],0x2
100117c5:	call   0x100012eb
100117ca:	push   0x1006cd08
100117cf:	lea    esi,[esp+0x70]
100117d3:	call   0x10006639
100117d8:	test   al,al
100117da:	pop    ecx
100117db:	jne    0x1001184a
100117dd:	call   0x10011607
100117e2:	test   al,al
100117e4:	je     0x1001184a
100117e6:	push   edi
100117e7:	mov    eax,esi
100117e9:	push   eax
100117ea:	lea    eax,[esp+0x3c]
100117ee:	push   eax
100117ef:	mov    eax,DWORD PTR [esp+0x20]
100117f3:	call   0x10008602
100117f8:	lea    ecx,[esp+0x50]
100117fc:	push   ecx
100117fd:	mov    ecx,eax
100117ff:	mov    BYTE PTR [esp+0x9c],0x3
10011807:	call   0x10010ff0
1001180c:	pop    ecx
1001180d:	push   0xffffffff
1001180f:	push   edi
10011810:	push   eax
10011811:	lea    ecx,[ebx+0x8]
10011814:	mov    BYTE PTR [esp+0xa4],0x4
1001181c:	call   0x1000123c
10011821:	push   edi
10011822:	push   0x1
10011824:	lea    ecx,[esp+0x58]
10011828:	call   0x100012eb
1001182d:	push   edi
1001182e:	push   0x1
10011830:	lea    ecx,[esp+0x3c]
10011834:	mov    BYTE PTR [esp+0xa0],0x2
1001183c:	call   0x100012eb
10011841:	mov    edi,ebx
10011843:	call   0x1001139b
10011848:	xor    edi,edi
1001184a:	push   edi
1001184b:	push   0x1
1001184d:	lea    ecx,[esp+0x74]
10011851:	call   0x100012eb
10011856:	mov    ecx,DWORD PTR [esp+0x90]
1001185d:	mov    DWORD PTR fs:0x0,ecx
10011864:	pop    ecx
10011865:	pop    edi
10011866:	pop    esi
10011867:	mov    ecx,DWORD PTR [esp+0x7c]
1001186b:	xor    ecx,esp
1001186d:	call   0x10042f87
10011872:	mov    esp,ebp
10011874:	pop    ebp
10011875:	ret    
10011876:	push   0x3c
10011878:	mov    eax,0x10061f68
1001187d:	call   0x10059b25
10011882:	push   0x6a3b4532
10011887:	xor    ebx,ebx
10011889:	push   0x1006e100
1001188e:	mov    DWORD PTR [ebp-0x10],ebx
10011891:	call   0x100042bd
10011896:	push   eax
10011897:	push   0x10
10011899:	push   0x1006de08
1001189e:	call   0x100042cf
100118a3:	add    esp,0x14
100118a6:	push   eax
100118a7:	lea    ecx,[ebp-0x2c]
100118aa:	call   0x100011c8
100118af:	push   ebx
100118b0:	lea    eax,[ebp-0x2c]
100118b3:	push   eax
100118b4:	lea    eax,[ebp-0x48]
100118b7:	push   eax
100118b8:	mov    DWORD PTR [ebp-0x4],ebx
100118bb:	mov    eax,DWORD PTR [ebp+0x8]
100118be:	mov    eax,DWORD PTR [eax+0x34]
100118c1:	add    eax,0x20
100118c4:	call   0x10008602
100118c9:	mov    esi,eax
100118cb:	push   0x168f0c6e
100118d0:	push   0x1006e0d4
100118d5:	mov    BYTE PTR [ebp-0x4],0x1
100118d9:	call   0x100042bd
100118de:	push   0x5e294b8
100118e3:	push   eax
100118e4:	call   0x100042bd
100118e9:	push   eax
100118ea:	push   0x4
100118ec:	push   0x1006e0f8
100118f1:	call   0x100042cf
100118f6:	add    esp,0x1c
100118f9:	push   eax
100118fa:	call   0x10006639
100118ff:	pop    ecx
10011900:	push   ebx
10011901:	push   0x1
10011903:	lea    ecx,[ebp-0x48]
10011906:	mov    BYTE PTR [ebp+0xb],al
10011909:	call   0x100012eb
1001190e:	or     DWORD PTR [ebp-0x4],0xffffffff
10011912:	push   ebx
10011913:	push   0x1
10011915:	lea    ecx,[ebp-0x2c]
10011918:	call   0x100012eb
1001191d:	cmp    BYTE PTR [ebp+0xb],bl
10011920:	je     0x10011964
10011922:	mov    ecx,DWORD PTR [ebp+0x14]
10011925:	mov    edx,DWORD PTR [ebp+0x10]
10011928:	lea    eax,[ebp+0x8]
1001192b:	lea    esi,[ebp+0x14]
1001192e:	mov    DWORD PTR [ebp+0x8],ebx
10011931:	call   0x1002f970
10011936:	mov    ecx,DWORD PTR [eax]
10011938:	mov    edi,ecx
1001193a:	mov    DWORD PTR [eax],ebx
1001193c:	mov    DWORD PTR [ebp+0x10],edi
1001193f:	mov    DWORD PTR [ebp-0x4],0x2
10011946:	push   DWORD PTR [ebp+0x14]
10011949:	call   0x10042f82
1001194e:	mov    esi,DWORD PTR [ebp+0xc]
10011951:	pop    ecx
10011952:	push   DWORD PTR [ebp+0x8]
10011955:	push   edi
10011956:	call   0x100040e3
1001195b:	push   edi
1001195c:	call   0x10042f82
10011961:	pop    ecx
10011962:	jmp    0x10011972
10011964:	push   DWORD PTR [ebp+0x14]
10011967:	mov    esi,DWORD PTR [ebp+0xc]
1001196a:	push   DWORD PTR [ebp+0x10]
1001196d:	call   0x100040e3
10011972:	mov    eax,esi
10011974:	call   0x10059bfd
10011979:	ret    0x10
1001197c:	push   0x34
1001197e:	mov    eax,0x10062ccc
10011983:	call   0x10059b25
10011988:	lea    edi,[ebx+0x30]
1001198b:	mov    esi,edi
1001198d:	call   0x10010fa4
10011992:	xor    esi,esi
10011994:	push   esi
10011995:	push   esi
10011996:	push   esi
10011997:	mov    DWORD PTR [ebp-0x14],eax
1001199a:	push   esi
1001199b:	mov    eax,edi
1001199d:	call   0x10002599
100119a2:	push   eax
100119a3:	mov    eax,DWORD PTR [ebp-0x14]
100119a6:	push   DWORD PTR [eax]
100119a8:	push   esi
100119a9:	push   DWORD PTR [ebx+0x24]
100119ac:	call   DWORD PTR ds:0x100660b8
100119b2:	mov    edi,eax
100119b4:	cmp    edi,esi
100119b6:	je     0x10011a4d
100119bc:	lea    eax,[ebp-0xd]
100119bf:	push   eax
100119c0:	lea    esi,[ebp-0x24]
100119c3:	mov    BYTE PTR [ebp-0xd],0x0
100119c7:	call   0x10011f7a
100119cc:	and    DWORD PTR [ebp-0x4],0x0
100119d0:	lea    esi,[ebx+0x30]
100119d3:	call   0x10010fa4
100119d8:	mov    DWORD PTR [ebp-0x14],eax
100119db:	xor    eax,eax
100119dd:	push   eax
100119de:	push   eax
100119df:	push   edi
100119e0:	push   eax
100119e1:	lea    esi,[ebp-0x24]
100119e4:	call   0x10011f02
100119e9:	push   eax
100119ea:	lea    eax,[ebx+0x30]
100119ed:	call   0x10002599
100119f2:	push   eax
100119f3:	mov    eax,DWORD PTR [ebp-0x14]
100119f6:	push   DWORD PTR [eax]
100119f8:	xor    esi,esi
100119fa:	push   esi
100119fb:	push   DWORD PTR [ebx+0x24]
100119fe:	call   DWORD PTR ds:0x100660b8
10011a04:	cmp    eax,edi
10011a06:	je     0x10011a0d
10011a08:	cmp    DWORD PTR [ebp-0x20],esi
10011a0b:	jmp    0x10011a42
10011a0d:	push   edi
10011a0e:	push   esi
10011a0f:	lea    esi,[ebp-0x24]
10011a12:	call   0x10011f02
10011a17:	push   eax
10011a18:	lea    eax,[ebp-0x40]
10011a1b:	push   eax
10011a1c:	push   ebx
10011a1d:	call   0x10011876
10011a22:	mov    BYTE PTR [ebp-0x4],0x1
10011a26:	push   eax
10011a27:	mov    eax,DWORD PTR [ebx+0x34]
10011a2a:	mov    esi,DWORD PTR [eax+0xc]
10011a2d:	call   0x10007ac2
10011a32:	push   0x0
10011a34:	push   0x1
10011a36:	lea    ecx,[ebp-0x40]
10011a39:	call   0x100012eb
10011a3e:	cmp    DWORD PTR [ebp-0x20],0x0
10011a42:	je     0x10011a4d
10011a44:	push   DWORD PTR [ebp-0x20]
10011a47:	call   0x10042f82
10011a4c:	pop    ecx
10011a4d:	call   0x10059bfd
10011a52:	ret    
10011a53:	push   0x44
10011a55:	mov    eax,0x10060e2a
10011a5a:	call   0x10059b25
10011a5f:	mov    eax,DWORD PTR [ebx+0x34]
10011a62:	mov    eax,DWORD PTR [eax+0xc]
10011a65:	and    DWORD PTR [ebp-0x18],0x0
10011a69:	cmp    DWORD PTR [eax+0x1c],0x10
10011a6d:	mov    ecx,DWORD PTR [eax+0x18]
10011a70:	jb     0x10011a77
10011a72:	mov    eax,DWORD PTR [eax+0x8]
10011a75:	jmp    0x10011a7a
10011a77:	add    eax,0x8
10011a7a:	cmp    ecx,0x2
10011a7d:	jb     0x10011a87
10011a7f:	lea    edx,[ebp-0x18]
10011a82:	call   0x1001136a
10011a87:	cmp    DWORD PTR [ebx+0x24],0x4b0
10011a8e:	jne    0x10011ad5
10011a90:	cmp    DWORD PTR [ebp-0x18],0x0
10011a94:	jne    0x10011ad5
10011a96:	lea    esi,[ebx+0x30]
10011a99:	call   0x10010fa4
10011a9e:	mov    edi,eax
10011aa0:	mov    eax,esi
10011aa2:	call   0x10002599
10011aa7:	add    eax,eax
10011aa9:	push   eax
10011aaa:	push   DWORD PTR [edi]
10011aac:	lea    esi,[ebp-0x34]
10011aaf:	call   0x100040e3
10011ab4:	and    DWORD PTR [ebp-0x4],0x0
10011ab8:	push   eax
10011ab9:	mov    eax,DWORD PTR [ebx+0x34]
10011abc:	mov    esi,DWORD PTR [eax+0xc]
10011abf:	call   0x10007ac2
10011ac4:	push   0x0
10011ac6:	push   0x1
10011ac8:	lea    ecx,[ebp-0x34]
10011acb:	call   0x100012eb
10011ad0:	jmp    0x10011bbc
10011ad5:	lea    eax,[ebx+0x30]
10011ad8:	call   0x10002599
10011add:	mov    ecx,DWORD PTR [ebp-0x18]
10011ae0:	lea    edi,[ecx+eax*2]
10011ae3:	lea    eax,[ebp-0x11]
10011ae6:	push   eax
10011ae7:	lea    esi,[ebp-0x28]
10011aea:	mov    BYTE PTR [ebp-0x11],0x0
10011aee:	call   0x10011f7a
10011af3:	mov    DWORD PTR [ebp-0x4],0x1
10011afa:	mov    edi,DWORD PTR [ebp-0x18]
10011afd:	test   edi,edi
10011aff:	je     0x10011b2a
10011b01:	mov    eax,DWORD PTR [ebx+0x34]
10011b04:	mov    eax,DWORD PTR [eax+0xc]
10011b07:	cmp    DWORD PTR [eax+0x1c],0x10
10011b0b:	jb     0x10011b12
10011b0d:	mov    eax,DWORD PTR [eax+0x8]
10011b10:	jmp    0x10011b15
10011b12:	add    eax,0x8
10011b15:	push   edi
10011b16:	push   eax
10011b17:	push   0x0
10011b19:	lea    esi,[ebp-0x28]
10011b1c:	call   0x10011f02
10011b21:	push   eax
10011b22:	call   0x10045270
10011b27:	add    esp,0xc
10011b2a:	lea    esi,[ebx+0x30]
10011b2d:	call   0x10010fa4
10011b32:	mov    esi,eax
10011b34:	lea    eax,[ebx+0x30]
10011b37:	call   0x10002599
10011b3c:	add    eax,eax
10011b3e:	push   eax
10011b3f:	push   DWORD PTR [esi]
10011b41:	lea    esi,[ebp-0x28]
10011b44:	push   edi
10011b45:	call   0x10011f02
10011b4a:	push   eax
10011b4b:	call   0x10045270
10011b50:	add    esp,0xc
10011b53:	cmp    DWORD PTR [ebx+0x24],0x4b1
10011b5a:	jne    0x10011b73
10011b5c:	lea    eax,[ebx+0x30]
10011b5f:	call   0x10002599
10011b64:	push   eax
10011b65:	push   edi
10011b66:	call   0x10011f02
10011b6b:	push   eax
10011b6c:	call   0x100111ce
10011b71:	pop    ecx
10011b72:	pop    ecx
10011b73:	lea    eax,[ebx+0x30]
10011b76:	call   0x10002599
10011b7b:	lea    eax,[edi+eax*2]
10011b7e:	push   eax
10011b7f:	xor    edi,edi
10011b81:	push   edi
10011b82:	lea    esi,[ebp-0x28]
10011b85:	call   0x10011f02
10011b8a:	push   eax
10011b8b:	lea    esi,[ebp-0x50]
10011b8e:	call   0x100040e3
10011b93:	mov    BYTE PTR [ebp-0x4],0x2
10011b97:	push   eax
10011b98:	mov    eax,DWORD PTR [ebx+0x34]
10011b9b:	mov    esi,DWORD PTR [eax+0xc]
10011b9e:	call   0x10007ac2
10011ba3:	push   edi
10011ba4:	push   0x1
10011ba6:	lea    ecx,[ebp-0x50]
10011ba9:	call   0x100012eb
10011bae:	cmp    DWORD PTR [ebp-0x24],edi
10011bb1:	je     0x10011bbc
10011bb3:	push   DWORD PTR [ebp-0x24]
10011bb6:	call   0x10042f82
10011bbb:	pop    ecx
10011bbc:	call   0x10059bfd
10011bc1:	ret    
10011bc2:	push   ebp
10011bc3:	mov    ebp,esp
10011bc5:	and    esp,0xfffffff8
10011bc8:	push   ecx
10011bc9:	push   ebx
10011bca:	mov    ebx,eax
10011bcc:	cmp    BYTE PTR [ebx+0x2c],0x0
10011bd0:	je     0x10011bef
10011bd2:	mov    eax,DWORD PTR [ebx+0x24]
10011bd5:	cmp    eax,0x4b1
10011bda:	je     0x10011bea
10011bdc:	cmp    eax,0x4b0
10011be1:	je     0x10011bea
10011be3:	call   0x1001197c
10011be8:	jmp    0x10011bef
10011bea:	call   0x10011a53
10011bef:	pop    ebx
10011bf0:	mov    esp,ebp
10011bf2:	pop    ebp
10011bf3:	ret    
10011bf4:	push   ebp
10011bf5:	mov    ebp,esp
10011bf7:	mov    eax,DWORD PTR [ebp+0x8]
10011bfa:	mov    eax,DWORD PTR [eax+0x34]
10011bfd:	test   eax,eax
10011bff:	jne    0x10011c08
10011c01:	mov    eax,0x80004005
10011c06:	jmp    0x10011c3a
10011c08:	mov    eax,DWORD PTR [eax]
10011c0a:	test   eax,eax
10011c0c:	je     0x10011c01
10011c0e:	cmp    DWORD PTR [eax+0x1c],0x10
10011c12:	jb     0x10011c19
10011c14:	mov    eax,DWORD PTR [eax+0x8]
10011c17:	jmp    0x10011c1c
10011c19:	add    eax,0x8
10011c1c:	push   edi
10011c1d:	push   eax
10011c1e:	lea    edi,[ebp+0x8]
10011c21:	call   0x10002455
10011c26:	mov    eax,edi
10011c28:	call   0x1000d950
10011c2d:	mov    ecx,DWORD PTR [ebp+0xc]
10011c30:	mov    DWORD PTR [ecx],eax
10011c32:	call   0x100025b0
10011c37:	xor    eax,eax
10011c39:	pop    edi
10011c3a:	pop    ebp
10011c3b:	ret    0x8
10011c3e:	push   0x1c
10011c40:	mov    eax,0x1006206d
10011c45:	call   0x10059b25
10011c4a:	mov    esi,DWORD PTR [ebp+0x8]
10011c4d:	mov    eax,DWORD PTR [esi+0x34]
10011c50:	test   eax,eax
10011c52:	jne    0x10011c5b
10011c54:	mov    eax,0x80004005
10011c59:	jmp    0x10011ca6
10011c5b:	cmp    DWORD PTR [eax],0x0
10011c5e:	je     0x10011c54
10011c60:	mov    ecx,DWORD PTR [ebp+0xc]
10011c63:	push   0x1
10011c65:	lea    edi,[ebp+0x8]
10011c68:	call   0x1000d8d3
10011c6d:	and    DWORD PTR [ebp-0x4],0x0
10011c71:	mov    eax,edi
10011c73:	call   0x1000d933
10011c78:	push   eax
10011c79:	lea    ecx,[ebp-0x28]
10011c7c:	call   0x100011c8
10011c81:	lea    eax,[ebp-0x28]
10011c84:	mov    BYTE PTR [ebp-0x4],0x1
10011c88:	push   eax
10011c89:	mov    eax,DWORD PTR [esi+0x34]
10011c8c:	mov    esi,DWORD PTR [eax]
10011c8e:	call   0x10007ac2
10011c93:	push   0x0
10011c95:	push   0x1
10011c97:	lea    ecx,[ebp-0x28]
10011c9a:	call   0x100012eb
10011c9f:	call   0x100025b0
10011ca4:	xor    eax,eax
10011ca6:	call   0x10059bfd
10011cab:	ret    0x8
10011cae:	push   ebp
10011caf:	mov    ebp,esp
10011cb1:	mov    eax,DWORD PTR [ebp+0x8]
10011cb4:	mov    eax,DWORD PTR [eax+0x34]
10011cb7:	test   eax,eax
10011cb9:	jne    0x10011cc2
10011cbb:	mov    eax,0x80004005
10011cc0:	jmp    0x10011cf5
10011cc2:	mov    eax,DWORD PTR [eax+0x4]
10011cc5:	test   eax,eax
10011cc7:	je     0x10011cbb
10011cc9:	cmp    DWORD PTR [eax+0x1c],0x10
10011ccd:	jb     0x10011cd4
10011ccf:	mov    eax,DWORD PTR [eax+0x8]
10011cd2:	jmp    0x10011cd7
10011cd4:	add    eax,0x8
10011cd7:	push   edi
10011cd8:	push   eax
10011cd9:	lea    edi,[ebp+0x8]
10011cdc:	call   0x10002455
10011ce1:	mov    eax,edi
10011ce3:	call   0x1000d950
10011ce8:	mov    ecx,DWORD PTR [ebp+0xc]
10011ceb:	mov    DWORD PTR [ecx],eax
10011ced:	call   0x100025b0
10011cf2:	xor    eax,eax
10011cf4:	pop    edi
10011cf5:	pop    ebp
10011cf6:	ret    0x8
10011cf9:	push   0x1c
10011cfb:	mov    eax,0x1006206d
10011d00:	call   0x10059b25
10011d05:	mov    esi,DWORD PTR [ebp+0x8]
10011d08:	mov    eax,DWORD PTR [esi+0x34]
10011d0b:	test   eax,eax
10011d0d:	jne    0x10011d16
10011d0f:	mov    eax,0x80004005
10011d14:	jmp    0x10011d63
10011d16:	cmp    DWORD PTR [eax+0x4],0x0
10011d1a:	je     0x10011d0f
10011d1c:	mov    ecx,DWORD PTR [ebp+0xc]
10011d1f:	push   0x1
10011d21:	lea    edi,[ebp+0x8]
10011d24:	call   0x1000d8d3
10011d29:	and    DWORD PTR [ebp-0x4],0x0
10011d2d:	mov    eax,edi
10011d2f:	call   0x1000d933
10011d34:	push   eax
10011d35:	lea    ecx,[ebp-0x28]
10011d38:	call   0x100011c8
10011d3d:	lea    eax,[ebp-0x28]
10011d40:	mov    BYTE PTR [ebp-0x4],0x1
10011d44:	push   eax
10011d45:	mov    eax,DWORD PTR [esi+0x34]
10011d48:	mov    esi,DWORD PTR [eax+0x4]
10011d4b:	call   0x10007ac2
10011d50:	push   0x0
10011d52:	push   0x1
10011d54:	lea    ecx,[ebp-0x28]
10011d57:	call   0x100012eb
10011d5c:	call   0x100025b0
10011d61:	xor    eax,eax
10011d63:	call   0x10059bfd
10011d68:	ret    0x8
10011d6b:	push   ebp
10011d6c:	mov    ebp,esp
10011d6e:	mov    eax,DWORD PTR [ebp+0x8]
10011d71:	mov    eax,DWORD PTR [eax+0x34]
10011d74:	test   eax,eax
10011d76:	jne    0x10011d7f
10011d78:	mov    eax,0x80004005
10011d7d:	jmp    0x10011db2
10011d7f:	mov    eax,DWORD PTR [eax+0x8]
10011d82:	test   eax,eax
10011d84:	je     0x10011d78
10011d86:	cmp    DWORD PTR [eax+0x1c],0x10
10011d8a:	jb     0x10011d91
10011d8c:	mov    eax,DWORD PTR [eax+0x8]
10011d8f:	jmp    0x10011d94
10011d91:	add    eax,0x8
10011d94:	push   edi
10011d95:	push   eax
10011d96:	lea    edi,[ebp+0x8]
10011d99:	call   0x10002455
10011d9e:	mov    eax,edi
10011da0:	call   0x1000d950
10011da5:	mov    ecx,DWORD PTR [ebp+0xc]
10011da8:	mov    DWORD PTR [ecx],eax
10011daa:	call   0x100025b0
10011daf:	xor    eax,eax
10011db1:	pop    edi
10011db2:	pop    ebp
10011db3:	ret    0x8
10011db6:	push   0x1c
10011db8:	mov    eax,0x1006206d
10011dbd:	call   0x10059b25
10011dc2:	mov    esi,DWORD PTR [ebp+0x8]
10011dc5:	mov    eax,DWORD PTR [esi+0x34]
10011dc8:	test   eax,eax
10011dca:	jne    0x10011dd3
10011dcc:	mov    eax,0x80004005
10011dd1:	jmp    0x10011e20
10011dd3:	cmp    DWORD PTR [eax+0x8],0x0
10011dd7:	je     0x10011dcc
10011dd9:	mov    ecx,DWORD PTR [ebp+0xc]
10011ddc:	push   0x1
10011dde:	lea    edi,[ebp+0x8]
10011de1:	call   0x1000d8d3
10011de6:	and    DWORD PTR [ebp-0x4],0x0
10011dea:	mov    eax,edi
10011dec:	call   0x1000d933
10011df1:	push   eax
10011df2:	lea    ecx,[ebp-0x28]
10011df5:	call   0x100011c8
10011dfa:	lea    eax,[ebp-0x28]
10011dfd:	mov    BYTE PTR [ebp-0x4],0x1
10011e01:	push   eax
10011e02:	mov    eax,DWORD PTR [esi+0x34]
10011e05:	mov    esi,DWORD PTR [eax+0x8]
10011e08:	call   0x10007ac2
10011e0d:	push   0x0
10011e0f:	push   0x1
10011e11:	lea    ecx,[ebp-0x28]
10011e14:	call   0x100012eb
10011e19:	call   0x100025b0
10011e1e:	xor    eax,eax
10011e20:	call   0x10059bfd
10011e25:	ret    0x8
10011e28:	push   ebp
10011e29:	mov    ebp,esp
10011e2b:	mov    eax,DWORD PTR [ebp+0x8]
10011e2e:	mov    eax,DWORD PTR [eax+0x30]
10011e31:	test   eax,eax
10011e33:	je     0x10011e39
10011e35:	mov    eax,DWORD PTR [eax]
10011e37:	jmp    0x10011e3b
10011e39:	xor    eax,eax
10011e3b:	push   edi
10011e3c:	push   0x1
10011e3e:	mov    ecx,eax
10011e40:	lea    edi,[ebp+0x8]
10011e43:	call   0x1000d8d3
10011e48:	mov    eax,edi
10011e4a:	call   0x1000d950
10011e4f:	mov    ecx,DWORD PTR [ebp+0xc]
10011e52:	mov    DWORD PTR [ecx],eax
10011e54:	call   0x100025b0
10011e59:	xor    eax,eax
10011e5b:	pop    edi
10011e5c:	pop    ebp
10011e5d:	ret    0x8
10011e60:	mov    eax,DWORD PTR [esp+0x4]
10011e64:	push   DWORD PTR [esp+0x8]
10011e68:	lea    ecx,[eax+0x30]
10011e6b:	mov    BYTE PTR [eax+0x2c],0x1
10011e6f:	call   0x10010f3b
10011e74:	xor    eax,eax
10011e76:	ret    0x8
10011e79:	mov    ecx,DWORD PTR [esp+0x8]
10011e7d:	test   ecx,ecx
10011e7f:	mov    eax,DWORD PTR [esp+0x4]
10011e83:	jne    0x10011e8c
10011e85:	mov    eax,0x80004003
10011e8a:	jmp    0x10011ea0
10011e8c:	mov    edx,DWORD PTR [eax+0x38]
10011e8f:	mov    DWORD PTR [ecx],edx
10011e91:	mov    eax,DWORD PTR [eax+0x38]
10011e94:	test   eax,eax
10011e96:	je     0x10011e9e
10011e98:	mov    ecx,DWORD PTR [eax]
10011e9a:	push   eax
10011e9b:	call   DWORD PTR [ecx+0x4]
10011e9e:	xor    eax,eax
10011ea0:	ret    0x8
10011ea3:	mov    eax,DWORD PTR [esp+0x4]
10011ea7:	mov    eax,DWORD PTR [eax+0x24]
10011eaa:	mov    ecx,DWORD PTR [esp+0x8]
10011eae:	mov    DWORD PTR [ecx],eax
10011eb0:	xor    eax,eax
10011eb2:	ret    0x8
10011eb5:	mov    eax,DWORD PTR [esp+0x4]
10011eb9:	mov    eax,DWORD PTR [eax+0x28]
10011ebc:	mov    ecx,DWORD PTR [esp+0x8]
10011ec0:	mov    DWORD PTR [ecx],eax
10011ec2:	xor    eax,eax
10011ec4:	ret    0x8
10011ec7:	push   esi
10011ec8:	mov    esi,eax
10011eca:	cmp    edi,DWORD PTR [esi+0x14]
10011ecd:	jbe    0x10011ed4
10011ecf:	call   0x100434a0
10011ed4:	cmp    DWORD PTR [esi+0x18],0x10
10011ed8:	jb     0x10011edf
10011eda:	mov    esi,DWORD PTR [esi+0x4]
10011edd:	jmp    0x10011ee2
10011edf:	add    esi,0x4
10011ee2:	lea    eax,[esi+edi*1]
10011ee5:	pop    esi
10011ee6:	ret    
10011ee7:	mov    eax,DWORD PTR [esi+0x4]
10011eea:	test   eax,eax
10011eec:	je     0x10011ef5
10011eee:	push   eax
10011eef:	call   0x10042f82
10011ef4:	pop    ecx
10011ef5:	and    DWORD PTR [esi+0x4],0x0
10011ef9:	and    DWORD PTR [esi+0x8],0x0
10011efd:	and    DWORD PTR [esi+0xc],0x0
10011f01:	ret    
10011f02:	mov    ecx,DWORD PTR [esi+0x4]
10011f05:	test   ecx,ecx
10011f07:	je     0x10011f14
10011f09:	mov    eax,DWORD PTR [esi+0x8]
10011f0c:	sub    eax,ecx
10011f0e:	cmp    DWORD PTR [esp+0x4],eax
10011f12:	jb     0x10011f19
10011f14:	call   0x100434a0
10011f19:	mov    eax,DWORD PTR [esi+0x4]
10011f1c:	add    eax,DWORD PTR [esp+0x4]
10011f20:	ret    0x4
10011f23:	push   edi
10011f24:	mov    edi,eax
10011f26:	xor    eax,eax
10011f28:	cmp    edi,eax
10011f2a:	mov    DWORD PTR [esi+0x4],eax
10011f2d:	mov    DWORD PTR [esi+0x8],eax
10011f30:	mov    DWORD PTR [esi+0xc],eax
10011f33:	je     0x10011f76
10011f35:	cmp    edi,0x7fffffff
10011f3b:	jbe    0x10011f42
10011f3d:	call   0x1000fb8b
10011f42:	mov    ecx,edi
10011f44:	call   0x100060e7
10011f49:	test   edi,edi
10011f4b:	lea    ecx,[edi+edi*1]
10011f4e:	lea    edx,[ecx+eax*1]
10011f51:	mov    DWORD PTR [esi+0xc],edx
10011f54:	mov    DWORD PTR [esi+0x4],eax
10011f57:	mov    DWORD PTR [esi+0x8],eax
10011f5a:	mov    edx,eax
10011f5c:	jbe    0x10011f71
10011f5e:	push   ebx
10011f5f:	mov    ebx,DWORD PTR [esp+0xc]
10011f63:	mov    bx,WORD PTR [ebx]
10011f66:	mov    WORD PTR [edx],bx
10011f69:	dec    edi
10011f6a:	inc    edx
10011f6b:	inc    edx
10011f6c:	test   edi,edi
10011f6e:	ja     0x10011f5f
10011f70:	pop    ebx
10011f71:	add    ecx,eax
10011f73:	mov    DWORD PTR [esi+0x8],ecx
10011f76:	pop    edi
10011f77:	ret    0x4
10011f7a:	push   ebp
10011f7b:	mov    ebp,esp
10011f7d:	push   ecx
10011f7e:	push   ebx
10011f7f:	xor    ebx,ebx
10011f81:	cmp    edi,ebx
10011f83:	mov    DWORD PTR [esi+0x4],ebx
10011f86:	mov    DWORD PTR [esi+0x8],ebx
10011f89:	mov    DWORD PTR [esi+0xc],ebx
10011f8c:	je     0x10011fcb
10011f8e:	cmp    edi,0xffffffff
10011f91:	jbe    0x10011f98
10011f93:	call   0x1000fb8b
10011f98:	push   ebx
10011f99:	push   edi
10011f9a:	call   0x10001eb9
10011f9f:	cmp    edi,ebx
10011fa1:	pop    ecx
10011fa2:	pop    ecx
10011fa3:	lea    ecx,[eax+edi*1]
10011fa6:	mov    DWORD PTR [esi+0xc],ecx
10011fa9:	mov    DWORD PTR [esi+0x4],eax
10011fac:	mov    DWORD PTR [esi+0x8],eax
10011faf:	mov    DWORD PTR [ebp-0x4],edi
10011fb2:	mov    ecx,eax
10011fb4:	jbe    0x10011fc6
10011fb6:	mov    edx,DWORD PTR [ebp+0x8]
10011fb9:	mov    dl,BYTE PTR [edx]
10011fbb:	dec    DWORD PTR [ebp-0x4]
10011fbe:	mov    BYTE PTR [ecx],dl
10011fc0:	inc    ecx
10011fc1:	cmp    DWORD PTR [ebp-0x4],ebx
10011fc4:	ja     0x10011fb6
10011fc6:	add    eax,edi
10011fc8:	mov    DWORD PTR [esi+0x8],eax
10011fcb:	pop    ebx
10011fcc:	leave  
10011fcd:	ret    0x4
10011fd0:	push   esi
10011fd1:	mov    esi,DWORD PTR [eax]
10011fd3:	test   esi,esi
10011fd5:	je     0x10012005
10011fd7:	mov    eax,DWORD PTR [esi]
10011fd9:	test   eax,eax
10011fdb:	je     0x10011fff
10011fdd:	push   eax
10011fde:	call   DWORD PTR ds:0x100662a0
10011fe4:	push   eax
10011fe5:	push   DWORD PTR [esi]
10011fe7:	call   DWORD PTR ds:0x100662a8
10011fed:	mov    esi,eax
10011fef:	test   esi,esi
10011ff1:	jne    0x10012001
10011ff3:	push   0x8007000e
10011ff8:	call   0x10050c80
10011ffd:	jmp    0x10012001
10011fff:	xor    esi,esi
10012001:	mov    eax,esi
10012003:	pop    esi
10012004:	ret    
10012005:	xor    eax,eax
10012007:	pop    esi
10012008:	ret    
10012009:	push   0x4
1001200b:	mov    eax,0x1005f77f
10012010:	call   0x10059b25
10012015:	mov    edi,ecx
10012017:	call   0x100025b0
1001201c:	push   0xc
1001201e:	call   0x1004358e
10012023:	pop    ecx
10012024:	test   eax,eax
10012026:	je     0x10012038
10012028:	and    DWORD PTR [eax+0x4],0x0
1001202c:	and    DWORD PTR [eax],0x0
1001202f:	mov    DWORD PTR [eax+0x8],0x1
10012036:	jmp    0x1001203a
10012038:	xor    eax,eax
1001203a:	or     DWORD PTR [esp+0x1c],0xffffffff
1001203f:	test   eax,eax
10012041:	mov    DWORD PTR [edi],eax
10012043:	jne    0x1001204f
10012045:	push   0x8007000e
1001204a:	call   0x10050c80
1001204f:	mov    eax,DWORD PTR [edi]
10012051:	call   0x10059bfd
10012056:	ret    
10012057:	push   0x8c
1001205c:	mov    eax,0x10062c94
10012061:	call   0x10059bc4
10012066:	mov    esi,DWORD PTR [ebp+0x8]
10012069:	mov    ebx,DWORD PTR [ebp+0xc]
1001206c:	mov    eax,DWORD PTR [esi+0xc]
1001206f:	push   ebx
10012070:	push   eax
10012071:	call   DWORD PTR ds:0x10080c54
10012077:	xor    edi,edi
10012079:	cmp    eax,edi
1001207b:	mov    DWORD PTR [ebp-0x60],eax
1001207e:	jl     0x10012222
10012084:	mov    DWORD PTR [ebp-0x4],edi
10012087:	mov    DWORD PTR [ebp-0x58],edi
1001208a:	lea    ecx,[ebp-0x58]
1001208d:	push   ecx
1001208e:	mov    BYTE PTR [ebp-0x4],0x1
10012092:	mov    eax,DWORD PTR [esi]
10012094:	push   esi
10012095:	call   DWORD PTR [eax+0x94]
1001209b:	cmp    eax,edi
1001209d:	jge    0x100120ad
1001209f:	mov    BYTE PTR [ebp-0x4],0x0
100120a3:	mov    eax,DWORD PTR [ebp-0x58]
100120a6:	cmp    eax,edi
100120a8:	jmp    0x10012217
100120ad:	mov    esi,DWORD PTR [ebp-0x58]
100120b0:	cmp    esi,edi
100120b2:	je     0x1001221f
100120b8:	mov    DWORD PTR [ebp-0x5c],edi
100120bb:	lea    ecx,[ebp-0x5c]
100120be:	mov    BYTE PTR [ebp-0x4],0x2
100120c2:	call   0x10012009
100120c7:	mov    ecx,DWORD PTR [esi]
100120c9:	push   eax
100120ca:	push   esi
100120cb:	call   DWORD PTR [ecx+0x20]
100120ce:	cmp    eax,edi
100120d0:	jl     0x10012206
100120d6:	lea    eax,[ebp-0x5c]
100120d9:	call   0x1000d933
100120de:	push   eax
100120df:	lea    ecx,[ebp-0x30]
100120e2:	call   0x100011c8
100120e7:	push   0x10
100120e9:	mov    BYTE PTR [ebp-0x4],0x3
100120ed:	mov    eax,DWORD PTR [ebp-0x2c]
100120f0:	pop    esi
100120f1:	cmp    DWORD PTR [ebp-0x18],esi
100120f4:	jae    0x100120f9
100120f6:	lea    eax,[ebp-0x2c]
100120f9:	push   eax
100120fa:	call   0x1000206e
100120ff:	pop    ecx
10012100:	lea    eax,[ebp-0x50]
10012103:	push   eax
10012104:	push   0x10080ee8
10012109:	lea    ecx,[ebp-0x30]
1001210c:	call   0x10019b04
10012111:	lea    edi,[ebp-0x50]
10012114:	mov    BYTE PTR [ebp-0x4],0x4
10012118:	call   0x100199a9
1001211d:	test   al,al
1001211f:	jne    0x100121ee
10012125:	mov    eax,DWORD PTR [ebp-0x50]
10012128:	dec    eax
10012129:	je     0x1001215f
1001212b:	dec    eax
1001212c:	jne    0x100121ee
10012132:	cmp    DWORD PTR [ebp-0x18],esi
10012135:	mov    eax,DWORD PTR [ebp-0x2c]
10012138:	jae    0x1001213d
1001213a:	lea    eax,[ebp-0x2c]
1001213d:	push   eax
1001213e:	call   0x1000206e
10012143:	pop    ecx
10012144:	push   DWORD PTR [ebx]
10012146:	call   DWORD PTR ds:0x100662b4
1001214c:	push   0x1006cd08
10012151:	lea    edi,[ebp-0x54]
10012154:	call   0x10002455
10012159:	mov    BYTE PTR [ebp-0x4],0x8
1001215d:	jmp    0x100121dc
1001215f:	lea    eax,[ebp-0x7c]
10012162:	push   eax
10012163:	lea    eax,[ebp-0x50]
10012166:	call   0x100199c9
1001216b:	cmp    DWORD PTR [ebp-0x18],esi
1001216e:	mov    ecx,DWORD PTR [ebp-0x2c]
10012171:	jae    0x10012176
10012173:	lea    ecx,[ebp-0x2c]
10012176:	cmp    DWORD PTR [eax+0x18],esi
10012179:	jb     0x10012180
1001217b:	mov    eax,DWORD PTR [eax+0x4]
1001217e:	jmp    0x10012183
10012180:	add    eax,0x4
10012183:	push   ecx
10012184:	push   eax
10012185:	call   0x1000206e
1001218a:	pop    ecx
1001218b:	pop    ecx
1001218c:	push   0x0
1001218e:	push   0x1
10012190:	lea    ecx,[ebp-0x7c]
10012193:	call   0x100012eb
10012198:	push   DWORD PTR [ebx]
1001219a:	call   DWORD PTR ds:0x100662b4
100121a0:	lea    eax,[ebp-0x98]
100121a6:	push   eax
100121a7:	lea    eax,[ebp-0x50]
100121aa:	call   0x100199c9
100121af:	mov    BYTE PTR [ebp-0x4],0x5
100121b3:	cmp    DWORD PTR [eax+0x18],esi
100121b6:	jb     0x100121bd
100121b8:	mov    eax,DWORD PTR [eax+0x4]
100121bb:	jmp    0x100121c0
100121bd:	add    eax,0x4
100121c0:	push   eax
100121c1:	lea    edi,[ebp-0x54]
100121c4:	call   0x10002455
100121c9:	push   0x0
100121cb:	push   0x1
100121cd:	lea    ecx,[ebp-0x98]
100121d3:	mov    BYTE PTR [ebp-0x4],0x7
100121d7:	call   0x100012eb
100121dc:	lea    eax,[ebp-0x54]
100121df:	call   0x10011fd0
100121e4:	lea    edi,[ebp-0x54]
100121e7:	mov    DWORD PTR [ebx],eax
100121e9:	call   0x100025b0
100121ee:	push   0x0
100121f0:	push   0x1
100121f2:	lea    ecx,[ebp-0x4c]
100121f5:	call   0x100012eb
100121fa:	push   0x0
100121fc:	push   0x1
100121fe:	lea    ecx,[ebp-0x30]
10012201:	call   0x100012eb
10012206:	lea    edi,[ebp-0x5c]
10012209:	call   0x100025b0
1001220e:	mov    BYTE PTR [ebp-0x4],0x0
10012212:	mov    eax,DWORD PTR [ebp-0x58]
10012215:	test   eax,eax
10012217:	je     0x1001221f
10012219:	mov    ecx,DWORD PTR [eax]
1001221b:	push   eax
1001221c:	call   DWORD PTR [ecx+0x8]
1001221f:	mov    eax,DWORD PTR [ebp-0x60]
10012222:	call   0x10059c20
10012227:	ret    0x8
1001222a:	push   0x8
1001222c:	call   0x100379e0
10012231:	pop    ecx
10012232:	mov    eax,0x1001221f
10012237:	ret    
10012238:	mov    DWORD PTR [esp+0x4],eax
1001223c:	jmp    0x10012057
10012241:	push   ebp
10012242:	mov    ebp,esp
10012244:	sub    esp,0x1c
10012247:	and    DWORD PTR [ebp-0x1c],0x0
1001224b:	push   edi
1001224c:	push   0x6
1001224e:	pop    ecx
1001224f:	xor    eax,eax
10012251:	lea    edi,[ebp-0x18]
10012254:	rep stos DWORD PTR es:[edi],eax
10012256:	push   esi
10012257:	lea    eax,[ebp-0x1c]
1001225a:	push   eax
1001225b:	push   ebx
1001225c:	call   DWORD PTR ds:0x100660f4
10012262:	test   eax,eax
10012264:	pop    edi
10012265:	jne    0x1001226b
10012267:	xor    al,al
10012269:	leave  
1001226a:	ret    
1001226b:	cmp    DWORD PTR [ebp-0xc],0x10000
10012272:	je     0x10012267
10012274:	mov    eax,DWORD PTR [ebp-0x1c]
10012277:	mov    ecx,DWORD PTR [ebp-0x10]
1001227a:	add    ecx,eax
1001227c:	lea    eax,[ebx+esi*1]
1001227f:	cmp    ecx,eax
10012281:	jb     0x10012267
10012283:	push   esi
10012284:	push   DWORD PTR [ebp+0x8]
10012287:	push   ebx
10012288:	call   0x10043816
1001228d:	add    esp,0xc
10012290:	neg    eax
10012292:	sbb    al,al
10012294:	inc    al
10012296:	leave  
10012297:	ret    
10012298:	push   ebp
10012299:	mov    ebp,esp
1001229b:	sub    esp,0x40
1001229e:	mov    eax,ds:0x1007e030
100122a3:	xor    eax,ebp
100122a5:	mov    DWORD PTR [ebp-0x4],eax
100122a8:	xor    al,al
100122aa:	push   ebx
100122ab:	push   esi
100122ac:	mov    BYTE PTR [ebp-0x38],al
100122af:	mov    BYTE PTR [ebp-0x37],al
100122b2:	mov    BYTE PTR [ebp-0x36],al
100122b5:	mov    BYTE PTR [ebp-0x28],al
100122b8:	mov    BYTE PTR [ebp-0x27],al
100122bb:	mov    BYTE PTR [ebp-0x26],al
100122be:	mov    BYTE PTR [ebp-0x17],al
100122c1:	mov    BYTE PTR [ebp-0x9],al
100122c4:	mov    BYTE PTR [ebp-0x8],al
100122c7:	mov    BYTE PTR [ebp-0x7],al
100122ca:	lea    eax,[ebp-0x40]
100122cd:	push   eax
100122ce:	push   0x1d
100122d0:	mov    ebx,ecx
100122d2:	pop    esi
100122d3:	mov    BYTE PTR [ebp-0x40],0x8b
100122d7:	mov    BYTE PTR [ebp-0x3f],0x44
100122db:	mov    BYTE PTR [ebp-0x3e],0x24
100122df:	mov    BYTE PTR [ebp-0x3d],0x4
100122e3:	mov    BYTE PTR [ebp-0x3c],0xc7
100122e7:	mov    BYTE PTR [ebp-0x3b],0x40
100122eb:	mov    BYTE PTR [ebp-0x3a],0x20
100122ef:	mov    BYTE PTR [ebp-0x39],0x24
100122f3:	mov    BYTE PTR [ebp-0x35],0x8b
100122f7:	mov    BYTE PTR [ebp-0x34],0x48
100122fb:	mov    BYTE PTR [ebp-0x33],0xc
100122ff:	mov    BYTE PTR [ebp-0x32],0x89
10012303:	mov    BYTE PTR [ebp-0x31],0x4c
10012307:	mov    BYTE PTR [ebp-0x30],0x24
1001230b:	mov    BYTE PTR [ebp-0x2f],0x4
1001230f:	mov    BYTE PTR [ebp-0x2e],0x8b
10012313:	mov    BYTE PTR [ebp-0x2d],0x48
10012317:	mov    BYTE PTR [ebp-0x2c],0x10
1001231b:	mov    BYTE PTR [ebp-0x2b],0x8b
1001231f:	mov    BYTE PTR [ebp-0x2a],0x89
10012323:	mov    BYTE PTR [ebp-0x29],0x90
10012327:	mov    BYTE PTR [ebp-0x25],0xff
1001232b:	mov    BYTE PTR [ebp-0x24],0xe1
1001232f:	mov    BYTE PTR [ebp-0x20],0x8b
10012333:	mov    BYTE PTR [ebp-0x1f],0x44
10012337:	mov    BYTE PTR [ebp-0x1e],0x24
1001233b:	mov    BYTE PTR [ebp-0x1d],0x4
1001233f:	mov    BYTE PTR [ebp-0x1c],0x66
10012343:	mov    BYTE PTR [ebp-0x1b],0xc7
10012347:	mov    BYTE PTR [ebp-0x1a],0x40
1001234b:	mov    BYTE PTR [ebp-0x19],0x20
1001234f:	mov    BYTE PTR [ebp-0x18],0x24
10012353:	mov    BYTE PTR [ebp-0x16],0x8b
10012357:	mov    BYTE PTR [ebp-0x15],0x48
1001235b:	mov    BYTE PTR [ebp-0x14],0xc
1001235f:	mov    BYTE PTR [ebp-0x13],0x89
10012363:	mov    BYTE PTR [ebp-0x12],0x4c
10012367:	mov    BYTE PTR [ebp-0x11],0x24
1001236b:	mov    BYTE PTR [ebp-0x10],0x4
1001236f:	mov    BYTE PTR [ebp-0xf],0x8b
10012373:	mov    BYTE PTR [ebp-0xe],0x48
10012377:	mov    BYTE PTR [ebp-0xd],0x10
1001237b:	mov    BYTE PTR [ebp-0xc],0x8b
1001237f:	mov    BYTE PTR [ebp-0xb],0x89
10012383:	mov    BYTE PTR [ebp-0xa],0x90
10012387:	mov    BYTE PTR [ebp-0x6],0xff
1001238b:	mov    BYTE PTR [ebp-0x5],0xe1
1001238f:	call   0x10012241
10012394:	test   al,al
10012396:	pop    ecx
10012397:	jne    0x100123ae
10012399:	lea    eax,[ebp-0x20]
1001239c:	push   eax
1001239d:	push   0x1c
1001239f:	pop    esi
100123a0:	call   0x10012241
100123a5:	test   al,al
100123a7:	pop    ecx
100123a8:	jne    0x100123ae
100123aa:	xor    eax,eax
100123ac:	jmp    0x100123b1
100123ae:	xor    eax,eax
100123b0:	inc    eax
100123b1:	mov    ecx,DWORD PTR [ebp-0x4]
100123b4:	pop    esi
100123b5:	xor    ecx,ebp
100123b7:	pop    ebx
100123b8:	call   0x10042f87
100123bd:	leave  
100123be:	ret    
100123bf:	push   ebp
100123c0:	mov    ebp,esp
100123c2:	and    esp,0xfffffff8
100123c5:	push   0xffffffff
100123c7:	push   0x10063be2
100123cc:	mov    eax,fs:0x0
100123d2:	push   eax
100123d3:	sub    esp,0x20
100123d6:	mov    eax,ds:0x1007e030
100123db:	xor    eax,esp
100123dd:	mov    DWORD PTR [esp+0x18],eax
100123e1:	push   esi
100123e2:	mov    eax,ds:0x1007e030
100123e7:	xor    eax,esp
100123e9:	push   eax
100123ea:	lea    eax,[esp+0x28]
100123ee:	mov    fs:0x0,eax
100123f4:	push   0x180c97b4
100123f9:	push   0x1006e144
100123fe:	call   0x100042bd
10012403:	push   0x3420f988
10012408:	push   eax
10012409:	call   0x100042bd
1001240e:	push   0x38e8856
10012413:	push   eax
10012414:	call   0x100042bd
10012419:	push   eax
1001241a:	push   0xa
1001241c:	push   0x1006e174
10012421:	call   0x1000448e
10012426:	add    esp,0x24
10012429:	push   eax
1001242a:	call   DWORD PTR ds:0x100660f8
10012430:	xor    esi,esi
10012432:	push   esi
10012433:	call   DWORD PTR ds:0x10066434
10012439:	mov    DWORD PTR [esp+0xc],esi
1001243d:	push   0x3b402b64
10012442:	push   0x1006e18c
10012447:	mov    DWORD PTR [esp+0x38],esi
1001244b:	call   0x100042bd
10012450:	push   0x126b9bb8
10012455:	push   eax
10012456:	call   0x100042bd
1001245b:	push   eax
1001245c:	push   0x8
1001245e:	push   0x1006e1c0
10012463:	call   0x1000448e
10012468:	add    esp,0x1c
1001246b:	lea    ecx,[esp+0x10]
1001246f:	push   ecx
10012470:	push   eax
10012471:	call   DWORD PTR ds:0x10066438
10012477:	cmp    eax,esi
10012479:	jl     0x100124e6
1001247b:	lea    eax,[esp+0xc]
1001247f:	push   eax
10012480:	push   0x1006e228
10012485:	push   0x17
10012487:	push   esi
10012488:	lea    eax,[esp+0x20]
1001248c:	push   eax
1001248d:	call   DWORD PTR ds:0x1006643c
10012493:	cmp    eax,esi
10012495:	jl     0x100124e6
10012497:	mov    eax,DWORD PTR [esp+0xc]
1001249b:	mov    eax,DWORD PTR [eax]
1001249d:	mov    ecx,DWORD PTR [eax+0x90]
100124a3:	call   0x10012298
100124a8:	test   al,al
100124aa:	jne    0x100124bb
100124ac:	call   0x1000206e
100124b1:	push   0x8
100124b3:	call   0x100379e0
100124b8:	pop    ecx
100124b9:	jmp    0x100124e6
100124bb:	mov    eax,DWORD PTR [esp+0xc]
100124bf:	mov    eax,DWORD PTR [eax+0x10]
100124c2:	mov    eax,DWORD PTR [eax+0x90]
100124c8:	push   0x10012238
100124cd:	push   eax
100124ce:	call   0x10057560
100124d3:	push   esi
100124d4:	push   0x1
100124d6:	push   0x10080da0
100124db:	mov    ds:0x10080c54,eax
100124e0:	call   DWORD PTR ds:0x100660e0
100124e6:	or     DWORD PTR [esp+0x30],0xffffffff
100124eb:	mov    eax,DWORD PTR [esp+0xc]
100124ef:	cmp    eax,esi
100124f1:	je     0x100124f9
100124f3:	mov    ecx,DWORD PTR [eax]
100124f5:	push   eax
100124f6:	call   DWORD PTR [ecx+0x8]
100124f9:	mov    ecx,DWORD PTR [esp+0x28]
100124fd:	mov    DWORD PTR fs:0x0,ecx
10012504:	pop    ecx
10012505:	pop    esi
10012506:	mov    ecx,DWORD PTR [esp+0x18]
1001250a:	xor    ecx,esp
1001250c:	call   0x10042f87
10012511:	mov    esp,ebp
10012513:	pop    ebp
10012514:	ret    
10012515:	push   0x10
10012517:	mov    eax,0x10061f35
1001251c:	call   0x10059b25
10012521:	push   DWORD PTR [ebp+0x8]
10012524:	lea    eax,[ebp-0x1c]
10012527:	push   eax
10012528:	call   0x1000f610
1001252d:	pop    ecx
1001252e:	pop    ecx
1001252f:	xor    ebx,ebx
10012531:	lea    eax,[ebp-0x1c]
10012534:	mov    DWORD PTR [ebp-0x4],ebx
10012537:	call   0x10004660
1001253c:	cmp    eax,0x2
1001253f:	jne    0x10012577
10012541:	push   ebx
10012542:	lea    esi,[ebp-0x1c]
10012545:	call   0x10004676
1001254a:	mov    ecx,DWORD PTR [ebp+0xc]
1001254d:	push   0xffffffff
1001254f:	push   ebx
10012550:	push   eax
10012551:	call   0x1000123c
10012556:	inc    ebx
10012557:	push   ebx
10012558:	call   0x10004676
1001255d:	cmp    DWORD PTR [eax+0x18],0x10
10012561:	jb     0x10012568
10012563:	mov    eax,DWORD PTR [eax+0x4]
10012566:	jmp    0x1001256b
10012568:	add    eax,0x4
1001256b:	push   eax
1001256c:	call   0x10045da5
10012571:	pop    ecx
10012572:	mov    ecx,DWORD PTR [ebp+0x10]
10012575:	mov    DWORD PTR [ecx],eax
10012577:	lea    esi,[ebp-0x1c]
1001257a:	call   0x100049d4
1001257f:	mov    al,bl
10012581:	call   0x10059bfd
10012586:	ret    
10012587:	push   ebp
10012588:	mov    ebp,esp
1001258a:	push   0xffffffff
1001258c:	push   0x10063651
10012591:	mov    eax,fs:0x0
10012597:	push   eax
10012598:	push   ecx
10012599:	mov    eax,0x1058
1001259e:	call   0x10049ed0
100125a3:	mov    eax,ds:0x1007e030
100125a8:	xor    eax,ebp
100125aa:	mov    DWORD PTR [ebp-0x14],eax
100125ad:	push   ebx
100125ae:	push   esi
100125af:	push   edi
100125b0:	push   eax
100125b1:	lea    eax,[ebp-0xc]
100125b4:	mov    fs:0x0,eax
100125ba:	mov    DWORD PTR [ebp-0x10],esp
100125bd:	mov    eax,DWORD PTR [ebp+0x8]
100125c0:	mov    DWORD PTR [ebp-0x103c],eax
100125c6:	mov    eax,DWORD PTR [ebp+0xc]
100125c9:	xor    edi,edi
100125cb:	push   0xfff
100125d0:	mov    DWORD PTR [ebp-0x1040],eax
100125d6:	mov    DWORD PTR [eax],edi
100125d8:	lea    eax,[ebp-0x1017]
100125de:	push   edi
100125df:	push   eax
100125e0:	mov    DWORD PTR [ebp-0x1054],0x1000
100125ea:	mov    BYTE PTR [ebp-0x1018],0x0
100125f1:	call   0x10045cf0
100125f6:	add    esp,0xc
100125f9:	lea    eax,[ebp-0x1054]
100125ff:	push   eax
10012600:	lea    eax,[ebp-0x1018]
10012606:	push   eax
10012607:	push   0x26
10012609:	push   edi
1001260a:	call   DWORD PTR ds:0x10066370
10012610:	test   eax,eax
10012612:	jne    0x10012630
10012614:	xor    al,al
10012616:	mov    ecx,DWORD PTR [ebp-0xc]
10012619:	mov    DWORD PTR fs:0x0,ecx
10012620:	pop    ecx
10012621:	pop    edi
10012622:	pop    esi
10012623:	pop    ebx
10012624:	mov    ecx,DWORD PTR [ebp-0x14]
10012627:	xor    ecx,ebp
10012629:	call   0x10042f87
1001262e:	leave  
1001262f:	ret    
10012630:	cmp    DWORD PTR [ebp-0x1018],0x3
10012637:	jne    0x10012614
10012639:	cmp    DWORD PTR [ebp-0x1014],edi
1001263f:	je     0x10012614
10012641:	push   DWORD PTR [ebp-0x1014]
10012647:	lea    ecx,[ebp-0x1034]
1001264d:	call   0x100011c8
10012652:	mov    DWORD PTR [ebp-0x4],edi
10012655:	mov    DWORD PTR [ebp-0x104c],edi
1001265b:	mov    DWORD PTR [ebp-0x1048],edi
10012661:	mov    DWORD PTR [ebp-0x1044],edi
10012667:	lea    eax,[ebp-0x1034]
1001266d:	push   eax
1001266e:	lea    eax,[ebp-0x1064]
10012674:	push   eax
10012675:	mov    BYTE PTR [ebp-0x1035],0x0
1001267c:	mov    BYTE PTR [ebp-0x4],0x2
10012680:	call   0x100127e2
10012685:	pop    ecx
10012686:	pop    ecx
10012687:	lea    ecx,[ebp-0x1050]
1001268d:	mov    BYTE PTR [ebp-0x4],0x3
10012691:	call   0x10012896
10012696:	lea    esi,[ebp-0x1064]
1001269c:	mov    BYTE PTR [ebp-0x4],0x2
100126a0:	call   0x1000d144
100126a5:	xor    ebx,ebx
100126a7:	cmp    DWORD PTR [ebp-0x104c],edi
100126ad:	jne    0x100126b3
100126af:	xor    eax,eax
100126b1:	jmp    0x100126c2
100126b3:	mov    eax,DWORD PTR [ebp-0x1048]
100126b9:	sub    eax,DWORD PTR [ebp-0x104c]
100126bf:	sar    eax,0x4
100126c2:	cmp    ebx,eax
100126c4:	je     0x10012776
100126ca:	push   ebx
100126cb:	lea    esi,[ebp-0x1050]
100126d1:	call   0x1000ca00
100126d6:	call   0x10004660
100126db:	cmp    eax,0x2
100126de:	jne    0x1001276e
100126e4:	push   0x7a463456
100126e9:	push   0x1006e1f8
100126ee:	call   0x100042bd
100126f3:	pop    ecx
100126f4:	pop    ecx
100126f5:	push   0x5842e834
100126fa:	push   eax
100126fb:	call   0x100042bd
10012700:	pop    ecx
10012701:	pop    ecx
10012702:	push   0x0
10012704:	push   ebx
10012705:	mov    edi,eax
10012707:	call   0x1000ca00
1001270c:	mov    esi,eax
1001270e:	call   0x10004676
10012713:	cmp    DWORD PTR [eax+0x18],0x10
10012717:	jb     0x1001271e
10012719:	mov    esi,DWORD PTR [eax+0x4]
1001271c:	jmp    0x10012721
1001271e:	lea    esi,[eax+0x4]
10012721:	push   edi
10012722:	push   0x4
10012724:	push   0x1006e220
10012729:	call   0x100042cf
1001272e:	add    esp,0xc
10012731:	push   eax
10012732:	push   esi
10012733:	call   0x1004575f
10012738:	test   eax,eax
1001273a:	pop    ecx
1001273b:	pop    ecx
1001273c:	jne    0x1001276e
1001273e:	push   DWORD PTR [ebp-0x1040]
10012744:	lea    esi,[ebp-0x1050]
1001274a:	push   DWORD PTR [ebp-0x103c]
10012750:	push   0x1
10012752:	push   ebx
10012753:	call   0x1000ca00
10012758:	mov    esi,eax
1001275a:	call   0x10004676
1001275f:	push   eax
10012760:	call   0x10012515
10012765:	add    esp,0xc
10012768:	mov    BYTE PTR [ebp-0x1035],al
1001276e:	inc    ebx
1001276f:	xor    edi,edi
10012771:	jmp    0x100126a7
10012776:	mov    DWORD PTR [ebp-0x4],0x1
1001277d:	cmp    BYTE PTR [ebp-0x1035],0x0
10012784:	je     0x100127af
10012786:	mov    bl,0x1
10012788:	lea    esi,[ebp-0x1050]
1001278e:	call   0x1000d144
10012793:	push   0x0
10012795:	push   0x1
10012797:	lea    ecx,[ebp-0x1034]
1001279d:	call   0x100012eb
100127a2:	mov    al,bl
100127a4:	jmp    0x10012616
100127a9:	mov    eax,0x1001277d
100127ae:	ret    
100127af:	push   DWORD PTR [ebp-0x1040]
100127b5:	lea    eax,[ebp-0x1034]
100127bb:	push   DWORD PTR [ebp-0x103c]
100127c1:	mov    BYTE PTR [ebp-0x4],0x5
100127c5:	push   eax
100127c6:	call   0x10012515
100127cb:	add    esp,0xc
100127ce:	mov    BYTE PTR [ebp-0x1035],al
100127d4:	mov    bl,BYTE PTR [ebp-0x1035]
100127da:	jmp    0x10012788
100127dc:	mov    eax,0x100127d4
100127e1:	ret    
100127e2:	push   0x34
100127e4:	mov    eax,0x10063615
100127e9:	call   0x10059b25
100127ee:	mov    edi,DWORD PTR [ebp+0x8]
100127f1:	xor    esi,esi
100127f3:	mov    DWORD PTR [ebp-0x10],esi
100127f6:	mov    DWORD PTR [edi+0x4],esi
100127f9:	mov    DWORD PTR [edi+0x8],esi
100127fc:	mov    DWORD PTR [edi+0xc],esi
100127ff:	mov    DWORD PTR [ebp-0x4],esi
10012802:	push   DWORD PTR ds:0x1008143c
10012808:	mov    DWORD PTR [ebp-0x10],0x1
1001280f:	call   0x10043100
10012814:	pop    ecx
10012815:	mov    DWORD PTR [ebp-0x14],eax
10012818:	push   esi
10012819:	push   DWORD PTR ds:0x1008143c
1001281f:	push   DWORD PTR [ebp+0xc]
10012822:	call   0x1000c970
10012827:	mov    ebx,eax
10012829:	cmp    ebx,0xffffffff
1001282c:	jne    0x10012834
1001282e:	mov    eax,DWORD PTR [ebp+0xc]
10012831:	mov    ebx,DWORD PTR [eax+0x14]
10012834:	cmp    ebx,esi
10012836:	jb     0x10012886
10012838:	mov    eax,ebx
1001283a:	sub    eax,esi
1001283c:	push   eax
1001283d:	push   esi
1001283e:	push   DWORD PTR [ebp+0xc]
10012841:	lea    eax,[ebp-0x40]
10012844:	call   0x1000c98f
10012849:	push   eax
1001284a:	lea    eax,[ebp-0x24]
1001284d:	push   eax
1001284e:	mov    DWORD PTR [ebp-0x4],0x1
10012855:	call   0x100129b7
1001285a:	pop    ecx
1001285b:	pop    ecx
1001285c:	push   eax
1001285d:	mov    esi,edi
1001285f:	mov    BYTE PTR [ebp-0x4],0x2
10012863:	call   0x1000f6cb
10012868:	lea    esi,[ebp-0x24]
1001286b:	call   0x100049d4
10012870:	push   0x0
10012872:	push   0x1
10012874:	lea    ecx,[ebp-0x40]
10012877:	mov    BYTE PTR [ebp-0x4],0x0
1001287b:	call   0x100012eb
10012880:	mov    eax,DWORD PTR [ebp-0x14]
10012883:	lea    esi,[ebx+eax*1]
10012886:	mov    eax,DWORD PTR [ebp+0xc]
10012889:	cmp    esi,DWORD PTR [eax+0x14]
1001288c:	jb     0x10012818
1001288e:	mov    eax,edi
10012890:	call   0x10059bfd
10012895:	ret    
10012896:	push   ebx
10012897:	push   esi
10012898:	push   edi
10012899:	mov    esi,eax
1001289b:	mov    edi,ecx
1001289d:	cmp    edi,esi
1001289f:	je     0x100129b1
100128a5:	call   0x1000c9ed
100128aa:	test   eax,eax
100128ac:	jne    0x100128ef
100128ae:	mov    ebx,DWORD PTR [edi+0x8]
100128b1:	cmp    DWORD PTR [edi+0x4],ebx
100128b4:	jbe    0x100128bb
100128b6:	call   0x100434a0
100128bb:	mov    esi,DWORD PTR [edi+0x4]
100128be:	cmp    esi,DWORD PTR [edi+0x8]
100128c1:	jbe    0x100128c8
100128c3:	call   0x100434a0
100128c8:	cmp    esi,ebx
100128ca:	je     0x100129b1
100128d0:	push   DWORD PTR [edi+0x8]
100128d3:	mov    eax,esi
100128d5:	mov    ecx,ebx
100128d7:	call   0x10012a72
100128dc:	pop    ecx
100128dd:	push   DWORD PTR [edi+0x8]
100128e0:	mov    esi,eax
100128e2:	call   0x1000d45a
100128e7:	mov    DWORD PTR [edi+0x8],esi
100128ea:	jmp    0x100129b1
100128ef:	mov    eax,esi
100128f1:	call   0x1000c9ed
100128f6:	mov    ebx,eax
100128f8:	mov    eax,edi
100128fa:	call   0x1000c9ed
100128ff:	cmp    ebx,eax
10012901:	mov    eax,DWORD PTR [edi+0x4]
10012904:	ja     0x1001292c
10012906:	push   DWORD PTR [esi+0x8]
10012909:	mov    ecx,DWORD PTR [esi+0x4]
1001290c:	call   0x10012a72
10012911:	pop    ecx
10012912:	push   DWORD PTR [edi+0x8]
10012915:	call   0x1000d45a
1001291a:	mov    eax,esi
1001291c:	call   0x1000c9ed
10012921:	shl    eax,0x4
10012924:	add    eax,DWORD PTR [edi+0x4]
10012927:	jmp    0x100129ae
1001292c:	test   eax,eax
1001292e:	jne    0x10012934
10012930:	xor    ebx,ebx
10012932:	jmp    0x1001293c
10012934:	mov    ebx,DWORD PTR [edi+0xc]
10012937:	sub    ebx,eax
10012939:	sar    ebx,0x4
1001293c:	mov    eax,esi
1001293e:	call   0x1000c9ed
10012943:	cmp    eax,ebx
10012945:	ja     0x10012969
10012947:	mov    eax,edi
10012949:	call   0x1000c9ed
1001294e:	mov    ecx,DWORD PTR [esi+0x4]
10012951:	mov    ebx,eax
10012953:	mov    eax,DWORD PTR [edi+0x4]
10012956:	shl    ebx,0x4
10012959:	add    ebx,ecx
1001295b:	push   ebx
1001295c:	call   0x10012a72
10012961:	pop    ecx
10012962:	push   DWORD PTR [edi+0x8]
10012965:	mov    ecx,ebx
10012967:	jmp    0x100129a6
10012969:	mov    eax,DWORD PTR [edi+0x4]
1001296c:	xor    ebx,ebx
1001296e:	cmp    eax,ebx
10012970:	je     0x10012983
10012972:	push   DWORD PTR [edi+0x8]
10012975:	call   0x1000d45a
1001297a:	push   DWORD PTR [edi+0x4]
1001297d:	call   0x10042f82
10012982:	pop    ecx
10012983:	mov    eax,esi
10012985:	call   0x1000c9ed
1001298a:	cmp    eax,ebx
1001298c:	mov    DWORD PTR [edi+0x4],ebx
1001298f:	mov    DWORD PTR [edi+0x8],ebx
10012992:	mov    DWORD PTR [edi+0xc],ebx
10012995:	je     0x100129b1
10012997:	call   0x1000f7a3
1001299c:	test   al,al
1001299e:	je     0x100129b1
100129a0:	push   DWORD PTR [edi+0x4]
100129a3:	mov    ecx,DWORD PTR [esi+0x4]
100129a6:	push   DWORD PTR [esi+0x8]
100129a9:	call   0x10012aaa
100129ae:	mov    DWORD PTR [edi+0x8],eax
100129b1:	mov    eax,edi
100129b3:	pop    edi
100129b4:	pop    esi
100129b5:	pop    ebx
100129b6:	ret    
100129b7:	push   0x44
100129b9:	mov    eax,0x10060eb6
100129be:	call   0x10059b25
100129c3:	mov    esi,DWORD PTR [ebp+0x8]
100129c6:	xor    ebx,ebx
100129c8:	mov    DWORD PTR [ebp-0x14],ebx
100129cb:	mov    DWORD PTR [esi+0x4],ebx
100129ce:	mov    DWORD PTR [esi+0x8],ebx
100129d1:	mov    DWORD PTR [esi+0xc],ebx
100129d4:	xor    edi,edi
100129d6:	inc    edi
100129d7:	mov    DWORD PTR [ebp-0x4],ebx
100129da:	push   0x1006e140
100129df:	mov    DWORD PTR [ebp-0x14],edi
100129e2:	call   0x10043100
100129e7:	pop    ecx
100129e8:	mov    DWORD PTR [ebp-0x18],eax
100129eb:	mov    DWORD PTR [ebp-0x10],ebx
100129ee:	push   DWORD PTR [ebp-0x10]
100129f1:	push   0x1006e140
100129f6:	push   DWORD PTR [ebp+0xc]
100129f9:	call   0x1000c970
100129fe:	mov    ebx,eax
10012a00:	cmp    ebx,0xffffffff
10012a03:	jne    0x10012a0b
10012a05:	mov    eax,DWORD PTR [ebp+0xc]
10012a08:	mov    ebx,DWORD PTR [eax+0x14]
10012a0b:	cmp    ebx,DWORD PTR [ebp-0x10]
10012a0e:	jb     0x10012a5f
10012a10:	mov    eax,ebx
10012a12:	sub    eax,DWORD PTR [ebp-0x10]
10012a15:	push   eax
10012a16:	push   DWORD PTR [ebp-0x10]
10012a19:	lea    eax,[ebp-0x50]
10012a1c:	push   DWORD PTR [ebp+0xc]
10012a1f:	call   0x1000c98f
10012a24:	push   eax
10012a25:	lea    eax,[ebp-0x34]
10012a28:	push   eax
10012a29:	mov    DWORD PTR [ebp-0x4],edi
10012a2c:	call   0x1002e632
10012a31:	pop    ecx
10012a32:	pop    ecx
10012a33:	push   eax
10012a34:	mov    BYTE PTR [ebp-0x4],0x2
10012a38:	call   0x1000f890
10012a3d:	push   0x0
10012a3f:	push   edi
10012a40:	lea    ecx,[ebp-0x34]
10012a43:	call   0x100012eb
10012a48:	push   0x0
10012a4a:	push   edi
10012a4b:	lea    ecx,[ebp-0x50]
10012a4e:	mov    BYTE PTR [ebp-0x4],0x0
10012a52:	call   0x100012eb
10012a57:	mov    eax,DWORD PTR [ebp-0x18]
10012a5a:	add    ebx,eax
10012a5c:	mov    DWORD PTR [ebp-0x10],ebx
10012a5f:	mov    eax,DWORD PTR [ebp-0x10]
10012a62:	mov    ecx,DWORD PTR [ebp+0xc]
10012a65:	cmp    eax,DWORD PTR [ecx+0x14]
10012a68:	jb     0x100129ee
10012a6a:	mov    eax,esi
10012a6c:	call   0x10059bfd
10012a71:	ret    
10012a72:	push   ecx
10012a73:	push   ebx
10012a74:	push   esi
10012a75:	mov    esi,DWORD PTR [esp+0x10]
10012a79:	push   edi
10012a7a:	mov    edi,ecx
10012a7c:	sub    esi,edi
10012a7e:	sar    esi,0x4
10012a81:	shl    esi,0x4
10012a84:	mov    ebx,eax
10012a86:	add    esi,ebx
10012a88:	cmp    edi,DWORD PTR [esp+0x14]
10012a8c:	je     0x10012aa3
10012a8e:	sub    ebx,edi
10012a90:	lea    ecx,[ebx+edi*1]
10012a93:	mov    eax,edi
10012a95:	call   0x1001004b
10012a9a:	add    edi,0x10
10012a9d:	cmp    edi,DWORD PTR [esp+0x14]
10012aa1:	jne    0x10012a90
10012aa3:	pop    edi
10012aa4:	mov    eax,esi
10012aa6:	pop    esi
10012aa7:	pop    ebx
10012aa8:	pop    ecx
10012aa9:	ret    
10012aaa:	push   ebp
10012aab:	mov    ebp,esp
10012aad:	push   ecx
10012aae:	push   edi
10012aaf:	xor    eax,eax
10012ab1:	lea    edi,[ebp-0x4]
10012ab4:	stos   BYTE PTR es:[edi],al
10012ab5:	push   DWORD PTR [ebp-0x4]
10012ab8:	push   DWORD PTR [ebp+0xc]
10012abb:	push   DWORD PTR [ebp+0xc]
10012abe:	push   DWORD PTR [ebp+0x8]
10012ac1:	call   0x10012ace
10012ac6:	add    esp,0x10
10012ac9:	pop    edi
10012aca:	leave  
10012acb:	ret    0x8
10012ace:	push   0xc
10012ad0:	mov    eax,0x10062c3e
10012ad5:	call   0x10059b58
10012ada:	mov    esi,ecx
10012adc:	mov    eax,DWORD PTR [ebp+0xc]
10012adf:	and    DWORD PTR [ebp-0x4],0x0
10012ae3:	mov    DWORD PTR [ebp-0x14],eax
10012ae6:	cmp    esi,DWORD PTR [ebp+0x8]
10012ae9:	je     0x10012b19
10012aeb:	push   DWORD PTR [ebp+0xc]
10012aee:	mov    ecx,esi
10012af0:	call   0x10010025
10012af5:	add    DWORD PTR [ebp+0xc],0x10
10012af9:	add    esi,0x10
10012afc:	jmp    0x10012ae6
10012afe:	mov    esi,DWORD PTR [ebp-0x14]
10012b01:	jmp    0x10012b0b
10012b03:	call   0x100049d4
10012b08:	add    esi,0x10
10012b0b:	cmp    esi,DWORD PTR [ebp+0xc]
10012b0e:	jne    0x10012b03
10012b10:	push   0x0
10012b12:	push   0x0
10012b14:	call   0x10047aa4
10012b19:	mov    eax,DWORD PTR [ebp+0xc]
10012b1c:	call   0x10059bfd
10012b21:	ret    
10012b22:	push   esi
10012b23:	mov    esi,edi
10012b25:	call   0x100040d0
10012b2a:	lea    esi,[edi+0x1c]
10012b2d:	call   0x100040d0
10012b32:	lea    esi,[edi+0x38]
10012b35:	call   0x100040d0
10012b3a:	lea    esi,[edi+0x54]
10012b3d:	call   0x100040d0
10012b42:	lea    esi,[edi+0x70]
10012b45:	call   0x100040d0
10012b4a:	mov    eax,edi
10012b4c:	pop    esi
10012b4d:	ret    
10012b4e:	push   0x0
10012b50:	mov    eax,0x10060465
10012b55:	call   0x10059b25
10012b5a:	mov    edi,DWORD PTR [ebp+0x8]
10012b5d:	mov    esi,edi
10012b5f:	call   0x100040d0
10012b64:	xor    ebx,ebx
10012b66:	lea    esi,[edi+0x1c]
10012b69:	mov    DWORD PTR [ebp-0x4],ebx
10012b6c:	call   0x100040d0
10012b71:	lea    esi,[edi+0x38]
10012b74:	call   0x100040d0
10012b79:	lea    esi,[edi+0x54]
10012b7c:	call   0x100040d0
10012b81:	lea    esi,[edi+0x70]
10012b84:	call   0x100040d0
10012b89:	push   0xffffffff
10012b8b:	push   ebx
10012b8c:	push   DWORD PTR [ebp+0xc]
10012b8f:	mov    ecx,edi
10012b91:	mov    BYTE PTR [ebp-0x4],0x4
10012b95:	call   0x1000123c
10012b9a:	push   0xffffffff
10012b9c:	push   ebx
10012b9d:	push   DWORD PTR [ebp+0x10]
10012ba0:	lea    ecx,[edi+0x1c]
10012ba3:	call   0x1000123c
10012ba8:	push   0xffffffff
10012baa:	push   ebx
10012bab:	push   DWORD PTR [ebp+0x14]
10012bae:	lea    ecx,[edi+0x38]
10012bb1:	call   0x1000123c
10012bb6:	push   0xffffffff
10012bb8:	push   ebx
10012bb9:	push   DWORD PTR [ebp+0x18]
10012bbc:	lea    ecx,[edi+0x54]
10012bbf:	call   0x1000123c
10012bc4:	push   0xffffffff
10012bc6:	push   ebx
10012bc7:	push   DWORD PTR [ebp+0x1c]
10012bca:	mov    ecx,esi
10012bcc:	call   0x1000123c
10012bd1:	mov    eax,edi
10012bd3:	call   0x10059bfd
10012bd8:	ret    0x18
10012bdb:	push   0x94
10012be0:	mov    eax,0x10060409
10012be5:	call   0x10059b8e
10012bea:	and    DWORD PTR [ebp-0xa0],0x0
10012bf1:	push   0xffffffff
10012bf3:	push   DWORD PTR ds:0x10080dc4
10012bf9:	mov    edi,ecx
10012bfb:	call   DWORD PTR ds:0x10066084
10012c01:	test   eax,eax
10012c03:	jne    0x10012c3f
10012c05:	lea    eax,[ebp-0x9c]
10012c0b:	push   eax
10012c0c:	mov    ecx,0x10080dc8
10012c11:	call   0x10012c4c
10012c16:	and    DWORD PTR [ebp-0x4],0x0
10012c1a:	push   DWORD PTR ds:0x10080dc4
10012c20:	call   DWORD PTR ds:0x10066094
10012c26:	push   edi
10012c27:	lea    ecx,[ebp-0x9c]
10012c2d:	call   0x10012c4c
10012c32:	lea    esi,[ebp-0x9c]
10012c38:	call   0x1000bcad
10012c3d:	jmp    0x10012c44
10012c3f:	call   0x10012b22
10012c44:	mov    eax,edi
10012c46:	call   0x10059c11
10012c4b:	ret    
10012c4c:	push   0x0
10012c4e:	mov    eax,0x1005fd47
10012c53:	call   0x10059b25
10012c58:	mov    edi,ecx
10012c5a:	mov    esi,DWORD PTR [ebp+0x8]
10012c5d:	push   edi
10012c5e:	mov    ecx,esi
10012c60:	call   0x100011a2
10012c65:	and    DWORD PTR [ebp-0x4],0x0
10012c69:	lea    eax,[edi+0x1c]
10012c6c:	push   eax
10012c6d:	lea    ecx,[esi+0x1c]
10012c70:	call   0x100011a2
10012c75:	lea    eax,[edi+0x38]
10012c78:	push   eax
10012c79:	lea    ecx,[esi+0x38]
10012c7c:	mov    BYTE PTR [ebp-0x4],0x1
10012c80:	call   0x100011a2
10012c85:	lea    eax,[edi+0x54]
10012c88:	push   eax
10012c89:	lea    ecx,[esi+0x54]
10012c8c:	mov    BYTE PTR [ebp-0x4],0x2
10012c90:	call   0x100011a2
10012c95:	add    edi,0x70
10012c98:	push   edi
10012c99:	lea    ecx,[esi+0x70]
10012c9c:	mov    BYTE PTR [ebp-0x4],0x3
10012ca0:	call   0x100011a2
10012ca5:	mov    eax,esi
10012ca7:	call   0x10059bfd
10012cac:	ret    0x4
10012caf:	push   ebx
10012cb0:	push   esi
10012cb1:	push   edi
10012cb2:	push   0xffffffff
10012cb4:	xor    ebx,ebx
10012cb6:	mov    esi,eax
10012cb8:	push   ebx
10012cb9:	mov    edi,0x10080dc8
10012cbe:	push   esi
10012cbf:	mov    ecx,edi
10012cc1:	call   0x1000123c
10012cc6:	push   0xffffffff
10012cc8:	push   ebx
10012cc9:	lea    eax,[esi+0x1c]
10012ccc:	push   eax
10012ccd:	mov    ecx,0x10080de4
10012cd2:	call   0x1000123c
10012cd7:	push   0xffffffff
10012cd9:	push   ebx
10012cda:	lea    eax,[esi+0x38]
10012cdd:	push   eax
10012cde:	mov    ecx,0x10080e00
10012ce3:	call   0x1000123c
10012ce8:	push   0xffffffff
10012cea:	push   ebx
10012ceb:	lea    eax,[esi+0x54]
10012cee:	push   eax
10012cef:	mov    ecx,0x10080e1c
10012cf4:	call   0x1000123c
10012cf9:	push   0xffffffff
10012cfb:	push   ebx
10012cfc:	add    esi,0x70
10012cff:	push   esi
10012d00:	mov    ecx,0x10080e38
10012d05:	call   0x1000123c
10012d0a:	mov    eax,edi
10012d0c:	pop    edi
10012d0d:	pop    esi
10012d0e:	pop    ebx
10012d0f:	ret    
10012d10:	push   esi
10012d11:	mov    esi,edi
10012d13:	call   0x100040d0
10012d18:	lea    esi,[edi+0x1c]
10012d1b:	call   0x100040d0
10012d20:	lea    esi,[edi+0x38]
10012d23:	call   0x100040d0
10012d28:	lea    esi,[edi+0x54]
10012d2b:	call   0x100040d0
10012d30:	xor    eax,eax
10012d32:	mov    DWORD PTR [edi+0x70],eax
10012d35:	mov    DWORD PTR [edi+0x80],eax
10012d3b:	mov    DWORD PTR [edi+0x84],eax
10012d41:	mov    eax,edi
10012d43:	pop    esi
10012d44:	ret    
10012d45:	push   0x38
10012d47:	mov    eax,0x10062c23
10012d4c:	call   0x10059b25
10012d51:	push   DWORD PTR [ebp+0xc]
10012d54:	lea    esi,[ebp-0x44]
10012d57:	call   0x10030470
10012d5c:	pop    ecx
10012d5d:	lea    ecx,[ebp-0x28]
10012d60:	push   ecx
10012d61:	xor    esi,esi
10012d63:	mov    ecx,eax
10012d65:	mov    DWORD PTR [ebp-0x4],esi
10012d68:	call   0x1002fbd0
10012d6d:	pop    ecx
10012d6e:	push   DWORD PTR [ebp+0x10]
10012d71:	mov    BYTE PTR [ebp-0x4],0x1
10012d75:	push   eax
10012d76:	push   DWORD PTR [ebp+0x8]
10012d79:	call   0x1001322f
10012d7e:	push   esi
10012d7f:	push   0x1
10012d81:	lea    ecx,[ebp-0x28]
10012d84:	mov    bl,al
10012d86:	call   0x100012eb
10012d8b:	push   esi
10012d8c:	push   0x1
10012d8e:	lea    ecx,[ebp-0x44]
10012d91:	call   0x100012eb
10012d96:	mov    al,bl
10012d98:	call   0x10059bfd
10012d9d:	ret    0xc
10012da0:	push   0x104
10012da5:	mov    eax,0x10062beb
10012daa:	call   0x10059b8e
10012daf:	mov    eax,DWORD PTR [ebp+0x8]
10012db2:	mov    DWORD PTR [ebp-0xf0],eax
10012db8:	mov    eax,DWORD PTR [ebp+0xc]
10012dbb:	push   eax
10012dbc:	lea    esi,[ebp-0x110]
10012dc2:	mov    DWORD PTR [ebp-0xf4],ecx
10012dc8:	call   0x10030470
10012dcd:	pop    ecx
10012dce:	and    DWORD PTR [ebp-0x4],0x0
10012dd2:	lea    ecx,[ebp-0x60]
10012dd5:	push   ecx
10012dd6:	mov    ecx,eax
10012dd8:	call   0x1002fbd0
10012ddd:	pop    ecx
10012dde:	push   0x0
10012de0:	push   0x1
10012de2:	mov    ecx,esi
10012de4:	call   0x100012eb
10012de9:	lea    edi,[ebp-0xec]
10012def:	call   0x10012d10
10012df4:	mov    eax,edi
10012df6:	push   eax
10012df7:	lea    eax,[ebp-0x60]
10012dfa:	push   eax
10012dfb:	push   DWORD PTR [ebp-0xf0]
10012e01:	mov    BYTE PTR [ebp-0x4],0x3
10012e05:	call   0x1001322f
10012e0a:	test   al,al
10012e0c:	je     0x10012eca
10012e12:	push   0x1006cd08
10012e17:	lea    esi,[ebp-0xd0]
10012e1d:	call   0x10006639
10012e22:	test   al,al
10012e24:	pop    ecx
10012e25:	jne    0x10012e99
10012e27:	mov    eax,esi
10012e29:	push   eax
10012e2a:	lea    ecx,[ebp-0x44]
10012e2d:	call   0x100011a2
10012e32:	mov    eax,DWORD PTR [ebx]
10012e34:	mov    DWORD PTR [ebp-0x24],eax
10012e37:	mov    eax,DWORD PTR [ebx+0x4]
10012e3a:	mov    DWORD PTR [ebp-0x20],eax
10012e3d:	mov    eax,DWORD PTR [ebp-0xf4]
10012e43:	mov    ecx,DWORD PTR [eax]
10012e45:	mov    eax,DWORD PTR [eax+0x4]
10012e48:	mov    DWORD PTR [ebp-0x1c],ecx
10012e4b:	mov    DWORD PTR [ebp-0x18],eax
10012e4e:	sub    esp,0x30
10012e51:	mov    esi,esp
10012e53:	lea    eax,[ebp-0x44]
10012e56:	mov    DWORD PTR [ebp-0xf4],esp
10012e5c:	push   eax
10012e5d:	mov    ecx,esi
10012e5f:	mov    BYTE PTR [ebp-0x4],0x4
10012e63:	call   0x100011a2
10012e68:	mov    eax,DWORD PTR [ebp-0x24]
10012e6b:	mov    ecx,DWORD PTR [ebp-0xf0]
10012e71:	mov    DWORD PTR [esi+0x20],eax
10012e74:	mov    eax,DWORD PTR [ebp-0x20]
10012e77:	mov    DWORD PTR [esi+0x24],eax
10012e7a:	mov    eax,DWORD PTR [ebp-0x1c]
10012e7d:	mov    DWORD PTR [esi+0x28],eax
10012e80:	mov    eax,DWORD PTR [ebp-0x18]
10012e83:	mov    DWORD PTR [esi+0x2c],eax
10012e86:	call   0x1001429d
10012e8b:	push   0x0
10012e8d:	push   0x1
10012e8f:	lea    ecx,[ebp-0x44]
10012e92:	call   0x100012eb
10012e97:	jmp    0x10012eca
10012e99:	mov    eax,DWORD PTR [ebx]
10012e9b:	mov    DWORD PTR [ebp-0x74],eax
10012e9e:	mov    eax,DWORD PTR [ebx+0x4]
10012ea1:	mov    DWORD PTR [ebp-0x70],eax
10012ea4:	mov    eax,DWORD PTR [ebp-0xf4]
10012eaa:	mov    ecx,DWORD PTR [eax]
10012eac:	mov    eax,DWORD PTR [eax+0x4]
10012eaf:	mov    DWORD PTR [ebp-0x68],eax
10012eb2:	lea    eax,[ebp-0xec]
10012eb8:	mov    DWORD PTR [ebp-0x6c],ecx
10012ebb:	mov    ecx,DWORD PTR [ebp-0xf0]
10012ec1:	push   eax
10012ec2:	lea    edx,[ebp-0x60]
10012ec5:	call   0x10012f9f
10012eca:	lea    esi,[ebp-0xec]
10012ed0:	call   0x10003423
10012ed5:	push   0x0
10012ed7:	push   0x1
10012ed9:	lea    ecx,[ebp-0x60]
10012edc:	call   0x100012eb
10012ee1:	call   0x10059c11
10012ee6:	ret    0x8
10012ee9:	push   0x0
10012eeb:	push   0x1
10012eed:	call   0x100012eb
10012ef2:	ret    
10012ef3:	push   0x0
10012ef5:	mov    eax,0x10061f12
10012efa:	call   0x10059b25
10012eff:	call   0x100141c2
10012f04:	mov    ds:0x10080e58,eax
10012f09:	mov    BYTE PTR [eax+0xc1],0x1
10012f10:	mov    eax,ds:0x10080e58
10012f15:	mov    DWORD PTR [eax+0x4],eax
10012f18:	mov    eax,ds:0x10080e58
10012f1d:	mov    DWORD PTR [eax],eax
10012f1f:	mov    eax,ds:0x10080e58
10012f24:	xor    edi,edi
10012f26:	mov    DWORD PTR [eax+0x8],eax
10012f29:	mov    DWORD PTR ds:0x10080e5c,edi
10012f2f:	mov    esi,0x10080e60
10012f34:	mov    DWORD PTR [esp+0x18],edi
10012f38:	call   0x10013f6a
10012f3d:	push   edi
10012f3e:	push   edi
10012f3f:	push   edi
10012f40:	mov    DWORD PTR ds:0x10080e70,0x14
10012f4a:	mov    DWORD PTR ds:0x10080e74,0x96
10012f54:	call   DWORD PTR ds:0x10066074
10012f5a:	mov    ds:0x10080e6c,eax
10012f5f:	mov    eax,0x10080e54
10012f64:	call   0x10059bfd
10012f69:	ret    
10012f6a:	push   0x0
10012f6c:	mov    eax,0x10061f12
10012f71:	call   0x10059b25
10012f76:	and    DWORD PTR [ebp-0x4],0x0
10012f7a:	push   DWORD PTR ds:0x10080e6c
10012f80:	call   DWORD PTR ds:0x10066070
10012f86:	mov    eax,0x10080e60
10012f8b:	call   0x10001491
10012f90:	or     DWORD PTR [ebp-0x4],0xffffffff
10012f94:	call   0x10013e4b
10012f99:	call   0x10059bfd
10012f9e:	ret    
10012f9f:	push   0x228
10012fa4:	mov    eax,0x10061ee5
10012fa9:	call   0x10059bc4
10012fae:	mov    eax,DWORD PTR [ebp+0x8]
10012fb1:	mov    edi,ecx
10012fb3:	push   0x1f4
10012fb8:	push   DWORD PTR [edi+0x18]
10012fbb:	mov    esi,edx
10012fbd:	mov    DWORD PTR [ebp-0xbc],edi
10012fc3:	mov    DWORD PTR [ebp-0xc4],esi
10012fc9:	mov    DWORD PTR [ebp-0xc0],eax
10012fcf:	call   DWORD PTR ds:0x10066084
10012fd5:	test   eax,eax
10012fd7:	jne    0x100130d7
10012fdd:	and    DWORD PTR [ebp-0x4],eax
10012fe0:	push   edi
10012fe1:	call   0x1001354c
10012fe6:	push   esi
10012fe7:	lea    ebx,[ebp-0xb8]
10012fed:	mov    esi,edi
10012fef:	call   0x100137e8
10012ff4:	cmp    DWORD PTR [ebp-0xb8],0x0
10012ffb:	mov    ebx,DWORD PTR [edi+0x4]
10012ffe:	je     0x10013008
10013000:	cmp    DWORD PTR [ebp-0xb8],edi
10013006:	je     0x1001300d
10013008:	call   0x100434a0
1001300d:	mov    esi,DWORD PTR [ebp-0xb4]
10013013:	cmp    esi,ebx
10013015:	je     0x100130df
1001301b:	and    DWORD PTR [ebp-0xd0],0x0
10013022:	lea    ebx,[edi+0xc]
10013025:	mov    eax,DWORD PTR [ebx+0x4]
10013028:	mov    DWORD PTR [ebp-0xc8],eax
1001302e:	lea    eax,[ebp-0xd0]
10013034:	mov    DWORD PTR [ebp-0xcc],ebx
1001303a:	call   0x10013840
1001303f:	mov    eax,DWORD PTR [eax]
10013041:	mov    edi,DWORD PTR [ebp-0xb8]
10013047:	inc    eax
10013048:	test   edi,edi
1001304a:	mov    DWORD PTR [ebp-0xb0],eax
10013050:	jne    0x10013057
10013052:	call   0x100434a0
10013057:	cmp    esi,DWORD PTR [edi+0x4]
1001305a:	jne    0x10013061
1001305c:	call   0x100434a0
10013061:	lea    edx,[esi+0xb8]
10013067:	mov    eax,ebx
10013069:	mov    DWORD PTR [ebp-0xc4],edx
1001306f:	call   0x100134a2
10013074:	lea    eax,[ebp-0xb0]
1001307a:	push   eax
1001307b:	lea    edi,[ebp-0xd0]
10013081:	call   0x100133e9
10013086:	mov    eax,DWORD PTR [ebp-0xb8]
1001308c:	cmp    esi,DWORD PTR [eax+0x4]
1001308f:	jne    0x10013096
10013091:	call   0x100434a0
10013096:	mov    edi,DWORD PTR [ebp-0xc0]
1001309c:	add    esi,0x30
1001309f:	call   0x100132d6
100130a4:	mov    eax,DWORD PTR [ebp-0xb4]
100130aa:	mov    ecx,DWORD PTR [ebp-0xb8]
100130b0:	cmp    eax,DWORD PTR [ecx+0x4]
100130b3:	jne    0x100130ba
100130b5:	call   0x100434a0
100130ba:	mov    eax,DWORD PTR [ebp-0xb0]
100130c0:	mov    ecx,DWORD PTR [ebp-0xc4]
100130c6:	mov    DWORD PTR [ecx],eax
100130c8:	mov    eax,DWORD PTR [ebp-0xbc]
100130ce:	push   DWORD PTR [eax+0x18]
100130d1:	call   DWORD PTR ds:0x10066094
100130d7:	call   0x10059c20
100130dc:	ret    0x4
100130df:	lea    edi,[ebp-0xac]
100130e5:	call   0x10012d10
100130ea:	mov    eax,DWORD PTR [ebp-0xbc]
100130f0:	mov    BYTE PTR [ebp-0x4],0x1
100130f4:	cmp    DWORD PTR [eax+0x14],0x0
100130f8:	je     0x10013123
100130fa:	mov    ecx,DWORD PTR [eax+0x10]
100130fd:	and    DWORD PTR [ebp-0xd0],0x0
10013104:	add    eax,0xc
10013107:	mov    DWORD PTR [ebp-0xcc],eax
1001310d:	lea    eax,[ebp-0xd0]
10013113:	mov    DWORD PTR [ebp-0xc8],ecx
10013119:	call   0x10013840
1001311e:	mov    eax,DWORD PTR [eax]
10013120:	inc    eax
10013121:	jmp    0x10013125
10013123:	xor    eax,eax
10013125:	mov    edi,DWORD PTR [ebp-0xc0]
1001312b:	lea    esi,[ebp-0xac]
10013131:	mov    DWORD PTR [ebp-0xb0],eax
10013137:	mov    DWORD PTR [ebp-0x24],eax
1001313a:	call   0x100132d6
1001313f:	sub    esp,0x90
10013145:	mov    esi,esp
10013147:	mov    DWORD PTR [ebp-0xc0],esp
1001314d:	push   esi
1001314e:	lea    edi,[ebp-0xac]
10013154:	call   0x1001336e
10013159:	mov    eax,DWORD PTR [ebp-0x24]
1001315c:	mov    DWORD PTR [esi+0x88],eax
10013162:	sub    esp,0x1c
10013165:	mov    BYTE PTR [ebp-0x4],0x2
10013169:	mov    ecx,esp
1001316b:	mov    DWORD PTR [ebp-0xb4],esp
10013171:	push   DWORD PTR [ebp-0xc4]
10013177:	call   0x100011a2
1001317c:	lea    ebx,[ebp-0x234]
10013182:	mov    BYTE PTR [ebp-0x4],0x1
10013186:	call   0x100143a8
1001318b:	add    esp,0xac
10013191:	mov    esi,eax
10013193:	push   esi
10013194:	lea    ecx,[ebp-0x184]
1001319a:	mov    BYTE PTR [ebp-0x4],0x3
1001319e:	call   0x100011a2
100131a3:	lea    eax,[esi+0x20]
100131a6:	lea    esi,[ebp-0x164]
100131ac:	mov    BYTE PTR [ebp-0x4],0x4
100131b0:	call   0x1001333f
100131b5:	mov    ebx,DWORD PTR [ebp-0xbc]
100131bb:	lea    eax,[ebp-0x184]
100131c1:	push   eax
100131c2:	push   ebx
100131c3:	lea    edi,[ebp-0xd0]
100131c9:	mov    BYTE PTR [ebp-0x4],0x5
100131cd:	call   0x100136d6
100131d2:	call   0x10003423
100131d7:	push   0x0
100131d9:	push   0x1
100131db:	lea    ecx,[ebp-0x184]
100131e1:	call   0x100012eb
100131e6:	lea    esi,[ebp-0x214]
100131ec:	mov    BYTE PTR [ebp-0x4],0x1
100131f0:	call   0x10003423
100131f5:	push   0x0
100131f7:	push   0x1
100131f9:	lea    ecx,[ebp-0x234]
100131ff:	call   0x100012eb
10013204:	lea    eax,[ebp-0xb0]
1001320a:	push   eax
1001320b:	add    ebx,0xc
1001320e:	lea    edi,[ebp-0xd0]
10013214:	call   0x100133e9
10013219:	lea    esi,[ebp-0xac]
1001321f:	call   0x10003423
10013224:	jmp    0x100130c8
10013229:	mov    eax,0x100130c8
1001322e:	ret    
1001322f:	push   0x10
10013231:	mov    eax,0x10062baa
10013236:	call   0x10059b58
1001323b:	mov    esi,DWORD PTR [ebp+0x8]
1001323e:	push   0x1f4
10013243:	push   DWORD PTR [esi+0x18]
10013246:	mov    BYTE PTR [ebp-0x11],0x0
1001324a:	call   DWORD PTR ds:0x10066084
10013250:	test   eax,eax
10013252:	je     0x10013258
10013254:	xor    al,al
10013256:	jmp    0x100132b6
10013258:	push   DWORD PTR [ebp+0xc]
1001325b:	and    DWORD PTR [ebp-0x4],0x0
1001325f:	lea    ebx,[ebp-0x1c]
10013262:	call   0x100137e8
10013267:	mov    ebx,DWORD PTR [ebp-0x1c]
1001326a:	test   ebx,ebx
1001326c:	mov    edi,DWORD PTR [esi+0x4]
1001326f:	je     0x10013275
10013271:	cmp    ebx,esi
10013273:	je     0x1001327a
10013275:	call   0x100434a0
1001327a:	cmp    DWORD PTR [ebp-0x18],edi
1001327d:	je     0x100132aa
1001327f:	test   ebx,ebx
10013281:	jne    0x10013288
10013283:	call   0x100434a0
10013288:	mov    eax,DWORD PTR [ebp-0x18]
1001328b:	cmp    eax,DWORD PTR [ebx+0x4]
1001328e:	jne    0x10013295
10013290:	call   0x100434a0
10013295:	mov    edi,DWORD PTR [ebp-0x18]
10013298:	mov    esi,DWORD PTR [ebp+0x10]
1001329b:	add    edi,0x30
1001329e:	call   0x100132d6
100132a3:	mov    BYTE PTR [ebp-0x11],0x1
100132a7:	mov    esi,DWORD PTR [ebp+0x8]
100132aa:	push   DWORD PTR [esi+0x18]
100132ad:	call   DWORD PTR ds:0x10066094
100132b3:	mov    al,BYTE PTR [ebp-0x11]
100132b6:	call   0x10059bfd
100132bb:	ret    0xc
100132be:	push   0x4
100132c0:	call   0x100379e0
100132c5:	pop    ecx
100132c6:	mov    eax,0x100132a7
100132cb:	ret    
100132cc:	jmp    0x10013e4b
100132d1:	jmp    0x10003423
100132d6:	push   0xffffffff
100132d8:	push   0x0
100132da:	push   edi
100132db:	mov    ecx,esi
100132dd:	call   0x1000123c
100132e2:	push   0xffffffff
100132e4:	push   0x0
100132e6:	lea    eax,[edi+0x1c]
100132e9:	push   eax
100132ea:	lea    ecx,[esi+0x1c]
100132ed:	call   0x1000123c
100132f2:	push   0xffffffff
100132f4:	push   0x0
100132f6:	lea    eax,[edi+0x38]
100132f9:	push   eax
100132fa:	lea    ecx,[esi+0x38]
100132fd:	call   0x1000123c
10013302:	push   0xffffffff
10013304:	push   0x0
10013306:	lea    eax,[edi+0x54]
10013309:	push   eax
1001330a:	lea    ecx,[esi+0x54]
1001330d:	call   0x1000123c
10013312:	mov    eax,DWORD PTR [edi+0x70]
10013315:	mov    DWORD PTR [esi+0x70],eax
10013318:	mov    eax,DWORD PTR [edi+0x78]
1001331b:	mov    DWORD PTR [esi+0x78],eax
1001331e:	mov    eax,DWORD PTR [edi+0x7c]
10013321:	mov    DWORD PTR [esi+0x7c],eax
10013324:	mov    eax,DWORD PTR [edi+0x80]
1001332a:	mov    DWORD PTR [esi+0x80],eax
10013330:	mov    eax,DWORD PTR [edi+0x84]
10013336:	mov    DWORD PTR [esi+0x84],eax
1001333c:	mov    eax,esi
1001333e:	ret    
1001333f:	push   edi
10013340:	mov    edi,eax
10013342:	push   esi
10013343:	call   0x1001336e
10013348:	mov    eax,DWORD PTR [edi+0x88]
1001334e:	mov    DWORD PTR [esi+0x88],eax
10013354:	mov    eax,esi
10013356:	pop    edi
10013357:	ret    
10013358:	push   esi
10013359:	lea    esi,[edi+0x20]
1001335c:	call   0x10003423
10013361:	push   0x0
10013363:	push   0x1
10013365:	mov    ecx,edi
10013367:	call   0x100012eb
1001336c:	pop    esi
1001336d:	ret    
1001336e:	push   0x0
10013370:	mov    eax,0x1005fd03
10013375:	call   0x10059b25
1001337a:	mov    esi,DWORD PTR [ebp+0x8]
1001337d:	push   edi
1001337e:	mov    ecx,esi
10013380:	call   0x100011a2
10013385:	and    DWORD PTR [ebp-0x4],0x0
10013389:	lea    eax,[edi+0x1c]
1001338c:	push   eax
1001338d:	lea    ecx,[esi+0x1c]
10013390:	call   0x100011a2
10013395:	lea    eax,[edi+0x38]
10013398:	push   eax
10013399:	lea    ecx,[esi+0x38]
1001339c:	mov    BYTE PTR [ebp-0x4],0x1
100133a0:	call   0x100011a2
100133a5:	lea    eax,[edi+0x54]
100133a8:	push   eax
100133a9:	lea    ecx,[esi+0x54]
100133ac:	mov    BYTE PTR [ebp-0x4],0x2
100133b0:	call   0x100011a2
100133b5:	mov    eax,DWORD PTR [edi+0x70]
100133b8:	mov    DWORD PTR [esi+0x70],eax
100133bb:	mov    eax,DWORD PTR [edi+0x78]
100133be:	mov    DWORD PTR [esi+0x78],eax
100133c1:	mov    eax,DWORD PTR [edi+0x7c]
100133c4:	mov    DWORD PTR [esi+0x7c],eax
100133c7:	mov    eax,DWORD PTR [edi+0x80]
100133cd:	mov    DWORD PTR [esi+0x80],eax
100133d3:	mov    eax,DWORD PTR [edi+0x84]
100133d9:	mov    DWORD PTR [esi+0x84],eax
100133df:	mov    eax,esi
100133e1:	call   0x10059bfd
100133e6:	ret    0x4
100133e9:	push   ebp
100133ea:	mov    ebp,esp
100133ec:	and    esp,0xfffffff8
100133ef:	sub    esp,0x14
100133f2:	mov    ecx,DWORD PTR [ebx+0x4]
100133f5:	mov    eax,DWORD PTR [ecx+0x4]
100133f8:	cmp    BYTE PTR [eax+0x11],0x0
100133fc:	push   esi
100133fd:	mov    DWORD PTR [esp+0xc],ecx
10013401:	mov    BYTE PTR [esp+0x8],0x1
10013406:	jne    0x1001342d
10013408:	mov    ecx,DWORD PTR [ebp+0x8]
1001340b:	mov    esi,DWORD PTR [ecx]
1001340d:	cmp    esi,DWORD PTR [eax+0xc]
10013410:	mov    DWORD PTR [esp+0xc],eax
10013414:	setb   BYTE PTR [esp+0x8]
10013419:	cmp    BYTE PTR [esp+0x8],0x0
1001341e:	je     0x10013424
10013420:	mov    eax,DWORD PTR [eax]
10013422:	jmp    0x10013427
10013424:	mov    eax,DWORD PTR [eax+0x8]
10013427:	cmp    BYTE PTR [eax+0x11],0x0
1001342b:	je     0x1001340d
1001342d:	cmp    BYTE PTR [esp+0x8],0x0
10013432:	mov    eax,DWORD PTR [esp+0xc]
10013436:	mov    DWORD PTR [esp+0x14],eax
1001343a:	mov    DWORD PTR [esp+0x10],ebx
1001343e:	je     0x10013472
10013440:	mov    ecx,DWORD PTR [ebx+0x4]
10013443:	cmp    eax,DWORD PTR [ecx]
10013445:	jne    0x10013465
10013447:	push   DWORD PTR [ebp+0x8]
1001344a:	lea    ecx,[esp+0x14]
1001344e:	push   0x1
10013450:	push   ecx
10013451:	mov    ecx,eax
10013453:	mov    esi,ebx
10013455:	call   0x10013864
1001345a:	mov    ecx,DWORD PTR [eax]
1001345c:	mov    eax,DWORD PTR [eax+0x4]
1001345f:	mov    BYTE PTR [edi+0x8],0x1
10013463:	jmp    0x10013494
10013465:	lea    esi,[esp+0x10]
10013469:	call   0x10013ee9
1001346e:	mov    eax,DWORD PTR [esp+0x14]
10013472:	mov    edx,DWORD PTR [eax+0xc]
10013475:	mov    ecx,DWORD PTR [ebp+0x8]
10013478:	cmp    edx,DWORD PTR [ecx]
1001347a:	jae    0x1001348c
1001347c:	push   ecx
1001347d:	push   DWORD PTR [esp+0xc]
10013481:	mov    ecx,DWORD PTR [esp+0x14]
10013485:	lea    eax,[esp+0x18]
10013489:	push   eax
1001348a:	jmp    0x10013453
1001348c:	mov    ecx,DWORD PTR [esp+0x10]
10013490:	mov    BYTE PTR [edi+0x8],0x0
10013494:	mov    DWORD PTR [edi+0x4],eax
10013497:	mov    DWORD PTR [edi],ecx
10013499:	mov    eax,edi
1001349b:	pop    esi
1001349c:	mov    esp,ebp
1001349e:	pop    ebp
1001349f:	ret    0x4
100134a2:	push   ebp
100134a3:	mov    ebp,esp
100134a5:	and    esp,0xfffffff8
100134a8:	sub    esp,0x14
100134ab:	push   ebx
100134ac:	push   esi
100134ad:	push   edi
100134ae:	mov    edi,eax
100134b0:	mov    ecx,DWORD PTR [edi+0x4]
100134b3:	mov    eax,DWORD PTR [ecx+0x4]
100134b6:	cmp    BYTE PTR [eax+0x11],0x0
100134ba:	mov    DWORD PTR [esp+0x14],ecx
100134be:	jne    0x100134d8
100134c0:	mov    ecx,DWORD PTR [edx]
100134c2:	cmp    ecx,DWORD PTR [eax+0xc]
100134c5:	jae    0x100134cf
100134c7:	mov    DWORD PTR [esp+0x14],eax
100134cb:	mov    eax,DWORD PTR [eax]
100134cd:	jmp    0x100134d2
100134cf:	mov    eax,DWORD PTR [eax+0x8]
100134d2:	cmp    BYTE PTR [eax+0x11],0x0
100134d6:	je     0x100134c2
100134d8:	mov    ecx,DWORD PTR [edi+0x4]
100134db:	mov    eax,DWORD PTR [ecx+0x4]
100134de:	cmp    BYTE PTR [eax+0x11],0x0
100134e2:	mov    ebx,ecx
100134e4:	jne    0x100134fc
100134e6:	mov    ecx,DWORD PTR [edx]
100134e8:	cmp    DWORD PTR [eax+0xc],ecx
100134eb:	jae    0x100134f2
100134ed:	mov    eax,DWORD PTR [eax+0x8]
100134f0:	jmp    0x100134f6
100134f2:	mov    ebx,eax
100134f4:	mov    eax,DWORD PTR [eax]
100134f6:	cmp    BYTE PTR [eax+0x11],0x0
100134fa:	je     0x100134e8
100134fc:	and    DWORD PTR [esp+0x10],0x0
10013501:	mov    DWORD PTR [esp+0x18],edi
10013505:	mov    DWORD PTR [esp+0x1c],ebx
10013509:	cmp    DWORD PTR [esp+0x18],0x0
1001350e:	je     0x10013516
10013510:	cmp    DWORD PTR [esp+0x18],edi
10013514:	je     0x1001351b
10013516:	call   0x100434a0
1001351b:	mov    eax,DWORD PTR [esp+0x14]
1001351f:	cmp    DWORD PTR [esp+0x1c],eax
10013523:	je     0x10013534
10013525:	inc    DWORD PTR [esp+0x10]
10013529:	lea    esi,[esp+0x18]
1001352d:	call   0x10001e6c
10013532:	jmp    0x10013509
10013534:	push   eax
10013535:	push   edi
10013536:	push   ebx
10013537:	push   edi
10013538:	lea    ebx,[esp+0x28]
1001353c:	call   0x10001611
10013541:	mov    eax,DWORD PTR [esp+0x10]
10013545:	pop    edi
10013546:	pop    esi
10013547:	pop    ebx
10013548:	mov    esp,ebp
1001354a:	pop    ebp
1001354b:	ret    
1001354c:	push   ebp
1001354d:	mov    ebp,esp
1001354f:	and    esp,0xfffffff8
10013552:	push   0xffffffff
10013554:	push   0x10061e93
10013559:	mov    eax,fs:0x0
1001355f:	push   eax
10013560:	sub    esp,0x40
10013563:	push   ebx
10013564:	push   esi
10013565:	push   edi
10013566:	mov    eax,ds:0x1007e030
1001356b:	xor    eax,esp
1001356d:	push   eax
1001356e:	lea    eax,[esp+0x50]
10013572:	mov    fs:0x0,eax
10013578:	mov    edi,DWORD PTR [ebp+0x8]
1001357b:	mov    ecx,DWORD PTR [edi+0x1c]
1001357e:	mov    edx,DWORD PTR [edi+0x20]
10013581:	mov    eax,DWORD PTR [edi+0x8]
10013584:	add    edx,ecx
10013586:	cmp    eax,edx
10013588:	jbe    0x100136c1
1001358e:	and    DWORD PTR [esp+0x14],0x0
10013593:	test   ecx,ecx
10013595:	lea    ebx,[edi+0xc]
10013598:	mov    eax,DWORD PTR [ebx+0x4]
1001359b:	mov    eax,DWORD PTR [eax]
1001359d:	mov    DWORD PTR [esp+0x18],ebx
100135a1:	mov    DWORD PTR [esp+0x1c],ebx
100135a5:	mov    DWORD PTR [esp+0x20],eax
100135a9:	je     0x100135c1
100135ab:	lea    esi,[esp+0x1c]
100135af:	call   0x10001e6c
100135b4:	inc    DWORD PTR [esp+0x14]
100135b8:	mov    eax,DWORD PTR [esp+0x14]
100135bc:	cmp    eax,DWORD PTR [edi+0x1c]
100135bf:	jne    0x100135ab
100135c1:	lea    esi,[esp+0x1c]
100135c5:	call   0x10013f4a
100135ca:	mov    eax,DWORD PTR [eax]
100135cc:	mov    DWORD PTR [esp+0x14],eax
100135d0:	call   0x10014198
100135d5:	mov    DWORD PTR [esp+0x38],eax
100135d9:	mov    BYTE PTR [eax+0x11],0x1
100135dd:	mov    eax,DWORD PTR [esp+0x38]
100135e1:	mov    DWORD PTR [eax+0x4],eax
100135e4:	mov    eax,DWORD PTR [esp+0x38]
100135e8:	mov    DWORD PTR [eax],eax
100135ea:	mov    eax,DWORD PTR [esp+0x38]
100135ee:	mov    DWORD PTR [eax+0x8],eax
100135f1:	and    DWORD PTR [esp+0x3c],0x0
100135f6:	and    DWORD PTR [esp+0x58],0x0
100135fb:	mov    eax,DWORD PTR [edi+0x4]
100135fe:	mov    esi,DWORD PTR [eax]
10013600:	mov    DWORD PTR [esp+0x1c],edi
10013604:	mov    DWORD PTR [esp+0x20],esi
10013608:	cmp    DWORD PTR [esp+0x1c],0x0
1001360d:	mov    eax,DWORD PTR [edi+0x4]
10013610:	mov    DWORD PTR [esp+0x28],eax
10013614:	je     0x1001361c
10013616:	cmp    DWORD PTR [esp+0x1c],edi
1001361a:	je     0x10013621
1001361c:	call   0x100434a0
10013621:	cmp    esi,DWORD PTR [esp+0x28]
10013625:	je     0x10013697
10013627:	cmp    DWORD PTR [esp+0x1c],0x0
1001362c:	jne    0x10013633
1001362e:	call   0x100434a0
10013633:	mov    eax,DWORD PTR [esp+0x1c]
10013637:	cmp    esi,DWORD PTR [eax+0x4]
1001363a:	jne    0x10013641
1001363c:	call   0x100434a0
10013641:	lea    ecx,[esi+0xb8]
10013647:	mov    eax,DWORD PTR [ecx]
10013649:	cmp    eax,DWORD PTR [esp+0x14]
1001364d:	jae    0x1001366a
1001364f:	push   esi
10013650:	push   DWORD PTR [esp+0x20]
10013654:	lea    eax,[esp+0x34]
10013658:	push   eax
10013659:	push   edi
1001365a:	call   0x100139b1
1001365f:	mov    ecx,DWORD PTR [eax]
10013661:	mov    esi,DWORD PTR [eax+0x4]
10013664:	mov    DWORD PTR [esp+0x1c],ecx
10013668:	jmp    0x10013604
1001366a:	sub    eax,DWORD PTR [esp+0x14]
1001366e:	push   ecx
1001366f:	lea    edi,[esp+0x44]
10013673:	lea    ebx,[esp+0x38]
10013677:	mov    DWORD PTR [ecx],eax
10013679:	call   0x100133e9
1001367e:	lea    esi,[esp+0x1c]
10013682:	call   0x10013e90
10013687:	mov    esi,DWORD PTR [esp+0x20]
1001368b:	mov    ebx,DWORD PTR [esp+0x18]
1001368f:	mov    edi,DWORD PTR [ebp+0x8]
10013692:	jmp    0x10013608
10013697:	mov    eax,DWORD PTR [ebx+0x4]
1001369a:	mov    ecx,DWORD PTR [esp+0x38]
1001369e:	mov    DWORD PTR [ebx+0x4],ecx
100136a1:	mov    ecx,DWORD PTR [esp+0x3c]
100136a5:	mov    DWORD PTR [esp+0x38],eax
100136a9:	mov    eax,DWORD PTR [ebx+0x8]
100136ac:	or     DWORD PTR [esp+0x58],0xffffffff
100136b1:	mov    DWORD PTR [esp+0x3c],eax
100136b5:	lea    eax,[esp+0x34]
100136b9:	mov    DWORD PTR [ebx+0x8],ecx
100136bc:	call   0x10001491
100136c1:	mov    ecx,DWORD PTR [esp+0x50]
100136c5:	mov    DWORD PTR fs:0x0,ecx
100136cc:	pop    ecx
100136cd:	pop    edi
100136ce:	pop    esi
100136cf:	pop    ebx
100136d0:	mov    esp,ebp
100136d2:	pop    ebp
100136d3:	ret    0x4
100136d6:	push   ebp
100136d7:	mov    ebp,esp
100136d9:	and    esp,0xfffffff8
100136dc:	push   ecx
100136dd:	push   ecx
100136de:	mov    edx,DWORD PTR [ebp+0x8]
100136e1:	mov    eax,DWORD PTR [edx+0x4]
100136e4:	push   ebx
100136e5:	push   esi
100136e6:	mov    esi,DWORD PTR [eax+0x4]
100136e9:	cmp    BYTE PTR [esi+0xc1],0x0
100136f0:	mov    ebx,eax
100136f2:	mov    al,0x1
100136f4:	mov    BYTE PTR [esp+0x8],al
100136f8:	jne    0x10013722
100136fa:	mov    ecx,DWORD PTR [ebp+0xc]
100136fd:	lea    eax,[esi+0x10]
10013700:	mov    ebx,esi
10013702:	call   0x1000779d
10013707:	test   al,al
10013709:	mov    BYTE PTR [esp+0x8],al
1001370d:	je     0x10013713
1001370f:	mov    esi,DWORD PTR [esi]
10013711:	jmp    0x10013716
10013713:	mov    esi,DWORD PTR [esi+0x8]
10013716:	cmp    BYTE PTR [esi+0xc1],0x0
1001371d:	je     0x100136fa
1001371f:	mov    edx,DWORD PTR [ebp+0x8]
10013722:	test   al,al
10013724:	mov    esi,ebx
10013726:	je     0x100137b4
1001372c:	mov    eax,DWORD PTR [edx+0x4]
1001372f:	cmp    ebx,DWORD PTR [eax]
10013731:	jne    0x10013759
10013733:	push   DWORD PTR [ebp+0xc]
10013736:	mov    esi,edx
10013738:	push   0x1
1001373a:	lea    eax,[esp+0x10]
1001373e:	mov    ecx,ebx
10013740:	push   eax
10013741:	call   0x10013cdb
10013746:	mov    ecx,DWORD PTR [eax]
10013748:	mov    eax,DWORD PTR [eax+0x4]
1001374b:	mov    DWORD PTR [edi],ecx
1001374d:	mov    DWORD PTR [edi+0x4],eax
10013750:	mov    BYTE PTR [edi+0x8],0x1
10013754:	jmp    0x100137de
10013759:	cmp    BYTE PTR [ebx+0xc1],0x0
10013760:	je     0x10013770
10013762:	mov    esi,DWORD PTR [ebx+0x8]
10013765:	cmp    BYTE PTR [esi+0xc1],0x0
1001376c:	je     0x100137b4
1001376e:	jmp    0x100137ab
10013770:	mov    eax,DWORD PTR [ebx]
10013772:	cmp    BYTE PTR [eax+0xc1],0x0
10013779:	jne    0x1001378b
1001377b:	mov    esi,eax
1001377d:	mov    eax,DWORD PTR [esi+0x8]
10013780:	cmp    BYTE PTR [eax+0xc1],0x0
10013787:	je     0x1001377b
10013789:	jmp    0x100137b4
1001378b:	mov    eax,DWORD PTR [ebx+0x4]
1001378e:	jmp    0x10013799
10013790:	cmp    esi,DWORD PTR [eax]
10013792:	jne    0x100137a2
10013794:	mov    esi,eax
10013796:	mov    eax,DWORD PTR [eax+0x4]
10013799:	cmp    BYTE PTR [eax+0xc1],0x0
100137a0:	je     0x10013790
100137a2:	cmp    BYTE PTR [esi+0xc1],0x0
100137a9:	je     0x100137b2
100137ab:	call   0x100434a0
100137b0:	jmp    0x100137b4
100137b2:	mov    esi,eax
100137b4:	mov    eax,DWORD PTR [ebp+0xc]
100137b7:	lea    ecx,[esi+0x10]
100137ba:	call   0x1000779d
100137bf:	test   al,al
100137c1:	je     0x100137d2
100137c3:	push   DWORD PTR [ebp+0xc]
100137c6:	mov    esi,DWORD PTR [ebp+0x8]
100137c9:	push   DWORD PTR [esp+0xc]
100137cd:	jmp    0x1001373a
100137d2:	mov    eax,DWORD PTR [ebp+0x8]
100137d5:	mov    DWORD PTR [edi],eax
100137d7:	mov    DWORD PTR [edi+0x4],esi
100137da:	mov    BYTE PTR [edi+0x8],0x0
100137de:	pop    esi
100137df:	mov    eax,edi
100137e1:	pop    ebx
100137e2:	mov    esp,ebp
100137e4:	pop    ebp
100137e5:	ret    0x8
100137e8:	push   ebp
100137e9:	mov    ebp,esp
100137eb:	sub    esp,0x18
100137ee:	push   edi
100137ef:	push   DWORD PTR [ebp+0x8]
100137f2:	mov    eax,esi
100137f4:	call   0x10014086
100137f9:	test   esi,esi
100137fb:	mov    edi,eax
100137fd:	mov    DWORD PTR [ebp-0x8],edi
10013800:	jne    0x10013807
10013802:	call   0x100434a0
10013807:	cmp    edi,DWORD PTR [esi+0x4]
1001380a:	mov    DWORD PTR [ebp-0xc],esi
1001380d:	je     0x10013823
1001380f:	mov    ecx,DWORD PTR [ebp+0x8]
10013812:	lea    eax,[edi+0x10]
10013815:	call   0x1000779d
1001381a:	test   al,al
1001381c:	jne    0x10013823
1001381e:	lea    eax,[ebp-0xc]
10013821:	jmp    0x1001382f
10013823:	mov    eax,DWORD PTR [esi+0x4]
10013826:	mov    DWORD PTR [ebp-0x10],eax
10013829:	mov    DWORD PTR [ebp-0x14],esi
1001382c:	lea    eax,[ebp-0x14]
1001382f:	mov    ecx,DWORD PTR [eax]
10013831:	mov    eax,DWORD PTR [eax+0x4]
10013834:	mov    DWORD PTR [ebx+0x4],eax
10013837:	mov    DWORD PTR [ebx],ecx
10013839:	mov    eax,ebx
1001383b:	pop    edi
1001383c:	leave  
1001383d:	ret    0x4
10013840:	push   ebp
10013841:	mov    ebp,esp
10013843:	push   ecx
10013844:	push   ecx
10013845:	mov    ecx,DWORD PTR [eax+0x4]
10013848:	mov    eax,DWORD PTR [eax+0x8]
1001384b:	push   esi
1001384c:	lea    esi,[ebp-0x8]
1001384f:	mov    DWORD PTR [ebp-0x8],ecx
10013852:	mov    DWORD PTR [ebp-0x4],eax
10013855:	call   0x10013ee9
1001385a:	mov    esi,eax
1001385c:	call   0x10013f4a
10013861:	pop    esi
10013862:	leave  
10013863:	ret    
10013864:	push   0x48
10013866:	mov    eax,0x100621c0
1001386b:	call   0x10059b25
10013870:	mov    edi,ecx
10013872:	cmp    DWORD PTR [esi+0x8],0x3ffffffe
10013879:	jb     0x100138ad
1001387b:	push   0x1006d02c
10013880:	lea    ecx,[ebp-0x2c]
10013883:	call   0x100011c8
10013888:	and    DWORD PTR [ebp-0x4],0x0
1001388c:	lea    eax,[ebp-0x2c]
1001388f:	push   eax
10013890:	lea    ecx,[ebp-0x54]
10013893:	call   0x10001065
10013898:	push   0x10074ec8
1001389d:	lea    eax,[ebp-0x54]
100138a0:	push   eax
100138a1:	mov    DWORD PTR [ebp-0x54],0x1006b96c
100138a8:	call   0x10047aa4
100138ad:	mov    eax,DWORD PTR [esi+0x4]
100138b0:	push   0x0
100138b2:	push   DWORD PTR [ebp+0x10]
100138b5:	push   eax
100138b6:	push   edi
100138b7:	push   eax
100138b8:	call   0x10013f8b
100138bd:	inc    DWORD PTR [esi+0x8]
100138c0:	mov    ebx,eax
100138c2:	mov    eax,DWORD PTR [esi+0x4]
100138c5:	cmp    edi,eax
100138c7:	jne    0x100138d6
100138c9:	mov    DWORD PTR [eax+0x4],ebx
100138cc:	mov    eax,DWORD PTR [esi+0x4]
100138cf:	mov    DWORD PTR [eax],ebx
100138d1:	mov    eax,DWORD PTR [esi+0x4]
100138d4:	jmp    0x100138f4
100138d6:	cmp    BYTE PTR [ebp+0xc],0x0
100138da:	je     0x100138e9
100138dc:	mov    DWORD PTR [edi],ebx
100138de:	mov    eax,DWORD PTR [esi+0x4]
100138e1:	cmp    edi,DWORD PTR [eax]
100138e3:	jne    0x100138f7
100138e5:	mov    DWORD PTR [eax],ebx
100138e7:	jmp    0x100138f7
100138e9:	mov    DWORD PTR [edi+0x8],ebx
100138ec:	mov    eax,DWORD PTR [esi+0x4]
100138ef:	cmp    edi,DWORD PTR [eax+0x8]
100138f2:	jne    0x100138f7
100138f4:	mov    DWORD PTR [eax+0x8],ebx
100138f7:	mov    edi,ebx
100138f9:	lea    eax,[ebx+0x4]
100138fc:	jmp    0x1001398b
10013901:	mov    ecx,DWORD PTR [eax]
10013903:	mov    edx,DWORD PTR [ecx+0x4]
10013906:	cmp    ecx,DWORD PTR [edx]
10013908:	jne    0x1001393f
1001390a:	mov    edx,DWORD PTR [edx+0x8]
1001390d:	cmp    BYTE PTR [edx+0x10],0x0
10013911:	je     0x10013947
10013913:	cmp    edi,DWORD PTR [ecx+0x8]
10013916:	jne    0x10013920
10013918:	push   esi
10013919:	mov    edi,ecx
1001391b:	call   0x10001cc9
10013920:	mov    eax,DWORD PTR [edi+0x4]
10013923:	mov    BYTE PTR [eax+0x10],0x1
10013927:	mov    eax,DWORD PTR [edi+0x4]
1001392a:	mov    eax,DWORD PTR [eax+0x4]
1001392d:	mov    BYTE PTR [eax+0x10],0x0
10013931:	mov    eax,DWORD PTR [edi+0x4]
10013934:	mov    ecx,DWORD PTR [eax+0x4]
10013937:	push   esi
10013938:	call   0x10001d09
1001393d:	jmp    0x10013988
1001393f:	mov    edx,DWORD PTR [edx]
10013941:	cmp    BYTE PTR [edx+0x10],0x0
10013945:	jne    0x1001395f
10013947:	mov    BYTE PTR [ecx+0x10],0x1
1001394b:	mov    BYTE PTR [edx+0x10],0x1
1001394f:	mov    ecx,DWORD PTR [eax]
10013951:	mov    ecx,DWORD PTR [ecx+0x4]
10013954:	mov    BYTE PTR [ecx+0x10],0x0
10013958:	mov    eax,DWORD PTR [eax]
1001395a:	mov    edi,DWORD PTR [eax+0x4]
1001395d:	jmp    0x10013988
1001395f:	cmp    edi,DWORD PTR [ecx]
10013961:	jne    0x1001396b
10013963:	push   esi
10013964:	mov    edi,ecx
10013966:	call   0x10001d09
1001396b:	mov    eax,DWORD PTR [edi+0x4]
1001396e:	mov    BYTE PTR [eax+0x10],0x1
10013972:	mov    eax,DWORD PTR [edi+0x4]
10013975:	mov    eax,DWORD PTR [eax+0x4]
10013978:	mov    BYTE PTR [eax+0x10],0x0
1001397c:	mov    eax,DWORD PTR [edi+0x4]
1001397f:	mov    ecx,DWORD PTR [eax+0x4]
10013982:	push   esi
10013983:	call   0x10001cc9
10013988:	lea    eax,[edi+0x4]
1001398b:	mov    ecx,DWORD PTR [eax]
1001398d:	cmp    BYTE PTR [ecx+0x10],0x0
10013991:	je     0x10013901
10013997:	mov    eax,DWORD PTR [esi+0x4]
1001399a:	mov    eax,DWORD PTR [eax+0x4]
1001399d:	mov    BYTE PTR [eax+0x10],0x1
100139a1:	mov    eax,DWORD PTR [ebp+0x8]
100139a4:	mov    DWORD PTR [eax+0x4],ebx
100139a7:	mov    DWORD PTR [eax],esi
100139a9:	call   0x10059bfd
100139ae:	ret    0xc
100139b1:	push   0x4c
100139b3:	mov    eax,0x10060df7
100139b8:	call   0x10059b25
100139bd:	mov    edi,DWORD PTR [ebp+0x14]
100139c0:	cmp    BYTE PTR [edi+0xc1],0x0
100139c7:	je     0x100139fb
100139c9:	push   0x1006ccec
100139ce:	lea    ecx,[ebp-0x30]
100139d1:	call   0x100011c8
100139d6:	and    DWORD PTR [ebp-0x4],0x0
100139da:	lea    eax,[ebp-0x30]
100139dd:	push   eax
100139de:	lea    ecx,[ebp-0x58]
100139e1:	call   0x10001065
100139e6:	push   0x10074de8
100139eb:	lea    eax,[ebp-0x58]
100139ee:	push   eax
100139ef:	mov    DWORD PTR [ebp-0x58],0x1006b978
100139f6:	call   0x10047aa4
100139fb:	lea    esi,[ebp+0x10]
100139fe:	call   0x10013e90
10013a03:	mov    ecx,DWORD PTR [edi]
10013a05:	cmp    BYTE PTR [ecx+0xc1],0x0
10013a0c:	je     0x10013a13
10013a0e:	mov    ebx,DWORD PTR [edi+0x8]
10013a11:	jmp    0x10013a31
10013a13:	mov    eax,DWORD PTR [edi+0x8]
10013a16:	cmp    BYTE PTR [eax+0xc1],0x0
10013a1d:	je     0x10013a23
10013a1f:	mov    ebx,ecx
10013a21:	jmp    0x10013a31
10013a23:	mov    eax,DWORD PTR [ebp+0x14]
10013a26:	cmp    eax,edi
10013a28:	mov    ebx,DWORD PTR [eax+0x8]
10013a2b:	jne    0x10013aba
10013a31:	cmp    BYTE PTR [ebx+0xc1],0x0
10013a38:	mov    esi,DWORD PTR [edi+0x4]
10013a3b:	jne    0x10013a40
10013a3d:	mov    DWORD PTR [ebx+0x4],esi
10013a40:	mov    ecx,DWORD PTR [ebp+0x8]
10013a43:	mov    eax,DWORD PTR [ecx+0x4]
10013a46:	cmp    DWORD PTR [eax+0x4],edi
10013a49:	jne    0x10013a50
10013a4b:	mov    DWORD PTR [eax+0x4],ebx
10013a4e:	jmp    0x10013a5b
10013a50:	cmp    DWORD PTR [esi],edi
10013a52:	jne    0x10013a58
10013a54:	mov    DWORD PTR [esi],ebx
10013a56:	jmp    0x10013a5b
10013a58:	mov    DWORD PTR [esi+0x8],ebx
10013a5b:	mov    edx,DWORD PTR [ecx+0x4]
10013a5e:	cmp    DWORD PTR [edx],edi
10013a60:	jne    0x10013a84
10013a62:	cmp    BYTE PTR [ebx+0xc1],0x0
10013a69:	je     0x10013a6f
10013a6b:	mov    ecx,esi
10013a6d:	jmp    0x10013a82
10013a6f:	mov    eax,DWORD PTR [ebx]
10013a71:	mov    ecx,ebx
10013a73:	jmp    0x10013a79
10013a75:	mov    ecx,eax
10013a77:	mov    eax,DWORD PTR [ecx]
10013a79:	cmp    BYTE PTR [eax+0xc1],0x0
10013a80:	je     0x10013a75
10013a82:	mov    DWORD PTR [edx],ecx
10013a84:	mov    eax,DWORD PTR [ebp+0x8]
10013a87:	mov    edx,DWORD PTR [eax+0x4]
10013a8a:	cmp    DWORD PTR [edx+0x8],edi
10013a8d:	jne    0x10013b24
10013a93:	cmp    BYTE PTR [ebx+0xc1],0x0
10013a9a:	je     0x10013aa0
10013a9c:	mov    ecx,esi
10013a9e:	jmp    0x10013ab5
10013aa0:	mov    eax,DWORD PTR [ebx+0x8]
10013aa3:	mov    ecx,ebx
10013aa5:	jmp    0x10013aac
10013aa7:	mov    ecx,eax
10013aa9:	mov    eax,DWORD PTR [ecx+0x8]
10013aac:	cmp    BYTE PTR [eax+0xc1],0x0
10013ab3:	je     0x10013aa7
10013ab5:	mov    DWORD PTR [edx+0x8],ecx
10013ab8:	jmp    0x10013b24
10013aba:	mov    DWORD PTR [ecx+0x4],eax
10013abd:	mov    ecx,DWORD PTR [edi]
10013abf:	mov    DWORD PTR [eax],ecx
10013ac1:	cmp    eax,DWORD PTR [edi+0x8]
10013ac4:	jne    0x10013aca
10013ac6:	mov    esi,eax
10013ac8:	jmp    0x10013ae7
10013aca:	cmp    BYTE PTR [ebx+0xc1],0x0
10013ad1:	mov    esi,DWORD PTR [eax+0x4]
10013ad4:	jne    0x10013ad9
10013ad6:	mov    DWORD PTR [ebx+0x4],esi
10013ad9:	mov    DWORD PTR [esi],ebx
10013adb:	mov    ecx,DWORD PTR [edi+0x8]
10013ade:	mov    DWORD PTR [eax+0x8],ecx
10013ae1:	mov    ecx,DWORD PTR [edi+0x8]
10013ae4:	mov    DWORD PTR [ecx+0x4],eax
10013ae7:	mov    ecx,DWORD PTR [ebp+0x8]
10013aea:	mov    ecx,DWORD PTR [ecx+0x4]
10013aed:	cmp    DWORD PTR [ecx+0x4],edi
10013af0:	jne    0x10013af7
10013af2:	mov    DWORD PTR [ecx+0x4],eax
10013af5:	jmp    0x10013b05
10013af7:	mov    ecx,DWORD PTR [edi+0x4]
10013afa:	cmp    DWORD PTR [ecx],edi
10013afc:	jne    0x10013b02
10013afe:	mov    DWORD PTR [ecx],eax
10013b00:	jmp    0x10013b05
10013b02:	mov    DWORD PTR [ecx+0x8],eax
10013b05:	mov    ecx,DWORD PTR [edi+0x4]
10013b08:	mov    DWORD PTR [eax+0x4],ecx
10013b0b:	add    eax,0xc0
10013b10:	mov    dl,BYTE PTR [eax]
10013b12:	lea    ecx,[edi+0xc0]
10013b18:	mov    BYTE PTR [ebp-0x11],dl
10013b1b:	mov    dl,BYTE PTR [ecx]
10013b1d:	mov    BYTE PTR [eax],dl
10013b1f:	mov    al,BYTE PTR [ebp-0x11]
10013b22:	mov    BYTE PTR [ecx],al
10013b24:	cmp    BYTE PTR [edi+0xc0],0x1
10013b2b:	jne    0x10013c9a
10013b31:	jmp    0x10013c38
10013b36:	cmp    BYTE PTR [ebx+0xc0],0x1
10013b3d:	jne    0x10013c93
10013b43:	mov    ecx,DWORD PTR [esi]
10013b45:	cmp    ebx,ecx
10013b47:	jne    0x10013beb
10013b4d:	mov    ecx,DWORD PTR [esi+0x8]
10013b50:	lea    eax,[ecx+0xc0]
10013b56:	cmp    BYTE PTR [eax],0x0
10013b59:	jne    0x10013b72
10013b5b:	push   DWORD PTR [ebp+0x8]
10013b5e:	mov    BYTE PTR [eax],0x1
10013b61:	mov    ecx,esi
10013b63:	mov    BYTE PTR [esi+0xc0],0x0
10013b6a:	call   0x100140bb
10013b6f:	mov    ecx,DWORD PTR [esi+0x8]
10013b72:	cmp    BYTE PTR [ecx+0xc1],0x0
10013b79:	jne    0x10013c33
10013b7f:	mov    eax,DWORD PTR [ecx]
10013b81:	cmp    BYTE PTR [eax+0xc0],0x1
10013b88:	jne    0x10013b9a
10013b8a:	mov    eax,DWORD PTR [ecx+0x8]
10013b8d:	cmp    BYTE PTR [eax+0xc0],0x1
10013b94:	je     0x10013c2c
10013b9a:	mov    eax,DWORD PTR [ecx+0x8]
10013b9d:	cmp    BYTE PTR [eax+0xc0],0x1
10013ba4:	jne    0x10013bc1
10013ba6:	mov    eax,DWORD PTR [ecx]
10013ba8:	push   DWORD PTR [ebp+0x8]
10013bab:	mov    BYTE PTR [eax+0xc0],0x1
10013bb2:	mov    BYTE PTR [ecx+0xc0],0x0
10013bb9:	call   0x100140fe
10013bbe:	mov    ecx,DWORD PTR [esi+0x8]
10013bc1:	push   DWORD PTR [ebp+0x8]
10013bc4:	lea    eax,[esi+0xc0]
10013bca:	mov    dl,BYTE PTR [eax]
10013bcc:	mov    BYTE PTR [ecx+0xc0],dl
10013bd2:	mov    BYTE PTR [eax],0x1
10013bd5:	mov    eax,DWORD PTR [ecx+0x8]
10013bd8:	mov    ecx,esi
10013bda:	mov    BYTE PTR [eax+0xc0],0x1
10013be1:	call   0x100140bb
10013be6:	jmp    0x10013c93
10013beb:	lea    eax,[ecx+0xc0]
10013bf1:	cmp    BYTE PTR [eax],0x0
10013bf4:	jne    0x10013c0c
10013bf6:	push   DWORD PTR [ebp+0x8]
10013bf9:	mov    BYTE PTR [eax],0x1
10013bfc:	mov    ecx,esi
10013bfe:	mov    BYTE PTR [esi+0xc0],0x0
10013c05:	call   0x100140fe
10013c0a:	mov    ecx,DWORD PTR [esi]
10013c0c:	cmp    BYTE PTR [ecx+0xc1],0x0
10013c13:	jne    0x10013c33
10013c15:	mov    eax,DWORD PTR [ecx+0x8]
10013c18:	cmp    BYTE PTR [eax+0xc0],0x1
10013c1f:	jne    0x10013c49
10013c21:	mov    eax,DWORD PTR [ecx]
10013c23:	cmp    BYTE PTR [eax+0xc0],0x1
10013c2a:	jne    0x10013c49
10013c2c:	mov    BYTE PTR [ecx+0xc0],0x0
10013c33:	mov    ebx,esi
10013c35:	mov    esi,DWORD PTR [esi+0x4]
10013c38:	mov    eax,DWORD PTR [ebp+0x8]
10013c3b:	mov    eax,DWORD PTR [eax+0x4]
10013c3e:	cmp    ebx,DWORD PTR [eax+0x4]
10013c41:	jne    0x10013b36
10013c47:	jmp    0x10013c93
10013c49:	mov    eax,DWORD PTR [ecx]
10013c4b:	cmp    BYTE PTR [eax+0xc0],0x1
10013c52:	jne    0x10013c6f
10013c54:	mov    eax,DWORD PTR [ecx+0x8]
10013c57:	push   DWORD PTR [ebp+0x8]
10013c5a:	mov    BYTE PTR [eax+0xc0],0x1
10013c61:	mov    BYTE PTR [ecx+0xc0],0x0
10013c68:	call   0x100140bb
10013c6d:	mov    ecx,DWORD PTR [esi]
10013c6f:	push   DWORD PTR [ebp+0x8]
10013c72:	lea    eax,[esi+0xc0]
10013c78:	mov    dl,BYTE PTR [eax]
10013c7a:	mov    BYTE PTR [ecx+0xc0],dl
10013c80:	mov    BYTE PTR [eax],0x1
10013c83:	mov    eax,DWORD PTR [ecx]
10013c85:	mov    ecx,esi
10013c87:	mov    BYTE PTR [eax+0xc0],0x1
10013c8e:	call   0x100140fe
10013c93:	mov    BYTE PTR [ebx+0xc0],0x1
10013c9a:	lea    ebx,[edi+0x10]
10013c9d:	lea    esi,[ebx+0x20]
10013ca0:	call   0x10003423
10013ca5:	push   0x0
10013ca7:	push   0x1
10013ca9:	mov    ecx,ebx
10013cab:	call   0x100012eb
10013cb0:	push   edi
10013cb1:	call   0x10042f82
10013cb6:	pop    ecx
10013cb7:	mov    ecx,DWORD PTR [ebp+0x8]
10013cba:	mov    eax,DWORD PTR [ecx+0x8]
10013cbd:	test   eax,eax
10013cbf:	jbe    0x10013cc5
10013cc1:	dec    eax
10013cc2:	mov    DWORD PTR [ecx+0x8],eax
10013cc5:	mov    ecx,DWORD PTR [ebp+0x10]
10013cc8:	mov    eax,DWORD PTR [ebp+0xc]
10013ccb:	mov    DWORD PTR [eax],ecx
10013ccd:	mov    ecx,DWORD PTR [ebp+0x14]
10013cd0:	mov    DWORD PTR [eax+0x4],ecx
10013cd3:	call   0x10059bfd
10013cd8:	ret    0x10
10013cdb:	push   0x48
10013cdd:	mov    eax,0x100621c0
10013ce2:	call   0x10059b25
10013ce7:	mov    edi,ecx
10013ce9:	cmp    DWORD PTR [esi+0x8],0x1745d16
10013cf0:	jb     0x10013d24
10013cf2:	push   0x1006d02c
10013cf7:	lea    ecx,[ebp-0x2c]
10013cfa:	call   0x100011c8
10013cff:	and    DWORD PTR [ebp-0x4],0x0
10013d03:	lea    eax,[ebp-0x2c]
10013d06:	push   eax
10013d07:	lea    ecx,[ebp-0x54]
10013d0a:	call   0x10001065
10013d0f:	push   0x10074ec8
10013d14:	lea    eax,[ebp-0x54]
10013d17:	push   eax
10013d18:	mov    DWORD PTR [ebp-0x54],0x1006b96c
10013d1f:	call   0x10047aa4
10013d24:	push   DWORD PTR [ebp+0x10]
10013d27:	mov    eax,DWORD PTR [esi+0x4]
10013d2a:	push   eax
10013d2b:	push   edi
10013d2c:	push   eax
10013d2d:	call   0x10014143
10013d32:	inc    DWORD PTR [esi+0x8]
10013d35:	mov    ebx,eax
10013d37:	mov    eax,DWORD PTR [esi+0x4]
10013d3a:	cmp    edi,eax
10013d3c:	jne    0x10013d4b
10013d3e:	mov    DWORD PTR [eax+0x4],ebx
10013d41:	mov    eax,DWORD PTR [esi+0x4]
10013d44:	mov    DWORD PTR [eax],ebx
10013d46:	mov    eax,DWORD PTR [esi+0x4]
10013d49:	jmp    0x10013d69
10013d4b:	cmp    BYTE PTR [ebp+0xc],0x0
10013d4f:	je     0x10013d5e
10013d51:	mov    DWORD PTR [edi],ebx
10013d53:	mov    eax,DWORD PTR [esi+0x4]
10013d56:	cmp    edi,DWORD PTR [eax]
10013d58:	jne    0x10013d6c
10013d5a:	mov    DWORD PTR [eax],ebx
10013d5c:	jmp    0x10013d6c
10013d5e:	mov    DWORD PTR [edi+0x8],ebx
10013d61:	mov    eax,DWORD PTR [esi+0x4]
10013d64:	cmp    edi,DWORD PTR [eax+0x8]
10013d67:	jne    0x10013d6c
10013d69:	mov    DWORD PTR [eax+0x8],ebx
10013d6c:	mov    edi,ebx
10013d6e:	lea    eax,[ebx+0x4]
10013d71:	jmp    0x10013e1f
10013d76:	mov    edx,DWORD PTR [eax]
10013d78:	mov    ecx,DWORD PTR [edx+0x4]
10013d7b:	cmp    edx,DWORD PTR [ecx]
10013d7d:	jne    0x10013dc1
10013d7f:	mov    ecx,DWORD PTR [ecx+0x8]
10013d82:	add    ecx,0xc0
10013d88:	cmp    BYTE PTR [ecx],0x0
10013d8b:	je     0x10013dce
10013d8d:	cmp    edi,DWORD PTR [edx+0x8]
10013d90:	jne    0x10013d9c
10013d92:	mov    edi,edx
10013d94:	push   esi
10013d95:	mov    ecx,edi
10013d97:	call   0x100140bb
10013d9c:	mov    eax,DWORD PTR [edi+0x4]
10013d9f:	mov    BYTE PTR [eax+0xc0],0x1
10013da6:	mov    eax,DWORD PTR [edi+0x4]
10013da9:	mov    eax,DWORD PTR [eax+0x4]
10013dac:	mov    BYTE PTR [eax+0xc0],0x0
10013db3:	mov    eax,DWORD PTR [edi+0x4]
10013db6:	mov    ecx,DWORD PTR [eax+0x4]
10013db9:	push   esi
10013dba:	call   0x100140fe
10013dbf:	jmp    0x10013e1c
10013dc1:	mov    ecx,DWORD PTR [ecx]
10013dc3:	add    ecx,0xc0
10013dc9:	cmp    BYTE PTR [ecx],0x0
10013dcc:	jne    0x10013deb
10013dce:	mov    BYTE PTR [edx+0xc0],0x1
10013dd5:	mov    BYTE PTR [ecx],0x1
10013dd8:	mov    ecx,DWORD PTR [eax]
10013dda:	mov    ecx,DWORD PTR [ecx+0x4]
10013ddd:	mov    BYTE PTR [ecx+0xc0],0x0
10013de4:	mov    eax,DWORD PTR [eax]
10013de6:	mov    edi,DWORD PTR [eax+0x4]
10013de9:	jmp    0x10013e1c
10013deb:	cmp    edi,DWORD PTR [edx]
10013ded:	jne    0x10013df9
10013def:	mov    edi,edx
10013df1:	push   esi
10013df2:	mov    ecx,edi
10013df4:	call   0x100140fe
10013df9:	mov    eax,DWORD PTR [edi+0x4]
10013dfc:	mov    BYTE PTR [eax+0xc0],0x1
10013e03:	mov    eax,DWORD PTR [edi+0x4]
10013e06:	mov    eax,DWORD PTR [eax+0x4]
10013e09:	mov    BYTE PTR [eax+0xc0],0x0
10013e10:	mov    eax,DWORD PTR [edi+0x4]
10013e13:	mov    ecx,DWORD PTR [eax+0x4]
10013e16:	push   esi
10013e17:	call   0x100140bb
10013e1c:	lea    eax,[edi+0x4]
10013e1f:	mov    ecx,DWORD PTR [eax]
10013e21:	cmp    BYTE PTR [ecx+0xc0],0x0
10013e28:	je     0x10013d76
10013e2e:	mov    eax,DWORD PTR [esi+0x4]
10013e31:	mov    eax,DWORD PTR [eax+0x4]
10013e34:	mov    BYTE PTR [eax+0xc0],0x1
10013e3b:	mov    eax,DWORD PTR [ebp+0x8]
10013e3e:	mov    DWORD PTR [eax+0x4],ebx
10013e41:	mov    DWORD PTR [eax],esi
10013e43:	call   0x10059bfd
10013e48:	ret    0xc
10013e4b:	push   ebp
10013e4c:	mov    ebp,esp
10013e4e:	and    esp,0xfffffff8
10013e51:	push   ecx
10013e52:	push   ecx
10013e53:	mov    eax,ds:0x10080e58
10013e58:	mov    edx,DWORD PTR [eax]
10013e5a:	push   ebx
10013e5b:	push   esi
10013e5c:	mov    ecx,0x10080e54
10013e61:	push   eax
10013e62:	mov    esi,ecx
10013e64:	push   esi
10013e65:	push   edx
10013e66:	push   ecx
10013e67:	lea    ebx,[esp+0x18]
10013e6b:	call   0x10013fc1
10013e70:	push   DWORD PTR ds:0x10080e58
10013e76:	call   0x10042f82
10013e7b:	and    DWORD PTR ds:0x10080e58,0x0
10013e82:	and    DWORD PTR ds:0x10080e5c,0x0
10013e89:	pop    ecx
10013e8a:	pop    esi
10013e8b:	pop    ebx
10013e8c:	mov    esp,ebp
10013e8e:	pop    ebp
10013e8f:	ret    
10013e90:	push   ebx
10013e91:	xor    ebx,ebx
10013e93:	cmp    DWORD PTR [esi],ebx
10013e95:	jne    0x10013e9c
10013e97:	call   0x100434a0
10013e9c:	mov    eax,DWORD PTR [esi+0x4]
10013e9f:	cmp    BYTE PTR [eax+0xc1],bl
10013ea5:	je     0x10013eae
10013ea7:	call   0x100434a0
10013eac:	jmp    0x10013ee5
10013eae:	mov    ecx,DWORD PTR [eax+0x8]
10013eb1:	cmp    BYTE PTR [ecx+0xc1],bl
10013eb7:	jne    0x10013ed7
10013eb9:	jmp    0x10013ebd
10013ebb:	mov    ecx,eax
10013ebd:	mov    eax,DWORD PTR [ecx]
10013ebf:	cmp    BYTE PTR [eax+0xc1],bl
10013ec5:	je     0x10013ebb
10013ec7:	mov    DWORD PTR [esi+0x4],ecx
10013eca:	jmp    0x10013ee5
10013ecc:	mov    ecx,DWORD PTR [esi+0x4]
10013ecf:	cmp    ecx,DWORD PTR [eax+0x8]
10013ed2:	jne    0x10013ee2
10013ed4:	mov    DWORD PTR [esi+0x4],eax
10013ed7:	mov    eax,DWORD PTR [eax+0x4]
10013eda:	cmp    BYTE PTR [eax+0xc1],bl
10013ee0:	je     0x10013ecc
10013ee2:	mov    DWORD PTR [esi+0x4],eax
10013ee5:	mov    eax,esi
10013ee7:	pop    ebx
10013ee8:	ret    
10013ee9:	push   ebx
10013eea:	xor    ebx,ebx
10013eec:	cmp    DWORD PTR [esi],ebx
10013eee:	jne    0x10013ef5
10013ef0:	call   0x100434a0
10013ef5:	mov    eax,DWORD PTR [esi+0x4]
10013ef8:	cmp    BYTE PTR [eax+0x11],bl
10013efb:	je     0x10013f0a
10013efd:	mov    eax,DWORD PTR [eax+0x8]
10013f00:	mov    DWORD PTR [esi+0x4],eax
10013f03:	cmp    BYTE PTR [eax+0x11],bl
10013f06:	je     0x10013f46
10013f08:	jmp    0x10013f3c
10013f0a:	mov    ecx,DWORD PTR [eax]
10013f0c:	cmp    BYTE PTR [ecx+0x11],bl
10013f0f:	jne    0x10013f2c
10013f11:	jmp    0x10013f15
10013f13:	mov    ecx,eax
10013f15:	mov    eax,DWORD PTR [ecx+0x8]
10013f18:	cmp    BYTE PTR [eax+0x11],bl
10013f1b:	je     0x10013f13
10013f1d:	mov    DWORD PTR [esi+0x4],ecx
10013f20:	jmp    0x10013f46
10013f22:	mov    ecx,DWORD PTR [esi+0x4]
10013f25:	cmp    ecx,DWORD PTR [eax]
10013f27:	jne    0x10013f34
10013f29:	mov    DWORD PTR [esi+0x4],eax
10013f2c:	mov    eax,DWORD PTR [eax+0x4]
10013f2f:	cmp    BYTE PTR [eax+0x11],bl
10013f32:	je     0x10013f22
10013f34:	mov    ecx,DWORD PTR [esi+0x4]
10013f37:	cmp    BYTE PTR [ecx+0x11],bl
10013f3a:	je     0x10013f43
10013f3c:	call   0x100434a0
10013f41:	jmp    0x10013f46
10013f43:	mov    DWORD PTR [esi+0x4],eax
10013f46:	mov    eax,esi
10013f48:	pop    ebx
10013f49:	ret    
10013f4a:	cmp    DWORD PTR [esi],0x0
10013f4d:	jne    0x10013f54
10013f4f:	call   0x100434a0
10013f54:	mov    eax,DWORD PTR [esi]
10013f56:	mov    ecx,DWORD PTR [esi+0x4]
10013f59:	cmp    ecx,DWORD PTR [eax+0x4]
10013f5c:	jne    0x10013f63
10013f5e:	call   0x100434a0
10013f63:	mov    eax,DWORD PTR [esi+0x4]
10013f66:	add    eax,0xc
10013f69:	ret    
10013f6a:	call   0x10014198
10013f6f:	lea    ecx,[esi+0x4]
10013f72:	mov    DWORD PTR [ecx],eax
10013f74:	mov    BYTE PTR [eax+0x11],0x1
10013f78:	mov    eax,DWORD PTR [ecx]
10013f7a:	mov    DWORD PTR [eax+0x4],eax
10013f7d:	mov    eax,DWORD PTR [ecx]
10013f7f:	mov    DWORD PTR [eax],eax
10013f81:	mov    ecx,DWORD PTR [ecx]
10013f83:	mov    DWORD PTR [ecx+0x8],ecx
10013f86:	and    DWORD PTR [esi+0x8],0x0
10013f8a:	ret    
10013f8b:	push   ebp
10013f8c:	mov    ebp,esp
10013f8e:	push   0x14
10013f90:	call   0x1004358e
10013f95:	test   eax,eax
10013f97:	pop    ecx
10013f98:	je     0x10013fbd
10013f9a:	mov    ecx,DWORD PTR [ebp+0x8]
10013f9d:	mov    DWORD PTR [eax],ecx
10013f9f:	mov    ecx,DWORD PTR [ebp+0xc]
10013fa2:	mov    DWORD PTR [eax+0x4],ecx
10013fa5:	mov    ecx,DWORD PTR [ebp+0x10]
10013fa8:	mov    DWORD PTR [eax+0x8],ecx
10013fab:	mov    ecx,DWORD PTR [ebp+0x14]
10013fae:	mov    ecx,DWORD PTR [ecx]
10013fb0:	mov    DWORD PTR [eax+0xc],ecx
10013fb3:	mov    cl,BYTE PTR [ebp+0x18]
10013fb6:	mov    BYTE PTR [eax+0x10],cl
10013fb9:	mov    BYTE PTR [eax+0x11],0x0
10013fbd:	pop    ebp
10013fbe:	ret    0x14
10013fc1:	push   ebp
10013fc2:	mov    ebp,esp
10013fc4:	mov    eax,ds:0x10080e58
10013fc9:	sub    esp,0x10
10013fcc:	cmp    DWORD PTR [ebp+0x8],0x0
10013fd0:	push   esi
10013fd1:	mov    esi,DWORD PTR [eax]
10013fd3:	push   edi
10013fd4:	mov    edi,0x10080e54
10013fd9:	je     0x10013fe0
10013fdb:	cmp    DWORD PTR [ebp+0x8],edi
10013fde:	je     0x10013fe5
10013fe0:	call   0x100434a0
10013fe5:	cmp    DWORD PTR [ebp+0xc],esi
10013fe8:	jne    0x1001403d
10013fea:	cmp    DWORD PTR [ebp+0x10],0x0
10013fee:	mov    esi,DWORD PTR ds:0x10080e58
10013ff4:	je     0x10013ffb
10013ff6:	cmp    DWORD PTR [ebp+0x10],edi
10013ff9:	je     0x10014000
10013ffb:	call   0x100434a0
10014000:	cmp    DWORD PTR [ebp+0x14],esi
10014003:	jne    0x1001403d
10014005:	mov    eax,ds:0x10080e58
1001400a:	push   DWORD PTR [eax+0x4]
1001400d:	mov    ecx,edi
1001400f:	call   0x10014247
10014014:	mov    eax,ds:0x10080e58
10014019:	mov    DWORD PTR [eax+0x4],eax
1001401c:	mov    eax,ds:0x10080e58
10014021:	and    DWORD PTR ds:0x10080e5c,0x0
10014028:	mov    DWORD PTR [eax],eax
1001402a:	mov    eax,ds:0x10080e58
1001402f:	mov    DWORD PTR [eax+0x8],eax
10014032:	mov    eax,ds:0x10080e58
10014037:	mov    eax,DWORD PTR [eax]
10014039:	mov    DWORD PTR [ebx],edi
1001403b:	jmp    0x1001407b
1001403d:	mov    eax,DWORD PTR [ebp+0x8]
10014040:	test   eax,eax
10014042:	je     0x10014049
10014044:	cmp    eax,DWORD PTR [ebp+0x10]
10014047:	je     0x1001404e
10014049:	call   0x100434a0
1001404e:	mov    eax,DWORD PTR [ebp+0xc]
10014051:	cmp    eax,DWORD PTR [ebp+0x14]
10014054:	mov    ecx,DWORD PTR [ebp+0x8]
10014057:	je     0x10014079
10014059:	lea    esi,[ebp+0x8]
1001405c:	mov    DWORD PTR [ebp-0x8],ecx
1001405f:	mov    DWORD PTR [ebp-0x4],eax
10014062:	call   0x10013e90
10014067:	push   DWORD PTR [ebp-0x4]
1001406a:	lea    eax,[ebp-0x10]
1001406d:	push   DWORD PTR [ebp-0x8]
10014070:	push   eax
10014071:	push   edi
10014072:	call   0x100139b1
10014077:	jmp    0x1001403d
10014079:	mov    DWORD PTR [ebx],ecx
1001407b:	pop    edi
1001407c:	mov    DWORD PTR [ebx+0x4],eax
1001407f:	mov    eax,ebx
10014081:	pop    esi
10014082:	leave  
10014083:	ret    0x10
10014086:	mov    eax,DWORD PTR [eax+0x4]
10014089:	push   esi
1001408a:	mov    esi,DWORD PTR [eax+0x4]
1001408d:	push   edi
1001408e:	mov    edi,eax
10014090:	jmp    0x100140ab
10014092:	mov    eax,DWORD PTR [esp+0xc]
10014096:	lea    ecx,[esi+0x10]
10014099:	call   0x1000779d
1001409e:	test   al,al
100140a0:	je     0x100140a7
100140a2:	mov    esi,DWORD PTR [esi+0x8]
100140a5:	jmp    0x100140ab
100140a7:	mov    edi,esi
100140a9:	mov    esi,DWORD PTR [esi]
100140ab:	cmp    BYTE PTR [esi+0xc1],0x0
100140b2:	je     0x10014092
100140b4:	mov    eax,edi
100140b6:	pop    edi
100140b7:	pop    esi
100140b8:	ret    0x4
100140bb:	mov    eax,DWORD PTR [ecx+0x8]
100140be:	mov    edx,DWORD PTR [eax]
100140c0:	mov    DWORD PTR [ecx+0x8],edx
100140c3:	mov    edx,DWORD PTR [eax]
100140c5:	cmp    BYTE PTR [edx+0xc1],0x0
100140cc:	jne    0x100140d1
100140ce:	mov    DWORD PTR [edx+0x4],ecx
100140d1:	mov    edx,DWORD PTR [ecx+0x4]
100140d4:	mov    DWORD PTR [eax+0x4],edx
100140d7:	mov    edx,DWORD PTR [esp+0x4]
100140db:	mov    edx,DWORD PTR [edx+0x4]
100140de:	cmp    ecx,DWORD PTR [edx+0x4]
100140e1:	jne    0x100140e8
100140e3:	mov    DWORD PTR [edx+0x4],eax
100140e6:	jmp    0x100140f6
100140e8:	mov    edx,DWORD PTR [ecx+0x4]
100140eb:	cmp    ecx,DWORD PTR [edx]
100140ed:	jne    0x100140f3
100140ef:	mov    DWORD PTR [edx],eax
100140f1:	jmp    0x100140f6
100140f3:	mov    DWORD PTR [edx+0x8],eax
100140f6:	mov    DWORD PTR [eax],ecx
100140f8:	mov    DWORD PTR [ecx+0x4],eax
100140fb:	ret    0x4
100140fe:	mov    eax,DWORD PTR [ecx]
10014100:	mov    edx,DWORD PTR [eax+0x8]
10014103:	mov    DWORD PTR [ecx],edx
10014105:	mov    edx,DWORD PTR [eax+0x8]
10014108:	cmp    BYTE PTR [edx+0xc1],0x0
1001410f:	jne    0x10014114
10014111:	mov    DWORD PTR [edx+0x4],ecx
10014114:	mov    edx,DWORD PTR [ecx+0x4]
10014117:	mov    DWORD PTR [eax+0x4],edx
1001411a:	mov    edx,DWORD PTR [esp+0x4]
1001411e:	mov    edx,DWORD PTR [edx+0x4]
10014121:	cmp    ecx,DWORD PTR [edx+0x4]
10014124:	jne    0x1001412b
10014126:	mov    DWORD PTR [edx+0x4],eax
10014129:	jmp    0x1001413a
1001412b:	mov    edx,DWORD PTR [ecx+0x4]
1001412e:	cmp    ecx,DWORD PTR [edx+0x8]
10014131:	jne    0x10014138
10014133:	mov    DWORD PTR [edx+0x8],eax
10014136:	jmp    0x1001413a
10014138:	mov    DWORD PTR [edx],eax
1001413a:	mov    DWORD PTR [eax+0x8],ecx
1001413d:	mov    DWORD PTR [ecx+0x4],eax
10014140:	ret    0x4
10014143:	push   0x8
10014145:	mov    eax,0x10060dd4
1001414a:	call   0x10059b58
1001414f:	push   0xc8
10014154:	call   0x1004358e
10014159:	mov    edi,eax
1001415b:	pop    ecx
1001415c:	mov    DWORD PTR [ebp-0x14],edi
1001415f:	test   edi,edi
10014161:	mov    DWORD PTR [ebp-0x4],0x1
10014168:	je     0x1001417b
1001416a:	push   DWORD PTR [ebp+0x10]
1001416d:	mov    ebx,DWORD PTR [ebp+0x14]
10014170:	push   DWORD PTR [ebp+0xc]
10014173:	push   DWORD PTR [ebp+0x8]
10014176:	call   0x100141f5
1001417b:	mov    eax,edi
1001417d:	call   0x10059bfd
10014182:	ret    0x10
10014185:	push   DWORD PTR [ebp-0x14]
10014188:	call   0x10042f82
1001418d:	pop    ecx
1001418e:	push   0x0
10014190:	push   0x0
10014192:	call   0x10047aa4
10014197:	int3   
10014198:	push   0x14
1001419a:	call   0x1004358e
1001419f:	xor    edx,edx
100141a1:	cmp    eax,edx
100141a3:	pop    ecx
100141a4:	je     0x100141a8
100141a6:	mov    DWORD PTR [eax],edx
100141a8:	lea    ecx,[eax+0x4]
100141ab:	cmp    ecx,edx
100141ad:	je     0x100141b1
100141af:	mov    DWORD PTR [ecx],edx
100141b1:	lea    ecx,[eax+0x8]
100141b4:	cmp    ecx,edx
100141b6:	je     0x100141ba
100141b8:	mov    DWORD PTR [ecx],edx
100141ba:	mov    BYTE PTR [eax+0x10],0x1
100141be:	mov    BYTE PTR [eax+0x11],dl
100141c1:	ret    
100141c2:	push   0xc8
100141c7:	call   0x1004358e
100141cc:	xor    edx,edx
100141ce:	cmp    eax,edx
100141d0:	pop    ecx
100141d1:	je     0x100141d5
100141d3:	mov    DWORD PTR [eax],edx
100141d5:	lea    ecx,[eax+0x4]
100141d8:	cmp    ecx,edx
100141da:	je     0x100141de
100141dc:	mov    DWORD PTR [ecx],edx
100141de:	lea    ecx,[eax+0x8]
100141e1:	cmp    ecx,edx
100141e3:	je     0x100141e7
100141e5:	mov    DWORD PTR [ecx],edx
100141e7:	mov    BYTE PTR [eax+0xc0],0x1
100141ee:	mov    BYTE PTR [eax+0xc1],dl
100141f4:	ret    
100141f5:	push   0x0
100141f7:	mov    eax,0x1006214a
100141fc:	call   0x10059b25
10014201:	mov    eax,DWORD PTR [ebp+0x8]
10014204:	mov    DWORD PTR [edi],eax
10014206:	mov    eax,DWORD PTR [ebp+0xc]
10014209:	mov    DWORD PTR [edi+0x4],eax
1001420c:	mov    eax,DWORD PTR [ebp+0x10]
1001420f:	lea    esi,[edi+0x10]
10014212:	push   ebx
10014213:	mov    ecx,esi
10014215:	mov    DWORD PTR [edi+0x8],eax
10014218:	mov    DWORD PTR [ebp+0x8],esi
1001421b:	call   0x100011a2
10014220:	and    DWORD PTR [ebp-0x4],0x0
10014224:	lea    eax,[ebx+0x20]
10014227:	add    esi,0x20
1001422a:	call   0x1001333f
1001422f:	mov    BYTE PTR [edi+0xc0],0x0
10014236:	mov    BYTE PTR [edi+0xc1],0x0
1001423d:	mov    eax,edi
1001423f:	call   0x10059bfd
10014244:	ret    0xc
10014247:	push   ecx
10014248:	push   ebp
10014249:	mov    ebp,DWORD PTR [esp+0xc]
1001424d:	cmp    BYTE PTR [ebp+0xc1],0x0
10014254:	push   edi
10014255:	mov    DWORD PTR [esp+0x8],ecx
10014259:	mov    edi,ebp
1001425b:	jne    0x10014297
1001425d:	push   ebx
1001425e:	push   esi
1001425f:	push   DWORD PTR [edi+0x8]
10014262:	mov    ecx,DWORD PTR [esp+0x14]
10014266:	call   0x10014247
1001426b:	mov    edi,DWORD PTR [edi]
1001426d:	lea    ebx,[ebp+0x10]
10014270:	lea    esi,[ebx+0x20]
10014273:	call   0x10003423
10014278:	push   0x0
1001427a:	push   0x1
1001427c:	mov    ecx,ebx
1001427e:	call   0x100012eb
10014283:	push   ebp
10014284:	call   0x10042f82
10014289:	cmp    BYTE PTR [edi+0xc1],0x0
10014290:	pop    ecx
10014291:	mov    ebp,edi
10014293:	je     0x1001425f
10014295:	pop    esi
10014296:	pop    ebx
10014297:	pop    edi
10014298:	pop    ebp
10014299:	pop    ecx
1001429a:	ret    0x4
1001429d:	push   0x34
1001429f:	mov    eax,0x10061e70
100142a4:	call   0x10059b25
100142a9:	mov    ebx,ecx
100142ab:	mov    DWORD PTR [ebp-0x20],ebx
100142ae:	and    DWORD PTR [ebp-0x4],0x0
100142b2:	mov    eax,DWORD PTR [ebx+0x4]
100142b5:	mov    esi,DWORD PTR [eax]
100142b7:	mov    edi,ebx
100142b9:	mov    DWORD PTR [ebp-0x10],esi
100142bc:	mov    DWORD PTR [ebp-0x14],edi
100142bf:	test   edi,edi
100142c1:	mov    eax,DWORD PTR [ebx+0x4]
100142c4:	mov    DWORD PTR [ebp-0x30],eax
100142c7:	je     0x100142cd
100142c9:	cmp    edi,ebx
100142cb:	je     0x100142d2
100142cd:	call   0x100434a0
100142d2:	cmp    esi,DWORD PTR [ebp-0x30]
100142d5:	je     0x10014394
100142db:	test   edi,edi
100142dd:	jne    0x100142e4
100142df:	call   0x100434a0
100142e4:	cmp    esi,DWORD PTR [edi+0x4]
100142e7:	jne    0x100142ee
100142e9:	call   0x100434a0
100142ee:	lea    ecx,[esi+0x4c]
100142f1:	lea    eax,[ebp+0x8]
100142f4:	call   0x10006617
100142f9:	test   al,al
100142fb:	je     0x10014381
10014301:	mov    eax,DWORD PTR [ebp+0x28]
10014304:	and    DWORD PTR [ebp-0x2c],0x0
10014308:	mov    DWORD PTR [esi+0xa8],eax
1001430e:	mov    eax,DWORD PTR [ebp+0x2c]
10014311:	mov    DWORD PTR [esi+0xac],eax
10014317:	mov    eax,DWORD PTR [ebp+0x30]
1001431a:	mov    DWORD PTR [esi+0xb0],eax
10014320:	mov    eax,DWORD PTR [ebp+0x34]
10014323:	mov    DWORD PTR [esi+0xb4],eax
10014329:	mov    eax,DWORD PTR [ebx+0x10]
1001432c:	add    ebx,0xc
1001432f:	mov    DWORD PTR [ebp-0x24],eax
10014332:	lea    eax,[ebp-0x2c]
10014335:	mov    DWORD PTR [ebp-0x28],ebx
10014338:	call   0x10013840
1001433d:	mov    eax,DWORD PTR [eax]
1001433f:	inc    eax
10014340:	cmp    esi,DWORD PTR [edi+0x4]
10014343:	mov    DWORD PTR [ebp-0x18],eax
10014346:	jne    0x1001434d
10014348:	call   0x100434a0
1001434d:	lea    edx,[esi+0xb8]
10014353:	mov    eax,ebx
10014355:	mov    DWORD PTR [ebp-0x1c],edx
10014358:	call   0x100134a2
1001435d:	lea    eax,[ebp-0x18]
10014360:	push   eax
10014361:	lea    edi,[ebp-0x40]
10014364:	call   0x100133e9
10014369:	mov    eax,DWORD PTR [ebp-0x14]
1001436c:	cmp    esi,DWORD PTR [eax+0x4]
1001436f:	jne    0x10014376
10014371:	call   0x100434a0
10014376:	mov    eax,DWORD PTR [ebp-0x18]
10014379:	mov    ecx,DWORD PTR [ebp-0x1c]
1001437c:	mov    ebx,DWORD PTR [ebp-0x20]
1001437f:	mov    DWORD PTR [ecx],eax
10014381:	lea    esi,[ebp-0x14]
10014384:	call   0x10013e90
10014389:	mov    esi,DWORD PTR [ebp-0x10]
1001438c:	mov    edi,DWORD PTR [ebp-0x14]
1001438f:	jmp    0x100142bf
10014394:	push   0x0
10014396:	push   0x1
10014398:	lea    ecx,[ebp+0x8]
1001439b:	call   0x100012eb
100143a0:	call   0x10059bfd
100143a5:	ret    0x30
100143a8:	push   0x8
100143aa:	mov    eax,0x10060db4
100143af:	call   0x10059b25
100143b4:	and    DWORD PTR [ebp-0x14],0x0
100143b8:	mov    DWORD PTR [ebp-0x10],ebx
100143bb:	lea    eax,[ebp+0x8]
100143be:	push   eax
100143bf:	mov    ecx,ebx
100143c1:	mov    DWORD PTR [ebp-0x4],0x1
100143c8:	call   0x100011a2
100143cd:	lea    esi,[ebx+0x20]
100143d0:	push   esi
100143d1:	lea    edi,[ebp+0x24]
100143d4:	mov    BYTE PTR [ebp-0x4],0x2
100143d8:	call   0x1001336e
100143dd:	mov    eax,DWORD PTR [ebp+0xac]
100143e3:	push   0x0
100143e5:	push   0x1
100143e7:	lea    ecx,[ebp+0x8]
100143ea:	mov    DWORD PTR [esi+0x88],eax
100143f0:	call   0x100012eb
100143f5:	mov    esi,edi
100143f7:	call   0x10003423
100143fc:	mov    eax,ebx
100143fe:	call   0x10059bfd
10014403:	ret    
10014404:	mov    eax,DWORD PTR [esp+0x8]
10014408:	mul    DWORD PTR [esp+0xc]
1001440c:	test   edx,edx
1001440e:	ja     0x10014415
10014410:	cmp    eax,0xffffffff
10014413:	jbe    0x1001441b
10014415:	mov    eax,0x80070057
1001441a:	ret    
1001441b:	mov    ecx,DWORD PTR [esp+0x4]
1001441f:	mov    DWORD PTR [ecx],eax
10014421:	xor    eax,eax
10014423:	ret    
10014424:	push   DWORD PTR [esp+0xc]
10014428:	call   DWORD PTR ds:0x100660c4
1001442e:	lea    eax,[eax+eax*1+0x2]
10014432:	push   eax
10014433:	push   DWORD PTR [esp+0x10]
10014437:	mov    eax,DWORD PTR [esp+0x10]
1001443b:	add    eax,eax
1001443d:	push   eax
1001443e:	push   DWORD PTR [esp+0x10]
10014442:	call   0x100434b5
10014447:	add    esp,0x10
1001444a:	neg    eax
1001444c:	sbb    eax,eax
1001444e:	inc    eax
1001444f:	ret    
10014450:	push   DWORD PTR [esp+0x10]
10014454:	push   DWORD PTR [esp+0x10]
10014458:	push   DWORD PTR [esp+0x10]
1001445c:	push   DWORD PTR [esp+0x10]
10014460:	call   0x100434b5
10014465:	push   eax
10014466:	call   0x10001f4b
1001446b:	add    esp,0x14
1001446e:	ret    
1001446f:	push   esi
10014470:	push   0x18
10014472:	mov    esi,ecx
10014474:	push   0x0
10014476:	push   esi
10014477:	call   0x10045cf0
1001447c:	add    esp,0xc
1001447f:	mov    eax,esi
10014481:	pop    esi
10014482:	ret    
10014483:	push   0xc
10014485:	push   0x10074f28
1001448a:	call   0x10046d84
1001448f:	and    DWORD PTR [ebp-0x4],0x0
10014493:	push   ecx
10014494:	call   DWORD PTR ds:0x1006611c
1001449a:	and    DWORD PTR [ebp-0x1c],0x0
1001449e:	jmp    0x100144be
100144a0:	mov    eax,DWORD PTR [ebp-0x14]
100144a3:	mov    eax,DWORD PTR [eax]
100144a5:	mov    eax,DWORD PTR [eax]
100144a7:	xor    ecx,ecx
100144a9:	cmp    eax,0xc0000017
100144ae:	sete   cl
100144b1:	mov    eax,ecx
100144b3:	ret    
100144b4:	mov    esp,DWORD PTR [ebp-0x18]
100144b7:	mov    DWORD PTR [ebp-0x1c],0x8007000e
100144be:	mov    DWORD PTR [ebp-0x4],0xfffffffe
100144c5:	mov    eax,DWORD PTR [ebp-0x1c]
100144c8:	call   0x10046dc9
100144cd:	ret    
100144ce:	test   eax,eax
100144d0:	jle    0x100144dc
100144d2:	and    eax,0xffff
100144d7:	or     eax,0x80070000
100144dc:	ret    
100144dd:	push   ebx
100144de:	push   ebp
100144df:	mov    ebx,ecx
100144e1:	push   edi
100144e2:	lea    edi,[ebx+0x4]
100144e5:	xor    ebp,ebp
100144e7:	cmp    DWORD PTR [edi],ebp
100144e9:	je     0x10014540
100144eb:	cmp    DWORD PTR [ebx+0xc],ebp
100144ee:	je     0x10014527
100144f0:	cmp    edi,ebp
100144f2:	jne    0x10014503
100144f4:	push   ebp
100144f5:	push   ebp
100144f6:	push   0x1
100144f8:	push   0xc0000005
100144fd:	call   DWORD PTR ds:0x10066128
10014503:	push   esi
10014504:	mov    esi,DWORD PTR [edi+0x8]
10014507:	cmp    esi,ebp
10014509:	je     0x10014520
1001450b:	push   DWORD PTR [esi+0x4]
1001450e:	call   DWORD PTR [esi]
10014510:	mov    ebp,DWORD PTR [esi+0x8]
10014513:	push   esi
10014514:	call   0x10042f82
10014519:	test   ebp,ebp
1001451b:	pop    ecx
1001451c:	mov    esi,ebp
1001451e:	jne    0x1001450b
10014520:	mov    DWORD PTR [edi+0x8],ebp
10014523:	mov    DWORD PTR [ebx+0xc],ebp
10014526:	pop    esi
10014527:	mov    eax,DWORD PTR [ebx+0x28]
1001452a:	cmp    eax,ebp
1001452c:	je     0x10014534
1001452e:	mov    ecx,DWORD PTR [eax]
10014530:	push   eax
10014531:	call   DWORD PTR [ecx+0x8]
10014534:	add    ebx,0x10
10014537:	push   ebx
10014538:	call   DWORD PTR ds:0x10066138
1001453e:	mov    DWORD PTR [edi],ebp
10014540:	pop    edi
10014541:	pop    ebp
10014542:	pop    ebx
10014543:	ret    
10014544:	add    ecx,0x8
10014547:	push   ecx
10014548:	call   DWORD PTR ds:0x100660a4
1001454e:	ret    
1001454f:	add    ecx,0x8
10014552:	push   ecx
10014553:	call   DWORD PTR ds:0x100660ac
10014559:	ret    
1001455a:	mov    eax,DWORD PTR [ecx+0x8]
1001455d:	ret    
1001455e:	push   ebx
1001455f:	mov    ebx,DWORD PTR [esp+0x8]
10014563:	test   ebx,ebx
10014565:	jne    0x1001456e
10014567:	mov    eax,0x80004003
1001456c:	jmp    0x100145a3
1001456e:	push   esi
1001456f:	push   edi
10014570:	xor    edi,edi
10014572:	lea    esi,[ecx+0x28]
10014575:	cmp    DWORD PTR [esi],edi
10014577:	jne    0x10014593
10014579:	push   esi
1001457a:	push   0x1006fca0
1001457f:	push   0x1
10014581:	push   edi
10014582:	push   0x1006b848
10014587:	call   DWORD PTR ds:0x1006643c
1001458d:	mov    edi,eax
1001458f:	test   edi,edi
10014591:	jl     0x1001459f
10014593:	mov    eax,DWORD PTR [esi]
10014595:	mov    DWORD PTR [ebx],eax
10014597:	mov    esi,DWORD PTR [esi]
10014599:	mov    eax,DWORD PTR [esi]
1001459b:	push   esi
1001459c:	call   DWORD PTR [eax+0x4]
1001459f:	mov    eax,edi
100145a1:	pop    edi
100145a2:	pop    esi
100145a3:	pop    ebx
100145a4:	ret    0x4
100145a7:	push   esi
100145a8:	push   edi
100145a9:	mov    esi,ecx
100145ab:	xor    edi,edi
100145ad:	dec    esi
100145ae:	je     0x100145d6
100145b0:	movzx  ecx,WORD PTR [edx]
100145b3:	test   cx,cx
100145b6:	je     0x100145d6
100145b8:	mov    WORD PTR [eax],cx
100145bb:	inc    eax
100145bc:	inc    eax
100145bd:	cmp    WORD PTR [edx],0x27
100145c1:	jne    0x100145cf
100145c3:	inc    edi
100145c4:	cmp    edi,esi
100145c6:	jae    0x100145cf
100145c8:	mov    WORD PTR [eax],0x27
100145cd:	inc    eax
100145ce:	inc    eax
100145cf:	inc    edx
100145d0:	inc    edx
100145d1:	inc    edi
100145d2:	cmp    edi,esi
100145d4:	jb     0x100145b0
100145d6:	and    WORD PTR [eax],0x0
100145da:	pop    edi
100145db:	pop    esi
100145dc:	ret    
100145dd:	mov    eax,0x80004005
100145e2:	ret    0x10
100145e5:	push   DWORD PTR [esp+0xc]
100145e9:	mov    edx,DWORD PTR [esp+0x14]
100145ed:	push   DWORD PTR [esp+0xc]
100145f1:	mov    ecx,DWORD PTR [esp+0xc]
100145f5:	call   0x10015b73
100145fa:	ret    0x10
100145fd:	push   DWORD PTR [esp+0xc]
10014601:	mov    edx,DWORD PTR [esp+0x14]
10014605:	push   DWORD PTR [esp+0xc]
10014609:	mov    ecx,DWORD PTR [esp+0xc]
1001460d:	call   0x10015d26
10014612:	ret    0x10
10014615:	push   esi
10014616:	mov    esi,ecx
10014618:	mov    DWORD PTR [esi],0x1006fc60
1001461e:	call   0x100144dd
10014623:	test   BYTE PTR [esp+0x8],0x1
10014628:	je     0x10014631
1001462a:	push   esi
1001462b:	call   0x10042f82
10014630:	pop    ecx
10014631:	mov    eax,esi
10014633:	pop    esi
10014634:	ret    0x4
10014637:	mov    eax,DWORD PTR [esi]
10014639:	test   eax,eax
1001463b:	je     0x10014647
1001463d:	push   eax
1001463e:	call   DWORD PTR ds:0x10066018
10014644:	and    DWORD PTR [esi],0x0
10014647:	ret    
10014648:	push   ebp
10014649:	mov    ebp,esp
1001464b:	cmp    DWORD PTR [ebp+0x10],0x0
1001464f:	jne    0x1001465b
10014651:	push   0x80004005
10014656:	call   0x10001f33
1001465b:	push   esi
1001465c:	mov    esi,DWORD PTR [ebp+0x10]
1001465f:	push   edi
10014660:	xor    edi,edi
10014662:	push   esi
10014663:	call   DWORD PTR ds:0x100660c4
10014669:	inc    eax
1001466a:	lea    ecx,[eax+eax*1]
1001466d:	add    esi,ecx
1001466f:	add    edi,ecx
10014671:	cmp    eax,0x1
10014674:	jne    0x10014662
10014676:	mov    eax,DWORD PTR [ebp+0x8]
10014679:	push   edi
1001467a:	push   DWORD PTR [ebp+0x10]
1001467d:	push   0x7
1001467f:	push   0x0
10014681:	push   DWORD PTR [ebp+0xc]
10014684:	push   DWORD PTR [eax]
10014686:	call   DWORD PTR ds:0x10066014
1001468c:	pop    edi
1001468d:	pop    esi
1001468e:	pop    ebp
1001468f:	ret    0xc
10014692:	push   ebp
10014693:	mov    ebp,esp
10014695:	sub    esp,0x228
1001469b:	mov    eax,ds:0x1007e030
100146a0:	xor    eax,ebp
100146a2:	mov    DWORD PTR [ebp-0x8],eax
100146a5:	push   ebx
100146a6:	push   esi
100146a7:	push   edi
100146a8:	lea    edx,[ebp-0x214]
100146ae:	push   edx
100146af:	push   0x2001f
100146b4:	mov    eax,ecx
100146b6:	mov    ecx,DWORD PTR [ebp+0x8]
100146b9:	xor    esi,esi
100146bb:	push   esi
100146bc:	mov    DWORD PTR [ebp-0x220],eax
100146c2:	mov    eax,DWORD PTR [eax]
100146c4:	push   ecx
100146c5:	push   eax
100146c6:	mov    DWORD PTR [ebp-0x21c],ecx
100146cc:	mov    DWORD PTR [ebp-0x210],esi
100146d2:	mov    DWORD PTR [ebp-0x214],esi
100146d8:	call   DWORD PTR ds:0x10066020
100146de:	mov    ebx,DWORD PTR ds:0x10066018
100146e4:	mov    edi,eax
100146e6:	cmp    edi,esi
100146e8:	jne    0x100147af
100146ee:	xor    eax,eax
100146f0:	cmp    DWORD PTR [ebp-0x210],esi
100146f6:	je     0x10014700
100146f8:	push   DWORD PTR [ebp-0x210]
100146fe:	call   ebx
10014700:	cmp    eax,esi
10014702:	mov    ecx,DWORD PTR [ebp-0x214]
10014708:	mov    edi,eax
1001470a:	mov    DWORD PTR [ebp-0x210],ecx
10014710:	jne    0x100147af
10014716:	mov    edi,DWORD PTR ds:0x1006601c
1001471c:	lea    eax,[ebp-0x228]
10014722:	push   eax
10014723:	push   esi
10014724:	push   esi
10014725:	push   esi
10014726:	lea    eax,[ebp-0x218]
1001472c:	push   eax
1001472d:	lea    eax,[ebp-0x20c]
10014733:	push   eax
10014734:	push   esi
10014735:	push   ecx
10014736:	jmp    0x10014773
10014738:	lea    eax,[ebp-0x20c]
1001473e:	push   eax
1001473f:	lea    ecx,[ebp-0x210]
10014745:	call   0x10014692
1001474a:	cmp    eax,esi
1001474c:	mov    DWORD PTR [ebp-0x214],eax
10014752:	jne    0x100147d2
10014754:	lea    eax,[ebp-0x228]
1001475a:	push   eax
1001475b:	push   esi
1001475c:	push   esi
1001475d:	push   esi
1001475e:	lea    eax,[ebp-0x218]
10014764:	push   eax
10014765:	lea    eax,[ebp-0x20c]
1001476b:	push   eax
1001476c:	push   esi
1001476d:	push   DWORD PTR [ebp-0x210]
10014773:	mov    DWORD PTR [ebp-0x218],0x100
1001477d:	call   edi
1001477f:	test   eax,eax
10014781:	je     0x10014738
10014783:	cmp    DWORD PTR [ebp-0x210],esi
10014789:	je     0x10014799
1001478b:	push   DWORD PTR [ebp-0x210]
10014791:	call   ebx
10014793:	mov    DWORD PTR [ebp-0x210],esi
10014799:	push   DWORD PTR [ebp-0x21c]
1001479f:	mov    eax,DWORD PTR [ebp-0x220]
100147a5:	push   DWORD PTR [eax]
100147a7:	call   DWORD PTR ds:0x1006600c
100147ad:	mov    edi,eax
100147af:	cmp    DWORD PTR [ebp-0x210],esi
100147b5:	je     0x100147bf
100147b7:	push   DWORD PTR [ebp-0x210]
100147bd:	call   ebx
100147bf:	mov    eax,edi
100147c1:	mov    ecx,DWORD PTR [ebp-0x8]
100147c4:	pop    edi
100147c5:	pop    esi
100147c6:	xor    ecx,ebp
100147c8:	pop    ebx
100147c9:	call   0x10042f87
100147ce:	leave  
100147cf:	ret    0x4
100147d2:	cmp    DWORD PTR [ebp-0x210],esi
100147d8:	je     0x100147e2
100147da:	push   DWORD PTR [ebp-0x210]
100147e0:	call   ebx
100147e2:	mov    eax,DWORD PTR [ebp-0x214]
100147e8:	jmp    0x100147c1
100147ea:	push   0x20
100147ec:	mov    eax,0x100603e3
100147f1:	call   0x10059b58
100147f6:	xor    edi,edi
100147f8:	cmp    DWORD PTR [ebp+0xc],edi
100147fb:	je     0x10014903
10014801:	cmp    DWORD PTR [ebp+0x10],edi
10014804:	je     0x10014903
1001480a:	push   DWORD PTR [ebp+0xc]
1001480d:	mov    DWORD PTR [ebp-0x1c],edi
10014810:	call   DWORD PTR ds:0x100660c4
10014816:	push   0x2
10014818:	lea    eax,[eax+eax*1+0x2]
1001481c:	xor    ecx,ecx
1001481e:	pop    esi
1001481f:	mov    DWORD PTR [ebp-0x20],eax
10014822:	mov    edx,esi
10014824:	mul    edx
10014826:	seto   cl
10014829:	mov    DWORD PTR [ebp-0x14],edi
1001482c:	mov    DWORD PTR [ebp-0x4],edi
1001482f:	neg    ecx
10014831:	or     ecx,eax
10014833:	push   ecx
10014834:	call   0x10043811
10014839:	pop    ecx
1001483a:	mov    DWORD PTR [ebp-0x14],eax
1001483d:	jmp    0x1001484a
1001483f:	mov    eax,0x10014845
10014844:	ret    
10014845:	push   0x2
10014847:	xor    edi,edi
10014849:	pop    esi
1001484a:	push   DWORD PTR [ebp+0x10]
1001484d:	mov    DWORD PTR [ebp-0x4],esi
10014850:	mov    eax,DWORD PTR [ebp-0x14]
10014853:	mov    DWORD PTR [ebp-0x2c],eax
10014856:	call   DWORD PTR ds:0x100660c4
1001485c:	lea    eax,[eax+eax*1+0x2]
10014860:	xor    ecx,ecx
10014862:	mov    DWORD PTR [ebp-0x24],eax
10014865:	mov    edx,esi
10014867:	mul    edx
10014869:	seto   cl
1001486c:	mov    DWORD PTR [ebp-0x18],edi
1001486f:	mov    BYTE PTR [ebp-0x4],0x3
10014873:	neg    ecx
10014875:	or     ecx,eax
10014877:	push   ecx
10014878:	call   0x10043811
1001487d:	pop    ecx
1001487e:	mov    DWORD PTR [ebp-0x18],eax
10014881:	mov    DWORD PTR [ebp-0x4],esi
10014884:	jmp    0x1001488e
10014886:	mov    eax,0x1001488c
1001488b:	ret    
1001488c:	xor    edi,edi
1001488e:	mov    BYTE PTR [ebp-0x4],0x5
10014892:	cmp    DWORD PTR [ebp-0x14],edi
10014895:	mov    esi,DWORD PTR [ebp-0x18]
10014898:	mov    DWORD PTR [ebp-0x28],esi
1001489b:	je     0x100148d8
1001489d:	cmp    esi,edi
1001489f:	je     0x100148d8
100148a1:	push   DWORD PTR [ebp-0x20]
100148a4:	push   DWORD PTR [ebp+0xc]
100148a7:	push   DWORD PTR [ebp-0x20]
100148aa:	push   DWORD PTR [ebp-0x14]
100148ad:	call   0x10014450
100148b2:	push   DWORD PTR [ebp-0x24]
100148b5:	push   DWORD PTR [ebp+0x10]
100148b8:	push   DWORD PTR [ebp-0x24]
100148bb:	push   esi
100148bc:	call   0x10014450
100148c1:	mov    esi,DWORD PTR [ebp+0x8]
100148c4:	add    esp,0x20
100148c7:	lea    eax,[ebp-0x18]
100148ca:	push   eax
100148cb:	lea    eax,[ebp-0x14]
100148ce:	push   eax
100148cf:	call   0x10017993
100148d4:	test   eax,eax
100148d6:	jne    0x100148e1
100148d8:	mov    DWORD PTR [ebp-0x1c],0x8007000e
100148df:	jmp    0x100148e7
100148e1:	mov    DWORD PTR [ebp-0x2c],edi
100148e4:	mov    DWORD PTR [ebp-0x28],edi
100148e7:	push   DWORD PTR [ebp-0x28]
100148ea:	call   0x100434b0
100148ef:	push   DWORD PTR [ebp-0x2c]
100148f2:	call   0x100434b0
100148f7:	xor    eax,eax
100148f9:	cmp    DWORD PTR [ebp-0x1c],edi
100148fc:	pop    ecx
100148fd:	pop    ecx
100148fe:	setge  al
10014901:	jmp    0x10014905
10014903:	xor    eax,eax
10014905:	call   0x10059bfd
1001490a:	ret    0xc
1001490d:	push   esi
1001490e:	mov    esi,eax
10014910:	mov    eax,DWORD PTR [esi+0x8]
10014913:	push   edi
10014914:	xor    edi,edi
10014916:	test   eax,eax
10014918:	jle    0x10014946
1001491a:	test   edi,edi
1001491c:	jl     0x10014950
1001491e:	cmp    edi,eax
10014920:	jge    0x10014950
10014922:	mov    eax,DWORD PTR [esi]
10014924:	push   DWORD PTR [eax+edi*4]
10014927:	call   0x100434b0
1001492c:	pop    ecx
1001492d:	mov    eax,edi
1001492f:	mov    ecx,esi
10014931:	call   0x10017a1c
10014936:	push   DWORD PTR [eax]
10014938:	call   0x100434b0
1001493d:	mov    eax,DWORD PTR [esi+0x8]
10014940:	inc    edi
10014941:	cmp    edi,eax
10014943:	pop    ecx
10014944:	jl     0x1001491a
10014946:	call   0x100179f5
1001494b:	pop    edi
1001494c:	xor    eax,eax
1001494e:	pop    esi
1001494f:	ret    
10014950:	push   0x0
10014952:	push   0x0
10014954:	push   0x1
10014956:	push   0xc000008c
1001495b:	call   DWORD PTR ds:0x10066128
10014961:	int3   
10014962:	push   ebp
10014963:	mov    ebp,esp
10014965:	push   ecx
10014966:	cmp    eax,0x64
10014969:	jge    0x10014970
1001496b:	mov    eax,0x3e8
10014970:	and    DWORD PTR [esi],0x0
10014973:	and    DWORD PTR [ebp-0x4],0x0
10014977:	push   0x2
10014979:	push   eax
1001497a:	mov    DWORD PTR [esi+0x4],eax
1001497d:	lea    eax,[ebp-0x4]
10014980:	push   eax
10014981:	call   0x10014404
10014986:	add    esp,0xc
10014989:	test   eax,eax
1001498b:	jge    0x10014991
1001498d:	xor    eax,eax
1001498f:	jmp    0x1001499a
10014991:	push   DWORD PTR [ebp-0x4]
10014994:	call   DWORD PTR ds:0x10066428
1001499a:	test   eax,eax
1001499c:	mov    DWORD PTR [esi+0x8],eax
1001499f:	je     0x100149a5
100149a1:	and    WORD PTR [eax],0x0
100149a5:	mov    eax,esi
100149a7:	leave  
100149a8:	ret    
100149a9:	push   DWORD PTR [eax+0x8]
100149ac:	call   DWORD PTR ds:0x1006642c
100149b2:	ret    
100149b3:	push   ebp
100149b4:	mov    ebp,esp
100149b6:	push   ecx
100149b7:	mov    ecx,DWORD PTR [esi]
100149b9:	lea    eax,[ecx+edi*1+0x1]
100149bd:	cmp    eax,ecx
100149bf:	push   ebx
100149c0:	jle    0x10014a51
100149c6:	cmp    eax,edi
100149c8:	jle    0x10014a51
100149ce:	cmp    eax,DWORD PTR [esi+0x4]
100149d1:	jl     0x10014a12
100149d3:	mov    ecx,DWORD PTR [esi+0x4]
100149d6:	cmp    ecx,0x3fffffff
100149dc:	jg     0x10014a51
100149de:	add    ecx,ecx
100149e0:	cmp    eax,ecx
100149e2:	mov    DWORD PTR [esi+0x4],ecx
100149e5:	jge    0x100149d3
100149e7:	mov    ebx,DWORD PTR [esi+0x8]
100149ea:	and    DWORD PTR [ebp-0x4],0x0
100149ee:	push   0x2
100149f0:	push   ecx
100149f1:	lea    eax,[ebp-0x4]
100149f4:	push   eax
100149f5:	call   0x10014404
100149fa:	add    esp,0xc
100149fd:	test   eax,eax
100149ff:	jl     0x10014a51
10014a01:	push   DWORD PTR [ebp-0x4]
10014a04:	push   ebx
10014a05:	call   DWORD PTR ds:0x10066430
10014a0b:	test   eax,eax
10014a0d:	je     0x10014a51
10014a0f:	mov    DWORD PTR [esi+0x8],eax
10014a12:	mov    eax,DWORD PTR [esi]
10014a14:	test   eax,eax
10014a16:	jl     0x10014a51
10014a18:	mov    edx,DWORD PTR [esi+0x4]
10014a1b:	cmp    eax,edx
10014a1d:	jge    0x10014a51
10014a1f:	mov    ecx,edx
10014a21:	sub    ecx,eax
10014a23:	cmp    ecx,edx
10014a25:	jg     0x10014a51
10014a27:	lea    edx,[edi+edi*1]
10014a2a:	push   edx
10014a2b:	push   DWORD PTR [ebp+0x8]
10014a2e:	add    ecx,ecx
10014a30:	push   ecx
10014a31:	mov    ecx,DWORD PTR [esi+0x8]
10014a34:	lea    eax,[ecx+eax*2]
10014a37:	push   eax
10014a38:	call   0x10014450
10014a3d:	add    DWORD PTR [esi],edi
10014a3f:	mov    eax,DWORD PTR [esi]
10014a41:	mov    ecx,DWORD PTR [esi+0x8]
10014a44:	and    WORD PTR [ecx+eax*2],0x0
10014a49:	xor    eax,eax
10014a4b:	add    esp,0x10
10014a4e:	inc    eax
10014a4f:	jmp    0x10014a53
10014a51:	xor    eax,eax
10014a53:	pop    ebx
10014a54:	leave  
10014a55:	ret    0x4
10014a58:	mov    eax,0x80004001
10014a5d:	ret    0xc
10014a60:	xor    eax,eax
10014a62:	inc    eax
10014a63:	ret    0x4
10014a66:	push   esi
10014a67:	lea    esi,[ecx+0x4]
10014a6a:	mov    eax,esi
10014a6c:	mov    DWORD PTR [ecx],0x1006fc88
10014a72:	call   0x1001490d
10014a77:	mov    eax,esi
10014a79:	call   0x1001490d
10014a7e:	call   0x100179f5
10014a83:	pop    esi
10014a84:	ret    
10014a85:	push   esi
10014a86:	mov    esi,ecx
10014a88:	call   0x10014a66
10014a8d:	test   BYTE PTR [esp+0x8],0x1
10014a92:	je     0x10014a9b
10014a94:	push   esi
10014a95:	call   0x10042f82
10014a9a:	pop    ecx
10014a9b:	mov    eax,esi
10014a9d:	pop    esi
10014a9e:	ret    0x4
10014aa1:	push   0x4
10014aa3:	mov    eax,0x10060d81
10014aa8:	call   0x10059b25
10014aad:	cmp    DWORD PTR [ebp+0xc],0x0
10014ab1:	je     0x10014ae9
10014ab3:	cmp    DWORD PTR [ebp+0x10],0x0
10014ab7:	je     0x10014ae9
10014ab9:	call   DWORD PTR ds:0x1007efec
10014abf:	and    DWORD PTR [ebp-0x10],0x0
10014ac3:	push   DWORD PTR [ebp+0x10]
10014ac6:	mov    eax,DWORD PTR [ebp+0x8]
10014ac9:	push   DWORD PTR [ebp+0xc]
10014acc:	and    DWORD PTR [ebp-0x4],0x0
10014ad0:	add    eax,0x4
10014ad3:	push   eax
10014ad4:	call   0x100147ea
10014ad9:	neg    eax
10014adb:	sbb    eax,eax
10014add:	and    eax,0x7ff8fff2
10014ae2:	add    eax,0x8007000e
10014ae7:	jmp    0x10014aee
10014ae9:	mov    eax,0x80070057
10014aee:	call   0x10059bfd
10014af3:	ret    0xc
10014af6:	push   ebp
10014af7:	sub    esp,0x404
10014afd:	lea    ebp,[esp-0x4]
10014b01:	mov    eax,ds:0x1007e030
10014b06:	xor    eax,ebp
10014b08:	mov    DWORD PTR [ebp+0x404],eax
10014b0e:	push   0x1c
10014b10:	mov    eax,0x10062b82
10014b15:	call   0x10059b58
10014b1a:	mov    eax,DWORD PTR [ebp+0x414]
10014b20:	mov    edi,ecx
10014b22:	mov    ebx,edx
10014b24:	mov    DWORD PTR [ebp-0x14],eax
10014b27:	call   DWORD PTR ds:0x1007efec
10014b2d:	xor    esi,esi
10014b2f:	mov    DWORD PTR [ebp-0x28],esi
10014b32:	mov    eax,DWORD PTR [ebp+0x410]
10014b38:	mov    DWORD PTR [ebp-0x4],esi
10014b3b:	mov    DWORD PTR [ebp-0x20],eax
10014b3e:	mov    DWORD PTR [ebp-0x24],esi
10014b41:	mov    DWORD PTR [ebp+0x0],esi
10014b44:	push   0x2
10014b46:	push   esi
10014b47:	push   edi
10014b48:	mov    BYTE PTR [ebp-0x4],0x1
10014b4c:	call   DWORD PTR ds:0x10066100
10014b52:	cmp    eax,esi
10014b54:	mov    DWORD PTR [ebp-0x18],eax
10014b57:	jne    0x10014b65
10014b59:	call   0x100067a3
10014b5e:	mov    esi,eax
10014b60:	jmp    0x10014c49
10014b65:	push   DWORD PTR [ebp-0x14]
10014b68:	push   ebx
10014b69:	push   eax
10014b6a:	call   DWORD PTR ds:0x1006607c
10014b70:	mov    edi,eax
10014b72:	cmp    edi,esi
10014b74:	jne    0x10014b80
10014b76:	call   0x100067a3
10014b7b:	jmp    0x10014c3e
10014b80:	push   edi
10014b81:	push   DWORD PTR [ebp-0x18]
10014b84:	call   DWORD PTR ds:0x10066080
10014b8a:	cmp    eax,esi
10014b8c:	mov    DWORD PTR [ebp-0x1c],eax
10014b8f:	je     0x10014b76
10014b91:	push   edi
10014b92:	push   DWORD PTR [ebp-0x18]
10014b95:	call   DWORD PTR ds:0x10066088
10014b9b:	mov    edi,eax
10014b9d:	lea    eax,[edi+0x1]
10014ba0:	cmp    eax,edi
10014ba2:	mov    DWORD PTR [ebp-0x14],edi
10014ba5:	jae    0x10014bc1
10014ba7:	lea    eax,[ebp+0x4]
10014baa:	cmp    DWORD PTR [ebp+0x0],eax
10014bad:	je     0x10014bb7
10014baf:	lea    eax,[ebp+0x0]
10014bb2:	call   0x10017bdf
10014bb7:	mov    eax,0x8007000e
10014bbc:	jmp    0x10014c5b
10014bc1:	push   0x2
10014bc3:	push   eax
10014bc4:	mov    BYTE PTR [ebp-0x4],0x2
10014bc8:	call   0x1001828e
10014bcd:	cmp    eax,0x400
10014bd2:	pop    ecx
10014bd3:	pop    ecx
10014bd4:	jbe    0x10014be2
10014bd6:	push   eax
10014bd7:	lea    eax,[ebp+0x0]
10014bda:	push   eax
10014bdb:	call   0x10017e9f
10014be0:	jmp    0x10014be8
10014be2:	lea    eax,[ebp+0x4]
10014be5:	mov    DWORD PTR [ebp+0x0],eax
10014be8:	mov    DWORD PTR [ebp-0x4],0x1
10014bef:	jmp    0x10014bfc
10014bf1:	mov    eax,0x10014bf7
10014bf6:	ret    
10014bf7:	mov    edi,DWORD PTR [ebp-0x14]
10014bfa:	xor    esi,esi
10014bfc:	mov    ebx,DWORD PTR [ebp+0x0]
10014bff:	cmp    ebx,esi
10014c01:	jne    0x10014c0a
10014c03:	mov    esi,0x8007000e
10014c08:	jmp    0x10014c40
10014c0a:	call   DWORD PTR ds:0x1007efec
10014c10:	push   edi
10014c11:	push   ebx
10014c12:	push   edi
10014c13:	push   DWORD PTR [ebp-0x1c]
10014c16:	push   esi
10014c17:	push   eax
10014c18:	call   DWORD PTR ds:0x1006608c
10014c1e:	cmp    eax,esi
10014c20:	je     0x10014b76
10014c26:	mov    ecx,DWORD PTR [ebp+0x0]
10014c29:	push   DWORD PTR [ebp+0x418]
10014c2f:	mov    WORD PTR [ecx+eax*2],si
10014c33:	push   DWORD PTR [ebp+0x0]
10014c36:	lea    ecx,[ebp-0x24]
10014c39:	call   0x1001544c
10014c3e:	mov    esi,eax
10014c40:	push   DWORD PTR [ebp-0x18]
10014c43:	call   DWORD PTR ds:0x100660fc
10014c49:	lea    eax,[ebp+0x4]
10014c4c:	cmp    DWORD PTR [ebp+0x0],eax
10014c4f:	je     0x10014c59
10014c51:	lea    eax,[ebp+0x0]
10014c54:	call   0x10017bdf
10014c59:	mov    eax,esi
10014c5b:	mov    ecx,DWORD PTR [ebp-0xc]
10014c5e:	mov    DWORD PTR fs:0x0,ecx
10014c65:	pop    ecx
10014c66:	pop    edi
10014c67:	pop    esi
10014c68:	pop    ebx
10014c69:	mov    ecx,DWORD PTR [ebp+0x404]
10014c6f:	xor    ecx,ebp
10014c71:	call   0x10042f87
10014c76:	add    ebp,0x408
10014c7c:	leave  
10014c7d:	ret    0xc
10014c80:	mov    eax,DWORD PTR [esp+0x4]
10014c84:	add    eax,0x4
10014c87:	call   0x1001490d
10014c8c:	ret    0x4
10014c8f:	push   esi
10014c90:	mov    esi,eax
10014c92:	push   edi
10014c93:	add    esi,0x4
10014c96:	xor    edi,edi
10014c98:	cmp    DWORD PTR [esi+0x8],edi
10014c9b:	jle    0x10014cb7
10014c9d:	mov    eax,DWORD PTR [esi]
10014c9f:	push   DWORD PTR [esp+0xc]
10014ca3:	mov    eax,DWORD PTR [eax+edi*4]
10014ca6:	push   eax
10014ca7:	call   DWORD PTR ds:0x10066134
10014cad:	test   eax,eax
10014caf:	je     0x10014cc3
10014cb1:	inc    edi
10014cb2:	cmp    edi,DWORD PTR [esi+0x8]
10014cb5:	jl     0x10014c9d
10014cb7:	or     eax,0xffffffff
10014cba:	cmp    eax,0xffffffff
10014cbd:	jne    0x10014cc7
10014cbf:	xor    eax,eax
10014cc1:	jmp    0x10014cd0
10014cc3:	mov    eax,edi
10014cc5:	jmp    0x10014cba
10014cc7:	mov    ecx,esi
10014cc9:	call   0x10017a1c
10014cce:	mov    eax,DWORD PTR [eax]
10014cd0:	pop    edi
10014cd1:	pop    esi
10014cd2:	ret    0x4
10014cd5:	test   BYTE PTR ds:0x10080fb0,0x1
10014cdc:	jne    0x10014d31
10014cde:	or     DWORD PTR ds:0x10080fb0,0x1
10014ce5:	mov    DWORD PTR ds:0x10080fb4,0x1006cc8c
10014cef:	mov    WORD PTR ds:0x10080fb8,0x8
10014cf8:	mov    DWORD PTR ds:0x10080fbc,0x1006cc88
10014d02:	mov    WORD PTR ds:0x10080fc0,0x4008
10014d0b:	mov    DWORD PTR ds:0x10080fc4,0x1006cc84
10014d15:	mov    WORD PTR ds:0x10080fc8,0x13
10014d1e:	mov    DWORD PTR ds:0x10080fcc,0x1006cc80
10014d28:	mov    WORD PTR ds:0x10080fd0,0x11
10014d31:	push   esi
10014d32:	xor    esi,esi
10014d34:	push   DWORD PTR [esi*8+0x10080fb4]
10014d3b:	push   DWORD PTR [esp+0xc]
10014d3f:	call   DWORD PTR ds:0x10066134
10014d45:	test   eax,eax
10014d47:	je     0x10014d53
10014d49:	inc    esi
10014d4a:	cmp    esi,0x4
10014d4d:	jl     0x10014d34
10014d4f:	xor    eax,eax
10014d51:	pop    esi
10014d52:	ret    
10014d53:	mov    ax,WORD PTR [esi*8+0x10080fb8]
10014d5b:	mov    ecx,DWORD PTR [esp+0xc]
10014d5f:	mov    WORD PTR [ecx],ax
10014d62:	xor    eax,eax
10014d64:	inc    eax
10014d65:	pop    esi
10014d66:	ret    
10014d67:	push   esi
10014d68:	xor    esi,esi
10014d6a:	test   eax,eax
10014d6c:	jne    0x10014d7e
10014d6e:	pop    esi
10014d6f:	ret    
10014d70:	cmp    cx,WORD PTR [esp+0x8]
10014d75:	je     0x10014d88
10014d77:	push   eax
10014d78:	call   DWORD PTR ds:0x10066348
10014d7e:	movzx  ecx,WORD PTR [eax]
10014d81:	test   cx,cx
10014d84:	jne    0x10014d70
10014d86:	jmp    0x10014d8a
10014d88:	mov    esi,eax
10014d8a:	mov    eax,esi
10014d8c:	pop    esi
10014d8d:	ret    
10014d8e:	mov    eax,DWORD PTR [esi]
10014d90:	movzx  ecx,WORD PTR [eax]
10014d93:	cmp    ecx,0x9
10014d96:	jl     0x10014db2
10014d98:	cmp    ecx,0xa
10014d9b:	jle    0x10014da7
10014d9d:	cmp    ecx,0xd
10014da0:	je     0x10014da7
10014da2:	cmp    ecx,0x20
10014da5:	jne    0x10014db2
10014da7:	push   eax
10014da8:	call   DWORD PTR ds:0x10066348
10014dae:	mov    DWORD PTR [esi],eax
10014db0:	jmp    0x10014d8e
10014db2:	ret    
10014db3:	push   ebp
10014db4:	mov    ebp,esp
10014db6:	push   ecx
10014db7:	push   ecx
10014db8:	push   ebx
10014db9:	push   esi
10014dba:	mov    esi,ecx
10014dbc:	mov    ebx,eax
10014dbe:	call   0x10014d8e
10014dc3:	mov    eax,DWORD PTR [esi]
10014dc5:	movzx  ecx,WORD PTR [eax]
10014dc8:	test   cx,cx
10014dcb:	jne    0x10014dd7
10014dcd:	mov    eax,0x80020009
10014dd2:	jmp    0x10014eb9
10014dd7:	cmp    cx,0x27
10014ddb:	push   edi
10014ddc:	mov    DWORD PTR [ebp-0x8],ebx
10014ddf:	jne    0x10014e60
10014de1:	mov    edi,DWORD PTR ds:0x10066348
10014de7:	push   eax
10014de8:	call   edi
10014dea:	mov    DWORD PTR [esi],eax
10014dec:	jmp    0x10014e46
10014dee:	mov    eax,DWORD PTR [esi]
10014df0:	cmp    WORD PTR [eax],0x27
10014df4:	jne    0x10014dff
10014df6:	push   eax
10014df7:	call   edi
10014df9:	cmp    WORD PTR [eax],0x27
10014dfd:	jne    0x10014e4c
10014dff:	mov    eax,DWORD PTR [esi]
10014e01:	cmp    WORD PTR [eax],0x27
10014e05:	jne    0x10014e0c
10014e07:	push   eax
10014e08:	call   edi
10014e0a:	mov    DWORD PTR [esi],eax
10014e0c:	mov    eax,DWORD PTR [esi]
10014e0e:	push   eax
10014e0f:	mov    DWORD PTR [ebp-0x4],eax
10014e12:	call   edi
10014e14:	mov    edx,DWORD PTR [ebp-0x8]
10014e17:	mov    DWORD PTR [esi],eax
10014e19:	sub    eax,DWORD PTR [ebp-0x4]
10014e1c:	add    edx,0x2000
10014e22:	sar    eax,1
10014e24:	lea    ecx,[ebx+eax*2+0x2]
10014e28:	cmp    ecx,edx
10014e2a:	jae    0x10014ebd
10014e30:	test   eax,eax
10014e32:	jle    0x10014e44
10014e34:	mov    ecx,DWORD PTR [ebp-0x4]
10014e37:	mov    dx,WORD PTR [ecx]
10014e3a:	mov    WORD PTR [ebx],dx
10014e3d:	inc    ebx
10014e3e:	inc    ebx
10014e3f:	inc    ecx
10014e40:	inc    ecx
10014e41:	dec    eax
10014e42:	jne    0x10014e37
10014e44:	mov    eax,DWORD PTR [esi]
10014e46:	cmp    WORD PTR [eax],0x0
10014e4a:	jne    0x10014dee
10014e4c:	mov    eax,DWORD PTR [esi]
10014e4e:	cmp    WORD PTR [eax],0x0
10014e52:	je     0x10014ebd
10014e54:	and    WORD PTR [ebx],0x0
10014e58:	push   DWORD PTR [esi]
10014e5a:	call   edi
10014e5c:	mov    DWORD PTR [esi],eax
10014e5e:	jmp    0x10014eb6
10014e60:	mov    eax,DWORD PTR [esi]
10014e62:	movzx  ecx,WORD PTR [eax]
10014e65:	cmp    ecx,0x9
10014e68:	jl     0x10014e79
10014e6a:	cmp    ecx,0xa
10014e6d:	jle    0x10014eb2
10014e6f:	cmp    ecx,0xd
10014e72:	je     0x10014eb2
10014e74:	cmp    ecx,0x20
10014e77:	je     0x10014eb2
10014e79:	push   eax
10014e7a:	mov    edi,eax
10014e7c:	call   DWORD PTR ds:0x10066348
10014e82:	mov    edx,DWORD PTR [ebp-0x8]
10014e85:	mov    DWORD PTR [esi],eax
10014e87:	sub    eax,edi
10014e89:	sar    eax,1
10014e8b:	lea    ecx,[ebx+eax*2+0x2]
10014e8f:	add    edx,0x2000
10014e95:	cmp    ecx,edx
10014e97:	jae    0x10014ebd
10014e99:	test   eax,eax
10014e9b:	jle    0x10014eaa
10014e9d:	mov    cx,WORD PTR [edi]
10014ea0:	mov    WORD PTR [ebx],cx
10014ea3:	inc    ebx
10014ea4:	inc    ebx
10014ea5:	inc    edi
10014ea6:	inc    edi
10014ea7:	dec    eax
10014ea8:	jne    0x10014e9d
10014eaa:	mov    eax,DWORD PTR [esi]
10014eac:	cmp    WORD PTR [eax],0x0
10014eb0:	jne    0x10014e60
10014eb2:	and    WORD PTR [ebx],0x0
10014eb6:	xor    eax,eax
10014eb8:	pop    edi
10014eb9:	pop    esi
10014eba:	pop    ebx
10014ebb:	leave  
10014ebc:	ret    
10014ebd:	mov    eax,0x80020009
10014ec2:	jmp    0x10014eb8
10014ec4:	push   ebp
10014ec5:	lea    ebp,[esp-0x2108]
10014ecc:	mov    eax,0x2108
10014ed1:	call   0x10049ed0
10014ed6:	push   0xffffffff
10014ed8:	push   0x1005fcbd
10014edd:	mov    eax,fs:0x0
10014ee3:	push   eax
10014ee4:	sub    esp,0x1c
10014ee7:	mov    eax,ds:0x1007e030
10014eec:	xor    eax,ebp
10014eee:	mov    DWORD PTR [ebp+0x2104],eax
10014ef4:	push   ebx
10014ef5:	push   esi
10014ef6:	push   edi
10014ef7:	push   eax
10014ef8:	lea    eax,[ebp-0xc]
10014efb:	mov    fs:0x0,eax
10014f01:	mov    DWORD PTR [ebp-0x10],esp
10014f04:	mov    eax,DWORD PTR [ebp+0x2110]
10014f0a:	mov    DWORD PTR [ebp-0x1c],eax
10014f0d:	mov    eax,DWORD PTR [ebp+0x2114]
10014f13:	mov    esi,ecx
10014f15:	mov    edi,edx
10014f17:	mov    DWORD PTR [ebp-0x28],eax
10014f1a:	xor    ebx,ebx
10014f1c:	lea    eax,[ebp+0x104]
10014f22:	mov    DWORD PTR [ebp-0x24],esi
10014f25:	mov    DWORD PTR [ebp-0x20],edi
10014f28:	mov    DWORD PTR [ebp-0x14],ebx
10014f2b:	call   0x10014db3
10014f30:	cmp    eax,ebx
10014f32:	jl     0x100151ed
10014f38:	lea    eax,[ebp-0x14]
10014f3b:	push   eax
10014f3c:	lea    eax,[ebp+0x104]
10014f42:	push   eax
10014f43:	call   0x10014cd5
10014f48:	test   eax,eax
10014f4a:	pop    ecx
10014f4b:	pop    ecx
10014f4c:	jne    0x10014f58
10014f4e:	mov    eax,0x80020009
10014f53:	jmp    0x100151ed
10014f58:	call   0x10014d8e
10014f5d:	lea    eax,[ebp+0x104]
10014f63:	mov    ecx,esi
10014f65:	call   0x10014db3
10014f6a:	cmp    eax,ebx
10014f6c:	jl     0x100151ed
10014f72:	movzx  eax,WORD PTR [ebp-0x14]
10014f76:	sub    eax,0x8
10014f79:	je     0x100151a6
10014f7f:	sub    eax,0x9
10014f82:	je     0x1001508c
10014f88:	dec    eax
10014f89:	dec    eax
10014f8a:	je     0x10015060
10014f90:	sub    eax,0x3ff5
10014f95:	jne    0x100151dc
10014f9b:	lea    eax,[ebp+0x104]
10014fa1:	push   eax
10014fa2:	call   DWORD PTR ds:0x100660c4
10014fa8:	inc    eax
10014fa9:	inc    eax
10014faa:	mov    DWORD PTR [ebp+0x0],ebx
10014fad:	push   0x2
10014faf:	mov    DWORD PTR [ebp-0x4],ebx
10014fb2:	push   eax
10014fb3:	mov    BYTE PTR [ebp-0x4],0x1
10014fb7:	call   0x1001828e
10014fbc:	cmp    eax,0x100
10014fc1:	pop    ecx
10014fc2:	pop    ecx
10014fc3:	jbe    0x10014fd1
10014fc5:	push   eax
10014fc6:	lea    eax,[ebp+0x0]
10014fc9:	push   eax
10014fca:	call   0x10017e9f
10014fcf:	jmp    0x10014fe1
10014fd1:	lea    eax,[ebp+0x4]
10014fd4:	mov    DWORD PTR [ebp+0x0],eax
10014fd7:	jmp    0x10014fe1
10014fd9:	mov    eax,0x10014fdf
10014fde:	ret    
10014fdf:	xor    ebx,ebx
10014fe1:	mov    esi,DWORD PTR [ebp+0x0]
10014fe4:	cmp    esi,ebx
10014fe6:	je     0x10015044
10014fe8:	cmp    WORD PTR [ebp+0x104],bx
10014fef:	lea    edi,[ebp+0x104]
10014ff5:	je     0x1001502b
10014ff7:	mov    ebx,DWORD PTR ds:0x10066348
10014ffd:	push   edi
10014ffe:	call   ebx
10015000:	movzx  ecx,WORD PTR [edi]
10015003:	cmp    cx,0x5c
10015007:	jne    0x1001501c
10015009:	cmp    WORD PTR [eax],0x30
1001500d:	jne    0x1001501c
1001500f:	and    WORD PTR [esi],0x0
10015013:	inc    esi
10015014:	push   eax
10015015:	inc    esi
10015016:	call   ebx
10015018:	mov    edi,eax
1001501a:	jmp    0x10015023
1001501c:	mov    WORD PTR [esi],cx
1001501f:	inc    esi
10015020:	inc    esi
10015021:	inc    edi
10015022:	inc    edi
10015023:	cmp    WORD PTR [edi],0x0
10015027:	jne    0x10014ffd
10015029:	xor    ebx,ebx
1001502b:	mov    WORD PTR [esi],bx
1001502e:	mov    WORD PTR [esi+0x2],bx
10015032:	push   DWORD PTR [ebp+0x0]
10015035:	push   DWORD PTR [ebp-0x1c]
10015038:	push   DWORD PTR [ebp-0x20]
1001503b:	call   0x10014648
10015040:	mov    esi,eax
10015042:	jmp    0x10015047
10015044:	push   0xe
10015046:	pop    esi
10015047:	lea    eax,[ebp+0x4]
1001504a:	cmp    DWORD PTR [ebp+0x0],eax
1001504d:	je     0x100151cf
10015053:	lea    eax,[ebp+0x0]
10015056:	call   0x10017bdf
1001505b:	jmp    0x100151cf
10015060:	call   DWORD PTR ds:0x1007efec
10015066:	lea    eax,[ebp-0x18]
10015069:	push   eax
1001506a:	push   ebx
1001506b:	push   ebx
1001506c:	lea    eax,[ebp+0x104]
10015072:	push   eax
10015073:	call   DWORD PTR ds:0x10066298
10015079:	mov    eax,DWORD PTR [ebp-0x18]
1001507c:	mov    DWORD PTR [ebp-0x14],eax
1001507f:	push   0x4
10015081:	lea    eax,[ebp-0x14]
10015084:	push   eax
10015085:	push   0x4
10015087:	jmp    0x100151c1
1001508c:	lea    eax,[ebp+0x104]
10015092:	push   eax
10015093:	call   DWORD PTR ds:0x100660c4
10015099:	test   al,0x1
1001509b:	mov    DWORD PTR [ebp-0x14],eax
1001509e:	je     0x100150aa
100150a0:	mov    eax,0x80004005
100150a5:	jmp    0x100151ed
100150aa:	cdq    
100150ab:	sub    eax,edx
100150ad:	mov    esi,eax
100150af:	sar    esi,1
100150b1:	mov    DWORD PTR [ebp-0x18],esi
100150b4:	mov    DWORD PTR [ebp+0x0],ebx
100150b7:	push   0x1
100150b9:	mov    DWORD PTR [ebp-0x4],0x3
100150c0:	push   esi
100150c1:	mov    BYTE PTR [ebp-0x4],0x4
100150c5:	call   0x1001828e
100150ca:	cmp    eax,0x100
100150cf:	pop    ecx
100150d0:	pop    ecx
100150d1:	jbe    0x100150df
100150d3:	push   eax
100150d4:	lea    eax,[ebp+0x0]
100150d7:	push   eax
100150d8:	call   0x10017e9f
100150dd:	jmp    0x100150f5
100150df:	lea    eax,[ebp+0x4]
100150e2:	mov    DWORD PTR [ebp+0x0],eax
100150e5:	jmp    0x100150f5
100150e7:	mov    eax,0x100150ed
100150ec:	ret    
100150ed:	mov    edi,DWORD PTR [ebp-0x20]
100150f0:	mov    esi,DWORD PTR [ebp-0x18]
100150f3:	xor    ebx,ebx
100150f5:	cmp    DWORD PTR [ebp+0x0],ebx
100150f8:	jne    0x1001510b
100150fa:	lea    eax,[ebp+0x4]
100150fd:	test   eax,eax
100150ff:	je     0x100150a0
10015101:	lea    eax,[ebp+0x0]
10015104:	call   0x10017bdf
10015109:	jmp    0x100150a0
1001510b:	push   esi
1001510c:	push   ebx
1001510d:	push   DWORD PTR [ebp+0x0]
10015110:	call   0x10045cf0
10015115:	add    esp,0xc
10015118:	xor    esi,esi
1001511a:	cmp    DWORD PTR [ebp-0x14],ebx
1001511d:	jle    0x1001517d
1001511f:	movzx  ecx,WORD PTR [ebp+esi*2+0x104]
10015127:	mov    eax,esi
10015129:	cdq    
1001512a:	sub    eax,edx
1001512c:	sar    eax,1
1001512e:	add    eax,DWORD PTR [ebp+0x0]
10015131:	movzx  edx,cx
10015134:	cmp    edx,0x30
10015137:	jl     0x10015161
10015139:	cmp    edx,0x39
1001513c:	jle    0x1001515a
1001513e:	cmp    edx,0x40
10015141:	jle    0x10015161
10015143:	cmp    edx,0x46
10015146:	jle    0x10015155
10015148:	add    edx,0xffffff9f
1001514b:	cmp    edx,0x5
1001514e:	ja     0x10015161
10015150:	sub    cl,0x57
10015153:	jmp    0x1001515d
10015155:	sub    cl,0x37
10015158:	jmp    0x1001515d
1001515a:	sub    cl,0x30
1001515d:	mov    dl,cl
1001515f:	jmp    0x10015163
10015161:	xor    dl,dl
10015163:	mov    edi,esi
10015165:	and    edi,0x1
10015168:	shl    edi,0x2
1001516b:	push   0x4
1001516d:	pop    ecx
1001516e:	sub    ecx,edi
10015170:	shl    dl,cl
10015172:	or     BYTE PTR [eax],dl
10015174:	inc    esi
10015175:	cmp    esi,DWORD PTR [ebp-0x14]
10015178:	jl     0x1001511f
1001517a:	mov    edi,DWORD PTR [ebp-0x20]
1001517d:	push   DWORD PTR [ebp-0x18]
10015180:	mov    eax,DWORD PTR [edi]
10015182:	push   DWORD PTR [ebp+0x0]
10015185:	push   0x3
10015187:	push   ebx
10015188:	push   DWORD PTR [ebp-0x1c]
1001518b:	push   eax
1001518c:	call   DWORD PTR ds:0x10066014
10015192:	mov    esi,eax
10015194:	lea    eax,[ebp+0x4]
10015197:	cmp    DWORD PTR [ebp+0x0],eax
1001519a:	je     0x100151cf
1001519c:	lea    eax,[ebp+0x0]
1001519f:	call   0x10017bdf
100151a4:	jmp    0x100151cf
100151a6:	lea    eax,[ebp+0x104]
100151ac:	push   eax
100151ad:	call   DWORD PTR ds:0x100660c4
100151b3:	lea    eax,[eax+eax*1+0x2]
100151b7:	push   eax
100151b8:	lea    eax,[ebp+0x104]
100151be:	push   eax
100151bf:	push   0x1
100151c1:	push   ebx
100151c2:	push   DWORD PTR [ebp-0x1c]
100151c5:	push   DWORD PTR [edi]
100151c7:	call   DWORD PTR ds:0x10066014
100151cd:	mov    esi,eax
100151cf:	cmp    esi,ebx
100151d1:	je     0x100151dc
100151d3:	mov    eax,esi
100151d5:	call   0x100144ce
100151da:	jmp    0x100151ed
100151dc:	mov    eax,DWORD PTR [ebp-0x28]
100151df:	mov    ecx,DWORD PTR [ebp-0x24]
100151e2:	call   0x10014db3
100151e7:	cmp    eax,ebx
100151e9:	jl     0x100151ed
100151eb:	xor    eax,eax
100151ed:	mov    ecx,DWORD PTR [ebp-0xc]
100151f0:	mov    DWORD PTR fs:0x0,ecx
100151f7:	pop    ecx
100151f8:	pop    edi
100151f9:	pop    esi
100151fa:	pop    ebx
100151fb:	mov    ecx,DWORD PTR [ebp+0x2104]
10015201:	xor    ecx,ebp
10015203:	call   0x10042f87
10015208:	add    ebp,0x2108
1001520e:	leave  
1001520f:	ret    0x8
10015212:	push   esi
10015213:	mov    esi,0x1006ccb8
10015218:	push   DWORD PTR [esi]
1001521a:	push   DWORD PTR [esp+0xc]
1001521e:	call   DWORD PTR ds:0x10066134
10015224:	test   eax,eax
10015226:	je     0x1001523a
10015228:	add    esi,0x4
1001522b:	cmp    esi,0x1006cce8
10015231:	jl     0x10015218
10015233:	xor    eax,eax
10015235:	inc    eax
10015236:	pop    esi
10015237:	ret    0x4
1001523a:	xor    eax,eax
1001523c:	jmp    0x10015236
1001523e:	push   ebp
1001523f:	mov    ebp,esp
10015241:	push   ecx
10015242:	xor    eax,eax
10015244:	push   eax
10015245:	push   eax
10015246:	push   eax
10015247:	push   eax
10015248:	push   eax
10015249:	push   eax
1001524a:	push   eax
1001524b:	lea    ecx,[ebp-0x4]
1001524e:	push   ecx
1001524f:	push   eax
10015250:	push   eax
10015251:	push   eax
10015252:	push   DWORD PTR [ebp+0x8]
10015255:	mov    DWORD PTR [ebp-0x4],eax
10015258:	call   DWORD PTR ds:0x10066008
1001525e:	test   eax,eax
10015260:	je     0x10015266
10015262:	xor    eax,eax
10015264:	jmp    0x1001526f
10015266:	xor    eax,eax
10015268:	cmp    eax,DWORD PTR [ebp-0x4]
1001526b:	sbb    eax,eax
1001526d:	neg    eax
1001526f:	leave  
10015270:	ret    0x4
10015273:	mov    eax,0x2004
10015278:	call   0x10049ed0
1001527d:	mov    eax,ds:0x1007e030
10015282:	xor    eax,esp
10015284:	mov    DWORD PTR [esp+0x2000],eax
1001528b:	cmp    WORD PTR [edi],0x3d
1001528f:	push   esi
10015290:	mov    esi,ecx
10015292:	jne    0x100152c0
10015294:	mov    eax,edi
10015296:	call   0x10014db3
1001529b:	test   eax,eax
1001529d:	jl     0x100152c2
1001529f:	call   0x10014d8e
100152a4:	lea    eax,[esp+0x4]
100152a8:	mov    ecx,esi
100152aa:	call   0x10014db3
100152af:	test   eax,eax
100152b1:	jl     0x100152c2
100152b3:	mov    eax,edi
100152b5:	mov    ecx,esi
100152b7:	call   0x10014db3
100152bc:	test   eax,eax
100152be:	jl     0x100152c2
100152c0:	xor    eax,eax
100152c2:	mov    ecx,DWORD PTR [esp+0x2004]
100152c9:	pop    esi
100152ca:	xor    ecx,esp
100152cc:	call   0x10042f87
100152d1:	add    esp,0x2004
100152d7:	ret    
100152d8:	push   0x60
100152da:	mov    eax,0x10061e43
100152df:	call   0x10059b8e
100152e4:	mov    eax,DWORD PTR [ebp+0x8]
100152e7:	test   eax,eax
100152e9:	mov    edi,ecx
100152eb:	mov    DWORD PTR [ebp-0x54],eax
100152ee:	mov    DWORD PTR [ebp-0x64],edi
100152f1:	je     0x1001543f
100152f7:	test   edi,edi
100152f9:	je     0x1001543f
100152ff:	and    DWORD PTR [edi],0x0
10015302:	push   eax
10015303:	call   DWORD PTR ds:0x100660c4
10015309:	add    eax,eax
1001530b:	lea    esi,[ebp-0x60]
1001530e:	call   0x10014962
10015313:	xor    ecx,ecx
10015315:	mov    DWORD PTR [ebp-0x4],ecx
10015318:	cmp    DWORD PTR [ebp-0x58],ecx
1001531b:	jne    0x1001532e
1001531d:	push   ecx
1001531e:	call   DWORD PTR ds:0x1006642c
10015324:	mov    eax,0x8007000e
10015329:	jmp    0x10015444
1001532e:	mov    eax,DWORD PTR [ebp-0x54]
10015331:	mov    DWORD PTR [ebx],eax
10015333:	cmp    WORD PTR [eax],cx
10015336:	mov    DWORD PTR [ebp-0x54],ecx
10015339:	je     0x10015379
1001533b:	mov    eax,DWORD PTR [ebx]
1001533d:	cmp    WORD PTR [eax],0x25
10015341:	push   eax
10015342:	jne    0x10015353
10015344:	call   DWORD PTR ds:0x10066348
1001534a:	mov    DWORD PTR [ebx],eax
1001534c:	cmp    WORD PTR [eax],0x25
10015350:	jne    0x10015393
10015352:	push   eax
10015353:	xor    edi,edi
10015355:	inc    edi
10015356:	lea    esi,[ebp-0x60]
10015359:	call   0x100149b3
1001535e:	test   eax,eax
10015360:	je     0x10015433
10015366:	push   DWORD PTR [ebx]
10015368:	call   DWORD PTR ds:0x10066348
1001536e:	mov    DWORD PTR [ebx],eax
10015370:	cmp    WORD PTR [eax],0x0
10015374:	jne    0x1001533b
10015376:	mov    edi,DWORD PTR [ebp-0x64]
10015379:	mov    eax,DWORD PTR [ebp-0x58]
1001537c:	and    DWORD PTR [ebp-0x58],0x0
10015380:	mov    DWORD PTR [edi],eax
10015382:	push   DWORD PTR [ebp-0x58]
10015385:	call   DWORD PTR ds:0x1006642c
1001538b:	mov    eax,DWORD PTR [ebp-0x54]
1001538e:	jmp    0x10015444
10015393:	push   0x25
10015395:	call   0x10014d67
1001539a:	test   eax,eax
1001539c:	pop    ecx
1001539d:	mov    DWORD PTR [ebp-0x68],eax
100153a0:	je     0x1001541b
100153a2:	mov    ecx,DWORD PTR [ebx]
100153a4:	sub    eax,ecx
100153a6:	sar    eax,1
100153a8:	cmp    eax,0x1f
100153ab:	jg     0x10015427
100153ad:	push   eax
100153ae:	push   ecx
100153af:	lea    eax,[ebp-0x50]
100153b2:	push   0x20
100153b4:	push   eax
100153b5:	call   0x10045f4d
100153ba:	push   eax
100153bb:	call   0x10001f4b
100153c0:	add    esp,0x14
100153c3:	lea    eax,[ebp-0x50]
100153c6:	push   eax
100153c7:	mov    eax,DWORD PTR [ebx+0x4]
100153ca:	call   0x10014c8f
100153cf:	mov    esi,eax
100153d1:	test   esi,esi
100153d3:	je     0x1001541b
100153d5:	call   DWORD PTR ds:0x1007efec
100153db:	and    DWORD PTR [ebp-0x6c],0x0
100153df:	push   esi
100153e0:	mov    BYTE PTR [ebp-0x4],0x1
100153e4:	call   DWORD PTR ds:0x100660c4
100153ea:	push   esi
100153eb:	mov    edi,eax
100153ed:	lea    esi,[ebp-0x60]
100153f0:	call   0x100149b3
100153f5:	test   eax,eax
100153f7:	mov    BYTE PTR [ebp-0x4],0x0
100153fb:	je     0x10015433
100153fd:	mov    esi,DWORD PTR [ebp-0x68]
10015400:	cmp    DWORD PTR [ebx],esi
10015402:	je     0x10015366
10015408:	push   DWORD PTR [ebx]
1001540a:	call   DWORD PTR ds:0x10066348
10015410:	cmp    eax,esi
10015412:	mov    DWORD PTR [ebx],eax
10015414:	jne    0x10015408
10015416:	jmp    0x10015366
1001541b:	mov    DWORD PTR [ebp-0x54],0x80020009
10015422:	jmp    0x10015382
10015427:	mov    DWORD PTR [ebp-0x54],0x80004005
1001542e:	jmp    0x10015382
10015433:	mov    DWORD PTR [ebp-0x54],0x8007000e
1001543a:	jmp    0x10015382
1001543f:	mov    eax,0x80004003
10015444:	call   0x10059c11
10015449:	ret    0x4
1001544c:	push   ebp
1001544d:	lea    ebp,[esp-0x1f8c]
10015454:	mov    eax,0x200c
10015459:	call   0x10049ed0
1001545e:	mov    eax,ds:0x1007e030
10015463:	xor    eax,ebp
10015465:	mov    DWORD PTR [ebp+0x1f88],eax
1001546b:	mov    eax,DWORD PTR [ebp+0x1f94]
10015471:	push   ebx
10015472:	push   esi
10015473:	push   edi
10015474:	mov    esi,ecx
10015476:	xor    edi,edi
10015478:	push   eax
10015479:	lea    ecx,[ebp-0x80]
1001547c:	mov    ebx,esi
1001547e:	mov    DWORD PTR [ebp-0x80],edi
10015481:	call   0x100152d8
10015486:	mov    ebx,eax
10015488:	cmp    ebx,edi
1001548a:	jl     0x10015569
10015490:	mov    eax,DWORD PTR [ebp-0x80]
10015493:	mov    DWORD PTR [esi],eax
10015495:	jmp    0x10015538
1001549a:	lea    eax,[ebp-0x78]
1001549d:	mov    ecx,esi
1001549f:	call   0x10014db3
100154a4:	mov    ebx,eax
100154a6:	cmp    ebx,edi
100154a8:	jl     0x1001555e
100154ae:	xor    ebx,ebx
100154b0:	push   DWORD PTR [ebx*8+0x1006f5e8]
100154b7:	lea    eax,[ebp-0x78]
100154ba:	push   eax
100154bb:	call   DWORD PTR ds:0x10066134
100154c1:	test   eax,eax
100154c3:	je     0x10015514
100154c5:	inc    ebx
100154c6:	cmp    ebx,0xe
100154c9:	jl     0x100154b0
100154cb:	mov    DWORD PTR [ebp-0x7c],edi
100154ce:	cmp    DWORD PTR [ebp-0x7c],edi
100154d1:	je     0x10015543
100154d3:	lea    eax,[ebp-0x78]
100154d6:	mov    ecx,esi
100154d8:	call   0x10014db3
100154dd:	mov    ebx,eax
100154df:	cmp    ebx,edi
100154e1:	jl     0x1001555e
100154e3:	cmp    WORD PTR [ebp-0x78],0x7b
100154e8:	jne    0x10015543
100154ea:	cmp    DWORD PTR [ebp+0x1f98],edi
100154f0:	lea    eax,[ebp-0x78]
100154f3:	mov    ecx,esi
100154f5:	je     0x10015520
100154f7:	mov    edi,DWORD PTR [esi]
100154f9:	push   0x0
100154fb:	push   DWORD PTR [ebp+0x1f98]
10015501:	push   DWORD PTR [ebp-0x7c]
10015504:	push   eax
10015505:	call   0x10015583
1001550a:	mov    ebx,eax
1001550c:	test   ebx,ebx
1001550e:	jl     0x1001554a
10015510:	xor    edi,edi
10015512:	jmp    0x10015531
10015514:	mov    eax,DWORD PTR [ebx*8+0x1006f5ec]
1001551b:	mov    DWORD PTR [ebp-0x7c],eax
1001551e:	jmp    0x100154ce
10015520:	push   edi
10015521:	push   edi
10015522:	push   DWORD PTR [ebp-0x7c]
10015525:	push   eax
10015526:	call   0x10015583
1001552b:	mov    ebx,eax
1001552d:	cmp    ebx,edi
1001552f:	jl     0x1001555e
10015531:	call   0x10014d8e
10015536:	mov    eax,DWORD PTR [esi]
10015538:	cmp    WORD PTR [eax],di
1001553b:	jne    0x1001549a
10015541:	jmp    0x1001555e
10015543:	mov    ebx,0x80020009
10015548:	jmp    0x1001555e
1001554a:	push   0x0
1001554c:	push   0x0
1001554e:	push   DWORD PTR [ebp-0x7c]
10015551:	lea    eax,[ebp-0x78]
10015554:	push   eax
10015555:	mov    ecx,esi
10015557:	mov    DWORD PTR [esi],edi
10015559:	call   0x10015583
1001555e:	push   DWORD PTR [ebp-0x80]
10015561:	call   DWORD PTR ds:0x1006642c
10015567:	mov    eax,ebx
10015569:	mov    ecx,DWORD PTR [ebp+0x1f88]
1001556f:	pop    edi
10015570:	pop    esi
10015571:	xor    ecx,ebp
10015573:	pop    ebx
10015574:	call   0x10042f87
10015579:	add    ebp,0x1f8c
1001557f:	leave  
10015580:	ret    0x8
10015583:	push   ebp
10015584:	mov    ebp,esp
10015586:	and    esp,0xfffffff8
10015589:	push   0xffffffff
1001558b:	push   0x100603a5
10015590:	mov    eax,fs:0x0
10015596:	push   eax
10015597:	sub    esp,0x438
1001559d:	mov    eax,ds:0x1007e030
100155a2:	xor    eax,esp
100155a4:	mov    DWORD PTR [esp+0x430],eax
100155ab:	push   ebx
100155ac:	push   esi
100155ad:	push   edi
100155ae:	mov    eax,ds:0x1007e030
100155b3:	xor    eax,esp
100155b5:	push   eax
100155b6:	lea    eax,[esp+0x448]
100155bd:	mov    fs:0x0,eax
100155c3:	mov    eax,DWORD PTR [ebp+0xc]
100155c6:	mov    edi,DWORD PTR [ebp+0x8]
100155c9:	and    DWORD PTR [esp+0x10],0x0
100155ce:	mov    DWORD PTR [esp+0x18],ecx
100155d2:	mov    DWORD PTR [esp+0x1c],eax
100155d6:	mov    eax,DWORD PTR [ebp+0x14]
100155d9:	and    DWORD PTR [esp+0x450],0x0
100155e1:	mov    DWORD PTR [esp+0x24],eax
100155e5:	mov    eax,edi
100155e7:	call   0x10014db3
100155ec:	mov    esi,eax
100155ee:	test   esi,esi
100155f0:	jl     0x10015a48
100155f6:	cmp    WORD PTR [edi],0x7d
100155fa:	je     0x10015a46
10015600:	mov    esi,DWORD PTR ds:0x10066134
10015606:	push   0x1006cc3c
1001560b:	push   edi
1001560c:	mov    DWORD PTR [esp+0x28],0x1
10015614:	call   esi
10015616:	mov    ebx,eax
10015618:	neg    ebx
1001561a:	push   0x1006cc60
1001561f:	sbb    ebx,ebx
10015621:	push   edi
10015622:	inc    ebx
10015623:	call   esi
10015625:	test   eax,eax
10015627:	je     0x10015631
10015629:	test   ebx,ebx
1001562b:	je     0x100156fd
10015631:	mov    ecx,DWORD PTR [esp+0x18]
10015635:	mov    eax,edi
10015637:	call   0x10014db3
1001563c:	mov    esi,eax
1001563e:	test   esi,esi
10015640:	jl     0x10015a35
10015646:	cmp    DWORD PTR [ebp+0x10],0x0
1001564a:	je     0x100156fd
10015650:	push   0x5c
10015652:	mov    eax,edi
10015654:	call   0x10014d67
10015659:	test   eax,eax
1001565b:	pop    ecx
1001565c:	jne    0x10015b0b
10015662:	push   edi
10015663:	call   0x10015212
10015668:	test   eax,eax
1001566a:	je     0x1001567e
1001566c:	mov    eax,DWORD PTR [esp+0x1c]
10015670:	push   edi
10015671:	lea    ecx,[esp+0x18]
10015675:	mov    DWORD PTR [esp+0x18],eax
10015679:	call   0x10014692
1001567e:	test   ebx,ebx
10015680:	je     0x100156fd
10015682:	mov    ecx,DWORD PTR [esp+0x18]
10015686:	mov    eax,edi
10015688:	call   0x10014db3
1001568d:	mov    esi,eax
1001568f:	test   esi,esi
10015691:	jl     0x10015a35
10015697:	mov    ecx,DWORD PTR [esp+0x18]
1001569b:	call   0x10015273
100156a0:	mov    esi,eax
100156a2:	test   esi,esi
100156a4:	jl     0x10015a35
100156aa:	cmp    WORD PTR [edi],0x7b
100156ae:	jne    0x100156ee
100156b0:	push   edi
100156b1:	call   DWORD PTR ds:0x100660c4
100156b7:	cmp    eax,0x1
100156ba:	jne    0x100156ee
100156bc:	mov    ecx,DWORD PTR [esp+0x18]
100156c0:	push   0x0
100156c2:	push   DWORD PTR [ebp+0x10]
100156c5:	push   DWORD PTR [esp+0x18]
100156c9:	push   edi
100156ca:	call   0x10015583
100156cf:	mov    esi,eax
100156d1:	test   esi,esi
100156d3:	jl     0x10015a35
100156d9:	mov    ecx,DWORD PTR [esp+0x18]
100156dd:	mov    eax,edi
100156df:	call   0x10014db3
100156e4:	mov    esi,eax
100156e6:	test   esi,esi
100156e8:	jl     0x10015a35
100156ee:	cmp    WORD PTR [edi],0x7d
100156f2:	jne    0x10015600
100156f8:	jmp    0x10015a35
100156fd:	push   0x1006cc4c
10015702:	push   edi
10015703:	call   DWORD PTR ds:0x10066134
10015709:	test   eax,eax
1001570b:	jne    0x10015726
1001570d:	and    DWORD PTR [esp+0x20],eax
10015711:	mov    ecx,DWORD PTR [esp+0x18]
10015715:	mov    eax,edi
10015717:	call   0x10014db3
1001571c:	mov    esi,eax
1001571e:	test   esi,esi
10015720:	jl     0x10015a35
10015726:	push   0x1006cc78
1001572b:	push   edi
1001572c:	xor    ebx,ebx
1001572e:	call   DWORD PTR ds:0x10066134
10015734:	test   eax,eax
10015736:	jne    0x10015822
1001573c:	mov    ecx,DWORD PTR [esp+0x18]
10015740:	lea    eax,[esp+0x234]
10015747:	call   0x10014db3
1001574c:	mov    esi,eax
1001574e:	test   esi,esi
10015750:	jl     0x10015a35
10015756:	mov    ecx,DWORD PTR [esp+0x18]
1001575a:	mov    eax,edi
1001575c:	call   0x10014db3
10015761:	mov    esi,eax
10015763:	test   esi,esi
10015765:	jl     0x10015a35
1001576b:	cmp    WORD PTR [edi],0x3d
1001576f:	jne    0x10015b0b
10015775:	cmp    DWORD PTR [ebp+0x10],ebx
10015778:	je     0x100157b6
1001577a:	mov    eax,DWORD PTR [esp+0x1c]
1001577e:	mov    ecx,DWORD PTR [esp+0x18]
10015782:	mov    BYTE PTR [esp+0x450],0x1
1001578a:	mov    DWORD PTR [esp+0x14],eax
1001578e:	push   edi
1001578f:	lea    eax,[esp+0x238]
10015796:	push   eax
10015797:	lea    edx,[esp+0x1c]
1001579b:	call   0x10014ec4
100157a0:	mov    esi,eax
100157a2:	cmp    esi,ebx
100157a4:	jl     0x10015b26
100157aa:	mov    BYTE PTR [esp+0x450],bl
100157b1:	jmp    0x100156aa
100157b6:	cmp    DWORD PTR [ebp+0x14],ebx
100157b9:	jne    0x10015810
100157bb:	cmp    DWORD PTR [esp+0x20],ebx
100157bf:	je     0x10015810
100157c1:	lea    eax,[esp+0x14]
100157c5:	push   eax
100157c6:	push   0x20006
100157cb:	push   ebx
100157cc:	push   ebx
100157cd:	push   DWORD PTR [esp+0x2c]
100157d1:	mov    DWORD PTR [esp+0x28],ebx
100157d5:	call   DWORD PTR ds:0x10066020
100157db:	cmp    eax,ebx
100157dd:	jne    0x10015a2e
100157e3:	mov    ebx,DWORD PTR [esp+0x14]
100157e7:	lea    eax,[esp+0x234]
100157ee:	push   eax
100157ef:	push   ebx
100157f0:	call   DWORD PTR ds:0x10066010
100157f6:	test   eax,eax
100157f8:	je     0x10015803
100157fa:	cmp    eax,0x2
100157fd:	jne    0x10015b2f
10015803:	test   ebx,ebx
10015805:	je     0x1001580e
10015807:	push   ebx
10015808:	call   DWORD PTR ds:0x10066018
1001580e:	xor    ebx,ebx
10015810:	mov    ecx,DWORD PTR [esp+0x18]
10015814:	call   0x10015273
10015819:	mov    esi,eax
1001581b:	cmp    esi,ebx
1001581d:	jmp    0x100156e8
10015822:	push   0x5c
10015824:	mov    eax,edi
10015826:	call   0x10014d67
1001582b:	test   eax,eax
1001582d:	pop    ecx
1001582e:	jne    0x10015b4a
10015834:	cmp    DWORD PTR [ebp+0x10],ebx
10015837:	je     0x10015935
1001583d:	mov    esi,DWORD PTR ds:0x10066020
10015843:	lea    eax,[esp+0x14]
10015847:	push   eax
10015848:	push   0x2001f
1001584d:	push   ebx
1001584e:	push   edi
1001584f:	push   DWORD PTR [esp+0x2c]
10015853:	mov    DWORD PTR [esp+0x28],ebx
10015857:	call   esi
10015859:	cmp    eax,ebx
1001585b:	jne    0x10015881
1001585d:	xor    eax,eax
1001585f:	cmp    DWORD PTR [esp+0x10],ebx
10015863:	je     0x1001586f
10015865:	push   DWORD PTR [esp+0x10]
10015869:	call   DWORD PTR ds:0x10066018
1001586f:	test   eax,eax
10015871:	mov    ebx,DWORD PTR [esp+0x14]
10015875:	mov    DWORD PTR [esp+0x10],ebx
10015879:	je     0x10015901
1001587f:	jmp    0x10015885
10015881:	mov    ebx,DWORD PTR [esp+0x10]
10015885:	and    DWORD PTR [esp+0x14],0x0
1001588a:	lea    eax,[esp+0x14]
1001588e:	push   eax
1001588f:	push   0x20019
10015894:	push   0x0
10015896:	push   edi
10015897:	push   DWORD PTR [esp+0x2c]
1001589b:	call   esi
1001589d:	xor    esi,esi
1001589f:	test   eax,eax
100158a1:	jne    0x100158ba
100158a3:	cmp    ebx,esi
100158a5:	je     0x100158ae
100158a7:	push   ebx
100158a8:	call   DWORD PTR ds:0x10066018
100158ae:	cmp    eax,esi
100158b0:	mov    ebx,DWORD PTR [esp+0x14]
100158b4:	mov    DWORD PTR [esp+0x10],ebx
100158b8:	je     0x10015901
100158ba:	lea    eax,[esp+0x28]
100158be:	push   eax
100158bf:	lea    eax,[esp+0x18]
100158c3:	push   eax
100158c4:	push   esi
100158c5:	push   0x2001f
100158ca:	push   esi
100158cb:	push   esi
100158cc:	push   esi
100158cd:	push   edi
100158ce:	push   DWORD PTR [esp+0x3c]
100158d2:	mov    DWORD PTR [esp+0x38],esi
100158d6:	call   DWORD PTR ds:0x10066004
100158dc:	cmp    eax,esi
100158de:	jne    0x10015b50
100158e4:	xor    eax,eax
100158e6:	cmp    ebx,esi
100158e8:	je     0x100158f1
100158ea:	push   ebx
100158eb:	call   DWORD PTR ds:0x10066018
100158f1:	cmp    eax,esi
100158f3:	mov    ebx,DWORD PTR [esp+0x14]
100158f7:	mov    DWORD PTR [esp+0x10],ebx
100158fb:	jne    0x10015b50
10015901:	mov    ecx,DWORD PTR [esp+0x18]
10015905:	mov    eax,edi
10015907:	call   0x10014db3
1001590c:	mov    esi,eax
1001590e:	test   esi,esi
10015910:	jl     0x10015a35
10015916:	cmp    WORD PTR [edi],0x3d
1001591a:	jne    0x100156aa
10015920:	mov    ecx,DWORD PTR [esp+0x18]
10015924:	push   edi
10015925:	push   0x0
10015927:	lea    edx,[esp+0x18]
1001592b:	call   0x10014ec4
10015930:	jmp    0x100156a0
10015935:	cmp    DWORD PTR [ebp+0x14],ebx
10015938:	jne    0x10015978
1001593a:	lea    eax,[esp+0x14]
1001593e:	push   eax
1001593f:	push   0x20019
10015944:	push   ebx
10015945:	push   edi
10015946:	push   DWORD PTR [esp+0x2c]
1001594a:	mov    DWORD PTR [esp+0x28],ebx
1001594e:	call   DWORD PTR ds:0x10066020
10015954:	cmp    eax,ebx
10015956:	jne    0x10015972
10015958:	xor    eax,eax
1001595a:	cmp    DWORD PTR [esp+0x10],ebx
1001595e:	je     0x1001596a
10015960:	push   DWORD PTR [esp+0x10]
10015964:	call   DWORD PTR ds:0x10066018
1001596a:	mov    ecx,DWORD PTR [esp+0x14]
1001596e:	mov    DWORD PTR [esp+0x10],ecx
10015972:	mov    DWORD PTR [esp+0x14],eax
10015976:	jmp    0x10015980
10015978:	mov    DWORD PTR [esp+0x14],0x2
10015980:	cmp    DWORD PTR [esp+0x14],ebx
10015984:	je     0x1001598d
10015986:	mov    DWORD PTR [ebp+0x14],0x1
1001598d:	push   0xffffffff
1001598f:	push   edi
10015990:	lea    eax,[esp+0x34]
10015994:	push   0x104
10015999:	push   eax
1001599a:	call   0x10045f4d
1001599f:	push   eax
100159a0:	call   0x10001f4b
100159a5:	mov    ecx,DWORD PTR [esp+0x2c]
100159a9:	add    esp,0x14
100159ac:	mov    eax,edi
100159ae:	call   0x10014db3
100159b3:	mov    esi,eax
100159b5:	test   esi,esi
100159b7:	jl     0x10015a35
100159b9:	mov    ecx,DWORD PTR [esp+0x18]
100159bd:	call   0x10015273
100159c2:	mov    esi,eax
100159c4:	test   esi,esi
100159c6:	jl     0x10015a35
100159c8:	cmp    WORD PTR [edi],0x7b
100159cc:	jne    0x10015a0a
100159ce:	push   edi
100159cf:	call   DWORD PTR ds:0x100660c4
100159d5:	cmp    eax,0x1
100159d8:	jne    0x10015a0a
100159da:	push   DWORD PTR [ebp+0x14]
100159dd:	mov    ecx,DWORD PTR [esp+0x1c]
100159e1:	push   0x0
100159e3:	push   DWORD PTR [esp+0x18]
100159e7:	push   edi
100159e8:	call   0x10015583
100159ed:	mov    esi,eax
100159ef:	test   esi,esi
100159f1:	jge    0x100159f9
100159f3:	cmp    DWORD PTR [ebp+0x14],0x0
100159f7:	je     0x10015a35
100159f9:	mov    ecx,DWORD PTR [esp+0x18]
100159fd:	mov    eax,edi
100159ff:	call   0x10014db3
10015a04:	mov    esi,eax
10015a06:	test   esi,esi
10015a08:	jl     0x10015a35
10015a0a:	mov    eax,DWORD PTR [esp+0x24]
10015a0e:	mov    DWORD PTR [ebp+0x14],eax
10015a11:	mov    eax,DWORD PTR [esp+0x14]
10015a15:	cmp    eax,0x2
10015a18:	je     0x100156ee
10015a1e:	xor    ebx,ebx
10015a20:	cmp    eax,ebx
10015a22:	je     0x10015a6e
10015a24:	cmp    DWORD PTR [esp+0x24],ebx
10015a28:	jne    0x100156ee
10015a2e:	call   0x100144ce
10015a33:	mov    esi,eax
10015a35:	cmp    DWORD PTR [esp+0x10],0x0
10015a3a:	je     0x10015a46
10015a3c:	push   DWORD PTR [esp+0x10]
10015a40:	call   DWORD PTR ds:0x10066018
10015a46:	mov    eax,esi
10015a48:	mov    ecx,DWORD PTR [esp+0x448]
10015a4f:	mov    DWORD PTR fs:0x0,ecx
10015a56:	pop    ecx
10015a57:	pop    edi
10015a58:	pop    esi
10015a59:	pop    ebx
10015a5a:	mov    ecx,DWORD PTR [esp+0x430]
10015a61:	xor    ecx,esp
10015a63:	call   0x10042f87
10015a68:	mov    esp,ebp
10015a6a:	pop    ebp
10015a6b:	ret    0x10
10015a6e:	cmp    DWORD PTR [esp+0x24],ebx
10015a72:	je     0x10015ab1
10015a74:	push   DWORD PTR [esp+0x10]
10015a78:	call   0x1001523e
10015a7d:	test   eax,eax
10015a7f:	je     0x10015ab1
10015a81:	lea    eax,[esp+0x2c]
10015a85:	push   eax
10015a86:	call   0x10015212
10015a8b:	test   eax,eax
10015a8d:	je     0x100156ee
10015a93:	cmp    DWORD PTR [esp+0x20],0x0
10015a98:	je     0x100156ee
10015a9e:	lea    eax,[esp+0x2c]
10015aa2:	push   eax
10015aa3:	lea    ecx,[esp+0x14]
10015aa7:	call   0x10014692
10015aac:	jmp    0x100156ee
10015ab1:	push   DWORD PTR [esp+0x10]
10015ab5:	call   0x1001523e
10015aba:	cmp    DWORD PTR [esp+0x10],ebx
10015abe:	mov    DWORD PTR [esp+0x14],eax
10015ac2:	je     0x10015ada
10015ac4:	push   DWORD PTR [esp+0x10]
10015ac8:	call   DWORD PTR ds:0x10066018
10015ace:	cmp    eax,ebx
10015ad0:	mov    DWORD PTR [esp+0x10],ebx
10015ad4:	jne    0x10015b69
10015ada:	cmp    DWORD PTR [esp+0x20],ebx
10015ade:	je     0x100156ee
10015ae4:	cmp    DWORD PTR [esp+0x14],0x0
10015ae9:	jne    0x100156ee
10015aef:	lea    eax,[esp+0x2c]
10015af3:	push   eax
10015af4:	push   DWORD PTR [esp+0x20]
10015af8:	call   DWORD PTR ds:0x1006600c
10015afe:	test   eax,eax
10015b00:	jne    0x10015a2e
10015b06:	jmp    0x100156ee
10015b0b:	cmp    DWORD PTR [esp+0x10],0x0
10015b10:	je     0x10015b1c
10015b12:	push   DWORD PTR [esp+0x10]
10015b16:	call   DWORD PTR ds:0x10066018
10015b1c:	mov    eax,0x80020009
10015b21:	jmp    0x10015a48
10015b26:	cmp    DWORD PTR [esp+0x10],ebx
10015b2a:	jmp    0x10015a3a
10015b2f:	call   0x100144ce
10015b34:	test   ebx,ebx
10015b36:	mov    esi,eax
10015b38:	je     0x10015a35
10015b3e:	push   ebx
10015b3f:	call   DWORD PTR ds:0x10066018
10015b45:	jmp    0x10015a35
10015b4a:	cmp    DWORD PTR [esp+0x10],ebx
10015b4e:	jmp    0x10015b10
10015b50:	call   0x100144ce
10015b55:	cmp    ebx,esi
10015b57:	mov    edi,eax
10015b59:	je     0x10015b62
10015b5b:	push   ebx
10015b5c:	call   DWORD PTR ds:0x10066018
10015b62:	mov    eax,edi
10015b64:	jmp    0x10015a48
10015b69:	call   0x100144ce
10015b6e:	jmp    0x10015a48
10015b73:	push   ebp
10015b74:	lea    ebp,[esp-0x9cc]
10015b7b:	sub    esp,0xa4c
10015b81:	mov    eax,ds:0x1007e030
10015b86:	xor    eax,ebp
10015b88:	mov    DWORD PTR [ebp+0x9c8],eax
10015b8e:	mov    eax,DWORD PTR [ebp+0x9d4]
10015b94:	push   ebx
10015b95:	push   esi
10015b96:	push   edi
10015b97:	xor    edi,edi
10015b99:	mov    esi,edx
10015b9b:	cmp    esi,edi
10015b9d:	mov    ebx,ecx
10015b9f:	mov    DWORD PTR [ebp-0x6c],eax
10015ba2:	mov    DWORD PTR [ebp-0x80],0x1006fc88
10015ba9:	mov    DWORD PTR [ebp-0x7c],edi
10015bac:	mov    DWORD PTR [ebp-0x78],edi
10015baf:	mov    DWORD PTR [ebp-0x74],edi
10015bb2:	je     0x10015bcc
10015bb4:	jmp    0x10015bc6
10015bb6:	push   DWORD PTR [esi+0x4]
10015bb9:	push   eax
10015bba:	lea    eax,[ebp-0x80]
10015bbd:	push   eax
10015bbe:	call   0x10014aa1
10015bc3:	add    esi,0x8
10015bc6:	mov    eax,DWORD PTR [esi]
10015bc8:	cmp    eax,edi
10015bca:	jne    0x10015bb6
10015bcc:	mov    eax,DWORD PTR [ebx]
10015bce:	lea    ecx,[ebp-0x80]
10015bd1:	push   ecx
10015bd2:	mov    ecx,ebx
10015bd4:	call   DWORD PTR [eax+0x14]
10015bd7:	cmp    eax,edi
10015bd9:	jge    0x10015c01
10015bdb:	mov    esi,eax
10015bdd:	lea    ecx,[ebp-0x80]
10015be0:	call   0x10014a66
10015be5:	mov    ecx,DWORD PTR [ebp+0x9c8]
10015beb:	pop    edi
10015bec:	mov    eax,esi
10015bee:	pop    esi
10015bef:	xor    ecx,ebp
10015bf1:	pop    ebx
10015bf2:	call   0x10042f87
10015bf7:	add    ebp,0x9cc
10015bfd:	leave  
10015bfe:	ret    0x8
10015c01:	call   DWORD PTR ds:0x1007efec
10015c07:	mov    ebx,DWORD PTR ds:0x10080a04
10015c0d:	mov    esi,0x104
10015c12:	push   esi
10015c13:	lea    eax,[ebp+0x7c0]
10015c19:	push   eax
10015c1a:	push   ebx
10015c1b:	call   DWORD PTR ds:0x10066124
10015c21:	cmp    eax,edi
10015c23:	jne    0x10015c2c
10015c25:	call   0x100067a3
10015c2a:	jmp    0x10015bdb
10015c2c:	cmp    eax,esi
10015c2e:	jne    0x10015c37
10015c30:	mov    esi,0x8007007a
10015c35:	jmp    0x10015bdd
10015c37:	lea    edx,[ebp+0x7c0]
10015c3d:	mov    ecx,0x208
10015c42:	lea    eax,[ebp-0x68]
10015c45:	call   0x100145a7
10015c4a:	cmp    ebx,edi
10015c4c:	je     0x10015c5e
10015c4e:	push   edi
10015c4f:	call   DWORD PTR ds:0x10066114
10015c55:	cmp    ebx,eax
10015c57:	je     0x10015c5e
10015c59:	lea    eax,[ebp-0x68]
10015c5c:	jmp    0x10015cb4
10015c5e:	lea    eax,[ebp-0x68]
10015c61:	push   eax
10015c62:	lea    eax,[ebp+0x3aa]
10015c68:	push   0x20b
10015c6d:	push   eax
10015c6e:	mov    WORD PTR [ebp+0x3a8],0x22
10015c77:	call   0x10014424
10015c7c:	add    esp,0xc
10015c7f:	test   al,al
10015c81:	jne    0x10015c8d
10015c83:	mov    esi,0x80004005
10015c88:	jmp    0x10015bdd
10015c8d:	lea    eax,[ebp+0x3a8]
10015c93:	push   eax
10015c94:	call   DWORD PTR ds:0x100660c4
10015c9a:	add    eax,eax
10015c9c:	mov    WORD PTR [ebp+eax*1+0x3a8],0x22
10015ca6:	mov    WORD PTR [ebp+eax*1+0x3aa],di
10015cae:	lea    eax,[ebp+0x3a8]
10015cb4:	push   eax
10015cb5:	push   0x1006f658
10015cba:	lea    eax,[ebp-0x80]
10015cbd:	push   eax
10015cbe:	call   0x10014aa1
10015cc3:	cmp    eax,edi
10015cc5:	jl     0x10015bdb
10015ccb:	lea    eax,[ebp-0x68]
10015cce:	push   eax
10015ccf:	push   0x1006f668
10015cd4:	lea    eax,[ebp-0x80]
10015cd7:	push   eax
10015cd8:	call   0x10014aa1
10015cdd:	cmp    eax,edi
10015cdf:	jl     0x10015bdb
10015ce5:	call   DWORD PTR ds:0x1007efec
10015ceb:	cmp    DWORD PTR [ebp+0x9d8],edi
10015cf1:	mov    edx,DWORD PTR [ebp-0x6c]
10015cf4:	je     0x10015d08
10015cf6:	cmp    edx,edi
10015cf8:	je     0x10015cfe
10015cfa:	push   0x1
10015cfc:	jmp    0x10015d0d
10015cfe:	mov    eax,0x80070057
10015d03:	jmp    0x10015bdb
10015d08:	cmp    edx,edi
10015d0a:	je     0x10015cfe
10015d0c:	push   edi
10015d0d:	push   0x1006f680
10015d12:	lea    eax,[ebp-0x80]
10015d15:	push   eax
10015d16:	lea    ecx,[ebp+0x7c0]
10015d1c:	call   0x10014af6
10015d21:	jmp    0x10015bdb
10015d26:	push   ebp
10015d27:	lea    ebp,[esp-0x9c8]
10015d2e:	sub    esp,0xa48
10015d34:	mov    eax,ds:0x1007e030
10015d39:	xor    eax,ebp
10015d3b:	mov    DWORD PTR [ebp+0x9c4],eax
10015d41:	push   ebx
10015d42:	push   esi
10015d43:	push   edi
10015d44:	xor    edi,edi
10015d46:	mov    esi,edx
10015d48:	cmp    esi,edi
10015d4a:	mov    ebx,ecx
10015d4c:	mov    DWORD PTR [ebp-0x80],0x1006fc88
10015d53:	mov    DWORD PTR [ebp-0x7c],edi
10015d56:	mov    DWORD PTR [ebp-0x78],edi
10015d59:	mov    DWORD PTR [ebp-0x74],edi
10015d5c:	je     0x10015d76
10015d5e:	jmp    0x10015d70
10015d60:	push   DWORD PTR [esi+0x4]
10015d63:	push   eax
10015d64:	lea    eax,[ebp-0x80]
10015d67:	push   eax
10015d68:	call   0x10014aa1
10015d6d:	add    esi,0x8
10015d70:	mov    eax,DWORD PTR [esi]
10015d72:	cmp    eax,edi
10015d74:	jne    0x10015d60
10015d76:	mov    eax,DWORD PTR [ebx]
10015d78:	lea    ecx,[ebp-0x80]
10015d7b:	push   ecx
10015d7c:	mov    ecx,ebx
10015d7e:	call   DWORD PTR [eax+0x14]
10015d81:	cmp    eax,edi
10015d83:	jge    0x10015dab
10015d85:	mov    esi,eax
10015d87:	lea    ecx,[ebp-0x80]
10015d8a:	call   0x10014a66
10015d8f:	mov    ecx,DWORD PTR [ebp+0x9c4]
10015d95:	pop    edi
10015d96:	mov    eax,esi
10015d98:	pop    esi
10015d99:	xor    ecx,ebp
10015d9b:	pop    ebx
10015d9c:	call   0x10042f87
10015da1:	add    ebp,0x9c8
10015da7:	leave  
10015da8:	ret    0x8
10015dab:	call   DWORD PTR ds:0x1007efec
10015db1:	mov    ebx,DWORD PTR ds:0x10080a04
10015db7:	mov    esi,0x104
10015dbc:	push   esi
10015dbd:	lea    eax,[ebp+0x7bc]
10015dc3:	push   eax
10015dc4:	push   ebx
10015dc5:	call   DWORD PTR ds:0x10066124
10015dcb:	cmp    eax,edi
10015dcd:	jne    0x10015dd6
10015dcf:	call   0x100067a3
10015dd4:	jmp    0x10015d85
10015dd6:	cmp    eax,esi
10015dd8:	jne    0x10015de1
10015dda:	mov    esi,0x8007007a
10015ddf:	jmp    0x10015d87
10015de1:	lea    edx,[ebp+0x7bc]
10015de7:	mov    ecx,0x208
10015dec:	lea    eax,[ebp-0x6c]
10015def:	call   0x100145a7
10015df4:	cmp    ebx,edi
10015df6:	je     0x10015e08
10015df8:	push   edi
10015df9:	call   DWORD PTR ds:0x10066114
10015dff:	cmp    ebx,eax
10015e01:	je     0x10015e08
10015e03:	lea    eax,[ebp-0x6c]
10015e06:	jmp    0x10015e5e
10015e08:	lea    eax,[ebp-0x6c]
10015e0b:	push   eax
10015e0c:	lea    eax,[ebp+0x3a6]
10015e12:	push   0x20b
10015e17:	push   eax
10015e18:	mov    WORD PTR [ebp+0x3a4],0x22
10015e21:	call   0x10014424
10015e26:	add    esp,0xc
10015e29:	test   al,al
10015e2b:	jne    0x10015e37
10015e2d:	mov    esi,0x80004005
10015e32:	jmp    0x10015d87
10015e37:	lea    eax,[ebp+0x3a4]
10015e3d:	push   eax
10015e3e:	call   DWORD PTR ds:0x100660c4
10015e44:	add    eax,eax
10015e46:	mov    WORD PTR [ebp+eax*1+0x3a4],0x22
10015e50:	mov    WORD PTR [ebp+eax*1+0x3a6],di
10015e58:	lea    eax,[ebp+0x3a4]
10015e5e:	push   eax
10015e5f:	push   0x1006f658
10015e64:	lea    eax,[ebp-0x80]
10015e67:	push   eax
10015e68:	call   0x10014aa1
10015e6d:	cmp    eax,edi
10015e6f:	jl     0x10015d85
10015e75:	lea    eax,[ebp-0x6c]
10015e78:	push   eax
10015e79:	push   0x1006f668
10015e7e:	lea    eax,[ebp-0x80]
10015e81:	push   eax
10015e82:	call   0x10014aa1
10015e87:	cmp    eax,edi
10015e89:	jl     0x10015d85
10015e8f:	call   DWORD PTR ds:0x1007efec
10015e95:	cmp    DWORD PTR [ebp+0x9d4],edi
10015e9b:	je     0x10015ebf
10015e9d:	push   0x1
10015e9f:	movzx  edx,WORD PTR [ebp+0x9d0]
10015ea6:	push   0x1006f680
10015eab:	lea    eax,[ebp-0x80]
10015eae:	push   eax
10015eaf:	lea    ecx,[ebp+0x7bc]
10015eb5:	call   0x10014af6
10015eba:	jmp    0x10015d85
10015ebf:	push   edi
10015ec0:	jmp    0x10015e9f
10015ec2:	mov    edx,DWORD PTR [esp+0x8]
10015ec6:	mov    eax,DWORD PTR [esp+0x4]
10015eca:	push   esi
10015ecb:	xor    esi,esi
10015ecd:	mov    ecx,eax
10015ecf:	and    ecx,0x1
10015ed2:	or     ecx,esi
10015ed4:	push   esi
10015ed5:	jne    0x10015ee2
10015ed7:	push   0x2
10015ed9:	push   edx
10015eda:	push   eax
10015edb:	call   0x1005f430
10015ee0:	jmp    0x10015ef0
10015ee2:	push   0x3
10015ee4:	push   edx
10015ee5:	push   eax
10015ee6:	call   0x1004f4f0
10015eeb:	add    eax,0x1
10015eee:	adc    edx,esi
10015ef0:	cmp    eax,0x4
10015ef3:	jne    0x10015ecd
10015ef5:	cmp    edx,esi
10015ef7:	jne    0x10015ecd
10015ef9:	xor    edx,edx
10015efb:	pop    esi
10015efc:	ret    
10015efd:	push   esi
10015efe:	mov    esi,ecx
10015f00:	mov    eax,DWORD PTR [esi]
10015f02:	test   eax,eax
10015f04:	je     0x10015f0b
10015f06:	call   0x10016126
10015f0b:	and    DWORD PTR [esi],0x0
10015f0e:	pop    esi
10015f0f:	ret    
10015f10:	push   edi
10015f11:	mov    edi,eax
10015f13:	mov    eax,DWORD PTR [esi]
10015f15:	test   eax,eax
10015f17:	je     0x10015f1e
10015f19:	call   0x10016126
10015f1e:	cmp    BYTE PTR [esp+0x8],0x0
10015f23:	mov    DWORD PTR [esi],edi
10015f25:	je     0x10015f35
10015f27:	test   edi,edi
10015f29:	je     0x10015f35
10015f2b:	add    edi,0x20
10015f2e:	push   edi
10015f2f:	call   DWORD PTR ds:0x100660a4
10015f35:	pop    edi
10015f36:	ret    0x4
10015f39:	push   ebp
10015f3a:	mov    ebp,esp
10015f3c:	and    esp,0xfffffff8
10015f3f:	sub    esp,0x14
10015f42:	push   ebx
10015f43:	push   esi
10015f44:	push   edi
10015f45:	mov    esi,0xf0
10015f4a:	push   esi
10015f4b:	call   0x1004358e
10015f50:	pop    ecx
10015f51:	push   esi
10015f52:	xor    esi,esi
10015f54:	mov    ebx,eax
10015f56:	push   esi
10015f57:	push   ebx
10015f58:	call   0x10045cf0
10015f5d:	mov    eax,DWORD PTR [ebp+0x8]
10015f60:	add    esp,0xc
10015f63:	push   0x1e
10015f65:	pop    ecx
10015f66:	mov    DWORD PTR [ebx+0x20],esi
10015f69:	mov    DWORD PTR [ebx+0x1c],esi
10015f6c:	push   0xf
10015f6e:	mov    DWORD PTR [ebx],eax
10015f70:	mov    BYTE PTR [ebx+0x25],0x0
10015f74:	mov    BYTE PTR [ebx+0x24],0x0
10015f78:	mov    BYTE PTR [ebx+0x26],0x1
10015f7c:	mov    BYTE PTR [ebx+0x27],0x0
10015f80:	lea    edi,[ebx+0x3c]
10015f83:	mov    esi,0x10080c80
10015f88:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
10015f8a:	pop    ecx
10015f8b:	lea    edi,[ebx+0xb4]
10015f91:	mov    esi,0x10080cf8
10015f96:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
10015f98:	mov    esi,DWORD PTR ds:0x10066130
10015f9e:	xor    edi,edi
10015fa0:	push   edi
10015fa1:	push   edi
10015fa2:	push   0x1
10015fa4:	push   edi
10015fa5:	call   esi
10015fa7:	push   edi
10015fa8:	push   0x1
10015faa:	push   0x1
10015fac:	push   edi
10015fad:	mov    DWORD PTR [ebx+0x28],eax
10015fb0:	call   esi
10015fb2:	push   edi
10015fb3:	push   edi
10015fb4:	push   0x1
10015fb6:	push   edi
10015fb7:	mov    DWORD PTR [ebx+0x2c],eax
10015fba:	call   esi
10015fbc:	push   edi
10015fbd:	push   edi
10015fbe:	push   0x1
10015fc0:	push   edi
10015fc1:	mov    DWORD PTR [ebx+0x30],eax
10015fc4:	call   esi
10015fc6:	mov    DWORD PTR [ebx+0x34],eax
10015fc9:	lea    eax,[ebx+0x4]
10015fcc:	push   eax
10015fcd:	mov    DWORD PTR [ebx+0x38],edi
10015fd0:	call   DWORD PTR ds:0x1006611c
10015fd6:	mov    esi,0x10080c58
10015fdb:	push   esi
10015fdc:	call   DWORD PTR ds:0x100660f0
10015fe2:	mov    eax,DWORD PTR [ebp+0x8]
10015fe5:	mov    DWORD PTR [esp+0xc],eax
10015fe9:	lea    eax,[esp+0xc]
10015fed:	push   eax
10015fee:	lea    edi,[esp+0x18]
10015ff2:	mov    DWORD PTR [esp+0x14],ebx
10015ff6:	call   0x10017a9c
10015ffb:	push   esi
10015ffc:	call   DWORD PTR ds:0x100660ec
10016002:	pop    edi
10016003:	pop    esi
10016004:	mov    eax,ebx
10016006:	pop    ebx
10016007:	mov    esp,ebp
10016009:	pop    ebp
1001600a:	ret    
1001600b:	push   edi
1001600c:	push   DWORD PTR [esi+0x28]
1001600f:	mov    edi,DWORD PTR ds:0x10066070
10016015:	call   edi
10016017:	push   DWORD PTR [esi+0x2c]
1001601a:	call   edi
1001601c:	push   DWORD PTR [esi+0x30]
1001601f:	call   edi
10016021:	push   DWORD PTR [esi+0x34]
10016024:	call   edi
10016026:	lea    eax,[esi+0x4]
10016029:	push   eax
1001602a:	call   DWORD PTR ds:0x10066138
10016030:	mov    edi,DWORD PTR [esi+0x1c]
10016033:	test   edi,edi
10016035:	je     0x10016044
10016037:	push   edi
10016038:	call   0x10024f15
1001603d:	push   edi
1001603e:	call   0x10042f82
10016043:	pop    ecx
10016044:	and    DWORD PTR [esi+0x1c],0x0
10016048:	push   esi
10016049:	call   0x10042f82
1001604e:	pop    ecx
1001604f:	pop    edi
10016050:	ret    
10016051:	push   ebp
10016052:	mov    ebp,esp
10016054:	sub    esp,0x18
10016057:	push   ebx
10016058:	mov    ebx,DWORD PTR ds:0x100660f0
1001605e:	push   esi
1001605f:	push   edi
10016060:	push   0x10080c58
10016065:	call   ebx
10016067:	lea    eax,[ebp+0x8]
1001606a:	push   eax
1001606b:	lea    eax,[ebp-0xc]
1001606e:	call   0x10017caa
10016073:	cmp    DWORD PTR [ebp-0xc],0x0
10016077:	mov    eax,ds:0x10080e7c
1001607c:	mov    esi,eax
1001607e:	je     0x10016089
10016080:	cmp    DWORD PTR [ebp-0xc],0x10080e78
10016087:	je     0x10016093
10016089:	call   0x100434a0
1001608e:	mov    eax,ds:0x10080e7c
10016093:	mov    ecx,DWORD PTR [ebp-0x8]
10016096:	cmp    ecx,esi
10016098:	je     0x100160a7
1001609a:	mov    edx,DWORD PTR [ebp+0x8]
1001609d:	cmp    edx,DWORD PTR [ecx+0xc]
100160a0:	jb     0x100160a7
100160a2:	lea    ecx,[ebp-0xc]
100160a5:	jmp    0x100160b4
100160a7:	mov    DWORD PTR [ebp-0x10],eax
100160aa:	mov    DWORD PTR [ebp-0x14],0x10080e78
100160b1:	lea    ecx,[ebp-0x14]
100160b4:	mov    esi,DWORD PTR [ecx]
100160b6:	test   esi,esi
100160b8:	mov    edi,DWORD PTR [ecx+0x4]
100160bb:	mov    DWORD PTR [ebp-0x10],eax
100160be:	je     0x100160c8
100160c0:	cmp    esi,0x10080e78
100160c6:	je     0x100160cd
100160c8:	call   0x100434a0
100160cd:	cmp    edi,DWORD PTR [ebp-0x10]
100160d0:	je     0x100160ea
100160d2:	test   esi,esi
100160d4:	jne    0x100160db
100160d6:	call   0x100434a0
100160db:	cmp    edi,DWORD PTR [esi+0x4]
100160de:	jne    0x100160e5
100160e0:	call   0x100434a0
100160e5:	mov    esi,DWORD PTR [edi+0x10]
100160e8:	jmp    0x100160ec
100160ea:	xor    esi,esi
100160ec:	test   esi,esi
100160ee:	je     0x10016114
100160f0:	lea    edi,[esi+0x4]
100160f3:	push   edi
100160f4:	call   ebx
100160f6:	mov    bl,BYTE PTR [esi+0x27]
100160f9:	test   bl,bl
100160fb:	jne    0x10016107
100160fd:	lea    eax,[esi+0x20]
10016100:	push   eax
10016101:	call   DWORD PTR ds:0x100660a4
10016107:	push   edi
10016108:	call   DWORD PTR ds:0x100660ec
1001610e:	test   bl,bl
10016110:	je     0x10016114
10016112:	xor    esi,esi
10016114:	push   0x10080c58
10016119:	call   DWORD PTR ds:0x100660ec
1001611f:	pop    edi
10016120:	mov    eax,esi
10016122:	pop    esi
10016123:	pop    ebx
10016124:	leave  
10016125:	ret    
10016126:	push   esi
10016127:	mov    esi,eax
10016129:	test   esi,esi
1001612b:	je     0x1001615d
1001612d:	push   ebx
1001612e:	push   ebp
1001612f:	push   edi
10016130:	mov    edi,DWORD PTR ds:0x100660f0
10016136:	mov    ebp,0x10080c58
1001613b:	push   ebp
1001613c:	call   edi
1001613e:	lea    ebx,[esi+0x4]
10016141:	push   ebx
10016142:	call   edi
10016144:	add    esi,0x20
10016147:	push   esi
10016148:	call   DWORD PTR ds:0x100660ac
1001614e:	mov    esi,DWORD PTR ds:0x100660ec
10016154:	push   ebx
10016155:	call   esi
10016157:	push   ebp
10016158:	call   esi
1001615a:	pop    edi
1001615b:	pop    ebp
1001615c:	pop    ebx
1001615d:	pop    esi
1001615e:	ret    
1001615f:	add    eax,0x4
10016162:	push   eax
10016163:	call   DWORD PTR ds:0x100660f0
10016169:	ret    
1001616a:	push   0x8
1001616c:	mov    eax,0x10062b57
10016171:	call   0x10059b58
10016176:	mov    esi,DWORD PTR [ebp+0x8]
10016179:	and    DWORD PTR [ebp-0x4],0x0
1001617d:	push   0x54
1001617f:	call   0x1004358e
10016184:	pop    ecx
10016185:	mov    DWORD PTR [ebp-0x14],eax
10016188:	test   eax,eax
1001618a:	mov    BYTE PTR [ebp-0x4],0x1
1001618e:	je     0x10016199
10016190:	push   esi
10016191:	push   eax
10016192:	call   0x10024e88
10016197:	jmp    0x1001619b
10016199:	xor    eax,eax
1001619b:	mov    DWORD PTR [esi+0x1c],eax
1001619e:	call   0x10059bfd
100161a3:	ret    
100161a4:	push   0x4
100161a6:	call   0x100379e0
100161ab:	mov    eax,DWORD PTR [ebp+0x8]
100161ae:	and    DWORD PTR [eax+0x1c],0x0
100161b2:	pop    ecx
100161b3:	mov    eax,0x1001619e
100161b8:	ret    
100161b9:	push   ebp
100161ba:	mov    ebp,esp
100161bc:	and    esp,0xfffffff8
100161bf:	push   ecx
100161c0:	push   esi
100161c1:	mov    esi,eax
100161c3:	and    DWORD PTR [esi],0x0
100161c6:	jmp    0x100161f6
100161c8:	mov    eax,DWORD PTR [esi]
100161ca:	push   DWORD PTR [ebp+0x10]
100161cd:	mov    ecx,DWORD PTR [ebp+0xc]
100161d0:	sub    ecx,eax
100161d2:	push   ecx
100161d3:	mov    ecx,DWORD PTR [ebp+0x8]
100161d6:	add    eax,ecx
100161d8:	push   eax
100161d9:	push   edi
100161da:	lea    eax,[esp+0x14]
100161de:	call   0x10025a9c
100161e3:	mov    eax,DWORD PTR [esp+0x4]
100161e7:	add    DWORD PTR [esi],eax
100161e9:	mov    eax,DWORD PTR [esi]
100161eb:	cmp    eax,DWORD PTR [ebp+0xc]
100161ee:	je     0x10016201
100161f0:	cmp    BYTE PTR [ebp+0x10],0x0
100161f4:	jne    0x10016201
100161f6:	mov    eax,edi
100161f8:	call   0x10025b5a
100161fd:	test   eax,eax
100161ff:	jne    0x100161c8
10016201:	lea    esi,[edi+0x38]
10016204:	push   esi
10016205:	call   DWORD PTR ds:0x100660f0
1001620b:	cmp    DWORD PTR [edi+0x28],0x0
1001620f:	jne    0x1001621d
10016211:	mov    eax,DWORD PTR [edi+0x50]
10016214:	push   DWORD PTR [eax+0x28]
10016217:	call   DWORD PTR ds:0x10066164
1001621d:	push   esi
1001621e:	call   DWORD PTR ds:0x100660ec
10016224:	pop    esi
10016225:	mov    esp,ebp
10016227:	pop    ebp
10016228:	ret    
10016229:	push   ebp
1001622a:	mov    ebp,esp
1001622c:	sub    esp,0x10
1001622f:	push   ebx
10016230:	xor    ebx,ebx
10016232:	cmp    BYTE PTR [esi+0x27],bl
10016235:	push   edi
10016236:	jne    0x100162b3
10016238:	lea    eax,[ebp-0x4]
1001623b:	push   eax
1001623c:	push   ebx
1001623d:	push   ebx
1001623e:	push   ebx
1001623f:	lea    eax,[ebp-0x8]
10016242:	push   eax
10016243:	push   ebx
10016244:	push   ebx
10016245:	push   0x4
10016247:	lea    eax,[ebp-0xc]
1001624a:	push   eax
1001624b:	push   0x8004667e
10016250:	push   DWORD PTR [esi]
10016252:	mov    DWORD PTR [ebp-0xc],0x1
10016259:	mov    DWORD PTR [ebp-0x8],ebx
1001625c:	mov    DWORD PTR [ebp-0x4],ebx
1001625f:	call   DWORD PTR [esi+0x7c]
10016262:	push   esi
10016263:	call   0x1001616a
10016268:	lea    eax,[esi+0x4]
1001626b:	pop    ecx
1001626c:	push   eax
1001626d:	mov    DWORD PTR [ebp-0x10],eax
10016270:	call   DWORD PTR ds:0x100660f0
10016276:	mov    edi,DWORD PTR ds:0x100660a4
1001627c:	lea    eax,[esi+0x20]
1001627f:	push   eax
10016280:	call   edi
10016282:	lea    eax,[esi+0x20]
10016285:	push   eax
10016286:	call   edi
10016288:	mov    edi,DWORD PTR ds:0x10066098
1001628e:	push   ebx
1001628f:	push   ebx
10016290:	push   esi
10016291:	push   0x10025496
10016296:	push   ebx
10016297:	push   ebx
10016298:	call   edi
1001629a:	push   ebx
1001629b:	push   ebx
1001629c:	push   esi
1001629d:	push   0x10025a40
100162a2:	push   ebx
100162a3:	push   ebx
100162a4:	call   edi
100162a6:	push   DWORD PTR [ebp-0x10]
100162a9:	mov    BYTE PTR [esi+0x25],0x1
100162ad:	call   DWORD PTR ds:0x100660ec
100162b3:	pop    edi
100162b4:	pop    ebx
100162b5:	leave  
100162b6:	ret    
100162b7:	push   ebp
100162b8:	mov    ebp,esp
100162ba:	push   ebx
100162bb:	mov    ebx,DWORD PTR [ebp+0x50]
100162be:	push   esi
100162bf:	push   edi
100162c0:	push   0xf
100162c2:	pop    ecx
100162c3:	push   ebx
100162c4:	sub    esp,0x3c
100162c7:	push   0xf
100162c9:	lea    esi,[ebp+0x14]
100162cc:	mov    edi,0x10080cf8
100162d1:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
100162d3:	pop    ecx
100162d4:	mov    edi,esp
100162d6:	push   DWORD PTR [ebp+0x10]
100162d9:	lea    esi,[ebp+0x14]
100162dc:	push   DWORD PTR [ebp+0xc]
100162df:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
100162e1:	push   DWORD PTR [ebp+0x8]
100162e4:	call   DWORD PTR ds:0x10080c70
100162ea:	push   0x78
100162ec:	push   ebx
100162ed:	push   0x10080c80
100162f2:	mov    esi,eax
100162f4:	call   0x10045270
100162f9:	add    esp,0xc
100162fc:	pop    edi
100162fd:	mov    eax,esi
100162ff:	pop    esi
10016300:	mov    DWORD PTR [ebx+0x18],0x100166b8
10016307:	mov    DWORD PTR [ebx+0x1c],0x10016816
1001630e:	mov    DWORD PTR [ebx+0x40],0x1001691b
10016315:	mov    DWORD PTR [ebx+0x4c],0x10016ae0
1001631c:	mov    DWORD PTR [ebx+0x58],0x10016bb0
10016323:	mov    DWORD PTR [ebx+0x5c],0x1001744a
1001632a:	mov    DWORD PTR [ebx+0x68],0x100175b7
10016331:	mov    DWORD PTR [ebx+0x70],0x100174c1
10016338:	pop    ebx
10016339:	pop    ebp
1001633a:	ret    0x4c
1001633d:	push   ebp
1001633e:	mov    ebp,esp
10016340:	and    esp,0xfffffff8
10016343:	sub    esp,0x210
10016349:	mov    eax,ds:0x1007e030
1001634e:	xor    eax,esp
10016350:	mov    DWORD PTR [esp+0x20c],eax
10016357:	cmp    BYTE PTR ds:0x10080fd4,0x0
1001635e:	jne    0x100164d7
10016364:	push   0x208
10016369:	lea    eax,[esp+0x4]
1001636d:	push   eax
1001636e:	push   0x0
10016370:	call   DWORD PTR ds:0x10066124
10016376:	test   eax,eax
10016378:	je     0x100164d7
1001637e:	lea    eax,[esp]
10016381:	push   eax
10016382:	call   0x100461d0
10016387:	mov    DWORD PTR [esp],0x782087c6
1001638e:	push   0x7f35d1ae
10016393:	push   0x2d066df2
10016398:	push   0x1006f694
1001639d:	call   0x100042bd
100163a2:	pop    ecx
100163a3:	pop    ecx
100163a4:	push   eax
100163a5:	call   0x100042bd
100163aa:	pop    ecx
100163ab:	pop    ecx
100163ac:	push   eax
100163ad:	call   0x100042bd
100163b2:	push   eax
100163b3:	push   0xc
100163b5:	push   0x1006f6bc
100163ba:	call   0x1000448e
100163bf:	push   eax
100163c0:	lea    eax,[esp+0x18]
100163c4:	push   eax
100163c5:	call   0x10046239
100163ca:	add    esp,0x1c
100163cd:	test   eax,eax
100163cf:	je     0x100163e0
100163d1:	mov    DWORD PTR ds:0x10080c7c,0x1
100163db:	jmp    0x100164d0
100163e0:	push   0x766b5f34
100163e5:	push   0x5517a9d6
100163ea:	push   0x1006f6d8
100163ef:	call   0x100042bd
100163f4:	pop    ecx
100163f5:	pop    ecx
100163f6:	push   eax
100163f7:	call   0x100042bd
100163fc:	push   eax
100163fd:	push   0xb
100163ff:	push   0x1006f70c
10016404:	call   0x1000448e
10016409:	push   eax
1001640a:	lea    eax,[esp+0x18]
1001640e:	push   eax
1001640f:	call   0x10046239
10016414:	add    esp,0x1c
10016417:	test   eax,eax
10016419:	je     0x1001642a
1001641b:	mov    DWORD PTR ds:0x10080c7c,0x2
10016425:	jmp    0x100164d0
1001642a:	push   0x4af20b6a
1001642f:	push   0x2ad5c3a4
10016434:	push   0x823e65a
10016439:	push   0x17ffffba
1001643e:	push   0x1006f724
10016443:	call   0x100042bd
10016448:	pop    ecx
10016449:	pop    ecx
1001644a:	push   eax
1001644b:	call   0x100042bd
10016450:	pop    ecx
10016451:	pop    ecx
10016452:	push   eax
10016453:	call   0x100042bd
10016458:	pop    ecx
10016459:	pop    ecx
1001645a:	push   eax
1001645b:	call   0x100042bd
10016460:	push   eax
10016461:	push   0x9
10016463:	push   0x1006f750
10016468:	call   0x1000448e
1001646d:	push   eax
1001646e:	lea    eax,[esp+0x18]
10016472:	push   eax
10016473:	call   0x10046239
10016478:	add    esp,0x1c
1001647b:	test   eax,eax
1001647d:	je     0x1001648b
1001647f:	mov    DWORD PTR ds:0x10080c7c,0x4
10016489:	jmp    0x100164d0
1001648b:	push   0x7152562a
10016490:	push   0x792c7e5e
10016495:	push   0x1006f764
1001649a:	call   0x100042bd
1001649f:	pop    ecx
100164a0:	pop    ecx
100164a1:	push   eax
100164a2:	call   0x100042bd
100164a7:	push   eax
100164a8:	push   0xa
100164aa:	push   0x1006f790
100164af:	call   0x1000448e
100164b4:	push   eax
100164b5:	lea    eax,[esp+0x18]
100164b9:	push   eax
100164ba:	call   0x10046239
100164bf:	add    esp,0x1c
100164c2:	test   eax,eax
100164c4:	je     0x100164d0
100164c6:	mov    DWORD PTR ds:0x10080c7c,0x3
100164d0:	mov    BYTE PTR ds:0x10080fd4,0x1
100164d7:	mov    ecx,DWORD PTR [esp+0x20c]
100164de:	xor    ecx,esp
100164e0:	call   0x10042f87
100164e5:	mov    esp,ebp
100164e7:	pop    ebp
100164e8:	ret    
100164e9:	push   ebp
100164ea:	mov    ebp,esp
100164ec:	and    esp,0xfffffff8
100164ef:	call   DWORD PTR ds:0x1007efec
100164f5:	push   0x10080c58
100164fa:	call   DWORD PTR ds:0x1006611c
10016500:	mov    eax,ds:0x10080c7c
10016505:	test   eax,eax
10016507:	je     0x10016583
10016509:	push   eax
1001650a:	call   0x1000206e
1001650f:	pop    ecx
10016510:	push   0x1006f7a8
10016515:	push   0xb
10016517:	push   0x1006f7dc
1001651c:	call   0x1000448e
10016521:	add    esp,0xc
10016524:	push   eax
10016525:	call   DWORD PTR ds:0x100660f8
1001652b:	test   eax,eax
1001652d:	mov    ds:0x10080d38,eax
10016532:	je     0x10016583
10016534:	push   0x79a6b09e
10016539:	push   0x39ffadac
1001653e:	push   0x1006f7f4
10016543:	call   0x100042bd
10016548:	pop    ecx
10016549:	pop    ecx
1001654a:	push   eax
1001654b:	call   0x100042bd
10016550:	push   eax
10016551:	push   0xa
10016553:	push   0x1006f82c
10016558:	call   0x100042cf
1001655d:	add    esp,0x14
10016560:	push   eax
10016561:	push   DWORD PTR ds:0x10080d38
10016567:	call   DWORD PTR ds:0x1006612c
1001656d:	push   0x100162b7
10016572:	push   eax
10016573:	call   0x10057560
10016578:	mov    ds:0x10080c70,eax
1001657d:	mov    al,0x1
1001657f:	mov    esp,ebp
10016581:	pop    ebp
10016582:	ret    
10016583:	xor    al,al
10016585:	jmp    0x1001657f
10016587:	push   0x10
10016589:	push   0x1007c2a8
1001658e:	call   0x10046d84
10016593:	xor    ebx,ebx
10016595:	push   ebx
10016596:	push   0x12
10016598:	call   0x10015ec2
1001659d:	pop    ecx
1001659e:	pop    ecx
1001659f:	mov    DWORD PTR [ebp-0x20],eax
100165a2:	mov    DWORD PTR [ebp-0x1c],edx
100165a5:	mov    eax,DWORD PTR [ebp+0xc]
100165a8:	sub    eax,ebx
100165aa:	je     0x1001664f
100165b0:	dec    eax
100165b1:	jne    0x100166ad
100165b7:	call   0x1001633d
100165bc:	cmp    DWORD PTR ds:0x10080d3c,ebx
100165c2:	jne    0x100165f2
100165c4:	mov    eax,DWORD PTR [ebp+0x8]
100165c7:	mov    ds:0x10080d34,eax
100165cc:	call   0x10026914
100165d1:	call   0x10018782
100165d6:	test   al,al
100165d8:	je     0x100165e4
100165da:	call   0x100164e9
100165df:	mov    ds:0x10080fd5,al
100165e4:	cmp    DWORD PTR ds:0x10080c7c,0x2
100165eb:	jne    0x100165f2
100165ed:	call   0x10007561
100165f2:	inc    DWORD PTR ds:0x10080d3c
100165f8:	mov    DWORD PTR [ebp-0x4],ebx
100165fb:	mov    DWORD PTR ds:0x10080c04,0x10080e88
10016605:	mov    esi,0x1006f558
1001660a:	mov    edi,0x10080c08
1001660f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10016610:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10016611:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10016612:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10016613:	push   ebx
10016614:	push   0xe6
10016619:	call   0x10015ec2
1001661e:	pop    ecx
1001661f:	pop    ecx
10016620:	mov    esi,eax
10016622:	call   DWORD PTR ds:0x10066118
10016628:	add    esi,DWORD PTR [ebp-0x20]
1001662b:	add    eax,esi
1001662d:	push   eax
1001662e:	call   0x100464fa
10016633:	pop    ecx
10016634:	mov    DWORD PTR [ebp-0x4],0xfffffffe
1001663b:	jmp    0x100166ad
1001663d:	xor    eax,eax
1001663f:	inc    eax
10016640:	ret    
10016641:	mov    esp,DWORD PTR [ebp-0x18]
10016644:	mov    DWORD PTR [ebp-0x4],0xfffffffe
1001664b:	xor    eax,eax
1001664d:	jmp    0x100166b0
1001664f:	dec    DWORD PTR ds:0x10080d3c
10016655:	jne    0x100166ad
10016657:	cmp    BYTE PTR ds:0x10080fd5,bl
1001665d:	je     0x100166ad
1001665f:	xor    eax,eax
10016661:	cmp    DWORD PTR ds:0x10080c7c,ebx
10016667:	je     0x1001666a
10016669:	inc    eax
1001666a:	cmp    eax,ebx
1001666c:	je     0x10016689
1001666e:	push   0x100162b7
10016673:	push   DWORD PTR ds:0x10080c70
10016679:	call   0x10057310
1001667e:	push   0x10080c58
10016683:	call   DWORD PTR ds:0x10066138
10016689:	mov    BYTE PTR ds:0x10080fd5,bl
1001668f:	mov    eax,ds:0x10080c7c
10016694:	dec    eax
10016695:	je     0x100166a5
10016697:	dec    eax
10016698:	je     0x100166a1
1001669a:	dec    eax
1001669b:	jne    0x100166ad
1001669d:	push   0xb
1001669f:	jmp    0x100166a7
100166a1:	push   0x3
100166a3:	jmp    0x100166a7
100166a5:	push   0x1
100166a7:	call   0x100379e0
100166ac:	pop    ecx
100166ad:	xor    eax,eax
100166af:	inc    eax
100166b0:	call   0x10046dc9
100166b5:	ret    0xc
100166b8:	push   0x14
100166ba:	mov    eax,0x1006446e
100166bf:	call   0x10059b25
100166c4:	push   DWORD PTR [ebp+0x8]
100166c7:	call   0x10016051
100166cc:	pop    ecx
100166cd:	mov    DWORD PTR [ebp-0x10],eax
100166d0:	xor    ebx,ebx
100166d2:	cmp    eax,ebx
100166d4:	mov    DWORD PTR [ebp-0x4],ebx
100166d7:	jne    0x100166f9
100166d9:	push   DWORD PTR [ebp+0xc]
100166dc:	push   DWORD PTR [ebp+0x8]
100166df:	call   DWORD PTR ds:0x10080c98
100166e5:	lea    ecx,[ebp-0x10]
100166e8:	mov    esi,eax
100166ea:	call   0x10015efd
100166ef:	mov    eax,esi
100166f1:	call   0x10059bfd
100166f6:	ret    0x8
100166f9:	mov    esi,DWORD PTR ds:0x100660f0
100166ff:	add    eax,0x4
10016702:	push   eax
10016703:	call   esi
10016705:	mov    eax,DWORD PTR [ebp-0x10]
10016708:	cmp    BYTE PTR [eax+0x27],bl
1001670b:	jne    0x100167c1
10016711:	push   DWORD PTR [eax+0x30]
10016714:	call   DWORD PTR ds:0x10066110
1001671a:	mov    eax,DWORD PTR [ebp-0x10]
1001671d:	mov    edi,DWORD PTR ds:0x100660ec
10016723:	mov    BYTE PTR [eax+0x27],0x1
10016727:	jmp    0x10016740
10016729:	add    eax,0x4
1001672c:	push   eax
1001672d:	call   edi
1001672f:	push   0x64
10016731:	call   DWORD PTR ds:0x100660bc
10016737:	mov    eax,DWORD PTR [ebp-0x10]
1001673a:	add    eax,0x4
1001673d:	push   eax
1001673e:	call   esi
10016740:	mov    eax,DWORD PTR [ebp-0x10]
10016743:	mov    eax,DWORD PTR [eax+0x20]
10016746:	cmp    eax,0x1
10016749:	mov    eax,DWORD PTR [ebp-0x10]
1001674c:	jg     0x10016729
1001674e:	push   DWORD PTR [eax+0x34]
10016751:	call   DWORD PTR ds:0x10066110
10016757:	mov    eax,DWORD PTR [ebp-0x10]
1001675a:	xor    ecx,ecx
1001675c:	cmp    BYTE PTR [eax+0x26],bl
1001675f:	sete   cl
10016762:	add    eax,0x4
10016765:	push   eax
10016766:	mov    DWORD PTR [ebp-0x20],ecx
10016769:	call   edi
1001676b:	push   0x10080c58
10016770:	call   esi
10016772:	lea    edx,[ebp+0x8]
10016775:	call   0x10017b38
1001677a:	push   0x10080c58
1001677f:	call   edi
10016781:	mov    eax,DWORD PTR [ebp-0x10]
10016784:	add    eax,0x4
10016787:	push   eax
10016788:	call   esi
1001678a:	mov    esi,DWORD PTR [ebp-0x10]
1001678d:	call   0x1001600b
10016792:	lea    eax,[ebp-0x18]
10016795:	push   eax
10016796:	push   ebx
10016797:	push   ebx
10016798:	push   ebx
10016799:	lea    eax,[ebp-0x1c]
1001679c:	push   eax
1001679d:	push   ebx
1001679e:	push   ebx
1001679f:	push   0x4
100167a1:	lea    eax,[ebp-0x20]
100167a4:	push   eax
100167a5:	push   0x8004667e
100167aa:	push   DWORD PTR [ebp+0x8]
100167ad:	mov    DWORD PTR [ebp-0x10],ebx
100167b0:	mov    DWORD PTR [ebp-0x1c],ebx
100167b3:	mov    DWORD PTR [ebp-0x18],ebx
100167b6:	call   DWORD PTR ds:0x10080cc0
100167bc:	jmp    0x100166d9
100167c1:	mov    ecx,DWORD PTR [eax+0x34]
100167c4:	mov    esi,DWORD PTR ds:0x10066108
100167ca:	push   0x2
100167cc:	push   0x1
100167ce:	mov    edi,eax
100167d0:	push   ebx
100167d1:	lea    eax,[ebp-0x14]
100167d4:	push   eax
100167d5:	mov    DWORD PTR [ebp-0x14],ecx
100167d8:	call   esi
100167da:	push   eax
100167db:	push   DWORD PTR [edi+0x34]
100167de:	call   esi
100167e0:	push   eax
100167e1:	call   DWORD PTR ds:0x1006613c
100167e7:	mov    esi,eax
100167e9:	mov    eax,DWORD PTR [ebp-0x10]
100167ec:	add    eax,0x4
100167ef:	push   eax
100167f0:	call   DWORD PTR ds:0x100660ec
100167f6:	cmp    esi,ebx
100167f8:	je     0x10016805
100167fa:	push   0xffffffff
100167fc:	push   DWORD PTR [ebp-0x14]
100167ff:	call   DWORD PTR ds:0x10066084
10016805:	mov    ecx,DWORD PTR [ebp+0xc]
10016808:	or     eax,0xffffffff
1001680b:	mov    DWORD PTR [ecx],0x2736
10016811:	jmp    0x100166e5
10016816:	push   0x4
10016818:	mov    eax,0x100651e4
1001681d:	call   0x10059b25
10016822:	mov    esi,DWORD PTR [ebp+0xc]
10016825:	cmp    WORD PTR [esi],0x2
10016829:	jne    0x1001686c
1001682b:	mov    eax,DWORD PTR [esi+0x4]
1001682e:	push   eax
1001682f:	mov    DWORD PTR [ebp-0x10],eax
10016832:	call   DWORD PTR ds:0x100663a8
10016838:	mov    ebx,eax
1001683a:	call   0x100175c1
1001683f:	test   al,al
10016841:	je     0x1001686c
10016843:	movzx  eax,BYTE PTR [ebp-0xd]
10016847:	push   eax
10016848:	movzx  eax,BYTE PTR [ebp-0xe]
1001684c:	push   eax
1001684d:	movzx  eax,BYTE PTR [ebp-0xf]
10016851:	push   eax
10016852:	movzx  eax,BYTE PTR [ebp-0x10]
10016856:	push   eax
10016857:	call   0x1000206e
1001685c:	add    esp,0x10
1001685f:	mov    eax,0x274d
10016864:	call   0x10059bfd
10016869:	ret    0x20
1001686c:	mov    ebx,DWORD PTR [ebp+0x8]
1001686f:	push   ebx
10016870:	call   0x10016051
10016875:	pop    ecx
10016876:	mov    DWORD PTR [ebp+0xc],eax
10016879:	and    DWORD PTR [ebp-0x4],0x0
1001687d:	test   eax,eax
1001687f:	jne    0x100168a9
10016881:	push   DWORD PTR [ebp+0x24]
10016884:	push   DWORD PTR [ebp+0x20]
10016887:	push   DWORD PTR [ebp+0x1c]
1001688a:	push   DWORD PTR [ebp+0x18]
1001688d:	push   DWORD PTR [ebp+0x14]
10016890:	push   DWORD PTR [ebp+0x10]
10016893:	push   esi
10016894:	push   ebx
10016895:	call   DWORD PTR ds:0x10080c9c
1001689b:	mov    esi,eax
1001689d:	lea    ecx,[ebp+0xc]
100168a0:	call   0x10015efd
100168a5:	mov    eax,esi
100168a7:	jmp    0x10016864
100168a9:	mov    edi,DWORD PTR [ebp+0x24]
100168ac:	push   edi
100168ad:	push   DWORD PTR [ebp+0x20]
100168b0:	push   DWORD PTR [ebp+0x1c]
100168b3:	push   DWORD PTR [ebp+0x18]
100168b6:	push   DWORD PTR [ebp+0x14]
100168b9:	push   DWORD PTR [ebp+0x10]
100168bc:	push   esi
100168bd:	push   ebx
100168be:	call   DWORD PTR [eax+0x58]
100168c1:	cmp    eax,0xffffffff
100168c4:	mov    DWORD PTR [ebp+0x24],eax
100168c7:	jne    0x100168f4
100168c9:	mov    edi,DWORD PTR [edi]
100168cb:	cmp    edi,0x2733
100168d1:	jne    0x100168e9
100168d3:	mov    eax,DWORD PTR [ebp+0xc]
100168d6:	add    eax,0x4
100168d9:	push   eax
100168da:	call   DWORD PTR ds:0x100660f0
100168e0:	mov    eax,DWORD PTR [ebp+0xc]
100168e3:	mov    BYTE PTR [eax+0x24],0x1
100168e7:	jmp    0x10016909
100168e9:	push   edi
100168ea:	push   ebx
100168eb:	call   0x1000206e
100168f0:	pop    ecx
100168f1:	pop    ecx
100168f2:	jmp    0x10016916
100168f4:	mov    eax,DWORD PTR [ebp+0xc]
100168f7:	add    eax,0x4
100168fa:	push   eax
100168fb:	call   DWORD PTR ds:0x100660f0
10016901:	mov    esi,DWORD PTR [ebp+0xc]
10016904:	call   0x10016229
10016909:	mov    eax,DWORD PTR [ebp+0xc]
1001690c:	add    eax,0x4
1001690f:	push   eax
10016910:	call   DWORD PTR ds:0x100660ec
10016916:	mov    esi,DWORD PTR [ebp+0x24]
10016919:	jmp    0x1001689d
1001691b:	push   0x4
1001691d:	mov    eax,0x10063bbf
10016922:	call   0x10059b25
10016927:	push   DWORD PTR [ebp+0x8]
1001692a:	or     edi,0xffffffff
1001692d:	call   0x10016051
10016932:	pop    ecx
10016933:	mov    DWORD PTR [ebp-0x10],eax
10016936:	mov    esi,DWORD PTR [ebp+0x10]
10016939:	xor    ebx,ebx
1001693b:	cmp    eax,ebx
1001693d:	mov    DWORD PTR [ebp-0x4],ebx
10016940:	je     0x100169af
10016942:	cmp    DWORD PTR [ebp+0xc],0x4004667f
10016949:	je     0x10016973
1001694b:	cmp    DWORD PTR [ebp+0xc],0x8004667e
10016952:	jne    0x100169af
10016954:	add    eax,0x4
10016957:	push   eax
10016958:	call   DWORD PTR ds:0x100660f0
1001695e:	cmp    DWORD PTR [esi],ebx
10016960:	mov    ecx,DWORD PTR [ebp-0x10]
10016963:	sete   al
10016966:	mov    BYTE PTR [ecx+0x26],al
10016969:	mov    eax,DWORD PTR [ebp-0x10]
1001696c:	cmp    BYTE PTR [eax+0x25],bl
1001696f:	je     0x100169a0
10016971:	jmp    0x1001699e
10016973:	add    eax,0x4
10016976:	push   eax
10016977:	call   DWORD PTR ds:0x100660f0
1001697d:	mov    eax,DWORD PTR [ebp-0x10]
10016980:	cmp    BYTE PTR [eax+0x25],bl
10016983:	je     0x100169a0
10016985:	mov    eax,DWORD PTR [eax+0x1c]
10016988:	call   0x10025b5a
1001698d:	cmp    eax,ebx
1001698f:	mov    DWORD PTR [esi],ebx
10016991:	je     0x1001699b
10016993:	mov    ecx,DWORD PTR [eax+0x18]
10016996:	sub    ecx,DWORD PTR [eax+0x20]
10016999:	mov    DWORD PTR [esi],ecx
1001699b:	mov    eax,DWORD PTR [ebp-0x10]
1001699e:	xor    edi,edi
100169a0:	add    eax,0x4
100169a3:	push   eax
100169a4:	call   DWORD PTR ds:0x100660ec
100169aa:	cmp    edi,0xffffffff
100169ad:	jne    0x100169d6
100169af:	push   DWORD PTR [ebp+0x30]
100169b2:	push   DWORD PTR [ebp+0x2c]
100169b5:	push   DWORD PTR [ebp+0x28]
100169b8:	push   DWORD PTR [ebp+0x24]
100169bb:	push   DWORD PTR [ebp+0x20]
100169be:	push   DWORD PTR [ebp+0x1c]
100169c1:	push   DWORD PTR [ebp+0x18]
100169c4:	push   DWORD PTR [ebp+0x14]
100169c7:	push   esi
100169c8:	push   DWORD PTR [ebp+0xc]
100169cb:	push   DWORD PTR [ebp+0x8]
100169ce:	call   DWORD PTR ds:0x10080cc0
100169d4:	mov    edi,eax
100169d6:	lea    ecx,[ebp-0x10]
100169d9:	call   0x10015efd
100169de:	mov    eax,edi
100169e0:	call   0x10059bfd
100169e5:	ret    0x2c
100169e8:	push   ebp
100169e9:	mov    ebp,esp
100169eb:	sub    esp,0x10
100169ee:	or     DWORD PTR [ebp-0x4],0xffffffff
100169f2:	push   ebx
100169f3:	push   edi
100169f4:	mov    edi,DWORD PTR ds:0x100660f0
100169fa:	lea    eax,[esi+0x4]
100169fd:	push   eax
100169fe:	mov    DWORD PTR [ebp-0x8],eax
10016a01:	call   edi
10016a03:	xor    ebx,ebx
10016a05:	cmp    DWORD PTR [esi+0x38],ebx
10016a08:	je     0x10016a20
10016a0a:	mov    eax,DWORD PTR [ebp+0xc]
10016a0d:	mov    ecx,DWORD PTR [ebp+0x14]
10016a10:	or     DWORD PTR [ebp-0x4],0xffffffff
10016a14:	mov    DWORD PTR [eax],ebx
10016a16:	mov    eax,DWORD PTR [esi+0x38]
10016a19:	mov    DWORD PTR [ecx],eax
10016a1b:	jmp    0x10016ace
10016a20:	cmp    BYTE PTR [esi+0x26],bl
10016a23:	je     0x10016a4e
10016a25:	push   DWORD PTR [ebp-0x8]
10016a28:	call   DWORD PTR ds:0x100660ec
10016a2e:	mov    eax,DWORD PTR [esi+0x28]
10016a31:	mov    DWORD PTR [ebp-0x10],eax
10016a34:	mov    eax,DWORD PTR [esi+0x30]
10016a37:	push   0xffffffff
10016a39:	mov    DWORD PTR [ebp-0xc],eax
10016a3c:	push   ebx
10016a3d:	lea    eax,[ebp-0x10]
10016a40:	push   eax
10016a41:	push   0x2
10016a43:	call   DWORD PTR ds:0x100660e8
10016a49:	push   DWORD PTR [ebp-0x8]
10016a4c:	call   edi
10016a4e:	mov    ebx,DWORD PTR [esi+0x1c]
10016a51:	cmp    BYTE PTR [ebx+0x1],0x0
10016a55:	je     0x10016a7f
10016a57:	lea    eax,[ebx+0x38]
10016a5a:	push   eax
10016a5b:	mov    DWORD PTR [ebp-0xc],eax
10016a5e:	call   edi
10016a60:	push   DWORD PTR [ebp-0xc]
10016a63:	xor    edi,edi
10016a65:	cmp    DWORD PTR [ebx+0x28],edi
10016a68:	setne  bl
10016a6b:	call   DWORD PTR ds:0x100660ec
10016a71:	test   bl,bl
10016a73:	jne    0x10016a7f
10016a75:	mov    eax,DWORD PTR [ebp+0xc]
10016a78:	mov    DWORD PTR [eax],edi
10016a7a:	mov    DWORD PTR [ebp-0x4],edi
10016a7d:	jmp    0x10016ace
10016a7f:	mov    eax,DWORD PTR [ebp+0x10]
10016a82:	mov    eax,DWORD PTR [eax]
10016a84:	mov    ebx,DWORD PTR [ebp+0x8]
10016a87:	mov    edi,DWORD PTR [esi+0x1c]
10016a8a:	shr    eax,1
10016a8c:	and    eax,0xffffff01
10016a91:	push   eax
10016a92:	push   DWORD PTR [ebx]
10016a94:	mov    eax,DWORD PTR [ebp+0xc]
10016a97:	push   DWORD PTR [ebx+0x4]
10016a9a:	call   0x100161b9
10016a9f:	mov    ecx,DWORD PTR [ebp+0x10]
10016aa2:	xor    eax,eax
10016aa4:	mov    DWORD PTR [ecx],eax
10016aa6:	mov    ecx,DWORD PTR [ebp+0xc]
10016aa9:	add    esp,0xc
10016aac:	cmp    DWORD PTR [ecx],eax
10016aae:	jne    0x10016acb
10016ab0:	cmp    DWORD PTR [ebx+0x4],eax
10016ab3:	je     0x10016acb
10016ab5:	mov    al,BYTE PTR [esi+0x26]
10016ab8:	mov    ecx,DWORD PTR [ebp+0x14]
10016abb:	neg    al
10016abd:	sbb    eax,eax
10016abf:	and    eax,0x13
10016ac2:	add    eax,0x2733
10016ac7:	mov    DWORD PTR [ecx],eax
10016ac9:	jmp    0x10016ace
10016acb:	mov    DWORD PTR [ebp-0x4],eax
10016ace:	push   DWORD PTR [ebp-0x8]
10016ad1:	call   DWORD PTR ds:0x100660ec
10016ad7:	mov    eax,DWORD PTR [ebp-0x4]
10016ada:	pop    edi
10016adb:	pop    ebx
10016adc:	leave  
10016add:	ret    0x10
10016ae0:	push   0x4
10016ae2:	mov    eax,0x10063bbf
10016ae7:	call   0x10059b25
10016aec:	push   DWORD PTR [ebp+0x8]
10016aef:	call   0x10016051
10016af4:	pop    ecx
10016af5:	mov    DWORD PTR [ebp-0x10],eax
10016af8:	mov    ecx,DWORD PTR [ebp+0x18]
10016afb:	xor    edx,edx
10016afd:	cmp    DWORD PTR [ebp+0x1c],edx
10016b00:	mov    DWORD PTR [ebp-0x4],edx
10016b03:	jne    0x10016b26
10016b05:	cmp    eax,edx
10016b07:	je     0x10016b26
10016b09:	cmp    BYTE PTR [eax+0x25],dl
10016b0c:	je     0x10016b26
10016b0e:	test   BYTE PTR [ecx],0x1
10016b11:	jne    0x10016b26
10016b13:	push   DWORD PTR [ebp+0x28]
10016b16:	mov    esi,eax
10016b18:	push   ecx
10016b19:	push   DWORD PTR [ebp+0x14]
10016b1c:	push   DWORD PTR [ebp+0xc]
10016b1f:	call   0x100169e8
10016b24:	jmp    0x10016b45
10016b26:	push   DWORD PTR [ebp+0x28]
10016b29:	push   DWORD PTR [ebp+0x24]
10016b2c:	push   DWORD PTR [ebp+0x20]
10016b2f:	push   DWORD PTR [ebp+0x1c]
10016b32:	push   ecx
10016b33:	push   DWORD PTR [ebp+0x14]
10016b36:	push   DWORD PTR [ebp+0x10]
10016b39:	push   DWORD PTR [ebp+0xc]
10016b3c:	push   DWORD PTR [ebp+0x8]
10016b3f:	call   DWORD PTR ds:0x10080ccc
10016b45:	lea    ecx,[ebp-0x10]
10016b48:	mov    esi,eax
10016b4a:	call   0x10015efd
10016b4f:	mov    eax,esi
10016b51:	call   0x10059bfd
10016b56:	ret    0x24
10016b59:	push   ebp
10016b5a:	mov    ebp,esp
10016b5c:	push   ecx
10016b5d:	mov    edx,DWORD PTR [ebp+0x8]
10016b60:	xor    ecx,ecx
10016b62:	mov    DWORD PTR [eax],ecx
10016b64:	cmp    DWORD PTR [edx],ecx
10016b66:	mov    DWORD PTR [ebp-0x4],ecx
10016b69:	jbe    0x10016bae
10016b6b:	push   ebx
10016b6c:	push   esi
10016b6d:	push   edi
10016b6e:	lea    esi,[edx+0x4]
10016b71:	mov    ebx,DWORD PTR [eax]
10016b73:	xor    ecx,ecx
10016b75:	test   ebx,ebx
10016b77:	jbe    0x10016b8d
10016b79:	mov    edi,DWORD PTR [esi]
10016b7b:	lea    edx,[eax+0x4]
10016b7e:	cmp    DWORD PTR [edx],edi
10016b80:	je     0x10016b8a
10016b82:	inc    ecx
10016b83:	add    edx,0x4
10016b86:	cmp    ecx,ebx
10016b88:	jb     0x10016b7e
10016b8a:	mov    edx,DWORD PTR [ebp+0x8]
10016b8d:	cmp    ecx,ebx
10016b8f:	jne    0x10016b9e
10016b91:	cmp    ebx,0x40
10016b94:	jae    0x10016b9e
10016b96:	mov    edi,DWORD PTR [esi]
10016b98:	mov    DWORD PTR [eax+ecx*4+0x4],edi
10016b9c:	inc    DWORD PTR [eax]
10016b9e:	inc    DWORD PTR [ebp-0x4]
10016ba1:	mov    ecx,DWORD PTR [ebp-0x4]
10016ba4:	add    esi,0x4
10016ba7:	cmp    ecx,DWORD PTR [edx]
10016ba9:	jb     0x10016b71
10016bab:	pop    edi
10016bac:	pop    esi
10016bad:	pop    ebx
10016bae:	leave  
10016baf:	ret    
10016bb0:	push   ebp
10016bb1:	mov    ebp,esp
10016bb3:	and    esp,0xfffffff8
10016bb6:	push   0xffffffff
10016bb8:	push   0x100651bb
10016bbd:	mov    eax,fs:0x0
10016bc3:	push   eax
10016bc4:	sub    esp,0xa88
10016bca:	push   ebx
10016bcb:	push   esi
10016bcc:	push   edi
10016bcd:	mov    eax,ds:0x1007e030
10016bd2:	xor    eax,esp
10016bd4:	push   eax
10016bd5:	lea    eax,[esp+0xa98]
10016bdc:	mov    fs:0x0,eax
10016be2:	xor    ebx,ebx
10016be4:	mov    DWORD PTR [esp+0x1c],ebx
10016be8:	or     DWORD PTR [esp+0x2c],0xffffffff
10016bed:	mov    edi,0x10015efd
10016bf2:	push   edi
10016bf3:	mov    esi,0x1001735c
10016bf8:	push   esi
10016bf9:	push   0x40
10016bfb:	push   0x4
10016bfd:	lea    eax,[esp+0x8a4]
10016c04:	push   eax
10016c05:	mov    DWORD PTR [esp+0xab4],ebx
10016c0c:	call   0x10045ee8
10016c11:	push   edi
10016c12:	push   esi
10016c13:	push   0x40
10016c15:	push   0x4
10016c17:	lea    eax,[esp+0x7a4]
10016c1e:	push   eax
10016c1f:	mov    BYTE PTR [esp+0xab4],0x1
10016c27:	call   0x10045ee8
10016c2c:	push   edi
10016c2d:	push   esi
10016c2e:	push   0x40
10016c30:	push   0x4
10016c32:	lea    eax,[esp+0x9a4]
10016c39:	push   eax
10016c3a:	mov    BYTE PTR [esp+0xab4],0x2
10016c42:	call   0x10045ee8
10016c47:	cmp    DWORD PTR [ebp+0xc],ebx
10016c4a:	mov    BYTE PTR [esp+0xaa0],0x3
10016c52:	mov    DWORD PTR [esp+0x28],ebx
10016c56:	mov    DWORD PTR [esp+0x18],ebx
10016c5a:	mov    DWORD PTR [esp+0x584],ebx
10016c61:	je     0x10016d47
10016c67:	mov    eax,DWORD PTR [ebp+0xc]
10016c6a:	mov    eax,DWORD PTR [eax]
10016c6c:	cmp    eax,0x40
10016c6f:	jbe    0x10016c7f
10016c71:	mov    eax,DWORD PTR [ebp+0x1c]
10016c74:	mov    DWORD PTR [eax],0x2747
10016c7a:	jmp    0x100172e4
10016c7f:	and    DWORD PTR [esp+0x14],0x0
10016c84:	test   eax,eax
10016c86:	jbe    0x10016d47
10016c8c:	mov    edi,DWORD PTR [ebp+0xc]
10016c8f:	lea    ebx,[esp+0x894]
10016c96:	add    edi,0x4
10016c99:	push   DWORD PTR [edi]
10016c9b:	call   0x10016051
10016ca0:	test   eax,eax
10016ca2:	pop    ecx
10016ca3:	mov    DWORD PTR [esp+0x20],eax
10016ca7:	je     0x10016cf2
10016ca9:	cmp    BYTE PTR [eax+0x25],0x0
10016cad:	je     0x10016cf2
10016caf:	cmp    DWORD PTR [esp+0x1c],0x0
10016cb4:	jne    0x10016cc5
10016cb6:	push   0x1
10016cb8:	lea    esi,[esp+0x20]
10016cbc:	call   0x10015f10
10016cc1:	mov    eax,DWORD PTR [esp+0x20]
10016cc5:	push   0x1
10016cc7:	mov    esi,ebx
10016cc9:	call   0x10015f10
10016cce:	inc    DWORD PTR [esp+0x28]
10016cd2:	and    DWORD PTR [esp+0x30],0x0
10016cd7:	push   0x1
10016cd9:	xor    eax,eax
10016cdb:	lea    esi,[esp+0x24]
10016cdf:	add    ebx,0x4
10016ce2:	call   0x10015f10
10016ce7:	lea    ecx,[esp+0x30]
10016ceb:	call   0x10015efd
10016cf0:	jmp    0x10016d28
10016cf2:	mov    edx,DWORD PTR [esp+0x584]
10016cf9:	xor    eax,eax
10016cfb:	test   edx,edx
10016cfd:	jbe    0x10016d0f
10016cff:	mov    ecx,DWORD PTR [edi]
10016d01:	cmp    DWORD PTR [esp+eax*4+0x588],ecx
10016d08:	je     0x10016d0f
10016d0a:	inc    eax
10016d0b:	cmp    eax,edx
10016d0d:	jb     0x10016d01
10016d0f:	cmp    eax,edx
10016d11:	jne    0x10016d28
10016d13:	cmp    edx,0x40
10016d16:	jae    0x10016d28
10016d18:	mov    ecx,DWORD PTR [edi]
10016d1a:	mov    DWORD PTR [esp+eax*4+0x588],ecx
10016d21:	inc    DWORD PTR [esp+0x584]
10016d28:	lea    ecx,[esp+0x20]
10016d2c:	call   0x10015efd
10016d31:	inc    DWORD PTR [esp+0x14]
10016d35:	mov    eax,DWORD PTR [ebp+0xc]
10016d38:	mov    ecx,DWORD PTR [esp+0x14]
10016d3c:	add    edi,0x4
10016d3f:	cmp    ecx,DWORD PTR [eax]
10016d41:	jb     0x10016c99
10016d47:	mov    esi,DWORD PTR [ebp+0x10]
10016d4a:	and    DWORD PTR [esp+0x5c],0x0
10016d4f:	and    DWORD PTR [esp+0x47c],0x0
10016d57:	test   esi,esi
10016d59:	je     0x10016e6d
10016d5f:	mov    eax,DWORD PTR [esi]
10016d61:	cmp    eax,0x40
10016d64:	ja     0x10016c71
10016d6a:	and    DWORD PTR [esp+0x14],0x0
10016d6f:	test   eax,eax
10016d71:	jbe    0x10016e6d
10016d77:	lea    ebx,[esp+0x794]
10016d7e:	lea    edi,[esi+0x4]
10016d81:	push   DWORD PTR [edi]
10016d83:	call   0x10016051
10016d88:	test   eax,eax
10016d8a:	pop    ecx
10016d8b:	mov    DWORD PTR [esp+0x20],eax
10016d8f:	jne    0x10016db6
10016d91:	mov    edx,DWORD PTR [esp+0x5c]
10016d95:	test   edx,edx
10016d97:	jbe    0x10016da6
10016d99:	mov    ecx,DWORD PTR [edi]
10016d9b:	cmp    DWORD PTR [esp+eax*4+0x60],ecx
10016d9f:	je     0x10016da6
10016da1:	inc    eax
10016da2:	cmp    eax,edx
10016da4:	jb     0x10016d9b
10016da6:	cmp    eax,edx
10016da8:	jne    0x10016e51
10016dae:	cmp    edx,0x40
10016db1:	jmp    0x10016e45
10016db6:	cmp    BYTE PTR [eax+0x25],0x0
10016dba:	je     0x10016de7
10016dbc:	cmp    DWORD PTR [esp+0x1c],0x0
10016dc1:	jne    0x10016dd2
10016dc3:	push   0x1
10016dc5:	lea    esi,[esp+0x20]
10016dc9:	call   0x10015f10
10016dce:	mov    eax,DWORD PTR [esp+0x20]
10016dd2:	push   0x1
10016dd4:	mov    esi,ebx
10016dd6:	call   0x10015f10
10016ddb:	inc    DWORD PTR [esp+0x18]
10016ddf:	mov    esi,DWORD PTR [ebp+0x10]
10016de2:	add    ebx,0x4
10016de5:	jmp    0x10016e51
10016de7:	cmp    BYTE PTR [eax+0x24],0x0
10016deb:	je     0x10016e23
10016ded:	mov    edx,DWORD PTR [esp+0x47c]
10016df4:	xor    eax,eax
10016df6:	test   edx,edx
10016df8:	jbe    0x10016e0a
10016dfa:	mov    ecx,DWORD PTR [edi]
10016dfc:	cmp    DWORD PTR [esp+eax*4+0x480],ecx
10016e03:	je     0x10016e0a
10016e05:	inc    eax
10016e06:	cmp    eax,edx
10016e08:	jb     0x10016dfc
10016e0a:	cmp    eax,edx
10016e0c:	jne    0x10016e23
10016e0e:	cmp    edx,0x40
10016e11:	jae    0x10016e23
10016e13:	mov    ecx,DWORD PTR [edi]
10016e15:	mov    DWORD PTR [esp+eax*4+0x480],ecx
10016e1c:	inc    DWORD PTR [esp+0x47c]
10016e23:	xor    eax,eax
10016e25:	cmp    eax,DWORD PTR [esp+0x5c]
10016e29:	jae    0x10016e3e
10016e2b:	mov    ecx,DWORD PTR [edi]
10016e2d:	cmp    DWORD PTR [esp+eax*4+0x60],ecx
10016e31:	je     0x10016e3a
10016e33:	inc    eax
10016e34:	cmp    eax,DWORD PTR [esp+0x5c]
10016e38:	jb     0x10016e2d
10016e3a:	cmp    eax,DWORD PTR [esp+0x5c]
10016e3e:	jne    0x10016e51
10016e40:	cmp    DWORD PTR [esp+0x5c],0x40
10016e45:	jae    0x10016e51
10016e47:	mov    ecx,DWORD PTR [edi]
10016e49:	mov    DWORD PTR [esp+eax*4+0x60],ecx
10016e4d:	inc    DWORD PTR [esp+0x5c]
10016e51:	lea    ecx,[esp+0x20]
10016e55:	call   0x10015efd
10016e5a:	inc    DWORD PTR [esp+0x14]
10016e5e:	mov    eax,DWORD PTR [esp+0x14]
10016e62:	add    edi,0x4
10016e65:	cmp    eax,DWORD PTR [esi]
10016e67:	jb     0x10016d81
10016e6d:	mov    edi,DWORD PTR [ebp+0x14]
10016e70:	xor    ebx,ebx
10016e72:	cmp    edi,ebx
10016e74:	mov    DWORD PTR [esp+0x164],ebx
10016e7b:	je     0x10016edd
10016e7d:	mov    eax,DWORD PTR [edi]
10016e7f:	cmp    eax,0x40
10016e82:	ja     0x10016c71
10016e88:	cmp    eax,ebx
10016e8a:	jbe    0x10016edd
10016e8c:	lea    ecx,[edi+0x4]
10016e8f:	mov    esi,eax
10016e91:	xor    eax,eax
10016e93:	cmp    DWORD PTR [esp+0x164],ebx
10016e9a:	jbe    0x10016eb1
10016e9c:	mov    edx,DWORD PTR [ecx]
10016e9e:	cmp    DWORD PTR [esp+eax*4+0x168],edx
10016ea5:	je     0x10016eb1
10016ea7:	inc    eax
10016ea8:	cmp    eax,DWORD PTR [esp+0x164]
10016eaf:	jb     0x10016e9e
10016eb1:	cmp    eax,DWORD PTR [esp+0x164]
10016eb8:	jne    0x10016ed4
10016eba:	cmp    DWORD PTR [esp+0x164],0x40
10016ec2:	jae    0x10016ed4
10016ec4:	mov    edx,DWORD PTR [ecx]
10016ec6:	mov    DWORD PTR [esp+eax*4+0x168],edx
10016ecd:	inc    DWORD PTR [esp+0x164]
10016ed4:	add    ecx,0x4
10016ed7:	dec    esi
10016ed8:	jne    0x10016e91
10016eda:	mov    esi,DWORD PTR [ebp+0x10]
10016edd:	mov    eax,DWORD PTR [esp+0x1c]
10016ee1:	cmp    eax,ebx
10016ee3:	je     0x10017228
10016ee9:	cmp    BYTE PTR [eax+0x25],0x0
10016eed:	je     0x10017228
10016ef3:	xor    eax,eax
10016ef5:	mov    WORD PTR [esp+0x3c],bx
10016efa:	lea    edi,[esp+0x3e]
10016efe:	stos   DWORD PTR es:[edi],eax
10016eff:	stos   DWORD PTR es:[edi],eax
10016f00:	stos   DWORD PTR es:[edi],eax
10016f01:	stos   WORD PTR es:[edi],ax
10016f03:	xor    eax,eax
10016f05:	mov    DWORD PTR [esp+0x20],ebx
10016f09:	lea    edi,[esp+0x24]
10016f0d:	stos   DWORD PTR es:[edi],eax
10016f0e:	lea    eax,[esp+0x3c]
10016f12:	push   eax
10016f13:	call   DWORD PTR ds:0x10066140
10016f19:	lea    eax,[esp+0x20]
10016f1d:	push   eax
10016f1e:	lea    eax,[esp+0x40]
10016f22:	push   eax
10016f23:	call   DWORD PTR ds:0x10066104
10016f29:	mov    ecx,DWORD PTR [ebp+0x18]
10016f2c:	xor    eax,eax
10016f2e:	cmp    ecx,ebx
10016f30:	lea    edi,[esp+0x58]
10016f34:	mov    DWORD PTR [esp+0x54],ebx
10016f38:	stos   DWORD PTR es:[edi],eax
10016f39:	je     0x10016f65
10016f3b:	mov    eax,DWORD PTR [ecx]
10016f3d:	imul   eax,eax,0x3e8
10016f43:	add    eax,DWORD PTR [ecx+0x4]
10016f46:	imul   eax,eax,0x2710
10016f4c:	cdq    
10016f4d:	add    DWORD PTR [esp+0x20],eax
10016f51:	lea    eax,[esp+0x3c]
10016f55:	push   eax
10016f56:	adc    DWORD PTR [esp+0x28],edx
10016f5a:	lea    eax,[esp+0x24]
10016f5e:	push   eax
10016f5f:	call   DWORD PTR ds:0x10066120
10016f65:	mov    eax,DWORD PTR [esp+0x18]
10016f69:	mov    ecx,DWORD PTR [esp+0x28]
10016f6d:	add    eax,ecx
10016f6f:	mov    DWORD PTR [esp+0x14],ebx
10016f73:	mov    DWORD PTR [esp+0x30],eax
10016f77:	push   0x1
10016f79:	call   DWORD PTR ds:0x100660bc
10016f7f:	cmp    DWORD PTR [esp+0x584],ebx
10016f86:	mov    DWORD PTR [esp+0x26c],ebx
10016f8d:	mov    DWORD PTR [esp+0x374],ebx
10016f94:	mov    DWORD PTR [esp+0x68c],ebx
10016f9b:	ja     0x10016fac
10016f9d:	cmp    DWORD PTR [esp+0x5c],ebx
10016fa1:	ja     0x10016fac
10016fa3:	cmp    DWORD PTR [esp+0x164],ebx
10016faa:	jbe    0x10017015
10016fac:	lea    eax,[esp+0x584]
10016fb3:	push   eax
10016fb4:	lea    eax,[esp+0x270]
10016fbb:	call   0x10016b59
10016fc0:	pop    ecx
10016fc1:	lea    eax,[esp+0x5c]
10016fc5:	push   eax
10016fc6:	lea    eax,[esp+0x378]
10016fcd:	call   0x10016b59
10016fd2:	pop    ecx
10016fd3:	lea    eax,[esp+0x164]
10016fda:	push   eax
10016fdb:	lea    eax,[esp+0x690]
10016fe2:	call   0x10016b59
10016fe7:	pop    ecx
10016fe8:	push   DWORD PTR [ebp+0x1c]
10016feb:	lea    eax,[esp+0x58]
10016fef:	push   eax
10016ff0:	lea    eax,[esp+0x694]
10016ff7:	push   eax
10016ff8:	lea    eax,[esp+0x380]
10016fff:	push   eax
10017000:	lea    eax,[esp+0x27c]
10017007:	push   eax
10017008:	push   DWORD PTR [ebp+0x8]
1001700b:	mov    eax,DWORD PTR [esp+0x34]
1001700f:	call   DWORD PTR [eax+0x94]
10017015:	cmp    DWORD PTR [esp+0x30],ebx
10017019:	jbe    0x10017155
1001701f:	xor    edi,edi
10017021:	cmp    DWORD PTR [esp+0x28],ebx
10017025:	je     0x100170ba
1001702b:	lea    esi,[esp+edi*4+0x894]
10017032:	mov    eax,DWORD PTR [esi]
10017034:	add    eax,0x4
10017037:	push   eax
10017038:	call   DWORD PTR ds:0x100660f0
1001703e:	mov    eax,DWORD PTR [esi]
10017040:	mov    ecx,DWORD PTR [eax+0x28]
10017043:	mov    DWORD PTR [esp+0x34],ecx
10017047:	mov    ecx,DWORD PTR [eax+0x30]
1001704a:	mov    DWORD PTR [esp+0x38],ecx
1001704e:	cmp    DWORD PTR [eax+0x38],ebx
10017051:	jne    0x10017069
10017053:	push   ebx
10017054:	push   ebx
10017055:	lea    eax,[esp+0x3c]
10017059:	push   eax
1001705a:	push   0x2
1001705c:	call   DWORD PTR ds:0x100660e8
10017062:	cmp    eax,0x102
10017067:	je     0x100170a3
10017069:	mov    edx,DWORD PTR [esp+0x26c]
10017070:	xor    ecx,ecx
10017072:	cmp    edx,ebx
10017074:	jbe    0x10017088
10017076:	mov    eax,DWORD PTR [esi]
10017078:	mov    eax,DWORD PTR [eax]
1001707a:	cmp    DWORD PTR [esp+ecx*4+0x270],eax
10017081:	je     0x10017088
10017083:	inc    ecx
10017084:	cmp    ecx,edx
10017086:	jb     0x1001707a
10017088:	cmp    ecx,edx
1001708a:	jne    0x100170a3
1001708c:	cmp    edx,0x40
1001708f:	jae    0x100170a3
10017091:	mov    eax,DWORD PTR [esi]
10017093:	mov    eax,DWORD PTR [eax]
10017095:	mov    DWORD PTR [esp+ecx*4+0x270],eax
1001709c:	inc    DWORD PTR [esp+0x26c]
100170a3:	mov    esi,DWORD PTR [esi]
100170a5:	add    esi,0x4
100170a8:	push   esi
100170a9:	call   DWORD PTR ds:0x100660ec
100170af:	inc    edi
100170b0:	cmp    edi,DWORD PTR [esp+0x28]
100170b4:	jne    0x1001702b
100170ba:	xor    edi,edi
100170bc:	cmp    DWORD PTR [esp+0x18],ebx
100170c0:	je     0x10017155
100170c6:	lea    esi,[esp+edi*4+0x794]
100170cd:	mov    eax,DWORD PTR [esi]
100170cf:	add    eax,0x4
100170d2:	push   eax
100170d3:	call   DWORD PTR ds:0x100660f0
100170d9:	mov    eax,DWORD PTR [esi]
100170db:	mov    ecx,DWORD PTR [eax+0x2c]
100170de:	mov    DWORD PTR [esp+0x34],ecx
100170e2:	mov    ecx,DWORD PTR [eax+0x30]
100170e5:	mov    DWORD PTR [esp+0x38],ecx
100170e9:	cmp    DWORD PTR [eax+0x38],ebx
100170ec:	jne    0x10017104
100170ee:	push   ebx
100170ef:	push   ebx
100170f0:	lea    eax,[esp+0x3c]
100170f4:	push   eax
100170f5:	push   0x2
100170f7:	call   DWORD PTR ds:0x100660e8
100170fd:	cmp    eax,0x102
10017102:	je     0x1001713e
10017104:	mov    edx,DWORD PTR [esp+0x374]
1001710b:	xor    ecx,ecx
1001710d:	cmp    edx,ebx
1001710f:	jbe    0x10017123
10017111:	mov    eax,DWORD PTR [esi]
10017113:	mov    eax,DWORD PTR [eax]
10017115:	cmp    DWORD PTR [esp+ecx*4+0x378],eax
1001711c:	je     0x10017123
1001711e:	inc    ecx
1001711f:	cmp    ecx,edx
10017121:	jb     0x10017115
10017123:	cmp    ecx,edx
10017125:	jne    0x1001713e
10017127:	cmp    edx,0x40
1001712a:	jae    0x1001713e
1001712c:	mov    eax,DWORD PTR [esi]
1001712e:	mov    eax,DWORD PTR [eax]
10017130:	mov    DWORD PTR [esp+ecx*4+0x378],eax
10017137:	inc    DWORD PTR [esp+0x374]
1001713e:	mov    esi,DWORD PTR [esi]
10017140:	add    esi,0x4
10017143:	push   esi
10017144:	call   DWORD PTR ds:0x100660ec
1001714a:	inc    edi
1001714b:	cmp    edi,DWORD PTR [esp+0x18]
1001714f:	jne    0x100170c6
10017155:	mov    eax,DWORD PTR [esp+0x68c]
1001715c:	mov    ecx,DWORD PTR [esp+0x374]
10017163:	lea    esi,[eax+ecx*1]
10017166:	add    esi,DWORD PTR [esp+0x26c]
1001716d:	cmp    esi,ebx
1001716f:	mov    DWORD PTR [esp+0x2c],esi
10017173:	jg     0x100171de
10017175:	cmp    DWORD PTR [ebp+0x18],ebx
10017178:	je     0x100171bf
1001717a:	lea    eax,[esp+0x3c]
1001717e:	push   eax
1001717f:	call   DWORD PTR ds:0x10066140
10017185:	xor    eax,eax
10017187:	mov    DWORD PTR [esp+0x4c],ebx
1001718b:	lea    edi,[esp+0x50]
1001718f:	stos   DWORD PTR es:[edi],eax
10017190:	lea    eax,[esp+0x3c]
10017194:	push   eax
10017195:	call   DWORD PTR ds:0x10066140
1001719b:	lea    eax,[esp+0x4c]
1001719f:	push   eax
100171a0:	lea    eax,[esp+0x40]
100171a4:	push   eax
100171a5:	call   DWORD PTR ds:0x10066104
100171ab:	lea    eax,[esp+0x20]
100171af:	push   eax
100171b0:	lea    eax,[esp+0x50]
100171b4:	push   eax
100171b5:	call   DWORD PTR ds:0x1006610c
100171bb:	test   eax,eax
100171bd:	jge    0x100171de
100171bf:	push   DWORD PTR [esp+0x14]
100171c3:	call   DWORD PTR ds:0x100660bc
100171c9:	cmp    DWORD PTR [esp+0x14],0x64
100171ce:	jae    0x10016f77
100171d4:	add    DWORD PTR [esp+0x14],0x2
100171d9:	jmp    0x10016f77
100171de:	cmp    esi,0xffffffff
100171e1:	je     0x100172e4
100171e7:	mov    eax,DWORD PTR [ebp+0xc]
100171ea:	test   eax,eax
100171ec:	je     0x100171fc
100171ee:	lea    ecx,[esp+0x26c]
100171f5:	push   ecx
100171f6:	call   0x10016b59
100171fb:	pop    ecx
100171fc:	mov    eax,DWORD PTR [ebp+0x10]
100171ff:	test   eax,eax
10017201:	je     0x10017211
10017203:	lea    ecx,[esp+0x374]
1001720a:	push   ecx
1001720b:	call   0x10016b59
10017210:	pop    ecx
10017211:	mov    eax,DWORD PTR [ebp+0x14]
10017214:	test   eax,eax
10017216:	je     0x10017240
10017218:	lea    ecx,[esp+0x68c]
1001721f:	push   ecx
10017220:	call   0x10016b59
10017225:	pop    ecx
10017226:	jmp    0x10017240
10017228:	push   DWORD PTR [ebp+0x1c]
1001722b:	push   DWORD PTR [ebp+0x18]
1001722e:	push   edi
1001722f:	push   esi
10017230:	push   DWORD PTR [ebp+0xc]
10017233:	push   DWORD PTR [ebp+0x8]
10017236:	call   DWORD PTR ds:0x10080cd8
1001723c:	mov    DWORD PTR [esp+0x2c],eax
10017240:	cmp    DWORD PTR [esp+0x2c],0xffffffff
10017245:	je     0x100172e4
1001724b:	cmp    DWORD PTR [ebp+0x10],0x0
1001724f:	je     0x100172e4
10017255:	cmp    DWORD PTR [esp+0x47c],0x0
1001725d:	jbe    0x100172e4
10017263:	xor    ebx,ebx
10017265:	cmp    DWORD PTR [esp+0x47c],ebx
1001726c:	je     0x100172e4
1001726e:	mov    edi,DWORD PTR [ebp+0x10]
10017271:	add    edi,0x4
10017274:	mov    esi,DWORD PTR [edi]
10017276:	lea    eax,[esp+0x47c]
1001727d:	push   eax
1001727e:	push   esi
1001727f:	call   0x10050d7c
10017284:	test   eax,eax
10017286:	je     0x100172d7
10017288:	push   esi
10017289:	call   0x10016051
1001728e:	pop    ecx
1001728f:	mov    DWORD PTR [esp+0x18],eax
10017293:	test   eax,eax
10017295:	mov    BYTE PTR [esp+0xaa0],0x4
1001729d:	je     0x100172ce
1001729f:	add    eax,0x4
100172a2:	push   eax
100172a3:	call   DWORD PTR ds:0x100660f0
100172a9:	mov    eax,DWORD PTR [esp+0x18]
100172ad:	cmp    BYTE PTR [eax+0x25],0x0
100172b1:	jne    0x100172c4
100172b3:	mov    BYTE PTR [eax+0x24],0x0
100172b7:	mov    esi,DWORD PTR [esp+0x18]
100172bb:	call   0x10016229
100172c0:	mov    eax,DWORD PTR [esp+0x18]
100172c4:	add    eax,0x4
100172c7:	push   eax
100172c8:	call   DWORD PTR ds:0x100660ec
100172ce:	lea    ecx,[esp+0x18]
100172d2:	call   0x10015efd
100172d7:	inc    ebx
100172d8:	add    edi,0x4
100172db:	cmp    ebx,DWORD PTR [esp+0x47c]
100172e2:	jne    0x10017274
100172e4:	mov    esi,0x10015efd
100172e9:	push   esi
100172ea:	push   0x40
100172ec:	push   0x4
100172ee:	lea    eax,[esp+0x9a0]
100172f5:	push   eax
100172f6:	mov    BYTE PTR [esp+0xab0],0x2
100172fe:	call   0x100431e9
10017303:	push   esi
10017304:	push   0x40
10017306:	push   0x4
10017308:	lea    eax,[esp+0x7a0]
1001730f:	push   eax
10017310:	mov    BYTE PTR [esp+0xab0],0x1
10017318:	call   0x100431e9
1001731d:	push   esi
1001731e:	push   0x40
10017320:	push   0x4
10017322:	lea    eax,[esp+0x8a0]
10017329:	push   eax
1001732a:	mov    BYTE PTR [esp+0xab0],0x0
10017332:	call   0x100431e9
10017337:	lea    ecx,[esp+0x1c]
1001733b:	call   0x10015efd
10017340:	mov    eax,DWORD PTR [esp+0x2c]
10017344:	mov    ecx,DWORD PTR [esp+0xa98]
1001734b:	mov    DWORD PTR fs:0x0,ecx
10017352:	pop    ecx
10017353:	pop    edi
10017354:	pop    esi
10017355:	pop    ebx
10017356:	mov    esp,ebp
10017358:	pop    ebp
10017359:	ret    0x18
1001735c:	and    DWORD PTR [ecx],0x0
1001735f:	ret    
10017360:	push   0x14
10017362:	push   0x10075300
10017367:	call   0x10046d84
1001736c:	mov    ebx,DWORD PTR [ebp+0x8]
1001736f:	or     DWORD PTR [ebp-0x20],0xffffffff
10017373:	xor    esi,esi
10017375:	cmp    DWORD PTR [ebx+0x1c],esi
10017378:	je     0x10017433
1001737e:	cmp    DWORD PTR [ebx+0x38],esi
10017381:	je     0x10017396
10017383:	mov    eax,DWORD PTR [ebp+0x14]
10017386:	mov    DWORD PTR [eax],esi
10017388:	mov    eax,DWORD PTR [ebx+0x38]
1001738b:	mov    DWORD PTR [ecx],eax
1001738d:	or     DWORD PTR [ebp-0x20],0xffffffff
10017391:	jmp    0x10017433
10017396:	mov    DWORD PTR [ebp-0x1c],esi
10017399:	mov    DWORD PTR [ebp-0x4],esi
1001739c:	mov    eax,ebx
1001739e:	call   0x1001615f
100173a3:	xor    eax,eax
100173a5:	mov    DWORD PTR [ebp-0x24],eax
100173a8:	cmp    eax,DWORD PTR [ebp+0x10]
100173ab:	je     0x10017408
100173ad:	mov    ecx,DWORD PTR [ebp+0xc]
100173b0:	lea    edi,[ecx+eax*8]
100173b3:	mov    eax,DWORD PTR [edi]
100173b5:	mov    ecx,DWORD PTR [edi+0x4]
100173b8:	mov    edx,DWORD PTR [ebx+0x1c]
100173bb:	mov    esi,DWORD PTR [edx+0x30]
100173be:	mov    DWORD PTR [esi+0xc],ecx
100173c1:	mov    DWORD PTR [esi+0x10],eax
100173c4:	mov    BYTE PTR [esi+0x18],0x0
100173c8:	and    DWORD PTR [esi+0x14],0x0
100173cc:	push   DWORD PTR [esi+0x4]
100173cf:	call   DWORD PTR ds:0x10066110
100173d5:	mov    eax,DWORD PTR [esi+0x8]
100173d8:	push   0xffffffff
100173da:	push   eax
100173db:	call   DWORD PTR ds:0x10066084
100173e1:	mov    esi,DWORD PTR [esi+0x14]
100173e4:	add    DWORD PTR [ebp-0x1c],esi
100173e7:	cmp    esi,DWORD PTR [edi]
100173e9:	jae    0x100173fc
100173eb:	cmp    BYTE PTR [ebx+0x26],0x0
100173ef:	je     0x10017406
100173f1:	push   0xc8
100173f6:	call   DWORD PTR ds:0x100660bc
100173fc:	inc    DWORD PTR [ebp-0x24]
100173ff:	mov    eax,DWORD PTR [ebp-0x24]
10017402:	xor    esi,esi
10017404:	jmp    0x100173a8
10017406:	xor    esi,esi
10017408:	cmp    DWORD PTR [ebp-0x1c],esi
1001740b:	jne    0x1001741c
1001740d:	mov    eax,DWORD PTR [ebx+0x20]
10017410:	cmp    eax,0x1
10017413:	mov    DWORD PTR [ebp-0x20],0x2746
1001741a:	je     0x1001741f
1001741c:	mov    DWORD PTR [ebp-0x20],esi
1001741f:	mov    DWORD PTR [ebp-0x4],0xfffffffe
10017426:	call   0x1001743f
1001742b:	mov    eax,DWORD PTR [ebp+0x14]
1001742e:	mov    ecx,DWORD PTR [ebp-0x1c]
10017431:	mov    DWORD PTR [eax],ecx
10017433:	mov    eax,DWORD PTR [ebp-0x20]
10017436:	call   0x10046dc9
1001743b:	ret    
1001743c:	mov    ebx,DWORD PTR [ebp+0x8]
1001743f:	add    ebx,0x4
10017442:	push   ebx
10017443:	call   DWORD PTR ds:0x100660ec
10017449:	ret    
1001744a:	push   0x4
1001744c:	mov    eax,0x10063bbf
10017451:	call   0x10059b25
10017456:	push   DWORD PTR [ebp+0x8]
10017459:	call   0x10016051
1001745e:	pop    ecx
1001745f:	mov    DWORD PTR [ebp-0x10],eax
10017462:	xor    ecx,ecx
10017464:	cmp    DWORD PTR [ebp+0x1c],ecx
10017467:	mov    DWORD PTR [ebp-0x4],ecx
1001746a:	jne    0x1001748c
1001746c:	cmp    eax,ecx
1001746e:	je     0x1001748c
10017470:	cmp    BYTE PTR [eax+0x25],cl
10017473:	je     0x1001748c
10017475:	push   DWORD PTR [ebp+0x14]
10017478:	mov    ecx,DWORD PTR [ebp+0x28]
1001747b:	push   DWORD PTR [ebp+0x10]
1001747e:	push   DWORD PTR [ebp+0xc]
10017481:	push   eax
10017482:	call   0x10017360
10017487:	add    esp,0x10
1001748a:	jmp    0x100174ad
1001748c:	push   DWORD PTR [ebp+0x28]
1001748f:	push   DWORD PTR [ebp+0x24]
10017492:	push   DWORD PTR [ebp+0x20]
10017495:	push   DWORD PTR [ebp+0x1c]
10017498:	push   DWORD PTR [ebp+0x18]
1001749b:	push   DWORD PTR [ebp+0x14]
1001749e:	push   DWORD PTR [ebp+0x10]
100174a1:	push   DWORD PTR [ebp+0xc]
100174a4:	push   DWORD PTR [ebp+0x8]
100174a7:	call   DWORD PTR ds:0x10080cdc
100174ad:	lea    ecx,[ebp-0x10]
100174b0:	mov    esi,eax
100174b2:	call   0x10015efd
100174b7:	mov    eax,esi
100174b9:	call   0x10059bfd
100174be:	ret    0x24
100174c1:	push   0x10
100174c3:	mov    eax,0x1006444b
100174c8:	call   0x10059b58
100174cd:	push   DWORD PTR [ebp+0x20]
100174d0:	mov    edi,DWORD PTR [ebp+0x14]
100174d3:	push   DWORD PTR [ebp+0x1c]
100174d6:	xor    esi,esi
100174d8:	mov    DWORD PTR [ebp-0x14],esi
100174db:	push   DWORD PTR [ebp+0x18]
100174de:	push   edi
100174df:	push   DWORD PTR [ebp+0x10]
100174e2:	push   DWORD PTR [ebp+0xc]
100174e5:	push   DWORD PTR [ebp+0x8]
100174e8:	call   DWORD PTR ds:0x10080cf0
100174ee:	xor    ebx,ebx
100174f0:	mov    DWORD PTR [ebp+0x1c],eax
100174f3:	mov    eax,ds:0x10080c7c
100174f8:	inc    ebx
100174f9:	cmp    eax,ebx
100174fb:	je     0x10017502
100174fd:	cmp    eax,0x4
10017500:	jne    0x10017518
10017502:	push   esi
10017503:	push   ebx
10017504:	push   0x10080e84
10017509:	call   DWORD PTR ds:0x100660e0
1001750f:	cmp    eax,esi
10017511:	jne    0x10017518
10017513:	call   0x100123bf
10017518:	mov    DWORD PTR [ebp-0x4],esi
1001751b:	call   0x10018782
10017520:	test   al,al
10017522:	je     0x1001755b
10017524:	push   esi
10017525:	push   0x10080da0
1001752a:	call   DWORD PTR ds:0x100660e4
10017530:	test   eax,eax
10017532:	jne    0x10017555
10017534:	push   ebx
10017535:	lea    eax,[ebp+0x18]
10017538:	push   eax
10017539:	call   0x10034a90
1001753e:	push   ebx
1001753f:	mov    BYTE PTR [ebp-0x4],bl
10017542:	push   eax
10017543:	lea    ecx,[ebp-0x1c]
10017546:	mov    DWORD PTR [ebp-0x14],ebx
10017549:	call   0x10035b10
1001754e:	mov    ecx,DWORD PTR [eax]
10017550:	or     ecx,DWORD PTR [eax+0x4]
10017553:	jne    0x1001755b
10017555:	mov    BYTE PTR [ebp+0x23],0x0
10017559:	jmp    0x1001755e
1001755b:	mov    BYTE PTR [ebp+0x23],bl
1001755e:	mov    DWORD PTR [ebp-0x4],esi
10017561:	test   BYTE PTR [ebp-0x14],bl
10017564:	je     0x1001756f
10017566:	push   DWORD PTR [ebp+0x18]
10017569:	call   DWORD PTR ds:0x10066070
1001756f:	cmp    BYTE PTR [ebp+0x23],0x0
10017573:	jne    0x100175ac
10017575:	mov    esi,DWORD PTR [ebp+0x1c]
10017578:	or     DWORD PTR [ebp-0x4],0xffffffff
1001757c:	cmp    esi,0xffffffff
1001757f:	je     0x10017594
10017581:	cmp    DWORD PTR [ebp+0xc],0x2
10017585:	je     0x10017594
10017587:	cmp    DWORD PTR [edi+0x58],0x2
1001758b:	je     0x10017594
1001758d:	push   esi
1001758e:	call   0x10015f39
10017593:	pop    ecx
10017594:	mov    eax,esi
10017596:	jmp    0x100175af
10017598:	mov    eax,0x100175ac
1001759d:	ret    
1001759e:	push   0x4
100175a0:	call   0x100379e0
100175a5:	pop    ecx
100175a6:	mov    eax,0x100175ac
100175ab:	ret    
100175ac:	mov    eax,DWORD PTR [ebp+0x1c]
100175af:	call   0x10059bfd
100175b4:	ret    0x1c
100175b7:	push   ebp
100175b8:	mov    ebp,esp
100175ba:	pop    ebp
100175bb:	jmp    DWORD PTR ds:0x10080ce8
100175c1:	push   ebp
100175c2:	mov    ebp,esp
100175c4:	and    esp,0xfffffff8
100175c7:	push   esi
100175c8:	push   edi
100175c9:	push   0x4d8ea152
100175ce:	push   0x7b33736c
100175d3:	push   0x1006f848
100175d8:	call   0x100042bd
100175dd:	pop    ecx
100175de:	pop    ecx
100175df:	push   eax
100175e0:	call   0x100042bd
100175e5:	push   eax
100175e6:	push   0xc
100175e8:	push   0x1006f870
100175ed:	call   0x100042cf
100175f2:	mov    esi,DWORD PTR ds:0x100663e0
100175f8:	add    esp,0x14
100175fb:	push   eax
100175fc:	call   esi
100175fe:	mov    edi,DWORD PTR ds:0x100663a8
10017604:	push   eax
10017605:	call   edi
10017607:	cmp    ebx,eax
10017609:	jb     0x10017652
1001760b:	push   0x9ad0c7e
10017610:	push   0x69a59914
10017615:	push   0xabd9de6
1001761a:	push   0x1006f880
1001761f:	call   0x100042bd
10017624:	pop    ecx
10017625:	pop    ecx
10017626:	push   eax
10017627:	call   0x100042bd
1001762c:	pop    ecx
1001762d:	pop    ecx
1001762e:	push   eax
1001762f:	call   0x100042bd
10017634:	push   eax
10017635:	push   0xc
10017637:	push   0x1006f8b8
1001763c:	call   0x100042cf
10017641:	add    esp,0x14
10017644:	push   eax
10017645:	call   esi
10017647:	push   eax
10017648:	call   edi
1001764a:	cmp    ebx,eax
1001764c:	jbe    0x1001796f
10017652:	push   0x78527836
10017657:	push   0x1006f8c8
1001765c:	call   0x100042bd
10017661:	push   eax
10017662:	push   0xc
10017664:	push   0x1006f8ec
10017669:	call   0x100042cf
1001766e:	add    esp,0x14
10017671:	push   eax
10017672:	call   esi
10017674:	push   eax
10017675:	call   edi
10017677:	cmp    ebx,eax
10017679:	jb     0x100176cf
1001767b:	push   0x1da325a2
10017680:	push   0x59b38c76
10017685:	push   0x621c61cc
1001768a:	push   0x4fc360d8
1001768f:	push   0x1006f900
10017694:	call   0x100042bd
10017699:	pop    ecx
1001769a:	pop    ecx
1001769b:	push   eax
1001769c:	call   0x100042bd
100176a1:	pop    ecx
100176a2:	pop    ecx
100176a3:	push   eax
100176a4:	call   0x100042bd
100176a9:	pop    ecx
100176aa:	pop    ecx
100176ab:	push   eax
100176ac:	call   0x100042bd
100176b1:	push   eax
100176b2:	push   0xc
100176b4:	push   0x1006f940
100176b9:	call   0x100042cf
100176be:	add    esp,0x14
100176c1:	push   eax
100176c2:	call   esi
100176c4:	push   eax
100176c5:	call   edi
100176c7:	cmp    ebx,eax
100176c9:	jbe    0x1001796f
100176cf:	push   0x1006f950
100176d4:	push   0xd
100176d6:	push   0x1006f988
100176db:	call   0x100042cf
100176e0:	add    esp,0xc
100176e3:	push   eax
100176e4:	call   esi
100176e6:	push   eax
100176e7:	call   edi
100176e9:	cmp    ebx,eax
100176eb:	jb     0x10017727
100176ed:	push   0x192448c2
100176f2:	push   0x2102f16
100176f7:	push   0x1006f998
100176fc:	call   0x100042bd
10017701:	pop    ecx
10017702:	pop    ecx
10017703:	push   eax
10017704:	call   0x100042bd
10017709:	push   eax
1001770a:	push   0xd
1001770c:	push   0x1006f9d0
10017711:	call   0x100042cf
10017716:	add    esp,0x14
10017719:	push   eax
1001771a:	call   esi
1001771c:	push   eax
1001771d:	call   edi
1001771f:	cmp    ebx,eax
10017721:	jbe    0x1001796f
10017727:	push   0x1006f9e0
1001772c:	push   0xc
1001772e:	push   0x1006fa08
10017733:	call   0x100042cf
10017738:	add    esp,0xc
1001773b:	push   eax
1001773c:	call   esi
1001773e:	push   eax
1001773f:	call   edi
10017741:	cmp    ebx,eax
10017743:	jb     0x10017799
10017745:	push   0x39c51638
1001774a:	push   0x1ea5bf34
1001774f:	push   0x25bdae9e
10017754:	push   0x4837a054
10017759:	push   0x1006fa18
1001775e:	call   0x100042bd
10017763:	pop    ecx
10017764:	pop    ecx
10017765:	push   eax
10017766:	call   0x100042bd
1001776b:	pop    ecx
1001776c:	pop    ecx
1001776d:	push   eax
1001776e:	call   0x100042bd
10017773:	pop    ecx
10017774:	pop    ecx
10017775:	push   eax
10017776:	call   0x100042bd
1001777b:	push   eax
1001777c:	push   0xc
1001777e:	push   0x1006fa48
10017783:	call   0x100042cf
10017788:	add    esp,0x14
1001778b:	push   eax
1001778c:	call   esi
1001778e:	push   eax
1001778f:	call   edi
10017791:	cmp    ebx,eax
10017793:	jbe    0x1001796f
10017799:	push   0x768482dc
1001779e:	push   0x2b69f6b8
100177a3:	push   0x1006fa58
100177a8:	call   0x100042bd
100177ad:	pop    ecx
100177ae:	pop    ecx
100177af:	push   eax
100177b0:	call   0x100042bd
100177b5:	push   eax
100177b6:	push   0xe
100177b8:	push   0x1006fa7c
100177bd:	call   0x100042cf
100177c2:	add    esp,0x14
100177c5:	push   eax
100177c6:	call   esi
100177c8:	push   eax
100177c9:	call   edi
100177cb:	cmp    ebx,eax
100177cd:	jb     0x100177f1
100177cf:	push   0x1006fa8c
100177d4:	push   0xe
100177d6:	push   0x1006fab4
100177db:	call   0x100042cf
100177e0:	add    esp,0xc
100177e3:	push   eax
100177e4:	call   esi
100177e6:	push   eax
100177e7:	call   edi
100177e9:	cmp    ebx,eax
100177eb:	jbe    0x1001796f
100177f1:	push   0x7ba4e78c
100177f6:	push   0x554711b0
100177fb:	push   0x1006fac4
10017800:	call   0x100042bd
10017805:	pop    ecx
10017806:	pop    ecx
10017807:	push   eax
10017808:	call   0x100042bd
1001780d:	push   eax
1001780e:	push   0xc
10017810:	push   0x1006faec
10017815:	call   0x100042cf
1001781a:	add    esp,0x14
1001781d:	push   eax
1001781e:	call   esi
10017820:	push   eax
10017821:	call   edi
10017823:	cmp    ebx,eax
10017825:	jb     0x10017854
10017827:	push   0x220635aa
1001782c:	push   0x1006fafc
10017831:	call   0x100042bd
10017836:	push   eax
10017837:	push   0xc
10017839:	push   0x1006fb28
1001783e:	call   0x100042cf
10017843:	add    esp,0x14
10017846:	push   eax
10017847:	call   esi
10017849:	push   eax
1001784a:	call   edi
1001784c:	cmp    ebx,eax
1001784e:	jbe    0x1001796f
10017854:	push   0x6b6b2bca
10017859:	push   0xc4bc6f2
1001785e:	push   0xb0d73f6
10017863:	push   0x1006fb38
10017868:	call   0x100042bd
1001786d:	pop    ecx
1001786e:	pop    ecx
1001786f:	push   eax
10017870:	call   0x100042bd
10017875:	pop    ecx
10017876:	pop    ecx
10017877:	push   eax
10017878:	call   0x100042bd
1001787d:	push   eax
1001787e:	push   0xc
10017880:	push   0x1006fb68
10017885:	call   0x100042cf
1001788a:	add    esp,0x14
1001788d:	push   eax
1001788e:	call   esi
10017890:	push   eax
10017891:	call   edi
10017893:	cmp    ebx,eax
10017895:	jb     0x100178f4
10017897:	push   0x279ae34c
1001789c:	push   0x3f315e14
100178a1:	push   0x1266e0f8
100178a6:	push   0x5fd1886a
100178ab:	push   0x580e4d98
100178b0:	push   0x1006fb78
100178b5:	call   0x100042bd
100178ba:	pop    ecx
100178bb:	pop    ecx
100178bc:	push   eax
100178bd:	call   0x100042bd
100178c2:	pop    ecx
100178c3:	pop    ecx
100178c4:	push   eax
100178c5:	call   0x100042bd
100178ca:	pop    ecx
100178cb:	pop    ecx
100178cc:	push   eax
100178cd:	call   0x100042bd
100178d2:	pop    ecx
100178d3:	pop    ecx
100178d4:	push   eax
100178d5:	call   0x100042bd
100178da:	push   eax
100178db:	push   0xc
100178dd:	push   0x1006fbb8
100178e2:	call   0x100042cf
100178e7:	add    esp,0x14
100178ea:	push   eax
100178eb:	call   esi
100178ed:	push   eax
100178ee:	call   edi
100178f0:	cmp    ebx,eax
100178f2:	jbe    0x1001796f
100178f4:	push   0x1006fbc8
100178f9:	push   0xc
100178fb:	push   0x1006fbfc
10017900:	call   0x100042cf
10017905:	add    esp,0xc
10017908:	push   eax
10017909:	call   esi
1001790b:	push   eax
1001790c:	call   edi
1001790e:	cmp    ebx,eax
10017910:	jb     0x10017974
10017912:	push   0x653ac8cc
10017917:	push   0x142f92dc
1001791c:	push   0x65a8a282
10017921:	push   0x778b0344
10017926:	push   0x7ba6ab5e
1001792b:	push   0x1006fc0c
10017930:	call   0x100042bd
10017935:	pop    ecx
10017936:	pop    ecx
10017937:	push   eax
10017938:	call   0x100042bd
1001793d:	pop    ecx
1001793e:	pop    ecx
1001793f:	push   eax
10017940:	call   0x100042bd
10017945:	pop    ecx
10017946:	pop    ecx
10017947:	push   eax
10017948:	call   0x100042bd
1001794d:	pop    ecx
1001794e:	pop    ecx
1001794f:	push   eax
10017950:	call   0x100042bd
10017955:	push   eax
10017956:	push   0xc
10017958:	push   0x1006fc44
1001795d:	call   0x100042cf
10017962:	add    esp,0x14
10017965:	push   eax
10017966:	call   esi
10017968:	push   eax
10017969:	call   edi
1001796b:	cmp    ebx,eax
1001796d:	ja     0x10017974
1001796f:	xor    eax,eax
10017971:	inc    eax
10017972:	jmp    0x10017976
10017974:	xor    eax,eax
10017976:	pop    edi
10017977:	pop    esi
10017978:	mov    esp,ebp
1001797a:	pop    ebp
1001797b:	ret    
1001797c:	mov    eax,DWORD PTR [esp+0x4]
10017980:	mov    ecx,DWORD PTR [eax]
10017982:	push   0x1006d1a4
10017987:	push   0x1006fc54
1001798c:	push   eax
1001798d:	call   DWORD PTR [ecx+0xc]
10017990:	ret    0x4
10017993:	mov    eax,DWORD PTR [esi+0x8]
10017996:	push   0x4
10017998:	inc    eax
10017999:	push   eax
1001799a:	push   DWORD PTR [esi]
1001799c:	call   0x100464b3
100179a1:	add    esp,0xc
100179a4:	test   eax,eax
100179a6:	jne    0x100179ac
100179a8:	xor    eax,eax
100179aa:	jmp    0x100179f2
100179ac:	mov    DWORD PTR [esi],eax
100179ae:	mov    eax,DWORD PTR [esi+0x8]
100179b1:	push   0x4
100179b3:	inc    eax
100179b4:	push   eax
100179b5:	push   DWORD PTR [esi+0x4]
100179b8:	call   0x100464b3
100179bd:	add    esp,0xc
100179c0:	test   eax,eax
100179c2:	je     0x100179a8
100179c4:	mov    DWORD PTR [esi+0x4],eax
100179c7:	mov    eax,DWORD PTR [esi+0x8]
100179ca:	mov    ecx,eax
100179cc:	mov    eax,DWORD PTR [esi]
100179ce:	shl    ecx,0x2
100179d1:	add    eax,ecx
100179d3:	je     0x100179dd
100179d5:	mov    edx,DWORD PTR [esp+0x4]
100179d9:	mov    edx,DWORD PTR [edx]
100179db:	mov    DWORD PTR [eax],edx
100179dd:	mov    eax,DWORD PTR [esi+0x4]
100179e0:	add    eax,ecx
100179e2:	je     0x100179ec
100179e4:	mov    ecx,DWORD PTR [esp+0x8]
100179e8:	mov    ecx,DWORD PTR [ecx]
100179ea:	mov    DWORD PTR [eax],ecx
100179ec:	inc    DWORD PTR [esi+0x8]
100179ef:	xor    eax,eax
100179f1:	inc    eax
100179f2:	ret    0x8
100179f5:	mov    eax,DWORD PTR [esi]
100179f7:	test   eax,eax
100179f9:	je     0x10017a05
100179fb:	push   eax
100179fc:	call   0x100435f8
10017a01:	and    DWORD PTR [esi],0x0
10017a04:	pop    ecx
10017a05:	mov    eax,DWORD PTR [esi+0x4]
10017a08:	test   eax,eax
10017a0a:	je     0x10017a17
10017a0c:	push   eax
10017a0d:	call   0x100435f8
10017a12:	and    DWORD PTR [esi+0x4],0x0
10017a16:	pop    ecx
10017a17:	and    DWORD PTR [esi+0x8],0x0
10017a1b:	ret    
10017a1c:	test   eax,eax
10017a1e:	jl     0x10017a2c
10017a20:	cmp    eax,DWORD PTR [ecx+0x8]
10017a23:	jge    0x10017a2c
10017a25:	mov    ecx,DWORD PTR [ecx+0x4]
10017a28:	lea    eax,[ecx+eax*4]
10017a2b:	ret    
10017a2c:	push   0x0
10017a2e:	push   0x0
10017a30:	push   0x1
10017a32:	push   0xc000008c
10017a37:	call   DWORD PTR ds:0x10066128
10017a3d:	int3   
10017a3e:	push   DWORD PTR [esi]
10017a40:	call   0x100434b0
10017a45:	and    DWORD PTR [esi],0x0
10017a48:	pop    ecx
10017a49:	ret    
10017a4a:	lea    ecx,[eax+0x4]
10017a4d:	cmp    DWORD PTR [eax],ecx
10017a4f:	je     0x10017a56
10017a51:	jmp    0x10017bdf
10017a56:	ret    
10017a57:	push   ebp
10017a58:	mov    ebp,esp
10017a5a:	and    esp,0xfffffff8
10017a5d:	push   ecx
10017a5e:	push   ecx
10017a5f:	mov    eax,ds:0x10080e7c
10017a64:	mov    edx,DWORD PTR [eax]
10017a66:	push   esi
10017a67:	push   edi
10017a68:	mov    ecx,0x10080e78
10017a6d:	push   eax
10017a6e:	mov    esi,ecx
10017a70:	push   esi
10017a71:	push   edx
10017a72:	push   ecx
10017a73:	lea    edi,[esp+0x18]
10017a77:	call   0x10017be8
10017a7c:	push   DWORD PTR ds:0x10080e7c
10017a82:	call   0x10042f82
10017a87:	and    DWORD PTR ds:0x10080e7c,0x0
10017a8e:	and    DWORD PTR ds:0x10080e80,0x0
10017a95:	pop    ecx
10017a96:	pop    edi
10017a97:	pop    esi
10017a98:	mov    esp,ebp
10017a9a:	pop    ebp
10017a9b:	ret    
10017a9c:	push   ebp
10017a9d:	mov    ebp,esp
10017a9f:	sub    esp,0x14
10017aa2:	mov    ecx,DWORD PTR ds:0x10080e7c
10017aa8:	mov    eax,DWORD PTR [ecx+0x4]
10017aab:	cmp    BYTE PTR [eax+0x15],0x0
10017aaf:	push   ebx
10017ab0:	push   esi
10017ab1:	mov    ebx,ecx
10017ab3:	mov    BYTE PTR [ebp-0x8],0x1
10017ab7:	jne    0x10017ada
10017ab9:	mov    edx,DWORD PTR [ebp+0x8]
10017abc:	mov    esi,DWORD PTR [edx]
10017abe:	cmp    esi,DWORD PTR [eax+0xc]
10017ac1:	mov    ebx,eax
10017ac3:	setb   BYTE PTR [ebp-0x8]
10017ac7:	cmp    BYTE PTR [ebp-0x8],0x0
10017acb:	je     0x10017ad1
10017acd:	mov    eax,DWORD PTR [eax]
10017acf:	jmp    0x10017ad4
10017ad1:	mov    eax,DWORD PTR [eax+0x8]
10017ad4:	cmp    BYTE PTR [eax+0x15],0x0
10017ad8:	je     0x10017abe
10017ada:	cmp    BYTE PTR [ebp-0x8],0x0
10017ade:	mov    eax,ebx
10017ae0:	mov    DWORD PTR [ebp-0xc],eax
10017ae3:	mov    DWORD PTR [ebp-0x10],0x10080e78
10017aea:	je     0x10017b14
10017aec:	cmp    ebx,DWORD PTR [ecx]
10017aee:	jne    0x10017b09
10017af0:	push   DWORD PTR [ebp+0x8]
10017af3:	push   0x1
10017af5:	lea    eax,[ebp-0x10]
10017af8:	push   eax
10017af9:	call   0x10017ce1
10017afe:	mov    ecx,DWORD PTR [eax]
10017b00:	mov    eax,DWORD PTR [eax+0x4]
10017b03:	mov    BYTE PTR [edi+0x8],0x1
10017b07:	jmp    0x10017b2b
10017b09:	lea    esi,[ebp-0x10]
10017b0c:	call   0x10017e3e
10017b11:	mov    eax,DWORD PTR [ebp-0xc]
10017b14:	mov    edx,DWORD PTR [eax+0xc]
10017b17:	mov    ecx,DWORD PTR [ebp+0x8]
10017b1a:	cmp    edx,DWORD PTR [ecx]
10017b1c:	jae    0x10017b24
10017b1e:	push   ecx
10017b1f:	push   DWORD PTR [ebp-0x8]
10017b22:	jmp    0x10017af5
10017b24:	mov    ecx,DWORD PTR [ebp-0x10]
10017b27:	mov    BYTE PTR [edi+0x8],0x0
10017b2b:	pop    esi
10017b2c:	mov    DWORD PTR [edi+0x4],eax
10017b2f:	mov    DWORD PTR [edi],ecx
10017b31:	mov    eax,edi
10017b33:	pop    ebx
10017b34:	leave  
10017b35:	ret    0x4
10017b38:	push   ebp
10017b39:	mov    ebp,esp
10017b3b:	and    esp,0xfffffff8
10017b3e:	sub    esp,0x2c
10017b41:	mov    ecx,DWORD PTR ds:0x10080e7c
10017b47:	mov    eax,DWORD PTR [ecx+0x4]
10017b4a:	cmp    BYTE PTR [eax+0x15],0x0
10017b4e:	push   ebx
10017b4f:	push   esi
10017b50:	push   edi
10017b51:	mov    DWORD PTR [esp+0x14],ecx
10017b55:	jne    0x10017b6f
10017b57:	mov    ecx,DWORD PTR [edx]
10017b59:	cmp    ecx,DWORD PTR [eax+0xc]
10017b5c:	jae    0x10017b66
10017b5e:	mov    DWORD PTR [esp+0x14],eax
10017b62:	mov    eax,DWORD PTR [eax]
10017b64:	jmp    0x10017b69
10017b66:	mov    eax,DWORD PTR [eax+0x8]
10017b69:	cmp    BYTE PTR [eax+0x15],0x0
10017b6d:	je     0x10017b59
10017b6f:	push   edx
10017b70:	lea    eax,[esp+0x24]
10017b74:	mov    edi,0x10080e78
10017b79:	call   0x10017caa
10017b7e:	mov    ecx,DWORD PTR [eax+0x4]
10017b81:	mov    ebx,DWORD PTR [eax]
10017b83:	mov    eax,DWORD PTR [eax+0x4]
10017b86:	and    DWORD PTR [esp+0x10],0x0
10017b8b:	mov    DWORD PTR [esp+0x2c],ecx
10017b8f:	mov    ecx,ebx
10017b91:	mov    DWORD PTR [esp+0x18],ecx
10017b95:	mov    DWORD PTR [esp+0x1c],eax
10017b99:	cmp    DWORD PTR [esp+0x18],0x0
10017b9e:	je     0x10017ba6
10017ba0:	cmp    DWORD PTR [esp+0x18],edi
10017ba4:	je     0x10017bab
10017ba6:	call   0x100434a0
10017bab:	mov    eax,DWORD PTR [esp+0x14]
10017baf:	cmp    DWORD PTR [esp+0x1c],eax
10017bb3:	je     0x10017bc4
10017bb5:	inc    DWORD PTR [esp+0x10]
10017bb9:	lea    esi,[esp+0x18]
10017bbd:	call   0x10018241
10017bc2:	jmp    0x10017b99
10017bc4:	push   eax
10017bc5:	push   edi
10017bc6:	push   DWORD PTR [esp+0x34]
10017bca:	lea    edi,[esp+0x2c]
10017bce:	push   ebx
10017bcf:	call   0x10017be8
10017bd4:	mov    eax,DWORD PTR [esp+0x10]
10017bd8:	pop    edi
10017bd9:	pop    esi
10017bda:	pop    ebx
10017bdb:	mov    esp,ebp
10017bdd:	pop    ebp
10017bde:	ret    
10017bdf:	push   DWORD PTR [eax]
10017be1:	call   0x100435f8
10017be6:	pop    ecx
10017be7:	ret    
10017be8:	push   ebp
10017be9:	mov    ebp,esp
10017beb:	mov    eax,ds:0x10080e7c
10017bf0:	sub    esp,0x10
10017bf3:	cmp    DWORD PTR [ebp+0x8],0x0
10017bf7:	push   ebx
10017bf8:	mov    ebx,DWORD PTR [eax]
10017bfa:	push   esi
10017bfb:	mov    esi,0x10080e78
10017c00:	je     0x10017c07
10017c02:	cmp    DWORD PTR [ebp+0x8],esi
10017c05:	je     0x10017c0c
10017c07:	call   0x100434a0
10017c0c:	cmp    DWORD PTR [ebp+0xc],ebx
10017c0f:	jne    0x10017c64
10017c11:	cmp    DWORD PTR [ebp+0x10],0x0
10017c15:	mov    ebx,DWORD PTR ds:0x10080e7c
10017c1b:	je     0x10017c22
10017c1d:	cmp    DWORD PTR [ebp+0x10],esi
10017c20:	je     0x10017c27
10017c22:	call   0x100434a0
10017c27:	cmp    DWORD PTR [ebp+0x14],ebx
10017c2a:	jne    0x10017c64
10017c2c:	mov    eax,ds:0x10080e7c
10017c31:	push   DWORD PTR [eax+0x4]
10017c34:	mov    ecx,esi
10017c36:	call   0x100181e5
10017c3b:	mov    eax,ds:0x10080e7c
10017c40:	mov    DWORD PTR [eax+0x4],eax
10017c43:	mov    eax,ds:0x10080e7c
10017c48:	and    DWORD PTR ds:0x10080e80,0x0
10017c4f:	mov    DWORD PTR [eax],eax
10017c51:	mov    eax,ds:0x10080e7c
10017c56:	mov    DWORD PTR [eax+0x8],eax
10017c59:	mov    eax,ds:0x10080e7c
10017c5e:	mov    eax,DWORD PTR [eax]
10017c60:	mov    DWORD PTR [edi],esi
10017c62:	jmp    0x10017c9f
10017c64:	mov    eax,DWORD PTR [ebp+0x8]
10017c67:	test   eax,eax
10017c69:	je     0x10017c70
10017c6b:	cmp    eax,DWORD PTR [ebp+0x10]
10017c6e:	je     0x10017c75
10017c70:	call   0x100434a0
10017c75:	mov    eax,DWORD PTR [ebp+0xc]
10017c78:	cmp    eax,DWORD PTR [ebp+0x14]
10017c7b:	je     0x10017c9a
10017c7d:	mov    ebx,DWORD PTR [ebp+0x8]
10017c80:	lea    esi,[ebp+0x8]
10017c83:	mov    DWORD PTR [ebp-0x4],eax
10017c86:	call   0x10018241
10017c8b:	push   DWORD PTR [ebp-0x4]
10017c8e:	lea    eax,[ebp-0x10]
10017c91:	push   ebx
10017c92:	push   eax
10017c93:	call   0x10017ec0
10017c98:	jmp    0x10017c64
10017c9a:	mov    ecx,DWORD PTR [ebp+0x8]
10017c9d:	mov    DWORD PTR [edi],ecx
10017c9f:	pop    esi
10017ca0:	mov    DWORD PTR [edi+0x4],eax
10017ca3:	mov    eax,edi
10017ca5:	pop    ebx
10017ca6:	leave  
10017ca7:	ret    0x10
10017caa:	mov    edx,DWORD PTR ds:0x10080e7c
10017cb0:	mov    ecx,DWORD PTR [edx+0x4]
10017cb3:	cmp    BYTE PTR [ecx+0x15],0x0
10017cb7:	jne    0x10017cd5
10017cb9:	push   esi
10017cba:	mov    esi,DWORD PTR [esp+0x8]
10017cbe:	mov    esi,DWORD PTR [esi]
10017cc0:	cmp    DWORD PTR [ecx+0xc],esi
10017cc3:	jae    0x10017cca
10017cc5:	mov    ecx,DWORD PTR [ecx+0x8]
10017cc8:	jmp    0x10017cce
10017cca:	mov    edx,ecx
10017ccc:	mov    ecx,DWORD PTR [ecx]
10017cce:	cmp    BYTE PTR [ecx+0x15],0x0
10017cd2:	je     0x10017cc0
10017cd4:	pop    esi
10017cd5:	mov    DWORD PTR [eax+0x4],edx
10017cd8:	mov    DWORD PTR [eax],0x10080e78
10017cde:	ret    0x4
10017ce1:	push   0x48
10017ce3:	mov    eax,0x100621c0
10017ce8:	call   0x10059b25
10017ced:	cmp    DWORD PTR ds:0x10080e80,0x1ffffffe
10017cf7:	jb     0x10017d2b
10017cf9:	push   0x1006d02c
10017cfe:	lea    ecx,[ebp-0x2c]
10017d01:	call   0x100011c8
10017d06:	and    DWORD PTR [ebp-0x4],0x0
10017d0a:	lea    eax,[ebp-0x2c]
10017d0d:	push   eax
10017d0e:	lea    ecx,[ebp-0x54]
10017d11:	call   0x10001065
10017d16:	push   0x10074ec8
10017d1b:	lea    eax,[ebp-0x54]
10017d1e:	push   eax
10017d1f:	mov    DWORD PTR [ebp-0x54],0x1006b96c
10017d26:	call   0x10047aa4
10017d2b:	mov    eax,ds:0x10080e7c
10017d30:	mov    esi,DWORD PTR [ebp+0x10]
10017d33:	push   eax
10017d34:	push   ebx
10017d35:	push   eax
10017d36:	call   0x100181af
10017d3b:	inc    DWORD PTR ds:0x10080e80
10017d41:	mov    edi,eax
10017d43:	mov    eax,ds:0x10080e7c
10017d48:	cmp    ebx,eax
10017d4a:	jne    0x10017d5d
10017d4c:	mov    DWORD PTR [eax+0x4],edi
10017d4f:	mov    eax,ds:0x10080e7c
10017d54:	mov    DWORD PTR [eax],edi
10017d56:	mov    eax,ds:0x10080e7c
10017d5b:	jmp    0x10017d7f
10017d5d:	cmp    BYTE PTR [ebp+0xc],0x0
10017d61:	je     0x10017d72
10017d63:	mov    DWORD PTR [ebx],edi
10017d65:	mov    eax,ds:0x10080e7c
10017d6a:	cmp    ebx,DWORD PTR [eax]
10017d6c:	jne    0x10017d82
10017d6e:	mov    DWORD PTR [eax],edi
10017d70:	jmp    0x10017d82
10017d72:	mov    DWORD PTR [ebx+0x8],edi
10017d75:	mov    eax,ds:0x10080e7c
10017d7a:	cmp    ebx,DWORD PTR [eax+0x8]
10017d7d:	jne    0x10017d82
10017d7f:	mov    DWORD PTR [eax+0x8],edi
10017d82:	mov    esi,edi
10017d84:	lea    eax,[edi+0x4]
10017d87:	jmp    0x10017e12
10017d8c:	mov    ecx,DWORD PTR [eax]
10017d8e:	mov    edx,DWORD PTR [ecx+0x4]
10017d91:	cmp    ecx,DWORD PTR [edx]
10017d93:	jne    0x10017dc8
10017d95:	mov    edx,DWORD PTR [edx+0x8]
10017d98:	cmp    BYTE PTR [edx+0x14],0x0
10017d9c:	je     0x10017dd0
10017d9e:	cmp    esi,DWORD PTR [ecx+0x8]
10017da1:	jne    0x10017daa
10017da3:	mov    esi,ecx
10017da5:	call   0x10018133
10017daa:	mov    eax,DWORD PTR [esi+0x4]
10017dad:	mov    BYTE PTR [eax+0x14],0x1
10017db1:	mov    eax,DWORD PTR [esi+0x4]
10017db4:	mov    eax,DWORD PTR [eax+0x4]
10017db7:	mov    BYTE PTR [eax+0x14],0x0
10017dbb:	mov    eax,DWORD PTR [esi+0x4]
10017dbe:	mov    ecx,DWORD PTR [eax+0x4]
10017dc1:	call   0x10018170
10017dc6:	jmp    0x10017e0f
10017dc8:	mov    edx,DWORD PTR [edx]
10017dca:	cmp    BYTE PTR [edx+0x14],0x0
10017dce:	jne    0x10017de8
10017dd0:	mov    BYTE PTR [ecx+0x14],0x1
10017dd4:	mov    BYTE PTR [edx+0x14],0x1
10017dd8:	mov    ecx,DWORD PTR [eax]
10017dda:	mov    ecx,DWORD PTR [ecx+0x4]
10017ddd:	mov    BYTE PTR [ecx+0x14],0x0
10017de1:	mov    eax,DWORD PTR [eax]
10017de3:	mov    esi,DWORD PTR [eax+0x4]
10017de6:	jmp    0x10017e0f
10017de8:	cmp    esi,DWORD PTR [ecx]
10017dea:	jne    0x10017df3
10017dec:	mov    esi,ecx
10017dee:	call   0x10018170
10017df3:	mov    eax,DWORD PTR [esi+0x4]
10017df6:	mov    BYTE PTR [eax+0x14],0x1
10017dfa:	mov    eax,DWORD PTR [esi+0x4]
10017dfd:	mov    eax,DWORD PTR [eax+0x4]
10017e00:	mov    BYTE PTR [eax+0x14],0x0
10017e04:	mov    eax,DWORD PTR [esi+0x4]
10017e07:	mov    ecx,DWORD PTR [eax+0x4]
10017e0a:	call   0x10018133
10017e0f:	lea    eax,[esi+0x4]
10017e12:	mov    ecx,DWORD PTR [eax]
10017e14:	cmp    BYTE PTR [ecx+0x14],0x0
10017e18:	je     0x10017d8c
10017e1e:	mov    eax,ds:0x10080e7c
10017e23:	mov    eax,DWORD PTR [eax+0x4]
10017e26:	mov    BYTE PTR [eax+0x14],0x1
10017e2a:	mov    eax,DWORD PTR [ebp+0x8]
10017e2d:	mov    DWORD PTR [eax+0x4],edi
10017e30:	mov    DWORD PTR [eax],0x10080e78
10017e36:	call   0x10059bfd
10017e3b:	ret    0xc
10017e3e:	push   ebx
10017e3f:	xor    ebx,ebx
10017e41:	cmp    DWORD PTR [esi],ebx
10017e43:	jne    0x10017e4a
10017e45:	call   0x100434a0
10017e4a:	mov    eax,DWORD PTR [esi+0x4]
10017e4d:	cmp    BYTE PTR [eax+0x15],bl
10017e50:	je     0x10017e5f
10017e52:	mov    eax,DWORD PTR [eax+0x8]
10017e55:	mov    DWORD PTR [esi+0x4],eax
10017e58:	cmp    BYTE PTR [eax+0x15],bl
10017e5b:	je     0x10017e9b
10017e5d:	jmp    0x10017e91
10017e5f:	mov    ecx,DWORD PTR [eax]
10017e61:	cmp    BYTE PTR [ecx+0x15],bl
10017e64:	jne    0x10017e81
10017e66:	jmp    0x10017e6a
10017e68:	mov    ecx,eax
10017e6a:	mov    eax,DWORD PTR [ecx+0x8]
10017e6d:	cmp    BYTE PTR [eax+0x15],bl
10017e70:	je     0x10017e68
10017e72:	mov    DWORD PTR [esi+0x4],ecx
10017e75:	jmp    0x10017e9b
10017e77:	mov    ecx,DWORD PTR [esi+0x4]
10017e7a:	cmp    ecx,DWORD PTR [eax]
10017e7c:	jne    0x10017e89
10017e7e:	mov    DWORD PTR [esi+0x4],eax
10017e81:	mov    eax,DWORD PTR [eax+0x4]
10017e84:	cmp    BYTE PTR [eax+0x15],bl
10017e87:	je     0x10017e77
10017e89:	mov    ecx,DWORD PTR [esi+0x4]
10017e8c:	cmp    BYTE PTR [ecx+0x15],bl
10017e8f:	je     0x10017e98
10017e91:	call   0x100434a0
10017e96:	jmp    0x10017e9b
10017e98:	mov    DWORD PTR [esi+0x4],eax
10017e9b:	mov    eax,esi
10017e9d:	pop    ebx
10017e9e:	ret    
10017e9f:	push   DWORD PTR [esp+0x8]
10017ea3:	call   0x1004507d
10017ea8:	test   eax,eax
10017eaa:	pop    ecx
10017eab:	jne    0x10017eb7
10017ead:	push   0x8007000e
10017eb2:	call   0x10001f33
10017eb7:	mov    ecx,DWORD PTR [esp+0x4]
10017ebb:	mov    DWORD PTR [ecx],eax
10017ebd:	ret    0x8
10017ec0:	push   0x48
10017ec2:	mov    eax,0x100621c0
10017ec7:	call   0x10059b25
10017ecc:	mov    ebx,DWORD PTR [ebp+0x10]
10017ecf:	cmp    BYTE PTR [ebx+0x15],0x0
10017ed3:	je     0x10017f07
10017ed5:	push   0x1006ccec
10017eda:	lea    ecx,[ebp-0x2c]
10017edd:	call   0x100011c8
10017ee2:	and    DWORD PTR [ebp-0x4],0x0
10017ee6:	lea    eax,[ebp-0x2c]
10017ee9:	push   eax
10017eea:	lea    ecx,[ebp-0x54]
10017eed:	call   0x10001065
10017ef2:	push   0x10074de8
10017ef7:	lea    eax,[ebp-0x54]
10017efa:	push   eax
10017efb:	mov    DWORD PTR [ebp-0x54],0x1006b978
10017f02:	call   0x10047aa4
10017f07:	lea    esi,[ebp+0xc]
10017f0a:	call   0x10018241
10017f0f:	mov    ecx,DWORD PTR [ebx]
10017f11:	cmp    BYTE PTR [ecx+0x15],0x0
10017f15:	je     0x10017f1c
10017f17:	mov    edi,DWORD PTR [ebx+0x8]
10017f1a:	jmp    0x10017f33
10017f1c:	mov    eax,DWORD PTR [ebx+0x8]
10017f1f:	cmp    BYTE PTR [eax+0x15],0x0
10017f23:	je     0x10017f29
10017f25:	mov    edi,ecx
10017f27:	jmp    0x10017f33
10017f29:	mov    eax,DWORD PTR [ebp+0x10]
10017f2c:	cmp    eax,ebx
10017f2e:	mov    edi,DWORD PTR [eax+0x8]
10017f31:	jne    0x10017fab
10017f33:	cmp    BYTE PTR [edi+0x15],0x0
10017f37:	mov    esi,DWORD PTR [ebx+0x4]
10017f3a:	jne    0x10017f3f
10017f3c:	mov    DWORD PTR [edi+0x4],esi
10017f3f:	mov    eax,ds:0x10080e7c
10017f44:	cmp    DWORD PTR [eax+0x4],ebx
10017f47:	jne    0x10017f4e
10017f49:	mov    DWORD PTR [eax+0x4],edi
10017f4c:	jmp    0x10017f59
10017f4e:	cmp    DWORD PTR [esi],ebx
10017f50:	jne    0x10017f56
10017f52:	mov    DWORD PTR [esi],edi
10017f54:	jmp    0x10017f59
10017f56:	mov    DWORD PTR [esi+0x8],edi
10017f59:	mov    edx,DWORD PTR ds:0x10080e7c
10017f5f:	cmp    DWORD PTR [edx],ebx
10017f61:	jne    0x10017f7f
10017f63:	cmp    BYTE PTR [edi+0x15],0x0
10017f67:	je     0x10017f6d
10017f69:	mov    ecx,esi
10017f6b:	jmp    0x10017f7d
10017f6d:	mov    eax,DWORD PTR [edi]
10017f6f:	mov    ecx,edi
10017f71:	jmp    0x10017f77
10017f73:	mov    ecx,eax
10017f75:	mov    eax,DWORD PTR [ecx]
10017f77:	cmp    BYTE PTR [eax+0x15],0x0
10017f7b:	je     0x10017f73
10017f7d:	mov    DWORD PTR [edx],ecx
10017f7f:	mov    edx,DWORD PTR ds:0x10080e7c
10017f85:	cmp    DWORD PTR [edx+0x8],ebx
10017f88:	jne    0x10018005
10017f8a:	cmp    BYTE PTR [edi+0x15],0x0
10017f8e:	je     0x10017f94
10017f90:	mov    ecx,esi
10017f92:	jmp    0x10017fa6
10017f94:	mov    eax,DWORD PTR [edi+0x8]
10017f97:	mov    ecx,edi
10017f99:	jmp    0x10017fa0
10017f9b:	mov    ecx,eax
10017f9d:	mov    eax,DWORD PTR [ecx+0x8]
10017fa0:	cmp    BYTE PTR [eax+0x15],0x0
10017fa4:	je     0x10017f9b
10017fa6:	mov    DWORD PTR [edx+0x8],ecx
10017fa9:	jmp    0x10018005
10017fab:	mov    DWORD PTR [ecx+0x4],eax
10017fae:	mov    ecx,DWORD PTR [ebx]
10017fb0:	mov    DWORD PTR [eax],ecx
10017fb2:	cmp    eax,DWORD PTR [ebx+0x8]
10017fb5:	jne    0x10017fbb
10017fb7:	mov    esi,eax
10017fb9:	jmp    0x10017fd5
10017fbb:	cmp    BYTE PTR [edi+0x15],0x0
10017fbf:	mov    esi,DWORD PTR [eax+0x4]
10017fc2:	jne    0x10017fc7
10017fc4:	mov    DWORD PTR [edi+0x4],esi
10017fc7:	mov    DWORD PTR [esi],edi
10017fc9:	mov    ecx,DWORD PTR [ebx+0x8]
10017fcc:	mov    DWORD PTR [eax+0x8],ecx
10017fcf:	mov    ecx,DWORD PTR [ebx+0x8]
10017fd2:	mov    DWORD PTR [ecx+0x4],eax
10017fd5:	mov    ecx,DWORD PTR ds:0x10080e7c
10017fdb:	cmp    DWORD PTR [ecx+0x4],ebx
10017fde:	jne    0x10017fe5
10017fe0:	mov    DWORD PTR [ecx+0x4],eax
10017fe3:	jmp    0x10017ff3
10017fe5:	mov    ecx,DWORD PTR [ebx+0x4]
10017fe8:	cmp    DWORD PTR [ecx],ebx
10017fea:	jne    0x10017ff0
10017fec:	mov    DWORD PTR [ecx],eax
10017fee:	jmp    0x10017ff3
10017ff0:	mov    DWORD PTR [ecx+0x8],eax
10017ff3:	mov    ecx,DWORD PTR [ebx+0x4]
10017ff6:	mov    DWORD PTR [eax+0x4],ecx
10017ff9:	mov    dl,BYTE PTR [ebx+0x14]
10017ffc:	mov    cl,BYTE PTR [eax+0x14]
10017fff:	mov    BYTE PTR [eax+0x14],dl
10018002:	mov    BYTE PTR [ebx+0x14],cl
10018005:	cmp    BYTE PTR [ebx+0x14],0x1
10018009:	jne    0x10018107
1001800f:	jmp    0x100180c2
10018014:	cmp    BYTE PTR [edi+0x14],0x1
10018018:	jne    0x10018103
1001801e:	mov    ecx,DWORD PTR [esi]
10018020:	cmp    edi,ecx
10018022:	jne    0x1001808b
10018024:	mov    ecx,DWORD PTR [esi+0x8]
10018027:	cmp    BYTE PTR [ecx+0x14],0x0
1001802b:	jne    0x1001803f
1001802d:	mov    BYTE PTR [ecx+0x14],0x1
10018031:	mov    ecx,esi
10018033:	mov    BYTE PTR [esi+0x14],0x0
10018037:	call   0x10018133
1001803c:	mov    ecx,DWORD PTR [esi+0x8]
1001803f:	cmp    BYTE PTR [ecx+0x15],0x0
10018043:	jne    0x100180bd
10018045:	mov    eax,DWORD PTR [ecx]
10018047:	cmp    BYTE PTR [eax+0x14],0x1
1001804b:	jne    0x10018056
1001804d:	mov    eax,DWORD PTR [ecx+0x8]
10018050:	cmp    BYTE PTR [eax+0x14],0x1
10018054:	je     0x100180b9
10018056:	mov    eax,DWORD PTR [ecx+0x8]
10018059:	cmp    BYTE PTR [eax+0x14],0x1
1001805d:	jne    0x10018071
1001805f:	mov    eax,DWORD PTR [ecx]
10018061:	mov    BYTE PTR [eax+0x14],0x1
10018065:	mov    BYTE PTR [ecx+0x14],0x0
10018069:	call   0x10018170
1001806e:	mov    ecx,DWORD PTR [esi+0x8]
10018071:	mov    al,BYTE PTR [esi+0x14]
10018074:	mov    BYTE PTR [ecx+0x14],al
10018077:	mov    BYTE PTR [esi+0x14],0x1
1001807b:	mov    eax,DWORD PTR [ecx+0x8]
1001807e:	mov    ecx,esi
10018080:	mov    BYTE PTR [eax+0x14],0x1
10018084:	call   0x10018133
10018089:	jmp    0x10018103
1001808b:	cmp    BYTE PTR [ecx+0x14],0x0
1001808f:	jne    0x100180a2
10018091:	mov    BYTE PTR [ecx+0x14],0x1
10018095:	mov    ecx,esi
10018097:	mov    BYTE PTR [esi+0x14],0x0
1001809b:	call   0x10018170
100180a0:	mov    ecx,DWORD PTR [esi]
100180a2:	cmp    BYTE PTR [ecx+0x15],0x0
100180a6:	jne    0x100180bd
100180a8:	mov    eax,DWORD PTR [ecx+0x8]
100180ab:	cmp    BYTE PTR [eax+0x14],0x1
100180af:	jne    0x100180d2
100180b1:	mov    eax,DWORD PTR [ecx]
100180b3:	cmp    BYTE PTR [eax+0x14],0x1
100180b7:	jne    0x100180d2
100180b9:	mov    BYTE PTR [ecx+0x14],0x0
100180bd:	mov    edi,esi
100180bf:	mov    esi,DWORD PTR [esi+0x4]
100180c2:	mov    eax,ds:0x10080e7c
100180c7:	cmp    edi,DWORD PTR [eax+0x4]
100180ca:	jne    0x10018014
100180d0:	jmp    0x10018103
100180d2:	mov    eax,DWORD PTR [ecx]
100180d4:	cmp    BYTE PTR [eax+0x14],0x1
100180d8:	jne    0x100180ec
100180da:	mov    eax,DWORD PTR [ecx+0x8]
100180dd:	mov    BYTE PTR [eax+0x14],0x1
100180e1:	mov    BYTE PTR [ecx+0x14],0x0
100180e5:	call   0x10018133
100180ea:	mov    ecx,DWORD PTR [esi]
100180ec:	mov    al,BYTE PTR [esi+0x14]
100180ef:	mov    BYTE PTR [ecx+0x14],al
100180f2:	mov    BYTE PTR [esi+0x14],0x1
100180f6:	mov    eax,DWORD PTR [ecx]
100180f8:	mov    ecx,esi
100180fa:	mov    BYTE PTR [eax+0x14],0x1
100180fe:	call   0x10018170
10018103:	mov    BYTE PTR [edi+0x14],0x1
10018107:	push   ebx
10018108:	call   0x10042f82
1001810d:	cmp    DWORD PTR ds:0x10080e80,0x0
10018114:	pop    ecx
10018115:	jbe    0x1001811d
10018117:	dec    DWORD PTR ds:0x10080e80
1001811d:	mov    ecx,DWORD PTR [ebp+0xc]
10018120:	mov    eax,DWORD PTR [ebp+0x8]
10018123:	mov    DWORD PTR [eax],ecx
10018125:	mov    ecx,DWORD PTR [ebp+0x10]
10018128:	mov    DWORD PTR [eax+0x4],ecx
1001812b:	call   0x10059bfd
10018130:	ret    0xc
10018133:	mov    eax,DWORD PTR [ecx+0x8]
10018136:	mov    edx,DWORD PTR [eax]
10018138:	mov    DWORD PTR [ecx+0x8],edx
1001813b:	mov    edx,DWORD PTR [eax]
1001813d:	cmp    BYTE PTR [edx+0x15],0x0
10018141:	jne    0x10018146
10018143:	mov    DWORD PTR [edx+0x4],ecx
10018146:	mov    edx,DWORD PTR [ecx+0x4]
10018149:	mov    DWORD PTR [eax+0x4],edx
1001814c:	mov    edx,DWORD PTR ds:0x10080e7c
10018152:	cmp    ecx,DWORD PTR [edx+0x4]
10018155:	jne    0x1001815c
10018157:	mov    DWORD PTR [edx+0x4],eax
1001815a:	jmp    0x1001816a
1001815c:	mov    edx,DWORD PTR [ecx+0x4]
1001815f:	cmp    ecx,DWORD PTR [edx]
10018161:	jne    0x10018167
10018163:	mov    DWORD PTR [edx],eax
10018165:	jmp    0x1001816a
10018167:	mov    DWORD PTR [edx+0x8],eax
1001816a:	mov    DWORD PTR [eax],ecx
1001816c:	mov    DWORD PTR [ecx+0x4],eax
1001816f:	ret    
10018170:	mov    eax,DWORD PTR [ecx]
10018172:	mov    edx,DWORD PTR [eax+0x8]
10018175:	mov    DWORD PTR [ecx],edx
10018177:	mov    edx,DWORD PTR [eax+0x8]
1001817a:	cmp    BYTE PTR [edx+0x15],0x0
1001817e:	jne    0x10018183
10018180:	mov    DWORD PTR [edx+0x4],ecx
10018183:	mov    edx,DWORD PTR [ecx+0x4]
10018186:	mov    DWORD PTR [eax+0x4],edx
10018189:	mov    edx,DWORD PTR ds:0x10080e7c
1001818f:	cmp    ecx,DWORD PTR [edx+0x4]
10018192:	jne    0x10018199
10018194:	mov    DWORD PTR [edx+0x4],eax
10018197:	jmp    0x100181a8
10018199:	mov    edx,DWORD PTR [ecx+0x4]
1001819c:	cmp    ecx,DWORD PTR [edx+0x8]
1001819f:	jne    0x100181a6
100181a1:	mov    DWORD PTR [edx+0x8],eax
100181a4:	jmp    0x100181a8
100181a6:	mov    DWORD PTR [edx],eax
100181a8:	mov    DWORD PTR [eax+0x8],ecx
100181ab:	mov    DWORD PTR [ecx+0x4],eax
100181ae:	ret    
100181af:	push   0x18
100181b1:	call   0x1004358e
100181b6:	test   eax,eax
100181b8:	pop    ecx
100181b9:	je     0x100181e2
100181bb:	mov    ecx,DWORD PTR [esp+0x4]
100181bf:	mov    DWORD PTR [eax],ecx
100181c1:	mov    ecx,DWORD PTR [esp+0x8]
100181c5:	mov    DWORD PTR [eax+0x4],ecx
100181c8:	mov    ecx,DWORD PTR [esp+0xc]
100181cc:	mov    DWORD PTR [eax+0x8],ecx
100181cf:	mov    ecx,DWORD PTR [esi]
100181d1:	mov    DWORD PTR [eax+0xc],ecx
100181d4:	mov    ecx,DWORD PTR [esi+0x4]
100181d7:	mov    DWORD PTR [eax+0x10],ecx
100181da:	mov    BYTE PTR [eax+0x14],0x0
100181de:	mov    BYTE PTR [eax+0x15],0x0
100181e2:	ret    0xc
100181e5:	push   ebx
100181e6:	push   esi
100181e7:	push   edi
100181e8:	mov    edi,DWORD PTR [esp+0x10]
100181ec:	cmp    BYTE PTR [edi+0x15],0x0
100181f0:	mov    ebx,ecx
100181f2:	mov    esi,edi
100181f4:	jne    0x10018211
100181f6:	push   DWORD PTR [esi+0x8]
100181f9:	mov    ecx,ebx
100181fb:	call   0x100181e5
10018200:	mov    esi,DWORD PTR [esi]
10018202:	push   edi
10018203:	call   0x10042f82
10018208:	cmp    BYTE PTR [esi+0x15],0x0
1001820c:	pop    ecx
1001820d:	mov    edi,esi
1001820f:	je     0x100181f6
10018211:	pop    edi
10018212:	pop    esi
10018213:	pop    ebx
10018214:	ret    0x4
10018217:	push   0x18
10018219:	call   0x1004358e
1001821e:	xor    edx,edx
10018220:	cmp    eax,edx
10018222:	pop    ecx
10018223:	je     0x10018227
10018225:	mov    DWORD PTR [eax],edx
10018227:	lea    ecx,[eax+0x4]
1001822a:	cmp    ecx,edx
1001822c:	je     0x10018230
1001822e:	mov    DWORD PTR [ecx],edx
10018230:	lea    ecx,[eax+0x8]
10018233:	cmp    ecx,edx
10018235:	je     0x10018239
10018237:	mov    DWORD PTR [ecx],edx
10018239:	mov    BYTE PTR [eax+0x14],0x1
1001823d:	mov    BYTE PTR [eax+0x15],dl
10018240:	ret    
10018241:	push   ebx
10018242:	xor    ebx,ebx
10018244:	cmp    DWORD PTR [esi],ebx
10018246:	jne    0x1001824d
10018248:	call   0x100434a0
1001824d:	mov    eax,DWORD PTR [esi+0x4]
10018250:	cmp    BYTE PTR [eax+0x15],bl
10018253:	je     0x1001825c
10018255:	call   0x100434a0
1001825a:	jmp    0x1001828a
1001825c:	mov    ecx,DWORD PTR [eax+0x8]
1001825f:	cmp    BYTE PTR [ecx+0x15],bl
10018262:	jne    0x1001827f
10018264:	jmp    0x10018268
10018266:	mov    ecx,eax
10018268:	mov    eax,DWORD PTR [ecx]
1001826a:	cmp    BYTE PTR [eax+0x15],bl
1001826d:	je     0x10018266
1001826f:	mov    DWORD PTR [esi+0x4],ecx
10018272:	jmp    0x1001828a
10018274:	mov    ecx,DWORD PTR [esi+0x4]
10018277:	cmp    ecx,DWORD PTR [eax+0x8]
1001827a:	jne    0x10018287
1001827c:	mov    DWORD PTR [esi+0x4],eax
1001827f:	mov    eax,DWORD PTR [eax+0x4]
10018282:	cmp    BYTE PTR [eax+0x15],bl
10018285:	je     0x10018274
10018287:	mov    DWORD PTR [esi+0x4],eax
1001828a:	mov    eax,esi
1001828c:	pop    ebx
1001828d:	ret    
1001828e:	push   ebp
1001828f:	mov    ebp,esp
10018291:	push   ecx
10018292:	push   DWORD PTR [ebp+0xc]
10018295:	lea    eax,[ebp-0x4]
10018298:	push   DWORD PTR [ebp+0x8]
1001829b:	push   eax
1001829c:	call   0x10014404
100182a1:	add    esp,0xc
100182a4:	test   eax,eax
100182a6:	jge    0x100182ae
100182a8:	push   eax
100182a9:	call   0x10001f33
100182ae:	mov    eax,DWORD PTR [ebp-0x4]
100182b1:	leave  
100182b2:	ret    
100182b3:	push   ecx
100182b4:	call   0x100190f7
100182b9:	pop    ecx
100182ba:	ret    
100182bb:	push   0x28
100182bd:	mov    eax,0x10061e18
100182c2:	call   0x10059b25
100182c7:	mov    esi,DWORD PTR [ebp+0x8]
100182ca:	xor    ebx,ebx
100182cc:	mov    DWORD PTR [ebp-0x10],ebx
100182cf:	mov    DWORD PTR [esi+0x4],ebx
100182d2:	mov    DWORD PTR [esi+0x8],ebx
100182d5:	mov    DWORD PTR [esi+0xc],ebx
100182d8:	xor    edi,edi
100182da:	inc    edi
100182db:	push   edi
100182dc:	push   0x3277885e
100182e1:	mov    DWORD PTR [ebp-0x4],ebx
100182e4:	push   0x1006fcb0
100182e9:	mov    DWORD PTR [ebp-0x10],edi
100182ec:	call   0x100042bd
100182f1:	push   eax
100182f2:	push   0x13
100182f4:	push   0x1006fce4
100182f9:	call   0x100042cf
100182fe:	push   ecx
100182ff:	push   ecx
10018300:	mov    ecx,esp
10018302:	mov    DWORD PTR [ebp-0x14],esp
10018305:	push   eax
10018306:	call   0x100011c8
1001830b:	lea    ecx,[ebp-0x34]
1001830e:	call   0x10002814
10018313:	push   eax
10018314:	mov    DWORD PTR [ebp-0x4],edi
10018317:	call   0x10004237
1001831c:	push   ebx
1001831d:	push   edi
1001831e:	lea    ecx,[ebp-0x34]
10018321:	mov    BYTE PTR [ebp-0x4],bl
10018324:	call   0x100012eb
10018329:	push   edi
1001832a:	push   0x450f296a
1001832f:	push   0x1006fcf8
10018334:	call   0x100042bd
10018339:	push   eax
1001833a:	push   0x12
1001833c:	push   0x1006fd1c
10018341:	call   0x100042cf
10018346:	push   ecx
10018347:	push   ecx
10018348:	mov    ecx,esp
1001834a:	mov    DWORD PTR [ebp-0x14],esp
1001834d:	push   eax
1001834e:	call   0x100011c8
10018353:	lea    ecx,[ebp-0x34]
10018356:	call   0x10002814
1001835b:	push   eax
1001835c:	mov    DWORD PTR [ebp-0x4],0x2
10018363:	call   0x10004237
10018368:	push   ebx
10018369:	push   edi
1001836a:	lea    ecx,[ebp-0x34]
1001836d:	mov    BYTE PTR [ebp-0x4],bl
10018370:	call   0x100012eb
10018375:	push   edi
10018376:	push   0x346e15a8
1001837b:	push   0x1006fd30
10018380:	call   0x100042bd
10018385:	push   0x3b988caa
1001838a:	push   eax
1001838b:	call   0x100042bd
10018390:	push   0x566f5e0c
10018395:	push   eax
10018396:	call   0x100042bd
1001839b:	push   0x3b520d4c
100183a0:	push   eax
100183a1:	call   0x100042bd
100183a6:	push   eax
100183a7:	push   0x14
100183a9:	push   0x1006fd6c
100183ae:	call   0x100042cf
100183b3:	add    esp,0x10
100183b6:	mov    ecx,esp
100183b8:	mov    DWORD PTR [ebp-0x14],esp
100183bb:	push   eax
100183bc:	call   0x100011c8
100183c1:	lea    ecx,[ebp-0x34]
100183c4:	call   0x10002814
100183c9:	push   eax
100183ca:	mov    DWORD PTR [ebp-0x4],0x3
100183d1:	call   0x10004237
100183d6:	push   ebx
100183d7:	push   edi
100183d8:	lea    ecx,[ebp-0x34]
100183db:	mov    BYTE PTR [ebp-0x4],bl
100183de:	call   0x100012eb
100183e3:	push   edi
100183e4:	push   0x1006fd84
100183e9:	push   0x15
100183eb:	push   0x1006fdc4
100183f0:	call   0x100042cf
100183f5:	sub    esp,0x10
100183f8:	mov    ecx,esp
100183fa:	mov    DWORD PTR [ebp-0x14],esp
100183fd:	push   eax
100183fe:	call   0x100011c8
10018403:	lea    ecx,[ebp-0x34]
10018406:	call   0x10002814
1001840b:	push   eax
1001840c:	mov    DWORD PTR [ebp-0x4],0x4
10018413:	call   0x10004237
10018418:	push   ebx
10018419:	push   edi
1001841a:	lea    ecx,[ebp-0x34]
1001841d:	mov    BYTE PTR [ebp-0x4],bl
10018420:	call   0x100012eb
10018425:	push   edi
10018426:	push   0x2ed7d1dc
1001842b:	push   0x1006fddc
10018430:	call   0x100042bd
10018435:	push   0x344efd40
1001843a:	push   eax
1001843b:	call   0x100042bd
10018440:	push   eax
10018441:	push   0x15
10018443:	push   0x1006fe18
10018448:	call   0x100042cf
1001844d:	mov    ecx,esp
1001844f:	mov    DWORD PTR [ebp-0x14],esp
10018452:	push   eax
10018453:	call   0x100011c8
10018458:	lea    ecx,[ebp-0x34]
1001845b:	call   0x10002814
10018460:	push   eax
10018461:	mov    DWORD PTR [ebp-0x4],0x5
10018468:	call   0x10004237
1001846d:	push   ebx
1001846e:	push   edi
1001846f:	lea    ecx,[ebp-0x34]
10018472:	mov    BYTE PTR [ebp-0x4],bl
10018475:	call   0x100012eb
1001847a:	push   edi
1001847b:	push   0x2d228eba
10018480:	push   0x1006fe30
10018485:	call   0x100042bd
1001848a:	push   0x5f36b698
1001848f:	push   eax
10018490:	call   0x100042bd
10018495:	push   eax
10018496:	push   0x13
10018498:	push   0x1006fe60
1001849d:	call   0x100042cf
100184a2:	mov    ecx,esp
100184a4:	mov    DWORD PTR [ebp-0x14],esp
100184a7:	push   eax
100184a8:	call   0x100011c8
100184ad:	lea    ecx,[ebp-0x34]
100184b0:	call   0x10002814
100184b5:	push   eax
100184b6:	mov    DWORD PTR [ebp-0x4],0x6
100184bd:	call   0x10004237
100184c2:	mov    BYTE PTR [ebp-0x4],bl
100184c5:	push   ebx
100184c6:	push   edi
100184c7:	lea    ecx,[ebp-0x34]
100184ca:	call   0x100012eb
100184cf:	push   edi
100184d0:	push   0x5cbe0e42
100184d5:	push   0x1006fe74
100184da:	call   0x100042bd
100184df:	push   0x422dafac
100184e4:	push   eax
100184e5:	call   0x100042bd
100184ea:	push   0x104125e6
100184ef:	push   eax
100184f0:	call   0x100042bd
100184f5:	push   eax
100184f6:	push   0x12
100184f8:	push   0x1006fe98
100184fd:	call   0x100042cf
10018502:	pop    ecx
10018503:	pop    ecx
10018504:	mov    ecx,esp
10018506:	mov    DWORD PTR [ebp-0x14],esp
10018509:	push   eax
1001850a:	call   0x100011c8
1001850f:	lea    ecx,[ebp-0x34]
10018512:	call   0x10002814
10018517:	push   eax
10018518:	mov    DWORD PTR [ebp-0x4],0x7
1001851f:	call   0x10004237
10018524:	push   ebx
10018525:	push   edi
10018526:	lea    ecx,[ebp-0x34]
10018529:	call   0x100012eb
1001852e:	mov    eax,esi
10018530:	call   0x10059bfd
10018535:	ret    
10018536:	push   ebp
10018537:	mov    ebp,esp
10018539:	push   ecx
1001853a:	push   ecx
1001853b:	call   0x10033500
10018540:	push   0x10
10018542:	push   edi
10018543:	push   esi
10018544:	mov    DWORD PTR [ebp-0x4],eax
10018547:	call   0x10045270
1001854c:	add    esp,0xc
1001854f:	xor    ecx,ecx
10018551:	xor    eax,eax
10018553:	mov    dl,BYTE PTR [eax+edi*1]
10018556:	xor    BYTE PTR [ecx+esi*1],dl
10018559:	inc    ecx
1001855a:	inc    eax
1001855b:	and    eax,0xf
1001855e:	cmp    ecx,0x10
10018561:	jne    0x10018553
10018563:	xor    ecx,ecx
10018565:	xor    eax,eax
10018567:	mov    dl,BYTE PTR [ebp+eax*1-0x4]
1001856b:	xor    BYTE PTR [ecx+esi*1],dl
1001856e:	inc    ecx
1001856f:	inc    eax
10018570:	and    eax,0x3
10018573:	cmp    ecx,0x4
10018576:	jne    0x10018567
10018578:	leave  
10018579:	ret    
1001857a:	push   ebp
1001857b:	mov    ebp,esp
1001857d:	and    esp,0xfffffff8
10018580:	push   0xffffffff
10018582:	push   0x10061dac
10018587:	mov    eax,fs:0x0
1001858d:	push   eax
1001858e:	sub    esp,0xc
10018591:	mov    eax,ds:0x1007e030
10018596:	xor    eax,esp
10018598:	push   eax
10018599:	lea    eax,[esp+0x10]
1001859d:	mov    fs:0x0,eax
100185a3:	push   0x1
100185a5:	call   0x10043811
100185aa:	pop    ecx
100185ab:	mov    DWORD PTR [esp+0x8],eax
100185af:	and    DWORD PTR [esp+0x18],0x0
100185b4:	push   0x1
100185b6:	lea    eax,[esp+0x8]
100185ba:	push   eax
100185bb:	call   0x10034a90
100185c0:	mov    BYTE PTR [esp+0x18],0x1
100185c5:	push   DWORD PTR [esp+0x8]
100185c9:	lea    eax,[esp+0x8]
100185cd:	push   0x4
100185cf:	push   eax
100185d0:	xor    ecx,ecx
100185d2:	call   0x10036a00
100185d7:	push   DWORD PTR [esp+0x4]
100185db:	call   DWORD PTR ds:0x10066070
100185e1:	push   DWORD PTR [esp+0x8]
100185e5:	call   0x10042f82
100185ea:	pop    ecx
100185eb:	mov    ecx,DWORD PTR [esp+0x10]
100185ef:	mov    DWORD PTR fs:0x0,ecx
100185f6:	pop    ecx
100185f7:	mov    esp,ebp
100185f9:	pop    ebp
100185fa:	ret    
100185fb:	push   0x3c
100185fd:	mov    eax,0x10063b9c
10018602:	call   0x10059b25
10018607:	xor    eax,eax
10018609:	mov    esi,ecx
1001860b:	mov    DWORD PTR [ebp-0x48],eax
1001860e:	mov    DWORD PTR [ebp-0x18],esi
10018611:	mov    DWORD PTR [ebp-0x24],eax
10018614:	mov    DWORD PTR [ebp-0x14],eax
10018617:	xor    ebx,ebx
10018619:	inc    ebx
1001861a:	mov    DWORD PTR [ebp-0x4],ebx
1001861d:	call   0x100040d0
10018622:	push   ebx
10018623:	lea    eax,[ebp-0x1c]
10018626:	push   eax
10018627:	mov    DWORD PTR [ebp-0x48],ebx
1001862a:	call   0x10034a90
1001862f:	lea    eax,[ebp-0x24]
10018632:	push   eax
10018633:	push   0x4
10018635:	lea    eax,[ebp-0x20]
10018638:	push   eax
10018639:	lea    eax,[ebp-0x1c]
1001863c:	push   eax
1001863d:	mov    BYTE PTR [ebp-0x4],0x2
10018641:	call   0x10036b60
10018646:	push   eax
10018647:	lea    edi,[ebp-0x14]
1001864a:	call   0x10002091
1001864f:	push   DWORD PTR [ebp-0x20]
10018652:	call   0x10042f82
10018657:	xor    esi,esi
10018659:	cmp    DWORD PTR [ebp-0x14],esi
1001865c:	pop    ecx
1001865d:	je     0x10018692
1001865f:	cmp    DWORD PTR [ebp-0x24],esi
10018662:	je     0x10018692
10018664:	push   DWORD PTR [ebp-0x24]
10018667:	lea    esi,[ebp-0x40]
1001866a:	push   DWORD PTR [ebp-0x14]
1001866d:	call   0x100040e3
10018672:	push   0xffffffff
10018674:	push   0x0
10018676:	mov    BYTE PTR [ebp-0x4],0x6
1001867a:	mov    ecx,DWORD PTR [ebp-0x18]
1001867d:	push   eax
1001867e:	call   0x1000123c
10018683:	push   0x0
10018685:	push   ebx
10018686:	mov    ecx,esi
10018688:	call   0x100012eb
1001868d:	jmp    0x10018767
10018692:	lea    edi,[ebp-0x34]
10018695:	call   0x100187b6
1001869a:	mov    BYTE PTR [ebp-0x4],0x3
1001869e:	cmp    DWORD PTR [ebp-0x30],esi
100186a1:	je     0x1001875f
100186a7:	mov    eax,DWORD PTR [ebp-0x2c]
100186aa:	sub    eax,DWORD PTR [ebp-0x30]
100186ad:	sar    eax,0x5
100186b0:	je     0x1001875f
100186b6:	call   DWORD PTR ds:0x10066118
100186bc:	push   eax
100186bd:	call   0x100464fa
100186c2:	xor    edi,edi
100186c4:	pop    ecx
100186c5:	xor    ebx,ebx
100186c7:	cmp    DWORD PTR [ebp-0x30],0x0
100186cb:	jne    0x100186d1
100186cd:	xor    eax,eax
100186cf:	jmp    0x100186da
100186d1:	mov    eax,DWORD PTR [ebp-0x2c]
100186d4:	sub    eax,DWORD PTR [ebp-0x30]
100186d7:	sar    eax,0x5
100186da:	cmp    ebx,eax
100186dc:	je     0x100186ed
100186de:	push   ebx
100186df:	lea    esi,[ebp-0x34]
100186e2:	call   0x10009e0a
100186e7:	add    edi,DWORD PTR [eax+0x1c]
100186ea:	inc    ebx
100186eb:	jmp    0x100186c7
100186ed:	call   0x10046507
100186f2:	xor    edx,edx
100186f4:	div    edi
100186f6:	xor    edi,edi
100186f8:	xor    ebx,ebx
100186fa:	mov    DWORD PTR [ebp-0x20],edx
100186fd:	xor    eax,eax
100186ff:	cmp    DWORD PTR [ebp-0x30],eax
10018702:	je     0x1001870d
10018704:	mov    eax,DWORD PTR [ebp-0x2c]
10018707:	sub    eax,DWORD PTR [ebp-0x30]
1001870a:	sar    eax,0x5
1001870d:	cmp    ebx,eax
1001870f:	je     0x1001873f
10018711:	push   ebx
10018712:	lea    esi,[ebp-0x34]
10018715:	call   0x10009e0a
1001871a:	add    edi,DWORD PTR [eax+0x1c]
1001871d:	cmp    DWORD PTR [ebp-0x20],edi
10018720:	jb     0x10018725
10018722:	inc    ebx
10018723:	jmp    0x100186fd
10018725:	push   ebx
10018726:	lea    esi,[ebp-0x34]
10018729:	call   0x10009e0a
1001872e:	mov    esi,DWORD PTR [ebp-0x18]
10018731:	push   0xffffffff
10018733:	push   0x0
10018735:	push   eax
10018736:	mov    ecx,esi
10018738:	call   0x1000123c
1001873d:	jmp    0x10018742
1001873f:	mov    esi,DWORD PTR [ebp-0x18]
10018742:	cmp    DWORD PTR [esi+0x18],0x10
10018746:	mov    ecx,DWORD PTR [esi+0x14]
10018749:	jb     0x10018750
1001874b:	mov    esi,DWORD PTR [esi+0x4]
1001874e:	jmp    0x10018753
10018750:	add    esi,0x4
10018753:	push   esi
10018754:	push   0x4
10018756:	lea    eax,[ebp-0x1c]
10018759:	push   eax
1001875a:	call   0x10036a00
1001875f:	lea    esi,[ebp-0x34]
10018762:	call   0x100047e3
10018767:	push   DWORD PTR [ebp-0x1c]
1001876a:	call   DWORD PTR ds:0x10066070
10018770:	push   DWORD PTR [ebp-0x14]
10018773:	call   0x10042f82
10018778:	mov    eax,DWORD PTR [ebp-0x18]
1001877b:	pop    ecx
1001877c:	call   0x10059bfd
10018781:	ret    
10018782:	push   0x3e8
10018787:	push   DWORD PTR ds:0x10080ec8
1001878d:	call   DWORD PTR ds:0x10066084
10018793:	test   eax,eax
10018795:	je     0x1001879a
10018797:	mov    al,0x1
10018799:	ret    
1001879a:	push   ebx
1001879b:	call   0x1001884e
100187a0:	push   DWORD PTR ds:0x10080ec8
100187a6:	mov    bl,BYTE PTR ds:0x1007f6b0
100187ac:	call   DWORD PTR ds:0x10066094
100187b2:	mov    al,bl
100187b4:	pop    ebx
100187b5:	ret    
100187b6:	push   ebp
100187b7:	mov    ebp,esp
100187b9:	and    esp,0xfffffff8
100187bc:	push   0xffffffff
100187be:	push   0x10063b48
100187c3:	mov    eax,fs:0x0
100187c9:	push   eax
100187ca:	sub    esp,0x18
100187cd:	push   esi
100187ce:	mov    eax,ds:0x1007e030
100187d3:	xor    eax,esp
100187d5:	push   eax
100187d6:	lea    eax,[esp+0x20]
100187da:	mov    fs:0x0,eax
100187e0:	and    DWORD PTR [esp+0x8],0x0
100187e5:	push   0x3e8
100187ea:	push   DWORD PTR ds:0x10080ec8
100187f0:	call   DWORD PTR ds:0x10066084
100187f6:	test   eax,eax
100187f8:	je     0x10018803
100187fa:	push   edi
100187fb:	call   0x100182bb
10018800:	pop    ecx
10018801:	jmp    0x1001883b
10018803:	call   0x1001884e
10018808:	lea    eax,[esp+0xc]
1001880c:	push   eax
1001880d:	mov    ecx,0x10080eb8
10018812:	call   0x10009d77
10018817:	and    DWORD PTR [esp+0x28],0x0
1001881c:	push   DWORD PTR ds:0x10080ec8
10018822:	call   DWORD PTR ds:0x10066094
10018828:	push   edi
10018829:	lea    ecx,[esp+0x10]
1001882d:	call   0x10009d77
10018832:	lea    esi,[esp+0xc]
10018836:	call   0x100047e3
1001883b:	mov    eax,edi
1001883d:	mov    ecx,DWORD PTR [esp+0x20]
10018841:	mov    DWORD PTR fs:0x0,ecx
10018848:	pop    ecx
10018849:	pop    esi
1001884a:	mov    esp,ebp
1001884c:	pop    ebp
1001884d:	ret    
1001884e:	push   0xac
10018853:	mov    eax,0x10063b18
10018858:	call   0x10059bc4
1001885d:	xor    ebx,ebx
1001885f:	mov    DWORD PTR [ebp-0x4],ebx
10018862:	mov    DWORD PTR [ebp-0x34],ebx
10018865:	xor    eax,eax
10018867:	lea    edi,[ebp-0x30]
1001886a:	stos   DWORD PTR es:[edi],eax
1001886b:	stos   DWORD PTR es:[edi],eax
1001886c:	stos   DWORD PTR es:[edi],eax
1001886d:	mov    DWORD PTR [ebp-0x54],ebx
10018870:	mov    DWORD PTR [ebp-0x60],ebx
10018873:	push   0x1
10018875:	lea    eax,[ebp-0x58]
10018878:	push   eax
10018879:	mov    BYTE PTR [ebp-0x4],0x2
1001887d:	call   0x10034a90
10018882:	lea    eax,[ebp-0x58]
10018885:	push   eax
10018886:	lea    ecx,[ebp-0x34]
10018889:	mov    BYTE PTR [ebp-0x4],0x3
1001888d:	call   0x100364a0
10018892:	push   0x2
10018894:	lea    eax,[ebp-0x58]
10018897:	push   eax
10018898:	lea    ecx,[ebp-0x88]
1001889e:	call   0x10035b10
100188a3:	mov    ecx,DWORD PTR [eax+0x4]
100188a6:	cmp    ecx,DWORD PTR ds:0x10080d44
100188ac:	ja     0x100188d3
100188ae:	jb     0x100188ba
100188b0:	mov    eax,DWORD PTR [eax]
100188b2:	cmp    eax,DWORD PTR ds:0x10080d40
100188b8:	ja     0x100188d3
100188ba:	push   DWORD PTR [ebp-0x58]
100188bd:	call   DWORD PTR ds:0x10066070
100188c3:	push   ebx
100188c4:	call   0x10042f82
100188c9:	pop    ecx
100188ca:	mov    BYTE PTR [ebp-0x4],bl
100188cd:	push   ebx
100188ce:	jmp    0x10018a64
100188d3:	lea    eax,[ebp-0x5c]
100188d6:	push   eax
100188d7:	push   0x2
100188d9:	lea    eax,[ebp-0x64]
100188dc:	push   eax
100188dd:	lea    eax,[ebp-0x58]
100188e0:	push   eax
100188e1:	call   0x10036b60
100188e6:	push   eax
100188e7:	lea    edi,[ebp-0x54]
100188ea:	call   0x10002091
100188ef:	push   DWORD PTR [ebp-0x64]
100188f2:	call   0x10042f82
100188f7:	cmp    DWORD PTR [ebp-0x54],ebx
100188fa:	pop    ecx
100188fb:	je     0x100188ba
100188fd:	call   0x1002fa60
10018902:	lea    esi,[ebp-0x24]
10018905:	lea    edi,[ebp-0x34]
10018908:	mov    ds:0x10080d40,eax
1001890d:	mov    DWORD PTR ds:0x10080d44,edx
10018913:	call   0x10018536
10018918:	push   0x1
1001891a:	mov    eax,esi
1001891c:	mov    esi,DWORD PTR [ebp-0x54]
1001891f:	push   eax
10018920:	push   DWORD PTR [ebp-0x5c]
10018923:	lea    eax,[ebp-0x5c]
10018926:	push   esi
10018927:	push   eax
10018928:	lea    edx,[ebp-0x65]
1001892b:	lea    ecx,[ebp-0x64]
1001892e:	call   0x10039830
10018933:	add    esp,0x14
10018936:	push   eax
10018937:	lea    edi,[ebp-0x60]
1001893a:	call   0x10002091
1001893f:	push   DWORD PTR [ebp-0x5c]
10018942:	call   0x10042f82
10018947:	mov    edi,DWORD PTR [ebp-0x60]
1001894a:	cmp    edi,ebx
1001894c:	pop    ecx
1001894d:	jne    0x10018968
1001894f:	push   DWORD PTR [ebp-0x58]
10018952:	call   DWORD PTR ds:0x10066070
10018958:	push   ebx
10018959:	call   0x10042f82
1001895e:	pop    ecx
1001895f:	mov    BYTE PTR [ebp-0x4],bl
10018962:	push   esi
10018963:	jmp    0x10018a64
10018968:	mov    eax,DWORD PTR [ebp-0x64]
1001896b:	mov    DWORD PTR [ebp-0x70],eax
1001896e:	lea    eax,[ebp-0x74]
10018971:	push   eax
10018972:	mov    DWORD PTR [ebp-0x74],ebx
10018975:	mov    DWORD PTR [ebp-0x6c],edi
10018978:	call   0x10037840
1001897d:	cmp    eax,0x1
10018980:	je     0x1001898e
10018982:	push   DWORD PTR [ebp-0x58]
10018985:	call   DWORD PTR ds:0x10066070
1001898b:	push   edi
1001898c:	jmp    0x10018959
1001898e:	lea    eax,[ebp-0x74]
10018991:	push   eax
10018992:	call   0x10037840
10018997:	cmp    eax,ebx
10018999:	setne  al
1001899c:	mov    ds:0x1007f6b0,al
100189a1:	lea    eax,[ebp-0x74]
100189a4:	push   eax
100189a5:	call   0x10037840
100189aa:	cmp    eax,ebx
100189ac:	mov    DWORD PTR [ebp-0x5c],eax
100189af:	je     0x10018982
100189b1:	mov    DWORD PTR [ebp-0x94],ebx
100189b7:	mov    DWORD PTR [ebp-0x90],ebx
100189bd:	mov    DWORD PTR [ebp-0x8c],ebx
100189c3:	mov    BYTE PTR [ebp-0x4],0x4
100189c7:	xor    edi,edi
100189c9:	cmp    edi,DWORD PTR [ebp-0x5c]
100189cc:	jge    0x10018a36
100189ce:	lea    eax,[ebp-0x74]
100189d1:	push   eax
100189d2:	lea    esi,[ebp-0x50]
100189d5:	call   0x10037500
100189da:	lea    eax,[ebp-0x74]
100189dd:	push   eax
100189de:	mov    BYTE PTR [ebp-0x4],0x5
100189e2:	call   0x10037840
100189e7:	push   eax
100189e8:	sub    esp,0x1c
100189eb:	mov    eax,esi
100189ed:	mov    ecx,esp
100189ef:	mov    DWORD PTR [ebp-0x84],esp
100189f5:	push   eax
100189f6:	call   0x100011a2
100189fb:	lea    ecx,[ebp-0xb8]
10018a01:	call   0x10002814
10018a06:	push   eax
10018a07:	lea    esi,[ebp-0x98]
10018a0d:	mov    BYTE PTR [ebp-0x4],0x6
10018a11:	call   0x10004237
10018a16:	push   ebx
10018a17:	push   0x1
10018a19:	lea    ecx,[ebp-0xb8]
10018a1f:	call   0x100012eb
10018a24:	push   ebx
10018a25:	push   0x1
10018a27:	lea    ecx,[ebp-0x50]
10018a2a:	mov    BYTE PTR [ebp-0x4],0x4
10018a2e:	call   0x100012eb
10018a33:	inc    edi
10018a34:	jmp    0x100189c9
10018a36:	lea    eax,[ebp-0x98]
10018a3c:	call   0x10018e83
10018a41:	lea    esi,[ebp-0x98]
10018a47:	call   0x100047e3
10018a4c:	push   DWORD PTR [ebp-0x58]
10018a4f:	call   DWORD PTR ds:0x10066070
10018a55:	push   DWORD PTR [ebp-0x60]
10018a58:	call   0x10042f82
10018a5d:	pop    ecx
10018a5e:	mov    BYTE PTR [ebp-0x4],bl
10018a61:	push   DWORD PTR [ebp-0x54]
10018a64:	call   0x10042f82
10018a69:	mov    eax,ds:0x10080ebc
10018a6e:	cmp    eax,ebx
10018a70:	pop    ecx
10018a71:	je     0x10018a80
10018a73:	mov    ecx,DWORD PTR ds:0x10080ec0
10018a79:	sub    ecx,eax
10018a7b:	sar    ecx,0x5
10018a7e:	jne    0x10018aa3
10018a80:	lea    eax,[ebp-0x24]
10018a83:	push   eax
10018a84:	call   0x100182bb
10018a89:	pop    ecx
10018a8a:	mov    ecx,0x10080eb8
10018a8f:	mov    BYTE PTR [ebp-0x4],0x7
10018a93:	call   0x10018d3d
10018a98:	lea    esi,[ebp-0x24]
10018a9b:	mov    BYTE PTR [ebp-0x4],bl
10018a9e:	call   0x100047e3
10018aa3:	call   0x100195b8
10018aa8:	mov    DWORD PTR [ebp-0x7c],eax
10018aab:	mov    BYTE PTR [eax+0x29],0x1
10018aaf:	mov    eax,DWORD PTR [ebp-0x7c]
10018ab2:	mov    DWORD PTR [eax+0x4],eax
10018ab5:	mov    eax,DWORD PTR [ebp-0x7c]
10018ab8:	mov    DWORD PTR [eax],eax
10018aba:	mov    eax,DWORD PTR [ebp-0x7c]
10018abd:	mov    DWORD PTR [eax+0x8],eax
10018ac0:	mov    DWORD PTR [ebp-0x78],ebx
10018ac3:	mov    BYTE PTR [ebp-0x4],0x8
10018ac7:	mov    DWORD PTR [ebp-0x54],ebx
10018aca:	mov    ecx,DWORD PTR ds:0x10080ebc
10018ad0:	cmp    ecx,ebx
10018ad2:	je     0x10018b23
10018ad4:	mov    eax,ds:0x10080ec0
10018ad9:	sub    eax,ecx
10018adb:	sar    eax,0x5
10018ade:	cmp    DWORD PTR [ebp-0x54],eax
10018ae1:	jae    0x10018b23
10018ae3:	push   DWORD PTR [ebp-0x54]
10018ae6:	mov    esi,0x10080eb8
10018aeb:	call   0x10009e0a
10018af0:	lea    ecx,[ebp-0x50]
10018af3:	push   ecx
10018af4:	mov    ecx,eax
10018af6:	call   0x10030b80
10018afb:	pop    ecx
10018afc:	push   eax
10018afd:	lea    edi,[ebp-0x74]
10018b00:	lea    ebx,[ebp-0x80]
10018b03:	mov    BYTE PTR [ebp-0x4],0x9
10018b07:	call   0x10018ec3
10018b0c:	push   0x0
10018b0e:	push   0x1
10018b10:	lea    ecx,[ebp-0x50]
10018b13:	mov    BYTE PTR [ebp-0x4],0x8
10018b17:	call   0x100012eb
10018b1c:	inc    DWORD PTR [ebp-0x54]
10018b1f:	xor    ebx,ebx
10018b21:	jmp    0x10018aca
10018b23:	lea    eax,[ebp-0x80]
10018b26:	call   0x10018f7c
10018b2b:	lea    eax,[ebp-0x80]
10018b2e:	mov    BYTE PTR [ebp-0x4],bl
10018b31:	call   0x100190f7
10018b36:	call   0x10059c20
10018b3b:	ret    
10018b3c:	push   0x4
10018b3e:	call   0x100379e0
10018b43:	pop    ecx
10018b44:	mov    eax,0x10018b36
10018b49:	ret    
10018b4a:	push   0x58
10018b4c:	mov    eax,0x10063aa5
10018b51:	call   0x10059bc4
10018b56:	xor    edi,edi
10018b58:	inc    edi
10018b59:	push   edi
10018b5a:	lea    eax,[ebp-0x40]
10018b5d:	xor    esi,esi
10018b5f:	push   eax
10018b60:	mov    DWORD PTR [ebp-0x4],esi
10018b63:	call   0x10034a90
10018b68:	lea    eax,[ebp-0x40]
10018b6b:	push   eax
10018b6c:	lea    ecx,[ebp-0x38]
10018b6f:	mov    BYTE PTR [ebp-0x4],0x1
10018b73:	call   0x100364a0
10018b78:	mov    eax,0x10080eb8
10018b7d:	call   0x10004728
10018b82:	mov    DWORD PTR [ebp-0x58],eax
10018b85:	mov    DWORD PTR [ebp-0x3c],0xc
10018b8c:	cmp    esi,DWORD PTR [ebp-0x58]
10018b8f:	jge    0x10018ba7
10018b91:	push   esi
10018b92:	call   0x10018e5e
10018b97:	mov    ecx,DWORD PTR [ebp-0x3c]
10018b9a:	mov    eax,DWORD PTR [eax+0x14]
10018b9d:	lea    eax,[ecx+eax*1+0x5]
10018ba1:	mov    DWORD PTR [ebp-0x3c],eax
10018ba4:	inc    esi
10018ba5:	jmp    0x10018b8c
10018ba7:	push   DWORD PTR [ebp-0x3c]
10018baa:	call   0x10043811
10018baf:	mov    ebx,eax
10018bb1:	pop    ecx
10018bb2:	mov    DWORD PTR [ebp-0x64],ebx
10018bb5:	push   0x4
10018bb7:	mov    BYTE PTR [ebp-0x4],0x2
10018bbb:	mov    DWORD PTR [ebp-0x60],edi
10018bbe:	pop    edi
10018bbf:	push   edi
10018bc0:	lea    eax,[ebp-0x60]
10018bc3:	push   eax
10018bc4:	push   ebx
10018bc5:	call   0x10045270
10018bca:	add    esp,0xc
10018bcd:	push   edi
10018bce:	lea    eax,[ebp+0x8]
10018bd1:	push   eax
10018bd2:	lea    eax,[ebx+0x4]
10018bd5:	push   eax
10018bd6:	call   0x10045270
10018bdb:	add    esp,0xc
10018bde:	push   edi
10018bdf:	lea    eax,[ebp-0x58]
10018be2:	push   eax
10018be3:	lea    eax,[ebx+0x8]
10018be6:	push   eax
10018be7:	call   0x10045270
10018bec:	add    esp,0xc
10018bef:	and    DWORD PTR [ebp-0x48],0x0
10018bf3:	push   0xc
10018bf5:	pop    esi
10018bf6:	mov    eax,DWORD PTR [ebp-0x48]
10018bf9:	cmp    eax,DWORD PTR [ebp-0x58]
10018bfc:	jge    0x10018c4d
10018bfe:	push   eax
10018bff:	call   0x10018e5e
10018c04:	cmp    DWORD PTR [eax+0x18],0x10
10018c08:	jb     0x10018c0f
10018c0a:	mov    eax,DWORD PTR [eax+0x4]
10018c0d:	jmp    0x10018c12
10018c0f:	add    eax,0x4
10018c12:	push   eax
10018c13:	lea    eax,[esi+ebx*1]
10018c16:	push   eax
10018c17:	call   0x10046530
10018c1c:	pop    ecx
10018c1d:	pop    ecx
10018c1e:	push   DWORD PTR [ebp-0x48]
10018c21:	call   0x10018e5e
10018c26:	mov    eax,DWORD PTR [eax+0x14]
10018c29:	push   edi
10018c2a:	push   DWORD PTR [ebp-0x48]
10018c2d:	lea    esi,[esi+eax*1+0x1]
10018c31:	call   0x10018e5e
10018c36:	add    eax,0x1c
10018c39:	push   eax
10018c3a:	lea    eax,[esi+ebx*1]
10018c3d:	push   eax
10018c3e:	call   0x10045270
10018c43:	add    esp,0xc
10018c46:	add    esi,edi
10018c48:	inc    DWORD PTR [ebp-0x48]
10018c4b:	jmp    0x10018bf6
10018c4d:	lea    esi,[ebp-0x28]
10018c50:	lea    edi,[ebp-0x38]
10018c53:	call   0x10018536
10018c58:	and    DWORD PTR [ebp-0x48],0x0
10018c5c:	lea    eax,[ebp-0x48]
10018c5f:	push   eax
10018c60:	mov    eax,esi
10018c62:	push   eax
10018c63:	push   DWORD PTR [ebp-0x3c]
10018c66:	xor    cl,cl
10018c68:	mov    edx,ebx
10018c6a:	lea    edi,[ebp-0x3c]
10018c6d:	call   0x10039680
10018c72:	mov    ecx,DWORD PTR [eax]
10018c74:	mov    esi,ecx
10018c76:	xor    edi,edi
10018c78:	add    esp,0xc
10018c7b:	mov    DWORD PTR [eax],edi
10018c7d:	mov    DWORD PTR [ebp-0x5c],esi
10018c80:	mov    BYTE PTR [ebp-0x4],0x3
10018c84:	push   DWORD PTR [ebp-0x3c]
10018c87:	call   0x10042f82
10018c8c:	pop    ecx
10018c8d:	mov    ecx,DWORD PTR [ebp-0x48]
10018c90:	push   esi
10018c91:	push   0x2
10018c93:	lea    eax,[ebp-0x40]
10018c96:	push   eax
10018c97:	call   0x10036a00
10018c9c:	call   0x1002fa60
10018ca1:	mov    DWORD PTR [ebp-0x4c],eax
10018ca4:	lea    eax,[ebp-0x4c]
10018ca7:	push   eax
10018ca8:	lea    eax,[ebp-0x40]
10018cab:	push   eax
10018cac:	push   0x2
10018cae:	pop    ecx
10018caf:	mov    DWORD PTR [ebp-0x48],edx
10018cb2:	call   0x10035c30
10018cb7:	cmp    DWORD PTR [ebp+0x8],edi
10018cba:	jne    0x10018cd5
10018cbc:	mov    DWORD PTR [ebp-0x4c],edi
10018cbf:	xor    eax,eax
10018cc1:	lea    edi,[ebp-0x48]
10018cc4:	stos   DWORD PTR es:[edi],eax
10018cc5:	lea    eax,[ebp-0x4c]
10018cc8:	push   eax
10018cc9:	lea    eax,[ebp-0x40]
10018ccc:	push   eax
10018ccd:	push   0x2
10018ccf:	pop    ecx
10018cd0:	call   0x10035c30
10018cd5:	push   esi
10018cd6:	call   0x10042f82
10018cdb:	pop    ecx
10018cdc:	push   ebx
10018cdd:	call   0x10042f82
10018ce2:	pop    ecx
10018ce3:	push   DWORD PTR [ebp-0x40]
10018ce6:	call   DWORD PTR ds:0x10066070
10018cec:	or     DWORD PTR [ebp-0x4],0xffffffff
10018cf0:	mov    eax,ds:0x10080ebc
10018cf5:	test   eax,eax
10018cf7:	je     0x10018d06
10018cf9:	mov    ecx,DWORD PTR ds:0x10080ec0
10018cff:	sub    ecx,eax
10018d01:	sar    ecx,0x5
10018d04:	jne    0x10018d29
10018d06:	lea    eax,[ebp-0x54]
10018d09:	push   eax
10018d0a:	call   0x100182bb
10018d0f:	pop    ecx
10018d10:	mov    ecx,0x10080eb8
10018d15:	mov    DWORD PTR [ebp-0x4],0x5
10018d1c:	call   0x10018d3d
10018d21:	lea    esi,[ebp-0x54]
10018d24:	call   0x100047e3
10018d29:	call   0x10059c20
10018d2e:	ret    
10018d2f:	push   0x4
10018d31:	call   0x100379e0
10018d36:	pop    ecx
10018d37:	mov    eax,0x10018cf0
10018d3c:	ret    
10018d3d:	push   ebx
10018d3e:	push   esi
10018d3f:	push   edi
10018d40:	mov    esi,eax
10018d42:	mov    edi,ecx
10018d44:	cmp    edi,esi
10018d46:	je     0x10018e58
10018d4c:	call   0x10004728
10018d51:	test   eax,eax
10018d53:	jne    0x10018d96
10018d55:	mov    ebx,DWORD PTR [edi+0x8]
10018d58:	cmp    DWORD PTR [edi+0x4],ebx
10018d5b:	jbe    0x10018d62
10018d5d:	call   0x100434a0
10018d62:	mov    esi,DWORD PTR [edi+0x4]
10018d65:	cmp    esi,DWORD PTR [edi+0x8]
10018d68:	jbe    0x10018d6f
10018d6a:	call   0x100434a0
10018d6f:	cmp    esi,ebx
10018d71:	je     0x10018e58
10018d77:	push   DWORD PTR [edi+0x8]
10018d7a:	mov    eax,esi
10018d7c:	mov    ecx,ebx
10018d7e:	call   0x10019620
10018d83:	pop    ecx
10018d84:	push   DWORD PTR [edi+0x8]
10018d87:	mov    esi,eax
10018d89:	call   0x10004e77
10018d8e:	mov    DWORD PTR [edi+0x8],esi
10018d91:	jmp    0x10018e58
10018d96:	mov    eax,esi
10018d98:	call   0x10004728
10018d9d:	mov    ebx,eax
10018d9f:	mov    eax,edi
10018da1:	call   0x10004728
10018da6:	cmp    ebx,eax
10018da8:	mov    eax,DWORD PTR [edi+0x4]
10018dab:	ja     0x10018dd3
10018dad:	push   DWORD PTR [esi+0x8]
10018db0:	mov    ecx,DWORD PTR [esi+0x4]
10018db3:	call   0x10019620
10018db8:	pop    ecx
10018db9:	push   DWORD PTR [edi+0x8]
10018dbc:	call   0x10004e77
10018dc1:	mov    eax,esi
10018dc3:	call   0x10004728
10018dc8:	shl    eax,0x5
10018dcb:	add    eax,DWORD PTR [edi+0x4]
10018dce:	jmp    0x10018e55
10018dd3:	test   eax,eax
10018dd5:	jne    0x10018ddb
10018dd7:	xor    ebx,ebx
10018dd9:	jmp    0x10018de3
10018ddb:	mov    ebx,DWORD PTR [edi+0xc]
10018dde:	sub    ebx,eax
10018de0:	sar    ebx,0x5
10018de3:	mov    eax,esi
10018de5:	call   0x10004728
10018dea:	cmp    eax,ebx
10018dec:	ja     0x10018e10
10018dee:	mov    eax,edi
10018df0:	call   0x10004728
10018df5:	mov    ecx,DWORD PTR [esi+0x4]
10018df8:	mov    ebx,eax
10018dfa:	mov    eax,DWORD PTR [edi+0x4]
10018dfd:	shl    ebx,0x5
10018e00:	add    ebx,ecx
10018e02:	push   ebx
10018e03:	call   0x10019620
10018e08:	pop    ecx
10018e09:	push   DWORD PTR [edi+0x8]
10018e0c:	mov    ecx,ebx
10018e0e:	jmp    0x10018e4d
10018e10:	mov    eax,DWORD PTR [edi+0x4]
10018e13:	xor    ebx,ebx
10018e15:	cmp    eax,ebx
10018e17:	je     0x10018e2a
10018e19:	push   DWORD PTR [edi+0x8]
10018e1c:	call   0x10004e77
10018e21:	push   DWORD PTR [edi+0x4]
10018e24:	call   0x10042f82
10018e29:	pop    ecx
10018e2a:	mov    eax,esi
10018e2c:	call   0x10004728
10018e31:	cmp    eax,ebx
10018e33:	mov    DWORD PTR [edi+0x4],ebx
10018e36:	mov    DWORD PTR [edi+0x8],ebx
10018e39:	mov    DWORD PTR [edi+0xc],ebx
10018e3c:	je     0x10018e58
10018e3e:	call   0x100047ba
10018e43:	test   al,al
10018e45:	je     0x10018e58
10018e47:	push   DWORD PTR [edi+0x4]
10018e4a:	mov    ecx,DWORD PTR [esi+0x4]
10018e4d:	push   DWORD PTR [esi+0x8]
10018e50:	call   0x1000667a
10018e55:	mov    DWORD PTR [edi+0x8],eax
10018e58:	mov    eax,edi
10018e5a:	pop    edi
10018e5b:	pop    esi
10018e5c:	pop    ebx
10018e5d:	ret    
10018e5e:	mov    eax,0x10080eb8
10018e63:	call   0x10004728
10018e68:	cmp    DWORD PTR [esp+0x4],eax
10018e6c:	jb     0x10018e73
10018e6e:	call   0x100434a0
10018e73:	mov    eax,DWORD PTR [esp+0x4]
10018e77:	shl    eax,0x5
10018e7a:	add    eax,DWORD PTR ds:0x10080ebc
10018e80:	ret    0x4
10018e83:	push   ebp
10018e84:	mov    ebp,esp
10018e86:	and    esp,0xfffffff8
10018e89:	mov    edx,DWORD PTR [eax+0x4]
10018e8c:	mov    ecx,DWORD PTR ds:0x10080ebc
10018e92:	mov    DWORD PTR ds:0x10080ebc,edx
10018e98:	mov    DWORD PTR [eax+0x4],ecx
10018e9b:	mov    edx,DWORD PTR [eax+0x8]
10018e9e:	mov    ecx,DWORD PTR ds:0x10080ec0
10018ea4:	mov    DWORD PTR ds:0x10080ec0,edx
10018eaa:	mov    DWORD PTR [eax+0x8],ecx
10018ead:	mov    edx,DWORD PTR [eax+0xc]
10018eb0:	mov    ecx,DWORD PTR ds:0x10080ec4
10018eb6:	mov    DWORD PTR ds:0x10080ec4,edx
10018ebc:	mov    DWORD PTR [eax+0xc],ecx
10018ebf:	mov    esp,ebp
10018ec1:	pop    ebp
10018ec2:	ret    
10018ec3:	push   ebp
10018ec4:	mov    ebp,esp
10018ec6:	and    esp,0xfffffff8
10018ec9:	sub    esp,0x14
10018ecc:	mov    eax,DWORD PTR [ebx+0x4]
10018ecf:	push   esi
10018ed0:	mov    esi,DWORD PTR [eax+0x4]
10018ed3:	mov    DWORD PTR [esp+0x8],eax
10018ed7:	mov    al,0x1
10018ed9:	mov    BYTE PTR [esp+0xc],al
10018edd:	jmp    0x10018efd
10018edf:	mov    eax,DWORD PTR [ebp+0x8]
10018ee2:	lea    ecx,[esi+0xc]
10018ee5:	mov    DWORD PTR [esp+0x8],esi
10018ee9:	call   0x10004f28
10018eee:	test   al,al
10018ef0:	mov    BYTE PTR [esp+0xc],al
10018ef4:	je     0x10018efa
10018ef6:	mov    esi,DWORD PTR [esi]
10018ef8:	jmp    0x10018efd
10018efa:	mov    esi,DWORD PTR [esi+0x8]
10018efd:	cmp    BYTE PTR [esi+0x29],0x0
10018f01:	je     0x10018edf
10018f03:	test   al,al
10018f05:	mov    ecx,DWORD PTR [esp+0x8]
10018f09:	mov    esi,ecx
10018f0b:	mov    DWORD PTR [esp+0x14],esi
10018f0f:	mov    DWORD PTR [esp+0x10],ebx
10018f13:	je     0x10018f4a
10018f15:	mov    eax,DWORD PTR [ebx+0x4]
10018f18:	cmp    ecx,DWORD PTR [eax]
10018f1a:	jne    0x10018f3d
10018f1c:	push   DWORD PTR [ebp+0x8]
10018f1f:	push   0x1
10018f21:	lea    eax,[esp+0x18]
10018f25:	push   eax
10018f26:	mov    esi,ebx
10018f28:	call   0x10018faa
10018f2d:	mov    ecx,DWORD PTR [eax]
10018f2f:	mov    eax,DWORD PTR [eax+0x4]
10018f32:	mov    DWORD PTR [edi],ecx
10018f34:	mov    DWORD PTR [edi+0x4],eax
10018f37:	mov    BYTE PTR [edi+0x8],0x1
10018f3b:	jmp    0x10018f73
10018f3d:	lea    esi,[esp+0x10]
10018f41:	call   0x1001912c
10018f46:	mov    esi,DWORD PTR [esp+0x14]
10018f4a:	mov    ecx,DWORD PTR [ebp+0x8]
10018f4d:	lea    eax,[esi+0xc]
10018f50:	call   0x10004f28
10018f55:	test   al,al
10018f57:	je     0x10018f66
10018f59:	push   DWORD PTR [ebp+0x8]
10018f5c:	mov    ecx,DWORD PTR [esp+0xc]
10018f60:	push   DWORD PTR [esp+0x10]
10018f64:	jmp    0x10018f21
10018f66:	mov    eax,DWORD PTR [esp+0x10]
10018f6a:	mov    DWORD PTR [edi],eax
10018f6c:	mov    DWORD PTR [edi+0x4],esi
10018f6f:	mov    BYTE PTR [edi+0x8],0x0
10018f73:	mov    eax,edi
10018f75:	pop    esi
10018f76:	mov    esp,ebp
10018f78:	pop    ebp
10018f79:	ret    0x4
10018f7c:	push   ebp
10018f7d:	mov    ebp,esp
10018f7f:	and    esp,0xfffffff8
10018f82:	mov    edx,DWORD PTR [eax+0x4]
10018f85:	mov    ecx,DWORD PTR ds:0x10080ed0
10018f8b:	mov    DWORD PTR ds:0x10080ed0,edx
10018f91:	mov    DWORD PTR [eax+0x4],ecx
10018f94:	mov    edx,DWORD PTR [eax+0x8]
10018f97:	mov    ecx,DWORD PTR ds:0x10080ed4
10018f9d:	mov    DWORD PTR ds:0x10080ed4,edx
10018fa3:	mov    DWORD PTR [eax+0x8],ecx
10018fa6:	mov    esp,ebp
10018fa8:	pop    ebp
10018fa9:	ret    
10018faa:	push   0x48
10018fac:	mov    eax,0x100621c0
10018fb1:	call   0x10059b25
10018fb6:	mov    edi,ecx
10018fb8:	cmp    DWORD PTR [esi+0x8],0x9249248
10018fbf:	jb     0x10018ff3
10018fc1:	push   0x1006d02c
10018fc6:	lea    ecx,[ebp-0x2c]
10018fc9:	call   0x100011c8
10018fce:	and    DWORD PTR [ebp-0x4],0x0
10018fd2:	lea    eax,[ebp-0x2c]
10018fd5:	push   eax
10018fd6:	lea    ecx,[ebp-0x54]
10018fd9:	call   0x10001065
10018fde:	push   0x10074ec8
10018fe3:	lea    eax,[ebp-0x54]
10018fe6:	push   eax
10018fe7:	mov    DWORD PTR [ebp-0x54],0x1006b96c
10018fee:	call   0x10047aa4
10018ff3:	mov    eax,DWORD PTR [esi+0x4]
10018ff6:	push   0x0
10018ff8:	push   DWORD PTR [ebp+0x10]
10018ffb:	push   eax
10018ffc:	push   edi
10018ffd:	push   eax
10018ffe:	call   0x100192bb
10019003:	inc    DWORD PTR [esi+0x8]
10019006:	mov    ebx,eax
10019008:	mov    eax,DWORD PTR [esi+0x4]
1001900b:	cmp    edi,eax
1001900d:	jne    0x1001901c
1001900f:	mov    DWORD PTR [eax+0x4],ebx
10019012:	mov    eax,DWORD PTR [esi+0x4]
10019015:	mov    DWORD PTR [eax],ebx
10019017:	mov    eax,DWORD PTR [esi+0x4]
1001901a:	jmp    0x1001903a
1001901c:	cmp    BYTE PTR [ebp+0xc],0x0
10019020:	je     0x1001902f
10019022:	mov    DWORD PTR [edi],ebx
10019024:	mov    eax,DWORD PTR [esi+0x4]
10019027:	cmp    edi,DWORD PTR [eax]
10019029:	jne    0x1001903d
1001902b:	mov    DWORD PTR [eax],ebx
1001902d:	jmp    0x1001903d
1001902f:	mov    DWORD PTR [edi+0x8],ebx
10019032:	mov    eax,DWORD PTR [esi+0x4]
10019035:	cmp    edi,DWORD PTR [eax+0x8]
10019038:	jne    0x1001903d
1001903a:	mov    DWORD PTR [eax+0x8],ebx
1001903d:	mov    edi,ebx
1001903f:	lea    eax,[ebx+0x4]
10019042:	jmp    0x100190d1
10019047:	mov    ecx,DWORD PTR [eax]
10019049:	mov    edx,DWORD PTR [ecx+0x4]
1001904c:	cmp    ecx,DWORD PTR [edx]
1001904e:	jne    0x10019085
10019050:	mov    edx,DWORD PTR [edx+0x8]
10019053:	cmp    BYTE PTR [edx+0x28],0x0
10019057:	je     0x1001908d
10019059:	cmp    edi,DWORD PTR [ecx+0x8]
1001905c:	jne    0x10019066
1001905e:	push   esi
1001905f:	mov    edi,ecx
10019061:	call   0x10019239
10019066:	mov    eax,DWORD PTR [edi+0x4]
10019069:	mov    BYTE PTR [eax+0x28],0x1
1001906d:	mov    eax,DWORD PTR [edi+0x4]
10019070:	mov    eax,DWORD PTR [eax+0x4]
10019073:	mov    BYTE PTR [eax+0x28],0x0
10019077:	mov    eax,DWORD PTR [edi+0x4]
1001907a:	mov    ecx,DWORD PTR [eax+0x4]
1001907d:	push   esi
1001907e:	call   0x10019279
10019083:	jmp    0x100190ce
10019085:	mov    edx,DWORD PTR [edx]
10019087:	cmp    BYTE PTR [edx+0x28],0x0
1001908b:	jne    0x100190a5
1001908d:	mov    BYTE PTR [ecx+0x28],0x1
10019091:	mov    BYTE PTR [edx+0x28],0x1
10019095:	mov    ecx,DWORD PTR [eax]
10019097:	mov    ecx,DWORD PTR [ecx+0x4]
1001909a:	mov    BYTE PTR [ecx+0x28],0x0
1001909e:	mov    eax,DWORD PTR [eax]
100190a0:	mov    edi,DWORD PTR [eax+0x4]
100190a3:	jmp    0x100190ce
100190a5:	cmp    edi,DWORD PTR [ecx]
100190a7:	jne    0x100190b1
100190a9:	push   esi
100190aa:	mov    edi,ecx
100190ac:	call   0x10019279
100190b1:	mov    eax,DWORD PTR [edi+0x4]
100190b4:	mov    BYTE PTR [eax+0x28],0x1
100190b8:	mov    eax,DWORD PTR [edi+0x4]
100190bb:	mov    eax,DWORD PTR [eax+0x4]
100190be:	mov    BYTE PTR [eax+0x28],0x0
100190c2:	mov    eax,DWORD PTR [edi+0x4]
100190c5:	mov    ecx,DWORD PTR [eax+0x4]
100190c8:	push   esi
100190c9:	call   0x10019239
100190ce:	lea    eax,[edi+0x4]
100190d1:	mov    ecx,DWORD PTR [eax]
100190d3:	cmp    BYTE PTR [ecx+0x28],0x0
100190d7:	je     0x10019047
100190dd:	mov    eax,DWORD PTR [esi+0x4]
100190e0:	mov    eax,DWORD PTR [eax+0x4]
100190e3:	mov    BYTE PTR [eax+0x28],0x1
100190e7:	mov    eax,DWORD PTR [ebp+0x8]
100190ea:	mov    DWORD PTR [eax+0x4],ebx
100190ed:	mov    DWORD PTR [eax],esi
100190ef:	call   0x10059bfd
100190f4:	ret    0xc
100190f7:	push   ebp
100190f8:	mov    ebp,esp
100190fa:	and    esp,0xfffffff8
100190fd:	push   ecx
100190fe:	push   ecx
100190ff:	push   ebx
10019100:	push   edi
10019101:	mov    edi,eax
10019103:	mov    eax,DWORD PTR [edi+0x4]
10019106:	mov    ecx,DWORD PTR [eax]
10019108:	push   eax
10019109:	push   edi
1001910a:	push   ecx
1001910b:	push   edi
1001910c:	lea    ebx,[esp+0x18]
10019110:	call   0x1001918d
10019115:	push   DWORD PTR [edi+0x4]
10019118:	call   0x10042f82
1001911d:	and    DWORD PTR [edi+0x4],0x0
10019121:	and    DWORD PTR [edi+0x8],0x0
10019125:	pop    ecx
10019126:	pop    edi
10019127:	pop    ebx
10019128:	mov    esp,ebp
1001912a:	pop    ebp
1001912b:	ret    
1001912c:	push   ebx
1001912d:	xor    ebx,ebx
1001912f:	cmp    DWORD PTR [esi],ebx
10019131:	jne    0x10019138
10019133:	call   0x100434a0
10019138:	mov    eax,DWORD PTR [esi+0x4]
1001913b:	cmp    BYTE PTR [eax+0x29],bl
1001913e:	je     0x1001914d
10019140:	mov    eax,DWORD PTR [eax+0x8]
10019143:	mov    DWORD PTR [esi+0x4],eax
10019146:	cmp    BYTE PTR [eax+0x29],bl
10019149:	je     0x10019189
1001914b:	jmp    0x1001917f
1001914d:	mov    ecx,DWORD PTR [eax]
1001914f:	cmp    BYTE PTR [ecx+0x29],bl
10019152:	jne    0x1001916f
10019154:	jmp    0x10019158
10019156:	mov    ecx,eax
10019158:	mov    eax,DWORD PTR [ecx+0x8]
1001915b:	cmp    BYTE PTR [eax+0x29],bl
1001915e:	je     0x10019156
10019160:	mov    DWORD PTR [esi+0x4],ecx
10019163:	jmp    0x10019189
10019165:	mov    ecx,DWORD PTR [esi+0x4]
10019168:	cmp    ecx,DWORD PTR [eax]
1001916a:	jne    0x10019177
1001916c:	mov    DWORD PTR [esi+0x4],eax
1001916f:	mov    eax,DWORD PTR [eax+0x4]
10019172:	cmp    BYTE PTR [eax+0x29],bl
10019175:	je     0x10019165
10019177:	mov    ecx,DWORD PTR [esi+0x4]
1001917a:	cmp    BYTE PTR [ecx+0x29],bl
1001917d:	je     0x10019186
1001917f:	call   0x100434a0
10019184:	jmp    0x10019189
10019186:	mov    DWORD PTR [esi+0x4],eax
10019189:	mov    eax,esi
1001918b:	pop    ebx
1001918c:	ret    
1001918d:	push   ebp
1001918e:	mov    ebp,esp
10019190:	mov    eax,DWORD PTR [edi+0x4]
10019193:	sub    esp,0x14
10019196:	cmp    DWORD PTR [ebp+0x8],0x0
1001919a:	push   esi
1001919b:	mov    esi,DWORD PTR [eax]
1001919d:	je     0x100191a4
1001919f:	cmp    DWORD PTR [ebp+0x8],edi
100191a2:	je     0x100191a9
100191a4:	call   0x100434a0
100191a9:	cmp    DWORD PTR [ebp+0xc],esi
100191ac:	jne    0x100191f1
100191ae:	cmp    DWORD PTR [ebp+0x10],0x0
100191b2:	mov    esi,DWORD PTR [edi+0x4]
100191b5:	je     0x100191bc
100191b7:	cmp    DWORD PTR [ebp+0x10],edi
100191ba:	je     0x100191c1
100191bc:	call   0x100434a0
100191c1:	cmp    DWORD PTR [ebp+0x14],esi
100191c4:	jne    0x100191f1
100191c6:	mov    eax,DWORD PTR [edi+0x4]
100191c9:	push   DWORD PTR [eax+0x4]
100191cc:	mov    ecx,edi
100191ce:	call   0x100195e2
100191d3:	mov    eax,DWORD PTR [edi+0x4]
100191d6:	mov    DWORD PTR [eax+0x4],eax
100191d9:	mov    eax,DWORD PTR [edi+0x4]
100191dc:	and    DWORD PTR [edi+0x8],0x0
100191e0:	mov    DWORD PTR [eax],eax
100191e2:	mov    eax,DWORD PTR [edi+0x4]
100191e5:	mov    DWORD PTR [eax+0x8],eax
100191e8:	mov    eax,DWORD PTR [edi+0x4]
100191eb:	mov    eax,DWORD PTR [eax]
100191ed:	mov    DWORD PTR [ebx],edi
100191ef:	jmp    0x1001922f
100191f1:	mov    eax,DWORD PTR [ebp+0x8]
100191f4:	test   eax,eax
100191f6:	je     0x100191fd
100191f8:	cmp    eax,DWORD PTR [ebp+0x10]
100191fb:	je     0x10019202
100191fd:	call   0x100434a0
10019202:	mov    eax,DWORD PTR [ebp+0xc]
10019205:	cmp    eax,DWORD PTR [ebp+0x14]
10019208:	mov    ecx,DWORD PTR [ebp+0x8]
1001920b:	je     0x1001922d
1001920d:	lea    esi,[ebp+0x8]
10019210:	mov    DWORD PTR [ebp-0x8],ecx
10019213:	mov    DWORD PTR [ebp-0x4],eax
10019216:	call   0x1002de75
1001921b:	push   DWORD PTR [ebp-0x4]
1001921e:	lea    eax,[ebp-0x10]
10019221:	push   DWORD PTR [ebp-0x8]
10019224:	push   eax
10019225:	push   edi
10019226:	call   0x10019322
1001922b:	jmp    0x100191f1
1001922d:	mov    DWORD PTR [ebx],ecx
1001922f:	mov    DWORD PTR [ebx+0x4],eax
10019232:	mov    eax,ebx
10019234:	pop    esi
10019235:	leave  
10019236:	ret    0x10
10019239:	mov    eax,DWORD PTR [ecx+0x8]
1001923c:	mov    edx,DWORD PTR [eax]
1001923e:	mov    DWORD PTR [ecx+0x8],edx
10019241:	mov    edx,DWORD PTR [eax]
10019243:	cmp    BYTE PTR [edx+0x29],0x0
10019247:	jne    0x1001924c
10019249:	mov    DWORD PTR [edx+0x4],ecx
1001924c:	mov    edx,DWORD PTR [ecx+0x4]
1001924f:	mov    DWORD PTR [eax+0x4],edx
10019252:	mov    edx,DWORD PTR [esp+0x4]
10019256:	mov    edx,DWORD PTR [edx+0x4]
10019259:	cmp    ecx,DWORD PTR [edx+0x4]
1001925c:	jne    0x10019263
1001925e:	mov    DWORD PTR [edx+0x4],eax
10019261:	jmp    0x10019271
10019263:	mov    edx,DWORD PTR [ecx+0x4]
10019266:	cmp    ecx,DWORD PTR [edx]
10019268:	jne    0x1001926e
1001926a:	mov    DWORD PTR [edx],eax
1001926c:	jmp    0x10019271
1001926e:	mov    DWORD PTR [edx+0x8],eax
10019271:	mov    DWORD PTR [eax],ecx
10019273:	mov    DWORD PTR [ecx+0x4],eax
10019276:	ret    0x4
10019279:	mov    eax,DWORD PTR [ecx]
1001927b:	mov    edx,DWORD PTR [eax+0x8]
1001927e:	mov    DWORD PTR [ecx],edx
10019280:	mov    edx,DWORD PTR [eax+0x8]
10019283:	cmp    BYTE PTR [edx+0x29],0x0
10019287:	jne    0x1001928c
10019289:	mov    DWORD PTR [edx+0x4],ecx
1001928c:	mov    edx,DWORD PTR [ecx+0x4]
1001928f:	mov    DWORD PTR [eax+0x4],edx
10019292:	mov    edx,DWORD PTR [esp+0x4]
10019296:	mov    edx,DWORD PTR [edx+0x4]
10019299:	cmp    ecx,DWORD PTR [edx+0x4]
1001929c:	jne    0x100192a3
1001929e:	mov    DWORD PTR [edx+0x4],eax
100192a1:	jmp    0x100192b2
100192a3:	mov    edx,DWORD PTR [ecx+0x4]
100192a6:	cmp    ecx,DWORD PTR [edx+0x8]
100192a9:	jne    0x100192b0
100192ab:	mov    DWORD PTR [edx+0x8],eax
100192ae:	jmp    0x100192b2
100192b0:	mov    DWORD PTR [edx],eax
100192b2:	mov    DWORD PTR [eax+0x8],ecx
100192b5:	mov    DWORD PTR [ecx+0x4],eax
100192b8:	ret    0x4
100192bb:	push   0x8
100192bd:	mov    eax,0x1005fc92
100192c2:	call   0x10059b58
100192c7:	push   0x2c
100192c9:	call   0x1004358e
100192ce:	mov    esi,eax
100192d0:	pop    ecx
100192d1:	mov    DWORD PTR [ebp-0x14],esi
100192d4:	test   esi,esi
100192d6:	mov    DWORD PTR [ebp-0x4],0x1
100192dd:	je     0x10019305
100192df:	mov    eax,DWORD PTR [ebp+0x8]
100192e2:	push   DWORD PTR [ebp+0x14]
100192e5:	mov    DWORD PTR [esi],eax
100192e7:	mov    eax,DWORD PTR [ebp+0xc]
100192ea:	mov    DWORD PTR [esi+0x4],eax
100192ed:	mov    eax,DWORD PTR [ebp+0x10]
100192f0:	lea    ecx,[esi+0xc]
100192f3:	mov    DWORD PTR [esi+0x8],eax
100192f6:	call   0x100011a2
100192fb:	mov    al,BYTE PTR [ebp+0x18]
100192fe:	mov    BYTE PTR [esi+0x28],al
10019301:	mov    BYTE PTR [esi+0x29],0x0
10019305:	mov    eax,esi
10019307:	call   0x10059bfd
1001930c:	ret    0x14
1001930f:	push   DWORD PTR [ebp-0x14]
10019312:	call   0x10042f82
10019317:	pop    ecx
10019318:	push   0x0
1001931a:	push   0x0
1001931c:	call   0x10047aa4
10019321:	int3   
10019322:	push   0x44
10019324:	mov    eax,0x10060374
10019329:	call   0x10059b25
1001932e:	mov    ebx,DWORD PTR [ebp+0x14]
10019331:	cmp    BYTE PTR [ebx+0x29],0x0
10019335:	je     0x10019369
10019337:	push   0x1006ccec
1001933c:	lea    ecx,[ebp-0x28]
1001933f:	call   0x100011c8
10019344:	and    DWORD PTR [ebp-0x4],0x0
10019348:	lea    eax,[ebp-0x28]
1001934b:	push   eax
1001934c:	lea    ecx,[ebp-0x50]
1001934f:	call   0x10001065
10019354:	push   0x10074de8
10019359:	lea    eax,[ebp-0x50]
1001935c:	push   eax
1001935d:	mov    DWORD PTR [ebp-0x50],0x1006b978
10019364:	call   0x10047aa4
10019369:	lea    esi,[ebp+0x10]
1001936c:	call   0x1002de75
10019371:	mov    ecx,DWORD PTR [ebx]
10019373:	cmp    BYTE PTR [ecx+0x29],0x0
10019377:	je     0x1001937e
10019379:	mov    edi,DWORD PTR [ebx+0x8]
1001937c:	jmp    0x10019395
1001937e:	mov    eax,DWORD PTR [ebx+0x8]
10019381:	cmp    BYTE PTR [eax+0x29],0x0
10019385:	je     0x1001938b
10019387:	mov    edi,ecx
10019389:	jmp    0x10019395
1001938b:	mov    eax,DWORD PTR [ebp+0x14]
1001938e:	cmp    eax,ebx
10019390:	mov    edi,DWORD PTR [eax+0x8]
10019393:	jne    0x1001940b
10019395:	cmp    BYTE PTR [edi+0x29],0x0
10019399:	mov    esi,DWORD PTR [ebx+0x4]
1001939c:	jne    0x100193a1
1001939e:	mov    DWORD PTR [edi+0x4],esi
100193a1:	mov    ecx,DWORD PTR [ebp+0x8]
100193a4:	mov    eax,DWORD PTR [ecx+0x4]
100193a7:	cmp    DWORD PTR [eax+0x4],ebx
100193aa:	jne    0x100193b1
100193ac:	mov    DWORD PTR [eax+0x4],edi
100193af:	jmp    0x100193bc
100193b1:	cmp    DWORD PTR [esi],ebx
100193b3:	jne    0x100193b9
100193b5:	mov    DWORD PTR [esi],edi
100193b7:	jmp    0x100193bc
100193b9:	mov    DWORD PTR [esi+0x8],edi
100193bc:	mov    edx,DWORD PTR [ecx+0x4]
100193bf:	cmp    DWORD PTR [edx],ebx
100193c1:	jne    0x100193df
100193c3:	cmp    BYTE PTR [edi+0x29],0x0
100193c7:	je     0x100193cd
100193c9:	mov    ecx,esi
100193cb:	jmp    0x100193dd
100193cd:	mov    eax,DWORD PTR [edi]
100193cf:	mov    ecx,edi
100193d1:	jmp    0x100193d7
100193d3:	mov    ecx,eax
100193d5:	mov    eax,DWORD PTR [ecx]
100193d7:	cmp    BYTE PTR [eax+0x29],0x0
100193db:	je     0x100193d3
100193dd:	mov    DWORD PTR [edx],ecx
100193df:	mov    eax,DWORD PTR [ebp+0x8]
100193e2:	mov    edx,DWORD PTR [eax+0x4]
100193e5:	cmp    DWORD PTR [edx+0x8],ebx
100193e8:	jne    0x10019465
100193ea:	cmp    BYTE PTR [edi+0x29],0x0
100193ee:	je     0x100193f4
100193f0:	mov    ecx,esi
100193f2:	jmp    0x10019406
100193f4:	mov    eax,DWORD PTR [edi+0x8]
100193f7:	mov    ecx,edi
100193f9:	jmp    0x10019400
100193fb:	mov    ecx,eax
100193fd:	mov    eax,DWORD PTR [ecx+0x8]
10019400:	cmp    BYTE PTR [eax+0x29],0x0
10019404:	je     0x100193fb
10019406:	mov    DWORD PTR [edx+0x8],ecx
10019409:	jmp    0x10019465
1001940b:	mov    DWORD PTR [ecx+0x4],eax
1001940e:	mov    ecx,DWORD PTR [ebx]
10019410:	mov    DWORD PTR [eax],ecx
10019412:	cmp    eax,DWORD PTR [ebx+0x8]
10019415:	jne    0x1001941b
10019417:	mov    esi,eax
10019419:	jmp    0x10019435
1001941b:	cmp    BYTE PTR [edi+0x29],0x0
1001941f:	mov    esi,DWORD PTR [eax+0x4]
10019422:	jne    0x10019427
10019424:	mov    DWORD PTR [edi+0x4],esi
10019427:	mov    DWORD PTR [esi],edi
10019429:	mov    ecx,DWORD PTR [ebx+0x8]
1001942c:	mov    DWORD PTR [eax+0x8],ecx
1001942f:	mov    ecx,DWORD PTR [ebx+0x8]
10019432:	mov    DWORD PTR [ecx+0x4],eax
10019435:	mov    ecx,DWORD PTR [ebp+0x8]
10019438:	mov    ecx,DWORD PTR [ecx+0x4]
1001943b:	cmp    DWORD PTR [ecx+0x4],ebx
1001943e:	jne    0x10019445
10019440:	mov    DWORD PTR [ecx+0x4],eax
10019443:	jmp    0x10019453
10019445:	mov    ecx,DWORD PTR [ebx+0x4]
10019448:	cmp    DWORD PTR [ecx],ebx
1001944a:	jne    0x10019450
1001944c:	mov    DWORD PTR [ecx],eax
1001944e:	jmp    0x10019453
10019450:	mov    DWORD PTR [ecx+0x8],eax
10019453:	mov    ecx,DWORD PTR [ebx+0x4]
10019456:	mov    DWORD PTR [eax+0x4],ecx
10019459:	mov    dl,BYTE PTR [ebx+0x28]
1001945c:	mov    cl,BYTE PTR [eax+0x28]
1001945f:	mov    BYTE PTR [eax+0x28],dl
10019462:	mov    BYTE PTR [ebx+0x28],cl
10019465:	cmp    BYTE PTR [ebx+0x28],0x1
10019469:	jne    0x10019581
1001946f:	jmp    0x10019535
10019474:	cmp    BYTE PTR [edi+0x28],0x1
10019478:	jne    0x1001957d
1001947e:	mov    ecx,DWORD PTR [esi]
10019480:	cmp    edi,ecx
10019482:	jne    0x100194fb
10019484:	mov    ecx,DWORD PTR [esi+0x8]
10019487:	cmp    BYTE PTR [ecx+0x28],0x0
1001948b:	jne    0x100194a2
1001948d:	push   DWORD PTR [ebp+0x8]
10019490:	mov    BYTE PTR [ecx+0x28],0x1
10019494:	mov    ecx,esi
10019496:	mov    BYTE PTR [esi+0x28],0x0
1001949a:	call   0x10019239
1001949f:	mov    ecx,DWORD PTR [esi+0x8]
100194a2:	cmp    BYTE PTR [ecx+0x29],0x0
100194a6:	jne    0x10019530
100194ac:	mov    eax,DWORD PTR [ecx]
100194ae:	cmp    BYTE PTR [eax+0x28],0x1
100194b2:	jne    0x100194bd
100194b4:	mov    eax,DWORD PTR [ecx+0x8]
100194b7:	cmp    BYTE PTR [eax+0x28],0x1
100194bb:	je     0x1001952c
100194bd:	mov    eax,DWORD PTR [ecx+0x8]
100194c0:	cmp    BYTE PTR [eax+0x28],0x1
100194c4:	jne    0x100194db
100194c6:	mov    eax,DWORD PTR [ecx]
100194c8:	push   DWORD PTR [ebp+0x8]
100194cb:	mov    BYTE PTR [eax+0x28],0x1
100194cf:	mov    BYTE PTR [ecx+0x28],0x0
100194d3:	call   0x10019279
100194d8:	mov    ecx,DWORD PTR [esi+0x8]
100194db:	mov    al,BYTE PTR [esi+0x28]
100194de:	push   DWORD PTR [ebp+0x8]
100194e1:	mov    BYTE PTR [ecx+0x28],al
100194e4:	mov    BYTE PTR [esi+0x28],0x1
100194e8:	mov    eax,DWORD PTR [ecx+0x8]
100194eb:	mov    ecx,esi
100194ed:	mov    BYTE PTR [eax+0x28],0x1
100194f1:	call   0x10019239
100194f6:	jmp    0x1001957d
100194fb:	cmp    BYTE PTR [ecx+0x28],0x0
100194ff:	jne    0x10019515
10019501:	push   DWORD PTR [ebp+0x8]
10019504:	mov    BYTE PTR [ecx+0x28],0x1
10019508:	mov    ecx,esi
1001950a:	mov    BYTE PTR [esi+0x28],0x0
1001950e:	call   0x10019279
10019513:	mov    ecx,DWORD PTR [esi]
10019515:	cmp    BYTE PTR [ecx+0x29],0x0
10019519:	jne    0x10019530
1001951b:	mov    eax,DWORD PTR [ecx+0x8]
1001951e:	cmp    BYTE PTR [eax+0x28],0x1
10019522:	jne    0x10019546
10019524:	mov    eax,DWORD PTR [ecx]
10019526:	cmp    BYTE PTR [eax+0x28],0x1
1001952a:	jne    0x10019546
1001952c:	mov    BYTE PTR [ecx+0x28],0x0
10019530:	mov    edi,esi
10019532:	mov    esi,DWORD PTR [esi+0x4]
10019535:	mov    eax,DWORD PTR [ebp+0x8]
10019538:	mov    eax,DWORD PTR [eax+0x4]
1001953b:	cmp    edi,DWORD PTR [eax+0x4]
1001953e:	jne    0x10019474
10019544:	jmp    0x1001957d
10019546:	mov    eax,DWORD PTR [ecx]
10019548:	cmp    BYTE PTR [eax+0x28],0x1
1001954c:	jne    0x10019563
1001954e:	mov    eax,DWORD PTR [ecx+0x8]
10019551:	push   DWORD PTR [ebp+0x8]
10019554:	mov    BYTE PTR [eax+0x28],0x1
10019558:	mov    BYTE PTR [ecx+0x28],0x0
1001955c:	call   0x10019239
10019561:	mov    ecx,DWORD PTR [esi]
10019563:	mov    al,BYTE PTR [esi+0x28]
10019566:	push   DWORD PTR [ebp+0x8]
10019569:	mov    BYTE PTR [ecx+0x28],al
1001956c:	mov    BYTE PTR [esi+0x28],0x1
10019570:	mov    eax,DWORD PTR [ecx]
10019572:	mov    ecx,esi
10019574:	mov    BYTE PTR [eax+0x28],0x1
10019578:	call   0x10019279
1001957d:	mov    BYTE PTR [edi+0x28],0x1
10019581:	push   0x0
10019583:	push   0x1
10019585:	lea    ecx,[ebx+0xc]
10019588:	call   0x100012eb
1001958d:	push   ebx
1001958e:	call   0x10042f82
10019593:	pop    ecx
10019594:	mov    ecx,DWORD PTR [ebp+0x8]
10019597:	mov    eax,DWORD PTR [ecx+0x8]
1001959a:	test   eax,eax
1001959c:	jbe    0x100195a2
1001959e:	dec    eax
1001959f:	mov    DWORD PTR [ecx+0x8],eax
100195a2:	mov    ecx,DWORD PTR [ebp+0x10]
100195a5:	mov    eax,DWORD PTR [ebp+0xc]
100195a8:	mov    DWORD PTR [eax],ecx
100195aa:	mov    ecx,DWORD PTR [ebp+0x14]
100195ad:	mov    DWORD PTR [eax+0x4],ecx
100195b0:	call   0x10059bfd
100195b5:	ret    0x10
100195b8:	push   0x2c
100195ba:	call   0x1004358e
100195bf:	xor    edx,edx
100195c1:	cmp    eax,edx
100195c3:	pop    ecx
100195c4:	je     0x100195c8
100195c6:	mov    DWORD PTR [eax],edx
100195c8:	lea    ecx,[eax+0x4]
100195cb:	cmp    ecx,edx
100195cd:	je     0x100195d1
100195cf:	mov    DWORD PTR [ecx],edx
100195d1:	lea    ecx,[eax+0x8]
100195d4:	cmp    ecx,edx
100195d6:	je     0x100195da
100195d8:	mov    DWORD PTR [ecx],edx
100195da:	mov    BYTE PTR [eax+0x28],0x1
100195de:	mov    BYTE PTR [eax+0x29],dl
100195e1:	ret    
100195e2:	push   ebx
100195e3:	push   esi
100195e4:	push   edi
100195e5:	mov    edi,DWORD PTR [esp+0x10]
100195e9:	cmp    BYTE PTR [edi+0x29],0x0
100195ed:	mov    ebx,ecx
100195ef:	mov    esi,edi
100195f1:	jne    0x1001961a
100195f3:	push   DWORD PTR [esi+0x8]
100195f6:	mov    ecx,ebx
100195f8:	call   0x100195e2
100195fd:	mov    esi,DWORD PTR [esi]
100195ff:	push   0x0
10019601:	push   0x1
10019603:	lea    ecx,[edi+0xc]
10019606:	call   0x100012eb
1001960b:	push   edi
1001960c:	call   0x10042f82
10019611:	cmp    BYTE PTR [esi+0x29],0x0
10019615:	pop    ecx
10019616:	mov    edi,esi
10019618:	je     0x100195f3
1001961a:	pop    edi
1001961b:	pop    esi
1001961c:	pop    ebx
1001961d:	ret    0x4
10019620:	push   ebx
10019621:	push   esi
10019622:	mov    esi,DWORD PTR [esp+0xc]
10019626:	push   edi
10019627:	mov    edi,ecx
10019629:	sub    esi,edi
1001962b:	sar    esi,0x5
1001962e:	shl    esi,0x5
10019631:	mov    ebx,eax
10019633:	add    esi,ebx
10019635:	cmp    edi,DWORD PTR [esp+0x10]
10019639:	je     0x1001965a
1001963b:	sub    ebx,edi
1001963d:	push   0xffffffff
1001963f:	push   0x0
10019641:	push   edi
10019642:	lea    ecx,[ebx+edi*1]
10019645:	call   0x1000123c
1001964a:	mov    eax,DWORD PTR [edi+0x1c]
1001964d:	mov    DWORD PTR [ebx+edi*1+0x1c],eax
10019651:	add    edi,0x20
10019654:	cmp    edi,DWORD PTR [esp+0x10]
10019658:	jne    0x1001963d
1001965a:	pop    edi
1001965b:	mov    eax,esi
1001965d:	pop    esi
1001965e:	pop    ebx
1001965f:	ret    
10019660:	push   ebp
10019661:	mov    ebp,esp
10019663:	and    esp,0xfffffff8
10019666:	push   0xffffffff
10019668:	push   0x10060d5e
1001966d:	mov    eax,fs:0x0
10019673:	push   eax
10019674:	sub    esp,0x18
10019677:	push   esi
10019678:	mov    eax,ds:0x1007e030
1001967d:	xor    eax,esp
1001967f:	push   eax
10019680:	lea    eax,[esp+0x20]
10019684:	mov    fs:0x0,eax
1001968a:	mov    esi,ecx
1001968c:	and    DWORD PTR [esp+0xc],0x0
10019691:	push   0x1f4
10019696:	push   DWORD PTR [esi+0xc]
10019699:	call   DWORD PTR ds:0x10066084
1001969f:	test   eax,eax
100196a1:	je     0x100196b1
100196a3:	call   0x10019818
100196a8:	and    DWORD PTR [edi+0x8],0x0
100196ac:	mov    DWORD PTR [edi+0x4],eax
100196af:	jmp    0x100196e8
100196b1:	lea    eax,[esp+0x10]
100196b5:	push   eax
100196b6:	mov    ecx,esi
100196b8:	call   0x100196fb
100196bd:	and    DWORD PTR [esp+0x28],0x0
100196c2:	push   DWORD PTR [esi+0xc]
100196c5:	call   DWORD PTR ds:0x10066094
100196cb:	push   edi
100196cc:	lea    ecx,[esp+0x14]
100196d0:	call   0x100196fb
100196d5:	lea    esi,[esp+0x10]
100196d9:	call   0x10019771
100196de:	push   DWORD PTR [esp+0x14]
100196e2:	call   0x10042f82
100196e7:	pop    ecx
100196e8:	mov    eax,edi
100196ea:	mov    ecx,DWORD PTR [esp+0x20]
100196ee:	mov    DWORD PTR fs:0x0,ecx
100196f5:	pop    ecx
100196f6:	pop    esi
100196f7:	mov    esp,ebp
100196f9:	pop    ebp
100196fa:	ret    
100196fb:	push   0x8
100196fd:	mov    eax,0x10060d3b
10019702:	call   0x10059b58
10019707:	mov    edi,ecx
10019709:	mov    esi,DWORD PTR [ebp+0x8]
1001970c:	call   0x10019818
10019711:	xor    ecx,ecx
10019713:	mov    DWORD PTR [ebp-0x4],ecx
10019716:	mov    DWORD PTR [esi+0x4],eax
10019719:	mov    DWORD PTR [esi+0x8],ecx
1001971c:	mov    ecx,DWORD PTR [edi+0x4]
1001971f:	mov    edx,DWORD PTR [ecx]
10019721:	mov    eax,DWORD PTR [eax]
10019723:	push   ecx
10019724:	push   edi
10019725:	push   edx
10019726:	push   edi
10019727:	push   eax
10019728:	push   esi
10019729:	push   DWORD PTR [ebp+0x8]
1001972c:	push   esi
1001972d:	call   0x1001988a
10019732:	mov    eax,esi
10019734:	call   0x10059bfd
10019739:	ret    0x4
1001973c:	mov    esi,DWORD PTR [ebp+0x8]
1001973f:	call   0x10019771
10019744:	push   DWORD PTR [esi+0x4]
10019747:	call   0x10042f82
1001974c:	pop    ecx
1001974d:	xor    ecx,ecx
1001974f:	push   ecx
10019750:	push   ecx
10019751:	mov    DWORD PTR [esi+0x4],ecx
10019754:	call   0x10047aa4
10019759:	int3   
1001975a:	push   esi
1001975b:	mov    esi,eax
1001975d:	call   0x10019771
10019762:	push   DWORD PTR [esi+0x4]
10019765:	call   0x10042f82
1001976a:	and    DWORD PTR [esi+0x4],0x0
1001976e:	pop    ecx
1001976f:	pop    esi
10019770:	ret    
10019771:	mov    eax,DWORD PTR [esi+0x4]
10019774:	push   edi
10019775:	mov    edi,DWORD PTR [eax]
10019777:	mov    DWORD PTR [eax],eax
10019779:	mov    eax,DWORD PTR [esi+0x4]
1001977c:	mov    DWORD PTR [eax+0x4],eax
1001977f:	and    DWORD PTR [esi+0x8],0x0
10019783:	cmp    edi,DWORD PTR [esi+0x4]
10019786:	je     0x100197a6
10019788:	push   ebx
10019789:	mov    ebx,DWORD PTR [edi]
1001978b:	push   0x0
1001978d:	push   0x1
1001978f:	lea    ecx,[edi+0x8]
10019792:	call   0x100012eb
10019797:	push   edi
10019798:	call   0x10042f82
1001979d:	cmp    ebx,DWORD PTR [esi+0x4]
100197a0:	pop    ecx
100197a1:	mov    edi,ebx
100197a3:	jne    0x10019789
100197a5:	pop    ebx
100197a6:	pop    edi
100197a7:	ret    
100197a8:	push   0x48
100197aa:	mov    eax,0x100621c0
100197af:	call   0x10059b25
100197b4:	push   DWORD PTR [ebp+0x8]
100197b7:	mov    esi,DWORD PTR [ebp+0x10]
100197ba:	push   DWORD PTR [esi+0x4]
100197bd:	push   esi
100197be:	call   0x10019830
100197c3:	mov    ecx,DWORD PTR [edi+0x8]
100197c6:	mov    edx,0x9249249
100197cb:	sub    edx,ecx
100197cd:	cmp    edx,0x1
100197d0:	jae    0x10019804
100197d2:	push   0x1006feac
100197d7:	lea    ecx,[ebp-0x2c]
100197da:	call   0x100011c8
100197df:	and    DWORD PTR [ebp-0x4],0x0
100197e3:	lea    eax,[ebp-0x2c]
100197e6:	push   eax
100197e7:	lea    ecx,[ebp-0x54]
100197ea:	call   0x10001065
100197ef:	push   0x10074ec8
100197f4:	lea    eax,[ebp-0x54]
100197f7:	push   eax
100197f8:	mov    DWORD PTR [ebp-0x54],0x1006b96c
100197ff:	call   0x10047aa4
10019804:	inc    ecx
10019805:	mov    DWORD PTR [edi+0x8],ecx
10019808:	mov    DWORD PTR [esi+0x4],eax
1001980b:	mov    ecx,DWORD PTR [eax+0x4]
1001980e:	mov    DWORD PTR [ecx],eax
10019810:	call   0x10059bfd
10019815:	ret    0xc
10019818:	push   0x24
1001981a:	call   0x1004358e
1001981f:	test   eax,eax
10019821:	pop    ecx
10019822:	je     0x10019826
10019824:	mov    DWORD PTR [eax],eax
10019826:	lea    ecx,[eax+0x4]
10019829:	test   ecx,ecx
1001982b:	je     0x1001982f
1001982d:	mov    DWORD PTR [ecx],eax
1001982f:	ret    
10019830:	push   0x8
10019832:	mov    eax,0x10060351
10019837:	call   0x10059b58
1001983c:	push   0x24
1001983e:	call   0x1004358e
10019843:	and    DWORD PTR [ebp-0x4],0x0
10019847:	mov    esi,eax
10019849:	test   esi,esi
1001984b:	pop    ecx
1001984c:	mov    DWORD PTR [ebp-0x14],esi
1001984f:	je     0x10019856
10019851:	mov    eax,DWORD PTR [ebp+0x8]
10019854:	mov    DWORD PTR [esi],eax
10019856:	lea    eax,[esi+0x4]
10019859:	test   eax,eax
1001985b:	je     0x10019862
1001985d:	mov    ecx,DWORD PTR [ebp+0xc]
10019860:	mov    DWORD PTR [eax],ecx
10019862:	push   DWORD PTR [ebp+0x10]
10019865:	lea    ecx,[esi+0x8]
10019868:	call   0x10010001
1001986d:	mov    eax,esi
1001986f:	call   0x10059bfd
10019874:	ret    0xc
10019877:	push   DWORD PTR [ebp-0x14]
1001987a:	call   0x10042f82
1001987f:	pop    ecx
10019880:	push   0x0
10019882:	push   0x0
10019884:	call   0x10047aa4
10019889:	int3   
1001988a:	push   0x14
1001988c:	mov    eax,0x10060d20
10019891:	call   0x10059b58
10019896:	mov    edi,DWORD PTR [ebp+0x18]
10019899:	mov    esi,DWORD PTR [ebp+0x1c]
1001989c:	and    DWORD PTR [ebp-0x4],0x0
100198a0:	mov    DWORD PTR [ebp-0x18],edi
100198a3:	mov    DWORD PTR [ebp-0x14],esi
100198a6:	test   edi,edi
100198a8:	je     0x100198af
100198aa:	cmp    edi,DWORD PTR [ebp+0x20]
100198ad:	je     0x100198b4
100198af:	call   0x100434a0
100198b4:	cmp    esi,DWORD PTR [ebp+0x24]
100198b7:	je     0x1001994b
100198bd:	test   edi,edi
100198bf:	jne    0x100198c6
100198c1:	call   0x100434a0
100198c6:	cmp    esi,DWORD PTR [edi+0x4]
100198c9:	jne    0x100198d0
100198cb:	call   0x100434a0
100198d0:	push   DWORD PTR [ebp+0x14]
100198d3:	mov    edi,DWORD PTR [ebp+0x8]
100198d6:	push   DWORD PTR [ebp+0x10]
100198d9:	add    esi,0x8
100198dc:	push   esi
100198dd:	call   0x100197a8
100198e2:	lea    esi,[ebp+0x18]
100198e5:	call   0x100268f0
100198ea:	mov    esi,DWORD PTR [ebp+0x1c]
100198ed:	mov    edi,DWORD PTR [ebp+0x18]
100198f0:	jmp    0x100198a6
100198f2:	mov    edi,DWORD PTR [ebp+0x14]
100198f5:	mov    eax,DWORD PTR [ebp-0x18]
100198f8:	test   eax,eax
100198fa:	je     0x10019901
100198fc:	cmp    eax,DWORD PTR [ebp+0x18]
100198ff:	je     0x10019906
10019901:	call   0x100434a0
10019906:	mov    eax,DWORD PTR [ebp-0x14]
10019909:	cmp    eax,DWORD PTR [ebp+0x1c]
1001990c:	je     0x10019942
1001990e:	mov    ebx,DWORD PTR [ebp+0x10]
10019911:	test   ebx,ebx
10019913:	mov    DWORD PTR [ebp+0x24],edi
10019916:	jne    0x1001991d
10019918:	call   0x100434a0
1001991d:	mov    esi,DWORD PTR [edi+0x4]
10019920:	cmp    esi,DWORD PTR [ebx+0x4]
10019923:	jne    0x1001992a
10019925:	call   0x100434a0
1001992a:	push   esi
1001992b:	push   ebx
1001992c:	mov    ebx,DWORD PTR [ebp+0x8]
1001992f:	lea    eax,[ebp-0x20]
10019932:	push   eax
10019933:	call   0x10019953
10019938:	lea    esi,[ebp-0x18]
1001993b:	call   0x100268f0
10019940:	jmp    0x100198f5
10019942:	push   0x0
10019944:	push   0x0
10019946:	call   0x10047aa4
1001994b:	call   0x10059bfd
10019950:	ret    0x20
10019953:	push   ebp
10019954:	mov    ebp,esp
10019956:	push   ecx
10019957:	push   ecx
10019958:	mov    eax,DWORD PTR [ebp+0xc]
1001995b:	push   esi
1001995c:	push   edi
1001995d:	mov    edi,DWORD PTR [ebp+0x10]
10019960:	lea    esi,[ebp+0xc]
10019963:	mov    DWORD PTR [ebp-0x8],eax
10019966:	call   0x100268f0
1001996b:	cmp    edi,DWORD PTR [ebx+0x4]
1001996e:	je     0x10019995
10019970:	mov    eax,DWORD PTR [edi+0x4]
10019973:	mov    ecx,DWORD PTR [edi]
10019975:	mov    DWORD PTR [eax],ecx
10019977:	mov    ecx,DWORD PTR [edi+0x4]
1001997a:	mov    eax,DWORD PTR [edi]
1001997c:	push   0x0
1001997e:	mov    DWORD PTR [eax+0x4],ecx
10019981:	push   0x1
10019983:	lea    ecx,[edi+0x8]
10019986:	call   0x100012eb
1001998b:	push   edi
1001998c:	call   0x10042f82
10019991:	dec    DWORD PTR [ebx+0x8]
10019994:	pop    ecx
10019995:	mov    ecx,DWORD PTR [ebp+0xc]
10019998:	mov    eax,DWORD PTR [ebp+0x8]
1001999b:	mov    DWORD PTR [eax],ecx
1001999d:	mov    ecx,DWORD PTR [ebp+0x10]
100199a0:	pop    edi
100199a1:	mov    DWORD PTR [eax+0x4],ecx
100199a4:	pop    esi
100199a5:	leave  
100199a6:	ret    0xc
100199a9:	push   esi
100199aa:	push   0x1006cd08
100199af:	lea    esi,[edi+0x4]
100199b2:	call   0x10006639
100199b7:	test   al,al
100199b9:	pop    ecx
100199ba:	pop    esi
100199bb:	je     0x100199c6
100199bd:	cmp    DWORD PTR [edi],0x0
100199c0:	jne    0x100199c6
100199c2:	xor    eax,eax
100199c4:	inc    eax
100199c5:	ret    
100199c6:	xor    eax,eax
100199c8:	ret    
100199c9:	push   ebp
100199ca:	mov    ebp,esp
100199cc:	push   ecx
100199cd:	mov    ecx,DWORD PTR [ebp+0x8]
100199d0:	and    DWORD PTR [ebp-0x4],0x0
100199d4:	add    eax,0x4
100199d7:	push   eax
100199d8:	call   0x100011a2
100199dd:	mov    eax,DWORD PTR [ebp+0x8]
100199e0:	leave  
100199e1:	ret    0x4
100199e4:	push   0x0
100199e6:	mov    eax,0x10061d81
100199eb:	call   0x10059b25
100199f0:	mov    edi,DWORD PTR [ebp+0x8]
100199f3:	call   0x1001a3ef
100199f8:	lea    ecx,[edi+0x4]
100199fb:	mov    DWORD PTR [ecx],eax
100199fd:	mov    BYTE PTR [eax+0x4d],0x1
10019a01:	mov    eax,DWORD PTR [ecx]
10019a03:	mov    DWORD PTR [eax+0x4],eax
10019a06:	mov    eax,DWORD PTR [ecx]
10019a08:	mov    DWORD PTR [eax],eax
10019a0a:	mov    ecx,DWORD PTR [ecx]
10019a0c:	xor    ebx,ebx
10019a0e:	mov    DWORD PTR [ecx+0x8],ecx
10019a11:	mov    DWORD PTR [edi+0x8],ebx
10019a14:	lea    esi,[edi+0xc]
10019a17:	mov    DWORD PTR [ebp-0x4],ebx
10019a1a:	call   0x10013f6a
10019a1f:	mov    eax,DWORD PTR [ebp+0xc]
10019a22:	push   ebx
10019a23:	mov    DWORD PTR [edi+0x1c],eax
10019a26:	mov    eax,DWORD PTR [ebp+0x10]
10019a29:	push   ebx
10019a2a:	push   ebx
10019a2b:	mov    DWORD PTR [edi+0x20],eax
10019a2e:	call   DWORD PTR ds:0x10066074
10019a34:	mov    DWORD PTR [edi+0x18],eax
10019a37:	mov    eax,edi
10019a39:	call   0x10059bfd
10019a3e:	ret    0xc
10019a41:	push   ebp
10019a42:	mov    ebp,esp
10019a44:	and    esp,0xfffffff8
10019a47:	push   0xffffffff
10019a49:	push   0x10061d51
10019a4e:	mov    eax,fs:0x0
10019a54:	push   eax
10019a55:	sub    esp,0x60
10019a58:	mov    eax,ds:0x1007e030
10019a5d:	xor    eax,esp
10019a5f:	mov    DWORD PTR [esp+0x58],eax
10019a63:	push   esi
10019a64:	mov    eax,ds:0x1007e030
10019a69:	xor    eax,esp
10019a6b:	push   eax
10019a6c:	lea    eax,[esp+0x68]
10019a70:	mov    fs:0x0,eax
10019a76:	mov    eax,DWORD PTR [ebp+0x8]
10019a79:	push   eax
10019a7a:	lea    esi,[esp+0x2c]
10019a7e:	call   0x10030470
10019a83:	pop    ecx
10019a84:	lea    ecx,[esp+0x44]
10019a88:	push   ecx
10019a89:	xor    esi,esi
10019a8b:	mov    ecx,eax
10019a8d:	mov    DWORD PTR [esp+0x74],esi
10019a91:	call   0x1002fbd0
10019a96:	pop    ecx
10019a97:	push   esi
10019a98:	push   0x1
10019a9a:	lea    ecx,[esp+0x30]
10019a9e:	mov    BYTE PTR [esp+0x78],0x2
10019aa3:	call   0x100012eb
10019aa8:	mov    eax,DWORD PTR [ebp+0xc]
10019aab:	push   ebx
10019aac:	lea    ecx,[esp+0x10]
10019ab0:	mov    DWORD PTR [esp+0xc],eax
10019ab4:	call   0x100011a2
10019ab9:	lea    eax,[esp+0x8]
10019abd:	push   eax
10019abe:	lea    edx,[esp+0x48]
10019ac2:	mov    ecx,edi
10019ac4:	mov    BYTE PTR [esp+0x74],0x3
10019ac9:	call   0x10019c7a
10019ace:	push   esi
10019acf:	push   0x1
10019ad1:	lea    ecx,[esp+0x14]
10019ad5:	call   0x100012eb
10019ada:	push   esi
10019adb:	push   0x1
10019add:	lea    ecx,[esp+0x4c]
10019ae1:	call   0x100012eb
10019ae6:	mov    ecx,DWORD PTR [esp+0x68]
10019aea:	mov    DWORD PTR fs:0x0,ecx
10019af1:	pop    ecx
10019af2:	pop    esi
10019af3:	mov    ecx,DWORD PTR [esp+0x58]
10019af7:	xor    ecx,esp
10019af9:	call   0x10042f87
10019afe:	mov    esp,ebp
10019b00:	pop    ebp
10019b01:	ret    0x8
10019b04:	push   ebp
10019b05:	mov    ebp,esp
10019b07:	and    esp,0xfffffff8
10019b0a:	push   0xffffffff
10019b0c:	push   0x10062b1f
10019b11:	mov    eax,fs:0x0
10019b17:	push   eax
10019b18:	sub    esp,0x90
10019b1e:	mov    eax,ds:0x1007e030
10019b23:	xor    eax,esp
10019b25:	mov    DWORD PTR [esp+0x88],eax
10019b2c:	push   ebx
10019b2d:	push   esi
10019b2e:	push   edi
10019b2f:	mov    eax,ds:0x1007e030
10019b34:	xor    eax,esp
10019b36:	push   eax
10019b37:	lea    eax,[esp+0xa0]
10019b3e:	mov    fs:0x0,eax
10019b44:	mov    eax,DWORD PTR [ebp+0x8]
10019b47:	mov    DWORD PTR [esp+0x1c],eax
10019b4b:	mov    eax,DWORD PTR [ebp+0xc]
10019b4e:	mov    esi,ecx
10019b50:	mov    edi,0x1006cd08
10019b55:	xor    ebx,ebx
10019b57:	push   edi
10019b58:	lea    ecx,[esp+0x44]
10019b5c:	mov    DWORD PTR [esp+0x1c],eax
10019b60:	mov    DWORD PTR [esp+0x24],ebx
10019b64:	call   0x100011c8
10019b69:	lea    eax,[esp+0x40]
10019b6d:	mov    DWORD PTR [esp+0xa8],ebx
10019b74:	push   eax
10019b75:	lea    ecx,[esp+0x80]
10019b7c:	mov    DWORD PTR [esp+0x7c],ebx
10019b80:	call   0x100011a2
10019b85:	push   ebx
10019b86:	push   0x1
10019b88:	lea    ecx,[esp+0x48]
10019b8c:	mov    BYTE PTR [esp+0xb0],0x2
10019b94:	call   0x100012eb
10019b99:	push   esi
10019b9a:	lea    esi,[esp+0x60]
10019b9e:	call   0x10030470
10019ba3:	pop    ecx
10019ba4:	lea    ecx,[esp+0x24]
10019ba8:	push   ecx
10019ba9:	mov    ecx,eax
10019bab:	mov    BYTE PTR [esp+0xac],0x3
10019bb3:	call   0x1002fbd0
10019bb8:	pop    ecx
10019bb9:	lea    ecx,[esp+0x78]
10019bbd:	push   ecx
10019bbe:	push   eax
10019bbf:	push   DWORD PTR [esp+0x24]
10019bc3:	mov    BYTE PTR [esp+0xb4],0x4
10019bcb:	call   0x10019ecc
10019bd0:	xor    esi,esi
10019bd2:	push   ebx
10019bd3:	inc    esi
10019bd4:	push   esi
10019bd5:	lea    ecx,[esp+0x2c]
10019bd9:	mov    BYTE PTR [esp+0x1f],al
10019bdd:	call   0x100012eb
10019be2:	push   ebx
10019be3:	push   esi
10019be4:	lea    ecx,[esp+0x64]
10019be8:	mov    BYTE PTR [esp+0xb0],0x2
10019bf0:	call   0x100012eb
10019bf5:	cmp    BYTE PTR [esp+0x17],bl
10019bf9:	je     0x10019c14
10019bfb:	mov    eax,DWORD PTR [esp+0x78]
10019bff:	mov    edi,DWORD PTR [esp+0x18]
10019c03:	mov    DWORD PTR [edi],eax
10019c05:	lea    eax,[esp+0x7c]
10019c09:	push   eax
10019c0a:	lea    ecx,[edi+0x4]
10019c0d:	call   0x100011a2
10019c12:	jmp    0x10019c44
10019c14:	push   edi
10019c15:	lea    ecx,[esp+0x28]
10019c19:	call   0x100011c8
10019c1e:	mov    edi,DWORD PTR [esp+0x18]
10019c22:	lea    eax,[esp+0x24]
10019c26:	mov    BYTE PTR [esp+0xa8],0x5
10019c2e:	push   eax
10019c2f:	lea    ecx,[edi+0x4]
10019c32:	mov    DWORD PTR [edi],ebx
10019c34:	call   0x100011a2
10019c39:	push   ebx
10019c3a:	push   esi
10019c3b:	lea    ecx,[esp+0x2c]
10019c3f:	call   0x100012eb
10019c44:	push   ebx
10019c45:	push   esi
10019c46:	lea    ecx,[esp+0x84]
10019c4d:	call   0x100012eb
10019c52:	mov    eax,edi
10019c54:	mov    ecx,DWORD PTR [esp+0xa0]
10019c5b:	mov    DWORD PTR fs:0x0,ecx
10019c62:	pop    ecx
10019c63:	pop    edi
10019c64:	pop    esi
10019c65:	pop    ebx
10019c66:	mov    ecx,DWORD PTR [esp+0x88]
10019c6d:	xor    ecx,esp
10019c6f:	call   0x10042f87
10019c74:	mov    esp,ebp
10019c76:	pop    ebp
10019c77:	ret    0x8
10019c7a:	push   0xf0
10019c7f:	mov    eax,0x10061d11
10019c84:	call   0x10059bc4
10019c89:	mov    eax,DWORD PTR [ebp+0x8]
10019c8c:	mov    edi,ecx
10019c8e:	push   0x1f4
10019c93:	push   DWORD PTR [edi+0x18]
10019c96:	mov    esi,edx
10019c98:	mov    DWORD PTR [ebp-0x50],edi
10019c9b:	mov    DWORD PTR [ebp-0x4c],esi
10019c9e:	mov    DWORD PTR [ebp-0x54],eax
10019ca1:	call   DWORD PTR ds:0x10066084
10019ca7:	test   eax,eax
10019ca9:	jne    0x10019d74
10019caf:	and    DWORD PTR [ebp-0x4],eax
10019cb2:	push   edi
10019cb3:	call   0x10019f90
10019cb8:	push   esi
10019cb9:	lea    ebx,[ebp-0x44]
10019cbc:	mov    esi,edi
10019cbe:	call   0x1001a167
10019cc3:	mov    ebx,DWORD PTR [edi+0x4]
10019cc6:	xor    esi,esi
10019cc8:	cmp    DWORD PTR [ebp-0x44],esi
10019ccb:	je     0x10019cd2
10019ccd:	cmp    DWORD PTR [ebp-0x44],edi
10019cd0:	je     0x10019cd7
10019cd2:	call   0x100434a0
10019cd7:	cmp    DWORD PTR [ebp-0x40],ebx
10019cda:	je     0x10019d7c
10019ce0:	lea    ebx,[edi+0xc]
10019ce3:	mov    eax,DWORD PTR [ebx+0x4]
10019ce6:	mov    DWORD PTR [ebp-0x58],eax
10019ce9:	lea    eax,[ebp-0x60]
10019cec:	mov    DWORD PTR [ebp-0x60],esi
10019cef:	mov    DWORD PTR [ebp-0x5c],ebx
10019cf2:	call   0x10013840
10019cf7:	mov    esi,DWORD PTR [eax]
10019cf9:	inc    esi
10019cfa:	cmp    DWORD PTR [ebp-0x44],0x0
10019cfe:	mov    DWORD PTR [ebp-0x48],esi
10019d01:	jne    0x10019d08
10019d03:	call   0x100434a0
10019d08:	mov    edi,DWORD PTR [ebp-0x40]
10019d0b:	mov    eax,DWORD PTR [ebp-0x44]
10019d0e:	cmp    edi,DWORD PTR [eax+0x4]
10019d11:	jne    0x10019d18
10019d13:	call   0x100434a0
10019d18:	lea    edx,[edi+0x48]
10019d1b:	mov    eax,ebx
10019d1d:	mov    DWORD PTR [ebp-0x4c],edx
10019d20:	call   0x100134a2
10019d25:	lea    eax,[ebp-0x48]
10019d28:	push   eax
10019d29:	lea    edi,[ebp-0x60]
10019d2c:	call   0x100133e9
10019d31:	mov    edi,DWORD PTR [ebp-0x40]
10019d34:	mov    ebx,DWORD PTR [ebp-0x44]
10019d37:	cmp    edi,DWORD PTR [ebx+0x4]
10019d3a:	jne    0x10019d41
10019d3c:	call   0x100434a0
10019d41:	mov    eax,DWORD PTR [ebp-0x54]
10019d44:	mov    ecx,DWORD PTR [eax]
10019d46:	push   0xffffffff
10019d48:	push   0x0
10019d4a:	add    eax,0x4
10019d4d:	mov    DWORD PTR [edi+0x28],ecx
10019d50:	push   eax
10019d51:	lea    ecx,[edi+0x2c]
10019d54:	call   0x1000123c
10019d59:	cmp    edi,DWORD PTR [ebx+0x4]
10019d5c:	jne    0x10019d63
10019d5e:	call   0x100434a0
10019d63:	mov    eax,DWORD PTR [ebp-0x4c]
10019d66:	mov    DWORD PTR [eax],esi
10019d68:	mov    eax,DWORD PTR [ebp-0x50]
10019d6b:	push   DWORD PTR [eax+0x18]
10019d6e:	call   DWORD PTR ds:0x10066094
10019d74:	call   0x10059c20
10019d79:	ret    0x4
10019d7c:	push   0x1006cd08
10019d81:	lea    ecx,[ebp-0x7c]
10019d84:	call   0x100011c8
10019d89:	lea    eax,[ebp-0x7c]
10019d8c:	mov    BYTE PTR [ebp-0x4],0x1
10019d90:	push   eax
10019d91:	lea    ecx,[ebp-0x38]
10019d94:	mov    DWORD PTR [ebp-0x3c],esi
10019d97:	call   0x100011a2
10019d9c:	push   esi
10019d9d:	push   0x1
10019d9f:	lea    ecx,[ebp-0x7c]
10019da2:	call   0x100012eb
10019da7:	mov    BYTE PTR [ebp-0x4],0x2
10019dab:	cmp    DWORD PTR [edi+0x14],esi
10019dae:	je     0x10019dcc
10019db0:	mov    eax,DWORD PTR [edi+0x10]
10019db3:	add    edi,0xc
10019db6:	mov    DWORD PTR [ebp-0x58],eax
10019db9:	lea    eax,[ebp-0x60]
10019dbc:	mov    DWORD PTR [ebp-0x60],esi
10019dbf:	mov    DWORD PTR [ebp-0x5c],edi
10019dc2:	call   0x10013840
10019dc7:	mov    eax,DWORD PTR [eax]
10019dc9:	inc    eax
10019dca:	jmp    0x10019dce
10019dcc:	xor    eax,eax
10019dce:	mov    DWORD PTR [ebp-0x48],eax
10019dd1:	mov    DWORD PTR [ebp-0x1c],eax
10019dd4:	mov    eax,DWORD PTR [ebp-0x54]
10019dd7:	mov    ecx,DWORD PTR [eax]
10019dd9:	push   0xffffffff
10019ddb:	push   esi
10019ddc:	add    eax,0x4
10019ddf:	mov    DWORD PTR [ebp-0x3c],ecx
10019de2:	push   eax
10019de3:	lea    ecx,[ebp-0x38]
10019de6:	call   0x1000123c
10019deb:	mov    eax,DWORD PTR [ebp-0x3c]
10019dee:	sub    esp,0x24
10019df1:	mov    esi,esp
10019df3:	mov    DWORD PTR [esi],eax
10019df5:	lea    eax,[ebp-0x38]
10019df8:	mov    DWORD PTR [ebp-0x54],esp
10019dfb:	push   eax
10019dfc:	lea    ecx,[esi+0x4]
10019dff:	call   0x100011a2
10019e04:	mov    eax,DWORD PTR [ebp-0x1c]
10019e07:	mov    DWORD PTR [esi+0x20],eax
10019e0a:	sub    esp,0x1c
10019e0d:	mov    BYTE PTR [ebp-0x4],0x3
10019e11:	mov    ecx,esp
10019e13:	mov    DWORD PTR [ebp-0x40],esp
10019e16:	push   DWORD PTR [ebp-0x4c]
10019e19:	call   0x100011a2
10019e1e:	lea    esi,[ebp-0xfc]
10019e24:	mov    BYTE PTR [ebp-0x4],0x2
10019e28:	call   0x1001a467
10019e2d:	add    esp,0x40
10019e30:	mov    esi,eax
10019e32:	push   esi
10019e33:	lea    ecx,[ebp-0xbc]
10019e39:	mov    BYTE PTR [ebp-0x4],0x4
10019e3d:	call   0x100011a2
10019e42:	lea    edi,[esi+0x1c]
10019e45:	lea    esi,[ebp-0xa0]
10019e4b:	mov    BYTE PTR [ebp-0x4],0x5
10019e4f:	call   0x10019f77
10019e54:	mov    ebx,DWORD PTR [ebp-0x50]
10019e57:	lea    eax,[ebp-0xbc]
10019e5d:	push   eax
10019e5e:	lea    edi,[ebp-0x60]
10019e61:	mov    BYTE PTR [ebp-0x4],0x6
10019e65:	call   0x1001a0c0
10019e6a:	xor    esi,esi
10019e6c:	xor    edi,edi
10019e6e:	push   esi
10019e6f:	inc    edi
10019e70:	push   edi
10019e71:	lea    ecx,[ebp-0x9c]
10019e77:	call   0x100012eb
10019e7c:	push   esi
10019e7d:	push   edi
10019e7e:	lea    ecx,[ebp-0xbc]
10019e84:	call   0x100012eb
10019e89:	push   esi
10019e8a:	push   edi
10019e8b:	lea    ecx,[ebp-0xdc]
10019e91:	mov    BYTE PTR [ebp-0x4],0x2
10019e95:	call   0x100012eb
10019e9a:	push   esi
10019e9b:	push   edi
10019e9c:	lea    ecx,[ebp-0xfc]
10019ea2:	call   0x100012eb
10019ea7:	lea    eax,[ebp-0x48]
10019eaa:	push   eax
10019eab:	add    ebx,0xc
10019eae:	lea    edi,[ebp-0x60]
10019eb1:	call   0x100133e9
10019eb6:	push   esi
10019eb7:	push   0x1
10019eb9:	lea    ecx,[ebp-0x38]
10019ebc:	call   0x100012eb
10019ec1:	jmp    0x10019d68
10019ec6:	mov    eax,0x10019d68
10019ecb:	ret    
10019ecc:	push   0x10
10019ece:	mov    eax,0x10062ad6
10019ed3:	call   0x10059b58
10019ed8:	mov    esi,DWORD PTR [ebp+0x8]
10019edb:	push   0x1f4
10019ee0:	push   DWORD PTR [esi+0x18]
10019ee3:	mov    BYTE PTR [ebp-0x11],0x0
10019ee7:	call   DWORD PTR ds:0x10066084
10019eed:	test   eax,eax
10019eef:	je     0x10019ef5
10019ef1:	xor    al,al
10019ef3:	jmp    0x10019f6f
10019ef5:	push   DWORD PTR [ebp+0xc]
10019ef8:	and    DWORD PTR [ebp-0x4],0x0
10019efc:	lea    ebx,[ebp-0x1c]
10019eff:	call   0x1001a167
10019f04:	cmp    DWORD PTR [ebp-0x1c],0x0
10019f08:	mov    edi,DWORD PTR [esi+0x4]
10019f0b:	je     0x10019f12
10019f0d:	cmp    DWORD PTR [ebp-0x1c],esi
10019f10:	je     0x10019f17
10019f12:	call   0x100434a0
10019f17:	mov    ebx,DWORD PTR [ebp-0x18]
10019f1a:	cmp    ebx,edi
10019f1c:	je     0x10019f63
10019f1e:	mov    edi,DWORD PTR [ebp-0x1c]
10019f21:	test   edi,edi
10019f23:	jne    0x10019f2a
10019f25:	call   0x100434a0
10019f2a:	cmp    ebx,DWORD PTR [edi+0x4]
10019f2d:	jne    0x10019f34
10019f2f:	call   0x100434a0
10019f34:	mov    ecx,DWORD PTR [ebx+0x28]
10019f37:	mov    eax,DWORD PTR [ebp+0x10]
10019f3a:	push   0xffffffff
10019f3c:	push   0x0
10019f3e:	add    ebx,0x2c
10019f41:	mov    DWORD PTR [eax],ecx
10019f43:	push   ebx
10019f44:	lea    ecx,[eax+0x4]
10019f47:	call   0x1000123c
10019f4c:	mov    BYTE PTR [ebp-0x11],0x1
10019f50:	jmp    0x10019f63
10019f52:	push   0x4
10019f54:	call   0x100379e0
10019f59:	pop    ecx
10019f5a:	mov    eax,0x10019f60
10019f5f:	ret    
10019f60:	mov    esi,DWORD PTR [ebp+0x8]
10019f63:	push   DWORD PTR [esi+0x18]
10019f66:	call   DWORD PTR ds:0x10066094
10019f6c:	mov    al,BYTE PTR [ebp-0x11]
10019f6f:	call   0x10059bfd
10019f74:	ret    0xc
10019f77:	mov    eax,DWORD PTR [edi]
10019f79:	mov    DWORD PTR [esi],eax
10019f7b:	lea    eax,[edi+0x4]
10019f7e:	push   eax
10019f7f:	lea    ecx,[esi+0x4]
10019f82:	call   0x100011a2
10019f87:	mov    eax,DWORD PTR [edi+0x20]
10019f8a:	mov    DWORD PTR [esi+0x20],eax
10019f8d:	mov    eax,esi
10019f8f:	ret    
10019f90:	push   0x38
10019f92:	mov    eax,0x10061cbd
10019f97:	call   0x10059b25
10019f9c:	mov    edi,DWORD PTR [ebp+0x8]
10019f9f:	mov    ecx,DWORD PTR [edi+0x1c]
10019fa2:	mov    edx,DWORD PTR [edi+0x20]
10019fa5:	mov    eax,DWORD PTR [edi+0x8]
10019fa8:	add    edx,ecx
10019faa:	cmp    eax,edx
10019fac:	jbe    0x1001a0b8
10019fb2:	and    DWORD PTR [ebp-0x10],0x0
10019fb6:	test   ecx,ecx
10019fb8:	lea    ebx,[edi+0xc]
10019fbb:	mov    eax,DWORD PTR [ebx+0x4]
10019fbe:	mov    eax,DWORD PTR [eax]
10019fc0:	mov    DWORD PTR [ebp-0x14],ebx
10019fc3:	mov    DWORD PTR [ebp-0x1c],ebx
10019fc6:	mov    DWORD PTR [ebp-0x18],eax
10019fc9:	je     0x10019fde
10019fcb:	lea    esi,[ebp-0x1c]
10019fce:	call   0x10001e6c
10019fd3:	inc    DWORD PTR [ebp-0x10]
10019fd6:	mov    eax,DWORD PTR [ebp-0x10]
10019fd9:	cmp    eax,DWORD PTR [edi+0x1c]
10019fdc:	jne    0x10019fcb
10019fde:	lea    esi,[ebp-0x1c]
10019fe1:	call   0x10013f4a
10019fe6:	mov    eax,DWORD PTR [eax]
10019fe8:	mov    DWORD PTR [ebp-0x10],eax
10019feb:	call   0x10014198
10019ff0:	mov    DWORD PTR [ebp-0x34],eax
10019ff3:	mov    BYTE PTR [eax+0x11],0x1
10019ff7:	mov    eax,DWORD PTR [ebp-0x34]
10019ffa:	mov    DWORD PTR [eax+0x4],eax
10019ffd:	mov    eax,DWORD PTR [ebp-0x34]
1001a000:	mov    DWORD PTR [eax],eax
1001a002:	mov    eax,DWORD PTR [ebp-0x34]
1001a005:	mov    DWORD PTR [eax+0x8],eax
1001a008:	and    DWORD PTR [ebp-0x30],0x0
1001a00c:	and    DWORD PTR [ebp-0x4],0x0
1001a010:	mov    eax,DWORD PTR [edi+0x4]
1001a013:	mov    esi,DWORD PTR [eax]
1001a015:	mov    DWORD PTR [ebp-0x1c],edi
1001a018:	mov    DWORD PTR [ebp-0x18],esi
1001a01b:	cmp    DWORD PTR [ebp-0x1c],0x0
1001a01f:	mov    eax,DWORD PTR [edi+0x4]
1001a022:	mov    DWORD PTR [ebp-0x20],eax
1001a025:	je     0x1001a02c
1001a027:	cmp    DWORD PTR [ebp-0x1c],edi
1001a02a:	je     0x1001a031
1001a02c:	call   0x100434a0
1001a031:	cmp    esi,DWORD PTR [ebp-0x20]
1001a034:	je     0x1001a094
1001a036:	cmp    DWORD PTR [ebp-0x1c],0x0
1001a03a:	jne    0x1001a041
1001a03c:	call   0x100434a0
1001a041:	mov    eax,DWORD PTR [ebp-0x1c]
1001a044:	cmp    esi,DWORD PTR [eax+0x4]
1001a047:	jne    0x1001a04e
1001a049:	call   0x100434a0
1001a04e:	lea    ecx,[esi+0x48]
1001a051:	mov    eax,DWORD PTR [ecx]
1001a053:	cmp    eax,DWORD PTR [ebp-0x10]
1001a056:	jae    0x1001a070
1001a058:	push   esi
1001a059:	push   DWORD PTR [ebp-0x1c]
1001a05c:	lea    eax,[ebp-0x2c]
1001a05f:	push   eax
1001a060:	push   edi
1001a061:	call   0x100019f3
1001a066:	mov    ecx,DWORD PTR [eax]
1001a068:	mov    esi,DWORD PTR [eax+0x4]
1001a06b:	mov    DWORD PTR [ebp-0x1c],ecx
1001a06e:	jmp    0x1001a018
1001a070:	sub    eax,DWORD PTR [ebp-0x10]
1001a073:	push   ecx
1001a074:	lea    edi,[ebp-0x44]
1001a077:	lea    ebx,[ebp-0x38]
1001a07a:	mov    DWORD PTR [ecx],eax
1001a07c:	call   0x100133e9
1001a081:	lea    esi,[ebp-0x1c]
1001a084:	call   0x10001e1f
1001a089:	mov    esi,DWORD PTR [ebp-0x18]
1001a08c:	mov    ebx,DWORD PTR [ebp-0x14]
1001a08f:	mov    edi,DWORD PTR [ebp+0x8]
1001a092:	jmp    0x1001a01b
1001a094:	mov    eax,DWORD PTR [ebx+0x4]
1001a097:	mov    ecx,DWORD PTR [ebp-0x34]
1001a09a:	mov    DWORD PTR [ebx+0x4],ecx
1001a09d:	mov    ecx,DWORD PTR [ebp-0x30]
1001a0a0:	mov    DWORD PTR [ebp-0x34],eax
1001a0a3:	mov    eax,DWORD PTR [ebx+0x8]
1001a0a6:	or     DWORD PTR [ebp-0x4],0xffffffff
1001a0aa:	mov    DWORD PTR [ebp-0x30],eax
1001a0ad:	lea    eax,[ebp-0x38]
1001a0b0:	mov    DWORD PTR [ebx+0x8],ecx
1001a0b3:	call   0x10001491
1001a0b8:	call   0x10059bfd
1001a0bd:	ret    0x4
1001a0c0:	push   ebp
1001a0c1:	mov    ebp,esp
1001a0c3:	sub    esp,0x18
1001a0c6:	mov    eax,DWORD PTR [ebx+0x4]
1001a0c9:	push   esi
1001a0ca:	mov    esi,DWORD PTR [eax+0x4]
1001a0cd:	mov    DWORD PTR [ebp-0x8],eax
1001a0d0:	mov    al,0x1
1001a0d2:	mov    BYTE PTR [ebp-0xc],al
1001a0d5:	jmp    0x1001a0f3
1001a0d7:	mov    ecx,DWORD PTR [ebp+0x8]
1001a0da:	lea    eax,[esi+0xc]
1001a0dd:	mov    DWORD PTR [ebp-0x8],esi
1001a0e0:	call   0x1000779d
1001a0e5:	test   al,al
1001a0e7:	mov    BYTE PTR [ebp-0xc],al
1001a0ea:	je     0x1001a0f0
1001a0ec:	mov    esi,DWORD PTR [esi]
1001a0ee:	jmp    0x1001a0f3
1001a0f0:	mov    esi,DWORD PTR [esi+0x8]
1001a0f3:	cmp    BYTE PTR [esi+0x4d],0x0
1001a0f7:	je     0x1001a0d7
1001a0f9:	test   al,al
1001a0fb:	mov    ecx,DWORD PTR [ebp-0x8]
1001a0fe:	mov    esi,ecx
1001a100:	mov    DWORD PTR [ebp-0x10],esi
1001a103:	mov    DWORD PTR [ebp-0x14],ebx
1001a106:	je     0x1001a13a
1001a108:	mov    eax,DWORD PTR [ebx+0x4]
1001a10b:	cmp    ecx,DWORD PTR [eax]
1001a10d:	jne    0x1001a12f
1001a10f:	push   DWORD PTR [ebp+0x8]
1001a112:	push   0x1
1001a114:	lea    eax,[ebp-0x14]
1001a117:	push   eax
1001a118:	mov    esi,ebx
1001a11a:	call   0x1001a1bf
1001a11f:	mov    ecx,DWORD PTR [eax]
1001a121:	mov    eax,DWORD PTR [eax+0x4]
1001a124:	mov    DWORD PTR [edi],ecx
1001a126:	mov    DWORD PTR [edi+0x4],eax
1001a129:	mov    BYTE PTR [edi+0x8],0x1
1001a12d:	jmp    0x1001a160
1001a12f:	lea    esi,[ebp-0x14]
1001a132:	call   0x1001a30a
1001a137:	mov    esi,DWORD PTR [ebp-0x10]
1001a13a:	mov    eax,DWORD PTR [ebp+0x8]
1001a13d:	lea    ecx,[esi+0xc]
1001a140:	call   0x1000779d
1001a145:	test   al,al
1001a147:	je     0x1001a154
1001a149:	push   DWORD PTR [ebp+0x8]
1001a14c:	mov    ecx,DWORD PTR [ebp-0x8]
1001a14f:	push   DWORD PTR [ebp-0xc]
1001a152:	jmp    0x1001a114
1001a154:	mov    eax,DWORD PTR [ebp-0x14]
1001a157:	mov    DWORD PTR [edi],eax
1001a159:	mov    DWORD PTR [edi+0x4],esi
1001a15c:	mov    BYTE PTR [edi+0x8],0x0
1001a160:	mov    eax,edi
1001a162:	pop    esi
1001a163:	leave  
1001a164:	ret    0x4
1001a167:	push   ebp
1001a168:	mov    ebp,esp
1001a16a:	sub    esp,0x18
1001a16d:	push   edi
1001a16e:	push   DWORD PTR [ebp+0x8]
1001a171:	mov    eax,esi
1001a173:	call   0x1001a36b
1001a178:	test   esi,esi
1001a17a:	mov    edi,eax
1001a17c:	mov    DWORD PTR [ebp-0x8],edi
1001a17f:	jne    0x1001a186
1001a181:	call   0x100434a0
1001a186:	cmp    edi,DWORD PTR [esi+0x4]
1001a189:	mov    DWORD PTR [ebp-0xc],esi
1001a18c:	je     0x1001a1a2
1001a18e:	mov    ecx,DWORD PTR [ebp+0x8]
1001a191:	lea    eax,[edi+0xc]
1001a194:	call   0x1000779d
1001a199:	test   al,al
1001a19b:	jne    0x1001a1a2
1001a19d:	lea    eax,[ebp-0xc]
1001a1a0:	jmp    0x1001a1ae
1001a1a2:	mov    eax,DWORD PTR [esi+0x4]
1001a1a5:	mov    DWORD PTR [ebp-0x10],eax
1001a1a8:	mov    DWORD PTR [ebp-0x14],esi
1001a1ab:	lea    eax,[ebp-0x14]
1001a1ae:	mov    ecx,DWORD PTR [eax]
1001a1b0:	mov    eax,DWORD PTR [eax+0x4]
1001a1b3:	mov    DWORD PTR [ebx+0x4],eax
1001a1b6:	mov    DWORD PTR [ebx],ecx
1001a1b8:	mov    eax,ebx
1001a1ba:	pop    edi
1001a1bb:	leave  
1001a1bc:	ret    0x4
1001a1bf:	push   0x48
1001a1c1:	mov    eax,0x100621c0
1001a1c6:	call   0x10059b25
1001a1cb:	mov    edi,ecx
1001a1cd:	cmp    DWORD PTR [esi+0x8],0x3fffffe
1001a1d4:	jb     0x1001a208
1001a1d6:	push   0x1006d02c
1001a1db:	lea    ecx,[ebp-0x2c]
1001a1de:	call   0x100011c8
1001a1e3:	and    DWORD PTR [ebp-0x4],0x0
1001a1e7:	lea    eax,[ebp-0x2c]
1001a1ea:	push   eax
1001a1eb:	lea    ecx,[ebp-0x54]
1001a1ee:	call   0x10001065
1001a1f3:	push   0x10074ec8
1001a1f8:	lea    eax,[ebp-0x54]
1001a1fb:	push   eax
1001a1fc:	mov    DWORD PTR [ebp-0x54],0x1006b96c
1001a203:	call   0x10047aa4
1001a208:	push   DWORD PTR [ebp+0x10]
1001a20b:	mov    eax,DWORD PTR [esi+0x4]
1001a20e:	push   eax
1001a20f:	push   edi
1001a210:	push   eax
1001a211:	call   0x1001a39d
1001a216:	inc    DWORD PTR [esi+0x8]
1001a219:	mov    ebx,eax
1001a21b:	mov    eax,DWORD PTR [esi+0x4]
1001a21e:	cmp    edi,eax
1001a220:	jne    0x1001a22f
1001a222:	mov    DWORD PTR [eax+0x4],ebx
1001a225:	mov    eax,DWORD PTR [esi+0x4]
1001a228:	mov    DWORD PTR [eax],ebx
1001a22a:	mov    eax,DWORD PTR [esi+0x4]
1001a22d:	jmp    0x1001a24d
1001a22f:	cmp    BYTE PTR [ebp+0xc],0x0
1001a233:	je     0x1001a242
1001a235:	mov    DWORD PTR [edi],ebx
1001a237:	mov    eax,DWORD PTR [esi+0x4]
1001a23a:	cmp    edi,DWORD PTR [eax]
1001a23c:	jne    0x1001a250
1001a23e:	mov    DWORD PTR [eax],ebx
1001a240:	jmp    0x1001a250
1001a242:	mov    DWORD PTR [edi+0x8],ebx
1001a245:	mov    eax,DWORD PTR [esi+0x4]
1001a248:	cmp    edi,DWORD PTR [eax+0x8]
1001a24b:	jne    0x1001a250
1001a24d:	mov    DWORD PTR [eax+0x8],ebx
1001a250:	mov    edi,ebx
1001a252:	lea    eax,[ebx+0x4]
1001a255:	jmp    0x1001a2e4
1001a25a:	mov    ecx,DWORD PTR [eax]
1001a25c:	mov    edx,DWORD PTR [ecx+0x4]
1001a25f:	cmp    ecx,DWORD PTR [edx]
1001a261:	jne    0x1001a298
1001a263:	mov    edx,DWORD PTR [edx+0x8]
1001a266:	cmp    BYTE PTR [edx+0x4c],0x0
1001a26a:	je     0x1001a2a0
1001a26c:	cmp    edi,DWORD PTR [ecx+0x8]
1001a26f:	jne    0x1001a279
1001a271:	push   esi
1001a272:	mov    edi,ecx
1001a274:	call   0x10001d9d
1001a279:	mov    eax,DWORD PTR [edi+0x4]
1001a27c:	mov    BYTE PTR [eax+0x4c],0x1
1001a280:	mov    eax,DWORD PTR [edi+0x4]
1001a283:	mov    eax,DWORD PTR [eax+0x4]
1001a286:	mov    BYTE PTR [eax+0x4c],0x0
1001a28a:	mov    eax,DWORD PTR [edi+0x4]
1001a28d:	mov    ecx,DWORD PTR [eax+0x4]
1001a290:	push   esi
1001a291:	call   0x10001ddd
1001a296:	jmp    0x1001a2e1
1001a298:	mov    edx,DWORD PTR [edx]
1001a29a:	cmp    BYTE PTR [edx+0x4c],0x0
1001a29e:	jne    0x1001a2b8
1001a2a0:	mov    BYTE PTR [ecx+0x4c],0x1
1001a2a4:	mov    BYTE PTR [edx+0x4c],0x1
1001a2a8:	mov    ecx,DWORD PTR [eax]
1001a2aa:	mov    ecx,DWORD PTR [ecx+0x4]
1001a2ad:	mov    BYTE PTR [ecx+0x4c],0x0
1001a2b1:	mov    eax,DWORD PTR [eax]
1001a2b3:	mov    edi,DWORD PTR [eax+0x4]
1001a2b6:	jmp    0x1001a2e1
1001a2b8:	cmp    edi,DWORD PTR [ecx]
1001a2ba:	jne    0x1001a2c4
1001a2bc:	push   esi
1001a2bd:	mov    edi,ecx
1001a2bf:	call   0x10001ddd
1001a2c4:	mov    eax,DWORD PTR [edi+0x4]
1001a2c7:	mov    BYTE PTR [eax+0x4c],0x1
1001a2cb:	mov    eax,DWORD PTR [edi+0x4]
1001a2ce:	mov    eax,DWORD PTR [eax+0x4]
1001a2d1:	mov    BYTE PTR [eax+0x4c],0x0
1001a2d5:	mov    eax,DWORD PTR [edi+0x4]
1001a2d8:	mov    ecx,DWORD PTR [eax+0x4]
1001a2db:	push   esi
1001a2dc:	call   0x10001d9d
1001a2e1:	lea    eax,[edi+0x4]
1001a2e4:	mov    ecx,DWORD PTR [eax]
1001a2e6:	cmp    BYTE PTR [ecx+0x4c],0x0
1001a2ea:	je     0x1001a25a
1001a2f0:	mov    eax,DWORD PTR [esi+0x4]
1001a2f3:	mov    eax,DWORD PTR [eax+0x4]
1001a2f6:	mov    BYTE PTR [eax+0x4c],0x1
1001a2fa:	mov    eax,DWORD PTR [ebp+0x8]
1001a2fd:	mov    DWORD PTR [eax+0x4],ebx
1001a300:	mov    DWORD PTR [eax],esi
1001a302:	call   0x10059bfd
1001a307:	ret    0xc
1001a30a:	push   ebx
1001a30b:	xor    ebx,ebx
1001a30d:	cmp    DWORD PTR [esi],ebx
1001a30f:	jne    0x1001a316
1001a311:	call   0x100434a0
1001a316:	mov    eax,DWORD PTR [esi+0x4]
1001a319:	cmp    BYTE PTR [eax+0x4d],bl
1001a31c:	je     0x1001a32b
1001a31e:	mov    eax,DWORD PTR [eax+0x8]
1001a321:	mov    DWORD PTR [esi+0x4],eax
1001a324:	cmp    BYTE PTR [eax+0x4d],bl
1001a327:	je     0x1001a367
1001a329:	jmp    0x1001a35d
1001a32b:	mov    ecx,DWORD PTR [eax]
1001a32d:	cmp    BYTE PTR [ecx+0x4d],bl
1001a330:	jne    0x1001a34d
1001a332:	jmp    0x1001a336
1001a334:	mov    ecx,eax
1001a336:	mov    eax,DWORD PTR [ecx+0x8]
1001a339:	cmp    BYTE PTR [eax+0x4d],bl
1001a33c:	je     0x1001a334
1001a33e:	mov    DWORD PTR [esi+0x4],ecx
1001a341:	jmp    0x1001a367
1001a343:	mov    ecx,DWORD PTR [esi+0x4]
1001a346:	cmp    ecx,DWORD PTR [eax]
1001a348:	jne    0x1001a355
1001a34a:	mov    DWORD PTR [esi+0x4],eax
1001a34d:	mov    eax,DWORD PTR [eax+0x4]
1001a350:	cmp    BYTE PTR [eax+0x4d],bl
1001a353:	je     0x1001a343
1001a355:	mov    ecx,DWORD PTR [esi+0x4]
1001a358:	cmp    BYTE PTR [ecx+0x4d],bl
1001a35b:	je     0x1001a364
1001a35d:	call   0x100434a0
1001a362:	jmp    0x1001a367
1001a364:	mov    DWORD PTR [esi+0x4],eax
1001a367:	mov    eax,esi
1001a369:	pop    ebx
1001a36a:	ret    
1001a36b:	mov    eax,DWORD PTR [eax+0x4]
1001a36e:	push   esi
1001a36f:	mov    esi,DWORD PTR [eax+0x4]
1001a372:	push   edi
1001a373:	mov    edi,eax
1001a375:	jmp    0x1001a390
1001a377:	mov    eax,DWORD PTR [esp+0xc]
1001a37b:	lea    ecx,[esi+0xc]
1001a37e:	call   0x1000779d
1001a383:	test   al,al
1001a385:	je     0x1001a38c
1001a387:	mov    esi,DWORD PTR [esi+0x8]
1001a38a:	jmp    0x1001a390
1001a38c:	mov    edi,esi
1001a38e:	mov    esi,DWORD PTR [esi]
1001a390:	cmp    BYTE PTR [esi+0x4d],0x0
1001a394:	je     0x1001a377
1001a396:	mov    eax,edi
1001a398:	pop    edi
1001a399:	pop    esi
1001a39a:	ret    0x4
1001a39d:	push   0x8
1001a39f:	mov    eax,0x10060d05
1001a3a4:	call   0x10059b58
1001a3a9:	push   0x50
1001a3ab:	call   0x1004358e
1001a3b0:	mov    ebx,eax
1001a3b2:	pop    ecx
1001a3b3:	mov    DWORD PTR [ebp-0x14],ebx
1001a3b6:	test   ebx,ebx
1001a3b8:	mov    DWORD PTR [ebp-0x4],0x1
1001a3bf:	je     0x1001a3d2
1001a3c1:	push   DWORD PTR [ebp+0x10]
1001a3c4:	mov    ecx,DWORD PTR [ebp+0x14]
1001a3c7:	push   DWORD PTR [ebp+0xc]
1001a3ca:	push   DWORD PTR [ebp+0x8]
1001a3cd:	call   0x1001a419
1001a3d2:	mov    eax,ebx
1001a3d4:	call   0x10059bfd
1001a3d9:	ret    0x10
1001a3dc:	push   DWORD PTR [ebp-0x14]
1001a3df:	call   0x10042f82
1001a3e4:	pop    ecx
1001a3e5:	push   0x0
1001a3e7:	push   0x0
1001a3e9:	call   0x10047aa4
1001a3ee:	int3   
1001a3ef:	push   0x50
1001a3f1:	call   0x1004358e
1001a3f6:	xor    edx,edx
1001a3f8:	cmp    eax,edx
1001a3fa:	pop    ecx
1001a3fb:	je     0x1001a3ff
1001a3fd:	mov    DWORD PTR [eax],edx
1001a3ff:	lea    ecx,[eax+0x4]
1001a402:	cmp    ecx,edx
1001a404:	je     0x1001a408
1001a406:	mov    DWORD PTR [ecx],edx
1001a408:	lea    ecx,[eax+0x8]
1001a40b:	cmp    ecx,edx
1001a40d:	je     0x1001a411
1001a40f:	mov    DWORD PTR [ecx],edx
1001a411:	mov    BYTE PTR [eax+0x4c],0x1
1001a415:	mov    BYTE PTR [eax+0x4d],dl
1001a418:	ret    
1001a419:	push   0x0
1001a41b:	mov    eax,0x1006214a
1001a420:	call   0x10059b25
1001a425:	mov    edi,ecx
1001a427:	mov    eax,DWORD PTR [ebp+0x8]
1001a42a:	mov    DWORD PTR [ebx],eax
1001a42c:	mov    eax,DWORD PTR [ebp+0xc]
1001a42f:	mov    DWORD PTR [ebx+0x4],eax
1001a432:	mov    eax,DWORD PTR [ebp+0x10]
1001a435:	lea    esi,[ebx+0xc]
1001a438:	push   edi
1001a439:	mov    ecx,esi
1001a43b:	mov    DWORD PTR [ebx+0x8],eax
1001a43e:	mov    DWORD PTR [ebp+0x8],esi
1001a441:	call   0x100011a2
1001a446:	and    DWORD PTR [ebp-0x4],0x0
1001a44a:	add    edi,0x1c
1001a44d:	add    esi,0x1c
1001a450:	call   0x10019f77
1001a455:	mov    BYTE PTR [ebx+0x4c],0x0
1001a459:	mov    BYTE PTR [ebx+0x4d],0x0
1001a45d:	mov    eax,ebx
1001a45f:	call   0x10059bfd
1001a464:	ret    0xc
1001a467:	push   0x8
1001a469:	mov    eax,0x10060ce5
1001a46e:	call   0x10059b25
1001a473:	and    DWORD PTR [ebp-0x14],0x0
1001a477:	mov    DWORD PTR [ebp-0x10],esi
1001a47a:	lea    eax,[ebp+0x8]
1001a47d:	push   eax
1001a47e:	mov    ecx,esi
1001a480:	mov    DWORD PTR [ebp-0x4],0x1
1001a487:	call   0x100011a2
1001a48c:	mov    BYTE PTR [ebp-0x4],0x2
1001a490:	mov    eax,DWORD PTR [ebp+0x24]
1001a493:	mov    DWORD PTR [esi+0x1c],eax
1001a496:	lea    eax,[ebp+0x28]
1001a499:	push   eax
1001a49a:	lea    ecx,[esi+0x20]
1001a49d:	call   0x100011a2
1001a4a2:	mov    eax,DWORD PTR [ebp+0x44]
1001a4a5:	push   0x0
1001a4a7:	push   0x1
1001a4a9:	lea    ecx,[ebp+0x8]
1001a4ac:	mov    DWORD PTR [esi+0x3c],eax
1001a4af:	call   0x100012eb
1001a4b4:	push   0x0
1001a4b6:	push   0x1
1001a4b8:	lea    ecx,[ebp+0x28]
1001a4bb:	call   0x100012eb
1001a4c0:	mov    eax,esi
1001a4c2:	call   0x10059bfd
1001a4c7:	ret    
1001a4c8:	push   0xd4
1001a4cd:	mov    eax,0x10061c97
1001a4d2:	call   0x10059b58
1001a4d7:	mov    ebx,DWORD PTR [ebp+0x8]
1001a4da:	push   0x1f4
1001a4df:	push   DWORD PTR [ebx+0x18]
1001a4e2:	call   DWORD PTR ds:0x10066084
1001a4e8:	test   eax,eax
1001a4ea:	jne    0x1001a7a5
1001a4f0:	and    DWORD PTR [ebp-0x4],eax
1001a4f3:	cmp    DWORD PTR [ebx+0x8],eax
1001a4f6:	jbe    0x1001a53b
1001a4f8:	push   0x1
1001a4fa:	lea    eax,[ebp-0x2c]
1001a4fd:	push   eax
1001a4fe:	call   0x10034a90
1001a503:	lea    eax,[ebp-0x2c]
1001a506:	push   eax
1001a507:	mov    BYTE PTR [ebp-0x4],0x1
1001a50b:	call   0x10036060
1001a510:	mov    esi,eax
1001a512:	test   esi,esi
1001a514:	ja     0x1001a519
1001a516:	xor    esi,esi
1001a518:	inc    esi
1001a519:	cmp    DWORD PTR [ebx+0x8],esi
1001a51c:	jb     0x1001a532
1001a51e:	mov    eax,DWORD PTR [ebx+0x4]
1001a521:	push   DWORD PTR [eax]
1001a523:	lea    eax,[ebp-0x38]
1001a526:	push   ebx
1001a527:	push   eax
1001a528:	call   0x1001b216
1001a52d:	mov    ebx,DWORD PTR [ebp+0x8]
1001a530:	jmp    0x1001a519
1001a532:	push   DWORD PTR [ebp-0x2c]
1001a535:	call   DWORD PTR ds:0x10066070
1001a53b:	or     DWORD PTR [ebp-0x4],0xffffffff
1001a53f:	push   DWORD PTR [ebp+0xc]
1001a542:	lea    ecx,[ebp-0x9c]
1001a548:	call   0x100011a2
1001a54d:	push   DWORD PTR [ebp+0x10]
1001a550:	lea    ecx,[ebp-0x80]
1001a553:	mov    DWORD PTR [ebp-0x4],0x3
1001a55a:	call   0x100011a2
1001a55f:	push   DWORD PTR [ebp+0x14]
1001a562:	lea    ecx,[ebp-0x64]
1001a565:	mov    BYTE PTR [ebp-0x4],0x4
1001a569:	call   0x100011a2
1001a56e:	mov    eax,DWORD PTR [ebp+0x18]
1001a571:	mov    DWORD PTR [ebp-0x48],eax
1001a574:	mov    eax,DWORD PTR [ebp+0x1c]
1001a577:	mov    DWORD PTR [ebp-0x44],eax
1001a57a:	mov    eax,DWORD PTR [ebp+0x20]
1001a57d:	mov    DWORD PTR [ebp-0x40],eax
1001a580:	mov    eax,DWORD PTR [ebp+0x24]
1001a583:	mov    DWORD PTR [ebp-0x3c],eax
1001a586:	mov    DWORD PTR [ebp-0x4],0x5
1001a58d:	push   DWORD PTR [ebx+0x4]
1001a590:	lea    eax,[ebp-0x9c]
1001a596:	push   ebx
1001a597:	push   eax
1001a598:	mov    edi,ebx
1001a59a:	call   0x1001b318
1001a59f:	or     DWORD PTR [ebp-0x4],0xffffffff
1001a5a3:	lea    esi,[ebp-0x9c]
1001a5a9:	call   0x1001a7ad
1001a5ae:	inc    DWORD PTR [ebx+0x1c]
1001a5b1:	call   0x1001b388
1001a5b6:	xor    esi,esi
1001a5b8:	mov    DWORD PTR [ebp-0x24],eax
1001a5bb:	mov    DWORD PTR [ebp-0x20],esi
1001a5be:	mov    DWORD PTR [ebp-0x4],0x6
1001a5c5:	call   0x10026e8e
1001a5ca:	mov    DWORD PTR [ebp-0x18],eax
1001a5cd:	mov    DWORD PTR [ebp-0x14],esi
1001a5d0:	mov    BYTE PTR [ebp-0x4],0x7
1001a5d4:	cmp    DWORD PTR [ebx+0x14],esi
1001a5d7:	je     0x1001a6bc
1001a5dd:	mov    eax,DWORD PTR [ebx+0x10]
1001a5e0:	mov    esi,DWORD PTR [eax]
1001a5e2:	cmp    esi,eax
1001a5e4:	jne    0x1001a5eb
1001a5e6:	call   0x100434a0
1001a5eb:	mov    eax,DWORD PTR [esi+0x8]
1001a5ee:	cmp    eax,DWORD PTR [ebx+0x1c]
1001a5f1:	jg     0x1001a664
1001a5f3:	mov    eax,DWORD PTR [ebx+0x10]
1001a5f6:	mov    edi,DWORD PTR [eax]
1001a5f8:	cmp    edi,eax
1001a5fa:	jne    0x1001a601
1001a5fc:	call   0x100434a0
1001a601:	mov    ecx,DWORD PTR [ebp-0x18]
1001a604:	lea    eax,[edi+0xc]
1001a607:	push   eax
1001a608:	lea    edi,[ecx+0x4]
1001a60b:	push   DWORD PTR [edi]
1001a60d:	push   ecx
1001a60e:	call   0x1001b483
1001a613:	mov    ecx,0x3fffffff
1001a618:	sub    ecx,DWORD PTR [ebp-0x14]
1001a61b:	cmp    ecx,0x1
1001a61e:	jb     0x1001a72c
1001a624:	inc    DWORD PTR [ebp-0x14]
1001a627:	mov    DWORD PTR [edi],eax
1001a629:	mov    ecx,DWORD PTR [eax+0x4]
1001a62c:	mov    DWORD PTR [ecx],eax
1001a62e:	mov    eax,DWORD PTR [ebx+0x10]
1001a631:	mov    edi,DWORD PTR [eax]
1001a633:	cmp    edi,eax
1001a635:	jne    0x1001a63c
1001a637:	call   0x100434a0
1001a63c:	cmp    edi,DWORD PTR [ebx+0x10]
1001a63f:	je     0x1001a65a
1001a641:	mov    eax,DWORD PTR [edi+0x4]
1001a644:	mov    ecx,DWORD PTR [edi]
1001a646:	mov    DWORD PTR [eax],ecx
1001a648:	mov    eax,DWORD PTR [edi]
1001a64a:	mov    ecx,DWORD PTR [edi+0x4]
1001a64d:	push   edi
1001a64e:	mov    DWORD PTR [eax+0x4],ecx
1001a651:	call   0x10042f82
1001a656:	dec    DWORD PTR [ebx+0x14]
1001a659:	pop    ecx
1001a65a:	cmp    DWORD PTR [ebx+0x14],0x0
1001a65e:	jne    0x1001a5dd
1001a664:	cmp    DWORD PTR [ebp-0x14],0x0
1001a668:	je     0x1001a6bc
1001a66a:	lea    eax,[ebp-0x28]
1001a66d:	cmp    eax,ebx
1001a66f:	je     0x1001a698
1001a671:	mov    esi,DWORD PTR [ebx+0x4]
1001a674:	mov    eax,DWORD PTR [esi]
1001a676:	lea    edi,[ebp-0x28]
1001a679:	mov    DWORD PTR [ebp-0x2c],eax
1001a67c:	call   0x1001b3b8
1001a681:	mov    eax,DWORD PTR [ebp-0x24]
1001a684:	mov    eax,DWORD PTR [eax]
1001a686:	push   esi
1001a687:	push   ebx
1001a688:	push   DWORD PTR [ebp-0x2c]
1001a68b:	mov    ecx,edi
1001a68d:	push   ebx
1001a68e:	push   eax
1001a68f:	push   ecx
1001a690:	mov    eax,edi
1001a692:	push   eax
1001a693:	call   0x1001b526
1001a698:	cmp    DWORD PTR [ebp-0x20],0x9
1001a69c:	jbe    0x1001a6bc
1001a69e:	lea    esi,[ebp-0x28]
1001a6a1:	mov    eax,DWORD PTR [ebp-0x24]
1001a6a4:	push   DWORD PTR [eax]
1001a6a6:	lea    eax,[ebp-0x38]
1001a6a9:	push   esi
1001a6aa:	push   eax
1001a6ab:	lea    ebx,[ebp-0x28]
1001a6ae:	call   0x1001b216
1001a6b3:	cmp    DWORD PTR [ebp-0x20],0x9
1001a6b7:	ja     0x1001a6a1
1001a6b9:	mov    ebx,DWORD PTR [ebp+0x8]
1001a6bc:	push   DWORD PTR [ebx+0x18]
1001a6bf:	call   DWORD PTR ds:0x10066094
1001a6c5:	mov    eax,DWORD PTR [ebp-0x18]
1001a6c8:	mov    esi,DWORD PTR [eax]
1001a6ca:	cmp    esi,eax
1001a6cc:	je     0x1001a76d
1001a6d2:	sub    esp,0xc
1001a6d5:	mov    eax,esp
1001a6d7:	mov    DWORD PTR [ebp+0x8],esp
1001a6da:	push   eax
1001a6db:	lea    ecx,[ebp-0x28]
1001a6de:	call   0x1001b1a3
1001a6e3:	cmp    esi,DWORD PTR [ebp-0x18]
1001a6e6:	jne    0x1001a6ed
1001a6e8:	call   0x100434a0
1001a6ed:	call   DWORD PTR [esi+0x8]
1001a6f0:	mov    eax,DWORD PTR [ebp-0x18]
1001a6f3:	add    esp,0xc
1001a6f6:	cmp    esi,eax
1001a6f8:	jne    0x1001a702
1001a6fa:	call   0x100434a0
1001a6ff:	mov    eax,DWORD PTR [ebp-0x18]
1001a702:	mov    esi,DWORD PTR [esi]
1001a704:	jmp    0x1001a6ca
1001a706:	mov    ebx,DWORD PTR [ebp+0x8]
1001a709:	cmp    DWORD PTR [ebx+0x8],0x0
1001a70d:	jbe    0x1001a71e
1001a70f:	mov    eax,DWORD PTR [ebx+0x4]
1001a712:	push   DWORD PTR [eax]
1001a714:	lea    eax,[ebp-0x38]
1001a717:	push   ebx
1001a718:	push   eax
1001a719:	call   0x1001b216
1001a71e:	mov    eax,0x1001a724
1001a723:	ret    
1001a724:	mov    ebx,DWORD PTR [ebp+0x8]
1001a727:	jmp    0x1001a53f
1001a72c:	push   0x1006feac
1001a731:	lea    ecx,[ebp-0xe0]
1001a737:	call   0x100011c8
1001a73c:	lea    eax,[ebp-0xe0]
1001a742:	push   eax
1001a743:	lea    ecx,[ebp-0xc4]
1001a749:	mov    BYTE PTR [ebp-0x4],0x8
1001a74d:	call   0x10001065
1001a752:	push   0x10074ec8
1001a757:	lea    eax,[ebp-0xc4]
1001a75d:	push   eax
1001a75e:	mov    DWORD PTR [ebp-0xc4],0x1006b96c
1001a768:	call   0x10047aa4
1001a76d:	mov    ecx,DWORD PTR [eax]
1001a76f:	mov    DWORD PTR [eax],eax
1001a771:	mov    eax,DWORD PTR [ebp-0x18]
1001a774:	mov    DWORD PTR [eax+0x4],eax
1001a777:	and    DWORD PTR [ebp-0x14],0x0
1001a77b:	cmp    ecx,DWORD PTR [ebp-0x18]
1001a77e:	je     0x1001a790
1001a780:	mov    esi,DWORD PTR [ecx]
1001a782:	push   ecx
1001a783:	call   0x10042f82
1001a788:	cmp    esi,DWORD PTR [ebp-0x18]
1001a78b:	pop    ecx
1001a78c:	mov    ecx,esi
1001a78e:	jne    0x1001a780
1001a790:	push   DWORD PTR [ebp-0x18]
1001a793:	call   0x10042f82
1001a798:	and    DWORD PTR [ebp-0x18],0x0
1001a79c:	pop    ecx
1001a79d:	lea    eax,[ebp-0x28]
1001a7a0:	call   0x1001b1ff
1001a7a5:	call   0x10059bfd
1001a7aa:	ret    0x20
1001a7ad:	push   0x0
1001a7af:	push   0x1
1001a7b1:	lea    ecx,[esi+0x38]
1001a7b4:	call   0x100012eb
1001a7b9:	push   0x0
1001a7bb:	push   0x1
1001a7bd:	lea    ecx,[esi+0x1c]
1001a7c0:	call   0x100012eb
1001a7c5:	push   0x0
1001a7c7:	push   0x1
1001a7c9:	mov    ecx,esi
1001a7cb:	call   0x100012eb
1001a7d0:	ret    
1001a7d1:	push   0x10
1001a7d3:	mov    eax,0x10060336
1001a7d8:	call   0x10059b58
1001a7dd:	mov    edi,DWORD PTR [ebp+0x8]
1001a7e0:	push   0x1f4
1001a7e5:	push   DWORD PTR [edi+0x18]
1001a7e8:	call   DWORD PTR ds:0x10066084
1001a7ee:	test   eax,eax
1001a7f0:	jne    0x1001a824
1001a7f2:	and    DWORD PTR [ebp-0x4],eax
1001a7f5:	mov    eax,DWORD PTR [edi+0x1c]
1001a7f8:	add    eax,0x9
1001a7fb:	lea    ebx,[edi+0xc]
1001a7fe:	lea    esi,[ebp-0x1c]
1001a801:	mov    DWORD PTR [ebp-0x1c],eax
1001a804:	mov    DWORD PTR [ebp-0x18],0x1001b0e8
1001a80b:	call   0x1001b268
1001a810:	jmp    0x1001a81b
1001a812:	mov    eax,0x1001a818
1001a817:	ret    
1001a818:	mov    edi,DWORD PTR [ebp+0x8]
1001a81b:	push   DWORD PTR [edi+0x18]
1001a81e:	call   DWORD PTR ds:0x10066094
1001a824:	call   0x10059bfd
1001a829:	ret    0x4
1001a82c:	push   0x14
1001a82e:	mov    eax,0x10060cb2
1001a833:	call   0x10059b25
1001a838:	push   0x1f4
1001a83d:	push   DWORD PTR [esi+0x18]
1001a840:	xor    edi,edi
1001a842:	mov    DWORD PTR [ebp-0x10],edi
1001a845:	call   DWORD PTR ds:0x10066084
1001a84b:	test   eax,eax
1001a84d:	je     0x1001a85c
1001a84f:	call   0x1001b388
1001a854:	mov    DWORD PTR [ebx+0x4],eax
1001a857:	mov    DWORD PTR [ebx+0x8],edi
1001a85a:	jmp    0x1001a898
1001a85c:	lea    eax,[ebp-0x1c]
1001a85f:	push   eax
1001a860:	mov    ecx,esi
1001a862:	call   0x1001b1a3
1001a867:	mov    DWORD PTR [ebp-0x4],edi
1001a86a:	mov    eax,DWORD PTR [ebp-0x18]
1001a86d:	mov    edx,DWORD PTR [eax]
1001a86f:	push   eax
1001a870:	lea    ecx,[ebp-0x1c]
1001a873:	push   ecx
1001a874:	mov    edi,ecx
1001a876:	push   edx
1001a877:	push   edi
1001a878:	call   0x1001b4b4
1001a87d:	add    esp,0x10
1001a880:	push   DWORD PTR [esi+0x18]
1001a883:	call   DWORD PTR ds:0x10066094
1001a889:	push   ebx
1001a88a:	mov    ecx,edi
1001a88c:	call   0x1001b1a3
1001a891:	mov    eax,edi
1001a893:	call   0x1001b1ff
1001a898:	mov    eax,ebx
1001a89a:	call   0x10059bfd
1001a89f:	ret    
1001a8a0:	push   0xcc
1001a8a5:	mov    eax,0x100635c4
1001a8aa:	call   0x10059b8e
1001a8af:	mov    esi,ecx
1001a8b1:	xor    ebx,ebx
1001a8b3:	mov    DWORD PTR [ebp-0xa8],esi
1001a8b9:	mov    DWORD PTR [ebp-0xb4],ebx
1001a8bf:	xor    edi,edi
1001a8c1:	inc    edi
1001a8c2:	mov    DWORD PTR [ebp-0x4],edi
1001a8c5:	call   0x100040d0
1001a8ca:	push   0x1006fec0
1001a8cf:	push   0x7
1001a8d1:	push   0x1006fef4
1001a8d6:	mov    DWORD PTR [ebp-0xb4],edi
1001a8dc:	mov    DWORD PTR [ebp-0x9c],ebx
1001a8e2:	call   0x100042cf
1001a8e7:	add    esp,0xc
1001a8ea:	push   eax
1001a8eb:	push   esi
1001a8ec:	call   0x10004107
1001a8f1:	push   0xa
1001a8f3:	lea    eax,[ebp-0x7c]
1001a8f6:	push   eax
1001a8f7:	call   DWORD PTR ds:0x10066118
1001a8fd:	push   eax
1001a8fe:	call   0x10045be6
1001a903:	add    esp,0xc
1001a906:	push   eax
1001a907:	push   esi
1001a908:	call   0x10004107
1001a90d:	mov    eax,DWORD PTR [ebp+0xc]
1001a910:	mov    esi,DWORD PTR [eax]
1001a912:	mov    DWORD PTR [ebp-0xb0],ebx
1001a918:	lea    ebx,[ebp+0x8]
1001a91b:	mov    DWORD PTR [ebp-0xa0],esi
1001a921:	mov    DWORD PTR [ebp-0xa4],ebx
1001a927:	mov    edi,0x1006ff20
1001a92c:	test   ebx,ebx
1001a92e:	mov    eax,DWORD PTR [ebp+0xc]
1001a931:	mov    DWORD PTR [ebp-0xb8],eax
1001a937:	je     0x1001a940
1001a939:	lea    eax,[ebp+0x8]
1001a93c:	cmp    ebx,eax
1001a93e:	je     0x1001a945
1001a940:	call   0x100434a0
1001a945:	cmp    esi,DWORD PTR [ebp-0xb8]
1001a94b:	je     0x1001afbf
1001a951:	push   0x0
1001a953:	lea    ecx,[ebp-0x98]
1001a959:	mov    DWORD PTR [ebp-0x80],0xf
1001a960:	call   0x10001417
1001a965:	push   0x2fca67f2
1001a96a:	push   0x1006fefc
1001a96f:	mov    BYTE PTR [ebp-0x4],0x2
1001a973:	call   0x100042bd
1001a978:	push   0x648ff298
1001a97d:	push   eax
1001a97e:	call   0x100042bd
1001a983:	push   0xbf773ea
1001a988:	push   eax
1001a989:	call   0x100042bd
1001a98e:	push   eax
1001a98f:	push   0x4
1001a991:	push   edi
1001a992:	call   0x100042cf
1001a997:	add    esp,0x24
1001a99a:	push   eax
1001a99b:	lea    eax,[ebp-0x98]
1001a9a1:	push   eax
1001a9a2:	call   0x10004107
1001a9a7:	push   0xa
1001a9a9:	lea    eax,[ebp-0x7c]
1001a9ac:	push   eax
1001a9ad:	push   DWORD PTR [ebp-0x9c]
1001a9b3:	call   0x10045be6
1001a9b8:	add    esp,0xc
1001a9bb:	push   eax
1001a9bc:	lea    eax,[ebp-0x98]
1001a9c2:	push   eax
1001a9c3:	call   0x10004107
1001a9c8:	push   0x29e3decc
1001a9cd:	push   0x1006ff28
1001a9d2:	call   0x100042bd
1001a9d7:	push   0x1d6af838
1001a9dc:	push   eax
1001a9dd:	call   0x100042bd
1001a9e2:	push   eax
1001a9e3:	push   0x8
1001a9e5:	push   0x1006ff60
1001a9ea:	call   0x100042cf
1001a9ef:	add    esp,0x1c
1001a9f2:	push   eax
1001a9f3:	lea    eax,[ebp-0x98]
1001a9f9:	push   eax
1001a9fa:	call   0x10004107
1001a9ff:	test   ebx,ebx
1001aa01:	jne    0x1001aa08
1001aa03:	call   0x100434a0
1001aa08:	cmp    esi,DWORD PTR [ebx+0x4]
1001aa0b:	jne    0x1001aa12
1001aa0d:	call   0x100434a0
1001aa12:	push   0xa
1001aa14:	lea    eax,[ebp-0x7c]
1001aa17:	push   eax
1001aa18:	push   DWORD PTR [esi+0x5c]
1001aa1b:	add    esi,0x8
1001aa1e:	call   0x10045be6
1001aa23:	add    esp,0xc
1001aa26:	push   eax
1001aa27:	lea    eax,[ebp-0x98]
1001aa2d:	push   eax
1001aa2e:	call   0x10004107
1001aa33:	push   0xfebba9e
1001aa38:	push   0x1006ff6c
1001aa3d:	call   0x100042bd
1001aa42:	push   eax
1001aa43:	push   0x4
1001aa45:	push   edi
1001aa46:	call   0x100042cf
1001aa4b:	add    esp,0x14
1001aa4e:	push   eax
1001aa4f:	lea    eax,[ebp-0x98]
1001aa55:	push   eax
1001aa56:	call   0x10004107
1001aa5b:	push   0xa
1001aa5d:	lea    eax,[ebp-0x7c]
1001aa60:	push   eax
1001aa61:	push   DWORD PTR [ebp-0x9c]
1001aa67:	call   0x10045be6
1001aa6c:	add    esp,0xc
1001aa6f:	push   eax
1001aa70:	lea    eax,[ebp-0x98]
1001aa76:	push   eax
1001aa77:	call   0x10004107
1001aa7c:	push   0x72dcb186
1001aa81:	push   0x1006ff90
1001aa86:	call   0x100042bd
1001aa8b:	push   eax
1001aa8c:	push   0x8
1001aa8e:	push   0x1006ffc4
1001aa93:	call   0x100042cf
1001aa98:	add    esp,0x14
1001aa9b:	push   eax
1001aa9c:	lea    eax,[ebp-0x98]
1001aaa2:	push   eax
1001aaa3:	call   0x10004107
1001aaa8:	mov    eax,DWORD PTR [ebp-0xa0]
1001aaae:	cmp    eax,DWORD PTR [ebx+0x4]
1001aab1:	jne    0x1001aab8
1001aab3:	call   0x100434a0
1001aab8:	push   esi
1001aab9:	lea    ecx,[ebp-0xd8]
1001aabf:	call   0x10031060
1001aac4:	pop    ecx
1001aac5:	push   0xffffffff
1001aac7:	push   0x0
1001aac9:	lea    esi,[ebp-0x98]
1001aacf:	mov    BYTE PTR [ebp-0x4],0x3
1001aad3:	call   0x10004ce1
1001aad8:	push   0x0
1001aada:	push   0x1
1001aadc:	lea    ecx,[ebp-0xd8]
1001aae2:	mov    BYTE PTR [ebp-0x4],0x2
1001aae6:	call   0x100012eb
1001aaeb:	push   0x6b00c824
1001aaf0:	push   0x1006ffd0
1001aaf5:	call   0x100042bd
1001aafa:	push   0x1e51f9ee
1001aaff:	push   eax
1001ab00:	call   0x100042bd
1001ab05:	push   0x5a9147d0
1001ab0a:	push   eax
1001ab0b:	call   0x100042bd
1001ab10:	push   0x6f62b6d6
1001ab15:	push   eax
1001ab16:	call   0x100042bd
1001ab1b:	push   0x71bca91e
1001ab20:	push   eax
1001ab21:	call   0x100042bd
1001ab26:	push   eax
1001ab27:	push   0x4
1001ab29:	push   edi
1001ab2a:	call   0x100042cf
1001ab2f:	add    esp,0x34
1001ab32:	push   eax
1001ab33:	mov    eax,esi
1001ab35:	push   eax
1001ab36:	call   0x10004107
1001ab3b:	push   0xa
1001ab3d:	lea    eax,[ebp-0x7c]
1001ab40:	push   eax
1001ab41:	push   DWORD PTR [ebp-0x9c]
1001ab47:	call   0x10045be6
1001ab4c:	add    esp,0xc
1001ab4f:	push   eax
1001ab50:	mov    eax,esi
1001ab52:	push   eax
1001ab53:	call   0x10004107
1001ab58:	push   0x757fe114
1001ab5d:	push   0x1006fff8
1001ab62:	call   0x100042bd
1001ab67:	push   0x77a23f8
1001ab6c:	push   eax
1001ab6d:	call   0x100042bd
1001ab72:	push   eax
1001ab73:	push   0xa
1001ab75:	push   0x10070024
1001ab7a:	call   0x100042cf
1001ab7f:	add    esp,0x1c
1001ab82:	push   eax
1001ab83:	mov    eax,esi
1001ab85:	push   eax
1001ab86:	call   0x10004107
1001ab8b:	mov    esi,DWORD PTR [ebp-0xa0]
1001ab91:	cmp    esi,DWORD PTR [ebx+0x4]
1001ab94:	jne    0x1001ab9b
1001ab96:	call   0x100434a0
1001ab9b:	lea    eax,[esi+0x8]
1001ab9e:	add    eax,0x38
1001aba1:	push   eax
1001aba2:	lea    ecx,[ebp-0xd8]
1001aba8:	call   0x10031060
1001abad:	pop    ecx
1001abae:	push   0xffffffff
1001abb0:	push   0x0
1001abb2:	lea    esi,[ebp-0x98]
1001abb8:	mov    BYTE PTR [ebp-0x4],0x4
1001abbc:	call   0x10004ce1
1001abc1:	push   0x0
1001abc3:	push   0x1
1001abc5:	lea    ecx,[ebp-0xd8]
1001abcb:	mov    BYTE PTR [ebp-0x4],0x2
1001abcf:	call   0x100012eb
1001abd4:	mov    esi,DWORD PTR [ebp-0xa0]
1001abda:	cmp    esi,DWORD PTR [ebx+0x4]
1001abdd:	jne    0x1001abe4
1001abdf:	call   0x100434a0
1001abe4:	lea    eax,[esi+0x8]
1001abe7:	push   0x1006cd08
1001abec:	lea    esi,[eax+0x1c]
1001abef:	call   0x10006639
1001abf4:	test   al,al
1001abf6:	pop    ecx
1001abf7:	jne    0x1001acbb
1001abfd:	push   0x10070030
1001ac02:	push   0x4
1001ac04:	push   edi
1001ac05:	call   0x100042cf
1001ac0a:	add    esp,0xc
1001ac0d:	push   eax
1001ac0e:	lea    eax,[ebp-0x98]
1001ac14:	push   eax
1001ac15:	call   0x10004107
1001ac1a:	push   0xa
1001ac1c:	lea    eax,[ebp-0x7c]
1001ac1f:	push   eax
1001ac20:	push   DWORD PTR [ebp-0x9c]
1001ac26:	call   0x10045be6
1001ac2b:	add    esp,0xc
1001ac2e:	push   eax
1001ac2f:	lea    eax,[ebp-0x98]
1001ac35:	push   eax
1001ac36:	call   0x10004107
1001ac3b:	push   0x7744a6cc
1001ac40:	push   0x10070060
1001ac45:	call   0x100042bd
1001ac4a:	push   0x421dc9b2
1001ac4f:	push   eax
1001ac50:	call   0x100042bd
1001ac55:	push   eax
1001ac56:	push   0x7
1001ac58:	push   0x1007009c
1001ac5d:	call   0x100042cf
1001ac62:	add    esp,0x1c
1001ac65:	push   eax
1001ac66:	lea    eax,[ebp-0x98]
1001ac6c:	push   eax
1001ac6d:	call   0x10004107
1001ac72:	mov    esi,DWORD PTR [ebp-0xa0]
1001ac78:	cmp    esi,DWORD PTR [ebx+0x4]
1001ac7b:	jne    0x1001ac82
1001ac7d:	call   0x100434a0
1001ac82:	lea    eax,[esi+0x8]
1001ac85:	add    eax,0x1c
1001ac88:	push   eax
1001ac89:	lea    ecx,[ebp-0xd8]
1001ac8f:	call   0x10031060
1001ac94:	pop    ecx
1001ac95:	push   0xffffffff
1001ac97:	push   0x0
1001ac99:	lea    esi,[ebp-0x98]
1001ac9f:	mov    BYTE PTR [ebp-0x4],0x5
1001aca3:	call   0x10004ce1
1001aca8:	push   0x0
1001acaa:	push   0x1
1001acac:	lea    ecx,[ebp-0xd8]
1001acb2:	mov    BYTE PTR [ebp-0x4],0x2
1001acb6:	call   0x100012eb
1001acbb:	push   0x352949ec
1001acc0:	push   0x100700a4
1001acc5:	call   0x100042bd
1001acca:	push   0x55e98f3e
1001accf:	push   eax
1001acd0:	call   0x100042bd
1001acd5:	push   0x49dd9cf6
1001acda:	push   eax
1001acdb:	call   0x100042bd
1001ace0:	push   0x38f64018
1001ace5:	push   eax
1001ace6:	call   0x100042bd
1001aceb:	push   0x1872ef94
1001acf0:	push   eax
1001acf1:	call   0x100042bd
1001acf6:	push   eax
1001acf7:	push   0x4
1001acf9:	push   edi
1001acfa:	call   0x100042cf
1001acff:	add    esp,0x34
1001ad02:	push   eax
1001ad03:	lea    eax,[ebp-0x98]
1001ad09:	push   eax
1001ad0a:	call   0x10004107
1001ad0f:	push   0xa
1001ad11:	lea    eax,[ebp-0x7c]
1001ad14:	push   eax
1001ad15:	push   DWORD PTR [ebp-0x9c]
1001ad1b:	call   0x10045be6
1001ad20:	add    esp,0xc
1001ad23:	push   eax
1001ad24:	lea    eax,[ebp-0x98]
1001ad2a:	push   eax
1001ad2b:	call   0x10004107
1001ad30:	push   0x1cf78ec6
1001ad35:	push   0x100700e0
1001ad3a:	call   0x100042bd
1001ad3f:	push   0x6ba24b92
1001ad44:	push   eax
1001ad45:	call   0x100042bd
1001ad4a:	push   0x2a255114
1001ad4f:	push   eax
1001ad50:	call   0x100042bd
1001ad55:	push   0x1511f3fa
1001ad5a:	push   eax
1001ad5b:	call   0x100042bd
1001ad60:	push   0x6438d9e6
1001ad65:	push   eax
1001ad66:	call   0x100042bd
1001ad6b:	push   eax
1001ad6c:	push   0xf
1001ad6e:	push   0x10070104
1001ad73:	call   0x100042cf
1001ad78:	add    esp,0x34
1001ad7b:	push   eax
1001ad7c:	lea    eax,[ebp-0x98]
1001ad82:	push   eax
1001ad83:	call   0x10004107
1001ad88:	mov    esi,DWORD PTR [ebp-0xa0]
1001ad8e:	cmp    esi,DWORD PTR [ebx+0x4]
1001ad91:	jne    0x1001ad98
1001ad93:	call   0x100434a0
1001ad98:	push   0xa
1001ad9a:	lea    eax,[ebp-0x7c]
1001ad9d:	push   eax
1001ad9e:	lea    eax,[esi+0x8]
1001ada1:	push   DWORD PTR [eax+0x58]
1001ada4:	mov    DWORD PTR [ebp-0xac],eax
1001adaa:	call   0x10045be6
1001adaf:	add    esp,0xc
1001adb2:	push   eax
1001adb3:	lea    eax,[ebp-0x98]
1001adb9:	push   eax
1001adba:	call   0x10004107
1001adbf:	push   0x2b0c7954
1001adc4:	push   0x10070118
1001adc9:	call   0x100042bd
1001adce:	push   0x412bc982
1001add3:	push   eax
1001add4:	call   0x100042bd
1001add9:	push   eax
1001adda:	push   0x4
1001addc:	push   edi
1001addd:	call   0x100042cf
1001ade2:	add    esp,0x1c
1001ade5:	push   eax
1001ade6:	lea    eax,[ebp-0x98]
1001adec:	push   eax
1001aded:	call   0x10004107
1001adf2:	push   0xa
1001adf4:	lea    eax,[ebp-0x7c]
1001adf7:	push   eax
1001adf8:	push   DWORD PTR [ebp-0x9c]
1001adfe:	call   0x10045be6
1001ae03:	add    esp,0xc
1001ae06:	push   eax
1001ae07:	lea    eax,[ebp-0x98]
1001ae0d:	push   eax
1001ae0e:	call   0x10004107
1001ae13:	push   0x1e7c0ab4
1001ae18:	push   0x10070158
1001ae1d:	call   0x100042bd
1001ae22:	push   0x10e609ee
1001ae27:	push   eax
1001ae28:	call   0x100042bd
1001ae2d:	push   0x37f95d46
1001ae32:	push   eax
1001ae33:	call   0x100042bd
1001ae38:	push   0x56c3e21a
1001ae3d:	push   eax
1001ae3e:	call   0x100042bd
1001ae43:	push   eax
1001ae44:	push   0xa
1001ae46:	push   0x10070188
1001ae4b:	call   0x100042cf
1001ae50:	add    esp,0x2c
1001ae53:	push   eax
1001ae54:	lea    eax,[ebp-0x98]
1001ae5a:	push   eax
1001ae5b:	call   0x10004107
1001ae60:	cmp    esi,DWORD PTR [ebx+0x4]
1001ae63:	jne    0x1001ae6a
1001ae65:	call   0x100434a0
1001ae6a:	push   0xa
1001ae6c:	lea    eax,[ebp-0x7c]
1001ae6f:	push   eax
1001ae70:	mov    eax,DWORD PTR [ebp-0xac]
1001ae76:	push   DWORD PTR [eax+0x5c]
1001ae79:	call   0x10045be6
1001ae7e:	add    esp,0xc
1001ae81:	push   eax
1001ae82:	lea    eax,[ebp-0x98]
1001ae88:	push   eax
1001ae89:	call   0x10004107
1001ae8e:	push   0x4e1ea64e
1001ae93:	push   0x10070194
1001ae98:	call   0x100042bd
1001ae9d:	push   0x23fa1bbc
1001aea2:	push   eax
1001aea3:	call   0x100042bd
1001aea8:	push   0x4864bf0e
1001aead:	push   eax
1001aeae:	call   0x100042bd
1001aeb3:	push   0x60fbc882
1001aeb8:	push   eax
1001aeb9:	call   0x100042bd
1001aebe:	push   eax
1001aebf:	push   0x4
1001aec1:	push   edi
1001aec2:	call   0x100042cf
1001aec7:	add    esp,0x2c
1001aeca:	push   eax
1001aecb:	lea    eax,[ebp-0x98]
1001aed1:	push   eax
1001aed2:	call   0x10004107
1001aed7:	push   0xa
1001aed9:	lea    eax,[ebp-0x7c]
1001aedc:	push   eax
1001aedd:	push   DWORD PTR [ebp-0x9c]
1001aee3:	call   0x10045be6
1001aee8:	add    esp,0xc
1001aeeb:	push   eax
1001aeec:	lea    eax,[ebp-0x98]
1001aef2:	push   eax
1001aef3:	call   0x10004107
1001aef8:	push   0x42f0f8c2
1001aefd:	push   0x100701c8
1001af02:	call   0x100042bd
1001af07:	push   eax
1001af08:	push   0xa
1001af0a:	push   0x100701f4
1001af0f:	call   0x100042cf
1001af14:	add    esp,0x14
1001af17:	push   eax
1001af18:	lea    eax,[ebp-0x98]
1001af1e:	push   eax
1001af1f:	call   0x10004107
1001af24:	cmp    esi,DWORD PTR [ebx+0x4]
1001af27:	jne    0x1001af2e
1001af29:	call   0x100434a0
1001af2e:	push   0xa
1001af30:	lea    eax,[ebp-0x7c]
1001af33:	push   eax
1001af34:	mov    eax,DWORD PTR [ebp-0xac]
1001af3a:	push   DWORD PTR [eax+0x60]
1001af3d:	call   0x10045be6
1001af42:	add    esp,0xc
1001af45:	push   eax
1001af46:	lea    eax,[ebp-0x98]
1001af4c:	push   eax
1001af4d:	call   0x10004107
1001af52:	mov    eax,DWORD PTR [ebp-0xb0]
1001af58:	mov    esi,DWORD PTR [ebp-0xa8]
1001af5e:	add    eax,DWORD PTR [esi+0x14]
1001af61:	cmp    eax,DWORD PTR [ebp+0x14]
1001af64:	mov    DWORD PTR [ebp-0xb0],eax
1001af6a:	jg     0x1001afb0
1001af6c:	push   0xffffffff
1001af6e:	push   0x0
1001af70:	lea    eax,[ebp-0x98]
1001af76:	call   0x10004ce1
1001af7b:	inc    DWORD PTR [ebp-0x9c]
1001af81:	push   0x0
1001af83:	push   0x1
1001af85:	lea    ecx,[ebp-0x98]
1001af8b:	mov    BYTE PTR [ebp-0x4],0x1
1001af8f:	call   0x100012eb
1001af94:	lea    esi,[ebp-0xa4]
1001af9a:	call   0x100268f0
1001af9f:	mov    ebx,DWORD PTR [ebp-0xa4]
1001afa5:	mov    esi,DWORD PTR [ebp-0xa0]
1001afab:	jmp    0x1001a92c
1001afb0:	push   0x0
1001afb2:	push   0x1
1001afb4:	lea    ecx,[ebp-0x98]
1001afba:	call   0x100012eb
1001afbf:	lea    eax,[ebp+0x8]
1001afc2:	call   0x1001b1ff
1001afc7:	mov    eax,DWORD PTR [ebp-0xa8]
1001afcd:	call   0x10059c11
1001afd2:	ret    
1001afd3:	push   0x70
1001afd5:	mov    eax,0x10064d7c
1001afda:	call   0x10059bc4
1001afdf:	mov    edi,DWORD PTR [ebp+0x8]
1001afe2:	mov    DWORD PTR [ebp-0x38],edi
1001afe5:	mov    DWORD PTR [ebp-0x40],edi
1001afe8:	xor    ebx,ebx
1001afea:	mov    DWORD PTR [ebp-0x4],ebx
1001afed:	lea    ecx,[ebp-0x30]
1001aff0:	mov    BYTE PTR [ebp-0x4],0x1
1001aff4:	call   0x100185fb
1001aff9:	mov    BYTE PTR [ebp-0x4],0x2
1001affd:	call   0x1000206e
1001b002:	cmp    DWORD PTR [edi+0x18],0x10
1001b006:	jb     0x1001b00d
1001b008:	mov    eax,DWORD PTR [edi+0x4]
1001b00b:	jmp    0x1001b010
1001b00d:	lea    eax,[edi+0x4]
1001b010:	push   eax
1001b011:	lea    ecx,[ebp-0x78]
1001b014:	call   0x100011c8
1001b019:	mov    BYTE PTR [ebp-0x4],0x3
1001b01d:	push   DWORD PTR ds:0x10080d84
1001b023:	lea    ecx,[ebp-0x5c]
1001b026:	call   0x100011c8
1001b02b:	push   0x4e20
1001b030:	lea    eax,[ebp-0x34]
1001b033:	push   eax
1001b034:	lea    eax,[ebp-0x78]
1001b037:	push   eax
1001b038:	lea    eax,[ebp-0x30]
1001b03b:	push   eax
1001b03c:	lea    eax,[ebp-0x3c]
1001b03f:	push   eax
1001b040:	lea    edx,[ebp-0x5c]
1001b043:	mov    BYTE PTR [ebp-0x4],0x4
1001b047:	call   0x10030f40
1001b04c:	mov    ecx,DWORD PTR [eax]
1001b04e:	mov    esi,ecx
1001b050:	add    esp,0x14
1001b053:	mov    DWORD PTR [eax],ebx
1001b055:	mov    DWORD PTR [ebp-0x34],esi
1001b058:	push   DWORD PTR [ebp-0x3c]
1001b05b:	call   0x10042f82
1001b060:	pop    ecx
1001b061:	push   ebx
1001b062:	push   0x1
1001b064:	lea    ecx,[ebp-0x5c]
1001b067:	call   0x100012eb
1001b06c:	push   ebx
1001b06d:	push   0x1
1001b06f:	lea    ecx,[ebp-0x78]
1001b072:	mov    BYTE PTR [ebp-0x4],0x7
1001b076:	call   0x100012eb
1001b07b:	cmp    esi,ebx
1001b07d:	jne    0x1001b0b3
1001b07f:	call   0x1001857a
1001b084:	cmp    DWORD PTR [ebp-0x18],0x10
1001b088:	mov    eax,DWORD PTR [ebp-0x2c]
1001b08b:	jae    0x1001b090
1001b08d:	lea    eax,[ebp-0x2c]
1001b090:	push   eax
1001b091:	call   0x1000206e
1001b096:	pop    ecx
1001b097:	push   0x5
1001b099:	call   0x100379e0
1001b09e:	pop    ecx
1001b09f:	push   ebx
1001b0a0:	call   0x10042f82
1001b0a5:	pop    ecx
1001b0a6:	push   ebx
1001b0a7:	push   0x1
1001b0a9:	lea    ecx,[ebp-0x30]
1001b0ac:	call   0x100012eb
1001b0b1:	jmp    0x1001b0d6
1001b0b3:	push   esi
1001b0b4:	call   0x10042f82
1001b0b9:	pop    ecx
1001b0ba:	push   ebx
1001b0bb:	push   0x1
1001b0bd:	lea    ecx,[ebp-0x30]
1001b0c0:	call   0x100012eb
1001b0c5:	jmp    0x1001b0d2
1001b0c7:	mov    eax,0x1001b0cd
1001b0cc:	ret    
1001b0cd:	mov    edi,DWORD PTR [ebp-0x38]
1001b0d0:	xor    ebx,ebx
1001b0d2:	cmp    edi,ebx
1001b0d4:	je     0x1001b0de
1001b0d6:	push   0x1
1001b0d8:	push   edi
1001b0d9:	call   0x1000672a
1001b0de:	xor    eax,eax
1001b0e0:	call   0x10059c20
1001b0e5:	ret    0x4
1001b0e8:	push   0x28
1001b0ea:	mov    eax,0x10064ea2
1001b0ef:	call   0x10059b25
1001b0f4:	xor    edi,edi
1001b0f6:	push   0x1c
1001b0f8:	mov    DWORD PTR [ebp-0x4],edi
1001b0fb:	call   0x1004358e
1001b100:	cmp    eax,edi
1001b102:	pop    ecx
1001b103:	je     0x1001b110
1001b105:	mov    esi,eax
1001b107:	call   0x100040d0
1001b10c:	mov    ebx,eax
1001b10e:	jmp    0x1001b112
1001b110:	xor    ebx,ebx
1001b112:	push   0x1
1001b114:	lea    eax,[ebp-0x10]
1001b117:	push   eax
1001b118:	call   0x10034a90
1001b11d:	push   eax
1001b11e:	mov    BYTE PTR [ebp-0x4],0x1
1001b122:	call   0x10036180
1001b127:	lea    eax,[eax*4+0x800]
1001b12e:	push   eax
1001b12f:	sub    esp,0xc
1001b132:	mov    eax,esp
1001b134:	mov    DWORD PTR [ebp-0x14],esp
1001b137:	push   eax
1001b138:	lea    ecx,[ebp+0x8]
1001b13b:	call   0x1001b1a3
1001b140:	lea    ecx,[ebp-0x30]
1001b143:	call   0x1001a8a0
1001b148:	add    esp,0x10
1001b14b:	push   0xffffffff
1001b14d:	push   edi
1001b14e:	push   eax
1001b14f:	mov    ecx,ebx
1001b151:	mov    BYTE PTR [ebp-0x4],0x2
1001b155:	call   0x1000123c
1001b15a:	push   edi
1001b15b:	push   0x1
1001b15d:	lea    ecx,[ebp-0x30]
1001b160:	call   0x100012eb
1001b165:	push   DWORD PTR [ebp-0x10]
1001b168:	mov    esi,DWORD PTR ds:0x10066070
1001b16e:	call   esi
1001b170:	push   edi
1001b171:	push   edi
1001b172:	push   ebx
1001b173:	push   0x1001afd3
1001b178:	push   edi
1001b179:	push   edi
1001b17a:	call   DWORD PTR ds:0x10066098
1001b180:	cmp    eax,edi
1001b182:	je     0x1001b189
1001b184:	push   eax
1001b185:	call   esi
1001b187:	jmp    0x1001b195
1001b189:	cmp    ebx,edi
1001b18b:	je     0x1001b195
1001b18d:	push   0x1
1001b18f:	push   ebx
1001b190:	call   0x1000672a
1001b195:	lea    eax,[ebp+0x8]
1001b198:	call   0x1001b1ff
1001b19d:	call   0x10059bfd
1001b1a2:	ret    
1001b1a3:	push   0x4
1001b1a5:	mov    eax,0x10060c8f
1001b1aa:	call   0x10059b58
1001b1af:	mov    edi,ecx
1001b1b1:	mov    esi,DWORD PTR [ebp+0x8]
1001b1b4:	call   0x1001b388
1001b1b9:	xor    ecx,ecx
1001b1bb:	mov    DWORD PTR [esi+0x4],eax
1001b1be:	mov    DWORD PTR [esi+0x8],ecx
1001b1c1:	mov    DWORD PTR [ebp-0x4],ecx
1001b1c4:	mov    ecx,DWORD PTR [edi+0x4]
1001b1c7:	mov    edx,DWORD PTR [ecx]
1001b1c9:	mov    eax,DWORD PTR [eax]
1001b1cb:	push   ecx
1001b1cc:	push   edi
1001b1cd:	push   edx
1001b1ce:	push   edi
1001b1cf:	push   eax
1001b1d0:	push   esi
1001b1d1:	push   esi
1001b1d2:	call   0x1001b526
1001b1d7:	mov    eax,esi
1001b1d9:	call   0x10059bfd
1001b1de:	ret    0x4
1001b1e1:	mov    edi,DWORD PTR [ebp+0x8]
1001b1e4:	call   0x1001b3b8
1001b1e9:	push   DWORD PTR [edi+0x4]
1001b1ec:	call   0x10042f82
1001b1f1:	pop    ecx
1001b1f2:	xor    ecx,ecx
1001b1f4:	push   ecx
1001b1f5:	push   ecx
1001b1f6:	mov    DWORD PTR [edi+0x4],ecx
1001b1f9:	call   0x10047aa4
1001b1fe:	int3   
1001b1ff:	push   edi
1001b200:	mov    edi,eax
1001b202:	call   0x1001b3b8
1001b207:	push   DWORD PTR [edi+0x4]
1001b20a:	call   0x10042f82
1001b20f:	and    DWORD PTR [edi+0x4],0x0
1001b213:	pop    ecx
1001b214:	pop    edi
1001b215:	ret    
1001b216:	push   ebp
1001b217:	mov    ebp,esp
1001b219:	push   ecx
1001b21a:	push   ecx
1001b21b:	mov    eax,DWORD PTR [ebp+0xc]
1001b21e:	push   esi
1001b21f:	push   edi
1001b220:	mov    edi,DWORD PTR [ebp+0x10]
1001b223:	lea    esi,[ebp+0xc]
1001b226:	mov    DWORD PTR [ebp-0x8],eax
1001b229:	call   0x100268f0
1001b22e:	cmp    edi,DWORD PTR [ebx+0x4]
1001b231:	je     0x1001b254
1001b233:	mov    eax,DWORD PTR [edi+0x4]
1001b236:	mov    ecx,DWORD PTR [edi]
1001b238:	mov    DWORD PTR [eax],ecx
1001b23a:	mov    eax,DWORD PTR [edi]
1001b23c:	mov    ecx,DWORD PTR [edi+0x4]
1001b23f:	lea    esi,[edi+0x8]
1001b242:	mov    DWORD PTR [eax+0x4],ecx
1001b245:	call   0x1001a7ad
1001b24a:	push   edi
1001b24b:	call   0x10042f82
1001b250:	dec    DWORD PTR [ebx+0x8]
1001b253:	pop    ecx
1001b254:	mov    ecx,DWORD PTR [ebp+0xc]
1001b257:	mov    eax,DWORD PTR [ebp+0x8]
1001b25a:	mov    DWORD PTR [eax],ecx
1001b25c:	mov    ecx,DWORD PTR [ebp+0x10]
1001b25f:	pop    edi
1001b260:	mov    DWORD PTR [eax+0x4],ecx
1001b263:	pop    esi
1001b264:	leave  
1001b265:	ret    0xc
1001b268:	push   0x44
1001b26a:	mov    eax,0x10060374
1001b26f:	call   0x10059b25
1001b274:	mov    edi,DWORD PTR [ebx+0x4]
1001b277:	push   DWORD PTR [edi+0x4]
1001b27a:	push   edi
1001b27b:	call   0x1001b450
1001b280:	mov    ecx,DWORD PTR [ebx+0x8]
1001b283:	mov    edx,0x1fffffff
1001b288:	sub    edx,ecx
1001b28a:	cmp    edx,0x1
1001b28d:	jae    0x1001b2c1
1001b28f:	push   0x1006feac
1001b294:	lea    ecx,[ebp-0x28]
1001b297:	call   0x100011c8
1001b29c:	and    DWORD PTR [ebp-0x4],0x0
1001b2a0:	lea    eax,[ebp-0x28]
1001b2a3:	push   eax
1001b2a4:	lea    ecx,[ebp-0x50]
1001b2a7:	call   0x10001065
1001b2ac:	push   0x10074ec8
1001b2b1:	lea    eax,[ebp-0x50]
1001b2b4:	push   eax
1001b2b5:	mov    DWORD PTR [ebp-0x50],0x1006b96c
1001b2bc:	call   0x10047aa4
1001b2c1:	inc    ecx
1001b2c2:	mov    DWORD PTR [ebx+0x8],ecx
1001b2c5:	mov    DWORD PTR [edi+0x4],eax
1001b2c8:	mov    ecx,DWORD PTR [eax+0x4]
1001b2cb:	mov    DWORD PTR [ecx],eax
1001b2cd:	call   0x10059bfd
1001b2d2:	ret    
1001b2d3:	mov    eax,DWORD PTR [esi+0x4]
1001b2d6:	mov    ecx,DWORD PTR [eax]
1001b2d8:	mov    DWORD PTR [eax],eax
1001b2da:	mov    eax,DWORD PTR [esi+0x4]
1001b2dd:	mov    DWORD PTR [eax+0x4],eax
1001b2e0:	and    DWORD PTR [esi+0x8],0x0
1001b2e4:	cmp    ecx,DWORD PTR [esi+0x4]
1001b2e7:	je     0x1001b2fb
1001b2e9:	push   edi
1001b2ea:	mov    edi,DWORD PTR [ecx]
1001b2ec:	push   ecx
1001b2ed:	call   0x10042f82
1001b2f2:	cmp    edi,DWORD PTR [esi+0x4]
1001b2f5:	pop    ecx
1001b2f6:	mov    ecx,edi
1001b2f8:	jne    0x1001b2ea
1001b2fa:	pop    edi
1001b2fb:	push   DWORD PTR [esi+0x4]
1001b2fe:	call   0x10042f82
1001b303:	and    DWORD PTR [esi+0x4],0x0
1001b307:	pop    ecx
1001b308:	ret    
1001b309:	mov    eax,DWORD PTR [eax]
1001b30b:	test   eax,eax
1001b30d:	je     0x1001b317
1001b30f:	push   0x1
1001b311:	push   eax
1001b312:	call   0x1000672a
1001b317:	ret    
1001b318:	push   0x48
1001b31a:	mov    eax,0x100621c0
1001b31f:	call   0x10059b25
1001b324:	push   DWORD PTR [ebp+0x8]
1001b327:	mov    esi,DWORD PTR [ebp+0x10]
1001b32a:	push   DWORD PTR [esi+0x4]
1001b32d:	push   esi
1001b32e:	call   0x1001b3ed
1001b333:	mov    ecx,DWORD PTR [edi+0x8]
1001b336:	mov    edx,0x28f5c28
1001b33b:	sub    edx,ecx
1001b33d:	cmp    edx,0x1
1001b340:	jae    0x1001b374
1001b342:	push   0x1006feac
1001b347:	lea    ecx,[ebp-0x2c]
1001b34a:	call   0x100011c8
1001b34f:	and    DWORD PTR [ebp-0x4],0x0
1001b353:	lea    eax,[ebp-0x2c]
1001b356:	push   eax
1001b357:	lea    ecx,[ebp-0x54]
1001b35a:	call   0x10001065
1001b35f:	push   0x10074ec8
1001b364:	lea    eax,[ebp-0x54]
1001b367:	push   eax
1001b368:	mov    DWORD PTR [ebp-0x54],0x1006b96c
1001b36f:	call   0x10047aa4
1001b374:	inc    ecx
1001b375:	mov    DWORD PTR [edi+0x8],ecx
1001b378:	mov    DWORD PTR [esi+0x4],eax
1001b37b:	mov    ecx,DWORD PTR [eax+0x4]
1001b37e:	mov    DWORD PTR [ecx],eax
1001b380:	call   0x10059bfd
1001b385:	ret    0xc
1001b388:	push   0x6c
1001b38a:	call   0x1004358e
1001b38f:	test   eax,eax
1001b391:	pop    ecx
1001b392:	je     0x1001b396
1001b394:	mov    DWORD PTR [eax],eax
1001b396:	lea    ecx,[eax+0x4]
1001b399:	test   ecx,ecx
1001b39b:	je     0x1001b39f
1001b39d:	mov    DWORD PTR [ecx],eax
1001b39f:	ret    
1001b3a0:	push   0x10
1001b3a2:	call   0x1004358e
1001b3a7:	test   eax,eax
1001b3a9:	pop    ecx
1001b3aa:	je     0x1001b3ae
1001b3ac:	mov    DWORD PTR [eax],eax
1001b3ae:	lea    ecx,[eax+0x4]
1001b3b1:	test   ecx,ecx
1001b3b3:	je     0x1001b3b7
1001b3b5:	mov    DWORD PTR [ecx],eax
1001b3b7:	ret    
1001b3b8:	mov    eax,DWORD PTR [edi+0x4]
1001b3bb:	push   ebx
1001b3bc:	mov    ebx,DWORD PTR [eax]
1001b3be:	mov    DWORD PTR [eax],eax
1001b3c0:	mov    eax,DWORD PTR [edi+0x4]
1001b3c3:	mov    DWORD PTR [eax+0x4],eax
1001b3c6:	and    DWORD PTR [edi+0x8],0x0
1001b3ca:	cmp    ebx,DWORD PTR [edi+0x4]
1001b3cd:	je     0x1001b3eb
1001b3cf:	push   ebp
1001b3d0:	push   esi
1001b3d1:	mov    ebp,DWORD PTR [ebx]
1001b3d3:	lea    esi,[ebx+0x8]
1001b3d6:	call   0x1001a7ad
1001b3db:	push   ebx
1001b3dc:	call   0x10042f82
1001b3e1:	cmp    ebp,DWORD PTR [edi+0x4]
1001b3e4:	pop    ecx
1001b3e5:	mov    ebx,ebp
1001b3e7:	jne    0x1001b3d1
1001b3e9:	pop    esi
1001b3ea:	pop    ebp
1001b3eb:	pop    ebx
1001b3ec:	ret    
1001b3ed:	push   0x8
1001b3ef:	mov    eax,0x1005fc72
1001b3f4:	call   0x10059b58
1001b3f9:	push   0x6c
1001b3fb:	call   0x1004358e
1001b400:	and    DWORD PTR [ebp-0x4],0x0
1001b404:	mov    esi,eax
1001b406:	test   esi,esi
1001b408:	pop    ecx
1001b409:	mov    DWORD PTR [ebp-0x14],esi
1001b40c:	je     0x1001b413
1001b40e:	mov    eax,DWORD PTR [ebp+0x8]
1001b411:	mov    DWORD PTR [esi],eax
1001b413:	lea    eax,[esi+0x4]
1001b416:	test   eax,eax
1001b418:	je     0x1001b41f
1001b41a:	mov    ecx,DWORD PTR [ebp+0xc]
1001b41d:	mov    DWORD PTR [eax],ecx
1001b41f:	lea    eax,[esi+0x8]
1001b422:	test   eax,eax
1001b424:	mov    BYTE PTR [ebp-0x4],0x1
1001b428:	je     0x1001b433
1001b42a:	mov    edi,DWORD PTR [ebp+0x10]
1001b42d:	push   eax
1001b42e:	call   0x1001b552
1001b433:	mov    eax,esi
1001b435:	call   0x10059bfd
1001b43a:	ret    0xc
1001b43d:	push   DWORD PTR [ebp-0x14]
1001b440:	call   0x10042f82
1001b445:	pop    ecx
1001b446:	push   0x0
1001b448:	push   0x0
1001b44a:	call   0x10047aa4
1001b44f:	int3   
1001b450:	push   0x10
1001b452:	call   0x1004358e
1001b457:	test   eax,eax
1001b459:	pop    ecx
1001b45a:	je     0x1001b462
1001b45c:	mov    ecx,DWORD PTR [esp+0x4]
1001b460:	mov    DWORD PTR [eax],ecx
1001b462:	lea    ecx,[eax+0x4]
1001b465:	test   ecx,ecx
1001b467:	je     0x1001b46f
1001b469:	mov    edx,DWORD PTR [esp+0x8]
1001b46d:	mov    DWORD PTR [ecx],edx
1001b46f:	lea    ecx,[eax+0x8]
1001b472:	test   ecx,ecx
1001b474:	je     0x1001b480
1001b476:	mov    edx,DWORD PTR [esi]
1001b478:	mov    DWORD PTR [ecx],edx
1001b47a:	mov    edx,DWORD PTR [esi+0x4]
1001b47d:	mov    DWORD PTR [ecx+0x4],edx
1001b480:	ret    0x8
1001b483:	push   0xc
1001b485:	call   0x1004358e
1001b48a:	test   eax,eax
1001b48c:	pop    ecx
1001b48d:	je     0x1001b495
1001b48f:	mov    ecx,DWORD PTR [esp+0x4]
1001b493:	mov    DWORD PTR [eax],ecx
1001b495:	lea    ecx,[eax+0x4]
1001b498:	test   ecx,ecx
1001b49a:	je     0x1001b4a2
1001b49c:	mov    edx,DWORD PTR [esp+0x8]
1001b4a0:	mov    DWORD PTR [ecx],edx
1001b4a2:	lea    ecx,[eax+0x8]
1001b4a5:	test   ecx,ecx
1001b4a7:	je     0x1001b4b1
1001b4a9:	mov    edx,DWORD PTR [esp+0xc]
1001b4ad:	mov    edx,DWORD PTR [edx]
1001b4af:	mov    DWORD PTR [ecx],edx
1001b4b1:	ret    0xc
1001b4b4:	push   0x7c
1001b4b6:	mov    eax,0x1006030e
1001b4bb:	call   0x10059b8e
1001b4c0:	mov    eax,DWORD PTR [ebp+0x10]
1001b4c3:	mov    ecx,DWORD PTR [ebp+0x8]
1001b4c6:	mov    edx,DWORD PTR [ebp+0x14]
1001b4c9:	mov    ebx,DWORD PTR [ebp+0xc]
1001b4cc:	mov    DWORD PTR [ebp-0x80],eax
1001b4cf:	mov    DWORD PTR [ebp-0x88],ecx
1001b4d5:	cmp    ebx,edx
1001b4d7:	je     0x1001b520
1001b4d9:	mov    eax,DWORD PTR [edx+0x4]
1001b4dc:	cmp    ebx,eax
1001b4de:	mov    DWORD PTR [ebp-0x7c],eax
1001b4e1:	je     0x1001b520
1001b4e3:	lea    esi,[eax+0x8]
1001b4e6:	lea    eax,[ebp-0x78]
1001b4e9:	lea    edi,[ebx+0x8]
1001b4ec:	push   eax
1001b4ed:	call   0x1001b552
1001b4f2:	and    DWORD PTR [ebp-0x4],0x0
1001b4f6:	mov    edi,esi
1001b4f8:	lea    esi,[ebx+0x8]
1001b4fb:	call   0x1001b674
1001b500:	mov    esi,DWORD PTR [ebp-0x7c]
1001b503:	lea    edi,[ebp-0x78]
1001b506:	add    esi,0x8
1001b509:	call   0x1001b674
1001b50e:	or     DWORD PTR [ebp-0x4],0xffffffff
1001b512:	mov    esi,edi
1001b514:	call   0x1001a7ad
1001b519:	mov    ebx,DWORD PTR [ebx]
1001b51b:	mov    edx,DWORD PTR [ebp-0x7c]
1001b51e:	jmp    0x1001b4d5
1001b520:	call   0x10059c11
1001b525:	ret    
1001b526:	push   ebp
1001b527:	mov    ebp,esp
1001b529:	and    esp,0xfffffff8
1001b52c:	push   ecx
1001b52d:	push   ecx
1001b52e:	push   DWORD PTR [ebp+0x20]
1001b531:	push   DWORD PTR [ebp+0x1c]
1001b534:	push   DWORD PTR [ebp+0x18]
1001b537:	push   DWORD PTR [ebp+0x14]
1001b53a:	push   DWORD PTR [ebp+0x10]
1001b53d:	push   DWORD PTR [ebp+0xc]
1001b540:	push   DWORD PTR [esp+0x1c]
1001b544:	push   DWORD PTR [ebp+0x8]
1001b547:	call   0x1001b5ab
1001b54c:	mov    esp,ebp
1001b54e:	pop    ebp
1001b54f:	ret    0x1c
1001b552:	push   0x0
1001b554:	mov    eax,0x1005facb
1001b559:	call   0x10059b25
1001b55e:	mov    esi,DWORD PTR [ebp+0x8]
1001b561:	push   edi
1001b562:	mov    ecx,esi
1001b564:	call   0x100011a2
1001b569:	and    DWORD PTR [ebp-0x4],0x0
1001b56d:	lea    eax,[edi+0x1c]
1001b570:	push   eax
1001b571:	lea    ecx,[esi+0x1c]
1001b574:	call   0x100011a2
1001b579:	lea    eax,[edi+0x38]
1001b57c:	push   eax
1001b57d:	lea    ecx,[esi+0x38]
1001b580:	mov    BYTE PTR [ebp-0x4],0x1
1001b584:	call   0x100011a2
1001b589:	mov    eax,DWORD PTR [edi+0x54]
1001b58c:	mov    DWORD PTR [esi+0x54],eax
1001b58f:	mov    eax,DWORD PTR [edi+0x58]
1001b592:	mov    DWORD PTR [esi+0x58],eax
1001b595:	mov    eax,DWORD PTR [edi+0x5c]
1001b598:	mov    DWORD PTR [esi+0x5c],eax
1001b59b:	mov    eax,DWORD PTR [edi+0x60]
1001b59e:	mov    DWORD PTR [esi+0x60],eax
1001b5a1:	mov    eax,esi
1001b5a3:	call   0x10059bfd
1001b5a8:	ret    0x4
1001b5ab:	push   0x14
1001b5ad:	mov    eax,0x10060c74
1001b5b2:	call   0x10059b58
1001b5b7:	mov    edi,DWORD PTR [ebp+0x18]
1001b5ba:	mov    esi,DWORD PTR [ebp+0x1c]
1001b5bd:	and    DWORD PTR [ebp-0x4],0x0
1001b5c1:	mov    DWORD PTR [ebp-0x18],edi
1001b5c4:	mov    DWORD PTR [ebp-0x14],esi
1001b5c7:	test   edi,edi
1001b5c9:	je     0x1001b5d0
1001b5cb:	cmp    edi,DWORD PTR [ebp+0x20]
1001b5ce:	je     0x1001b5d5
1001b5d0:	call   0x100434a0
1001b5d5:	cmp    esi,DWORD PTR [ebp+0x24]
1001b5d8:	je     0x1001b66c
1001b5de:	test   edi,edi
1001b5e0:	jne    0x1001b5e7
1001b5e2:	call   0x100434a0
1001b5e7:	cmp    esi,DWORD PTR [edi+0x4]
1001b5ea:	jne    0x1001b5f1
1001b5ec:	call   0x100434a0
1001b5f1:	push   DWORD PTR [ebp+0x14]
1001b5f4:	mov    edi,DWORD PTR [ebp+0x8]
1001b5f7:	push   DWORD PTR [ebp+0x10]
1001b5fa:	add    esi,0x8
1001b5fd:	push   esi
1001b5fe:	call   0x1001b318
1001b603:	lea    esi,[ebp+0x18]
1001b606:	call   0x100268f0
1001b60b:	mov    esi,DWORD PTR [ebp+0x1c]
1001b60e:	mov    edi,DWORD PTR [ebp+0x18]
1001b611:	jmp    0x1001b5c7
1001b613:	mov    edi,DWORD PTR [ebp+0x14]
1001b616:	mov    eax,DWORD PTR [ebp-0x18]
1001b619:	test   eax,eax
1001b61b:	je     0x1001b622
1001b61d:	cmp    eax,DWORD PTR [ebp+0x18]
1001b620:	je     0x1001b627
1001b622:	call   0x100434a0
1001b627:	mov    eax,DWORD PTR [ebp-0x14]
1001b62a:	cmp    eax,DWORD PTR [ebp+0x1c]
1001b62d:	je     0x1001b663
1001b62f:	mov    ebx,DWORD PTR [ebp+0x10]
1001b632:	test   ebx,ebx
1001b634:	mov    DWORD PTR [ebp+0x24],edi
1001b637:	jne    0x1001b63e
1001b639:	call   0x100434a0
1001b63e:	mov    esi,DWORD PTR [edi+0x4]
1001b641:	cmp    esi,DWORD PTR [ebx+0x4]
1001b644:	jne    0x1001b64b
1001b646:	call   0x100434a0
1001b64b:	push   esi
1001b64c:	push   ebx
1001b64d:	mov    ebx,DWORD PTR [ebp+0x8]
1001b650:	lea    eax,[ebp-0x20]
1001b653:	push   eax
1001b654:	call   0x1001b216
1001b659:	lea    esi,[ebp-0x18]
1001b65c:	call   0x100268f0
1001b661:	jmp    0x1001b616
1001b663:	push   0x0
1001b665:	push   0x0
1001b667:	call   0x10047aa4
1001b66c:	call   0x10059bfd
1001b671:	ret    0x20
1001b674:	push   0xffffffff
1001b676:	push   0x0
1001b678:	push   edi
1001b679:	mov    ecx,esi
1001b67b:	call   0x1000123c
1001b680:	push   0xffffffff
1001b682:	push   0x0
1001b684:	lea    eax,[edi+0x1c]
1001b687:	push   eax
1001b688:	lea    ecx,[esi+0x1c]
1001b68b:	call   0x1000123c
1001b690:	push   0xffffffff
1001b692:	push   0x0
1001b694:	lea    eax,[edi+0x38]
1001b697:	push   eax
1001b698:	lea    ecx,[esi+0x38]
1001b69b:	call   0x1000123c
1001b6a0:	mov    eax,DWORD PTR [edi+0x54]
1001b6a3:	mov    DWORD PTR [esi+0x54],eax
1001b6a6:	mov    eax,DWORD PTR [edi+0x58]
1001b6a9:	mov    DWORD PTR [esi+0x58],eax
1001b6ac:	mov    eax,DWORD PTR [edi+0x5c]
1001b6af:	mov    DWORD PTR [esi+0x5c],eax
1001b6b2:	mov    eax,DWORD PTR [edi+0x60]
1001b6b5:	mov    DWORD PTR [esi+0x60],eax
1001b6b8:	mov    eax,esi
1001b6ba:	ret    
1001b6bb:	mov    eax,DWORD PTR [esp+0x4]
1001b6bf:	test   eax,eax
1001b6c1:	je     0x1001b6d5
1001b6c3:	sub    eax,0x8
1001b6c6:	cmp    DWORD PTR [eax],0xdddd
1001b6cc:	jne    0x1001b6d5
1001b6ce:	push   eax
1001b6cf:	call   0x100435f8
1001b6d4:	pop    ecx
1001b6d5:	ret    
1001b6d6:	cmp    DWORD PTR [esp+0x4],0x0
1001b6db:	jne    0x1001b6e5
1001b6dd:	and    DWORD PTR [esi],0x0
1001b6e0:	mov    eax,esi
1001b6e2:	ret    0x4
1001b6e5:	push   DWORD PTR [esp+0x4]
1001b6e9:	call   DWORD PTR ds:0x100662b0
1001b6ef:	test   eax,eax
1001b6f1:	mov    DWORD PTR [esi],eax
1001b6f3:	jne    0x1001b6e0
1001b6f5:	push   0x8007000e
1001b6fa:	call   0x10001f33
1001b6ff:	int3   
1001b700:	push   ebp
1001b701:	mov    ebp,esp
1001b703:	sub    esp,0x84
1001b709:	mov    eax,ds:0x1007e030
1001b70e:	xor    eax,ebp
1001b710:	mov    DWORD PTR [ebp-0x4],eax
1001b713:	mov    eax,DWORD PTR [ebp+0x8]
1001b716:	push   0x40
1001b718:	lea    ecx,[ebp-0x84]
1001b71e:	push   ecx
1001b71f:	push   eax
1001b720:	call   DWORD PTR ds:0x10066418
1001b726:	lea    eax,[ebp-0x84]
1001b72c:	push   eax
1001b72d:	call   DWORD PTR ds:0x100662b0
1001b733:	test   eax,eax
1001b735:	mov    DWORD PTR [esi],eax
1001b737:	jne    0x1001b743
1001b739:	push   0x8007000e
1001b73e:	call   0x10001f33
1001b743:	mov    ecx,DWORD PTR [ebp-0x4]
1001b746:	xor    ecx,ebp
1001b748:	mov    eax,esi
1001b74a:	call   0x10042f87
1001b74f:	leave  
1001b750:	ret    0x4
1001b753:	push   ecx
1001b754:	call   DWORD PTR ds:0x10066294
1001b75a:	ret    
1001b75b:	push   ebp
1001b75c:	mov    ebp,esp
1001b75e:	push   ecx
1001b75f:	push   ecx
1001b760:	test   esi,esi
1001b762:	je     0x1001b79e
1001b764:	test   eax,eax
1001b766:	je     0x1001b79e
1001b768:	mov    DWORD PTR [esi],eax
1001b76a:	call   DWORD PTR ds:0x10066160
1001b770:	mov    DWORD PTR [esi+0x4],eax
1001b773:	mov    eax,0x10080a40
1001b778:	push   eax
1001b779:	mov    DWORD PTR [ebp-0x8],eax
1001b77c:	call   DWORD PTR ds:0x100660f0
1001b782:	mov    eax,ds:0x10080a58
1001b787:	mov    DWORD PTR [esi+0x8],eax
1001b78a:	lea    ecx,[ebp-0x8]
1001b78d:	mov    BYTE PTR [ebp-0x4],0x1
1001b791:	mov    DWORD PTR ds:0x10080a58,esi
1001b797:	call   0x10010d7e
1001b79c:	leave  
1001b79d:	ret    
1001b79e:	push   0x0
1001b7a0:	push   0x0
1001b7a2:	push   0x1
1001b7a4:	push   0xc0000005
1001b7a9:	call   DWORD PTR ds:0x10066128
1001b7af:	int3   
1001b7b0:	push   esi
1001b7b1:	mov    esi,eax
1001b7b3:	test   esi,esi
1001b7b5:	push   edi
1001b7b6:	je     0x1001b7e6
1001b7b8:	mov    edi,DWORD PTR ds:0x10066348
1001b7be:	cmp    WORD PTR [esi],0x0
1001b7c2:	je     0x1001b7e6
1001b7c4:	mov    eax,0x10070390
1001b7c9:	movzx  ecx,WORD PTR [eax]
1001b7cc:	test   cx,cx
1001b7cf:	je     0x1001b7dd
1001b7d1:	cmp    WORD PTR [esi],cx
1001b7d4:	je     0x1001b7eb
1001b7d6:	push   eax
1001b7d7:	call   edi
1001b7d9:	test   eax,eax
1001b7db:	jne    0x1001b7c9
1001b7dd:	push   esi
1001b7de:	call   edi
1001b7e0:	mov    esi,eax
1001b7e2:	test   esi,esi
1001b7e4:	jne    0x1001b7be
1001b7e6:	xor    eax,eax
1001b7e8:	pop    edi
1001b7e9:	pop    esi
1001b7ea:	ret    
1001b7eb:	push   esi
1001b7ec:	call   edi
1001b7ee:	jmp    0x1001b7e8
1001b7f0:	push   ebp
1001b7f1:	mov    ebp,esp
1001b7f3:	push   ecx
1001b7f4:	push   ecx
1001b7f5:	test   eax,eax
1001b7f7:	jne    0x1001b800
1001b7f9:	mov    eax,0x80070057
1001b7fe:	jmp    0x1001b861
1001b800:	mov    ecx,DWORD PTR [eax]
1001b802:	and    DWORD PTR [ebp-0x8],0x0
1001b806:	and    DWORD PTR [ebp-0x4],0x0
1001b80a:	push   esi
1001b80b:	lea    edx,[ebp-0x8]
1001b80e:	push   edx
1001b80f:	push   0x10070210
1001b814:	push   eax
1001b815:	call   DWORD PTR [ecx]
1001b817:	mov    esi,eax
1001b819:	test   esi,esi
1001b81b:	jl     0x1001b844
1001b81d:	mov    eax,DWORD PTR [ebp-0x8]
1001b820:	mov    ecx,DWORD PTR [eax]
1001b822:	lea    edx,[ebp-0x4]
1001b825:	push   edx
1001b826:	push   DWORD PTR [ebp+0xc]
1001b829:	push   eax
1001b82a:	call   DWORD PTR [ecx+0x10]
1001b82d:	mov    esi,eax
1001b82f:	test   esi,esi
1001b831:	jl     0x1001b844
1001b833:	push   DWORD PTR [ebp+0x10]
1001b836:	mov    eax,DWORD PTR [ebp-0x4]
1001b839:	push   DWORD PTR [ebp+0x8]
1001b83c:	mov    ecx,DWORD PTR [eax]
1001b83e:	push   eax
1001b83f:	call   DWORD PTR [ecx+0x14]
1001b842:	mov    esi,eax
1001b844:	mov    eax,DWORD PTR [ebp-0x4]
1001b847:	test   eax,eax
1001b849:	je     0x1001b851
1001b84b:	mov    ecx,DWORD PTR [eax]
1001b84d:	push   eax
1001b84e:	call   DWORD PTR [ecx+0x8]
1001b851:	mov    eax,DWORD PTR [ebp-0x8]
1001b854:	test   eax,eax
1001b856:	je     0x1001b85e
1001b858:	mov    ecx,DWORD PTR [eax]
1001b85a:	push   eax
1001b85b:	call   DWORD PTR [ecx+0x8]
1001b85e:	mov    eax,esi
1001b860:	pop    esi
1001b861:	leave  
1001b862:	ret    0xc
1001b865:	push   ebp
1001b866:	mov    ebp,esp
1001b868:	push   ecx
1001b869:	push   ecx
1001b86a:	test   eax,eax
1001b86c:	jne    0x1001b875
1001b86e:	mov    eax,0x80070057
1001b873:	jmp    0x1001b8d3
1001b875:	mov    ecx,DWORD PTR [eax]
1001b877:	and    DWORD PTR [ebp-0x8],0x0
1001b87b:	and    DWORD PTR [ebp-0x4],0x0
1001b87f:	push   esi
1001b880:	lea    edx,[ebp-0x8]
1001b883:	push   edx
1001b884:	push   0x10070210
1001b889:	push   eax
1001b88a:	call   DWORD PTR [ecx]
1001b88c:	mov    esi,eax
1001b88e:	test   esi,esi
1001b890:	jl     0x1001b8b6
1001b892:	mov    eax,DWORD PTR [ebp-0x8]
1001b895:	mov    ecx,DWORD PTR [eax]
1001b897:	lea    edx,[ebp-0x4]
1001b89a:	push   edx
1001b89b:	push   DWORD PTR [ebp+0x8]
1001b89e:	push   eax
1001b89f:	call   DWORD PTR [ecx+0x10]
1001b8a2:	mov    esi,eax
1001b8a4:	test   esi,esi
1001b8a6:	jl     0x1001b8b6
1001b8a8:	mov    eax,DWORD PTR [ebp-0x4]
1001b8ab:	push   DWORD PTR [ebp+0xc]
1001b8ae:	mov    ecx,DWORD PTR [eax]
1001b8b0:	push   eax
1001b8b1:	call   DWORD PTR [ecx+0x18]
1001b8b4:	mov    esi,eax
1001b8b6:	mov    eax,DWORD PTR [ebp-0x4]
1001b8b9:	test   eax,eax
1001b8bb:	je     0x1001b8c3
1001b8bd:	mov    ecx,DWORD PTR [eax]
1001b8bf:	push   eax
1001b8c0:	call   DWORD PTR [ecx+0x8]
1001b8c3:	mov    eax,DWORD PTR [ebp-0x8]
1001b8c6:	test   eax,eax
1001b8c8:	je     0x1001b8d0
1001b8ca:	mov    ecx,DWORD PTR [eax]
1001b8cc:	push   eax
1001b8cd:	call   DWORD PTR [ecx+0x8]
1001b8d0:	mov    eax,esi
1001b8d2:	pop    esi
1001b8d3:	leave  
1001b8d4:	ret    0x8
1001b8d7:	push   ebp
1001b8d8:	mov    ebp,esp
1001b8da:	push   edi
1001b8db:	xor    edi,edi
1001b8dd:	xor    eax,eax
1001b8df:	cmp    DWORD PTR ds:0x1007f96c,edi
1001b8e5:	je     0x1001b8ef
1001b8e7:	cmp    DWORD PTR ds:0x1007f974,edi
1001b8ed:	jne    0x1001b8f7
1001b8ef:	push   DWORD PTR [ebp+0xc]
1001b8f2:	call   0x1001baf0
1001b8f7:	cmp    DWORD PTR ds:0x1007f96c,edi
1001b8fd:	je     0x1001b967
1001b8ff:	cmp    DWORD PTR ds:0x1007f974,edi
1001b905:	push   esi
1001b906:	je     0x1001b954
1001b908:	cmp    DWORD PTR [ebp+0x8],0x1
1001b90c:	jne    0x1001b954
1001b90e:	push   DWORD PTR [ebx]
1001b910:	call   DWORD PTR ds:0x100660c4
1001b916:	mov    esi,DWORD PTR ds:0x1007f978
1001b91c:	dec    esi
1001b91d:	cmp    esi,edi
1001b91f:	mov    DWORD PTR [ebp+0xc],eax
1001b922:	jl     0x1001b954
1001b924:	mov    edi,esi
1001b926:	imul   edi,edi,0xc
1001b929:	mov    eax,ds:0x1007f974
1001b92e:	add    eax,edi
1001b930:	mov    ecx,DWORD PTR [eax+0x4]
1001b933:	cmp    DWORD PTR [ebp+0xc],ecx
1001b936:	jne    0x1001b94c
1001b938:	mov    eax,DWORD PTR [eax]
1001b93a:	add    ecx,ecx
1001b93c:	push   ecx
1001b93d:	push   DWORD PTR [ebx]
1001b93f:	push   eax
1001b940:	call   0x10043816
1001b945:	add    esp,0xc
1001b948:	test   eax,eax
1001b94a:	je     0x1001b96c
1001b94c:	dec    esi
1001b94d:	sub    edi,0xc
1001b950:	test   esi,esi
1001b952:	jge    0x1001b929
1001b954:	push   DWORD PTR [ebp+0x10]
1001b957:	mov    eax,ds:0x1007f96c
1001b95c:	push   DWORD PTR [ebp+0x8]
1001b95f:	mov    ecx,DWORD PTR [eax]
1001b961:	push   ebx
1001b962:	push   eax
1001b963:	call   DWORD PTR [ecx+0x28]
1001b966:	pop    esi
1001b967:	pop    edi
1001b968:	pop    ebp
1001b969:	ret    0xc
1001b96c:	mov    eax,ds:0x1007f974
1001b971:	imul   esi,esi,0xc
1001b974:	mov    eax,DWORD PTR [esi+eax*1+0x8]
1001b978:	mov    ecx,DWORD PTR [ebp+0x10]
1001b97b:	mov    DWORD PTR [ecx],eax
1001b97d:	xor    eax,eax
1001b97f:	jmp    0x1001b966
1001b981:	push   0x18
1001b983:	mov    eax,0x1005f934
1001b988:	call   0x10059b58
1001b98d:	mov    ebx,DWORD PTR [ebp+0x8]
1001b990:	mov    eax,DWORD PTR [ebx]
1001b992:	lea    ecx,[ebp-0x24]
1001b995:	push   ecx
1001b996:	push   ebx
1001b997:	call   DWORD PTR [eax+0xc]
1001b99a:	xor    ecx,ecx
1001b99c:	cmp    eax,ecx
1001b99e:	jl     0x1001bae6
1001b9a4:	mov    eax,DWORD PTR [ebp-0x24]
1001b9a7:	movzx  eax,WORD PTR [eax+0x2c]
1001b9ab:	cmp    eax,ecx
1001b9ad:	mov    DWORD PTR [ebp-0x1c],ecx
1001b9b0:	mov    ds:0x1007f978,eax
1001b9b5:	mov    DWORD PTR ds:0x1007f974,ecx
1001b9bb:	je     0x1001ba38
1001b9bd:	mov    edi,eax
1001b9bf:	push   0xc
1001b9c1:	pop    edx
1001b9c2:	mul    edx
1001b9c4:	mov    DWORD PTR [ebp-0x4],ecx
1001b9c7:	seto   cl
1001b9ca:	neg    ecx
1001b9cc:	or     ecx,eax
1001b9ce:	xor    eax,eax
1001b9d0:	add    ecx,0x4
1001b9d3:	setb   al
1001b9d6:	neg    eax
1001b9d8:	or     eax,ecx
1001b9da:	push   eax
1001b9db:	call   0x10043811
1001b9e0:	pop    ecx
1001b9e1:	mov    DWORD PTR [ebp-0x20],eax
1001b9e4:	test   eax,eax
1001b9e6:	mov    BYTE PTR [ebp-0x4],0x1
1001b9ea:	je     0x1001ba06
1001b9ec:	push   0x100067fc
1001b9f1:	push   0x10010526
1001b9f6:	push   edi
1001b9f7:	lea    esi,[eax+0x4]
1001b9fa:	push   0xc
1001b9fc:	push   esi
1001b9fd:	mov    DWORD PTR [eax],edi
1001b9ff:	call   0x10045ee8
1001ba04:	jmp    0x1001ba08
1001ba06:	xor    esi,esi
1001ba08:	or     DWORD PTR [ebp-0x4],0xffffffff
1001ba0c:	mov    DWORD PTR [ebp-0x1c],esi
1001ba0f:	jmp    0x1001ba1a
1001ba11:	mov    eax,0x1001ba17
1001ba16:	ret    
1001ba17:	mov    ebx,DWORD PTR [ebp+0x8]
1001ba1a:	cmp    DWORD PTR [ebp-0x1c],0x0
1001ba1e:	jne    0x1001ba33
1001ba20:	push   DWORD PTR [ebp-0x24]
1001ba23:	mov    eax,DWORD PTR [ebx]
1001ba25:	push   ebx
1001ba26:	call   DWORD PTR [eax+0x4c]
1001ba29:	mov    eax,0x8007000e
1001ba2e:	jmp    0x1001bae8
1001ba33:	mov    eax,ds:0x1007f978
1001ba38:	and    DWORD PTR [ebp-0x18],0x0
1001ba3c:	test   eax,eax
1001ba3e:	jle    0x1001bad5
1001ba44:	mov    esi,DWORD PTR [ebp-0x1c]
1001ba47:	mov    ebx,DWORD PTR ds:0x100662b4
1001ba4d:	mov    edi,DWORD PTR [ebp+0x8]
1001ba50:	mov    eax,DWORD PTR [edi]
1001ba52:	lea    ecx,[ebp-0x20]
1001ba55:	push   ecx
1001ba56:	push   DWORD PTR [ebp-0x18]
1001ba59:	push   edi
1001ba5a:	call   DWORD PTR [eax+0x14]
1001ba5d:	test   eax,eax
1001ba5f:	jl     0x1001babd
1001ba61:	xor    eax,eax
1001ba63:	mov    DWORD PTR [ebp-0x14],eax
1001ba66:	push   eax
1001ba67:	push   eax
1001ba68:	push   eax
1001ba69:	mov    DWORD PTR [ebp-0x4],0x3
1001ba70:	mov    ecx,DWORD PTR [edi]
1001ba72:	lea    eax,[ebp-0x14]
1001ba75:	push   eax
1001ba76:	mov    eax,DWORD PTR [ebp-0x20]
1001ba79:	push   DWORD PTR [eax]
1001ba7b:	push   edi
1001ba7c:	call   DWORD PTR [ecx+0x30]
1001ba7f:	test   eax,eax
1001ba81:	jl     0x1001baab
1001ba83:	mov    edi,DWORD PTR [ebp-0x14]
1001ba86:	mov    eax,DWORD PTR [esi]
1001ba88:	and    DWORD PTR [ebp-0x14],0x0
1001ba8c:	cmp    eax,edi
1001ba8e:	je     0x1001ba95
1001ba90:	push   eax
1001ba91:	call   ebx
1001ba93:	mov    DWORD PTR [esi],edi
1001ba95:	push   DWORD PTR [esi]
1001ba97:	call   DWORD PTR ds:0x100662ac
1001ba9d:	mov    edi,DWORD PTR [ebp+0x8]
1001baa0:	mov    DWORD PTR [esi+0x4],eax
1001baa3:	mov    eax,DWORD PTR [ebp-0x20]
1001baa6:	mov    eax,DWORD PTR [eax]
1001baa8:	mov    DWORD PTR [esi+0x8],eax
1001baab:	push   DWORD PTR [ebp-0x20]
1001baae:	mov    eax,DWORD PTR [edi]
1001bab0:	push   edi
1001bab1:	call   DWORD PTR [eax+0x50]
1001bab4:	or     DWORD PTR [ebp-0x4],0xffffffff
1001bab8:	push   DWORD PTR [ebp-0x14]
1001babb:	call   ebx
1001babd:	inc    DWORD PTR [ebp-0x18]
1001bac0:	mov    eax,DWORD PTR [ebp-0x18]
1001bac3:	add    esi,0xc
1001bac6:	cmp    eax,DWORD PTR ds:0x1007f978
1001bacc:	jl     0x1001ba4d
1001bad2:	mov    ebx,DWORD PTR [ebp+0x8]
1001bad5:	mov    eax,DWORD PTR [ebp-0x1c]
1001bad8:	push   DWORD PTR [ebp-0x24]
1001badb:	mov    ds:0x1007f974,eax
1001bae0:	mov    eax,DWORD PTR [ebx]
1001bae2:	push   ebx
1001bae3:	call   DWORD PTR [eax+0x4c]
1001bae6:	xor    eax,eax
1001bae8:	call   0x10059bfd
1001baed:	ret    0x4
1001baf0:	push   ebp
1001baf1:	sub    esp,0x208
1001baf7:	lea    ebp,[esp-0x4]
1001bafb:	mov    eax,ds:0x1007e030
1001bb00:	xor    eax,ebp
1001bb02:	mov    DWORD PTR [ebp+0x208],eax
1001bb08:	push   0x18
1001bb0a:	mov    eax,0x1005fc45
1001bb0f:	call   0x10059b25
1001bb14:	xor    ebx,ebx
1001bb16:	cmp    DWORD PTR ds:0x1007f96c,ebx
1001bb1c:	je     0x1001bb2d
1001bb1e:	cmp    DWORD PTR ds:0x1007f974,ebx
1001bb24:	je     0x1001bb2d
1001bb26:	xor    eax,eax
1001bb28:	jmp    0x1001bccb
1001bb2d:	mov    eax,ds:0x10080c04
1001bb32:	add    eax,0x10
1001bb35:	mov    DWORD PTR [ebp-0x24],eax
1001bb38:	push   eax
1001bb39:	mov    DWORD PTR [ebp-0x4],ebx
1001bb3c:	call   DWORD PTR ds:0x100660f0
1001bb42:	cmp    DWORD PTR ds:0x1007f96c,ebx
1001bb48:	mov    BYTE PTR [ebp-0x20],0x1
1001bb4c:	mov    edi,0x80004005
1001bb51:	jne    0x1001bca6
1001bb57:	mov    esi,DWORD PTR ds:0x1007f964
1001bb5d:	mov    eax,esi
1001bb5f:	mov    ecx,0x10080c08
1001bb64:	mov    DWORD PTR [ebp-0x14],ebx
1001bb67:	call   0x1001039e
1001bb6c:	mov    cx,WORD PTR ds:0x1007f968
1001bb73:	test   eax,eax
1001bb75:	mov    ax,ds:0x1007f96a
1001bb7b:	je     0x1001bbc5
1001bb7d:	cmp    cx,0xffff
1001bb82:	jne    0x1001bbc5
1001bb84:	cmp    ax,cx
1001bb87:	jne    0x1001bbc5
1001bb89:	mov    esi,0x104
1001bb8e:	push   esi
1001bb8f:	lea    eax,[ebp+0x0]
1001bb92:	push   eax
1001bb93:	push   DWORD PTR ds:0x10080a04
1001bb99:	call   DWORD PTR ds:0x10066124
1001bb9f:	cmp    eax,ebx
1001bba1:	je     0x1001bca8
1001bba7:	cmp    eax,esi
1001bba9:	je     0x1001bca8
1001bbaf:	call   DWORD PTR ds:0x1007efec
1001bbb5:	lea    eax,[ebp-0x14]
1001bbb8:	push   eax
1001bbb9:	lea    eax,[ebp+0x0]
1001bbbc:	push   eax
1001bbbd:	call   DWORD PTR ds:0x10066290
1001bbc3:	jmp    0x1001bbd8
1001bbc5:	lea    edx,[ebp-0x14]
1001bbc8:	push   edx
1001bbc9:	push   DWORD PTR [ebp+0x214]
1001bbcf:	push   eax
1001bbd0:	push   ecx
1001bbd1:	push   esi
1001bbd2:	call   DWORD PTR ds:0x10066284
1001bbd8:	mov    edi,eax
1001bbda:	cmp    edi,ebx
1001bbdc:	jl     0x1001bca8
1001bbe2:	mov    DWORD PTR [ebp-0x10],ebx
1001bbe5:	lea    edx,[ebp-0x10]
1001bbe8:	mov    BYTE PTR [ebp-0x4],0x1
1001bbec:	mov    eax,DWORD PTR [ebp-0x14]
1001bbef:	mov    ecx,DWORD PTR [eax]
1001bbf1:	push   edx
1001bbf2:	push   DWORD PTR ds:0x1007f960
1001bbf8:	push   eax
1001bbf9:	call   DWORD PTR [ecx+0x18]
1001bbfc:	mov    edi,eax
1001bbfe:	cmp    edi,ebx
1001bc00:	jl     0x1001bc8b
1001bc06:	mov    eax,DWORD PTR [ebp-0x10]
1001bc09:	cmp    eax,ebx
1001bc0b:	mov    DWORD PTR [ebp-0x18],eax
1001bc0e:	je     0x1001bc19
1001bc10:	mov    ecx,DWORD PTR [eax]
1001bc12:	push   eax
1001bc13:	call   DWORD PTR [ecx+0x4]
1001bc16:	mov    eax,DWORD PTR [ebp-0x10]
1001bc19:	mov    DWORD PTR [ebp-0x1c],ebx
1001bc1c:	lea    edx,[ebp-0x1c]
1001bc1f:	push   edx
1001bc20:	push   0x1006dd80
1001bc25:	mov    BYTE PTR [ebp-0x4],0x3
1001bc29:	mov    ecx,DWORD PTR [eax]
1001bc2b:	push   eax
1001bc2c:	call   DWORD PTR [ecx]
1001bc2e:	test   eax,eax
1001bc30:	jl     0x1001bc3e
1001bc32:	lea    eax,[ebp-0x18]
1001bc35:	push   eax
1001bc36:	lea    eax,[ebp-0x1c]
1001bc39:	call   0x10010d95
1001bc3e:	mov    eax,DWORD PTR [ebp-0x18]
1001bc41:	mov    ds:0x1007f96c,eax
1001bc46:	mov    eax,ds:0x10080c04
1001bc4b:	mov    ecx,eax
1001bc4d:	add    eax,0x4
1001bc50:	neg    ecx
1001bc52:	push   0x1007f960
1001bc57:	sbb    ecx,ecx
1001bc59:	push   0x100107b1
1001bc5e:	and    ecx,eax
1001bc60:	push   ecx
1001bc61:	mov    DWORD PTR [ebp-0x18],ebx
1001bc64:	call   0x100104a8
1001bc69:	mov    BYTE PTR [ebp-0x4],0x2
1001bc6d:	mov    eax,DWORD PTR [ebp-0x1c]
1001bc70:	cmp    eax,ebx
1001bc72:	je     0x1001bc7a
1001bc74:	mov    ecx,DWORD PTR [eax]
1001bc76:	push   eax
1001bc77:	call   DWORD PTR [ecx+0x8]
1001bc7a:	mov    BYTE PTR [ebp-0x4],0x1
1001bc7e:	mov    eax,DWORD PTR [ebp-0x18]
1001bc81:	cmp    eax,ebx
1001bc83:	je     0x1001bc8b
1001bc85:	mov    ecx,DWORD PTR [eax]
1001bc87:	push   eax
1001bc88:	call   DWORD PTR [ecx+0x8]
1001bc8b:	mov    eax,DWORD PTR [ebp-0x14]
1001bc8e:	mov    ecx,DWORD PTR [eax]
1001bc90:	push   eax
1001bc91:	call   DWORD PTR [ecx+0x8]
1001bc94:	mov    BYTE PTR [ebp-0x4],bl
1001bc97:	mov    eax,DWORD PTR [ebp-0x10]
1001bc9a:	cmp    eax,ebx
1001bc9c:	je     0x1001bca8
1001bc9e:	mov    ecx,DWORD PTR [eax]
1001bca0:	push   eax
1001bca1:	call   DWORD PTR [ecx+0x8]
1001bca4:	jmp    0x1001bca8
1001bca6:	xor    edi,edi
1001bca8:	mov    eax,ds:0x1007f96c
1001bcad:	cmp    eax,ebx
1001bcaf:	je     0x1001bcc1
1001bcb1:	cmp    DWORD PTR ds:0x1007f974,ebx
1001bcb7:	jne    0x1001bcc1
1001bcb9:	push   eax
1001bcba:	call   0x1001b981
1001bcbf:	mov    edi,eax
1001bcc1:	lea    ecx,[ebp-0x24]
1001bcc4:	call   0x10010d7e
1001bcc9:	mov    eax,edi
1001bccb:	mov    ecx,DWORD PTR [ebp-0xc]
1001bcce:	mov    DWORD PTR fs:0x0,ecx
1001bcd5:	pop    ecx
1001bcd6:	pop    edi
1001bcd7:	pop    esi
1001bcd8:	pop    ebx
1001bcd9:	mov    ecx,DWORD PTR [ebp+0x208]
1001bcdf:	xor    ecx,ebp
1001bce1:	call   0x10042f87
1001bce6:	add    ebp,0x20c
1001bcec:	leave  
1001bced:	ret    0x4
1001bcf0:	push   ebp
1001bcf1:	sub    esp,0x3e8
1001bcf7:	lea    ebp,[esp-0x4]
1001bcfb:	mov    eax,ds:0x1007e030
1001bd00:	xor    eax,ebp
1001bd02:	mov    DWORD PTR [ebp+0x3e8],eax
1001bd08:	push   0x18
1001bd0a:	mov    eax,0x1005fbfd
1001bd0f:	call   0x10059b25
1001bd14:	mov    eax,DWORD PTR [ebp+0x3f4]
1001bd1a:	xor    ebx,ebx
1001bd1c:	mov    esi,ecx
1001bd1e:	cmp    esi,ebx
1001bd20:	mov    DWORD PTR [ebp-0x20],eax
1001bd23:	mov    DWORD PTR [eax],ebx
1001bd25:	je     0x1001be5c
1001bd2b:	mov    eax,DWORD PTR [esi]
1001bd2d:	lea    ecx,[ebp-0x14]
1001bd30:	push   ecx
1001bd31:	push   0x2
1001bd33:	lea    ecx,[ebp-0x1c]
1001bd36:	push   ecx
1001bd37:	push   esi
1001bd38:	call   DWORD PTR [eax+0xc]
1001bd3b:	cmp    eax,ebx
1001bd3d:	jl     0x1001be5e
1001bd43:	mov    eax,DWORD PTR [esi]
1001bd45:	lea    ecx,[ebp-0x14]
1001bd48:	push   ecx
1001bd49:	push   0x4
1001bd4b:	lea    ecx,[ebp-0x24]
1001bd4e:	push   ecx
1001bd4f:	push   esi
1001bd50:	call   DWORD PTR [eax+0xc]
1001bd53:	cmp    eax,ebx
1001bd55:	jl     0x1001be5e
1001bd5b:	mov    eax,DWORD PTR [esi]
1001bd5d:	lea    ecx,[ebp-0x14]
1001bd60:	push   ecx
1001bd61:	push   0x4
1001bd63:	lea    ecx,[ebp-0x18]
1001bd66:	push   ecx
1001bd67:	push   esi
1001bd68:	call   DWORD PTR [eax+0xc]
1001bd6b:	cmp    eax,ebx
1001bd6d:	jl     0x1001be5e
1001bd73:	cmp    DWORD PTR [ebp-0x18],ebx
1001bd76:	jbe    0x1001bdfc
1001bd7c:	jne    0x1001bda4
1001bd7e:	xor    edi,edi
1001bd80:	mov    DWORD PTR [ebp-0x10],edi
1001bd83:	push   edi
1001bd84:	mov    DWORD PTR [ebp-0x4],ebx
1001bd87:	call   DWORD PTR ds:0x100662ac
1001bd8d:	test   eax,eax
1001bd8f:	jne    0x1001bdc1
1001bd91:	mov    esi,0x8007000e
1001bd96:	push   edi
1001bd97:	call   DWORD PTR ds:0x100662b4
1001bd9d:	mov    eax,esi
1001bd9f:	jmp    0x1001be5e
1001bda4:	push   DWORD PTR [ebp-0x18]
1001bda7:	push   ebx
1001bda8:	call   DWORD PTR ds:0x1006629c
1001bdae:	mov    edi,eax
1001bdb0:	cmp    edi,ebx
1001bdb2:	mov    DWORD PTR [ebp-0x10],edi
1001bdb5:	jne    0x1001bd83
1001bdb7:	push   0x8007000e
1001bdbc:	call   0x10001f33
1001bdc1:	mov    eax,DWORD PTR [ebp-0x18]
1001bdc4:	lea    eax,[eax+eax*1+0x2]
1001bdc8:	push   eax
1001bdc9:	push   ebx
1001bdca:	push   edi
1001bdcb:	call   0x10045cf0
1001bdd0:	mov    eax,DWORD PTR [esi]
1001bdd2:	add    esp,0xc
1001bdd5:	lea    ecx,[ebp-0x14]
1001bdd8:	push   ecx
1001bdd9:	mov    ecx,DWORD PTR [ebp-0x18]
1001bddc:	add    ecx,ecx
1001bdde:	push   ecx
1001bddf:	push   edi
1001bde0:	push   esi
1001bde1:	call   DWORD PTR [eax+0xc]
1001bde4:	cmp    eax,ebx
1001bde6:	jge    0x1001bdec
1001bde8:	mov    esi,eax
1001bdea:	jmp    0x1001bd96
1001bdec:	mov    eax,DWORD PTR [ebp-0x20]
1001bdef:	or     DWORD PTR [ebp-0x4],0xffffffff
1001bdf3:	push   ebx
1001bdf4:	mov    DWORD PTR [eax],edi
1001bdf6:	call   DWORD PTR ds:0x100662b4
1001bdfc:	mov    ax,WORD PTR [ebp-0x1c]
1001be00:	cmp    ax,0x37a
1001be04:	je     0x1001be1c
1001be06:	cmp    ax,0x37b
1001be0a:	je     0x1001be1c
1001be0c:	sub    ax,0x376
1001be10:	neg    ax
1001be13:	sbb    eax,eax
1001be15:	and    eax,0x80004005
1001be1a:	jmp    0x1001be5e
1001be1c:	mov    eax,DWORD PTR [esi]
1001be1e:	lea    ecx,[ebp-0x14]
1001be21:	push   ecx
1001be22:	push   0x4
1001be24:	lea    ecx,[ebp-0x10]
1001be27:	push   ecx
1001be28:	push   esi
1001be29:	call   DWORD PTR [eax+0xc]
1001be2c:	cmp    eax,ebx
1001be2e:	jl     0x1001be5e
1001be30:	sub    DWORD PTR [ebp-0x10],0x4
1001be34:	je     0x1001be5c
1001be36:	mov    edi,0x3e8
1001be3b:	cmp    DWORD PTR [ebp-0x10],edi
1001be3e:	mov    eax,DWORD PTR [ebp-0x10]
1001be41:	jb     0x1001be45
1001be43:	mov    eax,edi
1001be45:	mov    ecx,DWORD PTR [esi]
1001be47:	lea    edx,[ebp-0x14]
1001be4a:	push   edx
1001be4b:	push   eax
1001be4c:	lea    eax,[ebp+0x0]
1001be4f:	push   eax
1001be50:	push   esi
1001be51:	call   DWORD PTR [ecx+0xc]
1001be54:	mov    eax,DWORD PTR [ebp-0x14]
1001be57:	sub    DWORD PTR [ebp-0x10],eax
1001be5a:	jne    0x1001be3b
1001be5c:	xor    eax,eax
1001be5e:	mov    ecx,DWORD PTR [ebp-0xc]
1001be61:	mov    DWORD PTR fs:0x0,ecx
1001be68:	pop    ecx
1001be69:	pop    edi
1001be6a:	pop    esi
1001be6b:	pop    ebx
1001be6c:	mov    ecx,DWORD PTR [ebp+0x3e8]
1001be72:	xor    ecx,ebp
1001be74:	call   0x10042f87
1001be79:	add    ebp,0x3ec
1001be7f:	leave  
1001be80:	ret    
1001be81:	push   ebp
1001be82:	mov    ebp,esp
1001be84:	sub    esp,0x14
1001be87:	mov    eax,ds:0x1007e030
1001be8c:	xor    eax,ebp
1001be8e:	mov    DWORD PTR [ebp-0x4],eax
1001be91:	mov    eax,DWORD PTR [ebp+0x8]
1001be94:	push   DWORD PTR [eax]
1001be96:	call   DWORD PTR ds:0x100662e0
1001be9c:	push   0x8
1001be9e:	lea    ecx,[ebp-0x14]
1001bea1:	push   ecx
1001bea2:	push   eax
1001bea3:	call   DWORD PTR ds:0x1006634c
1001bea9:	test   eax,eax
1001beab:	je     0x1001bec1
1001bead:	push   0x10070370
1001beb2:	lea    eax,[ebp-0x14]
1001beb5:	push   eax
1001beb6:	call   DWORD PTR ds:0x10066150
1001bebc:	neg    eax
1001bebe:	sbb    eax,eax
1001bec0:	inc    eax
1001bec1:	mov    ecx,DWORD PTR [ebp-0x4]
1001bec4:	xor    ecx,ebp
1001bec6:	call   0x10042f87
1001becb:	leave  
1001becc:	ret    0x4
1001becf:	cmp    DWORD PTR [edi+0xc],0x0
1001bed3:	push   esi
1001bed4:	mov    esi,eax
1001bed6:	jne    0x1001bee4
1001bed8:	call   0x1005728b
1001bedd:	test   eax,eax
1001bedf:	mov    DWORD PTR [edi+0xc],eax
1001bee2:	je     0x1001bf13
1001bee4:	mov    eax,DWORD PTR [edi+0xc]
1001bee7:	mov    ecx,DWORD PTR [esp+0x8]
1001beeb:	sub    esi,eax
1001beed:	push   0xd
1001beef:	sub    esi,0xd
1001bef2:	push   eax
1001bef3:	mov    DWORD PTR [eax],0x42444c7
1001bef9:	mov    DWORD PTR [eax+0x4],ecx
1001befc:	mov    BYTE PTR [eax+0x8],0xe9
1001bf00:	mov    DWORD PTR [eax+0x9],esi
1001bf03:	call   DWORD PTR ds:0x10066108
1001bf09:	push   eax
1001bf0a:	call   DWORD PTR ds:0x10066158
1001bf10:	xor    eax,eax
1001bf12:	inc    eax
1001bf13:	pop    esi
1001bf14:	ret    0x4
1001bf17:	push   ecx
1001bf18:	push   ecx
1001bf19:	test   edi,edi
1001bf1b:	jne    0x1001bf27
1001bf1d:	push   0x80004003
1001bf22:	call   0x10001f33
1001bf27:	test   esi,esi
1001bf29:	je     0x1001bf1d
1001bf2b:	push   ebx
1001bf2c:	push   ebp
1001bf2d:	push   0x0
1001bf2f:	call   DWORD PTR ds:0x100662c0
1001bf35:	mov    ebp,DWORD PTR ds:0x10066040
1001bf3b:	mov    ebx,eax
1001bf3d:	push   0x58
1001bf3f:	push   ebx
1001bf40:	call   ebp
1001bf42:	push   0x5a
1001bf44:	push   ebx
1001bf45:	mov    DWORD PTR [esp+0x10],eax
1001bf49:	call   ebp
1001bf4b:	push   ebx
1001bf4c:	push   0x0
1001bf4e:	mov    DWORD PTR [esp+0x14],eax
1001bf52:	call   DWORD PTR ds:0x10066350
1001bf58:	mov    ebx,DWORD PTR ds:0x1006614c
1001bf5e:	mov    ebp,0x9ec
1001bf63:	push   ebp
1001bf64:	push   DWORD PTR [edi]
1001bf66:	push   DWORD PTR [esp+0x10]
1001bf6a:	call   ebx
1001bf6c:	push   ebp
1001bf6d:	mov    DWORD PTR [esi],eax
1001bf6f:	push   DWORD PTR [edi+0x4]
1001bf72:	push   DWORD PTR [esp+0x14]
1001bf76:	call   ebx
1001bf78:	pop    ebp
1001bf79:	mov    DWORD PTR [esi+0x4],eax
1001bf7c:	pop    ebx
1001bf7d:	pop    ecx
1001bf7e:	pop    ecx
1001bf7f:	ret    
1001bf80:	push   ecx
1001bf81:	push   ecx
1001bf82:	test   edi,edi
1001bf84:	jne    0x1001bf90
1001bf86:	push   0x80004003
1001bf8b:	call   0x10001f33
1001bf90:	test   esi,esi
1001bf92:	je     0x1001bf86
1001bf94:	push   ebx
1001bf95:	push   ebp
1001bf96:	push   0x0
1001bf98:	call   DWORD PTR ds:0x100662c0
1001bf9e:	mov    ebp,DWORD PTR ds:0x10066040
1001bfa4:	mov    ebx,eax
1001bfa6:	push   0x58
1001bfa8:	push   ebx
1001bfa9:	call   ebp
1001bfab:	push   0x5a
1001bfad:	push   ebx
1001bfae:	mov    DWORD PTR [esp+0x10],eax
1001bfb2:	call   ebp
1001bfb4:	push   ebx
1001bfb5:	push   0x0
1001bfb7:	mov    DWORD PTR [esp+0x14],eax
1001bfbb:	call   DWORD PTR ds:0x10066350
1001bfc1:	push   DWORD PTR [esp+0x8]
1001bfc5:	mov    ebx,DWORD PTR ds:0x1006614c
1001bfcb:	push   DWORD PTR [edi]
1001bfcd:	mov    ebp,0x9ec
1001bfd2:	push   ebp
1001bfd3:	call   ebx
1001bfd5:	push   DWORD PTR [esp+0xc]
1001bfd9:	mov    DWORD PTR [esi],eax
1001bfdb:	push   DWORD PTR [edi+0x4]
1001bfde:	push   ebp
1001bfdf:	call   ebx
1001bfe1:	pop    ebp
1001bfe2:	mov    DWORD PTR [esi+0x4],eax
1001bfe5:	pop    ebx
1001bfe6:	pop    ecx
1001bfe7:	pop    ecx
1001bfe8:	ret    
1001bfe9:	push   0x20
1001bfeb:	mov    eax,0x1005f750
1001bff0:	call   0x10059b8e
1001bff5:	test   ebx,ebx
1001bff7:	mov    eax,DWORD PTR [ebp+0x8]
1001bffa:	mov    esi,ecx
1001bffc:	mov    DWORD PTR [ebp-0x2c],eax
1001bfff:	jne    0x1001c00b
1001c001:	mov    eax,0x80004003
1001c006:	jmp    0x1001c173
1001c00b:	and    DWORD PTR [ebx],0x0
1001c00e:	test   esi,esi
1001c010:	mov    DWORD PTR [ebp-0x24],0x80004005
1001c017:	mov    BYTE PTR [edi],0x0
1001c01a:	je     0x1001c171
1001c020:	movzx  eax,WORD PTR [esi]
1001c023:	test   ax,ax
1001c026:	je     0x1001c171
1001c02c:	cmp    ax,0x4d
1001c030:	je     0x1001c038
1001c032:	cmp    ax,0x6d
1001c036:	jne    0x1001c0ac
1001c038:	movzx  eax,WORD PTR [esi+0x2]
1001c03c:	cmp    ax,0x53
1001c040:	je     0x1001c048
1001c042:	cmp    ax,0x73
1001c046:	jne    0x1001c0ac
1001c048:	movzx  eax,WORD PTR [esi+0x4]
1001c04c:	cmp    ax,0x48
1001c050:	je     0x1001c058
1001c052:	cmp    ax,0x68
1001c056:	jne    0x1001c0ac
1001c058:	movzx  eax,WORD PTR [esi+0x6]
1001c05c:	cmp    ax,0x54
1001c060:	je     0x1001c068
1001c062:	cmp    ax,0x74
1001c066:	jne    0x1001c0ac
1001c068:	movzx  eax,WORD PTR [esi+0x8]
1001c06c:	cmp    ax,0x4d
1001c070:	je     0x1001c078
1001c072:	cmp    ax,0x6d
1001c076:	jne    0x1001c0ac
1001c078:	movzx  eax,WORD PTR [esi+0xa]
1001c07c:	cmp    ax,0x4c
1001c080:	je     0x1001c088
1001c082:	cmp    ax,0x6c
1001c086:	jne    0x1001c0ac
1001c088:	cmp    WORD PTR [esi+0xc],0x3a
1001c08d:	jne    0x1001c0ac
1001c08f:	push   ebx
1001c090:	push   0x1006dd70
1001c095:	push   0x1
1001c097:	push   0x0
1001c099:	push   0x10070978
1001c09e:	call   DWORD PTR ds:0x1006643c
1001c0a4:	mov    BYTE PTR [edi],0x1
1001c0a7:	jmp    0x1001c169
1001c0ac:	mov    eax,esi
1001c0ae:	call   0x1001b7b0
1001c0b3:	test   eax,eax
1001c0b5:	je     0x1001c0c8
1001c0b7:	push   ebx
1001c0b8:	push   0x1006dd70
1001c0bd:	push   0x1
1001c0bf:	push   0x0
1001c0c1:	push   0x10070988
1001c0c6:	jmp    0x1001c09e
1001c0c8:	push   esi
1001c0c9:	call   DWORD PTR ds:0x100660c4
1001c0cf:	cmp    eax,0xff
1001c0d4:	jge    0x1001c16c
1001c0da:	cmp    WORD PTR [esi],0x7b
1001c0de:	lea    eax,[ebp-0x20]
1001c0e1:	push   eax
1001c0e2:	push   esi
1001c0e3:	jne    0x1001c0ed
1001c0e5:	call   DWORD PTR ds:0x10066420
1001c0eb:	jmp    0x1001c0f3
1001c0ed:	call   DWORD PTR ds:0x10066438
1001c0f3:	xor    esi,esi
1001c0f5:	cmp    eax,esi
1001c0f7:	mov    DWORD PTR [ebp-0x24],eax
1001c0fa:	jl     0x1001c16c
1001c0fc:	push   DWORD PTR [ebp-0x2c]
1001c0ff:	call   DWORD PTR ds:0x100662ac
1001c105:	test   eax,eax
1001c107:	je     0x1001c156
1001c109:	mov    DWORD PTR [ebp-0x28],esi
1001c10c:	lea    eax,[ebp-0x28]
1001c10f:	push   eax
1001c110:	push   0x10070998
1001c115:	push   esi
1001c116:	push   0x1
1001c118:	lea    eax,[ebp-0x20]
1001c11b:	push   eax
1001c11c:	mov    DWORD PTR [ebp-0x4],esi
1001c11f:	call   DWORD PTR ds:0x1006640c
1001c125:	cmp    eax,esi
1001c127:	mov    DWORD PTR [ebp-0x24],eax
1001c12a:	jl     0x1001c143
1001c12c:	mov    eax,DWORD PTR [ebp-0x28]
1001c12f:	mov    ecx,DWORD PTR [eax]
1001c131:	push   ebx
1001c132:	push   DWORD PTR [ebp-0x2c]
1001c135:	push   0x1006dd70
1001c13a:	push   esi
1001c13b:	push   esi
1001c13c:	push   eax
1001c13d:	call   DWORD PTR [ecx+0x1c]
1001c140:	mov    DWORD PTR [ebp-0x24],eax
1001c143:	or     DWORD PTR [ebp-0x4],0xffffffff
1001c147:	mov    eax,DWORD PTR [ebp-0x28]
1001c14a:	cmp    eax,esi
1001c14c:	je     0x1001c16c
1001c14e:	mov    ecx,DWORD PTR [eax]
1001c150:	push   eax
1001c151:	call   DWORD PTR [ecx+0x8]
1001c154:	jmp    0x1001c16c
1001c156:	push   ebx
1001c157:	push   0x1006dd70
1001c15c:	push   0x1
1001c15e:	push   esi
1001c15f:	lea    eax,[ebp-0x20]
1001c162:	push   eax
1001c163:	call   DWORD PTR ds:0x1006643c
1001c169:	mov    DWORD PTR [ebp-0x24],eax
1001c16c:	mov    eax,DWORD PTR [ebp-0x24]
1001c16f:	jmp    0x1001c173
1001c171:	xor    eax,eax
1001c173:	call   0x10059c11
1001c178:	ret    
1001c179:	xor    eax,eax
1001c17b:	ret    0x18
1001c17e:	push   ebx
1001c17f:	mov    ebx,DWORD PTR [esp+0xc]
1001c183:	xor    ecx,ecx
1001c185:	cmp    ebx,ecx
1001c187:	push   esi
1001c188:	push   edi
1001c189:	jne    0x1001c192
1001c18b:	mov    eax,0x80004003
1001c190:	jmp    0x1001c1b4
1001c192:	mov    edi,DWORD PTR [esp+0x10]
1001c196:	cmp    DWORD PTR [edi-0x20],ecx
1001c199:	jne    0x1001c1ad
1001c19b:	push   ecx
1001c19c:	mov    eax,esp
1001c19e:	mov    DWORD PTR [eax],ecx
1001c1a0:	push   ecx
1001c1a1:	mov    eax,esp
1001c1a3:	lea    esi,[edi-0x24]
1001c1a6:	mov    DWORD PTR [eax],ecx
1001c1a8:	call   0x10020147
1001c1ad:	mov    eax,DWORD PTR [edi-0x20]
1001c1b0:	mov    DWORD PTR [ebx],eax
1001c1b2:	xor    eax,eax
1001c1b4:	pop    edi
1001c1b5:	pop    esi
1001c1b6:	pop    ebx
1001c1b7:	ret    0x8
1001c1ba:	mov    eax,0x800401a1
1001c1bf:	ret    0x8
1001c1c2:	push   esi
1001c1c3:	mov    esi,DWORD PTR [esp+0x8]
1001c1c7:	push   edi
1001c1c8:	mov    edi,DWORD PTR [esp+0x10]
1001c1cc:	add    esi,0x8
1001c1cf:	cmp    DWORD PTR [esi],edi
1001c1d1:	je     0x1001c1d8
1001c1d3:	call   0x1000777b
1001c1d8:	pop    edi
1001c1d9:	xor    eax,eax
1001c1db:	pop    esi
1001c1dc:	ret    0xc
1001c1df:	xor    eax,eax
1001c1e1:	ret    0xc
1001c1e4:	xor    eax,eax
1001c1e6:	ret    0x10
1001c1e9:	xor    eax,eax
1001c1eb:	inc    eax
1001c1ec:	ret    0xc
1001c1ef:	push   esi
1001c1f0:	push   edi
1001c1f1:	mov    edi,DWORD PTR [esp+0xc]
1001c1f5:	xor    ecx,ecx
1001c1f7:	cmp    DWORD PTR [edi-0x20],ecx
1001c1fa:	jne    0x1001c20e
1001c1fc:	push   ecx
1001c1fd:	mov    eax,esp
1001c1ff:	mov    DWORD PTR [eax],ecx
1001c201:	push   ecx
1001c202:	mov    eax,esp
1001c204:	lea    esi,[edi-0x24]
1001c207:	mov    DWORD PTR [eax],ecx
1001c209:	call   0x10020199
1001c20e:	mov    eax,DWORD PTR [edi-0x20]
1001c211:	mov    ecx,DWORD PTR [esp+0x10]
1001c215:	pop    edi
1001c216:	mov    DWORD PTR [ecx],eax
1001c218:	xor    eax,eax
1001c21a:	pop    esi
1001c21b:	ret    0x8
1001c21e:	xor    eax,eax
1001c220:	ret    0x8
1001c223:	mov    eax,ds:0x1006633c
1001c228:	push   edi
1001c229:	xor    edi,edi
1001c22b:	mov    DWORD PTR [esi+0x50],edi
1001c22e:	mov    DWORD PTR [esi+0x4],edi
1001c231:	mov    DWORD PTR [esi+0x14],edi
1001c234:	mov    DWORD PTR [esi+0x20],eax
1001c237:	mov    DWORD PTR [esi+0x18],edi
1001c23a:	mov    DWORD PTR [esi+0x1c],edi
1001c23d:	mov    DWORD PTR [esi+0x3c],edi
1001c240:	mov    DWORD PTR [esi+0x54],edi
1001c243:	mov    DWORD PTR [esi+0x60],edi
1001c246:	mov    DWORD PTR [esi+0x64],edi
1001c249:	mov    DWORD PTR [esi+0x68],edi
1001c24c:	mov    DWORD PTR [esi+0x6c],edi
1001c24f:	mov    DWORD PTR [esi+0x70],edi
1001c252:	mov    DWORD PTR [esi+0x74],edi
1001c255:	mov    DWORD PTR [esi+0x78],edi
1001c258:	mov    DWORD PTR [esi+0x7c],edi
1001c25b:	mov    DWORD PTR [esi+0xd8],edi
1001c261:	mov    DWORD PTR [esi+0xdc],edi
1001c267:	mov    DWORD PTR [esi+0xe8],edi
1001c26d:	mov    eax,DWORD PTR [esi+0xc8]
1001c273:	and    DWORD PTR [esi+0x98],0xffffffc0
1001c27a:	and    eax,0xfffffffb
1001c27d:	or     eax,0x3
1001c280:	push   0x8
1001c282:	mov    DWORD PTR [esi+0xc8],eax
1001c288:	mov    DWORD PTR [esi+0xcc],edi
1001c28e:	call   DWORD PTR ds:0x10066318
1001c294:	and    DWORD PTR [esi+0x98],0xffffffbf
1001c29b:	mov    DWORD PTR [esi+0xd0],eax
1001c2a1:	mov    eax,DWORD PTR [esi+0xc8]
1001c2a7:	and    eax,0xffffffaf
1001c2aa:	or     eax,0x28
1001c2ad:	mov    DWORD PTR [esi+0xe4],edi
1001c2b3:	mov    DWORD PTR [esi+0xc8],eax
1001c2b9:	mov    DWORD PTR [esi+0x58],edi
1001c2bc:	mov    DWORD PTR [esi+0xc4],edi
1001c2c2:	mov    DWORD PTR [esi+0xd4],0x400
1001c2cc:	mov    DWORD PTR [esi+0x94],0xcdcdcdcd
1001c2d6:	mov    DWORD PTR [esi+0xe0],0x4
1001c2e0:	mov    BYTE PTR [esi+0x5c],0x1
1001c2e4:	mov    eax,esi
1001c2e6:	pop    edi
1001c2e7:	ret    
1001c2e8:	push   esi
1001c2e9:	mov    esi,eax
1001c2eb:	push   DWORD PTR [esi+0xe8]
1001c2f1:	call   DWORD PTR ds:0x100662b4
1001c2f7:	mov    eax,DWORD PTR [esi+0xdc]
1001c2fd:	test   eax,eax
1001c2ff:	je     0x1001c307
1001c301:	mov    ecx,DWORD PTR [eax]
1001c303:	push   eax
1001c304:	call   DWORD PTR [ecx+0x8]
1001c307:	mov    eax,DWORD PTR [esi+0xd8]
1001c30d:	test   eax,eax
1001c30f:	je     0x1001c317
1001c311:	mov    ecx,DWORD PTR [eax]
1001c313:	push   eax
1001c314:	call   DWORD PTR [ecx+0x8]
1001c317:	mov    eax,DWORD PTR [esi+0x7c]
1001c31a:	test   eax,eax
1001c31c:	je     0x1001c324
1001c31e:	mov    ecx,DWORD PTR [eax]
1001c320:	push   eax
1001c321:	call   DWORD PTR [ecx+0x8]
1001c324:	mov    eax,DWORD PTR [esi+0x78]
1001c327:	test   eax,eax
1001c329:	je     0x1001c331
1001c32b:	mov    ecx,DWORD PTR [eax]
1001c32d:	push   eax
1001c32e:	call   DWORD PTR [ecx+0x8]
1001c331:	mov    eax,DWORD PTR [esi+0x74]
1001c334:	test   eax,eax
1001c336:	je     0x1001c33e
1001c338:	mov    ecx,DWORD PTR [eax]
1001c33a:	push   eax
1001c33b:	call   DWORD PTR [ecx+0x8]
1001c33e:	mov    eax,DWORD PTR [esi+0x70]
1001c341:	test   eax,eax
1001c343:	je     0x1001c34b
1001c345:	mov    ecx,DWORD PTR [eax]
1001c347:	push   eax
1001c348:	call   DWORD PTR [ecx+0x8]
1001c34b:	mov    eax,DWORD PTR [esi+0x6c]
1001c34e:	test   eax,eax
1001c350:	je     0x1001c358
1001c352:	mov    ecx,DWORD PTR [eax]
1001c354:	push   eax
1001c355:	call   DWORD PTR [ecx+0x8]
1001c358:	mov    eax,DWORD PTR [esi+0x68]
1001c35b:	test   eax,eax
1001c35d:	je     0x1001c365
1001c35f:	mov    ecx,DWORD PTR [eax]
1001c361:	push   eax
1001c362:	call   DWORD PTR [ecx+0x8]
1001c365:	mov    eax,DWORD PTR [esi+0x64]
1001c368:	test   eax,eax
1001c36a:	je     0x1001c372
1001c36c:	mov    ecx,DWORD PTR [eax]
1001c36e:	push   eax
1001c36f:	call   DWORD PTR [ecx+0x8]
1001c372:	mov    eax,DWORD PTR [esi+0x60]
1001c375:	test   eax,eax
1001c377:	je     0x1001c37f
1001c379:	mov    ecx,DWORD PTR [eax]
1001c37b:	push   eax
1001c37c:	call   DWORD PTR [ecx+0x8]
1001c37f:	mov    eax,DWORD PTR [esi+0x54]
1001c382:	test   eax,eax
1001c384:	je     0x1001c38c
1001c386:	mov    ecx,DWORD PTR [eax]
1001c388:	push   eax
1001c389:	call   DWORD PTR [ecx+0x8]
1001c38c:	mov    eax,DWORD PTR [esi+0x3c]
1001c38f:	test   eax,eax
1001c391:	je     0x1001c399
1001c393:	mov    ecx,DWORD PTR [eax]
1001c395:	push   eax
1001c396:	call   DWORD PTR [ecx+0x8]
1001c399:	mov    esi,DWORD PTR [esi+0x14]
1001c39c:	test   esi,esi
1001c39e:	je     0x1001c3a6
1001c3a0:	push   esi
1001c3a1:	call   0x100571de
1001c3a6:	pop    esi
1001c3a7:	ret    
1001c3a8:	mov    eax,DWORD PTR [ecx]
1001c3aa:	call   DWORD PTR [eax+0x10]
1001c3ad:	mov    ecx,DWORD PTR [eax]
1001c3af:	push   eax
1001c3b0:	call   DWORD PTR [ecx+0x8]
1001c3b3:	ret    0x4
1001c3b6:	push   ebp
1001c3b7:	mov    ebp,esp
1001c3b9:	and    esp,0xfffffff8
1001c3bc:	sub    esp,0xc
1001c3bf:	push   ebx
1001c3c0:	push   esi
1001c3c1:	push   edi
1001c3c2:	mov    edi,ecx
1001c3c4:	xor    ecx,ecx
1001c3c6:	cmp    DWORD PTR [ebp+0x1c],ecx
1001c3c9:	jne    0x1001c7db
1001c3cf:	mov    eax,DWORD PTR [ebp+0xc]
1001c3d2:	cmp    eax,0x14
1001c3d5:	jne    0x1001c3f7
1001c3d7:	xor    esi,esi
1001c3d9:	inc    esi
1001c3da:	cmp    DWORD PTR [edi+0x70],ecx
1001c3dd:	mov    eax,esi
1001c3df:	jne    0x1001c3e3
1001c3e1:	xor    eax,eax
1001c3e3:	cmp    eax,ecx
1001c3e5:	mov    ebx,DWORD PTR [ebp+0x18]
1001c3e8:	mov    DWORD PTR [ebx],esi
1001c3ea:	je     0x1001c475
1001c3f0:	mov    eax,esi
1001c3f2:	jmp    0x1001c7dd
1001c3f7:	cmp    eax,0xf
1001c3fa:	jne    0x1001c428
1001c3fc:	lea    eax,[esp+0xc]
1001c400:	push   eax
1001c401:	mov    esi,edi
1001c403:	mov    DWORD PTR [esp+0x10],0x1
1001c40b:	call   0x1001cbf2
1001c410:	cmp    DWORD PTR [esp+0xc],0x0
1001c415:	mov    ecx,DWORD PTR [ebp+0x18]
1001c418:	mov    DWORD PTR [ecx],eax
1001c41a:	je     0x1001c5bc
1001c420:	xor    eax,eax
1001c422:	inc    eax
1001c423:	jmp    0x1001c7dd
1001c428:	cmp    eax,0x5
1001c42b:	jne    0x1001c446
1001c42d:	mov    ecx,DWORD PTR [ebp+0x14]
1001c430:	lea    eax,[esp+0xc]
1001c434:	push   eax
1001c435:	mov    ebx,edi
1001c437:	mov    DWORD PTR [esp+0x10],0x1
1001c43f:	call   0x1001cae6
1001c444:	jmp    0x1001c410
1001c446:	cmp    eax,0x21
1001c449:	jne    0x1001c567
1001c44f:	lea    eax,[esp+0xc]
1001c453:	push   eax
1001c454:	mov    ecx,edi
1001c456:	mov    DWORD PTR [esp+0x10],0x1
1001c45e:	call   0x1001c9a2
1001c463:	cmp    DWORD PTR [esp+0xc],0x0
1001c468:	mov    ecx,DWORD PTR [ebp+0x18]
1001c46b:	mov    DWORD PTR [ecx],eax
1001c46d:	jne    0x1001c420
1001c46f:	xor    esi,esi
1001c471:	mov    ebx,DWORD PTR [ebp+0x18]
1001c474:	inc    esi
1001c475:	mov    eax,DWORD PTR [edi+0x98]
1001c47b:	test   al,0x8
1001c47d:	mov    ecx,DWORD PTR [ebp+0xc]
1001c480:	je     0x1001c51b
1001c486:	lea    edx,[ecx-0x200]
1001c48c:	cmp    edx,0xd
1001c48f:	ja     0x1001c51b
1001c495:	and    al,0x10
1001c497:	neg    al
1001c499:	sbb    eax,eax
1001c49b:	and    eax,0x3
1001c49e:	mov    DWORD PTR [esp+0x14],eax
1001c4a2:	jne    0x1001c4e0
1001c4a4:	mov    eax,DWORD PTR [edi+0x70]
1001c4a7:	test   eax,eax
1001c4a9:	je     0x1001c51b
1001c4ab:	movsx  ecx,WORD PTR [ebp+0x14]
1001c4af:	mov    DWORD PTR [esp+0xc],ecx
1001c4b3:	mov    ecx,DWORD PTR [ebp+0x14]
1001c4b6:	shr    ecx,0x10
1001c4b9:	movsx  ecx,cx
1001c4bc:	lea    edx,[esp+0x14]
1001c4c0:	push   edx
1001c4c1:	push   0x0
1001c4c3:	mov    DWORD PTR [esp+0x18],ecx
1001c4c7:	push   DWORD PTR [esp+0x18]
1001c4cb:	mov    ecx,DWORD PTR [eax]
1001c4cd:	push   DWORD PTR [esp+0x18]
1001c4d1:	lea    edx,[edi+0xb4]
1001c4d7:	push   edx
1001c4d8:	push   esi
1001c4d9:	push   eax
1001c4da:	call   DWORD PTR [ecx+0x30]
1001c4dd:	mov    ecx,DWORD PTR [ebp+0xc]
1001c4e0:	cmp    DWORD PTR [esp+0x14],0x3
1001c4e5:	jne    0x1001c51b
1001c4e7:	mov    eax,0x200
1001c4ec:	cmp    ecx,eax
1001c4ee:	jne    0x1001c5c5
1001c4f4:	lea    ecx,[esp+0xc]
1001c4f8:	push   ecx
1001c4f9:	push   DWORD PTR [ebp+0x14]
1001c4fc:	push   DWORD PTR [ebp+0x10]
1001c4ff:	push   eax
1001c500:	mov    ecx,edi
1001c502:	mov    DWORD PTR [esp+0x1c],esi
1001c506:	call   0x1001cbb5
1001c50b:	cmp    DWORD PTR [esp+0xc],0x0
1001c510:	mov    DWORD PTR [ebx],eax
1001c512:	jne    0x1001c3f0
1001c518:	mov    ecx,DWORD PTR [ebp+0xc]
1001c51b:	mov    eax,DWORD PTR [edi+0x98]
1001c521:	mov    edx,eax
1001c523:	shr    edx,0x2
1001c526:	and    edx,eax
1001c528:	test   dl,0x8
1001c52b:	je     0x1001c732
1001c531:	mov    eax,0x100
1001c536:	cmp    ecx,eax
1001c538:	jne    0x1001c642
1001c53e:	lea    ecx,[esp+0xc]
1001c542:	push   ecx
1001c543:	push   DWORD PTR [ebp+0x14]
1001c546:	push   DWORD PTR [ebp+0x10]
1001c549:	push   eax
1001c54a:	mov    ecx,edi
1001c54c:	mov    DWORD PTR [esp+0x1c],esi
1001c550:	call   0x1001cb73
1001c555:	cmp    DWORD PTR [esp+0xc],0x0
1001c55a:	mov    DWORD PTR [ebx],eax
1001c55c:	je     0x1001c762
1001c562:	jmp    0x1001c3f0
1001c567:	cmp    eax,0x7
1001c56a:	jne    0x1001c59e
1001c56c:	lea    eax,[edi+0x98]
1001c572:	or     DWORD PTR [eax],0x20
1001c575:	test   BYTE PTR [eax],0x40
1001c578:	mov    DWORD PTR [esp+0xc],0x1
1001c580:	jne    0x1001c593
1001c582:	lea    eax,[esp+0xc]
1001c586:	push   eax
1001c587:	mov    esi,edi
1001c589:	call   0x1001ca3c
1001c58e:	jmp    0x1001c463
1001c593:	mov    DWORD PTR [esp+0xc],ecx
1001c597:	xor    eax,eax
1001c599:	jmp    0x1001c463
1001c59e:	xor    esi,esi
1001c5a0:	cmp    eax,0x8
1001c5a3:	jne    0x1001c471
1001c5a9:	mov    eax,DWORD PTR [ebp+0x18]
1001c5ac:	and    DWORD PTR [edi+0x98],0xffffffdf
1001c5b3:	mov    DWORD PTR [eax],ecx
1001c5b5:	mov    ebx,eax
1001c5b7:	jmp    0x1001c474
1001c5bc:	mov    ebx,ecx
1001c5be:	xor    esi,esi
1001c5c0:	jmp    0x1001c474
1001c5c5:	mov    eax,0x202
1001c5ca:	cmp    ecx,eax
1001c5cc:	je     0x1001c4f4
1001c5d2:	add    eax,0x3
1001c5d5:	cmp    ecx,eax
1001c5d7:	je     0x1001c4f4
1001c5dd:	mov    eax,0x208
1001c5e2:	cmp    ecx,eax
1001c5e4:	je     0x1001c4f4
1001c5ea:	add    eax,0xfffffff9
1001c5ed:	cmp    ecx,eax
1001c5ef:	je     0x1001c4f4
1001c5f5:	mov    eax,0x204
1001c5fa:	cmp    ecx,eax
1001c5fc:	je     0x1001c4f4
1001c602:	add    eax,0x3
1001c605:	cmp    ecx,eax
1001c607:	je     0x1001c4f4
1001c60d:	mov    eax,0x203
1001c612:	cmp    ecx,eax
1001c614:	je     0x1001c4f4
1001c61a:	add    eax,0x3
1001c61d:	cmp    ecx,eax
1001c61f:	je     0x1001c4f4
1001c625:	cmp    ecx,0x209
1001c62b:	jne    0x1001c51b
1001c631:	lea    eax,[esp+0xc]
1001c635:	push   eax
1001c636:	push   DWORD PTR [ebp+0x14]
1001c639:	push   DWORD PTR [ebp+0x10]
1001c63c:	push   ecx
1001c63d:	jmp    0x1001c500
1001c642:	mov    eax,0x101
1001c647:	cmp    ecx,eax
1001c649:	je     0x1001c53e
1001c64f:	inc    eax
1001c650:	cmp    ecx,eax
1001c652:	je     0x1001c53e
1001c658:	mov    eax,0x103
1001c65d:	cmp    ecx,eax
1001c65f:	je     0x1001c53e
1001c665:	inc    eax
1001c666:	cmp    ecx,eax
1001c668:	je     0x1001c53e
1001c66e:	mov    eax,0x105
1001c673:	cmp    ecx,eax
1001c675:	je     0x1001c53e
1001c67b:	add    eax,0x2
1001c67e:	cmp    ecx,eax
1001c680:	je     0x1001c53e
1001c686:	cmp    ecx,0x53
1001c689:	jne    0x1001c69c
1001c68b:	lea    eax,[esp+0xc]
1001c68f:	push   eax
1001c690:	push   DWORD PTR [ebp+0x14]
1001c693:	push   DWORD PTR [ebp+0x10]
1001c696:	push   ecx
1001c697:	jmp    0x1001c54a
1001c69c:	cmp    ecx,0x1f
1001c69f:	jne    0x1001c6b2
1001c6a1:	lea    eax,[esp+0xc]
1001c6a5:	push   eax
1001c6a6:	push   DWORD PTR [ebp+0x14]
1001c6a9:	push   DWORD PTR [ebp+0x10]
1001c6ac:	push   ecx
1001c6ad:	jmp    0x1001c54a
1001c6b2:	mov    eax,0x286
1001c6b7:	cmp    ecx,eax
1001c6b9:	jne    0x1001c6e0
1001c6bb:	lea    ecx,[esp+0xc]
1001c6bf:	push   ecx
1001c6c0:	push   DWORD PTR [ebp+0x14]
1001c6c3:	mov    ecx,edi
1001c6c5:	push   DWORD PTR [ebp+0x10]
1001c6c8:	mov    DWORD PTR [esp+0x18],esi
1001c6cc:	push   eax
1001c6cd:	call   0x1001cb73
1001c6d2:	cmp    DWORD PTR [esp+0xc],0x0
1001c6d7:	mov    DWORD PTR [ebx],eax
1001c6d9:	je     0x1001c709
1001c6db:	jmp    0x1001c3f0
1001c6e0:	cmp    ecx,0x209
1001c6e6:	jne    0x1001c6f9
1001c6e8:	lea    eax,[esp+0xc]
1001c6ec:	push   eax
1001c6ed:	push   DWORD PTR [ebp+0x14]
1001c6f0:	push   DWORD PTR [ebp+0x10]
1001c6f3:	push   ecx
1001c6f4:	jmp    0x1001c54a
1001c6f9:	cmp    ecx,0x281
1001c6ff:	jb     0x1001c732
1001c701:	cmp    ecx,0x291
1001c707:	ja     0x1001c732
1001c709:	lea    eax,[esp+0xc]
1001c70d:	push   eax
1001c70e:	push   DWORD PTR [ebp+0x14]
1001c711:	mov    ecx,edi
1001c713:	push   DWORD PTR [ebp+0x10]
1001c716:	mov    DWORD PTR [esp+0x18],esi
1001c71a:	push   DWORD PTR [ebp+0xc]
1001c71d:	call   0x1001cb73
1001c722:	cmp    DWORD PTR [esp+0xc],0x0
1001c727:	mov    DWORD PTR [ebx],eax
1001c729:	jne    0x1001c3f0
1001c72f:	mov    ecx,DWORD PTR [ebp+0xc]
1001c732:	cmp    ecx,0x2
1001c735:	jne    0x1001c762
1001c737:	mov    eax,DWORD PTR [edi]
1001c739:	mov    ecx,edi
1001c73b:	call   DWORD PTR [eax+0x10]
1001c73e:	mov    ecx,DWORD PTR [eax]
1001c740:	push   eax
1001c741:	call   DWORD PTR [ecx+0x4]
1001c744:	push   DWORD PTR [ebp+0x14]
1001c747:	push   DWORD PTR [ebp+0x10]
1001c74a:	push   0x2
1001c74c:	push   DWORD PTR [edi+0x4]
1001c74f:	push   DWORD PTR [edi+0x20]
1001c752:	call   DWORD PTR ds:0x10066338
1001c758:	mov    ecx,edi
1001c75a:	call   0x1001c858
1001c75f:	and    DWORD PTR [ebx],0x0
1001c762:	test   BYTE PTR [edi+0xc8],0x8
1001c769:	je     0x1001c792
1001c76b:	lea    eax,[esp+0xc]
1001c76f:	push   eax
1001c770:	push   DWORD PTR [ebp+0x10]
1001c773:	mov    eax,DWORD PTR [ebp+0xc]
1001c776:	mov    DWORD PTR [esp+0x14],esi
1001c77a:	mov    esi,DWORD PTR [ebp+0x14]
1001c77d:	call   0x1001e931
1001c782:	cmp    DWORD PTR [esp+0xc],0x0
1001c787:	mov    DWORD PTR [ebx],eax
1001c789:	jne    0x1001c420
1001c78f:	xor    esi,esi
1001c791:	inc    esi
1001c792:	mov    eax,DWORD PTR [ebp+0xc]
1001c795:	cmp    eax,DWORD PTR ds:0x10080fd8
1001c79b:	jne    0x1001c7b3
1001c79d:	mov    eax,DWORD PTR [edi]
1001c79f:	mov    ecx,edi
1001c7a1:	call   DWORD PTR [eax+0x10]
1001c7a4:	mov    edi,eax
1001c7a6:	mov    eax,DWORD PTR [edi]
1001c7a8:	push   edi
1001c7a9:	call   DWORD PTR [eax+0x4]
1001c7ac:	mov    DWORD PTR [ebx],edi
1001c7ae:	jmp    0x1001c3f0
1001c7b3:	cmp    eax,DWORD PTR ds:0x10080fdc
1001c7b9:	jne    0x1001c7c4
1001c7bb:	mov    edi,DWORD PTR [edi+0x60]
1001c7be:	test   edi,edi
1001c7c0:	je     0x1001c7ac
1001c7c2:	jmp    0x1001c7a6
1001c7c4:	cmp    eax,0x37f
1001c7c9:	jne    0x1001c7db
1001c7cb:	push   DWORD PTR [ebp+0x14]
1001c7ce:	push   edi
1001c7cf:	call   0x1001c7e6
1001c7d4:	mov    DWORD PTR [ebx],eax
1001c7d6:	jmp    0x1001c3f0
1001c7db:	xor    eax,eax
1001c7dd:	pop    edi
1001c7de:	pop    esi
1001c7df:	pop    ebx
1001c7e0:	mov    esp,ebp
1001c7e2:	pop    ebp
1001c7e3:	ret    0x18
1001c7e6:	push   0x0
1001c7e8:	mov    eax,0x1005f72d
1001c7ed:	call   0x10059b25
1001c7f2:	mov    eax,DWORD PTR [ebp+0x8]
1001c7f5:	mov    eax,DWORD PTR [eax+0x60]
1001c7f8:	xor    ecx,ecx
1001c7fa:	test   eax,eax
1001c7fc:	mov    DWORD PTR [ebp+0x8],ecx
1001c7ff:	je     0x1001c812
1001c801:	mov    ecx,DWORD PTR [eax]
1001c803:	lea    edx,[ebp+0x8]
1001c806:	push   edx
1001c807:	push   0x100709a8
1001c80c:	push   eax
1001c80d:	call   DWORD PTR [ecx]
1001c80f:	mov    ecx,DWORD PTR [ebp+0x8]
1001c812:	and    DWORD PTR [ebp-0x4],0x0
1001c816:	test   ecx,ecx
1001c818:	je     0x1001c840
1001c81a:	push   DWORD PTR [ebp+0xc]
1001c81d:	mov    eax,DWORD PTR [ecx]
1001c81f:	push   ecx
1001c820:	call   DWORD PTR [eax+0x14]
1001c823:	test   eax,eax
1001c825:	jne    0x1001c83d
1001c827:	or     DWORD PTR [ebp-0x4],0xffffffff
1001c82b:	mov    eax,DWORD PTR [ebp+0x8]
1001c82e:	test   eax,eax
1001c830:	je     0x1001c838
1001c832:	mov    ecx,DWORD PTR [eax]
1001c834:	push   eax
1001c835:	call   DWORD PTR [ecx+0x8]
1001c838:	xor    eax,eax
1001c83a:	inc    eax
1001c83b:	jmp    0x1001c850
1001c83d:	mov    ecx,DWORD PTR [ebp+0x8]
1001c840:	or     DWORD PTR [ebp-0x4],0xffffffff
1001c844:	test   ecx,ecx
1001c846:	je     0x1001c84e
1001c848:	mov    eax,DWORD PTR [ecx]
1001c84a:	push   ecx
1001c84b:	call   DWORD PTR [eax+0x8]
1001c84e:	xor    eax,eax
1001c850:	call   0x10059bfd
1001c855:	ret    0x8
1001c858:	push   0x4
1001c85a:	mov    eax,0x1005f70a
1001c85f:	call   0x10059b25
1001c864:	mov    esi,ecx
1001c866:	mov    eax,DWORD PTR [esi+0x98]
1001c86c:	test   al,0x40
1001c86e:	jne    0x1001c99c
1001c874:	or     eax,0x40
1001c877:	mov    DWORD PTR [esi+0x98],eax
1001c87d:	mov    eax,DWORD PTR [esi+0x70]
1001c880:	xor    edi,edi
1001c882:	cmp    eax,edi
1001c884:	je     0x1001c890
1001c886:	mov    ecx,DWORD PTR [eax]
1001c888:	push   edi
1001c889:	push   edi
1001c88a:	push   0x1
1001c88c:	push   eax
1001c88d:	call   DWORD PTR [ecx+0x1c]
1001c890:	mov    ecx,DWORD PTR [esi+0x94]
1001c896:	cmp    ecx,0xcdcdcdcd
1001c89c:	je     0x1001c8b8
1001c89e:	mov    eax,DWORD PTR [esi+0x60]
1001c8a1:	push   ecx
1001c8a2:	lea    ecx,[esi+0x80]
1001c8a8:	push   ecx
1001c8a9:	call   0x1001b865
1001c8ae:	mov    DWORD PTR [esi+0x94],0xcdcdcdcd
1001c8b8:	mov    eax,DWORD PTR [esi+0x64]
1001c8bb:	cmp    eax,edi
1001c8bd:	je     0x1001c8e0
1001c8bf:	push   DWORD PTR [esi+0x9c]
1001c8c5:	mov    ecx,DWORD PTR [eax]
1001c8c7:	push   eax
1001c8c8:	call   DWORD PTR [ecx+0x50]
1001c8cb:	mov    eax,DWORD PTR [esi+0x64]
1001c8ce:	mov    ecx,DWORD PTR [eax]
1001c8d0:	push   0x1
1001c8d2:	push   eax
1001c8d3:	call   DWORD PTR [ecx+0x18]
1001c8d6:	mov    eax,DWORD PTR [esi+0x64]
1001c8d9:	mov    ecx,DWORD PTR [eax]
1001c8db:	push   edi
1001c8dc:	push   eax
1001c8dd:	call   DWORD PTR [ecx+0xc]
1001c8e0:	mov    eax,DWORD PTR [esi+0x60]
1001c8e3:	cmp    eax,edi
1001c8e5:	je     0x1001c91a
1001c8e7:	mov    DWORD PTR [ebp-0x10],edi
1001c8ea:	lea    edx,[ebp-0x10]
1001c8ed:	push   edx
1001c8ee:	push   0x100702b0
1001c8f3:	mov    DWORD PTR [ebp-0x4],edi
1001c8f6:	mov    ecx,DWORD PTR [eax]
1001c8f8:	push   eax
1001c8f9:	call   DWORD PTR [ecx]
1001c8fb:	mov    eax,DWORD PTR [ebp-0x10]
1001c8fe:	cmp    eax,edi
1001c900:	je     0x1001c90c
1001c902:	mov    ecx,DWORD PTR [eax]
1001c904:	push   edi
1001c905:	push   eax
1001c906:	call   DWORD PTR [ecx+0xc]
1001c909:	mov    eax,DWORD PTR [ebp-0x10]
1001c90c:	or     DWORD PTR [ebp-0x4],0xffffffff
1001c910:	cmp    eax,edi
1001c912:	je     0x1001c91a
1001c914:	mov    ecx,DWORD PTR [eax]
1001c916:	push   eax
1001c917:	call   DWORD PTR [ecx+0x8]
1001c91a:	mov    eax,DWORD PTR [esi+0x70]
1001c91d:	cmp    eax,edi
1001c91f:	je     0x1001c92a
1001c921:	mov    DWORD PTR [esi+0x70],edi
1001c924:	mov    ecx,DWORD PTR [eax]
1001c926:	push   eax
1001c927:	call   DWORD PTR [ecx+0x8]
1001c92a:	mov    DWORD PTR [esi+0x90],edi
1001c930:	mov    eax,DWORD PTR [esi+0x74]
1001c933:	cmp    eax,edi
1001c935:	je     0x1001c940
1001c937:	mov    DWORD PTR [esi+0x74],edi
1001c93a:	mov    ecx,DWORD PTR [eax]
1001c93c:	push   eax
1001c93d:	call   DWORD PTR [ecx+0x8]
1001c940:	mov    eax,DWORD PTR [esi+0x64]
1001c943:	cmp    eax,edi
1001c945:	je     0x1001c950
1001c947:	mov    DWORD PTR [esi+0x64],edi
1001c94a:	mov    ecx,DWORD PTR [eax]
1001c94c:	push   eax
1001c94d:	call   DWORD PTR [ecx+0x8]
1001c950:	mov    eax,DWORD PTR [esi+0x60]
1001c953:	cmp    eax,edi
1001c955:	je     0x1001c960
1001c957:	mov    DWORD PTR [esi+0x60],edi
1001c95a:	mov    ecx,DWORD PTR [eax]
1001c95c:	push   eax
1001c95d:	call   DWORD PTR [ecx+0x8]
1001c960:	mov    eax,DWORD PTR [esi+0x6c]
1001c963:	cmp    eax,edi
1001c965:	je     0x1001c970
1001c967:	mov    DWORD PTR [esi+0x6c],edi
1001c96a:	mov    ecx,DWORD PTR [eax]
1001c96c:	push   eax
1001c96d:	call   DWORD PTR [ecx+0x8]
1001c970:	mov    eax,DWORD PTR [esi+0x68]
1001c973:	cmp    eax,edi
1001c975:	je     0x1001c980
1001c977:	mov    DWORD PTR [esi+0x68],edi
1001c97a:	mov    ecx,DWORD PTR [eax]
1001c97c:	push   eax
1001c97d:	call   DWORD PTR [ecx+0x8]
1001c980:	and    DWORD PTR [esi+0x98],0xffffffa4
1001c987:	add    esi,0xc4
1001c98d:	mov    eax,DWORD PTR [esi]
1001c98f:	cmp    eax,edi
1001c991:	je     0x1001c99c
1001c993:	push   eax
1001c994:	call   DWORD PTR ds:0x100662fc
1001c99a:	mov    DWORD PTR [esi],edi
1001c99c:	call   0x10059bfd
1001c9a1:	ret    
1001c9a2:	push   0x0
1001c9a4:	mov    eax,0x1005f72d
1001c9a9:	call   0x10059b25
1001c9ae:	mov    esi,ecx
1001c9b0:	mov    eax,DWORD PTR [ebp+0x8]
1001c9b3:	xor    edi,edi
1001c9b5:	test   WORD PTR [esi+0xa0],0x4000
1001c9be:	mov    DWORD PTR [eax],edi
1001c9c0:	je     0x1001ca1b
1001c9c2:	cmp    DWORD PTR [esi+0x64],edi
1001c9c5:	je     0x1001ca32
1001c9c7:	test   BYTE PTR [esi+0x98],0x1
1001c9ce:	jne    0x1001ca32
1001c9d0:	mov    DWORD PTR [ebp+0x8],edi
1001c9d3:	mov    DWORD PTR [ebp-0x4],edi
1001c9d6:	mov    eax,DWORD PTR [esi]
1001c9d8:	call   DWORD PTR [eax+0x10]
1001c9db:	mov    ecx,DWORD PTR [eax]
1001c9dd:	lea    edx,[ebp+0x8]
1001c9e0:	push   edx
1001c9e1:	push   0x10070310
1001c9e6:	push   eax
1001c9e7:	call   DWORD PTR [ecx]
1001c9e9:	mov    ecx,DWORD PTR [ebp+0x8]
1001c9ec:	cmp    ecx,edi
1001c9ee:	je     0x1001ca0b
1001c9f0:	mov    eax,DWORD PTR [esi+0x64]
1001c9f3:	mov    edx,DWORD PTR [eax]
1001c9f5:	lea    ebx,[esi+0xb4]
1001c9fb:	push   ebx
1001c9fc:	push   DWORD PTR [esi+0x4]
1001c9ff:	push   edi
1001ca00:	push   ecx
1001ca01:	push   edi
1001ca02:	push   0xfffffffb
1001ca04:	push   eax
1001ca05:	call   DWORD PTR [edx+0x2c]
1001ca08:	mov    ecx,DWORD PTR [ebp+0x8]
1001ca0b:	or     DWORD PTR [ebp-0x4],0xffffffff
1001ca0f:	cmp    ecx,edi
1001ca11:	je     0x1001ca32
1001ca13:	mov    eax,DWORD PTR [ecx]
1001ca15:	push   ecx
1001ca16:	call   DWORD PTR [eax+0x8]
1001ca19:	jmp    0x1001ca32
1001ca1b:	lea    eax,[esi+0x98]
1001ca21:	or     DWORD PTR [eax],0x20
1001ca24:	test   BYTE PTR [eax],0x40
1001ca27:	jne    0x1001ca32
1001ca29:	lea    eax,[ebp+0x8]
1001ca2c:	push   eax
1001ca2d:	call   0x1001ca3c
1001ca32:	xor    eax,eax
1001ca34:	call   0x10059bfd
1001ca39:	ret    0x4
1001ca3c:	push   0x4
1001ca3e:	mov    eax,0x1005f70a
1001ca43:	call   0x10059b25
1001ca48:	xor    edi,edi
1001ca4a:	cmp    DWORD PTR [esi+0x64],edi
1001ca4d:	je     0x1001caa3
1001ca4f:	test   BYTE PTR [esi+0x98],0x2
1001ca56:	jne    0x1001caa3
1001ca58:	mov    DWORD PTR [ebp-0x10],edi
1001ca5b:	mov    DWORD PTR [ebp-0x4],edi
1001ca5e:	mov    eax,DWORD PTR [esi]
1001ca60:	mov    ecx,esi
1001ca62:	call   DWORD PTR [eax+0x10]
1001ca65:	mov    ecx,DWORD PTR [eax]
1001ca67:	lea    edx,[ebp-0x10]
1001ca6a:	push   edx
1001ca6b:	push   0x10070310
1001ca70:	push   eax
1001ca71:	call   DWORD PTR [ecx]
1001ca73:	mov    ecx,DWORD PTR [ebp-0x10]
1001ca76:	cmp    ecx,edi
1001ca78:	je     0x1001ca95
1001ca7a:	mov    eax,DWORD PTR [esi+0x64]
1001ca7d:	mov    edx,DWORD PTR [eax]
1001ca7f:	lea    ebx,[esi+0xb4]
1001ca85:	push   ebx
1001ca86:	push   DWORD PTR [esi+0x4]
1001ca89:	push   edi
1001ca8a:	push   ecx
1001ca8b:	push   edi
1001ca8c:	push   0xfffffffc
1001ca8e:	push   eax
1001ca8f:	call   DWORD PTR [edx+0x2c]
1001ca92:	mov    ecx,DWORD PTR [ebp-0x10]
1001ca95:	or     DWORD PTR [ebp-0x4],0xffffffff
1001ca99:	cmp    ecx,edi
1001ca9b:	je     0x1001caa3
1001ca9d:	mov    eax,DWORD PTR [ecx]
1001ca9f:	push   ecx
1001caa0:	call   DWORD PTR [eax+0x8]
1001caa3:	test   BYTE PTR [esi+0x98],0x8
1001caaa:	je     0x1001cab1
1001caac:	push   DWORD PTR [esi+0x4]
1001caaf:	jmp    0x1001cad1
1001cab1:	call   DWORD PTR ds:0x100662e4
1001cab7:	push   eax
1001cab8:	push   DWORD PTR [esi+0x4]
1001cabb:	call   DWORD PTR ds:0x100662ec
1001cac1:	test   eax,eax
1001cac3:	jne    0x1001cad7
1001cac5:	push   0x5
1001cac7:	push   DWORD PTR [esi+0x4]
1001caca:	call   DWORD PTR ds:0x10066340
1001cad0:	push   eax
1001cad1:	call   DWORD PTR ds:0x100662cc
1001cad7:	mov    eax,DWORD PTR [ebp+0x8]
1001cada:	mov    DWORD PTR [eax],edi
1001cadc:	xor    eax,eax
1001cade:	call   0x10059bfd
1001cae3:	ret    0x4
1001cae6:	mov    edx,DWORD PTR [ebx+0xb4]
1001caec:	movsx  eax,cx
1001caef:	shr    ecx,0x10
1001caf2:	push   esi
1001caf3:	mov    esi,DWORD PTR [ebx+0xb8]
1001caf9:	movsx  ecx,cx
1001cafc:	add    ecx,esi
1001cafe:	add    eax,edx
1001cb00:	push   edi
1001cb01:	mov    DWORD PTR [ebx+0xbc],eax
1001cb07:	mov    DWORD PTR [ebx+0xc0],ecx
1001cb0d:	sub    ecx,esi
1001cb0f:	lea    edi,[ebx+0xac]
1001cb15:	sub    eax,edx
1001cb17:	lea    esi,[ebx+0xa4]
1001cb1d:	mov    DWORD PTR [edi],eax
1001cb1f:	mov    DWORD PTR [ebx+0xb0],ecx
1001cb25:	call   0x1001bf80
1001cb2a:	mov    eax,DWORD PTR [ebx+0x64]
1001cb2d:	test   eax,eax
1001cb2f:	je     0x1001cb3a
1001cb31:	mov    ecx,DWORD PTR [eax]
1001cb33:	push   esi
1001cb34:	push   0x1
1001cb36:	push   eax
1001cb37:	call   DWORD PTR [ecx+0x44]
1001cb3a:	mov    eax,DWORD PTR [ebx+0x74]
1001cb3d:	test   eax,eax
1001cb3f:	pop    edi
1001cb40:	pop    esi
1001cb41:	je     0x1001cb51
1001cb43:	mov    edx,DWORD PTR [eax]
1001cb45:	lea    ecx,[ebx+0xb4]
1001cb4b:	push   ecx
1001cb4c:	push   ecx
1001cb4d:	push   eax
1001cb4e:	call   DWORD PTR [edx+0x1c]
1001cb51:	test   BYTE PTR [ebx+0x98],0x8
1001cb58:	je     0x1001cb67
1001cb5a:	push   0x1
1001cb5c:	lea    eax,[ebx+0x2c]
1001cb5f:	mov    ecx,DWORD PTR [eax]
1001cb61:	push   0x0
1001cb63:	push   eax
1001cb64:	call   DWORD PTR [ecx+0x64]
1001cb67:	mov    eax,DWORD PTR [esp+0x4]
1001cb6b:	and    DWORD PTR [eax],0x0
1001cb6e:	xor    eax,eax
1001cb70:	ret    0x4
1001cb73:	push   ebp
1001cb74:	mov    ebp,esp
1001cb76:	push   ecx
1001cb77:	mov    eax,DWORD PTR [ecx+0x98]
1001cb7d:	and    DWORD PTR [ebp-0x4],0x0
1001cb81:	test   al,0x1
1001cb83:	je     0x1001cba8
1001cb85:	test   al,0x8
1001cb87:	je     0x1001cba8
1001cb89:	mov    eax,DWORD PTR [ecx+0x74]
1001cb8c:	test   eax,eax
1001cb8e:	je     0x1001cba8
1001cb90:	mov    ecx,DWORD PTR [eax]
1001cb92:	lea    edx,[ebp-0x4]
1001cb95:	push   edx
1001cb96:	push   DWORD PTR [ebp+0x10]
1001cb99:	push   DWORD PTR [ebp+0xc]
1001cb9c:	push   DWORD PTR [ebp+0x8]
1001cb9f:	push   eax
1001cba0:	call   DWORD PTR [ecx+0x24]
1001cba3:	cmp    eax,0x1
1001cba6:	jne    0x1001cbae
1001cba8:	mov    eax,DWORD PTR [ebp+0x14]
1001cbab:	and    DWORD PTR [eax],0x0
1001cbae:	mov    eax,DWORD PTR [ebp-0x4]
1001cbb1:	leave  
1001cbb2:	ret    0x10
1001cbb5:	push   ebp
1001cbb6:	mov    ebp,esp
1001cbb8:	push   ecx
1001cbb9:	mov    eax,DWORD PTR [ecx+0x98]
1001cbbf:	and    DWORD PTR [ebp-0x4],0x0
1001cbc3:	test   al,0x1
1001cbc5:	je     0x1001cbe5
1001cbc7:	test   al,0x8
1001cbc9:	je     0x1001cbe5
1001cbcb:	mov    eax,DWORD PTR [ecx+0x74]
1001cbce:	test   eax,eax
1001cbd0:	je     0x1001cbe5
1001cbd2:	mov    ecx,DWORD PTR [eax]
1001cbd4:	lea    edx,[ebp-0x4]
1001cbd7:	push   edx
1001cbd8:	push   DWORD PTR [ebp+0x10]
1001cbdb:	push   DWORD PTR [ebp+0xc]
1001cbde:	push   DWORD PTR [ebp+0x8]
1001cbe1:	push   eax
1001cbe2:	call   DWORD PTR [ecx+0x24]
1001cbe5:	mov    eax,DWORD PTR [ebp+0x14]
1001cbe8:	and    DWORD PTR [eax],0x0
1001cbeb:	mov    eax,DWORD PTR [ebp-0x4]
1001cbee:	leave  
1001cbef:	ret    0x10
1001cbf2:	push   ebp
1001cbf3:	mov    ebp,esp
1001cbf5:	sub    esp,0x6c
1001cbf8:	mov    eax,ds:0x1007e030
1001cbfd:	xor    eax,ebp
1001cbff:	mov    DWORD PTR [ebp-0x8],eax
1001cc02:	mov    eax,DWORD PTR [ebp+0x8]
1001cc05:	push   ebx
1001cc06:	push   edi
1001cc07:	xor    edi,edi
1001cc09:	cmp    DWORD PTR [esi+0x70],edi
1001cc0c:	jne    0x1001cc6f
1001cc0e:	lea    eax,[ebp-0x4c]
1001cc11:	push   eax
1001cc12:	push   DWORD PTR [esi+0x4]
1001cc15:	call   DWORD PTR ds:0x100662c8
1001cc1b:	cmp    eax,edi
1001cc1d:	mov    DWORD PTR [ebp-0x50],eax
1001cc20:	je     0x1001cd54
1001cc26:	lea    eax,[ebp-0x60]
1001cc29:	push   eax
1001cc2a:	push   DWORD PTR [esi+0x4]
1001cc2d:	call   DWORD PTR ds:0x100662d4
1001cc33:	push   DWORD PTR [esi+0xcc]
1001cc39:	call   DWORD PTR ds:0x1006602c
1001cc3f:	mov    ebx,eax
1001cc41:	cmp    ebx,edi
1001cc43:	je     0x1001cc5a
1001cc45:	push   ebx
1001cc46:	lea    eax,[ebp-0x60]
1001cc49:	push   eax
1001cc4a:	push   DWORD PTR [ebp-0x50]
1001cc4d:	call   DWORD PTR ds:0x100662f0
1001cc53:	push   ebx
1001cc54:	call   DWORD PTR ds:0x10066044
1001cc5a:	lea    eax,[ebp-0x4c]
1001cc5d:	push   eax
1001cc5e:	push   DWORD PTR [esi+0x4]
1001cc61:	call   DWORD PTR ds:0x1006630c
1001cc67:	xor    eax,eax
1001cc69:	inc    eax
1001cc6a:	jmp    0x1001cd56
1001cc6f:	test   BYTE PTR [esi+0x98],0x8
1001cc76:	je     0x1001cd52
1001cc7c:	lea    eax,[ebp-0x4c]
1001cc7f:	push   eax
1001cc80:	push   DWORD PTR [esi+0x4]
1001cc83:	call   DWORD PTR ds:0x100662c8
1001cc89:	mov    ebx,eax
1001cc8b:	cmp    ebx,edi
1001cc8d:	mov    DWORD PTR [ebp-0x64],ebx
1001cc90:	je     0x1001cd54
1001cc96:	lea    eax,[ebp-0x60]
1001cc99:	push   eax
1001cc9a:	push   DWORD PTR [esi+0x4]
1001cc9d:	call   DWORD PTR ds:0x100662d4
1001cca3:	mov    eax,DWORD PTR [ebp-0x54]
1001cca6:	sub    eax,DWORD PTR [ebp-0x5c]
1001cca9:	push   eax
1001ccaa:	mov    eax,DWORD PTR [ebp-0x58]
1001ccad:	sub    eax,DWORD PTR [ebp-0x60]
1001ccb0:	push   eax
1001ccb1:	push   ebx
1001ccb2:	call   DWORD PTR ds:0x10066034
1001ccb8:	cmp    eax,edi
1001ccba:	mov    DWORD PTR [ebp-0x50],eax
1001ccbd:	je     0x1001cc5a
1001ccbf:	push   ebx
1001ccc0:	call   DWORD PTR ds:0x1006604c
1001ccc6:	mov    ebx,eax
1001ccc8:	cmp    ebx,edi
1001ccca:	je     0x1001cd4a
1001cccc:	push   DWORD PTR [ebp-0x50]
1001cccf:	push   ebx
1001ccd0:	call   DWORD PTR ds:0x10066048
1001ccd6:	cmp    eax,edi
1001ccd8:	mov    DWORD PTR [ebp-0x6c],eax
1001ccdb:	je     0x1001cd43
1001ccdd:	push   DWORD PTR [esi+0xcc]
1001cce3:	call   DWORD PTR ds:0x1006602c
1001cce9:	cmp    eax,edi
1001cceb:	mov    DWORD PTR [ebp-0x68],eax
1001ccee:	je     0x1001cd39
1001ccf0:	push   eax
1001ccf1:	lea    eax,[ebp-0x60]
1001ccf4:	push   eax
1001ccf5:	push   ebx
1001ccf6:	call   DWORD PTR ds:0x100662f0
1001ccfc:	push   DWORD PTR [ebp-0x68]
1001ccff:	call   DWORD PTR ds:0x10066044
1001cd05:	mov    eax,DWORD PTR [esi+0x70]
1001cd08:	mov    edx,DWORD PTR [eax]
1001cd0a:	push   edi
1001cd0b:	push   edi
1001cd0c:	lea    ecx,[esi+0xb4]
1001cd12:	push   ecx
1001cd13:	push   ecx
1001cd14:	push   ebx
1001cd15:	push   edi
1001cd16:	push   edi
1001cd17:	push   edi
1001cd18:	push   0xffffffff
1001cd1a:	push   0x1
1001cd1c:	push   eax
1001cd1d:	call   DWORD PTR [edx+0xc]
1001cd20:	push   0xcc0020
1001cd25:	push   edi
1001cd26:	push   edi
1001cd27:	push   ebx
1001cd28:	push   DWORD PTR [ebp-0x54]
1001cd2b:	push   DWORD PTR [ebp-0x58]
1001cd2e:	push   edi
1001cd2f:	push   edi
1001cd30:	push   DWORD PTR [ebp-0x64]
1001cd33:	call   DWORD PTR ds:0x10066038
1001cd39:	push   DWORD PTR [ebp-0x6c]
1001cd3c:	push   ebx
1001cd3d:	call   DWORD PTR ds:0x10066048
1001cd43:	push   ebx
1001cd44:	call   DWORD PTR ds:0x1006603c
1001cd4a:	push   DWORD PTR [ebp-0x50]
1001cd4d:	jmp    0x1001cc54
1001cd52:	mov    DWORD PTR [eax],edi
1001cd54:	xor    eax,eax
1001cd56:	mov    ecx,DWORD PTR [ebp-0x8]
1001cd59:	pop    edi
1001cd5a:	xor    ecx,ebp
1001cd5c:	pop    ebx
1001cd5d:	call   0x10042f87
1001cd62:	leave  
1001cd63:	ret    0x4
1001cd66:	push   0x4
1001cd68:	mov    eax,0x1005f70a
1001cd6d:	call   0x10059b25
1001cd72:	and    DWORD PTR [ebp-0x10],0x0
1001cd76:	mov    eax,DWORD PTR [ebp+0x8]
1001cd79:	and    DWORD PTR [ebp-0x4],0x0
1001cd7d:	mov    ecx,DWORD PTR [eax]
1001cd7f:	push   0x0
1001cd81:	push   0x0
1001cd83:	push   0x1006b858
1001cd88:	lea    edx,[ebp-0x10]
1001cd8b:	push   edx
1001cd8c:	push   DWORD PTR [ebp+0x14]
1001cd8f:	push   DWORD PTR [ebp+0x10]
1001cd92:	push   DWORD PTR [ebp+0xc]
1001cd95:	push   eax
1001cd96:	call   DWORD PTR [ecx+0x28]
1001cd99:	or     DWORD PTR [ebp-0x4],0xffffffff
1001cd9d:	mov    edi,eax
1001cd9f:	mov    eax,DWORD PTR [ebp-0x10]
1001cda2:	test   eax,eax
1001cda4:	je     0x1001cdac
1001cda6:	mov    ecx,DWORD PTR [eax]
1001cda8:	push   eax
1001cda9:	call   DWORD PTR [ecx+0x8]
1001cdac:	mov    eax,edi
1001cdae:	call   0x10059bfd
1001cdb3:	ret    0x10
1001cdb6:	push   ebp
1001cdb7:	mov    ebp,esp
1001cdb9:	mov    eax,DWORD PTR [ebp+0x8]
1001cdbc:	mov    ecx,DWORD PTR [eax]
1001cdbe:	push   0x0
1001cdc0:	push   DWORD PTR [ebp+0x20]
1001cdc3:	push   DWORD PTR [ebp+0x1c]
1001cdc6:	push   DWORD PTR [ebp+0x18]
1001cdc9:	push   DWORD PTR [ebp+0x14]
1001cdcc:	push   DWORD PTR [ebp+0x10]
1001cdcf:	push   DWORD PTR [ebp+0xc]
1001cdd2:	push   eax
1001cdd3:	call   DWORD PTR [ecx+0x28]
1001cdd6:	pop    ebp
1001cdd7:	ret    0x1c
1001cdda:	push   ebx
1001cddb:	push   ebp
1001cddc:	push   esi
1001cddd:	push   edi
1001cdde:	mov    edi,DWORD PTR [esp+0x14]
1001cde2:	lea    esi,[edi-0x24]
1001cde5:	xor    ebx,ebx
1001cde7:	mov    ecx,esi
1001cde9:	inc    ebx
1001cdea:	call   0x1001c858
1001cdef:	mov    eax,DWORD PTR [edi-0x20]
1001cdf2:	test   eax,eax
1001cdf4:	mov    ebp,DWORD PTR ds:0x10066360
1001cdfa:	mov    BYTE PTR [esp+0x14],0x0
1001cdff:	je     0x1001ce18
1001ce01:	cmp    eax,DWORD PTR [esp+0x1c]
1001ce05:	je     0x1001ce18
1001ce07:	push   0x507
1001ce0c:	push   0x0
1001ce0e:	push   0x0
1001ce10:	push   eax
1001ce11:	call   ebp
1001ce13:	call   0x1001e8e4
1001ce18:	push   DWORD PTR [esp+0x1c]
1001ce1c:	call   DWORD PTR ds:0x10066320
1001ce22:	test   eax,eax
1001ce24:	je     0x1001ce74
1001ce26:	mov    ebx,DWORD PTR [esp+0x1c]
1001ce2a:	cmp    DWORD PTR [edi-0x20],ebx
1001ce2d:	je     0x1001ce39
1001ce2f:	call   0x1001e8a0
1001ce34:	mov    BYTE PTR [esp+0x14],0x1
1001ce39:	push   0x0
1001ce3b:	push   0x1
1001ce3d:	push   DWORD PTR [esp+0x20]
1001ce41:	mov    ecx,esi
1001ce43:	call   0x1001e4ad
1001ce48:	mov    ebx,eax
1001ce4a:	test   ebx,ebx
1001ce4c:	jge    0x1001ce74
1001ce4e:	mov    ecx,esi
1001ce50:	call   0x1001c858
1001ce55:	mov    edi,DWORD PTR [edi-0x20]
1001ce58:	test   edi,edi
1001ce5a:	je     0x1001ce74
1001ce5c:	push   0x507
1001ce61:	push   0x0
1001ce63:	push   0x0
1001ce65:	push   edi
1001ce66:	call   ebp
1001ce68:	cmp    BYTE PTR [esp+0x14],0x0
1001ce6d:	je     0x1001ce74
1001ce6f:	call   0x1001e8e4
1001ce74:	pop    edi
1001ce75:	pop    esi
1001ce76:	pop    ebp
1001ce77:	mov    eax,ebx
1001ce79:	pop    ebx
1001ce7a:	ret    0xc
1001ce7d:	mov    ecx,DWORD PTR [esp+0xc]
1001ce81:	test   ecx,ecx
1001ce83:	mov    eax,0x80004003
1001ce88:	je     0x1001cea9
1001ce8a:	mov    eax,DWORD PTR [esp+0x4]
1001ce8e:	mov    eax,DWORD PTR [eax+0x3c]
1001ce91:	test   eax,eax
1001ce93:	je     0x1001cea1
1001ce95:	mov    edx,DWORD PTR [eax]
1001ce97:	push   ecx
1001ce98:	push   DWORD PTR [esp+0xc]
1001ce9c:	push   eax
1001ce9d:	call   DWORD PTR [edx]
1001ce9f:	jmp    0x1001cea9
1001cea1:	and    DWORD PTR [ecx],0x0
1001cea4:	mov    eax,0x80040004
1001cea9:	ret    0xc
1001ceac:	push   esi
1001cead:	mov    esi,DWORD PTR [esp+0x8]
1001ceb1:	push   edi
1001ceb2:	mov    edi,DWORD PTR [esp+0x10]
1001ceb6:	add    esi,0x54
1001ceb9:	cmp    DWORD PTR [esi],edi
1001cebb:	je     0x1001cec2
1001cebd:	call   0x1000777b
1001cec2:	pop    edi
1001cec3:	xor    eax,eax
1001cec5:	pop    esi
1001cec6:	ret    0x8
1001cec9:	push   esi
1001ceca:	mov    esi,DWORD PTR [esp+0x8]
1001cece:	push   edi
1001cecf:	mov    edi,DWORD PTR [esp+0x10]
1001ced3:	add    esi,0x58
1001ced6:	cmp    DWORD PTR [esi],edi
1001ced8:	je     0x1001cedf
1001ceda:	call   0x1000777b
1001cedf:	pop    edi
1001cee0:	xor    eax,eax
1001cee2:	pop    esi
1001cee3:	ret    0x8
1001cee6:	push   0x4
1001cee8:	mov    eax,0x1005f70a
1001ceed:	call   0x10059b25
1001cef2:	and    DWORD PTR [ebp-0x10],0x0
1001cef6:	push   DWORD PTR [ebp+0x18]
1001cef9:	mov    eax,DWORD PTR [ebp+0x8]
1001cefc:	and    DWORD PTR [ebp-0x4],0x0
1001cf00:	mov    ecx,DWORD PTR [eax]
1001cf02:	push   0x0
1001cf04:	push   0x1006b858
1001cf09:	lea    edx,[ebp-0x10]
1001cf0c:	push   edx
1001cf0d:	push   DWORD PTR [ebp+0x14]
1001cf10:	push   DWORD PTR [ebp+0x10]
1001cf13:	push   DWORD PTR [ebp+0xc]
1001cf16:	push   eax
1001cf17:	call   DWORD PTR [ecx+0x28]
1001cf1a:	or     DWORD PTR [ebp-0x4],0xffffffff
1001cf1e:	mov    edi,eax
1001cf20:	mov    eax,DWORD PTR [ebp-0x10]
1001cf23:	test   eax,eax
1001cf25:	je     0x1001cf2d
1001cf27:	mov    ecx,DWORD PTR [eax]
1001cf29:	push   eax
1001cf2a:	call   DWORD PTR [ecx+0x8]
1001cf2d:	mov    eax,edi
1001cf2f:	call   0x10059bfd
1001cf34:	ret    0x14
1001cf37:	push   ebp
1001cf38:	mov    ebp,esp
1001cf3a:	and    esp,0xfffffff8
1001cf3d:	push   0xffffffff
1001cf3f:	push   0x100602eb
1001cf44:	mov    eax,fs:0x0
1001cf4a:	push   eax
1001cf4b:	sub    esp,0x40
1001cf4e:	push   ebx
1001cf4f:	push   esi
1001cf50:	push   edi
1001cf51:	mov    eax,ds:0x1007e030
1001cf56:	xor    eax,esp
1001cf58:	push   eax
1001cf59:	lea    eax,[esp+0x50]
1001cf5d:	mov    fs:0x0,eax
1001cf63:	mov    eax,DWORD PTR [ebp+0x18]
1001cf66:	test   eax,eax
1001cf68:	jne    0x1001cf74
1001cf6a:	mov    eax,0x80004003
1001cf6f:	jmp    0x1001d27e
1001cf74:	mov    edi,DWORD PTR [ebp+0x8]
1001cf77:	and    DWORD PTR [eax],0x0
1001cf7a:	lea    esi,[edi-0x24]
1001cf7d:	mov    ecx,esi
1001cf7f:	mov    DWORD PTR [esp+0x14],0x1
1001cf87:	mov    BYTE PTR [esp+0x13],0x0
1001cf8c:	mov    DWORD PTR [esp+0x28],esi
1001cf90:	call   0x1001c858
1001cf95:	lea    ebx,[edi-0x20]
1001cf98:	mov    eax,DWORD PTR [ebx]
1001cf9a:	test   eax,eax
1001cf9c:	mov    DWORD PTR [esp+0x24],ebx
1001cfa0:	je     0x1001cfbc
1001cfa2:	cmp    eax,DWORD PTR [ebp+0x10]
1001cfa5:	je     0x1001cfbc
1001cfa7:	push   0x507
1001cfac:	push   0x0
1001cfae:	push   0x0
1001cfb0:	push   eax
1001cfb1:	call   DWORD PTR ds:0x10066360
1001cfb7:	call   0x1001e8e4
1001cfbc:	push   DWORD PTR [ebp+0x10]
1001cfbf:	call   DWORD PTR ds:0x10066320
1001cfc5:	test   eax,eax
1001cfc7:	je     0x1001d27a
1001cfcd:	mov    eax,DWORD PTR [ebp+0x10]
1001cfd0:	cmp    DWORD PTR [ebx],eax
1001cfd2:	je     0x1001cfe4
1001cfd4:	mov    ebx,eax
1001cfd6:	call   0x1001e8a0
1001cfdb:	mov    ebx,DWORD PTR [esp+0x24]
1001cfdf:	mov    BYTE PTR [esp+0x13],0x1
1001cfe4:	cmp    DWORD PTR [edi+0xa8],0x0
1001cfeb:	jne    0x1001d009
1001cfed:	push   ebx
1001cfee:	call   0x1001be81
1001cff3:	test   eax,eax
1001cff5:	je     0x1001cffb
1001cff7:	push   0xf
1001cff9:	jmp    0x1001cffd
1001cffb:	push   0x5
1001cffd:	call   DWORD PTR ds:0x10066318
1001d003:	mov    DWORD PTR [edi+0xa8],eax
1001d009:	mov    esi,DWORD PTR [ebp+0x18]
1001d00c:	push   DWORD PTR [ebp+0x24]
1001d00f:	mov    ecx,DWORD PTR [ebp+0xc]
1001d012:	lea    edi,[esp+0x16]
1001d016:	mov    ebx,esi
1001d018:	mov    BYTE PTR [esp+0x16],0x0
1001d01d:	call   0x1001bfe9
1001d022:	xor    ebx,ebx
1001d024:	cmp    eax,ebx
1001d026:	pop    ecx
1001d027:	mov    DWORD PTR [esp+0x14],eax
1001d02b:	jl     0x1001d040
1001d02d:	push   DWORD PTR [ebp+0x14]
1001d030:	mov    ecx,DWORD PTR [esp+0x2c]
1001d034:	push   ebx
1001d035:	push   DWORD PTR [esi]
1001d037:	call   0x1001e4ad
1001d03c:	mov    DWORD PTR [esp+0x14],eax
1001d040:	cmp    DWORD PTR [esp+0x14],ebx
1001d044:	mov    edx,DWORD PTR [ebp+0x8]
1001d047:	mov    esi,DWORD PTR [ebp+0x1c]
1001d04a:	lea    ecx,[edx+0x5c]
1001d04d:	mov    edi,ecx
1001d04f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1001d050:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1001d051:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1001d052:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1001d053:	jl     0x1001d245
1001d059:	mov    esi,DWORD PTR [ebp+0x18]
1001d05c:	mov    eax,DWORD PTR [esi]
1001d05e:	cmp    eax,ebx
1001d060:	je     0x1001d074
1001d062:	cmp    DWORD PTR [ebp+0x20],ebx
1001d065:	je     0x1001d074
1001d067:	add    edx,0x70
1001d06a:	push   edx
1001d06b:	push   ecx
1001d06c:	push   DWORD PTR [ebp+0x20]
1001d06f:	call   0x1001b7f0
1001d074:	cmp    BYTE PTR [esp+0x12],bl
1001d078:	je     0x1001d237
1001d07e:	cmp    DWORD PTR [esi],ebx
1001d080:	je     0x1001d237
1001d086:	mov    edi,DWORD PTR [esp+0x24]
1001d08a:	mov    esi,DWORD PTR ds:0x10066310
1001d090:	push   0xfffffff0
1001d092:	push   DWORD PTR [edi]
1001d094:	call   esi
1001d096:	test   eax,0x300000
1001d09b:	jne    0x1001d0a9
1001d09d:	mov    eax,DWORD PTR [ebp+0x8]
1001d0a0:	or     DWORD PTR [eax+0xbc],0x8
1001d0a7:	jmp    0x1001d0ce
1001d0a9:	push   0xfffffff0
1001d0ab:	push   DWORD PTR [edi]
1001d0ad:	call   esi
1001d0af:	and    eax,0xffcfffff
1001d0b4:	push   eax
1001d0b5:	push   0xfffffff0
1001d0b7:	push   DWORD PTR [edi]
1001d0b9:	call   DWORD PTR ds:0x10066358
1001d0bf:	push   0x37
1001d0c1:	push   ebx
1001d0c2:	push   ebx
1001d0c3:	push   ebx
1001d0c4:	push   ebx
1001d0c5:	push   ebx
1001d0c6:	push   DWORD PTR [edi]
1001d0c8:	call   DWORD PTR ds:0x1006631c
1001d0ce:	mov    eax,DWORD PTR [ebp+0x18]
1001d0d1:	mov    edi,DWORD PTR [eax]
1001d0d3:	cmp    edi,ebx
1001d0d5:	mov    DWORD PTR [esp+0x1c],edi
1001d0d9:	je     0x1001d0e1
1001d0db:	mov    eax,DWORD PTR [edi]
1001d0dd:	push   edi
1001d0de:	call   DWORD PTR [eax+0x4]
1001d0e1:	mov    esi,DWORD PTR [ebp+0xc]
1001d0e4:	mov    DWORD PTR [esp+0x58],ebx
1001d0e8:	movzx  eax,WORD PTR [esi]
1001d0eb:	cmp    ax,0x4d
1001d0ef:	je     0x1001d0fb
1001d0f1:	cmp    ax,0x6d
1001d0f5:	jne    0x1001d29d
1001d0fb:	movzx  eax,WORD PTR [esi+0x2]
1001d0ff:	cmp    ax,0x53
1001d103:	je     0x1001d10f
1001d105:	cmp    ax,0x73
1001d109:	jne    0x1001d29d
1001d10f:	movzx  eax,WORD PTR [esi+0x4]
1001d113:	cmp    ax,0x48
1001d117:	je     0x1001d123
1001d119:	cmp    ax,0x68
1001d11d:	jne    0x1001d29d
1001d123:	movzx  eax,WORD PTR [esi+0x6]
1001d127:	cmp    ax,0x54
1001d12b:	je     0x1001d137
1001d12d:	cmp    ax,0x74
1001d131:	jne    0x1001d29d
1001d137:	movzx  eax,WORD PTR [esi+0x8]
1001d13b:	cmp    ax,0x4d
1001d13f:	je     0x1001d14b
1001d141:	cmp    ax,0x6d
1001d145:	jne    0x1001d29d
1001d14b:	movzx  eax,WORD PTR [esi+0xa]
1001d14f:	cmp    ax,0x4c
1001d153:	je     0x1001d15f
1001d155:	cmp    ax,0x6c
1001d159:	jne    0x1001d29d
1001d15f:	cmp    WORD PTR [esi+0xc],0x3a
1001d164:	jne    0x1001d29d
1001d16a:	push   esi
1001d16b:	call   DWORD PTR ds:0x100660c4
1001d171:	lea    edi,[eax+eax*1-0xe]
1001d175:	push   edi
1001d176:	push   0x42
1001d178:	call   DWORD PTR ds:0x10066148
1001d17e:	mov    ebx,eax
1001d180:	test   ebx,ebx
1001d182:	je     0x1001d293
1001d188:	and    DWORD PTR [esp+0x20],0x0
1001d18d:	push   ebx
1001d18e:	mov    BYTE PTR [esp+0x5c],0x1
1001d193:	call   DWORD PTR ds:0x10066144
1001d199:	push   edi
1001d19a:	add    esi,0xe
1001d19d:	push   esi
1001d19e:	push   edi
1001d19f:	push   eax
1001d1a0:	call   0x10014450
1001d1a5:	add    esp,0x10
1001d1a8:	push   ebx
1001d1a9:	call   DWORD PTR ds:0x10066154
1001d1af:	lea    eax,[esp+0x20]
1001d1b3:	push   eax
1001d1b4:	push   0x1
1001d1b6:	push   ebx
1001d1b7:	call   DWORD PTR ds:0x1006641c
1001d1bd:	test   eax,eax
1001d1bf:	mov    DWORD PTR [esp+0x14],eax
1001d1c3:	jl     0x1001d20f
1001d1c5:	and    DWORD PTR [esp+0x18],0x0
1001d1ca:	lea    edx,[esp+0x18]
1001d1ce:	push   edx
1001d1cf:	mov    BYTE PTR [esp+0x5c],0x2
1001d1d4:	mov    eax,DWORD PTR [esp+0x20]
1001d1d8:	mov    ecx,DWORD PTR [eax]
1001d1da:	push   0x10070968
1001d1df:	push   eax
1001d1e0:	call   DWORD PTR [ecx]
1001d1e2:	test   eax,eax
1001d1e4:	mov    DWORD PTR [esp+0x14],eax
1001d1e8:	jl     0x1001d1fc
1001d1ea:	mov    eax,DWORD PTR [esp+0x18]
1001d1ee:	push   DWORD PTR [esp+0x20]
1001d1f2:	mov    ecx,DWORD PTR [eax]
1001d1f4:	push   eax
1001d1f5:	call   DWORD PTR [ecx+0x14]
1001d1f8:	mov    DWORD PTR [esp+0x14],eax
1001d1fc:	mov    BYTE PTR [esp+0x58],0x1
1001d201:	mov    eax,DWORD PTR [esp+0x18]
1001d205:	test   eax,eax
1001d207:	je     0x1001d20f
1001d209:	mov    ecx,DWORD PTR [eax]
1001d20b:	push   eax
1001d20c:	call   DWORD PTR [ecx+0x8]
1001d20f:	mov    BYTE PTR [esp+0x58],0x0
1001d214:	mov    eax,DWORD PTR [esp+0x20]
1001d218:	test   eax,eax
1001d21a:	je     0x1001d222
1001d21c:	mov    ecx,DWORD PTR [eax]
1001d21e:	push   eax
1001d21f:	call   DWORD PTR [ecx+0x8]
1001d222:	mov    edi,DWORD PTR [esp+0x1c]
1001d226:	xor    ebx,ebx
1001d228:	or     DWORD PTR [esp+0x58],0xffffffff
1001d22d:	cmp    edi,ebx
1001d22f:	je     0x1001d237
1001d231:	mov    eax,DWORD PTR [edi]
1001d233:	push   edi
1001d234:	call   DWORD PTR [eax+0x8]
1001d237:	cmp    DWORD PTR [esp+0x14],ebx
1001d23b:	jl     0x1001d245
1001d23d:	mov    eax,DWORD PTR [ebp+0x8]
1001d240:	cmp    DWORD PTR [eax+0x3c],ebx
1001d243:	jne    0x1001d27a
1001d245:	mov    esi,DWORD PTR [esp+0x28]
1001d249:	mov    ecx,esi
1001d24b:	call   0x1001c858
1001d250:	mov    eax,DWORD PTR [esp+0x24]
1001d254:	mov    eax,DWORD PTR [eax]
1001d256:	cmp    eax,ebx
1001d258:	je     0x1001d27a
1001d25a:	push   0x507
1001d25f:	push   ebx
1001d260:	push   ebx
1001d261:	push   eax
1001d262:	call   DWORD PTR ds:0x10066360
1001d268:	cmp    DWORD PTR [esp+0x14],ebx
1001d26c:	jge    0x1001d27a
1001d26e:	cmp    BYTE PTR [esp+0x13],0x0
1001d273:	je     0x1001d27a
1001d275:	call   0x1001e8e4
1001d27a:	mov    eax,DWORD PTR [esp+0x14]
1001d27e:	mov    ecx,DWORD PTR [esp+0x50]
1001d282:	mov    DWORD PTR fs:0x0,ecx
1001d289:	pop    ecx
1001d28a:	pop    edi
1001d28b:	pop    esi
1001d28c:	pop    ebx
1001d28d:	mov    esp,ebp
1001d28f:	pop    ebp
1001d290:	ret    0x20
1001d293:	mov    DWORD PTR [esp+0x14],0x8007000e
1001d29b:	jmp    0x1001d222
1001d29d:	mov    DWORD PTR [esp+0x18],ebx
1001d2a1:	lea    ecx,[esp+0x18]
1001d2a5:	push   ecx
1001d2a6:	push   0x100709b8
1001d2ab:	mov    BYTE PTR [esp+0x60],0x3
1001d2b0:	mov    eax,DWORD PTR [edi]
1001d2b2:	push   edi
1001d2b3:	call   DWORD PTR [eax]
1001d2b5:	cmp    DWORD PTR [esp+0x18],ebx
1001d2b9:	je     0x1001d34d
1001d2bf:	lea    eax,[esp+0x3c]
1001d2c3:	push   eax
1001d2c4:	call   DWORD PTR ds:0x1006628c
1001d2ca:	mov    BYTE PTR [esp+0x58],0x4
1001d2cf:	mov    edi,DWORD PTR ds:0x10066294
1001d2d5:	lea    eax,[esp+0x2c]
1001d2d9:	push   eax
1001d2da:	mov    WORD PTR [esp+0x30],bx
1001d2df:	call   edi
1001d2e1:	push   esi
1001d2e2:	mov    WORD PTR [esp+0x30],0x8
1001d2e9:	call   DWORD PTR ds:0x100662b0
1001d2ef:	cmp    eax,ebx
1001d2f1:	mov    DWORD PTR [esp+0x34],eax
1001d2f5:	jne    0x1001d30d
1001d2f7:	mov    eax,0x8007000e
1001d2fc:	push   eax
1001d2fd:	mov    WORD PTR [esp+0x30],0xa
1001d304:	mov    DWORD PTR [esp+0x38],eax
1001d308:	call   0x10001f33
1001d30d:	mov    BYTE PTR [esp+0x58],0x5
1001d312:	mov    eax,DWORD PTR [esp+0x18]
1001d316:	mov    ecx,DWORD PTR [eax]
1001d318:	push   0xffffffff
1001d31a:	push   eax
1001d31b:	call   DWORD PTR [ecx+0xa4]
1001d321:	mov    eax,DWORD PTR [esp+0x18]
1001d325:	mov    ecx,DWORD PTR [eax]
1001d327:	lea    edx,[esp+0x3c]
1001d32b:	push   edx
1001d32c:	push   edx
1001d32d:	push   edx
1001d32e:	push   edx
1001d32f:	lea    edx,[esp+0x3c]
1001d333:	push   edx
1001d334:	push   eax
1001d335:	call   DWORD PTR [ecx+0xd0]
1001d33b:	lea    eax,[esp+0x2c]
1001d33f:	push   eax
1001d340:	call   edi
1001d342:	lea    eax,[esp+0x3c]
1001d346:	push   eax
1001d347:	call   edi
1001d349:	mov    edi,DWORD PTR [esp+0x1c]
1001d34d:	mov    BYTE PTR [esp+0x58],0x0
1001d352:	mov    eax,DWORD PTR [esp+0x18]
1001d356:	cmp    eax,ebx
1001d358:	je     0x1001d228
1001d35e:	mov    ecx,DWORD PTR [eax]
1001d360:	push   eax
1001d361:	call   DWORD PTR [ecx+0x8]
1001d364:	jmp    0x1001d228
1001d369:	push   ebp
1001d36a:	mov    ebp,esp
1001d36c:	mov    ecx,DWORD PTR [ebp+0x8]
1001d36f:	mov    eax,DWORD PTR [ecx+0x80]
1001d375:	mov    ecx,DWORD PTR [ecx+0x34]
1001d378:	shr    eax,0x5
1001d37b:	and    eax,0x1
1001d37e:	test   ecx,ecx
1001d380:	mov    DWORD PTR [ebp+0x8],eax
1001d383:	je     0x1001d3a3
1001d385:	mov    edx,DWORD PTR [ecx]
1001d387:	lea    eax,[ebp+0x8]
1001d38a:	push   eax
1001d38b:	push   DWORD PTR [ebp+0x18]
1001d38e:	mov    eax,DWORD PTR [ebp+0x10]
1001d391:	push   DWORD PTR [ebp+0x14]
1001d394:	push   DWORD PTR [eax+0x4]
1001d397:	push   DWORD PTR [eax]
1001d399:	push   DWORD PTR [ebp+0xc]
1001d39c:	push   ecx
1001d39d:	call   DWORD PTR [edx+0x1c]
1001d3a0:	mov    eax,DWORD PTR [ebp+0x8]
1001d3a3:	pop    ebp
1001d3a4:	ret    0x14
1001d3a7:	mov    eax,DWORD PTR [esp+0x8]
1001d3ab:	test   eax,eax
1001d3ad:	jne    0x1001d3b6
1001d3af:	mov    eax,0x80004003
1001d3b4:	jmp    0x1001d3e7
1001d3b6:	mov    ecx,DWORD PTR [esp+0x4]
1001d3ba:	mov    edx,DWORD PTR [ecx+0x34]
1001d3bd:	test   edx,edx
1001d3bf:	je     0x1001d3d3
1001d3c1:	mov    ecx,DWORD PTR [edx]
1001d3c3:	push   esi
1001d3c4:	lea    esi,[eax+0x8]
1001d3c7:	push   esi
1001d3c8:	add    eax,0x4
1001d3cb:	push   eax
1001d3cc:	push   edx
1001d3cd:	call   DWORD PTR [ecx+0x20]
1001d3d0:	pop    esi
1001d3d1:	jmp    0x1001d3e7
1001d3d3:	mov    edx,DWORD PTR [ecx+0x98]
1001d3d9:	mov    DWORD PTR [eax+0x4],edx
1001d3dc:	mov    ecx,DWORD PTR [ecx+0x9c]
1001d3e2:	mov    DWORD PTR [eax+0x8],ecx
1001d3e5:	xor    eax,eax
1001d3e7:	ret    0x8
1001d3ea:	push   ebp
1001d3eb:	mov    ebp,esp
1001d3ed:	mov    ecx,DWORD PTR [ebp+0x8]
1001d3f0:	mov    eax,DWORD PTR [ecx+0x80]
1001d3f6:	mov    ecx,DWORD PTR [ecx+0x34]
1001d3f9:	shr    eax,0x6
1001d3fc:	and    eax,0x1
1001d3ff:	test   ecx,ecx
1001d401:	mov    DWORD PTR [ebp+0x8],eax
1001d404:	je     0x1001d422
1001d406:	mov    eax,DWORD PTR [ecx]
1001d408:	lea    edx,[ebp+0x8]
1001d40b:	push   edx
1001d40c:	push   DWORD PTR [ebp+0x1c]
1001d40f:	push   DWORD PTR [ebp+0x18]
1001d412:	push   DWORD PTR [ebp+0x14]
1001d415:	push   DWORD PTR [ebp+0x10]
1001d418:	push   DWORD PTR [ebp+0xc]
1001d41b:	push   ecx
1001d41c:	call   DWORD PTR [eax+0x24]
1001d41f:	mov    eax,DWORD PTR [ebp+0x8]
1001d422:	pop    ebp
1001d423:	ret    0x18
1001d426:	mov    ecx,DWORD PTR [esp+0x4]
1001d42a:	mov    ecx,DWORD PTR [ecx+0x34]
1001d42d:	xor    eax,eax
1001d42f:	test   ecx,ecx
1001d431:	je     0x1001d439
1001d433:	mov    eax,DWORD PTR [ecx]
1001d435:	push   ecx
1001d436:	call   DWORD PTR [eax+0x28]
1001d439:	ret    0x4
1001d43c:	mov    ecx,DWORD PTR [esp+0x4]
1001d440:	mov    ecx,DWORD PTR [ecx+0x34]
1001d443:	xor    eax,eax
1001d445:	test   ecx,ecx
1001d447:	je     0x1001d44f
1001d449:	mov    eax,DWORD PTR [ecx]
1001d44b:	push   ecx
1001d44c:	call   DWORD PTR [eax+0x2c]
1001d44f:	ret    0x4
1001d452:	mov    ecx,DWORD PTR [esp+0x4]
1001d456:	mov    ecx,DWORD PTR [ecx+0x34]
1001d459:	xor    eax,eax
1001d45b:	test   ecx,ecx
1001d45d:	je     0x1001d46e
1001d45f:	mov    edx,DWORD PTR [esp+0x8]
1001d463:	mov    eax,DWORD PTR [ecx]
1001d465:	neg    edx
1001d467:	sbb    edx,edx
1001d469:	push   edx
1001d46a:	push   ecx
1001d46b:	call   DWORD PTR [eax+0x30]
1001d46e:	ret    0x8
1001d471:	mov    ecx,DWORD PTR [esp+0x4]
1001d475:	mov    ecx,DWORD PTR [ecx+0x34]
1001d478:	xor    eax,eax
1001d47a:	test   ecx,ecx
1001d47c:	je     0x1001d48d
1001d47e:	mov    edx,DWORD PTR [esp+0x8]
1001d482:	mov    eax,DWORD PTR [ecx]
1001d484:	neg    edx
1001d486:	sbb    edx,edx
1001d488:	push   edx
1001d489:	push   ecx
1001d48a:	call   DWORD PTR [eax+0x34]
1001d48d:	ret    0x8
1001d490:	mov    ecx,DWORD PTR [esp+0x4]
1001d494:	mov    ecx,DWORD PTR [ecx+0x34]
1001d497:	xor    eax,eax
1001d499:	test   ecx,ecx
1001d49b:	je     0x1001d4ac
1001d49d:	mov    edx,DWORD PTR [esp+0x8]
1001d4a1:	mov    eax,DWORD PTR [ecx]
1001d4a3:	neg    edx
1001d4a5:	sbb    edx,edx
1001d4a7:	push   edx
1001d4a8:	push   ecx
1001d4a9:	call   DWORD PTR [eax+0x38]
1001d4ac:	ret    0x8
1001d4af:	mov    ecx,DWORD PTR [esp+0x4]
1001d4b3:	mov    ecx,DWORD PTR [ecx+0x34]
1001d4b6:	xor    eax,eax
1001d4b8:	test   ecx,ecx
1001d4ba:	je     0x1001d4de
1001d4bc:	mov    eax,DWORD PTR [esp+0x10]
1001d4c0:	mov    edx,DWORD PTR [ecx]
1001d4c2:	neg    eax
1001d4c4:	sbb    eax,eax
1001d4c6:	push   eax
1001d4c7:	push   DWORD PTR [esp+0x10]
1001d4cb:	mov    eax,DWORD PTR [esp+0x10]
1001d4cf:	push   DWORD PTR [eax+0xc]
1001d4d2:	push   DWORD PTR [eax+0x8]
1001d4d5:	push   DWORD PTR [eax+0x4]
1001d4d8:	push   DWORD PTR [eax]
1001d4da:	push   ecx
1001d4db:	call   DWORD PTR [edx+0x3c]
1001d4de:	ret    0x10
1001d4e1:	push   0x4
1001d4e3:	mov    eax,0x1005fbda
1001d4e8:	call   0x10059b25
1001d4ed:	mov    eax,DWORD PTR [ebp+0x8]
1001d4f0:	mov    edi,DWORD PTR [eax+0x34]
1001d4f3:	test   edi,edi
1001d4f5:	mov    DWORD PTR [ebp-0x10],0x1
1001d4fc:	je     0x1001d533
1001d4fe:	push   DWORD PTR [ebp+0x10]
1001d501:	lea    esi,[ebp+0x8]
1001d504:	call   0x1001b700
1001d509:	and    DWORD PTR [ebp-0x4],0x0
1001d50d:	mov    ecx,DWORD PTR [edi]
1001d50f:	lea    edx,[ebp-0x10]
1001d512:	push   edx
1001d513:	push   DWORD PTR [ebp+0x14]
1001d516:	push   DWORD PTR [eax]
1001d518:	mov    eax,DWORD PTR [ebp+0xc]
1001d51b:	push   DWORD PTR [eax+0xc]
1001d51e:	push   DWORD PTR [eax+0x8]
1001d521:	push   DWORD PTR [eax+0x4]
1001d524:	push   DWORD PTR [eax]
1001d526:	push   edi
1001d527:	call   DWORD PTR [ecx+0x40]
1001d52a:	push   DWORD PTR [ebp+0x8]
1001d52d:	call   DWORD PTR ds:0x100662b4
1001d533:	mov    eax,DWORD PTR [ebp-0x10]
1001d536:	call   0x10059bfd
1001d53b:	ret    0x10
1001d53e:	push   ebp
1001d53f:	mov    ebp,esp
1001d541:	push   ebx
1001d542:	xor    ebx,ebx
1001d544:	push   edi
1001d545:	mov    edi,DWORD PTR [ebp+0xc]
1001d548:	inc    ebx
1001d549:	test   edi,edi
1001d54b:	jne    0x1001d557
1001d54d:	mov    eax,0x80004003
1001d552:	jmp    0x1001d5d9
1001d557:	and    DWORD PTR [edi],0x0
1001d55a:	push   esi
1001d55b:	mov    esi,DWORD PTR [ebp+0x8]
1001d55e:	mov    eax,DWORD PTR [esi+0x34]
1001d561:	test   eax,eax
1001d563:	je     0x1001d57f
1001d565:	push   DWORD PTR [ebp+0x10]
1001d568:	mov    ecx,DWORD PTR [eax]
1001d56a:	push   edi
1001d56b:	push   eax
1001d56c:	call   DWORD PTR [ecx+0x44]
1001d56f:	mov    ebx,eax
1001d571:	test   ebx,ebx
1001d573:	jl     0x1001d57a
1001d575:	cmp    DWORD PTR [edi],0x0
1001d578:	jne    0x1001d5d6
1001d57a:	xor    ebx,ebx
1001d57c:	inc    ebx
1001d57d:	jmp    0x1001d5d6
1001d57f:	push   DWORD PTR [esi+0xa0]
1001d585:	call   DWORD PTR ds:0x100662ac
1001d58b:	test   eax,eax
1001d58d:	je     0x1001d5d6
1001d58f:	push   DWORD PTR [esi+0xa0]
1001d595:	call   DWORD PTR ds:0x100662a0
1001d59b:	add    eax,0x2
1001d59e:	push   eax
1001d59f:	mov    DWORD PTR [ebp+0xc],eax
1001d5a2:	call   DWORD PTR ds:0x10066428
1001d5a8:	mov    ebx,eax
1001d5aa:	test   ebx,ebx
1001d5ac:	jne    0x1001d5b5
1001d5ae:	mov    eax,0x8007000e
1001d5b3:	jmp    0x1001d5d8
1001d5b5:	push   DWORD PTR [esi+0xa0]
1001d5bb:	push   DWORD PTR [ebp+0xc]
1001d5be:	push   ebx
1001d5bf:	call   0x10014424
1001d5c4:	add    esp,0xc
1001d5c7:	test   al,al
1001d5c9:	jne    0x1001d5d2
1001d5cb:	mov    eax,0x80004005
1001d5d0:	jmp    0x1001d5d8
1001d5d2:	mov    DWORD PTR [edi],ebx
1001d5d4:	xor    ebx,ebx
1001d5d6:	mov    eax,ebx
1001d5d8:	pop    esi
1001d5d9:	pop    edi
1001d5da:	pop    ebx
1001d5db:	pop    ebp
1001d5dc:	ret    0xc
1001d5df:	push   0x0
1001d5e1:	mov    eax,0x1005f6e7
1001d5e6:	call   0x10059b25
1001d5eb:	mov    esi,DWORD PTR [ebp+0x10]
1001d5ee:	test   esi,esi
1001d5f0:	jne    0x1001d5f9
1001d5f2:	mov    eax,0x80004003
1001d5f7:	jmp    0x1001d655
1001d5f9:	and    DWORD PTR [esi],0x0
1001d5fc:	mov    eax,DWORD PTR [ebp+0x8]
1001d5ff:	mov    eax,DWORD PTR [eax+0x34]
1001d602:	test   eax,eax
1001d604:	mov    edi,0x80004001
1001d609:	je     0x1001d653
1001d60b:	and    DWORD PTR [ebp+0x10],0x0
1001d60f:	and    DWORD PTR [ebp-0x4],0x0
1001d613:	mov    ecx,DWORD PTR [eax]
1001d615:	lea    edx,[ebp+0x10]
1001d618:	push   edx
1001d619:	push   DWORD PTR [ebp+0xc]
1001d61c:	push   eax
1001d61d:	call   DWORD PTR [ecx+0x48]
1001d620:	mov    edi,eax
1001d622:	mov    eax,DWORD PTR [ebp+0x10]
1001d625:	test   eax,eax
1001d627:	je     0x1001d639
1001d629:	mov    ecx,DWORD PTR [eax]
1001d62b:	push   esi
1001d62c:	push   0x100709c8
1001d631:	push   eax
1001d632:	call   DWORD PTR [ecx]
1001d634:	mov    edi,eax
1001d636:	mov    eax,DWORD PTR [ebp+0x10]
1001d639:	test   edi,edi
1001d63b:	jl     0x1001d642
1001d63d:	cmp    DWORD PTR [esi],0x0
1001d640:	jne    0x1001d645
1001d642:	xor    edi,edi
1001d644:	inc    edi
1001d645:	or     DWORD PTR [ebp-0x4],0xffffffff
1001d649:	test   eax,eax
1001d64b:	je     0x1001d653
1001d64d:	mov    ecx,DWORD PTR [eax]
1001d64f:	push   eax
1001d650:	call   DWORD PTR [ecx+0x8]
1001d653:	mov    eax,edi
1001d655:	call   0x10059bfd
1001d65a:	ret    0xc
1001d65d:	push   esi
1001d65e:	mov    esi,DWORD PTR [esp+0xc]
1001d662:	test   esi,esi
1001d664:	jne    0x1001d66d
1001d666:	mov    eax,0x80004003
1001d66b:	jmp    0x1001d6a6
1001d66d:	and    DWORD PTR [esi],0x0
1001d670:	mov    eax,DWORD PTR [esp+0x8]
1001d674:	mov    ecx,DWORD PTR [eax+0x34]
1001d677:	test   ecx,ecx
1001d679:	je     0x1001d692
1001d67b:	mov    eax,DWORD PTR [ecx]
1001d67d:	push   esi
1001d67e:	push   ecx
1001d67f:	call   DWORD PTR [eax+0x4c]
1001d682:	test   eax,eax
1001d684:	jl     0x1001d68b
1001d686:	cmp    DWORD PTR [esi],0x0
1001d689:	jne    0x1001d6a6
1001d68b:	mov    eax,0x80004002
1001d690:	jmp    0x1001d6a6
1001d692:	mov    ecx,DWORD PTR [eax+0x30]
1001d695:	mov    DWORD PTR [esi],ecx
1001d697:	mov    eax,DWORD PTR [eax+0x30]
1001d69a:	test   eax,eax
1001d69c:	je     0x1001d6a4
1001d69e:	mov    ecx,DWORD PTR [eax]
1001d6a0:	push   eax
1001d6a1:	call   DWORD PTR [ecx+0x4]
1001d6a4:	xor    eax,eax
1001d6a6:	pop    esi
1001d6a7:	ret    0x8
1001d6aa:	push   0x4
1001d6ac:	mov    eax,0x100602a0
1001d6b1:	call   0x10059b25
1001d6b6:	mov    eax,DWORD PTR [ebp+0x14]
1001d6b9:	xor    ebx,ebx
1001d6bb:	cmp    eax,ebx
1001d6bd:	jne    0x1001d6c9
1001d6bf:	mov    eax,0x80004003
1001d6c4:	jmp    0x1001d76e
1001d6c9:	mov    DWORD PTR [eax],ebx
1001d6cb:	mov    eax,DWORD PTR [ebp+0x8]
1001d6ce:	mov    edi,DWORD PTR [eax+0x34]
1001d6d1:	cmp    edi,ebx
1001d6d3:	mov    DWORD PTR [ebp-0x10],0x1
1001d6da:	je     0x1001d76b
1001d6e0:	mov    DWORD PTR [ebp+0x8],ebx
1001d6e3:	mov    DWORD PTR [ebp-0x4],ebx
1001d6e6:	push   DWORD PTR [ebp+0x10]
1001d6e9:	lea    esi,[ebp+0x10]
1001d6ec:	call   0x1001b6d6
1001d6f1:	mov    BYTE PTR [ebp-0x4],0x1
1001d6f5:	mov    eax,DWORD PTR [eax]
1001d6f7:	mov    ecx,DWORD PTR [edi]
1001d6f9:	lea    edx,[ebp+0x8]
1001d6fc:	push   edx
1001d6fd:	push   eax
1001d6fe:	push   DWORD PTR [ebp+0xc]
1001d701:	push   edi
1001d702:	call   DWORD PTR [ecx+0x50]
1001d705:	mov    BYTE PTR [ebp-0x4],bl
1001d708:	push   DWORD PTR [ebp+0x10]
1001d70b:	mov    esi,DWORD PTR ds:0x100662b4
1001d711:	mov    DWORD PTR [ebp-0x10],eax
1001d714:	call   esi
1001d716:	cmp    DWORD PTR [ebp-0x10],ebx
1001d719:	jl     0x1001d75f
1001d71b:	push   DWORD PTR [ebp+0x8]
1001d71e:	mov    edi,DWORD PTR ds:0x100662ac
1001d724:	call   edi
1001d726:	test   eax,eax
1001d728:	je     0x1001d75f
1001d72a:	push   DWORD PTR [ebp+0x8]
1001d72d:	call   edi
1001d72f:	lea    edi,[eax+eax*1+0x2]
1001d733:	push   edi
1001d734:	call   DWORD PTR ds:0x10066428
1001d73a:	cmp    eax,ebx
1001d73c:	mov    ecx,DWORD PTR [ebp+0x14]
1001d73f:	mov    DWORD PTR [ecx],eax
1001d741:	jne    0x1001d74f
1001d743:	push   DWORD PTR [ebp+0x8]
1001d746:	call   esi
1001d748:	mov    eax,0x8007000e
1001d74d:	jmp    0x1001d76e
1001d74f:	push   edi
1001d750:	push   DWORD PTR [ebp+0x8]
1001d753:	push   edi
1001d754:	push   eax
1001d755:	call   0x10014450
1001d75a:	add    esp,0x10
1001d75d:	jmp    0x1001d766
1001d75f:	mov    DWORD PTR [ebp-0x10],0x1
1001d766:	push   DWORD PTR [ebp+0x8]
1001d769:	call   esi
1001d76b:	mov    eax,DWORD PTR [ebp-0x10]
1001d76e:	call   0x10059bfd
1001d773:	ret    0x10
1001d776:	push   0x0
1001d778:	mov    eax,0x1005f6e7
1001d77d:	call   0x10059b25
1001d782:	mov    edi,DWORD PTR [ebp+0x10]
1001d785:	xor    ecx,ecx
1001d787:	cmp    edi,ecx
1001d789:	jne    0x1001d792
1001d78b:	mov    eax,0x80004003
1001d790:	jmp    0x1001d7eb
1001d792:	mov    esi,DWORD PTR [ebp+0x8]
1001d795:	xor    ebx,ebx
1001d797:	mov    DWORD PTR [edi],ecx
1001d799:	mov    eax,DWORD PTR [esi+0x34]
1001d79c:	inc    ebx
1001d79d:	cmp    eax,ecx
1001d79f:	je     0x1001d7e9
1001d7a1:	mov    DWORD PTR [ebp+0x10],ecx
1001d7a4:	lea    edx,[ebp+0x10]
1001d7a7:	push   edx
1001d7a8:	push   DWORD PTR [ebp+0xc]
1001d7ab:	mov    DWORD PTR [ebp-0x4],ecx
1001d7ae:	mov    ecx,DWORD PTR [eax]
1001d7b0:	push   eax
1001d7b1:	call   DWORD PTR [ecx+0x54]
1001d7b4:	cmp    DWORD PTR [ebp+0x10],0x0
1001d7b8:	mov    ebx,eax
1001d7ba:	je     0x1001d7cc
1001d7bc:	push   edi
1001d7bd:	lea    eax,[esi-0x24]
1001d7c0:	mov    ecx,DWORD PTR [eax]
1001d7c2:	push   0x100709d8
1001d7c7:	push   eax
1001d7c8:	call   DWORD PTR [ecx]
1001d7ca:	mov    ebx,eax
1001d7cc:	test   ebx,ebx
1001d7ce:	jl     0x1001d7d5
1001d7d0:	cmp    DWORD PTR [edi],0x0
1001d7d3:	jne    0x1001d7d8
1001d7d5:	xor    ebx,ebx
1001d7d7:	inc    ebx
1001d7d8:	or     DWORD PTR [ebp-0x4],0xffffffff
1001d7dc:	mov    eax,DWORD PTR [ebp+0x10]
1001d7df:	test   eax,eax
1001d7e1:	je     0x1001d7e9
1001d7e3:	mov    ecx,DWORD PTR [eax]
1001d7e5:	push   eax
1001d7e6:	call   DWORD PTR [ecx+0x8]
1001d7e9:	mov    eax,ebx
1001d7eb:	call   0x10059bfd
1001d7f0:	ret    0xc
1001d7f3:	push   0x0
1001d7f5:	mov    eax,0x1005f72d
1001d7fa:	call   0x10059b25
1001d7ff:	mov    eax,DWORD PTR [ebp+0x8]
1001d802:	mov    eax,DWORD PTR [eax+0x60]
1001d805:	xor    ecx,ecx
1001d807:	xor    esi,esi
1001d809:	test   eax,eax
1001d80b:	mov    DWORD PTR [ebp+0x8],ecx
1001d80e:	je     0x1001d821
1001d810:	mov    ecx,DWORD PTR [eax]
1001d812:	lea    edx,[ebp+0x8]
1001d815:	push   edx
1001d816:	push   0x100709e8
1001d81b:	push   eax
1001d81c:	call   DWORD PTR [ecx]
1001d81e:	mov    ecx,DWORD PTR [ebp+0x8]
1001d821:	and    DWORD PTR [ebp-0x4],0x0
1001d825:	test   ecx,ecx
1001d827:	je     0x1001d837
1001d829:	push   DWORD PTR [ebp+0xc]
1001d82c:	mov    eax,DWORD PTR [ecx]
1001d82e:	push   ecx
1001d82f:	call   DWORD PTR [eax+0x14]
1001d832:	mov    ecx,DWORD PTR [ebp+0x8]
1001d835:	mov    esi,eax
1001d837:	or     DWORD PTR [ebp-0x4],0xffffffff
1001d83b:	test   ecx,ecx
1001d83d:	je     0x1001d845
1001d83f:	mov    eax,DWORD PTR [ecx]
1001d841:	push   ecx
1001d842:	call   DWORD PTR [eax+0x8]
1001d845:	mov    eax,esi
1001d847:	call   0x10059bfd
1001d84c:	ret    0x8
1001d84f:	push   ebp
1001d850:	mov    ebp,esp
1001d852:	push   esi
1001d853:	push   DWORD PTR [ebp+0x28]
1001d856:	mov    esi,DWORD PTR [ebp+0x8]
1001d859:	push   DWORD PTR [ebp+0x24]
1001d85c:	push   DWORD PTR [ebp+0x20]
1001d85f:	push   DWORD PTR [ebp+0x1c]
1001d862:	push   DWORD PTR [ebp+0x18]
1001d865:	push   DWORD PTR [ebp+0x14]
1001d868:	push   DWORD PTR [ebp+0x10]
1001d86b:	push   DWORD PTR [ebp+0xc]
1001d86e:	push   esi
1001d86f:	call   0x1002026c
1001d874:	cmp    eax,0x80020003
1001d879:	je     0x1001d882
1001d87b:	cmp    eax,0x8002802b
1001d880:	jne    0x1001d8bd
1001d882:	mov    ecx,DWORD PTR [esi+0x8]
1001d885:	test   ecx,ecx
1001d887:	je     0x1001d8bd
1001d889:	push   DWORD PTR [ebp+0x28]
1001d88c:	mov    eax,DWORD PTR [ecx]
1001d88e:	push   DWORD PTR [ebp+0x24]
1001d891:	push   DWORD PTR [ebp+0x20]
1001d894:	push   DWORD PTR [ebp+0x1c]
1001d897:	push   DWORD PTR [ebp+0x18]
1001d89a:	push   DWORD PTR [ebp+0x14]
1001d89d:	push   DWORD PTR [ebp+0x10]
1001d8a0:	push   DWORD PTR [ebp+0xc]
1001d8a3:	push   ecx
1001d8a4:	call   DWORD PTR [eax+0x18]
1001d8a7:	test   eax,eax
1001d8a9:	jl     0x1001d8bd
1001d8ab:	test   BYTE PTR [ebp+0x18],0x4
1001d8af:	je     0x1001d8bd
1001d8b1:	push   DWORD PTR [ebp+0xc]
1001d8b4:	add    esi,0xffffffb4
1001d8b7:	push   esi
1001d8b8:	call   0x1001d7f3
1001d8bd:	pop    esi
1001d8be:	pop    ebp
1001d8bf:	ret    0x24
1001d8c2:	mov    eax,DWORD PTR [esp+0x4]
1001d8c6:	mov    ecx,DWORD PTR [esp+0x8]
1001d8ca:	xor    ecx,DWORD PTR [eax+0x7c]
1001d8cd:	and    ecx,0x1
1001d8d0:	xor    DWORD PTR [eax+0x7c],ecx
1001d8d3:	xor    eax,eax
1001d8d5:	ret    0x8
1001d8d8:	mov    eax,DWORD PTR [esp+0x8]
1001d8dc:	test   eax,eax
1001d8de:	jne    0x1001d8e7
1001d8e0:	mov    eax,0x80004003
1001d8e5:	jmp    0x1001d8fa
1001d8e7:	mov    ecx,DWORD PTR [esp+0x4]
1001d8eb:	mov    ecx,DWORD PTR [ecx+0x7c]
1001d8ee:	and    cl,0x1
1001d8f1:	neg    cl
1001d8f3:	sbb    ecx,ecx
1001d8f5:	mov    WORD PTR [eax],cx
1001d8f8:	xor    eax,eax
1001d8fa:	ret    0x8
1001d8fd:	mov    eax,DWORD PTR [esp+0x8]
1001d901:	push   esi
1001d902:	mov    esi,DWORD PTR [esp+0x8]
1001d906:	mov    DWORD PTR [esi+0x80],eax
1001d90c:	push   0xfffffd43
1001d911:	lea    eax,[esi-0x4c]
1001d914:	push   eax
1001d915:	call   0x1001d7f3
1001d91a:	push   0x0
1001d91c:	lea    eax,[esi-0x20]
1001d91f:	mov    ecx,DWORD PTR [eax]
1001d921:	push   0x0
1001d923:	push   eax
1001d924:	call   DWORD PTR [ecx+0x64]
1001d927:	xor    eax,eax
1001d929:	pop    esi
1001d92a:	ret    0x8
1001d92d:	mov    eax,DWORD PTR [esp+0x8]
1001d931:	test   eax,eax
1001d933:	jne    0x1001d93c
1001d935:	mov    eax,0x80004003
1001d93a:	jmp    0x1001d94a
1001d93c:	mov    ecx,DWORD PTR [esp+0x4]
1001d940:	mov    ecx,DWORD PTR [ecx+0x80]
1001d946:	mov    DWORD PTR [eax],ecx
1001d948:	xor    eax,eax
1001d94a:	ret    0x8
1001d94d:	mov    eax,DWORD PTR [esp+0x4]
1001d951:	mov    ecx,DWORD PTR [esp+0x8]
1001d955:	mov    DWORD PTR [eax+0x84],ecx
1001d95b:	push   0xfffffd40
1001d960:	add    eax,0xffffffb4
1001d963:	push   eax
1001d964:	call   0x1001d7f3
1001d969:	xor    eax,eax
1001d96b:	ret    0x8
1001d96e:	mov    eax,DWORD PTR [esp+0x8]
1001d972:	test   eax,eax
1001d974:	jne    0x1001d97d
1001d976:	mov    eax,0x80004003
1001d97b:	jmp    0x1001d98b
1001d97d:	mov    ecx,DWORD PTR [esp+0x4]
1001d981:	mov    ecx,DWORD PTR [ecx+0x84]
1001d987:	mov    DWORD PTR [eax],ecx
1001d989:	xor    eax,eax
1001d98b:	ret    0x8
1001d98e:	mov    eax,DWORD PTR [esp+0x4]
1001d992:	mov    ecx,DWORD PTR [esp+0x8]
1001d996:	mov    DWORD PTR [eax+0x88],ecx
1001d99c:	push   0xfffffd3f
1001d9a1:	add    eax,0xffffffb4
1001d9a4:	push   eax
1001d9a5:	call   0x1001d7f3
1001d9aa:	xor    eax,eax
1001d9ac:	ret    0x8
1001d9af:	mov    eax,DWORD PTR [esp+0x8]
1001d9b3:	test   eax,eax
1001d9b5:	jne    0x1001d9be
1001d9b7:	mov    eax,0x80004003
1001d9bc:	jmp    0x1001d9cc
1001d9be:	mov    ecx,DWORD PTR [esp+0x4]
1001d9c2:	mov    ecx,DWORD PTR [ecx+0x88]
1001d9c8:	mov    DWORD PTR [eax],ecx
1001d9ca:	xor    eax,eax
1001d9cc:	ret    0x8
1001d9cf:	movsx  ecx,WORD PTR [esp+0x8]
1001d9d4:	mov    eax,DWORD PTR [esp+0x4]
1001d9d8:	add    ecx,ecx
1001d9da:	xor    ecx,DWORD PTR [eax+0x7c]
1001d9dd:	push   0xfffffd3b
1001d9e2:	and    ecx,0x2
1001d9e5:	xor    DWORD PTR [eax+0x7c],ecx
1001d9e8:	add    eax,0xffffffb4
1001d9eb:	push   eax
1001d9ec:	call   0x1001d7f3
1001d9f1:	xor    eax,eax
1001d9f3:	ret    0x8
1001d9f6:	mov    eax,DWORD PTR [esp+0x8]
1001d9fa:	test   eax,eax
1001d9fc:	jne    0x1001da05
1001d9fe:	mov    eax,0x80004003
1001da03:	jmp    0x1001da18
1001da05:	mov    ecx,DWORD PTR [esp+0x4]
1001da09:	mov    ecx,DWORD PTR [ecx+0x7c]
1001da0c:	and    cl,0x2
1001da0f:	neg    cl
1001da11:	sbb    ecx,ecx
1001da13:	mov    WORD PTR [eax],cx
1001da16:	xor    eax,eax
1001da18:	ret    0x8
1001da1b:	movsx  ecx,WORD PTR [esp+0x8]
1001da20:	mov    eax,DWORD PTR [esp+0x4]
1001da24:	shl    ecx,0x2
1001da27:	xor    ecx,DWORD PTR [eax+0x7c]
1001da2a:	push   0xfffffd37
1001da2f:	and    ecx,0x4
1001da32:	xor    DWORD PTR [eax+0x7c],ecx
1001da35:	add    eax,0xffffffb4
1001da38:	push   eax
1001da39:	call   0x1001d7f3
1001da3e:	xor    eax,eax
1001da40:	ret    0x8
1001da43:	mov    eax,DWORD PTR [esp+0x8]
1001da47:	test   eax,eax
1001da49:	jne    0x1001da52
1001da4b:	mov    eax,0x80004003
1001da50:	jmp    0x1001da65
1001da52:	mov    ecx,DWORD PTR [esp+0x4]
1001da56:	mov    ecx,DWORD PTR [ecx+0x7c]
1001da59:	and    cl,0x4
1001da5c:	neg    cl
1001da5e:	sbb    ecx,ecx
1001da60:	mov    WORD PTR [eax],cx
1001da63:	xor    eax,eax
1001da65:	ret    0x8
1001da68:	push   ebx
1001da69:	mov    ebx,DWORD PTR [esp+0x8]
1001da6d:	push   esi
1001da6e:	push   edi
1001da6f:	mov    edi,DWORD PTR [esp+0x14]
1001da73:	lea    esi,[ebx+0x8c]
1001da79:	cmp    DWORD PTR [esi],edi
1001da7b:	je     0x1001da82
1001da7d:	call   0x1000777b
1001da82:	push   0xfffffd41
1001da87:	add    ebx,0xffffffb4
1001da8a:	push   ebx
1001da8b:	call   0x1001d7f3
1001da90:	pop    edi
1001da91:	pop    esi
1001da92:	xor    eax,eax
1001da94:	pop    ebx
1001da95:	ret    0x8
1001da98:	push   ebp
1001da99:	lea    ebp,[esp-0x70]
1001da9d:	sub    esp,0x8c
1001daa3:	mov    eax,ds:0x1007e030
1001daa8:	xor    eax,ebp
1001daaa:	mov    DWORD PTR [ebp+0x6c],eax
1001daad:	mov    eax,DWORD PTR [ebp+0x7c]
1001dab0:	test   eax,eax
1001dab2:	push   ebx
1001dab3:	mov    ebx,DWORD PTR [ebp+0x78]
1001dab6:	mov    DWORD PTR [ebp+0x4],eax
1001dab9:	jne    0x1001dac5
1001dabb:	mov    eax,0x80004003
1001dac0:	jmp    0x1001dbdb
1001dac5:	and    DWORD PTR [eax],0x0
1001dac8:	push   esi
1001dac9:	lea    esi,[ebx+0x8c]
1001dacf:	cmp    DWORD PTR [esi],0x0
1001dad2:	push   edi
1001dad3:	jne    0x1001dbc7
1001dad9:	call   DWORD PTR ds:0x1007efec
1001dadf:	mov    edi,DWORD PTR ds:0x10066028
1001dae5:	push   0x11
1001dae7:	call   edi
1001dae9:	test   eax,eax
1001daeb:	jne    0x1001daf9
1001daed:	push   0xd
1001daef:	call   edi
1001daf1:	test   eax,eax
1001daf3:	je     0x1001db83
1001daf9:	lea    ecx,[ebp+0x10]
1001dafc:	push   ecx
1001dafd:	push   0x5c
1001daff:	push   eax
1001db00:	call   DWORD PTR ds:0x10066030
1001db06:	lea    eax,[ebp+0x2c]
1001db09:	mov    DWORD PTR [ebp-0x18],eax
1001db0c:	mov    ax,WORD PTR [ebp+0x20]
1001db10:	mov    WORD PTR [ebp-0xc],ax
1001db14:	movzx  ax,BYTE PTR [ebp+0x27]
1001db19:	mov    WORD PTR [ebp-0xa],ax
1001db1d:	movzx  eax,BYTE PTR [ebp+0x24]
1001db21:	mov    DWORD PTR [ebp-0x8],eax
1001db24:	movzx  eax,BYTE PTR [ebp+0x25]
1001db28:	mov    DWORD PTR [ebp-0x4],eax
1001db2b:	movzx  eax,BYTE PTR [ebp+0x26]
1001db2f:	mov    DWORD PTR [ebp+0x0],eax
1001db32:	mov    eax,DWORD PTR [ebp+0x10]
1001db35:	test   eax,eax
1001db37:	mov    DWORD PTR [ebp-0x1c],0x20
1001db3e:	mov    DWORD PTR [ebp+0x8],eax
1001db41:	jge    0x1001db48
1001db43:	neg    eax
1001db45:	mov    DWORD PTR [ebp+0x8],eax
1001db48:	mov    eax,DWORD PTR [ebx-0x48]
1001db4b:	test   eax,eax
1001db4d:	je     0x1001db6e
1001db4f:	push   eax
1001db50:	call   DWORD PTR ds:0x100662c0
1001db56:	mov    edi,eax
1001db58:	test   edi,edi
1001db5a:	je     0x1001db83
1001db5c:	push   0x5a
1001db5e:	push   edi
1001db5f:	call   DWORD PTR ds:0x10066040
1001db65:	push   edi
1001db66:	push   DWORD PTR [ebx-0x48]
1001db69:	mov    DWORD PTR [ebp+0xc],eax
1001db6c:	jmp    0x1001db9a
1001db6e:	mov    edi,DWORD PTR ds:0x100662d8
1001db74:	call   edi
1001db76:	push   eax
1001db77:	call   DWORD PTR ds:0x100662c0
1001db7d:	mov    ebx,eax
1001db7f:	test   ebx,ebx
1001db81:	jne    0x1001db8a
1001db83:	call   0x100067a3
1001db88:	jmp    0x1001dbd9
1001db8a:	push   0x5a
1001db8c:	push   ebx
1001db8d:	call   DWORD PTR ds:0x10066040
1001db93:	push   ebx
1001db94:	mov    DWORD PTR [ebp+0xc],eax
1001db97:	call   edi
1001db99:	push   eax
1001db9a:	call   DWORD PTR ds:0x10066350
1001dba0:	mov    eax,DWORD PTR [ebp+0x8]
1001dba3:	imul   eax,eax,0xafc80
1001dba9:	cdq    
1001dbaa:	idiv   DWORD PTR [ebp+0xc]
1001dbad:	and    DWORD PTR [ebp-0x10],0x0
1001dbb1:	push   esi
1001dbb2:	push   0x100709f8
1001dbb7:	mov    DWORD PTR [ebp-0x14],eax
1001dbba:	lea    eax,[ebp-0x1c]
1001dbbd:	push   eax
1001dbbe:	call   DWORD PTR ds:0x10066288
1001dbc4:	mov    eax,DWORD PTR [ebp+0x4]
1001dbc7:	mov    ecx,DWORD PTR [esi]
1001dbc9:	mov    DWORD PTR [eax],ecx
1001dbcb:	mov    esi,DWORD PTR [esi]
1001dbcd:	test   esi,esi
1001dbcf:	je     0x1001dbd7
1001dbd1:	mov    eax,DWORD PTR [esi]
1001dbd3:	push   esi
1001dbd4:	call   DWORD PTR [eax+0x4]
1001dbd7:	xor    eax,eax
1001dbd9:	pop    edi
1001dbda:	pop    esi
1001dbdb:	mov    ecx,DWORD PTR [ebp+0x6c]
1001dbde:	xor    ecx,ebp
1001dbe0:	pop    ebx
1001dbe1:	call   0x10042f87
1001dbe6:	add    ebp,0x70
1001dbe9:	leave  
1001dbea:	ret    0x8
1001dbed:	movsx  ecx,WORD PTR [esp+0x8]
1001dbf2:	mov    eax,DWORD PTR [esp+0x4]
1001dbf6:	shl    ecx,0x3
1001dbf9:	xor    ecx,DWORD PTR [eax+0x7c]
1001dbfc:	push   0xfffffd3e
1001dc01:	and    ecx,0x8
1001dc04:	xor    DWORD PTR [eax+0x7c],ecx
1001dc07:	add    eax,0xffffffb4
1001dc0a:	push   eax
1001dc0b:	call   0x1001d7f3
1001dc10:	xor    eax,eax
1001dc12:	ret    0x8
1001dc15:	mov    eax,DWORD PTR [esp+0x8]
1001dc19:	test   eax,eax
1001dc1b:	jne    0x1001dc24
1001dc1d:	mov    eax,0x80004003
1001dc22:	jmp    0x1001dc37
1001dc24:	mov    ecx,DWORD PTR [esp+0x4]
1001dc28:	mov    ecx,DWORD PTR [ecx+0x7c]
1001dc2b:	and    cl,0x8
1001dc2e:	neg    cl
1001dc30:	sbb    ecx,ecx
1001dc32:	mov    WORD PTR [eax],cx
1001dc35:	xor    eax,eax
1001dc37:	ret    0x8
1001dc3a:	mov    eax,DWORD PTR [esp+0x8]
1001dc3e:	and    WORD PTR [eax],0x0
1001dc42:	xor    eax,eax
1001dc44:	ret    0x8
1001dc47:	mov    eax,DWORD PTR [esp+0x8]
1001dc4b:	test   eax,eax
1001dc4d:	jne    0x1001dc56
1001dc4f:	mov    eax,0x80004003
1001dc54:	jmp    0x1001dc5c
1001dc56:	and    WORD PTR [eax],0x0
1001dc5a:	xor    eax,eax
1001dc5c:	ret    0x8
1001dc5f:	mov    eax,DWORD PTR [esp+0x4]
1001dc63:	mov    ecx,DWORD PTR [esp+0x8]
1001dc67:	mov    DWORD PTR [eax+0x94],ecx
1001dc6d:	push   0xffffffff
1001dc6f:	add    eax,0xffffffb4
1001dc72:	push   eax
1001dc73:	call   0x1001d7f3
1001dc78:	xor    eax,eax
1001dc7a:	ret    0x8
1001dc7d:	mov    eax,DWORD PTR [esp+0x8]
1001dc81:	test   eax,eax
1001dc83:	jne    0x1001dc8c
1001dc85:	mov    eax,0x80004003
1001dc8a:	jmp    0x1001dc9a
1001dc8c:	mov    ecx,DWORD PTR [esp+0x4]
1001dc90:	mov    ecx,DWORD PTR [ecx+0x94]
1001dc96:	mov    DWORD PTR [eax],ecx
1001dc98:	xor    eax,eax
1001dc9a:	ret    0x8
1001dc9d:	mov    eax,DWORD PTR [esp+0x4]
1001dca1:	mov    ecx,DWORD PTR [esp+0x8]
1001dca5:	mov    DWORD PTR [eax+0x98],ecx
1001dcab:	xor    eax,eax
1001dcad:	ret    0x8
1001dcb0:	mov    eax,DWORD PTR [esp+0x8]
1001dcb4:	test   eax,eax
1001dcb6:	jne    0x1001dcbf
1001dcb8:	mov    eax,0x80004003
1001dcbd:	jmp    0x1001dccd
1001dcbf:	mov    ecx,DWORD PTR [esp+0x4]
1001dcc3:	mov    ecx,DWORD PTR [ecx+0x98]
1001dcc9:	mov    DWORD PTR [eax],ecx
1001dccb:	xor    eax,eax
1001dccd:	ret    0x8
1001dcd0:	movsx  ecx,WORD PTR [esp+0x8]
1001dcd5:	mov    eax,DWORD PTR [esp+0x4]
1001dcd9:	shl    ecx,0x5
1001dcdc:	xor    ecx,DWORD PTR [eax+0x7c]
1001dcdf:	and    ecx,0x20
1001dce2:	xor    DWORD PTR [eax+0x7c],ecx
1001dce5:	xor    eax,eax
1001dce7:	ret    0x8
1001dcea:	mov    eax,DWORD PTR [esp+0x8]
1001dcee:	test   eax,eax
1001dcf0:	jne    0x1001dcf9
1001dcf2:	mov    eax,0x80004003
1001dcf7:	jmp    0x1001dd0c
1001dcf9:	mov    ecx,DWORD PTR [esp+0x4]
1001dcfd:	mov    ecx,DWORD PTR [ecx+0x7c]
1001dd00:	and    cl,0x20
1001dd03:	neg    cl
1001dd05:	sbb    ecx,ecx
1001dd07:	mov    WORD PTR [eax],cx
1001dd0a:	xor    eax,eax
1001dd0c:	ret    0x8
1001dd0f:	movsx  ecx,WORD PTR [esp+0x8]
1001dd14:	mov    eax,DWORD PTR [esp+0x4]
1001dd18:	shl    ecx,0x6
1001dd1b:	xor    ecx,DWORD PTR [eax+0x7c]
1001dd1e:	and    ecx,0x40
1001dd21:	xor    DWORD PTR [eax+0x7c],ecx
1001dd24:	xor    eax,eax
1001dd26:	ret    0x8
1001dd29:	mov    eax,DWORD PTR [esp+0x8]
1001dd2d:	test   eax,eax
1001dd2f:	jne    0x1001dd38
1001dd31:	mov    eax,0x80004003
1001dd36:	jmp    0x1001dd4b
1001dd38:	mov    ecx,DWORD PTR [esp+0x4]
1001dd3c:	mov    ecx,DWORD PTR [ecx+0x7c]
1001dd3f:	and    cl,0x40
1001dd42:	neg    cl
1001dd44:	sbb    ecx,ecx
1001dd46:	mov    WORD PTR [eax],cx
1001dd49:	xor    eax,eax
1001dd4b:	ret    0x8
1001dd4e:	push   esi
1001dd4f:	mov    esi,DWORD PTR [esp+0x8]
1001dd53:	mov    eax,DWORD PTR [esi+0x9c]
1001dd59:	cmp    DWORD PTR [esp+0xc],eax
1001dd5d:	je     0x1001dd92
1001dd5f:	push   eax
1001dd60:	call   DWORD PTR ds:0x100662b4
1001dd66:	cmp    DWORD PTR [esp+0xc],0x0
1001dd6b:	je     0x1001dd8b
1001dd6d:	push   DWORD PTR [esp+0xc]
1001dd71:	call   DWORD PTR ds:0x100662b0
1001dd77:	test   eax,eax
1001dd79:	mov    DWORD PTR [esi+0x9c],eax
1001dd7f:	jne    0x1001dd92
1001dd81:	push   0x8007000e
1001dd86:	call   0x10001f33
1001dd8b:	and    DWORD PTR [esi+0x9c],0x0
1001dd92:	xor    eax,eax
1001dd94:	pop    esi
1001dd95:	ret    0x8
1001dd98:	mov    eax,DWORD PTR [esp+0x8]
1001dd9c:	test   eax,eax
1001dd9e:	jne    0x1001dda7
1001dda0:	mov    eax,0x80004003
1001dda5:	jmp    0x1001ddb5
1001dda7:	mov    ecx,DWORD PTR [esp+0x4]
1001ddab:	mov    ecx,DWORD PTR [ecx+0x9c]
1001ddb1:	mov    DWORD PTR [eax],ecx
1001ddb3:	xor    eax,eax
1001ddb5:	ret    0x8
1001ddb8:	push   esi
1001ddb9:	mov    esi,DWORD PTR [esp+0x8]
1001ddbd:	push   edi
1001ddbe:	mov    edi,DWORD PTR [esp+0x10]
1001ddc2:	add    esi,0x8
1001ddc5:	cmp    DWORD PTR [esi],edi
1001ddc7:	je     0x1001ddce
1001ddc9:	call   0x1000777b
1001ddce:	pop    edi
1001ddcf:	xor    eax,eax
1001ddd1:	pop    esi
1001ddd2:	ret    0x8
1001ddd5:	push   esi
1001ddd6:	mov    esi,DWORD PTR [esp+0x8]
1001ddda:	push   edi
1001dddb:	push   DWORD PTR [esp+0x10]
1001dddf:	push   esi
1001dde0:	call   0x100201e2
1001dde5:	mov    edi,eax
1001dde7:	test   edi,edi
1001dde9:	jl     0x1001de05
1001ddeb:	mov    eax,DWORD PTR [esi+0x4]
1001ddee:	test   eax,eax
1001ddf0:	je     0x1001de05
1001ddf2:	mov    ecx,DWORD PTR [eax]
1001ddf4:	lea    edx,[esi+0xa4]
1001ddfa:	push   edx
1001ddfb:	push   0x100702a0
1001de00:	push   eax
1001de01:	call   DWORD PTR [ecx]
1001de03:	mov    edi,eax
1001de05:	cmp    DWORD PTR [esp+0x10],0x0
1001de0a:	jne    0x1001de21
1001de0c:	lea    eax,[esi+0xa4]
1001de12:	mov    ecx,DWORD PTR [eax]
1001de14:	test   ecx,ecx
1001de16:	je     0x1001de21
1001de18:	and    DWORD PTR [eax],0x0
1001de1b:	mov    eax,DWORD PTR [ecx]
1001de1d:	push   ecx
1001de1e:	call   DWORD PTR [eax+0x8]
1001de21:	mov    eax,edi
1001de23:	pop    edi
1001de24:	pop    esi
1001de25:	ret    0x8
1001de28:	mov    eax,0x80004001
1001de2d:	ret    0x10
1001de30:	push   edi
1001de31:	mov    edi,DWORD PTR [esp+0xc]
1001de35:	test   edi,edi
1001de37:	mov    eax,0x80004003
1001de3c:	je     0x1001de6a
1001de3e:	and    DWORD PTR [edi],0x0
1001de41:	push   ebx
1001de42:	mov    ebx,DWORD PTR [esp+0xc]
1001de46:	mov    eax,DWORD PTR [ebx+0x14]
1001de49:	test   eax,eax
1001de4b:	push   esi
1001de4c:	mov    esi,0x100702c0
1001de51:	je     0x1001de5e
1001de53:	mov    ecx,DWORD PTR [eax]
1001de55:	push   edi
1001de56:	push   esi
1001de57:	push   eax
1001de58:	call   DWORD PTR [ecx]
1001de5a:	test   eax,eax
1001de5c:	jge    0x1001de68
1001de5e:	push   edi
1001de5f:	lea    eax,[ebx-0x4]
1001de62:	mov    ecx,DWORD PTR [eax]
1001de64:	push   esi
1001de65:	push   eax
1001de66:	call   DWORD PTR [ecx]
1001de68:	pop    esi
1001de69:	pop    ebx
1001de6a:	pop    edi
1001de6b:	ret    0x8
1001de6e:	push   esi
1001de6f:	mov    esi,DWORD PTR [esp+0x8]
1001de73:	push   edi
1001de74:	push   DWORD PTR [esi-0x24]
1001de77:	call   DWORD PTR ds:0x100662c0
1001de7d:	mov    edi,eax
1001de7f:	xor    edx,edx
1001de81:	cmp    edi,edx
1001de83:	jne    0x1001de8c
1001de85:	mov    eax,0x80004005
1001de8a:	jmp    0x1001deb9
1001de8c:	mov    eax,DWORD PTR [esi+0x48]
1001de8f:	cmp    eax,edx
1001de91:	je     0x1001dead
1001de93:	push   ebx
1001de94:	mov    ebx,DWORD PTR [eax]
1001de96:	push   edx
1001de97:	push   edx
1001de98:	lea    ecx,[esi+0x8c]
1001de9e:	push   ecx
1001de9f:	push   ecx
1001dea0:	push   edi
1001dea1:	push   edx
1001dea2:	push   edx
1001dea3:	push   edx
1001dea4:	push   0xffffffff
1001dea6:	push   0x1
1001dea8:	push   eax
1001dea9:	call   DWORD PTR [ebx+0xc]
1001deac:	pop    ebx
1001dead:	push   edi
1001deae:	push   DWORD PTR [esi-0x24]
1001deb1:	call   DWORD PTR ds:0x10066350
1001deb7:	xor    eax,eax
1001deb9:	pop    edi
1001deba:	pop    esi
1001debb:	ret    0x4
1001debe:	mov    eax,DWORD PTR [esp+0x4]
1001dec2:	mov    eax,DWORD PTR [eax-0x28]
1001dec5:	mov    ecx,DWORD PTR [esp+0x8]
1001dec9:	mov    DWORD PTR [ecx],eax
1001decb:	xor    eax,eax
1001decd:	ret    0x8
1001ded0:	mov    eax,0x80004001
1001ded5:	ret    0x8
1001ded8:	push   esi
1001ded9:	mov    esi,DWORD PTR [esp+0x8]
1001dedd:	or     DWORD PTR [esi+0x6c],0x1
1001dee1:	push   0x0
1001dee3:	push   0x1
1001dee5:	push   DWORD PTR [esi+0x38]
1001dee8:	call   DWORD PTR ds:0x10066448
1001deee:	mov    eax,DWORD PTR [esi+0x38]
1001def1:	and    DWORD PTR [esi+0x6c],0xfffffff7
1001def5:	mov    ecx,DWORD PTR [eax]
1001def7:	add    esi,0x48
1001defa:	push   esi
1001defb:	push   0x10070a08
1001df00:	push   eax
1001df01:	call   DWORD PTR [ecx]
1001df03:	xor    eax,eax
1001df05:	pop    esi
1001df06:	ret    0x4
1001df09:	mov    eax,DWORD PTR [esp+0x4]
1001df0d:	or     DWORD PTR [eax+0x6c],0x2
1001df11:	xor    eax,eax
1001df13:	ret    0x4
1001df16:	push   ebp
1001df17:	mov    ebp,esp
1001df19:	push   ecx
1001df1a:	push   ecx
1001df1b:	mov    edx,DWORD PTR [ebp+0xc]
1001df1e:	xor    eax,eax
1001df20:	cmp    edx,eax
1001df22:	je     0x1001df26
1001df24:	mov    DWORD PTR [edx],eax
1001df26:	mov    ecx,DWORD PTR [ebp+0x10]
1001df29:	cmp    ecx,eax
1001df2b:	je     0x1001df2f
1001df2d:	mov    DWORD PTR [ecx],eax
1001df2f:	cmp    edx,eax
1001df31:	je     0x1001e03c
1001df37:	cmp    ecx,eax
1001df39:	je     0x1001e03c
1001df3f:	cmp    DWORD PTR [ebp+0x14],eax
1001df42:	je     0x1001e03c
1001df48:	cmp    DWORD PTR [ebp+0x18],eax
1001df4b:	je     0x1001e03c
1001df51:	push   ebx
1001df52:	push   esi
1001df53:	mov    esi,DWORD PTR [ebp+0x8]
1001df56:	lea    ebx,[esi+0x3c]
1001df59:	cmp    DWORD PTR [ebx],eax
1001df5b:	push   edi
1001df5c:	jne    0x1001df78
1001df5e:	lea    eax,[ebp+0x8]
1001df61:	push   eax
1001df62:	call   0x100220bd
1001df67:	mov    eax,DWORD PTR [ebp+0x8]
1001df6a:	push   ebx
1001df6b:	add    eax,0x24
1001df6e:	mov    ecx,DWORD PTR [eax]
1001df70:	push   0x10070360
1001df75:	push   eax
1001df76:	call   DWORD PTR [ecx]
1001df78:	lea    edi,[esi+0x40]
1001df7b:	cmp    DWORD PTR [edi],0x0
1001df7e:	jne    0x1001df9a
1001df80:	lea    eax,[ebp+0x8]
1001df83:	push   eax
1001df84:	call   0x1002214c
1001df89:	mov    eax,DWORD PTR [ebp+0x8]
1001df8c:	push   edi
1001df8d:	add    eax,0x24
1001df90:	mov    ecx,DWORD PTR [eax]
1001df92:	push   0x10070350
1001df97:	push   eax
1001df98:	call   DWORD PTR [ecx]
1001df9a:	mov    eax,DWORD PTR [ebx]
1001df9c:	mov    ecx,DWORD PTR [ebp+0xc]
1001df9f:	mov    DWORD PTR [ecx],eax
1001dfa1:	mov    ebx,DWORD PTR [ebx]
1001dfa3:	test   ebx,ebx
1001dfa5:	je     0x1001dfad
1001dfa7:	mov    eax,DWORD PTR [ebx]
1001dfa9:	push   ebx
1001dfaa:	call   DWORD PTR [eax+0x4]
1001dfad:	mov    eax,DWORD PTR [edi]
1001dfaf:	mov    ecx,DWORD PTR [ebp+0x10]
1001dfb2:	mov    DWORD PTR [ecx],eax
1001dfb4:	mov    edi,DWORD PTR [edi]
1001dfb6:	test   edi,edi
1001dfb8:	je     0x1001dfc0
1001dfba:	mov    eax,DWORD PTR [edi]
1001dfbc:	push   edi
1001dfbd:	call   DWORD PTR [eax+0x4]
1001dfc0:	push   DWORD PTR [ebp+0x14]
1001dfc3:	mov    edi,DWORD PTR ds:0x100662d4
1001dfc9:	push   DWORD PTR [esi-0x28]
1001dfcc:	call   edi
1001dfce:	push   DWORD PTR [ebp+0x18]
1001dfd1:	push   DWORD PTR [esi-0x28]
1001dfd4:	call   edi
1001dfd6:	xor    ebx,ebx
1001dfd8:	cmp    DWORD PTR [esi+0x98],ebx
1001dfde:	jne    0x1001dffd
1001dfe0:	push   0x1
1001dfe2:	lea    eax,[ebp-0x8]
1001dfe5:	push   eax
1001dfe6:	mov    BYTE PTR [ebp-0x8],bl
1001dfe9:	mov    WORD PTR [ebp-0x6],bx
1001dfed:	mov    WORD PTR [ebp-0x4],bx
1001dff1:	call   DWORD PTR ds:0x100662d0
1001dff7:	mov    DWORD PTR [esi+0x98],eax
1001dffd:	mov    edi,DWORD PTR [ebp+0x1c]
1001e000:	mov    DWORD PTR [edi],0x14
1001e006:	mov    eax,DWORD PTR [esi+0x6c]
1001e009:	shr    eax,0x2
1001e00c:	and    eax,0x1
1001e00f:	mov    DWORD PTR [edi+0x4],eax
1001e012:	push   DWORD PTR [esi-0x28]
1001e015:	call   DWORD PTR ds:0x100662e0
1001e01b:	mov    DWORD PTR [edi+0x8],eax
1001e01e:	mov    eax,DWORD PTR [esi+0x98]
1001e024:	mov    DWORD PTR [edi+0xc],eax
1001e027:	xor    eax,eax
1001e029:	cmp    DWORD PTR [esi+0x98],ebx
1001e02f:	setne  al
1001e032:	mov    DWORD PTR [edi+0x10],eax
1001e035:	pop    edi
1001e036:	pop    esi
1001e037:	xor    eax,eax
1001e039:	pop    ebx
1001e03a:	jmp    0x1001e041
1001e03c:	mov    eax,0x80004003
1001e041:	leave  
1001e042:	ret    0x18
1001e045:	mov    eax,DWORD PTR [esp+0x4]
1001e049:	and    DWORD PTR [eax+0x6c],0xfffffffd
1001e04d:	xor    eax,eax
1001e04f:	ret    0x8
1001e052:	mov    eax,DWORD PTR [esp+0x4]
1001e056:	and    DWORD PTR [eax+0x6c],0xfffffffe
1001e05a:	mov    ecx,DWORD PTR [eax+0x48]
1001e05d:	test   ecx,ecx
1001e05f:	je     0x1001e06b
1001e061:	and    DWORD PTR [eax+0x48],0x0
1001e065:	mov    eax,DWORD PTR [ecx]
1001e067:	push   ecx
1001e068:	call   DWORD PTR [eax+0x8]
1001e06b:	xor    eax,eax
1001e06d:	ret    0x4
1001e070:	mov    eax,0x80004001
1001e075:	ret    0x4
1001e078:	push   ebp
1001e079:	mov    ebp,esp
1001e07b:	sub    esp,0x10
1001e07e:	push   esi
1001e07f:	mov    esi,DWORD PTR [ebp+0xc]
1001e082:	test   esi,esi
1001e084:	jne    0x1001e08d
1001e086:	mov    eax,0x80004003
1001e08b:	jmp    0x1001e0ff
1001e08d:	push   ebx
1001e08e:	push   edi
1001e08f:	lea    edi,[ebp-0x10]
1001e092:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1001e093:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1001e094:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1001e095:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1001e096:	mov    esi,DWORD PTR [ebp+0x8]
1001e099:	mov    edi,DWORD PTR ds:0x10066308
1001e09f:	lea    eax,[ebp-0x10]
1001e0a2:	push   eax
1001e0a3:	push   DWORD PTR [esi-0x28]
1001e0a6:	call   edi
1001e0a8:	test   eax,eax
1001e0aa:	je     0x1001e0b5
1001e0ac:	lea    eax,[ebp-0x8]
1001e0af:	push   eax
1001e0b0:	push   DWORD PTR [esi-0x28]
1001e0b3:	call   edi
1001e0b5:	push   DWORD PTR [esi-0x28]
1001e0b8:	call   DWORD PTR ds:0x100662e0
1001e0be:	mov    ebx,eax
1001e0c0:	test   ebx,ebx
1001e0c2:	je     0x1001e0dc
1001e0c4:	mov    edi,DWORD PTR ds:0x100662f8
1001e0ca:	lea    eax,[ebp-0x10]
1001e0cd:	push   eax
1001e0ce:	push   ebx
1001e0cf:	call   edi
1001e0d1:	test   eax,eax
1001e0d3:	je     0x1001e0dc
1001e0d5:	lea    eax,[ebp-0x8]
1001e0d8:	push   eax
1001e0d9:	push   ebx
1001e0da:	call   edi
1001e0dc:	mov    eax,DWORD PTR [ebp-0x4]
1001e0df:	sub    eax,DWORD PTR [ebp-0xc]
1001e0e2:	push   0x1
1001e0e4:	push   eax
1001e0e5:	mov    eax,DWORD PTR [ebp-0x8]
1001e0e8:	sub    eax,DWORD PTR [ebp-0x10]
1001e0eb:	push   eax
1001e0ec:	push   DWORD PTR [ebp-0xc]
1001e0ef:	push   DWORD PTR [ebp-0x10]
1001e0f2:	push   DWORD PTR [esi-0x28]
1001e0f5:	call   DWORD PTR ds:0x10066344
1001e0fb:	pop    edi
1001e0fc:	xor    eax,eax
1001e0fe:	pop    ebx
1001e0ff:	pop    esi
1001e100:	leave  
1001e101:	ret    0x8
1001e104:	push   esi
1001e105:	mov    esi,DWORD PTR [esp+0x8]
1001e109:	or     DWORD PTR [esi+0x6c],0x1
1001e10d:	push   edi
1001e10e:	push   0x0
1001e110:	push   0x1
1001e112:	push   DWORD PTR [esi+0x38]
1001e115:	call   DWORD PTR ds:0x10066448
1001e11b:	test   BYTE PTR [esp+0x14],0x1
1001e120:	je     0x1001e13b
1001e122:	mov    eax,DWORD PTR [esi+0x38]
1001e125:	or     DWORD PTR [esi+0x6c],0x8
1001e129:	mov    ecx,DWORD PTR [eax]
1001e12b:	lea    edi,[esi+0x48]
1001e12e:	push   edi
1001e12f:	push   0x10070a18
1001e134:	push   eax
1001e135:	call   DWORD PTR [ecx]
1001e137:	test   eax,eax
1001e139:	jge    0x1001e150
1001e13b:	mov    eax,DWORD PTR [esi+0x38]
1001e13e:	and    DWORD PTR [esi+0x6c],0xfffffff7
1001e142:	mov    ecx,DWORD PTR [eax]
1001e144:	lea    edi,[esi+0x48]
1001e147:	push   edi
1001e148:	push   0x10070a08
1001e14d:	push   eax
1001e14e:	call   DWORD PTR [ecx]
1001e150:	mov    edi,DWORD PTR [edi]
1001e152:	test   edi,edi
1001e154:	je     0x1001e164
1001e156:	mov    ecx,DWORD PTR [edi]
1001e158:	lea    eax,[esi+0x88]
1001e15e:	push   eax
1001e15f:	push   eax
1001e160:	push   edi
1001e161:	call   DWORD PTR [ecx+0x1c]
1001e164:	pop    edi
1001e165:	xor    eax,eax
1001e167:	pop    esi
1001e168:	ret    0xc
1001e16b:	mov    eax,DWORD PTR [esp+0x4]
1001e16f:	and    DWORD PTR [eax+0x6c],0xfffffffe
1001e173:	mov    ecx,DWORD PTR [eax+0x48]
1001e176:	test   ecx,ecx
1001e178:	je     0x1001e184
1001e17a:	and    DWORD PTR [eax+0x48],0x0
1001e17e:	mov    eax,DWORD PTR [ecx]
1001e180:	push   ecx
1001e181:	call   DWORD PTR [eax+0x8]
1001e184:	xor    eax,eax
1001e186:	ret    0x8
1001e189:	mov    eax,DWORD PTR [esp+0x4]
1001e18d:	mov    eax,DWORD PTR [eax+0x9c]
1001e193:	not    eax
1001e195:	and    eax,0x1
1001e198:	ret    0x4
1001e19b:	mov    eax,DWORD PTR [esp+0x4]
1001e19f:	mov    eax,DWORD PTR [eax+0x6c]
1001e1a2:	shr    eax,0x4
1001e1a5:	not    eax
1001e1a7:	and    eax,0x1
1001e1aa:	ret    0x4
1001e1ad:	cmp    DWORD PTR [esp+0x8],0x0
1001e1b2:	je     0x1001e1c9
1001e1b4:	push   esi
1001e1b5:	mov    esi,DWORD PTR [esp+0x8]
1001e1b9:	push   DWORD PTR [esi-0x28]
1001e1bc:	call   DWORD PTR ds:0x100662e8
1001e1c2:	or     DWORD PTR [esi+0x6c],0x10
1001e1c6:	pop    esi
1001e1c7:	jmp    0x1001e1d7
1001e1c9:	call   DWORD PTR ds:0x1006632c
1001e1cf:	mov    eax,DWORD PTR [esp+0x4]
1001e1d3:	and    DWORD PTR [eax+0x6c],0xffffffef
1001e1d7:	xor    eax,eax
1001e1d9:	ret    0x8
1001e1dc:	mov    eax,DWORD PTR [esp+0x4]
1001e1e0:	mov    eax,DWORD PTR [eax+0x6c]
1001e1e3:	shr    eax,0x5
1001e1e6:	not    eax
1001e1e8:	and    eax,0x1
1001e1eb:	ret    0x4
1001e1ee:	mov    eax,DWORD PTR [esp+0x4]
1001e1f2:	mov    ecx,DWORD PTR [esp+0x8]
1001e1f6:	shl    ecx,0x5
1001e1f9:	xor    ecx,DWORD PTR [eax+0x6c]
1001e1fc:	and    ecx,0x20
1001e1ff:	xor    DWORD PTR [eax+0x6c],ecx
1001e202:	xor    eax,eax
1001e204:	ret    0x8
1001e207:	push   ebp
1001e208:	mov    ebp,esp
1001e20a:	sub    esp,0x10
1001e20d:	push   esi
1001e20e:	mov    esi,DWORD PTR [ebp+0x14]
1001e211:	test   esi,esi
1001e213:	jne    0x1001e21f
1001e215:	mov    eax,0x80004003
1001e21a:	jmp    0x1001e2d3
1001e21f:	push   edi
1001e220:	mov    edi,DWORD PTR [ebp+0x8]
1001e223:	cmp    BYTE PTR [edi+0x30],0x0
1001e227:	je     0x1001e238
1001e229:	push   DWORD PTR [edi-0x28]
1001e22c:	call   DWORD PTR ds:0x100662c0
1001e232:	test   eax,eax
1001e234:	mov    DWORD PTR [esi],eax
1001e236:	jne    0x1001e242
1001e238:	mov    eax,0x80004005
1001e23d:	jmp    0x1001e2d2
1001e242:	test   BYTE PTR [ebp+0x10],0x1
1001e246:	mov    BYTE PTR [edi+0x30],0x0
1001e24a:	jne    0x1001e2d0
1001e250:	lea    eax,[ebp-0x10]
1001e253:	push   eax
1001e254:	push   DWORD PTR [edi-0x28]
1001e257:	call   DWORD PTR ds:0x100662d4
1001e25d:	test   BYTE PTR [ebp+0x10],0x4
1001e261:	je     0x1001e2bc
1001e263:	push   ebx
1001e264:	push   DWORD PTR [esi]
1001e266:	call   DWORD PTR ds:0x1006604c
1001e26c:	mov    ebx,eax
1001e26e:	test   ebx,ebx
1001e270:	je     0x1001e2bb
1001e272:	mov    eax,DWORD PTR [ebp-0x4]
1001e275:	sub    eax,DWORD PTR [ebp-0xc]
1001e278:	push   eax
1001e279:	mov    eax,DWORD PTR [ebp-0x8]
1001e27c:	sub    eax,DWORD PTR [ebp-0x10]
1001e27f:	push   eax
1001e280:	push   DWORD PTR [esi]
1001e282:	call   DWORD PTR ds:0x10066034
1001e288:	test   eax,eax
1001e28a:	mov    DWORD PTR [ebp+0x14],eax
1001e28d:	je     0x1001e2a4
1001e28f:	push   eax
1001e290:	push   ebx
1001e291:	call   DWORD PTR ds:0x10066048
1001e297:	test   eax,eax
1001e299:	jne    0x1001e2ad
1001e29b:	push   DWORD PTR [ebp+0x14]
1001e29e:	call   DWORD PTR ds:0x10066044
1001e2a4:	push   ebx
1001e2a5:	call   DWORD PTR ds:0x1006603c
1001e2ab:	jmp    0x1001e2bb
1001e2ad:	push   eax
1001e2ae:	call   DWORD PTR ds:0x10066044
1001e2b4:	mov    eax,DWORD PTR [esi]
1001e2b6:	mov    DWORD PTR [edi+0x2c],eax
1001e2b9:	mov    DWORD PTR [esi],ebx
1001e2bb:	pop    ebx
1001e2bc:	test   BYTE PTR [ebp+0x10],0x2
1001e2c0:	je     0x1001e2d0
1001e2c2:	push   0x6
1001e2c4:	lea    eax,[ebp-0x10]
1001e2c7:	push   eax
1001e2c8:	push   DWORD PTR [esi]
1001e2ca:	call   DWORD PTR ds:0x100662f0
1001e2d0:	xor    eax,eax
1001e2d2:	pop    edi
1001e2d3:	pop    esi
1001e2d4:	leave  
1001e2d5:	ret    0x10
1001e2d8:	push   ebp
1001e2d9:	mov    ebp,esp
1001e2db:	sub    esp,0x10
1001e2de:	push   esi
1001e2df:	mov    esi,DWORD PTR [ebp+0x8]
1001e2e2:	cmp    DWORD PTR [esi+0x2c],0x0
1001e2e6:	mov    BYTE PTR [esi+0x30],0x1
1001e2ea:	je     0x1001e330
1001e2ec:	lea    eax,[ebp-0x10]
1001e2ef:	push   eax
1001e2f0:	push   DWORD PTR [esi-0x28]
1001e2f3:	call   DWORD PTR ds:0x100662d4
1001e2f9:	mov    eax,DWORD PTR [ebp-0x4]
1001e2fc:	sub    eax,DWORD PTR [ebp-0xc]
1001e2ff:	push   0xcc0020
1001e304:	push   0x0
1001e306:	push   0x0
1001e308:	push   DWORD PTR [ebp+0xc]
1001e30b:	push   eax
1001e30c:	mov    eax,DWORD PTR [ebp-0x8]
1001e30f:	sub    eax,DWORD PTR [ebp-0x10]
1001e312:	push   eax
1001e313:	push   DWORD PTR [ebp-0xc]
1001e316:	push   DWORD PTR [ebp-0x10]
1001e319:	push   DWORD PTR [esi+0x2c]
1001e31c:	call   DWORD PTR ds:0x10066038
1001e322:	push   DWORD PTR [ebp+0xc]
1001e325:	call   DWORD PTR ds:0x1006603c
1001e32b:	mov    eax,DWORD PTR [esi+0x2c]
1001e32e:	jmp    0x1001e333
1001e330:	mov    eax,DWORD PTR [ebp+0xc]
1001e333:	push   eax
1001e334:	push   DWORD PTR [esi-0x28]
1001e337:	call   DWORD PTR ds:0x10066350
1001e33d:	xor    eax,eax
1001e33f:	pop    esi
1001e340:	leave  
1001e341:	ret    0x8
1001e344:	push   DWORD PTR [esp+0xc]
1001e348:	mov    eax,DWORD PTR [esp+0x8]
1001e34c:	push   DWORD PTR [esp+0xc]
1001e350:	push   DWORD PTR [eax-0x28]
1001e353:	call   DWORD PTR ds:0x10066300
1001e359:	xor    eax,eax
1001e35b:	ret    0xc
1001e35e:	push   DWORD PTR [esp+0xc]
1001e362:	mov    eax,DWORD PTR [esp+0x8]
1001e366:	push   DWORD PTR [esp+0xc]
1001e36a:	push   DWORD PTR [eax-0x28]
1001e36d:	call   DWORD PTR ds:0x100662dc
1001e373:	xor    eax,eax
1001e375:	ret    0xc
1001e378:	xor    eax,eax
1001e37a:	ret    0x14
1001e37d:	push   ebp
1001e37e:	mov    ebp,esp
1001e380:	push   DWORD PTR [ebp+0x14]
1001e383:	mov    eax,DWORD PTR [ebp+0x8]
1001e386:	push   DWORD PTR [ebp+0x10]
1001e389:	push   DWORD PTR [ebp+0xc]
1001e38c:	push   DWORD PTR [eax-0x28]
1001e38f:	push   DWORD PTR [eax-0xc]
1001e392:	call   DWORD PTR ds:0x10066338
1001e398:	mov    ecx,DWORD PTR [ebp+0x18]
1001e39b:	mov    DWORD PTR [ecx],eax
1001e39d:	xor    eax,eax
1001e39f:	pop    ebp
1001e3a0:	ret    0x14
1001e3a3:	cmp    DWORD PTR [esp+0x8],0x0
1001e3a8:	jne    0x1001e3b1
1001e3aa:	mov    eax,0x80004003
1001e3af:	jmp    0x1001e3c6
1001e3b1:	push   DWORD PTR [esp+0x8]
1001e3b5:	mov    eax,DWORD PTR [esp+0x8]
1001e3b9:	mov    eax,DWORD PTR [eax+0x34]
1001e3bc:	mov    ecx,DWORD PTR [eax]
1001e3be:	push   0x1006dcf8
1001e3c3:	push   eax
1001e3c4:	call   DWORD PTR [ecx]
1001e3c6:	ret    0x8
1001e3c9:	mov    eax,DWORD PTR [esp+0x4]
1001e3cd:	mov    ecx,DWORD PTR [esp+0x8]
1001e3d1:	shl    ecx,0x5
1001e3d4:	xor    ecx,DWORD PTR [eax+0x68]
1001e3d7:	and    ecx,0x20
1001e3da:	xor    DWORD PTR [eax+0x68],ecx
1001e3dd:	xor    eax,eax
1001e3df:	ret    0x8
1001e3e2:	ret    0xc
1001e3e5:	ret    0x8
1001e3e8:	mov    eax,0x80004001
1001e3ed:	ret    0x14
1001e3f0:	push   0xc
1001e3f2:	mov    eax,0x1005f907
1001e3f7:	call   0x10059b58
1001e3fc:	mov    eax,DWORD PTR [ebp+0x10]
1001e3ff:	xor    esi,esi
1001e401:	cmp    eax,esi
1001e403:	jne    0x1001e40c
1001e405:	mov    eax,0x80004003
1001e40a:	jmp    0x1001e489
1001e40c:	push   0x1c
1001e40e:	mov    DWORD PTR [eax],esi
1001e410:	mov    DWORD PTR [ebp-0x18],esi
1001e413:	mov    DWORD PTR [ebp-0x4],esi
1001e416:	call   0x1004358e
1001e41b:	cmp    eax,esi
1001e41d:	pop    ecx
1001e41e:	je     0x1001e429
1001e420:	mov    esi,eax
1001e422:	call   0x100203b8
1001e427:	mov    esi,eax
1001e429:	or     DWORD PTR [ebp-0x4],0xffffffff
1001e42d:	jmp    0x1001e438
1001e42f:	mov    eax,0x1001e435
1001e434:	ret    
1001e435:	mov    esi,DWORD PTR [ebp-0x18]
1001e438:	test   esi,esi
1001e43a:	jne    0x1001e443
1001e43c:	mov    eax,0x8007000e
1001e441:	jmp    0x1001e489
1001e443:	mov    eax,DWORD PTR [ebp+0x8]
1001e446:	mov    ecx,DWORD PTR [eax+0x2c]
1001e449:	mov    DWORD PTR [ebp-0x14],ecx
1001e44c:	lea    ecx,[eax-0x34]
1001e44f:	mov    eax,DWORD PTR [ecx]
1001e451:	push   0x3
1001e453:	call   DWORD PTR [eax+0x10]
1001e456:	push   eax
1001e457:	lea    eax,[ebp-0x10]
1001e45a:	push   eax
1001e45b:	lea    eax,[ebp-0x14]
1001e45e:	push   eax
1001e45f:	push   esi
1001e460:	call   0x100249f9
1001e465:	mov    edi,eax
1001e467:	test   edi,edi
1001e469:	jl     0x1001e47e
1001e46b:	push   DWORD PTR [ebp+0x10]
1001e46e:	mov    eax,DWORD PTR [esi]
1001e470:	push   0x10070200
1001e475:	push   esi
1001e476:	call   DWORD PTR [eax]
1001e478:	mov    edi,eax
1001e47a:	test   edi,edi
1001e47c:	jge    0x1001e487
1001e47e:	mov    eax,DWORD PTR [esi]
1001e480:	push   0x1
1001e482:	mov    ecx,esi
1001e484:	call   DWORD PTR [eax+0x1c]
1001e487:	mov    eax,edi
1001e489:	call   0x10059bfd
1001e48e:	ret    0xc
1001e491:	mov    eax,DWORD PTR [esp+0x4]
1001e495:	mov    ecx,DWORD PTR [esp+0x8]
1001e499:	shl    ecx,0x7
1001e49c:	xor    ecx,DWORD PTR [eax+0x64]
1001e49f:	and    ecx,0x80
1001e4a5:	xor    DWORD PTR [eax+0x64],ecx
1001e4a8:	xor    eax,eax
1001e4aa:	ret    0x8
1001e4ad:	push   0x18
1001e4af:	mov    eax,0x1005fbb7
1001e4b4:	call   0x10059b25
1001e4b9:	mov    ebx,ecx
1001e4bb:	mov    esi,DWORD PTR [ebp+0x8]
1001e4be:	test   esi,esi
1001e4c0:	jne    0x1001e4c9
1001e4c2:	xor    eax,eax
1001e4c4:	jmp    0x1001e898
1001e4c9:	lea    eax,[ebx+0x60]
1001e4cc:	cmp    DWORD PTR [eax],esi
1001e4ce:	mov    DWORD PTR [ebp-0x24],eax
1001e4d1:	je     0x1001e4de
1001e4d3:	mov    edi,esi
1001e4d5:	mov    esi,eax
1001e4d7:	call   0x1000777b
1001e4dc:	mov    esi,edi
1001e4de:	mov    eax,DWORD PTR [esi]
1001e4e0:	and    DWORD PTR [ebp-0x10],0x0
1001e4e4:	lea    edi,[ebx+0x64]
1001e4e7:	push   edi
1001e4e8:	push   0x10070a28
1001e4ed:	push   esi
1001e4ee:	call   DWORD PTR [eax]
1001e4f0:	mov    eax,DWORD PTR [edi]
1001e4f2:	test   eax,eax
1001e4f4:	je     0x1001e852
1001e4fa:	mov    ecx,DWORD PTR [eax]
1001e4fc:	lea    esi,[ebx+0xa0]
1001e502:	push   esi
1001e503:	push   0x1
1001e505:	push   eax
1001e506:	mov    DWORD PTR [ebp-0x20],esi
1001e509:	call   DWORD PTR [ecx+0x58]
1001e50c:	test   DWORD PTR [esi],0x20000
1001e512:	je     0x1001e553
1001e514:	mov    eax,DWORD PTR [ebx]
1001e516:	mov    ecx,ebx
1001e518:	call   DWORD PTR [eax+0x10]
1001e51b:	xor    esi,esi
1001e51d:	cmp    eax,esi
1001e51f:	mov    DWORD PTR [ebp-0x18],esi
1001e522:	je     0x1001e532
1001e524:	mov    ecx,DWORD PTR [eax]
1001e526:	lea    edx,[ebp-0x18]
1001e529:	push   edx
1001e52a:	push   0x10070310
1001e52f:	push   eax
1001e530:	call   DWORD PTR [ecx]
1001e532:	mov    DWORD PTR [ebp-0x4],esi
1001e535:	mov    eax,DWORD PTR [edi]
1001e537:	push   DWORD PTR [ebp-0x18]
1001e53a:	mov    ecx,DWORD PTR [eax]
1001e53c:	push   eax
1001e53d:	call   DWORD PTR [ecx+0xc]
1001e540:	or     DWORD PTR [ebp-0x4],0xffffffff
1001e544:	mov    eax,DWORD PTR [ebp-0x18]
1001e547:	cmp    eax,esi
1001e549:	je     0x1001e555
1001e54b:	mov    ecx,DWORD PTR [eax]
1001e54d:	push   eax
1001e54e:	call   DWORD PTR [ecx+0x8]
1001e551:	jmp    0x1001e555
1001e553:	xor    esi,esi
1001e555:	cmp    BYTE PTR [ebp+0xc],0x0
1001e559:	jne    0x1001e640
1001e55f:	mov    eax,DWORD PTR [edi]
1001e561:	cmp    eax,esi
1001e563:	mov    DWORD PTR [ebp+0xc],esi
1001e566:	je     0x1001e576
1001e568:	mov    ecx,DWORD PTR [eax]
1001e56a:	lea    edx,[ebp+0xc]
1001e56d:	push   edx
1001e56e:	push   0x10070968
1001e573:	push   eax
1001e574:	call   DWORD PTR [ecx]
1001e576:	mov    DWORD PTR [ebp-0x4],0x1
1001e57d:	mov    eax,DWORD PTR [ebp+0xc]
1001e580:	cmp    eax,esi
1001e582:	je     0x1001e59d
1001e584:	cmp    DWORD PTR [ebp+0x10],esi
1001e587:	mov    ecx,DWORD PTR [eax]
1001e589:	je     0x1001e594
1001e58b:	push   DWORD PTR [ebp+0x10]
1001e58e:	push   eax
1001e58f:	call   DWORD PTR [ecx+0x14]
1001e592:	jmp    0x1001e598
1001e594:	push   eax
1001e595:	call   DWORD PTR [ecx+0x20]
1001e598:	mov    DWORD PTR [ebp-0x10],eax
1001e59b:	jmp    0x1001e5e7
1001e59d:	cmp    DWORD PTR [ebp+0x10],esi
1001e5a0:	je     0x1001e632
1001e5a6:	mov    ecx,DWORD PTR [edi]
1001e5a8:	xor    eax,eax
1001e5aa:	cmp    ecx,esi
1001e5ac:	mov    DWORD PTR [ebp-0x18],eax
1001e5af:	je     0x1001e5c2
1001e5b1:	mov    eax,DWORD PTR [ecx]
1001e5b3:	lea    edx,[ebp-0x18]
1001e5b6:	push   edx
1001e5b7:	push   0x10070958
1001e5bc:	push   ecx
1001e5bd:	call   DWORD PTR [eax]
1001e5bf:	mov    eax,DWORD PTR [ebp-0x18]
1001e5c2:	cmp    eax,esi
1001e5c4:	mov    BYTE PTR [ebp-0x4],0x2
1001e5c8:	je     0x1001e5d9
1001e5ca:	push   DWORD PTR [ebp+0x10]
1001e5cd:	mov    ecx,DWORD PTR [eax]
1001e5cf:	push   eax
1001e5d0:	call   DWORD PTR [ecx+0x14]
1001e5d3:	mov    DWORD PTR [ebp-0x10],eax
1001e5d6:	mov    eax,DWORD PTR [ebp-0x18]
1001e5d9:	cmp    eax,esi
1001e5db:	mov    BYTE PTR [ebp-0x4],0x1
1001e5df:	je     0x1001e5e7
1001e5e1:	mov    ecx,DWORD PTR [eax]
1001e5e3:	push   eax
1001e5e4:	call   DWORD PTR [ecx+0x8]
1001e5e7:	cmp    DWORD PTR [ebp-0x10],esi
1001e5ea:	jge    0x1001e62f
1001e5ec:	mov    ebx,DWORD PTR [ebp-0x20]
1001e5ef:	test   DWORD PTR [ebx],0x20000
1001e5f5:	je     0x1001e600
1001e5f7:	mov    eax,DWORD PTR [edi]
1001e5f9:	mov    ecx,DWORD PTR [eax]
1001e5fb:	push   esi
1001e5fc:	push   eax
1001e5fd:	call   DWORD PTR [ecx+0xc]
1001e600:	mov    DWORD PTR [ebx],esi
1001e602:	mov    eax,DWORD PTR [edi]
1001e604:	cmp    eax,esi
1001e606:	je     0x1001e610
1001e608:	mov    DWORD PTR [edi],esi
1001e60a:	mov    ecx,DWORD PTR [eax]
1001e60c:	push   eax
1001e60d:	call   DWORD PTR [ecx+0x8]
1001e610:	mov    ecx,DWORD PTR [ebp-0x24]
1001e613:	mov    eax,DWORD PTR [ecx]
1001e615:	cmp    eax,esi
1001e617:	je     0x1001e621
1001e619:	mov    DWORD PTR [ecx],esi
1001e61b:	mov    ecx,DWORD PTR [eax]
1001e61d:	push   eax
1001e61e:	call   DWORD PTR [ecx+0x8]
1001e621:	or     DWORD PTR [ebp-0x4],0xffffffff
1001e625:	mov    eax,DWORD PTR [ebp+0xc]
1001e628:	cmp    eax,esi
1001e62a:	jmp    0x1001e88d
1001e62f:	mov    eax,DWORD PTR [ebp+0xc]
1001e632:	or     DWORD PTR [ebp-0x4],0xffffffff
1001e636:	cmp    eax,esi
1001e638:	je     0x1001e640
1001e63a:	mov    ecx,DWORD PTR [eax]
1001e63c:	push   eax
1001e63d:	call   DWORD PTR [ecx+0x8]
1001e640:	mov    eax,DWORD PTR [ebp-0x20]
1001e643:	test   DWORD PTR [eax],0x20000
1001e649:	jne    0x1001e68a
1001e64b:	mov    eax,DWORD PTR [ebx]
1001e64d:	mov    ecx,ebx
1001e64f:	call   DWORD PTR [eax+0x10]
1001e652:	cmp    eax,esi
1001e654:	mov    DWORD PTR [ebp+0xc],esi
1001e657:	je     0x1001e667
1001e659:	mov    ecx,DWORD PTR [eax]
1001e65b:	lea    edx,[ebp+0xc]
1001e65e:	push   edx
1001e65f:	push   0x10070310
1001e664:	push   eax
1001e665:	call   DWORD PTR [ecx]
1001e667:	mov    DWORD PTR [ebp-0x4],0x3
1001e66e:	mov    eax,DWORD PTR [edi]
1001e670:	push   DWORD PTR [ebp+0xc]
1001e673:	mov    ecx,DWORD PTR [eax]
1001e675:	push   eax
1001e676:	call   DWORD PTR [ecx+0xc]
1001e679:	or     DWORD PTR [ebp-0x4],0xffffffff
1001e67d:	mov    eax,DWORD PTR [ebp+0xc]
1001e680:	cmp    eax,esi
1001e682:	je     0x1001e68a
1001e684:	mov    ecx,DWORD PTR [eax]
1001e686:	push   eax
1001e687:	call   DWORD PTR [ecx+0x8]
1001e68a:	mov    eax,DWORD PTR [edi]
1001e68c:	mov    DWORD PTR [ebx+0x90],esi
1001e692:	mov    ecx,DWORD PTR [eax]
1001e694:	lea    esi,[ebx+0x70]
1001e697:	push   esi
1001e698:	push   0x10070a38
1001e69d:	push   eax
1001e69e:	call   DWORD PTR [ecx]
1001e6a0:	test   eax,eax
1001e6a2:	mov    DWORD PTR [ebp-0x10],eax
1001e6a5:	jge    0x1001e6c7
1001e6a7:	mov    eax,DWORD PTR [edi]
1001e6a9:	mov    ecx,DWORD PTR [eax]
1001e6ab:	push   esi
1001e6ac:	push   0x10070a48
1001e6b1:	push   eax
1001e6b2:	call   DWORD PTR [ecx]
1001e6b4:	test   eax,eax
1001e6b6:	mov    DWORD PTR [ebp-0x10],eax
1001e6b9:	jl     0x1001e6d3
1001e6bb:	mov    DWORD PTR [ebx+0x90],0x3
1001e6c5:	jmp    0x1001e6f1
1001e6c7:	mov    DWORD PTR [ebx+0x90],0x7
1001e6d1:	jmp    0x1001e6f1
1001e6d3:	mov    eax,DWORD PTR [edi]
1001e6d5:	mov    ecx,DWORD PTR [eax]
1001e6d7:	push   esi
1001e6d8:	push   0x10070a58
1001e6dd:	push   eax
1001e6de:	call   DWORD PTR [ecx]
1001e6e0:	test   eax,eax
1001e6e2:	mov    DWORD PTR [ebp-0x10],eax
1001e6e5:	jl     0x1001e6f1
1001e6e7:	mov    DWORD PTR [ebx+0x90],0x1
1001e6f1:	mov    eax,DWORD PTR [ebx]
1001e6f3:	mov    ecx,ebx
1001e6f5:	call   DWORD PTR [eax+0x10]
1001e6f8:	and    DWORD PTR [ebp-0x14],0x0
1001e6fc:	test   eax,eax
1001e6fe:	je     0x1001e70e
1001e700:	mov    ecx,DWORD PTR [eax]
1001e702:	lea    edx,[ebp-0x14]
1001e705:	push   edx
1001e706:	push   0x10070260
1001e70b:	push   eax
1001e70c:	call   DWORD PTR [ecx]
1001e70e:	lea    edx,[ebx+0x9c]
1001e714:	mov    DWORD PTR [ebp-0x4],0x4
1001e71b:	mov    eax,DWORD PTR [edi]
1001e71d:	mov    ecx,DWORD PTR [eax]
1001e71f:	push   edx
1001e720:	push   DWORD PTR [ebp-0x14]
1001e723:	push   eax
1001e724:	call   DWORD PTR [ecx+0x4c]
1001e727:	mov    esi,DWORD PTR [esi]
1001e729:	test   esi,esi
1001e72b:	je     0x1001e73a
1001e72d:	push   DWORD PTR [ebp-0x14]
1001e730:	mov    eax,DWORD PTR [esi]
1001e732:	push   0x0
1001e734:	push   0x1
1001e736:	push   esi
1001e737:	call   DWORD PTR [eax+0x1c]
1001e73a:	mov    edi,DWORD PTR [edi]
1001e73c:	mov    eax,DWORD PTR [edi]
1001e73e:	push   0x0
1001e740:	push   0x10070514
1001e745:	push   edi
1001e746:	call   DWORD PTR [eax+0x14]
1001e749:	test   WORD PTR [ebx+0xa0],0x400
1001e752:	jne    0x1001e83e
1001e758:	lea    esi,[ebx+0xb4]
1001e75e:	push   esi
1001e75f:	push   DWORD PTR [ebx+0x4]
1001e762:	call   DWORD PTR ds:0x100662d4
1001e768:	mov    eax,DWORD PTR [ebx+0xbc]
1001e76e:	sub    eax,DWORD PTR [esi]
1001e770:	lea    edi,[ebx+0xac]
1001e776:	mov    DWORD PTR [edi],eax
1001e778:	mov    eax,DWORD PTR [ebx+0xc0]
1001e77e:	sub    eax,DWORD PTR [ebx+0xb8]
1001e784:	lea    esi,[ebx+0xa4]
1001e78a:	mov    DWORD PTR [ebx+0xb0],eax
1001e790:	call   0x1001bf80
1001e795:	mov    eax,DWORD PTR [ebx+0x64]
1001e798:	mov    ecx,DWORD PTR [eax]
1001e79a:	lea    edi,[ebx+0xa4]
1001e7a0:	push   edi
1001e7a1:	push   0x1
1001e7a3:	push   eax
1001e7a4:	call   DWORD PTR [ecx+0x44]
1001e7a7:	mov    eax,DWORD PTR [ebx+0x64]
1001e7aa:	mov    ecx,DWORD PTR [eax]
1001e7ac:	push   edi
1001e7ad:	push   0x1
1001e7af:	push   eax
1001e7b0:	call   DWORD PTR [ecx+0x48]
1001e7b3:	lea    esi,[ebx+0xac]
1001e7b9:	call   0x1001bf17
1001e7be:	mov    eax,DWORD PTR [ebx+0xac]
1001e7c4:	lea    esi,[ebx+0xb4]
1001e7ca:	add    eax,DWORD PTR [esi]
1001e7cc:	mov    ecx,ebx
1001e7ce:	mov    DWORD PTR [ebx+0xbc],eax
1001e7d4:	mov    eax,DWORD PTR [ebx+0xb0]
1001e7da:	add    eax,DWORD PTR [ebx+0xb8]
1001e7e0:	mov    DWORD PTR [ebx+0xc0],eax
1001e7e6:	mov    eax,DWORD PTR [ebx]
1001e7e8:	call   DWORD PTR [eax+0x10]
1001e7eb:	xor    edi,edi
1001e7ed:	cmp    eax,edi
1001e7ef:	mov    DWORD PTR [ebp+0x10],edi
1001e7f2:	je     0x1001e802
1001e7f4:	mov    ecx,DWORD PTR [eax]
1001e7f6:	lea    edx,[ebp+0x10]
1001e7f9:	push   edx
1001e7fa:	push   0x10070310
1001e7ff:	push   eax
1001e800:	call   DWORD PTR [ecx]
1001e802:	push   esi
1001e803:	mov    BYTE PTR [ebp-0x4],0x5
1001e807:	push   DWORD PTR [ebx+0x4]
1001e80a:	mov    eax,DWORD PTR [ebx+0x64]
1001e80d:	mov    ecx,DWORD PTR [eax]
1001e80f:	push   edi
1001e810:	push   DWORD PTR [ebp+0x10]
1001e813:	push   edi
1001e814:	push   0xfffffffb
1001e816:	push   eax
1001e817:	call   DWORD PTR [ecx+0x2c]
1001e81a:	push   0x507
1001e81f:	push   edi
1001e820:	push   edi
1001e821:	push   DWORD PTR [ebx+0x4]
1001e824:	mov    DWORD PTR [ebp-0x10],eax
1001e827:	call   DWORD PTR ds:0x10066360
1001e82d:	mov    BYTE PTR [ebp-0x4],0x4
1001e831:	mov    eax,DWORD PTR [ebp+0x10]
1001e834:	cmp    eax,edi
1001e836:	je     0x1001e83e
1001e838:	mov    ecx,DWORD PTR [eax]
1001e83a:	push   eax
1001e83b:	call   DWORD PTR [ecx+0x8]
1001e83e:	or     DWORD PTR [ebp-0x4],0xffffffff
1001e842:	mov    eax,DWORD PTR [ebp-0x14]
1001e845:	test   eax,eax
1001e847:	je     0x1001e84f
1001e849:	mov    ecx,DWORD PTR [eax]
1001e84b:	push   eax
1001e84c:	call   DWORD PTR [ecx+0x8]
1001e84f:	mov    esi,DWORD PTR [ebp+0x8]
1001e852:	and    DWORD PTR [ebp-0x1c],0x0
1001e856:	lea    ecx,[ebp-0x1c]
1001e859:	push   ecx
1001e85a:	push   0x100702b0
1001e85f:	mov    DWORD PTR [ebp-0x4],0x6
1001e866:	mov    eax,DWORD PTR [esi]
1001e868:	push   esi
1001e869:	call   DWORD PTR [eax]
1001e86b:	mov    eax,DWORD PTR [ebp-0x1c]
1001e86e:	test   eax,eax
1001e870:	je     0x1001e887
1001e872:	mov    edi,DWORD PTR [eax]
1001e874:	mov    esi,eax
1001e876:	mov    eax,DWORD PTR [ebx]
1001e878:	mov    ecx,ebx
1001e87a:	add    edi,0xc
1001e87d:	call   DWORD PTR [eax+0x10]
1001e880:	push   eax
1001e881:	push   esi
1001e882:	call   DWORD PTR [edi]
1001e884:	mov    eax,DWORD PTR [ebp-0x1c]
1001e887:	or     DWORD PTR [ebp-0x4],0xffffffff
1001e88b:	test   eax,eax
1001e88d:	je     0x1001e895
1001e88f:	mov    ecx,DWORD PTR [eax]
1001e891:	push   eax
1001e892:	call   DWORD PTR [ecx+0x8]
1001e895:	mov    eax,DWORD PTR [ebp-0x10]
1001e898:	call   0x10059bfd
1001e89d:	ret    0xc
1001e8a0:	mov    eax,DWORD PTR [esi]
1001e8a2:	push   edi
1001e8a3:	push   esi
1001e8a4:	mov    ecx,esi
1001e8a6:	call   DWORD PTR [eax+0x8]
1001e8a9:	lea    edi,[esi+0x8]
1001e8ac:	call   0x1001becf
1001e8b1:	test   eax,eax
1001e8b3:	pop    edi
1001e8b4:	jne    0x1001e8ba
1001e8b6:	xor    eax,eax
1001e8b8:	jmp    0x1001e8d3
1001e8ba:	push   DWORD PTR [esi+0x14]
1001e8bd:	push   0xfffffffc
1001e8bf:	push   ebx
1001e8c0:	call   DWORD PTR ds:0x10066358
1001e8c6:	test   eax,eax
1001e8c8:	je     0x1001e8b6
1001e8ca:	mov    DWORD PTR [esi+0x20],eax
1001e8cd:	xor    eax,eax
1001e8cf:	mov    DWORD PTR [esi+0x4],ebx
1001e8d2:	inc    eax
1001e8d3:	lea    ecx,[esi+0xc8]
1001e8d9:	shl    eax,0x4
1001e8dc:	xor    eax,DWORD PTR [ecx]
1001e8de:	and    eax,0x10
1001e8e1:	xor    DWORD PTR [ecx],eax
1001e8e3:	ret    
1001e8e4:	test   BYTE PTR [esi+0xc8],0x10
1001e8eb:	je     0x1001e927
1001e8ed:	push   0xfffffffc
1001e8ef:	push   DWORD PTR [esi+0x4]
1001e8f2:	call   DWORD PTR ds:0x10066310
1001e8f8:	mov    eax,DWORD PTR [esi+0x20]
1001e8fb:	mov    ecx,DWORD PTR [esi+0x4]
1001e8fe:	push   eax
1001e8ff:	push   0xfffffffc
1001e901:	push   ecx
1001e902:	call   DWORD PTR ds:0x10066358
1001e908:	test   eax,eax
1001e90a:	je     0x1001e930
1001e90c:	mov    eax,ds:0x1006633c
1001e911:	mov    DWORD PTR [esi+0x20],eax
1001e914:	mov    eax,DWORD PTR [esi+0x4]
1001e917:	and    DWORD PTR [esi+0x4],0x0
1001e91b:	test   eax,eax
1001e91d:	je     0x1001e930
1001e91f:	and    DWORD PTR [esi+0xc8],0xffffffef
1001e926:	ret    
1001e927:	push   DWORD PTR [esi+0x4]
1001e92a:	call   DWORD PTR ds:0x10066304
1001e930:	ret    
1001e931:	push   ebp
1001e932:	mov    ebp,esp
1001e934:	push   ebx
1001e935:	mov    ebx,eax
1001e937:	cmp    ebx,0x4e
1001e93a:	ja     0x1001e99e
1001e93c:	je     0x1001e99a
1001e93e:	cmp    ebx,0x2b
1001e941:	je     0x1001e983
1001e943:	cmp    ebx,0x2c
1001e946:	je     0x1001e975
1001e948:	cmp    ebx,0x2d
1001e94b:	je     0x1001e96d
1001e94d:	jbe    0x1001ea10
1001e953:	cmp    ebx,0x2f
1001e956:	jbe    0x1001ea0a
1001e95c:	cmp    ebx,0x39
1001e95f:	jne    0x1001ea10
1001e965:	mov    eax,DWORD PTR [esi+0x8]
1001e968:	jmp    0x1001ea0c
1001e96d:	mov    eax,DWORD PTR [esi+0xc]
1001e970:	jmp    0x1001ea0c
1001e975:	cmp    DWORD PTR [esi],0x1
1001e978:	je     0x1001ea10
1001e97e:	push   DWORD PTR [esi+0x4]
1001e981:	jmp    0x1001e9fb
1001e983:	cmp    DWORD PTR [esi],0x1
1001e986:	jne    0x1001e995
1001e988:	push   DWORD PTR [esi+0x14]
1001e98b:	call   DWORD PTR ds:0x10066320
1001e991:	test   eax,eax
1001e993:	je     0x1001ea10
1001e995:	mov    eax,DWORD PTR [esi+0x14]
1001e998:	jmp    0x1001ea0c
1001e99a:	mov    eax,DWORD PTR [esi]
1001e99c:	jmp    0x1001ea0c
1001e99e:	cmp    ebx,0x111
1001e9a4:	je     0x1001ea06
1001e9a6:	cmp    ebx,0x113
1001e9ac:	jbe    0x1001ea10
1001e9ae:	cmp    ebx,0x115
1001e9b4:	jbe    0x1001ea0a
1001e9b6:	cmp    ebx,0x131
1001e9bc:	jbe    0x1001ea10
1001e9be:	cmp    ebx,0x138
1001e9c4:	jbe    0x1001ea0a
1001e9c6:	cmp    ebx,0x210
1001e9cc:	jne    0x1001ea10
1001e9ce:	mov    eax,DWORD PTR [edi+0x18]
1001e9d1:	test   eax,eax
1001e9d3:	je     0x1001e9ea
1001e9d5:	push   DWORD PTR [eax+0xc]
1001e9d8:	push   DWORD PTR [eax+0x8]
1001e9db:	push   DWORD PTR [eax+0x4]
1001e9de:	push   DWORD PTR [edi+0x4]
1001e9e1:	push   DWORD PTR [edi+0x20]
1001e9e4:	call   DWORD PTR ds:0x10066338
1001e9ea:	movzx  eax,WORD PTR [ebp+0x8]
1001e9ee:	dec    eax
1001e9ef:	cmp    eax,0x1
1001e9f2:	jbe    0x1001ea0a
1001e9f4:	mov    eax,DWORD PTR [ebp+0x8]
1001e9f7:	shr    eax,0x10
1001e9fa:	push   eax
1001e9fb:	push   DWORD PTR [edi+0x4]
1001e9fe:	call   DWORD PTR ds:0x10066354
1001ea04:	jmp    0x1001ea0c
1001ea06:	test   esi,esi
1001ea08:	je     0x1001ea10
1001ea0a:	mov    eax,esi
1001ea0c:	test   eax,eax
1001ea0e:	jne    0x1001ea1b
1001ea10:	mov    eax,DWORD PTR [ebp+0xc]
1001ea13:	and    DWORD PTR [eax],0x0
1001ea16:	xor    eax,eax
1001ea18:	inc    eax
1001ea19:	jmp    0x1001ea62
1001ea1b:	mov    ecx,DWORD PTR [edi+0x98]
1001ea21:	test   cl,0x8
1001ea24:	je     0x1001ea50
1001ea26:	and    DWORD PTR [ebp+0xc],0x0
1001ea2a:	test   cl,0x1
1001ea2d:	je     0x1001ea4b
1001ea2f:	mov    eax,DWORD PTR [edi+0x74]
1001ea32:	test   eax,eax
1001ea34:	je     0x1001ea4b
1001ea36:	mov    ecx,DWORD PTR [eax]
1001ea38:	lea    edx,[ebp+0xc]
1001ea3b:	push   edx
1001ea3c:	push   esi
1001ea3d:	push   DWORD PTR [ebp+0x8]
1001ea40:	add    ebx,0x2000
1001ea46:	push   ebx
1001ea47:	push   eax
1001ea48:	call   DWORD PTR [ecx+0x24]
1001ea4b:	mov    eax,DWORD PTR [ebp+0xc]
1001ea4e:	jmp    0x1001ea62
1001ea50:	push   esi
1001ea51:	push   DWORD PTR [ebp+0x8]
1001ea54:	add    ebx,0x2000
1001ea5a:	push   ebx
1001ea5b:	push   eax
1001ea5c:	call   DWORD PTR ds:0x10066330
1001ea62:	pop    ebx
1001ea63:	pop    ebp
1001ea64:	ret    0x8
1001ea67:	mov    edx,DWORD PTR [esp+0x10]
1001ea6b:	test   edx,edx
1001ea6d:	jne    0x1001ea76
1001ea6f:	mov    eax,0x80004003
1001ea74:	jmp    0x1001ea9b
1001ea76:	and    DWORD PTR [edx],0x0
1001ea79:	mov    ecx,DWORD PTR [esp+0x4]
1001ea7d:	mov    ecx,DWORD PTR [ecx+0x9c]
1001ea83:	test   ecx,ecx
1001ea85:	mov    eax,0x80004002
1001ea8a:	je     0x1001ea9b
1001ea8c:	mov    eax,DWORD PTR [ecx]
1001ea8e:	push   edx
1001ea8f:	push   DWORD PTR [esp+0x10]
1001ea93:	push   DWORD PTR [esp+0x10]
1001ea97:	push   ecx
1001ea98:	call   DWORD PTR [eax+0xc]
1001ea9b:	ret    0x10
1001ea9e:	push   0x1c
1001eaa0:	mov    eax,0x1006026b
1001eaa5:	call   0x10059b8e
1001eaaa:	mov    eax,DWORD PTR [ebp+0xc]
1001eaad:	dec    eax
1001eaae:	je     0x1001eb20
1001eab0:	sub    eax,0x81
1001eab5:	je     0x1001eb00
1001eab7:	sub    eax,0x18e
1001eabc:	jne    0x1001ec9c
1001eac2:	cmp    DWORD PTR [ebp+0x10],0x1
1001eac6:	jne    0x1001ec9c
1001eacc:	mov    esi,DWORD PTR ds:0x10066310
1001ead2:	push   0xffffffec
1001ead4:	push   DWORD PTR [ebp+0x14]
1001ead7:	call   esi
1001ead9:	mov    ebx,0x10000
1001eade:	test   ebx,eax
1001eae0:	je     0x1001ec9c
1001eae6:	push   0xffffffec
1001eae8:	push   DWORD PTR [ebp+0x8]
1001eaeb:	call   esi
1001eaed:	or     eax,ebx
1001eaef:	push   eax
1001eaf0:	push   0xffffffec
1001eaf2:	push   DWORD PTR [ebp+0x8]
1001eaf5:	call   DWORD PTR ds:0x10066358
1001eafb:	jmp    0x1001ec9c
1001eb00:	push   0xffffffeb
1001eb02:	push   DWORD PTR [ebp+0x8]
1001eb05:	call   DWORD PTR ds:0x10066310
1001eb0b:	test   eax,eax
1001eb0d:	je     0x1001eb15
1001eb0f:	mov    ecx,DWORD PTR [eax]
1001eb11:	push   eax
1001eb12:	call   DWORD PTR [ecx+0x8]
1001eb15:	call   DWORD PTR ds:0x10066410
1001eb1b:	jmp    0x1001ec9c
1001eb20:	xor    edi,edi
1001eb22:	push   edi
1001eb23:	call   DWORD PTR ds:0x10066414
1001eb29:	push   DWORD PTR [ebp+0x8]
1001eb2c:	call   DWORD PTR ds:0x1006635c
1001eb32:	mov    esi,eax
1001eb34:	lea    eax,[esi+esi*1+0xa]
1001eb38:	cmp    eax,0x400
1001eb3d:	ja     0x1001eb52
1001eb3f:	call   0x1004b7e0
1001eb44:	mov    eax,esp
1001eb46:	cmp    eax,edi
1001eb48:	je     0x1001eb66
1001eb4a:	mov    DWORD PTR [eax],0xcccc
1001eb50:	jmp    0x1001eb63
1001eb52:	push   eax
1001eb53:	call   0x1004507d
1001eb58:	cmp    eax,edi
1001eb5a:	pop    ecx
1001eb5b:	je     0x1001eb66
1001eb5d:	mov    DWORD PTR [eax],0xdddd
1001eb63:	add    eax,0x8
1001eb66:	mov    DWORD PTR [ebp-0x1c],eax
1001eb69:	mov    DWORD PTR [ebp-0x24],eax
1001eb6c:	cmp    eax,edi
1001eb6e:	mov    DWORD PTR [ebp-0x4],edi
1001eb71:	jne    0x1001eb82
1001eb73:	push   edi
1001eb74:	call   0x1001b6bb
1001eb79:	pop    ecx
1001eb7a:	or     eax,0xffffffff
1001eb7d:	jmp    0x1001ecae
1001eb82:	inc    esi
1001eb83:	push   esi
1001eb84:	push   eax
1001eb85:	push   DWORD PTR [ebp+0x8]
1001eb88:	call   DWORD PTR ds:0x10066314
1001eb8e:	push   0x1006d1a4
1001eb93:	push   DWORD PTR [ebp+0x8]
1001eb96:	call   DWORD PTR ds:0x10066334
1001eb9c:	mov    eax,DWORD PTR [ebp+0x14]
1001eb9f:	xor    esi,esi
1001eba1:	cmp    eax,edi
1001eba3:	mov    DWORD PTR [ebp-0x20],edi
1001eba6:	je     0x1001ebb1
1001eba8:	mov    eax,DWORD PTR [eax]
1001ebaa:	cmp    eax,edi
1001ebac:	je     0x1001ebb1
1001ebae:	movzx  esi,WORD PTR [eax]
1001ebb1:	push   esi
1001ebb2:	push   0x42
1001ebb4:	call   DWORD PTR ds:0x10066148
1001ebba:	mov    ebx,eax
1001ebbc:	mov    DWORD PTR [ebp-0x14],edi
1001ebbf:	cmp    ebx,edi
1001ebc1:	mov    BYTE PTR [ebp-0x4],0x1
1001ebc5:	je     0x1001ebf9
1001ebc7:	cmp    esi,edi
1001ebc9:	je     0x1001ebf9
1001ebcb:	push   ebx
1001ebcc:	call   DWORD PTR ds:0x10066144
1001ebd2:	mov    ecx,DWORD PTR [ebp+0x14]
1001ebd5:	mov    ecx,DWORD PTR [ecx]
1001ebd7:	inc    ecx
1001ebd8:	push   esi
1001ebd9:	inc    ecx
1001ebda:	push   ecx
1001ebdb:	push   esi
1001ebdc:	push   eax
1001ebdd:	call   0x10014450
1001ebe2:	add    esp,0x10
1001ebe5:	push   ebx
1001ebe6:	call   DWORD PTR ds:0x10066154
1001ebec:	lea    eax,[ebp-0x14]
1001ebef:	push   eax
1001ebf0:	push   0x1
1001ebf2:	push   ebx
1001ebf3:	call   DWORD PTR ds:0x1006641c
1001ebf9:	call   DWORD PTR ds:0x1007efec
1001ebff:	mov    DWORD PTR [ebp-0x28],edi
1001ec02:	mov    DWORD PTR [ebp-0x18],edi
1001ec05:	push   edi
1001ec06:	mov    edi,DWORD PTR [ebp-0x1c]
1001ec09:	mov    BYTE PTR [ebp-0x4],0x3
1001ec0d:	push   DWORD PTR [ebp-0x14]
1001ec10:	lea    ebx,[ebp-0x18]
1001ec13:	push   DWORD PTR [ebp+0x8]
1001ec16:	push   edi
1001ec17:	call   0x1001ef11
1001ec1c:	xor    ebx,ebx
1001ec1e:	cmp    eax,ebx
1001ec20:	jge    0x1001ec4c
1001ec22:	mov    BYTE PTR [ebp-0x4],0x2
1001ec26:	mov    eax,DWORD PTR [ebp-0x18]
1001ec29:	cmp    eax,ebx
1001ec2b:	je     0x1001ec33
1001ec2d:	mov    ecx,DWORD PTR [eax]
1001ec2f:	push   eax
1001ec30:	call   DWORD PTR [ecx+0x8]
1001ec33:	mov    BYTE PTR [ebp-0x4],bl
1001ec36:	mov    eax,DWORD PTR [ebp-0x14]
1001ec39:	cmp    eax,ebx
1001ec3b:	je     0x1001eb73
1001ec41:	mov    ecx,DWORD PTR [eax]
1001ec43:	push   eax
1001ec44:	call   DWORD PTR [ecx+0x8]
1001ec47:	jmp    0x1001eb73
1001ec4c:	mov    esi,DWORD PTR [ebp-0x18]
1001ec4f:	mov    eax,DWORD PTR [esi]
1001ec51:	lea    ecx,[ebp-0x20]
1001ec54:	push   ecx
1001ec55:	push   0x10070330
1001ec5a:	push   esi
1001ec5b:	call   DWORD PTR [eax]
1001ec5d:	cmp    eax,ebx
1001ec5f:	jge    0x1001ec6d
1001ec61:	mov    BYTE PTR [ebp-0x4],0x2
1001ec65:	mov    eax,DWORD PTR [esi]
1001ec67:	push   esi
1001ec68:	call   DWORD PTR [eax+0x8]
1001ec6b:	jmp    0x1001ec33
1001ec6d:	push   DWORD PTR [ebp-0x20]
1001ec70:	push   0xffffffeb
1001ec72:	push   DWORD PTR [ebp+0x8]
1001ec75:	call   DWORD PTR ds:0x10066358
1001ec7b:	mov    BYTE PTR [ebp-0x4],0x2
1001ec7f:	mov    eax,DWORD PTR [esi]
1001ec81:	push   esi
1001ec82:	call   DWORD PTR [eax+0x8]
1001ec85:	mov    BYTE PTR [ebp-0x4],bl
1001ec88:	mov    eax,DWORD PTR [ebp-0x14]
1001ec8b:	cmp    eax,ebx
1001ec8d:	je     0x1001ec95
1001ec8f:	mov    ecx,DWORD PTR [eax]
1001ec91:	push   eax
1001ec92:	call   DWORD PTR [ecx+0x8]
1001ec95:	push   edi
1001ec96:	call   0x1001b6bb
1001ec9b:	pop    ecx
1001ec9c:	push   DWORD PTR [ebp+0x14]
1001ec9f:	push   DWORD PTR [ebp+0x10]
1001eca2:	push   DWORD PTR [ebp+0xc]
1001eca5:	push   DWORD PTR [ebp+0x8]
1001eca8:	call   DWORD PTR ds:0x1006633c
1001ecae:	lea    esp,[ebp-0x38]
1001ecb1:	call   0x10059c11
1001ecb6:	ret    0x10
1001ecb9:	push   0x20
1001ecbb:	mov    eax,0x10060226
1001ecc0:	call   0x10059b8e
1001ecc5:	mov    eax,DWORD PTR [ebp+0xc]
1001ecc8:	dec    eax
1001ecc9:	je     0x1001ed3b
1001eccb:	sub    eax,0x81
1001ecd0:	je     0x1001ed1b
1001ecd2:	sub    eax,0x18e
1001ecd7:	jne    0x1001eef4
1001ecdd:	cmp    DWORD PTR [ebp+0x10],0x1
1001ece1:	jne    0x1001eef4
1001ece7:	mov    esi,DWORD PTR ds:0x10066310
1001eced:	push   0xffffffec
1001ecef:	push   DWORD PTR [ebp+0x14]
1001ecf2:	call   esi
1001ecf4:	mov    ebx,0x10000
1001ecf9:	test   ebx,eax
1001ecfb:	je     0x1001eef4
1001ed01:	push   0xffffffec
1001ed03:	push   DWORD PTR [ebp+0x8]
1001ed06:	call   esi
1001ed08:	or     eax,ebx
1001ed0a:	push   eax
1001ed0b:	push   0xffffffec
1001ed0d:	push   DWORD PTR [ebp+0x8]
1001ed10:	call   DWORD PTR ds:0x10066358
1001ed16:	jmp    0x1001eef4
1001ed1b:	push   0xffffffeb
1001ed1d:	push   DWORD PTR [ebp+0x8]
1001ed20:	call   DWORD PTR ds:0x10066310
1001ed26:	test   eax,eax
1001ed28:	je     0x1001ed30
1001ed2a:	mov    ecx,DWORD PTR [eax]
1001ed2c:	push   eax
1001ed2d:	call   DWORD PTR [ecx+0x8]
1001ed30:	call   DWORD PTR ds:0x10066410
1001ed36:	jmp    0x1001eef4
1001ed3b:	xor    edi,edi
1001ed3d:	push   edi
1001ed3e:	call   DWORD PTR ds:0x10066414
1001ed44:	push   DWORD PTR [ebp+0x8]
1001ed47:	call   DWORD PTR ds:0x1006635c
1001ed4d:	mov    esi,eax
1001ed4f:	lea    eax,[esi+esi*1+0xa]
1001ed53:	cmp    eax,0x400
1001ed58:	ja     0x1001ed6d
1001ed5a:	call   0x1004b7e0
1001ed5f:	mov    eax,esp
1001ed61:	cmp    eax,edi
1001ed63:	je     0x1001ed81
1001ed65:	mov    DWORD PTR [eax],0xcccc
1001ed6b:	jmp    0x1001ed7e
1001ed6d:	push   eax
1001ed6e:	call   0x1004507d
1001ed73:	cmp    eax,edi
1001ed75:	pop    ecx
1001ed76:	je     0x1001ed81
1001ed78:	mov    DWORD PTR [eax],0xdddd
1001ed7e:	add    eax,0x8
1001ed81:	mov    DWORD PTR [ebp-0x18],eax
1001ed84:	mov    DWORD PTR [ebp-0x28],eax
1001ed87:	cmp    eax,edi
1001ed89:	mov    DWORD PTR [ebp-0x4],edi
1001ed8c:	jne    0x1001ed9d
1001ed8e:	push   edi
1001ed8f:	call   0x1001b6bb
1001ed94:	pop    ecx
1001ed95:	or     eax,0xffffffff
1001ed98:	jmp    0x1001ef06
1001ed9d:	inc    esi
1001ed9e:	push   esi
1001ed9f:	push   eax
1001eda0:	push   DWORD PTR [ebp+0x8]
1001eda3:	call   DWORD PTR ds:0x10066314
1001eda9:	push   0x1006d1a4
1001edae:	push   DWORD PTR [ebp+0x8]
1001edb1:	call   DWORD PTR ds:0x10066334
1001edb7:	mov    eax,DWORD PTR [ebp+0x14]
1001edba:	xor    ebx,ebx
1001edbc:	cmp    eax,edi
1001edbe:	mov    DWORD PTR [ebp-0x24],edi
1001edc1:	je     0x1001edcc
1001edc3:	mov    eax,DWORD PTR [eax]
1001edc5:	cmp    eax,edi
1001edc7:	je     0x1001edcc
1001edc9:	movzx  ebx,WORD PTR [eax]
1001edcc:	push   ebx
1001edcd:	push   0x42
1001edcf:	call   DWORD PTR ds:0x10066148
1001edd5:	mov    esi,eax
1001edd7:	mov    DWORD PTR [ebp-0x14],edi
1001edda:	cmp    esi,edi
1001eddc:	mov    BYTE PTR [ebp-0x4],0x1
1001ede0:	je     0x1001ee14
1001ede2:	cmp    ebx,edi
1001ede4:	je     0x1001ee14
1001ede6:	push   esi
1001ede7:	call   DWORD PTR ds:0x10066144
1001eded:	mov    ecx,DWORD PTR [ebp+0x14]
1001edf0:	mov    ecx,DWORD PTR [ecx]
1001edf2:	inc    ecx
1001edf3:	push   ebx
1001edf4:	inc    ecx
1001edf5:	push   ecx
1001edf6:	push   ebx
1001edf7:	push   eax
1001edf8:	call   0x10014450
1001edfd:	add    esp,0x10
1001ee00:	push   esi
1001ee01:	call   DWORD PTR ds:0x10066154
1001ee07:	lea    eax,[ebp-0x14]
1001ee0a:	push   eax
1001ee0b:	push   0x1
1001ee0d:	push   esi
1001ee0e:	call   DWORD PTR ds:0x1006641c
1001ee14:	mov    DWORD PTR [ebp-0x20],edi
1001ee17:	lea    eax,[ebp-0x20]
1001ee1a:	mov    BYTE PTR [ebp-0x4],0x2
1001ee1e:	mov    ecx,DWORD PTR [ebp-0x14]
1001ee21:	push   eax
1001ee22:	call   0x1001bcf0
1001ee27:	cmp    eax,edi
1001ee29:	pop    ecx
1001ee2a:	jge    0x1001ee4e
1001ee2c:	push   DWORD PTR [ebp-0x20]
1001ee2f:	call   DWORD PTR ds:0x100662b4
1001ee35:	mov    BYTE PTR [ebp-0x4],0x0
1001ee39:	mov    eax,DWORD PTR [ebp-0x14]
1001ee3c:	cmp    eax,edi
1001ee3e:	je     0x1001ee46
1001ee40:	mov    ecx,DWORD PTR [eax]
1001ee42:	push   eax
1001ee43:	call   DWORD PTR [ecx+0x8]
1001ee46:	push   DWORD PTR [ebp-0x18]
1001ee49:	jmp    0x1001ed8f
1001ee4e:	call   DWORD PTR ds:0x1007efec
1001ee54:	mov    DWORD PTR [ebp-0x2c],edi
1001ee57:	mov    DWORD PTR [ebp-0x1c],edi
1001ee5a:	mov    BYTE PTR [ebp-0x4],0x4
1001ee5e:	mov    edi,DWORD PTR [ebp-0x20]
1001ee61:	push   edi
1001ee62:	push   DWORD PTR [ebp-0x14]
1001ee65:	lea    ebx,[ebp-0x1c]
1001ee68:	push   DWORD PTR [ebp+0x8]
1001ee6b:	push   DWORD PTR [ebp-0x18]
1001ee6e:	call   0x1001ef11
1001ee73:	xor    ebx,ebx
1001ee75:	cmp    eax,ebx
1001ee77:	jge    0x1001ee9b
1001ee79:	mov    BYTE PTR [ebp-0x4],0x3
1001ee7d:	mov    eax,DWORD PTR [ebp-0x1c]
1001ee80:	cmp    eax,ebx
1001ee82:	je     0x1001ee8a
1001ee84:	mov    ecx,DWORD PTR [eax]
1001ee86:	push   eax
1001ee87:	call   DWORD PTR [ecx+0x8]
1001ee8a:	push   edi
1001ee8b:	call   DWORD PTR ds:0x100662b4
1001ee91:	mov    BYTE PTR [ebp-0x4],bl
1001ee94:	mov    eax,DWORD PTR [ebp-0x14]
1001ee97:	cmp    eax,ebx
1001ee99:	jmp    0x1001ee3e
1001ee9b:	mov    esi,DWORD PTR [ebp-0x1c]
1001ee9e:	mov    eax,DWORD PTR [esi]
1001eea0:	lea    ecx,[ebp-0x24]
1001eea3:	push   ecx
1001eea4:	push   0x10070320
1001eea9:	push   esi
1001eeaa:	call   DWORD PTR [eax]
1001eeac:	cmp    eax,ebx
1001eeae:	jge    0x1001eebc
1001eeb0:	mov    BYTE PTR [ebp-0x4],0x3
1001eeb4:	mov    eax,DWORD PTR [esi]
1001eeb6:	push   esi
1001eeb7:	call   DWORD PTR [eax+0x8]
1001eeba:	jmp    0x1001ee8a
1001eebc:	push   DWORD PTR [ebp-0x24]
1001eebf:	push   0xffffffeb
1001eec1:	push   DWORD PTR [ebp+0x8]
1001eec4:	call   DWORD PTR ds:0x10066358
1001eeca:	mov    BYTE PTR [ebp-0x4],0x3
1001eece:	mov    eax,DWORD PTR [esi]
1001eed0:	push   esi
1001eed1:	call   DWORD PTR [eax+0x8]
1001eed4:	push   edi
1001eed5:	call   DWORD PTR ds:0x100662b4
1001eedb:	mov    BYTE PTR [ebp-0x4],bl
1001eede:	mov    eax,DWORD PTR [ebp-0x14]
1001eee1:	cmp    eax,ebx
1001eee3:	je     0x1001eeeb
1001eee5:	mov    ecx,DWORD PTR [eax]
1001eee7:	push   eax
1001eee8:	call   DWORD PTR [ecx+0x8]
1001eeeb:	push   DWORD PTR [ebp-0x18]
1001eeee:	call   0x1001b6bb
1001eef3:	pop    ecx
1001eef4:	push   DWORD PTR [ebp+0x14]
1001eef7:	push   DWORD PTR [ebp+0x10]
1001eefa:	push   DWORD PTR [ebp+0xc]
1001eefd:	push   DWORD PTR [ebp+0x8]
1001ef00:	call   DWORD PTR ds:0x1006633c
1001ef06:	lea    esp,[ebp-0x3c]
1001ef09:	call   0x10059c11
1001ef0e:	ret    0x10
1001ef11:	push   ebp
1001ef12:	mov    ebp,esp
1001ef14:	sub    esp,0xc
1001ef17:	push   esi
1001ef18:	push   edi
1001ef19:	call   0x1001efc1
1001ef1e:	lea    eax,[ebp-0x4]
1001ef21:	xor    edi,edi
1001ef23:	push   eax
1001ef24:	mov    DWORD PTR [ebp-0x4],edi
1001ef27:	mov    DWORD PTR [ebp-0xc],edi
1001ef2a:	call   0x10020448
1001ef2f:	mov    esi,eax
1001ef31:	cmp    esi,edi
1001ef33:	jl     0x1001ef8b
1001ef35:	mov    eax,DWORD PTR [ebp-0x4]
1001ef38:	lea    edx,[ebp-0x8]
1001ef3b:	push   edx
1001ef3c:	push   0x10070330
1001ef41:	mov    DWORD PTR [ebp-0x8],edi
1001ef44:	mov    ecx,DWORD PTR [eax]
1001ef46:	push   eax
1001ef47:	call   DWORD PTR [ecx]
1001ef49:	push   DWORD PTR [ebp+0x8]
1001ef4c:	lea    esi,[ebp+0x8]
1001ef4f:	call   0x1001b6d6
1001ef54:	push   DWORD PTR [ebp+0x14]
1001ef57:	mov    eax,DWORD PTR [ebp-0x8]
1001ef5a:	mov    ecx,DWORD PTR [eax]
1001ef5c:	push   edi
1001ef5d:	push   0x1006b858
1001ef62:	lea    edx,[ebp-0xc]
1001ef65:	push   edx
1001ef66:	push   DWORD PTR [ebp+0x10]
1001ef69:	push   DWORD PTR [ebp+0xc]
1001ef6c:	push   DWORD PTR [ebp+0x8]
1001ef6f:	push   eax
1001ef70:	call   DWORD PTR [ecx+0x28]
1001ef73:	push   DWORD PTR [ebp+0x8]
1001ef76:	mov    esi,eax
1001ef78:	call   DWORD PTR ds:0x100662b4
1001ef7e:	mov    eax,DWORD PTR [ebp-0x8]
1001ef81:	cmp    eax,edi
1001ef83:	je     0x1001ef8b
1001ef85:	mov    ecx,DWORD PTR [eax]
1001ef87:	push   eax
1001ef88:	call   DWORD PTR [ecx+0x8]
1001ef8b:	cmp    ebx,edi
1001ef8d:	je     0x1001ef9f
1001ef8f:	cmp    esi,edi
1001ef91:	jl     0x1001ef9d
1001ef93:	mov    eax,DWORD PTR [ebp-0x4]
1001ef96:	mov    DWORD PTR [ebx],eax
1001ef98:	mov    DWORD PTR [ebp-0x4],edi
1001ef9b:	jmp    0x1001ef9f
1001ef9d:	mov    DWORD PTR [ebx],edi
1001ef9f:	mov    eax,DWORD PTR [ebp-0xc]
1001efa2:	cmp    eax,edi
1001efa4:	je     0x1001efac
1001efa6:	mov    ecx,DWORD PTR [eax]
1001efa8:	push   eax
1001efa9:	call   DWORD PTR [ecx+0x8]
1001efac:	mov    eax,DWORD PTR [ebp-0x4]
1001efaf:	cmp    eax,edi
1001efb1:	je     0x1001efb9
1001efb3:	mov    ecx,DWORD PTR [eax]
1001efb5:	push   eax
1001efb6:	call   DWORD PTR [ecx+0x8]
1001efb9:	pop    edi
1001efba:	mov    eax,esi
1001efbc:	pop    esi
1001efbd:	leave  
1001efbe:	ret    0x10
1001efc1:	push   ebp
1001efc2:	mov    ebp,esp
1001efc4:	and    esp,0xfffffff8
1001efc7:	sub    esp,0x3c
1001efca:	push   ebx
1001efcb:	push   esi
1001efcc:	mov    eax,0x10080a40
1001efd1:	push   edi
1001efd2:	push   eax
1001efd3:	mov    DWORD PTR [esp+0x14],eax
1001efd7:	call   DWORD PTR ds:0x100660f0
1001efdd:	mov    esi,DWORD PTR ds:0x100662f4
1001efe3:	push   0x10070520
1001efe8:	mov    BYTE PTR [esp+0x18],0x1
1001efed:	call   esi
1001efef:	push   0x1007053c
1001eff4:	mov    ds:0x10080fd8,eax
1001eff9:	call   esi
1001effb:	push   0x30
1001effd:	pop    edi
1001effe:	mov    ds:0x10080fdc,eax
1001f003:	lea    eax,[esp+0x18]
1001f007:	push   eax
1001f008:	mov    esi,0x100704fc
1001f00d:	push   esi
1001f00e:	push   DWORD PTR ds:0x10080a04
1001f014:	mov    DWORD PTR [esp+0x24],edi
1001f018:	call   DWORD PTR ds:0x100662c4
1001f01e:	xor    ebx,ebx
1001f020:	cmp    eax,ebx
1001f022:	jne    0x1001f09b
1001f024:	mov    eax,ds:0x10080a04
1001f029:	push   0x7f00
1001f02e:	push   ebx
1001f02f:	mov    DWORD PTR [esp+0x20],edi
1001f033:	mov    DWORD PTR [esp+0x24],0x8
1001f03b:	mov    DWORD PTR [esp+0x28],0x1001ea9e
1001f043:	mov    DWORD PTR [esp+0x2c],ebx
1001f047:	mov    DWORD PTR [esp+0x30],ebx
1001f04b:	mov    DWORD PTR [esp+0x34],eax
1001f04f:	mov    DWORD PTR [esp+0x38],ebx
1001f053:	call   DWORD PTR ds:0x10066364
1001f059:	mov    DWORD PTR [esp+0x34],eax
1001f05d:	lea    eax,[esp+0x18]
1001f061:	push   eax
1001f062:	mov    DWORD PTR [esp+0x3c],0x6
1001f06a:	mov    DWORD PTR [esp+0x40],ebx
1001f06e:	mov    DWORD PTR [esp+0x44],esi
1001f072:	mov    DWORD PTR [esp+0x48],ebx
1001f076:	call   DWORD PTR ds:0x100662bc
1001f07c:	movzx  eax,ax
1001f07f:	cmp    ax,bx
1001f082:	mov    DWORD PTR [esp+0xc],eax
1001f086:	je     0x1001f14e
1001f08c:	lea    eax,[esp+0xc]
1001f090:	push   eax
1001f091:	mov    esi,0x10080a5c
1001f096:	call   0x10020033
1001f09b:	push   edi
1001f09c:	lea    eax,[esp+0x1c]
1001f0a0:	push   ebx
1001f0a1:	push   eax
1001f0a2:	call   0x10045cf0
1001f0a7:	add    esp,0xc
1001f0aa:	lea    eax,[esp+0x18]
1001f0ae:	push   eax
1001f0af:	mov    esi,0x100705fc
1001f0b4:	push   esi
1001f0b5:	push   DWORD PTR ds:0x10080a04
1001f0bb:	mov    DWORD PTR [esp+0x24],edi
1001f0bf:	call   DWORD PTR ds:0x100662c4
1001f0c5:	cmp    eax,ebx
1001f0c7:	mov    DWORD PTR [esp+0xc],eax
1001f0cb:	jne    0x1001f152
1001f0d1:	mov    eax,ds:0x10080a04
1001f0d6:	push   0x7f00
1001f0db:	push   ebx
1001f0dc:	mov    DWORD PTR [esp+0x20],edi
1001f0e0:	mov    DWORD PTR [esp+0x24],0x8
1001f0e8:	mov    DWORD PTR [esp+0x28],0x1001ecb9
1001f0f0:	mov    DWORD PTR [esp+0x2c],ebx
1001f0f4:	mov    DWORD PTR [esp+0x30],ebx
1001f0f8:	mov    DWORD PTR [esp+0x34],eax
1001f0fc:	mov    DWORD PTR [esp+0x38],ebx
1001f100:	call   DWORD PTR ds:0x10066364
1001f106:	mov    DWORD PTR [esp+0x34],eax
1001f10a:	lea    eax,[esp+0x18]
1001f10e:	push   eax
1001f10f:	mov    DWORD PTR [esp+0x3c],0x6
1001f117:	mov    DWORD PTR [esp+0x40],ebx
1001f11b:	mov    DWORD PTR [esp+0x44],esi
1001f11f:	mov    DWORD PTR [esp+0x48],ebx
1001f123:	call   DWORD PTR ds:0x100662bc
1001f129:	movzx  eax,ax
1001f12c:	cmp    ax,bx
1001f12f:	mov    DWORD PTR [esp+0xc],eax
1001f133:	je     0x1001f14e
1001f135:	lea    eax,[esp+0xc]
1001f139:	push   eax
1001f13a:	mov    esi,0x10080a5c
1001f13f:	call   0x10020033
1001f144:	mov    DWORD PTR [esp+0xc],0x1
1001f14c:	jmp    0x1001f152
1001f14e:	mov    DWORD PTR [esp+0xc],ebx
1001f152:	lea    ecx,[esp+0x10]
1001f156:	call   0x10010d7e
1001f15b:	mov    eax,DWORD PTR [esp+0xc]
1001f15f:	pop    edi
1001f160:	pop    esi
1001f161:	pop    ebx
1001f162:	mov    esp,ebp
1001f164:	pop    ebp
1001f165:	ret    
1001f166:	cmp    DWORD PTR [eax+0x18],0x8
1001f16a:	push   esi
1001f16b:	push   edi
1001f16c:	jb     0x1001f173
1001f16e:	mov    esi,DWORD PTR [eax+0x4]
1001f171:	jmp    0x1001f176
1001f173:	lea    esi,[eax+0x4]
1001f176:	push   esi
1001f177:	call   0x100437e3
1001f17c:	pop    ecx
1001f17d:	mov    ecx,DWORD PTR [ebx+0x14]
1001f180:	mov    edi,eax
1001f182:	push   esi
1001f183:	mov    eax,ebx
1001f185:	call   0x1000669e
1001f18a:	xor    ecx,ecx
1001f18c:	test   eax,eax
1001f18e:	setl   cl
1001f191:	pop    edi
1001f192:	mov    al,cl
1001f194:	pop    esi
1001f195:	ret    
1001f196:	push   ebp
1001f197:	mov    ebp,esp
1001f199:	sub    esp,0x20
1001f19c:	push   ebx
1001f19d:	push   esi
1001f19e:	push   edi
1001f19f:	push   0xffffffff
1001f1a1:	push   DWORD PTR ds:0x10080f50
1001f1a7:	xor    ebx,ebx
1001f1a9:	call   DWORD PTR ds:0x10066084
1001f1af:	test   eax,eax
1001f1b1:	jne    0x1001f255
1001f1b7:	lea    eax,[ebp+0x8]
1001f1ba:	push   eax
1001f1bb:	lea    eax,[ebp-0x14]
1001f1be:	push   eax
1001f1bf:	call   0x10020b8f
1001f1c4:	mov    eax,ds:0x10080f58
1001f1c9:	lea    edi,[ebp-0xc]
1001f1cc:	lea    esi,[ebp-0x14]
1001f1cf:	mov    DWORD PTR [ebp-0x8],eax
1001f1d2:	mov    DWORD PTR [ebp-0xc],0x10080f54
1001f1d9:	call   0x10009d5c
1001f1de:	test   al,al
1001f1e0:	je     0x1001f249
1001f1e2:	mov    esi,DWORD PTR ds:0x10066130
1001f1e8:	push   ebx
1001f1e9:	push   ebx
1001f1ea:	push   ebx
1001f1eb:	push   ebx
1001f1ec:	mov    BYTE PTR [ebp-0x10],bl
1001f1ef:	mov    DWORD PTR [ebp-0x1c],0x1388
1001f1f6:	call   esi
1001f1f8:	push   ebx
1001f1f9:	push   ebx
1001f1fa:	push   ebx
1001f1fb:	push   ebx
1001f1fc:	mov    DWORD PTR [ebp-0x14],eax
1001f1ff:	call   esi
1001f201:	lea    ebx,[ebp+0x8]
1001f204:	mov    DWORD PTR [ebp-0x18],eax
1001f207:	call   0x1002085c
1001f20c:	mov    edi,eax
1001f20e:	lea    esi,[ebp-0x1c]
1001f211:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1001f212:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1001f213:	push   0x2
1001f215:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1001f216:	xor    ebx,ebx
1001f218:	push   ebx
1001f219:	push   ebx
1001f21a:	push   DWORD PTR [ebp+0xc]
1001f21d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1001f21e:	mov    esi,DWORD PTR ds:0x10066108
1001f224:	call   esi
1001f226:	push   eax
1001f227:	push   DWORD PTR [ebp-0x18]
1001f22a:	call   esi
1001f22c:	mov    edi,DWORD PTR ds:0x1006613c
1001f232:	push   eax
1001f233:	call   edi
1001f235:	push   0x2
1001f237:	push   ebx
1001f238:	push   ebx
1001f239:	push   DWORD PTR [ebp+0x10]
1001f23c:	call   esi
1001f23e:	push   eax
1001f23f:	push   DWORD PTR [ebp-0x14]
1001f242:	call   esi
1001f244:	push   eax
1001f245:	call   edi
1001f247:	mov    bl,0x1
1001f249:	push   DWORD PTR ds:0x10080f50
1001f24f:	call   DWORD PTR ds:0x10066094
1001f255:	pop    edi
1001f256:	pop    esi
1001f257:	mov    al,bl
1001f259:	pop    ebx
1001f25a:	leave  
1001f25b:	ret    
1001f25c:	push   ebp
1001f25d:	mov    ebp,esp
1001f25f:	sub    esp,0x10
1001f262:	push   0xffffffff
1001f264:	push   DWORD PTR ds:0x10080f50
1001f26a:	call   DWORD PTR ds:0x10066084
1001f270:	test   eax,eax
1001f272:	jne    0x1001f2c8
1001f274:	push   esi
1001f275:	push   edi
1001f276:	lea    eax,[ebp+0x8]
1001f279:	push   eax
1001f27a:	lea    eax,[ebp-0x8]
1001f27d:	push   eax
1001f27e:	call   0x10020b8f
1001f283:	mov    eax,ds:0x10080f58
1001f288:	lea    edi,[ebp-0x10]
1001f28b:	lea    esi,[ebp-0x8]
1001f28e:	mov    DWORD PTR [ebp-0xc],eax
1001f291:	mov    DWORD PTR [ebp-0x10],0x10080f54
1001f298:	call   0x10009d5c
1001f29d:	test   al,al
1001f29f:	jne    0x1001f2ba
1001f2a1:	call   0x10013f4a
1001f2a6:	mov    ecx,DWORD PTR [ebp+0xc]
1001f2a9:	mov    DWORD PTR [eax+0x4],ecx
1001f2ac:	call   0x10013f4a
1001f2b1:	push   DWORD PTR [eax+0x8]
1001f2b4:	call   DWORD PTR ds:0x10066110
1001f2ba:	push   DWORD PTR ds:0x10080f50
1001f2c0:	call   DWORD PTR ds:0x10066094
1001f2c6:	pop    edi
1001f2c7:	pop    esi
1001f2c8:	leave  
1001f2c9:	ret    
1001f2ca:	push   ebp
1001f2cb:	mov    ebp,esp
1001f2cd:	sub    esp,0x14
1001f2d0:	push   esi
1001f2d1:	push   edi
1001f2d2:	push   0xffffffff
1001f2d4:	push   DWORD PTR ds:0x10080f50
1001f2da:	call   DWORD PTR ds:0x10066084
1001f2e0:	test   eax,eax
1001f2e2:	jne    0x1001f324
1001f2e4:	lea    eax,[ebp+0x8]
1001f2e7:	push   eax
1001f2e8:	lea    eax,[ebp-0x14]
1001f2eb:	push   eax
1001f2ec:	call   0x10020b8f
1001f2f1:	mov    eax,ds:0x10080f58
1001f2f6:	lea    edi,[ebp-0xc]
1001f2f9:	lea    esi,[ebp-0x14]
1001f2fc:	mov    DWORD PTR [ebp-0x8],eax
1001f2ff:	mov    DWORD PTR [ebp-0xc],0x10080f54
1001f306:	call   0x10009d5c
1001f30b:	test   al,al
1001f30d:	jne    0x1001f318
1001f30f:	call   0x10013f4a
1001f314:	mov    BYTE PTR [eax+0x10],0x1
1001f318:	push   DWORD PTR ds:0x10080f50
1001f31e:	call   DWORD PTR ds:0x10066094
1001f324:	pop    edi
1001f325:	pop    esi
1001f326:	leave  
1001f327:	ret    
1001f328:	push   ebp
1001f329:	mov    ebp,esp
1001f32b:	and    esp,0xfffffff8
1001f32e:	sub    esp,0x14
1001f331:	push   ebx
1001f332:	push   esi
1001f333:	push   edi
1001f334:	push   0xffffffff
1001f336:	push   DWORD PTR ds:0x10080f50
1001f33c:	xor    bl,bl
1001f33e:	call   DWORD PTR ds:0x10066084
1001f344:	test   eax,eax
1001f346:	jne    0x1001f3b8
1001f348:	lea    eax,[ebp+0x8]
1001f34b:	push   eax
1001f34c:	lea    eax,[esp+0x14]
1001f350:	push   eax
1001f351:	call   0x10020b8f
1001f356:	mov    eax,ds:0x10080f58
1001f35b:	lea    edi,[esp+0x18]
1001f35f:	lea    esi,[esp+0x10]
1001f363:	mov    DWORD PTR [esp+0x1c],eax
1001f367:	mov    DWORD PTR [esp+0x18],0x10080f54
1001f36f:	call   0x10009d5c
1001f374:	test   al,al
1001f376:	jne    0x1001f3ac
1001f378:	call   0x10013f4a
1001f37d:	mov    bl,BYTE PTR [eax+0x10]
1001f380:	call   0x10013f4a
1001f385:	push   DWORD PTR [eax+0x8]
1001f388:	mov    edi,DWORD PTR ds:0x10066070
1001f38e:	call   edi
1001f390:	call   0x10013f4a
1001f395:	push   DWORD PTR [eax+0xc]
1001f398:	call   edi
1001f39a:	push   DWORD PTR [esp+0x14]
1001f39e:	lea    eax,[esp+0x1c]
1001f3a2:	push   DWORD PTR [esp+0x14]
1001f3a6:	push   eax
1001f3a7:	call   0x1002091c
1001f3ac:	push   DWORD PTR ds:0x10080f50
1001f3b2:	call   DWORD PTR ds:0x10066094
1001f3b8:	pop    edi
1001f3b9:	pop    esi
1001f3ba:	mov    al,bl
1001f3bc:	pop    ebx
1001f3bd:	mov    esp,ebp
1001f3bf:	pop    ebp
1001f3c0:	ret    
1001f3c1:	push   esi
1001f3c2:	xor    esi,esi
1001f3c4:	mov    eax,DWORD PTR [esp+0xc]
1001f3c8:	mov    ecx,DWORD PTR [esi+0x1007f824]
1001f3ce:	call   0x1001039e
1001f3d3:	test   eax,eax
1001f3d5:	jne    0x1001f3e4
1001f3d7:	add    esi,0x4
1001f3da:	cmp    esi,0x4
1001f3dd:	jb     0x1001f3c4
1001f3df:	inc    eax
1001f3e0:	pop    esi
1001f3e1:	ret    0x8
1001f3e4:	xor    eax,eax
1001f3e6:	jmp    0x1001f3e0
1001f3e8:	mov    ecx,DWORD PTR [esp+0x4]
1001f3ec:	mov    edx,DWORD PTR [esp+0x8]
1001f3f0:	add    ecx,0xffffffe4
1001f3f3:	call   0x100204d2
1001f3f8:	neg    eax
1001f3fa:	sbb    eax,eax
1001f3fc:	and    eax,0x7fffbffb
1001f401:	add    eax,0x80004005
1001f406:	ret    0x8
1001f409:	cmp    DWORD PTR [esp+0x8],0xffffea78
1001f411:	jne    0x1001f427
1001f413:	mov    eax,DWORD PTR [esp+0x1c]
1001f417:	mov    WORD PTR [eax],0x3
1001f41c:	mov    DWORD PTR [eax+0x8],0x60009f80
1001f423:	xor    eax,eax
1001f425:	jmp    0x1001f42c
1001f427:	mov    eax,0x80020003
1001f42c:	ret    0x24
1001f42f:	push   ebp
1001f430:	mov    ebp,esp
1001f432:	and    esp,0xfffffff8
1001f435:	push   0xffffffff
1001f437:	push   0x10061c3b
1001f43c:	mov    eax,fs:0x0
1001f442:	push   eax
1001f443:	sub    esp,0x20
1001f446:	push   ebx
1001f447:	push   esi
1001f448:	push   edi
1001f449:	mov    eax,ds:0x1007e030
1001f44e:	xor    eax,esp
1001f450:	push   eax
1001f451:	lea    eax,[esp+0x30]
1001f455:	mov    fs:0x0,eax
1001f45b:	call   DWORD PTR ds:0x1007efec
1001f461:	push   0x79b97f68
1001f466:	push   0x100705d8
1001f46b:	call   0x100042bd
1001f470:	push   eax
1001f471:	push   0x8
1001f473:	push   0x1006e1c0
1001f478:	call   0x1000448e
1001f47d:	add    esp,0x14
1001f480:	push   eax
1001f481:	push   DWORD PTR [ebp+0xc]
1001f484:	call   0x10046753
1001f489:	test   eax,eax
1001f48b:	pop    ecx
1001f48c:	pop    ecx
1001f48d:	push   DWORD PTR [ebp+0xc]
1001f490:	jne    0x1001f6a3
1001f496:	call   0x10020785
1001f49b:	mov    edi,eax
1001f49d:	xor    esi,esi
1001f49f:	cmp    edi,esi
1001f4a1:	mov    DWORD PTR [esp+0x28],edi
1001f4a5:	je     0x1001f4ad
1001f4a7:	mov    eax,DWORD PTR [edi]
1001f4a9:	push   edi
1001f4aa:	call   DWORD PTR [eax+0x4]
1001f4ad:	mov    DWORD PTR [esp+0x38],esi
1001f4b1:	mov    DWORD PTR [esp+0x20],esi
1001f4b5:	call   0x1001efc1
1001f4ba:	push   ecx
1001f4bb:	mov    eax,esp
1001f4bd:	mov    DWORD PTR [esp+0x28],esp
1001f4c1:	push   ecx
1001f4c2:	mov    DWORD PTR [eax],esi
1001f4c4:	mov    eax,esp
1001f4c6:	mov    DWORD PTR [eax],esi
1001f4c8:	lea    eax,[esp+0x28]
1001f4cc:	mov    DWORD PTR [esp+0x2c],esp
1001f4d0:	push   eax
1001f4d1:	call   0x10020090
1001f4d6:	cmp    eax,esi
1001f4d8:	jne    0x1001f4f3
1001f4da:	or     DWORD PTR [esp+0x38],0xffffffff
1001f4df:	cmp    edi,esi
1001f4e1:	je     0x1001f4e9
1001f4e3:	mov    eax,DWORD PTR [edi]
1001f4e5:	push   edi
1001f4e6:	call   DWORD PTR [eax+0x8]
1001f4e9:	mov    eax,0x80004005
1001f4ee:	jmp    0x1001f6bb
1001f4f3:	mov    DWORD PTR [esp+0x10],esi
1001f4f7:	push   0x1006b898
1001f4fc:	lea    eax,[esp+0x24]
1001f500:	push   eax
1001f501:	lea    ebx,[esp+0x18]
1001f505:	mov    BYTE PTR [esp+0x40],0x1
1001f50a:	call   0x100200d9
1001f50f:	mov    esi,eax
1001f511:	xor    ebx,ebx
1001f513:	cmp    esi,ebx
1001f515:	jge    0x1001f53f
1001f517:	mov    BYTE PTR [esp+0x38],bl
1001f51b:	mov    eax,DWORD PTR [esp+0x10]
1001f51f:	cmp    eax,ebx
1001f521:	je     0x1001f529
1001f523:	mov    ecx,DWORD PTR [eax]
1001f525:	push   eax
1001f526:	call   DWORD PTR [ecx+0x8]
1001f529:	or     DWORD PTR [esp+0x38],0xffffffff
1001f52e:	cmp    edi,ebx
1001f530:	je     0x1001f538
1001f532:	mov    eax,DWORD PTR [edi]
1001f534:	push   edi
1001f535:	call   DWORD PTR [eax+0x8]
1001f538:	mov    eax,esi
1001f53a:	jmp    0x1001f6bb
1001f53f:	mov    DWORD PTR [esp+0x18],ebx
1001f543:	mov    DWORD PTR [esp+0x14],ebx
1001f547:	lea    ecx,[esp+0x18]
1001f54b:	push   ecx
1001f54c:	push   0x1006b888
1001f551:	mov    BYTE PTR [esp+0x40],0x3
1001f556:	mov    eax,DWORD PTR [edi]
1001f558:	push   edi
1001f559:	call   DWORD PTR [eax]
1001f55b:	mov    esi,eax
1001f55d:	cmp    esi,ebx
1001f55f:	jge    0x1001f5a0
1001f561:	mov    BYTE PTR [esp+0x38],0x2
1001f566:	mov    eax,DWORD PTR [esp+0x14]
1001f56a:	cmp    eax,ebx
1001f56c:	je     0x1001f574
1001f56e:	mov    ecx,DWORD PTR [eax]
1001f570:	push   eax
1001f571:	call   DWORD PTR [ecx+0x8]
1001f574:	mov    BYTE PTR [esp+0x38],0x1
1001f579:	mov    eax,DWORD PTR [esp+0x18]
1001f57d:	cmp    eax,ebx
1001f57f:	je     0x1001f587
1001f581:	mov    ecx,DWORD PTR [eax]
1001f583:	push   eax
1001f584:	call   DWORD PTR [ecx+0x8]
1001f587:	mov    BYTE PTR [esp+0x38],bl
1001f58b:	mov    eax,DWORD PTR [esp+0x10]
1001f58f:	cmp    eax,ebx
1001f591:	je     0x1001f599
1001f593:	mov    ecx,DWORD PTR [eax]
1001f595:	push   eax
1001f596:	call   DWORD PTR [ecx+0x8]
1001f599:	or     DWORD PTR [esp+0x38],0xffffffff
1001f59e:	jmp    0x1001f532
1001f5a0:	mov    eax,DWORD PTR [edi]
1001f5a2:	lea    ecx,[esp+0x14]
1001f5a6:	push   ecx
1001f5a7:	push   0x1006b868
1001f5ac:	push   edi
1001f5ad:	call   DWORD PTR [eax]
1001f5af:	mov    esi,eax
1001f5b1:	cmp    esi,ebx
1001f5b3:	jl     0x1001f561
1001f5b5:	mov    eax,DWORD PTR [esp+0x18]
1001f5b9:	push   DWORD PTR [esp+0x10]
1001f5bd:	mov    ecx,DWORD PTR [eax]
1001f5bf:	push   eax
1001f5c0:	call   DWORD PTR [ecx+0xc]
1001f5c3:	mov    esi,eax
1001f5c5:	cmp    esi,ebx
1001f5c7:	jl     0x1001f561
1001f5c9:	mov    DWORD PTR [esp+0x1c],ebx
1001f5cd:	push   0x1006cc90
1001f5d2:	lea    eax,[esp+0x24]
1001f5d6:	push   eax
1001f5d7:	lea    ebx,[esp+0x24]
1001f5db:	mov    BYTE PTR [esp+0x40],0x4
1001f5e0:	call   0x100200d9
1001f5e5:	mov    esi,eax
1001f5e7:	xor    ebx,ebx
1001f5e9:	cmp    esi,ebx
1001f5eb:	jge    0x1001f609
1001f5ed:	mov    BYTE PTR [esp+0x38],0x3
1001f5f2:	mov    eax,DWORD PTR [esp+0x1c]
1001f5f6:	cmp    eax,ebx
1001f5f8:	je     0x1001f561
1001f5fe:	mov    ecx,DWORD PTR [eax]
1001f600:	push   eax
1001f601:	call   DWORD PTR [ecx+0x8]
1001f604:	jmp    0x1001f561
1001f609:	lea    eax,[esp+0x24]
1001f60d:	push   eax
1001f60e:	call   0x100222d3
1001f613:	mov    eax,DWORD PTR [esp+0x1c]
1001f617:	push   DWORD PTR [esp+0x24]
1001f61b:	mov    ecx,DWORD PTR [eax]
1001f61d:	push   eax
1001f61e:	call   DWORD PTR [ecx+0x8c]
1001f624:	mov    esi,eax
1001f626:	cmp    esi,ebx
1001f628:	jl     0x1001f5ed
1001f62a:	mov    eax,DWORD PTR [esp+0x14]
1001f62e:	mov    ecx,DWORD PTR [eax]
1001f630:	push   0xffffea78
1001f635:	push   eax
1001f636:	call   DWORD PTR [ecx+0x14]
1001f639:	mov    esi,eax
1001f63b:	cmp    esi,ebx
1001f63d:	jl     0x1001f5ed
1001f63f:	push   DWORD PTR [esp+0x20]
1001f643:	call   DWORD PTR ds:0x10066304
1001f649:	mov    ecx,DWORD PTR [ebp+0x10]
1001f64c:	mov    eax,edi
1001f64e:	mov    DWORD PTR [ecx],eax
1001f650:	mov    BYTE PTR [esp+0x38],0x3
1001f655:	mov    eax,DWORD PTR [esp+0x1c]
1001f659:	cmp    eax,ebx
1001f65b:	mov    DWORD PTR [esp+0x28],ebx
1001f65f:	je     0x1001f667
1001f661:	mov    ecx,DWORD PTR [eax]
1001f663:	push   eax
1001f664:	call   DWORD PTR [ecx+0x8]
1001f667:	mov    BYTE PTR [esp+0x38],0x2
1001f66c:	mov    eax,DWORD PTR [esp+0x14]
1001f670:	cmp    eax,ebx
1001f672:	je     0x1001f67a
1001f674:	mov    ecx,DWORD PTR [eax]
1001f676:	push   eax
1001f677:	call   DWORD PTR [ecx+0x8]
1001f67a:	mov    BYTE PTR [esp+0x38],0x1
1001f67f:	mov    eax,DWORD PTR [esp+0x18]
1001f683:	cmp    eax,ebx
1001f685:	je     0x1001f68d
1001f687:	mov    ecx,DWORD PTR [eax]
1001f689:	push   eax
1001f68a:	call   DWORD PTR [ecx+0x8]
1001f68d:	mov    BYTE PTR [esp+0x38],bl
1001f691:	mov    eax,DWORD PTR [esp+0x10]
1001f695:	cmp    eax,ebx
1001f697:	je     0x1001f69f
1001f699:	mov    ecx,DWORD PTR [eax]
1001f69b:	push   eax
1001f69c:	call   DWORD PTR [ecx+0x8]
1001f69f:	xor    eax,eax
1001f6a1:	jmp    0x1001f6bb
1001f6a3:	call   0x10020785
1001f6a8:	mov    ecx,DWORD PTR [ebp+0x10]
1001f6ab:	mov    DWORD PTR [ecx],eax
1001f6ad:	neg    eax
1001f6af:	sbb    eax,eax
1001f6b1:	and    eax,0x7fffbffb
1001f6b6:	add    eax,0x80004005
1001f6bb:	mov    ecx,DWORD PTR [esp+0x30]
1001f6bf:	mov    DWORD PTR fs:0x0,ecx
1001f6c6:	pop    ecx
1001f6c7:	pop    edi
1001f6c8:	pop    esi
1001f6c9:	pop    ebx
1001f6ca:	mov    esp,ebp
1001f6cc:	pop    ebp
1001f6cd:	ret    0xc
1001f6d0:	mov    edx,DWORD PTR [esp+0x4]
1001f6d4:	push   DWORD PTR [esp+0x8]
1001f6d8:	mov    ecx,DWORD PTR [esp+0x10]
1001f6dc:	add    edx,0xffffffe4
1001f6df:	call   0x1002066b
1001f6e4:	neg    eax
1001f6e6:	sbb    eax,eax
1001f6e8:	and    eax,0x7fffbffb
1001f6ed:	add    eax,0x80004005
1001f6f2:	ret    0xc
1001f6f5:	push   ebp
1001f6f6:	mov    ebp,esp
1001f6f8:	mov    edx,DWORD PTR [ebp+0x8]
1001f6fb:	sub    esp,0x20
1001f6fe:	push   esi
1001f6ff:	xor    esi,esi
1001f701:	cmp    DWORD PTR [edx-0x10],esi
1001f704:	je     0x1001f739
1001f706:	push   edi
1001f707:	push   0x7
1001f709:	pop    ecx
1001f70a:	mov    WORD PTR [ebp-0x20],si
1001f70e:	xor    eax,eax
1001f710:	lea    edi,[ebp-0x1e]
1001f713:	rep stos DWORD PTR es:[edi],eax
1001f715:	stos   WORD PTR es:[edi],ax
1001f717:	mov    eax,DWORD PTR [edx-0x14]
1001f71a:	mov    ecx,DWORD PTR [eax]
1001f71c:	lea    edx,[ebp-0x20]
1001f71f:	push   edx
1001f720:	push   esi
1001f721:	push   0x42
1001f723:	push   esi
1001f724:	push   esi
1001f725:	push   esi
1001f726:	push   esi
1001f727:	push   esi
1001f728:	push   DWORD PTR [ebp+0xc]
1001f72b:	push   eax
1001f72c:	call   DWORD PTR [ecx+0x14]
1001f72f:	test   eax,eax
1001f731:	pop    edi
1001f732:	jl     0x1001f739
1001f734:	xor    eax,eax
1001f736:	inc    eax
1001f737:	jmp    0x1001f73b
1001f739:	xor    eax,eax
1001f73b:	neg    eax
1001f73d:	sbb    eax,eax
1001f73f:	and    eax,0x7fffbffb
1001f744:	add    eax,0x80004005
1001f749:	pop    esi
1001f74a:	leave  
1001f74b:	ret    0x8
1001f74e:	push   ebp
1001f74f:	mov    ebp,esp
1001f751:	mov    eax,DWORD PTR [ebp+0x8]
1001f754:	mov    edx,DWORD PTR [eax-0x14]
1001f757:	sub    esp,0x20
1001f75a:	push   esi
1001f75b:	xor    esi,esi
1001f75d:	cmp    edx,esi
1001f75f:	je     0x1001f7af
1001f761:	push   edi
1001f762:	push   0x7
1001f764:	pop    ecx
1001f765:	mov    WORD PTR [ebp-0x20],si
1001f769:	xor    eax,eax
1001f76b:	lea    edi,[ebp-0x1e]
1001f76e:	rep stos DWORD PTR es:[edi],eax
1001f770:	lea    ecx,[ebp-0x20]
1001f773:	push   ecx
1001f774:	lea    ecx,[ebp+0x8]
1001f777:	push   ecx
1001f778:	push   esi
1001f779:	push   esi
1001f77a:	push   esi
1001f77b:	push   0x1006d1a4
1001f780:	push   DWORD PTR [ebp+0x18]
1001f783:	stos   WORD PTR es:[edi],ax
1001f785:	push   DWORD PTR [ebp+0x14]
1001f788:	mov    DWORD PTR [ebp+0x8],esi
1001f78b:	push   DWORD PTR [ebp+0x14]
1001f78e:	mov    eax,DWORD PTR [edx]
1001f790:	push   DWORD PTR [ebp+0x10]
1001f793:	push   DWORD PTR [ebp+0xc]
1001f796:	push   edx
1001f797:	call   DWORD PTR [eax+0x10]
1001f79a:	push   DWORD PTR [ebp+0x8]
1001f79d:	mov    edi,eax
1001f79f:	call   DWORD PTR ds:0x100662b4
1001f7a5:	cmp    edi,esi
1001f7a7:	pop    edi
1001f7a8:	jl     0x1001f7af
1001f7aa:	xor    eax,eax
1001f7ac:	inc    eax
1001f7ad:	jmp    0x1001f7b1
1001f7af:	xor    eax,eax
1001f7b1:	neg    eax
1001f7b3:	sbb    eax,eax
1001f7b5:	and    eax,0x7fffbffb
1001f7ba:	add    eax,0x80004005
1001f7bf:	pop    esi
1001f7c0:	leave  
1001f7c1:	ret    0x14
1001f7c4:	call   DWORD PTR ds:0x1007efec
1001f7ca:	push   0x0
1001f7cc:	push   0x1006d1a4
1001f7d1:	push   DWORD PTR [esp+0x10]
1001f7d5:	push   0x0
1001f7d7:	call   DWORD PTR ds:0x10066328
1001f7dd:	xor    eax,eax
1001f7df:	ret    0x8
1001f7e2:	push   ebp
1001f7e3:	mov    ebp,esp
1001f7e5:	push   DWORD PTR [ebp+0x18]
1001f7e8:	mov    ecx,DWORD PTR [ebp+0x8]
1001f7eb:	push   DWORD PTR [ebp+0x14]
1001f7ee:	add    ecx,0xffffffe4
1001f7f1:	push   DWORD PTR [ebp+0x10]
1001f7f4:	push   DWORD PTR [ebp+0xc]
1001f7f7:	call   0x100207e3
1001f7fc:	pop    ebp
1001f7fd:	ret    0x14
1001f800:	push   ebp
1001f801:	sub    esp,0x70
1001f804:	lea    ebp,[esp-0x4]
1001f808:	mov    eax,ds:0x1007e030
1001f80d:	xor    eax,ebp
1001f80f:	mov    DWORD PTR [ebp+0x70],eax
1001f812:	push   0xe4
1001f817:	mov    eax,0x10062aae
1001f81c:	call   0x10059b58
1001f821:	mov    eax,DWORD PTR [ebp+0x84]
1001f827:	mov    esi,DWORD PTR [ebp+0x80]
1001f82d:	mov    DWORD PTR [ebp-0x18],eax
1001f830:	mov    eax,DWORD PTR [ebp+0x88]
1001f836:	mov    DWORD PTR [ebp-0x24],eax
1001f839:	mov    eax,DWORD PTR [ebp+0x8c]
1001f83f:	xor    edi,edi
1001f841:	mov    DWORD PTR [ebp-0x1c],eax
1001f844:	lea    eax,[ebp-0x2c]
1001f847:	push   edi
1001f848:	push   eax
1001f849:	mov    DWORD PTR [ebp-0x4],edi
1001f84c:	call   0x10002898
1001f851:	pop    ecx
1001f852:	pop    ecx
1001f853:	mov    ecx,DWORD PTR [eax]
1001f855:	mov    DWORD PTR [eax],edi
1001f857:	mov    DWORD PTR [ebp-0x30],ecx
1001f85a:	lea    eax,[ebp-0x2c]
1001f85d:	mov    BYTE PTR [ebp-0x4],0x1
1001f861:	call   0x10004296
1001f866:	call   DWORD PTR ds:0x1007efec
1001f86c:	cmp    esi,edi
1001f86e:	mov    ebx,DWORD PTR ds:0x100660c4
1001f874:	mov    DWORD PTR [ebp-0x14],eax
1001f877:	je     0x1001f884
1001f879:	push   esi
1001f87a:	call   ebx
1001f87c:	inc    eax
1001f87d:	cmp    eax,0x3fffffff
1001f882:	jle    0x1001f888
1001f884:	xor    eax,eax
1001f886:	jmp    0x1001f8a3
1001f888:	lea    edi,[eax+eax*1]
1001f88b:	mov    eax,edi
1001f88d:	call   0x1004b7e0
1001f892:	mov    eax,esp
1001f894:	mov    DWORD PTR [ebp-0x10],esp
1001f897:	push   DWORD PTR [ebp-0x14]
1001f89a:	push   edi
1001f89b:	push   esi
1001f89c:	mov    esi,eax
1001f89e:	call   0x10002422
1001f8a3:	push   eax
1001f8a4:	lea    ecx,[ebp+0x54]
1001f8a7:	call   0x100011c8
1001f8ac:	cmp    DWORD PTR [ebp-0x18],0x0
1001f8b0:	mov    BYTE PTR [ebp-0x4],0x2
1001f8b4:	je     0x1001f8c3
1001f8b6:	push   DWORD PTR [ebp-0x18]
1001f8b9:	call   ebx
1001f8bb:	inc    eax
1001f8bc:	cmp    eax,0x3fffffff
1001f8c1:	jle    0x1001f8c7
1001f8c3:	xor    eax,eax
1001f8c5:	jmp    0x1001f8e2
1001f8c7:	lea    edi,[eax+eax*1]
1001f8ca:	mov    eax,edi
1001f8cc:	call   0x1004b7e0
1001f8d1:	mov    DWORD PTR [ebp-0x10],esp
1001f8d4:	mov    esi,esp
1001f8d6:	push   DWORD PTR [ebp-0x14]
1001f8d9:	push   edi
1001f8da:	push   DWORD PTR [ebp-0x18]
1001f8dd:	call   0x10002422
1001f8e2:	push   eax
1001f8e3:	lea    ecx,[ebp+0x1c]
1001f8e6:	call   0x100011c8
1001f8eb:	mov    BYTE PTR [ebp-0x4],0x3
1001f8ef:	cmp    DWORD PTR [ebp-0x24],0x0
1001f8f3:	je     0x1001f902
1001f8f5:	push   DWORD PTR [ebp-0x24]
1001f8f8:	call   ebx
1001f8fa:	inc    eax
1001f8fb:	cmp    eax,0x3fffffff
1001f900:	jle    0x1001f906
1001f902:	xor    eax,eax
1001f904:	jmp    0x1001f921
1001f906:	lea    edi,[eax+eax*1]
1001f909:	mov    eax,edi
1001f90b:	call   0x1004b7e0
1001f910:	mov    DWORD PTR [ebp-0x10],esp
1001f913:	mov    esi,esp
1001f915:	push   DWORD PTR [ebp-0x14]
1001f918:	push   edi
1001f919:	push   DWORD PTR [ebp-0x24]
1001f91c:	call   0x10002422
1001f921:	push   eax
1001f922:	lea    ecx,[ebp+0x0]
1001f925:	call   0x100011c8
1001f92a:	mov    BYTE PTR [ebp-0x4],0x4
1001f92e:	cmp    DWORD PTR [ebp-0x1c],0x0
1001f932:	je     0x1001f941
1001f934:	push   DWORD PTR [ebp-0x1c]
1001f937:	call   ebx
1001f939:	inc    eax
1001f93a:	cmp    eax,0x3fffffff
1001f93f:	jle    0x1001f945
1001f941:	xor    eax,eax
1001f943:	jmp    0x1001f960
1001f945:	lea    edi,[eax+eax*1]
1001f948:	mov    eax,edi
1001f94a:	call   0x1004b7e0
1001f94f:	mov    DWORD PTR [ebp-0x10],esp
1001f952:	mov    esi,esp
1001f954:	push   DWORD PTR [ebp-0x14]
1001f957:	push   edi
1001f958:	push   DWORD PTR [ebp-0x1c]
1001f95b:	call   0x10002422
1001f960:	push   eax
1001f961:	lea    ecx,[ebp+0x38]
1001f964:	call   0x100011c8
1001f969:	fld    QWORD PTR [ebp+0x94]
1001f96f:	mov    BYTE PTR [ebp-0x4],0x5
1001f973:	call   0x1005f576
1001f978:	push   0x0
1001f97a:	mov    esi,0x2710
1001f97f:	push   esi
1001f980:	push   edx
1001f981:	push   eax
1001f982:	call   0x1004f4f0
1001f987:	fld    QWORD PTR [ebp+0x9c]
1001f98d:	mov    DWORD PTR [ebp-0x28],eax
1001f990:	mov    DWORD PTR [ebp-0x24],edx
1001f993:	call   0x1005f576
1001f998:	push   0x0
1001f99a:	push   esi
1001f99b:	push   edx
1001f99c:	push   eax
1001f99d:	call   0x1004f4f0
1001f9a2:	push   ecx
1001f9a3:	mov    ecx,DWORD PTR [ebp+0x90]
1001f9a9:	mov    DWORD PTR [ebp-0x20],eax
1001f9ac:	mov    eax,esp
1001f9ae:	mov    DWORD PTR [eax],ecx
1001f9b0:	mov    DWORD PTR [ebp-0x2c],esp
1001f9b3:	lea    eax,[ebp+0x38]
1001f9b6:	push   eax
1001f9b7:	lea    eax,[ebp+0x0]
1001f9ba:	push   eax
1001f9bb:	lea    eax,[ebp+0x1c]
1001f9be:	push   eax
1001f9bf:	lea    eax,[ebp+0x54]
1001f9c2:	push   eax
1001f9c3:	lea    eax,[ebp-0xf0]
1001f9c9:	lea    edi,[ebp-0x20]
1001f9cc:	lea    ebx,[ebp-0x28]
1001f9cf:	push   eax
1001f9d0:	mov    DWORD PTR [ebp-0x1c],edx
1001f9d3:	call   0x100027a2
1001f9d8:	mov    edi,eax
1001f9da:	lea    eax,[ebp+0x54]
1001f9dd:	push   eax
1001f9de:	lea    esi,[ebp-0x68]
1001f9e1:	mov    BYTE PTR [ebp-0x4],0x6
1001f9e5:	call   0x10030470
1001f9ea:	pop    ecx
1001f9eb:	lea    ecx,[ebp-0x4c]
1001f9ee:	push   ecx
1001f9ef:	mov    ecx,eax
1001f9f1:	mov    BYTE PTR [ebp-0x4],0x7
1001f9f5:	call   0x1002fbd0
1001f9fa:	pop    ecx
1001f9fb:	push   edi
1001f9fc:	mov    edx,eax
1001f9fe:	mov    ecx,0x10080e54
1001fa03:	mov    BYTE PTR [ebp-0x4],0x8
1001fa07:	call   0x10012f9f
1001fa0c:	xor    ebx,ebx
1001fa0e:	xor    edi,edi
1001fa10:	push   ebx
1001fa11:	inc    edi
1001fa12:	push   edi
1001fa13:	lea    ecx,[ebp-0x4c]
1001fa16:	call   0x100012eb
1001fa1b:	push   ebx
1001fa1c:	push   edi
1001fa1d:	mov    ecx,esi
1001fa1f:	call   0x100012eb
1001fa24:	lea    esi,[ebp-0xf0]
1001fa2a:	call   0x10003423
1001fa2f:	push   ebx
1001fa30:	push   edi
1001fa31:	lea    ecx,[ebp+0x38]
1001fa34:	call   0x100012eb
1001fa39:	push   ebx
1001fa3a:	push   edi
1001fa3b:	lea    ecx,[ebp+0x0]
1001fa3e:	call   0x100012eb
1001fa43:	push   ebx
1001fa44:	push   edi
1001fa45:	lea    ecx,[ebp+0x1c]
1001fa48:	call   0x100012eb
1001fa4d:	push   ebx
1001fa4e:	push   edi
1001fa4f:	lea    ecx,[ebp+0x54]
1001fa52:	call   0x100012eb
1001fa57:	lea    eax,[ebp-0x30]
1001fa5a:	call   0x10004296
1001fa5f:	xor    eax,eax
1001fa61:	lea    esp,[ebp-0x100]
1001fa67:	mov    ecx,DWORD PTR [ebp-0xc]
1001fa6a:	mov    DWORD PTR fs:0x0,ecx
1001fa71:	pop    ecx
1001fa72:	pop    edi
1001fa73:	pop    esi
1001fa74:	pop    ebx
1001fa75:	mov    ecx,DWORD PTR [ebp+0x70]
1001fa78:	xor    ecx,ebp
1001fa7a:	call   0x10042f87
1001fa7f:	add    ebp,0x74
1001fa82:	leave  
1001fa83:	ret    0x28
1001fa86:	mov    eax,0x1001fa8c
1001fa8b:	ret    
1001fa8c:	jmp    0x1001fa5f
1001fa8e:	push   0x4
1001fa90:	call   0x100379e0
1001fa95:	pop    ecx
1001fa96:	mov    eax,0x1001fa5f
1001fa9b:	ret    
1001fa9c:	push   0x48
1001fa9e:	mov    eax,0x10061bee
1001faa3:	call   0x10059bc4
1001faa8:	mov    eax,DWORD PTR [ebp+0x10]
1001faab:	mov    esi,DWORD PTR [ebp+0xc]
1001faae:	and    DWORD PTR [ebp-0x4],0x0
1001fab2:	mov    DWORD PTR [ebp-0x50],eax
1001fab5:	push   0x1
1001fab7:	lea    eax,[ebp-0x54]
1001faba:	push   eax
1001fabb:	call   0x10034a90
1001fac0:	mov    BYTE PTR [ebp-0x4],0x1
1001fac4:	call   DWORD PTR ds:0x1007efec
1001faca:	test   esi,esi
1001facc:	mov    ebx,eax
1001face:	je     0x1001fadf
1001fad0:	push   esi
1001fad1:	call   DWORD PTR ds:0x100660c4
1001fad7:	inc    eax
1001fad8:	cmp    eax,0x3fffffff
1001fadd:	jle    0x1001fae3
1001fadf:	xor    eax,eax
1001fae1:	jmp    0x1001fafc
1001fae3:	lea    edi,[eax+eax*1]
1001fae6:	mov    eax,edi
1001fae8:	call   0x1004b7e0
1001faed:	mov    eax,esp
1001faef:	mov    DWORD PTR [ebp-0x10],esp
1001faf2:	push   ebx
1001faf3:	push   edi
1001faf4:	push   esi
1001faf5:	mov    esi,eax
1001faf7:	call   0x10002422
1001fafc:	push   eax
1001fafd:	lea    ecx,[ebp-0x4c]
1001fb00:	call   0x100011c8
1001fb05:	cmp    DWORD PTR [ebp-0x50],0x0
1001fb09:	mov    BYTE PTR [ebp-0x4],0x2
1001fb0d:	je     0x1001fb20
1001fb0f:	push   DWORD PTR [ebp-0x50]
1001fb12:	call   DWORD PTR ds:0x100660c4
1001fb18:	inc    eax
1001fb19:	cmp    eax,0x3fffffff
1001fb1e:	jle    0x1001fb24
1001fb20:	xor    eax,eax
1001fb22:	jmp    0x1001fb3d
1001fb24:	lea    edi,[eax+eax*1]
1001fb27:	mov    eax,edi
1001fb29:	call   0x1004b7e0
1001fb2e:	mov    DWORD PTR [ebp-0x10],esp
1001fb31:	mov    esi,esp
1001fb33:	push   ebx
1001fb34:	push   edi
1001fb35:	push   DWORD PTR [ebp-0x50]
1001fb38:	call   0x10002422
1001fb3d:	push   eax
1001fb3e:	lea    ecx,[ebp-0x30]
1001fb41:	call   0x100011c8
1001fb46:	lea    eax,[ebp-0x30]
1001fb49:	push   eax
1001fb4a:	lea    eax,[ebp-0x54]
1001fb4d:	push   eax
1001fb4e:	lea    ecx,[ebp-0x4c]
1001fb51:	mov    BYTE PTR [ebp-0x4],0x3
1001fb55:	call   0x10035670
1001fb5a:	push   0x0
1001fb5c:	push   0x1
1001fb5e:	lea    ecx,[ebp-0x30]
1001fb61:	call   0x100012eb
1001fb66:	push   0x0
1001fb68:	push   0x1
1001fb6a:	lea    ecx,[ebp-0x4c]
1001fb6d:	call   0x100012eb
1001fb72:	push   DWORD PTR [ebp-0x54]
1001fb75:	call   DWORD PTR ds:0x10066070
1001fb7b:	xor    eax,eax
1001fb7d:	jmp    0x1001fb8a
1001fb7f:	mov    eax,0x1001fb85
1001fb84:	ret    
1001fb85:	mov    eax,0x80004005
1001fb8a:	lea    esp,[ebp-0x64]
1001fb8d:	call   0x10059c20
1001fb92:	ret    0xc
1001fb95:	push   0x48
1001fb97:	mov    eax,0x10061bb1
1001fb9c:	call   0x10059bc4
1001fba1:	and    DWORD PTR [ebp-0x4],0x0
1001fba5:	push   0x1
1001fba7:	lea    eax,[ebp-0x18]
1001fbaa:	push   eax
1001fbab:	call   0x10034a90
1001fbb0:	mov    BYTE PTR [ebp-0x4],0x1
1001fbb4:	call   DWORD PTR ds:0x1007efec
1001fbba:	cmp    DWORD PTR [ebp+0xc],0x0
1001fbbe:	mov    ebx,eax
1001fbc0:	je     0x1001fbd3
1001fbc2:	push   DWORD PTR [ebp+0xc]
1001fbc5:	call   DWORD PTR ds:0x100660c4
1001fbcb:	inc    eax
1001fbcc:	cmp    eax,0x3fffffff
1001fbd1:	jle    0x1001fbd7
1001fbd3:	xor    eax,eax
1001fbd5:	jmp    0x1001fbf0
1001fbd7:	lea    edi,[eax+eax*1]
1001fbda:	mov    eax,edi
1001fbdc:	call   0x1004b7e0
1001fbe1:	mov    DWORD PTR [ebp-0x10],esp
1001fbe4:	mov    esi,esp
1001fbe6:	push   ebx
1001fbe7:	push   edi
1001fbe8:	push   DWORD PTR [ebp+0xc]
1001fbeb:	call   0x10002422
1001fbf0:	push   eax
1001fbf1:	lea    ecx,[ebp-0x38]
1001fbf4:	call   0x100011c8
1001fbf9:	lea    eax,[ebp-0x38]
1001fbfc:	push   eax
1001fbfd:	lea    eax,[ebp-0x54]
1001fc00:	push   eax
1001fc01:	lea    eax,[ebp-0x18]
1001fc04:	push   eax
1001fc05:	mov    BYTE PTR [ebp-0x4],0x2
1001fc09:	call   0x10035810
1001fc0e:	mov    BYTE PTR [ebp-0x4],0x3
1001fc12:	cmp    DWORD PTR [eax+0x18],0x10
1001fc16:	jb     0x1001fc1d
1001fc18:	mov    eax,DWORD PTR [eax+0x4]
1001fc1b:	jmp    0x1001fc20
1001fc1d:	add    eax,0x4
1001fc20:	push   eax
1001fc21:	lea    edi,[ebp-0x1c]
1001fc24:	call   0x10002455
1001fc29:	mov    BYTE PTR [ebp-0x4],0x4
1001fc2d:	call   0x10011fd0
1001fc32:	mov    ecx,DWORD PTR [ebp+0x10]
1001fc35:	mov    DWORD PTR [ecx],eax
1001fc37:	call   0x100025b0
1001fc3c:	push   0x0
1001fc3e:	push   0x1
1001fc40:	lea    ecx,[ebp-0x54]
1001fc43:	call   0x100012eb
1001fc48:	push   0x0
1001fc4a:	push   0x1
1001fc4c:	lea    ecx,[ebp-0x38]
1001fc4f:	call   0x100012eb
1001fc54:	push   DWORD PTR [ebp-0x18]
1001fc57:	call   DWORD PTR ds:0x10066070
1001fc5d:	xor    eax,eax
1001fc5f:	jmp    0x1001fc6c
1001fc61:	mov    eax,0x1001fc67
1001fc66:	ret    
1001fc67:	mov    eax,0x80004005
1001fc6c:	lea    esp,[ebp-0x64]
1001fc6f:	call   0x10059c20
1001fc74:	ret    0xc
1001fc77:	push   ebp
1001fc78:	sub    esp,0xcc
1001fc7e:	lea    ebp,[esp-0x4]
1001fc82:	mov    eax,ds:0x1007e030
1001fc87:	xor    eax,ebp
1001fc89:	mov    DWORD PTR [ebp+0xcc],eax
1001fc8f:	push   0x3c
1001fc91:	mov    eax,0x10064d2c
1001fc96:	call   0x10059b58
1001fc9b:	mov    eax,DWORD PTR [ebp+0xe4]
1001fca1:	mov    ebx,DWORD PTR [ebp+0xe0]
1001fca7:	mov    DWORD PTR [ebp-0x14],eax
1001fcaa:	mov    eax,DWORD PTR [ebp+0xec]
1001fcb0:	mov    DWORD PTR [ebp-0x20],eax
1001fcb3:	call   DWORD PTR ds:0x1007efec
1001fcb9:	xor    esi,esi
1001fcbb:	cmp    DWORD PTR [ebp+0xe8],esi
1001fcc1:	mov    DWORD PTR [ebp-0x1c],eax
1001fcc4:	jne    0x1001fcd0
1001fcc6:	mov    DWORD PTR [ebp+0xe8],0x7d0
1001fcd0:	cmp    WORD PTR [ebp+0xdc],0xffff
1001fcd8:	jne    0x1001fe2e
1001fcde:	cmp    ebx,esi
1001fce0:	mov    DWORD PTR [ebp-0x4],esi
1001fce3:	mov    DWORD PTR [ebp-0x14],esi
1001fce6:	je     0x1001fcf7
1001fce8:	push   ebx
1001fce9:	call   DWORD PTR ds:0x100660c4
1001fcef:	inc    eax
1001fcf0:	cmp    eax,0x3fffffff
1001fcf5:	jle    0x1001fcfb
1001fcf7:	xor    eax,eax
1001fcf9:	jmp    0x1001fd14
1001fcfb:	lea    edi,[eax+eax*1]
1001fcfe:	mov    eax,edi
1001fd00:	call   0x1004b7e0
1001fd05:	mov    DWORD PTR [ebp-0x10],esp
1001fd08:	mov    esi,esp
1001fd0a:	push   DWORD PTR [ebp-0x1c]
1001fd0d:	push   edi
1001fd0e:	push   ebx
1001fd0f:	call   0x10002422
1001fd14:	push   eax
1001fd15:	lea    ecx,[ebp+0xb0]
1001fd1b:	call   0x100011c8
1001fd20:	lea    ecx,[ebp-0x48]
1001fd23:	mov    BYTE PTR [ebp-0x4],0x1
1001fd27:	call   0x100185fb
1001fd2c:	push   DWORD PTR [ebp+0xe8]
1001fd32:	lea    ecx,[ebp-0x14]
1001fd35:	push   ecx
1001fd36:	lea    ecx,[ebp+0xb0]
1001fd3c:	push   ecx
1001fd3d:	push   eax
1001fd3e:	lea    esi,[ebp-0x18]
1001fd41:	mov    BYTE PTR [ebp-0x4],0x2
1001fd45:	call   0x10030e80
1001fd4a:	mov    ecx,DWORD PTR [eax]
1001fd4c:	mov    ebx,ecx
1001fd4e:	xor    esi,esi
1001fd50:	add    esp,0x10
1001fd53:	mov    DWORD PTR [eax],esi
1001fd55:	mov    DWORD PTR [ebp-0x1c],ebx
1001fd58:	push   DWORD PTR [ebp-0x18]
1001fd5b:	call   0x10042f82
1001fd60:	pop    ecx
1001fd61:	push   esi
1001fd62:	push   0x1
1001fd64:	lea    ecx,[ebp-0x48]
1001fd67:	call   0x100012eb
1001fd6c:	push   esi
1001fd6d:	push   0x1
1001fd6f:	lea    ecx,[ebp+0xb0]
1001fd75:	mov    BYTE PTR [ebp-0x4],0x5
1001fd79:	call   0x100012eb
1001fd7e:	mov    eax,DWORD PTR [ebp-0x14]
1001fd81:	mov    DWORD PTR [ebp-0x2c],esi
1001fd84:	lea    edi,[ebp+0x94]
1001fd8a:	lea    esi,[ebp-0x2c]
1001fd8d:	mov    DWORD PTR [ebp-0x28],eax
1001fd90:	mov    DWORD PTR [ebp-0x24],ebx
1001fd93:	call   0x10037630
1001fd98:	mov    BYTE PTR [ebp-0x4],0x6
1001fd9c:	cmp    DWORD PTR [eax+0x18],0x10
1001fda0:	jb     0x1001fda7
1001fda2:	mov    eax,DWORD PTR [eax+0x4]
1001fda5:	jmp    0x1001fdaa
1001fda7:	add    eax,0x4
1001fdaa:	push   eax
1001fdab:	lea    edi,[ebp-0x14]
1001fdae:	call   0x10002455
1001fdb3:	mov    BYTE PTR [ebp-0x4],0x7
1001fdb7:	call   0x10011fd0
1001fdbc:	mov    ecx,DWORD PTR [ebp-0x20]
1001fdbf:	mov    DWORD PTR [ecx],eax
1001fdc1:	call   0x100025b0
1001fdc6:	push   0x0
1001fdc8:	push   0x1
1001fdca:	lea    ecx,[ebp+0x94]
1001fdd0:	call   0x100012eb
1001fdd5:	push   ebx
1001fdd6:	call   0x10042f82
1001fddb:	pop    ecx
1001fddc:	xor    eax,eax
1001fdde:	lea    esp,[ebp-0x58]
1001fde1:	mov    ecx,DWORD PTR [ebp-0xc]
1001fde4:	mov    DWORD PTR fs:0x0,ecx
1001fdeb:	pop    ecx
1001fdec:	pop    edi
1001fded:	pop    esi
1001fdee:	pop    ebx
1001fdef:	mov    ecx,DWORD PTR [ebp+0xcc]
1001fdf5:	xor    ecx,ebp
1001fdf7:	call   0x10042f87
1001fdfc:	add    ebp,0xd0
1001fe02:	leave  
1001fe03:	ret    0x18
1001fe06:	mov    eax,0x1001fe0c
1001fe0b:	ret    
1001fe0c:	and    DWORD PTR [ebp-0x14],0x0
1001fe10:	lea    eax,[ebp-0x14]
1001fe13:	mov    DWORD PTR [ebp-0x4],0x9
1001fe1a:	call   0x10011fd0
1001fe1f:	mov    ecx,DWORD PTR [ebp-0x20]
1001fe22:	lea    edi,[ebp-0x14]
1001fe25:	mov    DWORD PTR [ecx],eax
1001fe27:	call   0x100025b0
1001fe2c:	jmp    0x1001fddc
1001fe2e:	lea    edi,[ebp+0x0]
1001fe31:	call   0x1000bce8
1001fe36:	cmp    ebx,esi
1001fe38:	mov    DWORD PTR [ebp-0x4],0xa
1001fe3f:	je     0x1001fe50
1001fe41:	push   ebx
1001fe42:	call   DWORD PTR ds:0x100660c4
1001fe48:	inc    eax
1001fe49:	cmp    eax,0x3fffffff
1001fe4e:	jle    0x1001fe54
1001fe50:	xor    eax,eax
1001fe52:	jmp    0x1001fe6d
1001fe54:	lea    edi,[eax+eax*1]
1001fe57:	mov    eax,edi
1001fe59:	call   0x1004b7e0
1001fe5e:	mov    DWORD PTR [ebp-0x10],esp
1001fe61:	mov    esi,esp
1001fe63:	push   DWORD PTR [ebp-0x1c]
1001fe66:	push   edi
1001fe67:	push   ebx
1001fe68:	call   0x10002422
1001fe6d:	push   eax
1001fe6e:	lea    ecx,[ebp+0xb0]
1001fe74:	call   0x100011c8
1001fe79:	lea    eax,[ebp+0x0]
1001fe7c:	push   eax
1001fe7d:	lea    ecx,[ebp+0xb0]
1001fe83:	mov    BYTE PTR [ebp-0x4],0xb
1001fe87:	call   0x10032ca0
1001fe8c:	mov    bl,al
1001fe8e:	neg    bl
1001fe90:	pop    ecx
1001fe91:	sbb    bl,bl
1001fe93:	xor    edi,edi
1001fe95:	push   edi
1001fe96:	push   0x1
1001fe98:	lea    ecx,[ebp+0xb0]
1001fe9e:	inc    bl
1001fea0:	mov    BYTE PTR [ebp-0x4],0xa
1001fea4:	call   0x100012eb
1001fea9:	test   bl,bl
1001feab:	je     0x1001fec1
1001fead:	mov    edi,0x80004005
1001feb2:	lea    esi,[ebp+0x0]
1001feb5:	call   0x1000bd15
1001feba:	mov    eax,edi
1001febc:	jmp    0x1001fdde
1001fec1:	cmp    DWORD PTR [ebp-0x14],edi
1001fec4:	mov    DWORD PTR [ebp-0x18],edi
1001fec7:	je     0x1001feda
1001fec9:	push   DWORD PTR [ebp-0x14]
1001fecc:	call   DWORD PTR ds:0x100660c4
1001fed2:	inc    eax
1001fed3:	cmp    eax,0x3fffffff
1001fed8:	jle    0x1001fede
1001feda:	xor    eax,eax
1001fedc:	jmp    0x1001fef9
1001fede:	lea    ebx,[eax+eax*1]
1001fee1:	mov    eax,ebx
1001fee3:	call   0x1004b7e0
1001fee8:	mov    DWORD PTR [ebp-0x10],esp
1001feeb:	mov    esi,esp
1001feed:	push   DWORD PTR [ebp-0x1c]
1001fef0:	push   ebx
1001fef1:	push   DWORD PTR [ebp-0x14]
1001fef4:	call   0x10002422
1001fef9:	push   eax
1001fefa:	lea    ecx,[ebp+0x94]
1001ff00:	call   0x100011c8
1001ff05:	push   DWORD PTR [ebp+0xe8]
1001ff0b:	lea    eax,[ebp-0x18]
1001ff0e:	push   eax
1001ff0f:	push   edi
1001ff10:	push   edi
1001ff11:	lea    eax,[ebp+0x94]
1001ff17:	push   eax
1001ff18:	lea    eax,[ebp+0x5c]
1001ff1b:	push   eax
1001ff1c:	mov    BYTE PTR [ebp-0x4],0xc
1001ff20:	push   DWORD PTR [ebp+0x20]
1001ff23:	lea    eax,[ebp+0x4]
1001ff26:	push   eax
1001ff27:	lea    eax,[ebp-0x14]
1001ff2a:	push   eax
1001ff2b:	call   0x10032750
1001ff30:	mov    ecx,DWORD PTR [eax]
1001ff32:	mov    ebx,ecx
1001ff34:	mov    DWORD PTR [eax],edi
1001ff36:	mov    DWORD PTR [ebp-0x1c],ebx
1001ff39:	mov    BYTE PTR [ebp-0x4],0xd
1001ff3d:	push   DWORD PTR [ebp-0x14]
1001ff40:	call   0x10042f82
1001ff45:	add    esp,0x28
1001ff48:	cmp    ebx,edi
1001ff4a:	je     0x1001ffba
1001ff4c:	push   DWORD PTR [ebp-0x18]
1001ff4f:	lea    esi,[ebp+0xb0]
1001ff55:	push   ebx
1001ff56:	call   0x100040e3
1001ff5b:	mov    BYTE PTR [ebp-0x4],0xe
1001ff5f:	cmp    DWORD PTR [ebp+0xc8],0x10
1001ff66:	mov    eax,DWORD PTR [ebp+0xb4]
1001ff6c:	jae    0x1001ff74
1001ff6e:	lea    eax,[ebp+0xb4]
1001ff74:	push   eax
1001ff75:	lea    edi,[ebp-0x18]
1001ff78:	call   0x10002455
1001ff7d:	mov    BYTE PTR [ebp-0x4],0xf
1001ff81:	call   0x10011fd0
1001ff86:	mov    ecx,DWORD PTR [ebp-0x20]
1001ff89:	mov    DWORD PTR [ecx],eax
1001ff8b:	call   0x100025b0
1001ff90:	xor    edi,edi
1001ff92:	push   edi
1001ff93:	push   0x1
1001ff95:	lea    ecx,[ebp+0xb0]
1001ff9b:	call   0x100012eb
1001ffa0:	push   ebx
1001ffa1:	call   0x10042f82
1001ffa6:	pop    ecx
1001ffa7:	push   edi
1001ffa8:	push   0x1
1001ffaa:	lea    ecx,[ebp+0x94]
1001ffb0:	call   0x100012eb
1001ffb5:	jmp    0x1001feb2
1001ffba:	mov    DWORD PTR [ebp-0x18],edi
1001ffbd:	lea    eax,[ebp-0x18]
1001ffc0:	mov    BYTE PTR [ebp-0x4],0x10
1001ffc4:	call   0x10011fd0
1001ffc9:	mov    ecx,DWORD PTR [ebp-0x20]
1001ffcc:	lea    edi,[ebp-0x18]
1001ffcf:	mov    DWORD PTR [ecx],eax
1001ffd1:	call   0x100025b0
1001ffd6:	push   0x0
1001ffd8:	call   0x10042f82
1001ffdd:	pop    ecx
1001ffde:	push   0x0
1001ffe0:	push   0x1
1001ffe2:	lea    ecx,[ebp+0x94]
1001ffe8:	call   0x100012eb
1001ffed:	jmp    0x1001fead
1001fff2:	mov    ecx,DWORD PTR [esp+0x8]
1001fff6:	test   ecx,ecx
1001fff8:	mov    eax,DWORD PTR [esp+0x4]
1001fffc:	jne    0x10020005
1001fffe:	mov    eax,0x80004003
10020003:	jmp    0x10020019
10020005:	mov    edx,DWORD PTR [eax-0x10]
10020008:	mov    DWORD PTR [ecx],edx
1002000a:	mov    eax,DWORD PTR [eax-0x10]
1002000d:	test   eax,eax
1002000f:	je     0x10020017
10020011:	mov    ecx,DWORD PTR [eax]
10020013:	push   eax
10020014:	call   DWORD PTR [ecx+0x4]
10020017:	xor    eax,eax
10020019:	ret    0x8
1002001c:	push   DWORD PTR [esp+0x8]
10020020:	call   DWORD PTR ds:0x10066160
10020026:	push   eax
10020027:	call   0x1001f25c
1002002c:	pop    ecx
1002002d:	pop    ecx
1002002e:	xor    eax,eax
10020030:	ret    0x8
10020033:	mov    eax,DWORD PTR [esi+0x4]
10020036:	mov    ecx,DWORD PTR [esi+0x8]
10020039:	cmp    eax,ecx
1002003b:	push   edi
1002003c:	jne    0x1002006c
1002003e:	test   ecx,ecx
10020040:	jne    0x10020047
10020042:	xor    edi,edi
10020044:	inc    edi
10020045:	jmp    0x10020056
10020047:	lea    edi,[eax+eax*1]
1002004a:	test   edi,edi
1002004c:	jl     0x1002008c
1002004e:	cmp    edi,0x3fffffff
10020054:	ja     0x1002008c
10020056:	push   0x2
10020058:	push   edi
10020059:	push   DWORD PTR [esi]
1002005b:	call   0x100464b3
10020060:	add    esp,0xc
10020063:	test   eax,eax
10020065:	je     0x1002008c
10020067:	mov    DWORD PTR [esi+0x8],edi
1002006a:	mov    DWORD PTR [esi],eax
1002006c:	mov    eax,DWORD PTR [esi+0x4]
1002006f:	mov    ecx,DWORD PTR [esi]
10020071:	lea    eax,[ecx+eax*2]
10020074:	test   eax,eax
10020076:	je     0x10020082
10020078:	mov    ecx,DWORD PTR [esp+0x8]
1002007c:	mov    cx,WORD PTR [ecx]
1002007f:	mov    WORD PTR [eax],cx
10020082:	inc    DWORD PTR [esi+0x4]
10020085:	xor    eax,eax
10020087:	inc    eax
10020088:	pop    edi
10020089:	ret    0x4
1002008c:	xor    eax,eax
1002008e:	jmp    0x10020088
10020090:	mov    eax,DWORD PTR [esp+0x8]
10020094:	push   esi
10020095:	xor    esi,esi
10020097:	cmp    eax,esi
10020099:	push   edi
1002009a:	jne    0x100200a1
1002009c:	mov    eax,0x1007f814
100200a1:	mov    ecx,DWORD PTR [eax+0x4]
100200a4:	mov    edi,DWORD PTR [eax+0xc]
100200a7:	mov    edx,DWORD PTR [eax]
100200a9:	mov    eax,DWORD PTR [eax+0x8]
100200ac:	push   esi
100200ad:	push   DWORD PTR ds:0x10080a04
100200b3:	sub    edi,ecx
100200b5:	push   DWORD PTR [esp+0x1c]
100200b9:	sub    eax,edx
100200bb:	push   esi
100200bc:	push   edi
100200bd:	push   eax
100200be:	push   ecx
100200bf:	push   edx
100200c0:	push   esi
100200c1:	push   esi
100200c2:	push   0x100704fc
100200c7:	push   esi
100200c8:	call   DWORD PTR ds:0x10066324
100200ce:	mov    ecx,DWORD PTR [esp+0xc]
100200d2:	pop    edi
100200d3:	mov    DWORD PTR [ecx],eax
100200d5:	pop    esi
100200d6:	ret    0xc
100200d9:	push   0x0
100200db:	mov    eax,0x1005f72d
100200e0:	call   0x10059b25
100200e5:	xor    ecx,ecx
100200e7:	cmp    ebx,ecx
100200e9:	jne    0x100200f2
100200eb:	mov    eax,0x80004003
100200f0:	jmp    0x1002013f
100200f2:	mov    DWORD PTR [ebx],ecx
100200f4:	push   ecx
100200f5:	mov    DWORD PTR [ebp-0x4],ecx
100200f8:	mov    eax,DWORD PTR [ebp+0x8]
100200fb:	mov    eax,DWORD PTR [eax]
100200fd:	push   ecx
100200fe:	push   DWORD PTR ds:0x10080fd8
10020104:	push   eax
10020105:	call   DWORD PTR ds:0x10066330
1002010b:	mov    edi,eax
1002010d:	mov    esi,edi
1002010f:	neg    esi
10020111:	sbb    esi,esi
10020113:	and    esi,0x7fffbffb
10020119:	add    esi,0x80004005
1002011f:	mov    DWORD PTR [ebp+0x8],edi
10020122:	js     0x1002012f
10020124:	mov    eax,DWORD PTR [edi]
10020126:	push   ebx
10020127:	push   DWORD PTR [ebp+0xc]
1002012a:	push   edi
1002012b:	call   DWORD PTR [eax]
1002012d:	mov    esi,eax
1002012f:	or     DWORD PTR [ebp-0x4],0xffffffff
10020133:	test   edi,edi
10020135:	je     0x1002013d
10020137:	mov    eax,DWORD PTR [edi]
10020139:	push   edi
1002013a:	call   DWORD PTR [eax+0x8]
1002013d:	mov    eax,esi
1002013f:	call   0x10059bfd
10020144:	ret    0x8
10020147:	push   ebp
10020148:	mov    ebp,esp
1002014a:	cmp    DWORD PTR ds:0x1007f858,0x0
10020151:	jne    0x1002015a
10020153:	and    DWORD PTR ds:0x1007f858,0x0
1002015a:	push   ebx
1002015b:	push   DWORD PTR [ebp+0xc]
1002015e:	lea    eax,[esi+0x20]
10020161:	push   eax
10020162:	mov    ebx,0x1007f828
10020167:	call   0x10021f55
1002016c:	pop    ecx
1002016d:	pop    ecx
1002016e:	movzx  eax,ax
10020171:	push   eax
10020172:	push   DWORD PTR [ebp+0xc]
10020175:	mov    ebx,esi
10020177:	push   0x0
10020179:	push   0xcf0000
1002017e:	push   0x100703c4
10020183:	push   DWORD PTR [ebp+0x8]
10020186:	call   0x10021ece
1002018b:	pop    ebx
1002018c:	pop    ebp
1002018d:	ret    0x8
10020190:	mov    eax,0x10021dc8
10020195:	ret    
10020196:	ret    0x4
10020199:	push   ebp
1002019a:	mov    ebp,esp
1002019c:	cmp    DWORD PTR ds:0x1007f8e8,0x0
100201a3:	jne    0x100201ac
100201a5:	and    DWORD PTR ds:0x1007f8e8,0x0
100201ac:	push   ebx
100201ad:	push   DWORD PTR [ebp+0xc]
100201b0:	lea    eax,[esi+0x20]
100201b3:	push   eax
100201b4:	mov    ebx,0x1007f8b8
100201b9:	call   0x10021f55
100201be:	pop    ecx
100201bf:	pop    ecx
100201c0:	movzx  eax,ax
100201c3:	push   eax
100201c4:	push   DWORD PTR [ebp+0xc]
100201c7:	mov    ebx,esi
100201c9:	push   0x0
100201cb:	push   0xcf0000
100201d0:	push   0x10070410
100201d5:	push   DWORD PTR [ebp+0x8]
100201d8:	call   0x10021ece
100201dd:	pop    ebx
100201de:	pop    ebp
100201df:	ret    0x8
100201e2:	push   esi
100201e3:	mov    esi,DWORD PTR [esp+0x8]
100201e7:	lea    eax,[esi-0x38]
100201ea:	neg    esi
100201ec:	sbb    esi,esi
100201ee:	and    esi,eax
100201f0:	push   edi
100201f1:	mov    edi,DWORD PTR [esp+0x10]
100201f5:	add    esi,0x3c
100201f8:	cmp    DWORD PTR [esi],edi
100201fa:	je     0x10020201
100201fc:	call   0x1000777b
10020201:	pop    edi
10020202:	xor    eax,eax
10020204:	pop    esi
10020205:	ret    0x8
10020208:	mov    ecx,DWORD PTR [esp+0x4]
1002020c:	mov    edx,DWORD PTR [esp+0xc]
10020210:	lea    eax,[ecx-0x38]
10020213:	neg    ecx
10020215:	sbb    ecx,ecx
10020217:	and    ecx,eax
10020219:	test   edx,edx
1002021b:	mov    eax,0x80004003
10020220:	je     0x1002023d
10020222:	mov    ecx,DWORD PTR [ecx+0x3c]
10020225:	test   ecx,ecx
10020227:	je     0x10020235
10020229:	mov    eax,DWORD PTR [ecx]
1002022b:	push   edx
1002022c:	push   DWORD PTR [esp+0xc]
10020230:	push   ecx
10020231:	call   DWORD PTR [eax]
10020233:	jmp    0x1002023d
10020235:	and    DWORD PTR [edx],0x0
10020238:	mov    eax,0x80004005
1002023d:	ret    0xc
10020240:	push   edi
10020241:	mov    edi,DWORD PTR [esp+0x14]
10020245:	mov    ecx,0x1007f944
1002024a:	call   0x10010534
1002024f:	pop    edi
10020250:	ret    0x10
10020253:	push   DWORD PTR [esp+0x18]
10020257:	mov    eax,0x1007f944
1002025c:	push   DWORD PTR [esp+0x14]
10020260:	push   DWORD PTR [esp+0x14]
10020264:	call   0x10010562
10020269:	ret    0x18
1002026c:	push   ebp
1002026d:	mov    ebp,esp
1002026f:	push   DWORD PTR [ebp+0x28]
10020272:	mov    eax,0x1007f944
10020277:	push   DWORD PTR [ebp+0x24]
1002027a:	push   DWORD PTR [ebp+0x20]
1002027d:	push   DWORD PTR [ebp+0x1c]
10020280:	push   DWORD PTR [ebp+0x18]
10020283:	push   DWORD PTR [ebp+0xc]
10020286:	push   DWORD PTR [ebp+0x8]
10020289:	call   0x10010605
1002028e:	pop    ebp
1002028f:	ret    0x24
10020292:	push   esi
10020293:	mov    esi,ecx
10020295:	mov    DWORD PTR [esi],0x10070658
1002029b:	mov    DWORD PTR [esi+0x24],0x10070668
100202a2:	mov    DWORD PTR [esi+0x28],0xc0000001
100202a9:	mov    eax,DWORD PTR [esi+0x2c]
100202ac:	test   eax,eax
100202ae:	je     0x100202ba
100202b0:	and    DWORD PTR [esi+0x2c],0x0
100202b4:	mov    ecx,DWORD PTR [eax]
100202b6:	push   eax
100202b7:	call   DWORD PTR [ecx+0x8]
100202ba:	mov    eax,DWORD PTR [esi+0x4]
100202bd:	test   eax,eax
100202bf:	je     0x100202c8
100202c1:	push   eax
100202c2:	call   DWORD PTR ds:0x10066304
100202c8:	mov    ecx,DWORD PTR ds:0x10080c04
100202ce:	mov    eax,DWORD PTR [ecx]
100202d0:	call   DWORD PTR [eax+0x8]
100202d3:	mov    eax,DWORD PTR [esi+0x2c]
100202d6:	test   eax,eax
100202d8:	je     0x100202e0
100202da:	mov    ecx,DWORD PTR [eax]
100202dc:	push   eax
100202dd:	call   DWORD PTR [ecx+0x8]
100202e0:	mov    esi,DWORD PTR [esi+0x14]
100202e3:	test   esi,esi
100202e5:	je     0x100202ed
100202e7:	push   esi
100202e8:	call   0x100571de
100202ed:	pop    esi
100202ee:	ret    
100202ef:	mov    eax,DWORD PTR [esp+0x4]
100202f3:	dec    DWORD PTR [eax+0x4]
100202f6:	push   esi
100202f7:	mov    esi,DWORD PTR [eax+0x4]
100202fa:	jne    0x1002030a
100202fc:	lea    ecx,[eax-0x24]
100202ff:	test   ecx,ecx
10020301:	je     0x1002030a
10020303:	mov    eax,DWORD PTR [ecx]
10020305:	push   0x1
10020307:	call   DWORD PTR [eax+0x4]
1002030a:	mov    eax,esi
1002030c:	pop    esi
1002030d:	ret    0x4
10020310:	mov    eax,DWORD PTR [esp+0x4]
10020314:	push   ebx
10020315:	push   DWORD PTR [esp+0xc]
10020319:	mov    ebx,DWORD PTR [esp+0x14]
1002031d:	add    eax,0xffffffdc
10020320:	push   eax
10020321:	mov    eax,0x10070394
10020326:	call   0x10010413
1002032b:	pop    ebx
1002032c:	ret    0xc
1002032f:	push   esi
10020330:	mov    esi,ecx
10020332:	mov    DWORD PTR [esi],0x100706a4
10020338:	mov    DWORD PTR [esi+0x24],0x100706b4
1002033f:	mov    DWORD PTR [esi+0x28],0xc0000001
10020346:	mov    eax,DWORD PTR [esi+0x2c]
10020349:	test   eax,eax
1002034b:	je     0x10020357
1002034d:	and    DWORD PTR [esi+0x2c],0x0
10020351:	mov    ecx,DWORD PTR [eax]
10020353:	push   eax
10020354:	call   DWORD PTR [ecx+0x8]
10020357:	mov    eax,DWORD PTR [esi+0x4]
1002035a:	test   eax,eax
1002035c:	je     0x10020365
1002035e:	push   eax
1002035f:	call   DWORD PTR ds:0x10066304
10020365:	mov    ecx,DWORD PTR ds:0x10080c04
1002036b:	mov    eax,DWORD PTR [ecx]
1002036d:	call   DWORD PTR [eax+0x8]
10020370:	mov    eax,DWORD PTR [esi+0x2c]
10020373:	test   eax,eax
10020375:	je     0x1002037d
10020377:	mov    ecx,DWORD PTR [eax]
10020379:	push   eax
1002037a:	call   DWORD PTR [ecx+0x8]
1002037d:	mov    esi,DWORD PTR [esi+0x14]
10020380:	test   esi,esi
10020382:	je     0x1002038a
10020384:	push   esi
10020385:	call   0x100571de
1002038a:	pop    esi
1002038b:	ret    
1002038c:	mov    eax,DWORD PTR [esp+0x4]
10020390:	inc    DWORD PTR [eax+0x4]
10020393:	mov    eax,DWORD PTR [eax+0x4]
10020396:	ret    0x4
10020399:	mov    eax,DWORD PTR [esp+0x4]
1002039d:	push   ebx
1002039e:	push   DWORD PTR [esp+0xc]
100203a2:	mov    ebx,DWORD PTR [esp+0x14]
100203a6:	add    eax,0xffffffdc
100203a9:	push   eax
100203aa:	mov    eax,0x100703ec
100203af:	call   0x10010413
100203b4:	pop    ebx
100203b5:	ret    0xc
100203b8:	xor    eax,eax
100203ba:	mov    DWORD PTR [esi+0x4],eax
100203bd:	mov    DWORD PTR [esi+0x10],eax
100203c0:	mov    DWORD PTR [esi+0xc],eax
100203c3:	mov    DWORD PTR [esi+0x8],eax
100203c6:	mov    DWORD PTR [esi+0x14],eax
100203c9:	mov    DWORD PTR [esi+0x18],eax
100203cc:	mov    DWORD PTR [esi],0x100706d8
100203d2:	mov    ecx,DWORD PTR ds:0x10080c04
100203d8:	mov    eax,DWORD PTR [ecx]
100203da:	call   DWORD PTR [eax+0x4]
100203dd:	mov    eax,esi
100203df:	ret    
100203e0:	push   esi
100203e1:	mov    esi,ecx
100203e3:	mov    DWORD PTR [esi],0x100706d8
100203e9:	mov    DWORD PTR [esi+0x18],0xc0000001
100203f0:	mov    ecx,DWORD PTR ds:0x10080c04
100203f6:	mov    eax,DWORD PTR [ecx]
100203f8:	call   DWORD PTR [eax+0x8]
100203fb:	mov    ecx,esi
100203fd:	pop    esi
100203fe:	jmp    0x1002481a
10020403:	mov    ecx,DWORD PTR [esp+0x4]
10020407:	dec    DWORD PTR [ecx+0x18]
1002040a:	push   esi
1002040b:	mov    esi,DWORD PTR [ecx+0x18]
1002040e:	jne    0x1002041b
10020410:	test   ecx,ecx
10020412:	je     0x1002041b
10020414:	mov    eax,DWORD PTR [ecx]
10020416:	push   0x1
10020418:	call   DWORD PTR [eax+0x1c]
1002041b:	mov    eax,esi
1002041d:	pop    esi
1002041e:	ret    0x4
10020421:	push   ebx
10020422:	push   DWORD PTR [esp+0xc]
10020426:	mov    ebx,DWORD PTR [esp+0x14]
1002042a:	push   DWORD PTR [esp+0xc]
1002042e:	mov    eax,0x10070630
10020433:	call   0x10010413
10020438:	pop    ebx
10020439:	ret    0xc
1002043c:	push   DWORD PTR [esi]
1002043e:	call   0x1001b6bb
10020443:	and    DWORD PTR [esi],0x0
10020446:	pop    ecx
10020447:	ret    
10020448:	push   0x10
1002044a:	mov    eax,0x100601e3
1002044f:	call   0x10059b58
10020454:	mov    eax,DWORD PTR [ebp+0x8]
10020457:	xor    esi,esi
10020459:	cmp    eax,esi
1002045b:	jne    0x10020464
1002045d:	mov    eax,0x80004003
10020462:	jmp    0x100204ca
10020464:	push   0xf4
10020469:	mov    DWORD PTR [eax],esi
1002046b:	mov    DWORD PTR [ebp-0x14],0x8007000e
10020472:	mov    DWORD PTR [ebp-0x1c],esi
10020475:	mov    DWORD PTR [ebp-0x4],esi
10020478:	call   0x1004358e
1002047d:	pop    ecx
1002047e:	mov    DWORD PTR [ebp-0x18],eax
10020481:	cmp    eax,esi
10020483:	mov    BYTE PTR [ebp-0x4],0x1
10020487:	je     0x10020491
10020489:	push   eax
1002048a:	call   0x10021102
1002048f:	mov    esi,eax
10020491:	or     DWORD PTR [ebp-0x4],0xffffffff
10020495:	jmp    0x100204a0
10020497:	mov    eax,0x1002049d
1002049c:	ret    
1002049d:	mov    esi,DWORD PTR [ebp-0x1c]
100204a0:	test   esi,esi
100204a2:	je     0x100204c7
100204a4:	push   DWORD PTR [ebp+0x8]
100204a7:	inc    DWORD PTR [esi+0x4]
100204aa:	dec    DWORD PTR [esi+0x4]
100204ad:	mov    eax,DWORD PTR [esi]
100204af:	push   0x1006dd70
100204b4:	push   esi
100204b5:	call   DWORD PTR [eax]
100204b7:	test   eax,eax
100204b9:	mov    DWORD PTR [ebp-0x14],eax
100204bc:	je     0x100204c7
100204be:	mov    eax,DWORD PTR [esi]
100204c0:	push   0x1
100204c2:	mov    ecx,esi
100204c4:	call   DWORD PTR [eax+0xc]
100204c7:	mov    eax,DWORD PTR [ebp-0x14]
100204ca:	call   0x10059bfd
100204cf:	ret    0x4
100204d2:	push   ebp
100204d3:	mov    ebp,esp
100204d5:	and    esp,0xfffffff8
100204d8:	push   0xffffffff
100204da:	push   0x10060c4c
100204df:	mov    eax,fs:0x0
100204e5:	push   eax
100204e6:	sub    esp,0x70
100204e9:	mov    eax,ds:0x1007e030
100204ee:	xor    eax,esp
100204f0:	mov    DWORD PTR [esp+0x68],eax
100204f4:	push   ebx
100204f5:	push   esi
100204f6:	push   edi
100204f7:	mov    eax,ds:0x1007e030
100204fc:	xor    eax,esp
100204fe:	push   eax
100204ff:	lea    eax,[esp+0x80]
10020506:	mov    fs:0x0,eax
1002050c:	mov    edi,ecx
1002050e:	mov    eax,edi
10020510:	mov    DWORD PTR [esp+0x14],edi
10020514:	mov    esi,edx
10020516:	call   0x10020e85
1002051b:	lea    eax,[esp+0x68]
1002051f:	push   eax
10020520:	push   esi
10020521:	call   DWORD PTR ds:0x10066438
10020527:	test   eax,eax
10020529:	jl     0x10020648
1002052f:	lea    esi,[edi+0xc]
10020532:	push   esi
10020533:	push   0x1006b8b8
10020538:	push   0x17
1002053a:	push   0x0
1002053c:	lea    eax,[esp+0x78]
10020540:	push   eax
10020541:	mov    DWORD PTR [esp+0x2c],esi
10020545:	call   DWORD PTR ds:0x1006643c
1002054b:	test   eax,eax
1002054d:	mov    DWORD PTR [esp+0x10],eax
10020551:	jl     0x10020588
10020553:	mov    eax,DWORD PTR [esi]
10020555:	mov    ecx,DWORD PTR [eax]
10020557:	lea    ebx,[edi+0x8]
1002055a:	push   ebx
1002055b:	push   0x1006b8a8
10020560:	push   eax
10020561:	call   DWORD PTR [ecx]
10020563:	test   eax,eax
10020565:	mov    DWORD PTR [esp+0x10],eax
10020569:	jl     0x10020588
1002056b:	mov    esi,DWORD PTR [esi]
1002056d:	mov    eax,DWORD PTR [esi]
1002056f:	push   edi
10020570:	push   esi
10020571:	call   DWORD PTR [eax+0xc]
10020574:	test   eax,eax
10020576:	mov    DWORD PTR [esp+0x10],eax
1002057a:	jl     0x10020588
1002057c:	mov    ebx,DWORD PTR [ebx]
1002057e:	mov    eax,DWORD PTR [ebx]
10020580:	push   ebx
10020581:	call   DWORD PTR [eax+0xc]
10020584:	mov    DWORD PTR [esp+0x10],eax
10020588:	push   0x10070618
1002058d:	lea    eax,[esp+0x50]
10020591:	call   0x10020d13
10020596:	and    DWORD PTR [esp+0x88],0x0
1002059e:	mov    eax,edi
100205a0:	neg    eax
100205a2:	sbb    eax,eax
100205a4:	lea    ecx,[edi-0x8]
100205a7:	and    eax,ecx
100205a9:	lea    ebx,[eax+0x24]
100205ac:	lea    eax,[esp+0x4c]
100205b0:	lea    esi,[esp+0x20]
100205b4:	call   0x10004b4a
100205b9:	mov    DWORD PTR [esp+0x3c],ebx
100205bd:	mov    eax,esi
100205bf:	add    edi,0x10
100205c2:	push   eax
100205c3:	push   edi
100205c4:	mov    DWORD PTR [esp+0x24],edi
100205c8:	lea    edi,[esp+0x48]
100205cc:	mov    BYTE PTR [esp+0x90],0x1
100205d4:	call   0x10020d3f
100205d9:	push   0x1
100205db:	xor    ebx,ebx
100205dd:	mov    BYTE PTR [esp+0x8c],0x0
100205e5:	call   0x10005279
100205ea:	cmp    DWORD PTR [esp+0x10],ebx
100205ee:	jl     0x10020625
100205f0:	mov    esi,DWORD PTR [esp+0x18]
100205f4:	mov    eax,DWORD PTR [esi]
100205f6:	mov    ecx,DWORD PTR [eax]
100205f8:	push   0xe
100205fa:	push   0x10070618
100205ff:	push   eax
10020600:	call   DWORD PTR [ecx+0x20]
10020603:	test   eax,eax
10020605:	jl     0x10020625
10020607:	mov    eax,DWORD PTR [esi]
10020609:	mov    ecx,DWORD PTR [eax]
1002060b:	push   0x1
1002060d:	push   eax
1002060e:	call   DWORD PTR [ecx+0x14]
10020611:	test   eax,eax
10020613:	jl     0x10020625
10020615:	push   0x1
10020617:	lea    esi,[esp+0x50]
1002061b:	call   0x10005279
10020620:	xor    eax,eax
10020622:	inc    eax
10020623:	jmp    0x1002064a
10020625:	mov    ecx,DWORD PTR [esp+0x1c]
10020629:	lea    eax,[esp+0x4c]
1002062d:	call   0x10020df5
10020632:	mov    eax,DWORD PTR [esp+0x14]
10020636:	call   0x10020e85
1002063b:	push   0x1
1002063d:	xor    ebx,ebx
1002063f:	lea    esi,[esp+0x50]
10020643:	call   0x10005279
10020648:	xor    eax,eax
1002064a:	mov    ecx,DWORD PTR [esp+0x80]
10020651:	mov    DWORD PTR fs:0x0,ecx
10020658:	pop    ecx
10020659:	pop    edi
1002065a:	pop    esi
1002065b:	pop    ebx
1002065c:	mov    ecx,DWORD PTR [esp+0x68]
10020660:	xor    ecx,esp
10020662:	call   0x10042f87
10020667:	mov    esp,ebp
10020669:	pop    ebp
1002066a:	ret    
1002066b:	push   ebp
1002066c:	mov    ebp,esp
1002066e:	and    esp,0xfffffff8
10020671:	push   0xffffffff
10020673:	push   0x10060c14
10020678:	mov    eax,fs:0x0
1002067e:	push   eax
1002067f:	sub    esp,0x60
10020682:	mov    eax,ds:0x1007e030
10020687:	xor    eax,esp
10020689:	mov    DWORD PTR [esp+0x58],eax
1002068d:	push   ebx
1002068e:	push   esi
1002068f:	push   edi
10020690:	mov    eax,ds:0x1007e030
10020695:	xor    eax,esp
10020697:	push   eax
10020698:	lea    eax,[esp+0x70]
1002069c:	mov    fs:0x0,eax
100206a2:	mov    ebx,ecx
100206a4:	mov    esi,DWORD PTR [ebp+0x8]
100206a7:	mov    edi,edx
100206a9:	cmp    DWORD PTR [edi+0xc],0x0
100206ad:	mov    DWORD PTR [esp+0x18],edi
100206b1:	mov    DWORD PTR [esp+0x1c],esi
100206b5:	je     0x10020763
100206bb:	test   ebx,ebx
100206bd:	je     0x10020763
100206c3:	call   DWORD PTR ds:0x1007efec
100206c9:	push   esi
100206ca:	lea    eax,[esp+0x50]
100206ce:	call   0x10020d13
100206d3:	and    DWORD PTR [esp+0x78],0x0
100206d8:	lea    eax,[esp+0x4c]
100206dc:	lea    esi,[esp+0x20]
100206e0:	call   0x10004b4a
100206e5:	mov    DWORD PTR [esp+0x3c],ebx
100206e9:	lea    eax,[edi+0x10]
100206ec:	mov    ecx,esi
100206ee:	push   ecx
100206ef:	push   eax
100206f0:	lea    edi,[esp+0x48]
100206f4:	mov    BYTE PTR [esp+0x80],0x1
100206fc:	mov    DWORD PTR [esp+0x1c],eax
10020700:	call   0x10020d3f
10020705:	push   0x1
10020707:	xor    ebx,ebx
10020709:	mov    BYTE PTR [esp+0x7c],0x0
1002070e:	call   0x10005279
10020713:	mov    esi,DWORD PTR [esp+0x18]
10020717:	mov    eax,DWORD PTR [esi+0xc]
1002071a:	mov    ecx,DWORD PTR [eax]
1002071c:	push   0xe
1002071e:	push   DWORD PTR [esp+0x20]
10020722:	push   eax
10020723:	call   DWORD PTR [ecx+0x20]
10020726:	test   eax,eax
10020728:	jl     0x10020749
1002072a:	mov    esi,DWORD PTR [esi+0xc]
1002072d:	mov    eax,DWORD PTR [esi]
1002072f:	push   0x2
10020731:	push   esi
10020732:	call   DWORD PTR [eax+0x14]
10020735:	test   eax,eax
10020737:	jl     0x10020749
10020739:	push   0x1
1002073b:	lea    esi,[esp+0x50]
1002073f:	call   0x10005279
10020744:	xor    eax,eax
10020746:	inc    eax
10020747:	jmp    0x10020765
10020749:	mov    ecx,DWORD PTR [esp+0x14]
1002074d:	lea    eax,[esp+0x4c]
10020751:	call   0x10020df5
10020756:	push   0x1
10020758:	xor    ebx,ebx
1002075a:	lea    esi,[esp+0x50]
1002075e:	call   0x10005279
10020763:	xor    eax,eax
10020765:	mov    ecx,DWORD PTR [esp+0x70]
10020769:	mov    DWORD PTR fs:0x0,ecx
10020770:	pop    ecx
10020771:	pop    edi
10020772:	pop    esi
10020773:	pop    ebx
10020774:	mov    ecx,DWORD PTR [esp+0x58]
10020778:	xor    ecx,esp
1002077a:	call   0x10042f87
1002077f:	mov    esp,ebp
10020781:	pop    ebp
10020782:	ret    0x4
10020785:	push   ebp
10020786:	mov    ebp,esp
10020788:	sub    esp,0x1c
1002078b:	mov    eax,ds:0x1007e030
10020790:	xor    eax,ebp
10020792:	mov    DWORD PTR [ebp-0x8],eax
10020795:	mov    eax,DWORD PTR [ebp+0x8]
10020798:	and    DWORD PTR [ebp-0x1c],0x0
1002079c:	push   esi
1002079d:	push   edi
1002079e:	mov    esi,0x1006b858
100207a3:	lea    edi,[ebp-0x18]
100207a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
100207a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
100207a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
100207a9:	lea    ecx,[ebp-0x18]
100207ac:	push   ecx
100207ad:	push   eax
100207ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
100207af:	call   DWORD PTR ds:0x10066438
100207b5:	test   eax,eax
100207b7:	jl     0x100207d0
100207b9:	lea    eax,[ebp-0x1c]
100207bc:	push   eax
100207bd:	push   0x1006b8c8
100207c2:	push   0x1
100207c4:	push   0x0
100207c6:	lea    eax,[ebp-0x18]
100207c9:	push   eax
100207ca:	call   DWORD PTR ds:0x1006643c
100207d0:	mov    ecx,DWORD PTR [ebp-0x8]
100207d3:	mov    eax,DWORD PTR [ebp-0x1c]
100207d6:	pop    edi
100207d7:	xor    ecx,ebp
100207d9:	pop    esi
100207da:	call   0x10042f87
100207df:	leave  
100207e0:	ret    0x4
100207e3:	push   ebp
100207e4:	mov    ebp,esp
100207e6:	mov    ecx,DWORD PTR [ecx+0xc]
100207e9:	sub    esp,0x14
100207ec:	push   edi
100207ed:	xor    edi,edi
100207ef:	cmp    ecx,edi
100207f1:	mov    eax,0x80004005
100207f6:	je     0x10020857
100207f8:	mov    eax,DWORD PTR [ebp+0xc]
100207fb:	lea    edx,[ebp-0x4]
100207fe:	mov    DWORD PTR [ebp-0x14],eax
10020801:	mov    eax,DWORD PTR [ebp+0x10]
10020804:	push   edx
10020805:	push   edi
10020806:	mov    DWORD PTR [ebp-0x4],edi
10020809:	mov    DWORD PTR [ebp-0x10],edi
1002080c:	mov    DWORD PTR [ebp-0xc],eax
1002080f:	mov    DWORD PTR [ebp-0x8],edi
10020812:	mov    eax,DWORD PTR [ecx]
10020814:	push   ecx
10020815:	call   DWORD PTR [eax+0x28]
10020818:	cmp    eax,edi
1002081a:	jl     0x10020857
1002081c:	mov    eax,DWORD PTR [ebp-0x4]
1002081f:	mov    ecx,DWORD PTR [eax]
10020821:	push   esi
10020822:	lea    edx,[ebp+0xc]
10020825:	push   edx
10020826:	push   0x9
10020828:	push   0x1
1002082a:	lea    edx,[ebp+0x8]
1002082d:	push   edx
1002082e:	mov    esi,0x1006b858
10020833:	push   esi
10020834:	push   eax
10020835:	call   DWORD PTR [ecx+0x14]
10020838:	cmp    eax,edi
1002083a:	jl     0x10020856
1002083c:	mov    eax,DWORD PTR [ebp-0x4]
1002083f:	mov    ecx,DWORD PTR [eax]
10020841:	push   edi
10020842:	push   edi
10020843:	push   DWORD PTR [ebp+0x14]
10020846:	lea    edx,[ebp-0x14]
10020849:	push   edx
1002084a:	push   0x1
1002084c:	push   0x9
1002084e:	push   esi
1002084f:	push   DWORD PTR [ebp+0xc]
10020852:	push   eax
10020853:	call   DWORD PTR [ecx+0x18]
10020856:	pop    esi
10020857:	pop    edi
10020858:	leave  
10020859:	ret    0x10
1002085c:	push   ebp
1002085d:	mov    ebp,esp
1002085f:	sub    esp,0x30
10020862:	push   esi
10020863:	push   edi
10020864:	push   ebx
10020865:	lea    eax,[ebp-0x8]
10020868:	call   0x10021002
1002086d:	mov    eax,ds:0x10080f58
10020872:	lea    edi,[ebp-0x10]
10020875:	lea    esi,[ebp-0x8]
10020878:	mov    DWORD PTR [ebp-0xc],eax
1002087b:	mov    DWORD PTR [ebp-0x10],0x10080f54
10020882:	call   0x10009d5c
10020887:	test   al,al
10020889:	mov    ecx,DWORD PTR [ebp-0x4]
1002088c:	jne    0x10020895
1002088e:	mov    eax,DWORD PTR [ebx]
10020890:	cmp    eax,DWORD PTR [ecx+0xc]
10020893:	jae    0x100208c8
10020895:	xor    eax,eax
10020897:	lea    edi,[ebp-0x18]
1002089a:	stos   DWORD PTR es:[edi],eax
1002089b:	stos   DWORD PTR es:[edi],eax
1002089c:	stos   DWORD PTR es:[edi],eax
1002089d:	stos   DWORD PTR es:[edi],eax
1002089e:	mov    eax,DWORD PTR [ebx]
100208a0:	mov    DWORD PTR [ebp-0x2c],eax
100208a3:	lea    esi,[ebp-0x18]
100208a6:	lea    edi,[ebp-0x28]
100208a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
100208aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
100208ab:	push   ecx
100208ac:	push   DWORD PTR [ebp-0x8]
100208af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
100208b0:	lea    eax,[ebp-0x10]
100208b3:	push   eax
100208b4:	lea    eax,[ebp-0x2c]
100208b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
100208b8:	call   0x10020ebd
100208bd:	mov    ecx,DWORD PTR [eax]
100208bf:	mov    eax,DWORD PTR [eax+0x4]
100208c2:	mov    DWORD PTR [ebp-0x8],ecx
100208c5:	mov    DWORD PTR [ebp-0x4],eax
100208c8:	lea    esi,[ebp-0x8]
100208cb:	call   0x10013f4a
100208d0:	pop    edi
100208d1:	add    eax,0x4
100208d4:	pop    esi
100208d5:	leave  
100208d6:	ret    
100208d7:	push   ebp
100208d8:	mov    ebp,esp
100208da:	and    esp,0xfffffff8
100208dd:	mov    eax,ds:0x10080f58
100208e2:	mov    edx,DWORD PTR [eax]
100208e4:	sub    esp,0xc
100208e7:	push   esi
100208e8:	push   eax
100208e9:	mov    ecx,0x10080f54
100208ee:	mov    esi,ecx
100208f0:	push   esi
100208f1:	push   edx
100208f2:	push   ecx
100208f3:	lea    eax,[esp+0x18]
100208f7:	push   eax
100208f8:	call   0x1002158d
100208fd:	push   DWORD PTR ds:0x10080f58
10020903:	call   0x10042f82
10020908:	and    DWORD PTR ds:0x10080f58,0x0
1002090f:	and    DWORD PTR ds:0x10080f5c,0x0
10020916:	pop    ecx
10020917:	pop    esi
10020918:	mov    esp,ebp
1002091a:	pop    ebp
1002091b:	ret    
1002091c:	push   0x48
1002091e:	mov    eax,0x100621c0
10020923:	call   0x10059b25
10020928:	mov    ebx,DWORD PTR [ebp+0x10]
1002092b:	cmp    BYTE PTR [ebx+0x21],0x0
1002092f:	je     0x10020963
10020931:	push   0x1006ccec
10020936:	lea    ecx,[ebp-0x2c]
10020939:	call   0x100011c8
1002093e:	and    DWORD PTR [ebp-0x4],0x0
10020942:	lea    eax,[ebp-0x2c]
10020945:	push   eax
10020946:	lea    ecx,[ebp-0x54]
10020949:	call   0x10001065
1002094e:	push   0x10074de8
10020953:	lea    eax,[ebp-0x54]
10020956:	push   eax
10020957:	mov    DWORD PTR [ebp-0x54],0x1006b978
1002095e:	call   0x10047aa4
10020963:	lea    esi,[ebp+0xc]
10020966:	call   0x100210b5
1002096b:	mov    ecx,DWORD PTR [ebx]
1002096d:	cmp    BYTE PTR [ecx+0x21],0x0
10020971:	je     0x10020978
10020973:	mov    edi,DWORD PTR [ebx+0x8]
10020976:	jmp    0x1002098f
10020978:	mov    eax,DWORD PTR [ebx+0x8]
1002097b:	cmp    BYTE PTR [eax+0x21],0x0
1002097f:	je     0x10020985
10020981:	mov    edi,ecx
10020983:	jmp    0x1002098f
10020985:	mov    eax,DWORD PTR [ebp+0x10]
10020988:	cmp    eax,ebx
1002098a:	mov    edi,DWORD PTR [eax+0x8]
1002098d:	jne    0x10020a07
1002098f:	cmp    BYTE PTR [edi+0x21],0x0
10020993:	mov    esi,DWORD PTR [ebx+0x4]
10020996:	jne    0x1002099b
10020998:	mov    DWORD PTR [edi+0x4],esi
1002099b:	mov    eax,ds:0x10080f58
100209a0:	cmp    DWORD PTR [eax+0x4],ebx
100209a3:	jne    0x100209aa
100209a5:	mov    DWORD PTR [eax+0x4],edi
100209a8:	jmp    0x100209b5
100209aa:	cmp    DWORD PTR [esi],ebx
100209ac:	jne    0x100209b2
100209ae:	mov    DWORD PTR [esi],edi
100209b0:	jmp    0x100209b5
100209b2:	mov    DWORD PTR [esi+0x8],edi
100209b5:	mov    edx,DWORD PTR ds:0x10080f58
100209bb:	cmp    DWORD PTR [edx],ebx
100209bd:	jne    0x100209db
100209bf:	cmp    BYTE PTR [edi+0x21],0x0
100209c3:	je     0x100209c9
100209c5:	mov    ecx,esi
100209c7:	jmp    0x100209d9
100209c9:	mov    eax,DWORD PTR [edi]
100209cb:	mov    ecx,edi
100209cd:	jmp    0x100209d3
100209cf:	mov    ecx,eax
100209d1:	mov    eax,DWORD PTR [ecx]
100209d3:	cmp    BYTE PTR [eax+0x21],0x0
100209d7:	je     0x100209cf
100209d9:	mov    DWORD PTR [edx],ecx
100209db:	mov    edx,DWORD PTR ds:0x10080f58
100209e1:	cmp    DWORD PTR [edx+0x8],ebx
100209e4:	jne    0x10020a61
100209e6:	cmp    BYTE PTR [edi+0x21],0x0
100209ea:	je     0x100209f0
100209ec:	mov    ecx,esi
100209ee:	jmp    0x10020a02
100209f0:	mov    eax,DWORD PTR [edi+0x8]
100209f3:	mov    ecx,edi
100209f5:	jmp    0x100209fc
100209f7:	mov    ecx,eax
100209f9:	mov    eax,DWORD PTR [ecx+0x8]
100209fc:	cmp    BYTE PTR [eax+0x21],0x0
10020a00:	je     0x100209f7
10020a02:	mov    DWORD PTR [edx+0x8],ecx
10020a05:	jmp    0x10020a61
10020a07:	mov    DWORD PTR [ecx+0x4],eax
10020a0a:	mov    ecx,DWORD PTR [ebx]
10020a0c:	mov    DWORD PTR [eax],ecx
10020a0e:	cmp    eax,DWORD PTR [ebx+0x8]
10020a11:	jne    0x10020a17
10020a13:	mov    esi,eax
10020a15:	jmp    0x10020a31
10020a17:	cmp    BYTE PTR [edi+0x21],0x0
10020a1b:	mov    esi,DWORD PTR [eax+0x4]
10020a1e:	jne    0x10020a23
10020a20:	mov    DWORD PTR [edi+0x4],esi
10020a23:	mov    DWORD PTR [esi],edi
10020a25:	mov    ecx,DWORD PTR [ebx+0x8]
10020a28:	mov    DWORD PTR [eax+0x8],ecx
10020a2b:	mov    ecx,DWORD PTR [ebx+0x8]
10020a2e:	mov    DWORD PTR [ecx+0x4],eax
10020a31:	mov    ecx,DWORD PTR ds:0x10080f58
10020a37:	cmp    DWORD PTR [ecx+0x4],ebx
10020a3a:	jne    0x10020a41
10020a3c:	mov    DWORD PTR [ecx+0x4],eax
10020a3f:	jmp    0x10020a4f
10020a41:	mov    ecx,DWORD PTR [ebx+0x4]
10020a44:	cmp    DWORD PTR [ecx],ebx
10020a46:	jne    0x10020a4c
10020a48:	mov    DWORD PTR [ecx],eax
10020a4a:	jmp    0x10020a4f
10020a4c:	mov    DWORD PTR [ecx+0x8],eax
10020a4f:	mov    ecx,DWORD PTR [ebx+0x4]
10020a52:	mov    DWORD PTR [eax+0x4],ecx
10020a55:	mov    dl,BYTE PTR [ebx+0x20]
10020a58:	mov    cl,BYTE PTR [eax+0x20]
10020a5b:	mov    BYTE PTR [eax+0x20],dl
10020a5e:	mov    BYTE PTR [ebx+0x20],cl
10020a61:	cmp    BYTE PTR [ebx+0x20],0x1
10020a65:	jne    0x10020b63
10020a6b:	jmp    0x10020b1e
10020a70:	cmp    BYTE PTR [edi+0x20],0x1
10020a74:	jne    0x10020b5f
10020a7a:	mov    ecx,DWORD PTR [esi]
10020a7c:	cmp    edi,ecx
10020a7e:	jne    0x10020ae7
10020a80:	mov    ecx,DWORD PTR [esi+0x8]
10020a83:	cmp    BYTE PTR [ecx+0x20],0x0
10020a87:	jne    0x10020a9b
10020a89:	mov    BYTE PTR [ecx+0x20],0x1
10020a8d:	mov    ecx,esi
10020a8f:	mov    BYTE PTR [esi+0x20],0x0
10020a93:	call   0x10021039
10020a98:	mov    ecx,DWORD PTR [esi+0x8]
10020a9b:	cmp    BYTE PTR [ecx+0x21],0x0
10020a9f:	jne    0x10020b19
10020aa1:	mov    eax,DWORD PTR [ecx]
10020aa3:	cmp    BYTE PTR [eax+0x20],0x1
10020aa7:	jne    0x10020ab2
10020aa9:	mov    eax,DWORD PTR [ecx+0x8]
10020aac:	cmp    BYTE PTR [eax+0x20],0x1
10020ab0:	je     0x10020b15
10020ab2:	mov    eax,DWORD PTR [ecx+0x8]
10020ab5:	cmp    BYTE PTR [eax+0x20],0x1
10020ab9:	jne    0x10020acd
10020abb:	mov    eax,DWORD PTR [ecx]
10020abd:	mov    BYTE PTR [eax+0x20],0x1
10020ac1:	mov    BYTE PTR [ecx+0x20],0x0
10020ac5:	call   0x10021076
10020aca:	mov    ecx,DWORD PTR [esi+0x8]
10020acd:	mov    al,BYTE PTR [esi+0x20]
10020ad0:	mov    BYTE PTR [ecx+0x20],al
10020ad3:	mov    BYTE PTR [esi+0x20],0x1
10020ad7:	mov    eax,DWORD PTR [ecx+0x8]
10020ada:	mov    ecx,esi
10020adc:	mov    BYTE PTR [eax+0x20],0x1
10020ae0:	call   0x10021039
10020ae5:	jmp    0x10020b5f
10020ae7:	cmp    BYTE PTR [ecx+0x20],0x0
10020aeb:	jne    0x10020afe
10020aed:	mov    BYTE PTR [ecx+0x20],0x1
10020af1:	mov    ecx,esi
10020af3:	mov    BYTE PTR [esi+0x20],0x0
10020af7:	call   0x10021076
10020afc:	mov    ecx,DWORD PTR [esi]
10020afe:	cmp    BYTE PTR [ecx+0x21],0x0
10020b02:	jne    0x10020b19
10020b04:	mov    eax,DWORD PTR [ecx+0x8]
10020b07:	cmp    BYTE PTR [eax+0x20],0x1
10020b0b:	jne    0x10020b2e
10020b0d:	mov    eax,DWORD PTR [ecx]
10020b0f:	cmp    BYTE PTR [eax+0x20],0x1
10020b13:	jne    0x10020b2e
10020b15:	mov    BYTE PTR [ecx+0x20],0x0
10020b19:	mov    edi,esi
10020b1b:	mov    esi,DWORD PTR [esi+0x4]
10020b1e:	mov    eax,ds:0x10080f58
10020b23:	cmp    edi,DWORD PTR [eax+0x4]
10020b26:	jne    0x10020a70
10020b2c:	jmp    0x10020b5f
10020b2e:	mov    eax,DWORD PTR [ecx]
10020b30:	cmp    BYTE PTR [eax+0x20],0x1
10020b34:	jne    0x10020b48
10020b36:	mov    eax,DWORD PTR [ecx+0x8]
10020b39:	mov    BYTE PTR [eax+0x20],0x1
10020b3d:	mov    BYTE PTR [ecx+0x20],0x0
10020b41:	call   0x10021039
10020b46:	mov    ecx,DWORD PTR [esi]
10020b48:	mov    al,BYTE PTR [esi+0x20]
10020b4b:	mov    BYTE PTR [ecx+0x20],al
10020b4e:	mov    BYTE PTR [esi+0x20],0x1
10020b52:	mov    eax,DWORD PTR [ecx]
10020b54:	mov    ecx,esi
10020b56:	mov    BYTE PTR [eax+0x20],0x1
10020b5a:	call   0x10021076
10020b5f:	mov    BYTE PTR [edi+0x20],0x1
10020b63:	push   ebx
10020b64:	call   0x10042f82
10020b69:	cmp    DWORD PTR ds:0x10080f5c,0x0
10020b70:	pop    ecx
10020b71:	jbe    0x10020b79
10020b73:	dec    DWORD PTR ds:0x10080f5c
10020b79:	mov    ecx,DWORD PTR [ebp+0xc]
10020b7c:	mov    eax,DWORD PTR [ebp+0x8]
10020b7f:	mov    DWORD PTR [eax],ecx
10020b81:	mov    ecx,DWORD PTR [ebp+0x10]
10020b84:	mov    DWORD PTR [eax+0x4],ecx
10020b87:	call   0x10059bfd
10020b8c:	ret    0xc
10020b8f:	push   ebp
10020b90:	mov    ebp,esp
10020b92:	sub    esp,0x14
10020b95:	push   ebx
10020b96:	push   esi
10020b97:	push   edi
10020b98:	push   DWORD PTR [ebp+0xc]
10020b9b:	lea    eax,[ebp-0x8]
10020b9e:	call   0x10021002
10020ba3:	mov    eax,ds:0x10080f58
10020ba8:	mov    ebx,0x10080f54
10020bad:	lea    edi,[ebp-0x10]
10020bb0:	lea    esi,[ebp-0x8]
10020bb3:	mov    DWORD PTR [ebp-0xc],eax
10020bb6:	mov    DWORD PTR [ebp-0x10],ebx
10020bb9:	call   0x10009d5c
10020bbe:	test   al,al
10020bc0:	jne    0x10020bd3
10020bc2:	mov    eax,DWORD PTR [ebp+0xc]
10020bc5:	mov    eax,DWORD PTR [eax]
10020bc7:	mov    ecx,DWORD PTR [ebp-0x4]
10020bca:	cmp    eax,DWORD PTR [ecx+0xc]
10020bcd:	jb     0x10020bd3
10020bcf:	mov    eax,esi
10020bd1:	jmp    0x10020be1
10020bd3:	mov    eax,ds:0x10080f58
10020bd8:	mov    DWORD PTR [ebp-0xc],eax
10020bdb:	mov    DWORD PTR [ebp-0x10],ebx
10020bde:	lea    eax,[ebp-0x10]
10020be1:	mov    edx,DWORD PTR [eax]
10020be3:	mov    ecx,DWORD PTR [ebp+0x8]
10020be6:	mov    eax,DWORD PTR [eax+0x4]
10020be9:	pop    edi
10020bea:	pop    esi
10020beb:	mov    DWORD PTR [ecx+0x4],eax
10020bee:	mov    DWORD PTR [ecx],edx
10020bf0:	mov    eax,ecx
10020bf2:	pop    ebx
10020bf3:	leave  
10020bf4:	ret    0x8
10020bf7:	push   esi
10020bf8:	mov    esi,DWORD PTR [esp+0x14]
10020bfc:	test   esi,esi
10020bfe:	jne    0x10020c07
10020c00:	mov    eax,0x80004003
10020c05:	jmp    0x10020c34
10020c07:	xor    eax,eax
10020c09:	cmp    DWORD PTR ds:0x1007f96c,eax
10020c0f:	jne    0x10020c1a
10020c11:	push   DWORD PTR [esp+0x10]
10020c15:	call   0x1001baf0
10020c1a:	mov    ecx,DWORD PTR ds:0x1007f96c
10020c20:	mov    DWORD PTR [esi],ecx
10020c22:	mov    ecx,DWORD PTR ds:0x1007f96c
10020c28:	test   ecx,ecx
10020c2a:	je     0x10020c34
10020c2c:	mov    eax,DWORD PTR [ecx]
10020c2e:	push   ecx
10020c2f:	call   DWORD PTR [eax+0x4]
10020c32:	xor    eax,eax
10020c34:	pop    esi
10020c35:	ret    0x10
10020c38:	push   ebx
10020c39:	push   DWORD PTR [esp+0x1c]
10020c3d:	mov    ebx,DWORD PTR [esp+0x14]
10020c41:	push   DWORD PTR [esp+0x1c]
10020c45:	push   DWORD PTR [esp+0x1c]
10020c49:	call   0x1001b8d7
10020c4e:	pop    ebx
10020c4f:	ret    0x18
10020c52:	mov    DWORD PTR [ecx],0x100706f8
10020c58:	mov    DWORD PTR [ecx+0x4],0xc0000001
10020c5f:	mov    ecx,DWORD PTR ds:0x10080c04
10020c65:	mov    eax,DWORD PTR [ecx]
10020c67:	jmp    DWORD PTR [eax+0x8]
10020c6a:	mov    ecx,DWORD PTR [esp+0x4]
10020c6e:	dec    DWORD PTR [ecx+0x4]
10020c71:	push   esi
10020c72:	mov    esi,DWORD PTR [ecx+0x4]
10020c75:	jne    0x10020c82
10020c77:	test   ecx,ecx
10020c79:	je     0x10020c82
10020c7b:	mov    eax,DWORD PTR [ecx]
10020c7d:	push   0x1
10020c7f:	call   DWORD PTR [eax+0x1c]
10020c82:	mov    eax,esi
10020c84:	pop    esi
10020c85:	ret    0x4
10020c88:	push   ebx
10020c89:	push   DWORD PTR [esp+0xc]
10020c8d:	mov    ebx,DWORD PTR [esp+0x14]
10020c91:	push   DWORD PTR [esp+0xc]
10020c95:	mov    eax,0x100705b4
10020c9a:	call   0x10010413
10020c9f:	pop    ebx
10020ca0:	ret    0xc
10020ca3:	push   esi
10020ca4:	mov    esi,ecx
10020ca6:	call   0x10020292
10020cab:	test   BYTE PTR [esp+0x8],0x1
10020cb0:	je     0x10020cb9
10020cb2:	push   esi
10020cb3:	call   0x10042f82
10020cb8:	pop    ecx
10020cb9:	mov    eax,esi
10020cbb:	pop    esi
10020cbc:	ret    0x4
10020cbf:	push   esi
10020cc0:	mov    esi,ecx
10020cc2:	call   0x1002032f
10020cc7:	test   BYTE PTR [esp+0x8],0x1
10020ccc:	je     0x10020cd5
10020cce:	push   esi
10020ccf:	call   0x10042f82
10020cd4:	pop    ecx
10020cd5:	mov    eax,esi
10020cd7:	pop    esi
10020cd8:	ret    0x4
10020cdb:	push   esi
10020cdc:	mov    esi,ecx
10020cde:	call   0x100203e0
10020ce3:	test   BYTE PTR [esp+0x8],0x1
10020ce8:	je     0x10020cf1
10020cea:	push   esi
10020ceb:	call   0x10042f82
10020cf0:	pop    ecx
10020cf1:	mov    eax,esi
10020cf3:	pop    esi
10020cf4:	ret    0x4
10020cf7:	push   esi
10020cf8:	mov    esi,ecx
10020cfa:	call   0x10020c52
10020cff:	test   BYTE PTR [esp+0x8],0x1
10020d04:	je     0x10020d0d
10020d06:	push   esi
10020d07:	call   0x10042f82
10020d0c:	pop    ecx
10020d0d:	mov    eax,esi
10020d0f:	pop    esi
10020d10:	ret    0x4
10020d13:	push   esi
10020d14:	push   DWORD PTR [esp+0x8]
10020d18:	mov    esi,eax
10020d1a:	and    DWORD PTR [esi+0x14],0x0
10020d1e:	mov    DWORD PTR [esi+0x18],0x7
10020d25:	and    WORD PTR [esi+0x4],0x0
10020d2a:	call   0x100437e3
10020d2f:	pop    ecx
10020d30:	push   DWORD PTR [esp+0x8]
10020d34:	call   0x100051f4
10020d39:	mov    eax,esi
10020d3b:	pop    esi
10020d3c:	ret    0x4
10020d3f:	push   ebp
10020d40:	mov    ebp,esp
10020d42:	sub    esp,0x10
10020d45:	mov    edx,DWORD PTR [ebp+0x8]
10020d48:	mov    eax,DWORD PTR [edx+0x4]
10020d4b:	push   ebx
10020d4c:	push   esi
10020d4d:	mov    esi,DWORD PTR [eax+0x4]
10020d50:	cmp    BYTE PTR [esi+0x2d],0x0
10020d54:	mov    DWORD PTR [ebp-0x4],eax
10020d57:	mov    al,0x1
10020d59:	mov    BYTE PTR [ebp-0x8],al
10020d5c:	jne    0x10020d83
10020d5e:	mov    ebx,DWORD PTR [ebp+0xc]
10020d61:	lea    eax,[esi+0xc]
10020d64:	mov    DWORD PTR [ebp-0x4],esi
10020d67:	call   0x1001f166
10020d6c:	test   al,al
10020d6e:	mov    BYTE PTR [ebp-0x8],al
10020d71:	je     0x10020d77
10020d73:	mov    esi,DWORD PTR [esi]
10020d75:	jmp    0x10020d7a
10020d77:	mov    esi,DWORD PTR [esi+0x8]
10020d7a:	cmp    BYTE PTR [esi+0x2d],0x0
10020d7e:	je     0x10020d5e
10020d80:	mov    edx,DWORD PTR [ebp+0x8]
10020d83:	test   al,al
10020d85:	mov    ecx,DWORD PTR [ebp-0x4]
10020d88:	mov    esi,ecx
10020d8a:	mov    DWORD PTR [ebp-0xc],esi
10020d8d:	mov    DWORD PTR [ebp-0x10],edx
10020d90:	je     0x10020dc4
10020d92:	mov    eax,DWORD PTR [edx+0x4]
10020d95:	cmp    ecx,DWORD PTR [eax]
10020d97:	jne    0x10020db9
10020d99:	push   DWORD PTR [ebp+0xc]
10020d9c:	mov    esi,edx
10020d9e:	push   0x1
10020da0:	lea    eax,[ebp-0x10]
10020da3:	push   eax
10020da4:	call   0x10021387
10020da9:	mov    ecx,DWORD PTR [eax]
10020dab:	mov    eax,DWORD PTR [eax+0x4]
10020dae:	mov    DWORD PTR [edi],ecx
10020db0:	mov    DWORD PTR [edi+0x4],eax
10020db3:	mov    BYTE PTR [edi+0x8],0x1
10020db7:	jmp    0x10020ded
10020db9:	lea    esi,[ebp-0x10]
10020dbc:	call   0x10021804
10020dc1:	mov    esi,DWORD PTR [ebp-0xc]
10020dc4:	mov    eax,DWORD PTR [ebp+0xc]
10020dc7:	lea    ebx,[esi+0xc]
10020dca:	call   0x1001f166
10020dcf:	test   al,al
10020dd1:	je     0x10020de1
10020dd3:	push   DWORD PTR [ebp+0xc]
10020dd6:	mov    ecx,DWORD PTR [ebp-0x4]
10020dd9:	push   DWORD PTR [ebp-0x8]
10020ddc:	mov    esi,DWORD PTR [ebp+0x8]
10020ddf:	jmp    0x10020da0
10020de1:	mov    eax,DWORD PTR [ebp-0x10]
10020de4:	mov    DWORD PTR [edi],eax
10020de6:	mov    DWORD PTR [edi+0x4],esi
10020de9:	mov    BYTE PTR [edi+0x8],0x0
10020ded:	pop    esi
10020dee:	mov    eax,edi
10020df0:	pop    ebx
10020df1:	leave  
10020df2:	ret    0x8
10020df5:	push   ebp
10020df6:	mov    ebp,esp
10020df8:	sub    esp,0x2c
10020dfb:	push   ebx
10020dfc:	push   esi
10020dfd:	push   edi
10020dfe:	mov    edi,ecx
10020e00:	mov    ebx,eax
10020e02:	mov    eax,DWORD PTR [edi+0x4]
10020e05:	mov    esi,DWORD PTR [eax+0x4]
10020e08:	mov    DWORD PTR [ebp-0x8],eax
10020e0b:	jmp    0x10020e23
10020e0d:	lea    eax,[esi+0xc]
10020e10:	call   0x1001f166
10020e15:	test   al,al
10020e17:	je     0x10020e20
10020e19:	mov    DWORD PTR [ebp-0x8],esi
10020e1c:	mov    esi,DWORD PTR [esi]
10020e1e:	jmp    0x10020e23
10020e20:	mov    esi,DWORD PTR [esi+0x8]
10020e23:	cmp    BYTE PTR [esi+0x2d],0x0
10020e27:	je     0x10020e0d
10020e29:	push   ebx
10020e2a:	lea    eax,[ebp-0x18]
10020e2d:	push   eax
10020e2e:	call   0x10021342
10020e33:	mov    ecx,DWORD PTR [eax+0x4]
10020e36:	mov    ebx,DWORD PTR [eax]
10020e38:	mov    eax,DWORD PTR [eax+0x4]
10020e3b:	and    DWORD PTR [ebp-0x4],0x0
10020e3f:	mov    DWORD PTR [ebp-0x24],ecx
10020e42:	mov    ecx,ebx
10020e44:	mov    DWORD PTR [ebp-0x10],ecx
10020e47:	mov    DWORD PTR [ebp-0xc],eax
10020e4a:	cmp    DWORD PTR [ebp-0x10],0x0
10020e4e:	je     0x10020e55
10020e50:	cmp    DWORD PTR [ebp-0x10],edi
10020e53:	je     0x10020e5a
10020e55:	call   0x100434a0
10020e5a:	mov    eax,DWORD PTR [ebp-0x8]
10020e5d:	cmp    DWORD PTR [ebp-0xc],eax
10020e60:	je     0x10020e6f
10020e62:	inc    DWORD PTR [ebp-0x4]
10020e65:	lea    esi,[ebp-0x10]
10020e68:	call   0x10021ce3
10020e6d:	jmp    0x10020e4a
10020e6f:	push   eax
10020e70:	push   edi
10020e71:	push   DWORD PTR [ebp-0x24]
10020e74:	push   ebx
10020e75:	lea    ebx,[ebp-0x18]
10020e78:	call   0x10021296
10020e7d:	mov    eax,DWORD PTR [ebp-0x4]
10020e80:	pop    edi
10020e81:	pop    esi
10020e82:	pop    ebx
10020e83:	leave  
10020e84:	ret    
10020e85:	push   ebx
10020e86:	lea    ebx,[eax+0xc]
10020e89:	cmp    DWORD PTR [ebx],0x0
10020e8c:	push   esi
10020e8d:	push   edi
10020e8e:	je     0x10020e9f
10020e90:	lea    esi,[eax+0x8]
10020e93:	cmp    DWORD PTR [esi],0x0
10020e96:	je     0x10020e9f
10020e98:	xor    edi,edi
10020e9a:	call   0x1000777b
10020e9f:	mov    eax,DWORD PTR [ebx]
10020ea1:	test   eax,eax
10020ea3:	je     0x10020eb9
10020ea5:	mov    ecx,DWORD PTR [eax]
10020ea7:	push   eax
10020ea8:	call   DWORD PTR [ecx+0x1c]
10020eab:	cmp    DWORD PTR [ebx],0x0
10020eae:	je     0x10020eb9
10020eb0:	xor    edi,edi
10020eb2:	mov    esi,ebx
10020eb4:	call   0x1000777b
10020eb9:	pop    edi
10020eba:	pop    esi
10020ebb:	pop    ebx
10020ebc:	ret    
10020ebd:	push   ebp
10020ebe:	mov    ebp,esp
10020ec0:	sub    esp,0x18
10020ec3:	push   ebx
10020ec4:	mov    ebx,eax
10020ec6:	xor    eax,eax
10020ec8:	cmp    DWORD PTR ds:0x10080f5c,eax
10020ece:	push   esi
10020ecf:	push   edi
10020ed0:	mov    DWORD PTR [ebp-0xc],eax
10020ed3:	mov    DWORD PTR [ebp-0x8],eax
10020ed6:	jne    0x10020eee
10020ed8:	mov    ecx,DWORD PTR ds:0x10080f58
10020ede:	push   ebx
10020edf:	push   0x1
10020ee1:	push   DWORD PTR [ebp+0x8]
10020ee4:	call   0x10021649
10020ee9:	mov    eax,DWORD PTR [ebp+0x8]
10020eec:	jmp    0x10020f30
10020eee:	mov    eax,ds:0x10080f58
10020ef3:	mov    eax,DWORD PTR [eax]
10020ef5:	lea    edi,[ebp-0x14]
10020ef8:	lea    esi,[ebp+0xc]
10020efb:	mov    DWORD PTR [ebp-0x10],eax
10020efe:	mov    DWORD PTR [ebp-0x14],0x10080f54
10020f05:	call   0x10009d5c
10020f0a:	test   al,al
10020f0c:	je     0x10020f37
10020f0e:	mov    eax,DWORD PTR [ebx]
10020f10:	mov    ecx,DWORD PTR [ebp+0x10]
10020f13:	cmp    eax,DWORD PTR [ecx+0xc]
10020f16:	jb     0x10020ede
10020f18:	push   ebx
10020f19:	lea    ebx,[ebp-0x18]
10020f1c:	call   0x100214d2
10020f21:	mov    edx,DWORD PTR [eax]
10020f23:	mov    ecx,DWORD PTR [ebp+0x8]
10020f26:	mov    DWORD PTR [ecx],edx
10020f28:	mov    eax,DWORD PTR [eax+0x4]
10020f2b:	mov    DWORD PTR [ecx+0x4],eax
10020f2e:	mov    eax,ecx
10020f30:	pop    edi
10020f31:	pop    esi
10020f32:	pop    ebx
10020f33:	leave  
10020f34:	ret    0xc
10020f37:	mov    eax,ds:0x10080f58
10020f3c:	lea    edi,[ebp-0x14]
10020f3f:	lea    esi,[ebp+0xc]
10020f42:	mov    DWORD PTR [ebp-0x10],eax
10020f45:	mov    DWORD PTR [ebp-0x14],0x10080f54
10020f4c:	call   0x10009d5c
10020f51:	test   al,al
10020f53:	je     0x10020f6c
10020f55:	mov    eax,ds:0x10080f58
10020f5a:	mov    ecx,DWORD PTR [eax+0x8]
10020f5d:	mov    eax,DWORD PTR [ecx+0xc]
10020f60:	cmp    eax,DWORD PTR [ebx]
10020f62:	jae    0x10020f18
10020f64:	push   ebx
10020f65:	push   0x0
10020f67:	jmp    0x10020ee1
10020f6c:	mov    ecx,DWORD PTR [ebx]
10020f6e:	mov    edi,DWORD PTR [ebp+0x10]
10020f71:	cmp    DWORD PTR [edi+0xc],ecx
10020f74:	jbe    0x10020fa8
10020f76:	mov    eax,DWORD PTR [ebp+0xc]
10020f79:	lea    esi,[ebp-0xc]
10020f7c:	mov    DWORD PTR [ebp-0xc],eax
10020f7f:	mov    DWORD PTR [ebp-0x8],edi
10020f82:	call   0x100217a3
10020f87:	mov    ecx,DWORD PTR [ebx]
10020f89:	mov    eax,DWORD PTR [eax+0x4]
10020f8c:	cmp    DWORD PTR [eax+0xc],ecx
10020f8f:	jae    0x10020fa5
10020f91:	mov    ecx,DWORD PTR [ebp-0x8]
10020f94:	mov    eax,DWORD PTR [ecx+0x8]
10020f97:	cmp    BYTE PTR [eax+0x21],0x0
10020f9b:	push   ebx
10020f9c:	jne    0x10020f65
10020f9e:	mov    ecx,edi
10020fa0:	jmp    0x10020edf
10020fa5:	cmp    DWORD PTR [edi+0xc],ecx
10020fa8:	jae    0x10020f18
10020fae:	mov    eax,DWORD PTR [ebp+0xc]
10020fb1:	mov    DWORD PTR [ebp-0xc],eax
10020fb4:	mov    eax,ds:0x10080f58
10020fb9:	lea    esi,[ebp-0xc]
10020fbc:	mov    DWORD PTR [ebp-0x8],edi
10020fbf:	mov    DWORD PTR [ebp-0x10],eax
10020fc2:	mov    DWORD PTR [ebp-0x14],0x10080f54
10020fc9:	call   0x100210b5
10020fce:	lea    edi,[ebp-0x14]
10020fd1:	mov    esi,eax
10020fd3:	call   0x10009d5c
10020fd8:	test   al,al
10020fda:	mov    eax,DWORD PTR [ebp-0x8]
10020fdd:	jne    0x10020fea
10020fdf:	mov    ecx,DWORD PTR [ebx]
10020fe1:	cmp    ecx,DWORD PTR [eax+0xc]
10020fe4:	jae    0x10020f18
10020fea:	mov    ecx,DWORD PTR [ebp+0x10]
10020fed:	mov    edx,DWORD PTR [ecx+0x8]
10020ff0:	cmp    BYTE PTR [edx+0x21],0x0
10020ff4:	push   ebx
10020ff5:	jne    0x10020f65
10020ffb:	mov    ecx,eax
10020ffd:	jmp    0x10020edf
10021002:	mov    edx,DWORD PTR ds:0x10080f58
10021008:	mov    ecx,DWORD PTR [edx+0x4]
1002100b:	cmp    BYTE PTR [ecx+0x21],0x0
1002100f:	jne    0x1002102d
10021011:	push   esi
10021012:	mov    esi,DWORD PTR [esp+0x8]
10021016:	mov    esi,DWORD PTR [esi]
10021018:	cmp    DWORD PTR [ecx+0xc],esi
1002101b:	jae    0x10021022
1002101d:	mov    ecx,DWORD PTR [ecx+0x8]
10021020:	jmp    0x10021026
10021022:	mov    edx,ecx
10021024:	mov    ecx,DWORD PTR [ecx]
10021026:	cmp    BYTE PTR [ecx+0x21],0x0
1002102a:	je     0x10021018
1002102c:	pop    esi
1002102d:	mov    DWORD PTR [eax+0x4],edx
10021030:	mov    DWORD PTR [eax],0x10080f54
10021036:	ret    0x4
10021039:	mov    eax,DWORD PTR [ecx+0x8]
1002103c:	mov    edx,DWORD PTR [eax]
1002103e:	mov    DWORD PTR [ecx+0x8],edx
10021041:	mov    edx,DWORD PTR [eax]
10021043:	cmp    BYTE PTR [edx+0x21],0x0
10021047:	jne    0x1002104c
10021049:	mov    DWORD PTR [edx+0x4],ecx
1002104c:	mov    edx,DWORD PTR [ecx+0x4]
1002104f:	mov    DWORD PTR [eax+0x4],edx
10021052:	mov    edx,DWORD PTR ds:0x10080f58
10021058:	cmp    ecx,DWORD PTR [edx+0x4]
1002105b:	jne    0x10021062
1002105d:	mov    DWORD PTR [edx+0x4],eax
10021060:	jmp    0x10021070
10021062:	mov    edx,DWORD PTR [ecx+0x4]
10021065:	cmp    ecx,DWORD PTR [edx]
10021067:	jne    0x1002106d
10021069:	mov    DWORD PTR [edx],eax
1002106b:	jmp    0x10021070
1002106d:	mov    DWORD PTR [edx+0x8],eax
10021070:	mov    DWORD PTR [eax],ecx
10021072:	mov    DWORD PTR [ecx+0x4],eax
10021075:	ret    
10021076:	mov    eax,DWORD PTR [ecx]
10021078:	mov    edx,DWORD PTR [eax+0x8]
1002107b:	mov    DWORD PTR [ecx],edx
1002107d:	mov    edx,DWORD PTR [eax+0x8]
10021080:	cmp    BYTE PTR [edx+0x21],0x0
10021084:	jne    0x10021089
10021086:	mov    DWORD PTR [edx+0x4],ecx
10021089:	mov    edx,DWORD PTR [ecx+0x4]
1002108c:	mov    DWORD PTR [eax+0x4],edx
1002108f:	mov    edx,DWORD PTR ds:0x10080f58
10021095:	cmp    ecx,DWORD PTR [edx+0x4]
10021098:	jne    0x1002109f
1002109a:	mov    DWORD PTR [edx+0x4],eax
1002109d:	jmp    0x100210ae
1002109f:	mov    edx,DWORD PTR [ecx+0x4]
100210a2:	cmp    ecx,DWORD PTR [edx+0x8]
100210a5:	jne    0x100210ac
100210a7:	mov    DWORD PTR [edx+0x8],eax
100210aa:	jmp    0x100210ae
100210ac:	mov    DWORD PTR [edx],eax
100210ae:	mov    DWORD PTR [eax+0x8],ecx
100210b1:	mov    DWORD PTR [ecx+0x4],eax
100210b4:	ret    
100210b5:	push   ebx
100210b6:	xor    ebx,ebx
100210b8:	cmp    DWORD PTR [esi],ebx
100210ba:	jne    0x100210c1
100210bc:	call   0x100434a0
100210c1:	mov    eax,DWORD PTR [esi+0x4]
100210c4:	cmp    BYTE PTR [eax+0x21],bl
100210c7:	je     0x100210d0
100210c9:	call   0x100434a0
100210ce:	jmp    0x100210fe
100210d0:	mov    ecx,DWORD PTR [eax+0x8]
100210d3:	cmp    BYTE PTR [ecx+0x21],bl
100210d6:	jne    0x100210f3
100210d8:	jmp    0x100210dc
100210da:	mov    ecx,eax
100210dc:	mov    eax,DWORD PTR [ecx]
100210de:	cmp    BYTE PTR [eax+0x21],bl
100210e1:	je     0x100210da
100210e3:	mov    DWORD PTR [esi+0x4],ecx
100210e6:	jmp    0x100210fe
100210e8:	mov    ecx,DWORD PTR [esi+0x4]
100210eb:	cmp    ecx,DWORD PTR [eax+0x8]
100210ee:	jne    0x100210fb
100210f0:	mov    DWORD PTR [esi+0x4],eax
100210f3:	mov    eax,DWORD PTR [eax+0x4]
100210f6:	cmp    BYTE PTR [eax+0x21],bl
100210f9:	je     0x100210e8
100210fb:	mov    DWORD PTR [esi+0x4],eax
100210fe:	mov    eax,esi
10021100:	pop    ebx
10021101:	ret    
10021102:	push   0x0
10021104:	mov    eax,0x100601be
10021109:	call   0x10059b25
1002110e:	mov    edi,DWORD PTR [ebp+0x8]
10021111:	and    DWORD PTR [edi+0x4],0x0
10021115:	lea    esi,[edi+0x8]
10021118:	mov    DWORD PTR [edi],0x10070648
1002111e:	call   0x1001c223
10021123:	mov    DWORD PTR [esi],0x10070718
10021129:	mov    DWORD PTR [esi+0x24],0x1007072c
10021130:	mov    DWORD PTR [esi+0x28],0x10070758
10021137:	mov    DWORD PTR [esi+0x2c],0x10070780
1002113e:	mov    DWORD PTR [esi+0x30],0x100707f8
10021145:	mov    DWORD PTR [esi+0x34],0x10070820
1002114c:	mov    DWORD PTR [esi+0x38],0x10070838
10021153:	mov    DWORD PTR [esi+0x40],0x10070850
1002115a:	mov    DWORD PTR [esi+0x44],0x10070860
10021161:	mov    DWORD PTR [esi+0x48],0x10070880
10021168:	mov    DWORD PTR [esi+0x4c],0x100708c8
1002116f:	mov    DWORD PTR [esi+0x50],edi
10021172:	and    DWORD PTR [ebp-0x4],0x0
10021176:	mov    ecx,DWORD PTR ds:0x10080c04
1002117c:	mov    eax,DWORD PTR [ecx]
1002117e:	call   DWORD PTR [eax+0x4]
10021181:	mov    eax,edi
10021183:	call   0x10059bfd
10021188:	ret    0x4
1002118b:	push   0x4
1002118d:	mov    eax,0x10060198
10021192:	call   0x10059b25
10021197:	mov    DWORD PTR [ebp-0x10],ecx
1002119a:	mov    DWORD PTR [ecx],0x10070648
100211a0:	and    DWORD PTR [ebp-0x4],0x0
100211a4:	lea    esi,[ecx+0x8]
100211a7:	mov    DWORD PTR [ecx+0x4],0xc0000001
100211ae:	mov    ecx,esi
100211b0:	call   0x1001c858
100211b5:	mov    ecx,DWORD PTR ds:0x10080c04
100211bb:	mov    eax,DWORD PTR [ecx]
100211bd:	call   DWORD PTR [eax+0x8]
100211c0:	or     DWORD PTR [ebp-0x4],0xffffffff
100211c4:	mov    eax,esi
100211c6:	call   0x1001c2e8
100211cb:	call   0x10059bfd
100211d0:	ret    
100211d1:	mov    ecx,DWORD PTR [esp+0x4]
100211d5:	dec    DWORD PTR [ecx+0x4]
100211d8:	push   esi
100211d9:	mov    esi,DWORD PTR [ecx+0x4]
100211dc:	jne    0x100211e9
100211de:	test   ecx,ecx
100211e0:	je     0x100211e9
100211e2:	mov    eax,DWORD PTR [ecx]
100211e4:	push   0x1
100211e6:	call   DWORD PTR [eax+0xc]
100211e9:	mov    eax,esi
100211eb:	pop    esi
100211ec:	ret    0x4
100211ef:	push   ebp
100211f0:	mov    ebp,esp
100211f2:	push   ebx
100211f3:	mov    ebx,DWORD PTR [ebp+0x10]
100211f6:	push   esi
100211f7:	xor    esi,esi
100211f9:	cmp    ebx,esi
100211fb:	jne    0x10021204
100211fd:	mov    eax,0x80004003
10021202:	jmp    0x10021234
10021204:	mov    eax,DWORD PTR [ebp+0xc]
10021207:	mov    DWORD PTR [ebx],esi
10021209:	call   0x100103ef
1002120e:	test   eax,eax
10021210:	mov    eax,DWORD PTR [ebp+0x8]
10021213:	je     0x1002121f
10021215:	mov    DWORD PTR [ebx],eax
10021217:	mov    ecx,DWORD PTR [eax]
10021219:	push   eax
1002121a:	call   DWORD PTR [ecx+0x4]
1002121d:	jmp    0x10021232
1002121f:	push   DWORD PTR [ebp+0xc]
10021222:	add    eax,0x8
10021225:	push   eax
10021226:	mov    eax,0x10070430
1002122b:	call   0x10010413
10021230:	mov    esi,eax
10021232:	mov    eax,esi
10021234:	pop    esi
10021235:	pop    ebx
10021236:	pop    ebp
10021237:	ret    0xc
1002123a:	mov    eax,DWORD PTR [esp+0x4]
1002123e:	mov    eax,DWORD PTR [eax+0x2c]
10021241:	mov    ecx,DWORD PTR [eax]
10021243:	push   eax
10021244:	call   DWORD PTR [ecx+0x4]
10021247:	ret    0x4
1002124a:	mov    eax,DWORD PTR [esp+0x4]
1002124e:	mov    eax,DWORD PTR [eax+0x2c]
10021251:	mov    ecx,DWORD PTR [eax]
10021253:	push   eax
10021254:	call   DWORD PTR [ecx+0x8]
10021257:	ret    0x4
1002125a:	push   DWORD PTR [esp+0xc]
1002125e:	mov    eax,DWORD PTR [esp+0x8]
10021262:	mov    eax,DWORD PTR [eax+0x2c]
10021265:	push   DWORD PTR [esp+0xc]
10021269:	mov    ecx,DWORD PTR [eax]
1002126b:	push   eax
1002126c:	call   DWORD PTR [ecx]
1002126e:	ret    0xc
10021271:	mov    eax,DWORD PTR [ecx+0x50]
10021274:	ret    
10021275:	push   esi
10021276:	mov    esi,ecx
10021278:	call   0x1002118b
1002127d:	test   BYTE PTR [esp+0x8],0x1
10021282:	je     0x1002128b
10021284:	push   esi
10021285:	call   0x10042f82
1002128a:	pop    ecx
1002128b:	mov    eax,esi
1002128d:	pop    esi
1002128e:	ret    0x4
10021291:	jmp    0x1001c2e8
10021296:	push   ebp
10021297:	mov    ebp,esp
10021299:	mov    eax,DWORD PTR [edi+0x4]
1002129c:	sub    esp,0x14
1002129f:	cmp    DWORD PTR [ebp+0x8],0x0
100212a3:	push   esi
100212a4:	mov    esi,DWORD PTR [eax]
100212a6:	je     0x100212ad
100212a8:	cmp    DWORD PTR [ebp+0x8],edi
100212ab:	je     0x100212b2
100212ad:	call   0x100434a0
100212b2:	cmp    DWORD PTR [ebp+0xc],esi
100212b5:	jne    0x100212fa
100212b7:	cmp    DWORD PTR [ebp+0x10],0x0
100212bb:	mov    esi,DWORD PTR [edi+0x4]
100212be:	je     0x100212c5
100212c0:	cmp    DWORD PTR [ebp+0x10],edi
100212c3:	je     0x100212ca
100212c5:	call   0x100434a0
100212ca:	cmp    DWORD PTR [ebp+0x14],esi
100212cd:	jne    0x100212fa
100212cf:	mov    eax,DWORD PTR [edi+0x4]
100212d2:	push   DWORD PTR [eax+0x4]
100212d5:	mov    ecx,edi
100212d7:	call   0x10021c6c
100212dc:	mov    eax,DWORD PTR [edi+0x4]
100212df:	mov    DWORD PTR [eax+0x4],eax
100212e2:	mov    eax,DWORD PTR [edi+0x4]
100212e5:	and    DWORD PTR [edi+0x8],0x0
100212e9:	mov    DWORD PTR [eax],eax
100212eb:	mov    eax,DWORD PTR [edi+0x4]
100212ee:	mov    DWORD PTR [eax+0x8],eax
100212f1:	mov    eax,DWORD PTR [edi+0x4]
100212f4:	mov    eax,DWORD PTR [eax]
100212f6:	mov    DWORD PTR [ebx],edi
100212f8:	jmp    0x10021338
100212fa:	mov    eax,DWORD PTR [ebp+0x8]
100212fd:	test   eax,eax
100212ff:	je     0x10021306
10021301:	cmp    eax,DWORD PTR [ebp+0x10]
10021304:	je     0x1002130b
10021306:	call   0x100434a0
1002130b:	mov    eax,DWORD PTR [ebp+0xc]
1002130e:	cmp    eax,DWORD PTR [ebp+0x14]
10021311:	mov    ecx,DWORD PTR [ebp+0x8]
10021314:	je     0x10021336
10021316:	lea    esi,[ebp+0x8]
10021319:	mov    DWORD PTR [ebp-0x8],ecx
1002131c:	mov    DWORD PTR [ebp-0x4],eax
1002131f:	call   0x10021ce3
10021324:	push   DWORD PTR [ebp-0x4]
10021327:	lea    eax,[ebp-0x10]
1002132a:	push   DWORD PTR [ebp-0x8]
1002132d:	push   eax
1002132e:	push   edi
1002132f:	call   0x10021883
10021334:	jmp    0x100212fa
10021336:	mov    DWORD PTR [ebx],ecx
10021338:	mov    DWORD PTR [ebx+0x4],eax
1002133b:	mov    eax,ebx
1002133d:	pop    esi
1002133e:	leave  
1002133f:	ret    0x10
10021342:	push   ebp
10021343:	mov    ebp,esp
10021345:	push   ecx
10021346:	mov    eax,DWORD PTR [edi+0x4]
10021349:	push   esi
1002134a:	mov    esi,DWORD PTR [eax+0x4]
1002134d:	cmp    BYTE PTR [esi+0x2d],0x0
10021351:	mov    DWORD PTR [ebp-0x4],eax
10021354:	jne    0x10021377
10021356:	push   ebx
10021357:	mov    eax,DWORD PTR [ebp+0xc]
1002135a:	lea    ebx,[esi+0xc]
1002135d:	call   0x1001f166
10021362:	test   al,al
10021364:	je     0x1002136b
10021366:	mov    esi,DWORD PTR [esi+0x8]
10021369:	jmp    0x10021370
1002136b:	mov    DWORD PTR [ebp-0x4],esi
1002136e:	mov    esi,DWORD PTR [esi]
10021370:	cmp    BYTE PTR [esi+0x2d],0x0
10021374:	je     0x10021357
10021376:	pop    ebx
10021377:	mov    eax,DWORD PTR [ebp+0x8]
1002137a:	mov    ecx,DWORD PTR [ebp-0x4]
1002137d:	mov    DWORD PTR [eax+0x4],ecx
10021380:	mov    DWORD PTR [eax],edi
10021382:	pop    esi
10021383:	leave  
10021384:	ret    0x8
10021387:	push   0x48
10021389:	mov    eax,0x100621c0
1002138e:	call   0x10059b25
10021393:	mov    edi,ecx
10021395:	cmp    DWORD PTR [esi+0x8],0x7fffffe
1002139c:	jb     0x100213d0
1002139e:	push   0x1006d02c
100213a3:	lea    ecx,[ebp-0x2c]
100213a6:	call   0x100011c8
100213ab:	and    DWORD PTR [ebp-0x4],0x0
100213af:	lea    eax,[ebp-0x2c]
100213b2:	push   eax
100213b3:	lea    ecx,[ebp-0x54]
100213b6:	call   0x10001065
100213bb:	push   0x10074ec8
100213c0:	lea    eax,[ebp-0x54]
100213c3:	push   eax
100213c4:	mov    DWORD PTR [ebp-0x54],0x1006b96c
100213cb:	call   0x10047aa4
100213d0:	mov    eax,DWORD PTR [esi+0x4]
100213d3:	mov    ecx,DWORD PTR [ebp+0x10]
100213d6:	push   eax
100213d7:	push   edi
100213d8:	push   eax
100213d9:	call   0x10021b9b
100213de:	inc    DWORD PTR [esi+0x8]
100213e1:	mov    ebx,eax
100213e3:	mov    eax,DWORD PTR [esi+0x4]
100213e6:	cmp    edi,eax
100213e8:	jne    0x100213f7
100213ea:	mov    DWORD PTR [eax+0x4],ebx
100213ed:	mov    eax,DWORD PTR [esi+0x4]
100213f0:	mov    DWORD PTR [eax],ebx
100213f2:	mov    eax,DWORD PTR [esi+0x4]
100213f5:	jmp    0x10021415
100213f7:	cmp    BYTE PTR [ebp+0xc],0x0
100213fb:	je     0x1002140a
100213fd:	mov    DWORD PTR [edi],ebx
100213ff:	mov    eax,DWORD PTR [esi+0x4]
10021402:	cmp    edi,DWORD PTR [eax]
10021404:	jne    0x10021418
10021406:	mov    DWORD PTR [eax],ebx
10021408:	jmp    0x10021418
1002140a:	mov    DWORD PTR [edi+0x8],ebx
1002140d:	mov    eax,DWORD PTR [esi+0x4]
10021410:	cmp    edi,DWORD PTR [eax+0x8]
10021413:	jne    0x10021418
10021415:	mov    DWORD PTR [eax+0x8],ebx
10021418:	mov    edi,ebx
1002141a:	lea    eax,[ebx+0x4]
1002141d:	jmp    0x100214ac
10021422:	mov    ecx,DWORD PTR [eax]
10021424:	mov    edx,DWORD PTR [ecx+0x4]
10021427:	cmp    ecx,DWORD PTR [edx]
10021429:	jne    0x10021460
1002142b:	mov    edx,DWORD PTR [edx+0x8]
1002142e:	cmp    BYTE PTR [edx+0x2c],0x0
10021432:	je     0x10021468
10021434:	cmp    edi,DWORD PTR [ecx+0x8]
10021437:	jne    0x10021441
10021439:	push   esi
1002143a:	mov    edi,ecx
1002143c:	call   0x10021b19
10021441:	mov    eax,DWORD PTR [edi+0x4]
10021444:	mov    BYTE PTR [eax+0x2c],0x1
10021448:	mov    eax,DWORD PTR [edi+0x4]
1002144b:	mov    eax,DWORD PTR [eax+0x4]
1002144e:	mov    BYTE PTR [eax+0x2c],0x0
10021452:	mov    eax,DWORD PTR [edi+0x4]
10021455:	mov    ecx,DWORD PTR [eax+0x4]
10021458:	push   esi
10021459:	call   0x10021b59
1002145e:	jmp    0x100214a9
10021460:	mov    edx,DWORD PTR [edx]
10021462:	cmp    BYTE PTR [edx+0x2c],0x0
10021466:	jne    0x10021480
10021468:	mov    BYTE PTR [ecx+0x2c],0x1
1002146c:	mov    BYTE PTR [edx+0x2c],0x1
10021470:	mov    ecx,DWORD PTR [eax]
10021472:	mov    ecx,DWORD PTR [ecx+0x4]
10021475:	mov    BYTE PTR [ecx+0x2c],0x0
10021479:	mov    eax,DWORD PTR [eax]
1002147b:	mov    edi,DWORD PTR [eax+0x4]
1002147e:	jmp    0x100214a9
10021480:	cmp    edi,DWORD PTR [ecx]
10021482:	jne    0x1002148c
10021484:	push   esi
10021485:	mov    edi,ecx
10021487:	call   0x10021b59
1002148c:	mov    eax,DWORD PTR [edi+0x4]
1002148f:	mov    BYTE PTR [eax+0x2c],0x1
10021493:	mov    eax,DWORD PTR [edi+0x4]
10021496:	mov    eax,DWORD PTR [eax+0x4]
10021499:	mov    BYTE PTR [eax+0x2c],0x0
1002149d:	mov    eax,DWORD PTR [edi+0x4]
100214a0:	mov    ecx,DWORD PTR [eax+0x4]
100214a3:	push   esi
100214a4:	call   0x10021b19
100214a9:	lea    eax,[edi+0x4]
100214ac:	mov    ecx,DWORD PTR [eax]
100214ae:	cmp    BYTE PTR [ecx+0x2c],0x0
100214b2:	je     0x10021422
100214b8:	mov    eax,DWORD PTR [esi+0x4]
100214bb:	mov    eax,DWORD PTR [eax+0x4]
100214be:	mov    BYTE PTR [eax+0x2c],0x1
100214c2:	mov    eax,DWORD PTR [ebp+0x8]
100214c5:	mov    DWORD PTR [eax+0x4],ebx
100214c8:	mov    DWORD PTR [eax],esi
100214ca:	call   0x10059bfd
100214cf:	ret    0xc
100214d2:	push   ebp
100214d3:	mov    ebp,esp
100214d5:	sub    esp,0x1c
100214d8:	push   esi
100214d9:	mov    esi,DWORD PTR ds:0x10080f58
100214df:	mov    eax,DWORD PTR [esi+0x4]
100214e2:	cmp    BYTE PTR [eax+0x21],0x0
100214e6:	push   edi
100214e7:	mov    DWORD PTR [ebp-0xc],esi
100214ea:	mov    BYTE PTR [ebp-0x8],0x1
100214ee:	jne    0x10021512
100214f0:	mov    ecx,DWORD PTR [ebp+0x8]
100214f3:	mov    edi,DWORD PTR [ecx]
100214f5:	cmp    edi,DWORD PTR [eax+0xc]
100214f8:	mov    DWORD PTR [ebp-0xc],eax
100214fb:	setb   BYTE PTR [ebp-0x8]
100214ff:	cmp    BYTE PTR [ebp-0x8],0x0
10021503:	je     0x10021509
10021505:	mov    eax,DWORD PTR [eax]
10021507:	jmp    0x1002150c
10021509:	mov    eax,DWORD PTR [eax+0x8]
1002150c:	cmp    BYTE PTR [eax+0x21],0x0
10021510:	je     0x100214f5
10021512:	cmp    BYTE PTR [ebp-0x8],0x0
10021516:	mov    edi,DWORD PTR [ebp-0xc]
10021519:	mov    eax,0x10080f54
1002151e:	mov    DWORD PTR [ebp-0x10],edi
10021521:	mov    DWORD PTR [ebp-0x14],eax
10021524:	je     0x10021569
10021526:	mov    ecx,DWORD PTR [esi]
10021528:	lea    edi,[ebp-0x1c]
1002152b:	lea    esi,[ebp-0x14]
1002152e:	mov    DWORD PTR [ebp-0x18],ecx
10021531:	mov    DWORD PTR [ebp-0x1c],eax
10021534:	call   0x10009d5c
10021539:	test   al,al
1002153b:	je     0x1002155e
1002153d:	push   DWORD PTR [ebp+0x8]
10021540:	push   0x1
10021542:	mov    ecx,DWORD PTR [ebp-0xc]
10021545:	lea    eax,[ebp-0x1c]
10021548:	push   eax
10021549:	call   0x10021649
1002154e:	mov    ecx,DWORD PTR [eax]
10021550:	mov    eax,DWORD PTR [eax+0x4]
10021553:	mov    DWORD PTR [ebx],ecx
10021555:	mov    DWORD PTR [ebx+0x4],eax
10021558:	mov    BYTE PTR [ebx+0x8],0x1
1002155c:	jmp    0x10021585
1002155e:	lea    esi,[ebp-0x14]
10021561:	call   0x100217a3
10021566:	mov    edi,DWORD PTR [ebp-0x10]
10021569:	mov    ecx,DWORD PTR [edi+0xc]
1002156c:	mov    eax,DWORD PTR [ebp+0x8]
1002156f:	cmp    ecx,DWORD PTR [eax]
10021571:	jae    0x10021579
10021573:	push   eax
10021574:	push   DWORD PTR [ebp-0x8]
10021577:	jmp    0x10021542
10021579:	mov    eax,DWORD PTR [ebp-0x14]
1002157c:	mov    DWORD PTR [ebx],eax
1002157e:	mov    DWORD PTR [ebx+0x4],edi
10021581:	mov    BYTE PTR [ebx+0x8],0x0
10021585:	pop    edi
10021586:	mov    eax,ebx
10021588:	pop    esi
10021589:	leave  
1002158a:	ret    0x4
1002158d:	push   ebp
1002158e:	mov    ebp,esp
10021590:	sub    esp,0x10
10021593:	mov    eax,ds:0x10080f58
10021598:	mov    eax,DWORD PTR [eax]
1002159a:	push   ebx
1002159b:	push   esi
1002159c:	push   edi
1002159d:	mov    ebx,0x10080f54
100215a2:	lea    edi,[ebp-0xc]
100215a5:	lea    esi,[ebp+0xc]
100215a8:	mov    DWORD PTR [ebp-0x8],eax
100215ab:	mov    DWORD PTR [ebp-0xc],ebx
100215ae:	call   0x10009d5c
100215b3:	test   al,al
100215b5:	je     0x10021625
100215b7:	mov    eax,ds:0x10080f58
100215bc:	lea    edi,[ebp-0xc]
100215bf:	lea    esi,[ebp+0x14]
100215c2:	mov    DWORD PTR [ebp-0x8],eax
100215c5:	mov    DWORD PTR [ebp-0xc],ebx
100215c8:	call   0x10009d5c
100215cd:	test   al,al
100215cf:	je     0x10021625
100215d1:	mov    eax,ds:0x10080f58
100215d6:	push   DWORD PTR [eax+0x4]
100215d9:	mov    ecx,ebx
100215db:	call   0x10021cb1
100215e0:	mov    eax,ds:0x10080f58
100215e5:	mov    DWORD PTR [eax+0x4],eax
100215e8:	mov    eax,ds:0x10080f58
100215ed:	and    DWORD PTR ds:0x10080f5c,0x0
100215f4:	mov    DWORD PTR [eax],eax
100215f6:	mov    eax,ds:0x10080f58
100215fb:	mov    DWORD PTR [eax+0x8],eax
100215fe:	mov    eax,ds:0x10080f58
10021603:	mov    ecx,DWORD PTR [eax]
10021605:	mov    eax,DWORD PTR [ebp+0x8]
10021608:	mov    DWORD PTR [eax],ebx
1002160a:	jmp    0x1002163f
1002160c:	mov    edi,DWORD PTR [ebp+0xc]
1002160f:	mov    ebx,DWORD PTR [ebp+0x10]
10021612:	lea    esi,[ebp+0xc]
10021615:	call   0x100210b5
1002161a:	push   ebx
1002161b:	push   edi
1002161c:	lea    eax,[ebp-0xc]
1002161f:	push   eax
10021620:	call   0x1002091c
10021625:	lea    edi,[ebp+0x14]
10021628:	lea    esi,[ebp+0xc]
1002162b:	call   0x10009d5c
10021630:	test   al,al
10021632:	je     0x1002160c
10021634:	mov    ecx,DWORD PTR [ebp+0xc]
10021637:	mov    eax,DWORD PTR [ebp+0x8]
1002163a:	mov    DWORD PTR [eax],ecx
1002163c:	mov    ecx,DWORD PTR [ebp+0x10]
1002163f:	pop    edi
10021640:	pop    esi
10021641:	mov    DWORD PTR [eax+0x4],ecx
10021644:	pop    ebx
10021645:	leave  
10021646:	ret    0x14
10021649:	push   0x48
1002164b:	mov    eax,0x100621c0
10021650:	call   0x10059b25
10021655:	mov    esi,ecx
10021657:	cmp    DWORD PTR ds:0x10080f5c,0xccccccb
10021661:	jb     0x10021695
10021663:	push   0x1006d02c
10021668:	lea    ecx,[ebp-0x2c]
1002166b:	call   0x100011c8
10021670:	and    DWORD PTR [ebp-0x4],0x0
10021674:	lea    eax,[ebp-0x2c]
10021677:	push   eax
10021678:	lea    ecx,[ebp-0x54]
1002167b:	call   0x10001065
10021680:	push   0x10074ec8
10021685:	lea    eax,[ebp-0x54]
10021688:	push   eax
10021689:	mov    DWORD PTR [ebp-0x54],0x1006b96c
10021690:	call   0x10047aa4
10021695:	push   DWORD PTR [ebp+0x10]
10021698:	mov    eax,ds:0x10080f58
1002169d:	push   eax
1002169e:	push   esi
1002169f:	push   eax
100216a0:	call   0x10021c31
100216a5:	inc    DWORD PTR ds:0x10080f5c
100216ab:	mov    edi,eax
100216ad:	mov    eax,ds:0x10080f58
100216b2:	xor    bl,bl
100216b4:	cmp    esi,eax
100216b6:	jne    0x100216c9
100216b8:	mov    DWORD PTR [eax+0x4],edi
100216bb:	mov    eax,ds:0x10080f58
100216c0:	mov    DWORD PTR [eax],edi
100216c2:	mov    eax,ds:0x10080f58
100216c7:	jmp    0x100216ea
100216c9:	cmp    BYTE PTR [ebp+0xc],bl
100216cc:	je     0x100216dd
100216ce:	mov    DWORD PTR [esi],edi
100216d0:	mov    eax,ds:0x10080f58
100216d5:	cmp    esi,DWORD PTR [eax]
100216d7:	jne    0x100216ed
100216d9:	mov    DWORD PTR [eax],edi
100216db:	jmp    0x100216ed
100216dd:	mov    DWORD PTR [esi+0x8],edi
100216e0:	mov    eax,ds:0x10080f58
100216e5:	cmp    esi,DWORD PTR [eax+0x8]
100216e8:	jne    0x100216ed
100216ea:	mov    DWORD PTR [eax+0x8],edi
100216ed:	mov    esi,edi
100216ef:	lea    eax,[edi+0x4]
100216f2:	jmp    0x10021778
100216f7:	mov    ecx,DWORD PTR [eax]
100216f9:	mov    edx,DWORD PTR [ecx+0x4]
100216fc:	cmp    ecx,DWORD PTR [edx]
100216fe:	jne    0x10021731
10021700:	mov    edx,DWORD PTR [edx+0x8]
10021703:	cmp    BYTE PTR [edx+0x20],bl
10021706:	je     0x10021738
10021708:	cmp    esi,DWORD PTR [ecx+0x8]
1002170b:	jne    0x10021714
1002170d:	mov    esi,ecx
1002170f:	call   0x10021039
10021714:	mov    eax,DWORD PTR [esi+0x4]
10021717:	mov    BYTE PTR [eax+0x20],0x1
1002171b:	mov    eax,DWORD PTR [esi+0x4]
1002171e:	mov    eax,DWORD PTR [eax+0x4]
10021721:	mov    BYTE PTR [eax+0x20],bl
10021724:	mov    eax,DWORD PTR [esi+0x4]
10021727:	mov    ecx,DWORD PTR [eax+0x4]
1002172a:	call   0x10021076
1002172f:	jmp    0x10021775
10021731:	mov    edx,DWORD PTR [edx]
10021733:	cmp    BYTE PTR [edx+0x20],bl
10021736:	jne    0x1002174f
10021738:	mov    BYTE PTR [ecx+0x20],0x1
1002173c:	mov    BYTE PTR [edx+0x20],0x1
10021740:	mov    ecx,DWORD PTR [eax]
10021742:	mov    ecx,DWORD PTR [ecx+0x4]
10021745:	mov    BYTE PTR [ecx+0x20],bl
10021748:	mov    eax,DWORD PTR [eax]
1002174a:	mov    esi,DWORD PTR [eax+0x4]
1002174d:	jmp    0x10021775
1002174f:	cmp    esi,DWORD PTR [ecx]
10021751:	jne    0x1002175a
10021753:	mov    esi,ecx
10021755:	call   0x10021076
1002175a:	mov    eax,DWORD PTR [esi+0x4]
1002175d:	mov    BYTE PTR [eax+0x20],0x1
10021761:	mov    eax,DWORD PTR [esi+0x4]
10021764:	mov    eax,DWORD PTR [eax+0x4]
10021767:	mov    BYTE PTR [eax+0x20],bl
1002176a:	mov    eax,DWORD PTR [esi+0x4]
1002176d:	mov    ecx,DWORD PTR [eax+0x4]
10021770:	call   0x10021039
10021775:	lea    eax,[esi+0x4]
10021778:	mov    ecx,DWORD PTR [eax]
1002177a:	cmp    BYTE PTR [ecx+0x20],bl
1002177d:	je     0x100216f7
10021783:	mov    eax,ds:0x10080f58
10021788:	mov    eax,DWORD PTR [eax+0x4]
1002178b:	mov    BYTE PTR [eax+0x20],0x1
1002178f:	mov    eax,DWORD PTR [ebp+0x8]
10021792:	mov    DWORD PTR [eax+0x4],edi
10021795:	mov    DWORD PTR [eax],0x10080f54
1002179b:	call   0x10059bfd
100217a0:	ret    0xc
100217a3:	push   ebx
100217a4:	xor    ebx,ebx
100217a6:	cmp    DWORD PTR [esi],ebx
100217a8:	jne    0x100217af
100217aa:	call   0x100434a0
100217af:	mov    eax,DWORD PTR [esi+0x4]
100217b2:	cmp    BYTE PTR [eax+0x21],bl
100217b5:	je     0x100217c4
100217b7:	mov    eax,DWORD PTR [eax+0x8]
100217ba:	mov    DWORD PTR [esi+0x4],eax
100217bd:	cmp    BYTE PTR [eax+0x21],bl
100217c0:	je     0x10021800
100217c2:	jmp    0x100217f6
100217c4:	mov    ecx,DWORD PTR [eax]
100217c6:	cmp    BYTE PTR [ecx+0x21],bl
100217c9:	jne    0x100217e6
100217cb:	jmp    0x100217cf
100217cd:	mov    ecx,eax
100217cf:	mov    eax,DWORD PTR [ecx+0x8]
100217d2:	cmp    BYTE PTR [eax+0x21],bl
100217d5:	je     0x100217cd
100217d7:	mov    DWORD PTR [esi+0x4],ecx
100217da:	jmp    0x10021800
100217dc:	mov    ecx,DWORD PTR [esi+0x4]
100217df:	cmp    ecx,DWORD PTR [eax]
100217e1:	jne    0x100217ee
100217e3:	mov    DWORD PTR [esi+0x4],eax
100217e6:	mov    eax,DWORD PTR [eax+0x4]
100217e9:	cmp    BYTE PTR [eax+0x21],bl
100217ec:	je     0x100217dc
100217ee:	mov    ecx,DWORD PTR [esi+0x4]
100217f1:	cmp    BYTE PTR [ecx+0x21],bl
100217f4:	je     0x100217fd
100217f6:	call   0x100434a0
100217fb:	jmp    0x10021800
100217fd:	mov    DWORD PTR [esi+0x4],eax
10021800:	mov    eax,esi
10021802:	pop    ebx
10021803:	ret    
10021804:	push   ebx
10021805:	xor    ebx,ebx
10021807:	cmp    DWORD PTR [esi],ebx
10021809:	jne    0x10021810
1002180b:	call   0x100434a0
10021810:	mov    eax,DWORD PTR [esi+0x4]
10021813:	cmp    BYTE PTR [eax+0x2d],bl
10021816:	je     0x10021825
10021818:	mov    eax,DWORD PTR [eax+0x8]
1002181b:	mov    DWORD PTR [esi+0x4],eax
1002181e:	cmp    BYTE PTR [eax+0x2d],bl
10021821:	je     0x10021861
10021823:	jmp    0x10021857
10021825:	mov    ecx,DWORD PTR [eax]
10021827:	cmp    BYTE PTR [ecx+0x2d],bl
1002182a:	jne    0x10021847
1002182c:	jmp    0x10021830
1002182e:	mov    ecx,eax
10021830:	mov    eax,DWORD PTR [ecx+0x8]
10021833:	cmp    BYTE PTR [eax+0x2d],bl
10021836:	je     0x1002182e
10021838:	mov    DWORD PTR [esi+0x4],ecx
1002183b:	jmp    0x10021861
1002183d:	mov    ecx,DWORD PTR [esi+0x4]
10021840:	cmp    ecx,DWORD PTR [eax]
10021842:	jne    0x1002184f
10021844:	mov    DWORD PTR [esi+0x4],eax
10021847:	mov    eax,DWORD PTR [eax+0x4]
1002184a:	cmp    BYTE PTR [eax+0x2d],bl
1002184d:	je     0x1002183d
1002184f:	mov    ecx,DWORD PTR [esi+0x4]
10021852:	cmp    BYTE PTR [ecx+0x2d],bl
10021855:	je     0x1002185e
10021857:	call   0x100434a0
1002185c:	jmp    0x10021861
1002185e:	mov    DWORD PTR [esi+0x4],eax
10021861:	mov    eax,esi
10021863:	pop    ebx
10021864:	ret    
10021865:	push   esi
10021866:	mov    esi,ecx
10021868:	mov    eax,esi
1002186a:	call   0x1001c2e8
1002186f:	test   BYTE PTR [esp+0x8],0x1
10021874:	je     0x1002187d
10021876:	push   esi
10021877:	call   0x10042f82
1002187c:	pop    ecx
1002187d:	mov    eax,esi
1002187f:	pop    esi
10021880:	ret    0x4
10021883:	push   0x44
10021885:	mov    eax,0x10060374
1002188a:	call   0x10059b25
1002188f:	mov    edi,DWORD PTR [ebp+0x14]
10021892:	cmp    BYTE PTR [edi+0x2d],0x0
10021896:	je     0x100218ca
10021898:	push   0x1006ccec
1002189d:	lea    ecx,[ebp-0x28]
100218a0:	call   0x100011c8
100218a5:	and    DWORD PTR [ebp-0x4],0x0
100218a9:	lea    eax,[ebp-0x28]
100218ac:	push   eax
100218ad:	lea    ecx,[ebp-0x50]
100218b0:	call   0x10001065
100218b5:	push   0x10074de8
100218ba:	lea    eax,[ebp-0x50]
100218bd:	push   eax
100218be:	mov    DWORD PTR [ebp-0x50],0x1006b978
100218c5:	call   0x10047aa4
100218ca:	lea    esi,[ebp+0x10]
100218cd:	call   0x10021ce3
100218d2:	mov    ecx,DWORD PTR [edi]
100218d4:	cmp    BYTE PTR [ecx+0x2d],0x0
100218d8:	je     0x100218df
100218da:	mov    ebx,DWORD PTR [edi+0x8]
100218dd:	jmp    0x100218f6
100218df:	mov    eax,DWORD PTR [edi+0x8]
100218e2:	cmp    BYTE PTR [eax+0x2d],0x0
100218e6:	je     0x100218ec
100218e8:	mov    ebx,ecx
100218ea:	jmp    0x100218f6
100218ec:	mov    eax,DWORD PTR [ebp+0x14]
100218ef:	cmp    eax,edi
100218f1:	mov    ebx,DWORD PTR [eax+0x8]
100218f4:	jne    0x1002196c
100218f6:	cmp    BYTE PTR [ebx+0x2d],0x0
100218fa:	mov    esi,DWORD PTR [edi+0x4]
100218fd:	jne    0x10021902
100218ff:	mov    DWORD PTR [ebx+0x4],esi
10021902:	mov    ecx,DWORD PTR [ebp+0x8]
10021905:	mov    eax,DWORD PTR [ecx+0x4]
10021908:	cmp    DWORD PTR [eax+0x4],edi
1002190b:	jne    0x10021912
1002190d:	mov    DWORD PTR [eax+0x4],ebx
10021910:	jmp    0x1002191d
10021912:	cmp    DWORD PTR [esi],edi
10021914:	jne    0x1002191a
10021916:	mov    DWORD PTR [esi],ebx
10021918:	jmp    0x1002191d
1002191a:	mov    DWORD PTR [esi+0x8],ebx
1002191d:	mov    edx,DWORD PTR [ecx+0x4]
10021920:	cmp    DWORD PTR [edx],edi
10021922:	jne    0x10021940
10021924:	cmp    BYTE PTR [ebx+0x2d],0x0
10021928:	je     0x1002192e
1002192a:	mov    ecx,esi
1002192c:	jmp    0x1002193e
1002192e:	mov    eax,DWORD PTR [ebx]
10021930:	mov    ecx,ebx
10021932:	jmp    0x10021938
10021934:	mov    ecx,eax
10021936:	mov    eax,DWORD PTR [ecx]
10021938:	cmp    BYTE PTR [eax+0x2d],0x0
1002193c:	je     0x10021934
1002193e:	mov    DWORD PTR [edx],ecx
10021940:	mov    eax,DWORD PTR [ebp+0x8]
10021943:	mov    edx,DWORD PTR [eax+0x4]
10021946:	cmp    DWORD PTR [edx+0x8],edi
10021949:	jne    0x100219c6
1002194b:	cmp    BYTE PTR [ebx+0x2d],0x0
1002194f:	je     0x10021955
10021951:	mov    ecx,esi
10021953:	jmp    0x10021967
10021955:	mov    eax,DWORD PTR [ebx+0x8]
10021958:	mov    ecx,ebx
1002195a:	jmp    0x10021961
1002195c:	mov    ecx,eax
1002195e:	mov    eax,DWORD PTR [ecx+0x8]
10021961:	cmp    BYTE PTR [eax+0x2d],0x0
10021965:	je     0x1002195c
10021967:	mov    DWORD PTR [edx+0x8],ecx
1002196a:	jmp    0x100219c6
1002196c:	mov    DWORD PTR [ecx+0x4],eax
1002196f:	mov    ecx,DWORD PTR [edi]
10021971:	mov    DWORD PTR [eax],ecx
10021973:	cmp    eax,DWORD PTR [edi+0x8]
10021976:	jne    0x1002197c
10021978:	mov    esi,eax
1002197a:	jmp    0x10021996
1002197c:	cmp    BYTE PTR [ebx+0x2d],0x0
10021980:	mov    esi,DWORD PTR [eax+0x4]
10021983:	jne    0x10021988
10021985:	mov    DWORD PTR [ebx+0x4],esi
10021988:	mov    DWORD PTR [esi],ebx
1002198a:	mov    ecx,DWORD PTR [edi+0x8]
1002198d:	mov    DWORD PTR [eax+0x8],ecx
10021990:	mov    ecx,DWORD PTR [edi+0x8]
10021993:	mov    DWORD PTR [ecx+0x4],eax
10021996:	mov    ecx,DWORD PTR [ebp+0x8]
10021999:	mov    ecx,DWORD PTR [ecx+0x4]
1002199c:	cmp    DWORD PTR [ecx+0x4],edi
1002199f:	jne    0x100219a6
100219a1:	mov    DWORD PTR [ecx+0x4],eax
100219a4:	jmp    0x100219b4
100219a6:	mov    ecx,DWORD PTR [edi+0x4]
100219a9:	cmp    DWORD PTR [ecx],edi
100219ab:	jne    0x100219b1
100219ad:	mov    DWORD PTR [ecx],eax
100219af:	jmp    0x100219b4
100219b1:	mov    DWORD PTR [ecx+0x8],eax
100219b4:	mov    ecx,DWORD PTR [edi+0x4]
100219b7:	mov    DWORD PTR [eax+0x4],ecx
100219ba:	mov    dl,BYTE PTR [edi+0x2c]
100219bd:	mov    cl,BYTE PTR [eax+0x2c]
100219c0:	mov    BYTE PTR [eax+0x2c],dl
100219c3:	mov    BYTE PTR [edi+0x2c],cl
100219c6:	cmp    BYTE PTR [edi+0x2c],0x1
100219ca:	jne    0x10021ae2
100219d0:	jmp    0x10021a96
100219d5:	cmp    BYTE PTR [ebx+0x2c],0x1
100219d9:	jne    0x10021ade
100219df:	mov    ecx,DWORD PTR [esi]
100219e1:	cmp    ebx,ecx
100219e3:	jne    0x10021a5c
100219e5:	mov    ecx,DWORD PTR [esi+0x8]
100219e8:	cmp    BYTE PTR [ecx+0x2c],0x0
100219ec:	jne    0x10021a03
100219ee:	push   DWORD PTR [ebp+0x8]
100219f1:	mov    BYTE PTR [ecx+0x2c],0x1
100219f5:	mov    ecx,esi
100219f7:	mov    BYTE PTR [esi+0x2c],0x0
100219fb:	call   0x10021b19
10021a00:	mov    ecx,DWORD PTR [esi+0x8]
10021a03:	cmp    BYTE PTR [ecx+0x2d],0x0
10021a07:	jne    0x10021a91
10021a0d:	mov    eax,DWORD PTR [ecx]
10021a0f:	cmp    BYTE PTR [eax+0x2c],0x1
10021a13:	jne    0x10021a1e
10021a15:	mov    eax,DWORD PTR [ecx+0x8]
10021a18:	cmp    BYTE PTR [eax+0x2c],0x1
10021a1c:	je     0x10021a8d
10021a1e:	mov    eax,DWORD PTR [ecx+0x8]
10021a21:	cmp    BYTE PTR [eax+0x2c],0x1
10021a25:	jne    0x10021a3c
10021a27:	mov    eax,DWORD PTR [ecx]
10021a29:	push   DWORD PTR [ebp+0x8]
10021a2c:	mov    BYTE PTR [eax+0x2c],0x1
10021a30:	mov    BYTE PTR [ecx+0x2c],0x0
10021a34:	call   0x10021b59
10021a39:	mov    ecx,DWORD PTR [esi+0x8]
10021a3c:	mov    al,BYTE PTR [esi+0x2c]
10021a3f:	push   DWORD PTR [ebp+0x8]
10021a42:	mov    BYTE PTR [ecx+0x2c],al
10021a45:	mov    BYTE PTR [esi+0x2c],0x1
10021a49:	mov    eax,DWORD PTR [ecx+0x8]
10021a4c:	mov    ecx,esi
10021a4e:	mov    BYTE PTR [eax+0x2c],0x1
10021a52:	call   0x10021b19
10021a57:	jmp    0x10021ade
10021a5c:	cmp    BYTE PTR [ecx+0x2c],0x0
10021a60:	jne    0x10021a76
10021a62:	push   DWORD PTR [ebp+0x8]
10021a65:	mov    BYTE PTR [ecx+0x2c],0x1
10021a69:	mov    ecx,esi
10021a6b:	mov    BYTE PTR [esi+0x2c],0x0
10021a6f:	call   0x10021b59
10021a74:	mov    ecx,DWORD PTR [esi]
10021a76:	cmp    BYTE PTR [ecx+0x2d],0x0
10021a7a:	jne    0x10021a91
10021a7c:	mov    eax,DWORD PTR [ecx+0x8]
10021a7f:	cmp    BYTE PTR [eax+0x2c],0x1
10021a83:	jne    0x10021aa7
10021a85:	mov    eax,DWORD PTR [ecx]
10021a87:	cmp    BYTE PTR [eax+0x2c],0x1
10021a8b:	jne    0x10021aa7
10021a8d:	mov    BYTE PTR [ecx+0x2c],0x0
10021a91:	mov    ebx,esi
10021a93:	mov    esi,DWORD PTR [esi+0x4]
10021a96:	mov    eax,DWORD PTR [ebp+0x8]
10021a99:	mov    eax,DWORD PTR [eax+0x4]
10021a9c:	cmp    ebx,DWORD PTR [eax+0x4]
10021a9f:	jne    0x100219d5
10021aa5:	jmp    0x10021ade
10021aa7:	mov    eax,DWORD PTR [ecx]
10021aa9:	cmp    BYTE PTR [eax+0x2c],0x1
10021aad:	jne    0x10021ac4
10021aaf:	mov    eax,DWORD PTR [ecx+0x8]
10021ab2:	push   DWORD PTR [ebp+0x8]
10021ab5:	mov    BYTE PTR [eax+0x2c],0x1
10021ab9:	mov    BYTE PTR [ecx+0x2c],0x0
10021abd:	call   0x10021b19
10021ac2:	mov    ecx,DWORD PTR [esi]
10021ac4:	mov    al,BYTE PTR [esi+0x2c]
10021ac7:	push   DWORD PTR [ebp+0x8]
10021aca:	mov    BYTE PTR [ecx+0x2c],al
10021acd:	mov    BYTE PTR [esi+0x2c],0x1
10021ad1:	mov    eax,DWORD PTR [ecx]
10021ad3:	mov    ecx,esi
10021ad5:	mov    BYTE PTR [eax+0x2c],0x1
10021ad9:	call   0x10021b59
10021ade:	mov    BYTE PTR [ebx+0x2c],0x1
10021ae2:	push   0x1
10021ae4:	lea    esi,[edi+0xc]
10021ae7:	xor    ebx,ebx
10021ae9:	call   0x10005279
10021aee:	push   edi
10021aef:	call   0x10042f82
10021af4:	pop    ecx
10021af5:	mov    ecx,DWORD PTR [ebp+0x8]
10021af8:	mov    eax,DWORD PTR [ecx+0x8]
10021afb:	test   eax,eax
10021afd:	jbe    0x10021b03
10021aff:	dec    eax
10021b00:	mov    DWORD PTR [ecx+0x8],eax
10021b03:	mov    ecx,DWORD PTR [ebp+0x10]
10021b06:	mov    eax,DWORD PTR [ebp+0xc]
10021b09:	mov    DWORD PTR [eax],ecx
10021b0b:	mov    ecx,DWORD PTR [ebp+0x14]
10021b0e:	mov    DWORD PTR [eax+0x4],ecx
10021b11:	call   0x10059bfd
10021b16:	ret    0x10
10021b19:	mov    eax,DWORD PTR [ecx+0x8]
10021b1c:	mov    edx,DWORD PTR [eax]
10021b1e:	mov    DWORD PTR [ecx+0x8],edx
10021b21:	mov    edx,DWORD PTR [eax]
10021b23:	cmp    BYTE PTR [edx+0x2d],0x0
10021b27:	jne    0x10021b2c
10021b29:	mov    DWORD PTR [edx+0x4],ecx
10021b2c:	mov    edx,DWORD PTR [ecx+0x4]
10021b2f:	mov    DWORD PTR [eax+0x4],edx
10021b32:	mov    edx,DWORD PTR [esp+0x4]
10021b36:	mov    edx,DWORD PTR [edx+0x4]
10021b39:	cmp    ecx,DWORD PTR [edx+0x4]
10021b3c:	jne    0x10021b43
10021b3e:	mov    DWORD PTR [edx+0x4],eax
10021b41:	jmp    0x10021b51
10021b43:	mov    edx,DWORD PTR [ecx+0x4]
10021b46:	cmp    ecx,DWORD PTR [edx]
10021b48:	jne    0x10021b4e
10021b4a:	mov    DWORD PTR [edx],eax
10021b4c:	jmp    0x10021b51
10021b4e:	mov    DWORD PTR [edx+0x8],eax
10021b51:	mov    DWORD PTR [eax],ecx
10021b53:	mov    DWORD PTR [ecx+0x4],eax
10021b56:	ret    0x4
10021b59:	mov    eax,DWORD PTR [ecx]
10021b5b:	mov    edx,DWORD PTR [eax+0x8]
10021b5e:	mov    DWORD PTR [ecx],edx
10021b60:	mov    edx,DWORD PTR [eax+0x8]
10021b63:	cmp    BYTE PTR [edx+0x2d],0x0
10021b67:	jne    0x10021b6c
10021b69:	mov    DWORD PTR [edx+0x4],ecx
10021b6c:	mov    edx,DWORD PTR [ecx+0x4]
10021b6f:	mov    DWORD PTR [eax+0x4],edx
10021b72:	mov    edx,DWORD PTR [esp+0x4]
10021b76:	mov    edx,DWORD PTR [edx+0x4]
10021b79:	cmp    ecx,DWORD PTR [edx+0x4]
10021b7c:	jne    0x10021b83
10021b7e:	mov    DWORD PTR [edx+0x4],eax
10021b81:	jmp    0x10021b92
10021b83:	mov    edx,DWORD PTR [ecx+0x4]
10021b86:	cmp    ecx,DWORD PTR [edx+0x8]
10021b89:	jne    0x10021b90
10021b8b:	mov    DWORD PTR [edx+0x8],eax
10021b8e:	jmp    0x10021b92
10021b90:	mov    DWORD PTR [edx],eax
10021b92:	mov    DWORD PTR [eax+0x8],ecx
10021b95:	mov    DWORD PTR [ecx+0x4],eax
10021b98:	ret    0x4
10021b9b:	push   0x8
10021b9d:	mov    eax,0x10060172
10021ba2:	call   0x10059b58
10021ba7:	mov    ebx,ecx
10021ba9:	push   0x30
10021bab:	call   0x1004358e
10021bb0:	mov    edi,eax
10021bb2:	pop    ecx
10021bb3:	mov    DWORD PTR [ebp-0x14],edi
10021bb6:	test   edi,edi
10021bb8:	mov    DWORD PTR [ebp-0x4],0x1
10021bbf:	je     0x10021bea
10021bc1:	mov    eax,DWORD PTR [ebp+0x8]
10021bc4:	mov    DWORD PTR [edi],eax
10021bc6:	mov    eax,DWORD PTR [ebp+0xc]
10021bc9:	mov    DWORD PTR [edi+0x4],eax
10021bcc:	mov    eax,DWORD PTR [ebp+0x10]
10021bcf:	mov    DWORD PTR [edi+0x8],eax
10021bd2:	lea    esi,[edi+0xc]
10021bd5:	mov    eax,ebx
10021bd7:	call   0x10004b4a
10021bdc:	mov    eax,DWORD PTR [ebx+0x1c]
10021bdf:	mov    DWORD PTR [esi+0x1c],eax
10021be2:	mov    BYTE PTR [edi+0x2c],0x0
10021be6:	mov    BYTE PTR [edi+0x2d],0x0
10021bea:	mov    eax,edi
10021bec:	call   0x10059bfd
10021bf1:	ret    0xc
10021bf4:	push   DWORD PTR [ebp-0x14]
10021bf7:	call   0x10042f82
10021bfc:	pop    ecx
10021bfd:	push   0x0
10021bff:	push   0x0
10021c01:	call   0x10047aa4
10021c06:	int3   
10021c07:	push   0x24
10021c09:	call   0x1004358e
10021c0e:	xor    edx,edx
10021c10:	cmp    eax,edx
10021c12:	pop    ecx
10021c13:	je     0x10021c17
10021c15:	mov    DWORD PTR [eax],edx
10021c17:	lea    ecx,[eax+0x4]
10021c1a:	cmp    ecx,edx
10021c1c:	je     0x10021c20
10021c1e:	mov    DWORD PTR [ecx],edx
10021c20:	lea    ecx,[eax+0x8]
10021c23:	cmp    ecx,edx
10021c25:	je     0x10021c29
10021c27:	mov    DWORD PTR [ecx],edx
10021c29:	mov    BYTE PTR [eax+0x20],0x1
10021c2d:	mov    BYTE PTR [eax+0x21],dl
10021c30:	ret    
10021c31:	push   0x24
10021c33:	call   0x1004358e
10021c38:	test   eax,eax
10021c3a:	pop    ecx
10021c3b:	je     0x10021c69
10021c3d:	mov    ecx,DWORD PTR [esp+0x4]
10021c41:	push   esi
10021c42:	mov    esi,DWORD PTR [esp+0x14]
10021c46:	mov    DWORD PTR [eax],ecx
10021c48:	mov    ecx,DWORD PTR [esp+0xc]
10021c4c:	push   edi
10021c4d:	mov    DWORD PTR [eax+0x4],ecx
10021c50:	mov    ecx,DWORD PTR [esp+0x14]
10021c54:	push   0x5
10021c56:	mov    DWORD PTR [eax+0x8],ecx
10021c59:	pop    ecx
10021c5a:	lea    edi,[eax+0xc]
10021c5d:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
10021c5f:	pop    edi
10021c60:	mov    BYTE PTR [eax+0x20],0x0
10021c64:	mov    BYTE PTR [eax+0x21],0x0
10021c68:	pop    esi
10021c69:	ret    0x10
10021c6c:	push   ecx
10021c6d:	push   ebp
10021c6e:	mov    ebp,DWORD PTR [esp+0xc]
10021c72:	cmp    BYTE PTR [ebp+0x2d],0x0
10021c76:	push   edi
10021c77:	mov    DWORD PTR [esp+0x8],ecx
10021c7b:	mov    edi,ebp
10021c7d:	jne    0x10021cab
10021c7f:	push   ebx
10021c80:	push   esi
10021c81:	push   DWORD PTR [edi+0x8]
10021c84:	mov    ecx,DWORD PTR [esp+0x14]
10021c88:	call   0x10021c6c
10021c8d:	mov    edi,DWORD PTR [edi]
10021c8f:	push   0x1
10021c91:	lea    esi,[ebp+0xc]
10021c94:	xor    ebx,ebx
10021c96:	call   0x10005279
10021c9b:	push   ebp
10021c9c:	call   0x10042f82
10021ca1:	cmp    BYTE PTR [edi+0x2d],bl
10021ca4:	pop    ecx
10021ca5:	mov    ebp,edi
10021ca7:	je     0x10021c81
10021ca9:	pop    esi
10021caa:	pop    ebx
10021cab:	pop    edi
10021cac:	pop    ebp
10021cad:	pop    ecx
10021cae:	ret    0x4
10021cb1:	push   ebx
10021cb2:	push   esi
10021cb3:	push   edi
10021cb4:	mov    edi,DWORD PTR [esp+0x10]
10021cb8:	cmp    BYTE PTR [edi+0x21],0x0
10021cbc:	mov    ebx,ecx
10021cbe:	mov    esi,edi
10021cc0:	jne    0x10021cdd
10021cc2:	push   DWORD PTR [esi+0x8]
10021cc5:	mov    ecx,ebx
10021cc7:	call   0x10021cb1
10021ccc:	mov    esi,DWORD PTR [esi]
10021cce:	push   edi
10021ccf:	call   0x10042f82
10021cd4:	cmp    BYTE PTR [esi+0x21],0x0
10021cd8:	pop    ecx
10021cd9:	mov    edi,esi
10021cdb:	je     0x10021cc2
10021cdd:	pop    edi
10021cde:	pop    esi
10021cdf:	pop    ebx
10021ce0:	ret    0x4
10021ce3:	push   ebx
10021ce4:	xor    ebx,ebx
10021ce6:	cmp    DWORD PTR [esi],ebx
10021ce8:	jne    0x10021cef
10021cea:	call   0x100434a0
10021cef:	mov    eax,DWORD PTR [esi+0x4]
10021cf2:	cmp    BYTE PTR [eax+0x2d],bl
10021cf5:	je     0x10021cfe
10021cf7:	call   0x100434a0
10021cfc:	jmp    0x10021d2c
10021cfe:	mov    ecx,DWORD PTR [eax+0x8]
10021d01:	cmp    BYTE PTR [ecx+0x2d],bl
10021d04:	jne    0x10021d21
10021d06:	jmp    0x10021d0a
10021d08:	mov    ecx,eax
10021d0a:	mov    eax,DWORD PTR [ecx]
10021d0c:	cmp    BYTE PTR [eax+0x2d],bl
10021d0f:	je     0x10021d08
10021d11:	mov    DWORD PTR [esi+0x4],ecx
10021d14:	jmp    0x10021d2c
10021d16:	mov    ecx,DWORD PTR [esi+0x4]
10021d19:	cmp    ecx,DWORD PTR [eax+0x8]
10021d1c:	jne    0x10021d29
10021d1e:	mov    DWORD PTR [esi+0x4],eax
10021d21:	mov    eax,DWORD PTR [eax+0x4]
10021d24:	cmp    BYTE PTR [eax+0x2d],bl
10021d27:	je     0x10021d16
10021d29:	mov    DWORD PTR [esi+0x4],eax
10021d2c:	mov    eax,esi
10021d2e:	pop    ebx
10021d2f:	ret    
10021d30:	push   ebp
10021d31:	mov    ebp,esp
10021d33:	push   ecx
10021d34:	push   ecx
10021d35:	push   ebx
10021d36:	mov    eax,0x10080a40
10021d3b:	push   esi
10021d3c:	push   eax
10021d3d:	xor    ebx,ebx
10021d3f:	mov    DWORD PTR [ebp-0x8],eax
10021d42:	call   DWORD PTR ds:0x100660f0
10021d48:	mov    esi,DWORD PTR ds:0x10080a58
10021d4e:	test   esi,esi
10021d50:	mov    BYTE PTR [ebp-0x4],0x1
10021d54:	je     0x10021d81
10021d56:	call   DWORD PTR ds:0x10066160
10021d5c:	xor    ecx,ecx
10021d5e:	cmp    DWORD PTR [esi+0x4],eax
10021d61:	je     0x10021d6e
10021d63:	mov    ecx,esi
10021d65:	mov    esi,DWORD PTR [esi+0x8]
10021d68:	test   esi,esi
10021d6a:	jne    0x10021d5e
10021d6c:	jmp    0x10021d81
10021d6e:	test   ecx,ecx
10021d70:	mov    eax,DWORD PTR [esi+0x8]
10021d73:	jne    0x10021d7c
10021d75:	mov    ds:0x10080a58,eax
10021d7a:	jmp    0x10021d7f
10021d7c:	mov    DWORD PTR [ecx+0x8],eax
10021d7f:	mov    ebx,DWORD PTR [esi]
10021d81:	lea    ecx,[ebp-0x8]
10021d84:	call   0x10010d7e
10021d89:	test   ebx,ebx
10021d8b:	jne    0x10021d91
10021d8d:	xor    eax,eax
10021d8f:	jmp    0x10021dc2
10021d91:	mov    esi,DWORD PTR [ebp+0x8]
10021d94:	mov    eax,DWORD PTR [ebx]
10021d96:	push   edi
10021d97:	push   ebx
10021d98:	mov    ecx,ebx
10021d9a:	mov    DWORD PTR [ebx+0x4],esi
10021d9d:	call   DWORD PTR [eax+0x8]
10021da0:	lea    edi,[ebx+0x8]
10021da3:	call   0x1001becf
10021da8:	mov    ebx,DWORD PTR [ebx+0x14]
10021dab:	push   ebx
10021dac:	push   0xfffffffc
10021dae:	push   esi
10021daf:	call   DWORD PTR ds:0x10066358
10021db5:	push   DWORD PTR [ebp+0x14]
10021db8:	push   DWORD PTR [ebp+0x10]
10021dbb:	push   DWORD PTR [ebp+0xc]
10021dbe:	push   esi
10021dbf:	call   ebx
10021dc1:	pop    edi
10021dc2:	pop    esi
10021dc3:	pop    ebx
10021dc4:	leave  
10021dc5:	ret    0x10
10021dc8:	push   ebp
10021dc9:	mov    ebp,esp
10021dcb:	sub    esp,0x24
10021dce:	mov    ecx,DWORD PTR [ebp+0x14]
10021dd1:	push   ebx
10021dd2:	mov    ebx,DWORD PTR [ebp+0x10]
10021dd5:	push   esi
10021dd6:	mov    esi,DWORD PTR [ebp+0x8]
10021dd9:	mov    edx,DWORD PTR [esi+0x18]
10021ddc:	mov    eax,DWORD PTR [esi+0x4]
10021ddf:	push   edi
10021de0:	mov    edi,DWORD PTR [ebp+0xc]
10021de3:	mov    DWORD PTR [ebp-0x18],ecx
10021de6:	xor    ecx,ecx
10021de8:	push   ecx
10021de9:	mov    DWORD PTR [ebp-0x14],ecx
10021dec:	mov    DWORD PTR [ebp-0xc],ecx
10021def:	mov    DWORD PTR [ebp-0x10],ecx
10021df2:	lea    ecx,[ebp+0x8]
10021df5:	push   ecx
10021df6:	push   DWORD PTR [ebp+0x14]
10021df9:	mov    DWORD PTR [ebp+0xc],edx
10021dfc:	push   ebx
10021dfd:	lea    edx,[ebp-0x24]
10021e00:	push   edi
10021e01:	mov    DWORD PTR [esi+0x18],edx
10021e04:	mov    edx,DWORD PTR [esi]
10021e06:	push   eax
10021e07:	mov    ecx,esi
10021e09:	mov    DWORD PTR [ebp-0x8],0x24
10021e10:	mov    DWORD PTR [ebp-0x4],0x1
10021e17:	mov    DWORD PTR [ebp-0x24],eax
10021e1a:	mov    DWORD PTR [ebp-0x20],edi
10021e1d:	mov    DWORD PTR [ebp-0x1c],ebx
10021e20:	call   DWORD PTR [edx]
10021e22:	test   eax,eax
10021e24:	jne    0x10021e97
10021e26:	cmp    edi,0x82
10021e2c:	je     0x10021e44
10021e2e:	push   DWORD PTR [ebp+0x14]
10021e31:	push   ebx
10021e32:	push   edi
10021e33:	push   DWORD PTR [esi+0x4]
10021e36:	push   DWORD PTR [esi+0x20]
10021e39:	call   DWORD PTR ds:0x10066338
10021e3f:	mov    DWORD PTR [ebp+0x8],eax
10021e42:	jmp    0x10021e97
10021e44:	mov    eax,DWORD PTR [esi+0x4]
10021e47:	mov    edi,DWORD PTR ds:0x10066310
10021e4d:	push   0xfffffffc
10021e4f:	push   eax
10021e50:	call   edi
10021e52:	push   DWORD PTR [ebp+0x14]
10021e55:	mov    DWORD PTR [ebp+0x10],eax
10021e58:	push   ebx
10021e59:	push   0x82
10021e5e:	push   DWORD PTR [esi+0x4]
10021e61:	push   DWORD PTR [esi+0x20]
10021e64:	call   DWORD PTR ds:0x10066338
10021e6a:	mov    DWORD PTR [ebp+0x8],eax
10021e6d:	mov    eax,DWORD PTR [esi+0x20]
10021e70:	cmp    eax,DWORD PTR ds:0x1006633c
10021e76:	je     0x10021e93
10021e78:	mov    eax,DWORD PTR [esi+0x4]
10021e7b:	push   0xfffffffc
10021e7d:	push   eax
10021e7e:	call   edi
10021e80:	cmp    eax,DWORD PTR [ebp+0x10]
10021e83:	jne    0x10021e93
10021e85:	push   DWORD PTR [esi+0x20]
10021e88:	push   0xfffffffc
10021e8a:	push   DWORD PTR [esi+0x4]
10021e8d:	call   DWORD PTR ds:0x10066358
10021e93:	or     DWORD PTR [esi+0x1c],0x1
10021e97:	mov    eax,DWORD PTR [esi+0x1c]
10021e9a:	test   al,0x1
10021e9c:	je     0x10021ebe
10021e9e:	xor    edx,edx
10021ea0:	cmp    DWORD PTR [ebp+0xc],edx
10021ea3:	jne    0x10021ebe
10021ea5:	mov    ecx,DWORD PTR [esi+0x4]
10021ea8:	and    eax,0xfffffffe
10021eab:	mov    DWORD PTR [esi+0x1c],eax
10021eae:	mov    eax,DWORD PTR [esi]
10021eb0:	push   ecx
10021eb1:	mov    ecx,esi
10021eb3:	mov    DWORD PTR [esi+0x4],edx
10021eb6:	mov    DWORD PTR [esi+0x18],edx
10021eb9:	call   DWORD PTR [eax+0xc]
10021ebc:	jmp    0x10021ec4
10021ebe:	mov    eax,DWORD PTR [ebp+0xc]
10021ec1:	mov    DWORD PTR [esi+0x18],eax
10021ec4:	mov    eax,DWORD PTR [ebp+0x8]
10021ec7:	pop    edi
10021ec8:	pop    esi
10021ec9:	pop    ebx
10021eca:	leave  
10021ecb:	ret    0x10
10021ece:	push   ebp
10021ecf:	mov    ebp,esp
10021ed1:	push   esi
10021ed2:	push   edi
10021ed3:	lea    esi,[ebx+0x8]
10021ed6:	push   0x0
10021ed8:	xor    eax,eax
10021eda:	mov    edi,esi
10021edc:	call   0x1001becf
10021ee1:	test   eax,eax
10021ee3:	jne    0x10021ef1
10021ee5:	push   0xe
10021ee7:	call   DWORD PTR ds:0x1006615c
10021eed:	xor    eax,eax
10021eef:	jmp    0x10021f4f
10021ef1:	xor    edi,edi
10021ef3:	cmp    WORD PTR [ebp+0x1c],di
10021ef7:	je     0x10021eed
10021ef9:	mov    eax,ebx
10021efb:	call   0x1001b75b
10021f00:	cmp    DWORD PTR [ebp+0x18],edi
10021f03:	jne    0x10021f11
10021f05:	test   DWORD PTR [ebp+0x10],0x40000000
10021f0c:	je     0x10021f11
10021f0e:	mov    DWORD PTR [ebp+0x18],ebx
10021f11:	mov    eax,DWORD PTR [ebp+0x8]
10021f14:	cmp    eax,edi
10021f16:	jne    0x10021f1d
10021f18:	mov    eax,0x1007f814
10021f1d:	mov    ecx,DWORD PTR [eax+0x4]
10021f20:	mov    esi,DWORD PTR [eax+0xc]
10021f23:	mov    edx,DWORD PTR [eax]
10021f25:	mov    eax,DWORD PTR [eax+0x8]
10021f28:	push   edi
10021f29:	push   DWORD PTR ds:0x10080a04
10021f2f:	sub    esi,ecx
10021f31:	push   DWORD PTR [ebp+0x18]
10021f34:	sub    eax,edx
10021f36:	push   edi
10021f37:	push   esi
10021f38:	push   eax
10021f39:	movzx  eax,WORD PTR [ebp+0x1c]
10021f3d:	push   ecx
10021f3e:	push   edx
10021f3f:	push   DWORD PTR [ebp+0x10]
10021f42:	push   DWORD PTR [ebp+0xc]
10021f45:	push   eax
10021f46:	push   DWORD PTR [ebp+0x14]
10021f49:	call   DWORD PTR ds:0x10066324
10021f4f:	pop    edi
10021f50:	pop    esi
10021f51:	pop    ebp
10021f52:	ret    0x18
10021f55:	push   ebp
10021f56:	mov    ebp,esp
10021f58:	and    esp,0xfffffff8
10021f5b:	sub    esp,0x70
10021f5e:	push   esi
10021f5f:	xor    esi,esi
10021f61:	cmp    ebx,esi
10021f63:	push   edi
10021f64:	je     0x10021fe2
10021f66:	cmp    DWORD PTR [ebp+0x8],esi
10021f69:	je     0x10021fe2
10021f6b:	cmp    WORD PTR [ebx+0x40],si
10021f6f:	jne    0x100220a7
10021f75:	mov    eax,0x10080a40
10021f7a:	push   eax
10021f7b:	mov    DWORD PTR [esp+0x14],eax
10021f7f:	call   DWORD PTR ds:0x100660f0
10021f85:	cmp    WORD PTR [ebx+0x40],si
10021f89:	mov    BYTE PTR [esp+0x14],0x1
10021f8e:	jne    0x1002209c
10021f94:	mov    eax,DWORD PTR [ebx+0x30]
10021f97:	cmp    eax,esi
10021f99:	je     0x1002200c
10021f9b:	mov    ecx,DWORD PTR [ebx+0x28]
10021f9e:	mov    DWORD PTR [esp+0x8],ecx
10021fa2:	mov    ecx,DWORD PTR [ebx+0x8]
10021fa5:	mov    DWORD PTR [esp+0xc],ecx
10021fa9:	lea    ecx,[esp+0x18]
10021fad:	push   ecx
10021fae:	push   eax
10021faf:	push   esi
10021fb0:	mov    esi,DWORD PTR ds:0x100662c4
10021fb6:	mov    DWORD PTR [esp+0x24],0x30
10021fbe:	call   esi
10021fc0:	test   eax,eax
10021fc2:	jne    0x10021feb
10021fc4:	mov    eax,DWORD PTR [ebx+0x30]
10021fc7:	lea    ecx,[esp+0x18]
10021fcb:	push   ecx
10021fcc:	push   eax
10021fcd:	push   DWORD PTR ds:0x10080a04
10021fd3:	call   esi
10021fd5:	test   eax,eax
10021fd7:	jne    0x10021feb
10021fd9:	lea    ecx,[esp+0x10]
10021fdd:	call   0x10010d7e
10021fe2:	xor    ax,ax
10021fe5:	pop    edi
10021fe6:	pop    esi
10021fe7:	mov    esp,ebp
10021fe9:	pop    ebp
10021fea:	ret    
10021feb:	push   0xc
10021fed:	pop    ecx
10021fee:	lea    esi,[esp+0x18]
10021ff2:	mov    edi,ebx
10021ff4:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
10021ff6:	mov    eax,DWORD PTR [ebx+0x8]
10021ff9:	mov    DWORD PTR [ebx+0x34],eax
10021ffc:	mov    eax,DWORD PTR [esp+0x8]
10022000:	mov    DWORD PTR [ebx+0x28],eax
10022003:	mov    eax,DWORD PTR [esp+0xc]
10022007:	mov    DWORD PTR [ebx+0x8],eax
1002200a:	jmp    0x10022028
1002200c:	mov    eax,DWORD PTR [ebx+0x3c]
1002200f:	push   DWORD PTR [ebx+0x38]
10022012:	neg    eax
10022014:	sbb    eax,eax
10022016:	not    eax
10022018:	and    eax,DWORD PTR ds:0x10080a08
1002201e:	push   eax
1002201f:	call   DWORD PTR ds:0x10066364
10022025:	mov    DWORD PTR [ebx+0x1c],eax
10022028:	mov    eax,ds:0x10080a04
1002202d:	and    DWORD PTR [ebx+0x4],0xffffbfff
10022034:	cmp    DWORD PTR [ebx+0x28],0x0
10022038:	mov    DWORD PTR [ebx+0x14],eax
1002203b:	jne    0x10022054
1002203d:	push   ebx
1002203e:	push   0x10070380
10022043:	lea    esi,[ebx+0x42]
10022046:	push   0x25
10022048:	push   esi
10022049:	call   0x10046628
1002204e:	add    esp,0x10
10022051:	mov    DWORD PTR [ebx+0x28],esi
10022054:	mov    eax,DWORD PTR [ebx+0x28]
10022057:	push   0xc
10022059:	pop    ecx
1002205a:	lea    edx,[esp+0x48]
1002205e:	push   edx
1002205f:	mov    esi,ebx
10022061:	lea    edi,[esp+0x4c]
10022065:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
10022067:	mov    ecx,DWORD PTR [ebx+0x14]
1002206a:	push   eax
1002206b:	push   ecx
1002206c:	call   DWORD PTR ds:0x100662c4
10022072:	test   ax,ax
10022075:	mov    WORD PTR [ebx+0x40],ax
10022079:	jne    0x1002209c
1002207b:	push   ebx
1002207c:	call   DWORD PTR ds:0x100662bc
10022082:	movzx  edi,ax
10022085:	lea    eax,[esp+0xc]
10022089:	push   eax
1002208a:	mov    esi,0x10080a5c
1002208f:	mov    DWORD PTR [esp+0x10],edi
10022093:	call   0x10020033
10022098:	mov    WORD PTR [ebx+0x40],di
1002209c:	lea    ecx,[esp+0x10]
100220a0:	call   0x10010d7e
100220a5:	xor    esi,esi
100220a7:	cmp    DWORD PTR [ebx+0x30],esi
100220aa:	je     0x100220b4
100220ac:	mov    eax,DWORD PTR [ebx+0x34]
100220af:	mov    ecx,DWORD PTR [ebp+0x8]
100220b2:	mov    DWORD PTR [ecx],eax
100220b4:	mov    ax,WORD PTR [ebx+0x40]
100220b8:	jmp    0x10021fe5
100220bd:	push   0xc
100220bf:	mov    eax,0x10060152
100220c4:	call   0x10059b58
100220c9:	mov    ebx,DWORD PTR [ebp+0x8]
100220cc:	xor    edi,edi
100220ce:	cmp    ebx,edi
100220d0:	jne    0x100220d9
100220d2:	mov    eax,0x80004003
100220d7:	jmp    0x10022144
100220d9:	push   0x30
100220db:	mov    DWORD PTR [ebx],edi
100220dd:	mov    DWORD PTR [ebp-0x14],0x8007000e
100220e4:	mov    DWORD PTR [ebp-0x4],edi
100220e7:	call   0x1004358e
100220ec:	mov    esi,eax
100220ee:	cmp    esi,edi
100220f0:	pop    ecx
100220f1:	je     0x10022127
100220f3:	mov    eax,ds:0x1006633c
100220f8:	mov    DWORD PTR [esi+0x28],edi
100220fb:	mov    DWORD PTR [esi+0x4],edi
100220fe:	mov    DWORD PTR [esi+0x14],edi
10022101:	mov    DWORD PTR [esi+0x18],edi
10022104:	mov    DWORD PTR [esi+0x1c],edi
10022107:	mov    DWORD PTR [esi+0x20],eax
1002210a:	mov    DWORD PTR [esi+0x2c],edi
1002210d:	mov    DWORD PTR [esi],0x10070658
10022113:	mov    DWORD PTR [esi+0x24],0x10070668
1002211a:	mov    ecx,DWORD PTR ds:0x10080c04
10022120:	mov    eax,DWORD PTR [ecx]
10022122:	call   DWORD PTR [eax+0x4]
10022125:	jmp    0x10022138
10022127:	xor    esi,esi
10022129:	jmp    0x10022138
1002212b:	mov    eax,0x10022131
10022130:	ret    
10022131:	mov    ebx,DWORD PTR [ebp+0x8]
10022134:	xor    edi,edi
10022136:	mov    esi,edi
10022138:	cmp    esi,edi
1002213a:	je     0x1002213f
1002213c:	mov    DWORD PTR [ebp-0x14],edi
1002213f:	mov    eax,DWORD PTR [ebp-0x14]
10022142:	mov    DWORD PTR [ebx],esi
10022144:	call   0x10059bfd
10022149:	ret    0x4
1002214c:	push   0xc
1002214e:	mov    eax,0x10060be9
10022153:	call   0x10059b58
10022158:	mov    ebx,DWORD PTR [ebp+0x8]
1002215b:	xor    edi,edi
1002215d:	cmp    ebx,edi
1002215f:	jne    0x10022168
10022161:	mov    eax,0x80004003
10022166:	jmp    0x100221d3
10022168:	push   0x30
1002216a:	mov    DWORD PTR [ebx],edi
1002216c:	mov    DWORD PTR [ebp-0x14],0x8007000e
10022173:	mov    DWORD PTR [ebp-0x4],edi
10022176:	call   0x1004358e
1002217b:	mov    esi,eax
1002217d:	cmp    esi,edi
1002217f:	pop    ecx
10022180:	je     0x100221b6
10022182:	mov    eax,ds:0x1006633c
10022187:	mov    DWORD PTR [esi+0x28],edi
1002218a:	mov    DWORD PTR [esi+0x4],edi
1002218d:	mov    DWORD PTR [esi+0x14],edi
10022190:	mov    DWORD PTR [esi+0x18],edi
10022193:	mov    DWORD PTR [esi+0x1c],edi
10022196:	mov    DWORD PTR [esi+0x20],eax
10022199:	mov    DWORD PTR [esi+0x2c],edi
1002219c:	mov    DWORD PTR [esi],0x100706a4
100221a2:	mov    DWORD PTR [esi+0x24],0x100706b4
100221a9:	mov    ecx,DWORD PTR ds:0x10080c04
100221af:	mov    eax,DWORD PTR [ecx]
100221b1:	call   DWORD PTR [eax+0x4]
100221b4:	jmp    0x100221c7
100221b6:	xor    esi,esi
100221b8:	jmp    0x100221c7
100221ba:	mov    eax,0x100221c0
100221bf:	ret    
100221c0:	mov    ebx,DWORD PTR [ebp+0x8]
100221c3:	xor    edi,edi
100221c5:	mov    esi,edi
100221c7:	cmp    esi,edi
100221c9:	je     0x100221ce
100221cb:	mov    DWORD PTR [ebp-0x14],edi
100221ce:	mov    eax,DWORD PTR [ebp-0x14]
100221d1:	mov    DWORD PTR [ebx],esi
100221d3:	call   0x10059bfd
100221d8:	ret    0x4
100221db:	push   esi
100221dc:	mov    esi,DWORD PTR [esp+0xc]
100221e0:	test   esi,esi
100221e2:	jne    0x100221eb
100221e4:	mov    eax,0x80070057
100221e9:	jmp    0x1002220f
100221eb:	mov    ecx,DWORD PTR [esp+0x8]
100221ef:	mov    edx,DWORD PTR [ecx+0x10]
100221f2:	mov    eax,DWORD PTR [ecx+0xc]
100221f5:	sub    eax,edx
100221f7:	sar    eax,0x2
100221fa:	cmp    esi,eax
100221fc:	ja     0x10022200
100221fe:	mov    eax,esi
10022200:	lea    edx,[edx+eax*4]
10022203:	mov    DWORD PTR [ecx+0x10],edx
10022206:	xor    ecx,ecx
10022208:	cmp    esi,eax
1002220a:	setne  cl
1002220d:	mov    eax,ecx
1002220f:	pop    esi
10022210:	ret    0x8
10022213:	push   0x8
10022215:	mov    eax,0x10060137
1002221a:	call   0x10059b25
1002221f:	mov    eax,DWORD PTR [ebp+0xc]
10022222:	xor    edi,edi
10022224:	cmp    eax,edi
10022226:	mov    DWORD PTR [ebp-0x10],edi
10022229:	mov    ebx,0x80004003
1002222e:	je     0x100222c9
10022234:	mov    DWORD PTR [eax],edi
10022236:	lea    eax,[ebp-0x14]
10022239:	push   eax
1002223a:	call   0x10022344
1002223f:	mov    ebx,eax
10022241:	cmp    ebx,edi
10022243:	jl     0x100222c9
10022249:	mov    esi,DWORD PTR [ebp+0x8]
1002224c:	test   BYTE PTR [esi+0x14],0x2
10022250:	je     0x1002226a
10022252:	mov    eax,DWORD PTR [esi]
10022254:	push   esi
10022255:	mov    DWORD PTR [ebp+0x8],esi
10022258:	call   DWORD PTR [eax+0x4]
1002225b:	mov    DWORD PTR [ebp-0x4],edi
1002225e:	lea    eax,[ebp+0x8]
10022261:	mov    DWORD PTR [ebp-0x10],0x1
10022268:	jmp    0x1002226d
1002226a:	lea    eax,[esi+0x4]
1002226d:	mov    eax,DWORD PTR [eax]
1002226f:	push   edi
10022270:	mov    edi,DWORD PTR [ebp-0x14]
10022273:	push   eax
10022274:	push   DWORD PTR [esi+0xc]
10022277:	push   DWORD PTR [esi+0x8]
1002227a:	push   edi
1002227b:	call   0x100249f9
10022280:	or     DWORD PTR [ebp-0x4],0xffffffff
10022284:	test   BYTE PTR [ebp-0x10],0x1
10022288:	mov    ebx,eax
1002228a:	je     0x10022299
1002228c:	mov    eax,DWORD PTR [ebp+0x8]
1002228f:	test   eax,eax
10022291:	je     0x10022299
10022293:	mov    ecx,DWORD PTR [eax]
10022295:	push   eax
10022296:	call   DWORD PTR [ecx+0x8]
10022299:	test   ebx,ebx
1002229b:	jl     0x100222bc
1002229d:	mov    eax,DWORD PTR [esi+0x10]
100222a0:	mov    ebx,DWORD PTR [ebp+0xc]
100222a3:	push   0x10070200
100222a8:	mov    DWORD PTR [edi+0x10],eax
100222ab:	push   edi
100222ac:	mov    eax,0x10070630
100222b1:	call   0x10010413
100222b6:	mov    ebx,eax
100222b8:	test   ebx,ebx
100222ba:	jge    0x100222c9
100222bc:	test   edi,edi
100222be:	je     0x100222c9
100222c0:	mov    eax,DWORD PTR [edi]
100222c2:	push   0x1
100222c4:	mov    ecx,edi
100222c6:	call   DWORD PTR [eax+0x1c]
100222c9:	mov    eax,ebx
100222cb:	call   0x10059bfd
100222d0:	ret    0x8
100222d3:	push   0xc
100222d5:	mov    eax,0x1005fb64
100222da:	call   0x10059b58
100222df:	mov    edi,DWORD PTR [ebp+0x8]
100222e2:	xor    ebx,ebx
100222e4:	cmp    edi,ebx
100222e6:	jne    0x100222ef
100222e8:	mov    eax,0x80004003
100222ed:	jmp    0x1002233c
100222ef:	push   0x8
100222f1:	mov    DWORD PTR [edi],ebx
100222f3:	mov    DWORD PTR [ebp-0x14],0x8007000e
100222fa:	mov    DWORD PTR [ebp-0x4],ebx
100222fd:	call   0x1004358e
10022302:	mov    esi,eax
10022304:	cmp    esi,ebx
10022306:	pop    ecx
10022307:	je     0x1002231f
10022309:	mov    DWORD PTR [esi+0x4],ebx
1002230c:	mov    DWORD PTR [esi],0x100706f8
10022312:	mov    ecx,DWORD PTR ds:0x10080c04
10022318:	mov    eax,DWORD PTR [ecx]
1002231a:	call   DWORD PTR [eax+0x4]
1002231d:	jmp    0x10022330
1002231f:	xor    esi,esi
10022321:	jmp    0x10022330
10022323:	mov    eax,0x10022329
10022328:	ret    
10022329:	mov    edi,DWORD PTR [ebp+0x8]
1002232c:	xor    ebx,ebx
1002232e:	mov    esi,ebx
10022330:	cmp    esi,ebx
10022332:	je     0x10022337
10022334:	mov    DWORD PTR [ebp-0x14],ebx
10022337:	mov    eax,DWORD PTR [ebp-0x14]
1002233a:	mov    DWORD PTR [edi],esi
1002233c:	call   0x10059bfd
10022341:	ret    0x4
10022344:	push   0xc
10022346:	mov    eax,0x1005fb49
1002234b:	call   0x10059b58
10022350:	mov    edi,DWORD PTR [ebp+0x8]
10022353:	xor    esi,esi
10022355:	cmp    edi,esi
10022357:	jne    0x10022360
10022359:	mov    eax,0x80004003
1002235e:	jmp    0x100223a1
10022360:	push   0x1c
10022362:	mov    DWORD PTR [edi],esi
10022364:	mov    DWORD PTR [ebp-0x14],0x8007000e
1002236b:	mov    DWORD PTR [ebp-0x18],esi
1002236e:	mov    DWORD PTR [ebp-0x4],esi
10022371:	call   0x1004358e
10022376:	cmp    eax,esi
10022378:	pop    ecx
10022379:	je     0x10022384
1002237b:	mov    esi,eax
1002237d:	call   0x100203b8
10022382:	jmp    0x10022394
10022384:	xor    eax,eax
10022386:	jmp    0x10022394
10022388:	mov    eax,0x1002238e
1002238d:	ret    
1002238e:	mov    edi,DWORD PTR [ebp+0x8]
10022391:	mov    eax,DWORD PTR [ebp-0x18]
10022394:	test   eax,eax
10022396:	je     0x1002239c
10022398:	and    DWORD PTR [ebp-0x14],0x0
1002239c:	mov    DWORD PTR [edi],eax
1002239e:	mov    eax,DWORD PTR [ebp-0x14]
100223a1:	call   0x10059bfd
100223a6:	ret    0x4
100223a9:	sub    DWORD PTR [esp+0x4],0x14
100223ae:	jmp    0x1002124a
100223b3:	sub    ecx,0x38
100223b6:	jmp    0x10021865
100223bb:	sub    DWORD PTR [esp+0x4],0x14
100223c0:	jmp    0x1002123a
100223c5:	sub    DWORD PTR [esp+0x4],0x20
100223ca:	jmp    0x1002125a
100223cf:	sub    DWORD PTR [esp+0x4],0x4
100223d4:	jmp    0x1002125a
100223d9:	sub    DWORD PTR [esp+0x4],0x24
100223de:	jmp    0x1002125a
100223e3:	sub    DWORD PTR [esp+0x4],0x1c
100223e8:	jmp    0x1002124a
100223ed:	sub    DWORD PTR [esp+0x4],0x1c
100223f2:	jmp    0x1002123a
100223f7:	sub    DWORD PTR [esp+0x4],0x8
100223fc:	jmp    0x1002125a
10022401:	sub    DWORD PTR [esp+0x4],0x28
10022406:	jmp    0x1002125a
1002240b:	sub    DWORD PTR [esp+0x4],0x20
10022410:	jmp    0x1002124a
10022415:	sub    DWORD PTR [esp+0x4],0x20
1002241a:	jmp    0x1002123a
1002241f:	sub    DWORD PTR [esp+0x4],0xc
10022424:	jmp    0x1002125a
10022429:	sub    DWORD PTR [esp+0x4],0x4
1002242e:	jmp    0x1002124a
10022433:	sub    DWORD PTR [esp+0x4],0x24
10022438:	jmp    0x1002124a
1002243d:	sub    DWORD PTR [esp+0x4],0x4
10022442:	jmp    0x1002123a
10022447:	sub    DWORD PTR [esp+0x4],0x24
1002244c:	jmp    0x1002123a
10022451:	sub    DWORD PTR [esp+0x4],0x10
10022456:	jmp    0x1002125a
1002245b:	sub    DWORD PTR [esp+0x4],0x8
10022460:	jmp    0x1002124a
10022465:	sub    DWORD PTR [esp+0x4],0x28
1002246a:	jmp    0x1002124a
1002246f:	sub    DWORD PTR [esp+0x4],0x8
10022474:	jmp    0x1002123a
10022479:	sub    DWORD PTR [esp+0x4],0x28
1002247e:	jmp    0x1002123a
10022483:	sub    DWORD PTR [esp+0x4],0x14
10022488:	jmp    0x1002125a
1002248d:	sub    DWORD PTR [esp+0x4],0xc
10022492:	jmp    0x1002124a
10022497:	sub    DWORD PTR [esp+0x4],0xc
1002249c:	jmp    0x1002123a
100224a1:	sub    DWORD PTR [esp+0x4],0x10
100224a6:	jmp    0x1002124a
100224ab:	sub    DWORD PTR [esp+0x4],0x10
100224b0:	jmp    0x1002123a
100224b5:	sub    DWORD PTR [esp+0x4],0x1c
100224ba:	jmp    0x1002125a
100224bf:	mov    eax,DWORD PTR [esp+0x4]
100224c3:	add    eax,0x8
100224c6:	call   0x10011fd0
100224cb:	mov    ecx,DWORD PTR [esp+0x8]
100224cf:	mov    DWORD PTR [ecx],eax
100224d1:	xor    eax,eax
100224d3:	ret    0x8
100224d6:	mov    eax,DWORD PTR [esp+0x4]
100224da:	add    eax,0xc
100224dd:	call   0x10011fd0
100224e2:	mov    ecx,DWORD PTR [esp+0x8]
100224e6:	mov    DWORD PTR [ecx],eax
100224e8:	xor    eax,eax
100224ea:	ret    0x8
100224ed:	mov    eax,DWORD PTR [esp+0x4]
100224f1:	add    eax,0x10
100224f4:	call   0x10011fd0
100224f9:	mov    ecx,DWORD PTR [esp+0x8]
100224fd:	mov    DWORD PTR [ecx],eax
100224ff:	xor    eax,eax
10022501:	ret    0x8
10022504:	mov    eax,DWORD PTR [esp+0x4]
10022508:	add    eax,0x14
1002250b:	call   0x10011fd0
10022510:	mov    ecx,DWORD PTR [esp+0x8]
10022514:	mov    DWORD PTR [ecx],eax
10022516:	xor    eax,eax
10022518:	ret    0x8
1002251b:	mov    eax,DWORD PTR [esp+0x4]
1002251f:	add    eax,0x18
10022522:	call   0x10011fd0
10022527:	mov    ecx,DWORD PTR [esp+0x8]
1002252b:	mov    DWORD PTR [ecx],eax
1002252d:	xor    eax,eax
1002252f:	ret    0x8
10022532:	mov    eax,DWORD PTR [esp+0x4]
10022536:	mov    eax,DWORD PTR [eax+0x1c]
10022539:	mov    ecx,DWORD PTR [esp+0x8]
1002253d:	mov    DWORD PTR [ecx],eax
1002253f:	xor    eax,eax
10022541:	ret    0x8
10022544:	mov    WORD PTR [esi],0x8
10022549:	mov    eax,DWORD PTR [eax]
1002254b:	test   eax,eax
1002254d:	push   edi
1002254e:	je     0x10022554
10022550:	mov    edi,DWORD PTR [eax]
10022552:	jmp    0x10022556
10022554:	xor    edi,edi
10022556:	test   edi,edi
10022558:	jne    0x1002255f
1002255a:	and    DWORD PTR [esi+0x8],edi
1002255d:	jmp    0x1002257f
1002255f:	push   edi
10022560:	call   DWORD PTR ds:0x100662a0
10022566:	push   eax
10022567:	push   edi
10022568:	call   DWORD PTR ds:0x100662a8
1002256e:	test   eax,eax
10022570:	mov    DWORD PTR [esi+0x8],eax
10022573:	jne    0x1002257f
10022575:	push   0x8007000e
1002257a:	call   0x10050c80
1002257f:	mov    eax,esi
10022581:	pop    edi
10022582:	ret    
10022583:	test   ecx,ecx
10022585:	jne    0x10022589
10022587:	mov    ecx,eax
10022589:	cmp    eax,ecx
1002258b:	jne    0x10022592
1002258d:	cmp    dx,WORD PTR [eax]
10022590:	je     0x100225a7
10022592:	push   edx
10022593:	push   0x0
10022595:	push   ecx
10022596:	push   eax
10022597:	call   DWORD PTR ds:0x1006627c
1002259d:	test   eax,eax
1002259f:	jge    0x100225a7
100225a1:	push   eax
100225a2:	call   0x10050c80
100225a7:	ret    
100225a8:	push   0x14
100225aa:	mov    eax,0x1005f8d1
100225af:	call   0x10059b25
100225b4:	and    DWORD PTR [edi],0x0
100225b7:	cmp    WORD PTR [esi],0x8
100225bb:	jne    0x100225c9
100225bd:	push   DWORD PTR [esi+0x8]
100225c0:	mov    ecx,edi
100225c2:	call   0x10010f3b
100225c7:	jmp    0x100225f9
100225c9:	lea    eax,[ebp-0x20]
100225cc:	push   eax
100225cd:	call   DWORD PTR ds:0x1006628c
100225d3:	and    DWORD PTR [ebp-0x4],0x0
100225d7:	mov    ecx,esi
100225d9:	mov    dx,0x8
100225dd:	lea    eax,[ebp-0x20]
100225e0:	call   0x10022583
100225e5:	push   DWORD PTR [ebp-0x18]
100225e8:	mov    ecx,edi
100225ea:	call   0x10010f3b
100225ef:	lea    eax,[ebp-0x20]
100225f2:	push   eax
100225f3:	call   DWORD PTR ds:0x10066294
100225f9:	mov    eax,edi
100225fb:	call   0x10059bfd
10022600:	ret    
10022601:	push   0x4
10022603:	mov    eax,0x10060bce
10022608:	call   0x10059b25
1002260d:	xor    eax,eax
1002260f:	lea    edi,[esi+0x8]
10022612:	mov    DWORD PTR [esi+0x28],eax
10022615:	mov    DWORD PTR [ebp-0x10],edi
10022618:	mov    DWORD PTR [edi+0x8],eax
1002261b:	mov    DWORD PTR [ebp-0x4],eax
1002261e:	mov    DWORD PTR [edi+0xc],eax
10022621:	mov    BYTE PTR [ebp-0x4],0x1
10022625:	call   0x1002464f
1002262a:	lea    ecx,[edi+0x14]
1002262d:	mov    DWORD PTR [ecx],eax
1002262f:	mov    BYTE PTR [eax+0x2d],0x1
10022633:	mov    eax,DWORD PTR [ecx]
10022635:	mov    DWORD PTR [eax+0x4],eax
10022638:	mov    eax,DWORD PTR [ecx]
1002263a:	mov    DWORD PTR [eax],eax
1002263c:	mov    ecx,DWORD PTR [ecx]
1002263e:	mov    DWORD PTR [ecx+0x8],ecx
10022641:	and    DWORD PTR [edi+0x18],0x0
10022645:	mov    DWORD PTR [esi],0x1007154c
1002264b:	mov    DWORD PTR [esi+0x4],0x1007155c
10022652:	mov    DWORD PTR [edi],0x10071570
10022658:	mov    DWORD PTR [esi+0xc],0x100715a8
1002265f:	mov    DWORD PTR [esi+0x24],0x100715c0
10022666:	mov    eax,esi
10022668:	call   0x10059bfd
1002266d:	ret    
1002266e:	push   ebp
1002266f:	mov    ebp,esp
10022671:	sub    esp,0x34
10022674:	mov    eax,ds:0x1007e030
10022679:	xor    eax,ebp
1002267b:	mov    DWORD PTR [ebp-0x4],eax
1002267e:	push   ebx
1002267f:	push   esi
10022680:	mov    esi,DWORD PTR [ebp+0xc]
10022683:	mov    eax,DWORD PTR [esi]
10022685:	push   edi
10022686:	lea    ecx,[ebp-0x34]
10022689:	push   ecx
1002268a:	push   esi
1002268b:	call   DWORD PTR [eax+0xc]
1002268e:	mov    eax,DWORD PTR [esi]
10022690:	lea    ecx,[ebp-0x10]
10022693:	push   ecx
10022694:	lea    ecx,[ebp-0x8]
10022697:	push   ecx
10022698:	lea    ecx,[ebp-0x14]
1002269b:	push   ecx
1002269c:	push   esi
1002269d:	call   DWORD PTR [eax+0x10]
100226a0:	call   DWORD PTR ds:0x1007efec
100226a6:	mov    ebx,eax
100226a8:	mov    eax,DWORD PTR [ebp-0x2c]
100226ab:	test   eax,eax
100226ad:	mov    DWORD PTR [ebp-0xc],eax
100226b0:	je     0x100226c1
100226b2:	push   eax
100226b3:	call   DWORD PTR ds:0x100660c4
100226b9:	inc    eax
100226ba:	cmp    eax,0x3fffffff
100226bf:	jle    0x100226c5
100226c1:	xor    eax,eax
100226c3:	jmp    0x100226db
100226c5:	lea    edi,[eax+eax*1]
100226c8:	mov    eax,edi
100226ca:	call   0x1004b7e0
100226cf:	mov    esi,esp
100226d1:	push   ebx
100226d2:	push   edi
100226d3:	push   DWORD PTR [ebp-0xc]
100226d6:	call   0x10002422
100226db:	push   DWORD PTR [ebp-0x10]
100226de:	push   DWORD PTR [ebp-0x8]
100226e1:	push   eax
100226e2:	call   0x1000206e
100226e7:	add    esp,0xc
100226ea:	xor    eax,eax
100226ec:	lea    esp,[ebp-0x40]
100226ef:	pop    edi
100226f0:	pop    esi
100226f1:	pop    ebx
100226f2:	mov    ecx,DWORD PTR [ebp-0x4]
100226f5:	xor    ecx,ebp
100226f7:	call   0x10042f87
100226fc:	leave  
100226fd:	ret    0x8
10022700:	push   esi
10022701:	mov    esi,ecx
10022703:	neg    ecx
10022705:	lea    eax,[esi+0x8]
10022708:	sbb    ecx,ecx
1002270a:	and    ecx,eax
1002270c:	call   0x10024046
10022711:	test   BYTE PTR [esp+0x8],0x1
10022716:	je     0x1002271f
10022718:	push   esi
10022719:	call   0x10042f82
1002271e:	pop    ecx
1002271f:	mov    eax,esi
10022721:	pop    esi
10022722:	ret    0x4
10022725:	push   ebp
10022726:	mov    ebp,esp
10022728:	and    esp,0xfffffff8
1002272b:	push   0xffffffff
1002272d:	push   0x10060b9d
10022732:	mov    eax,fs:0x0
10022738:	push   eax
10022739:	sub    esp,0x48
1002273c:	push   ebx
1002273d:	push   esi
1002273e:	push   edi
1002273f:	mov    eax,ds:0x1007e030
10022744:	xor    eax,esp
10022746:	push   eax
10022747:	lea    eax,[esp+0x58]
1002274b:	mov    fs:0x0,eax
10022751:	mov    ebx,DWORD PTR [ebp+0x8]
10022754:	mov    DWORD PTR [esp+0x18],ebx
10022758:	and    DWORD PTR [esp+0x60],0x0
1002275d:	lea    eax,[esp+0x1c]
10022761:	push   eax
10022762:	lea    eax,[esp+0x24]
10022766:	push   eax
10022767:	push   DWORD PTR [ebx+0x4]
1002276a:	call   0x1001f196
1002276f:	add    esp,0xc
10022772:	test   al,al
10022774:	je     0x100228b4
1002277a:	push   0x1388
1002277f:	jmp    0x100227ec
10022781:	mov    eax,DWORD PTR [ebx+0x4]
10022784:	and    DWORD PTR [esp+0x10],0x0
10022789:	push   0xffffffff
1002278b:	push   DWORD PTR ds:0x10080f50
10022791:	mov    DWORD PTR [esp+0x1c],eax
10022795:	call   DWORD PTR ds:0x10066084
1002279b:	test   eax,eax
1002279d:	jne    0x100227e8
1002279f:	lea    eax,[esp+0x14]
100227a3:	push   eax
100227a4:	lea    eax,[esp+0x30]
100227a8:	push   eax
100227a9:	call   0x10020b8f
100227ae:	mov    eax,ds:0x10080f58
100227b3:	lea    edi,[esp+0x24]
100227b7:	lea    esi,[esp+0x2c]
100227bb:	mov    DWORD PTR [esp+0x28],eax
100227bf:	mov    DWORD PTR [esp+0x24],0x10080f54
100227c7:	call   0x10009d5c
100227cc:	test   al,al
100227ce:	jne    0x100227dc
100227d0:	call   0x10013f4a
100227d5:	mov    eax,DWORD PTR [eax+0x4]
100227d8:	mov    DWORD PTR [esp+0x10],eax
100227dc:	push   DWORD PTR ds:0x10080f50
100227e2:	call   DWORD PTR ds:0x10066094
100227e8:	push   DWORD PTR [esp+0x10]
100227ec:	push   0x0
100227ee:	lea    eax,[esp+0x24]
100227f2:	push   eax
100227f3:	push   0x2
100227f5:	call   DWORD PTR ds:0x100660e8
100227fb:	mov    esi,eax
100227fd:	call   DWORD PTR ds:0x100660cc
10022803:	cmp    esi,0x1
10022806:	je     0x10022781
1002280c:	cmp    esi,0x102
10022812:	jne    0x100228a2
10022818:	and    DWORD PTR [esp+0x10],0x0
1002281d:	mov    BYTE PTR [esp+0x60],0x1
10022822:	mov    eax,DWORD PTR [ebx]
10022824:	mov    ecx,DWORD PTR [eax]
10022826:	lea    edx,[esp+0x10]
1002282a:	push   edx
1002282b:	push   eax
1002282c:	call   DWORD PTR [ecx+0x4c]
1002282f:	test   eax,eax
10022831:	jl     0x1002288f
10022833:	push   0x7
10022835:	pop    ecx
10022836:	xor    eax,eax
10022838:	lea    edi,[esp+0x36]
1002283c:	rep stos DWORD PTR es:[edi],eax
1002283e:	stos   WORD PTR es:[edi],ax
10022840:	push   0x1006cd08
10022845:	lea    edi,[esp+0x18]
10022849:	mov    WORD PTR [esp+0x38],0x3e8
10022850:	call   0x10002455
10022855:	mov    esi,edi
10022857:	mov    BYTE PTR [esp+0x60],0x2
1002285c:	call   0x10010fa4
10022861:	mov    eax,DWORD PTR [eax]
10022863:	push   0x0
10022865:	lea    edx,[esp+0x38]
10022869:	mov    DWORD PTR [esp+0x3c],eax
1002286d:	mov    eax,DWORD PTR [esp+0x14]
10022871:	mov    ecx,DWORD PTR [eax]
10022873:	push   edx
10022874:	push   DWORD PTR [ebx+0x4]
10022877:	push   eax
10022878:	call   DWORD PTR [ecx+0x38]
1002287b:	mov    esi,eax
1002287d:	call   0x100025b0
10022882:	test   esi,esi
10022884:	jl     0x1002288f
10022886:	push   DWORD PTR [ebx+0x4]
10022889:	call   0x1001f2ca
1002288e:	pop    ecx
1002288f:	mov    BYTE PTR [esp+0x60],0x0
10022894:	mov    eax,DWORD PTR [esp+0x10]
10022898:	test   eax,eax
1002289a:	je     0x100228a2
1002289c:	mov    ecx,DWORD PTR [eax]
1002289e:	push   eax
1002289f:	call   DWORD PTR [ecx+0x8]
100228a2:	xor    esi,esi
100228a4:	push   DWORD PTR [esp+esi*4+0x1c]
100228a8:	call   DWORD PTR ds:0x10066070
100228ae:	inc    esi
100228af:	cmp    esi,0x2
100228b2:	jne    0x100228a4
100228b4:	or     DWORD PTR [esp+0x60],0xffffffff
100228b9:	mov    eax,DWORD PTR [ebx]
100228bb:	test   eax,eax
100228bd:	je     0x100228c5
100228bf:	mov    ecx,DWORD PTR [eax]
100228c1:	push   eax
100228c2:	call   DWORD PTR [ecx+0x8]
100228c5:	push   ebx
100228c6:	call   0x10042f82
100228cb:	xor    eax,eax
100228cd:	pop    ecx
100228ce:	mov    ecx,DWORD PTR [esp+0x58]
100228d2:	mov    DWORD PTR fs:0x0,ecx
100228d9:	pop    ecx
100228da:	pop    edi
100228db:	pop    esi
100228dc:	pop    ebx
100228dd:	mov    esp,ebp
100228df:	pop    ebp
100228e0:	ret    0x4
100228e3:	push   0x4c
100228e5:	mov    eax,0x10063553
100228ea:	call   0x10059b58
100228ef:	test   BYTE PTR ds:0x10081430,0x1
100228f6:	jne    0x10022911
100228f8:	or     DWORD PTR ds:0x10081430,0x1
100228ff:	and    DWORD PTR ds:0x1008142c,0x0
10022906:	push   0x10065917
1002290b:	call   0x10043364
10022910:	pop    ecx
10022911:	push   0x1f4
10022916:	push   DWORD PTR ds:0x10080f60
1002291c:	call   DWORD PTR ds:0x10066084
10022922:	test   eax,eax
10022924:	jne    0x100229d3
1002292a:	xor    ebx,ebx
1002292c:	mov    DWORD PTR [ebp-0x4],ebx
1002292f:	cmp    DWORD PTR ds:0x1008142c,ebx
10022935:	jne    0x100229c3
1002293b:	push   0x2c
1002293d:	call   0x1004358e
10022942:	mov    edi,eax
10022944:	cmp    edi,ebx
10022946:	pop    ecx
10022947:	mov    esi,0x10022a57
1002294c:	je     0x10022963
1002294e:	push   esi
1002294f:	push   0x10022a46
10022954:	push   0x2
10022956:	push   0x14
10022958:	lea    eax,[edi+0x4]
1002295b:	push   eax
1002295c:	call   0x10045ee8
10022961:	mov    ebx,edi
10022963:	xor    eax,eax
10022965:	push   eax
10022966:	push   eax
10022967:	push   ebx
10022968:	push   0x10023e9b
1002296d:	push   eax
1002296e:	push   eax
1002296f:	mov    edi,ebx
10022971:	call   DWORD PTR ds:0x10066098
10022977:	test   eax,eax
10022979:	je     0x100229aa
1002297b:	mov    eax,ds:0x1008142c
10022980:	xor    edi,edi
10022982:	cmp    ebx,eax
10022984:	je     0x100229a4
10022986:	test   eax,eax
10022988:	mov    DWORD PTR [ebp-0x14],eax
1002298b:	je     0x100229a4
1002298d:	push   esi
1002298e:	push   0x2
10022990:	push   0x14
10022992:	add    eax,0x4
10022995:	push   eax
10022996:	call   0x100431e9
1002299b:	push   DWORD PTR [ebp-0x14]
1002299e:	call   0x10042f82
100229a3:	pop    ecx
100229a4:	mov    DWORD PTR ds:0x1008142c,ebx
100229aa:	test   edi,edi
100229ac:	je     0x100229c3
100229ae:	push   esi
100229af:	push   0x2
100229b1:	push   0x14
100229b3:	lea    eax,[edi+0x4]
100229b6:	push   eax
100229b7:	call   0x100431e9
100229bc:	push   edi
100229bd:	call   0x10042f82
100229c2:	pop    ecx
100229c3:	push   DWORD PTR ds:0x10080f60
100229c9:	call   DWORD PTR ds:0x10066094
100229cf:	or     DWORD PTR [ebp-0x4],0xffffffff
100229d3:	mov    eax,ds:0x1008142c
100229d8:	test   eax,eax
100229da:	jne    0x10022a40
100229dc:	push   0xc04c780
100229e1:	push   0x10070ae0
100229e6:	call   0x100042bd
100229eb:	push   eax
100229ec:	push   0x16
100229ee:	push   0x10070b14
100229f3:	call   0x100042cf
100229f8:	add    esp,0x14
100229fb:	push   eax
100229fc:	lea    ecx,[ebp-0x30]
100229ff:	call   0x100011c8
10022a04:	lea    eax,[ebp-0x30]
10022a07:	push   eax
10022a08:	lea    eax,[ebp-0x58]
10022a0b:	push   eax
10022a0c:	mov    DWORD PTR [ebp-0x4],0x2
10022a13:	call   0x100026ec
10022a18:	push   0x10074e8c
10022a1d:	lea    eax,[ebp-0x58]
10022a20:	push   eax
10022a21:	jmp    0x10022a3b
10022a23:	push   0x4
10022a25:	call   0x100379e0
10022a2a:	pop    ecx
10022a2b:	push   DWORD PTR ds:0x10080f60
10022a31:	call   DWORD PTR ds:0x10066094
10022a37:	push   0x0
10022a39:	push   0x0
10022a3b:	call   0x10047aa4
10022a40:	call   0x10059bfd
10022a45:	ret    
10022a46:	push   esi
10022a47:	mov    esi,ecx
10022a49:	mov    ecx,0x10080a74
10022a4e:	call   0x10002149
10022a53:	mov    eax,esi
10022a55:	pop    esi
10022a56:	ret    
10022a57:	mov    eax,DWORD PTR [ecx]
10022a59:	sub    eax,0x10
10022a5c:	jmp    0x1000206f
10022a61:	push   0x50
10022a63:	mov    eax,0x10062a50
10022a68:	call   0x10059b58
10022a6d:	xor    esi,esi
10022a6f:	mov    DWORD PTR [ebp-0x18],esi
10022a72:	mov    DWORD PTR [ebp-0x4],esi
10022a75:	push   DWORD PTR ds:0x10080f6c
10022a7b:	xor    eax,eax
10022a7d:	lea    edi,[ebp-0x38]
10022a80:	mov    DWORD PTR [ebp-0x3c],esi
10022a83:	stos   DWORD PTR es:[edi],eax
10022a84:	lea    edi,[ebp-0x40]
10022a87:	mov    DWORD PTR [ebp-0x44],esi
10022a8a:	stos   DWORD PTR es:[edi],eax
10022a8b:	call   DWORD PTR ds:0x10066110
10022a91:	mov    eax,ds:0x10080fa0
10022a96:	mov    DWORD PTR [ebp-0x4c],eax
10022a99:	mov    eax,ds:0x10080f64
10022a9e:	push   0xffffffff
10022aa0:	mov    DWORD PTR [ebp-0x48],eax
10022aa3:	push   esi
10022aa4:	lea    eax,[ebp-0x4c]
10022aa7:	push   eax
10022aa8:	push   0x2
10022aaa:	call   DWORD PTR ds:0x100660e8
10022ab0:	cmp    eax,esi
10022ab2:	jne    0x10022bdf
10022ab8:	push   0x1f4
10022abd:	push   DWORD PTR ds:0x10080f6c
10022ac3:	call   DWORD PTR ds:0x10066084
10022ac9:	test   eax,eax
10022acb:	je     0x10022be8
10022ad1:	mov    BYTE PTR [ebp-0x4],0x1
10022ad5:	mov    ebx,DWORD PTR [ebp-0x44]
10022ad8:	mov    edi,DWORD PTR [ebp-0x40]
10022adb:	add    ebx,0x989680
10022ae1:	adc    edi,esi
10022ae3:	call   0x1002fa60
10022ae8:	cmp    edi,edx
10022aea:	ja     0x10022bb5
10022af0:	jb     0x10022afa
10022af2:	cmp    ebx,eax
10022af4:	jae    0x10022bb5
10022afa:	lea    eax,[ebp-0x2c]
10022afd:	push   esi
10022afe:	push   eax
10022aff:	call   0x10002898
10022b04:	pop    ecx
10022b05:	pop    ecx
10022b06:	mov    ecx,DWORD PTR [eax]
10022b08:	mov    ebx,ecx
10022b0a:	mov    DWORD PTR [eax],esi
10022b0c:	mov    DWORD PTR [ebp-0x28],ebx
10022b0f:	lea    eax,[ebp-0x2c]
10022b12:	mov    BYTE PTR [ebp-0x4],0x2
10022b16:	call   0x10004296
10022b1b:	push   ebx
10022b1c:	call   0x10002916
10022b21:	test   al,al
10022b23:	je     0x10022b41
10022b25:	mov    eax,DWORD PTR [ebx]
10022b27:	push   0x1
10022b29:	push   eax
10022b2a:	lea    ecx,[ebp-0x54]
10022b2d:	call   0x10035b10
10022b32:	mov    ecx,DWORD PTR [ebp-0x3c]
10022b35:	cmp    ecx,DWORD PTR [eax]
10022b37:	jne    0x10022b41
10022b39:	mov    ecx,DWORD PTR [ebp-0x38]
10022b3c:	cmp    ecx,DWORD PTR [eax+0x4]
10022b3f:	je     0x10022ba2
10022b41:	cmp    DWORD PTR [ebp-0x18],esi
10022b44:	mov    DWORD PTR [ebp-0x3c],esi
10022b47:	mov    DWORD PTR [ebp-0x38],esi
10022b4a:	je     0x10022b5d
10022b4c:	push   0x10070250
10022b51:	xor    eax,eax
10022b53:	lea    esi,[ebp-0x18]
10022b56:	call   0x100103c3
10022b5b:	xor    esi,esi
10022b5d:	push   ebx
10022b5e:	lea    eax,[ebp-0x30]
10022b61:	push   eax
10022b62:	call   0x1002349a
10022b67:	mov    edi,DWORD PTR [eax]
10022b69:	cmp    DWORD PTR [ebp-0x18],edi
10022b6c:	je     0x10022b78
10022b6e:	lea    esi,[ebp-0x18]
10022b71:	call   0x1000777b
10022b76:	xor    esi,esi
10022b78:	mov    eax,DWORD PTR [ebp-0x30]
10022b7b:	cmp    eax,esi
10022b7d:	je     0x10022b85
10022b7f:	mov    ecx,DWORD PTR [eax]
10022b81:	push   eax
10022b82:	call   DWORD PTR [ecx+0x8]
10022b85:	cmp    DWORD PTR [ebp-0x18],esi
10022b88:	je     0x10022ba2
10022b8a:	mov    ebx,DWORD PTR [ebx]
10022b8c:	push   0x1
10022b8e:	push   ebx
10022b8f:	lea    ecx,[ebp-0x5c]
10022b92:	call   0x10035b10
10022b97:	mov    ecx,DWORD PTR [eax]
10022b99:	mov    eax,DWORD PTR [eax+0x4]
10022b9c:	mov    DWORD PTR [ebp-0x3c],ecx
10022b9f:	mov    DWORD PTR [ebp-0x38],eax
10022ba2:	call   0x1002fa60
10022ba7:	mov    DWORD PTR [ebp-0x44],eax
10022baa:	lea    eax,[ebp-0x28]
10022bad:	mov    DWORD PTR [ebp-0x40],edx
10022bb0:	call   0x10004296
10022bb5:	mov    DWORD PTR [ebp-0x4],esi
10022bb8:	cmp    DWORD PTR [ebp-0x18],esi
10022bbb:	jne    0x10022c25
10022bbd:	mov    ecx,DWORD PTR [ebp+0x8]
10022bc0:	xor    edx,edx
10022bc2:	cmp    DWORD PTR [ecx],esi
10022bc4:	je     0x10022bd4
10022bc6:	lea    eax,[ecx+0x14]
10022bc9:	mov    BYTE PTR [eax],0x0
10022bcc:	inc    edx
10022bcd:	add    eax,0x14
10022bd0:	cmp    edx,DWORD PTR [ecx]
10022bd2:	jne    0x10022bc9
10022bd4:	push   DWORD PTR ds:0x10080f68
10022bda:	jmp    0x10022a8b
10022bdf:	cmp    eax,0x1
10022be2:	je     0x10022ad1
10022be8:	or     DWORD PTR [ebp-0x4],0xffffffff
10022bec:	mov    eax,DWORD PTR [ebp-0x18]
10022bef:	cmp    eax,esi
10022bf1:	je     0x10022bf9
10022bf3:	mov    ecx,DWORD PTR [eax]
10022bf5:	push   eax
10022bf6:	call   DWORD PTR [ecx+0x8]
10022bf9:	call   0x10059bfd
10022bfe:	ret    0x4
10022c01:	xor    eax,eax
10022c03:	cmp    DWORD PTR [ebp-0x18],eax
10022c06:	mov    DWORD PTR [ebp-0x3c],eax
10022c09:	mov    DWORD PTR [ebp-0x38],eax
10022c0c:	je     0x10022c1b
10022c0e:	push   0x10070250
10022c13:	lea    esi,[ebp-0x18]
10022c16:	call   0x100103c3
10022c1b:	mov    eax,0x10022c21
10022c20:	ret    
10022c21:	xor    esi,esi
10022c23:	jmp    0x10022bb8
10022c25:	call   DWORD PTR ds:0x10066118
10022c2b:	mov    ebx,DWORD PTR [ebp+0x8]
10022c2e:	cmp    DWORD PTR [ebx],esi
10022c30:	mov    DWORD PTR [ebp-0x20],eax
10022c33:	mov    DWORD PTR [ebp-0x24],esi
10022c36:	je     0x10022bd4
10022c38:	add    ebx,0xc
10022c3b:	jmp    0x10022c3f
10022c3d:	xor    esi,esi
10022c3f:	push   0x8
10022c41:	call   0x1004358e
10022c46:	cmp    eax,esi
10022c48:	pop    ecx
10022c49:	je     0x10022c4f
10022c4b:	mov    DWORD PTR [eax],esi
10022c4d:	mov    esi,eax
10022c4f:	mov    DWORD PTR [ebp-0x28],esi
10022c52:	mov    edi,DWORD PTR [ebp-0x18]
10022c55:	cmp    DWORD PTR [esi],edi
10022c57:	je     0x10022c5e
10022c59:	call   0x1000777b
10022c5e:	call   DWORD PTR ds:0x10066160
10022c64:	xor    edi,edi
10022c66:	push   edi
10022c67:	push   edi
10022c68:	push   esi
10022c69:	push   0x10022725
10022c6e:	push   edi
10022c6f:	push   edi
10022c70:	mov    DWORD PTR [esi+0x4],eax
10022c73:	call   DWORD PTR ds:0x10066098
10022c79:	mov    DWORD PTR [ebp-0x1c],eax
10022c7c:	cmp    eax,edi
10022c7e:	mov    BYTE PTR [ebp-0x4],0x5
10022c82:	je     0x10022c87
10022c84:	mov    DWORD PTR [ebp-0x28],edi
10022c87:	push   DWORD PTR [ebx+0x4]
10022c8a:	mov    eax,DWORD PTR [ebp-0x18]
10022c8d:	push   DWORD PTR [ebx]
10022c8f:	mov    edi,DWORD PTR [eax]
10022c91:	push   DWORD PTR [ebx-0x4]
10022c94:	lea    esi,[ebx-0x8]
10022c97:	mov    DWORD PTR [ebp-0x34],eax
10022c9a:	add    edi,0x34
10022c9d:	call   0x100041ef
10022ca2:	push   eax
10022ca3:	push   DWORD PTR [ebp-0x34]
10022ca6:	call   DWORD PTR [edi]
10022ca8:	test   eax,eax
10022caa:	setge  al
10022cad:	mov    BYTE PTR [ebx+0x8],al
10022cb0:	call   DWORD PTR ds:0x10066118
10022cb6:	mov    edi,eax
10022cb8:	call   DWORD PTR ds:0x10066160
10022cbe:	push   eax
10022cbf:	call   0x1001f328
10022cc4:	test   al,al
10022cc6:	pop    ecx
10022cc7:	je     0x10022cf2
10022cc9:	push   0xe
10022ccb:	call   0x100379e0
10022cd0:	mov    eax,edi
10022cd2:	sub    eax,DWORD PTR [ebp-0x20]
10022cd5:	pop    ecx
10022cd6:	push   eax
10022cd7:	call   0x100041ef
10022cdc:	push   eax
10022cdd:	call   0x1000206e
10022ce2:	xor    eax,eax
10022ce4:	pop    ecx
10022ce5:	pop    ecx
10022ce6:	mov    DWORD PTR [ebp-0x3c],eax
10022ce9:	mov    DWORD PTR [ebp-0x38],eax
10022cec:	mov    DWORD PTR [ebp-0x44],eax
10022cef:	mov    DWORD PTR [ebp-0x40],eax
10022cf2:	cmp    BYTE PTR [ebx+0x8],0x0
10022cf6:	je     0x10022d56
10022cf8:	mov    eax,edi
10022cfa:	sub    eax,DWORD PTR [ebp-0x20]
10022cfd:	push   eax
10022cfe:	call   0x100041ef
10022d03:	push   eax
10022d04:	call   0x1000206e
10022d09:	cmp    DWORD PTR [ebp-0x1c],0x0
10022d0d:	pop    ecx
10022d0e:	pop    ecx
10022d0f:	mov    DWORD PTR [ebp-0x20],edi
10022d12:	je     0x10022d1d
10022d14:	push   DWORD PTR [ebp-0x1c]
10022d17:	call   DWORD PTR ds:0x10066070
10022d1d:	mov    BYTE PTR [ebp-0x4],0x0
10022d21:	mov    esi,DWORD PTR [ebp-0x28]
10022d24:	test   esi,esi
10022d26:	je     0x10022d3b
10022d28:	mov    eax,DWORD PTR [esi]
10022d2a:	test   eax,eax
10022d2c:	je     0x10022d34
10022d2e:	mov    ecx,DWORD PTR [eax]
10022d30:	push   eax
10022d31:	call   DWORD PTR [ecx+0x8]
10022d34:	push   esi
10022d35:	call   0x10042f82
10022d3a:	pop    ecx
10022d3b:	inc    DWORD PTR [ebp-0x24]
10022d3e:	mov    eax,DWORD PTR [ebp+0x8]
10022d41:	mov    ecx,DWORD PTR [ebp-0x24]
10022d44:	add    ebx,0x14
10022d47:	cmp    ecx,DWORD PTR [eax]
10022d49:	jne    0x10022c3d
10022d4f:	xor    esi,esi
10022d51:	jmp    0x10022bd4
10022d56:	cmp    DWORD PTR [ebp-0x1c],0x0
10022d5a:	je     0x10022d65
10022d5c:	push   DWORD PTR [ebp-0x1c]
10022d5f:	call   DWORD PTR ds:0x10066070
10022d65:	mov    BYTE PTR [ebp-0x4],0x0
10022d69:	mov    esi,DWORD PTR [ebp-0x28]
10022d6c:	test   esi,esi
10022d6e:	je     0x10022d4f
10022d70:	mov    eax,DWORD PTR [esi]
10022d72:	test   eax,eax
10022d74:	je     0x10022d7c
10022d76:	mov    ecx,DWORD PTR [eax]
10022d78:	push   eax
10022d79:	call   DWORD PTR [ecx+0x8]
10022d7c:	push   esi
10022d7d:	call   0x10042f82
10022d82:	pop    ecx
10022d83:	jmp    0x10022d4f
10022d85:	push   0xa4
10022d8a:	mov    eax,0x10062a12
10022d8f:	call   0x10059b58
10022d94:	push   0x1f4
10022d99:	push   DWORD PTR ds:0x10080f6c
10022d9f:	call   DWORD PTR ds:0x10066084
10022da5:	test   eax,eax
10022da7:	je     0x10022db8
10022da9:	push   0xf
10022dab:	call   0x100379e0
10022db0:	pop    ecx
10022db1:	xor    al,al
10022db3:	jmp    0x10023056
10022db8:	xor    esi,esi
10022dba:	mov    DWORD PTR [ebp-0x4],esi
10022dbd:	mov    BYTE PTR [ebp-0x11],0x0
10022dc1:	mov    DWORD PTR [ebp-0x18],esi
10022dc4:	cmp    DWORD PTR [ebp+0x10],esi
10022dc7:	je     0x10022df6
10022dc9:	lea    eax,[ebp-0x1c]
10022dcc:	push   eax
10022dcd:	call   0x1002470b
10022dd2:	test   eax,eax
10022dd4:	jl     0x10023047
10022dda:	mov    edi,DWORD PTR [ebp-0x1c]
10022ddd:	mov    eax,DWORD PTR [ebp+0x10]
10022de0:	mov    ecx,edi
10022de2:	call   0x10010973
10022de7:	cmp    edi,esi
10022de9:	je     0x10022df6
10022deb:	lea    esi,[ebp-0x18]
10022dee:	call   0x1000777b
10022df3:	mov    esi,DWORD PTR [ebp-0x18]
10022df6:	mov    eax,DWORD PTR [ebp+0xc]
10022df9:	mov    WORD PTR [ebp-0x60],0x16
10022dff:	mov    DWORD PTR [ebp-0x58],eax
10022e02:	lea    eax,[ebp-0x50]
10022e05:	push   eax
10022e06:	call   DWORD PTR ds:0x1006628c
10022e0c:	mov    BYTE PTR [ebp-0x4],0x3
10022e10:	cmp    DWORD PTR [ebp+0x10],0x0
10022e14:	je     0x10022e57
10022e16:	test   esi,esi
10022e18:	mov    WORD PTR [ebp-0x70],0x9
10022e1e:	mov    DWORD PTR [ebp-0x68],esi
10022e21:	je     0x10022e29
10022e23:	mov    eax,DWORD PTR [esi]
10022e25:	push   esi
10022e26:	call   DWORD PTR [eax+0x4]
10022e29:	lea    eax,[ebp-0x70]
10022e2c:	push   eax
10022e2d:	lea    eax,[ebp-0x50]
10022e30:	push   eax
10022e31:	mov    BYTE PTR [ebp-0x4],0x4
10022e35:	call   DWORD PTR ds:0x10066280
10022e3b:	test   eax,eax
10022e3d:	jge    0x10022e45
10022e3f:	push   eax
10022e40:	call   0x10050c80
10022e45:	lea    eax,[ebp-0x70]
10022e48:	mov    BYTE PTR [ebp-0x4],0x3
10022e4c:	mov    ebx,DWORD PTR ds:0x10066294
10022e52:	push   eax
10022e53:	call   ebx
10022e55:	jmp    0x10022e5d
10022e57:	mov    ebx,DWORD PTR ds:0x10066294
10022e5d:	mov    eax,DWORD PTR [ebp+0x14]
10022e60:	cmp    DWORD PTR [eax+0x18],0x10
10022e64:	jb     0x10022e6b
10022e66:	mov    eax,DWORD PTR [eax+0x4]
10022e69:	jmp    0x10022e6e
10022e6b:	add    eax,0x4
10022e6e:	push   eax
10022e6f:	lea    edi,[ebp+0x10]
10022e72:	call   0x10002455
10022e77:	lea    esi,[ebp-0x80]
10022e7a:	mov    BYTE PTR [ebp-0x4],0x5
10022e7e:	call   0x10022544
10022e83:	call   0x100025b0
10022e88:	mov    esi,DWORD PTR ds:0x1006628c
10022e8e:	lea    eax,[ebp-0x40]
10022e91:	push   eax
10022e92:	call   esi
10022e94:	lea    eax,[ebp-0x30]
10022e97:	push   eax
10022e98:	call   esi
10022e9a:	mov    BYTE PTR [ebp-0x4],0x9
10022e9e:	lea    esi,[ebp-0x60]
10022ea1:	lea    edi,[ebp-0x90]
10022ea7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10022ea8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10022ea9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10022eaa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10022eab:	lea    esi,[ebp-0x50]
10022eae:	lea    edi,[ebp-0xa0]
10022eb4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10022eb5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10022eb6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10022eb7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10022eb8:	lea    esi,[ebp-0x80]
10022ebb:	lea    edi,[ebp-0xb0]
10022ec1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10022ec2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10022ec3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10022ec4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10022ec5:	mov    esi,DWORD PTR [ebp+0x8]
10022ec8:	push   0x366c2e36
10022ecd:	push   0x10070b2c
10022ed2:	mov    DWORD PTR [esi],0x2
10022ed8:	call   0x100042bd
10022edd:	pop    ecx
10022ede:	pop    ecx
10022edf:	push   0x3c825de6
10022ee4:	push   eax
10022ee5:	call   0x100042bd
10022eea:	pop    ecx
10022eeb:	pop    ecx
10022eec:	push   0x5c9553c
10022ef1:	push   eax
10022ef2:	call   0x100042bd
10022ef7:	pop    ecx
10022ef8:	pop    ecx
10022ef9:	push   0x1edac7fa
10022efe:	push   eax
10022eff:	call   0x100042bd
10022f04:	pop    ecx
10022f05:	pop    ecx
10022f06:	push   eax
10022f07:	push   0xb
10022f09:	push   0x10070b54
10022f0e:	call   0x1000448e
10022f13:	add    esp,0xc
10022f16:	push   eax
10022f17:	lea    eax,[esi+0x4]
10022f1a:	push   eax
10022f1b:	call   0x1000238c
10022f20:	lea    eax,[ebp-0xb0]
10022f26:	mov    DWORD PTR [esi+0x8],eax
10022f29:	lea    eax,[ebp-0x40]
10022f2c:	push   0x3b335208
10022f31:	push   0x10070b6c
10022f36:	mov    DWORD PTR [esi+0xc],0x3
10022f3d:	mov    DWORD PTR [esi+0x10],eax
10022f40:	call   0x100042bd
10022f45:	pop    ecx
10022f46:	pop    ecx
10022f47:	push   0x2772fe2
10022f4c:	push   eax
10022f4d:	call   0x100042bd
10022f52:	pop    ecx
10022f53:	pop    ecx
10022f54:	push   eax
10022f55:	push   0xd
10022f57:	push   0x10070b94
10022f5c:	call   0x1000448e
10022f61:	add    esp,0xc
10022f64:	push   eax
10022f65:	lea    eax,[esi+0x18]
10022f68:	push   eax
10022f69:	call   0x1000238c
10022f6e:	push   DWORD PTR ds:0x10080f64
10022f74:	and    DWORD PTR [esi+0x1c],0x0
10022f78:	and    DWORD PTR [esi+0x20],0x0
10022f7c:	lea    eax,[ebp-0x30]
10022f7f:	mov    DWORD PTR [esi+0x24],eax
10022f82:	call   DWORD PTR ds:0x10066110
10022f88:	push   0xffffffff
10022f8a:	push   DWORD PTR ds:0x10080f68
10022f90:	call   DWORD PTR ds:0x10066084
10022f96:	cmp    BYTE PTR [esi+0x14],0x0
10022f9a:	je     0x10023018
10022f9c:	cmp    BYTE PTR [esi+0x28],0x0
10022fa0:	je     0x10023018
10022fa2:	lea    esi,[ebp-0x40]
10022fa5:	lea    edi,[ebp+0x10]
10022fa8:	call   0x100225a8
10022fad:	mov    BYTE PTR [ebp-0x4],0xa
10022fb1:	mov    eax,DWORD PTR [eax]
10022fb3:	test   eax,eax
10022fb5:	je     0x10022fbb
10022fb7:	mov    eax,DWORD PTR [eax]
10022fb9:	jmp    0x10022fbd
10022fbb:	xor    eax,eax
10022fbd:	push   eax
10022fbe:	push   DWORD PTR [ebp+0x18]
10022fc1:	call   0x1000238c
10022fc6:	lea    edi,[ebp+0x10]
10022fc9:	mov    BYTE PTR [ebp-0x4],0x9
10022fcd:	call   0x100025b0
10022fd2:	push   DWORD PTR [ebp+0x18]
10022fd5:	call   0x10024288
10022fda:	mov    esi,DWORD PTR [ebp+0x1c]
10022fdd:	mov    BYTE PTR [ebp-0x4],0xb
10022fe1:	cmp    WORD PTR [ebp-0x30],0x3
10022fe6:	pop    ecx
10022fe7:	mov    BYTE PTR [ebp-0x11],al
10022fea:	mov    DWORD PTR [esi],0x1
10022ff0:	je     0x1002300b
10022ff2:	push   0x3
10022ff4:	push   0x0
10022ff6:	lea    eax,[ebp-0x30]
10022ff9:	push   eax
10022ffa:	push   eax
10022ffb:	call   DWORD PTR ds:0x1006627c
10023001:	test   eax,eax
10023003:	jge    0x1002300b
10023005:	push   eax
10023006:	call   0x10050c80
1002300b:	movsx  eax,WORD PTR [ebp-0x28]
1002300f:	mov    DWORD PTR [esi],eax
10023011:	mov    DWORD PTR [ebp-0x4],0x9
10023018:	lea    eax,[ebp-0x30]
1002301b:	push   eax
1002301c:	call   ebx
1002301e:	lea    eax,[ebp-0x40]
10023021:	push   eax
10023022:	call   ebx
10023024:	lea    eax,[ebp-0x80]
10023027:	push   eax
10023028:	call   ebx
1002302a:	lea    eax,[ebp-0x50]
1002302d:	push   eax
1002302e:	call   ebx
10023030:	lea    eax,[ebp-0x60]
10023033:	push   eax
10023034:	call   ebx
10023036:	mov    BYTE PTR [ebp-0x4],0x0
1002303a:	mov    eax,DWORD PTR [ebp-0x18]
1002303d:	test   eax,eax
1002303f:	je     0x10023047
10023041:	mov    ecx,DWORD PTR [eax]
10023043:	push   eax
10023044:	call   DWORD PTR [ecx+0x8]
10023047:	push   DWORD PTR ds:0x10080f6c
1002304d:	call   DWORD PTR ds:0x10066110
10023053:	mov    al,BYTE PTR [ebp-0x11]
10023056:	call   0x10059bfd
1002305b:	ret    0x18
1002305e:	mov    eax,0x10023064
10023063:	ret    
10023064:	mov    ebx,DWORD PTR ds:0x10066294
1002306a:	jmp    0x10023018
1002306c:	push   0x4
1002306e:	call   0x100379e0
10023073:	pop    ecx
10023074:	mov    eax,0x10023047
10023079:	ret    
1002307a:	push   0xd8
1002307f:	mov    eax,0x10063a67
10023084:	call   0x10059b58
10023089:	mov    edi,ecx
1002308b:	push   0x1f4
10023090:	push   DWORD PTR ds:0x10080f6c
10023096:	call   DWORD PTR ds:0x10066084
1002309c:	test   eax,eax
1002309e:	je     0x100230ac
100230a0:	push   0xf
100230a2:	call   0x100379e0
100230a7:	pop    ecx
100230a8:	xor    al,al
100230aa:	jmp    0x10023108
100230ac:	lea    eax,[ebp-0x1c]
100230af:	xor    ebx,ebx
100230b1:	push   eax
100230b2:	mov    BYTE PTR [ebp-0x15],bl
100230b5:	mov    DWORD PTR [ebp-0x4],ebx
100230b8:	call   0x1002470b
100230bd:	test   eax,eax
100230bf:	jl     0x100230f9
100230c1:	mov    esi,DWORD PTR [ebp-0x1c]
100230c4:	mov    eax,DWORD PTR [ebp+0x10]
100230c7:	mov    ecx,esi
100230c9:	call   0x10010973
100230ce:	cmp    esi,ebx
100230d0:	mov    DWORD PTR [ebp-0x80],esi
100230d3:	je     0x100230db
100230d5:	mov    eax,DWORD PTR [esi]
100230d7:	push   esi
100230d8:	call   DWORD PTR [eax+0x4]
100230db:	lea    eax,[ebp+0x10]
100230de:	push   eax
100230df:	mov    BYTE PTR [ebp-0x4],0x1
100230e3:	call   0x10024788
100230e8:	test   eax,eax
100230ea:	jge    0x10023110
100230ec:	cmp    esi,ebx
100230ee:	mov    BYTE PTR [ebp-0x4],bl
100230f1:	je     0x100230f9
100230f3:	mov    eax,DWORD PTR [esi]
100230f5:	push   esi
100230f6:	call   DWORD PTR [eax+0x8]
100230f9:	push   DWORD PTR ds:0x10080f6c
100230ff:	call   DWORD PTR ds:0x10066110
10023105:	mov    al,BYTE PTR [ebp-0x15]
10023108:	call   0x10059bfd
1002310d:	ret    0x1c
10023110:	mov    ecx,DWORD PTR [ebp+0x14]
10023113:	mov    ebx,DWORD PTR [ebp+0x10]
10023116:	call   0x100116d6
1002311b:	test   ebx,ebx
1002311d:	mov    DWORD PTR [ebp+0x14],ebx
10023120:	je     0x10023128
10023122:	mov    eax,DWORD PTR [ebx]
10023124:	push   ebx
10023125:	call   DWORD PTR [eax+0x4]
10023128:	mov    eax,DWORD PTR [ebp+0xc]
1002312b:	mov    WORD PTR [ebp-0x5c],0x16
10023131:	mov    DWORD PTR [ebp-0x54],eax
10023134:	test   esi,esi
10023136:	mov    BYTE PTR [ebp-0x4],0x3
1002313a:	mov    WORD PTR [ebp-0x3c],0x9
10023140:	mov    DWORD PTR [ebp-0x34],esi
10023143:	je     0x1002314b
10023145:	mov    eax,DWORD PTR [esi]
10023147:	push   esi
10023148:	call   DWORD PTR [eax+0x4]
1002314b:	test   ebx,ebx
1002314d:	mov    BYTE PTR [ebp-0x4],0x4
10023151:	mov    WORD PTR [ebp-0x6c],0x9
10023157:	mov    DWORD PTR [ebp-0x64],ebx
1002315a:	je     0x10023162
1002315c:	mov    eax,DWORD PTR [ebx]
1002315e:	push   ebx
1002315f:	call   DWORD PTR [eax+0x4]
10023162:	test   edi,edi
10023164:	mov    BYTE PTR [ebp-0x4],0x5
10023168:	mov    WORD PTR [ebp-0x2c],0x9
1002316e:	mov    DWORD PTR [ebp-0x24],edi
10023171:	je     0x10023179
10023173:	mov    eax,DWORD PTR [edi]
10023175:	push   edi
10023176:	call   DWORD PTR [eax+0x4]
10023179:	mov    eax,DWORD PTR [ebp+0x18]
1002317c:	mov    BYTE PTR [ebp-0x4],0x6
10023180:	cmp    DWORD PTR [eax+0x18],0x10
10023184:	jb     0x1002318b
10023186:	mov    eax,DWORD PTR [eax+0x4]
10023189:	jmp    0x1002318e
1002318b:	add    eax,0x4
1002318e:	push   eax
1002318f:	lea    edi,[ebp+0x10]
10023192:	call   0x10002455
10023197:	lea    esi,[ebp-0x7c]
1002319a:	mov    BYTE PTR [ebp-0x4],0x7
1002319e:	call   0x10022544
100231a3:	mov    BYTE PTR [ebp-0x4],0x9
100231a7:	call   0x100025b0
100231ac:	mov    eax,DWORD PTR [ebp+0x1c]
100231af:	mov    esi,DWORD PTR [eax]
100231b1:	push   esi
100231b2:	mov    WORD PTR [ebp-0x4c],0x8
100231b8:	call   DWORD PTR ds:0x100662b0
100231be:	test   eax,eax
100231c0:	mov    DWORD PTR [ebp-0x44],eax
100231c3:	jne    0x100231d3
100231c5:	test   esi,esi
100231c7:	je     0x100231d3
100231c9:	push   0x8007000e
100231ce:	call   0x10050c80
100231d3:	cmp    BYTE PTR [ebp+0x20],0x0
100231d7:	mov    BYTE PTR [ebp-0x4],0xa
100231db:	lea    esi,[ebp-0x5c]
100231de:	lea    edi,[ebp-0x94]
100231e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
100231e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
100231e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
100231e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
100231e8:	lea    esi,[ebp-0x3c]
100231eb:	lea    edi,[ebp-0xa4]
100231f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
100231f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
100231f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
100231f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
100231f5:	lea    esi,[ebp-0x6c]
100231f8:	lea    edi,[ebp-0xb4]
100231fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
100231ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10023200:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10023201:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10023202:	lea    esi,[ebp-0x2c]
10023205:	lea    edi,[ebp-0xc4]
1002320b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1002320c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1002320d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1002320e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1002320f:	lea    esi,[ebp-0x7c]
10023212:	lea    edi,[ebp-0xd4]
10023218:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10023219:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1002321a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1002321b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1002321c:	lea    esi,[ebp-0x4c]
1002321f:	lea    edi,[ebp-0xe4]
10023225:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10023226:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10023227:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10023228:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10023229:	mov    esi,DWORD PTR [ebp+0x8]
1002322c:	mov    DWORD PTR [esi],0x1
10023232:	je     0x10023283
10023234:	push   0x716a7ab0
10023239:	push   0x10070bb0
1002323e:	call   0x100042bd
10023243:	pop    ecx
10023244:	pop    ecx
10023245:	push   0x3287257e
1002324a:	push   eax
1002324b:	call   0x100042bd
10023250:	pop    ecx
10023251:	pop    ecx
10023252:	push   0x15151346
10023257:	push   eax
10023258:	call   0x100042bd
1002325d:	pop    ecx
1002325e:	pop    ecx
1002325f:	push   0x73f08ce6
10023264:	push   eax
10023265:	call   0x100042bd
1002326a:	pop    ecx
1002326b:	pop    ecx
1002326c:	push   0x5d9e1e8c
10023271:	push   eax
10023272:	call   0x100042bd
10023277:	pop    ecx
10023278:	pop    ecx
10023279:	push   eax
1002327a:	push   0x9
1002327c:	push   0x10070be8
10023281:	jmp    0x100232a9
10023283:	push   0x50bc47c8
10023288:	push   0x10070bfc
1002328d:	call   0x100042bd
10023292:	pop    ecx
10023293:	pop    ecx
10023294:	push   0xcf811c
10023299:	push   eax
1002329a:	call   0x100042bd
1002329f:	pop    ecx
100232a0:	pop    ecx
100232a1:	push   eax
100232a2:	push   0x8
100232a4:	push   0x10070c38
100232a9:	call   0x1000448e
100232ae:	add    esp,0xc
100232b1:	push   eax
100232b2:	lea    eax,[esi+0x4]
100232b5:	push   eax
100232b6:	call   0x1000238c
100232bb:	push   DWORD PTR ds:0x10080f64
100232c1:	and    DWORD PTR [esi+0x10],0x0
100232c5:	lea    eax,[ebp-0xe4]
100232cb:	mov    DWORD PTR [esi+0x8],eax
100232ce:	mov    DWORD PTR [esi+0xc],0x6
100232d5:	call   DWORD PTR ds:0x10066110
100232db:	push   0xffffffff
100232dd:	push   DWORD PTR ds:0x10080f68
100232e3:	call   DWORD PTR ds:0x10066084
100232e9:	cmp    BYTE PTR [esi+0x14],0x0
100232ed:	je     0x100232fa
100232ef:	mov    eax,ebx
100232f1:	call   0x10011bc2
100232f6:	mov    BYTE PTR [ebp-0x15],0x1
100232fa:	mov    esi,DWORD PTR ds:0x10066294
10023300:	lea    eax,[ebp-0x4c]
10023303:	push   eax
10023304:	call   esi
10023306:	lea    eax,[ebp-0x7c]
10023309:	push   eax
1002330a:	call   esi
1002330c:	lea    eax,[ebp-0x2c]
1002330f:	push   eax
10023310:	call   esi
10023312:	lea    eax,[ebp-0x6c]
10023315:	push   eax
10023316:	call   esi
10023318:	lea    eax,[ebp-0x3c]
1002331b:	push   eax
1002331c:	call   esi
1002331e:	lea    eax,[ebp-0x5c]
10023321:	push   eax
10023322:	call   esi
10023324:	test   ebx,ebx
10023326:	mov    BYTE PTR [ebp-0x4],0x1
1002332a:	je     0x10023332
1002332c:	mov    eax,DWORD PTR [ebx]
1002332e:	push   ebx
1002332f:	call   DWORD PTR [eax+0x8]
10023332:	mov    BYTE PTR [ebp-0x4],0x0
10023336:	mov    eax,DWORD PTR [ebp-0x1c]
10023339:	test   eax,eax
1002333b:	je     0x100230f9
10023341:	mov    ecx,DWORD PTR [eax]
10023343:	push   eax
10023344:	call   DWORD PTR [ecx+0x8]
10023347:	jmp    0x100230f9
1002334c:	push   0x4
1002334e:	call   0x100379e0
10023353:	pop    ecx
10023354:	mov    eax,0x100230f9
10023359:	ret    
1002335a:	mov    eax,DWORD PTR [eax]
1002335c:	test   eax,eax
1002335e:	je     0x10023366
10023360:	mov    ecx,DWORD PTR [eax]
10023362:	push   eax
10023363:	call   DWORD PTR [ecx+0x8]
10023366:	ret    
10023367:	push   0x2c
10023369:	mov    eax,0x100629af
1002336e:	call   0x10059b58
10023373:	mov    esi,ecx
10023375:	mov    ebx,DWORD PTR ds:0x10066084
1002337b:	push   0x1f4
10023380:	push   DWORD PTR ds:0x10080f6c
10023386:	call   ebx
10023388:	test   eax,eax
1002338a:	je     0x1002339b
1002338c:	push   0xf
1002338e:	call   0x100379e0
10023393:	pop    ecx
10023394:	xor    eax,eax
10023396:	jmp    0x10023486
1002339b:	and    DWORD PTR [ebp-0x4],0x0
1002339f:	mov    edi,DWORD PTR ds:0x1006628c
100233a5:	and    DWORD PTR [ebp-0x14],0x0
100233a9:	lea    eax,[ebp-0x28]
100233ac:	push   eax
100233ad:	call   edi
100233af:	push   0x20f4c920
100233b4:	mov    BYTE PTR [ebp-0x4],0x1
100233b8:	push   0x10070c4c
100233bd:	mov    DWORD PTR [esi],0x1
100233c3:	call   0x100042bd
100233c8:	pop    ecx
100233c9:	pop    ecx
100233ca:	push   0x75251e4
100233cf:	push   eax
100233d0:	call   0x100042bd
100233d5:	pop    ecx
100233d6:	pop    ecx
100233d7:	push   0x5c1f2876
100233dc:	push   eax
100233dd:	call   0x100042bd
100233e2:	pop    ecx
100233e3:	pop    ecx
100233e4:	push   0x531467e6
100233e9:	push   eax
100233ea:	call   0x100042bd
100233ef:	pop    ecx
100233f0:	pop    ecx
100233f1:	push   eax
100233f2:	push   0x8
100233f4:	push   0x10070c8c
100233f9:	call   0x1000448e
100233fe:	add    esp,0xc
10023401:	push   eax
10023402:	lea    eax,[esi+0x4]
10023405:	push   eax
10023406:	call   0x1000238c
1002340b:	push   DWORD PTR ds:0x10080f64
10023411:	and    DWORD PTR [esi+0x8],0x0
10023415:	and    DWORD PTR [esi+0xc],0x0
10023419:	lea    eax,[ebp-0x28]
1002341c:	mov    DWORD PTR [esi+0x10],eax
1002341f:	call   DWORD PTR ds:0x10066110
10023425:	push   0xffffffff
10023427:	push   DWORD PTR ds:0x10080f68
1002342d:	call   ebx
1002342f:	cmp    BYTE PTR [esi+0x14],0x0
10023433:	je     0x1002346d
10023435:	cmp    WORD PTR [ebp-0x28],0x16
1002343a:	jne    0x10023444
1002343c:	mov    eax,DWORD PTR [ebp-0x20]
1002343f:	mov    DWORD PTR [ebp-0x14],eax
10023442:	jmp    0x1002346d
10023444:	lea    eax,[ebp-0x38]
10023447:	push   eax
10023448:	call   edi
1002344a:	lea    ecx,[ebp-0x28]
1002344d:	mov    dx,0x16
10023451:	lea    eax,[ebp-0x38]
10023454:	mov    BYTE PTR [ebp-0x4],0x2
10023458:	call   0x10022583
1002345d:	mov    esi,DWORD PTR [ebp-0x30]
10023460:	lea    eax,[ebp-0x38]
10023463:	push   eax
10023464:	call   DWORD PTR ds:0x10066294
1002346a:	mov    DWORD PTR [ebp-0x14],esi
1002346d:	lea    eax,[ebp-0x28]
10023470:	push   eax
10023471:	call   DWORD PTR ds:0x10066294
10023477:	push   DWORD PTR ds:0x10080f6c
1002347d:	call   DWORD PTR ds:0x10066110
10023483:	mov    eax,DWORD PTR [ebp-0x14]
10023486:	call   0x10059bfd
1002348b:	ret    
1002348c:	push   0x4
1002348e:	call   0x100379e0
10023493:	pop    ecx
10023494:	mov    eax,0x10023477
10023499:	ret    
1002349a:	push   ebp
1002349b:	mov    ebp,esp
1002349d:	and    esp,0xfffffff8
100234a0:	push   0xffffffff
100234a2:	push   0x10062971
100234a7:	mov    eax,fs:0x0
100234ad:	push   eax
100234ae:	sub    esp,0xd8
100234b4:	mov    eax,ds:0x1007e030
100234b9:	xor    eax,esp
100234bb:	mov    DWORD PTR [esp+0xd0],eax
100234c2:	push   ebx
100234c3:	push   esi
100234c4:	push   edi
100234c5:	mov    eax,ds:0x1007e030
100234ca:	xor    eax,esp
100234cc:	push   eax
100234cd:	lea    eax,[esp+0xe8]
100234d4:	mov    fs:0x0,eax
100234da:	mov    eax,DWORD PTR [ebp+0x8]
100234dd:	mov    DWORD PTR [esp+0x28],eax
100234e1:	mov    eax,DWORD PTR [ebp+0xc]
100234e4:	mov    DWORD PTR [esp+0x1c],eax
100234e8:	lea    eax,[esp+0x10]
100234ec:	xor    edi,edi
100234ee:	push   eax
100234ef:	mov    DWORD PTR [esp+0x24],edi
100234f3:	call   0x10024679
100234f8:	cmp    eax,edi
100234fa:	jge    0x1002354a
100234fc:	push   0x2b3cb5ae
10023501:	push   0x10070ca0
10023506:	call   0x100042bd
1002350b:	push   eax
1002350c:	push   0x16
1002350e:	push   0x10070cc8
10023513:	call   0x100042cf
10023518:	add    esp,0x14
1002351b:	push   eax
1002351c:	lea    ecx,[esp+0x3c]
10023520:	call   0x100011c8
10023525:	lea    eax,[esp+0x38]
10023529:	push   eax
1002352a:	lea    eax,[esp+0x5c]
1002352e:	push   eax
1002352f:	mov    DWORD PTR [esp+0xf8],edi
10023536:	call   0x100026ec
1002353b:	push   0x10074e8c
10023540:	lea    eax,[esp+0x5c]
10023544:	push   eax
10023545:	call   0x10047aa4
1002354a:	mov    esi,DWORD PTR [esp+0x10]
1002354e:	lea    eax,[esi+0x24]
10023551:	neg    esi
10023553:	sbb    esi,esi
10023555:	and    esi,eax
10023557:	mov    DWORD PTR [esp+0x18],esi
1002355b:	je     0x10023563
1002355d:	mov    eax,DWORD PTR [esi]
1002355f:	push   esi
10023560:	call   DWORD PTR [eax+0x4]
10023563:	mov    DWORD PTR [esp+0xf0],0x1
1002356e:	call   DWORD PTR ds:0x10066118
10023574:	cmp    esi,edi
10023576:	mov    DWORD PTR [esp+0x20],eax
1002357a:	mov    DWORD PTR [esp+0x14],edi
1002357e:	je     0x1002358f
10023580:	mov    eax,DWORD PTR [esi]
10023582:	lea    ecx,[esp+0x14]
10023586:	push   ecx
10023587:	push   0x10070240
1002358c:	push   esi
1002358d:	call   DWORD PTR [eax]
1002358f:	mov    BYTE PTR [esp+0xf0],0x2
10023597:	cmp    DWORD PTR [esp+0x14],edi
1002359b:	jne    0x100235eb
1002359d:	push   0x7a6ab684
100235a2:	push   0x10070ce0
100235a7:	call   0x100042bd
100235ac:	push   eax
100235ad:	push   0x16
100235af:	push   0x10070cc8
100235b4:	call   0x100042cf
100235b9:	add    esp,0x14
100235bc:	push   eax
100235bd:	lea    ecx,[esp+0x3c]
100235c1:	call   0x100011c8
100235c6:	lea    eax,[esp+0x38]
100235ca:	push   eax
100235cb:	lea    eax,[esp+0x5c]
100235cf:	push   eax
100235d0:	mov    BYTE PTR [esp+0xf8],0x3
100235d8:	call   0x100026ec
100235dd:	push   0x10074e8c
100235e2:	lea    eax,[esp+0x5c]
100235e6:	jmp    0x10023544
100235eb:	mov    eax,DWORD PTR [esi]
100235ed:	push   0x10070d20
100235f2:	push   esi
100235f3:	call   DWORD PTR [eax+0x1c]
100235f6:	test   eax,eax
100235f8:	jge    0x1002365e
100235fa:	push   0x571daa8
100235ff:	push   0x10070d30
10023604:	call   0x100042bd
10023609:	push   0x45361c5a
1002360e:	push   eax
1002360f:	call   0x100042bd
10023614:	push   0x2db221c
10023619:	push   eax
1002361a:	call   0x100042bd
1002361f:	push   eax
10023620:	push   0x16
10023622:	push   0x10070cc8
10023627:	call   0x100042cf
1002362c:	add    esp,0x24
1002362f:	push   eax
10023630:	lea    ecx,[esp+0x3c]
10023634:	call   0x100011c8
10023639:	lea    eax,[esp+0x38]
1002363d:	push   eax
1002363e:	lea    eax,[esp+0x5c]
10023642:	push   eax
10023643:	mov    BYTE PTR [esp+0xf8],0x4
1002364b:	call   0x100026ec
10023650:	push   0x10074e8c
10023655:	lea    eax,[esp+0x5c]
10023659:	jmp    0x10023544
1002365e:	push   edi
1002365f:	lea    ecx,[esp+0xc8]
10023666:	mov    DWORD PTR [esp+0xe0],0xf
10023671:	call   0x10001417
10023676:	push   0x10070d54
1002367b:	push   0x16
1002367d:	push   0x10070d84
10023682:	mov    BYTE PTR [esp+0xfc],0x5
1002368a:	call   0x100042cf
1002368f:	add    esp,0xc
10023692:	push   eax
10023693:	lea    eax,[esp+0xc8]
1002369a:	push   eax
1002369b:	call   0x10004107
100236a0:	push   0x10070d9c
100236a5:	push   0x15
100236a7:	push   0x10070dc8
100236ac:	call   0x100042cf
100236b1:	add    esp,0xc
100236b4:	push   eax
100236b5:	lea    eax,[esp+0xc8]
100236bc:	push   eax
100236bd:	call   0x10004107
100236c2:	push   0x77a7398e
100236c7:	push   0x10070de0
100236cc:	call   0x100042bd
100236d1:	push   eax
100236d2:	push   0x1c
100236d4:	push   0x10070e04
100236d9:	call   0x100042cf
100236de:	add    esp,0x14
100236e1:	push   eax
100236e2:	lea    eax,[esp+0xc8]
100236e9:	push   eax
100236ea:	call   0x10004107
100236ef:	push   0x5693ad54
100236f4:	push   0x10070e24
100236f9:	call   0x100042bd
100236fe:	push   0x288107ee
10023703:	push   eax
10023704:	call   0x100042bd
10023709:	push   0x75b100fc
1002370e:	push   eax
1002370f:	call   0x100042bd
10023714:	push   0x3d785a06
10023719:	push   eax
1002371a:	call   0x100042bd
1002371f:	push   eax
10023720:	push   0x1d
10023722:	push   0x10070e48
10023727:	call   0x100042cf
1002372c:	add    esp,0x2c
1002372f:	push   eax
10023730:	lea    eax,[esp+0xc8]
10023737:	push   eax
10023738:	call   0x10004107
1002373d:	push   0x3ed2c346
10023742:	push   0x10070e68
10023747:	call   0x100042bd
1002374c:	push   0x54871512
10023751:	push   eax
10023752:	call   0x100042bd
10023757:	push   eax
10023758:	push   0x14
1002375a:	push   0x10070ea4
1002375f:	call   0x100042cf
10023764:	add    esp,0x1c
10023767:	push   eax
10023768:	lea    eax,[esp+0xc8]
1002376f:	push   eax
10023770:	call   0x10004107
10023775:	push   0x552956d0
1002377a:	push   0x10070ebc
1002377f:	call   0x100042bd
10023784:	push   eax
10023785:	push   0x1b
10023787:	push   0x10070ee8
1002378c:	call   0x100042cf
10023791:	add    esp,0x14
10023794:	push   eax
10023795:	lea    eax,[esp+0xc8]
1002379c:	push   eax
1002379d:	call   0x10004107
100237a2:	push   0x345872e2
100237a7:	push   0x10070f04
100237ac:	call   0x100042bd
100237b1:	push   0x37db2118
100237b6:	push   eax
100237b7:	call   0x100042bd
100237bc:	push   eax
100237bd:	push   0x7
100237bf:	push   0x10070f3c
100237c4:	call   0x100042cf
100237c9:	add    esp,0x1c
100237cc:	push   eax
100237cd:	lea    eax,[esp+0xc8]
100237d4:	push   eax
100237d5:	call   0x10004107
100237da:	push   0x3e107008
100237df:	push   0x10070f44
100237e4:	call   0x100042bd
100237e9:	push   0x7e3e2fba
100237ee:	push   eax
100237ef:	call   0x100042bd
100237f4:	push   eax
100237f5:	push   0x19
100237f7:	push   0x10070f7c
100237fc:	call   0x100042cf
10023801:	add    esp,0x1c
10023804:	push   eax
10023805:	lea    eax,[esp+0xc8]
1002380c:	push   eax
1002380d:	call   0x10004107
10023812:	mov    ebx,0x10070f98
10023817:	push   ebx
10023818:	lea    eax,[esp+0xc8]
1002381f:	push   eax
10023820:	call   0x10004107
10023825:	push   0x2ae9ee2e
1002382a:	push   0x10070f9c
1002382f:	call   0x100042bd
10023834:	push   0x377ceb44
10023839:	push   eax
1002383a:	call   0x100042bd
1002383f:	push   eax
10023840:	push   0x15
10023842:	push   0x10070fd4
10023847:	call   0x100042cf
1002384c:	add    esp,0x1c
1002384f:	push   eax
10023850:	lea    eax,[esp+0xc8]
10023857:	push   eax
10023858:	call   0x10004107
1002385d:	mov    esi,0x10070fec
10023862:	push   esi
10023863:	lea    eax,[esp+0xc8]
1002386a:	push   eax
1002386b:	call   0x10004107
10023870:	push   0x3be9a660
10023875:	push   0x10070ff0
1002387a:	call   0x100042bd
1002387f:	push   eax
10023880:	push   0x14
10023882:	push   0x1007102c
10023887:	call   0x100042cf
1002388c:	add    esp,0x14
1002388f:	push   eax
10023890:	lea    eax,[esp+0xc8]
10023897:	push   eax
10023898:	call   0x10004107
1002389d:	push   ebx
1002389e:	lea    eax,[esp+0xc8]
100238a5:	push   eax
100238a6:	call   0x10004107
100238ab:	push   0x221fd496
100238b0:	push   0x10071044
100238b5:	call   0x100042bd
100238ba:	push   0x63de495e
100238bf:	push   eax
100238c0:	call   0x100042bd
100238c5:	push   0x4fcb579e
100238ca:	push   eax
100238cb:	call   0x100042bd
100238d0:	push   eax
100238d1:	push   0x19
100238d3:	push   0x10071080
100238d8:	call   0x100042cf
100238dd:	add    esp,0x24
100238e0:	push   eax
100238e1:	lea    eax,[esp+0xc8]
100238e8:	push   eax
100238e9:	call   0x10004107
100238ee:	push   esi
100238ef:	lea    eax,[esp+0xc8]
100238f6:	push   eax
100238f7:	call   0x10004107
100238fc:	push   0x71e98f50
10023901:	push   0x1007109c
10023906:	call   0x100042bd
1002390b:	push   eax
1002390c:	push   0x26
1002390e:	push   0x100710d8
10023913:	call   0x100042cf
10023918:	add    esp,0x14
1002391b:	push   eax
1002391c:	lea    eax,[esp+0xc8]
10023923:	push   eax
10023924:	call   0x10004107
10023929:	push   0x10071100
1002392e:	push   0x2
10023930:	push   0x10071124
10023935:	call   0x100042cf
1002393a:	add    esp,0xc
1002393d:	push   eax
1002393e:	lea    eax,[esp+0xc8]
10023945:	push   eax
10023946:	call   0x10004107
1002394b:	push   0x722c352c
10023950:	push   0x10071128
10023955:	call   0x100042bd
1002395a:	push   0x1f4751c0
1002395f:	push   eax
10023960:	call   0x100042bd
10023965:	push   eax
10023966:	push   0x12
10023968:	push   0x1007114c
1002396d:	call   0x100042cf
10023972:	add    esp,0x1c
10023975:	push   eax
10023976:	lea    eax,[esp+0xc8]
1002397d:	push   eax
1002397e:	call   0x10004107
10023983:	push   0x38acc642
10023988:	push   0x10071160
1002398d:	call   0x100042bd
10023992:	push   0xa156e64
10023997:	push   eax
10023998:	call   0x100042bd
1002399d:	push   0x533a319a
100239a2:	push   eax
100239a3:	call   0x100042bd
100239a8:	push   0x47a8180
100239ad:	push   eax
100239ae:	call   0x100042bd
100239b3:	push   eax
100239b4:	push   0x39
100239b6:	push   0x10071198
100239bb:	call   0x100042cf
100239c0:	add    esp,0x2c
100239c3:	push   eax
100239c4:	lea    eax,[esp+0xc8]
100239cb:	push   eax
100239cc:	call   0x10004107
100239d1:	push   esi
100239d2:	lea    eax,[esp+0xc8]
100239d9:	push   eax
100239da:	call   0x10004107
100239df:	push   0x1784c604
100239e4:	push   0x100711d4
100239e9:	call   0x100042bd
100239ee:	push   0x6b3b2a92
100239f3:	push   eax
100239f4:	call   0x100042bd
100239f9:	push   0x2872dccc
100239fe:	push   eax
100239ff:	call   0x100042bd
10023a04:	push   eax
10023a05:	push   0x3c
10023a07:	push   0x10071208
10023a0c:	call   0x100042cf
10023a11:	add    esp,0x24
10023a14:	push   eax
10023a15:	lea    eax,[esp+0xc8]
10023a1c:	push   eax
10023a1d:	call   0x10004107
10023a22:	push   ebx
10023a23:	lea    eax,[esp+0xc8]
10023a2a:	push   eax
10023a2b:	call   0x10004107
10023a30:	push   0x37849ec0
10023a35:	push   0x10071248
10023a3a:	call   0x100042bd
10023a3f:	push   eax
10023a40:	push   0x45
10023a42:	push   0x10071288
10023a47:	call   0x100042cf
10023a4c:	add    esp,0x14
10023a4f:	push   eax
10023a50:	lea    eax,[esp+0xc8]
10023a57:	push   eax
10023a58:	call   0x10004107
10023a5d:	push   esi
10023a5e:	lea    eax,[esp+0xc8]
10023a65:	push   eax
10023a66:	call   0x10004107
10023a6b:	push   0x4fe8bd68
10023a70:	push   0x100712d0
10023a75:	call   0x100042bd
10023a7a:	push   0xc7f1926
10023a7f:	push   eax
10023a80:	call   0x100042bd
10023a85:	push   eax
10023a86:	push   0x3d
10023a88:	push   0x10071308
10023a8d:	call   0x100042cf
10023a92:	add    esp,0x1c
10023a95:	push   eax
10023a96:	lea    eax,[esp+0xc8]
10023a9d:	push   eax
10023a9e:	call   0x10004107
10023aa3:	push   ebx
10023aa4:	lea    eax,[esp+0xc8]
10023aab:	push   eax
10023aac:	call   0x10004107
10023ab1:	push   0x699034ee
10023ab6:	push   0x10071348
10023abb:	call   0x100042bd
10023ac0:	push   0xa3e9858
10023ac5:	push   eax
10023ac6:	call   0x100042bd
10023acb:	push   eax
10023acc:	push   0x46
10023ace:	push   0x10071380
10023ad3:	call   0x100042cf
10023ad8:	add    esp,0x1c
10023adb:	push   eax
10023adc:	lea    eax,[esp+0xc8]
10023ae3:	push   eax
10023ae4:	call   0x10004107
10023ae9:	push   esi
10023aea:	lea    eax,[esp+0xc8]
10023af1:	push   eax
10023af2:	call   0x10004107
10023af7:	mov    eax,DWORD PTR [esp+0x1c]
10023afb:	mov    eax,DWORD PTR [eax]
10023afd:	lea    ecx,[esp+0x10]
10023b01:	push   ecx
10023b02:	push   0x1
10023b04:	lea    ecx,[esp+0x24]
10023b08:	push   ecx
10023b09:	push   eax
10023b0a:	call   0x10036b60
10023b0f:	mov    ecx,DWORD PTR [eax]
10023b11:	mov    esi,ecx
10023b13:	mov    DWORD PTR [esp+0x24],esi
10023b17:	mov    DWORD PTR [eax],edi
10023b19:	mov    DWORD PTR [esp+0x54],esi
10023b1d:	mov    BYTE PTR [esp+0xf0],0x6
10023b25:	push   DWORD PTR [esp+0x1c]
10023b29:	call   0x10042f82
10023b2e:	cmp    esi,edi
10023b30:	pop    ecx
10023b31:	jne    0x10023b7e
10023b33:	mov    esi,DWORD PTR [esp+0x28]
10023b37:	push   edi
10023b38:	mov    DWORD PTR [esi],edi
10023b3a:	call   0x10042f82
10023b3f:	pop    ecx
10023b40:	push   edi
10023b41:	push   0x1
10023b43:	lea    ecx,[esp+0xcc]
10023b4a:	call   0x100012eb
10023b4f:	mov    BYTE PTR [esp+0xf0],0x1
10023b57:	mov    eax,DWORD PTR [esp+0x14]
10023b5b:	cmp    eax,edi
10023b5d:	je     0x10023b65
10023b5f:	mov    ecx,DWORD PTR [eax]
10023b61:	push   eax
10023b62:	call   DWORD PTR [ecx+0x8]
10023b65:	or     DWORD PTR [esp+0xf0],0xffffffff
10023b6d:	mov    eax,DWORD PTR [esp+0x18]
10023b71:	mov    ecx,DWORD PTR [eax]
10023b73:	push   eax
10023b74:	call   DWORD PTR [ecx+0x8]
10023b77:	mov    eax,esi
10023b79:	jmp    0x10023e75
10023b7e:	mov    eax,DWORD PTR [esp+0x10]
10023b82:	mov    DWORD PTR [esp+0x30],eax
10023b86:	lea    eax,[esp+0x2c]
10023b8a:	push   eax
10023b8b:	mov    DWORD PTR [esp+0x30],edi
10023b8f:	mov    DWORD PTR [esp+0x38],esi
10023b93:	call   0x10037840
10023b98:	cmp    eax,edi
10023b9a:	je     0x10023d40
10023ba0:	mov    DWORD PTR [esp+0x10],eax
10023ba4:	mov    ebx,0x10071444
10023ba9:	push   0x100713c8
10023bae:	push   0x12
10023bb0:	push   0x100713ec
10023bb5:	call   0x100042cf
10023bba:	add    esp,0xc
10023bbd:	push   eax
10023bbe:	lea    eax,[esp+0xc8]
10023bc5:	push   eax
10023bc6:	call   0x10004107
10023bcb:	push   0x10071400
10023bd0:	push   0x10
10023bd2:	push   0x10071430
10023bd7:	call   0x100042cf
10023bdc:	add    esp,0xc
10023bdf:	push   eax
10023be0:	lea    eax,[esp+0xc8]
10023be7:	push   eax
10023be8:	call   0x10004107
10023bed:	lea    eax,[esp+0x2c]
10023bf1:	push   eax
10023bf2:	lea    esi,[esp+0x3c]
10023bf6:	call   0x10037500
10023bfb:	push   0xffffffff
10023bfd:	push   edi
10023bfe:	lea    esi,[esp+0xcc]
10023c05:	mov    BYTE PTR [esp+0xf8],0x7
10023c0d:	call   0x10004ce1
10023c12:	push   edi
10023c13:	push   0x1
10023c15:	lea    ecx,[esp+0x40]
10023c19:	mov    BYTE PTR [esp+0xf8],0x6
10023c21:	call   0x100012eb
10023c26:	push   ebx
10023c27:	mov    eax,esi
10023c29:	push   eax
10023c2a:	call   0x10004107
10023c2f:	push   0x179db512
10023c34:	push   0x10071448
10023c39:	call   0x100042bd
10023c3e:	push   eax
10023c3f:	push   0xd
10023c41:	push   0x10071480
10023c46:	call   0x100042cf
10023c4b:	add    esp,0x14
10023c4e:	push   eax
10023c4f:	mov    eax,esi
10023c51:	push   eax
10023c52:	call   0x10004107
10023c57:	lea    eax,[esp+0x2c]
10023c5b:	push   eax
10023c5c:	lea    esi,[esp+0x3c]
10023c60:	call   0x10037500
10023c65:	push   0xffffffff
10023c67:	push   edi
10023c68:	lea    esi,[esp+0xcc]
10023c6f:	mov    BYTE PTR [esp+0xf8],0x8
10023c77:	call   0x10004ce1
10023c7c:	push   edi
10023c7d:	push   0x1
10023c7f:	lea    ecx,[esp+0x40]
10023c83:	mov    BYTE PTR [esp+0xf8],0x6
10023c8b:	call   0x100012eb
10023c90:	push   ebx
10023c91:	mov    eax,esi
10023c93:	push   eax
10023c94:	call   0x10004107
10023c99:	push   0x10071490
10023c9e:	push   0xe
10023ca0:	push   0x100714c0
10023ca5:	call   0x100042cf
10023caa:	add    esp,0xc
10023cad:	push   eax
10023cae:	mov    eax,esi
10023cb0:	push   eax
10023cb1:	call   0x10004107
10023cb6:	lea    eax,[esp+0x2c]
10023cba:	push   eax
10023cbb:	lea    esi,[esp+0x3c]
10023cbf:	call   0x10037500
10023cc4:	push   0xffffffff
10023cc6:	push   edi
10023cc7:	lea    esi,[esp+0xcc]
10023cce:	mov    BYTE PTR [esp+0xf8],0x9
10023cd6:	call   0x10004ce1
10023cdb:	push   edi
10023cdc:	push   0x1
10023cde:	lea    ecx,[esp+0x40]
10023ce2:	mov    BYTE PTR [esp+0xf8],0x6
10023cea:	call   0x100012eb
10023cef:	push   ebx
10023cf0:	mov    eax,esi
10023cf2:	push   eax
10023cf3:	call   0x10004107
10023cf8:	push   0x378df7de
10023cfd:	push   0x100714d0
10023d02:	call   0x100042bd
10023d07:	push   0x2ce002de
10023d0c:	push   eax
10023d0d:	call   0x100042bd
10023d12:	push   0x6f27e78a
10023d17:	push   eax
10023d18:	call   0x100042bd
10023d1d:	push   eax
10023d1e:	push   0x11
10023d20:	push   0x100714fc
10023d25:	call   0x100042cf
10023d2a:	add    esp,0x24
10023d2d:	push   eax
10023d2e:	mov    eax,esi
10023d30:	push   eax
10023d31:	call   0x10004107
10023d36:	dec    DWORD PTR [esp+0x10]
10023d3a:	jne    0x10023ba9
10023d40:	call   DWORD PTR ds:0x1007efec
10023d46:	cmp    DWORD PTR [esp+0xdc],0x10
10023d4e:	mov    eax,DWORD PTR [esp+0xc8]
10023d55:	jae    0x10023d5e
10023d57:	lea    eax,[esp+0xc8]
10023d5e:	push   eax
10023d5f:	lea    ecx,[esp+0x3c]
10023d63:	call   0x100011c8
10023d68:	lea    eax,[esp+0x10]
10023d6c:	push   eax
10023d6d:	lea    ebx,[esp+0x3c]
10023d71:	mov    BYTE PTR [esp+0xf4],0xa
10023d79:	call   0x10034240
10023d7e:	pop    ecx
10023d7f:	mov    BYTE PTR [esp+0xf0],0xb
10023d87:	mov    eax,DWORD PTR [eax]
10023d89:	test   eax,eax
10023d8b:	je     0x10023d91
10023d8d:	mov    eax,DWORD PTR [eax]
10023d8f:	jmp    0x10023d93
10023d91:	xor    eax,eax
10023d93:	mov    ecx,DWORD PTR [esp+0x18]
10023d97:	mov    edx,DWORD PTR [ecx]
10023d99:	push   eax
10023d9a:	push   ecx
10023d9b:	call   DWORD PTR [edx+0x28]
10023d9e:	test   eax,eax
10023da0:	lea    edi,[esp+0x10]
10023da4:	setl   bl
10023da7:	call   0x100025b0
10023dac:	push   0x0
10023dae:	push   0x1
10023db0:	lea    ecx,[esp+0x40]
10023db4:	mov    BYTE PTR [esp+0xf8],0x6
10023dbc:	call   0x100012eb
10023dc1:	test   bl,bl
10023dc3:	je     0x10023e14
10023dc5:	push   0x10071510
10023dca:	push   0x16
10023dcc:	push   0x10070cc8
10023dd1:	call   0x100042cf
10023dd6:	add    esp,0xc
10023dd9:	push   eax
10023dda:	lea    ecx,[esp+0x84]
10023de1:	call   0x100011c8
10023de6:	lea    eax,[esp+0x80]
10023ded:	push   eax
10023dee:	lea    eax,[esp+0xa0]
10023df5:	push   eax
10023df6:	mov    BYTE PTR [esp+0xf8],0xc
10023dfe:	call   0x100026ec
10023e03:	push   0x10074e8c
10023e08:	lea    eax,[esp+0xa0]
10023e0f:	jmp    0x10023544
10023e14:	push   DWORD PTR [esp+0x24]
10023e18:	call   0x10042f82
10023e1d:	pop    ecx
10023e1e:	push   0x0
10023e20:	push   0x1
10023e22:	lea    ecx,[esp+0xcc]
10023e29:	call   0x100012eb
10023e2e:	mov    BYTE PTR [esp+0xf0],0x1
10023e36:	mov    eax,DWORD PTR [esp+0x14]
10023e3a:	test   eax,eax
10023e3c:	je     0x10023e44
10023e3e:	mov    ecx,DWORD PTR [eax]
10023e40:	push   eax
10023e41:	call   DWORD PTR [ecx+0x8]
10023e44:	call   DWORD PTR ds:0x10066118
10023e4a:	sub    eax,DWORD PTR [esp+0x20]
10023e4e:	push   eax
10023e4f:	call   0x1000206e
10023e54:	mov    esi,DWORD PTR [esp+0x1c]
10023e58:	mov    edi,DWORD PTR [esp+0x2c]
10023e5c:	pop    ecx
10023e5d:	mov    DWORD PTR [edi],esi
10023e5f:	mov    eax,DWORD PTR [esi]
10023e61:	push   esi
10023e62:	call   DWORD PTR [eax+0x4]
10023e65:	or     DWORD PTR [esp+0xf0],0xffffffff
10023e6d:	mov    eax,DWORD PTR [esi]
10023e6f:	push   esi
10023e70:	call   DWORD PTR [eax+0x8]
10023e73:	mov    eax,edi
10023e75:	mov    ecx,DWORD PTR [esp+0xe8]
10023e7c:	mov    DWORD PTR fs:0x0,ecx
10023e83:	pop    ecx
10023e84:	pop    edi
10023e85:	pop    esi
10023e86:	pop    ebx
10023e87:	mov    ecx,DWORD PTR [esp+0xd0]
10023e8e:	xor    ecx,esp
10023e90:	call   0x10042f87
10023e95:	mov    esp,ebp
10023e97:	pop    ebp
10023e98:	ret    0x8
10023e9b:	push   0x0
10023e9d:	mov    eax,0x10063530
10023ea2:	call   0x10059b25
10023ea7:	lea    eax,[ebp+0xb]
10023eaa:	push   eax
10023eab:	call   0x100379b0
10023eb0:	xor    eax,eax
10023eb2:	push   eax
10023eb3:	push   eax
10023eb4:	mov    DWORD PTR [ebp-0x4],eax
10023eb7:	call   DWORD PTR ds:0x10066440
10023ebd:	push   DWORD PTR [ebp+0x8]
10023ec0:	call   0x10022a61
10023ec5:	call   DWORD PTR ds:0x10066424
10023ecb:	call   0x100379d0
10023ed0:	xor    eax,eax
10023ed2:	call   0x10059bfd
10023ed7:	ret    0x4
10023eda:	push   0x10
10023edc:	mov    eax,0x1005fb24
10023ee1:	call   0x10059bc4
10023ee6:	mov    eax,DWORD PTR [ebp+0xc]
10023ee9:	xor    ebx,ebx
10023eeb:	cmp    eax,ebx
10023eed:	jne    0x10023ef9
10023eef:	mov    eax,0x80004003
10023ef4:	jmp    0x1002400b
10023ef9:	push   0x1c
10023efb:	mov    DWORD PTR [eax],ebx
10023efd:	mov    DWORD PTR [ebp-0x18],ebx
10023f00:	mov    DWORD PTR [ebp-0x4],ebx
10023f03:	call   0x1004358e
10023f08:	cmp    eax,ebx
10023f0a:	pop    ecx
10023f0b:	je     0x10023f18
10023f0d:	mov    esi,eax
10023f0f:	call   0x10024556
10023f14:	mov    edi,eax
10023f16:	jmp    0x10023f1a
10023f18:	xor    edi,edi
10023f1a:	or     DWORD PTR [ebp-0x4],0xffffffff
10023f1e:	jmp    0x10023f2b
10023f20:	mov    eax,0x10023f26
10023f25:	ret    
10023f26:	mov    edi,DWORD PTR [ebp-0x18]
10023f29:	xor    ebx,ebx
10023f2b:	cmp    edi,ebx
10023f2d:	jne    0x10023f39
10023f2f:	mov    eax,0x8007000e
10023f34:	jmp    0x1002400b
10023f39:	xor    esi,esi
10023f3b:	mov    DWORD PTR [ebp-0x18],esi
10023f3e:	push   ebx
10023f3f:	lea    eax,[ebp-0x1c]
10023f42:	push   0x4
10023f44:	mov    DWORD PTR [ebp-0x4],0x2
10023f4b:	push   eax
10023f4c:	mov    DWORD PTR [ebp-0x1c],ebx
10023f4f:	call   0x10014404
10023f54:	add    esp,0xc
10023f57:	cmp    eax,ebx
10023f59:	jl     0x1002400b
10023f5f:	mov    ebx,DWORD PTR [ebp-0x1c]
10023f62:	cmp    ebx,0x400
10023f68:	ja     0x10023f83
10023f6a:	push   ebx
10023f6b:	call   0x10006d49
10023f70:	test   al,al
10023f72:	pop    ecx
10023f73:	je     0x10023f83
10023f75:	mov    eax,ebx
10023f77:	call   0x1004b7e0
10023f7c:	mov    DWORD PTR [ebp-0x10],esp
10023f7f:	mov    eax,esp
10023f81:	jmp    0x10023f8f
10023f83:	push   ebx
10023f84:	lea    esi,[ebp-0x18]
10023f87:	call   0x100076f6
10023f8c:	mov    esi,DWORD PTR [ebp-0x18]
10023f8f:	test   eax,eax
10023f91:	jne    0x10023faf
10023f93:	mov    eax,DWORD PTR [edi]
10023f95:	push   0x1
10023f97:	mov    ecx,edi
10023f99:	call   DWORD PTR [eax+0x1c]
10023f9c:	jmp    0x10023fa9
10023f9e:	mov    eax,esi
10023fa0:	mov    esi,DWORD PTR [esi]
10023fa2:	push   eax
10023fa3:	call   0x100435f8
10023fa8:	pop    ecx
10023fa9:	test   esi,esi
10023fab:	jne    0x10023f9e
10023fad:	jmp    0x10023f2f
10023faf:	push   0x3
10023fb1:	push   DWORD PTR [ebp+0x8]
10023fb4:	push   eax
10023fb5:	push   eax
10023fb6:	push   edi
10023fb7:	call   0x100249f9
10023fbc:	mov    ebx,eax
10023fbe:	test   ebx,ebx
10023fc0:	mov    eax,DWORD PTR [edi]
10023fc2:	jge    0x10023fde
10023fc4:	push   0x1
10023fc6:	mov    ecx,edi
10023fc8:	call   DWORD PTR [eax+0x1c]
10023fcb:	jmp    0x10023fd8
10023fcd:	mov    eax,esi
10023fcf:	mov    esi,DWORD PTR [esi]
10023fd1:	push   eax
10023fd2:	call   0x100435f8
10023fd7:	pop    ecx
10023fd8:	test   esi,esi
10023fda:	jne    0x10023fcd
10023fdc:	jmp    0x10024009
10023fde:	push   DWORD PTR [ebp+0xc]
10023fe1:	push   0x10070a68
10023fe6:	push   edi
10023fe7:	call   DWORD PTR [eax]
10023fe9:	mov    ebx,eax
10023feb:	test   ebx,ebx
10023fed:	jge    0x10024005
10023fef:	mov    eax,DWORD PTR [edi]
10023ff1:	push   0x1
10023ff3:	mov    ecx,edi
10023ff5:	call   DWORD PTR [eax+0x1c]
10023ff8:	jmp    0x10024005
10023ffa:	mov    eax,esi
10023ffc:	mov    esi,DWORD PTR [esi]
10023ffe:	push   eax
10023fff:	call   0x100435f8
10024004:	pop    ecx
10024005:	test   esi,esi
10024007:	jne    0x10023ffa
10024009:	mov    eax,ebx
1002400b:	lea    esp,[ebp-0x2c]
1002400e:	call   0x10059c20
10024013:	ret    0x8
10024016:	push   ecx
10024017:	mov    eax,ds:0x1007e030
1002401c:	xor    eax,esp
1002401e:	mov    DWORD PTR [esp],eax
10024021:	mov    eax,DWORD PTR [esp+0x10]
10024025:	test   eax,eax
10024027:	jne    0x10024030
10024029:	mov    eax,0x80004003
1002402e:	jmp    0x10024038
10024030:	and    DWORD PTR [eax],0x0
10024033:	mov    eax,0x80040200
10024038:	mov    ecx,DWORD PTR [esp]
1002403b:	xor    ecx,esp
1002403d:	call   0x10042f87
10024042:	pop    ecx
10024043:	ret    0xc
10024046:	push   0x4
10024048:	mov    eax,0x10060b6a
1002404d:	call   0x10059b25
10024052:	mov    esi,ecx
10024054:	mov    DWORD PTR [ebp-0x10],esi
10024057:	mov    eax,esi
10024059:	mov    DWORD PTR [ebp-0x4],0x2
10024060:	call   0x10020e85
10024065:	lea    eax,[esi+0x10]
10024068:	mov    BYTE PTR [ebp-0x4],0x1
1002406c:	call   0x100245f4
10024071:	mov    BYTE PTR [ebp-0x4],0x0
10024075:	mov    eax,DWORD PTR [esi+0xc]
10024078:	test   eax,eax
1002407a:	je     0x10024082
1002407c:	mov    ecx,DWORD PTR [eax]
1002407e:	push   eax
1002407f:	call   DWORD PTR [ecx+0x8]
10024082:	or     DWORD PTR [ebp-0x4],0xffffffff
10024086:	mov    esi,DWORD PTR [esi+0x8]
10024089:	test   esi,esi
1002408b:	je     0x10024093
1002408d:	mov    eax,DWORD PTR [esi]
1002408f:	push   esi
10024090:	call   DWORD PTR [eax+0x8]
10024093:	call   0x10059bfd
10024098:	ret    
10024099:	push   0x34
1002409b:	mov    eax,0x10061b6c
100240a0:	call   0x10059b8e
100240a5:	mov    eax,DWORD PTR [ebp+0x8]
100240a8:	push   eax
100240a9:	xor    ebx,ebx
100240ab:	lea    eax,[ebp-0x2c]
100240ae:	mov    edi,ecx
100240b0:	mov    DWORD PTR [ebp-0x30],ebx
100240b3:	call   0x10020d13
100240b8:	lea    eax,[ebp-0x2c]
100240bb:	push   eax
100240bc:	lea    eax,[ebp-0x38]
100240bf:	add    edi,0x10
100240c2:	push   eax
100240c3:	mov    DWORD PTR [ebp-0x4],ebx
100240c6:	call   0x10021342
100240cb:	cmp    DWORD PTR [ebp-0x38],ebx
100240ce:	mov    esi,DWORD PTR [edi+0x4]
100240d1:	je     0x100240d8
100240d3:	cmp    DWORD PTR [ebp-0x38],edi
100240d6:	je     0x100240dd
100240d8:	call   0x100434a0
100240dd:	mov    eax,DWORD PTR [ebp-0x34]
100240e0:	cmp    eax,esi
100240e2:	je     0x100240f8
100240e4:	add    eax,0xc
100240e7:	lea    ebx,[ebp-0x2c]
100240ea:	call   0x1001f166
100240ef:	test   al,al
100240f1:	jne    0x100240f8
100240f3:	lea    eax,[ebp-0x38]
100240f6:	jmp    0x10024104
100240f8:	mov    eax,DWORD PTR [edi+0x4]
100240fb:	mov    DWORD PTR [ebp-0x3c],eax
100240fe:	mov    DWORD PTR [ebp-0x40],edi
10024101:	lea    eax,[ebp-0x40]
10024104:	mov    esi,DWORD PTR [eax]
10024106:	test   esi,esi
10024108:	mov    ebx,DWORD PTR [eax+0x4]
1002410b:	mov    eax,DWORD PTR [edi+0x4]
1002410e:	mov    DWORD PTR [ebp-0x3c],eax
10024111:	je     0x10024117
10024113:	cmp    esi,edi
10024115:	je     0x1002411c
10024117:	call   0x100434a0
1002411c:	cmp    ebx,DWORD PTR [ebp-0x3c]
1002411f:	je     0x1002413a
10024121:	test   esi,esi
10024123:	jne    0x1002412a
10024125:	call   0x100434a0
1002412a:	cmp    ebx,DWORD PTR [esi+0x4]
1002412d:	jne    0x10024134
1002412f:	call   0x100434a0
10024134:	mov    eax,DWORD PTR [ebx+0x28]
10024137:	mov    DWORD PTR [ebp-0x30],eax
1002413a:	push   0x1
1002413c:	xor    ebx,ebx
1002413e:	lea    esi,[ebp-0x2c]
10024141:	call   0x10005279
10024146:	mov    eax,DWORD PTR [ebp-0x30]
10024149:	call   0x10059c11
1002414e:	ret    0x4
10024151:	jmp    DWORD PTR ds:0x100662d8
10024157:	mov    eax,DWORD PTR [esp+0x8]
1002415b:	mov    DWORD PTR [eax],0x9
10024161:	xor    eax,eax
10024163:	ret    0x8
10024166:	push   ebp
10024167:	mov    ebp,esp
10024169:	push   ecx
1002416a:	mov    ecx,DWORD PTR [ebp+0x10]
1002416d:	push   edi
1002416e:	mov    edi,ecx
10024170:	and    edi,0x2
10024173:	je     0x10024189
10024175:	mov    eax,DWORD PTR [ebp+0x18]
10024178:	test   eax,eax
1002417a:	jne    0x10024186
1002417c:	mov    eax,0x80070057
10024181:	jmp    0x1002420f
10024186:	and    DWORD PTR [eax],0x0
10024189:	mov    DWORD PTR [ebp-0x4],ecx
1002418c:	and    DWORD PTR [ebp-0x4],0x1
10024190:	je     0x1002419c
10024192:	mov    eax,DWORD PTR [ebp+0x14]
10024195:	test   eax,eax
10024197:	je     0x1002417c
10024199:	and    DWORD PTR [eax],0x0
1002419c:	mov    ecx,DWORD PTR [ebp+0x8]
1002419f:	mov    eax,DWORD PTR [ecx]
100241a1:	push   esi
100241a2:	push   DWORD PTR [ebp+0xc]
100241a5:	call   DWORD PTR [eax+0x30]
100241a8:	mov    esi,eax
100241aa:	test   esi,esi
100241ac:	jne    0x100241b5
100241ae:	mov    eax,0x8002802b
100241b3:	jmp    0x1002420e
100241b5:	test   edi,edi
100241b7:	je     0x100241fb
100241b9:	mov    eax,DWORD PTR [esi]
100241bb:	and    DWORD PTR [ebp+0x10],0x0
100241bf:	lea    ecx,[ebp+0x10]
100241c2:	push   ecx
100241c3:	push   0x1006b878
100241c8:	push   esi
100241c9:	call   DWORD PTR [eax]
100241cb:	mov    edi,eax
100241cd:	test   edi,edi
100241cf:	jl     0x100241e3
100241d1:	mov    eax,DWORD PTR [ebp+0x10]
100241d4:	test   eax,eax
100241d6:	je     0x100241f0
100241d8:	push   DWORD PTR [ebp+0x18]
100241db:	mov    ecx,DWORD PTR [eax]
100241dd:	push   eax
100241de:	call   DWORD PTR [ecx+0xc]
100241e1:	mov    edi,eax
100241e3:	mov    eax,DWORD PTR [ebp+0x10]
100241e6:	test   eax,eax
100241e8:	je     0x100241f0
100241ea:	mov    ecx,DWORD PTR [eax]
100241ec:	push   eax
100241ed:	call   DWORD PTR [ecx+0x8]
100241f0:	test   edi,edi
100241f2:	jge    0x100241fb
100241f4:	mov    eax,0x80004005
100241f9:	jmp    0x1002420e
100241fb:	cmp    DWORD PTR [ebp-0x4],0x0
100241ff:	je     0x1002420c
10024201:	mov    eax,DWORD PTR [ebp+0x14]
10024204:	mov    DWORD PTR [eax],esi
10024206:	mov    eax,DWORD PTR [esi]
10024208:	push   esi
10024209:	call   DWORD PTR [eax+0x4]
1002420c:	xor    eax,eax
1002420e:	pop    esi
1002420f:	pop    edi
10024210:	leave  
10024211:	ret    0x14
10024214:	xor    eax,eax
10024216:	ret    0x4
10024219:	mov    ecx,DWORD PTR [esp+0x4]
1002421d:	lea    eax,[ecx-0x4]
10024220:	neg    ecx
10024222:	sbb    ecx,ecx
10024224:	and    ecx,eax
10024226:	mov    eax,DWORD PTR [ecx]
10024228:	call   DWORD PTR [eax+0x34]
1002422b:	mov    ecx,DWORD PTR [esp+0x8]
1002422f:	mov    DWORD PTR [ecx],eax
10024231:	xor    eax,eax
10024233:	ret    0x8
10024236:	push   edi
10024237:	mov    edi,DWORD PTR [esp+0x14]
1002423b:	mov    ecx,0x1007f97c
10024240:	call   0x10010534
10024245:	pop    edi
10024246:	ret    0x10
10024249:	push   DWORD PTR [esp+0x18]
1002424d:	mov    eax,0x1007f97c
10024252:	push   DWORD PTR [esp+0x14]
10024256:	push   DWORD PTR [esp+0x14]
1002425a:	call   0x10010562
1002425f:	ret    0x18
10024262:	push   ebp
10024263:	mov    ebp,esp
10024265:	push   DWORD PTR [ebp+0x28]
10024268:	mov    eax,0x1007f97c
1002426d:	push   DWORD PTR [ebp+0x24]
10024270:	push   DWORD PTR [ebp+0x20]
10024273:	push   DWORD PTR [ebp+0x1c]
10024276:	push   DWORD PTR [ebp+0x18]
10024279:	push   DWORD PTR [ebp+0xc]
1002427c:	push   DWORD PTR [ebp+0x8]
1002427f:	call   0x10010605
10024284:	pop    ebp
10024285:	ret    0x24
10024288:	push   0x4
1002428a:	mov    eax,0x100628cd
1002428f:	call   0x10059b25
10024294:	mov    eax,DWORD PTR [ebp+0x8]
10024297:	call   0x10004704
1002429c:	push   0x1006cd08
100242a1:	lea    ecx,[ebp-0x10]
100242a4:	push   ecx
100242a5:	mov    ecx,eax
100242a7:	call   0x10006c91
100242ac:	and    DWORD PTR [ebp-0x4],0x0
100242b0:	push   DWORD PTR [ebp-0x10]
100242b3:	push   DWORD PTR [ebp+0x8]
100242b6:	call   0x10024629
100242bb:	test   eax,eax
100242bd:	mov    eax,DWORD PTR [ebp-0x10]
100242c0:	setne  bl
100242c3:	add    eax,0xfffffff0
100242c6:	call   0x1000206f
100242cb:	mov    al,bl
100242cd:	call   0x10059bfd
100242d2:	ret    
100242d3:	push   edi
100242d4:	mov    edi,DWORD PTR [esp+0x14]
100242d8:	mov    ecx,0x1007f998
100242dd:	call   0x10010534
100242e2:	pop    edi
100242e3:	ret    0x10
100242e6:	push   DWORD PTR [esp+0x18]
100242ea:	mov    eax,0x1007f998
100242ef:	push   DWORD PTR [esp+0x14]
100242f3:	push   DWORD PTR [esp+0x14]
100242f7:	call   0x10010562
100242fc:	ret    0x18
100242ff:	push   ebp
10024300:	mov    ebp,esp
10024302:	push   DWORD PTR [ebp+0x28]
10024305:	mov    eax,0x1007f998
1002430a:	push   DWORD PTR [ebp+0x24]
1002430d:	push   DWORD PTR [ebp+0x20]
10024310:	push   DWORD PTR [ebp+0x1c]
10024313:	push   DWORD PTR [ebp+0x18]
10024316:	push   DWORD PTR [ebp+0xc]
10024319:	push   DWORD PTR [ebp+0x8]
1002431c:	call   0x10010605
10024321:	pop    ebp
10024322:	ret    0x24
10024325:	push   edi
10024326:	mov    edi,DWORD PTR [esp+0x14]
1002432a:	mov    ecx,0x1007f9b4
1002432f:	call   0x10010534
10024334:	pop    edi
10024335:	ret    0x10
10024338:	push   DWORD PTR [esp+0x18]
1002433c:	mov    eax,0x1007f9b4
10024341:	push   DWORD PTR [esp+0x14]
10024345:	push   DWORD PTR [esp+0x14]
10024349:	call   0x10010562
1002434e:	ret    0x18
10024351:	push   ebp
10024352:	mov    ebp,esp
10024354:	push   DWORD PTR [ebp+0x28]
10024357:	mov    eax,0x1007f9b4
1002435c:	push   DWORD PTR [ebp+0x24]
1002435f:	push   DWORD PTR [ebp+0x20]
10024362:	push   DWORD PTR [ebp+0x1c]
10024365:	push   DWORD PTR [ebp+0x18]
10024368:	push   DWORD PTR [ebp+0xc]
1002436b:	push   DWORD PTR [ebp+0x8]
1002436e:	call   0x10010605
10024373:	pop    ebp
10024374:	ret    0x24
10024377:	push   esi
10024378:	mov    esi,DWORD PTR [eax]
1002437a:	test   esi,esi
1002437c:	je     0x10024391
1002437e:	mov    eax,DWORD PTR [esi]
10024380:	test   eax,eax
10024382:	je     0x1002438a
10024384:	mov    ecx,DWORD PTR [eax]
10024386:	push   eax
10024387:	call   DWORD PTR [ecx+0x8]
1002438a:	push   esi
1002438b:	call   0x10042f82
10024390:	pop    ecx
10024391:	pop    esi
10024392:	ret    
10024393:	push   esi
10024394:	mov    esi,ecx
10024396:	mov    DWORD PTR [esi],0x100716d0
1002439c:	mov    DWORD PTR [esi+0x4],0xc0000001
100243a3:	mov    ecx,DWORD PTR ds:0x10080c04
100243a9:	mov    eax,DWORD PTR [ecx]
100243ab:	call   DWORD PTR [eax+0x8]
100243ae:	mov    esi,DWORD PTR [esi+0xc]
100243b1:	test   esi,esi
100243b3:	je     0x100243bb
100243b5:	mov    eax,DWORD PTR [esi]
100243b7:	push   esi
100243b8:	call   DWORD PTR [eax+0x8]
100243bb:	pop    esi
100243bc:	ret    
100243bd:	mov    ecx,DWORD PTR [esp+0x4]
100243c1:	dec    DWORD PTR [ecx+0x4]
100243c4:	push   esi
100243c5:	mov    esi,DWORD PTR [ecx+0x4]
100243c8:	jne    0x100243d5
100243ca:	test   ecx,ecx
100243cc:	je     0x100243d5
100243ce:	mov    eax,DWORD PTR [ecx]
100243d0:	push   0x1
100243d2:	call   DWORD PTR [eax+0x38]
100243d5:	mov    eax,esi
100243d7:	pop    esi
100243d8:	ret    0x4
100243db:	push   ebx
100243dc:	push   DWORD PTR [esp+0xc]
100243e0:	mov    ebx,DWORD PTR [esp+0x14]
100243e4:	push   DWORD PTR [esp+0xc]
100243e8:	mov    eax,0x10070a98
100243ed:	call   0x10010413
100243f2:	pop    ebx
100243f3:	ret    0xc
100243f6:	push   esi
100243f7:	mov    esi,ecx
100243f9:	mov    DWORD PTR [esi],0x10071710
100243ff:	mov    DWORD PTR [esi+0x4],0xc0000001
10024406:	mov    ecx,DWORD PTR ds:0x10080c04
1002440c:	mov    eax,DWORD PTR [ecx]
1002440e:	call   DWORD PTR [eax+0x8]
10024411:	call   0x10024516
10024416:	pop    esi
10024417:	ret    
10024418:	mov    ecx,DWORD PTR [esp+0x4]
1002441c:	dec    DWORD PTR [ecx+0x4]
1002441f:	push   esi
10024420:	mov    esi,DWORD PTR [ecx+0x4]
10024423:	jne    0x10024430
10024425:	test   ecx,ecx
10024427:	je     0x10024430
10024429:	mov    eax,DWORD PTR [ecx]
1002442b:	push   0x1
1002442d:	call   DWORD PTR [eax+0x48]
10024430:	mov    eax,esi
10024432:	pop    esi
10024433:	ret    0x4
10024436:	push   ebx
10024437:	push   DWORD PTR [esp+0xc]
1002443b:	mov    ebx,DWORD PTR [esp+0x14]
1002443f:	push   DWORD PTR [esp+0xc]
10024443:	mov    eax,0x10070abc
10024448:	call   0x10010413
1002444d:	pop    ebx
1002444e:	ret    0xc
10024451:	push   esi
10024452:	lea    esi,[ecx+0x8]
10024455:	mov    DWORD PTR [ecx],0x10071610
1002445b:	mov    DWORD PTR [ecx+0x4],0x10071620
10024462:	mov    DWORD PTR [esi],0x10071634
10024468:	mov    DWORD PTR [ecx+0xc],0x1007166c
1002446f:	mov    DWORD PTR [ecx+0x24],0x10071680
10024476:	mov    DWORD PTR [ecx+0x28],0xc0000001
1002447d:	mov    ecx,DWORD PTR ds:0x10080c04
10024483:	mov    eax,DWORD PTR [ecx]
10024485:	call   DWORD PTR [eax+0x8]
10024488:	mov    ecx,esi
1002448a:	pop    esi
1002448b:	jmp    0x10024046
10024490:	mov    eax,DWORD PTR [esp+0x4]
10024494:	inc    DWORD PTR [eax+0x28]
10024497:	mov    eax,DWORD PTR [eax+0x28]
1002449a:	ret    0x4
1002449d:	mov    eax,DWORD PTR [esp+0x4]
100244a1:	dec    DWORD PTR [eax+0x28]
100244a4:	push   esi
100244a5:	mov    esi,DWORD PTR [eax+0x28]
100244a8:	jne    0x100244b8
100244aa:	test   eax,eax
100244ac:	je     0x100244b8
100244ae:	lea    ecx,[eax+0x8]
100244b1:	mov    eax,DWORD PTR [ecx]
100244b3:	push   0x1
100244b5:	call   DWORD PTR [eax+0x2c]
100244b8:	mov    eax,esi
100244ba:	pop    esi
100244bb:	ret    0x4
100244be:	push   ebx
100244bf:	push   DWORD PTR [esp+0xc]
100244c3:	mov    ebx,DWORD PTR [esp+0x14]
100244c7:	push   DWORD PTR [esp+0xc]
100244cb:	mov    eax,0x10070560
100244d0:	call   0x10010413
100244d5:	pop    ebx
100244d6:	ret    0xc
100244d9:	jmp    0x100245f4
100244de:	push   esi
100244df:	mov    esi,ecx
100244e1:	call   0x10024393
100244e6:	test   BYTE PTR [esp+0x8],0x1
100244eb:	je     0x100244f4
100244ed:	push   esi
100244ee:	call   0x10042f82
100244f3:	pop    ecx
100244f4:	mov    eax,esi
100244f6:	pop    esi
100244f7:	ret    0x4
100244fa:	push   esi
100244fb:	mov    esi,ecx
100244fd:	call   0x100243f6
10024502:	test   BYTE PTR [esp+0x8],0x1
10024507:	je     0x10024510
10024509:	push   esi
1002450a:	call   0x10042f82
1002450f:	pop    ecx
10024510:	mov    eax,esi
10024512:	pop    esi
10024513:	ret    0x4
10024516:	mov    eax,DWORD PTR [esi+0x38]
10024519:	test   eax,eax
1002451b:	je     0x10024523
1002451d:	mov    ecx,DWORD PTR [eax]
1002451f:	push   eax
10024520:	call   DWORD PTR [ecx+0x8]
10024523:	push   edi
10024524:	lea    edi,[esi+0x30]
10024527:	call   0x100025b0
1002452c:	push   0x0
1002452e:	push   0x1
10024530:	lea    ecx,[esi+0x8]
10024533:	call   0x100012eb
10024538:	pop    edi
10024539:	ret    
1002453a:	push   esi
1002453b:	mov    esi,ecx
1002453d:	call   0x10024451
10024542:	test   BYTE PTR [esp+0x8],0x1
10024547:	je     0x10024550
10024549:	push   esi
1002454a:	call   0x10042f82
1002454f:	pop    ecx
10024550:	mov    eax,esi
10024552:	pop    esi
10024553:	ret    0x4
10024556:	xor    eax,eax
10024558:	mov    DWORD PTR [esi+0x4],eax
1002455b:	mov    DWORD PTR [esi+0x10],eax
1002455e:	mov    DWORD PTR [esi+0xc],eax
10024561:	mov    DWORD PTR [esi+0x8],eax
10024564:	mov    DWORD PTR [esi+0x14],eax
10024567:	mov    DWORD PTR [esi+0x18],eax
1002456a:	mov    DWORD PTR [esi],0x1007175c
10024570:	mov    ecx,DWORD PTR ds:0x10080c04
10024576:	mov    eax,DWORD PTR [ecx]
10024578:	call   DWORD PTR [eax+0x4]
1002457b:	mov    eax,esi
1002457d:	ret    
1002457e:	push   esi
1002457f:	mov    esi,ecx
10024581:	mov    DWORD PTR [esi],0x1007175c
10024587:	mov    DWORD PTR [esi+0x18],0xc0000001
1002458e:	mov    ecx,DWORD PTR ds:0x10080c04
10024594:	mov    eax,DWORD PTR [ecx]
10024596:	call   DWORD PTR [eax+0x8]
10024599:	mov    ecx,esi
1002459b:	pop    esi
1002459c:	jmp    0x1002481a
100245a1:	mov    eax,DWORD PTR [esp+0x4]
100245a5:	inc    DWORD PTR [eax+0x18]
100245a8:	mov    eax,DWORD PTR [eax+0x18]
100245ab:	ret    0x4
100245ae:	push   ebx
100245af:	push   DWORD PTR [esp+0xc]
100245b3:	mov    ebx,DWORD PTR [esp+0x14]
100245b7:	push   DWORD PTR [esp+0xc]
100245bb:	mov    eax,0x10071534
100245c0:	call   0x10010413
100245c5:	pop    ebx
100245c6:	ret    0xc
100245c9:	mov    eax,DWORD PTR [esp+0x4]
100245cd:	mov    ecx,DWORD PTR [eax+0x8]
100245d0:	mov    DWORD PTR [eax+0x10],ecx
100245d3:	xor    eax,eax
100245d5:	ret    0x4
100245d8:	push   esi
100245d9:	mov    esi,ecx
100245db:	call   0x1002457e
100245e0:	test   BYTE PTR [esp+0x8],0x1
100245e5:	je     0x100245ee
100245e7:	push   esi
100245e8:	call   0x10042f82
100245ed:	pop    ecx
100245ee:	mov    eax,esi
100245f0:	pop    esi
100245f1:	ret    0x4
100245f4:	push   ebp
100245f5:	mov    ebp,esp
100245f7:	and    esp,0xfffffff8
100245fa:	push   ecx
100245fb:	push   ecx
100245fc:	push   ebx
100245fd:	push   edi
100245fe:	mov    edi,eax
10024600:	mov    eax,DWORD PTR [edi+0x4]
10024603:	mov    ecx,DWORD PTR [eax]
10024605:	push   eax
10024606:	push   edi
10024607:	push   ecx
10024608:	push   edi
10024609:	lea    ebx,[esp+0x18]
1002460d:	call   0x10021296
10024612:	push   DWORD PTR [edi+0x4]
10024615:	call   0x10042f82
1002461a:	and    DWORD PTR [edi+0x4],0x0
1002461e:	and    DWORD PTR [edi+0x8],0x0
10024622:	pop    ecx
10024623:	pop    edi
10024624:	pop    ebx
10024625:	mov    esp,ebp
10024627:	pop    ebp
10024628:	ret    
10024629:	cmp    DWORD PTR [esp+0x8],0x0
1002462e:	jne    0x1002463a
10024630:	push   0x80004005
10024635:	call   0x10001f33
1002463a:	mov    eax,DWORD PTR [esp+0x4]
1002463e:	mov    eax,DWORD PTR [eax]
10024640:	push   DWORD PTR [esp+0x8]
10024644:	push   eax
10024645:	call   0x100467e4
1002464a:	pop    ecx
1002464b:	pop    ecx
1002464c:	ret    0x8
1002464f:	push   0x30
10024651:	call   0x1004358e
10024656:	xor    edx,edx
10024658:	cmp    eax,edx
1002465a:	pop    ecx
1002465b:	je     0x1002465f
1002465d:	mov    DWORD PTR [eax],edx
1002465f:	lea    ecx,[eax+0x4]
10024662:	cmp    ecx,edx
10024664:	je     0x10024668
10024666:	mov    DWORD PTR [ecx],edx
10024668:	lea    ecx,[eax+0x8]
1002466b:	cmp    ecx,edx
1002466d:	je     0x10024671
1002466f:	mov    DWORD PTR [ecx],edx
10024671:	mov    BYTE PTR [eax+0x2c],0x1
10024675:	mov    BYTE PTR [eax+0x2d],dl
10024678:	ret    
10024679:	push   0xc
1002467b:	mov    eax,0x10061b49
10024680:	call   0x10059b58
10024685:	mov    edi,DWORD PTR [ebp+0x8]
10024688:	xor    ebx,ebx
1002468a:	cmp    edi,ebx
1002468c:	jne    0x10024695
1002468e:	mov    eax,0x80004003
10024693:	jmp    0x10024703
10024695:	push   0x2c
10024697:	mov    DWORD PTR [edi],ebx
10024699:	mov    DWORD PTR [ebp-0x14],0x8007000e
100246a0:	mov    DWORD PTR [ebp-0x18],ebx
100246a3:	mov    DWORD PTR [ebp-0x4],ebx
100246a6:	call   0x1004358e
100246ab:	mov    esi,eax
100246ad:	cmp    esi,ebx
100246af:	pop    ecx
100246b0:	je     0x100246e6
100246b2:	call   0x10022601
100246b7:	mov    DWORD PTR [esi],0x10071610
100246bd:	mov    DWORD PTR [esi+0x4],0x10071620
100246c4:	mov    DWORD PTR [esi+0x8],0x10071634
100246cb:	mov    DWORD PTR [esi+0xc],0x1007166c
100246d2:	mov    DWORD PTR [esi+0x24],0x10071680
100246d9:	mov    ecx,DWORD PTR ds:0x10080c04
100246df:	mov    eax,DWORD PTR [ecx]
100246e1:	call   DWORD PTR [eax+0x4]
100246e4:	jmp    0x100246f6
100246e6:	xor    esi,esi
100246e8:	jmp    0x100246f6
100246ea:	mov    eax,0x100246f0
100246ef:	ret    
100246f0:	mov    edi,DWORD PTR [ebp+0x8]
100246f3:	mov    esi,DWORD PTR [ebp-0x18]
100246f6:	test   esi,esi
100246f8:	je     0x100246fe
100246fa:	and    DWORD PTR [ebp-0x14],0x0
100246fe:	mov    eax,DWORD PTR [ebp-0x14]
10024701:	mov    DWORD PTR [edi],esi
10024703:	call   0x10059bfd
10024708:	ret    0x4
1002470b:	push   0xc
1002470d:	mov    eax,0x1005fb01
10024712:	call   0x10059b58
10024717:	mov    ebx,DWORD PTR [ebp+0x8]
1002471a:	xor    edi,edi
1002471c:	cmp    ebx,edi
1002471e:	jne    0x10024727
10024720:	mov    eax,0x80004003
10024725:	jmp    0x10024780
10024727:	push   0x10
10024729:	mov    DWORD PTR [ebx],edi
1002472b:	mov    DWORD PTR [ebp-0x14],0x8007000e
10024732:	mov    DWORD PTR [ebp-0x4],edi
10024735:	call   0x1004358e
1002473a:	mov    esi,eax
1002473c:	cmp    esi,edi
1002473e:	pop    ecx
1002473f:	je     0x1002475d
10024741:	mov    DWORD PTR [esi+0x4],edi
10024744:	mov    DWORD PTR [esi+0x8],edi
10024747:	mov    DWORD PTR [esi+0xc],edi
1002474a:	mov    DWORD PTR [esi],0x100716d0
10024750:	mov    ecx,DWORD PTR ds:0x10080c04
10024756:	mov    eax,DWORD PTR [ecx]
10024758:	call   DWORD PTR [eax+0x4]
1002475b:	jmp    0x1002476e
1002475d:	xor    esi,esi
1002475f:	jmp    0x1002476e
10024761:	mov    eax,0x10024767
10024766:	ret    
10024767:	mov    ebx,DWORD PTR [ebp+0x8]
1002476a:	xor    edi,edi
1002476c:	mov    esi,edi
1002476e:	cmp    esi,edi
10024770:	je     0x1002477b
10024772:	inc    DWORD PTR [esi+0x4]
10024775:	dec    DWORD PTR [esi+0x4]
10024778:	mov    DWORD PTR [ebp-0x14],edi
1002477b:	mov    eax,DWORD PTR [ebp-0x14]
1002477e:	mov    DWORD PTR [ebx],esi
10024780:	call   0x10059bfd
10024785:	ret    0x4
10024788:	push   0xc
1002478a:	mov    eax,0x10060103
1002478f:	call   0x10059b58
10024794:	mov    eax,DWORD PTR [ebp+0x8]
10024797:	xor    ebx,ebx
10024799:	cmp    eax,ebx
1002479b:	jne    0x100247a4
1002479d:	mov    eax,0x80004003
100247a2:	jmp    0x10024812
100247a4:	push   0x3c
100247a6:	mov    DWORD PTR [eax],ebx
100247a8:	mov    DWORD PTR [ebp-0x14],0x8007000e
100247af:	mov    DWORD PTR [ebp-0x4],ebx
100247b2:	call   0x1004358e
100247b7:	mov    edi,eax
100247b9:	cmp    edi,ebx
100247bb:	pop    ecx
100247bc:	je     0x100247ef
100247be:	lea    esi,[edi+0x8]
100247c1:	mov    DWORD PTR [edi+0x4],ebx
100247c4:	call   0x100040d0
100247c9:	or     DWORD PTR [edi+0x28],0xffffffff
100247cd:	mov    DWORD PTR [edi+0x24],ebx
100247d0:	mov    BYTE PTR [edi+0x2c],bl
100247d3:	mov    DWORD PTR [edi+0x30],ebx
100247d6:	mov    DWORD PTR [edi+0x34],ebx
100247d9:	mov    DWORD PTR [edi+0x38],ebx
100247dc:	mov    DWORD PTR [edi],0x10071710
100247e2:	mov    ecx,DWORD PTR ds:0x10080c04
100247e8:	mov    eax,DWORD PTR [ecx]
100247ea:	call   DWORD PTR [eax+0x4]
100247ed:	jmp    0x100247fd
100247ef:	xor    edi,edi
100247f1:	jmp    0x100247fd
100247f3:	mov    eax,0x100247f9
100247f8:	ret    
100247f9:	xor    ebx,ebx
100247fb:	mov    edi,ebx
100247fd:	cmp    edi,ebx
100247ff:	je     0x1002480a
10024801:	inc    DWORD PTR [edi+0x4]
10024804:	dec    DWORD PTR [edi+0x4]
10024807:	mov    DWORD PTR [ebp-0x14],ebx
1002480a:	mov    eax,DWORD PTR [ebp+0x8]
1002480d:	mov    DWORD PTR [eax],edi
1002480f:	mov    eax,DWORD PTR [ebp-0x14]
10024812:	call   0x10059bfd
10024817:	ret    0x4
1002481a:	push   0x4
1002481c:	mov    eax,0x1005f6c4
10024821:	call   0x10059b25
10024826:	mov    esi,ecx
10024828:	mov    DWORD PTR [ebp-0x10],esi
1002482b:	and    DWORD PTR [ebp-0x4],0x0
1002482f:	test   BYTE PTR [esi+0x14],0x2
10024833:	je     0x10024857
10024835:	mov    edi,DWORD PTR [esi+0x8]
10024838:	jmp    0x10024849
1002483a:	mov    eax,DWORD PTR [edi]
1002483c:	test   eax,eax
1002483e:	je     0x10024846
10024840:	mov    ecx,DWORD PTR [eax]
10024842:	push   eax
10024843:	call   DWORD PTR [ecx+0x8]
10024846:	add    edi,0x4
10024849:	cmp    edi,DWORD PTR [esi+0xc]
1002484c:	jne    0x1002483a
1002484e:	push   DWORD PTR [esi+0x8]
10024851:	call   0x100434b0
10024856:	pop    ecx
10024857:	or     DWORD PTR [ebp-0x4],0xffffffff
1002485b:	mov    esi,DWORD PTR [esi+0x4]
1002485e:	test   esi,esi
10024860:	je     0x10024868
10024862:	mov    eax,DWORD PTR [esi]
10024864:	push   esi
10024865:	call   DWORD PTR [eax+0x8]
10024868:	call   0x10059bfd
1002486d:	ret    
1002486e:	push   ebp
1002486f:	mov    ebp,esp
10024871:	mov    edx,DWORD PTR [ebp+0x14]
10024874:	xor    ecx,ecx
10024876:	cmp    edx,ecx
10024878:	je     0x1002487c
1002487a:	mov    DWORD PTR [edx],ecx
1002487c:	push   esi
1002487d:	push   edi
1002487e:	mov    edi,DWORD PTR [ebp+0xc]
10024881:	cmp    edi,ecx
10024883:	jne    0x1002488f
10024885:	mov    eax,0x80070057
1002488a:	jmp    0x10024933
1002488f:	cmp    DWORD PTR [ebp+0x10],ecx
10024892:	push   ebx
10024893:	je     0x1002492d
10024899:	xor    ebx,ebx
1002489b:	inc    ebx
1002489c:	cmp    edi,ebx
1002489e:	je     0x100248a8
100248a0:	cmp    edx,ecx
100248a2:	je     0x1002492d
100248a8:	mov    esi,DWORD PTR [ebp+0x8]
100248ab:	cmp    DWORD PTR [esi+0x8],ecx
100248ae:	je     0x10024926
100248b0:	mov    eax,DWORD PTR [esi+0xc]
100248b3:	cmp    eax,ecx
100248b5:	je     0x10024926
100248b7:	mov    ecx,DWORD PTR [esi+0x10]
100248ba:	test   ecx,ecx
100248bc:	je     0x10024926
100248be:	and    DWORD PTR [ebp+0xc],0x0
100248c2:	sub    eax,ecx
100248c4:	sar    eax,0x2
100248c7:	cmp    edi,eax
100248c9:	jbe    0x100248ce
100248cb:	mov    DWORD PTR [ebp+0xc],ebx
100248ce:	jb     0x100248d2
100248d0:	mov    edi,eax
100248d2:	test   edx,edx
100248d4:	je     0x100248d8
100248d6:	mov    DWORD PTR [edx],edi
100248d8:	mov    ebx,DWORD PTR [ebp+0x10]
100248db:	jmp    0x100248f6
100248dd:	mov    eax,DWORD PTR [esi+0x10]
100248e0:	mov    ecx,ebx
100248e2:	dec    edi
100248e3:	call   0x10024af1
100248e8:	test   eax,eax
100248ea:	mov    DWORD PTR [ebp+0x8],eax
100248ed:	jl     0x100248ff
100248ef:	add    ebx,0x4
100248f2:	add    DWORD PTR [esi+0x10],0x4
100248f6:	test   edi,edi
100248f8:	jne    0x100248dd
100248fa:	mov    eax,DWORD PTR [ebp+0xc]
100248fd:	jmp    0x10024932
100248ff:	mov    esi,DWORD PTR [ebp+0x10]
10024902:	jmp    0x10024913
10024904:	mov    eax,DWORD PTR [esi]
10024906:	test   eax,eax
10024908:	je     0x10024910
1002490a:	mov    ecx,DWORD PTR [eax]
1002490c:	push   eax
1002490d:	call   DWORD PTR [ecx+0x8]
10024910:	add    esi,0x4
10024913:	cmp    esi,ebx
10024915:	jb     0x10024904
10024917:	mov    eax,DWORD PTR [ebp+0x14]
1002491a:	test   eax,eax
1002491c:	je     0x10024921
1002491e:	and    DWORD PTR [eax],0x0
10024921:	mov    eax,DWORD PTR [ebp+0x8]
10024924:	jmp    0x10024932
10024926:	mov    eax,0x80004005
1002492b:	jmp    0x10024932
1002492d:	mov    eax,0x80004003
10024932:	pop    ebx
10024933:	pop    edi
10024934:	pop    esi
10024935:	pop    ebp
10024936:	ret    0x10
10024939:	push   0x8
1002493b:	mov    eax,0x10060137
10024940:	call   0x10059b25
10024945:	mov    eax,DWORD PTR [ebp+0xc]
10024948:	xor    edi,edi
1002494a:	cmp    eax,edi
1002494c:	mov    DWORD PTR [ebp-0x10],edi
1002494f:	mov    ebx,0x80004003
10024954:	je     0x100249ef
1002495a:	mov    DWORD PTR [eax],edi
1002495c:	lea    eax,[ebp-0x14]
1002495f:	push   eax
10024960:	call   0x10024b14
10024965:	mov    ebx,eax
10024967:	cmp    ebx,edi
10024969:	jl     0x100249ef
1002496f:	mov    esi,DWORD PTR [ebp+0x8]
10024972:	test   BYTE PTR [esi+0x14],0x2
10024976:	je     0x10024990
10024978:	mov    eax,DWORD PTR [esi]
1002497a:	push   esi
1002497b:	mov    DWORD PTR [ebp+0x8],esi
1002497e:	call   DWORD PTR [eax+0x4]
10024981:	mov    DWORD PTR [ebp-0x4],edi
10024984:	lea    eax,[ebp+0x8]
10024987:	mov    DWORD PTR [ebp-0x10],0x1
1002498e:	jmp    0x10024993
10024990:	lea    eax,[esi+0x4]
10024993:	mov    eax,DWORD PTR [eax]
10024995:	push   edi
10024996:	mov    edi,DWORD PTR [ebp-0x14]
10024999:	push   eax
1002499a:	push   DWORD PTR [esi+0xc]
1002499d:	push   DWORD PTR [esi+0x8]
100249a0:	push   edi
100249a1:	call   0x100249f9
100249a6:	or     DWORD PTR [ebp-0x4],0xffffffff
100249aa:	test   BYTE PTR [ebp-0x10],0x1
100249ae:	mov    ebx,eax
100249b0:	je     0x100249bf
100249b2:	mov    eax,DWORD PTR [ebp+0x8]
100249b5:	test   eax,eax
100249b7:	je     0x100249bf
100249b9:	mov    ecx,DWORD PTR [eax]
100249bb:	push   eax
100249bc:	call   DWORD PTR [ecx+0x8]
100249bf:	test   ebx,ebx
100249c1:	jl     0x100249e2
100249c3:	mov    eax,DWORD PTR [esi+0x10]
100249c6:	mov    ebx,DWORD PTR [ebp+0xc]
100249c9:	push   0x10070a68
100249ce:	mov    DWORD PTR [edi+0x10],eax
100249d1:	push   edi
100249d2:	mov    eax,0x10071534
100249d7:	call   0x10010413
100249dc:	mov    ebx,eax
100249de:	test   ebx,ebx
100249e0:	jge    0x100249ef
100249e2:	test   edi,edi
100249e4:	je     0x100249ef
100249e6:	mov    eax,DWORD PTR [edi]
100249e8:	push   0x1
100249ea:	mov    ecx,edi
100249ec:	call   DWORD PTR [eax+0x1c]
100249ef:	mov    eax,ebx
100249f1:	call   0x10059bfd
100249f6:	ret    0x8
100249f9:	push   0x4
100249fb:	mov    eax,0x1005f8ec
10024a00:	call   0x10059b58
10024a05:	mov    esi,DWORD PTR [ebp+0x10]
10024a08:	mov    ebx,DWORD PTR [ebp+0x8]
10024a0b:	cmp    DWORD PTR [ebp+0x18],0x3
10024a0f:	jne    0x10024ac3
10024a15:	and    DWORD PTR [ebp-0x4],0x0
10024a19:	mov    eax,esi
10024a1b:	sub    eax,DWORD PTR [ebp+0xc]
10024a1e:	xor    ecx,ecx
10024a20:	push   0x4
10024a22:	sar    eax,0x2
10024a25:	pop    edx
10024a26:	mul    edx
10024a28:	seto   cl
10024a2b:	neg    ecx
10024a2d:	or     ecx,eax
10024a2f:	push   ecx
10024a30:	call   0x10043811
10024a35:	or     DWORD PTR [ebp-0x4],0xffffffff
10024a39:	pop    ecx
10024a3a:	mov    DWORD PTR [ebx+0x8],eax
10024a3d:	jmp    0x10024a4b
10024a3f:	mov    eax,0x10024a45
10024a44:	ret    
10024a45:	mov    ebx,DWORD PTR [ebp+0x8]
10024a48:	mov    esi,DWORD PTR [ebp+0x10]
10024a4b:	mov    eax,DWORD PTR [ebx+0x8]
10024a4e:	test   eax,eax
10024a50:	mov    DWORD PTR [ebx+0x10],eax
10024a53:	jne    0x10024a5f
10024a55:	mov    eax,0x8007000e
10024a5a:	jmp    0x10024ae9
10024a5f:	mov    edi,DWORD PTR [ebp+0xc]
10024a62:	jmp    0x10024a7c
10024a64:	mov    ecx,DWORD PTR [ebx+0x10]
10024a67:	mov    eax,edi
10024a69:	call   0x10024af1
10024a6e:	test   eax,eax
10024a70:	mov    DWORD PTR [ebp+0x8],eax
10024a73:	jl     0x10024a91
10024a75:	add    DWORD PTR [ebx+0x10],0x4
10024a79:	add    edi,0x4
10024a7c:	cmp    edi,esi
10024a7e:	jne    0x10024a64
10024a80:	sub    esi,DWORD PTR [ebp+0xc]
10024a83:	mov    eax,DWORD PTR [ebx+0x8]
10024a86:	sar    esi,0x2
10024a89:	lea    eax,[eax+esi*4]
10024a8c:	mov    DWORD PTR [ebx+0xc],eax
10024a8f:	jmp    0x10024acc
10024a91:	mov    esi,DWORD PTR [ebx+0x8]
10024a94:	jmp    0x10024aa5
10024a96:	mov    eax,DWORD PTR [esi]
10024a98:	test   eax,eax
10024a9a:	je     0x10024aa2
10024a9c:	mov    ecx,DWORD PTR [eax]
10024a9e:	push   eax
10024a9f:	call   DWORD PTR [ecx+0x8]
10024aa2:	add    esi,0x4
10024aa5:	cmp    esi,DWORD PTR [ebx+0x10]
10024aa8:	jb     0x10024a96
10024aaa:	push   DWORD PTR [ebx+0x8]
10024aad:	call   0x100434b0
10024ab2:	xor    eax,eax
10024ab4:	mov    DWORD PTR [ebx+0x10],eax
10024ab7:	mov    DWORD PTR [ebx+0xc],eax
10024aba:	mov    DWORD PTR [ebx+0x8],eax
10024abd:	mov    eax,DWORD PTR [ebp+0x8]
10024ac0:	pop    ecx
10024ac1:	jmp    0x10024ae9
10024ac3:	mov    eax,DWORD PTR [ebp+0xc]
10024ac6:	mov    DWORD PTR [ebx+0x8],eax
10024ac9:	mov    DWORD PTR [ebx+0xc],esi
10024acc:	mov    edi,DWORD PTR [ebp+0x14]
10024acf:	lea    esi,[ebx+0x4]
10024ad2:	cmp    DWORD PTR [esi],edi
10024ad4:	je     0x10024adb
10024ad6:	call   0x1000777b
10024adb:	mov    eax,DWORD PTR [ebx+0x8]
10024ade:	mov    DWORD PTR [ebx+0x10],eax
10024ae1:	mov    eax,DWORD PTR [ebp+0x18]
10024ae4:	mov    DWORD PTR [ebx+0x14],eax
10024ae7:	xor    eax,eax
10024ae9:	call   0x10059bfd
10024aee:	ret    0x14
10024af1:	test   ecx,ecx
10024af3:	je     0x10024af9
10024af5:	test   eax,eax
10024af7:	jne    0x10024b03
10024af9:	push   0x80004005
10024afe:	call   0x10001f33
10024b03:	mov    eax,DWORD PTR [eax]
10024b05:	test   eax,eax
10024b07:	mov    DWORD PTR [ecx],eax
10024b09:	je     0x10024b11
10024b0b:	mov    ecx,DWORD PTR [eax]
10024b0d:	push   eax
10024b0e:	call   DWORD PTR [ecx+0x4]
10024b11:	xor    eax,eax
10024b13:	ret    
10024b14:	push   0xc
10024b16:	mov    eax,0x1005fae6
10024b1b:	call   0x10059b58
10024b20:	mov    edi,DWORD PTR [ebp+0x8]
10024b23:	xor    esi,esi
10024b25:	cmp    edi,esi
10024b27:	jne    0x10024b30
10024b29:	mov    eax,0x80004003
10024b2e:	jmp    0x10024b71
10024b30:	push   0x1c
10024b32:	mov    DWORD PTR [edi],esi
10024b34:	mov    DWORD PTR [ebp-0x14],0x8007000e
10024b3b:	mov    DWORD PTR [ebp-0x18],esi
10024b3e:	mov    DWORD PTR [ebp-0x4],esi
10024b41:	call   0x1004358e
10024b46:	cmp    eax,esi
10024b48:	pop    ecx
10024b49:	je     0x10024b54
10024b4b:	mov    esi,eax
10024b4d:	call   0x10024556
10024b52:	jmp    0x10024b64
10024b54:	xor    eax,eax
10024b56:	jmp    0x10024b64
10024b58:	mov    eax,0x10024b5e
10024b5d:	ret    
10024b5e:	mov    edi,DWORD PTR [ebp+0x8]
10024b61:	mov    eax,DWORD PTR [ebp-0x18]
10024b64:	test   eax,eax
10024b66:	je     0x10024b6c
10024b68:	and    DWORD PTR [ebp-0x14],0x0
10024b6c:	mov    DWORD PTR [edi],eax
10024b6e:	mov    eax,DWORD PTR [ebp-0x14]
10024b71:	call   0x10059bfd
10024b76:	ret    0x4
10024b79:	sub    DWORD PTR [esp+0x4],0x4
10024b7e:	jmp    0x100244be
10024b83:	sub    DWORD PTR [esp+0x4],0x24
10024b88:	jmp    0x100244be
10024b8d:	sub    DWORD PTR [esp+0x4],0x8
10024b92:	jmp    0x100244be
10024b97:	sub    DWORD PTR [esp+0x4],0xc
10024b9c:	jmp    0x100244be
10024ba1:	sub    DWORD PTR [esp+0x4],0x4
10024ba6:	jmp    0x1002449d
10024bab:	sub    DWORD PTR [esp+0x4],0x24
10024bb0:	jmp    0x1002449d
10024bb5:	sub    DWORD PTR [esp+0x4],0x4
10024bba:	jmp    0x10024490
10024bbf:	sub    DWORD PTR [esp+0x4],0x24
10024bc4:	jmp    0x10024490
10024bc9:	sub    DWORD PTR [esp+0x4],0x8
10024bce:	jmp    0x1002449d
10024bd3:	sub    DWORD PTR [esp+0x4],0x8
10024bd8:	jmp    0x10024490
10024bdd:	sub    DWORD PTR [esp+0x4],0xc
10024be2:	jmp    0x1002449d
10024be7:	sub    DWORD PTR [esp+0x4],0xc
10024bec:	jmp    0x10024490
10024bf1:	sub    ecx,0x8
10024bf4:	jmp    0x1002453a
10024bf9:	sub    ecx,0x8
10024bfc:	jmp    0x10022700
10024c01:	push   0x0
10024c03:	mov    eax,0x1005facb
10024c08:	call   0x10059b25
10024c0d:	mov    esi,DWORD PTR [ebp+0x8]
10024c10:	push   DWORD PTR [ebp+0xc]
10024c13:	mov    ecx,esi
10024c15:	call   0x100011a2
10024c1a:	push   DWORD PTR [ebp+0x10]
10024c1d:	and    DWORD PTR [ebp-0x4],0x0
10024c21:	lea    ecx,[esi+0x1c]
10024c24:	call   0x100011a2
10024c29:	push   DWORD PTR [ebp+0x14]
10024c2c:	lea    ecx,[esi+0x38]
10024c2f:	mov    BYTE PTR [ebp-0x4],0x1
10024c33:	call   0x100011a2
10024c38:	mov    eax,DWORD PTR [ebp+0x18]
10024c3b:	mov    DWORD PTR [esi+0x58],eax
10024c3e:	mov    eax,DWORD PTR [ebp+0x1c]
10024c41:	mov    DWORD PTR [esi+0x5c],eax
10024c44:	mov    eax,DWORD PTR [ebp+0x20]
10024c47:	mov    DWORD PTR [esi+0x60],eax
10024c4a:	mov    eax,DWORD PTR [ebp+0x24]
10024c4d:	mov    DWORD PTR [esi+0x64],eax
10024c50:	mov    eax,esi
10024c52:	call   0x10059bfd
10024c57:	ret    0x20
10024c5a:	push   ebp
10024c5b:	mov    ebp,esp
10024c5d:	push   ecx
10024c5e:	push   ebx
10024c5f:	mov    ebx,DWORD PTR ds:0x10066130
10024c65:	push   esi
10024c66:	xor    esi,esi
10024c68:	push   esi
10024c69:	push   esi
10024c6a:	mov    DWORD PTR [edi],0x1007180c
10024c70:	mov    DWORD PTR [edi+0x4],esi
10024c73:	push   esi
10024c74:	mov    DWORD PTR [edi+0x8],esi
10024c77:	push   esi
10024c78:	mov    DWORD PTR [edi+0x1c],eax
10024c7b:	call   ebx
10024c7d:	push   esi
10024c7e:	push   esi
10024c7f:	push   esi
10024c80:	push   esi
10024c81:	mov    DWORD PTR [ebp-0x4],eax
10024c84:	call   ebx
10024c86:	push   DWORD PTR [ebp-0x4]
10024c89:	lea    esi,[edi+0x4]
10024c8c:	mov    ebx,eax
10024c8e:	call   0x100049f9
10024c93:	push   ebx
10024c94:	lea    esi,[edi+0x8]
10024c97:	call   0x100049f9
10024c9c:	pop    esi
10024c9d:	mov    eax,edi
10024c9f:	pop    ebx
10024ca0:	leave  
10024ca1:	ret    
10024ca2:	push   esi
10024ca3:	mov    esi,ecx
10024ca5:	mov    DWORD PTR [esi],0x1007180c
10024cab:	mov    eax,DWORD PTR [esi+0x8]
10024cae:	test   eax,eax
10024cb0:	push   edi
10024cb1:	mov    edi,DWORD PTR ds:0x10066070
10024cb7:	je     0x10024cbc
10024cb9:	push   eax
10024cba:	call   edi
10024cbc:	and    DWORD PTR [esi+0x8],0x0
10024cc0:	mov    eax,DWORD PTR [esi+0x4]
10024cc3:	test   eax,eax
10024cc5:	je     0x10024cca
10024cc7:	push   eax
10024cc8:	call   edi
10024cca:	and    DWORD PTR [esi+0x4],0x0
10024cce:	test   BYTE PTR [esp+0xc],0x1
10024cd3:	mov    DWORD PTR [esi],0x1006d90c
10024cd9:	je     0x10024ce2
10024cdb:	push   esi
10024cdc:	call   0x10042f82
10024ce1:	pop    ecx
10024ce2:	pop    edi
10024ce3:	mov    eax,esi
10024ce5:	pop    esi
10024ce6:	ret    0x4
10024ce9:	push   ebp
10024cea:	mov    ebp,esp
10024cec:	sub    esp,0xc
10024cef:	push   ebx
10024cf0:	push   esi
10024cf1:	mov    esi,ecx
10024cf3:	mov    eax,DWORD PTR [esi+0x4]
10024cf6:	mov    DWORD PTR [ebp-0xc],eax
10024cf9:	mov    eax,ds:0x10080fa0
10024cfe:	mov    DWORD PTR [ebp-0x8],eax
10024d01:	mov    eax,DWORD PTR [esi+0x1c]
10024d04:	mov    eax,DWORD PTR [eax+0x30]
10024d07:	push   0xffffffff
10024d09:	mov    DWORD PTR [ebp-0x4],eax
10024d0c:	xor    ebx,ebx
10024d0e:	push   ebx
10024d0f:	lea    eax,[ebp-0xc]
10024d12:	push   eax
10024d13:	push   0x3
10024d15:	call   DWORD PTR ds:0x100660e8
10024d1b:	test   eax,eax
10024d1d:	je     0x10024d38
10024d1f:	mov    eax,DWORD PTR [ebp+0x10]
10024d22:	mov    DWORD PTR [eax],ebx
10024d24:	mov    BYTE PTR [esi+0x18],bl
10024d27:	push   DWORD PTR [esi+0x8]
10024d2a:	call   DWORD PTR ds:0x10066110
10024d30:	pop    esi
10024d31:	mov    al,bl
10024d33:	pop    ebx
10024d34:	leave  
10024d35:	ret    0xc
10024d38:	push   edi
10024d39:	mov    edi,DWORD PTR [esi+0x10]
10024d3c:	cmp    edi,DWORD PTR [ebp+0xc]
10024d3f:	jb     0x10024d44
10024d41:	mov    edi,DWORD PTR [ebp+0xc]
10024d44:	push   edi
10024d45:	push   DWORD PTR [esi+0xc]
10024d48:	push   DWORD PTR [ebp+0x8]
10024d4b:	call   0x10045270
10024d50:	mov    eax,DWORD PTR [ebp+0x10]
10024d53:	mov    DWORD PTR [eax],edi
10024d55:	add    esp,0xc
10024d58:	mov    DWORD PTR [esi+0x14],edi
10024d5b:	mov    BYTE PTR [esi+0x18],0x1
10024d5f:	mov    bl,0x1
10024d61:	pop    edi
10024d62:	jmp    0x10024d27
10024d64:	test   BYTE PTR [esp+0x4],0x1
10024d69:	push   esi
10024d6a:	mov    esi,ecx
10024d6c:	mov    DWORD PTR [esi],0x1006d90c
10024d72:	je     0x10024d7b
10024d74:	push   esi
10024d75:	call   0x10042f82
10024d7a:	pop    ecx
10024d7b:	mov    eax,esi
10024d7d:	pop    esi
10024d7e:	ret    0x4
10024d81:	mov    DWORD PTR [eax],0x1006d90c
10024d87:	ret    
10024d88:	push   ebp
10024d89:	mov    ebp,esp
10024d8b:	sub    esp,0x21c
10024d91:	mov    eax,DWORD PTR [ebp+0x8]
10024d94:	push   ebx
10024d95:	push   esi
10024d96:	mov    DWORD PTR [ebp-0x8],eax
10024d99:	mov    eax,DWORD PTR [ebp+0xc]
10024d9c:	push   edi
10024d9d:	xor    edi,edi
10024d9f:	mov    esi,ecx
10024da1:	mov    DWORD PTR [ebp-0xc],eax
10024da4:	mov    eax,DWORD PTR [esi+0x4]
10024da7:	push   edi
10024da8:	mov    DWORD PTR [ebp-0x4],edi
10024dab:	mov    DWORD PTR [ebp+0x8],edi
10024dae:	mov    DWORD PTR [ebp+0xc],edi
10024db1:	push   DWORD PTR [eax+0x30]
10024db4:	call   DWORD PTR ds:0x10066084
10024dba:	test   eax,eax
10024dbc:	je     0x10024e36
10024dbe:	xor    ebx,ebx
10024dc0:	inc    ebx
10024dc1:	mov    eax,DWORD PTR [esi+0x4]
10024dc4:	mov    DWORD PTR [ebp-0x21c],edi
10024dca:	mov    DWORD PTR [ebp-0x14],edi
10024dcd:	mov    DWORD PTR [ebp-0x10],0x64
10024dd4:	mov    ecx,DWORD PTR [eax]
10024dd6:	mov    DWORD PTR [ebp-0x218],ecx
10024ddc:	mov    DWORD PTR [ebp-0x118],edi
10024de2:	mov    DWORD PTR [ebp-0x21c],ebx
10024de8:	mov    ecx,DWORD PTR [eax]
10024dea:	mov    DWORD PTR [ebp-0x114],ecx
10024df0:	lea    ecx,[ebp+0x8]
10024df3:	push   ecx
10024df4:	lea    ecx,[ebp-0x14]
10024df7:	push   ecx
10024df8:	lea    ecx,[ebp-0x118]
10024dfe:	push   ecx
10024dff:	push   edi
10024e00:	lea    ecx,[ebp-0x21c]
10024e06:	push   ecx
10024e07:	push   edi
10024e08:	mov    DWORD PTR [ebp-0x118],ebx
10024e0e:	call   DWORD PTR [eax+0x94]
10024e14:	cmp    eax,0xffffffff
10024e17:	je     0x10024e3f
10024e19:	cmp    DWORD PTR [ebp-0x118],ebx
10024e1f:	je     0x10024e4a
10024e21:	cmp    eax,edi
10024e23:	mov    eax,DWORD PTR [esi+0x4]
10024e26:	jg     0x10024e56
10024e28:	push   edi
10024e29:	push   DWORD PTR [eax+0x30]
10024e2c:	call   DWORD PTR ds:0x10066084
10024e32:	test   eax,eax
10024e34:	jne    0x10024dc1
10024e36:	mov    eax,DWORD PTR [ebp+0x10]
10024e39:	mov    DWORD PTR [eax],edi
10024e3b:	xor    al,al
10024e3d:	jmp    0x10024e81
10024e3f:	mov    eax,DWORD PTR [esi+0x4]
10024e42:	mov    ecx,DWORD PTR [ebp+0x8]
10024e45:	mov    DWORD PTR [eax+0x38],ecx
10024e48:	jmp    0x10024e3b
10024e4a:	mov    eax,DWORD PTR [esi+0x4]
10024e4d:	mov    DWORD PTR [eax+0x38],0x2746
10024e54:	jmp    0x10024e3b
10024e56:	lea    ecx,[ebp+0x8]
10024e59:	push   ecx
10024e5a:	push   edi
10024e5b:	push   edi
10024e5c:	push   edi
10024e5d:	lea    ecx,[ebp+0xc]
10024e60:	push   ecx
10024e61:	lea    ecx,[ebp-0x4]
10024e64:	push   ecx
10024e65:	push   ebx
10024e66:	lea    ecx,[ebp-0xc]
10024e69:	push   ecx
10024e6a:	push   DWORD PTR [eax]
10024e6c:	call   DWORD PTR [eax+0x88]
10024e72:	cmp    eax,0xffffffff
10024e75:	je     0x10024e3f
10024e77:	mov    eax,DWORD PTR [ebp+0x10]
10024e7a:	mov    ecx,DWORD PTR [ebp-0x4]
10024e7d:	mov    DWORD PTR [eax],ecx
10024e7f:	mov    al,bl
10024e81:	pop    edi
10024e82:	pop    esi
10024e83:	pop    ebx
10024e84:	leave  
10024e85:	ret    0xc
10024e88:	push   0x0
10024e8a:	mov    eax,0x10061b2e
10024e8f:	call   0x10059b25
10024e94:	mov    esi,DWORD PTR [ebp+0x8]
10024e97:	xor    ebx,ebx
10024e99:	mov    BYTE PTR [esi],bl
10024e9b:	mov    BYTE PTR [esi+0x1],bl
10024e9e:	mov    DWORD PTR [esi+0x8],ebx
10024ea1:	mov    DWORD PTR [esi+0xc],ebx
10024ea4:	mov    DWORD PTR [esi+0x10],ebx
10024ea7:	mov    DWORD PTR [esi+0x14],ebx
10024eaa:	mov    DWORD PTR [ebp-0x4],ebx
10024ead:	mov    DWORD PTR [esi+0x1c],ebx
10024eb0:	mov    DWORD PTR [esi+0x20],ebx
10024eb3:	mov    DWORD PTR [esi+0x24],ebx
10024eb6:	mov    DWORD PTR [esi+0x28],ebx
10024eb9:	mov    DWORD PTR [esi+0x2c],ebx
10024ebc:	mov    DWORD PTR [esi+0x30],ebx
10024ebf:	mov    DWORD PTR [esi+0x34],ebx
10024ec2:	mov    eax,DWORD PTR [ebp+0xc]
10024ec5:	mov    BYTE PTR [ebp-0x4],0x4
10024ec9:	mov    DWORD PTR [esi+0x50],eax
10024ecc:	lea    eax,[esi+0x38]
10024ecf:	push   eax
10024ed0:	call   DWORD PTR ds:0x1006611c
10024ed6:	push   0x20
10024ed8:	call   0x1004358e
10024edd:	mov    edi,eax
10024edf:	cmp    edi,ebx
10024ee1:	pop    ecx
10024ee2:	je     0x10024ef0
10024ee4:	mov    eax,DWORD PTR [esi+0x50]
10024ee7:	call   0x10024c5a
10024eec:	mov    edi,eax
10024eee:	jmp    0x10024ef2
10024ef0:	xor    edi,edi
10024ef2:	mov    ecx,DWORD PTR [esi+0x30]
10024ef5:	cmp    edi,ecx
10024ef7:	je     0x10024f03
10024ef9:	cmp    ecx,ebx
10024efb:	je     0x10024f03
10024efd:	mov    eax,DWORD PTR [ecx]
10024eff:	push   0x1
10024f01:	call   DWORD PTR [eax]
10024f03:	mov    DWORD PTR [esi+0x30],edi
10024f06:	mov    eax,esi
10024f08:	call   0x10059bfd
10024f0d:	ret    0x8
10024f10:	jmp    0x10026079
10024f15:	push   0x0
10024f17:	mov    eax,0x10061b2e
10024f1c:	call   0x10059b25
10024f21:	mov    edi,DWORD PTR [ebp+0x8]
10024f24:	mov    DWORD PTR [ebp-0x4],0x4
10024f2b:	mov    ecx,edi
10024f2d:	call   0x10025bb9
10024f32:	test   al,al
10024f34:	jne    0x10024f2b
10024f36:	push   edi
10024f37:	call   0x10025f98
10024f3c:	test   al,al
10024f3e:	jne    0x10024f36
10024f40:	lea    eax,[edi+0x38]
10024f43:	push   eax
10024f44:	call   DWORD PTR ds:0x10066138
10024f4a:	lea    eax,[edi+0x34]
10024f4d:	mov    BYTE PTR [ebp-0x4],0x3
10024f51:	call   0x1000c9d1
10024f56:	mov    BYTE PTR [ebp-0x4],0x2
10024f5a:	mov    ecx,DWORD PTR [edi+0x30]
10024f5d:	test   ecx,ecx
10024f5f:	je     0x10024f67
10024f61:	mov    eax,DWORD PTR [ecx]
10024f63:	push   0x1
10024f65:	call   DWORD PTR [eax]
10024f67:	mov    BYTE PTR [ebp-0x4],0x1
10024f6b:	mov    eax,DWORD PTR [edi+0x2c]
10024f6e:	test   eax,eax
10024f70:	je     0x10024f78
10024f72:	mov    ecx,DWORD PTR [eax]
10024f74:	push   eax
10024f75:	call   DWORD PTR [ecx+0x8]
10024f78:	lea    esi,[edi+0x18]
10024f7b:	call   0x10026079
10024f80:	lea    esi,[edi+0x4]
10024f83:	call   0x10026079
10024f88:	call   0x10059bfd
10024f8d:	ret    0x4
10024f90:	push   0x8
10024f92:	mov    eax,0x10064e6f
10024f97:	call   0x10059b58
10024f9c:	mov    edi,ecx
10024f9e:	mov    esi,edx
10024fa0:	xor    ebx,ebx
10024fa2:	mov    DWORD PTR [ebp-0x4],ebx
10024fa5:	cmp    DWORD PTR ds:0x10080c7c,0x3
10024fac:	mov    BYTE PTR [edi],bl
10024fae:	jne    0x10024fb5
10024fb0:	call   0x1000407b
10024fb5:	mov    DWORD PTR [ebp-0x14],ebx
10024fb8:	lea    eax,[ebp-0x14]
10024fbb:	push   eax
10024fbc:	mov    BYTE PTR [ebp-0x4],0x1
10024fc0:	push   DWORD PTR [esi+0x50]
10024fc3:	push   DWORD PTR [ebp+0x8]
10024fc6:	push   0x10080f88
10024fcb:	call   0x10026293
10024fd0:	add    esp,0x10
10024fd3:	cmp    al,bl
10024fd5:	je     0x10024fe9
10024fd7:	mov    ecx,DWORD PTR [ebp-0x14]
10024fda:	cmp    ecx,ebx
10024fdc:	je     0x10024ff5
10024fde:	mov    DWORD PTR [ebp-0x14],ebx
10024fe1:	call   0x10025c2a
10024fe6:	mov    BYTE PTR [edi],0x1
10024fe9:	mov    edi,DWORD PTR [ebp-0x14]
10024fec:	cmp    edi,ebx
10024fee:	je     0x10024ff5
10024ff0:	call   0x10009f5d
10024ff5:	call   0x10059bfd
10024ffa:	ret    0x4
10024ffd:	mov    eax,0x10024ff5
10025002:	ret    
10025003:	push   ebp
10025004:	mov    ebp,esp
10025006:	and    esp,0xfffffff8
10025009:	sub    esp,0x120
1002500f:	push   ebx
10025010:	push   esi
10025011:	xor    esi,esi
10025013:	xor    ebx,ebx
10025015:	cmp    DWORD PTR [ebp+0xc],esi
10025018:	jbe    0x100250bd
1002501e:	mov    eax,DWORD PTR [ebp+0x8]
10025021:	add    eax,ebx
10025023:	mov    DWORD PTR [esp+0x1c],eax
10025027:	mov    eax,DWORD PTR [ebp+0xc]
1002502a:	sub    eax,ebx
1002502c:	mov    DWORD PTR [esp+0x8],esi
10025030:	mov    DWORD PTR [esp+0xc],esi
10025034:	mov    DWORD PTR [esp+0x18],eax
10025038:	mov    eax,DWORD PTR [edi+0x50]
1002503b:	push   esi
1002503c:	push   DWORD PTR [eax+0x30]
1002503f:	call   DWORD PTR ds:0x10066084
10025045:	test   eax,eax
10025047:	mov    eax,DWORD PTR [edi+0x50]
1002504a:	je     0x100250c7
1002504c:	mov    DWORD PTR [esp+0x20],esi
10025050:	mov    DWORD PTR [esp+0x10],esi
10025054:	mov    DWORD PTR [esp+0x14],0x64
1002505c:	mov    ecx,DWORD PTR [eax]
1002505e:	mov    DWORD PTR [esp+0x24],ecx
10025062:	lea    ecx,[esp+0x8]
10025066:	push   ecx
10025067:	lea    ecx,[esp+0x14]
1002506b:	push   ecx
1002506c:	push   esi
1002506d:	lea    ecx,[esp+0x2c]
10025071:	push   ecx
10025072:	push   esi
10025073:	push   esi
10025074:	mov    DWORD PTR [esp+0x38],0x1
1002507c:	call   DWORD PTR [eax+0x94]
10025082:	cmp    eax,0xffffffff
10025085:	je     0x100250d2
10025087:	cmp    eax,esi
10025089:	jle    0x10025038
1002508b:	mov    eax,DWORD PTR [edi+0x50]
1002508e:	lea    ecx,[esp+0x8]
10025092:	push   ecx
10025093:	push   esi
10025094:	push   esi
10025095:	push   esi
10025096:	push   esi
10025097:	lea    ecx,[esp+0x20]
1002509b:	push   ecx
1002509c:	push   0x1
1002509e:	lea    ecx,[esp+0x34]
100250a2:	push   ecx
100250a3:	push   DWORD PTR [eax]
100250a5:	call   DWORD PTR [eax+0x98]
100250ab:	cmp    eax,0xffffffff
100250ae:	je     0x100250d2
100250b0:	add    ebx,DWORD PTR [esp+0xc]
100250b4:	cmp    DWORD PTR [ebp+0xc],ebx
100250b7:	ja     0x1002501e
100250bd:	mov    al,0x1
100250bf:	pop    esi
100250c0:	pop    ebx
100250c1:	mov    esp,ebp
100250c3:	pop    ebp
100250c4:	ret    0x8
100250c7:	mov    DWORD PTR [eax+0x38],0x2749
100250ce:	xor    al,al
100250d0:	jmp    0x100250bf
100250d2:	mov    eax,DWORD PTR [edi+0x50]
100250d5:	mov    ecx,DWORD PTR [esp+0x8]
100250d9:	mov    DWORD PTR [eax+0x38],ecx
100250dc:	jmp    0x100250ce
100250de:	push   0x8
100250e0:	mov    eax,0x10063a04
100250e5:	call   0x10059b25
100250ea:	mov    ebx,ecx
100250ec:	push   0x40
100250ee:	call   0x1004358e
100250f3:	pop    ecx
100250f4:	mov    DWORD PTR [ebp-0x14],eax
100250f7:	and    DWORD PTR [ebp-0x4],0x0
100250fb:	test   eax,eax
100250fd:	je     0x10025109
100250ff:	push   eax
10025100:	call   0x100087b9
10025105:	mov    esi,eax
10025107:	jmp    0x1002510b
10025109:	xor    esi,esi
1002510b:	mov    DWORD PTR [ebp-0x14],esi
1002510e:	mov    eax,ebx
10025110:	mov    DWORD PTR [ebp-0x4],0x1
10025117:	call   0x1000dfdc
1002511c:	test   al,al
1002511e:	je     0x10025171
10025120:	lea    eax,[ebp-0x10]
10025123:	push   eax
10025124:	call   0x1000ddf7
10025129:	mov    BYTE PTR [ebp-0x4],0x2
1002512d:	mov    ecx,DWORD PTR [eax]
1002512f:	and    DWORD PTR [eax],0x0
10025132:	mov    eax,ecx
10025134:	mov    ecx,esi
10025136:	call   0x100087fd
1002513b:	mov    BYTE PTR [ebp-0x4],0x1
1002513f:	mov    edi,DWORD PTR [ebp-0x10]
10025142:	test   edi,edi
10025144:	je     0x1002514b
10025146:	call   0x10009f5d
1002514b:	mov    eax,DWORD PTR [esi+0x30]
1002514e:	mov    ecx,DWORD PTR [eax+0x18]
10025151:	mov    eax,DWORD PTR [eax+0x14]
10025154:	mov    edi,DWORD PTR [ebp+0x8]
10025157:	push   ecx
10025158:	push   eax
10025159:	call   0x10025003
1002515e:	or     DWORD PTR [ebp-0x4],0xffffffff
10025162:	test   al,al
10025164:	push   esi
10025165:	je     0x1002517a
10025167:	call   0x10009f97
1002516c:	jmp    0x100250ec
10025171:	or     DWORD PTR [ebp-0x4],0xffffffff
10025175:	test   esi,esi
10025177:	je     0x1002517f
10025179:	push   esi
1002517a:	call   0x10009f97
1002517f:	call   0x10059bfd
10025184:	ret    0x4
10025187:	push   esi
10025188:	mov    esi,ecx
1002518a:	cmp    BYTE PTR [esi+0x8],0x0
1002518e:	jne    0x100251c2
10025190:	cmp    BYTE PTR [esi+0x9],0x0
10025194:	jne    0x100251c2
10025196:	push   ebx
10025197:	mov    ebx,DWORD PTR [esp+0xc]
1002519b:	mov    eax,DWORD PTR [ebx+0x18]
1002519e:	mov    ecx,DWORD PTR [ebx+0x14]
100251a1:	push   edi
100251a2:	push   eax
100251a3:	mov    eax,DWORD PTR [esi+0x4]
100251a6:	mov    edi,DWORD PTR [eax+0x1c]
100251a9:	push   ecx
100251aa:	call   0x10025003
100251af:	test   al,al
100251b1:	jne    0x100251c0
100251b3:	mov    BYTE PTR [esi+0x9],0x1
100251b7:	push   DWORD PTR [ebx+0x18]
100251ba:	call   0x1000206e
100251bf:	pop    ecx
100251c0:	pop    edi
100251c1:	pop    ebx
100251c2:	pop    esi
100251c3:	ret    0x4
100251c6:	push   0x8
100251c8:	mov    eax,0x10064417
100251cd:	call   0x10059b58
100251d2:	mov    esi,DWORD PTR [ebp+0x10]
100251d5:	push   0xc
100251d7:	call   0x1004358e
100251dc:	xor    ebx,ebx
100251de:	cmp    eax,ebx
100251e0:	pop    ecx
100251e1:	je     0x100251ff
100251e3:	mov    ecx,DWORD PTR [ebp+0x8]
100251e6:	mov    ecx,DWORD PTR [ecx+0x50]
100251e9:	mov    DWORD PTR [eax+0x4],ecx
100251ec:	mov    cl,BYTE PTR [ebp+0x18]
100251ef:	mov    DWORD PTR [eax],0x1007181c
100251f5:	mov    BYTE PTR [eax+0x8],cl
100251f8:	mov    BYTE PTR [eax+0x9],bl
100251fb:	mov    edi,eax
100251fd:	jmp    0x10025201
100251ff:	xor    edi,edi
10025201:	mov    DWORD PTR [ebp-0x14],edi
10025204:	mov    DWORD PTR [ebp-0x4],ebx
10025207:	call   0x1000dc80
1002520c:	push   DWORD PTR [ebp+0xc]
1002520f:	mov    ecx,DWORD PTR [ebp+0x14]
10025212:	mov    DWORD PTR [esi+0x14],edi
10025215:	mov    BYTE PTR [ebp-0x4],0x1
10025219:	call   0x1000e2ce
1002521e:	cmp    eax,ebx
10025220:	mov    DWORD PTR [ebp+0x18],eax
10025223:	jne    0x10025248
10025225:	cmp    BYTE PTR [edi+0x9],bl
10025228:	je     0x10025248
1002522a:	mov    esi,DWORD PTR [ebp+0x8]
1002522d:	call   0x10025b88
10025232:	or     DWORD PTR [ebp-0x4],0xffffffff
10025236:	mov    eax,DWORD PTR [edi]
10025238:	push   0x1
1002523a:	mov    ecx,edi
1002523c:	call   DWORD PTR [eax]
1002523e:	xor    eax,eax
10025240:	call   0x10059bfd
10025245:	ret    0x14
10025248:	mov    DWORD PTR [ebp-0x4],ebx
1002524b:	call   0x1000dc80
10025250:	or     DWORD PTR [ebp-0x4],0xffffffff
10025254:	cmp    edi,ebx
10025256:	mov    DWORD PTR [esi+0x14],ebx
10025259:	je     0x10025263
1002525b:	mov    eax,DWORD PTR [edi]
1002525d:	push   0x1
1002525f:	mov    ecx,edi
10025261:	call   DWORD PTR [eax]
10025263:	mov    eax,DWORD PTR [ebp+0x18]
10025266:	jmp    0x10025240
10025268:	push   0x4
1002526a:	call   0x100379e0
1002526f:	mov    esi,DWORD PTR [ebp+0x10]
10025272:	pop    ecx
10025273:	call   0x1000dc80
10025278:	xor    ebx,ebx
1002527a:	push   ebx
1002527b:	push   ebx
1002527c:	mov    DWORD PTR [esi+0x14],ebx
1002527f:	call   0x10047aa4
10025284:	int3   
10025285:	push   ebp
10025286:	mov    ebp,esp
10025288:	and    esp,0xfffffff8
1002528b:	push   0xffffffff
1002528d:	push   0x10065120
10025292:	mov    eax,fs:0x0
10025298:	push   eax
10025299:	sub    esp,0x40
1002529c:	push   ebx
1002529d:	push   esi
1002529e:	push   edi
1002529f:	mov    eax,ds:0x1007e030
100252a4:	xor    eax,esp
100252a6:	push   eax
100252a7:	lea    eax,[esp+0x50]
100252ab:	mov    fs:0x0,eax
100252b1:	mov    esi,ecx
100252b3:	mov    eax,DWORD PTR [esi+0x30]
100252b6:	xor    ebx,ebx
100252b8:	mov    DWORD PTR [esp+0x30],ebx
100252bc:	mov    DWORD PTR [esp+0x34],ebx
100252c0:	mov    DWORD PTR [esp+0x38],ebx
100252c4:	mov    DWORD PTR [esp+0x3c],ebx
100252c8:	mov    BYTE PTR [esp+0x40],bl
100252cc:	mov    DWORD PTR [esp+0x44],ebx
100252d0:	mov    DWORD PTR [esp+0x48],eax
100252d4:	lea    eax,[esp+0x30]
100252d8:	mov    DWORD PTR [esp+0x58],ebx
100252dc:	mov    DWORD PTR [esp+0x20],eax
100252e0:	push   0x40
100252e2:	call   0x1004358e
100252e7:	pop    ecx
100252e8:	mov    DWORD PTR [esp+0x24],eax
100252ec:	cmp    eax,ebx
100252ee:	mov    BYTE PTR [esp+0x58],0x1
100252f3:	je     0x10025303
100252f5:	push   eax
100252f6:	call   0x100087b9
100252fb:	mov    edi,eax
100252fd:	mov    DWORD PTR [esp+0x10],edi
10025301:	jmp    0x10025309
10025303:	mov    DWORD PTR [esp+0x10],ebx
10025307:	mov    edi,ebx
10025309:	mov    DWORD PTR [esp+0x28],edi
1002530d:	push   edi
1002530e:	lea    ecx,[esp+0x24]
10025312:	mov    BYTE PTR [esp+0x5c],0x2
10025317:	call   0x1000e01d
1002531c:	cmp    eax,0x1
1002531f:	mov    DWORD PTR [esp+0x14],eax
10025323:	je     0x10025424
10025329:	lea    eax,[esp+0x1c]
1002532d:	push   eax
1002532e:	lea    ebx,[esp+0x34]
10025332:	call   0x1000ddf7
10025337:	mov    BYTE PTR [esp+0x58],0x3
1002533c:	mov    ecx,DWORD PTR [eax]
1002533e:	xor    ebx,ebx
10025340:	mov    DWORD PTR [eax],ebx
10025342:	mov    eax,ecx
10025344:	mov    ecx,edi
10025346:	call   0x100087fd
1002534b:	mov    BYTE PTR [esp+0x58],0x2
10025350:	cmp    DWORD PTR [esp+0x1c],ebx
10025354:	je     0x10025363
10025356:	mov    edi,DWORD PTR [esp+0x1c]
1002535a:	call   0x10009f5d
1002535f:	mov    edi,DWORD PTR [esp+0x10]
10025363:	call   0x1002fa60
10025368:	mov    DWORD PTR [edi+0x10],eax
1002536b:	mov    DWORD PTR [edi+0x14],edx
1002536e:	call   0x10025b9f
10025373:	test   al,al
10025375:	je     0x1002537f
10025377:	mov    DWORD PTR [esp+0x14],0x1
1002537f:	cmp    DWORD PTR [esp+0x14],ebx
10025383:	mov    BYTE PTR [esp+0x18],bl
10025387:	jne    0x1002539b
10025389:	push   edi
1002538a:	lea    ecx,[esp+0x1c]
1002538e:	mov    edx,esi
10025390:	call   0x10024f90
10025395:	cmp    BYTE PTR [esp+0x18],bl
10025399:	jne    0x100253f2
1002539b:	push   edi
1002539c:	call   0x1000890d
100253a1:	lea    ebx,[esi+0x38]
100253a4:	push   ebx
100253a5:	mov    DWORD PTR [esp+0x28],eax
100253a9:	mov    DWORD PTR [esp+0x30],ebx
100253ad:	call   DWORD PTR ds:0x100660f0
100253b3:	lea    eax,[esp+0x24]
100253b7:	push   eax
100253b8:	lea    eax,[esi+0x4]
100253bb:	mov    BYTE PTR [esp+0x5c],0x4
100253c0:	call   0x100260d3
100253c5:	push   ebx
100253c6:	mov    BYTE PTR [esp+0x5c],0x2
100253cb:	call   DWORD PTR ds:0x100660ec
100253d1:	mov    eax,DWORD PTR [edi+0x30]
100253d4:	mov    ecx,DWORD PTR [eax+0x18]
100253d7:	mov    eax,DWORD PTR [eax+0x14]
100253da:	push   ecx
100253db:	push   eax
100253dc:	mov    edi,esi
100253de:	call   0x10025003
100253e3:	test   al,al
100253e5:	mov    edi,DWORD PTR [esp+0x10]
100253e9:	je     0x1002543d
100253eb:	cmp    DWORD PTR [esp+0x14],0x0
100253f0:	jne    0x1002540b
100253f2:	push   DWORD PTR [esp+0x18]
100253f6:	lea    eax,[esp+0x34]
100253fa:	push   edi
100253fb:	push   eax
100253fc:	lea    eax,[esp+0x2c]
10025400:	push   eax
10025401:	push   esi
10025402:	call   0x100251c6
10025407:	mov    DWORD PTR [esp+0x14],eax
1002540b:	cmp    DWORD PTR [esp+0x14],0x1
10025410:	je     0x10025453
10025412:	push   edi
10025413:	mov    BYTE PTR [esp+0x5c],0x0
10025418:	call   0x10009f97
1002541d:	xor    ebx,ebx
1002541f:	jmp    0x100252e0
10025424:	call   0x10025b88
10025429:	push   esi
1002542a:	lea    ecx,[esp+0x34]
1002542e:	call   0x100250de
10025433:	cmp    edi,ebx
10025435:	mov    BYTE PTR [esp+0x58],bl
10025439:	je     0x10025475
1002543b:	jmp    0x1002546f
1002543d:	mov    eax,DWORD PTR [edi+0x30]
10025440:	push   DWORD PTR [eax+0x18]
10025443:	push   0x0
10025445:	call   0x1000206e
1002544a:	pop    ecx
1002544b:	pop    ecx
1002544c:	call   0x10025b88
10025451:	jmp    0x1002546a
10025453:	push   0x10
10025455:	call   0x100379e0
1002545a:	pop    ecx
1002545b:	call   0x10025b88
10025460:	push   esi
10025461:	lea    ecx,[esp+0x34]
10025465:	call   0x100250de
1002546a:	mov    BYTE PTR [esp+0x58],0x0
1002546f:	push   edi
10025470:	call   0x10009f97
10025475:	or     DWORD PTR [esp+0x58],0xffffffff
1002547a:	lea    eax,[esp+0x30]
1002547e:	call   0x1000dc4f
10025483:	mov    ecx,DWORD PTR [esp+0x50]
10025487:	mov    DWORD PTR fs:0x0,ecx
1002548e:	pop    ecx
1002548f:	pop    edi
10025490:	pop    esi
10025491:	pop    ebx
10025492:	mov    esp,ebp
10025494:	pop    ebp
10025495:	ret    
10025496:	push   0x8
10025498:	mov    eax,0x10065148
1002549d:	call   0x10059b58
100254a2:	lea    eax,[ebp+0xb]
100254a5:	push   eax
100254a6:	call   0x100379b0
100254ab:	and    DWORD PTR [ebp-0x4],0x0
100254af:	mov    eax,DWORD PTR [ebp+0x8]
100254b2:	mov    DWORD PTR [ebp-0x14],eax
100254b5:	mov    BYTE PTR [ebp-0x4],0x2
100254b9:	mov    ecx,DWORD PTR [eax+0x1c]
100254bc:	call   0x10025285
100254c1:	lea    ecx,[ebp-0x14]
100254c4:	call   0x10015efd
100254c9:	call   0x100379d0
100254ce:	xor    eax,eax
100254d0:	call   0x10059bfd
100254d5:	ret    0x4
100254d8:	mov    eax,DWORD PTR [ebp-0x14]
100254db:	push   DWORD PTR [eax]
100254dd:	call   0x1000206e
100254e2:	pop    ecx
100254e3:	mov    eax,0x100254c1
100254e8:	ret    
100254e9:	push   0x4
100254eb:	mov    eax,0x100639cf
100254f0:	call   0x10059b25
100254f5:	mov    ebx,ecx
100254f7:	mov    esi,edx
100254f9:	mov    eax,DWORD PTR [esi+0x50]
100254fc:	xor    edi,edi
100254fe:	push   edi
100254ff:	push   DWORD PTR [eax+0x30]
10025502:	call   DWORD PTR ds:0x10066084
10025508:	test   eax,eax
1002550a:	je     0x10025521
1002550c:	mov    eax,esi
1002550e:	call   0x10025b5a
10025513:	test   eax,eax
10025515:	je     0x10025521
10025517:	push   0xa
10025519:	call   DWORD PTR ds:0x100660bc
1002551f:	jmp    0x100254f9
10025521:	mov    eax,ebx
10025523:	call   0x1000dfdc
10025528:	test   al,al
1002552a:	je     0x10025554
1002552c:	lea    eax,[ebp-0x10]
1002552f:	push   eax
10025530:	call   0x1000ddf7
10025535:	mov    DWORD PTR [ebp-0x4],edi
10025538:	mov    ecx,DWORD PTR [eax]
1002553a:	mov    DWORD PTR [eax],edi
1002553c:	call   0x10025c2a
10025541:	or     DWORD PTR [ebp-0x4],0xffffffff
10025545:	cmp    DWORD PTR [ebp-0x10],edi
10025548:	je     0x100254f9
1002554a:	mov    edi,DWORD PTR [ebp-0x10]
1002554d:	call   0x10009f5d
10025552:	jmp    0x100254f9
10025554:	call   0x1002601a
10025559:	call   0x10059bfd
1002555e:	ret    
1002555f:	mov    eax,DWORD PTR [ecx+0x4]
10025562:	mov    ecx,DWORD PTR [esp+0x4]
10025566:	push   esi
10025567:	mov    esi,DWORD PTR [eax+0x1c]
1002556a:	call   0x10025c2a
1002556f:	pop    esi
10025570:	ret    0x4
10025573:	push   0x10
10025575:	mov    eax,0x100648ac
1002557a:	call   0x10059b58
1002557f:	mov    ebx,ecx
10025581:	mov    edi,edx
10025583:	and    DWORD PTR [ebp-0x4],0x0
10025587:	mov    ecx,DWORD PTR [ebp+0x10]
1002558a:	lea    eax,[ecx+0x34]
1002558d:	mov    edx,DWORD PTR [eax]
1002558f:	mov    edx,DWORD PTR [edx+0x18]
10025592:	mov    DWORD PTR [ecx+0x38],edx
10025595:	mov    ecx,DWORD PTR [eax]
10025597:	and    DWORD PTR [eax],0x0
1002559a:	mov    esi,edi
1002559c:	call   0x10025c2a
100255a1:	push   0x8
100255a3:	call   0x1004358e
100255a8:	test   eax,eax
100255aa:	pop    ecx
100255ab:	je     0x100255be
100255ad:	mov    ecx,DWORD PTR [edi+0x50]
100255b0:	mov    DWORD PTR [eax],0x10071824
100255b6:	mov    DWORD PTR [eax+0x4],ecx
100255b9:	mov    DWORD PTR [ebp-0x14],eax
100255bc:	jmp    0x100255c2
100255be:	and    DWORD PTR [ebp-0x14],0x0
100255c2:	mov    eax,DWORD PTR [ebp-0x14]
100255c5:	mov    DWORD PTR [ebp-0x1c],eax
100255c8:	mov    esi,DWORD PTR [ebp+0xc]
100255cb:	mov    BYTE PTR [ebp-0x4],0x1
100255cf:	call   0x1000dc80
100255d4:	mov    eax,DWORD PTR [ebp-0x14]
100255d7:	mov    BYTE PTR [ebp-0x4],0x2
100255db:	mov    edx,DWORD PTR [ebp+0x10]
100255de:	mov    ecx,DWORD PTR [ebp+0x8]
100255e1:	push   ebx
100255e2:	mov    DWORD PTR [esi+0x14],eax
100255e5:	call   0x1000e59d
100255ea:	test   eax,eax
100255ec:	mov    DWORD PTR [ebp-0x18],eax
100255ef:	jne    0x10025644
100255f1:	call   0x1002fa60
100255f6:	mov    ecx,DWORD PTR [ebp+0x10]
100255f9:	mov    DWORD PTR [ecx+0x18],eax
100255fc:	mov    eax,DWORD PTR [ebp+0x10]
100255ff:	mov    DWORD PTR [eax+0x1c],edx
10025602:	mov    ecx,DWORD PTR [ebp+0x10]
10025605:	push   edi
10025606:	call   0x10025c86
1002560b:	cmp    BYTE PTR [ebx+0x2c],0x0
1002560f:	jne    0x10025644
10025611:	push   ebx
10025612:	call   0x1000890d
10025617:	mov    DWORD PTR [ebp+0x8],eax
1002561a:	lea    eax,[ebp+0x10]
1002561d:	push   eax
1002561e:	lea    eax,[ebp+0x8]
10025621:	push   eax
10025622:	mov    edi,0x10080f70
10025627:	mov    BYTE PTR [ebp-0x4],0x3
1002562b:	call   0x100266a7
10025630:	pop    ecx
10025631:	mov    BYTE PTR [ebp-0x4],0x2
10025635:	cmp    DWORD PTR [ebp+0x8],0x0
10025639:	pop    ecx
1002563a:	je     0x10025644
1002563c:	push   DWORD PTR [ebp+0x8]
1002563f:	call   0x10009f97
10025644:	mov    esi,DWORD PTR [ebp+0xc]
10025647:	xor    edi,edi
10025649:	inc    edi
1002564a:	mov    DWORD PTR [ebp-0x4],edi
1002564d:	call   0x1000dc80
10025652:	and    DWORD PTR [esi+0x14],0x0
10025656:	mov    ecx,DWORD PTR [ebp-0x14]
10025659:	test   ecx,ecx
1002565b:	mov    BYTE PTR [ebp-0x4],0x0
1002565f:	je     0x10025666
10025661:	mov    eax,DWORD PTR [ecx]
10025663:	push   edi
10025664:	call   DWORD PTR [eax]
10025666:	or     DWORD PTR [ebp-0x4],0xffffffff
1002566a:	lea    eax,[ebp+0x10]
1002566d:	call   0x10009f1a
10025672:	mov    eax,DWORD PTR [ebp-0x18]
10025675:	call   0x10059bfd
1002567a:	ret    0xc
1002567d:	push   0x4
1002567f:	call   0x100379e0
10025684:	mov    esi,DWORD PTR [ebp+0xc]
10025687:	pop    ecx
10025688:	call   0x1000dc80
1002568d:	xor    eax,eax
1002568f:	push   eax
10025690:	push   eax
10025691:	mov    DWORD PTR [esi+0x14],eax
10025694:	call   0x10047aa4
10025699:	int3   
1002569a:	push   0x10
1002569c:	mov    eax,0x10064879
100256a1:	call   0x10059b25
100256a6:	mov    ebx,edx
100256a8:	mov    esi,DWORD PTR [ebp+0x10]
100256ab:	push   DWORD PTR [ebp+0xc]
100256ae:	mov    edx,esi
100256b0:	call   0x1000e59d
100256b5:	test   eax,eax
100256b7:	mov    DWORD PTR [ebp-0x10],eax
100256ba:	jne    0x10025710
100256bc:	lea    eax,[ebp-0x14]
100256bf:	push   eax
100256c0:	call   0x1000ddf7
100256c5:	and    DWORD PTR [ebp-0x4],0x0
100256c9:	mov    ebx,DWORD PTR [eax]
100256cb:	and    DWORD PTR [eax],0x0
100256ce:	mov    ecx,esi
100256d0:	call   0x100090dc
100256d5:	or     DWORD PTR [ebp-0x4],0xffffffff
100256d9:	mov    edi,DWORD PTR [ebp-0x14]
100256dc:	test   edi,edi
100256de:	je     0x100256e5
100256e0:	call   0x10009f5d
100256e5:	call   0x1002fa60
100256ea:	mov    DWORD PTR [esi+0x18],eax
100256ed:	mov    eax,DWORD PTR [ebp+0xc]
100256f0:	mov    DWORD PTR [esi+0x1c],edx
100256f3:	cmp    BYTE PTR [eax+0x2c],0x0
100256f7:	jne    0x10025756
100256f9:	mov    ecx,DWORD PTR [ebp+0x8]
100256fc:	push   esi
100256fd:	push   DWORD PTR [ecx+0x50]
10025700:	push   eax
10025701:	push   0x10080f94
10025706:	call   0x100265a6
1002570b:	add    esp,0x10
1002570e:	jmp    0x10025756
10025710:	lea    eax,[ebp-0x18]
10025713:	push   eax
10025714:	call   0x1000ddf7
10025719:	mov    DWORD PTR [ebp-0x4],0x1
10025720:	mov    ebx,DWORD PTR [eax]
10025722:	and    DWORD PTR [eax],0x0
10025725:	mov    DWORD PTR [ebp-0x14],ebx
10025728:	mov    BYTE PTR [ebp-0x4],0x2
1002572c:	mov    edi,DWORD PTR [ebx+0x18]
1002572f:	test   edi,edi
10025731:	je     0x1002573f
10025733:	mov    ecx,DWORD PTR [ebx+0x14]
10025736:	mov    eax,DWORD PTR [esi+0x34]
10025739:	push   ecx
1002573a:	call   0x10007814
1002573f:	mov    edi,ebx
10025741:	call   0x10009f5d
10025746:	or     DWORD PTR [ebp-0x4],0xffffffff
1002574a:	mov    edi,DWORD PTR [ebp-0x18]
1002574d:	test   edi,edi
1002574f:	je     0x10025756
10025751:	call   0x10009f5d
10025756:	mov    eax,DWORD PTR [esi+0x34]
10025759:	mov    eax,DWORD PTR [eax+0x18]
1002575c:	mov    DWORD PTR [esi+0x38],eax
1002575f:	mov    ecx,DWORD PTR [esi+0x34]
10025762:	and    DWORD PTR [esi+0x34],0x0
10025766:	mov    esi,DWORD PTR [ebp+0x8]
10025769:	call   0x10025c2a
1002576e:	cmp    DWORD PTR [ebp-0x10],0x0
10025772:	jne    0x10025780
10025774:	mov    ecx,DWORD PTR [ebp+0x10]
10025777:	mov    ebx,DWORD PTR [ebp+0xc]
1002577a:	push   esi
1002577b:	call   0x10025c86
10025780:	mov    eax,DWORD PTR [ebp-0x10]
10025783:	call   0x10059bfd
10025788:	ret    0xc
1002578b:	push   ebp
1002578c:	mov    ebp,esp
1002578e:	and    esp,0xfffffff8
10025791:	push   0xffffffff
10025793:	push   0x10064e4c
10025798:	mov    eax,fs:0x0
1002579e:	push   eax
1002579f:	sub    esp,0x48
100257a2:	push   ebx
100257a3:	push   esi
100257a4:	push   edi
100257a5:	mov    eax,ds:0x1007e030
100257aa:	xor    eax,esp
100257ac:	push   eax
100257ad:	lea    eax,[esp+0x58]
100257b1:	mov    fs:0x0,eax
100257b7:	mov    edi,DWORD PTR [ebp+0x8]
100257ba:	mov    eax,DWORD PTR [edi+0x50]
100257bd:	mov    DWORD PTR [esp+0x30],0x10071814
100257c5:	mov    DWORD PTR [esp+0x34],eax
100257c9:	xor    ebx,ebx
100257cb:	mov    DWORD PTR [esp+0x60],ebx
100257cf:	lea    ecx,[esp+0x30]
100257d3:	mov    DWORD PTR [esp+0x38],ebx
100257d7:	mov    DWORD PTR [esp+0x3c],ebx
100257db:	mov    DWORD PTR [esp+0x40],ebx
100257df:	mov    DWORD PTR [esp+0x44],ebx
100257e3:	mov    BYTE PTR [esp+0x48],bl
100257e7:	mov    DWORD PTR [esp+0x4c],ebx
100257eb:	mov    DWORD PTR [esp+0x50],ecx
100257ef:	lea    ecx,[esp+0x38]
100257f3:	mov    BYTE PTR [esp+0x60],0x1
100257f8:	mov    DWORD PTR [esp+0x20],ecx
100257fc:	jmp    0x100259de
10025801:	mov    eax,edi
10025803:	call   0x10025b5a
10025808:	test   eax,eax
1002580a:	je     0x10025819
1002580c:	push   0xa
1002580e:	call   DWORD PTR ds:0x100660bc
10025814:	jmp    0x100259db
10025819:	lea    esi,[esp+0x38]
1002581d:	call   0x1000ddd2
10025822:	test   al,al
10025824:	jne    0x100259f2
1002582a:	push   0x40
1002582c:	call   0x1004358e
10025831:	pop    ecx
10025832:	mov    DWORD PTR [esp+0x24],eax
10025836:	cmp    eax,ebx
10025838:	mov    BYTE PTR [esp+0x60],0x2
1002583d:	je     0x1002584b
1002583f:	push   eax
10025840:	call   0x10009027
10025845:	mov    DWORD PTR [esp+0x18],eax
10025849:	jmp    0x1002584f
1002584b:	mov    DWORD PTR [esp+0x18],ebx
1002584f:	mov    eax,DWORD PTR [esp+0x18]
10025853:	mov    DWORD PTR [esp+0x24],eax
10025857:	push   eax
10025858:	lea    eax,[esp+0x24]
1002585c:	push   eax
1002585d:	mov    BYTE PTR [esp+0x68],0x3
10025862:	call   0x1000e4bf
10025867:	lea    esi,[edi+0x38]
1002586a:	push   esi
1002586b:	mov    DWORD PTR [esp+0x18],eax
1002586f:	call   DWORD PTR ds:0x100660f0
10025875:	cmp    BYTE PTR [edi],bl
10025877:	jne    0x10025898
10025879:	cmp    DWORD PTR [edi+0x14],ebx
1002587c:	je     0x10025898
1002587e:	lea    esi,[edi+0x4]
10025881:	call   0x10026036
10025886:	mov    esi,DWORD PTR [eax]
10025888:	lea    eax,[edi+0x38]
1002588b:	push   eax
1002588c:	call   DWORD PTR ds:0x100660ec
10025892:	mov    DWORD PTR [esp+0x1c],esi
10025896:	jmp    0x100258a3
10025898:	push   esi
10025899:	call   DWORD PTR ds:0x100660ec
1002589f:	mov    DWORD PTR [esp+0x1c],ebx
100258a3:	cmp    DWORD PTR [esp+0x1c],ebx
100258a7:	jne    0x100258b1
100258a9:	mov    DWORD PTR [esp+0x14],0x1
100258b1:	mov    esi,edi
100258b3:	call   0x10025b9f
100258b8:	test   al,al
100258ba:	je     0x100258c4
100258bc:	mov    DWORD PTR [esp+0x14],0x1
100258c4:	cmp    DWORD PTR [esp+0x14],ebx
100258c8:	jne    0x10025981
100258ce:	call   0x1000407b
100258d3:	lea    eax,[esp+0x28]
100258d7:	push   eax
100258d8:	lea    ebx,[esp+0x3c]
100258dc:	call   0x1000ddf7
100258e1:	mov    esi,DWORD PTR [esp+0x18]
100258e5:	mov    BYTE PTR [esp+0x60],0x4
100258ea:	mov    ecx,DWORD PTR [eax]
100258ec:	and    DWORD PTR [eax],0x0
100258ef:	mov    eax,ecx
100258f1:	mov    ecx,esi
100258f3:	call   0x1000906e
100258f8:	mov    BYTE PTR [esp+0x60],0x3
100258fd:	cmp    DWORD PTR [esp+0x28],0x0
10025902:	je     0x10025910
10025904:	mov    edi,DWORD PTR [esp+0x28]
10025908:	call   0x10009f5d
1002590d:	mov    edi,DWORD PTR [ebp+0x8]
10025910:	call   0x1002fa60
10025915:	mov    ebx,DWORD PTR [esp+0x1c]
10025919:	mov    DWORD PTR [esi+0x10],eax
1002591c:	mov    DWORD PTR [esi+0x14],edx
1002591f:	cmp    BYTE PTR [ebx+0x2c],0x0
10025923:	mov    BYTE PTR [esp+0x13],0x1
10025928:	jne    0x10025948
1002592a:	lea    eax,[esp+0x13]
1002592e:	push   eax
1002592f:	push   esi
10025930:	push   DWORD PTR [edi+0x50]
10025933:	push   ebx
10025934:	push   0x10080f7c
10025939:	call   0x10026495
1002593e:	add    esp,0x14
10025941:	cmp    BYTE PTR [esp+0x13],0x0
10025946:	je     0x1002596b
10025948:	push   ecx
10025949:	mov    eax,esp
1002594b:	mov    DWORD PTR [eax],esi
1002594d:	mov    DWORD PTR [esp+0x28],esp
10025951:	and    DWORD PTR [esp+0x28],0x0
10025956:	lea    eax,[esp+0x3c]
1002595a:	push   eax
1002595b:	lea    eax,[esp+0x28]
1002595f:	push   eax
10025960:	mov    ecx,ebx
10025962:	mov    edx,edi
10025964:	call   0x10025573
10025969:	jmp    0x1002597b
1002596b:	push   esi
1002596c:	push   ebx
1002596d:	push   edi
1002596e:	lea    edx,[esp+0x44]
10025972:	lea    ecx,[esp+0x2c]
10025976:	call   0x1002569a
1002597b:	mov    DWORD PTR [esp+0x14],eax
1002597f:	jmp    0x100259bd
10025981:	mov    esi,edi
10025983:	call   0x10025b88
10025988:	lea    eax,[esp+0x2c]
1002598c:	push   eax
1002598d:	lea    ebx,[esp+0x3c]
10025991:	call   0x1000ddf7
10025996:	mov    BYTE PTR [esp+0x60],0x5
1002599b:	mov    ecx,DWORD PTR [eax]
1002599d:	and    DWORD PTR [eax],0x0
100259a0:	call   0x10025c2a
100259a5:	mov    BYTE PTR [esp+0x60],0x3
100259aa:	cmp    DWORD PTR [esp+0x2c],0x0
100259af:	je     0x100259bd
100259b1:	mov    edi,DWORD PTR [esp+0x2c]
100259b5:	call   0x10009f5d
100259ba:	mov    edi,DWORD PTR [ebp+0x8]
100259bd:	mov    ecx,edi
100259bf:	call   0x10025bb9
100259c4:	cmp    DWORD PTR [esp+0x14],0x1
100259c9:	je     0x100259fb
100259cb:	lea    eax,[esp+0x24]
100259cf:	mov    BYTE PTR [esp+0x60],0x1
100259d4:	call   0x10009f1a
100259d9:	xor    ebx,ebx
100259db:	mov    eax,DWORD PTR [edi+0x50]
100259de:	push   ebx
100259df:	push   DWORD PTR [eax+0x30]
100259e2:	call   DWORD PTR ds:0x10066084
100259e8:	test   eax,eax
100259ea:	jne    0x10025801
100259f0:	jmp    0x10025a1e
100259f2:	mov    esi,edi
100259f4:	call   0x1002601a
100259f9:	jmp    0x10025a1e
100259fb:	push   0x10
100259fd:	call   0x100379e0
10025a02:	pop    ecx
10025a03:	lea    ecx,[esp+0x38]
10025a07:	mov    edx,edi
10025a09:	call   0x100254e9
10025a0e:	lea    eax,[esp+0x24]
10025a12:	mov    BYTE PTR [esp+0x60],0x1
10025a17:	call   0x10009f1a
10025a1c:	xor    ebx,ebx
10025a1e:	lea    eax,[esp+0x38]
10025a22:	mov    BYTE PTR [esp+0x60],bl
10025a26:	call   0x1000dc4f
10025a2b:	mov    ecx,DWORD PTR [esp+0x58]
10025a2f:	mov    DWORD PTR fs:0x0,ecx
10025a36:	pop    ecx
10025a37:	pop    edi
10025a38:	pop    esi
10025a39:	pop    ebx
10025a3a:	mov    esp,ebp
10025a3c:	pop    ebp
10025a3d:	ret    0x4
10025a40:	push   0x8
10025a42:	mov    eax,0x100650db
10025a47:	call   0x10059b58
10025a4c:	lea    eax,[ebp+0xb]
10025a4f:	push   eax
10025a50:	call   0x100379b0
10025a55:	and    DWORD PTR [ebp-0x4],0x0
10025a59:	mov    eax,DWORD PTR [ebp+0x8]
10025a5c:	mov    DWORD PTR [ebp-0x14],eax
10025a5f:	mov    BYTE PTR [ebp-0x4],0x2
10025a63:	push   DWORD PTR [eax+0x1c]
10025a66:	call   0x1002578b
10025a6b:	mov    eax,DWORD PTR [ebp-0x14]
10025a6e:	push   DWORD PTR [eax+0x30]
10025a71:	call   DWORD PTR ds:0x10066110
10025a77:	lea    ecx,[ebp-0x14]
10025a7a:	call   0x10015efd
10025a7f:	call   0x100379d0
10025a84:	xor    eax,eax
10025a86:	call   0x10059bfd
10025a8b:	ret    0x4
10025a8e:	push   0x4
10025a90:	call   0x100379e0
10025a95:	pop    ecx
10025a96:	mov    eax,0x10025a6b
10025a9b:	ret    
10025a9c:	push   ebp
10025a9d:	mov    ebp,esp
10025a9f:	push   ecx
10025aa0:	push   ebx
10025aa1:	push   esi
10025aa2:	mov    esi,eax
10025aa4:	mov    eax,DWORD PTR [ebp+0x8]
10025aa7:	xor    ebx,ebx
10025aa9:	push   edi
10025aaa:	mov    DWORD PTR [esi],ebx
10025aac:	call   0x10025b5a
10025ab1:	mov    edi,eax
10025ab3:	cmp    edi,ebx
10025ab5:	je     0x10025b52
10025abb:	mov    eax,DWORD PTR [edi+0x18]
10025abe:	sub    eax,DWORD PTR [edi+0x20]
10025ac1:	cmp    eax,DWORD PTR [ebp+0x10]
10025ac4:	jbe    0x10025ac9
10025ac6:	mov    eax,DWORD PTR [ebp+0x10]
10025ac9:	push   eax
10025aca:	mov    DWORD PTR [esi],eax
10025acc:	mov    eax,DWORD PTR [edi+0x14]
10025acf:	add    eax,DWORD PTR [edi+0x20]
10025ad2:	push   eax
10025ad3:	push   DWORD PTR [ebp+0xc]
10025ad6:	call   0x10045270
10025adb:	add    esp,0xc
10025ade:	cmp    BYTE PTR [ebp+0x14],bl
10025ae1:	jne    0x10025b52
10025ae3:	mov    eax,DWORD PTR [esi]
10025ae5:	add    DWORD PTR [edi+0x20],eax
10025ae8:	mov    eax,DWORD PTR [edi+0x20]
10025aeb:	cmp    eax,DWORD PTR [edi+0x18]
10025aee:	jb     0x10025b52
10025af0:	cmp    DWORD PTR [edi],ebx
10025af2:	je     0x10025b4a
10025af4:	call   0x1002fa60
10025af9:	mov    esi,DWORD PTR [edi]
10025afb:	sub    eax,DWORD PTR [esi+0x58]
10025afe:	push   ebx
10025aff:	sbb    edx,DWORD PTR [esi+0x5c]
10025b02:	push   0x2710
10025b07:	push   edx
10025b08:	push   eax
10025b09:	call   0x1005f430
10025b0e:	push   DWORD PTR [esi+0x64]
10025b11:	mov    ebx,eax
10025b13:	push   DWORD PTR [esi+0x60]
10025b16:	push   ebx
10025b17:	call   DWORD PTR ds:0x10066118
10025b1d:	push   eax
10025b1e:	lea    eax,[esi+0x38]
10025b21:	push   eax
10025b22:	lea    eax,[esi+0x1c]
10025b25:	push   eax
10025b26:	push   esi
10025b27:	push   0x10080f30
10025b2c:	call   0x1001a4c8
10025b31:	mov    edi,DWORD PTR [edi]
10025b33:	cmp    DWORD PTR [edi+0x18],0x10
10025b37:	jb     0x10025b3e
10025b39:	mov    edi,DWORD PTR [edi+0x4]
10025b3c:	jmp    0x10025b41
10025b3e:	add    edi,0x4
10025b41:	push   edi
10025b42:	push   ebx
10025b43:	call   0x1000206e
10025b48:	pop    ecx
10025b49:	pop    ecx
10025b4a:	push   DWORD PTR [ebp+0x8]
10025b4d:	call   0x10025f98
10025b52:	pop    edi
10025b53:	pop    esi
10025b54:	pop    ebx
10025b55:	pop    ecx
10025b56:	pop    ebp
10025b57:	ret    0x10
10025b5a:	push   esi
10025b5b:	push   edi
10025b5c:	mov    esi,eax
10025b5e:	lea    edi,[esi+0x38]
10025b61:	push   edi
10025b62:	call   DWORD PTR ds:0x100660f0
10025b68:	cmp    DWORD PTR [esi+0x28],0x0
10025b6c:	jne    0x10025b7c
10025b6e:	xor    esi,esi
10025b70:	push   edi
10025b71:	call   DWORD PTR ds:0x100660ec
10025b77:	pop    edi
10025b78:	mov    eax,esi
10025b7a:	pop    esi
10025b7b:	ret    
10025b7c:	add    esi,0x18
10025b7f:	call   0x10026036
10025b84:	mov    esi,DWORD PTR [eax]
10025b86:	jmp    0x10025b70
10025b88:	push   edi
10025b89:	lea    edi,[esi+0x38]
10025b8c:	push   edi
10025b8d:	call   DWORD PTR ds:0x100660f0
10025b93:	push   edi
10025b94:	mov    BYTE PTR [esi],0x1
10025b97:	call   DWORD PTR ds:0x100660ec
10025b9d:	pop    edi
10025b9e:	ret    
10025b9f:	push   ebx
10025ba0:	push   edi
10025ba1:	lea    edi,[esi+0x38]
10025ba4:	push   edi
10025ba5:	call   DWORD PTR ds:0x100660f0
10025bab:	mov    bl,BYTE PTR [esi]
10025bad:	push   edi
10025bae:	call   DWORD PTR ds:0x100660ec
10025bb4:	pop    edi
10025bb5:	mov    al,bl
10025bb7:	pop    ebx
10025bb8:	ret    
10025bb9:	push   0x4
10025bbb:	mov    eax,0x100639ac
10025bc0:	call   0x10059b25
10025bc5:	mov    esi,ecx
10025bc7:	lea    edi,[esi+0x38]
10025bca:	push   edi
10025bcb:	mov    DWORD PTR [ebp-0x10],edi
10025bce:	call   DWORD PTR ds:0x100660f0
10025bd4:	xor    ebx,ebx
10025bd6:	mov    DWORD PTR [ebp-0x4],ebx
10025bd9:	cmp    DWORD PTR [esi+0x14],ebx
10025bdc:	jne    0x10025bed
10025bde:	push   edi
10025bdf:	call   DWORD PTR ds:0x100660ec
10025be5:	mov    al,bl
10025be7:	call   0x10059bfd
10025bec:	ret    
10025bed:	add    esi,0x4
10025bf0:	call   0x10026036
10025bf5:	mov    eax,DWORD PTR [eax]
10025bf7:	cmp    eax,ebx
10025bf9:	je     0x10025c01
10025bfb:	push   eax
10025bfc:	call   0x10009f97
10025c01:	mov    eax,DWORD PTR [esi+0x10]
10025c04:	cmp    eax,ebx
10025c06:	je     0x10025c26
10025c08:	inc    DWORD PTR [esi+0xc]
10025c0b:	mov    edx,DWORD PTR [esi+0x8]
10025c0e:	mov    ecx,DWORD PTR [esi+0xc]
10025c11:	shl    edx,0x2
10025c14:	cmp    edx,ecx
10025c16:	ja     0x10025c1b
10025c18:	mov    DWORD PTR [esi+0xc],ebx
10025c1b:	dec    eax
10025c1c:	cmp    eax,ebx
10025c1e:	mov    DWORD PTR [esi+0x10],eax
10025c21:	jne    0x10025c26
10025c23:	mov    DWORD PTR [esi+0xc],ebx
10025c26:	mov    bl,0x1
10025c28:	jmp    0x10025bde
10025c2a:	push   0xc
10025c2c:	mov    eax,0x100600e8
10025c31:	call   0x10059b25
10025c36:	mov    edi,ecx
10025c38:	and    DWORD PTR [ebp-0x4],0x0
10025c3c:	cmp    DWORD PTR [edi+0x18],0x0
10025c40:	jne    0x10025c49
10025c42:	call   0x10009f5d
10025c47:	jmp    0x10025c80
10025c49:	lea    ebx,[esi+0x38]
10025c4c:	push   ebx
10025c4d:	mov    DWORD PTR [ebp-0x14],ebx
10025c50:	call   DWORD PTR ds:0x100660f0
10025c56:	lea    eax,[ebp-0x10]
10025c59:	mov    BYTE PTR [ebp-0x4],0x1
10025c5d:	and    DWORD PTR [ebp-0x18],0x0
10025c61:	push   eax
10025c62:	lea    eax,[esi+0x18]
10025c65:	mov    DWORD PTR [ebp-0x10],edi
10025c68:	call   0x100260d3
10025c6d:	mov    eax,DWORD PTR [esi+0x50]
10025c70:	push   DWORD PTR [eax+0x28]
10025c73:	call   DWORD PTR ds:0x10066110
10025c79:	push   ebx
10025c7a:	call   DWORD PTR ds:0x100660ec
10025c80:	call   0x10059bfd
10025c85:	ret    
10025c86:	push   0xa8
10025c8b:	mov    eax,0x100628a7
10025c90:	call   0x10059b25
10025c95:	mov    edi,ecx
10025c97:	mov    eax,DWORD PTR [ebp+0x8]
10025c9a:	add    eax,0x38
10025c9d:	xor    esi,esi
10025c9f:	mov    DWORD PTR [ebp-0x10],esi
10025ca2:	push   eax
10025ca3:	mov    BYTE PTR [ebp-0x11],0x0
10025ca7:	mov    DWORD PTR [ebp-0x20],eax
10025caa:	mov    DWORD PTR [ebp-0x24],eax
10025cad:	call   DWORD PTR ds:0x100660f0
10025cb3:	mov    eax,DWORD PTR [ebp+0x8]
10025cb6:	mov    DWORD PTR [ebp-0x4],esi
10025cb9:	cmp    DWORD PTR [eax+0x28],esi
10025cbc:	jne    0x10025cc7
10025cbe:	mov    BYTE PTR [ebp-0x11],0x1
10025cc2:	jmp    0x10025e33
10025cc7:	push   0x68
10025cc9:	call   0x1004358e
10025cce:	pop    ecx
10025ccf:	mov    DWORD PTR [ebp-0x1c],eax
10025cd2:	cmp    eax,esi
10025cd4:	mov    BYTE PTR [ebp-0x4],0x1
10025cd8:	je     0x10025daf
10025cde:	push   0x3d534932
10025ce3:	push   0x1007177c
10025ce8:	call   0x100042bd
10025ced:	push   0x73eb065a
10025cf2:	push   eax
10025cf3:	call   0x100042bd
10025cf8:	push   0x21d9517c
10025cfd:	push   eax
10025cfe:	call   0x100042bd
10025d03:	push   0x68b33090
10025d08:	push   eax
10025d09:	call   0x100042bd
10025d0e:	push   eax
10025d0f:	push   0x7
10025d11:	push   0x1006d698
10025d16:	call   0x100042cf
10025d1b:	add    esp,0x2c
10025d1e:	push   eax
10025d1f:	lea    ecx,[ebp-0x44]
10025d22:	call   0x100011c8
10025d27:	mov    BYTE PTR [ebp-0x4],0x2
10025d2b:	mov    eax,DWORD PTR [edi+0x4]
10025d2e:	lea    ecx,[ebp-0x7c]
10025d31:	push   ecx
10025d32:	mov    DWORD PTR [ebp-0x10],0x1
10025d39:	call   0x100199c9
10025d3e:	mov    DWORD PTR [ebp-0x18],eax
10025d41:	push   0x3
10025d43:	pop    eax
10025d44:	mov    DWORD PTR [ebp-0x4],eax
10025d47:	mov    DWORD PTR [ebp-0x10],eax
10025d4a:	push   esi
10025d4b:	lea    eax,[ebp-0x44]
10025d4e:	push   eax
10025d4f:	lea    eax,[ebp-0x60]
10025d52:	push   eax
10025d53:	lea    eax,[ebx+0x18]
10025d56:	call   0x10008602
10025d5b:	mov    esi,eax
10025d5d:	mov    DWORD PTR [ebp-0x4],0x4
10025d64:	push   ebx
10025d65:	lea    ecx,[ebp-0x98]
10025d6b:	mov    DWORD PTR [ebp-0x10],0x7
10025d72:	call   0x10008c7d
10025d77:	mov    edx,eax
10025d79:	mov    DWORD PTR [ebp-0x4],0x5
10025d80:	mov    ecx,edi
10025d82:	mov    DWORD PTR [ebp-0x10],0xf
10025d89:	call   0x1000912a
10025d8e:	push   eax
10025d8f:	mov    ecx,ebx
10025d91:	call   0x1000886b
10025d96:	push   eax
10025d97:	push   DWORD PTR [edi+0x14]
10025d9a:	push   DWORD PTR [edi+0x10]
10025d9d:	push   DWORD PTR [ebp-0x18]
10025da0:	push   esi
10025da1:	push   edx
10025da2:	push   DWORD PTR [ebp-0x1c]
10025da5:	call   0x10024c01
10025daa:	mov    DWORD PTR [ebp-0x18],eax
10025dad:	jmp    0x10025db2
10025daf:	mov    DWORD PTR [ebp-0x18],esi
10025db2:	mov    esi,DWORD PTR [ebp+0x8]
10025db5:	add    esi,0x18
10025db8:	call   0x10026036
10025dbd:	mov    eax,DWORD PTR [eax]
10025dbf:	mov    esi,DWORD PTR [eax]
10025dc1:	cmp    DWORD PTR [ebp-0x18],esi
10025dc4:	mov    DWORD PTR [ebp+0x8],eax
10025dc7:	je     0x10025dd5
10025dc9:	test   esi,esi
10025dcb:	je     0x10025dd5
10025dcd:	call   0x10009f30
10025dd2:	mov    eax,DWORD PTR [ebp+0x8]
10025dd5:	test   BYTE PTR [ebp-0x10],0x8
10025dd9:	mov    ecx,DWORD PTR [ebp-0x18]
10025ddc:	mov    DWORD PTR [eax],ecx
10025dde:	je     0x10025df3
10025de0:	and    DWORD PTR [ebp-0x10],0xfffffff7
10025de4:	push   0x0
10025de6:	push   0x1
10025de8:	lea    ecx,[ebp-0x98]
10025dee:	call   0x100012eb
10025df3:	test   BYTE PTR [ebp-0x10],0x4
10025df7:	je     0x10025e09
10025df9:	and    DWORD PTR [ebp-0x10],0xfffffffb
10025dfd:	push   0x0
10025dff:	push   0x1
10025e01:	lea    ecx,[ebp-0x60]
10025e04:	call   0x100012eb
10025e09:	test   BYTE PTR [ebp-0x10],0x2
10025e0d:	je     0x10025e1f
10025e0f:	and    DWORD PTR [ebp-0x10],0xfffffffd
10025e13:	push   0x0
10025e15:	push   0x1
10025e17:	lea    ecx,[ebp-0x7c]
10025e1a:	call   0x100012eb
10025e1f:	test   BYTE PTR [ebp-0x10],0x1
10025e23:	je     0x10025e31
10025e25:	push   0x0
10025e27:	push   0x1
10025e29:	lea    ecx,[ebp-0x44]
10025e2c:	call   0x100012eb
10025e31:	xor    esi,esi
10025e33:	push   DWORD PTR [ebp-0x20]
10025e36:	or     DWORD PTR [ebp-0x4],0xffffffff
10025e3a:	call   DWORD PTR ds:0x100660ec
10025e40:	cmp    BYTE PTR [ebp-0x11],0x0
10025e44:	je     0x10025f90
10025e4a:	mov    eax,DWORD PTR [edi+0x10]
10025e4d:	mov    DWORD PTR [ebp-0x28],eax
10025e50:	mov    eax,DWORD PTR [edi+0x14]
10025e53:	mov    DWORD PTR [ebp-0x24],eax
10025e56:	call   0x1002fa60
10025e5b:	sub    eax,DWORD PTR [ebp-0x28]
10025e5e:	push   esi
10025e5f:	sbb    edx,DWORD PTR [ebp-0x24]
10025e62:	push   0x2710
10025e67:	push   edx
10025e68:	push   eax
10025e69:	call   0x1005f430
10025e6e:	push   0x19843e04
10025e73:	push   0x100717b8
10025e78:	mov    DWORD PTR [ebp+0x8],eax
10025e7b:	call   0x100042bd
10025e80:	push   0x25b38220
10025e85:	push   eax
10025e86:	call   0x100042bd
10025e8b:	push   0x7593a460
10025e90:	push   eax
10025e91:	call   0x100042bd
10025e96:	push   0x251d8d6c
10025e9b:	push   eax
10025e9c:	call   0x100042bd
10025ea1:	push   eax
10025ea2:	push   0x7
10025ea4:	push   0x1006d698
10025ea9:	call   0x100042cf
10025eae:	add    esp,0x2c
10025eb1:	push   eax
10025eb2:	lea    ecx,[ebp-0x44]
10025eb5:	call   0x100011c8
10025eba:	lea    ecx,[ebp-0x98]
10025ec0:	mov    DWORD PTR [ebp-0x4],0xa
10025ec7:	mov    eax,DWORD PTR [edi+0x4]
10025eca:	push   ecx
10025ecb:	call   0x100199c9
10025ed0:	mov    DWORD PTR [ebp-0x20],eax
10025ed3:	push   esi
10025ed4:	lea    eax,[ebp-0x44]
10025ed7:	push   eax
10025ed8:	lea    eax,[ebp-0x60]
10025edb:	push   eax
10025edc:	lea    eax,[ebx+0x18]
10025edf:	mov    BYTE PTR [ebp-0x4],0xb
10025ee3:	call   0x10008602
10025ee8:	mov    DWORD PTR [ebp-0x1c],eax
10025eeb:	push   ebx
10025eec:	lea    ecx,[ebp-0x7c]
10025eef:	mov    BYTE PTR [ebp-0x4],0xc
10025ef3:	call   0x10008c7d
10025ef8:	mov    DWORD PTR [ebp-0x18],eax
10025efb:	mov    ecx,edi
10025efd:	mov    BYTE PTR [ebp-0x4],0xd
10025f01:	call   0x1000912a
10025f06:	push   eax
10025f07:	mov    ecx,ebx
10025f09:	call   0x1000886b
10025f0e:	push   eax
10025f0f:	push   DWORD PTR [ebp+0x8]
10025f12:	call   DWORD PTR ds:0x10066118
10025f18:	push   eax
10025f19:	push   DWORD PTR [ebp-0x20]
10025f1c:	push   DWORD PTR [ebp-0x1c]
10025f1f:	push   DWORD PTR [ebp-0x18]
10025f22:	push   0x10080f30
10025f27:	call   0x1001a4c8
10025f2c:	xor    edi,edi
10025f2e:	push   esi
10025f2f:	inc    edi
10025f30:	push   edi
10025f31:	lea    ecx,[ebp-0x7c]
10025f34:	call   0x100012eb
10025f39:	push   esi
10025f3a:	push   edi
10025f3b:	lea    ecx,[ebp-0x60]
10025f3e:	call   0x100012eb
10025f43:	push   esi
10025f44:	push   edi
10025f45:	lea    ecx,[ebp-0x98]
10025f4b:	call   0x100012eb
10025f50:	or     DWORD PTR [ebp-0x4],0xffffffff
10025f54:	push   esi
10025f55:	push   edi
10025f56:	lea    ecx,[ebp-0x44]
10025f59:	call   0x100012eb
10025f5e:	push   ebx
10025f5f:	lea    ecx,[ebp-0xb4]
10025f65:	call   0x10008c7d
10025f6a:	cmp    DWORD PTR [eax+0x18],0x10
10025f6e:	jb     0x10025f75
10025f70:	mov    eax,DWORD PTR [eax+0x4]
10025f73:	jmp    0x10025f78
10025f75:	add    eax,0x4
10025f78:	push   eax
10025f79:	push   DWORD PTR [ebp+0x8]
10025f7c:	call   0x1000206e
10025f81:	pop    ecx
10025f82:	pop    ecx
10025f83:	push   esi
10025f84:	push   edi
10025f85:	lea    ecx,[ebp-0xb4]
10025f8b:	call   0x100012eb
10025f90:	call   0x10059bfd
10025f95:	ret    0x4
10025f98:	push   ebx
10025f99:	push   ebp
10025f9a:	mov    ebp,DWORD PTR [esp+0xc]
10025f9e:	lea    eax,[ebp+0x38]
10025fa1:	push   eax
10025fa2:	mov    DWORD PTR [esp+0x10],eax
10025fa6:	call   DWORD PTR ds:0x100660f0
10025fac:	xor    ebx,ebx
10025fae:	cmp    DWORD PTR [ebp+0x28],ebx
10025fb1:	jne    0x10025fc4
10025fb3:	push   DWORD PTR [esp+0xc]
10025fb7:	call   DWORD PTR ds:0x100660ec
10025fbd:	pop    ebp
10025fbe:	mov    al,bl
10025fc0:	pop    ebx
10025fc1:	ret    0x4
10025fc4:	push   esi
10025fc5:	push   edi
10025fc6:	lea    esi,[ebp+0x18]
10025fc9:	call   0x10026036
10025fce:	mov    edi,DWORD PTR [eax]
10025fd0:	cmp    edi,ebx
10025fd2:	je     0x10025fd9
10025fd4:	call   0x10009f5d
10025fd9:	mov    eax,DWORD PTR [esi+0x10]
10025fdc:	cmp    eax,ebx
10025fde:	je     0x10025ffe
10025fe0:	inc    DWORD PTR [esi+0xc]
10025fe3:	mov    edx,DWORD PTR [esi+0x8]
10025fe6:	mov    ecx,DWORD PTR [esi+0xc]
10025fe9:	shl    edx,0x2
10025fec:	cmp    edx,ecx
10025fee:	ja     0x10025ff3
10025ff0:	mov    DWORD PTR [esi+0xc],ebx
10025ff3:	dec    eax
10025ff4:	cmp    eax,ebx
10025ff6:	mov    DWORD PTR [esi+0x10],eax
10025ff9:	jne    0x10025ffe
10025ffb:	mov    DWORD PTR [esi+0xc],ebx
10025ffe:	cmp    DWORD PTR [ebp+0x28],ebx
10026001:	pop    edi
10026002:	pop    esi
10026003:	jne    0x10026016
10026005:	cmp    BYTE PTR [ebp+0x1],bl
10026008:	je     0x10026016
1002600a:	mov    eax,DWORD PTR [ebp+0x50]
1002600d:	push   DWORD PTR [eax+0x30]
10026010:	call   DWORD PTR ds:0x10066110
10026016:	mov    bl,0x1
10026018:	jmp    0x10025fb3
1002601a:	mov    eax,esi
1002601c:	mov    BYTE PTR [esi+0x1],0x1
10026020:	call   0x10025b5a
10026025:	test   eax,eax
10026027:	jne    0x10026035
10026029:	mov    eax,DWORD PTR [esi+0x50]
1002602c:	push   DWORD PTR [eax+0x30]
1002602f:	call   DWORD PTR ds:0x10066110
10026035:	ret    
10026036:	mov    eax,DWORD PTR [esi+0x10]
10026039:	push   ebx
1002603a:	push   ebp
1002603b:	mov    ebp,DWORD PTR [esi+0xc]
1002603e:	add    eax,ebp
10026040:	cmp    ebp,eax
10026042:	push   edi
10026043:	jbe    0x1002604a
10026045:	call   0x100434a0
1002604a:	mov    eax,DWORD PTR [esi+0x10]
1002604d:	add    eax,DWORD PTR [esi+0xc]
10026050:	mov    edi,ebp
10026052:	mov    ebx,ebp
10026054:	shr    edi,0x2
10026057:	and    ebx,0x3
1002605a:	cmp    ebp,eax
1002605c:	jb     0x10026063
1002605e:	call   0x100434a0
10026063:	mov    eax,DWORD PTR [esi+0x8]
10026066:	cmp    eax,edi
10026068:	ja     0x1002606c
1002606a:	sub    edi,eax
1002606c:	mov    eax,DWORD PTR [esi+0x4]
1002606f:	mov    eax,DWORD PTR [eax+edi*4]
10026072:	pop    edi
10026073:	pop    ebp
10026074:	lea    eax,[eax+ebx*4]
10026077:	pop    ebx
10026078:	ret    
10026079:	push   ebx
1002607a:	xor    ebx,ebx
1002607c:	jmp    0x10026090
1002607e:	mov    eax,DWORD PTR [esi+0x10]
10026081:	cmp    eax,ebx
10026083:	je     0x10026090
10026085:	dec    eax
10026086:	cmp    eax,ebx
10026088:	mov    DWORD PTR [esi+0x10],eax
1002608b:	jne    0x10026090
1002608d:	mov    DWORD PTR [esi+0xc],ebx
10026090:	cmp    DWORD PTR [esi+0x10],ebx
10026093:	jne    0x1002607e
10026095:	push   edi
10026096:	mov    edi,DWORD PTR [esi+0x8]
10026099:	jmp    0x100260ab
1002609b:	dec    edi
1002609c:	lea    eax,[eax+edi*4]
1002609f:	cmp    DWORD PTR [eax],ebx
100260a1:	je     0x100260ab
100260a3:	push   DWORD PTR [eax]
100260a5:	call   0x10042f82
100260aa:	pop    ecx
100260ab:	cmp    edi,ebx
100260ad:	mov    eax,DWORD PTR [esi+0x4]
100260b0:	ja     0x1002609b
100260b2:	cmp    eax,ebx
100260b4:	pop    edi
100260b5:	je     0x100260be
100260b7:	push   eax
100260b8:	call   0x10042f82
100260bd:	pop    ecx
100260be:	mov    DWORD PTR [esi+0x8],ebx
100260c1:	mov    DWORD PTR [esi+0x4],ebx
100260c4:	pop    ebx
100260c5:	ret    
100260c6:	mov    ecx,DWORD PTR [eax]
100260c8:	test   ecx,ecx
100260ca:	je     0x100260d2
100260cc:	mov    eax,DWORD PTR [ecx]
100260ce:	push   0x1
100260d0:	call   DWORD PTR [eax]
100260d2:	ret    
100260d3:	push   esi
100260d4:	mov    esi,eax
100260d6:	mov    eax,DWORD PTR [esi+0x10]
100260d9:	mov    ecx,DWORD PTR [esi+0xc]
100260dc:	add    ecx,eax
100260de:	test   cl,0x3
100260e1:	push   edi
100260e2:	jne    0x100260f4
100260e4:	add    eax,0x4
100260e7:	shr    eax,0x2
100260ea:	cmp    DWORD PTR [esi+0x8],eax
100260ed:	ja     0x100260f4
100260ef:	call   0x10026146
100260f4:	mov    edi,DWORD PTR [esi+0xc]
100260f7:	add    edi,DWORD PTR [esi+0x10]
100260fa:	mov    ecx,DWORD PTR [esi+0x8]
100260fd:	mov    eax,edi
100260ff:	shr    eax,0x2
10026102:	cmp    ecx,eax
10026104:	ja     0x10026108
10026106:	sub    eax,ecx
10026108:	push   ebx
10026109:	mov    ebx,eax
1002610b:	mov    eax,DWORD PTR [esi+0x4]
1002610e:	shl    ebx,0x2
10026111:	cmp    DWORD PTR [ebx+eax*1],0x0
10026115:	jne    0x10026125
10026117:	push   0x10
10026119:	call   0x1004358e
1002611e:	pop    ecx
1002611f:	mov    ecx,DWORD PTR [esi+0x4]
10026122:	mov    DWORD PTR [ebx+ecx*1],eax
10026125:	mov    eax,DWORD PTR [esi+0x4]
10026128:	mov    eax,DWORD PTR [eax+ebx*1]
1002612b:	and    edi,0x3
1002612e:	lea    edi,[eax+edi*4]
10026131:	test   edi,edi
10026133:	pop    ebx
10026134:	je     0x1002613e
10026136:	mov    eax,DWORD PTR [esp+0xc]
1002613a:	mov    eax,DWORD PTR [eax]
1002613c:	mov    DWORD PTR [edi],eax
1002613e:	inc    DWORD PTR [esi+0x10]
10026141:	pop    edi
10026142:	pop    esi
10026143:	ret    0x4
10026146:	push   ebp
10026147:	mov    ebp,esp
10026149:	sub    esp,0xc
1002614c:	mov    eax,DWORD PTR [esi+0x8]
1002614f:	push   ebx
10026150:	push   edi
10026151:	mov    edx,0xfffffff
10026156:	xor    edi,edi
10026158:	mov    ecx,edx
1002615a:	inc    edi
1002615b:	sub    ecx,eax
1002615d:	cmp    ecx,edi
1002615f:	mov    DWORD PTR [ebp-0x4],edi
10026162:	jae    0x10026169
10026164:	jmp    0x1002622d
10026169:	mov    ecx,eax
1002616b:	shr    ecx,1
1002616d:	cmp    ecx,0x8
10026170:	jae    0x10026175
10026172:	push   0x8
10026174:	pop    ecx
10026175:	cmp    ecx,edi
10026177:	jbe    0x10026182
10026179:	sub    edx,ecx
1002617b:	cmp    eax,edx
1002617d:	ja     0x10026182
1002617f:	mov    DWORD PTR [ebp-0x4],ecx
10026182:	mov    ebx,DWORD PTR [esi+0xc]
10026185:	mov    ecx,DWORD PTR [ebp-0x4]
10026188:	add    ecx,eax
1002618a:	shr    ebx,0x2
1002618d:	call   0x1000a4f4
10026192:	mov    edx,DWORD PTR [esi+0x4]
10026195:	mov    edi,ebx
10026197:	shl    edi,0x2
1002619a:	mov    DWORD PTR [ebp-0x8],eax
1002619d:	lea    ecx,[edi+eax*1]
100261a0:	mov    eax,DWORD PTR [esi+0x8]
100261a3:	lea    eax,[edx+eax*4]
100261a6:	add    edx,edi
100261a8:	push   edx
100261a9:	call   0x1002626c
100261ae:	mov    edx,DWORD PTR [esi+0x4]
100261b1:	pop    ecx
100261b2:	mov    ecx,eax
100261b4:	mov    eax,DWORD PTR [ebp-0x4]
100261b7:	cmp    ebx,eax
100261b9:	push   edx
100261ba:	ja     0x100261e2
100261bc:	sub    eax,ebx
100261be:	mov    DWORD PTR [ebp-0xc],eax
100261c1:	lea    eax,[edx+edi*1]
100261c4:	call   0x1002626c
100261c9:	pop    ecx
100261ca:	mov    ecx,DWORD PTR [ebp-0xc]
100261cd:	test   ecx,ecx
100261cf:	mov    edi,eax
100261d1:	jbe    0x100261d7
100261d3:	xor    eax,eax
100261d5:	rep stos DWORD PTR es:[edi],eax
100261d7:	test   ebx,ebx
100261d9:	jbe    0x1002620f
100261db:	mov    edi,DWORD PTR [ebp-0x8]
100261de:	mov    ecx,ebx
100261e0:	jmp    0x1002620b
100261e2:	mov    ebx,eax
100261e4:	shl    ebx,0x2
100261e7:	lea    eax,[ebx+edx*1]
100261ea:	call   0x1002626c
100261ef:	mov    ecx,DWORD PTR [esi+0x4]
100261f2:	add    ebx,ecx
100261f4:	lea    eax,[ecx+edi*1]
100261f7:	mov    ecx,DWORD PTR [ebp-0x8]
100261fa:	push   ebx
100261fb:	call   0x1002626c
10026200:	pop    ecx
10026201:	pop    ecx
10026202:	mov    ecx,DWORD PTR [ebp-0x4]
10026205:	test   ecx,ecx
10026207:	mov    edi,eax
10026209:	jbe    0x1002620f
1002620b:	xor    eax,eax
1002620d:	rep stos DWORD PTR es:[edi],eax
1002620f:	mov    eax,DWORD PTR [esi+0x4]
10026212:	test   eax,eax
10026214:	pop    edi
10026215:	pop    ebx
10026216:	je     0x1002621f
10026218:	push   eax
10026219:	call   0x10042f82
1002621e:	pop    ecx
1002621f:	mov    eax,DWORD PTR [ebp-0x8]
10026222:	mov    DWORD PTR [esi+0x4],eax
10026225:	mov    eax,DWORD PTR [ebp-0x4]
10026228:	add    DWORD PTR [esi+0x8],eax
1002622b:	leave  
1002622c:	ret    
1002622d:	push   0x44
1002622f:	mov    eax,0x10060374
10026234:	call   0x10059b25
10026239:	push   0x100717f8
1002623e:	lea    ecx,[ebp-0x28]
10026241:	call   0x100011c8
10026246:	and    DWORD PTR [ebp-0x4],0x0
1002624a:	lea    eax,[ebp-0x28]
1002624d:	push   eax
1002624e:	lea    ecx,[ebp-0x50]
10026251:	call   0x10001065
10026256:	push   0x10074ec8
1002625b:	lea    eax,[ebp-0x50]
1002625e:	push   eax
1002625f:	mov    DWORD PTR [ebp-0x50],0x1006b96c
10026266:	call   0x10047aa4
1002626b:	int3   
1002626c:	sub    eax,DWORD PTR [esp+0x4]
10026270:	push   esi
10026271:	sar    eax,0x2
10026274:	lea    eax,[eax*4+0x0]
1002627b:	lea    esi,[eax+ecx*1]
1002627e:	je     0x1002628f
10026280:	push   eax
10026281:	push   DWORD PTR [esp+0xc]
10026285:	push   eax
10026286:	push   ecx
10026287:	call   0x10042f96
1002628c:	add    esp,0x10
1002628f:	mov    eax,esi
10026291:	pop    esi
10026292:	ret    
10026293:	push   0x34
10026295:	mov    eax,0x100643f4
1002629a:	call   0x10059b25
1002629f:	push   DWORD PTR [ebp+0xc]
100262a2:	mov    BYTE PTR [ebp-0xd],0x0
100262a6:	call   0x1000890d
100262ab:	mov    DWORD PTR [ebp-0x20],eax
100262ae:	push   DWORD PTR [ebp+0xc]
100262b1:	xor    esi,esi
100262b3:	mov    DWORD PTR [ebp-0x4],esi
100262b6:	call   0x1000890d
100262bb:	mov    DWORD PTR [ebp-0x14],eax
100262be:	mov    DWORD PTR [ebp-0x1c],esi
100262c1:	mov    DWORD PTR [ebp-0x18],esi
100262c4:	mov    ecx,DWORD PTR [ebp+0x8]
100262c7:	mov    eax,DWORD PTR [ecx+0x4]
100262ca:	mov    edi,DWORD PTR [eax]
100262cc:	mov    esi,ecx
100262ce:	mov    DWORD PTR [ebp-0x24],edi
100262d1:	mov    DWORD PTR [ebp-0x28],esi
100262d4:	test   esi,esi
100262d6:	mov    ebx,DWORD PTR [ecx+0x4]
100262d9:	je     0x100262df
100262db:	cmp    esi,ecx
100262dd:	je     0x100262e4
100262df:	call   0x100434a0
100262e4:	cmp    edi,ebx
100262e6:	je     0x1002638e
100262ec:	mov    eax,DWORD PTR [ebp-0x20]
100262ef:	and    DWORD PTR [ebp-0x38],0x0
100262f3:	and    DWORD PTR [ebp-0x34],0x0
100262f7:	mov    DWORD PTR [ebp-0x40],eax
100262fa:	mov    eax,DWORD PTR [ebp-0x14]
100262fd:	mov    DWORD PTR [ebp-0x3c],eax
10026300:	mov    eax,DWORD PTR [ebp+0x10]
10026303:	mov    DWORD PTR [ebp-0x30],eax
10026306:	mov    BYTE PTR [ebp-0x2c],0x0
1002630a:	test   esi,esi
1002630c:	mov    BYTE PTR [ebp-0x4],0x4
10026310:	jne    0x10026317
10026312:	call   0x100434a0
10026317:	cmp    edi,DWORD PTR [esi+0x4]
1002631a:	jne    0x10026321
1002631c:	call   0x100434a0
10026321:	mov    edi,DWORD PTR [edi+0x8]
10026324:	mov    eax,DWORD PTR [edi]
10026326:	lea    ecx,[ebp-0x40]
10026329:	push   ecx
1002632a:	mov    ecx,edi
1002632c:	call   DWORD PTR [eax]
1002632e:	test   al,al
10026330:	je     0x100263c5
10026336:	push   DWORD PTR [ebp-0x14]
10026339:	mov    BYTE PTR [ebp-0xd],0x1
1002633d:	push   DWORD PTR [ebp+0xc]
10026340:	call   0x100089d1
10026345:	mov    eax,DWORD PTR [ebp-0x38]
10026348:	and    DWORD PTR [ebp-0x38],0x0
1002634c:	mov    ebx,eax
1002634e:	lea    edi,[ebp-0x1c]
10026351:	call   0x100268d4
10026356:	mov    ebx,DWORD PTR [ebp-0x34]
10026359:	mov    edi,DWORD PTR [ebp-0x18]
1002635c:	and    DWORD PTR [ebp-0x34],0x0
10026360:	cmp    ebx,edi
10026362:	je     0x1002636d
10026364:	test   edi,edi
10026366:	je     0x1002636d
10026368:	call   0x10009f5d
1002636d:	cmp    BYTE PTR [ebp-0x2c],0x0
10026371:	mov    DWORD PTR [ebp-0x18],ebx
10026374:	je     0x100263ed
10026376:	mov    BYTE PTR [ebp-0x4],0x3
1002637a:	mov    edi,DWORD PTR [ebp-0x34]
1002637d:	test   edi,edi
1002637f:	je     0x10026386
10026381:	call   0x10009f5d
10026386:	lea    eax,[ebp-0x38]
10026389:	call   0x10009f1a
1002638e:	cmp    BYTE PTR [ebp-0xd],0x0
10026392:	je     0x1002643a
10026398:	mov    eax,DWORD PTR [ebp-0x1c]
1002639b:	test   eax,eax
1002639d:	je     0x1002641b
1002639f:	mov    ecx,DWORD PTR [eax+0x34]
100263a2:	mov    ecx,DWORD PTR [ecx+0x18]
100263a5:	mov    ebx,DWORD PTR [ebp+0x14]
100263a8:	mov    DWORD PTR [eax+0x38],ecx
100263ab:	mov    esi,DWORD PTR [eax+0x34]
100263ae:	and    DWORD PTR [eax+0x34],0x0
100263b2:	mov    edi,DWORD PTR [ebx]
100263b4:	cmp    esi,edi
100263b6:	je     0x100263c1
100263b8:	test   edi,edi
100263ba:	je     0x100263c1
100263bc:	call   0x10009f5d
100263c1:	mov    DWORD PTR [ebx],esi
100263c3:	jmp    0x1002643a
100263c5:	mov    esi,DWORD PTR [ebp+0xc]
100263c8:	mov    edi,DWORD PTR [ebp-0x14]
100263cb:	call   0x10008b2e
100263d0:	test   al,al
100263d2:	jne    0x100263ed
100263d4:	push   esi
100263d5:	call   0x1000890d
100263da:	mov    esi,eax
100263dc:	cmp    esi,edi
100263de:	je     0x100263ea
100263e0:	test   edi,edi
100263e2:	je     0x100263ea
100263e4:	push   edi
100263e5:	call   0x10009f97
100263ea:	mov    DWORD PTR [ebp-0x14],esi
100263ed:	mov    BYTE PTR [ebp-0x4],0x3
100263f1:	mov    edi,DWORD PTR [ebp-0x34]
100263f4:	test   edi,edi
100263f6:	je     0x100263fd
100263f8:	call   0x10009f5d
100263fd:	lea    eax,[ebp-0x38]
10026400:	call   0x10009f1a
10026405:	lea    esi,[ebp-0x28]
10026408:	call   0x100268f0
1002640d:	mov    edi,DWORD PTR [ebp-0x24]
10026410:	mov    esi,DWORD PTR [ebp-0x28]
10026413:	mov    ecx,DWORD PTR [ebp+0x8]
10026416:	jmp    0x100262d4
1002641b:	mov    ebx,DWORD PTR [ebp-0x18]
1002641e:	test   ebx,ebx
10026420:	je     0x10026446
10026422:	mov    esi,DWORD PTR [ebp+0x14]
10026425:	mov    edi,DWORD PTR [esi]
10026427:	and    DWORD PTR [ebp-0x18],0x0
1002642b:	cmp    ebx,edi
1002642d:	je     0x10026438
1002642f:	test   edi,edi
10026431:	je     0x10026438
10026433:	call   0x10009f5d
10026438:	mov    DWORD PTR [esi],ebx
1002643a:	mov    edi,DWORD PTR [ebp-0x18]
1002643d:	test   edi,edi
1002643f:	je     0x10026446
10026441:	call   0x10009f5d
10026446:	lea    eax,[ebp-0x1c]
10026449:	mov    BYTE PTR [ebp-0x4],0x1
1002644d:	call   0x10009f1a
10026452:	mov    BYTE PTR [ebp-0x4],0x0
10026456:	cmp    DWORD PTR [ebp-0x14],0x0
1002645a:	je     0x10026464
1002645c:	push   DWORD PTR [ebp-0x14]
1002645f:	call   0x10009f97
10026464:	or     DWORD PTR [ebp-0x4],0xffffffff
10026468:	cmp    DWORD PTR [ebp-0x20],0x0
1002646c:	je     0x10026476
1002646e:	push   DWORD PTR [ebp-0x20]
10026471:	call   0x10009f97
10026476:	mov    al,BYTE PTR [ebp-0xd]
10026479:	call   0x10059bfd
1002647e:	ret    
1002647f:	push   edi
10026480:	mov    edi,DWORD PTR [esi+0xc]
10026483:	test   edi,edi
10026485:	je     0x1002648c
10026487:	call   0x10009f5d
1002648c:	lea    eax,[esi+0x8]
1002648f:	pop    edi
10026490:	jmp    0x10009f1a
10026495:	push   0x30
10026497:	mov    eax,0x100643b1
1002649c:	call   0x10059b25
100264a1:	push   DWORD PTR [ebp+0x14]
100264a4:	mov    BYTE PTR [ebp-0xd],0x0
100264a8:	call   0x10009139
100264ad:	mov    DWORD PTR [ebp-0x18],eax
100264b0:	push   DWORD PTR [ebp+0x14]
100264b3:	and    DWORD PTR [ebp-0x4],0x0
100264b7:	call   0x10009139
100264bc:	mov    DWORD PTR [ebp-0x14],eax
100264bf:	mov    ebx,DWORD PTR [ebp+0x8]
100264c2:	mov    BYTE PTR [ebp-0x4],0x1
100264c6:	mov    eax,DWORD PTR [ebx+0x4]
100264c9:	mov    esi,DWORD PTR [eax]
100264cb:	mov    edi,ebx
100264cd:	mov    DWORD PTR [ebp-0x1c],esi
100264d0:	mov    DWORD PTR [ebp-0x20],edi
100264d3:	test   edi,edi
100264d5:	mov    eax,DWORD PTR [ebx+0x4]
100264d8:	mov    DWORD PTR [ebp-0x24],eax
100264db:	je     0x100264e1
100264dd:	cmp    edi,ebx
100264df:	je     0x100264e6
100264e1:	call   0x100434a0
100264e6:	cmp    esi,DWORD PTR [ebp-0x24]
100264e9:	je     0x10026550
100264eb:	test   edi,edi
100264ed:	mov    ecx,DWORD PTR [ebp+0xc]
100264f0:	mov    eax,DWORD PTR [ebp+0x18]
100264f3:	mov    al,BYTE PTR [eax]
100264f5:	mov    DWORD PTR [ebp-0x3c],ecx
100264f8:	mov    ecx,DWORD PTR [ebp-0x18]
100264fb:	mov    DWORD PTR [ebp-0x38],ecx
100264fe:	mov    ecx,DWORD PTR [ebp-0x14]
10026501:	mov    DWORD PTR [ebp-0x34],ecx
10026504:	mov    ecx,DWORD PTR [ebp+0x10]
10026507:	mov    DWORD PTR [ebp-0x30],ecx
1002650a:	mov    BYTE PTR [ebp-0x2c],al
1002650d:	mov    BYTE PTR [ebp-0x2b],0x0
10026511:	jne    0x10026518
10026513:	call   0x100434a0
10026518:	cmp    esi,DWORD PTR [edi+0x4]
1002651b:	jne    0x10026522
1002651d:	call   0x100434a0
10026522:	mov    esi,DWORD PTR [esi+0x8]
10026525:	mov    eax,DWORD PTR [esi]
10026527:	lea    ecx,[ebp-0x3c]
1002652a:	push   ecx
1002652b:	mov    ecx,esi
1002652d:	call   DWORD PTR [eax]
1002652f:	test   al,al
10026531:	je     0x10026571
10026533:	mov    al,BYTE PTR [ebp-0x2c]
10026536:	mov    ecx,DWORD PTR [ebp+0x18]
10026539:	push   DWORD PTR [ebp-0x14]
1002653c:	mov    edi,DWORD PTR [ebp+0x14]
1002653f:	mov    BYTE PTR [ebp-0xd],0x1
10026543:	mov    BYTE PTR [ecx],al
10026545:	call   0x1000920d
1002654a:	cmp    BYTE PTR [ebp-0x2b],0x0
1002654e:	je     0x10026593
10026550:	lea    eax,[ebp-0x14]
10026553:	mov    BYTE PTR [ebp-0x4],0x0
10026557:	call   0x10009f1a
1002655c:	or     DWORD PTR [ebp-0x4],0xffffffff
10026560:	lea    eax,[ebp-0x18]
10026563:	call   0x10009f1a
10026568:	mov    al,BYTE PTR [ebp-0xd]
1002656b:	call   0x10059bfd
10026570:	ret    
10026571:	mov    esi,DWORD PTR [ebp+0x14]
10026574:	mov    edi,DWORD PTR [ebp-0x14]
10026577:	call   0x100093a0
1002657c:	test   al,al
1002657e:	jne    0x10026593
10026580:	push   esi
10026581:	call   0x10009139
10026586:	mov    ebx,eax
10026588:	lea    edi,[ebp-0x14]
1002658b:	call   0x100268d4
10026590:	mov    ebx,DWORD PTR [ebp+0x8]
10026593:	lea    esi,[ebp-0x20]
10026596:	call   0x100268f0
1002659b:	mov    esi,DWORD PTR [ebp-0x1c]
1002659e:	mov    edi,DWORD PTR [ebp-0x20]
100265a1:	jmp    0x100264d3
100265a6:	push   0x34
100265a8:	mov    eax,0x10064386
100265ad:	call   0x10059b25
100265b2:	push   DWORD PTR [ebp+0x14]
100265b5:	mov    BYTE PTR [ebp-0x11],0x0
100265b9:	call   0x10009139
100265be:	mov    DWORD PTR [ebp-0x1c],eax
100265c1:	push   DWORD PTR [ebp+0x14]
100265c4:	and    DWORD PTR [ebp-0x4],0x0
100265c8:	call   0x10009139
100265cd:	mov    DWORD PTR [ebp-0x18],eax
100265d0:	mov    ebx,DWORD PTR [ebp+0x8]
100265d3:	mov    BYTE PTR [ebp-0x4],0x1
100265d7:	mov    eax,DWORD PTR [ebx+0x4]
100265da:	mov    esi,DWORD PTR [eax]
100265dc:	mov    edi,ebx
100265de:	mov    DWORD PTR [ebp-0x20],esi
100265e1:	mov    DWORD PTR [ebp-0x24],edi
100265e4:	test   edi,edi
100265e6:	mov    eax,DWORD PTR [ebx+0x4]
100265e9:	mov    DWORD PTR [ebp-0x28],eax
100265ec:	je     0x100265f2
100265ee:	cmp    edi,ebx
100265f0:	je     0x100265f7
100265f2:	call   0x100434a0
100265f7:	cmp    esi,DWORD PTR [ebp-0x28]
100265fa:	je     0x10026651
100265fc:	test   edi,edi
100265fe:	mov    eax,DWORD PTR [ebp+0xc]
10026601:	mov    DWORD PTR [ebp-0x40],eax
10026604:	mov    eax,DWORD PTR [ebp-0x1c]
10026607:	mov    DWORD PTR [ebp-0x3c],eax
1002660a:	mov    eax,DWORD PTR [ebp-0x18]
1002660d:	mov    DWORD PTR [ebp-0x38],eax
10026610:	mov    eax,DWORD PTR [ebp+0x10]
10026613:	mov    DWORD PTR [ebp-0x34],eax
10026616:	mov    BYTE PTR [ebp-0x30],0x0
1002661a:	jne    0x10026621
1002661c:	call   0x100434a0
10026621:	cmp    esi,DWORD PTR [edi+0x4]
10026624:	jne    0x1002662b
10026626:	call   0x100434a0
1002662b:	mov    esi,DWORD PTR [esi+0x8]
1002662e:	mov    eax,DWORD PTR [esi]
10026630:	lea    ecx,[ebp-0x40]
10026633:	push   ecx
10026634:	mov    ecx,esi
10026636:	call   DWORD PTR [eax]
10026638:	test   al,al
1002663a:	je     0x10026672
1002663c:	push   DWORD PTR [ebp-0x18]
1002663f:	mov    edi,DWORD PTR [ebp+0x14]
10026642:	mov    BYTE PTR [ebp-0x11],0x1
10026646:	call   0x1000920d
1002664b:	cmp    BYTE PTR [ebp-0x30],0x0
1002664f:	je     0x10026694
10026651:	lea    eax,[ebp-0x18]
10026654:	mov    BYTE PTR [ebp-0x4],0x0
10026658:	call   0x10009f1a
1002665d:	or     DWORD PTR [ebp-0x4],0xffffffff
10026661:	lea    eax,[ebp-0x1c]
10026664:	call   0x10009f1a
10026669:	mov    al,BYTE PTR [ebp-0x11]
1002666c:	call   0x10059bfd
10026671:	ret    
10026672:	mov    esi,DWORD PTR [ebp+0x14]
10026675:	mov    edi,DWORD PTR [ebp-0x18]
10026678:	call   0x100093a0
1002667d:	test   al,al
1002667f:	jne    0x10026694
10026681:	push   esi
10026682:	call   0x10009139
10026687:	mov    ebx,eax
10026689:	lea    edi,[ebp-0x18]
1002668c:	call   0x100268d4
10026691:	mov    ebx,DWORD PTR [ebp+0x8]
10026694:	lea    esi,[ebp-0x24]
10026697:	call   0x100268f0
1002669c:	mov    esi,DWORD PTR [ebp-0x20]
1002669f:	mov    edi,DWORD PTR [ebp-0x24]
100266a2:	jmp    0x100265e4
100266a7:	push   ebp
100266a8:	mov    ebp,esp
100266aa:	sub    esp,0x20
100266ad:	mov    eax,DWORD PTR [ebp+0x8]
100266b0:	mov    DWORD PTR [ebp-0x20],eax
100266b3:	mov    eax,DWORD PTR [ebp+0xc]
100266b6:	push   ebx
100266b7:	mov    DWORD PTR [ebp-0x1c],eax
100266ba:	mov    eax,DWORD PTR [edi+0x4]
100266bd:	push   esi
100266be:	mov    BYTE PTR [ebp-0x18],0x0
100266c2:	mov    esi,DWORD PTR [eax]
100266c4:	mov    ebx,edi
100266c6:	mov    BYTE PTR [ebp-0x1],0x0
100266ca:	mov    DWORD PTR [ebp-0x8],esi
100266cd:	mov    DWORD PTR [ebp-0xc],ebx
100266d0:	test   ebx,ebx
100266d2:	mov    eax,DWORD PTR [edi+0x4]
100266d5:	mov    DWORD PTR [ebp-0x10],eax
100266d8:	je     0x100266de
100266da:	cmp    ebx,edi
100266dc:	je     0x100266e3
100266de:	call   0x100434a0
100266e3:	cmp    esi,DWORD PTR [ebp-0x10]
100266e6:	je     0x10026734
100266e8:	test   ebx,ebx
100266ea:	jne    0x100266f1
100266ec:	call   0x100434a0
100266f1:	cmp    esi,DWORD PTR [ebx+0x4]
100266f4:	jne    0x100266fb
100266f6:	call   0x100434a0
100266fb:	mov    ecx,DWORD PTR [esi+0x8]
100266fe:	mov    eax,DWORD PTR [ecx]
10026700:	lea    edx,[ebp-0x20]
10026703:	push   edx
10026704:	call   DWORD PTR [eax]
10026706:	test   al,al
10026708:	je     0x10026724
1002670a:	cmp    BYTE PTR [ebp-0x18],0x0
1002670e:	mov    BYTE PTR [ebp-0x1],0x1
10026712:	jne    0x10026734
10026714:	mov    eax,DWORD PTR [ebp+0x8]
10026717:	cmp    DWORD PTR [eax],0x0
1002671a:	je     0x10026734
1002671c:	mov    eax,DWORD PTR [ebp+0xc]
1002671f:	cmp    DWORD PTR [eax],0x0
10026722:	je     0x10026734
10026724:	lea    esi,[ebp-0xc]
10026727:	call   0x100268f0
1002672c:	mov    esi,DWORD PTR [ebp-0x8]
1002672f:	mov    ebx,DWORD PTR [ebp-0xc]
10026732:	jmp    0x100266d0
10026734:	mov    al,BYTE PTR [ebp-0x1]
10026737:	pop    esi
10026738:	pop    ebx
10026739:	leave  
1002673a:	ret    
1002673b:	push   ebp
1002673c:	mov    ebp,esp
1002673e:	and    esp,0xfffffff8
10026741:	sub    esp,0x30
10026744:	mov    eax,ds:0x1007e030
10026749:	xor    eax,esp
1002674b:	mov    DWORD PTR [esp+0x2c],eax
1002674f:	push   0x10
10026751:	pop    eax
10026752:	mov    DWORD PTR [esp+0x8],eax
10026756:	mov    DWORD PTR [esp+0x4],eax
1002675a:	lea    eax,[esp+0x8]
1002675e:	push   eax
1002675f:	lea    eax,[esp+0x20]
10026763:	push   eax
10026764:	push   DWORD PTR [esi]
10026766:	call   DWORD PTR ds:0x100663a4
1002676c:	cmp    eax,0xffffffff
1002676f:	je     0x100267c7
10026771:	lea    eax,[esp+0x4]
10026775:	push   eax
10026776:	lea    eax,[esp+0x10]
1002677a:	push   eax
1002677b:	push   DWORD PTR [esi]
1002677d:	call   DWORD PTR ds:0x100663a0
10026783:	cmp    eax,0xffffffff
10026786:	je     0x100267c7
10026788:	cmp    WORD PTR [esp+0xc],0x2
1002678e:	jne    0x100267c7
10026790:	cmp    WORD PTR [esp+0x1c],0x2
10026796:	jne    0x100267c7
10026798:	mov    eax,DWORD PTR [esp+0x10]
1002679c:	cmp    eax,DWORD PTR [esp+0x20]
100267a0:	je     0x100267c3
100267a2:	push   0x1007182c
100267a7:	push   0x9
100267a9:	push   0x10071868
100267ae:	call   0x100042cf
100267b3:	add    esp,0xc
100267b6:	push   eax
100267b7:	call   DWORD PTR ds:0x100663e0
100267bd:	cmp    DWORD PTR [esp+0x10],eax
100267c1:	jne    0x100267c7
100267c3:	mov    al,0x1
100267c5:	jmp    0x100267c9
100267c7:	xor    al,al
100267c9:	mov    ecx,DWORD PTR [esp+0x2c]
100267cd:	xor    ecx,esp
100267cf:	call   0x10042f87
100267d4:	mov    esp,ebp
100267d6:	pop    ebp
100267d7:	ret    
100267d8:	push   ebp
100267d9:	mov    ebp,esp
100267db:	and    esp,0xfffffff8
100267de:	push   0xffffffff
100267e0:	push   0x10061adc
100267e5:	mov    eax,fs:0x0
100267eb:	push   eax
100267ec:	sub    esp,0x3c
100267ef:	push   ebx
100267f0:	push   esi
100267f1:	mov    eax,ds:0x1007e030
100267f6:	xor    eax,esp
100267f8:	push   eax
100267f9:	lea    eax,[esp+0x48]
100267fd:	mov    fs:0x0,eax
10026803:	push   0x11e6c1f2
10026808:	push   0x100718c0
1002680d:	call   0x100042bd
10026812:	push   eax
10026813:	push   0x5
10026815:	push   0x100718fc
1002681a:	call   0x100042cf
1002681f:	add    esp,0x14
10026822:	push   eax
10026823:	lea    ecx,[esp+0x10]
10026827:	call   0x100011c8
1002682c:	and    DWORD PTR [esp+0x50],0x0
10026831:	push   0x0
10026833:	lea    eax,[esp+0x10]
10026837:	push   eax
10026838:	lea    eax,[esp+0x30]
1002683c:	push   eax
1002683d:	mov    eax,DWORD PTR [ebp+0x8]
10026840:	add    eax,0x18
10026843:	call   0x10008602
10026848:	mov    esi,eax
1002684a:	push   0x447aaebc
1002684f:	push   0x29be5630
10026854:	push   0x2175bde8
10026859:	push   0x10071874
1002685e:	mov    BYTE PTR [esp+0x60],0x1
10026863:	call   0x100042bd
10026868:	pop    ecx
10026869:	pop    ecx
1002686a:	push   eax
1002686b:	call   0x100042bd
10026870:	pop    ecx
10026871:	pop    ecx
10026872:	push   eax
10026873:	call   0x100042bd
10026878:	cmp    DWORD PTR [esi+0x18],0x10
1002687c:	pop    ecx
1002687d:	pop    ecx
1002687e:	jb     0x10026885
10026880:	mov    esi,DWORD PTR [esi+0x4]
10026883:	jmp    0x10026888
10026885:	add    esi,0x4
10026888:	push   eax
10026889:	push   0x8
1002688b:	push   0x100718b4
10026890:	call   0x100042cf
10026895:	add    esp,0xc
10026898:	push   eax
10026899:	push   esi
1002689a:	call   0x10045b20
1002689f:	pop    ecx
100268a0:	pop    ecx
100268a1:	push   0x0
100268a3:	test   eax,eax
100268a5:	push   0x1
100268a7:	lea    ecx,[esp+0x30]
100268ab:	setne  bl
100268ae:	call   0x100012eb
100268b3:	push   0x0
100268b5:	push   0x1
100268b7:	lea    ecx,[esp+0x14]
100268bb:	call   0x100012eb
100268c0:	mov    al,bl
100268c2:	mov    ecx,DWORD PTR [esp+0x48]
100268c6:	mov    DWORD PTR fs:0x0,ecx
100268cd:	pop    ecx
100268ce:	pop    esi
100268cf:	pop    ebx
100268d0:	mov    esp,ebp
100268d2:	pop    ebp
100268d3:	ret    
100268d4:	push   esi
100268d5:	mov    esi,DWORD PTR [edi]
100268d7:	cmp    ebx,esi
100268d9:	je     0x100268ec
100268db:	test   esi,esi
100268dd:	je     0x100268ec
100268df:	push   esi
100268e0:	call   0x10009ffa
100268e5:	push   esi
100268e6:	call   0x10042f82
100268eb:	pop    ecx
100268ec:	mov    DWORD PTR [edi],ebx
100268ee:	pop    esi
100268ef:	ret    
100268f0:	cmp    DWORD PTR [esi],0x0
100268f3:	jne    0x100268fa
100268f5:	call   0x100434a0
100268fa:	mov    eax,DWORD PTR [esi]
100268fc:	mov    ecx,DWORD PTR [esi+0x4]
100268ff:	cmp    ecx,DWORD PTR [eax+0x4]
10026902:	jne    0x10026909
10026904:	call   0x100434a0
10026909:	mov    eax,DWORD PTR [esi+0x4]
1002690c:	mov    eax,DWORD PTR [eax]
1002690e:	mov    DWORD PTR [esi+0x4],eax
10026911:	mov    eax,esi
10026913:	ret    
10026914:	push   ebp
10026915:	mov    ebp,esp
10026917:	and    esp,0xfffffff8
1002691a:	push   0xffffffff
1002691c:	push   0x10060b2e
10026921:	mov    eax,fs:0x0
10026927:	push   eax
10026928:	sub    esp,0x28
1002692b:	push   ebx
1002692c:	push   esi
1002692d:	push   edi
1002692e:	mov    eax,ds:0x1007e030
10026933:	xor    eax,esp
10026935:	push   eax
10026936:	lea    eax,[esp+0x38]
1002693a:	mov    fs:0x0,eax
10026940:	xor    ebx,ebx
10026942:	cmp    DWORD PTR ds:0x10080f90,ebx
10026948:	jne    0x10026bc4
1002694e:	call   0x10026e8e
10026953:	mov    DWORD PTR [esp+0x20],eax
10026957:	mov    DWORD PTR [esp+0x24],ebx
1002695b:	push   0x4
1002695d:	pop    esi
1002695e:	push   esi
1002695f:	mov    DWORD PTR [esp+0x44],ebx
10026963:	call   0x1004358e
10026968:	cmp    eax,ebx
1002696a:	pop    ecx
1002696b:	je     0x10026979
1002696d:	mov    DWORD PTR [eax],0x1007193c
10026973:	mov    DWORD PTR [esp+0x14],eax
10026977:	jmp    0x1002697d
10026979:	mov    DWORD PTR [esp+0x14],ebx
1002697d:	mov    eax,DWORD PTR [esp+0x20]
10026981:	push   eax
10026982:	lea    ecx,[esp+0x20]
10026986:	push   ecx
10026987:	lea    eax,[esp+0x1c]
1002698b:	push   eax
1002698c:	mov    edi,ecx
1002698e:	call   0x10026ea6
10026993:	push   esi
10026994:	call   0x1004358e
10026999:	cmp    eax,ebx
1002699b:	pop    ecx
1002699c:	je     0x100269aa
1002699e:	mov    DWORD PTR [eax],0x10071944
100269a4:	mov    DWORD PTR [esp+0x14],eax
100269a8:	jmp    0x100269ae
100269aa:	mov    DWORD PTR [esp+0x14],ebx
100269ae:	mov    eax,DWORD PTR [esp+0x20]
100269b2:	push   eax
100269b3:	lea    ecx,[esp+0x20]
100269b7:	push   ecx
100269b8:	lea    eax,[esp+0x1c]
100269bc:	push   eax
100269bd:	mov    edi,ecx
100269bf:	call   0x10026ea6
100269c4:	push   esi
100269c5:	call   0x1004358e
100269ca:	cmp    eax,ebx
100269cc:	pop    ecx
100269cd:	je     0x100269db
100269cf:	mov    DWORD PTR [eax],0x1007195c
100269d5:	mov    DWORD PTR [esp+0x14],eax
100269d9:	jmp    0x100269df
100269db:	mov    DWORD PTR [esp+0x14],ebx
100269df:	mov    eax,DWORD PTR [esp+0x20]
100269e3:	push   eax
100269e4:	lea    ecx,[esp+0x20]
100269e8:	push   ecx
100269e9:	lea    eax,[esp+0x1c]
100269ed:	push   eax
100269ee:	mov    edi,ecx
100269f0:	call   0x10026ea6
100269f5:	push   esi
100269f6:	call   0x1004358e
100269fb:	cmp    eax,ebx
100269fd:	pop    ecx
100269fe:	je     0x10026a0c
10026a00:	mov    DWORD PTR [eax],0x1007196c
10026a06:	mov    DWORD PTR [esp+0x14],eax
10026a0a:	jmp    0x10026a10
10026a0c:	mov    DWORD PTR [esp+0x14],ebx
10026a10:	mov    eax,DWORD PTR [esp+0x20]
10026a14:	push   eax
10026a15:	lea    ecx,[esp+0x20]
10026a19:	push   ecx
10026a1a:	lea    eax,[esp+0x1c]
10026a1e:	push   eax
10026a1f:	mov    edi,ecx
10026a21:	call   0x10026ea6
10026a26:	push   esi
10026a27:	call   0x1004358e
10026a2c:	cmp    eax,ebx
10026a2e:	pop    ecx
10026a2f:	je     0x10026a3d
10026a31:	mov    DWORD PTR [eax],0x1007197c
10026a37:	mov    DWORD PTR [esp+0x14],eax
10026a3b:	jmp    0x10026a41
10026a3d:	mov    DWORD PTR [esp+0x14],ebx
10026a41:	mov    eax,DWORD PTR [esp+0x20]
10026a45:	push   eax
10026a46:	lea    ecx,[esp+0x20]
10026a4a:	push   ecx
10026a4b:	lea    eax,[esp+0x1c]
10026a4f:	push   eax
10026a50:	mov    edi,ecx
10026a52:	call   0x10026ea6
10026a57:	push   esi
10026a58:	call   0x1004358e
10026a5d:	cmp    eax,ebx
10026a5f:	pop    ecx
10026a60:	je     0x10026a6e
10026a62:	mov    DWORD PTR [eax],0x1007190c
10026a68:	mov    DWORD PTR [esp+0x14],eax
10026a6c:	jmp    0x10026a72
10026a6e:	mov    DWORD PTR [esp+0x14],ebx
10026a72:	mov    eax,DWORD PTR [esp+0x20]
10026a76:	push   eax
10026a77:	lea    ecx,[esp+0x20]
10026a7b:	push   ecx
10026a7c:	lea    eax,[esp+0x1c]
10026a80:	push   eax
10026a81:	mov    edi,ecx
10026a83:	call   0x10026ea6
10026a88:	push   esi
10026a89:	call   0x1004358e
10026a8e:	cmp    eax,ebx
10026a90:	pop    ecx
10026a91:	je     0x10026a9f
10026a93:	mov    DWORD PTR [eax],0x10071964
10026a99:	mov    DWORD PTR [esp+0x14],eax
10026a9d:	jmp    0x10026aa3
10026a9f:	mov    DWORD PTR [esp+0x14],ebx
10026aa3:	mov    eax,DWORD PTR [esp+0x20]
10026aa7:	push   eax
10026aa8:	lea    ecx,[esp+0x20]
10026aac:	push   ecx
10026aad:	lea    eax,[esp+0x1c]
10026ab1:	push   eax
10026ab2:	mov    edi,ecx
10026ab4:	call   0x10026ea6
10026ab9:	push   esi
10026aba:	call   0x1004358e
10026abf:	cmp    eax,ebx
10026ac1:	pop    ecx
10026ac2:	je     0x10026ad0
10026ac4:	mov    DWORD PTR [eax],0x1007194c
10026aca:	mov    DWORD PTR [esp+0x14],eax
10026ace:	jmp    0x10026ad4
10026ad0:	mov    DWORD PTR [esp+0x14],ebx
10026ad4:	mov    eax,DWORD PTR [esp+0x20]
10026ad8:	push   eax
10026ad9:	lea    ecx,[esp+0x20]
10026add:	push   ecx
10026ade:	lea    eax,[esp+0x1c]
10026ae2:	push   eax
10026ae3:	mov    edi,ecx
10026ae5:	call   0x10026ea6
10026aea:	push   esi
10026aeb:	call   0x1004358e
10026af0:	cmp    eax,ebx
10026af2:	pop    ecx
10026af3:	je     0x10026b01
10026af5:	mov    DWORD PTR [eax],0x1007192c
10026afb:	mov    DWORD PTR [esp+0x14],eax
10026aff:	jmp    0x10026b05
10026b01:	mov    DWORD PTR [esp+0x14],ebx
10026b05:	mov    eax,DWORD PTR [esp+0x20]
10026b09:	push   eax
10026b0a:	lea    ecx,[esp+0x20]
10026b0e:	push   ecx
10026b0f:	lea    eax,[esp+0x1c]
10026b13:	push   eax
10026b14:	mov    edi,ecx
10026b16:	call   0x10026ea6
10026b1b:	push   esi
10026b1c:	call   0x1004358e
10026b21:	cmp    eax,ebx
10026b23:	pop    ecx
10026b24:	je     0x10026b32
10026b26:	mov    DWORD PTR [eax],0x10071914
10026b2c:	mov    DWORD PTR [esp+0x14],eax
10026b30:	jmp    0x10026b36
10026b32:	mov    DWORD PTR [esp+0x14],ebx
10026b36:	mov    eax,DWORD PTR [esp+0x20]
10026b3a:	push   eax
10026b3b:	lea    ecx,[esp+0x20]
10026b3f:	push   ecx
10026b40:	lea    eax,[esp+0x1c]
10026b44:	push   eax
10026b45:	mov    edi,ecx
10026b47:	call   0x10026ea6
10026b4c:	push   esi
10026b4d:	call   0x1004358e
10026b52:	cmp    eax,ebx
10026b54:	pop    ecx
10026b55:	je     0x10026b63
10026b57:	mov    DWORD PTR [eax],0x10071934
10026b5d:	mov    DWORD PTR [esp+0x14],eax
10026b61:	jmp    0x10026b67
10026b63:	mov    DWORD PTR [esp+0x14],ebx
10026b67:	mov    eax,DWORD PTR [esp+0x20]
10026b6b:	push   eax
10026b6c:	lea    ecx,[esp+0x20]
10026b70:	push   ecx
10026b71:	lea    eax,[esp+0x1c]
10026b75:	push   eax
10026b76:	mov    edi,ecx
10026b78:	call   0x10026ea6
10026b7d:	mov    eax,DWORD PTR [esp+0x20]
10026b81:	mov    ebx,DWORD PTR [eax]
10026b83:	mov    esi,0x10080f88
10026b88:	mov    DWORD PTR [esp+0x18],eax
10026b8c:	call   0x10026f16
10026b91:	push   DWORD PTR [esp+0x18]
10026b95:	mov    eax,ds:0x10080f8c
10026b9a:	mov    ecx,DWORD PTR [eax]
10026b9c:	push   edi
10026b9d:	push   ebx
10026b9e:	mov    eax,edi
10026ba0:	push   eax
10026ba1:	push   ecx
10026ba2:	push   esi
10026ba3:	push   DWORD PTR [esp+0x2c]
10026ba7:	call   0x10026f3f
10026bac:	or     DWORD PTR [esp+0x40],0xffffffff
10026bb1:	mov    esi,edi
10026bb3:	call   0x10026f16
10026bb8:	push   DWORD PTR [esp+0x20]
10026bbc:	call   0x10042f82
10026bc1:	pop    ecx
10026bc2:	xor    ebx,ebx
10026bc4:	cmp    DWORD PTR ds:0x10080f84,ebx
10026bca:	jne    0x10026cf3
10026bd0:	call   0x10026e8e
10026bd5:	mov    DWORD PTR [esp+0x20],eax
10026bd9:	mov    DWORD PTR [esp+0x24],ebx
10026bdd:	push   0x4
10026bdf:	pop    esi
10026be0:	push   esi
10026be1:	mov    DWORD PTR [esp+0x44],0x1
10026be9:	call   0x1004358e
10026bee:	cmp    eax,ebx
10026bf0:	pop    ecx
10026bf1:	je     0x10026bff
10026bf3:	mov    DWORD PTR [eax],0x10071984
10026bf9:	mov    DWORD PTR [esp+0x14],eax
10026bfd:	jmp    0x10026c03
10026bff:	mov    DWORD PTR [esp+0x14],ebx
10026c03:	mov    eax,DWORD PTR [esp+0x20]
10026c07:	push   eax
10026c08:	lea    ecx,[esp+0x20]
10026c0c:	push   ecx
10026c0d:	lea    eax,[esp+0x1c]
10026c11:	push   eax
10026c12:	mov    edi,ecx
10026c14:	call   0x10026ea6
10026c19:	push   esi
10026c1a:	call   0x1004358e
10026c1f:	cmp    eax,ebx
10026c21:	pop    ecx
10026c22:	je     0x10026c30
10026c24:	mov    DWORD PTR [eax],0x10071974
10026c2a:	mov    DWORD PTR [esp+0x14],eax
10026c2e:	jmp    0x10026c34
10026c30:	mov    DWORD PTR [esp+0x14],ebx
10026c34:	mov    eax,DWORD PTR [esp+0x20]
10026c38:	push   eax
10026c39:	lea    ecx,[esp+0x20]
10026c3d:	push   ecx
10026c3e:	lea    eax,[esp+0x1c]
10026c42:	push   eax
10026c43:	mov    edi,ecx
10026c45:	call   0x10026ea6
10026c4a:	push   esi
10026c4b:	call   0x1004358e
10026c50:	cmp    eax,ebx
10026c52:	pop    ecx
10026c53:	je     0x10026c61
10026c55:	mov    DWORD PTR [eax],0x10071954
10026c5b:	mov    DWORD PTR [esp+0x14],eax
10026c5f:	jmp    0x10026c65
10026c61:	mov    DWORD PTR [esp+0x14],ebx
10026c65:	mov    eax,DWORD PTR [esp+0x20]
10026c69:	push   eax
10026c6a:	lea    ecx,[esp+0x20]
10026c6e:	push   ecx
10026c6f:	lea    eax,[esp+0x1c]
10026c73:	push   eax
10026c74:	mov    edi,ecx
10026c76:	call   0x10026ea6
10026c7b:	push   esi
10026c7c:	call   0x1004358e
10026c81:	cmp    eax,ebx
10026c83:	pop    ecx
10026c84:	je     0x10026c92
10026c86:	mov    DWORD PTR [eax],0x1007191c
10026c8c:	mov    DWORD PTR [esp+0x14],eax
10026c90:	jmp    0x10026c96
10026c92:	mov    DWORD PTR [esp+0x14],ebx
10026c96:	mov    eax,DWORD PTR [esp+0x20]
10026c9a:	push   eax
10026c9b:	lea    ecx,[esp+0x20]
10026c9f:	push   ecx
10026ca0:	lea    eax,[esp+0x1c]
10026ca4:	push   eax
10026ca5:	mov    edi,ecx
10026ca7:	call   0x10026ea6
10026cac:	mov    eax,DWORD PTR [esp+0x20]
10026cb0:	mov    ebx,DWORD PTR [eax]
10026cb2:	mov    esi,0x10080f7c
10026cb7:	mov    DWORD PTR [esp+0x18],eax
10026cbb:	call   0x10026f16
10026cc0:	push   DWORD PTR [esp+0x18]
10026cc4:	mov    eax,ds:0x10080f80
10026cc9:	mov    ecx,DWORD PTR [eax]
10026ccb:	push   edi
10026ccc:	push   ebx
10026ccd:	mov    eax,edi
10026ccf:	push   eax
10026cd0:	push   ecx
10026cd1:	push   esi
10026cd2:	push   DWORD PTR [esp+0x2c]
10026cd6:	call   0x10027006
10026cdb:	or     DWORD PTR [esp+0x40],0xffffffff
10026ce0:	mov    esi,edi
10026ce2:	call   0x10026f16
10026ce7:	push   DWORD PTR [esp+0x20]
10026ceb:	call   0x10042f82
10026cf0:	pop    ecx
10026cf1:	xor    ebx,ebx
10026cf3:	cmp    DWORD PTR ds:0x10080f9c,ebx
10026cf9:	jne    0x10026d99
10026cff:	call   0x10026e8e
10026d04:	mov    DWORD PTR [esp+0x20],eax
10026d08:	mov    DWORD PTR [esp+0x24],ebx
10026d0c:	push   0x8
10026d0e:	mov    DWORD PTR [esp+0x44],0x2
10026d16:	call   0x1004358e
10026d1b:	pop    ecx
10026d1c:	mov    DWORD PTR [esp+0x14],eax
10026d20:	cmp    eax,ebx
10026d22:	mov    BYTE PTR [esp+0x40],0x3
10026d27:	je     0x10026d31
10026d29:	push   eax
10026d2a:	call   0x1002c5fb
10026d2f:	jmp    0x10026d33
10026d31:	xor    eax,eax
10026d33:	mov    BYTE PTR [esp+0x40],0x2
10026d38:	mov    DWORD PTR [esp+0x14],eax
10026d3c:	mov    eax,DWORD PTR [esp+0x20]
10026d40:	push   eax
10026d41:	lea    ecx,[esp+0x20]
10026d45:	push   ecx
10026d46:	lea    eax,[esp+0x1c]
10026d4a:	push   eax
10026d4b:	mov    edi,ecx
10026d4d:	call   0x10026ea6
10026d52:	mov    eax,DWORD PTR [esp+0x20]
10026d56:	mov    ebx,DWORD PTR [eax]
10026d58:	mov    esi,0x10080f94
10026d5d:	mov    DWORD PTR [esp+0x18],eax
10026d61:	call   0x10026f16
10026d66:	push   DWORD PTR [esp+0x18]
10026d6a:	mov    eax,ds:0x10080f98
10026d6f:	mov    ecx,DWORD PTR [eax]
10026d71:	push   edi
10026d72:	push   ebx
10026d73:	mov    eax,edi
10026d75:	push   eax
10026d76:	push   ecx
10026d77:	push   esi
10026d78:	push   DWORD PTR [esp+0x2c]
10026d7c:	call   0x100270cd
10026d81:	or     DWORD PTR [esp+0x40],0xffffffff
10026d86:	mov    esi,edi
10026d88:	call   0x10026f16
10026d8d:	push   DWORD PTR [esp+0x20]
10026d91:	call   0x10042f82
10026d96:	pop    ecx
10026d97:	xor    ebx,ebx
10026d99:	cmp    DWORD PTR ds:0x10080f78,ebx
10026d9f:	jne    0x10026e2a
10026da5:	call   0x10026e8e
10026daa:	mov    DWORD PTR [esp+0x2c],eax
10026dae:	mov    DWORD PTR [esp+0x30],ebx
10026db2:	push   0x4
10026db4:	pop    eax
10026db5:	push   eax
10026db6:	mov    DWORD PTR [esp+0x44],eax
10026dba:	call   0x1004358e
10026dbf:	cmp    eax,ebx
10026dc1:	pop    ecx
10026dc2:	je     0x10026dd0
10026dc4:	mov    DWORD PTR [eax],0x10071924
10026dca:	mov    DWORD PTR [esp+0x14],eax
10026dce:	jmp    0x10026dd4
10026dd0:	mov    DWORD PTR [esp+0x14],ebx
10026dd4:	mov    eax,DWORD PTR [esp+0x2c]
10026dd8:	push   eax
10026dd9:	lea    ecx,[esp+0x2c]
10026ddd:	push   ecx
10026dde:	lea    eax,[esp+0x1c]
10026de2:	push   eax
10026de3:	mov    edi,ecx
10026de5:	call   0x10026ea6
10026dea:	mov    eax,DWORD PTR [esp+0x2c]
10026dee:	mov    ebx,DWORD PTR [eax]
10026df0:	mov    esi,0x10080f70
10026df5:	mov    DWORD PTR [esp+0x18],eax
10026df9:	call   0x10026f16
10026dfe:	push   DWORD PTR [esp+0x18]
10026e02:	mov    eax,ds:0x10080f74
10026e07:	mov    ecx,DWORD PTR [eax]
10026e09:	push   edi
10026e0a:	push   ebx
10026e0b:	mov    eax,edi
10026e0d:	push   eax
10026e0e:	push   ecx
10026e0f:	push   esi
10026e10:	push   DWORD PTR [esp+0x2c]
10026e14:	call   0x10027194
10026e19:	mov    esi,edi
10026e1b:	call   0x10026f16
10026e20:	push   DWORD PTR [esp+0x2c]
10026e24:	call   0x10042f82
10026e29:	pop    ecx
10026e2a:	mov    ecx,DWORD PTR [esp+0x38]
10026e2e:	mov    DWORD PTR fs:0x0,ecx
10026e35:	pop    ecx
10026e36:	pop    edi
10026e37:	pop    esi
10026e38:	pop    ebx
10026e39:	mov    esp,ebp
10026e3b:	pop    ebp
10026e3c:	ret    
10026e3d:	test   BYTE PTR [esp+0x4],0x1
10026e42:	push   esi
10026e43:	mov    esi,ecx
10026e45:	mov    DWORD PTR [esi],0x10071904
10026e4b:	je     0x10026e54
10026e4d:	push   esi
10026e4e:	call   0x10042f82
10026e53:	pop    ecx
10026e54:	mov    eax,esi
10026e56:	pop    esi
10026e57:	ret    0x4
10026e5a:	test   BYTE PTR [esp+0x4],0x1
10026e5f:	push   esi
10026e60:	mov    esi,ecx
10026e62:	mov    DWORD PTR [esi],0x10071904
10026e68:	je     0x10026e71
10026e6a:	push   esi
10026e6b:	call   0x10042f82
10026e70:	pop    ecx
10026e71:	mov    eax,esi
10026e73:	pop    esi
10026e74:	ret    0x4
10026e77:	push   esi
10026e78:	mov    esi,eax
10026e7a:	call   0x10026f16
10026e7f:	push   DWORD PTR [esi+0x4]
10026e82:	call   0x10042f82
10026e87:	and    DWORD PTR [esi+0x4],0x0
10026e8b:	pop    ecx
10026e8c:	pop    esi
10026e8d:	ret    
10026e8e:	push   0xc
10026e90:	call   0x1004358e
10026e95:	test   eax,eax
10026e97:	pop    ecx
10026e98:	je     0x10026e9c
10026e9a:	mov    DWORD PTR [eax],eax
10026e9c:	lea    ecx,[eax+0x4]
10026e9f:	test   ecx,ecx
10026ea1:	je     0x10026ea5
10026ea3:	mov    DWORD PTR [ecx],eax
10026ea5:	ret    
10026ea6:	push   0x48
10026ea8:	mov    eax,0x100621c0
10026ead:	call   0x10059b25
10026eb2:	push   DWORD PTR [ebp+0x8]
10026eb5:	mov    esi,DWORD PTR [ebp+0x10]
10026eb8:	push   DWORD PTR [esi+0x4]
10026ebb:	push   esi
10026ebc:	call   0x1001b483
10026ec1:	mov    ecx,DWORD PTR [edi+0x8]
10026ec4:	mov    edx,0x3fffffff
10026ec9:	sub    edx,ecx
10026ecb:	cmp    edx,0x1
10026ece:	jae    0x10026f02
10026ed0:	push   0x1006feac
10026ed5:	lea    ecx,[ebp-0x2c]
10026ed8:	call   0x100011c8
10026edd:	and    DWORD PTR [ebp-0x4],0x0
10026ee1:	lea    eax,[ebp-0x2c]
10026ee4:	push   eax
10026ee5:	lea    ecx,[ebp-0x54]
10026ee8:	call   0x10001065
10026eed:	push   0x10074ec8
10026ef2:	lea    eax,[ebp-0x54]
10026ef5:	push   eax
10026ef6:	mov    DWORD PTR [ebp-0x54],0x1006b96c
10026efd:	call   0x10047aa4
10026f02:	inc    ecx
10026f03:	mov    DWORD PTR [edi+0x8],ecx
10026f06:	mov    DWORD PTR [esi+0x4],eax
10026f09:	mov    ecx,DWORD PTR [eax+0x4]
10026f0c:	mov    DWORD PTR [ecx],eax
10026f0e:	call   0x10059bfd
10026f13:	ret    0xc
10026f16:	mov    eax,DWORD PTR [esi+0x4]
10026f19:	mov    ecx,DWORD PTR [eax]
10026f1b:	mov    DWORD PTR [eax],eax
10026f1d:	mov    eax,DWORD PTR [esi+0x4]
10026f20:	mov    DWORD PTR [eax+0x4],eax
10026f23:	and    DWORD PTR [esi+0x8],0x0
10026f27:	cmp    ecx,DWORD PTR [esi+0x4]
10026f2a:	je     0x10026f3e
10026f2c:	push   edi
10026f2d:	mov    edi,DWORD PTR [ecx]
10026f2f:	push   ecx
10026f30:	call   0x10042f82
10026f35:	cmp    edi,DWORD PTR [esi+0x4]
10026f38:	pop    ecx
10026f39:	mov    ecx,edi
10026f3b:	jne    0x10026f2d
10026f3d:	pop    edi
10026f3e:	ret    
10026f3f:	push   0x18
10026f41:	mov    eax,0x10060ae9
10026f46:	call   0x10059b58
10026f4b:	mov    ebx,DWORD PTR [ebp+0x14]
10026f4e:	mov    esi,DWORD PTR [ebp+0x18]
10026f51:	and    DWORD PTR [ebp-0x4],0x0
10026f55:	mov    edi,0x10080f88
10026f5a:	mov    DWORD PTR [ebp-0x1c],ebx
10026f5d:	mov    DWORD PTR [ebp-0x18],esi
10026f60:	test   ebx,ebx
10026f62:	je     0x10026f69
10026f64:	cmp    ebx,DWORD PTR [ebp+0x1c]
10026f67:	je     0x10026f6e
10026f69:	call   0x100434a0
10026f6e:	cmp    esi,DWORD PTR [ebp+0x20]
10026f71:	je     0x10026ffe
10026f77:	test   ebx,ebx
10026f79:	jne    0x10026f80
10026f7b:	call   0x100434a0
10026f80:	cmp    esi,DWORD PTR [ebx+0x4]
10026f83:	jne    0x10026f8a
10026f85:	call   0x100434a0
10026f8a:	push   DWORD PTR [ebp+0x10]
10026f8d:	add    esi,0x8
10026f90:	push   DWORD PTR [ebp+0xc]
10026f93:	push   esi
10026f94:	call   0x10026ea6
10026f99:	lea    esi,[ebp+0x14]
10026f9c:	call   0x100268f0
10026fa1:	mov    esi,DWORD PTR [ebp+0x18]
10026fa4:	mov    ebx,DWORD PTR [ebp+0x14]
10026fa7:	jmp    0x10026f60
10026fa9:	mov    edi,DWORD PTR [ebp+0x10]
10026fac:	mov    eax,DWORD PTR [ebp-0x1c]
10026faf:	test   eax,eax
10026fb1:	je     0x10026fb8
10026fb3:	cmp    eax,DWORD PTR [ebp+0x14]
10026fb6:	je     0x10026fbd
10026fb8:	call   0x100434a0
10026fbd:	mov    eax,DWORD PTR [ebp-0x18]
10026fc0:	cmp    eax,DWORD PTR [ebp+0x18]
10026fc3:	je     0x10026ff5
10026fc5:	mov    ebx,DWORD PTR [ebp+0xc]
10026fc8:	test   ebx,ebx
10026fca:	mov    DWORD PTR [ebp+0x20],edi
10026fcd:	jne    0x10026fd4
10026fcf:	call   0x100434a0
10026fd4:	mov    esi,DWORD PTR [edi+0x4]
10026fd7:	cmp    esi,DWORD PTR [ebx+0x4]
10026fda:	jne    0x10026fe1
10026fdc:	call   0x100434a0
10026fe1:	push   esi
10026fe2:	push   ebx
10026fe3:	lea    ebx,[ebp-0x24]
10026fe6:	call   0x1002725b
10026feb:	lea    esi,[ebp-0x1c]
10026fee:	call   0x100268f0
10026ff3:	jmp    0x10026fac
10026ff5:	push   0x0
10026ff7:	push   0x0
10026ff9:	call   0x10047aa4
10026ffe:	call   0x10059bfd
10027003:	ret    0x1c
10027006:	push   0x18
10027008:	mov    eax,0x10060ace
1002700d:	call   0x10059b58
10027012:	mov    ebx,DWORD PTR [ebp+0x14]
10027015:	mov    esi,DWORD PTR [ebp+0x18]
10027018:	and    DWORD PTR [ebp-0x4],0x0
1002701c:	mov    edi,0x10080f7c
10027021:	mov    DWORD PTR [ebp-0x1c],ebx
10027024:	mov    DWORD PTR [ebp-0x18],esi
10027027:	test   ebx,ebx
10027029:	je     0x10027030
1002702b:	cmp    ebx,DWORD PTR [ebp+0x1c]
1002702e:	je     0x10027035
10027030:	call   0x100434a0
10027035:	cmp    esi,DWORD PTR [ebp+0x20]
10027038:	je     0x100270c5
1002703e:	test   ebx,ebx
10027040:	jne    0x10027047
10027042:	call   0x100434a0
10027047:	cmp    esi,DWORD PTR [ebx+0x4]
1002704a:	jne    0x10027051
1002704c:	call   0x100434a0
10027051:	push   DWORD PTR [ebp+0x10]
10027054:	add    esi,0x8
10027057:	push   DWORD PTR [ebp+0xc]
1002705a:	push   esi
1002705b:	call   0x10026ea6
10027060:	lea    esi,[ebp+0x14]
10027063:	call   0x100268f0
10027068:	mov    esi,DWORD PTR [ebp+0x18]
1002706b:	mov    ebx,DWORD PTR [ebp+0x14]
1002706e:	jmp    0x10027027
10027070:	mov    edi,DWORD PTR [ebp+0x10]
10027073:	mov    eax,DWORD PTR [ebp-0x1c]
10027076:	test   eax,eax
10027078:	je     0x1002707f
1002707a:	cmp    eax,DWORD PTR [ebp+0x14]
1002707d:	je     0x10027084
1002707f:	call   0x100434a0
10027084:	mov    eax,DWORD PTR [ebp-0x18]
10027087:	cmp    eax,DWORD PTR [ebp+0x18]
1002708a:	je     0x100270bc
1002708c:	mov    ebx,DWORD PTR [ebp+0xc]
1002708f:	test   ebx,ebx
10027091:	mov    DWORD PTR [ebp+0x20],edi
10027094:	jne    0x1002709b
10027096:	call   0x100434a0
1002709b:	mov    esi,DWORD PTR [edi+0x4]
1002709e:	cmp    esi,DWORD PTR [ebx+0x4]
100270a1:	jne    0x100270a8
100270a3:	call   0x100434a0
100270a8:	push   esi
100270a9:	push   ebx
100270aa:	lea    ebx,[ebp-0x24]
100270ad:	call   0x100272aa
100270b2:	lea    esi,[ebp-0x1c]
100270b5:	call   0x100268f0
100270ba:	jmp    0x10027073
100270bc:	push   0x0
100270be:	push   0x0
100270c0:	call   0x10047aa4
100270c5:	call   0x10059bfd
100270ca:	ret    0x1c
100270cd:	push   0x18
100270cf:	mov    eax,0x10060ab3
100270d4:	call   0x10059b58
100270d9:	mov    ebx,DWORD PTR [ebp+0x14]
100270dc:	mov    esi,DWORD PTR [ebp+0x18]
100270df:	and    DWORD PTR [ebp-0x4],0x0
100270e3:	mov    edi,0x10080f94
100270e8:	mov    DWORD PTR [ebp-0x1c],ebx
100270eb:	mov    DWORD PTR [ebp-0x18],esi
100270ee:	test   ebx,ebx
100270f0:	je     0x100270f7
100270f2:	cmp    ebx,DWORD PTR [ebp+0x1c]
100270f5:	je     0x100270fc
100270f7:	call   0x100434a0
100270fc:	cmp    esi,DWORD PTR [ebp+0x20]
100270ff:	je     0x1002718c
10027105:	test   ebx,ebx
10027107:	jne    0x1002710e
10027109:	call   0x100434a0
1002710e:	cmp    esi,DWORD PTR [ebx+0x4]
10027111:	jne    0x10027118
10027113:	call   0x100434a0
10027118:	push   DWORD PTR [ebp+0x10]
1002711b:	add    esi,0x8
1002711e:	push   DWORD PTR [ebp+0xc]
10027121:	push   esi
10027122:	call   0x10026ea6
10027127:	lea    esi,[ebp+0x14]
1002712a:	call   0x100268f0
1002712f:	mov    esi,DWORD PTR [ebp+0x18]
10027132:	mov    ebx,DWORD PTR [ebp+0x14]
10027135:	jmp    0x100270ee
10027137:	mov    edi,DWORD PTR [ebp+0x10]
1002713a:	mov    eax,DWORD PTR [ebp-0x1c]
1002713d:	test   eax,eax
1002713f:	je     0x10027146
10027141:	cmp    eax,DWORD PTR [ebp+0x14]
10027144:	je     0x1002714b
10027146:	call   0x100434a0
1002714b:	mov    eax,DWORD PTR [ebp-0x18]
1002714e:	cmp    eax,DWORD PTR [ebp+0x18]
10027151:	je     0x10027183
10027153:	mov    ebx,DWORD PTR [ebp+0xc]
10027156:	test   ebx,ebx
10027158:	mov    DWORD PTR [ebp+0x20],edi
1002715b:	jne    0x10027162
1002715d:	call   0x100434a0
10027162:	mov    esi,DWORD PTR [edi+0x4]
10027165:	cmp    esi,DWORD PTR [ebx+0x4]
10027168:	jne    0x1002716f
1002716a:	call   0x100434a0
1002716f:	push   esi
10027170:	push   ebx
10027171:	lea    ebx,[ebp-0x24]
10027174:	call   0x100272f9
10027179:	lea    esi,[ebp-0x1c]
1002717c:	call   0x100268f0
10027181:	jmp    0x1002713a
10027183:	push   0x0
10027185:	push   0x0
10027187:	call   0x10047aa4
1002718c:	call   0x10059bfd
10027191:	ret    0x1c
10027194:	push   0x18
10027196:	mov    eax,0x10060a98
1002719b:	call   0x10059b58
100271a0:	mov    ebx,DWORD PTR [ebp+0x14]
100271a3:	mov    esi,DWORD PTR [ebp+0x18]
100271a6:	and    DWORD PTR [ebp-0x4],0x0
100271aa:	mov    edi,0x10080f70
100271af:	mov    DWORD PTR [ebp-0x1c],ebx
100271b2:	mov    DWORD PTR [ebp-0x18],esi
100271b5:	test   ebx,ebx
100271b7:	je     0x100271be
100271b9:	cmp    ebx,DWORD PTR [ebp+0x1c]
100271bc:	je     0x100271c3
100271be:	call   0x100434a0
100271c3:	cmp    esi,DWORD PTR [ebp+0x20]
100271c6:	je     0x10027253
100271cc:	test   ebx,ebx
100271ce:	jne    0x100271d5
100271d0:	call   0x100434a0
100271d5:	cmp    esi,DWORD PTR [ebx+0x4]
100271d8:	jne    0x100271df
100271da:	call   0x100434a0
100271df:	push   DWORD PTR [ebp+0x10]
100271e2:	add    esi,0x8
100271e5:	push   DWORD PTR [ebp+0xc]
100271e8:	push   esi
100271e9:	call   0x10026ea6
100271ee:	lea    esi,[ebp+0x14]
100271f1:	call   0x100268f0
100271f6:	mov    esi,DWORD PTR [ebp+0x18]
100271f9:	mov    ebx,DWORD PTR [ebp+0x14]
100271fc:	jmp    0x100271b5
100271fe:	mov    edi,DWORD PTR [ebp+0x10]
10027201:	mov    eax,DWORD PTR [ebp-0x1c]
10027204:	test   eax,eax
10027206:	je     0x1002720d
10027208:	cmp    eax,DWORD PTR [ebp+0x14]
1002720b:	je     0x10027212
1002720d:	call   0x100434a0
10027212:	mov    eax,DWORD PTR [ebp-0x18]
10027215:	cmp    eax,DWORD PTR [ebp+0x18]
10027218:	je     0x1002724a
1002721a:	mov    ebx,DWORD PTR [ebp+0xc]
1002721d:	test   ebx,ebx
1002721f:	mov    DWORD PTR [ebp+0x20],edi
10027222:	jne    0x10027229
10027224:	call   0x100434a0
10027229:	mov    esi,DWORD PTR [edi+0x4]
1002722c:	cmp    esi,DWORD PTR [ebx+0x4]
1002722f:	jne    0x10027236
10027231:	call   0x100434a0
10027236:	push   esi
10027237:	push   ebx
10027238:	lea    ebx,[ebp-0x24]
1002723b:	call   0x10027348
10027240:	lea    esi,[ebp-0x1c]
10027243:	call   0x100268f0
10027248:	jmp    0x10027201
1002724a:	push   0x0
1002724c:	push   0x0
1002724e:	call   0x10047aa4
10027253:	call   0x10059bfd
10027258:	ret    0x1c
1002725b:	push   ebp
1002725c:	mov    ebp,esp
1002725e:	push   ecx
1002725f:	push   ecx
10027260:	mov    eax,DWORD PTR [ebp+0x8]
10027263:	push   esi
10027264:	push   edi
10027265:	mov    edi,DWORD PTR [ebp+0xc]
10027268:	lea    esi,[ebp+0x8]
1002726b:	mov    DWORD PTR [ebp-0x8],eax
1002726e:	call   0x100268f0
10027273:	cmp    edi,DWORD PTR ds:0x10080f8c
10027279:	je     0x10027297
1002727b:	mov    eax,DWORD PTR [edi+0x4]
1002727e:	mov    ecx,DWORD PTR [edi]
10027280:	mov    DWORD PTR [eax],ecx
10027282:	mov    eax,DWORD PTR [edi]
10027284:	mov    ecx,DWORD PTR [edi+0x4]
10027287:	push   edi
10027288:	mov    DWORD PTR [eax+0x4],ecx
1002728b:	call   0x10042f82
10027290:	dec    DWORD PTR ds:0x10080f90
10027296:	pop    ecx
10027297:	mov    eax,DWORD PTR [ebp+0x8]
1002729a:	mov    DWORD PTR [ebx],eax
1002729c:	mov    eax,DWORD PTR [ebp+0xc]
1002729f:	pop    edi
100272a0:	mov    DWORD PTR [ebx+0x4],eax
100272a3:	mov    eax,ebx
100272a5:	pop    esi
100272a6:	leave  
100272a7:	ret    0x8
100272aa:	push   ebp
100272ab:	mov    ebp,esp
100272ad:	push   ecx
100272ae:	push   ecx
100272af:	mov    eax,DWORD PTR [ebp+0x8]
100272b2:	push   esi
100272b3:	push   edi
100272b4:	mov    edi,DWORD PTR [ebp+0xc]
100272b7:	lea    esi,[ebp+0x8]
100272ba:	mov    DWORD PTR [ebp-0x8],eax
100272bd:	call   0x100268f0
100272c2:	cmp    edi,DWORD PTR ds:0x10080f80
100272c8:	je     0x100272e6
100272ca:	mov    eax,DWORD PTR [edi+0x4]
100272cd:	mov    ecx,DWORD PTR [edi]
100272cf:	mov    DWORD PTR [eax],ecx
100272d1:	mov    eax,DWORD PTR [edi]
100272d3:	mov    ecx,DWORD PTR [edi+0x4]
100272d6:	push   edi
100272d7:	mov    DWORD PTR [eax+0x4],ecx
100272da:	call   0x10042f82
100272df:	dec    DWORD PTR ds:0x10080f84
100272e5:	pop    ecx
100272e6:	mov    eax,DWORD PTR [ebp+0x8]
100272e9:	mov    DWORD PTR [ebx],eax
100272eb:	mov    eax,DWORD PTR [ebp+0xc]
100272ee:	pop    edi
100272ef:	mov    DWORD PTR [ebx+0x4],eax
100272f2:	mov    eax,ebx
100272f4:	pop    esi
100272f5:	leave  
100272f6:	ret    0x8
100272f9:	push   ebp
100272fa:	mov    ebp,esp
100272fc:	push   ecx
100272fd:	push   ecx
100272fe:	mov    eax,DWORD PTR [ebp+0x8]
10027301:	push   esi
10027302:	push   edi
10027303:	mov    edi,DWORD PTR [ebp+0xc]
10027306:	lea    esi,[ebp+0x8]
10027309:	mov    DWORD PTR [ebp-0x8],eax
1002730c:	call   0x100268f0
10027311:	cmp    edi,DWORD PTR ds:0x10080f98
10027317:	je     0x10027335
10027319:	mov    eax,DWORD PTR [edi+0x4]
1002731c:	mov    ecx,DWORD PTR [edi]
1002731e:	mov    DWORD PTR [eax],ecx
10027320:	mov    eax,DWORD PTR [edi]
10027322:	mov    ecx,DWORD PTR [edi+0x4]
10027325:	push   edi
10027326:	mov    DWORD PTR [eax+0x4],ecx
10027329:	call   0x10042f82
1002732e:	dec    DWORD PTR ds:0x10080f9c
10027334:	pop    ecx
10027335:	mov    eax,DWORD PTR [ebp+0x8]
10027338:	mov    DWORD PTR [ebx],eax
1002733a:	mov    eax,DWORD PTR [ebp+0xc]
1002733d:	pop    edi
1002733e:	mov    DWORD PTR [ebx+0x4],eax
10027341:	mov    eax,ebx
10027343:	pop    esi
10027344:	leave  
10027345:	ret    0x8
10027348:	push   ebp
10027349:	mov    ebp,esp
1002734b:	push   ecx
1002734c:	push   ecx
1002734d:	mov    eax,DWORD PTR [ebp+0x8]
10027350:	push   esi
10027351:	push   edi
10027352:	mov    edi,DWORD PTR [ebp+0xc]
10027355:	lea    esi,[ebp+0x8]
10027358:	mov    DWORD PTR [ebp-0x8],eax
1002735b:	call   0x100268f0
10027360:	cmp    edi,DWORD PTR ds:0x10080f74
10027366:	je     0x10027384
10027368:	mov    eax,DWORD PTR [edi+0x4]
1002736b:	mov    ecx,DWORD PTR [edi]
1002736d:	mov    DWORD PTR [eax],ecx
1002736f:	mov    eax,DWORD PTR [edi]
10027371:	mov    ecx,DWORD PTR [edi+0x4]
10027374:	push   edi
10027375:	mov    DWORD PTR [eax+0x4],ecx
10027378:	call   0x10042f82
1002737d:	dec    DWORD PTR ds:0x10080f78
10027383:	pop    ecx
10027384:	mov    eax,DWORD PTR [ebp+0x8]
10027387:	mov    DWORD PTR [ebx],eax
10027389:	mov    eax,DWORD PTR [ebp+0xc]
1002738c:	pop    edi
1002738d:	mov    DWORD PTR [ebx+0x4],eax
10027390:	mov    eax,ebx
10027392:	pop    esi
10027393:	leave  
10027394:	ret    0x8
10027397:	push   ebp
10027398:	mov    ebp,esp
1002739a:	and    esp,0xfffffff8
1002739d:	push   0xffffffff
1002739f:	push   0x10063503
100273a4:	mov    eax,fs:0x0
100273aa:	push   eax
100273ab:	sub    esp,0x60
100273ae:	mov    eax,ds:0x1007e030
100273b3:	xor    eax,esp
100273b5:	mov    DWORD PTR [esp+0x58],eax
100273b9:	push   ebx
100273ba:	push   esi
100273bb:	push   edi
100273bc:	mov    eax,ds:0x1007e030
100273c1:	xor    eax,esp
100273c3:	push   eax
100273c4:	lea    eax,[esp+0x70]
100273c8:	mov    fs:0x0,eax
100273ce:	mov    edi,DWORD PTR [ebp+0x8]
100273d1:	push   0x7e3834e0
100273d6:	push   0x1007198c
100273db:	call   0x100042bd
100273e0:	push   0x7dee140a
100273e5:	push   eax
100273e6:	call   0x100042bd
100273eb:	push   0x525f706a
100273f0:	push   eax
100273f1:	call   0x100042bd
100273f6:	push   eax
100273f7:	push   0x7
100273f9:	mov    ebx,0x1006d698
100273fe:	push   ebx
100273ff:	call   0x100042cf
10027404:	add    esp,0x24
10027407:	push   eax
10027408:	lea    ecx,[esp+0x34]
1002740c:	call   0x100011c8
10027411:	xor    esi,esi
10027413:	push   esi
10027414:	lea    eax,[esp+0x34]
10027418:	push   eax
10027419:	lea    eax,[esp+0x54]
1002741d:	push   eax
1002741e:	mov    DWORD PTR [esp+0x84],esi
10027425:	mov    eax,DWORD PTR [edi+0x4]
10027428:	add    eax,0x18
1002742b:	call   0x10008602
10027430:	push   esi
10027431:	push   0x1
10027433:	lea    ecx,[esp+0x38]
10027437:	mov    BYTE PTR [esp+0x80],0x2
1002743f:	call   0x100012eb
10027444:	push   0x1006cd08
10027449:	lea    esi,[esp+0x50]
1002744d:	call   0x10006639
10027452:	test   al,al
10027454:	pop    ecx
10027455:	jne    0x10027526
1002745b:	push   0x10080d54
10027460:	mov    ecx,esi
10027462:	call   0x10001152
10027467:	test   al,al
10027469:	je     0x10027526
1002746f:	push   DWORD PTR [edi]
10027471:	lea    ecx,[esp+0x18]
10027475:	call   0x10008c7d
1002747a:	cmp    DWORD PTR [eax+0x18],0x10
1002747e:	jb     0x10027485
10027480:	mov    eax,DWORD PTR [eax+0x4]
10027483:	jmp    0x10027488
10027485:	add    eax,0x4
10027488:	cmp    DWORD PTR [esp+0x64],0x10
1002748d:	mov    ecx,DWORD PTR [esp+0x50]
10027491:	jae    0x10027497
10027493:	lea    ecx,[esp+0x50]
10027497:	push   eax
10027498:	push   ecx
10027499:	call   0x1000206e
1002749e:	pop    ecx
1002749f:	pop    ecx
100274a0:	push   0x0
100274a2:	push   0x1
100274a4:	lea    ecx,[esp+0x1c]
100274a8:	call   0x100012eb
100274ad:	push   0x4234cdcc
100274b2:	push   0x100719b0
100274b7:	call   0x100042bd
100274bc:	push   eax
100274bd:	push   0x7
100274bf:	push   ebx
100274c0:	call   0x100042cf
100274c5:	add    esp,0x14
100274c8:	push   eax
100274c9:	lea    ecx,[esp+0x18]
100274cd:	call   0x100011c8
100274d2:	lea    eax,[esp+0x14]
100274d6:	push   eax
100274d7:	mov    BYTE PTR [esp+0x7c],0x3
100274dc:	mov    eax,DWORD PTR [edi+0x4]
100274df:	add    eax,0x18
100274e2:	push   eax
100274e3:	call   0x100083a0
100274e8:	push   0x0
100274ea:	push   0x1
100274ec:	lea    ecx,[esp+0x1c]
100274f0:	call   0x100012eb
100274f5:	mov    bl,0x1
100274f7:	push   0x0
100274f9:	push   0x1
100274fb:	lea    ecx,[esp+0x54]
100274ff:	call   0x100012eb
10027504:	mov    al,bl
10027506:	mov    ecx,DWORD PTR [esp+0x70]
1002750a:	mov    DWORD PTR fs:0x0,ecx
10027511:	pop    ecx
10027512:	pop    edi
10027513:	pop    esi
10027514:	pop    ebx
10027515:	mov    ecx,DWORD PTR [esp+0x58]
10027519:	xor    ecx,esp
1002751b:	call   0x10042f87
10027520:	mov    esp,ebp
10027522:	pop    ebp
10027523:	ret    0x4
10027526:	xor    bl,bl
10027528:	jmp    0x100274f7
1002752a:	push   ebp
1002752b:	mov    ebp,esp
1002752d:	and    esp,0xfffffff8
10027530:	push   0xffffffff
10027532:	push   0x100634c3
10027537:	mov    eax,fs:0x0
1002753d:	push   eax
1002753e:	sub    esp,0x2c
10027541:	mov    eax,ds:0x1007e030
10027546:	xor    eax,esp
10027548:	mov    DWORD PTR [esp+0x24],eax
1002754c:	push   ebx
1002754d:	push   edi
1002754e:	mov    eax,ds:0x1007e030
10027553:	xor    eax,esp
10027555:	push   eax
10027556:	lea    eax,[esp+0x38]
1002755a:	mov    fs:0x0,eax
10027560:	mov    ebx,DWORD PTR [ebp+0x8]
10027563:	lea    eax,[esp+0x14]
10027567:	push   eax
10027568:	mov    DWORD PTR [esp+0x14],ecx
1002756c:	mov    edi,edx
1002756e:	call   0x10030b80
10027573:	pop    ecx
10027574:	and    DWORD PTR [esp+0x40],0x0
10027579:	mov    eax,DWORD PTR [edi]
1002757b:	push   esi
1002757c:	lea    ecx,[esp+0x18]
10027580:	push   ecx
10027581:	push   eax
10027582:	call   0x100352a0
10027587:	mov    ecx,DWORD PTR [esi+0x70]
1002758a:	shr    ecx,0x2
1002758d:	test   cl,0x1
10027590:	jne    0x10027594
10027592:	xor    al,al
10027594:	test   al,al
10027596:	je     0x100275c8
10027598:	xor    eax,eax
1002759a:	inc    eax
1002759b:	push   0x0
1002759d:	mov    DWORD PTR [ebx],eax
1002759f:	push   eax
100275a0:	lea    ecx,[esp+0x1c]
100275a4:	call   0x100012eb
100275a9:	mov    al,0x1
100275ab:	mov    ecx,DWORD PTR [esp+0x38]
100275af:	mov    DWORD PTR fs:0x0,ecx
100275b6:	pop    ecx
100275b7:	pop    edi
100275b8:	pop    ebx
100275b9:	mov    ecx,DWORD PTR [esp+0x24]
100275bd:	xor    ecx,esp
100275bf:	call   0x10042f87
100275c4:	mov    esp,ebp
100275c6:	pop    ebp
100275c7:	ret    
100275c8:	mov    edi,DWORD PTR [edi]
100275ca:	push   esi
100275cb:	push   DWORD PTR [esp+0x14]
100275cf:	push   edi
100275d0:	call   0x100352a0
100275d5:	test   al,al
100275d7:	je     0x100275e2
100275d9:	and    DWORD PTR [ebx],0x0
100275dc:	push   0x0
100275de:	push   0x1
100275e0:	jmp    0x100275a0
100275e2:	push   esi
100275e3:	push   DWORD PTR [esp+0x14]
100275e7:	push   0x10080e54
100275ec:	call   0x10012d45
100275f1:	test   al,al
100275f3:	je     0x1002760e
100275f5:	mov    DWORD PTR [ebx],0x2
100275fb:	mov    bl,0x1
100275fd:	push   0x0
100275ff:	push   0x1
10027601:	lea    ecx,[esp+0x1c]
10027605:	call   0x100012eb
1002760a:	mov    al,bl
1002760c:	jmp    0x100275ab
1002760e:	xor    bl,bl
10027610:	jmp    0x100275fd
10027612:	push   ebp
10027613:	mov    ebp,esp
10027615:	and    esp,0xfffffff8
10027618:	push   0xffffffff
1002761a:	push   0x100634a0
1002761f:	mov    eax,fs:0x0
10027625:	push   eax
10027626:	sub    esp,0x20
10027629:	push   ebx
1002762a:	mov    eax,ds:0x1007e030
1002762f:	xor    eax,esp
10027631:	push   eax
10027632:	lea    eax,[esp+0x28]
10027636:	mov    fs:0x0,eax
1002763c:	mov    ebx,edx
1002763e:	mov    eax,DWORD PTR [ebp+0x8]
10027641:	sub    eax,0x0
10027644:	je     0x10027687
10027646:	dec    eax
10027647:	je     0x1002765c
10027649:	dec    eax
1002764a:	jne    0x10027693
1002764c:	push   ecx
1002764d:	mov    ecx,DWORD PTR [ebp+0xc]
10027650:	push   0x10080e54
10027655:	call   0x10012da0
1002765a:	jmp    0x10027693
1002765c:	lea    eax,[esp+0x8]
10027660:	push   eax
10027661:	call   0x10030b80
10027666:	pop    ecx
10027667:	push   DWORD PTR [ebp+0xc]
1002766a:	and    DWORD PTR [esp+0x34],0x0
1002766f:	push   ebx
10027670:	push   eax
10027671:	push   DWORD PTR [esi]
10027673:	call   0x10035110
10027678:	push   0x0
1002767a:	push   0x1
1002767c:	lea    ecx,[esp+0x10]
10027680:	call   0x100012eb
10027685:	jmp    0x10027693
10027687:	push   DWORD PTR [ebp+0xc]
1002768a:	push   ebx
1002768b:	push   ecx
1002768c:	push   DWORD PTR [esi]
1002768e:	call   0x10035110
10027693:	mov    ecx,DWORD PTR [esp+0x28]
10027697:	mov    DWORD PTR fs:0x0,ecx
1002769e:	pop    ecx
1002769f:	pop    ebx
100276a0:	mov    esp,ebp
100276a2:	pop    ebp
100276a3:	ret    
100276a4:	push   ebp
100276a5:	sub    esp,0xa4
100276ab:	lea    ebp,[esp-0x4]
100276af:	mov    eax,ds:0x1007e030
100276b4:	xor    eax,ebp
100276b6:	mov    DWORD PTR [ebp+0xa4],eax
100276bc:	push   0x24
100276be:	mov    eax,0x100650a6
100276c3:	call   0x10059b58
100276c8:	mov    eax,DWORD PTR [ebp+0xb0]
100276ce:	xor    esi,esi
100276d0:	mov    DWORD PTR [ebp-0x4],esi
100276d3:	push   DWORD PTR [eax]
100276d5:	lea    ecx,[ebp+0x88]
100276db:	mov    DWORD PTR [ebp-0x2c],eax
100276de:	call   0x10008c7d
100276e3:	lea    eax,[ebp-0x20]
100276e6:	push   esi
100276e7:	push   eax
100276e8:	mov    BYTE PTR [ebp-0x4],0x1
100276ec:	call   0x10002898
100276f1:	pop    ecx
100276f2:	pop    ecx
100276f3:	mov    ecx,DWORD PTR [eax]
100276f5:	mov    ebx,ecx
100276f7:	mov    DWORD PTR [eax],esi
100276f9:	mov    DWORD PTR [ebp-0x1c],ebx
100276fc:	lea    eax,[ebp-0x20]
100276ff:	mov    BYTE PTR [ebp-0x4],0x2
10027703:	call   0x10004296
10027708:	push   ebx
10027709:	call   0x10002916
1002770e:	test   al,al
10027710:	jne    0x10027720
10027712:	lea    eax,[ebp-0x1c]
10027715:	call   0x10004296
1002771a:	push   esi
1002771b:	jmp    0x100278e8
10027720:	lea    edi,[ebp+0x0]
10027723:	call   0x10012d10
10027728:	lea    eax,[ebp-0x20]
1002772b:	push   eax
1002772c:	mov    esi,edi
1002772e:	mov    edx,ebx
10027730:	lea    ecx,[ebp+0x88]
10027736:	mov    BYTE PTR [ebp-0x4],0x3
1002773a:	call   0x1002752a
1002773f:	test   al,al
10027741:	pop    ecx
10027742:	je     0x100278d6
10027748:	call   0x1002fa60
1002774d:	mov    edi,eax
1002774f:	mov    eax,DWORD PTR [ebp+0x84]
10027755:	cmp    eax,edx
10027757:	mov    DWORD PTR [ebp-0x28],edi
1002775a:	mov    DWORD PTR [ebp-0x24],edx
1002775d:	jb     0x10027773
1002775f:	ja     0x100278d6
10027765:	mov    eax,DWORD PTR [ebp+0x80]
1002776b:	cmp    eax,edi
1002776d:	ja     0x100278d6
10027773:	mov    eax,DWORD PTR [ebp+0x70]
10027776:	shr    eax,0xa
10027779:	test   al,0x1
1002777b:	jne    0x100277e6
1002777d:	mov    eax,DWORD PTR [ebx]
1002777f:	push   0x5
10027781:	push   eax
10027782:	lea    ecx,[ebp-0x18]
10027785:	call   0x10035b10
1002778a:	mov    ecx,DWORD PTR [eax+0x4]
1002778d:	cmp    ecx,DWORD PTR [ebp-0x24]
10027790:	jb     0x100277e6
10027792:	ja     0x1002779a
10027794:	mov    eax,DWORD PTR [eax]
10027796:	cmp    eax,edi
10027798:	jbe    0x100277e6
1002779a:	cmp    DWORD PTR [ebp+0xa0],0x10
100277a1:	mov    eax,DWORD PTR [ebp+0x8c]
100277a7:	jae    0x100277af
100277a9:	lea    eax,[ebp+0x8c]
100277af:	push   eax
100277b0:	call   0x1000206e
100277b5:	push   0xc
100277b7:	call   0x100379e0
100277bc:	xor    bl,bl
100277be:	pop    ecx
100277bf:	pop    ecx
100277c0:	lea    esi,[ebp+0x0]
100277c3:	call   0x10003423
100277c8:	lea    eax,[ebp-0x1c]
100277cb:	call   0x10004296
100277d0:	push   0x0
100277d2:	push   0x1
100277d4:	lea    ecx,[ebp+0x88]
100277da:	call   0x100012eb
100277df:	mov    al,bl
100277e1:	jmp    0x100278f7
100277e6:	push   DWORD PTR [ebx]
100277e8:	call   0x10035e50
100277ed:	mov    esi,0x2710
100277f2:	mov    ecx,esi
100277f4:	mul    ecx
100277f6:	add    eax,edi
100277f8:	adc    edx,DWORD PTR [ebp-0x24]
100277fb:	lea    ecx,[ebp-0x18]
100277fe:	push   ecx
100277ff:	mov    DWORD PTR [ebp-0x18],eax
10027802:	mov    eax,DWORD PTR [ebx]
10027804:	push   eax
10027805:	push   0x5
10027807:	pop    ecx
10027808:	mov    DWORD PTR [ebp-0x14],edx
1002780b:	call   0x10035c30
10027810:	mov    eax,DWORD PTR [ebp-0x2c]
10027813:	push   DWORD PTR [eax]
10027815:	call   0x100267d8
1002781a:	test   al,al
1002781c:	pop    ecx
1002781d:	jne    0x100278a7
10027823:	push   0x0
10027825:	push   esi
10027826:	push   DWORD PTR [ebp+0x7c]
10027829:	push   DWORD PTR [ebp+0x78]
1002782c:	call   0x1005f5f0
10027831:	push   DWORD PTR [ebx]
10027833:	and    DWORD PTR [ebp-0x14],0x0
10027837:	mov    edi,eax
10027839:	mov    DWORD PTR [ebp-0x30],edi
1002783c:	call   0x10036180
10027841:	lea    ecx,[ebp-0x30]
10027844:	push   ecx
10027845:	lea    ecx,[ebp-0x14]
10027848:	push   ecx
10027849:	mov    ecx,DWORD PTR [ebp-0x2c]
1002784c:	push   eax
1002784d:	push   edi
1002784e:	push   DWORD PTR [ebp-0x20]
10027851:	lea    eax,[ebp+0x88]
10027857:	push   eax
10027858:	lea    edx,[ebp+0x0]
1002785b:	call   0x10027922
10027860:	mov    eax,DWORD PTR [ebp-0x30]
10027863:	push   0x0
10027865:	cdq    
10027866:	push   esi
10027867:	push   edx
10027868:	push   eax
10027869:	call   0x1004f4f0
1002786e:	add    eax,DWORD PTR [ebp-0x28]
10027871:	push   0x0
10027873:	adc    edx,DWORD PTR [ebp-0x24]
10027876:	mov    DWORD PTR [ebp-0x28],eax
10027879:	mov    eax,DWORD PTR [ebp-0x14]
1002787c:	mov    DWORD PTR [ebp-0x24],edx
1002787f:	cdq    
10027880:	push   esi
10027881:	push   edx
10027882:	push   eax
10027883:	call   0x1004f4f0
10027888:	mov    DWORD PTR [ebp-0x18],eax
1002788b:	lea    eax,[ebp-0x28]
1002788e:	push   eax
1002788f:	push   DWORD PTR [ebp-0x20]
10027892:	mov    DWORD PTR [ebp-0x14],edx
10027895:	lea    edx,[ebp-0x18]
10027898:	mov    esi,ebx
1002789a:	lea    ecx,[ebp+0x88]
100278a0:	call   0x10027612
100278a5:	jmp    0x100278cf
100278a7:	cmp    DWORD PTR [ebp+0x50],0x10
100278ab:	mov    ecx,DWORD PTR [ebp+0x3c]
100278ae:	jae    0x100278b3
100278b0:	lea    ecx,[ebp+0x3c]
100278b3:	cmp    DWORD PTR [ebp+0xa0],0x10
100278ba:	mov    eax,DWORD PTR [ebp+0x8c]
100278c0:	jae    0x100278c8
100278c2:	lea    eax,[ebp+0x8c]
100278c8:	push   ecx
100278c9:	push   eax
100278ca:	call   0x1000206e
100278cf:	mov    bl,0x1
100278d1:	jmp    0x100277be
100278d6:	lea    esi,[ebp+0x0]
100278d9:	call   0x10003423
100278de:	lea    eax,[ebp-0x1c]
100278e1:	call   0x10004296
100278e6:	push   0x0
100278e8:	push   0x1
100278ea:	lea    ecx,[ebp+0x88]
100278f0:	call   0x100012eb
100278f5:	xor    al,al
100278f7:	mov    ecx,DWORD PTR [ebp-0xc]
100278fa:	mov    DWORD PTR fs:0x0,ecx
10027901:	pop    ecx
10027902:	pop    edi
10027903:	pop    esi
10027904:	pop    ebx
10027905:	mov    ecx,DWORD PTR [ebp+0xa4]
1002790b:	xor    ecx,ebp
1002790d:	call   0x10042f87
10027912:	add    ebp,0xa8
10027918:	leave  
10027919:	ret    0x4
1002791c:	mov    eax,0x100278f5
10027921:	ret    
10027922:	push   ebp
10027923:	mov    ebp,esp
10027925:	and    esp,0xfffffff8
10027928:	push   0xffffffff
1002792a:	push   0x1006505d
1002792f:	mov    eax,fs:0x0
10027935:	push   eax
10027936:	sub    esp,0x120
1002793c:	mov    eax,ds:0x1007e030
10027941:	xor    eax,esp
10027943:	mov    DWORD PTR [esp+0x118],eax
1002794a:	push   ebx
1002794b:	push   esi
1002794c:	push   edi
1002794d:	mov    eax,ds:0x1007e030
10027952:	xor    eax,esp
10027954:	push   eax
10027955:	lea    eax,[esp+0x130]
1002795c:	mov    fs:0x0,eax
10027962:	mov    eax,DWORD PTR [ebp+0x8]
10027965:	mov    DWORD PTR [esp+0x20],eax
10027969:	mov    eax,DWORD PTR [ebp+0x18]
1002796c:	mov    DWORD PTR [esp+0x24],eax
10027970:	mov    eax,DWORD PTR [ebp+0x1c]
10027973:	mov    esi,edx
10027975:	mov    DWORD PTR [esp+0x44],eax
10027979:	mov    edi,ecx
1002797b:	lea    eax,[esi+0x38]
1002797e:	push   eax
1002797f:	lea    ecx,[esp+0x84]
10027986:	mov    DWORD PTR [esp+0x20],edi
1002798a:	call   0x100011a2
1002798f:	lea    eax,[esi+0x54]
10027992:	xor    ebx,ebx
10027994:	push   eax
10027995:	lea    ecx,[esp+0xd8]
1002799c:	mov    DWORD PTR [esp+0x13c],ebx
100279a3:	call   0x100011a2
100279a8:	mov    BYTE PTR [esp+0x138],0x1
100279b0:	mov    eax,DWORD PTR [esi+0x70]
100279b3:	lea    edx,[esp+0x80]
100279ba:	lea    ecx,[esp+0x10c]
100279c1:	mov    DWORD PTR [esp+0x14],eax
100279c5:	call   0x10033d80
100279ca:	push   0x1006cd08
100279cf:	lea    esi,[esp+0x110]
100279d6:	mov    BYTE PTR [esp+0x13c],0x2
100279de:	call   0x10006639
100279e3:	test   al,al
100279e5:	pop    ecx
100279e6:	jne    0x100279fa
100279e8:	push   0xffffffff
100279ea:	push   ebx
100279eb:	mov    eax,esi
100279ed:	push   eax
100279ee:	lea    ecx,[esp+0x8c]
100279f5:	call   0x1000123c
100279fa:	mov    eax,DWORD PTR [esp+0x14]
100279fe:	shr    eax,0x3
10027a01:	test   al,0x1
10027a03:	je     0x10027b4b
10027a09:	push   0x69418348
10027a0e:	push   0x100719d4
10027a13:	call   0x100042bd
10027a18:	push   eax
10027a19:	push   0x7
10027a1b:	mov    esi,0x1006d698
10027a20:	push   esi
10027a21:	call   0x100042cf
10027a26:	add    esp,0x14
10027a29:	push   eax
10027a2a:	lea    ecx,[esp+0xa0]
10027a31:	call   0x100011c8
10027a36:	push   ebx
10027a37:	lea    eax,[esp+0xa0]
10027a3e:	push   eax
10027a3f:	lea    eax,[esp+0xc0]
10027a46:	push   eax
10027a47:	mov    BYTE PTR [esp+0x144],0x3
10027a4f:	mov    eax,DWORD PTR [edi]
10027a51:	add    eax,0x18
10027a54:	call   0x10008602
10027a59:	mov    ecx,DWORD PTR [esp+0x20]
10027a5d:	push   eax
10027a5e:	lea    eax,[esp+0xf4]
10027a65:	push   eax
10027a66:	mov    BYTE PTR [esp+0x140],0x4
10027a6e:	call   0x10028914
10027a73:	mov    DWORD PTR [esp+0x10],eax
10027a77:	push   0x306a67cc
10027a7c:	push   0x100719fc
10027a81:	mov    BYTE PTR [esp+0x140],0x5
10027a89:	call   0x100042bd
10027a8e:	push   0x5e9ca500
10027a93:	push   eax
10027a94:	call   0x100042bd
10027a99:	push   0x5a2350ee
10027a9e:	push   eax
10027a9f:	call   0x100042bd
10027aa4:	push   eax
10027aa5:	push   0x5
10027aa7:	push   0x10071a34
10027aac:	call   0x100042cf
10027ab1:	add    esp,0x24
10027ab4:	push   eax
10027ab5:	lea    eax,[esp+0x84]
10027abc:	push   eax
10027abd:	lea    eax,[esp+0x50]
10027ac1:	push   eax
10027ac2:	call   0x1000653b
10027ac7:	add    esp,0xc
10027aca:	mov    BYTE PTR [esp+0x138],0x6
10027ad2:	push   DWORD PTR [esp+0x10]
10027ad6:	push   eax
10027ad7:	lea    eax,[esp+0x30]
10027adb:	push   eax
10027adc:	call   0x10006581
10027ae1:	add    esp,0xc
10027ae4:	push   0xffffffff
10027ae6:	push   ebx
10027ae7:	push   eax
10027ae8:	lea    ecx,[esp+0x8c]
10027aef:	mov    BYTE PTR [esp+0x144],0x7
10027af7:	call   0x1000123c
10027afc:	push   ebx
10027afd:	push   0x1
10027aff:	lea    ecx,[esp+0x30]
10027b03:	call   0x100012eb
10027b08:	push   ebx
10027b09:	push   0x1
10027b0b:	lea    ecx,[esp+0x50]
10027b0f:	call   0x100012eb
10027b14:	push   ebx
10027b15:	push   0x1
10027b17:	lea    ecx,[esp+0xf8]
10027b1e:	call   0x100012eb
10027b23:	push   ebx
10027b24:	push   0x1
10027b26:	lea    ecx,[esp+0xc0]
10027b2d:	call   0x100012eb
10027b32:	push   ebx
10027b33:	push   0x1
10027b35:	lea    ecx,[esp+0xa4]
10027b3c:	mov    BYTE PTR [esp+0x140],0x2
10027b44:	call   0x100012eb
10027b49:	jmp    0x10027b50
10027b4b:	mov    esi,0x1006d698
10027b50:	mov    eax,DWORD PTR [esp+0x14]
10027b54:	shr    eax,0x4
10027b57:	test   al,0x1
10027b59:	je     0x10027e23
10027b5f:	push   ebx
10027b60:	lea    ecx,[esp+0xa0]
10027b67:	mov    DWORD PTR [esp+0xb8],0xf
10027b72:	call   0x10001417
10027b77:	push   ebx
10027b78:	lea    ecx,[esp+0xf4]
10027b7f:	mov    DWORD PTR [esp+0x10c],0xf
10027b8a:	call   0x10001417
10027b8f:	push   ebx
10027b90:	lea    ecx,[esp+0xbc]
10027b97:	mov    DWORD PTR [esp+0x14],ebx
10027b9b:	mov    DWORD PTR [esp+0xd4],0xf
10027ba6:	call   0x10001417
10027bab:	cmp    DWORD PTR [ebp+0xc],0x2
10027baf:	mov    BYTE PTR [esp+0x138],0xa
10027bb7:	mov    eax,0x10071a3c
10027bbc:	je     0x10027bc3
10027bbe:	mov    eax,0x10071a40
10027bc3:	push   eax
10027bc4:	lea    ecx,[esp+0x2c]
10027bc8:	call   0x100011c8
10027bcd:	push   0x138e2f6e
10027bd2:	push   0x10071a44
10027bd7:	mov    BYTE PTR [esp+0x140],0xb
10027bdf:	call   0x100042bd
10027be4:	push   0x2cad589a
10027be9:	push   eax
10027bea:	call   0x100042bd
10027bef:	push   0x3e206
10027bf4:	push   eax
10027bf5:	call   0x100042bd
10027bfa:	push   0x7dcd4adc
10027bff:	push   eax
10027c00:	call   0x100042bd
10027c05:	push   0x58417e8e
10027c0a:	push   eax
10027c0b:	call   0x100042bd
10027c10:	push   0x1e67c23a
10027c15:	push   eax
10027c16:	call   0x100042bd
10027c1b:	push   eax
10027c1c:	push   0x7
10027c1e:	push   esi
10027c1f:	call   0x100042cf
10027c24:	add    esp,0x3c
10027c27:	push   eax
10027c28:	lea    ecx,[esp+0x4c]
10027c2c:	call   0x100011c8
10027c31:	push   ebx
10027c32:	lea    eax,[esp+0x4c]
10027c36:	push   eax
10027c37:	lea    eax,[esp+0x6c]
10027c3b:	push   eax
10027c3c:	mov    BYTE PTR [esp+0x144],0xc
10027c44:	mov    eax,DWORD PTR [edi]
10027c46:	add    eax,0x18
10027c49:	call   0x10008602
10027c4e:	push   DWORD PTR [esp+0x44]
10027c52:	mov    BYTE PTR [esp+0x13c],0xd
10027c5a:	push   DWORD PTR [esp+0x28]
10027c5e:	lea    ecx,[esp+0xc0]
10027c65:	push   ecx
10027c66:	lea    ecx,[esp+0xfc]
10027c6d:	push   ecx
10027c6e:	lea    ecx,[esp+0xac]
10027c75:	push   ecx
10027c76:	lea    ecx,[esp+0x24]
10027c7a:	push   ecx
10027c7b:	push   DWORD PTR [ebp+0x14]
10027c7e:	lea    ecx,[esp+0x44]
10027c82:	push   DWORD PTR [ebp+0x10]
10027c85:	mov    edx,eax
10027c87:	push   ecx
10027c88:	lea    ecx,[esp+0xf8]
10027c8f:	push   ecx
10027c90:	lea    ecx,[esp+0xa8]
10027c97:	push   ecx
10027c98:	mov    ecx,DWORD PTR [esp+0x4c]
10027c9c:	call   0x1002831f
10027ca1:	push   ebx
10027ca2:	push   0x1
10027ca4:	lea    ecx,[esp+0x6c]
10027ca8:	mov    BYTE PTR [esp+0x23],al
10027cac:	call   0x100012eb
10027cb1:	push   ebx
10027cb2:	push   0x1
10027cb4:	lea    ecx,[esp+0x50]
10027cb8:	call   0x100012eb
10027cbd:	push   ebx
10027cbe:	push   0x1
10027cc0:	lea    ecx,[esp+0x30]
10027cc4:	mov    BYTE PTR [esp+0x140],0xa
10027ccc:	call   0x100012eb
10027cd1:	cmp    BYTE PTR [esp+0x1b],bl
10027cd5:	je     0x10027de6
10027cdb:	mov    eax,DWORD PTR [esp+0x10]
10027cdf:	mov    ecx,eax
10027ce1:	shr    ecx,0x8
10027ce4:	test   cl,0x1
10027ce7:	je     0x10027db2
10027ced:	push   0x24
10027cef:	call   0x1004358e
10027cf4:	pop    ecx
10027cf5:	mov    DWORD PTR [esp+0x24],eax
10027cf9:	cmp    eax,ebx
10027cfb:	mov    BYTE PTR [esp+0x138],0xe
10027d03:	je     0x10027d0f
10027d05:	push   eax
10027d06:	call   0x100077cc
10027d0b:	mov    esi,eax
10027d0d:	jmp    0x10027d11
10027d0f:	xor    esi,esi
10027d11:	mov    BYTE PTR [esp+0x138],0xa
10027d19:	mov    eax,DWORD PTR [edi+0xc]
10027d1c:	cmp    esi,eax
10027d1e:	je     0x10027d2f
10027d20:	cmp    eax,ebx
10027d22:	je     0x10027d2f
10027d24:	mov    edi,eax
10027d26:	call   0x10009f5d
10027d2b:	mov    edi,DWORD PTR [esp+0x1c]
10027d2f:	cmp    DWORD PTR [esp+0xd0],0x10
10027d37:	mov    eax,DWORD PTR [esp+0xbc]
10027d3e:	mov    DWORD PTR [edi+0xc],esi
10027d41:	jae    0x10027d4a
10027d43:	lea    eax,[esp+0xbc]
10027d4a:	mov    esi,DWORD PTR [esp+0x1c]
10027d4e:	mov    edi,DWORD PTR [esp+0xcc]
10027d55:	push   eax
10027d56:	mov    eax,DWORD PTR [esi+0xc]
10027d59:	call   0x10007814
10027d5e:	mov    BYTE PTR [esi+0x14],0x1
10027d62:	xor    esi,esi
10027d64:	push   ebx
10027d65:	inc    esi
10027d66:	push   esi
10027d67:	lea    ecx,[esp+0xc0]
10027d6e:	call   0x100012eb
10027d73:	push   ebx
10027d74:	push   esi
10027d75:	lea    ecx,[esp+0xf8]
10027d7c:	call   0x100012eb
10027d81:	push   ebx
10027d82:	push   esi
10027d83:	lea    ecx,[esp+0xa4]
10027d8a:	call   0x100012eb
10027d8f:	push   ebx
10027d90:	push   esi
10027d91:	lea    ecx,[esp+0x114]
10027d98:	call   0x100012eb
10027d9d:	push   ebx
10027d9e:	push   esi
10027d9f:	lea    ecx,[esp+0xdc]
10027da6:	call   0x100012eb
10027dab:	push   ebx
10027dac:	push   esi
10027dad:	jmp    0x100282eb
10027db2:	push   0xffffffff
10027db4:	mov    DWORD PTR [esp+0x18],eax
10027db8:	push   ebx
10027db9:	lea    eax,[esp+0xa4]
10027dc0:	push   eax
10027dc1:	lea    ecx,[esp+0x8c]
10027dc8:	call   0x1000123c
10027dcd:	push   0xffffffff
10027dcf:	push   ebx
10027dd0:	lea    eax,[esp+0xf8]
10027dd7:	push   eax
10027dd8:	lea    ecx,[esp+0xe0]
10027ddf:	call   0x1000123c
10027de4:	jmp    0x10027dee
10027de6:	push   0x5
10027de8:	call   0x100379e0
10027ded:	pop    ecx
10027dee:	push   ebx
10027def:	push   0x1
10027df1:	lea    ecx,[esp+0xc0]
10027df8:	call   0x100012eb
10027dfd:	push   ebx
10027dfe:	push   0x1
10027e00:	lea    ecx,[esp+0xf8]
10027e07:	call   0x100012eb
10027e0c:	push   ebx
10027e0d:	push   0x1
10027e0f:	lea    ecx,[esp+0xa4]
10027e16:	mov    BYTE PTR [esp+0x140],0x2
10027e1e:	call   0x100012eb
10027e23:	mov    eax,DWORD PTR [esp+0x14]
10027e27:	shr    eax,0x5
10027e2a:	test   al,0x1
10027e2c:	je     0x100281b6
10027e32:	push   0x1006cd08
10027e37:	lea    esi,[esp+0x84]
10027e3e:	call   0x10006639
10027e43:	test   al,al
10027e45:	pop    ecx
10027e46:	jne    0x100282ca
10027e4c:	cmp    DWORD PTR [ebp+0xc],0x2
10027e50:	jne    0x10027ecd
10027e52:	cmp    DWORD PTR [esp+0x98],0x10
10027e5a:	mov    eax,DWORD PTR [esp+0x84]
10027e61:	jae    0x10027e6a
10027e63:	lea    eax,[esp+0x84]
10027e6a:	push   eax
10027e6b:	lea    ecx,[esp+0x2c]
10027e6f:	call   0x100011c8
10027e74:	push   0x1f4
10027e79:	mov    BYTE PTR [esp+0x13c],0xf
10027e81:	push   DWORD PTR ds:0x10080ee4
10027e87:	call   DWORD PTR ds:0x10066084
10027e8d:	test   eax,eax
10027e8f:	jne    0x10027eb9
10027e91:	mov    eax,ds:0x10080edc
10027e96:	mov    edi,0x10080ed8
10027e9b:	push   eax
10027e9c:	mov    ecx,edi
10027e9e:	push   ecx
10027e9f:	lea    eax,[esp+0x30]
10027ea3:	push   eax
10027ea4:	call   0x100197a8
10027ea9:	push   DWORD PTR ds:0x10080ee4
10027eaf:	call   DWORD PTR ds:0x10066094
10027eb5:	mov    edi,DWORD PTR [esp+0x1c]
10027eb9:	push   ebx
10027eba:	push   0x1
10027ebc:	lea    ecx,[esp+0x30]
10027ec0:	mov    BYTE PTR [esp+0x140],0x2
10027ec8:	call   0x100012eb
10027ecd:	cmp    DWORD PTR [esp+0x98],0x10
10027ed5:	mov    ecx,DWORD PTR [esp+0x84]
10027edc:	jae    0x10027ee5
10027ede:	lea    ecx,[esp+0x84]
10027ee5:	mov    eax,DWORD PTR [esp+0x20]
10027ee9:	cmp    DWORD PTR [eax+0x18],0x10
10027eed:	jb     0x10027ef4
10027eef:	mov    eax,DWORD PTR [eax+0x4]
10027ef2:	jmp    0x10027ef7
10027ef4:	add    eax,0x4
10027ef7:	push   ecx
10027ef8:	push   eax
10027ef9:	call   0x1000206e
10027efe:	push   0x10071a78
10027f03:	push   0xc
10027f05:	push   0x10071ab0
10027f0a:	call   0x100042cf
10027f0f:	add    esp,0x14
10027f12:	push   eax
10027f13:	lea    ecx,[esp+0xa0]
10027f1a:	call   0x100011c8
10027f1f:	push   0x18f850b2
10027f24:	push   0x10071ac0
10027f29:	mov    BYTE PTR [esp+0x140],0x10
10027f31:	call   0x100042bd
10027f36:	push   eax
10027f37:	push   0x3
10027f39:	push   0x10071ae4
10027f3e:	call   0x100042cf
10027f43:	add    esp,0x14
10027f46:	push   eax
10027f47:	lea    ecx,[esp+0x4c]
10027f4b:	call   0x100011c8
10027f50:	push   0x10071ae8
10027f55:	push   0x8
10027f57:	push   0x10071b14
10027f5c:	mov    BYTE PTR [esp+0x144],0x11
10027f64:	call   0x100042cf
10027f69:	add    esp,0xc
10027f6c:	push   eax
10027f6d:	lea    ecx,[esp+0x2c]
10027f71:	call   0x100011c8
10027f76:	lea    eax,[esp+0x9c]
10027f7d:	push   eax
10027f7e:	lea    eax,[esp+0x4c]
10027f82:	mov    BYTE PTR [esp+0x13c],0x12
10027f8a:	add    edi,0x8
10027f8d:	push   eax
10027f8e:	lea    ecx,[esp+0x30]
10027f92:	mov    DWORD PTR [esp+0x2c],edi
10027f96:	call   0x10009724
10027f9b:	pop    ecx
10027f9c:	pop    ecx
10027f9d:	mov    ebx,eax
10027f9f:	call   0x100268d4
10027fa4:	xor    edi,edi
10027fa6:	xor    ebx,ebx
10027fa8:	push   edi
10027fa9:	inc    ebx
10027faa:	push   ebx
10027fab:	lea    ecx,[esp+0x30]
10027faf:	call   0x100012eb
10027fb4:	push   edi
10027fb5:	push   ebx
10027fb6:	lea    ecx,[esp+0x50]
10027fba:	call   0x100012eb
10027fbf:	push   edi
10027fc0:	push   ebx
10027fc1:	lea    ecx,[esp+0xa4]
10027fc8:	mov    BYTE PTR [esp+0x140],0x2
10027fd0:	call   0x100012eb
10027fd5:	push   0xcc27062
10027fda:	push   0x10071b20
10027fdf:	call   0x100042bd
10027fe4:	push   0x72f534ee
10027fe9:	push   eax
10027fea:	call   0x100042bd
10027fef:	push   eax
10027ff0:	push   0x7
10027ff2:	push   0x1006d698
10027ff7:	call   0x100042cf
10027ffc:	add    esp,0x1c
10027fff:	push   eax
10028000:	lea    ecx,[esp+0x2c]
10028004:	call   0x100011c8
10028009:	mov    BYTE PTR [esp+0x138],0x13
10028011:	push   edi
10028012:	lea    eax,[esp+0x2c]
10028016:	push   eax
10028017:	lea    eax,[esp+0xa4]
1002801e:	push   eax
1002801f:	mov    eax,DWORD PTR [esp+0x28]
10028023:	mov    eax,DWORD PTR [eax]
10028025:	add    eax,0x18
10028028:	call   0x10008602
1002802d:	push   edi
1002802e:	push   ebx
1002802f:	lea    ecx,[esp+0x30]
10028033:	mov    BYTE PTR [esp+0x140],0x15
1002803b:	call   0x100012eb
10028040:	push   0x1006cd08
10028045:	lea    esi,[esp+0xa0]
1002804c:	call   0x10006639
10028051:	test   al,al
10028053:	pop    ecx
10028054:	jne    0x1002808e
10028056:	push   0x1006cce8
1002805b:	lea    ecx,[esp+0x4c]
1002805f:	call   0x100011c8
10028064:	push   edi
10028065:	mov    eax,esi
10028067:	push   eax
10028068:	lea    ebx,[esp+0x50]
1002806c:	mov    edi,0x10080d54
10028071:	mov    BYTE PTR [esp+0x140],0x16
10028079:	call   0x10019a41
1002807e:	push   0x0
10028080:	push   0x1
10028082:	mov    ecx,ebx
10028084:	call   0x100012eb
10028089:	xor    ebx,ebx
1002808b:	inc    ebx
1002808c:	xor    edi,edi
1002808e:	push   edi
1002808f:	push   ebx
10028090:	lea    ecx,[esp+0xa4]
10028097:	mov    BYTE PTR [esp+0x140],0x2
1002809f:	call   0x100012eb
100280a4:	push   0x6e5128bc
100280a9:	push   0x10071b50
100280ae:	call   0x100042bd
100280b3:	push   eax
100280b4:	push   0x8
100280b6:	push   0x10071b84
100280bb:	call   0x100042cf
100280c0:	add    esp,0x14
100280c3:	push   eax
100280c4:	lea    ecx,[esp+0x2c]
100280c8:	call   0x100011c8
100280cd:	mov    BYTE PTR [esp+0x138],0x17
100280d5:	mov    esi,DWORD PTR [esp+0x24]
100280d9:	mov    eax,DWORD PTR [esi]
100280db:	push   edi
100280dc:	lea    ecx,[esp+0x2c]
100280e0:	push   ecx
100280e1:	lea    edx,[eax+0x20]
100280e4:	lea    ecx,[esp+0x88]
100280eb:	call   0x10008097
100280f0:	push   edi
100280f1:	push   ebx
100280f2:	lea    ecx,[esp+0x30]
100280f6:	mov    BYTE PTR [esp+0x140],0x2
100280fe:	call   0x100012eb
10028103:	push   0x1006cd0c
10028108:	lea    ecx,[esp+0x4c]
1002810c:	call   0x100011c8
10028111:	push   0x10071b90
10028116:	push   0xe
10028118:	push   0x1006d9c4
1002811d:	mov    BYTE PTR [esp+0x144],0x18
10028125:	call   0x100042cf
1002812a:	add    esp,0xc
1002812d:	push   eax
1002812e:	lea    ecx,[esp+0x2c]
10028132:	call   0x100011c8
10028137:	mov    BYTE PTR [esp+0x138],0x19
1002813f:	mov    eax,DWORD PTR [esi]
10028141:	push   edi
10028142:	lea    ecx,[esp+0x2c]
10028146:	push   ecx
10028147:	lea    edx,[eax+0x20]
1002814a:	lea    ecx,[esp+0x50]
1002814e:	call   0x10008097
10028153:	push   edi
10028154:	push   ebx
10028155:	lea    ecx,[esp+0x30]
10028159:	call   0x100012eb
1002815e:	push   edi
1002815f:	push   ebx
10028160:	lea    ecx,[esp+0x50]
10028164:	mov    BYTE PTR [esp+0x140],0x2
1002816c:	call   0x100012eb
10028171:	mov    eax,DWORD PTR [esp+0x1c]
10028175:	push   0x1006cd08
1002817a:	lea    esi,[esp+0xd8]
10028181:	mov    BYTE PTR [eax+0x14],bl
10028184:	call   0x10006639
10028189:	test   al,al
1002818b:	pop    ecx
1002818c:	jne    0x100282b3
10028192:	mov    eax,DWORD PTR [esp+0x14]
10028196:	sar    eax,0x6
10028199:	and    eax,0x3
1002819c:	push   eax
1002819d:	lea    eax,[esp+0x84]
100281a4:	push   eax
100281a5:	mov    ebx,esi
100281a7:	mov    edi,0x10080ee8
100281ac:	call   0x10019a41
100281b1:	jmp    0x100282b3
100281b6:	mov    eax,DWORD PTR [esp+0x20]
100281ba:	cmp    DWORD PTR [eax+0x18],0x10
100281be:	jb     0x100281c5
100281c0:	mov    eax,DWORD PTR [eax+0x4]
100281c3:	jmp    0x100281c8
100281c5:	add    eax,0x4
100281c8:	push   eax
100281c9:	call   0x1000206e
100281ce:	mov    eax,DWORD PTR [esp+0x18]
100281d2:	sar    eax,0x6
100281d5:	and    eax,0x3
100281d8:	pop    ecx
100281d9:	mov    DWORD PTR [esp+0x10],eax
100281dd:	je     0x100282b5
100281e3:	push   0x10071bbc
100281e8:	push   0x7
100281ea:	push   esi
100281eb:	call   0x100042cf
100281f0:	add    esp,0xc
100281f3:	push   eax
100281f4:	lea    ecx,[esp+0x2c]
100281f8:	call   0x100011c8
100281fd:	lea    eax,[esp+0x28]
10028201:	push   eax
10028202:	mov    BYTE PTR [esp+0x13c],0x1a
1002820a:	mov    eax,DWORD PTR [edi+0x4]
1002820d:	add    eax,0x18
10028210:	push   eax
10028211:	call   0x100083a0
10028216:	push   ebx
10028217:	push   0x1
10028219:	lea    ecx,[esp+0x30]
1002821d:	mov    BYTE PTR [esp+0x140],0x2
10028225:	call   0x100012eb
1002822a:	push   DWORD PTR [esp+0x10]
1002822e:	lea    ebx,[esp+0xd8]
10028235:	push   DWORD PTR [esp+0x24]
10028239:	mov    edi,0x10080ee8
1002823e:	call   0x10019a41
10028243:	cmp    DWORD PTR [esp+0x10],0x1
10028248:	jne    0x100282b3
1002824a:	push   0x41701ca
1002824f:	push   0x10071be0
10028254:	call   0x100042bd
10028259:	push   0x1a836d2c
1002825e:	push   eax
1002825f:	call   0x100042bd
10028264:	push   eax
10028265:	push   0x7
10028267:	push   0x1006d698
1002826c:	call   0x100042cf
10028271:	add    esp,0x1c
10028274:	push   eax
10028275:	lea    ecx,[esp+0x2c]
10028279:	call   0x100011c8
1002827e:	push   0x0
10028280:	lea    eax,[esp+0x2c]
10028284:	push   eax
10028285:	mov    eax,DWORD PTR [esp+0x24]
10028289:	mov    BYTE PTR [esp+0x140],0x1b
10028291:	mov    edx,DWORD PTR [eax+0x4]
10028294:	add    edx,0x18
10028297:	mov    ecx,ebx
10028299:	call   0x10008097
1002829e:	push   0x0
100282a0:	push   0x1
100282a2:	lea    ecx,[esp+0x30]
100282a6:	mov    BYTE PTR [esp+0x140],0x2
100282ae:	call   0x100012eb
100282b3:	xor    ebx,ebx
100282b5:	mov    eax,DWORD PTR [esp+0x14]
100282b9:	shr    eax,0x9
100282bc:	test   al,0x1
100282be:	je     0x100282ca
100282c0:	push   0x10080f30
100282c5:	call   0x1001a7d1
100282ca:	push   ebx
100282cb:	push   0x1
100282cd:	lea    ecx,[esp+0x114]
100282d4:	call   0x100012eb
100282d9:	push   ebx
100282da:	push   0x1
100282dc:	lea    ecx,[esp+0xdc]
100282e3:	call   0x100012eb
100282e8:	push   ebx
100282e9:	push   0x1
100282eb:	lea    ecx,[esp+0x88]
100282f2:	call   0x100012eb
100282f7:	mov    al,0x1
100282f9:	mov    ecx,DWORD PTR [esp+0x130]
10028300:	mov    DWORD PTR fs:0x0,ecx
10028307:	pop    ecx
10028308:	pop    edi
10028309:	pop    esi
1002830a:	pop    ebx
1002830b:	mov    ecx,DWORD PTR [esp+0x118]
10028312:	xor    ecx,esp
10028314:	call   0x10042f87
10028319:	mov    esp,ebp
1002831b:	pop    ebp
1002831c:	ret    0x18
1002831f:	push   0x138
10028324:	mov    eax,0x10064c8d
10028329:	call   0x10059bc4
1002832e:	mov    eax,DWORD PTR [ebp+0xc]
10028331:	mov    ebx,DWORD PTR [ebp+0x8]
10028334:	and    DWORD PTR [ebp-0x4],0x0
10028338:	mov    DWORD PTR [ebp-0xc0],eax
1002833e:	mov    eax,DWORD PTR [ebp+0x10]
10028341:	mov    DWORD PTR [ebp-0xc4],eax
10028347:	mov    eax,DWORD PTR [ebp+0x1c]
1002834a:	mov    DWORD PTR [ebp-0x104],eax
10028350:	mov    eax,DWORD PTR [ebp+0x20]
10028353:	mov    DWORD PTR [ebp-0x108],eax
10028359:	mov    eax,DWORD PTR [ebp+0x24]
1002835c:	mov    DWORD PTR [ebp-0x100],eax
10028362:	mov    eax,DWORD PTR [ebp+0x28]
10028365:	mov    DWORD PTR [ebp-0xf8],eax
1002836b:	mov    eax,DWORD PTR [ebp+0x2c]
1002836e:	mov    DWORD PTR [ebp-0xf4],eax
10028374:	mov    eax,DWORD PTR [ebp+0x30]
10028377:	mov    edi,ecx
10028379:	lea    ecx,[ebp-0xb8]
1002837f:	mov    esi,edx
10028381:	mov    DWORD PTR [ebp-0xfc],eax
10028387:	call   0x100185fb
1002838c:	cmp    DWORD PTR [ebp-0xa0],0x10
10028393:	mov    ecx,DWORD PTR [ebp-0xb4]
10028399:	jae    0x100283a1
1002839b:	lea    ecx,[ebp-0xb4]
100283a1:	cmp    DWORD PTR [edi+0x18],0x10
100283a5:	jb     0x100283ac
100283a7:	mov    eax,DWORD PTR [edi+0x4]
100283aa:	jmp    0x100283af
100283ac:	lea    eax,[edi+0x4]
100283af:	push   ecx
100283b0:	push   eax
100283b1:	call   0x1000206e
100283b6:	pop    ecx
100283b7:	pop    ecx
100283b8:	push   0x0
100283ba:	lea    ecx,[ebp-0x9c]
100283c0:	mov    DWORD PTR [ebp-0x84],0xf
100283ca:	call   0x10001417
100283cf:	push   0x6f28be0
100283d4:	push   0x10071c20
100283d9:	mov    BYTE PTR [ebp-0x4],0x2
100283dd:	call   0x100042bd
100283e2:	pop    ecx
100283e3:	pop    ecx
100283e4:	push   eax
100283e5:	push   0x6
100283e7:	push   0x10071c48
100283ec:	call   0x100042cf
100283f1:	add    esp,0xc
100283f4:	push   eax
100283f5:	lea    eax,[ebp-0x9c]
100283fb:	push   eax
100283fc:	call   0x10004107
10028401:	push   edi
10028402:	lea    ecx,[ebp-0xf0]
10028408:	call   0x10031060
1002840d:	pop    ecx
1002840e:	mov    BYTE PTR [ebp-0x4],0x3
10028412:	cmp    DWORD PTR [eax+0x18],0x10
10028416:	jb     0x1002841d
10028418:	mov    eax,DWORD PTR [eax+0x4]
1002841b:	jmp    0x10028420
1002841d:	add    eax,0x4
10028420:	push   eax
10028421:	lea    eax,[ebp-0x9c]
10028427:	push   eax
10028428:	call   0x10004107
1002842d:	push   0x0
1002842f:	push   0x1
10028431:	lea    ecx,[ebp-0xf0]
10028437:	mov    BYTE PTR [ebp-0x4],0x2
1002843b:	call   0x100012eb
10028440:	mov    edi,0x1006cd08
10028445:	push   edi
10028446:	call   0x10006639
1002844b:	test   al,al
1002844d:	pop    ecx
1002844e:	jne    0x100284b0
10028450:	push   0x10071c50
10028455:	push   0x6
10028457:	push   0x10071c88
1002845c:	call   0x100042cf
10028461:	add    esp,0xc
10028464:	push   eax
10028465:	lea    eax,[ebp-0x9c]
1002846b:	push   eax
1002846c:	call   0x10004107
10028471:	push   esi
10028472:	lea    ecx,[ebp-0xf0]
10028478:	call   0x10031060
1002847d:	pop    ecx
1002847e:	mov    BYTE PTR [ebp-0x4],0x4
10028482:	cmp    DWORD PTR [eax+0x18],0x10
10028486:	jb     0x1002848d
10028488:	mov    eax,DWORD PTR [eax+0x4]
1002848b:	jmp    0x10028490
1002848d:	add    eax,0x4
10028490:	push   eax
10028491:	lea    eax,[ebp-0x9c]
10028497:	push   eax
10028498:	call   0x10004107
1002849d:	push   0x0
1002849f:	push   0x1
100284a1:	lea    ecx,[ebp-0xf0]
100284a7:	mov    BYTE PTR [ebp-0x4],0x2
100284ab:	call   0x100012eb
100284b0:	push   edi
100284b1:	mov    esi,ebx
100284b3:	call   0x10006639
100284b8:	test   al,al
100284ba:	pop    ecx
100284bb:	jne    0x1002852a
100284bd:	push   0x173cf8a0
100284c2:	push   0x10071c90
100284c7:	call   0x100042bd
100284cc:	pop    ecx
100284cd:	pop    ecx
100284ce:	push   eax
100284cf:	push   0x6
100284d1:	push   0x10071cd0
100284d6:	call   0x100042cf
100284db:	add    esp,0xc
100284de:	push   eax
100284df:	lea    eax,[ebp-0x9c]
100284e5:	push   eax
100284e6:	call   0x10004107
100284eb:	push   ebx
100284ec:	lea    ecx,[ebp-0xf0]
100284f2:	call   0x10031060
100284f7:	pop    ecx
100284f8:	mov    BYTE PTR [ebp-0x4],0x5
100284fc:	cmp    DWORD PTR [eax+0x18],0x10
10028500:	jb     0x10028507
10028502:	mov    eax,DWORD PTR [eax+0x4]
10028505:	jmp    0x1002850a
10028507:	add    eax,0x4
1002850a:	push   eax
1002850b:	lea    eax,[ebp-0x9c]
10028511:	push   eax
10028512:	call   0x10004107
10028517:	push   0x0
10028519:	push   0x1
1002851b:	lea    ecx,[ebp-0xf0]
10028521:	mov    BYTE PTR [ebp-0x4],0x2
10028525:	call   0x100012eb
1002852a:	mov    esi,DWORD PTR [ebp-0xc0]
10028530:	push   edi
10028531:	call   0x10006639
10028536:	test   al,al
10028538:	pop    ecx
10028539:	jne    0x100285c6
1002853f:	push   0x30c67418
10028544:	push   0x10071cd8
10028549:	call   0x100042bd
1002854e:	pop    ecx
1002854f:	pop    ecx
10028550:	push   0x43a00b70
10028555:	push   eax
10028556:	call   0x100042bd
1002855b:	pop    ecx
1002855c:	pop    ecx
1002855d:	push   0x7577e52
10028562:	push   eax
10028563:	call   0x100042bd
10028568:	pop    ecx
10028569:	pop    ecx
1002856a:	push   eax
1002856b:	push   0x6
1002856d:	push   0x10071d08
10028572:	call   0x100042cf
10028577:	add    esp,0xc
1002857a:	push   eax
1002857b:	lea    eax,[ebp-0x9c]
10028581:	push   eax
10028582:	call   0x10004107
10028587:	push   esi
10028588:	lea    ecx,[ebp-0xf0]
1002858e:	call   0x10031060
10028593:	pop    ecx
10028594:	mov    BYTE PTR [ebp-0x4],0x6
10028598:	cmp    DWORD PTR [eax+0x18],0x10
1002859c:	jb     0x100285a3
1002859e:	mov    eax,DWORD PTR [eax+0x4]
100285a1:	jmp    0x100285a6
100285a3:	add    eax,0x4
100285a6:	push   eax
100285a7:	lea    eax,[ebp-0x9c]
100285ad:	push   eax
100285ae:	call   0x10004107
100285b3:	push   0x0
100285b5:	push   0x1
100285b7:	lea    ecx,[ebp-0xf0]
100285bd:	mov    BYTE PTR [ebp-0x4],0x2
100285c1:	call   0x100012eb
100285c6:	mov    esi,DWORD PTR [ebp-0xc4]
100285cc:	push   edi
100285cd:	call   0x10006639
100285d2:	test   al,al
100285d4:	pop    ecx
100285d5:	jne    0x10028651
100285d7:	push   0x47861158
100285dc:	push   0x10071d10
100285e1:	call   0x100042bd
100285e6:	pop    ecx
100285e7:	pop    ecx
100285e8:	push   0x6585d6a2
100285ed:	push   eax
100285ee:	call   0x100042bd
100285f3:	pop    ecx
100285f4:	pop    ecx
100285f5:	push   eax
100285f6:	push   0x6
100285f8:	push   0x10071d40
100285fd:	call   0x100042cf
10028602:	add    esp,0xc
10028605:	push   eax
10028606:	lea    eax,[ebp-0x9c]
1002860c:	push   eax
1002860d:	call   0x10004107
10028612:	push   esi
10028613:	lea    ecx,[ebp-0xf0]
10028619:	call   0x10031060
1002861e:	pop    ecx
1002861f:	mov    BYTE PTR [ebp-0x4],0x7
10028623:	cmp    DWORD PTR [eax+0x18],0x10
10028627:	jb     0x1002862e
10028629:	mov    eax,DWORD PTR [eax+0x4]
1002862c:	jmp    0x10028631
1002862e:	add    eax,0x4
10028631:	push   eax
10028632:	lea    eax,[ebp-0x9c]
10028638:	push   eax
10028639:	call   0x10004107
1002863e:	push   0x0
10028640:	push   0x1
10028642:	lea    ecx,[ebp-0xf0]
10028648:	mov    BYTE PTR [ebp-0x4],0x2
1002864c:	call   0x100012eb
10028651:	push   DWORD PTR [ebp+0x18]
10028654:	mov    esi,0x10080f30
10028659:	sub    esp,0xc
1002865c:	mov    ebx,esp
1002865e:	mov    DWORD PTR [ebp-0xc8],esp
10028664:	call   0x1001a82c
10028669:	lea    ecx,[ebp-0xf0]
1002866f:	call   0x1001a8a0
10028674:	add    esp,0x10
10028677:	push   0xffffffff
10028679:	xor    ebx,ebx
1002867b:	push   ebx
1002867c:	lea    esi,[ebp-0x9c]
10028682:	mov    BYTE PTR [ebp-0x4],0x8
10028686:	call   0x10004ce1
1002868b:	push   ebx
1002868c:	push   0x1
1002868e:	lea    ecx,[ebp-0xf0]
10028694:	mov    BYTE PTR [ebp-0x4],0x2
10028698:	call   0x100012eb
1002869d:	push   0x61cd4f56
100286a2:	push   0x10071d48
100286a7:	call   0x100042bd
100286ac:	pop    ecx
100286ad:	pop    ecx
100286ae:	push   eax
100286af:	push   0x5
100286b1:	push   0x10071d84
100286b6:	call   0x100042cf
100286bb:	add    esp,0xc
100286be:	push   eax
100286bf:	mov    eax,esi
100286c1:	push   eax
100286c2:	call   0x10004107
100286c7:	push   0xa
100286c9:	lea    eax,[ebp-0x80]
100286cc:	push   eax
100286cd:	push   DWORD PTR [ebp+0x14]
100286d0:	call   0x10045be6
100286d5:	add    esp,0xc
100286d8:	push   eax
100286d9:	mov    eax,esi
100286db:	push   eax
100286dc:	call   0x10004107
100286e1:	cmp    DWORD PTR [ebp-0x84],0x10
100286e8:	mov    eax,DWORD PTR [ebp-0x98]
100286ee:	jae    0x100286f6
100286f0:	lea    eax,[ebp-0x98]
100286f6:	push   eax
100286f7:	lea    ecx,[ebp-0xf0]
100286fd:	call   0x100011c8
10028702:	mov    BYTE PTR [ebp-0x4],0x9
10028706:	push   DWORD PTR ds:0x10080d88
1002870c:	lea    ecx,[ebp-0x144]
10028712:	call   0x100011c8
10028717:	push   0x960
1002871c:	lea    eax,[ebp-0xc8]
10028722:	push   eax
10028723:	lea    eax,[ebp-0xf0]
10028729:	push   eax
1002872a:	lea    eax,[ebp-0xb8]
10028730:	push   eax
10028731:	lea    eax,[ebp-0xc4]
10028737:	push   eax
10028738:	lea    edx,[ebp-0x144]
1002873e:	mov    BYTE PTR [ebp-0x4],0xa
10028742:	call   0x10030f40
10028747:	mov    ecx,DWORD PTR [eax]
10028749:	mov    esi,ecx
1002874b:	add    esp,0x14
1002874e:	mov    DWORD PTR [ebp-0xc0],esi
10028754:	mov    DWORD PTR [eax],ebx
10028756:	mov    DWORD PTR [ebp-0x128],esi
1002875c:	push   DWORD PTR [ebp-0xc4]
10028762:	call   0x10042f82
10028767:	pop    ecx
10028768:	push   ebx
10028769:	push   0x1
1002876b:	lea    ecx,[ebp-0x144]
10028771:	call   0x100012eb
10028776:	push   ebx
10028777:	push   0x1
10028779:	lea    ecx,[ebp-0xf0]
1002877f:	mov    BYTE PTR [ebp-0x4],0xd
10028783:	call   0x100012eb
10028788:	cmp    esi,ebx
1002878a:	jne    0x100287e9
1002878c:	call   0x1001857a
10028791:	cmp    DWORD PTR [ebp-0xa0],0x10
10028798:	mov    eax,DWORD PTR [ebp-0xb4]
1002879e:	jae    0x100287a6
100287a0:	lea    eax,[ebp-0xb4]
100287a6:	push   eax
100287a7:	call   0x1000206e
100287ac:	pop    ecx
100287ad:	push   0x5
100287af:	call   0x100379e0
100287b4:	pop    ecx
100287b5:	push   ebx
100287b6:	call   0x10042f82
100287bb:	mov    BYTE PTR [ebp-0xb9],bl
100287c1:	pop    ecx
100287c2:	push   ebx
100287c3:	push   0x1
100287c5:	lea    ecx,[ebp-0x9c]
100287cb:	call   0x100012eb
100287d0:	push   ebx
100287d1:	push   0x1
100287d3:	lea    ecx,[ebp-0xb8]
100287d9:	call   0x100012eb
100287de:	mov    al,BYTE PTR [ebp-0xb9]
100287e4:	jmp    0x1002890c
100287e9:	mov    eax,DWORD PTR [ebp-0xc8]
100287ef:	mov    DWORD PTR [ebp-0xd0],eax
100287f5:	mov    eax,DWORD PTR [ebp-0xc0]
100287fb:	lea    edi,[ebp-0x124]
10028801:	lea    esi,[ebp-0xd4]
10028807:	mov    DWORD PTR [ebp-0xd4],ebx
1002880d:	mov    DWORD PTR [ebp-0xcc],eax
10028813:	call   0x10037630
10028818:	cmp    DWORD PTR [eax+0x18],0x10
1002881c:	jb     0x10028823
1002881e:	mov    eax,DWORD PTR [eax+0x4]
10028821:	jmp    0x10028826
10028823:	add    eax,0x4
10028826:	push   eax
10028827:	call   0x10045da5
1002882c:	pop    ecx
1002882d:	mov    ecx,DWORD PTR [ebp-0x104]
10028833:	push   ebx
10028834:	mov    DWORD PTR [ecx],eax
10028836:	push   0x1
10028838:	lea    ecx,[ebp-0x124]
1002883e:	call   0x100012eb
10028843:	lea    edi,[ebp-0x124]
10028849:	lea    esi,[ebp-0xd4]
1002884f:	call   0x10037630
10028854:	mov    ecx,DWORD PTR [ebp-0x108]
1002885a:	push   0xffffffff
1002885c:	push   ebx
1002885d:	push   eax
1002885e:	mov    BYTE PTR [ebp-0x4],0xe
10028862:	call   0x1000123c
10028867:	push   ebx
10028868:	push   0x1
1002886a:	mov    ecx,edi
1002886c:	mov    BYTE PTR [ebp-0x4],0xd
10028870:	call   0x100012eb
10028875:	lea    edi,[ebp-0x124]
1002887b:	call   0x10037630
10028880:	mov    ecx,DWORD PTR [ebp-0x100]
10028886:	push   0xffffffff
10028888:	push   ebx
10028889:	push   eax
1002888a:	mov    BYTE PTR [ebp-0x4],0xf
1002888e:	call   0x1000123c
10028893:	push   ebx
10028894:	push   0x1
10028896:	mov    ecx,edi
10028898:	mov    BYTE PTR [ebp-0x4],0xd
1002889c:	call   0x100012eb
100288a1:	lea    edi,[ebp-0x124]
100288a7:	call   0x10037630
100288ac:	mov    ecx,DWORD PTR [ebp-0xf8]
100288b2:	push   0xffffffff
100288b4:	push   ebx
100288b5:	push   eax
100288b6:	mov    BYTE PTR [ebp-0x4],0x10
100288ba:	call   0x1000123c
100288bf:	push   ebx
100288c0:	push   0x1
100288c2:	mov    ecx,edi
100288c4:	mov    BYTE PTR [ebp-0x4],0xd
100288c8:	call   0x100012eb
100288cd:	mov    eax,esi
100288cf:	push   eax
100288d0:	call   0x10037840
100288d5:	mov    ecx,DWORD PTR [ebp-0xf4]
100288db:	mov    DWORD PTR [ecx],eax
100288dd:	mov    eax,esi
100288df:	push   eax
100288e0:	call   0x10037840
100288e5:	mov    ecx,DWORD PTR [ebp-0xfc]
100288eb:	push   DWORD PTR [ebp-0xc0]
100288f1:	mov    DWORD PTR [ecx],eax
100288f3:	call   0x10042f82
100288f8:	mov    BYTE PTR [ebp-0xb9],0x1
100288ff:	jmp    0x100287c1
10028904:	mov    eax,0x1002890a
10028909:	ret    
1002890a:	xor    al,al
1002890c:	call   0x10059c20
10028911:	ret    0x2c
10028914:	push   0xbc
10028919:	mov    eax,0x1006397c
1002891e:	call   0x10059b8e
10028923:	mov    eax,DWORD PTR [ebp+0x8]
10028926:	mov    DWORD PTR [ebp-0x4c],eax
10028929:	mov    eax,DWORD PTR [ebp+0xc]
1002892c:	mov    DWORD PTR [ebp-0x50],eax
1002892f:	lea    eax,[ebp-0x70]
10028932:	xor    edi,edi
10028934:	push   eax
10028935:	mov    esi,ecx
10028937:	mov    DWORD PTR [ebp-0x54],edi
1002893a:	call   0x10031140
1002893f:	pop    ecx
10028940:	push   edi
10028941:	mov    DWORD PTR [ebp-0x4],edi
10028944:	push   DWORD PTR ds:0x10080dc0
1002894a:	lea    ecx,[ebp-0x48]
1002894d:	push   ecx
1002894e:	mov    ecx,eax
10028950:	call   0x10039e10
10028955:	add    esp,0xc
10028958:	xor    ebx,ebx
1002895a:	push   edi
1002895b:	inc    ebx
1002895c:	push   ebx
1002895d:	lea    ecx,[ebp-0x70]
10028960:	mov    BYTE PTR [ebp-0x4],0x2
10028964:	call   0x100012eb
10028969:	cmp    DWORD PTR [ebp-0x34],edi
1002896c:	jne    0x10028980
1002896e:	mov    ecx,DWORD PTR [ebp-0x4c]
10028971:	push   0x1006cd08
10028976:	call   0x100011c8
1002897b:	jmp    0x10028af5
10028980:	push   esi
10028981:	lea    ecx,[ebp-0xc4]
10028987:	call   0x10031060
1002898c:	mov    esi,eax
1002898e:	mov    BYTE PTR [ebp-0x4],0x3
10028992:	mov    DWORD PTR [esp],0x10ec37ac
10028999:	push   0x10071d8c
1002899e:	call   0x100042bd
100289a3:	push   0x2b008e1a
100289a8:	push   eax
100289a9:	call   0x100042bd
100289ae:	push   0x6573a88e
100289b3:	push   eax
100289b4:	call   0x100042bd
100289b9:	add    esp,0x18
100289bc:	push   esi
100289bd:	push   eax
100289be:	push   0x3
100289c0:	push   0x10071dc0
100289c5:	call   0x100042cf
100289ca:	add    esp,0xc
100289cd:	push   eax
100289ce:	lea    eax,[ebp-0x2c]
100289d1:	push   eax
100289d2:	call   0x100065cc
100289d7:	add    esp,0xc
100289da:	push   edi
100289db:	push   ebx
100289dc:	lea    ecx,[ebp-0xc4]
100289e2:	mov    BYTE PTR [ebp-0x4],0x5
100289e6:	call   0x100012eb
100289eb:	push   DWORD PTR [ebp-0x50]
100289ee:	lea    ecx,[ebp-0xa8]
100289f4:	call   0x10031060
100289f9:	mov    esi,eax
100289fb:	mov    BYTE PTR [ebp-0x4],0x6
100289ff:	mov    DWORD PTR [esp],0x30321290
10028a06:	push   0x10071dc4
10028a0b:	call   0x100042bd
10028a10:	push   0x7f942fce
10028a15:	push   eax
10028a16:	call   0x100042bd
10028a1b:	add    esp,0x10
10028a1e:	push   esi
10028a1f:	push   eax
10028a20:	push   0x4
10028a22:	push   0x10071e00
10028a27:	call   0x100042cf
10028a2c:	add    esp,0xc
10028a2f:	push   eax
10028a30:	lea    eax,[ebp-0x70]
10028a33:	push   eax
10028a34:	call   0x100065cc
10028a39:	add    esp,0xc
10028a3c:	push   0xffffffff
10028a3e:	push   edi
10028a3f:	lea    esi,[ebp-0x2c]
10028a42:	mov    BYTE PTR [ebp-0x4],0x7
10028a46:	call   0x10004ce1
10028a4b:	push   edi
10028a4c:	push   ebx
10028a4d:	lea    ecx,[ebp-0x70]
10028a50:	call   0x100012eb
10028a55:	push   edi
10028a56:	push   ebx
10028a57:	lea    ecx,[ebp-0xa8]
10028a5d:	mov    BYTE PTR [ebp-0x4],0x5
10028a61:	call   0x100012eb
10028a66:	push   edi
10028a67:	push   DWORD PTR ds:0x10080dbc
10028a6d:	lea    eax,[ebp-0x8c]
10028a73:	push   eax
10028a74:	mov    ecx,esi
10028a76:	call   0x10039e10
10028a7b:	add    esp,0xc
10028a7e:	push   0xffffffff
10028a80:	push   edi
10028a81:	push   eax
10028a82:	mov    ecx,esi
10028a84:	mov    BYTE PTR [ebp-0x4],0x8
10028a88:	call   0x1000123c
10028a8d:	push   edi
10028a8e:	push   ebx
10028a8f:	lea    ecx,[ebp-0x8c]
10028a95:	mov    BYTE PTR [ebp-0x4],0x5
10028a99:	call   0x100012eb
10028a9e:	cmp    DWORD PTR [ebp-0x18],edi
10028aa1:	jne    0x10028ab2
10028aa3:	mov    ecx,DWORD PTR [ebp-0x4c]
10028aa6:	push   0x1006cd08
10028aab:	call   0x100011c8
10028ab0:	jmp    0x10028aeb
10028ab2:	push   0x10071e08
10028ab7:	lea    eax,[ebp-0x48]
10028aba:	push   eax
10028abb:	lea    eax,[ebp-0x8c]
10028ac1:	push   eax
10028ac2:	call   0x1000653b
10028ac7:	add    esp,0xc
10028aca:	lea    ecx,[ebp-0x2c]
10028acd:	push   ecx
10028ace:	push   eax
10028acf:	push   DWORD PTR [ebp-0x4c]
10028ad2:	mov    BYTE PTR [ebp-0x4],0x9
10028ad6:	call   0x10006581
10028adb:	add    esp,0xc
10028ade:	push   edi
10028adf:	push   ebx
10028ae0:	lea    ecx,[ebp-0x8c]
10028ae6:	call   0x100012eb
10028aeb:	push   edi
10028aec:	push   ebx
10028aed:	lea    ecx,[ebp-0x2c]
10028af0:	call   0x100012eb
10028af5:	push   edi
10028af6:	push   ebx
10028af7:	lea    ecx,[ebp-0x48]
10028afa:	call   0x100012eb
10028aff:	mov    eax,DWORD PTR [ebp-0x4c]
10028b02:	call   0x10059c11
10028b07:	ret    0x8
10028b0a:	push   ebp
10028b0b:	mov    ebp,esp
10028b0d:	and    esp,0xfffffff8
10028b10:	push   0xffffffff
10028b12:	push   0x10064348
10028b17:	mov    eax,fs:0x0
10028b1d:	push   eax
10028b1e:	sub    esp,0xa0
10028b24:	mov    eax,ds:0x1007e030
10028b29:	xor    eax,esp
10028b2b:	mov    DWORD PTR [esp+0x98],eax
10028b32:	push   ebx
10028b33:	push   esi
10028b34:	push   edi
10028b35:	mov    eax,ds:0x1007e030
10028b3a:	xor    eax,esp
10028b3c:	push   eax
10028b3d:	lea    eax,[esp+0xb0]
10028b44:	mov    fs:0x0,eax
10028b4a:	mov    edi,DWORD PTR [ebp+0x8]
10028b4d:	push   0x3f535b96
10028b52:	push   0x10071e0c
10028b57:	mov    DWORD PTR [esp+0x20],edi
10028b5b:	mov    BYTE PTR [esp+0x1f],0x0
10028b60:	call   0x100042bd
10028b65:	push   0x26593e3a
10028b6a:	push   eax
10028b6b:	call   0x100042bd
10028b70:	push   0x76d7d45c
10028b75:	push   eax
10028b76:	call   0x100042bd
10028b7b:	push   eax
10028b7c:	push   0x4
10028b7e:	push   0x1006d414
10028b83:	call   0x100042cf
10028b88:	add    esp,0x24
10028b8b:	push   eax
10028b8c:	lea    ecx,[esp+0x3c]
10028b90:	call   0x100011c8
10028b95:	xor    esi,esi
10028b97:	push   esi
10028b98:	lea    eax,[esp+0x3c]
10028b9c:	push   eax
10028b9d:	lea    eax,[esp+0x94]
10028ba4:	push   eax
10028ba5:	mov    DWORD PTR [esp+0xc4],esi
10028bac:	mov    eax,DWORD PTR [edi]
10028bae:	add    eax,0x18
10028bb1:	call   0x10008602
10028bb6:	push   esi
10028bb7:	push   0x1
10028bb9:	lea    ecx,[esp+0x40]
10028bbd:	mov    BYTE PTR [esp+0xc0],0x2
10028bc5:	call   0x100012eb
10028bca:	cmp    DWORD PTR [esp+0xa0],0x4
10028bd2:	jbe    0x10028c58
10028bd8:	cmp    DWORD PTR [esp+0xa4],0x10
10028be0:	mov    esi,DWORD PTR [esp+0x90]
10028be7:	mov    ebx,esi
10028be9:	jae    0x10028bf4
10028beb:	lea    ebx,[esp+0x90]
10028bf2:	mov    esi,ebx
10028bf4:	push   0x10071e30
10028bf9:	push   0x4
10028bfb:	push   0x10071e6c
10028c00:	call   0x100042cf
10028c05:	add    esp,0xc
10028c08:	push   eax
10028c09:	push   ebx
10028c0a:	call   0x10045b20
10028c0f:	cmp    eax,esi
10028c11:	pop    ecx
10028c12:	pop    ecx
10028c13:	jne    0x10028c58
10028c15:	push   0xffffffff
10028c17:	push   0x4
10028c19:	lea    eax,[esp+0x94]
10028c20:	push   eax
10028c21:	lea    eax,[esp+0x28]
10028c25:	call   0x1000c98f
10028c2a:	push   0xffffffff
10028c2c:	push   0x0
10028c2e:	push   eax
10028c2f:	lea    ecx,[esp+0x98]
10028c36:	mov    BYTE PTR [esp+0xc4],0x3
10028c3e:	call   0x1000123c
10028c43:	push   0x0
10028c45:	push   0x1
10028c47:	lea    ecx,[esp+0x24]
10028c4b:	mov    BYTE PTR [esp+0xc0],0x2
10028c53:	call   0x100012eb
10028c58:	cmp    DWORD PTR [esp+0xa4],0x10
10028c60:	mov    eax,DWORD PTR [esp+0x90]
10028c67:	jae    0x10028c70
10028c69:	lea    eax,[esp+0x90]
10028c70:	push   eax
10028c71:	call   DWORD PTR ds:0x100663e0
10028c77:	cmp    eax,0xffffffff
10028c7a:	je     0x10028c8b
10028c7c:	mov    ebx,eax
10028c7e:	call   0x100175c1
10028c83:	test   al,al
10028c85:	jne    0x10028ea1
10028c8b:	push   0x10071e74
10028c90:	push   0xa
10028c92:	push   0x10071ea8
10028c97:	call   0x100042cf
10028c9c:	add    esp,0xc
10028c9f:	push   eax
10028ca0:	lea    esi,[esp+0x90]
10028ca7:	call   0x10006639
10028cac:	test   al,al
10028cae:	pop    ecx
10028caf:	jne    0x10028ea1
10028cb5:	push   0x7de23126
10028cba:	push   0x10071eb4
10028cbf:	call   0x100042bd
10028cc4:	push   eax
10028cc5:	push   0x9
10028cc7:	push   0x10071ee4
10028ccc:	call   0x100042cf
10028cd1:	add    esp,0x14
10028cd4:	push   eax
10028cd5:	call   0x10006639
10028cda:	test   al,al
10028cdc:	pop    ecx
10028cdd:	jne    0x10028ea1
10028ce3:	push   0x4ad9164
10028ce8:	push   0x10071ef0
10028ced:	call   0x100042bd
10028cf2:	push   0x6c949a2c
10028cf7:	push   eax
10028cf8:	call   0x100042bd
10028cfd:	push   0x7a9016da
10028d02:	push   eax
10028d03:	call   0x100042bd
10028d08:	push   0x353acaa2
10028d0d:	push   eax
10028d0e:	call   0x100042bd
10028d13:	push   0x1dd42078
10028d18:	push   eax
10028d19:	call   0x100042bd
10028d1e:	push   eax
10028d1f:	push   0x9
10028d21:	push   0x10071f2c
10028d26:	call   0x100042cf
10028d2b:	add    esp,0x34
10028d2e:	push   eax
10028d2f:	call   0x10006639
10028d34:	test   al,al
10028d36:	pop    ecx
10028d37:	jne    0x10028ea1
10028d3d:	push   0x10071f38
10028d42:	push   0x5
10028d44:	push   0x10071f60
10028d49:	call   0x100042cf
10028d4e:	add    esp,0xc
10028d51:	push   eax
10028d52:	call   0x10006639
10028d57:	test   al,al
10028d59:	pop    ecx
10028d5a:	jne    0x10028ea1
10028d60:	push   0x2cf18768
10028d65:	push   0x10071f68
10028d6a:	call   0x100042bd
10028d6f:	push   0x328402a8
10028d74:	push   eax
10028d75:	call   0x100042bd
10028d7a:	push   0x7f4c691c
10028d7f:	push   eax
10028d80:	call   0x100042bd
10028d85:	push   eax
10028d86:	push   0x8
10028d88:	push   0x10071f9c
10028d8d:	call   0x100042cf
10028d92:	add    esp,0x24
10028d95:	push   eax
10028d96:	call   0x10006639
10028d9b:	test   al,al
10028d9d:	pop    ecx
10028d9e:	jne    0x10028ea1
10028da4:	push   0x6617894c
10028da9:	push   0x10071fa8
10028dae:	call   0x100042bd
10028db3:	push   eax
10028db4:	push   0xd
10028db6:	push   0x10071fd0
10028dbb:	call   0x100042cf
10028dc0:	add    esp,0x14
10028dc3:	push   eax
10028dc4:	call   0x10006639
10028dc9:	test   al,al
10028dcb:	pop    ecx
10028dcc:	jne    0x10028ea1
10028dd2:	push   0x633f7d2e
10028dd7:	push   0x10071fe0
10028ddc:	call   0x100042bd
10028de1:	push   eax
10028de2:	push   0x15
10028de4:	push   0x1007201c
10028de9:	call   0x100042cf
10028dee:	add    esp,0x14
10028df1:	push   eax
10028df2:	call   0x10006639
10028df7:	test   al,al
10028df9:	pop    ecx
10028dfa:	jne    0x10028ea1
10028e00:	push   0x68e2ffc2
10028e05:	push   0x10072034
10028e0a:	call   0x100042bd
10028e0f:	push   eax
10028e10:	push   0x1e
10028e12:	push   0x10072068
10028e17:	call   0x100042cf
10028e1c:	add    esp,0x14
10028e1f:	push   eax
10028e20:	call   0x10006639
10028e25:	test   al,al
10028e27:	pop    ecx
10028e28:	jne    0x10028ea1
10028e2a:	push   0x29e3da0e
10028e2f:	push   0x10072088
10028e34:	call   0x100042bd
10028e39:	push   eax
10028e3a:	push   0x1d
10028e3c:	push   0x100720c0
10028e41:	call   0x100042cf
10028e46:	add    esp,0x14
10028e49:	push   eax
10028e4a:	call   0x10006639
10028e4f:	test   al,al
10028e51:	pop    ecx
10028e52:	jne    0x10028ea1
10028e54:	push   0x457ffed2
10028e59:	push   0x100720e0
10028e5e:	call   0x100042bd
10028e63:	push   eax
10028e64:	push   0x1d
10028e66:	push   0x1007211c
10028e6b:	call   0x100042cf
10028e70:	add    esp,0x14
10028e73:	push   eax
10028e74:	call   0x10006639
10028e79:	test   al,al
10028e7b:	pop    ecx
10028e7c:	jne    0x10028ea1
10028e7e:	push   0x1007213c
10028e83:	push   0x15
10028e85:	push   0x10072178
10028e8a:	call   0x100042cf
10028e8f:	add    esp,0xc
10028e92:	push   eax
10028e93:	call   0x10006639
10028e98:	test   al,al
10028e9a:	pop    ecx
10028e9b:	je     0x10028fd2
10028ea1:	cmp    DWORD PTR [esp+0xa4],0x10
10028ea9:	mov    eax,DWORD PTR [esp+0x90]
10028eb0:	mov    BYTE PTR [esp+0x17],0x1
10028eb5:	jae    0x10028ebe
10028eb7:	lea    eax,[esp+0x90]
10028ebe:	push   eax
10028ebf:	call   0x1000206e
10028ec4:	mov    DWORD PTR [esp],0x10072190
10028ecb:	push   0x9
10028ecd:	push   0x100721c4
10028ed2:	call   0x100042cf
10028ed7:	add    esp,0xc
10028eda:	push   eax
10028edb:	lea    ecx,[esp+0x20]
10028edf:	call   0x100011c8
10028ee4:	push   0x52756ce
10028ee9:	push   0x100721d0
10028eee:	mov    BYTE PTR [esp+0xc0],0x4
10028ef6:	call   0x100042bd
10028efb:	push   0x1d1d92e
10028f00:	push   eax
10028f01:	call   0x100042bd
10028f06:	push   0x64406ade
10028f0b:	push   eax
10028f0c:	call   0x100042bd
10028f11:	push   eax
10028f12:	push   0x3
10028f14:	push   0x100721f4
10028f19:	call   0x100042cf
10028f1e:	add    esp,0x24
10028f21:	push   eax
10028f22:	lea    ecx,[esp+0x58]
10028f26:	call   0x100011c8
10028f2b:	push   0x17b7e2c8
10028f30:	push   0x100721f8
10028f35:	mov    BYTE PTR [esp+0xc0],0x5
10028f3d:	call   0x100042bd
10028f42:	push   0x107480e6
10028f47:	push   eax
10028f48:	call   0x100042bd
10028f4d:	push   0x2675fd3e
10028f52:	push   eax
10028f53:	call   0x100042bd
10028f58:	push   0x164e0f1a
10028f5d:	push   eax
10028f5e:	call   0x100042bd
10028f63:	push   eax
10028f64:	push   0x8
10028f66:	push   0x10071b14
10028f6b:	call   0x100042cf
10028f70:	add    esp,0x2c
10028f73:	push   eax
10028f74:	lea    ecx,[esp+0x74]
10028f78:	call   0x100011c8
10028f7d:	lea    eax,[esp+0x1c]
10028f81:	push   eax
10028f82:	lea    eax,[esp+0x58]
10028f86:	push   eax
10028f87:	lea    ecx,[esp+0x78]
10028f8b:	mov    BYTE PTR [esp+0xc0],0x6
10028f93:	call   0x10009724
10028f98:	pop    ecx
10028f99:	pop    ecx
10028f9a:	add    edi,0x8
10028f9d:	mov    ebx,eax
10028f9f:	call   0x100268d4
10028fa4:	xor    esi,esi
10028fa6:	push   esi
10028fa7:	push   0x1
10028fa9:	lea    ecx,[esp+0x78]
10028fad:	call   0x100012eb
10028fb2:	push   esi
10028fb3:	push   0x1
10028fb5:	lea    ecx,[esp+0x5c]
10028fb9:	call   0x100012eb
10028fbe:	push   esi
10028fbf:	push   0x1
10028fc1:	lea    ecx,[esp+0x24]
10028fc5:	call   0x100012eb
10028fca:	mov    eax,DWORD PTR [esp+0x18]
10028fce:	mov    BYTE PTR [eax+0x14],0x1
10028fd2:	push   0x0
10028fd4:	push   0x1
10028fd6:	lea    ecx,[esp+0x94]
10028fdd:	call   0x100012eb
10028fe2:	mov    al,BYTE PTR [esp+0x17]
10028fe6:	mov    ecx,DWORD PTR [esp+0xb0]
10028fed:	mov    DWORD PTR fs:0x0,ecx
10028ff4:	pop    ecx
10028ff5:	pop    edi
10028ff6:	pop    esi
10028ff7:	pop    ebx
10028ff8:	mov    ecx,DWORD PTR [esp+0x98]
10028fff:	xor    ecx,esp
10029001:	call   0x10042f87
10029006:	mov    esp,ebp
10029008:	pop    ebp
10029009:	ret    0x4
1002900c:	push   ebp
1002900d:	mov    ebp,esp
1002900f:	and    esp,0xfffffff8
10029012:	push   0xffffffff
10029014:	push   0x1006346a
10029019:	mov    eax,fs:0x0
1002901f:	push   eax
10029020:	sub    esp,0x110
10029026:	mov    eax,ds:0x1007e030
1002902b:	xor    eax,esp
1002902d:	mov    DWORD PTR [esp+0x108],eax
10029034:	push   ebx
10029035:	push   esi
10029036:	push   edi
10029037:	mov    eax,ds:0x1007e030
1002903c:	xor    eax,esp
1002903e:	push   eax
1002903f:	lea    eax,[esp+0x120]
10029046:	mov    fs:0x0,eax
1002904c:	mov    esi,DWORD PTR [ebp+0x8]
1002904f:	push   DWORD PTR [esi]
10029051:	lea    ecx,[esp+0x70]
10029055:	call   0x10008c7d
1002905a:	lea    ecx,[esp+0xf8]
10029061:	push   ecx
10029062:	xor    ebx,ebx
10029064:	push   0x10080ee8
10029069:	mov    ecx,eax
1002906b:	mov    DWORD PTR [esp+0x130],ebx
10029072:	call   0x10019b04
10029077:	push   ebx
10029078:	push   0x1
1002907a:	lea    ecx,[esp+0x74]
1002907e:	mov    BYTE PTR [esp+0x130],0x2
10029086:	call   0x100012eb
1002908b:	lea    edi,[esp+0xf8]
10029092:	call   0x100199a9
10029097:	test   al,al
10029099:	jne    0x100292f4
1002909f:	mov    eax,DWORD PTR [esp+0xf8]
100290a6:	dec    eax
100290a7:	je     0x10029185
100290ad:	dec    eax
100290ae:	jne    0x100292f4
100290b4:	push   0x1b0455aa
100290b9:	push   0x10072280
100290be:	call   0x100042bd
100290c3:	push   0x44c70a86
100290c8:	push   eax
100290c9:	call   0x100042bd
100290ce:	push   eax
100290cf:	push   0x7
100290d1:	push   0x1006d698
100290d6:	call   0x100042cf
100290db:	add    esp,0x1c
100290de:	push   eax
100290df:	lea    ecx,[esp+0x1c]
100290e3:	call   0x100011c8
100290e8:	lea    eax,[esp+0x18]
100290ec:	push   eax
100290ed:	mov    BYTE PTR [esp+0x12c],0x7
100290f5:	mov    eax,DWORD PTR [esi+0x4]
100290f8:	add    eax,0x18
100290fb:	push   eax
100290fc:	call   0x100083a0
10029101:	push   ebx
10029102:	push   0x1
10029104:	lea    ecx,[esp+0x20]
10029108:	mov    BYTE PTR [esp+0x130],0x2
10029110:	call   0x100012eb
10029115:	push   DWORD PTR [esi]
10029117:	lea    ecx,[esp+0xa8]
1002911e:	call   0x10008c7d
10029123:	cmp    DWORD PTR [eax+0x18],0x10
10029127:	jb     0x1002912e
10029129:	mov    eax,DWORD PTR [eax+0x4]
1002912c:	jmp    0x10029131
1002912e:	add    eax,0x4
10029131:	push   eax
10029132:	call   0x1000206e
10029137:	pop    ecx
10029138:	push   ebx
10029139:	push   0x1
1002913b:	lea    ecx,[esp+0xac]
10029142:	call   0x100012eb
10029147:	mov    BYTE PTR [esp+0x17],0x1
1002914c:	push   ebx
1002914d:	push   0x1
1002914f:	lea    ecx,[esp+0x104]
10029156:	call   0x100012eb
1002915b:	mov    al,BYTE PTR [esp+0x17]
1002915f:	mov    ecx,DWORD PTR [esp+0x120]
10029166:	mov    DWORD PTR fs:0x0,ecx
1002916d:	pop    ecx
1002916e:	pop    edi
1002916f:	pop    esi
10029170:	pop    ebx
10029171:	mov    ecx,DWORD PTR [esp+0x108]
10029178:	xor    ecx,esp
1002917a:	call   0x10042f87
1002917f:	mov    esp,ebp
10029181:	pop    ebp
10029182:	ret    0x4
10029185:	push   0x4e27813e
1002918a:	push   0x1007222c
1002918f:	call   0x100042bd
10029194:	push   0x15152de8
10029199:	push   eax
1002919a:	call   0x100042bd
1002919f:	push   eax
100291a0:	push   0x7
100291a2:	mov    edi,0x1006d698
100291a7:	push   edi
100291a8:	call   0x100042cf
100291ad:	add    esp,0x1c
100291b0:	push   eax
100291b1:	lea    ecx,[esp+0x38]
100291b5:	call   0x100011c8
100291ba:	lea    eax,[esp+0x34]
100291be:	push   eax
100291bf:	mov    BYTE PTR [esp+0x12c],0x3
100291c7:	mov    eax,DWORD PTR [esi+0x4]
100291ca:	add    eax,0x18
100291cd:	push   eax
100291ce:	call   0x100083a0
100291d3:	push   ebx
100291d4:	push   0x1
100291d6:	lea    ecx,[esp+0x3c]
100291da:	mov    BYTE PTR [esp+0x130],0x2
100291e2:	call   0x100012eb
100291e7:	push   0xe90c3c8
100291ec:	push   0x10072250
100291f1:	call   0x100042bd
100291f6:	push   0x589f992a
100291fb:	push   eax
100291fc:	call   0x100042bd
10029201:	push   eax
10029202:	push   0x7
10029204:	push   edi
10029205:	call   0x100042cf
1002920a:	add    esp,0x1c
1002920d:	push   eax
1002920e:	lea    ecx,[esp+0x54]
10029212:	call   0x100011c8
10029217:	lea    eax,[esp+0xdc]
1002921e:	push   eax
1002921f:	lea    eax,[esp+0xfc]
10029226:	mov    BYTE PTR [esp+0x12c],0x4
1002922e:	call   0x100199c9
10029233:	mov    BYTE PTR [esp+0x128],0x5
1002923b:	mov    edx,DWORD PTR [esi+0x4]
1002923e:	push   ebx
1002923f:	lea    ecx,[esp+0x54]
10029243:	push   ecx
10029244:	add    edx,0x18
10029247:	mov    ecx,eax
10029249:	call   0x10008097
1002924e:	xor    edi,edi
10029250:	push   ebx
10029251:	inc    edi
10029252:	push   edi
10029253:	lea    ecx,[esp+0xe4]
1002925a:	call   0x100012eb
1002925f:	push   ebx
10029260:	push   edi
10029261:	lea    ecx,[esp+0x58]
10029265:	mov    BYTE PTR [esp+0x130],0x2
1002926d:	call   0x100012eb
10029272:	push   DWORD PTR [esi]
10029274:	lea    ecx,[esp+0xc4]
1002927b:	call   0x10008c7d
10029280:	mov    esi,eax
10029282:	lea    eax,[esp+0x88]
10029289:	push   eax
1002928a:	lea    eax,[esp+0xfc]
10029291:	mov    BYTE PTR [esp+0x12c],0x6
10029299:	call   0x100199c9
1002929e:	cmp    DWORD PTR [esi+0x18],0x10
100292a2:	jb     0x100292a9
100292a4:	mov    esi,DWORD PTR [esi+0x4]
100292a7:	jmp    0x100292ac
100292a9:	add    esi,0x4
100292ac:	cmp    DWORD PTR [eax+0x18],0x10
100292b0:	jb     0x100292b7
100292b2:	mov    eax,DWORD PTR [eax+0x4]
100292b5:	jmp    0x100292ba
100292b7:	add    eax,0x4
100292ba:	push   esi
100292bb:	push   eax
100292bc:	call   0x1000206e
100292c1:	pop    ecx
100292c2:	pop    ecx
100292c3:	push   ebx
100292c4:	push   edi
100292c5:	lea    ecx,[esp+0x90]
100292cc:	call   0x100012eb
100292d1:	push   ebx
100292d2:	push   edi
100292d3:	lea    ecx,[esp+0xc8]
100292da:	call   0x100012eb
100292df:	push   ebx
100292e0:	push   edi
100292e1:	lea    ecx,[esp+0x104]
100292e8:	call   0x100012eb
100292ed:	mov    al,0x1
100292ef:	jmp    0x1002915f
100292f4:	mov    BYTE PTR [esp+0x17],bl
100292f8:	jmp    0x1002914c
100292fd:	push   ebp
100292fe:	mov    ebp,esp
10029300:	and    esp,0xfffffff8
10029303:	push   0xffffffff
10029305:	push   0x100642e1
1002930a:	mov    eax,fs:0x0
10029310:	push   eax
10029311:	sub    esp,0x98
10029317:	mov    eax,ds:0x1007e030
1002931c:	xor    eax,esp
1002931e:	mov    DWORD PTR [esp+0x90],eax
10029325:	push   ebx
10029326:	push   esi
10029327:	push   edi
10029328:	mov    eax,ds:0x1007e030
1002932d:	xor    eax,esp
1002932f:	push   eax
10029330:	lea    eax,[esp+0xa8]
10029337:	mov    fs:0x0,eax
1002933d:	mov    edi,DWORD PTR [ebp+0x8]
10029340:	push   DWORD PTR [edi]
10029342:	lea    ecx,[esp+0x50]
10029346:	mov    DWORD PTR [esp+0x14],edi
1002934a:	call   0x10008c7d
1002934f:	and    DWORD PTR [esp+0xb0],0x0
10029357:	push   eax
10029358:	lea    esi,[esp+0x88]
1002935f:	call   0x10030470
10029364:	pop    ecx
10029365:	push   0x0
10029367:	push   0x1
10029369:	lea    ecx,[esp+0x54]
1002936d:	mov    BYTE PTR [esp+0xb8],0x2
10029375:	call   0x100012eb
1002937a:	mov    edx,esi
1002937c:	lea    ecx,[esp+0x68]
10029380:	call   0x10033d80
10029385:	push   0x1006cd08
1002938a:	lea    esi,[esp+0x6c]
1002938e:	mov    BYTE PTR [esp+0xb4],0x3
10029396:	call   0x10006639
1002939b:	test   al,al
1002939d:	pop    ecx
1002939e:	jne    0x100295b3
100293a4:	cmp    DWORD PTR [esp+0x80],0x10
100293ac:	mov    eax,DWORD PTR [esp+0x6c]
100293b0:	jae    0x100293b6
100293b2:	lea    eax,[esp+0x6c]
100293b6:	push   eax
100293b7:	call   0x1000206e
100293bc:	mov    DWORD PTR [esp],0x788e8672
100293c3:	push   0x100722c0
100293c8:	call   0x100042bd
100293cd:	push   eax
100293ce:	push   0xc
100293d0:	push   0x10071ab0
100293d5:	call   0x100042cf
100293da:	add    esp,0x14
100293dd:	push   eax
100293de:	lea    ecx,[esp+0x18]
100293e2:	call   0x100011c8
100293e7:	push   0x43213750
100293ec:	push   0x100722f0
100293f1:	mov    BYTE PTR [esp+0xb8],0x4
100293f9:	call   0x100042bd
100293fe:	push   0x3675c4b0
10029403:	push   eax
10029404:	call   0x100042bd
10029409:	push   eax
1002940a:	push   0x3
1002940c:	push   0x10071ae4
10029411:	call   0x100042cf
10029416:	add    esp,0x1c
10029419:	push   eax
1002941a:	lea    ecx,[esp+0x34]
1002941e:	call   0x100011c8
10029423:	push   0x10072324
10029428:	push   0x8
1002942a:	push   0x10071b14
1002942f:	mov    BYTE PTR [esp+0xbc],0x5
10029437:	call   0x100042cf
1002943c:	add    esp,0xc
1002943f:	push   eax
10029440:	lea    ecx,[esp+0x50]
10029444:	call   0x100011c8
10029449:	lea    eax,[esp+0x14]
1002944d:	push   eax
1002944e:	lea    eax,[esp+0x34]
10029452:	push   eax
10029453:	lea    ecx,[esp+0x54]
10029457:	mov    BYTE PTR [esp+0xb8],0x6
1002945f:	add    edi,0x8
10029462:	call   0x10009724
10029467:	pop    ecx
10029468:	pop    ecx
10029469:	mov    ebx,eax
1002946b:	call   0x100268d4
10029470:	xor    esi,esi
10029472:	xor    ebx,ebx
10029474:	push   esi
10029475:	inc    ebx
10029476:	push   ebx
10029477:	lea    ecx,[esp+0x54]
1002947b:	call   0x100012eb
10029480:	push   esi
10029481:	push   ebx
10029482:	lea    ecx,[esp+0x38]
10029486:	call   0x100012eb
1002948b:	push   esi
1002948c:	push   ebx
1002948d:	lea    ecx,[esp+0x1c]
10029491:	mov    BYTE PTR [esp+0xb8],0x3
10029499:	call   0x100012eb
1002949e:	push   0x10072348
100294a3:	push   0x8
100294a5:	push   0x10071b84
100294aa:	call   0x100042cf
100294af:	add    esp,0xc
100294b2:	push   eax
100294b3:	lea    ecx,[esp+0x18]
100294b7:	call   0x100011c8
100294bc:	mov    BYTE PTR [esp+0xb0],0x7
100294c4:	mov    eax,DWORD PTR [edi]
100294c6:	push   esi
100294c7:	lea    ecx,[esp+0x18]
100294cb:	push   ecx
100294cc:	lea    edx,[eax+0x20]
100294cf:	lea    ecx,[esp+0x70]
100294d3:	call   0x10008097
100294d8:	push   esi
100294d9:	push   ebx
100294da:	lea    ecx,[esp+0x1c]
100294de:	mov    BYTE PTR [esp+0xb8],0x3
100294e6:	call   0x100012eb
100294eb:	push   0x1006cd0c
100294f0:	lea    ecx,[esp+0x34]
100294f4:	call   0x100011c8
100294f9:	push   0x48b1613e
100294fe:	push   0x1007236c
10029503:	mov    BYTE PTR [esp+0xb8],0x8
1002950b:	call   0x100042bd
10029510:	push   0x3385afdc
10029515:	push   eax
10029516:	call   0x100042bd
1002951b:	push   eax
1002951c:	push   0xe
1002951e:	push   0x1006d9c4
10029523:	call   0x100042cf
10029528:	add    esp,0x1c
1002952b:	push   eax
1002952c:	lea    ecx,[esp+0x18]
10029530:	call   0x100011c8
10029535:	mov    BYTE PTR [esp+0xb0],0x9
1002953d:	mov    edx,DWORD PTR [edi]
1002953f:	push   esi
10029540:	lea    eax,[esp+0x18]
10029544:	push   eax
10029545:	add    edx,0x20
10029548:	lea    ecx,[esp+0x38]
1002954c:	call   0x10008097
10029551:	push   esi
10029552:	push   ebx
10029553:	lea    ecx,[esp+0x1c]
10029557:	call   0x100012eb
1002955c:	push   esi
1002955d:	push   ebx
1002955e:	lea    ecx,[esp+0x38]
10029562:	call   0x100012eb
10029567:	mov    eax,DWORD PTR [esp+0x10]
1002956b:	mov    BYTE PTR [eax+0x14],bl
1002956e:	push   0x0
10029570:	push   0x1
10029572:	lea    ecx,[esp+0x70]
10029576:	call   0x100012eb
1002957b:	push   0x0
1002957d:	push   0x1
1002957f:	lea    ecx,[esp+0x8c]
10029586:	call   0x100012eb
1002958b:	mov    al,bl
1002958d:	mov    ecx,DWORD PTR [esp+0xa8]
10029594:	mov    DWORD PTR fs:0x0,ecx
1002959b:	pop    ecx
1002959c:	pop    edi
1002959d:	pop    esi
1002959e:	pop    ebx
1002959f:	mov    ecx,DWORD PTR [esp+0x90]
100295a6:	xor    ecx,esp
100295a8:	call   0x10042f87
100295ad:	mov    esp,ebp
100295af:	pop    ebp
100295b0:	ret    0x4
100295b3:	xor    bl,bl
100295b5:	jmp    0x1002956e
100295b7:	push   esi
100295b8:	push   edi
100295b9:	mov    edi,DWORD PTR [esp+0xc]
100295bd:	mov    esi,DWORD PTR [edi+0x10]
100295c0:	call   0x1002673b
100295c5:	test   al,al
100295c7:	je     0x100295d1
100295c9:	mov    BYTE PTR [edi+0x14],0x1
100295cd:	mov    al,0x1
100295cf:	jmp    0x100295d3
100295d1:	xor    al,al
100295d3:	pop    edi
100295d4:	pop    esi
100295d5:	ret    0x4
100295d8:	push   ebp
100295d9:	mov    ebp,esp
100295db:	and    esp,0xfffffff8
100295de:	push   0xffffffff
100295e0:	push   0x1006425c
100295e5:	mov    eax,fs:0x0
100295eb:	push   eax
100295ec:	sub    esp,0x280
100295f2:	mov    eax,ds:0x1007e030
100295f7:	xor    eax,esp
100295f9:	mov    DWORD PTR [esp+0x278],eax
10029600:	push   ebx
10029601:	push   esi
10029602:	push   edi
10029603:	mov    eax,ds:0x1007e030
10029608:	xor    eax,esp
1002960a:	push   eax
1002960b:	lea    eax,[esp+0x290]
10029612:	mov    fs:0x0,eax
10029618:	mov    ebx,DWORD PTR [ebp+0x8]
1002961b:	push   0x398bfbdc
10029620:	push   0x100723d0
10029625:	mov    DWORD PTR [esp+0x1c],ebx
10029629:	call   0x100042bd
1002962e:	push   0x6046aa9e
10029633:	push   eax
10029634:	call   0x100042bd
10029639:	push   0x1198df26
1002963e:	push   eax
1002963f:	call   0x100042bd
10029644:	push   0x1a7ca23c
10029649:	push   eax
1002964a:	call   0x100042bd
1002964f:	push   eax
10029650:	push   0x7
10029652:	push   0x1006d698
10029657:	call   0x100042cf
1002965c:	add    esp,0x2c
1002965f:	push   eax
10029660:	lea    ecx,[esp+0x80]
10029667:	call   0x100011c8
1002966c:	xor    edi,edi
1002966e:	push   edi
1002966f:	lea    eax,[esp+0x80]
10029676:	push   eax
10029677:	lea    eax,[esp+0x28]
1002967b:	push   eax
1002967c:	mov    DWORD PTR [esp+0x2a4],edi
10029683:	mov    eax,DWORD PTR [ebx]
10029685:	add    eax,0x18
10029688:	call   0x10008602
1002968d:	mov    esi,eax
1002968f:	push   0x10072394
10029694:	push   0x10
10029696:	push   0x100723bc
1002969b:	mov    BYTE PTR [esp+0x2a4],0x1
100296a3:	call   0x100042cf
100296a8:	add    esp,0xc
100296ab:	push   eax
100296ac:	call   0x10006639
100296b1:	neg    al
100296b3:	sbb    al,al
100296b5:	pop    ecx
100296b6:	xor    esi,esi
100296b8:	push   edi
100296b9:	inc    al
100296bb:	inc    esi
100296bc:	push   esi
100296bd:	lea    ecx,[esp+0x28]
100296c1:	mov    BYTE PTR [esp+0x1b],al
100296c5:	call   0x100012eb
100296ca:	or     DWORD PTR [esp+0x298],0xffffffff
100296d2:	push   edi
100296d3:	push   esi
100296d4:	lea    ecx,[esp+0x84]
100296db:	call   0x100012eb
100296e0:	cmp    BYTE PTR [esp+0x13],0x0
100296e5:	je     0x100296ee
100296e7:	xor    al,al
100296e9:	jmp    0x10029ec3
100296ee:	mov    eax,DWORD PTR [ebx+0x10]
100296f1:	lea    ecx,[esp+0x3c]
100296f5:	push   ecx
100296f6:	push   0x4
100296f8:	lea    ecx,[esp+0x48]
100296fc:	push   ecx
100296fd:	push   esi
100296fe:	push   0x6
10029700:	mov    DWORD PTR [esp+0x54],esi
10029704:	mov    DWORD PTR [esp+0x50],edi
10029708:	push   DWORD PTR [eax]
1002970a:	call   DWORD PTR [eax+0xa4]
10029710:	mov    esi,DWORD PTR [ebx+0x10]
10029713:	call   0x1002673b
10029718:	test   al,al
1002971a:	je     0x1002980b
10029720:	call   0x1000206e
10029725:	push   0x1d000450
1002972a:	push   0x10072408
1002972f:	call   0x100042bd
10029734:	push   eax
10029735:	push   0x9
10029737:	push   0x100721c4
1002973c:	call   0x100042cf
10029741:	add    esp,0x14
10029744:	push   eax
10029745:	lea    ecx,[esp+0x24]
10029749:	call   0x100011c8
1002974e:	push   0x10072440
10029753:	push   0x3
10029755:	push   0x100721f4
1002975a:	mov    DWORD PTR [esp+0x2a4],0x2
10029765:	call   0x100042cf
1002976a:	add    esp,0xc
1002976d:	push   eax
1002976e:	lea    ecx,[esp+0x48]
10029772:	call   0x100011c8
10029777:	push   0x325301cc
1002977c:	push   0x1007246c
10029781:	mov    BYTE PTR [esp+0x2a0],0x3
10029789:	call   0x100042bd
1002978e:	push   eax
1002978f:	push   0x8
10029791:	push   0x10071b14
10029796:	call   0x100042cf
1002979b:	add    esp,0x14
1002979e:	push   eax
1002979f:	lea    ecx,[esp+0x80]
100297a6:	call   0x100011c8
100297ab:	lea    eax,[esp+0x20]
100297af:	push   eax
100297b0:	lea    eax,[esp+0x48]
100297b4:	push   eax
100297b5:	lea    ecx,[esp+0x84]
100297bc:	mov    BYTE PTR [esp+0x2a0],0x4
100297c4:	call   0x10009724
100297c9:	pop    ecx
100297ca:	lea    edi,[ebx+0x8]
100297cd:	pop    ecx
100297ce:	mov    ebx,eax
100297d0:	call   0x100268d4
100297d5:	xor    esi,esi
100297d7:	push   esi
100297d8:	push   0x1
100297da:	lea    ecx,[esp+0x84]
100297e1:	call   0x100012eb
100297e6:	push   esi
100297e7:	push   0x1
100297e9:	lea    ecx,[esp+0x4c]
100297ed:	call   0x100012eb
100297f2:	push   esi
100297f3:	push   0x1
100297f5:	lea    ecx,[esp+0x28]
100297f9:	call   0x100012eb
100297fe:	mov    eax,DWORD PTR [esp+0x14]
10029802:	mov    BYTE PTR [eax+0x14],0x1
10029806:	jmp    0x10029ec1
1002980b:	push   0x2d40a3b8
10029810:	push   0x100724ac
10029815:	call   0x100042bd
1002981a:	push   0x769196e
1002981f:	push   eax
10029820:	call   0x100042bd
10029825:	push   eax
10029826:	push   0x7
10029828:	push   0x1006d698
1002982d:	call   0x100042cf
10029832:	add    esp,0x1c
10029835:	push   eax
10029836:	lea    ecx,[esp+0x24]
1002983a:	call   0x100011c8
1002983f:	lea    eax,[esp+0x20]
10029843:	push   eax
10029844:	mov    DWORD PTR [esp+0x29c],0x5
1002984f:	mov    eax,DWORD PTR [ebx+0x4]
10029852:	add    eax,0x18
10029855:	push   eax
10029856:	call   0x100083a0
1002985b:	or     DWORD PTR [esp+0x298],0xffffffff
10029863:	push   edi
10029864:	push   0x1
10029866:	lea    ecx,[esp+0x28]
1002986a:	call   0x100012eb
1002986f:	lea    ecx,[esp+0x15c]
10029876:	call   0x10012bdb
1002987b:	push   0x1006cd08
10029880:	lea    esi,[esp+0x160]
10029887:	mov    DWORD PTR [esp+0x29c],0x6
10029892:	call   0x10006639
10029897:	test   al,al
10029899:	pop    ecx
1002989a:	jne    0x10029914
1002989c:	push   0x6c536ef4
100298a1:	push   0x100724e4
100298a6:	call   0x100042bd
100298ab:	push   0x45403c8
100298b0:	push   eax
100298b1:	call   0x100042bd
100298b6:	push   0x53279246
100298bb:	push   eax
100298bc:	call   0x100042bd
100298c1:	push   0x1b0ff1b4
100298c6:	push   eax
100298c7:	call   0x100042bd
100298cc:	push   eax
100298cd:	push   0xa
100298cf:	push   0x1006d6dc
100298d4:	call   0x100042cf
100298d9:	add    esp,0x2c
100298dc:	push   eax
100298dd:	lea    ecx,[esp+0x24]
100298e1:	call   0x100011c8
100298e6:	mov    BYTE PTR [esp+0x298],0x7
100298ee:	mov    edx,DWORD PTR [ebx+0x4]
100298f1:	lea    eax,[esp+0x20]
100298f5:	push   eax
100298f6:	add    edx,0x18
100298f9:	mov    ecx,esi
100298fb:	call   0x100084eb
10029900:	push   edi
10029901:	push   0x1
10029903:	lea    ecx,[esp+0x28]
10029907:	mov    BYTE PTR [esp+0x2a0],0x6
1002990f:	call   0x100012eb
10029914:	push   0x1006cd08
10029919:	lea    esi,[esp+0x1b4]
10029920:	call   0x10006639
10029925:	test   al,al
10029927:	pop    ecx
10029928:	jne    0x10029976
1002992a:	push   0x10072508
1002992f:	push   0xf
10029931:	push   0x1006d760
10029936:	call   0x100042cf
1002993b:	add    esp,0xc
1002993e:	push   eax
1002993f:	lea    ecx,[esp+0x24]
10029943:	call   0x100011c8
10029948:	mov    BYTE PTR [esp+0x298],0x8
10029950:	mov    edx,DWORD PTR [ebx+0x4]
10029953:	lea    eax,[esp+0x20]
10029957:	push   eax
10029958:	add    edx,0x18
1002995b:	mov    ecx,esi
1002995d:	call   0x100084eb
10029962:	push   edi
10029963:	push   0x1
10029965:	lea    ecx,[esp+0x28]
10029969:	mov    BYTE PTR [esp+0x2a0],0x6
10029971:	call   0x100012eb
10029976:	push   0x1006cd08
1002997b:	lea    esi,[esp+0x17c]
10029982:	mov    BYTE PTR [esp+0x17],0x0
10029987:	call   0x10006639
1002998c:	test   al,al
1002998e:	pop    ecx
1002998f:	jne    0x10029a60
10029995:	push   0x10
10029997:	pop    esi
10029998:	lea    eax,[esp+0x14]
1002999c:	push   eax
1002999d:	lea    eax,[esp+0x128]
100299a4:	push   eax
100299a5:	mov    eax,DWORD PTR [ebx+0x10]
100299a8:	mov    DWORD PTR [esp+0x1c],esi
100299ac:	push   DWORD PTR [eax]
100299ae:	call   DWORD PTR ds:0x100663a0
100299b4:	cmp    eax,0xffffffff
100299b7:	je     0x10029a60
100299bd:	cmp    WORD PTR [esp+0x124],0x2
100299c6:	jne    0x10029a60
100299cc:	push   0x2e627028
100299d1:	push   0x1007253c
100299d6:	call   0x100042bd
100299db:	push   eax
100299dc:	push   0x4
100299de:	push   0x1006d414
100299e3:	call   0x100042cf
100299e8:	add    esp,0x14
100299eb:	push   eax
100299ec:	lea    ecx,[esp+0x24]
100299f0:	call   0x100011c8
100299f5:	push   edi
100299f6:	lea    eax,[esp+0x24]
100299fa:	push   eax
100299fb:	lea    eax,[esp+0x68]
100299ff:	push   eax
10029a00:	mov    BYTE PTR [esp+0x2a4],0x9
10029a08:	mov    eax,DWORD PTR [ebx]
10029a0a:	add    eax,0x18
10029a0d:	call   0x10008602
10029a12:	cmp    DWORD PTR [eax+0x18],esi
10029a15:	jb     0x10029a1c
10029a17:	mov    eax,DWORD PTR [eax+0x4]
10029a1a:	jmp    0x10029a1f
10029a1c:	add    eax,0x4
10029a1f:	push   eax
10029a20:	call   DWORD PTR ds:0x100663e0
10029a26:	cmp    DWORD PTR [esp+0x128],eax
10029a2d:	push   edi
10029a2e:	push   0x1
10029a30:	lea    ecx,[esp+0x68]
10029a34:	setne  BYTE PTR [esp+0x23]
10029a39:	call   0x100012eb
10029a3e:	push   edi
10029a3f:	push   0x1
10029a41:	lea    ecx,[esp+0x28]
10029a45:	mov    BYTE PTR [esp+0x2a0],0x6
10029a4d:	call   0x100012eb
10029a52:	cmp    BYTE PTR [esp+0x1b],0x0
10029a57:	je     0x10029a60
10029a59:	mov    BYTE PTR [esp+0x13],0x1
10029a5e:	jmp    0x10029ad8
10029a60:	push   0x1006cd08
10029a65:	lea    esi,[esp+0x17c]
10029a6c:	call   0x10006639
10029a71:	test   al,al
10029a73:	pop    ecx
10029a74:	jne    0x10029ad8
10029a76:	push   0x3ebda7e6
10029a7b:	push   0x10072568
10029a80:	call   0x100042bd
10029a85:	push   0x402d284a
10029a8a:	push   eax
10029a8b:	call   0x100042bd
10029a90:	push   eax
10029a91:	push   0x4
10029a93:	push   0x1006d414
10029a98:	call   0x100042cf
10029a9d:	add    esp,0x1c
10029aa0:	push   eax
10029aa1:	lea    ecx,[esp+0x24]
10029aa5:	call   0x100011c8
10029aaa:	mov    BYTE PTR [esp+0x298],0xa
10029ab2:	mov    edx,DWORD PTR [ebx+0x4]
10029ab5:	lea    eax,[esp+0x20]
10029ab9:	push   eax
10029aba:	add    edx,0x18
10029abd:	mov    ecx,esi
10029abf:	call   0x100084eb
10029ac4:	push   edi
10029ac5:	push   0x1
10029ac7:	lea    ecx,[esp+0x28]
10029acb:	mov    BYTE PTR [esp+0x2a0],0x6
10029ad3:	call   0x100012eb
10029ad8:	push   0x66c116f8
10029add:	push   0x100725a8
10029ae2:	call   0x100042bd
10029ae7:	push   0x2e6b729a
10029aec:	push   eax
10029aed:	call   0x100042bd
10029af2:	push   0x4e28048a
10029af7:	push   eax
10029af8:	call   0x100042bd
10029afd:	push   0x5876562c
10029b02:	push   eax
10029b03:	call   0x100042bd
10029b08:	push   eax
10029b09:	push   0x6
10029b0b:	mov    esi,0x1006d8ac
10029b10:	push   esi
10029b11:	call   0x100042cf
10029b16:	add    esp,0x2c
10029b19:	push   eax
10029b1a:	lea    ecx,[esp+0x24]
10029b1e:	call   0x100011c8
10029b23:	push   edi
10029b24:	lea    eax,[esp+0x24]
10029b28:	push   eax
10029b29:	lea    eax,[esp+0x12c]
10029b30:	push   eax
10029b31:	mov    BYTE PTR [esp+0x2a4],0xb
10029b39:	mov    eax,DWORD PTR [ebx]
10029b3b:	add    eax,0x18
10029b3e:	call   0x10008602
10029b43:	push   edi
10029b44:	push   0x1
10029b46:	lea    ecx,[esp+0x28]
10029b4a:	mov    BYTE PTR [esp+0x2a0],0xd
10029b52:	call   0x100012eb
10029b57:	push   0x10305254
10029b5c:	push   0x100725d4
10029b61:	call   0x100042bd
10029b66:	push   eax
10029b67:	push   0x6
10029b69:	push   esi
10029b6a:	call   0x100042cf
10029b6f:	add    esp,0x14
10029b72:	push   eax
10029b73:	lea    ecx,[esp+0x48]
10029b77:	call   0x100011c8
10029b7c:	lea    eax,[esp+0x44]
10029b80:	push   eax
10029b81:	mov    BYTE PTR [esp+0x29c],0xe
10029b89:	mov    eax,DWORD PTR [ebx+0x4]
10029b8c:	add    eax,0x18
10029b8f:	push   eax
10029b90:	call   0x100083a0
10029b95:	push   edi
10029b96:	push   0x1
10029b98:	lea    ecx,[esp+0x4c]
10029b9c:	mov    BYTE PTR [esp+0x2a0],0xd
10029ba4:	call   0x100012eb
10029ba9:	cmp    DWORD PTR [esp+0x138],edi
10029bb0:	mov    DWORD PTR [esp+0x1c],edi
10029bb4:	jbe    0x10029cc4
10029bba:	push   DWORD PTR [esp+0x1c]
10029bbe:	lea    eax,[esp+0x128]
10029bc5:	push   0x1006d8d8
10029bca:	push   eax
10029bcb:	call   0x1000c970
10029bd0:	cmp    eax,0xffffffff
10029bd3:	mov    DWORD PTR [esp+0x14],eax
10029bd7:	jne    0x10029be4
10029bd9:	mov    eax,DWORD PTR [esp+0x138]
10029be0:	mov    DWORD PTR [esp+0x14],eax
10029be4:	cmp    eax,DWORD PTR [esp+0x1c]
10029be8:	jbe    0x10029cb0
10029bee:	push   0x473d07c8
10029bf3:	push   0x10072604
10029bf8:	call   0x100042bd
10029bfd:	push   0x2ec42cc8
10029c02:	push   eax
10029c03:	call   0x100042bd
10029c08:	push   0x17fc2ece
10029c0d:	push   eax
10029c0e:	call   0x100042bd
10029c13:	push   0xe61c45c
10029c18:	push   eax
10029c19:	call   0x100042bd
10029c1e:	push   0x6b141dd8
10029c23:	push   eax
10029c24:	call   0x100042bd
10029c29:	push   0x4cd7347c
10029c2e:	push   eax
10029c2f:	call   0x100042bd
10029c34:	push   eax
10029c35:	push   0x6
10029c37:	push   esi
10029c38:	call   0x100042cf
10029c3d:	add    esp,0x3c
10029c40:	push   eax
10029c41:	lea    ecx,[esp+0x48]
10029c45:	call   0x100011c8
10029c4a:	mov    BYTE PTR [esp+0x298],0xf
10029c52:	mov    eax,DWORD PTR [esp+0x14]
10029c56:	sub    eax,DWORD PTR [esp+0x1c]
10029c5a:	push   eax
10029c5b:	push   DWORD PTR [esp+0x20]
10029c5f:	lea    eax,[esp+0x12c]
10029c66:	push   eax
10029c67:	lea    eax,[esp+0x6c]
10029c6b:	call   0x1000c98f
10029c70:	mov    BYTE PTR [esp+0x298],0x10
10029c78:	mov    edx,DWORD PTR [ebx+0x4]
10029c7b:	push   0x1
10029c7d:	lea    ecx,[esp+0x48]
10029c81:	push   ecx
10029c82:	add    edx,0x18
10029c85:	mov    ecx,eax
10029c87:	call   0x10008097
10029c8c:	push   edi
10029c8d:	push   0x1
10029c8f:	lea    ecx,[esp+0x68]
10029c93:	call   0x100012eb
10029c98:	push   edi
10029c99:	push   0x1
10029c9b:	lea    ecx,[esp+0x4c]
10029c9f:	mov    BYTE PTR [esp+0x2a0],0xd
10029ca7:	call   0x100012eb
10029cac:	mov    eax,DWORD PTR [esp+0x14]
10029cb0:	cmp    eax,DWORD PTR [esp+0x138]
10029cb7:	lea    ecx,[eax+0x1]
10029cba:	mov    DWORD PTR [esp+0x1c],ecx
10029cbe:	jb     0x10029bba
10029cc4:	push   0x1006cd08
10029cc9:	lea    esi,[esp+0x198]
10029cd0:	call   0x10006639
10029cd5:	test   al,al
10029cd7:	pop    ecx
10029cd8:	jne    0x10029ea6
10029cde:	lea    edi,[esp+0x1ec]
10029ce5:	call   0x1000bce8
10029cea:	mov    eax,esi
10029cec:	push   eax
10029ced:	lea    ecx,[esp+0x144]
10029cf4:	mov    BYTE PTR [esp+0x29c],0x11
10029cfc:	call   0x100011a2
10029d01:	cmp    BYTE PTR [esp+0x13],0x0
10029d06:	mov    BYTE PTR [esp+0x298],0x12
10029d0e:	je     0x10029e74
10029d14:	mov    eax,edi
10029d16:	push   eax
10029d17:	lea    ecx,[esp+0x144]
10029d1e:	call   0x10032ca0
10029d23:	test   al,al
10029d25:	pop    ecx
10029d26:	je     0x10029e74
10029d2c:	push   0x10072634
10029d31:	push   0x4
10029d33:	push   0x1006d414
10029d38:	call   0x100042cf
10029d3d:	add    esp,0xc
10029d40:	push   eax
10029d41:	lea    ecx,[esp+0x64]
10029d45:	call   0x100011c8
10029d4a:	xor    edi,edi
10029d4c:	push   edi
10029d4d:	lea    eax,[esp+0x64]
10029d51:	push   eax
10029d52:	lea    eax,[esp+0x110]
10029d59:	push   eax
10029d5a:	mov    BYTE PTR [esp+0x2a4],0x13
10029d62:	mov    eax,DWORD PTR [ebx]
10029d64:	add    eax,0x18
10029d67:	call   0x10008602
10029d6c:	mov    esi,eax
10029d6e:	push   0x53520dce
10029d73:	push   0x10072674
10029d78:	mov    BYTE PTR [esp+0x2a0],0x14
10029d80:	call   0x100042bd
10029d85:	push   eax
10029d86:	push   0x7
10029d88:	push   0x1006d3e4
10029d8d:	call   0x100042cf
10029d92:	add    esp,0x14
10029d95:	push   eax
10029d96:	lea    ecx,[esp+0xd4]
10029d9d:	call   0x100011c8
10029da2:	push   esi
10029da3:	push   eax
10029da4:	lea    eax,[esp+0xbc]
10029dab:	push   eax
10029dac:	mov    BYTE PTR [esp+0x2a4],0x15
10029db4:	call   0x10006581
10029db9:	add    esp,0xc
10029dbc:	lea    ecx,[esp+0x248]
10029dc3:	push   ecx
10029dc4:	push   eax
10029dc5:	lea    eax,[esp+0xa0]
10029dcc:	push   eax
10029dcd:	mov    BYTE PTR [esp+0x2a4],0x16
10029dd5:	call   0x10006581
10029dda:	add    esp,0xc
10029ddd:	lea    ecx,[esp+0x264]
10029de4:	push   ecx
10029de5:	push   eax
10029de6:	lea    eax,[esp+0xf4]
10029ded:	push   eax
10029dee:	mov    BYTE PTR [esp+0x2a4],0x17
10029df6:	call   0x10006581
10029dfb:	add    esp,0xc
10029dfe:	push   0xffffffff
10029e00:	push   edi
10029e01:	push   eax
10029e02:	lea    ecx,[esp+0x14c]
10029e09:	mov    BYTE PTR [esp+0x2a4],0x18
10029e11:	call   0x1000123c
10029e16:	xor    esi,esi
10029e18:	push   edi
10029e19:	inc    esi
10029e1a:	push   esi
10029e1b:	lea    ecx,[esp+0xf4]
10029e22:	call   0x100012eb
10029e27:	push   edi
10029e28:	push   esi
10029e29:	lea    ecx,[esp+0xa0]
10029e30:	call   0x100012eb
10029e35:	push   edi
10029e36:	push   esi
10029e37:	lea    ecx,[esp+0xbc]
10029e3e:	call   0x100012eb
10029e43:	push   edi
10029e44:	push   esi
10029e45:	lea    ecx,[esp+0xd8]
10029e4c:	call   0x100012eb
10029e51:	push   edi
10029e52:	push   esi
10029e53:	lea    ecx,[esp+0x110]
10029e5a:	call   0x100012eb
10029e5f:	push   edi
10029e60:	push   esi
10029e61:	lea    ecx,[esp+0x68]
10029e65:	mov    BYTE PTR [esp+0x2a0],0x12
10029e6d:	call   0x100012eb
10029e72:	jmp    0x10029e76
10029e74:	xor    edi,edi
10029e76:	lea    eax,[esp+0x140]
10029e7d:	push   eax
10029e7e:	mov    eax,DWORD PTR [ebx+0x4]
10029e81:	mov    esi,DWORD PTR [eax+0x4]
10029e84:	call   0x10007ac2
10029e89:	push   edi
10029e8a:	push   0x1
10029e8c:	lea    ecx,[esp+0x148]
10029e93:	call   0x100012eb
10029e98:	lea    esi,[esp+0x1ec]
10029e9f:	call   0x1000bd15
10029ea4:	xor    edi,edi
10029ea6:	push   edi
10029ea7:	push   0x1
10029ea9:	lea    ecx,[esp+0x12c]
10029eb0:	call   0x100012eb
10029eb5:	lea    esi,[esp+0x15c]
10029ebc:	call   0x1000bcad
10029ec1:	mov    al,0x1
10029ec3:	mov    ecx,DWORD PTR [esp+0x290]
10029eca:	mov    DWORD PTR fs:0x0,ecx
10029ed1:	pop    ecx
10029ed2:	pop    edi
10029ed3:	pop    esi
10029ed4:	pop    ebx
10029ed5:	mov    ecx,DWORD PTR [esp+0x278]
10029edc:	xor    ecx,esp
10029ede:	call   0x10042f87
10029ee3:	mov    esp,ebp
10029ee5:	pop    ebp
10029ee6:	ret    0x4
10029ee9:	push   ebp
10029eea:	mov    ebp,esp
10029eec:	sub    esp,0x1c
10029eef:	push   esi
10029ef0:	mov    esi,DWORD PTR [ebp+0x8]
10029ef3:	push   DWORD PTR [esi]
10029ef5:	call   0x100267d8
10029efa:	test   al,al
10029efc:	pop    ecx
10029efd:	je     0x10029f38
10029eff:	push   DWORD PTR [esi]
10029f01:	lea    ecx,[ebp-0x1c]
10029f04:	call   0x10008c7d
10029f09:	cmp    DWORD PTR [eax+0x18],0x10
10029f0d:	jb     0x10029f14
10029f0f:	mov    eax,DWORD PTR [eax+0x4]
10029f12:	jmp    0x10029f17
10029f14:	add    eax,0x4
10029f17:	push   eax
10029f18:	mov    eax,DWORD PTR [esi+0x10]
10029f1b:	push   DWORD PTR [eax]
10029f1d:	call   0x1000206e
10029f22:	pop    ecx
10029f23:	pop    ecx
10029f24:	push   0x0
10029f26:	push   0x1
10029f28:	lea    ecx,[ebp-0x1c]
10029f2b:	call   0x100012eb
10029f30:	mov    BYTE PTR [esi+0x14],0x1
10029f34:	mov    al,0x1
10029f36:	jmp    0x10029f3a
10029f38:	xor    al,al
10029f3a:	pop    esi
10029f3b:	leave  
10029f3c:	ret    0x4
10029f3f:	push   ebp
10029f40:	mov    ebp,esp
10029f42:	and    esp,0xfffffff8
10029f45:	push   0xffffffff
10029f47:	push   0x100627f0
10029f4c:	mov    eax,fs:0x0
10029f52:	push   eax
10029f53:	sub    esp,0x58
10029f56:	push   ebx
10029f57:	push   esi
10029f58:	push   edi
10029f59:	mov    eax,ds:0x1007e030
10029f5e:	xor    eax,esp
10029f60:	push   eax
10029f61:	lea    eax,[esp+0x68]
10029f65:	mov    fs:0x0,eax
10029f6b:	mov    esi,DWORD PTR [ebp+0x8]
10029f6e:	push   DWORD PTR [esi]
10029f70:	call   0x100267d8
10029f75:	test   al,al
10029f77:	pop    ecx
10029f78:	je     0x1002a089
10029f7e:	push   0x420a48fc
10029f83:	push   0x100726b0
10029f88:	call   0x100042bd
10029f8d:	push   eax
10029f8e:	push   0xd
10029f90:	mov    edi,0x100726e8
10029f95:	push   edi
10029f96:	call   0x100042cf
10029f9b:	add    esp,0x14
10029f9e:	push   eax
10029f9f:	lea    ecx,[esp+0x14]
10029fa3:	call   0x100011c8
10029fa8:	and    DWORD PTR [esp+0x70],0x0
10029fad:	lea    eax,[esp+0x10]
10029fb1:	push   eax
10029fb2:	mov    eax,DWORD PTR [esi+0x8]
10029fb5:	add    eax,0x20
10029fb8:	push   eax
10029fb9:	call   0x100083a0
10029fbe:	or     DWORD PTR [esp+0x70],0xffffffff
10029fc3:	xor    ebx,ebx
10029fc5:	push   0x0
10029fc7:	inc    ebx
10029fc8:	push   ebx
10029fc9:	lea    ecx,[esp+0x18]
10029fcd:	call   0x100012eb
10029fd2:	push   0x4cff96d0
10029fd7:	push   0x100726f8
10029fdc:	call   0x100042bd
10029fe1:	push   0x3e3b291c
10029fe6:	push   eax
10029fe7:	call   0x100042bd
10029fec:	push   0x416db448
10029ff1:	push   eax
10029ff2:	call   0x100042bd
10029ff7:	push   0x62e267a6
10029ffc:	push   eax
10029ffd:	call   0x100042bd
1002a002:	push   eax
1002a003:	push   0x8
1002a005:	push   0x10072720
1002a00a:	call   0x100042cf
1002a00f:	add    esp,0x2c
1002a012:	push   eax
1002a013:	lea    ecx,[esp+0x4c]
1002a017:	call   0x100011c8
1002a01c:	push   0x8faac6c
1002a021:	push   0x1007272c
1002a026:	mov    DWORD PTR [esp+0x78],ebx
1002a02a:	call   0x100042bd
1002a02f:	push   0x21734ae0
1002a034:	push   eax
1002a035:	call   0x100042bd
1002a03a:	push   eax
1002a03b:	push   0xd
1002a03d:	push   edi
1002a03e:	call   0x100042cf
1002a043:	add    esp,0x1c
1002a046:	push   eax
1002a047:	lea    ecx,[esp+0x30]
1002a04b:	call   0x100011c8
1002a050:	mov    BYTE PTR [esp+0x70],0x2
1002a055:	mov    edx,DWORD PTR [esi+0x8]
1002a058:	xor    edi,edi
1002a05a:	push   edi
1002a05b:	lea    eax,[esp+0x30]
1002a05f:	push   eax
1002a060:	add    edx,0x20
1002a063:	lea    ecx,[esp+0x50]
1002a067:	call   0x10008097
1002a06c:	push   edi
1002a06d:	push   ebx
1002a06e:	lea    ecx,[esp+0x34]
1002a072:	call   0x100012eb
1002a077:	push   edi
1002a078:	push   ebx
1002a079:	lea    ecx,[esp+0x50]
1002a07d:	call   0x100012eb
1002a082:	mov    BYTE PTR [esi+0x11],bl
1002a085:	mov    al,bl
1002a087:	jmp    0x1002a08b
1002a089:	xor    al,al
1002a08b:	mov    ecx,DWORD PTR [esp+0x68]
1002a08f:	mov    DWORD PTR fs:0x0,ecx
1002a096:	pop    ecx
1002a097:	pop    edi
1002a098:	pop    esi
1002a099:	pop    ebx
1002a09a:	mov    esp,ebp
1002a09c:	pop    ebp
1002a09d:	ret    0x4
1002a0a0:	push   ebp
1002a0a1:	mov    ebp,esp
1002a0a3:	and    esp,0xfffffff8
1002a0a6:	push   0xffffffff
1002a0a8:	push   0x10061aab
1002a0ad:	mov    eax,fs:0x0
1002a0b3:	push   eax
1002a0b4:	sub    esp,0x1f0
1002a0ba:	push   ebx
1002a0bb:	push   esi
1002a0bc:	push   edi
1002a0bd:	mov    eax,ds:0x1007e030
1002a0c2:	xor    eax,esp
1002a0c4:	push   eax
1002a0c5:	lea    eax,[esp+0x200]
1002a0cc:	mov    fs:0x0,eax
1002a0d2:	push   0x1cd8983e
1002a0d7:	xor    ebx,ebx
1002a0d9:	push   0x10072770
1002a0de:	mov    DWORD PTR [esp+0x18],ebx
1002a0e2:	call   0x100042bd
1002a0e7:	push   0x2d2efd32
1002a0ec:	push   eax
1002a0ed:	call   0x100042bd
1002a0f2:	push   0x10a2b12
1002a0f7:	push   eax
1002a0f8:	call   0x100042bd
1002a0fd:	push   0x408dc1dc
1002a102:	push   eax
1002a103:	call   0x100042bd
1002a108:	push   eax
1002a109:	push   0xa
1002a10b:	push   0x1006d6dc
1002a110:	call   0x100042cf
1002a115:	add    esp,0x2c
1002a118:	push   eax
1002a119:	lea    ecx,[esp+0x78]
1002a11d:	call   0x100011c8
1002a122:	mov    edi,DWORD PTR [ebp+0x8]
1002a125:	push   ebx
1002a126:	lea    eax,[esp+0x78]
1002a12a:	push   eax
1002a12b:	lea    eax,[esp+0xb4]
1002a132:	mov    DWORD PTR [esp+0x210],ebx
1002a139:	push   eax
1002a13a:	mov    eax,DWORD PTR [edi]
1002a13c:	xor    esi,esi
1002a13e:	inc    esi
1002a13f:	add    eax,0x18
1002a142:	mov    DWORD PTR [esp+0x1c],esi
1002a146:	call   0x10008602
1002a14b:	mov    DWORD PTR [esp+0x208],esi
1002a152:	push   0x1006cd08
1002a157:	mov    esi,eax
1002a159:	mov    DWORD PTR [esp+0x14],0x3
1002a161:	call   0x10006639
1002a166:	test   al,al
1002a168:	pop    ecx
1002a169:	jne    0x1002a1f2
1002a16f:	push   0x53070904
1002a174:	push   0x100727b0
1002a179:	call   0x100042bd
1002a17e:	push   eax
1002a17f:	push   0x4
1002a181:	push   0x1006d414
1002a186:	call   0x100042cf
1002a18b:	add    esp,0x14
1002a18e:	push   eax
1002a18f:	lea    ecx,[esp+0x94]
1002a196:	call   0x100011c8
1002a19b:	push   ebx
1002a19c:	lea    eax,[esp+0x94]
1002a1a3:	push   eax
1002a1a4:	lea    eax,[esp+0xec]
1002a1ab:	mov    DWORD PTR [esp+0x210],0x2
1002a1b6:	push   eax
1002a1b7:	mov    eax,DWORD PTR [edi]
1002a1b9:	add    eax,0x18
1002a1bc:	mov    DWORD PTR [esp+0x1c],0x7
1002a1c4:	call   0x10008602
1002a1c9:	mov    DWORD PTR [esp+0x208],0x3
1002a1d4:	push   0x1006cd08
1002a1d9:	mov    esi,eax
1002a1db:	mov    DWORD PTR [esp+0x14],0xf
1002a1e3:	call   0x10006639
1002a1e8:	test   al,al
1002a1ea:	pop    ecx
1002a1eb:	mov    BYTE PTR [esp+0x17],0x1
1002a1f0:	je     0x1002a1f6
1002a1f2:	mov    BYTE PTR [esp+0x17],bl
1002a1f6:	test   BYTE PTR [esp+0x10],0x8
1002a1fb:	je     0x1002a211
1002a1fd:	and    DWORD PTR [esp+0x10],0xfffffff7
1002a202:	push   ebx
1002a203:	push   0x1
1002a205:	lea    ecx,[esp+0xec]
1002a20c:	call   0x100012eb
1002a211:	test   BYTE PTR [esp+0x10],0x4
1002a216:	je     0x1002a22c
1002a218:	and    DWORD PTR [esp+0x10],0xfffffffb
1002a21d:	push   ebx
1002a21e:	push   0x1
1002a220:	lea    ecx,[esp+0x98]
1002a227:	call   0x100012eb
1002a22c:	test   BYTE PTR [esp+0x10],0x2
1002a231:	je     0x1002a247
1002a233:	and    DWORD PTR [esp+0x10],0xfffffffd
1002a238:	push   ebx
1002a239:	push   0x1
1002a23b:	lea    ecx,[esp+0xb4]
1002a242:	call   0x100012eb
1002a247:	or     DWORD PTR [esp+0x208],0xffffffff
1002a24f:	test   BYTE PTR [esp+0x10],0x1
1002a254:	je     0x1002a262
1002a256:	push   ebx
1002a257:	push   0x1
1002a259:	lea    ecx,[esp+0x7c]
1002a25d:	call   0x100012eb
1002a262:	cmp    BYTE PTR [esp+0x17],bl
1002a266:	je     0x1002a44c
1002a26c:	push   0x735ef6b8
1002a271:	push   0x100727f0
1002a276:	call   0x100042bd
1002a27b:	push   eax
1002a27c:	push   0xf
1002a27e:	push   0x1006d760
1002a283:	call   0x100042cf
1002a288:	add    esp,0x14
1002a28b:	push   eax
1002a28c:	lea    ecx,[esp+0x24]
1002a290:	call   0x100011c8
1002a295:	push   0x4
1002a297:	pop    eax
1002a298:	push   0x1007281c
1002a29d:	push   eax
1002a29e:	push   0x1006d414
1002a2a3:	mov    DWORD PTR [esp+0x214],eax
1002a2aa:	call   0x100042cf
1002a2af:	add    esp,0xc
1002a2b2:	push   eax
1002a2b3:	lea    ecx,[esp+0x5c]
1002a2b7:	call   0x100011c8
1002a2bc:	push   0x1007284c
1002a2c1:	push   0xa
1002a2c3:	push   0x1006d6dc
1002a2c8:	mov    BYTE PTR [esp+0x214],0x5
1002a2d0:	call   0x100042cf
1002a2d5:	add    esp,0xc
1002a2d8:	push   eax
1002a2d9:	lea    ecx,[esp+0x40]
1002a2dd:	call   0x100011c8
1002a2e2:	mov    BYTE PTR [esp+0x208],0x6
1002a2ea:	mov    eax,DWORD PTR [edi]
1002a2ec:	mov    eax,DWORD PTR [eax+0x8]
1002a2ef:	lea    ecx,[esp+0x138]
1002a2f6:	push   ecx
1002a2f7:	call   0x100199c9
1002a2fc:	mov    esi,eax
1002a2fe:	push   ebx
1002a2ff:	lea    eax,[esp+0x24]
1002a303:	push   eax
1002a304:	lea    eax,[esp+0x108]
1002a30b:	push   eax
1002a30c:	mov    BYTE PTR [esp+0x214],0x7
1002a314:	mov    eax,DWORD PTR [edi]
1002a316:	add    eax,0x18
1002a319:	call   0x10008602
1002a31e:	mov    DWORD PTR [esp+0x10],eax
1002a322:	mov    BYTE PTR [esp+0x208],0x8
1002a32a:	mov    eax,DWORD PTR [edi]
1002a32c:	mov    eax,DWORD PTR [eax+0x4]
1002a32f:	lea    ecx,[esp+0xc8]
1002a336:	push   ecx
1002a337:	call   0x100199c9
1002a33c:	mov    DWORD PTR [esp+0x18],eax
1002a340:	push   ebx
1002a341:	lea    eax,[esp+0x5c]
1002a345:	push   eax
1002a346:	lea    eax,[esp+0x124]
1002a34d:	push   eax
1002a34e:	mov    BYTE PTR [esp+0x214],0x9
1002a356:	mov    eax,DWORD PTR [edi]
1002a358:	add    eax,0x18
1002a35b:	call   0x10008602
1002a360:	mov    DWORD PTR [esp+0x1c],eax
1002a364:	push   ebx
1002a365:	lea    eax,[esp+0x40]
1002a369:	push   eax
1002a36a:	lea    eax,[esp+0x15c]
1002a371:	push   eax
1002a372:	mov    BYTE PTR [esp+0x214],0xa
1002a37a:	mov    eax,DWORD PTR [edi]
1002a37c:	add    eax,0x18
1002a37f:	call   0x10008602
1002a384:	push   esi
1002a385:	mov    BYTE PTR [esp+0x20c],0xb
1002a38d:	push   DWORD PTR [esp+0x14]
1002a391:	push   DWORD PTR [esp+0x20]
1002a395:	push   DWORD PTR [esp+0x28]
1002a399:	push   eax
1002a39a:	lea    eax,[esp+0x184]
1002a3a1:	push   eax
1002a3a2:	call   0x10012b4e
1002a3a7:	mov    esi,eax
1002a3a9:	push   0xffffffff
1002a3ab:	mov    BYTE PTR [esp+0x20c],0xc
1002a3b3:	push   DWORD PTR ds:0x10080dc4
1002a3b9:	call   DWORD PTR ds:0x10066084
1002a3bf:	test   eax,eax
1002a3c1:	jne    0x1002a3d6
1002a3c3:	mov    eax,esi
1002a3c5:	call   0x10012caf
1002a3ca:	push   DWORD PTR ds:0x10080dc4
1002a3d0:	call   DWORD PTR ds:0x10066094
1002a3d6:	lea    esi,[esp+0x170]
1002a3dd:	call   0x1000bcad
1002a3e2:	xor    esi,esi
1002a3e4:	push   ebx
1002a3e5:	inc    esi
1002a3e6:	push   esi
1002a3e7:	lea    ecx,[esp+0x15c]
1002a3ee:	call   0x100012eb
1002a3f3:	push   ebx
1002a3f4:	push   esi
1002a3f5:	lea    ecx,[esp+0x124]
1002a3fc:	call   0x100012eb
1002a401:	push   ebx
1002a402:	push   esi
1002a403:	lea    ecx,[esp+0xd0]
1002a40a:	call   0x100012eb
1002a40f:	push   ebx
1002a410:	push   esi
1002a411:	lea    ecx,[esp+0x108]
1002a418:	call   0x100012eb
1002a41d:	push   ebx
1002a41e:	push   esi
1002a41f:	lea    ecx,[esp+0x140]
1002a426:	call   0x100012eb
1002a42b:	push   ebx
1002a42c:	push   esi
1002a42d:	lea    ecx,[esp+0x44]
1002a431:	call   0x100012eb
1002a436:	push   ebx
1002a437:	push   esi
1002a438:	lea    ecx,[esp+0x60]
1002a43c:	call   0x100012eb
1002a441:	push   ebx
1002a442:	push   esi
1002a443:	lea    ecx,[esp+0x28]
1002a447:	call   0x100012eb
1002a44c:	xor    al,al
1002a44e:	mov    ecx,DWORD PTR [esp+0x200]
1002a455:	mov    DWORD PTR fs:0x0,ecx
1002a45c:	pop    ecx
1002a45d:	pop    edi
1002a45e:	pop    esi
1002a45f:	pop    ebx
1002a460:	mov    esp,ebp
1002a462:	pop    ebp
1002a463:	ret    0x4
1002a466:	push   0x0
1002a468:	push   0x10080da0
1002a46d:	call   DWORD PTR ds:0x100660e4
1002a473:	test   eax,eax
1002a475:	jne    0x1002a48a
1002a477:	mov    eax,DWORD PTR [esp+0x4]
1002a47b:	mov    BYTE PTR [eax+0x14],0x1
1002a47f:	mov    eax,DWORD PTR [eax+0x4]
1002a482:	mov    BYTE PTR [eax+0x2c],0x1
1002a486:	mov    al,0x1
1002a488:	jmp    0x1002a48c
1002a48a:	xor    al,al
1002a48c:	ret    0x4
1002a48f:	push   0x20
1002a491:	mov    eax,0x10060a7d
1002a496:	call   0x10059b25
1002a49b:	mov    edi,DWORD PTR [ebp+0x8]
1002a49e:	mov    esi,edi
1002a4a0:	call   0x100040d0
1002a4a5:	push   DWORD PTR [ebp+0xc]
1002a4a8:	xor    ebx,ebx
1002a4aa:	mov    DWORD PTR [ebp-0x4],ebx
1002a4ad:	lea    ecx,[ebp-0x28]
1002a4b0:	mov    DWORD PTR [edi+0x1c],ebx
1002a4b3:	mov    DWORD PTR [edi+0x20],ebx
1002a4b6:	mov    DWORD PTR [edi+0x24],ebx
1002a4b9:	call   0x100011c8
1002a4be:	mov    esi,DWORD PTR [ebp+0x10]
1002a4c1:	lea    eax,[ebp-0x28]
1002a4c4:	mov    ecx,edi
1002a4c6:	mov    BYTE PTR [ebp-0x4],0x1
1002a4ca:	call   0x10039f40
1002a4cf:	push   ebx
1002a4d0:	push   0x1
1002a4d2:	lea    ecx,[ebp-0x28]
1002a4d5:	call   0x100012eb
1002a4da:	mov    eax,edi
1002a4dc:	call   0x10059bfd
1002a4e1:	ret    0xc
1002a4e4:	push   ebp
1002a4e5:	mov    ebp,esp
1002a4e7:	and    esp,0xfffffff8
1002a4ea:	push   0xffffffff
1002a4ec:	push   0x100633f8
1002a4f1:	mov    eax,fs:0x0
1002a4f7:	push   eax
1002a4f8:	sub    esp,0x108
1002a4fe:	mov    eax,ds:0x1007e030
1002a503:	xor    eax,esp
1002a505:	mov    DWORD PTR [esp+0x100],eax
1002a50c:	push   ebx
1002a50d:	push   esi
1002a50e:	push   edi
1002a50f:	mov    eax,ds:0x1007e030
1002a514:	xor    eax,esp
1002a516:	push   eax
1002a517:	lea    eax,[esp+0x118]
1002a51e:	mov    fs:0x0,eax
1002a524:	mov    edi,DWORD PTR [ebp+0x8]
1002a527:	mov    eax,DWORD PTR [edi]
1002a529:	xor    ebx,ebx
1002a52b:	cmp    BYTE PTR [eax+0x2c],bl
1002a52e:	mov    DWORD PTR [esp+0x18],edi
1002a532:	je     0x1002a55c
1002a534:	xor    al,al
1002a536:	mov    ecx,DWORD PTR [esp+0x118]
1002a53d:	mov    DWORD PTR fs:0x0,ecx
1002a544:	pop    ecx
1002a545:	pop    edi
1002a546:	pop    esi
1002a547:	pop    ebx
1002a548:	mov    ecx,DWORD PTR [esp+0x100]
1002a54f:	xor    ecx,esp
1002a551:	call   0x10042f87
1002a556:	mov    esp,ebp
1002a558:	pop    ebp
1002a559:	ret    0x4
1002a55c:	push   0x1e05d804
1002a561:	push   0x10072888
1002a566:	call   0x100042bd
1002a56b:	push   0x79a6e2ae
1002a570:	push   eax
1002a571:	call   0x100042bd
1002a576:	push   0x7c2f5cec
1002a57b:	push   eax
1002a57c:	call   0x100042bd
1002a581:	push   0x7e3fcadc
1002a586:	push   eax
1002a587:	call   0x100042bd
1002a58c:	push   eax
1002a58d:	push   0x8
1002a58f:	push   0x10071b84
1002a594:	call   0x100042cf
1002a599:	add    esp,0x2c
1002a59c:	push   eax
1002a59d:	lea    ecx,[esp+0xd8]
1002a5a4:	call   0x100011c8
1002a5a9:	push   ebx
1002a5aa:	lea    eax,[esp+0xd8]
1002a5b1:	push   eax
1002a5b2:	lea    eax,[esp+0xa4]
1002a5b9:	push   eax
1002a5ba:	mov    DWORD PTR [esp+0x12c],ebx
1002a5c1:	mov    eax,DWORD PTR [edi+0x4]
1002a5c4:	add    eax,0x20
1002a5c7:	call   0x10008602
1002a5cc:	push   ebx
1002a5cd:	push   0x1
1002a5cf:	lea    ecx,[esp+0xdc]
1002a5d6:	mov    BYTE PTR [esp+0x128],0x2
1002a5de:	call   0x100012eb
1002a5e3:	push   0x1006cd08
1002a5e8:	lea    esi,[esp+0xa0]
1002a5ef:	call   0x10006639
1002a5f4:	test   al,al
1002a5f6:	pop    ecx
1002a5f7:	jne    0x1002aaea
1002a5fd:	push   DWORD PTR [edi]
1002a5ff:	lea    ecx,[esp+0xbc]
1002a606:	call   0x10008c7d
1002a60b:	lea    eax,[esp+0xf0]
1002a612:	push   eax
1002a613:	push   0x10080ee8
1002a618:	lea    ecx,[esp+0xc0]
1002a61f:	mov    BYTE PTR [esp+0x128],0x3
1002a627:	call   0x10019b04
1002a62c:	lea    edi,[esp+0xf0]
1002a633:	mov    BYTE PTR [esp+0x120],0x4
1002a63b:	call   0x100199a9
1002a640:	test   al,al
1002a642:	jne    0x1002aacc
1002a648:	cmp    DWORD PTR [esp+0xf0],ebx
1002a64f:	je     0x1002aacc
1002a655:	push   0x1f19c510
1002a65a:	push   0x100728c4
1002a65f:	call   0x100042bd
1002a664:	cmp    DWORD PTR [esp+0xd8],0x10
1002a66c:	mov    esi,DWORD PTR [esp+0xc4]
1002a673:	pop    ecx
1002a674:	pop    ecx
1002a675:	mov    edi,esi
1002a677:	jae    0x1002a682
1002a679:	lea    edi,[esp+0xbc]
1002a680:	mov    esi,edi
1002a682:	push   eax
1002a683:	push   0x8
1002a685:	push   0x100728fc
1002a68a:	call   0x100042cf
1002a68f:	add    esp,0xc
1002a692:	push   eax
1002a693:	push   edi
1002a694:	call   0x10045b20
1002a699:	cmp    eax,esi
1002a69b:	pop    ecx
1002a69c:	pop    ecx
1002a69d:	jne    0x1002a7d6
1002a6a3:	push   0x5c042590
1002a6a8:	push   0x10072908
1002a6ad:	call   0x100042bd
1002a6b2:	push   0x585a786c
1002a6b7:	push   eax
1002a6b8:	call   0x100042bd
1002a6bd:	push   0x6a27dc5a
1002a6c2:	push   eax
1002a6c3:	call   0x100042bd
1002a6c8:	push   0x32343e7e
1002a6cd:	push   eax
1002a6ce:	call   0x100042bd
1002a6d3:	push   eax
1002a6d4:	push   0x7
1002a6d6:	push   0x10072934
1002a6db:	call   0x100042cf
1002a6e0:	add    esp,0x2c
1002a6e3:	push   eax
1002a6e4:	lea    ecx,[esp+0xd8]
1002a6eb:	call   0x100011c8
1002a6f0:	push   0xffffffff
1002a6f2:	push   ebx
1002a6f3:	lea    eax,[esp+0xa4]
1002a6fa:	lea    esi,[esp+0xdc]
1002a701:	mov    BYTE PTR [esp+0x128],0x5
1002a709:	call   0x10004ce1
1002a70e:	push   0x1007293c
1002a713:	push   0x8
1002a715:	push   0x10071b84
1002a71a:	call   0x100042cf
1002a71f:	add    esp,0xc
1002a722:	push   eax
1002a723:	lea    ecx,[esp+0x2c]
1002a727:	call   0x100011c8
1002a72c:	mov    edi,DWORD PTR [esp+0x18]
1002a730:	lea    eax,[esp+0x28]
1002a734:	push   eax
1002a735:	mov    BYTE PTR [esp+0x124],0x6
1002a73d:	mov    eax,DWORD PTR [edi+0x8]
1002a740:	add    eax,0x20
1002a743:	push   eax
1002a744:	call   0x100083a0
1002a749:	xor    esi,esi
1002a74b:	push   ebx
1002a74c:	inc    esi
1002a74d:	push   esi
1002a74e:	lea    ecx,[esp+0x30]
1002a752:	mov    BYTE PTR [esp+0x128],0x5
1002a75a:	call   0x100012eb
1002a75f:	push   0x5d62db78
1002a764:	push   0x1007296c
1002a769:	call   0x100042bd
1002a76e:	push   0x61e5fdea
1002a773:	push   eax
1002a774:	call   0x100042bd
1002a779:	push   eax
1002a77a:	push   0x7
1002a77c:	push   0x100729a8
1002a781:	call   0x100042cf
1002a786:	add    esp,0x1c
1002a789:	push   eax
1002a78a:	lea    ecx,[esp+0x2c]
1002a78e:	call   0x100011c8
1002a793:	mov    BYTE PTR [esp+0x120],0x7
1002a79b:	mov    edx,DWORD PTR [edi+0x8]
1002a79e:	push   ebx
1002a79f:	lea    eax,[esp+0x2c]
1002a7a3:	push   eax
1002a7a4:	add    edx,0x20
1002a7a7:	lea    ecx,[esp+0xdc]
1002a7ae:	call   0x10008097
1002a7b3:	push   ebx
1002a7b4:	push   esi
1002a7b5:	lea    ecx,[esp+0x30]
1002a7b9:	call   0x100012eb
1002a7be:	push   ebx
1002a7bf:	mov    BYTE PTR [esp+0x124],0x4
1002a7c7:	push   esi
1002a7c8:	lea    ecx,[esp+0xdc]
1002a7cf:	call   0x100012eb
1002a7d4:	jmp    0x1002a7d9
1002a7d6:	xor    esi,esi
1002a7d8:	inc    esi
1002a7d9:	push   0x34
1002a7db:	call   0x1004358e
1002a7e0:	pop    ecx
1002a7e1:	mov    DWORD PTR [esp+0x14],eax
1002a7e5:	cmp    eax,ebx
1002a7e7:	mov    BYTE PTR [esp+0x120],0x8
1002a7ef:	je     0x1002a83f
1002a7f1:	push   0x139380de
1002a7f6:	push   0x100729b0
1002a7fb:	mov    DWORD PTR [esp+0x24],ebx
1002a7ff:	mov    DWORD PTR [esp+0x28],ebx
1002a803:	mov    DWORD PTR [esp+0x2c],esi
1002a807:	call   0x100042bd
1002a80c:	push   0x71db9b48
1002a811:	push   eax
1002a812:	call   0x100042bd
1002a817:	add    esp,0x10
1002a81a:	lea    ecx,[esp+0x1c]
1002a81e:	push   ecx
1002a81f:	push   eax
1002a820:	push   0xd
1002a822:	push   0x100729dc
1002a827:	call   0x100042cf
1002a82c:	add    esp,0xc
1002a82f:	push   eax
1002a830:	push   DWORD PTR [esp+0x1c]
1002a834:	call   0x1002a48f
1002a839:	mov    DWORD PTR [esp+0x14],eax
1002a83d:	jmp    0x1002a843
1002a83f:	mov    DWORD PTR [esp+0x14],ebx
1002a843:	mov    edi,DWORD PTR [esp+0x14]
1002a847:	mov    DWORD PTR [esp+0x44],edi
1002a84b:	mov    BYTE PTR [esp+0x120],0x9
1002a853:	cmp    DWORD PTR [esp+0xb4],0x10
1002a85b:	mov    eax,DWORD PTR [esp+0xa0]
1002a862:	jae    0x1002a86b
1002a864:	lea    eax,[esp+0xa0]
1002a86b:	push   eax
1002a86c:	mov    DWORD PTR [esp+0x20],eax
1002a870:	call   0x10043100
1002a875:	pop    ecx
1002a876:	mov    DWORD PTR [esp+0x20],eax
1002a87a:	lea    eax,[esp+0x1c]
1002a87e:	push   eax
1002a87f:	push   edi
1002a880:	call   0x1003a210
1002a885:	test   al,al
1002a887:	jne    0x1002a9d3
1002a88d:	xor    edi,edi
1002a88f:	lea    eax,[esp+0x9c]
1002a896:	call   0x10011ec7
1002a89b:	cmp    BYTE PTR [eax],0x2f
1002a89e:	je     0x1002a8be
1002a8a0:	push   0x100729ec
1002a8a5:	call   0x10043100
1002a8aa:	mov    ebx,eax
1002a8ac:	pop    ecx
1002a8ad:	lea    eax,[esp+0x9c]
1002a8b4:	call   0x1002aaf0
1002a8b9:	xor    esi,esi
1002a8bb:	xor    ebx,ebx
1002a8bd:	inc    esi
1002a8be:	push   0x2fbf3ce8
1002a8c3:	push   0x100729f0
1002a8c8:	call   0x100042bd
1002a8cd:	push   0x7225b392
1002a8d2:	push   eax
1002a8d3:	call   0x100042bd
1002a8d8:	push   eax
1002a8d9:	push   0x4
1002a8db:	push   0x1006d414
1002a8e0:	call   0x100042cf
1002a8e5:	add    esp,0x1c
1002a8e8:	push   eax
1002a8e9:	lea    ecx,[esp+0x2c]
1002a8ed:	call   0x100011c8
1002a8f2:	push   ebx
1002a8f3:	lea    eax,[esp+0x2c]
1002a8f7:	push   eax
1002a8f8:	lea    eax,[esp+0x50]
1002a8fc:	push   eax
1002a8fd:	mov    eax,DWORD PTR [esp+0x24]
1002a901:	mov    BYTE PTR [esp+0x12c],0xa
1002a909:	mov    eax,DWORD PTR [eax]
1002a90b:	add    eax,0x18
1002a90e:	call   0x10008602
1002a913:	mov    edi,eax
1002a915:	push   0x10072a20
1002a91a:	push   0x7
1002a91c:	push   0x1006d3e4
1002a921:	mov    BYTE PTR [esp+0x12c],0xb
1002a929:	call   0x100042cf
1002a92e:	add    esp,0xc
1002a931:	push   eax
1002a932:	lea    ecx,[esp+0x68]
1002a936:	call   0x100011c8
1002a93b:	push   edi
1002a93c:	push   eax
1002a93d:	lea    eax,[esp+0x88]
1002a944:	push   eax
1002a945:	mov    BYTE PTR [esp+0x12c],0xc
1002a94d:	call   0x10006581
1002a952:	add    esp,0xc
1002a955:	lea    ecx,[esp+0x9c]
1002a95c:	push   ecx
1002a95d:	push   eax
1002a95e:	lea    eax,[esp+0xdc]
1002a965:	push   eax
1002a966:	mov    BYTE PTR [esp+0x12c],0xd
1002a96e:	call   0x10006581
1002a973:	add    esp,0xc
1002a976:	push   0xffffffff
1002a978:	push   ebx
1002a979:	push   eax
1002a97a:	lea    ecx,[esp+0xa8]
1002a981:	mov    BYTE PTR [esp+0x12c],0xe
1002a989:	call   0x1000123c
1002a98e:	push   ebx
1002a98f:	push   esi
1002a990:	lea    ecx,[esp+0xdc]
1002a997:	call   0x100012eb
1002a99c:	push   ebx
1002a99d:	push   esi
1002a99e:	lea    ecx,[esp+0x88]
1002a9a5:	call   0x100012eb
1002a9aa:	push   ebx
1002a9ab:	push   esi
1002a9ac:	lea    ecx,[esp+0x6c]
1002a9b0:	call   0x100012eb
1002a9b5:	push   ebx
1002a9b6:	push   esi
1002a9b7:	lea    ecx,[esp+0x50]
1002a9bb:	call   0x100012eb
1002a9c0:	push   ebx
1002a9c1:	push   esi
1002a9c2:	lea    ecx,[esp+0x30]
1002a9c6:	mov    BYTE PTR [esp+0x128],0x9
1002a9ce:	call   0x100012eb
1002a9d3:	lea    eax,[esp+0x48]
1002a9d7:	push   eax
1002a9d8:	lea    eax,[esp+0xf4]
1002a9df:	call   0x100199c9
1002a9e4:	mov    BYTE PTR [esp+0x120],0xf
1002a9ec:	push   DWORD PTR [esp+0xf0]
1002a9f3:	lea    ecx,[esp+0xa0]
1002a9fa:	push   ecx
1002a9fb:	mov    ebx,eax
1002a9fd:	mov    edi,0x10080ee8
1002aa02:	call   0x10019a41
1002aa07:	xor    esi,esi
1002aa09:	xor    ebx,ebx
1002aa0b:	push   esi
1002aa0c:	inc    ebx
1002aa0d:	push   ebx
1002aa0e:	lea    ecx,[esp+0x50]
1002aa12:	mov    BYTE PTR [esp+0x128],0x9
1002aa1a:	call   0x100012eb
1002aa1f:	lea    eax,[esp+0x48]
1002aa23:	push   eax
1002aa24:	lea    eax,[esp+0xf4]
1002aa2b:	call   0x100199c9
1002aa30:	cmp    DWORD PTR [esp+0xb4],0x10
1002aa38:	mov    ecx,DWORD PTR [esp+0xa0]
1002aa3f:	jae    0x1002aa48
1002aa41:	lea    ecx,[esp+0xa0]
1002aa48:	cmp    DWORD PTR [eax+0x18],0x10
1002aa4c:	jb     0x1002aa53
1002aa4e:	mov    eax,DWORD PTR [eax+0x4]
1002aa51:	jmp    0x1002aa56
1002aa53:	add    eax,0x4
1002aa56:	push   ecx
1002aa57:	push   eax
1002aa58:	call   0x1000206e
1002aa5d:	pop    ecx
1002aa5e:	pop    ecx
1002aa5f:	push   esi
1002aa60:	push   ebx
1002aa61:	lea    ecx,[esp+0x50]
1002aa65:	call   0x100012eb
1002aa6a:	mov    eax,DWORD PTR [esp+0x18]
1002aa6e:	mov    BYTE PTR [esp+0x120],0x4
1002aa76:	cmp    DWORD PTR [esp+0x14],esi
1002aa7a:	mov    BYTE PTR [eax+0x11],bl
1002aa7d:	je     0x1002aa92
1002aa7f:	push   DWORD PTR [esp+0x14]
1002aa83:	call   0x1003a020
1002aa88:	push   DWORD PTR [esp+0x14]
1002aa8c:	call   0x10042f82
1002aa91:	pop    ecx
1002aa92:	push   esi
1002aa93:	push   ebx
1002aa94:	lea    ecx,[esp+0xfc]
1002aa9b:	call   0x100012eb
1002aaa0:	push   esi
1002aaa1:	push   ebx
1002aaa2:	lea    ecx,[esp+0xc0]
1002aaa9:	call   0x100012eb
1002aaae:	mov    BYTE PTR [esp+0x13],bl
1002aab2:	xor    ebx,ebx
1002aab4:	push   ebx
1002aab5:	push   0x1
1002aab7:	lea    ecx,[esp+0xa4]
1002aabe:	call   0x100012eb
1002aac3:	mov    al,BYTE PTR [esp+0x13]
1002aac7:	jmp    0x1002a536
1002aacc:	push   ebx
1002aacd:	push   0x1
1002aacf:	lea    ecx,[esp+0xfc]
1002aad6:	call   0x100012eb
1002aadb:	push   ebx
1002aadc:	push   0x1
1002aade:	lea    ecx,[esp+0xc0]
1002aae5:	call   0x100012eb
1002aaea:	mov    BYTE PTR [esp+0x13],bl
1002aaee:	jmp    0x1002aab4
1002aaf0:	push   ebp
1002aaf1:	mov    ebp,esp
1002aaf3:	push   ecx
1002aaf4:	push   esi
1002aaf5:	push   edi
1002aaf6:	mov    esi,eax
1002aaf8:	mov    edi,0x100729ec
1002aafd:	push   edi
1002aafe:	mov    ecx,esi
1002ab00:	call   0x100015dd
1002ab05:	test   al,al
1002ab07:	je     0x1002ab24
1002ab09:	cmp    DWORD PTR [esi+0x18],0x10
1002ab0d:	jb     0x1002ab14
1002ab0f:	mov    eax,DWORD PTR [esi+0x4]
1002ab12:	jmp    0x1002ab17
1002ab14:	lea    eax,[esi+0x4]
1002ab17:	sub    edi,eax
1002ab19:	push   ebx
1002ab1a:	push   edi
1002ab1b:	mov    eax,esi
1002ab1d:	call   0x1002aba5
1002ab22:	jmp    0x1002aba1
1002ab24:	or     eax,0xffffffff
1002ab27:	sub    eax,DWORD PTR [esi+0x14]
1002ab2a:	cmp    eax,ebx
1002ab2c:	ja     0x1002ab33
1002ab2e:	call   0x10057290
1002ab33:	test   ebx,ebx
1002ab35:	jbe    0x1002ab9f
1002ab37:	mov    eax,DWORD PTR [esi+0x14]
1002ab3a:	add    eax,ebx
1002ab3c:	push   0x0
1002ab3e:	push   eax
1002ab3f:	mov    ecx,esi
1002ab41:	mov    DWORD PTR [ebp-0x4],eax
1002ab44:	call   0x10001433
1002ab49:	test   al,al
1002ab4b:	je     0x1002ab9f
1002ab4d:	mov    eax,DWORD PTR [esi+0x18]
1002ab50:	cmp    eax,0x10
1002ab53:	lea    edi,[esi+0x4]
1002ab56:	jb     0x1002ab5c
1002ab58:	mov    edx,DWORD PTR [edi]
1002ab5a:	jmp    0x1002ab5e
1002ab5c:	mov    edx,edi
1002ab5e:	cmp    eax,0x10
1002ab61:	jb     0x1002ab67
1002ab63:	mov    ecx,DWORD PTR [edi]
1002ab65:	jmp    0x1002ab69
1002ab67:	mov    ecx,edi
1002ab69:	push   DWORD PTR [esi+0x14]
1002ab6c:	sub    eax,ebx
1002ab6e:	push   edx
1002ab6f:	push   eax
1002ab70:	add    ecx,ebx
1002ab72:	push   ecx
1002ab73:	call   0x10001049
1002ab78:	mov    eax,DWORD PTR [esi+0x18]
1002ab7b:	add    esp,0x10
1002ab7e:	cmp    eax,0x10
1002ab81:	jb     0x1002ab85
1002ab83:	mov    edi,DWORD PTR [edi]
1002ab85:	push   ebx
1002ab86:	push   0x100729ec
1002ab8b:	push   eax
1002ab8c:	push   edi
1002ab8d:	call   0x1000102d
1002ab92:	add    esp,0x10
1002ab95:	push   DWORD PTR [ebp-0x4]
1002ab98:	mov    ecx,esi
1002ab9a:	call   0x10001417
1002ab9f:	mov    eax,esi
1002aba1:	pop    edi
1002aba2:	pop    esi
1002aba3:	leave  
1002aba4:	ret    
1002aba5:	push   ebp
1002aba6:	mov    ebp,esp
1002aba8:	push   ecx
1002aba9:	push   ebx
1002abaa:	push   edi
1002abab:	mov    edi,DWORD PTR [ebp+0x8]
1002abae:	mov    ebx,eax
1002abb0:	cmp    DWORD PTR [ebx+0x14],edi
1002abb3:	jae    0x1002abba
1002abb5:	call   0x100572cf
1002abba:	mov    eax,DWORD PTR [ebx+0x14]
1002abbd:	sub    eax,edi
1002abbf:	cmp    eax,DWORD PTR [ebp+0xc]
1002abc2:	jae    0x1002abc7
1002abc4:	mov    DWORD PTR [ebp+0xc],eax
1002abc7:	or     eax,0xffffffff
1002abca:	sub    eax,DWORD PTR [esi+0x14]
1002abcd:	cmp    eax,DWORD PTR [ebp+0xc]
1002abd0:	ja     0x1002abd7
1002abd2:	call   0x10057290
1002abd7:	cmp    DWORD PTR [ebp+0xc],0x0
1002abdb:	jbe    0x1002ac96
1002abe1:	mov    eax,DWORD PTR [esi+0x14]
1002abe4:	add    eax,DWORD PTR [ebp+0xc]
1002abe7:	push   0x0
1002abe9:	push   eax
1002abea:	mov    ecx,esi
1002abec:	mov    DWORD PTR [ebp-0x4],eax
1002abef:	call   0x10001433
1002abf4:	test   al,al
1002abf6:	je     0x1002ac96
1002abfc:	mov    eax,DWORD PTR [esi+0x18]
1002abff:	cmp    eax,0x10
1002ac02:	lea    edi,[esi+0x4]
1002ac05:	jb     0x1002ac0b
1002ac07:	mov    edx,DWORD PTR [edi]
1002ac09:	jmp    0x1002ac0d
1002ac0b:	mov    edx,edi
1002ac0d:	cmp    eax,0x10
1002ac10:	jb     0x1002ac16
1002ac12:	mov    ecx,DWORD PTR [edi]
1002ac14:	jmp    0x1002ac18
1002ac16:	mov    ecx,edi
1002ac18:	push   DWORD PTR [esi+0x14]
1002ac1b:	push   edx
1002ac1c:	mov    edx,DWORD PTR [ebp+0xc]
1002ac1f:	sub    eax,edx
1002ac21:	push   eax
1002ac22:	add    ecx,edx
1002ac24:	push   ecx
1002ac25:	call   0x10001049
1002ac2a:	add    esp,0x10
1002ac2d:	cmp    esi,ebx
1002ac2f:	jne    0x1002ac61
1002ac31:	mov    ecx,DWORD PTR [ebp+0x8]
1002ac34:	test   ecx,ecx
1002ac36:	jbe    0x1002ac3d
1002ac38:	mov    eax,DWORD PTR [ebp+0xc]
1002ac3b:	add    ecx,eax
1002ac3d:	mov    edx,DWORD PTR [esi+0x18]
1002ac40:	cmp    edx,0x10
1002ac43:	jb     0x1002ac49
1002ac45:	mov    eax,DWORD PTR [edi]
1002ac47:	jmp    0x1002ac4b
1002ac49:	mov    eax,edi
1002ac4b:	cmp    edx,0x10
1002ac4e:	jb     0x1002ac52
1002ac50:	mov    edi,DWORD PTR [edi]
1002ac52:	push   DWORD PTR [ebp+0xc]
1002ac55:	add    eax,ecx
1002ac57:	push   eax
1002ac58:	push   edx
1002ac59:	push   edi
1002ac5a:	call   0x10001049
1002ac5f:	jmp    0x1002ac89
1002ac61:	cmp    DWORD PTR [ebx+0x18],0x10
1002ac65:	jb     0x1002ac6c
1002ac67:	mov    ebx,DWORD PTR [ebx+0x4]
1002ac6a:	jmp    0x1002ac6f
1002ac6c:	add    ebx,0x4
1002ac6f:	mov    eax,DWORD PTR [esi+0x18]
1002ac72:	cmp    eax,0x10
1002ac75:	jb     0x1002ac79
1002ac77:	mov    edi,DWORD PTR [edi]
1002ac79:	push   DWORD PTR [ebp+0xc]
1002ac7c:	mov    ecx,DWORD PTR [ebp+0x8]
1002ac7f:	add    ebx,ecx
1002ac81:	push   ebx
1002ac82:	push   eax
1002ac83:	push   edi
1002ac84:	call   0x1000102d
1002ac89:	add    esp,0x10
1002ac8c:	push   DWORD PTR [ebp-0x4]
1002ac8f:	mov    ecx,esi
1002ac91:	call   0x10001417
1002ac96:	pop    edi
1002ac97:	mov    eax,esi
1002ac99:	pop    ebx
1002ac9a:	leave  
1002ac9b:	ret    0x8
1002ac9e:	push   ebp
1002ac9f:	sub    esp,0x70
1002aca2:	lea    ebp,[esp-0x4]
1002aca6:	mov    eax,ds:0x1007e030
1002acab:	xor    eax,ebp
1002acad:	mov    DWORD PTR [ebp+0x70],eax
1002acb0:	push   0x68
1002acb2:	mov    eax,0x1006333b
1002acb7:	call   0x10059b58
1002acbc:	mov    esi,DWORD PTR [ebp+0x7c]
1002acbf:	mov    eax,DWORD PTR [esi]
1002acc1:	xor    ebx,ebx
1002acc3:	cmp    BYTE PTR [eax+0x2c],bl
1002acc6:	mov    DWORD PTR [ebp-0x2c],esi
1002acc9:	jne    0x1002af40
1002accf:	push   0x3eca69d4
1002acd4:	push   0x10072a4c
1002acd9:	call   0x100042bd
1002acde:	push   0x1585a948
1002ace3:	push   eax
1002ace4:	call   0x100042bd
1002ace9:	push   eax
1002acea:	push   0x8
1002acec:	push   0x10071b84
1002acf1:	call   0x100042cf
1002acf6:	add    esp,0x1c
1002acf9:	push   eax
1002acfa:	lea    ecx,[ebp-0x58]
1002acfd:	call   0x100011c8
1002ad02:	push   ebx
1002ad03:	lea    eax,[ebp-0x58]
1002ad06:	push   eax
1002ad07:	lea    eax,[ebp+0x54]
1002ad0a:	push   eax
1002ad0b:	mov    DWORD PTR [ebp-0x4],ebx
1002ad0e:	mov    eax,DWORD PTR [esi+0x4]
1002ad11:	add    eax,0x20
1002ad14:	call   0x10008602
1002ad19:	xor    edi,edi
1002ad1b:	push   ebx
1002ad1c:	inc    edi
1002ad1d:	push   edi
1002ad1e:	lea    ecx,[ebp-0x58]
1002ad21:	mov    BYTE PTR [ebp-0x4],0x2
1002ad25:	call   0x100012eb
1002ad2a:	push   0x1006cd08
1002ad2f:	lea    esi,[ebp+0x54]
1002ad32:	call   0x10006639
1002ad37:	test   al,al
1002ad39:	pop    ecx
1002ad3a:	je     0x1002ad43
1002ad3c:	push   ebx
1002ad3d:	push   edi
1002ad3e:	jmp    0x1002af38
1002ad43:	push   0x10072a84
1002ad48:	push   0x5
1002ad4a:	push   0x10072ab0
1002ad4f:	call   0x100042cf
1002ad54:	mov    esi,eax
1002ad56:	push   esi
1002ad57:	call   0x10043100
1002ad5c:	add    esp,0x10
1002ad5f:	push   eax
1002ad60:	push   esi
1002ad61:	lea    eax,[ebp+0x54]
1002ad64:	call   0x1002af61
1002ad69:	cmp    eax,0xffffffff
1002ad6c:	je     0x1002ad3c
1002ad6e:	add    eax,0x5
1002ad71:	push   0xffffffff
1002ad73:	push   eax
1002ad74:	lea    eax,[ebp+0x54]
1002ad77:	push   eax
1002ad78:	lea    eax,[ebp+0x1c]
1002ad7b:	call   0x1000c98f
1002ad80:	lea    eax,[ebp-0x14]
1002ad83:	push   eax
1002ad84:	lea    eax,[ebp+0x1c]
1002ad87:	push   eax
1002ad88:	lea    eax,[ebp-0x1c]
1002ad8b:	mov    BYTE PTR [ebp-0x4],0x3
1002ad8f:	push   eax
1002ad90:	mov    DWORD PTR [ebp-0x14],ebx
1002ad93:	call   0x10039c60
1002ad98:	mov    ecx,DWORD PTR [eax]
1002ad9a:	mov    esi,ecx
1002ad9c:	mov    DWORD PTR [ebp-0x24],esi
1002ad9f:	mov    DWORD PTR [eax],ebx
1002ada1:	mov    DWORD PTR [ebp-0x3c],esi
1002ada4:	mov    BYTE PTR [ebp-0x4],0x4
1002ada8:	push   DWORD PTR [ebp-0x1c]
1002adab:	call   0x10042f82
1002adb0:	add    esp,0x10
1002adb3:	cmp    esi,ebx
1002adb5:	push   ebx
1002adb6:	jne    0x1002adcd
1002adb8:	call   0x10042f82
1002adbd:	pop    ecx
1002adbe:	push   ebx
1002adbf:	push   edi
1002adc0:	lea    ecx,[ebp+0x1c]
1002adc3:	call   0x100012eb
1002adc8:	jmp    0x1002ad3c
1002adcd:	push   DWORD PTR ds:0x10080dbc
1002add3:	lea    eax,[ebp-0x20]
1002add6:	push   DWORD PTR [ebp-0x14]
1002add9:	lea    edx,[ebp-0x15]
1002addc:	push   esi
1002addd:	push   eax
1002adde:	lea    ecx,[ebp-0x28]
1002ade1:	mov    DWORD PTR [ebp-0x28],ebx
1002ade4:	call   0x10039830
1002ade9:	mov    ecx,DWORD PTR [eax]
1002adeb:	mov    edi,ecx
1002aded:	mov    DWORD PTR [ebp-0x14],edi
1002adf0:	mov    DWORD PTR [eax],ebx
1002adf2:	mov    DWORD PTR [ebp-0x1c],edi
1002adf5:	mov    BYTE PTR [ebp-0x4],0x5
1002adf9:	push   DWORD PTR [ebp-0x20]
1002adfc:	call   0x10042f82
1002ae01:	add    esp,0x18
1002ae04:	cmp    edi,ebx
1002ae06:	jne    0x1002ae27
1002ae08:	push   ebx
1002ae09:	call   0x10042f82
1002ae0e:	push   esi
1002ae0f:	call   0x10042f82
1002ae14:	pop    ecx
1002ae15:	pop    ecx
1002ae16:	push   ebx
1002ae17:	push   0x1
1002ae19:	lea    ecx,[ebp+0x1c]
1002ae1c:	call   0x100012eb
1002ae21:	push   ebx
1002ae22:	jmp    0x1002af36
1002ae27:	mov    BYTE PTR [ebp-0x4],0x6
1002ae2b:	mov    eax,DWORD PTR [ebp-0x28]
1002ae2e:	mov    DWORD PTR [ebp-0x30],edi
1002ae31:	lea    edi,[ebp+0x38]
1002ae34:	lea    esi,[ebp-0x38]
1002ae37:	mov    DWORD PTR [ebp-0x38],ebx
1002ae3a:	mov    DWORD PTR [ebp-0x34],eax
1002ae3d:	call   0x10037630
1002ae42:	lea    edi,[ebp+0x0]
1002ae45:	mov    BYTE PTR [ebp-0x4],0x7
1002ae49:	call   0x10037630
1002ae4e:	push   0x1
1002ae50:	lea    eax,[ebp+0x38]
1002ae53:	mov    ebx,edi
1002ae55:	push   eax
1002ae56:	mov    edi,0x10080ee8
1002ae5b:	mov    BYTE PTR [ebp-0x4],0x8
1002ae5f:	call   0x10019a41
1002ae64:	push   0x10072ab8
1002ae69:	push   0x8
1002ae6b:	push   0x10071b84
1002ae70:	call   0x100042cf
1002ae75:	add    esp,0xc
1002ae78:	push   eax
1002ae79:	lea    ecx,[ebp-0x74]
1002ae7c:	call   0x100011c8
1002ae81:	lea    eax,[ebp-0x74]
1002ae84:	push   eax
1002ae85:	mov    eax,DWORD PTR [ebp-0x2c]
1002ae88:	mov    BYTE PTR [ebp-0x4],0x9
1002ae8c:	mov    edx,DWORD PTR [eax+0x8]
1002ae8f:	add    edx,0x20
1002ae92:	lea    ecx,[ebp+0x38]
1002ae95:	call   0x100084eb
1002ae9a:	xor    esi,esi
1002ae9c:	xor    ebx,ebx
1002ae9e:	push   esi
1002ae9f:	inc    ebx
1002aea0:	push   ebx
1002aea1:	lea    ecx,[ebp-0x74]
1002aea4:	call   0x100012eb
1002aea9:	cmp    DWORD PTR [ebp+0x18],0x10
1002aead:	mov    ecx,DWORD PTR [ebp+0x4]
1002aeb0:	jae    0x1002aeb5
1002aeb2:	lea    ecx,[ebp+0x4]
1002aeb5:	cmp    DWORD PTR [ebp+0x50],0x10
1002aeb9:	mov    eax,DWORD PTR [ebp+0x3c]
1002aebc:	jae    0x1002aec1
1002aebe:	lea    eax,[ebp+0x3c]
1002aec1:	push   ecx
1002aec2:	push   eax
1002aec3:	call   0x1000206e
1002aec8:	pop    ecx
1002aec9:	pop    ecx
1002aeca:	push   esi
1002aecb:	push   ebx
1002aecc:	lea    ecx,[ebp+0x0]
1002aecf:	call   0x100012eb
1002aed4:	push   esi
1002aed5:	push   ebx
1002aed6:	lea    ecx,[ebp+0x38]
1002aed9:	call   0x100012eb
1002aede:	push   DWORD PTR [ebp-0x14]
1002aee1:	call   0x10042f82
1002aee6:	push   DWORD PTR [ebp-0x24]
1002aee9:	call   0x10042f82
1002aeee:	pop    ecx
1002aeef:	pop    ecx
1002aef0:	push   esi
1002aef1:	push   ebx
1002aef2:	lea    ecx,[ebp+0x1c]
1002aef5:	call   0x100012eb
1002aefa:	push   esi
1002aefb:	push   ebx
1002aefc:	lea    ecx,[ebp+0x54]
1002aeff:	call   0x100012eb
1002af04:	mov    al,bl
1002af06:	jmp    0x1002af42
1002af08:	push   0x5
1002af0a:	call   0x100379e0
1002af0f:	pop    ecx
1002af10:	mov    eax,0x1002af16
1002af15:	ret    
1002af16:	push   DWORD PTR [ebp-0x14]
1002af19:	call   0x10042f82
1002af1e:	push   DWORD PTR [ebp-0x24]
1002af21:	call   0x10042f82
1002af26:	pop    ecx
1002af27:	pop    ecx
1002af28:	push   0x0
1002af2a:	push   0x1
1002af2c:	lea    ecx,[ebp+0x1c]
1002af2f:	call   0x100012eb
1002af34:	push   0x0
1002af36:	push   0x1
1002af38:	lea    ecx,[ebp+0x54]
1002af3b:	call   0x100012eb
1002af40:	xor    al,al
1002af42:	mov    ecx,DWORD PTR [ebp-0xc]
1002af45:	mov    DWORD PTR fs:0x0,ecx
1002af4c:	pop    ecx
1002af4d:	pop    edi
1002af4e:	pop    esi
1002af4f:	pop    ebx
1002af50:	mov    ecx,DWORD PTR [ebp+0x70]
1002af53:	xor    ecx,ebp
1002af55:	call   0x10042f87
1002af5a:	add    ebp,0x74
1002af5d:	leave  
1002af5e:	ret    0x4
1002af61:	push   ebp
1002af62:	mov    ebp,esp
1002af64:	cmp    DWORD PTR [ebp+0xc],0x0
1002af68:	push   esi
1002af69:	mov    esi,eax
1002af6b:	jne    0x1002af7b
1002af6d:	mov    esi,DWORD PTR [esi+0x14]
1002af70:	or     eax,0xffffffff
1002af73:	cmp    esi,eax
1002af75:	ja     0x1002afe3
1002af77:	mov    eax,esi
1002af79:	jmp    0x1002afe3
1002af7b:	mov    eax,DWORD PTR [esi+0x14]
1002af7e:	cmp    DWORD PTR [ebp+0xc],eax
1002af81:	push   ebx
1002af82:	push   edi
1002af83:	ja     0x1002afde
1002af85:	sub    eax,DWORD PTR [ebp+0xc]
1002af88:	or     ecx,0xffffffff
1002af8b:	cmp    eax,ecx
1002af8d:	ja     0x1002af91
1002af8f:	mov    ecx,eax
1002af91:	cmp    DWORD PTR [esi+0x18],0x10
1002af95:	lea    edi,[esi+0x4]
1002af98:	jb     0x1002af9e
1002af9a:	mov    eax,DWORD PTR [edi]
1002af9c:	jmp    0x1002afa0
1002af9e:	mov    eax,edi
1002afa0:	lea    ebx,[eax+ecx*1]
1002afa3:	mov    cl,BYTE PTR [ebx]
1002afa5:	mov    eax,DWORD PTR [ebp+0x8]
1002afa8:	cmp    cl,BYTE PTR [eax]
1002afaa:	jne    0x1002afbd
1002afac:	push   DWORD PTR [ebp+0xc]
1002afaf:	push   eax
1002afb0:	push   ebx
1002afb1:	call   0x10043816
1002afb6:	add    esp,0xc
1002afb9:	test   eax,eax
1002afbb:	je     0x1002afd0
1002afbd:	cmp    DWORD PTR [esi+0x18],0x10
1002afc1:	jb     0x1002afc7
1002afc3:	mov    eax,DWORD PTR [edi]
1002afc5:	jmp    0x1002afc9
1002afc7:	mov    eax,edi
1002afc9:	cmp    ebx,eax
1002afcb:	je     0x1002afde
1002afcd:	dec    ebx
1002afce:	jmp    0x1002afa3
1002afd0:	cmp    DWORD PTR [esi+0x18],0x10
1002afd4:	jb     0x1002afd8
1002afd6:	mov    edi,DWORD PTR [edi]
1002afd8:	mov    eax,ebx
1002afda:	sub    eax,edi
1002afdc:	jmp    0x1002afe1
1002afde:	or     eax,0xffffffff
1002afe1:	pop    edi
1002afe2:	pop    ebx
1002afe3:	pop    esi
1002afe4:	pop    ebp
1002afe5:	ret    0x8
1002afe8:	push   0x10
1002afea:	push   DWORD PTR [esp+0xc]
1002afee:	push   DWORD PTR [esp+0xc]
1002aff2:	call   0x10043816
1002aff7:	add    esp,0xc
1002affa:	neg    eax
1002affc:	sbb    eax,eax
1002affe:	inc    eax
1002afff:	ret    
1002b000:	mov    eax,DWORD PTR [esi]
1002b002:	test   eax,eax
1002b004:	je     0x1002b016
1002b006:	push   eax
1002b007:	call   DWORD PTR ds:0x100662a0
1002b00d:	push   eax
1002b00e:	push   DWORD PTR [esi]
1002b010:	call   DWORD PTR ds:0x100662a8
1002b016:	mov    DWORD PTR [edi],eax
1002b018:	cmp    DWORD PTR [esi],0x0
1002b01b:	je     0x1002b02b
1002b01d:	test   eax,eax
1002b01f:	jne    0x1002b02b
1002b021:	push   0x8007000e
1002b026:	call   0x10001f33
1002b02b:	mov    eax,edi
1002b02d:	ret    
1002b02e:	push   DWORD PTR [esp+0x4]
1002b032:	push   esi
1002b033:	call   DWORD PTR ds:0x10066280
1002b039:	test   eax,eax
1002b03b:	jge    0x1002b04b
1002b03d:	push   eax
1002b03e:	mov    WORD PTR [esi],0xa
1002b043:	mov    DWORD PTR [esi+0x8],eax
1002b046:	call   0x10001f33
1002b04b:	ret    0x4
1002b04e:	push   0x14
1002b050:	mov    eax,0x1005f8d1
1002b055:	call   0x10059b25
1002b05a:	mov    esi,ecx
1002b05c:	cmp    WORD PTR [esi],0x9
1002b060:	jne    0x1002b076
1002b062:	cmp    DWORD PTR [esi+0x8],0x0
1002b066:	je     0x1002b071
1002b068:	mov    eax,DWORD PTR [esi+0x8]
1002b06b:	mov    ecx,DWORD PTR [eax]
1002b06d:	push   eax
1002b06e:	call   DWORD PTR [ecx+0x4]
1002b071:	mov    eax,DWORD PTR [esi+0x8]
1002b074:	jmp    0x1002b0ae
1002b076:	lea    eax,[ebp-0x20]
1002b079:	push   eax
1002b07a:	call   DWORD PTR ds:0x1006628c
1002b080:	and    DWORD PTR [ebp-0x4],0x0
1002b084:	mov    ecx,esi
1002b086:	mov    dx,0x9
1002b08a:	lea    eax,[ebp-0x20]
1002b08d:	call   0x10022583
1002b092:	mov    eax,DWORD PTR [ebp-0x18]
1002b095:	test   eax,eax
1002b097:	je     0x1002b09f
1002b099:	mov    ecx,DWORD PTR [eax]
1002b09b:	push   eax
1002b09c:	call   DWORD PTR [ecx+0x4]
1002b09f:	mov    esi,DWORD PTR [ebp-0x18]
1002b0a2:	lea    eax,[ebp-0x20]
1002b0a5:	push   eax
1002b0a6:	call   DWORD PTR ds:0x10066294
1002b0ac:	mov    eax,esi
1002b0ae:	call   0x10059bfd
1002b0b3:	ret    
1002b0b4:	mov    eax,DWORD PTR [esp+0x4]
1002b0b8:	add    eax,0x4
1002b0bb:	push   eax
1002b0bc:	call   DWORD PTR ds:0x100660a4
1002b0c2:	ret    0x4
1002b0c5:	push   esi
1002b0c6:	mov    esi,DWORD PTR [esp+0x8]
1002b0ca:	push   edi
1002b0cb:	lea    eax,[esi+0x4]
1002b0ce:	push   eax
1002b0cf:	call   DWORD PTR ds:0x100660ac
1002b0d5:	mov    edi,eax
1002b0d7:	test   edi,edi
1002b0d9:	jne    0x1002b0e2
1002b0db:	push   esi
1002b0dc:	call   0x10042f82
1002b0e1:	pop    ecx
1002b0e2:	mov    eax,edi
1002b0e4:	pop    edi
1002b0e5:	pop    esi
1002b0e6:	ret    0x4
1002b0e9:	mov    DWORD PTR [ecx],0x10071904
1002b0ef:	ret    
1002b0f0:	push   DWORD PTR [esp+0xc]
1002b0f4:	mov    edx,DWORD PTR [esp+0xc]
1002b0f8:	mov    eax,DWORD PTR [esp+0x8]
1002b0fc:	mov    ecx,DWORD PTR [eax]
1002b0fe:	inc    edx
1002b0ff:	push   edx
1002b100:	push   eax
1002b101:	call   DWORD PTR [ecx+0x28]
1002b104:	ret    0xc
1002b107:	push   0xc
1002b109:	mov    eax,0x100600b3
1002b10e:	call   0x10059b8e
1002b113:	mov    esi,ecx
1002b115:	and    DWORD PTR [ebp-0x4],0x0
1002b119:	call   DWORD PTR ds:0x1007efec
1002b11f:	cmp    DWORD PTR [esi+0x18],0x10
1002b123:	mov    ebx,eax
1002b125:	jb     0x1002b12c
1002b127:	mov    esi,DWORD PTR [esi+0x4]
1002b12a:	jmp    0x1002b12f
1002b12c:	add    esi,0x4
1002b12f:	test   esi,esi
1002b131:	je     0x1002b145
1002b133:	push   esi
1002b134:	call   DWORD PTR ds:0x100660dc
1002b13a:	mov    edi,eax
1002b13c:	inc    edi
1002b13d:	cmp    edi,0x3fffffff
1002b143:	jle    0x1002b149
1002b145:	xor    eax,eax
1002b147:	jmp    0x1002b15d
1002b149:	lea    eax,[edi+edi*1]
1002b14c:	call   0x1004b7e0
1002b151:	mov    eax,esp
1002b153:	push   ebx
1002b154:	push   edi
1002b155:	push   esi
1002b156:	mov    esi,eax
1002b158:	call   0x10006dbe
1002b15d:	push   eax
1002b15e:	lea    esi,[ebp-0x18]
1002b161:	call   0x1001b6d6
1002b166:	mov    esi,eax
1002b168:	lea    edi,[ebp-0x14]
1002b16b:	mov    BYTE PTR [ebp-0x4],0x1
1002b16f:	call   0x1002b000
1002b174:	mov    eax,edi
1002b176:	push   eax
1002b177:	mov    eax,DWORD PTR [ebp+0x8]
1002b17a:	add    eax,0x4
1002b17d:	push   eax
1002b17e:	mov    BYTE PTR [ebp-0x4],0x2
1002b182:	call   0x1002d78e
1002b187:	lea    ecx,[ebp+0xc]
1002b18a:	cmp    eax,ecx
1002b18c:	je     0x1002b196
1002b18e:	push   ecx
1002b18f:	mov    esi,eax
1002b191:	call   0x1002b02e
1002b196:	push   DWORD PTR [ebp-0x14]
1002b199:	mov    esi,DWORD PTR ds:0x100662b4
1002b19f:	call   esi
1002b1a1:	push   DWORD PTR [ebp-0x18]
1002b1a4:	call   esi
1002b1a6:	lea    eax,[ebp+0xc]
1002b1a9:	push   eax
1002b1aa:	call   DWORD PTR ds:0x10066294
1002b1b0:	lea    esp,[ebp-0x28]
1002b1b3:	call   0x10059c11
1002b1b8:	ret    0x14
1002b1bb:	push   ebp
1002b1bc:	mov    ebp,esp
1002b1be:	and    esp,0xfffffff8
1002b1c1:	push   0xffffffff
1002b1c3:	push   0x10060a52
1002b1c8:	mov    eax,fs:0x0
1002b1ce:	push   eax
1002b1cf:	sub    esp,0x30
1002b1d2:	push   ebx
1002b1d3:	push   esi
1002b1d4:	push   edi
1002b1d5:	mov    eax,ds:0x1007e030
1002b1da:	xor    eax,esp
1002b1dc:	push   eax
1002b1dd:	lea    eax,[esp+0x40]
1002b1e1:	mov    fs:0x0,eax
1002b1e7:	xor    ebx,ebx
1002b1e9:	cmp    DWORD PTR [ebp+0x1c],ebx
1002b1ec:	jne    0x1002b208
1002b1ee:	mov    eax,0x80004003
1002b1f3:	mov    ecx,DWORD PTR [esp+0x40]
1002b1f7:	mov    DWORD PTR fs:0x0,ecx
1002b1fe:	pop    ecx
1002b1ff:	pop    edi
1002b200:	pop    esi
1002b201:	pop    ebx
1002b202:	mov    esp,ebp
1002b204:	pop    ebp
1002b205:	ret    0x18
1002b208:	lea    eax,[esp+0x2c]
1002b20c:	push   eax
1002b20d:	call   DWORD PTR ds:0x1006628c
1002b213:	mov    DWORD PTR [esp+0x48],ebx
1002b217:	cmp    WORD PTR [ebp+0xc],0x8
1002b21c:	mov    esi,DWORD PTR ds:0x1006627c
1002b222:	je     0x1002b256
1002b224:	push   0x3
1002b226:	push   ebx
1002b227:	lea    eax,[ebp+0xc]
1002b22a:	push   eax
1002b22b:	lea    eax,[esp+0x38]
1002b22f:	push   eax
1002b230:	call   esi
1002b232:	test   eax,eax
1002b234:	jl     0x1002b256
1002b236:	push   DWORD PTR [ebp+0x1c]
1002b239:	push   DWORD PTR [esp+0x38]
1002b23d:	push   DWORD PTR [ebp+0x8]
1002b240:	call   0x1002d64f
1002b245:	mov    edi,eax
1002b247:	lea    eax,[esp+0x2c]
1002b24b:	push   eax
1002b24c:	call   DWORD PTR ds:0x10066294
1002b252:	mov    eax,edi
1002b254:	jmp    0x1002b1f3
1002b256:	push   0x8
1002b258:	push   ebx
1002b259:	lea    eax,[ebp+0xc]
1002b25c:	push   eax
1002b25d:	lea    eax,[esp+0x38]
1002b261:	push   eax
1002b262:	call   esi
1002b264:	cmp    eax,ebx
1002b266:	jl     0x1002b245
1002b268:	push   DWORD PTR [esp+0x34]
1002b26c:	lea    esi,[esp+0x18]
1002b270:	call   0x1001b6d6
1002b275:	mov    esi,eax
1002b277:	lea    edi,[esp+0x10]
1002b27b:	mov    BYTE PTR [esp+0x48],0x1
1002b280:	call   0x1002b000
1002b285:	mov    esi,DWORD PTR [ebp+0x8]
1002b288:	mov    eax,edi
1002b28a:	push   eax
1002b28b:	lea    eax,[esp+0x28]
1002b28f:	push   eax
1002b290:	add    esi,0x4
1002b293:	push   esi
1002b294:	call   0x1002d88f
1002b299:	push   DWORD PTR [esp+0x10]
1002b29d:	mov    edi,DWORD PTR ds:0x100662b4
1002b2a3:	call   edi
1002b2a5:	mov    BYTE PTR [esp+0x48],bl
1002b2a9:	push   DWORD PTR [esp+0x14]
1002b2ad:	call   edi
1002b2af:	mov    eax,DWORD PTR [esi+0x4]
1002b2b2:	mov    DWORD PTR [esp+0x14],esi
1002b2b6:	lea    edi,[esp+0x14]
1002b2ba:	lea    esi,[esp+0x24]
1002b2be:	mov    DWORD PTR [esp+0x18],eax
1002b2c2:	call   0x10009d5c
1002b2c7:	test   al,al
1002b2c9:	je     0x1002b2d5
1002b2cb:	mov    edi,0x80004005
1002b2d0:	jmp    0x1002b247
1002b2d5:	lea    esi,[esp+0x24]
1002b2d9:	call   0x1002d8f6
1002b2de:	add    eax,0x8
1002b2e1:	push   eax
1002b2e2:	lea    esi,[esp+0x18]
1002b2e6:	mov    WORD PTR [esp+0x18],bx
1002b2eb:	call   0x1002b02e
1002b2f0:	push   DWORD PTR [ebp+0x1c]
1002b2f3:	mov    BYTE PTR [esp+0x4c],0x2
1002b2f8:	mov    esi,DWORD PTR ds:0x10066294
1002b2fe:	call   esi
1002b300:	mov    edi,eax
1002b302:	cmp    edi,ebx
1002b304:	jl     0x1002b327
1002b306:	push   0x10
1002b308:	lea    eax,[esp+0x18]
1002b30c:	push   eax
1002b30d:	push   0x10
1002b30f:	push   DWORD PTR [ebp+0x1c]
1002b312:	call   0x100434b5
1002b317:	push   eax
1002b318:	call   0x10001f4b
1002b31d:	add    esp,0x14
1002b320:	mov    WORD PTR [esp+0x14],bx
1002b325:	xor    edi,edi
1002b327:	lea    eax,[esp+0x14]
1002b32b:	push   eax
1002b32c:	call   esi
1002b32e:	jmp    0x1002b247
1002b333:	mov    eax,DWORD PTR [esp+0x4]
1002b337:	push   esi
1002b338:	mov    ecx,DWORD PTR [eax]
1002b33a:	push   edi
1002b33b:	push   DWORD PTR [esp+0x20]
1002b33f:	lea    esi,[esp+0x14]
1002b343:	sub    esp,0x10
1002b346:	mov    edi,esp
1002b348:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1002b349:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1002b34a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1002b34b:	push   eax
1002b34c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1002b34d:	call   DWORD PTR [ecx+0x30]
1002b350:	pop    edi
1002b351:	pop    esi
1002b352:	ret    0x18
1002b355:	push   ebp
1002b356:	mov    ebp,esp
1002b358:	and    esp,0xfffffff8
1002b35b:	sub    esp,0x14
1002b35e:	cmp    DWORD PTR [ebp+0x10],0x0
1002b362:	push   ebx
1002b363:	push   esi
1002b364:	push   edi
1002b365:	jne    0x1002b371
1002b367:	mov    eax,0x80004003
1002b36c:	jmp    0x1002b412
1002b371:	cmp    DWORD PTR [ebp+0xc],0x1
1002b375:	jge    0x1002b381
1002b377:	mov    eax,0x80070057
1002b37c:	jmp    0x1002b412
1002b381:	mov    ebx,DWORD PTR [ebp+0x8]
1002b384:	dec    DWORD PTR [ebp+0xc]
1002b387:	mov    eax,DWORD PTR [ebx+0x8]
1002b38a:	mov    eax,DWORD PTR [eax]
1002b38c:	add    ebx,0x4
1002b38f:	mov    DWORD PTR [esp+0xc],0x80004005
1002b397:	mov    DWORD PTR [esp+0x10],ebx
1002b39b:	mov    DWORD PTR [esp+0x14],eax
1002b39f:	mov    DWORD PTR [esp+0x18],ebx
1002b3a3:	mov    eax,DWORD PTR [ebx+0x4]
1002b3a6:	lea    edi,[esp+0x18]
1002b3aa:	lea    esi,[esp+0x10]
1002b3ae:	mov    DWORD PTR [esp+0x1c],eax
1002b3b2:	call   0x10009d5c
1002b3b7:	test   al,al
1002b3b9:	jne    0x1002b3cb
1002b3bb:	cmp    DWORD PTR [ebp+0xc],0x0
1002b3bf:	jle    0x1002b3cb
1002b3c1:	call   0x1002de75
1002b3c6:	dec    DWORD PTR [ebp+0xc]
1002b3c9:	jmp    0x1002b3a3
1002b3cb:	mov    eax,DWORD PTR [ebx+0x4]
1002b3ce:	lea    edi,[esp+0x18]
1002b3d2:	lea    esi,[esp+0x10]
1002b3d6:	mov    DWORD PTR [esp+0x1c],eax
1002b3da:	mov    DWORD PTR [esp+0x18],ebx
1002b3de:	call   0x10009d5c
1002b3e3:	test   al,al
1002b3e5:	jne    0x1002b40e
1002b3e7:	call   0x1002d8f6
1002b3ec:	mov    esi,eax
1002b3ee:	mov    eax,DWORD PTR [esi]
1002b3f0:	test   eax,eax
1002b3f2:	je     0x1002b404
1002b3f4:	push   eax
1002b3f5:	call   DWORD PTR ds:0x100662a0
1002b3fb:	push   eax
1002b3fc:	push   DWORD PTR [esi]
1002b3fe:	call   DWORD PTR ds:0x100662a8
1002b404:	mov    ecx,DWORD PTR [ebp+0x10]
1002b407:	and    DWORD PTR [esp+0xc],0x0
1002b40c:	mov    DWORD PTR [ecx],eax
1002b40e:	mov    eax,DWORD PTR [esp+0xc]
1002b412:	pop    edi
1002b413:	pop    esi
1002b414:	pop    ebx
1002b415:	mov    esp,ebp
1002b417:	pop    ebp
1002b418:	ret    0xc
1002b41b:	push   DWORD PTR [eax]
1002b41d:	call   DWORD PTR ds:0x100662b4
1002b423:	ret    
1002b424:	mov    eax,DWORD PTR [esi]
1002b426:	test   eax,eax
1002b428:	je     0x1002b437
1002b42a:	push   DWORD PTR [esi+0x4]
1002b42d:	push   eax
1002b42e:	call   DWORD PTR ds:0x1006616c
1002b434:	and    DWORD PTR [esi],0x0
1002b437:	ret    
1002b438:	push   ebp
1002b439:	sub    esp,0xc4
1002b43f:	lea    ebp,[esp-0x4]
1002b443:	mov    eax,ds:0x1007e030
1002b448:	xor    eax,ebp
1002b44a:	mov    DWORD PTR [ebp+0xc4],eax
1002b450:	push   0x184
1002b455:	mov    eax,0x10064bc8
1002b45a:	call   0x10059b58
1002b45f:	mov    eax,DWORD PTR [ebp+0xd0]
1002b465:	mov    ebx,ecx
1002b467:	xor    edi,edi
1002b469:	mov    DWORD PTR [ebp-0x14],ebx
1002b46c:	mov    DWORD PTR [ebp-0x34],eax
1002b46f:	mov    DWORD PTR [ebp-0x68],edi
1002b472:	call   0x1000206e
1002b477:	mov    ecx,0x10080a74
1002b47c:	lea    esi,[ebp-0x18]
1002b47f:	mov    DWORD PTR [ebp-0x1c],edi
1002b482:	call   0x10002149
1002b487:	lea    eax,[ebp-0x64]
1002b48a:	mov    DWORD PTR [ebp-0x4],edi
1002b48d:	push   eax
1002b48e:	mov    BYTE PTR [ebp-0x4],0x1
1002b492:	call   0x1002eb05
1002b497:	test   eax,eax
1002b499:	jge    0x1002b4b2
1002b49b:	push   ebx
1002b49c:	lea    edi,[ebp-0x1c]
1002b49f:	call   0x1002bd7a
1002b4a4:	mov    esi,edi
1002b4a6:	call   0x1002bd62
1002b4ab:	mov    eax,ebx
1002b4ad:	jmp    0x1002b8da
1002b4b2:	call   0x1000206e
1002b4b7:	mov    eax,DWORD PTR [ebp-0x64]
1002b4ba:	cmp    eax,edi
1002b4bc:	mov    DWORD PTR [ebp-0x20],eax
1002b4bf:	je     0x1002b4c7
1002b4c1:	mov    ecx,DWORD PTR [eax]
1002b4c3:	push   eax
1002b4c4:	call   DWORD PTR [ecx+0x4]
1002b4c7:	lea    ecx,[ebp+0xa8]
1002b4cd:	mov    BYTE PTR [ebp-0x4],0x2
1002b4d1:	call   0x100185fb
1002b4d6:	cmp    BYTE PTR [ebp+0xd4],0x0
1002b4dd:	mov    ecx,0x10072ba0
1002b4e2:	jne    0x1002b4e9
1002b4e4:	mov    ecx,0x10072ba8
1002b4e9:	cmp    DWORD PTR [ebp+0xc0],0x10
1002b4f0:	mov    eax,DWORD PTR [ebp+0xac]
1002b4f6:	jae    0x1002b4fe
1002b4f8:	lea    eax,[ebp+0xac]
1002b4fe:	push   eax
1002b4ff:	push   ecx
1002b500:	call   0x1000206e
1002b505:	pop    ecx
1002b506:	pop    ecx
1002b507:	push   edi
1002b508:	lea    ecx,[ebp+0x8c]
1002b50e:	mov    DWORD PTR [ebp+0xa4],0xf
1002b518:	call   0x10001417
1002b51d:	lea    edi,[ebp-0x74]
1002b520:	mov    ecx,0x10080ed8
1002b525:	mov    BYTE PTR [ebp-0x4],0x4
1002b529:	call   0x10019660
1002b52e:	mov    BYTE PTR [ebp-0x4],0x5
1002b532:	mov    eax,DWORD PTR [ebp-0x70]
1002b535:	mov    edi,DWORD PTR [eax]
1002b537:	lea    ebx,[ebp-0x74]
1002b53a:	mov    DWORD PTR [ebp-0x2c],edi
1002b53d:	mov    DWORD PTR [ebp-0x30],ebx
1002b540:	test   ebx,ebx
1002b542:	mov    esi,DWORD PTR [ebp-0x70]
1002b545:	je     0x1002b54e
1002b547:	lea    eax,[ebp-0x74]
1002b54a:	cmp    ebx,eax
1002b54c:	je     0x1002b553
1002b54e:	call   0x100434a0
1002b553:	cmp    edi,esi
1002b555:	je     0x1002b637
1002b55b:	push   0x10072bb0
1002b560:	lea    eax,[ebp+0x8c]
1002b566:	push   eax
1002b567:	call   0x10004107
1002b56c:	test   ebx,ebx
1002b56e:	jne    0x1002b575
1002b570:	call   0x100434a0
1002b575:	cmp    edi,DWORD PTR [ebx+0x4]
1002b578:	jne    0x1002b57f
1002b57a:	call   0x100434a0
1002b57f:	lea    eax,[edi+0x8]
1002b582:	push   eax
1002b583:	lea    esi,[ebp-0xb0]
1002b589:	mov    DWORD PTR [ebp-0x24],eax
1002b58c:	call   0x10030470
1002b591:	pop    ecx
1002b592:	mov    edx,eax
1002b594:	lea    ecx,[ebp+0x70]
1002b597:	mov    BYTE PTR [ebp-0x4],0x6
1002b59b:	call   0x10033d80
1002b5a0:	push   0x0
1002b5a2:	push   0x1
1002b5a4:	mov    ecx,esi
1002b5a6:	mov    BYTE PTR [ebp-0x4],0x8
1002b5aa:	call   0x100012eb
1002b5af:	push   0x1006cd08
1002b5b4:	lea    esi,[ebp+0x70]
1002b5b7:	call   0x10006639
1002b5bc:	test   al,al
1002b5be:	pop    ecx
1002b5bf:	jne    0x1002b5d3
1002b5c1:	mov    eax,esi
1002b5c3:	push   eax
1002b5c4:	lea    ecx,[ebp+0x54]
1002b5c7:	call   0x10031060
1002b5cc:	pop    ecx
1002b5cd:	mov    BYTE PTR [ebp-0x4],0x9
1002b5d1:	jmp    0x1002b5ed
1002b5d3:	cmp    edi,DWORD PTR [ebx+0x4]
1002b5d6:	jne    0x1002b5dd
1002b5d8:	call   0x100434a0
1002b5dd:	push   DWORD PTR [ebp-0x24]
1002b5e0:	lea    ecx,[ebp+0x54]
1002b5e3:	call   0x10031060
1002b5e8:	pop    ecx
1002b5e9:	mov    BYTE PTR [ebp-0x4],0xa
1002b5ed:	cmp    DWORD PTR [eax+0x18],0x10
1002b5f1:	jb     0x1002b5f8
1002b5f3:	mov    eax,DWORD PTR [eax+0x4]
1002b5f6:	jmp    0x1002b5fb
1002b5f8:	add    eax,0x4
1002b5fb:	push   eax
1002b5fc:	lea    eax,[ebp+0x8c]
1002b602:	push   eax
1002b603:	call   0x10004107
1002b608:	push   0x0
1002b60a:	push   0x1
1002b60c:	lea    ecx,[ebp+0x54]
1002b60f:	call   0x100012eb
1002b614:	push   0x0
1002b616:	push   0x1
1002b618:	lea    ecx,[ebp+0x70]
1002b61b:	mov    BYTE PTR [ebp-0x4],0x5
1002b61f:	call   0x100012eb
1002b624:	lea    esi,[ebp-0x30]
1002b627:	call   0x100268f0
1002b62c:	mov    edi,DWORD PTR [ebp-0x2c]
1002b62f:	mov    ebx,DWORD PTR [ebp-0x30]
1002b632:	jmp    0x1002b540
1002b637:	push   0x1f4
1002b63c:	push   DWORD PTR ds:0x10080ee4
1002b642:	call   DWORD PTR ds:0x10066084
1002b648:	test   eax,eax
1002b64a:	jne    0x1002b662
1002b64c:	mov    esi,0x10080ed8
1002b651:	call   0x10019771
1002b656:	push   DWORD PTR ds:0x10080ee4
1002b65c:	call   DWORD PTR ds:0x10066094
1002b662:	lea    esi,[ebp-0x74]
1002b665:	mov    BYTE PTR [ebp-0x4],0x4
1002b669:	call   0x10019771
1002b66e:	push   DWORD PTR [ebp-0x70]
1002b671:	call   0x10042f82
1002b676:	pop    ecx
1002b677:	call   DWORD PTR ds:0x1007efec
1002b67d:	mov    eax,DWORD PTR [ebp-0x34]
1002b680:	mov    eax,DWORD PTR [eax]
1002b682:	sub    eax,0x10
1002b685:	call   0x10004e1f
1002b68a:	add    eax,0x10
1002b68d:	mov    DWORD PTR [ebp-0x28],eax
1002b690:	cmp    BYTE PTR [ebp+0xd4],0x0
1002b697:	mov    BYTE PTR [ebp-0x4],0xb
1002b69b:	mov    ebx,0x1006cce8
1002b6a0:	jne    0x1002b6a7
1002b6a2:	mov    ebx,0x1006cd0c
1002b6a7:	push   DWORD PTR ds:0x10080d90
1002b6ad:	lea    ecx,[ebp-0xb0]
1002b6b3:	call   0x100011c8
1002b6b8:	lea    ecx,[ebp-0x28]
1002b6bb:	lea    edi,[ebp-0x120]
1002b6c1:	mov    BYTE PTR [ebp-0x4],0xc
1002b6c5:	call   0x100307a0
1002b6ca:	mov    esi,eax
1002b6cc:	push   0x45113b90
1002b6d1:	push   0x10072bf4
1002b6d6:	mov    BYTE PTR [ebp-0x4],0xd
1002b6da:	call   0x100042bd
1002b6df:	pop    ecx
1002b6e0:	pop    ecx
1002b6e1:	push   0x2825c1aa
1002b6e6:	push   eax
1002b6e7:	call   0x100042bd
1002b6ec:	pop    ecx
1002b6ed:	pop    ecx
1002b6ee:	push   eax
1002b6ef:	push   0x2
1002b6f1:	push   0x10072c20
1002b6f6:	call   0x100042cf
1002b6fb:	add    esp,0xc
1002b6fe:	push   eax
1002b6ff:	lea    ecx,[ebp-0x104]
1002b705:	call   0x100011c8
1002b70a:	push   esi
1002b70b:	push   eax
1002b70c:	lea    eax,[ebp-0x13c]
1002b712:	push   eax
1002b713:	mov    BYTE PTR [ebp-0x4],0xe
1002b717:	call   0x10006581
1002b71c:	add    esp,0xc
1002b71f:	mov    esi,eax
1002b721:	push   0x7a06fbee
1002b726:	push   0x10072bb8
1002b72b:	mov    BYTE PTR [ebp-0x4],0xf
1002b72f:	call   0x100042bd
1002b734:	pop    ecx
1002b735:	pop    ecx
1002b736:	push   0x44ad706
1002b73b:	push   eax
1002b73c:	call   0x100042bd
1002b741:	pop    ecx
1002b742:	pop    ecx
1002b743:	push   0x5e608ed2
1002b748:	push   eax
1002b749:	call   0x100042bd
1002b74e:	pop    ecx
1002b74f:	pop    ecx
1002b750:	push   eax
1002b751:	push   0x4
1002b753:	push   0x10072bec
1002b758:	call   0x100042cf
1002b75d:	add    esp,0xc
1002b760:	push   eax
1002b761:	lea    eax,[ebp-0x174]
1002b767:	push   esi
1002b768:	push   eax
1002b769:	call   0x1000653b
1002b76e:	add    esp,0xc
1002b771:	push   ebx
1002b772:	push   eax
1002b773:	lea    eax,[ebp-0xe8]
1002b779:	push   eax
1002b77a:	mov    BYTE PTR [ebp-0x4],0x10
1002b77e:	call   0x1000653b
1002b783:	add    esp,0xc
1002b786:	mov    BYTE PTR [ebp-0x4],0x11
1002b78a:	cmp    DWORD PTR [ebp+0xa4],0x10
1002b791:	mov    ecx,DWORD PTR [ebp+0x90]
1002b797:	jae    0x1002b79f
1002b799:	lea    ecx,[ebp+0x90]
1002b79f:	push   ecx
1002b7a0:	push   eax
1002b7a1:	lea    eax,[ebp-0x190]
1002b7a7:	push   eax
1002b7a8:	call   0x1000653b
1002b7ad:	add    esp,0xc
1002b7b0:	push   DWORD PTR [ebp+0xd8]
1002b7b6:	lea    ecx,[ebp-0x24]
1002b7b9:	push   ecx
1002b7ba:	push   eax
1002b7bb:	lea    eax,[ebp+0xa8]
1002b7c1:	push   eax
1002b7c2:	lea    eax,[ebp-0x84]
1002b7c8:	push   eax
1002b7c9:	lea    edx,[ebp-0xb0]
1002b7cf:	mov    BYTE PTR [ebp-0x4],0x12
1002b7d3:	call   0x10030f40
1002b7d8:	mov    ecx,DWORD PTR [eax]
1002b7da:	mov    esi,ecx
1002b7dc:	xor    ebx,ebx
1002b7de:	add    esp,0x14
1002b7e1:	mov    DWORD PTR [eax],ebx
1002b7e3:	mov    DWORD PTR [ebp-0x54],esi
1002b7e6:	push   DWORD PTR [ebp-0x84]
1002b7ec:	call   0x10042f82
1002b7f1:	pop    ecx
1002b7f2:	xor    edi,edi
1002b7f4:	push   ebx
1002b7f5:	inc    edi
1002b7f6:	push   edi
1002b7f7:	lea    ecx,[ebp-0x190]
1002b7fd:	call   0x100012eb
1002b802:	push   ebx
1002b803:	push   edi
1002b804:	lea    ecx,[ebp-0xe8]
1002b80a:	call   0x100012eb
1002b80f:	push   ebx
1002b810:	push   edi
1002b811:	lea    ecx,[ebp-0x174]
1002b817:	call   0x100012eb
1002b81c:	push   ebx
1002b81d:	push   edi
1002b81e:	lea    ecx,[ebp-0x13c]
1002b824:	call   0x100012eb
1002b829:	push   ebx
1002b82a:	push   edi
1002b82b:	lea    ecx,[ebp-0x104]
1002b831:	call   0x100012eb
1002b836:	push   ebx
1002b837:	push   edi
1002b838:	lea    ecx,[ebp-0x120]
1002b83e:	call   0x100012eb
1002b843:	push   ebx
1002b844:	push   edi
1002b845:	lea    ecx,[ebp-0xb0]
1002b84b:	mov    BYTE PTR [ebp-0x4],0x1a
1002b84f:	call   0x100012eb
1002b854:	cmp    esi,ebx
1002b856:	jne    0x1002b8fd
1002b85c:	call   0x1001857a
1002b861:	cmp    DWORD PTR [ebp+0xc0],0x10
1002b868:	mov    eax,DWORD PTR [ebp+0xac]
1002b86e:	jae    0x1002b876
1002b870:	lea    eax,[ebp+0xac]
1002b876:	push   eax
1002b877:	call   0x1000206e
1002b87c:	push   0x5
1002b87e:	call   0x100379e0
1002b883:	pop    ecx
1002b884:	pop    ecx
1002b885:	push   DWORD PTR [ebp-0x14]
1002b888:	lea    edi,[ebp-0x1c]
1002b88b:	call   0x1002bd7a
1002b890:	push   ebx
1002b891:	call   0x10042f82
1002b896:	mov    eax,DWORD PTR [ebp-0x28]
1002b899:	pop    ecx
1002b89a:	add    eax,0xfffffff0
1002b89d:	call   0x1000206f
1002b8a2:	push   ebx
1002b8a3:	push   0x1
1002b8a5:	lea    ecx,[ebp+0x8c]
1002b8ab:	call   0x100012eb
1002b8b0:	push   ebx
1002b8b1:	push   0x1
1002b8b3:	lea    ecx,[ebp+0xa8]
1002b8b9:	call   0x100012eb
1002b8be:	mov    BYTE PTR [ebp-0x4],0x1
1002b8c2:	mov    eax,DWORD PTR [ebp-0x20]
1002b8c5:	cmp    eax,ebx
1002b8c7:	je     0x1002b8cf
1002b8c9:	mov    ecx,DWORD PTR [eax]
1002b8cb:	push   eax
1002b8cc:	call   DWORD PTR [ecx+0x8]
1002b8cf:	lea    esi,[ebp-0x1c]
1002b8d2:	call   0x1002bd62
1002b8d7:	mov    eax,DWORD PTR [ebp-0x14]
1002b8da:	mov    ecx,DWORD PTR [ebp-0xc]
1002b8dd:	mov    DWORD PTR fs:0x0,ecx
1002b8e4:	pop    ecx
1002b8e5:	pop    edi
1002b8e6:	pop    esi
1002b8e7:	pop    ebx
1002b8e8:	mov    ecx,DWORD PTR [ebp+0xc4]
1002b8ee:	xor    ecx,ebp
1002b8f0:	call   0x10042f87
1002b8f5:	add    ebp,0xc8
1002b8fb:	leave  
1002b8fc:	ret    
1002b8fd:	mov    eax,DWORD PTR [ebp-0x24]
1002b900:	mov    DWORD PTR [ebp-0x3c],eax
1002b903:	lea    eax,[ebp-0x40]
1002b906:	push   eax
1002b907:	mov    DWORD PTR [ebp-0x40],ebx
1002b90a:	mov    DWORD PTR [ebp-0x38],esi
1002b90d:	call   0x10037840
1002b912:	mov    DWORD PTR [ebp-0x80],eax
1002b915:	mov    DWORD PTR [ebp-0x58],ebx
1002b918:	mov    eax,DWORD PTR [ebp-0x58]
1002b91b:	cmp    eax,DWORD PTR [ebp-0x80]
1002b91e:	je     0x1002bcc4
1002b924:	lea    eax,[ebp-0x40]
1002b927:	push   eax
1002b928:	lea    esi,[ebp+0x70]
1002b92b:	call   0x10037500
1002b930:	lea    eax,[ebp-0x40]
1002b933:	push   eax
1002b934:	mov    BYTE PTR [ebp-0x4],0x1b
1002b938:	call   0x10037840
1002b93d:	mov    DWORD PTR [ebp-0x7c],eax
1002b940:	lea    eax,[ebp-0x34]
1002b943:	push   eax
1002b944:	call   0x1002ea85
1002b949:	test   eax,eax
1002b94b:	jge    0x1002b96a
1002b94d:	push   DWORD PTR [ebp-0x14]
1002b950:	lea    edi,[ebp-0x1c]
1002b953:	call   0x1002bd7a
1002b958:	push   ebx
1002b959:	push   0x1
1002b95b:	mov    ecx,esi
1002b95d:	call   0x100012eb
1002b962:	push   DWORD PTR [ebp-0x54]
1002b965:	jmp    0x1002b891
1002b96a:	mov    esi,DWORD PTR [ebp-0x34]
1002b96d:	cmp    esi,ebx
1002b96f:	mov    DWORD PTR [ebp-0x24],esi
1002b972:	je     0x1002b97a
1002b974:	mov    eax,DWORD PTR [esi]
1002b976:	push   esi
1002b977:	call   DWORD PTR [eax+0x4]
1002b97a:	mov    BYTE PTR [ebp-0x4],0x1c
1002b97e:	mov    DWORD PTR [ebp-0x50],ebx
1002b981:	mov    eax,DWORD PTR [ebp-0x50]
1002b984:	cmp    eax,DWORD PTR [ebp-0x7c]
1002b987:	jge    0x1002bc7b
1002b98d:	lea    eax,[ebp-0x40]
1002b990:	push   eax
1002b991:	lea    esi,[ebp-0x158]
1002b997:	call   0x10037500
1002b99c:	lea    ecx,[ebp-0x5c]
1002b99f:	push   ecx
1002b9a0:	mov    ebx,eax
1002b9a2:	mov    BYTE PTR [ebp-0x4],0x1d
1002b9a6:	call   0x10034240
1002b9ab:	pop    ecx
1002b9ac:	push   0x0
1002b9ae:	push   0x1
1002b9b0:	mov    ecx,esi
1002b9b2:	mov    BYTE PTR [ebp-0x4],0x1f
1002b9b6:	call   0x100012eb
1002b9bb:	lea    eax,[ebp-0x40]
1002b9be:	push   eax
1002b9bf:	lea    esi,[ebp-0xcc]
1002b9c5:	call   0x10037500
1002b9ca:	lea    ecx,[ebp-0x48]
1002b9cd:	push   ecx
1002b9ce:	mov    ebx,eax
1002b9d0:	mov    BYTE PTR [ebp-0x4],0x20
1002b9d4:	call   0x10034240
1002b9d9:	pop    ecx
1002b9da:	push   0x0
1002b9dc:	push   0x1
1002b9de:	mov    ecx,esi
1002b9e0:	mov    BYTE PTR [ebp-0x4],0x22
1002b9e4:	call   0x100012eb
1002b9e9:	lea    eax,[ebp-0x40]
1002b9ec:	push   eax
1002b9ed:	lea    esi,[ebp+0x1c]
1002b9f0:	call   0x10037500
1002b9f5:	mov    edx,esi
1002b9f7:	lea    esi,[ebp+0x54]
1002b9fa:	mov    BYTE PTR [ebp-0x4],0x23
1002b9fe:	call   0x10033920
1002ba03:	lea    eax,[ebp-0x60]
1002ba06:	push   eax
1002ba07:	mov    ebx,esi
1002ba09:	mov    BYTE PTR [ebp-0x4],0x24
1002ba0d:	call   0x10034240
1002ba12:	pop    ecx
1002ba13:	lea    eax,[ebp-0x40]
1002ba16:	push   eax
1002ba17:	lea    esi,[ebp-0xcc]
1002ba1d:	mov    BYTE PTR [ebp-0x4],0x25
1002ba21:	call   0x10037500
1002ba26:	lea    ecx,[ebp-0x44]
1002ba29:	push   ecx
1002ba2a:	mov    ebx,eax
1002ba2c:	mov    BYTE PTR [ebp-0x4],0x26
1002ba30:	call   0x10034240
1002ba35:	pop    ecx
1002ba36:	push   0x0
1002ba38:	push   0x1
1002ba3a:	mov    ecx,esi
1002ba3c:	mov    BYTE PTR [ebp-0x4],0x28
1002ba40:	call   0x100012eb
1002ba45:	lea    eax,[ebp-0x40]
1002ba48:	push   eax
1002ba49:	lea    esi,[ebp+0x0]
1002ba4c:	call   0x10037500
1002ba51:	lea    eax,[ebp-0x4c]
1002ba54:	mov    BYTE PTR [ebp-0x4],0x29
1002ba58:	push   eax
1002ba59:	mov    ebx,esi
1002ba5b:	call   0x10034240
1002ba60:	pop    ecx
1002ba61:	lea    eax,[ebp-0x40]
1002ba64:	push   eax
1002ba65:	lea    esi,[ebp+0x38]
1002ba68:	mov    BYTE PTR [ebp-0x4],0x2a
1002ba6c:	call   0x10037500
1002ba71:	mov    BYTE PTR [ebp-0x4],0x2b
1002ba75:	cmp    DWORD PTR [ebp+0x50],0x10
1002ba79:	mov    eax,DWORD PTR [ebp+0x3c]
1002ba7c:	jae    0x1002ba81
1002ba7e:	lea    eax,[ebp+0x3c]
1002ba81:	push   eax
1002ba82:	call   0x10045da5
1002ba87:	mov    DWORD PTR [ebp-0x2c],eax
1002ba8a:	sar    eax,0x6
1002ba8d:	pop    ecx
1002ba8e:	and    eax,0x3
1002ba91:	push   eax
1002ba92:	lea    eax,[ebp+0x1c]
1002ba95:	push   eax
1002ba96:	lea    ebx,[ebp+0x0]
1002ba99:	mov    edi,0x10080ee8
1002ba9e:	call   0x10019a41
1002baa3:	lea    eax,[ebp-0x68]
1002baa6:	push   eax
1002baa7:	call   0x1002e9ff
1002baac:	test   eax,eax
1002baae:	jge    0x1002bb6a
1002bab4:	push   DWORD PTR [ebp-0x14]
1002bab7:	lea    edi,[ebp-0x1c]
1002baba:	call   0x1002bd7a
1002babf:	xor    esi,esi
1002bac1:	xor    ebx,ebx
1002bac3:	push   esi
1002bac4:	inc    ebx
1002bac5:	push   ebx
1002bac6:	lea    ecx,[ebp+0x38]
1002bac9:	call   0x100012eb
1002bace:	lea    edi,[ebp-0x4c]
1002bad1:	call   0x100025b0
1002bad6:	push   esi
1002bad7:	push   ebx
1002bad8:	lea    ecx,[ebp+0x0]
1002badb:	call   0x100012eb
1002bae0:	lea    edi,[ebp-0x44]
1002bae3:	call   0x100025b0
1002bae8:	lea    edi,[ebp-0x60]
1002baeb:	call   0x100025b0
1002baf0:	push   esi
1002baf1:	push   ebx
1002baf2:	lea    ecx,[ebp+0x54]
1002baf5:	call   0x100012eb
1002bafa:	push   esi
1002bafb:	push   ebx
1002bafc:	lea    ecx,[ebp+0x1c]
1002baff:	call   0x100012eb
1002bb04:	lea    edi,[ebp-0x48]
1002bb07:	call   0x100025b0
1002bb0c:	lea    edi,[ebp-0x5c]
1002bb0f:	call   0x100025b0
1002bb14:	mov    BYTE PTR [ebp-0x4],0x1b
1002bb18:	mov    eax,DWORD PTR [ebp-0x24]
1002bb1b:	cmp    eax,esi
1002bb1d:	je     0x1002bb25
1002bb1f:	mov    ecx,DWORD PTR [eax]
1002bb21:	push   eax
1002bb22:	call   DWORD PTR [ecx+0x8]
1002bb25:	push   esi
1002bb26:	push   ebx
1002bb27:	lea    ecx,[ebp+0x70]
1002bb2a:	call   0x100012eb
1002bb2f:	push   DWORD PTR [ebp-0x54]
1002bb32:	call   0x10042f82
1002bb37:	mov    eax,DWORD PTR [ebp-0x28]
1002bb3a:	pop    ecx
1002bb3b:	add    eax,0xfffffff0
1002bb3e:	call   0x1000206f
1002bb43:	push   esi
1002bb44:	push   ebx
1002bb45:	lea    ecx,[ebp+0x8c]
1002bb4b:	call   0x100012eb
1002bb50:	push   esi
1002bb51:	push   ebx
1002bb52:	lea    ecx,[ebp+0xa8]
1002bb58:	call   0x100012eb
1002bb5d:	mov    BYTE PTR [ebp-0x4],bl
1002bb60:	mov    eax,DWORD PTR [ebp-0x20]
1002bb63:	cmp    eax,esi
1002bb65:	jmp    0x1002b8c7
1002bb6a:	mov    edi,DWORD PTR [ebp-0x68]
1002bb6d:	lea    eax,[edi+0x8]
1002bb70:	lea    esi,[ebp-0x5c]
1002bb73:	call   0x10010f19
1002bb78:	lea    eax,[edi+0xc]
1002bb7b:	lea    esi,[ebp-0x48]
1002bb7e:	call   0x10010f19
1002bb83:	lea    eax,[edi+0x10]
1002bb86:	lea    esi,[ebp-0x60]
1002bb89:	call   0x10010f19
1002bb8e:	lea    eax,[edi+0x14]
1002bb91:	lea    esi,[ebp-0x44]
1002bb94:	call   0x10010f19
1002bb99:	lea    eax,[edi+0x18]
1002bb9c:	lea    esi,[ebp-0x4c]
1002bb9f:	call   0x10010f19
1002bba4:	mov    eax,DWORD PTR [ebp-0x2c]
1002bba7:	mov    DWORD PTR [edi+0x1c],eax
1002bbaa:	mov    eax,DWORD PTR [edi]
1002bbac:	push   edi
1002bbad:	mov    DWORD PTR [ebp-0x2c],edi
1002bbb0:	call   DWORD PTR [eax+0x4]
1002bbb3:	mov    BYTE PTR [ebp-0x4],0x2c
1002bbb7:	mov    WORD PTR [ebp-0x94],0x9
1002bbc0:	mov    DWORD PTR [ebp-0x8c],edi
1002bbc6:	mov    eax,DWORD PTR [edi]
1002bbc8:	push   edi
1002bbc9:	call   DWORD PTR [eax+0x4]
1002bbcc:	lea    eax,[ebp-0x94]
1002bbd2:	mov    BYTE PTR [ebp-0x4],0x2d
1002bbd6:	xor    ebx,ebx
1002bbd8:	push   eax
1002bbd9:	lea    esi,[ebp-0x78]
1002bbdc:	mov    WORD PTR [ebp-0x78],bx
1002bbe0:	call   0x1002b02e
1002bbe5:	mov    eax,esi
1002bbe7:	mov    BYTE PTR [ebp-0x4],0x2e
1002bbeb:	mov    esi,DWORD PTR [ebp-0x34]
1002bbee:	push   eax
1002bbef:	add    esi,0x4
1002bbf2:	call   0x1002d51c
1002bbf7:	mov    esi,DWORD PTR ds:0x10066294
1002bbfd:	lea    eax,[ebp-0x78]
1002bc00:	push   eax
1002bc01:	call   esi
1002bc03:	lea    eax,[ebp-0x94]
1002bc09:	push   eax
1002bc0a:	call   esi
1002bc0c:	mov    BYTE PTR [ebp-0x4],0x2b
1002bc10:	mov    eax,DWORD PTR [edi]
1002bc12:	push   edi
1002bc13:	call   DWORD PTR [eax+0x8]
1002bc16:	xor    esi,esi
1002bc18:	push   ebx
1002bc19:	inc    esi
1002bc1a:	push   esi
1002bc1b:	lea    ecx,[ebp+0x38]
1002bc1e:	call   0x100012eb
1002bc23:	lea    edi,[ebp-0x4c]
1002bc26:	call   0x100025b0
1002bc2b:	push   ebx
1002bc2c:	push   esi
1002bc2d:	lea    ecx,[ebp+0x0]
1002bc30:	call   0x100012eb
1002bc35:	lea    edi,[ebp-0x44]
1002bc38:	call   0x100025b0
1002bc3d:	lea    edi,[ebp-0x60]
1002bc40:	call   0x100025b0
1002bc45:	push   ebx
1002bc46:	push   esi
1002bc47:	lea    ecx,[ebp+0x54]
1002bc4a:	call   0x100012eb
1002bc4f:	push   ebx
1002bc50:	push   esi
1002bc51:	lea    ecx,[ebp+0x1c]
1002bc54:	call   0x100012eb
1002bc59:	lea    edi,[ebp-0x48]
1002bc5c:	call   0x100025b0
1002bc61:	lea    edi,[ebp-0x5c]
1002bc64:	mov    BYTE PTR [ebp-0x4],0x1c
1002bc68:	call   0x100025b0
1002bc6d:	inc    DWORD PTR [ebp-0x50]
1002bc70:	mov    esi,DWORD PTR [ebp-0x24]
1002bc73:	xor    edi,edi
1002bc75:	inc    edi
1002bc76:	jmp    0x1002b981
1002bc7b:	sub    esp,0x10
1002bc7e:	cmp    esi,ebx
1002bc80:	mov    eax,esp
1002bc82:	mov    DWORD PTR [ebp-0x2c],esp
1002bc85:	mov    WORD PTR [eax],0x9
1002bc8a:	mov    DWORD PTR [eax+0x8],esi
1002bc8d:	je     0x1002bc95
1002bc8f:	mov    eax,DWORD PTR [esi]
1002bc91:	push   esi
1002bc92:	call   DWORD PTR [eax+0x4]
1002bc95:	push   DWORD PTR [ebp-0x64]
1002bc98:	lea    ecx,[ebp+0x70]
1002bc9b:	call   0x1002b107
1002bca0:	cmp    esi,ebx
1002bca2:	mov    BYTE PTR [ebp-0x4],0x1b
1002bca6:	je     0x1002bcae
1002bca8:	mov    eax,DWORD PTR [esi]
1002bcaa:	push   esi
1002bcab:	call   DWORD PTR [eax+0x8]
1002bcae:	push   ebx
1002bcaf:	push   edi
1002bcb0:	lea    ecx,[ebp+0x70]
1002bcb3:	mov    BYTE PTR [ebp-0x4],0x1a
1002bcb7:	call   0x100012eb
1002bcbc:	inc    DWORD PTR [ebp-0x58]
1002bcbf:	jmp    0x1002b918
1002bcc4:	lea    eax,[ebp-0x2c]
1002bcc7:	push   eax
1002bcc8:	lea    ecx,[ebp-0x40]
1002bccb:	call   0x100376d0
1002bcd0:	lea    edi,[ebp-0x18]
1002bcd3:	mov    BYTE PTR [ebp-0x4],0x2f
1002bcd7:	call   0x10004122
1002bcdc:	mov    BYTE PTR [ebp-0x4],0x1a
1002bce0:	mov    eax,DWORD PTR [ebp-0x2c]
1002bce3:	add    eax,0xfffffff0
1002bce6:	call   0x1000206f
1002bceb:	mov    esi,DWORD PTR [ebp-0x20]
1002bcee:	cmp    DWORD PTR [ebp-0x1c],esi
1002bcf1:	je     0x1002bcff
1002bcf3:	mov    edi,esi
1002bcf5:	lea    esi,[ebp-0x1c]
1002bcf8:	call   0x1000777b
1002bcfd:	mov    esi,edi
1002bcff:	push   DWORD PTR [ebp-0x14]
1002bd02:	lea    edi,[ebp-0x1c]
1002bd05:	call   0x1002bd7a
1002bd0a:	push   DWORD PTR [ebp-0x54]
1002bd0d:	call   0x10042f82
1002bd12:	mov    eax,DWORD PTR [ebp-0x28]
1002bd15:	pop    ecx
1002bd16:	add    eax,0xfffffff0
1002bd19:	call   0x1000206f
1002bd1e:	push   ebx
1002bd1f:	push   0x1
1002bd21:	lea    ecx,[ebp+0x8c]
1002bd27:	call   0x100012eb
1002bd2c:	push   ebx
1002bd2d:	push   0x1
1002bd2f:	lea    ecx,[ebp+0xa8]
1002bd35:	call   0x100012eb
1002bd3a:	cmp    esi,ebx
1002bd3c:	mov    BYTE PTR [ebp-0x4],0x1
1002bd40:	je     0x1002b8cf
1002bd46:	mov    eax,DWORD PTR [esi]
1002bd48:	push   esi
1002bd49:	call   DWORD PTR [eax+0x8]
1002bd4c:	jmp    0x1002b8cf
1002bd51:	push   DWORD PTR [ebp-0x14]
1002bd54:	lea    edi,[ebp-0x1c]
1002bd57:	call   0x1002bd7a
1002bd5c:	mov    eax,0x1002b8cf
1002bd61:	ret    
1002bd62:	mov    eax,DWORD PTR [esi+0x4]
1002bd65:	sub    eax,0x10
1002bd68:	call   0x1000206f
1002bd6d:	mov    eax,DWORD PTR [esi]
1002bd6f:	test   eax,eax
1002bd71:	je     0x1002bd79
1002bd73:	mov    ecx,DWORD PTR [eax]
1002bd75:	push   eax
1002bd76:	call   DWORD PTR [ecx+0x8]
1002bd79:	ret    
1002bd7a:	push   0x0
1002bd7c:	mov    eax,0x10060080
1002bd81:	call   0x10059b25
1002bd86:	mov    esi,DWORD PTR [ebp+0x8]
1002bd89:	mov    eax,DWORD PTR [edi]
1002bd8b:	test   eax,eax
1002bd8d:	mov    DWORD PTR [esi],eax
1002bd8f:	je     0x1002bd97
1002bd91:	mov    ecx,DWORD PTR [eax]
1002bd93:	push   eax
1002bd94:	call   DWORD PTR [ecx+0x4]
1002bd97:	and    DWORD PTR [ebp-0x4],0x0
1002bd9b:	mov    eax,DWORD PTR [edi+0x4]
1002bd9e:	sub    eax,0x10
1002bda1:	call   0x10004e1f
1002bda6:	add    eax,0x10
1002bda9:	mov    DWORD PTR [esi+0x4],eax
1002bdac:	mov    eax,esi
1002bdae:	call   0x10059bfd
1002bdb3:	ret    0x4
1002bdb6:	push   0x0
1002bdb8:	mov    eax,0x100619a5
1002bdbd:	call   0x10059b25
1002bdc2:	mov    ebx,DWORD PTR [ebp+0x8]
1002bdc5:	mov    eax,DWORD PTR [ebp+0xc]
1002bdc8:	mov    DWORD PTR [ebx+0x8],eax
1002bdcb:	mov    eax,DWORD PTR [ebp+0x10]
1002bdce:	mov    edi,0x10080a74
1002bdd3:	mov    DWORD PTR [ebx+0x4],0x1
1002bdda:	mov    DWORD PTR [ebx],0x10072f3c
1002bde0:	mov    DWORD PTR [ebx+0xc],eax
1002bde3:	and    DWORD PTR [ebx+0x10],0x0
1002bde7:	lea    esi,[ebx+0x14]
1002bdea:	mov    ecx,edi
1002bdec:	call   0x10002149
1002bdf1:	xor    eax,eax
1002bdf3:	mov    DWORD PTR [ebx+0x1c],eax
1002bdf6:	mov    DWORD PTR [ebp-0x4],eax
1002bdf9:	lea    esi,[ebx+0x24]
1002bdfc:	mov    ecx,edi
1002bdfe:	mov    DWORD PTR [ebx+0x20],eax
1002be01:	call   0x10002149
1002be06:	xor    edi,edi
1002be08:	mov    DWORD PTR [ebx+0x2c],edi
1002be0b:	mov    eax,DWORD PTR [ebp+0x14]
1002be0e:	mov    BYTE PTR [ebp-0x4],0x1
1002be12:	mov    eax,DWORD PTR [eax]
1002be14:	sub    eax,0x10
1002be17:	call   0x10004e1f
1002be1c:	mov    esi,DWORD PTR ds:0x10066070
1002be22:	add    eax,0x10
1002be25:	mov    DWORD PTR [ebx+0x30],eax
1002be28:	mov    BYTE PTR [ebx+0x18],0x0
1002be2c:	mov    BYTE PTR [ebx+0x28],0x0
1002be30:	mov    eax,DWORD PTR [ebx+0x1c]
1002be33:	cmp    eax,edi
1002be35:	je     0x1002be3a
1002be37:	push   eax
1002be38:	call   esi
1002be3a:	mov    DWORD PTR [ebx+0x1c],edi
1002be3d:	mov    eax,DWORD PTR [ebx+0x2c]
1002be40:	cmp    eax,edi
1002be42:	je     0x1002be47
1002be44:	push   eax
1002be45:	call   esi
1002be47:	lea    eax,[ebp+0xc]
1002be4a:	push   eax
1002be4b:	mov    DWORD PTR [ebx+0x2c],edi
1002be4e:	call   0x1002eb05
1002be53:	test   eax,eax
1002be55:	jl     0x1002be88
1002be57:	mov    edi,DWORD PTR [ebp+0xc]
1002be5a:	test   edi,edi
1002be5c:	je     0x1002be64
1002be5e:	mov    eax,DWORD PTR [edi]
1002be60:	push   edi
1002be61:	call   DWORD PTR [eax+0x4]
1002be64:	cmp    DWORD PTR [ebx+0x10],edi
1002be67:	je     0x1002be71
1002be69:	lea    esi,[ebx+0x10]
1002be6c:	call   0x1000777b
1002be71:	cmp    DWORD PTR [ebx+0x20],edi
1002be74:	je     0x1002be7e
1002be76:	lea    esi,[ebx+0x20]
1002be79:	call   0x1000777b
1002be7e:	test   edi,edi
1002be80:	je     0x1002be88
1002be82:	mov    eax,DWORD PTR [edi]
1002be84:	push   edi
1002be85:	call   DWORD PTR [eax+0x8]
1002be88:	mov    eax,ebx
1002be8a:	call   0x10059bfd
1002be8f:	ret    0x10
1002be92:	push   DWORD PTR [esp+0x8]
1002be96:	push   0x1006f538
1002be9b:	call   0x1002afe8
1002bea0:	test   eax,eax
1002bea2:	pop    ecx
1002bea3:	pop    ecx
1002bea4:	je     0x1002beb4
1002bea6:	mov    eax,DWORD PTR [esp+0x4]
1002beaa:	mov    ecx,DWORD PTR [esp+0xc]
1002beae:	mov    DWORD PTR [ecx],eax
1002beb0:	xor    eax,eax
1002beb2:	jmp    0x1002beb9
1002beb4:	mov    eax,0x80004005
1002beb9:	ret    0xc
1002bebc:	push   esi
1002bebd:	mov    esi,eax
1002bebf:	mov    eax,DWORD PTR [esi+0xc]
1002bec2:	test   eax,eax
1002bec4:	je     0x1002becd
1002bec6:	push   eax
1002bec7:	call   DWORD PTR ds:0x10066070
1002becd:	and    DWORD PTR [esi+0xc],0x0
1002bed1:	mov    eax,DWORD PTR [esi+0x4]
1002bed4:	sub    eax,0x10
1002bed7:	call   0x1000206f
1002bedc:	mov    esi,DWORD PTR [esi]
1002bede:	test   esi,esi
1002bee0:	je     0x1002bee8
1002bee2:	mov    eax,DWORD PTR [esi]
1002bee4:	push   esi
1002bee5:	call   DWORD PTR [eax+0x8]
1002bee8:	pop    esi
1002bee9:	ret    
1002beea:	push   0x10
1002beec:	mov    eax,0x10064dff
1002bef1:	call   0x10059b58
1002bef6:	call   0x1000206e
1002befb:	mov    ebx,DWORD PTR [ebp+0x8]
1002befe:	xor    esi,esi
1002bf00:	mov    DWORD PTR [ebp-0x4],esi
1002bf03:	mov    DWORD PTR [ebp-0x14],ebx
1002bf06:	call   0x1000206e
1002bf0b:	push   esi
1002bf0c:	push   esi
1002bf0d:	call   DWORD PTR ds:0x10066440
1002bf13:	push   0x2710
1002bf18:	lea    eax,[ebx+0x30]
1002bf1b:	push   esi
1002bf1c:	push   eax
1002bf1d:	lea    ecx,[ebp-0x1c]
1002bf20:	mov    BYTE PTR [ebp-0x4],0x1
1002bf24:	call   0x1002b438
1002bf29:	add    esp,0xc
1002bf2c:	mov    BYTE PTR [ebp-0x4],0x2
1002bf30:	mov    edi,DWORD PTR [ebp-0x1c]
1002bf33:	lea    esi,[ebx+0x10]
1002bf36:	cmp    DWORD PTR [esi],edi
1002bf38:	je     0x1002bf3f
1002bf3a:	call   0x1000777b
1002bf3f:	lea    edi,[ebx+0x14]
1002bf42:	lea    eax,[ebp-0x18]
1002bf45:	call   0x10004122
1002bf4a:	cmp    DWORD PTR [esi],0x0
1002bf4d:	je     0x1002bf53
1002bf4f:	mov    BYTE PTR [ebx+0x18],0x1
1002bf53:	lea    esi,[ebp-0x1c]
1002bf56:	call   0x1002bd62
1002bf5b:	jmp    0x1002bf6e
1002bf5d:	push   0x4
1002bf5f:	call   0x100379e0
1002bf64:	pop    ecx
1002bf65:	mov    eax,0x1002bf6b
1002bf6a:	ret    
1002bf6b:	mov    ebx,DWORD PTR [ebp+0x8]
1002bf6e:	call   DWORD PTR ds:0x10066424
1002bf74:	or     DWORD PTR [ebp-0x4],0xffffffff
1002bf78:	test   ebx,ebx
1002bf7a:	je     0x1002bf82
1002bf7c:	mov    eax,DWORD PTR [ebx]
1002bf7e:	push   ebx
1002bf7f:	call   DWORD PTR [eax+0x8]
1002bf82:	xor    eax,eax
1002bf84:	call   0x10059bfd
1002bf89:	ret    0x4
1002bf8c:	push   0x10
1002bf8e:	mov    eax,0x10064dd4
1002bf93:	call   0x10059b58
1002bf98:	mov    ebx,DWORD PTR [ebp+0x8]
1002bf9b:	xor    eax,eax
1002bf9d:	push   eax
1002bf9e:	mov    DWORD PTR [ebp-0x4],eax
1002bfa1:	push   eax
1002bfa2:	mov    DWORD PTR [ebp-0x14],ebx
1002bfa5:	call   DWORD PTR ds:0x10066440
1002bfab:	push   0x186a0
1002bfb0:	lea    eax,[ebx+0x30]
1002bfb3:	push   0x1
1002bfb5:	push   eax
1002bfb6:	lea    ecx,[ebp-0x1c]
1002bfb9:	mov    BYTE PTR [ebp-0x4],0x1
1002bfbd:	call   0x1002b438
1002bfc2:	add    esp,0xc
1002bfc5:	mov    BYTE PTR [ebp-0x4],0x2
1002bfc9:	mov    edi,DWORD PTR [ebp-0x1c]
1002bfcc:	lea    esi,[ebx+0x20]
1002bfcf:	cmp    DWORD PTR [esi],edi
1002bfd1:	je     0x1002bfd8
1002bfd3:	call   0x1000777b
1002bfd8:	lea    edi,[ebx+0x24]
1002bfdb:	lea    eax,[ebp-0x18]
1002bfde:	call   0x10004122
1002bfe3:	cmp    DWORD PTR [esi],0x0
1002bfe6:	je     0x1002bfec
1002bfe8:	mov    BYTE PTR [ebx+0x28],0x1
1002bfec:	lea    esi,[ebp-0x1c]
1002bfef:	call   0x1002bd62
1002bff4:	jmp    0x1002c007
1002bff6:	push   0x4
1002bff8:	call   0x100379e0
1002bffd:	pop    ecx
1002bffe:	mov    eax,0x1002c004
1002c003:	ret    
1002c004:	mov    ebx,DWORD PTR [ebp+0x8]
1002c007:	call   DWORD PTR ds:0x10066424
1002c00d:	or     DWORD PTR [ebp-0x4],0xffffffff
1002c011:	test   ebx,ebx
1002c013:	je     0x1002c01b
1002c015:	mov    eax,DWORD PTR [ebx]
1002c017:	push   ebx
1002c018:	call   DWORD PTR [eax+0x8]
1002c01b:	xor    eax,eax
1002c01d:	call   0x10059bfd
1002c022:	ret    0x4
1002c025:	push   ebp
1002c026:	mov    ebp,esp
1002c028:	and    esp,0xfffffff8
1002c02b:	push   0xffffffff
1002c02d:	push   0x100627b7
1002c032:	mov    eax,fs:0x0
1002c038:	push   eax
1002c039:	sub    esp,0x8c
1002c03f:	push   esi
1002c040:	push   edi
1002c041:	mov    eax,ds:0x1007e030
1002c046:	xor    eax,esp
1002c048:	push   eax
1002c049:	lea    eax,[esp+0x98]
1002c050:	mov    fs:0x0,eax
1002c056:	push   0x710dbcdc
1002c05b:	push   0x10072c24
1002c060:	call   0x100042bd
1002c065:	push   0x1251ca36
1002c06a:	push   eax
1002c06b:	call   0x100042bd
1002c070:	push   0x7a70308
1002c075:	push   eax
1002c076:	call   0x100042bd
1002c07b:	push   0x5676c950
1002c080:	push   eax
1002c081:	call   0x100042bd
1002c086:	push   eax
1002c087:	push   0xf
1002c089:	mov    edi,0x10072c48
1002c08e:	push   edi
1002c08f:	call   0x100042cf
1002c094:	add    esp,0x2c
1002c097:	push   eax
1002c098:	lea    ecx,[esp+0x44]
1002c09c:	call   0x100011c8
1002c0a1:	xor    esi,esi
1002c0a3:	push   esi
1002c0a4:	lea    eax,[esp+0x44]
1002c0a8:	push   eax
1002c0a9:	lea    eax,[esp+0x80]
1002c0b0:	push   eax
1002c0b1:	mov    DWORD PTR [esp+0xac],esi
1002c0b8:	mov    eax,DWORD PTR [ebx+0x4]
1002c0bb:	add    eax,0x18
1002c0be:	call   0x10008602
1002c0c3:	push   eax
1002c0c4:	lea    eax,[esp+0x18]
1002c0c8:	push   eax
1002c0c9:	mov    BYTE PTR [esp+0xa8],0x1
1002c0d1:	call   0x1002da39
1002c0d6:	pop    ecx
1002c0d7:	pop    ecx
1002c0d8:	push   esi
1002c0d9:	push   0x1
1002c0db:	lea    ecx,[esp+0x80]
1002c0e2:	call   0x100012eb
1002c0e7:	push   esi
1002c0e8:	push   0x1
1002c0ea:	lea    ecx,[esp+0x48]
1002c0ee:	mov    BYTE PTR [esp+0xa8],0x4
1002c0f6:	call   0x100012eb
1002c0fb:	lea    eax,[esp+0x14]
1002c0ff:	mov    BYTE PTR [esp+0xf],0x0
1002c104:	mov    DWORD PTR [esp+0x10],esi
1002c108:	call   0x10004660
1002c10d:	test   eax,eax
1002c10f:	je     0x1002c1df
1002c115:	cmp    BYTE PTR [esp+0xf],0x0
1002c11a:	jne    0x1002c169
1002c11c:	push   0x10072c58
1002c121:	push   0x4
1002c123:	push   0x1006e0f8
1002c128:	call   0x100042cf
1002c12d:	add    esp,0xc
1002c130:	push   eax
1002c131:	push   DWORD PTR [esp+0x14]
1002c135:	lea    esi,[esp+0x1c]
1002c139:	call   0x10004676
1002c13e:	mov    esi,eax
1002c140:	call   0x10006639
1002c145:	test   al,al
1002c147:	pop    ecx
1002c148:	je     0x1002c14f
1002c14a:	mov    BYTE PTR [esp+0xf],0x1
1002c14f:	inc    DWORD PTR [esp+0x10]
1002c153:	lea    eax,[esp+0x14]
1002c157:	call   0x10004660
1002c15c:	cmp    DWORD PTR [esp+0x10],eax
1002c160:	jne    0x1002c115
1002c162:	cmp    BYTE PTR [esp+0xf],0x0
1002c167:	je     0x1002c1df
1002c169:	push   0x10072c88
1002c16e:	push   0x4
1002c170:	push   0x1006e0f8
1002c175:	call   0x100042cf
1002c17a:	add    esp,0xc
1002c17d:	push   eax
1002c17e:	lea    ecx,[esp+0x28]
1002c182:	call   0x100011c8
1002c187:	push   0x34e5c63e
1002c18c:	push   0x10072cbc
1002c191:	mov    BYTE PTR [esp+0xa8],0x5
1002c199:	call   0x100042bd
1002c19e:	push   eax
1002c19f:	push   0xf
1002c1a1:	push   edi
1002c1a2:	call   0x100042cf
1002c1a7:	add    esp,0x14
1002c1aa:	push   eax
1002c1ab:	lea    ecx,[esp+0x60]
1002c1af:	call   0x100011c8
1002c1b4:	mov    BYTE PTR [esp+0xa0],0x6
1002c1bc:	mov    edx,DWORD PTR [ebx+0x4]
1002c1bf:	lea    eax,[esp+0x5c]
1002c1c3:	push   eax
1002c1c4:	add    edx,0x18
1002c1c7:	lea    ecx,[esp+0x28]
1002c1cb:	call   0x100084eb
1002c1d0:	push   0x0
1002c1d2:	push   0x1
1002c1d4:	lea    ecx,[esp+0x64]
1002c1d8:	call   0x100012eb
1002c1dd:	jmp    0x1002c212
1002c1df:	push   0x10072cec
1002c1e4:	push   0xf
1002c1e6:	push   edi
1002c1e7:	call   0x100042cf
1002c1ec:	add    esp,0xc
1002c1ef:	push   eax
1002c1f0:	lea    ecx,[esp+0x28]
1002c1f4:	call   0x100011c8
1002c1f9:	lea    eax,[esp+0x24]
1002c1fd:	push   eax
1002c1fe:	mov    BYTE PTR [esp+0xa4],0x7
1002c206:	mov    eax,DWORD PTR [ebx+0x4]
1002c209:	add    eax,0x18
1002c20c:	push   eax
1002c20d:	call   0x100083a0
1002c212:	push   0x0
1002c214:	push   0x1
1002c216:	lea    ecx,[esp+0x2c]
1002c21a:	call   0x100012eb
1002c21f:	lea    esi,[esp+0x14]
1002c223:	call   0x100049d4
1002c228:	mov    ecx,DWORD PTR [esp+0x98]
1002c22f:	mov    DWORD PTR fs:0x0,ecx
1002c236:	pop    ecx
1002c237:	pop    edi
1002c238:	pop    esi
1002c239:	mov    esp,ebp
1002c23b:	pop    ebp
1002c23c:	ret    
1002c23d:	push   0x6c
1002c23f:	mov    eax,0x10064f19
1002c244:	call   0x10059bc4
1002c249:	mov    esi,DWORD PTR [ebp+0x8]
1002c24c:	push   DWORD PTR [esi]
1002c24e:	lea    ecx,[ebp-0x30]
1002c251:	mov    DWORD PTR [ebp-0x74],esi
1002c254:	call   0x10008c7d
1002c259:	xor    edi,edi
1002c25b:	mov    DWORD PTR [ebp-0x4],edi
1002c25e:	mov    DWORD PTR [ebp-0x54],edi
1002c261:	call   0x1002fa60
1002c266:	push   edi
1002c267:	lea    ecx,[ebp-0x4c]
1002c26a:	mov    DWORD PTR [ebp-0x34],0xf
1002c271:	call   0x10001417
1002c276:	xor    ebx,ebx
1002c278:	inc    ebx
1002c279:	push   ebx
1002c27a:	lea    eax,[ebp-0x50]
1002c27d:	push   eax
1002c27e:	mov    BYTE PTR [ebp-0x4],0x3
1002c282:	call   0x10034a90
1002c287:	lea    eax,[ebp-0x5c]
1002c28a:	push   eax
1002c28b:	lea    ecx,[ebp-0x4c]
1002c28e:	lea    edx,[ebp-0x50]
1002c291:	mov    BYTE PTR [ebp-0x4],0x4
1002c295:	call   0x10036340
1002c29a:	test   al,al
1002c29c:	je     0x1002c2d4
1002c29e:	push   0x34
1002c2a0:	call   0x1004358e
1002c2a5:	pop    ecx
1002c2a6:	mov    DWORD PTR [ebp-0x58],eax
1002c2a9:	cmp    eax,edi
1002c2ab:	mov    BYTE PTR [ebp-0x4],0x5
1002c2af:	je     0x1002c2cf
1002c2b1:	mov    eax,DWORD PTR [ebp-0x5c]
1002c2b4:	mov    DWORD PTR [ebp-0x68],eax
1002c2b7:	lea    eax,[ebp-0x70]
1002c2ba:	push   eax
1002c2bb:	lea    eax,[ebp-0x4c]
1002c2be:	push   eax
1002c2bf:	push   DWORD PTR [ebp-0x58]
1002c2c2:	mov    DWORD PTR [ebp-0x70],edi
1002c2c5:	mov    DWORD PTR [ebp-0x6c],edi
1002c2c8:	call   0x1000285d
1002c2cd:	jmp    0x1002c2d1
1002c2cf:	xor    eax,eax
1002c2d1:	mov    DWORD PTR [ebp-0x54],eax
1002c2d4:	push   DWORD PTR [ebp-0x50]
1002c2d7:	call   DWORD PTR ds:0x10066070
1002c2dd:	push   edi
1002c2de:	push   ebx
1002c2df:	lea    ecx,[ebp-0x4c]
1002c2e2:	call   0x100012eb
1002c2e7:	mov    DWORD PTR [ebp-0x4],ebx
1002c2ea:	cmp    DWORD PTR [ebp-0x54],edi
1002c2ed:	jne    0x1002c303
1002c2ef:	xor    bl,bl
1002c2f1:	push   edi
1002c2f2:	push   0x1
1002c2f4:	lea    ecx,[ebp-0x30]
1002c2f7:	call   0x100012eb
1002c2fc:	mov    al,bl
1002c2fe:	jmp    0x1002c556
1002c303:	cmp    DWORD PTR [ebp-0x18],0x10
1002c307:	mov    eax,DWORD PTR [ebp-0x2c]
1002c30a:	jae    0x1002c30f
1002c30c:	lea    eax,[ebp-0x2c]
1002c30f:	push   eax
1002c310:	mov    DWORD PTR [ebp-0x6c],eax
1002c313:	call   0x10043100
1002c318:	pop    ecx
1002c319:	mov    DWORD PTR [ebp-0x68],eax
1002c31c:	lea    eax,[ebp-0x6c]
1002c31f:	push   eax
1002c320:	push   DWORD PTR [ebp-0x54]
1002c323:	call   0x1003a210
1002c328:	test   al,al
1002c32a:	je     0x1002c52d
1002c330:	call   DWORD PTR ds:0x10066168
1002c336:	mov    ebx,eax
1002c338:	push   ebx
1002c339:	mov    DWORD PTR [ebp-0x6c],ebx
1002c33c:	call   DWORD PTR ds:0x10066170
1002c342:	mov    edi,DWORD PTR ds:0x1006616c
1002c348:	push   0x2
1002c34a:	push   ebx
1002c34b:	mov    DWORD PTR [ebp-0x68],eax
1002c34e:	call   edi
1002c350:	mov    BYTE PTR [ebp-0x4],0x7
1002c354:	call   0x1002fa60
1002c359:	mov    eax,ds:0x10080a74
1002c35e:	mov    ecx,0x10080a74
1002c363:	call   DWORD PTR [eax+0xc]
1002c366:	add    eax,0x10
1002c369:	mov    DWORD PTR [ebp-0x64],eax
1002c36c:	lea    eax,[ebp-0x5c]
1002c36f:	push   eax
1002c370:	lea    eax,[ebp-0x64]
1002c373:	push   eax
1002c374:	lea    eax,[ebp-0x30]
1002c377:	push   eax
1002c378:	mov    BYTE PTR [ebp-0x4],0x8
1002c37c:	push   DWORD PTR [esi+0x4]
1002c37f:	lea    esi,[ebp-0x58]
1002c382:	call   0x1002c55e
1002c387:	add    esp,0x10
1002c38a:	test   al,al
1002c38c:	je     0x1002c4f9
1002c392:	call   0x1002fa60
1002c397:	mov    ebx,DWORD PTR [ebp-0x74]
1002c39a:	call   0x1002c025
1002c39f:	cmp    DWORD PTR [ebp-0x18],0x10
1002c3a3:	mov    eax,DWORD PTR [ebp-0x2c]
1002c3a6:	jae    0x1002c3ab
1002c3a8:	lea    eax,[ebp-0x2c]
1002c3ab:	push   eax
1002c3ac:	call   0x1000206e
1002c3b1:	push   0x34
1002c3b3:	call   0x1004358e
1002c3b8:	pop    ecx
1002c3b9:	pop    ecx
1002c3ba:	mov    DWORD PTR [ebp-0x50],eax
1002c3bd:	xor    ebx,ebx
1002c3bf:	cmp    eax,ebx
1002c3c1:	mov    BYTE PTR [ebp-0x4],0x9
1002c3c5:	je     0x1002c3db
1002c3c7:	lea    ecx,[ebp-0x64]
1002c3ca:	push   ecx
1002c3cb:	push   DWORD PTR [ebp-0x5c]
1002c3ce:	push   DWORD PTR [ebp-0x58]
1002c3d1:	push   eax
1002c3d2:	call   0x1002bdb6
1002c3d7:	mov    edi,eax
1002c3d9:	jmp    0x1002c3dd
1002c3db:	xor    edi,edi
1002c3dd:	mov    DWORD PTR [ebp-0x78],edi
1002c3e0:	call   0x1000206e
1002c3e5:	mov    DWORD PTR [ebp-0x50],ebx
1002c3e8:	mov    DWORD PTR [ebp-0x60],ebx
1002c3eb:	mov    BYTE PTR [ebp-0x4],0xc
1002c3ef:	mov    eax,DWORD PTR [edi+0xc]
1002c3f2:	test   al,0x2
1002c3f4:	je     0x1002c41d
1002c3f6:	test   al,0x4
1002c3f8:	jne    0x1002c41d
1002c3fa:	mov    eax,DWORD PTR [edi]
1002c3fc:	push   edi
1002c3fd:	call   DWORD PTR [eax+0x4]
1002c400:	push   ebx
1002c401:	push   0x4
1002c403:	push   edi
1002c404:	push   0x1002beea
1002c409:	push   ebx
1002c40a:	push   ebx
1002c40b:	call   DWORD PTR ds:0x10066098
1002c411:	push   0x2
1002c413:	push   eax
1002c414:	mov    DWORD PTR [ebp-0x50],eax
1002c417:	call   DWORD PTR ds:0x1006616c
1002c41d:	mov    eax,DWORD PTR [edi+0xc]
1002c420:	test   al,0x1
1002c422:	je     0x1002c442
1002c424:	test   al,0x8
1002c426:	jne    0x1002c442
1002c428:	mov    eax,DWORD PTR [edi]
1002c42a:	push   edi
1002c42b:	call   DWORD PTR [eax+0x4]
1002c42e:	push   ebx
1002c42f:	push   0x4
1002c431:	push   edi
1002c432:	push   0x1002bf8c
1002c437:	push   ebx
1002c438:	push   ebx
1002c439:	call   DWORD PTR ds:0x10066098
1002c43f:	mov    DWORD PTR [ebp-0x60],eax
1002c442:	mov    eax,DWORD PTR [ebp-0x50]
1002c445:	cmp    eax,ebx
1002c447:	jne    0x1002c468
1002c449:	cmp    DWORD PTR [ebp-0x60],ebx
1002c44c:	jne    0x1002c468
1002c44e:	mov    eax,DWORD PTR [ebp-0x74]
1002c451:	mov    eax,DWORD PTR [eax+0x4]
1002c454:	lea    esi,[eax+0x38]
1002c457:	cmp    DWORD PTR [esi],edi
1002c459:	je     0x1002c460
1002c45b:	call   0x1000777b
1002c460:	mov    eax,DWORD PTR [edi]
1002c462:	push   edi
1002c463:	call   DWORD PTR [eax+0x8]
1002c466:	jmp    0x1002c4c0
1002c468:	mov    ecx,DWORD PTR [ebp-0x60]
1002c46b:	lea    esi,[edi+0x1c]
1002c46e:	push   eax
1002c46f:	mov    DWORD PTR [ebp-0x58],eax
1002c472:	mov    DWORD PTR [ebp-0x5c],ecx
1002c475:	mov    DWORD PTR [ebp-0x50],ebx
1002c478:	call   0x100049f9
1002c47d:	mov    eax,DWORD PTR [ebp-0x60]
1002c480:	lea    esi,[edi+0x2c]
1002c483:	push   eax
1002c484:	mov    DWORD PTR [ebp-0x60],ebx
1002c487:	call   0x100049f9
1002c48c:	mov    eax,DWORD PTR [ebp-0x74]
1002c48f:	mov    eax,DWORD PTR [eax+0x4]
1002c492:	lea    esi,[eax+0x38]
1002c495:	cmp    DWORD PTR [esi],edi
1002c497:	je     0x1002c49e
1002c499:	call   0x1000777b
1002c49e:	mov    eax,DWORD PTR [edi]
1002c4a0:	push   edi
1002c4a1:	call   DWORD PTR [eax+0x8]
1002c4a4:	cmp    DWORD PTR [ebp-0x58],ebx
1002c4a7:	je     0x1002c4b2
1002c4a9:	push   DWORD PTR [ebp-0x58]
1002c4ac:	call   DWORD PTR ds:0x10066174
1002c4b2:	cmp    DWORD PTR [ebp-0x5c],ebx
1002c4b5:	je     0x1002c4c0
1002c4b7:	push   DWORD PTR [ebp-0x5c]
1002c4ba:	call   DWORD PTR ds:0x10066174
1002c4c0:	mov    eax,DWORD PTR [ebp-0x64]
1002c4c3:	add    eax,0xfffffff0
1002c4c6:	call   0x1000206f
1002c4cb:	cmp    DWORD PTR [ebp-0x6c],ebx
1002c4ce:	je     0x1002c4dc
1002c4d0:	push   DWORD PTR [ebp-0x68]
1002c4d3:	push   DWORD PTR [ebp-0x6c]
1002c4d6:	call   DWORD PTR ds:0x1006616c
1002c4dc:	mov    BYTE PTR [ebp-0x4],bl
1002c4df:	push   DWORD PTR [ebp-0x54]
1002c4e2:	call   0x1003a020
1002c4e7:	push   DWORD PTR [ebp-0x54]
1002c4ea:	call   0x10042f82
1002c4ef:	pop    ecx
1002c4f0:	mov    bl,0x1
1002c4f2:	xor    edi,edi
1002c4f4:	jmp    0x1002c2f1
1002c4f9:	call   0x1002fa60
1002c4fe:	mov    eax,DWORD PTR [ebp-0x64]
1002c501:	add    eax,0xfffffff0
1002c504:	call   0x1000206f
1002c509:	test   ebx,ebx
1002c50b:	je     0x1002c513
1002c50d:	push   DWORD PTR [ebp-0x68]
1002c510:	push   ebx
1002c511:	call   edi
1002c513:	xor    edi,edi
1002c515:	mov    BYTE PTR [ebp-0x4],0x0
1002c519:	push   DWORD PTR [ebp-0x54]
1002c51c:	call   0x1003a020
1002c521:	push   DWORD PTR [ebp-0x54]
1002c524:	call   0x10042f82
1002c529:	pop    ecx
1002c52a:	push   edi
1002c52b:	jmp    0x1002c54a
1002c52d:	call   0x1002fa60
1002c532:	jmp    0x1002c515
1002c534:	mov    eax,0x1002c548
1002c539:	ret    
1002c53a:	push   0x4
1002c53c:	call   0x100379e0
1002c541:	pop    ecx
1002c542:	mov    eax,0x1002c548
1002c547:	ret    
1002c548:	push   0x0
1002c54a:	push   0x1
1002c54c:	lea    ecx,[ebp-0x30]
1002c54f:	call   0x100012eb
1002c554:	xor    al,al
1002c556:	call   0x10059c20
1002c55b:	ret    0x4
1002c55e:	push   ebp
1002c55f:	mov    ebp,esp
1002c561:	and    esp,0xfffffff8
1002c564:	push   ecx
1002c565:	push   edi
1002c566:	call   0x100228e3
1002c56b:	mov    ecx,eax
1002c56d:	call   0x10023367
1002c572:	and    DWORD PTR [esi],0x0
1002c575:	mov    edi,eax
1002c577:	test   edi,edi
1002c579:	je     0x1002c5ad
1002c57b:	push   DWORD PTR [ebp+0x14]
1002c57e:	push   DWORD PTR [ebp+0x10]
1002c581:	push   DWORD PTR [ebp+0xc]
1002c584:	push   DWORD PTR [ebp+0x8]
1002c587:	push   DWORD PTR [esi]
1002c589:	push   ecx
1002c58a:	call   0x100228e3
1002c58f:	pop    ecx
1002c590:	push   eax
1002c591:	call   0x10022d85
1002c596:	test   al,al
1002c598:	je     0x1002c5a7
1002c59a:	push   DWORD PTR [ebp+0x10]
1002c59d:	call   0x10024288
1002c5a2:	test   al,al
1002c5a4:	pop    ecx
1002c5a5:	jne    0x1002c5b4
1002c5a7:	inc    DWORD PTR [esi]
1002c5a9:	cmp    DWORD PTR [esi],edi
1002c5ab:	jne    0x1002c57b
1002c5ad:	xor    al,al
1002c5af:	pop    edi
1002c5b0:	mov    esp,ebp
1002c5b2:	pop    ebp
1002c5b3:	ret    
1002c5b4:	mov    al,0x1
1002c5b6:	jmp    0x1002c5af
1002c5b8:	push   ebx
1002c5b9:	mov    ebx,DWORD PTR [esp+0x8]
1002c5bd:	mov    eax,DWORD PTR [ebx]
1002c5bf:	cmp    BYTE PTR [eax+0x2c],0x0
1002c5c3:	push   esi
1002c5c4:	push   edi
1002c5c5:	je     0x1002c5cb
1002c5c7:	xor    al,al
1002c5c9:	jmp    0x1002c5f5
1002c5cb:	sub    esp,0x10
1002c5ce:	mov    BYTE PTR [ebx+0x10],0x1
1002c5d2:	mov    edi,esp
1002c5d4:	mov    esi,0x1006f538
1002c5d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1002c5da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1002c5db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1002c5dc:	push   eax
1002c5dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1002c5de:	call   0x100088cc
1002c5e3:	test   eax,eax
1002c5e5:	je     0x1002c5f3
1002c5e7:	mov    eax,DWORD PTR [eax+0xc]
1002c5ea:	shr    eax,1
1002c5ec:	not    al
1002c5ee:	and    al,0x1
1002c5f0:	mov    BYTE PTR [ebx+0x10],al
1002c5f3:	mov    al,0x1
1002c5f5:	pop    edi
1002c5f6:	pop    esi
1002c5f7:	pop    ebx
1002c5f8:	ret    0x4
1002c5fb:	push   0x0
1002c5fd:	mov    eax,0x1005f8ae
1002c602:	call   0x10059b25
1002c607:	mov    esi,DWORD PTR [ebp+0x8]
1002c60a:	and    DWORD PTR [ebp-0x4],0x0
1002c60e:	mov    DWORD PTR [esi],0x10072e64
1002c614:	and    DWORD PTR [esi+0x4],0x0
1002c618:	push   0x4
1002c61a:	mov    BYTE PTR [ebp-0x4],0x1
1002c61e:	call   0x1004358e
1002c623:	test   eax,eax
1002c625:	pop    ecx
1002c626:	je     0x1002c632
1002c628:	mov    DWORD PTR [eax],0x10071924
1002c62e:	mov    edi,eax
1002c630:	jmp    0x1002c634
1002c632:	xor    edi,edi
1002c634:	mov    ecx,DWORD PTR [esi+0x4]
1002c637:	cmp    edi,ecx
1002c639:	je     0x1002c646
1002c63b:	test   ecx,ecx
1002c63d:	je     0x1002c646
1002c63f:	mov    eax,DWORD PTR [ecx]
1002c641:	push   0x1
1002c643:	call   DWORD PTR [eax+0x4]
1002c646:	mov    DWORD PTR [esi+0x4],edi
1002c649:	mov    eax,esi
1002c64b:	call   0x10059bfd
1002c650:	ret    0x4
1002c653:	push   0x4
1002c655:	mov    eax,0x1005f69e
1002c65a:	call   0x10059b25
1002c65f:	mov    esi,ecx
1002c661:	mov    DWORD PTR [ebp-0x10],esi
1002c664:	and    DWORD PTR [ebp-0x4],0x0
1002c668:	mov    ecx,DWORD PTR [esi+0x4]
1002c66b:	test   ecx,ecx
1002c66d:	je     0x1002c676
1002c66f:	mov    eax,DWORD PTR [ecx]
1002c671:	push   0x1
1002c673:	call   DWORD PTR [eax+0x4]
1002c676:	test   BYTE PTR [ebp+0x8],0x1
1002c67a:	mov    DWORD PTR [esi],0x10071904
1002c680:	je     0x1002c689
1002c682:	push   esi
1002c683:	call   0x10042f82
1002c688:	pop    ecx
1002c689:	mov    eax,esi
1002c68b:	call   0x10059bfd
1002c690:	ret    0x4
1002c693:	push   ebp
1002c694:	mov    ebp,esp
1002c696:	and    esp,0xfffffff8
1002c699:	push   0xffffffff
1002c69b:	push   0x10064126
1002c6a0:	mov    eax,fs:0x0
1002c6a6:	push   eax
1002c6a7:	sub    esp,0x5d8
1002c6ad:	mov    eax,ds:0x1007e030
1002c6b2:	xor    eax,esp
1002c6b4:	mov    DWORD PTR [esp+0x5d0],eax
1002c6bb:	push   ebx
1002c6bc:	push   esi
1002c6bd:	push   edi
1002c6be:	mov    eax,ds:0x1007e030
1002c6c3:	xor    eax,esp
1002c6c5:	push   eax
1002c6c6:	lea    eax,[esp+0x5e8]
1002c6cd:	mov    fs:0x0,eax
1002c6d3:	mov    ebx,DWORD PTR [ebp+0x8]
1002c6d6:	push   DWORD PTR [ebx]
1002c6d8:	mov    DWORD PTR [esp+0x40],ecx
1002c6dc:	lea    ecx,[esp+0x154]
1002c6e3:	call   0x10008c7d
1002c6e8:	xor    esi,esi
1002c6ea:	mov    DWORD PTR [esp+0x5f0],esi
1002c6f1:	mov    eax,DWORD PTR [ebx+0x8]
1002c6f4:	cmp    DWORD PTR [eax+0xc],esi
1002c6f7:	jne    0x1002c785
1002c6fd:	lea    eax,[esp+0x134]
1002c704:	push   eax
1002c705:	mov    eax,DWORD PTR [ebx+0x4]
1002c708:	mov    eax,DWORD PTR [eax+0x4]
1002c70b:	call   0x100199c9
1002c710:	cmp    DWORD PTR [esp+0x168],0x10
1002c718:	mov    ecx,DWORD PTR [esp+0x154]
1002c71f:	jae    0x1002c728
1002c721:	lea    ecx,[esp+0x154]
1002c728:	cmp    DWORD PTR [eax+0x18],0x10
1002c72c:	jb     0x1002c733
1002c72e:	mov    eax,DWORD PTR [eax+0x4]
1002c731:	jmp    0x1002c736
1002c733:	add    eax,0x4
1002c736:	push   ecx
1002c737:	push   eax
1002c738:	call   0x1000206e
1002c73d:	pop    ecx
1002c73e:	pop    ecx
1002c73f:	push   esi
1002c740:	push   0x1
1002c742:	lea    ecx,[esp+0x13c]
1002c749:	call   0x100012eb
1002c74e:	push   esi
1002c74f:	push   0x1
1002c751:	lea    ecx,[esp+0x158]
1002c758:	call   0x100012eb
1002c75d:	xor    al,al
1002c75f:	mov    ecx,DWORD PTR [esp+0x5e8]
1002c766:	mov    DWORD PTR fs:0x0,ecx
1002c76d:	pop    ecx
1002c76e:	pop    edi
1002c76f:	pop    esi
1002c770:	pop    ebx
1002c771:	mov    ecx,DWORD PTR [esp+0x5d0]
1002c778:	xor    ecx,esp
1002c77a:	call   0x10042f87
1002c77f:	mov    esp,ebp
1002c781:	pop    ebp
1002c782:	ret    0x4
1002c785:	mov    eax,DWORD PTR [ebx]
1002c787:	cmp    BYTE PTR [eax+0x2c],0x0
1002c78b:	jne    0x1002c74e
1002c78d:	sub    esp,0x10
1002c790:	mov    edi,esp
1002c792:	mov    esi,0x1006f538
1002c797:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1002c798:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1002c799:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1002c79a:	push   eax
1002c79b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1002c79c:	call   0x100088cc
1002c7a1:	mov    esi,eax
1002c7a3:	xor    edi,edi
1002c7a5:	cmp    esi,edi
1002c7a7:	mov    DWORD PTR [esp+0x24],esi
1002c7ab:	jne    0x1002c7b0
1002c7ad:	push   edi
1002c7ae:	jmp    0x1002c74f
1002c7b0:	mov    eax,DWORD PTR [esi+0xc]
1002c7b3:	test   al,0x2
1002c7b5:	je     0x1002c7ad
1002c7b7:	test   al,0x4
1002c7b9:	jne    0x1002c868
1002c7bf:	mov    eax,DWORD PTR [ebx+0x4]
1002c7c2:	mov    edx,DWORD PTR [eax+0x10]
1002c7c5:	mov    ecx,DWORD PTR [ebx]
1002c7c7:	sub    edx,DWORD PTR [ecx+0x10]
1002c7ca:	mov    eax,DWORD PTR [eax+0x14]
1002c7cd:	sbb    eax,DWORD PTR [ecx+0x14]
1002c7d0:	push   edi
1002c7d1:	push   0x2710
1002c7d6:	push   eax
1002c7d7:	push   edx
1002c7d8:	call   0x1005f430
1002c7dd:	add    eax,eax
1002c7df:	mov    ecx,0x7d0
1002c7e4:	cmp    eax,ecx
1002c7e6:	jae    0x1002c7ea
1002c7e8:	mov    eax,ecx
1002c7ea:	mov    ecx,DWORD PTR [esi+0x1c]
1002c7ed:	push   eax
1002c7ee:	push   ecx
1002c7ef:	call   DWORD PTR ds:0x10066084
1002c7f5:	test   eax,eax
1002c7f7:	je     0x1002c822
1002c7f9:	cmp    DWORD PTR [esp+0x168],0x10
1002c801:	mov    eax,DWORD PTR [esp+0x154]
1002c808:	jae    0x1002c811
1002c80a:	lea    eax,[esp+0x154]
1002c811:	push   eax
1002c812:	call   0x1000206e
1002c817:	pop    ecx
1002c818:	push   0x5
1002c81a:	call   0x100379e0
1002c81f:	pop    ecx
1002c820:	jmp    0x1002c7ad
1002c822:	mov    al,BYTE PTR [esi+0x18]
1002c825:	test   al,al
1002c827:	jne    0x1002c868
1002c829:	cmp    DWORD PTR [esp+0x168],0x10
1002c831:	mov    eax,DWORD PTR [esp+0x154]
1002c838:	jae    0x1002c841
1002c83a:	lea    eax,[esp+0x154]
1002c841:	push   eax
1002c842:	call   0x1000206e
1002c847:	pop    ecx
1002c848:	push   0x5
1002c84a:	call   0x100379e0
1002c84f:	pop    ecx
1002c850:	xor    bl,bl
1002c852:	push   edi
1002c853:	push   0x1
1002c855:	lea    ecx,[esp+0x158]
1002c85c:	call   0x100012eb
1002c861:	mov    al,bl
1002c863:	jmp    0x1002c75f
1002c868:	push   0x124f612a
1002c86d:	push   0x10072d14
1002c872:	call   0x100042bd
1002c877:	push   0x2fba764
1002c87c:	push   eax
1002c87d:	call   0x100042bd
1002c882:	push   eax
1002c883:	push   0x10
1002c885:	push   0x1006de08
1002c88a:	call   0x100042cf
1002c88f:	add    esp,0x1c
1002c892:	push   eax
1002c893:	lea    ecx,[esp+0xc8]
1002c89a:	call   0x100011c8
1002c89f:	push   edi
1002c8a0:	lea    eax,[esp+0xc8]
1002c8a7:	push   eax
1002c8a8:	lea    eax,[esp+0x120]
1002c8af:	push   eax
1002c8b0:	mov    BYTE PTR [esp+0x5fc],0x1
1002c8b8:	mov    eax,DWORD PTR [ebx+0x4]
1002c8bb:	add    eax,0x20
1002c8be:	call   0x10008602
1002c8c3:	mov    BYTE PTR [esp+0x5f0],0x2
1002c8cb:	cmp    DWORD PTR [eax+0x18],0x10
1002c8cf:	jb     0x1002c8d6
1002c8d1:	mov    eax,DWORD PTR [eax+0x4]
1002c8d4:	jmp    0x1002c8d9
1002c8d6:	add    eax,0x4
1002c8d9:	push   eax
1002c8da:	lea    ecx,[esp+0x100]
1002c8e1:	call   0x100011c8
1002c8e6:	lea    eax,[esp+0xfc]
1002c8ed:	push   eax
1002c8ee:	lea    esi,[esp+0x1c4]
1002c8f5:	mov    BYTE PTR [esp+0x5f4],0x3
1002c8fd:	call   0x1002fa90
1002c902:	pop    ecx
1002c903:	push   edi
1002c904:	push   0x1
1002c906:	lea    ecx,[esp+0x104]
1002c90d:	call   0x100012eb
1002c912:	push   edi
1002c913:	push   0x1
1002c915:	lea    ecx,[esp+0x120]
1002c91c:	call   0x100012eb
1002c921:	push   edi
1002c922:	push   0x1
1002c924:	lea    ecx,[esp+0xcc]
1002c92b:	mov    BYTE PTR [esp+0x5f8],0x7
1002c933:	call   0x100012eb
1002c938:	mov    eax,DWORD PTR [ebx+0x8]
1002c93b:	mov    eax,DWORD PTR [eax+0xc]
1002c93e:	lea    ecx,[esp+0x1a4]
1002c945:	push   ecx
1002c946:	call   0x100199c9
1002c94b:	mov    esi,DWORD PTR [esp+0x24]
1002c94f:	mov    BYTE PTR [esp+0x5f0],0x8
1002c957:	mov    eax,DWORD PTR [esi+0x10]
1002c95a:	push   edi
1002c95b:	mov    DWORD PTR [esp+0x20],eax
1002c95f:	lea    eax,[esi+0x14]
1002c962:	push   eax
1002c963:	lea    eax,[esp+0x158]
1002c96a:	push   eax
1002c96b:	push   DWORD PTR [ebx+0x8]
1002c96e:	push   DWORD PTR [ebx]
1002c970:	push   DWORD PTR [esi+0x8]
1002c973:	call   0x100228e3
1002c978:	mov    ecx,DWORD PTR [esp+0x34]
1002c97c:	push   eax
1002c97d:	call   0x1002307a
1002c982:	test   al,al
1002c984:	jne    0x1002c9b2
1002c986:	cmp    DWORD PTR [esp+0x168],0x10
1002c98e:	mov    eax,DWORD PTR [esp+0x154]
1002c995:	jae    0x1002c99e
1002c997:	lea    eax,[esp+0x154]
1002c99e:	push   eax
1002c99f:	call   0x1000206e
1002c9a4:	pop    ecx
1002c9a5:	push   0x7
1002c9a7:	call   0x100379e0
1002c9ac:	pop    ecx
1002c9ad:	jmp    0x1002cd80
1002c9b2:	mov    eax,DWORD PTR [esi+0x10]
1002c9b5:	lea    edx,[esp+0x1c]
1002c9b9:	push   edx
1002c9ba:	mov    DWORD PTR [esp+0x20],edi
1002c9be:	mov    ecx,DWORD PTR [eax]
1002c9c0:	push   eax
1002c9c1:	call   DWORD PTR [ecx+0x28]
1002c9c4:	push   edi
1002c9c5:	lea    ecx,[esp+0x170]
1002c9cc:	mov    DWORD PTR [esp+0x188],0xf
1002c9d7:	call   0x10001417
1002c9dc:	mov    BYTE PTR [esp+0x5f0],0x9
1002c9e4:	cmp    DWORD PTR [esp+0x1c],edi
1002c9e8:	je     0x1002cb7d
1002c9ee:	mov    DWORD PTR [esp+0x18],0x1
1002c9f6:	jmp    0x1002c9fc
1002c9f8:	mov    esi,DWORD PTR [esp+0x24]
1002c9fc:	lea    eax,[esp+0x4c]
1002ca00:	push   eax
1002ca01:	call   DWORD PTR ds:0x1006628c
1002ca07:	mov    eax,DWORD PTR [esp+0x18]
1002ca0b:	mov    WORD PTR [esp+0x5c],0x16
1002ca12:	mov    DWORD PTR [esp+0x64],eax
1002ca16:	mov    BYTE PTR [esp+0x5f0],0xb
1002ca1e:	mov    eax,DWORD PTR [esi+0x10]
1002ca21:	mov    ecx,DWORD PTR [eax]
1002ca23:	lea    edx,[esp+0x4c]
1002ca27:	push   edx
1002ca28:	sub    esp,0x10
1002ca2b:	mov    edi,esp
1002ca2d:	lea    esi,[esp+0x70]
1002ca31:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1002ca32:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1002ca33:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1002ca34:	push   eax
1002ca35:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1002ca36:	call   DWORD PTR [ecx+0x20]
1002ca39:	test   eax,eax
1002ca3b:	lea    eax,[esp+0x5c]
1002ca3f:	mov    BYTE PTR [esp+0x5f0],0xa
1002ca47:	mov    esi,DWORD PTR ds:0x10066294
1002ca4d:	push   eax
1002ca4e:	setge  BYTE PTR [esp+0x1b]
1002ca53:	call   esi
1002ca55:	cmp    BYTE PTR [esp+0x17],0x0
1002ca5a:	je     0x1002cb59
1002ca60:	lea    ecx,[esp+0x4c]
1002ca64:	call   0x1002b04e
1002ca69:	xor    edi,edi
1002ca6b:	cmp    eax,edi
1002ca6d:	mov    DWORD PTR [esp+0x28],edi
1002ca71:	je     0x1002ca82
1002ca73:	mov    ecx,DWORD PTR [eax]
1002ca75:	lea    edx,[esp+0x28]
1002ca79:	push   edx
1002ca7a:	push   0x10072b14
1002ca7f:	push   eax
1002ca80:	call   DWORD PTR [ecx]
1002ca82:	mov    BYTE PTR [esp+0x5f0],0xc
1002ca8a:	mov    eax,DWORD PTR [esp+0x28]
1002ca8e:	lea    edx,[esp+0x30]
1002ca92:	push   edx
1002ca93:	mov    DWORD PTR [esp+0x34],edi
1002ca97:	mov    ecx,DWORD PTR [eax]
1002ca99:	push   eax
1002ca9a:	call   DWORD PTR [ecx+0x24]
1002ca9d:	mov    eax,DWORD PTR [esp+0x24]
1002caa1:	mov    eax,DWORD PTR [eax+0x10]
1002caa4:	mov    ecx,DWORD PTR [eax]
1002caa6:	lea    edx,[esp+0x38]
1002caaa:	push   edx
1002caab:	push   DWORD PTR [esp+0x1c]
1002caaf:	push   eax
1002cab0:	call   DWORD PTR [ecx+0x24]
1002cab3:	test   eax,eax
1002cab5:	jl     0x1002cb43
1002cabb:	mov    ecx,DWORD PTR [esp+0x38]
1002cabf:	push   edi
1002cac0:	lea    edi,[esp+0x30]
1002cac4:	call   0x1000d8d3
1002cac9:	mov    BYTE PTR [esp+0x5f0],0xd
1002cad1:	cmp    DWORD PTR [esp+0x180],0x0
1002cad9:	jbe    0x1002caed
1002cadb:	push   0x10072d54
1002cae0:	lea    eax,[esp+0x170]
1002cae7:	push   eax
1002cae8:	call   0x10004107
1002caed:	lea    eax,[esp+0x2c]
1002caf1:	call   0x1000d933
1002caf6:	push   eax
1002caf7:	lea    eax,[esp+0x170]
1002cafe:	push   eax
1002caff:	call   0x10004107
1002cb04:	push   0x1006dcc4
1002cb09:	lea    eax,[esp+0x170]
1002cb10:	push   eax
1002cb11:	call   0x10004107
1002cb16:	push   0xa
1002cb18:	lea    eax,[esp+0x1e0]
1002cb1f:	push   eax
1002cb20:	push   DWORD PTR [esp+0x38]
1002cb24:	call   0x10045be6
1002cb29:	add    esp,0xc
1002cb2c:	push   eax
1002cb2d:	lea    eax,[esp+0x170]
1002cb34:	push   eax
1002cb35:	call   0x10004107
1002cb3a:	lea    edi,[esp+0x2c]
1002cb3e:	call   0x100025b0
1002cb43:	mov    BYTE PTR [esp+0x5f0],0xa
1002cb4b:	mov    eax,DWORD PTR [esp+0x28]
1002cb4f:	test   eax,eax
1002cb51:	je     0x1002cb59
1002cb53:	mov    ecx,DWORD PTR [eax]
1002cb55:	push   eax
1002cb56:	call   DWORD PTR [ecx+0x8]
1002cb59:	lea    eax,[esp+0x4c]
1002cb5d:	push   eax
1002cb5e:	mov    BYTE PTR [esp+0x5f4],0x9
1002cb66:	call   esi
1002cb68:	inc    DWORD PTR [esp+0x18]
1002cb6c:	mov    eax,DWORD PTR [esp+0x18]
1002cb70:	dec    eax
1002cb71:	cmp    eax,DWORD PTR [esp+0x1c]
1002cb75:	jne    0x1002c9f8
1002cb7b:	xor    edi,edi
1002cb7d:	mov    eax,DWORD PTR [ebx+0x8]
1002cb80:	mov    eax,DWORD PTR [eax+0xc]
1002cb83:	lea    ecx,[esp+0x188]
1002cb8a:	push   ecx
1002cb8b:	call   0x100199c9
1002cb90:	lea    ecx,[esp+0x188]
1002cb97:	lea    eax,[esp+0x1a4]
1002cb9e:	mov    BYTE PTR [esp+0x5f0],0xe
1002cba6:	call   0x10006617
1002cbab:	test   al,al
1002cbad:	jne    0x1002cd21
1002cbb3:	push   0x43121f84
1002cbb8:	push   0x10072d58
1002cbbd:	call   0x100042bd
1002cbc2:	push   0x5bb34ae2
1002cbc7:	push   eax
1002cbc8:	call   0x100042bd
1002cbcd:	push   0x6a0e88d6
1002cbd2:	push   eax
1002cbd3:	call   0x100042bd
1002cbd8:	push   eax
1002cbd9:	push   0x11
1002cbdb:	push   0x1006dc7c
1002cbe0:	call   0x100042cf
1002cbe5:	add    esp,0x24
1002cbe8:	push   eax
1002cbe9:	lea    ecx,[esp+0xac]
1002cbf0:	call   0x100011c8
1002cbf5:	lea    eax,[esp+0xa8]
1002cbfc:	push   eax
1002cbfd:	mov    BYTE PTR [esp+0x5f4],0xf
1002cc05:	mov    eax,DWORD PTR [ebx+0x8]
1002cc08:	add    eax,0x20
1002cc0b:	push   eax
1002cc0c:	call   0x100083a0
1002cc11:	push   edi
1002cc12:	push   0x1
1002cc14:	lea    ecx,[esp+0xb0]
1002cc1b:	mov    BYTE PTR [esp+0x5f8],0xe
1002cc23:	call   0x100012eb
1002cc28:	push   0x32258540
1002cc2d:	push   0x10072d98
1002cc32:	call   0x100042bd
1002cc37:	push   eax
1002cc38:	push   0xe
1002cc3a:	mov    esi,0x1006d9c4
1002cc3f:	push   esi
1002cc40:	call   0x100042cf
1002cc45:	add    esp,0x14
1002cc48:	push   eax
1002cc49:	lea    ecx,[esp+0x74]
1002cc4d:	call   0x100011c8
1002cc52:	lea    eax,[esp+0x70]
1002cc56:	push   eax
1002cc57:	mov    BYTE PTR [esp+0x5f4],0x10
1002cc5f:	mov    eax,DWORD PTR [ebx+0x8]
1002cc62:	add    eax,0x20
1002cc65:	push   eax
1002cc66:	call   0x100083a0
1002cc6b:	push   edi
1002cc6c:	push   0x1
1002cc6e:	lea    ecx,[esp+0x78]
1002cc72:	mov    BYTE PTR [esp+0x5f8],0xe
1002cc7a:	call   0x100012eb
1002cc7f:	push   0xa
1002cc81:	lea    eax,[esp+0x1e0]
1002cc88:	push   eax
1002cc89:	push   DWORD PTR [esp+0x1a4]
1002cc90:	call   0x10045be6
1002cc95:	add    esp,0xc
1002cc98:	push   eax
1002cc99:	lea    ecx,[esp+0xe4]
1002cca0:	call   0x100011c8
1002cca5:	push   0x1d76a174
1002ccaa:	push   0x10072dd4
1002ccaf:	mov    BYTE PTR [esp+0x5f8],0x11
1002ccb7:	call   0x100042bd
1002ccbc:	push   0xd11ef2
1002ccc1:	push   eax
1002ccc2:	call   0x100042bd
1002ccc7:	push   eax
1002ccc8:	push   0xe
1002ccca:	push   esi
1002cccb:	call   0x100042cf
1002ccd0:	add    esp,0x1c
1002ccd3:	push   eax
1002ccd4:	lea    ecx,[esp+0x90]
1002ccdb:	call   0x100011c8
1002cce0:	mov    BYTE PTR [esp+0x5f0],0x12
1002cce8:	mov    edx,DWORD PTR [ebx+0x8]
1002cceb:	push   edi
1002ccec:	lea    eax,[esp+0x90]
1002ccf3:	push   eax
1002ccf4:	add    edx,0x20
1002ccf7:	lea    ecx,[esp+0xe8]
1002ccfe:	call   0x10008097
1002cd03:	push   edi
1002cd04:	push   0x1
1002cd06:	lea    ecx,[esp+0x94]
1002cd0d:	call   0x100012eb
1002cd12:	push   edi
1002cd13:	push   0x1
1002cd15:	lea    ecx,[esp+0xe8]
1002cd1c:	call   0x100012eb
1002cd21:	cmp    DWORD PTR [esp+0x184],0x10
1002cd29:	mov    ecx,DWORD PTR [esp+0x170]
1002cd30:	jae    0x1002cd39
1002cd32:	lea    ecx,[esp+0x170]
1002cd39:	cmp    DWORD PTR [esp+0x168],0x10
1002cd41:	mov    eax,DWORD PTR [esp+0x154]
1002cd48:	jae    0x1002cd51
1002cd4a:	lea    eax,[esp+0x154]
1002cd51:	push   ecx
1002cd52:	push   eax
1002cd53:	call   0x1000206e
1002cd58:	pop    ecx
1002cd59:	pop    ecx
1002cd5a:	push   edi
1002cd5b:	push   0x1
1002cd5d:	lea    ecx,[esp+0x190]
1002cd64:	call   0x100012eb
1002cd69:	push   edi
1002cd6a:	push   0x1
1002cd6c:	lea    ecx,[esp+0x174]
1002cd73:	mov    BYTE PTR [esp+0x5f8],0x8
1002cd7b:	call   0x100012eb
1002cd80:	push   DWORD PTR [ebx]
1002cd82:	call   0x1000890d
1002cd87:	mov    DWORD PTR [esp+0x20],eax
1002cd8b:	mov    BYTE PTR [esp+0x5f0],0x13
1002cd93:	push   DWORD PTR [ebx+0x8]
1002cd96:	call   0x10009139
1002cd9b:	mov    DWORD PTR [esp+0x34],eax
1002cd9f:	mov    BYTE PTR [esp+0x5f0],0x14
1002cda7:	lea    eax,[esp+0x20]
1002cdab:	mov    DWORD PTR [esp+0x40],eax
1002cdaf:	lea    eax,[esp+0x34]
1002cdb3:	mov    DWORD PTR [esp+0x44],eax
1002cdb7:	mov    eax,DWORD PTR [esp+0x3c]
1002cdbb:	mov    ecx,DWORD PTR [eax+0x4]
1002cdbe:	lea    edx,[esp+0x40]
1002cdc2:	mov    BYTE PTR [esp+0x48],0x0
1002cdc7:	mov    eax,DWORD PTR [ecx]
1002cdc9:	push   edx
1002cdca:	call   DWORD PTR [eax]
1002cdcc:	lea    eax,[esp+0x34]
1002cdd0:	mov    BYTE PTR [esp+0x5f0],0x13
1002cdd8:	call   0x10009f1a
1002cddd:	mov    BYTE PTR [esp+0x5f0],0x8
1002cde5:	cmp    DWORD PTR [esp+0x20],edi
1002cde9:	je     0x1002cdf4
1002cdeb:	push   DWORD PTR [esp+0x20]
1002cdef:	call   0x10009f97
1002cdf4:	push   edi
1002cdf5:	push   0x1
1002cdf7:	lea    ecx,[esp+0x1ac]
1002cdfe:	call   0x100012eb
1002ce03:	push   edi
1002ce04:	push   0x1
1002ce06:	lea    ecx,[esp+0x1c8]
1002ce0d:	call   0x100012eb
1002ce12:	mov    bl,0x1
1002ce14:	jmp    0x1002c852
1002ce19:	push   ebp
1002ce1a:	sub    esp,0x400
1002ce20:	lea    ebp,[esp-0x4]
1002ce24:	mov    eax,ds:0x1007e030
1002ce29:	xor    eax,ebp
1002ce2b:	mov    DWORD PTR [ebp+0x400],eax
1002ce31:	push   0x44
1002ce33:	mov    eax,0x10060a12
1002ce38:	call   0x10059b25
1002ce3d:	xor    edi,edi
1002ce3f:	mov    DWORD PTR [ebp-0x4],edi
1002ce42:	mov    DWORD PTR [ebp-0x30],edi
1002ce45:	mov    eax,DWORD PTR [ebx]
1002ce47:	lea    edx,[ebp-0x1c]
1002ce4a:	mov    esi,ecx
1002ce4c:	push   edx
1002ce4d:	mov    DWORD PTR [ebp-0x1c],edi
1002ce50:	mov    ecx,DWORD PTR [eax]
1002ce52:	push   eax
1002ce53:	mov    DWORD PTR [ebp-0x28],esi
1002ce56:	call   DWORD PTR [ecx+0x28]
1002ce59:	call   0x100040d0
1002ce5e:	xor    esi,esi
1002ce60:	mov    DWORD PTR [ebp-0x4],edi
1002ce63:	inc    esi
1002ce64:	cmp    DWORD PTR [ebp-0x1c],edi
1002ce67:	mov    DWORD PTR [ebp-0x30],esi
1002ce6a:	je     0x1002cf9c
1002ce70:	mov    DWORD PTR [ebp-0x14],esi
1002ce73:	jmp    0x1002ce78
1002ce75:	xor    esi,esi
1002ce77:	inc    esi
1002ce78:	lea    eax,[ebp-0x40]
1002ce7b:	push   eax
1002ce7c:	call   DWORD PTR ds:0x1006628c
1002ce82:	mov    eax,DWORD PTR [ebp-0x14]
1002ce85:	mov    DWORD PTR [ebp-0x4],esi
1002ce88:	mov    WORD PTR [ebp-0x50],0x16
1002ce8e:	mov    DWORD PTR [ebp-0x48],eax
1002ce91:	lea    edx,[ebp-0x40]
1002ce94:	push   edx
1002ce95:	mov    BYTE PTR [ebp-0x4],0x2
1002ce99:	mov    eax,DWORD PTR [ebx]
1002ce9b:	mov    ecx,DWORD PTR [eax]
1002ce9d:	sub    esp,0x10
1002cea0:	mov    edi,esp
1002cea2:	lea    esi,[ebp-0x50]
1002cea5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1002cea6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1002cea7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1002cea8:	push   eax
1002cea9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1002ceaa:	call   DWORD PTR [ecx+0x20]
1002cead:	test   eax,eax
1002ceaf:	lea    eax,[ebp-0x50]
1002ceb2:	mov    BYTE PTR [ebp-0x4],0x1
1002ceb6:	mov    esi,DWORD PTR ds:0x10066294
1002cebc:	push   eax
1002cebd:	setge  BYTE PTR [ebp-0xd]
1002cec1:	call   esi
1002cec3:	cmp    BYTE PTR [ebp-0xd],0x0
1002cec7:	je     0x1002cf82
1002cecd:	lea    ecx,[ebp-0x40]
1002ced0:	call   0x1002b04e
1002ced5:	xor    edi,edi
1002ced7:	cmp    eax,edi
1002ced9:	mov    DWORD PTR [ebp-0x18],edi
1002cedc:	je     0x1002ceec
1002cede:	mov    ecx,DWORD PTR [eax]
1002cee0:	lea    edx,[ebp-0x18]
1002cee3:	push   edx
1002cee4:	push   0x10072b14
1002cee9:	push   eax
1002ceea:	call   DWORD PTR [ecx]
1002ceec:	mov    BYTE PTR [ebp-0x4],0x3
1002cef0:	mov    eax,DWORD PTR [ebp-0x18]
1002cef3:	lea    edx,[ebp-0x24]
1002cef6:	push   edx
1002cef7:	mov    DWORD PTR [ebp-0x24],edi
1002cefa:	mov    ecx,DWORD PTR [eax]
1002cefc:	push   eax
1002cefd:	call   DWORD PTR [ecx+0x24]
1002cf00:	mov    eax,DWORD PTR [ebx]
1002cf02:	mov    ecx,DWORD PTR [eax]
1002cf04:	lea    edx,[ebp-0x2c]
1002cf07:	push   edx
1002cf08:	push   DWORD PTR [ebp-0x14]
1002cf0b:	push   eax
1002cf0c:	call   DWORD PTR [ecx+0x24]
1002cf0f:	test   eax,eax
1002cf11:	jl     0x1002cf71
1002cf13:	mov    ecx,DWORD PTR [ebp-0x2c]
1002cf16:	push   edi
1002cf17:	lea    edi,[ebp-0x20]
1002cf1a:	call   0x1000d8d3
1002cf1f:	mov    BYTE PTR [ebp-0x4],0x4
1002cf23:	mov    edi,DWORD PTR [ebp-0x28]
1002cf26:	cmp    DWORD PTR [edi+0x14],0x0
1002cf2a:	jbe    0x1002cf37
1002cf2c:	push   0x10072d54
1002cf31:	push   edi
1002cf32:	call   0x10004107
1002cf37:	lea    eax,[ebp-0x20]
1002cf3a:	call   0x1000d933
1002cf3f:	push   eax
1002cf40:	push   edi
1002cf41:	call   0x10004107
1002cf46:	push   0x1006dcc4
1002cf4b:	push   edi
1002cf4c:	call   0x10004107
1002cf51:	push   0xa
1002cf53:	lea    eax,[ebp+0x0]
1002cf56:	push   eax
1002cf57:	push   DWORD PTR [ebp-0x24]
1002cf5a:	call   0x10045be6
1002cf5f:	add    esp,0xc
1002cf62:	push   eax
1002cf63:	push   edi
1002cf64:	call   0x10004107
1002cf69:	lea    edi,[ebp-0x20]
1002cf6c:	call   0x100025b0
1002cf71:	mov    BYTE PTR [ebp-0x4],0x1
1002cf75:	mov    eax,DWORD PTR [ebp-0x18]
1002cf78:	test   eax,eax
1002cf7a:	je     0x1002cf82
1002cf7c:	mov    ecx,DWORD PTR [eax]
1002cf7e:	push   eax
1002cf7f:	call   DWORD PTR [ecx+0x8]
1002cf82:	lea    eax,[ebp-0x40]
1002cf85:	push   eax
1002cf86:	mov    BYTE PTR [ebp-0x4],0x0
1002cf8a:	call   esi
1002cf8c:	inc    DWORD PTR [ebp-0x14]
1002cf8f:	mov    eax,DWORD PTR [ebp-0x14]
1002cf92:	dec    eax
1002cf93:	cmp    eax,DWORD PTR [ebp-0x1c]
1002cf96:	jne    0x1002ce75
1002cf9c:	mov    eax,DWORD PTR [ebp-0x28]
1002cf9f:	mov    ecx,DWORD PTR [ebp-0xc]
1002cfa2:	mov    DWORD PTR fs:0x0,ecx
1002cfa9:	pop    ecx
1002cfaa:	pop    edi
1002cfab:	pop    esi
1002cfac:	pop    ebx
1002cfad:	mov    ecx,DWORD PTR [ebp+0x400]
1002cfb3:	xor    ecx,ebp
1002cfb5:	call   0x10042f87
1002cfba:	add    ebp,0x404
1002cfc0:	leave  
1002cfc1:	ret    
1002cfc2:	push   ebp
1002cfc3:	sub    esp,0x60
1002cfc6:	lea    ebp,[esp-0x4]
1002cfca:	mov    eax,ds:0x1007e030
1002cfcf:	xor    eax,ebp
1002cfd1:	mov    DWORD PTR [ebp+0x60],eax
1002cfd4:	push   0x54
1002cfd6:	mov    eax,0x1006403b
1002cfdb:	call   0x10059b25
1002cfe0:	mov    eax,DWORD PTR [ebp+0x6c]
1002cfe3:	mov    ebx,DWORD PTR [eax]
1002cfe5:	mov    DWORD PTR [ebp+0x4],ebx
1002cfe8:	and    DWORD PTR [ebp-0x4],0x0
1002cfec:	mov    eax,DWORD PTR [eax+0x4]
1002cfef:	mov    DWORD PTR [ebp+0x8],eax
1002cff2:	push   ebx
1002cff3:	lea    ecx,[ebp+0x44]
1002cff6:	mov    BYTE PTR [ebp-0x4],0x1
1002cffa:	call   0x10008c7d
1002cfff:	sub    esp,0x10
1002d002:	mov    BYTE PTR [ebp-0x4],0x2
1002d006:	mov    edi,esp
1002d008:	mov    esi,0x1006f538
1002d00d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1002d00e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1002d00f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1002d010:	push   ebx
1002d011:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1002d012:	call   0x1000887a
1002d017:	mov    edi,eax
1002d019:	xor    esi,esi
1002d01b:	cmp    edi,esi
1002d01d:	jne    0x1002d041
1002d01f:	push   esi
1002d020:	push   0x1
1002d022:	lea    ecx,[ebp+0x44]
1002d025:	call   0x100012eb
1002d02a:	lea    eax,[ebp+0x8]
1002d02d:	mov    BYTE PTR [ebp-0x4],0x0
1002d031:	call   0x10009f1a
1002d036:	or     DWORD PTR [ebp-0x4],0xffffffff
1002d03a:	cmp    ebx,esi
1002d03c:	jmp    0x1002d23f
1002d041:	mov    eax,DWORD PTR [edi+0xc]
1002d044:	test   al,0x1
1002d046:	je     0x1002d01f
1002d048:	test   al,0x8
1002d04a:	jne    0x1002d10b
1002d050:	mov    eax,DWORD PTR [ebp+0x8]
1002d053:	mov    ecx,DWORD PTR [eax+0x10]
1002d056:	sub    ecx,DWORD PTR [ebx+0x10]
1002d059:	mov    eax,DWORD PTR [eax+0x14]
1002d05c:	sbb    eax,DWORD PTR [ebx+0x14]
1002d05f:	push   esi
1002d060:	push   0x2710
1002d065:	push   eax
1002d066:	push   ecx
1002d067:	call   0x1005f430
1002d06c:	add    eax,eax
1002d06e:	mov    ecx,0x4e20
1002d073:	cmp    eax,ecx
1002d075:	jae    0x1002d079
1002d077:	mov    eax,ecx
1002d079:	mov    ecx,DWORD PTR [edi+0x2c]
1002d07c:	push   eax
1002d07d:	push   ecx
1002d07e:	call   DWORD PTR ds:0x10066084
1002d084:	test   eax,eax
1002d086:	je     0x1002d0c3
1002d088:	cmp    DWORD PTR [ebp+0x5c],0x10
1002d08c:	mov    eax,DWORD PTR [ebp+0x48]
1002d08f:	jae    0x1002d094
1002d091:	lea    eax,[ebp+0x48]
1002d094:	push   eax
1002d095:	call   0x1000206e
1002d09a:	push   0x5
1002d09c:	call   0x100379e0
1002d0a1:	pop    ecx
1002d0a2:	pop    ecx
1002d0a3:	push   esi
1002d0a4:	push   0x1
1002d0a6:	lea    ecx,[ebp+0x44]
1002d0a9:	call   0x100012eb
1002d0ae:	lea    eax,[ebp+0x8]
1002d0b1:	mov    BYTE PTR [ebp-0x4],0x0
1002d0b5:	call   0x10009f1a
1002d0ba:	or     DWORD PTR [ebp-0x4],0xffffffff
1002d0be:	jmp    0x1002d241
1002d0c3:	mov    al,BYTE PTR [edi+0x28]
1002d0c6:	test   al,al
1002d0c8:	jne    0x1002d108
1002d0ca:	cmp    DWORD PTR [ebp+0x5c],0x10
1002d0ce:	mov    eax,DWORD PTR [ebp+0x48]
1002d0d1:	jae    0x1002d0d6
1002d0d3:	lea    eax,[ebp+0x48]
1002d0d6:	push   eax
1002d0d7:	call   0x1000206e
1002d0dc:	push   0x5
1002d0de:	call   0x100379e0
1002d0e3:	pop    ecx
1002d0e4:	pop    ecx
1002d0e5:	push   esi
1002d0e6:	push   0x1
1002d0e8:	lea    ecx,[ebp+0x44]
1002d0eb:	call   0x100012eb
1002d0f0:	lea    eax,[ebp+0x8]
1002d0f3:	mov    BYTE PTR [ebp-0x4],0x0
1002d0f7:	call   0x10009f1a
1002d0fc:	or     DWORD PTR [ebp-0x4],0xffffffff
1002d100:	push   DWORD PTR [ebp+0x4]
1002d103:	jmp    0x1002d242
1002d108:	mov    ebx,DWORD PTR [ebp+0x4]
1002d10b:	push   0x10072e0c
1002d110:	push   0x10
1002d112:	push   0x1006de08
1002d117:	call   0x100042cf
1002d11c:	add    esp,0xc
1002d11f:	push   eax
1002d120:	lea    ecx,[ebp-0x44]
1002d123:	call   0x100011c8
1002d128:	push   esi
1002d129:	lea    eax,[ebp-0x44]
1002d12c:	push   eax
1002d12d:	lea    eax,[ebp-0x60]
1002d130:	push   eax
1002d131:	mov    BYTE PTR [ebp-0x4],0x3
1002d135:	mov    eax,DWORD PTR [ebp+0x8]
1002d138:	add    eax,0x20
1002d13b:	call   0x10008602
1002d140:	mov    BYTE PTR [ebp-0x4],0x4
1002d144:	cmp    DWORD PTR [eax+0x18],0x10
1002d148:	jb     0x1002d14f
1002d14a:	mov    eax,DWORD PTR [eax+0x4]
1002d14d:	jmp    0x1002d152
1002d14f:	add    eax,0x4
1002d152:	push   eax
1002d153:	lea    ecx,[ebp-0x28]
1002d156:	call   0x100011c8
1002d15b:	lea    eax,[ebp-0x28]
1002d15e:	push   eax
1002d15f:	lea    esi,[ebp+0xc]
1002d162:	mov    BYTE PTR [ebp-0x4],0x5
1002d166:	call   0x1002fa90
1002d16b:	pop    ecx
1002d16c:	xor    esi,esi
1002d16e:	push   esi
1002d16f:	push   0x1
1002d171:	lea    ecx,[ebp-0x28]
1002d174:	call   0x100012eb
1002d179:	push   esi
1002d17a:	push   0x1
1002d17c:	lea    ecx,[ebp-0x60]
1002d17f:	call   0x100012eb
1002d184:	push   esi
1002d185:	push   0x1
1002d187:	lea    ecx,[ebp-0x44]
1002d18a:	mov    BYTE PTR [ebp-0x4],0x9
1002d18e:	call   0x100012eb
1002d193:	lea    esi,[edi+0x20]
1002d196:	mov    eax,DWORD PTR [esi]
1002d198:	push   0x1
1002d19a:	mov    DWORD PTR [ebp+0x0],eax
1002d19d:	lea    eax,[edi+0x24]
1002d1a0:	push   eax
1002d1a1:	lea    eax,[ebp+0x44]
1002d1a4:	push   eax
1002d1a5:	push   DWORD PTR [ebp+0x8]
1002d1a8:	push   ebx
1002d1a9:	push   DWORD PTR [edi+0x8]
1002d1ac:	call   0x100228e3
1002d1b1:	mov    ecx,DWORD PTR [ebp+0x0]
1002d1b4:	push   eax
1002d1b5:	call   0x1002307a
1002d1ba:	test   al,al
1002d1bc:	jne    0x1002d1db
1002d1be:	cmp    DWORD PTR [ebp+0x5c],0x10
1002d1c2:	mov    eax,DWORD PTR [ebp+0x48]
1002d1c5:	jae    0x1002d1ca
1002d1c7:	lea    eax,[ebp+0x48]
1002d1ca:	push   eax
1002d1cb:	call   0x1000206e
1002d1d0:	push   0x7
1002d1d2:	call   0x100379e0
1002d1d7:	pop    ecx
1002d1d8:	pop    ecx
1002d1d9:	jmp    0x1002d215
1002d1db:	mov    ebx,esi
1002d1dd:	lea    ecx,[ebp+0x28]
1002d1e0:	call   0x1002ce19
1002d1e5:	cmp    DWORD PTR [ebp+0x40],0x10
1002d1e9:	mov    ecx,DWORD PTR [ebp+0x2c]
1002d1ec:	jae    0x1002d1f1
1002d1ee:	lea    ecx,[ebp+0x2c]
1002d1f1:	cmp    DWORD PTR [ebp+0x5c],0x10
1002d1f5:	mov    eax,DWORD PTR [ebp+0x48]
1002d1f8:	jae    0x1002d1fd
1002d1fa:	lea    eax,[ebp+0x48]
1002d1fd:	push   ecx
1002d1fe:	push   eax
1002d1ff:	call   0x1000206e
1002d204:	pop    ecx
1002d205:	pop    ecx
1002d206:	push   0x0
1002d208:	push   0x1
1002d20a:	lea    ecx,[ebp+0x28]
1002d20d:	call   0x100012eb
1002d212:	mov    ebx,DWORD PTR [ebp+0x4]
1002d215:	push   0x0
1002d217:	push   0x1
1002d219:	lea    ecx,[ebp+0xc]
1002d21c:	call   0x100012eb
1002d221:	push   0x0
1002d223:	push   0x1
1002d225:	lea    ecx,[ebp+0x44]
1002d228:	call   0x100012eb
1002d22d:	lea    eax,[ebp+0x8]
1002d230:	mov    BYTE PTR [ebp-0x4],0x0
1002d234:	call   0x10009f1a
1002d239:	or     DWORD PTR [ebp-0x4],0xffffffff
1002d23d:	test   ebx,ebx
1002d23f:	je     0x1002d247
1002d241:	push   ebx
1002d242:	call   0x10009f97
1002d247:	xor    eax,eax
1002d249:	mov    ecx,DWORD PTR [ebp-0xc]
1002d24c:	mov    DWORD PTR fs:0x0,ecx
1002d253:	pop    ecx
1002d254:	pop    edi
1002d255:	pop    esi
1002d256:	pop    ebx
1002d257:	mov    ecx,DWORD PTR [ebp+0x60]
1002d25a:	xor    ecx,ebp
1002d25c:	call   0x10042f87
1002d261:	add    ebp,0x64
1002d264:	leave  
1002d265:	ret    0x4
1002d268:	push   ebx
1002d269:	push   ebp
1002d26a:	mov    ebp,DWORD PTR [esp+0xc]
1002d26e:	mov    eax,DWORD PTR [ebp+0x0]
1002d271:	mov    eax,DWORD PTR [eax]
1002d273:	push   esi
1002d274:	push   edi
1002d275:	sub    esp,0x10
1002d278:	mov    edi,esp
1002d27a:	mov    esi,0x1006f538
1002d27f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1002d280:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1002d281:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1002d282:	push   eax
1002d283:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1002d284:	call   0x1000887a
1002d289:	test   eax,eax
1002d28b:	jne    0x1002d291
1002d28d:	xor    al,al
1002d28f:	jmp    0x1002d2ca
1002d291:	push   0x8
1002d293:	call   0x1004358e
1002d298:	pop    ecx
1002d299:	mov    ecx,DWORD PTR [ebp+0x0]
1002d29c:	mov    edx,DWORD PTR [ecx]
1002d29e:	xor    ebx,ebx
1002d2a0:	push   ebx
1002d2a1:	push   ebx
1002d2a2:	mov    DWORD PTR [ecx],ebx
1002d2a4:	push   eax
1002d2a5:	mov    DWORD PTR [eax],edx
1002d2a7:	mov    ecx,DWORD PTR [ebp+0x4]
1002d2aa:	mov    edx,DWORD PTR [ecx]
1002d2ac:	push   0x1002cfc2
1002d2b1:	push   ebx
1002d2b2:	mov    DWORD PTR [ecx],ebx
1002d2b4:	push   ebx
1002d2b5:	mov    DWORD PTR [eax+0x4],edx
1002d2b8:	call   DWORD PTR ds:0x10066098
1002d2be:	push   ebx
1002d2bf:	mov    BYTE PTR [ebp+0x8],bl
1002d2c2:	call   0x10042f82
1002d2c7:	pop    ecx
1002d2c8:	mov    al,0x1
1002d2ca:	pop    edi
1002d2cb:	pop    esi
1002d2cc:	pop    ebp
1002d2cd:	pop    ebx
1002d2ce:	ret    0x4
1002d2d1:	mov    ecx,DWORD PTR [eax]
1002d2d3:	test   ecx,ecx
1002d2d5:	je     0x1002d2de
1002d2d7:	mov    eax,DWORD PTR [ecx]
1002d2d9:	push   0x1
1002d2db:	call   DWORD PTR [eax+0x4]
1002d2de:	ret    
1002d2df:	push   edi
1002d2e0:	mov    edi,DWORD PTR [esp+0x14]
1002d2e4:	mov    ecx,0x1007f9d0
1002d2e9:	call   0x10010534
1002d2ee:	pop    edi
1002d2ef:	ret    0x10
1002d2f2:	push   DWORD PTR [esp+0x18]
1002d2f6:	mov    eax,0x1007f9d0
1002d2fb:	push   DWORD PTR [esp+0x14]
1002d2ff:	push   DWORD PTR [esp+0x14]
1002d303:	call   0x10010562
1002d308:	ret    0x18
1002d30b:	push   ebp
1002d30c:	mov    ebp,esp
1002d30e:	push   DWORD PTR [ebp+0x28]
1002d311:	mov    eax,0x1007f9d0
1002d316:	push   DWORD PTR [ebp+0x24]
1002d319:	push   DWORD PTR [ebp+0x20]
1002d31c:	push   DWORD PTR [ebp+0x1c]
1002d31f:	push   DWORD PTR [ebp+0x18]
1002d322:	push   DWORD PTR [ebp+0xc]
1002d325:	push   DWORD PTR [ebp+0x8]
1002d328:	call   0x10010605
1002d32d:	pop    ebp
1002d32e:	ret    0x24
1002d331:	push   edi
1002d332:	mov    edi,DWORD PTR [esp+0x14]
1002d336:	mov    ecx,0x1007f9ec
1002d33b:	call   0x10010534
1002d340:	pop    edi
1002d341:	ret    0x10
1002d344:	push   DWORD PTR [esp+0x18]
1002d348:	mov    eax,0x1007f9ec
1002d34d:	push   DWORD PTR [esp+0x14]
1002d351:	push   DWORD PTR [esp+0x14]
1002d355:	call   0x10010562
1002d35a:	ret    0x18
1002d35d:	push   ebp
1002d35e:	mov    ebp,esp
1002d360:	push   DWORD PTR [ebp+0x28]
1002d363:	mov    eax,0x1007f9ec
1002d368:	push   DWORD PTR [ebp+0x24]
1002d36b:	push   DWORD PTR [ebp+0x20]
1002d36e:	push   DWORD PTR [ebp+0x1c]
1002d371:	push   DWORD PTR [ebp+0x18]
1002d374:	push   DWORD PTR [ebp+0xc]
1002d377:	push   DWORD PTR [ebp+0x8]
1002d37a:	call   0x10010605
1002d37f:	pop    ebp
1002d380:	ret    0x24
1002d383:	mov    edx,DWORD PTR [esp+0x8]
1002d387:	test   edx,edx
1002d389:	jne    0x1002d392
1002d38b:	mov    eax,0x80004003
1002d390:	jmp    0x1002d3ad
1002d392:	mov    eax,DWORD PTR [esp+0x4]
1002d396:	mov    ecx,DWORD PTR [eax+0x8]
1002d399:	test   ecx,ecx
1002d39b:	jne    0x1002d3a1
1002d39d:	xor    eax,eax
1002d39f:	jmp    0x1002d3a9
1002d3a1:	mov    eax,DWORD PTR [eax+0xc]
1002d3a4:	sub    eax,ecx
1002d3a6:	sar    eax,0x4
1002d3a9:	mov    DWORD PTR [edx],eax
1002d3ab:	xor    eax,eax
1002d3ad:	ret    0x8
1002d3b0:	push   ebp
1002d3b1:	mov    ebp,esp
1002d3b3:	and    esp,0xfffffff8
1002d3b6:	sub    esp,0x14
1002d3b9:	cmp    DWORD PTR [ebp+0x10],0x0
1002d3bd:	push   ebx
1002d3be:	push   esi
1002d3bf:	push   edi
1002d3c0:	jne    0x1002d3cc
1002d3c2:	mov    eax,0x80004003
1002d3c7:	jmp    0x1002d48c
1002d3cc:	cmp    DWORD PTR [ebp+0xc],0x1
1002d3d0:	jge    0x1002d3dc
1002d3d2:	mov    eax,0x80070057
1002d3d7:	jmp    0x1002d48c
1002d3dc:	mov    ebx,DWORD PTR [ebp+0x8]
1002d3df:	mov    esi,DWORD PTR [ebx+0x8]
1002d3e2:	dec    DWORD PTR [ebp+0xc]
1002d3e5:	add    ebx,0x4
1002d3e8:	cmp    esi,DWORD PTR [ebx+0x8]
1002d3eb:	mov    DWORD PTR [esp+0xc],0x80004005
1002d3f3:	jbe    0x1002d3fa
1002d3f5:	call   0x100434a0
1002d3fa:	mov    edi,ebx
1002d3fc:	mov    DWORD PTR [esp+0x10],edi
1002d400:	mov    DWORD PTR [esp+0x14],esi
1002d404:	mov    esi,DWORD PTR [ebx+0x8]
1002d407:	cmp    DWORD PTR [ebx+0x4],esi
1002d40a:	jbe    0x1002d411
1002d40c:	call   0x100434a0
1002d411:	test   edi,edi
1002d413:	je     0x1002d419
1002d415:	cmp    edi,ebx
1002d417:	je     0x1002d41e
1002d419:	call   0x100434a0
1002d41e:	cmp    DWORD PTR [esp+0x14],esi
1002d422:	je     0x1002d440
1002d424:	cmp    DWORD PTR [ebp+0xc],0x0
1002d428:	jle    0x1002d440
1002d42a:	lea    edi,[esp+0x18]
1002d42e:	lea    esi,[esp+0x10]
1002d432:	call   0x1002df26
1002d437:	dec    DWORD PTR [ebp+0xc]
1002d43a:	mov    edi,DWORD PTR [esp+0x10]
1002d43e:	jmp    0x1002d404
1002d440:	mov    esi,DWORD PTR [ebx+0x8]
1002d443:	cmp    DWORD PTR [ebx+0x4],esi
1002d446:	jbe    0x1002d44d
1002d448:	call   0x100434a0
1002d44d:	test   edi,edi
1002d44f:	je     0x1002d455
1002d451:	cmp    edi,ebx
1002d453:	je     0x1002d45a
1002d455:	call   0x100434a0
1002d45a:	mov    ebx,DWORD PTR [esp+0x14]
1002d45e:	cmp    ebx,esi
1002d460:	je     0x1002d488
1002d462:	test   edi,edi
1002d464:	jne    0x1002d46b
1002d466:	call   0x100434a0
1002d46b:	cmp    ebx,DWORD PTR [edi+0x8]
1002d46e:	jb     0x1002d475
1002d470:	call   0x100434a0
1002d475:	mov    eax,DWORD PTR [ebp+0x10]
1002d478:	and    WORD PTR [eax],0x0
1002d47c:	push   ebx
1002d47d:	push   eax
1002d47e:	call   DWORD PTR ds:0x10066280
1002d484:	mov    DWORD PTR [esp+0xc],eax
1002d488:	mov    eax,DWORD PTR [esp+0xc]
1002d48c:	pop    edi
1002d48d:	pop    esi
1002d48e:	pop    ebx
1002d48f:	mov    esp,ebp
1002d491:	pop    ebp
1002d492:	ret    0xc
1002d495:	push   ebp
1002d496:	mov    ebp,esp
1002d498:	push   edi
1002d499:	mov    edi,DWORD PTR [ebp+0xc]
1002d49c:	test   edi,edi
1002d49e:	jne    0x1002d4a7
1002d4a0:	mov    eax,0x80004003
1002d4a5:	jmp    0x1002d4f2
1002d4a7:	and    DWORD PTR [edi],0x0
1002d4aa:	push   ebx
1002d4ab:	push   esi
1002d4ac:	lea    eax,[ebp+0xc]
1002d4af:	push   eax
1002d4b0:	call   0x1002eb8d
1002d4b5:	mov    ebx,DWORD PTR [ebp+0xc]
1002d4b8:	mov    esi,eax
1002d4ba:	test   esi,esi
1002d4bc:	jl     0x1002d4e1
1002d4be:	mov    eax,DWORD PTR [ebp+0x8]
1002d4c1:	lea    ecx,[eax+0x4]
1002d4c4:	push   ecx
1002d4c5:	call   0x1002dfb2
1002d4ca:	mov    esi,eax
1002d4cc:	test   esi,esi
1002d4ce:	jne    0x1002d4e1
1002d4d0:	mov    eax,DWORD PTR [ebx]
1002d4d2:	push   edi
1002d4d3:	push   0x1006dd70
1002d4d8:	push   ebx
1002d4d9:	call   DWORD PTR [eax]
1002d4db:	mov    esi,eax
1002d4dd:	test   esi,esi
1002d4df:	je     0x1002d4ee
1002d4e1:	test   ebx,ebx
1002d4e3:	je     0x1002d4ee
1002d4e5:	mov    eax,DWORD PTR [ebx]
1002d4e7:	push   0x1
1002d4e9:	mov    ecx,ebx
1002d4eb:	call   DWORD PTR [eax+0x1c]
1002d4ee:	mov    eax,esi
1002d4f0:	pop    esi
1002d4f1:	pop    ebx
1002d4f2:	pop    edi
1002d4f3:	pop    ebp
1002d4f4:	ret    0x8
1002d4f7:	mov    eax,DWORD PTR [esi+0x4]
1002d4fa:	test   eax,eax
1002d4fc:	je     0x1002d50f
1002d4fe:	push   DWORD PTR [esi+0x8]
1002d501:	call   0x1002e146
1002d506:	push   DWORD PTR [esi+0x4]
1002d509:	call   0x10042f82
1002d50e:	pop    ecx
1002d50f:	and    DWORD PTR [esi+0x4],0x0
1002d513:	and    DWORD PTR [esi+0x8],0x0
1002d517:	and    DWORD PTR [esi+0xc],0x0
1002d51b:	ret    
1002d51c:	push   ebp
1002d51d:	mov    ebp,esp
1002d51f:	and    esp,0xfffffff8
1002d522:	mov    edx,DWORD PTR [esi+0x4]
1002d525:	sub    esp,0xc
1002d528:	test   edx,edx
1002d52a:	push   edi
1002d52b:	jne    0x1002d531
1002d52d:	xor    ecx,ecx
1002d52f:	jmp    0x1002d539
1002d531:	mov    ecx,DWORD PTR [esi+0x8]
1002d534:	sub    ecx,edx
1002d536:	sar    ecx,0x4
1002d539:	test   edx,edx
1002d53b:	je     0x1002d55b
1002d53d:	mov    eax,DWORD PTR [esi+0xc]
1002d540:	sub    eax,edx
1002d542:	sar    eax,0x4
1002d545:	cmp    ecx,eax
1002d547:	jae    0x1002d55b
1002d549:	push   DWORD PTR [ebp+0x8]
1002d54c:	push   0x1
1002d54e:	push   DWORD PTR [esi+0x8]
1002d551:	call   0x1002dc31
1002d556:	mov    DWORD PTR [esi+0x8],eax
1002d559:	jmp    0x1002d578
1002d55b:	mov    edi,DWORD PTR [esi+0x8]
1002d55e:	cmp    edx,edi
1002d560:	jbe    0x1002d567
1002d562:	call   0x100434a0
1002d567:	push   edi
1002d568:	push   esi
1002d569:	push   DWORD PTR [ebp+0x8]
1002d56c:	lea    eax,[esp+0x14]
1002d570:	push   eax
1002d571:	mov    eax,esi
1002d573:	call   0x1002dbb1
1002d578:	pop    edi
1002d579:	mov    esp,ebp
1002d57b:	pop    ebp
1002d57c:	ret    0x4
1002d57f:	push   edi
1002d580:	mov    edi,DWORD PTR [esp+0x14]
1002d584:	mov    ecx,0x1007fa08
1002d589:	call   0x10010534
1002d58e:	pop    edi
1002d58f:	ret    0x10
1002d592:	push   DWORD PTR [esp+0x18]
1002d596:	mov    eax,0x1007fa08
1002d59b:	push   DWORD PTR [esp+0x14]
1002d59f:	push   DWORD PTR [esp+0x14]
1002d5a3:	call   0x10010562
1002d5a8:	ret    0x18
1002d5ab:	push   ebp
1002d5ac:	mov    ebp,esp
1002d5ae:	push   DWORD PTR [ebp+0x28]
1002d5b1:	mov    eax,0x1007fa08
1002d5b6:	push   DWORD PTR [ebp+0x24]
1002d5b9:	push   DWORD PTR [ebp+0x20]
1002d5bc:	push   DWORD PTR [ebp+0x1c]
1002d5bf:	push   DWORD PTR [ebp+0x18]
1002d5c2:	push   DWORD PTR [ebp+0xc]
1002d5c5:	push   DWORD PTR [ebp+0x8]
1002d5c8:	call   0x10010605
1002d5cd:	pop    ebp
1002d5ce:	ret    0x24
1002d5d1:	push   ebp
1002d5d2:	mov    ebp,esp
1002d5d4:	and    esp,0xfffffff8
1002d5d7:	sub    esp,0xc
1002d5da:	and    DWORD PTR [esp+0x4],0x0
1002d5df:	push   ebx
1002d5e0:	push   esi
1002d5e1:	push   edi
1002d5e2:	lea    eax,[esp+0x10]
1002d5e6:	push   eax
1002d5e7:	call   0x1002edeb
1002d5ec:	test   eax,eax
1002d5ee:	jl     0x1002d629
1002d5f0:	mov    esi,DWORD PTR [ebp+0x8]
1002d5f3:	mov    edi,DWORD PTR [esp+0x10]
1002d5f7:	add    esi,0x4
1002d5fa:	lea    ebx,[edi+0x8]
1002d5fd:	cmp    ebx,esi
1002d5ff:	je     0x1002d61d
1002d601:	mov    eax,DWORD PTR [ebx+0x4]
1002d604:	mov    ecx,DWORD PTR [eax]
1002d606:	push   eax
1002d607:	push   ebx
1002d608:	push   ecx
1002d609:	push   ebx
1002d60a:	lea    eax,[esp+0x20]
1002d60e:	push   eax
1002d60f:	call   0x1002e43b
1002d614:	mov    eax,esi
1002d616:	mov    ecx,ebx
1002d618:	call   0x1002f10d
1002d61d:	push   ebx
1002d61e:	push   edi
1002d61f:	mov    edi,DWORD PTR [ebp+0xc]
1002d622:	call   0x1002ee67
1002d627:	pop    ecx
1002d628:	pop    ecx
1002d629:	pop    edi
1002d62a:	pop    esi
1002d62b:	pop    ebx
1002d62c:	mov    esp,ebp
1002d62e:	pop    ebp
1002d62f:	ret    0x8
1002d632:	mov    eax,DWORD PTR [esp+0x8]
1002d636:	test   eax,eax
1002d638:	jne    0x1002d641
1002d63a:	mov    eax,0x80004003
1002d63f:	jmp    0x1002d64c
1002d641:	mov    ecx,DWORD PTR [esp+0x4]
1002d645:	mov    ecx,DWORD PTR [ecx+0xc]
1002d648:	mov    DWORD PTR [eax],ecx
1002d64a:	xor    eax,eax
1002d64c:	ret    0x8
1002d64f:	push   ebp
1002d650:	mov    ebp,esp
1002d652:	and    esp,0xfffffff8
1002d655:	sub    esp,0x14
1002d658:	cmp    DWORD PTR [ebp+0x10],0x0
1002d65c:	push   ebx
1002d65d:	push   esi
1002d65e:	push   edi
1002d65f:	jne    0x1002d66b
1002d661:	mov    eax,0x80004003
1002d666:	jmp    0x1002d700
1002d66b:	cmp    DWORD PTR [ebp+0xc],0x1
1002d66f:	jge    0x1002d67b
1002d671:	mov    eax,0x80070057
1002d676:	jmp    0x1002d700
1002d67b:	mov    ebx,DWORD PTR [ebp+0x8]
1002d67e:	dec    DWORD PTR [ebp+0xc]
1002d681:	mov    eax,DWORD PTR [ebx+0x8]
1002d684:	mov    eax,DWORD PTR [eax]
1002d686:	add    ebx,0x4
1002d689:	mov    DWORD PTR [esp+0xc],0x80004005
1002d691:	mov    DWORD PTR [esp+0x10],ebx
1002d695:	mov    DWORD PTR [esp+0x14],eax
1002d699:	mov    DWORD PTR [esp+0x18],ebx
1002d69d:	mov    eax,DWORD PTR [ebx+0x4]
1002d6a0:	lea    edi,[esp+0x18]
1002d6a4:	lea    esi,[esp+0x10]
1002d6a8:	mov    DWORD PTR [esp+0x1c],eax
1002d6ac:	call   0x10009d5c
1002d6b1:	test   al,al
1002d6b3:	jne    0x1002d6c5
1002d6b5:	cmp    DWORD PTR [ebp+0xc],0x0
1002d6b9:	jle    0x1002d6c5
1002d6bb:	call   0x1002de75
1002d6c0:	dec    DWORD PTR [ebp+0xc]
1002d6c3:	jmp    0x1002d69d
1002d6c5:	mov    eax,DWORD PTR [ebx+0x4]
1002d6c8:	lea    edi,[esp+0x18]
1002d6cc:	lea    esi,[esp+0x10]
1002d6d0:	mov    DWORD PTR [esp+0x1c],eax
1002d6d4:	mov    DWORD PTR [esp+0x18],ebx
1002d6d8:	call   0x10009d5c
1002d6dd:	test   al,al
1002d6df:	jne    0x1002d6fc
1002d6e1:	call   0x1002d8f6
1002d6e6:	mov    ecx,DWORD PTR [ebp+0x10]
1002d6e9:	and    WORD PTR [ecx],0x0
1002d6ed:	add    eax,0x8
1002d6f0:	push   eax
1002d6f1:	push   ecx
1002d6f2:	call   DWORD PTR ds:0x10066280
1002d6f8:	mov    DWORD PTR [esp+0xc],eax
1002d6fc:	mov    eax,DWORD PTR [esp+0xc]
1002d700:	pop    edi
1002d701:	pop    esi
1002d702:	pop    ebx
1002d703:	mov    esp,ebp
1002d705:	pop    ebp
1002d706:	ret    0xc
1002d709:	push   ebp
1002d70a:	mov    ebp,esp
1002d70c:	push   edi
1002d70d:	mov    edi,DWORD PTR [ebp+0xc]
1002d710:	test   edi,edi
1002d712:	jne    0x1002d71b
1002d714:	mov    eax,0x80004003
1002d719:	jmp    0x1002d766
1002d71b:	and    DWORD PTR [edi],0x0
1002d71e:	push   ebx
1002d71f:	push   esi
1002d720:	lea    eax,[ebp+0xc]
1002d723:	push   eax
1002d724:	call   0x1002eec4
1002d729:	mov    ebx,DWORD PTR [ebp+0xc]
1002d72c:	mov    esi,eax
1002d72e:	test   esi,esi
1002d730:	jl     0x1002d755
1002d732:	mov    eax,DWORD PTR [ebp+0x8]
1002d735:	lea    ecx,[eax+0x4]
1002d738:	push   ecx
1002d739:	call   0x1002e0a7
1002d73e:	mov    esi,eax
1002d740:	test   esi,esi
1002d742:	jne    0x1002d755
1002d744:	mov    eax,DWORD PTR [ebx]
1002d746:	push   edi
1002d747:	push   0x1006dd70
1002d74c:	push   ebx
1002d74d:	call   DWORD PTR [eax]
1002d74f:	mov    esi,eax
1002d751:	test   esi,esi
1002d753:	je     0x1002d762
1002d755:	test   ebx,ebx
1002d757:	je     0x1002d762
1002d759:	mov    eax,DWORD PTR [ebx]
1002d75b:	push   0x1
1002d75d:	mov    ecx,ebx
1002d75f:	call   DWORD PTR [eax+0x1c]
1002d762:	mov    eax,esi
1002d764:	pop    esi
1002d765:	pop    ebx
1002d766:	pop    edi
1002d767:	pop    ebp
1002d768:	ret    0x8
1002d76b:	call   0x1002e8e7
1002d770:	lea    ecx,[esi+0x4]
1002d773:	mov    DWORD PTR [ecx],eax
1002d775:	mov    BYTE PTR [eax+0x29],0x1
1002d779:	mov    eax,DWORD PTR [ecx]
1002d77b:	mov    DWORD PTR [eax+0x4],eax
1002d77e:	mov    eax,DWORD PTR [ecx]
1002d780:	mov    DWORD PTR [eax],eax
1002d782:	mov    ecx,DWORD PTR [ecx]
1002d784:	mov    DWORD PTR [ecx+0x8],ecx
1002d787:	and    DWORD PTR [esi+0x8],0x0
1002d78b:	mov    eax,esi
1002d78d:	ret    
1002d78e:	push   ebp
1002d78f:	mov    ebp,esp
1002d791:	and    esp,0xfffffff8
1002d794:	push   0xffffffff
1002d796:	push   0x1006005d
1002d79b:	mov    eax,fs:0x0
1002d7a1:	push   eax
1002d7a2:	sub    esp,0x40
1002d7a5:	push   ebx
1002d7a6:	push   esi
1002d7a7:	push   edi
1002d7a8:	mov    eax,ds:0x1007e030
1002d7ad:	xor    eax,esp
1002d7af:	push   eax
1002d7b0:	lea    eax,[esp+0x50]
1002d7b4:	mov    fs:0x0,eax
1002d7ba:	push   DWORD PTR [ebp+0xc]
1002d7bd:	mov    edi,DWORD PTR [ebp+0x8]
1002d7c0:	lea    ebx,[esp+0x18]
1002d7c4:	call   0x1002dde5
1002d7c9:	mov    eax,DWORD PTR [edi+0x4]
1002d7cc:	mov    DWORD PTR [esp+0x1c],edi
1002d7d0:	lea    edi,[esp+0x1c]
1002d7d4:	mov    esi,ebx
1002d7d6:	mov    DWORD PTR [esp+0x20],eax
1002d7da:	call   0x10009d5c
1002d7df:	test   al,al
1002d7e1:	mov    ebx,DWORD PTR [esp+0x18]
1002d7e5:	jne    0x1002d7f6
1002d7e7:	push   DWORD PTR [ebp+0xc]
1002d7ea:	lea    eax,[ebx+0x10]
1002d7ed:	call   0x1002de59
1002d7f2:	test   al,al
1002d7f4:	je     0x1002d86e
1002d7f6:	lea    eax,[esp+0x24]
1002d7fa:	push   eax
1002d7fb:	call   DWORD PTR ds:0x1006628c
1002d801:	mov    esi,DWORD PTR [ebp+0xc]
1002d804:	and    DWORD PTR [esp+0x58],0x0
1002d809:	lea    edi,[esp+0x34]
1002d80d:	call   0x1002b000
1002d812:	lea    eax,[esp+0x24]
1002d816:	mov    BYTE PTR [esp+0x58],0x1
1002d81b:	and    WORD PTR [esp+0x3c],0x0
1002d821:	push   eax
1002d822:	lea    esi,[esp+0x40]
1002d826:	call   0x1002b02e
1002d82b:	push   ebx
1002d82c:	mov    BYTE PTR [esp+0x5c],0x2
1002d831:	push   DWORD PTR [esp+0x18]
1002d835:	mov    eax,edi
1002d837:	push   eax
1002d838:	lea    eax,[esp+0x28]
1002d83c:	push   eax
1002d83d:	mov    eax,DWORD PTR [ebp+0x8]
1002d840:	call   0x1002dc61
1002d845:	mov    ecx,DWORD PTR [eax]
1002d847:	mov    eax,DWORD PTR [eax+0x4]
1002d84a:	mov    DWORD PTR [esp+0x18],eax
1002d84e:	mov    eax,esi
1002d850:	mov    esi,DWORD PTR ds:0x10066294
1002d856:	push   eax
1002d857:	mov    DWORD PTR [esp+0x18],ecx
1002d85b:	call   esi
1002d85d:	push   DWORD PTR [esp+0x34]
1002d861:	call   DWORD PTR ds:0x100662b4
1002d867:	lea    eax,[esp+0x24]
1002d86b:	push   eax
1002d86c:	call   esi
1002d86e:	lea    esi,[esp+0x14]
1002d872:	call   0x1002d8f6
1002d877:	add    eax,0x8
1002d87a:	mov    ecx,DWORD PTR [esp+0x50]
1002d87e:	mov    DWORD PTR fs:0x0,ecx
1002d885:	pop    ecx
1002d886:	pop    edi
1002d887:	pop    esi
1002d888:	pop    ebx
1002d889:	mov    esp,ebp
1002d88b:	pop    ebp
1002d88c:	ret    0x8
1002d88f:	push   ebp
1002d890:	mov    ebp,esp
1002d892:	sub    esp,0x18
1002d895:	push   ebx
1002d896:	push   esi
1002d897:	push   edi
1002d898:	push   DWORD PTR [ebp+0x10]
1002d89b:	mov    edi,DWORD PTR [ebp+0x8]
1002d89e:	lea    ebx,[ebp-0xc]
1002d8a1:	call   0x1002dde5
1002d8a6:	mov    eax,DWORD PTR [edi+0x4]
1002d8a9:	mov    DWORD PTR [ebp-0x14],edi
1002d8ac:	lea    edi,[ebp-0x14]
1002d8af:	mov    esi,ebx
1002d8b1:	mov    DWORD PTR [ebp-0x10],eax
1002d8b4:	call   0x10009d5c
1002d8b9:	test   al,al
1002d8bb:	jne    0x1002d8d3
1002d8bd:	mov    eax,DWORD PTR [ebp-0x8]
1002d8c0:	push   DWORD PTR [ebp+0x10]
1002d8c3:	add    eax,0x10
1002d8c6:	call   0x1002de59
1002d8cb:	test   al,al
1002d8cd:	jne    0x1002d8d3
1002d8cf:	mov    ecx,ebx
1002d8d1:	jmp    0x1002d8e2
1002d8d3:	mov    eax,DWORD PTR [ebp+0x8]
1002d8d6:	mov    ecx,DWORD PTR [eax+0x4]
1002d8d9:	mov    DWORD PTR [ebp-0x10],ecx
1002d8dc:	mov    DWORD PTR [ebp-0x14],eax
1002d8df:	lea    ecx,[ebp-0x14]
1002d8e2:	mov    edx,DWORD PTR [ecx]
1002d8e4:	mov    eax,DWORD PTR [ebp+0xc]
1002d8e7:	mov    ecx,DWORD PTR [ecx+0x4]
1002d8ea:	pop    edi
1002d8eb:	pop    esi
1002d8ec:	mov    DWORD PTR [eax],edx
1002d8ee:	mov    DWORD PTR [eax+0x4],ecx
1002d8f1:	pop    ebx
1002d8f2:	leave  
1002d8f3:	ret    0xc
1002d8f6:	cmp    DWORD PTR [esi],0x0
1002d8f9:	jne    0x1002d900
1002d8fb:	call   0x100434a0
1002d900:	mov    eax,DWORD PTR [esi]
1002d902:	mov    ecx,DWORD PTR [esi+0x4]
1002d905:	cmp    ecx,DWORD PTR [eax+0x4]
1002d908:	jne    0x1002d90f
1002d90a:	call   0x100434a0
1002d90f:	mov    eax,DWORD PTR [esi+0x4]
1002d912:	add    eax,0x10
1002d915:	ret    
1002d916:	push   esi
1002d917:	mov    esi,ecx
1002d919:	mov    DWORD PTR [esi],0x10072ed4
1002d91f:	mov    DWORD PTR [esi+0x10],0xc0000001
1002d926:	mov    ecx,DWORD PTR ds:0x10080c04
1002d92c:	mov    eax,DWORD PTR [ecx]
1002d92e:	call   DWORD PTR [eax+0x8]
1002d931:	lea    eax,[esi+0x4]
1002d934:	pop    esi
1002d935:	jmp    0x1002de24
1002d93a:	mov    eax,DWORD PTR [esp+0x4]
1002d93e:	inc    DWORD PTR [eax+0x10]
1002d941:	mov    eax,DWORD PTR [eax+0x10]
1002d944:	ret    0x4
1002d947:	mov    ecx,DWORD PTR [esp+0x4]
1002d94b:	dec    DWORD PTR [ecx+0x10]
1002d94e:	push   esi
1002d94f:	mov    esi,DWORD PTR [ecx+0x10]
1002d952:	jne    0x1002d95f
1002d954:	test   ecx,ecx
1002d956:	je     0x1002d95f
1002d958:	mov    eax,DWORD PTR [ecx]
1002d95a:	push   0x1
1002d95c:	call   DWORD PTR [eax+0x34]
1002d95f:	mov    eax,esi
1002d961:	pop    esi
1002d962:	ret    0x4
1002d965:	push   ebx
1002d966:	push   DWORD PTR [esp+0xc]
1002d96a:	mov    ebx,DWORD PTR [esp+0x14]
1002d96e:	push   DWORD PTR [esp+0xc]
1002d972:	mov    eax,0x10072b7c
1002d977:	call   0x10010413
1002d97c:	pop    ebx
1002d97d:	ret    0xc
1002d980:	push   esi
1002d981:	mov    esi,ecx
1002d983:	mov    DWORD PTR [esi],0x10072ea4
1002d989:	mov    DWORD PTR [esi+0x14],0xc0000001
1002d990:	mov    ecx,DWORD PTR ds:0x10080c04
1002d996:	mov    eax,DWORD PTR [ecx]
1002d998:	call   DWORD PTR [eax+0x8]
1002d99b:	add    esi,0x4
1002d99e:	call   0x1002d4f7
1002d9a3:	pop    esi
1002d9a4:	ret    
1002d9a5:	mov    ecx,DWORD PTR [esp+0x4]
1002d9a9:	dec    DWORD PTR [ecx+0x14]
1002d9ac:	push   esi
1002d9ad:	mov    esi,DWORD PTR [ecx+0x14]
1002d9b0:	jne    0x1002d9bd
1002d9b2:	test   ecx,ecx
1002d9b4:	je     0x1002d9bd
1002d9b6:	mov    eax,DWORD PTR [ecx]
1002d9b8:	push   0x1
1002d9ba:	call   DWORD PTR [eax+0x2c]
1002d9bd:	mov    eax,esi
1002d9bf:	pop    esi
1002d9c0:	ret    0x4
1002d9c3:	push   ebx
1002d9c4:	push   DWORD PTR [esp+0xc]
1002d9c8:	mov    ebx,DWORD PTR [esp+0x14]
1002d9cc:	push   DWORD PTR [esp+0xc]
1002d9d0:	mov    eax,0x10072b58
1002d9d5:	call   0x10010413
1002d9da:	pop    ebx
1002d9db:	ret    0xc
1002d9de:	push   esi
1002d9df:	mov    esi,ecx
1002d9e1:	mov    DWORD PTR [esi],0x10072e6c
1002d9e7:	mov    DWORD PTR [esi+0x4],0xc0000001
1002d9ee:	mov    ecx,DWORD PTR ds:0x10080c04
1002d9f4:	mov    eax,DWORD PTR [ecx]
1002d9f6:	call   DWORD PTR [eax+0x8]
1002d9f9:	call   0x1002db86
1002d9fe:	pop    esi
1002d9ff:	ret    
1002da00:	mov    ecx,DWORD PTR [esp+0x4]
1002da04:	dec    DWORD PTR [ecx+0x4]
1002da07:	push   esi
1002da08:	mov    esi,DWORD PTR [ecx+0x4]
1002da0b:	jne    0x1002da18
1002da0d:	test   ecx,ecx
1002da0f:	je     0x1002da18
1002da11:	mov    eax,DWORD PTR [ecx]
1002da13:	push   0x1
1002da15:	call   DWORD PTR [eax+0x34]
1002da18:	mov    eax,esi
1002da1a:	pop    esi
1002da1b:	ret    0x4
1002da1e:	push   ebx
1002da1f:	push   DWORD PTR [esp+0xc]
1002da23:	mov    ebx,DWORD PTR [esp+0x14]
1002da27:	push   DWORD PTR [esp+0xc]
1002da2b:	mov    eax,0x10072b34
1002da30:	call   0x10010413
1002da35:	pop    ebx
1002da36:	ret    0xc
1002da39:	push   0x44
1002da3b:	mov    eax,0x10060eb6
1002da40:	call   0x10059b25
1002da45:	mov    esi,DWORD PTR [ebp+0x8]
1002da48:	xor    ebx,ebx
1002da4a:	mov    DWORD PTR [ebp-0x14],ebx
1002da4d:	mov    DWORD PTR [esi+0x4],ebx
1002da50:	mov    DWORD PTR [esi+0x8],ebx
1002da53:	mov    DWORD PTR [esi+0xc],ebx
1002da56:	xor    edi,edi
1002da58:	inc    edi
1002da59:	mov    DWORD PTR [ebp-0x4],ebx
1002da5c:	push   0x10072b00
1002da61:	mov    DWORD PTR [ebp-0x14],edi
1002da64:	call   0x10043100
1002da69:	pop    ecx
1002da6a:	mov    DWORD PTR [ebp-0x18],eax
1002da6d:	mov    DWORD PTR [ebp-0x10],ebx
1002da70:	push   DWORD PTR [ebp-0x10]
1002da73:	push   0x10072b00
1002da78:	push   DWORD PTR [ebp+0xc]
1002da7b:	call   0x1000c970
1002da80:	mov    ebx,eax
1002da82:	cmp    ebx,0xffffffff
1002da85:	jne    0x1002da8d
1002da87:	mov    eax,DWORD PTR [ebp+0xc]
1002da8a:	mov    ebx,DWORD PTR [eax+0x14]
1002da8d:	cmp    ebx,DWORD PTR [ebp-0x10]
1002da90:	jb     0x1002dae1
1002da92:	mov    eax,ebx
1002da94:	sub    eax,DWORD PTR [ebp-0x10]
1002da97:	push   eax
1002da98:	push   DWORD PTR [ebp-0x10]
1002da9b:	lea    eax,[ebp-0x50]
1002da9e:	push   DWORD PTR [ebp+0xc]
1002daa1:	call   0x1000c98f
1002daa6:	lea    ecx,[ebp-0x34]
1002daa9:	push   ecx
1002daaa:	mov    ecx,eax
1002daac:	mov    DWORD PTR [ebp-0x4],edi
1002daaf:	call   0x1002dec2
1002dab4:	pop    ecx
1002dab5:	push   eax
1002dab6:	mov    BYTE PTR [ebp-0x4],0x2
1002daba:	call   0x1000f890
1002dabf:	push   0x0
1002dac1:	push   edi
1002dac2:	lea    ecx,[ebp-0x34]
1002dac5:	call   0x100012eb
1002daca:	push   0x0
1002dacc:	push   edi
1002dacd:	lea    ecx,[ebp-0x50]
1002dad0:	mov    BYTE PTR [ebp-0x4],0x0
1002dad4:	call   0x100012eb
1002dad9:	mov    eax,DWORD PTR [ebp-0x18]
1002dadc:	add    ebx,eax
1002dade:	mov    DWORD PTR [ebp-0x10],ebx
1002dae1:	mov    eax,DWORD PTR [ebp-0x10]
1002dae4:	mov    ecx,DWORD PTR [ebp+0xc]
1002dae7:	cmp    eax,DWORD PTR [ecx+0x14]
1002daea:	jb     0x1002da70
1002daec:	mov    eax,esi
1002daee:	call   0x10059bfd
1002daf3:	ret    
1002daf4:	push   esi
1002daf5:	mov    esi,DWORD PTR [eax]
1002daf7:	test   esi,esi
1002daf9:	je     0x1002db1d
1002dafb:	mov    eax,DWORD PTR [esi+0x30]
1002dafe:	sub    eax,0x10
1002db01:	call   0x1000206f
1002db06:	lea    eax,[esi+0x20]
1002db09:	call   0x1002bebc
1002db0e:	lea    eax,[esi+0x10]
1002db11:	call   0x1002bebc
1002db16:	push   esi
1002db17:	call   0x10042f82
1002db1c:	pop    ecx
1002db1d:	pop    esi
1002db1e:	ret    
1002db1f:	lea    eax,[esi+0x8]
1002db22:	push   eax
1002db23:	call   DWORD PTR ds:0x10066294
1002db29:	push   DWORD PTR [esi]
1002db2b:	call   DWORD PTR ds:0x100662b4
1002db31:	ret    
1002db32:	push   esi
1002db33:	mov    esi,ecx
1002db35:	call   0x1002d916
1002db3a:	test   BYTE PTR [esp+0x8],0x1
1002db3f:	je     0x1002db48
1002db41:	push   esi
1002db42:	call   0x10042f82
1002db47:	pop    ecx
1002db48:	mov    eax,esi
1002db4a:	pop    esi
1002db4b:	ret    0x4
1002db4e:	push   esi
1002db4f:	mov    esi,ecx
1002db51:	call   0x1002d980
1002db56:	test   BYTE PTR [esp+0x8],0x1
1002db5b:	je     0x1002db64
1002db5d:	push   esi
1002db5e:	call   0x10042f82
1002db63:	pop    ecx
1002db64:	mov    eax,esi
1002db66:	pop    esi
1002db67:	ret    0x4
1002db6a:	push   esi
1002db6b:	mov    esi,ecx
1002db6d:	call   0x1002d9de
1002db72:	test   BYTE PTR [esp+0x8],0x1
1002db77:	je     0x1002db80
1002db79:	push   esi
1002db7a:	call   0x10042f82
1002db7f:	pop    ecx
1002db80:	mov    eax,esi
1002db82:	pop    esi
1002db83:	ret    0x4
1002db86:	push   edi
1002db87:	lea    edi,[esi+0x18]
1002db8a:	call   0x100025b0
1002db8f:	lea    edi,[esi+0x14]
1002db92:	call   0x100025b0
1002db97:	lea    edi,[esi+0x10]
1002db9a:	call   0x100025b0
1002db9f:	lea    edi,[esi+0xc]
1002dba2:	call   0x100025b0
1002dba7:	lea    edi,[esi+0x8]
1002dbaa:	call   0x100025b0
1002dbaf:	pop    edi
1002dbb0:	ret    
1002dbb1:	push   ebp
1002dbb2:	mov    ebp,esp
1002dbb4:	push   ecx
1002dbb5:	push   ebx
1002dbb6:	push   esi
1002dbb7:	mov    esi,eax
1002dbb9:	mov    ebx,DWORD PTR [esi+0x4]
1002dbbc:	push   edi
1002dbbd:	xor    edi,edi
1002dbbf:	cmp    ebx,edi
1002dbc1:	je     0x1002dbef
1002dbc3:	mov    eax,DWORD PTR [esi+0x8]
1002dbc6:	mov    ecx,eax
1002dbc8:	sub    ecx,ebx
1002dbca:	sar    ecx,0x4
1002dbcd:	je     0x1002dbef
1002dbcf:	cmp    ebx,eax
1002dbd1:	jbe    0x1002dbd8
1002dbd3:	call   0x100434a0
1002dbd8:	cmp    DWORD PTR [ebp+0x10],edi
1002dbdb:	je     0x1002dbe2
1002dbdd:	cmp    DWORD PTR [ebp+0x10],esi
1002dbe0:	je     0x1002dbe7
1002dbe2:	call   0x100434a0
1002dbe7:	mov    edi,DWORD PTR [ebp+0x14]
1002dbea:	sub    edi,ebx
1002dbec:	sar    edi,0x4
1002dbef:	push   DWORD PTR [ebp+0x14]
1002dbf2:	push   DWORD PTR [ebp+0x10]
1002dbf5:	push   DWORD PTR [ebp+0xc]
1002dbf8:	push   esi
1002dbf9:	call   0x1002e15f
1002dbfe:	mov    ebx,DWORD PTR [esi+0x4]
1002dc01:	cmp    ebx,DWORD PTR [esi+0x8]
1002dc04:	jbe    0x1002dc0b
1002dc06:	call   0x100434a0
1002dc0b:	shl    edi,0x4
1002dc0e:	add    edi,ebx
1002dc10:	cmp    edi,DWORD PTR [esi+0x8]
1002dc13:	mov    DWORD PTR [ebp+0x14],ebx
1002dc16:	ja     0x1002dc1d
1002dc18:	cmp    edi,DWORD PTR [esi+0x4]
1002dc1b:	jae    0x1002dc22
1002dc1d:	call   0x100434a0
1002dc22:	mov    eax,DWORD PTR [ebp+0x8]
1002dc25:	mov    DWORD PTR [eax+0x4],edi
1002dc28:	pop    edi
1002dc29:	mov    DWORD PTR [eax],esi
1002dc2b:	pop    esi
1002dc2c:	pop    ebx
1002dc2d:	leave  
1002dc2e:	ret    0x10
1002dc31:	push   ebp
1002dc32:	mov    ebp,esp
1002dc34:	push   ecx
1002dc35:	push   edi
1002dc36:	xor    eax,eax
1002dc38:	lea    edi,[ebp-0x4]
1002dc3b:	stos   BYTE PTR es:[edi],al
1002dc3c:	push   DWORD PTR [ebp-0x4]
1002dc3f:	push   DWORD PTR [ebp+0xc]
1002dc42:	push   DWORD PTR [ebp+0x10]
1002dc45:	push   DWORD PTR [ebp+0xc]
1002dc48:	push   DWORD PTR [ebp+0x8]
1002dc4b:	call   0x1002f1e8
1002dc50:	mov    eax,DWORD PTR [ebp+0xc]
1002dc53:	add    esp,0x14
1002dc56:	shl    eax,0x4
1002dc59:	add    eax,DWORD PTR [ebp+0x8]
1002dc5c:	pop    edi
1002dc5d:	leave  
1002dc5e:	ret    0xc
1002dc61:	push   ebp
1002dc62:	mov    ebp,esp
1002dc64:	sub    esp,0x14
1002dc67:	push   ebx
1002dc68:	mov    ebx,eax
1002dc6a:	xor    eax,eax
1002dc6c:	cmp    DWORD PTR [ebx+0x8],eax
1002dc6f:	push   esi
1002dc70:	push   edi
1002dc71:	mov    DWORD PTR [ebp-0x8],eax
1002dc74:	mov    DWORD PTR [ebp-0x4],eax
1002dc77:	jne    0x1002dc93
1002dc79:	mov    ecx,DWORD PTR [ebx+0x4]
1002dc7c:	push   DWORD PTR [ebp+0xc]
1002dc7f:	push   0x1
1002dc81:	mov    esi,ebx
1002dc83:	push   DWORD PTR [ebp+0x8]
1002dc86:	call   0x1002e4e5
1002dc8b:	mov    eax,DWORD PTR [ebp+0x8]
1002dc8e:	jmp    0x1002ddde
1002dc93:	mov    eax,DWORD PTR [ebx+0x4]
1002dc96:	mov    eax,DWORD PTR [eax]
1002dc98:	lea    edi,[ebp-0x10]
1002dc9b:	lea    esi,[ebp+0x10]
1002dc9e:	mov    DWORD PTR [ebp-0xc],eax
1002dca1:	mov    DWORD PTR [ebp-0x10],ebx
1002dca4:	call   0x10009d5c
1002dca9:	test   al,al
1002dcab:	je     0x1002dcc7
1002dcad:	mov    esi,DWORD PTR [ebp+0x14]
1002dcb0:	push   DWORD PTR [ebp+0xc]
1002dcb3:	lea    eax,[esi+0x10]
1002dcb6:	call   0x1002de59
1002dcbb:	test   al,al
1002dcbd:	je     0x1002ddc3
1002dcc3:	mov    ecx,esi
1002dcc5:	jmp    0x1002dc7c
1002dcc7:	mov    eax,DWORD PTR [ebx+0x4]
1002dcca:	lea    edi,[ebp-0x10]
1002dccd:	lea    esi,[ebp+0x10]
1002dcd0:	mov    DWORD PTR [ebp-0xc],eax
1002dcd3:	mov    DWORD PTR [ebp-0x10],ebx
1002dcd6:	call   0x10009d5c
1002dcdb:	test   al,al
1002dcdd:	je     0x1002dd09
1002dcdf:	mov    eax,DWORD PTR [ebx+0x4]
1002dce2:	mov    eax,DWORD PTR [eax+0x8]
1002dce5:	add    eax,0x10
1002dce8:	push   eax
1002dce9:	mov    eax,DWORD PTR [ebp+0xc]
1002dcec:	call   0x1002de59
1002dcf1:	test   al,al
1002dcf3:	je     0x1002ddc3
1002dcf9:	push   DWORD PTR [ebp+0xc]
1002dcfc:	mov    eax,DWORD PTR [ebx+0x4]
1002dcff:	mov    ecx,DWORD PTR [eax+0x8]
1002dd02:	push   0x0
1002dd04:	jmp    0x1002dc81
1002dd09:	mov    edi,DWORD PTR [ebp+0x14]
1002dd0c:	push   DWORD PTR [ebp+0xc]
1002dd0f:	lea    eax,[edi+0x10]
1002dd12:	call   0x1002de59
1002dd17:	test   al,al
1002dd19:	je     0x1002dd60
1002dd1b:	mov    eax,DWORD PTR [ebp+0x10]
1002dd1e:	lea    esi,[ebp-0x8]
1002dd21:	mov    DWORD PTR [ebp-0x8],eax
1002dd24:	mov    DWORD PTR [ebp-0x4],edi
1002dd27:	call   0x1001912c
1002dd2c:	mov    eax,DWORD PTR [eax+0x4]
1002dd2f:	add    eax,0x10
1002dd32:	push   eax
1002dd33:	mov    eax,DWORD PTR [ebp+0xc]
1002dd36:	call   0x1002de59
1002dd3b:	test   al,al
1002dd3d:	je     0x1002dd60
1002dd3f:	mov    ecx,DWORD PTR [ebp-0x4]
1002dd42:	mov    eax,DWORD PTR [ecx+0x8]
1002dd45:	cmp    BYTE PTR [eax+0x29],0x0
1002dd49:	push   DWORD PTR [ebp+0xc]
1002dd4c:	mov    esi,ebx
1002dd4e:	je     0x1002dd57
1002dd50:	push   0x0
1002dd52:	jmp    0x1002dc83
1002dd57:	push   0x1
1002dd59:	mov    ecx,edi
1002dd5b:	jmp    0x1002dc83
1002dd60:	lea    eax,[edi+0x10]
1002dd63:	push   eax
1002dd64:	mov    eax,DWORD PTR [ebp+0xc]
1002dd67:	call   0x1002de59
1002dd6c:	test   al,al
1002dd6e:	je     0x1002ddc3
1002dd70:	mov    eax,DWORD PTR [ebp+0x10]
1002dd73:	mov    DWORD PTR [ebp-0x8],eax
1002dd76:	mov    eax,DWORD PTR [ebx+0x4]
1002dd79:	lea    esi,[ebp-0x8]
1002dd7c:	mov    DWORD PTR [ebp-0x4],edi
1002dd7f:	mov    DWORD PTR [ebp-0xc],eax
1002dd82:	mov    DWORD PTR [ebp-0x10],ebx
1002dd85:	call   0x1002de75
1002dd8a:	lea    edi,[ebp-0x10]
1002dd8d:	call   0x10009d5c
1002dd92:	test   al,al
1002dd94:	jne    0x1002dda8
1002dd96:	mov    eax,DWORD PTR [ebp-0x4]
1002dd99:	push   DWORD PTR [ebp+0xc]
1002dd9c:	add    eax,0x10
1002dd9f:	call   0x1002de59
1002dda4:	test   al,al
1002dda6:	je     0x1002ddc3
1002dda8:	mov    ecx,DWORD PTR [ebp+0x14]
1002ddab:	mov    eax,DWORD PTR [ecx+0x8]
1002ddae:	cmp    BYTE PTR [eax+0x29],0x0
1002ddb2:	push   DWORD PTR [ebp+0xc]
1002ddb5:	mov    esi,ebx
1002ddb7:	jne    0x1002dd50
1002ddb9:	mov    ecx,DWORD PTR [ebp-0x4]
1002ddbc:	push   0x1
1002ddbe:	jmp    0x1002dc83
1002ddc3:	push   DWORD PTR [ebp+0xc]
1002ddc6:	push   ebx
1002ddc7:	lea    ebx,[ebp-0x14]
1002ddca:	call   0x1002e379
1002ddcf:	mov    edx,DWORD PTR [eax]
1002ddd1:	mov    ecx,DWORD PTR [ebp+0x8]
1002ddd4:	mov    DWORD PTR [ecx],edx
1002ddd6:	mov    eax,DWORD PTR [eax+0x4]
1002ddd9:	mov    DWORD PTR [ecx+0x4],eax
1002dddc:	mov    eax,ecx
1002ddde:	pop    edi
1002dddf:	pop    esi
1002dde0:	pop    ebx
1002dde1:	leave  
1002dde2:	ret    0x10
1002dde5:	push   ebp
1002dde6:	mov    ebp,esp
1002dde8:	push   ecx
1002dde9:	mov    eax,DWORD PTR [edi+0x4]
1002ddec:	push   esi
1002dded:	mov    esi,DWORD PTR [eax+0x4]
1002ddf0:	mov    DWORD PTR [ebp-0x4],eax
1002ddf3:	jmp    0x1002de0f
1002ddf5:	lea    eax,[esi+0x10]
1002ddf8:	push   eax
1002ddf9:	mov    eax,DWORD PTR [ebp+0x8]
1002ddfc:	call   0x1002de59
1002de01:	test   al,al
1002de03:	je     0x1002de0a
1002de05:	mov    esi,DWORD PTR [esi+0x8]
1002de08:	jmp    0x1002de0f
1002de0a:	mov    DWORD PTR [ebp-0x4],esi
1002de0d:	mov    esi,DWORD PTR [esi]
1002de0f:	cmp    BYTE PTR [esi+0x29],0x0
1002de13:	je     0x1002ddf5
1002de15:	mov    eax,DWORD PTR [ebp-0x4]
1002de18:	mov    DWORD PTR [ebx+0x4],eax
1002de1b:	mov    DWORD PTR [ebx],edi
1002de1d:	mov    eax,ebx
1002de1f:	pop    esi
1002de20:	leave  
1002de21:	ret    0x4
1002de24:	push   ebp
1002de25:	mov    ebp,esp
1002de27:	and    esp,0xfffffff8
1002de2a:	sub    esp,0xc
1002de2d:	push   ebx
1002de2e:	mov    ebx,eax
1002de30:	mov    eax,DWORD PTR [ebx+0x4]
1002de33:	mov    ecx,DWORD PTR [eax]
1002de35:	push   eax
1002de36:	push   ebx
1002de37:	push   ecx
1002de38:	push   ebx
1002de39:	lea    eax,[esp+0x18]
1002de3d:	push   eax
1002de3e:	call   0x1002e43b
1002de43:	push   DWORD PTR [ebx+0x4]
1002de46:	call   0x10042f82
1002de4b:	and    DWORD PTR [ebx+0x4],0x0
1002de4f:	and    DWORD PTR [ebx+0x8],0x0
1002de53:	pop    ecx
1002de54:	pop    ebx
1002de55:	mov    esp,ebp
1002de57:	pop    ebp
1002de58:	ret    
1002de59:	push   0x0
1002de5b:	push   0x400
1002de60:	push   DWORD PTR [eax]
1002de62:	mov    eax,DWORD PTR [esp+0x10]
1002de66:	push   DWORD PTR [eax]
1002de68:	call   0x10056bca
1002de6d:	neg    eax
1002de6f:	sbb    eax,eax
1002de71:	inc    eax
1002de72:	ret    0x4
1002de75:	push   ebx
1002de76:	xor    ebx,ebx
1002de78:	cmp    DWORD PTR [esi],ebx
1002de7a:	jne    0x1002de81
1002de7c:	call   0x100434a0
1002de81:	mov    eax,DWORD PTR [esi+0x4]
1002de84:	cmp    BYTE PTR [eax+0x29],bl
1002de87:	je     0x1002de90
1002de89:	call   0x100434a0
1002de8e:	jmp    0x1002debe
1002de90:	mov    ecx,DWORD PTR [eax+0x8]
1002de93:	cmp    BYTE PTR [ecx+0x29],bl
1002de96:	jne    0x1002deb3
1002de98:	jmp    0x1002de9c
1002de9a:	mov    ecx,eax
1002de9c:	mov    eax,DWORD PTR [ecx]
1002de9e:	cmp    BYTE PTR [eax+0x29],bl
1002dea1:	je     0x1002de9a
1002dea3:	mov    DWORD PTR [esi+0x4],ecx
1002dea6:	jmp    0x1002debe
1002dea8:	mov    ecx,DWORD PTR [esi+0x4]
1002deab:	cmp    ecx,DWORD PTR [eax+0x8]
1002deae:	jne    0x1002debb
1002deb0:	mov    DWORD PTR [esi+0x4],eax
1002deb3:	mov    eax,DWORD PTR [eax+0x4]
1002deb6:	cmp    BYTE PTR [eax+0x29],bl
1002deb9:	je     0x1002dea8
1002debb:	mov    DWORD PTR [esi+0x4],eax
1002debe:	mov    eax,esi
1002dec0:	pop    ebx
1002dec1:	ret    
1002dec2:	push   0x20
1002dec4:	mov    eax,0x10060610
1002dec9:	call   0x10059b25
1002dece:	mov    ebx,ecx
1002ded0:	and    DWORD PTR [ebp-0x10],0x0
1002ded4:	call   0x1000f8ef
1002ded9:	mov    esi,eax
1002dedb:	call   0x1000f957
1002dee0:	cmp    eax,0xffffffff
1002dee3:	jne    0x1002deeb
1002dee5:	mov    eax,DWORD PTR [ebx+0x14]
1002dee8:	dec    eax
1002dee9:	jmp    0x1002deee
1002deeb:	sub    eax,esi
1002deed:	inc    eax
1002deee:	push   eax
1002deef:	mov    eax,esi
1002def1:	inc    eax
1002def2:	neg    eax
1002def4:	sbb    eax,eax
1002def6:	and    eax,esi
1002def8:	push   eax
1002def9:	push   ebx
1002defa:	lea    eax,[ebp-0x2c]
1002defd:	call   0x1000c98f
1002df02:	and    DWORD PTR [ebp-0x4],0x0
1002df06:	push   eax
1002df07:	push   DWORD PTR [ebp+0x8]
1002df0a:	call   0x1002e632
1002df0f:	pop    ecx
1002df10:	pop    ecx
1002df11:	push   0x0
1002df13:	push   0x1
1002df15:	lea    ecx,[ebp-0x2c]
1002df18:	call   0x100012eb
1002df1d:	mov    eax,DWORD PTR [ebp+0x8]
1002df20:	call   0x10059bfd
1002df25:	ret    
1002df26:	cmp    DWORD PTR [esi],0x0
1002df29:	mov    eax,DWORD PTR [esi]
1002df2b:	mov    DWORD PTR [edi],eax
1002df2d:	mov    eax,DWORD PTR [esi+0x4]
1002df30:	mov    DWORD PTR [edi+0x4],eax
1002df33:	jne    0x1002df3a
1002df35:	call   0x100434a0
1002df3a:	mov    eax,DWORD PTR [esi]
1002df3c:	mov    ecx,DWORD PTR [esi+0x4]
1002df3f:	cmp    ecx,DWORD PTR [eax+0x8]
1002df42:	jb     0x1002df49
1002df44:	call   0x100434a0
1002df49:	add    DWORD PTR [esi+0x4],0x10
1002df4d:	mov    eax,edi
1002df4f:	ret    
1002df50:	mov    eax,DWORD PTR [esi]
1002df52:	test   eax,eax
1002df54:	je     0x1002df5a
1002df56:	cmp    eax,DWORD PTR [edi]
1002df58:	je     0x1002df5f
1002df5a:	call   0x100434a0
1002df5f:	mov    eax,DWORD PTR [esi+0x4]
1002df62:	xor    ecx,ecx
1002df64:	cmp    eax,DWORD PTR [edi+0x4]
1002df67:	setne  cl
1002df6a:	mov    al,cl
1002df6c:	ret    
1002df6d:	push   esi
1002df6e:	mov    esi,ecx
1002df70:	mov    DWORD PTR [esi],0x10072f48
1002df76:	mov    DWORD PTR [esi+0x14],0xc0000001
1002df7d:	mov    ecx,DWORD PTR ds:0x10080c04
1002df83:	mov    eax,DWORD PTR [ecx]
1002df85:	call   DWORD PTR [eax+0x8]
1002df88:	mov    esi,DWORD PTR [esi+0x4]
1002df8b:	test   esi,esi
1002df8d:	je     0x1002df95
1002df8f:	mov    eax,DWORD PTR [esi]
1002df91:	push   esi
1002df92:	call   DWORD PTR [eax+0x8]
1002df95:	pop    esi
1002df96:	ret    
1002df97:	push   ebx
1002df98:	push   DWORD PTR [esp+0xc]
1002df9c:	mov    ebx,DWORD PTR [esp+0x14]
1002dfa0:	push   DWORD PTR [esp+0xc]
1002dfa4:	mov    eax,0x10072e34
1002dfa9:	call   0x10010413
1002dfae:	pop    ebx
1002dfaf:	ret    0xc
1002dfb2:	push   esi
1002dfb3:	push   edi
1002dfb4:	mov    edi,eax
1002dfb6:	lea    esi,[ebx+0x4]
1002dfb9:	cmp    DWORD PTR [esi],edi
1002dfbb:	je     0x1002dfc2
1002dfbd:	call   0x1000777b
1002dfc2:	mov    esi,DWORD PTR [esp+0xc]
1002dfc6:	mov    DWORD PTR [ebx+0x8],esi
1002dfc9:	mov    edi,DWORD PTR [esi+0x4]
1002dfcc:	cmp    edi,DWORD PTR [esi+0x8]
1002dfcf:	jbe    0x1002dfd6
1002dfd1:	call   0x100434a0
1002dfd6:	mov    DWORD PTR [ebx+0x10],edi
1002dfd9:	pop    edi
1002dfda:	mov    DWORD PTR [ebx+0xc],esi
1002dfdd:	xor    eax,eax
1002dfdf:	pop    esi
1002dfe0:	ret    0x4
1002dfe3:	push   esi
1002dfe4:	push   edi
1002dfe5:	mov    edi,DWORD PTR [esp+0xc]
1002dfe9:	mov    esi,DWORD PTR [edi+0x8]
1002dfec:	test   esi,esi
1002dfee:	jne    0x1002dff7
1002dff0:	mov    eax,0x80004005
1002dff5:	jmp    0x1002e00e
1002dff7:	push   ebx
1002dff8:	mov    ebx,DWORD PTR [esi+0x4]
1002dffb:	cmp    ebx,DWORD PTR [esi+0x8]
1002dffe:	jbe    0x1002e005
1002e000:	call   0x100434a0
1002e005:	mov    DWORD PTR [edi+0x10],ebx
1002e008:	mov    DWORD PTR [edi+0xc],esi
1002e00b:	xor    eax,eax
1002e00d:	pop    ebx
1002e00e:	pop    edi
1002e00f:	pop    esi
1002e010:	ret    0x4
1002e013:	push   esi
1002e014:	mov    esi,ecx
1002e016:	mov    DWORD PTR [esi],0x10072f68
1002e01c:	mov    DWORD PTR [esi+0x4],0xc0000001
1002e023:	mov    ecx,DWORD PTR ds:0x10080c04
1002e029:	mov    eax,DWORD PTR [ecx]
1002e02b:	call   DWORD PTR [eax+0x8]
1002e02e:	lea    eax,[esi+0x8]
1002e031:	pop    esi
1002e032:	jmp    0x1002de24
1002e037:	push   ebx
1002e038:	push   DWORD PTR [esp+0xc]
1002e03c:	mov    ebx,DWORD PTR [esp+0x14]
1002e040:	push   DWORD PTR [esp+0xc]
1002e044:	mov    eax,0x10072e4c
1002e049:	call   0x10010413
1002e04e:	pop    ebx
1002e04f:	ret    0xc
1002e052:	push   esi
1002e053:	mov    esi,ecx
1002e055:	mov    DWORD PTR [esi],0x10072f78
1002e05b:	mov    DWORD PTR [esi+0x14],0xc0000001
1002e062:	mov    ecx,DWORD PTR ds:0x10080c04
1002e068:	mov    eax,DWORD PTR [ecx]
1002e06a:	call   DWORD PTR [eax+0x8]
1002e06d:	mov    esi,DWORD PTR [esi+0x4]
1002e070:	test   esi,esi
1002e072:	je     0x1002e07a
1002e074:	mov    eax,DWORD PTR [esi]
1002e076:	push   esi
1002e077:	call   DWORD PTR [eax+0x8]
1002e07a:	pop    esi
1002e07b:	ret    
1002e07c:	mov    eax,DWORD PTR [esp+0x4]
1002e080:	inc    DWORD PTR [eax+0x14]
1002e083:	mov    eax,DWORD PTR [eax+0x14]
1002e086:	ret    0x4
1002e089:	mov    ecx,DWORD PTR [esp+0x4]
1002e08d:	dec    DWORD PTR [ecx+0x14]
1002e090:	push   esi
1002e091:	mov    esi,DWORD PTR [ecx+0x14]
1002e094:	jne    0x1002e0a1
1002e096:	test   ecx,ecx
1002e098:	je     0x1002e0a1
1002e09a:	mov    eax,DWORD PTR [ecx]
1002e09c:	push   0x1
1002e09e:	call   DWORD PTR [eax+0x1c]
1002e0a1:	mov    eax,esi
1002e0a3:	pop    esi
1002e0a4:	ret    0x4
1002e0a7:	push   esi
1002e0a8:	push   edi
1002e0a9:	mov    edi,eax
1002e0ab:	lea    esi,[ebx+0x4]
1002e0ae:	cmp    DWORD PTR [esi],edi
1002e0b0:	je     0x1002e0b7
1002e0b2:	call   0x1000777b
1002e0b7:	mov    eax,DWORD PTR [esp+0xc]
1002e0bb:	mov    DWORD PTR [ebx+0x8],eax
1002e0be:	mov    ecx,DWORD PTR [eax+0x4]
1002e0c1:	mov    ecx,DWORD PTR [ecx]
1002e0c3:	pop    edi
1002e0c4:	mov    DWORD PTR [ebx+0xc],eax
1002e0c7:	mov    DWORD PTR [ebx+0x10],ecx
1002e0ca:	xor    eax,eax
1002e0cc:	pop    esi
1002e0cd:	ret    0x4
1002e0d0:	mov    ecx,DWORD PTR [esp+0x4]
1002e0d4:	mov    eax,DWORD PTR [ecx+0x8]
1002e0d7:	test   eax,eax
1002e0d9:	jne    0x1002e0e2
1002e0db:	mov    eax,0x80004005
1002e0e0:	jmp    0x1002e0ef
1002e0e2:	mov    edx,DWORD PTR [eax+0x4]
1002e0e5:	mov    edx,DWORD PTR [edx]
1002e0e7:	mov    DWORD PTR [ecx+0xc],eax
1002e0ea:	mov    DWORD PTR [ecx+0x10],edx
1002e0ed:	xor    eax,eax
1002e0ef:	ret    0x4
1002e0f2:	push   esi
1002e0f3:	mov    esi,ecx
1002e0f5:	call   0x1002df6d
1002e0fa:	test   BYTE PTR [esp+0x8],0x1
1002e0ff:	je     0x1002e108
1002e101:	push   esi
1002e102:	call   0x10042f82
1002e107:	pop    ecx
1002e108:	mov    eax,esi
1002e10a:	pop    esi
1002e10b:	ret    0x4
1002e10e:	push   esi
1002e10f:	mov    esi,ecx
1002e111:	call   0x1002e013
1002e116:	test   BYTE PTR [esp+0x8],0x1
1002e11b:	je     0x1002e124
1002e11d:	push   esi
1002e11e:	call   0x10042f82
1002e123:	pop    ecx
1002e124:	mov    eax,esi
1002e126:	pop    esi
1002e127:	ret    0x4
1002e12a:	push   esi
1002e12b:	mov    esi,ecx
1002e12d:	call   0x1002e052
1002e132:	test   BYTE PTR [esp+0x8],0x1
1002e137:	je     0x1002e140
1002e139:	push   esi
1002e13a:	call   0x10042f82
1002e13f:	pop    ecx
1002e140:	mov    eax,esi
1002e142:	pop    esi
1002e143:	ret    0x4
1002e146:	push   esi
1002e147:	mov    esi,eax
1002e149:	jmp    0x1002e155
1002e14b:	push   esi
1002e14c:	call   DWORD PTR ds:0x10066294
1002e152:	add    esi,0x10
1002e155:	cmp    esi,DWORD PTR [esp+0x8]
1002e159:	jne    0x1002e14b
1002e15b:	pop    esi
1002e15c:	ret    0x4
1002e15f:	push   0x14
1002e161:	mov    eax,0x1006002a
1002e166:	call   0x10059b58
1002e16b:	mov    edi,DWORD PTR [ebp+0x8]
1002e16e:	push   DWORD PTR [ebp+0xc]
1002e171:	xor    ebx,ebx
1002e173:	lea    esi,[ebp-0x20]
1002e176:	mov    WORD PTR [ebp-0x20],bx
1002e17a:	call   0x1002b02e
1002e17f:	mov    DWORD PTR [ebp-0x4],ebx
1002e182:	mov    ecx,DWORD PTR [edi+0x4]
1002e185:	cmp    ecx,ebx
1002e187:	je     0x1002e191
1002e189:	mov    ebx,DWORD PTR [edi+0xc]
1002e18c:	sub    ebx,ecx
1002e18e:	sar    ebx,0x4
1002e191:	test   ecx,ecx
1002e193:	jne    0x1002e199
1002e195:	xor    eax,eax
1002e197:	jmp    0x1002e1a1
1002e199:	mov    eax,DWORD PTR [edi+0x8]
1002e19c:	sub    eax,ecx
1002e19e:	sar    eax,0x4
1002e1a1:	mov    edx,0xfffffff
1002e1a6:	mov    esi,edx
1002e1a8:	sub    esi,eax
1002e1aa:	mov    eax,esi
1002e1ac:	xor    esi,esi
1002e1ae:	inc    esi
1002e1af:	cmp    eax,esi
1002e1b1:	jae    0x1002e1b8
1002e1b3:	call   0x1000fb8b
1002e1b8:	test   ecx,ecx
1002e1ba:	jne    0x1002e1c0
1002e1bc:	xor    eax,eax
1002e1be:	jmp    0x1002e1c8
1002e1c0:	mov    eax,DWORD PTR [edi+0x8]
1002e1c3:	sub    eax,ecx
1002e1c5:	sar    eax,0x4
1002e1c8:	inc    eax
1002e1c9:	cmp    ebx,eax
1002e1cb:	jae    0x1002e2a4
1002e1d1:	mov    eax,ebx
1002e1d3:	shr    eax,1
1002e1d5:	sub    edx,eax
1002e1d7:	cmp    edx,ebx
1002e1d9:	jae    0x1002e1df
1002e1db:	xor    ebx,ebx
1002e1dd:	jmp    0x1002e1e1
1002e1df:	add    ebx,eax
1002e1e1:	test   ecx,ecx
1002e1e3:	jne    0x1002e1e9
1002e1e5:	xor    eax,eax
1002e1e7:	jmp    0x1002e1f1
1002e1e9:	mov    eax,DWORD PTR [edi+0x8]
1002e1ec:	sub    eax,ecx
1002e1ee:	sar    eax,0x4
1002e1f1:	inc    eax
1002e1f2:	cmp    ebx,eax
1002e1f4:	jae    0x1002e207
1002e1f6:	test   ecx,ecx
1002e1f8:	jne    0x1002e1fe
1002e1fa:	xor    ebx,ebx
1002e1fc:	jmp    0x1002e206
1002e1fe:	mov    ebx,DWORD PTR [edi+0x8]
1002e201:	sub    ebx,ecx
1002e203:	sar    ebx,0x4
1002e206:	inc    ebx
1002e207:	mov    ecx,ebx
1002e209:	call   0x1000fbca
1002e20e:	push   eax
1002e20f:	push   DWORD PTR [ebp+0x14]
1002e212:	mov    BYTE PTR [ebp-0x4],0x1
1002e216:	mov    ecx,DWORD PTR [edi+0x4]
1002e219:	mov    DWORD PTR [ebp+0xc],eax
1002e21c:	mov    DWORD PTR [ebp+0x8],eax
1002e21f:	call   0x1002f0e9
1002e224:	lea    ecx,[ebp-0x20]
1002e227:	push   ecx
1002e228:	push   esi
1002e229:	push   eax
1002e22a:	mov    DWORD PTR [ebp+0x8],eax
1002e22d:	call   0x1002dc31
1002e232:	mov    ecx,DWORD PTR [ebp+0x14]
1002e235:	push   eax
1002e236:	push   DWORD PTR [edi+0x8]
1002e239:	mov    DWORD PTR [ebp+0x8],eax
1002e23c:	call   0x1002f0e9
1002e241:	mov    eax,DWORD PTR [edi+0x4]
1002e244:	test   eax,eax
1002e246:	jne    0x1002e24c
1002e248:	xor    ecx,ecx
1002e24a:	jmp    0x1002e254
1002e24c:	mov    ecx,DWORD PTR [edi+0x8]
1002e24f:	sub    ecx,eax
1002e251:	sar    ecx,0x4
1002e254:	test   eax,eax
1002e256:	lea    esi,[ecx+0x1]
1002e259:	je     0x1002e26c
1002e25b:	push   DWORD PTR [edi+0x8]
1002e25e:	call   0x1002e146
1002e263:	push   DWORD PTR [edi+0x4]
1002e266:	call   0x10042f82
1002e26b:	pop    ecx
1002e26c:	mov    eax,DWORD PTR [ebp+0xc]
1002e26f:	shl    ebx,0x4
1002e272:	add    ebx,eax
1002e274:	shl    esi,0x4
1002e277:	add    esi,eax
1002e279:	mov    DWORD PTR [edi+0xc],ebx
1002e27c:	mov    DWORD PTR [edi+0x8],esi
1002e27f:	mov    DWORD PTR [edi+0x4],eax
1002e282:	jmp    0x1002e367
1002e287:	push   DWORD PTR [ebp+0x8]
1002e28a:	mov    eax,DWORD PTR [ebp+0xc]
1002e28d:	call   0x1002e146
1002e292:	push   DWORD PTR [ebp+0xc]
1002e295:	call   0x10042f82
1002e29a:	pop    ecx
1002e29b:	push   0x0
1002e29d:	push   0x0
1002e29f:	call   0x10047aa4
1002e2a4:	mov    eax,DWORD PTR [edi+0x8]
1002e2a7:	mov    ebx,DWORD PTR [ebp+0x14]
1002e2aa:	mov    ecx,eax
1002e2ac:	sub    ecx,ebx
1002e2ae:	sar    ecx,0x4
1002e2b1:	cmp    ecx,esi
1002e2b3:	jae    0x1002e320
1002e2b5:	lea    ecx,[ebx+0x10]
1002e2b8:	push   ecx
1002e2b9:	push   eax
1002e2ba:	mov    ecx,ebx
1002e2bc:	call   0x1002f0e9
1002e2c1:	mov    BYTE PTR [ebp-0x4],0x3
1002e2c5:	mov    eax,DWORD PTR [edi+0x8]
1002e2c8:	lea    ecx,[ebp-0x20]
1002e2cb:	push   ecx
1002e2cc:	mov    ecx,eax
1002e2ce:	sub    ecx,ebx
1002e2d0:	sar    ecx,0x4
1002e2d3:	sub    esi,ecx
1002e2d5:	push   esi
1002e2d6:	push   eax
1002e2d7:	call   0x1002dc31
1002e2dc:	and    DWORD PTR [ebp-0x4],0x0
1002e2e0:	add    DWORD PTR [edi+0x8],0x10
1002e2e4:	mov    edi,DWORD PTR [edi+0x8]
1002e2e7:	add    edi,0xfffffff0
1002e2ea:	cmp    ebx,edi
1002e2ec:	mov    esi,ebx
1002e2ee:	je     0x1002e367
1002e2f0:	lea    eax,[ebp-0x20]
1002e2f3:	cmp    esi,eax
1002e2f5:	je     0x1002e2fd
1002e2f7:	push   eax
1002e2f8:	call   0x1002b02e
1002e2fd:	add    esi,0x10
1002e300:	cmp    esi,edi
1002e302:	jne    0x1002e2f0
1002e304:	jmp    0x1002e367
1002e306:	mov    eax,DWORD PTR [ebp+0x8]
1002e309:	mov    eax,DWORD PTR [eax+0x8]
1002e30c:	add    eax,0x10
1002e30f:	push   eax
1002e310:	mov    eax,DWORD PTR [ebp+0x14]
1002e313:	add    eax,0x10
1002e316:	call   0x1002e146
1002e31b:	jmp    0x1002e29b
1002e320:	lea    esi,[eax-0x10]
1002e323:	push   eax
1002e324:	push   eax
1002e325:	mov    ecx,esi
1002e327:	call   0x1002f0e9
1002e32c:	mov    DWORD PTR [edi+0x8],eax
1002e32f:	mov    edi,esi
1002e331:	cmp    ebx,edi
1002e333:	je     0x1002e34c
1002e335:	lea    esi,[edi+0x10]
1002e338:	sub    edi,0x10
1002e33b:	sub    esi,0x10
1002e33e:	cmp    esi,edi
1002e340:	je     0x1002e348
1002e342:	push   edi
1002e343:	call   0x1002b02e
1002e348:	cmp    edi,ebx
1002e34a:	jne    0x1002e338
1002e34c:	lea    edi,[ebx+0x10]
1002e34f:	jmp    0x1002e363
1002e351:	lea    eax,[ebp-0x20]
1002e354:	cmp    ebx,eax
1002e356:	je     0x1002e360
1002e358:	push   eax
1002e359:	mov    esi,ebx
1002e35b:	call   0x1002b02e
1002e360:	add    ebx,0x10
1002e363:	cmp    ebx,edi
1002e365:	jne    0x1002e351
1002e367:	lea    eax,[ebp-0x20]
1002e36a:	push   eax
1002e36b:	call   DWORD PTR ds:0x10066294
1002e371:	call   0x10059bfd
1002e376:	ret    0x10
1002e379:	push   ebp
1002e37a:	mov    ebp,esp
1002e37c:	sub    esp,0x18
1002e37f:	push   esi
1002e380:	mov    esi,DWORD PTR [ebp+0x8]
1002e383:	mov    eax,DWORD PTR [esi+0x4]
1002e386:	push   edi
1002e387:	mov    edi,DWORD PTR [eax+0x4]
1002e38a:	mov    DWORD PTR [ebp-0x4],eax
1002e38d:	mov    al,0x1
1002e38f:	mov    BYTE PTR [ebp-0x8],al
1002e392:	jmp    0x1002e3b0
1002e394:	push   DWORD PTR [ebp+0xc]
1002e397:	lea    eax,[edi+0x10]
1002e39a:	mov    DWORD PTR [ebp-0x4],edi
1002e39d:	call   0x1002de59
1002e3a2:	test   al,al
1002e3a4:	mov    BYTE PTR [ebp-0x8],al
1002e3a7:	je     0x1002e3ad
1002e3a9:	mov    edi,DWORD PTR [edi]
1002e3ab:	jmp    0x1002e3b0
1002e3ad:	mov    edi,DWORD PTR [edi+0x8]
1002e3b0:	cmp    BYTE PTR [edi+0x29],0x0
1002e3b4:	je     0x1002e394
1002e3b6:	test   al,al
1002e3b8:	mov    edi,DWORD PTR [ebp-0x4]
1002e3bb:	mov    DWORD PTR [ebp-0xc],edi
1002e3be:	mov    DWORD PTR [ebp-0x10],esi
1002e3c1:	je     0x1002e40f
1002e3c3:	mov    eax,DWORD PTR [esi+0x4]
1002e3c6:	mov    eax,DWORD PTR [eax]
1002e3c8:	mov    DWORD PTR [ebp-0x18],esi
1002e3cb:	lea    edi,[ebp-0x18]
1002e3ce:	lea    esi,[ebp-0x10]
1002e3d1:	mov    DWORD PTR [ebp-0x14],eax
1002e3d4:	call   0x10009d5c
1002e3d9:	test   al,al
1002e3db:	je     0x1002e401
1002e3dd:	push   DWORD PTR [ebp+0xc]
1002e3e0:	mov    esi,DWORD PTR [ebp+0x8]
1002e3e3:	push   0x1
1002e3e5:	mov    ecx,DWORD PTR [ebp-0x4]
1002e3e8:	lea    eax,[ebp-0x18]
1002e3eb:	push   eax
1002e3ec:	call   0x1002e4e5
1002e3f1:	mov    ecx,DWORD PTR [eax]
1002e3f3:	mov    eax,DWORD PTR [eax+0x4]
1002e3f6:	mov    DWORD PTR [ebx],ecx
1002e3f8:	mov    DWORD PTR [ebx+0x4],eax
1002e3fb:	mov    BYTE PTR [ebx+0x8],0x1
1002e3ff:	jmp    0x1002e433
1002e401:	lea    esi,[ebp-0x10]
1002e404:	call   0x1001912c
1002e409:	mov    edi,DWORD PTR [ebp-0xc]
1002e40c:	mov    esi,DWORD PTR [ebp+0x8]
1002e40f:	lea    eax,[edi+0x10]
1002e412:	push   eax
1002e413:	mov    eax,DWORD PTR [ebp+0xc]
1002e416:	call   0x1002de59
1002e41b:	test   al,al
1002e41d:	je     0x1002e427
1002e41f:	push   DWORD PTR [ebp+0xc]
1002e422:	push   DWORD PTR [ebp-0x8]
1002e425:	jmp    0x1002e3e5
1002e427:	mov    eax,DWORD PTR [ebp-0x10]
1002e42a:	mov    DWORD PTR [ebx],eax
1002e42c:	mov    DWORD PTR [ebx+0x4],edi
1002e42f:	mov    BYTE PTR [ebx+0x8],0x0
1002e433:	pop    edi
1002e434:	mov    eax,ebx
1002e436:	pop    esi
1002e437:	leave  
1002e438:	ret    0x8
1002e43b:	push   ebp
1002e43c:	mov    ebp,esp
1002e43e:	sub    esp,0x14
1002e441:	mov    eax,DWORD PTR [ebx+0x4]
1002e444:	mov    eax,DWORD PTR [eax]
1002e446:	push   esi
1002e447:	push   edi
1002e448:	lea    edi,[ebp-0xc]
1002e44b:	lea    esi,[ebp+0xc]
1002e44e:	mov    DWORD PTR [ebp-0x8],eax
1002e451:	mov    DWORD PTR [ebp-0xc],ebx
1002e454:	call   0x10009d5c
1002e459:	test   al,al
1002e45b:	je     0x1002e4c2
1002e45d:	mov    eax,DWORD PTR [ebx+0x4]
1002e460:	lea    edi,[ebp-0xc]
1002e463:	lea    esi,[ebp+0x14]
1002e466:	mov    DWORD PTR [ebp-0x8],eax
1002e469:	mov    DWORD PTR [ebp-0xc],ebx
1002e46c:	call   0x10009d5c
1002e471:	test   al,al
1002e473:	je     0x1002e4c2
1002e475:	mov    eax,DWORD PTR [ebx+0x4]
1002e478:	push   DWORD PTR [eax+0x4]
1002e47b:	mov    ecx,ebx
1002e47d:	call   0x1002e966
1002e482:	mov    eax,DWORD PTR [ebx+0x4]
1002e485:	mov    DWORD PTR [eax+0x4],eax
1002e488:	mov    eax,DWORD PTR [ebx+0x4]
1002e48b:	and    DWORD PTR [ebx+0x8],0x0
1002e48f:	mov    DWORD PTR [eax],eax
1002e491:	mov    eax,DWORD PTR [ebx+0x4]
1002e494:	mov    DWORD PTR [eax+0x8],eax
1002e497:	mov    eax,DWORD PTR [ebx+0x4]
1002e49a:	mov    ecx,DWORD PTR [eax]
1002e49c:	mov    eax,DWORD PTR [ebp+0x8]
1002e49f:	mov    DWORD PTR [eax],ebx
1002e4a1:	jmp    0x1002e4dc
1002e4a3:	mov    eax,DWORD PTR [ebp+0x10]
1002e4a6:	mov    edi,DWORD PTR [ebp+0xc]
1002e4a9:	lea    esi,[ebp+0xc]
1002e4ac:	mov    DWORD PTR [ebp-0x8],eax
1002e4af:	call   0x1002de75
1002e4b4:	push   DWORD PTR [ebp-0x8]
1002e4b7:	lea    eax,[ebp-0x14]
1002e4ba:	push   edi
1002e4bb:	push   eax
1002e4bc:	push   ebx
1002e4bd:	call   0x1002e64a
1002e4c2:	lea    edi,[ebp+0x14]
1002e4c5:	lea    esi,[ebp+0xc]
1002e4c8:	call   0x10009d5c
1002e4cd:	test   al,al
1002e4cf:	je     0x1002e4a3
1002e4d1:	mov    ecx,DWORD PTR [ebp+0xc]
1002e4d4:	mov    eax,DWORD PTR [ebp+0x8]
1002e4d7:	mov    DWORD PTR [eax],ecx
1002e4d9:	mov    ecx,DWORD PTR [ebp+0x10]
1002e4dc:	pop    edi
1002e4dd:	mov    DWORD PTR [eax+0x4],ecx
1002e4e0:	pop    esi
1002e4e1:	leave  
1002e4e2:	ret    0x14
1002e4e5:	push   0x48
1002e4e7:	mov    eax,0x100621c0
1002e4ec:	call   0x10059b25
1002e4f1:	mov    edi,ecx
1002e4f3:	cmp    DWORD PTR [esi+0x8],0xaaaaaa9
1002e4fa:	jb     0x1002e52e
1002e4fc:	push   0x1006d02c
1002e501:	lea    ecx,[ebp-0x2c]
1002e504:	call   0x100011c8
1002e509:	and    DWORD PTR [ebp-0x4],0x0
1002e50d:	lea    eax,[ebp-0x2c]
1002e510:	push   eax
1002e511:	lea    ecx,[ebp-0x54]
1002e514:	call   0x10001065
1002e519:	push   0x10074ec8
1002e51e:	lea    eax,[ebp-0x54]
1002e521:	push   eax
1002e522:	mov    DWORD PTR [ebp-0x54],0x1006b96c
1002e529:	call   0x10047aa4
1002e52e:	mov    eax,DWORD PTR [esi+0x4]
1002e531:	push   0x0
1002e533:	push   DWORD PTR [ebp+0x10]
1002e536:	push   eax
1002e537:	push   edi
1002e538:	push   eax
1002e539:	call   0x1002e911
1002e53e:	inc    DWORD PTR [esi+0x8]
1002e541:	mov    ebx,eax
1002e543:	mov    eax,DWORD PTR [esi+0x4]
1002e546:	cmp    edi,eax
1002e548:	jne    0x1002e557
1002e54a:	mov    DWORD PTR [eax+0x4],ebx
1002e54d:	mov    eax,DWORD PTR [esi+0x4]
1002e550:	mov    DWORD PTR [eax],ebx
1002e552:	mov    eax,DWORD PTR [esi+0x4]
1002e555:	jmp    0x1002e575
1002e557:	cmp    BYTE PTR [ebp+0xc],0x0
1002e55b:	je     0x1002e56a
1002e55d:	mov    DWORD PTR [edi],ebx
1002e55f:	mov    eax,DWORD PTR [esi+0x4]
1002e562:	cmp    edi,DWORD PTR [eax]
1002e564:	jne    0x1002e578
1002e566:	mov    DWORD PTR [eax],ebx
1002e568:	jmp    0x1002e578
1002e56a:	mov    DWORD PTR [edi+0x8],ebx
1002e56d:	mov    eax,DWORD PTR [esi+0x4]
1002e570:	cmp    edi,DWORD PTR [eax+0x8]
1002e573:	jne    0x1002e578
1002e575:	mov    DWORD PTR [eax+0x8],ebx
1002e578:	mov    edi,ebx
1002e57a:	lea    eax,[ebx+0x4]
1002e57d:	jmp    0x1002e60c
1002e582:	mov    ecx,DWORD PTR [eax]
1002e584:	mov    edx,DWORD PTR [ecx+0x4]
1002e587:	cmp    ecx,DWORD PTR [edx]
1002e589:	jne    0x1002e5c0
1002e58b:	mov    edx,DWORD PTR [edx+0x8]
1002e58e:	cmp    BYTE PTR [edx+0x28],0x0
1002e592:	je     0x1002e5c8
1002e594:	cmp    edi,DWORD PTR [ecx+0x8]
1002e597:	jne    0x1002e5a1
1002e599:	push   esi
1002e59a:	mov    edi,ecx
1002e59c:	call   0x10019239
1002e5a1:	mov    eax,DWORD PTR [edi+0x4]
1002e5a4:	mov    BYTE PTR [eax+0x28],0x1
1002e5a8:	mov    eax,DWORD PTR [edi+0x4]
1002e5ab:	mov    eax,DWORD PTR [eax+0x4]
1002e5ae:	mov    BYTE PTR [eax+0x28],0x0
1002e5b2:	mov    eax,DWORD PTR [edi+0x4]
1002e5b5:	mov    ecx,DWORD PTR [eax+0x4]
1002e5b8:	push   esi
1002e5b9:	call   0x10019279
1002e5be:	jmp    0x1002e609
1002e5c0:	mov    edx,DWORD PTR [edx]
1002e5c2:	cmp    BYTE PTR [edx+0x28],0x0
1002e5c6:	jne    0x1002e5e0
1002e5c8:	mov    BYTE PTR [ecx+0x28],0x1
1002e5cc:	mov    BYTE PTR [edx+0x28],0x1
1002e5d0:	mov    ecx,DWORD PTR [eax]
1002e5d2:	mov    ecx,DWORD PTR [ecx+0x4]
1002e5d5:	mov    BYTE PTR [ecx+0x28],0x0
1002e5d9:	mov    eax,DWORD PTR [eax]
1002e5db:	mov    edi,DWORD PTR [eax+0x4]
1002e5de:	jmp    0x1002e609
1002e5e0:	cmp    edi,DWORD PTR [ecx]
1002e5e2:	jne    0x1002e5ec
1002e5e4:	push   esi
1002e5e5:	mov    edi,ecx
1002e5e7:	call   0x10019279
1002e5ec:	mov    eax,DWORD PTR [edi+0x4]
1002e5ef:	mov    BYTE PTR [eax+0x28],0x1
1002e5f3:	mov    eax,DWORD PTR [edi+0x4]
1002e5f6:	mov    eax,DWORD PTR [eax+0x4]
1002e5f9:	mov    BYTE PTR [eax+0x28],0x0
1002e5fd:	mov    eax,DWORD PTR [edi+0x4]
1002e600:	mov    ecx,DWORD PTR [eax+0x4]
1002e603:	push   esi
1002e604:	call   0x10019239
1002e609:	lea    eax,[edi+0x4]
1002e60c:	mov    ecx,DWORD PTR [eax]
1002e60e:	cmp    BYTE PTR [ecx+0x28],0x0
1002e612:	je     0x1002e582
1002e618:	mov    eax,DWORD PTR [esi+0x4]
1002e61b:	mov    eax,DWORD PTR [eax+0x4]
1002e61e:	mov    BYTE PTR [eax+0x28],0x1
1002e622:	mov    eax,DWORD PTR [ebp+0x8]
1002e625:	mov    DWORD PTR [eax+0x4],ebx
1002e628:	mov    DWORD PTR [eax],esi
1002e62a:	call   0x10059bfd
1002e62f:	ret    0xc
1002e632:	push   ebp
1002e633:	mov    ebp,esp
1002e635:	push   ecx
1002e636:	push   DWORD PTR [ebp+0xc]
1002e639:	mov    ecx,DWORD PTR [ebp+0x8]
1002e63c:	and    DWORD PTR [ebp-0x4],0x0
1002e640:	call   0x100011a2
1002e645:	mov    eax,DWORD PTR [ebp+0x8]
1002e648:	leave  
1002e649:	ret    
1002e64a:	push   0x44
1002e64c:	mov    eax,0x10060374
1002e651:	call   0x10059b25
1002e656:	mov    edi,DWORD PTR [ebp+0x14]
1002e659:	cmp    BYTE PTR [edi+0x29],0x0
1002e65d:	je     0x1002e691
1002e65f:	push   0x1006ccec
1002e664:	lea    ecx,[ebp-0x28]
1002e667:	call   0x100011c8
1002e66c:	and    DWORD PTR [ebp-0x4],0x0
1002e670:	lea    eax,[ebp-0x28]
1002e673:	push   eax
1002e674:	lea    ecx,[ebp-0x50]
1002e677:	call   0x10001065
1002e67c:	push   0x10074de8
1002e681:	lea    eax,[ebp-0x50]
1002e684:	push   eax
1002e685:	mov    DWORD PTR [ebp-0x50],0x1006b978
1002e68c:	call   0x10047aa4
1002e691:	lea    esi,[ebp+0x10]
1002e694:	call   0x1002de75
1002e699:	mov    ecx,DWORD PTR [edi]
1002e69b:	cmp    BYTE PTR [ecx+0x29],0x0
1002e69f:	je     0x1002e6a6
1002e6a1:	mov    ebx,DWORD PTR [edi+0x8]
1002e6a4:	jmp    0x1002e6bd
1002e6a6:	mov    eax,DWORD PTR [edi+0x8]
1002e6a9:	cmp    BYTE PTR [eax+0x29],0x0
1002e6ad:	je     0x1002e6b3
1002e6af:	mov    ebx,ecx
1002e6b1:	jmp    0x1002e6bd
1002e6b3:	mov    eax,DWORD PTR [ebp+0x14]
1002e6b6:	cmp    eax,edi
1002e6b8:	mov    ebx,DWORD PTR [eax+0x8]
1002e6bb:	jne    0x1002e733
1002e6bd:	cmp    BYTE PTR [ebx+0x29],0x0
1002e6c1:	mov    esi,DWORD PTR [edi+0x4]
1002e6c4:	jne    0x1002e6c9
1002e6c6:	mov    DWORD PTR [ebx+0x4],esi
1002e6c9:	mov    ecx,DWORD PTR [ebp+0x8]
1002e6cc:	mov    eax,DWORD PTR [ecx+0x4]
1002e6cf:	cmp    DWORD PTR [eax+0x4],edi
1002e6d2:	jne    0x1002e6d9
1002e6d4:	mov    DWORD PTR [eax+0x4],ebx
1002e6d7:	jmp    0x1002e6e4
1002e6d9:	cmp    DWORD PTR [esi],edi
1002e6db:	jne    0x1002e6e1
1002e6dd:	mov    DWORD PTR [esi],ebx
1002e6df:	jmp    0x1002e6e4
1002e6e1:	mov    DWORD PTR [esi+0x8],ebx
1002e6e4:	mov    edx,DWORD PTR [ecx+0x4]
1002e6e7:	cmp    DWORD PTR [edx],edi
1002e6e9:	jne    0x1002e707
1002e6eb:	cmp    BYTE PTR [ebx+0x29],0x0
1002e6ef:	je     0x1002e6f5
1002e6f1:	mov    ecx,esi
1002e6f3:	jmp    0x1002e705
1002e6f5:	mov    eax,DWORD PTR [ebx]
1002e6f7:	mov    ecx,ebx
1002e6f9:	jmp    0x1002e6ff
1002e6fb:	mov    ecx,eax
1002e6fd:	mov    eax,DWORD PTR [ecx]
1002e6ff:	cmp    BYTE PTR [eax+0x29],0x0
1002e703:	je     0x1002e6fb
1002e705:	mov    DWORD PTR [edx],ecx
1002e707:	mov    eax,DWORD PTR [ebp+0x8]
1002e70a:	mov    edx,DWORD PTR [eax+0x4]
1002e70d:	cmp    DWORD PTR [edx+0x8],edi
1002e710:	jne    0x1002e78d
1002e712:	cmp    BYTE PTR [ebx+0x29],0x0
1002e716:	je     0x1002e71c
1002e718:	mov    ecx,esi
1002e71a:	jmp    0x1002e72e
1002e71c:	mov    eax,DWORD PTR [ebx+0x8]
1002e71f:	mov    ecx,ebx
1002e721:	jmp    0x1002e728
1002e723:	mov    ecx,eax
1002e725:	mov    eax,DWORD PTR [ecx+0x8]
1002e728:	cmp    BYTE PTR [eax+0x29],0x0
1002e72c:	je     0x1002e723
1002e72e:	mov    DWORD PTR [edx+0x8],ecx
1002e731:	jmp    0x1002e78d
1002e733:	mov    DWORD PTR [ecx+0x4],eax
1002e736:	mov    ecx,DWORD PTR [edi]
1002e738:	mov    DWORD PTR [eax],ecx
1002e73a:	cmp    eax,DWORD PTR [edi+0x8]
1002e73d:	jne    0x1002e743
1002e73f:	mov    esi,eax
1002e741:	jmp    0x1002e75d
1002e743:	cmp    BYTE PTR [ebx+0x29],0x0
1002e747:	mov    esi,DWORD PTR [eax+0x4]
1002e74a:	jne    0x1002e74f
1002e74c:	mov    DWORD PTR [ebx+0x4],esi
1002e74f:	mov    DWORD PTR [esi],ebx
1002e751:	mov    ecx,DWORD PTR [edi+0x8]
1002e754:	mov    DWORD PTR [eax+0x8],ecx
1002e757:	mov    ecx,DWORD PTR [edi+0x8]
1002e75a:	mov    DWORD PTR [ecx+0x4],eax
1002e75d:	mov    ecx,DWORD PTR [ebp+0x8]
1002e760:	mov    ecx,DWORD PTR [ecx+0x4]
1002e763:	cmp    DWORD PTR [ecx+0x4],edi
1002e766:	jne    0x1002e76d
1002e768:	mov    DWORD PTR [ecx+0x4],eax
1002e76b:	jmp    0x1002e77b
1002e76d:	mov    ecx,DWORD PTR [edi+0x4]
1002e770:	cmp    DWORD PTR [ecx],edi
1002e772:	jne    0x1002e778
1002e774:	mov    DWORD PTR [ecx],eax
1002e776:	jmp    0x1002e77b
1002e778:	mov    DWORD PTR [ecx+0x8],eax
1002e77b:	mov    ecx,DWORD PTR [edi+0x4]
1002e77e:	mov    DWORD PTR [eax+0x4],ecx
1002e781:	mov    dl,BYTE PTR [edi+0x28]
1002e784:	mov    cl,BYTE PTR [eax+0x28]
1002e787:	mov    BYTE PTR [eax+0x28],dl
1002e78a:	mov    BYTE PTR [edi+0x28],cl
1002e78d:	cmp    BYTE PTR [edi+0x28],0x1
1002e791:	jne    0x1002e8a9
1002e797:	jmp    0x1002e85d
1002e79c:	cmp    BYTE PTR [ebx+0x28],0x1
1002e7a0:	jne    0x1002e8a5
1002e7a6:	mov    ecx,DWORD PTR [esi]
1002e7a8:	cmp    ebx,ecx
1002e7aa:	jne    0x1002e823
1002e7ac:	mov    ecx,DWORD PTR [esi+0x8]
1002e7af:	cmp    BYTE PTR [ecx+0x28],0x0
1002e7b3:	jne    0x1002e7ca
1002e7b5:	push   DWORD PTR [ebp+0x8]
1002e7b8:	mov    BYTE PTR [ecx+0x28],0x1
1002e7bc:	mov    ecx,esi
1002e7be:	mov    BYTE PTR [esi+0x28],0x0
1002e7c2:	call   0x10019239
1002e7c7:	mov    ecx,DWORD PTR [esi+0x8]
1002e7ca:	cmp    BYTE PTR [ecx+0x29],0x0
1002e7ce:	jne    0x1002e858
1002e7d4:	mov    eax,DWORD PTR [ecx]
1002e7d6:	cmp    BYTE PTR [eax+0x28],0x1
1002e7da:	jne    0x1002e7e5
1002e7dc:	mov    eax,DWORD PTR [ecx+0x8]
1002e7df:	cmp    BYTE PTR [eax+0x28],0x1
1002e7e3:	je     0x1002e854
1002e7e5:	mov    eax,DWORD PTR [ecx+0x8]
1002e7e8:	cmp    BYTE PTR [eax+0x28],0x1
1002e7ec:	jne    0x1002e803
1002e7ee:	mov    eax,DWORD PTR [ecx]
1002e7f0:	push   DWORD PTR [ebp+0x8]
1002e7f3:	mov    BYTE PTR [eax+0x28],0x1
1002e7f7:	mov    BYTE PTR [ecx+0x28],0x0
1002e7fb:	call   0x10019279
1002e800:	mov    ecx,DWORD PTR [esi+0x8]
1002e803:	mov    al,BYTE PTR [esi+0x28]
1002e806:	push   DWORD PTR [ebp+0x8]
1002e809:	mov    BYTE PTR [ecx+0x28],al
1002e80c:	mov    BYTE PTR [esi+0x28],0x1
1002e810:	mov    eax,DWORD PTR [ecx+0x8]
1002e813:	mov    ecx,esi
1002e815:	mov    BYTE PTR [eax+0x28],0x1
1002e819:	call   0x10019239
1002e81e:	jmp    0x1002e8a5
1002e823:	cmp    BYTE PTR [ecx+0x28],0x0
1002e827:	jne    0x1002e83d
1002e829:	push   DWORD PTR [ebp+0x8]
1002e82c:	mov    BYTE PTR [ecx+0x28],0x1
1002e830:	mov    ecx,esi
1002e832:	mov    BYTE PTR [esi+0x28],0x0
1002e836:	call   0x10019279
1002e83b:	mov    ecx,DWORD PTR [esi]
1002e83d:	cmp    BYTE PTR [ecx+0x29],0x0
1002e841:	jne    0x1002e858
1002e843:	mov    eax,DWORD PTR [ecx+0x8]
1002e846:	cmp    BYTE PTR [eax+0x28],0x1
1002e84a:	jne    0x1002e86e
1002e84c:	mov    eax,DWORD PTR [ecx]
1002e84e:	cmp    BYTE PTR [eax+0x28],0x1
1002e852:	jne    0x1002e86e
1002e854:	mov    BYTE PTR [ecx+0x28],0x0
1002e858:	mov    ebx,esi
1002e85a:	mov    esi,DWORD PTR [esi+0x4]
1002e85d:	mov    eax,DWORD PTR [ebp+0x8]
1002e860:	mov    eax,DWORD PTR [eax+0x4]
1002e863:	cmp    ebx,DWORD PTR [eax+0x4]
1002e866:	jne    0x1002e79c
1002e86c:	jmp    0x1002e8a5
1002e86e:	mov    eax,DWORD PTR [ecx]
1002e870:	cmp    BYTE PTR [eax+0x28],0x1
1002e874:	jne    0x1002e88b
1002e876:	mov    eax,DWORD PTR [ecx+0x8]
1002e879:	push   DWORD PTR [ebp+0x8]
1002e87c:	mov    BYTE PTR [eax+0x28],0x1
1002e880:	mov    BYTE PTR [ecx+0x28],0x0
1002e884:	call   0x10019239
1002e889:	mov    ecx,DWORD PTR [esi]
1002e88b:	mov    al,BYTE PTR [esi+0x28]
1002e88e:	push   DWORD PTR [ebp+0x8]
1002e891:	mov    BYTE PTR [ecx+0x28],al
1002e894:	mov    BYTE PTR [esi+0x28],0x1
1002e898:	mov    eax,DWORD PTR [ecx]
1002e89a:	mov    ecx,esi
1002e89c:	mov    BYTE PTR [eax+0x28],0x1
1002e8a0:	call   0x10019279
1002e8a5:	mov    BYTE PTR [ebx+0x28],0x1
1002e8a9:	lea    eax,[edi+0x18]
1002e8ac:	push   eax
1002e8ad:	call   DWORD PTR ds:0x10066294
1002e8b3:	push   DWORD PTR [edi+0x10]
1002e8b6:	call   DWORD PTR ds:0x100662b4
1002e8bc:	push   edi
1002e8bd:	call   0x10042f82
1002e8c2:	pop    ecx
1002e8c3:	mov    ecx,DWORD PTR [ebp+0x8]
1002e8c6:	mov    eax,DWORD PTR [ecx+0x8]
1002e8c9:	test   eax,eax
1002e8cb:	jbe    0x1002e8d1
1002e8cd:	dec    eax
1002e8ce:	mov    DWORD PTR [ecx+0x8],eax
1002e8d1:	mov    ecx,DWORD PTR [ebp+0x10]
1002e8d4:	mov    eax,DWORD PTR [ebp+0xc]
1002e8d7:	mov    DWORD PTR [eax],ecx
1002e8d9:	mov    ecx,DWORD PTR [ebp+0x14]
1002e8dc:	mov    DWORD PTR [eax+0x4],ecx
1002e8df:	call   0x10059bfd
1002e8e4:	ret    0x10
1002e8e7:	push   0x30
1002e8e9:	call   0x1004358e
1002e8ee:	xor    edx,edx
1002e8f0:	cmp    eax,edx
1002e8f2:	pop    ecx
1002e8f3:	je     0x1002e8f7
1002e8f5:	mov    DWORD PTR [eax],edx
1002e8f7:	lea    ecx,[eax+0x4]
1002e8fa:	cmp    ecx,edx
1002e8fc:	je     0x1002e900
1002e8fe:	mov    DWORD PTR [ecx],edx
1002e900:	lea    ecx,[eax+0x8]
1002e903:	cmp    ecx,edx
1002e905:	je     0x1002e909
1002e907:	mov    DWORD PTR [ecx],edx
1002e909:	mov    BYTE PTR [eax+0x28],0x1
1002e90d:	mov    BYTE PTR [eax+0x29],dl
1002e910:	ret    
1002e911:	push   0x8
1002e913:	mov    eax,0x10060007
1002e918:	call   0x10059b58
1002e91d:	push   0x30
1002e91f:	call   0x1004358e
1002e924:	mov    ebx,eax
1002e926:	pop    ecx
1002e927:	mov    DWORD PTR [ebp-0x14],ebx
1002e92a:	test   ebx,ebx
1002e92c:	mov    DWORD PTR [ebp-0x4],0x1
1002e933:	je     0x1002e949
1002e935:	push   DWORD PTR [ebp+0x18]
1002e938:	mov    ecx,DWORD PTR [ebp+0x14]
1002e93b:	push   DWORD PTR [ebp+0x10]
1002e93e:	push   DWORD PTR [ebp+0xc]
1002e941:	push   DWORD PTR [ebp+0x8]
1002e944:	call   0x1002e9ab
1002e949:	mov    eax,ebx
1002e94b:	call   0x10059bfd
1002e950:	ret    0x14
1002e953:	push   DWORD PTR [ebp-0x14]
1002e956:	call   0x10042f82
1002e95b:	pop    ecx
1002e95c:	push   0x0
1002e95e:	push   0x0
1002e960:	call   0x10047aa4
1002e965:	int3   
1002e966:	push   ebx
1002e967:	push   esi
1002e968:	push   edi
1002e969:	mov    edi,DWORD PTR [esp+0x10]
1002e96d:	cmp    BYTE PTR [edi+0x29],0x0
1002e971:	mov    ebx,ecx
1002e973:	mov    esi,edi
1002e975:	jne    0x1002e9a5
1002e977:	push   DWORD PTR [esi+0x8]
1002e97a:	mov    ecx,ebx
1002e97c:	call   0x1002e966
1002e981:	mov    esi,DWORD PTR [esi]
1002e983:	lea    eax,[edi+0x18]
1002e986:	push   eax
1002e987:	call   DWORD PTR ds:0x10066294
1002e98d:	push   DWORD PTR [edi+0x10]
1002e990:	call   DWORD PTR ds:0x100662b4
1002e996:	push   edi
1002e997:	call   0x10042f82
1002e99c:	cmp    BYTE PTR [esi+0x29],0x0
1002e9a0:	pop    ecx
1002e9a1:	mov    edi,esi
1002e9a3:	je     0x1002e977
1002e9a5:	pop    edi
1002e9a6:	pop    esi
1002e9a7:	pop    ebx
1002e9a8:	ret    0x4
1002e9ab:	push   0x0
1002e9ad:	mov    eax,0x1005ffe7
1002e9b2:	call   0x10059b25
1002e9b7:	mov    esi,ecx
1002e9b9:	mov    eax,DWORD PTR [ebp+0x8]
1002e9bc:	mov    DWORD PTR [ebx],eax
1002e9be:	mov    eax,DWORD PTR [ebp+0xc]
1002e9c1:	mov    DWORD PTR [ebx+0x4],eax
1002e9c4:	mov    eax,DWORD PTR [ebp+0x10]
1002e9c7:	lea    edi,[ebx+0x10]
1002e9ca:	mov    DWORD PTR [ebx+0x8],eax
1002e9cd:	mov    DWORD PTR [ebp+0x8],edi
1002e9d0:	call   0x1002b000
1002e9d5:	and    DWORD PTR [ebp-0x4],0x0
1002e9d9:	add    esi,0x8
1002e9dc:	lea    eax,[edi+0x8]
1002e9df:	and    WORD PTR [eax],0x0
1002e9e3:	push   esi
1002e9e4:	mov    esi,eax
1002e9e6:	call   0x1002b02e
1002e9eb:	mov    al,BYTE PTR [ebp+0x14]
1002e9ee:	mov    BYTE PTR [ebx+0x28],al
1002e9f1:	mov    BYTE PTR [ebx+0x29],0x0
1002e9f5:	mov    eax,ebx
1002e9f7:	call   0x10059bfd
1002e9fc:	ret    0x10
1002e9ff:	push   0xc
1002ea01:	mov    eax,0x1005fa9d
1002ea06:	call   0x10059b58
1002ea0b:	mov    ebx,DWORD PTR [ebp+0x8]
1002ea0e:	xor    edi,edi
1002ea10:	cmp    ebx,edi
1002ea12:	jne    0x1002ea1b
1002ea14:	mov    eax,0x80004003
1002ea19:	jmp    0x1002ea7d
1002ea1b:	push   0x20
1002ea1d:	mov    DWORD PTR [ebx],edi
1002ea1f:	mov    DWORD PTR [ebp-0x14],0x8007000e
1002ea26:	mov    DWORD PTR [ebp-0x4],edi
1002ea29:	call   0x1004358e
1002ea2e:	mov    esi,eax
1002ea30:	cmp    esi,edi
1002ea32:	pop    ecx
1002ea33:	je     0x1002ea5a
1002ea35:	mov    DWORD PTR [esi+0x4],edi
1002ea38:	mov    DWORD PTR [esi+0x8],edi
1002ea3b:	mov    DWORD PTR [esi+0xc],edi
1002ea3e:	mov    DWORD PTR [esi+0x10],edi
1002ea41:	mov    DWORD PTR [esi+0x14],edi
1002ea44:	mov    DWORD PTR [esi+0x18],edi
1002ea47:	mov    DWORD PTR [esi],0x10072e6c
1002ea4d:	mov    ecx,DWORD PTR ds:0x10080c04
1002ea53:	mov    eax,DWORD PTR [ecx]
1002ea55:	call   DWORD PTR [eax+0x4]
1002ea58:	jmp    0x1002ea6b
1002ea5a:	xor    esi,esi
1002ea5c:	jmp    0x1002ea6b
1002ea5e:	mov    eax,0x1002ea64
1002ea63:	ret    
1002ea64:	mov    ebx,DWORD PTR [ebp+0x8]
1002ea67:	xor    edi,edi
1002ea69:	mov    esi,edi
1002ea6b:	cmp    esi,edi
1002ea6d:	je     0x1002ea78
1002ea6f:	inc    DWORD PTR [esi+0x4]
1002ea72:	dec    DWORD PTR [esi+0x4]
1002ea75:	mov    DWORD PTR [ebp-0x14],edi
1002ea78:	mov    eax,DWORD PTR [ebp-0x14]
1002ea7b:	mov    DWORD PTR [ebx],esi
1002ea7d:	call   0x10059bfd
1002ea82:	ret    0x4
1002ea85:	push   0xc
1002ea87:	mov    eax,0x100609be
1002ea8c:	call   0x10059b58
1002ea91:	mov    ebx,DWORD PTR [ebp+0x8]
1002ea94:	xor    edi,edi
1002ea96:	cmp    ebx,edi
1002ea98:	jne    0x1002eaa1
1002ea9a:	mov    eax,0x80004003
1002ea9f:	jmp    0x1002eafd
1002eaa1:	push   0x18
1002eaa3:	mov    DWORD PTR [ebx],edi
1002eaa5:	mov    DWORD PTR [ebp-0x14],0x8007000e
1002eaac:	mov    DWORD PTR [ebp-0x4],edi
1002eaaf:	call   0x1004358e
1002eab4:	mov    esi,eax
1002eab6:	cmp    esi,edi
1002eab8:	pop    ecx
1002eab9:	je     0x1002eada
1002eabb:	mov    DWORD PTR [esi+0x14],edi
1002eabe:	mov    DWORD PTR [esi+0x8],edi
1002eac1:	mov    DWORD PTR [esi+0xc],edi
1002eac4:	mov    DWORD PTR [esi+0x10],edi
1002eac7:	mov    DWORD PTR [esi],0x10072ea4
1002eacd:	mov    ecx,DWORD PTR ds:0x10080c04
1002ead3:	mov    eax,DWORD PTR [ecx]
1002ead5:	call   DWORD PTR [eax+0x4]
1002ead8:	jmp    0x1002eaeb
1002eada:	xor    esi,esi
1002eadc:	jmp    0x1002eaeb
1002eade:	mov    eax,0x1002eae4
1002eae3:	ret    
1002eae4:	mov    ebx,DWORD PTR [ebp+0x8]
1002eae7:	xor    edi,edi
1002eae9:	mov    esi,edi
1002eaeb:	cmp    esi,edi
1002eaed:	je     0x1002eaf8
1002eaef:	inc    DWORD PTR [esi+0x14]
1002eaf2:	dec    DWORD PTR [esi+0x14]
1002eaf5:	mov    DWORD PTR [ebp-0x14],edi
1002eaf8:	mov    eax,DWORD PTR [ebp-0x14]
1002eafb:	mov    DWORD PTR [ebx],esi
1002eafd:	call   0x10059bfd
1002eb02:	ret    0x4
1002eb05:	push   0xc
1002eb07:	mov    eax,0x10061974
1002eb0c:	call   0x10059b58
1002eb11:	mov    ebx,DWORD PTR [ebp+0x8]
1002eb14:	xor    esi,esi
1002eb16:	cmp    ebx,esi
1002eb18:	jne    0x1002eb21
1002eb1a:	mov    eax,0x80004003
1002eb1f:	jmp    0x1002eb85
1002eb21:	push   0x14
1002eb23:	mov    DWORD PTR [ebx],esi
1002eb25:	mov    DWORD PTR [ebp-0x14],0x8007000e
1002eb2c:	mov    DWORD PTR [ebp-0x18],esi
1002eb2f:	mov    DWORD PTR [ebp-0x4],esi
1002eb32:	call   0x1004358e
1002eb37:	mov    edi,eax
1002eb39:	cmp    edi,esi
1002eb3b:	pop    ecx
1002eb3c:	je     0x1002eb62
1002eb3e:	mov    DWORD PTR [edi+0x10],esi
1002eb41:	lea    esi,[edi+0x4]
1002eb44:	mov    DWORD PTR [edi],0x10072f0c
1002eb4a:	call   0x1002d76b
1002eb4f:	mov    DWORD PTR [edi],0x10072ed4
1002eb55:	mov    ecx,DWORD PTR ds:0x10080c04
1002eb5b:	mov    eax,DWORD PTR [ecx]
1002eb5d:	call   DWORD PTR [eax+0x4]
1002eb60:	jmp    0x1002eb72
1002eb62:	xor    edi,edi
1002eb64:	jmp    0x1002eb72
1002eb66:	mov    eax,0x1002eb6c
1002eb6b:	ret    
1002eb6c:	mov    ebx,DWORD PTR [ebp+0x8]
1002eb6f:	mov    edi,DWORD PTR [ebp-0x18]
1002eb72:	test   edi,edi
1002eb74:	je     0x1002eb80
1002eb76:	inc    DWORD PTR [edi+0x10]
1002eb79:	and    DWORD PTR [ebp-0x14],0x0
1002eb7d:	dec    DWORD PTR [edi+0x10]
1002eb80:	mov    eax,DWORD PTR [ebp-0x14]
1002eb83:	mov    DWORD PTR [ebx],edi
1002eb85:	call   0x10059bfd
1002eb8a:	ret    0x4
1002eb8d:	push   0xc
1002eb8f:	mov    eax,0x1005fa82
1002eb94:	call   0x10059b58
1002eb99:	mov    ebx,DWORD PTR [ebp+0x8]
1002eb9c:	xor    edi,edi
1002eb9e:	cmp    ebx,edi
1002eba0:	jne    0x1002eba9
1002eba2:	mov    eax,0x80004003
1002eba7:	jmp    0x1002ebff
1002eba9:	push   0x18
1002ebab:	mov    DWORD PTR [ebx],edi
1002ebad:	mov    DWORD PTR [ebp-0x14],0x8007000e
1002ebb4:	mov    DWORD PTR [ebp-0x4],edi
1002ebb7:	call   0x1004358e
1002ebbc:	mov    esi,eax
1002ebbe:	cmp    esi,edi
1002ebc0:	pop    ecx
1002ebc1:	je     0x1002ebe2
1002ebc3:	mov    DWORD PTR [esi+0x4],edi
1002ebc6:	mov    DWORD PTR [esi+0xc],edi
1002ebc9:	mov    DWORD PTR [esi+0x10],edi
1002ebcc:	mov    DWORD PTR [esi+0x14],edi
1002ebcf:	mov    DWORD PTR [esi],0x10072f48
1002ebd5:	mov    ecx,DWORD PTR ds:0x10080c04
1002ebdb:	mov    eax,DWORD PTR [ecx]
1002ebdd:	call   DWORD PTR [eax+0x4]
1002ebe0:	jmp    0x1002ebf3
1002ebe2:	xor    esi,esi
1002ebe4:	jmp    0x1002ebf3
1002ebe6:	mov    eax,0x1002ebec
1002ebeb:	ret    
1002ebec:	mov    ebx,DWORD PTR [ebp+0x8]
1002ebef:	xor    edi,edi
1002ebf1:	mov    esi,edi
1002ebf3:	cmp    esi,edi
1002ebf5:	je     0x1002ebfa
1002ebf7:	mov    DWORD PTR [ebp-0x14],edi
1002ebfa:	mov    eax,DWORD PTR [ebp-0x14]
1002ebfd:	mov    DWORD PTR [ebx],esi
1002ebff:	call   0x10059bfd
1002ec04:	ret    0x4
1002ec07:	push   ebp
1002ec08:	mov    ebp,esp
1002ec0a:	mov    edx,DWORD PTR [ebp+0x10]
1002ec0d:	xor    ecx,ecx
1002ec0f:	sub    esp,0x1c
1002ec12:	cmp    edx,ecx
1002ec14:	je     0x1002ed07
1002ec1a:	cmp    DWORD PTR [ebp+0xc],0x1
1002ec1e:	je     0x1002ec29
1002ec20:	cmp    DWORD PTR [ebp+0x14],ecx
1002ec23:	je     0x1002ed07
1002ec29:	mov    eax,DWORD PTR [ebp+0x14]
1002ec2c:	cmp    eax,ecx
1002ec2e:	je     0x1002ec32
1002ec30:	mov    DWORD PTR [eax],ecx
1002ec32:	mov    eax,DWORD PTR [ebp+0x8]
1002ec35:	cmp    DWORD PTR [eax+0x8],ecx
1002ec38:	jne    0x1002ec44
1002ec3a:	mov    eax,0x80004005
1002ec3f:	jmp    0x1002ed0c
1002ec44:	push   ebx
1002ec45:	push   esi
1002ec46:	push   edi
1002ec47:	mov    DWORD PTR [ebp-0x4],ecx
1002ec4a:	mov    DWORD PTR [ebp-0x8],ecx
1002ec4d:	mov    DWORD PTR [ebp-0xc],edx
1002ec50:	lea    esi,[eax+0xc]
1002ec53:	jmp    0x1002ec58
1002ec55:	mov    eax,DWORD PTR [ebp+0x8]
1002ec58:	mov    edi,DWORD PTR [eax+0x8]
1002ec5b:	mov    ebx,DWORD PTR [edi+0x8]
1002ec5e:	cmp    DWORD PTR [edi+0x4],ebx
1002ec61:	jbe    0x1002ec68
1002ec63:	call   0x100434a0
1002ec68:	mov    DWORD PTR [ebp-0x14],edi
1002ec6b:	lea    edi,[ebp-0x14]
1002ec6e:	mov    DWORD PTR [ebp-0x10],ebx
1002ec71:	call   0x1002df50
1002ec76:	test   al,al
1002ec78:	je     0x1002ecca
1002ec7a:	mov    eax,DWORD PTR [ebp-0x4]
1002ec7d:	cmp    eax,DWORD PTR [ebp+0xc]
1002ec80:	jae    0x1002ecca
1002ec82:	xor    ebx,ebx
1002ec84:	cmp    DWORD PTR [esi],ebx
1002ec86:	jne    0x1002ec8d
1002ec88:	call   0x100434a0
1002ec8d:	mov    eax,DWORD PTR [esi]
1002ec8f:	mov    ecx,DWORD PTR [esi+0x4]
1002ec92:	cmp    ecx,DWORD PTR [eax+0x8]
1002ec95:	jb     0x1002ec9c
1002ec97:	call   0x100434a0
1002ec9c:	mov    eax,DWORD PTR [esi+0x4]
1002ec9f:	mov    edi,DWORD PTR [ebp-0xc]
1002eca2:	push   eax
1002eca3:	push   edi
1002eca4:	mov    WORD PTR [edi],bx
1002eca7:	call   DWORD PTR ds:0x10066280
1002ecad:	cmp    eax,ebx
1002ecaf:	mov    DWORD PTR [ebp-0x8],eax
1002ecb2:	jl     0x1002ecfd
1002ecb4:	add    edi,0x10
1002ecb7:	mov    DWORD PTR [ebp-0xc],edi
1002ecba:	lea    edi,[ebp-0x1c]
1002ecbd:	call   0x1002df26
1002ecc2:	inc    DWORD PTR [ebp-0x4]
1002ecc5:	cmp    DWORD PTR [ebp-0x8],ebx
1002ecc8:	jge    0x1002ec55
1002ecca:	cmp    DWORD PTR [ebp-0x8],0x0
1002ecce:	pop    edi
1002eccf:	pop    esi
1002ecd0:	pop    ebx
1002ecd1:	jl     0x1002eceb
1002ecd3:	mov    eax,DWORD PTR [ebp+0x14]
1002ecd6:	test   eax,eax
1002ecd8:	mov    ecx,DWORD PTR [ebp-0x4]
1002ecdb:	je     0x1002ecdf
1002ecdd:	mov    DWORD PTR [eax],ecx
1002ecdf:	cmp    ecx,DWORD PTR [ebp+0xc]
1002ece2:	jae    0x1002eceb
1002ece4:	mov    DWORD PTR [ebp-0x8],0x1
1002eceb:	mov    eax,DWORD PTR [ebp-0x8]
1002ecee:	jmp    0x1002ed0c
1002ecf0:	push   DWORD PTR [ebp+0x10]
1002ecf3:	call   DWORD PTR ds:0x10066294
1002ecf9:	add    DWORD PTR [ebp+0x10],0x10
1002ecfd:	cmp    DWORD PTR [ebp+0x10],edi
1002ed00:	jb     0x1002ecf0
1002ed02:	mov    DWORD PTR [ebp-0x4],ebx
1002ed05:	jmp    0x1002ecc5
1002ed07:	mov    eax,0x80004003
1002ed0c:	leave  
1002ed0d:	ret    0x10
1002ed10:	push   ebp
1002ed11:	mov    ebp,esp
1002ed13:	sub    esp,0x14
1002ed16:	and    DWORD PTR [ebp-0x4],0x0
1002ed1a:	cmp    DWORD PTR [ebp+0xc],0x0
1002ed1e:	je     0x1002ed6b
1002ed20:	push   ebx
1002ed21:	mov    ebx,DWORD PTR [ebp+0x8]
1002ed24:	push   esi
1002ed25:	push   edi
1002ed26:	mov    edi,DWORD PTR [ebx+0x8]
1002ed29:	mov    esi,DWORD PTR [edi+0x8]
1002ed2c:	dec    DWORD PTR [ebp+0xc]
1002ed2f:	cmp    DWORD PTR [edi+0x4],esi
1002ed32:	jbe    0x1002ed39
1002ed34:	call   0x100434a0
1002ed39:	mov    DWORD PTR [ebp-0xc],edi
1002ed3c:	mov    DWORD PTR [ebp-0x8],esi
1002ed3f:	lea    edi,[ebp-0xc]
1002ed42:	lea    esi,[ebx+0xc]
1002ed45:	call   0x1002df50
1002ed4a:	test   al,al
1002ed4c:	je     0x1002ed61
1002ed4e:	lea    edi,[ebp-0x14]
1002ed51:	lea    esi,[ebx+0xc]
1002ed54:	call   0x1002df26
1002ed59:	cmp    DWORD PTR [ebp+0xc],0x0
1002ed5d:	jne    0x1002ed26
1002ed5f:	jmp    0x1002ed68
1002ed61:	mov    DWORD PTR [ebp-0x4],0x1
1002ed68:	pop    edi
1002ed69:	pop    esi
1002ed6a:	pop    ebx
1002ed6b:	mov    eax,DWORD PTR [ebp-0x4]
1002ed6e:	leave  
1002ed6f:	ret    0x8
1002ed72:	push   ebp
1002ed73:	mov    ebp,esp
1002ed75:	push   ecx
1002ed76:	mov    eax,DWORD PTR [ebp+0xc]
1002ed79:	test   eax,eax
1002ed7b:	push   ebx
1002ed7c:	mov    ebx,0x80004003
1002ed81:	je     0x1002ede4
1002ed83:	and    DWORD PTR [eax],0x0
1002ed86:	lea    eax,[ebp-0x4]
1002ed89:	push   eax
1002ed8a:	call   0x1002eb8d
1002ed8f:	mov    ebx,eax
1002ed91:	test   ebx,ebx
1002ed93:	jl     0x1002ede4
1002ed95:	push   esi
1002ed96:	mov    esi,DWORD PTR [ebp+0x8]
1002ed99:	mov    eax,DWORD PTR [esi+0x4]
1002ed9c:	push   edi
1002ed9d:	mov    edi,DWORD PTR [ebp-0x4]
1002eda0:	push   DWORD PTR [esi+0x8]
1002eda3:	mov    ebx,edi
1002eda5:	call   0x1002dfb2
1002edaa:	mov    ebx,eax
1002edac:	test   ebx,ebx
1002edae:	jl     0x1002edd5
1002edb0:	mov    eax,DWORD PTR [esi+0xc]
1002edb3:	mov    ebx,DWORD PTR [ebp+0xc]
1002edb6:	mov    DWORD PTR [edi+0xc],eax
1002edb9:	mov    eax,DWORD PTR [esi+0x10]
1002edbc:	push   0x10072af0
1002edc1:	mov    DWORD PTR [edi+0x10],eax
1002edc4:	push   edi
1002edc5:	mov    eax,0x10072e34
1002edca:	call   0x10010413
1002edcf:	mov    ebx,eax
1002edd1:	test   ebx,ebx
1002edd3:	jge    0x1002ede2
1002edd5:	test   edi,edi
1002edd7:	je     0x1002ede2
1002edd9:	mov    eax,DWORD PTR [edi]
1002eddb:	push   0x1
1002eddd:	mov    ecx,edi
1002eddf:	call   DWORD PTR [eax+0x1c]
1002ede2:	pop    edi
1002ede3:	pop    esi
1002ede4:	mov    eax,ebx
1002ede6:	pop    ebx
1002ede7:	leave  
1002ede8:	ret    0x8
1002edeb:	push   0xc
1002eded:	mov    eax,0x10061959
1002edf2:	call   0x10059b58
1002edf7:	mov    ebx,DWORD PTR [ebp+0x8]
1002edfa:	xor    esi,esi
1002edfc:	cmp    ebx,esi
1002edfe:	jne    0x1002ee07
1002ee00:	mov    eax,0x80004003
1002ee05:	jmp    0x1002ee5f
1002ee07:	push   0x14
1002ee09:	mov    DWORD PTR [ebx],esi
1002ee0b:	mov    DWORD PTR [ebp-0x14],0x8007000e
1002ee12:	mov    DWORD PTR [ebp-0x18],esi
1002ee15:	mov    DWORD PTR [ebp-0x4],esi
1002ee18:	call   0x1004358e
1002ee1d:	mov    edi,eax
1002ee1f:	cmp    edi,esi
1002ee21:	pop    ecx
1002ee22:	je     0x1002ee42
1002ee24:	mov    DWORD PTR [edi+0x4],esi
1002ee27:	lea    esi,[edi+0x8]
1002ee2a:	call   0x1002d76b
1002ee2f:	mov    DWORD PTR [edi],0x10072f68
1002ee35:	mov    ecx,DWORD PTR ds:0x10080c04
1002ee3b:	mov    eax,DWORD PTR [ecx]
1002ee3d:	call   DWORD PTR [eax+0x4]
1002ee40:	jmp    0x1002ee52
1002ee42:	xor    edi,edi
1002ee44:	jmp    0x1002ee52
1002ee46:	mov    eax,0x1002ee4c
1002ee4b:	ret    
1002ee4c:	mov    ebx,DWORD PTR [ebp+0x8]
1002ee4f:	mov    edi,DWORD PTR [ebp-0x18]
1002ee52:	test   edi,edi
1002ee54:	je     0x1002ee5a
1002ee56:	and    DWORD PTR [ebp-0x14],0x0
1002ee5a:	mov    eax,DWORD PTR [ebp-0x14]
1002ee5d:	mov    DWORD PTR [ebx],edi
1002ee5f:	call   0x10059bfd
1002ee64:	ret    0x4
1002ee67:	push   ebp
1002ee68:	mov    ebp,esp
1002ee6a:	push   ecx
1002ee6b:	test   edi,edi
1002ee6d:	jne    0x1002ee76
1002ee6f:	mov    eax,0x80004003
1002ee74:	leave  
1002ee75:	ret    
1002ee76:	and    DWORD PTR [edi],0x0
1002ee79:	and    DWORD PTR [ebp-0x4],0x0
1002ee7d:	lea    eax,[ebp-0x4]
1002ee80:	push   eax
1002ee81:	call   0x1002eec4
1002ee86:	test   eax,eax
1002ee88:	jl     0x1002eec2
1002ee8a:	mov    eax,DWORD PTR [ebp+0x8]
1002ee8d:	push   ebx
1002ee8e:	mov    ebx,DWORD PTR [ebp-0x4]
1002ee91:	push   esi
1002ee92:	push   DWORD PTR [ebp+0xc]
1002ee95:	call   0x1002e0a7
1002ee9a:	mov    esi,eax
1002ee9c:	test   esi,esi
1002ee9e:	jl     0x1002eeb1
1002eea0:	mov    eax,DWORD PTR [ebx]
1002eea2:	push   edi
1002eea3:	push   0x1006dd70
1002eea8:	push   ebx
1002eea9:	call   DWORD PTR [eax]
1002eeab:	mov    esi,eax
1002eead:	test   esi,esi
1002eeaf:	jge    0x1002eebe
1002eeb1:	test   ebx,ebx
1002eeb3:	je     0x1002eebe
1002eeb5:	mov    eax,DWORD PTR [ebx]
1002eeb7:	push   0x1
1002eeb9:	mov    ecx,ebx
1002eebb:	call   DWORD PTR [eax+0x1c]
1002eebe:	mov    eax,esi
1002eec0:	pop    esi
1002eec1:	pop    ebx
1002eec2:	leave  
1002eec3:	ret    
1002eec4:	push   0xc
1002eec6:	mov    eax,0x1005fa67
1002eecb:	call   0x10059b58
1002eed0:	mov    ebx,DWORD PTR [ebp+0x8]
1002eed3:	xor    edi,edi
1002eed5:	cmp    ebx,edi
1002eed7:	jne    0x1002eee0
1002eed9:	mov    eax,0x80004003
1002eede:	jmp    0x1002ef36
1002eee0:	push   0x18
1002eee2:	mov    DWORD PTR [ebx],edi
1002eee4:	mov    DWORD PTR [ebp-0x14],0x8007000e
1002eeeb:	mov    DWORD PTR [ebp-0x4],edi
1002eeee:	call   0x1004358e
1002eef3:	mov    esi,eax
1002eef5:	cmp    esi,edi
1002eef7:	pop    ecx
1002eef8:	je     0x1002ef19
1002eefa:	mov    DWORD PTR [esi+0x4],edi
1002eefd:	mov    DWORD PTR [esi+0xc],edi
1002ef00:	mov    DWORD PTR [esi+0x10],edi
1002ef03:	mov    DWORD PTR [esi+0x14],edi
1002ef06:	mov    DWORD PTR [esi],0x10072f78
1002ef0c:	mov    ecx,DWORD PTR ds:0x10080c04
1002ef12:	mov    eax,DWORD PTR [ecx]
1002ef14:	call   DWORD PTR [eax+0x4]
1002ef17:	jmp    0x1002ef2a
1002ef19:	xor    esi,esi
1002ef1b:	jmp    0x1002ef2a
1002ef1d:	mov    eax,0x1002ef23
1002ef22:	ret    
1002ef23:	mov    ebx,DWORD PTR [ebp+0x8]
1002ef26:	xor    edi,edi
1002ef28:	mov    esi,edi
1002ef2a:	cmp    esi,edi
1002ef2c:	je     0x1002ef31
1002ef2e:	mov    DWORD PTR [ebp-0x14],edi
1002ef31:	mov    eax,DWORD PTR [ebp-0x14]
1002ef34:	mov    DWORD PTR [ebx],esi
1002ef36:	call   0x10059bfd
1002ef3b:	ret    0x4
1002ef3e:	push   ebp
1002ef3f:	mov    ebp,esp
1002ef41:	sub    esp,0x10
1002ef44:	push   ebx
1002ef45:	mov    ebx,DWORD PTR [ebp+0x10]
1002ef48:	xor    ecx,ecx
1002ef4a:	cmp    ebx,ecx
1002ef4c:	je     0x1002f014
1002ef52:	cmp    DWORD PTR [ebp+0xc],0x1
1002ef56:	je     0x1002ef61
1002ef58:	cmp    DWORD PTR [ebp+0x14],ecx
1002ef5b:	je     0x1002f014
1002ef61:	mov    eax,DWORD PTR [ebp+0x14]
1002ef64:	cmp    eax,ecx
1002ef66:	je     0x1002ef6a
1002ef68:	mov    DWORD PTR [eax],ecx
1002ef6a:	mov    eax,DWORD PTR [ebp+0x8]
1002ef6d:	cmp    DWORD PTR [eax+0x8],ecx
1002ef70:	jne    0x1002ef7c
1002ef72:	mov    eax,0x80004005
1002ef77:	jmp    0x1002f019
1002ef7c:	push   esi
1002ef7d:	push   edi
1002ef7e:	mov    DWORD PTR [ebp-0x4],ecx
1002ef81:	mov    DWORD PTR [ebp-0x8],ecx
1002ef84:	lea    esi,[eax+0xc]
1002ef87:	jmp    0x1002ef8c
1002ef89:	mov    eax,DWORD PTR [ebp+0x8]
1002ef8c:	mov    eax,DWORD PTR [eax+0x8]
1002ef8f:	mov    ecx,DWORD PTR [eax+0x4]
1002ef92:	lea    edi,[ebp-0x10]
1002ef95:	mov    DWORD PTR [ebp-0xc],ecx
1002ef98:	mov    DWORD PTR [ebp-0x10],eax
1002ef9b:	call   0x10009d5c
1002efa0:	test   al,al
1002efa2:	jne    0x1002efd8
1002efa4:	mov    eax,DWORD PTR [ebp-0x4]
1002efa7:	cmp    eax,DWORD PTR [ebp+0xc]
1002efaa:	jae    0x1002efd8
1002efac:	call   0x1002d8f6
1002efb1:	add    eax,0x8
1002efb4:	push   eax
1002efb5:	xor    edi,edi
1002efb7:	push   ebx
1002efb8:	mov    WORD PTR [ebx],di
1002efbb:	call   DWORD PTR ds:0x10066280
1002efc1:	cmp    eax,edi
1002efc3:	mov    DWORD PTR [ebp-0x8],eax
1002efc6:	jl     0x1002f00a
1002efc8:	add    ebx,0x10
1002efcb:	call   0x1002de75
1002efd0:	inc    DWORD PTR [ebp-0x4]
1002efd3:	cmp    DWORD PTR [ebp-0x8],edi
1002efd6:	jge    0x1002ef89
1002efd8:	cmp    DWORD PTR [ebp-0x8],0x0
1002efdc:	pop    edi
1002efdd:	pop    esi
1002efde:	jl     0x1002eff8
1002efe0:	mov    eax,DWORD PTR [ebp+0x14]
1002efe3:	test   eax,eax
1002efe5:	mov    ecx,DWORD PTR [ebp-0x4]
1002efe8:	je     0x1002efec
1002efea:	mov    DWORD PTR [eax],ecx
1002efec:	cmp    ecx,DWORD PTR [ebp+0xc]
1002efef:	jae    0x1002eff8
1002eff1:	mov    DWORD PTR [ebp-0x8],0x1
1002eff8:	mov    eax,DWORD PTR [ebp-0x8]
1002effb:	jmp    0x1002f019
1002effd:	push   DWORD PTR [ebp+0x10]
1002f000:	call   DWORD PTR ds:0x10066294
1002f006:	add    DWORD PTR [ebp+0x10],0x10
1002f00a:	cmp    DWORD PTR [ebp+0x10],ebx
1002f00d:	jb     0x1002effd
1002f00f:	mov    DWORD PTR [ebp-0x4],edi
1002f012:	jmp    0x1002efd3
1002f014:	mov    eax,0x80004003
1002f019:	pop    ebx
1002f01a:	leave  
1002f01b:	ret    0x10
1002f01e:	push   ebp
1002f01f:	mov    ebp,esp
1002f021:	sub    esp,0xc
1002f024:	and    DWORD PTR [ebp-0x4],0x0
1002f028:	cmp    DWORD PTR [ebp+0xc],0x0
1002f02c:	je     0x1002f069
1002f02e:	push   ebx
1002f02f:	mov    ebx,DWORD PTR [ebp+0x8]
1002f032:	push   esi
1002f033:	lea    esi,[ebx+0xc]
1002f036:	push   edi
1002f037:	mov    eax,DWORD PTR [ebx+0x8]
1002f03a:	mov    ecx,DWORD PTR [eax+0x4]
1002f03d:	dec    DWORD PTR [ebp+0xc]
1002f040:	lea    edi,[ebp-0xc]
1002f043:	mov    DWORD PTR [ebp-0x8],ecx
1002f046:	mov    DWORD PTR [ebp-0xc],eax
1002f049:	call   0x10009d5c
1002f04e:	test   al,al
1002f050:	jne    0x1002f05f
1002f052:	call   0x1002de75
1002f057:	cmp    DWORD PTR [ebp+0xc],0x0
1002f05b:	jne    0x1002f037
1002f05d:	jmp    0x1002f066
1002f05f:	mov    DWORD PTR [ebp-0x4],0x1
1002f066:	pop    edi
1002f067:	pop    esi
1002f068:	pop    ebx
1002f069:	mov    eax,DWORD PTR [ebp-0x4]
1002f06c:	leave  
1002f06d:	ret    0x8
1002f070:	push   ebp
1002f071:	mov    ebp,esp
1002f073:	push   ecx
1002f074:	mov    eax,DWORD PTR [ebp+0xc]
1002f077:	test   eax,eax
1002f079:	push   ebx
1002f07a:	mov    ebx,0x80004003
1002f07f:	je     0x1002f0e2
1002f081:	and    DWORD PTR [eax],0x0
1002f084:	lea    eax,[ebp-0x4]
1002f087:	push   eax
1002f088:	call   0x1002eec4
1002f08d:	mov    ebx,eax
1002f08f:	test   ebx,ebx
1002f091:	jl     0x1002f0e2
1002f093:	push   esi
1002f094:	mov    esi,DWORD PTR [ebp+0x8]
1002f097:	mov    eax,DWORD PTR [esi+0x4]
1002f09a:	push   edi
1002f09b:	mov    edi,DWORD PTR [ebp-0x4]
1002f09e:	push   DWORD PTR [esi+0x8]
1002f0a1:	mov    ebx,edi
1002f0a3:	call   0x1002e0a7
1002f0a8:	mov    ebx,eax
1002f0aa:	test   ebx,ebx
1002f0ac:	jl     0x1002f0d3
1002f0ae:	mov    eax,DWORD PTR [esi+0xc]
1002f0b1:	mov    ebx,DWORD PTR [ebp+0xc]
1002f0b4:	mov    DWORD PTR [edi+0xc],eax
1002f0b7:	mov    eax,DWORD PTR [esi+0x10]
1002f0ba:	push   0x10072af0
1002f0bf:	mov    DWORD PTR [edi+0x10],eax
1002f0c2:	push   edi
1002f0c3:	mov    eax,0x10072e34
1002f0c8:	call   0x10010413
1002f0cd:	mov    ebx,eax
1002f0cf:	test   ebx,ebx
1002f0d1:	jge    0x1002f0e0
1002f0d3:	test   edi,edi
1002f0d5:	je     0x1002f0e0
1002f0d7:	mov    eax,DWORD PTR [edi]
1002f0d9:	push   0x1
1002f0db:	mov    ecx,edi
1002f0dd:	call   DWORD PTR [eax+0x1c]
1002f0e0:	pop    edi
1002f0e1:	pop    esi
1002f0e2:	mov    eax,ebx
1002f0e4:	pop    ebx
1002f0e5:	leave  
1002f0e6:	ret    0x8
1002f0e9:	push   ebp
1002f0ea:	mov    ebp,esp
1002f0ec:	push   ecx
1002f0ed:	push   edi
1002f0ee:	xor    eax,eax
1002f0f0:	lea    edi,[ebp-0x4]
1002f0f3:	stos   BYTE PTR es:[edi],al
1002f0f4:	push   DWORD PTR [ebp-0x4]
1002f0f7:	push   DWORD PTR [ebp+0xc]
1002f0fa:	push   DWORD PTR [ebp+0xc]
1002f0fd:	push   DWORD PTR [ebp+0x8]
1002f100:	call   0x1002f265
1002f105:	add    esp,0x10
1002f108:	pop    edi
1002f109:	leave  
1002f10a:	ret    0x8
1002f10d:	push   ebx
1002f10e:	push   esi
1002f10f:	push   edi
1002f110:	mov    ebx,eax
1002f112:	mov    eax,DWORD PTR [ebx+0x4]
1002f115:	mov    esi,ecx
1002f117:	mov    edi,DWORD PTR [esi+0x4]
1002f11a:	add    eax,0x4
1002f11d:	push   edi
1002f11e:	push   DWORD PTR [eax]
1002f120:	call   0x1002f169
1002f125:	mov    DWORD PTR [edi+0x4],eax
1002f128:	mov    eax,DWORD PTR [ebx+0x8]
1002f12b:	mov    DWORD PTR [esi+0x8],eax
1002f12e:	mov    eax,DWORD PTR [esi+0x4]
1002f131:	mov    ecx,DWORD PTR [eax+0x4]
1002f134:	xor    bl,bl
1002f136:	cmp    BYTE PTR [ecx+0x29],bl
1002f139:	je     0x1002f149
1002f13b:	mov    DWORD PTR [eax],eax
1002f13d:	mov    esi,DWORD PTR [esi+0x4]
1002f140:	mov    DWORD PTR [esi+0x8],esi
1002f143:	pop    edi
1002f144:	pop    esi
1002f145:	pop    ebx
1002f146:	ret    
1002f147:	mov    ecx,edx
1002f149:	mov    edx,DWORD PTR [ecx]
1002f14b:	cmp    BYTE PTR [edx+0x29],bl
1002f14e:	je     0x1002f147
1002f150:	mov    DWORD PTR [eax],ecx
1002f152:	mov    esi,DWORD PTR [esi+0x4]
1002f155:	mov    ecx,DWORD PTR [esi+0x4]
1002f158:	jmp    0x1002f15c
1002f15a:	mov    ecx,eax
1002f15c:	mov    eax,DWORD PTR [ecx+0x8]
1002f15f:	cmp    BYTE PTR [eax+0x29],bl
1002f162:	je     0x1002f15a
1002f164:	mov    DWORD PTR [esi+0x8],ecx
1002f167:	jmp    0x1002f143
1002f169:	push   0xc
1002f16b:	mov    eax,0x100609a3
1002f170:	call   0x10059b58
1002f175:	mov    edi,ecx
1002f177:	mov    DWORD PTR [ebp-0x18],edi
1002f17a:	mov    esi,DWORD PTR [ebp+0x8]
1002f17d:	cmp    BYTE PTR [esi+0x29],0x0
1002f181:	mov    eax,DWORD PTR [edi+0x4]
1002f184:	mov    DWORD PTR [ebp-0x14],eax
1002f187:	jne    0x1002f1c8
1002f189:	movzx  ecx,BYTE PTR [esi+0x28]
1002f18d:	push   ecx
1002f18e:	lea    ecx,[esi+0x10]
1002f191:	push   ecx
1002f192:	push   eax
1002f193:	push   DWORD PTR [ebp+0xc]
1002f196:	push   eax
1002f197:	call   0x1002e911
1002f19c:	mov    ebx,eax
1002f19e:	mov    eax,DWORD PTR [ebp-0x14]
1002f1a1:	cmp    BYTE PTR [eax+0x29],0x0
1002f1a5:	je     0x1002f1aa
1002f1a7:	mov    DWORD PTR [ebp-0x14],ebx
1002f1aa:	and    DWORD PTR [ebp-0x4],0x0
1002f1ae:	push   ebx
1002f1af:	push   DWORD PTR [esi]
1002f1b1:	mov    ecx,edi
1002f1b3:	call   0x1002f169
1002f1b8:	push   ebx
1002f1b9:	mov    DWORD PTR [ebx],eax
1002f1bb:	push   DWORD PTR [esi+0x8]
1002f1be:	mov    ecx,edi
1002f1c0:	call   0x1002f169
1002f1c5:	mov    DWORD PTR [ebx+0x8],eax
1002f1c8:	mov    eax,DWORD PTR [ebp-0x14]
1002f1cb:	call   0x10059bfd
1002f1d0:	ret    0x8
1002f1d3:	push   DWORD PTR [ebp-0x14]
1002f1d6:	mov    ecx,DWORD PTR [ebp-0x18]
1002f1d9:	call   0x1002e966
1002f1de:	push   0x0
1002f1e0:	push   0x0
1002f1e2:	call   0x10047aa4
1002f1e7:	int3   
1002f1e8:	push   0x8
1002f1ea:	mov    eax,0x1005fa4c
1002f1ef:	call   0x10059b58
1002f1f4:	mov    eax,DWORD PTR [ebp+0x8]
1002f1f7:	and    DWORD PTR [ebp-0x4],0x0
1002f1fb:	mov    DWORD PTR [ebp-0x14],eax
1002f1fe:	cmp    DWORD PTR [ebp+0xc],0x0
1002f202:	jbe    0x1002f235
1002f204:	push   DWORD PTR [ebp+0x10]
1002f207:	mov    ecx,DWORD PTR [ebp+0x8]
1002f20a:	call   0x1002f23b
1002f20f:	dec    DWORD PTR [ebp+0xc]
1002f212:	add    DWORD PTR [ebp+0x8],0x10
1002f216:	jmp    0x1002f1fe
1002f218:	mov    esi,DWORD PTR [ebp-0x14]
1002f21b:	jmp    0x1002f227
1002f21d:	push   esi
1002f21e:	call   DWORD PTR ds:0x10066294
1002f224:	add    esi,0x10
1002f227:	cmp    esi,DWORD PTR [ebp+0x8]
1002f22a:	jne    0x1002f21d
1002f22c:	push   0x0
1002f22e:	push   0x0
1002f230:	call   0x10047aa4
1002f235:	call   0x10059bfd
1002f23a:	ret    
1002f23b:	push   0x0
1002f23d:	mov    eax,0x1005fa31
1002f242:	call   0x10059b25
1002f247:	mov    esi,ecx
1002f249:	and    DWORD PTR [ebp-0x4],0x0
1002f24d:	test   esi,esi
1002f24f:	je     0x1002f25d
1002f251:	push   DWORD PTR [ebp+0x8]
1002f254:	and    WORD PTR [esi],0x0
1002f258:	call   0x1002b02e
1002f25d:	call   0x10059bfd
1002f262:	ret    0x4
1002f265:	push   0x8
1002f267:	mov    eax,0x1005ffc4
1002f26c:	call   0x10059b58
1002f271:	mov    esi,ecx
1002f273:	mov    eax,DWORD PTR [ebp+0xc]
1002f276:	and    DWORD PTR [ebp-0x4],0x0
1002f27a:	mov    DWORD PTR [ebp-0x14],eax
1002f27d:	cmp    esi,DWORD PTR [ebp+0x8]
1002f280:	je     0x1002f2b1
1002f282:	mov    ecx,DWORD PTR [ebp+0xc]
1002f285:	push   esi
1002f286:	call   0x1002f23b
1002f28b:	add    DWORD PTR [ebp+0xc],0x10
1002f28f:	add    esi,0x10
1002f292:	jmp    0x1002f27d
1002f294:	mov    esi,DWORD PTR [ebp-0x14]
1002f297:	jmp    0x1002f2a3
1002f299:	push   esi
1002f29a:	call   DWORD PTR ds:0x10066294
1002f2a0:	add    esi,0x10
1002f2a3:	cmp    esi,DWORD PTR [ebp+0xc]
1002f2a6:	jne    0x1002f299
1002f2a8:	push   0x0
1002f2aa:	push   0x0
1002f2ac:	call   0x10047aa4
1002f2b1:	mov    eax,DWORD PTR [ebp+0xc]
1002f2b4:	call   0x10059bfd
1002f2b9:	ret    
1002f2ba:	int3   
1002f2bb:	int3   
1002f2bc:	int3   
1002f2bd:	int3   
1002f2be:	int3   
1002f2bf:	int3   
1002f2c0:	push   eax
1002f2c1:	push   ecx
1002f2c2:	call   0x1005855c
1002f2c7:	add    esp,0x8
1002f2ca:	cmp    eax,0x50
1002f2cd:	ja     0x1002f2f1
1002f2cf:	movzx  edx,BYTE PTR [eax+0x1002f30c]
1002f2d6:	jmp    DWORD PTR [edx*4+0x1002f2fc]
1002f2dd:	push   0x8007000e
1002f2e2:	call   0x10001f33
1002f2e7:	push   0x80070057
1002f2ec:	call   0x10001f33
1002f2f1:	push   0x80004005
1002f2f6:	call   0x10001f33
1002f2fb:	ret    
1002f2fc:	sti    
1002f2fd:	repnz add dl,BYTE PTR [eax]
1002f300:	(bad)  
1002f302:	add    dl,BYTE PTR [eax]
1002f304:	out    0xf2,eax
1002f306:	add    dl,BYTE PTR [eax]
1002f308:	icebp  
1002f309:	repnz add dl,BYTE PTR [eax]
1002f30c:	add    BYTE PTR [ebx],al
1002f30e:	add    eax,DWORD PTR [ebx]
1002f310:	add    eax,DWORD PTR [ebx]
1002f312:	add    eax,DWORD PTR [ebx]
1002f314:	add    eax,DWORD PTR [ebx]
1002f316:	add    eax,DWORD PTR [ebx]
1002f318:	add    DWORD PTR [ebx],eax
1002f31a:	add    eax,DWORD PTR [ebx]
1002f31c:	add    eax,DWORD PTR [ebx]
1002f31e:	add    eax,DWORD PTR [ebx]
1002f320:	add    eax,DWORD PTR [ebx]
1002f322:	add    al,BYTE PTR [ebx]
1002f324:	add    eax,DWORD PTR [ebx]
1002f326:	add    eax,DWORD PTR [ebx]
1002f328:	add    eax,DWORD PTR [ebx]
1002f32a:	add    eax,DWORD PTR [ebx]
1002f32c:	add    eax,DWORD PTR [ebx]
1002f32e:	add    al,BYTE PTR [ebx]
1002f330:	add    eax,DWORD PTR [ebx]
1002f332:	add    eax,DWORD PTR [ebx]
1002f334:	add    eax,DWORD PTR [ebx]
1002f336:	add    eax,DWORD PTR [ebx]
1002f338:	add    eax,DWORD PTR [ebx]
1002f33a:	add    eax,DWORD PTR [ebx]
1002f33c:	add    eax,DWORD PTR [ebx]
1002f33e:	add    eax,DWORD PTR [ebx]
1002f340:	add    eax,DWORD PTR [ebx]
1002f342:	add    eax,DWORD PTR [ebx]
1002f344:	add    eax,DWORD PTR [ebx]
1002f346:	add    eax,DWORD PTR [ebx]
1002f348:	add    eax,DWORD PTR [ebx]
1002f34a:	add    eax,DWORD PTR [ebx]
1002f34c:	add    eax,DWORD PTR [ebx]
1002f34e:	add    eax,DWORD PTR [ebx]
1002f350:	add    eax,DWORD PTR [ebx]
1002f352:	add    eax,DWORD PTR [ebx]
1002f354:	add    eax,DWORD PTR [ebx]
1002f356:	add    eax,DWORD PTR [ebx]
1002f358:	add    eax,DWORD PTR [ebx]
1002f35a:	add    eax,DWORD PTR [ebx]
1002f35c:	add    ah,cl
1002f35e:	int3   
1002f35f:	int3   
1002f360:	mov    eax,esi
1002f362:	mov    edx,0xe3
1002f367:	push   edi
1002f368:	mov    ecx,DWORD PTR [eax+0x4]
1002f36b:	mov    edi,DWORD PTR [eax]
1002f36d:	xor    edi,ecx
1002f36f:	and    edi,0x7ffffffe
1002f375:	xor    edi,DWORD PTR [eax]
1002f377:	and    cl,0x1
1002f37a:	shr    edi,1
1002f37c:	sub    edx,0x1
1002f37f:	neg    cl
1002f381:	sbb    ecx,ecx
1002f383:	and    ecx,0x9908b0df
1002f389:	xor    edi,ecx
1002f38b:	xor    edi,DWORD PTR [eax+0x634]
1002f391:	add    eax,0x4
1002f394:	test   edx,edx
1002f396:	mov    DWORD PTR [eax-0x4],edi
1002f399:	jne    0x1002f368
1002f39b:	mov    edx,0x18c
1002f3a0:	mov    ecx,DWORD PTR [eax+0x4]
1002f3a3:	mov    edi,DWORD PTR [eax]
1002f3a5:	xor    edi,ecx
1002f3a7:	and    edi,0x7ffffffe
1002f3ad:	xor    edi,DWORD PTR [eax]
1002f3af:	and    cl,0x1
1002f3b2:	shr    edi,1
1002f3b4:	neg    cl
1002f3b6:	sbb    ecx,ecx
1002f3b8:	and    ecx,0x9908b0df
1002f3be:	xor    edi,ecx
1002f3c0:	xor    edi,DWORD PTR [eax-0x38c]
1002f3c6:	add    eax,0x4
1002f3c9:	sub    edx,0x1
1002f3cc:	mov    DWORD PTR [eax-0x4],edi
1002f3cf:	jne    0x1002f3a0
1002f3d1:	mov    ecx,DWORD PTR [esi]
1002f3d3:	mov    edx,DWORD PTR [eax]
1002f3d5:	xor    edx,ecx
1002f3d7:	and    edx,0x7ffffffe
1002f3dd:	xor    edx,DWORD PTR [eax]
1002f3df:	and    cl,0x1
1002f3e2:	shr    edx,1
1002f3e4:	neg    cl
1002f3e6:	pop    edi
1002f3e7:	sbb    ecx,ecx
1002f3e9:	and    ecx,0x9908b0df
1002f3ef:	xor    edx,ecx
1002f3f1:	xor    edx,DWORD PTR [eax-0x38c]
1002f3f7:	mov    DWORD PTR [eax],edx
1002f3f9:	mov    DWORD PTR [esi+0x9c4],0x270
1002f403:	mov    DWORD PTR [esi+0x9c0],esi
1002f409:	ret    
1002f40a:	int3   
1002f40b:	int3   
1002f40c:	int3   
1002f40d:	int3   
1002f40e:	int3   
1002f40f:	int3   
1002f410:	push   esi
1002f411:	mov    esi,eax
1002f413:	push   edi
1002f414:	mov    ecx,0x1
1002f419:	mov    DWORD PTR [esi],edx
1002f41b:	jmp    0x1002f420
1002f41d:	lea    ecx,[ecx+0x0]
1002f420:	mov    edx,DWORD PTR [eax]
1002f422:	mov    edi,edx
1002f424:	shr    edi,0x1e
1002f427:	xor    edi,edx
1002f429:	imul   edi,edi,0x6c078965
1002f42f:	add    edi,ecx
1002f431:	mov    DWORD PTR [eax+0x4],edi
1002f434:	add    ecx,0x1
1002f437:	add    eax,0x4
1002f43a:	cmp    ecx,0x270
1002f440:	jl     0x1002f420
1002f442:	call   0x1002f360
1002f447:	pop    edi
1002f448:	pop    esi
1002f449:	ret    
1002f44a:	int3   
1002f44b:	int3   
1002f44c:	int3   
1002f44d:	int3   
1002f44e:	int3   
1002f44f:	int3   
1002f450:	push   esi
1002f451:	mov    esi,eax
1002f453:	cmp    DWORD PTR [esi+0x9c4],0x0
1002f45a:	jne    0x1002f461
1002f45c:	call   0x1002f360
1002f461:	mov    eax,DWORD PTR [esi+0x9c0]
1002f467:	add    DWORD PTR [esi+0x9c4],0xffffffff
1002f46e:	mov    ecx,DWORD PTR [eax]
1002f470:	add    eax,0x4
1002f473:	mov    DWORD PTR [esi+0x9c0],eax
1002f479:	mov    eax,ecx
1002f47b:	shr    eax,0xb
1002f47e:	xor    ecx,eax
1002f480:	mov    edx,ecx
1002f482:	and    edx,0xff3a58ad
1002f488:	shl    edx,0x7
1002f48b:	xor    ecx,edx
1002f48d:	mov    eax,ecx
1002f48f:	and    eax,0xffffdf8c
1002f494:	shl    eax,0xf
1002f497:	xor    ecx,eax
1002f499:	mov    eax,ecx
1002f49b:	shr    eax,0x12
1002f49e:	xor    eax,ecx
1002f4a0:	and    eax,0x3f
1002f4a3:	cmp    eax,0x23
1002f4a6:	ja     0x1002f453
1002f4a8:	pop    esi
1002f4a9:	ret    
1002f4aa:	int3   
1002f4ab:	int3   
1002f4ac:	int3   
1002f4ad:	int3   
1002f4ae:	int3   
1002f4af:	int3   
1002f4b0:	sub    esp,0x9cc
1002f4b6:	push   esi
1002f4b7:	push   edi
1002f4b8:	add    edx,0x20
1002f4bb:	lea    eax,[esp+0x8]
1002f4bf:	call   0x1002f410
1002f4c4:	mov    eax,ds:0x1007fa44
1002f4c9:	mov    WORD PTR [ebx],0x0
1002f4ce:	mov    edx,eax
1002f4d0:	mov    cx,WORD PTR [eax]
1002f4d3:	add    eax,0x2
1002f4d6:	test   cx,cx
1002f4d9:	jne    0x1002f4d0
1002f4db:	mov    edi,ebx
1002f4dd:	sub    eax,edx
1002f4df:	add    edi,0xfffffffe
1002f4e2:	mov    cx,WORD PTR [edi+0x2]
1002f4e6:	add    edi,0x2
1002f4e9:	test   cx,cx
1002f4ec:	jne    0x1002f4e2
1002f4ee:	mov    ecx,eax
1002f4f0:	shr    ecx,0x2
1002f4f3:	mov    esi,edx
1002f4f5:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
1002f4f7:	mov    ecx,eax
1002f4f9:	and    ecx,0x3
1002f4fc:	mov    eax,ebx
1002f4fe:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
1002f500:	lea    edx,[eax+0x2]
1002f503:	mov    cx,WORD PTR [eax]
1002f506:	add    eax,0x2
1002f509:	test   cx,cx
1002f50c:	jne    0x1002f503
1002f50e:	sub    eax,edx
1002f510:	sar    eax,1
1002f512:	mov    esi,eax
1002f514:	mov    edi,0x5
1002f519:	lea    esp,[esp+0x0]
1002f520:	lea    eax,[esp+0x8]
1002f524:	call   0x1002f450
1002f529:	cmp    eax,0xa
1002f52c:	jae    0x1002f533
1002f52e:	add    eax,0x30
1002f531:	jmp    0x1002f536
1002f533:	add    eax,0x57
1002f536:	movzx  eax,ax
1002f539:	mov    WORD PTR [ebx+esi*2],ax
1002f53d:	add    esi,0x1
1002f540:	sub    edi,0x1
1002f543:	mov    WORD PTR [ebx+esi*2],0x0
1002f549:	jne    0x1002f520
1002f54b:	pop    edi
1002f54c:	pop    esi
1002f54d:	add    esp,0x9cc
1002f553:	ret    
1002f554:	int3   
1002f555:	int3   
1002f556:	int3   
1002f557:	int3   
1002f558:	int3   
1002f559:	int3   
1002f55a:	int3   
1002f55b:	int3   
1002f55c:	int3   
1002f55d:	int3   
1002f55e:	int3   
1002f55f:	int3   
1002f560:	push   ebp
1002f561:	mov    ebp,esp
1002f563:	and    esp,0xfffffff8
1002f566:	push   0xffffffff
1002f568:	push   0x1005f880
1002f56d:	mov    eax,fs:0x0
1002f573:	push   eax
1002f574:	sub    esp,0x50
1002f577:	push   ebx
1002f578:	push   esi
1002f579:	push   edi
1002f57a:	mov    eax,ds:0x1007e030
1002f57f:	xor    eax,esp
1002f581:	push   eax
1002f582:	lea    eax,[esp+0x60]
1002f586:	mov    fs:0x0,eax
1002f58c:	xor    ebx,ebx
1002f58e:	push   0x4000
1002f593:	mov    DWORD PTR [esp+0x18],ebx
1002f597:	call   0x10043811
1002f59c:	mov    edi,eax
1002f59e:	push   0x38
1002f5a0:	mov    DWORD PTR [esp+0x70],ebx
1002f5a4:	push   0x10072fd0
1002f5a9:	lea    eax,[esp+0x30]
1002f5ad:	push   0x2f
1002f5af:	push   eax
1002f5b0:	mov    DWORD PTR [esp+0x58],ebx
1002f5b4:	mov    DWORD PTR [esp+0x5c],ebx
1002f5b8:	mov    DWORD PTR [esp+0x60],ebx
1002f5bc:	mov    DWORD PTR [esp+0x3c],ebx
1002f5c0:	mov    DWORD PTR [esp+0x38],ebx
1002f5c4:	call   0x100529c0
1002f5c9:	add    esp,0x14
1002f5cc:	test   eax,eax
1002f5ce:	je     0x1002f5fd
1002f5d0:	mov    esi,DWORD PTR [ebp+0x8]
1002f5d3:	push   ebx
1002f5d4:	mov    DWORD PTR [esp+0x1c],ebx
1002f5d8:	mov    DWORD PTR [esi],ebx
1002f5da:	call   0x10042f82
1002f5df:	push   edi
1002f5e0:	call   0x10042f82
1002f5e5:	add    esp,0x8
1002f5e8:	mov    eax,esi
1002f5ea:	mov    ecx,DWORD PTR [esp+0x60]
1002f5ee:	mov    DWORD PTR fs:0x0,ecx
1002f5f5:	pop    ecx
1002f5f6:	pop    edi
1002f5f7:	pop    esi
1002f5f8:	pop    ebx
1002f5f9:	mov    esp,ebp
1002f5fb:	pop    ebp
1002f5fc:	ret    
1002f5fd:	mov    ecx,DWORD PTR [ebp+0x10]
1002f600:	mov    edx,DWORD PTR [ebp+0xc]
1002f603:	mov    DWORD PTR [esp+0x28],ecx
1002f607:	mov    DWORD PTR [esp+0x24],edx
1002f60b:	jmp    0x1002f610
1002f60d:	lea    ecx,[ecx+0x0]
1002f610:	lea    ecx,[esp+0x24]
1002f614:	lea    eax,[ebx+edi*1]
1002f617:	push   0x4
1002f619:	push   ecx
1002f61a:	mov    DWORD PTR [esp+0x3c],0x4000
1002f622:	mov    DWORD PTR [esp+0x38],eax
1002f626:	call   0x10052ba0
1002f62b:	mov    esi,eax
1002f62d:	add    esp,0x8
1002f630:	cmp    esi,0xfffffffc
1002f633:	mov    DWORD PTR [esp+0x18],esi
1002f637:	jl     0x1002f64b
1002f639:	cmp    esi,0xfffffffd
1002f63c:	jle    0x1002f6e2
1002f642:	cmp    esi,0x2
1002f645:	je     0x1002f6e2
1002f64b:	mov    ecx,DWORD PTR [esp+0x34]
1002f64f:	mov    eax,0x4000
1002f654:	sub    eax,ecx
1002f656:	add    ebx,eax
1002f658:	test   ecx,ecx
1002f65a:	mov    DWORD PTR [esp+0x14],ebx
1002f65e:	jne    0x1002f6c9
1002f660:	mov    esi,edi
1002f662:	mov    DWORD PTR [esp+0x1c],ecx
1002f666:	mov    DWORD PTR [esp+0x20],esi
1002f66a:	add    ebx,0x4000
1002f670:	push   ebx
1002f671:	mov    BYTE PTR [esp+0x6c],0x1
1002f676:	call   0x10043811
1002f67b:	mov    edi,eax
1002f67d:	add    esp,0x4
1002f680:	test   edi,edi
1002f682:	mov    DWORD PTR [esp+0x10],0x0
1002f68a:	je     0x1002f696
1002f68c:	push   0x0
1002f68e:	call   0x10042f82
1002f693:	add    esp,0x4
1002f696:	mov    edx,DWORD PTR [esp+0x10]
1002f69a:	push   edx
1002f69b:	call   0x10042f82
1002f6a0:	mov    ebx,DWORD PTR [esp+0x18]
1002f6a4:	push   ebx
1002f6a5:	push   esi
1002f6a6:	push   edi
1002f6a7:	call   0x10045270
1002f6ac:	push   esi
1002f6ad:	mov    BYTE PTR [esp+0x7c],0x0
1002f6b2:	call   0x10042f82
1002f6b7:	add    esp,0x14
1002f6ba:	cmp    DWORD PTR [esp+0x34],0x0
1002f6bf:	je     0x1002f610
1002f6c5:	mov    esi,DWORD PTR [esp+0x18]
1002f6c9:	lea    ecx,[esp+0x24]
1002f6cd:	push   ecx
1002f6ce:	call   0x10054190
1002f6d3:	add    esp,0x4
1002f6d6:	cmp    esi,0x1
1002f6d9:	jne    0x1002f722
1002f6db:	mov    edx,DWORD PTR [ebp+0x14]
1002f6de:	mov    DWORD PTR [edx],ebx
1002f6e0:	jmp    0x1002f746
1002f6e2:	lea    eax,[esp+0x24]
1002f6e6:	push   eax
1002f6e7:	call   0x10054190
1002f6ec:	mov    esi,DWORD PTR [ebp+0x8]
1002f6ef:	push   0x0
1002f6f1:	mov    DWORD PTR [esp+0x28],0x0
1002f6f9:	mov    DWORD PTR [esi],0x0
1002f6ff:	call   0x10042f82
1002f704:	push   edi
1002f705:	call   0x10042f82
1002f70a:	add    esp,0xc
1002f70d:	mov    eax,esi
1002f70f:	mov    ecx,DWORD PTR [esp+0x60]
1002f713:	mov    DWORD PTR fs:0x0,ecx
1002f71a:	pop    ecx
1002f71b:	pop    edi
1002f71c:	pop    esi
1002f71d:	pop    ebx
1002f71e:	mov    esp,ebp
1002f720:	pop    ebp
1002f721:	ret    
1002f722:	test   edi,edi
1002f724:	mov    DWORD PTR [esp+0x18],0x0
1002f72c:	je     0x1002f737
1002f72e:	push   edi
1002f72f:	call   0x10042f82
1002f734:	add    esp,0x4
1002f737:	mov    eax,DWORD PTR [esp+0x18]
1002f73b:	push   eax
1002f73c:	xor    edi,edi
1002f73e:	call   0x10042f82
1002f743:	add    esp,0x4
1002f746:	mov    esi,DWORD PTR [ebp+0x8]
1002f749:	push   0x0
1002f74b:	mov    DWORD PTR [esi],edi
1002f74d:	call   0x10042f82
1002f752:	add    esp,0x4
1002f755:	mov    eax,esi
1002f757:	mov    ecx,DWORD PTR [esp+0x60]
1002f75b:	mov    DWORD PTR fs:0x0,ecx
1002f762:	pop    ecx
1002f763:	pop    edi
1002f764:	pop    esi
1002f765:	pop    ebx
1002f766:	mov    esp,ebp
1002f768:	pop    ebp
1002f769:	ret    
1002f76a:	int3   
1002f76b:	int3   
1002f76c:	int3   
1002f76d:	int3   
1002f76e:	int3   
1002f76f:	int3   
1002f770:	push   0xffffffff
1002f772:	push   0x1005f850
1002f777:	mov    eax,fs:0x0
1002f77d:	push   eax
1002f77e:	sub    esp,0x48
1002f781:	push   ebx
1002f782:	push   ebp
1002f783:	push   esi
1002f784:	push   edi
1002f785:	mov    eax,ds:0x1007e030
1002f78a:	xor    eax,esp
1002f78c:	push   eax
1002f78d:	lea    eax,[esp+0x5c]
1002f791:	mov    fs:0x0,eax
1002f797:	mov    eax,DWORD PTR [esp+0x74]
1002f79b:	xor    ebx,ebx
1002f79d:	mov    ebp,0x4000
1002f7a2:	cmp    eax,ebp
1002f7a4:	mov    DWORD PTR [esp+0x18],ebx
1002f7a8:	jae    0x1002f7b6
1002f7aa:	cmp    eax,0x20
1002f7ad:	mov    ebp,eax
1002f7af:	jge    0x1002f7b6
1002f7b1:	mov    ebp,0x20
1002f7b6:	push   ebp
1002f7b7:	call   0x10043811
1002f7bc:	mov    edi,eax
1002f7be:	mov    eax,DWORD PTR [esp+0x80]
1002f7c5:	push   0x38
1002f7c7:	push   0x10072fd0
1002f7cc:	push   ebx
1002f7cd:	push   0x8
1002f7cf:	push   eax
1002f7d0:	mov    DWORD PTR [esp+0x7c],ebx
1002f7d4:	push   0x8
1002f7d6:	lea    ecx,[esp+0x3c]
1002f7da:	push   0x9
1002f7dc:	push   ecx
1002f7dd:	xor    esi,esi
1002f7df:	mov    DWORD PTR [esp+0x64],ebx
1002f7e3:	mov    DWORD PTR [esp+0x68],ebx
1002f7e7:	mov    DWORD PTR [esp+0x6c],ebx
1002f7eb:	mov    DWORD PTR [esp+0x48],ebx
1002f7ef:	mov    DWORD PTR [esp+0x44],ebx
1002f7f3:	call   0x10052740
1002f7f8:	add    esp,0x24
1002f7fb:	test   eax,eax
1002f7fd:	je     0x1002f81d
1002f7ff:	mov    esi,DWORD PTR [esp+0x6c]
1002f803:	push   ebx
1002f804:	mov    DWORD PTR [esp+0x78],ebx
1002f808:	mov    DWORD PTR [esi],ebx
1002f80a:	call   0x10042f82
1002f80f:	push   edi
1002f810:	call   0x10042f82
1002f815:	add    esp,0x8
1002f818:	jmp    0x1002f912
1002f81d:	mov    edx,DWORD PTR [esp+0x74]
1002f821:	mov    eax,DWORD PTR [esp+0x70]
1002f825:	mov    DWORD PTR [esp+0x24],edx
1002f829:	mov    DWORD PTR [esp+0x20],eax
1002f82d:	lea    ecx,[ecx+0x0]
1002f830:	lea    edx,[esp+0x20]
1002f834:	lea    ecx,[esi+edi*1]
1002f837:	push   0x4
1002f839:	push   edx
1002f83a:	mov    DWORD PTR [esp+0x38],ebp
1002f83e:	mov    DWORD PTR [esp+0x34],ecx
1002f842:	call   0x10051170
1002f847:	mov    ecx,DWORD PTR [esp+0x38]
1002f84b:	mov    DWORD PTR [esp+0x20],eax
1002f84f:	mov    eax,ebp
1002f851:	sub    eax,ecx
1002f853:	add    esp,0x8
1002f856:	add    esi,eax
1002f858:	cmp    ecx,ebx
1002f85a:	jne    0x1002f8c7
1002f85c:	mov    ebx,edi
1002f85e:	mov    DWORD PTR [esp+0x14],0x0
1002f866:	mov    DWORD PTR [esp+0x1c],ebx
1002f86a:	lea    eax,[esi+ebp*1]
1002f86d:	push   eax
1002f86e:	mov    BYTE PTR [esp+0x68],0x1
1002f873:	call   0x10043811
1002f878:	mov    edi,eax
1002f87a:	add    esp,0x4
1002f87d:	test   edi,edi
1002f87f:	mov    DWORD PTR [esp+0x14],edi
1002f883:	mov    DWORD PTR [esp+0x74],0x0
1002f88b:	je     0x1002f897
1002f88d:	push   0x0
1002f88f:	call   0x10042f82
1002f894:	add    esp,0x4
1002f897:	mov    ecx,DWORD PTR [esp+0x74]
1002f89b:	push   ecx
1002f89c:	call   0x10042f82
1002f8a1:	mov    edx,DWORD PTR [esp+0x18]
1002f8a5:	push   esi
1002f8a6:	push   ebx
1002f8a7:	push   edx
1002f8a8:	call   0x10045270
1002f8ad:	push   ebx
1002f8ae:	mov    BYTE PTR [esp+0x78],0x0
1002f8b3:	call   0x10042f82
1002f8b8:	xor    ebx,ebx
1002f8ba:	add    esp,0x14
1002f8bd:	cmp    DWORD PTR [esp+0x30],ebx
1002f8c1:	je     0x1002f830
1002f8c7:	lea    eax,[esp+0x20]
1002f8cb:	push   eax
1002f8cc:	call   0x10051950
1002f8d1:	add    esp,0x4
1002f8d4:	cmp    DWORD PTR [esp+0x18],0x1
1002f8d9:	jne    0x1002f8e3
1002f8db:	mov    ecx,DWORD PTR [esp+0x78]
1002f8df:	mov    DWORD PTR [ecx],esi
1002f8e1:	jmp    0x1002f903
1002f8e3:	cmp    edi,ebx
1002f8e5:	mov    DWORD PTR [esp+0x74],ebx
1002f8e9:	je     0x1002f8f4
1002f8eb:	push   edi
1002f8ec:	call   0x10042f82
1002f8f1:	add    esp,0x4
1002f8f4:	mov    edx,DWORD PTR [esp+0x74]
1002f8f8:	push   edx
1002f8f9:	xor    edi,edi
1002f8fb:	call   0x10042f82
1002f900:	add    esp,0x4
1002f903:	mov    esi,DWORD PTR [esp+0x6c]
1002f907:	push   ebx
1002f908:	mov    DWORD PTR [esi],edi
1002f90a:	call   0x10042f82
1002f90f:	add    esp,0x4
1002f912:	mov    eax,esi
1002f914:	mov    ecx,DWORD PTR [esp+0x5c]
1002f918:	mov    DWORD PTR fs:0x0,ecx
1002f91f:	pop    ecx
1002f920:	pop    edi
1002f921:	pop    esi
1002f922:	pop    ebp
1002f923:	pop    ebx
1002f924:	add    esp,0x54
1002f927:	ret    
1002f928:	int3   
1002f929:	int3   
1002f92a:	int3   
1002f92b:	int3   
1002f92c:	int3   
1002f92d:	int3   
1002f92e:	int3   
1002f92f:	int3   
1002f930:	push   ecx
1002f931:	push   0xf
1002f933:	push   eax
1002f934:	push   ecx
1002f935:	push   edx
1002f936:	lea    eax,[esp+0x10]
1002f93a:	push   eax
1002f93b:	mov    DWORD PTR [esp+0x14],0x0
1002f943:	call   0x1002f770
1002f948:	mov    ecx,DWORD PTR [eax]
1002f94a:	mov    DWORD PTR [eax],0x0
1002f950:	mov    DWORD PTR [esi],ecx
1002f952:	mov    ecx,DWORD PTR [esp+0x14]
1002f956:	add    esp,0x14
1002f959:	push   ecx
1002f95a:	call   0x10042f82
1002f95f:	mov    eax,esi
1002f961:	add    esp,0x8
1002f964:	ret    
1002f965:	int3   
1002f966:	int3   
1002f967:	int3   
1002f968:	int3   
1002f969:	int3   
1002f96a:	int3   
1002f96b:	int3   
1002f96c:	int3   
1002f96d:	int3   
1002f96e:	int3   
1002f96f:	int3   
1002f970:	push   ecx
1002f971:	push   0x1f
1002f973:	push   eax
1002f974:	push   ecx
1002f975:	push   edx
1002f976:	lea    eax,[esp+0x10]
1002f97a:	push   eax
1002f97b:	mov    DWORD PTR [esp+0x14],0x0
1002f983:	call   0x1002f770
1002f988:	mov    ecx,DWORD PTR [eax]
1002f98a:	mov    DWORD PTR [eax],0x0
1002f990:	mov    DWORD PTR [esi],ecx
1002f992:	mov    ecx,DWORD PTR [esp+0x14]
1002f996:	add    esp,0x14
1002f999:	push   ecx
1002f99a:	call   0x10042f82
1002f99f:	mov    eax,esi
1002f9a1:	add    esp,0x8
1002f9a4:	ret    
1002f9a5:	int3   
1002f9a6:	int3   
1002f9a7:	int3   
1002f9a8:	int3   
1002f9a9:	int3   
1002f9aa:	int3   
1002f9ab:	int3   
1002f9ac:	int3   
1002f9ad:	int3   
1002f9ae:	int3   
1002f9af:	int3   
1002f9b0:	push   ebp
1002f9b1:	mov    ebp,esp
1002f9b3:	sub    esp,0x8
1002f9b6:	mov    eax,ds:0x1007e030
1002f9bb:	xor    eax,ebp
1002f9bd:	mov    DWORD PTR [ebp-0x4],eax
1002f9c0:	push   esi
1002f9c1:	xor    esi,esi
1002f9c3:	push   edi
1002f9c4:	mov    DWORD PTR [ebp-0x8],esi
1002f9c7:	call   DWORD PTR ds:0x1007efec
1002f9cd:	push   0x10072fd8
1002f9d2:	mov    DWORD PTR [ebp-0x8],eax
1002f9d5:	call   DWORD PTR ds:0x100660c4
1002f9db:	add    eax,0x1
1002f9de:	cmp    eax,0x3fffffff
1002f9e3:	jg     0x1002fa1d
1002f9e5:	lea    esi,[eax+eax*1]
1002f9e8:	mov    eax,esi
1002f9ea:	call   0x1004b7e0
1002f9ef:	mov    edi,esp
1002f9f1:	test   edi,edi
1002f9f3:	je     0x1002fa1b
1002f9f5:	mov    eax,DWORD PTR [ebp-0x8]
1002f9f8:	push   0x0
1002f9fa:	push   0x0
1002f9fc:	push   esi
1002f9fd:	push   edi
1002f9fe:	push   0xffffffff
1002fa00:	push   0x10072fd8
1002fa05:	push   0x0
1002fa07:	push   eax
1002fa08:	mov    BYTE PTR [edi],0x0
1002fa0b:	call   DWORD PTR ds:0x100660b8
1002fa11:	mov    esi,eax
1002fa13:	neg    esi
1002fa15:	sbb    esi,esi
1002fa17:	and    esi,edi
1002fa19:	jmp    0x1002fa1d
1002fa1b:	xor    esi,esi
1002fa1d:	mov    DWORD PTR [ebx+0x18],0xf
1002fa24:	mov    DWORD PTR [ebx+0x14],0x0
1002fa2b:	push   esi
1002fa2c:	mov    BYTE PTR [ebx+0x4],0x0
1002fa30:	call   0x10043100
1002fa35:	add    esp,0x4
1002fa38:	push   eax
1002fa39:	push   esi
1002fa3a:	mov    ecx,ebx
1002fa3c:	call   0x10001336
1002fa41:	mov    eax,ebx
1002fa43:	lea    esp,[ebp-0x10]
1002fa46:	pop    edi
1002fa47:	pop    esi
1002fa48:	mov    ecx,DWORD PTR [ebp-0x4]
1002fa4b:	xor    ecx,ebp
1002fa4d:	call   0x10042f87
1002fa52:	mov    esp,ebp
1002fa54:	pop    ebp
1002fa55:	ret    
1002fa56:	int3   
1002fa57:	int3   
1002fa58:	int3   
1002fa59:	int3   
1002fa5a:	int3   
1002fa5b:	int3   
1002fa5c:	int3   
1002fa5d:	int3   
1002fa5e:	int3   
1002fa5f:	int3   
1002fa60:	sub    esp,0x1c
1002fa63:	lea    eax,[esp+0x8]
1002fa67:	push   eax
1002fa68:	call   DWORD PTR ds:0x10066140
1002fa6e:	lea    ecx,[esp]
1002fa71:	push   ecx
1002fa72:	lea    edx,[esp+0xc]
1002fa76:	push   edx
1002fa77:	call   DWORD PTR ds:0x10066104
1002fa7d:	mov    edx,DWORD PTR [esp+0x4]
1002fa81:	mov    eax,DWORD PTR [esp]
1002fa84:	add    esp,0x1c
1002fa87:	ret    
1002fa88:	int3   
1002fa89:	int3   
1002fa8a:	int3   
1002fa8b:	int3   
1002fa8c:	int3   
1002fa8d:	int3   
1002fa8e:	int3   
1002fa8f:	int3   
1002fa90:	push   ebp
1002fa91:	mov    ebp,esp
1002fa93:	and    esp,0xfffffff8
1002fa96:	sub    esp,0x8
1002fa99:	mov    eax,DWORD PTR [ebp+0x8]
1002fa9c:	push   ebx
1002fa9d:	push   edi
1002fa9e:	xor    ecx,ecx
1002faa0:	push   0xffffffff
1002faa2:	mov    DWORD PTR [esi+0x14],ecx
1002faa5:	push   ecx
1002faa6:	mov    DWORD PTR [esi+0x18],0xf
1002faad:	lea    edi,[esi+0x4]
1002fab0:	mov    DWORD PTR [esp+0x10],ecx
1002fab4:	mov    BYTE PTR [edi],cl
1002fab6:	push   eax
1002fab7:	mov    ecx,esi
1002fab9:	call   0x1000123c
1002fabe:	mov    eax,DWORD PTR [esi+0x18]
1002fac1:	cmp    eax,0x10
1002fac4:	jb     0x1002faca
1002fac6:	mov    ebx,DWORD PTR [edi]
1002fac8:	jmp    0x1002facc
1002faca:	mov    ebx,edi
1002facc:	test   ebx,ebx
1002face:	je     0x1002faf3
1002fad0:	cmp    eax,0x10
1002fad3:	jb     0x1002fad9
1002fad5:	mov    ecx,DWORD PTR [edi]
1002fad7:	jmp    0x1002fadb
1002fad9:	mov    ecx,edi
1002fadb:	cmp    ecx,ebx
1002fadd:	ja     0x1002faf3
1002fadf:	cmp    eax,0x10
1002fae2:	jb     0x1002fae8
1002fae4:	mov    eax,DWORD PTR [edi]
1002fae6:	jmp    0x1002faea
1002fae8:	mov    eax,edi
1002faea:	mov    ecx,DWORD PTR [esi+0x14]
1002faed:	add    ecx,eax
1002faef:	cmp    ebx,ecx
1002faf1:	jbe    0x1002faf8
1002faf3:	call   0x100434a0
1002faf8:	mov    edx,DWORD PTR [esi+0x18]
1002fafb:	cmp    edx,0x10
1002fafe:	mov    DWORD PTR [esp+0xc],ebx
1002fb02:	jb     0x1002fb08
1002fb04:	mov    eax,DWORD PTR [edi]
1002fb06:	jmp    0x1002fb0a
1002fb08:	mov    eax,edi
1002fb0a:	mov    ecx,DWORD PTR [esi+0x14]
1002fb0d:	lea    ebx,[ecx+eax*1]
1002fb10:	test   ebx,ebx
1002fb12:	je     0x1002fb34
1002fb14:	cmp    edx,0x10
1002fb17:	jb     0x1002fb1d
1002fb19:	mov    eax,DWORD PTR [edi]
1002fb1b:	jmp    0x1002fb1f
1002fb1d:	mov    eax,edi
1002fb1f:	cmp    eax,ebx
1002fb21:	ja     0x1002fb34
1002fb23:	cmp    edx,0x10
1002fb26:	jb     0x1002fb2c
1002fb28:	mov    eax,DWORD PTR [edi]
1002fb2a:	jmp    0x1002fb2e
1002fb2c:	mov    eax,edi
1002fb2e:	add    ecx,eax
1002fb30:	cmp    ebx,ecx
1002fb32:	jbe    0x1002fb39
1002fb34:	call   0x100434a0
1002fb39:	mov    ecx,DWORD PTR [esp+0xc]
1002fb3d:	cmp    ecx,ebx
1002fb3f:	je     0x1002fbbb
1002fb41:	cmp    esi,0xfffffffe
1002fb44:	je     0x1002fb82
1002fb46:	cmp    DWORD PTR [esi+0x18],0x10
1002fb4a:	jb     0x1002fb50
1002fb4c:	mov    eax,DWORD PTR [edi]
1002fb4e:	jmp    0x1002fb52
1002fb50:	mov    eax,edi
1002fb52:	mov    edx,DWORD PTR [esi+0x14]
1002fb55:	add    edx,eax
1002fb57:	cmp    ecx,edx
1002fb59:	jb     0x1002fb64
1002fb5b:	call   0x100434a0
1002fb60:	mov    ecx,DWORD PTR [esp+0xc]
1002fb64:	cmp    DWORD PTR [esi+0x18],0x10
1002fb68:	jb     0x1002fb6e
1002fb6a:	mov    eax,DWORD PTR [edi]
1002fb6c:	jmp    0x1002fb70
1002fb6e:	mov    eax,edi
1002fb70:	mov    edx,DWORD PTR [esi+0x14]
1002fb73:	add    edx,eax
1002fb75:	cmp    ecx,edx
1002fb77:	jb     0x1002fb82
1002fb79:	call   0x100434a0
1002fb7e:	mov    ecx,DWORD PTR [esp+0xc]
1002fb82:	movsx  eax,BYTE PTR [ecx]
1002fb85:	push   eax
1002fb86:	call   0x10045ec1
1002fb8b:	mov    ebx,DWORD PTR [esp+0x10]
1002fb8f:	add    esp,0x4
1002fb92:	cmp    esi,0xfffffffe
1002fb95:	mov    BYTE PTR [ebx],al
1002fb97:	je     0x1002fbb3
1002fb99:	cmp    DWORD PTR [esi+0x18],0x10
1002fb9d:	jb     0x1002fba3
1002fb9f:	mov    eax,DWORD PTR [edi]
1002fba1:	jmp    0x1002fba5
1002fba3:	mov    eax,edi
1002fba5:	mov    ecx,DWORD PTR [esi+0x14]
1002fba8:	add    ecx,eax
1002fbaa:	cmp    ebx,ecx
1002fbac:	jb     0x1002fbb3
1002fbae:	call   0x100434a0
1002fbb3:	add    ebx,0x1
1002fbb6:	jmp    0x1002faf8
1002fbbb:	pop    edi
1002fbbc:	mov    eax,esi
1002fbbe:	pop    ebx
1002fbbf:	mov    esp,ebp
1002fbc1:	pop    ebp
1002fbc2:	ret    
1002fbc3:	int3   
1002fbc4:	int3   
1002fbc5:	int3   
1002fbc6:	int3   
1002fbc7:	int3   
1002fbc8:	int3   
1002fbc9:	int3   
1002fbca:	int3   
1002fbcb:	int3   
1002fbcc:	int3   
1002fbcd:	int3   
1002fbce:	int3   
1002fbcf:	int3   
1002fbd0:	push   0xffffffff
1002fbd2:	push   0x10060975
1002fbd7:	mov    eax,fs:0x0
1002fbdd:	push   eax
1002fbde:	sub    esp,0xa0
1002fbe4:	mov    eax,ds:0x1007e030
1002fbe9:	xor    eax,esp
1002fbeb:	mov    DWORD PTR [esp+0x9c],eax
1002fbf2:	push   ebx
1002fbf3:	push   ebp
1002fbf4:	push   esi
1002fbf5:	push   edi
1002fbf6:	mov    eax,ds:0x1007e030
1002fbfb:	xor    eax,esp
1002fbfd:	push   eax
1002fbfe:	lea    eax,[esp+0xb4]
1002fc05:	mov    fs:0x0,eax
1002fc0b:	mov    ebp,DWORD PTR [esp+0xc4]
1002fc12:	xor    ebx,ebx
1002fc14:	mov    DWORD PTR [esp+0x34],ebx
1002fc18:	mov    eax,ds:0x10080a74
1002fc1d:	mov    edx,DWORD PTR [eax+0xc]
1002fc20:	mov    edi,ecx
1002fc22:	mov    ecx,0x10080a74
1002fc27:	mov    DWORD PTR [esp+0x2c],ebp
1002fc2b:	mov    DWORD PTR [esp+0x1c],edi
1002fc2f:	call   edx
1002fc31:	lea    esi,[eax+0x10]
1002fc34:	mov    DWORD PTR [esp+0x20],esi
1002fc38:	mov    DWORD PTR [esp+0xbc],ebx
1002fc3f:	mov    eax,DWORD PTR [edi+0x14]
1002fc42:	cmp    eax,ebx
1002fc44:	mov    DWORD PTR [esp+0x28],ebx
1002fc48:	jbe    0x1002ffd8
1002fc4e:	mov    edi,edi
1002fc50:	cmp    DWORD PTR [esp+0x28],0x0
1002fc55:	jle    0x1002fe3d
1002fc5b:	sub    DWORD PTR [esp+0x28],0x1
1002fc60:	cmp    ebx,eax
1002fc62:	jbe    0x1002fc69
1002fc64:	call   0x100434a0
1002fc69:	mov    ebp,DWORD PTR [esp+0x1c]
1002fc6d:	cmp    DWORD PTR [ebp+0x18],0x10
1002fc71:	lea    edi,[ebp+0x4]
1002fc74:	mov    DWORD PTR [esp+0x24],edi
1002fc78:	jb     0x1002fc7e
1002fc7a:	mov    eax,DWORD PTR [edi]
1002fc7c:	jmp    0x1002fc80
1002fc7e:	mov    eax,edi
1002fc80:	movzx  eax,BYTE PTR [eax+ebx*1]
1002fc84:	push   eax
1002fc85:	call   0x1004f3cc
1002fc8a:	add    esp,0x4
1002fc8d:	test   eax,eax
1002fc8f:	je     0x1002fe30
1002fc95:	cmp    ebx,DWORD PTR [ebp+0x14]
1002fc98:	jbe    0x1002fc9f
1002fc9a:	call   0x100434a0
1002fc9f:	cmp    DWORD PTR [ebp+0x18],0x10
1002fca3:	jb     0x1002fca9
1002fca5:	mov    eax,DWORD PTR [edi]
1002fca7:	jmp    0x1002fcab
1002fca9:	mov    eax,edi
1002fcab:	mov    cl,BYTE PTR [eax+ebx*1]
1002fcae:	mov    ebp,DWORD PTR [esi-0xc]
1002fcb1:	mov    eax,DWORD PTR [esi-0x8]
1002fcb4:	mov    BYTE PTR [esp+0x14],cl
1002fcb8:	mov    ecx,0x1
1002fcbd:	sub    ecx,DWORD PTR [esi-0x4]
1002fcc0:	lea    edi,[ebp+0x1]
1002fcc3:	sub    eax,edi
1002fcc5:	or     eax,ecx
1002fcc7:	jge    0x1002fcd8
1002fcc9:	mov    ecx,edi
1002fccb:	lea    eax,[esp+0x20]
1002fccf:	call   0x10034790
1002fcd4:	mov    esi,DWORD PTR [esp+0x20]
1002fcd8:	test   edi,edi
1002fcda:	mov    dl,BYTE PTR [esp+0x14]
1002fcde:	mov    BYTE PTR [esi+ebp*1],dl
1002fce1:	jl     0x100300e6
1002fce7:	cmp    edi,DWORD PTR [esi-0x8]
1002fcea:	jg     0x100300e6
1002fcf0:	mov    eax,DWORD PTR [esp+0x1c]
1002fcf4:	shl    BYTE PTR [esp+0x1b],0x4
1002fcf9:	mov    DWORD PTR [esi-0xc],edi
1002fcfc:	mov    BYTE PTR [edi+esi*1],0x0
1002fd00:	cmp    ebx,DWORD PTR [eax+0x14]
1002fd03:	jbe    0x1002fd0e
1002fd05:	call   0x100434a0
1002fd0a:	mov    eax,DWORD PTR [esp+0x1c]
1002fd0e:	cmp    DWORD PTR [eax+0x18],0x10
1002fd12:	mov    ecx,DWORD PTR [esp+0x24]
1002fd16:	jb     0x1002fd1c
1002fd18:	mov    edx,DWORD PTR [ecx]
1002fd1a:	jmp    0x1002fd1e
1002fd1c:	mov    edx,ecx
1002fd1e:	cmp    BYTE PTR [edx+ebx*1],0x30
1002fd22:	jl     0x1002fd76
1002fd24:	cmp    ebx,DWORD PTR [eax+0x14]
1002fd27:	jbe    0x1002fd36
1002fd29:	call   0x100434a0
1002fd2e:	mov    ecx,DWORD PTR [esp+0x24]
1002fd32:	mov    eax,DWORD PTR [esp+0x1c]
1002fd36:	cmp    DWORD PTR [eax+0x18],0x10
1002fd3a:	jb     0x1002fd40
1002fd3c:	mov    edx,DWORD PTR [ecx]
1002fd3e:	jmp    0x1002fd42
1002fd40:	mov    edx,ecx
1002fd42:	cmp    BYTE PTR [edx+ebx*1],0x39
1002fd46:	jg     0x1002fd76
1002fd48:	cmp    ebx,DWORD PTR [eax+0x14]
1002fd4b:	jbe    0x1002fd5a
1002fd4d:	call   0x100434a0
1002fd52:	mov    ecx,DWORD PTR [esp+0x24]
1002fd56:	mov    eax,DWORD PTR [esp+0x1c]
1002fd5a:	cmp    DWORD PTR [eax+0x18],0x10
1002fd5e:	jb     0x1002fd6b
1002fd60:	mov    eax,DWORD PTR [ecx]
1002fd62:	movsx  eax,BYTE PTR [eax+ebx*1]
1002fd66:	sub    eax,0x30
1002fd69:	jmp    0x1002fda4
1002fd6b:	mov    eax,ecx
1002fd6d:	movsx  eax,BYTE PTR [eax+ebx*1]
1002fd71:	sub    eax,0x30
1002fd74:	jmp    0x1002fda4
1002fd76:	cmp    ebx,DWORD PTR [eax+0x14]
1002fd79:	jbe    0x1002fd88
1002fd7b:	call   0x100434a0
1002fd80:	mov    ecx,DWORD PTR [esp+0x24]
1002fd84:	mov    eax,DWORD PTR [esp+0x1c]
1002fd88:	cmp    DWORD PTR [eax+0x18],0x10
1002fd8c:	jb     0x1002fd92
1002fd8e:	mov    eax,DWORD PTR [ecx]
1002fd90:	jmp    0x1002fd94
1002fd92:	mov    eax,ecx
1002fd94:	movsx  eax,BYTE PTR [eax+ebx*1]
1002fd98:	push   eax
1002fd99:	call   0x10058e57
1002fd9e:	add    esp,0x4
1002fda1:	sub    eax,0x37
1002fda4:	add    BYTE PTR [esp+0x1b],al
1002fda8:	cmp    DWORD PTR [esp+0x28],0x0
1002fdad:	jne    0x1002ffc0
1002fdb3:	cmp    BYTE PTR [esp+0x1b],0x80
1002fdb8:	jb     0x1002ffc0
1002fdbe:	mov    edi,DWORD PTR [esi-0xc]
1002fdc1:	mov    eax,DWORD PTR [esi-0x8]
1002fdc4:	add    edi,0xfffffffd
1002fdc7:	mov    ecx,0x1
1002fdcc:	sub    ecx,DWORD PTR [esi-0x4]
1002fdcf:	sub    eax,edi
1002fdd1:	or     eax,ecx
1002fdd3:	jge    0x1002fde4
1002fdd5:	mov    ecx,edi
1002fdd7:	lea    eax,[esp+0x20]
1002fddb:	call   0x10034790
1002fde0:	mov    esi,DWORD PTR [esp+0x20]
1002fde4:	test   edi,edi
1002fde6:	jl     0x100300e6
1002fdec:	cmp    edi,DWORD PTR [esi-0x8]
1002fdef:	jg     0x100300e6
1002fdf5:	test   edi,edi
1002fdf7:	mov    DWORD PTR [esi-0xc],edi
1002fdfa:	mov    BYTE PTR [edi+esi*1],0x0
1002fdfe:	je     0x1002fe1c
1002fe00:	add    edi,0xffffffff
1002fe03:	js     0x100300e6
1002fe09:	cmp    edi,DWORD PTR [esi-0xc]
1002fe0c:	jg     0x100300e6
1002fe12:	cmp    BYTE PTR [edi+esi*1],0x80
1002fe16:	je     0x1002ffc0
1002fe1c:	push   0xffffff80
1002fe1e:	lea    edi,[esp+0x24]
1002fe22:	call   0x10034480
1002fe27:	mov    esi,DWORD PTR [esp+0x20]
1002fe2b:	jmp    0x1002ffc0
1002fe30:	mov    DWORD PTR [esp+0x28],0x0
1002fe38:	jmp    0x1002ffc3
1002fe3d:	cmp    ebx,eax
1002fe3f:	jbe    0x1002fe46
1002fe41:	call   0x100434a0
1002fe46:	mov    edi,DWORD PTR [esp+0x1c]
1002fe4a:	cmp    DWORD PTR [edi+0x18],0x10
1002fe4e:	lea    ebp,[edi+0x4]
1002fe51:	jb     0x1002fe58
1002fe53:	mov    eax,DWORD PTR [ebp+0x0]
1002fe56:	jmp    0x1002fe5a
1002fe58:	mov    eax,ebp
1002fe5a:	cmp    BYTE PTR [eax+ebx*1],0x80
1002fe5e:	jb     0x1002fed5
1002fe60:	mov    eax,DWORD PTR [edi+0x14]
1002fe63:	add    ebx,0x1
1002fe66:	cmp    ebx,eax
1002fe68:	jae    0x1002fe8e
1002fe6a:	jbe    0x1002fe71
1002fe6c:	call   0x100434a0
1002fe71:	cmp    DWORD PTR [edi+0x18],0x10
1002fe75:	jb     0x1002fe7c
1002fe77:	mov    eax,DWORD PTR [ebp+0x0]
1002fe7a:	jmp    0x1002fe7e
1002fe7c:	mov    eax,ebp
1002fe7e:	cmp    BYTE PTR [eax+ebx*1],0x80
1002fe82:	jb     0x1002fe8e
1002fe84:	mov    eax,DWORD PTR [edi+0x14]
1002fe87:	add    ebx,0x1
1002fe8a:	cmp    ebx,eax
1002fe8c:	jb     0x1002fe71
1002fe8e:	mov    ebp,DWORD PTR [esi-0xc]
1002fe91:	mov    eax,DWORD PTR [esi-0x8]
1002fe94:	mov    ecx,0x1
1002fe99:	sub    ecx,DWORD PTR [esi-0x4]
1002fe9c:	lea    edi,[ebp+0x1]
1002fe9f:	sub    eax,edi
1002fea1:	or     eax,ecx
1002fea3:	jge    0x1002feb4
1002fea5:	mov    ecx,edi
1002fea7:	lea    eax,[esp+0x20]
1002feab:	call   0x10034790
1002feb0:	mov    esi,DWORD PTR [esp+0x20]
1002feb4:	test   edi,edi
1002feb6:	mov    BYTE PTR [esi+ebp*1],0x80
1002feba:	jl     0x100300e6
1002fec0:	cmp    edi,DWORD PTR [esi-0x8]
1002fec3:	jg     0x100300e6
1002fec9:	mov    DWORD PTR [esi-0xc],edi
1002fecc:	mov    BYTE PTR [edi+esi*1],0x0
1002fed0:	jmp    0x1002ffc3
1002fed5:	cmp    ebx,DWORD PTR [edi+0x14]
1002fed8:	jbe    0x1002fedf
1002feda:	call   0x100434a0
1002fedf:	cmp    DWORD PTR [edi+0x18],0x10
1002fee3:	jb     0x1002feea
1002fee5:	mov    eax,DWORD PTR [ebp+0x0]
1002fee8:	jmp    0x1002feec
1002feea:	mov    eax,ebp
1002feec:	cmp    BYTE PTR [eax+ebx*1],0x25
1002fef0:	jne    0x1002ff5d
1002fef2:	cmp    ebx,DWORD PTR [edi+0x14]
1002fef5:	jbe    0x1002fefc
1002fef7:	call   0x100434a0
1002fefc:	cmp    DWORD PTR [edi+0x18],0x10
1002ff00:	jb     0x1002ff07
1002ff02:	mov    eax,DWORD PTR [ebp+0x0]
1002ff05:	jmp    0x1002ff09
1002ff07:	mov    eax,ebp
1002ff09:	mov    cl,BYTE PTR [eax+ebx*1]
1002ff0c:	mov    ebp,DWORD PTR [esi-0xc]
1002ff0f:	mov    eax,DWORD PTR [esi-0x8]
1002ff12:	mov    BYTE PTR [esp+0x14],cl
1002ff16:	mov    ecx,0x1
1002ff1b:	sub    ecx,DWORD PTR [esi-0x4]
1002ff1e:	lea    edi,[ebp+0x1]
1002ff21:	sub    eax,edi
1002ff23:	or     eax,ecx
1002ff25:	jge    0x1002ff36
1002ff27:	mov    ecx,edi
1002ff29:	lea    eax,[esp+0x20]
1002ff2d:	call   0x10034790
1002ff32:	mov    esi,DWORD PTR [esp+0x20]
1002ff36:	test   edi,edi
1002ff38:	mov    dl,BYTE PTR [esp+0x14]
1002ff3c:	mov    BYTE PTR [esi+ebp*1],dl
1002ff3f:	jl     0x100300e6
1002ff45:	cmp    edi,DWORD PTR [esi-0x8]
1002ff48:	jg     0x100300e6
1002ff4e:	mov    BYTE PTR [esp+0x1b],0x0
1002ff53:	mov    DWORD PTR [esp+0x28],0x2
1002ff5b:	jmp    0x1002ffb9
1002ff5d:	cmp    ebx,DWORD PTR [edi+0x14]
1002ff60:	jbe    0x1002ff67
1002ff62:	call   0x100434a0
1002ff67:	cmp    DWORD PTR [edi+0x18],0x10
1002ff6b:	jb     0x1002ff72
1002ff6d:	mov    eax,DWORD PTR [ebp+0x0]
1002ff70:	jmp    0x1002ff74
1002ff72:	mov    eax,ebp
1002ff74:	mov    al,BYTE PTR [eax+ebx*1]
1002ff77:	mov    ebp,DWORD PTR [esi-0xc]
1002ff7a:	mov    BYTE PTR [esp+0x14],al
1002ff7e:	mov    eax,DWORD PTR [esi-0x8]
1002ff81:	mov    ecx,0x1
1002ff86:	sub    ecx,DWORD PTR [esi-0x4]
1002ff89:	lea    edi,[ebp+0x1]
1002ff8c:	sub    eax,edi
1002ff8e:	or     eax,ecx
1002ff90:	jge    0x1002ffa1
1002ff92:	mov    ecx,edi
1002ff94:	lea    eax,[esp+0x20]
1002ff98:	call   0x10034790
1002ff9d:	mov    esi,DWORD PTR [esp+0x20]
1002ffa1:	test   edi,edi
1002ffa3:	mov    cl,BYTE PTR [esp+0x14]
1002ffa7:	mov    BYTE PTR [esi+ebp*1],cl
1002ffaa:	jl     0x100300e6
1002ffb0:	cmp    edi,DWORD PTR [esi-0x8]
1002ffb3:	jg     0x100300e6
1002ffb9:	mov    DWORD PTR [esi-0xc],edi
1002ffbc:	mov    BYTE PTR [edi+esi*1],0x0
1002ffc0:	add    ebx,0x1
1002ffc3:	mov    edx,DWORD PTR [esp+0x1c]
1002ffc7:	mov    eax,DWORD PTR [edx+0x14]
1002ffca:	cmp    ebx,eax
1002ffcc:	jb     0x1002fc50
1002ffd2:	mov    ebp,DWORD PTR [esp+0x2c]
1002ffd6:	xor    ebx,ebx
1002ffd8:	mov    eax,ds:0x10080a74
1002ffdd:	mov    edx,DWORD PTR [eax+0xc]
1002ffe0:	mov    ecx,0x10080a74
1002ffe5:	call   edx
1002ffe7:	lea    edi,[eax+0x10]
1002ffea:	mov    DWORD PTR [esp+0x28],edi
1002ffee:	mov    BYTE PTR [esp+0xbc],0x1
1002fff6:	mov    eax,DWORD PTR [esp+0x1c]
1002fffa:	mov    eax,DWORD PTR [eax+0x14]
1002fffd:	lea    ecx,[eax+eax*1]
10030000:	mov    DWORD PTR [esp+0x34],ecx
10030004:	mov    eax,DWORD PTR [edi-0x8]
10030007:	mov    edx,0x1
1003000c:	sub    edx,DWORD PTR [edi-0x4]
1003000f:	sub    eax,ecx
10030011:	or     eax,edx
10030013:	jge    0x10030022
10030015:	lea    eax,[esp+0x28]
10030019:	call   0x10034790
1003001e:	mov    edi,DWORD PTR [esp+0x28]
10030022:	cmp    DWORD PTR [esi-0x4],0x1
10030026:	jle    0x1003003a
10030028:	mov    ecx,DWORD PTR [esi-0xc]
1003002b:	push   ecx
1003002c:	lea    edx,[esp+0x24]
10030030:	push   edx
10030031:	call   0x10034610
10030036:	mov    esi,DWORD PTR [esp+0x20]
1003003a:	push   0x2000000
1003003f:	lea    eax,[esp+0x38]
10030043:	push   eax
10030044:	push   edi
10030045:	push   esi
10030046:	call   DWORD PTR ds:0x10066378
1003004c:	test   eax,eax
1003004e:	jne    0x100300f0
10030054:	mov    ecx,DWORD PTR [esp+0x1c]
10030058:	push   0xffffffff
1003005a:	push   ebx
1003005b:	push   ecx
1003005c:	mov    DWORD PTR [ebp+0x18],0xf
10030063:	mov    DWORD PTR [ebp+0x14],ebx
10030066:	mov    ecx,ebp
10030068:	mov    BYTE PTR [ebp+0x4],0x0
1003006c:	call   0x1000123c
10030071:	add    edi,0xfffffff0
10030074:	or     eax,0xffffffff
10030077:	lea    edx,[edi+0xc]
1003007a:	mov    BYTE PTR [esp+0xbc],0x0
10030082:	lock xadd DWORD PTR [edx],eax
10030086:	dec    eax
10030087:	test   eax,eax
10030089:	jg     0x10030095
1003008b:	mov    ecx,DWORD PTR [edi]
1003008d:	mov    edx,DWORD PTR [ecx]
1003008f:	mov    eax,DWORD PTR [edx+0x4]
10030092:	push   edi
10030093:	call   eax
10030095:	add    esi,0xfffffff0
10030098:	mov    DWORD PTR [esp+0xbc],0xffffffff
100300a3:	lea    ecx,[esi+0xc]
100300a6:	or     edx,0xffffffff
100300a9:	lock xadd DWORD PTR [ecx],edx
100300ad:	dec    edx
100300ae:	test   edx,edx
100300b0:	jg     0x100300bc
100300b2:	mov    ecx,DWORD PTR [esi]
100300b4:	mov    eax,DWORD PTR [ecx]
100300b6:	mov    edx,DWORD PTR [eax+0x4]
100300b9:	push   esi
100300ba:	call   edx
100300bc:	mov    eax,ebp
100300be:	mov    ecx,DWORD PTR [esp+0xb4]
100300c5:	mov    DWORD PTR fs:0x0,ecx
100300cc:	pop    ecx
100300cd:	pop    edi
100300ce:	pop    esi
100300cf:	pop    ebp
100300d0:	pop    ebx
100300d1:	mov    ecx,DWORD PTR [esp+0x9c]
100300d8:	xor    ecx,esp
100300da:	call   0x10042f87
100300df:	add    esp,0xac
100300e5:	ret    
100300e6:	push   0x80070057
100300eb:	call   0x10001f33
100300f0:	cmp    edi,ebx
100300f2:	jne    0x100300f8
100300f4:	xor    eax,eax
100300f6:	jmp    0x1003010d
100300f8:	mov    eax,edi
100300fa:	lea    edx,[eax+0x1]
100300fd:	lea    ecx,[ecx+0x0]
10030100:	mov    cl,BYTE PTR [eax]
10030102:	add    eax,0x1
10030105:	test   cl,cl
10030107:	jne    0x10030100
10030109:	sub    eax,edx
1003010b:	js     0x100300e6
1003010d:	cmp    eax,DWORD PTR [edi-0x8]
10030110:	jg     0x100300e6
10030112:	mov    DWORD PTR [edi-0xc],eax
10030115:	push   0x38
10030117:	mov    BYTE PTR [eax+edi*1],0x0
1003011b:	lea    eax,[esp+0x40]
1003011f:	push   ebx
10030120:	push   eax
10030121:	call   0x10045cf0
10030126:	mov    eax,0x1
1003012b:	add    esp,0xc
1003012e:	mov    DWORD PTR [esp+0x38],0x3c
10030136:	mov    DWORD PTR [esp+0x40],eax
1003013a:	mov    DWORD PTR [esp+0x4c],eax
1003013e:	mov    DWORD PTR [esp+0x58],eax
10030142:	mov    DWORD PTR [esp+0x60],eax
10030146:	mov    DWORD PTR [esp+0x68],eax
1003014a:	mov    DWORD PTR [esp+0x70],eax
1003014e:	cmp    DWORD PTR [edi-0x4],eax
10030151:	jle    0x10030165
10030153:	mov    ecx,DWORD PTR [edi-0xc]
10030156:	push   ecx
10030157:	lea    edx,[esp+0x2c]
1003015b:	push   edx
1003015c:	call   0x10034610
10030161:	mov    edi,DWORD PTR [esp+0x28]
10030165:	lea    eax,[esp+0x38]
10030169:	push   eax
1003016a:	push   ebx
1003016b:	push   ebx
1003016c:	push   edi
1003016d:	call   DWORD PTR ds:0x1006637c
10030173:	test   eax,eax
10030175:	je     0x10030054
1003017b:	mov    DWORD PTR [esp+0x8c],0xf
10030186:	mov    DWORD PTR [esp+0x88],ebx
1003018d:	mov    BYTE PTR [esp+0x78],0x0
10030192:	mov    BYTE PTR [esp+0xbc],0x2
1003019a:	mov    eax,DWORD PTR [esp+0x3c]
1003019e:	cmp    eax,ebx
100301a0:	je     0x10030414
100301a6:	cmp    DWORD PTR [esp+0x48],ebx
100301aa:	je     0x10030414
100301b0:	cmp    DWORD PTR [esp+0x58],ebx
100301b4:	jne    0x10030414
100301ba:	cmp    DWORD PTR [esp+0x60],ebx
100301be:	jne    0x10030414
100301c4:	mov    esi,DWORD PTR [esp+0x40]
100301c8:	mov    ebx,eax
100301ca:	lea    edi,[esp+0x24]
100301ce:	call   0x100343c0
100301d3:	mov    BYTE PTR [esp+0xbc],0x3
100301db:	call   0x100344e0
100301e0:	mov    eax,edi
100301e2:	push   eax
100301e3:	mov    ecx,0x1006d1c0
100301e8:	call   0x10034560
100301ed:	add    esp,0x4
100301f0:	test   al,al
100301f2:	je     0x10030261
100301f4:	mov    ecx,edi
100301f6:	push   ecx
100301f7:	mov    ecx,0x10072fec
100301fc:	call   0x10034560
10030201:	add    esp,0x4
10030204:	test   al,al
10030206:	je     0x10030261
10030208:	mov    edx,DWORD PTR [esp+0x1c]
1003020c:	push   edx
1003020d:	mov    ecx,ebp
1003020f:	call   0x100011a2
10030214:	mov    eax,edi
10030216:	call   0x10034420
1003021b:	cmp    DWORD PTR [esp+0x8c],0x10
10030223:	jb     0x10030232
10030225:	mov    eax,DWORD PTR [esp+0x78]
10030229:	push   eax
1003022a:	call   0x10042f82
1003022f:	add    esp,0x4
10030232:	xor    eax,eax
10030234:	mov    DWORD PTR [esp+0x88],eax
1003023b:	mov    BYTE PTR [esp+0x78],al
1003023f:	lea    eax,[esp+0x28]
10030243:	mov    DWORD PTR [esp+0x8c],0xf
1003024e:	call   0x10034420
10030253:	lea    eax,[esp+0x20]
10030257:	call   0x10034420
1003025c:	jmp    0x100300bc
10030261:	mov    ecx,DWORD PTR [esp+0x24]
10030265:	push   ecx
10030266:	lea    edx,[esp+0x78]
1003026a:	push   edx
1003026b:	call   0x10004107
10030270:	push   0x10072ff4
10030275:	lea    eax,[esp+0x78]
10030279:	push   eax
1003027a:	call   0x10004107
1003027f:	mov    esi,DWORD PTR [esp+0x4c]
10030283:	mov    ebx,DWORD PTR [esp+0x48]
10030287:	lea    edi,[esp+0x2c]
1003028b:	call   0x100343c0
10030290:	mov    BYTE PTR [esp+0xbc],0x4
10030298:	call   0x100344e0
1003029d:	mov    ecx,DWORD PTR [esp+0x2c]
100302a1:	push   ecx
100302a2:	lea    edx,[esp+0x78]
100302a6:	push   edx
100302a7:	call   0x10004107
100302ac:	lea    eax,[esp+0x24]
100302b0:	push   eax
100302b1:	mov    ecx,0x1006d1c0
100302b6:	call   0x10034530
100302bb:	add    esp,0x4
100302be:	test   al,al
100302c0:	je     0x100302ca
100302c2:	cmp    WORD PTR [esp+0x50],0x50
100302c8:	jne    0x100302e9
100302ca:	lea    ecx,[esp+0x24]
100302ce:	push   ecx
100302cf:	mov    ecx,0x10072fec
100302d4:	call   0x10034530
100302d9:	add    esp,0x4
100302dc:	test   al,al
100302de:	je     0x1003031b
100302e0:	cmp    WORD PTR [esp+0x50],0x1bb
100302e7:	je     0x1003031b
100302e9:	push   0x1006dcc4
100302ee:	lea    edx,[esp+0x78]
100302f2:	push   edx
100302f3:	call   0x10004107
100302f8:	movzx  ecx,WORD PTR [esp+0x50]
100302fd:	push   0xa
100302ff:	lea    eax,[esp+0x94]
10030306:	push   eax
10030307:	push   ecx
10030308:	call   0x10045be6
1003030d:	add    esp,0xc
10030310:	push   eax
10030311:	lea    edx,[esp+0x78]
10030315:	push   edx
10030316:	call   0x10004107
1003031b:	lea    esi,[esp+0x1c]
1003031f:	call   0x100343a0
10030324:	mov    BYTE PTR [esp+0xbc],0x5
1003032c:	mov    ebx,DWORD PTR [esp+0x64]
10030330:	test   ebx,ebx
10030332:	je     0x10030361
10030334:	mov    esi,DWORD PTR [esp+0x68]
10030338:	lea    edi,[esp+0x30]
1003033c:	call   0x100343c0
10030341:	lea    ebx,[esp+0x1c]
10030345:	mov    BYTE PTR [esp+0xbc],0x6
1003034d:	call   0x100345b0
10030352:	mov    eax,edi
10030354:	mov    BYTE PTR [esp+0xbc],0x5
1003035c:	call   0x10034420
10030361:	mov    eax,DWORD PTR [esp+0x1c]
10030365:	cmp    DWORD PTR [eax-0xc],0x0
10030369:	jne    0x10030379
1003036b:	mov    edx,0x100729ec
10030370:	lea    ebx,[esp+0x1c]
10030374:	call   0x10034440
10030379:	mov    ecx,DWORD PTR [esp+0x1c]
1003037d:	push   ecx
1003037e:	lea    edx,[esp+0x78]
10030382:	push   edx
10030383:	call   0x10004107
10030388:	mov    ebx,DWORD PTR [esp+0x6c]
1003038c:	test   ebx,ebx
1003038e:	je     0x100303c1
10030390:	mov    esi,DWORD PTR [esp+0x70]
10030394:	lea    edi,[esp+0x30]
10030398:	call   0x100343c0
1003039d:	mov    BYTE PTR [esp+0xbc],0x7
100303a5:	mov    eax,DWORD PTR [eax]
100303a7:	push   eax
100303a8:	lea    eax,[esp+0x78]
100303ac:	push   eax
100303ad:	call   0x10004107
100303b2:	mov    eax,edi
100303b4:	mov    BYTE PTR [esp+0xbc],0x5
100303bc:	call   0x10034420
100303c1:	lea    ecx,[esp+0x74]
100303c5:	push   ecx
100303c6:	mov    ecx,ebp
100303c8:	call   0x100011a2
100303cd:	lea    eax,[esp+0x1c]
100303d1:	call   0x10034420
100303d6:	lea    eax,[esp+0x2c]
100303da:	call   0x10034420
100303df:	lea    eax,[esp+0x24]
100303e3:	call   0x10034420
100303e8:	cmp    DWORD PTR [esp+0x8c],0x10
100303f0:	jb     0x100303ff
100303f2:	mov    edx,DWORD PTR [esp+0x78]
100303f6:	push   edx
100303f7:	call   0x10042f82
100303fc:	add    esp,0x4
100303ff:	mov    DWORD PTR [esp+0x88],0x0
1003040a:	mov    BYTE PTR [esp+0x78],0x0
1003040f:	jmp    0x1003023f
10030414:	mov    eax,DWORD PTR [esp+0x1c]
10030418:	push   0xffffffff
1003041a:	push   ebx
1003041b:	mov    DWORD PTR [ebp+0x18],0xf
10030422:	mov    DWORD PTR [ebp+0x14],ebx
10030425:	push   eax
10030426:	mov    ecx,ebp
10030428:	mov    BYTE PTR [ebp+0x4],0x0
1003042c:	call   0x1000123c
10030431:	cmp    DWORD PTR [esp+0x8c],0x10
10030439:	jb     0x10030448
1003043b:	mov    ecx,DWORD PTR [esp+0x78]
1003043f:	push   ecx
10030440:	call   0x10042f82
10030445:	add    esp,0x4
10030448:	mov    DWORD PTR [esp+0x8c],0xf
10030453:	mov    DWORD PTR [esp+0x88],ebx
1003045a:	mov    BYTE PTR [esp+0x78],0x0
1003045f:	jmp    0x10030071
10030464:	int3   
10030465:	int3   
10030466:	int3   
10030467:	int3   
10030468:	int3   
10030469:	int3   
1003046a:	int3   
1003046b:	int3   
1003046c:	int3   
1003046d:	int3   
1003046e:	int3   
1003046f:	int3   
10030470:	push   0xffffffff
10030472:	push   0x1005ffa9
10030477:	mov    eax,fs:0x0
1003047d:	push   eax
1003047e:	sub    esp,0xc
10030481:	push   ebx
10030482:	push   ebp
10030483:	push   edi
10030484:	mov    eax,ds:0x1007e030
10030489:	xor    eax,esp
1003048b:	push   eax
1003048c:	lea    eax,[esp+0x1c]
10030490:	mov    fs:0x0,eax
10030496:	mov    eax,DWORD PTR [esp+0x2c]
1003049a:	xor    ecx,ecx
1003049c:	mov    DWORD PTR [esp+0x14],ecx
100304a0:	mov    DWORD PTR [esi+0x18],0xf
100304a7:	mov    DWORD PTR [esi+0x14],ecx
100304aa:	mov    DWORD PTR [esp+0x18],esi
100304ae:	mov    BYTE PTR [esi+0x4],cl
100304b1:	mov    DWORD PTR [esp+0x24],ecx
100304b5:	cmp    DWORD PTR [eax+0x18],0x10
100304b9:	mov    DWORD PTR [esp+0x14],0x1
100304c1:	jb     0x100304c8
100304c3:	mov    ebp,DWORD PTR [eax+0x4]
100304c6:	jmp    0x100304cb
100304c8:	lea    ebp,[eax+0x4]
100304cb:	mov    al,BYTE PTR [ebp+0x0]
100304ce:	test   al,al
100304d0:	je     0x100306e4
100304d6:	mov    cl,BYTE PTR [ebp+0x1]
100304d9:	test   cl,cl
100304db:	je     0x10030654
100304e1:	cmp    al,0x25
100304e3:	jne    0x10030654
100304e9:	movzx  eax,cl
100304ec:	push   eax
100304ed:	call   0x1004f3cc
100304f2:	add    esp,0x4
100304f5:	test   eax,eax
100304f7:	je     0x10030654
100304fd:	movzx  ecx,BYTE PTR [ebp+0x2]
10030501:	push   ecx
10030502:	call   0x1004f3cc
10030507:	add    esp,0x4
1003050a:	test   eax,eax
1003050c:	je     0x10030654
10030512:	mov    al,BYTE PTR [ebp+0x1]
10030515:	cmp    al,0x30
10030517:	jl     0x10030525
10030519:	cmp    al,0x39
1003051b:	jg     0x10030525
1003051d:	movsx  edi,al
10030520:	sub    edi,0x30
10030523:	jmp    0x10030536
10030525:	movsx  edx,al
10030528:	push   edx
10030529:	call   0x10058e57
1003052e:	mov    edi,eax
10030530:	add    esp,0x4
10030533:	sub    edi,0x37
10030536:	mov    al,BYTE PTR [ebp+0x2]
10030539:	cmp    al,0x30
1003053b:	jl     0x10030549
1003053d:	cmp    al,0x39
1003053f:	jg     0x10030549
10030541:	movsx  eax,al
10030544:	sub    eax,0x30
10030547:	jmp    0x10030558
10030549:	movsx  eax,al
1003054c:	push   eax
1003054d:	call   0x10058e57
10030552:	add    esp,0x4
10030555:	sub    eax,0x37
10030558:	shl    edi,0x4
1003055b:	add    edi,eax
1003055d:	cmp    edi,0x7f
10030560:	jg     0x10030654
10030566:	mov    al,BYTE PTR [ebp+0x1]
10030569:	cmp    al,0x30
1003056b:	jl     0x10030579
1003056d:	cmp    al,0x39
1003056f:	jg     0x10030579
10030571:	movsx  ebx,al
10030574:	sub    ebx,0x30
10030577:	jmp    0x1003058a
10030579:	movsx  ecx,al
1003057c:	push   ecx
1003057d:	call   0x10058e57
10030582:	mov    ebx,eax
10030584:	add    esp,0x4
10030587:	sub    ebx,0x37
1003058a:	mov    al,BYTE PTR [ebp+0x2]
1003058d:	cmp    al,0x30
1003058f:	jl     0x1003059d
10030591:	cmp    al,0x39
10030593:	jg     0x1003059d
10030595:	movsx  eax,al
10030598:	sub    eax,0x30
1003059b:	jmp    0x100305ac
1003059d:	movsx  edx,al
100305a0:	push   edx
100305a1:	call   0x10058e57
100305a6:	add    esp,0x4
100305a9:	sub    eax,0x37
100305ac:	mov    DWORD PTR [esp+0x10],eax
100305b0:	or     eax,0xffffffff
100305b3:	sub    eax,DWORD PTR [esi+0x14]
100305b6:	cmp    eax,0x1
100305b9:	ja     0x100305c0
100305bb:	call   0x10057290
100305c0:	mov    edi,DWORD PTR [esi+0x14]
100305c3:	add    edi,0x1
100305c6:	cmp    edi,0xfffffffe
100305c9:	jbe    0x100305d0
100305cb:	call   0x10057290
100305d0:	mov    eax,DWORD PTR [esi+0x18]
100305d3:	cmp    eax,edi
100305d5:	jae    0x10030600
100305d7:	mov    ecx,DWORD PTR [esi+0x14]
100305da:	push   ecx
100305db:	push   edi
100305dc:	mov    ecx,esi
100305de:	call   0x100014fb
100305e3:	test   edi,edi
100305e5:	jbe    0x1003064c
100305e7:	mov    ecx,DWORD PTR [esi+0x14]
100305ea:	shl    bl,0x4
100305ed:	add    bl,BYTE PTR [esp+0x10]
100305f1:	mov    edx,0x10
100305f6:	cmp    DWORD PTR [esi+0x18],edx
100305f9:	jb     0x10030628
100305fb:	mov    eax,DWORD PTR [esi+0x4]
100305fe:	jmp    0x1003062b
10030600:	test   edi,edi
10030602:	jne    0x100305e5
10030604:	cmp    eax,0x10
10030607:	mov    DWORD PTR [esi+0x14],edi
1003060a:	jb     0x1003061a
1003060c:	mov    eax,DWORD PTR [esi+0x4]
1003060f:	mov    BYTE PTR [eax],0x0
10030612:	add    ebp,0x2
10030615:	jmp    0x100306d6
1003061a:	lea    eax,[esi+0x4]
1003061d:	mov    BYTE PTR [eax],0x0
10030620:	add    ebp,0x2
10030623:	jmp    0x100306d6
10030628:	lea    eax,[esi+0x4]
1003062b:	mov    BYTE PTR [eax+ecx*1],bl
1003062e:	cmp    DWORD PTR [esi+0x18],edx
10030631:	mov    DWORD PTR [esi+0x14],edi
10030634:	jb     0x10030645
10030636:	mov    eax,DWORD PTR [esi+0x4]
10030639:	mov    BYTE PTR [eax+edi*1],0x0
1003063d:	add    ebp,0x2
10030640:	jmp    0x100306d6
10030645:	lea    eax,[esi+0x4]
10030648:	mov    BYTE PTR [eax+edi*1],0x0
1003064c:	add    ebp,0x2
1003064f:	jmp    0x100306d6
10030654:	mov    bl,BYTE PTR [ebp+0x0]
10030657:	or     edx,0xffffffff
1003065a:	sub    edx,DWORD PTR [esi+0x14]
1003065d:	cmp    edx,0x1
10030660:	ja     0x10030667
10030662:	call   0x10057290
10030667:	mov    edi,DWORD PTR [esi+0x14]
1003066a:	add    edi,0x1
1003066d:	cmp    edi,0xfffffffe
10030670:	jbe    0x10030677
10030672:	call   0x10057290
10030677:	mov    eax,DWORD PTR [esi+0x18]
1003067a:	cmp    eax,edi
1003067c:	jae    0x100306a0
1003067e:	mov    eax,DWORD PTR [esi+0x14]
10030681:	push   eax
10030682:	push   edi
10030683:	mov    ecx,esi
10030685:	call   0x100014fb
1003068a:	test   edi,edi
1003068c:	jbe    0x100306d6
1003068e:	mov    ecx,DWORD PTR [esi+0x14]
10030691:	mov    edx,0x10
10030696:	cmp    DWORD PTR [esi+0x18],edx
10030699:	jb     0x100306bc
1003069b:	mov    eax,DWORD PTR [esi+0x4]
1003069e:	jmp    0x100306bf
100306a0:	test   edi,edi
100306a2:	jne    0x1003068c
100306a4:	cmp    eax,0x10
100306a7:	mov    DWORD PTR [esi+0x14],edi
100306aa:	jb     0x100306b4
100306ac:	mov    eax,DWORD PTR [esi+0x4]
100306af:	mov    BYTE PTR [eax],0x0
100306b2:	jmp    0x100306d6
100306b4:	lea    eax,[esi+0x4]
100306b7:	mov    BYTE PTR [eax],0x0
100306ba:	jmp    0x100306d6
100306bc:	lea    eax,[esi+0x4]
100306bf:	mov    BYTE PTR [eax+ecx*1],bl
100306c2:	cmp    DWORD PTR [esi+0x18],edx
100306c5:	mov    DWORD PTR [esi+0x14],edi
100306c8:	jb     0x100306cf
100306ca:	mov    eax,DWORD PTR [esi+0x4]
100306cd:	jmp    0x100306d2
100306cf:	lea    eax,[esi+0x4]
100306d2:	mov    BYTE PTR [eax+edi*1],0x0
100306d6:	mov    al,BYTE PTR [ebp+0x1]
100306d9:	add    ebp,0x1
100306dc:	test   al,al
100306de:	jne    0x100304d6
100306e4:	mov    eax,esi
100306e6:	mov    ecx,DWORD PTR [esp+0x1c]
100306ea:	mov    DWORD PTR fs:0x0,ecx
100306f1:	pop    ecx
100306f2:	pop    edi
100306f3:	pop    ebp
100306f4:	pop    ebx
100306f5:	add    esp,0x18
100306f8:	ret    
100306f9:	int3   
100306fa:	int3   
100306fb:	int3   
100306fc:	int3   
100306fd:	int3   
100306fe:	int3   
100306ff:	int3   
10030700:	sub    esp,0x14
10030703:	mov    eax,ds:0x1007e030
10030708:	xor    eax,esp
1003070a:	mov    DWORD PTR [esp+0x10],eax
1003070e:	movzx  eax,BYTE PTR [esp+0x18]
10030713:	push   eax
10030714:	push   0x31705fcc
10030719:	push   0x5d065ca2
1003071e:	push   0x22f476fc
10030723:	push   0x10072ff8
10030728:	mov    DWORD PTR [esp+0x14],0x0
10030730:	call   0x100042bd
10030735:	add    esp,0x8
10030738:	push   eax
10030739:	call   0x100042bd
1003073e:	add    esp,0x8
10030741:	push   eax
10030742:	call   0x100042bd
10030747:	push   eax
10030748:	push   0x6
1003074a:	push   0x10073028
1003074f:	call   0x100042cf
10030754:	add    esp,0x14
10030757:	push   eax
10030758:	lea    ecx,[esp+0xc]
1003075c:	push   ecx
1003075d:	call   0x1005856f
10030762:	lea    edx,[esp+0x10]
10030766:	mov    DWORD PTR [esi+0x18],0xf
1003076d:	mov    DWORD PTR [esi+0x14],0x0
10030774:	push   edx
10030775:	mov    BYTE PTR [esi+0x4],0x0
10030779:	call   0x10043100
1003077e:	add    esp,0x10
10030781:	push   eax
10030782:	lea    eax,[esp+0x8]
10030786:	push   eax
10030787:	mov    ecx,esi
10030789:	call   0x10001336
1003078e:	mov    ecx,DWORD PTR [esp+0x10]
10030792:	xor    ecx,esp
10030794:	mov    eax,esi
10030796:	call   0x10042f87
1003079b:	add    esp,0x14
1003079e:	ret    
1003079f:	int3   
100307a0:	push   0xffffffff
100307a2:	push   0x10062769
100307a7:	mov    eax,fs:0x0
100307ad:	push   eax
100307ae:	sub    esp,0x28
100307b1:	push   ebx
100307b2:	push   ebp
100307b3:	push   esi
100307b4:	mov    eax,ds:0x1007e030
100307b9:	xor    eax,esp
100307bb:	push   eax
100307bc:	lea    eax,[esp+0x38]
100307c0:	mov    fs:0x0,eax
100307c6:	xor    eax,eax
100307c8:	mov    DWORD PTR [esp+0x30],eax
100307cc:	mov    DWORD PTR [edi+0x18],0xf
100307d3:	mov    DWORD PTR [edi+0x14],eax
100307d6:	mov    DWORD PTR [esp+0x34],edi
100307da:	mov    esi,ecx
100307dc:	mov    BYTE PTR [edi+0x4],al
100307df:	mov    DWORD PTR [esp+0x40],eax
100307e3:	mov    eax,DWORD PTR [esi]
100307e5:	mov    ebp,0x10
100307ea:	mov    ecx,0x1
100307ef:	sub    eax,ebp
100307f1:	cmp    DWORD PTR [eax+0xc],ecx
100307f4:	mov    DWORD PTR [esp+0x30],ecx
100307f8:	jle    0x10030804
100307fa:	mov    eax,DWORD PTR [eax+0x4]
100307fd:	push   eax
100307fe:	push   esi
100307ff:	call   0x10002299
10030804:	mov    ebx,DWORD PTR [esi]
10030806:	movzx  eax,WORD PTR [ebx]
10030809:	test   ax,ax
1003080c:	mov    DWORD PTR [esp+0x10],ebx
10030810:	je     0x10030b62
10030816:	jmp    0x10030824
10030818:	jmp    0x10030820
1003081a:	lea    ebx,[ebx+0x0]
10030820:	mov    ebx,DWORD PTR [esp+0x10]
10030824:	cmp    ax,0x41
10030828:	jb     0x10030834
1003082a:	cmp    ax,0x5a
1003082e:	jbe    0x10030ac9
10030834:	cmp    ax,0x61
10030838:	jb     0x10030844
1003083a:	cmp    ax,0x7a
1003083e:	jbe    0x10030ac9
10030844:	cmp    ax,0x30
10030848:	jb     0x10030854
1003084a:	cmp    ax,0x39
1003084e:	jbe    0x10030ac9
10030854:	cmp    ax,0x20
10030858:	jne    0x100308c6
1003085a:	or     ecx,0xffffffff
1003085d:	sub    ecx,DWORD PTR [edi+0x14]
10030860:	cmp    ecx,0x1
10030863:	ja     0x1003086a
10030865:	call   0x10057290
1003086a:	mov    esi,DWORD PTR [edi+0x14]
1003086d:	add    esi,0x1
10030870:	cmp    esi,0xfffffffe
10030873:	jbe    0x1003087a
10030875:	call   0x10057290
1003087a:	mov    eax,DWORD PTR [edi+0x18]
1003087d:	cmp    eax,esi
1003087f:	jae    0x100308a4
10030881:	mov    edx,DWORD PTR [edi+0x14]
10030884:	push   edx
10030885:	push   esi
10030886:	mov    ecx,edi
10030888:	call   0x100014fb
1003088d:	test   esi,esi
1003088f:	jbe    0x10030b4b
10030895:	cmp    DWORD PTR [edi+0x18],ebp
10030898:	mov    ecx,DWORD PTR [edi+0x14]
1003089b:	lea    edx,[edi+0x4]
1003089e:	jb     0x100308ad
100308a0:	mov    eax,DWORD PTR [edx]
100308a2:	jmp    0x100308af
100308a4:	test   esi,esi
100308a6:	jne    0x1003088f
100308a8:	jmp    0x10030b19
100308ad:	mov    eax,edx
100308af:	mov    BYTE PTR [eax+ecx*1],0x2b
100308b3:	cmp    DWORD PTR [edi+0x18],ebp
100308b6:	mov    DWORD PTR [edi+0x14],esi
100308b9:	jb     0x10030b45
100308bf:	mov    eax,DWORD PTR [edx]
100308c1:	jmp    0x10030b47
100308c6:	cmp    ax,0x2d
100308ca:	je     0x10030ac9
100308d0:	cmp    ax,0x5f
100308d4:	je     0x10030ac9
100308da:	cmp    ax,0x2e
100308de:	je     0x10030ac9
100308e4:	cmp    ax,0x21
100308e8:	je     0x10030ac9
100308ee:	cmp    ax,0x7e
100308f2:	je     0x10030ac9
100308f8:	cmp    ax,0x2a
100308fc:	je     0x10030ac9
10030902:	cmp    ax,0x27
10030906:	je     0x10030ac9
1003090c:	cmp    ax,0x28
10030910:	je     0x10030ac9
10030916:	cmp    ax,0x29
1003091a:	je     0x10030ac9
10030920:	cmp    ax,0x7f
10030924:	lea    esi,[esp+0x14]
10030928:	ja     0x1003096a
1003092a:	movzx  eax,BYTE PTR [ebx]
1003092d:	push   eax
1003092e:	call   0x10030700
10030933:	add    esp,0x4
10030936:	push   0xffffffff
10030938:	push   0x0
1003093a:	mov    esi,edi
1003093c:	mov    DWORD PTR [esp+0x48],0x1
10030944:	call   0x10004ce1
10030949:	mov    BYTE PTR [esp+0x40],0x0
1003094e:	cmp    DWORD PTR [esp+0x2c],ebp
10030952:	jb     0x10030b4b
10030958:	mov    ecx,DWORD PTR [esp+0x18]
1003095c:	push   ecx
1003095d:	call   0x10042f82
10030962:	add    esp,0x4
10030965:	jmp    0x10030b4b
1003096a:	cmp    ax,0x7ff
1003096e:	ja     0x100309fa
10030974:	shr    eax,0x6
10030977:	or     eax,0xffffffc0
1003097a:	push   eax
1003097b:	call   0x10030700
10030980:	add    esp,0x4
10030983:	push   0xffffffff
10030985:	push   0x0
10030987:	mov    esi,edi
10030989:	mov    DWORD PTR [esp+0x48],0x2
10030991:	call   0x10004ce1
10030996:	mov    BYTE PTR [esp+0x40],0x0
1003099b:	cmp    DWORD PTR [esp+0x2c],ebp
1003099f:	jb     0x100309ae
100309a1:	mov    edx,DWORD PTR [esp+0x18]
100309a5:	push   edx
100309a6:	call   0x10042f82
100309ab:	add    esp,0x4
100309ae:	movzx  eax,BYTE PTR [ebx]
100309b1:	and    eax,0xffffff3f
100309b6:	or     eax,0xffffff80
100309b9:	push   eax
100309ba:	lea    esi,[esp+0x18]
100309be:	call   0x10030700
100309c3:	add    esp,0x4
100309c6:	push   0xffffffff
100309c8:	push   0x0
100309ca:	mov    esi,edi
100309cc:	mov    DWORD PTR [esp+0x48],0x3
100309d4:	call   0x10004ce1
100309d9:	mov    BYTE PTR [esp+0x40],0x0
100309de:	cmp    DWORD PTR [esp+0x2c],ebp
100309e2:	jb     0x10030b4b
100309e8:	mov    ecx,DWORD PTR [esp+0x18]
100309ec:	push   ecx
100309ed:	call   0x10042f82
100309f2:	add    esp,0x4
100309f5:	jmp    0x10030b4b
100309fa:	shr    ax,0xc
100309fe:	or     eax,0xffffffe0
10030a01:	push   eax
10030a02:	call   0x10030700
10030a07:	add    esp,0x4
10030a0a:	push   0xffffffff
10030a0c:	push   0x0
10030a0e:	mov    esi,edi
10030a10:	mov    DWORD PTR [esp+0x48],0x4
10030a18:	call   0x10004ce1
10030a1d:	mov    BYTE PTR [esp+0x40],0x0
10030a22:	cmp    DWORD PTR [esp+0x2c],ebp
10030a26:	jb     0x10030a35
10030a28:	mov    edx,DWORD PTR [esp+0x18]
10030a2c:	push   edx
10030a2d:	call   0x10042f82
10030a32:	add    esp,0x4
10030a35:	movzx  eax,WORD PTR [ebx]
10030a38:	shr    ax,0x6
10030a3c:	lea    esi,[esp+0x14]
10030a40:	and    eax,0xffffff3f
10030a45:	or     eax,0xffffff80
10030a48:	push   eax
10030a49:	call   0x10030700
10030a4e:	add    esp,0x4
10030a51:	push   0xffffffff
10030a53:	push   0x0
10030a55:	mov    esi,edi
10030a57:	mov    DWORD PTR [esp+0x48],0x5
10030a5f:	call   0x10004ce1
10030a64:	mov    BYTE PTR [esp+0x40],0x0
10030a69:	cmp    DWORD PTR [esp+0x2c],ebp
10030a6d:	jb     0x10030a7c
10030a6f:	mov    ecx,DWORD PTR [esp+0x18]
10030a73:	push   ecx
10030a74:	call   0x10042f82
10030a79:	add    esp,0x4
10030a7c:	movzx  edx,BYTE PTR [ebx]
10030a7f:	and    edx,0xffffff3f
10030a85:	or     edx,0xffffff80
10030a88:	push   edx
10030a89:	lea    esi,[esp+0x18]
10030a8d:	call   0x10030700
10030a92:	add    esp,0x4
10030a95:	push   0xffffffff
10030a97:	push   0x0
10030a99:	mov    esi,edi
10030a9b:	mov    DWORD PTR [esp+0x48],0x6
10030aa3:	call   0x10004ce1
10030aa8:	mov    BYTE PTR [esp+0x40],0x0
10030aad:	cmp    DWORD PTR [esp+0x2c],ebp
10030ab1:	jb     0x10030b4b
10030ab7:	mov    eax,DWORD PTR [esp+0x18]
10030abb:	push   eax
10030abc:	call   0x10042f82
10030ac1:	add    esp,0x4
10030ac4:	jmp    0x10030b4b
10030ac9:	mov    ecx,DWORD PTR [esp+0x10]
10030acd:	mov    bl,BYTE PTR [ecx]
10030acf:	or     edx,0xffffffff
10030ad2:	sub    edx,DWORD PTR [edi+0x14]
10030ad5:	cmp    edx,0x1
10030ad8:	ja     0x10030adf
10030ada:	call   0x10057290
10030adf:	mov    esi,DWORD PTR [edi+0x14]
10030ae2:	add    esi,0x1
10030ae5:	cmp    esi,0xfffffffe
10030ae8:	jbe    0x10030aef
10030aea:	call   0x10057290
10030aef:	mov    eax,DWORD PTR [edi+0x18]
10030af2:	cmp    eax,esi
10030af4:	jae    0x10030b15
10030af6:	mov    eax,DWORD PTR [edi+0x14]
10030af9:	push   eax
10030afa:	push   esi
10030afb:	mov    ecx,edi
10030afd:	call   0x100014fb
10030b02:	test   esi,esi
10030b04:	jbe    0x10030b4b
10030b06:	cmp    DWORD PTR [edi+0x18],ebp
10030b09:	mov    ecx,DWORD PTR [edi+0x14]
10030b0c:	lea    edx,[edi+0x4]
10030b0f:	jb     0x10030b34
10030b11:	mov    eax,DWORD PTR [edx]
10030b13:	jmp    0x10030b36
10030b15:	test   esi,esi
10030b17:	jne    0x10030b04
10030b19:	cmp    eax,ebp
10030b1b:	mov    DWORD PTR [edi+0x14],0x0
10030b22:	jb     0x10030b2c
10030b24:	mov    eax,DWORD PTR [edi+0x4]
10030b27:	mov    BYTE PTR [eax],0x0
10030b2a:	jmp    0x10030b4b
10030b2c:	lea    eax,[edi+0x4]
10030b2f:	mov    BYTE PTR [eax],0x0
10030b32:	jmp    0x10030b4b
10030b34:	mov    eax,edx
10030b36:	mov    BYTE PTR [eax+ecx*1],bl
10030b39:	cmp    DWORD PTR [edi+0x18],ebp
10030b3c:	mov    DWORD PTR [edi+0x14],esi
10030b3f:	jb     0x10030b45
10030b41:	mov    eax,DWORD PTR [edx]
10030b43:	jmp    0x10030b47
10030b45:	mov    eax,edx
10030b47:	mov    BYTE PTR [eax+esi*1],0x0
10030b4b:	mov    eax,DWORD PTR [esp+0x10]
10030b4f:	add    eax,0x2
10030b52:	mov    DWORD PTR [esp+0x10],eax
10030b56:	movzx  eax,WORD PTR [eax]
10030b59:	test   ax,ax
10030b5c:	jne    0x10030820
10030b62:	mov    eax,edi
10030b64:	mov    ecx,DWORD PTR [esp+0x38]
10030b68:	mov    DWORD PTR fs:0x0,ecx
10030b6f:	pop    ecx
10030b70:	pop    esi
10030b71:	pop    ebp
10030b72:	pop    ebx
10030b73:	add    esp,0x34
10030b76:	ret    
10030b77:	int3   
10030b78:	int3   
10030b79:	int3   
10030b7a:	int3   
10030b7b:	int3   
10030b7c:	int3   
10030b7d:	int3   
10030b7e:	int3   
10030b7f:	int3   
10030b80:	push   0xffffffff
10030b82:	push   0x1005ff68
10030b87:	mov    eax,fs:0x0
10030b8d:	push   eax
10030b8e:	sub    esp,0x40
10030b91:	push   ebx
10030b92:	push   ebp
10030b93:	push   esi
10030b94:	push   edi
10030b95:	mov    eax,ds:0x1007e030
10030b9a:	xor    eax,esp
10030b9c:	push   eax
10030b9d:	lea    eax,[esp+0x54]
10030ba1:	mov    fs:0x0,eax
10030ba7:	mov    esi,ecx
10030ba9:	mov    ebp,DWORD PTR [esp+0x64]
10030bad:	xor    ebx,ebx
10030baf:	push   0x38
10030bb1:	lea    eax,[esp+0x20]
10030bb5:	push   ebx
10030bb6:	push   eax
10030bb7:	mov    DWORD PTR [esp+0x20],ebx
10030bbb:	call   0x10045cf0
10030bc0:	add    esp,0xc
10030bc3:	cmp    DWORD PTR [esi+0x18],0x10
10030bc7:	mov    DWORD PTR [esp+0x18],0x3c
10030bcf:	mov    DWORD PTR [esp+0x2c],0x1
10030bd7:	jb     0x10030bde
10030bd9:	mov    esi,DWORD PTR [esi+0x4]
10030bdc:	jmp    0x10030be1
10030bde:	add    esi,0x4
10030be1:	lea    ecx,[esp+0x18]
10030be5:	push   ecx
10030be6:	push   ebx
10030be7:	push   ebx
10030be8:	push   esi
10030be9:	call   DWORD PTR ds:0x1006637c
10030bef:	test   eax,eax
10030bf1:	jne    0x10030c1c
10030bf3:	mov    DWORD PTR [ebp+0x18],0xf
10030bfa:	mov    DWORD PTR [ebp+0x14],ebx
10030bfd:	push   0x1006cd08
10030c02:	mov    BYTE PTR [ebp+0x4],bl
10030c05:	call   0x10043100
10030c0a:	add    esp,0x4
10030c0d:	push   eax
10030c0e:	push   0x1006cd08
10030c13:	mov    ecx,ebp
10030c15:	call   0x10001336
10030c1a:	jmp    0x10030c90
10030c1c:	mov    esi,DWORD PTR [esp+0x2c]
10030c20:	mov    ebx,DWORD PTR [esp+0x28]
10030c24:	lea    edi,[esp+0x14]
10030c28:	call   0x100343c0
10030c2d:	xor    ebx,ebx
10030c2f:	mov    DWORD PTR [esp+0x5c],ebx
10030c33:	mov    esi,DWORD PTR [esp+0x14]
10030c37:	cmp    DWORD PTR [esi-0x4],0x1
10030c3b:	jle    0x10030c4d
10030c3d:	mov    edx,DWORD PTR [esi-0xc]
10030c40:	push   edx
10030c41:	mov    eax,edi
10030c43:	push   eax
10030c44:	call   0x10034610
10030c49:	mov    esi,DWORD PTR [esp+0x14]
10030c4d:	mov    DWORD PTR [ebp+0x18],0xf
10030c54:	mov    DWORD PTR [ebp+0x14],ebx
10030c57:	push   esi
10030c58:	mov    BYTE PTR [ebp+0x4],bl
10030c5b:	call   0x10043100
10030c60:	add    esp,0x4
10030c63:	push   eax
10030c64:	push   esi
10030c65:	mov    ecx,ebp
10030c67:	call   0x10001336
10030c6c:	lea    eax,[esi-0x10]
10030c6f:	mov    DWORD PTR [esp+0x5c],0xffffffff
10030c77:	lea    ecx,[eax+0xc]
10030c7a:	or     edx,0xffffffff
10030c7d:	lock xadd DWORD PTR [ecx],edx
10030c81:	dec    edx
10030c82:	test   edx,edx
10030c84:	jg     0x10030c90
10030c86:	mov    ecx,DWORD PTR [eax]
10030c88:	mov    edx,DWORD PTR [ecx]
10030c8a:	push   eax
10030c8b:	mov    eax,DWORD PTR [edx+0x4]
10030c8e:	call   eax
10030c90:	mov    eax,ebp
10030c92:	mov    ecx,DWORD PTR [esp+0x54]
10030c96:	mov    DWORD PTR fs:0x0,ecx
10030c9d:	pop    ecx
10030c9e:	pop    edi
10030c9f:	pop    esi
10030ca0:	pop    ebp
10030ca1:	pop    ebx
10030ca2:	add    esp,0x4c
10030ca5:	ret    
10030ca6:	int3   
10030ca7:	int3   
10030ca8:	int3   
10030ca9:	int3   
10030caa:	int3   
10030cab:	int3   
10030cac:	int3   
10030cad:	int3   
10030cae:	int3   
10030caf:	int3   
10030cb0:	push   ebp
10030cb1:	lea    ebp,[esp-0x78]
10030cb5:	sub    esp,0xd0
10030cbb:	mov    eax,ds:0x1007e030
10030cc0:	xor    eax,ebp
10030cc2:	mov    DWORD PTR [ebp+0x74],eax
10030cc5:	push   esi
10030cc6:	push   edi
10030cc7:	push   0x64
10030cc9:	lea    eax,[ebp-0x54]
10030ccc:	push   eax
10030ccd:	xor    esi,esi
10030ccf:	push   0x59
10030cd1:	mov    DWORD PTR [ebp-0x58],esi
10030cd4:	call   DWORD PTR ds:0x10066238
10030cda:	push   eax
10030cdb:	call   DWORD PTR ds:0x10066240
10030ce1:	call   DWORD PTR ds:0x1007efec
10030ce7:	lea    ecx,[ebp-0x54]
10030cea:	push   ecx
10030ceb:	mov    DWORD PTR [ebp-0x58],eax
10030cee:	call   DWORD PTR ds:0x100660c4
10030cf4:	add    eax,0x1
10030cf7:	cmp    eax,0x3fffffff
10030cfc:	jg     0x10030d35
10030cfe:	lea    esi,[eax+eax*1]
10030d01:	mov    eax,esi
10030d03:	call   0x1004b7e0
10030d08:	mov    edi,esp
10030d0a:	test   edi,edi
10030d0c:	je     0x10030d33
10030d0e:	mov    eax,DWORD PTR [ebp-0x58]
10030d11:	push   0x0
10030d13:	push   0x0
10030d15:	push   esi
10030d16:	push   edi
10030d17:	push   0xffffffff
10030d19:	lea    edx,[ebp-0x54]
10030d1c:	push   edx
10030d1d:	push   0x0
10030d1f:	push   eax
10030d20:	mov    BYTE PTR [edi],0x0
10030d23:	call   DWORD PTR ds:0x100660b8
10030d29:	mov    esi,eax
10030d2b:	neg    esi
10030d2d:	sbb    esi,esi
10030d2f:	and    esi,edi
10030d31:	jmp    0x10030d35
10030d33:	xor    esi,esi
10030d35:	mov    DWORD PTR [ebx+0x18],0xf
10030d3c:	mov    DWORD PTR [ebx+0x14],0x0
10030d43:	push   esi
10030d44:	mov    BYTE PTR [ebx+0x4],0x0
10030d48:	call   0x10043100
10030d4d:	add    esp,0x4
10030d50:	push   eax
10030d51:	push   esi
10030d52:	mov    ecx,ebx
10030d54:	call   0x10001336
10030d59:	mov    eax,ebx
10030d5b:	lea    esp,[ebp-0x60]
10030d5e:	pop    edi
10030d5f:	pop    esi
10030d60:	mov    ecx,DWORD PTR [ebp+0x74]
10030d63:	xor    ecx,ebp
10030d65:	call   0x10042f87
10030d6a:	add    ebp,0x78
10030d6d:	mov    esp,ebp
10030d6f:	pop    ebp
10030d70:	ret    
10030d71:	int3   
10030d72:	int3   
10030d73:	int3   
10030d74:	int3   
10030d75:	int3   
10030d76:	int3   
10030d77:	int3   
10030d78:	int3   
10030d79:	int3   
10030d7a:	int3   
10030d7b:	int3   
10030d7c:	int3   
10030d7d:	int3   
10030d7e:	int3   
10030d7f:	int3   
10030d80:	sub    esp,0x74
10030d83:	mov    eax,ds:0x1007e030
10030d88:	xor    eax,esp
10030d8a:	mov    DWORD PTR [esp+0x70],eax
10030d8e:	mov    eax,DWORD PTR [esp+0x78]
10030d92:	movzx  ecx,BYTE PTR [eax+0xf]
10030d96:	movzx  edx,BYTE PTR [eax+0xe]
10030d9a:	push   ecx
10030d9b:	movzx  ecx,BYTE PTR [eax+0xd]
10030d9f:	push   edx
10030da0:	movzx  edx,BYTE PTR [eax+0xc]
10030da4:	push   ecx
10030da5:	movzx  ecx,BYTE PTR [eax+0xb]
10030da9:	push   edx
10030daa:	movzx  edx,BYTE PTR [eax+0xa]
10030dae:	push   ecx
10030daf:	movzx  ecx,BYTE PTR [eax+0x9]
10030db3:	push   edx
10030db4:	movzx  edx,BYTE PTR [eax+0x8]
10030db8:	push   ecx
10030db9:	movzx  ecx,WORD PTR [eax+0x6]
10030dbd:	push   edx
10030dbe:	movzx  edx,WORD PTR [eax+0x4]
10030dc2:	mov    eax,DWORD PTR [eax]
10030dc4:	push   ecx
10030dc5:	push   edx
10030dc6:	push   eax
10030dc7:	push   0x10073030
10030dcc:	push   0x32
10030dce:	push   0x10073060
10030dd3:	mov    DWORD PTR [esp+0x38],0x0
10030ddb:	call   0x100042cf
10030de0:	add    esp,0xc
10030de3:	push   eax
10030de4:	lea    ecx,[esp+0x34]
10030de8:	push   ecx
10030de9:	call   0x1005856f
10030dee:	lea    edx,[esp+0x38]
10030df2:	mov    DWORD PTR [esi+0x18],0xf
10030df9:	mov    DWORD PTR [esi+0x14],0x0
10030e00:	push   edx
10030e01:	mov    BYTE PTR [esi+0x4],0x0
10030e05:	call   0x10043100
10030e0a:	add    esp,0x38
10030e0d:	push   eax
10030e0e:	lea    eax,[esp+0x8]
10030e12:	push   eax
10030e13:	mov    ecx,esi
10030e15:	call   0x10001336
10030e1a:	mov    ecx,DWORD PTR [esp+0x70]
10030e1e:	xor    ecx,esp
10030e20:	mov    eax,esi
10030e22:	call   0x10042f87
10030e27:	add    esp,0x74
10030e2a:	ret    
10030e2b:	int3   
10030e2c:	int3   
10030e2d:	int3   
10030e2e:	int3   
10030e2f:	int3   
10030e30:	push   esi
10030e31:	push   edi
10030e32:	push   0x10080d4c
10030e37:	call   DWORD PTR ds:0x100660a4
10030e3d:	mov    eax,DWORD PTR [esp+0xc]
10030e41:	mov    esi,DWORD PTR [eax]
10030e43:	mov    edi,DWORD PTR [eax+0x4]
10030e46:	push   eax
10030e47:	call   0x10042f82
10030e4c:	mov    eax,ds:0x10080fa0
10030e51:	add    esp,0x4
10030e54:	push   edi
10030e55:	push   eax
10030e56:	call   DWORD PTR ds:0x10066084
10030e5c:	push   esi
10030e5d:	call   DWORD PTR ds:0x10066380
10030e63:	push   0x10080d4c
10030e68:	call   DWORD PTR ds:0x100660ac
10030e6e:	pop    edi
10030e6f:	xor    eax,eax
10030e71:	pop    esi
10030e72:	ret    0x4
10030e75:	int3   
10030e76:	int3   
10030e77:	int3   
10030e78:	int3   
10030e79:	int3   
10030e7a:	int3   
10030e7b:	int3   
10030e7c:	int3   
10030e7d:	int3   
10030e7e:	int3   
10030e7f:	int3   
10030e80:	push   0xffffffff
10030e82:	push   0x10063fe8
10030e87:	mov    eax,fs:0x0
10030e8d:	push   eax
10030e8e:	sub    esp,0x20
10030e91:	push   ebx
10030e92:	mov    eax,ds:0x1007e030
10030e97:	xor    eax,esp
10030e99:	push   eax
10030e9a:	lea    eax,[esp+0x28]
10030e9e:	mov    fs:0x0,eax
10030ea4:	xor    ebx,ebx
10030ea6:	mov    DWORD PTR [esp+0x8],ebx
10030eaa:	push   0x1006cd08
10030eaf:	mov    DWORD PTR [esp+0x28],0xf
10030eb7:	mov    DWORD PTR [esp+0x24],ebx
10030ebb:	mov    BYTE PTR [esp+0x14],bl
10030ebf:	call   0x10043100
10030ec4:	add    esp,0x4
10030ec7:	push   eax
10030ec8:	push   0x1006cd08
10030ecd:	lea    ecx,[esp+0x14]
10030ed1:	call   0x10001336
10030ed6:	mov    eax,DWORD PTR [esp+0x44]
10030eda:	mov    ecx,DWORD PTR [esp+0x40]
10030ede:	push   eax
10030edf:	mov    eax,DWORD PTR [esp+0x3c]
10030ee3:	push   ecx
10030ee4:	lea    edx,[esp+0x14]
10030ee8:	push   edx
10030ee9:	mov    edx,DWORD PTR [esp+0x48]
10030eed:	push   eax
10030eee:	lea    ecx,[esp+0x18]
10030ef2:	push   ecx
10030ef3:	mov    DWORD PTR [esp+0x44],ebx
10030ef7:	call   0x10030f40
10030efc:	mov    ecx,DWORD PTR [eax]
10030efe:	mov    DWORD PTR [eax],ebx
10030f00:	mov    edx,DWORD PTR [esp+0x1c]
10030f04:	push   edx
10030f05:	mov    DWORD PTR [esi],ecx
10030f07:	call   0x10042f82
10030f0c:	add    esp,0x18
10030f0f:	cmp    DWORD PTR [esp+0x24],0x10
10030f14:	jb     0x10030f23
10030f16:	mov    eax,DWORD PTR [esp+0x10]
10030f1a:	push   eax
10030f1b:	call   0x10042f82
10030f20:	add    esp,0x4
10030f23:	mov    eax,esi
10030f25:	mov    ecx,DWORD PTR [esp+0x28]
10030f29:	mov    DWORD PTR fs:0x0,ecx
10030f30:	pop    ecx
10030f31:	pop    ebx
10030f32:	add    esp,0x2c
10030f35:	ret    
10030f36:	int3   
10030f37:	int3   
10030f38:	int3   
10030f39:	int3   
10030f3a:	int3   
10030f3b:	int3   
10030f3c:	int3   
10030f3d:	int3   
10030f3e:	int3   
10030f3f:	int3   
10030f40:	push   0xffffffff
10030f42:	push   0x10063fc0
10030f47:	mov    eax,fs:0x0
10030f4d:	push   eax
10030f4e:	sub    esp,0x18
10030f51:	push   ebx
10030f52:	push   ebp
10030f53:	push   esi
10030f54:	push   edi
10030f55:	mov    eax,ds:0x1007e030
10030f5a:	xor    eax,esp
10030f5c:	push   eax
10030f5d:	lea    eax,[esp+0x2c]
10030f61:	mov    fs:0x0,eax
10030f67:	mov    ebp,DWORD PTR [esp+0x3c]
10030f6b:	xor    ebx,ebx
10030f6d:	mov    DWORD PTR [esp+0x20],ebx
10030f71:	mov    DWORD PTR [esp+0x24],ebx
10030f75:	mov    eax,DWORD PTR [esp+0x4c]
10030f79:	push   eax
10030f7a:	lea    ecx,[esp+0x1c]
10030f7e:	push   ecx
10030f7f:	mov    ecx,DWORD PTR [esp+0x48]
10030f83:	push   edx
10030f84:	mov    edx,DWORD PTR [esp+0x50]
10030f88:	lea    eax,[esp+0x28]
10030f8c:	mov    DWORD PTR [esp+0x40],ebx
10030f90:	push   eax
10030f91:	mov    DWORD PTR [esp+0x28],ebx
10030f95:	call   0x10031c10
10030f9a:	mov    ecx,DWORD PTR [eax]
10030f9c:	mov    esi,ecx
10030f9e:	mov    DWORD PTR [eax],ebx
10030fa0:	mov    DWORD PTR [esp+0x38],esi
10030fa4:	mov    BYTE PTR [esp+0x44],0x1
10030fa9:	mov    edx,DWORD PTR [esp+0x2c]
10030fad:	push   edx
10030fae:	call   0x10042f82
10030fb3:	add    esp,0x14
10030fb6:	cmp    esi,ebx
10030fb8:	jne    0x10030fc0
10030fba:	mov    DWORD PTR [ebp+0x0],ebx
10030fbd:	push   ebx
10030fbe:	jmp    0x1003102d
10030fc0:	mov    ecx,DWORD PTR [esp+0x18]
10030fc4:	mov    eax,DWORD PTR [esi+ecx*1-0x4]
10030fc8:	sub    eax,0x4
10030fcb:	lea    edx,[eax+0x4]
10030fce:	cmp    edx,ecx
10030fd0:	jbe    0x10030fd7
10030fd2:	mov    DWORD PTR [ebp+0x0],ebx
10030fd5:	jmp    0x1003102c
10030fd7:	mov    edx,DWORD PTR ds:0x10080dbc
10030fdd:	push   ebx
10030fde:	push   edx
10030fdf:	push   eax
10030fe0:	mov    edx,esi
10030fe2:	sub    edx,eax
10030fe4:	lea    eax,[edx+ecx*1-0x4]
10030fe8:	push   eax
10030fe9:	lea    ecx,[esp+0x30]
10030fed:	push   ecx
10030fee:	mov    ecx,DWORD PTR [esp+0x5c]
10030ff2:	lea    edx,[esp+0x2b]
10030ff6:	call   0x10039830
10030ffb:	mov    edi,DWORD PTR [eax]
10030ffd:	add    esp,0x14
10031000:	cmp    edi,ebx
10031002:	mov    DWORD PTR [eax],ebx
10031004:	je     0x1003100f
10031006:	push   ebx
10031007:	call   0x10042f82
1003100c:	add    esp,0x4
1003100f:	mov    edx,DWORD PTR [esp+0x20]
10031013:	push   edx
10031014:	call   0x10042f82
10031019:	add    esp,0x4
1003101c:	cmp    BYTE PTR [esp+0x17],bl
10031020:	je     0x10031029
10031022:	mov    BYTE PTR ds:0x10080d48,0x1
10031029:	mov    DWORD PTR [ebp+0x0],edi
1003102c:	push   esi
1003102d:	call   0x10042f82
10031032:	add    esp,0x4
10031035:	push   ebx
10031036:	call   0x10042f82
1003103b:	add    esp,0x4
1003103e:	mov    eax,ebp
10031040:	mov    ecx,DWORD PTR [esp+0x2c]
10031044:	mov    DWORD PTR fs:0x0,ecx
1003104b:	pop    ecx
1003104c:	pop    edi
1003104d:	pop    esi
1003104e:	pop    ebp
1003104f:	pop    ebx
10031050:	add    esp,0x24
10031053:	ret    
10031054:	int3   
10031055:	int3   
10031056:	int3   
10031057:	int3   
10031058:	int3   
10031059:	int3   
1003105a:	int3   
1003105b:	int3   
1003105c:	int3   
1003105d:	int3   
1003105e:	int3   
1003105f:	int3   
10031060:	push   0xffffffff
10031062:	push   0x100632e0
10031067:	mov    eax,fs:0x0
1003106d:	push   eax
1003106e:	push   esi
1003106f:	push   edi
10031070:	mov    eax,ds:0x1007e030
10031075:	xor    eax,esp
10031077:	push   eax
10031078:	lea    eax,[esp+0xc]
1003107c:	mov    fs:0x0,eax
10031082:	mov    eax,DWORD PTR [esp+0x1c]
10031086:	mov    edi,ecx
10031088:	mov    DWORD PTR [esp+0x1c],0x0
10031090:	cmp    DWORD PTR [eax+0x18],0x10
10031094:	jb     0x1003109b
10031096:	mov    esi,DWORD PTR [eax+0x4]
10031099:	jmp    0x1003109e
1003109b:	lea    esi,[eax+0x4]
1003109e:	mov    eax,ds:0x10080a74
100310a3:	mov    edx,DWORD PTR [eax+0xc]
100310a6:	mov    ecx,0x10080a74
100310ab:	call   edx
100310ad:	add    eax,0x10
100310b0:	mov    DWORD PTR [esp+0x1c],eax
100310b4:	test   esi,esi
100310b6:	mov    DWORD PTR [esp+0x14],0x0
100310be:	je     0x100310e6
100310c0:	test   esi,0xffff0000
100310c6:	jne    0x100310e6
100310c8:	movzx  esi,si
100310cb:	push   esi
100310cc:	call   0x1000200b
100310d1:	add    esp,0x4
100310d4:	test   eax,eax
100310d6:	je     0x100310f1
100310d8:	push   esi
100310d9:	push   eax
100310da:	lea    eax,[esp+0x24]
100310de:	push   eax
100310df:	call   0x100021ca
100310e4:	jmp    0x100310f1
100310e6:	push   esi
100310e7:	lea    ecx,[esp+0x20]
100310eb:	push   ecx
100310ec:	call   0x100020b0
100310f1:	lea    ecx,[esp+0x1c]
100310f5:	mov    DWORD PTR [esp+0x14],0x1
100310fd:	call   0x100307a0
10031102:	mov    DWORD PTR [esp+0x14],0xffffffff
1003110a:	mov    eax,DWORD PTR [esp+0x1c]
1003110e:	add    eax,0xfffffff0
10031111:	lea    edx,[eax+0xc]
10031114:	or     ecx,0xffffffff
10031117:	lock xadd DWORD PTR [edx],ecx
1003111b:	dec    ecx
1003111c:	test   ecx,ecx
1003111e:	jg     0x1003112a
10031120:	mov    ecx,DWORD PTR [eax]
10031122:	mov    edx,DWORD PTR [ecx]
10031124:	push   eax
10031125:	mov    eax,DWORD PTR [edx+0x4]
10031128:	call   eax
1003112a:	mov    eax,edi
1003112c:	mov    ecx,DWORD PTR [esp+0xc]
10031130:	mov    DWORD PTR fs:0x0,ecx
10031137:	pop    ecx
10031138:	pop    edi
10031139:	pop    esi
1003113a:	add    esp,0xc
1003113d:	ret    
1003113e:	int3   
1003113f:	int3   
10031140:	push   ebp
10031141:	mov    ebp,esp
10031143:	push   0xffffffff
10031145:	push   0x10063908
1003114a:	mov    eax,fs:0x0
10031150:	push   eax
10031151:	sub    esp,0xd0
10031157:	mov    eax,ds:0x1007e030
1003115c:	xor    eax,ebp
1003115e:	mov    DWORD PTR [ebp-0x18],eax
10031161:	push   ebx
10031162:	push   esi
10031163:	push   edi
10031164:	push   eax
10031165:	lea    eax,[ebp-0xc]
10031168:	mov    fs:0x0,eax
1003116e:	mov    DWORD PTR [ebp-0x10],esp
10031171:	mov    eax,DWORD PTR [ebp+0x8]
10031174:	xor    ebx,ebx
10031176:	mov    DWORD PTR [ebp-0xb8],ebx
1003117c:	mov    DWORD PTR [ebp-0x4],ebx
1003117f:	mov    edi,0xf
10031184:	mov    DWORD PTR [ebp-0xbc],eax
1003118a:	mov    DWORD PTR [ebp-0x8c],edi
10031190:	mov    DWORD PTR [ebp-0x90],ebx
10031196:	mov    BYTE PTR [ebp-0xa0],bl
1003119c:	mov    DWORD PTR [ebp-0x70],edi
1003119f:	mov    DWORD PTR [ebp-0x74],ebx
100311a2:	mov    BYTE PTR [ebp-0x84],bl
100311a8:	push   0x1
100311aa:	lea    ecx,[ebp-0xb8]
100311b0:	push   ecx
100311b1:	mov    BYTE PTR [ebp-0x4],0x2
100311b5:	call   0x10034a90
100311ba:	mov    DWORD PTR [ebp-0x1c],edi
100311bd:	mov    DWORD PTR [ebp-0x20],ebx
100311c0:	mov    BYTE PTR [ebp-0x30],bl
100311c3:	mov    DWORD PTR [ebp-0x38],edi
100311c6:	mov    DWORD PTR [ebp-0x3c],ebx
100311c9:	mov    BYTE PTR [ebp-0x4c],bl
100311cc:	lea    edx,[ebp-0x88]
100311d2:	push   edx
100311d3:	lea    eax,[ebp-0xa4]
100311d9:	push   eax
100311da:	lea    ecx,[ebp-0xb4]
100311e0:	push   ecx
100311e1:	lea    edx,[ebp-0xb8]
100311e7:	push   edx
100311e8:	lea    edx,[ebp-0x50]
100311eb:	lea    ecx,[ebp-0x34]
100311ee:	mov    BYTE PTR [ebp-0x4],0x5
100311f2:	call   0x100365e0
100311f7:	mov    esi,0x10
100311fc:	cmp    DWORD PTR [ebp-0x38],esi
100311ff:	jb     0x1003120d
10031201:	mov    eax,DWORD PTR [ebp-0x4c]
10031204:	push   eax
10031205:	call   0x10042f82
1003120a:	add    esp,0x4
1003120d:	cmp    DWORD PTR [ebp-0x1c],esi
10031210:	mov    DWORD PTR [ebp-0x38],edi
10031213:	mov    DWORD PTR [ebp-0x3c],ebx
10031216:	mov    BYTE PTR [ebp-0x4c],bl
10031219:	jb     0x10031227
1003121b:	mov    ecx,DWORD PTR [ebp-0x30]
1003121e:	push   ecx
1003121f:	call   0x10042f82
10031224:	add    esp,0x4
10031227:	mov    BYTE PTR [ebp-0x4],0x2
1003122b:	mov    edx,DWORD PTR [ebp-0xb8]
10031231:	push   edx
10031232:	mov    DWORD PTR [ebp-0x1c],edi
10031235:	mov    DWORD PTR [ebp-0x20],ebx
10031238:	mov    BYTE PTR [ebp-0x30],bl
1003123b:	call   DWORD PTR ds:0x10066070
10031241:	push   0x74c3f772
10031246:	push   0x10073094
1003124b:	call   0x100042bd
10031250:	add    esp,0x8
10031253:	push   eax
10031254:	push   0x2
10031256:	push   0x100730bc
1003125b:	call   0x100042cf
10031260:	mov    esi,eax
10031262:	add    esp,0xc
10031265:	push   esi
10031266:	mov    DWORD PTR [ebp-0x54],edi
10031269:	mov    DWORD PTR [ebp-0x58],ebx
1003126c:	mov    BYTE PTR [ebp-0x68],bl
1003126f:	call   0x10043100
10031274:	add    esp,0x4
10031277:	push   eax
10031278:	push   esi
10031279:	lea    ecx,[ebp-0x6c]
1003127c:	call   0x10001336
10031281:	lea    ebx,[ebp-0x50]
10031284:	mov    BYTE PTR [ebp-0x4],0x6
10031288:	call   0x10030cb0
1003128d:	push   eax
1003128e:	lea    ecx,[ebp-0x34]
10031291:	mov    BYTE PTR [ebp-0x4],0x7
10031295:	call   0x10031060
1003129a:	add    esp,0x4
1003129d:	push   0xffffffff
1003129f:	xor    ebx,ebx
100312a1:	push   ebx
100312a2:	lea    esi,[ebp-0x6c]
100312a5:	mov    BYTE PTR [ebp-0x4],0x8
100312a9:	call   0x10004ce1
100312ae:	mov    esi,0x10
100312b3:	cmp    DWORD PTR [ebp-0x1c],esi
100312b6:	jb     0x100312c4
100312b8:	mov    eax,DWORD PTR [ebp-0x30]
100312bb:	push   eax
100312bc:	call   0x10042f82
100312c1:	add    esp,0x4
100312c4:	mov    BYTE PTR [ebp-0x4],0x6
100312c8:	cmp    DWORD PTR [ebp-0x38],esi
100312cb:	mov    DWORD PTR [ebp-0x1c],0xf
100312d2:	mov    DWORD PTR [ebp-0x20],ebx
100312d5:	mov    BYTE PTR [ebp-0x30],bl
100312d8:	jb     0x100312e6
100312da:	mov    ecx,DWORD PTR [ebp-0x4c]
100312dd:	push   ecx
100312de:	call   0x10042f82
100312e3:	add    esp,0x4
100312e6:	lea    edx,[ebp-0xb4]
100312ec:	push   edx
100312ed:	lea    esi,[ebp-0xd8]
100312f3:	call   0x10030d80
100312f8:	add    esp,0x4
100312fb:	mov    edi,eax
100312fd:	push   0x100730c0
10031302:	push   0x3
10031304:	push   0x100730f4
10031309:	mov    BYTE PTR [ebp-0x4],0x9
1003130d:	call   0x100042cf
10031312:	mov    esi,eax
10031314:	add    esp,0xc
10031317:	push   esi
10031318:	mov    DWORD PTR [ebp-0x38],0xf
1003131f:	mov    DWORD PTR [ebp-0x3c],ebx
10031322:	mov    BYTE PTR [ebp-0x4c],bl
10031325:	call   0x10043100
1003132a:	add    esp,0x4
1003132d:	push   eax
1003132e:	push   esi
1003132f:	lea    ecx,[ebp-0x50]
10031332:	call   0x10001336
10031337:	push   edi
10031338:	lea    eax,[ebp-0x50]
1003133b:	push   eax
1003133c:	lea    ecx,[ebp-0x34]
1003133f:	push   ecx
10031340:	mov    BYTE PTR [ebp-0x4],0xa
10031344:	call   0x10006581
10031349:	add    esp,0xc
1003134c:	push   0xffffffff
1003134e:	push   ebx
1003134f:	lea    esi,[ebp-0x6c]
10031352:	mov    BYTE PTR [ebp-0x4],0xb
10031356:	call   0x10004ce1
1003135b:	mov    edi,0x10
10031360:	cmp    DWORD PTR [ebp-0x1c],edi
10031363:	jb     0x10031371
10031365:	mov    edx,DWORD PTR [ebp-0x30]
10031368:	push   edx
10031369:	call   0x10042f82
1003136e:	add    esp,0x4
10031371:	cmp    DWORD PTR [ebp-0x38],edi
10031374:	mov    esi,0xf
10031379:	mov    DWORD PTR [ebp-0x1c],esi
1003137c:	mov    DWORD PTR [ebp-0x20],ebx
1003137f:	mov    BYTE PTR [ebp-0x30],bl
10031382:	jb     0x10031390
10031384:	mov    eax,DWORD PTR [ebp-0x4c]
10031387:	push   eax
10031388:	call   0x10042f82
1003138d:	add    esp,0x4
10031390:	mov    BYTE PTR [ebp-0x4],0x6
10031394:	cmp    DWORD PTR [ebp-0xc0],edi
1003139a:	mov    DWORD PTR [ebp-0x38],esi
1003139d:	mov    DWORD PTR [ebp-0x3c],ebx
100313a0:	mov    BYTE PTR [ebp-0x4c],bl
100313a3:	jb     0x100313b4
100313a5:	mov    ecx,DWORD PTR [ebp-0xd4]
100313ab:	push   ecx
100313ac:	call   0x10042f82
100313b1:	add    esp,0x4
100313b4:	lea    edx,[ebp-0xa4]
100313ba:	push   edx
100313bb:	lea    ecx,[ebp-0xd8]
100313c1:	call   0x10031060
100313c6:	add    esp,0x4
100313c9:	mov    esi,eax
100313cb:	push   0x39465fb6
100313d0:	push   0x100730f8
100313d5:	mov    BYTE PTR [ebp-0x4],0xc
100313d9:	call   0x100042bd
100313de:	add    esp,0x8
100313e1:	push   eax
100313e2:	push   0x3
100313e4:	push   0x10073130
100313e9:	call   0x100042cf
100313ee:	add    esp,0xc
100313f1:	push   esi
100313f2:	push   eax
100313f3:	lea    eax,[ebp-0x34]
100313f6:	push   eax
100313f7:	call   0x100065cc
100313fc:	add    esp,0xc
100313ff:	push   0xffffffff
10031401:	push   ebx
10031402:	lea    esi,[ebp-0x6c]
10031405:	mov    BYTE PTR [ebp-0x4],0xd
10031409:	call   0x10004ce1
1003140e:	cmp    DWORD PTR [ebp-0x1c],edi
10031411:	jb     0x1003141f
10031413:	mov    ecx,DWORD PTR [ebp-0x30]
10031416:	push   ecx
10031417:	call   0x10042f82
1003141c:	add    esp,0x4
1003141f:	mov    BYTE PTR [ebp-0x4],0x6
10031423:	cmp    DWORD PTR [ebp-0xc0],edi
10031429:	mov    DWORD PTR [ebp-0x1c],0xf
10031430:	mov    DWORD PTR [ebp-0x20],ebx
10031433:	mov    BYTE PTR [ebp-0x30],bl
10031436:	jb     0x10031447
10031438:	mov    edx,DWORD PTR [ebp-0xd4]
1003143e:	push   edx
1003143f:	call   0x10042f82
10031444:	add    esp,0x4
10031447:	lea    ebx,[ebp-0xd8]
1003144d:	call   0x1002f9b0
10031452:	push   eax
10031453:	lea    ecx,[ebp-0x50]
10031456:	mov    BYTE PTR [ebp-0x4],0xe
1003145a:	call   0x10031060
1003145f:	add    esp,0x4
10031462:	mov    esi,eax
10031464:	push   0x10073134
10031469:	push   0x4
1003146b:	push   0x1007316c
10031470:	mov    BYTE PTR [ebp-0x4],0xf
10031474:	call   0x100042cf
10031479:	add    esp,0xc
1003147c:	push   esi
1003147d:	push   eax
1003147e:	lea    eax,[ebp-0x34]
10031481:	push   eax
10031482:	call   0x100065cc
10031487:	add    esp,0xc
1003148a:	push   0xffffffff
1003148c:	xor    ebx,ebx
1003148e:	push   ebx
1003148f:	lea    esi,[ebp-0x6c]
10031492:	mov    BYTE PTR [ebp-0x4],0x10
10031496:	call   0x10004ce1
1003149b:	mov    esi,0x10
100314a0:	cmp    DWORD PTR [ebp-0x1c],esi
100314a3:	jb     0x100314b1
100314a5:	mov    ecx,DWORD PTR [ebp-0x30]
100314a8:	push   ecx
100314a9:	call   0x10042f82
100314ae:	add    esp,0x4
100314b1:	cmp    DWORD PTR [ebp-0x38],esi
100314b4:	mov    edi,0xf
100314b9:	mov    DWORD PTR [ebp-0x1c],edi
100314bc:	mov    DWORD PTR [ebp-0x20],ebx
100314bf:	mov    BYTE PTR [ebp-0x30],bl
100314c2:	jb     0x100314d0
100314c4:	mov    edx,DWORD PTR [ebp-0x4c]
100314c7:	push   edx
100314c8:	call   0x10042f82
100314cd:	add    esp,0x4
100314d0:	mov    BYTE PTR [ebp-0x4],0x6
100314d4:	cmp    DWORD PTR [ebp-0xc0],esi
100314da:	mov    DWORD PTR [ebp-0x38],edi
100314dd:	mov    DWORD PTR [ebp-0x3c],ebx
100314e0:	mov    BYTE PTR [ebp-0x4c],bl
100314e3:	jb     0x100314f4
100314e5:	mov    eax,DWORD PTR [ebp-0xd4]
100314eb:	push   eax
100314ec:	call   0x10042f82
100314f1:	add    esp,0x4
100314f4:	lea    ecx,[ebp-0x88]
100314fa:	push   ecx
100314fb:	lea    ecx,[ebp-0xd8]
10031501:	call   0x10031060
10031506:	add    esp,0x4
10031509:	mov    esi,eax
1003150b:	push   0x1fad1ea8
10031510:	push   0x10073174
10031515:	mov    BYTE PTR [ebp-0x4],0x11
10031519:	call   0x100042bd
1003151e:	add    esp,0x8
10031521:	push   eax
10031522:	push   0x3
10031524:	push   0x100731a4
10031529:	call   0x100042cf
1003152e:	add    esp,0xc
10031531:	push   esi
10031532:	push   eax
10031533:	lea    edx,[ebp-0x34]
10031536:	push   edx
10031537:	call   0x100065cc
1003153c:	add    esp,0xc
1003153f:	push   0xffffffff
10031541:	push   ebx
10031542:	lea    esi,[ebp-0x6c]
10031545:	mov    BYTE PTR [ebp-0x4],0x12
10031549:	call   0x10004ce1
1003154e:	mov    esi,0x10
10031553:	cmp    DWORD PTR [ebp-0x1c],esi
10031556:	jb     0x10031564
10031558:	mov    eax,DWORD PTR [ebp-0x30]
1003155b:	push   eax
1003155c:	call   0x10042f82
10031561:	add    esp,0x4
10031564:	mov    BYTE PTR [ebp-0x4],0x6
10031568:	cmp    DWORD PTR [ebp-0xc0],esi
1003156e:	mov    DWORD PTR [ebp-0x1c],edi
10031571:	mov    DWORD PTR [ebp-0x20],ebx
10031574:	mov    BYTE PTR [ebp-0x30],bl
10031577:	jb     0x10031588
10031579:	mov    ecx,DWORD PTR [ebp-0xd4]
1003157f:	push   ecx
10031580:	call   0x10042f82
10031585:	add    esp,0x4
10031588:	lea    edx,[ebp-0xd8]
1003158e:	push   edx
1003158f:	call   0x10037a70
10031594:	add    esp,0x4
10031597:	mov    esi,eax
10031599:	push   0x100731a8
1003159e:	push   0x5
100315a0:	push   0x100731e4
100315a5:	mov    BYTE PTR [ebp-0x4],0x13
100315a9:	call   0x100042cf
100315ae:	add    esp,0xc
100315b1:	push   esi
100315b2:	push   eax
100315b3:	lea    eax,[ebp-0x34]
100315b6:	push   eax
100315b7:	call   0x100065cc
100315bc:	add    esp,0xc
100315bf:	push   0xffffffff
100315c1:	push   ebx
100315c2:	lea    esi,[ebp-0x6c]
100315c5:	mov    BYTE PTR [ebp-0x4],0x14
100315c9:	call   0x10004ce1
100315ce:	mov    esi,0x10
100315d3:	cmp    DWORD PTR [ebp-0x1c],esi
100315d6:	jb     0x100315e4
100315d8:	mov    ecx,DWORD PTR [ebp-0x30]
100315db:	push   ecx
100315dc:	call   0x10042f82
100315e1:	add    esp,0x4
100315e4:	mov    BYTE PTR [ebp-0x4],0x6
100315e8:	cmp    DWORD PTR [ebp-0xc0],esi
100315ee:	mov    DWORD PTR [ebp-0x1c],edi
100315f1:	mov    DWORD PTR [ebp-0x20],ebx
100315f4:	mov    BYTE PTR [ebp-0x30],bl
100315f7:	jb     0x10031608
100315f9:	mov    edx,DWORD PTR [ebp-0xd4]
100315ff:	push   edx
10031600:	call   0x10042f82
10031605:	add    esp,0x4
10031608:	mov    esi,DWORD PTR [ebp-0xbc]
1003160e:	push   0xffffffff
10031610:	push   ebx
10031611:	lea    eax,[ebp-0x6c]
10031614:	mov    DWORD PTR [esi+0x18],edi
10031617:	mov    DWORD PTR [esi+0x14],ebx
1003161a:	push   eax
1003161b:	mov    ecx,esi
1003161d:	mov    BYTE PTR [esi+0x4],bl
10031620:	call   0x1000123c
10031625:	cmp    DWORD PTR [ebp-0x54],0x10
10031629:	jb     0x10031637
1003162b:	mov    ecx,DWORD PTR [ebp-0x68]
1003162e:	push   ecx
1003162f:	call   0x10042f82
10031634:	add    esp,0x4
10031637:	cmp    DWORD PTR [ebp-0x70],0x10
1003163b:	mov    DWORD PTR [ebp-0x54],edi
1003163e:	mov    DWORD PTR [ebp-0x58],ebx
10031641:	mov    BYTE PTR [ebp-0x68],bl
10031644:	jb     0x10031655
10031646:	mov    edx,DWORD PTR [ebp-0x84]
1003164c:	push   edx
1003164d:	call   0x10042f82
10031652:	add    esp,0x4
10031655:	cmp    DWORD PTR [ebp-0x8c],0x10
1003165c:	mov    DWORD PTR [ebp-0x70],edi
1003165f:	mov    DWORD PTR [ebp-0x74],ebx
10031662:	mov    BYTE PTR [ebp-0x84],bl
10031668:	jb     0x10031693
1003166a:	mov    eax,DWORD PTR [ebp-0xa0]
10031670:	push   eax
10031671:	call   0x10042f82
10031676:	add    esp,0x4
10031679:	jmp    0x10031693
1003167b:	mov    eax,0x10031681
10031680:	ret    
10031681:	mov    esi,DWORD PTR [ebp-0xbc]
10031687:	push   0x1006cd08
1003168c:	mov    ecx,esi
1003168e:	call   0x100011c8
10031693:	mov    eax,esi
10031695:	mov    ecx,DWORD PTR [ebp-0xc]
10031698:	mov    DWORD PTR fs:0x0,ecx
1003169f:	pop    ecx
100316a0:	pop    edi
100316a1:	pop    esi
100316a2:	pop    ebx
100316a3:	mov    ecx,DWORD PTR [ebp-0x18]
100316a6:	xor    ecx,ebp
100316a8:	call   0x10042f87
100316ad:	mov    esp,ebp
100316af:	pop    ebp
100316b0:	ret    
100316b1:	int3   
100316b2:	int3   
100316b3:	int3   
100316b4:	int3   
100316b5:	int3   
100316b6:	int3   
100316b7:	int3   
100316b8:	int3   
100316b9:	int3   
100316ba:	int3   
100316bb:	int3   
100316bc:	int3   
100316bd:	int3   
100316be:	int3   
100316bf:	int3   
100316c0:	push   0xffffffff
100316c2:	push   0x10061931
100316c7:	mov    eax,fs:0x0
100316cd:	push   eax
100316ce:	sub    esp,0x64
100316d1:	mov    eax,ds:0x1007e030
100316d6:	xor    eax,esp
100316d8:	mov    DWORD PTR [esp+0x60],eax
100316dc:	push   ebx
100316dd:	push   ebp
100316de:	push   esi
100316df:	push   edi
100316e0:	mov    eax,ds:0x1007e030
100316e5:	xor    eax,esp
100316e7:	push   eax
100316e8:	lea    eax,[esp+0x78]
100316ec:	mov    fs:0x0,eax
100316f2:	xor    ebp,ebp
100316f4:	mov    DWORD PTR [esp+0x80],ebp
100316fb:	mov    ebx,ecx
100316fd:	mov    DWORD PTR [esp+0x30],ebp
10031701:	mov    edi,0xf
10031706:	mov    DWORD PTR [ebx+0x18],edi
10031709:	mov    DWORD PTR [ebx+0x14],ebp
1003170c:	push   0x1006cd08
10031711:	mov    DWORD PTR [esp+0x30],ebx
10031715:	mov    esi,edx
10031717:	mov    BYTE PTR [ebx+0x4],0x0
1003171b:	call   0x10043100
10031720:	add    esp,0x4
10031723:	push   eax
10031724:	push   0x1006cd08
10031729:	mov    ecx,ebx
1003172b:	call   0x10001336
10031730:	mov    eax,0x1
10031735:	mov    DWORD PTR [esp+0x30],eax
10031739:	mov    DWORD PTR [esp+0x20],ebp
1003173d:	mov    DWORD PTR [esp+0x24],ebp
10031741:	mov    DWORD PTR [esp+0x28],ebp
10031745:	push   0xffffffff
10031747:	mov    DWORD PTR [esp+0x84],eax
1003174e:	push   ebp
1003174f:	push   esi
10031750:	lea    ecx,[esp+0x48]
10031754:	mov    DWORD PTR [esp+0x60],edi
10031758:	mov    DWORD PTR [esp+0x5c],ebp
1003175c:	mov    BYTE PTR [esp+0x4c],0x0
10031761:	call   0x1000123c
10031766:	mov    BYTE PTR [esp+0x80],0x2
1003176e:	mov    eax,DWORD PTR [esp+0x50]
10031772:	cmp    eax,ebp
10031774:	jbe    0x100318a9
1003177a:	lea    ebx,[ebx+0x0]
10031780:	cmp    eax,0xfa0
10031785:	mov    DWORD PTR [esp+0x14],eax
10031789:	jbe    0x10031793
1003178b:	mov    DWORD PTR [esp+0x14],0xfa0
10031793:	mov    eax,DWORD PTR [esp+0x14]
10031797:	push   eax
10031798:	push   ebp
10031799:	lea    ecx,[esp+0x44]
1003179d:	push   ecx
1003179e:	lea    eax,[esp+0x64]
100317a2:	call   0x1000c98f
100317a7:	mov    ebx,eax
100317a9:	mov    BYTE PTR [esp+0x80],0x3
100317b1:	mov    edi,DWORD PTR [esp+0x20]
100317b5:	cmp    edi,ebp
100317b7:	mov    ebp,DWORD PTR [esp+0x24]
100317bb:	je     0x10031817
100317bd:	mov    esi,DWORD PTR [esp+0x28]
100317c1:	mov    ecx,ebp
100317c3:	sub    ecx,edi
100317c5:	mov    eax,0x92492493
100317ca:	imul   ecx
100317cc:	add    edx,ecx
100317ce:	sar    edx,0x4
100317d1:	mov    ecx,edx
100317d3:	shr    ecx,0x1f
100317d6:	add    ecx,edx
100317d8:	sub    esi,edi
100317da:	mov    eax,0x92492493
100317df:	imul   esi
100317e1:	add    edx,esi
100317e3:	sar    edx,0x4
100317e6:	mov    eax,edx
100317e8:	shr    eax,0x1f
100317eb:	add    eax,edx
100317ed:	cmp    ecx,eax
100317ef:	jae    0x10031817
100317f1:	mov    eax,DWORD PTR [esp+0x2c]
100317f5:	mov    BYTE PTR [esp+0x18],0x0
100317fa:	mov    edx,DWORD PTR [esp+0x18]
100317fe:	push   edx
100317ff:	push   eax
10031800:	push   ebx
10031801:	push   0x1
10031803:	push   ebp
10031804:	mov    esi,ebp
10031806:	call   0x1000ffaf
1003180b:	add    esp,0x14
1003180e:	add    esi,0x1c
10031811:	mov    DWORD PTR [esp+0x24],esi
10031815:	jmp    0x10031831
10031817:	cmp    edi,ebp
10031819:	jbe    0x10031820
1003181b:	call   0x100434a0
10031820:	push   ebp
10031821:	lea    eax,[esp+0x20]
10031825:	push   eax
10031826:	push   ebx
10031827:	lea    ecx,[esp+0x40]
1003182b:	push   ecx
1003182c:	call   0x1000fc14
10031831:	mov    esi,0x10
10031836:	mov    BYTE PTR [esp+0x80],0x2
1003183e:	cmp    DWORD PTR [esp+0x70],esi
10031842:	jb     0x10031851
10031844:	mov    edx,DWORD PTR [esp+0x5c]
10031848:	push   edx
10031849:	call   0x10042f82
1003184e:	add    esp,0x4
10031851:	mov    eax,DWORD PTR [esp+0x14]
10031855:	push   0xffffffff
10031857:	push   eax
10031858:	lea    ecx,[esp+0x44]
1003185c:	push   ecx
1003185d:	lea    eax,[esp+0x64]
10031861:	call   0x1000c98f
10031866:	push   0xffffffff
10031868:	push   0x0
1003186a:	push   eax
1003186b:	lea    ecx,[esp+0x48]
1003186f:	mov    BYTE PTR [esp+0x8c],0x4
10031877:	call   0x1000123c
1003187c:	mov    BYTE PTR [esp+0x80],0x2
10031884:	cmp    DWORD PTR [esp+0x70],esi
10031888:	jb     0x10031897
1003188a:	mov    edx,DWORD PTR [esp+0x5c]
1003188e:	push   edx
1003188f:	call   0x10042f82
10031894:	add    esp,0x4
10031897:	mov    eax,DWORD PTR [esp+0x50]
1003189b:	xor    ebp,ebp
1003189d:	test   eax,eax
1003189f:	ja     0x10031780
100318a5:	mov    ebx,DWORD PTR [esp+0x2c]
100318a9:	mov    BYTE PTR [esp+0x80],0x1
100318b1:	cmp    DWORD PTR [esp+0x54],0x10
100318b6:	jb     0x100318c5
100318b8:	mov    eax,DWORD PTR [esp+0x40]
100318bc:	push   eax
100318bd:	call   0x10042f82
100318c2:	add    esp,0x4
100318c5:	push   0x75c39fdc
100318ca:	push   0x100731ec
100318cf:	call   0x100042bd
100318d4:	push   0x15e03578
100318d9:	push   eax
100318da:	call   0x100042bd
100318df:	push   0x2cf503cc
100318e4:	push   eax
100318e5:	call   0x100042bd
100318ea:	push   eax
100318eb:	push   0x8
100318ed:	push   0x10073220
100318f2:	call   0x100042cf
100318f7:	mov    esi,eax
100318f9:	add    esp,0x24
100318fc:	push   esi
100318fd:	call   0x10043100
10031902:	add    esp,0x4
10031905:	push   eax
10031906:	push   esi
10031907:	mov    eax,ebx
10031909:	call   0x10004d85
1003190e:	xor    edi,edi
10031910:	mov    DWORD PTR [esp+0x18],ebp
10031914:	mov    eax,DWORD PTR [esp+0x20]
10031918:	cmp    eax,ebp
1003191a:	mov    DWORD PTR [esp+0x14],edi
1003191e:	jne    0x10031924
10031920:	xor    eax,eax
10031922:	jmp    0x1003193d
10031924:	mov    ecx,DWORD PTR [esp+0x24]
10031928:	sub    ecx,eax
1003192a:	mov    eax,0x92492493
1003192f:	imul   ecx
10031931:	add    edx,ecx
10031933:	sar    edx,0x4
10031936:	mov    eax,edx
10031938:	shr    eax,0x1f
1003193b:	add    eax,edx
1003193d:	cmp    edi,eax
1003193f:	je     0x10031b8a
10031945:	push   0x1007322c
1003194a:	mov    DWORD PTR [esp+0x58],0xf
10031952:	mov    DWORD PTR [esp+0x54],ebp
10031956:	mov    BYTE PTR [esp+0x44],0x0
1003195b:	call   0x10043100
10031960:	mov    ecx,DWORD PTR [esp+0x44]
10031964:	mov    esi,eax
10031966:	mov    eax,DWORD PTR [esp+0x58]
1003196a:	add    esp,0x4
1003196d:	cmp    eax,0x10
10031970:	mov    edx,ecx
10031972:	jae    0x10031978
10031974:	lea    edx,[esp+0x40]
10031978:	cmp    edx,0x1007322c
1003197e:	ja     0x100319c3
10031980:	cmp    eax,0x10
10031983:	mov    edx,ecx
10031985:	jae    0x1003198b
10031987:	lea    edx,[esp+0x40]
1003198b:	mov    edi,DWORD PTR [esp+0x50]
1003198f:	add    edx,edi
10031991:	cmp    edx,0x1007322c
10031997:	jbe    0x100319bf
10031999:	cmp    eax,0x10
1003199c:	mov    eax,ecx
1003199e:	jae    0x100319a4
100319a0:	lea    eax,[esp+0x40]
100319a4:	push   esi
100319a5:	mov    ecx,0x1007322c
100319aa:	sub    ecx,eax
100319ac:	push   ecx
100319ad:	lea    edx,[esp+0x44]
100319b1:	push   edx
100319b2:	mov    ecx,edx
100319b4:	call   0x1000123c
100319b9:	mov    edi,DWORD PTR [esp+0x14]
100319bd:	jmp    0x10031a28
100319bf:	mov    edi,DWORD PTR [esp+0x14]
100319c3:	cmp    esi,0xfffffffe
100319c6:	jbe    0x100319d5
100319c8:	call   0x10057290
100319cd:	mov    eax,DWORD PTR [esp+0x54]
100319d1:	mov    ecx,DWORD PTR [esp+0x40]
100319d5:	cmp    eax,esi
100319d7:	jae    0x10031b6b
100319dd:	mov    eax,DWORD PTR [esp+0x50]
100319e1:	push   eax
100319e2:	push   esi
100319e3:	lea    ecx,[esp+0x44]
100319e7:	call   0x100014fb
100319ec:	mov    eax,DWORD PTR [esp+0x54]
100319f0:	mov    ecx,DWORD PTR [esp+0x40]
100319f4:	cmp    esi,ebp
100319f6:	jbe    0x10031a28
100319f8:	cmp    eax,0x10
100319fb:	jae    0x10031a01
100319fd:	lea    ecx,[esp+0x40]
10031a01:	push   esi
10031a02:	push   0x1007322c
10031a07:	push   eax
10031a08:	push   ecx
10031a09:	call   0x100434b5
10031a0e:	mov    eax,DWORD PTR [esp+0x50]
10031a12:	add    esp,0x10
10031a15:	cmp    DWORD PTR [esp+0x54],0x10
10031a1a:	mov    DWORD PTR [esp+0x50],esi
10031a1e:	jae    0x10031a24
10031a20:	lea    eax,[esp+0x40]
10031a24:	mov    BYTE PTR [eax+esi*1],0x0
10031a28:	cmp    edi,ebp
10031a2a:	mov    BYTE PTR [esp+0x80],0x5
10031a32:	jbe    0x10031a5a
10031a34:	push   0xa
10031a36:	lea    ecx,[esp+0x5c]
10031a3a:	push   ecx
10031a3b:	push   edi
10031a3c:	call   0x10045be6
10031a41:	mov    esi,eax
10031a43:	add    esp,0xc
10031a46:	push   esi
10031a47:	call   0x10043100
10031a4c:	add    esp,0x4
10031a4f:	push   eax
10031a50:	push   esi
10031a51:	lea    eax,[esp+0x44]
10031a55:	call   0x10004d85
10031a5a:	push   0x1006e140
10031a5f:	call   0x10043100
10031a64:	add    esp,0x4
10031a67:	push   eax
10031a68:	push   0x1006e140
10031a6d:	lea    eax,[esp+0x44]
10031a71:	call   0x10004d85
10031a76:	mov    esi,DWORD PTR [esp+0x20]
10031a7a:	cmp    esi,ebp
10031a7c:	je     0x10031a9b
10031a7e:	mov    ecx,DWORD PTR [esp+0x24]
10031a82:	sub    ecx,esi
10031a84:	mov    eax,0x92492493
10031a89:	imul   ecx
10031a8b:	add    edx,ecx
10031a8d:	sar    edx,0x4
10031a90:	mov    eax,edx
10031a92:	shr    eax,0x1f
10031a95:	add    eax,edx
10031a97:	cmp    edi,eax
10031a99:	jb     0x10031aa4
10031a9b:	call   0x100434a0
10031aa0:	mov    esi,DWORD PTR [esp+0x20]
10031aa4:	mov    edx,DWORD PTR [esp+0x18]
10031aa8:	push   0xffffffff
10031aaa:	lea    eax,[esi+edx*1]
10031aad:	push   ebp
10031aae:	lea    esi,[esp+0x44]
10031ab2:	call   0x10004ce1
10031ab7:	cmp    edi,ebp
10031ab9:	je     0x10031b34
10031abb:	push   0x2c8f6983
10031ac0:	push   0xd45af55
10031ac5:	push   0x54e98b2c
10031aca:	push   0x7b41c03b
10031acf:	push   0x59bc00e5
10031ad4:	push   0x4911de28
10031ad9:	push   0x10073230
10031ade:	call   0x100042bd
10031ae3:	add    esp,0x8
10031ae6:	push   eax
10031ae7:	call   0x100042bd
10031aec:	add    esp,0x8
10031aef:	push   eax
10031af0:	call   0x100042bd
10031af5:	add    esp,0x8
10031af8:	push   eax
10031af9:	call   0x100042bd
10031afe:	add    esp,0x8
10031b01:	push   eax
10031b02:	call   0x100042bd
10031b07:	add    esp,0x8
10031b0a:	push   eax
10031b0b:	call   0x100042bd
10031b10:	push   eax
10031b11:	push   0x1
10031b13:	push   0x1006d8d8
10031b18:	call   0x100042cf
10031b1d:	mov    esi,eax
10031b1f:	add    esp,0x14
10031b22:	push   esi
10031b23:	call   0x10043100
10031b28:	add    esp,0x4
10031b2b:	push   eax
10031b2c:	push   esi
10031b2d:	mov    eax,ebx
10031b2f:	call   0x10004d85
10031b34:	push   0xffffffff
10031b36:	push   ebp
10031b37:	lea    eax,[esp+0x44]
10031b3b:	mov    esi,ebx
10031b3d:	call   0x10004ce1
10031b42:	mov    BYTE PTR [esp+0x80],0x1
10031b4a:	cmp    DWORD PTR [esp+0x54],0x10
10031b4f:	jb     0x10031b5e
10031b51:	mov    eax,DWORD PTR [esp+0x40]
10031b55:	push   eax
10031b56:	call   0x10042f82
10031b5b:	add    esp,0x4
10031b5e:	add    edi,0x1
10031b61:	add    DWORD PTR [esp+0x18],0x1c
10031b66:	jmp    0x10031914
10031b6b:	cmp    esi,ebp
10031b6d:	jne    0x100319f6
10031b73:	cmp    eax,0x10
10031b76:	mov    DWORD PTR [esp+0x50],ebp
10031b7a:	mov    eax,ecx
10031b7c:	jae    0x10031b82
10031b7e:	lea    eax,[esp+0x40]
10031b82:	mov    BYTE PTR [eax],0x0
10031b85:	jmp    0x10031a28
10031b8a:	push   0x1006d3b0
10031b8f:	call   0x10043100
10031b94:	add    esp,0x4
10031b97:	push   eax
10031b98:	push   0x1006d3b0
10031b9d:	mov    eax,ebx
10031b9f:	call   0x10004d85
10031ba4:	mov    esi,DWORD PTR [esp+0x20]
10031ba8:	cmp    esi,ebp
10031baa:	je     0x10031bec
10031bac:	mov    edi,DWORD PTR [esp+0x24]
10031bb0:	cmp    esi,edi
10031bb2:	je     0x10031be3
10031bb4:	add    esi,0x18
10031bb7:	cmp    DWORD PTR [esi],0x10
10031bba:	jb     0x10031bc8
10031bbc:	mov    eax,DWORD PTR [esi-0x14]
10031bbf:	push   eax
10031bc0:	call   0x10042f82
10031bc5:	add    esp,0x4
10031bc8:	mov    DWORD PTR [esi],0xf
10031bce:	mov    DWORD PTR [esi-0x4],ebp
10031bd1:	mov    BYTE PTR [esi-0x14],0x0
10031bd5:	add    esi,0x1c
10031bd8:	lea    ecx,[esi-0x18]
10031bdb:	cmp    ecx,edi
10031bdd:	jne    0x10031bb7
10031bdf:	mov    esi,DWORD PTR [esp+0x20]
10031be3:	push   esi
10031be4:	call   0x10042f82
10031be9:	add    esp,0x4
10031bec:	mov    eax,ebx
10031bee:	mov    ecx,DWORD PTR [esp+0x78]
10031bf2:	mov    DWORD PTR fs:0x0,ecx
10031bf9:	pop    ecx
10031bfa:	pop    edi
10031bfb:	pop    esi
10031bfc:	pop    ebp
10031bfd:	pop    ebx
10031bfe:	mov    ecx,DWORD PTR [esp+0x60]
10031c02:	xor    ecx,esp
10031c04:	call   0x10042f87
10031c09:	add    esp,0x70
10031c0c:	ret    
10031c0d:	int3   
10031c0e:	int3   
10031c0f:	int3   
10031c10:	push   ebp
10031c11:	mov    ebp,esp
10031c13:	and    esp,0xfffffff8
10031c16:	push   0xffffffff
10031c18:	push   0x10063f7c
10031c1d:	mov    eax,fs:0x0
10031c23:	push   eax
10031c24:	sub    esp,0x1f0
10031c2a:	mov    eax,ds:0x1007e030
10031c2f:	xor    eax,esp
10031c31:	mov    DWORD PTR [esp+0x1e8],eax
10031c38:	push   ebx
10031c39:	push   esi
10031c3a:	push   edi
10031c3b:	mov    eax,ds:0x1007e030
10031c40:	xor    eax,esp
10031c42:	push   eax
10031c43:	lea    eax,[esp+0x200]
10031c4a:	mov    fs:0x0,eax
10031c50:	mov    eax,DWORD PTR [ebp+0x8]
10031c53:	mov    esi,DWORD PTR [ebp+0xc]
10031c56:	mov    DWORD PTR [esp+0x1c],ecx
10031c5a:	mov    DWORD PTR [esp+0x14],eax
10031c5e:	mov    eax,DWORD PTR [ebp+0x10]
10031c61:	lea    ecx,[esp+0x60]
10031c65:	xor    ebx,ebx
10031c67:	push   ecx
10031c68:	mov    DWORD PTR [esp+0x1c],edx
10031c6c:	mov    DWORD PTR [esp+0x24],eax
10031c70:	mov    DWORD PTR [esp+0x28],ebx
10031c74:	call   0x10031140
10031c79:	add    esp,0x4
10031c7c:	mov    edi,eax
10031c7e:	push   esi
10031c7f:	lea    ecx,[esp+0x48]
10031c83:	mov    DWORD PTR [esp+0x20c],ebx
10031c8a:	call   0x10031060
10031c8f:	add    esp,0x4
10031c92:	mov    DWORD PTR [esp+0x10],eax
10031c96:	push   0x63b68bb6
10031c9b:	push   0x10073258
10031ca0:	mov    BYTE PTR [esp+0x210],0x1
10031ca8:	call   0x100042bd
10031cad:	push   0x722a72e4
10031cb2:	push   eax
10031cb3:	call   0x100042bd
10031cb8:	push   eax
10031cb9:	push   0x4
10031cbb:	push   0x10073290
10031cc0:	call   0x100042cf
10031cc5:	mov    esi,eax
10031cc7:	add    esp,0x1c
10031cca:	push   esi
10031ccb:	mov    DWORD PTR [esp+0x44],0xf
10031cd3:	mov    DWORD PTR [esp+0x40],ebx
10031cd7:	mov    BYTE PTR [esp+0x30],bl
10031cdb:	call   0x10043100
10031ce0:	add    esp,0x4
10031ce3:	push   eax
10031ce4:	push   esi
10031ce5:	lea    ecx,[esp+0x30]
10031ce9:	call   0x10001336
10031cee:	mov    BYTE PTR [esp+0x208],0x2
10031cf6:	mov    edx,DWORD PTR [esp+0x10]
10031cfa:	push   edx
10031cfb:	lea    eax,[esp+0x2c]
10031cff:	push   eax
10031d00:	lea    ecx,[esp+0xbc]
10031d07:	push   ecx
10031d08:	call   0x10006581
10031d0d:	add    esp,0xc
10031d10:	push   0x10073254
10031d15:	push   eax
10031d16:	lea    edx,[esp+0xa0]
10031d1d:	push   edx
10031d1e:	mov    BYTE PTR [esp+0x214],0x3
10031d26:	call   0x1000653b
10031d2b:	add    esp,0xc
10031d2e:	push   edi
10031d2f:	push   eax
10031d30:	lea    eax,[esp+0x1e4]
10031d37:	push   eax
10031d38:	mov    BYTE PTR [esp+0x214],0x4
10031d40:	call   0x10006581
10031d45:	add    esp,0xc
10031d48:	mov    edi,0x10
10031d4d:	cmp    DWORD PTR [esp+0xb0],edi
10031d54:	jb     0x10031d66
10031d56:	mov    ecx,DWORD PTR [esp+0x9c]
10031d5d:	push   ecx
10031d5e:	call   0x10042f82
10031d63:	add    esp,0x4
10031d66:	mov    esi,0xf
10031d6b:	mov    DWORD PTR [esp+0xb0],esi
10031d72:	mov    DWORD PTR [esp+0xac],ebx
10031d79:	mov    BYTE PTR [esp+0x9c],bl
10031d80:	cmp    DWORD PTR [esp+0xcc],edi
10031d87:	jb     0x10031d99
10031d89:	mov    edx,DWORD PTR [esp+0xb8]
10031d90:	push   edx
10031d91:	call   0x10042f82
10031d96:	add    esp,0x4
10031d99:	mov    DWORD PTR [esp+0xcc],esi
10031da0:	mov    DWORD PTR [esp+0xc8],ebx
10031da7:	mov    BYTE PTR [esp+0xb8],bl
10031dae:	cmp    DWORD PTR [esp+0x40],edi
10031db2:	jb     0x10031dc1
10031db4:	mov    eax,DWORD PTR [esp+0x2c]
10031db8:	push   eax
10031db9:	call   0x10042f82
10031dbe:	add    esp,0x4
10031dc1:	mov    DWORD PTR [esp+0x40],esi
10031dc5:	mov    DWORD PTR [esp+0x3c],ebx
10031dc9:	mov    BYTE PTR [esp+0x2c],bl
10031dcd:	cmp    DWORD PTR [esp+0x5c],edi
10031dd1:	jb     0x10031de0
10031dd3:	mov    ecx,DWORD PTR [esp+0x48]
10031dd7:	push   ecx
10031dd8:	call   0x10042f82
10031ddd:	add    esp,0x4
10031de0:	mov    DWORD PTR [esp+0x5c],esi
10031de4:	mov    DWORD PTR [esp+0x58],ebx
10031de8:	mov    BYTE PTR [esp+0x48],bl
10031dec:	mov    BYTE PTR [esp+0x208],0xa
10031df4:	cmp    DWORD PTR [esp+0x78],edi
10031df8:	jb     0x10031e07
10031dfa:	mov    edx,DWORD PTR [esp+0x64]
10031dfe:	push   edx
10031dff:	call   0x10042f82
10031e04:	add    esp,0x4
10031e07:	mov    eax,ds:0x10080dc0
10031e0c:	push   ebx
10031e0d:	push   eax
10031e0e:	lea    ecx,[esp+0x1c8]
10031e15:	push   ecx
10031e16:	lea    ecx,[esp+0x1e8]
10031e1d:	mov    DWORD PTR [esp+0x84],esi
10031e24:	mov    DWORD PTR [esp+0x80],ebx
10031e2b:	mov    BYTE PTR [esp+0x70],bl
10031e2f:	call   0x10039e10
10031e34:	add    esp,0xc
10031e37:	mov    BYTE PTR [esp+0x208],0xb
10031e3f:	push   0x10071e08
10031e44:	mov    DWORD PTR [esp+0x124],esi
10031e4b:	mov    DWORD PTR [esp+0x120],ebx
10031e52:	mov    BYTE PTR [esp+0x110],bl
10031e59:	call   0x10043100
10031e5e:	add    esp,0x4
10031e61:	push   eax
10031e62:	push   0x10071e08
10031e67:	lea    ecx,[esp+0x110]
10031e6e:	call   0x10001336
10031e73:	push   0x1006cd08
10031e78:	mov    BYTE PTR [esp+0x20c],0xc
10031e80:	call   0x10043100
10031e85:	mov    edi,DWORD PTR [esp+0x1c]
10031e89:	mov    esi,DWORD PTR [edi+0x14]
10031e8c:	add    esp,0x4
10031e8f:	cmp    esi,eax
10031e91:	mov    DWORD PTR [esp+0x10],eax
10031e95:	mov    ecx,esi
10031e97:	jae    0x10031e9b
10031e99:	mov    eax,esi
10031e9b:	cmp    DWORD PTR [edi+0x18],0x10
10031e9f:	jb     0x10031ea6
10031ea1:	mov    ecx,DWORD PTR [edi+0x4]
10031ea4:	jmp    0x10031ea9
10031ea6:	lea    ecx,[edi+0x4]
10031ea9:	push   eax
10031eaa:	push   0x1006cd08
10031eaf:	push   ecx
10031eb0:	call   0x10043816
10031eb5:	add    esp,0xc
10031eb8:	cmp    eax,ebx
10031eba:	jne    0x10031ed1
10031ebc:	mov    eax,DWORD PTR [esp+0x10]
10031ec0:	cmp    esi,eax
10031ec2:	jb     0x10031ed1
10031ec4:	xor    edx,edx
10031ec6:	cmp    esi,eax
10031ec8:	setne  dl
10031ecb:	mov    eax,edx
10031ecd:	cmp    eax,ebx
10031ecf:	je     0x10031f23
10031ed1:	movzx  eax,BYTE PTR ds:0x10080d48
10031ed8:	mov    ecx,DWORD PTR ds:0x10080dbc
10031ede:	push   eax
10031edf:	push   ecx
10031ee0:	lea    edx,[esp+0x84]
10031ee7:	push   edx
10031ee8:	mov    ecx,edi
10031eea:	call   0x10039e10
10031eef:	add    esp,0xc
10031ef2:	push   0xffffffff
10031ef4:	push   ebx
10031ef5:	lea    esi,[esp+0x110]
10031efc:	mov    BYTE PTR [esp+0x210],0xd
10031f04:	call   0x10004ce1
10031f09:	cmp    DWORD PTR [esp+0x94],0x10
10031f11:	jb     0x10031f23
10031f13:	mov    eax,DWORD PTR [esp+0x80]
10031f1a:	push   eax
10031f1b:	call   0x10042f82
10031f20:	add    esp,0x4
10031f23:	mov    DWORD PTR [esp+0x10],ebx
10031f27:	mov    ecx,DWORD PTR [esp+0x1c]
10031f2b:	push   0x10073298
10031f30:	push   ecx
10031f31:	lea    edx,[esp+0x84]
10031f38:	push   edx
10031f39:	mov    BYTE PTR [esp+0x214],0xe
10031f41:	call   0x1000653b
10031f46:	add    esp,0xc
10031f49:	lea    ecx,[esp+0x1dc]
10031f50:	push   ecx
10031f51:	push   eax
10031f52:	lea    edx,[esp+0x4c]
10031f56:	push   edx
10031f57:	mov    BYTE PTR [esp+0x214],0xf
10031f5f:	call   0x10006581
10031f64:	add    esp,0xc
10031f67:	push   edi
10031f68:	push   eax
10031f69:	lea    eax,[esp+0x68]
10031f6d:	push   eax
10031f6e:	mov    BYTE PTR [esp+0x214],0x10
10031f76:	call   0x10006581
10031f7b:	mov    esi,0x10
10031f80:	add    esp,0xc
10031f83:	cmp    DWORD PTR [eax+0x18],esi
10031f86:	jb     0x10031f8d
10031f88:	mov    eax,DWORD PTR [eax+0x4]
10031f8b:	jmp    0x10031f90
10031f8d:	add    eax,0x4
10031f90:	push   eax
10031f91:	call   0x1000206e
10031f96:	add    esp,0x4
10031f99:	cmp    DWORD PTR [esp+0x78],esi
10031f9d:	jb     0x10031fac
10031f9f:	mov    ecx,DWORD PTR [esp+0x64]
10031fa3:	push   ecx
10031fa4:	call   0x10042f82
10031fa9:	add    esp,0x4
10031fac:	cmp    DWORD PTR [esp+0x5c],esi
10031fb0:	mov    edi,0xf
10031fb5:	mov    DWORD PTR [esp+0x78],edi
10031fb9:	mov    DWORD PTR [esp+0x74],ebx
10031fbd:	mov    BYTE PTR [esp+0x64],bl
10031fc1:	jb     0x10031fd0
10031fc3:	mov    edx,DWORD PTR [esp+0x48]
10031fc7:	push   edx
10031fc8:	call   0x10042f82
10031fcd:	add    esp,0x4
10031fd0:	cmp    DWORD PTR [esp+0x94],esi
10031fd7:	mov    DWORD PTR [esp+0x5c],edi
10031fdb:	mov    DWORD PTR [esp+0x58],ebx
10031fdf:	mov    BYTE PTR [esp+0x48],bl
10031fe3:	jb     0x10031ff5
10031fe5:	mov    eax,DWORD PTR [esp+0x80]
10031fec:	push   eax
10031fed:	call   0x10042f82
10031ff2:	add    esp,0x4
10031ff5:	mov    DWORD PTR [esp+0x140],edi
10031ffc:	mov    DWORD PTR [esp+0x13c],ebx
10032003:	mov    BYTE PTR [esp+0x12c],bl
1003200a:	mov    DWORD PTR [esp+0x160],edi
10032011:	mov    DWORD PTR [esp+0x15c],ebx
10032018:	mov    BYTE PTR [esp+0x14c],bl
1003201f:	mov    DWORD PTR [esp+0x17c],edi
10032026:	mov    DWORD PTR [esp+0x178],ebx
1003202d:	mov    BYTE PTR [esp+0x168],bl
10032034:	mov    DWORD PTR [esp+0x198],edi
1003203b:	mov    DWORD PTR [esp+0x194],ebx
10032042:	mov    BYTE PTR [esp+0x184],bl
10032049:	mov    DWORD PTR [esp+0x1b4],edi
10032050:	mov    DWORD PTR [esp+0x1b0],ebx
10032057:	mov    BYTE PTR [esp+0x1a0],bl
1003205e:	lea    ecx,[esp+0x124]
10032065:	push   ecx
10032066:	mov    ecx,DWORD PTR [esp+0x20]
1003206a:	mov    BYTE PTR [esp+0x20c],0x11
10032072:	call   0x10032ca0
10032077:	add    esp,0x4
1003207a:	test   al,al
1003207c:	jne    0x100321ed
10032082:	cmp    DWORD PTR [esp+0x1b4],esi
10032089:	mov    edx,DWORD PTR [esp+0x14]
1003208d:	mov    DWORD PTR [edx],ebx
1003208f:	jb     0x100320a1
10032091:	mov    eax,DWORD PTR [esp+0x1a0]
10032098:	push   eax
10032099:	call   0x10042f82
1003209e:	add    esp,0x4
100320a1:	cmp    DWORD PTR [esp+0x198],esi
100320a8:	mov    DWORD PTR [esp+0x1b4],edi
100320af:	mov    DWORD PTR [esp+0x1b0],ebx
100320b6:	mov    BYTE PTR [esp+0x1a0],bl
100320bd:	jb     0x100320cf
100320bf:	mov    ecx,DWORD PTR [esp+0x184]
100320c6:	push   ecx
100320c7:	call   0x10042f82
100320cc:	add    esp,0x4
100320cf:	cmp    DWORD PTR [esp+0x17c],esi
100320d6:	mov    DWORD PTR [esp+0x198],edi
100320dd:	mov    DWORD PTR [esp+0x194],ebx
100320e4:	mov    BYTE PTR [esp+0x184],bl
100320eb:	jb     0x100320fd
100320ed:	mov    edx,DWORD PTR [esp+0x168]
100320f4:	push   edx
100320f5:	call   0x10042f82
100320fa:	add    esp,0x4
100320fd:	cmp    DWORD PTR [esp+0x160],esi
10032104:	mov    DWORD PTR [esp+0x17c],edi
1003210b:	mov    DWORD PTR [esp+0x178],ebx
10032112:	mov    BYTE PTR [esp+0x168],bl
10032119:	jb     0x1003212b
1003211b:	mov    eax,DWORD PTR [esp+0x14c]
10032122:	push   eax
10032123:	call   0x10042f82
10032128:	add    esp,0x4
1003212b:	cmp    DWORD PTR [esp+0x140],esi
10032132:	mov    DWORD PTR [esp+0x160],edi
10032139:	mov    DWORD PTR [esp+0x15c],ebx
10032140:	mov    BYTE PTR [esp+0x14c],bl
10032147:	jb     0x10032159
10032149:	mov    ecx,DWORD PTR [esp+0x12c]
10032150:	push   ecx
10032151:	call   0x10042f82
10032156:	add    esp,0x4
10032159:	push   ebx
1003215a:	mov    DWORD PTR [esp+0x144],edi
10032161:	mov    DWORD PTR [esp+0x140],ebx
10032168:	mov    BYTE PTR [esp+0x130],bl
1003216f:	call   0x10042f82
10032174:	add    esp,0x4
10032177:	cmp    DWORD PTR [esp+0x120],esi
1003217e:	jb     0x10032190
10032180:	mov    edx,DWORD PTR [esp+0x10c]
10032187:	push   edx
10032188:	call   0x10042f82
1003218d:	add    esp,0x4
10032190:	cmp    DWORD PTR [esp+0x1d8],esi
10032197:	mov    DWORD PTR [esp+0x120],edi
1003219e:	mov    DWORD PTR [esp+0x11c],ebx
100321a5:	mov    BYTE PTR [esp+0x10c],bl
100321ac:	jb     0x100321be
100321ae:	mov    eax,DWORD PTR [esp+0x1c4]
100321b5:	push   eax
100321b6:	call   0x10042f82
100321bb:	add    esp,0x4
100321be:	cmp    DWORD PTR [esp+0x1f4],esi
100321c5:	mov    DWORD PTR [esp+0x1d8],edi
100321cc:	mov    DWORD PTR [esp+0x1d4],ebx
100321d3:	mov    BYTE PTR [esp+0x1c4],bl
100321da:	jb     0x10032724
100321e0:	mov    ecx,DWORD PTR [esp+0x1e0]
100321e7:	push   ecx
100321e8:	jmp    0x1003271c
100321ed:	push   0x100729ec
100321f2:	mov    DWORD PTR [esp+0xb4],edi
100321f9:	mov    DWORD PTR [esp+0xb0],ebx
10032200:	mov    BYTE PTR [esp+0xa0],bl
10032207:	call   0x10043100
1003220c:	add    esp,0x4
1003220f:	push   eax
10032210:	push   0x100729ec
10032215:	lea    ecx,[esp+0xa0]
1003221c:	call   0x10001336
10032221:	lea    edx,[esp+0x1dc]
10032228:	push   edx
10032229:	lea    edi,[esp+0x80]
10032230:	mov    BYTE PTR [esp+0x20c],0x12
10032238:	call   0x10034970
1003223d:	add    esp,0x4
10032240:	mov    ecx,DWORD PTR [esp+0x18]
10032244:	push   ecx
10032245:	push   eax
10032246:	lea    edx,[esp+0xd8]
1003224d:	push   edx
1003224e:	mov    BYTE PTR [esp+0x214],0x13
10032256:	call   0x10006581
1003225b:	add    esp,0xc
1003225e:	lea    eax,[esp+0x108]
10032265:	push   eax
10032266:	lea    ecx,[esp+0x1c4]
1003226d:	push   ecx
1003226e:	lea    edx,[esp+0xbc]
10032275:	push   edx
10032276:	mov    BYTE PTR [esp+0x214],0x14
1003227e:	call   0x10006581
10032283:	add    esp,0xc
10032286:	mov    edx,eax
10032288:	lea    ecx,[esp+0x44]
1003228c:	mov    BYTE PTR [esp+0x208],0x15
10032294:	call   0x100316c0
10032299:	mov    edi,eax
1003229b:	push   0x843818e
100322a0:	push   0x1007329c
100322a5:	mov    BYTE PTR [esp+0x210],0x16
100322ad:	call   0x100042bd
100322b2:	push   0x10929814
100322b7:	push   eax
100322b8:	call   0x100042bd
100322bd:	push   0x58133f74
100322c2:	push   eax
100322c3:	call   0x100042bd
100322c8:	push   eax
100322c9:	push   0x1b
100322cb:	push   0x100732c0
100322d0:	call   0x100042cf
100322d5:	mov    esi,eax
100322d7:	add    esp,0x24
100322da:	push   esi
100322db:	mov    DWORD PTR [esp+0x44],0xf
100322e3:	mov    DWORD PTR [esp+0x40],ebx
100322e7:	mov    BYTE PTR [esp+0x30],bl
100322eb:	call   0x10043100
100322f0:	add    esp,0x4
100322f3:	push   eax
100322f4:	push   esi
100322f5:	lea    ecx,[esp+0x30]
100322f9:	call   0x10001336
100322fe:	push   edi
100322ff:	lea    eax,[esp+0x2c]
10032303:	push   eax
10032304:	lea    ecx,[esp+0x68]
10032308:	push   ecx
10032309:	mov    BYTE PTR [esp+0x214],0x17
10032311:	call   0x10006581
10032316:	add    esp,0xc
10032319:	mov    edx,DWORD PTR [ebp+0x14]
1003231c:	mov    BYTE PTR [esp+0x208],0x18
10032324:	mov    ecx,DWORD PTR [esp+0x20]
10032328:	push   edx
10032329:	push   ecx
1003232a:	push   ebx
1003232b:	push   ebx
1003232c:	push   eax
1003232d:	mov    eax,DWORD PTR [esp+0x158]
10032334:	lea    edx,[esp+0xac]
1003233b:	push   edx
1003233c:	push   eax
1003233d:	lea    ecx,[esp+0x144]
10032344:	push   ecx
10032345:	lea    edx,[esp+0x44]
10032349:	push   edx
1003234a:	call   0x1000c80e
1003234f:	mov    ecx,DWORD PTR [eax]
10032351:	mov    edi,ecx
10032353:	add    esp,0x24
10032356:	cmp    edi,ebx
10032358:	mov    DWORD PTR [eax],ebx
1003235a:	je     0x10032365
1003235c:	push   ebx
1003235d:	call   0x10042f82
10032362:	add    esp,0x4
10032365:	mov    edx,DWORD PTR [esp+0x24]
10032369:	push   edx
1003236a:	mov    DWORD PTR [esp+0x14],edi
1003236e:	call   0x10042f82
10032373:	mov    esi,0x10
10032378:	add    esp,0x4
1003237b:	cmp    DWORD PTR [esp+0x78],esi
1003237f:	jb     0x1003238e
10032381:	mov    eax,DWORD PTR [esp+0x64]
10032385:	push   eax
10032386:	call   0x10042f82
1003238b:	add    esp,0x4
1003238e:	cmp    DWORD PTR [esp+0x40],esi
10032392:	mov    DWORD PTR [esp+0x78],0xf
1003239a:	mov    DWORD PTR [esp+0x74],ebx
1003239e:	mov    BYTE PTR [esp+0x64],bl
100323a2:	jb     0x100323b1
100323a4:	mov    ecx,DWORD PTR [esp+0x2c]
100323a8:	push   ecx
100323a9:	call   0x10042f82
100323ae:	add    esp,0x4
100323b1:	cmp    DWORD PTR [esp+0x5c],esi
100323b5:	mov    DWORD PTR [esp+0x40],0xf
100323bd:	mov    DWORD PTR [esp+0x3c],ebx
100323c1:	mov    BYTE PTR [esp+0x2c],bl
100323c5:	jb     0x100323d4
100323c7:	mov    edx,DWORD PTR [esp+0x48]
100323cb:	push   edx
100323cc:	call   0x10042f82
100323d1:	add    esp,0x4
100323d4:	cmp    DWORD PTR [esp+0xcc],esi
100323db:	mov    DWORD PTR [esp+0x5c],0xf
100323e3:	mov    DWORD PTR [esp+0x58],ebx
100323e7:	mov    BYTE PTR [esp+0x48],bl
100323eb:	jb     0x100323fd
100323ed:	mov    eax,DWORD PTR [esp+0xb8]
100323f4:	push   eax
100323f5:	call   0x10042f82
100323fa:	add    esp,0x4
100323fd:	cmp    DWORD PTR [esp+0xe8],esi
10032404:	mov    DWORD PTR [esp+0xcc],0xf
1003240f:	mov    DWORD PTR [esp+0xc8],ebx
10032416:	mov    BYTE PTR [esp+0xb8],bl
1003241d:	jb     0x1003242f
1003241f:	mov    ecx,DWORD PTR [esp+0xd4]
10032426:	push   ecx
10032427:	call   0x10042f82
1003242c:	add    esp,0x4
1003242f:	cmp    DWORD PTR [esp+0x94],esi
10032436:	mov    DWORD PTR [esp+0xe8],0xf
10032441:	mov    DWORD PTR [esp+0xe4],ebx
10032448:	mov    BYTE PTR [esp+0xd4],bl
1003244f:	jb     0x10032461
10032451:	mov    edx,DWORD PTR [esp+0x80]
10032458:	push   edx
10032459:	call   0x10042f82
1003245e:	add    esp,0x4
10032461:	mov    BYTE PTR [esp+0x208],0x11
10032469:	cmp    DWORD PTR [esp+0xb0],esi
10032470:	mov    DWORD PTR [esp+0x94],0xf
1003247b:	mov    DWORD PTR [esp+0x90],ebx
10032482:	mov    BYTE PTR [esp+0x80],bl
10032489:	jb     0x1003249b
1003248b:	mov    eax,DWORD PTR [esp+0x9c]
10032492:	push   eax
10032493:	call   0x10042f82
10032498:	add    esp,0x4
1003249b:	cmp    edi,ebx
1003249d:	jne    0x100325a1
100324a3:	mov    ecx,DWORD PTR [esp+0x1c]
100324a7:	push   0x10073298
100324ac:	push   ecx
100324ad:	lea    edx,[esp+0xf4]
100324b4:	push   edx
100324b5:	call   0x1000653b
100324ba:	add    esp,0xc
100324bd:	lea    ecx,[esp+0x1dc]
100324c4:	push   ecx
100324c5:	push   eax
100324c6:	lea    edx,[esp+0xd8]
100324cd:	push   edx
100324ce:	mov    BYTE PTR [esp+0x214],0x19
100324d6:	call   0x10006581
100324db:	add    esp,0xc
100324de:	mov    ecx,DWORD PTR [esp+0x18]
100324e2:	push   ecx
100324e3:	push   eax
100324e4:	lea    edx,[esp+0x84]
100324eb:	push   edx
100324ec:	mov    BYTE PTR [esp+0x214],0x1a
100324f4:	call   0x10006581
100324f9:	add    esp,0xc
100324fc:	cmp    DWORD PTR [eax+0x18],esi
100324ff:	jb     0x10032506
10032501:	mov    eax,DWORD PTR [eax+0x4]
10032504:	jmp    0x10032509
10032506:	add    eax,0x4
10032509:	push   eax
1003250a:	call   0x1000206e
1003250f:	add    esp,0x4
10032512:	cmp    DWORD PTR [esp+0x94],esi
10032519:	jb     0x1003252b
1003251b:	mov    eax,DWORD PTR [esp+0x80]
10032522:	push   eax
10032523:	call   0x10042f82
10032528:	add    esp,0x4
1003252b:	cmp    DWORD PTR [esp+0xe8],esi
10032532:	mov    DWORD PTR [esp+0x94],0xf
1003253d:	mov    DWORD PTR [esp+0x90],ebx
10032544:	mov    BYTE PTR [esp+0x80],bl
1003254b:	jb     0x1003255d
1003254d:	mov    ecx,DWORD PTR [esp+0xd4]
10032554:	push   ecx
10032555:	call   0x10042f82
1003255a:	add    esp,0x4
1003255d:	mov    BYTE PTR [esp+0x208],0x11
10032565:	cmp    DWORD PTR [esp+0x104],esi
1003256c:	mov    DWORD PTR [esp+0xe8],0xf
10032577:	mov    DWORD PTR [esp+0xe4],ebx
1003257e:	mov    BYTE PTR [esp+0xd4],bl
10032585:	jb     0x10032597
10032587:	mov    edx,DWORD PTR [esp+0xf0]
1003258e:	push   edx
1003258f:	call   0x10042f82
10032594:	add    esp,0x4
10032597:	push   0x5
10032599:	call   0x100379e0
1003259e:	add    esp,0x4
100325a1:	cmp    DWORD PTR [esp+0x1b4],esi
100325a8:	mov    eax,DWORD PTR [esp+0x14]
100325ac:	mov    DWORD PTR [eax],edi
100325ae:	jb     0x100325c0
100325b0:	mov    ecx,DWORD PTR [esp+0x1a0]
100325b7:	push   ecx
100325b8:	call   0x10042f82
100325bd:	add    esp,0x4
100325c0:	cmp    DWORD PTR [esp+0x198],esi
100325c7:	mov    DWORD PTR [esp+0x1b4],0xf
100325d2:	mov    DWORD PTR [esp+0x1b0],ebx
100325d9:	mov    BYTE PTR [esp+0x1a0],bl
100325e0:	jb     0x100325f2
100325e2:	mov    edx,DWORD PTR [esp+0x184]
100325e9:	push   edx
100325ea:	call   0x10042f82
100325ef:	add    esp,0x4
100325f2:	cmp    DWORD PTR [esp+0x17c],esi
100325f9:	mov    DWORD PTR [esp+0x198],0xf
10032604:	mov    DWORD PTR [esp+0x194],ebx
1003260b:	mov    BYTE PTR [esp+0x184],bl
10032612:	jb     0x10032624
10032614:	mov    eax,DWORD PTR [esp+0x168]
1003261b:	push   eax
1003261c:	call   0x10042f82
10032621:	add    esp,0x4
10032624:	cmp    DWORD PTR [esp+0x160],esi
1003262b:	mov    DWORD PTR [esp+0x17c],0xf
10032636:	mov    DWORD PTR [esp+0x178],ebx
1003263d:	mov    BYTE PTR [esp+0x168],bl
10032644:	jb     0x10032656
10032646:	mov    ecx,DWORD PTR [esp+0x14c]
1003264d:	push   ecx
1003264e:	call   0x10042f82
10032653:	add    esp,0x4
10032656:	cmp    DWORD PTR [esp+0x140],esi
1003265d:	mov    DWORD PTR [esp+0x160],0xf
10032668:	mov    DWORD PTR [esp+0x15c],ebx
1003266f:	mov    BYTE PTR [esp+0x14c],bl
10032676:	jb     0x10032688
10032678:	mov    edx,DWORD PTR [esp+0x12c]
1003267f:	push   edx
10032680:	call   0x10042f82
10032685:	add    esp,0x4
10032688:	push   ebx
10032689:	mov    DWORD PTR [esp+0x144],0xf
10032694:	mov    DWORD PTR [esp+0x140],ebx
1003269b:	mov    BYTE PTR [esp+0x130],bl
100326a2:	call   0x10042f82
100326a7:	add    esp,0x4
100326aa:	cmp    DWORD PTR [esp+0x120],esi
100326b1:	jb     0x100326c3
100326b3:	mov    eax,DWORD PTR [esp+0x10c]
100326ba:	push   eax
100326bb:	call   0x10042f82
100326c0:	add    esp,0x4
100326c3:	cmp    DWORD PTR [esp+0x1d8],esi
100326ca:	mov    edi,0xf
100326cf:	mov    DWORD PTR [esp+0x120],edi
100326d6:	mov    DWORD PTR [esp+0x11c],ebx
100326dd:	mov    BYTE PTR [esp+0x10c],bl
100326e4:	jb     0x100326f6
100326e6:	mov    ecx,DWORD PTR [esp+0x1c4]
100326ed:	push   ecx
100326ee:	call   0x10042f82
100326f3:	add    esp,0x4
100326f6:	cmp    DWORD PTR [esp+0x1f4],esi
100326fd:	mov    DWORD PTR [esp+0x1d8],edi
10032704:	mov    DWORD PTR [esp+0x1d4],ebx
1003270b:	mov    BYTE PTR [esp+0x1c4],bl
10032712:	jb     0x10032724
10032714:	mov    edx,DWORD PTR [esp+0x1e0]
1003271b:	push   edx
1003271c:	call   0x10042f82
10032721:	add    esp,0x4
10032724:	mov    eax,DWORD PTR [esp+0x14]
10032728:	mov    ecx,DWORD PTR [esp+0x200]
1003272f:	mov    DWORD PTR fs:0x0,ecx
10032736:	pop    ecx
10032737:	pop    edi
10032738:	pop    esi
10032739:	pop    ebx
1003273a:	mov    ecx,DWORD PTR [esp+0x1e8]
10032741:	xor    ecx,esp
10032743:	call   0x10042f87
10032748:	mov    esp,ebp
1003274a:	pop    ebp
1003274b:	ret    
1003274c:	int3   
1003274d:	int3   
1003274e:	int3   
1003274f:	int3   
10032750:	push   ebp
10032751:	mov    ebp,esp
10032753:	push   0xffffffff
10032755:	push   0x100608f8
1003275a:	mov    eax,fs:0x0
10032760:	push   eax
10032761:	sub    esp,0x58
10032764:	mov    eax,ds:0x1007e030
10032769:	xor    eax,ebp
1003276b:	mov    DWORD PTR [ebp-0x10],eax
1003276e:	push   ebx
1003276f:	push   esi
10032770:	push   edi
10032771:	push   eax
10032772:	lea    eax,[ebp-0xc]
10032775:	mov    fs:0x0,eax
1003277b:	mov    eax,DWORD PTR [ebp+0x8]
1003277e:	mov    edi,DWORD PTR [ebp+0x14]
10032781:	mov    ecx,DWORD PTR [ebp+0x18]
10032784:	mov    edx,DWORD PTR [ebp+0x1c]
10032787:	mov    esi,DWORD PTR [ebp+0xc]
1003278a:	xor    ebx,ebx
1003278c:	mov    DWORD PTR [ebp-0x30],eax
1003278f:	mov    eax,DWORD PTR [ebp+0x24]
10032792:	mov    DWORD PTR [ebp-0x4c],ebx
10032795:	mov    DWORD PTR [ebp-0x38],edi
10032798:	mov    DWORD PTR [ebp-0x40],ecx
1003279b:	mov    DWORD PTR [ebp-0x44],edx
1003279e:	mov    DWORD PTR [ebp-0x50],eax
100327a1:	mov    DWORD PTR [ebp-0x64],ebx
100327a4:	mov    DWORD PTR [ebp-0x4],ebx
100327a7:	call   DWORD PTR ds:0x1007efec
100327ad:	push   0x340960be
100327b2:	push   0x100732dc
100327b7:	mov    DWORD PTR [ebp-0x34],eax
100327ba:	call   0x100042bd
100327bf:	push   0xb4ccd3e
100327c4:	push   eax
100327c5:	call   0x100042bd
100327ca:	add    esp,0x10
100327cd:	push   ebx
100327ce:	push   ebx
100327cf:	push   ebx
100327d0:	push   ebx
100327d1:	push   eax
100327d2:	push   0x1a
100327d4:	push   0x10073318
100327d9:	call   0x1000448e
100327de:	add    esp,0xc
100327e1:	push   eax
100327e2:	call   DWORD PTR ds:0x10066374
100327e8:	mov    ebx,eax
100327ea:	mov    DWORD PTR [ebp-0x4c],ebx
100327ed:	test   ebx,ebx
100327ef:	mov    BYTE PTR [ebp-0x4],0x1
100327f3:	jne    0x1003280c
100327f5:	mov    esi,DWORD PTR [ebp-0x30]
100327f8:	push   0x0
100327fa:	mov    DWORD PTR [esi],0x0
10032800:	call   0x10042f82
10032805:	mov    eax,esi
10032807:	jmp    0x10032c75
1003280c:	cmp    DWORD PTR [ebp+0x28],0xffffffff
10032810:	je     0x1003285e
10032812:	push   0x8
10032814:	call   0x1004358e
10032819:	add    esp,0x4
1003281c:	test   eax,eax
1003281e:	je     0x1003282a
10032820:	mov    ecx,DWORD PTR [ebp+0x28]
10032823:	mov    DWORD PTR [eax],ebx
10032825:	mov    DWORD PTR [eax+0x4],ecx
10032828:	jmp    0x1003282c
1003282a:	xor    eax,eax
1003282c:	push   0x0
1003282e:	push   0x0
10032830:	push   eax
10032831:	push   0x10030e30
10032836:	push   0x0
10032838:	push   0x0
1003283a:	call   DWORD PTR ds:0x10066098
10032840:	test   eax,eax
10032842:	jne    0x1003285e
10032844:	mov    esi,DWORD PTR [ebp-0x30]
10032847:	push   ebx
10032848:	mov    DWORD PTR [esi],eax
1003284a:	call   DWORD PTR ds:0x10066380
10032850:	push   0x0
10032852:	call   0x10042f82
10032857:	mov    eax,esi
10032859:	jmp    0x10032c75
1003285e:	call   0x1000206e
10032863:	cmp    DWORD PTR [esi+0x18],0x10
10032867:	jb     0x1003286e
10032869:	mov    esi,DWORD PTR [esi+0x4]
1003286c:	jmp    0x10032871
1003286e:	add    esi,0x4
10032871:	test   esi,esi
10032873:	jne    0x10032879
10032875:	xor    eax,eax
10032877:	jmp    0x100328ab
10032879:	push   esi
1003287a:	call   DWORD PTR ds:0x100660dc
10032880:	mov    edi,eax
10032882:	add    edi,0x1
10032885:	cmp    edi,0x3fffffff
1003288b:	jle    0x10032891
1003288d:	xor    eax,eax
1003288f:	jmp    0x100328a8
10032891:	lea    eax,[edi+edi*1]
10032894:	call   0x1004b7e0
10032899:	mov    edx,DWORD PTR [ebp-0x34]
1003289c:	mov    eax,esp
1003289e:	push   edx
1003289f:	push   edi
100328a0:	push   esi
100328a1:	mov    esi,eax
100328a3:	call   0x10006dbe
100328a8:	mov    edi,DWORD PTR [ebp-0x38]
100328ab:	mov    ecx,DWORD PTR [ebp+0x10]
100328ae:	push   0x0
100328b0:	push   0x20000000
100328b5:	push   0x3
100328b7:	push   0x0
100328b9:	push   0x0
100328bb:	push   ecx
100328bc:	push   eax
100328bd:	push   ebx
100328be:	call   DWORD PTR ds:0x10066398
100328c4:	mov    ebx,eax
100328c6:	mov    DWORD PTR [ebp-0x3c],ebx
100328c9:	test   ebx,ebx
100328cb:	mov    BYTE PTR [ebp-0x4],0x2
100328cf:	je     0x100327f5
100328d5:	push   0x69d7c602
100328da:	push   0x10073350
100328df:	call   0x100042bd
100328e4:	push   eax
100328e5:	push   0x9
100328e7:	push   0x10073388
100328ec:	call   0x1000448e
100328f1:	push   0x7934d4c
100328f6:	push   0x1007339c
100328fb:	mov    DWORD PTR [ebp-0x60],eax
100328fe:	call   0x100042bd
10032903:	push   0x3e4318d6
10032908:	push   eax
10032909:	call   0x100042bd
1003290e:	push   eax
1003290f:	push   0xb
10032911:	push   0x100733cc
10032916:	call   0x1000448e
1003291b:	push   0x2a91f890
10032920:	push   0x100733e4
10032925:	mov    DWORD PTR [ebp-0x5c],eax
10032928:	call   0x100042bd
1003292d:	push   0x786509a8
10032932:	push   eax
10032933:	call   0x100042bd
10032938:	add    esp,0x40
1003293b:	push   eax
1003293c:	push   0xd
1003293e:	push   0x10073418
10032943:	call   0x1000448e
10032948:	add    esp,0xc
1003294b:	mov    DWORD PTR [ebp-0x58],eax
1003294e:	mov    DWORD PTR [ebp-0x54],0x0
10032955:	call   0x1000206e
1003295a:	cmp    DWORD PTR [edi+0x18],0x10
1003295e:	jb     0x10032965
10032960:	mov    esi,DWORD PTR [edi+0x4]
10032963:	jmp    0x10032968
10032965:	lea    esi,[edi+0x4]
10032968:	test   esi,esi
1003296a:	je     0x1003299d
1003296c:	push   esi
1003296d:	call   DWORD PTR ds:0x100660dc
10032973:	mov    edi,eax
10032975:	add    edi,0x1
10032978:	cmp    edi,0x3fffffff
1003297e:	jle    0x10032984
10032980:	xor    esi,esi
10032982:	jmp    0x1003299d
10032984:	lea    eax,[edi+edi*1]
10032987:	call   0x1004b7e0
1003298c:	mov    edx,DWORD PTR [ebp-0x34]
1003298f:	mov    eax,esp
10032991:	push   edx
10032992:	push   edi
10032993:	push   esi
10032994:	mov    esi,eax
10032996:	call   0x10006dbe
1003299b:	mov    esi,eax
1003299d:	push   0x33216098
100329a2:	push   0x10073434
100329a7:	call   0x100042bd
100329ac:	add    esp,0x8
100329af:	push   0x0
100329b1:	push   0x4080200
100329b6:	lea    ecx,[ebp-0x60]
100329b9:	push   ecx
100329ba:	push   0x0
100329bc:	push   0x0
100329be:	push   esi
100329bf:	push   eax
100329c0:	push   0x3
100329c2:	push   0x10073464
100329c7:	call   0x1000448e
100329cc:	add    esp,0xc
100329cf:	push   eax
100329d0:	push   ebx
100329d1:	call   DWORD PTR ds:0x10066384
100329d7:	mov    ebx,eax
100329d9:	mov    DWORD PTR [ebp-0x38],ebx
100329dc:	test   ebx,ebx
100329de:	mov    BYTE PTR [ebp-0x4],0x3
100329e2:	jne    0x10032a00
100329e4:	mov    edx,DWORD PTR [ebp-0x3c]
100329e7:	mov    esi,DWORD PTR [ebp-0x30]
100329ea:	push   edx
100329eb:	mov    DWORD PTR [esi],eax
100329ed:	call   DWORD PTR ds:0x10066380
100329f3:	push   ebx
100329f4:	call   0x10042f82
100329f9:	mov    eax,esi
100329fb:	jmp    0x10032c75
10032a00:	push   0x1006cd08
10032a05:	call   0x10043100
10032a0a:	mov    edi,DWORD PTR [ebp-0x40]
10032a0d:	mov    esi,DWORD PTR [edi+0x14]
10032a10:	mov    ecx,eax
10032a12:	add    esp,0x4
10032a15:	cmp    esi,ecx
10032a17:	mov    DWORD PTR [ebp-0x4c],ecx
10032a1a:	mov    eax,esi
10032a1c:	jae    0x10032a20
10032a1e:	mov    ecx,esi
10032a20:	cmp    DWORD PTR [edi+0x18],0x10
10032a24:	lea    eax,[edi+0x4]
10032a27:	mov    DWORD PTR [ebp-0x40],eax
10032a2a:	jb     0x10032a2e
10032a2c:	mov    eax,DWORD PTR [eax]
10032a2e:	push   ecx
10032a2f:	push   0x1006cd08
10032a34:	push   eax
10032a35:	call   0x10043816
10032a3a:	add    esp,0xc
10032a3d:	test   eax,eax
10032a3f:	jne    0x10032a59
10032a41:	mov    eax,DWORD PTR [ebp-0x4c]
10032a44:	cmp    esi,eax
10032a46:	jb     0x10032a59
10032a48:	xor    ecx,ecx
10032a4a:	cmp    esi,eax
10032a4c:	setne  cl
10032a4f:	mov    eax,ecx
10032a51:	test   eax,eax
10032a53:	je     0x10032b1e
10032a59:	push   edi
10032a5a:	lea    ecx,[ebp-0x2c]
10032a5d:	call   0x100011a2
10032a62:	cmp    DWORD PTR [edi+0x18],0x10
10032a66:	jb     0x10032a6f
10032a68:	mov    edx,DWORD PTR [ebp-0x40]
10032a6b:	mov    esi,DWORD PTR [edx]
10032a6d:	jmp    0x10032a72
10032a6f:	mov    esi,DWORD PTR [ebp-0x40]
10032a72:	test   esi,esi
10032a74:	jne    0x10032a7a
10032a76:	xor    eax,eax
10032a78:	jmp    0x10032aa9
10032a7a:	push   esi
10032a7b:	call   DWORD PTR ds:0x100660dc
10032a81:	mov    edi,eax
10032a83:	add    edi,0x1
10032a86:	cmp    edi,0x3fffffff
10032a8c:	jle    0x10032a92
10032a8e:	xor    eax,eax
10032a90:	jmp    0x10032aa9
10032a92:	lea    eax,[edi+edi*1]
10032a95:	call   0x1004b7e0
10032a9a:	mov    ecx,DWORD PTR [ebp-0x34]
10032a9d:	mov    eax,esp
10032a9f:	push   ecx
10032aa0:	push   edi
10032aa1:	push   esi
10032aa2:	mov    esi,eax
10032aa4:	call   0x10006dbe
10032aa9:	push   0x1000000
10032aae:	push   0xffffffff
10032ab0:	push   eax
10032ab1:	push   ebx
10032ab2:	call   DWORD PTR ds:0x10066388
10032ab8:	test   eax,eax
10032aba:	jne    0x10032b0c
10032abc:	call   DWORD PTR ds:0x100660cc
10032ac2:	cmp    DWORD PTR [ebp-0x14],0x10
10032ac6:	mov    edi,DWORD PTR [ebp-0x30]
10032ac9:	mov    DWORD PTR [edi],0x0
10032acf:	jb     0x10032add
10032ad1:	mov    edx,DWORD PTR [ebp-0x28]
10032ad4:	push   edx
10032ad5:	call   0x10042f82
10032ada:	add    esp,0x4
10032add:	mov    esi,DWORD PTR ds:0x10066380
10032ae3:	push   ebx
10032ae4:	mov    DWORD PTR [ebp-0x14],0xf
10032aeb:	mov    DWORD PTR [ebp-0x18],0x0
10032af2:	mov    BYTE PTR [ebp-0x28],0x0
10032af6:	call   esi
10032af8:	mov    eax,DWORD PTR [ebp-0x3c]
10032afb:	push   eax
10032afc:	call   esi
10032afe:	push   0x0
10032b00:	call   0x10042f82
10032b05:	mov    eax,edi
10032b07:	jmp    0x10032c75
10032b0c:	cmp    DWORD PTR [ebp-0x14],0x10
10032b10:	jb     0x10032b1e
10032b12:	mov    ecx,DWORD PTR [ebp-0x28]
10032b15:	push   ecx
10032b16:	call   0x10042f82
10032b1b:	add    esp,0x4
10032b1e:	mov    edx,DWORD PTR [ebp+0x20]
10032b21:	mov    eax,DWORD PTR [ebp-0x44]
10032b24:	push   edx
10032b25:	push   eax
10032b26:	push   0x0
10032b28:	push   0x0
10032b2a:	push   ebx
10032b2b:	call   DWORD PTR ds:0x1006638c
10032b31:	test   eax,eax
10032b33:	jne    0x10032b61
10032b35:	call   DWORD PTR ds:0x100660cc
10032b3b:	mov    edi,DWORD PTR [ebp-0x30]
10032b3e:	mov    esi,DWORD PTR ds:0x10066380
10032b44:	push   ebx
10032b45:	mov    DWORD PTR [edi],0x0
10032b4b:	call   esi
10032b4d:	mov    ecx,DWORD PTR [ebp-0x3c]
10032b50:	push   ecx
10032b51:	call   esi
10032b53:	push   0x0
10032b55:	call   0x10042f82
10032b5a:	mov    eax,edi
10032b5c:	jmp    0x10032c75
10032b61:	push   0x400
10032b66:	mov    DWORD PTR [ebp-0x34],0x400
10032b6d:	xor    esi,esi
10032b6f:	call   0x10043811
10032b74:	mov    edi,eax
10032b76:	add    esp,0x4
10032b79:	mov    DWORD PTR [ebp-0x44],edi
10032b7c:	lea    edx,[ebp-0x48]
10032b7f:	push   edx
10032b80:	push   0x400
10032b85:	push   edi
10032b86:	mov    BYTE PTR [ebp-0x4],0x4
10032b8a:	push   ebx
10032b8b:	mov    DWORD PTR [ebp-0x48],esi
10032b8e:	call   DWORD PTR ds:0x10066394
10032b94:	test   eax,eax
10032b96:	je     0x10032c0e
10032b98:	jmp    0x10032ba0
10032b9a:	lea    ebx,[ebx+0x0]
10032ba0:	mov    eax,DWORD PTR [ebp-0x48]
10032ba3:	test   eax,eax
10032ba5:	je     0x10032c3a
10032bab:	add    esi,eax
10032bad:	lea    eax,[esi-0x401]
10032bb3:	cmp    eax,0x1ffbfe
10032bb8:	ja     0x10032bbd
10032bba:	mov    DWORD PTR [ebp-0x34],esi
10032bbd:	mov    ecx,DWORD PTR [ebp-0x34]
10032bc0:	lea    edx,[esi+ecx*1]
10032bc3:	push   edx
10032bc4:	call   0x10043811
10032bc9:	push   esi
10032bca:	mov    ebx,eax
10032bcc:	push   edi
10032bcd:	push   ebx
10032bce:	call   0x10045270
10032bd3:	add    esp,0x10
10032bd6:	cmp    ebx,edi
10032bd8:	je     0x10032be3
10032bda:	push   edi
10032bdb:	call   0x10042f82
10032be0:	add    esp,0x4
10032be3:	mov    edi,ebx
10032be5:	push   0x0
10032be7:	mov    DWORD PTR [ebp-0x44],edi
10032bea:	call   0x10042f82
10032bef:	mov    ecx,DWORD PTR [ebp-0x34]
10032bf2:	mov    edx,DWORD PTR [ebp-0x38]
10032bf5:	add    esp,0x4
10032bf8:	lea    eax,[ebp-0x48]
10032bfb:	push   eax
10032bfc:	push   ecx
10032bfd:	add    ebx,esi
10032bff:	push   ebx
10032c00:	push   edx
10032c01:	call   DWORD PTR ds:0x10066394
10032c07:	test   eax,eax
10032c09:	mov    ebx,DWORD PTR [ebp-0x38]
10032c0c:	jne    0x10032ba0
10032c0e:	mov    esi,DWORD PTR [ebp-0x30]
10032c11:	push   edi
10032c12:	mov    DWORD PTR [esi],0x0
10032c18:	call   0x10042f82
10032c1d:	mov    edi,DWORD PTR ds:0x10066380
10032c23:	add    esp,0x4
10032c26:	push   ebx
10032c27:	call   edi
10032c29:	mov    eax,DWORD PTR [ebp-0x3c]
10032c2c:	push   eax
10032c2d:	call   edi
10032c2f:	push   0x0
10032c31:	call   0x10042f82
10032c36:	mov    eax,esi
10032c38:	jmp    0x10032c75
10032c3a:	test   edi,edi
10032c3c:	je     0x10032c48
10032c3e:	push   0x0
10032c40:	call   0x10042f82
10032c45:	add    esp,0x4
10032c48:	mov    ecx,DWORD PTR [ebp-0x50]
10032c4b:	mov    edx,DWORD PTR [ebp-0x30]
10032c4e:	mov    DWORD PTR [ecx],esi
10032c50:	push   0x0
10032c52:	mov    DWORD PTR [edx],edi
10032c54:	call   0x10042f82
10032c59:	mov    esi,DWORD PTR ds:0x10066380
10032c5f:	add    esp,0x4
10032c62:	push   ebx
10032c63:	call   esi
10032c65:	mov    eax,DWORD PTR [ebp-0x3c]
10032c68:	push   eax
10032c69:	call   esi
10032c6b:	push   0x0
10032c6d:	call   0x10042f82
10032c72:	mov    eax,DWORD PTR [ebp-0x30]
10032c75:	add    esp,0x4
10032c78:	lea    esp,[ebp-0x74]
10032c7b:	mov    ecx,DWORD PTR [ebp-0xc]
10032c7e:	mov    DWORD PTR fs:0x0,ecx
10032c85:	pop    ecx
10032c86:	pop    edi
10032c87:	pop    esi
10032c88:	pop    ebx
10032c89:	mov    ecx,DWORD PTR [ebp-0x10]
10032c8c:	xor    ecx,ebp
10032c8e:	call   0x10042f87
10032c93:	mov    esp,ebp
10032c95:	pop    ebp
10032c96:	ret    
10032c97:	int3   
10032c98:	int3   
10032c99:	int3   
10032c9a:	int3   
10032c9b:	int3   
10032c9c:	int3   
10032c9d:	int3   
10032c9e:	int3   
10032c9f:	int3   
10032ca0:	push   ebp
10032ca1:	lea    ebp,[esp-0x98]
10032ca8:	sub    esp,0x98
10032cae:	push   0xffffffff
10032cb0:	push   0x100608a0
10032cb5:	mov    eax,fs:0x0
10032cbb:	push   eax
10032cbc:	sub    esp,0x50
10032cbf:	mov    eax,ds:0x1007e030
10032cc4:	xor    eax,ebp
10032cc6:	mov    DWORD PTR [ebp+0x94],eax
10032ccc:	push   ebx
10032ccd:	push   esi
10032cce:	push   edi
10032ccf:	push   eax
10032cd0:	lea    eax,[ebp-0xc]
10032cd3:	mov    fs:0x0,eax
10032cd9:	mov    eax,DWORD PTR [ebp+0xa0]
10032cdf:	xor    ebx,ebx
10032ce1:	mov    edi,0xf
10032ce6:	mov    esi,ecx
10032ce8:	mov    DWORD PTR [ebp-0x20],eax
10032ceb:	mov    DWORD PTR [ebp+0x1c],edi
10032cee:	mov    DWORD PTR [ebp+0x18],ebx
10032cf1:	mov    BYTE PTR [ebp+0x8],bl
10032cf4:	mov    DWORD PTR [ebp+0x3c],edi
10032cf7:	mov    DWORD PTR [ebp+0x38],ebx
10032cfa:	mov    BYTE PTR [ebp+0x28],bl
10032cfd:	mov    DWORD PTR [ebp+0x58],edi
10032d00:	mov    DWORD PTR [ebp+0x54],ebx
10032d03:	mov    BYTE PTR [ebp+0x44],bl
10032d06:	mov    DWORD PTR [ebp+0x74],edi
10032d09:	mov    DWORD PTR [ebp+0x70],ebx
10032d0c:	mov    BYTE PTR [ebp+0x60],bl
10032d0f:	mov    DWORD PTR [ebp+0x90],edi
10032d15:	mov    DWORD PTR [ebp+0x8c],ebx
10032d1b:	mov    BYTE PTR [ebp+0x7c],bl
10032d1e:	push   0x38
10032d20:	lea    ecx,[ebp-0x58]
10032d23:	push   ebx
10032d24:	push   ecx
10032d25:	mov    DWORD PTR [ebp-0x4],ebx
10032d28:	call   0x10045cf0
10032d2d:	mov    eax,0x1
10032d32:	add    esp,0xc
10032d35:	mov    DWORD PTR [ebp-0x5c],0x3c
10032d3c:	mov    DWORD PTR [ebp-0x54],eax
10032d3f:	mov    DWORD PTR [ebp-0x48],eax
10032d42:	mov    DWORD PTR [ebp-0x3c],eax
10032d45:	mov    DWORD PTR [ebp-0x34],eax
10032d48:	mov    DWORD PTR [ebp-0x2c],eax
10032d4b:	mov    DWORD PTR [ebp-0x24],eax
10032d4e:	call   DWORD PTR ds:0x1007efec
10032d54:	mov    DWORD PTR [ebp-0x18],eax
10032d57:	mov    eax,DWORD PTR [esi+0x14]
10032d5a:	xor    ecx,ecx
10032d5c:	add    eax,0x1
10032d5f:	mov    edx,0x2
10032d64:	mul    edx
10032d66:	seto   cl
10032d69:	neg    ecx
10032d6b:	or     ecx,eax
10032d6d:	push   ecx
10032d6e:	call   0x10043811
10032d73:	add    esp,0x4
10032d76:	mov    DWORD PTR [ebp-0x10],eax
10032d79:	mov    BYTE PTR [ebp-0x4],0x1
10032d7d:	cmp    DWORD PTR [esi+0x18],0x10
10032d81:	jb     0x10032d88
10032d83:	mov    eax,DWORD PTR [esi+0x4]
10032d86:	jmp    0x10032d8b
10032d88:	lea    eax,[esi+0x4]
10032d8b:	cmp    eax,ebx
10032d8d:	mov    DWORD PTR [ebp-0x14],eax
10032d90:	je     0x10032dde
10032d92:	push   eax
10032d93:	call   DWORD PTR ds:0x100660dc
10032d99:	add    eax,0x1
10032d9c:	cmp    eax,0x3fffffff
10032da1:	mov    DWORD PTR [ebp-0x1c],eax
10032da4:	jg     0x10032dde
10032da6:	add    eax,eax
10032da8:	call   0x1004b7e0
10032dad:	mov    edi,esp
10032daf:	cmp    edi,ebx
10032db1:	je     0x10032dd9
10032db3:	mov    ecx,DWORD PTR [ebp-0x1c]
10032db6:	mov    edx,DWORD PTR [ebp-0x14]
10032db9:	mov    eax,DWORD PTR [ebp-0x18]
10032dbc:	push   ecx
10032dbd:	push   edi
10032dbe:	push   0xffffffff
10032dc0:	push   edx
10032dc1:	push   ebx
10032dc2:	push   eax
10032dc3:	mov    WORD PTR [edi],bx
10032dc6:	call   DWORD PTR ds:0x1006608c
10032dcc:	neg    eax
10032dce:	sbb    eax,eax
10032dd0:	and    eax,edi
10032dd2:	mov    edi,0xf
10032dd7:	jmp    0x10032de0
10032dd9:	mov    edi,0xf
10032dde:	xor    eax,eax
10032de0:	mov    edx,DWORD PTR [ebp-0x10]
10032de3:	movzx  ecx,WORD PTR [eax]
10032de6:	mov    WORD PTR [edx],cx
10032de9:	add    eax,0x2
10032dec:	add    edx,0x2
10032def:	cmp    cx,bx
10032df2:	jne    0x10032de3
10032df4:	mov    esi,DWORD PTR [esi+0x14]
10032df7:	lea    ecx,[ebp-0x5c]
10032dfa:	push   ecx
10032dfb:	push   ebx
10032dfc:	push   esi
10032dfd:	mov    esi,DWORD PTR [ebp-0x10]
10032e00:	push   esi
10032e01:	call   DWORD PTR ds:0x10066390
10032e07:	test   eax,eax
10032e09:	jne    0x10032ea6
10032e0f:	push   esi
10032e10:	call   0x10042f82
10032e15:	mov    esi,0x10
10032e1a:	add    esp,0x4
10032e1d:	cmp    DWORD PTR [ebp+0x90],esi
10032e23:	jb     0x10032e31
10032e25:	mov    edx,DWORD PTR [ebp+0x7c]
10032e28:	push   edx
10032e29:	call   0x10042f82
10032e2e:	add    esp,0x4
10032e31:	cmp    DWORD PTR [ebp+0x74],esi
10032e34:	mov    DWORD PTR [ebp+0x90],edi
10032e3a:	mov    DWORD PTR [ebp+0x8c],ebx
10032e40:	mov    BYTE PTR [ebp+0x7c],bl
10032e43:	jb     0x10032e51
10032e45:	mov    eax,DWORD PTR [ebp+0x60]
10032e48:	push   eax
10032e49:	call   0x10042f82
10032e4e:	add    esp,0x4
10032e51:	cmp    DWORD PTR [ebp+0x58],esi
10032e54:	mov    DWORD PTR [ebp+0x74],edi
10032e57:	mov    DWORD PTR [ebp+0x70],ebx
10032e5a:	mov    BYTE PTR [ebp+0x60],bl
10032e5d:	jb     0x10032e6b
10032e5f:	mov    ecx,DWORD PTR [ebp+0x44]
10032e62:	push   ecx
10032e63:	call   0x10042f82
10032e68:	add    esp,0x4
10032e6b:	cmp    DWORD PTR [ebp+0x3c],esi
10032e6e:	mov    DWORD PTR [ebp+0x58],edi
10032e71:	mov    DWORD PTR [ebp+0x54],ebx
10032e74:	mov    BYTE PTR [ebp+0x44],bl
10032e77:	jb     0x10032e85
10032e79:	mov    edx,DWORD PTR [ebp+0x28]
10032e7c:	push   edx
10032e7d:	call   0x10042f82
10032e82:	add    esp,0x4
10032e85:	cmp    DWORD PTR [ebp+0x1c],esi
10032e88:	mov    DWORD PTR [ebp+0x3c],edi
10032e8b:	mov    DWORD PTR [ebp+0x38],ebx
10032e8e:	mov    BYTE PTR [ebp+0x28],bl
10032e91:	jb     0x10032e9f
10032e93:	mov    eax,DWORD PTR [ebp+0x8]
10032e96:	push   eax
10032e97:	call   0x10042f82
10032e9c:	add    esp,0x4
10032e9f:	xor    al,al
10032ea1:	jmp    0x10032fa7
10032ea6:	mov    ecx,DWORD PTR [ebp-0x50]
10032ea9:	mov    eax,DWORD PTR [ebp-0x48]
10032eac:	mov    dx,WORD PTR [ebp-0x44]
10032eb0:	mov    DWORD PTR [ebp+0x0],ecx
10032eb3:	push   eax
10032eb4:	lea    ecx,[ebp+0x4]
10032eb7:	push   ecx
10032eb8:	mov    ecx,DWORD PTR [ebp-0x4c]
10032ebb:	mov    WORD PTR [ebp+0x20],dx
10032ebf:	call   0x10032fd0
10032ec4:	mov    edx,DWORD PTR [ebp-0x3c]
10032ec7:	mov    ecx,DWORD PTR [ebp-0x40]
10032eca:	push   edx
10032ecb:	lea    eax,[ebp+0x24]
10032ece:	push   eax
10032ecf:	call   0x10032fd0
10032ed4:	mov    ecx,DWORD PTR [ebp-0x34]
10032ed7:	push   ecx
10032ed8:	mov    ecx,DWORD PTR [ebp-0x38]
10032edb:	lea    edx,[ebp+0x40]
10032ede:	push   edx
10032edf:	call   0x10032fd0
10032ee4:	mov    eax,DWORD PTR [ebp-0x2c]
10032ee7:	push   eax
10032ee8:	lea    ecx,[ebp+0x5c]
10032eeb:	push   ecx
10032eec:	mov    ecx,DWORD PTR [ebp-0x30]
10032eef:	call   0x10032fd0
10032ef4:	mov    edx,DWORD PTR [ebp-0x24]
10032ef7:	mov    ecx,DWORD PTR [ebp-0x28]
10032efa:	push   edx
10032efb:	lea    eax,[ebp+0x78]
10032efe:	push   eax
10032eff:	call   0x10032fd0
10032f04:	mov    esi,DWORD PTR [ebp-0x20]
10032f07:	add    esp,0x28
10032f0a:	lea    eax,[ebp+0x0]
10032f0d:	call   0x10033180
10032f12:	mov    ecx,DWORD PTR [ebp-0x10]
10032f15:	push   ecx
10032f16:	call   0x10042f82
10032f1b:	mov    esi,0x10
10032f20:	add    esp,0x4
10032f23:	cmp    DWORD PTR [ebp+0x90],esi
10032f29:	jb     0x10032f37
10032f2b:	mov    edx,DWORD PTR [ebp+0x7c]
10032f2e:	push   edx
10032f2f:	call   0x10042f82
10032f34:	add    esp,0x4
10032f37:	cmp    DWORD PTR [ebp+0x74],esi
10032f3a:	mov    DWORD PTR [ebp+0x90],edi
10032f40:	mov    DWORD PTR [ebp+0x8c],ebx
10032f46:	mov    BYTE PTR [ebp+0x7c],bl
10032f49:	jb     0x10032f57
10032f4b:	mov    eax,DWORD PTR [ebp+0x60]
10032f4e:	push   eax
10032f4f:	call   0x10042f82
10032f54:	add    esp,0x4
10032f57:	cmp    DWORD PTR [ebp+0x58],esi
10032f5a:	mov    DWORD PTR [ebp+0x74],edi
10032f5d:	mov    DWORD PTR [ebp+0x70],ebx
10032f60:	mov    BYTE PTR [ebp+0x60],bl
10032f63:	jb     0x10032f71
10032f65:	mov    ecx,DWORD PTR [ebp+0x44]
10032f68:	push   ecx
10032f69:	call   0x10042f82
10032f6e:	add    esp,0x4
10032f71:	cmp    DWORD PTR [ebp+0x3c],esi
10032f74:	mov    DWORD PTR [ebp+0x58],edi
10032f77:	mov    DWORD PTR [ebp+0x54],ebx
10032f7a:	mov    BYTE PTR [ebp+0x44],bl
10032f7d:	jb     0x10032f8b
10032f7f:	mov    edx,DWORD PTR [ebp+0x28]
10032f82:	push   edx
10032f83:	call   0x10042f82
10032f88:	add    esp,0x4
10032f8b:	cmp    DWORD PTR [ebp+0x1c],esi
10032f8e:	mov    DWORD PTR [ebp+0x3c],edi
10032f91:	mov    DWORD PTR [ebp+0x38],ebx
10032f94:	mov    BYTE PTR [ebp+0x28],bl
10032f97:	jb     0x10032fa5
10032f99:	mov    eax,DWORD PTR [ebp+0x8]
10032f9c:	push   eax
10032f9d:	call   0x10042f82
10032fa2:	add    esp,0x4
10032fa5:	mov    al,0x1
10032fa7:	lea    esp,[ebp-0x6c]
10032faa:	mov    ecx,DWORD PTR [ebp-0xc]
10032fad:	mov    DWORD PTR fs:0x0,ecx
10032fb4:	pop    ecx
10032fb5:	pop    edi
10032fb6:	pop    esi
10032fb7:	pop    ebx
10032fb8:	mov    ecx,DWORD PTR [ebp+0x94]
10032fbe:	xor    ecx,ebp
10032fc0:	call   0x10042f87
10032fc5:	add    ebp,0x98
10032fcb:	mov    esp,ebp
10032fcd:	pop    ebp
10032fce:	ret    
10032fcf:	int3   
10032fd0:	push   ebp
10032fd1:	mov    ebp,esp
10032fd3:	push   0xffffffff
10032fd5:	push   0x1006086a
10032fda:	mov    eax,fs:0x0
10032fe0:	push   eax
10032fe1:	sub    esp,0x4c
10032fe4:	mov    eax,ds:0x1007e030
10032fe9:	xor    eax,ebp
10032feb:	mov    DWORD PTR [ebp-0x10],eax
10032fee:	push   ebx
10032fef:	push   esi
10032ff0:	push   edi
10032ff1:	push   eax
10032ff2:	lea    eax,[ebp-0xc]
10032ff5:	mov    fs:0x0,eax
10032ffb:	mov    ebx,ecx
10032ffd:	xor    esi,esi
10032fff:	mov    DWORD PTR [ebp-0x1c],esi
10033002:	call   DWORD PTR ds:0x1007efec
10033008:	xor    edi,edi
1003300a:	mov    DWORD PTR [ebp-0x18],eax
1003300d:	mov    DWORD PTR [ebp-0x14],edi
10033010:	cmp    DWORD PTR [ebp+0xc],esi
10033013:	mov    DWORD PTR [ebp-0x4],esi
10033016:	je     0x100330b4
1003301c:	cmp    ebx,esi
1003301e:	je     0x100330b4
10033024:	push   ebx
10033025:	call   DWORD PTR ds:0x100660c4
1003302b:	push   esi
1003302c:	add    eax,0x1
1003302f:	cdq    
10033030:	push   0x2
10033032:	push   edx
10033033:	push   eax
10033034:	call   0x1004f4f0
10033039:	mov    edi,eax
1003303b:	add    eax,0x80000000
10033040:	adc    edx,esi
10033042:	mov    DWORD PTR [ebp-0x1c],edx
10033045:	jne    0x1003304c
10033047:	cmp    eax,0xffffffff
1003304a:	jbe    0x10033050
1003304c:	xor    eax,eax
1003304e:	jmp    0x10033088
10033050:	cmp    edi,0x400
10033056:	jg     0x10033070
10033058:	push   edi
10033059:	call   0x10006d49
1003305e:	add    esp,0x4
10033061:	test   al,al
10033063:	je     0x10033070
10033065:	mov    eax,edi
10033067:	call   0x1004b7e0
1003306c:	mov    eax,esp
1003306e:	jmp    0x10033079
10033070:	push   edi
10033071:	lea    esi,[ebp-0x14]
10033074:	call   0x100076f6
10033079:	mov    ecx,DWORD PTR [ebp-0x18]
1003307c:	push   ecx
1003307d:	push   edi
1003307e:	push   ebx
1003307f:	mov    esi,eax
10033081:	call   0x10002422
10033086:	xor    esi,esi
10033088:	mov    edx,DWORD PTR [ebp+0xc]
1003308b:	push   edx
1003308c:	push   eax
1003308d:	lea    ecx,[ebp-0x58]
10033090:	mov    DWORD PTR [ebp-0x40],0xf
10033097:	mov    DWORD PTR [ebp-0x44],esi
1003309a:	mov    BYTE PTR [ebp-0x54],0x0
1003309e:	call   0x10001336
100330a3:	mov    BYTE PTR [ebp-0x4],0x1
100330a7:	mov    edi,DWORD PTR [ebp-0x14]
100330aa:	lea    eax,[ebp-0x58]
100330ad:	mov    ebx,0x1
100330b2:	jmp    0x100330e8
100330b4:	push   0x1006cd08
100330b9:	mov    DWORD PTR [ebp-0x24],0xf
100330c0:	mov    DWORD PTR [ebp-0x28],esi
100330c3:	mov    BYTE PTR [ebp-0x38],0x0
100330c7:	call   0x10043100
100330cc:	add    esp,0x4
100330cf:	push   eax
100330d0:	push   0x1006cd08
100330d5:	lea    ecx,[ebp-0x3c]
100330d8:	call   0x10001336
100330dd:	mov    ebx,0x2
100330e2:	lea    eax,[ebp-0x3c]
100330e5:	mov    DWORD PTR [ebp-0x4],ebx
100330e8:	mov    ecx,DWORD PTR [ebp+0x8]
100330eb:	push   0xffffffff
100330ed:	push   esi
100330ee:	push   eax
100330ef:	mov    DWORD PTR [ebp-0x1c],ebx
100330f2:	call   0x1000123c
100330f7:	test   bl,0x2
100330fa:	je     0x1003311f
100330fc:	and    ebx,0xfffffffd
100330ff:	cmp    DWORD PTR [ebp-0x24],0x10
10033103:	jb     0x10033111
10033105:	mov    eax,DWORD PTR [ebp-0x38]
10033108:	push   eax
10033109:	call   0x10042f82
1003310e:	add    esp,0x4
10033111:	mov    DWORD PTR [ebp-0x24],0xf
10033118:	mov    DWORD PTR [ebp-0x28],esi
1003311b:	mov    BYTE PTR [ebp-0x38],0x0
1003311f:	test   bl,0x1
10033122:	je     0x10033136
10033124:	cmp    DWORD PTR [ebp-0x40],0x10
10033128:	jb     0x10033136
1003312a:	mov    ecx,DWORD PTR [ebp-0x54]
1003312d:	push   ecx
1003312e:	call   0x10042f82
10033133:	add    esp,0x4
10033136:	cmp    edi,esi
10033138:	je     0x10033157
1003313a:	jmp    0x10033143
1003313c:	lea    esp,[esp+0x0]
10033140:	mov    edi,DWORD PTR [ebp-0x14]
10033143:	mov    eax,edi
10033145:	mov    edi,DWORD PTR [edi]
10033147:	push   eax
10033148:	mov    DWORD PTR [ebp-0x14],edi
1003314b:	call   0x100435f8
10033150:	add    esp,0x4
10033153:	cmp    edi,esi
10033155:	jne    0x10033140
10033157:	lea    esp,[ebp-0x68]
1003315a:	mov    ecx,DWORD PTR [ebp-0xc]
1003315d:	mov    DWORD PTR fs:0x0,ecx
10033164:	pop    ecx
10033165:	pop    edi
10033166:	pop    esi
10033167:	pop    ebx
10033168:	mov    ecx,DWORD PTR [ebp-0x10]
1003316b:	xor    ecx,ebp
1003316d:	call   0x10042f87
10033172:	mov    esp,ebp
10033174:	pop    ebp
10033175:	ret    
10033176:	int3   
10033177:	int3   
10033178:	int3   
10033179:	int3   
1003317a:	int3   
1003317b:	int3   
1003317c:	int3   
1003317d:	int3   
1003317e:	int3   
1003317f:	int3   
10033180:	push   edi
10033181:	mov    edi,eax
10033183:	mov    eax,DWORD PTR [edi]
10033185:	push   0xffffffff
10033187:	push   0x0
10033189:	lea    ecx,[edi+0x4]
1003318c:	push   ecx
1003318d:	lea    ecx,[esi+0x4]
10033190:	mov    DWORD PTR [esi],eax
10033192:	call   0x1000123c
10033197:	mov    dx,WORD PTR [edi+0x20]
1003319b:	push   0xffffffff
1003319d:	push   0x0
1003319f:	lea    eax,[edi+0x24]
100331a2:	push   eax
100331a3:	lea    ecx,[esi+0x24]
100331a6:	mov    WORD PTR [esi+0x20],dx
100331aa:	call   0x1000123c
100331af:	push   0xffffffff
100331b1:	push   0x0
100331b3:	lea    ecx,[edi+0x40]
100331b6:	push   ecx
100331b7:	lea    ecx,[esi+0x40]
100331ba:	call   0x1000123c
100331bf:	push   0xffffffff
100331c1:	push   0x0
100331c3:	lea    edx,[edi+0x5c]
100331c6:	push   edx
100331c7:	lea    ecx,[esi+0x5c]
100331ca:	call   0x1000123c
100331cf:	push   0xffffffff
100331d1:	push   0x0
100331d3:	add    edi,0x78
100331d6:	push   edi
100331d7:	lea    ecx,[esi+0x78]
100331da:	call   0x1000123c
100331df:	mov    eax,esi
100331e1:	pop    edi
100331e2:	ret    
100331e3:	int3   
100331e4:	int3   
100331e5:	int3   
100331e6:	int3   
100331e7:	int3   
100331e8:	int3   
100331e9:	int3   
100331ea:	int3   
100331eb:	int3   
100331ec:	int3   
100331ed:	int3   
100331ee:	int3   
100331ef:	int3   
100331f0:	push   0xffffffff
100331f2:	push   0x100618c9
100331f7:	mov    eax,fs:0x0
100331fd:	push   eax
100331fe:	sub    esp,0x4c
10033201:	push   ebx
10033202:	push   esi
10033203:	push   edi
10033204:	mov    eax,ds:0x1007e030
10033209:	xor    eax,esp
1003320b:	push   eax
1003320c:	lea    eax,[esp+0x5c]
10033210:	mov    fs:0x0,eax
10033216:	mov    edi,DWORD PTR [esp+0x6c]
1003321a:	xor    ebx,ebx
1003321c:	mov    DWORD PTR [esp+0x64],ebx
10033220:	mov    DWORD PTR [esp+0x10],ebx
10033224:	mov    eax,ds:0x10080a74
10033229:	mov    edx,DWORD PTR [eax+0xc]
1003322c:	mov    ecx,0x10080a74
10033231:	call   edx
10033233:	add    eax,0x10
10033236:	mov    DWORD PTR [edi],eax
10033238:	mov    DWORD PTR [esp+0x64],ebx
1003323c:	mov    ecx,0x1
10033241:	sub    ecx,DWORD PTR [eax-0x4]
10033244:	mov    eax,DWORD PTR [eax-0x8]
10033247:	sub    eax,0x800
1003324c:	or     eax,ecx
1003324e:	mov    DWORD PTR [esp+0x10],0x1
10033256:	jge    0x10033264
10033258:	mov    eax,0x800
1003325d:	mov    ecx,edi
1003325f:	call   0x10002250
10033264:	mov    eax,DWORD PTR [edi]
10033266:	push   0x800
1003326b:	push   eax
1003326c:	call   DWORD PTR ds:0x10066258
10033272:	test   eax,eax
10033274:	jne    0x10033301
1003327a:	push   0x1007346c
1003327f:	push   0x1c
10033281:	push   0x100734a8
10033286:	call   0x100042cf
1003328b:	mov    esi,eax
1003328d:	mov    edi,0xf
10033292:	push   esi
10033293:	mov    DWORD PTR [esp+0x3c],edi
10033297:	mov    DWORD PTR [esp+0x38],ebx
1003329b:	mov    BYTE PTR [esp+0x28],bl
1003329f:	call   0x10043100
100332a4:	add    esp,0x10
100332a7:	push   eax
100332a8:	push   esi
100332a9:	lea    ecx,[esp+0x1c]
100332ad:	call   0x10001336
100332b2:	lea    ecx,[esp+0x30]
100332b6:	mov    DWORD PTR [esp+0x64],0x1
100332be:	call   0x10042ff1
100332c3:	push   0xffffffff
100332c5:	mov    BYTE PTR [esp+0x68],0x2
100332ca:	push   ebx
100332cb:	lea    eax,[esp+0x1c]
100332cf:	push   eax
100332d0:	lea    ecx,[esp+0x48]
100332d4:	mov    DWORD PTR [esp+0x3c],0x10073634
100332dc:	mov    DWORD PTR [esp+0x60],edi
100332e0:	mov    DWORD PTR [esp+0x5c],ebx
100332e4:	mov    BYTE PTR [esp+0x4c],bl
100332e8:	call   0x1000123c
100332ed:	push   0x10074e8c
100332f2:	lea    ecx,[esp+0x34]
100332f6:	push   ecx
100332f7:	mov    BYTE PTR [esp+0x6c],0x1
100332fc:	call   0x10047aa4
10033301:	mov    eax,DWORD PTR [edi]
10033303:	cmp    eax,ebx
10033305:	jne    0x1003330b
10033307:	xor    eax,eax
10033309:	jmp    0x10033318
1003330b:	push   eax
1003330c:	call   0x100437e3
10033311:	add    esp,0x4
10033314:	cmp    eax,ebx
10033316:	jl     0x1003335c
10033318:	mov    ecx,DWORD PTR [edi]
1003331a:	cmp    eax,DWORD PTR [ecx-0x8]
1003331d:	jg     0x1003335c
1003331f:	mov    DWORD PTR [ecx-0xc],eax
10033322:	mov    edx,DWORD PTR [edi]
10033324:	mov    WORD PTR [edx+eax*2],bx
10033328:	mov    ecx,DWORD PTR [edi]
1003332a:	mov    edx,DWORD PTR [ecx-0xc]
1003332d:	lea    eax,[edx-0x1]
10033330:	cmp    eax,ebx
10033332:	jl     0x1003335c
10033334:	cmp    eax,edx
10033336:	jg     0x1003335c
10033338:	movzx  eax,WORD PTR [ecx+eax*2]
1003333c:	cmp    ax,0x5c
10033340:	je     0x10033347
10033342:	call   0x10034690
10033347:	mov    eax,edi
10033349:	mov    ecx,DWORD PTR [esp+0x5c]
1003334d:	mov    DWORD PTR fs:0x0,ecx
10033354:	pop    ecx
10033355:	pop    edi
10033356:	pop    esi
10033357:	pop    ebx
10033358:	add    esp,0x58
1003335b:	ret    
1003335c:	push   0x80070057
10033361:	call   0x10001f33
10033366:	int3   
10033367:	int3   
10033368:	int3   
10033369:	int3   
1003336a:	int3   
1003336b:	int3   
1003336c:	int3   
1003336d:	int3   
1003336e:	int3   
1003336f:	int3   
10033370:	push   0xffffffff
10033372:	push   0x100626f9
10033377:	mov    eax,fs:0x0
1003337d:	push   eax
1003337e:	sub    esp,0x50
10033381:	push   ebx
10033382:	push   ebp
10033383:	push   esi
10033384:	push   edi
10033385:	mov    eax,ds:0x1007e030
1003338a:	xor    eax,esp
1003338c:	push   eax
1003338d:	lea    eax,[esp+0x64]
10033391:	mov    fs:0x0,eax
10033397:	mov    esi,DWORD PTR [esp+0x74]
1003339b:	xor    ebx,ebx
1003339d:	mov    DWORD PTR [esp+0x6c],ebx
100333a1:	push   esi
100333a2:	mov    DWORD PTR [esp+0x1c],ebx
100333a6:	call   0x100331f0
100333ab:	add    esp,0x4
100333ae:	mov    DWORD PTR [esp+0x6c],ebx
100333b2:	mov    eax,DWORD PTR [esi]
100333b4:	mov    ebp,0x1
100333b9:	sub    eax,0x10
100333bc:	cmp    DWORD PTR [eax+0xc],ebp
100333bf:	mov    DWORD PTR [esp+0x18],ebp
100333c3:	jle    0x100333cf
100333c5:	mov    eax,DWORD PTR [eax+0x4]
100333c8:	push   eax
100333c9:	push   esi
100333ca:	call   0x10002299
100333cf:	mov    eax,DWORD PTR [esi]
100333d1:	push   0x5c
100333d3:	push   eax
100333d4:	call   0x10058437
100333d9:	mov    edi,eax
100333db:	add    esp,0x8
100333de:	cmp    edi,ebx
100333e0:	jne    0x1003346c
100333e6:	push   0x100734c8
100333eb:	push   0x18
100333ed:	push   0x100734f0
100333f2:	call   0x100042cf
100333f7:	mov    esi,eax
100333f9:	add    esp,0xc
100333fc:	mov    edi,0xf
10033401:	push   esi
10033402:	mov    DWORD PTR [esp+0x38],edi
10033406:	mov    DWORD PTR [esp+0x34],ebx
1003340a:	mov    BYTE PTR [esp+0x24],bl
1003340e:	call   0x10043100
10033413:	add    esp,0x4
10033416:	push   eax
10033417:	push   esi
10033418:	lea    ecx,[esp+0x24]
1003341c:	call   0x10001336
10033421:	lea    ecx,[esp+0x38]
10033425:	mov    DWORD PTR [esp+0x6c],ebp
10033429:	call   0x10042ff1
1003342e:	push   0xffffffff
10033430:	mov    BYTE PTR [esp+0x70],0x2
10033435:	push   ebx
10033436:	lea    ecx,[esp+0x24]
1003343a:	push   ecx
1003343b:	lea    ecx,[esp+0x50]
1003343f:	mov    DWORD PTR [esp+0x44],0x10073634
10033447:	mov    DWORD PTR [esp+0x68],edi
1003344b:	mov    DWORD PTR [esp+0x64],ebx
1003344f:	mov    BYTE PTR [esp+0x54],bl
10033453:	call   0x1000123c
10033458:	push   0x10074e8c
1003345d:	lea    edx,[esp+0x3c]
10033461:	push   edx
10033462:	mov    BYTE PTR [esp+0x74],0x1
10033467:	call   0x10047aa4
1003346c:	mov    eax,DWORD PTR [esi]
1003346e:	sub    eax,0x10
10033471:	cmp    DWORD PTR [eax+0xc],ebp
10033474:	jle    0x10033480
10033476:	mov    eax,DWORD PTR [eax+0x4]
10033479:	push   eax
1003347a:	push   esi
1003347b:	call   0x10002299
10033480:	mov    eax,DWORD PTR [esi]
10033482:	sub    edi,eax
10033484:	sar    edi,1
10033486:	add    edi,ebp
10033488:	cmp    eax,ebx
1003348a:	jne    0x10033490
1003348c:	xor    eax,eax
1003348e:	jmp    0x1003349d
10033490:	push   eax
10033491:	call   0x100437e3
10033496:	add    esp,0x4
10033499:	cmp    eax,ebx
1003349b:	jl     0x100334f3
1003349d:	mov    ecx,DWORD PTR [esi]
1003349f:	cmp    eax,DWORD PTR [ecx-0x8]
100334a2:	jg     0x100334f3
100334a4:	mov    DWORD PTR [ecx-0xc],eax
100334a7:	mov    ecx,DWORD PTR [esi]
100334a9:	mov    WORD PTR [ecx+eax*2],bx
100334ad:	mov    eax,DWORD PTR [esi]
100334af:	sub    eax,0x10
100334b2:	mov    ecx,ebp
100334b4:	sub    ecx,DWORD PTR [eax+0xc]
100334b7:	mov    eax,DWORD PTR [eax+0x8]
100334ba:	sub    eax,edi
100334bc:	or     eax,ecx
100334be:	jge    0x100334c9
100334c0:	mov    eax,edi
100334c2:	mov    ecx,esi
100334c4:	call   0x10002250
100334c9:	cmp    edi,ebx
100334cb:	jl     0x100334f3
100334cd:	mov    eax,DWORD PTR [esi]
100334cf:	cmp    edi,DWORD PTR [eax-0x8]
100334d2:	jg     0x100334f3
100334d4:	mov    DWORD PTR [eax-0xc],edi
100334d7:	mov    edx,DWORD PTR [esi]
100334d9:	mov    WORD PTR [edx+edi*2],bx
100334dd:	mov    eax,esi
100334df:	mov    ecx,DWORD PTR [esp+0x64]
100334e3:	mov    DWORD PTR fs:0x0,ecx
100334ea:	pop    ecx
100334eb:	pop    edi
100334ec:	pop    esi
100334ed:	pop    ebp
100334ee:	pop    ebx
100334ef:	add    esp,0x5c
100334f2:	ret    
100334f3:	push   0x80070057
100334f8:	call   0x10001f33
100334fd:	int3   
100334fe:	int3   
100334ff:	int3   
10033500:	push   ebp
10033501:	mov    ebp,esp
10033503:	push   0xffffffff
10033505:	push   0x1006329a
1003350a:	mov    eax,fs:0x0
10033510:	push   eax
10033511:	sub    esp,0x134
10033517:	mov    eax,ds:0x1007e030
1003351c:	xor    eax,ebp
1003351e:	mov    DWORD PTR [ebp-0x10],eax
10033521:	push   ebx
10033522:	push   esi
10033523:	push   edi
10033524:	push   eax
10033525:	lea    eax,[ebp-0xc]
10033528:	mov    fs:0x0,eax
1003352e:	call   DWORD PTR ds:0x1007efec
10033534:	mov    DWORD PTR [ebp-0x84],eax
1003353a:	lea    eax,[ebp-0x7c]
1003353d:	push   eax
1003353e:	call   0x10033370
10033543:	add    esp,0x4
10033546:	xor    ebx,ebx
10033548:	push   ebx
10033549:	push   ebx
1003354a:	lea    ecx,[ebp-0x8c]
10033550:	push   ecx
10033551:	lea    edx,[ebp-0x88]
10033557:	push   edx
10033558:	lea    eax,[ebp-0x80]
1003355b:	push   eax
1003355c:	push   ebx
1003355d:	mov    DWORD PTR [ebp-0x4],ebx
10033560:	mov    ecx,DWORD PTR [ebp-0x7c]
10033563:	push   ebx
10033564:	push   ecx
10033565:	call   DWORD PTR ds:0x1006625c
1003356b:	test   eax,eax
1003356d:	jne    0x100336e5
10033573:	call   DWORD PTR ds:0x100660cc
10033579:	push   0xa
1003357b:	lea    edx,[ebp-0x78]
1003357e:	push   edx
1003357f:	push   eax
10033580:	call   0x10045c0e
10033585:	mov    eax,DWORD PTR [ebp-0x7c]
10033588:	add    esp,0xc
1003358b:	cmp    eax,ebx
1003358d:	mov    esi,eax
1003358f:	jne    0x10033595
10033591:	xor    edi,edi
10033593:	jmp    0x100335c8
10033595:	push   eax
10033596:	call   DWORD PTR ds:0x100660c4
1003359c:	add    eax,0x1
1003359f:	cmp    eax,0x3fffffff
100335a4:	jle    0x100335aa
100335a6:	xor    edi,edi
100335a8:	jmp    0x100335c8
100335aa:	lea    edi,[eax+eax*1]
100335ad:	mov    eax,edi
100335af:	call   0x1004b7e0
100335b4:	mov    ecx,DWORD PTR [ebp-0x84]
100335ba:	mov    eax,esp
100335bc:	push   ecx
100335bd:	push   edi
100335be:	push   esi
100335bf:	mov    esi,eax
100335c1:	call   0x10002422
100335c6:	mov    edi,eax
100335c8:	push   0x33995e70
100335cd:	push   0x10073554
100335d2:	call   0x100042bd
100335d7:	push   eax
100335d8:	push   0x21
100335da:	push   0x10073594
100335df:	call   0x100042cf
100335e4:	mov    esi,eax
100335e6:	add    esp,0x14
100335e9:	push   esi
100335ea:	mov    DWORD PTR [ebp-0x90],0xf
100335f4:	mov    DWORD PTR [ebp-0x94],ebx
100335fa:	mov    BYTE PTR [ebp-0xa4],bl
10033600:	call   0x10043100
10033605:	add    esp,0x4
10033608:	push   eax
10033609:	push   esi
1003360a:	lea    ecx,[ebp-0xa8]
10033610:	call   0x10001336
10033615:	push   edi
10033616:	lea    edx,[ebp-0xa8]
1003361c:	push   edx
1003361d:	lea    eax,[ebp-0x140]
10033623:	push   eax
10033624:	mov    BYTE PTR [ebp-0x4],0x1
10033628:	call   0x1000653b
1003362d:	add    esp,0xc
10033630:	mov    esi,eax
10033632:	push   0x10073510
10033637:	push   0x7
10033639:	push   0x1007354c
1003363e:	mov    BYTE PTR [ebp-0x4],0x2
10033642:	call   0x100042cf
10033647:	add    esp,0xc
1003364a:	push   eax
1003364b:	lea    ecx,[ebp-0x124]
10033651:	push   esi
10033652:	push   ecx
10033653:	call   0x1000653b
10033658:	add    esp,0xc
1003365b:	lea    edx,[ebp-0x78]
1003365e:	push   edx
1003365f:	push   eax
10033660:	lea    eax,[ebp-0x108]
10033666:	push   eax
10033667:	mov    BYTE PTR [ebp-0x4],0x3
1003366b:	call   0x1000653b
10033670:	add    esp,0xc
10033673:	push   0x1007350c
10033678:	push   eax
10033679:	lea    ecx,[ebp-0xec]
1003367f:	push   ecx
10033680:	mov    BYTE PTR [ebp-0x4],0x4
10033684:	call   0x1000653b
10033689:	add    esp,0xc
1003368c:	mov    esi,eax
1003368e:	lea    ecx,[ebp-0xd0]
10033694:	mov    BYTE PTR [ebp-0x4],0x5
10033698:	call   0x10042ff1
1003369d:	push   0xffffffff
1003369f:	mov    BYTE PTR [ebp-0x4],0x6
100336a3:	push   ebx
100336a4:	push   esi
100336a5:	lea    ecx,[ebp-0xc4]
100336ab:	mov    DWORD PTR [ebp-0xd0],0x10073634
100336b5:	mov    DWORD PTR [ebp-0xac],0xf
100336bf:	mov    DWORD PTR [ebp-0xb0],ebx
100336c5:	mov    BYTE PTR [ebp-0xc0],bl
100336cb:	call   0x1000123c
100336d0:	push   0x10074e8c
100336d5:	lea    edx,[ebp-0xd0]
100336db:	push   edx
100336dc:	mov    BYTE PTR [ebp-0x4],0x5
100336e0:	call   0x10047aa4
100336e5:	mov    esi,DWORD PTR [ebp-0x80]
100336e8:	mov    DWORD PTR [ebp-0x4],0xffffffff
100336ef:	mov    eax,DWORD PTR [ebp-0x7c]
100336f2:	add    eax,0xfffffff0
100336f5:	lea    ecx,[eax+0xc]
100336f8:	or     edx,0xffffffff
100336fb:	lock xadd DWORD PTR [ecx],edx
100336ff:	dec    edx
10033700:	test   edx,edx
10033702:	jg     0x1003370e
10033704:	mov    ecx,DWORD PTR [eax]
10033706:	mov    edx,DWORD PTR [ecx]
10033708:	push   eax
10033709:	mov    eax,DWORD PTR [edx+0x4]
1003370c:	call   eax
1003370e:	mov    eax,esi
10033710:	lea    esp,[ebp-0x150]
10033716:	mov    ecx,DWORD PTR [ebp-0xc]
10033719:	mov    DWORD PTR fs:0x0,ecx
10033720:	pop    ecx
10033721:	pop    edi
10033722:	pop    esi
10033723:	pop    ebx
10033724:	mov    ecx,DWORD PTR [ebp-0x10]
10033727:	xor    ecx,ebp
10033729:	call   0x10042f87
1003372e:	mov    esp,ebp
10033730:	pop    ebp
10033731:	ret    
10033732:	int3   
10033733:	int3   
10033734:	int3   
10033735:	int3   
10033736:	int3   
10033737:	int3   
10033738:	int3   
10033739:	int3   
1003373a:	int3   
1003373b:	int3   
1003373c:	int3   
1003373d:	int3   
1003373e:	int3   
1003373f:	int3   
10033740:	push   ebp
10033741:	mov    ebp,esp
10033743:	sub    esp,0x50
10033746:	mov    eax,ds:0x1007e030
1003374b:	xor    eax,ebp
1003374d:	mov    DWORD PTR [ebp-0x4],eax
10033750:	push   ebx
10033751:	push   esi
10033752:	mov    DWORD PTR [ebp-0x4c],0x0
10033759:	call   0x10033500
1003375e:	lea    ebx,[ebp-0x48]
10033761:	mov    edx,eax
10033763:	call   0x1002f4b0
10033768:	call   DWORD PTR ds:0x1007efec
1003376e:	mov    DWORD PTR [ebp-0x4c],eax
10033771:	mov    eax,ebx
10033773:	push   eax
10033774:	call   DWORD PTR ds:0x100660c4
1003377a:	add    eax,0x1
1003377d:	cmp    eax,0x3fffffff
10033782:	jg     0x100337b9
10033784:	lea    esi,[eax+eax*1]
10033787:	mov    eax,esi
10033789:	call   0x1004b7e0
1003378e:	mov    ebx,esp
10033790:	test   ebx,ebx
10033792:	je     0x100337b9
10033794:	mov    edx,DWORD PTR [ebp-0x4c]
10033797:	push   0x0
10033799:	push   0x0
1003379b:	push   esi
1003379c:	push   ebx
1003379d:	push   0xffffffff
1003379f:	lea    ecx,[ebp-0x48]
100337a2:	push   ecx
100337a3:	push   0x0
100337a5:	push   edx
100337a6:	mov    BYTE PTR [ebx],0x0
100337a9:	call   DWORD PTR ds:0x100660b8
100337af:	mov    esi,eax
100337b1:	neg    esi
100337b3:	sbb    esi,esi
100337b5:	and    esi,ebx
100337b7:	jmp    0x100337bb
100337b9:	xor    esi,esi
100337bb:	xor    eax,eax
100337bd:	mov    DWORD PTR [edi+0x18],0xf
100337c4:	mov    DWORD PTR [edi+0x14],eax
100337c7:	push   esi
100337c8:	mov    BYTE PTR [edi+0x4],al
100337cb:	call   0x10043100
100337d0:	add    esp,0x4
100337d3:	push   eax
100337d4:	push   esi
100337d5:	mov    ecx,edi
100337d7:	call   0x10001336
100337dc:	mov    eax,edi
100337de:	lea    esp,[ebp-0x58]
100337e1:	pop    esi
100337e2:	pop    ebx
100337e3:	mov    ecx,DWORD PTR [ebp-0x4]
100337e6:	xor    ecx,ebp
100337e8:	call   0x10042f87
100337ed:	mov    esp,ebp
100337ef:	pop    ebp
100337f0:	ret    
100337f1:	int3   
100337f2:	int3   
100337f3:	int3   
100337f4:	int3   
100337f5:	int3   
100337f6:	int3   
100337f7:	int3   
100337f8:	int3   
100337f9:	int3   
100337fa:	int3   
100337fb:	int3   
100337fc:	int3   
100337fd:	int3   
100337fe:	int3   
100337ff:	int3   
10033800:	push   esi
10033801:	push   edi
10033802:	push   ebx
10033803:	call   DWORD PTR ds:0x10066080
10033809:	mov    esi,eax
1003380b:	test   esi,esi
1003380d:	jne    0x10033811
1003380f:	pop    esi
10033810:	ret    
10033811:	push   edi
10033812:	push   ebx
10033813:	call   DWORD PTR ds:0x10066088
10033819:	mov    ecx,DWORD PTR [esp+0x8]
1003381d:	push   esi
1003381e:	mov    DWORD PTR [ecx],eax
10033820:	call   DWORD PTR ds:0x10066090
10033826:	pop    esi
10033827:	ret    
10033828:	int3   
10033829:	int3   
1003382a:	int3   
1003382b:	int3   
1003382c:	int3   
1003382d:	int3   
1003382e:	int3   
1003382f:	int3   
10033830:	cmp    BYTE PTR ds:0x10080fe0,0x0
10033837:	jne    0x10033896
10033839:	xor    eax,eax
1003383b:	mov    cl,0x61
1003383d:	lea    ecx,[ecx+0x0]
10033840:	mov    BYTE PTR [eax+0x100813e8],cl
10033846:	add    cl,0x1
10033849:	add    eax,0x1
1003384c:	cmp    cl,0x7a
1003384f:	jle    0x10033840
10033851:	mov    cl,0x41
10033853:	mov    BYTE PTR [eax+0x100813e8],cl
10033859:	add    cl,0x1
1003385c:	add    eax,0x1
1003385f:	cmp    cl,0x5a
10033862:	jle    0x10033853
10033864:	mov    cl,0x30
10033866:	jmp    0x10033870
10033868:	lea    esp,[esp+0x0]
1003386f:	nop
10033870:	mov    BYTE PTR [eax+0x100813e8],cl
10033876:	add    cl,0x1
10033879:	add    eax,0x1
1003387c:	cmp    cl,0x39
1003387f:	jle    0x10033870
10033881:	mov    BYTE PTR [eax+0x100813e8],0x5f
10033888:	mov    BYTE PTR [eax+0x100813e9],0x2d
1003388f:	mov    BYTE PTR ds:0x10080fe0,0x1
10033896:	mov    eax,0x100813e8
1003389b:	ret    
1003389c:	int3   
1003389d:	int3   
1003389e:	int3   
1003389f:	int3   
100338a0:	cmp    BYTE PTR ds:0x10080fe1,0x0
100338a7:	jne    0x10033918
100338a9:	push   edi
100338aa:	or     eax,0xffffffff
100338ad:	mov    ecx,0x100
100338b2:	mov    edi,0x10080fe8
100338b7:	rep stos DWORD PTR es:[edi],eax
100338b9:	xor    eax,eax
100338bb:	mov    ecx,0x1008116c
100338c0:	mov    edx,0x1a
100338c5:	pop    edi
100338c6:	mov    DWORD PTR [ecx],eax
100338c8:	add    eax,0x1
100338cb:	add    ecx,0x4
100338ce:	sub    edx,0x1
100338d1:	jne    0x100338c6
100338d3:	mov    ecx,0x100810ec
100338d8:	mov    edx,0x1a
100338dd:	lea    ecx,[ecx+0x0]
100338e0:	mov    DWORD PTR [ecx],eax
100338e2:	add    eax,0x1
100338e5:	add    ecx,0x4
100338e8:	sub    edx,0x1
100338eb:	jne    0x100338e0
100338ed:	mov    ecx,0x100810a8
100338f2:	mov    edx,0xa
100338f7:	mov    DWORD PTR [ecx],eax
100338f9:	add    eax,0x1
100338fc:	add    ecx,0x4
100338ff:	sub    edx,0x1
10033902:	jne    0x100338f7
10033904:	mov    ds:0x10081164,eax
10033909:	add    eax,0x1
1003390c:	mov    ds:0x1008109c,eax
10033911:	mov    BYTE PTR ds:0x10080fe1,0x1
10033918:	mov    eax,0x10080fe8
1003391d:	ret    
1003391e:	int3   
1003391f:	int3   
10033920:	push   0xffffffff
10033922:	push   0x10061879
10033927:	mov    eax,fs:0x0
1003392d:	push   eax
1003392e:	sub    esp,0x1c
10033931:	push   ebx
10033932:	push   ebp
10033933:	push   edi
10033934:	mov    eax,ds:0x1007e030
10033939:	xor    eax,esp
1003393b:	push   eax
1003393c:	lea    eax,[esp+0x2c]
10033940:	mov    fs:0x0,eax
10033946:	xor    edi,edi
10033948:	mov    DWORD PTR [esp+0x24],edi
1003394c:	mov    DWORD PTR [esi+0x18],0xf
10033953:	mov    DWORD PTR [esi+0x14],edi
10033956:	mov    DWORD PTR [esp+0x28],esi
1003395a:	mov    DWORD PTR [esp+0x20],edx
1003395e:	mov    BYTE PTR [esi+0x4],0x0
10033962:	mov    DWORD PTR [esp+0x34],edi
10033966:	mov    DWORD PTR [esp+0x24],0x1
1003396e:	call   0x10033830
10033973:	mov    edx,DWORD PTR [edx+0x14]
10033976:	cmp    dx,di
10033979:	mov    DWORD PTR [esp+0x14],eax
1003397d:	mov    DWORD PTR [esp+0x1c],edx
10033981:	mov    DWORD PTR [esp+0x18],edi
10033985:	je     0x10033ae2
1003398b:	mov    DWORD PTR [esp+0x10],edi
1003398f:	mov    ebx,DWORD PTR [esp+0x10]
10033993:	mov    edi,DWORD PTR [esp+0x20]
10033997:	cmp    ebx,DWORD PTR [edi+0x14]
1003399a:	jbe    0x100339a1
1003399c:	call   0x100434a0
100339a1:	cmp    DWORD PTR [edi+0x18],0x10
100339a5:	lea    eax,[edi+0x4]
100339a8:	jb     0x100339ac
100339aa:	mov    eax,DWORD PTR [eax]
100339ac:	mov    al,BYTE PTR [ebx+eax*1]
100339af:	xor    al,BYTE PTR [esp+0x18]
100339b3:	mov    ecx,DWORD PTR [esp+0x14]
100339b7:	movzx  ebp,al
100339ba:	or     edx,0xffffffff
100339bd:	sub    edx,DWORD PTR [esi+0x14]
100339c0:	mov    eax,ebp
100339c2:	and    eax,0x3f
100339c5:	cmp    edx,0x1
100339c8:	mov    bl,BYTE PTR [eax+ecx*1]
100339cb:	ja     0x100339d2
100339cd:	call   0x10057290
100339d2:	mov    edi,DWORD PTR [esi+0x14]
100339d5:	add    edi,0x1
100339d8:	cmp    edi,0xfffffffe
100339db:	jbe    0x100339e2
100339dd:	call   0x10057290
100339e2:	mov    eax,DWORD PTR [esi+0x18]
100339e5:	cmp    eax,edi
100339e7:	jae    0x10033a09
100339e9:	mov    eax,DWORD PTR [esi+0x14]
100339ec:	push   eax
100339ed:	push   edi
100339ee:	mov    ecx,esi
100339f0:	call   0x100014fb
100339f5:	test   edi,edi
100339f7:	jbe    0x10033a3d
100339f9:	cmp    DWORD PTR [esi+0x18],0x10
100339fd:	mov    ecx,DWORD PTR [esi+0x14]
10033a00:	lea    edx,[esi+0x4]
10033a03:	jb     0x10033a25
10033a05:	mov    eax,DWORD PTR [edx]
10033a07:	jmp    0x10033a27
10033a09:	test   edi,edi
10033a0b:	jne    0x100339f7
10033a0d:	cmp    eax,0x10
10033a10:	mov    DWORD PTR [esi+0x14],edi
10033a13:	jb     0x10033a1d
10033a15:	mov    eax,DWORD PTR [esi+0x4]
10033a18:	mov    BYTE PTR [eax],0x0
10033a1b:	jmp    0x10033a3d
10033a1d:	lea    eax,[esi+0x4]
10033a20:	mov    BYTE PTR [eax],0x0
10033a23:	jmp    0x10033a3d
10033a25:	mov    eax,edx
10033a27:	mov    BYTE PTR [eax+ecx*1],bl
10033a2a:	cmp    DWORD PTR [esi+0x18],0x10
10033a2e:	mov    DWORD PTR [esi+0x14],edi
10033a31:	jb     0x10033a37
10033a33:	mov    eax,DWORD PTR [edx]
10033a35:	jmp    0x10033a39
10033a37:	mov    eax,edx
10033a39:	mov    BYTE PTR [eax+edi*1],0x0
10033a3d:	mov    ecx,DWORD PTR [esp+0x14]
10033a41:	or     edx,0xffffffff
10033a44:	sub    edx,DWORD PTR [esi+0x14]
10033a47:	shr    ebp,0x6
10033a4a:	cmp    edx,0x1
10033a4d:	mov    bl,BYTE PTR [ecx+ebp*1]
10033a50:	ja     0x10033a57
10033a52:	call   0x10057290
10033a57:	mov    edi,DWORD PTR [esi+0x14]
10033a5a:	add    edi,0x1
10033a5d:	cmp    edi,0xfffffffe
10033a60:	jbe    0x10033a67
10033a62:	call   0x10057290
10033a67:	mov    eax,DWORD PTR [esi+0x18]
10033a6a:	cmp    eax,edi
10033a6c:	jae    0x10033a93
10033a6e:	mov    eax,DWORD PTR [esi+0x14]
10033a71:	push   eax
10033a72:	push   edi
10033a73:	mov    ecx,esi
10033a75:	call   0x100014fb
10033a7a:	test   edi,edi
10033a7c:	jbe    0x10033ac7
10033a7e:	mov    ecx,DWORD PTR [esi+0x14]
10033a81:	mov    edx,0x10
10033a86:	cmp    DWORD PTR [esi+0x18],edx
10033a89:	lea    ebp,[esi+0x4]
10033a8c:	jb     0x10033aaf
10033a8e:	mov    eax,DWORD PTR [ebp+0x0]
10033a91:	jmp    0x10033ab1
10033a93:	test   edi,edi
10033a95:	jne    0x10033a7c
10033a97:	cmp    eax,0x10
10033a9a:	mov    DWORD PTR [esi+0x14],edi
10033a9d:	jb     0x10033aa7
10033a9f:	mov    eax,DWORD PTR [esi+0x4]
10033aa2:	mov    BYTE PTR [eax],0x0
10033aa5:	jmp    0x10033ac7
10033aa7:	lea    eax,[esi+0x4]
10033aaa:	mov    BYTE PTR [eax],0x0
10033aad:	jmp    0x10033ac7
10033aaf:	mov    eax,ebp
10033ab1:	mov    BYTE PTR [eax+ecx*1],bl
10033ab4:	cmp    DWORD PTR [esi+0x18],edx
10033ab7:	mov    DWORD PTR [esi+0x14],edi
10033aba:	jb     0x10033ac1
10033abc:	mov    eax,DWORD PTR [ebp+0x0]
10033abf:	jmp    0x10033ac3
10033ac1:	mov    eax,ebp
10033ac3:	mov    BYTE PTR [eax+edi*1],0x0
10033ac7:	mov    eax,DWORD PTR [esp+0x18]
10033acb:	add    DWORD PTR [esp+0x10],0x1
10033ad0:	add    eax,0x1
10033ad3:	cmp    ax,WORD PTR [esp+0x1c]
10033ad8:	mov    DWORD PTR [esp+0x18],eax
10033adc:	jne    0x1003398f
10033ae2:	movzx  ebp,WORD PTR [esp+0x1c]
10033ae7:	mov    edx,DWORD PTR [esp+0x14]
10033aeb:	or     eax,0xffffffff
10033aee:	sub    eax,DWORD PTR [esi+0x14]
10033af1:	mov    ecx,ebp
10033af3:	and    ecx,0xf
10033af6:	cmp    eax,0x1
10033af9:	mov    bl,BYTE PTR [ecx+edx*1]
10033afc:	mov    DWORD PTR [esp+0x10],ebp
10033b00:	ja     0x10033b07
10033b02:	call   0x10057290
10033b07:	mov    edi,DWORD PTR [esi+0x14]
10033b0a:	add    edi,0x1
10033b0d:	cmp    edi,0xfffffffe
10033b10:	jbe    0x10033b17
10033b12:	call   0x10057290
10033b17:	mov    eax,DWORD PTR [esi+0x18]
10033b1a:	cmp    eax,edi
10033b1c:	jae    0x10033b42
10033b1e:	mov    ecx,DWORD PTR [esi+0x14]
10033b21:	push   ecx
10033b22:	push   edi
10033b23:	mov    ecx,esi
10033b25:	call   0x100014fb
10033b2a:	test   edi,edi
10033b2c:	jbe    0x10033b75
10033b2e:	mov    ebp,DWORD PTR [esi+0x14]
10033b31:	mov    edx,0x10
10033b36:	cmp    DWORD PTR [esi+0x18],edx
10033b39:	lea    eax,[esi+0x4]
10033b3c:	jb     0x10033b5e
10033b3e:	mov    ecx,DWORD PTR [eax]
10033b40:	jmp    0x10033b60
10033b42:	test   edi,edi
10033b44:	jne    0x10033b2c
10033b46:	cmp    eax,0x10
10033b49:	mov    DWORD PTR [esi+0x14],edi
10033b4c:	jb     0x10033b56
10033b4e:	mov    eax,DWORD PTR [esi+0x4]
10033b51:	mov    BYTE PTR [eax],0x0
10033b54:	jmp    0x10033b75
10033b56:	lea    eax,[esi+0x4]
10033b59:	mov    BYTE PTR [eax],0x0
10033b5c:	jmp    0x10033b75
10033b5e:	mov    ecx,eax
10033b60:	mov    BYTE PTR [ecx+ebp*1],bl
10033b63:	cmp    DWORD PTR [esi+0x18],edx
10033b66:	mov    DWORD PTR [esi+0x14],edi
10033b69:	jb     0x10033b6d
10033b6b:	mov    eax,DWORD PTR [eax]
10033b6d:	mov    ebp,DWORD PTR [esp+0x10]
10033b71:	mov    BYTE PTR [eax+edi*1],0x0
10033b75:	mov    eax,DWORD PTR [esp+0x14]
10033b79:	or     ecx,0xffffffff
10033b7c:	sub    ecx,DWORD PTR [esi+0x14]
10033b7f:	mov    edx,ebp
10033b81:	shr    edx,0x4
10033b84:	and    edx,0xf
10033b87:	cmp    ecx,0x1
10033b8a:	mov    bl,BYTE PTR [edx+eax*1]
10033b8d:	ja     0x10033b94
10033b8f:	call   0x10057290
10033b94:	mov    edi,DWORD PTR [esi+0x14]
10033b97:	add    edi,0x1
10033b9a:	cmp    edi,0xfffffffe
10033b9d:	jbe    0x10033ba4
10033b9f:	call   0x10057290
10033ba4:	mov    eax,DWORD PTR [esi+0x18]
10033ba7:	cmp    eax,edi
10033ba9:	jae    0x10033bcf
10033bab:	mov    edx,DWORD PTR [esi+0x14]
10033bae:	push   edx
10033baf:	push   edi
10033bb0:	mov    ecx,esi
10033bb2:	call   0x100014fb
10033bb7:	test   edi,edi
10033bb9:	jbe    0x10033c02
10033bbb:	mov    ebp,DWORD PTR [esi+0x14]
10033bbe:	mov    edx,0x10
10033bc3:	cmp    DWORD PTR [esi+0x18],edx
10033bc6:	lea    eax,[esi+0x4]
10033bc9:	jb     0x10033beb
10033bcb:	mov    ecx,DWORD PTR [eax]
10033bcd:	jmp    0x10033bed
10033bcf:	test   edi,edi
10033bd1:	jne    0x10033bb9
10033bd3:	cmp    eax,0x10
10033bd6:	mov    DWORD PTR [esi+0x14],edi
10033bd9:	jb     0x10033be3
10033bdb:	mov    eax,DWORD PTR [esi+0x4]
10033bde:	mov    BYTE PTR [eax],0x0
10033be1:	jmp    0x10033c02
10033be3:	lea    eax,[esi+0x4]
10033be6:	mov    BYTE PTR [eax],0x0
10033be9:	jmp    0x10033c02
10033beb:	mov    ecx,eax
10033bed:	mov    BYTE PTR [ecx+ebp*1],bl
10033bf0:	cmp    DWORD PTR [esi+0x18],edx
10033bf3:	mov    DWORD PTR [esi+0x14],edi
10033bf6:	jb     0x10033bfa
10033bf8:	mov    eax,DWORD PTR [eax]
10033bfa:	mov    ebp,DWORD PTR [esp+0x10]
10033bfe:	mov    BYTE PTR [eax+edi*1],0x0
10033c02:	mov    ecx,DWORD PTR [esp+0x14]
10033c06:	or     edx,0xffffffff
10033c09:	sub    edx,DWORD PTR [esi+0x14]
10033c0c:	mov    eax,ebp
10033c0e:	shr    eax,0x8
10033c11:	and    eax,0xf
10033c14:	cmp    edx,0x1
10033c17:	mov    bl,BYTE PTR [eax+ecx*1]
10033c1a:	ja     0x10033c21
10033c1c:	call   0x10057290
10033c21:	mov    edi,DWORD PTR [esi+0x14]
10033c24:	add    edi,0x1
10033c27:	cmp    edi,0xfffffffe
10033c2a:	jbe    0x10033c31
10033c2c:	call   0x10057290
10033c31:	mov    eax,DWORD PTR [esi+0x18]
10033c34:	cmp    eax,edi
10033c36:	jae    0x10033c5c
10033c38:	mov    eax,DWORD PTR [esi+0x14]
10033c3b:	push   eax
10033c3c:	push   edi
10033c3d:	mov    ecx,esi
10033c3f:	call   0x100014fb
10033c44:	test   edi,edi
10033c46:	jbe    0x10033c8f
10033c48:	mov    ebp,DWORD PTR [esi+0x14]
10033c4b:	mov    edx,0x10
10033c50:	cmp    DWORD PTR [esi+0x18],edx
10033c53:	lea    eax,[esi+0x4]
10033c56:	jb     0x10033c78
10033c58:	mov    ecx,DWORD PTR [eax]
10033c5a:	jmp    0x10033c7a
10033c5c:	test   edi,edi
10033c5e:	jne    0x10033c46
10033c60:	cmp    eax,0x10
10033c63:	mov    DWORD PTR [esi+0x14],edi
10033c66:	jb     0x10033c70
10033c68:	mov    eax,DWORD PTR [esi+0x4]
10033c6b:	mov    BYTE PTR [eax],0x0
10033c6e:	jmp    0x10033c8f
10033c70:	lea    eax,[esi+0x4]
10033c73:	mov    BYTE PTR [eax],0x0
10033c76:	jmp    0x10033c8f
10033c78:	mov    ecx,eax
10033c7a:	mov    BYTE PTR [ecx+ebp*1],bl
10033c7d:	cmp    DWORD PTR [esi+0x18],edx
10033c80:	mov    DWORD PTR [esi+0x14],edi
10033c83:	jb     0x10033c87
10033c85:	mov    eax,DWORD PTR [eax]
10033c87:	mov    ebp,DWORD PTR [esp+0x10]
10033c8b:	mov    BYTE PTR [eax+edi*1],0x0
10033c8f:	mov    ecx,DWORD PTR [esp+0x14]
10033c93:	or     edx,0xffffffff
10033c96:	sub    edx,DWORD PTR [esi+0x14]
10033c99:	shr    ebp,0xc
10033c9c:	cmp    edx,0x1
10033c9f:	mov    bl,BYTE PTR [ecx+ebp*1]
10033ca2:	ja     0x10033ca9
10033ca4:	call   0x10057290
10033ca9:	mov    edi,DWORD PTR [esi+0x14]
10033cac:	add    edi,0x1
10033caf:	cmp    edi,0xfffffffe
10033cb2:	jbe    0x10033cb9
10033cb4:	call   0x10057290
10033cb9:	mov    eax,DWORD PTR [esi+0x18]
10033cbc:	cmp    eax,edi
10033cbe:	jae    0x10033ce4
10033cc0:	mov    eax,DWORD PTR [esi+0x14]
10033cc3:	push   eax
10033cc4:	push   edi
10033cc5:	mov    ecx,esi
10033cc7:	call   0x100014fb
10033ccc:	test   edi,edi
10033cce:	jbe    0x10033d13
10033cd0:	mov    ebp,DWORD PTR [esi+0x14]
10033cd3:	mov    edx,0x10
10033cd8:	cmp    DWORD PTR [esi+0x18],edx
10033cdb:	lea    eax,[esi+0x4]
10033cde:	jb     0x10033d00
10033ce0:	mov    ecx,DWORD PTR [eax]
10033ce2:	jmp    0x10033d02
10033ce4:	test   edi,edi
10033ce6:	jne    0x10033cce
10033ce8:	cmp    eax,0x10
10033ceb:	mov    DWORD PTR [esi+0x14],edi
10033cee:	jb     0x10033cf8
10033cf0:	mov    eax,DWORD PTR [esi+0x4]
10033cf3:	mov    BYTE PTR [eax],0x0
10033cf6:	jmp    0x10033d13
10033cf8:	lea    eax,[esi+0x4]
10033cfb:	mov    BYTE PTR [eax],0x0
10033cfe:	jmp    0x10033d13
10033d00:	mov    ecx,eax
10033d02:	mov    BYTE PTR [ecx+ebp*1],bl
10033d05:	cmp    DWORD PTR [esi+0x18],edx
10033d08:	mov    DWORD PTR [esi+0x14],edi
10033d0b:	jb     0x10033d0f
10033d0d:	mov    eax,DWORD PTR [eax]
10033d0f:	mov    BYTE PTR [eax+edi*1],0x0
10033d13:	push   0xdc09694
10033d18:	push   0x100735b8
10033d1d:	call   0x100042bd
10033d22:	push   0x56188e80
10033d27:	push   eax
10033d28:	call   0x100042bd
10033d2d:	push   0x39081aee
10033d32:	push   eax
10033d33:	call   0x100042bd
10033d38:	push   0x4076a69e
10033d3d:	push   eax
10033d3e:	call   0x100042bd
10033d43:	push   eax
10033d44:	push   0x7
10033d46:	push   0x100735e8
10033d4b:	call   0x100042cf
10033d50:	mov    edi,eax
10033d52:	push   edi
10033d53:	call   0x10043100
10033d58:	add    esp,0x30
10033d5b:	push   eax
10033d5c:	push   edi
10033d5d:	mov    eax,esi
10033d5f:	call   0x10004d85
10033d64:	mov    eax,esi
10033d66:	mov    ecx,DWORD PTR [esp+0x2c]
10033d6a:	mov    DWORD PTR fs:0x0,ecx
10033d71:	pop    ecx
10033d72:	pop    edi
10033d73:	pop    ebp
10033d74:	pop    ebx
10033d75:	add    esp,0x28
10033d78:	ret    
10033d79:	int3   
10033d7a:	int3   
10033d7b:	int3   
10033d7c:	int3   
10033d7d:	int3   
10033d7e:	int3   
10033d7f:	int3   
10033d80:	push   ebp
10033d81:	mov    ebp,esp
10033d83:	push   0xffffffff
10033d85:	push   0x10061830
10033d8a:	mov    eax,fs:0x0
10033d90:	push   eax
10033d91:	sub    esp,0x9c
10033d97:	mov    eax,ds:0x1007e030
10033d9c:	xor    eax,ebp
10033d9e:	mov    DWORD PTR [ebp-0x14],eax
10033da1:	push   ebx
10033da2:	push   esi
10033da3:	push   edi
10033da4:	push   eax
10033da5:	lea    eax,[ebp-0xc]
10033da8:	mov    fs:0x0,eax
10033dae:	mov    DWORD PTR [ebp-0x10],esp
10033db1:	xor    ebx,ebx
10033db3:	mov    DWORD PTR [ebp-0x4],ebx
10033db6:	mov    edi,ecx
10033db8:	mov    DWORD PTR [ebp-0x58],edi
10033dbb:	mov    esi,edx
10033dbd:	mov    DWORD PTR [ebp-0x60],ebx
10033dc0:	mov    DWORD PTR [ebp-0x34],0xf
10033dc7:	mov    DWORD PTR [ebp-0x38],ebx
10033dca:	mov    BYTE PTR [ebp-0x48],bl
10033dcd:	mov    BYTE PTR [ebp-0x4],0x1
10033dd1:	call   0x100338a0
10033dd6:	cmp    DWORD PTR [esi+0x14],0xb
10033dda:	mov    DWORD PTR [ebp-0x50],eax
10033ddd:	jae    0x10033e1f
10033ddf:	mov    DWORD PTR [edi+0x18],0xf
10033de6:	mov    DWORD PTR [edi+0x14],ebx
10033de9:	push   0x1006cd08
10033dee:	mov    BYTE PTR [edi+0x4],bl
10033df1:	call   0x10043100
10033df6:	add    esp,0x4
10033df9:	push   eax
10033dfa:	push   0x1006cd08
10033dff:	mov    ecx,edi
10033e01:	call   0x10001336
10033e06:	cmp    DWORD PTR [ebp-0x34],0x10
10033e0a:	jb     0x10033e18
10033e0c:	mov    eax,DWORD PTR [ebp-0x48]
10033e0f:	push   eax
10033e10:	call   0x10042f82
10033e15:	add    esp,0x4
10033e18:	mov    eax,edi
10033e1a:	jmp    0x10034222
10033e1f:	push   0x6b619b94
10033e24:	push   0x100735f0
10033e29:	call   0x100042bd
10033e2e:	add    esp,0x8
10033e31:	push   eax
10033e32:	push   0x7
10033e34:	push   0x100735e8
10033e39:	call   0x100042cf
10033e3e:	mov    ebx,eax
10033e40:	add    esp,0xc
10033e43:	push   ebx
10033e44:	call   0x10043100
10033e49:	add    esp,0x4
10033e4c:	push   eax
10033e4d:	push   ebx
10033e4e:	push   esi
10033e4f:	xor    eax,eax
10033e51:	call   0x1000d0a8
10033e56:	cmp    eax,0xffffffff
10033e59:	jne    0x10033ea0
10033e5b:	mov    DWORD PTR [edi+0x18],0xf
10033e62:	mov    DWORD PTR [edi+0x14],0x0
10033e69:	push   0x1006cd08
10033e6e:	mov    BYTE PTR [edi+0x4],0x0
10033e72:	call   0x10043100
10033e77:	add    esp,0x4
10033e7a:	push   eax
10033e7b:	push   0x1006cd08
10033e80:	mov    ecx,edi
10033e82:	call   0x10001336
10033e87:	cmp    DWORD PTR [ebp-0x34],0x10
10033e8b:	jb     0x10033e18
10033e8d:	mov    ecx,DWORD PTR [ebp-0x48]
10033e90:	push   ecx
10033e91:	call   0x10042f82
10033e96:	add    esp,0x4
10033e99:	mov    eax,edi
10033e9b:	jmp    0x10034222
10033ea0:	push   eax
10033ea1:	push   0x0
10033ea3:	push   esi
10033ea4:	lea    eax,[ebp-0x30]
10033ea7:	call   0x1000c98f
10033eac:	mov    BYTE PTR [ebp-0x4],0x2
10033eb0:	mov    ecx,DWORD PTR [ebp-0x1c]
10033eb3:	lea    esi,[ecx-0x4]
10033eb6:	cmp    esi,ecx
10033eb8:	jbe    0x10033ec2
10033eba:	call   0x100434a0
10033ebf:	mov    ecx,DWORD PTR [ebp-0x1c]
10033ec2:	mov    eax,DWORD PTR [ebp-0x2c]
10033ec5:	mov    ebx,0x10
10033eca:	cmp    DWORD PTR [ebp-0x18],ebx
10033ecd:	jae    0x10033ed2
10033ecf:	lea    eax,[ebp-0x2c]
10033ed2:	movsx  edx,BYTE PTR [eax+esi*1]
10033ed6:	mov    edi,DWORD PTR [ebp-0x50]
10033ed9:	mov    al,BYTE PTR [edi+edx*4]
10033edc:	cmp    al,0xf
10033ede:	ja     0x100341f6
10033ee4:	movsx  eax,al
10033ee7:	lea    esi,[ecx-0x3]
10033eea:	cmp    esi,ecx
10033eec:	mov    DWORD PTR [ebp-0x54],eax
10033eef:	jbe    0x10033ef9
10033ef1:	call   0x100434a0
10033ef6:	mov    ecx,DWORD PTR [ebp-0x1c]
10033ef9:	cmp    DWORD PTR [ebp-0x18],ebx
10033efc:	mov    eax,DWORD PTR [ebp-0x2c]
10033eff:	jae    0x10033f04
10033f01:	lea    eax,[ebp-0x2c]
10033f04:	movsx  edx,BYTE PTR [eax+esi*1]
10033f08:	mov    al,BYTE PTR [edi+edx*4]
10033f0b:	cmp    al,0xf
10033f0d:	ja     0x100341da
10033f13:	lea    esi,[ecx-0x2]
10033f16:	cmp    esi,ecx
10033f18:	movsx  edi,al
10033f1b:	jbe    0x10033f25
10033f1d:	call   0x100434a0
10033f22:	mov    ecx,DWORD PTR [ebp-0x1c]
10033f25:	cmp    DWORD PTR [ebp-0x18],ebx
10033f28:	mov    eax,DWORD PTR [ebp-0x2c]
10033f2b:	jae    0x10033f30
10033f2d:	lea    eax,[ebp-0x2c]
10033f30:	movsx  eax,BYTE PTR [eax+esi*1]
10033f34:	mov    edx,DWORD PTR [ebp-0x50]
10033f37:	mov    al,BYTE PTR [edx+eax*4]
10033f3a:	cmp    al,0xf
10033f3c:	ja     0x100341be
10033f42:	lea    esi,[ecx-0x1]
10033f45:	cmp    esi,ecx
10033f47:	movsx  ebx,al
10033f4a:	jbe    0x10033f54
10033f4c:	call   0x100434a0
10033f51:	mov    ecx,DWORD PTR [ebp-0x1c]
10033f54:	cmp    DWORD PTR [ebp-0x18],0x10
10033f58:	mov    eax,DWORD PTR [ebp-0x2c]
10033f5b:	jae    0x10033f60
10033f5d:	lea    eax,[ebp-0x2c]
10033f60:	movsx  eax,BYTE PTR [eax+esi*1]
10033f64:	mov    edx,DWORD PTR [ebp-0x50]
10033f67:	mov    al,BYTE PTR [edx+eax*4]
10033f6a:	cmp    al,0xf
10033f6c:	ja     0x100341a2
10033f72:	movsx  eax,al
10033f75:	shl    eax,0x4
10033f78:	or     eax,ebx
10033f7a:	shl    eax,0x4
10033f7d:	or     eax,edi
10033f7f:	shl    eax,0x4
10033f82:	or     eax,DWORD PTR [ebp-0x54]
10033f85:	lea    ebx,[ecx-0x4]
10033f88:	cmp    ebx,ecx
10033f8a:	mov    DWORD PTR [ebp-0x54],eax
10033f8d:	ja     0x10033f9c
10033f8f:	push   0xffffffff
10033f91:	push   ebx
10033f92:	lea    ecx,[ebp-0x30]
10033f95:	call   0x100013a8
10033f9a:	jmp    0x10033fa8
10033f9c:	push   0x0
10033f9e:	sub    ebx,ecx
10033fa0:	lea    esi,[ebp-0x30]
10033fa3:	call   0x1000d034
10033fa8:	mov    eax,DWORD PTR [ebp-0x54]
10033fab:	mov    ecx,DWORD PTR [ebp-0x1c]
10033fae:	add    eax,eax
10033fb0:	cmp    ecx,eax
10033fb2:	jae    0x1003401d
10033fb4:	mov    esi,DWORD PTR [ebp-0x58]
10033fb7:	xor    edi,edi
10033fb9:	mov    DWORD PTR [esi+0x18],0xf
10033fc0:	mov    DWORD PTR [esi+0x14],edi
10033fc3:	push   0x1006cd08
10033fc8:	mov    BYTE PTR [esi+0x4],0x0
10033fcc:	call   0x10043100
10033fd1:	add    esp,0x4
10033fd4:	push   eax
10033fd5:	push   0x1006cd08
10033fda:	mov    ecx,esi
10033fdc:	call   0x10001336
10033fe1:	mov    ebx,0x10
10033fe6:	cmp    DWORD PTR [ebp-0x18],ebx
10033fe9:	jb     0x10033ff7
10033feb:	mov    eax,DWORD PTR [ebp-0x2c]
10033fee:	push   eax
10033fef:	call   0x10042f82
10033ff4:	add    esp,0x4
10033ff7:	mov    DWORD PTR [ebp-0x18],0xf
10033ffe:	mov    DWORD PTR [ebp-0x1c],edi
10034001:	cmp    DWORD PTR [ebp-0x34],ebx
10034004:	mov    BYTE PTR [ebp-0x2c],0x0
10034008:	jb     0x10034016
1003400a:	mov    ecx,DWORD PTR [ebp-0x48]
1003400d:	push   ecx
1003400e:	call   0x10042f82
10034013:	add    esp,0x4
10034016:	mov    eax,esi
10034018:	jmp    0x10034222
1003401d:	mov    edi,ecx
1003401f:	sub    edi,eax
10034021:	xor    eax,eax
10034023:	mov    DWORD PTR [ebp-0x5c],eax
10034026:	cmp    eax,DWORD PTR [ebp-0x54]
10034029:	mov    ebx,DWORD PTR [ebp-0x50]
1003402c:	je     0x10034158
10034032:	lea    esi,[edi+eax*2]
10034035:	cmp    esi,ecx
10034037:	jbe    0x1003403e
10034039:	call   0x100434a0
1003403e:	cmp    DWORD PTR [ebp-0x18],0x10
10034042:	mov    eax,DWORD PTR [ebp-0x2c]
10034045:	jae    0x1003404a
10034047:	lea    eax,[ebp-0x2c]
1003404a:	movsx  edx,BYTE PTR [eax+esi*1]
1003404e:	mov    al,BYTE PTR [ebx+edx*4]
10034051:	cmp    al,0x3f
10034053:	ja     0x10034142
10034059:	movsx  eax,al
1003405c:	add    esi,0x1
1003405f:	cmp    esi,DWORD PTR [ebp-0x1c]
10034062:	mov    DWORD PTR [ebp-0x60],eax
10034065:	jbe    0x1003406c
10034067:	call   0x100434a0
1003406c:	cmp    DWORD PTR [ebp-0x18],0x10
10034070:	mov    eax,DWORD PTR [ebp-0x2c]
10034073:	jae    0x10034078
10034075:	lea    eax,[ebp-0x2c]
10034078:	movsx  ecx,BYTE PTR [eax+esi*1]
1003407c:	mov    al,BYTE PTR [ebx+ecx*4]
1003407f:	cmp    al,0x3
10034081:	ja     0x10034126
10034087:	or     edx,0xffffffff
1003408a:	sub    edx,DWORD PTR [ebp-0x38]
1003408d:	movsx  ebx,al
10034090:	cmp    edx,0x1
10034093:	ja     0x1003409a
10034095:	call   0x10057290
1003409a:	mov    esi,DWORD PTR [ebp-0x38]
1003409d:	add    esi,0x1
100340a0:	cmp    esi,0xfffffffe
100340a3:	jbe    0x100340aa
100340a5:	call   0x10057290
100340aa:	mov    eax,DWORD PTR [ebp-0x34]
100340ad:	cmp    eax,esi
100340af:	jae    0x10034102
100340b1:	mov    eax,DWORD PTR [ebp-0x38]
100340b4:	push   eax
100340b5:	push   esi
100340b6:	lea    ecx,[ebp-0x4c]
100340b9:	call   0x100014fb
100340be:	test   esi,esi
100340c0:	jbe    0x100340f3
100340c2:	mov    eax,DWORD PTR [ebp-0x48]
100340c5:	shl    bl,0x6
100340c8:	add    bl,BYTE PTR [ebp-0x60]
100340cb:	mov    ecx,0x10
100340d0:	xor    bl,BYTE PTR [ebp-0x5c]
100340d3:	cmp    DWORD PTR [ebp-0x34],ecx
100340d6:	jae    0x100340db
100340d8:	lea    eax,[ebp-0x48]
100340db:	mov    edx,DWORD PTR [ebp-0x38]
100340de:	mov    BYTE PTR [eax+edx*1],bl
100340e1:	cmp    DWORD PTR [ebp-0x34],ecx
100340e4:	mov    eax,DWORD PTR [ebp-0x48]
100340e7:	mov    DWORD PTR [ebp-0x38],esi
100340ea:	jae    0x100340ef
100340ec:	lea    eax,[ebp-0x48]
100340ef:	mov    BYTE PTR [eax+esi*1],0x0
100340f3:	add    DWORD PTR [ebp-0x5c],0x1
100340f7:	mov    eax,DWORD PTR [ebp-0x5c]
100340fa:	mov    ecx,DWORD PTR [ebp-0x1c]
100340fd:	jmp    0x10034026
10034102:	test   esi,esi
10034104:	jne    0x100340c0
10034106:	cmp    eax,0x10
10034109:	mov    eax,DWORD PTR [ebp-0x48]
1003410c:	mov    DWORD PTR [ebp-0x38],esi
1003410f:	jae    0x10034114
10034111:	lea    eax,[ebp-0x48]
10034114:	add    DWORD PTR [ebp-0x5c],0x1
10034118:	mov    BYTE PTR [eax],0x0
1003411b:	mov    eax,DWORD PTR [ebp-0x5c]
1003411e:	mov    ecx,DWORD PTR [ebp-0x1c]
10034121:	jmp    0x10034026
10034126:	lea    ecx,[ebp-0x90]
1003412c:	call   0x10042ff1
10034131:	push   0x10074ee0
10034136:	lea    eax,[ebp-0x90]
1003413c:	push   eax
1003413d:	call   0x10047aa4
10034142:	lea    ecx,[ebp-0x6c]
10034145:	call   0x10042ff1
1003414a:	push   0x10074ee0
1003414f:	lea    ecx,[ebp-0x6c]
10034152:	push   ecx
10034153:	call   0x10047aa4
10034158:	mov    esi,DWORD PTR [ebp-0x58]
1003415b:	push   0xffffffff
1003415d:	push   0x0
1003415f:	lea    edx,[ebp-0x4c]
10034162:	mov    edi,0xf
10034167:	mov    DWORD PTR [esi+0x18],edi
1003416a:	mov    DWORD PTR [esi+0x14],0x0
10034171:	push   edx
10034172:	mov    ecx,esi
10034174:	mov    BYTE PTR [esi+0x4],0x0
10034178:	call   0x1000123c
1003417d:	mov    ebx,0x10
10034182:	cmp    DWORD PTR [ebp-0x18],ebx
10034185:	jb     0x10034193
10034187:	mov    eax,DWORD PTR [ebp-0x2c]
1003418a:	push   eax
1003418b:	call   0x10042f82
10034190:	add    esp,0x4
10034193:	mov    DWORD PTR [ebp-0x18],edi
10034196:	mov    DWORD PTR [ebp-0x1c],0x0
1003419d:	jmp    0x10034001
100341a2:	lea    ecx,[ebp-0xa8]
100341a8:	call   0x10042ff1
100341ad:	push   0x10074ee0
100341b2:	lea    edx,[ebp-0xa8]
100341b8:	push   edx
100341b9:	call   0x10047aa4
100341be:	lea    ecx,[ebp-0x84]
100341c4:	call   0x10042ff1
100341c9:	push   0x10074ee0
100341ce:	lea    eax,[ebp-0x84]
100341d4:	push   eax
100341d5:	call   0x10047aa4
100341da:	lea    ecx,[ebp-0x9c]
100341e0:	call   0x10042ff1
100341e5:	push   0x10074ee0
100341ea:	lea    ecx,[ebp-0x9c]
100341f0:	push   ecx
100341f1:	call   0x10047aa4
100341f6:	lea    ecx,[ebp-0x78]
100341f9:	call   0x10042ff1
100341fe:	push   0x10074ee0
10034203:	lea    edx,[ebp-0x78]
10034206:	push   edx
10034207:	call   0x10047aa4
1003420c:	mov    ecx,DWORD PTR [ebp-0x58]
1003420f:	push   0x1006cd08
10034214:	call   0x100011c8
10034219:	mov    eax,0x1003421f
1003421e:	ret    
1003421f:	mov    eax,DWORD PTR [ebp-0x58]
10034222:	mov    ecx,DWORD PTR [ebp-0xc]
10034225:	mov    DWORD PTR fs:0x0,ecx
1003422c:	pop    ecx
1003422d:	pop    edi
1003422e:	pop    esi
1003422f:	pop    ebx
10034230:	mov    ecx,DWORD PTR [ebp-0x14]
10034233:	xor    ecx,ebp
10034235:	call   0x10042f87
1003423a:	mov    esp,ebp
1003423c:	pop    ebp
1003423d:	ret    
1003423e:	int3   
1003423f:	int3   
10034240:	push   ebp
10034241:	mov    ebp,esp
10034243:	and    esp,0xfffffff8
10034246:	push   0xffffffff
10034248:	push   0x100626a8
1003424d:	mov    eax,fs:0x0
10034253:	push   eax
10034254:	sub    esp,0x54
10034257:	push   esi
10034258:	push   edi
10034259:	mov    eax,ds:0x1007e030
1003425e:	xor    eax,esp
10034260:	push   eax
10034261:	lea    eax,[esp+0x60]
10034265:	mov    fs:0x0,eax
1003426b:	xor    esi,esi
1003426d:	cmp    DWORD PTR [ebx+0x18],0x10
10034271:	lea    eax,[ebx+0x4]
10034274:	mov    DWORD PTR [esp+0x10],esi
10034278:	mov    DWORD PTR [esp+0x10],eax
1003427c:	jb     0x10034280
1003427e:	mov    eax,DWORD PTR [eax]
10034280:	push   esi
10034281:	push   esi
10034282:	push   0xffffffff
10034284:	push   eax
10034285:	push   esi
10034286:	push   0xfde9
1003428b:	call   DWORD PTR ds:0x1006608c
10034291:	cmp    eax,esi
10034293:	jne    0x10034322
10034299:	call   0x1000206e
1003429e:	push   0x11
100342a0:	call   0x100379e0
100342a5:	add    esp,0x4
100342a8:	mov    edi,0xf
100342ad:	push   0x1006cd08
100342b2:	mov    DWORD PTR [esp+0x34],edi
100342b6:	mov    DWORD PTR [esp+0x30],esi
100342ba:	mov    BYTE PTR [esp+0x20],0x0
100342bf:	call   0x10043100
100342c4:	add    esp,0x4
100342c7:	push   eax
100342c8:	push   0x1006cd08
100342cd:	lea    ecx,[esp+0x20]
100342d1:	call   0x10001336
100342d6:	lea    ecx,[esp+0x34]
100342da:	mov    DWORD PTR [esp+0x68],esi
100342de:	call   0x10042ff1
100342e3:	push   0xffffffff
100342e5:	mov    BYTE PTR [esp+0x6c],0x1
100342ea:	push   esi
100342eb:	lea    eax,[esp+0x20]
100342ef:	push   eax
100342f0:	lea    ecx,[esp+0x4c]
100342f4:	mov    DWORD PTR [esp+0x40],0x10073634
100342fc:	mov    DWORD PTR [esp+0x64],edi
10034300:	mov    DWORD PTR [esp+0x60],esi
10034304:	mov    BYTE PTR [esp+0x50],0x0
10034309:	call   0x1000123c
1003430e:	push   0x10074e8c
10034313:	lea    ecx,[esp+0x38]
10034317:	push   ecx
10034318:	mov    BYTE PTR [esp+0x70],0x0
1003431d:	call   0x10047aa4
10034322:	lea    edi,[eax+0x1]
10034325:	xor    ecx,ecx
10034327:	mov    eax,edi
10034329:	mov    edx,0x2
1003432e:	mul    edx
10034330:	seto   cl
10034333:	neg    ecx
10034335:	or     ecx,eax
10034337:	push   ecx
10034338:	call   0x10043811
1003433d:	mov    esi,eax
1003433f:	add    esp,0x4
10034342:	mov    DWORD PTR [esp+0x14],esi
10034346:	mov    eax,DWORD PTR [esp+0x10]
1003434a:	mov    DWORD PTR [esp+0x68],0x2
10034352:	cmp    DWORD PTR [ebx+0x18],0x10
10034356:	jb     0x1003435a
10034358:	mov    eax,DWORD PTR [eax]
1003435a:	push   edi
1003435b:	push   esi
1003435c:	push   0xffffffff
1003435e:	push   eax
1003435f:	push   0x0
10034361:	push   0xfde9
10034366:	call   DWORD PTR ds:0x1006608c
1003436c:	mov    edi,DWORD PTR [ebp+0x8]
1003436f:	push   esi
10034370:	mov    WORD PTR [esi+eax*2],0x0
10034376:	call   0x100024ad
1003437b:	push   esi
1003437c:	call   0x10042f82
10034381:	add    esp,0x4
10034384:	mov    eax,edi
10034386:	mov    ecx,DWORD PTR [esp+0x60]
1003438a:	mov    DWORD PTR fs:0x0,ecx
10034391:	pop    ecx
10034392:	pop    edi
10034393:	pop    esi
10034394:	mov    esp,ebp
10034396:	pop    ebp
10034397:	ret    
10034398:	int3   
10034399:	int3   
1003439a:	int3   
1003439b:	int3   
1003439c:	int3   
1003439d:	int3   
1003439e:	int3   
1003439f:	int3   
100343a0:	mov    eax,ds:0x10080a74
100343a5:	mov    edx,DWORD PTR [eax+0xc]
100343a8:	mov    ecx,0x10080a74
100343ad:	call   edx
100343af:	add    eax,0x10
100343b2:	mov    DWORD PTR [esi],eax
100343b4:	mov    eax,esi
100343b6:	ret    
100343b7:	int3   
100343b8:	int3   
100343b9:	int3   
100343ba:	int3   
100343bb:	int3   
100343bc:	int3   
100343bd:	int3   
100343be:	int3   
100343bf:	int3   
100343c0:	test   ebx,ebx
100343c2:	jne    0x100343d2
100343c4:	test   esi,esi
100343c6:	je     0x100343d2
100343c8:	push   0x80070057
100343cd:	call   0x10001f33
100343d2:	mov    eax,ds:0x10080a74
100343d7:	mov    edx,DWORD PTR [eax]
100343d9:	push   0x1
100343db:	push   esi
100343dc:	mov    ecx,0x10080a74
100343e1:	call   edx
100343e3:	test   eax,eax
100343e5:	jne    0x100343ec
100343e7:	jmp    0x10034780
100343ec:	add    eax,0x10
100343ef:	test   esi,esi
100343f1:	mov    DWORD PTR [edi],eax
100343f3:	jl     0x100343c8
100343f5:	cmp    esi,DWORD PTR [eax-0x8]
100343f8:	jg     0x100343c8
100343fa:	mov    DWORD PTR [eax-0xc],esi
100343fd:	mov    eax,DWORD PTR [edi]
100343ff:	push   esi
10034400:	push   ebx
10034401:	mov    BYTE PTR [esi+eax*1],0x0
10034405:	mov    ecx,DWORD PTR [edi]
10034407:	push   esi
10034408:	push   ecx
10034409:	call   0x100434b5
1003440e:	add    esp,0x10
10034411:	mov    eax,edi
10034413:	ret    
10034414:	int3   
10034415:	int3   
10034416:	int3   
10034417:	int3   
10034418:	int3   
10034419:	int3   
1003441a:	int3   
1003441b:	int3   
1003441c:	int3   
1003441d:	int3   
1003441e:	int3   
1003441f:	int3   
10034420:	mov    eax,DWORD PTR [eax]
10034422:	sub    eax,0x10
10034425:	lea    ecx,[eax+0xc]
10034428:	or     edx,0xffffffff
1003442b:	lock xadd DWORD PTR [ecx],edx
1003442f:	dec    edx
10034430:	test   edx,edx
10034432:	jg     0x1003443e
10034434:	mov    ecx,DWORD PTR [eax]
10034436:	mov    edx,DWORD PTR [ecx]
10034438:	push   eax
10034439:	mov    eax,DWORD PTR [edx+0x4]
1003443c:	call   eax
1003443e:	ret    
1003443f:	int3   
10034440:	test   edx,edx
10034442:	jne    0x10034455
10034444:	xor    eax,eax
10034446:	push   edi
10034447:	mov    edi,eax
10034449:	push   edx
1003444a:	mov    eax,ebx
1003444c:	call   0x100346f0
10034451:	mov    eax,ebx
10034453:	pop    edi
10034454:	ret    
10034455:	mov    eax,edx
10034457:	push   esi
10034458:	lea    esi,[eax+0x1]
1003445b:	jmp    0x10034460
1003445d:	lea    ecx,[ecx+0x0]
10034460:	mov    cl,BYTE PTR [eax]
10034462:	add    eax,0x1
10034465:	test   cl,cl
10034467:	jne    0x10034460
10034469:	sub    eax,esi
1003446b:	pop    esi
1003446c:	push   edi
1003446d:	mov    edi,eax
1003446f:	push   edx
10034470:	mov    eax,ebx
10034472:	call   0x100346f0
10034477:	mov    eax,ebx
10034479:	pop    edi
1003447a:	ret    
1003447b:	int3   
1003447c:	int3   
1003447d:	int3   
1003447e:	int3   
1003447f:	int3   
10034480:	mov    eax,DWORD PTR [edi]
10034482:	mov    edx,DWORD PTR [eax-0x8]
10034485:	push   ebx
10034486:	mov    ebx,DWORD PTR [eax-0xc]
10034489:	push   esi
1003448a:	mov    ecx,0x1
1003448f:	sub    ecx,DWORD PTR [eax-0x4]
10034492:	lea    esi,[ebx+0x1]
10034495:	sub    edx,esi
10034497:	or     ecx,edx
10034499:	jge    0x100344a4
1003449b:	mov    ecx,esi
1003449d:	mov    eax,edi
1003449f:	call   0x10034790
100344a4:	test   esi,esi
100344a6:	mov    eax,DWORD PTR [edi]
100344a8:	mov    cl,BYTE PTR [esp+0xc]
100344ac:	mov    BYTE PTR [ebx+eax*1],cl
100344af:	jl     0x100344c8
100344b1:	mov    eax,DWORD PTR [edi]
100344b3:	cmp    esi,DWORD PTR [eax-0x8]
100344b6:	jg     0x100344c8
100344b8:	mov    DWORD PTR [eax-0xc],esi
100344bb:	mov    edx,DWORD PTR [edi]
100344bd:	mov    BYTE PTR [esi+edx*1],0x0
100344c1:	pop    esi
100344c2:	mov    eax,edi
100344c4:	pop    ebx
100344c5:	ret    0x4
100344c8:	push   0x80070057
100344cd:	call   0x10001f33
100344d2:	int3   
100344d3:	int3   
100344d4:	int3   
100344d5:	int3   
100344d6:	int3   
100344d7:	int3   
100344d8:	int3   
100344d9:	int3   
100344da:	int3   
100344db:	int3   
100344dc:	int3   
100344dd:	int3   
100344de:	int3   
100344df:	int3   
100344e0:	mov    eax,DWORD PTR [edi]
100344e2:	mov    edx,DWORD PTR [eax-0x8]
100344e5:	push   esi
100344e6:	mov    esi,DWORD PTR [eax-0xc]
100344e9:	mov    ecx,0x1
100344ee:	sub    ecx,DWORD PTR [eax-0x4]
100344f1:	sub    edx,esi
100344f3:	or     ecx,edx
100344f5:	jge    0x10034500
100344f7:	mov    ecx,esi
100344f9:	mov    eax,edi
100344fb:	call   0x10034790
10034500:	mov    ecx,DWORD PTR [edi]
10034502:	lea    eax,[esi+0x1]
10034505:	call   0x1002f2c0
1003450a:	test   esi,esi
1003450c:	jl     0x10034522
1003450e:	mov    eax,DWORD PTR [edi]
10034510:	cmp    esi,DWORD PTR [eax-0x8]
10034513:	jg     0x10034522
10034515:	mov    DWORD PTR [eax-0xc],esi
10034518:	mov    eax,DWORD PTR [edi]
1003451a:	mov    BYTE PTR [esi+eax*1],0x0
1003451e:	mov    eax,edi
10034520:	pop    esi
10034521:	ret    
10034522:	push   0x80070057
10034527:	call   0x10001f33
1003452c:	int3   
1003452d:	int3   
1003452e:	int3   
1003452f:	int3   
10034530:	test   ecx,ecx
10034532:	jne    0x1003453e
10034534:	push   0x80004005
10034539:	call   0x10001f33
1003453e:	mov    eax,DWORD PTR [esp+0x4]
10034542:	mov    eax,DWORD PTR [eax]
10034544:	push   ecx
10034545:	push   eax
10034546:	call   0x1005900c
1003454b:	add    esp,0x8
1003454e:	neg    eax
10034550:	sbb    eax,eax
10034552:	add    eax,0x1
10034555:	ret    
10034556:	int3   
10034557:	int3   
10034558:	int3   
10034559:	int3   
1003455a:	int3   
1003455b:	int3   
1003455c:	int3   
1003455d:	int3   
1003455e:	int3   
1003455f:	int3   
10034560:	test   ecx,ecx
10034562:	jne    0x1003456e
10034564:	push   0x80004005
10034569:	call   0x10001f33
1003456e:	mov    eax,DWORD PTR [esp+0x4]
10034572:	mov    eax,DWORD PTR [eax]
10034574:	push   ecx
10034575:	push   eax
10034576:	call   0x1005900c
1003457b:	add    esp,0x8
1003457e:	neg    eax
10034580:	sbb    eax,eax
10034582:	neg    eax
10034584:	ret    
10034585:	int3   
10034586:	int3   
10034587:	int3   
10034588:	int3   
10034589:	int3   
1003458a:	int3   
1003458b:	int3   
1003458c:	int3   
1003458d:	int3   
1003458e:	int3   
1003458f:	int3   
10034590:	mov    eax,DWORD PTR [esi]
10034592:	test   eax,eax
10034594:	je     0x1003459d
10034596:	push   eax
10034597:	call   DWORD PTR ds:0x10066380
1003459d:	mov    DWORD PTR [esi],0x0
100345a3:	ret    
100345a4:	int3   
100345a5:	int3   
100345a6:	int3   
100345a7:	int3   
100345a8:	int3   
100345a9:	int3   
100345aa:	int3   
100345ab:	int3   
100345ac:	int3   
100345ad:	int3   
100345ae:	int3   
100345af:	int3   
100345b0:	mov    ecx,DWORD PTR [eax]
100345b2:	push   esi
100345b3:	mov    esi,DWORD PTR [ebx]
100345b5:	lea    eax,[ecx-0x10]
100345b8:	sub    esi,0x10
100345bb:	cmp    eax,esi
100345bd:	je     0x10034608
100345bf:	cmp    DWORD PTR [esi+0xc],0x0
100345c3:	push   edi
100345c4:	lea    edi,[esi+0xc]
100345c7:	jl     0x100345f8
100345c9:	mov    edx,DWORD PTR [eax]
100345cb:	cmp    edx,DWORD PTR [esi]
100345cd:	jne    0x100345f8
100345cf:	push   ebp
100345d0:	call   0x100347e0
100345d5:	mov    ebp,eax
100345d7:	or     eax,0xffffffff
100345da:	lock xadd DWORD PTR [edi],eax
100345de:	dec    eax
100345df:	test   eax,eax
100345e1:	jg     0x100345ed
100345e3:	mov    ecx,DWORD PTR [esi]
100345e5:	mov    edx,DWORD PTR [ecx]
100345e7:	mov    eax,DWORD PTR [edx+0x4]
100345ea:	push   esi
100345eb:	call   eax
100345ed:	add    ebp,0x10
100345f0:	mov    DWORD PTR [ebx],ebp
100345f2:	pop    ebp
100345f3:	pop    edi
100345f4:	mov    eax,ebx
100345f6:	pop    esi
100345f7:	ret    
100345f8:	mov    edi,DWORD PTR [ecx-0xc]
100345fb:	push   ecx
100345fc:	mov    eax,ebx
100345fe:	call   0x100346f0
10034603:	pop    edi
10034604:	mov    eax,ebx
10034606:	pop    esi
10034607:	ret    
10034608:	mov    eax,ebx
1003460a:	pop    esi
1003460b:	ret    
1003460c:	int3   
1003460d:	int3   
1003460e:	int3   
1003460f:	int3   
10034610:	mov    eax,DWORD PTR [esp+0x4]
10034614:	push   ebx
10034615:	push   ebp
10034616:	mov    ebp,DWORD PTR [esp+0x10]
1003461a:	push   esi
1003461b:	mov    esi,DWORD PTR [eax]
1003461d:	mov    ecx,DWORD PTR [esi-0x10]
10034620:	mov    edx,DWORD PTR [ecx]
10034622:	mov    eax,DWORD PTR [edx+0x10]
10034625:	mov    ebx,DWORD PTR [esi-0xc]
10034628:	sub    esi,0x10
1003462b:	push   edi
1003462c:	call   eax
1003462e:	mov    edx,DWORD PTR [eax]
10034630:	push   0x1
10034632:	mov    ecx,eax
10034634:	mov    eax,DWORD PTR [edx]
10034636:	push   ebp
10034637:	call   eax
10034639:	mov    edi,eax
1003463b:	test   edi,edi
1003463d:	jne    0x10034644
1003463f:	call   0x10034780
10034644:	cmp    ebx,ebp
10034646:	jge    0x1003464a
10034648:	mov    ebp,ebx
1003464a:	lea    eax,[ebp+0x1]
1003464d:	push   eax
1003464e:	lea    ecx,[esi+0x10]
10034651:	push   ecx
10034652:	push   eax
10034653:	lea    ebp,[edi+0x10]
10034656:	push   ebp
10034657:	call   0x100434b5
1003465c:	add    esp,0x10
1003465f:	mov    DWORD PTR [edi+0x4],ebx
10034662:	lea    edx,[esi+0xc]
10034665:	or     eax,0xffffffff
10034668:	lock xadd DWORD PTR [edx],eax
1003466c:	dec    eax
1003466d:	test   eax,eax
1003466f:	jg     0x1003467b
10034671:	mov    ecx,DWORD PTR [esi]
10034673:	mov    edx,DWORD PTR [ecx]
10034675:	mov    eax,DWORD PTR [edx+0x4]
10034678:	push   esi
10034679:	call   eax
1003467b:	mov    ecx,DWORD PTR [esp+0x14]
1003467f:	pop    edi
10034680:	pop    esi
10034681:	mov    DWORD PTR [ecx],ebp
10034683:	pop    ebp
10034684:	pop    ebx
10034685:	ret    0x8
10034688:	int3   
10034689:	int3   
1003468a:	int3   
1003468b:	int3   
1003468c:	int3   
1003468d:	int3   
1003468e:	int3   
1003468f:	int3   
10034690:	mov    eax,DWORD PTR [edi]
10034692:	mov    edx,DWORD PTR [eax-0x8]
10034695:	push   ebx
10034696:	mov    ebx,DWORD PTR [eax-0xc]
10034699:	push   esi
1003469a:	mov    ecx,0x1
1003469f:	sub    ecx,DWORD PTR [eax-0x4]
100346a2:	lea    esi,[ebx+0x1]
100346a5:	sub    edx,esi
100346a7:	or     ecx,edx
100346a9:	jge    0x100346b4
100346ab:	mov    eax,esi
100346ad:	mov    ecx,edi
100346af:	call   0x10002250
100346b4:	test   esi,esi
100346b6:	mov    eax,DWORD PTR [edi]
100346b8:	mov    WORD PTR [eax+ebx*2],0x5c
100346be:	jl     0x100346d7
100346c0:	mov    eax,DWORD PTR [edi]
100346c2:	cmp    esi,DWORD PTR [eax-0x8]
100346c5:	jg     0x100346d7
100346c7:	mov    DWORD PTR [eax-0xc],esi
100346ca:	mov    ecx,DWORD PTR [edi]
100346cc:	mov    WORD PTR [ecx+esi*2],0x0
100346d2:	pop    esi
100346d3:	mov    eax,edi
100346d5:	pop    ebx
100346d6:	ret    
100346d7:	push   0x80070057
100346dc:	call   0x10001f33
100346e1:	int3   
100346e2:	int3   
100346e3:	int3   
100346e4:	int3   
100346e5:	int3   
100346e6:	int3   
100346e7:	int3   
100346e8:	int3   
100346e9:	int3   
100346ea:	int3   
100346eb:	int3   
100346ec:	int3   
100346ed:	int3   
100346ee:	int3   
100346ef:	int3   
100346f0:	test   edi,edi
100346f2:	push   esi
100346f3:	mov    esi,eax
100346f5:	jne    0x10034700
100346f7:	call   0x100348e0
100346fc:	pop    esi
100346fd:	ret    0x4
10034700:	mov    ecx,DWORD PTR [esp+0x8]
10034704:	test   ecx,ecx
10034706:	jne    0x10034712
10034708:	push   0x80070057
1003470d:	call   0x10001f33
10034712:	mov    eax,DWORD PTR [esi]
10034714:	push   ebx
10034715:	mov    ebx,ecx
10034717:	sub    ebx,eax
10034719:	mov    edx,0x1
1003471e:	sub    edx,DWORD PTR [eax-0x4]
10034721:	push   ebp
10034722:	mov    ebp,DWORD PTR [eax-0xc]
10034725:	mov    eax,DWORD PTR [eax-0x8]
10034728:	sub    eax,edi
1003472a:	or     edx,eax
1003472c:	jge    0x1003473b
1003472e:	mov    ecx,edi
10034730:	mov    eax,esi
10034732:	call   0x10034790
10034737:	mov    ecx,DWORD PTR [esp+0x10]
1003473b:	cmp    ebx,ebp
1003473d:	mov    eax,DWORD PTR [esi]
1003473f:	push   edi
10034740:	ja     0x1003474f
10034742:	lea    ecx,[eax+ebx*1]
10034745:	push   ecx
10034746:	push   edi
10034747:	push   eax
10034748:	call   0x10042f96
1003474d:	jmp    0x10034757
1003474f:	push   ecx
10034750:	push   edi
10034751:	push   eax
10034752:	call   0x100434b5
10034757:	add    esp,0x10
1003475a:	test   edi,edi
1003475c:	pop    ebp
1003475d:	pop    ebx
1003475e:	jl     0x10034708
10034760:	mov    eax,DWORD PTR [esi]
10034762:	cmp    edi,DWORD PTR [eax-0x8]
10034765:	jg     0x10034708
10034767:	mov    DWORD PTR [eax-0xc],edi
1003476a:	mov    edx,DWORD PTR [esi]
1003476c:	mov    BYTE PTR [edi+edx*1],0x0
10034770:	pop    esi
10034771:	ret    0x4
10034774:	int3   
10034775:	int3   
10034776:	int3   
10034777:	int3   
10034778:	int3   
10034779:	int3   
1003477a:	int3   
1003477b:	int3   
1003477c:	int3   
1003477d:	int3   
1003477e:	int3   
1003477f:	int3   
10034780:	push   0x8007000e
10034785:	call   0x10001f33
1003478a:	int3   
1003478b:	int3   
1003478c:	int3   
1003478d:	int3   
1003478e:	int3   
1003478f:	int3   
10034790:	push   esi
10034791:	mov    esi,eax
10034793:	mov    eax,DWORD PTR [esi]
10034795:	mov    edx,DWORD PTR [eax-0xc]
10034798:	sub    eax,0x10
1003479b:	cmp    edx,ecx
1003479d:	jle    0x100347a1
1003479f:	mov    ecx,edx
100347a1:	cmp    DWORD PTR [eax+0xc],0x1
100347a5:	jle    0x100347b0
100347a7:	push   ecx
100347a8:	push   esi
100347a9:	call   0x10034610
100347ae:	pop    esi
100347af:	ret    
100347b0:	mov    eax,DWORD PTR [eax+0x8]
100347b3:	cmp    eax,ecx
100347b5:	jge    0x100347d6
100347b7:	mov    edx,eax
100347b9:	cmp    edx,0x400
100347bf:	jle    0x100347c9
100347c1:	add    edx,0x400
100347c7:	jmp    0x100347cb
100347c9:	add    edx,edx
100347cb:	cmp    edx,ecx
100347cd:	jge    0x100347d1
100347cf:	mov    edx,ecx
100347d1:	call   0x10034940
100347d6:	pop    esi
100347d7:	ret    
100347d8:	int3   
100347d9:	int3   
100347da:	int3   
100347db:	int3   
100347dc:	int3   
100347dd:	int3   
100347de:	int3   
100347df:	int3   
100347e0:	push   esi
100347e1:	mov    esi,eax
100347e3:	mov    ecx,DWORD PTR [esi]
100347e5:	mov    eax,DWORD PTR [ecx]
100347e7:	mov    edx,DWORD PTR [eax+0x10]
100347ea:	push   edi
100347eb:	call   edx
100347ed:	cmp    DWORD PTR [esi+0xc],0x0
100347f1:	lea    ecx,[esi+0xc]
100347f4:	jl     0x1003480a
100347f6:	cmp    eax,DWORD PTR [esi]
100347f8:	jne    0x1003480a
100347fa:	mov    edi,esi
100347fc:	mov    eax,0x1
10034801:	lock xadd DWORD PTR [ecx],eax
10034805:	mov    eax,edi
10034807:	pop    edi
10034808:	pop    esi
10034809:	ret    
1003480a:	mov    ecx,DWORD PTR [esi+0x4]
1003480d:	mov    edx,DWORD PTR [eax]
1003480f:	mov    edx,DWORD PTR [edx]
10034811:	push   0x1
10034813:	push   ecx
10034814:	mov    ecx,eax
10034816:	call   edx
10034818:	mov    edi,eax
1003481a:	test   edi,edi
1003481c:	jne    0x10034823
1003481e:	jmp    0x10034780
10034823:	mov    eax,DWORD PTR [esi+0x4]
10034826:	mov    DWORD PTR [edi+0x4],eax
10034829:	mov    eax,DWORD PTR [esi+0x4]
1003482c:	add    eax,0x1
1003482f:	push   eax
10034830:	add    esi,0x10
10034833:	push   esi
10034834:	push   eax
10034835:	lea    ecx,[edi+0x10]
10034838:	push   ecx
10034839:	call   0x100434b5
1003483e:	add    esp,0x10
10034841:	mov    eax,edi
10034843:	pop    edi
10034844:	pop    esi
10034845:	ret    
10034846:	int3   
10034847:	int3   
10034848:	int3   
10034849:	int3   
1003484a:	int3   
1003484b:	int3   
1003484c:	int3   
1003484d:	int3   
1003484e:	int3   
1003484f:	int3   
10034850:	mov    ecx,DWORD PTR [esp+0xc]
10034854:	push   ebx
10034855:	push   ebp
10034856:	mov    ebp,DWORD PTR [esp+0xc]
1003485a:	mov    eax,DWORD PTR [ebp+0x0]
1003485d:	mov    ebx,DWORD PTR [eax-0xc]
10034860:	push   esi
10034861:	push   edi
10034862:	mov    edi,DWORD PTR [esp+0x18]
10034866:	sub    edi,eax
10034868:	mov    edx,0x1
1003486d:	sub    edx,DWORD PTR [eax-0x4]
10034870:	mov    eax,DWORD PTR [eax-0x8]
10034873:	lea    esi,[ebx+ecx*1]
10034876:	sub    eax,esi
10034878:	or     edx,eax
1003487a:	jge    0x10034889
1003487c:	mov    ecx,esi
1003487e:	mov    eax,ebp
10034880:	call   0x10034790
10034885:	mov    ecx,DWORD PTR [esp+0x1c]
10034889:	cmp    edi,ebx
1003488b:	mov    eax,DWORD PTR [ebp+0x0]
1003488e:	ja     0x10034897
10034890:	lea    edx,[eax+edi*1]
10034893:	mov    DWORD PTR [esp+0x18],edx
10034897:	mov    edx,DWORD PTR [esp+0x18]
1003489b:	push   ecx
1003489c:	push   edx
1003489d:	push   ecx
1003489e:	add    eax,ebx
100348a0:	push   eax
100348a1:	call   0x100434b5
100348a6:	add    esp,0x10
100348a9:	test   esi,esi
100348ab:	jl     0x100348c6
100348ad:	mov    eax,DWORD PTR [ebp+0x0]
100348b0:	cmp    esi,DWORD PTR [eax-0x8]
100348b3:	jg     0x100348c6
100348b5:	mov    DWORD PTR [eax-0xc],esi
100348b8:	mov    eax,DWORD PTR [ebp+0x0]
100348bb:	pop    edi
100348bc:	mov    BYTE PTR [esi+eax*1],0x0
100348c0:	pop    esi
100348c1:	pop    ebp
100348c2:	pop    ebx
100348c3:	ret    0xc
100348c6:	push   0x80070057
100348cb:	call   0x10001f33
100348d0:	int3   
100348d1:	int3   
100348d2:	int3   
100348d3:	int3   
100348d4:	int3   
100348d5:	int3   
100348d6:	int3   
100348d7:	int3   
100348d8:	int3   
100348d9:	int3   
100348da:	int3   
100348db:	int3   
100348dc:	int3   
100348dd:	int3   
100348de:	int3   
100348df:	int3   
100348e0:	mov    ecx,DWORD PTR [esi]
100348e2:	cmp    DWORD PTR [ecx-0xc],0x0
100348e6:	lea    eax,[ecx-0x10]
100348e9:	push   edi
100348ea:	mov    edi,DWORD PTR [eax]
100348ec:	je     0x10034939
100348ee:	cmp    DWORD PTR [eax+0xc],0x0
100348f2:	lea    edx,[eax+0xc]
100348f5:	jge    0x10034915
100348f7:	cmp    DWORD PTR [ecx-0x8],0x0
100348fb:	jge    0x10034907
100348fd:	push   0x80070057
10034902:	call   0x10001f33
10034907:	mov    DWORD PTR [ecx-0xc],0x0
1003490e:	mov    eax,DWORD PTR [esi]
10034910:	mov    BYTE PTR [eax],0x0
10034913:	pop    edi
10034914:	ret    
10034915:	or     ecx,0xffffffff
10034918:	lock xadd DWORD PTR [edx],ecx
1003491c:	dec    ecx
1003491d:	test   ecx,ecx
1003491f:	jg     0x1003492b
10034921:	mov    ecx,DWORD PTR [eax]
10034923:	mov    edx,DWORD PTR [ecx]
10034925:	push   eax
10034926:	mov    eax,DWORD PTR [edx+0x4]
10034929:	call   eax
1003492b:	mov    edx,DWORD PTR [edi]
1003492d:	mov    eax,DWORD PTR [edx+0xc]
10034930:	mov    ecx,edi
10034932:	call   eax
10034934:	add    eax,0x10
10034937:	mov    DWORD PTR [esi],eax
10034939:	pop    edi
1003493a:	ret    
1003493b:	int3   
1003493c:	int3   
1003493d:	int3   
1003493e:	int3   
1003493f:	int3   
10034940:	mov    eax,DWORD PTR [esi]
10034942:	mov    ecx,DWORD PTR [eax-0x10]
10034945:	sub    eax,0x10
10034948:	cmp    DWORD PTR [eax+0x8],edx
1003494b:	jge    0x10034962
1003494d:	test   edx,edx
1003494f:	jle    0x10034962
10034951:	push   edi
10034952:	mov    edi,DWORD PTR [ecx]
10034954:	push   0x1
10034956:	push   edx
10034957:	push   eax
10034958:	mov    eax,DWORD PTR [edi+0x8]
1003495b:	call   eax
1003495d:	test   eax,eax
1003495f:	pop    edi
10034960:	jne    0x10034967
10034962:	jmp    0x10034780
10034967:	add    eax,0x10
1003496a:	mov    DWORD PTR [esi],eax
1003496c:	ret    
1003496d:	int3   
1003496e:	int3   
1003496f:	int3   
10034970:	push   0xffffffff
10034972:	push   0x1005ff38
10034977:	mov    eax,fs:0x0
1003497d:	push   eax
1003497e:	sub    esp,0x20
10034981:	push   ebx
10034982:	push   esi
10034983:	mov    eax,ds:0x1007e030
10034988:	xor    eax,esp
1003498a:	push   eax
1003498b:	lea    eax,[esp+0x2c]
1003498f:	mov    fs:0x0,eax
10034995:	mov    eax,DWORD PTR [esp+0x3c]
10034999:	xor    ebx,ebx
1003499b:	push   0xffffffff
1003499d:	push   ebx
1003499e:	push   eax
1003499f:	lea    ecx,[esp+0x1c]
100349a3:	mov    DWORD PTR [esp+0x18],ebx
100349a7:	mov    DWORD PTR [esp+0x34],0xf
100349af:	mov    DWORD PTR [esp+0x30],ebx
100349b3:	mov    BYTE PTR [esp+0x20],bl
100349b7:	call   0x1000123c
100349bc:	or     ecx,0xffffffff
100349bf:	mov    DWORD PTR [esp+0x34],ebx
100349c3:	sub    ecx,DWORD PTR [esp+0x24]
100349c7:	cmp    ecx,0x1
100349ca:	ja     0x100349d1
100349cc:	call   0x10057290
100349d1:	mov    esi,DWORD PTR [esp+0x24]
100349d5:	add    esi,0x1
100349d8:	cmp    esi,0xfffffffe
100349db:	jbe    0x100349e2
100349dd:	call   0x10057290
100349e2:	mov    eax,DWORD PTR [esp+0x28]
100349e6:	cmp    eax,esi
100349e8:	jae    0x10034a74
100349ee:	mov    edx,DWORD PTR [esp+0x24]
100349f2:	push   edx
100349f3:	push   esi
100349f4:	lea    ecx,[esp+0x18]
100349f8:	call   0x100014fb
100349fd:	mov    eax,DWORD PTR [esp+0x28]
10034a01:	cmp    esi,ebx
10034a03:	jbe    0x10034a30
10034a05:	cmp    eax,0x10
10034a08:	mov    eax,DWORD PTR [esp+0x14]
10034a0c:	jae    0x10034a12
10034a0e:	lea    eax,[esp+0x14]
10034a12:	mov    ecx,DWORD PTR [esp+0x24]
10034a16:	mov    BYTE PTR [eax+ecx*1],0x26
10034a1a:	cmp    DWORD PTR [esp+0x28],0x10
10034a1f:	mov    eax,DWORD PTR [esp+0x14]
10034a23:	mov    DWORD PTR [esp+0x24],esi
10034a27:	jae    0x10034a2d
10034a29:	lea    eax,[esp+0x14]
10034a2d:	mov    BYTE PTR [eax+esi*1],bl
10034a30:	push   0xffffffff
10034a32:	push   ebx
10034a33:	lea    edx,[esp+0x18]
10034a37:	mov    DWORD PTR [edi+0x18],0xf
10034a3e:	mov    DWORD PTR [edi+0x14],ebx
10034a41:	push   edx
10034a42:	mov    ecx,edi
10034a44:	mov    BYTE PTR [edi+0x4],bl
10034a47:	call   0x1000123c
10034a4c:	cmp    DWORD PTR [esp+0x28],0x10
10034a51:	jb     0x10034a60
10034a53:	mov    eax,DWORD PTR [esp+0x14]
10034a57:	push   eax
10034a58:	call   0x10042f82
10034a5d:	add    esp,0x4
10034a60:	mov    eax,edi
10034a62:	mov    ecx,DWORD PTR [esp+0x2c]
10034a66:	mov    DWORD PTR fs:0x0,ecx
10034a6d:	pop    ecx
10034a6e:	pop    esi
10034a6f:	pop    ebx
10034a70:	add    esp,0x2c
10034a73:	ret    
10034a74:	cmp    esi,ebx
10034a76:	jne    0x10034a03
10034a78:	cmp    eax,0x10
10034a7b:	mov    eax,DWORD PTR [esp+0x14]
10034a7f:	mov    DWORD PTR [esp+0x24],ebx
10034a83:	jae    0x10034a89
10034a85:	lea    eax,[esp+0x14]
10034a89:	mov    BYTE PTR [eax],bl
10034a8b:	jmp    0x10034a30
10034a8d:	int3   
10034a8e:	int3   
10034a8f:	int3   
10034a90:	push   ebp
10034a91:	mov    ebp,esp
10034a93:	and    esp,0xfffffff8
10034a96:	push   0xffffffff
10034a98:	push   0x100617e6
10034a9d:	mov    eax,fs:0x0
10034aa3:	push   eax
10034aa4:	sub    esp,0x898
10034aaa:	mov    eax,ds:0x1007e030
10034aaf:	xor    eax,esp
10034ab1:	mov    DWORD PTR [esp+0x890],eax
10034ab8:	push   ebx
10034ab9:	push   esi
10034aba:	push   edi
10034abb:	mov    eax,ds:0x1007e030
10034ac0:	xor    eax,esp
10034ac2:	push   eax
10034ac3:	lea    eax,[esp+0x8a8]
10034aca:	mov    fs:0x0,eax
10034ad0:	mov    eax,DWORD PTR [ebp+0x8]
10034ad3:	mov    DWORD PTR [esp+0x10],eax
10034ad7:	call   DWORD PTR ds:0x10066264
10034add:	and    eax,0xff
10034ae2:	cmp    eax,0x5
10034ae5:	jb     0x10034b38
10034ae7:	push   0x26f27432
10034aec:	push   0x1007363c
10034af1:	call   0x100042bd
10034af6:	push   0x4c7eb966
10034afb:	push   eax
10034afc:	call   0x100042bd
10034b01:	push   0x23c03dc4
10034b06:	push   eax
10034b07:	call   0x100042bd
10034b0c:	push   eax
10034b0d:	push   0xb
10034b0f:	push   0x10073660
10034b14:	call   0x1000448e
10034b19:	add    esp,0x24
10034b1c:	lea    edx,[esp+0x94]
10034b23:	xor    ebx,ebx
10034b25:	movzx  ecx,WORD PTR [eax]
10034b28:	mov    WORD PTR [edx],cx
10034b2b:	add    eax,0x2
10034b2e:	add    edx,0x2
10034b31:	cmp    cx,bx
10034b34:	jne    0x10034b25
10034b36:	jmp    0x10034b87
10034b38:	push   0xfe747b8
10034b3d:	push   0x10073678
10034b42:	call   0x100042bd
10034b47:	push   0x3aeca47a
10034b4c:	push   eax
10034b4d:	call   0x100042bd
10034b52:	push   0x2ec0073c
10034b57:	push   eax
10034b58:	call   0x100042bd
10034b5d:	push   eax
10034b5e:	push   0x4
10034b60:	push   0x1007369c
10034b65:	call   0x1000448e
10034b6a:	add    esp,0x24
10034b6d:	lea    edx,[esp+0x94]
10034b74:	xor    ebx,ebx
10034b76:	movzx  ecx,WORD PTR [eax]
10034b79:	mov    WORD PTR [edx],cx
10034b7c:	add    eax,0x2
10034b7f:	add    edx,0x2
10034b82:	cmp    cx,bx
10034b85:	jne    0x10034b76
10034b87:	lea    eax,[esp+0x94]
10034b8e:	add    eax,0xfffffffe
10034b91:	mov    cx,WORD PTR [eax+0x2]
10034b95:	add    eax,0x2
10034b98:	cmp    cx,bx
10034b9b:	jne    0x10034b91
10034b9d:	mov    ecx,DWORD PTR ds:0x100736a8
10034ba3:	mov    edx,DWORD PTR ds:0x100736ac
10034ba9:	mov    esi,DWORD PTR ds:0x10066140
10034baf:	mov    DWORD PTR [eax],ecx
10034bb1:	mov    ecx,DWORD PTR ds:0x100736b0
10034bb7:	mov    DWORD PTR [eax+0x4],edx
10034bba:	mov    edx,DWORD PTR ds:0x100736b4
10034bc0:	mov    DWORD PTR [eax+0x8],ecx
10034bc3:	mov    DWORD PTR [eax+0xc],edx
10034bc6:	lea    eax,[esp+0x3c]
10034bca:	push   eax
10034bcb:	call   esi
10034bcd:	mov    edi,DWORD PTR ds:0x10066104
10034bd3:	lea    ecx,[esp+0x14]
10034bd7:	push   ecx
10034bd8:	lea    edx,[esp+0x40]
10034bdc:	push   edx
10034bdd:	call   edi
10034bdf:	push   ebx
10034be0:	push   0x80
10034be5:	push   0x3
10034be7:	push   ebx
10034be8:	push   ebx
10034be9:	push   0xc0000000
10034bee:	lea    eax,[esp+0xac]
10034bf5:	push   eax
10034bf6:	call   DWORD PTR ds:0x100660c0
10034bfc:	cmp    eax,0xffffffff
10034bff:	jne    0x10034cce
10034c05:	cmp    BYTE PTR [ebp+0xc],bl
10034c08:	je     0x10034cfc
10034c0e:	call   DWORD PTR ds:0x100660cc
10034c14:	cmp    eax,0x20
10034c17:	jne    0x10034cfc
10034c1d:	lea    ecx,[esp+0x50]
10034c21:	push   ecx
10034c22:	call   esi
10034c24:	lea    edx,[esp+0x24]
10034c28:	push   edx
10034c29:	lea    eax,[esp+0x54]
10034c2d:	push   eax
10034c2e:	call   edi
10034c30:	mov    ecx,DWORD PTR [esp+0x24]
10034c34:	mov    eax,DWORD PTR [esp+0x28]
10034c38:	mov    DWORD PTR [esp+0x34],ecx
10034c3c:	mov    ecx,eax
10034c3e:	and    eax,0x7fffffff
10034c43:	mov    DWORD PTR [esp+0x38],eax
10034c47:	mov    eax,DWORD PTR [esp+0x14]
10034c4b:	fild   QWORD PTR [esp+0x34]
10034c4f:	and    ecx,0x80000000
10034c55:	mov    DWORD PTR [esp+0x30],ecx
10034c59:	mov    DWORD PTR [esp+0x1c],eax
10034c5d:	mov    eax,DWORD PTR [esp+0x18]
10034c61:	mov    DWORD PTR [esp+0x2c],ebx
10034c65:	fild   QWORD PTR [esp+0x2c]
10034c69:	mov    ecx,eax
10034c6b:	and    eax,0x7fffffff
10034c70:	mov    DWORD PTR [esp+0x20],eax
10034c74:	fchs   
10034c76:	and    ecx,0x80000000
10034c7c:	faddp  st(1),st
10034c7e:	mov    DWORD PTR [esp+0x40],ecx
10034c82:	fild   QWORD PTR [esp+0x1c]
10034c86:	mov    DWORD PTR [esp+0x3c],ebx
10034c8a:	fild   QWORD PTR [esp+0x3c]
10034c8e:	fchs   
10034c90:	faddp  st(1),st
10034c92:	fadd   QWORD PTR ds:0x10074290
10034c98:	fcompp 
10034c9a:	fnstsw ax
10034c9c:	test   ah,0x5
10034c9f:	jnp    0x10034cfc
10034ca1:	push   ebx
10034ca2:	call   DWORD PTR ds:0x100660bc
10034ca8:	push   ebx
10034ca9:	push   0x80
10034cae:	push   0x3
10034cb0:	push   ebx
10034cb1:	push   ebx
10034cb2:	push   0xc0000000
10034cb7:	lea    ecx,[esp+0xac]
10034cbe:	push   ecx
10034cbf:	call   DWORD PTR ds:0x100660c0
10034cc5:	cmp    eax,0xffffffff
10034cc8:	je     0x10034c05
10034cce:	mov    ecx,DWORD PTR [esp+0x10]
10034cd2:	mov    DWORD PTR [ecx],eax
10034cd4:	mov    eax,ecx
10034cd6:	mov    ecx,DWORD PTR [esp+0x8a8]
10034cdd:	mov    DWORD PTR fs:0x0,ecx
10034ce4:	pop    ecx
10034ce5:	pop    edi
10034ce6:	pop    esi
10034ce7:	pop    ebx
10034ce8:	mov    ecx,DWORD PTR [esp+0x890]
10034cef:	xor    ecx,esp
10034cf1:	call   0x10042f87
10034cf6:	mov    esp,ebp
10034cf8:	pop    ebp
10034cf9:	ret    0x8
10034cfc:	call   DWORD PTR ds:0x100660cc
10034d02:	push   0xcb4d938
10034d07:	push   0x100736b8
10034d0c:	call   0x100042bd
10034d11:	push   0x17551f98
10034d16:	push   eax
10034d17:	call   0x100042bd
10034d1c:	push   0xcd9d444
10034d21:	push   eax
10034d22:	call   0x100042bd
10034d27:	push   0x398c7976
10034d2c:	push   eax
10034d2d:	call   0x100042bd
10034d32:	push   0x6c52274c
10034d37:	push   eax
10034d38:	call   0x100042bd
10034d3d:	push   eax
10034d3e:	push   0x12
10034d40:	push   0x100736dc
10034d45:	call   0x100042cf
10034d4a:	mov    esi,eax
10034d4c:	add    esp,0x34
10034d4f:	mov    edi,0xf
10034d54:	push   esi
10034d55:	mov    DWORD PTR [esp+0x6c],edi
10034d59:	mov    DWORD PTR [esp+0x68],ebx
10034d5d:	mov    BYTE PTR [esp+0x58],bl
10034d61:	call   0x10043100
10034d66:	add    esp,0x4
10034d69:	push   eax
10034d6a:	push   esi
10034d6b:	lea    ecx,[esp+0x58]
10034d6f:	call   0x10001336
10034d74:	lea    ecx,[esp+0x6c]
10034d78:	mov    DWORD PTR [esp+0x8b0],ebx
10034d7f:	call   0x10042ff1
10034d84:	push   0xffffffff
10034d86:	mov    BYTE PTR [esp+0x8b4],0x1
10034d8e:	push   ebx
10034d8f:	lea    edx,[esp+0x58]
10034d93:	push   edx
10034d94:	lea    ecx,[esp+0x84]
10034d9b:	mov    DWORD PTR [esp+0x78],0x10073634
10034da3:	mov    DWORD PTR [esp+0x9c],edi
10034daa:	mov    DWORD PTR [esp+0x98],ebx
10034db1:	mov    BYTE PTR [esp+0x88],bl
10034db8:	call   0x1000123c
10034dbd:	push   0x10074e8c
10034dc2:	lea    eax,[esp+0x70]
10034dc6:	push   eax
10034dc7:	mov    BYTE PTR [esp+0x8b8],bl
10034dce:	call   0x10047aa4
10034dd3:	int3   
10034dd4:	int3   
10034dd5:	int3   
10034dd6:	int3   
10034dd7:	int3   
10034dd8:	int3   
10034dd9:	int3   
10034dda:	int3   
10034ddb:	int3   
10034ddc:	int3   
10034ddd:	int3   
10034dde:	int3   
10034ddf:	int3   
10034de0:	mov    ecx,DWORD PTR [eax]
10034de2:	push   ecx
10034de3:	call   DWORD PTR ds:0x10066070
10034de9:	ret    
10034dea:	int3   
10034deb:	int3   
10034dec:	int3   
10034ded:	int3   
10034dee:	int3   
10034def:	int3   
10034df0:	push   0xffffffff
10034df2:	push   0x10061620
10034df7:	mov    eax,fs:0x0
10034dfd:	push   eax
10034dfe:	sub    esp,0x4c
10034e01:	push   ebx
10034e02:	push   esi
10034e03:	mov    eax,ds:0x1007e030
10034e08:	xor    eax,esp
10034e0a:	push   eax
10034e0b:	lea    eax,[esp+0x58]
10034e0f:	mov    fs:0x0,eax
10034e15:	mov    edx,DWORD PTR [ecx]
10034e17:	xor    ebx,ebx
10034e19:	push   ebx
10034e1a:	lea    eax,[esp+0x14]
10034e1e:	push   eax
10034e1f:	push   ebx
10034e20:	push   ebx
10034e21:	push   ebx
10034e22:	push   ebx
10034e23:	push   0x22c028
10034e28:	push   edx
10034e29:	call   DWORD PTR ds:0x10066260
10034e2f:	test   eax,eax
10034e31:	jne    0x10034ec7
10034e37:	push   0x570d3cb6
10034e3c:	push   0x100736f0
10034e41:	call   0x100042bd
10034e46:	push   eax
10034e47:	push   0x1a
10034e49:	push   0x10073724
10034e4e:	call   0x100042cf
10034e53:	mov    esi,eax
10034e55:	push   esi
10034e56:	mov    DWORD PTR [esp+0x44],0xf
10034e5e:	mov    DWORD PTR [esp+0x40],ebx
10034e62:	mov    BYTE PTR [esp+0x30],bl
10034e66:	call   0x10043100
10034e6b:	add    esp,0x18
10034e6e:	push   eax
10034e6f:	push   esi
10034e70:	lea    ecx,[esp+0x1c]
10034e74:	call   0x10001336
10034e79:	lea    ecx,[esp+0x30]
10034e7d:	mov    DWORD PTR [esp+0x60],ebx
10034e81:	call   0x10042ff1
10034e86:	push   0xffffffff
10034e88:	mov    BYTE PTR [esp+0x64],0x1
10034e8d:	push   ebx
10034e8e:	lea    eax,[esp+0x1c]
10034e92:	push   eax
10034e93:	lea    ecx,[esp+0x48]
10034e97:	mov    DWORD PTR [esp+0x3c],0x10073634
10034e9f:	mov    DWORD PTR [esp+0x60],0xf
10034ea7:	mov    DWORD PTR [esp+0x5c],ebx
10034eab:	mov    BYTE PTR [esp+0x4c],bl
10034eaf:	call   0x1000123c
10034eb4:	push   0x10074e8c
10034eb9:	lea    ecx,[esp+0x34]
10034ebd:	push   ecx
10034ebe:	mov    BYTE PTR [esp+0x68],bl
10034ec2:	call   0x10047aa4
10034ec7:	mov    ecx,DWORD PTR [esp+0x58]
10034ecb:	mov    DWORD PTR fs:0x0,ecx
10034ed2:	pop    ecx
10034ed3:	pop    esi
10034ed4:	pop    ebx
10034ed5:	add    esp,0x58
10034ed8:	ret    
10034ed9:	int3   
10034eda:	int3   
10034edb:	int3   
10034edc:	int3   
10034edd:	int3   
10034ede:	int3   
10034edf:	int3   
10034ee0:	push   0xffffffff
10034ee2:	push   0x100617a8
10034ee7:	mov    eax,fs:0x0
10034eed:	push   eax
10034eee:	sub    esp,0x4c
10034ef1:	push   ebx
10034ef2:	push   ebp
10034ef3:	push   esi
10034ef4:	push   edi
10034ef5:	mov    eax,ds:0x1007e030
10034efa:	xor    eax,esp
10034efc:	push   eax
10034efd:	lea    eax,[esp+0x60]
10034f01:	mov    fs:0x0,eax
10034f07:	mov    esi,ecx
10034f09:	xor    ebx,ebx
10034f0b:	mov    DWORD PTR [esp+0x14],ebx
10034f0f:	mov    eax,DWORD PTR [esp+0x74]
10034f13:	mov    DWORD PTR [esp+0x68],ebx
10034f17:	mov    edx,DWORD PTR [esi+0x4c]
10034f1a:	mov    edi,DWORD PTR [esi+0x68]
10034f1d:	mov    eax,DWORD PTR [eax+0x14]
10034f20:	mov    ecx,DWORD PTR [esi+0x30]
10034f23:	add    edi,edx
10034f25:	add    edi,eax
10034f27:	lea    ebp,[edi+ecx*1+0x4]
10034f2b:	lea    eax,[ebp+0x20]
10034f2e:	push   eax
10034f2f:	mov    DWORD PTR [esp+0x78],eax
10034f33:	call   0x10043811
10034f38:	mov    edi,eax
10034f3a:	add    esp,0x4
10034f3d:	cmp    edi,ebx
10034f3f:	je     0x10034f4a
10034f41:	push   ebx
10034f42:	call   0x10042f82
10034f47:	add    esp,0x4
10034f4a:	mov    ecx,DWORD PTR [esp+0x74]
10034f4e:	push   ecx
10034f4f:	push   ebx
10034f50:	push   edi
10034f51:	mov    DWORD PTR [esp+0x20],edi
10034f55:	call   0x10045cf0
10034f5a:	mov    DWORD PTR [edi],ebp
10034f5c:	mov    eax,DWORD PTR [esi+0x70]
10034f5f:	mov    DWORD PTR [edi+0xc],eax
10034f62:	mov    edx,DWORD PTR [esi+0x78]
10034f65:	mov    DWORD PTR [edi+0x10],edx
10034f68:	mov    eax,DWORD PTR [esi+0x7c]
10034f6b:	mov    DWORD PTR [edi+0x14],eax
10034f6e:	mov    ecx,DWORD PTR [esi+0x80]
10034f74:	mov    DWORD PTR [edi+0x18],ecx
10034f77:	mov    edx,DWORD PTR [esi+0x84]
10034f7d:	mov    DWORD PTR [edi+0x1c],edx
10034f80:	add    esp,0xc
10034f83:	mov    DWORD PTR [edi+0x4],0x7
10034f8a:	cmp    DWORD PTR [esi+0x18],0x10
10034f8e:	jb     0x10034f95
10034f90:	mov    ecx,DWORD PTR [esi+0x4]
10034f93:	jmp    0x10034f98
10034f95:	lea    ecx,[esi+0x4]
10034f98:	lea    edx,[edi+0x20]
10034f9b:	jmp    0x10034fa0
10034f9d:	lea    ecx,[ecx+0x0]
10034fa0:	mov    al,BYTE PTR [ecx]
10034fa2:	mov    BYTE PTR [edx],al
10034fa4:	add    ecx,0x1
10034fa7:	add    edx,0x1
10034faa:	cmp    al,bl
10034fac:	jne    0x10034fa0
10034fae:	cmp    DWORD PTR [esi+0x34],0x10
10034fb2:	mov    ebp,DWORD PTR [esi+0x14]
10034fb5:	jb     0x10034fbc
10034fb7:	mov    edx,DWORD PTR [esi+0x20]
10034fba:	jmp    0x10034fbf
10034fbc:	lea    edx,[esi+0x20]
10034fbf:	lea    ecx,[edi+ebp*1+0x21]
10034fc3:	mov    al,BYTE PTR [edx]
10034fc5:	mov    BYTE PTR [ecx],al
10034fc7:	add    edx,0x1
10034fca:	add    ecx,0x1
10034fcd:	cmp    al,bl
10034fcf:	jne    0x10034fc3
10034fd1:	cmp    DWORD PTR [esi+0x50],0x10
10034fd5:	mov    eax,DWORD PTR [esi+0x30]
10034fd8:	lea    ebp,[eax+ebp*1+0x2]
10034fdc:	jb     0x10034fe3
10034fde:	mov    edx,DWORD PTR [esi+0x3c]
10034fe1:	jmp    0x10034fe6
10034fe3:	lea    edx,[esi+0x3c]
10034fe6:	lea    ecx,[edi+ebp*1+0x20]
10034fea:	lea    ebx,[ebx+0x0]
10034ff0:	mov    al,BYTE PTR [edx]
10034ff2:	mov    BYTE PTR [ecx],al
10034ff4:	add    edx,0x1
10034ff7:	add    ecx,0x1
10034ffa:	cmp    al,bl
10034ffc:	jne    0x10034ff0
10034ffe:	cmp    DWORD PTR [esi+0x6c],0x10
10035002:	mov    eax,DWORD PTR [esi+0x4c]
10035005:	lea    eax,[eax+ebp*1+0x1]
10035009:	jb     0x10035010
1003500b:	mov    esi,DWORD PTR [esi+0x58]
1003500e:	jmp    0x10035013
10035010:	add    esi,0x58
10035013:	lea    ecx,[eax+edi*1+0x20]
10035017:	mov    al,BYTE PTR [esi]
10035019:	mov    BYTE PTR [ecx],al
1003501b:	add    esi,0x1
1003501e:	add    ecx,0x1
10035021:	cmp    al,bl
10035023:	jne    0x10035017
10035025:	mov    ecx,DWORD PTR [esp+0x74]
10035029:	mov    edx,DWORD PTR [esp+0x70]
1003502d:	push   ebx
1003502e:	lea    eax,[esp+0x1c]
10035032:	push   eax
10035033:	mov    eax,DWORD PTR [edx]
10035035:	push   ebx
10035036:	push   ebx
10035037:	push   ecx
10035038:	push   edi
10035039:	push   0x22c02c
1003503e:	push   eax
1003503f:	call   DWORD PTR ds:0x10066260
10035045:	test   eax,eax
10035047:	jne    0x100350e7
1003504d:	push   0x18973d92
10035052:	push   0x10073740
10035057:	call   0x100042bd
1003505c:	push   0x4caad01e
10035061:	push   eax
10035062:	call   0x100042bd
10035067:	push   eax
10035068:	push   0x1e
1003506a:	push   0x1007376c
1003506f:	call   0x100042cf
10035074:	mov    esi,eax
10035076:	mov    edi,0xf
1003507b:	push   esi
1003507c:	mov    DWORD PTR [esp+0x54],edi
10035080:	mov    DWORD PTR [esp+0x50],ebx
10035084:	mov    BYTE PTR [esp+0x40],bl
10035088:	call   0x10043100
1003508d:	add    esp,0x20
10035090:	push   eax
10035091:	push   esi
10035092:	lea    ecx,[esp+0x24]
10035096:	call   0x10001336
1003509b:	lea    ecx,[esp+0x38]
1003509f:	mov    BYTE PTR [esp+0x68],0x1
100350a4:	call   0x10042ff1
100350a9:	push   0xffffffff
100350ab:	mov    BYTE PTR [esp+0x6c],0x2
100350b0:	push   ebx
100350b1:	lea    ecx,[esp+0x24]
100350b5:	push   ecx
100350b6:	lea    ecx,[esp+0x50]
100350ba:	mov    DWORD PTR [esp+0x44],0x10073634
100350c2:	mov    DWORD PTR [esp+0x68],edi
100350c6:	mov    DWORD PTR [esp+0x64],ebx
100350ca:	mov    BYTE PTR [esp+0x54],bl
100350ce:	call   0x1000123c
100350d3:	push   0x10074e8c
100350d8:	lea    edx,[esp+0x3c]
100350dc:	push   edx
100350dd:	mov    BYTE PTR [esp+0x70],0x1
100350e2:	call   0x10047aa4
100350e7:	push   edi
100350e8:	call   0x10042f82
100350ed:	add    esp,0x4
100350f0:	mov    ecx,DWORD PTR [esp+0x60]
100350f4:	mov    DWORD PTR fs:0x0,ecx
100350fb:	pop    ecx
100350fc:	pop    edi
100350fd:	pop    esi
100350fe:	pop    ebp
100350ff:	pop    ebx
10035100:	add    esp,0x58
10035103:	ret    0x8
10035106:	int3   
10035107:	int3   
10035108:	int3   
10035109:	int3   
1003510a:	int3   
1003510b:	int3   
1003510c:	int3   
1003510d:	int3   
1003510e:	int3   
1003510f:	int3   
10035110:	push   0xffffffff
10035112:	push   0x100617a8
10035117:	mov    eax,fs:0x0
1003511d:	push   eax
1003511e:	sub    esp,0x4c
10035121:	push   ebx
10035122:	push   ebp
10035123:	push   esi
10035124:	push   edi
10035125:	mov    eax,ds:0x1007e030
1003512a:	xor    eax,esp
1003512c:	push   eax
1003512d:	lea    eax,[esp+0x60]
10035131:	mov    fs:0x0,eax
10035137:	xor    ebx,ebx
10035139:	mov    DWORD PTR [esp+0x14],ebx
1003513d:	mov    eax,DWORD PTR [esp+0x74]
10035141:	mov    DWORD PTR [esp+0x68],ebx
10035145:	mov    eax,DWORD PTR [eax+0x14]
10035148:	lea    edi,[eax+0x1]
1003514b:	lea    ebp,[edi+0x20]
1003514e:	push   ebp
1003514f:	call   0x10043811
10035154:	mov    esi,eax
10035156:	add    esp,0x4
10035159:	cmp    esi,ebx
1003515b:	je     0x10035166
1003515d:	push   ebx
1003515e:	call   0x10042f82
10035163:	add    esp,0x4
10035166:	push   ebp
10035167:	push   ebx
10035168:	push   esi
10035169:	mov    DWORD PTR [esp+0x20],esi
1003516d:	call   0x10045cf0
10035172:	mov    eax,DWORD PTR [esp+0x84]
10035179:	add    esp,0xc
1003517c:	cmp    eax,ebx
1003517e:	mov    DWORD PTR [esi],edi
10035180:	je     0x10035191
10035182:	mov    ecx,DWORD PTR [eax]
10035184:	mov    DWORD PTR [esi+0x10],ecx
10035187:	mov    edx,DWORD PTR [eax+0x4]
1003518a:	mov    DWORD PTR [esi+0x14],edx
1003518d:	or     DWORD PTR [esi+0x4],0x2
10035191:	mov    eax,DWORD PTR [esp+0x7c]
10035195:	cmp    eax,ebx
10035197:	mov    edx,0x10
1003519c:	je     0x100351af
1003519e:	mov    ecx,DWORD PTR [eax]
100351a0:	mov    DWORD PTR [esi+0x18],ecx
100351a3:	mov    eax,DWORD PTR [eax+0x4]
100351a6:	mov    DWORD PTR [esi+0x1c],eax
100351a9:	or     DWORD PTR [esi+0x4],0x4
100351ad:	jmp    0x100351b2
100351af:	or     DWORD PTR [esi+0x4],edx
100351b2:	mov    ecx,DWORD PTR [esp+0x74]
100351b6:	cmp    DWORD PTR [ecx+0x18],edx
100351b9:	jb     0x100351c0
100351bb:	mov    ecx,DWORD PTR [ecx+0x4]
100351be:	jmp    0x100351c3
100351c0:	add    ecx,0x4
100351c3:	lea    edx,[esi+0x20]
100351c6:	mov    al,BYTE PTR [ecx]
100351c8:	mov    BYTE PTR [edx],al
100351ca:	add    ecx,0x1
100351cd:	add    edx,0x1
100351d0:	cmp    al,bl
100351d2:	jne    0x100351c6
100351d4:	mov    edx,DWORD PTR [esp+0x70]
100351d8:	mov    eax,DWORD PTR [edx]
100351da:	push   ebx
100351db:	lea    ecx,[esp+0x1c]
100351df:	push   ecx
100351e0:	push   ebx
100351e1:	push   ebx
100351e2:	push   ebp
100351e3:	push   esi
100351e4:	push   0x22c02c
100351e9:	push   eax
100351ea:	call   DWORD PTR ds:0x10066260
100351f0:	test   eax,eax
100351f2:	jne    0x1003527c
100351f8:	push   0x1007378c
100351fd:	push   0x1e
100351ff:	push   0x1007376c
10035204:	call   0x100042cf
10035209:	mov    esi,eax
1003520b:	mov    edi,0xf
10035210:	push   esi
10035211:	mov    DWORD PTR [esp+0x44],edi
10035215:	mov    DWORD PTR [esp+0x40],ebx
10035219:	mov    BYTE PTR [esp+0x30],bl
1003521d:	call   0x10043100
10035222:	add    esp,0x10
10035225:	push   eax
10035226:	push   esi
10035227:	lea    ecx,[esp+0x24]
1003522b:	call   0x10001336
10035230:	lea    ecx,[esp+0x38]
10035234:	mov    BYTE PTR [esp+0x68],0x1
10035239:	call   0x10042ff1
1003523e:	push   0xffffffff
10035240:	mov    BYTE PTR [esp+0x6c],0x2
10035245:	push   ebx
10035246:	lea    ecx,[esp+0x24]
1003524a:	push   ecx
1003524b:	lea    ecx,[esp+0x50]
1003524f:	mov    DWORD PTR [esp+0x44],0x10073634
10035257:	mov    DWORD PTR [esp+0x68],edi
1003525b:	mov    DWORD PTR [esp+0x64],ebx
1003525f:	mov    BYTE PTR [esp+0x54],bl
10035263:	call   0x1000123c
10035268:	push   0x10074e8c
1003526d:	lea    edx,[esp+0x3c]
10035271:	push   edx
10035272:	mov    BYTE PTR [esp+0x70],0x1
10035277:	call   0x10047aa4
1003527c:	push   esi
1003527d:	call   0x10042f82
10035282:	add    esp,0x4
10035285:	mov    ecx,DWORD PTR [esp+0x60]
10035289:	mov    DWORD PTR fs:0x0,ecx
10035290:	pop    ecx
10035291:	pop    edi
10035292:	pop    esi
10035293:	pop    ebp
10035294:	pop    ebx
10035295:	add    esp,0x58
10035298:	ret    0x10
1003529b:	int3   
1003529c:	int3   
1003529d:	int3   
1003529e:	int3   
1003529f:	int3   
100352a0:	push   0xffffffff
100352a2:	push   0x10061770
100352a7:	mov    eax,fs:0x0
100352ad:	push   eax
100352ae:	sub    esp,0x50
100352b1:	push   ebx
100352b2:	push   ebp
100352b3:	push   esi
100352b4:	push   edi
100352b5:	mov    eax,ds:0x1007e030
100352ba:	xor    eax,esp
100352bc:	push   eax
100352bd:	lea    eax,[esp+0x64]
100352c1:	mov    fs:0x0,eax
100352c7:	mov    ebp,DWORD PTR [esp+0x78]
100352cb:	mov    eax,DWORD PTR [ebp+0x14]
100352ce:	lea    esi,[eax+0x1]
100352d1:	lea    eax,[esi+0xe8]
100352d7:	push   eax
100352d8:	call   0x10043811
100352dd:	mov    edi,eax
100352df:	add    esp,0x4
100352e2:	mov    DWORD PTR [esp+0x14],edi
100352e6:	xor    ebx,ebx
100352e8:	mov    DWORD PTR [esp+0x6c],ebx
100352ec:	mov    DWORD PTR [edi],esi
100352ee:	mov    DWORD PTR [edi+0x4],ebx
100352f1:	cmp    DWORD PTR [ebp+0x18],0x10
100352f5:	jb     0x100352fc
100352f7:	mov    ecx,DWORD PTR [ebp+0x4]
100352fa:	jmp    0x100352ff
100352fc:	lea    ecx,[ebp+0x4]
100352ff:	lea    edx,[edi+0x20]
10035302:	mov    al,BYTE PTR [ecx]
10035304:	mov    BYTE PTR [edx],al
10035306:	add    ecx,0x1
10035309:	add    edx,0x1
1003530c:	cmp    al,bl
1003530e:	jne    0x10035302
10035310:	mov    eax,DWORD PTR [edi]
10035312:	mov    edx,DWORD PTR [esp+0x74]
10035316:	push   ebx
10035317:	add    eax,0x20
1003531a:	lea    ecx,[esp+0x1c]
1003531e:	push   ecx
1003531f:	push   eax
10035320:	push   edi
10035321:	push   eax
10035322:	mov    eax,DWORD PTR [edx]
10035324:	push   edi
10035325:	push   0x22c030
1003532a:	push   eax
1003532b:	call   DWORD PTR ds:0x10066260
10035331:	test   eax,eax
10035333:	jne    0x100353c8
10035339:	push   0x6723709a
1003533e:	push   0x100737b0
10035343:	call   0x100042bd
10035348:	push   eax
10035349:	push   0x1e
1003534b:	push   0x100737f0
10035350:	call   0x100042cf
10035355:	mov    esi,eax
10035357:	mov    edi,0xf
1003535c:	push   esi
1003535d:	mov    DWORD PTR [esp+0x4c],edi
10035361:	mov    DWORD PTR [esp+0x48],ebx
10035365:	mov    BYTE PTR [esp+0x38],bl
10035369:	call   0x10043100
1003536e:	add    esp,0x18
10035371:	push   eax
10035372:	push   esi
10035373:	lea    ecx,[esp+0x24]
10035377:	call   0x10001336
1003537c:	lea    ecx,[esp+0x38]
10035380:	mov    BYTE PTR [esp+0x6c],0x1
10035385:	call   0x10042ff1
1003538a:	push   0xffffffff
1003538c:	mov    BYTE PTR [esp+0x70],0x2
10035391:	push   ebx
10035392:	lea    ecx,[esp+0x24]
10035396:	push   ecx
10035397:	lea    ecx,[esp+0x50]
1003539b:	mov    DWORD PTR [esp+0x44],0x10073634
100353a3:	mov    DWORD PTR [esp+0x68],edi
100353a7:	mov    DWORD PTR [esp+0x64],ebx
100353ab:	mov    BYTE PTR [esp+0x54],bl
100353af:	call   0x1000123c
100353b4:	push   0x10074e8c
100353b9:	lea    edx,[esp+0x3c]
100353bd:	push   edx
100353be:	mov    BYTE PTR [esp+0x74],0x1
100353c3:	call   0x10047aa4
100353c8:	cmp    DWORD PTR [edi+0x8],0x2
100353cc:	je     0x100353f4
100353ce:	cmp    DWORD PTR [edi+0x8],0x1
100353d2:	jne    0x100354f7
100353d8:	push   edi
100353d9:	call   0x10042f82
100353de:	add    esp,0x4
100353e1:	xor    al,al
100353e3:	jmp    0x1003564d
100353e8:	jmp    0x100353f0
100353ea:	lea    ebx,[ebx+0x0]
100353f0:	mov    ebp,DWORD PTR [esp+0x78]
100353f4:	mov    eax,DWORD PTR [ebp+0x14]
100353f7:	mov    ebp,DWORD PTR [edi]
100353f9:	lea    ecx,[eax+0x1]
100353fc:	cmp    ebp,ecx
100353fe:	ja     0x10035403
10035400:	lea    ebp,[eax+0x1]
10035403:	lea    edx,[ebp+0x20]
10035406:	push   edx
10035407:	call   0x10043811
1003540c:	mov    esi,eax
1003540e:	add    esp,0x4
10035411:	cmp    esi,edi
10035413:	je     0x1003541e
10035415:	push   edi
10035416:	call   0x10042f82
1003541b:	add    esp,0x4
1003541e:	mov    ecx,DWORD PTR [esp+0x78]
10035422:	mov    edi,esi
10035424:	mov    DWORD PTR [esi],ebp
10035426:	mov    DWORD PTR [esp+0x14],edi
1003542a:	mov    DWORD PTR [esi+0x4],ebx
1003542d:	call   0x100011ea
10035432:	lea    edx,[esi+0x20]
10035435:	mov    cl,BYTE PTR [eax]
10035437:	mov    BYTE PTR [edx],cl
10035439:	add    eax,0x1
1003543c:	add    edx,0x1
1003543f:	cmp    cl,bl
10035441:	jne    0x10035435
10035443:	mov    eax,DWORD PTR [esi]
10035445:	mov    edx,DWORD PTR [esp+0x74]
10035449:	push   ebx
1003544a:	add    eax,0x20
1003544d:	lea    ecx,[esp+0x1c]
10035451:	push   ecx
10035452:	push   eax
10035453:	push   esi
10035454:	push   eax
10035455:	mov    eax,DWORD PTR [edx]
10035457:	push   esi
10035458:	push   0x22c030
1003545d:	push   eax
1003545e:	call   DWORD PTR ds:0x10066260
10035464:	test   eax,eax
10035466:	je     0x10035473
10035468:	cmp    DWORD PTR [esi+0x8],0x2
1003546c:	je     0x100353f0
1003546e:	jmp    0x100353ce
10035473:	push   0x10073810
10035478:	push   0x1e
1003547a:	push   0x100737f0
1003547f:	call   0x100042cf
10035484:	mov    esi,eax
10035486:	mov    edi,0xf
1003548b:	push   esi
1003548c:	mov    DWORD PTR [esp+0x44],edi
10035490:	mov    DWORD PTR [esp+0x40],ebx
10035494:	mov    BYTE PTR [esp+0x30],bl
10035498:	call   0x10043100
1003549d:	add    esp,0x10
100354a0:	push   eax
100354a1:	push   esi
100354a2:	lea    ecx,[esp+0x24]
100354a6:	call   0x10001336
100354ab:	lea    ecx,[esp+0x38]
100354af:	mov    BYTE PTR [esp+0x6c],0x3
100354b4:	call   0x10042ff1
100354b9:	push   0xffffffff
100354bb:	mov    BYTE PTR [esp+0x70],0x4
100354c0:	push   ebx
100354c1:	lea    ecx,[esp+0x24]
100354c5:	push   ecx
100354c6:	lea    ecx,[esp+0x50]
100354ca:	mov    DWORD PTR [esp+0x44],0x10073634
100354d2:	mov    DWORD PTR [esp+0x68],edi
100354d6:	mov    DWORD PTR [esp+0x64],ebx
100354da:	mov    BYTE PTR [esp+0x54],bl
100354de:	call   0x1000123c
100354e3:	push   0x10074e8c
100354e8:	lea    edx,[esp+0x3c]
100354ec:	push   edx
100354ed:	mov    BYTE PTR [esp+0x74],0x3
100354f2:	call   0x10047aa4
100354f7:	lea    eax,[edi+0x20]
100354fa:	lea    edx,[eax+0x1]
100354fd:	lea    ecx,[ecx+0x0]
10035500:	mov    cl,BYTE PTR [eax]
10035502:	add    eax,0x1
10035505:	cmp    cl,bl
10035507:	jne    0x10035500
10035509:	sub    eax,edx
1003550b:	mov    esi,eax
1003550d:	lea    ebp,[esi+edi*1+0x21]
10035511:	push   ebp
10035512:	mov    DWORD PTR [esp+0x38],0xf
1003551a:	mov    DWORD PTR [esp+0x34],ebx
1003551e:	mov    BYTE PTR [esp+0x24],bl
10035522:	call   0x10043100
10035527:	add    esp,0x4
1003552a:	push   eax
1003552b:	push   ebp
1003552c:	lea    ecx,[esp+0x24]
10035530:	call   0x10001336
10035535:	mov    ebp,DWORD PTR [esp+0x7c]
10035539:	push   0xffffffff
1003553b:	push   ebx
1003553c:	lea    eax,[esp+0x24]
10035540:	push   eax
10035541:	lea    ecx,[ebp+0x1c]
10035544:	mov    BYTE PTR [esp+0x78],0x5
10035549:	call   0x1000123c
1003554e:	mov    BYTE PTR [esp+0x6c],bl
10035552:	cmp    DWORD PTR [esp+0x34],0x10
10035557:	jb     0x10035566
10035559:	mov    ecx,DWORD PTR [esp+0x20]
1003555d:	push   ecx
1003555e:	call   0x10042f82
10035563:	add    esp,0x4
10035566:	mov    eax,DWORD PTR [ebp+0x30]
10035569:	lea    esi,[esi+eax*1+0x2]
1003556d:	lea    ebp,[esi+edi*1+0x20]
10035571:	push   ebp
10035572:	mov    DWORD PTR [esp+0x38],0xf
1003557a:	mov    DWORD PTR [esp+0x34],ebx
1003557e:	mov    BYTE PTR [esp+0x24],bl
10035582:	call   0x10043100
10035587:	add    esp,0x4
1003558a:	push   eax
1003558b:	push   ebp
1003558c:	lea    ecx,[esp+0x24]
10035590:	call   0x10001336
10035595:	mov    ebp,DWORD PTR [esp+0x7c]
10035599:	push   0xffffffff
1003559b:	push   ebx
1003559c:	lea    edx,[esp+0x24]
100355a0:	push   edx
100355a1:	lea    ecx,[ebp+0x38]
100355a4:	mov    BYTE PTR [esp+0x78],0x6
100355a9:	call   0x1000123c
100355ae:	mov    BYTE PTR [esp+0x6c],bl
100355b2:	cmp    DWORD PTR [esp+0x34],0x10
100355b7:	jb     0x100355c6
100355b9:	mov    eax,DWORD PTR [esp+0x20]
100355bd:	push   eax
100355be:	call   0x10042f82
100355c3:	add    esp,0x4
100355c6:	mov    eax,DWORD PTR [ebp+0x4c]
100355c9:	lea    esi,[esi+eax*1+0x1]
100355cd:	lea    esi,[esi+edi*1+0x20]
100355d1:	push   esi
100355d2:	mov    DWORD PTR [esp+0x38],0xf
100355da:	mov    DWORD PTR [esp+0x34],ebx
100355de:	mov    BYTE PTR [esp+0x24],bl
100355e2:	call   0x10043100
100355e7:	add    esp,0x4
100355ea:	push   eax
100355eb:	push   esi
100355ec:	lea    ecx,[esp+0x24]
100355f0:	call   0x10001336
100355f5:	push   0xffffffff
100355f7:	push   ebx
100355f8:	lea    ecx,[esp+0x24]
100355fc:	push   ecx
100355fd:	lea    ecx,[ebp+0x54]
10035600:	mov    BYTE PTR [esp+0x78],0x7
10035605:	call   0x1000123c
1003560a:	cmp    DWORD PTR [esp+0x34],0x10
1003560f:	jb     0x1003561e
10035611:	mov    edx,DWORD PTR [esp+0x20]
10035615:	push   edx
10035616:	call   0x10042f82
1003561b:	add    esp,0x4
1003561e:	mov    eax,DWORD PTR [edi+0xc]
10035621:	mov    DWORD PTR [ebp+0x70],eax
10035624:	mov    ecx,DWORD PTR [edi+0x10]
10035627:	mov    DWORD PTR [ebp+0x78],ecx
1003562a:	mov    edx,DWORD PTR [edi+0x14]
1003562d:	mov    DWORD PTR [ebp+0x7c],edx
10035630:	mov    eax,DWORD PTR [edi+0x18]
10035633:	mov    DWORD PTR [ebp+0x80],eax
10035639:	mov    ecx,DWORD PTR [edi+0x1c]
1003563c:	push   edi
1003563d:	mov    DWORD PTR [ebp+0x84],ecx
10035643:	call   0x10042f82
10035648:	add    esp,0x4
1003564b:	mov    al,0x1
1003564d:	mov    ecx,DWORD PTR [esp+0x64]
10035651:	mov    DWORD PTR fs:0x0,ecx
10035658:	pop    ecx
10035659:	pop    edi
1003565a:	pop    esi
1003565b:	pop    ebp
1003565c:	pop    ebx
1003565d:	add    esp,0x5c
10035660:	ret    0xc
10035663:	int3   
10035664:	int3   
10035665:	int3   
10035666:	int3   
10035667:	int3   
10035668:	int3   
10035669:	int3   
1003566a:	int3   
1003566b:	int3   
1003566c:	int3   
1003566d:	int3   
1003566e:	int3   
1003566f:	int3   
10035670:	push   ebp
10035671:	mov    ebp,esp
10035673:	and    esp,0xfffffff8
10035676:	push   0xffffffff
10035678:	push   0x10061708
1003567d:	mov    eax,fs:0x0
10035683:	push   eax
10035684:	sub    esp,0x58
10035687:	push   ebx
10035688:	push   esi
10035689:	push   edi
1003568a:	mov    eax,ds:0x1007e030
1003568f:	xor    eax,esp
10035691:	push   eax
10035692:	lea    eax,[esp+0x68]
10035696:	mov    fs:0x0,eax
1003569c:	mov    ebx,ecx
1003569e:	xor    eax,eax
100356a0:	mov    DWORD PTR [esp+0x18],eax
100356a4:	mov    ecx,DWORD PTR [ebp+0xc]
100356a7:	mov    DWORD PTR [esp+0x70],eax
100356ab:	mov    eax,DWORD PTR [ebx+0x14]
100356ae:	mov    ecx,DWORD PTR [ecx+0x14]
100356b1:	lea    edi,[eax+ecx*1+0x4]
100356b5:	lea    eax,[edi+0xc]
100356b8:	push   eax
100356b9:	mov    DWORD PTR [esp+0x18],eax
100356bd:	call   0x10043811
100356c2:	mov    esi,eax
100356c4:	add    esp,0x4
100356c7:	test   esi,esi
100356c9:	je     0x100356d5
100356cb:	push   0x0
100356cd:	call   0x10042f82
100356d2:	add    esp,0x4
100356d5:	mov    edx,DWORD PTR [esp+0x14]
100356d9:	push   edx
100356da:	push   0x0
100356dc:	push   esi
100356dd:	mov    DWORD PTR [esp+0x24],esi
100356e1:	call   0x10045cf0
100356e6:	mov    DWORD PTR [esi],edi
100356e8:	mov    edi,0x10
100356ed:	add    esp,0xc
100356f0:	cmp    DWORD PTR [ebx+0x18],edi
100356f3:	jb     0x100356fa
100356f5:	mov    ecx,DWORD PTR [ebx+0x4]
100356f8:	jmp    0x100356fd
100356fa:	lea    ecx,[ebx+0x4]
100356fd:	lea    edx,[esi+0xc]
10035700:	mov    al,BYTE PTR [ecx]
10035702:	mov    BYTE PTR [edx],al
10035704:	add    ecx,0x1
10035707:	add    edx,0x1
1003570a:	test   al,al
1003570c:	jne    0x10035700
1003570e:	mov    edx,DWORD PTR [ebp+0xc]
10035711:	cmp    DWORD PTR [edx+0x18],edi
10035714:	mov    ebx,DWORD PTR [ebx+0x14]
10035717:	jb     0x1003571e
10035719:	mov    edx,DWORD PTR [edx+0x4]
1003571c:	jmp    0x10035721
1003571e:	add    edx,0x4
10035721:	lea    ecx,[ebx+esi*1+0xd]
10035725:	mov    al,BYTE PTR [edx]
10035727:	mov    BYTE PTR [ecx],al
10035729:	add    edx,0x1
1003572c:	add    ecx,0x1
1003572f:	test   al,al
10035731:	jne    0x10035725
10035733:	mov    ecx,DWORD PTR [esp+0x14]
10035737:	mov    edx,DWORD PTR [ebp+0x8]
1003573a:	xor    ebx,ebx
1003573c:	push   ebx
1003573d:	lea    eax,[esp+0x20]
10035741:	push   eax
10035742:	mov    eax,DWORD PTR [edx]
10035744:	push   ebx
10035745:	push   ebx
10035746:	push   ecx
10035747:	push   esi
10035748:	push   0x22c084
1003574d:	push   eax
1003574e:	call   DWORD PTR ds:0x10066260
10035754:	test   eax,eax
10035756:	jne    0x100357eb
1003575c:	push   0x44ae736a
10035761:	push   0x10073848
10035766:	call   0x100042bd
1003576b:	push   eax
1003576c:	push   0x16
1003576e:	push   0x10073874
10035773:	call   0x100042cf
10035778:	mov    esi,eax
1003577a:	mov    edi,0xf
1003577f:	push   esi
10035780:	mov    DWORD PTR [esp+0x50],edi
10035784:	mov    DWORD PTR [esp+0x4c],ebx
10035788:	mov    BYTE PTR [esp+0x3c],bl
1003578c:	call   0x10043100
10035791:	add    esp,0x18
10035794:	push   eax
10035795:	push   esi
10035796:	lea    ecx,[esp+0x28]
1003579a:	call   0x10001336
1003579f:	lea    ecx,[esp+0x3c]
100357a3:	mov    BYTE PTR [esp+0x70],0x1
100357a8:	call   0x10042ff1
100357ad:	push   0xffffffff
100357af:	mov    BYTE PTR [esp+0x74],0x2
100357b4:	push   ebx
100357b5:	lea    ecx,[esp+0x28]
100357b9:	push   ecx
100357ba:	lea    ecx,[esp+0x54]
100357be:	mov    DWORD PTR [esp+0x48],0x10073634
100357c6:	mov    DWORD PTR [esp+0x6c],edi
100357ca:	mov    DWORD PTR [esp+0x68],ebx
100357ce:	mov    BYTE PTR [esp+0x58],bl
100357d2:	call   0x1000123c
100357d7:	push   0x10074e8c
100357dc:	lea    edx,[esp+0x40]
100357e0:	push   edx
100357e1:	mov    BYTE PTR [esp+0x78],0x1
100357e6:	call   0x10047aa4
100357eb:	push   esi
100357ec:	call   0x10042f82
100357f1:	add    esp,0x4
100357f4:	mov    ecx,DWORD PTR [esp+0x68]
100357f8:	mov    DWORD PTR fs:0x0,ecx
100357ff:	pop    ecx
10035800:	pop    edi
10035801:	pop    esi
10035802:	pop    ebx
10035803:	mov    esp,ebp
10035805:	pop    ebp
10035806:	ret    0x8
10035809:	int3   
1003580a:	int3   
1003580b:	int3   
1003580c:	int3   
1003580d:	int3   
1003580e:	int3   
1003580f:	int3   
10035810:	push   ebp
10035811:	mov    ebp,esp
10035813:	and    esp,0xfffffff8
10035816:	push   0xffffffff
10035818:	push   0x100616c8
1003581d:	mov    eax,fs:0x0
10035823:	push   eax
10035824:	sub    esp,0x50
10035827:	push   ebx
10035828:	push   esi
10035829:	push   edi
1003582a:	mov    eax,ds:0x1007e030
1003582f:	xor    eax,esp
10035831:	push   eax
10035832:	lea    eax,[esp+0x60]
10035836:	mov    fs:0x0,eax
1003583c:	mov    ebx,DWORD PTR [ebp+0x10]
1003583f:	mov    DWORD PTR [esp+0x14],0x0
10035847:	mov    esi,DWORD PTR [ebx+0x14]
1003584a:	lea    eax,[esi+0x40d]
10035850:	push   eax
10035851:	call   0x10043811
10035856:	mov    edi,eax
10035858:	add    esp,0x4
1003585b:	mov    DWORD PTR [esp+0x10],edi
1003585f:	add    esi,0x401
10035865:	mov    DWORD PTR [esp+0x68],0x0
1003586d:	mov    DWORD PTR [edi],esi
1003586f:	cmp    DWORD PTR [ebx+0x18],0x10
10035873:	jb     0x1003587a
10035875:	mov    ecx,DWORD PTR [ebx+0x4]
10035878:	jmp    0x1003587d
1003587a:	lea    ecx,[ebx+0x4]
1003587d:	lea    edx,[edi+0xc]
10035880:	mov    al,BYTE PTR [ecx]
10035882:	mov    BYTE PTR [edx],al
10035884:	add    ecx,0x1
10035887:	add    edx,0x1
1003588a:	test   al,al
1003588c:	jne    0x10035880
1003588e:	mov    eax,DWORD PTR [edi]
10035890:	mov    edx,DWORD PTR [ebp+0x8]
10035893:	push   0x0
10035895:	add    eax,0xc
10035898:	lea    ecx,[esp+0x18]
1003589c:	push   ecx
1003589d:	push   eax
1003589e:	push   edi
1003589f:	push   eax
100358a0:	mov    eax,DWORD PTR [edx]
100358a2:	push   edi
100358a3:	push   0x22c088
100358a8:	push   eax
100358a9:	call   DWORD PTR ds:0x10066260
100358af:	test   eax,eax
100358b1:	jne    0x1003593d
100358b7:	push   0x1007388c
100358bc:	push   0x1b
100358be:	push   0x100738b4
100358c3:	call   0x100042cf
100358c8:	mov    esi,eax
100358ca:	xor    ebx,ebx
100358cc:	mov    edi,0xf
100358d1:	push   esi
100358d2:	mov    DWORD PTR [esp+0x40],edi
100358d6:	mov    DWORD PTR [esp+0x3c],ebx
100358da:	mov    BYTE PTR [esp+0x2c],bl
100358de:	call   0x10043100
100358e3:	add    esp,0x10
100358e6:	push   eax
100358e7:	push   esi
100358e8:	lea    ecx,[esp+0x20]
100358ec:	call   0x10001336
100358f1:	lea    ecx,[esp+0x34]
100358f5:	mov    BYTE PTR [esp+0x68],0x1
100358fa:	call   0x10042ff1
100358ff:	push   0xffffffff
10035901:	mov    BYTE PTR [esp+0x6c],0x2
10035906:	push   ebx
10035907:	lea    ecx,[esp+0x20]
1003590b:	push   ecx
1003590c:	lea    ecx,[esp+0x4c]
10035910:	mov    DWORD PTR [esp+0x40],0x10073634
10035918:	mov    DWORD PTR [esp+0x64],edi
1003591c:	mov    DWORD PTR [esp+0x60],ebx
10035920:	mov    BYTE PTR [esp+0x50],bl
10035924:	call   0x1000123c
10035929:	push   0x10074e8c
1003592e:	lea    edx,[esp+0x38]
10035932:	push   edx
10035933:	mov    BYTE PTR [esp+0x70],0x1
10035938:	call   0x10047aa4
1003593d:	cmp    DWORD PTR [edi+0x8],0x2
10035941:	je     0x10035983
10035943:	cmp    DWORD PTR [edi+0x8],0x0
10035947:	je     0x10035aae
1003594d:	mov    esi,DWORD PTR [ebp+0xc]
10035950:	mov    DWORD PTR [esi+0x18],0xf
10035957:	mov    DWORD PTR [esi+0x14],0x0
1003595e:	push   0x1006cd08
10035963:	mov    BYTE PTR [esi+0x4],0x0
10035967:	call   0x10043100
1003596c:	add    esp,0x4
1003596f:	push   eax
10035970:	push   0x1006cd08
10035975:	jmp    0x10035ae2
1003597a:	lea    ebx,[ebx+0x0]
10035980:	mov    ebx,DWORD PTR [ebp+0x10]
10035983:	mov    eax,DWORD PTR [ebx+0x14]
10035986:	mov    ebx,DWORD PTR [edi]
10035988:	lea    ecx,[eax+0x1]
1003598b:	cmp    ebx,ecx
1003598d:	ja     0x10035992
1003598f:	lea    ebx,[eax+0x1]
10035992:	lea    edx,[ebx+0xc]
10035995:	push   edx
10035996:	call   0x10043811
1003599b:	mov    esi,eax
1003599d:	add    esp,0x4
100359a0:	cmp    esi,edi
100359a2:	je     0x100359ad
100359a4:	push   edi
100359a5:	call   0x10042f82
100359aa:	add    esp,0x4
100359ad:	mov    ecx,DWORD PTR [ebp+0x10]
100359b0:	mov    edi,esi
100359b2:	mov    DWORD PTR [esp+0x10],edi
100359b6:	mov    DWORD PTR [esi],ebx
100359b8:	call   0x100011ea
100359bd:	lea    edx,[esi+0xc]
100359c0:	mov    cl,BYTE PTR [eax]
100359c2:	mov    BYTE PTR [edx],cl
100359c4:	add    eax,0x1
100359c7:	add    edx,0x1
100359ca:	test   cl,cl
100359cc:	jne    0x100359c0
100359ce:	mov    eax,DWORD PTR [esi]
100359d0:	mov    edx,DWORD PTR [ebp+0x8]
100359d3:	push   0x0
100359d5:	add    eax,0xc
100359d8:	lea    ecx,[esp+0x18]
100359dc:	push   ecx
100359dd:	push   eax
100359de:	push   esi
100359df:	push   eax
100359e0:	mov    eax,DWORD PTR [edx]
100359e2:	push   esi
100359e3:	push   0x22c088
100359e8:	push   eax
100359e9:	call   DWORD PTR ds:0x10066260
100359ef:	test   eax,eax
100359f1:	je     0x100359fe
100359f3:	cmp    DWORD PTR [esi+0x8],0x2
100359f7:	je     0x10035980
100359f9:	jmp    0x10035943
100359fe:	push   0x2acd4aae
10035a03:	push   0x100738d0
10035a08:	call   0x100042bd
10035a0d:	push   0x55a428d8
10035a12:	push   eax
10035a13:	call   0x100042bd
10035a18:	push   0x3c12bd30
10035a1d:	push   eax
10035a1e:	call   0x100042bd
10035a23:	push   eax
10035a24:	push   0x16
10035a26:	push   0x10073904
10035a2b:	call   0x100042cf
10035a30:	mov    esi,eax
10035a32:	mov    edi,0xf
10035a37:	push   esi
10035a38:	mov    DWORD PTR [esp+0x58],edi
10035a3c:	mov    DWORD PTR [esp+0x54],0x0
10035a44:	mov    BYTE PTR [esp+0x44],0x0
10035a49:	call   0x10043100
10035a4e:	add    esp,0x28
10035a51:	push   eax
10035a52:	push   esi
10035a53:	lea    ecx,[esp+0x20]
10035a57:	call   0x10001336
10035a5c:	mov    bl,0x3
10035a5e:	lea    ecx,[esp+0x34]
10035a62:	mov    BYTE PTR [esp+0x68],bl
10035a66:	call   0x10042ff1
10035a6b:	push   0xffffffff
10035a6d:	mov    BYTE PTR [esp+0x6c],0x4
10035a72:	push   0x0
10035a74:	lea    ecx,[esp+0x20]
10035a78:	push   ecx
10035a79:	lea    ecx,[esp+0x4c]
10035a7d:	mov    DWORD PTR [esp+0x40],0x10073634
10035a85:	mov    DWORD PTR [esp+0x64],edi
10035a89:	mov    DWORD PTR [esp+0x60],0x0
10035a91:	mov    BYTE PTR [esp+0x50],0x0
10035a96:	call   0x1000123c
10035a9b:	push   0x10074e8c
10035aa0:	lea    edx,[esp+0x38]
10035aa4:	push   edx
10035aa5:	mov    BYTE PTR [esp+0x70],bl
10035aa9:	call   0x10047aa4
10035aae:	lea    eax,[edi+0xc]
10035ab1:	lea    edx,[eax+0x1]
10035ab4:	mov    cl,BYTE PTR [eax]
10035ab6:	add    eax,0x1
10035ab9:	test   cl,cl
10035abb:	jne    0x10035ab4
10035abd:	mov    esi,DWORD PTR [ebp+0xc]
10035ac0:	sub    eax,edx
10035ac2:	lea    ebx,[eax+edi*1+0xd]
10035ac6:	mov    DWORD PTR [esi+0x18],0xf
10035acd:	mov    DWORD PTR [esi+0x14],0x0
10035ad4:	push   ebx
10035ad5:	mov    BYTE PTR [esi+0x4],cl
10035ad8:	call   0x10043100
10035add:	add    esp,0x4
10035ae0:	push   eax
10035ae1:	push   ebx
10035ae2:	mov    ecx,esi
10035ae4:	call   0x10001336
10035ae9:	push   edi
10035aea:	call   0x10042f82
10035aef:	mov    eax,esi
10035af1:	add    esp,0x4
10035af4:	mov    ecx,DWORD PTR [esp+0x60]
10035af8:	mov    DWORD PTR fs:0x0,ecx
10035aff:	pop    ecx
10035b00:	pop    edi
10035b01:	pop    esi
10035b02:	pop    ebx
10035b03:	mov    esp,ebp
10035b05:	pop    ebp
10035b06:	ret    0xc
10035b09:	int3   
10035b0a:	int3   
10035b0b:	int3   
10035b0c:	int3   
10035b0d:	int3   
10035b0e:	int3   
10035b0f:	int3   
10035b10:	push   ebp
10035b11:	mov    ebp,esp
10035b13:	and    esp,0xfffffff8
10035b16:	push   0xffffffff
10035b18:	push   0x10061680
10035b1d:	mov    eax,fs:0x0
10035b23:	push   eax
10035b24:	sub    esp,0x64
10035b27:	push   ebx
10035b28:	push   esi
10035b29:	mov    eax,ds:0x1007e030
10035b2e:	xor    eax,esp
10035b30:	push   eax
10035b31:	lea    eax,[esp+0x70]
10035b35:	mov    fs:0x0,eax
10035b3b:	mov    esi,ecx
10035b3d:	mov    eax,DWORD PTR [ebp+0xc]
10035b40:	xor    ebx,ebx
10035b42:	push   ebx
10035b43:	lea    ecx,[esp+0x14]
10035b47:	push   ecx
10035b48:	mov    ecx,DWORD PTR [ebp+0x8]
10035b4b:	push   0x10
10035b4d:	lea    edx,[esp+0x20]
10035b51:	push   edx
10035b52:	push   0x10
10035b54:	mov    DWORD PTR [esp+0x28],eax
10035b58:	mov    eax,edx
10035b5a:	mov    edx,DWORD PTR [ecx]
10035b5c:	push   eax
10035b5d:	push   0x22c020
10035b62:	push   edx
10035b63:	call   DWORD PTR ds:0x10066260
10035b69:	test   eax,eax
10035b6b:	jne    0x10035c04
10035b71:	push   0x4fcea92a
10035b76:	push   0x1007391c
10035b7b:	call   0x100042bd
10035b80:	push   eax
10035b81:	push   0x1e
10035b83:	push   0x10073954
10035b88:	call   0x100042cf
10035b8d:	mov    esi,eax
10035b8f:	push   esi
10035b90:	mov    DWORD PTR [esp+0x58],0xf
10035b98:	mov    DWORD PTR [esp+0x54],ebx
10035b9c:	mov    BYTE PTR [esp+0x44],bl
10035ba0:	call   0x10043100
10035ba5:	add    esp,0x18
10035ba8:	push   eax
10035ba9:	push   esi
10035baa:	lea    ecx,[esp+0x30]
10035bae:	call   0x10001336
10035bb3:	lea    ecx,[esp+0x44]
10035bb7:	mov    DWORD PTR [esp+0x78],ebx
10035bbb:	call   0x10042ff1
10035bc0:	push   0xffffffff
10035bc2:	mov    BYTE PTR [esp+0x7c],0x1
10035bc7:	push   ebx
10035bc8:	lea    eax,[esp+0x30]
10035bcc:	push   eax
10035bcd:	lea    ecx,[esp+0x5c]
10035bd1:	mov    DWORD PTR [esp+0x50],0x10073634
10035bd9:	mov    DWORD PTR [esp+0x74],0xf
10035be1:	mov    DWORD PTR [esp+0x70],ebx
10035be5:	mov    BYTE PTR [esp+0x60],bl
10035be9:	call   0x1000123c
10035bee:	push   0x10074e8c
10035bf3:	lea    ecx,[esp+0x48]
10035bf7:	push   ecx
10035bf8:	mov    BYTE PTR [esp+0x80],bl
10035bff:	call   0x10047aa4
10035c04:	mov    eax,DWORD PTR [esp+0x20]
10035c08:	mov    edx,DWORD PTR [esp+0x1c]
10035c0c:	mov    DWORD PTR [esi+0x4],eax
10035c0f:	mov    DWORD PTR [esi],edx
10035c11:	mov    eax,esi
10035c13:	mov    ecx,DWORD PTR [esp+0x70]
10035c17:	mov    DWORD PTR fs:0x0,ecx
10035c1e:	pop    ecx
10035c1f:	pop    esi
10035c20:	pop    ebx
10035c21:	mov    esp,ebp
10035c23:	pop    ebp
10035c24:	ret    0x8
10035c27:	int3   
10035c28:	int3   
10035c29:	int3   
10035c2a:	int3   
10035c2b:	int3   
10035c2c:	int3   
10035c2d:	int3   
10035c2e:	int3   
10035c2f:	int3   
10035c30:	push   ebp
10035c31:	mov    ebp,esp
10035c33:	and    esp,0xfffffff8
10035c36:	push   0xffffffff
10035c38:	push   0x10061680
10035c3d:	mov    eax,fs:0x0
10035c43:	push   eax
10035c44:	sub    esp,0x64
10035c47:	push   ebx
10035c48:	push   esi
10035c49:	mov    eax,ds:0x1007e030
10035c4e:	xor    eax,esp
10035c50:	push   eax
10035c51:	lea    eax,[esp+0x70]
10035c55:	mov    fs:0x0,eax
10035c5b:	mov    eax,DWORD PTR [ebp+0xc]
10035c5e:	mov    edx,DWORD PTR [eax]
10035c60:	mov    eax,DWORD PTR [eax+0x4]
10035c63:	mov    DWORD PTR [esp+0x14],ecx
10035c67:	xor    ebx,ebx
10035c69:	push   ebx
10035c6a:	lea    ecx,[esp+0x14]
10035c6e:	push   ecx
10035c6f:	mov    ecx,DWORD PTR [ebp+0x8]
10035c72:	push   0x10
10035c74:	mov    DWORD PTR [esp+0x28],edx
10035c78:	lea    edx,[esp+0x20]
10035c7c:	push   edx
10035c7d:	push   0x10
10035c7f:	mov    DWORD PTR [esp+0x34],eax
10035c83:	mov    eax,edx
10035c85:	mov    edx,DWORD PTR [ecx]
10035c87:	push   eax
10035c88:	push   0x22c024
10035c8d:	push   edx
10035c8e:	call   DWORD PTR ds:0x10066260
10035c94:	test   eax,eax
10035c96:	jne    0x10035d24
10035c9c:	push   0x10073974
10035ca1:	push   0x1e
10035ca3:	push   0x100739a8
10035ca8:	call   0x100042cf
10035cad:	mov    esi,eax
10035caf:	push   esi
10035cb0:	mov    DWORD PTR [esp+0x50],0xf
10035cb8:	mov    DWORD PTR [esp+0x4c],ebx
10035cbc:	mov    BYTE PTR [esp+0x3c],bl
10035cc0:	call   0x10043100
10035cc5:	add    esp,0x10
10035cc8:	push   eax
10035cc9:	push   esi
10035cca:	lea    ecx,[esp+0x30]
10035cce:	call   0x10001336
10035cd3:	lea    ecx,[esp+0x44]
10035cd7:	mov    DWORD PTR [esp+0x78],ebx
10035cdb:	call   0x10042ff1
10035ce0:	push   0xffffffff
10035ce2:	mov    BYTE PTR [esp+0x7c],0x1
10035ce7:	push   ebx
10035ce8:	lea    eax,[esp+0x30]
10035cec:	push   eax
10035ced:	lea    ecx,[esp+0x5c]
10035cf1:	mov    DWORD PTR [esp+0x50],0x10073634
10035cf9:	mov    DWORD PTR [esp+0x74],0xf
10035d01:	mov    DWORD PTR [esp+0x70],ebx
10035d05:	mov    BYTE PTR [esp+0x60],bl
10035d09:	call   0x1000123c
10035d0e:	push   0x10074e8c
10035d13:	lea    ecx,[esp+0x48]
10035d17:	push   ecx
10035d18:	mov    BYTE PTR [esp+0x80],bl
10035d1f:	call   0x10047aa4
10035d24:	mov    ecx,DWORD PTR [esp+0x70]
10035d28:	mov    DWORD PTR fs:0x0,ecx
10035d2f:	pop    ecx
10035d30:	pop    esi
10035d31:	pop    ebx
10035d32:	mov    esp,ebp
10035d34:	pop    ebp
10035d35:	ret    0x8
10035d38:	int3   
10035d39:	int3   
10035d3a:	int3   
10035d3b:	int3   
10035d3c:	int3   
10035d3d:	int3   
10035d3e:	int3   
10035d3f:	int3   
10035d40:	push   0xffffffff
10035d42:	push   0x10061620
10035d47:	mov    eax,fs:0x0
10035d4d:	push   eax
10035d4e:	sub    esp,0x4c
10035d51:	push   ebx
10035d52:	push   esi
10035d53:	mov    eax,ds:0x1007e030
10035d58:	xor    eax,esp
10035d5a:	push   eax
10035d5b:	lea    eax,[esp+0x58]
10035d5f:	mov    fs:0x0,eax
10035d65:	mov    eax,DWORD PTR [esp+0x6c]
10035d69:	xor    ebx,ebx
10035d6b:	push   ebx
10035d6c:	lea    edx,[esp+0x70]
10035d70:	push   edx
10035d71:	mov    edx,DWORD PTR [esp+0x70]
10035d75:	push   0x8
10035d77:	mov    DWORD PTR [esp+0x18],eax
10035d7b:	lea    eax,[esp+0x18]
10035d7f:	push   eax
10035d80:	push   0x8
10035d82:	mov    DWORD PTR [esp+0x24],ecx
10035d86:	mov    ecx,eax
10035d88:	mov    eax,DWORD PTR [edx]
10035d8a:	push   ecx
10035d8b:	push   0x22c05c
10035d90:	push   eax
10035d91:	call   DWORD PTR ds:0x10066260
10035d97:	test   eax,eax
10035d99:	jne    0x10035e3a
10035d9f:	push   0x559c01e2
10035da4:	push   0x100739c8
10035da9:	call   0x100042bd
10035dae:	push   0x4aac511e
10035db3:	push   eax
10035db4:	call   0x100042bd
10035db9:	push   eax
10035dba:	push   0x1b
10035dbc:	push   0x100739f0
10035dc1:	call   0x100042cf
10035dc6:	mov    esi,eax
10035dc8:	push   esi
10035dc9:	mov    DWORD PTR [esp+0x4c],0xf
10035dd1:	mov    DWORD PTR [esp+0x48],ebx
10035dd5:	mov    BYTE PTR [esp+0x38],bl
10035dd9:	call   0x10043100
10035dde:	add    esp,0x20
10035de1:	push   eax
10035de2:	push   esi
10035de3:	lea    ecx,[esp+0x1c]
10035de7:	call   0x10001336
10035dec:	lea    ecx,[esp+0x30]
10035df0:	mov    DWORD PTR [esp+0x60],ebx
10035df4:	call   0x10042ff1
10035df9:	push   0xffffffff
10035dfb:	mov    BYTE PTR [esp+0x64],0x1
10035e00:	push   ebx
10035e01:	lea    ecx,[esp+0x1c]
10035e05:	push   ecx
10035e06:	lea    ecx,[esp+0x48]
10035e0a:	mov    DWORD PTR [esp+0x3c],0x10073634
10035e12:	mov    DWORD PTR [esp+0x60],0xf
10035e1a:	mov    DWORD PTR [esp+0x5c],ebx
10035e1e:	mov    BYTE PTR [esp+0x4c],bl
10035e22:	call   0x1000123c
10035e27:	push   0x10074e8c
10035e2c:	lea    edx,[esp+0x34]
10035e30:	push   edx
10035e31:	mov    BYTE PTR [esp+0x68],bl
10035e35:	call   0x10047aa4
10035e3a:	mov    ecx,DWORD PTR [esp+0x58]
10035e3e:	mov    DWORD PTR fs:0x0,ecx
10035e45:	pop    ecx
10035e46:	pop    esi
10035e47:	pop    ebx
10035e48:	add    esp,0x58
10035e4b:	ret    0x8
10035e4e:	int3   
10035e4f:	int3   
10035e50:	push   ebp
10035e51:	mov    ebp,esp
10035e53:	and    esp,0xfffffff8
10035e56:	push   0xffffffff
10035e58:	push   0x10061650
10035e5d:	mov    eax,fs:0x0
10035e63:	push   eax
10035e64:	sub    esp,0x54
10035e67:	push   ebx
10035e68:	push   esi
10035e69:	mov    eax,ds:0x1007e030
10035e6e:	xor    eax,esp
10035e70:	push   eax
10035e71:	lea    eax,[esp+0x60]
10035e75:	mov    fs:0x0,eax
10035e7b:	xor    ebx,ebx
10035e7d:	push   ebx
10035e7e:	lea    eax,[esp+0x10]
10035e82:	push   eax
10035e83:	mov    eax,DWORD PTR [ebp+0x8]
10035e86:	push   0x8
10035e88:	lea    ecx,[esp+0x1c]
10035e8c:	push   ecx
10035e8d:	push   0x8
10035e8f:	mov    edx,ecx
10035e91:	mov    ecx,DWORD PTR [eax]
10035e93:	push   edx
10035e94:	push   0x22c060
10035e99:	push   ecx
10035e9a:	mov    DWORD PTR [esp+0x30],ebx
10035e9e:	mov    DWORD PTR [esp+0x34],ebx
10035ea2:	call   DWORD PTR ds:0x10066260
10035ea8:	test   eax,eax
10035eaa:	jne    0x10035f40
10035eb0:	push   0x4043bec8
10035eb5:	push   0x10073a0c
10035eba:	call   0x100042bd
10035ebf:	push   eax
10035ec0:	push   0x1b
10035ec2:	push   0x100739f0
10035ec7:	call   0x100042cf
10035ecc:	mov    esi,eax
10035ece:	push   esi
10035ecf:	mov    DWORD PTR [esp+0x48],0xf
10035ed7:	mov    DWORD PTR [esp+0x44],ebx
10035edb:	mov    BYTE PTR [esp+0x34],bl
10035edf:	call   0x10043100
10035ee4:	add    esp,0x18
10035ee7:	push   eax
10035ee8:	push   esi
10035ee9:	lea    ecx,[esp+0x20]
10035eed:	call   0x10001336
10035ef2:	lea    ecx,[esp+0x34]
10035ef6:	mov    DWORD PTR [esp+0x68],ebx
10035efa:	call   0x10042ff1
10035eff:	push   0xffffffff
10035f01:	mov    BYTE PTR [esp+0x6c],0x1
10035f06:	push   ebx
10035f07:	lea    edx,[esp+0x20]
10035f0b:	push   edx
10035f0c:	lea    ecx,[esp+0x4c]
10035f10:	mov    DWORD PTR [esp+0x40],0x10073634
10035f18:	mov    DWORD PTR [esp+0x64],0xf
10035f20:	mov    DWORD PTR [esp+0x60],ebx
10035f24:	mov    BYTE PTR [esp+0x50],bl
10035f28:	call   0x1000123c
10035f2d:	push   0x10074e8c
10035f32:	lea    eax,[esp+0x38]
10035f36:	push   eax
10035f37:	mov    BYTE PTR [esp+0x70],bl
10035f3b:	call   0x10047aa4
10035f40:	mov    eax,DWORD PTR [esp+0x14]
10035f44:	mov    ecx,DWORD PTR [esp+0x60]
10035f48:	mov    DWORD PTR fs:0x0,ecx
10035f4f:	pop    ecx
10035f50:	pop    esi
10035f51:	pop    ebx
10035f52:	mov    esp,ebp
10035f54:	pop    ebp
10035f55:	ret    0x4
10035f58:	int3   
10035f59:	int3   
10035f5a:	int3   
10035f5b:	int3   
10035f5c:	int3   
10035f5d:	int3   
10035f5e:	int3   
10035f5f:	int3   
10035f60:	push   0xffffffff
10035f62:	push   0x10061620
10035f67:	mov    eax,fs:0x0
10035f6d:	push   eax
10035f6e:	sub    esp,0x4c
10035f71:	push   ebx
10035f72:	push   esi
10035f73:	mov    eax,ds:0x1007e030
10035f78:	xor    eax,esp
10035f7a:	push   eax
10035f7b:	lea    eax,[esp+0x58]
10035f7f:	mov    fs:0x0,eax
10035f85:	mov    eax,DWORD PTR [esp+0x6c]
10035f89:	xor    ebx,ebx
10035f8b:	push   ebx
10035f8c:	lea    edx,[esp+0x70]
10035f90:	push   edx
10035f91:	mov    edx,DWORD PTR [esp+0x70]
10035f95:	push   0x8
10035f97:	mov    DWORD PTR [esp+0x18],eax
10035f9b:	lea    eax,[esp+0x18]
10035f9f:	push   eax
10035fa0:	push   0x8
10035fa2:	mov    DWORD PTR [esp+0x24],ecx
10035fa6:	mov    ecx,eax
10035fa8:	mov    eax,DWORD PTR [edx]
10035faa:	push   ecx
10035fab:	push   0x22c07c
10035fb0:	push   eax
10035fb1:	call   DWORD PTR ds:0x10066260
10035fb7:	test   eax,eax
10035fb9:	jne    0x10036044
10035fbf:	push   0x10073a40
10035fc4:	push   0x1b
10035fc6:	push   0x100739f0
10035fcb:	call   0x100042cf
10035fd0:	mov    esi,eax
10035fd2:	push   esi
10035fd3:	mov    DWORD PTR [esp+0x3c],0xf
10035fdb:	mov    DWORD PTR [esp+0x38],ebx
10035fdf:	mov    BYTE PTR [esp+0x28],bl
10035fe3:	call   0x10043100
10035fe8:	add    esp,0x10
10035feb:	push   eax
10035fec:	push   esi
10035fed:	lea    ecx,[esp+0x1c]
10035ff1:	call   0x10001336
10035ff6:	lea    ecx,[esp+0x30]
10035ffa:	mov    DWORD PTR [esp+0x60],ebx
10035ffe:	call   0x10042ff1
10036003:	push   0xffffffff
10036005:	mov    BYTE PTR [esp+0x64],0x1
1003600a:	push   ebx
1003600b:	lea    ecx,[esp+0x1c]
1003600f:	push   ecx
10036010:	lea    ecx,[esp+0x48]
10036014:	mov    DWORD PTR [esp+0x3c],0x10073634
1003601c:	mov    DWORD PTR [esp+0x60],0xf
10036024:	mov    DWORD PTR [esp+0x5c],ebx
10036028:	mov    BYTE PTR [esp+0x4c],bl
1003602c:	call   0x1000123c
10036031:	push   0x10074e8c
10036036:	lea    edx,[esp+0x34]
1003603a:	push   edx
1003603b:	mov    BYTE PTR [esp+0x68],bl
1003603f:	call   0x10047aa4
10036044:	mov    ecx,DWORD PTR [esp+0x58]
10036048:	mov    DWORD PTR fs:0x0,ecx
1003604f:	pop    ecx
10036050:	pop    esi
10036051:	pop    ebx
10036052:	add    esp,0x58
10036055:	ret    0x8
10036058:	int3   
10036059:	int3   
1003605a:	int3   
1003605b:	int3   
1003605c:	int3   
1003605d:	int3   
1003605e:	int3   
1003605f:	int3   
10036060:	push   0xffffffff
10036062:	push   0x100615f0
10036067:	mov    eax,fs:0x0
1003606d:	push   eax
1003606e:	sub    esp,0x50
10036071:	push   ebx
10036072:	push   esi
10036073:	mov    eax,ds:0x1007e030
10036078:	xor    eax,esp
1003607a:	push   eax
1003607b:	lea    eax,[esp+0x5c]
1003607f:	mov    fs:0x0,eax
10036085:	xor    ebx,ebx
10036087:	push   ebx
10036088:	lea    eax,[esp+0x70]
1003608c:	push   eax
1003608d:	mov    eax,DWORD PTR [esp+0x74]
10036091:	push   0x8
10036093:	lea    ecx,[esp+0x18]
10036097:	push   ecx
10036098:	push   0x8
1003609a:	mov    edx,ecx
1003609c:	mov    ecx,DWORD PTR [eax]
1003609e:	push   edx
1003609f:	push   0x22c080
100360a4:	push   ecx
100360a5:	mov    DWORD PTR [esp+0x2c],ebx
100360a9:	mov    DWORD PTR [esp+0x30],ebx
100360ad:	call   DWORD PTR ds:0x10066260
100360b3:	test   eax,eax
100360b5:	jne    0x10036156
100360bb:	push   0x6a4d2338
100360c0:	push   0x10073a74
100360c5:	call   0x100042bd
100360ca:	push   0x1406a922
100360cf:	push   eax
100360d0:	call   0x100042bd
100360d5:	push   eax
100360d6:	push   0x1b
100360d8:	push   0x100739f0
100360dd:	call   0x100042cf
100360e2:	mov    esi,eax
100360e4:	push   esi
100360e5:	mov    DWORD PTR [esp+0x4c],0xf
100360ed:	mov    DWORD PTR [esp+0x48],ebx
100360f1:	mov    BYTE PTR [esp+0x38],bl
100360f5:	call   0x10043100
100360fa:	add    esp,0x20
100360fd:	push   eax
100360fe:	push   esi
100360ff:	lea    ecx,[esp+0x1c]
10036103:	call   0x10001336
10036108:	lea    ecx,[esp+0x30]
1003610c:	mov    DWORD PTR [esp+0x64],ebx
10036110:	call   0x10042ff1
10036115:	push   0xffffffff
10036117:	mov    BYTE PTR [esp+0x68],0x1
1003611c:	push   ebx
1003611d:	lea    edx,[esp+0x1c]
10036121:	push   edx
10036122:	lea    ecx,[esp+0x48]
10036126:	mov    DWORD PTR [esp+0x3c],0x10073634
1003612e:	mov    DWORD PTR [esp+0x60],0xf
10036136:	mov    DWORD PTR [esp+0x5c],ebx
1003613a:	mov    BYTE PTR [esp+0x4c],bl
1003613e:	call   0x1000123c
10036143:	push   0x10074e8c
10036148:	lea    eax,[esp+0x34]
1003614c:	push   eax
1003614d:	mov    BYTE PTR [esp+0x6c],bl
10036151:	call   0x10047aa4
10036156:	mov    eax,DWORD PTR [esp+0xc]
1003615a:	xor    ecx,ecx
1003615c:	cmp    eax,ebx
1003615e:	setl   cl
10036161:	sub    ecx,0x1
10036164:	and    eax,ecx
10036166:	mov    ecx,DWORD PTR [esp+0x5c]
1003616a:	mov    DWORD PTR fs:0x0,ecx
10036171:	pop    ecx
10036172:	pop    esi
10036173:	pop    ebx
10036174:	add    esp,0x5c
10036177:	ret    0x4
1003617a:	int3   
1003617b:	int3   
1003617c:	int3   
1003617d:	int3   
1003617e:	int3   
1003617f:	int3   
10036180:	push   ebp
10036181:	mov    ebp,esp
10036183:	and    esp,0xfffffff8
10036186:	push   0xffffffff
10036188:	push   0x10061650
1003618d:	mov    eax,fs:0x0
10036193:	push   eax
10036194:	sub    esp,0x54
10036197:	push   ebx
10036198:	push   esi
10036199:	mov    eax,ds:0x1007e030
1003619e:	xor    eax,esp
100361a0:	push   eax
100361a1:	lea    eax,[esp+0x60]
100361a5:	mov    fs:0x0,eax
100361ab:	xor    ebx,ebx
100361ad:	push   ebx
100361ae:	lea    eax,[esp+0x10]
100361b2:	push   eax
100361b3:	mov    eax,DWORD PTR [ebp+0x8]
100361b6:	push   0x8
100361b8:	lea    ecx,[esp+0x1c]
100361bc:	push   ecx
100361bd:	push   0x8
100361bf:	mov    edx,ecx
100361c1:	mov    ecx,DWORD PTR [eax]
100361c3:	push   edx
100361c4:	push   0x22c080
100361c9:	push   ecx
100361ca:	mov    DWORD PTR [esp+0x30],ebx
100361ce:	mov    DWORD PTR [esp+0x34],ebx
100361d2:	call   DWORD PTR ds:0x10066260
100361d8:	test   eax,eax
100361da:	jne    0x10036286
100361e0:	push   0x47f2967c
100361e5:	push   0x10073aa0
100361ea:	call   0x100042bd
100361ef:	push   0x5f6e4e2a
100361f4:	push   eax
100361f5:	call   0x100042bd
100361fa:	push   0x2aec9204
100361ff:	push   eax
10036200:	call   0x100042bd
10036205:	push   eax
10036206:	push   0x1b
10036208:	push   0x100739f0
1003620d:	call   0x100042cf
10036212:	mov    esi,eax
10036214:	push   esi
10036215:	mov    DWORD PTR [esp+0x58],0xf
1003621d:	mov    DWORD PTR [esp+0x54],ebx
10036221:	mov    BYTE PTR [esp+0x44],bl
10036225:	call   0x10043100
1003622a:	add    esp,0x28
1003622d:	push   eax
1003622e:	push   esi
1003622f:	lea    ecx,[esp+0x20]
10036233:	call   0x10001336
10036238:	lea    ecx,[esp+0x34]
1003623c:	mov    DWORD PTR [esp+0x68],ebx
10036240:	call   0x10042ff1
10036245:	push   0xffffffff
10036247:	mov    BYTE PTR [esp+0x6c],0x1
1003624c:	push   ebx
1003624d:	lea    edx,[esp+0x20]
10036251:	push   edx
10036252:	lea    ecx,[esp+0x4c]
10036256:	mov    DWORD PTR [esp+0x40],0x10073634
1003625e:	mov    DWORD PTR [esp+0x64],0xf
10036266:	mov    DWORD PTR [esp+0x60],ebx
1003626a:	mov    BYTE PTR [esp+0x50],bl
1003626e:	call   0x1000123c
10036273:	push   0x10074e8c
10036278:	lea    eax,[esp+0x38]
1003627c:	push   eax
1003627d:	mov    BYTE PTR [esp+0x70],bl
10036281:	call   0x10047aa4
10036286:	mov    eax,DWORD PTR [esp+0x14]
1003628a:	mov    ecx,DWORD PTR [esp+0x60]
1003628e:	mov    DWORD PTR fs:0x0,ecx
10036295:	pop    ecx
10036296:	pop    esi
10036297:	pop    ebx
10036298:	mov    esp,ebp
1003629a:	pop    ebp
1003629b:	ret    0x4
1003629e:	int3   
1003629f:	int3   
100362a0:	push   0xffffffff
100362a2:	push   0x100615b8
100362a7:	mov    eax,fs:0x0
100362ad:	push   eax
100362ae:	push   ecx
100362af:	push   ebx
100362b0:	push   esi
100362b1:	push   edi
100362b2:	mov    eax,ds:0x1007e030
100362b7:	xor    eax,esp
100362b9:	push   eax
100362ba:	lea    eax,[esp+0x14]
100362be:	mov    fs:0x0,eax
100362c4:	mov    edi,ecx
100362c6:	mov    eax,DWORD PTR [edi+0x14]
100362c9:	lea    ebx,[eax+0x5]
100362cc:	push   ebx
100362cd:	call   0x10043811
100362d2:	mov    esi,eax
100362d4:	add    esp,0x4
100362d7:	mov    DWORD PTR [esp+0x10],esi
100362db:	mov    DWORD PTR [esp+0x1c],0x0
100362e3:	mov    eax,DWORD PTR [esp+0x28]
100362e7:	mov    DWORD PTR [esi],eax
100362e9:	cmp    DWORD PTR [edi+0x18],0x10
100362ed:	mov    eax,DWORD PTR [edi+0x14]
100362f0:	jb     0x100362f7
100362f2:	mov    edi,DWORD PTR [edi+0x4]
100362f5:	jmp    0x100362fa
100362f7:	add    edi,0x4
100362fa:	add    eax,0x1
100362fd:	push   eax
100362fe:	lea    ecx,[esi+0x4]
10036301:	push   edi
10036302:	push   ecx
10036303:	call   0x10045270
10036308:	mov    edx,DWORD PTR [esp+0x30]
1003630c:	add    esp,0xc
1003630f:	push   esi
10036310:	push   0x5
10036312:	push   edx
10036313:	mov    ecx,ebx
10036315:	call   0x10036a00
1003631a:	push   esi
1003631b:	call   0x10042f82
10036320:	add    esp,0x4
10036323:	mov    ecx,DWORD PTR [esp+0x14]
10036327:	mov    DWORD PTR fs:0x0,ecx
1003632e:	pop    ecx
1003632f:	pop    edi
10036330:	pop    esi
10036331:	pop    ebx
10036332:	add    esp,0x10
10036335:	ret    0x8
10036338:	int3   
10036339:	int3   
1003633a:	int3   
1003633b:	int3   
1003633c:	int3   
1003633d:	int3   
1003633e:	int3   
1003633f:	int3   
10036340:	push   ebp
10036341:	mov    ebp,esp
10036343:	push   0xffffffff
10036345:	push   0x10062670
1003634a:	mov    eax,fs:0x0
10036350:	push   eax
10036351:	sub    esp,0x38
10036354:	push   ebx
10036355:	push   esi
10036356:	push   edi
10036357:	mov    eax,ds:0x1007e030
1003635c:	xor    eax,ebp
1003635e:	push   eax
1003635f:	lea    eax,[ebp-0xc]
10036362:	mov    fs:0x0,eax
10036368:	mov    DWORD PTR [ebp-0x10],esp
1003636b:	mov    ebx,ecx
1003636d:	lea    eax,[ebp-0x14]
10036370:	push   eax
10036371:	push   0x5
10036373:	lea    ecx,[ebp-0x18]
10036376:	xor    esi,esi
10036378:	push   ecx
10036379:	mov    DWORD PTR [ebp-0x4],esi
1003637c:	push   edx
1003637d:	mov    DWORD PTR [ebp-0x14],esi
10036380:	call   0x10036b60
10036385:	mov    ecx,DWORD PTR [eax]
10036387:	mov    edi,ecx
10036389:	mov    DWORD PTR [eax],esi
1003638b:	mov    DWORD PTR [ebp-0x1c],edi
1003638e:	mov    BYTE PTR [ebp-0x4],0x1
10036392:	mov    edx,DWORD PTR [ebp-0x18]
10036395:	push   edx
10036396:	call   0x10042f82
1003639b:	mov    eax,DWORD PTR [ebp-0x14]
1003639e:	add    esp,0x4
100363a1:	cmp    eax,esi
100363a3:	jne    0x100363c4
100363a5:	push   edi
100363a6:	call   0x10042f82
100363ab:	add    esp,0x4
100363ae:	xor    al,al
100363b0:	mov    ecx,DWORD PTR [ebp-0xc]
100363b3:	mov    DWORD PTR fs:0x0,ecx
100363ba:	pop    ecx
100363bb:	pop    edi
100363bc:	pop    esi
100363bd:	pop    ebx
100363be:	mov    esp,ebp
100363c0:	pop    ebp
100363c1:	ret    0x4
100363c4:	mov    DWORD PTR [ebp-0x24],eax
100363c7:	lea    eax,[ebp-0x28]
100363ca:	push   eax
100363cb:	mov    DWORD PTR [ebp-0x28],esi
100363ce:	mov    DWORD PTR [ebp-0x20],edi
100363d1:	call   0x10037840
100363d6:	mov    ecx,DWORD PTR [ebp+0x8]
100363d9:	lea    edx,[ebp-0x28]
100363dc:	push   edx
100363dd:	lea    esi,[ebp-0x44]
100363e0:	mov    DWORD PTR [ecx],eax
100363e2:	call   0x10037500
100363e7:	push   0xffffffff
100363e9:	push   0x0
100363eb:	push   eax
100363ec:	mov    ecx,ebx
100363ee:	mov    BYTE PTR [ebp-0x4],0x2
100363f2:	call   0x1000123c
100363f7:	cmp    DWORD PTR [ebp-0x2c],0x10
100363fb:	jb     0x10036409
100363fd:	mov    eax,DWORD PTR [ebp-0x40]
10036400:	push   eax
10036401:	call   0x10042f82
10036406:	add    esp,0x4
10036409:	push   edi
1003640a:	call   0x10042f82
1003640f:	push   0x1006cd08
10036414:	call   0x10043100
10036419:	mov    esi,DWORD PTR [ebx+0x14]
1003641c:	mov    edi,eax
1003641e:	add    esp,0x8
10036421:	cmp    esi,edi
10036423:	mov    eax,esi
10036425:	jb     0x10036429
10036427:	mov    eax,edi
10036429:	cmp    DWORD PTR [ebx+0x18],0x10
1003642d:	jb     0x10036434
1003642f:	mov    ebx,DWORD PTR [ebx+0x4]
10036432:	jmp    0x10036437
10036434:	add    ebx,0x4
10036437:	push   eax
10036438:	push   0x1006cd08
1003643d:	push   ebx
1003643e:	call   0x10043816
10036443:	add    esp,0xc
10036446:	test   eax,eax
10036448:	jne    0x10036475
1003644a:	cmp    esi,edi
1003644c:	jae    0x1003646e
1003644e:	or     eax,0xffffffff
10036451:	xor    ecx,ecx
10036453:	test   eax,eax
10036455:	setne  cl
10036458:	mov    al,cl
1003645a:	mov    ecx,DWORD PTR [ebp-0xc]
1003645d:	mov    DWORD PTR fs:0x0,ecx
10036464:	pop    ecx
10036465:	pop    edi
10036466:	pop    esi
10036467:	pop    ebx
10036468:	mov    esp,ebp
1003646a:	pop    ebp
1003646b:	ret    0x4
1003646e:	xor    eax,eax
10036470:	cmp    esi,edi
10036472:	setne  al
10036475:	xor    ecx,ecx
10036477:	test   eax,eax
10036479:	setne  cl
1003647c:	mov    al,cl
1003647e:	mov    ecx,DWORD PTR [ebp-0xc]
10036481:	mov    DWORD PTR fs:0x0,ecx
10036488:	pop    ecx
10036489:	pop    edi
1003648a:	pop    esi
1003648b:	pop    ebx
1003648c:	mov    esp,ebp
1003648e:	pop    ebp
1003648f:	ret    0x4
10036492:	mov    eax,0x100363ae
10036497:	ret    
10036498:	int3   
10036499:	int3   
1003649a:	int3   
1003649b:	int3   
1003649c:	int3   
1003649d:	int3   
1003649e:	int3   
1003649f:	int3   
100364a0:	push   0xffffffff
100364a2:	push   0x10061580
100364a7:	mov    eax,fs:0x0
100364ad:	push   eax
100364ae:	sub    esp,0x74
100364b1:	mov    eax,ds:0x1007e030
100364b6:	xor    eax,esp
100364b8:	mov    DWORD PTR [esp+0x70],eax
100364bc:	push   ebx
100364bd:	push   esi
100364be:	push   edi
100364bf:	mov    eax,ds:0x1007e030
100364c4:	xor    eax,esp
100364c6:	push   eax
100364c7:	lea    eax,[esp+0x84]
100364ce:	mov    fs:0x0,eax
100364d4:	mov    eax,DWORD PTR [esp+0x94]
100364db:	xor    ebx,ebx
100364dd:	mov    esi,0xf
100364e2:	mov    DWORD PTR [esp+0x7c],esi
100364e6:	mov    DWORD PTR [esp+0x78],ebx
100364ea:	mov    BYTE PTR [esp+0x68],bl
100364ee:	mov    DWORD PTR [esp+0x8c],ebx
100364f5:	mov    DWORD PTR [esp+0x44],esi
100364f9:	mov    DWORD PTR [esp+0x40],ebx
100364fd:	mov    BYTE PTR [esp+0x30],bl
10036501:	mov    DWORD PTR [esp+0x28],esi
10036505:	mov    DWORD PTR [esp+0x24],ebx
10036509:	mov    BYTE PTR [esp+0x14],bl
1003650d:	mov    DWORD PTR [esp+0x60],esi
10036511:	mov    DWORD PTR [esp+0x5c],ebx
10036515:	mov    BYTE PTR [esp+0x4c],bl
10036519:	lea    edx,[esp+0x48]
1003651d:	push   edx
1003651e:	lea    edx,[esp+0x68]
10036522:	push   edx
10036523:	push   ecx
10036524:	push   eax
10036525:	lea    edx,[esp+0x20]
10036529:	lea    ecx,[esp+0x3c]
1003652d:	mov    BYTE PTR [esp+0x9c],0x3
10036535:	call   0x100365e0
1003653a:	mov    edi,0x10
1003653f:	cmp    DWORD PTR [esp+0x60],edi
10036543:	jb     0x10036552
10036545:	mov    eax,DWORD PTR [esp+0x4c]
10036549:	push   eax
1003654a:	call   0x10042f82
1003654f:	add    esp,0x4
10036552:	cmp    DWORD PTR [esp+0x28],edi
10036556:	mov    DWORD PTR [esp+0x60],esi
1003655a:	mov    DWORD PTR [esp+0x5c],ebx
1003655e:	mov    BYTE PTR [esp+0x4c],bl
10036562:	jb     0x10036571
10036564:	mov    ecx,DWORD PTR [esp+0x14]
10036568:	push   ecx
10036569:	call   0x10042f82
1003656e:	add    esp,0x4
10036571:	cmp    DWORD PTR [esp+0x44],edi
10036575:	mov    DWORD PTR [esp+0x28],esi
10036579:	mov    DWORD PTR [esp+0x24],ebx
1003657d:	mov    BYTE PTR [esp+0x14],bl
10036581:	jb     0x10036590
10036583:	mov    edx,DWORD PTR [esp+0x30]
10036587:	push   edx
10036588:	call   0x10042f82
1003658d:	add    esp,0x4
10036590:	cmp    DWORD PTR [esp+0x7c],edi
10036594:	mov    DWORD PTR [esp+0x44],esi
10036598:	mov    DWORD PTR [esp+0x40],ebx
1003659c:	mov    BYTE PTR [esp+0x30],bl
100365a0:	jb     0x100365af
100365a2:	mov    eax,DWORD PTR [esp+0x68]
100365a6:	push   eax
100365a7:	call   0x10042f82
100365ac:	add    esp,0x4
100365af:	mov    ecx,DWORD PTR [esp+0x84]
100365b6:	mov    DWORD PTR fs:0x0,ecx
100365bd:	pop    ecx
100365be:	pop    edi
100365bf:	pop    esi
100365c0:	pop    ebx
100365c1:	mov    ecx,DWORD PTR [esp+0x70]
100365c5:	xor    ecx,esp
100365c7:	call   0x10042f87
100365cc:	add    esp,0x80
100365d2:	ret    0x4
100365d5:	int3   
100365d6:	int3   
100365d7:	int3   
100365d8:	int3   
100365d9:	int3   
100365da:	int3   
100365db:	int3   
100365dc:	int3   
100365dd:	int3   
100365de:	int3   
100365df:	int3   
100365e0:	push   ebp
100365e1:	mov    ebp,esp
100365e3:	push   0xffffffff
100365e5:	push   0x10061532
100365ea:	mov    eax,fs:0x0
100365f0:	push   eax
100365f1:	sub    esp,0x18c
100365f7:	mov    eax,ds:0x1007e030
100365fc:	xor    eax,ebp
100365fe:	mov    DWORD PTR [ebp-0x10],eax
10036601:	push   ebx
10036602:	push   esi
10036603:	push   edi
10036604:	push   eax
10036605:	lea    eax,[ebp-0xc]
10036608:	mov    fs:0x0,eax
1003660e:	mov    eax,DWORD PTR [ebp+0x8]
10036611:	mov    eax,DWORD PTR [eax]
10036613:	mov    esi,DWORD PTR [ebp+0xc]
10036616:	mov    edi,DWORD PTR [ebp+0x10]
10036619:	mov    DWORD PTR [ebp-0x144],edx
1003661f:	mov    DWORD PTR [ebp-0x148],ecx
10036625:	mov    ecx,DWORD PTR [ebp+0x14]
10036628:	xor    ebx,ebx
1003662a:	push   ebx
1003662b:	lea    edx,[ebp-0x150]
10036631:	push   edx
10036632:	push   0x110
10036637:	mov    DWORD PTR [ebp-0x14c],ecx
1003663d:	lea    ecx,[ebp-0x120]
10036643:	push   ecx
10036644:	push   0x110
10036649:	mov    edx,ecx
1003664b:	push   edx
1003664c:	push   0x22c03c
10036651:	push   eax
10036652:	call   DWORD PTR ds:0x10066260
10036658:	test   eax,eax
1003665a:	jne    0x10036723
10036660:	push   0x3922de86
10036665:	push   0x10073ad4
1003666a:	call   0x100042bd
1003666f:	push   0x25e0f62e
10036674:	push   eax
10036675:	call   0x100042bd
1003667a:	push   0x323a63a8
1003667f:	push   eax
10036680:	call   0x100042bd
10036685:	push   0x2a86293e
1003668a:	push   eax
1003668b:	call   0x100042bd
10036690:	push   eax
10036691:	push   0x1f
10036693:	push   0x10073b00
10036698:	call   0x100042cf
1003669d:	mov    esi,eax
1003669f:	mov    edi,0xf
100366a4:	push   esi
100366a5:	mov    DWORD PTR [ebp-0x128],edi
100366ab:	mov    DWORD PTR [ebp-0x12c],ebx
100366b1:	mov    BYTE PTR [ebp-0x13c],bl
100366b7:	call   0x10043100
100366bc:	add    esp,0x30
100366bf:	push   eax
100366c0:	push   esi
100366c1:	lea    ecx,[ebp-0x140]
100366c7:	call   0x10001336
100366cc:	lea    ecx,[ebp-0x194]
100366d2:	mov    DWORD PTR [ebp-0x4],ebx
100366d5:	call   0x10042ff1
100366da:	push   0xffffffff
100366dc:	mov    BYTE PTR [ebp-0x4],0x1
100366e0:	push   ebx
100366e1:	lea    ecx,[ebp-0x140]
100366e7:	push   ecx
100366e8:	lea    ecx,[ebp-0x188]
100366ee:	mov    DWORD PTR [ebp-0x194],0x10073634
100366f8:	mov    DWORD PTR [ebp-0x170],edi
100366fe:	mov    DWORD PTR [ebp-0x174],ebx
10036704:	mov    BYTE PTR [ebp-0x184],bl
1003670a:	call   0x1000123c
1003670f:	push   0x10074e8c
10036714:	lea    edx,[ebp-0x194]
1003671a:	push   edx
1003671b:	mov    BYTE PTR [ebp-0x4],bl
1003671e:	call   0x10047aa4
10036723:	call   DWORD PTR ds:0x1007efec
10036729:	mov    ecx,DWORD PTR [ebp-0xdc]
1003672f:	mov    edx,DWORD PTR [ebp-0xd8]
10036735:	mov    DWORD PTR [ebp-0x124],eax
1003673b:	mov    eax,DWORD PTR [ebp-0xe0]
10036741:	mov    DWORD PTR [esi],eax
10036743:	mov    eax,DWORD PTR [ebp-0xd4]
10036749:	mov    DWORD PTR [esi+0x4],ecx
1003674c:	lea    ecx,[ebp-0x120]
10036752:	mov    DWORD PTR [esi+0x8],edx
10036755:	push   ecx
10036756:	mov    DWORD PTR [esi+0xc],eax
10036759:	call   DWORD PTR ds:0x100660c4
1003675f:	add    eax,0x1
10036762:	cmp    eax,0x3fffffff
10036767:	jle    0x1003676d
10036769:	xor    esi,esi
1003676b:	jmp    0x10036791
1003676d:	lea    esi,[eax+eax*1]
10036770:	mov    eax,esi
10036772:	call   0x1004b7e0
10036777:	mov    edx,DWORD PTR [ebp-0x124]
1003677d:	mov    eax,esp
1003677f:	push   edx
10036780:	push   esi
10036781:	lea    ecx,[ebp-0x120]
10036787:	push   ecx
10036788:	mov    esi,eax
1003678a:	call   0x10002422
1003678f:	mov    esi,eax
10036791:	push   esi
10036792:	mov    DWORD PTR [ebp-0x128],0xf
1003679c:	mov    DWORD PTR [ebp-0x12c],ebx
100367a2:	mov    BYTE PTR [ebp-0x13c],bl
100367a8:	call   0x10043100
100367ad:	add    esp,0x4
100367b0:	push   eax
100367b1:	push   esi
100367b2:	lea    ecx,[ebp-0x140]
100367b8:	call   0x10001336
100367bd:	push   0xffffffff
100367bf:	push   ebx
100367c0:	lea    edx,[ebp-0x140]
100367c6:	push   edx
100367c7:	mov    ecx,edi
100367c9:	mov    DWORD PTR [ebp-0x4],0x2
100367d0:	call   0x1000123c
100367d5:	mov    DWORD PTR [ebp-0x4],0xffffffff
100367dc:	cmp    DWORD PTR [ebp-0x128],0x10
100367e3:	jb     0x100367f4
100367e5:	mov    eax,DWORD PTR [ebp-0x13c]
100367eb:	push   eax
100367ec:	call   0x10042f82
100367f1:	add    esp,0x4
100367f4:	lea    ecx,[ebp-0xd0]
100367fa:	push   ecx
100367fb:	call   DWORD PTR ds:0x100660c4
10036801:	add    eax,0x1
10036804:	cmp    eax,0x3fffffff
10036809:	jle    0x10036815
1003680b:	mov    edi,DWORD PTR [ebp-0x124]
10036811:	xor    esi,esi
10036813:	jmp    0x10036839
10036815:	lea    esi,[eax+eax*1]
10036818:	mov    eax,esi
1003681a:	call   0x1004b7e0
1003681f:	mov    edi,DWORD PTR [ebp-0x124]
10036825:	mov    eax,esp
10036827:	push   edi
10036828:	push   esi
10036829:	lea    edx,[ebp-0xd0]
1003682f:	push   edx
10036830:	mov    esi,eax
10036832:	call   0x10002422
10036837:	mov    esi,eax
10036839:	push   esi
1003683a:	mov    DWORD PTR [ebp-0x128],0xf
10036844:	mov    DWORD PTR [ebp-0x12c],ebx
1003684a:	mov    BYTE PTR [ebp-0x13c],bl
10036850:	call   0x10043100
10036855:	add    esp,0x4
10036858:	push   eax
10036859:	push   esi
1003685a:	lea    ecx,[ebp-0x140]
10036860:	call   0x10001336
10036865:	mov    ecx,DWORD PTR [ebp-0x148]
1003686b:	push   0xffffffff
1003686d:	push   ebx
1003686e:	lea    eax,[ebp-0x140]
10036874:	push   eax
10036875:	mov    DWORD PTR [ebp-0x4],0x3
1003687c:	call   0x1000123c
10036881:	mov    DWORD PTR [ebp-0x4],0xffffffff
10036888:	cmp    DWORD PTR [ebp-0x128],0x10
1003688f:	jb     0x100368a0
10036891:	mov    ecx,DWORD PTR [ebp-0x13c]
10036897:	push   ecx
10036898:	call   0x10042f82
1003689d:	add    esp,0x4
100368a0:	lea    edx,[ebp-0x90]
100368a6:	push   edx
100368a7:	call   DWORD PTR ds:0x100660c4
100368ad:	add    eax,0x1
100368b0:	cmp    eax,0x3fffffff
100368b5:	jle    0x100368bb
100368b7:	xor    esi,esi
100368b9:	jmp    0x100368d9
100368bb:	lea    esi,[eax+eax*1]
100368be:	mov    eax,esi
100368c0:	call   0x1004b7e0
100368c5:	mov    eax,esp
100368c7:	push   edi
100368c8:	push   esi
100368c9:	lea    ecx,[ebp-0x90]
100368cf:	push   ecx
100368d0:	mov    esi,eax
100368d2:	call   0x10002422
100368d7:	mov    esi,eax
100368d9:	push   esi
100368da:	mov    DWORD PTR [ebp-0x128],0xf
100368e4:	mov    DWORD PTR [ebp-0x12c],ebx
100368ea:	mov    BYTE PTR [ebp-0x13c],bl
100368f0:	call   0x10043100
100368f5:	add    esp,0x4
100368f8:	push   eax
100368f9:	push   esi
100368fa:	lea    ecx,[ebp-0x140]
10036900:	call   0x10001336
10036905:	mov    ecx,DWORD PTR [ebp-0x144]
1003690b:	push   0xffffffff
1003690d:	push   ebx
1003690e:	lea    edx,[ebp-0x140]
10036914:	push   edx
10036915:	mov    DWORD PTR [ebp-0x4],0x4
1003691c:	call   0x1000123c
10036921:	mov    DWORD PTR [ebp-0x4],0xffffffff
10036928:	cmp    DWORD PTR [ebp-0x128],0x10
1003692f:	jb     0x10036940
10036931:	mov    eax,DWORD PTR [ebp-0x13c]
10036937:	push   eax
10036938:	call   0x10042f82
1003693d:	add    esp,0x4
10036940:	lea    ecx,[ebp-0x50]
10036943:	push   ecx
10036944:	call   DWORD PTR ds:0x100660c4
1003694a:	add    eax,0x1
1003694d:	cmp    eax,0x3fffffff
10036952:	jle    0x10036958
10036954:	xor    esi,esi
10036956:	jmp    0x10036973
10036958:	lea    esi,[eax+eax*1]
1003695b:	mov    eax,esi
1003695d:	call   0x1004b7e0
10036962:	mov    eax,esp
10036964:	push   edi
10036965:	push   esi
10036966:	lea    edx,[ebp-0x50]
10036969:	push   edx
1003696a:	mov    esi,eax
1003696c:	call   0x10002422
10036971:	mov    esi,eax
10036973:	push   esi
10036974:	mov    DWORD PTR [ebp-0x154],0xf
1003697e:	mov    DWORD PTR [ebp-0x158],ebx
10036984:	mov    BYTE PTR [ebp-0x168],bl
1003698a:	call   0x10043100
1003698f:	add    esp,0x4
10036992:	push   eax
10036993:	push   esi
10036994:	lea    ecx,[ebp-0x16c]
1003699a:	call   0x10001336
1003699f:	mov    ecx,DWORD PTR [ebp-0x14c]
100369a5:	push   0xffffffff
100369a7:	push   ebx
100369a8:	lea    eax,[ebp-0x16c]
100369ae:	push   eax
100369af:	mov    DWORD PTR [ebp-0x4],0x5
100369b6:	call   0x1000123c
100369bb:	cmp    DWORD PTR [ebp-0x154],0x10
100369c2:	jb     0x100369d3
100369c4:	mov    ecx,DWORD PTR [ebp-0x168]
100369ca:	push   ecx
100369cb:	call   0x10042f82
100369d0:	add    esp,0x4
100369d3:	lea    esp,[ebp-0x1a8]
100369d9:	mov    ecx,DWORD PTR [ebp-0xc]
100369dc:	mov    DWORD PTR fs:0x0,ecx
100369e3:	pop    ecx
100369e4:	pop    edi
100369e5:	pop    esi
100369e6:	pop    ebx
100369e7:	mov    ecx,DWORD PTR [ebp-0x10]
100369ea:	xor    ecx,ebp
100369ec:	call   0x10042f87
100369f1:	mov    esp,ebp
100369f3:	pop    ebp
100369f4:	ret    0x10
100369f7:	int3   
100369f8:	int3   
100369f9:	int3   
100369fa:	int3   
100369fb:	int3   
100369fc:	int3   
100369fd:	int3   
100369fe:	int3   
100369ff:	int3   
10036a00:	push   ebp
10036a01:	mov    ebp,esp
10036a03:	and    esp,0xfffffff8
10036a06:	push   0xffffffff
10036a08:	push   0x100614c8
10036a0d:	mov    eax,fs:0x0
10036a13:	push   eax
10036a14:	sub    esp,0x58
10036a17:	push   ebx
10036a18:	push   esi
10036a19:	push   edi
10036a1a:	mov    eax,ds:0x1007e030
10036a1f:	xor    eax,esp
10036a21:	push   eax
10036a22:	lea    eax,[esp+0x68]
10036a26:	mov    fs:0x0,eax
10036a2c:	mov    edi,ecx
10036a2e:	xor    ebx,ebx
10036a30:	mov    DWORD PTR [esp+0x14],ebx
10036a34:	lea    eax,[edi+0xc]
10036a37:	push   eax
10036a38:	mov    DWORD PTR [esp+0x74],ebx
10036a3c:	mov    DWORD PTR [esp+0x1c],eax
10036a40:	call   0x10043811
10036a45:	mov    esi,eax
10036a47:	add    esp,0x4
10036a4a:	cmp    esi,ebx
10036a4c:	je     0x10036a57
10036a4e:	push   ebx
10036a4f:	call   0x10042f82
10036a54:	add    esp,0x4
10036a57:	mov    ecx,DWORD PTR [ebp+0x10]
10036a5a:	mov    eax,DWORD PTR [ebp+0xc]
10036a5d:	push   edi
10036a5e:	push   ecx
10036a5f:	lea    edx,[esi+0xc]
10036a62:	mov    DWORD PTR [esi],edi
10036a64:	push   edx
10036a65:	mov    DWORD PTR [esp+0x20],esi
10036a69:	mov    DWORD PTR [esi+0x4],eax
10036a6c:	call   0x10045270
10036a71:	mov    ecx,DWORD PTR [esp+0x24]
10036a75:	mov    edx,DWORD PTR [ebp+0x8]
10036a78:	add    esp,0xc
10036a7b:	push   ebx
10036a7c:	lea    eax,[esp+0x20]
10036a80:	push   eax
10036a81:	mov    eax,DWORD PTR [edx]
10036a83:	push   ebx
10036a84:	push   ebx
10036a85:	push   ecx
10036a86:	push   esi
10036a87:	push   0x22c034
10036a8c:	push   eax
10036a8d:	call   DWORD PTR ds:0x10066260
10036a93:	test   eax,eax
10036a95:	jne    0x10036b35
10036a9b:	push   0x779b2dc6
10036aa0:	push   0x10073b20
10036aa5:	call   0x100042bd
10036aaa:	push   0x6860e68a
10036aaf:	push   eax
10036ab0:	call   0x100042bd
10036ab5:	push   eax
10036ab6:	push   0x19
10036ab8:	push   0x10073b60
10036abd:	call   0x100042cf
10036ac2:	mov    esi,eax
10036ac4:	mov    edi,0xf
10036ac9:	push   esi
10036aca:	mov    DWORD PTR [esp+0x58],edi
10036ace:	mov    DWORD PTR [esp+0x54],ebx
10036ad2:	mov    BYTE PTR [esp+0x44],bl
10036ad6:	call   0x10043100
10036adb:	add    esp,0x20
10036ade:	push   eax
10036adf:	push   esi
10036ae0:	lea    ecx,[esp+0x28]
10036ae4:	call   0x10001336
10036ae9:	lea    ecx,[esp+0x3c]
10036aed:	mov    BYTE PTR [esp+0x70],0x1
10036af2:	call   0x10042ff1
10036af7:	push   0xffffffff
10036af9:	mov    BYTE PTR [esp+0x74],0x2
10036afe:	push   ebx
10036aff:	lea    ecx,[esp+0x28]
10036b03:	push   ecx
10036b04:	lea    ecx,[esp+0x54]
10036b08:	mov    DWORD PTR [esp+0x48],0x10073634
10036b10:	mov    DWORD PTR [esp+0x6c],edi
10036b14:	mov    DWORD PTR [esp+0x68],ebx
10036b18:	mov    BYTE PTR [esp+0x58],bl
10036b1c:	call   0x1000123c
10036b21:	push   0x10074e8c
10036b26:	lea    edx,[esp+0x40]
10036b2a:	push   edx
10036b2b:	mov    BYTE PTR [esp+0x78],0x1
10036b30:	call   0x10047aa4
10036b35:	push   esi
10036b36:	call   0x10042f82
10036b3b:	add    esp,0x4
10036b3e:	mov    ecx,DWORD PTR [esp+0x68]
10036b42:	mov    DWORD PTR fs:0x0,ecx
10036b49:	pop    ecx
10036b4a:	pop    edi
10036b4b:	pop    esi
10036b4c:	pop    ebx
10036b4d:	mov    esp,ebp
10036b4f:	pop    ebp
10036b50:	ret    0xc
10036b53:	int3   
10036b54:	int3   
10036b55:	int3   
10036b56:	int3   
10036b57:	int3   
10036b58:	int3   
10036b59:	int3   
10036b5a:	int3   
10036b5b:	int3   
10036b5c:	int3   
10036b5d:	int3   
10036b5e:	int3   
10036b5f:	int3   
10036b60:	push   ebp
10036b61:	mov    ebp,esp
10036b63:	and    esp,0xfffffff8
10036b66:	push   0xffffffff
10036b68:	push   0x10061488
10036b6d:	mov    eax,fs:0x0
10036b73:	push   eax
10036b74:	sub    esp,0x58
10036b77:	push   ebx
10036b78:	push   esi
10036b79:	push   edi
10036b7a:	mov    eax,ds:0x1007e030
10036b7f:	xor    eax,esp
10036b81:	push   eax
10036b82:	lea    eax,[esp+0x68]
10036b86:	mov    fs:0x0,eax
10036b8c:	xor    ebx,ebx
10036b8e:	mov    DWORD PTR [esp+0x18],ebx
10036b92:	mov    DWORD PTR [esp+0x1c],ebx
10036b96:	push   0xd
10036b98:	mov    DWORD PTR [esp+0x74],ebx
10036b9c:	call   0x10043811
10036ba1:	mov    esi,eax
10036ba3:	add    esp,0x4
10036ba6:	mov    DWORD PTR [esp+0x10],esi
10036baa:	mov    eax,DWORD PTR [ebp+0x10]
10036bad:	mov    edx,DWORD PTR [ebp+0x8]
10036bb0:	mov    BYTE PTR [esp+0x70],0x1
10036bb5:	mov    DWORD PTR [esi],0x1
10036bbb:	push   ebx
10036bbc:	mov    DWORD PTR [esi+0x8],0x4
10036bc3:	mov    DWORD PTR [esi+0x4],eax
10036bc6:	mov    eax,DWORD PTR [esi]
10036bc8:	add    eax,0xc
10036bcb:	lea    ecx,[esp+0x1c]
10036bcf:	push   ecx
10036bd0:	push   eax
10036bd1:	push   esi
10036bd2:	push   eax
10036bd3:	mov    eax,DWORD PTR [edx]
10036bd5:	push   esi
10036bd6:	push   0x22c038
10036bdb:	push   eax
10036bdc:	call   DWORD PTR ds:0x10066260
10036be2:	test   eax,eax
10036be4:	jne    0x10036c84
10036bea:	push   0x758d1aa
10036bef:	push   0x10073b7c
10036bf4:	call   0x100042bd
10036bf9:	push   0x6af27b2c
10036bfe:	push   eax
10036bff:	call   0x100042bd
10036c04:	push   eax
10036c05:	push   0x1e
10036c07:	push   0x100737f0
10036c0c:	call   0x100042cf
10036c11:	mov    esi,eax
10036c13:	mov    edi,0xf
10036c18:	push   esi
10036c19:	mov    DWORD PTR [esp+0x58],edi
10036c1d:	mov    DWORD PTR [esp+0x54],ebx
10036c21:	mov    BYTE PTR [esp+0x44],bl
10036c25:	call   0x10043100
10036c2a:	add    esp,0x20
10036c2d:	push   eax
10036c2e:	push   esi
10036c2f:	lea    ecx,[esp+0x28]
10036c33:	call   0x10001336
10036c38:	lea    ecx,[esp+0x3c]
10036c3c:	mov    BYTE PTR [esp+0x70],0x2
10036c41:	call   0x10042ff1
10036c46:	push   0xffffffff
10036c48:	mov    BYTE PTR [esp+0x74],0x3
10036c4d:	push   ebx
10036c4e:	lea    ecx,[esp+0x28]
10036c52:	push   ecx
10036c53:	lea    ecx,[esp+0x54]
10036c57:	mov    DWORD PTR [esp+0x48],0x10073634
10036c5f:	mov    DWORD PTR [esp+0x6c],edi
10036c63:	mov    DWORD PTR [esp+0x68],ebx
10036c67:	mov    BYTE PTR [esp+0x58],bl
10036c6b:	call   0x1000123c
10036c70:	push   0x10074e8c
10036c75:	lea    edx,[esp+0x40]
10036c79:	push   edx
10036c7a:	mov    BYTE PTR [esp+0x78],0x2
10036c7f:	call   0x10047aa4
10036c84:	cmp    DWORD PTR [esi+0x8],0x2
10036c88:	jne    0x10036ced
10036c8a:	lea    ebx,[ebx+0x0]
10036c90:	mov    eax,DWORD PTR [esi]
10036c92:	mov    DWORD PTR [esp+0x14],eax
10036c96:	add    eax,0xc
10036c99:	push   eax
10036c9a:	call   0x10043811
10036c9f:	mov    edi,eax
10036ca1:	add    esp,0x4
10036ca4:	cmp    edi,esi
10036ca6:	je     0x10036cb1
10036ca8:	push   esi
10036ca9:	call   0x10042f82
10036cae:	add    esp,0x4
10036cb1:	mov    eax,DWORD PTR [esp+0x14]
10036cb5:	mov    ecx,DWORD PTR [ebp+0x10]
10036cb8:	mov    DWORD PTR [edi],eax
10036cba:	push   ebx
10036cbb:	mov    DWORD PTR [edi+0x4],ecx
10036cbe:	mov    eax,DWORD PTR [edi]
10036cc0:	add    eax,0xc
10036cc3:	lea    edx,[esp+0x1c]
10036cc7:	push   edx
10036cc8:	push   eax
10036cc9:	push   edi
10036cca:	push   eax
10036ccb:	mov    eax,DWORD PTR [ebp+0x8]
10036cce:	mov    ecx,DWORD PTR [eax]
10036cd0:	push   edi
10036cd1:	push   0x22c038
10036cd6:	mov    esi,edi
10036cd8:	push   ecx
10036cd9:	mov    DWORD PTR [esp+0x30],esi
10036cdd:	call   DWORD PTR ds:0x10066260
10036ce3:	test   eax,eax
10036ce5:	je     0x10036d24
10036ce7:	cmp    DWORD PTR [edi+0x8],0x2
10036ceb:	je     0x10036c90
10036ced:	mov    eax,DWORD PTR [esi+0x8]
10036cf0:	cmp    eax,0x1
10036cf3:	jne    0x10036da8
10036cf9:	mov    edi,DWORD PTR [ebp+0xc]
10036cfc:	push   esi
10036cfd:	mov    DWORD PTR [edi],ebx
10036cff:	call   0x10042f82
10036d04:	push   ebx
10036d05:	call   0x10042f82
10036d0a:	add    esp,0x8
10036d0d:	mov    eax,edi
10036d0f:	mov    ecx,DWORD PTR [esp+0x68]
10036d13:	mov    DWORD PTR fs:0x0,ecx
10036d1a:	pop    ecx
10036d1b:	pop    edi
10036d1c:	pop    esi
10036d1d:	pop    ebx
10036d1e:	mov    esp,ebp
10036d20:	pop    ebp
10036d21:	ret    0x10
10036d24:	push   0x10073bb8
10036d29:	push   0x1e
10036d2b:	push   0x100737f0
10036d30:	call   0x100042cf
10036d35:	mov    esi,eax
10036d37:	mov    edi,0xf
10036d3c:	push   esi
10036d3d:	mov    DWORD PTR [esp+0x48],edi
10036d41:	mov    DWORD PTR [esp+0x44],ebx
10036d45:	mov    BYTE PTR [esp+0x34],bl
10036d49:	call   0x10043100
10036d4e:	add    esp,0x10
10036d51:	push   eax
10036d52:	push   esi
10036d53:	lea    ecx,[esp+0x28]
10036d57:	call   0x10001336
10036d5c:	lea    ecx,[esp+0x3c]
10036d60:	mov    BYTE PTR [esp+0x70],0x4
10036d65:	call   0x10042ff1
10036d6a:	push   0xffffffff
10036d6c:	mov    BYTE PTR [esp+0x74],0x5
10036d71:	push   ebx
10036d72:	lea    edx,[esp+0x28]
10036d76:	push   edx
10036d77:	lea    ecx,[esp+0x54]
10036d7b:	mov    DWORD PTR [esp+0x48],0x10073634
10036d83:	mov    DWORD PTR [esp+0x6c],edi
10036d87:	mov    DWORD PTR [esp+0x68],ebx
10036d8b:	mov    BYTE PTR [esp+0x58],bl
10036d8f:	call   0x1000123c
10036d94:	push   0x10074e8c
10036d99:	lea    eax,[esp+0x40]
10036d9d:	push   eax
10036d9e:	mov    BYTE PTR [esp+0x78],0x4
10036da3:	call   0x10047aa4
10036da8:	cmp    eax,ebx
10036daa:	je     0x10036e03
10036dac:	push   0x50313020
10036db1:	push   0x10073bf4
10036db6:	call   0x100042bd
10036dbb:	push   0x269f67dc
10036dc0:	push   eax
10036dc1:	call   0x100042bd
10036dc6:	push   eax
10036dc7:	push   0x1e
10036dc9:	push   0x100737f0
10036dce:	call   0x100042cf
10036dd3:	add    esp,0x1c
10036dd6:	push   eax
10036dd7:	lea    ecx,[esp+0x24]
10036ddb:	call   0x100011c8
10036de0:	lea    ecx,[esp+0x20]
10036de4:	push   ecx
10036de5:	lea    edx,[esp+0x40]
10036de9:	push   edx
10036dea:	mov    BYTE PTR [esp+0x78],0x6
10036def:	call   0x100026ec
10036df4:	push   0x10074e8c
10036df9:	lea    eax,[esp+0x40]
10036dfd:	push   eax
10036dfe:	call   0x10047aa4
10036e03:	mov    eax,DWORD PTR [esi]
10036e05:	mov    ecx,DWORD PTR [ebp+0x14]
10036e08:	push   eax
10036e09:	mov    DWORD PTR [ecx],eax
10036e0b:	call   0x10043811
10036e10:	mov    edi,eax
10036e12:	add    esp,0x4
10036e15:	cmp    edi,ebx
10036e17:	je     0x10036e22
10036e19:	push   ebx
10036e1a:	call   0x10042f82
10036e1f:	add    esp,0x4
10036e22:	mov    edx,DWORD PTR [ebp+0x14]
10036e25:	mov    eax,DWORD PTR [edx]
10036e27:	push   eax
10036e28:	lea    ecx,[esi+0xc]
10036e2b:	push   ecx
10036e2c:	push   edi
10036e2d:	call   0x10045270
10036e32:	mov    edx,DWORD PTR [ebp+0xc]
10036e35:	push   esi
10036e36:	mov    DWORD PTR [edx],edi
10036e38:	call   0x10042f82
10036e3d:	push   ebx
10036e3e:	call   0x10042f82
10036e43:	mov    eax,DWORD PTR [ebp+0xc]
10036e46:	add    esp,0x14
10036e49:	mov    ecx,DWORD PTR [esp+0x68]
10036e4d:	mov    DWORD PTR fs:0x0,ecx
10036e54:	pop    ecx
10036e55:	pop    edi
10036e56:	pop    esi
10036e57:	pop    ebx
10036e58:	mov    esp,ebp
10036e5a:	pop    ebp
10036e5b:	ret    0x10
10036e5e:	int3   
10036e5f:	int3   
10036e60:	push   0xffffffff
10036e62:	push   0x10061417
10036e67:	mov    eax,fs:0x0
10036e6d:	push   eax
10036e6e:	sub    esp,0x198
10036e74:	mov    eax,ds:0x1007e030
10036e79:	xor    eax,esp
10036e7b:	mov    DWORD PTR [esp+0x194],eax
10036e82:	push   ebx
10036e83:	push   esi
10036e84:	push   edi
10036e85:	mov    eax,ds:0x1007e030
10036e8a:	xor    eax,esp
10036e8c:	push   eax
10036e8d:	lea    eax,[esp+0x1a8]
10036e94:	mov    fs:0x0,eax
10036e9a:	mov    esi,ecx
10036e9c:	mov    eax,esi
10036e9e:	mov    edi,edx
10036ea0:	lea    edx,[eax+0x2]
10036ea3:	xor    ebx,ebx
10036ea5:	mov    cx,WORD PTR [eax]
10036ea8:	add    eax,0x2
10036eab:	cmp    cx,bx
10036eae:	jne    0x10036ea5
10036eb0:	sub    eax,edx
10036eb2:	sar    eax,1
10036eb4:	add    eax,0x1
10036eb7:	cmp    eax,0x80
10036ebc:	jbe    0x10036f69
10036ec2:	push   0x1ff3fe3c
10036ec7:	push   0x10073c28
10036ecc:	call   0x100042bd
10036ed1:	push   0x7bfa7cca
10036ed6:	push   eax
10036ed7:	call   0x100042bd
10036edc:	push   eax
10036edd:	push   0x1e
10036edf:	push   0x10073c54
10036ee4:	call   0x100042cf
10036ee9:	mov    esi,eax
10036eeb:	mov    edi,0xf
10036ef0:	push   esi
10036ef1:	mov    DWORD PTR [esp+0x70],edi
10036ef5:	mov    DWORD PTR [esp+0x6c],ebx
10036ef9:	mov    BYTE PTR [esp+0x5c],bl
10036efd:	call   0x10043100
10036f02:	add    esp,0x20
10036f05:	push   eax
10036f06:	push   esi
10036f07:	lea    ecx,[esp+0x40]
10036f0b:	call   0x10001336
10036f10:	lea    ecx,[esp+0x54]
10036f14:	mov    DWORD PTR [esp+0x1b0],ebx
10036f1b:	call   0x10042ff1
10036f20:	push   0xffffffff
10036f22:	mov    BYTE PTR [esp+0x1b4],0x1
10036f2a:	push   ebx
10036f2b:	lea    eax,[esp+0x40]
10036f2f:	push   eax
10036f30:	lea    ecx,[esp+0x6c]
10036f34:	mov    DWORD PTR [esp+0x60],0x10073634
10036f3c:	mov    DWORD PTR [esp+0x84],edi
10036f43:	mov    DWORD PTR [esp+0x80],ebx
10036f4a:	mov    BYTE PTR [esp+0x70],bl
10036f4e:	call   0x1000123c
10036f53:	push   0x10074e8c
10036f58:	lea    ecx,[esp+0x58]
10036f5c:	push   ecx
10036f5d:	mov    BYTE PTR [esp+0x1b8],bl
10036f64:	call   0x10047aa4
10036f69:	call   DWORD PTR ds:0x1007efec
10036f6f:	lea    edx,[esp+0xa4]
10036f76:	mov    eax,esi
10036f78:	sub    edx,esi
10036f7a:	lea    ebx,[ebx+0x0]
10036f80:	movzx  ecx,WORD PTR [eax]
10036f83:	mov    WORD PTR [edx+eax*1],cx
10036f87:	add    eax,0x2
10036f8a:	cmp    cx,bx
10036f8d:	jne    0x10036f80
10036f8f:	push   0x1
10036f91:	call   0x10043811
10036f96:	mov    esi,eax
10036f98:	add    esp,0x4
10036f9b:	mov    DWORD PTR [esp+0x14],esi
10036f9f:	push   ebx
10036fa0:	lea    edx,[esp+0x1c]
10036fa4:	push   edx
10036fa5:	push   0x100
10036faa:	lea    eax,[esp+0xb0]
10036fb1:	push   eax
10036fb2:	push   0x100
10036fb7:	mov    ecx,eax
10036fb9:	push   ecx
10036fba:	mov    DWORD PTR [esp+0x1c8],0x2
10036fc5:	mov    edx,DWORD PTR [edi]
10036fc7:	push   0x22c070
10036fcc:	push   edx
10036fcd:	call   DWORD PTR ds:0x10066260
10036fd3:	test   eax,eax
10036fd5:	jne    0x1003709b
10036fdb:	push   0x3346bbb6
10036fe0:	push   0x10073c74
10036fe5:	call   0x100042bd
10036fea:	push   0x6d52158c
10036fef:	push   eax
10036ff0:	call   0x100042bd
10036ff5:	push   0x1df9d2d6
10036ffa:	push   eax
10036ffb:	call   0x100042bd
10037000:	push   eax
10037001:	push   0x1a
10037003:	push   0x10073c9c
10037008:	call   0x100042cf
1003700d:	mov    esi,eax
1003700f:	mov    edi,0xf
10037014:	push   esi
10037015:	mov    DWORD PTR [esp+0x5c],edi
10037019:	mov    DWORD PTR [esp+0x58],ebx
1003701d:	mov    BYTE PTR [esp+0x48],bl
10037021:	call   0x10043100
10037026:	add    esp,0x28
10037029:	push   eax
1003702a:	push   esi
1003702b:	lea    ecx,[esp+0x24]
1003702f:	call   0x10001336
10037034:	lea    ecx,[esp+0x7c]
10037038:	mov    BYTE PTR [esp+0x1b0],0x3
10037040:	call   0x10042ff1
10037045:	push   0xffffffff
10037047:	mov    BYTE PTR [esp+0x1b4],0x4
1003704f:	push   ebx
10037050:	lea    eax,[esp+0x24]
10037054:	push   eax
10037055:	lea    ecx,[esp+0x94]
1003705c:	mov    DWORD PTR [esp+0x88],0x10073634
10037067:	mov    DWORD PTR [esp+0xac],edi
1003706e:	mov    DWORD PTR [esp+0xa8],ebx
10037075:	mov    BYTE PTR [esp+0x98],bl
1003707c:	call   0x1000123c
10037081:	push   0x10074e8c
10037086:	lea    ecx,[esp+0x80]
1003708d:	push   ecx
1003708e:	mov    BYTE PTR [esp+0x1b8],0x3
10037096:	call   0x10047aa4
1003709b:	push   esi
1003709c:	call   0x10042f82
100370a1:	add    esp,0x4
100370a4:	mov    ecx,DWORD PTR [esp+0x1a8]
100370ab:	mov    DWORD PTR fs:0x0,ecx
100370b2:	pop    ecx
100370b3:	pop    edi
100370b4:	pop    esi
100370b5:	pop    ebx
100370b6:	mov    ecx,DWORD PTR [esp+0x194]
100370bd:	xor    ecx,esp
100370bf:	call   0x10042f87
100370c4:	add    esp,0x1a4
100370ca:	ret    
100370cb:	int3   
100370cc:	int3   
100370cd:	int3   
100370ce:	int3   
100370cf:	int3   
100370d0:	push   ecx
100370d1:	push   esi
100370d2:	push   0x1fe
100370d7:	call   0x1004358e
100370dc:	mov    esi,eax
100370de:	add    esp,0x4
100370e1:	test   esi,esi
100370e3:	je     0x100370f7
100370e5:	push   0x1fe
100370ea:	push   0x0
100370ec:	push   esi
100370ed:	call   0x10045cf0
100370f2:	add    esp,0xc
100370f5:	jmp    0x100370f9
100370f7:	xor    esi,esi
100370f9:	mov    edx,esi
100370fb:	mov    eax,edi
100370fd:	sub    edx,edi
100370ff:	nop
10037100:	movzx  ecx,WORD PTR [eax]
10037103:	mov    WORD PTR [edx+eax*1],cx
10037107:	add    eax,0x2
1003710a:	test   cx,cx
1003710d:	jne    0x10037100
1003710f:	mov    ecx,DWORD PTR [esp+0xc]
10037113:	mov    edx,DWORD PTR [ecx]
10037115:	push   0x0
10037117:	lea    eax,[esp+0x8]
1003711b:	push   eax
1003711c:	push   0x1fe
10037121:	push   esi
10037122:	push   0x1fe
10037127:	push   esi
10037128:	push   0x22c064
1003712d:	push   edx
1003712e:	call   DWORD PTR ds:0x10066260
10037134:	push   esi
10037135:	call   0x10042f82
1003713a:	add    esp,0x4
1003713d:	pop    esi
1003713e:	pop    ecx
1003713f:	ret    0x4
10037142:	int3   
10037143:	int3   
10037144:	int3   
10037145:	int3   
10037146:	int3   
10037147:	int3   
10037148:	int3   
10037149:	int3   
1003714a:	int3   
1003714b:	int3   
1003714c:	int3   
1003714d:	int3   
1003714e:	int3   
1003714f:	int3   
10037150:	push   0xffffffff
10037152:	push   0x10060808
10037157:	mov    eax,fs:0x0
1003715d:	push   eax
1003715e:	push   ecx
1003715f:	push   ebx
10037160:	push   ebp
10037161:	push   esi
10037162:	push   edi
10037163:	mov    eax,ds:0x1007e030
10037168:	xor    eax,esp
1003716a:	push   eax
1003716b:	lea    eax,[esp+0x18]
1003716f:	mov    fs:0x0,eax
10037175:	mov    ebp,DWORD PTR [esp+0x30]
10037179:	push   0x440
1003717e:	call   0x1004358e
10037183:	mov    ebx,eax
10037185:	add    esp,0x4
10037188:	test   ebx,ebx
1003718a:	je     0x1003719e
1003718c:	push   0x440
10037191:	push   0x0
10037193:	push   ebx
10037194:	call   0x10045cf0
10037199:	add    esp,0xc
1003719c:	jmp    0x100371a0
1003719e:	xor    ebx,ebx
100371a0:	mov    DWORD PTR [esp+0x30],ebx
100371a4:	push   0x661b3cac
100371a9:	push   0x55611b40
100371ae:	push   0x7fc5048c
100371b3:	mov    DWORD PTR [esp+0x2c],0x0
100371bb:	push   0x10073cb8
100371c0:	mov    WORD PTR [ebx],0x0
100371c5:	call   0x100042bd
100371ca:	add    esp,0x8
100371cd:	push   eax
100371ce:	call   0x100042bd
100371d3:	add    esp,0x8
100371d6:	push   eax
100371d7:	call   0x100042bd
100371dc:	push   eax
100371dd:	push   0x4
100371df:	push   0x10073cf0
100371e4:	call   0x1000448e
100371e9:	add    esp,0x14
100371ec:	mov    edx,eax
100371ee:	mov    edi,edi
100371f0:	mov    cx,WORD PTR [eax]
100371f3:	add    eax,0x2
100371f6:	test   cx,cx
100371f9:	jne    0x100371f0
100371fb:	mov    edi,ebx
100371fd:	sub    eax,edx
100371ff:	add    edi,0xfffffffe
10037202:	mov    cx,WORD PTR [edi+0x2]
10037206:	add    edi,0x2
10037209:	test   cx,cx
1003720c:	jne    0x10037202
1003720e:	mov    ecx,eax
10037210:	shr    ecx,0x2
10037213:	mov    esi,edx
10037215:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
10037217:	mov    ecx,eax
10037219:	mov    eax,DWORD PTR [esp+0x2c]
1003721d:	and    ecx,0x3
10037220:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
10037222:	mov    ecx,eax
10037224:	mov    dx,WORD PTR [eax]
10037227:	add    eax,0x2
1003722a:	test   dx,dx
1003722d:	jne    0x10037224
1003722f:	mov    edi,ebx
10037231:	sub    eax,ecx
10037233:	mov    esi,ecx
10037235:	add    edi,0xfffffffe
10037238:	jmp    0x10037240
1003723a:	lea    ebx,[ebx+0x0]
10037240:	mov    cx,WORD PTR [edi+0x2]
10037244:	add    edi,0x2
10037247:	test   cx,cx
1003724a:	jne    0x10037240
1003724c:	mov    ecx,eax
1003724e:	shr    ecx,0x2
10037251:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
10037253:	mov    ecx,eax
10037255:	and    ecx,0x3
10037258:	lea    edx,[ebx+0x400]
1003725e:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
10037260:	mov    eax,ebp
10037262:	sub    edx,ebp
10037264:	movzx  ecx,WORD PTR [eax]
10037267:	mov    WORD PTR [edx+eax*1],cx
1003726b:	add    eax,0x2
1003726e:	test   cx,cx
10037271:	jne    0x10037264
10037273:	mov    ecx,DWORD PTR [esp+0x28]
10037277:	mov    edx,DWORD PTR [ecx]
10037279:	push   0x0
1003727b:	lea    eax,[esp+0x18]
1003727f:	push   eax
10037280:	push   0x440
10037285:	push   ebx
10037286:	push   0x440
1003728b:	push   ebx
1003728c:	push   0x22c078
10037291:	push   edx
10037292:	call   DWORD PTR ds:0x10066260
10037298:	push   ebx
10037299:	call   0x10042f82
1003729e:	add    esp,0x4
100372a1:	mov    ecx,DWORD PTR [esp+0x18]
100372a5:	mov    DWORD PTR fs:0x0,ecx
100372ac:	pop    ecx
100372ad:	pop    edi
100372ae:	pop    esi
100372af:	pop    ebp
100372b0:	pop    ebx
100372b1:	add    esp,0x10
100372b4:	ret    0xc
100372b7:	int3   
100372b8:	int3   
100372b9:	int3   
100372ba:	int3   
100372bb:	int3   
100372bc:	int3   
100372bd:	int3   
100372be:	int3   
100372bf:	int3   
100372c0:	mov    ecx,DWORD PTR [eax]
100372c2:	push   ecx
100372c3:	call   0x10042f82
100372c8:	pop    ecx
100372c9:	ret    
100372ca:	int3   
100372cb:	int3   
100372cc:	int3   
100372cd:	int3   
100372ce:	int3   
100372cf:	int3   
100372d0:	push   ebp
100372d1:	mov    ebp,esp
100372d3:	and    esp,0xfffffff8
100372d6:	mov    ecx,DWORD PTR [eax]
100372d8:	sub    esp,0x28
100372db:	cmp    ecx,DWORD PTR [eax+0x4]
100372de:	jbe    0x100372f8
100372e0:	lea    eax,[esp]
100372e3:	push   eax
100372e4:	call   0x10037420
100372e9:	push   0x10074f14
100372ee:	lea    ecx,[esp+0x4]
100372f2:	push   ecx
100372f3:	call   0x10047aa4
100372f8:	mov    edx,DWORD PTR [eax+0x8]
100372fb:	mov    al,BYTE PTR [ecx+edx*1]
100372fe:	mov    esp,ebp
10037300:	pop    ebp
10037301:	ret    
10037302:	int3   
10037303:	int3   
10037304:	int3   
10037305:	int3   
10037306:	int3   
10037307:	int3   
10037308:	int3   
10037309:	int3   
1003730a:	int3   
1003730b:	int3   
1003730c:	int3   
1003730d:	int3   
1003730e:	int3   
1003730f:	int3   
10037310:	push   esi
10037311:	mov    esi,ecx
10037313:	mov    DWORD PTR [esi],0x10073634
10037319:	cmp    DWORD PTR [esi+0x24],0x10
1003731d:	jb     0x1003732b
1003731f:	mov    eax,DWORD PTR [esi+0x10]
10037322:	push   eax
10037323:	call   0x10042f82
10037328:	add    esp,0x4
1003732b:	xor    eax,eax
1003732d:	mov    DWORD PTR [esi+0x24],0xf
10037334:	mov    DWORD PTR [esi+0x20],eax
10037337:	mov    BYTE PTR [esi+0x10],al
1003733a:	mov    ecx,esi
1003733c:	pop    esi
1003733d:	jmp    0x100430c0
10037342:	int3   
10037343:	int3   
10037344:	int3   
10037345:	int3   
10037346:	int3   
10037347:	int3   
10037348:	int3   
10037349:	int3   
1003734a:	int3   
1003734b:	int3   
1003734c:	int3   
1003734d:	int3   
1003734e:	int3   
1003734f:	int3   
10037350:	push   0xffffffff
10037352:	push   0x1005ff08
10037357:	mov    eax,fs:0x0
1003735d:	push   eax
1003735e:	push   ecx
1003735f:	push   esi
10037360:	push   edi
10037361:	mov    eax,ds:0x1007e030
10037366:	xor    eax,esp
10037368:	push   eax
10037369:	lea    eax,[esp+0x10]
1003736d:	mov    fs:0x0,eax
10037373:	mov    esi,ecx
10037375:	mov    DWORD PTR [esp+0xc],esi
10037379:	mov    edi,DWORD PTR [esp+0x20]
1003737d:	push   edi
1003737e:	call   0x10043068
10037383:	xor    eax,eax
10037385:	mov    DWORD PTR [esp+0x18],eax
10037389:	push   0xffffffff
1003738b:	lea    ecx,[esi+0xc]
1003738e:	mov    DWORD PTR [esi],0x10073634
10037394:	push   eax
10037395:	add    edi,0xc
10037398:	mov    DWORD PTR [ecx+0x18],0xf
1003739f:	mov    DWORD PTR [ecx+0x14],eax
100373a2:	push   edi
100373a3:	mov    BYTE PTR [ecx+0x4],al
100373a6:	call   0x1000123c
100373ab:	mov    DWORD PTR [esi],0x10073d40
100373b1:	mov    eax,esi
100373b3:	mov    ecx,DWORD PTR [esp+0x10]
100373b7:	mov    DWORD PTR fs:0x0,ecx
100373be:	pop    ecx
100373bf:	pop    edi
100373c0:	pop    esi
100373c1:	add    esp,0x10
100373c4:	ret    0x4
100373c7:	int3   
100373c8:	int3   
100373c9:	int3   
100373ca:	int3   
100373cb:	int3   
100373cc:	int3   
100373cd:	int3   
100373ce:	int3   
100373cf:	int3   
100373d0:	push   esi
100373d1:	mov    esi,ecx
100373d3:	mov    DWORD PTR [esi],0x10073634
100373d9:	cmp    DWORD PTR [esi+0x24],0x10
100373dd:	jb     0x100373eb
100373df:	mov    eax,DWORD PTR [esi+0x10]
100373e2:	push   eax
100373e3:	call   0x10042f82
100373e8:	add    esp,0x4
100373eb:	xor    eax,eax
100373ed:	mov    DWORD PTR [esi+0x24],0xf
100373f4:	mov    DWORD PTR [esi+0x20],eax
100373f7:	mov    ecx,esi
100373f9:	mov    BYTE PTR [esi+0x10],al
100373fc:	call   0x100430c0
10037401:	test   BYTE PTR [esp+0x8],0x1
10037406:	je     0x10037411
10037408:	push   esi
10037409:	call   0x10042f82
1003740e:	add    esp,0x4
10037411:	mov    eax,esi
10037413:	pop    esi
10037414:	ret    0x4
10037417:	int3   
10037418:	int3   
10037419:	int3   
1003741a:	int3   
1003741b:	int3   
1003741c:	int3   
1003741d:	int3   
1003741e:	int3   
1003741f:	int3   
10037420:	push   0xffffffff
10037422:	push   0x100613c0
10037427:	mov    eax,fs:0x0
1003742d:	push   eax
1003742e:	sub    esp,0x1c
10037431:	push   ebx
10037432:	push   esi
10037433:	push   edi
10037434:	mov    eax,ds:0x1007e030
10037439:	xor    eax,esp
1003743b:	push   eax
1003743c:	lea    eax,[esp+0x2c]
10037440:	mov    fs:0x0,eax
10037446:	mov    esi,DWORD PTR [esp+0x3c]
1003744a:	push   0x706d4e96
1003744f:	push   0x10073cfc
10037454:	call   0x100042bd
10037459:	push   eax
1003745a:	push   0xd
1003745c:	push   0x10073d2c
10037461:	call   0x100042cf
10037466:	mov    edi,eax
10037468:	xor    ebx,ebx
1003746a:	push   edi
1003746b:	mov    DWORD PTR [esp+0x40],0xf
10037473:	mov    DWORD PTR [esp+0x3c],ebx
10037477:	mov    BYTE PTR [esp+0x2c],bl
1003747b:	call   0x10043100
10037480:	add    esp,0x18
10037483:	push   eax
10037484:	push   edi
10037485:	lea    ecx,[esp+0x18]
10037489:	call   0x10001336
1003748e:	mov    ecx,esi
10037490:	mov    DWORD PTR [esp+0x34],ebx
10037494:	call   0x10042ff1
10037499:	mov    BYTE PTR [esp+0x34],0x1
1003749e:	push   0xffffffff
100374a0:	lea    ecx,[esi+0xc]
100374a3:	mov    DWORD PTR [esi],0x10073634
100374a9:	push   ebx
100374aa:	lea    eax,[esp+0x18]
100374ae:	mov    DWORD PTR [ecx+0x18],0xf
100374b5:	mov    DWORD PTR [ecx+0x14],ebx
100374b8:	push   eax
100374b9:	mov    BYTE PTR [ecx+0x4],bl
100374bc:	call   0x1000123c
100374c1:	cmp    DWORD PTR [esp+0x28],0x10
100374c6:	jb     0x100374d5
100374c8:	mov    ecx,DWORD PTR [esp+0x14]
100374cc:	push   ecx
100374cd:	call   0x10042f82
100374d2:	add    esp,0x4
100374d5:	mov    eax,esi
100374d7:	mov    DWORD PTR [esi],0x10073d40
100374dd:	mov    ecx,DWORD PTR [esp+0x2c]
100374e1:	mov    DWORD PTR fs:0x0,ecx
100374e8:	pop    ecx
100374e9:	pop    edi
100374ea:	pop    esi
100374eb:	pop    ebx
100374ec:	add    esp,0x28
100374ef:	ret    0x4
100374f2:	int3   
100374f3:	int3   
100374f4:	int3   
100374f5:	int3   
100374f6:	int3   
100374f7:	int3   
100374f8:	int3   
100374f9:	int3   
100374fa:	int3   
100374fb:	int3   
100374fc:	int3   
100374fd:	int3   
100374fe:	int3   
100374ff:	int3   
10037500:	push   0xffffffff
10037502:	push   0x10062641
10037507:	mov    eax,fs:0x0
1003750d:	push   eax
1003750e:	sub    esp,0x10
10037511:	push   ebx
10037512:	push   ebp
10037513:	push   edi
10037514:	mov    eax,ds:0x1007e030
10037519:	xor    eax,esp
1003751b:	push   eax
1003751c:	lea    eax,[esp+0x20]
10037520:	mov    fs:0x0,eax
10037526:	mov    ebp,DWORD PTR [esp+0x30]
1003752a:	xor    eax,eax
1003752c:	mov    DWORD PTR [esp+0x10],eax
10037530:	mov    ecx,DWORD PTR [ebp+0x0]
10037533:	mov    DWORD PTR [esp+0x14],esi
10037537:	mov    DWORD PTR [esp+0x18],ebp
1003753b:	mov    DWORD PTR [esp+0x1c],ecx
1003753f:	mov    edi,0x1
10037544:	mov    DWORD PTR [esp+0x28],edi
10037548:	mov    DWORD PTR [esi+0x18],0xf
1003754f:	mov    DWORD PTR [esi+0x14],eax
10037552:	mov    BYTE PTR [esi+0x4],al
10037555:	mov    eax,ebp
10037557:	mov    DWORD PTR [esp+0x10],edi
1003755b:	call   0x100372d0
10037560:	test   al,al
10037562:	je     0x10037609
10037568:	mov    eax,ebp
1003756a:	call   0x100372d0
1003756f:	or     edx,0xffffffff
10037572:	sub    edx,DWORD PTR [esi+0x14]
10037575:	mov    bl,al
10037577:	cmp    edx,0x1
1003757a:	ja     0x10037581
1003757c:	call   0x10057290
10037581:	mov    edi,DWORD PTR [esi+0x14]
10037584:	add    edi,0x1
10037587:	cmp    edi,0xfffffffe
1003758a:	jbe    0x10037591
1003758c:	call   0x10057290
10037591:	mov    eax,DWORD PTR [esi+0x18]
10037594:	cmp    eax,edi
10037596:	jae    0x100375ba
10037598:	mov    eax,DWORD PTR [esi+0x14]
1003759b:	push   eax
1003759c:	push   edi
1003759d:	mov    ecx,esi
1003759f:	call   0x100014fb
100375a4:	test   edi,edi
100375a6:	jbe    0x100375f0
100375a8:	mov    ecx,DWORD PTR [esi+0x14]
100375ab:	mov    edx,0x10
100375b0:	cmp    DWORD PTR [esi+0x18],edx
100375b3:	jb     0x100375d6
100375b5:	mov    eax,DWORD PTR [esi+0x4]
100375b8:	jmp    0x100375d9
100375ba:	test   edi,edi
100375bc:	jne    0x100375a6
100375be:	cmp    eax,0x10
100375c1:	mov    DWORD PTR [esi+0x14],edi
100375c4:	jb     0x100375ce
100375c6:	mov    eax,DWORD PTR [esi+0x4]
100375c9:	mov    BYTE PTR [eax],0x0
100375cc:	jmp    0x100375f0
100375ce:	lea    eax,[esi+0x4]
100375d1:	mov    BYTE PTR [eax],0x0
100375d4:	jmp    0x100375f0
100375d6:	lea    eax,[esi+0x4]
100375d9:	mov    BYTE PTR [eax+ecx*1],bl
100375dc:	cmp    DWORD PTR [esi+0x18],edx
100375df:	mov    DWORD PTR [esi+0x14],edi
100375e2:	jb     0x100375e9
100375e4:	mov    eax,DWORD PTR [esi+0x4]
100375e7:	jmp    0x100375ec
100375e9:	lea    eax,[esi+0x4]
100375ec:	mov    BYTE PTR [eax+edi*1],0x0
100375f0:	add    DWORD PTR [ebp+0x0],0x1
100375f4:	mov    eax,ebp
100375f6:	call   0x100372d0
100375fb:	test   al,al
100375fd:	jne    0x10037568
10037603:	add    DWORD PTR [ebp+0x0],0x1
10037607:	jmp    0x1003760c
10037609:	add    DWORD PTR [ebp+0x0],edi
1003760c:	mov    eax,esi
1003760e:	mov    ecx,DWORD PTR [esp+0x20]
10037612:	mov    DWORD PTR fs:0x0,ecx
10037619:	pop    ecx
1003761a:	pop    edi
1003761b:	pop    ebp
1003761c:	pop    ebx
1003761d:	add    esp,0x1c
10037620:	ret    0x4
10037623:	int3   
10037624:	int3   
10037625:	int3   
10037626:	int3   
10037627:	int3   
10037628:	int3   
10037629:	int3   
1003762a:	int3   
1003762b:	int3   
1003762c:	int3   
1003762d:	int3   
1003762e:	int3   
1003762f:	int3   
10037630:	push   ebp
10037631:	mov    ebp,esp
10037633:	and    esp,0xfffffff8
10037636:	push   0xffffffff
10037638:	push   0x10063228
1003763d:	mov    eax,fs:0x0
10037643:	push   eax
10037644:	sub    esp,0x38
10037647:	push   ebx
10037648:	mov    eax,ds:0x1007e030
1003764d:	xor    eax,esp
1003764f:	push   eax
10037650:	lea    eax,[esp+0x40]
10037654:	mov    fs:0x0,eax
1003765a:	xor    eax,eax
1003765c:	mov    DWORD PTR [esp+0xc],eax
10037660:	mov    ecx,DWORD PTR [esi]
10037662:	mov    DWORD PTR [esp+0xc],esi
10037666:	mov    DWORD PTR [esp+0x10],ecx
1003766a:	push   esi
1003766b:	mov    DWORD PTR [esp+0x4c],eax
1003766f:	call   0x10037840
10037674:	mov    ecx,DWORD PTR [esi]
10037676:	mov    edx,DWORD PTR [esi+0x4]
10037679:	mov    ebx,eax
1003767b:	sub    edx,ecx
1003767d:	cmp    ebx,edx
1003767f:	jbe    0x1003769a
10037681:	lea    eax,[esp+0x14]
10037685:	push   eax
10037686:	call   0x10037420
1003768b:	push   0x10074f14
10037690:	lea    ecx,[esp+0x18]
10037694:	push   ecx
10037695:	call   0x10047aa4
1003769a:	mov    eax,DWORD PTR [esi+0x8]
1003769d:	add    eax,ecx
1003769f:	push   ebx
100376a0:	mov    DWORD PTR [edi+0x18],0xf
100376a7:	mov    DWORD PTR [edi+0x14],0x0
100376ae:	push   eax
100376af:	mov    ecx,edi
100376b1:	mov    BYTE PTR [edi+0x4],0x0
100376b5:	call   0x10001336
100376ba:	add    DWORD PTR [esi],ebx
100376bc:	mov    eax,edi
100376be:	mov    ecx,DWORD PTR [esp+0x40]
100376c2:	mov    DWORD PTR fs:0x0,ecx
100376c9:	pop    ecx
100376ca:	pop    ebx
100376cb:	mov    esp,ebp
100376cd:	pop    ebp
100376ce:	ret    
100376cf:	int3   
100376d0:	push   0xffffffff
100376d2:	push   0x10063819
100376d7:	mov    eax,fs:0x0
100376dd:	push   eax
100376de:	sub    esp,0x28
100376e1:	mov    eax,ds:0x1007e030
100376e6:	xor    eax,esp
100376e8:	mov    DWORD PTR [esp+0x24],eax
100376ec:	push   ebp
100376ed:	push   esi
100376ee:	push   edi
100376ef:	mov    eax,ds:0x1007e030
100376f4:	xor    eax,esp
100376f6:	push   eax
100376f7:	lea    eax,[esp+0x38]
100376fb:	mov    fs:0x0,eax
10037701:	mov    ebp,DWORD PTR [esp+0x48]
10037705:	xor    eax,eax
10037707:	mov    DWORD PTR [esp+0x40],eax
1003770b:	mov    esi,ecx
1003770d:	lea    edi,[esp+0x18]
10037711:	mov    DWORD PTR [esp+0x14],ebp
10037715:	mov    DWORD PTR [esp+0x10],eax
10037719:	call   0x10037630
1003771e:	mov    DWORD PTR [esp+0x40],0x1
10037726:	mov    eax,ds:0x10080a74
1003772b:	mov    edx,DWORD PTR [eax+0xc]
1003772e:	mov    ecx,0x10080a74
10037733:	call   edx
10037735:	add    eax,0x10
10037738:	mov    DWORD PTR [ebp+0x0],eax
1003773b:	mov    eax,0x1006cd08
10037740:	test   eax,0xffff0000
10037745:	mov    BYTE PTR [esp+0x40],0x2
1003774a:	jne    0x10037768
1003774c:	mov    ecx,eax
1003774e:	movzx  esi,cx
10037751:	push   esi
10037752:	call   0x1000200b
10037757:	add    esp,0x4
1003775a:	test   eax,eax
1003775c:	je     0x10037773
1003775e:	push   esi
1003775f:	push   eax
10037760:	push   ebp
10037761:	call   0x100021ca
10037766:	jmp    0x10037773
10037768:	push   0x1006cd08
1003776d:	push   ebp
1003776e:	call   0x100020b0
10037773:	mov    BYTE PTR [esp+0x40],0x1
10037778:	mov    eax,DWORD PTR [ebp+0x0]
1003777b:	mov    esi,DWORD PTR [esp+0x2c]
1003777f:	mov    edi,0x10
10037784:	sub    eax,edi
10037786:	mov    ecx,0x1
1003778b:	sub    ecx,DWORD PTR [eax+0xc]
1003778e:	mov    eax,DWORD PTR [eax+0x8]
10037791:	add    esi,esi
10037793:	sub    eax,esi
10037795:	or     eax,ecx
10037797:	mov    DWORD PTR [esp+0x10],0x1
1003779f:	jge    0x100377aa
100377a1:	mov    eax,esi
100377a3:	mov    ecx,ebp
100377a5:	call   0x10002250
100377aa:	cmp    DWORD PTR [esp+0x30],edi
100377ae:	mov    ecx,DWORD PTR [ebp+0x0]
100377b1:	mov    eax,DWORD PTR [esp+0x1c]
100377b5:	jae    0x100377bb
100377b7:	lea    eax,[esp+0x1c]
100377bb:	push   esi
100377bc:	push   ecx
100377bd:	push   0xffffffff
100377bf:	push   eax
100377c0:	push   0x0
100377c2:	push   0xfde9
100377c7:	call   DWORD PTR ds:0x1006608c
100377cd:	mov    eax,DWORD PTR [ebp+0x0]
100377d0:	test   eax,eax
100377d2:	je     0x100377e1
100377d4:	push   eax
100377d5:	call   0x100437e3
100377da:	add    esp,0x4
100377dd:	test   eax,eax
100377df:	jl     0x1003782a
100377e1:	mov    ecx,DWORD PTR [ebp+0x0]
100377e4:	cmp    eax,DWORD PTR [ecx-0x8]
100377e7:	jg     0x1003782a
100377e9:	mov    DWORD PTR [ecx-0xc],eax
100377ec:	mov    edx,DWORD PTR [ebp+0x0]
100377ef:	mov    WORD PTR [edx+eax*2],0x0
100377f5:	cmp    DWORD PTR [esp+0x30],edi
100377f9:	jb     0x10037808
100377fb:	mov    eax,DWORD PTR [esp+0x1c]
100377ff:	push   eax
10037800:	call   0x10042f82
10037805:	add    esp,0x4
10037808:	mov    eax,ebp
1003780a:	mov    ecx,DWORD PTR [esp+0x38]
1003780e:	mov    DWORD PTR fs:0x0,ecx
10037815:	pop    ecx
10037816:	pop    edi
10037817:	pop    esi
10037818:	pop    ebp
10037819:	mov    ecx,DWORD PTR [esp+0x24]
1003781d:	xor    ecx,esp
1003781f:	call   0x10042f87
10037824:	add    esp,0x34
10037827:	ret    0x4
1003782a:	push   0x80070057
1003782f:	call   0x10001f33
10037834:	int3   
10037835:	int3   
10037836:	int3   
10037837:	int3   
10037838:	int3   
10037839:	int3   
1003783a:	int3   
1003783b:	int3   
1003783c:	int3   
1003783d:	int3   
1003783e:	int3   
1003783f:	int3   
10037840:	push   ebp
10037841:	mov    ebp,esp
10037843:	and    esp,0xfffffff8
10037846:	push   0xffffffff
10037848:	push   0x100625f8
1003784d:	mov    eax,fs:0x0
10037853:	push   eax
10037854:	sub    esp,0x3c
10037857:	push   esi
10037858:	push   edi
10037859:	mov    eax,ds:0x1007e030
1003785e:	xor    eax,esp
10037860:	push   eax
10037861:	lea    eax,[esp+0x48]
10037865:	mov    fs:0x0,eax
1003786b:	mov    eax,DWORD PTR [ebp+0x8]
1003786e:	mov    ecx,DWORD PTR [eax]
10037870:	mov    DWORD PTR [esp+0x14],eax
10037874:	mov    DWORD PTR [esp+0x18],ecx
10037878:	mov    DWORD PTR [esp+0x50],0x0
10037880:	mov    edi,DWORD PTR [eax+0x4]
10037883:	cmp    ecx,edi
10037885:	jbe    0x100378a0
10037887:	lea    eax,[esp+0x1c]
1003788b:	push   eax
1003788c:	call   0x10037420
10037891:	push   0x10074f14
10037896:	lea    ecx,[esp+0x20]
1003789a:	push   ecx
1003789b:	call   0x10047aa4
100378a0:	mov    esi,DWORD PTR [eax+0x8]
100378a3:	mov    dl,BYTE PTR [esi+ecx*1]
100378a6:	add    ecx,0x1
100378a9:	cmp    ecx,edi
100378ab:	mov    BYTE PTR [esp+0x10],dl
100378af:	mov    DWORD PTR [eax],ecx
100378b1:	jbe    0x100378cc
100378b3:	lea    eax,[esp+0x1c]
100378b7:	push   eax
100378b8:	call   0x10037420
100378bd:	push   0x10074f14
100378c2:	lea    ecx,[esp+0x20]
100378c6:	push   ecx
100378c7:	call   0x10047aa4
100378cc:	mov    dl,BYTE PTR [ecx+esi*1]
100378cf:	add    ecx,0x1
100378d2:	cmp    ecx,edi
100378d4:	mov    BYTE PTR [esp+0x11],dl
100378d8:	mov    DWORD PTR [eax],ecx
100378da:	jbe    0x100378f5
100378dc:	lea    eax,[esp+0x1c]
100378e0:	push   eax
100378e1:	call   0x10037420
100378e6:	push   0x10074f14
100378eb:	lea    ecx,[esp+0x20]
100378ef:	push   ecx
100378f0:	call   0x10047aa4
100378f5:	mov    dl,BYTE PTR [ecx+esi*1]
100378f8:	add    ecx,0x1
100378fb:	cmp    ecx,edi
100378fd:	mov    BYTE PTR [esp+0x12],dl
10037901:	mov    DWORD PTR [eax],ecx
10037903:	jbe    0x1003791e
10037905:	lea    eax,[esp+0x1c]
10037909:	push   eax
1003790a:	call   0x10037420
1003790f:	push   0x10074f14
10037914:	lea    ecx,[esp+0x20]
10037918:	push   ecx
10037919:	call   0x10047aa4
1003791e:	mov    dl,BYTE PTR [ecx+esi*1]
10037921:	add    ecx,0x1
10037924:	mov    BYTE PTR [esp+0x13],dl
10037928:	mov    DWORD PTR [eax],ecx
1003792a:	mov    eax,DWORD PTR [esp+0x10]
1003792e:	mov    ecx,DWORD PTR [esp+0x48]
10037932:	mov    DWORD PTR fs:0x0,ecx
10037939:	pop    ecx
1003793a:	pop    edi
1003793b:	pop    esi
1003793c:	mov    esp,ebp
1003793e:	pop    ebp
1003793f:	ret    0x4
10037942:	int3   
10037943:	int3   
10037944:	int3   
10037945:	int3   
10037946:	int3   
10037947:	int3   
10037948:	int3   
10037949:	int3   
1003794a:	int3   
1003794b:	int3   
1003794c:	int3   
1003794d:	int3   
1003794e:	int3   
1003794f:	int3   
10037950:	mov    eax,DWORD PTR [esi]
10037952:	lea    ecx,[eax+edi*1]
10037955:	sub    esp,0x28
10037958:	cmp    ecx,DWORD PTR [esi+0x4]
1003795b:	jbe    0x10037975
1003795d:	lea    edx,[esp]
10037960:	push   edx
10037961:	call   0x10037420
10037966:	push   0x10074f14
1003796b:	lea    eax,[esp+0x4]
1003796f:	push   eax
10037970:	call   0x10047aa4
10037975:	mov    ecx,DWORD PTR [esi+0x8]
10037978:	mov    edx,DWORD PTR [esp+0x2c]
1003797c:	push   edi
1003797d:	add    ecx,eax
1003797f:	push   ecx
10037980:	push   edx
10037981:	call   0x10045270
10037986:	add    esp,0xc
10037989:	add    DWORD PTR [esi],edi
1003798b:	add    esp,0x28
1003798e:	ret    0x4
10037991:	int3   
10037992:	int3   
10037993:	int3   
10037994:	int3   
10037995:	int3   
10037996:	int3   
10037997:	int3   
10037998:	int3   
10037999:	int3   
1003799a:	int3   
1003799b:	int3   
1003799c:	int3   
1003799d:	int3   
1003799e:	int3   
1003799f:	int3   
100379a0:	mov    eax,DWORD PTR [ecx]
100379a2:	test   eax,eax
100379a4:	je     0x100379ab
100379a6:	mov    ecx,DWORD PTR [ecx+0x4]
100379a9:	mov    DWORD PTR [eax],ecx
100379ab:	ret    
100379ac:	int3   
100379ad:	int3   
100379ae:	int3   
100379af:	int3   
100379b0:	push   0x10080d4c
100379b5:	call   DWORD PTR ds:0x100660a4
100379bb:	mov    eax,DWORD PTR [esp+0x4]
100379bf:	ret    0x4
100379c2:	int3   
100379c3:	int3   
100379c4:	int3   
100379c5:	int3   
100379c6:	int3   
100379c7:	int3   
100379c8:	int3   
100379c9:	int3   
100379ca:	int3   
100379cb:	int3   
100379cc:	int3   
100379cd:	int3   
100379ce:	int3   
100379cf:	int3   
100379d0:	push   0x10080d4c
100379d5:	call   DWORD PTR ds:0x100660ac
100379db:	ret    
100379dc:	int3   
100379dd:	int3   
100379de:	int3   
100379df:	int3   
100379e0:	push   ebp
100379e1:	mov    ebp,esp
100379e3:	push   0xffffffff
100379e5:	push   0x100625d0
100379ea:	mov    eax,fs:0x0
100379f0:	push   eax
100379f1:	sub    esp,0x10
100379f4:	push   ebx
100379f5:	push   esi
100379f6:	push   edi
100379f7:	mov    eax,ds:0x1007e030
100379fc:	xor    eax,ebp
100379fe:	push   eax
100379ff:	lea    eax,[ebp-0xc]
10037a02:	mov    fs:0x0,eax
10037a08:	mov    DWORD PTR [ebp-0x10],esp
10037a0b:	push   0x1
10037a0d:	lea    eax,[ebp-0x18]
10037a10:	push   eax
10037a11:	mov    DWORD PTR [ebp-0x4],0x0
10037a18:	call   0x10034a90
10037a1d:	mov    ecx,DWORD PTR [ebp+0x8]
10037a20:	mov    esi,DWORD PTR [ebp-0x18]
10037a23:	push   0x0
10037a25:	lea    edx,[ebp-0x1c]
10037a28:	push   edx
10037a29:	push   0x4
10037a2b:	lea    eax,[ebp-0x14]
10037a2e:	push   eax
10037a2f:	push   0x4
10037a31:	mov    DWORD PTR [ebp-0x14],ecx
10037a34:	mov    ecx,eax
10037a36:	push   ecx
10037a37:	push   0x22c068
10037a3c:	push   esi
10037a3d:	call   DWORD PTR ds:0x10066260
10037a43:	push   esi
10037a44:	call   DWORD PTR ds:0x10066070
10037a4a:	mov    ecx,DWORD PTR [ebp-0xc]
10037a4d:	mov    DWORD PTR fs:0x0,ecx
10037a54:	pop    ecx
10037a55:	pop    edi
10037a56:	pop    esi
10037a57:	pop    ebx
10037a58:	mov    esp,ebp
10037a5a:	pop    ebp
10037a5b:	ret    
10037a5c:	mov    eax,0x10037a4a
10037a61:	ret    
10037a62:	int3   
10037a63:	int3   
10037a64:	int3   
10037a65:	int3   
10037a66:	int3   
10037a67:	int3   
10037a68:	int3   
10037a69:	int3   
10037a6a:	int3   
10037a6b:	int3   
10037a6c:	int3   
10037a6d:	int3   
10037a6e:	int3   
10037a6f:	int3   
10037a70:	push   ebp
10037a71:	mov    ebp,esp
10037a73:	push   0xffffffff
10037a75:	push   0x100625a8
10037a7a:	mov    eax,fs:0x0
10037a80:	push   eax
10037a81:	sub    esp,0x1c
10037a84:	push   ebx
10037a85:	push   esi
10037a86:	push   edi
10037a87:	mov    eax,ds:0x1007e030
10037a8c:	xor    eax,ebp
10037a8e:	push   eax
10037a8f:	lea    eax,[ebp-0xc]
10037a92:	mov    fs:0x0,eax
10037a98:	mov    DWORD PTR [ebp-0x10],esp
10037a9b:	xor    esi,esi
10037a9d:	mov    DWORD PTR [ebp-0x24],esi
10037aa0:	mov    eax,ds:0x10080a74
10037aa5:	mov    edx,DWORD PTR [eax+0xc]
10037aa8:	mov    ecx,0x10080a74
10037aad:	call   edx
10037aaf:	lea    edi,[eax+0x10]
10037ab2:	mov    DWORD PTR [ebp-0x14],edi
10037ab5:	push   0x1
10037ab7:	lea    eax,[ebp-0x24]
10037aba:	mov    DWORD PTR [ebp-0x4],esi
10037abd:	push   eax
10037abe:	mov    BYTE PTR [ebp-0x4],0x1
10037ac2:	call   0x10034a90
10037ac7:	mov    BYTE PTR [ebp-0x4],0x2
10037acb:	mov    DWORD PTR [ebp-0x20],esi
10037ace:	mov    edi,edi
10037ad0:	cmp    esi,0x12
10037ad3:	je     0x10037c1b
10037ad9:	mov    edx,DWORD PTR ds:0x10080a74
10037adf:	mov    eax,DWORD PTR [edx+0xc]
10037ae2:	mov    ecx,0x10080a74
10037ae7:	call   eax
10037ae9:	add    eax,0x10
10037aec:	mov    DWORD PTR [ebp-0x1c],eax
10037aef:	push   0x0
10037af1:	lea    ecx,[ebp-0x28]
10037af4:	push   ecx
10037af5:	push   0x4
10037af7:	lea    edx,[ebp-0x18]
10037afa:	push   edx
10037afb:	push   0x4
10037afd:	mov    eax,edx
10037aff:	push   eax
10037b00:	mov    BYTE PTR [ebp-0x4],0x3
10037b04:	mov    ecx,DWORD PTR [ebp-0x24]
10037b07:	push   0x22c06c
10037b0c:	push   ecx
10037b0d:	mov    DWORD PTR [ebp-0x18],esi
10037b10:	call   DWORD PTR ds:0x10066260
10037b16:	mov    esi,DWORD PTR [ebp-0x18]
10037b19:	test   esi,esi
10037b1b:	je     0x10037baa
10037b21:	push   0x2dae3d7c
10037b26:	push   0x10073d48
10037b2b:	call   0x100042bd
10037b30:	add    esp,0x8
10037b33:	push   0x26102633
10037b38:	push   eax
10037b39:	call   0x100042bd
10037b3e:	add    esp,0x8
10037b41:	push   0x4aa9ab68
10037b46:	push   eax
10037b47:	call   0x100042bd
10037b4c:	add    esp,0x8
10037b4f:	push   0xe96d416
10037b54:	push   eax
10037b55:	call   0x100042bd
10037b5a:	add    esp,0x8
10037b5d:	push   0x20cd61f9
10037b62:	push   eax
10037b63:	call   0x100042bd
10037b68:	add    esp,0x8
10037b6b:	push   0x69933336
10037b70:	push   eax
10037b71:	call   0x100042bd
10037b76:	add    esp,0x8
10037b79:	push   eax
10037b7a:	push   0x2
10037b7c:	push   0x10073d74
10037b81:	call   0x100042cf
10037b86:	add    esp,0xc
10037b89:	push   esi
10037b8a:	push   eax
10037b8b:	lea    edi,[ebp-0x1c]
10037b8e:	call   0x10037dd0
10037b93:	mov    eax,DWORD PTR [ebp-0x1c]
10037b96:	mov    ecx,DWORD PTR [eax-0xc]
10037b99:	add    esp,0x8
10037b9c:	push   ecx
10037b9d:	push   eax
10037b9e:	lea    edx,[ebp-0x14]
10037ba1:	push   edx
10037ba2:	call   0x10034850
10037ba7:	mov    edi,DWORD PTR [ebp-0x14]
10037baa:	mov    ebx,DWORD PTR [edi-0xc]
10037bad:	mov    eax,DWORD PTR [edi-0x8]
10037bb0:	mov    ecx,0x1
10037bb5:	sub    ecx,DWORD PTR [edi-0x4]
10037bb8:	lea    esi,[ebx+0x1]
10037bbb:	sub    eax,esi
10037bbd:	or     eax,ecx
10037bbf:	jge    0x10037bce
10037bc1:	mov    ecx,esi
10037bc3:	lea    eax,[ebp-0x14]
10037bc6:	call   0x10034790
10037bcb:	mov    edi,DWORD PTR [ebp-0x14]
10037bce:	test   esi,esi
10037bd0:	mov    BYTE PTR [ebx+edi*1],0x2c
10037bd4:	jl     0x10037c11
10037bd6:	cmp    esi,DWORD PTR [edi-0x8]
10037bd9:	jg     0x10037c11
10037bdb:	mov    BYTE PTR [ebp-0x4],0x2
10037bdf:	mov    eax,DWORD PTR [ebp-0x1c]
10037be2:	add    eax,0xfffffff0
10037be5:	mov    DWORD PTR [edi-0xc],esi
10037be8:	mov    BYTE PTR [esi+edi*1],0x0
10037bec:	lea    ecx,[eax+0xc]
10037bef:	or     edx,0xffffffff
10037bf2:	lock xadd DWORD PTR [ecx],edx
10037bf6:	dec    edx
10037bf7:	test   edx,edx
10037bf9:	jg     0x10037c05
10037bfb:	mov    ecx,DWORD PTR [eax]
10037bfd:	mov    edx,DWORD PTR [ecx]
10037bff:	push   eax
10037c00:	mov    eax,DWORD PTR [edx+0x4]
10037c03:	call   eax
10037c05:	add    DWORD PTR [ebp-0x20],0x1
10037c09:	mov    esi,DWORD PTR [ebp-0x20]
10037c0c:	jmp    0x10037ad0
10037c11:	push   0x80070057
10037c16:	call   0x10001f33
10037c1b:	lea    edi,[ebp-0x14]
10037c1e:	call   0x10037d50
10037c23:	mov    ecx,DWORD PTR [ebp-0x24]
10037c26:	push   ecx
10037c27:	call   DWORD PTR ds:0x10066070
10037c2d:	mov    DWORD PTR [ebp-0x4],0x0
10037c34:	mov    eax,DWORD PTR [ebp-0x14]
10037c37:	cmp    DWORD PTR [eax-0x4],0x1
10037c3b:	jle    0x10037c4d
10037c3d:	mov    edx,DWORD PTR [eax-0xc]
10037c40:	push   edx
10037c41:	lea    eax,[ebp-0x14]
10037c44:	push   eax
10037c45:	call   0x10034610
10037c4a:	mov    eax,DWORD PTR [ebp-0x14]
10037c4d:	mov    esi,DWORD PTR [ebp+0x8]
10037c50:	mov    DWORD PTR [esi+0x18],0xf
10037c57:	mov    DWORD PTR [esi+0x14],0x0
10037c5e:	lea    edi,[esi+0x4]
10037c61:	push   eax
10037c62:	mov    BYTE PTR [edi],0x0
10037c65:	call   0x10043100
10037c6a:	mov    ebx,eax
10037c6c:	mov    eax,DWORD PTR [esi+0x18]
10037c6f:	add    esp,0x4
10037c72:	cmp    eax,0x10
10037c75:	jb     0x10037c81
10037c77:	mov    ecx,DWORD PTR [edi]
10037c79:	jmp    0x10037c83
10037c7b:	mov    eax,0x10037c34
10037c80:	ret    
10037c81:	mov    ecx,edi
10037c83:	cmp    DWORD PTR [ebp-0x14],ecx
10037c86:	jb     0x10037cb4
10037c88:	cmp    eax,0x10
10037c8b:	jb     0x10037c91
10037c8d:	mov    ecx,DWORD PTR [edi]
10037c8f:	jmp    0x10037c93
10037c91:	mov    ecx,edi
10037c93:	mov    edx,DWORD PTR [esi+0x14]
10037c96:	add    edx,ecx
10037c98:	mov    ecx,DWORD PTR [ebp-0x14]
10037c9b:	cmp    edx,ecx
10037c9d:	jbe    0x10037cb4
10037c9f:	cmp    eax,0x10
10037ca2:	jb     0x10037ca6
10037ca4:	mov    edi,DWORD PTR [edi]
10037ca6:	push   ebx
10037ca7:	sub    ecx,edi
10037ca9:	push   ecx
10037caa:	push   esi
10037cab:	mov    ecx,esi
10037cad:	call   0x1000123c
10037cb2:	jmp    0x10037d14
10037cb4:	cmp    ebx,0xfffffffe
10037cb7:	jbe    0x10037cbe
10037cb9:	call   0x10057290
10037cbe:	mov    eax,DWORD PTR [esi+0x18]
10037cc1:	cmp    eax,ebx
10037cc3:	jae    0x10037ce1
10037cc5:	mov    eax,DWORD PTR [esi+0x14]
10037cc8:	push   eax
10037cc9:	push   ebx
10037cca:	mov    ecx,esi
10037ccc:	call   0x100014fb
10037cd1:	test   ebx,ebx
10037cd3:	jbe    0x10037d14
10037cd5:	mov    ecx,DWORD PTR [esi+0x18]
10037cd8:	cmp    ecx,0x10
10037cdb:	jb     0x10037cf4
10037cdd:	mov    eax,DWORD PTR [edi]
10037cdf:	jmp    0x10037cf6
10037ce1:	test   ebx,ebx
10037ce3:	jne    0x10037cd3
10037ce5:	cmp    eax,0x10
10037ce8:	mov    DWORD PTR [esi+0x14],ebx
10037ceb:	jb     0x10037cef
10037ced:	mov    edi,DWORD PTR [edi]
10037cef:	mov    BYTE PTR [edi],0x0
10037cf2:	jmp    0x10037d14
10037cf4:	mov    eax,edi
10037cf6:	mov    edx,DWORD PTR [ebp-0x14]
10037cf9:	push   ebx
10037cfa:	push   edx
10037cfb:	push   ecx
10037cfc:	push   eax
10037cfd:	call   0x100434b5
10037d02:	add    esp,0x10
10037d05:	cmp    DWORD PTR [esi+0x18],0x10
10037d09:	mov    DWORD PTR [esi+0x14],ebx
10037d0c:	jb     0x10037d10
10037d0e:	mov    edi,DWORD PTR [edi]
10037d10:	mov    BYTE PTR [edi+ebx*1],0x0
10037d14:	mov    DWORD PTR [ebp-0x4],0xffffffff
10037d1b:	mov    eax,DWORD PTR [ebp-0x14]
10037d1e:	add    eax,0xfffffff0
10037d21:	lea    ecx,[eax+0xc]
10037d24:	or     edx,0xffffffff
10037d27:	lock xadd DWORD PTR [ecx],edx
10037d2b:	dec    edx
10037d2c:	test   edx,edx
10037d2e:	jg     0x10037d3a
10037d30:	mov    ecx,DWORD PTR [eax]
10037d32:	mov    edx,DWORD PTR [ecx]
10037d34:	push   eax
10037d35:	mov    eax,DWORD PTR [edx+0x4]
10037d38:	call   eax
10037d3a:	mov    eax,esi
10037d3c:	mov    ecx,DWORD PTR [ebp-0xc]
10037d3f:	mov    DWORD PTR fs:0x0,ecx
10037d46:	pop    ecx
10037d47:	pop    edi
10037d48:	pop    esi
10037d49:	pop    ebx
10037d4a:	mov    esp,ebp
10037d4c:	pop    ebp
10037d4d:	ret    
10037d4e:	int3   
10037d4f:	int3   
10037d50:	mov    eax,DWORD PTR [edi]
10037d52:	mov    cl,BYTE PTR [eax]
10037d54:	push   esi
10037d55:	xor    esi,esi
10037d57:	test   cl,cl
10037d59:	je     0x10037db4
10037d5b:	jmp    0x10037d60
10037d5d:	lea    ecx,[ecx+0x0]
10037d60:	cmp    cl,0x2c
10037d63:	jne    0x10037d6d
10037d65:	test   esi,esi
10037d67:	jne    0x10037d6f
10037d69:	mov    esi,eax
10037d6b:	jmp    0x10037d6f
10037d6d:	xor    esi,esi
10037d6f:	push   eax
10037d70:	call   0x1005918a
10037d75:	mov    cl,BYTE PTR [eax]
10037d77:	add    esp,0x4
10037d7a:	test   cl,cl
10037d7c:	jne    0x10037d60
10037d7e:	test   esi,esi
10037d80:	je     0x10037db4
10037d82:	mov    eax,DWORD PTR [edi]
10037d84:	mov    edx,DWORD PTR [eax-0x8]
10037d87:	sub    esi,eax
10037d89:	mov    ecx,0x1
10037d8e:	sub    ecx,DWORD PTR [eax-0x4]
10037d91:	sub    edx,esi
10037d93:	or     ecx,edx
10037d95:	jge    0x10037da0
10037d97:	mov    ecx,esi
10037d99:	mov    eax,edi
10037d9b:	call   0x10034790
10037da0:	test   esi,esi
10037da2:	jl     0x10037db8
10037da4:	mov    eax,DWORD PTR [edi]
10037da6:	cmp    esi,DWORD PTR [eax-0x8]
10037da9:	jg     0x10037db8
10037dab:	mov    DWORD PTR [eax-0xc],esi
10037dae:	mov    eax,DWORD PTR [edi]
10037db0:	mov    BYTE PTR [esi+eax*1],0x0
10037db4:	mov    eax,edi
10037db6:	pop    esi
10037db7:	ret    
10037db8:	push   0x80070057
10037dbd:	call   0x10001f33
10037dc2:	int3   
10037dc3:	int3   
10037dc4:	int3   
10037dc5:	int3   
10037dc6:	int3   
10037dc7:	int3   
10037dc8:	int3   
10037dc9:	int3   
10037dca:	int3   
10037dcb:	int3   
10037dcc:	int3   
10037dcd:	int3   
10037dce:	int3   
10037dcf:	int3   
10037dd0:	push   ebx
10037dd1:	mov    ebx,DWORD PTR [esp+0x8]
10037dd5:	lea    eax,[esp+0xc]
10037dd9:	push   eax
10037dda:	call   0x10037df0
10037ddf:	pop    ebx
10037de0:	ret    
10037de1:	int3   
10037de2:	int3   
10037de3:	int3   
10037de4:	int3   
10037de5:	int3   
10037de6:	int3   
10037de7:	int3   
10037de8:	int3   
10037de9:	int3   
10037dea:	int3   
10037deb:	int3   
10037dec:	int3   
10037ded:	int3   
10037dee:	int3   
10037def:	int3   
10037df0:	test   ebx,ebx
10037df2:	push   ebp
10037df3:	mov    ebp,DWORD PTR [esp+0x8]
10037df7:	jne    0x10037e03
10037df9:	push   0x80070057
10037dfe:	call   0x10001f33
10037e03:	push   esi
10037e04:	push   ebp
10037e05:	push   ebx
10037e06:	call   0x10059220
10037e0b:	mov    esi,eax
10037e0d:	mov    eax,DWORD PTR [edi]
10037e0f:	mov    edx,DWORD PTR [eax-0x8]
10037e12:	sub    eax,0x10
10037e15:	mov    ecx,0x1
10037e1a:	sub    ecx,DWORD PTR [eax+0xc]
10037e1d:	sub    edx,esi
10037e1f:	add    esp,0x8
10037e22:	or     ecx,edx
10037e24:	jge    0x10037e2f
10037e26:	mov    ecx,esi
10037e28:	mov    eax,edi
10037e2a:	call   0x10034790
10037e2f:	mov    ecx,DWORD PTR [edi]
10037e31:	push   ebp
10037e32:	push   ebx
10037e33:	lea    eax,[esi+0x1]
10037e36:	push   eax
10037e37:	push   ecx
10037e38:	call   0x1005916f
10037e3d:	add    esp,0x10
10037e40:	test   esi,esi
10037e42:	jl     0x10037e59
10037e44:	mov    eax,DWORD PTR [edi]
10037e46:	cmp    esi,DWORD PTR [eax-0x8]
10037e49:	jg     0x10037e59
10037e4b:	mov    DWORD PTR [eax-0xc],esi
10037e4e:	mov    edx,DWORD PTR [edi]
10037e50:	mov    BYTE PTR [esi+edx*1],0x0
10037e54:	pop    esi
10037e55:	pop    ebp
10037e56:	ret    0x4
10037e59:	push   0x80070057
10037e5e:	call   0x10001f33
10037e63:	int3   
10037e64:	int3   
10037e65:	int3   
10037e66:	int3   
10037e67:	int3   
10037e68:	int3   
10037e69:	int3   
10037e6a:	int3   
10037e6b:	int3   
10037e6c:	int3   
10037e6d:	int3   
10037e6e:	int3   
10037e6f:	int3   
10037e70:	push   ecx
10037e71:	mov    eax,DWORD PTR [edi]
10037e73:	lea    ecx,[esp]
10037e76:	push   ecx
10037e77:	mov    ecx,DWORD PTR [esp+0xc]
10037e7b:	push   esi
10037e7c:	add    eax,eax
10037e7e:	lea    edx,[esp+0x14]
10037e82:	push   edx
10037e83:	mov    DWORD PTR [esp+0xc],eax
10037e87:	mov    eax,DWORD PTR [esp+0x18]
10037e8b:	push   0x0
10037e8d:	mov    DWORD PTR [edi],0x0
10037e93:	mov    edx,DWORD PTR [ecx]
10037e95:	push   eax
10037e96:	push   edx
10037e97:	call   DWORD PTR ds:0x10066000
10037e9d:	test   eax,eax
10037e9f:	jne    0x10037ede
10037ea1:	mov    eax,DWORD PTR [esp+0xc]
10037ea5:	cmp    eax,0x1
10037ea8:	je     0x10037eaf
10037eaa:	cmp    eax,0x2
10037ead:	jne    0x10037eca
10037eaf:	test   esi,esi
10037eb1:	mov    eax,DWORD PTR [esp]
10037eb4:	je     0x10037ed8
10037eb6:	test   eax,eax
10037eb8:	je     0x10037ed3
10037eba:	test   al,0x1
10037ebc:	jne    0x10037eca
10037ebe:	mov    ecx,eax
10037ec0:	shr    ecx,1
10037ec2:	cmp    WORD PTR [esi+ecx*2-0x2],0x0
10037ec8:	je     0x10037ed8
10037eca:	mov    eax,0xd
10037ecf:	pop    ecx
10037ed0:	ret    0x8
10037ed3:	mov    WORD PTR [esi],0x0
10037ed8:	shr    eax,1
10037eda:	mov    DWORD PTR [edi],eax
10037edc:	xor    eax,eax
10037ede:	pop    ecx
10037edf:	ret    0x8
10037ee2:	int3   
10037ee3:	int3   
10037ee4:	int3   
10037ee5:	int3   
10037ee6:	int3   
10037ee7:	int3   
10037ee8:	int3   
10037ee9:	int3   
10037eea:	int3   
10037eeb:	int3   
10037eec:	int3   
10037eed:	int3   
10037eee:	int3   
10037eef:	int3   
10037ef0:	push   0xffffffff
10037ef2:	push   0x10061390
10037ef7:	mov    eax,fs:0x0
10037efd:	push   eax
10037efe:	sub    esp,0x34
10037f01:	push   ebx
10037f02:	push   ebp
10037f03:	push   esi
10037f04:	push   edi
10037f05:	mov    eax,ds:0x1007e030
10037f0a:	xor    eax,esp
10037f0c:	push   eax
10037f0d:	lea    eax,[esp+0x48]
10037f11:	mov    fs:0x0,eax
10037f17:	mov    ebp,DWORD PTR [esp+0x58]
10037f1b:	xor    edi,edi
10037f1d:	mov    DWORD PTR [esp+0x38],edi
10037f21:	mov    DWORD PTR [esp+0x24],edi
10037f25:	push   0x31913908
10037f2a:	push   0x10073d78
10037f2f:	mov    DWORD PTR [esp+0x58],edi
10037f33:	call   0x100042bd
10037f38:	push   0x5a33bc30
10037f3d:	push   eax
10037f3e:	call   0x100042bd
10037f43:	push   0x38e9736
10037f48:	push   eax
10037f49:	call   0x100042bd
10037f4e:	push   0x75ea6848
10037f53:	push   eax
10037f54:	call   0x100042bd
10037f59:	push   eax
10037f5a:	push   0x3d
10037f5c:	push   0x10073db0
10037f61:	call   0x1000448e
10037f66:	add    esp,0x2c
10037f69:	lea    ecx,[esp+0x1c]
10037f6d:	push   ecx
10037f6e:	push   0x20019
10037f73:	push   edi
10037f74:	push   eax
10037f75:	push   0x80000002
10037f7a:	mov    DWORD PTR [esp+0x30],edi
10037f7e:	call   DWORD PTR ds:0x10066020
10037f84:	cmp    eax,edi
10037f86:	jne    0x100383af
10037f8c:	mov    edx,DWORD PTR [esp+0x1c]
10037f90:	mov    DWORD PTR [esp+0x24],edx
10037f94:	mov    DWORD PTR [esp+0x20],0x1
10037f9c:	lea    esp,[esp+0x0]
10037fa0:	mov    eax,ds:0x10080a74
10037fa5:	mov    edx,DWORD PTR [eax+0xc]
10037fa8:	mov    ecx,0x10080a74
10037fad:	call   edx
10037faf:	add    eax,0x10
10037fb2:	mov    DWORD PTR [esp+0x14],eax
10037fb6:	mov    BYTE PTR [esp+0x50],0x1
10037fbb:	mov    eax,ds:0x10080a74
10037fc0:	mov    edx,DWORD PTR [eax+0xc]
10037fc3:	mov    ecx,0x10080a74
10037fc8:	call   edx
10037fca:	lea    ebx,[eax+0x10]
10037fcd:	mov    DWORD PTR [esp+0x28],ebx
10037fd1:	mov    eax,DWORD PTR [esp+0x20]
10037fd5:	push   eax
10037fd6:	push   0x31afa1df
10037fdb:	push   0x7d1ba2ce
10037fe0:	push   0xc14de20
10037fe5:	push   0x736f8c95
10037fea:	push   0x65dcaf32
10037fef:	push   0x19806407
10037ff4:	push   0x10073e2c
10037ff9:	mov    BYTE PTR [esp+0x70],0x2
10037ffe:	call   0x100042bd
10038003:	add    esp,0x8
10038006:	push   eax
10038007:	call   0x100042bd
1003800c:	add    esp,0x8
1003800f:	push   eax
10038010:	call   0x100042bd
10038015:	add    esp,0x8
10038018:	push   eax
10038019:	call   0x100042bd
1003801e:	add    esp,0x8
10038021:	push   eax
10038022:	call   0x100042bd
10038027:	add    esp,0x8
1003802a:	push   eax
1003802b:	call   0x100042bd
10038030:	push   eax
10038031:	push   0x12
10038033:	push   0x10073e58
10038038:	call   0x1000448e
1003803d:	add    esp,0x14
10038040:	push   eax
10038041:	lea    eax,[esp+0x1c]
10038045:	call   0x100064f0
1003804a:	mov    esi,DWORD PTR [esp+0x1c]
1003804e:	mov    eax,DWORD PTR [esp+0x24]
10038052:	add    esp,0x8
10038055:	lea    ecx,[esp+0x18]
10038059:	push   ecx
1003805a:	push   edi
1003805b:	lea    edx,[esp+0x38]
1003805f:	push   edx
10038060:	push   edi
10038061:	push   esi
10038062:	push   eax
10038063:	mov    DWORD PTR [esp+0x30],0x2
1003806b:	call   DWORD PTR ds:0x10066000
10038071:	cmp    eax,edi
10038073:	jne    0x1003836d
10038079:	mov    eax,DWORD PTR [esp+0x30]
1003807d:	cmp    eax,0x1
10038080:	je     0x1003808b
10038082:	cmp    eax,0x2
10038085:	jne    0x1003836d
1003808b:	mov    eax,DWORD PTR [esp+0x18]
1003808f:	shr    eax,1
10038091:	je     0x1003836d
10038097:	mov    ecx,DWORD PTR [ebx-0x8]
1003809a:	add    eax,0x1
1003809d:	mov    edx,0x1
100380a2:	sub    edx,DWORD PTR [ebx-0x4]
100380a5:	sub    ecx,eax
100380a7:	or     ecx,edx
100380a9:	mov    DWORD PTR [esp+0x2c],eax
100380ad:	jge    0x100380bc
100380af:	lea    ecx,[esp+0x28]
100380b3:	call   0x10002250
100380b8:	mov    ebx,DWORD PTR [esp+0x28]
100380bc:	mov    ebp,DWORD PTR [esp+0x14]
100380c0:	push   ebp
100380c1:	lea    ecx,[esp+0x28]
100380c5:	push   ecx
100380c6:	lea    edi,[esp+0x34]
100380ca:	mov    esi,ebx
100380cc:	call   0x10037e70
100380d1:	test   eax,eax
100380d3:	je     0x10038103
100380d5:	add    ebx,0xfffffff0
100380d8:	mov    BYTE PTR [esp+0x50],0x1
100380dd:	lea    edx,[ebx+0xc]
100380e0:	or     eax,0xffffffff
100380e3:	lock xadd DWORD PTR [edx],eax
100380e7:	dec    eax
100380e8:	test   eax,eax
100380ea:	jg     0x100380f6
100380ec:	mov    ecx,DWORD PTR [ebx]
100380ee:	mov    edx,DWORD PTR [ecx]
100380f0:	mov    eax,DWORD PTR [edx+0x4]
100380f3:	push   ebx
100380f4:	call   eax
100380f6:	mov    BYTE PTR [esp+0x50],0x0
100380fb:	lea    eax,[ebp-0x10]
100380fe:	jmp    0x10038344
10038103:	mov    edx,DWORD PTR ds:0x10080a74
10038109:	mov    eax,DWORD PTR [edx+0xc]
1003810c:	mov    ecx,0x10080a74
10038111:	call   eax
10038113:	lea    edi,[eax+0x10]
10038116:	mov    DWORD PTR [esp+0x18],edi
1003811a:	mov    BYTE PTR [esp+0x50],0x3
1003811f:	mov    eax,DWORD PTR [edi-0x8]
10038122:	mov    ecx,0x1
10038127:	sub    ecx,DWORD PTR [edi-0x4]
1003812a:	sub    eax,0x1
1003812d:	or     eax,ecx
1003812f:	jge    0x10038143
10038131:	mov    eax,0x1
10038136:	lea    ecx,[esp+0x18]
1003813a:	call   0x10002250
1003813f:	mov    edi,DWORD PTR [esp+0x18]
10038143:	mov    ebp,DWORD PTR ds:0x1006626c
10038149:	lea    ecx,[esp+0x34]
1003814d:	push   ecx
1003814e:	push   edi
1003814f:	push   0x0
10038151:	push   0x0
10038153:	push   ebx
10038154:	push   0x0
10038156:	call   ebp
10038158:	mov    esi,eax
1003815a:	mov    eax,DWORD PTR [edi-0x8]
1003815d:	add    esi,0x1
10038160:	mov    ecx,0x1
10038165:	sub    ecx,DWORD PTR [edi-0x4]
10038168:	sub    eax,esi
1003816a:	or     eax,ecx
1003816c:	jge    0x1003817d
1003816e:	mov    eax,esi
10038170:	lea    ecx,[esp+0x18]
10038174:	call   0x10002250
10038179:	mov    edi,DWORD PTR [esp+0x18]
1003817d:	lea    edx,[esp+0x34]
10038181:	push   edx
10038182:	push   edi
10038183:	push   esi
10038184:	push   0x0
10038186:	push   ebx
10038187:	push   0x0
10038189:	call   ebp
1003818b:	cmp    eax,esi
1003818d:	jbe    0x100381da
1003818f:	add    edi,0xfffffff0
10038192:	mov    BYTE PTR [esp+0x50],0x2
10038197:	lea    eax,[edi+0xc]
1003819a:	or     ecx,0xffffffff
1003819d:	lock xadd DWORD PTR [eax],ecx
100381a1:	dec    ecx
100381a2:	test   ecx,ecx
100381a4:	jg     0x100381b0
100381a6:	mov    ecx,DWORD PTR [edi]
100381a8:	mov    edx,DWORD PTR [ecx]
100381aa:	mov    eax,DWORD PTR [edx+0x4]
100381ad:	push   edi
100381ae:	call   eax
100381b0:	add    ebx,0xfffffff0
100381b3:	mov    BYTE PTR [esp+0x50],0x1
100381b8:	lea    ecx,[ebx+0xc]
100381bb:	or     edx,0xffffffff
100381be:	lock xadd DWORD PTR [ecx],edx
100381c2:	dec    edx
100381c3:	test   edx,edx
100381c5:	jg     0x10038338
100381cb:	mov    ecx,DWORD PTR [ebx]
100381cd:	mov    eax,DWORD PTR [ecx]
100381cf:	mov    edx,DWORD PTR [eax+0x4]
100381d2:	push   ebx
100381d3:	call   edx
100381d5:	jmp    0x10038338
100381da:	test   edi,edi
100381dc:	jne    0x100381e2
100381de:	xor    eax,eax
100381e0:	jmp    0x100381f3
100381e2:	push   edi
100381e3:	call   0x100437e3
100381e8:	add    esp,0x4
100381eb:	test   eax,eax
100381ed:	jl     0x10038535
100381f3:	cmp    eax,DWORD PTR [edi-0x8]
100381f6:	jg     0x10038535
100381fc:	xor    ebp,ebp
100381fe:	mov    DWORD PTR [edi-0xc],eax
10038201:	mov    WORD PTR [edi+eax*2],0x0
10038207:	mov    DWORD PTR [esp+0x2c],ebp
1003820b:	push   ebp
1003820c:	push   0x80
10038211:	push   0x3
10038213:	push   ebp
10038214:	push   0x3
10038216:	push   0x80000000
1003821b:	push   edi
1003821c:	mov    BYTE PTR [esp+0x6c],0x4
10038221:	call   DWORD PTR ds:0x100660c0
10038227:	cmp    eax,0xffffffff
1003822a:	jne    0x1003827c
1003822c:	call   0x100067a3
10038231:	test   eax,eax
10038233:	jl     0x100382f6
10038239:	lea    ecx,[esp+0x44]
1003823d:	push   ecx
1003823e:	push   ebp
1003823f:	call   DWORD PTR ds:0x10066268
10038245:	cmp    eax,0xffffffff
10038248:	mov    DWORD PTR [esp+0x40],eax
1003824c:	jne    0x10038288
1003824e:	call   0x100067a3
10038253:	test   eax,eax
10038255:	jge    0x10038284
10038257:	test   ebp,ebp
10038259:	je     0x10038262
1003825b:	push   ebp
1003825c:	call   DWORD PTR ds:0x10066070
10038262:	add    edi,0xfffffff0
10038265:	mov    BYTE PTR [esp+0x50],0x2
1003826a:	lea    edx,[edi+0xc]
1003826d:	or     eax,0xffffffff
10038270:	lock xadd DWORD PTR [edx],eax
10038274:	dec    eax
10038275:	test   eax,eax
10038277:	jmp    0x100381a4
1003827c:	mov    ebp,eax
1003827e:	mov    DWORD PTR [esp+0x2c],ebp
10038282:	jmp    0x10038239
10038284:	mov    eax,DWORD PTR [esp+0x40]
10038288:	cmp    eax,0x4c00
1003828d:	jne    0x100382eb
1003828f:	cmp    DWORD PTR [esp+0x44],0x0
10038294:	jne    0x100382eb
10038296:	test   ebp,ebp
10038298:	je     0x100382a7
1003829a:	push   ebp
1003829b:	call   DWORD PTR ds:0x10066070
100382a1:	xor    ebp,ebp
100382a3:	mov    DWORD PTR [esp+0x2c],ebp
100382a7:	cmp    DWORD PTR [edi-0x4],0x1
100382ab:	jle    0x100382bf
100382ad:	mov    ecx,DWORD PTR [edi-0xc]
100382b0:	push   ecx
100382b1:	lea    edx,[esp+0x1c]
100382b5:	push   edx
100382b6:	call   0x10002299
100382bb:	mov    edi,DWORD PTR [esp+0x18]
100382bf:	lea    eax,[esp+0x38]
100382c3:	push   eax
100382c4:	lea    ecx,[esp+0x40]
100382c8:	push   ecx
100382c9:	push   edi
100382ca:	call   DWORD PTR ds:0x100663fc
100382d0:	test   eax,eax
100382d2:	jne    0x10038257
100382d4:	lea    esi,[esp+0x18]
100382d8:	call   0x10004206
100382dd:	cmp    DWORD PTR [esp+0x38],0x6673
100382e5:	je     0x100383fe
100382eb:	test   ebp,ebp
100382ed:	je     0x100382f6
100382ef:	push   ebp
100382f0:	call   DWORD PTR ds:0x10066070
100382f6:	add    edi,0xfffffff0
100382f9:	mov    BYTE PTR [esp+0x50],0x2
100382fe:	lea    ecx,[edi+0xc]
10038301:	or     edx,0xffffffff
10038304:	lock xadd DWORD PTR [ecx],edx
10038308:	dec    edx
10038309:	test   edx,edx
1003830b:	jg     0x10038317
1003830d:	mov    ecx,DWORD PTR [edi]
1003830f:	mov    eax,DWORD PTR [ecx]
10038311:	mov    edx,DWORD PTR [eax+0x4]
10038314:	push   edi
10038315:	call   edx
10038317:	add    ebx,0xfffffff0
1003831a:	mov    BYTE PTR [esp+0x50],0x1
1003831f:	lea    eax,[ebx+0xc]
10038322:	or     ecx,0xffffffff
10038325:	lock xadd DWORD PTR [eax],ecx
10038329:	dec    ecx
1003832a:	test   ecx,ecx
1003832c:	jg     0x10038338
1003832e:	mov    ecx,DWORD PTR [ebx]
10038330:	mov    edx,DWORD PTR [ecx]
10038332:	mov    eax,DWORD PTR [edx+0x4]
10038335:	push   ebx
10038336:	call   eax
10038338:	mov    BYTE PTR [esp+0x50],0x0
1003833d:	mov    eax,DWORD PTR [esp+0x14]
10038341:	add    eax,0xfffffff0
10038344:	lea    ecx,[eax+0xc]
10038347:	or     edx,0xffffffff
1003834a:	lock xadd DWORD PTR [ecx],edx
1003834e:	dec    edx
1003834f:	test   edx,edx
10038351:	jg     0x1003835d
10038353:	mov    ecx,DWORD PTR [eax]
10038355:	mov    edx,DWORD PTR [ecx]
10038357:	push   eax
10038358:	mov    eax,DWORD PTR [edx+0x4]
1003835b:	call   eax
1003835d:	add    DWORD PTR [esp+0x20],0x1
10038362:	mov    ebp,DWORD PTR [esp+0x58]
10038366:	xor    edi,edi
10038368:	jmp    0x10037fa0
1003836d:	add    ebx,0xfffffff0
10038370:	or     edx,0xffffffff
10038373:	lea    ecx,[ebx+0xc]
10038376:	mov    BYTE PTR [esp+0x50],0x1
1003837b:	lock xadd DWORD PTR [ecx],edx
1003837f:	dec    edx
10038380:	test   edx,edx
10038382:	jg     0x1003838e
10038384:	mov    ecx,DWORD PTR [ebx]
10038386:	mov    eax,DWORD PTR [ecx]
10038388:	mov    edx,DWORD PTR [eax+0x4]
1003838b:	push   ebx
1003838c:	call   edx
1003838e:	lea    eax,[esi-0x10]
10038391:	mov    BYTE PTR [esp+0x50],0x0
10038396:	lea    ecx,[eax+0xc]
10038399:	or     edx,0xffffffff
1003839c:	lock xadd DWORD PTR [ecx],edx
100383a0:	dec    edx
100383a1:	test   edx,edx
100383a3:	jg     0x100383af
100383a5:	mov    ecx,DWORD PTR [eax]
100383a7:	mov    edx,DWORD PTR [ecx]
100383a9:	push   eax
100383aa:	mov    eax,DWORD PTR [edx+0x4]
100383ad:	call   eax
100383af:	mov    edx,DWORD PTR ds:0x10080a74
100383b5:	mov    eax,DWORD PTR [edx+0xc]
100383b8:	mov    ecx,0x10080a74
100383bd:	call   eax
100383bf:	add    eax,0x10
100383c2:	mov    DWORD PTR [ebp+0x0],eax
100383c5:	mov    ecx,0x1006cd08
100383ca:	test   ecx,0xffff0000
100383d0:	mov    BYTE PTR [esp+0x50],0x5
100383d5:	jne    0x100384a5
100383db:	mov    edx,ecx
100383dd:	movzx  esi,dx
100383e0:	push   esi
100383e1:	call   0x1000200b
100383e6:	add    esp,0x4
100383e9:	cmp    eax,edi
100383eb:	je     0x10038575
100383f1:	push   esi
100383f2:	push   eax
100383f3:	push   ebp
100383f4:	call   0x100021ca
100383f9:	jmp    0x10038575
100383fe:	add    edi,0xfffffff0
10038401:	mov    eax,edi
10038403:	call   0x10004e1f
10038408:	mov    esi,DWORD PTR [esp+0x58]
1003840c:	add    eax,0x10
1003840f:	test   ebp,ebp
10038411:	mov    DWORD PTR [esi],eax
10038413:	je     0x1003841c
10038415:	push   ebp
10038416:	call   DWORD PTR ds:0x10066070
1003841c:	mov    BYTE PTR [esp+0x50],0x2
10038421:	lea    ecx,[edi+0xc]
10038424:	or     edx,0xffffffff
10038427:	lock xadd DWORD PTR [ecx],edx
1003842b:	dec    edx
1003842c:	test   edx,edx
1003842e:	jg     0x1003843a
10038430:	mov    ecx,DWORD PTR [edi]
10038432:	mov    eax,DWORD PTR [ecx]
10038434:	mov    edx,DWORD PTR [eax+0x4]
10038437:	push   edi
10038438:	call   edx
1003843a:	add    ebx,0xfffffff0
1003843d:	mov    BYTE PTR [esp+0x50],0x1
10038442:	lea    eax,[ebx+0xc]
10038445:	or     ecx,0xffffffff
10038448:	lock xadd DWORD PTR [eax],ecx
1003844c:	dec    ecx
1003844d:	test   ecx,ecx
1003844f:	jg     0x1003845b
10038451:	mov    ecx,DWORD PTR [ebx]
10038453:	mov    edx,DWORD PTR [ecx]
10038455:	mov    eax,DWORD PTR [edx+0x4]
10038458:	push   ebx
10038459:	call   eax
1003845b:	mov    BYTE PTR [esp+0x50],0x0
10038460:	mov    eax,DWORD PTR [esp+0x14]
10038464:	add    eax,0xfffffff0
10038467:	lea    ecx,[eax+0xc]
1003846a:	or     edx,0xffffffff
1003846d:	lock xadd DWORD PTR [ecx],edx
10038471:	dec    edx
10038472:	test   edx,edx
10038474:	jg     0x10038480
10038476:	mov    ecx,DWORD PTR [eax]
10038478:	mov    edx,DWORD PTR [ecx]
1003847a:	push   eax
1003847b:	mov    eax,DWORD PTR [edx+0x4]
1003847e:	call   eax
10038480:	mov    eax,DWORD PTR [esp+0x1c]
10038484:	test   eax,eax
10038486:	je     0x1003848f
10038488:	push   eax
10038489:	call   DWORD PTR ds:0x10066018
1003848f:	mov    eax,esi
10038491:	mov    ecx,DWORD PTR [esp+0x48]
10038495:	mov    DWORD PTR fs:0x0,ecx
1003849c:	pop    ecx
1003849d:	pop    edi
1003849e:	pop    esi
1003849f:	pop    ebp
100384a0:	pop    ebx
100384a1:	add    esp,0x40
100384a4:	ret    
100384a5:	call   DWORD PTR ds:0x1007efec
100384ab:	mov    edi,DWORD PTR ds:0x1006608c
100384b1:	push   0x0
100384b3:	push   0x0
100384b5:	push   0xffffffff
100384b7:	push   0x1006cd08
100384bc:	push   0x0
100384be:	push   eax
100384bf:	call   edi
100384c1:	mov    esi,eax
100384c3:	sub    esi,0x1
100384c6:	test   esi,esi
100384c8:	jle    0x10038517
100384ca:	mov    eax,DWORD PTR [ebp+0x0]
100384cd:	mov    edx,DWORD PTR [eax-0x8]
100384d0:	sub    eax,0x10
100384d3:	mov    ecx,0x1
100384d8:	sub    ecx,DWORD PTR [eax+0xc]
100384db:	sub    edx,esi
100384dd:	or     ecx,edx
100384df:	jge    0x100384ea
100384e1:	mov    eax,esi
100384e3:	mov    ecx,ebp
100384e5:	call   0x10002250
100384ea:	mov    eax,DWORD PTR [ebp+0x0]
100384ed:	push   esi
100384ee:	push   eax
100384ef:	push   0xffffffff
100384f1:	push   0x1006cd08
100384f6:	push   0x0
100384f8:	call   DWORD PTR ds:0x1007efec
100384fe:	push   eax
100384ff:	call   edi
10038501:	mov    eax,DWORD PTR [ebp+0x0]
10038504:	cmp    esi,DWORD PTR [eax-0x8]
10038507:	jg     0x10038535
10038509:	mov    DWORD PTR [eax-0xc],esi
1003850c:	mov    eax,DWORD PTR [ebp+0x0]
1003850f:	mov    WORD PTR [eax+esi*2],0x0
10038515:	jmp    0x10038575
10038517:	mov    ecx,DWORD PTR [ebp+0x0]
1003851a:	cmp    DWORD PTR [ecx-0xc],0x0
1003851e:	mov    esi,DWORD PTR [ecx-0x10]
10038521:	lea    eax,[ecx-0x10]
10038524:	je     0x10038575
10038526:	cmp    DWORD PTR [eax+0xc],0x0
1003852a:	lea    edx,[eax+0xc]
1003852d:	jge    0x10038550
1003852f:	cmp    DWORD PTR [ecx-0x8],0x0
10038533:	jge    0x1003853f
10038535:	push   0x80070057
1003853a:	call   0x10001f33
1003853f:	mov    DWORD PTR [ecx-0xc],0x0
10038546:	mov    ecx,DWORD PTR [ebp+0x0]
10038549:	mov    WORD PTR [ecx],0x0
1003854e:	jmp    0x10038575
10038550:	or     ecx,0xffffffff
10038553:	lock xadd DWORD PTR [edx],ecx
10038557:	dec    ecx
10038558:	test   ecx,ecx
1003855a:	jg     0x10038566
1003855c:	mov    ecx,DWORD PTR [eax]
1003855e:	mov    edx,DWORD PTR [ecx]
10038560:	push   eax
10038561:	mov    eax,DWORD PTR [edx+0x4]
10038564:	call   eax
10038566:	mov    edx,DWORD PTR [esi]
10038568:	mov    eax,DWORD PTR [edx+0xc]
1003856b:	mov    ecx,esi
1003856d:	call   eax
1003856f:	add    eax,0x10
10038572:	mov    DWORD PTR [ebp+0x0],eax
10038575:	mov    eax,DWORD PTR [esp+0x24]
10038579:	test   eax,eax
1003857b:	je     0x10038584
1003857d:	push   eax
1003857e:	call   DWORD PTR ds:0x10066018
10038584:	mov    eax,ebp
10038586:	mov    ecx,DWORD PTR [esp+0x48]
1003858a:	mov    DWORD PTR fs:0x0,ecx
10038591:	pop    ecx
10038592:	pop    edi
10038593:	pop    esi
10038594:	pop    ebp
10038595:	pop    ebx
10038596:	add    esp,0x40
10038599:	ret    
1003859a:	int3   
1003859b:	int3   
1003859c:	int3   
1003859d:	int3   
1003859e:	int3   
1003859f:	int3   
100385a0:	push   0xffffffff
100385a2:	push   0x1005f819
100385a7:	mov    eax,fs:0x0
100385ad:	push   eax
100385ae:	push   ecx
100385af:	push   ebx
100385b0:	mov    eax,ds:0x1007e030
100385b5:	xor    eax,esp
100385b7:	push   eax
100385b8:	lea    eax,[esp+0xc]
100385bc:	mov    fs:0x0,eax
100385c2:	mov    ebx,DWORD PTR [esp+0x20]
100385c6:	mov    eax,DWORD PTR [esp+0x1c]
100385ca:	mov    DWORD PTR [esp+0x8],0x0
100385d2:	mov    eax,DWORD PTR [eax]
100385d4:	test   eax,eax
100385d6:	mov    DWORD PTR [ebx],eax
100385d8:	je     0x100385e4
100385da:	add    eax,0x8
100385dd:	push   eax
100385de:	call   DWORD PTR ds:0x100660a4
100385e4:	mov    ecx,DWORD PTR [esp+0x24]
100385e8:	mov    DWORD PTR [esp+0x14],0x0
100385f0:	push   ecx
100385f1:	mov    DWORD PTR [esp+0xc],0x1
100385f9:	call   0x100024fd
100385fe:	mov    eax,ebx
10038600:	mov    ecx,DWORD PTR [esp+0xc]
10038604:	mov    DWORD PTR fs:0x0,ecx
1003860b:	pop    ecx
1003860c:	pop    ebx
1003860d:	add    esp,0x10
10038610:	ret    0xc
10038613:	int3   
10038614:	int3   
10038615:	int3   
10038616:	int3   
10038617:	int3   
10038618:	int3   
10038619:	int3   
1003861a:	int3   
1003861b:	int3   
1003861c:	int3   
1003861d:	int3   
1003861e:	int3   
1003861f:	int3   
10038620:	push   0xffffffff
10038622:	push   0x1005f7d8
10038627:	mov    eax,fs:0x0
1003862d:	push   eax
1003862e:	sub    esp,0x14
10038631:	mov    eax,ds:0x1007e030
10038636:	xor    eax,esp
10038638:	push   eax
10038639:	lea    eax,[esp+0x18]
1003863d:	mov    fs:0x0,eax
10038643:	cmp    WORD PTR [esi],0x8
10038647:	jne    0x10038666
10038649:	mov    eax,DWORD PTR [esi+0x8]
1003864c:	push   eax
1003864d:	mov    ecx,edi
1003864f:	call   0x10010f3b
10038654:	mov    eax,edi
10038656:	mov    ecx,DWORD PTR [esp+0x18]
1003865a:	mov    DWORD PTR fs:0x0,ecx
10038661:	pop    ecx
10038662:	add    esp,0x20
10038665:	ret    
10038666:	lea    ecx,[esp+0x4]
1003866a:	push   ecx
1003866b:	call   DWORD PTR ds:0x1006628c
10038671:	lea    edx,[esp+0x4]
10038675:	cmp    edx,esi
10038677:	mov    DWORD PTR [esp+0x20],0x0
1003867f:	jne    0x10038689
10038681:	cmp    WORD PTR [esp+0x4],0x8
10038687:	je     0x100386a3
10038689:	push   0x8
1003868b:	push   0x0
1003868d:	push   esi
1003868e:	lea    eax,[esp+0x10]
10038692:	push   eax
10038693:	call   DWORD PTR ds:0x1006627c
10038699:	test   eax,eax
1003869b:	jge    0x100386a3
1003869d:	push   eax
1003869e:	call   0x10050c80
100386a3:	mov    ecx,DWORD PTR [esp+0xc]
100386a7:	push   ecx
100386a8:	mov    ecx,edi
100386aa:	call   0x10010f3b
100386af:	lea    edx,[esp+0x4]
100386b3:	push   edx
100386b4:	call   DWORD PTR ds:0x10066294
100386ba:	mov    eax,edi
100386bc:	mov    ecx,DWORD PTR [esp+0x18]
100386c0:	mov    DWORD PTR fs:0x0,ecx
100386c7:	pop    ecx
100386c8:	add    esp,0x20
100386cb:	ret    
100386cc:	int3   
100386cd:	int3   
100386ce:	int3   
100386cf:	int3   
100386d0:	sub    esp,0x8
100386d3:	test   eax,eax
100386d5:	mov    BYTE PTR [edi],0x0
100386d8:	jle    0x1003882e
100386de:	push   ebx
100386df:	push   ebp
100386e0:	push   esi
100386e1:	xor    esi,esi
100386e3:	add    eax,ecx
100386e5:	mov    BYTE PTR [esp+0xf],0x0
100386ea:	mov    BYTE PTR [edi],0x0
100386ed:	mov    DWORD PTR [esp+0x10],eax
100386f1:	mov    ebp,eax
100386f3:	mov    al,BYTE PTR [ebp+0x0]
100386f6:	test   al,al
100386f8:	je     0x100387a4
100386fe:	movsx  edx,al
10038701:	push   edx
10038702:	call   0x10045ec1
10038707:	mov    bl,al
10038709:	movsx  eax,bl
1003870c:	push   eax
1003870d:	call   0x1004f446
10038712:	add    esp,0x8
10038715:	test   eax,eax
10038717:	je     0x1003871b
10038719:	mov    bl,0x30
1003871b:	shl    BYTE PTR [esi+edi*1],0x4
1003871f:	add    BYTE PTR [esp+0xf],0x1
10038724:	mov    cl,BYTE PTR [esi+edi*1]
10038727:	mov    al,bl
10038729:	sub    al,0x30
1003872b:	cmp    al,0x9
1003872d:	ja     0x10038736
1003872f:	or     al,cl
10038731:	mov    BYTE PTR [esi+edi*1],al
10038734:	jmp    0x10038748
10038736:	mov    dl,bl
10038738:	sub    dl,0x61
1003873b:	cmp    dl,0x5
1003873e:	ja     0x1003877a
10038740:	sub    bl,0x57
10038743:	or     bl,cl
10038745:	mov    BYTE PTR [esi+edi*1],bl
10038748:	cmp    BYTE PTR [esp+0xf],0x2
1003874d:	jne    0x10038772
1003874f:	mov    al,BYTE PTR [esi+edi*1]
10038752:	test   al,al
10038754:	je     0x10038766
10038756:	movsx  eax,al
10038759:	push   eax
1003875a:	call   0x1004f4c3
1003875f:	add    esp,0x4
10038762:	test   eax,eax
10038764:	je     0x1003877a
10038766:	add    esi,0x1
10038769:	mov    BYTE PTR [esp+0xf],0x0
1003876e:	mov    BYTE PTR [esi+edi*1],0x0
10038772:	add    ebp,0x1
10038775:	jmp    0x100386f3
1003877a:	mov    ebp,DWORD PTR [esp+0x10]
1003877e:	xor    esi,esi
10038780:	mov    bl,BYTE PTR [ebp+0x0]
10038783:	test   bl,bl
10038785:	je     0x100387a4
10038787:	movsx  ecx,bl
1003878a:	push   ecx
1003878b:	call   0x1004f4c3
10038790:	add    esp,0x4
10038793:	test   eax,eax
10038795:	je     0x100387a2
10038797:	mov    BYTE PTR [esi+edi*1],bl
1003879a:	add    esi,0x1
1003879d:	add    ebp,0x1
100387a0:	jmp    0x10038780
100387a2:	xor    esi,esi
100387a4:	cmp    DWORD PTR [esp+0x18],0x0
100387a9:	mov    BYTE PTR [esi+edi*1],0x0
100387ad:	je     0x100387d2
100387af:	test   esi,esi
100387b1:	jle    0x100387d2
100387b3:	add    esi,0xffffffff
100387b6:	shr    esi,1
100387b8:	lea    eax,[edi+0x1]
100387bb:	add    esi,0x1
100387be:	mov    edi,edi
100387c0:	mov    cl,BYTE PTR [eax-0x1]
100387c3:	mov    dl,BYTE PTR [eax]
100387c5:	mov    BYTE PTR [eax-0x1],dl
100387c8:	mov    BYTE PTR [eax],cl
100387ca:	add    eax,0x2
100387cd:	sub    esi,0x1
100387d0:	jne    0x100387c0
100387d2:	or     ebx,0xffffffff
100387d5:	or     ebp,0xffffffff
100387d8:	xor    esi,esi
100387da:	cmp    BYTE PTR [edi],0x0
100387dd:	je     0x1003882b
100387df:	nop
100387e0:	movsx  eax,BYTE PTR [esi+edi*1]
100387e4:	push   eax
100387e5:	call   0x1004f446
100387ea:	add    esp,0x4
100387ed:	test   eax,eax
100387ef:	jne    0x100387f9
100387f1:	test   ebp,ebp
100387f3:	jge    0x100387f7
100387f5:	mov    ebp,esi
100387f7:	mov    ebx,esi
100387f9:	add    esi,0x1
100387fc:	cmp    BYTE PTR [esi+edi*1],0x0
10038800:	jne    0x100387e0
10038802:	test   ebp,ebp
10038804:	jl     0x1003882b
10038806:	test   ebx,ebx
10038808:	jl     0x1003882b
1003880a:	cmp    ebp,ebx
1003880c:	mov    eax,ebp
1003880e:	jg     0x10038825
10038810:	mov    edx,edi
10038812:	sub    edx,ebp
10038814:	mov    cl,BYTE PTR [eax+edi*1]
10038817:	test   cl,cl
10038819:	je     0x10038825
1003881b:	mov    BYTE PTR [edx+eax*1],cl
1003881e:	add    eax,0x1
10038821:	cmp    eax,ebx
10038823:	jle    0x10038814
10038825:	sub    eax,ebp
10038827:	mov    BYTE PTR [eax+edi*1],0x0
1003882b:	pop    esi
1003882c:	pop    ebp
1003882d:	pop    ebx
1003882e:	mov    eax,edi
10038830:	add    esp,0x8
10038833:	ret    
10038834:	int3   
10038835:	int3   
10038836:	int3   
10038837:	int3   
10038838:	int3   
10038839:	int3   
1003883a:	int3   
1003883b:	int3   
1003883c:	int3   
1003883d:	int3   
1003883e:	int3   
1003883f:	int3   
10038840:	push   ebp
10038841:	mov    ebp,esp
10038843:	and    esp,0xfffffff8
10038846:	mov    eax,0x2f30
1003884b:	call   0x10049ed0
10038850:	mov    eax,ds:0x1007e030
10038855:	xor    eax,esp
10038857:	mov    DWORD PTR [esp+0x2f2c],eax
1003885e:	mov    eax,DWORD PTR [ebp+0x8]
10038861:	push   esi
10038862:	push   edi
10038863:	xor    edi,edi
10038865:	push   edi
10038866:	push   edi
10038867:	push   0x3
10038869:	push   edi
1003886a:	push   0x3
1003886c:	push   edi
1003886d:	push   0x10073e80
10038872:	push   0x12
10038874:	push   0x10073eac
10038879:	mov    DWORD PTR [esp+0x34],eax
1003887d:	mov    DWORD PTR [esp+0x38],ecx
10038881:	mov    BYTE PTR [esp+0x2f],0x0
10038886:	call   0x1000448e
1003888b:	add    esp,0xc
1003888e:	push   eax
1003888f:	call   DWORD PTR ds:0x100660c0
10038895:	mov    esi,eax
10038897:	cmp    esi,0xffffffff
1003889a:	jne    0x100388b2
1003889c:	xor    al,al
1003889e:	pop    edi
1003889f:	pop    esi
100388a0:	mov    ecx,DWORD PTR [esp+0x2f2c]
100388a7:	xor    ecx,esp
100388a9:	call   0x10042f87
100388ae:	mov    esp,ebp
100388b0:	pop    ebp
100388b1:	ret    
100388b2:	xor    eax,eax
100388b4:	push   0x2710
100388b9:	lea    edx,[esp+0x824]
100388c0:	push   edi
100388c1:	mov    DWORD PTR [esp+0x24],eax
100388c5:	mov    DWORD PTR [esp+0x28],eax
100388c9:	push   edx
100388ca:	mov    DWORD PTR [esp+0x18],edi
100388ce:	mov    DWORD PTR [esp+0x30],eax
100388d2:	mov    DWORD PTR [esp+0x28],edi
100388d6:	mov    DWORD PTR [esp+0x2c],edi
100388da:	call   0x10045cf0
100388df:	add    esp,0xc
100388e2:	push   edi
100388e3:	lea    eax,[esp+0x10]
100388e7:	push   eax
100388e8:	push   0x2710
100388ed:	lea    ecx,[esp+0x82c]
100388f4:	push   ecx
100388f5:	push   0xc
100388f7:	lea    edx,[esp+0x30]
100388fb:	push   edx
100388fc:	push   0x2d1400
10038901:	push   esi
10038902:	call   DWORD PTR ds:0x10066260
10038908:	test   eax,eax
1003890a:	je     0x10038981
1003890c:	mov    eax,DWORD PTR [esp+0x830]
10038913:	push   edi
10038914:	lea    edi,[esp+0x43c]
1003891b:	lea    ecx,[esp+0x824]
10038922:	call   0x100386d0
10038927:	mov    eax,DWORD PTR [esp+0x83c]
1003892e:	push   0x1
10038930:	lea    edi,[esp+0x58]
10038934:	lea    ecx,[esp+0x828]
1003893b:	call   0x100386d0
10038940:	mov    eax,edi
10038942:	push   eax
10038943:	call   0x10043100
10038948:	add    esp,0xc
1003894b:	push   eax
1003894c:	mov    ecx,edi
1003894e:	push   ecx
1003894f:	mov    ecx,DWORD PTR [esp+0x18]
10038953:	call   0x10001336
10038958:	lea    edx,[esp+0x438]
1003895f:	push   edx
10038960:	call   0x10043100
10038965:	mov    ecx,DWORD PTR [esp+0x18]
10038969:	add    esp,0x4
1003896c:	push   eax
1003896d:	lea    eax,[esp+0x43c]
10038974:	push   eax
10038975:	call   0x10001336
1003897a:	mov    BYTE PTR [esp+0xb],0x1
1003897f:	xor    edi,edi
10038981:	push   edi
10038982:	lea    ecx,[esp+0x1c]
10038986:	push   ecx
10038987:	push   0x28
10038989:	lea    edx,[esp+0x34]
1003898d:	push   edx
1003898e:	xor    eax,eax
10038990:	push   edi
10038991:	push   edi
10038992:	push   0x700a0
10038997:	push   esi
10038998:	mov    DWORD PTR [esp+0x48],edi
1003899c:	mov    DWORD PTR [esp+0x4c],eax
100389a0:	mov    DWORD PTR [esp+0x50],eax
100389a4:	mov    DWORD PTR [esp+0x54],eax
100389a8:	mov    DWORD PTR [esp+0x58],eax
100389ac:	mov    DWORD PTR [esp+0x5c],eax
100389b0:	mov    DWORD PTR [esp+0x60],eax
100389b4:	mov    DWORD PTR [esp+0x64],eax
100389b8:	mov    DWORD PTR [esp+0x68],eax
100389bc:	mov    DWORD PTR [esp+0x6c],eax
100389c0:	mov    DWORD PTR [ebx],edi
100389c2:	mov    DWORD PTR [ebx+0x4],edi
100389c5:	call   DWORD PTR ds:0x10066260
100389cb:	test   eax,eax
100389cd:	je     0x100389dc
100389cf:	mov    eax,DWORD PTR [esp+0x40]
100389d3:	mov    ecx,DWORD PTR [esp+0x44]
100389d7:	mov    DWORD PTR [ebx],eax
100389d9:	mov    DWORD PTR [ebx+0x4],ecx
100389dc:	push   esi
100389dd:	call   DWORD PTR ds:0x10066070
100389e3:	mov    ecx,DWORD PTR [esp+0x2f34]
100389ea:	mov    al,BYTE PTR [esp+0xb]
100389ee:	pop    edi
100389ef:	pop    esi
100389f0:	xor    ecx,esp
100389f2:	call   0x10042f87
100389f7:	mov    esp,ebp
100389f9:	pop    ebp
100389fa:	ret    
100389fb:	int3   
100389fc:	int3   
100389fd:	int3   
100389fe:	int3   
100389ff:	int3   
10038a00:	push   ebp
10038a01:	lea    ebp,[esp-0x1954]
10038a08:	mov    eax,0x1954
10038a0d:	call   0x10049ed0
10038a12:	push   0xffffffff
10038a14:	push   0x10061330
10038a19:	mov    eax,fs:0x0
10038a1f:	push   eax
10038a20:	sub    esp,0x38
10038a23:	mov    eax,ds:0x1007e030
10038a28:	xor    eax,ebp
10038a2a:	mov    DWORD PTR [ebp+0x1950],eax
10038a30:	push   ebx
10038a31:	push   esi
10038a32:	push   edi
10038a33:	push   eax
10038a34:	lea    eax,[ebp-0xc]
10038a37:	mov    fs:0x0,eax
10038a3d:	mov    eax,DWORD PTR [ebp+0x195c]
10038a43:	lea    ecx,[ebp-0x3c]
10038a46:	push   ecx
10038a47:	lea    edx,[ebp+0x0]
10038a4a:	push   edx
10038a4b:	mov    DWORD PTR [ebp-0x10],eax
10038a4e:	mov    DWORD PTR [ebp-0x3c],0x1950
10038a55:	call   0x10056bbe
10038a5a:	lea    esi,[ebp+0x0]
10038a5d:	call   DWORD PTR ds:0x1007efec
10038a63:	mov    ebx,eax
10038a65:	mov    eax,ds:0x10080a74
10038a6a:	mov    edx,DWORD PTR [eax+0xc]
10038a6d:	mov    ecx,0x10080a74
10038a72:	call   edx
10038a74:	add    eax,0x10
10038a77:	mov    DWORD PTR [ebp-0x14],eax
10038a7a:	mov    DWORD PTR [ebp-0x4],0x0
10038a81:	movzx  eax,BYTE PTR [esi+0x199]
10038a88:	movzx  ecx,BYTE PTR [esi+0x198]
10038a8f:	movzx  edx,BYTE PTR [esi+0x197]
10038a96:	push   eax
10038a97:	movzx  eax,BYTE PTR [esi+0x196]
10038a9e:	push   ecx
10038a9f:	movzx  ecx,BYTE PTR [esi+0x195]
10038aa6:	push   edx
10038aa7:	movzx  edx,BYTE PTR [esi+0x194]
10038aae:	push   eax
10038aaf:	push   ecx
10038ab0:	push   edx
10038ab1:	push   0x7638fa2
10038ab6:	push   0x5ea8ae6c
10038abb:	push   0x1885c815
10038ac0:	push   0x1232a5b
10038ac5:	push   0x53ca2c56
10038aca:	push   0x53319f3a
10038acf:	push   0x10073ed4
10038ad4:	call   0x100042bd
10038ad9:	add    esp,0x8
10038adc:	push   eax
10038add:	call   0x100042bd
10038ae2:	add    esp,0x8
10038ae5:	push   eax
10038ae6:	call   0x100042bd
10038aeb:	add    esp,0x8
10038aee:	push   eax
10038aef:	call   0x100042bd
10038af4:	add    esp,0x8
10038af7:	push   eax
10038af8:	call   0x100042bd
10038afd:	add    esp,0x8
10038b00:	push   eax
10038b01:	call   0x100042bd
10038b06:	push   eax
10038b07:	push   0x18
10038b09:	push   0x10073f10
10038b0e:	call   0x1000448e
10038b13:	add    esp,0x14
10038b16:	push   eax
10038b17:	lea    eax,[ebp-0x14]
10038b1a:	call   0x100064f0
10038b1f:	mov    eax,DWORD PTR [ebp-0x14]
10038b22:	add    esp,0x1c
10038b25:	cmp    DWORD PTR [eax-0x4],0x1
10038b29:	jle    0x10038b3b
10038b2b:	mov    eax,DWORD PTR [eax-0xc]
10038b2e:	push   eax
10038b2f:	lea    ecx,[ebp-0x14]
10038b32:	push   ecx
10038b33:	call   0x10002299
10038b38:	mov    eax,DWORD PTR [ebp-0x14]
10038b3b:	test   eax,eax
10038b3d:	jne    0x10038b43
10038b3f:	xor    ebx,ebx
10038b41:	jmp    0x10038b8b
10038b43:	push   eax
10038b44:	call   DWORD PTR ds:0x100660c4
10038b4a:	add    eax,0x1
10038b4d:	cmp    eax,0x3fffffff
10038b52:	jg     0x10038b87
10038b54:	add    eax,eax
10038b56:	mov    DWORD PTR [ebp-0x38],eax
10038b59:	call   0x1004b7e0
10038b5e:	mov    edi,esp
10038b60:	test   edi,edi
10038b62:	je     0x10038b87
10038b64:	mov    edx,DWORD PTR [ebp-0x38]
10038b67:	mov    eax,DWORD PTR [ebp-0x14]
10038b6a:	push   0x0
10038b6c:	push   0x0
10038b6e:	push   edx
10038b6f:	push   edi
10038b70:	push   0xffffffff
10038b72:	push   eax
10038b73:	push   0x0
10038b75:	push   ebx
10038b76:	mov    BYTE PTR [edi],0x0
10038b79:	call   DWORD PTR ds:0x100660b8
10038b7f:	neg    eax
10038b81:	sbb    eax,eax
10038b83:	and    eax,edi
10038b85:	jmp    0x10038b89
10038b87:	xor    eax,eax
10038b89:	mov    ebx,eax
10038b8b:	push   ebx
10038b8c:	mov    DWORD PTR [ebp-0x18],0xf
10038b93:	mov    DWORD PTR [ebp-0x1c],0x0
10038b9a:	mov    BYTE PTR [ebp-0x2c],0x0
10038b9e:	call   0x10043100
10038ba3:	mov    edx,DWORD PTR [ebp-0x2c]
10038ba6:	mov    edi,eax
10038ba8:	mov    eax,DWORD PTR [ebp-0x18]
10038bab:	add    esp,0x4
10038bae:	cmp    eax,0x10
10038bb1:	mov    ecx,edx
10038bb3:	jae    0x10038bb8
10038bb5:	lea    ecx,[ebp-0x2c]
10038bb8:	cmp    ebx,ecx
10038bba:	jb     0x10038beb
10038bbc:	cmp    eax,0x10
10038bbf:	mov    ecx,edx
10038bc1:	jae    0x10038bc6
10038bc3:	lea    ecx,[ebp-0x2c]
10038bc6:	mov    edx,DWORD PTR [ebp-0x1c]
10038bc9:	add    ecx,edx
10038bcb:	cmp    ecx,ebx
10038bcd:	jbe    0x10038beb
10038bcf:	cmp    eax,0x10
10038bd2:	mov    eax,DWORD PTR [ebp-0x2c]
10038bd5:	jae    0x10038bda
10038bd7:	lea    eax,[ebp-0x2c]
10038bda:	push   edi
10038bdb:	sub    ebx,eax
10038bdd:	lea    eax,[ebp-0x30]
10038be0:	push   ebx
10038be1:	push   eax
10038be2:	mov    ecx,eax
10038be4:	call   0x1000123c
10038be9:	jmp    0x10038c3a
10038beb:	cmp    edi,0xfffffffe
10038bee:	jbe    0x10038bf8
10038bf0:	call   0x10057290
10038bf5:	mov    eax,DWORD PTR [ebp-0x18]
10038bf8:	cmp    eax,edi
10038bfa:	jae    0x10038c4c
10038bfc:	mov    ecx,DWORD PTR [ebp-0x1c]
10038bff:	push   ecx
10038c00:	push   edi
10038c01:	lea    ecx,[ebp-0x30]
10038c04:	call   0x100014fb
10038c09:	mov    eax,DWORD PTR [ebp-0x18]
10038c0c:	test   edi,edi
10038c0e:	jbe    0x10038c3a
10038c10:	cmp    eax,0x10
10038c13:	mov    ecx,DWORD PTR [ebp-0x2c]
10038c16:	jae    0x10038c1b
10038c18:	lea    ecx,[ebp-0x2c]
10038c1b:	push   edi
10038c1c:	push   ebx
10038c1d:	push   eax
10038c1e:	push   ecx
10038c1f:	call   0x100434b5
10038c24:	mov    eax,DWORD PTR [ebp-0x2c]
10038c27:	add    esp,0x10
10038c2a:	cmp    DWORD PTR [ebp-0x18],0x10
10038c2e:	mov    DWORD PTR [ebp-0x1c],edi
10038c31:	jae    0x10038c36
10038c33:	lea    eax,[ebp-0x2c]
10038c36:	mov    BYTE PTR [eax+edi*1],0x0
10038c3a:	mov    edx,DWORD PTR [ebp-0x10]
10038c3d:	mov    BYTE PTR [ebp-0x4],0x1
10038c41:	mov    ebx,DWORD PTR [edx+0x4]
10038c44:	test   ebx,ebx
10038c46:	jne    0x10038c63
10038c48:	xor    edi,edi
10038c4a:	jmp    0x10038c7d
10038c4c:	test   edi,edi
10038c4e:	jne    0x10038c0e
10038c50:	cmp    eax,0x10
10038c53:	mov    eax,DWORD PTR [ebp-0x2c]
10038c56:	mov    DWORD PTR [ebp-0x1c],edi
10038c59:	jae    0x10038c5e
10038c5b:	lea    eax,[ebp-0x2c]
10038c5e:	mov    BYTE PTR [eax],0x0
10038c61:	jmp    0x10038c3a
10038c63:	mov    eax,edx
10038c65:	mov    ecx,DWORD PTR [eax+0x8]
10038c68:	sub    ecx,ebx
10038c6a:	mov    eax,0x92492493
10038c6f:	imul   ecx
10038c71:	add    edx,ecx
10038c73:	sar    edx,0x4
10038c76:	mov    edi,edx
10038c78:	shr    edi,0x1f
10038c7b:	add    edi,edx
10038c7d:	test   ebx,ebx
10038c7f:	je     0x10038cc9
10038c81:	mov    ecx,DWORD PTR [ebp-0x10]
10038c84:	mov    ecx,DWORD PTR [ecx+0xc]
10038c87:	sub    ecx,ebx
10038c89:	mov    eax,0x92492493
10038c8e:	imul   ecx
10038c90:	add    edx,ecx
10038c92:	sar    edx,0x4
10038c95:	mov    eax,edx
10038c97:	shr    eax,0x1f
10038c9a:	add    eax,edx
10038c9c:	cmp    edi,eax
10038c9e:	jae    0x10038cc9
10038ca0:	mov    ebx,DWORD PTR [ebp-0x10]
10038ca3:	mov    edi,DWORD PTR [ebx+0x8]
10038ca6:	mov    BYTE PTR [ebp-0x34],0x0
10038caa:	mov    edx,DWORD PTR [ebp-0x34]
10038cad:	mov    eax,DWORD PTR [ebp-0x34]
10038cb0:	push   edx
10038cb1:	push   eax
10038cb2:	lea    ecx,[ebp-0x30]
10038cb5:	push   ecx
10038cb6:	push   0x1
10038cb8:	push   edi
10038cb9:	call   0x1000ffaf
10038cbe:	add    esp,0x14
10038cc1:	add    edi,0x1c
10038cc4:	mov    DWORD PTR [ebx+0x8],edi
10038cc7:	jmp    0x10038cea
10038cc9:	mov    eax,DWORD PTR [ebp-0x10]
10038ccc:	mov    edi,DWORD PTR [eax+0x8]
10038ccf:	cmp    ebx,edi
10038cd1:	jbe    0x10038cdb
10038cd3:	call   0x100434a0
10038cd8:	mov    eax,DWORD PTR [ebp-0x10]
10038cdb:	push   edi
10038cdc:	push   eax
10038cdd:	lea    edx,[ebp-0x30]
10038ce0:	push   edx
10038ce1:	lea    ecx,[ebp-0x44]
10038ce4:	push   ecx
10038ce5:	call   0x1000fc14
10038cea:	cmp    DWORD PTR [ebp-0x18],0x10
10038cee:	jb     0x10038cfc
10038cf0:	mov    edx,DWORD PTR [ebp-0x2c]
10038cf3:	push   edx
10038cf4:	call   0x10042f82
10038cf9:	add    esp,0x4
10038cfc:	mov    esi,DWORD PTR [esi]
10038cfe:	mov    DWORD PTR [ebp-0x4],0xffffffff
10038d05:	mov    eax,DWORD PTR [ebp-0x14]
10038d08:	add    eax,0xfffffff0
10038d0b:	mov    DWORD PTR [ebp-0x18],0xf
10038d12:	mov    DWORD PTR [ebp-0x1c],0x0
10038d19:	mov    BYTE PTR [ebp-0x2c],0x0
10038d1d:	lea    ecx,[eax+0xc]
10038d20:	or     edx,0xffffffff
10038d23:	lock xadd DWORD PTR [ecx],edx
10038d27:	dec    edx
10038d28:	test   edx,edx
10038d2a:	jg     0x10038d36
10038d2c:	mov    ecx,DWORD PTR [eax]
10038d2e:	mov    edx,DWORD PTR [ecx]
10038d30:	push   eax
10038d31:	mov    eax,DWORD PTR [edx+0x4]
10038d34:	call   eax
10038d36:	test   esi,esi
10038d38:	jne    0x10038a5d
10038d3e:	lea    esp,[ebp-0x54]
10038d41:	mov    ecx,DWORD PTR [ebp-0xc]
10038d44:	mov    DWORD PTR fs:0x0,ecx
10038d4b:	pop    ecx
10038d4c:	pop    edi
10038d4d:	pop    esi
10038d4e:	pop    ebx
10038d4f:	mov    ecx,DWORD PTR [ebp+0x1950]
10038d55:	xor    ecx,ebp
10038d57:	call   0x10042f87
10038d5c:	add    ebp,0x1954
10038d62:	mov    esp,ebp
10038d64:	pop    ebp
10038d65:	ret    
10038d66:	int3   
10038d67:	int3   
10038d68:	int3   
10038d69:	int3   
10038d6a:	int3   
10038d6b:	int3   
10038d6c:	int3   
10038d6d:	int3   
10038d6e:	int3   
10038d6f:	int3   
10038d70:	push   ebp
10038d71:	mov    ebp,esp
10038d73:	and    esp,0xfffffff8
10038d76:	push   0xffffffff
10038d78:	push   0x10061300
10038d7d:	mov    eax,fs:0x0
10038d83:	push   eax
10038d84:	sub    esp,0x50
10038d87:	push   ebx
10038d88:	push   esi
10038d89:	push   edi
10038d8a:	mov    eax,ds:0x1007e030
10038d8f:	xor    eax,esp
10038d91:	push   eax
10038d92:	lea    eax,[esp+0x60]
10038d96:	mov    fs:0x0,eax
10038d9c:	xor    ebx,ebx
10038d9e:	mov    DWORD PTR [esp+0x38],ebx
10038da2:	mov    DWORD PTR [esp+0x30],ebx
10038da6:	push   ebx
10038da7:	push   ebx
10038da8:	mov    DWORD PTR [esp+0x70],ebx
10038dac:	call   DWORD PTR ds:0x10066440
10038db2:	test   eax,eax
10038db4:	jl     0x10038ec2
10038dba:	lea    eax,[esp+0x18]
10038dbe:	push   eax
10038dbf:	push   0x1006b6a8
10038dc4:	push   0x1
10038dc6:	push   ebx
10038dc7:	push   0x1006b778
10038dcc:	mov    DWORD PTR [esp+0x2c],ebx
10038dd0:	call   DWORD PTR ds:0x1006643c
10038dd6:	cmp    eax,ebx
10038dd8:	jl     0x10038ebc
10038dde:	push   0x4e7954ac
10038de3:	push   0x10073f44
10038de8:	mov    DWORD PTR [esp+0x1c],ebx
10038dec:	call   0x100042bd
10038df1:	push   0x26d00488
10038df6:	push   eax
10038df7:	call   0x100042bd
10038dfc:	push   eax
10038dfd:	push   0xa
10038dff:	push   0x10073f7c
10038e04:	call   0x1000448e
10038e09:	add    esp,0x1c
10038e0c:	push   eax
10038e0d:	lea    edi,[esp+0x2c]
10038e11:	call   0x100024ad
10038e16:	mov    BYTE PTR [esp+0x68],0x1
10038e1b:	mov    eax,DWORD PTR [eax]
10038e1d:	cmp    eax,ebx
10038e1f:	je     0x10038e25
10038e21:	mov    eax,DWORD PTR [eax]
10038e23:	jmp    0x10038e27
10038e25:	xor    eax,eax
10038e27:	mov    ecx,DWORD PTR [esp+0x18]
10038e2b:	mov    edx,DWORD PTR [ecx]
10038e2d:	lea    esi,[esp+0x14]
10038e31:	push   esi
10038e32:	push   ebx
10038e33:	push   ebx
10038e34:	push   ebx
10038e35:	push   ebx
10038e36:	push   ebx
10038e37:	push   ebx
10038e38:	push   eax
10038e39:	mov    eax,DWORD PTR [edx+0xc]
10038e3c:	push   ecx
10038e3d:	call   eax
10038e3f:	mov    edi,eax
10038e41:	mov    BYTE PTR [esp+0x68],bl
10038e45:	mov    eax,DWORD PTR [esp+0x28]
10038e49:	cmp    eax,ebx
10038e4b:	je     0x10038e87
10038e4d:	mov    esi,eax
10038e4f:	add    eax,0x8
10038e52:	push   eax
10038e53:	call   DWORD PTR ds:0x100660ac
10038e59:	cmp    eax,ebx
10038e5b:	jne    0x10038e87
10038e5d:	cmp    esi,ebx
10038e5f:	je     0x10038e87
10038e61:	mov    eax,DWORD PTR [esi]
10038e63:	cmp    eax,ebx
10038e65:	je     0x10038e6e
10038e67:	push   eax
10038e68:	call   DWORD PTR ds:0x100662b4
10038e6e:	mov    eax,DWORD PTR [esi+0x4]
10038e71:	cmp    eax,ebx
10038e73:	je     0x10038e7e
10038e75:	push   eax
10038e76:	call   0x100434b0
10038e7b:	add    esp,0x4
10038e7e:	push   esi
10038e7f:	call   0x10042f82
10038e84:	add    esp,0x4
10038e87:	cmp    edi,ebx
10038e89:	jl     0x10038eb0
10038e8b:	mov    eax,DWORD PTR [esp+0x14]
10038e8f:	push   ebx
10038e90:	push   ebx
10038e91:	push   0x3
10038e93:	push   0x3
10038e95:	push   ebx
10038e96:	push   ebx
10038e97:	push   0xa
10038e99:	push   eax
10038e9a:	call   DWORD PTR ds:0x10066444
10038ea0:	cmp    eax,ebx
10038ea2:	jge    0x10038eda
10038ea4:	mov    eax,DWORD PTR [esp+0x14]
10038ea8:	mov    ecx,DWORD PTR [eax]
10038eaa:	mov    edx,DWORD PTR [ecx+0x8]
10038ead:	push   eax
10038eae:	call   edx
10038eb0:	mov    eax,DWORD PTR [esp+0x18]
10038eb4:	mov    ecx,DWORD PTR [eax]
10038eb6:	mov    edx,DWORD PTR [ecx+0x8]
10038eb9:	push   eax
10038eba:	call   edx
10038ebc:	call   DWORD PTR ds:0x10066424
10038ec2:	mov    eax,DWORD PTR [ebp+0x8]
10038ec5:	mov    DWORD PTR [eax],ebx
10038ec7:	mov    ecx,DWORD PTR [esp+0x60]
10038ecb:	mov    DWORD PTR fs:0x0,ecx
10038ed2:	pop    ecx
10038ed3:	pop    edi
10038ed4:	pop    esi
10038ed5:	pop    ebx
10038ed6:	mov    esp,ebp
10038ed8:	pop    ebp
10038ed9:	ret    
10038eda:	push   0xea50f68
10038edf:	push   0x10073f94
10038ee4:	mov    DWORD PTR [esp+0x24],ebx
10038ee8:	call   0x100042bd
10038eed:	push   0x4b2bc666
10038ef2:	push   eax
10038ef3:	call   0x100042bd
10038ef8:	push   eax
10038ef9:	push   0xe
10038efb:	push   0x10073fd4
10038f00:	call   0x100042cf
10038f05:	add    esp,0x1c
10038f08:	push   eax
10038f09:	lea    edi,[esp+0x38]
10038f0d:	call   0x10002455
10038f12:	mov    ecx,DWORD PTR [ebp+0xc]
10038f15:	push   ecx
10038f16:	lea    edx,[esp+0x2c]
10038f1a:	push   edx
10038f1b:	push   eax
10038f1c:	mov    BYTE PTR [esp+0x74],0x2
10038f21:	call   0x100385a0
10038f26:	mov    esi,eax
10038f28:	push   0x1389e70c
10038f2d:	push   0x10073fe4
10038f32:	mov    BYTE PTR [esp+0x70],0x3
10038f37:	call   0x100042bd
10038f3c:	push   0x634ea070
10038f41:	push   eax
10038f42:	call   0x100042bd
10038f47:	push   eax
10038f48:	push   0x3
10038f4a:	push   0x10074024
10038f4f:	call   0x100042cf
10038f54:	add    esp,0x1c
10038f57:	push   eax
10038f58:	lea    edi,[esp+0x28]
10038f5c:	call   0x10002455
10038f61:	mov    BYTE PTR [esp+0x68],0x4
10038f66:	mov    ecx,DWORD PTR [esi]
10038f68:	cmp    ecx,ebx
10038f6a:	je     0x10038f70
10038f6c:	mov    ecx,DWORD PTR [ecx]
10038f6e:	jmp    0x10038f72
10038f70:	xor    ecx,ecx
10038f72:	mov    eax,DWORD PTR [eax]
10038f74:	cmp    eax,ebx
10038f76:	je     0x10038f7c
10038f78:	mov    edx,DWORD PTR [eax]
10038f7a:	jmp    0x10038f7e
10038f7c:	xor    edx,edx
10038f7e:	mov    eax,DWORD PTR [esp+0x14]
10038f82:	mov    esi,DWORD PTR [eax]
10038f84:	lea    edi,[esp+0x1c]
10038f88:	push   edi
10038f89:	push   ebx
10038f8a:	push   0x30
10038f8c:	push   ecx
10038f8d:	push   edx
10038f8e:	push   eax
10038f8f:	mov    eax,DWORD PTR [esi+0x50]
10038f92:	call   eax
10038f94:	mov    edi,DWORD PTR ds:0x100660ac
10038f9a:	mov    DWORD PTR [esp+0x38],eax
10038f9e:	mov    eax,DWORD PTR [esp+0x24]
10038fa2:	cmp    eax,ebx
10038fa4:	je     0x10038fe0
10038fa6:	mov    esi,eax
10038fa8:	add    eax,0x8
10038fab:	push   eax
10038fac:	call   edi
10038fae:	cmp    eax,ebx
10038fb0:	jne    0x10038fdc
10038fb2:	cmp    esi,ebx
10038fb4:	je     0x10038fdc
10038fb6:	mov    eax,DWORD PTR [esi]
10038fb8:	cmp    eax,ebx
10038fba:	je     0x10038fc3
10038fbc:	push   eax
10038fbd:	call   DWORD PTR ds:0x100662b4
10038fc3:	mov    eax,DWORD PTR [esi+0x4]
10038fc6:	cmp    eax,ebx
10038fc8:	je     0x10038fd3
10038fca:	push   eax
10038fcb:	call   0x100434b0
10038fd0:	add    esp,0x4
10038fd3:	push   esi
10038fd4:	call   0x10042f82
10038fd9:	add    esp,0x4
10038fdc:	mov    DWORD PTR [esp+0x24],ebx
10038fe0:	mov    esi,DWORD PTR [esp+0x28]
10038fe4:	cmp    esi,ebx
10038fe6:	je     0x10039020
10038fe8:	lea    ecx,[esi+0x8]
10038feb:	push   ecx
10038fec:	call   edi
10038fee:	cmp    eax,ebx
10038ff0:	jne    0x1003901c
10038ff2:	cmp    esi,ebx
10038ff4:	je     0x1003901c
10038ff6:	mov    eax,DWORD PTR [esi]
10038ff8:	cmp    eax,ebx
10038ffa:	je     0x10039003
10038ffc:	push   eax
10038ffd:	call   DWORD PTR ds:0x100662b4
10039003:	mov    eax,DWORD PTR [esi+0x4]
10039006:	cmp    eax,ebx
10039008:	je     0x10039013
1003900a:	push   eax
1003900b:	call   0x100434b0
10039010:	add    esp,0x4
10039013:	push   esi
10039014:	call   0x10042f82
10039019:	add    esp,0x4
1003901c:	mov    DWORD PTR [esp+0x28],ebx
10039020:	mov    BYTE PTR [esp+0x68],bl
10039024:	mov    esi,DWORD PTR [esp+0x34]
10039028:	cmp    esi,ebx
1003902a:	je     0x10039060
1003902c:	lea    edx,[esi+0x8]
1003902f:	push   edx
10039030:	call   edi
10039032:	cmp    eax,ebx
10039034:	jne    0x10039060
10039036:	cmp    esi,ebx
10039038:	je     0x10039060
1003903a:	mov    eax,DWORD PTR [esi]
1003903c:	cmp    eax,ebx
1003903e:	je     0x10039047
10039040:	push   eax
10039041:	call   DWORD PTR ds:0x100662b4
10039047:	mov    eax,DWORD PTR [esi+0x4]
1003904a:	cmp    eax,ebx
1003904c:	je     0x10039057
1003904e:	push   eax
1003904f:	call   0x100434b0
10039054:	add    esp,0x4
10039057:	push   esi
10039058:	call   0x10042f82
1003905d:	add    esp,0x4
10039060:	cmp    DWORD PTR [esp+0x38],ebx
10039064:	jl     0x10038ea4
1003906a:	mov    eax,DWORD PTR [esp+0x1c]
1003906e:	cmp    eax,ebx
10039070:	mov    DWORD PTR [esp+0x2c],ebx
10039074:	je     0x10039128
1003907a:	mov    ecx,DWORD PTR [eax]
1003907c:	lea    edx,[esp+0x2c]
10039080:	push   edx
10039081:	lea    edx,[esp+0x24]
10039085:	push   edx
10039086:	push   0x1
10039088:	push   0xffffffff
1003908a:	push   eax
1003908b:	mov    eax,DWORD PTR [ecx+0x10]
1003908e:	call   eax
10039090:	cmp    DWORD PTR [esp+0x2c],ebx
10039094:	je     0x10039128
1003909a:	mov    esi,DWORD PTR [esp+0x20]
1003909e:	mov    eax,DWORD PTR [ebp+0x10]
100390a1:	mov    edi,DWORD PTR [esi]
100390a3:	push   ebx
100390a4:	push   ebx
100390a5:	lea    ecx,[esp+0x44]
100390a9:	push   ecx
100390aa:	push   ebx
100390ab:	call   0x1000258d
100390b0:	mov    edx,DWORD PTR [edi+0x10]
100390b3:	push   eax
100390b4:	push   esi
100390b5:	call   edx
100390b7:	cmp    eax,ebx
100390b9:	jl     0x100390c3
100390bb:	cmp    WORD PTR [esp+0x3c],0x8
100390c1:	je     0x100390e4
100390c3:	lea    eax,[esp+0x3c]
100390c7:	push   eax
100390c8:	call   DWORD PTR ds:0x10066294
100390ce:	mov    eax,DWORD PTR [esp+0x20]
100390d2:	mov    ecx,DWORD PTR [eax]
100390d4:	mov    edx,DWORD PTR [ecx+0x8]
100390d7:	push   eax
100390d8:	call   edx
100390da:	mov    eax,DWORD PTR [esp+0x1c]
100390de:	cmp    eax,ebx
100390e0:	jne    0x1003907a
100390e2:	jmp    0x10039128
100390e4:	lea    eax,[esp+0x4c]
100390e8:	push   eax
100390e9:	call   DWORD PTR ds:0x1006628c
100390ef:	lea    ecx,[esp+0x3c]
100390f3:	push   ecx
100390f4:	lea    edx,[esp+0x50]
100390f8:	push   edx
100390f9:	call   DWORD PTR ds:0x10066280
100390ff:	cmp    eax,ebx
10039101:	jge    0x10039109
10039103:	push   eax
10039104:	call   0x10050c80
10039109:	lea    esi,[esp+0x4c]
1003910d:	lea    edi,[esp+0x30]
10039111:	mov    BYTE PTR [esp+0x68],0x5
10039116:	call   0x10038620
1003911b:	mov    eax,esi
1003911d:	push   eax
1003911e:	mov    BYTE PTR [esp+0x6c],bl
10039122:	call   DWORD PTR ds:0x10066294
10039128:	mov    eax,DWORD PTR [esp+0x14]
1003912c:	mov    ecx,DWORD PTR [eax]
1003912e:	mov    edx,DWORD PTR [ecx+0x8]
10039131:	push   eax
10039132:	call   edx
10039134:	mov    eax,DWORD PTR [esp+0x18]
10039138:	mov    ecx,DWORD PTR [eax]
1003913a:	mov    edx,DWORD PTR [ecx+0x8]
1003913d:	push   eax
1003913e:	call   edx
10039140:	mov    eax,DWORD PTR [esp+0x1c]
10039144:	mov    ecx,DWORD PTR [eax]
10039146:	mov    edx,DWORD PTR [ecx+0x8]
10039149:	push   eax
1003914a:	call   edx
1003914c:	mov    eax,DWORD PTR [esp+0x20]
10039150:	mov    ecx,DWORD PTR [eax]
10039152:	mov    edx,DWORD PTR [ecx+0x8]
10039155:	push   eax
10039156:	call   edx
10039158:	call   DWORD PTR ds:0x10066424
1003915e:	mov    edi,DWORD PTR [esp+0x30]
10039162:	cmp    edi,ebx
10039164:	mov    eax,DWORD PTR [ebp+0x8]
10039167:	mov    DWORD PTR [eax],edi
10039169:	je     0x100391a6
1003916b:	lea    esi,[edi+0x8]
1003916e:	push   esi
1003916f:	call   DWORD PTR ds:0x100660a4
10039175:	push   esi
10039176:	call   DWORD PTR ds:0x100660ac
1003917c:	test   eax,eax
1003917e:	jne    0x100391a6
10039180:	mov    eax,DWORD PTR [edi]
10039182:	cmp    eax,ebx
10039184:	je     0x1003918d
10039186:	push   eax
10039187:	call   DWORD PTR ds:0x100662b4
1003918d:	mov    eax,DWORD PTR [edi+0x4]
10039190:	cmp    eax,ebx
10039192:	je     0x1003919d
10039194:	push   eax
10039195:	call   0x100434b0
1003919a:	add    esp,0x4
1003919d:	push   edi
1003919e:	call   0x10042f82
100391a3:	add    esp,0x4
100391a6:	mov    eax,DWORD PTR [ebp+0x8]
100391a9:	mov    ecx,DWORD PTR [esp+0x60]
100391ad:	mov    DWORD PTR fs:0x0,ecx
100391b4:	pop    ecx
100391b5:	pop    edi
100391b6:	pop    esi
100391b7:	pop    ebx
100391b8:	mov    esp,ebp
100391ba:	pop    ebp
100391bb:	ret    
100391bc:	int3   
100391bd:	int3   
100391be:	int3   
100391bf:	int3   
100391c0:	push   ebp
100391c1:	mov    ebp,esp
100391c3:	push   0xffffffff
100391c5:	push   0x1006255e
100391ca:	mov    eax,fs:0x0
100391d0:	push   eax
100391d1:	sub    esp,0x1c
100391d4:	mov    eax,ds:0x1007e030
100391d9:	xor    eax,ebp
100391db:	mov    DWORD PTR [ebp-0x10],eax
100391de:	push   ebx
100391df:	push   esi
100391e0:	push   edi
100391e1:	push   eax
100391e2:	lea    eax,[ebp-0xc]
100391e5:	mov    fs:0x0,eax
100391eb:	mov    eax,DWORD PTR [ebp+0x8]
100391ee:	xor    ebx,ebx
100391f0:	mov    DWORD PTR [ebp-0x20],eax
100391f3:	mov    DWORD PTR [ebp-0x24],ebx
100391f6:	call   DWORD PTR ds:0x1007efec
100391fc:	push   0x3329156e
10039201:	push   0x10074028
10039206:	mov    DWORD PTR [ebp-0x24],eax
10039209:	call   0x100042bd
1003920e:	push   0x35f1df02
10039213:	push   eax
10039214:	call   0x100042bd
10039219:	push   0x8d8d064
1003921e:	push   eax
1003921f:	call   0x100042bd
10039224:	push   eax
10039225:	push   0xc
10039227:	push   0x10074064
1003922c:	call   0x1000448e
10039231:	push   0xc
10039233:	mov    edi,eax
10039235:	call   0x1004358e
1003923a:	mov    esi,eax
1003923c:	add    esp,0x28
1003923f:	mov    DWORD PTR [ebp-0x18],esi
10039242:	cmp    esi,ebx
10039244:	mov    DWORD PTR [ebp-0x4],ebx
10039247:	je     0x10039273
10039249:	push   edi
1003924a:	mov    DWORD PTR [esi+0x4],ebx
1003924d:	mov    DWORD PTR [esi+0x8],0x1
10039254:	call   DWORD PTR ds:0x100662b0
1003925a:	cmp    eax,ebx
1003925c:	mov    DWORD PTR [esi],eax
1003925e:	jne    0x1003926e
10039260:	cmp    edi,ebx
10039262:	je     0x1003926e
10039264:	push   0x8007000e
10039269:	call   0x10050c80
1003926e:	mov    DWORD PTR [ebp-0x1c],esi
10039271:	jmp    0x10039278
10039273:	mov    DWORD PTR [ebp-0x1c],ebx
10039276:	mov    esi,ebx
10039278:	cmp    esi,ebx
1003927a:	mov    DWORD PTR [ebp-0x4],0xffffffff
10039281:	mov    DWORD PTR [ebp-0x28],esi
10039284:	jne    0x10039290
10039286:	push   0x8007000e
1003928b:	call   0x10050c80
10039290:	push   0x482a1066
10039295:	push   0x10074080
1003929a:	mov    DWORD PTR [ebp-0x4],0x1
100392a1:	call   0x100042bd
100392a6:	push   eax
100392a7:	push   0x15
100392a9:	push   0x100740b4
100392ae:	call   0x1000448e
100392b3:	push   0xc
100392b5:	mov    esi,eax
100392b7:	call   0x1004358e
100392bc:	mov    edi,eax
100392be:	add    esp,0x18
100392c1:	mov    DWORD PTR [ebp-0x18],edi
100392c4:	cmp    edi,ebx
100392c6:	mov    BYTE PTR [ebp-0x4],0x2
100392ca:	je     0x100392f3
100392cc:	push   esi
100392cd:	mov    DWORD PTR [edi+0x4],ebx
100392d0:	mov    DWORD PTR [edi+0x8],0x1
100392d7:	call   DWORD PTR ds:0x100662b0
100392dd:	cmp    eax,ebx
100392df:	mov    DWORD PTR [edi],eax
100392e1:	jne    0x100392f5
100392e3:	cmp    esi,ebx
100392e5:	je     0x100392f5
100392e7:	push   0x8007000e
100392ec:	call   0x10050c80
100392f1:	jmp    0x100392f5
100392f3:	xor    edi,edi
100392f5:	cmp    edi,ebx
100392f7:	mov    BYTE PTR [ebp-0x4],0x1
100392fb:	mov    DWORD PTR [ebp-0x18],edi
100392fe:	jne    0x1003930a
10039300:	push   0x8007000e
10039305:	call   0x10050c80
1003930a:	lea    ecx,[ebp-0x28]
1003930d:	push   ecx
1003930e:	lea    edx,[ebp-0x18]
10039311:	push   edx
10039312:	lea    eax,[ebp-0x14]
10039315:	push   eax
10039316:	mov    BYTE PTR [ebp-0x4],0x3
1003931a:	call   0x10038d70
1003931f:	add    esp,0xc
10039322:	cmp    edi,ebx
10039324:	je     0x1003935a
10039326:	lea    ecx,[edi+0x8]
10039329:	push   ecx
1003932a:	call   DWORD PTR ds:0x100660ac
10039330:	cmp    eax,ebx
10039332:	jne    0x1003935a
10039334:	mov    eax,DWORD PTR [edi]
10039336:	cmp    eax,ebx
10039338:	je     0x10039341
1003933a:	push   eax
1003933b:	call   DWORD PTR ds:0x100662b4
10039341:	mov    eax,DWORD PTR [edi+0x4]
10039344:	cmp    eax,ebx
10039346:	je     0x10039351
10039348:	push   eax
10039349:	call   0x100434b0
1003934e:	add    esp,0x4
10039351:	push   edi
10039352:	call   0x10042f82
10039357:	add    esp,0x4
1003935a:	mov    esi,DWORD PTR [ebp-0x1c]
1003935d:	cmp    esi,ebx
1003935f:	mov    BYTE PTR [ebp-0x4],0x6
10039363:	je     0x10039399
10039365:	lea    edx,[esi+0x8]
10039368:	push   edx
10039369:	call   DWORD PTR ds:0x100660ac
1003936f:	cmp    eax,ebx
10039371:	jne    0x10039399
10039373:	mov    eax,DWORD PTR [esi]
10039375:	cmp    eax,ebx
10039377:	je     0x10039380
10039379:	push   eax
1003937a:	call   DWORD PTR ds:0x100662b4
10039380:	mov    eax,DWORD PTR [esi+0x4]
10039383:	cmp    eax,ebx
10039385:	je     0x10039390
10039387:	push   eax
10039388:	call   0x100434b0
1003938d:	add    esp,0x4
10039390:	push   esi
10039391:	call   0x10042f82
10039396:	add    esp,0x4
10039399:	mov    edi,DWORD PTR [ebp-0x14]
1003939c:	cmp    edi,ebx
1003939e:	je     0x100393a6
100393a0:	mov    ebx,DWORD PTR [edi]
100393a2:	test   ebx,ebx
100393a4:	jne    0x100393aa
100393a6:	xor    esi,esi
100393a8:	jmp    0x100393f7
100393aa:	push   ebx
100393ab:	call   DWORD PTR ds:0x100660c4
100393b1:	add    eax,0x1
100393b4:	cmp    eax,0x3fffffff
100393b9:	jg     0x100393f1
100393bb:	lea    edi,[eax+eax*1]
100393be:	mov    eax,edi
100393c0:	call   0x1004b7e0
100393c5:	mov    esi,esp
100393c7:	test   esi,esi
100393c9:	je     0x100393ee
100393cb:	mov    eax,DWORD PTR [ebp-0x24]
100393ce:	push   0x0
100393d0:	push   0x0
100393d2:	push   edi
100393d3:	push   esi
100393d4:	push   0xffffffff
100393d6:	push   ebx
100393d7:	push   0x0
100393d9:	push   eax
100393da:	mov    BYTE PTR [esi],0x0
100393dd:	call   DWORD PTR ds:0x100660b8
100393e3:	mov    edi,DWORD PTR [ebp-0x14]
100393e6:	neg    eax
100393e8:	sbb    eax,eax
100393ea:	and    eax,esi
100393ec:	jmp    0x100393f3
100393ee:	mov    edi,DWORD PTR [ebp-0x14]
100393f1:	xor    eax,eax
100393f3:	mov    esi,eax
100393f5:	xor    ebx,ebx
100393f7:	mov    eax,DWORD PTR [ebp-0x20]
100393fa:	mov    DWORD PTR [eax+0x18],0xf
10039401:	mov    DWORD PTR [eax+0x14],ebx
10039404:	push   esi
10039405:	mov    BYTE PTR [eax+0x4],0x0
10039409:	call   0x10043100
1003940e:	add    esp,0x4
10039411:	push   eax
10039412:	push   esi
10039413:	mov    esi,DWORD PTR [ebp-0x20]
10039416:	mov    ecx,esi
10039418:	call   0x10001336
1003941d:	cmp    edi,ebx
1003941f:	je     0x10039455
10039421:	lea    ecx,[edi+0x8]
10039424:	push   ecx
10039425:	call   DWORD PTR ds:0x100660ac
1003942b:	test   eax,eax
1003942d:	jne    0x10039455
1003942f:	mov    eax,DWORD PTR [edi]
10039431:	cmp    eax,ebx
10039433:	je     0x1003943c
10039435:	push   eax
10039436:	call   DWORD PTR ds:0x100662b4
1003943c:	mov    eax,DWORD PTR [edi+0x4]
1003943f:	cmp    eax,ebx
10039441:	je     0x1003944c
10039443:	push   eax
10039444:	call   0x100434b0
10039449:	add    esp,0x4
1003944c:	push   edi
1003944d:	call   0x10042f82
10039452:	add    esp,0x4
10039455:	mov    eax,esi
10039457:	lea    esp,[ebp-0x38]
1003945a:	mov    ecx,DWORD PTR [ebp-0xc]
1003945d:	mov    DWORD PTR fs:0x0,ecx
10039464:	pop    ecx
10039465:	pop    edi
10039466:	pop    esi
10039467:	pop    ebx
10039468:	mov    ecx,DWORD PTR [ebp-0x10]
1003946b:	xor    ecx,ebp
1003946d:	call   0x10042f87
10039472:	mov    esp,ebp
10039474:	pop    ebp
10039475:	ret    
10039476:	int3   
10039477:	int3   
10039478:	int3   
10039479:	int3   
1003947a:	int3   
1003947b:	int3   
1003947c:	int3   
1003947d:	int3   
1003947e:	int3   
1003947f:	int3   
10039480:	sub    esp,0xc
10039483:	push   ebx
10039484:	push   ebp
10039485:	push   esi
10039486:	mov    esi,DWORD PTR [ecx]
10039488:	push   edi
10039489:	mov    edi,DWORD PTR [esp+0x20]
1003948d:	xor    ebx,ebx
1003948f:	cmp    edi,0x1
10039492:	jle    0x1003957e
10039498:	mov    eax,0x34
1003949d:	cdq    
1003949e:	idiv   edi
100394a0:	mov    esi,DWORD PTR [ecx+edi*4-0x4]
100394a4:	add    eax,0x6
100394a7:	test   eax,eax
100394a9:	jle    0x10039574
100394af:	nop
100394b0:	sub    eax,0x1
100394b3:	mov    DWORD PTR [esp+0x18],eax
100394b7:	sub    ebx,0x61c88647
100394bd:	mov    eax,ebx
100394bf:	shr    eax,0x2
100394c2:	and    eax,0x3
100394c5:	mov    DWORD PTR [esp+0x10],eax
100394c9:	lea    eax,[edi-0x1]
100394cc:	xor    edx,edx
100394ce:	test   eax,eax
100394d0:	mov    DWORD PTR [esp+0x14],ebx
100394d4:	jle    0x10039529
100394d6:	mov    edi,DWORD PTR [ecx+edx*4+0x4]
100394da:	mov    ebx,esi
100394dc:	shl    ebx,0x4
100394df:	mov    eax,edi
100394e1:	shr    eax,0x3
100394e4:	xor    eax,ebx
100394e6:	mov    ebx,esi
100394e8:	shr    ebx,0x5
100394eb:	lea    ebp,[edi*4+0x0]
100394f2:	xor    ebx,ebp
100394f4:	mov    ebp,DWORD PTR [esp+0x24]
100394f8:	add    eax,ebx
100394fa:	mov    ebx,edx
100394fc:	and    ebx,0x3
100394ff:	xor    ebx,DWORD PTR [esp+0x10]
10039503:	add    edx,0x1
10039506:	mov    ebx,DWORD PTR [ebp+ebx*4+0x0]
1003950a:	xor    ebx,esi
1003950c:	mov    esi,DWORD PTR [esp+0x14]
10039510:	xor    esi,edi
10039512:	mov    edi,DWORD PTR [esp+0x20]
10039516:	add    ebx,esi
10039518:	xor    eax,ebx
1003951a:	add    DWORD PTR [ecx+edx*4-0x4],eax
1003951e:	mov    esi,DWORD PTR [ecx+edx*4-0x4]
10039522:	lea    eax,[edi-0x1]
10039525:	cmp    edx,eax
10039527:	jl     0x100394d6
10039529:	mov    eax,DWORD PTR [ecx]
1003952b:	mov    ebp,eax
1003952d:	shr    ebp,0x3
10039530:	mov    ebx,esi
10039532:	shl    ebx,0x4
10039535:	xor    ebp,ebx
10039537:	add    eax,eax
10039539:	add    eax,eax
1003953b:	mov    ebx,esi
1003953d:	and    edx,0x3
10039540:	xor    edx,DWORD PTR [esp+0x10]
10039544:	shr    ebx,0x5
10039547:	xor    ebx,eax
10039549:	mov    eax,DWORD PTR [esp+0x24]
1003954d:	mov    edx,DWORD PTR [eax+edx*4]
10039550:	add    ebp,ebx
10039552:	mov    ebx,DWORD PTR [esp+0x14]
10039556:	mov    eax,ebx
10039558:	xor    eax,DWORD PTR [ecx]
1003955a:	xor    edx,esi
1003955c:	add    edx,eax
1003955e:	mov    eax,DWORD PTR [esp+0x18]
10039562:	xor    ebp,edx
10039564:	add    DWORD PTR [ecx+edi*4-0x4],ebp
10039568:	test   eax,eax
1003956a:	mov    esi,DWORD PTR [ecx+edi*4-0x4]
1003956e:	jg     0x100394b0
10039574:	pop    edi
10039575:	pop    esi
10039576:	pop    ebp
10039577:	xor    eax,eax
10039579:	pop    ebx
1003957a:	add    esp,0xc
1003957d:	ret    
1003957e:	cmp    edi,0xffffffff
10039581:	jge    0x1003966e
10039587:	mov    eax,0x34
1003958c:	cdq    
1003958d:	neg    edi
1003958f:	idiv   edi
10039591:	mov    DWORD PTR [esp+0x20],edi
10039595:	add    eax,0x6
10039598:	imul   eax,eax,0x9e3779b9
1003959e:	test   eax,eax
100395a0:	mov    DWORD PTR [esp+0x14],eax
100395a4:	je     0x10039664
100395aa:	lea    ebx,[ebx+0x0]
100395b0:	mov    edx,eax
100395b2:	shr    edx,0x2
100395b5:	and    edx,0x3
100395b8:	mov    DWORD PTR [esp+0x10],edx
100395bc:	lea    edx,[edi-0x1]
100395bf:	test   edx,edx
100395c1:	jle    0x10039615
100395c3:	mov    edi,DWORD PTR [ecx+edx*4-0x4]
100395c7:	mov    eax,edi
100395c9:	shl    eax,0x4
100395cc:	mov    ebx,esi
100395ce:	shr    ebx,0x3
100395d1:	xor    ebx,eax
100395d3:	mov    eax,edi
100395d5:	shr    eax,0x5
100395d8:	lea    ebp,[esi*4+0x0]
100395df:	xor    eax,ebp
100395e1:	mov    ebp,DWORD PTR [esp+0x24]
100395e5:	add    ebx,eax
100395e7:	mov    eax,edx
100395e9:	and    eax,0x3
100395ec:	xor    eax,DWORD PTR [esp+0x10]
100395f0:	sub    edx,0x1
100395f3:	mov    ebp,DWORD PTR [ebp+eax*4+0x0]
100395f7:	mov    eax,DWORD PTR [esp+0x14]
100395fb:	xor    ebp,edi
100395fd:	mov    edi,eax
100395ff:	xor    edi,esi
10039601:	add    ebp,edi
10039603:	xor    ebx,ebp
10039605:	sub    DWORD PTR [ecx+edx*4+0x4],ebx
10039609:	test   edx,edx
1003960b:	mov    esi,DWORD PTR [ecx+edx*4+0x4]
1003960f:	jg     0x100395c3
10039611:	mov    edi,DWORD PTR [esp+0x20]
10039615:	mov    edi,DWORD PTR [ecx+edi*4-0x4]
10039619:	mov    ebp,edi
1003961b:	shl    ebp,0x4
1003961e:	mov    ebx,esi
10039620:	shr    ebx,0x3
10039623:	xor    ebx,ebp
10039625:	shr    edi,0x5
10039628:	lea    ebp,[esi*4+0x0]
1003962f:	xor    edi,ebp
10039631:	and    edx,0x3
10039634:	xor    edx,DWORD PTR [esp+0x10]
10039638:	add    ebx,edi
1003963a:	mov    edi,DWORD PTR [esp+0x24]
1003963e:	mov    edx,DWORD PTR [edi+edx*4]
10039641:	mov    edi,DWORD PTR [esp+0x20]
10039645:	xor    edx,DWORD PTR [ecx+edi*4-0x4]
10039649:	mov    ebp,eax
1003964b:	xor    ebp,esi
1003964d:	add    edx,ebp
1003964f:	xor    ebx,edx
10039651:	sub    DWORD PTR [ecx],ebx
10039653:	mov    esi,DWORD PTR [ecx]
10039655:	add    eax,0x61c88647
1003965a:	mov    DWORD PTR [esp+0x14],eax
1003965e:	jne    0x100395b0
10039664:	pop    edi
10039665:	pop    esi
10039666:	pop    ebp
10039667:	xor    eax,eax
10039669:	pop    ebx
1003966a:	add    esp,0xc
1003966d:	ret    
1003966e:	pop    edi
1003966f:	pop    esi
10039670:	pop    ebp
10039671:	mov    eax,0x1
10039676:	pop    ebx
10039677:	add    esp,0xc
1003967a:	ret    
1003967b:	int3   
1003967c:	int3   
1003967d:	int3   
1003967e:	int3   
1003967f:	int3   
10039680:	push   0xffffffff
10039682:	push   0x1005fed8
10039687:	mov    eax,fs:0x0
1003968d:	push   eax
1003968e:	sub    esp,0x2c
10039691:	mov    eax,ds:0x1007e030
10039696:	xor    eax,esp
10039698:	mov    DWORD PTR [esp+0x24],eax
1003969c:	push   ebx
1003969d:	push   ebp
1003969e:	push   esi
1003969f:	mov    eax,ds:0x1007e030
100396a4:	xor    eax,esp
100396a6:	push   eax
100396a7:	lea    eax,[esp+0x3c]
100396ab:	mov    fs:0x0,eax
100396b1:	mov    bl,cl
100396b3:	mov    esi,DWORD PTR [esp+0x4c]
100396b7:	mov    ebp,DWORD PTR [esp+0x54]
100396bb:	xor    eax,eax
100396bd:	mov    DWORD PTR [esp+0x14],eax
100396c1:	mov    DWORD PTR [esp+0x1c],edx
100396c5:	mov    DWORD PTR [esp+0x20],ebp
100396c9:	mov    DWORD PTR [esp+0x14],eax
100396cd:	test   bl,bl
100396cf:	mov    DWORD PTR [esp+0x44],eax
100396d3:	je     0x10039719
100396d5:	mov    DWORD PTR [esp+0x18],eax
100396d9:	mov    ecx,esi
100396db:	lea    eax,[esp+0x18]
100396df:	lea    esi,[esp+0x1c]
100396e3:	call   0x1002f930
100396e8:	mov    ecx,DWORD PTR [eax]
100396ea:	mov    esi,ecx
100396ec:	test   esi,esi
100396ee:	mov    DWORD PTR [eax],0x0
100396f4:	je     0x10039700
100396f6:	push   0x0
100396f8:	call   0x10042f82
100396fd:	add    esp,0x4
10039700:	mov    edx,DWORD PTR [esp+0x1c]
10039704:	push   edx
10039705:	mov    DWORD PTR [esp+0x18],esi
10039709:	call   0x10042f82
1003970e:	mov    DWORD PTR [esp+0x20],esi
10039712:	mov    esi,DWORD PTR [esp+0x1c]
10039716:	add    esp,0x4
10039719:	lea    eax,[esi+0x3]
1003971c:	and    eax,0xfffffffc
1003971f:	add    eax,0x8
10039722:	mov    DWORD PTR [esp+0x18],eax
10039726:	add    eax,0x10
10039729:	push   eax
1003972a:	mov    DWORD PTR [ebp+0x0],eax
1003972d:	call   0x10043811
10039732:	add    esp,0x4
10039735:	mov    DWORD PTR [edi],eax
10039737:	call   DWORD PTR ds:0x10066118
1003973d:	push   eax
1003973e:	call   0x100464fa
10039743:	add    esp,0x4
10039746:	xor    ebp,ebp
10039748:	call   0x10046507
1003974d:	cdq    
1003974e:	mov    ecx,0xff
10039753:	idiv   ecx
10039755:	add    ebp,0x1
10039758:	cmp    ebp,0x10
1003975b:	mov    BYTE PTR [esp+ebp*1+0x23],dl
1003975f:	jne    0x10039748
10039761:	mov    eax,DWORD PTR [edi]
10039763:	mov    edx,DWORD PTR [esp+0x24]
10039767:	mov    ecx,DWORD PTR [esp+0x28]
1003976b:	mov    DWORD PTR [eax],edx
1003976d:	mov    edx,DWORD PTR [esp+0x2c]
10039771:	mov    DWORD PTR [eax+0x4],ecx
10039774:	mov    ecx,DWORD PTR [esp+0x30]
10039778:	mov    DWORD PTR [eax+0x8],edx
1003977b:	mov    edx,DWORD PTR [esp+0x1c]
1003977f:	mov    DWORD PTR [eax+0xc],ecx
10039782:	add    eax,ebp
10039784:	neg    bl
10039786:	push   esi
10039787:	push   edx
10039788:	sbb    ebx,ebx
1003978a:	and    ebx,0xfffffbff
10039790:	add    ebx,0x4b4f5444
10039796:	mov    DWORD PTR [eax],ebx
10039798:	add    eax,0x4
1003979b:	push   eax
1003979c:	call   0x10045270
100397a1:	mov    ecx,DWORD PTR [esp+0x2c]
100397a5:	mov    edx,DWORD PTR [ecx]
100397a7:	mov    eax,DWORD PTR [edi]
100397a9:	lea    eax,[edx+eax*1-0x4]
100397ad:	mov    DWORD PTR [eax],esi
100397af:	add    esp,0xc
100397b2:	xor    eax,eax
100397b4:	xor    ecx,ecx
100397b6:	jmp    0x100397c0
100397b8:	lea    esp,[esp+0x0]
100397bf:	nop
100397c0:	mov    edx,DWORD PTR [esp+0x50]
100397c4:	mov    dl,BYTE PTR [ecx+edx*1]
100397c7:	xor    BYTE PTR [esp+eax*1+0x24],dl
100397cb:	add    ecx,0x1
100397ce:	add    eax,0x1
100397d1:	and    ecx,0xf
100397d4:	cmp    eax,0x10
100397d7:	jne    0x100397c0
100397d9:	mov    ecx,DWORD PTR [edi]
100397db:	lea    eax,[esp+0x24]
100397df:	push   eax
100397e0:	mov    eax,DWORD PTR [esp+0x1c]
100397e4:	cdq    
100397e5:	and    edx,0x3
100397e8:	add    eax,edx
100397ea:	sar    eax,0x2
100397ed:	push   eax
100397ee:	add    ecx,0x10
100397f1:	call   0x10039480
100397f6:	mov    ecx,DWORD PTR [esp+0x1c]
100397fa:	push   ecx
100397fb:	call   0x10042f82
10039800:	add    esp,0xc
10039803:	mov    eax,edi
10039805:	mov    ecx,DWORD PTR [esp+0x3c]
10039809:	mov    DWORD PTR fs:0x0,ecx
10039810:	pop    ecx
10039811:	pop    esi
10039812:	pop    ebp
10039813:	pop    ebx
10039814:	mov    ecx,DWORD PTR [esp+0x24]
10039818:	xor    ecx,esp
1003981a:	call   0x10042f87
1003981f:	add    esp,0x38
10039822:	ret    
10039823:	int3   
10039824:	int3   
10039825:	int3   
10039826:	int3   
10039827:	int3   
10039828:	int3   
10039829:	int3   
1003982a:	int3   
1003982b:	int3   
1003982c:	int3   
1003982d:	int3   
1003982e:	int3   
1003982f:	int3   
10039830:	push   0xffffffff
10039832:	push   0x100631f0
10039837:	mov    eax,fs:0x0
1003983d:	push   eax
1003983e:	sub    esp,0x30
10039841:	mov    eax,ds:0x1007e030
10039846:	xor    eax,esp
10039848:	mov    DWORD PTR [esp+0x28],eax
1003984c:	push   ebx
1003984d:	push   ebp
1003984e:	push   esi
1003984f:	push   edi
10039850:	mov    eax,ds:0x1007e030
10039855:	xor    eax,esp
10039857:	push   eax
10039858:	lea    eax,[esp+0x44]
1003985c:	mov    fs:0x0,eax
10039862:	mov    edi,DWORD PTR [esp+0x60]
10039866:	mov    eax,DWORD PTR [esp+0x5c]
1003986a:	mov    ebx,DWORD PTR [esp+0x54]
1003986e:	mov    esi,DWORD PTR [esp+0x58]
10039872:	xor    ebp,ebp
10039874:	mov    DWORD PTR [esp+0x20],ebp
10039878:	mov    DWORD PTR [esp+0x18],ebx
1003987c:	mov    DWORD PTR [esp+0x1c],ecx
10039880:	mov    DWORD PTR [esp+0x14],edx
10039884:	mov    DWORD PTR [esp+0x24],ebp
10039888:	cmp    eax,0x18
1003988b:	mov    DWORD PTR [esp+0x4c],ebp
1003988f:	jae    0x100398af
10039891:	call   0x1000206e
10039896:	push   0x6
10039898:	call   0x100379e0
1003989d:	add    esp,0x4
100398a0:	push   ebp
100398a1:	mov    DWORD PTR [ebx],ebp
100398a3:	call   0x10042f82
100398a8:	mov    eax,ebx
100398aa:	jmp    0x10039b4b
100398af:	lea    ebx,[eax-0x10]
100398b2:	push   ebx
100398b3:	call   0x10043811
100398b8:	mov    ebp,eax
100398ba:	add    esp,0x4
100398bd:	mov    DWORD PTR [esp+0x28],ebp
100398c1:	push   ebx
100398c2:	lea    eax,[esi+0x10]
100398c5:	push   eax
100398c6:	push   ebp
100398c7:	mov    BYTE PTR [esp+0x58],0x1
100398cc:	call   0x10045270
100398d1:	mov    ecx,DWORD PTR [esi]
100398d3:	mov    eax,DWORD PTR [esi+0x8]
100398d6:	mov    edx,DWORD PTR [esi+0x4]
100398d9:	mov    DWORD PTR [esp+0x38],ecx
100398dd:	mov    ecx,DWORD PTR [esi+0xc]
100398e0:	mov    DWORD PTR [esp+0x40],eax
100398e4:	add    esp,0xc
100398e7:	mov    DWORD PTR [esp+0x38],ecx
100398eb:	xor    eax,eax
100398ed:	mov    DWORD PTR [esp+0x30],edx
100398f1:	xor    ecx,ecx
100398f3:	mov    dl,BYTE PTR [ecx+edi*1]
100398f6:	xor    BYTE PTR [esp+eax*1+0x2c],dl
100398fa:	add    ecx,0x1
100398fd:	add    eax,0x1
10039900:	and    ecx,0xf
10039903:	cmp    eax,0x10
10039906:	jne    0x100398f3
10039908:	lea    eax,[esp+0x2c]
1003990c:	push   eax
1003990d:	mov    eax,ebx
1003990f:	cdq    
10039910:	and    edx,0x3
10039913:	add    eax,edx
10039915:	sar    eax,0x2
10039918:	neg    eax
1003991a:	push   eax
1003991b:	mov    ecx,ebp
1003991d:	call   0x10039480
10039922:	mov    ecx,DWORD PTR [esp+0x1c]
10039926:	mov    BYTE PTR [ecx],0x0
10039929:	add    esp,0x8
1003992c:	mov    eax,0x4
10039931:	mov    ecx,0x1007f52c
10039936:	mov    edx,ebp
10039938:	mov    esi,DWORD PTR [edx]
1003993a:	cmp    esi,DWORD PTR [ecx]
1003993c:	jne    0x10039950
1003993e:	sub    eax,0x4
10039941:	add    ecx,0x4
10039944:	add    edx,0x4
10039947:	cmp    eax,0x4
1003994a:	jae    0x10039938
1003994c:	test   eax,eax
1003994e:	je     0x100399ad
10039950:	movzx  edi,BYTE PTR [ecx]
10039953:	movzx  esi,BYTE PTR [edx]
10039956:	sub    esi,edi
10039958:	jne    0x1003999f
1003995a:	sub    eax,0x1
1003995d:	add    ecx,0x1
10039960:	add    edx,0x1
10039963:	test   eax,eax
10039965:	je     0x100399ad
10039967:	movzx  edi,BYTE PTR [ecx]
1003996a:	movzx  esi,BYTE PTR [edx]
1003996d:	sub    esi,edi
1003996f:	jne    0x1003999f
10039971:	sub    eax,0x1
10039974:	add    ecx,0x1
10039977:	add    edx,0x1
1003997a:	test   eax,eax
1003997c:	je     0x100399ad
1003997e:	movzx  edi,BYTE PTR [ecx]
10039981:	movzx  esi,BYTE PTR [edx]
10039984:	sub    esi,edi
10039986:	jne    0x1003999f
10039988:	sub    eax,0x1
1003998b:	add    ecx,0x1
1003998e:	add    edx,0x1
10039991:	test   eax,eax
10039993:	je     0x100399ad
10039995:	movzx  eax,BYTE PTR [ecx]
10039998:	movzx  esi,BYTE PTR [edx]
1003999b:	sub    esi,eax
1003999d:	je     0x100399ad
1003999f:	test   esi,esi
100399a1:	mov    eax,0x1
100399a6:	jg     0x100399af
100399a8:	or     eax,0xffffffff
100399ab:	jmp    0x100399af
100399ad:	xor    eax,eax
100399af:	test   eax,eax
100399b1:	jne    0x100399bf
100399b3:	mov    ecx,DWORD PTR [esp+0x14]
100399b7:	mov    BYTE PTR [ecx],0x1
100399ba:	jmp    0x10039a4f
100399bf:	mov    eax,0x4
100399c4:	mov    ecx,0x1007f528
100399c9:	mov    edx,ebp
100399cb:	jmp    0x100399d0
100399cd:	lea    ecx,[ecx+0x0]
100399d0:	mov    esi,DWORD PTR [edx]
100399d2:	cmp    esi,DWORD PTR [ecx]
100399d4:	jne    0x100399e8
100399d6:	sub    eax,0x4
100399d9:	add    ecx,0x4
100399dc:	add    edx,0x4
100399df:	cmp    eax,0x4
100399e2:	jae    0x100399d0
100399e4:	test   eax,eax
100399e6:	je     0x10039a45
100399e8:	movzx  esi,BYTE PTR [edx]
100399eb:	movzx  edi,BYTE PTR [ecx]
100399ee:	sub    esi,edi
100399f0:	jne    0x10039a37
100399f2:	sub    eax,0x1
100399f5:	add    ecx,0x1
100399f8:	add    edx,0x1
100399fb:	test   eax,eax
100399fd:	je     0x10039a45
100399ff:	movzx  esi,BYTE PTR [edx]
10039a02:	movzx  edi,BYTE PTR [ecx]
10039a05:	sub    esi,edi
10039a07:	jne    0x10039a37
10039a09:	sub    eax,0x1
10039a0c:	add    ecx,0x1
10039a0f:	add    edx,0x1
10039a12:	test   eax,eax
10039a14:	je     0x10039a45
10039a16:	movzx  esi,BYTE PTR [edx]
10039a19:	movzx  edi,BYTE PTR [ecx]
10039a1c:	sub    esi,edi
10039a1e:	jne    0x10039a37
10039a20:	sub    eax,0x1
10039a23:	add    ecx,0x1
10039a26:	add    edx,0x1
10039a29:	test   eax,eax
10039a2b:	je     0x10039a45
10039a2d:	movzx  esi,BYTE PTR [edx]
10039a30:	movzx  edx,BYTE PTR [ecx]
10039a33:	sub    esi,edx
10039a35:	je     0x10039a45
10039a37:	test   esi,esi
10039a39:	mov    eax,0x1
10039a3e:	jg     0x10039a47
10039a40:	or     eax,0xffffffff
10039a43:	jmp    0x10039a47
10039a45:	xor    eax,eax
10039a47:	test   eax,eax
10039a49:	jne    0x10039b20
10039a4f:	cmp    BYTE PTR [esp+0x64],0x0
10039a54:	mov    eax,DWORD PTR [ebx+ebp*1-0x4]
10039a58:	mov    edi,DWORD PTR [esp+0x1c]
10039a5c:	mov    DWORD PTR [edi],eax
10039a5e:	jne    0x10039a65
10039a60:	add    eax,0xfffffffc
10039a63:	mov    DWORD PTR [edi],eax
10039a65:	mov    eax,DWORD PTR [edi]
10039a67:	lea    ecx,[ebx-0x8]
10039a6a:	cmp    eax,ecx
10039a6c:	ja     0x10039b20
10039a72:	add    ebx,0xfffffff5
10039a75:	cmp    eax,ebx
10039a77:	jb     0x10039b20
10039a7d:	push   eax
10039a7e:	call   0x10043811
10039a83:	mov    esi,eax
10039a85:	add    esp,0x4
10039a88:	test   esi,esi
10039a8a:	je     0x10039a96
10039a8c:	push   0x0
10039a8e:	call   0x10042f82
10039a93:	add    esp,0x4
10039a96:	mov    edx,DWORD PTR [edi]
10039a98:	push   edx
10039a99:	lea    eax,[ebp+0x4]
10039a9c:	push   eax
10039a9d:	push   esi
10039a9e:	mov    DWORD PTR [esp+0x30],esi
10039aa2:	call   0x10045270
10039aa7:	mov    ecx,DWORD PTR [esp+0x20]
10039aab:	add    esp,0xc
10039aae:	cmp    BYTE PTR [ecx],0x0
10039ab1:	je     0x10039b06
10039ab3:	mov    eax,DWORD PTR [edi]
10039ab5:	lea    edx,[esp+0x14]
10039ab9:	push   edx
10039aba:	push   eax
10039abb:	lea    ecx,[esp+0x28]
10039abf:	push   esi
10039ac0:	push   ecx
10039ac1:	mov    DWORD PTR [esp+0x24],0x0
10039ac9:	call   0x1002f560
10039ace:	mov    edi,DWORD PTR [eax]
10039ad0:	mov    DWORD PTR [eax],0x0
10039ad6:	mov    edx,DWORD PTR [esp+0x30]
10039ada:	push   edx
10039adb:	call   0x10042f82
10039ae0:	add    esp,0x14
10039ae3:	cmp    edi,esi
10039ae5:	je     0x10039af0
10039ae7:	push   esi
10039ae8:	call   0x10042f82
10039aed:	add    esp,0x4
10039af0:	mov    eax,DWORD PTR [esp+0x14]
10039af4:	mov    ecx,DWORD PTR [esp+0x1c]
10039af8:	push   0x0
10039afa:	mov    esi,edi
10039afc:	mov    DWORD PTR [ecx],eax
10039afe:	call   0x10042f82
10039b03:	add    esp,0x4
10039b06:	mov    edi,DWORD PTR [esp+0x18]
10039b0a:	push   ebp
10039b0b:	mov    DWORD PTR [edi],esi
10039b0d:	call   0x10042f82
10039b12:	add    esp,0x4
10039b15:	push   0x0
10039b17:	call   0x10042f82
10039b1c:	mov    eax,edi
10039b1e:	jmp    0x10039b4b
10039b20:	call   0x1000206e
10039b25:	push   0x6
10039b27:	call   0x100379e0
10039b2c:	mov    esi,DWORD PTR [esp+0x1c]
10039b30:	add    esp,0x4
10039b33:	push   ebp
10039b34:	mov    DWORD PTR [esi],0x0
10039b3a:	call   0x10042f82
10039b3f:	add    esp,0x4
10039b42:	push   0x0
10039b44:	call   0x10042f82
10039b49:	mov    eax,esi
10039b4b:	add    esp,0x4
10039b4e:	mov    ecx,DWORD PTR [esp+0x44]
10039b52:	mov    DWORD PTR fs:0x0,ecx
10039b59:	pop    ecx
10039b5a:	pop    edi
10039b5b:	pop    esi
10039b5c:	pop    ebp
10039b5d:	pop    ebx
10039b5e:	mov    ecx,DWORD PTR [esp+0x28]
10039b62:	xor    ecx,esp
10039b64:	call   0x10042f87
10039b69:	add    esp,0x3c
10039b6c:	ret    
10039b6d:	int3   
10039b6e:	int3   
10039b6f:	int3   
10039b70:	push   0xffffffff
10039b72:	push   0x10061299
10039b77:	mov    eax,fs:0x0
10039b7d:	push   eax
10039b7e:	sub    esp,0x18
10039b81:	mov    eax,ds:0x1007e030
10039b86:	xor    eax,esp
10039b88:	mov    DWORD PTR [esp+0x14],eax
10039b8c:	push   ebp
10039b8d:	push   esi
10039b8e:	mov    eax,ds:0x1007e030
10039b93:	xor    eax,esp
10039b95:	push   eax
10039b96:	lea    eax,[esp+0x24]
10039b9a:	mov    fs:0x0,eax
10039ba0:	mov    ebp,DWORD PTR [esp+0x34]
10039ba4:	xor    eax,eax
10039ba6:	mov    DWORD PTR [esp+0xc],eax
10039baa:	mov    DWORD PTR [edi+0x18],0xf
10039bb1:	mov    DWORD PTR [edi+0x14],eax
10039bb4:	mov    DWORD PTR [esp+0x10],edi
10039bb8:	mov    BYTE PTR [edi+0x4],al
10039bbb:	xor    esi,esi
10039bbd:	cmp    ebx,eax
10039bbf:	mov    DWORD PTR [esp+0x2c],eax
10039bc3:	mov    DWORD PTR [esp+0xc],0x1
10039bcb:	je     0x10039c3c
10039bcd:	lea    ecx,[ecx+0x0]
10039bd0:	movzx  eax,BYTE PTR [esi+ebp*1]
10039bd4:	push   eax
10039bd5:	push   0x175e4a52
10039bda:	push   0x7913746d
10039bdf:	push   0x599e559
10039be4:	push   0x100740e0
10039be9:	call   0x100042bd
10039bee:	add    esp,0x8
10039bf1:	push   eax
10039bf2:	call   0x100042bd
10039bf7:	add    esp,0x8
10039bfa:	push   eax
10039bfb:	call   0x100042bd
10039c00:	push   eax
10039c01:	push   0x4
10039c03:	push   0x10074104
10039c08:	call   0x100042cf
10039c0d:	add    esp,0x14
10039c10:	push   eax
10039c11:	lea    ecx,[esp+0x1c]
10039c15:	push   ecx
10039c16:	call   0x1005856f
10039c1b:	lea    edx,[esp+0x20]
10039c1f:	push   edx
10039c20:	call   0x10043100
10039c25:	add    esp,0x10
10039c28:	push   eax
10039c29:	lea    eax,[esp+0x18]
10039c2d:	push   eax
10039c2e:	mov    eax,edi
10039c30:	call   0x10004d85
10039c35:	add    esi,0x1
10039c38:	cmp    esi,ebx
10039c3a:	jne    0x10039bd0
10039c3c:	mov    eax,edi
10039c3e:	mov    ecx,DWORD PTR [esp+0x24]
10039c42:	mov    DWORD PTR fs:0x0,ecx
10039c49:	pop    ecx
10039c4a:	pop    esi
10039c4b:	pop    ebp
10039c4c:	mov    ecx,DWORD PTR [esp+0x14]
10039c50:	xor    ecx,esp
10039c52:	call   0x10042f87
10039c57:	add    esp,0x24
10039c5a:	ret    
10039c5b:	int3   
10039c5c:	int3   
10039c5d:	int3   
10039c5e:	int3   
10039c5f:	int3   
10039c60:	push   0xffffffff
10039c62:	push   0x1005f7a8
10039c67:	mov    eax,fs:0x0
10039c6d:	push   eax
10039c6e:	sub    esp,0xc
10039c71:	push   ebx
10039c72:	push   ebp
10039c73:	push   esi
10039c74:	push   edi
10039c75:	mov    eax,ds:0x1007e030
10039c7a:	xor    eax,esp
10039c7c:	push   eax
10039c7d:	lea    eax,[esp+0x20]
10039c81:	mov    fs:0x0,eax
10039c87:	mov    ebx,DWORD PTR [esp+0x38]
10039c8b:	xor    edi,edi
10039c8d:	mov    DWORD PTR [esp+0x1c],edi
10039c91:	mov    DWORD PTR [ebx],edi
10039c93:	mov    DWORD PTR [esp+0x1c],edi
10039c97:	mov    esi,DWORD PTR [esp+0x34]
10039c9b:	mov    DWORD PTR [esp+0x28],edi
10039c9f:	mov    eax,DWORD PTR [esi+0x14]
10039ca2:	test   al,0x1
10039ca4:	je     0x10039cae
10039ca6:	mov    esi,DWORD PTR [esp+0x30]
10039caa:	mov    DWORD PTR [esi],edi
10039cac:	jmp    0x10039ce2
10039cae:	shr    eax,1
10039cb0:	mov    DWORD PTR [ebx],eax
10039cb2:	je     0x10039ca6
10039cb4:	push   eax
10039cb5:	call   0x10043811
10039cba:	add    esp,0x4
10039cbd:	cmp    eax,edi
10039cbf:	mov    DWORD PTR [esp+0x1c],eax
10039cc3:	je     0x10039cce
10039cc5:	push   edi
10039cc6:	call   0x10042f82
10039ccb:	add    esp,0x4
10039cce:	xor    ebp,ebp
10039cd0:	cmp    DWORD PTR [ebx],edi
10039cd2:	mov    DWORD PTR [esp+0x18],edi
10039cd6:	jne    0x10039d09
10039cd8:	mov    esi,DWORD PTR [esp+0x30]
10039cdc:	mov    eax,DWORD PTR [esp+0x1c]
10039ce0:	mov    DWORD PTR [esi],eax
10039ce2:	push   edi
10039ce3:	call   0x10042f82
10039ce8:	mov    eax,esi
10039cea:	add    esp,0x4
10039ced:	mov    ecx,DWORD PTR [esp+0x20]
10039cf1:	mov    DWORD PTR fs:0x0,ecx
10039cf8:	pop    ecx
10039cf9:	pop    edi
10039cfa:	pop    esi
10039cfb:	pop    ebp
10039cfc:	pop    ebx
10039cfd:	add    esp,0x18
10039d00:	ret    
10039d01:	mov    esi,DWORD PTR [esp+0x34]
10039d05:	mov    edi,DWORD PTR [esp+0x18]
10039d09:	cmp    edi,DWORD PTR [esi+0x14]
10039d0c:	jbe    0x10039d13
10039d0e:	call   0x100434a0
10039d13:	cmp    DWORD PTR [esi+0x18],0x10
10039d17:	jb     0x10039d21
10039d19:	mov    eax,DWORD PTR [esi+0x4]
10039d1c:	add    esi,0x4
10039d1f:	jmp    0x10039d26
10039d21:	add    esi,0x4
10039d24:	mov    eax,esi
10039d26:	mov    bl,BYTE PTR [eax+edi*1]
10039d29:	mov    eax,DWORD PTR [esp+0x34]
10039d2d:	add    edi,0x1
10039d30:	cmp    edi,DWORD PTR [eax+0x14]
10039d33:	jbe    0x10039d3a
10039d35:	call   0x100434a0
10039d3a:	mov    ecx,DWORD PTR [esp+0x34]
10039d3e:	cmp    DWORD PTR [ecx+0x18],0x10
10039d42:	jb     0x10039d46
10039d44:	mov    esi,DWORD PTR [esi]
10039d46:	mov    dl,BYTE PTR [edi+esi*1]
10039d49:	movzx  eax,bl
10039d4c:	push   eax
10039d4d:	mov    BYTE PTR [esp+0x1b],dl
10039d51:	call   0x1004f3cc
10039d56:	add    esp,0x4
10039d59:	test   eax,eax
10039d5b:	je     0x10039de2
10039d61:	movzx  ecx,BYTE PTR [esp+0x17]
10039d66:	push   ecx
10039d67:	call   0x1004f3cc
10039d6c:	add    esp,0x4
10039d6f:	test   eax,eax
10039d71:	je     0x10039de2
10039d73:	mov    dl,bl
10039d75:	sub    dl,0x30
10039d78:	cmp    dl,0x9
10039d7b:	ja     0x10039d85
10039d7d:	movsx  ebx,bl
10039d80:	sub    ebx,0x30
10039d83:	jmp    0x10039d96
10039d85:	movsx  eax,bl
10039d88:	push   eax
10039d89:	call   0x10058e57
10039d8e:	mov    ebx,eax
10039d90:	add    esp,0x4
10039d93:	sub    ebx,0x37
10039d96:	mov    al,BYTE PTR [esp+0x17]
10039d9a:	mov    cl,al
10039d9c:	sub    cl,0x30
10039d9f:	cmp    cl,0x9
10039da2:	ja     0x10039dac
10039da4:	movsx  eax,al
10039da7:	sub    eax,0x30
10039daa:	jmp    0x10039dbb
10039dac:	movsx  edx,al
10039daf:	push   edx
10039db0:	call   0x10058e57
10039db5:	add    esp,0x4
10039db8:	sub    eax,0x37
10039dbb:	mov    ecx,DWORD PTR [esp+0x38]
10039dbf:	add    DWORD PTR [esp+0x18],0x2
10039dc4:	shl    bl,0x4
10039dc7:	add    bl,al
10039dc9:	mov    eax,DWORD PTR [esp+0x1c]
10039dcd:	mov    BYTE PTR [eax+ebp*1],bl
10039dd0:	add    ebp,0x1
10039dd3:	cmp    ebp,DWORD PTR [ecx]
10039dd5:	jne    0x10039d01
10039ddb:	xor    edi,edi
10039ddd:	jmp    0x10039cd8
10039de2:	mov    eax,DWORD PTR [esp+0x1c]
10039de6:	test   eax,eax
10039de8:	mov    edx,DWORD PTR [esp+0x38]
10039dec:	mov    DWORD PTR [edx],0x0
10039df2:	je     0x10039dfd
10039df4:	push   eax
10039df5:	call   0x10042f82
10039dfa:	add    esp,0x4
10039dfd:	mov    esi,DWORD PTR [esp+0x30]
10039e01:	mov    DWORD PTR [esi],0x0
10039e07:	push   0x0
10039e09:	jmp    0x10039ce3
10039e0e:	int3   
10039e0f:	int3   
10039e10:	push   0xffffffff
10039e12:	push   0x10062510
10039e17:	mov    eax,fs:0x0
10039e1d:	push   eax
10039e1e:	sub    esp,0x10
10039e21:	push   ebx
10039e22:	push   ebp
10039e23:	push   esi
10039e24:	push   edi
10039e25:	mov    eax,ds:0x1007e030
10039e2a:	xor    eax,esp
10039e2c:	push   eax
10039e2d:	lea    eax,[esp+0x24]
10039e31:	mov    fs:0x0,eax
10039e37:	mov    ebx,ecx
10039e39:	mov    DWORD PTR [esp+0x18],0x0
10039e41:	mov    edi,DWORD PTR [ebx+0x14]
10039e44:	lea    ebp,[edi+0x4]
10039e47:	push   ebp
10039e48:	call   0x10043811
10039e4d:	mov    esi,eax
10039e4f:	add    esp,0x4
10039e52:	mov    DWORD PTR [esp+0x1c],esi
10039e56:	mov    DWORD PTR [esp+0x2c],0x0
10039e5e:	mov    DWORD PTR [esi],edi
10039e60:	cmp    DWORD PTR [ebx+0x18],0x10
10039e64:	jb     0x10039e6b
10039e66:	mov    ebx,DWORD PTR [ebx+0x4]
10039e69:	jmp    0x10039e6e
10039e6b:	add    ebx,0x4
10039e6e:	push   edi
10039e6f:	lea    eax,[esi+0x4]
10039e72:	push   ebx
10039e73:	push   eax
10039e74:	call   0x10045270
10039e79:	mov    edx,DWORD PTR [esp+0x44]
10039e7d:	add    esp,0xc
10039e80:	lea    ecx,[esp+0x18]
10039e84:	push   ecx
10039e85:	mov    cl,BYTE PTR [esp+0x40]
10039e89:	push   edx
10039e8a:	push   ebp
10039e8b:	mov    edx,esi
10039e8d:	lea    edi,[esp+0x20]
10039e91:	call   0x10039680
10039e96:	mov    ecx,DWORD PTR [eax]
10039e98:	mov    ebp,ecx
10039e9a:	add    esp,0xc
10039e9d:	mov    DWORD PTR [eax],0x0
10039ea3:	mov    DWORD PTR [esp+0x20],ebp
10039ea7:	mov    BYTE PTR [esp+0x2c],0x1
10039eac:	mov    edx,DWORD PTR [esp+0x14]
10039eb0:	push   edx
10039eb1:	call   0x10042f82
10039eb6:	mov    edi,DWORD PTR [esp+0x38]
10039eba:	add    esp,0x4
10039ebd:	test   ebp,ebp
10039ebf:	jne    0x10039eec
10039ec1:	mov    DWORD PTR [edi+0x18],0xf
10039ec8:	mov    DWORD PTR [edi+0x14],ebp
10039ecb:	push   0x1006cd08
10039ed0:	mov    BYTE PTR [edi+0x4],0x0
10039ed4:	call   0x10043100
10039ed9:	add    esp,0x4
10039edc:	push   eax
10039edd:	push   0x1006cd08
10039ee2:	mov    ecx,edi
10039ee4:	call   0x10001336
10039ee9:	push   ebp
10039eea:	jmp    0x10039efa
10039eec:	mov    ebx,DWORD PTR [esp+0x18]
10039ef0:	push   ebp
10039ef1:	call   0x10039b70
10039ef6:	add    esp,0x4
10039ef9:	push   ebp
10039efa:	call   0x10042f82
10039eff:	add    esp,0x4
10039f02:	push   esi
10039f03:	call   0x10042f82
10039f08:	mov    eax,edi
10039f0a:	add    esp,0x4
10039f0d:	mov    ecx,DWORD PTR [esp+0x24]
10039f11:	mov    DWORD PTR fs:0x0,ecx
10039f18:	pop    ecx
10039f19:	pop    edi
10039f1a:	pop    esi
10039f1b:	pop    ebp
10039f1c:	pop    ebx
10039f1d:	add    esp,0x1c
10039f20:	ret    
10039f21:	int3   
10039f22:	int3   
10039f23:	int3   
10039f24:	int3   
10039f25:	int3   
10039f26:	int3   
10039f27:	int3   
10039f28:	int3   
10039f29:	int3   
10039f2a:	int3   
10039f2b:	int3   
10039f2c:	int3   
10039f2d:	int3   
10039f2e:	int3   
10039f2f:	int3   
10039f30:	mov    ecx,DWORD PTR [eax]
10039f32:	push   ecx
10039f33:	call   DWORD PTR ds:0x100660ec
10039f39:	ret    
10039f3a:	int3   
10039f3b:	int3   
10039f3c:	int3   
10039f3d:	int3   
10039f3e:	int3   
10039f3f:	int3   
10039f40:	push   edi
10039f41:	push   0xffffffff
10039f43:	push   0x0
10039f45:	push   eax
10039f46:	mov    edi,ecx
10039f48:	call   0x1000123c
10039f4d:	test   esi,esi
10039f4f:	jne    0x10039f6a
10039f51:	mov    ecx,DWORD PTR ds:0x10080fa4
10039f57:	mov    DWORD PTR [edi+0x1c],ecx
10039f5a:	mov    edx,DWORD PTR ds:0x10080fa8
10039f60:	mov    DWORD PTR [edi+0x20],edx
10039f63:	mov    eax,ds:0x10080fac
10039f68:	jmp    0x10039f78
10039f6a:	mov    ecx,DWORD PTR [esi]
10039f6c:	mov    DWORD PTR [edi+0x1c],ecx
10039f6f:	mov    edx,DWORD PTR [esi+0x4]
10039f72:	mov    DWORD PTR [edi+0x20],edx
10039f75:	mov    eax,DWORD PTR [esi+0x8]
10039f78:	push   0x0
10039f7a:	mov    DWORD PTR [edi+0x24],eax
10039f7d:	mov    DWORD PTR [edi+0x30],0x1007f704
10039f84:	mov    DWORD PTR [edi+0x28],0x0
10039f8b:	mov    DWORD PTR [edi+0x2c],0x0
10039f92:	call   0x1003a090
10039f97:	test   eax,eax
10039f99:	mov    DWORD PTR [edi+0x2c],eax
10039f9c:	je     0x10039fa8
10039f9e:	push   0x2
10039fa0:	call   0x1003a090
10039fa5:	mov    DWORD PTR [edi+0x28],eax
10039fa8:	pop    edi
10039fa9:	ret    
10039faa:	int3   
10039fab:	int3   
10039fac:	int3   
10039fad:	int3   
10039fae:	int3   
10039faf:	int3   
10039fb0:	push   esi
10039fb1:	mov    esi,eax
10039fb3:	mov    eax,DWORD PTR [esi+0x28]
10039fb6:	test   eax,eax
10039fb8:	je     0x10039fc4
10039fba:	push   eax
10039fbb:	call   DWORD PTR ds:0x1007f4fc
10039fc1:	add    esp,0x4
10039fc4:	mov    eax,DWORD PTR [esi+0x2c]
10039fc7:	test   eax,eax
10039fc9:	je     0x10039fd5
10039fcb:	push   eax
10039fcc:	call   DWORD PTR ds:0x1007f4fc
10039fd2:	add    esp,0x4
10039fd5:	mov    esi,DWORD PTR [esi+0x30]
10039fd8:	cmp    esi,0x1007f704
10039fde:	je     0x1003a011
10039fe0:	test   esi,esi
10039fe2:	je     0x1003a011
10039fe4:	cmp    DWORD PTR [esi+0x18],0x10
10039fe8:	jb     0x10039ff6
10039fea:	mov    eax,DWORD PTR [esi+0x4]
10039fed:	push   eax
10039fee:	call   0x10042f82
10039ff3:	add    esp,0x4
10039ff6:	mov    DWORD PTR [esi+0x18],0xf
10039ffd:	mov    DWORD PTR [esi+0x14],0x0
1003a004:	push   esi
1003a005:	mov    BYTE PTR [esi+0x4],0x0
1003a009:	call   0x10042f82
1003a00e:	add    esp,0x4
1003a011:	pop    esi
1003a012:	ret    
1003a013:	int3   
1003a014:	int3   
1003a015:	int3   
1003a016:	int3   
1003a017:	int3   
1003a018:	int3   
1003a019:	int3   
1003a01a:	int3   
1003a01b:	int3   
1003a01c:	int3   
1003a01d:	int3   
1003a01e:	int3   
1003a01f:	int3   
1003a020:	push   0xffffffff
1003a022:	push   0x1005fea8
1003a027:	mov    eax,fs:0x0
1003a02d:	push   eax
1003a02e:	push   esi
1003a02f:	mov    eax,ds:0x1007e030
1003a034:	xor    eax,esp
1003a036:	push   eax
1003a037:	lea    eax,[esp+0x8]
1003a03b:	mov    fs:0x0,eax
1003a041:	mov    esi,DWORD PTR [esp+0x18]
1003a045:	mov    eax,esi
1003a047:	mov    DWORD PTR [esp+0x10],0x0
1003a04f:	call   0x10039fb0
1003a054:	cmp    DWORD PTR [esi+0x18],0x10
1003a058:	jb     0x1003a066
1003a05a:	mov    eax,DWORD PTR [esi+0x4]
1003a05d:	push   eax
1003a05e:	call   0x10042f82
1003a063:	add    esp,0x4
1003a066:	mov    DWORD PTR [esi+0x18],0xf
1003a06d:	mov    DWORD PTR [esi+0x14],0x0
1003a074:	mov    BYTE PTR [esi+0x4],0x0
1003a078:	mov    ecx,DWORD PTR [esp+0x8]
1003a07c:	mov    DWORD PTR fs:0x0,ecx
1003a083:	pop    ecx
1003a084:	pop    esi
1003a085:	add    esp,0xc
1003a088:	ret    0x4
1003a08b:	int3   
1003a08c:	int3   
1003a08d:	int3   
1003a08e:	int3   
1003a08f:	int3   
1003a090:	push   0xffffffff
1003a092:	push   0x100607d3
1003a097:	mov    eax,fs:0x0
1003a09d:	push   eax
1003a09e:	sub    esp,0x2c
1003a0a1:	mov    eax,ds:0x1007e030
1003a0a6:	xor    eax,esp
1003a0a8:	mov    DWORD PTR [esp+0x28],eax
1003a0ac:	push   ebx
1003a0ad:	push   ebp
1003a0ae:	push   esi
1003a0af:	mov    eax,ds:0x1007e030
1003a0b4:	xor    eax,esp
1003a0b6:	push   eax
1003a0b7:	lea    eax,[esp+0x3c]
1003a0bb:	mov    fs:0x0,eax
1003a0c1:	mov    ebp,DWORD PTR [edi+0x24]
1003a0c4:	xor    ebx,ebx
1003a0c6:	cmp    DWORD PTR [esp+0x4c],0x2
1003a0cb:	je     0x1003a0f4
1003a0cd:	cmp    DWORD PTR [edi+0x18],0x10
1003a0d1:	jb     0x1003a0d8
1003a0d3:	mov    edx,DWORD PTR [edi+0x4]
1003a0d6:	jmp    0x1003a0db
1003a0d8:	lea    edx,[edi+0x4]
1003a0db:	lea    eax,[esp+0x14]
1003a0df:	push   eax
1003a0e0:	push   ebp
1003a0e1:	lea    ecx,[esp+0x20]
1003a0e5:	call   0x10042550
1003a0ea:	add    esp,0x8
1003a0ed:	mov    ebp,eax
1003a0ef:	jmp    0x1003a18e
1003a0f4:	push   0x1007422c
1003a0f9:	mov    DWORD PTR [esp+0x38],0xf
1003a101:	mov    DWORD PTR [esp+0x34],ebx
1003a105:	mov    BYTE PTR [esp+0x24],bl
1003a109:	call   0x10043100
1003a10e:	add    esp,0x4
1003a111:	push   eax
1003a112:	push   0x1007422c
1003a117:	lea    ecx,[esp+0x24]
1003a11b:	call   0x10001336
1003a120:	push   0xffffffff
1003a122:	push   ebx
1003a123:	mov    eax,edi
1003a125:	lea    esi,[esp+0x24]
1003a129:	mov    DWORD PTR [esp+0x4c],ebx
1003a12d:	call   0x10004ce1
1003a132:	push   0x10074230
1003a137:	call   0x10043100
1003a13c:	add    esp,0x4
1003a13f:	push   eax
1003a140:	push   0x10074230
1003a145:	mov    eax,esi
1003a147:	call   0x10004d85
1003a14c:	mov    edx,DWORD PTR [esp+0x20]
1003a150:	mov    esi,0x10
1003a155:	cmp    DWORD PTR [esp+0x34],esi
1003a159:	jae    0x1003a15f
1003a15b:	lea    edx,[esp+0x20]
1003a15f:	lea    ecx,[esp+0x14]
1003a163:	push   ecx
1003a164:	push   ebp
1003a165:	lea    ecx,[esp+0x20]
1003a169:	call   0x10042550
1003a16e:	add    esp,0x8
1003a171:	mov    DWORD PTR [esp+0x44],0xffffffff
1003a179:	cmp    DWORD PTR [esp+0x34],esi
1003a17d:	mov    ebp,eax
1003a17f:	jb     0x1003a18e
1003a181:	mov    edx,DWORD PTR [esp+0x20]
1003a185:	push   edx
1003a186:	call   0x10042f82
1003a18b:	add    esp,0x4
1003a18e:	cmp    ebp,ebx
1003a190:	jne    0x1003a1e1
1003a192:	cmp    DWORD PTR [edi+0x30],0x1007f704
1003a199:	jne    0x1003a1e1
1003a19b:	push   0x1c
1003a19d:	call   0x1004358e
1003a1a2:	mov    esi,eax
1003a1a4:	add    esp,0x4
1003a1a7:	mov    DWORD PTR [esp+0x14],esi
1003a1ab:	cmp    esi,ebx
1003a1ad:	mov    DWORD PTR [esp+0x44],0x1
1003a1b5:	je     0x1003a1dc
1003a1b7:	mov    DWORD PTR [esi+0x14],ebx
1003a1ba:	mov    DWORD PTR [esi+0x18],0xf
1003a1c1:	mov    BYTE PTR [esi+0x4],bl
1003a1c4:	mov    ebx,DWORD PTR [esp+0x18]
1003a1c8:	push   ebx
1003a1c9:	call   0x10043100
1003a1ce:	add    esp,0x4
1003a1d1:	push   eax
1003a1d2:	push   ebx
1003a1d3:	mov    ecx,esi
1003a1d5:	call   0x10001336
1003a1da:	jmp    0x1003a1de
1003a1dc:	xor    esi,esi
1003a1de:	mov    DWORD PTR [edi+0x30],esi
1003a1e1:	mov    eax,ebp
1003a1e3:	mov    ecx,DWORD PTR [esp+0x3c]
1003a1e7:	mov    DWORD PTR fs:0x0,ecx
1003a1ee:	pop    ecx
1003a1ef:	pop    esi
1003a1f0:	pop    ebp
1003a1f1:	pop    ebx
1003a1f2:	mov    ecx,DWORD PTR [esp+0x28]
1003a1f6:	xor    ecx,esp
1003a1f8:	call   0x10042f87
1003a1fd:	add    esp,0x38
1003a200:	ret    0x4
1003a203:	int3   
1003a204:	int3   
1003a205:	int3   
1003a206:	int3   
1003a207:	int3   
1003a208:	int3   
1003a209:	int3   
1003a20a:	int3   
1003a20b:	int3   
1003a20c:	int3   
1003a20d:	int3   
1003a20e:	int3   
1003a20f:	int3   
1003a210:	sub    esp,0x11c
1003a216:	lea    eax,[esp+0x48]
1003a21a:	push   eax
1003a21b:	mov    eax,DWORD PTR [esp+0x128]
1003a222:	push   0x0
1003a224:	lea    ecx,[esp+0x10]
1003a228:	push   ecx
1003a229:	lea    edx,[esp+0x10]
1003a22d:	push   edx
1003a22e:	push   eax
1003a22f:	mov    eax,DWORD PTR [esp+0x134]
1003a236:	call   0x1003a2f0
1003a23b:	add    esp,0x11c
1003a241:	ret    0x8
1003a244:	int3   
1003a245:	int3   
1003a246:	int3   
1003a247:	int3   
1003a248:	int3   
1003a249:	int3   
1003a24a:	int3   
1003a24b:	int3   
1003a24c:	int3   
1003a24d:	int3   
1003a24e:	int3   
1003a24f:	int3   
1003a250:	push   ebp
1003a251:	mov    ebp,esp
1003a253:	and    esp,0xfffffff8
1003a256:	sub    esp,0x18
1003a259:	push   esi
1003a25a:	mov    esi,DWORD PTR [eax+0x2c]
1003a25d:	push   edi
1003a25e:	xor    edi,edi
1003a260:	cmp    esi,edi
1003a262:	jne    0x1003a26e
1003a264:	xor    eax,eax
1003a266:	pop    edi
1003a267:	pop    esi
1003a268:	mov    esp,ebp
1003a26a:	pop    ebp
1003a26b:	ret    0x4
1003a26e:	mov    ecx,DWORD PTR [eax+0x1c]
1003a271:	cmp    ecx,edi
1003a273:	mov    DWORD PTR [esp+0x8],edi
1003a277:	mov    DWORD PTR [esp+0xc],edi
1003a27b:	mov    DWORD PTR [esp+0x10],edi
1003a27f:	mov    DWORD PTR [esp+0x14],edi
1003a283:	mov    DWORD PTR [esp+0x18],edi
1003a287:	mov    DWORD PTR [esp+0x1c],edi
1003a28b:	jle    0x1003a299
1003a28d:	mov    DWORD PTR [esp+0x8],0x2
1003a295:	mov    DWORD PTR [esp+0x10],ecx
1003a299:	mov    eax,DWORD PTR [eax+0x20]
1003a29c:	cmp    eax,edi
1003a29e:	jle    0x1003a2a9
1003a2a0:	or     DWORD PTR [esp+0x8],0x10
1003a2a5:	mov    DWORD PTR [esp+0x1c],eax
1003a2a9:	mov    edx,DWORD PTR [ebx]
1003a2ab:	cmp    edx,edi
1003a2ad:	jne    0x1003a2b4
1003a2af:	mov    edx,0x1006cd08
1003a2b4:	mov    ecx,DWORD PTR [ebp+0x8]
1003a2b7:	mov    eax,DWORD PTR [ebx+0x4]
1003a2ba:	push   ecx
1003a2bb:	push   eax
1003a2bc:	lea    eax,[esp+0x10]
1003a2c0:	push   eax
1003a2c1:	push   esi
1003a2c2:	xor    ecx,ecx
1003a2c4:	call   0x1003d2c0
1003a2c9:	add    esp,0x10
1003a2cc:	cmp    eax,0xffffffff
1003a2cf:	je     0x1003a264
1003a2d1:	cmp    eax,edi
1003a2d3:	jl     0x1003a264
1003a2d5:	jne    0x1003a2dc
1003a2d7:	mov    eax,0x19
1003a2dc:	pop    edi
1003a2dd:	pop    esi
1003a2de:	mov    esp,ebp
1003a2e0:	pop    ebp
1003a2e1:	ret    0x4
1003a2e4:	int3   
1003a2e5:	int3   
1003a2e6:	int3   
1003a2e7:	int3   
1003a2e8:	int3   
1003a2e9:	int3   
1003a2ea:	int3   
1003a2eb:	int3   
1003a2ec:	int3   
1003a2ed:	int3   
1003a2ee:	int3   
1003a2ef:	int3   
1003a2f0:	push   ebx
1003a2f1:	mov    ebx,DWORD PTR [esp+0x8]
1003a2f5:	push   ebp
1003a2f6:	mov    ebp,DWORD PTR [esp+0x1c]
1003a2fa:	push   esi
1003a2fb:	push   edi
1003a2fc:	push   ebp
1003a2fd:	mov    esi,eax
1003a2ff:	call   0x1003a250
1003a304:	test   eax,eax
1003a306:	jne    0x1003a311
1003a308:	xor    al,al
1003a30a:	pop    edi
1003a30b:	pop    esi
1003a30c:	pop    ebp
1003a30d:	pop    ebx
1003a30e:	ret    0x14
1003a311:	mov    ebx,DWORD PTR [esp+0x20]
1003a315:	test   ebx,ebx
1003a317:	mov    eax,DWORD PTR [ebp+0x4]
1003a31a:	mov    ecx,DWORD PTR [esp+0x18]
1003a31e:	mov    DWORD PTR [ecx],eax
1003a320:	je     0x1003a382
1003a322:	cmp    DWORD PTR [esp+0x1c],0x0
1003a327:	je     0x1003a382
1003a329:	mov    edx,DWORD PTR [esi+0x2c]
1003a32c:	test   edx,edx
1003a32e:	jne    0x1003a335
1003a330:	or     eax,0xffffffff
1003a333:	jmp    0x1003a342
1003a335:	lea    esi,[esp+0x24]
1003a339:	call   0x10042c00
1003a33e:	mov    eax,DWORD PTR [esp+0x24]
1003a342:	cmp    eax,ebx
1003a344:	jl     0x1003a308
1003a346:	xor    edi,edi
1003a348:	test   ebx,ebx
1003a34a:	jle    0x1003a382
1003a34c:	lea    esi,[ebp+0xc]
1003a34f:	mov    edx,DWORD PTR [esp+0x14]
1003a353:	mov    ebx,DWORD PTR [edx]
1003a355:	mov    edx,DWORD PTR [esp+0x1c]
1003a359:	mov    edx,DWORD PTR [edx+edi*4]
1003a35c:	mov    ecx,DWORD PTR [esi-0x4]
1003a35f:	mov    eax,DWORD PTR [esi]
1003a361:	mov    ebp,DWORD PTR [edx]
1003a363:	sub    eax,ecx
1003a365:	push   ebp
1003a366:	push   eax
1003a367:	mov    eax,DWORD PTR [edx+0x4]
1003a36a:	add    ebx,ecx
1003a36c:	push   ebx
1003a36d:	call   eax
1003a36f:	add    esp,0xc
1003a372:	test   al,al
1003a374:	je     0x1003a308
1003a376:	add    edi,0x1
1003a379:	add    esi,0x8
1003a37c:	cmp    edi,DWORD PTR [esp+0x20]
1003a380:	jl     0x1003a34f
1003a382:	pop    edi
1003a383:	pop    esi
1003a384:	pop    ebp
1003a385:	mov    al,0x1
1003a387:	pop    ebx
1003a388:	ret    0x14
1003a38b:	int3   
1003a38c:	int3   
1003a38d:	int3   
1003a38e:	int3   
1003a38f:	int3   
1003a390:	xor    eax,eax
1003a392:	cmp    DWORD PTR [esp+0xc],eax
1003a396:	sete   al
1003a399:	ret    
1003a39a:	int3   
1003a39b:	int3   
1003a39c:	int3   
1003a39d:	int3   
1003a39e:	int3   
1003a39f:	int3   
1003a3a0:	push   esi
1003a3a1:	mov    esi,eax
1003a3a3:	mov    eax,DWORD PTR [ecx+0xc]
1003a3a6:	mov    eax,DWORD PTR [eax+edx*4]
1003a3a9:	mov    edx,DWORD PTR [ecx+0x5c]
1003a3ac:	add    eax,DWORD PTR [ecx+0x58]
1003a3af:	push   edi
1003a3b0:	mov    edi,DWORD PTR [esp+0xc]
1003a3b4:	sub    edx,edi
1003a3b6:	cmp    esi,edx
1003a3b8:	jle    0x1003a3bf
1003a3ba:	pop    edi
1003a3bb:	xor    eax,eax
1003a3bd:	pop    esi
1003a3be:	ret    
1003a3bf:	test   BYTE PTR [esp+0x10],0x1
1003a3c4:	push   ebx
1003a3c5:	je     0x1003a3f4
1003a3c7:	test   esi,esi
1003a3c9:	jle    0x1003a3eb
1003a3cb:	mov    ecx,DWORD PTR [ecx+0x24]
1003a3ce:	mov    edi,edi
1003a3d0:	movzx  edx,BYTE PTR [edi]
1003a3d3:	movzx  ebx,BYTE PTR [eax]
1003a3d6:	mov    dl,BYTE PTR [edx+ecx*1]
1003a3d9:	sub    esi,0x1
1003a3dc:	add    edi,0x1
1003a3df:	add    eax,0x1
1003a3e2:	cmp    BYTE PTR [ebx+ecx*1],dl
1003a3e5:	jne    0x1003a416
1003a3e7:	test   esi,esi
1003a3e9:	jg     0x1003a3d0
1003a3eb:	pop    ebx
1003a3ec:	pop    edi
1003a3ed:	mov    eax,0x1
1003a3f2:	pop    esi
1003a3f3:	ret    
1003a3f4:	test   esi,esi
1003a3f6:	jle    0x1003a3eb
1003a3f8:	mov    cl,BYTE PTR [eax]
1003a3fa:	mov    dl,BYTE PTR [edi]
1003a3fc:	sub    esi,0x1
1003a3ff:	add    edi,0x1
1003a402:	add    eax,0x1
1003a405:	cmp    cl,dl
1003a407:	jne    0x1003a416
1003a409:	test   esi,esi
1003a40b:	jg     0x1003a3f8
1003a40d:	pop    ebx
1003a40e:	pop    edi
1003a40f:	mov    eax,0x1
1003a414:	pop    esi
1003a415:	ret    
1003a416:	pop    ebx
1003a417:	pop    edi
1003a418:	xor    eax,eax
1003a41a:	pop    esi
1003a41b:	ret    
1003a41c:	int3   
1003a41d:	int3   
1003a41e:	int3   
1003a41f:	int3   
1003a420:	sub    esp,0xe8
1003a426:	push   ebx
1003a427:	push   ebp
1003a428:	push   esi
1003a429:	push   edi
1003a42a:	mov    edi,DWORD PTR [esp+0x10c]
1003a431:	mov    eax,DWORD PTR [edi]
1003a433:	cmp    eax,DWORD PTR [edi+0x4]
1003a436:	jae    0x1003c386
1003a43c:	mov    ebx,DWORD PTR [esp+0x100]
1003a443:	mov    ebp,DWORD PTR [esp+0xfc]
1003a44a:	mov    ecx,DWORD PTR [esp+0x11c]
1003a451:	add    DWORD PTR [edi],0x1
1003a454:	cmp    ecx,DWORD PTR [edi+0x8]
1003a457:	jae    0x1003c399
1003a45d:	test   BYTE PTR [esp+0x118],0x2
1003a465:	mov    edx,DWORD PTR [esp+0x110]
1003a46c:	mov    DWORD PTR [esp+0x28],edx
1003a470:	je     0x1003a48c
1003a472:	mov    eax,DWORD PTR [esp+0x114]
1003a479:	lea    ecx,[esp+0x48]
1003a47d:	mov    DWORD PTR [esp+0x4c],ebp
1003a481:	mov    DWORD PTR [esp+0x48],eax
1003a485:	mov    DWORD PTR [esp+0x114],ecx
1003a48c:	movzx  eax,BYTE PTR [ebx]
1003a48f:	xor    edx,edx
1003a491:	cmp    DWORD PTR [edi+0x48],edx
1003a494:	mov    DWORD PTR [esp+0x1c],edx
1003a498:	mov    DWORD PTR [esp+0x20],edx
1003a49c:	mov    DWORD PTR [esp+0x24],eax
1003a4a0:	je     0x1003a4bb
1003a4a2:	cmp    ebp,DWORD PTR [edi+0x5c]
1003a4a5:	jb     0x1003a4bb
1003a4a7:	mov    esi,DWORD PTR [esp+0x104]
1003a4ae:	cmp    ebp,esi
1003a4b0:	jbe    0x1003a4c2
1003a4b2:	mov    DWORD PTR [edi+0x4c],0x1
1003a4b9:	jmp    0x1003a4c2
1003a4bb:	mov    esi,DWORD PTR [esp+0x104]
1003a4c2:	cmp    eax,0x6f
1003a4c5:	ja     0x1003cf21
1003a4cb:	movzx  eax,BYTE PTR [eax+0x1003d04c]
1003a4d2:	jmp    DWORD PTR [eax*4+0x1003cf34]
1003a4d9:	mov    cl,BYTE PTR [ebx+0x3]
1003a4dc:	cmp    cl,0x65
1003a4df:	lea    eax,[ebx+0x3]
1003a4e2:	jne    0x1003a50c
1003a4e4:	mov    eax,DWORD PTR [edi+0x7c]
1003a4e7:	xor    ecx,ecx
1003a4e9:	test   eax,eax
1003a4eb:	mov    ch,BYTE PTR [ebx+0x4]
1003a4ee:	mov    cl,BYTE PTR [ebx+0x5]
1003a4f1:	je     0x1003a52d
1003a4f3:	cmp    ecx,0xffff
1003a4f9:	je     0x1003a500
1003a4fb:	cmp    ecx,DWORD PTR [eax+0x4]
1003a4fe:	jne    0x1003a52d
1003a500:	mov    ecx,0x1
1003a505:	mov    eax,0x3
1003a50a:	jmp    0x1003a537
1003a50c:	cmp    cl,0x64
1003a50f:	jne    0x1003a552
1003a511:	xor    eax,eax
1003a513:	mov    ah,BYTE PTR [ebx+0x4]
1003a516:	mov    al,BYTE PTR [ebx+0x5]
1003a519:	add    eax,eax
1003a51b:	cmp    eax,DWORD PTR [esp+0x108]
1003a522:	jge    0x1003a52d
1003a524:	mov    ecx,DWORD PTR [edi+0xc]
1003a527:	cmp    DWORD PTR [ecx+eax*4],0x0
1003a52b:	jge    0x1003a500
1003a52d:	xor    ecx,ecx
1003a52f:	xor    eax,eax
1003a531:	mov    ah,BYTE PTR [ebx+0x1]
1003a534:	mov    al,BYTE PTR [ebx+0x2]
1003a537:	add    ebx,eax
1003a539:	test   ecx,ecx
1003a53b:	jne    0x1003c116
1003a541:	cmp    BYTE PTR [ebx],0x54
1003a544:	je     0x1003c116
1003a54a:	add    ebx,0x3
1003a54d:	jmp    0x1003a48c
1003a552:	cmp    cl,0x66
1003a555:	jne    0x1003a563
1003a557:	xor    edx,edx
1003a559:	mov    dh,BYTE PTR [ebx+0x1]
1003a55c:	mov    dl,BYTE PTR [ebx+0x2]
1003a55f:	add    ebx,edx
1003a561:	jmp    0x1003a541
1003a563:	mov    ecx,DWORD PTR [esp+0x11c]
1003a56a:	mov    edx,DWORD PTR [esp+0x110]
1003a571:	add    ecx,0x1
1003a574:	push   ecx
1003a575:	mov    ecx,DWORD PTR [esp+0x10c]
1003a57c:	push   0x1
1003a57e:	push   0x0
1003a580:	push   edx
1003a581:	push   edi
1003a582:	push   ecx
1003a583:	push   esi
1003a584:	push   eax
1003a585:	push   ebp
1003a586:	call   0x1003a420
1003a58b:	add    esp,0x24
1003a58e:	cmp    eax,0x1
1003a591:	je     0x1003c0f4
1003a597:	test   eax,eax
1003a599:	je     0x1003a5a6
1003a59b:	cmp    eax,0xfffffc1c
1003a5a0:	jne    0x1003cf26
1003a5a6:	xor    edx,edx
1003a5a8:	mov    dh,BYTE PTR [ebx+0x1]
1003a5ab:	mov    dl,BYTE PTR [ebx+0x2]
1003a5ae:	add    ebx,edx
1003a5b0:	jmp    0x1003a541
1003a5b2:	mov    ebx,DWORD PTR [edi+0x7c]
1003a5b5:	test   ebx,ebx
1003a5b7:	je     0x1003c65a
1003a5bd:	cmp    DWORD PTR [ebx+0x4],0x0
1003a5c1:	jne    0x1003c65a
1003a5c7:	mov    eax,DWORD PTR [ebx]
1003a5c9:	mov    DWORD PTR [edi+0x7c],eax
1003a5cc:	mov    ecx,DWORD PTR [ebx+0x14]
1003a5cf:	mov    edx,DWORD PTR [ebx+0x10]
1003a5d2:	mov    eax,DWORD PTR [edi+0xc]
1003a5d5:	add    ecx,ecx
1003a5d7:	add    ecx,ecx
1003a5d9:	push   ecx
1003a5da:	push   edx
1003a5db:	push   eax
1003a5dc:	call   0x100457b0
1003a5e1:	mov    ecx,DWORD PTR [ebx+0xc]
1003a5e4:	mov    edx,DWORD PTR [esp+0x34]
1003a5e8:	mov    ebx,DWORD PTR [ebx+0x8]
1003a5eb:	add    esp,0xc
1003a5ee:	mov    DWORD PTR [esp+0x104],ecx
1003a5f5:	mov    DWORD PTR [esp+0x110],edx
1003a5fc:	jmp    0x1003a48c
1003a601:	movzx  eax,BYTE PTR [ebx+0x1]
1003a605:	mov    DWORD PTR [esp+0x110],eax
1003a60c:	add    ebx,0x2
1003a60f:	jmp    0x1003a48c
1003a614:	mov    esi,DWORD PTR [esp+0x11c]
1003a61b:	add    esi,0x1
1003a61e:	mov    ecx,DWORD PTR [esp+0x110]
1003a625:	mov    edx,DWORD PTR [esp+0x108]
1003a62c:	mov    eax,DWORD PTR [esp+0x104]
1003a633:	push   esi
1003a634:	push   0x0
1003a636:	push   0x0
1003a638:	push   ecx
1003a639:	push   edi
1003a63a:	push   edx
1003a63b:	push   eax
1003a63c:	lea    ecx,[ebx+0x3]
1003a63f:	push   ecx
1003a640:	push   ebp
1003a641:	call   0x1003a420
1003a646:	add    esp,0x24
1003a649:	cmp    eax,0x1
1003a64c:	je     0x1003a66c
1003a64e:	test   eax,eax
1003a650:	je     0x1003a65d
1003a652:	cmp    eax,0xfffffc1c
1003a657:	jne    0x1003cf26
1003a65d:	xor    edx,edx
1003a65f:	mov    dh,BYTE PTR [ebx+0x1]
1003a662:	mov    dl,BYTE PTR [ebx+0x2]
1003a665:	add    ebx,edx
1003a667:	cmp    BYTE PTR [ebx],0x54
1003a66a:	je     0x1003a61e
1003a66c:	cmp    BYTE PTR [ebx],0x55
1003a66f:	je     0x1003c5ff
1003a675:	test   BYTE PTR [esp+0x118],0x1
1003a67d:	jne    0x1003c674
1003a683:	xor    eax,eax
1003a685:	mov    ah,BYTE PTR [ebx+0x1]
1003a688:	mov    al,BYTE PTR [ebx+0x2]
1003a68b:	add    ebx,eax
1003a68d:	cmp    BYTE PTR [ebx],0x54
1003a690:	je     0x1003a683
1003a692:	mov    ecx,DWORD PTR [edi+0x68]
1003a695:	add    ebx,0x3
1003a698:	mov    DWORD PTR [esp+0x108],ecx
1003a69f:	jmp    0x1003a48c
1003a6a4:	mov    esi,DWORD PTR [esp+0x11c]
1003a6ab:	add    esi,0x1
1003a6ae:	mov    edx,DWORD PTR [esp+0x110]
1003a6b5:	mov    eax,DWORD PTR [esp+0x108]
1003a6bc:	mov    ecx,DWORD PTR [esp+0x104]
1003a6c3:	push   esi
1003a6c4:	push   0x0
1003a6c6:	push   0x0
1003a6c8:	push   edx
1003a6c9:	push   edi
1003a6ca:	push   eax
1003a6cb:	push   ecx
1003a6cc:	lea    edx,[ebx+0x3]
1003a6cf:	push   edx
1003a6d0:	push   ebp
1003a6d1:	call   0x1003a420
1003a6d6:	add    esp,0x24
1003a6d9:	cmp    eax,0x1
1003a6dc:	je     0x1003c5ff
1003a6e2:	test   eax,eax
1003a6e4:	je     0x1003a6f1
1003a6e6:	cmp    eax,0xfffffc1c
1003a6eb:	jne    0x1003cf26
1003a6f1:	xor    eax,eax
1003a6f3:	mov    ah,BYTE PTR [ebx+0x1]
1003a6f6:	mov    al,BYTE PTR [ebx+0x2]
1003a6f9:	add    ebx,eax
1003a6fb:	cmp    BYTE PTR [ebx],0x54
1003a6fe:	je     0x1003a6ae
1003a700:	test   BYTE PTR [esp+0x118],0x1
1003a708:	jne    0x1003c674
1003a70e:	add    ebx,0x3
1003a711:	jmp    0x1003a48c
1003a716:	xor    ecx,ecx
1003a718:	mov    ch,BYTE PTR [ebx+0x1]
1003a71b:	mov    cl,BYTE PTR [ebx+0x2]
1003a71e:	sub    ebp,ecx
1003a720:	cmp    ebp,DWORD PTR [edi+0x58]
1003a723:	jb     0x1003c5ff
1003a729:	add    ebx,0x3
1003a72c:	jmp    0x1003a48c
1003a731:	mov    ecx,DWORD PTR ds:0x10080d50
1003a737:	test   ecx,ecx
1003a739:	je     0x1003a7c5
1003a73f:	movzx  edx,BYTE PTR [ebx+0x1]
1003a743:	mov    eax,DWORD PTR [edi+0xc]
1003a746:	mov    DWORD PTR [esp+0x58],eax
1003a74a:	mov    eax,DWORD PTR [edi+0x58]
1003a74d:	mov    DWORD PTR [esp+0x54],edx
1003a751:	mov    edx,DWORD PTR [edi+0x5c]
1003a754:	sub    edx,eax
1003a756:	mov    DWORD PTR [esp+0x60],edx
1003a75a:	sub    esi,eax
1003a75c:	mov    DWORD PTR [esp+0x5c],eax
1003a760:	mov    edx,ebp
1003a762:	sub    edx,eax
1003a764:	xor    eax,eax
1003a766:	mov    ah,BYTE PTR [ebx+0x2]
1003a769:	mov    DWORD PTR [esp+0x68],edx
1003a76d:	xor    edx,edx
1003a76f:	mov    dh,BYTE PTR [ebx+0x4]
1003a772:	mov    DWORD PTR [esp+0x50],0x1
1003a77a:	mov    DWORD PTR [esp+0x64],esi
1003a77e:	mov    al,BYTE PTR [ebx+0x3]
1003a781:	mov    dl,BYTE PTR [ebx+0x5]
1003a784:	mov    DWORD PTR [esp+0x78],eax
1003a788:	mov    eax,DWORD PTR [esp+0x108]
1003a78f:	mov    DWORD PTR [esp+0x7c],edx
1003a793:	cdq    
1003a794:	sub    eax,edx
1003a796:	mov    edx,DWORD PTR [edi+0x80]
1003a79c:	sar    eax,1
1003a79e:	mov    DWORD PTR [esp+0x6c],eax
1003a7a2:	mov    eax,DWORD PTR [edi+0x6c]
1003a7a5:	mov    DWORD PTR [esp+0x70],eax
1003a7a9:	lea    eax,[esp+0x50]
1003a7ad:	push   eax
1003a7ae:	mov    DWORD PTR [esp+0x78],edx
1003a7b2:	call   ecx
1003a7b4:	add    esp,0x4
1003a7b7:	test   eax,eax
1003a7b9:	jg     0x1003c5ff
1003a7bf:	jl     0x1003cf26
1003a7c5:	add    ebx,0x6
1003a7c8:	jmp    0x1003a48c
1003a7cd:	mov    esi,DWORD PTR [esp+0x11c]
1003a7d4:	mov    DWORD PTR [esp+0x1c],ebx
1003a7d8:	mov    DWORD PTR [esp+0x24],ebp
1003a7dc:	add    esi,0x1
1003a7df:	mov    ecx,DWORD PTR [esp+0x114]
1003a7e6:	mov    edx,DWORD PTR [esp+0x110]
1003a7ed:	mov    eax,DWORD PTR [esp+0x108]
1003a7f4:	push   esi
1003a7f5:	push   0x0
1003a7f7:	push   ecx
1003a7f8:	mov    ecx,DWORD PTR [esp+0x110]
1003a7ff:	push   edx
1003a800:	push   edi
1003a801:	push   eax
1003a802:	push   ecx
1003a803:	lea    edx,[ebx+0x3]
1003a806:	push   edx
1003a807:	push   ebp
1003a808:	call   0x1003a420
1003a80d:	add    esp,0x24
1003a810:	cmp    eax,0x1
1003a813:	je     0x1003a833
1003a815:	test   eax,eax
1003a817:	je     0x1003a824
1003a819:	cmp    eax,0xfffffc1c
1003a81e:	jne    0x1003cf26
1003a824:	xor    eax,eax
1003a826:	mov    ah,BYTE PTR [ebx+0x1]
1003a829:	mov    al,BYTE PTR [ebx+0x2]
1003a82c:	add    ebx,eax
1003a82e:	cmp    BYTE PTR [ebx],0x54
1003a831:	je     0x1003a7df
1003a833:	mov    al,BYTE PTR [ebx]
1003a835:	cmp    al,0x5d
1003a837:	je     0x1003a841
1003a839:	cmp    al,0x54
1003a83b:	jne    0x1003c5ff
1003a841:	xor    ecx,ecx
1003a843:	mov    ch,BYTE PTR [ebx+0x1]
1003a846:	mov    cl,BYTE PTR [ebx+0x2]
1003a849:	add    ebx,ecx
1003a84b:	cmp    BYTE PTR [ebx],0x54
1003a84e:	je     0x1003a841
1003a850:	cmp    BYTE PTR [ebx],0x55
1003a853:	mov    ecx,DWORD PTR [edi+0x68]
1003a856:	mov    ebp,DWORD PTR [edi+0x64]
1003a859:	mov    DWORD PTR [esp+0x108],ecx
1003a860:	je     0x1003a86c
1003a862:	cmp    ebp,DWORD PTR [esp+0x24]
1003a866:	jne    0x1003c231
1003a86c:	add    ebx,0x3
1003a86f:	jmp    0x1003a48c
1003a874:	xor    edx,edx
1003a876:	mov    dh,BYTE PTR [ebx+0x1]
1003a879:	mov    dl,BYTE PTR [ebx+0x2]
1003a87c:	add    ebx,edx
1003a87e:	cmp    BYTE PTR [ebx],0x54
1003a881:	je     0x1003a874
1003a883:	jmp    0x1003a48c
1003a888:	mov    eax,DWORD PTR [esp+0x11c]
1003a88f:	mov    ecx,DWORD PTR [esp+0x114]
1003a896:	mov    edx,DWORD PTR [esp+0x110]
1003a89d:	add    eax,0x1
1003a8a0:	push   eax
1003a8a1:	mov    eax,DWORD PTR [esp+0x10c]
1003a8a8:	push   0x0
1003a8aa:	push   ecx
1003a8ab:	push   edx
1003a8ac:	push   edi
1003a8ad:	push   eax
1003a8ae:	push   esi
1003a8af:	add    ebx,0x1
1003a8b2:	push   ebx
1003a8b3:	push   ebp
1003a8b4:	call   0x1003a420
1003a8b9:	add    esp,0x24
1003a8bc:	test   eax,eax
1003a8be:	jne    0x1003cf26
1003a8c4:	xor    ecx,ecx
1003a8c6:	mov    ch,BYTE PTR [ebx+0x1]
1003a8c9:	mov    cl,BYTE PTR [ebx+0x2]
1003a8cc:	add    ebx,ecx
1003a8ce:	cmp    BYTE PTR [ebx],0x54
1003a8d1:	je     0x1003a8c4
1003a8d3:	add    ebx,0x3
1003a8d6:	jmp    0x1003a48c
1003a8db:	add    ebx,0x1
1003a8de:	mov    eax,ebx
1003a8e0:	xor    edx,edx
1003a8e2:	mov    dh,BYTE PTR [eax+0x1]
1003a8e5:	mov    dl,BYTE PTR [eax+0x2]
1003a8e8:	add    eax,edx
1003a8ea:	cmp    BYTE PTR [eax],0x54
1003a8ed:	je     0x1003a8e0
1003a8ef:	mov    ecx,DWORD PTR [esp+0x11c]
1003a8f6:	mov    edx,DWORD PTR [esp+0x114]
1003a8fd:	add    ecx,0x1
1003a900:	push   ecx
1003a901:	mov    ecx,DWORD PTR [esp+0x114]
1003a908:	push   0x0
1003a90a:	push   edx
1003a90b:	mov    edx,DWORD PTR [esp+0x114]
1003a912:	push   ecx
1003a913:	push   edi
1003a914:	push   edx
1003a915:	push   esi
1003a916:	add    eax,0x3
1003a919:	push   eax
1003a91a:	push   ebp
1003a91b:	call   0x1003a420
1003a920:	add    esp,0x24
1003a923:	test   eax,eax
1003a925:	jne    0x1003cf26
1003a92b:	jmp    0x1003a48c
1003a930:	add    ebx,0x1
1003a933:	xor    eax,eax
1003a935:	mov    ah,BYTE PTR [ebx+0x1]
1003a938:	mov    al,BYTE PTR [ebx+0x2]
1003a93b:	add    ebx,eax
1003a93d:	cmp    BYTE PTR [ebx],0x54
1003a940:	je     0x1003a933
1003a942:	add    ebx,0x3
1003a945:	jmp    0x1003a48c
1003a94a:	xor    edx,edx
1003a94c:	mov    dh,BYTE PTR [ebx+0x1]
1003a94f:	mov    ecx,ebx
1003a951:	mov    dl,BYTE PTR [ebx+0x2]
1003a954:	sub    ecx,edx
1003a956:	mov    al,BYTE PTR [ecx]
1003a958:	cmp    al,0x61
1003a95a:	mov    DWORD PTR [esp+0x1c],ecx
1003a95e:	jb     0x1003a975
1003a960:	mov    esi,DWORD PTR [esp+0x114]
1003a967:	mov    edx,DWORD PTR [esi+0x4]
1003a96a:	mov    esi,DWORD PTR [esi]
1003a96c:	mov    DWORD PTR [esp+0x114],esi
1003a973:	jmp    0x1003a977
1003a975:	xor    edx,edx
1003a977:	cmp    al,0x58
1003a979:	je     0x1003c862
1003a97f:	cmp    al,0x59
1003a981:	je     0x1003c862
1003a987:	cmp    al,0x5a
1003a989:	je     0x1003c862
1003a98f:	cmp    al,0x5b
1003a991:	je     0x1003c862
1003a997:	cmp    al,0x5d
1003a999:	je     0x1003c862
1003a99f:	cmp    al,0x5f
1003a9a1:	je     0x1003a9ab
1003a9a3:	cmp    al,0x62
1003a9a5:	jne    0x1003aa46
1003a9ab:	xor    eax,eax
1003a9ad:	mov    ah,BYTE PTR [ecx+0x3]
1003a9b0:	mov    al,BYTE PTR [ecx+0x4]
1003a9b3:	mov    ecx,eax
1003a9b5:	lea    eax,[ecx+ecx*1]
1003a9b8:	cmp    eax,DWORD PTR [edi+0x14]
1003a9bb:	mov    DWORD PTR [esp+0x20],ecx
1003a9bf:	mov    DWORD PTR [edi+0x6c],ecx
1003a9c2:	jl     0x1003a9cd
1003a9c4:	mov    DWORD PTR [edi+0x2c],0x1
1003a9cb:	jmp    0x1003aa00
1003a9cd:	mov    esi,DWORD PTR [edi+0x10]
1003a9d0:	mov    ecx,DWORD PTR [edi+0xc]
1003a9d3:	sub    esi,DWORD PTR [esp+0x20]
1003a9d7:	mov    esi,DWORD PTR [ecx+esi*4]
1003a9da:	mov    DWORD PTR [ecx+eax*4],esi
1003a9dd:	mov    esi,DWORD PTR [edi+0xc]
1003a9e0:	mov    ecx,ebp
1003a9e2:	sub    ecx,DWORD PTR [edi+0x58]
1003a9e5:	cmp    DWORD PTR [esp+0x108],eax
1003a9ec:	mov    DWORD PTR [esi+eax*4+0x4],ecx
1003a9f0:	mov    ecx,DWORD PTR [esp+0x20]
1003a9f4:	jg     0x1003aa00
1003a9f6:	add    eax,0x2
1003a9f9:	mov    DWORD PTR [esp+0x108],eax
1003aa00:	mov    esi,DWORD PTR [edi+0x7c]
1003aa03:	test   esi,esi
1003aa05:	je     0x1003aa46
1003aa07:	cmp    DWORD PTR [esi+0x4],ecx
1003aa0a:	jne    0x1003aa46
1003aa0c:	mov    edx,DWORD PTR [esi]
1003aa0e:	mov    DWORD PTR [edi+0x7c],edx
1003aa11:	mov    ecx,DWORD PTR [esi+0x14]
1003aa14:	mov    eax,DWORD PTR [esi+0xc]
1003aa17:	mov    edx,DWORD PTR [esi+0x10]
1003aa1a:	add    ecx,ecx
1003aa1c:	add    ecx,ecx
1003aa1e:	push   ecx
1003aa1f:	mov    DWORD PTR [esp+0x108],eax
1003aa26:	mov    eax,DWORD PTR [edi+0xc]
1003aa29:	push   edx
1003aa2a:	push   eax
1003aa2b:	call   0x10045270
1003aa30:	mov    ecx,DWORD PTR [esp+0x34]
1003aa34:	mov    ebx,DWORD PTR [esi+0x8]
1003aa37:	add    esp,0xc
1003aa3a:	mov    DWORD PTR [esp+0x110],ecx
1003aa41:	jmp    0x1003a48c
1003aa46:	cmp    BYTE PTR [ebx],0x55
1003aa49:	mov    esi,DWORD PTR [esp+0x28]
1003aa4d:	mov    DWORD PTR [esp+0x110],esi
1003aa54:	je     0x1003aa5e
1003aa56:	cmp    ebp,edx
1003aa58:	jne    0x1003c2c5
1003aa5e:	add    ebx,0x3
1003aa61:	jmp    0x1003a48c
1003aa66:	cmp    DWORD PTR [edi+0x30],0x0
1003aa6a:	je     0x1003aa75
1003aa6c:	cmp    ebp,DWORD PTR [edi+0x58]
1003aa6f:	je     0x1003c5ff
1003aa75:	test   BYTE PTR [esp+0x110],0x2
1003aa7d:	je     0x1003aaf6
1003aa7f:	mov    eax,DWORD PTR [edi+0x58]
1003aa82:	cmp    ebp,eax
1003aa84:	je     0x1003aaee
1003aa86:	cmp    ebp,DWORD PTR [edi+0x5c]
1003aa89:	je     0x1003c5ff
1003aa8f:	mov    ecx,DWORD PTR [edi+0x18]
1003aa92:	test   ecx,ecx
1003aa94:	je     0x1003aac0
1003aa96:	cmp    ebp,eax
1003aa98:	jbe    0x1003c5ff
1003aa9e:	push   0x0
1003aaa0:	push   ecx
1003aaa1:	lea    edx,[edi+0x1c]
1003aaa4:	mov    esi,eax
1003aaa6:	mov    ecx,ebp
1003aaa8:	call   0x10042d50
1003aaad:	add    esp,0x8
1003aab0:	test   eax,eax
1003aab2:	je     0x1003c5ff
1003aab8:	add    ebx,0x1
1003aabb:	jmp    0x1003a48c
1003aac0:	mov    ecx,DWORD PTR [edi+0x1c]
1003aac3:	lea    edx,[ecx+eax*1]
1003aac6:	cmp    ebp,edx
1003aac8:	jb     0x1003c5ff
1003aace:	mov    esi,ebp
1003aad0:	sub    esi,ecx
1003aad2:	mov    al,BYTE PTR [esi]
1003aad4:	cmp    al,BYTE PTR [edi+0x20]
1003aad7:	jne    0x1003c5ff
1003aadd:	cmp    ecx,0x1
1003aae0:	je     0x1003aaee
1003aae2:	mov    cl,BYTE PTR [esi+0x1]
1003aae5:	cmp    cl,BYTE PTR [edi+0x21]
1003aae8:	jne    0x1003c5ff
1003aaee:	add    ebx,0x1
1003aaf1:	jmp    0x1003a48c
1003aaf6:	cmp    ebp,DWORD PTR [edi+0x58]
1003aaf9:	jne    0x1003c5ff
1003aaff:	add    ebx,0x1
1003ab02:	jmp    0x1003a48c
1003ab07:	mov    edx,DWORD PTR [edi+0x70]
1003ab0a:	add    edx,DWORD PTR [edi+0x58]
1003ab0d:	cmp    ebp,edx
1003ab0f:	jne    0x1003c5ff
1003ab15:	add    ebx,0x1
1003ab18:	jmp    0x1003a48c
1003ab1d:	mov    DWORD PTR [esp+0x104],ebp
1003ab24:	add    ebx,0x1
1003ab27:	jmp    0x1003a48c
1003ab2c:	test   BYTE PTR [esp+0x110],0x2
1003ab34:	je     0x1003abaa
1003ab36:	mov    eax,DWORD PTR [edi+0x5c]
1003ab39:	cmp    ebp,eax
1003ab3b:	jae    0x1003ab98
1003ab3d:	mov    ecx,DWORD PTR [edi+0x18]
1003ab40:	test   ecx,ecx
1003ab42:	je     0x1003ab72
1003ab44:	mov    edi,DWORD PTR [esp+0x10c]
1003ab4b:	push   ecx
1003ab4c:	add    edi,0x1c
1003ab4f:	xor    edx,edx
1003ab51:	mov    ecx,ebp
1003ab53:	call   0x10042c90
1003ab58:	add    esp,0x4
1003ab5b:	test   eax,eax
1003ab5d:	je     0x1003c5ff
1003ab63:	mov    edi,DWORD PTR [esp+0x10c]
1003ab6a:	add    ebx,0x1
1003ab6d:	jmp    0x1003a48c
1003ab72:	mov    ecx,DWORD PTR [edi+0x1c]
1003ab75:	sub    eax,ecx
1003ab77:	cmp    ebp,eax
1003ab79:	ja     0x1003c5ff
1003ab7f:	mov    al,BYTE PTR [ebp+0x0]
1003ab82:	cmp    al,BYTE PTR [edi+0x20]
1003ab85:	jne    0x1003c5ff
1003ab8b:	cmp    ecx,0x1
1003ab8e:	je     0x1003aba2
1003ab90:	mov    cl,BYTE PTR [ebp+0x1]
1003ab93:	cmp    cl,BYTE PTR [edi+0x21]
1003ab96:	jmp    0x1003ab9c
1003ab98:	cmp    DWORD PTR [edi+0x34],0x0
1003ab9c:	jne    0x1003c5ff
1003aba2:	add    ebx,0x1
1003aba5:	jmp    0x1003a48c
1003abaa:	cmp    DWORD PTR [edi+0x34],0x0
1003abae:	jne    0x1003c5ff
1003abb4:	cmp    DWORD PTR [edi+0x40],0x0
1003abb8:	jne    0x1003ac40
1003abbe:	mov    eax,DWORD PTR [edi+0x5c]
1003abc1:	cmp    ebp,eax
1003abc3:	je     0x1003ac38
1003abc5:	mov    ecx,DWORD PTR [edi+0x18]
1003abc8:	test   ecx,ecx
1003abca:	je     0x1003abfe
1003abcc:	cmp    ebp,eax
1003abce:	jae    0x1003c5ff
1003abd4:	mov    esi,DWORD PTR [esp+0x10c]
1003abdb:	add    esi,0x1c
1003abde:	push   ecx
1003abdf:	xor    edx,edx
1003abe1:	mov    edi,esi
1003abe3:	mov    ecx,ebp
1003abe5:	call   0x10042c90
1003abea:	add    esp,0x4
1003abed:	test   eax,eax
1003abef:	je     0x1003c5ff
1003abf5:	mov    edi,DWORD PTR [esp+0x10c]
1003abfc:	jmp    0x1003ac2b
1003abfe:	mov    ecx,DWORD PTR [edi+0x1c]
1003ac01:	lea    esi,[edi+0x1c]
1003ac04:	sub    eax,ecx
1003ac06:	cmp    ebp,eax
1003ac08:	ja     0x1003c5ff
1003ac0e:	mov    dl,BYTE PTR [ebp+0x0]
1003ac11:	cmp    dl,BYTE PTR [edi+0x20]
1003ac14:	jne    0x1003c5ff
1003ac1a:	cmp    ecx,0x1
1003ac1d:	je     0x1003ac2b
1003ac1f:	mov    al,BYTE PTR [ebp+0x1]
1003ac22:	cmp    al,BYTE PTR [edi+0x21]
1003ac25:	jne    0x1003c5ff
1003ac2b:	mov    ecx,DWORD PTR [edi+0x5c]
1003ac2e:	sub    ecx,DWORD PTR [esi]
1003ac30:	cmp    ebp,ecx
1003ac32:	jne    0x1003c5ff
1003ac38:	add    ebx,0x1
1003ac3b:	jmp    0x1003a48c
1003ac40:	cmp    ebp,DWORD PTR [edi+0x5c]
1003ac43:	jb     0x1003c5ff
1003ac49:	add    ebx,0x1
1003ac4c:	jmp    0x1003a48c
1003ac51:	cmp    ebp,DWORD PTR [edi+0x58]
1003ac54:	je     0x1003ac6a
1003ac56:	movzx  edx,BYTE PTR [ebp-0x1]
1003ac5a:	mov    eax,DWORD PTR [edi+0x28]
1003ac5d:	test   BYTE PTR [edx+eax*1],0x10
1003ac61:	je     0x1003ac6a
1003ac63:	mov    esi,0x1
1003ac68:	jmp    0x1003ac6c
1003ac6a:	xor    esi,esi
1003ac6c:	cmp    ebp,DWORD PTR [edi+0x5c]
1003ac6f:	jae    0x1003ac85
1003ac71:	movzx  ecx,BYTE PTR [ebp+0x0]
1003ac75:	mov    edx,DWORD PTR [edi+0x28]
1003ac78:	test   BYTE PTR [ecx+edx*1],0x10
1003ac7c:	je     0x1003ac85
1003ac7e:	mov    eax,0x1
1003ac83:	jmp    0x1003ac87
1003ac85:	xor    eax,eax
1003ac87:	mov    cl,BYTE PTR [ebx]
1003ac89:	add    ebx,0x1
1003ac8c:	cmp    cl,0x5
1003ac8f:	jne    0x1003ac9c
1003ac91:	xor    edx,edx
1003ac93:	cmp    eax,esi
1003ac95:	sete   dl
1003ac98:	mov    eax,edx
1003ac9a:	jmp    0x1003aca5
1003ac9c:	xor    ecx,ecx
1003ac9e:	cmp    eax,esi
1003aca0:	setne  cl
1003aca3:	mov    eax,ecx
1003aca5:	test   eax,eax
1003aca7:	je     0x1003a48c
1003acad:	xor    eax,eax
1003acaf:	pop    edi
1003acb0:	pop    esi
1003acb1:	pop    ebp
1003acb2:	pop    ebx
1003acb3:	add    esp,0xe8
1003acb9:	ret    
1003acba:	mov    ecx,DWORD PTR [edi+0x18]
1003acbd:	test   ecx,ecx
1003acbf:	je     0x1003acf0
1003acc1:	mov    eax,DWORD PTR [edi+0x5c]
1003acc4:	cmp    ebp,eax
1003acc6:	jae    0x1003ad19
1003acc8:	mov    edi,DWORD PTR [esp+0x10c]
1003accf:	push   ecx
1003acd0:	add    edi,0x1c
1003acd3:	xor    edx,edx
1003acd5:	mov    ecx,ebp
1003acd7:	call   0x10042c90
1003acdc:	add    esp,0x4
1003acdf:	test   eax,eax
1003ace1:	jne    0x1003c5ff
1003ace7:	mov    edi,DWORD PTR [esp+0x10c]
1003acee:	jmp    0x1003ad19
1003acf0:	mov    eax,DWORD PTR [edi+0x1c]
1003acf3:	mov    edx,DWORD PTR [edi+0x5c]
1003acf6:	sub    edx,eax
1003acf8:	cmp    ebp,edx
1003acfa:	ja     0x1003ad19
1003acfc:	mov    cl,BYTE PTR [ebp+0x0]
1003acff:	cmp    cl,BYTE PTR [edi+0x20]
1003ad02:	jne    0x1003ad19
1003ad04:	cmp    eax,0x1
1003ad07:	je     0x1003c5ff
1003ad0d:	mov    dl,BYTE PTR [ebp+0x1]
1003ad10:	cmp    dl,BYTE PTR [edi+0x21]
1003ad13:	je     0x1003c5ff
1003ad19:	mov    eax,ebp
1003ad1b:	add    ebp,0x1
1003ad1e:	cmp    eax,DWORD PTR [edi+0x5c]
1003ad21:	jae    0x1003c5ff
1003ad27:	add    ebx,0x1
1003ad2a:	jmp    0x1003a48c
1003ad2f:	mov    ecx,ebp
1003ad31:	add    ebp,0x1
1003ad34:	cmp    ecx,DWORD PTR [edi+0x5c]
1003ad37:	jae    0x1003c5ff
1003ad3d:	add    ebx,0x1
1003ad40:	jmp    0x1003a48c
1003ad45:	cmp    ebp,DWORD PTR [edi+0x5c]
1003ad48:	jae    0x1003c5ff
1003ad4e:	movzx  eax,BYTE PTR [ebp+0x0]
1003ad52:	mov    edx,DWORD PTR [edi+0x28]
1003ad55:	add    ebp,0x1
1003ad58:	test   BYTE PTR [eax+edx*1],0x4
1003ad5c:	jne    0x1003c5ff
1003ad62:	add    ebx,0x1
1003ad65:	jmp    0x1003a48c
1003ad6a:	cmp    ebp,DWORD PTR [edi+0x5c]
1003ad6d:	jae    0x1003c5ff
1003ad73:	movzx  eax,BYTE PTR [ebp+0x0]
1003ad77:	mov    ecx,DWORD PTR [edi+0x28]
1003ad7a:	add    ebp,0x1
1003ad7d:	test   BYTE PTR [eax+ecx*1],0x4
1003ad81:	je     0x1003c5ff
1003ad87:	add    ebx,0x1
1003ad8a:	jmp    0x1003a48c
1003ad8f:	cmp    ebp,DWORD PTR [edi+0x5c]
1003ad92:	jae    0x1003c5ff
1003ad98:	movzx  eax,BYTE PTR [ebp+0x0]
1003ad9c:	mov    edx,DWORD PTR [edi+0x28]
1003ad9f:	add    ebp,0x1
1003ada2:	test   BYTE PTR [eax+edx*1],0x1
1003ada6:	jne    0x1003c5ff
1003adac:	add    ebx,0x1
1003adaf:	jmp    0x1003a48c
1003adb4:	cmp    ebp,DWORD PTR [edi+0x5c]
1003adb7:	jae    0x1003c5ff
1003adbd:	movzx  eax,BYTE PTR [ebp+0x0]
1003adc1:	mov    ecx,DWORD PTR [edi+0x28]
1003adc4:	add    ebp,0x1
1003adc7:	test   BYTE PTR [eax+ecx*1],0x1
1003adcb:	je     0x1003c5ff
1003add1:	add    ebx,0x1
1003add4:	jmp    0x1003a48c
1003add9:	cmp    ebp,DWORD PTR [edi+0x5c]
1003addc:	jae    0x1003c5ff
1003ade2:	movzx  eax,BYTE PTR [ebp+0x0]
1003ade6:	mov    edx,DWORD PTR [edi+0x28]
1003ade9:	add    ebp,0x1
1003adec:	test   BYTE PTR [eax+edx*1],0x10
1003adf0:	jne    0x1003c5ff
1003adf6:	add    ebx,0x1
1003adf9:	jmp    0x1003a48c
1003adfe:	cmp    ebp,DWORD PTR [edi+0x5c]
1003ae01:	jae    0x1003c5ff
1003ae07:	movzx  eax,BYTE PTR [ebp+0x0]
1003ae0b:	mov    ecx,DWORD PTR [edi+0x28]
1003ae0e:	add    ebp,0x1
1003ae11:	test   BYTE PTR [eax+ecx*1],0x10
1003ae15:	je     0x1003c5ff
1003ae1b:	add    ebx,0x1
1003ae1e:	jmp    0x1003a48c
1003ae23:	mov    ecx,DWORD PTR [edi+0x5c]
1003ae26:	cmp    ebp,ecx
1003ae28:	jae    0x1003c5ff
1003ae2e:	movzx  eax,BYTE PTR [ebp+0x0]
1003ae32:	add    ebp,0x1
1003ae35:	cmp    eax,0xd
1003ae38:	ja     0x1003ae61
1003ae3a:	je     0x1003ae4c
1003ae3c:	cmp    eax,0xa
1003ae3f:	je     0x1003ae88
1003ae41:	jbe    0x1003c5ff
1003ae47:	cmp    eax,0xc
1003ae4a:	jmp    0x1003ae78
1003ae4c:	cmp    ebp,ecx
1003ae4e:	jae    0x1003ae88
1003ae50:	cmp    BYTE PTR [ebp+0x0],0xa
1003ae54:	jne    0x1003ae88
1003ae56:	add    ebp,0x1
1003ae59:	add    ebx,0x1
1003ae5c:	jmp    0x1003a48c
1003ae61:	cmp    eax,0x85
1003ae66:	je     0x1003ae7e
1003ae68:	cmp    eax,0x2027
1003ae6d:	jbe    0x1003c5ff
1003ae73:	cmp    eax,0x2029
1003ae78:	ja     0x1003c5ff
1003ae7e:	cmp    DWORD PTR [edi+0x50],0x0
1003ae82:	jne    0x1003c5ff
1003ae88:	add    ebx,0x1
1003ae8b:	jmp    0x1003a48c
1003ae90:	cmp    ebp,DWORD PTR [edi+0x5c]
1003ae93:	jae    0x1003c5ff
1003ae99:	movzx  eax,BYTE PTR [ebp+0x0]
1003ae9d:	add    ebp,0x1
1003aea0:	cmp    eax,0x180e
1003aea5:	ja     0x1003aecf
1003aea7:	je     0x1003c5ff
1003aead:	cmp    eax,0xa0
1003aeb2:	ja     0x1003aec8
1003aeb4:	je     0x1003c5ff
1003aeba:	cmp    eax,0x9
1003aebd:	je     0x1003c5ff
1003aec3:	cmp    eax,0x20
1003aec6:	jmp    0x1003aefa
1003aec8:	cmp    eax,0x1680
1003aecd:	jmp    0x1003aefa
1003aecf:	cmp    eax,0x205f
1003aed4:	ja     0x1003aef5
1003aed6:	je     0x1003c5ff
1003aedc:	cmp    eax,0x2000
1003aee1:	jb     0x1003af00
1003aee3:	cmp    eax,0x200a
1003aee8:	jbe    0x1003c5ff
1003aeee:	cmp    eax,0x202f
1003aef3:	jmp    0x1003aefa
1003aef5:	cmp    eax,0x3000
1003aefa:	je     0x1003c5ff
1003af00:	add    ebx,0x1
1003af03:	jmp    0x1003a48c
1003af08:	cmp    ebp,DWORD PTR [edi+0x5c]
1003af0b:	jae    0x1003c5ff
1003af11:	movzx  eax,BYTE PTR [ebp+0x0]
1003af15:	add    ebp,0x1
1003af18:	cmp    eax,0x180e
1003af1d:	ja     0x1003af3b
1003af1f:	je     0x1003af68
1003af21:	cmp    eax,0xa0
1003af26:	ja     0x1003af34
1003af28:	je     0x1003af68
1003af2a:	cmp    eax,0x9
1003af2d:	je     0x1003af68
1003af2f:	cmp    eax,0x20
1003af32:	jmp    0x1003af62
1003af34:	cmp    eax,0x1680
1003af39:	jmp    0x1003af62
1003af3b:	cmp    eax,0x205f
1003af40:	ja     0x1003af5d
1003af42:	je     0x1003af68
1003af44:	cmp    eax,0x2000
1003af49:	jb     0x1003c5ff
1003af4f:	cmp    eax,0x200a
1003af54:	jbe    0x1003af68
1003af56:	cmp    eax,0x202f
1003af5b:	jmp    0x1003af62
1003af5d:	cmp    eax,0x3000
1003af62:	jne    0x1003c5ff
1003af68:	add    ebx,0x1
1003af6b:	jmp    0x1003a48c
1003af70:	cmp    ebp,DWORD PTR [edi+0x5c]
1003af73:	jae    0x1003c5ff
1003af79:	movzx  eax,BYTE PTR [ebp+0x0]
1003af7d:	add    ebp,0x1
1003af80:	cmp    eax,0x85
1003af85:	ja     0x1003af97
1003af87:	je     0x1003c5ff
1003af8d:	cmp    eax,0xa
1003af90:	jb     0x1003afa9
1003af92:	cmp    eax,0xd
1003af95:	jmp    0x1003afa3
1003af97:	cmp    eax,0x2028
1003af9c:	jb     0x1003afa9
1003af9e:	cmp    eax,0x2029
1003afa3:	jbe    0x1003c5ff
1003afa9:	add    ebx,0x1
1003afac:	jmp    0x1003a48c
1003afb1:	cmp    ebp,DWORD PTR [edi+0x5c]
1003afb4:	jae    0x1003c5ff
1003afba:	movzx  eax,BYTE PTR [ebp+0x0]
1003afbe:	add    ebp,0x1
1003afc1:	cmp    eax,0x85
1003afc6:	ja     0x1003afd8
1003afc8:	je     0x1003afee
1003afca:	cmp    eax,0xa
1003afcd:	jb     0x1003c5ff
1003afd3:	cmp    eax,0xd
1003afd6:	jmp    0x1003afe8
1003afd8:	cmp    eax,0x2028
1003afdd:	jb     0x1003c5ff
1003afe3:	cmp    eax,0x2029
1003afe8:	ja     0x1003c5ff
1003afee:	add    ebx,0x1
1003aff1:	jmp    0x1003a48c
1003aff6:	xor    eax,eax
1003aff8:	mov    ah,BYTE PTR [ebx+0x1]
1003affb:	add    ebx,0x3
1003affe:	mov    al,BYTE PTR [ebx-0x1]
1003b001:	add    eax,eax
1003b003:	cmp    eax,DWORD PTR [esp+0x108]
1003b00a:	mov    DWORD PTR [esp+0x24],eax
1003b00e:	jge    0x1003b024
1003b010:	mov    edx,DWORD PTR [edi+0xc]
1003b013:	mov    ecx,DWORD PTR [edx+eax*4]
1003b016:	test   ecx,ecx
1003b018:	lea    eax,[edx+eax*4]
1003b01b:	jl     0x1003b024
1003b01d:	mov    esi,DWORD PTR [eax+0x4]
1003b020:	sub    esi,ecx
1003b022:	jmp    0x1003b036
1003b024:	cmp    DWORD PTR [edi+0x3c],0x0
1003b028:	je     0x1003b02e
1003b02a:	xor    esi,esi
1003b02c:	jmp    0x1003b036
1003b02e:	mov    esi,DWORD PTR [edi+0x5c]
1003b031:	sub    esi,ebp
1003b033:	add    esi,0x1
1003b036:	mov    cl,BYTE PTR [ebx]
1003b038:	movzx  eax,cl
1003b03b:	lea    edx,[eax-0x46]
1003b03e:	cmp    edx,0x7
1003b041:	ja     0x1003b1e7
1003b047:	movzx  edx,BYTE PTR [edx+0x1003d0c4]
1003b04e:	jmp    DWORD PTR [edx*4+0x1003d0bc]
1003b055:	add    eax,0xffffffba
1003b058:	mov    ecx,eax
1003b05a:	and    ecx,0x1
1003b05d:	mov    DWORD PTR [esp+0x20],ecx
1003b061:	movsx  ecx,BYTE PTR [eax+0x1006f528]
1003b068:	movsx  eax,BYTE PTR [eax+0x1006f530]
1003b06f:	add    ebx,0x1
1003b072:	test   eax,eax
1003b074:	mov    DWORD PTR [esp+0x1c],ecx
1003b078:	mov    DWORD PTR [esp+0x14],eax
1003b07c:	jne    0x1003b0bb
1003b07e:	mov    DWORD PTR [esp+0x14],0x7fffffff
1003b086:	jmp    0x1003b0bb
1003b088:	xor    edx,edx
1003b08a:	cmp    cl,0x4d
1003b08d:	sete   dl
1003b090:	xor    eax,eax
1003b092:	mov    ah,BYTE PTR [ebx+0x1]
1003b095:	mov    DWORD PTR [esp+0x20],edx
1003b099:	mov    al,BYTE PTR [ebx+0x2]
1003b09c:	mov    DWORD PTR [esp+0x1c],eax
1003b0a0:	xor    eax,eax
1003b0a2:	mov    ah,BYTE PTR [ebx+0x3]
1003b0a5:	mov    al,BYTE PTR [ebx+0x4]
1003b0a8:	test   eax,eax
1003b0aa:	mov    DWORD PTR [esp+0x14],eax
1003b0ae:	jne    0x1003b0b8
1003b0b0:	mov    DWORD PTR [esp+0x14],0x7fffffff
1003b0b8:	add    ebx,0x5
1003b0bb:	test   esi,esi
1003b0bd:	je     0x1003a48c
1003b0c3:	mov    eax,0x1
1003b0c8:	cmp    DWORD PTR [esp+0x1c],eax
1003b0cc:	mov    DWORD PTR [esp+0x18],eax
1003b0d0:	jl     0x1003b106
1003b0d2:	mov    ecx,DWORD PTR [esp+0x110]
1003b0d9:	mov    edx,DWORD PTR [esp+0x24]
1003b0dd:	push   ecx
1003b0de:	push   ebp
1003b0df:	mov    ecx,edi
1003b0e1:	mov    eax,esi
1003b0e3:	call   0x1003a3a0
1003b0e8:	add    esp,0x8
1003b0eb:	test   eax,eax
1003b0ed:	je     0x1003c5ff
1003b0f3:	mov    eax,DWORD PTR [esp+0x18]
1003b0f7:	add    eax,0x1
1003b0fa:	add    ebp,esi
1003b0fc:	cmp    eax,DWORD PTR [esp+0x1c]
1003b100:	mov    DWORD PTR [esp+0x18],eax
1003b104:	jle    0x1003b0d2
1003b106:	mov    eax,DWORD PTR [esp+0x1c]
1003b10a:	mov    ecx,DWORD PTR [esp+0x14]
1003b10e:	cmp    eax,ecx
1003b110:	je     0x1003a48c
1003b116:	cmp    DWORD PTR [esp+0x20],0x0
1003b11b:	je     0x1003c87f
1003b121:	mov    ecx,DWORD PTR [esp+0x110]
1003b128:	mov    edx,eax
1003b12a:	mov    eax,DWORD PTR [esp+0x11c]
1003b131:	add    eax,0x1
1003b134:	push   eax
1003b135:	push   0x0
1003b137:	mov    DWORD PTR [esp+0x24],eax
1003b13b:	mov    eax,DWORD PTR [esp+0x11c]
1003b142:	push   eax
1003b143:	mov    eax,DWORD PTR [esp+0x110]
1003b14a:	push   ecx
1003b14b:	push   edi
1003b14c:	mov    DWORD PTR [esp+0x2c],edx
1003b150:	mov    edx,DWORD PTR [esp+0x11c]
1003b157:	push   edx
1003b158:	push   eax
1003b159:	push   ebx
1003b15a:	push   ebp
1003b15b:	call   0x1003a420
1003b160:	add    esp,0x24
1003b163:	test   eax,eax
1003b165:	jne    0x1003cf26
1003b16b:	jmp    0x1003b170
1003b16d:	lea    ecx,[ecx+0x0]
1003b170:	mov    ecx,DWORD PTR [esp+0x14]
1003b174:	cmp    DWORD PTR [esp+0x18],ecx
1003b178:	jge    0x1003c5ff
1003b17e:	mov    edx,DWORD PTR [esp+0x110]
1003b185:	push   edx
1003b186:	mov    edx,DWORD PTR [esp+0x28]
1003b18a:	push   ebp
1003b18b:	mov    ecx,edi
1003b18d:	mov    eax,esi
1003b18f:	call   0x1003a3a0
1003b194:	add    esp,0x8
1003b197:	test   eax,eax
1003b199:	je     0x1003c5ff
1003b19f:	mov    eax,DWORD PTR [esp+0x1c]
1003b1a3:	mov    ecx,DWORD PTR [esp+0x114]
1003b1aa:	mov    edx,DWORD PTR [esp+0x110]
1003b1b1:	add    DWORD PTR [esp+0x18],0x1
1003b1b6:	push   eax
1003b1b7:	mov    eax,DWORD PTR [esp+0x10c]
1003b1be:	push   0x0
1003b1c0:	push   ecx
1003b1c1:	mov    ecx,DWORD PTR [esp+0x110]
1003b1c8:	push   edx
1003b1c9:	push   edi
1003b1ca:	push   eax
1003b1cb:	push   ecx
1003b1cc:	add    ebp,esi
1003b1ce:	push   ebx
1003b1cf:	push   ebp
1003b1d0:	call   0x1003a420
1003b1d5:	add    esp,0x24
1003b1d8:	test   eax,eax
1003b1da:	je     0x1003b170
1003b1dc:	pop    edi
1003b1dd:	pop    esi
1003b1de:	pop    ebp
1003b1df:	pop    ebx
1003b1e0:	add    esp,0xe8
1003b1e6:	ret    
1003b1e7:	mov    edx,DWORD PTR [esp+0x110]
1003b1ee:	push   edx
1003b1ef:	mov    edx,DWORD PTR [esp+0x28]
1003b1f3:	push   ebp
1003b1f4:	mov    ecx,edi
1003b1f6:	mov    eax,esi
1003b1f8:	call   0x1003a3a0
1003b1fd:	add    esp,0x8
1003b200:	test   eax,eax
1003b202:	je     0x1003c5ff
1003b208:	add    ebp,esi
1003b20a:	jmp    0x1003a48c
1003b20f:	mov    cl,BYTE PTR [ebx+0x21]
1003b212:	lea    eax,[ebx+0x1]
1003b215:	add    ebx,0x21
1003b218:	mov    DWORD PTR [esp+0x24],eax
1003b21c:	movzx  eax,cl
1003b21f:	lea    esi,[eax-0x46]
1003b222:	cmp    esi,0x7
1003b225:	ja     0x1003b299
1003b22b:	movzx  esi,BYTE PTR [esi+0x1003d0d4]
1003b232:	jmp    DWORD PTR [esi*4+0x1003d0cc]
1003b239:	movsx  esi,BYTE PTR [eax+0x1006f4ea]
1003b240:	movsx  ecx,BYTE PTR [eax+0x1006f4e2]
1003b247:	add    eax,0xffffffba
1003b24a:	mov    edx,eax
1003b24c:	add    ebx,0x1
1003b24f:	and    edx,0x1
1003b252:	test   esi,esi
1003b254:	mov    DWORD PTR [esp+0x1c],ecx
1003b258:	mov    DWORD PTR [esp+0x14],esi
1003b25c:	jne    0x1003b2a6
1003b25e:	mov    esi,0x7fffffff
1003b263:	jmp    0x1003b2a2
1003b265:	xor    edx,edx
1003b267:	cmp    cl,0x4d
1003b26a:	sete   dl
1003b26d:	xor    ecx,ecx
1003b26f:	mov    ch,BYTE PTR [ebx+0x3]
1003b272:	xor    eax,eax
1003b274:	mov    ah,BYTE PTR [ebx+0x1]
1003b277:	mov    cl,BYTE PTR [ebx+0x4]
1003b27a:	mov    al,BYTE PTR [ebx+0x2]
1003b27d:	mov    esi,ecx
1003b27f:	test   esi,esi
1003b281:	mov    DWORD PTR [esp+0x1c],eax
1003b285:	mov    DWORD PTR [esp+0x14],ecx
1003b289:	jne    0x1003b294
1003b28b:	mov    esi,0x7fffffff
1003b290:	mov    DWORD PTR [esp+0x14],esi
1003b294:	add    ebx,0x5
1003b297:	jmp    0x1003b2a6
1003b299:	mov    esi,0x1
1003b29e:	mov    DWORD PTR [esp+0x1c],esi
1003b2a2:	mov    DWORD PTR [esp+0x14],esi
1003b2a6:	mov    eax,0x1
1003b2ab:	cmp    DWORD PTR [esp+0x1c],eax
1003b2af:	mov    DWORD PTR [esp+0x18],eax
1003b2b3:	jl     0x1003b2f8
1003b2b5:	cmp    ebp,DWORD PTR [edi+0x5c]
1003b2b8:	jae    0x1003c5ff
1003b2be:	movzx  esi,BYTE PTR [ebp+0x0]
1003b2c2:	mov    ecx,esi
1003b2c4:	and    ecx,0x7
1003b2c7:	mov    eax,0x1
1003b2cc:	shl    eax,cl
1003b2ce:	mov    ecx,DWORD PTR [esp+0x24]
1003b2d2:	shr    esi,0x3
1003b2d5:	mov    cl,BYTE PTR [esi+ecx*1]
1003b2d8:	add    ebp,0x1
1003b2db:	test   cl,al
1003b2dd:	je     0x1003c5ff
1003b2e3:	mov    eax,DWORD PTR [esp+0x18]
1003b2e7:	add    eax,0x1
1003b2ea:	cmp    eax,DWORD PTR [esp+0x1c]
1003b2ee:	mov    DWORD PTR [esp+0x18],eax
1003b2f2:	jle    0x1003b2b5
1003b2f4:	mov    esi,DWORD PTR [esp+0x14]
1003b2f8:	mov    eax,DWORD PTR [esp+0x1c]
1003b2fc:	cmp    eax,esi
1003b2fe:	je     0x1003a48c
1003b304:	test   edx,edx
1003b306:	mov    DWORD PTR [esp+0x18],eax
1003b30a:	je     0x1003c91e
1003b310:	mov    eax,DWORD PTR [esp+0x11c]
1003b317:	mov    ecx,DWORD PTR [esp+0x110]
1003b31e:	mov    edx,DWORD PTR [esp+0x108]
1003b325:	add    eax,0x1
1003b328:	push   eax
1003b329:	push   0x0
1003b32b:	mov    DWORD PTR [esp+0x24],eax
1003b32f:	mov    eax,DWORD PTR [esp+0x11c]
1003b336:	push   eax
1003b337:	mov    eax,DWORD PTR [esp+0x110]
1003b33e:	push   ecx
1003b33f:	push   edi
1003b340:	push   edx
1003b341:	push   eax
1003b342:	push   ebx
1003b343:	push   ebp
1003b344:	call   0x1003a420
1003b349:	add    esp,0x24
1003b34c:	test   eax,eax
1003b34e:	jne    0x1003cf26
1003b354:	cmp    DWORD PTR [esp+0x18],esi
1003b358:	jge    0x1003c5ff
1003b35e:	cmp    ebp,DWORD PTR [edi+0x5c]
1003b361:	jae    0x1003c5ff
1003b367:	movzx  eax,BYTE PTR [ebp+0x0]
1003b36b:	mov    ecx,eax
1003b36d:	and    ecx,0x7
1003b370:	mov    edx,0x1
1003b375:	shl    edx,cl
1003b377:	mov    ecx,DWORD PTR [esp+0x24]
1003b37b:	shr    eax,0x3
1003b37e:	mov    al,BYTE PTR [eax+ecx*1]
1003b381:	add    ebp,0x1
1003b384:	test   al,dl
1003b386:	je     0x1003c5ff
1003b38c:	mov    ecx,DWORD PTR [esp+0x1c]
1003b390:	mov    edx,DWORD PTR [esp+0x114]
1003b397:	mov    eax,DWORD PTR [esp+0x110]
1003b39e:	add    DWORD PTR [esp+0x18],0x1
1003b3a3:	push   ecx
1003b3a4:	mov    ecx,DWORD PTR [esp+0x10c]
1003b3ab:	push   0x0
1003b3ad:	push   edx
1003b3ae:	mov    edx,DWORD PTR [esp+0x110]
1003b3b5:	push   eax
1003b3b6:	push   edi
1003b3b7:	push   ecx
1003b3b8:	push   edx
1003b3b9:	push   ebx
1003b3ba:	push   ebp
1003b3bb:	call   0x1003a420
1003b3c0:	add    esp,0x24
1003b3c3:	test   eax,eax
1003b3c5:	je     0x1003b354
1003b3c7:	pop    edi
1003b3c8:	pop    esi
1003b3c9:	pop    ebp
1003b3ca:	pop    ebx
1003b3cb:	add    esp,0xe8
1003b3d1:	ret    
1003b3d2:	mov    edx,DWORD PTR [edi+0x5c]
1003b3d5:	sub    edx,ebp
1003b3d7:	cmp    edx,0x1
1003b3da:	jl     0x1003c5ff
1003b3e0:	mov    al,BYTE PTR [ebp+0x0]
1003b3e3:	add    ebp,0x1
1003b3e6:	cmp    BYTE PTR [ebx+0x1],al
1003b3e9:	jne    0x1003c5ff
1003b3ef:	add    ebx,0x2
1003b3f2:	jmp    0x1003a48c
1003b3f7:	mov    ecx,DWORD PTR [edi+0x5c]
1003b3fa:	sub    ecx,ebp
1003b3fc:	cmp    ecx,0x1
1003b3ff:	jl     0x1003c5ff
1003b405:	movzx  ecx,BYTE PTR [ebp+0x0]
1003b409:	mov    eax,DWORD PTR [edi+0x24]
1003b40c:	movzx  edx,BYTE PTR [ebx+0x1]
1003b410:	mov    cl,BYTE PTR [ecx+eax*1]
1003b413:	add    ebp,0x1
1003b416:	cmp    BYTE PTR [edx+eax*1],cl
1003b419:	jne    0x1003c5ff
1003b41f:	add    ebx,0x2
1003b422:	jmp    0x1003a48c
1003b427:	xor    eax,eax
1003b429:	mov    ah,BYTE PTR [ebx+0x1]
1003b42c:	add    ebx,0x3
1003b42f:	mov    al,BYTE PTR [ebx-0x1]
1003b432:	mov    esi,eax
1003b434:	jmp    0x1003b4b2
1003b439:	mov    DWORD PTR [esp+0x1c],0x1
1003b441:	xor    ecx,ecx
1003b443:	mov    ch,BYTE PTR [ebx+0x1]
1003b446:	xor    edx,edx
1003b448:	xor    eax,eax
1003b44a:	cmp    BYTE PTR [ebx],0x26
1003b44d:	sete   dl
1003b450:	add    ebx,0x3
1003b453:	mov    cl,BYTE PTR [ebx-0x1]
1003b456:	mov    DWORD PTR [esp+0x20],edx
1003b45a:	mov    esi,ecx
1003b45c:	jmp    0x1003b4b2
1003b45e:	xor    eax,eax
1003b460:	mov    DWORD PTR [esp+0x1c],0x1
1003b468:	add    ebx,0x1
1003b46b:	jmp    0x1003b4ad
1003b46d:	mov    eax,0x1
1003b472:	mov    DWORD PTR [esp+0x1c],eax
1003b476:	add    ebx,eax
1003b478:	jmp    0x1003b4ad
1003b47a:	mov    esi,0x1
1003b47f:	xor    eax,eax
1003b481:	mov    DWORD PTR [esp+0x1c],esi
1003b485:	add    ebx,esi
1003b487:	jmp    0x1003b4b2
1003b489:	movzx  ecx,BYTE PTR [ebx]
1003b48c:	movsx  esi,BYTE PTR [ecx+0x1006f511]
1003b493:	movsx  eax,BYTE PTR [ecx+0x1006f509]
1003b49a:	sub    ecx,0x1f
1003b49d:	mov    edx,ecx
1003b49f:	and    edx,0x1
1003b4a2:	add    ebx,0x1
1003b4a5:	test   esi,esi
1003b4a7:	mov    DWORD PTR [esp+0x20],edx
1003b4ab:	jne    0x1003b4b2
1003b4ad:	mov    esi,0x7fffffff
1003b4b2:	mov    ecx,DWORD PTR [edi+0x5c]
1003b4b5:	sub    ecx,ebp
1003b4b7:	cmp    eax,ecx
1003b4b9:	jg     0x1003c5ff
1003b4bf:	movzx  ecx,BYTE PTR [ebx]
1003b4c2:	add    ebx,0x1
1003b4c5:	test   BYTE PTR [esp+0x110],0x1
1003b4cd:	mov    DWORD PTR [esp+0x14],ecx
1003b4d1:	mov    DWORD PTR [esp+0x18],0x1
1003b4d9:	je     0x1003b5bc
1003b4df:	cmp    eax,0x1
1003b4e2:	mov    edx,DWORD PTR [esp+0x14]
1003b4e6:	mov    ecx,DWORD PTR [edi+0x24]
1003b4e9:	movzx  ecx,BYTE PTR [ecx+edx*1]
1003b4ed:	mov    DWORD PTR [esp+0x14],ecx
1003b4f1:	jl     0x1003b51a
1003b4f3:	movzx  edx,BYTE PTR [ebp+0x0]
1003b4f7:	mov    ecx,DWORD PTR [edi+0x24]
1003b4fa:	movzx  ecx,BYTE PTR [edx+ecx*1]
1003b4fe:	add    ebp,0x1
1003b501:	cmp    DWORD PTR [esp+0x14],ecx
1003b505:	jne    0x1003c5ff
1003b50b:	mov    ecx,DWORD PTR [esp+0x18]
1003b50f:	add    ecx,0x1
1003b512:	cmp    ecx,eax
1003b514:	mov    DWORD PTR [esp+0x18],ecx
1003b518:	jle    0x1003b4f3
1003b51a:	cmp    eax,esi
1003b51c:	je     0x1003a48c
1003b522:	cmp    DWORD PTR [esp+0x20],0x0
1003b527:	jne    0x1003c9b7
1003b52d:	cmp    eax,esi
1003b52f:	mov    DWORD PTR [esp+0x20],ebp
1003b533:	jge    0x1003b555
1003b535:	cmp    ebp,DWORD PTR [edi+0x5c]
1003b538:	jae    0x1003b555
1003b53a:	movzx  edx,BYTE PTR [ebp+0x0]
1003b53e:	mov    ecx,DWORD PTR [edi+0x24]
1003b541:	movzx  ecx,BYTE PTR [edx+ecx*1]
1003b545:	cmp    DWORD PTR [esp+0x14],ecx
1003b549:	jne    0x1003b555
1003b54b:	add    eax,0x1
1003b54e:	add    ebp,0x1
1003b551:	cmp    eax,esi
1003b553:	jl     0x1003b535
1003b555:	cmp    DWORD PTR [esp+0x1c],0x0
1003b55a:	jne    0x1003a48c
1003b560:	cmp    ebp,DWORD PTR [esp+0x20]
1003b564:	jb     0x1003b5af
1003b566:	mov    esi,DWORD PTR [esp+0x11c]
1003b56d:	add    esi,0x1
1003b570:	mov    edx,DWORD PTR [esp+0x114]
1003b577:	mov    eax,DWORD PTR [esp+0x110]
1003b57e:	mov    ecx,DWORD PTR [esp+0x108]
1003b585:	push   esi
1003b586:	push   0x0
1003b588:	push   edx
1003b589:	mov    edx,DWORD PTR [esp+0x110]
1003b590:	push   eax
1003b591:	push   edi
1003b592:	push   ecx
1003b593:	push   edx
1003b594:	push   ebx
1003b595:	push   ebp
1003b596:	call   0x1003a420
1003b59b:	add    esp,0x24
1003b59e:	sub    ebp,0x1
1003b5a1:	test   eax,eax
1003b5a3:	jne    0x1003cf26
1003b5a9:	cmp    ebp,DWORD PTR [esp+0x20]
1003b5ad:	jae    0x1003b570
1003b5af:	xor    eax,eax
1003b5b1:	pop    edi
1003b5b2:	pop    esi
1003b5b3:	pop    ebp
1003b5b4:	pop    ebx
1003b5b5:	add    esp,0xe8
1003b5bb:	ret    
1003b5bc:	cmp    eax,0x1
1003b5bf:	jl     0x1003b5e7
1003b5c1:	mov    edx,DWORD PTR [esp+0x14]
1003b5c5:	movzx  ecx,BYTE PTR [ebp+0x0]
1003b5c9:	add    ebp,0x1
1003b5cc:	cmp    edx,ecx
1003b5ce:	jne    0x1003c5ff
1003b5d4:	mov    ecx,DWORD PTR [esp+0x18]
1003b5d8:	add    ecx,0x1
1003b5db:	cmp    ecx,eax
1003b5dd:	mov    DWORD PTR [esp+0x18],ecx
1003b5e1:	jle    0x1003b5c5
1003b5e3:	mov    edx,DWORD PTR [esp+0x20]
1003b5e7:	cmp    eax,esi
1003b5e9:	je     0x1003a48c
1003b5ef:	test   edx,edx
1003b5f1:	jne    0x1003ca71
1003b5f7:	cmp    eax,esi
1003b5f9:	mov    ecx,ebp
1003b5fb:	mov    DWORD PTR [esp+0x20],ecx
1003b5ff:	jge    0x1003b61a
1003b601:	cmp    ebp,DWORD PTR [edi+0x5c]
1003b604:	jae    0x1003b61a
1003b606:	movzx  edx,BYTE PTR [ebp+0x0]
1003b60a:	cmp    DWORD PTR [esp+0x14],edx
1003b60e:	jne    0x1003b61a
1003b610:	add    eax,0x1
1003b613:	add    ebp,0x1
1003b616:	cmp    eax,esi
1003b618:	jl     0x1003b601
1003b61a:	cmp    DWORD PTR [esp+0x1c],0x0
1003b61f:	jne    0x1003a48c
1003b625:	cmp    ebp,ecx
1003b627:	jb     0x1003b672
1003b629:	mov    esi,DWORD PTR [esp+0x11c]
1003b630:	add    esi,0x1
1003b633:	mov    ecx,DWORD PTR [esp+0x114]
1003b63a:	mov    edx,DWORD PTR [esp+0x110]
1003b641:	mov    eax,DWORD PTR [esp+0x108]
1003b648:	push   esi
1003b649:	push   0x0
1003b64b:	push   ecx
1003b64c:	mov    ecx,DWORD PTR [esp+0x110]
1003b653:	push   edx
1003b654:	push   edi
1003b655:	push   eax
1003b656:	push   ecx
1003b657:	push   ebx
1003b658:	push   ebp
1003b659:	call   0x1003a420
1003b65e:	add    esp,0x24
1003b661:	sub    ebp,0x1
1003b664:	test   eax,eax
1003b666:	jne    0x1003cf26
1003b66c:	cmp    ebp,DWORD PTR [esp+0x20]
1003b670:	jae    0x1003b633
1003b672:	xor    eax,eax
1003b674:	pop    edi
1003b675:	pop    esi
1003b676:	pop    ebp
1003b677:	pop    ebx
1003b678:	add    esp,0xe8
1003b67e:	ret    
1003b67f:	cmp    ebp,DWORD PTR [edi+0x5c]
1003b682:	jae    0x1003c5ff
1003b688:	movzx  esi,BYTE PTR [ebp+0x0]
1003b68c:	add    ebx,0x1
1003b68f:	add    ebp,0x1
1003b692:	test   BYTE PTR [esp+0x110],0x1
1003b69a:	je     0x1003b6be
1003b69c:	mov    eax,DWORD PTR [edi+0x24]
1003b69f:	movzx  ecx,BYTE PTR [ebx]
1003b6a2:	mov    dl,BYTE PTR [eax+esi*1]
1003b6a5:	add    ebx,0x1
1003b6a8:	cmp    BYTE PTR [ecx+eax*1],dl
1003b6ab:	jne    0x1003a48c
1003b6b1:	xor    eax,eax
1003b6b3:	pop    edi
1003b6b4:	pop    esi
1003b6b5:	pop    ebp
1003b6b6:	pop    ebx
1003b6b7:	add    esp,0xe8
1003b6bd:	ret    
1003b6be:	movzx  eax,BYTE PTR [ebx]
1003b6c1:	add    ebx,0x1
1003b6c4:	cmp    eax,esi
1003b6c6:	jne    0x1003a48c
1003b6cc:	xor    eax,eax
1003b6ce:	pop    edi
1003b6cf:	pop    esi
1003b6d0:	pop    ebp
1003b6d1:	pop    ebx
1003b6d2:	add    esp,0xe8
1003b6d8:	ret    
1003b6d9:	xor    ecx,ecx
1003b6db:	mov    ch,BYTE PTR [ebx+0x1]
1003b6de:	add    ebx,0x3
1003b6e1:	mov    cl,BYTE PTR [ebx-0x1]
1003b6e4:	mov    esi,ecx
1003b6e6:	mov    eax,esi
1003b6e8:	jmp    0x1003b77a
1003b6ed:	xor    edx,edx
1003b6ef:	mov    dh,BYTE PTR [ebx+0x1]
1003b6f2:	xor    eax,eax
1003b6f4:	mov    dl,BYTE PTR [ebx+0x2]
1003b6f7:	mov    esi,edx
1003b6f9:	xor    edx,edx
1003b6fb:	cmp    BYTE PTR [ebx],0x33
1003b6fe:	sete   dl
1003b701:	add    ebx,0x3
1003b704:	mov    DWORD PTR [esp+0x20],edx
1003b708:	jmp    0x1003b77a
1003b70d:	xor    eax,eax
1003b70f:	mov    DWORD PTR [esp+0x1c],0x1
1003b717:	add    ebx,0x1
1003b71a:	jmp    0x1003b775
1003b71c:	mov    eax,0x1
1003b721:	mov    DWORD PTR [esp+0x1c],eax
1003b725:	add    ebx,eax
1003b727:	jmp    0x1003b775
1003b729:	mov    esi,0x1
1003b72e:	xor    eax,eax
1003b730:	mov    DWORD PTR [esp+0x1c],esi
1003b734:	add    ebx,esi
1003b736:	jmp    0x1003b77a
1003b738:	xor    ecx,ecx
1003b73a:	mov    ch,BYTE PTR [ebx+0x1]
1003b73d:	xor    eax,eax
1003b73f:	mov    DWORD PTR [esp+0x1c],0x1
1003b747:	add    ebx,0x3
1003b74a:	mov    cl,BYTE PTR [ebx-0x1]
1003b74d:	mov    esi,ecx
1003b74f:	jmp    0x1003b77a
1003b751:	movzx  ecx,BYTE PTR [ebx]
1003b754:	movsx  esi,BYTE PTR [ecx+0x1006f504]
1003b75b:	movsx  eax,BYTE PTR [ecx+0x1006f4fc]
1003b762:	sub    ecx,0x2c
1003b765:	mov    edx,ecx
1003b767:	and    edx,0x1
1003b76a:	add    ebx,0x1
1003b76d:	test   esi,esi
1003b76f:	mov    DWORD PTR [esp+0x20],edx
1003b773:	jne    0x1003b77a
1003b775:	mov    esi,0x7fffffff
1003b77a:	mov    ecx,DWORD PTR [edi+0x5c]
1003b77d:	sub    ecx,ebp
1003b77f:	cmp    eax,ecx
1003b781:	jg     0x1003c5ff
1003b787:	movzx  ecx,BYTE PTR [ebx]
1003b78a:	add    ebx,0x1
1003b78d:	test   BYTE PTR [esp+0x110],0x1
1003b795:	mov    DWORD PTR [esp+0x14],ecx
1003b799:	mov    DWORD PTR [esp+0x18],0x1
1003b7a1:	je     0x1003b889
1003b7a7:	cmp    eax,0x1
1003b7aa:	mov    edx,DWORD PTR [esp+0x14]
1003b7ae:	mov    ecx,DWORD PTR [edi+0x24]
1003b7b1:	movzx  ecx,BYTE PTR [ecx+edx*1]
1003b7b5:	mov    DWORD PTR [esp+0x14],ecx
1003b7b9:	jl     0x1003b7e7
1003b7bb:	jmp    0x1003b7c0
1003b7bd:	lea    ecx,[ecx+0x0]
1003b7c0:	movzx  edx,BYTE PTR [ebp+0x0]
1003b7c4:	mov    ecx,DWORD PTR [edi+0x24]
1003b7c7:	movzx  ecx,BYTE PTR [edx+ecx*1]
1003b7cb:	add    ebp,0x1
1003b7ce:	cmp    DWORD PTR [esp+0x14],ecx
1003b7d2:	je     0x1003c5ff
1003b7d8:	mov    ecx,DWORD PTR [esp+0x18]
1003b7dc:	add    ecx,0x1
1003b7df:	cmp    ecx,eax
1003b7e1:	mov    DWORD PTR [esp+0x18],ecx
1003b7e5:	jle    0x1003b7c0
1003b7e7:	cmp    eax,esi
1003b7e9:	je     0x1003a48c
1003b7ef:	cmp    DWORD PTR [esp+0x20],0x0
1003b7f4:	jne    0x1003cb2a
1003b7fa:	cmp    eax,esi
1003b7fc:	mov    DWORD PTR [esp+0x20],ebp
1003b800:	jge    0x1003b822
1003b802:	cmp    ebp,DWORD PTR [edi+0x5c]
1003b805:	jae    0x1003b822
1003b807:	movzx  edx,BYTE PTR [ebp+0x0]
1003b80b:	mov    ecx,DWORD PTR [edi+0x24]
1003b80e:	movzx  ecx,BYTE PTR [edx+ecx*1]
1003b812:	cmp    DWORD PTR [esp+0x14],ecx
1003b816:	je     0x1003b822
1003b818:	add    eax,0x1
1003b81b:	add    ebp,0x1
1003b81e:	cmp    eax,esi
1003b820:	jl     0x1003b802
1003b822:	cmp    DWORD PTR [esp+0x1c],0x0
1003b827:	jne    0x1003a48c
1003b82d:	cmp    ebp,DWORD PTR [esp+0x20]
1003b831:	jb     0x1003b87c
1003b833:	mov    esi,DWORD PTR [esp+0x11c]
1003b83a:	add    esi,0x1
1003b83d:	mov    edx,DWORD PTR [esp+0x114]
1003b844:	mov    eax,DWORD PTR [esp+0x110]
1003b84b:	mov    ecx,DWORD PTR [esp+0x108]
1003b852:	push   esi
1003b853:	push   0x0
1003b855:	push   edx
1003b856:	mov    edx,DWORD PTR [esp+0x110]
1003b85d:	push   eax
1003b85e:	push   edi
1003b85f:	push   ecx
1003b860:	push   edx
1003b861:	push   ebx
1003b862:	push   ebp
1003b863:	call   0x1003a420
1003b868:	add    esp,0x24
1003b86b:	test   eax,eax
1003b86d:	jne    0x1003cf26
1003b873:	sub    ebp,0x1
1003b876:	cmp    ebp,DWORD PTR [esp+0x20]
1003b87a:	jae    0x1003b83d
1003b87c:	xor    eax,eax
1003b87e:	pop    edi
1003b87f:	pop    esi
1003b880:	pop    ebp
1003b881:	pop    ebx
1003b882:	add    esp,0xe8
1003b888:	ret    
1003b889:	cmp    eax,0x1
1003b88c:	jl     0x1003b8b4
1003b88e:	mov    edx,DWORD PTR [esp+0x14]
1003b892:	movzx  ecx,BYTE PTR [ebp+0x0]
1003b896:	add    ebp,0x1
1003b899:	cmp    edx,ecx
1003b89b:	je     0x1003c5ff
1003b8a1:	mov    ecx,DWORD PTR [esp+0x18]
1003b8a5:	add    ecx,0x1
1003b8a8:	cmp    ecx,eax
1003b8aa:	mov    DWORD PTR [esp+0x18],ecx
1003b8ae:	jle    0x1003b892
1003b8b0:	mov    edx,DWORD PTR [esp+0x20]
1003b8b4:	cmp    eax,esi
1003b8b6:	je     0x1003a48c
1003b8bc:	test   edx,edx
1003b8be:	jne    0x1003cbe3
1003b8c4:	cmp    eax,esi
1003b8c6:	mov    ecx,ebp
1003b8c8:	mov    DWORD PTR [esp+0x20],ecx
1003b8cc:	jge    0x1003b8e7
1003b8ce:	cmp    ebp,DWORD PTR [edi+0x5c]
1003b8d1:	jae    0x1003b8e7
1003b8d3:	movzx  edx,BYTE PTR [ebp+0x0]
1003b8d7:	cmp    DWORD PTR [esp+0x14],edx
1003b8db:	je     0x1003b8e7
1003b8dd:	add    eax,0x1
1003b8e0:	add    ebp,0x1
1003b8e3:	cmp    eax,esi
1003b8e5:	jl     0x1003b8ce
1003b8e7:	cmp    DWORD PTR [esp+0x1c],0x0
1003b8ec:	jne    0x1003a48c
1003b8f2:	cmp    ebp,ecx
1003b8f4:	jb     0x1003b93f
1003b8f6:	mov    esi,DWORD PTR [esp+0x11c]
1003b8fd:	add    esi,0x1
1003b900:	mov    ecx,DWORD PTR [esp+0x114]
1003b907:	mov    edx,DWORD PTR [esp+0x110]
1003b90e:	mov    eax,DWORD PTR [esp+0x108]
1003b915:	push   esi
1003b916:	push   0x0
1003b918:	push   ecx
1003b919:	mov    ecx,DWORD PTR [esp+0x110]
1003b920:	push   edx
1003b921:	push   edi
1003b922:	push   eax
1003b923:	push   ecx
1003b924:	push   ebx
1003b925:	push   ebp
1003b926:	call   0x1003a420
1003b92b:	add    esp,0x24
1003b92e:	test   eax,eax
1003b930:	jne    0x1003cf26
1003b936:	sub    ebp,0x1
1003b939:	cmp    ebp,DWORD PTR [esp+0x20]
1003b93d:	jae    0x1003b900
1003b93f:	xor    eax,eax
1003b941:	pop    edi
1003b942:	pop    esi
1003b943:	pop    ebp
1003b944:	pop    ebx
1003b945:	add    esp,0xe8
1003b94b:	ret    
1003b94c:	xor    eax,eax
1003b94e:	mov    ah,BYTE PTR [ebx+0x1]
1003b951:	mov    DWORD PTR [esp+0x20],0x1
1003b959:	add    ebx,0x3
1003b95c:	mov    al,BYTE PTR [ebx-0x1]
1003b95f:	mov    esi,eax
1003b961:	mov    DWORD PTR [esp+0x14],esi
1003b965:	jmp    0x1003ba09
1003b96a:	xor    ecx,ecx
1003b96c:	mov    ch,BYTE PTR [ebx+0x1]
1003b96f:	xor    edx,edx
1003b971:	xor    esi,esi
1003b973:	cmp    BYTE PTR [ebx],0x40
1003b976:	sete   dl
1003b979:	add    ebx,0x3
1003b97c:	mov    cl,BYTE PTR [ebx-0x1]
1003b97f:	mov    DWORD PTR [esp+0x20],edx
1003b983:	mov    DWORD PTR [esp+0x14],ecx
1003b987:	jmp    0x1003ba09
1003b98c:	xor    esi,esi
1003b98e:	mov    DWORD PTR [esp+0x1c],0x1
1003b996:	add    ebx,0x1
1003b999:	jmp    0x1003ba01
1003b99e:	mov    esi,0x1
1003b9a3:	mov    DWORD PTR [esp+0x1c],esi
1003b9a7:	add    ebx,esi
1003b9a9:	jmp    0x1003ba01
1003b9ab:	mov    eax,0x1
1003b9b0:	xor    esi,esi
1003b9b2:	mov    DWORD PTR [esp+0x1c],eax
1003b9b6:	mov    DWORD PTR [esp+0x14],eax
1003b9ba:	add    ebx,eax
1003b9bc:	jmp    0x1003ba09
1003b9be:	xor    eax,eax
1003b9c0:	mov    ah,BYTE PTR [ebx+0x1]
1003b9c3:	xor    esi,esi
1003b9c5:	mov    DWORD PTR [esp+0x1c],0x1
1003b9cd:	add    ebx,0x3
1003b9d0:	mov    al,BYTE PTR [ebx-0x1]
1003b9d3:	mov    DWORD PTR [esp+0x14],eax
1003b9d7:	jmp    0x1003ba09
1003b9d9:	movzx  eax,BYTE PTR [ebx]
1003b9dc:	movsx  esi,BYTE PTR [eax+0x1006f4ef]
1003b9e3:	sub    eax,0x39
1003b9e6:	mov    ecx,eax
1003b9e8:	movsx  eax,BYTE PTR [eax+0x1006f530]
1003b9ef:	and    ecx,0x1
1003b9f2:	add    ebx,0x1
1003b9f5:	test   eax,eax
1003b9f7:	mov    DWORD PTR [esp+0x20],ecx
1003b9fb:	mov    DWORD PTR [esp+0x14],eax
1003b9ff:	jne    0x1003ba09
1003ba01:	mov    DWORD PTR [esp+0x14],0x7fffffff
1003ba09:	mov    edx,DWORD PTR [edi+0x5c]
1003ba0c:	movzx  eax,BYTE PTR [ebx]
1003ba0f:	mov    ecx,edx
1003ba11:	sub    ecx,ebp
1003ba13:	add    ebx,0x1
1003ba16:	cmp    esi,ecx
1003ba18:	mov    DWORD PTR [esp+0x24],eax
1003ba1c:	jg     0x1003c5ff
1003ba22:	test   esi,esi
1003ba24:	jle    0x1003bd5c
1003ba2a:	add    eax,0xfffffffa
1003ba2d:	cmp    eax,0xf
1003ba30:	ja     0x1003cc9a
1003ba36:	jmp    DWORD PTR [eax*4+0x1003d0dc]
1003ba3d:	cmp    esi,0x1
1003ba40:	mov    DWORD PTR [esp+0x18],0x1
1003ba48:	jl     0x1003bd5c
1003ba4e:	mov    edi,edi
1003ba50:	mov    ecx,DWORD PTR [edi+0x18]
1003ba53:	test   ecx,ecx
1003ba55:	je     0x1003ba86
1003ba57:	mov    eax,DWORD PTR [edi+0x5c]
1003ba5a:	cmp    ebp,eax
1003ba5c:	jae    0x1003baaf
1003ba5e:	mov    edi,DWORD PTR [esp+0x10c]
1003ba65:	push   ecx
1003ba66:	add    edi,0x1c
1003ba69:	xor    edx,edx
1003ba6b:	mov    ecx,ebp
1003ba6d:	call   0x10042c90
1003ba72:	add    esp,0x4
1003ba75:	test   eax,eax
1003ba77:	jne    0x1003c5ff
1003ba7d:	mov    edi,DWORD PTR [esp+0x10c]
1003ba84:	jmp    0x1003baaf
1003ba86:	mov    eax,DWORD PTR [edi+0x1c]
1003ba89:	mov    edx,DWORD PTR [edi+0x5c]
1003ba8c:	sub    edx,eax
1003ba8e:	cmp    ebp,edx
1003ba90:	ja     0x1003baaf
1003ba92:	mov    cl,BYTE PTR [ebp+0x0]
1003ba95:	cmp    cl,BYTE PTR [edi+0x20]
1003ba98:	jne    0x1003baaf
1003ba9a:	cmp    eax,0x1
1003ba9d:	je     0x1003c5ff
1003baa3:	mov    dl,BYTE PTR [ebp+0x1]
1003baa6:	cmp    dl,BYTE PTR [edi+0x21]
1003baa9:	je     0x1003c5ff
1003baaf:	mov    eax,DWORD PTR [esp+0x18]
1003bab3:	add    eax,0x1
1003bab6:	add    ebp,0x1
1003bab9:	cmp    eax,esi
1003babb:	mov    DWORD PTR [esp+0x18],eax
1003babf:	jle    0x1003ba50
1003bac1:	jmp    0x1003bd5c
1003bac6:	add    ebp,esi
1003bac8:	jmp    0x1003bd5c
1003bacd:	mov    ecx,0x1
1003bad2:	cmp    esi,ecx
1003bad4:	jl     0x1003bd5c
1003bada:	lea    ebx,[ebx+0x0]
1003bae0:	cmp    ebp,edx
1003bae2:	jae    0x1003c5ff
1003bae8:	movzx  eax,BYTE PTR [ebp+0x0]
1003baec:	sub    eax,0xa
1003baef:	add    ebp,0x1
1003baf2:	cmp    eax,0x7b
1003baf5:	ja     0x1003c5ff
1003bafb:	movzx  eax,BYTE PTR [eax+0x1003d12c]
1003bb02:	jmp    DWORD PTR [eax*4+0x1003d11c]
1003bb09:	cmp    ebp,edx
1003bb0b:	jae    0x1003bb22
1003bb0d:	cmp    BYTE PTR [ebp+0x0],0xa
1003bb11:	jne    0x1003bb22
1003bb13:	add    ebp,0x1
1003bb16:	jmp    0x1003bb22
1003bb18:	cmp    DWORD PTR [edi+0x50],0x0
1003bb1c:	jne    0x1003c5ff
1003bb22:	add    ecx,0x1
1003bb25:	cmp    ecx,esi
1003bb27:	jle    0x1003bae0
1003bb29:	jmp    0x1003bd5c
1003bb2e:	mov    ecx,0x1
1003bb33:	cmp    esi,ecx
1003bb35:	jl     0x1003bd5c
1003bb3b:	jmp    0x1003bb40
1003bb3d:	lea    ecx,[ecx+0x0]
1003bb40:	cmp    ebp,edx
1003bb42:	jae    0x1003c5ff
1003bb48:	movzx  eax,BYTE PTR [ebp+0x0]
1003bb4c:	add    ebp,0x1
1003bb4f:	cmp    eax,0x9
1003bb52:	je     0x1003c5ff
1003bb58:	cmp    eax,0x20
1003bb5b:	je     0x1003c5ff
1003bb61:	cmp    eax,0xa0
1003bb66:	je     0x1003c5ff
1003bb6c:	add    ecx,0x1
1003bb6f:	cmp    ecx,esi
1003bb71:	jle    0x1003bb40
1003bb73:	jmp    0x1003bd5c
1003bb78:	mov    ecx,0x1
1003bb7d:	cmp    esi,ecx
1003bb7f:	jl     0x1003bd5c
1003bb85:	cmp    ebp,edx
1003bb87:	jae    0x1003c5ff
1003bb8d:	movzx  eax,BYTE PTR [ebp+0x0]
1003bb91:	add    ebp,0x1
1003bb94:	cmp    eax,0x9
1003bb97:	je     0x1003bba9
1003bb99:	cmp    eax,0x20
1003bb9c:	je     0x1003bba9
1003bb9e:	cmp    eax,0xa0
1003bba3:	jne    0x1003c5ff
1003bba9:	add    ecx,0x1
1003bbac:	cmp    ecx,esi
1003bbae:	jle    0x1003bb85
1003bbb0:	jmp    0x1003bd5c
1003bbb5:	mov    ecx,0x1
1003bbba:	cmp    esi,ecx
1003bbbc:	jl     0x1003bd5c
1003bbc2:	cmp    ebp,edx
1003bbc4:	jae    0x1003c5ff
1003bbca:	movzx  eax,BYTE PTR [ebp+0x0]
1003bbce:	add    ebp,0x1
1003bbd1:	cmp    eax,0xa
1003bbd4:	jl     0x1003bbea
1003bbd6:	cmp    eax,0xd
1003bbd9:	jle    0x1003c5ff
1003bbdf:	cmp    eax,0x85
1003bbe4:	je     0x1003c5ff
1003bbea:	add    ecx,0x1
1003bbed:	cmp    ecx,esi
1003bbef:	jle    0x1003bbc2
1003bbf1:	jmp    0x1003bd5c
1003bbf6:	mov    ecx,0x1
1003bbfb:	cmp    esi,ecx
1003bbfd:	jl     0x1003bd5c
1003bc03:	cmp    ebp,edx
1003bc05:	jae    0x1003c5ff
1003bc0b:	movzx  eax,BYTE PTR [ebp+0x0]
1003bc0f:	add    ebp,0x1
1003bc12:	cmp    eax,0xa
1003bc15:	jl     0x1003c5ff
1003bc1b:	cmp    eax,0xd
1003bc1e:	jle    0x1003bc2b
1003bc20:	cmp    eax,0x85
1003bc25:	jne    0x1003c5ff
1003bc2b:	add    ecx,0x1
1003bc2e:	cmp    ecx,esi
1003bc30:	jle    0x1003bc03
1003bc32:	jmp    0x1003bd5c
1003bc37:	mov    eax,0x1
1003bc3c:	cmp    esi,eax
1003bc3e:	jl     0x1003bd5c
1003bc44:	mov    ecx,DWORD PTR [edi+0x28]
1003bc47:	jmp    0x1003bc50
1003bc49:	lea    esp,[esp+0x0]
1003bc50:	movzx  edx,BYTE PTR [ebp+0x0]
1003bc54:	mov    dl,BYTE PTR [edx+ecx*1]
1003bc57:	and    dl,0x4
1003bc5a:	add    ebp,0x1
1003bc5d:	test   dl,dl
1003bc5f:	jne    0x1003c5ff
1003bc65:	add    eax,0x1
1003bc68:	cmp    eax,esi
1003bc6a:	jle    0x1003bc50
1003bc6c:	jmp    0x1003bd5c
1003bc71:	mov    eax,0x1
1003bc76:	cmp    esi,eax
1003bc78:	jl     0x1003bd5c
1003bc7e:	mov    ecx,DWORD PTR [edi+0x28]
1003bc81:	movzx  edx,BYTE PTR [ebp+0x0]
1003bc85:	mov    dl,BYTE PTR [edx+ecx*1]
1003bc88:	and    dl,0x4
1003bc8b:	add    ebp,0x1
1003bc8e:	test   dl,dl
1003bc90:	je     0x1003c5ff
1003bc96:	add    eax,0x1
1003bc99:	cmp    eax,esi
1003bc9b:	jle    0x1003bc81
1003bc9d:	jmp    0x1003bd5c
1003bca2:	mov    eax,0x1
1003bca7:	cmp    esi,eax
1003bca9:	jl     0x1003bd5c
1003bcaf:	mov    ecx,DWORD PTR [edi+0x28]
1003bcb2:	movzx  edx,BYTE PTR [ebp+0x0]
1003bcb6:	mov    dl,BYTE PTR [edx+ecx*1]
1003bcb9:	and    dl,0x1
1003bcbc:	add    ebp,0x1
1003bcbf:	test   dl,dl
1003bcc1:	jne    0x1003c5ff
1003bcc7:	add    eax,0x1
1003bcca:	cmp    eax,esi
1003bccc:	jle    0x1003bcb2
1003bcce:	jmp    0x1003bd5c
1003bcd3:	mov    eax,0x1
1003bcd8:	cmp    esi,eax
1003bcda:	jl     0x1003bd5c
1003bce0:	mov    ecx,DWORD PTR [edi+0x28]
1003bce3:	movzx  edx,BYTE PTR [ebp+0x0]
1003bce7:	mov    dl,BYTE PTR [edx+ecx*1]
1003bcea:	and    dl,0x1
1003bced:	add    ebp,0x1
1003bcf0:	test   dl,dl
1003bcf2:	je     0x1003c5ff
1003bcf8:	add    eax,0x1
1003bcfb:	cmp    eax,esi
1003bcfd:	jle    0x1003bce3
1003bcff:	jmp    0x1003bd5c
1003bd01:	mov    eax,0x1
1003bd06:	cmp    esi,eax
1003bd08:	jl     0x1003bd5c
1003bd0a:	mov    ecx,DWORD PTR [edi+0x28]
1003bd0d:	lea    ecx,[ecx+0x0]
1003bd10:	movzx  edx,BYTE PTR [ebp+0x0]
1003bd14:	mov    dl,BYTE PTR [edx+ecx*1]
1003bd17:	and    dl,0x10
1003bd1a:	add    ebp,0x1
1003bd1d:	test   dl,dl
1003bd1f:	jne    0x1003c5ff
1003bd25:	add    eax,0x1
1003bd28:	cmp    eax,esi
1003bd2a:	jle    0x1003bd10
1003bd2c:	jmp    0x1003bd5c
1003bd2e:	mov    eax,0x1
1003bd33:	cmp    esi,eax
1003bd35:	jl     0x1003bd5c
1003bd37:	mov    ecx,DWORD PTR [edi+0x28]
1003bd3a:	lea    ebx,[ebx+0x0]
1003bd40:	movzx  edx,BYTE PTR [ebp+0x0]
1003bd44:	mov    dl,BYTE PTR [edx+ecx*1]
1003bd47:	and    dl,0x10
1003bd4a:	add    ebp,0x1
1003bd4d:	test   dl,dl
1003bd4f:	je     0x1003c5ff
1003bd55:	add    eax,0x1
1003bd58:	cmp    eax,esi
1003bd5a:	jle    0x1003bd40
1003bd5c:	cmp    esi,DWORD PTR [esp+0x14]
1003bd60:	je     0x1003a48c
1003bd66:	cmp    DWORD PTR [esp+0x20],0x0
1003bd6b:	jne    0x1003ccaa
1003bd71:	mov    eax,DWORD PTR [esp+0x24]
1003bd75:	add    eax,0xfffffffa
1003bd78:	cmp    eax,0xf
1003bd7b:	mov    DWORD PTR [esp+0x20],ebp
1003bd7f:	ja     0x1003cc9a
1003bd85:	jmp    DWORD PTR [eax*4+0x1003d1a8]
1003bd8c:	cmp    esi,DWORD PTR [esp+0x14]
1003bd90:	jge    0x1003c0dd
1003bd96:	mov    eax,DWORD PTR [edi+0x5c]
1003bd99:	cmp    ebp,eax
1003bd9b:	jae    0x1003c0dd
1003bda1:	mov    ecx,DWORD PTR [edi+0x18]
1003bda4:	test   ecx,ecx
1003bda6:	je     0x1003bdd0
1003bda8:	mov    edi,DWORD PTR [esp+0x10c]
1003bdaf:	push   ecx
1003bdb0:	add    edi,0x1c
1003bdb3:	xor    edx,edx
1003bdb5:	mov    ecx,ebp
1003bdb7:	call   0x10042c90
1003bdbc:	add    esp,0x4
1003bdbf:	test   eax,eax
1003bdc1:	jne    0x1003c0dd
1003bdc7:	mov    edi,DWORD PTR [esp+0x10c]
1003bdce:	jmp    0x1003bdf6
1003bdd0:	mov    ecx,DWORD PTR [edi+0x1c]
1003bdd3:	sub    eax,ecx
1003bdd5:	cmp    ebp,eax
1003bdd7:	ja     0x1003bdf6
1003bdd9:	mov    al,BYTE PTR [ebp+0x0]
1003bddc:	cmp    al,BYTE PTR [edi+0x20]
1003bddf:	jne    0x1003bdf6
1003bde1:	cmp    ecx,0x1
1003bde4:	je     0x1003c0dd
1003bdea:	mov    cl,BYTE PTR [ebp+0x1]
1003bded:	cmp    cl,BYTE PTR [edi+0x21]
1003bdf0:	je     0x1003c0dd
1003bdf6:	add    esi,0x1
1003bdf9:	add    ebp,0x1
1003bdfc:	cmp    esi,DWORD PTR [esp+0x14]
1003be00:	jl     0x1003bd96
1003be02:	jmp    0x1003c0dd
1003be07:	mov    eax,DWORD PTR [esp+0x14]
1003be0b:	mov    edi,DWORD PTR [edi+0x5c]
1003be0e:	sub    eax,esi
1003be10:	sub    edi,ebp
1003be12:	cmp    eax,edi
1003be14:	jbe    0x1003be18
1003be16:	mov    eax,edi
1003be18:	add    ebp,eax
1003be1a:	jmp    0x1003c0dd
1003be1f:	cmp    esi,DWORD PTR [esp+0x14]
1003be23:	jge    0x1003c0dd
1003be29:	mov    ecx,DWORD PTR [edi+0x5c]
1003be2c:	cmp    ebp,ecx
1003be2e:	jae    0x1003c0dd
1003be34:	movzx  eax,BYTE PTR [ebp+0x0]
1003be38:	cmp    eax,0xd
1003be3b:	jne    0x1003be50
1003be3d:	add    ebp,0x1
1003be40:	cmp    ebp,ecx
1003be42:	jae    0x1003c0dd
1003be48:	cmp    BYTE PTR [ebp+0x0],0xa
1003be4c:	jne    0x1003be77
1003be4e:	jmp    0x1003be74
1003be50:	cmp    eax,0xa
1003be53:	je     0x1003be74
1003be55:	cmp    DWORD PTR [edi+0x50],0x0
1003be59:	jne    0x1003c0dd
1003be5f:	cmp    eax,0xb
1003be62:	je     0x1003be74
1003be64:	cmp    eax,0xc
1003be67:	je     0x1003be74
1003be69:	cmp    eax,0x85
1003be6e:	jne    0x1003c0dd
1003be74:	add    ebp,0x1
1003be77:	add    esi,0x1
1003be7a:	cmp    esi,DWORD PTR [esp+0x14]
1003be7e:	jl     0x1003be2c
1003be80:	jmp    0x1003c0dd
1003be85:	cmp    esi,DWORD PTR [esp+0x14]
1003be89:	jge    0x1003c0dd
1003be8f:	mov    edi,DWORD PTR [edi+0x5c]
1003be92:	cmp    ebp,edi
1003be94:	jae    0x1003c0dd
1003be9a:	movzx  eax,BYTE PTR [ebp+0x0]
1003be9e:	cmp    eax,0x9
1003bea1:	je     0x1003c0dd
1003bea7:	cmp    eax,0x20
1003beaa:	je     0x1003c0dd
1003beb0:	cmp    eax,0xa0
1003beb5:	je     0x1003c0dd
1003bebb:	add    esi,0x1
1003bebe:	add    ebp,0x1
1003bec1:	cmp    esi,DWORD PTR [esp+0x14]
1003bec5:	jl     0x1003be92
1003bec7:	jmp    0x1003c0dd
1003becc:	cmp    esi,DWORD PTR [esp+0x14]
1003bed0:	jge    0x1003c0dd
1003bed6:	mov    edi,DWORD PTR [edi+0x5c]
1003bed9:	cmp    ebp,edi
1003bedb:	jae    0x1003c0dd
1003bee1:	movzx  eax,BYTE PTR [ebp+0x0]
1003bee5:	cmp    eax,0x9
1003bee8:	je     0x1003befa
1003beea:	cmp    eax,0x20
1003beed:	je     0x1003befa
1003beef:	cmp    eax,0xa0
1003bef4:	jne    0x1003c0dd
1003befa:	add    esi,0x1
1003befd:	add    ebp,0x1
1003bf00:	cmp    esi,DWORD PTR [esp+0x14]
1003bf04:	jl     0x1003bed9
1003bf06:	jmp    0x1003c0dd
1003bf0b:	cmp    esi,DWORD PTR [esp+0x14]
1003bf0f:	jge    0x1003c0dd
1003bf15:	mov    edi,DWORD PTR [edi+0x5c]
1003bf18:	cmp    ebp,edi
1003bf1a:	jae    0x1003c0dd
1003bf20:	movzx  eax,BYTE PTR [ebp+0x0]
1003bf24:	cmp    eax,0xa
1003bf27:	je     0x1003c0dd
1003bf2d:	cmp    eax,0xb
1003bf30:	je     0x1003c0dd
1003bf36:	cmp    eax,0xc
1003bf39:	je     0x1003c0dd
1003bf3f:	cmp    eax,0xd
1003bf42:	je     0x1003c0dd
1003bf48:	cmp    eax,0x85
1003bf4d:	je     0x1003c0dd
1003bf53:	add    esi,0x1
1003bf56:	add    ebp,0x1
1003bf59:	cmp    esi,DWORD PTR [esp+0x14]
1003bf5d:	jl     0x1003bf18
1003bf5f:	jmp    0x1003c0dd
1003bf64:	cmp    esi,DWORD PTR [esp+0x14]
1003bf68:	jge    0x1003c0dd
1003bf6e:	mov    edi,DWORD PTR [edi+0x5c]
1003bf71:	cmp    ebp,edi
1003bf73:	jae    0x1003c0dd
1003bf79:	movzx  eax,BYTE PTR [ebp+0x0]
1003bf7d:	cmp    eax,0xa
1003bf80:	je     0x1003bf9c
1003bf82:	cmp    eax,0xb
1003bf85:	je     0x1003bf9c
1003bf87:	cmp    eax,0xc
1003bf8a:	je     0x1003bf9c
1003bf8c:	cmp    eax,0xd
1003bf8f:	je     0x1003bf9c
1003bf91:	cmp    eax,0x85
1003bf96:	jne    0x1003c0dd
1003bf9c:	add    esi,0x1
1003bf9f:	add    ebp,0x1
1003bfa2:	cmp    esi,DWORD PTR [esp+0x14]
1003bfa6:	jl     0x1003bf71
1003bfa8:	jmp    0x1003c0dd
1003bfad:	cmp    esi,DWORD PTR [esp+0x14]
1003bfb1:	jge    0x1003c0dd
1003bfb7:	mov    eax,DWORD PTR [edi+0x5c]
1003bfba:	lea    ebx,[ebx+0x0]
1003bfc0:	cmp    ebp,eax
1003bfc2:	jae    0x1003c0dd
1003bfc8:	movzx  edx,BYTE PTR [ebp+0x0]
1003bfcc:	mov    ecx,DWORD PTR [edi+0x28]
1003bfcf:	test   BYTE PTR [edx+ecx*1],0x4
1003bfd3:	jne    0x1003c0dd
1003bfd9:	add    esi,0x1
1003bfdc:	add    ebp,0x1
1003bfdf:	cmp    esi,DWORD PTR [esp+0x14]
1003bfe3:	jl     0x1003bfc0
1003bfe5:	jmp    0x1003c0dd
1003bfea:	cmp    esi,DWORD PTR [esp+0x14]
1003bfee:	jge    0x1003c0dd
1003bff4:	mov    eax,DWORD PTR [edi+0x5c]
1003bff7:	cmp    ebp,eax
1003bff9:	jae    0x1003c0dd
1003bfff:	movzx  edx,BYTE PTR [ebp+0x0]
1003c003:	mov    ecx,DWORD PTR [edi+0x28]
1003c006:	test   BYTE PTR [edx+ecx*1],0x4
1003c00a:	je     0x1003c0dd
1003c010:	add    esi,0x1
1003c013:	add    ebp,0x1
1003c016:	cmp    esi,DWORD PTR [esp+0x14]
1003c01a:	jl     0x1003bff7
1003c01c:	jmp    0x1003c0dd
1003c021:	cmp    esi,DWORD PTR [esp+0x14]
1003c025:	jge    0x1003c0dd
1003c02b:	mov    eax,DWORD PTR [edi+0x5c]
1003c02e:	mov    edi,edi
1003c030:	cmp    ebp,eax
1003c032:	jae    0x1003c0dd
1003c038:	movzx  edx,BYTE PTR [ebp+0x0]
1003c03c:	mov    ecx,DWORD PTR [edi+0x28]
1003c03f:	test   BYTE PTR [edx+ecx*1],0x1
1003c043:	jne    0x1003c0dd
1003c049:	add    esi,0x1
1003c04c:	add    ebp,0x1
1003c04f:	cmp    esi,DWORD PTR [esp+0x14]
1003c053:	jl     0x1003c030
1003c055:	jmp    0x1003c0dd
1003c05a:	cmp    esi,DWORD PTR [esp+0x14]
1003c05e:	jge    0x1003c0dd
1003c064:	mov    eax,DWORD PTR [edi+0x5c]
1003c067:	cmp    ebp,eax
1003c069:	jae    0x1003c0dd
1003c06f:	movzx  edx,BYTE PTR [ebp+0x0]
1003c073:	mov    ecx,DWORD PTR [edi+0x28]
1003c076:	test   BYTE PTR [edx+ecx*1],0x1
1003c07a:	je     0x1003c0dd
1003c07c:	add    esi,0x1
1003c07f:	add    ebp,0x1
1003c082:	cmp    esi,DWORD PTR [esp+0x14]
1003c086:	jl     0x1003c067
1003c088:	jmp    0x1003c0dd
1003c08a:	cmp    esi,DWORD PTR [esp+0x14]
1003c08e:	jge    0x1003c0dd
1003c090:	mov    eax,DWORD PTR [edi+0x5c]
1003c093:	cmp    ebp,eax
1003c095:	jae    0x1003c0dd
1003c097:	movzx  edx,BYTE PTR [ebp+0x0]
1003c09b:	mov    ecx,DWORD PTR [edi+0x28]
1003c09e:	test   BYTE PTR [edx+ecx*1],0x10
1003c0a2:	jne    0x1003c0dd
1003c0a4:	add    esi,0x1
1003c0a7:	add    ebp,0x1
1003c0aa:	cmp    esi,DWORD PTR [esp+0x14]
1003c0ae:	jl     0x1003c093
1003c0b0:	jmp    0x1003c0dd
1003c0b2:	cmp    esi,DWORD PTR [esp+0x14]
1003c0b6:	jge    0x1003c0dd
1003c0b8:	mov    eax,DWORD PTR [edi+0x5c]
1003c0bb:	jmp    0x1003c0c0
1003c0bd:	lea    ecx,[ecx+0x0]
1003c0c0:	cmp    ebp,eax
1003c0c2:	jae    0x1003c0dd
1003c0c4:	movzx  edx,BYTE PTR [ebp+0x0]
1003c0c8:	mov    ecx,DWORD PTR [edi+0x28]
1003c0cb:	test   BYTE PTR [edx+ecx*1],0x10
1003c0cf:	je     0x1003c0dd
1003c0d1:	add    esi,0x1
1003c0d4:	add    ebp,0x1
1003c0d7:	cmp    esi,DWORD PTR [esp+0x14]
1003c0db:	jl     0x1003c0c0
1003c0dd:	cmp    DWORD PTR [esp+0x1c],0x0
1003c0e2:	je     0x1003cec2
1003c0e8:	mov    edi,DWORD PTR [esp+0x10c]
1003c0ef:	jmp    0x1003a48c
1003c0f4:	xor    edx,edx
1003c0f6:	mov    dh,BYTE PTR [ebx+0x4]
1003c0f9:	mov    dl,BYTE PTR [ebx+0x5]
1003c0fc:	cmp    BYTE PTR [ebx+edx*1+0x3],0x54
1003c101:	lea    ebx,[ebx+edx*1+0x3]
1003c105:	jne    0x1003c116
1003c107:	xor    eax,eax
1003c109:	mov    ah,BYTE PTR [ebx+0x1]
1003c10c:	mov    al,BYTE PTR [ebx+0x2]
1003c10f:	add    ebx,eax
1003c111:	cmp    BYTE PTR [ebx],0x54
1003c114:	je     0x1003c107
1003c116:	add    ebx,0x3
1003c119:	cmp    DWORD PTR [esp+0x24],0x63
1003c11e:	jne    0x1003c370
1003c124:	mov    edx,DWORD PTR [esp+0x11c]
1003c12b:	mov    eax,DWORD PTR [esp+0x114]
1003c132:	mov    ecx,DWORD PTR [esp+0x110]
1003c139:	add    edx,0x1
1003c13c:	push   edx
1003c13d:	mov    edx,DWORD PTR [esp+0x10c]
1003c144:	push   0x2
1003c146:	push   eax
1003c147:	push   ecx
1003c148:	push   edi
1003c149:	push   edx
1003c14a:	push   esi
1003c14b:	push   ebx
1003c14c:	push   ebp
1003c14d:	call   0x1003a420
1003c152:	add    esp,0x24
1003c155:	pop    edi
1003c156:	pop    esi
1003c157:	pop    ebp
1003c158:	pop    ebx
1003c159:	add    esp,0xe8
1003c15f:	ret    
1003c160:	xor    eax,eax
1003c162:	mov    ah,BYTE PTR [ebx+0x3]
1003c165:	mov    al,BYTE PTR [ebx+0x4]
1003c168:	lea    esi,[eax+eax*1]
1003c16b:	cmp    esi,DWORD PTR [edi+0x14]
1003c16e:	mov    DWORD PTR [esp+0x20],eax
1003c172:	jl     0x1003c518
1003c178:	xor    eax,eax
1003c17a:	cmp    DWORD PTR [esp+0x24],0x61
1003c17f:	setl   al
1003c182:	xor    ecx,ecx
1003c184:	mov    ch,BYTE PTR [ebx+0x1]
1003c187:	sub    eax,0x1
1003c18a:	and    eax,0x2
1003c18d:	mov    cl,BYTE PTR [ebx+0x2]
1003c190:	mov    DWORD PTR [esp+0x118],eax
1003c197:	cmp    BYTE PTR [ecx+ebx*1],0x54
1003c19b:	jne    0x1003c218
1003c1a1:	mov    esi,DWORD PTR [esp+0x11c]
1003c1a8:	add    esi,0x1
1003c1ab:	jmp    0x1003c1b0
1003c1ad:	lea    ecx,[ecx+0x0]
1003c1b0:	mov    edx,DWORD PTR [esp+0x114]
1003c1b7:	mov    ecx,DWORD PTR [esp+0x108]
1003c1be:	push   esi
1003c1bf:	push   eax
1003c1c0:	mov    eax,DWORD PTR [esp+0x118]
1003c1c7:	push   edx
1003c1c8:	mov    edx,DWORD PTR [esp+0x110]
1003c1cf:	push   eax
1003c1d0:	movzx  eax,BYTE PTR [ebx]
1003c1d3:	push   edi
1003c1d4:	push   ecx
1003c1d5:	movzx  ecx,BYTE PTR [eax+0x1006e438]
1003c1dc:	push   edx
1003c1dd:	add    ecx,ebx
1003c1df:	push   ecx
1003c1e0:	push   ebp
1003c1e1:	call   0x1003a420
1003c1e6:	add    esp,0x24
1003c1e9:	test   eax,eax
1003c1eb:	je     0x1003c1f8
1003c1ed:	cmp    eax,0xfffffc1c
1003c1f2:	jne    0x1003cf26
1003c1f8:	xor    edx,edx
1003c1fa:	mov    dh,BYTE PTR [ebx+0x1]
1003c1fd:	xor    eax,eax
1003c1ff:	mov    dl,BYTE PTR [ebx+0x2]
1003c202:	mov    ah,BYTE PTR [ebx+edx*1+0x1]
1003c206:	add    ebx,edx
1003c208:	mov    al,BYTE PTR [ebx+0x2]
1003c20b:	cmp    BYTE PTR [eax+ebx*1],0x54
1003c20f:	mov    eax,DWORD PTR [esp+0x118]
1003c216:	je     0x1003c1b0
1003c218:	test   eax,eax
1003c21a:	jne    0x1003c60c
1003c220:	movzx  ecx,BYTE PTR [ebx]
1003c223:	movzx  edx,BYTE PTR [ecx+0x1006e438]
1003c22a:	add    ebx,edx
1003c22c:	jmp    0x1003c37b
1003c231:	cmp    BYTE PTR [ebx+0x3],0x19
1003c235:	lea    esi,[ebx+0x3]
1003c238:	jne    0x1003c253
1003c23a:	mov    edx,DWORD PTR [esp+0x110]
1003c241:	movzx  eax,BYTE PTR [ebx+0x4]
1003c245:	and    edx,0xfffffff8
1003c248:	or     eax,edx
1003c24a:	mov    DWORD PTR [esp+0x110],eax
1003c251:	jmp    0x1003c25a
1003c253:	mov    eax,DWORD PTR [esp+0x110]
1003c25a:	mov    edx,DWORD PTR [esp+0x11c]
1003c261:	add    edx,0x1
1003c264:	cmp    BYTE PTR [ebx],0x57
1003c267:	push   edx
1003c268:	mov    edx,DWORD PTR [esp+0x118]
1003c26f:	jne    0x1003c29a
1003c271:	push   0x0
1003c273:	push   edx
1003c274:	push   eax
1003c275:	mov    eax,DWORD PTR [esp+0x114]
1003c27c:	push   edi
1003c27d:	push   ecx
1003c27e:	push   eax
1003c27f:	push   esi
1003c280:	push   ebp
1003c281:	call   0x1003a420
1003c286:	add    esp,0x24
1003c289:	test   eax,eax
1003c28b:	jne    0x1003cf26
1003c291:	mov    ebx,DWORD PTR [esp+0x1c]
1003c295:	jmp    0x1003c370
1003c29a:	push   0x2
1003c29c:	push   edx
1003c29d:	push   eax
1003c29e:	mov    eax,DWORD PTR [esp+0x114]
1003c2a5:	push   edi
1003c2a6:	push   ecx
1003c2a7:	mov    ecx,DWORD PTR [esp+0x34]
1003c2ab:	push   eax
1003c2ac:	push   ecx
1003c2ad:	push   ebp
1003c2ae:	call   0x1003a420
1003c2b3:	add    esp,0x24
1003c2b6:	test   eax,eax
1003c2b8:	jne    0x1003cf26
1003c2be:	mov    ebx,esi
1003c2c0:	jmp    0x1003c370
1003c2c5:	mov    edx,DWORD PTR [esp+0x1c]
1003c2c9:	cmp    BYTE PTR [edx],0x61
1003c2cc:	sbb    eax,eax
1003c2ce:	and    eax,0xfffffffe
1003c2d1:	add    eax,0x2
1003c2d4:	cmp    BYTE PTR [ebx],0x57
1003c2d7:	mov    DWORD PTR [esp+0x118],eax
1003c2de:	jne    0x1003c331
1003c2e0:	mov    eax,DWORD PTR [esp+0x11c]
1003c2e7:	mov    ecx,DWORD PTR [esp+0x114]
1003c2ee:	mov    edx,DWORD PTR [esp+0x108]
1003c2f5:	add    eax,0x1
1003c2f8:	push   eax
1003c2f9:	mov    eax,DWORD PTR [esp+0x108]
1003c300:	push   0x0
1003c302:	push   ecx
1003c303:	push   esi
1003c304:	push   edi
1003c305:	push   edx
1003c306:	push   eax
1003c307:	add    ebx,0x3
1003c30a:	push   ebx
1003c30b:	push   ebp
1003c30c:	call   0x1003a420
1003c311:	add    esp,0x24
1003c314:	test   eax,eax
1003c316:	jne    0x1003cf26
1003c31c:	mov    eax,DWORD PTR [esp+0x118]
1003c323:	test   eax,eax
1003c325:	jne    0x1003c823
1003c32b:	mov    ebx,DWORD PTR [esp+0x1c]
1003c32f:	jmp    0x1003c37b
1003c331:	mov    ecx,DWORD PTR [esp+0x11c]
1003c338:	mov    edx,DWORD PTR [esp+0x114]
1003c33f:	add    ecx,0x1
1003c342:	push   ecx
1003c343:	mov    ecx,DWORD PTR [esp+0x108]
1003c34a:	push   eax
1003c34b:	mov    eax,DWORD PTR [esp+0x110]
1003c352:	push   edx
1003c353:	mov    edx,DWORD PTR [esp+0x28]
1003c357:	push   esi
1003c358:	push   edi
1003c359:	push   eax
1003c35a:	push   ecx
1003c35b:	push   edx
1003c35c:	push   ebp
1003c35d:	call   0x1003a420
1003c362:	add    esp,0x24
1003c365:	test   eax,eax
1003c367:	jne    0x1003cf26
1003c36d:	add    ebx,0x3
1003c370:	mov    DWORD PTR [esp+0x118],0x0
1003c37b:	mov    eax,DWORD PTR [edi]
1003c37d:	cmp    eax,DWORD PTR [edi+0x4]
1003c380:	jb     0x1003a44a
1003c386:	add    DWORD PTR [edi],0x1
1003c389:	mov    eax,0xfffffff8
1003c38e:	pop    edi
1003c38f:	pop    esi
1003c390:	pop    ebp
1003c391:	pop    ebx
1003c392:	add    esp,0xe8
1003c398:	ret    
1003c399:	mov    eax,0xffffffeb
1003c39e:	pop    edi
1003c39f:	pop    esi
1003c3a0:	pop    ebp
1003c3a1:	pop    ebx
1003c3a2:	add    esp,0xe8
1003c3a8:	ret    
1003c3a9:	mov    ecx,DWORD PTR [esp+0x11c]
1003c3b0:	mov    edx,DWORD PTR [esp+0x118]
1003c3b7:	mov    eax,DWORD PTR [esp+0x114]
1003c3be:	add    ecx,0x1
1003c3c1:	push   ecx
1003c3c2:	mov    ecx,DWORD PTR [esp+0x114]
1003c3c9:	push   edx
1003c3ca:	mov    edx,DWORD PTR [esp+0x110]
1003c3d1:	push   eax
1003c3d2:	movzx  eax,BYTE PTR [ebx]
1003c3d5:	push   ecx
1003c3d6:	movzx  ecx,BYTE PTR [eax+0x1006e438]
1003c3dd:	push   edi
1003c3de:	push   edx
1003c3df:	push   esi
1003c3e0:	add    ecx,ebx
1003c3e2:	push   ecx
1003c3e3:	push   ebp
1003c3e4:	call   0x1003a420
1003c3e9:	add    esp,0x24
1003c3ec:	test   eax,eax
1003c3ee:	jne    0x1003cf26
1003c3f4:	mov    eax,0xfffffc1a
1003c3f9:	pop    edi
1003c3fa:	pop    esi
1003c3fb:	pop    ebp
1003c3fc:	pop    ebx
1003c3fd:	add    esp,0xe8
1003c403:	ret    
1003c404:	mov    edx,DWORD PTR [esp+0x11c]
1003c40b:	mov    eax,DWORD PTR [esp+0x118]
1003c412:	mov    ecx,DWORD PTR [esp+0x114]
1003c419:	add    edx,0x1
1003c41c:	push   edx
1003c41d:	mov    edx,DWORD PTR [esp+0x114]
1003c424:	push   eax
1003c425:	mov    eax,DWORD PTR [esp+0x110]
1003c42c:	push   ecx
1003c42d:	movzx  ecx,BYTE PTR [ebx]
1003c430:	push   edx
1003c431:	movzx  edx,BYTE PTR [ecx+0x1006e438]
1003c438:	push   edi
1003c439:	push   eax
1003c43a:	push   esi
1003c43b:	add    edx,ebx
1003c43d:	push   edx
1003c43e:	push   ebp
1003c43f:	call   0x1003a420
1003c444:	add    esp,0x24
1003c447:	test   eax,eax
1003c449:	jne    0x1003cf26
1003c44f:	mov    eax,0xfffffc19
1003c454:	pop    edi
1003c455:	pop    esi
1003c456:	pop    ebp
1003c457:	pop    ebx
1003c458:	add    esp,0xe8
1003c45e:	ret    
1003c45f:	mov    eax,DWORD PTR [esp+0x11c]
1003c466:	mov    ecx,DWORD PTR [esp+0x118]
1003c46d:	mov    edx,DWORD PTR [esp+0x114]
1003c474:	add    eax,0x1
1003c477:	push   eax
1003c478:	mov    eax,DWORD PTR [esp+0x114]
1003c47f:	push   ecx
1003c480:	mov    ecx,DWORD PTR [esp+0x110]
1003c487:	push   edx
1003c488:	movzx  edx,BYTE PTR [ebx]
1003c48b:	push   eax
1003c48c:	movzx  eax,BYTE PTR [edx+0x1006e438]
1003c493:	push   edi
1003c494:	push   ecx
1003c495:	push   esi
1003c496:	add    eax,ebx
1003c498:	push   eax
1003c499:	push   ebp
1003c49a:	call   0x1003a420
1003c49f:	add    esp,0x24
1003c4a2:	test   eax,eax
1003c4a4:	jne    0x1003cf26
1003c4aa:	mov    DWORD PTR [edi+0x60],ebp
1003c4ad:	mov    eax,0xfffffc1b
1003c4b2:	pop    edi
1003c4b3:	pop    esi
1003c4b4:	pop    ebp
1003c4b5:	pop    ebx
1003c4b6:	add    esp,0xe8
1003c4bc:	ret    
1003c4bd:	mov    ecx,DWORD PTR [esp+0x11c]
1003c4c4:	mov    edx,DWORD PTR [esp+0x118]
1003c4cb:	mov    eax,DWORD PTR [esp+0x114]
1003c4d2:	add    ecx,0x1
1003c4d5:	push   ecx
1003c4d6:	mov    ecx,DWORD PTR [esp+0x114]
1003c4dd:	push   edx
1003c4de:	mov    edx,DWORD PTR [esp+0x110]
1003c4e5:	push   eax
1003c4e6:	movzx  eax,BYTE PTR [ebx]
1003c4e9:	push   ecx
1003c4ea:	movzx  ecx,BYTE PTR [eax+0x1006e438]
1003c4f1:	push   edi
1003c4f2:	push   edx
1003c4f3:	push   esi
1003c4f4:	add    ecx,ebx
1003c4f6:	push   ecx
1003c4f7:	push   ebp
1003c4f8:	call   0x1003a420
1003c4fd:	add    esp,0x24
1003c500:	test   eax,eax
1003c502:	jne    0x1003cf26
1003c508:	mov    eax,0xfffffc1c
1003c50d:	pop    edi
1003c50e:	pop    esi
1003c50f:	pop    ebp
1003c510:	pop    ebx
1003c511:	add    esp,0xe8
1003c517:	ret    
1003c518:	mov    eax,DWORD PTR [edi+0xc]
1003c51b:	mov    edx,DWORD PTR [eax+esi*4]
1003c51e:	mov    ecx,DWORD PTR [eax+esi*4+0x4]
1003c522:	mov    DWORD PTR [esp+0x14],edx
1003c526:	mov    edx,DWORD PTR [edi+0x10]
1003c529:	sub    edx,DWORD PTR [esp+0x20]
1003c52d:	mov    DWORD PTR [esp+0x18],ecx
1003c531:	mov    ecx,DWORD PTR [eax+edx*4]
1003c534:	lea    eax,[eax+edx*4]
1003c537:	mov    edx,DWORD PTR [edi+0x6c]
1003c53a:	mov    DWORD PTR [esp+0x44],ecx
1003c53e:	mov    DWORD PTR [esp+0x28],edx
1003c542:	xor    edx,edx
1003c544:	mov    ecx,ebp
1003c546:	sub    ecx,DWORD PTR [edi+0x58]
1003c549:	cmp    DWORD PTR [esp+0x24],0x62
1003c54e:	mov    DWORD PTR [eax],ecx
1003c550:	mov    eax,DWORD PTR [esp+0x11c]
1003c557:	setne  dl
1003c55a:	sub    edx,0x1
1003c55d:	and    edx,0x2
1003c560:	add    eax,0x1
1003c563:	mov    DWORD PTR [esp+0x118],edx
1003c56a:	mov    DWORD PTR [esp+0x1c],eax
1003c56e:	mov    edi,edi
1003c570:	mov    ecx,DWORD PTR [esp+0x1c]
1003c574:	mov    edx,DWORD PTR [esp+0x118]
1003c57b:	mov    eax,DWORD PTR [esp+0x114]
1003c582:	push   ecx
1003c583:	mov    ecx,DWORD PTR [esp+0x114]
1003c58a:	push   edx
1003c58b:	mov    edx,DWORD PTR [esp+0x110]
1003c592:	push   eax
1003c593:	mov    eax,DWORD PTR [esp+0x110]
1003c59a:	push   ecx
1003c59b:	movzx  ecx,BYTE PTR [ebx]
1003c59e:	push   edi
1003c59f:	push   edx
1003c5a0:	movzx  edx,BYTE PTR [ecx+0x1006e438]
1003c5a7:	push   eax
1003c5a8:	add    edx,ebx
1003c5aa:	push   edx
1003c5ab:	push   ebp
1003c5ac:	call   0x1003a420
1003c5b1:	add    esp,0x24
1003c5b4:	test   eax,eax
1003c5b6:	je     0x1003c5c3
1003c5b8:	cmp    eax,0xfffffc1c
1003c5bd:	jne    0x1003cf26
1003c5c3:	mov    eax,DWORD PTR [esp+0x28]
1003c5c7:	xor    ecx,ecx
1003c5c9:	mov    DWORD PTR [edi+0x6c],eax
1003c5cc:	mov    ch,BYTE PTR [ebx+0x1]
1003c5cf:	mov    cl,BYTE PTR [ebx+0x2]
1003c5d2:	add    ebx,ecx
1003c5d4:	cmp    BYTE PTR [ebx],0x54
1003c5d7:	je     0x1003c570
1003c5d9:	mov    edx,DWORD PTR [edi+0xc]
1003c5dc:	mov    eax,DWORD PTR [esp+0x14]
1003c5e0:	mov    DWORD PTR [edx+esi*4],eax
1003c5e3:	mov    ecx,DWORD PTR [edi+0xc]
1003c5e6:	mov    edx,DWORD PTR [esp+0x18]
1003c5ea:	mov    DWORD PTR [ecx+esi*4+0x4],edx
1003c5ee:	mov    eax,DWORD PTR [edi+0x10]
1003c5f1:	sub    eax,DWORD PTR [esp+0x20]
1003c5f5:	mov    ecx,DWORD PTR [edi+0xc]
1003c5f8:	mov    edx,DWORD PTR [esp+0x44]
1003c5fc:	mov    DWORD PTR [ecx+eax*4],edx
1003c5ff:	xor    eax,eax
1003c601:	pop    edi
1003c602:	pop    esi
1003c603:	pop    ebp
1003c604:	pop    ebx
1003c605:	add    esp,0xe8
1003c60b:	ret    
1003c60c:	mov    ecx,DWORD PTR [esp+0x11c]
1003c613:	mov    edx,DWORD PTR [esp+0x114]
1003c61a:	add    ecx,0x1
1003c61d:	push   ecx
1003c61e:	mov    ecx,DWORD PTR [esp+0x10c]
1003c625:	push   eax
1003c626:	mov    eax,DWORD PTR [esp+0x118]
1003c62d:	push   edx
1003c62e:	mov    edx,DWORD PTR [esp+0x110]
1003c635:	push   eax
1003c636:	movzx  eax,BYTE PTR [ebx]
1003c639:	push   edi
1003c63a:	push   ecx
1003c63b:	movzx  ecx,BYTE PTR [eax+0x1006e438]
1003c642:	push   edx
1003c643:	add    ecx,ebx
1003c645:	push   ecx
1003c646:	push   ebp
1003c647:	call   0x1003a420
1003c64c:	add    esp,0x24
1003c64f:	pop    edi
1003c650:	pop    esi
1003c651:	pop    ebp
1003c652:	pop    ebx
1003c653:	add    esp,0xe8
1003c659:	ret    
1003c65a:	cmp    DWORD PTR [edi+0x44],0x0
1003c65e:	je     0x1003c664
1003c660:	cmp    ebp,esi
1003c662:	je     0x1003c5ff
1003c664:	mov    eax,DWORD PTR [esp+0x108]
1003c66b:	mov    DWORD PTR [edi+0x64],ebp
1003c66e:	mov    DWORD PTR [edi+0x68],eax
1003c671:	mov    DWORD PTR [edi+0x60],esi
1003c674:	mov    eax,0x1
1003c679:	pop    edi
1003c67a:	pop    esi
1003c67b:	pop    ebp
1003c67c:	pop    ebx
1003c67d:	add    esp,0xe8
1003c683:	ret    
1003c684:	mov    eax,DWORD PTR [edi+0x54]
1003c687:	xor    ecx,ecx
1003c689:	mov    ch,BYTE PTR [ebx+0x1]
1003c68c:	mov    cl,BYTE PTR [ebx+0x2]
1003c68f:	add    ecx,eax
1003c691:	mov    esi,ecx
1003c693:	cmp    esi,eax
1003c695:	jne    0x1003c6a1
1003c697:	mov    DWORD PTR [esp+0x30],0x0
1003c69f:	jmp    0x1003c6ad
1003c6a1:	xor    edx,edx
1003c6a3:	mov    dh,BYTE PTR [esi+0x3]
1003c6a6:	mov    dl,BYTE PTR [esi+0x4]
1003c6a9:	mov    DWORD PTR [esp+0x30],edx
1003c6ad:	mov    eax,DWORD PTR [edi+0x7c]
1003c6b0:	lea    ecx,[esp+0x2c]
1003c6b4:	mov    DWORD PTR [edi+0x7c],ecx
1003c6b7:	mov    ecx,DWORD PTR [edi+0x10]
1003c6ba:	add    ebx,0x3
1003c6bd:	cmp    ecx,0x1e
1003c6c0:	mov    DWORD PTR [esp+0x2c],eax
1003c6c4:	mov    DWORD PTR [esp+0x34],ebx
1003c6c8:	mov    DWORD PTR [esp+0x40],ecx
1003c6cc:	jg     0x1003c6db
1003c6ce:	lea    eax,[esp+0x80]
1003c6d5:	mov    DWORD PTR [esp+0x3c],eax
1003c6d9:	jmp    0x1003c708
1003c6db:	lea    edx,[ecx*4+0x0]
1003c6e2:	push   edx
1003c6e3:	call   DWORD PTR ds:0x1007f4f8
1003c6e9:	add    esp,0x4
1003c6ec:	test   eax,eax
1003c6ee:	mov    DWORD PTR [esp+0x3c],eax
1003c6f2:	jne    0x1003c704
1003c6f4:	mov    eax,0xfffffffa
1003c6f9:	pop    edi
1003c6fa:	pop    esi
1003c6fb:	pop    ebp
1003c6fc:	pop    ebx
1003c6fd:	add    esp,0xe8
1003c703:	ret    
1003c704:	mov    ecx,DWORD PTR [esp+0x40]
1003c708:	mov    edx,DWORD PTR [edi+0xc]
1003c70b:	add    ecx,ecx
1003c70d:	add    ecx,ecx
1003c70f:	push   ecx
1003c710:	push   edx
1003c711:	push   eax
1003c712:	call   0x10045270
1003c717:	mov    eax,DWORD PTR [esp+0x110]
1003c71e:	mov    ecx,DWORD PTR [esp+0x128]
1003c725:	mov    DWORD PTR [esp+0x44],eax
1003c729:	mov    al,BYTE PTR [esi]
1003c72b:	add    esp,0xc
1003c72e:	cmp    al,0x61
1003c730:	sbb    ebx,ebx
1003c732:	and    ebx,0xfffffffe
1003c735:	add    ebx,0x2
1003c738:	add    ecx,0x1
1003c73b:	mov    DWORD PTR [esp+0x1c],ecx
1003c73f:	nop
1003c740:	mov    edx,DWORD PTR [esp+0x1c]
1003c744:	mov    ecx,DWORD PTR [esp+0x114]
1003c74b:	push   edx
1003c74c:	mov    edx,DWORD PTR [esp+0x114]
1003c753:	push   ebx
1003c754:	push   ecx
1003c755:	mov    ecx,DWORD PTR [esp+0x114]
1003c75c:	push   edx
1003c75d:	movzx  edx,al
1003c760:	movzx  eax,BYTE PTR [edx+0x1006e438]
1003c767:	push   edi
1003c768:	push   ecx
1003c769:	push   ebp
1003c76a:	add    eax,esi
1003c76c:	push   eax
1003c76d:	push   ebp
1003c76e:	call   0x1003a420
1003c773:	add    esp,0x24
1003c776:	cmp    eax,0x1
1003c779:	je     0x1003c7f3
1003c77f:	test   eax,eax
1003c781:	je     0x1003c78e
1003c783:	cmp    eax,0xfffffc1c
1003c788:	jne    0x1003cf26
1003c78e:	mov    edx,DWORD PTR [esp+0x40]
1003c792:	lea    ecx,[esp+0x2c]
1003c796:	lea    eax,[edx*4+0x0]
1003c79d:	mov    edx,DWORD PTR [edi+0xc]
1003c7a0:	mov    DWORD PTR [edi+0x7c],ecx
1003c7a3:	mov    ecx,DWORD PTR [esp+0x3c]
1003c7a7:	push   eax
1003c7a8:	push   ecx
1003c7a9:	push   edx
1003c7aa:	call   0x10045270
1003c7af:	xor    eax,eax
1003c7b1:	mov    ah,BYTE PTR [esi+0x1]
1003c7b4:	add    esp,0xc
1003c7b7:	mov    al,BYTE PTR [esi+0x2]
1003c7ba:	add    esi,eax
1003c7bc:	mov    al,BYTE PTR [esi]
1003c7be:	cmp    al,0x54
1003c7c0:	je     0x1003c740
1003c7c6:	mov    eax,DWORD PTR [esp+0x2c]
1003c7ca:	mov    DWORD PTR [edi+0x7c],eax
1003c7cd:	mov    eax,DWORD PTR [esp+0x3c]
1003c7d1:	lea    ecx,[esp+0x80]
1003c7d8:	cmp    eax,ecx
1003c7da:	je     0x1003c7e6
1003c7dc:	push   eax
1003c7dd:	call   DWORD PTR ds:0x1007f4fc
1003c7e3:	add    esp,0x4
1003c7e6:	xor    eax,eax
1003c7e8:	pop    edi
1003c7e9:	pop    esi
1003c7ea:	pop    ebp
1003c7eb:	pop    ebx
1003c7ec:	add    esp,0xe8
1003c7f2:	ret    
1003c7f3:	mov    eax,DWORD PTR [esp+0x3c]
1003c7f7:	mov    ecx,DWORD PTR [esp+0x2c]
1003c7fb:	lea    edx,[esp+0x80]
1003c802:	cmp    eax,edx
1003c804:	mov    DWORD PTR [edi+0x7c],ecx
1003c807:	je     0x1003c813
1003c809:	push   eax
1003c80a:	call   DWORD PTR ds:0x1007f4fc
1003c810:	add    esp,0x4
1003c813:	mov    eax,0x1
1003c818:	pop    edi
1003c819:	pop    esi
1003c81a:	pop    ebp
1003c81b:	pop    ebx
1003c81c:	add    esp,0xe8
1003c822:	ret    
1003c823:	mov    edx,DWORD PTR [esp+0x11c]
1003c82a:	mov    ecx,DWORD PTR [esp+0x108]
1003c831:	add    edx,0x1
1003c834:	push   edx
1003c835:	mov    edx,DWORD PTR [esp+0x108]
1003c83c:	push   eax
1003c83d:	mov    eax,DWORD PTR [esp+0x11c]
1003c844:	push   eax
1003c845:	mov    eax,DWORD PTR [esp+0x28]
1003c849:	push   esi
1003c84a:	push   edi
1003c84b:	push   ecx
1003c84c:	push   edx
1003c84d:	push   eax
1003c84e:	push   ebp
1003c84f:	call   0x1003a420
1003c854:	add    esp,0x24
1003c857:	pop    edi
1003c858:	pop    esi
1003c859:	pop    ebp
1003c85a:	pop    ebx
1003c85b:	add    esp,0xe8
1003c861:	ret    
1003c862:	mov    ecx,DWORD PTR [esp+0x108]
1003c869:	mov    DWORD PTR [edi+0x64],ebp
1003c86c:	mov    DWORD PTR [edi+0x68],ecx
1003c86f:	mov    eax,0x1
1003c874:	pop    edi
1003c875:	pop    esi
1003c876:	pop    ebp
1003c877:	pop    ebx
1003c878:	add    esp,0xe8
1003c87e:	ret    
1003c87f:	cmp    eax,ecx
1003c881:	mov    DWORD PTR [esp+0x20],ebp
1003c885:	mov    DWORD PTR [esp+0x18],eax
1003c889:	jge    0x1003c8c1
1003c88b:	mov    edx,DWORD PTR [esp+0x110]
1003c892:	push   edx
1003c893:	mov    edx,DWORD PTR [esp+0x28]
1003c897:	push   ebp
1003c898:	mov    ecx,edi
1003c89a:	mov    eax,esi
1003c89c:	call   0x1003a3a0
1003c8a1:	add    esp,0x8
1003c8a4:	test   eax,eax
1003c8a6:	je     0x1003c8bb
1003c8a8:	mov    eax,DWORD PTR [esp+0x18]
1003c8ac:	add    eax,0x1
1003c8af:	add    ebp,esi
1003c8b1:	cmp    eax,DWORD PTR [esp+0x14]
1003c8b5:	mov    DWORD PTR [esp+0x18],eax
1003c8b9:	jl     0x1003c88b
1003c8bb:	cmp    ebp,DWORD PTR [esp+0x20]
1003c8bf:	jb     0x1003c911
1003c8c1:	mov    eax,DWORD PTR [esp+0x11c]
1003c8c8:	add    eax,0x1
1003c8cb:	mov    DWORD PTR [esp+0x1c],eax
1003c8cf:	mov    ecx,DWORD PTR [esp+0x1c]
1003c8d3:	mov    edx,DWORD PTR [esp+0x114]
1003c8da:	mov    eax,DWORD PTR [esp+0x110]
1003c8e1:	push   ecx
1003c8e2:	mov    ecx,DWORD PTR [esp+0x10c]
1003c8e9:	push   0x0
1003c8eb:	push   edx
1003c8ec:	mov    edx,DWORD PTR [esp+0x110]
1003c8f3:	push   eax
1003c8f4:	push   edi
1003c8f5:	push   ecx
1003c8f6:	push   edx
1003c8f7:	push   ebx
1003c8f8:	push   ebp
1003c8f9:	call   0x1003a420
1003c8fe:	add    esp,0x24
1003c901:	test   eax,eax
1003c903:	jne    0x1003cf26
1003c909:	sub    ebp,esi
1003c90b:	cmp    ebp,DWORD PTR [esp+0x20]
1003c90f:	jae    0x1003c8cf
1003c911:	xor    eax,eax
1003c913:	pop    edi
1003c914:	pop    esi
1003c915:	pop    ebp
1003c916:	pop    ebx
1003c917:	add    esp,0xe8
1003c91d:	ret    
1003c91e:	cmp    eax,esi
1003c920:	mov    DWORD PTR [esp+0x20],ebp
1003c924:	jge    0x1003c961
1003c926:	cmp    ebp,DWORD PTR [edi+0x5c]
1003c929:	jae    0x1003c95b
1003c92b:	movzx  eax,BYTE PTR [ebp+0x0]
1003c92f:	mov    ecx,eax
1003c931:	and    ecx,0x7
1003c934:	mov    edx,0x1
1003c939:	shl    edx,cl
1003c93b:	mov    ecx,DWORD PTR [esp+0x24]
1003c93f:	shr    eax,0x3
1003c942:	mov    al,BYTE PTR [eax+ecx*1]
1003c945:	test   al,dl
1003c947:	je     0x1003c95b
1003c949:	mov    eax,DWORD PTR [esp+0x18]
1003c94d:	add    eax,0x1
1003c950:	add    ebp,0x1
1003c953:	cmp    eax,esi
1003c955:	mov    DWORD PTR [esp+0x18],eax
1003c959:	jl     0x1003c926
1003c95b:	cmp    ebp,DWORD PTR [esp+0x20]
1003c95f:	jb     0x1003c9aa
1003c961:	mov    esi,DWORD PTR [esp+0x11c]
1003c968:	add    esi,0x1
1003c96b:	mov    ecx,DWORD PTR [esp+0x114]
1003c972:	mov    edx,DWORD PTR [esp+0x110]
1003c979:	mov    eax,DWORD PTR [esp+0x108]
1003c980:	push   esi
1003c981:	push   0x0
1003c983:	push   ecx
1003c984:	mov    ecx,DWORD PTR [esp+0x110]
1003c98b:	push   edx
1003c98c:	push   edi
1003c98d:	push   eax
1003c98e:	push   ecx
1003c98f:	push   ebx
1003c990:	push   ebp
1003c991:	call   0x1003a420
1003c996:	add    esp,0x24
1003c999:	test   eax,eax
1003c99b:	jne    0x1003cf26
1003c9a1:	sub    ebp,0x1
1003c9a4:	cmp    ebp,DWORD PTR [esp+0x20]
1003c9a8:	jae    0x1003c96b
1003c9aa:	xor    eax,eax
1003c9ac:	pop    edi
1003c9ad:	pop    esi
1003c9ae:	pop    ebp
1003c9af:	pop    ebx
1003c9b0:	add    esp,0xe8
1003c9b6:	ret    
1003c9b7:	mov    edx,DWORD PTR [esp+0x114]
1003c9be:	mov    ecx,DWORD PTR [esp+0x108]
1003c9c5:	mov    DWORD PTR [esp+0x18],eax
1003c9c9:	mov    eax,DWORD PTR [esp+0x11c]
1003c9d0:	add    eax,0x1
1003c9d3:	push   eax
1003c9d4:	push   0x0
1003c9d6:	push   edx
1003c9d7:	mov    edx,DWORD PTR [esp+0x110]
1003c9de:	mov    DWORD PTR [esp+0x28],eax
1003c9e2:	mov    eax,DWORD PTR [esp+0x11c]
1003c9e9:	push   eax
1003c9ea:	push   edi
1003c9eb:	push   ecx
1003c9ec:	push   edx
1003c9ed:	push   ebx
1003c9ee:	push   ebp
1003c9ef:	call   0x1003a420
1003c9f4:	add    esp,0x24
1003c9f7:	test   eax,eax
1003c9f9:	jne    0x1003cf26
1003c9ff:	nop
1003ca00:	cmp    DWORD PTR [esp+0x18],esi
1003ca04:	jge    0x1003c5ff
1003ca0a:	cmp    ebp,DWORD PTR [edi+0x5c]
1003ca0d:	jae    0x1003c5ff
1003ca13:	movzx  eax,BYTE PTR [ebp+0x0]
1003ca17:	mov    ecx,DWORD PTR [edi+0x24]
1003ca1a:	movzx  edx,BYTE PTR [eax+ecx*1]
1003ca1e:	add    ebp,0x1
1003ca21:	cmp    DWORD PTR [esp+0x14],edx
1003ca25:	jne    0x1003c5ff
1003ca2b:	mov    eax,DWORD PTR [esp+0x1c]
1003ca2f:	mov    ecx,DWORD PTR [esp+0x114]
1003ca36:	mov    edx,DWORD PTR [esp+0x110]
1003ca3d:	add    DWORD PTR [esp+0x18],0x1
1003ca42:	push   eax
1003ca43:	mov    eax,DWORD PTR [esp+0x10c]
1003ca4a:	push   0x0
1003ca4c:	push   ecx
1003ca4d:	mov    ecx,DWORD PTR [esp+0x110]
1003ca54:	push   edx
1003ca55:	push   edi
1003ca56:	push   eax
1003ca57:	push   ecx
1003ca58:	push   ebx
1003ca59:	push   ebp
1003ca5a:	call   0x1003a420
1003ca5f:	add    esp,0x24
1003ca62:	test   eax,eax
1003ca64:	je     0x1003ca00
1003ca66:	pop    edi
1003ca67:	pop    esi
1003ca68:	pop    ebp
1003ca69:	pop    ebx
1003ca6a:	add    esp,0xe8
1003ca70:	ret    
1003ca71:	mov    ecx,DWORD PTR [esp+0x110]
1003ca78:	mov    edx,DWORD PTR [esp+0x108]
1003ca7f:	mov    DWORD PTR [esp+0x18],eax
1003ca83:	mov    eax,DWORD PTR [esp+0x11c]
1003ca8a:	add    eax,0x1
1003ca8d:	push   eax
1003ca8e:	push   0x0
1003ca90:	mov    DWORD PTR [esp+0x24],eax
1003ca94:	mov    eax,DWORD PTR [esp+0x11c]
1003ca9b:	push   eax
1003ca9c:	mov    eax,DWORD PTR [esp+0x110]
1003caa3:	push   ecx
1003caa4:	push   edi
1003caa5:	push   edx
1003caa6:	push   eax
1003caa7:	push   ebx
1003caa8:	push   ebp
1003caa9:	call   0x1003a420
1003caae:	add    esp,0x24
1003cab1:	test   eax,eax
1003cab3:	jne    0x1003cf26
1003cab9:	lea    esp,[esp+0x0]
1003cac0:	cmp    DWORD PTR [esp+0x18],esi
1003cac4:	jge    0x1003c5ff
1003caca:	cmp    ebp,DWORD PTR [edi+0x5c]
1003cacd:	jae    0x1003c5ff
1003cad3:	movzx  ecx,BYTE PTR [ebp+0x0]
1003cad7:	add    ebp,0x1
1003cada:	cmp    DWORD PTR [esp+0x14],ecx
1003cade:	jne    0x1003c5ff
1003cae4:	mov    edx,DWORD PTR [esp+0x1c]
1003cae8:	mov    eax,DWORD PTR [esp+0x114]
1003caef:	mov    ecx,DWORD PTR [esp+0x110]
1003caf6:	add    DWORD PTR [esp+0x18],0x1
1003cafb:	push   edx
1003cafc:	mov    edx,DWORD PTR [esp+0x10c]
1003cb03:	push   0x0
1003cb05:	push   eax
1003cb06:	mov    eax,DWORD PTR [esp+0x110]
1003cb0d:	push   ecx
1003cb0e:	push   edi
1003cb0f:	push   edx
1003cb10:	push   eax
1003cb11:	push   ebx
1003cb12:	push   ebp
1003cb13:	call   0x1003a420
1003cb18:	add    esp,0x24
1003cb1b:	test   eax,eax
1003cb1d:	je     0x1003cac0
1003cb1f:	pop    edi
1003cb20:	pop    esi
1003cb21:	pop    ebp
1003cb22:	pop    ebx
1003cb23:	add    esp,0xe8
1003cb29:	ret    
1003cb2a:	mov    edx,DWORD PTR [esp+0x114]
1003cb31:	mov    ecx,DWORD PTR [esp+0x108]
1003cb38:	mov    DWORD PTR [esp+0x18],eax
1003cb3c:	mov    eax,DWORD PTR [esp+0x11c]
1003cb43:	add    eax,0x1
1003cb46:	push   eax
1003cb47:	push   0x0
1003cb49:	push   edx
1003cb4a:	mov    edx,DWORD PTR [esp+0x110]
1003cb51:	mov    DWORD PTR [esp+0x28],eax
1003cb55:	mov    eax,DWORD PTR [esp+0x11c]
1003cb5c:	push   eax
1003cb5d:	push   edi
1003cb5e:	push   ecx
1003cb5f:	push   edx
1003cb60:	push   ebx
1003cb61:	push   ebp
1003cb62:	call   0x1003a420
1003cb67:	add    esp,0x24
1003cb6a:	test   eax,eax
1003cb6c:	jne    0x1003cf26
1003cb72:	cmp    DWORD PTR [esp+0x18],esi
1003cb76:	jge    0x1003c5ff
1003cb7c:	cmp    ebp,DWORD PTR [edi+0x5c]
1003cb7f:	jae    0x1003c5ff
1003cb85:	movzx  eax,BYTE PTR [ebp+0x0]
1003cb89:	mov    ecx,DWORD PTR [edi+0x24]
1003cb8c:	movzx  edx,BYTE PTR [eax+ecx*1]
1003cb90:	add    ebp,0x1
1003cb93:	cmp    DWORD PTR [esp+0x14],edx
1003cb97:	je     0x1003c5ff
1003cb9d:	mov    eax,DWORD PTR [esp+0x1c]
1003cba1:	mov    ecx,DWORD PTR [esp+0x114]
1003cba8:	mov    edx,DWORD PTR [esp+0x110]
1003cbaf:	add    DWORD PTR [esp+0x18],0x1
1003cbb4:	push   eax
1003cbb5:	mov    eax,DWORD PTR [esp+0x10c]
1003cbbc:	push   0x0
1003cbbe:	push   ecx
1003cbbf:	mov    ecx,DWORD PTR [esp+0x110]
1003cbc6:	push   edx
1003cbc7:	push   edi
1003cbc8:	push   eax
1003cbc9:	push   ecx
1003cbca:	push   ebx
1003cbcb:	push   ebp
1003cbcc:	call   0x1003a420
1003cbd1:	add    esp,0x24
1003cbd4:	test   eax,eax
1003cbd6:	je     0x1003cb72
1003cbd8:	pop    edi
1003cbd9:	pop    esi
1003cbda:	pop    ebp
1003cbdb:	pop    ebx
1003cbdc:	add    esp,0xe8
1003cbe2:	ret    
1003cbe3:	mov    ecx,DWORD PTR [esp+0x110]
1003cbea:	mov    edx,DWORD PTR [esp+0x108]
1003cbf1:	mov    DWORD PTR [esp+0x18],eax
1003cbf5:	mov    eax,DWORD PTR [esp+0x11c]
1003cbfc:	add    eax,0x1
1003cbff:	push   eax
1003cc00:	push   0x0
1003cc02:	mov    DWORD PTR [esp+0x24],eax
1003cc06:	mov    eax,DWORD PTR [esp+0x11c]
1003cc0d:	push   eax
1003cc0e:	mov    eax,DWORD PTR [esp+0x110]
1003cc15:	push   ecx
1003cc16:	push   edi
1003cc17:	push   edx
1003cc18:	push   eax
1003cc19:	push   ebx
1003cc1a:	push   ebp
1003cc1b:	call   0x1003a420
1003cc20:	add    esp,0x24
1003cc23:	test   eax,eax
1003cc25:	jne    0x1003cf26
1003cc2b:	jmp    0x1003cc30
1003cc2d:	lea    ecx,[ecx+0x0]
1003cc30:	cmp    DWORD PTR [esp+0x18],esi
1003cc34:	jge    0x1003c5ff
1003cc3a:	cmp    ebp,DWORD PTR [edi+0x5c]
1003cc3d:	jae    0x1003c5ff
1003cc43:	movzx  ecx,BYTE PTR [ebp+0x0]
1003cc47:	add    ebp,0x1
1003cc4a:	cmp    DWORD PTR [esp+0x14],ecx
1003cc4e:	je     0x1003c5ff
1003cc54:	mov    edx,DWORD PTR [esp+0x1c]
1003cc58:	mov    eax,DWORD PTR [esp+0x114]
1003cc5f:	mov    ecx,DWORD PTR [esp+0x110]
1003cc66:	add    DWORD PTR [esp+0x18],0x1
1003cc6b:	push   edx
1003cc6c:	mov    edx,DWORD PTR [esp+0x10c]
1003cc73:	push   0x0
1003cc75:	push   eax
1003cc76:	mov    eax,DWORD PTR [esp+0x110]
1003cc7d:	push   ecx
1003cc7e:	push   edi
1003cc7f:	push   edx
1003cc80:	push   eax
1003cc81:	push   ebx
1003cc82:	push   ebp
1003cc83:	call   0x1003a420
1003cc88:	add    esp,0x24
1003cc8b:	test   eax,eax
1003cc8d:	je     0x1003cc30
1003cc8f:	pop    edi
1003cc90:	pop    esi
1003cc91:	pop    ebp
1003cc92:	pop    ebx
1003cc93:	add    esp,0xe8
1003cc99:	ret    
1003cc9a:	mov    eax,0xfffffff2
1003cc9f:	pop    edi
1003cca0:	pop    esi
1003cca1:	pop    ebp
1003cca2:	pop    ebx
1003cca3:	add    esp,0xe8
1003cca9:	ret    
1003ccaa:	mov    edx,DWORD PTR [esp+0x114]
1003ccb1:	mov    eax,DWORD PTR [esp+0x110]
1003ccb8:	mov    ecx,DWORD PTR [esp+0x108]
1003ccbf:	mov    DWORD PTR [esp+0x18],esi
1003ccc3:	mov    esi,DWORD PTR [esp+0x11c]
1003ccca:	add    esi,0x1
1003cccd:	push   esi
1003ccce:	push   0x0
1003ccd0:	push   edx
1003ccd1:	mov    edx,DWORD PTR [esp+0x110]
1003ccd8:	push   eax
1003ccd9:	push   edi
1003ccda:	push   ecx
1003ccdb:	push   edx
1003ccdc:	push   ebx
1003ccdd:	push   ebp
1003ccde:	call   0x1003a420
1003cce3:	add    esp,0x24
1003cce6:	test   eax,eax
1003cce8:	jne    0x1003cf26
1003ccee:	mov    eax,DWORD PTR [esp+0x18]
1003ccf2:	cmp    eax,DWORD PTR [esp+0x14]
1003ccf6:	jge    0x1003c5ff
1003ccfc:	mov    eax,DWORD PTR [edi+0x5c]
1003ccff:	cmp    ebp,eax
1003cd01:	jae    0x1003c5ff
1003cd07:	cmp    DWORD PTR [esp+0x24],0xc
1003cd0c:	jne    0x1003cd63
1003cd0e:	mov    ecx,DWORD PTR [edi+0x18]
1003cd11:	test   ecx,ecx
1003cd13:	je     0x1003cd3d
1003cd15:	mov    edi,DWORD PTR [esp+0x10c]
1003cd1c:	push   ecx
1003cd1d:	add    edi,0x1c
1003cd20:	xor    edx,edx
1003cd22:	mov    ecx,ebp
1003cd24:	call   0x10042c90
1003cd29:	add    esp,0x4
1003cd2c:	test   eax,eax
1003cd2e:	jne    0x1003c5ff
1003cd34:	mov    edi,DWORD PTR [esp+0x10c]
1003cd3b:	jmp    0x1003cd63
1003cd3d:	mov    ecx,DWORD PTR [edi+0x1c]
1003cd40:	sub    eax,ecx
1003cd42:	cmp    ebp,eax
1003cd44:	ja     0x1003cd63
1003cd46:	mov    dl,BYTE PTR [ebp+0x0]
1003cd49:	cmp    dl,BYTE PTR [edi+0x20]
1003cd4c:	jne    0x1003cd63
1003cd4e:	cmp    ecx,0x1
1003cd51:	je     0x1003c5ff
1003cd57:	mov    al,BYTE PTR [ebp+0x1]
1003cd5a:	cmp    al,BYTE PTR [edi+0x21]
1003cd5d:	je     0x1003c5ff
1003cd63:	mov    ecx,DWORD PTR [esp+0x24]
1003cd67:	movzx  eax,BYTE PTR [ebp+0x0]
1003cd6b:	add    ecx,0xfffffffa
1003cd6e:	add    ebp,0x1
1003cd71:	cmp    ecx,0xf
1003cd74:	ja     0x1003cc9a
1003cd7a:	jmp    DWORD PTR [ecx*4+0x1003d1e8]
1003cd81:	add    eax,0xfffffff6
1003cd84:	cmp    eax,0x7b
1003cd87:	ja     0x1003c5ff
1003cd8d:	movzx  ecx,BYTE PTR [eax+0x1003d238]
1003cd94:	jmp    DWORD PTR [ecx*4+0x1003d228]
1003cd9b:	cmp    ebp,DWORD PTR [edi+0x5c]
1003cd9e:	jae    0x1003ce7c
1003cda4:	cmp    BYTE PTR [ebp+0x0],0xa
1003cda8:	jne    0x1003ce7c
1003cdae:	add    ebp,0x1
1003cdb1:	jmp    0x1003ce7c
1003cdb6:	cmp    DWORD PTR [edi+0x50],0x0
1003cdba:	jne    0x1003c5ff
1003cdc0:	jmp    0x1003ce7c
1003cdc5:	cmp    eax,0x9
1003cdc8:	je     0x1003c5ff
1003cdce:	cmp    eax,0x20
1003cdd1:	je     0x1003c5ff
1003cdd7:	cmp    eax,0xa0
1003cddc:	jmp    0x1003ce76
1003cde1:	cmp    eax,0x9
1003cde4:	je     0x1003ce7c
1003cdea:	cmp    eax,0x20
1003cded:	je     0x1003ce7c
1003cdf3:	cmp    eax,0xa0
1003cdf8:	jne    0x1003c5ff
1003cdfe:	jmp    0x1003ce7c
1003ce00:	cmp    eax,0xa
1003ce03:	jb     0x1003ce7c
1003ce05:	cmp    eax,0xd
1003ce08:	jbe    0x1003c5ff
1003ce0e:	cmp    eax,0x85
1003ce13:	jmp    0x1003ce76
1003ce15:	cmp    eax,0xa
1003ce18:	jb     0x1003c5ff
1003ce1e:	cmp    eax,0xd
1003ce21:	jbe    0x1003ce7c
1003ce23:	cmp    eax,0x85
1003ce28:	jne    0x1003c5ff
1003ce2e:	jmp    0x1003ce7c
1003ce30:	mov    edx,DWORD PTR [edi+0x28]
1003ce33:	test   BYTE PTR [eax+edx*1],0x4
1003ce37:	jne    0x1003c5ff
1003ce3d:	jmp    0x1003ce7c
1003ce3f:	mov    ecx,DWORD PTR [edi+0x28]
1003ce42:	test   BYTE PTR [eax+ecx*1],0x4
1003ce46:	jmp    0x1003ce76
1003ce48:	mov    edx,DWORD PTR [edi+0x28]
1003ce4b:	test   BYTE PTR [eax+edx*1],0x1
1003ce4f:	jne    0x1003c5ff
1003ce55:	jmp    0x1003ce7c
1003ce57:	mov    ecx,DWORD PTR [edi+0x28]
1003ce5a:	test   BYTE PTR [eax+ecx*1],0x1
1003ce5e:	jmp    0x1003ce76
1003ce60:	mov    edx,DWORD PTR [edi+0x28]
1003ce63:	test   BYTE PTR [eax+edx*1],0x10
1003ce67:	jne    0x1003c5ff
1003ce6d:	jmp    0x1003ce7c
1003ce6f:	mov    ecx,DWORD PTR [edi+0x28]
1003ce72:	test   BYTE PTR [eax+ecx*1],0x10
1003ce76:	je     0x1003c5ff
1003ce7c:	mov    edx,DWORD PTR [esp+0x114]
1003ce83:	mov    eax,DWORD PTR [esp+0x110]
1003ce8a:	mov    ecx,DWORD PTR [esp+0x108]
1003ce91:	add    DWORD PTR [esp+0x18],0x1
1003ce96:	push   esi
1003ce97:	push   0x0
1003ce99:	push   edx
1003ce9a:	mov    edx,DWORD PTR [esp+0x110]
1003cea1:	push   eax
1003cea2:	push   edi
1003cea3:	push   ecx
1003cea4:	push   edx
1003cea5:	push   ebx
1003cea6:	push   ebp
1003cea7:	call   0x1003a420
1003ceac:	add    esp,0x24
1003ceaf:	test   eax,eax
1003ceb1:	je     0x1003ccee
1003ceb7:	pop    edi
1003ceb8:	pop    esi
1003ceb9:	pop    ebp
1003ceba:	pop    ebx
1003cebb:	add    esp,0xe8
1003cec1:	ret    
1003cec2:	cmp    ebp,DWORD PTR [esp+0x20]
1003cec6:	jb     0x1003cf14
1003cec8:	mov    esi,DWORD PTR [esp+0x11c]
1003cecf:	mov    edi,DWORD PTR [esp+0x104]
1003ced6:	add    esi,0x1
1003ced9:	mov    eax,DWORD PTR [esp+0x114]
1003cee0:	mov    ecx,DWORD PTR [esp+0x110]
1003cee7:	mov    edx,DWORD PTR [esp+0x10c]
1003ceee:	push   esi
1003ceef:	push   0x0
1003cef1:	push   eax
1003cef2:	mov    eax,DWORD PTR [esp+0x114]
1003cef9:	push   ecx
1003cefa:	push   edx
1003cefb:	push   eax
1003cefc:	push   edi
1003cefd:	push   ebx
1003cefe:	push   ebp
1003ceff:	call   0x1003a420
1003cf04:	add    esp,0x24
1003cf07:	sub    ebp,0x1
1003cf0a:	test   eax,eax
1003cf0c:	jne    0x1003cf26
1003cf0e:	cmp    ebp,DWORD PTR [esp+0x20]
1003cf12:	jae    0x1003ced9
1003cf14:	xor    eax,eax
1003cf16:	pop    edi
1003cf17:	pop    esi
1003cf18:	pop    ebp
1003cf19:	pop    ebx
1003cf1a:	add    esp,0xe8
1003cf20:	ret    
1003cf21:	mov    eax,0xfffffffb
1003cf26:	pop    edi
1003cf27:	pop    esi
1003cf28:	pop    ebp
1003cf29:	pop    ebx
1003cf2a:	add    esp,0xe8
1003cf30:	ret    
1003cf31:	lea    ecx,[ecx+0x0]
1003cf34:	mov    dl,0xa5
1003cf36:	add    edx,DWORD PTR [eax]
1003cf38:	imul   BYTE PTR [edx-0x54f8effd]
1003cf3e:	add    edx,DWORD PTR [eax]
1003cf40:	sbb    eax,0x511003ab
1003cf45:	lods   al,BYTE PTR ds:[esi]
1003cf46:	add    edx,DWORD PTR [eax]
1003cf48:	inc    ebp
1003cf49:	lods   eax,DWORD PTR ds:[esi]
1003cf4a:	add    edx,DWORD PTR [eax]
1003cf4c:	push   0xffffffad
1003cf4e:	add    edx,DWORD PTR [eax]
1003cf50:	(bad)  
1003cf51:	lods   eax,DWORD PTR ds:[esi]
1003cf52:	add    edx,DWORD PTR [eax]
1003cf54:	mov    ah,0xad
1003cf56:	add    edx,DWORD PTR [eax]
1003cf58:	fldcw  WORD PTR [ebp-0x5201effd]
1003cf5e:	add    edx,DWORD PTR [eax]
1003cf60:	mov    edx,0x191003ac
1003cf65:	lods   eax,DWORD PTR ds:[esi]
1003cf66:	add    edx,DWORD PTR [eax]
1003cf68:	das    
1003cf69:	lods   eax,DWORD PTR ds:[esi]
1003cf6a:	add    edx,DWORD PTR [eax]
1003cf6c:	and    ebp,DWORD PTR [esi-0x516feffd]
1003cf72:	add    edx,DWORD PTR [eax]
1003cf74:	or     BYTE PTR [edi-0x508feffd],ch
1003cf7a:	add    edx,DWORD PTR [eax]
1003cf7c:	mov    cl,0xaf
1003cf7e:	add    edx,DWORD PTR [eax]
1003cf80:	mov    esi,0x401003ab
1003cf85:	lods   al,BYTE PTR ds:[esi]
1003cf86:	add    edx,DWORD PTR [eax]
1003cf88:	add    DWORD PTR [esi-0x5599effd],esp
1003cf8e:	add    edx,DWORD PTR [eax]
1003cf90:	sub    al,0xab
1003cf92:	add    edx,DWORD PTR [eax]
1003cf94:	shl    BYTE PTR [ebx-0x4c08effd],cl
1003cf9a:	add    edx,DWORD PTR [eax]
1003cf9c:	jg     0x1003cf54
1003cf9e:	add    edx,DWORD PTR [eax]
1003cfa0:	mov    DWORD PTR [ebx+eax*1+0x3b44110],esi
1003cfa7:	adc    BYTE PTR [edi],ah
1003cfa9:	mov    ah,0x3
1003cfab:	adc    BYTE PTR [esi-0x4c],bl
1003cfae:	add    edx,DWORD PTR [eax]
1003cfb0:	ins    DWORD PTR es:[edi],dx
1003cfb1:	mov    ah,0x3
1003cfb3:	adc    BYTE PTR [edx-0x4c],bh
1003cfb6:	add    edx,DWORD PTR [eax]
1003cfb8:	cmp    DWORD PTR [ebx+eax*1+0x3b75110],esi
1003cfbf:	adc    ch,ch
1003cfc1:	mov    dh,0x3
1003cfc3:	adc    cl,bl
1003cfc5:	mov    dh,0x3
1003cfc7:	adc    BYTE PTR ds:0x1c1003b7,cl
1003cfcd:	mov    bh,0x3
1003cfcf:	adc    BYTE PTR [ecx],ch
1003cfd1:	mov    bh,0x3
1003cfd3:	adc    BYTE PTR [eax],bh
1003cfd5:	mov    bh,0x3
1003cfd7:	adc    cl,bl
1003cfd9:	mov    ecx,0xb96a1003
1003cfde:	add    edx,DWORD PTR [eax]
1003cfe0:	dec    esp
1003cfe1:	mov    ecx,0xb98c1003
1003cfe6:	add    edx,DWORD PTR [eax]
1003cfe8:	sahf   
1003cfe9:	mov    ecx,0xb9ab1003
1003cfee:	add    edx,DWORD PTR [eax]
1003cff0:	mov    esi,0xf1003b9
1003cff5:	mov    dl,0x3
1003cff7:	adc    dh,dh
1003cff9:	scas   eax,DWORD PTR es:[edi]
1003cffa:	add    edx,DWORD PTR [eax]
1003cffc:	test   dh,al
1003cffe:	add    edx,DWORD PTR [eax]
1003d000:	xor    DWORD PTR [edi-0x578beffd],esp
1003d006:	add    edx,DWORD PTR [eax]
1003d008:	dec    edx
1003d009:	test   eax,0xa6141003
1003d00e:	add    edx,DWORD PTR [eax]
1003d010:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
1003d011:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
1003d012:	add    edx,DWORD PTR [eax]
1003d014:	push   ss
1003d015:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
1003d016:	add    edx,DWORD PTR [eax]
1003d018:	int    0xa7
1003d01a:	add    edx,DWORD PTR [eax]
1003d01c:	js     0x1003cfdf
1003d01e:	add    edx,DWORD PTR [eax]
1003d020:	pusha  
1003d021:	rol    DWORD PTR [ebx],0x10
1003d024:	fldenv [ebx+eax*1+0x3a88810]
1003d02b:	adc    bl,bl
1003d02d:	test   al,0x3
1003d02f:	adc    BYTE PTR [ecx+0x5f1003c3],ch
1003d035:	les    eax,FWORD PTR [ebx]
1003d037:	adc    BYTE PTR [ebp+0x41003c4],bh
1003d03d:	les    eax,FWORD PTR [ebx]
1003d03f:	adc    bh,bh
1003d041:	lds    eax,FWORD PTR [ebx]
1003d043:	adc    BYTE PTR [eax],dh
1003d045:	test   eax,0xcf211003
1003d04a:	add    edx,DWORD PTR [eax]
1003d04c:	add    BYTE PTR [ecx],al
1003d04e:	add    al,BYTE PTR [ebx]
1003d050:	add    al,0x4
1003d052:	add    eax,0x9080706
1003d057:	or     cl,BYTE PTR [ebx]
1003d059:	or     al,0xd
1003d05b:	inc    ebp
1003d05c:	inc    ebp
1003d05d:	push   cs
1003d05e:	movups xmm2,XMMWORD PTR [ecx]
1003d061:	adc    al,BYTE PTR [ebp+0x13]
1003d064:	adc    al,0x15
1003d066:	push   ss
1003d067:	pop    ss
1003d068:	sbb    BYTE PTR [ecx],bl
1003d06a:	sbb    bl,BYTE PTR [ebx]
1003d06c:	sbb    ebx,DWORD PTR [ebx]
1003d06e:	sbb    ebx,DWORD PTR [ebx]
1003d070:	sbb    ebx,DWORD PTR [esp+ebx*1]
1003d073:	sbb    eax,0x21201f1e
1003d078:	and    ah,BYTE PTR [edx]
1003d07a:	and    ah,BYTE PTR [edx]
1003d07c:	and    ah,BYTE PTR [edx]
1003d07e:	and    esp,DWORD PTR [ebx]
1003d080:	and    al,0x25
1003d082:	es daa 
1003d084:	sub    BYTE PTR [ecx],ch
1003d086:	sub    DWORD PTR [ecx],ebp
1003d088:	sub    DWORD PTR [ecx],ebp
1003d08a:	sub    DWORD PTR [edx],ebp
1003d08c:	sub    ch,BYTE PTR [ebx]
1003d08e:	sub    al,0x2d
1003d090:	cs das 
1003d092:	inc    ebp
1003d093:	inc    ebp
1003d094:	inc    ebp
1003d095:	inc    ebp
1003d096:	inc    ebp
1003d097:	inc    ebp
1003d098:	inc    ebp
1003d099:	inc    ebp
1003d09a:	xor    BYTE PTR [eax],dh
1003d09c:	inc    ebp
1003d09d:	xor    DWORD PTR [edx],esi
1003d09f:	xor    esi,DWORD PTR [esi*1+0x37363535]
1003d0a6:	ss aaa 
1003d0a8:	cmp    BYTE PTR [ecx],bh
1003d0aa:	cmp    bh,BYTE PTR [ebx]
1003d0ac:	cmp    al,0x3a
1003d0ae:	cmp    edi,DWORD PTR [eax*2+0x3e3d4545]
1003d0b5:	aas    
1003d0b6:	inc    eax
1003d0b7:	inc    ecx
1003d0b8:	inc    edx
1003d0b9:	inc    ebx
1003d0ba:	add    BYTE PTR [ebp+edx*2-0x50],al
1003d0be:	add    edx,DWORD PTR [eax]
1003d0c0:	mov    BYTE PTR [eax+0x1003],dh
1003d0c6:	add    BYTE PTR [eax],al
1003d0c8:	add    BYTE PTR [eax],al
1003d0ca:	add    DWORD PTR [ecx],eax
1003d0cc:	cmp    DWORD PTR [edx-0x4d9aeffd],esi
1003d0d2:	add    edx,DWORD PTR [eax]
1003d0d4:	add    BYTE PTR [eax],al
1003d0d6:	add    BYTE PTR [eax],al
1003d0d8:	add    BYTE PTR [eax],al
1003d0da:	add    DWORD PTR [ecx],eax
1003d0dc:	aaa    
1003d0dd:	mov    esp,0xbc711003
1003d0e2:	add    edx,DWORD PTR [eax]
1003d0e4:	mov    ds:0xd31003bc,al
1003d0e9:	mov    esp,0xbd011003
1003d0ee:	add    edx,DWORD PTR [eax]
1003d0f0:	cs mov ebp,0xba3d1003
1003d0f6:	add    edx,DWORD PTR [eax]
1003d0f8:	(bad)  
1003d0f9:	mov    edx,0xbac61003
1003d0fe:	add    edx,DWORD PTR [eax]
1003d100:	call   0x3cc:0x9a1003cc
1003d107:	adc    ch,cl
1003d109:	mov    edx,0xbb2e1003
1003d10e:	add    edx,DWORD PTR [eax]
1003d110:	js     0x1003d0cd
1003d112:	add    edx,DWORD PTR [eax]
1003d114:	mov    ch,0xbb
1003d116:	add    edx,DWORD PTR [eax]
1003d118:	idiv   BYTE PTR [ebx-0x44ddeffd]
1003d11e:	add    edx,DWORD PTR [eax]
1003d120:	sbb    BYTE PTR [ebx-0x44f6effd],bh
1003d126:	add    edx,DWORD PTR [eax]
1003d128:	inc    ebp
1003d12a:	add    edx,DWORD PTR [eax]
1003d12c:	add    BYTE PTR [ecx],al
1003d12e:	add    DWORD PTR [edx],eax
1003d130:	add    eax,DWORD PTR [ebx]
1003d132:	add    eax,DWORD PTR [ebx]
1003d134:	add    eax,DWORD PTR [ebx]
1003d136:	add    eax,DWORD PTR [ebx]
1003d138:	add    eax,DWORD PTR [ebx]
1003d13a:	add    eax,DWORD PTR [ebx]
1003d13c:	add    eax,DWORD PTR [ebx]
1003d13e:	add    eax,DWORD PTR [ebx]
1003d140:	add    eax,DWORD PTR [ebx]
1003d142:	add    eax,DWORD PTR [ebx]
1003d144:	add    eax,DWORD PTR [ebx]
1003d146:	add    eax,DWORD PTR [ebx]
1003d148:	add    eax,DWORD PTR [ebx]
1003d14a:	add    eax,DWORD PTR [ebx]
1003d14c:	add    eax,DWORD PTR [ebx]
1003d14e:	add    eax,DWORD PTR [ebx]
1003d150:	add    eax,DWORD PTR [ebx]
1003d152:	add    eax,DWORD PTR [ebx]
1003d154:	add    eax,DWORD PTR [ebx]
1003d156:	add    eax,DWORD PTR [ebx]
1003d158:	add    eax,DWORD PTR [ebx]
1003d15a:	add    eax,DWORD PTR [ebx]
1003d15c:	add    eax,DWORD PTR [ebx]
1003d15e:	add    eax,DWORD PTR [ebx]
1003d160:	add    eax,DWORD PTR [ebx]
1003d162:	add    eax,DWORD PTR [ebx]
1003d164:	add    eax,DWORD PTR [ebx]
1003d166:	add    eax,DWORD PTR [ebx]
1003d168:	add    eax,DWORD PTR [ebx]
1003d16a:	add    eax,DWORD PTR [ebx]
1003d16c:	add    eax,DWORD PTR [ebx]
1003d16e:	add    eax,DWORD PTR [ebx]
1003d170:	add    eax,DWORD PTR [ebx]
1003d172:	add    eax,DWORD PTR [ebx]
1003d174:	add    eax,DWORD PTR [ebx]
1003d176:	add    eax,DWORD PTR [ebx]
1003d178:	add    eax,DWORD PTR [ebx]
1003d17a:	add    eax,DWORD PTR [ebx]
1003d17c:	add    eax,DWORD PTR [ebx]
1003d17e:	add    eax,DWORD PTR [ebx]
1003d180:	add    eax,DWORD PTR [ebx]
1003d182:	add    eax,DWORD PTR [ebx]
1003d184:	add    eax,DWORD PTR [ebx]
1003d186:	add    eax,DWORD PTR [ebx]
1003d188:	add    eax,DWORD PTR [ebx]
1003d18a:	add    eax,DWORD PTR [ebx]
1003d18c:	add    eax,DWORD PTR [ebx]
1003d18e:	add    eax,DWORD PTR [ebx]
1003d190:	add    eax,DWORD PTR [ebx]
1003d192:	add    eax,DWORD PTR [ebx]
1003d194:	add    eax,DWORD PTR [ebx]
1003d196:	add    eax,DWORD PTR [ebx]
1003d198:	add    eax,DWORD PTR [ebx]
1003d19a:	add    eax,DWORD PTR [ebx]
1003d19c:	add    eax,DWORD PTR [ebx]
1003d19e:	add    eax,DWORD PTR [ebx]
1003d1a0:	add    eax,DWORD PTR [ebx]
1003d1a2:	add    eax,DWORD PTR [ebx]
1003d1a4:	add    eax,DWORD PTR [ebx]
1003d1a6:	add    eax,DWORD PTR [ecx]
1003d1a8:	lods   eax,DWORD PTR ds:[esi]
1003d1a9:	mov    edi,0xbfea1003
1003d1ae:	add    edx,DWORD PTR [eax]
1003d1b0:	and    eax,eax
1003d1b2:	add    edx,DWORD PTR [eax]
1003d1b4:	pop    edx
1003d1b5:	rol    BYTE PTR [ebx],0x10
1003d1b8:	mov    al,al
1003d1ba:	add    edx,DWORD PTR [eax]
1003d1bc:	mov    dl,0xc0
1003d1be:	add    edx,DWORD PTR [eax]
1003d1c0:	mov    WORD PTR [ebp-0x41f8effd],?
1003d1c6:	add    edx,DWORD PTR [eax]
1003d1c8:	pop    es
1003d1c9:	mov    esi,0xcc9a1003
1003d1ce:	add    edx,DWORD PTR [eax]
1003d1d0:	call   0x3be:0x1f1003cc
1003d1d7:	adc    BYTE PTR [ebp-0x33effc42],al
1003d1dd:	mov    esi,0xbf0b1003
1003d1e2:	add    edx,DWORD PTR [eax]
1003d1e4:	fs mov edi,0xce301003
1003d1ea:	add    edx,DWORD PTR [eax]
1003d1ec:	aas    
1003d1ed:	into   
1003d1ee:	add    edx,DWORD PTR [eax]
1003d1f0:	dec    eax
1003d1f1:	into   
1003d1f2:	add    edx,DWORD PTR [eax]
1003d1f4:	push   edi
1003d1f5:	into   
1003d1f6:	add    edx,DWORD PTR [eax]
1003d1f8:	pusha  
1003d1f9:	into   
1003d1fa:	add    edx,DWORD PTR [eax]
1003d1fc:	outs   dx,DWORD PTR ds:[esi]
1003d1fd:	into   
1003d1fe:	add    edx,DWORD PTR [eax]
1003d200:	jl     0x1003d1d0
1003d202:	add    edx,DWORD PTR [eax]
1003d204:	jl     0x1003d1d4
1003d206:	add    edx,DWORD PTR [eax]
1003d208:	jl     0x1003d1d8
1003d20a:	add    edx,DWORD PTR [eax]
1003d20c:	call   0x3cc:0x9a1003cc
1003d213:	adc    BYTE PTR [ecx-0x3aeffc33],al
1003d219:	int    0x3
1003d21b:	adc    cl,ah
1003d21d:	int    0x3
1003d21f:	adc    BYTE PTR [eax],al
1003d221:	into   
1003d222:	add    edx,DWORD PTR [eax]
1003d224:	adc    eax,0x7c1003ce
1003d229:	into   
1003d22a:	add    edx,DWORD PTR [eax]
1003d22c:	mov    dh,0xcd
1003d22e:	add    edx,DWORD PTR [eax]
1003d230:	fwait
1003d231:	int    0x3
1003d233:	adc    bh,bh
1003d235:	lds    eax,FWORD PTR [ebx]
1003d237:	adc    BYTE PTR [eax],al
1003d239:	add    DWORD PTR [ecx],eax
1003d23b:	add    al,BYTE PTR [ebx]
1003d23d:	add    eax,DWORD PTR [ebx]
1003d23f:	add    eax,DWORD PTR [ebx]
1003d241:	add    eax,DWORD PTR [ebx]
1003d243:	add    eax,DWORD PTR [ebx]
1003d245:	add    eax,DWORD PTR [ebx]
1003d247:	add    eax,DWORD PTR [ebx]
1003d249:	add    eax,DWORD PTR [ebx]
1003d24b:	add    eax,DWORD PTR [ebx]
1003d24d:	add    eax,DWORD PTR [ebx]
1003d24f:	add    eax,DWORD PTR [ebx]
1003d251:	add    eax,DWORD PTR [ebx]
1003d253:	add    eax,DWORD PTR [ebx]
1003d255:	add    eax,DWORD PTR [ebx]
1003d257:	add    eax,DWORD PTR [ebx]
1003d259:	add    eax,DWORD PTR [ebx]
1003d25b:	add    eax,DWORD PTR [ebx]
1003d25d:	add    eax,DWORD PTR [ebx]
1003d25f:	add    eax,DWORD PTR [ebx]
1003d261:	add    eax,DWORD PTR [ebx]
1003d263:	add    eax,DWORD PTR [ebx]
1003d265:	add    eax,DWORD PTR [ebx]
1003d267:	add    eax,DWORD PTR [ebx]
1003d269:	add    eax,DWORD PTR [ebx]
1003d26b:	add    eax,DWORD PTR [ebx]
1003d26d:	add    eax,DWORD PTR [ebx]
1003d26f:	add    eax,DWORD PTR [ebx]
1003d271:	add    eax,DWORD PTR [ebx]
1003d273:	add    eax,DWORD PTR [ebx]
1003d275:	add    eax,DWORD PTR [ebx]
1003d277:	add    eax,DWORD PTR [ebx]
1003d279:	add    eax,DWORD PTR [ebx]
1003d27b:	add    eax,DWORD PTR [ebx]
1003d27d:	add    eax,DWORD PTR [ebx]
1003d27f:	add    eax,DWORD PTR [ebx]
1003d281:	add    eax,DWORD PTR [ebx]
1003d283:	add    eax,DWORD PTR [ebx]
1003d285:	add    eax,DWORD PTR [ebx]
1003d287:	add    eax,DWORD PTR [ebx]
1003d289:	add    eax,DWORD PTR [ebx]
1003d28b:	add    eax,DWORD PTR [ebx]
1003d28d:	add    eax,DWORD PTR [ebx]
1003d28f:	add    eax,DWORD PTR [ebx]
1003d291:	add    eax,DWORD PTR [ebx]
1003d293:	add    eax,DWORD PTR [ebx]
1003d295:	add    eax,DWORD PTR [ebx]
1003d297:	add    eax,DWORD PTR [ebx]
1003d299:	add    eax,DWORD PTR [ebx]
1003d29b:	add    eax,DWORD PTR [ebx]
1003d29d:	add    eax,DWORD PTR [ebx]
1003d29f:	add    eax,DWORD PTR [ebx]
1003d2a1:	add    eax,DWORD PTR [ebx]
1003d2a3:	add    eax,DWORD PTR [ebx]
1003d2a5:	add    eax,DWORD PTR [ebx]
1003d2a7:	add    eax,DWORD PTR [ebx]
1003d2a9:	add    eax,DWORD PTR [ebx]
1003d2ab:	add    eax,DWORD PTR [ebx]
1003d2ad:	add    eax,DWORD PTR [ebx]
1003d2af:	add    eax,DWORD PTR [ebx]
1003d2b1:	add    eax,DWORD PTR [ebx]
1003d2b3:	add    esp,ecx
1003d2b5:	int3   
1003d2b6:	int3   
1003d2b7:	int3   
1003d2b8:	int3   
1003d2b9:	int3   
1003d2ba:	int3   
1003d2bb:	int3   
1003d2bc:	int3   
1003d2bd:	int3   
1003d2be:	int3   
1003d2bf:	int3   
1003d2c0:	sub    esp,0x134
1003d2c6:	mov    eax,ds:0x1007e030
1003d2cb:	xor    eax,esp
1003d2cd:	mov    DWORD PTR [esp+0x12c],eax
1003d2d4:	mov    eax,DWORD PTR [esp+0x13c]
1003d2db:	push   ebx
1003d2dc:	mov    ebx,DWORD PTR [esp+0x148]
1003d2e3:	push   ebp
1003d2e4:	mov    ebp,DWORD PTR [esp+0x140]
1003d2eb:	push   esi
1003d2ec:	mov    esi,ecx
1003d2ee:	or     ecx,0xffffffff
1003d2f1:	push   edi
1003d2f2:	mov    edi,edx
1003d2f4:	xor    edx,edx
1003d2f6:	test   esi,0xfe0f5a6f
1003d2fc:	mov    DWORD PTR [esp+0x1c],ecx
1003d300:	mov    DWORD PTR [esp+0x44],ecx
1003d304:	mov    DWORD PTR [esp+0x50],ecx
1003d308:	lea    ecx,[edi-0x1]
1003d30b:	mov    DWORD PTR [esp+0x28],ebx
1003d30f:	mov    DWORD PTR [esp+0x2c],edx
1003d313:	mov    DWORD PTR [esp+0x4c],edx
1003d317:	mov    DWORD PTR [esp+0x54],edx
1003d31b:	mov    DWORD PTR [esp+0x3c],edx
1003d31f:	mov    DWORD PTR [esp+0x58],edi
1003d323:	mov    DWORD PTR [esp+0x34],ecx
1003d327:	mov    DWORD PTR [esp+0x20],ebp
1003d32b:	je     0x1003d337
1003d32d:	mov    eax,0xfffffffd
1003d332:	jmp    0x1003dc2c
1003d337:	cmp    ebp,edx
1003d339:	je     0x1003dc27
1003d33f:	cmp    edi,edx
1003d341:	je     0x1003dc27
1003d347:	cmp    ebx,edx
1003d349:	je     0x1003dc27
1003d34f:	cmp    eax,edx
1003d351:	mov    ecx,0x989680
1003d356:	mov    DWORD PTR [esp+0x8c],ecx
1003d35d:	mov    DWORD PTR [esp+0x90],ecx
1003d364:	mov    ecx,DWORD PTR [ebp+0x20]
1003d367:	mov    DWORD PTR [esp+0x14],edx
1003d36b:	mov    DWORD PTR [esp+0x108],edx
1003d372:	mov    DWORD PTR [esp+0x18],ecx
1003d376:	je     0x1003d3bf
1003d378:	mov    ecx,DWORD PTR [eax]
1003d37a:	test   cl,0x1
1003d37d:	je     0x1003d386
1003d37f:	mov    ebx,DWORD PTR [eax+0x4]
1003d382:	mov    DWORD PTR [esp+0x14],ebx
1003d386:	test   cl,0x2
1003d389:	je     0x1003d395
1003d38b:	mov    ebx,DWORD PTR [eax+0x8]
1003d38e:	mov    DWORD PTR [esp+0x8c],ebx
1003d395:	test   cl,0x10
1003d398:	je     0x1003d3a4
1003d39a:	mov    ebx,DWORD PTR [eax+0x14]
1003d39d:	mov    DWORD PTR [esp+0x90],ebx
1003d3a4:	test   cl,0x4
1003d3a7:	je     0x1003d3b3
1003d3a9:	mov    ebx,DWORD PTR [eax+0xc]
1003d3ac:	mov    DWORD PTR [esp+0x108],ebx
1003d3b3:	test   cl,0x8
1003d3b6:	je     0x1003d3bf
1003d3b8:	mov    eax,DWORD PTR [eax+0x10]
1003d3bb:	mov    DWORD PTR [esp+0x18],eax
1003d3bf:	cmp    DWORD PTR [esp+0x18],edx
1003d3c3:	jne    0x1003d3cd
1003d3c5:	mov    DWORD PTR [esp+0x18],0x1006e4a8
1003d3cd:	cmp    DWORD PTR [ebp+0x0],0x50435245
1003d3d4:	je     0x1003d41c
1003d3d6:	mov    ebx,DWORD PTR [esp+0x14]
1003d3da:	lea    ecx,[esp+0x114]
1003d3e1:	push   ecx
1003d3e2:	lea    edx,[esp+0x64]
1003d3e6:	push   edx
1003d3e7:	mov    edx,ebp
1003d3e9:	call   0x10042e10
1003d3ee:	add    esp,0x8
1003d3f1:	test   eax,eax
1003d3f3:	mov    DWORD PTR [esp+0x20],eax
1003d3f7:	jne    0x1003d403
1003d3f9:	mov    eax,0xfffffffc
1003d3fe:	jmp    0x1003dc2c
1003d403:	mov    ebx,DWORD PTR [esp+0x20]
1003d407:	xor    edx,edx
1003d409:	cmp    DWORD PTR [esp+0x14],edx
1003d40d:	je     0x1003d420
1003d40f:	lea    eax,[esp+0x114]
1003d416:	mov    DWORD PTR [esp+0x14],eax
1003d41a:	jmp    0x1003d420
1003d41c:	xor    edx,edx
1003d41e:	mov    ebx,ebp
1003d420:	mov    eax,DWORD PTR [ebx+0x8]
1003d423:	mov    ecx,eax
1003d425:	shr    eax,0x12
1003d428:	and    eax,0x1
1003d42b:	or     ecx,esi
1003d42d:	mov    DWORD PTR [esp+0x38],eax
1003d431:	movzx  eax,WORD PTR [ebx+0x1a]
1003d435:	shr    ecx,0x4
1003d438:	and    ecx,0x1
1003d43b:	mov    DWORD PTR [esp+0x40],ecx
1003d43f:	movzx  ecx,BYTE PTR [ebx+0xc]
1003d443:	shr    ecx,0x3
1003d446:	and    ecx,0x1
1003d449:	mov    DWORD PTR [esp+0x48],ecx
1003d44d:	movzx  ecx,WORD PTR [ebx+0x1c]
1003d451:	imul   ecx,eax
1003d454:	movzx  eax,WORD PTR [ebx+0x18]
1003d458:	add    ecx,ebp
1003d45a:	add    eax,ecx
1003d45c:	mov    ecx,DWORD PTR [esp+0x150]
1003d463:	mov    DWORD PTR [esp+0xdc],eax
1003d46a:	mov    DWORD PTR [esp+0xe0],edi
1003d471:	add    edi,ecx
1003d473:	mov    DWORD PTR [esp+0xe4],edi
1003d47a:	mov    ecx,0x1
1003d47f:	mov    DWORD PTR [esp+0xf8],edx
1003d486:	mov    eax,DWORD PTR [ebx+0x8]
1003d489:	shr    eax,0x5
1003d48c:	and    eax,ecx
1003d48e:	mov    DWORD PTR [esp+0xc8],eax
1003d495:	mov    eax,DWORD PTR [ebx+0x8]
1003d498:	shr    eax,0xb
1003d49b:	and    eax,ecx
1003d49d:	mov    DWORD PTR [esp+0xc0],eax
1003d4a4:	mov    DWORD PTR [esp+0x24],eax
1003d4a8:	mov    eax,DWORD PTR [ebx+0x8]
1003d4ab:	shr    eax,0x19
1003d4ae:	and    eax,ecx
1003d4b0:	mov    ebp,DWORD PTR [esp+0x18]
1003d4b4:	mov    DWORD PTR [esp+0xc4],eax
1003d4bb:	mov    eax,esi
1003d4bd:	shr    eax,0x7
1003d4c0:	and    eax,ecx
1003d4c2:	mov    DWORD PTR [esp+0xb8],eax
1003d4c9:	mov    eax,esi
1003d4cb:	shr    eax,0x8
1003d4ce:	and    eax,ecx
1003d4d0:	mov    DWORD PTR [esp+0xbc],eax
1003d4d7:	mov    eax,esi
1003d4d9:	shr    eax,0xa
1003d4dc:	and    eax,ecx
1003d4de:	mov    DWORD PTR [esp+0x30],edi
1003d4e2:	mov    DWORD PTR [esp+0xcc],eax
1003d4e9:	lea    eax,[ebp+0x340]
1003d4ef:	mov    edi,esi
1003d4f1:	shr    edi,0xf
1003d4f4:	mov    DWORD PTR [esp+0xb0],eax
1003d4fb:	and    edi,ecx
1003d4fd:	mov    eax,esi
1003d4ff:	and    eax,0x1800000
1003d504:	mov    DWORD PTR [esp+0xd0],edi
1003d50b:	mov    DWORD PTR [esp+0xd4],edx
1003d512:	mov    DWORD PTR [esp+0x104],edx
1003d519:	mov    DWORD PTR [esp+0xac],ebp
1003d520:	je     0x1003d543
1003d522:	cmp    eax,0x800000
1003d527:	je     0x1003d53a
1003d529:	cmp    eax,0x1000000
1003d52e:	je     0x1003d55b
1003d530:	mov    eax,0xffffffe9
1003d535:	jmp    0x1003dc2c
1003d53a:	mov    DWORD PTR [esp+0xd8],ecx
1003d541:	jmp    0x1003d562
1003d543:	mov    eax,DWORD PTR [ebx+0x8]
1003d546:	test   eax,0x1800000
1003d54b:	je     0x1003d55b
1003d54d:	shr    eax,0x17
1003d550:	and    eax,ecx
1003d552:	mov    DWORD PTR [esp+0xd8],eax
1003d559:	jmp    0x1003d562
1003d55b:	mov    DWORD PTR [esp+0xd8],edx
1003d562:	test   esi,0x700000
1003d568:	jne    0x1003d56d
1003d56a:	mov    esi,DWORD PTR [ebx+0x8]
1003d56d:	and    esi,0x700000
1003d573:	cmp    esi,0x300000
1003d579:	ja     0x1003d5d2
1003d57b:	je     0x1003d5cb
1003d57d:	cmp    esi,edx
1003d57f:	je     0x1003d591
1003d581:	cmp    esi,0x100000
1003d587:	je     0x1003d5c4
1003d589:	cmp    esi,0x200000
1003d58f:	jne    0x1003d530
1003d591:	mov    eax,0xa
1003d596:	cmp    eax,0xff
1003d59b:	mov    DWORD PTR [esp+0xa0],edx
1003d5a2:	jle    0x1003d5fc
1003d5a4:	mov    ecx,eax
1003d5a6:	sar    ecx,0x8
1003d5a9:	mov    DWORD PTR [esp+0xa4],0x2
1003d5b4:	mov    BYTE PTR [esp+0xa8],cl
1003d5bb:	mov    BYTE PTR [esp+0xa9],al
1003d5c2:	jmp    0x1003d60a
1003d5c4:	mov    eax,0xd
1003d5c9:	jmp    0x1003d596
1003d5cb:	mov    eax,0xd0a
1003d5d0:	jmp    0x1003d596
1003d5d2:	cmp    esi,0x400000
1003d5d8:	je     0x1003d5f3
1003d5da:	cmp    esi,0x500000
1003d5e0:	jne    0x1003d530
1003d5e6:	mov    DWORD PTR [esp+0xa0],0x2
1003d5f1:	jmp    0x1003d60a
1003d5f3:	mov    DWORD PTR [esp+0xa0],ecx
1003d5fa:	jmp    0x1003d60a
1003d5fc:	mov    DWORD PTR [esp+0xa4],ecx
1003d603:	mov    BYTE PTR [esp+0xa8],al
1003d60a:	cmp    edi,edx
1003d60c:	je     0x1003d61e
1003d60e:	test   BYTE PTR [ebx+0xc],0x1
1003d612:	je     0x1003d61e
1003d614:	mov    eax,0xfffffff3
1003d619:	jmp    0x1003dc2c
1003d61e:	mov    eax,DWORD PTR [ebx+0x8]
1003d621:	and    eax,0x7
1003d624:	mov    DWORD PTR [esp+0x5c],eax
1003d628:	movzx  eax,WORD PTR [ebx+0x12]
1003d62c:	cmp    ax,dx
1003d62f:	mov    esi,0x33
1003d634:	jbe    0x1003d674
1003d636:	movzx  eax,ax
1003d639:	cmp    eax,0x11
1003d63c:	jl     0x1003d674
1003d63e:	lea    esi,[eax+eax*2+0x3]
1003d642:	lea    ecx,[esi*4+0x0]
1003d649:	push   ecx
1003d64a:	call   DWORD PTR ds:0x1007f4f8
1003d650:	mov    edi,eax
1003d652:	add    esp,0x4
1003d655:	test   edi,edi
1003d657:	mov    DWORD PTR [esp+0x94],edi
1003d65e:	jne    0x1003d66a
1003d660:	mov    eax,0xfffffffa
1003d665:	jmp    0x1003dc2c
1003d66a:	mov    DWORD PTR [esp+0x2c],0x1
1003d672:	jmp    0x1003d67f
1003d674:	mov    edi,DWORD PTR [esp+0x28]
1003d678:	mov    DWORD PTR [esp+0x94],edi
1003d67f:	lea    ecx,[esi+esi*1]
1003d682:	mov    eax,0x55555556
1003d687:	imul   ecx
1003d689:	mov    eax,edx
1003d68b:	shr    eax,0x1f
1003d68e:	add    eax,edx
1003d690:	mov    DWORD PTR [esp+0x9c],eax
1003d697:	mov    DWORD PTR [esp+0x98],esi
1003d69e:	mov    DWORD PTR [esp+0xb4],0x0
1003d6a9:	mov    DWORD PTR [esp+0xf4],0xffffffff
1003d6b4:	movzx  eax,WORD PTR [ebx+0x10]
1003d6b8:	lea    eax,[eax+eax*1+0x2]
1003d6bc:	cmp    eax,0x33
1003d6bf:	mov    DWORD PTR [esp+0x18],eax
1003d6c3:	jle    0x1003d6cb
1003d6c5:	mov    eax,esi
1003d6c7:	mov    DWORD PTR [esp+0x18],esi
1003d6cb:	test   edi,edi
1003d6cd:	je     0x1003d6fd
1003d6cf:	cdq    
1003d6d0:	sub    eax,edx
1003d6d2:	sar    eax,1
1003d6d4:	mov    edx,0x1
1003d6d9:	lea    ecx,[edi+esi*4]
1003d6dc:	sub    edx,eax
1003d6de:	lea    eax,[ecx+edx*4]
1003d6e1:	sub    ecx,0x4
1003d6e4:	cmp    ecx,eax
1003d6e6:	jb     0x1003d6fd
1003d6e8:	jmp    0x1003d6f0
1003d6ea:	lea    ebx,[ebx+0x0]
1003d6f0:	mov    DWORD PTR [ecx],0xffffffff
1003d6f6:	sub    ecx,0x4
1003d6f9:	cmp    ecx,eax
1003d6fb:	jae    0x1003d6f0
1003d6fd:	cmp    DWORD PTR [esp+0x40],0x0
1003d702:	jne    0x1003d753
1003d704:	test   BYTE PTR [ebx+0xc],0x2
1003d708:	je     0x1003d737
1003d70a:	movzx  eax,WORD PTR [ebx+0x14]
1003d70e:	mov    ecx,eax
1003d710:	and    ecx,0xff
1003d716:	shr    eax,0x8
1003d719:	and    eax,0x1
1003d71c:	mov    DWORD PTR [esp+0x1c],ecx
1003d720:	mov    DWORD PTR [esp+0x4c],eax
1003d724:	je     0x1003d753
1003d726:	mov    eax,DWORD PTR [esp+0xac]
1003d72d:	movzx  ecx,BYTE PTR [eax+ecx*1]
1003d731:	mov    DWORD PTR [esp+0x1c],ecx
1003d735:	jmp    0x1003d753
1003d737:	cmp    DWORD PTR [esp+0x48],0x0
1003d73c:	jne    0x1003d753
1003d73e:	mov    eax,DWORD PTR [esp+0x14]
1003d742:	test   eax,eax
1003d744:	je     0x1003d753
1003d746:	test   BYTE PTR [eax+0x4],0x1
1003d74a:	je     0x1003d753
1003d74c:	add    eax,0x8
1003d74f:	mov    DWORD PTR [esp+0x3c],eax
1003d753:	test   BYTE PTR [ebx+0xc],0x4
1003d757:	je     0x1003d77f
1003d759:	movzx  eax,WORD PTR [ebx+0x16]
1003d75d:	mov    ecx,eax
1003d75f:	and    ecx,0xff
1003d765:	movzx  edx,BYTE PTR [ecx+ebp*1+0x100]
1003d76d:	shr    eax,0x8
1003d770:	and    eax,0x1
1003d773:	mov    DWORD PTR [esp+0x44],ecx
1003d777:	mov    DWORD PTR [esp+0x54],eax
1003d77b:	mov    DWORD PTR [esp+0x50],edx
1003d77f:	mov    ebp,DWORD PTR [esp+0x58]
1003d783:	mov    edi,DWORD PTR [esp+0x94]
1003d78a:	test   edi,edi
1003d78c:	mov    ebx,DWORD PTR [esp+0x30]
1003d790:	mov    DWORD PTR [esp+0x14],ebx
1003d794:	je     0x1003d7b1
1003d796:	mov    eax,DWORD PTR [esp+0x18]
1003d79a:	lea    ecx,[edi+eax*4]
1003d79d:	cmp    edi,ecx
1003d79f:	jae    0x1003d7b1
1003d7a1:	sub    ecx,edi
1003d7a3:	sub    ecx,0x1
1003d7a6:	shr    ecx,0x2
1003d7a9:	add    ecx,0x1
1003d7ac:	or     eax,0xffffffff
1003d7af:	rep stos DWORD PTR es:[edi],eax
1003d7b1:	cmp    DWORD PTR [esp+0x38],0x0
1003d7b6:	mov    eax,DWORD PTR [esp+0xe4]
1003d7bd:	je     0x1003d82d
1003d7bf:	cmp    ebp,eax
1003d7c1:	mov    ecx,ebp
1003d7c3:	jae    0x1003d82b
1003d7c5:	mov    esi,DWORD PTR [esp+0x24]
1003d7c9:	cmp    DWORD PTR [esp+0xa0],0x0
1003d7d1:	je     0x1003d7f9
1003d7d3:	mov    edx,DWORD PTR [esp+0xa0]
1003d7da:	push   edx
1003d7db:	mov    edx,esi
1003d7dd:	lea    edi,[esp+0xa8]
1003d7e4:	call   0x10042c90
1003d7e9:	add    esp,0x4
1003d7ec:	test   eax,eax
1003d7ee:	jne    0x1003d82b
1003d7f0:	mov    eax,DWORD PTR [esp+0xe4]
1003d7f7:	jmp    0x1003d824
1003d7f9:	mov    edi,DWORD PTR [esp+0xa4]
1003d800:	mov    edx,eax
1003d802:	sub    edx,edi
1003d804:	cmp    ecx,edx
1003d806:	ja     0x1003d824
1003d808:	mov    dl,BYTE PTR [ecx]
1003d80a:	cmp    dl,BYTE PTR [esp+0xa8]
1003d811:	jne    0x1003d824
1003d813:	cmp    edi,0x1
1003d816:	je     0x1003d82b
1003d818:	mov    dl,BYTE PTR [ecx+0x1]
1003d81b:	cmp    dl,BYTE PTR [esp+0xa9]
1003d822:	je     0x1003d82b
1003d824:	add    ecx,0x1
1003d827:	cmp    ecx,eax
1003d829:	jb     0x1003d7c9
1003d82b:	mov    ebx,ecx
1003d82d:	cmp    DWORD PTR [esp+0x1c],0x0
1003d832:	jl     0x1003d89a
1003d834:	cmp    DWORD PTR [esp+0x4c],0x0
1003d839:	je     0x1003d86e
1003d83b:	cmp    ebp,ebx
1003d83d:	jae    0x1003d981
1003d843:	mov    eax,DWORD PTR [esp+0xac]
1003d84a:	lea    ebx,[ebx+0x0]
1003d850:	movzx  ecx,BYTE PTR [ebp+0x0]
1003d854:	movzx  edx,BYTE PTR [ecx+eax*1]
1003d858:	cmp    edx,DWORD PTR [esp+0x1c]
1003d85c:	je     0x1003d981
1003d862:	add    ebp,0x1
1003d865:	cmp    ebp,ebx
1003d867:	jb     0x1003d850
1003d869:	jmp    0x1003d981
1003d86e:	cmp    ebp,ebx
1003d870:	jae    0x1003d981
1003d876:	jmp    0x1003d880
1003d878:	lea    esp,[esp+0x0]
1003d87f:	nop
1003d880:	movzx  eax,BYTE PTR [ebp+0x0]
1003d884:	cmp    eax,DWORD PTR [esp+0x1c]
1003d888:	je     0x1003d981
1003d88e:	add    ebp,0x1
1003d891:	cmp    ebp,ebx
1003d893:	jb     0x1003d880
1003d895:	jmp    0x1003d981
1003d89a:	cmp    DWORD PTR [esp+0x48],0x0
1003d89f:	je     0x1003d953
1003d8a5:	mov    esi,DWORD PTR [esp+0xe0]
1003d8ac:	cmp    ebp,esi
1003d8ae:	jbe    0x1003d981
1003d8b4:	cmp    ebp,ebx
1003d8b6:	jae    0x1003d92d
1003d8b8:	mov    edi,DWORD PTR [esp+0x24]
1003d8bc:	mov    ecx,DWORD PTR [esp+0xa4]
1003d8c3:	cmp    DWORD PTR [esp+0xa0],0x0
1003d8cb:	je     0x1003d8ff
1003d8cd:	cmp    ebp,esi
1003d8cf:	jbe    0x1003d926
1003d8d1:	mov    ecx,DWORD PTR [esp+0xa0]
1003d8d8:	push   edi
1003d8d9:	push   ecx
1003d8da:	lea    edx,[esp+0xac]
1003d8e1:	mov    ecx,ebp
1003d8e3:	call   0x10042d50
1003d8e8:	add    esp,0x8
1003d8eb:	test   eax,eax
1003d8ed:	jne    0x1003d92d
1003d8ef:	mov    esi,DWORD PTR [esp+0xe0]
1003d8f6:	mov    ecx,DWORD PTR [esp+0xa4]
1003d8fd:	jmp    0x1003d926
1003d8ff:	lea    edx,[ecx+esi*1]
1003d902:	cmp    ebp,edx
1003d904:	jb     0x1003d926
1003d906:	mov    dl,BYTE PTR [esp+0xa8]
1003d90d:	mov    eax,ebp
1003d90f:	sub    eax,ecx
1003d911:	cmp    BYTE PTR [eax],dl
1003d913:	jne    0x1003d926
1003d915:	cmp    ecx,0x1
1003d918:	je     0x1003d92d
1003d91a:	mov    dl,BYTE PTR [esp+0xa9]
1003d921:	cmp    BYTE PTR [eax+0x1],dl
1003d924:	je     0x1003d92d
1003d926:	add    ebp,0x1
1003d929:	cmp    ebp,ebx
1003d92b:	jb     0x1003d8c3
1003d92d:	cmp    BYTE PTR [ebp-0x1],0xd
1003d931:	jne    0x1003d981
1003d933:	mov    eax,DWORD PTR [esp+0xa0]
1003d93a:	cmp    eax,0x1
1003d93d:	je     0x1003d944
1003d93f:	cmp    eax,0x2
1003d942:	jne    0x1003d981
1003d944:	cmp    ebp,ebx
1003d946:	jae    0x1003d981
1003d948:	cmp    BYTE PTR [ebp+0x0],0xa
1003d94c:	jne    0x1003d981
1003d94e:	add    ebp,0x1
1003d951:	jmp    0x1003d981
1003d953:	mov    esi,DWORD PTR [esp+0x3c]
1003d957:	test   esi,esi
1003d959:	je     0x1003d981
1003d95b:	cmp    ebp,ebx
1003d95d:	jae    0x1003d981
1003d95f:	nop
1003d960:	movzx  eax,BYTE PTR [ebp+0x0]
1003d964:	mov    ecx,eax
1003d966:	and    ecx,0x7
1003d969:	mov    edx,0x1
1003d96e:	shl    edx,cl
1003d970:	shr    eax,0x3
1003d973:	mov    al,BYTE PTR [eax+esi*1]
1003d976:	test   al,dl
1003d978:	jne    0x1003d981
1003d97a:	add    ebp,0x1
1003d97d:	cmp    ebp,ebx
1003d97f:	jb     0x1003d960
1003d981:	mov    edx,DWORD PTR [esp+0x44]
1003d985:	test   edx,edx
1003d987:	mov    ebx,DWORD PTR [esp+0x14]
1003d98b:	mov    DWORD PTR [esp+0x30],ebx
1003d98f:	jl     0x1003da2d
1003d995:	mov    ecx,ebx
1003d997:	sub    ecx,ebp
1003d999:	cmp    ecx,0x3e8
1003d99f:	jge    0x1003da2d
1003d9a5:	cmp    DWORD PTR [esp+0xd0],0x0
1003d9ad:	jne    0x1003da2d
1003d9b3:	xor    eax,eax
1003d9b5:	cmp    DWORD PTR [esp+0x1c],eax
1003d9b9:	setge  al
1003d9bc:	add    eax,ebp
1003d9be:	cmp    eax,DWORD PTR [esp+0x34]
1003d9c2:	jbe    0x1003da2d
1003d9c4:	cmp    DWORD PTR [esp+0x54],0x0
1003d9c9:	je     0x1003da0e
1003d9cb:	cmp    eax,ebx
1003d9cd:	jae    0x1003d9e5
1003d9cf:	mov    esi,DWORD PTR [esp+0x50]
1003d9d3:	movzx  ecx,BYTE PTR [eax]
1003d9d6:	add    eax,0x1
1003d9d9:	cmp    ecx,edx
1003d9db:	je     0x1003da22
1003d9dd:	cmp    ecx,esi
1003d9df:	je     0x1003da22
1003d9e1:	cmp    eax,ebx
1003d9e3:	jb     0x1003d9d3
1003d9e5:	xor    esi,esi
1003d9e7:	cmp    DWORD PTR [esp+0x2c],0x0
1003d9ec:	je     0x1003d9ff
1003d9ee:	mov    eax,DWORD PTR [esp+0x94]
1003d9f5:	push   eax
1003d9f6:	call   DWORD PTR ds:0x1007f4fc
1003d9fc:	add    esp,0x4
1003d9ff:	test   esi,esi
1003da01:	je     0x1003dc07
1003da07:	mov    eax,esi
1003da09:	jmp    0x1003dc2c
1003da0e:	cmp    eax,ebx
1003da10:	jae    0x1003d9e5
1003da12:	movzx  ecx,BYTE PTR [eax]
1003da15:	add    eax,0x1
1003da18:	cmp    ecx,edx
1003da1a:	je     0x1003da22
1003da1c:	cmp    eax,ebx
1003da1e:	jb     0x1003da12
1003da20:	jmp    0x1003d9e5
1003da22:	sub    eax,0x1
1003da25:	cmp    eax,ebx
1003da27:	jae    0x1003d9e5
1003da29:	mov    DWORD PTR [esp+0x34],eax
1003da2d:	mov    edx,DWORD PTR [esp+0x5c]
1003da31:	mov    ecx,DWORD PTR [esp+0xdc]
1003da38:	push   0x0
1003da3a:	push   0x0
1003da3c:	push   0x0
1003da3e:	push   edx
1003da3f:	lea    eax,[esp+0x98]
1003da46:	push   eax
1003da47:	push   0x2
1003da49:	push   ebp
1003da4a:	push   ecx
1003da4b:	push   ebp
1003da4c:	mov    DWORD PTR [esp+0x10c],ebp
1003da53:	mov    DWORD PTR [esp+0xac],0x0
1003da5e:	call   0x1003a420
1003da63:	mov    esi,eax
1003da65:	add    esp,0x24
1003da68:	test   esi,esi
1003da6a:	jg     0x1003db7e
1003da70:	je     0x1003da91
1003da72:	lea    eax,[esi+0x3e7]
1003da78:	cmp    eax,0x3
1003da7b:	ja     0x1003db7e
1003da81:	jmp    DWORD PTR [eax*4+0x1003dc48]
1003da88:	mov    ebx,DWORD PTR [esp+0xe8]
1003da8f:	jmp    0x1003da94
1003da91:	lea    ebx,[ebp+0x1]
1003da94:	xor    esi,esi
1003da96:	cmp    DWORD PTR [esp+0x38],esi
1003da9a:	je     0x1003db15
1003da9c:	cmp    DWORD PTR [esp+0xa0],esi
1003daa3:	je     0x1003dadc
1003daa5:	cmp    ebp,DWORD PTR [esp+0xe4]
1003daac:	jae    0x1003db15
1003daae:	mov    edx,DWORD PTR [esp+0xa0]
1003dab5:	mov    eax,DWORD PTR [esp+0xe4]
1003dabc:	push   edx
1003dabd:	mov    edx,DWORD PTR [esp+0x28]
1003dac1:	lea    edi,[esp+0xa8]
1003dac8:	mov    ecx,ebp
1003daca:	call   0x10042c90
1003dacf:	add    esp,0x4
1003dad2:	test   eax,eax
1003dad4:	jne    0x1003d9e7
1003dada:	jmp    0x1003db15
1003dadc:	mov    ecx,DWORD PTR [esp+0xe4]
1003dae3:	mov    eax,DWORD PTR [esp+0xa4]
1003daea:	sub    ecx,eax
1003daec:	cmp    ebp,ecx
1003daee:	ja     0x1003db15
1003daf0:	mov    dl,BYTE PTR [esp+0xa8]
1003daf7:	cmp    BYTE PTR [ebp+0x0],dl
1003dafa:	jne    0x1003db15
1003dafc:	cmp    eax,0x1
1003daff:	je     0x1003d9e7
1003db05:	mov    al,BYTE PTR [esp+0xa9]
1003db0c:	cmp    BYTE PTR [ebp+0x1],al
1003db0f:	je     0x1003d9e7
1003db15:	cmp    DWORD PTR [esp+0x40],0x0
1003db1a:	mov    ebp,ebx
1003db1c:	jne    0x1003d9e7
1003db22:	mov    eax,DWORD PTR [esp+0x14]
1003db26:	cmp    ebx,eax
1003db28:	ja     0x1003d9e7
1003db2e:	cmp    BYTE PTR [ebx-0x1],0xd
1003db32:	jne    0x1003d783
1003db38:	cmp    ebx,eax
1003db3a:	jae    0x1003d783
1003db40:	cmp    BYTE PTR [ebx],0xa
1003db43:	jne    0x1003d783
1003db49:	mov    ecx,DWORD PTR [esp+0x20]
1003db4d:	test   BYTE PTR [ecx+0xc],0x20
1003db51:	jne    0x1003d783
1003db57:	mov    eax,DWORD PTR [esp+0xa0]
1003db5e:	cmp    eax,0x1
1003db61:	je     0x1003db76
1003db63:	cmp    eax,0x2
1003db66:	je     0x1003db76
1003db68:	cmp    DWORD PTR [esp+0xa4],0x2
1003db70:	jne    0x1003d783
1003db76:	lea    ebp,[ebx+0x1]
1003db79:	jmp    0x1003d783
1003db7e:	cmp    esi,0x1
1003db81:	jne    0x1003d9e7
1003db87:	cmp    DWORD PTR [esp+0x2c],0x0
1003db8c:	mov    esi,DWORD PTR [esp+0x28]
1003db90:	je     0x1003dbcd
1003db92:	mov    edi,DWORD PTR [esp+0x94]
1003db99:	push   0xc4
1003db9e:	lea    edx,[edi+0x8]
1003dba1:	push   edx
1003dba2:	lea    eax,[esi+0x8]
1003dba5:	push   eax
1003dba6:	call   0x10045270
1003dbab:	add    esp,0xc
1003dbae:	cmp    DWORD PTR [esp+0xf0],0x33
1003dbb6:	jle    0x1003dbc3
1003dbb8:	mov    DWORD PTR [esp+0xb4],0x1
1003dbc3:	push   edi
1003dbc4:	call   DWORD PTR ds:0x1007f4fc
1003dbca:	add    esp,0x4
1003dbcd:	cmp    DWORD PTR [esp+0xb4],0x0
1003dbd5:	je     0x1003dbdb
1003dbd7:	xor    eax,eax
1003dbd9:	jmp    0x1003dbe7
1003dbdb:	mov    eax,DWORD PTR [esp+0xf0]
1003dbe2:	cdq    
1003dbe3:	sub    eax,edx
1003dbe5:	sar    eax,1
1003dbe7:	mov    ecx,DWORD PTR [esp+0xe0]
1003dbee:	mov    edx,DWORD PTR [esp+0xe8]
1003dbf5:	sub    edx,ecx
1003dbf7:	mov    DWORD PTR [esi],edx
1003dbf9:	mov    edx,DWORD PTR [esp+0xec]
1003dc00:	sub    edx,ecx
1003dc02:	mov    DWORD PTR [esi+0x4],edx
1003dc05:	jmp    0x1003dc2c
1003dc07:	cmp    DWORD PTR [esp+0xd0],0x0
1003dc0f:	je     0x1003dc22
1003dc11:	cmp    DWORD PTR [esp+0xd4],0x0
1003dc19:	je     0x1003dc22
1003dc1b:	mov    eax,0xfffffff4
1003dc20:	jmp    0x1003dc2c
1003dc22:	or     eax,0xffffffff
1003dc25:	jmp    0x1003dc2c
1003dc27:	mov    eax,0xfffffffe
1003dc2c:	mov    ecx,DWORD PTR [esp+0x13c]
1003dc33:	pop    edi
1003dc34:	pop    esi
1003dc35:	pop    ebp
1003dc36:	pop    ebx
1003dc37:	xor    ecx,esp
1003dc39:	call   0x10042f87
1003dc3e:	add    esp,0x134
1003dc44:	ret    
1003dc45:	lea    ecx,[ecx+0x0]
1003dc48:	in     eax,0xd9
1003dc4a:	add    edx,DWORD PTR [eax]
1003dc4c:	xchg   ecx,eax
1003dc4d:	fiadd  DWORD PTR [ebx]
1003dc4f:	adc    BYTE PTR [eax-0x6eeffc26],cl
1003dc55:	fiadd  DWORD PTR [ebx]
1003dc57:	adc    ah,cl
1003dc59:	int3   
1003dc5a:	int3   
1003dc5b:	int3   
1003dc5c:	int3   
1003dc5d:	int3   
1003dc5e:	int3   
1003dc5f:	int3   
1003dc60:	push   ecx
1003dc61:	push   ebx
1003dc62:	mov    ebx,eax
1003dc64:	mov    eax,DWORD PTR [esp+0xc]
1003dc68:	mov    ecx,DWORD PTR [eax]
1003dc6a:	movzx  eax,BYTE PTR [ecx+0x1]
1003dc6e:	push   ebp
1003dc6f:	add    ecx,0x1
1003dc72:	mov    ebp,ebx
1003dc74:	shr    ebp,0xb
1003dc77:	and    ebp,0x1
1003dc7a:	test   eax,eax
1003dc7c:	jne    0x1003dc92
1003dc7e:	mov    edx,DWORD PTR [esp+0x14]
1003dc82:	mov    DWORD PTR [edx],0x1
1003dc88:	mov    edx,DWORD PTR [esp+0x10]
1003dc8c:	pop    ebp
1003dc8d:	mov    DWORD PTR [edx],ecx
1003dc8f:	pop    ebx
1003dc90:	pop    ecx
1003dc91:	ret    
1003dc92:	lea    edx,[eax-0x30]
1003dc95:	cmp    edx,0x4a
1003dc98:	ja     0x1003e018
1003dc9e:	push   edi
1003dc9f:	movsx  edi,WORD PTR [edx*2+0x1006e8e8]
1003dca7:	test   edi,edi
1003dca9:	mov    DWORD PTR [esp+0xc],edi
1003dcad:	je     0x1003dcbc
1003dcaf:	mov    edx,DWORD PTR [esp+0x14]
1003dcb3:	mov    eax,edi
1003dcb5:	pop    edi
1003dcb6:	pop    ebp
1003dcb7:	mov    DWORD PTR [edx],ecx
1003dcb9:	pop    ebx
1003dcba:	pop    ecx
1003dcbb:	ret    
1003dcbc:	cmp    edx,0x48
1003dcbf:	push   esi
1003dcc0:	ja     0x1003e007
1003dcc6:	movzx  esi,BYTE PTR [edx+0x1003e040]
1003dccd:	jmp    DWORD PTR [esi*4+0x1003e024]
1003dcd4:	mov    edx,DWORD PTR [esp+0x1c]
1003dcd8:	pop    esi
1003dcd9:	pop    edi
1003dcda:	mov    DWORD PTR [edx],0x25
1003dce0:	mov    edx,DWORD PTR [esp+0x10]
1003dce4:	pop    ebp
1003dce5:	mov    DWORD PTR [edx],ecx
1003dce7:	pop    ebx
1003dce8:	pop    ecx
1003dce9:	ret    
1003dcea:	mov    al,BYTE PTR [ecx+0x1]
1003dced:	cmp    al,0x3c
1003dcef:	je     0x1003de0f
1003dcf5:	cmp    al,0x27
1003dcf7:	je     0x1003de0f
1003dcfd:	cmp    al,0x7b
1003dcff:	mov    bl,0x4
1003dd01:	jne    0x1003dd52
1003dd03:	mov    al,BYTE PTR [ecx+0x2]
1003dd06:	test   al,al
1003dd08:	lea    edx,[ecx+0x2]
1003dd0b:	je     0x1003dd2d
1003dd0d:	lea    ecx,[ecx+0x0]
1003dd10:	cmp    al,0x7d
1003dd12:	je     0x1003dd36
1003dd14:	cmp    al,0x2d
1003dd16:	je     0x1003dd23
1003dd18:	movzx  eax,al
1003dd1b:	test   BYTE PTR [eax+0x1006f428],bl
1003dd21:	je     0x1003dd36
1003dd23:	mov    al,BYTE PTR [edx+0x1]
1003dd26:	add    edx,0x1
1003dd29:	test   al,al
1003dd2b:	jne    0x1003dd10
1003dd2d:	mov    esi,0x1
1003dd32:	add    ecx,esi
1003dd34:	jmp    0x1003dd54
1003dd36:	mov    dl,BYTE PTR [edx]
1003dd38:	test   dl,dl
1003dd3a:	je     0x1003dd2d
1003dd3c:	cmp    dl,0x7d
1003dd3f:	je     0x1003dd2d
1003dd41:	mov    edx,DWORD PTR [esp+0x18]
1003dd45:	pop    esi
1003dd46:	pop    edi
1003dd47:	pop    ebp
1003dd48:	mov    eax,0xffffffe4
1003dd4d:	mov    DWORD PTR [edx],ecx
1003dd4f:	pop    ebx
1003dd50:	pop    ecx
1003dd51:	ret    
1003dd52:	xor    esi,esi
1003dd54:	cmp    BYTE PTR [ecx+0x1],0x2d
1003dd58:	jne    0x1003dd63
1003dd5a:	mov    edx,0x1
1003dd5f:	add    ecx,edx
1003dd61:	jmp    0x1003dd65
1003dd63:	xor    edx,edx
1003dd65:	movzx  edi,BYTE PTR [ecx+0x1]
1003dd69:	xor    eax,eax
1003dd6b:	test   BYTE PTR [edi+0x1006f428],bl
1003dd71:	je     0x1003dd95
1003dd73:	movzx  edi,BYTE PTR [ecx+0x1]
1003dd77:	add    ecx,0x1
1003dd7a:	lea    eax,[eax+eax*4]
1003dd7d:	lea    eax,[edi+eax*2-0x30]
1003dd81:	movzx  edi,BYTE PTR [ecx+0x1]
1003dd85:	test   BYTE PTR [edi+0x1006f428],bl
1003dd8b:	jne    0x1003dd73
1003dd8d:	test   eax,eax
1003dd8f:	jl     0x1003de5e
1003dd95:	test   esi,esi
1003dd97:	je     0x1003ddb7
1003dd99:	add    ecx,0x1
1003dd9c:	cmp    BYTE PTR [ecx],0x7d
1003dd9f:	je     0x1003ddb7
1003dda1:	mov    edx,DWORD PTR [esp+0x1c]
1003dda5:	pop    esi
1003dda6:	pop    edi
1003dda7:	mov    DWORD PTR [edx],0x39
1003ddad:	mov    edx,DWORD PTR [esp+0x10]
1003ddb1:	pop    ebp
1003ddb2:	mov    DWORD PTR [edx],ecx
1003ddb4:	pop    ebx
1003ddb5:	pop    ecx
1003ddb6:	ret    
1003ddb7:	test   eax,eax
1003ddb9:	jne    0x1003ddd1
1003ddbb:	mov    edx,DWORD PTR [esp+0x1c]
1003ddbf:	pop    esi
1003ddc0:	pop    edi
1003ddc1:	mov    DWORD PTR [edx],0x3a
1003ddc7:	mov    edx,DWORD PTR [esp+0x10]
1003ddcb:	pop    ebp
1003ddcc:	mov    DWORD PTR [edx],ecx
1003ddce:	pop    ebx
1003ddcf:	pop    ecx
1003ddd0:	ret    
1003ddd1:	test   edx,edx
1003ddd3:	je     0x1003ddfa
1003ddd5:	mov    edx,DWORD PTR [esp+0x20]
1003ddd9:	cmp    eax,edx
1003dddb:	jle    0x1003ddf3
1003dddd:	mov    edx,DWORD PTR [esp+0x1c]
1003dde1:	pop    esi
1003dde2:	pop    edi
1003dde3:	mov    DWORD PTR [edx],0xf
1003dde9:	mov    edx,DWORD PTR [esp+0x10]
1003dded:	pop    ebp
1003ddee:	mov    DWORD PTR [edx],ecx
1003ddf0:	pop    ebx
1003ddf1:	pop    ecx
1003ddf2:	ret    
1003ddf3:	sub    edx,eax
1003ddf5:	add    edx,0x1
1003ddf8:	mov    eax,edx
1003ddfa:	pop    esi
1003ddfb:	mov    edx,0xffffffe3
1003de00:	sub    edx,eax
1003de02:	pop    edi
1003de03:	mov    eax,edx
1003de05:	mov    edx,DWORD PTR [esp+0x10]
1003de09:	pop    ebp
1003de0a:	mov    DWORD PTR [edx],ecx
1003de0c:	pop    ebx
1003de0d:	pop    ecx
1003de0e:	ret    
1003de0f:	mov    edx,DWORD PTR [esp+0x18]
1003de13:	pop    esi
1003de14:	pop    edi
1003de15:	pop    ebp
1003de16:	mov    eax,0xffffffe5
1003de1b:	mov    DWORD PTR [edx],ecx
1003de1d:	pop    ebx
1003de1e:	pop    ecx
1003de1f:	ret    
1003de20:	cmp    DWORD PTR [esp+0x24],0x0
1003de25:	jne    0x1003de85
1003de27:	mov    eax,edx
1003de29:	movzx  edx,BYTE PTR [ecx+0x1]
1003de2d:	mov    bl,0x4
1003de2f:	test   BYTE PTR [edx+0x1006f428],bl
1003de35:	mov    esi,ecx
1003de37:	je     0x1003de5a
1003de39:	lea    esp,[esp+0x0]
1003de40:	movzx  edx,BYTE PTR [ecx+0x1]
1003de44:	add    ecx,0x1
1003de47:	lea    eax,[eax+eax*4]
1003de4a:	lea    eax,[edx+eax*2-0x30]
1003de4e:	movzx  edx,BYTE PTR [ecx+0x1]
1003de52:	test   BYTE PTR [edx+0x1006f428],bl
1003de58:	jne    0x1003de40
1003de5a:	test   eax,eax
1003de5c:	jge    0x1003de74
1003de5e:	mov    edx,DWORD PTR [esp+0x1c]
1003de62:	pop    esi
1003de63:	pop    edi
1003de64:	mov    DWORD PTR [edx],0x3d
1003de6a:	mov    edx,DWORD PTR [esp+0x10]
1003de6e:	pop    ebp
1003de6f:	mov    DWORD PTR [edx],ecx
1003de71:	pop    ebx
1003de72:	pop    ecx
1003de73:	ret    
1003de74:	cmp    eax,0xa
1003de77:	jl     0x1003ddfa
1003de79:	cmp    eax,DWORD PTR [esp+0x20]
1003de7d:	jle    0x1003ddfa
1003de83:	mov    ecx,esi
1003de85:	movzx  eax,BYTE PTR [ecx]
1003de88:	cmp    eax,0x38
1003de8b:	jl     0x1003de9e
1003de8d:	mov    edx,DWORD PTR [esp+0x18]
1003de91:	pop    esi
1003de92:	pop    edi
1003de93:	sub    ecx,0x1
1003de96:	pop    ebp
1003de97:	xor    eax,eax
1003de99:	mov    DWORD PTR [edx],ecx
1003de9b:	pop    ebx
1003de9c:	pop    ecx
1003de9d:	ret    
1003de9e:	sub    eax,0x30
1003dea1:	mov    dl,BYTE PTR [ecx+0x1]
1003dea4:	add    edi,0x1
1003dea7:	cmp    dl,0x30
1003deaa:	jb     0x1003dec1
1003deac:	cmp    dl,0x37
1003deaf:	ja     0x1003dec1
1003deb1:	movzx  edx,BYTE PTR [ecx+0x1]
1003deb5:	add    ecx,0x1
1003deb8:	cmp    edi,0x2
1003debb:	lea    eax,[edx+eax*8-0x30]
1003debf:	jl     0x1003dea1
1003dec1:	test   ebp,ebp
1003dec3:	jne    0x1003e016
1003dec9:	cmp    eax,0xff
1003dece:	jle    0x1003e016
1003ded4:	mov    edx,DWORD PTR [esp+0x1c]
1003ded8:	pop    esi
1003ded9:	pop    edi
1003deda:	mov    DWORD PTR [edx],0x33
1003dee0:	mov    edx,DWORD PTR [esp+0x10]
1003dee4:	pop    ebp
1003dee5:	mov    DWORD PTR [edx],ecx
1003dee7:	pop    ebx
1003dee8:	pop    ecx
1003dee9:	ret    
1003deea:	cmp    BYTE PTR [ecx+0x1],0x7b
1003deee:	mov    bl,0x8
1003def0:	jne    0x1003df7f
1003def6:	movzx  esi,BYTE PTR [ecx+0x2]
1003defa:	lea    edi,[ecx+0x2]
1003defd:	xor    edx,edx
1003deff:	xor    eax,eax
1003df01:	test   BYTE PTR [esi+0x1006f428],bl
1003df07:	je     0x1003df4c
1003df09:	lea    esp,[esp+0x0]
1003df10:	add    edi,0x1
1003df13:	test   eax,eax
1003df15:	jne    0x1003df1c
1003df17:	cmp    esi,0x30
1003df1a:	je     0x1003df41
1003df1c:	add    edx,0x1
1003df1f:	cmp    esi,0x61
1003df22:	jl     0x1003df27
1003df24:	sub    esi,0x20
1003df27:	xor    ebx,ebx
1003df29:	cmp    esi,0x41
1003df2c:	setge  bl
1003df2f:	shl    eax,0x4
1003df32:	sub    ebx,0x1
1003df35:	and    ebx,0xfffffff9
1003df38:	add    ebx,0x37
1003df3b:	sub    eax,ebx
1003df3d:	add    eax,esi
1003df3f:	mov    bl,0x8
1003df41:	movzx  esi,BYTE PTR [edi]
1003df44:	test   BYTE PTR [esi+0x1006f428],bl
1003df4a:	jne    0x1003df10
1003df4c:	cmp    BYTE PTR [edi],0x7d
1003df4f:	jne    0x1003df7b
1003df51:	test   eax,eax
1003df53:	jl     0x1003df63
1003df55:	neg    ebp
1003df57:	sbb    ebp,ebp
1003df59:	and    ebp,0x6
1003df5c:	add    ebp,0x2
1003df5f:	cmp    edx,ebp
1003df61:	jle    0x1003df6d
1003df63:	mov    ecx,DWORD PTR [esp+0x1c]
1003df67:	mov    DWORD PTR [ecx],0x22
1003df6d:	mov    edx,DWORD PTR [esp+0x18]
1003df71:	pop    esi
1003df72:	mov    ecx,edi
1003df74:	pop    edi
1003df75:	pop    ebp
1003df76:	mov    DWORD PTR [edx],ecx
1003df78:	pop    ebx
1003df79:	pop    ecx
1003df7a:	ret    
1003df7b:	mov    edi,DWORD PTR [esp+0x10]
1003df7f:	xor    eax,eax
1003df81:	movzx  edx,BYTE PTR [ecx+0x1]
1003df85:	add    edi,0x1
1003df88:	test   BYTE PTR [edx+0x1006f428],bl
1003df8e:	je     0x1003e016
1003df94:	movzx  esi,BYTE PTR [ecx+0x1]
1003df98:	add    ecx,0x1
1003df9b:	cmp    esi,0x61
1003df9e:	jl     0x1003dfa3
1003dfa0:	sub    esi,0x20
1003dfa3:	xor    edx,edx
1003dfa5:	cmp    esi,0x41
1003dfa8:	setge  dl
1003dfab:	shl    eax,0x4
1003dfae:	sub    edx,0x1
1003dfb1:	and    edx,0xfffffff9
1003dfb4:	add    edx,0x37
1003dfb7:	sub    eax,edx
1003dfb9:	add    eax,esi
1003dfbb:	cmp    edi,0x2
1003dfbe:	jl     0x1003df81
1003dfc0:	mov    edx,DWORD PTR [esp+0x18]
1003dfc4:	pop    esi
1003dfc5:	pop    edi
1003dfc6:	pop    ebp
1003dfc7:	mov    DWORD PTR [edx],ecx
1003dfc9:	pop    ebx
1003dfca:	pop    ecx
1003dfcb:	ret    
1003dfcc:	movzx  eax,BYTE PTR [ecx+0x1]
1003dfd0:	add    ecx,0x1
1003dfd3:	test   eax,eax
1003dfd5:	jne    0x1003dfed
1003dfd7:	mov    edx,DWORD PTR [esp+0x1c]
1003dfdb:	pop    esi
1003dfdc:	pop    edi
1003dfdd:	mov    DWORD PTR [edx],0x2
1003dfe3:	mov    edx,DWORD PTR [esp+0x10]
1003dfe7:	pop    ebp
1003dfe8:	mov    DWORD PTR [edx],ecx
1003dfea:	pop    ebx
1003dfeb:	pop    ecx
1003dfec:	ret    
1003dfed:	lea    edx,[eax-0x61]
1003dff0:	cmp    edx,0x19
1003dff3:	ja     0x1003dff8
1003dff5:	sub    eax,0x20
1003dff8:	mov    edx,DWORD PTR [esp+0x18]
1003dffc:	pop    esi
1003dffd:	pop    edi
1003dffe:	pop    ebp
1003dfff:	xor    eax,0x40
1003e002:	mov    DWORD PTR [edx],ecx
1003e004:	pop    ebx
1003e005:	pop    ecx
1003e006:	ret    
1003e007:	test   bl,0x40
1003e00a:	je     0x1003e016
1003e00c:	mov    edx,DWORD PTR [esp+0x1c]
1003e010:	mov    DWORD PTR [edx],0x3
1003e016:	pop    esi
1003e017:	pop    edi
1003e018:	mov    edx,DWORD PTR [esp+0x10]
1003e01c:	pop    ebp
1003e01d:	mov    DWORD PTR [edx],ecx
1003e01f:	pop    ebx
1003e020:	pop    ecx
1003e021:	ret    
1003e022:	mov    edi,edi
1003e024:	sahf   
1003e025:	fiadd  WORD PTR [ebx]
1003e027:	adc    BYTE PTR [eax],ah
1003e029:	fiadd  WORD PTR [ebx]
1003e02b:	adc    ah,dl
1003e02d:	fadd   QWORD PTR [ebx]
1003e02f:	adc    ah,cl
1003e031:	fild   WORD PTR [ebx]
1003e033:	adc    dl,ch
1003e035:	fadd   QWORD PTR [ebx]
1003e037:	adc    dl,ch
1003e039:	fiadd  WORD PTR [ebx]
1003e03b:	adc    BYTE PTR [edi],al
1003e03d:	loopne 0x1003e042
1003e03f:	adc    BYTE PTR [eax],al
1003e041:	add    DWORD PTR [ecx],eax
1003e043:	add    DWORD PTR [ecx],eax
1003e045:	add    DWORD PTR [ecx],eax
1003e047:	add    DWORD PTR [ecx],eax
1003e049:	add    DWORD PTR [esi],eax
1003e04b:	push   es
1003e04c:	push   es
1003e04d:	push   es
1003e04e:	push   es
1003e04f:	push   es
1003e050:	push   es
1003e051:	push   es
1003e052:	push   es
1003e053:	push   es
1003e054:	push   es
1003e055:	push   es
1003e056:	push   es
1003e057:	push   es
1003e058:	push   es
1003e059:	push   es
1003e05a:	push   es
1003e05b:	push   es
1003e05c:	add    al,BYTE PTR [esi]
1003e05e:	add    al,BYTE PTR [esi]
1003e060:	push   es
1003e061:	push   es
1003e062:	push   es
1003e063:	push   es
1003e064:	push   es
1003e065:	add    al,BYTE PTR [esi]
1003e067:	push   es
1003e068:	push   es
1003e069:	push   es
1003e06a:	push   es
1003e06b:	push   es
1003e06c:	push   es
1003e06d:	push   es
1003e06e:	push   es
1003e06f:	push   es
1003e070:	push   es
1003e071:	push   es
1003e072:	push   es
1003e073:	add    eax,DWORD PTR [esi]
1003e075:	push   es
1003e076:	push   es
1003e077:	add    al,0x6
1003e079:	push   es
1003e07a:	push   es
1003e07b:	push   es
1003e07c:	add    al,BYTE PTR [esi]
1003e07e:	push   es
1003e07f:	push   es
1003e080:	push   es
1003e081:	push   es
1003e082:	push   es
1003e083:	push   es
1003e084:	push   es
1003e085:	add    al,BYTE PTR [esi]
1003e087:	push   es
1003e088:	add    eax,0xcccccccc
1003e08d:	int3   
1003e08e:	int3   
1003e08f:	int3   
1003e090:	movzx  ecx,BYTE PTR [eax]
1003e093:	mov    cl,BYTE PTR [ecx+0x1006f428]
1003e099:	mov    dl,0x4
1003e09b:	and    cl,dl
1003e09d:	add    eax,0x1
1003e0a0:	test   cl,cl
1003e0a2:	jne    0x1003e0a7
1003e0a4:	xor    eax,eax
1003e0a6:	ret    
1003e0a7:	movzx  ecx,BYTE PTR [eax]
1003e0aa:	test   BYTE PTR [ecx+0x1006f428],dl
1003e0b0:	je     0x1003e0c1
1003e0b2:	movzx  ecx,BYTE PTR [eax+0x1]
1003e0b6:	add    eax,0x1
1003e0b9:	test   BYTE PTR [ecx+0x1006f428],dl
1003e0bf:	jne    0x1003e0b2
1003e0c1:	mov    cl,BYTE PTR [eax]
1003e0c3:	cmp    cl,0x7d
1003e0c6:	jne    0x1003e0ce
1003e0c8:	mov    eax,0x1
1003e0cd:	ret    
1003e0ce:	add    eax,0x1
1003e0d1:	cmp    cl,0x2c
1003e0d4:	jne    0x1003e0a4
1003e0d6:	mov    cl,BYTE PTR [eax]
1003e0d8:	cmp    cl,0x7d
1003e0db:	je     0x1003e0c8
1003e0dd:	movzx  ecx,cl
1003e0e0:	mov    cl,BYTE PTR [ecx+0x1006f428]
1003e0e6:	and    cl,dl
1003e0e8:	add    eax,0x1
1003e0eb:	test   cl,cl
1003e0ed:	je     0x1003e0a4
1003e0ef:	movzx  ecx,BYTE PTR [eax]
1003e0f2:	test   BYTE PTR [ecx+0x1006f428],dl
1003e0f8:	je     0x1003e10f
1003e0fa:	lea    ebx,[ebx+0x0]
1003e100:	movzx  ecx,BYTE PTR [eax+0x1]
1003e104:	add    eax,0x1
1003e107:	test   BYTE PTR [ecx+0x1006f428],dl
1003e10d:	jne    0x1003e100
1003e10f:	xor    edx,edx
1003e111:	cmp    BYTE PTR [eax],0x7d
1003e114:	sete   dl
1003e117:	mov    eax,edx
1003e119:	ret    
1003e11a:	int3   
1003e11b:	int3   
1003e11c:	int3   
1003e11d:	int3   
1003e11e:	int3   
1003e11f:	int3   
1003e120:	movzx  ecx,BYTE PTR [eax]
1003e123:	push   ebx
1003e124:	push   esi
1003e125:	mov    ebx,0x4
1003e12a:	xor    esi,esi
1003e12c:	or     edx,0xffffffff
1003e12f:	test   BYTE PTR [ecx+0x1006f428],bl
1003e135:	je     0x1003e161
1003e137:	jmp    0x1003e140
1003e139:	lea    esp,[esp+0x0]
1003e140:	lea    esi,[esi+esi*4]
1003e143:	add    eax,0x1
1003e146:	lea    esi,[ecx+esi*2-0x30]
1003e14a:	movzx  ecx,BYTE PTR [eax]
1003e14d:	test   BYTE PTR [ecx+0x1006f428],bl
1003e153:	jne    0x1003e140
1003e155:	test   esi,esi
1003e157:	jl     0x1003e1ba
1003e159:	cmp    esi,0xffff
1003e15f:	jg     0x1003e1ba
1003e161:	cmp    BYTE PTR [eax],0x7d
1003e164:	jne    0x1003e177
1003e166:	mov    edx,esi
1003e168:	mov    ecx,DWORD PTR [esp+0xc]
1003e16c:	mov    DWORD PTR [ecx],esi
1003e16e:	mov    ecx,DWORD PTR [esp+0x10]
1003e172:	pop    esi
1003e173:	mov    DWORD PTR [ecx],edx
1003e175:	pop    ebx
1003e176:	ret    
1003e177:	mov    cl,BYTE PTR [eax+0x1]
1003e17a:	add    eax,0x1
1003e17d:	cmp    cl,0x7d
1003e180:	je     0x1003e168
1003e182:	movzx  ecx,cl
1003e185:	xor    edx,edx
1003e187:	test   BYTE PTR [ecx+0x1006f428],bl
1003e18d:	je     0x1003e1b1
1003e18f:	nop
1003e190:	lea    edx,[edx+edx*4]
1003e193:	add    eax,0x1
1003e196:	lea    edx,[ecx+edx*2-0x30]
1003e19a:	movzx  ecx,BYTE PTR [eax]
1003e19d:	test   BYTE PTR [ecx+0x1006f428],bl
1003e1a3:	jne    0x1003e190
1003e1a5:	test   edx,edx
1003e1a7:	jl     0x1003e1ba
1003e1a9:	cmp    edx,0xffff
1003e1af:	jg     0x1003e1ba
1003e1b1:	cmp    edx,esi
1003e1b3:	jge    0x1003e168
1003e1b5:	pop    esi
1003e1b6:	mov    DWORD PTR [edi],ebx
1003e1b8:	pop    ebx
1003e1b9:	ret    
1003e1ba:	pop    esi
1003e1bb:	mov    DWORD PTR [edi],0x5
1003e1c1:	pop    ebx
1003e1c2:	ret    
1003e1c3:	int3   
1003e1c4:	int3   
1003e1c5:	int3   
1003e1c6:	int3   
1003e1c7:	int3   
1003e1c8:	int3   
1003e1c9:	int3   
1003e1ca:	int3   
1003e1cb:	int3   
1003e1cc:	int3   
1003e1cd:	int3   
1003e1ce:	int3   
1003e1cf:	int3   
1003e1d0:	push   ebp
1003e1d1:	push   esi
1003e1d2:	mov    esi,eax
1003e1d4:	mov    eax,DWORD PTR [esp+0xc]
1003e1d8:	mov    ebp,DWORD PTR [eax+0x30]
1003e1db:	mov    al,BYTE PTR [esi]
1003e1dd:	test   al,al
1003e1df:	push   edi
1003e1e0:	je     0x1003e2fa
1003e1e6:	cmp    al,0x5c
1003e1e8:	jne    0x1003e227
1003e1ea:	mov    al,BYTE PTR [esi+0x1]
1003e1ed:	add    esi,0x1
1003e1f0:	test   al,al
1003e1f2:	je     0x1003e2fa
1003e1f8:	cmp    al,0x51
1003e1fa:	jne    0x1003e39c
1003e200:	mov    al,BYTE PTR [esi+0x1]
1003e203:	add    esi,0x1
1003e206:	test   al,al
1003e208:	je     0x1003e2fa
1003e20e:	cmp    al,0x5c
1003e210:	jne    0x1003e200
1003e212:	test   al,al
1003e214:	je     0x1003e2fa
1003e21a:	add    esi,0x1
1003e21d:	cmp    BYTE PTR [esi],0x45
1003e220:	jne    0x1003e200
1003e222:	jmp    0x1003e39c
1003e227:	cmp    al,0x5b
1003e229:	jne    0x1003e2d9
1003e22f:	xor    edi,edi
1003e231:	movzx  eax,BYTE PTR [esi+0x1]
1003e235:	add    esi,0x1
1003e238:	cmp    eax,0x5c
1003e23b:	jne    0x1003e263
1003e23d:	cmp    BYTE PTR [esi+0x1],0x45
1003e241:	lea    eax,[esi+0x1]
1003e244:	jne    0x1003e24a
1003e246:	mov    esi,eax
1003e248:	jmp    0x1003e231
1003e24a:	push   0x3
1003e24c:	push   0x10074234
1003e251:	push   eax
1003e252:	call   0x1004f1f6
1003e257:	add    esp,0xc
1003e25a:	test   eax,eax
1003e25c:	jne    0x1003e273
1003e25e:	add    esi,0x3
1003e261:	jmp    0x1003e231
1003e263:	test   edi,edi
1003e265:	jne    0x1003e273
1003e267:	cmp    eax,0x5e
1003e26a:	jne    0x1003e273
1003e26c:	mov    edi,0x1
1003e271:	jmp    0x1003e231
1003e273:	cmp    BYTE PTR [esi+0x1],0x5d
1003e277:	jne    0x1003e289
1003e279:	mov    ecx,DWORD PTR [esp+0x10]
1003e27d:	test   DWORD PTR [ecx+0x40],0x2000000
1003e284:	jne    0x1003e289
1003e286:	add    esi,0x1
1003e289:	mov    al,BYTE PTR [esi+0x1]
1003e28c:	add    esi,0x1
1003e28f:	cmp    al,0x5d
1003e291:	je     0x1003e39c
1003e297:	test   al,al
1003e299:	je     0x1003e2fa
1003e29b:	cmp    al,0x5c
1003e29d:	jne    0x1003e2ca
1003e29f:	mov    al,BYTE PTR [esi+0x1]
1003e2a2:	add    esi,0x1
1003e2a5:	test   al,al
1003e2a7:	je     0x1003e2fa
1003e2a9:	cmp    al,0x51
1003e2ab:	jne    0x1003e2ca
1003e2ad:	lea    ecx,[ecx+0x0]
1003e2b0:	mov    al,BYTE PTR [esi+0x1]
1003e2b3:	add    esi,0x1
1003e2b6:	test   al,al
1003e2b8:	je     0x1003e2fa
1003e2ba:	cmp    al,0x5c
1003e2bc:	jne    0x1003e2b0
1003e2be:	test   al,al
1003e2c0:	je     0x1003e2fa
1003e2c2:	add    esi,0x1
1003e2c5:	cmp    BYTE PTR [esi],0x45
1003e2c8:	jne    0x1003e2b0
1003e2ca:	mov    al,BYTE PTR [esi+0x1]
1003e2cd:	add    esi,0x1
1003e2d0:	cmp    al,0x5d
1003e2d2:	jne    0x1003e297
1003e2d4:	jmp    0x1003e39c
1003e2d9:	cmp    DWORD PTR [esp+0x18],0x0
1003e2de:	je     0x1003e301
1003e2e0:	cmp    al,0x23
1003e2e2:	jne    0x1003e301
1003e2e4:	mov    al,BYTE PTR [esi+0x1]
1003e2e7:	add    esi,0x1
1003e2ea:	test   al,al
1003e2ec:	je     0x1003e2fa
1003e2ee:	cmp    al,0xa
1003e2f0:	jne    0x1003e2e4
1003e2f2:	test   al,al
1003e2f4:	jne    0x1003e39c
1003e2fa:	pop    edi
1003e2fb:	pop    esi
1003e2fc:	or     eax,0xffffffff
1003e2ff:	pop    ebp
1003e300:	ret    
1003e301:	cmp    al,0x28
1003e303:	jne    0x1003e39c
1003e309:	mov    al,BYTE PTR [esi+0x1]
1003e30c:	cmp    al,0x3f
1003e30e:	je     0x1003e325
1003e310:	cmp    al,0x2a
1003e312:	je     0x1003e325
1003e314:	add    ebp,0x1
1003e317:	test   ebx,ebx
1003e319:	jne    0x1003e39c
1003e31f:	cmp    ebp,DWORD PTR [esp+0x14]
1003e323:	jmp    0x1003e39a
1003e325:	add    esi,0x2
1003e328:	cmp    BYTE PTR [esi],0x50
1003e32b:	jne    0x1003e330
1003e32d:	add    esi,0x1
1003e330:	mov    cl,BYTE PTR [esi]
1003e332:	cmp    cl,0x3c
1003e335:	jne    0x1003e342
1003e337:	mov    al,BYTE PTR [esi+0x1]
1003e33a:	cmp    al,0x21
1003e33c:	je     0x1003e342
1003e33e:	cmp    al,0x3d
1003e340:	jne    0x1003e347
1003e342:	cmp    cl,0x27
1003e345:	jne    0x1003e39c
1003e347:	add    ebp,0x1
1003e34a:	test   ebx,ebx
1003e34c:	jne    0x1003e354
1003e34e:	cmp    ebp,DWORD PTR [esp+0x14]
1003e352:	je     0x1003e3b1
1003e354:	movzx  eax,cl
1003e357:	add    esi,0x1
1003e35a:	cmp    eax,0x3c
1003e35d:	jne    0x1003e364
1003e35f:	mov    eax,0x3e
1003e364:	movzx  edx,BYTE PTR [esi]
1003e367:	cmp    edx,eax
1003e369:	mov    ecx,esi
1003e36b:	je     0x1003e37b
1003e36d:	lea    ecx,[ecx+0x0]
1003e370:	movzx  edx,BYTE PTR [esi+0x1]
1003e374:	add    esi,0x1
1003e377:	cmp    edx,eax
1003e379:	jne    0x1003e370
1003e37b:	test   ebx,ebx
1003e37d:	je     0x1003e39c
1003e37f:	mov    eax,esi
1003e381:	sub    eax,ecx
1003e383:	cmp    DWORD PTR [esp+0x14],eax
1003e387:	jne    0x1003e39c
1003e389:	mov    edx,DWORD PTR [esp+0x14]
1003e38d:	push   edx
1003e38e:	push   ecx
1003e38f:	push   ebx
1003e390:	call   0x1004f1f6
1003e395:	add    esp,0xc
1003e398:	test   eax,eax
1003e39a:	je     0x1003e3b1
1003e39c:	mov    al,BYTE PTR [esi+0x1]
1003e39f:	add    esi,0x1
1003e3a2:	test   al,al
1003e3a4:	jne    0x1003e1e6
1003e3aa:	pop    edi
1003e3ab:	pop    esi
1003e3ac:	or     eax,0xffffffff
1003e3af:	pop    ebp
1003e3b0:	ret    
1003e3b1:	pop    edi
1003e3b2:	pop    esi
1003e3b3:	mov    eax,ebp
1003e3b5:	pop    ebp
1003e3b6:	ret    
1003e3b7:	int3   
1003e3b8:	int3   
1003e3b9:	int3   
1003e3ba:	int3   
1003e3bb:	int3   
1003e3bc:	int3   
1003e3bd:	int3   
1003e3be:	int3   
1003e3bf:	int3   
1003e3c0:	movzx  edx,BYTE PTR [eax]
1003e3c3:	mov    ecx,edx
1003e3c5:	sub    ecx,0x4
1003e3c8:	cmp    ecx,0x62
1003e3cb:	push   ebp
1003e3cc:	ja     0x1003e437
1003e3ce:	mov    edi,edi
1003e3d0:	movzx  ecx,BYTE PTR [ecx+0x1003e450]
1003e3d7:	jmp    DWORD PTR [ecx*4+0x1003e43c]
1003e3de:	test   esi,esi
1003e3e0:	jle    0x1003e3f4
1003e3e2:	movzx  ecx,BYTE PTR [eax+0x1]
1003e3e6:	mov    edx,DWORD PTR [edi]
1003e3e8:	mov    ebp,ecx
1003e3ea:	and    edx,esi
1003e3ec:	and    ebp,esi
1003e3ee:	cmp    ebp,edx
1003e3f0:	je     0x1003e3f4
1003e3f2:	mov    DWORD PTR [edi],ecx
1003e3f4:	add    eax,0x2
1003e3f7:	jmp    0x1003e42a
1003e3f9:	test   ebx,ebx
1003e3fb:	je     0x1003e437
1003e3fd:	lea    ecx,[ecx+0x0]
1003e400:	xor    ecx,ecx
1003e402:	mov    ch,BYTE PTR [eax+0x1]
1003e405:	mov    cl,BYTE PTR [eax+0x2]
1003e408:	add    eax,ecx
1003e40a:	cmp    BYTE PTR [eax],0x54
1003e40d:	je     0x1003e400
1003e40f:	movzx  edx,BYTE PTR [eax]
1003e412:	movzx  ecx,BYTE PTR [edx+0x1006e438]
1003e419:	add    eax,ecx
1003e41b:	jmp    0x1003e42a
1003e41d:	test   ebx,ebx
1003e41f:	je     0x1003e437
1003e421:	movzx  edx,BYTE PTR [edx+0x1006e438]
1003e428:	add    eax,edx
1003e42a:	movzx  edx,BYTE PTR [eax]
1003e42d:	mov    ecx,edx
1003e42f:	sub    ecx,0x4
1003e432:	cmp    ecx,0x62
1003e435:	jbe    0x1003e3d0
1003e437:	pop    ebp
1003e438:	ret    
1003e439:	lea    ecx,[ecx+0x0]
1003e43c:	sbb    eax,0xde1003e4
1003e441:	jecxz  0x1003e446
1003e443:	adc    BYTE PTR [ecx],ah
1003e445:	in     al,0x3
1003e447:	adc    cl,bh
1003e449:	jecxz  0x1003e44e
1003e44b:	adc    BYTE PTR [edi],dh
1003e44d:	in     al,0x3
1003e44f:	adc    BYTE PTR [eax],al
1003e451:	add    BYTE PTR [esp+eax*1],al
1003e454:	add    al,0x4
1003e456:	add    al,0x4
1003e458:	add    al,0x4
1003e45a:	add    al,0x4
1003e45c:	add    al,0x4
1003e45e:	add    al,0x4
1003e460:	add    al,0x4
1003e462:	add    al,0x4
1003e464:	add    al,0x1
1003e466:	add    al,0x4
1003e468:	add    al,0x4
1003e46a:	add    al,0x4
1003e46c:	add    al,0x4
1003e46e:	add    al,0x4
1003e470:	add    al,0x4
1003e472:	add    al,0x4
1003e474:	add    al,0x4
1003e476:	add    al,0x4
1003e478:	add    al,0x4
1003e47a:	add    al,0x4
1003e47c:	add    al,0x4
1003e47e:	add    al,0x4
1003e480:	add    al,0x4
1003e482:	add    al,0x4
1003e484:	add    al,0x4
1003e486:	add    al,0x4
1003e488:	add    al,0x4
1003e48a:	add    al,0x4
1003e48c:	add    al,0x4
1003e48e:	add    al,0x4
1003e490:	add    al,0x4
1003e492:	add    al,0x4
1003e494:	add    al,0x4
1003e496:	add    al,0x4
1003e498:	add    al,0x4
1003e49a:	add    al,0x4
1003e49c:	add    al,0x4
1003e49e:	add    al,0x2
1003e4a0:	add    al,0x4
1003e4a2:	add    al,0x4
1003e4a4:	add    al,0x3
1003e4a6:	add    eax,DWORD PTR [ebx]
1003e4a8:	add    al,0x4
1003e4aa:	add    al,0x4
1003e4ac:	add    al,0x4
1003e4ae:	add    al,0x4
1003e4b0:	add    al,BYTE PTR [edx]
1003e4b2:	add    cl,ah
1003e4b4:	int3   
1003e4b5:	int3   
1003e4b6:	int3   
1003e4b7:	int3   
1003e4b8:	int3   
1003e4b9:	int3   
1003e4ba:	int3   
1003e4bb:	int3   
1003e4bc:	int3   
1003e4bd:	int3   
1003e4be:	int3   
1003e4bf:	int3   
1003e4c0:	push   ebx
1003e4c1:	push   ebp
1003e4c2:	push   esi
1003e4c3:	mov    esi,DWORD PTR [esp+0x10]
1003e4c7:	mov    cl,BYTE PTR [esi+0x3]
1003e4ca:	add    esi,0x3
1003e4cd:	movzx  eax,cl
1003e4d0:	push   edi
1003e4d1:	or     ebx,0xffffffff
1003e4d4:	xor    edi,edi
1003e4d6:	cmp    eax,0x66
1003e4d9:	ja     0x1003e608
1003e4df:	mov    ebp,DWORD PTR [esp+0x18]
1003e4e3:	jmp    0x1003e4f0
1003e4e5:	lea    esp,[esp+0x0]
1003e4ec:	lea    esp,[esp+0x0]
1003e4f0:	movzx  edx,BYTE PTR [eax+0x1003e654]
1003e4f7:	jmp    DWORD PTR [edx*4+0x1003e624]
1003e4fe:	xor    ecx,ecx
1003e500:	cmp    eax,0x5f
1003e503:	setne  cl
1003e506:	push   ebp
1003e507:	sub    ecx,0x1
1003e50a:	and    ecx,0x2
1003e50d:	add    ecx,esi
1003e50f:	push   ecx
1003e510:	call   0x1003e4c0
1003e515:	add    esp,0x8
1003e518:	test   eax,eax
1003e51a:	jl     0x1003e60b
1003e520:	add    edi,eax
1003e522:	xor    edx,edx
1003e524:	mov    dh,BYTE PTR [esi+0x1]
1003e527:	mov    dl,BYTE PTR [esi+0x2]
1003e52a:	add    esi,edx
1003e52c:	cmp    BYTE PTR [esi],0x54
1003e52f:	je     0x1003e522
1003e531:	add    esi,0x3
1003e534:	jmp    0x1003e5fa
1003e539:	test   ebx,ebx
1003e53b:	jge    0x1003e541
1003e53d:	mov    ebx,edi
1003e53f:	jmp    0x1003e549
1003e541:	cmp    ebx,edi
1003e543:	jne    0x1003e608
1003e549:	cmp    cl,0x54
1003e54c:	jne    0x1003e610
1003e552:	add    esi,0x3
1003e555:	xor    edi,edi
1003e557:	jmp    0x1003e5fa
1003e55c:	lea    esp,[esp+0x0]
1003e560:	xor    eax,eax
1003e562:	mov    ah,BYTE PTR [esi+0x1]
1003e565:	mov    al,BYTE PTR [esi+0x2]
1003e568:	add    esi,eax
1003e56a:	cmp    BYTE PTR [esi],0x54
1003e56d:	je     0x1003e560
1003e56f:	movzx  ecx,BYTE PTR [esi]
1003e572:	movzx  edx,BYTE PTR [ecx+0x1006e438]
1003e579:	add    esi,edx
1003e57b:	jmp    0x1003e5fa
1003e57d:	add    edi,0x1
1003e580:	add    esi,0x2
1003e583:	jmp    0x1003e5fa
1003e585:	xor    eax,eax
1003e587:	mov    ah,BYTE PTR [esi+0x1]
1003e58a:	mov    al,BYTE PTR [esi+0x2]
1003e58d:	add    edi,eax
1003e58f:	add    esi,0x4
1003e592:	jmp    0x1003e5fa
1003e594:	mov    al,BYTE PTR [esi+0x3]
1003e597:	xor    ecx,ecx
1003e599:	mov    ch,BYTE PTR [esi+0x1]
1003e59c:	mov    cl,BYTE PTR [esi+0x2]
1003e59f:	add    edi,ecx
1003e5a1:	cmp    al,0x10
1003e5a3:	je     0x1003e5a9
1003e5a5:	cmp    al,0xf
1003e5a7:	jne    0x1003e5ac
1003e5a9:	add    esi,0x2
1003e5ac:	add    esi,0x4
1003e5af:	jmp    0x1003e5fa
1003e5b1:	add    esi,0x2
1003e5b4:	add    edi,0x1
1003e5b7:	add    esi,0x1
1003e5ba:	jmp    0x1003e5fa
1003e5bc:	movzx  eax,BYTE PTR [esi+0x21]
1003e5c0:	add    esi,0x21
1003e5c3:	add    eax,0xffffffba
1003e5c6:	cmp    eax,0x7
1003e5c9:	ja     0x1003e5f7
1003e5cb:	movzx  edx,BYTE PTR [eax+0x1003e6c8]
1003e5d2:	jmp    DWORD PTR [edx*4+0x1003e6bc]
1003e5d9:	movzx  ecx,BYTE PTR [esi+0x2]
1003e5dd:	xor    edx,edx
1003e5df:	mov    dh,BYTE PTR [esi+0x3]
1003e5e2:	xor    eax,eax
1003e5e4:	mov    ah,BYTE PTR [esi+0x1]
1003e5e7:	mov    dl,BYTE PTR [esi+0x4]
1003e5ea:	or     eax,ecx
1003e5ec:	cmp    eax,edx
1003e5ee:	jne    0x1003e608
1003e5f0:	add    edi,eax
1003e5f2:	add    esi,0x5
1003e5f5:	jmp    0x1003e5fa
1003e5f7:	add    edi,0x1
1003e5fa:	mov    cl,BYTE PTR [esi]
1003e5fc:	movzx  eax,cl
1003e5ff:	cmp    eax,0x66
1003e602:	jbe    0x1003e4f0
1003e608:	or     eax,0xffffffff
1003e60b:	pop    edi
1003e60c:	pop    esi
1003e60d:	pop    ebp
1003e60e:	pop    ebx
1003e60f:	ret    
1003e610:	pop    edi
1003e611:	pop    esi
1003e612:	pop    ebp
1003e613:	mov    eax,ebx
1003e615:	pop    ebx
1003e616:	ret    
1003e617:	pop    edi
1003e618:	pop    esi
1003e619:	pop    ebp
1003e61a:	mov    eax,0xfffffffe
1003e61f:	pop    ebx
1003e620:	ret    
1003e621:	lea    ecx,[ecx+0x0]
1003e624:	cmp    ebp,esp
1003e626:	add    edx,DWORD PTR [eax]
1003e628:	outs   dx,DWORD PTR ds:[esi]
1003e629:	in     eax,0x3
1003e62b:	adc    BYTE PTR [ebp+eiz*8-0x19e8effd],dh
1003e632:	add    edx,DWORD PTR [eax]
1003e634:	mov    cl,0xe5
1003e636:	add    edx,DWORD PTR [eax]
1003e638:	jge    0x1003e61f
1003e63a:	add    edx,DWORD PTR [eax]
1003e63c:	test   ebp,esp
1003e63e:	add    edx,DWORD PTR [eax]
1003e640:	xchg   esp,eax
1003e641:	in     eax,0x3
1003e643:	adc    BYTE PTR [ebp+eiz*8-0x1a9feffd],bh
1003e64a:	add    edx,DWORD PTR [eax]
1003e64c:	(bad)  
1003e64d:	in     al,0x3
1003e64f:	adc    BYTE PTR [eax],cl
1003e651:	out    0x3,al
1003e653:	adc    BYTE PTR [eax],al
1003e655:	add    DWORD PTR [ecx],eax
1003e657:	or     eax,DWORD PTR [ecx]
1003e659:	add    DWORD PTR [edx],eax
1003e65b:	add    al,BYTE PTR [edx]
1003e65d:	add    al,BYTE PTR [edx]
1003e65f:	add    al,BYTE PTR [edx]
1003e661:	add    al,BYTE PTR [ebx]
1003e663:	add    al,0x4
1003e665:	or     ecx,DWORD PTR [ebx]
1003e667:	or     ecx,DWORD PTR [ebx]
1003e669:	or     ecx,DWORD PTR [ebx]
1003e66b:	add    DWORD PTR [ecx],eax
1003e66d:	add    DWORD PTR [ecx],eax
1003e66f:	add    DWORD PTR ds:0xb0b0505,eax
1003e675:	or     ecx,DWORD PTR [ebx]
1003e677:	or     ecx,DWORD PTR [ebx]
1003e679:	or     ecx,DWORD PTR [ebx]
1003e67b:	push   es
1003e67c:	or     ecx,DWORD PTR [ebx]
1003e67e:	or     ecx,DWORD PTR [ebx]
1003e680:	or     ecx,DWORD PTR [ebx]
1003e682:	or     ecx,DWORD PTR [ebx]
1003e684:	or     ecx,DWORD PTR [ebx]
1003e686:	or     ecx,DWORD PTR [ebx]
1003e688:	or     ecx,DWORD PTR [ebx]
1003e68a:	or     ecx,DWORD PTR [ebx]
1003e68c:	or     ecx,DWORD PTR [ebx]
1003e68e:	or     ecx,DWORD PTR [ebx]
1003e690:	or     ecx,DWORD PTR [ebx]
1003e692:	or     ecx,DWORD PTR [ebx]
1003e694:	or     eax,DWORD PTR [edi]
1003e696:	or     ecx,DWORD PTR [ebx]
1003e698:	or     ecx,DWORD PTR [ebx]
1003e69a:	or     ecx,DWORD PTR [ebx]
1003e69c:	or     ecx,DWORD PTR [ebx]
1003e69e:	or     ecx,DWORD PTR [ebx]
1003e6a0:	or     ecx,DWORD PTR [ebx]
1003e6a2:	or     BYTE PTR [eax],cl
1003e6a4:	or     ecx,DWORD PTR [ebx]
1003e6a6:	or     eax,DWORD PTR [ecx]
1003e6a8:	add    BYTE PTR [eax],al
1003e6aa:	add    BYTE PTR [eax],al
1003e6ac:	or     DWORD PTR [ecx],ecx
1003e6ae:	or     DWORD PTR [ecx],ecx
1003e6b0:	add    DWORD PTR [edx],ecx
1003e6b2:	or     cl,BYTE PTR [edx]
1003e6b4:	or     cl,BYTE PTR [ebx]
1003e6b6:	or     ecx,DWORD PTR [ebx]
1003e6b8:	add    DWORD PTR [ecx],eax
1003e6ba:	add    DWORD PTR [eax+0x1003e608],edx
1003e6c0:	fxam   
1003e6c2:	add    edx,DWORD PTR [eax]
1003e6c4:	mul    ebp
1003e6c6:	add    edx,DWORD PTR [eax]
1003e6c8:	add    BYTE PTR [eax],al
1003e6ca:	add    al,BYTE PTR [edx]
1003e6cc:	add    BYTE PTR [eax],al
1003e6ce:	add    DWORD PTR [ecx],eax
1003e6d0:	movzx  ecx,BYTE PTR [eax]
1003e6d3:	test   ecx,ecx
1003e6d5:	je     0x1003e737
1003e6d7:	cmp    ecx,0x50
1003e6da:	jne    0x1003e6e6
1003e6dc:	xor    ecx,ecx
1003e6de:	mov    ch,BYTE PTR [eax+0x1]
1003e6e1:	mov    cl,BYTE PTR [eax+0x2]
1003e6e4:	jmp    0x1003e72e
1003e6e6:	cmp    ecx,0x5f
1003e6e9:	jne    0x1003e6fc
1003e6eb:	xor    edx,edx
1003e6ed:	mov    dh,BYTE PTR [eax+0x3]
1003e6f0:	mov    dl,BYTE PTR [eax+0x4]
1003e6f3:	cmp    edx,esi
1003e6f5:	je     0x1003e739
1003e6f7:	add    eax,0x5
1003e6fa:	jmp    0x1003e730
1003e6fc:	lea    edx,[ecx-0x39]
1003e6ff:	cmp    edx,0xc
1003e702:	ja     0x1003e727
1003e704:	movzx  edx,BYTE PTR [edx+0x1003e744]
1003e70b:	jmp    DWORD PTR [edx*4+0x1003e73c]
1003e712:	mov    dl,BYTE PTR [eax+0x1]
1003e715:	jmp    0x1003e71a
1003e717:	mov    dl,BYTE PTR [eax+0x3]
1003e71a:	cmp    dl,0x10
1003e71d:	je     0x1003e724
1003e71f:	cmp    dl,0xf
1003e722:	jne    0x1003e727
1003e724:	add    eax,0x2
1003e727:	movzx  ecx,BYTE PTR [ecx+0x1006e438]
1003e72e:	add    eax,ecx
1003e730:	movzx  ecx,BYTE PTR [eax]
1003e733:	test   ecx,ecx
1003e735:	jne    0x1003e6d7
1003e737:	xor    eax,eax
1003e739:	ret    
1003e73a:	mov    edi,edi
1003e73c:	adc    ah,bh
1003e73e:	add    edx,DWORD PTR [eax]
1003e740:	pop    ss
1003e741:	out    0x3,eax
1003e743:	adc    BYTE PTR [eax],al
1003e745:	add    BYTE PTR [eax],al
1003e747:	add    BYTE PTR [eax],al
1003e749:	add    BYTE PTR [ecx],al
1003e74b:	add    DWORD PTR [ecx],eax
1003e74d:	add    BYTE PTR [eax],al
1003e74f:	add    BYTE PTR [ecx],al
1003e751:	int3   
1003e752:	int3   
1003e753:	int3   
1003e754:	int3   
1003e755:	int3   
1003e756:	int3   
1003e757:	int3   
1003e758:	int3   
1003e759:	int3   
1003e75a:	int3   
1003e75b:	int3   
1003e75c:	int3   
1003e75d:	int3   
1003e75e:	int3   
1003e75f:	int3   
1003e760:	movzx  ecx,BYTE PTR [eax]
1003e763:	test   ecx,ecx
1003e765:	je     0x1003e7b6
1003e767:	cmp    ecx,0x52
1003e76a:	je     0x1003e7b8
1003e76c:	cmp    ecx,0x50
1003e76f:	jne    0x1003e77b
1003e771:	xor    ecx,ecx
1003e773:	mov    ch,BYTE PTR [eax+0x1]
1003e776:	mov    cl,BYTE PTR [eax+0x2]
1003e779:	jmp    0x1003e7ad
1003e77b:	lea    edx,[ecx-0x39]
1003e77e:	cmp    edx,0xc
1003e781:	ja     0x1003e7a6
1003e783:	movzx  edx,BYTE PTR [edx+0x1003e7c4]
1003e78a:	jmp    DWORD PTR [edx*4+0x1003e7bc]
1003e791:	mov    dl,BYTE PTR [eax+0x1]
1003e794:	jmp    0x1003e799
1003e796:	mov    dl,BYTE PTR [eax+0x3]
1003e799:	cmp    dl,0x10
1003e79c:	je     0x1003e7a3
1003e79e:	cmp    dl,0xf
1003e7a1:	jne    0x1003e7a6
1003e7a3:	add    eax,0x2
1003e7a6:	movzx  ecx,BYTE PTR [ecx+0x1006e438]
1003e7ad:	add    eax,ecx
1003e7af:	movzx  ecx,BYTE PTR [eax]
1003e7b2:	test   ecx,ecx
1003e7b4:	jne    0x1003e767
1003e7b6:	xor    eax,eax
1003e7b8:	ret    
1003e7b9:	lea    ecx,[ecx+0x0]
1003e7bc:	xchg   ecx,eax
1003e7bd:	out    0x3,eax
1003e7bf:	adc    BYTE PTR [esi+0x1003e7],dl
1003e7c5:	add    BYTE PTR [eax],al
1003e7c7:	add    BYTE PTR [eax],al
1003e7c9:	add    BYTE PTR [ecx],al
1003e7cb:	add    DWORD PTR [ecx],eax
1003e7cd:	add    BYTE PTR [eax],al
1003e7cf:	add    BYTE PTR [ecx],al
1003e7d1:	int3   
1003e7d2:	int3   
1003e7d3:	int3   
1003e7d4:	int3   
1003e7d5:	int3   
1003e7d6:	int3   
1003e7d7:	int3   
1003e7d8:	int3   
1003e7d9:	int3   
1003e7da:	int3   
1003e7db:	int3   
1003e7dc:	int3   
1003e7dd:	int3   
1003e7de:	int3   
1003e7df:	int3   
1003e7e0:	mov    ecx,DWORD PTR [esp+0x4]
1003e7e4:	movzx  eax,BYTE PTR [ecx]
1003e7e7:	movzx  eax,BYTE PTR [eax+0x1006e438]
1003e7ee:	push   ebx
1003e7ef:	push   ebp
1003e7f0:	push   esi
1003e7f1:	push   edi
1003e7f2:	add    eax,ecx
1003e7f4:	mov    ebx,0x1
1003e7f9:	xor    esi,esi
1003e7fb:	xor    edi,edi
1003e7fd:	call   0x1003e3c0
1003e802:	mov    ebp,DWORD PTR [esp+0x18]
1003e806:	mov    esi,eax
1003e808:	cmp    esi,ebp
1003e80a:	jae    0x1003e934
1003e810:	movzx  eax,BYTE PTR [esi]
1003e813:	cmp    eax,0x58
1003e816:	jne    0x1003e82c
1003e818:	xor    ecx,ecx
1003e81a:	mov    ch,BYTE PTR [esi+0x1]
1003e81d:	mov    cl,BYTE PTR [esi+0x2]
1003e820:	add    esi,ecx
1003e822:	cmp    BYTE PTR [esi],0x54
1003e825:	je     0x1003e818
1003e827:	jmp    0x1003e910
1003e82c:	cmp    eax,0x67
1003e82f:	je     0x1003e8f8
1003e835:	cmp    eax,0x68
1003e838:	je     0x1003e8f8
1003e83e:	cmp    eax,0x6f
1003e841:	je     0x1003e8f8
1003e847:	cmp    eax,0x5e
1003e84a:	je     0x1003e8b9
1003e84c:	cmp    eax,0x5f
1003e84f:	je     0x1003e8b9
1003e851:	cmp    eax,0x5d
1003e854:	je     0x1003e8b9
1003e856:	cmp    eax,0x60
1003e859:	je     0x1003e8b9
1003e85b:	lea    ecx,[eax-0x6]
1003e85e:	cmp    ecx,0x51
1003e861:	ja     0x1003e913
1003e867:	movzx  edx,BYTE PTR [ecx+0x1003e958]
1003e86e:	jmp    DWORD PTR [edx*4+0x1003e940]
1003e875:	movzx  ecx,BYTE PTR [esi+0x21]
1003e879:	add    ecx,0xffffffba
1003e87c:	cmp    ecx,0x7
1003e87f:	ja     0x1003e89b
1003e881:	movzx  ecx,BYTE PTR [ecx+0x1003e9b8]
1003e888:	jmp    DWORD PTR [ecx*4+0x1003e9ac]
1003e88f:	xor    edx,edx
1003e891:	mov    dh,BYTE PTR [esi+0x22]
1003e894:	mov    dl,BYTE PTR [esi+0x23]
1003e897:	test   edx,edx
1003e899:	jle    0x1003e913
1003e89b:	pop    edi
1003e89c:	pop    esi
1003e89d:	pop    ebp
1003e89e:	xor    eax,eax
1003e8a0:	pop    ebx
1003e8a1:	ret    
1003e8a2:	mov    cl,BYTE PTR [esi+0x1]
1003e8a5:	jmp    0x1003e8aa
1003e8a7:	mov    cl,BYTE PTR [esi+0x3]
1003e8aa:	cmp    cl,0x10
1003e8ad:	je     0x1003e8b4
1003e8af:	cmp    cl,0xf
1003e8b2:	jne    0x1003e913
1003e8b4:	add    esi,0x2
1003e8b7:	jmp    0x1003e913
1003e8b9:	xor    eax,eax
1003e8bb:	mov    ah,BYTE PTR [esi+0x1]
1003e8be:	mov    al,BYTE PTR [esi+0x2]
1003e8c1:	test   eax,eax
1003e8c3:	je     0x1003e934
1003e8c5:	xor    edi,edi
1003e8c7:	test   edi,edi
1003e8c9:	jne    0x1003e8e3
1003e8cb:	mov    ecx,DWORD PTR [esp+0x1c]
1003e8cf:	push   ecx
1003e8d0:	push   ebp
1003e8d1:	push   esi
1003e8d2:	call   0x1003e7e0
1003e8d7:	add    esp,0xc
1003e8da:	test   eax,eax
1003e8dc:	je     0x1003e8e3
1003e8de:	mov    edi,0x1
1003e8e3:	xor    edx,edx
1003e8e5:	mov    dh,BYTE PTR [esi+0x1]
1003e8e8:	mov    dl,BYTE PTR [esi+0x2]
1003e8eb:	add    esi,edx
1003e8ed:	cmp    BYTE PTR [esi],0x54
1003e8f0:	je     0x1003e8c7
1003e8f2:	test   edi,edi
1003e8f4:	je     0x1003e89b
1003e8f6:	jmp    0x1003e910
1003e8f8:	movzx  eax,BYTE PTR [eax+0x1006e438]
1003e8ff:	add    esi,eax
1003e901:	xor    ecx,ecx
1003e903:	mov    ch,BYTE PTR [esi+0x1]
1003e906:	mov    cl,BYTE PTR [esi+0x2]
1003e909:	add    esi,ecx
1003e90b:	cmp    BYTE PTR [esi],0x54
1003e90e:	je     0x1003e901
1003e910:	movzx  eax,BYTE PTR [esi]
1003e913:	movzx  eax,BYTE PTR [eax+0x1006e438]
1003e91a:	add    eax,esi
1003e91c:	mov    ebx,0x1
1003e921:	xor    esi,esi
1003e923:	xor    edi,edi
1003e925:	call   0x1003e3c0
1003e92a:	mov    esi,eax
1003e92c:	cmp    esi,ebp
1003e92e:	jb     0x1003e810
1003e934:	pop    edi
1003e935:	pop    esi
1003e936:	pop    ebp
1003e937:	mov    eax,0x1
1003e93c:	pop    ebx
1003e93d:	ret    
1003e93e:	mov    edi,edi
1003e940:	fwait
1003e941:	call   0xf8a5f949
1003e946:	add    edx,DWORD PTR [eax]
1003e948:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
1003e949:	call   0xf878f951
1003e94e:	add    edx,DWORD PTR [eax]
1003e950:	xor    al,0xe9
1003e952:	add    edx,DWORD PTR [eax]
1003e954:	adc    ebp,ecx
1003e956:	add    edx,DWORD PTR [eax]
	...
1003e960:	add    BYTE PTR [eax],al
1003e962:	add    BYTE PTR ds:0x5050505,al
1003e968:	add    BYTE PTR ds:0x5050505,al
1003e96e:	add    BYTE PTR [eax],al
1003e970:	add    BYTE PTR ds:0x5000005,al
1003e976:	add    eax,0x5000505
1003e97b:	add    BYTE PTR ds:0x50505,al
1003e981:	add    BYTE PTR ds:0x50505,al
1003e987:	add    eax,0x1050500
1003e98c:	add    DWORD PTR [eax],eax
1003e98e:	add    BYTE PTR [ecx],al
1003e990:	add    DWORD PTR [edx],eax
1003e992:	add    al,BYTE PTR [eax]
1003e994:	add    DWORD PTR [eax],eax
1003e996:	add    DWORD PTR [edx],eax
1003e998:	add    eax,0x5050505
1003e99d:	add    eax,0x3030505
1003e9a2:	add    eax,0x4050505
1003e9a7:	add    al,0x4
1003e9a9:	add    al,0x8b
1003e9ab:	call   DWORD PTR [ebx]
1003e9ad:	jmp    0xf892f9b5
1003e9b2:	add    edx,DWORD PTR [eax]
1003e9b4:	fwait
1003e9b5:	call   0x1003f9bd
1003e9ba:	add    al,BYTE PTR [edx]
1003e9bc:	add    BYTE PTR [eax],al
1003e9be:	add    DWORD PTR [ecx],eax
1003e9c0:	movzx  edx,BYTE PTR [eax+0x1]
1003e9c4:	add    eax,0x1
1003e9c7:	mov    cl,BYTE PTR [eax+0x1]
1003e9ca:	add    eax,0x1
1003e9cd:	test   cl,cl
1003e9cf:	push   ebx
1003e9d0:	je     0x1003e9fd
1003e9d2:	mov    bl,0x5d
1003e9d4:	cmp    cl,0x5c
1003e9d7:	jne    0x1003e9e3
1003e9d9:	cmp    BYTE PTR [eax+0x1],bl
1003e9dc:	jne    0x1003e9e3
1003e9de:	add    eax,0x1
1003e9e1:	jmp    0x1003e9f3
1003e9e3:	cmp    cl,bl
1003e9e5:	je     0x1003e9fd
1003e9e7:	movzx  ecx,cl
1003e9ea:	cmp    ecx,edx
1003e9ec:	jne    0x1003e9f3
1003e9ee:	cmp    BYTE PTR [eax+0x1],bl
1003e9f1:	je     0x1003ea01
1003e9f3:	mov    cl,BYTE PTR [eax+0x1]
1003e9f6:	add    eax,0x1
1003e9f9:	test   cl,cl
1003e9fb:	jne    0x1003e9d4
1003e9fd:	xor    eax,eax
1003e9ff:	pop    ebx
1003ea00:	ret    
1003ea01:	mov    edx,DWORD PTR [esp+0x8]
1003ea05:	mov    DWORD PTR [edx],eax
1003ea07:	mov    eax,0x1
1003ea0c:	pop    ebx
1003ea0d:	ret    
1003ea0e:	int3   
1003ea0f:	int3   
1003ea10:	push   ebp
1003ea11:	mov    ebp,DWORD PTR [esp+0x8]
1003ea15:	push   esi
1003ea16:	push   edi
1003ea17:	mov    edi,0x1006e9e8
1003ea1c:	xor    esi,esi
1003ea1e:	mov    edi,edi
1003ea20:	movzx  eax,BYTE PTR [esi+0x1006ea3c]
1003ea27:	cmp    ebx,eax
1003ea29:	jne    0x1003ea3a
1003ea2b:	push   ebx
1003ea2c:	push   edi
1003ea2d:	push   ebp
1003ea2e:	call   0x1004f1f6
1003ea33:	add    esp,0xc
1003ea36:	test   eax,eax
1003ea38:	je     0x1003ea58
1003ea3a:	movzx  ecx,BYTE PTR [esi+0x1006ea3c]
1003ea41:	add    esi,0x1
1003ea44:	cmp    BYTE PTR [esi+0x1006ea3c],0x0
1003ea4b:	lea    edi,[edi+ecx*1+0x1]
1003ea4f:	jne    0x1003ea20
1003ea51:	pop    edi
1003ea52:	pop    esi
1003ea53:	or     eax,0xffffffff
1003ea56:	pop    ebp
1003ea57:	ret    
1003ea58:	pop    edi
1003ea59:	mov    eax,esi
1003ea5b:	pop    esi
1003ea5c:	pop    ebp
1003ea5d:	ret    
1003ea5e:	int3   
1003ea5f:	int3   
1003ea60:	mov    eax,DWORD PTR [esp+0x4]
1003ea64:	push   ebx
1003ea65:	mov    ebx,DWORD PTR [esp+0xc]
1003ea69:	push   esi
1003ea6a:	push   edi
1003ea6b:	mov    edi,DWORD PTR [esp+0x18]
1003ea6f:	call   0x1003e760
1003ea74:	mov    esi,eax
1003ea76:	test   esi,esi
1003ea78:	je     0x1003eafa
1003ea7e:	push   ebp
1003ea7f:	nop
1003ea80:	mov    ecx,DWORD PTR [esp+0x20]
1003ea84:	mov    ebp,DWORD PTR [edi+0x20]
1003ea87:	cmp    ecx,ebp
1003ea89:	jae    0x1003eac3
1003ea8b:	mov    eax,DWORD PTR [edi+0x14]
1003ea8e:	lea    edi,[esi+0x1]
1003ea91:	xor    edx,edx
1003ea93:	mov    dh,BYTE PTR [ecx]
1003ea95:	mov    dl,BYTE PTR [ecx+0x1]
1003ea98:	lea    ebx,[eax+edx*1]
1003ea9b:	cmp    ebx,edi
1003ea9d:	je     0x1003eaac
1003ea9f:	add    ecx,0x2
1003eaa2:	cmp    ecx,ebp
1003eaa4:	jb     0x1003ea91
1003eaa6:	mov    ebx,DWORD PTR [esp+0x18]
1003eaaa:	jmp    0x1003eabf
1003eaac:	mov    ebx,DWORD PTR [esp+0x18]
1003eab0:	lea    eax,[edx+ebx*1]
1003eab3:	sar    eax,0x8
1003eab6:	mov    BYTE PTR [ecx],al
1003eab8:	mov    al,bl
1003eaba:	add    al,dl
1003eabc:	mov    BYTE PTR [ecx+0x1],al
1003eabf:	mov    edi,DWORD PTR [esp+0x1c]
1003eac3:	cmp    ecx,DWORD PTR [edi+0x20]
1003eac6:	jb     0x1003eaeb
1003eac8:	mov    ecx,DWORD PTR [edi+0x14]
1003eacb:	xor    eax,eax
1003eacd:	mov    ah,BYTE PTR [esi+0x1]
1003ead0:	mov    al,BYTE PTR [esi+0x2]
1003ead3:	add    ecx,eax
1003ead5:	cmp    ecx,DWORD PTR [esp+0x14]
1003ead9:	jb     0x1003eaeb
1003eadb:	lea    edx,[eax+ebx*1]
1003eade:	sar    edx,0x8
1003eae1:	mov    cl,bl
1003eae3:	add    cl,al
1003eae5:	mov    BYTE PTR [esi+0x1],dl
1003eae8:	mov    BYTE PTR [esi+0x2],cl
1003eaeb:	lea    eax,[esi+0x3]
1003eaee:	call   0x1003e760
1003eaf3:	mov    esi,eax
1003eaf5:	test   esi,esi
1003eaf7:	jne    0x1003ea80
1003eaf9:	pop    ebp
1003eafa:	pop    edi
1003eafb:	pop    esi
1003eafc:	pop    ebx
1003eafd:	ret    
1003eafe:	int3   
1003eaff:	int3   
1003eb00:	push   ecx
1003eb01:	mov    ecx,DWORD PTR [esp+0x10]
1003eb05:	push   ebx
1003eb06:	mov    ebx,DWORD PTR [esp+0x18]
1003eb0a:	and    ebx,0x8
1003eb0d:	push   ebp
1003eb0e:	push   edi
1003eb0f:	je     0x1003eb9f
1003eb15:	movzx  edx,BYTE PTR [ecx]
1003eb18:	mov    eax,DWORD PTR [esi+0xc]
1003eb1b:	test   BYTE PTR [edx+eax*1],0x1
1003eb1f:	je     0x1003eb32
1003eb21:	movzx  edx,BYTE PTR [ecx+0x1]
1003eb25:	add    ecx,0x1
1003eb28:	test   BYTE PTR [edx+eax*1],0x1
1003eb2c:	jne    0x1003eb21
1003eb2e:	mov    DWORD PTR [esp+0x1c],ecx
1003eb32:	cmp    BYTE PTR [ecx],0x23
1003eb35:	jne    0x1003eb9f
1003eb37:	mov    al,BYTE PTR [ecx+0x1]
1003eb3a:	add    ecx,0x1
1003eb3d:	test   al,al
1003eb3f:	mov    DWORD PTR [esp+0x1c],ecx
1003eb43:	je     0x1003eb15
1003eb45:	mov    edx,DWORD PTR [esi+0x50]
1003eb48:	test   edx,edx
1003eb4a:	je     0x1003eb6e
1003eb4c:	mov    eax,DWORD PTR [esi+0x1c]
1003eb4f:	cmp    ecx,eax
1003eb51:	jae    0x1003eb8c
1003eb53:	push   edx
1003eb54:	lea    edi,[esi+0x54]
1003eb57:	xor    edx,edx
1003eb59:	call   0x10042c90
1003eb5e:	add    esp,0x4
1003eb61:	test   eax,eax
1003eb63:	je     0x1003eb8c
1003eb65:	add    ecx,DWORD PTR [esi+0x54]
1003eb68:	mov    DWORD PTR [esp+0x1c],ecx
1003eb6c:	jmp    0x1003eb15
1003eb6e:	mov    edx,DWORD PTR [esi+0x54]
1003eb71:	mov    edi,DWORD PTR [esi+0x1c]
1003eb74:	sub    edi,edx
1003eb76:	cmp    ecx,edi
1003eb78:	ja     0x1003eb8c
1003eb7a:	cmp    al,BYTE PTR [esi+0x58]
1003eb7d:	jne    0x1003eb8c
1003eb7f:	cmp    edx,0x1
1003eb82:	je     0x1003eb65
1003eb84:	mov    al,BYTE PTR [ecx+0x1]
1003eb87:	cmp    al,BYTE PTR [esi+0x59]
1003eb8a:	je     0x1003eb65
1003eb8c:	mov    al,BYTE PTR [ecx+0x1]
1003eb8f:	add    ecx,0x1
1003eb92:	test   al,al
1003eb94:	mov    DWORD PTR [esp+0x1c],ecx
1003eb98:	jne    0x1003eb45
1003eb9a:	jmp    0x1003eb15
1003eb9f:	mov    al,BYTE PTR [ecx]
1003eba1:	cmp    al,0x5c
1003eba3:	jne    0x1003ebdc
1003eba5:	mov    ecx,DWORD PTR [esi+0x30]
1003eba8:	push   0x0
1003ebaa:	push   ecx
1003ebab:	lea    edx,[esp+0x14]
1003ebaf:	push   edx
1003ebb0:	lea    eax,[esp+0x28]
1003ebb4:	push   eax
1003ebb5:	mov    eax,DWORD PTR [esp+0x30]
1003ebb9:	mov    DWORD PTR [esp+0x1c],0x0
1003ebc1:	call   0x1003dc60
1003ebc6:	add    esp,0x10
1003ebc9:	cmp    DWORD PTR [esp+0xc],0x0
1003ebce:	mov    ebp,eax
1003ebd0:	jne    0x1003f091
1003ebd6:	mov    ecx,DWORD PTR [esp+0x1c]
1003ebda:	jmp    0x1003ebec
1003ebdc:	mov    edx,DWORD PTR [esi+0xc]
1003ebdf:	movzx  ebp,al
1003ebe2:	test   BYTE PTR [edx+ebp*1],0x80
1003ebe6:	jne    0x1003f091
1003ebec:	add    ecx,0x1
1003ebef:	test   ebx,ebx
1003ebf1:	je     0x1003ec7f
1003ebf7:	jmp    0x1003ec00
1003ebf9:	lea    esp,[esp+0x0]
1003ec00:	movzx  edx,BYTE PTR [ecx]
1003ec03:	mov    eax,DWORD PTR [esi+0xc]
1003ec06:	test   BYTE PTR [edx+eax*1],0x1
1003ec0a:	je     0x1003ec1d
1003ec0c:	lea    esp,[esp+0x0]
1003ec10:	movzx  edx,BYTE PTR [ecx+0x1]
1003ec14:	add    ecx,0x1
1003ec17:	test   BYTE PTR [edx+eax*1],0x1
1003ec1b:	jne    0x1003ec10
1003ec1d:	cmp    BYTE PTR [ecx],0x23
1003ec20:	jne    0x1003ec7f
1003ec22:	mov    al,BYTE PTR [ecx+0x1]
1003ec25:	add    ecx,0x1
1003ec28:	test   al,al
1003ec2a:	je     0x1003ec00
1003ec2c:	lea    esp,[esp+0x0]
1003ec30:	mov    edx,DWORD PTR [esi+0x50]
1003ec33:	test   edx,edx
1003ec35:	je     0x1003ec55
1003ec37:	mov    eax,DWORD PTR [esi+0x1c]
1003ec3a:	cmp    ecx,eax
1003ec3c:	jae    0x1003ec73
1003ec3e:	push   edx
1003ec3f:	lea    edi,[esi+0x54]
1003ec42:	xor    edx,edx
1003ec44:	call   0x10042c90
1003ec49:	add    esp,0x4
1003ec4c:	test   eax,eax
1003ec4e:	je     0x1003ec73
1003ec50:	add    ecx,DWORD PTR [esi+0x54]
1003ec53:	jmp    0x1003ec00
1003ec55:	mov    edx,DWORD PTR [esi+0x54]
1003ec58:	mov    edi,DWORD PTR [esi+0x1c]
1003ec5b:	sub    edi,edx
1003ec5d:	cmp    ecx,edi
1003ec5f:	ja     0x1003ec73
1003ec61:	cmp    al,BYTE PTR [esi+0x58]
1003ec64:	jne    0x1003ec73
1003ec66:	cmp    edx,0x1
1003ec69:	je     0x1003ec50
1003ec6b:	mov    al,BYTE PTR [ecx+0x1]
1003ec6e:	cmp    al,BYTE PTR [esi+0x59]
1003ec71:	je     0x1003ec50
1003ec73:	mov    al,BYTE PTR [ecx+0x1]
1003ec76:	add    ecx,0x1
1003ec79:	test   al,al
1003ec7b:	jne    0x1003ec30
1003ec7d:	jmp    0x1003ec00
1003ec7f:	mov    al,BYTE PTR [ecx]
1003ec81:	cmp    al,0x2a
1003ec83:	je     0x1003f091
1003ec89:	cmp    al,0x3f
1003ec8b:	je     0x1003f091
1003ec91:	push   0x3
1003ec93:	push   0x10074238
1003ec98:	push   ecx
1003ec99:	call   0x1004f1f6
1003ec9e:	add    esp,0xc
1003eca1:	test   eax,eax
1003eca3:	je     0x1003f091
1003eca9:	test   ebp,ebp
1003ecab:	jl     0x1003ee61
1003ecb1:	mov    ecx,DWORD PTR [esp+0x14]
1003ecb5:	lea    eax,[ecx-0x6]
1003ecb8:	cmp    eax,0x18
1003ecbb:	ja     0x1003f091
1003ecc1:	movzx  edx,BYTE PTR [eax+0x1003f0c8]
1003ecc8:	jmp    DWORD PTR [edx*4+0x1003f098]
1003eccf:	xor    eax,eax
1003ecd1:	cmp    DWORD PTR [esp+0x18],ebp
1003ecd5:	pop    edi
1003ecd6:	pop    ebp
1003ecd7:	setne  al
1003ecda:	pop    ebx
1003ecdb:	pop    ecx
1003ecdc:	ret    
1003ecdd:	mov    eax,DWORD PTR [esp+0x18]
1003ece1:	cmp    eax,ebp
1003ece3:	je     0x1003f091
1003ece9:	mov    ecx,DWORD PTR [esi+0x4]
1003ecec:	movzx  edx,BYTE PTR [ecx+ebp*1]
1003ecf0:	xor    ecx,ecx
1003ecf2:	cmp    eax,edx
1003ecf4:	setne  cl
1003ecf7:	pop    edi
1003ecf8:	pop    ebp
1003ecf9:	pop    ebx
1003ecfa:	mov    eax,ecx
1003ecfc:	pop    ecx
1003ecfd:	ret    
1003ecfe:	mov    eax,DWORD PTR [esp+0x18]
1003ed02:	cmp    eax,ebp
1003ed04:	je     0x1003ed4d
1003ed06:	test   BYTE PTR [esp+0x20],0x1
1003ed0b:	je     0x1003f091
1003ed11:	mov    edx,DWORD PTR [esi+0x4]
1003ed14:	movzx  ecx,BYTE PTR [edx+ebp*1]
1003ed18:	xor    edx,edx
1003ed1a:	cmp    eax,ecx
1003ed1c:	sete   dl
1003ed1f:	pop    edi
1003ed20:	pop    ebp
1003ed21:	pop    ebx
1003ed22:	mov    eax,edx
1003ed24:	pop    ecx
1003ed25:	ret    
1003ed26:	cmp    ebp,0x7f
1003ed29:	jg     0x1003ed4d
1003ed2b:	mov    eax,DWORD PTR [esi+0xc]
1003ed2e:	test   BYTE PTR [eax+ebp*1],0x4
1003ed32:	jmp    0x1003f08b
1003ed37:	cmp    ebp,0x7f
1003ed3a:	jg     0x1003f091
1003ed40:	mov    ecx,DWORD PTR [esi+0xc]
1003ed43:	test   BYTE PTR [ecx+ebp*1],0x4
1003ed47:	je     0x1003f091
1003ed4d:	pop    edi
1003ed4e:	pop    ebp
1003ed4f:	mov    eax,0x1
1003ed54:	pop    ebx
1003ed55:	pop    ecx
1003ed56:	ret    
1003ed57:	cmp    ebp,0x7f
1003ed5a:	jg     0x1003ed4d
1003ed5c:	mov    edx,DWORD PTR [esi+0xc]
1003ed5f:	test   BYTE PTR [edx+ebp*1],0x1
1003ed63:	jmp    0x1003f08b
1003ed68:	cmp    ebp,0x7f
1003ed6b:	jg     0x1003f091
1003ed71:	mov    eax,DWORD PTR [esi+0xc]
1003ed74:	test   BYTE PTR [eax+ebp*1],0x1
1003ed78:	je     0x1003f091
1003ed7e:	pop    edi
1003ed7f:	pop    ebp
1003ed80:	mov    eax,0x1
1003ed85:	pop    ebx
1003ed86:	pop    ecx
1003ed87:	ret    
1003ed88:	cmp    ebp,0x7f
1003ed8b:	jg     0x1003ed4d
1003ed8d:	mov    ecx,DWORD PTR [esi+0xc]
1003ed90:	test   BYTE PTR [ecx+ebp*1],0x10
1003ed94:	jmp    0x1003f08b
1003ed99:	cmp    ebp,0x7f
1003ed9c:	jg     0x1003f091
1003eda2:	mov    edx,DWORD PTR [esi+0xc]
1003eda5:	test   BYTE PTR [edx+ebp*1],0x10
1003eda9:	je     0x1003f091
1003edaf:	pop    edi
1003edb0:	pop    ebp
1003edb1:	mov    eax,0x1
1003edb6:	pop    ebx
1003edb7:	pop    ecx
1003edb8:	ret    
1003edb9:	cmp    ebp,0x180e
1003edbf:	jg     0x1003eddf
1003edc1:	je     0x1003ee16
1003edc3:	cmp    ebp,0xa0
1003edc9:	jg     0x1003edd7
1003edcb:	je     0x1003ee16
1003edcd:	cmp    ebp,0x9
1003edd0:	je     0x1003ee16
1003edd2:	cmp    ebp,0x20
1003edd5:	jmp    0x1003ee07
1003edd7:	cmp    ebp,0x1680
1003eddd:	jmp    0x1003ee07
1003eddf:	cmp    ebp,0x205f
1003ede5:	jg     0x1003ee01
1003ede7:	je     0x1003ee16
1003ede9:	cmp    ebp,0x2000
1003edef:	jl     0x1003ee09
1003edf1:	cmp    ebp,0x200a
1003edf7:	jle    0x1003ee16
1003edf9:	cmp    ebp,0x202f
1003edff:	jmp    0x1003ee07
1003ee01:	cmp    ebp,0x3000
1003ee07:	je     0x1003ee16
1003ee09:	pop    edi
1003ee0a:	xor    eax,eax
1003ee0c:	cmp    ecx,0x13
1003ee0f:	pop    ebp
1003ee10:	sete   al
1003ee13:	pop    ebx
1003ee14:	pop    ecx
1003ee15:	ret    
1003ee16:	pop    edi
1003ee17:	xor    eax,eax
1003ee19:	cmp    ecx,0x13
1003ee1c:	pop    ebp
1003ee1d:	setne  al
1003ee20:	pop    ebx
1003ee21:	pop    ecx
1003ee22:	ret    
1003ee23:	cmp    ebp,0x85
1003ee29:	jg     0x1003ee44
1003ee2b:	je     0x1003ee54
1003ee2d:	cmp    ebp,0xa
1003ee30:	jl     0x1003ee37
1003ee32:	cmp    ebp,0xd
1003ee35:	jle    0x1003ee54
1003ee37:	pop    edi
1003ee38:	xor    eax,eax
1003ee3a:	cmp    ecx,0x15
1003ee3d:	pop    ebp
1003ee3e:	sete   al
1003ee41:	pop    ebx
1003ee42:	pop    ecx
1003ee43:	ret    
1003ee44:	cmp    ebp,0x2028
1003ee4a:	jl     0x1003ee37
1003ee4c:	cmp    ebp,0x2029
1003ee52:	jg     0x1003ee37
1003ee54:	pop    edi
1003ee55:	xor    eax,eax
1003ee57:	cmp    ecx,0x15
1003ee5a:	pop    ebp
1003ee5b:	setne  al
1003ee5e:	pop    ebx
1003ee5f:	pop    ecx
1003ee60:	ret    
1003ee61:	mov    eax,DWORD PTR [esp+0x14]
1003ee65:	add    eax,0xfffffffa
1003ee68:	cmp    eax,0x17
1003ee6b:	ja     0x1003f091
1003ee71:	movzx  eax,BYTE PTR [eax+0x1003f114]
1003ee78:	jmp    DWORD PTR [eax*4+0x1003f0e4]
1003ee7f:	neg    ebp
1003ee81:	lea    eax,[ebp-0x6]
1003ee84:	cmp    eax,0xf
1003ee87:	ja     0x1003f091
1003ee8d:	movzx  ecx,BYTE PTR [eax+0x1003f150]
1003ee94:	jmp    DWORD PTR [ecx*4+0x1003f12c]
1003ee9b:	mov    eax,DWORD PTR [esp+0x18]
1003ee9f:	cmp    eax,0x7f
1003eea2:	jg     0x1003ed4d
1003eea8:	mov    edx,DWORD PTR [esi+0xc]
1003eeab:	test   BYTE PTR [eax+edx*1],0x4
1003eeaf:	jmp    0x1003f08b
1003eeb4:	mov    eax,DWORD PTR [esp+0x18]
1003eeb8:	cmp    eax,0x7f
1003eebb:	jg     0x1003f091
1003eec1:	mov    ecx,DWORD PTR [esi+0xc]
1003eec4:	test   BYTE PTR [eax+ecx*1],0x4
1003eec8:	je     0x1003f091
1003eece:	pop    edi
1003eecf:	pop    ebp
1003eed0:	mov    eax,0x1
1003eed5:	pop    ebx
1003eed6:	pop    ecx
1003eed7:	ret    
1003eed8:	mov    eax,DWORD PTR [esp+0x18]
1003eedc:	cmp    eax,0x7f
1003eedf:	jg     0x1003ed4d
1003eee5:	mov    edx,DWORD PTR [esi+0xc]
1003eee8:	test   BYTE PTR [eax+edx*1],0x1
1003eeec:	jmp    0x1003f08b
1003eef1:	mov    eax,DWORD PTR [esp+0x18]
1003eef5:	cmp    eax,0x7f
1003eef8:	jg     0x1003f091
1003eefe:	mov    ecx,DWORD PTR [esi+0xc]
1003ef01:	test   BYTE PTR [eax+ecx*1],0x1
1003ef05:	je     0x1003f091
1003ef0b:	pop    edi
1003ef0c:	pop    ebp
1003ef0d:	mov    eax,0x1
1003ef12:	pop    ebx
1003ef13:	pop    ecx
1003ef14:	ret    
1003ef15:	mov    eax,DWORD PTR [esp+0x18]
1003ef19:	cmp    eax,0x7f
1003ef1c:	jg     0x1003ed4d
1003ef22:	mov    edx,DWORD PTR [esi+0xc]
1003ef25:	test   BYTE PTR [eax+edx*1],0x10
1003ef29:	jmp    0x1003f08b
1003ef2e:	mov    eax,DWORD PTR [esp+0x18]
1003ef32:	cmp    eax,0x7f
1003ef35:	jg     0x1003f091
1003ef3b:	mov    ecx,DWORD PTR [esi+0xc]
1003ef3e:	test   BYTE PTR [eax+ecx*1],0x10
1003ef42:	je     0x1003f091
1003ef48:	pop    edi
1003ef49:	pop    ebp
1003ef4a:	mov    eax,0x1
1003ef4f:	pop    ebx
1003ef50:	pop    ecx
1003ef51:	ret    
1003ef52:	mov    eax,DWORD PTR [esp+0x18]
1003ef56:	cmp    eax,0x180e
1003ef5b:	jg     0x1003ef79
1003ef5d:	je     0x1003efab
1003ef5f:	cmp    eax,0xa0
1003ef64:	jg     0x1003ef72
1003ef66:	je     0x1003efab
1003ef68:	cmp    eax,0x9
1003ef6b:	je     0x1003efab
1003ef6d:	cmp    eax,0x20
1003ef70:	jmp    0x1003ef9c
1003ef72:	cmp    eax,0x1680
1003ef77:	jmp    0x1003ef9c
1003ef79:	cmp    eax,0x205f
1003ef7e:	jg     0x1003ef97
1003ef80:	je     0x1003efab
1003ef82:	cmp    eax,0x2000
1003ef87:	jl     0x1003ef9e
1003ef89:	cmp    eax,0x200a
1003ef8e:	jle    0x1003efab
1003ef90:	cmp    eax,0x202f
1003ef95:	jmp    0x1003ef9c
1003ef97:	cmp    eax,0x3000
1003ef9c:	je     0x1003efab
1003ef9e:	xor    eax,eax
1003efa0:	pop    edi
1003efa1:	cmp    ebp,0x13
1003efa4:	pop    ebp
1003efa5:	sete   al
1003efa8:	pop    ebx
1003efa9:	pop    ecx
1003efaa:	ret    
1003efab:	xor    eax,eax
1003efad:	pop    edi
1003efae:	cmp    ebp,0x13
1003efb1:	pop    ebp
1003efb2:	setne  al
1003efb5:	pop    ebx
1003efb6:	pop    ecx
1003efb7:	ret    
1003efb8:	mov    eax,DWORD PTR [esp+0x18]
1003efbc:	cmp    eax,0x85
1003efc1:	jg     0x1003efdc
1003efc3:	je     0x1003efea
1003efc5:	cmp    eax,0xa
1003efc8:	jl     0x1003efcf
1003efca:	cmp    eax,0xd
1003efcd:	jle    0x1003efea
1003efcf:	xor    eax,eax
1003efd1:	pop    edi
1003efd2:	cmp    ebp,0x15
1003efd5:	pop    ebp
1003efd6:	sete   al
1003efd9:	pop    ebx
1003efda:	pop    ecx
1003efdb:	ret    
1003efdc:	cmp    eax,0x2028
1003efe1:	jl     0x1003efcf
1003efe3:	cmp    eax,0x2029
1003efe8:	jg     0x1003efcf
1003efea:	xor    eax,eax
1003efec:	pop    edi
1003efed:	cmp    ebp,0x15
1003eff0:	pop    ebp
1003eff1:	setne  al
1003eff4:	pop    ebx
1003eff5:	pop    ecx
1003eff6:	ret    
1003eff7:	cmp    ebp,0xfffffffa
1003effa:	je     0x1003ed4d
1003f000:	cmp    ebp,0xfffffff7
1003f003:	je     0x1003ed4d
1003f009:	cmp    ebp,0xfffffff6
1003f00c:	je     0x1003ed4d
1003f012:	cmp    ebp,0xffffffed
1003f015:	je     0x1003ed4d
1003f01b:	cmp    ebp,0xffffffeb
1003f01e:	jmp    0x1003f08b
1003f020:	xor    eax,eax
1003f022:	pop    edi
1003f023:	cmp    ebp,0xfffffff9
1003f026:	pop    ebp
1003f027:	sete   al
1003f02a:	pop    ebx
1003f02b:	pop    ecx
1003f02c:	ret    
1003f02d:	cmp    ebp,0xfffffff8
1003f030:	jmp    0x1003f03e
1003f032:	cmp    ebp,0xfffffff8
1003f035:	je     0x1003ed4d
1003f03b:	cmp    ebp,0xffffffee
1003f03e:	je     0x1003ed4d
1003f044:	cmp    ebp,0xfffffff9
1003f047:	je     0x1003ed4d
1003f04d:	cmp    ebp,0xfffffff5
1003f050:	jmp    0x1003f08b
1003f052:	xor    eax,eax
1003f054:	pop    edi
1003f055:	cmp    ebp,0xffffffed
1003f058:	pop    ebp
1003f059:	sete   al
1003f05c:	pop    ebx
1003f05d:	pop    ecx
1003f05e:	ret    
1003f05f:	cmp    ebp,0xffffffec
1003f062:	jmp    0x1003f03e
1003f064:	xor    eax,eax
1003f066:	pop    edi
1003f067:	cmp    ebp,0xffffffeb
1003f06a:	pop    ebp
1003f06b:	sete   al
1003f06e:	pop    ebx
1003f06f:	pop    ecx
1003f070:	ret    
1003f071:	cmp    ebp,0xfffffff6
1003f074:	je     0x1003ed4d
1003f07a:	cmp    ebp,0xfffffff7
1003f07d:	jmp    0x1003f00c
1003f07f:	cmp    ebp,0xfffffff5
1003f082:	je     0x1003ed4d
1003f088:	cmp    ebp,0xfffffff9
1003f08b:	je     0x1003ed4d
1003f091:	pop    edi
1003f092:	pop    ebp
1003f093:	xor    eax,eax
1003f095:	pop    ebx
1003f096:	pop    ecx
1003f097:	ret    
1003f098:	aaa    
1003f099:	in     eax,dx
1003f09a:	add    edx,DWORD PTR [eax]
1003f09c:	es in  eax,dx
1003f09e:	add    edx,DWORD PTR [eax]
1003f0a0:	push   0x571003ed
1003f0a5:	in     eax,dx
1003f0a6:	add    edx,DWORD PTR [eax]
1003f0a8:	cdq    
1003f0a9:	in     eax,dx
1003f0aa:	add    edx,DWORD PTR [eax]
1003f0ac:	mov    ch,ch
1003f0ae:	add    edx,DWORD PTR [eax]
1003f0b0:	mov    ecx,0x231003ed
1003f0b5:	out    dx,al
1003f0b6:	add    edx,DWORD PTR [eax]
1003f0b8:	iret   
1003f0b9:	in     al,dx
1003f0ba:	add    edx,DWORD PTR [eax]
1003f0bc:	fucomp st(4)
1003f0be:	add    edx,DWORD PTR [eax]
1003f0c0:	(bad)  
1003f0c1:	in     al,dx
1003f0c2:	add    edx,DWORD PTR [eax]
1003f0c4:	xchg   ecx,eax
1003f0c5:	lock add edx,DWORD PTR [eax]
1003f0c8:	add    BYTE PTR [ecx],al
1003f0ca:	add    al,BYTE PTR [ebx]
1003f0cc:	add    al,0x5
1003f0ce:	or     ecx,DWORD PTR [ebx]
1003f0d0:	or     ecx,DWORD PTR [ebx]
1003f0d2:	or     ecx,DWORD PTR [ebx]
1003f0d4:	push   es
1003f0d5:	push   es
1003f0d6:	pop    es
1003f0d7:	pop    es
1003f0d8:	or     ecx,DWORD PTR [ebx]
1003f0da:	or     ecx,DWORD PTR [ebx]
1003f0dc:	or     ecx,DWORD PTR [ebx]
1003f0de:	or     BYTE PTR [ecx],cl
1003f0e0:	or     cl,BYTE PTR [ebp-0xfdfffb7]
1003f0e6:	add    edx,DWORD PTR [eax]
1003f0e8:	imul   edi
1003f0ea:	add    edx,DWORD PTR [eax]
1003f0ec:	jp     0x1003f0de
1003f0ee:	add    edx,DWORD PTR [eax]
1003f0f0:	sub    eax,0x7f1003f0
1003f0f5:	lock add edx,DWORD PTR [eax]
1003f0f8:	jno    0x1003f0ea
1003f0fa:	add    edx,DWORD PTR [eax]
1003f0fc:	push   edx
1003f0fd:	lock add edx,DWORD PTR [eax]
1003f100:	xor    dh,al
1003f102:	add    edx,DWORD PTR [eax]
1003f104:	lock add edx,DWORD PTR fs:[eax]
1003f108:	pop    edi
1003f109:	lock add edx,DWORD PTR [eax]
1003f10c:	jg     0x1003f0fc
1003f10e:	add    edx,DWORD PTR [eax]
1003f110:	xchg   ecx,eax
1003f111:	lock add edx,DWORD PTR [eax]
1003f114:	add    BYTE PTR [ecx],al
1003f116:	add    al,BYTE PTR [ebx]
1003f118:	add    al,0x5
1003f11a:	or     ecx,DWORD PTR [ebx]
1003f11c:	or     ecx,DWORD PTR [ebx]
1003f11e:	or     ecx,DWORD PTR [ebx]
1003f120:	push   es
1003f121:	pop    es
1003f122:	or     BYTE PTR [ecx],cl
1003f124:	or     ecx,DWORD PTR [ebx]
1003f126:	or     ecx,DWORD PTR [ebx]
1003f128:	or     ecx,DWORD PTR [ebx]
1003f12a:	or     cl,BYTE PTR [edx]
1003f12c:	mov    ah,0xee
1003f12e:	add    edx,DWORD PTR [eax]
1003f130:	fwait
1003f131:	out    dx,al
1003f132:	add    edx,DWORD PTR [eax]
1003f134:	icebp  
1003f135:	out    dx,al
1003f136:	add    edx,DWORD PTR [eax]
1003f138:	fsubr  st,st(6)
1003f13a:	add    edx,DWORD PTR [eax]
1003f13c:	cs out dx,eax
1003f13e:	add    edx,DWORD PTR [eax]
1003f140:	adc    eax,0x521003ef
1003f145:	out    dx,eax
1003f146:	add    edx,DWORD PTR [eax]
1003f148:	mov    eax,0x911003ef
1003f14d:	lock add edx,DWORD PTR [eax]
1003f150:	add    BYTE PTR [ecx],al
1003f152:	add    al,BYTE PTR [ebx]
1003f154:	add    al,0x5
1003f156:	or     BYTE PTR [eax],cl
1003f158:	or     BYTE PTR [eax],cl
1003f15a:	or     BYTE PTR [eax],cl
1003f15c:	push   es
1003f15d:	push   es
1003f15e:	pop    es
1003f15f:	pop    es
1003f160:	sub    esp,0xf0
1003f166:	mov    eax,ds:0x1007e030
1003f16b:	xor    eax,esp
1003f16d:	mov    DWORD PTR [esp+0xec],eax
1003f174:	push   ebx
1003f175:	push   ebp
1003f176:	push   esi
1003f177:	push   edi
1003f178:	mov    eax,DWORD PTR [esp+0x104]
1003f17f:	mov    DWORD PTR [esp+0xa8],eax
1003f186:	mov    eax,DWORD PTR [eax]
1003f188:	mov    DWORD PTR [esp+0x34],eax
1003f18c:	mov    DWORD PTR [esp+0x20],ecx
1003f190:	mov    ecx,DWORD PTR [esp+0x10c]
1003f197:	shr    eax,0x9
1003f19a:	and    eax,0x1
1003f19d:	mov    DWORD PTR [esp+0xb4],ecx
1003f1a4:	mov    ecx,DWORD PTR [esp+0x110]
1003f1ab:	mov    DWORD PTR [esp+0xa4],eax
1003f1b2:	xor    eax,0x1
1003f1b5:	mov    DWORD PTR [esp+0xac],ecx
1003f1bc:	mov    ecx,DWORD PTR [esp+0x114]
1003f1c3:	mov    DWORD PTR [esp+0xa0],eax
1003f1ca:	mov    eax,0xfffffffe
1003f1cf:	mov    DWORD PTR [esp+0x98],ecx
1003f1d6:	mov    ecx,DWORD PTR [esp+0x118]
1003f1dd:	mov    DWORD PTR [esp+0x68],eax
1003f1e1:	mov    DWORD PTR [esp+0x5c],eax
1003f1e5:	mov    DWORD PTR [esp+0x4c],eax
1003f1e9:	mov    DWORD PTR [esp+0x30],eax
1003f1ed:	mov    eax,DWORD PTR [esp+0x34]
1003f1f1:	mov    esi,DWORD PTR [esp+0x108]
1003f1f8:	mov    DWORD PTR [esp+0x18],ecx
1003f1fc:	mov    ecx,DWORD PTR [esp+0x11c]
1003f203:	mov    DWORD PTR [esp+0xb0],edx
1003f20a:	mov    edx,DWORD PTR [edx]
1003f20c:	xor    edi,edi
1003f20e:	xor    ebp,ebp
1003f210:	and    eax,0x1
1003f213:	mov    DWORD PTR [esp+0x38],ecx
1003f217:	mov    ecx,edx
1003f219:	mov    ebx,edx
1003f21b:	shl    eax,0x8
1003f21e:	mov    DWORD PTR [esp+0x9c],esi
1003f225:	mov    esi,DWORD PTR [esi]
1003f227:	mov    DWORD PTR [esp+0x48],edi
1003f22b:	mov    DWORD PTR [esp+0x40],edi
1003f22f:	mov    DWORD PTR [esp+0x94],edi
1003f236:	mov    DWORD PTR [esp+0x6c],edi
1003f23a:	mov    DWORD PTR [esp+0x14],edx
1003f23e:	mov    DWORD PTR [esp+0x80],ecx
1003f245:	mov    DWORD PTR [esp+0xb8],ebx
1003f24c:	mov    DWORD PTR [esp+0x50],edi
1003f250:	mov    DWORD PTR [esp+0x88],edi
1003f257:	mov    DWORD PTR [esp+0x2c],ebp
1003f25b:	mov    DWORD PTR [esp+0x74],edi
1003f25f:	mov    DWORD PTR [esp+0x64],edi
1003f263:	mov    DWORD PTR [esp+0x84],eax
1003f26a:	cmp    DWORD PTR [esp+0x38],0x0
1003f26f:	mov    DWORD PTR [esp+0x10],esi
1003f273:	movzx  eax,BYTE PTR [esi]
1003f276:	mov    DWORD PTR [esp+0x1c],eax
1003f27a:	mov    eax,DWORD PTR [esp+0x18]
1003f27e:	je     0x1003f30f
1003f284:	mov    eax,DWORD PTR [eax+0x10]
1003f287:	add    eax,0x1000
1003f28c:	cmp    edx,eax
1003f28e:	ja     0x10041a19
1003f294:	cmp    edx,ecx
1003f296:	jae    0x1003f29e
1003f298:	mov    DWORD PTR [esp+0x14],ecx
1003f29c:	mov    edx,ecx
1003f29e:	mov    eax,DWORD PTR [esp+0x38]
1003f2a2:	mov    eax,DWORD PTR [eax]
1003f2a4:	sub    edx,ecx
1003f2a6:	mov    ecx,0x7fffffeb
1003f2ab:	sub    ecx,eax
1003f2ad:	cmp    ecx,edx
1003f2af:	jl     0x10041a28
1003f2b5:	sub    eax,DWORD PTR [esp+0x80]
1003f2bc:	mov    edx,DWORD PTR [esp+0x14]
1003f2c0:	mov    ecx,DWORD PTR [esp+0x38]
1003f2c4:	add    eax,edx
1003f2c6:	test   ebp,ebp
1003f2c8:	mov    DWORD PTR [ecx],eax
1003f2ca:	je     0x1003f300
1003f2cc:	cmp    ebp,ebx
1003f2ce:	jbe    0x1003f306
1003f2d0:	mov    esi,edx
1003f2d2:	sub    edx,ebp
1003f2d4:	push   edx
1003f2d5:	push   ebp
1003f2d6:	push   ebx
1003f2d7:	call   0x100457b0
1003f2dc:	mov    eax,ebx
1003f2de:	sub    eax,ebp
1003f2e0:	add    esp,0xc
1003f2e3:	add    esi,eax
1003f2e5:	mov    DWORD PTR [esp+0x14],esi
1003f2e9:	mov    edx,DWORD PTR [esp+0x14]
1003f2ed:	mov    esi,DWORD PTR [esp+0x10]
1003f2f1:	mov    ebp,ebx
1003f2f3:	mov    DWORD PTR [esp+0x2c],ebp
1003f2f7:	mov    DWORD PTR [esp+0x80],edx
1003f2fe:	jmp    0x1003f321
1003f300:	mov    DWORD PTR [esp+0x14],ebx
1003f304:	mov    edx,ebx
1003f306:	mov    DWORD PTR [esp+0x80],edx
1003f30d:	jmp    0x1003f321
1003f30f:	mov    ecx,DWORD PTR [eax+0x10]
1003f312:	add    ecx,0x1000
1003f318:	cmp    DWORD PTR [eax+0x20],ecx
1003f31b:	ja     0x10041a37
1003f321:	cmp    DWORD PTR [esp+0x50],0x0
1003f326:	mov    ecx,DWORD PTR [esp+0x1c]
1003f32a:	je     0x1003f407
1003f330:	test   ecx,ecx
1003f332:	je     0x1003f407
1003f338:	cmp    ecx,0x5c
1003f33b:	jne    0x1003f353
1003f33d:	cmp    BYTE PTR [esi+0x1],0x45
1003f341:	jne    0x1003f353
1003f343:	mov    DWORD PTR [esp+0x50],0x0
1003f34b:	add    esi,0x1
1003f34e:	jmp    0x100419f7
1003f353:	test   edi,edi
1003f355:	je     0x1003f388
1003f357:	cmp    DWORD PTR [esp+0x38],0x0
1003f35c:	jne    0x1003f380
1003f35e:	xor    ebx,ebx
1003f360:	mov    bh,BYTE PTR [edi+0x2]
1003f363:	mov    eax,esi
1003f365:	mov    esi,DWORD PTR [esp+0x18]
1003f369:	mov    bl,BYTE PTR [edi+0x3]
1003f36c:	sub    eax,ebx
1003f36e:	sub    eax,DWORD PTR [esi+0x18]
1003f371:	mov    ebx,eax
1003f373:	sar    ebx,0x8
1003f376:	mov    BYTE PTR [edi+0x4],bl
1003f379:	mov    BYTE PTR [edi+0x5],al
1003f37c:	mov    esi,DWORD PTR [esp+0x10]
1003f380:	mov    DWORD PTR [esp+0x74],0x0
1003f388:	test   DWORD PTR [esp+0x34],0x4000
1003f390:	je     0x1003f3cc
1003f392:	mov    BYTE PTR [edx],0x53
1003f395:	mov    BYTE PTR [edx+0x1],0xff
1003f399:	mov    ecx,esi
1003f39b:	mov    esi,DWORD PTR [esp+0x18]
1003f39f:	lea    eax,[edx+0x1]
1003f3a2:	mov    DWORD PTR [esp+0x74],edx
1003f3a6:	mov    edx,ecx
1003f3a8:	sub    edx,DWORD PTR [esi+0x18]
1003f3ab:	add    eax,0x1
1003f3ae:	sar    edx,0x8
1003f3b1:	mov    BYTE PTR [eax],dl
1003f3b3:	sub    cl,BYTE PTR [esi+0x18]
1003f3b6:	mov    BYTE PTR [eax+0x2],0x0
1003f3ba:	mov    BYTE PTR [eax+0x1],cl
1003f3bd:	mov    ecx,DWORD PTR [esp+0x1c]
1003f3c1:	mov    BYTE PTR [eax+0x3],0x0
1003f3c5:	add    eax,0x4
1003f3c8:	mov    DWORD PTR [esp+0x14],eax
1003f3cc:	mov    al,cl
1003f3ce:	mov    dl,BYTE PTR [esp+0x34]
1003f3d2:	mov    ecx,DWORD PTR [esp+0x14]
1003f3d6:	and    dl,0x1
1003f3d9:	or     dl,0x1c
1003f3dc:	mov    BYTE PTR [ecx],dl
1003f3de:	mov    DWORD PTR [esp+0x2c],ecx
1003f3e2:	add    ecx,0x1
1003f3e5:	mov    BYTE PTR [ecx],al
1003f3e7:	add    ecx,0x1
1003f3ea:	cmp    al,0xd
1003f3ec:	mov    DWORD PTR [esp+0x14],ecx
1003f3f0:	je     0x1003f3fa
1003f3f2:	cmp    al,0xa
1003f3f4:	jne    0x100419a8
1003f3fa:	mov    edx,DWORD PTR [esp+0x18]
1003f3fe:	or     DWORD PTR [edx+0x44],0x20
1003f402:	jmp    0x100419ac
1003f407:	cmp    ecx,0x2a
1003f40a:	je     0x1003f481
1003f40c:	cmp    ecx,0x2b
1003f40f:	je     0x1003f481
1003f411:	cmp    ecx,0x3f
1003f414:	je     0x1003f481
1003f416:	cmp    ecx,0x7b
1003f419:	jne    0x1003f42b
1003f41b:	lea    eax,[esi+0x1]
1003f41e:	call   0x1003e090
1003f423:	test   eax,eax
1003f425:	mov    ecx,DWORD PTR [esp+0x1c]
1003f429:	jne    0x1003f481
1003f42b:	test   edi,edi
1003f42d:	mov    DWORD PTR [esp+0x28],0x0
1003f435:	je     0x1003f489
1003f437:	mov    eax,DWORD PTR [esp+0x94]
1003f43e:	mov    edx,eax
1003f440:	sub    eax,0x1
1003f443:	test   edx,edx
1003f445:	mov    DWORD PTR [esp+0x94],eax
1003f44c:	jg     0x1003f489
1003f44e:	cmp    DWORD PTR [esp+0x38],0x0
1003f453:	mov    ebx,DWORD PTR [esp+0x18]
1003f457:	jne    0x1003f477
1003f459:	xor    edx,edx
1003f45b:	mov    dh,BYTE PTR [edi+0x2]
1003f45e:	mov    eax,esi
1003f460:	mov    dl,BYTE PTR [edi+0x3]
1003f463:	sub    eax,edx
1003f465:	sub    eax,DWORD PTR [ebx+0x18]
1003f468:	mov    edx,eax
1003f46a:	sar    edx,0x8
1003f46d:	mov    BYTE PTR [edi+0x4],dl
1003f470:	mov    BYTE PTR [edi+0x5],al
1003f473:	mov    esi,DWORD PTR [esp+0x10]
1003f477:	mov    DWORD PTR [esp+0x74],0x0
1003f47f:	jmp    0x1003f48d
1003f481:	mov    DWORD PTR [esp+0x28],0x1
1003f489:	mov    ebx,DWORD PTR [esp+0x18]
1003f48d:	test   BYTE PTR [esp+0x34],0x8
1003f492:	je     0x1003f512
1003f494:	mov    eax,DWORD PTR [ebx+0xc]
1003f497:	test   BYTE PTR [ecx+eax*1],0x1
1003f49b:	jne    0x100419f7
1003f4a1:	cmp    ecx,0x23
1003f4a4:	mov    ebx,DWORD PTR [esp+0x18]
1003f4a8:	jne    0x1003f50e
1003f4aa:	add    esi,0x1
1003f4ad:	mov    DWORD PTR [esp+0x10],esi
1003f4b1:	mov    al,BYTE PTR [esi]
1003f4b3:	test   al,al
1003f4b5:	je     0x1003f502
1003f4b7:	jmp    0x1003f4c0
1003f4b9:	lea    esp,[esp+0x0]
1003f4c0:	mov    ecx,DWORD PTR [ebx+0x50]
1003f4c3:	test   ecx,ecx
1003f4c5:	je     0x1003f578
1003f4cb:	mov    eax,DWORD PTR [ebx+0x1c]
1003f4ce:	cmp    esi,eax
1003f4d0:	jae    0x1003f59e
1003f4d6:	push   ecx
1003f4d7:	lea    edi,[ebx+0x54]
1003f4da:	xor    edx,edx
1003f4dc:	mov    ecx,esi
1003f4de:	call   0x10042c90
1003f4e3:	add    esp,0x4
1003f4e6:	test   eax,eax
1003f4e8:	je     0x1003f59e
1003f4ee:	mov    ecx,DWORD PTR [ebx+0x54]
1003f4f1:	lea    esi,[esi+ecx*1-0x1]
1003f4f5:	mov    DWORD PTR [esp+0x10],esi
1003f4f9:	cmp    BYTE PTR [esi],0x0
1003f4fc:	jne    0x100419f7
1003f502:	mov    DWORD PTR [esp+0x1c],0x0
1003f50a:	mov    ecx,DWORD PTR [esp+0x1c]
1003f50e:	mov    ebp,DWORD PTR [esp+0x2c]
1003f512:	test   DWORD PTR [esp+0x34],0x4000
1003f51a:	je     0x1003f561
1003f51c:	cmp    DWORD PTR [esp+0x28],0x0
1003f521:	jne    0x1003f561
1003f523:	mov    eax,DWORD PTR [esp+0x14]
1003f527:	mov    BYTE PTR [eax],0x53
1003f52a:	mov    BYTE PTR [eax+0x1],0xff
1003f52e:	mov    ecx,esi
1003f530:	mov    DWORD PTR [esp+0x74],eax
1003f534:	add    eax,0x1
1003f537:	mov    edx,ecx
1003f539:	sub    edx,DWORD PTR [ebx+0x18]
1003f53c:	add    eax,0x1
1003f53f:	sar    edx,0x8
1003f542:	mov    BYTE PTR [eax],dl
1003f544:	sub    cl,BYTE PTR [ebx+0x18]
1003f547:	mov    BYTE PTR [eax+0x2],0x0
1003f54b:	mov    BYTE PTR [eax+0x1],cl
1003f54e:	mov    ecx,DWORD PTR [esp+0x1c]
1003f552:	mov    BYTE PTR [eax+0x3],0x0
1003f556:	mov    esi,DWORD PTR [esp+0x10]
1003f55a:	add    eax,0x4
1003f55d:	mov    DWORD PTR [esp+0x14],eax
1003f561:	cmp    ecx,0x7c
1003f564:	ja     0x1003f3cc
1003f56a:	movzx  eax,BYTE PTR [ecx+0x10041cf0]
1003f571:	jmp    DWORD PTR [eax*4+0x10041cbc]
1003f578:	mov    ecx,DWORD PTR [ebx+0x54]
1003f57b:	mov    edx,DWORD PTR [ebx+0x1c]
1003f57e:	sub    edx,ecx
1003f580:	cmp    esi,edx
1003f582:	ja     0x1003f59e
1003f584:	cmp    al,BYTE PTR [ebx+0x58]
1003f587:	jne    0x1003f59e
1003f589:	cmp    ecx,0x1
1003f58c:	je     0x1003f4ee
1003f592:	mov    al,BYTE PTR [esi+0x1]
1003f595:	cmp    al,BYTE PTR [ebx+0x59]
1003f598:	je     0x1003f4ee
1003f59e:	add    esi,0x1
1003f5a1:	mov    DWORD PTR [esp+0x10],esi
1003f5a5:	mov    al,BYTE PTR [esi]
1003f5a7:	test   al,al
1003f5a9:	jne    0x1003f4c0
1003f5af:	jmp    0x1003f502
1003f5b4:	test   BYTE PTR [esp+0x34],0x2
1003f5b9:	je     0x1003f5ca
1003f5bb:	cmp    DWORD PTR [esp+0x30],0xfffffffe
1003f5c0:	jne    0x1003f5ca
1003f5c2:	mov    DWORD PTR [esp+0x30],0xffffffff
1003f5ca:	mov    eax,DWORD PTR [esp+0x14]
1003f5ce:	mov    BYTE PTR [eax],0x1a
1003f5d1:	add    eax,0x1
1003f5d4:	mov    DWORD PTR [esp+0x2c],0x0
1003f5dc:	mov    DWORD PTR [esp+0x14],eax
1003f5e0:	jmp    0x100419f3
1003f5e5:	mov    eax,DWORD PTR [esp+0x14]
1003f5e9:	mov    BYTE PTR [eax],0x1b
1003f5ec:	add    eax,0x1
1003f5ef:	mov    DWORD PTR [esp+0x2c],0x0
1003f5f7:	mov    DWORD PTR [esp+0x14],eax
1003f5fb:	jmp    0x100419f3
1003f600:	mov    eax,DWORD PTR [esp+0x30]
1003f604:	cmp    eax,0xfffffffe
1003f607:	jne    0x1003f610
1003f609:	or     eax,0xffffffff
1003f60c:	mov    DWORD PTR [esp+0x30],eax
1003f610:	mov    edx,DWORD PTR [esp+0x34]
1003f614:	mov    ecx,DWORD PTR [esp+0x4c]
1003f618:	shr    edx,0x2
1003f61b:	and    dl,0x1
1003f61e:	mov    DWORD PTR [esp+0x5c],eax
1003f622:	mov    eax,DWORD PTR [esp+0x14]
1003f626:	or     dl,0xc
1003f629:	mov    DWORD PTR [esp+0x2c],eax
1003f62d:	mov    BYTE PTR [eax],dl
1003f62f:	add    eax,0x1
1003f632:	mov    DWORD PTR [esp+0x68],ecx
1003f636:	mov    DWORD PTR [esp+0x14],eax
1003f63a:	jmp    0x100419f3
1003f63f:	mov    eax,DWORD PTR [esp+0x18]
1003f643:	test   DWORD PTR [eax+0x40],0x2000000
1003f64a:	je     0x1003f3cc
1003f650:	mov    ecx,DWORD PTR [esp+0x20]
1003f654:	mov    DWORD PTR [ecx],0x40
1003f65a:	jmp    0x1004096d
1003f65f:	mov    al,BYTE PTR [esi+0x1]
1003f662:	cmp    al,0x3a
1003f664:	mov    ebx,DWORD PTR [esp+0x14]
1003f668:	mov    DWORD PTR [esp+0x2c],ebx
1003f66c:	je     0x1003f676
1003f66e:	cmp    al,0x2e
1003f670:	je     0x1003f676
1003f672:	cmp    al,0x3d
1003f674:	jne    0x1003f68d
1003f676:	lea    ecx,[esp+0x7c]
1003f67a:	push   ecx
1003f67b:	mov    eax,esi
1003f67d:	call   0x1003e9c0
1003f682:	add    esp,0x4
1003f685:	test   eax,eax
1003f687:	jne    0x10041aa6
1003f68d:	mov    DWORD PTR [esp+0x1c],0x0
1003f695:	mov    ebp,0x1
1003f69a:	lea    ebx,[ebx+0x0]
1003f6a0:	add    esi,ebp
1003f6a2:	mov    DWORD PTR [esp+0x10],esi
1003f6a6:	movzx  edi,BYTE PTR [esi]
1003f6a9:	cmp    edi,0x5c
1003f6ac:	jne    0x1003f6d2
1003f6ae:	add    esi,ebp
1003f6b0:	cmp    BYTE PTR [esi],0x45
1003f6b3:	je     0x1003f6a0
1003f6b5:	push   0x3
1003f6b7:	push   0x10074234
1003f6bc:	push   esi
1003f6bd:	call   0x1004f1f6
1003f6c2:	mov    esi,DWORD PTR [esp+0x1c]
1003f6c6:	add    esp,0xc
1003f6c9:	test   eax,eax
1003f6cb:	jne    0x1003f720
1003f6cd:	add    esi,0x3
1003f6d0:	jmp    0x1003f6a0
1003f6d2:	mov    eax,DWORD PTR [esp+0x1c]
1003f6d6:	test   eax,eax
1003f6d8:	jne    0x1003f6e5
1003f6da:	cmp    edi,0x5e
1003f6dd:	jne    0x1003f6e5
1003f6df:	mov    DWORD PTR [esp+0x1c],ebp
1003f6e3:	jmp    0x1003f6a0
1003f6e5:	cmp    edi,0x5d
1003f6e8:	jne    0x1003f720
1003f6ea:	mov    edx,DWORD PTR [esp+0x18]
1003f6ee:	test   DWORD PTR [edx+0x40],0x2000000
1003f6f5:	je     0x1003f720
1003f6f7:	neg    eax
1003f6f9:	sbb    al,al
1003f6fb:	and    al,0xa0
1003f6fd:	add    al,0x6d
1003f6ff:	mov    BYTE PTR [ebx],al
1003f701:	mov    eax,DWORD PTR [esp+0x30]
1003f705:	add    ebx,ebp
1003f707:	cmp    eax,0xfffffffe
1003f70a:	mov    DWORD PTR [esp+0x14],ebx
1003f70e:	jne    0x1003f717
1003f710:	or     eax,0xffffffff
1003f713:	mov    DWORD PTR [esp+0x30],eax
1003f717:	mov    DWORD PTR [esp+0x5c],eax
1003f71b:	jmp    0x100419f3
1003f720:	xor    eax,eax
1003f722:	cmp    edi,eax
1003f724:	mov    DWORD PTR [esp+0x3c],eax
1003f728:	mov    DWORD PTR [esp+0x24],eax
1003f72c:	mov    DWORD PTR [esp+0x28],0xffffffff
1003f734:	mov    DWORD PTR [esp+0xbc],eax
1003f73b:	mov    DWORD PTR [esp+0xc0],eax
1003f742:	mov    DWORD PTR [esp+0xc4],eax
1003f749:	mov    DWORD PTR [esp+0xc8],eax
1003f750:	mov    DWORD PTR [esp+0xcc],eax
1003f757:	mov    DWORD PTR [esp+0xd0],eax
1003f75e:	mov    DWORD PTR [esp+0xd4],eax
1003f765:	mov    DWORD PTR [esp+0xd8],eax
1003f76c:	je     0x10041af9
1003f772:	cmp    DWORD PTR [esp+0x50],0x0
1003f777:	je     0x1003f79c
1003f779:	cmp    edi,0x5c
1003f77c:	jne    0x1003fc68
1003f782:	cmp    BYTE PTR [esi+0x1],0x45
1003f786:	jne    0x1003fc68
1003f78c:	mov    DWORD PTR [esp+0x50],0x0
1003f794:	add    esi,0x1
1003f797:	jmp    0x1003f9f9
1003f79c:	cmp    edi,0x5b
1003f79f:	jne    0x1003f91a
1003f7a5:	mov    bl,BYTE PTR [esi+0x1]
1003f7a8:	cmp    bl,0x3a
1003f7ab:	je     0x1003f7bb
1003f7ad:	cmp    bl,0x2e
1003f7b0:	je     0x1003f7bb
1003f7b2:	cmp    bl,0x3d
1003f7b5:	jne    0x1003fc68
1003f7bb:	lea    eax,[esp+0x7c]
1003f7bf:	push   eax
1003f7c0:	mov    eax,esi
1003f7c2:	call   0x1003e9c0
1003f7c7:	add    esp,0x4
1003f7ca:	test   eax,eax
1003f7cc:	je     0x1003fc68
1003f7d2:	cmp    bl,0x3a
1003f7d5:	mov    ecx,DWORD PTR [esp+0x18]
1003f7d9:	mov    ebp,DWORD PTR [ecx+0x8]
1003f7dc:	mov    DWORD PTR [esp+0x58],0x0
1003f7e4:	jne    0x10041ac1
1003f7ea:	add    esi,0x2
1003f7ed:	mov    DWORD PTR [esp+0x10],esi
1003f7f1:	cmp    BYTE PTR [esi],0x5e
1003f7f4:	jne    0x1003f809
1003f7f6:	mov    eax,0x1
1003f7fb:	add    esi,eax
1003f7fd:	mov    DWORD PTR [esp+0x58],eax
1003f801:	mov    DWORD PTR [esp+0x3c],eax
1003f805:	mov    DWORD PTR [esp+0x10],esi
1003f809:	mov    ebx,DWORD PTR [esp+0x7c]
1003f80d:	sub    ebx,esi
1003f80f:	push   esi
1003f810:	call   0x1003ea10
1003f815:	add    esp,0x4
1003f818:	test   eax,eax
1003f81a:	jl     0x10041ad0
1003f820:	test   BYTE PTR [esp+0x34],0x1
1003f825:	je     0x1003f82e
1003f827:	cmp    eax,0x2
1003f82a:	jg     0x1003f82e
1003f82c:	xor    eax,eax
1003f82e:	lea    eax,[eax+eax*2]
1003f831:	mov    esi,DWORD PTR [eax*4+0x1006ea50]
1003f838:	add    esi,ebp
1003f83a:	mov    ecx,0x8
1003f83f:	lea    edi,[esp+0xdc]
1003f846:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
1003f848:	mov    ecx,DWORD PTR [eax*4+0x1006ea54]
1003f84f:	test   ecx,ecx
1003f851:	mov    esi,DWORD PTR [eax*4+0x1006ea58]
1003f858:	jl     0x1003f894
1003f85a:	xor    eax,eax
1003f85c:	add    ecx,ebp
1003f85e:	test   esi,esi
1003f860:	jl     0x1003f880
1003f862:	mov    dl,BYTE PTR [ecx+eax*1]
1003f865:	or     BYTE PTR [esp+eax*1+0xdc],dl
1003f86c:	add    eax,0x1
1003f86f:	cmp    eax,0x20
1003f872:	jl     0x1003f862
1003f874:	jmp    0x1003f894
1003f876:	jmp    0x1003f880
1003f878:	lea    esp,[esp+0x0]
1003f87f:	nop
1003f880:	mov    dl,BYTE PTR [ecx+eax*1]
1003f883:	not    dl
1003f885:	and    BYTE PTR [esp+eax*1+0xdc],dl
1003f88c:	add    eax,0x1
1003f88f:	cmp    eax,0x20
1003f892:	jl     0x1003f880
1003f894:	test   esi,esi
1003f896:	jge    0x1003f89a
1003f898:	neg    esi
1003f89a:	cmp    esi,0x1
1003f89d:	jne    0x1003f8a9
1003f89f:	and    BYTE PTR [esp+0xdd],0xc3
1003f8a7:	jmp    0x1003f8b6
1003f8a9:	cmp    esi,0x2
1003f8ac:	jne    0x1003f8b6
1003f8ae:	and    BYTE PTR [esp+0xe7],0x7f
1003f8b6:	xor    eax,eax
1003f8b8:	cmp    DWORD PTR [esp+0x58],eax
1003f8bc:	je     0x1003f8f0
1003f8be:	mov    edi,edi
1003f8c0:	mov    cl,BYTE PTR [esp+eax*1+0xdc]
1003f8c7:	not    cl
1003f8c9:	or     BYTE PTR [esp+eax*1+0xbc],cl
1003f8d0:	add    eax,0x1
1003f8d3:	cmp    eax,0x20
1003f8d6:	jl     0x1003f8c0
1003f8d8:	mov    esi,DWORD PTR [esp+0x7c]
1003f8dc:	add    esi,0x1
1003f8df:	mov    DWORD PTR [esp+0x24],0xa
1003f8e7:	jmp    0x1003f9f9
1003f8ec:	lea    esp,[esp+0x0]
1003f8f0:	mov    dl,BYTE PTR [esp+eax*1+0xdc]
1003f8f7:	or     BYTE PTR [esp+eax*1+0xbc],dl
1003f8fe:	add    eax,0x1
1003f901:	cmp    eax,0x20
1003f904:	jl     0x1003f8f0
1003f906:	mov    esi,DWORD PTR [esp+0x7c]
1003f90a:	add    esi,0x1
1003f90d:	mov    DWORD PTR [esp+0x24],0xa
1003f915:	jmp    0x1003f9f9
1003f91a:	cmp    edi,0x5c
1003f91d:	jne    0x1003fc68
1003f923:	mov    ebp,DWORD PTR [esp+0x18]
1003f927:	mov    eax,DWORD PTR [ebp+0x30]
1003f92a:	mov    esi,DWORD PTR [esp+0x20]
1003f92e:	mov    ebx,DWORD PTR [esp+0x34]
1003f932:	push   0x1
1003f934:	push   eax
1003f935:	lea    ecx,[esp+0x18]
1003f939:	push   esi
1003f93a:	push   ecx
1003f93b:	mov    eax,ebx
1003f93d:	call   0x1003dc60
1003f942:	add    esp,0x10
1003f945:	cmp    DWORD PTR [esi],0x0
1003f948:	mov    edi,eax
1003f94a:	jne    0x10040969
1003f950:	mov    ecx,edi
1003f952:	neg    ecx
1003f954:	cmp    ecx,0x5
1003f957:	jne    0x1003f967
1003f959:	mov    edi,0x8
1003f95e:	mov    esi,DWORD PTR [esp+0x10]
1003f962:	jmp    0x1003fc6c
1003f967:	cmp    ecx,0x16
1003f96a:	jne    0x1003f97a
1003f96c:	mov    esi,DWORD PTR [esp+0x10]
1003f970:	mov    edi,0x58
1003f975:	jmp    0x1003fc6c
1003f97a:	cmp    ecx,0x11
1003f97d:	jne    0x1003f98d
1003f97f:	mov    esi,DWORD PTR [esp+0x10]
1003f983:	mov    edi,0x52
1003f988:	jmp    0x1003fc6c
1003f98d:	cmp    ecx,0x1a
1003f990:	jne    0x1003f9b1
1003f992:	mov    esi,DWORD PTR [esp+0x10]
1003f996:	cmp    BYTE PTR [esi+0x1],0x5c
1003f99a:	jne    0x1003f9a7
1003f99c:	cmp    BYTE PTR [esi+0x2],0x45
1003f9a0:	jne    0x1003f9a7
1003f9a2:	add    esi,0x2
1003f9a5:	jmp    0x1003f9f9
1003f9a7:	mov    DWORD PTR [esp+0x50],0x1
1003f9af:	jmp    0x1003f9f9
1003f9b1:	cmp    ecx,0x19
1003f9b4:	je     0x1003f9f5
1003f9b6:	test   edi,edi
1003f9b8:	jge    0x1003f95e
1003f9ba:	add    DWORD PTR [esp+0x24],0x2
1003f9bf:	cmp    DWORD PTR [esp+0x38],0x0
1003f9c4:	mov    eax,DWORD PTR [ebp+0x8]
1003f9c7:	jne    0x1003fb63
1003f9cd:	lea    edx,[ecx-0x6]
1003f9d0:	cmp    edx,0x5
1003f9d3:	ja     0x1003fb99
1003f9d9:	jmp    DWORD PTR [edx*4+0x10041d70]
1003f9e0:	xor    ecx,ecx
1003f9e2:	mov    dl,BYTE PTR [eax+ecx*1+0x40]
1003f9e6:	or     BYTE PTR [esp+ecx*1+0xbc],dl
1003f9ed:	add    ecx,0x1
1003f9f0:	cmp    ecx,0x20
1003f9f3:	jl     0x1003f9e2
1003f9f5:	mov    esi,DWORD PTR [esp+0x10]
1003f9f9:	add    esi,0x1
1003f9fc:	mov    DWORD PTR [esp+0x10],esi
1003fa00:	movzx  edi,BYTE PTR [esi]
1003fa03:	test   edi,edi
1003fa05:	je     0x10041af9
1003fa0b:	cmp    edi,0x5d
1003fa0e:	jne    0x1003f772
1003fa14:	cmp    DWORD PTR [esp+0x50],0x0
1003fa19:	jne    0x1003f779
1003fa1f:	cmp    DWORD PTR [esp+0x24],0x1
1003fa24:	jne    0x1003fea4
1003fa2a:	cmp    DWORD PTR [esp+0x1c],0x0
1003fa2f:	mov    eax,DWORD PTR [esp+0x4c]
1003fa33:	mov    DWORD PTR [esp+0x68],eax
1003fa37:	je     0x1003fe9b
1003fa3d:	mov    eax,DWORD PTR [esp+0x30]
1003fa41:	cmp    eax,0xfffffffe
1003fa44:	jne    0x1003fa4d
1003fa46:	or     eax,0xffffffff
1003fa49:	mov    DWORD PTR [esp+0x30],eax
1003fa4d:	mov    cl,BYTE PTR [esp+0x28]
1003fa51:	mov    DWORD PTR [esp+0x5c],eax
1003fa55:	mov    eax,DWORD PTR [esp+0x14]
1003fa59:	mov    BYTE PTR [eax],0x1e
1003fa5c:	add    eax,0x1
1003fa5f:	mov    BYTE PTR [eax],cl
1003fa61:	add    eax,0x1
1003fa64:	mov    DWORD PTR [esp+0x14],eax
1003fa68:	jmp    0x100419f3
1003fa6d:	mov    DWORD PTR [esp+0x3c],0x1
1003fa75:	xor    ecx,ecx
1003fa77:	jmp    0x1003fa80
1003fa79:	lea    esp,[esp+0x0]
1003fa80:	mov    dl,BYTE PTR [eax+ecx*1+0x40]
1003fa84:	not    dl
1003fa86:	or     BYTE PTR [esp+ecx*1+0xbc],dl
1003fa8d:	add    ecx,0x1
1003fa90:	cmp    ecx,0x20
1003fa93:	jl     0x1003fa80
1003fa95:	jmp    0x1003f9f5
1003fa9a:	xor    ecx,ecx
1003fa9c:	lea    esp,[esp+0x0]
1003faa0:	mov    dl,BYTE PTR [eax+ecx*1+0xa0]
1003faa7:	or     BYTE PTR [esp+ecx*1+0xbc],dl
1003faae:	add    ecx,0x1
1003fab1:	cmp    ecx,0x20
1003fab4:	jl     0x1003faa0
1003fab6:	jmp    0x1003f9f5
1003fabb:	mov    DWORD PTR [esp+0x3c],0x1
1003fac3:	xor    ecx,ecx
1003fac5:	jmp    0x1003fad0
1003fac7:	lea    esp,[esp+0x0]
1003face:	mov    edi,edi
1003fad0:	mov    dl,BYTE PTR [eax+ecx*1+0xa0]
1003fad7:	not    dl
1003fad9:	or     BYTE PTR [esp+ecx*1+0xbc],dl
1003fae0:	add    ecx,0x1
1003fae3:	cmp    ecx,0x20
1003fae6:	jl     0x1003fad0
1003fae8:	jmp    0x1003f9f5
1003faed:	mov    esi,eax
1003faef:	lea    eax,[esp+0xbc]
1003faf6:	xor    edx,edx
1003faf8:	sub    esi,eax
1003fafa:	lea    ebx,[ebx+0x0]
1003fb00:	lea    ecx,[esp+edx*1+0xbc]
1003fb07:	mov    al,BYTE PTR [esi+ecx*1]
1003fb0a:	or     BYTE PTR [ecx],al
1003fb0c:	add    edx,0x1
1003fb0f:	cmp    edx,0x20
1003fb12:	jl     0x1003fb00
1003fb14:	and    BYTE PTR [esp+0xbd],0xf7
1003fb1c:	jmp    0x1003f9f5
1003fb21:	mov    esi,eax
1003fb23:	lea    ecx,[esp+0xbc]
1003fb2a:	xor    edx,edx
1003fb2c:	mov    DWORD PTR [esp+0x3c],0x1
1003fb34:	sub    esi,ecx
1003fb36:	jmp    0x1003fb40
1003fb38:	lea    esp,[esp+0x0]
1003fb3f:	nop
1003fb40:	lea    ecx,[esp+edx*1+0xbc]
1003fb47:	mov    al,BYTE PTR [esi+ecx*1]
1003fb4a:	not    al
1003fb4c:	or     BYTE PTR [ecx],al
1003fb4e:	add    edx,0x1
1003fb51:	cmp    edx,0x20
1003fb54:	jl     0x1003fb40
1003fb56:	or     BYTE PTR [esp+0xbd],0x8
1003fb5e:	jmp    0x1003f9f5
1003fb63:	cmp    edi,0xfffffff9
1003fb66:	je     0x1003f9f5
1003fb6c:	cmp    edi,0xfffffffa
1003fb6f:	je     0x1003f9f5
1003fb75:	cmp    edi,0xfffffff5
1003fb78:	je     0x1003f9f5
1003fb7e:	cmp    edi,0xfffffff6
1003fb81:	je     0x1003f9f5
1003fb87:	cmp    edi,0xfffffff7
1003fb8a:	je     0x1003f9f5
1003fb90:	cmp    edi,0xfffffff8
1003fb93:	je     0x1003f9f5
1003fb99:	cmp    ecx,0x13
1003fb9c:	jne    0x1003fbbb
1003fb9e:	or     BYTE PTR [esp+0xbd],0x2
1003fba6:	or     BYTE PTR [esp+0xc0],0x1
1003fbae:	or     BYTE PTR [esp+0xd0],0x1
1003fbb6:	jmp    0x1003f9f5
1003fbbb:	cmp    ecx,0x12
1003fbbe:	jne    0x1003fbf8
1003fbc0:	xor    eax,eax
1003fbc2:	mov    ecx,eax
1003fbc4:	sub    ecx,0x1
1003fbc7:	mov    edx,0xff
1003fbcc:	je     0x1003fbdf
1003fbce:	sub    ecx,0x3
1003fbd1:	je     0x1003fbd8
1003fbd3:	sub    ecx,0x10
1003fbd6:	jne    0x1003fbe4
1003fbd8:	mov    edx,0xfe
1003fbdd:	jmp    0x1003fbe4
1003fbdf:	mov    edx,0xfd
1003fbe4:	or     BYTE PTR [esp+eax*1+0xbc],dl
1003fbeb:	add    eax,0x1
1003fbee:	cmp    eax,0x20
1003fbf1:	jl     0x1003fbc2
1003fbf3:	jmp    0x1003f9f5
1003fbf8:	cmp    ecx,0x15
1003fbfb:	jne    0x1003fc12
1003fbfd:	or     BYTE PTR [esp+0xbd],0x3c
1003fc05:	or     BYTE PTR [esp+0xcc],0x20
1003fc0d:	jmp    0x1003f9f5
1003fc12:	cmp    ecx,0x14
1003fc15:	jne    0x1003fc51
1003fc17:	xor    eax,eax
1003fc19:	lea    esp,[esp+0x0]
1003fc20:	mov    ecx,eax
1003fc22:	sub    ecx,0x1
1003fc25:	mov    edx,0xff
1003fc2a:	je     0x1003fc38
1003fc2c:	sub    ecx,0xf
1003fc2f:	jne    0x1003fc3d
1003fc31:	mov    edx,0xdf
1003fc36:	jmp    0x1003fc3d
1003fc38:	mov    edx,0xc3
1003fc3d:	or     BYTE PTR [esp+eax*1+0xbc],dl
1003fc44:	add    eax,0x1
1003fc47:	cmp    eax,0x20
1003fc4a:	jl     0x1003fc20
1003fc4c:	jmp    0x1003f9f5
1003fc51:	test   bl,0x40
1003fc54:	jne    0x10041adf
1003fc5a:	mov    esi,DWORD PTR [esp+0x10]
1003fc5e:	sub    DWORD PTR [esp+0x24],0x2
1003fc63:	movzx  edi,BYTE PTR [esi]
1003fc66:	jmp    0x1003fc6c
1003fc68:	mov    ebp,DWORD PTR [esp+0x18]
1003fc6c:	cmp    BYTE PTR [esi+0x1],0x5c
1003fc70:	mov    eax,DWORD PTR [esp+0x50]
1003fc74:	jne    0x1003fc8f
1003fc76:	cmp    BYTE PTR [esi+0x2],0x45
1003fc7a:	jne    0x1003fc8b
1003fc7c:	add    esi,0x2
1003fc7f:	xor    eax,eax
1003fc81:	mov    DWORD PTR [esp+0x10],esi
1003fc85:	cmp    BYTE PTR [esi+0x1],0x5c
1003fc89:	je     0x1003fc76
1003fc8b:	mov    DWORD PTR [esp+0x50],eax
1003fc8f:	cmp    edi,0xd
1003fc92:	mov    DWORD PTR [esp+0x58],esi
1003fc96:	je     0x1003fc9d
1003fc98:	cmp    edi,0xa
1003fc9b:	jne    0x1003fca1
1003fc9d:	or     DWORD PTR [ebp+0x44],0x20
1003fca1:	test   eax,eax
1003fca3:	jne    0x1003fe41
1003fca9:	cmp    BYTE PTR [esi+0x1],0x2d
1003fcad:	jne    0x1003fe41
1003fcb3:	add    esi,0x2
1003fcb6:	mov    DWORD PTR [esp+0x10],esi
1003fcba:	cmp    BYTE PTR [esi],0x5c
1003fcbd:	jne    0x1003fd0e
1003fcbf:	nop
1003fcc0:	cmp    BYTE PTR [esi+0x1],0x45
1003fcc4:	jne    0x1003fcd4
1003fcc6:	add    esi,0x2
1003fcc9:	mov    DWORD PTR [esp+0x10],esi
1003fccd:	cmp    BYTE PTR [esi],0x5c
1003fcd0:	je     0x1003fcc0
1003fcd2:	jmp    0x1003fd0e
1003fcd4:	cmp    BYTE PTR [esi],0x5c
1003fcd7:	jne    0x1003fd0e
1003fcd9:	lea    esp,[esp+0x0]
1003fce0:	cmp    BYTE PTR [esi+0x1],0x51
1003fce4:	jne    0x1003fd0e
1003fce6:	add    esi,0x2
1003fce9:	mov    DWORD PTR [esp+0x10],esi
1003fced:	cmp    BYTE PTR [esi],0x5c
1003fcf0:	jne    0x1003fd06
1003fcf2:	cmp    BYTE PTR [esi+0x1],0x45
1003fcf6:	jne    0x1003fd06
1003fcf8:	add    esi,0x2
1003fcfb:	mov    DWORD PTR [esp+0x10],esi
1003fcff:	cmp    BYTE PTR [esi],0x5c
1003fd02:	je     0x1003fce0
1003fd04:	jmp    0x1003fd0e
1003fd06:	mov    DWORD PTR [esp+0x50],0x1
1003fd0e:	mov    al,BYTE PTR [esi]
1003fd10:	test   al,al
1003fd12:	je     0x1003fe39
1003fd18:	cmp    DWORD PTR [esp+0x50],0x0
1003fd1d:	jne    0x1003fd27
1003fd1f:	cmp    al,0x5d
1003fd21:	je     0x1003fe39
1003fd27:	cmp    DWORD PTR [esp+0x50],0x0
1003fd2c:	movzx  ebx,al
1003fd2f:	jne    0x1003fd8f
1003fd31:	cmp    ebx,0x5c
1003fd34:	jne    0x1003fd8f
1003fd36:	mov    ecx,DWORD PTR [esp+0x18]
1003fd3a:	mov    edx,DWORD PTR [ecx+0x30]
1003fd3d:	mov    esi,DWORD PTR [esp+0x20]
1003fd41:	push   0x1
1003fd43:	push   edx
1003fd44:	lea    eax,[esp+0x18]
1003fd48:	push   esi
1003fd49:	push   eax
1003fd4a:	mov    eax,DWORD PTR [esp+0x44]
1003fd4e:	call   0x1003dc60
1003fd53:	add    esp,0x10
1003fd56:	cmp    DWORD PTR [esi],0x0
1003fd59:	mov    ebx,eax
1003fd5b:	jne    0x10040969
1003fd61:	test   ebx,ebx
1003fd63:	jge    0x1003fd8b
1003fd65:	cmp    ebx,0xfffffffb
1003fd68:	jne    0x1003fd71
1003fd6a:	mov    ebx,0x8
1003fd6f:	jmp    0x1003fd8b
1003fd71:	cmp    ebx,0xffffffea
1003fd74:	jne    0x1003fd7d
1003fd76:	mov    ebx,0x58
1003fd7b:	jmp    0x1003fd8b
1003fd7d:	cmp    ebx,0xffffffef
1003fd80:	jne    0x1003fe39
1003fd86:	mov    ebx,0x52
1003fd8b:	mov    esi,DWORD PTR [esp+0x10]
1003fd8f:	cmp    ebx,edi
1003fd91:	jl     0x10041aea
1003fd97:	je     0x1003fe41
1003fd9d:	cmp    ebx,0xd
1003fda0:	je     0x1003fda7
1003fda2:	cmp    ebx,0xa
1003fda5:	jne    0x1003fdaf
1003fda7:	mov    eax,DWORD PTR [esp+0x18]
1003fdab:	or     DWORD PTR [eax+0x44],0x20
1003fdaf:	mov    edx,DWORD PTR [esp+0x24]
1003fdb3:	mov    ecx,ebx
1003fdb5:	sub    ecx,edi
1003fdb7:	cmp    DWORD PTR [esp+0x38],0x0
1003fdbc:	lea    eax,[edx+ecx*1+0x1]
1003fdc0:	mov    DWORD PTR [esp+0x24],eax
1003fdc4:	mov    DWORD PTR [esp+0x28],ebx
1003fdc8:	jne    0x1003f9f9
1003fdce:	cmp    edi,ebx
1003fdd0:	jg     0x1003f9f9
1003fdd6:	mov    eax,DWORD PTR [esp+0x34]
1003fdda:	and    eax,0x1
1003fddd:	mov    DWORD PTR [esp+0x60],eax
1003fde1:	mov    eax,edi
1003fde3:	cdq    
1003fde4:	and    edx,0x7
1003fde7:	add    eax,edx
1003fde9:	mov    ecx,edi
1003fdeb:	and    ecx,0x7
1003fdee:	mov    dl,0x1
1003fdf0:	shl    dl,cl
1003fdf2:	sar    eax,0x3
1003fdf5:	lea    ebp,[esp+eax*1+0xbc]
1003fdfc:	or     BYTE PTR [ebp+0x0],dl
1003fdff:	cmp    DWORD PTR [esp+0x60],0x0
1003fe04:	je     0x1003fe2d
1003fe06:	mov    eax,DWORD PTR [esp+0x18]
1003fe0a:	mov    ecx,DWORD PTR [eax+0x4]
1003fe0d:	movzx  ecx,BYTE PTR [ecx+edi*1]
1003fe11:	mov    eax,ecx
1003fe13:	cdq    
1003fe14:	and    edx,0x7
1003fe17:	add    eax,edx
1003fe19:	and    ecx,0x7
1003fe1c:	mov    dl,0x1
1003fe1e:	sar    eax,0x3
1003fe21:	shl    dl,cl
1003fe23:	lea    ebp,[esp+eax*1+0xbc]
1003fe2a:	or     BYTE PTR [ebp+0x0],dl
1003fe2d:	add    edi,0x1
1003fe30:	cmp    edi,ebx
1003fe32:	jle    0x1003fde1
1003fe34:	jmp    0x1003f9f9
1003fe39:	mov    esi,DWORD PTR [esp+0x58]
1003fe3d:	mov    DWORD PTR [esp+0x10],esi
1003fe41:	mov    eax,edi
1003fe43:	cdq    
1003fe44:	and    edx,0x7
1003fe47:	add    eax,edx
1003fe49:	mov    ecx,edi
1003fe4b:	and    ecx,0x7
1003fe4e:	mov    dl,0x1
1003fe50:	shl    dl,cl
1003fe52:	sar    eax,0x3
1003fe55:	lea    eax,[esp+eax*1+0xbc]
1003fe5c:	or     BYTE PTR [eax],dl
1003fe5e:	test   BYTE PTR [esp+0x34],0x1
1003fe63:	je     0x1003fe8d
1003fe65:	mov    eax,DWORD PTR [esp+0x18]
1003fe69:	mov    ecx,DWORD PTR [eax+0x4]
1003fe6c:	movzx  edi,BYTE PTR [ecx+edi*1]
1003fe70:	mov    eax,edi
1003fe72:	cdq    
1003fe73:	and    edx,0x7
1003fe76:	add    eax,edx
1003fe78:	mov    ecx,edi
1003fe7a:	and    ecx,0x7
1003fe7d:	mov    dl,0x1
1003fe7f:	sar    eax,0x3
1003fe82:	shl    dl,cl
1003fe84:	lea    eax,[esp+eax*1+0xbc]
1003fe8b:	or     BYTE PTR [eax],dl
1003fe8d:	add    DWORD PTR [esp+0x24],0x1
1003fe92:	mov    DWORD PTR [esp+0x28],edi
1003fe96:	jmp    0x1003f9f9
1003fe9b:	mov    al,BYTE PTR [esp+0x28]
1003fe9f:	jmp    0x1003f3ce
1003fea4:	mov    eax,DWORD PTR [esp+0x30]
1003fea8:	cmp    eax,0xfffffffe
1003feab:	jne    0x1003feb4
1003fead:	or     eax,0xffffffff
1003feb0:	mov    DWORD PTR [esp+0x30],eax
1003feb4:	mov    ebp,DWORD PTR [esp+0x14]
1003feb8:	mov    edx,DWORD PTR [esp+0x4c]
1003febc:	mov    DWORD PTR [esp+0x5c],eax
1003fec0:	mov    eax,DWORD PTR [esp+0x1c]
1003fec4:	cmp    eax,DWORD PTR [esp+0x3c]
1003fec8:	mov    DWORD PTR [esp+0x68],edx
1003fecc:	setne  cl
1003fecf:	add    cl,0x4e
1003fed2:	mov    BYTE PTR [ebp+0x0],cl
1003fed5:	add    ebp,0x1
1003fed8:	test   eax,eax
1003feda:	je     0x1003ff0e
1003fedc:	cmp    DWORD PTR [esp+0x38],0x0
1003fee1:	jne    0x1003ff1e
1003fee3:	lea    ecx,[esp+0xbc]
1003feea:	mov    eax,ebp
1003feec:	sub    ecx,ebp
1003feee:	mov    esi,0x20
1003fef3:	mov    dl,BYTE PTR [ecx+eax*1]
1003fef6:	not    dl
1003fef8:	mov    BYTE PTR [eax],dl
1003fefa:	add    eax,0x1
1003fefd:	sub    esi,0x1
1003ff00:	jne    0x1003fef3
1003ff02:	add    ebp,0x20
1003ff05:	mov    DWORD PTR [esp+0x14],ebp
1003ff09:	jmp    0x100419f3
1003ff0e:	mov    ecx,0x8
1003ff13:	lea    esi,[esp+0xbc]
1003ff1a:	mov    edi,ebp
1003ff1c:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
1003ff1e:	add    ebp,0x20
1003ff21:	mov    DWORD PTR [esp+0x14],ebp
1003ff25:	jmp    0x100419f3
1003ff2a:	cmp    DWORD PTR [esp+0x28],0x0
1003ff2f:	je     0x1003f3cc
1003ff35:	mov    edi,DWORD PTR [esp+0x20]
1003ff39:	lea    eax,[esp+0x40]
1003ff3d:	push   eax
1003ff3e:	lea    ecx,[esp+0x4c]
1003ff42:	push   ecx
1003ff43:	lea    eax,[esi+0x1]
1003ff46:	call   0x1003e120
1003ff4b:	add    esp,0x8
1003ff4e:	cmp    DWORD PTR [edi],0x0
1003ff51:	mov    esi,eax
1003ff53:	mov    DWORD PTR [esp+0x10],esi
1003ff57:	jne    0x1004096d
1003ff5d:	mov    eax,DWORD PTR [esp+0x48]
1003ff61:	jmp    0x1003ff8a
1003ff63:	mov    DWORD PTR [esp+0x40],0xffffffff
1003ff6b:	jmp    0x1003ff84
1003ff6d:	mov    eax,0x1
1003ff72:	mov    DWORD PTR [esp+0x40],0xffffffff
1003ff7a:	jmp    0x1003ff86
1003ff7c:	mov    DWORD PTR [esp+0x40],0x1
1003ff84:	xor    eax,eax
1003ff86:	mov    DWORD PTR [esp+0x48],eax
1003ff8a:	xor    edx,edx
1003ff8c:	cmp    ebp,edx
1003ff8e:	je     0x10041b08
1003ff94:	cmp    eax,edx
1003ff96:	jne    0x1003ffa8
1003ff98:	mov    ecx,DWORD PTR [esp+0x5c]
1003ff9c:	mov    DWORD PTR [esp+0x30],ecx
1003ffa0:	mov    ecx,DWORD PTR [esp+0x68]
1003ffa4:	mov    DWORD PTR [esp+0x4c],ecx
1003ffa8:	sub    eax,DWORD PTR [esp+0x40]
1003ffac:	mov    ecx,ebp
1003ffae:	neg    eax
1003ffb0:	sbb    eax,eax
1003ffb2:	and    eax,0x200
1003ffb7:	mov    DWORD PTR [esp+0x8c],eax
1003ffbe:	mov    DWORD PTR [esp+0x44],ecx
1003ffc2:	mov    al,BYTE PTR [esi+0x1]
1003ffc5:	cmp    al,0x2b
1003ffc7:	mov    DWORD PTR [esp+0x54],edx
1003ffcb:	mov    DWORD PTR [esp+0x3c],edx
1003ffcf:	jne    0x1003ffe4
1003ffd1:	mov    edx,0x1
1003ffd6:	xor    ebx,ebx
1003ffd8:	add    esi,edx
1003ffda:	mov    DWORD PTR [esp+0x3c],edx
1003ffde:	mov    DWORD PTR [esp+0x10],esi
1003ffe2:	jmp    0x1003ffff
1003ffe4:	cmp    al,0x3f
1003ffe6:	jne    0x1003fff8
1003ffe8:	mov    ebx,DWORD PTR [esp+0xa0]
1003ffef:	add    esi,0x1
1003fff2:	mov    DWORD PTR [esp+0x10],esi
1003fff6:	jmp    0x1003ffff
1003fff8:	mov    ebx,DWORD PTR [esp+0xa4]
1003ffff:	mov    al,BYTE PTR [ebp+0x0]
10040002:	cmp    al,0x1c
10040004:	je     0x1004058a
1004000a:	cmp    al,0x1d
1004000c:	je     0x1004058a
10040012:	cmp    al,0x1e
10040014:	jne    0x1004004b
10040016:	test   edx,edx
10040018:	movzx  eax,BYTE PTR [ebp+0x1]
1004001c:	mov    DWORD PTR [esp+0x54],0xd
10040024:	mov    DWORD PTR [esp+0x1c],eax
10040028:	jne    0x100405eb
1004002e:	cmp    DWORD PTR [esp+0x40],edx
10040032:	jge    0x100405eb
10040038:	mov    ecx,DWORD PTR [esp+0x34]
1004003c:	push   ecx
1004003d:	add    esi,0x1
10040040:	push   esi
10040041:	mov    edx,eax
10040043:	push   edx
10040044:	push   0x1e
10040046:	jmp    0x100405cd
1004004b:	cmp    al,0x17
1004004d:	jae    0x10040081
1004004f:	test   edx,edx
10040051:	movzx  eax,al
10040054:	mov    DWORD PTR [esp+0x54],0x1a
1004005c:	mov    DWORD PTR [esp+0x1c],eax
10040060:	jne    0x100405eb
10040066:	cmp    DWORD PTR [esp+0x40],edx
1004006a:	jge    0x100405eb
10040070:	mov    ecx,DWORD PTR [esp+0x34]
10040074:	push   ecx
10040075:	add    esi,0x1
10040078:	push   esi
10040079:	push   edx
1004007a:	mov    edx,eax
1004007c:	jmp    0x100405cc
10040081:	cmp    al,0x4e
10040083:	je     0x100404ec
10040089:	cmp    al,0x4f
1004008b:	je     0x100404ec
10040091:	cmp    al,0x51
10040093:	je     0x100404ec
10040099:	cmp    al,0x5e
1004009b:	je     0x100400c0
1004009d:	cmp    al,0x5f
1004009f:	je     0x100400c0
100400a1:	cmp    al,0x5d
100400a3:	je     0x100400c0
100400a5:	cmp    al,0x60
100400a7:	je     0x100400c0
100400a9:	cmp    al,0x6d
100400ab:	je     0x10040893
100400b1:	mov    eax,DWORD PTR [esp+0x20]
100400b5:	mov    DWORD PTR [eax],0xb
100400bb:	jmp    0x1004096d
100400c0:	mov    edi,DWORD PTR [esp+0x14]
100400c4:	mov    edx,edi
100400c6:	sub    edx,ebp
100400c8:	cmp    al,0x60
100400ca:	mov    DWORD PTR [esp+0x28],0x0
100400d2:	mov    DWORD PTR [esp+0x1c],edx
100400d6:	mov    DWORD PTR [esp+0x24],0x0
100400de:	jne    0x100400ea
100400e0:	cmp    BYTE PTR [ebp+0x3],0x66
100400e4:	je     0x10041b17
100400ea:	mov    edx,DWORD PTR [esp+0x40]
100400ee:	cmp    edx,0xffffffff
100400f1:	jne    0x10040112
100400f3:	mov    edi,ebp
100400f5:	xor    eax,eax
100400f7:	mov    ah,BYTE PTR [edi+0x1]
100400fa:	mov    al,BYTE PTR [edi+0x2]
100400fd:	add    edi,eax
100400ff:	cmp    BYTE PTR [edi],0x55
10040102:	jne    0x100400f5
10040104:	mov    eax,DWORD PTR [esp+0x14]
10040108:	sub    eax,edi
1004010a:	mov    edi,DWORD PTR [esp+0x14]
1004010e:	mov    DWORD PTR [esp+0x28],eax
10040112:	mov    eax,DWORD PTR [esp+0x48]
10040116:	test   eax,eax
10040118:	jne    0x100401d7
1004011e:	cmp    edx,0x1
10040121:	mov    BYTE PTR [edi],al
10040123:	jg     0x1004016e
10040125:	mov    ecx,DWORD PTR [esp+0x64]
10040129:	mov    edx,DWORD PTR [esp+0x18]
1004012d:	push   ecx
1004012e:	push   edx
1004012f:	push   0x1
10040131:	push   ebp
10040132:	call   0x1003ea60
10040137:	mov    eax,DWORD PTR [esp+0x2c]
1004013b:	push   eax
1004013c:	lea    esi,[ebp+0x1]
1004013f:	push   ebp
10040140:	push   esi
10040141:	call   0x100457b0
10040146:	add    edi,0x1
10040149:	add    esp,0x1c
1004014c:	cmp    DWORD PTR [esp+0x40],0x0
10040151:	mov    DWORD PTR [esp+0x14],edi
10040155:	jne    0x10040160
10040157:	mov    BYTE PTR [ebp+0x0],0x6f
1004015b:	jmp    0x1004088f
10040160:	mov    cl,bl
10040162:	add    cl,0x67
10040165:	mov    BYTE PTR [ebp+0x0],cl
10040168:	mov    DWORD PTR [esp+0x2c],esi
1004016c:	jmp    0x100401bd
1004016e:	mov    edx,DWORD PTR [esp+0x64]
10040172:	mov    eax,DWORD PTR [esp+0x18]
10040176:	push   edx
10040177:	push   eax
10040178:	push   0x4
1004017a:	push   ebp
1004017b:	call   0x1003ea60
10040180:	mov    ecx,DWORD PTR [esp+0x2c]
10040184:	push   ecx
10040185:	lea    edx,[ebp+0x4]
10040188:	push   ebp
10040189:	push   edx
1004018a:	call   0x100457b0
1004018f:	mov    al,bl
10040191:	add    al,0x67
10040193:	mov    BYTE PTR [ebp+0x0],al
10040196:	add    ebp,0x1
10040199:	mov    BYTE PTR [ebp+0x0],0x5e
1004019d:	add    ebp,0x1
100401a0:	add    edi,0x4
100401a3:	add    esp,0x1c
100401a6:	mov    DWORD PTR [esp+0x24],ebp
100401aa:	mov    BYTE PTR [ebp+0x0],0x0
100401ae:	mov    BYTE PTR [ebp+0x1],0x0
100401b2:	add    ebp,0x2
100401b5:	mov    DWORD PTR [esp+0x14],edi
100401b9:	mov    DWORD PTR [esp+0x2c],ebp
100401bd:	sub    DWORD PTR [esp+0x40],0x1
100401c2:	mov    esi,DWORD PTR [esp+0x10]
100401c6:	mov    ecx,DWORD PTR [esp+0x44]
100401ca:	mov    edx,DWORD PTR [esp+0x40]
100401ce:	mov    edi,DWORD PTR [esp+0x38]
100401d2:	jmp    0x100402eb
100401d7:	cmp    eax,0x1
100401da:	mov    edi,DWORD PTR [esp+0x38]
100401de:	jle    0x100402db
100401e4:	test   edi,edi
100401e6:	je     0x1004022d
100401e8:	mov    eax,DWORD PTR [esp+0x48]
100401ec:	add    eax,0xffffffff
100401ef:	mov    DWORD PTR [esp+0x60],eax
100401f3:	imul   eax,DWORD PTR [esp+0x6c]
100401f8:	fild   DWORD PTR [esp+0x60]
100401fc:	fimul  DWORD PTR [esp+0x6c]
10040200:	mov    edx,eax
10040202:	fcomp  QWORD PTR ds:0x10074288
10040208:	fnstsw ax
1004020a:	test   ah,0x41
1004020d:	je     0x10041b26
10040213:	mov    eax,DWORD PTR [edi]
10040215:	mov    ebp,0x7fffffeb
1004021a:	sub    ebp,eax
1004021c:	cmp    ebp,edx
1004021e:	jl     0x10041b26
10040224:	add    eax,edx
10040226:	mov    DWORD PTR [edi],eax
10040228:	jmp    0x100402db
1004022d:	cmp    DWORD PTR [esp+0x88],0x0
10040235:	je     0x10040246
10040237:	cmp    DWORD PTR [esp+0x4c],0x0
1004023c:	jge    0x10040246
1004023e:	mov    edx,DWORD PTR [esp+0x30]
10040242:	mov    DWORD PTR [esp+0x4c],edx
10040246:	cmp    DWORD PTR [esp+0x48],0x1
1004024b:	jle    0x100402db
10040251:	mov    eax,DWORD PTR [esp+0x48]
10040255:	add    eax,0xffffffff
10040258:	mov    DWORD PTR [esp+0x58],eax
1004025c:	lea    esp,[esp+0x0]
10040260:	mov    edx,DWORD PTR [esp+0x1c]
10040264:	mov    eax,DWORD PTR [esp+0x14]
10040268:	mov    ecx,DWORD PTR [esp+0x18]
1004026c:	mov    edi,DWORD PTR [ecx+0x20]
1004026f:	push   edx
10040270:	push   ebp
10040271:	push   eax
10040272:	call   0x10045270
10040277:	mov    esi,DWORD PTR [esp+0x70]
1004027b:	mov    eax,DWORD PTR [esp+0x28]
1004027f:	add    esp,0xc
10040282:	cmp    esi,edi
10040284:	jae    0x100402c0
10040286:	mov    ecx,DWORD PTR [esp+0x18]
1004028a:	lea    ebx,[ebx+0x0]
10040290:	mov    ecx,DWORD PTR [ecx+0x20]
10040293:	xor    edx,edx
10040295:	mov    dh,BYTE PTR [esi]
10040297:	add    esi,0x2
1004029a:	mov    dl,BYTE PTR [esi-0x1]
1004029d:	add    edx,eax
1004029f:	sar    edx,0x8
100402a2:	mov    BYTE PTR [ecx],dl
100402a4:	movzx  edx,BYTE PTR [esi-0x1]
100402a8:	mov    ecx,DWORD PTR [esp+0x18]
100402ac:	mov    ecx,DWORD PTR [ecx+0x20]
100402af:	add    dl,al
100402b1:	mov    BYTE PTR [ecx+0x1],dl
100402b4:	mov    ecx,DWORD PTR [esp+0x18]
100402b8:	add    DWORD PTR [ecx+0x20],0x2
100402bc:	cmp    esi,edi
100402be:	jb     0x10040290
100402c0:	add    DWORD PTR [esp+0x14],eax
100402c4:	sub    DWORD PTR [esp+0x58],0x1
100402c9:	mov    DWORD PTR [esp+0x64],edi
100402cd:	jne    0x10040260
100402cf:	mov    esi,DWORD PTR [esp+0x10]
100402d3:	mov    ecx,DWORD PTR [esp+0x44]
100402d7:	mov    edi,DWORD PTR [esp+0x38]
100402db:	mov    edx,DWORD PTR [esp+0x40]
100402df:	test   edx,edx
100402e1:	jle    0x100402ed
100402e3:	sub    edx,DWORD PTR [esp+0x48]
100402e7:	mov    DWORD PTR [esp+0x40],edx
100402eb:	test   edx,edx
100402ed:	jl     0x10040490
100402f3:	test   edi,edi
100402f5:	je     0x10040341
100402f7:	test   edx,edx
100402f9:	jle    0x10040341
100402fb:	mov    eax,DWORD PTR [esp+0x6c]
100402ff:	add    eax,0x7
10040302:	mov    DWORD PTR [esp+0x60],eax
10040306:	imul   eax,edx
10040309:	fild   DWORD PTR [esp+0x60]
1004030d:	fimul  DWORD PTR [esp+0x40]
10040311:	sub    eax,0x6
10040314:	mov    edx,eax
10040316:	fcomp  QWORD PTR ds:0x10074288
1004031c:	fnstsw ax
1004031e:	test   ah,0x41
10040321:	je     0x10041a28
10040327:	mov    eax,DWORD PTR [edi]
10040329:	mov    ebx,0x7fffffeb
1004032e:	sub    ebx,eax
10040330:	cmp    ebx,edx
10040332:	jl     0x10041a28
10040338:	add    eax,edx
1004033a:	mov    DWORD PTR [edi],eax
1004033c:	jmp    0x10040435
10040341:	add    edx,0xffffffff
10040344:	mov    DWORD PTR [esp+0x28],edx
10040348:	js     0x10040435
1004034e:	mov    esi,DWORD PTR [esp+0x14]
10040352:	mov    edi,DWORD PTR [esp+0x18]
10040356:	add    bl,0x67
10040359:	mov    BYTE PTR [esp+0x73],bl
1004035d:	jmp    0x10040364
1004035f:	nop
10040360:	mov    bl,BYTE PTR [esp+0x73]
10040364:	mov    ebp,DWORD PTR [edi+0x20]
10040367:	mov    BYTE PTR [esi],bl
10040369:	add    esi,0x1
1004036c:	cmp    DWORD PTR [esp+0x28],0x0
10040371:	mov    DWORD PTR [esp+0x60],ebp
10040375:	mov    DWORD PTR [esp+0x14],esi
10040379:	je     0x100403a6
1004037b:	mov    ecx,DWORD PTR [esp+0x24]
1004037f:	mov    BYTE PTR [esi],0x5e
10040382:	add    esi,0x1
10040385:	test   ecx,ecx
10040387:	jne    0x1004038d
10040389:	xor    eax,eax
1004038b:	jmp    0x10040391
1004038d:	mov    eax,esi
1004038f:	sub    eax,ecx
10040391:	mov    edx,eax
10040393:	sar    edx,0x8
10040396:	mov    DWORD PTR [esp+0x24],esi
1004039a:	mov    BYTE PTR [esi],dl
1004039c:	mov    BYTE PTR [esi+0x1],al
1004039f:	add    esi,0x2
100403a2:	mov    DWORD PTR [esp+0x14],esi
100403a6:	mov    ebx,DWORD PTR [esp+0x1c]
100403aa:	mov    eax,DWORD PTR [esp+0x2c]
100403ae:	push   ebx
100403af:	push   eax
100403b0:	push   esi
100403b1:	call   0x10045270
100403b6:	mov    eax,DWORD PTR [esp+0x70]
100403ba:	add    esp,0xc
100403bd:	cmp    eax,ebp
100403bf:	jae    0x10040418
100403c1:	mov    ecx,DWORD PTR [esp+0x28]
100403c5:	mov    esi,ecx
100403c7:	neg    esi
100403c9:	sbb    esi,esi
100403cb:	and    esi,0x3
100403ce:	add    esi,0x1
100403d1:	neg    ecx
100403d3:	sbb    cl,cl
100403d5:	and    cl,0x3
100403d8:	add    cl,0x1
100403db:	jmp    0x100403e0
100403dd:	lea    ecx,[ecx+0x0]
100403e0:	xor    edx,edx
100403e2:	mov    dh,BYTE PTR [eax]
100403e4:	add    eax,0x2
100403e7:	mov    dl,BYTE PTR [eax-0x1]
100403ea:	add    edx,esi
100403ec:	add    edx,ebx
100403ee:	mov    ebx,DWORD PTR [edi+0x20]
100403f1:	sar    edx,0x8
100403f4:	mov    BYTE PTR [ebx],dl
100403f6:	movzx  edx,BYTE PTR [eax-0x1]
100403fa:	mov    ebx,DWORD PTR [esp+0x1c]
100403fe:	mov    ebp,DWORD PTR [edi+0x20]
10040401:	add    dl,cl
10040403:	add    dl,bl
10040405:	mov    BYTE PTR [ebp+0x1],dl
10040408:	mov    ebp,DWORD PTR [esp+0x60]
1004040c:	add    DWORD PTR [edi+0x20],0x2
10040410:	cmp    eax,ebp
10040412:	jb     0x100403e0
10040414:	mov    esi,DWORD PTR [esp+0x14]
10040418:	add    esi,ebx
1004041a:	sub    DWORD PTR [esp+0x28],0x1
1004041f:	mov    DWORD PTR [esp+0x64],ebp
10040423:	mov    DWORD PTR [esp+0x14],esi
10040427:	jns    0x10040360
1004042d:	mov    esi,DWORD PTR [esp+0x10]
10040431:	mov    ecx,DWORD PTR [esp+0x44]
10040435:	xor    edi,edi
10040437:	cmp    DWORD PTR [esp+0x24],edi
1004043b:	je     0x10040793
10040441:	mov    esi,DWORD PTR [esp+0x14]
10040445:	mov    eax,esi
10040447:	sub    eax,DWORD PTR [esp+0x24]
1004044b:	mov    ecx,esi
1004044d:	add    eax,0x1
10040450:	sub    ecx,eax
10040452:	xor    edx,edx
10040454:	mov    dh,BYTE PTR [ecx+0x1]
10040457:	mov    dl,BYTE PTR [ecx+0x2]
1004045a:	cmp    edx,edi
1004045c:	jne    0x10040464
1004045e:	mov    DWORD PTR [esp+0x24],edi
10040462:	jmp    0x10040468
10040464:	sub    DWORD PTR [esp+0x24],edx
10040468:	mov    BYTE PTR [esi],0x55
1004046b:	add    esi,0x1
1004046e:	mov    edx,eax
10040470:	sar    edx,0x8
10040473:	mov    BYTE PTR [esi],dl
10040475:	mov    BYTE PTR [esi+0x1],al
10040478:	add    esi,0x2
1004047b:	cmp    DWORD PTR [esp+0x24],edi
1004047f:	mov    BYTE PTR [ecx+0x1],dl
10040482:	mov    BYTE PTR [ecx+0x2],al
10040485:	jne    0x10040445
10040487:	mov    DWORD PTR [esp+0x14],esi
1004048b:	jmp    0x1004078b
10040490:	mov    esi,DWORD PTR [esp+0x14]
10040494:	sub    esi,DWORD PTR [esp+0x28]
10040498:	xor    eax,eax
1004049a:	mov    ah,BYTE PTR [esi+0x1]
1004049d:	mov    edi,esi
1004049f:	add    bl,0x56
100404a2:	mov    BYTE PTR [esi],bl
100404a4:	mov    al,BYTE PTR [esi+0x2]
100404a7:	sub    edi,eax
100404a9:	cmp    DWORD PTR [esp+0x38],0x0
100404ae:	jne    0x1004078b
100404b4:	cmp    BYTE PTR [edi],0x5d
100404b7:	je     0x1004078b
100404bd:	mov    ebx,edi
100404bf:	nop
100404c0:	push   0x0
100404c2:	push   esi
100404c3:	push   ebx
100404c4:	call   0x1003e7e0
100404c9:	add    esp,0xc
100404cc:	test   eax,eax
100404ce:	jne    0x100404e4
100404d0:	xor    ecx,ecx
100404d2:	mov    ch,BYTE PTR [ebx+0x1]
100404d5:	mov    cl,BYTE PTR [ebx+0x2]
100404d8:	add    ebx,ecx
100404da:	cmp    BYTE PTR [ebx],0x54
100404dd:	je     0x100404c0
100404df:	jmp    0x1004078b
100404e4:	add    BYTE PTR [edi],0x3
100404e7:	jmp    0x1004078b
100404ec:	mov    eax,DWORD PTR [esp+0x40]
100404f0:	test   eax,eax
100404f2:	jne    0x100404fd
100404f4:	mov    DWORD PTR [esp+0x14],ebp
100404f8:	jmp    0x10040893
100404fd:	cmp    eax,0x1
10040500:	je     0x1004050a
10040502:	mov    ecx,DWORD PTR [esp+0x18]
10040506:	or     DWORD PTR [ecx+0x44],0x1
1004050a:	mov    ecx,DWORD PTR [esp+0x48]
1004050e:	test   ecx,ecx
10040510:	jne    0x10040525
10040512:	cmp    eax,0xffffffff
10040515:	jne    0x1004053d
10040517:	mov    eax,DWORD PTR [esp+0x14]
1004051b:	add    bl,0x46
1004051e:	mov    BYTE PTR [eax],bl
10040520:	jmp    0x10040784
10040525:	cmp    ecx,0x1
10040528:	jne    0x10040550
1004052a:	cmp    eax,0xffffffff
1004052d:	jne    0x10040550
1004052f:	mov    eax,DWORD PTR [esp+0x14]
10040533:	add    bl,0x48
10040536:	mov    BYTE PTR [eax],bl
10040538:	jmp    0x10040784
1004053d:	cmp    eax,0x1
10040540:	jne    0x10040550
10040542:	mov    eax,DWORD PTR [esp+0x14]
10040546:	add    bl,0x4a
10040549:	mov    BYTE PTR [eax],bl
1004054b:	jmp    0x10040784
10040550:	mov    esi,DWORD PTR [esp+0x14]
10040554:	add    bl,0x4c
10040557:	mov    BYTE PTR [esi],bl
10040559:	add    esi,0x1
1004055c:	mov    edx,ecx
1004055e:	sar    edx,0x8
10040561:	mov    BYTE PTR [esi],dl
10040563:	mov    BYTE PTR [esi+0x1],cl
10040566:	add    esi,0x2
10040569:	cmp    eax,0xffffffff
1004056c:	jne    0x10040574
1004056e:	xor    eax,eax
10040570:	mov    DWORD PTR [esp+0x40],eax
10040574:	mov    ecx,eax
10040576:	sar    ecx,0x8
10040579:	mov    BYTE PTR [esi],cl
1004057b:	mov    BYTE PTR [esi+0x1],al
1004057e:	add    esi,0x2
10040581:	mov    DWORD PTR [esp+0x14],esi
10040585:	jmp    0x1004078b
1004058a:	cmp    DWORD PTR [esp+0x48],0x1
1004058f:	mov    ecx,DWORD PTR [esp+0x14]
10040593:	movzx  edi,BYTE PTR [ecx-0x1]
10040597:	mov    DWORD PTR [esp+0x1c],edi
1004059b:	jle    0x100405b1
1004059d:	mov    ecx,DWORD PTR [esp+0x18]
100405a1:	mov    ecx,DWORD PTR [ecx+0x48]
100405a4:	or     ecx,edi
100405a6:	or     ecx,DWORD PTR [esp+0x84]
100405ad:	mov    DWORD PTR [esp+0x4c],ecx
100405b1:	test   edx,edx
100405b3:	jne    0x100405eb
100405b5:	cmp    DWORD PTR [esp+0x40],edx
100405b9:	jge    0x100405eb
100405bb:	mov    edx,DWORD PTR [esp+0x34]
100405bf:	mov    ecx,DWORD PTR [esp+0x1c]
100405c3:	push   edx
100405c4:	add    esi,0x1
100405c7:	push   esi
100405c8:	push   ecx
100405c9:	movzx  edx,al
100405cc:	push   edx
100405cd:	mov    esi,DWORD PTR [esp+0x28]
100405d1:	call   0x1003eb00
100405d6:	add    esp,0x10
100405d9:	test   eax,eax
100405db:	je     0x100405e7
100405dd:	mov    DWORD PTR [esp+0x3c],0x1
100405e5:	xor    ebx,ebx
100405e7:	mov    esi,DWORD PTR [esp+0x10]
100405eb:	mov    al,BYTE PTR [ebp+0x0]
100405ee:	cmp    al,0x10
100405f0:	je     0x100405ff
100405f2:	cmp    al,0xf
100405f4:	je     0x100405ff
100405f6:	or     eax,0xffffffff
100405f9:	mov    DWORD PTR [esp+0x24],eax
100405fd:	jmp    0x1004060b
100405ff:	movzx  ecx,BYTE PTR [ebp+0x2]
10040603:	movzx  eax,BYTE PTR [ebp+0x1]
10040607:	mov    DWORD PTR [esp+0x24],ecx
1004060b:	mov    edi,DWORD PTR [esp+0x14]
1004060f:	mov    DWORD PTR [esp+0x28],eax
10040613:	mov    eax,DWORD PTR [esp+0x40]
10040617:	test   eax,eax
10040619:	mov    DWORD PTR [esp+0x14],ebp
1004061d:	je     0x10040893
10040623:	cmp    eax,0x1
10040626:	je     0x10040630
10040628:	mov    ecx,DWORD PTR [esp+0x18]
1004062c:	or     DWORD PTR [ecx+0x44],0x1
10040630:	mov    ecx,DWORD PTR [esp+0x54]
10040634:	add    ebx,ecx
10040636:	cmp    DWORD PTR [esp+0x48],0x0
1004063b:	jne    0x1004068a
1004063d:	cmp    eax,0xffffffff
10040640:	jne    0x10040654
10040642:	add    bl,0x1f
10040645:	mov    BYTE PTR [ebp+0x0],bl
10040648:	add    ebp,0x1
1004064b:	mov    DWORD PTR [esp+0x14],ebp
1004064f:	jmp    0x1004077a
10040654:	cmp    eax,0x1
10040657:	jne    0x1004066b
10040659:	add    bl,0x23
1004065c:	mov    BYTE PTR [ebp+0x0],bl
1004065f:	add    ebp,0x1
10040662:	mov    DWORD PTR [esp+0x14],ebp
10040666:	jmp    0x1004077a
1004066b:	add    bl,0x25
1004066e:	lea    ecx,[ebp+0x1]
10040671:	mov    edx,eax
10040673:	sar    edx,0x8
10040676:	mov    BYTE PTR [ebp+0x0],bl
10040679:	mov    BYTE PTR [ecx],dl
1004067b:	mov    BYTE PTR [ecx+0x1],al
1004067e:	add    ecx,0x2
10040681:	mov    DWORD PTR [esp+0x14],ecx
10040685:	jmp    0x1004077a
1004068a:	cmp    DWORD PTR [esp+0x48],0x1
1004068f:	jne    0x100406d6
10040691:	cmp    eax,0xffffffff
10040694:	jne    0x100406a8
10040696:	add    bl,0x21
10040699:	mov    BYTE PTR [ebp+0x0],bl
1004069c:	add    ebp,0x1
1004069f:	mov    DWORD PTR [esp+0x14],ebp
100406a3:	jmp    0x1004077a
100406a8:	cmp    eax,0x1
100406ab:	mov    DWORD PTR [esp+0x14],edi
100406af:	je     0x10040893
100406b5:	lea    edx,[eax-0x1]
100406b8:	add    bl,0x25
100406bb:	lea    ecx,[edi+0x1]
100406be:	sar    edx,0x8
100406c1:	sub    al,0x1
100406c3:	mov    BYTE PTR [edi],bl
100406c5:	mov    BYTE PTR [ecx],dl
100406c7:	mov    BYTE PTR [ecx+0x1],al
100406ca:	add    ecx,0x2
100406cd:	mov    DWORD PTR [esp+0x14],ecx
100406d1:	jmp    0x1004077a
100406d6:	add    cl,0x27
100406d9:	mov    BYTE PTR [ebp+0x0],cl
100406dc:	mov    ecx,DWORD PTR [esp+0x48]
100406e0:	lea    esi,[ebp+0x1]
100406e3:	mov    edx,ecx
100406e5:	sar    edx,0x8
100406e8:	mov    BYTE PTR [esi],dl
100406ea:	mov    BYTE PTR [esi+0x1],cl
100406ed:	add    esi,0x2
100406f0:	test   eax,eax
100406f2:	mov    DWORD PTR [esp+0x14],esi
100406f6:	jge    0x10040721
100406f8:	mov    al,BYTE PTR [esp+0x1c]
100406fc:	mov    BYTE PTR [esi],al
100406fe:	mov    eax,DWORD PTR [esp+0x28]
10040702:	add    esi,0x1
10040705:	test   eax,eax
10040707:	jl     0x10040717
10040709:	mov    cl,BYTE PTR [esp+0x24]
1004070d:	mov    BYTE PTR [esi],al
1004070f:	add    esi,0x1
10040712:	mov    BYTE PTR [esi],cl
10040714:	add    esi,0x1
10040717:	add    bl,0x1f
1004071a:	mov    BYTE PTR [esi],bl
1004071c:	add    esi,0x1
1004071f:	jmp    0x10040776
10040721:	cmp    eax,ecx
10040723:	je     0x1004077a
10040725:	mov    esi,DWORD PTR [esp+0x14]
10040729:	mov    dl,BYTE PTR [esp+0x1c]
1004072d:	mov    BYTE PTR [esi],dl
1004072f:	add    esi,0x1
10040732:	cmp    DWORD PTR [esp+0x28],0x0
10040737:	jl     0x1004074d
10040739:	movzx  edx,BYTE PTR [esp+0x28]
1004073e:	mov    BYTE PTR [esi],dl
10040740:	movzx  edx,BYTE PTR [esp+0x24]
10040745:	add    esi,0x1
10040748:	mov    BYTE PTR [esi],dl
1004074a:	add    esi,0x1
1004074d:	sub    eax,ecx
1004074f:	cmp    eax,0x1
10040752:	mov    DWORD PTR [esp+0x40],eax
10040756:	jne    0x10040761
10040758:	add    bl,0x23
1004075b:	mov    BYTE PTR [esi],bl
1004075d:	add    esi,eax
1004075f:	jmp    0x10040776
10040761:	add    bl,0x25
10040764:	mov    BYTE PTR [esi],bl
10040766:	add    esi,0x1
10040769:	mov    ecx,eax
1004076b:	sar    ecx,0x8
1004076e:	mov    BYTE PTR [esi],cl
10040770:	mov    BYTE PTR [esi+0x1],al
10040773:	add    esi,0x2
10040776:	mov    DWORD PTR [esp+0x14],esi
1004077a:	mov    dl,BYTE PTR [esp+0x1c]
1004077e:	mov    eax,DWORD PTR [esp+0x14]
10040782:	mov    BYTE PTR [eax],dl
10040784:	add    eax,0x1
10040787:	mov    DWORD PTR [esp+0x14],eax
1004078b:	mov    ecx,DWORD PTR [esp+0x44]
1004078f:	mov    esi,DWORD PTR [esp+0x10]
10040793:	cmp    DWORD PTR [esp+0x3c],0x0
10040798:	je     0x10040893
1004079e:	mov    al,BYTE PTR [ecx]
100407a0:	cmp    al,0x27
100407a2:	je     0x100407ac
100407a4:	cmp    al,0x41
100407a6:	je     0x100407b0
100407a8:	cmp    al,0x34
100407aa:	jne    0x100407d8
100407ac:	cmp    al,0x41
100407ae:	jne    0x100407c4
100407b0:	mov    dl,BYTE PTR [ecx+0x3]
100407b3:	cmp    dl,0x10
100407b6:	je     0x100407bd
100407b8:	cmp    dl,0xf
100407bb:	jne    0x100407c4
100407bd:	mov    edx,0x2
100407c2:	jmp    0x100407c6
100407c4:	xor    edx,edx
100407c6:	movzx  eax,al
100407c9:	movzx  eax,BYTE PTR [eax+0x1006e438]
100407d0:	add    eax,edx
100407d2:	add    ecx,eax
100407d4:	mov    DWORD PTR [esp+0x44],ecx
100407d8:	mov    ebx,DWORD PTR [esp+0x14]
100407dc:	sub    ebx,ecx
100407de:	test   ebx,ebx
100407e0:	jle    0x10040893
100407e6:	movzx  eax,BYTE PTR [ecx]
100407e9:	add    eax,0xffffffe1
100407ec:	cmp    eax,0x20
100407ef:	ja     0x1004084a
100407f1:	movzx  edx,BYTE PTR [eax+0x10041dbc]
100407f8:	jmp    DWORD PTR [edx*4+0x10041d88]
100407ff:	mov    BYTE PTR [ecx],0x28
10040802:	jmp    0x1004088f
10040807:	mov    BYTE PTR [ecx],0x29
1004080a:	jmp    0x1004088f
1004080f:	mov    BYTE PTR [ecx],0x2a
10040812:	jmp    0x1004088f
10040817:	mov    BYTE PTR [ecx],0x2b
1004081a:	jmp    0x1004088f
1004081f:	mov    BYTE PTR [ecx],0x42
10040822:	jmp    0x1004088f
10040827:	mov    BYTE PTR [ecx],0x43
1004082a:	jmp    0x1004088f
1004082c:	mov    BYTE PTR [ecx],0x44
1004082f:	jmp    0x1004088f
10040831:	mov    BYTE PTR [ecx],0x45
10040834:	jmp    0x1004088f
10040836:	mov    BYTE PTR [ecx],0x35
10040839:	jmp    0x1004088f
1004083b:	mov    BYTE PTR [ecx],0x36
1004083e:	jmp    0x1004088f
10040840:	mov    BYTE PTR [ecx],0x37
10040843:	jmp    0x1004088f
10040845:	mov    BYTE PTR [ecx],0x38
10040848:	jmp    0x1004088f
1004084a:	push   ebx
1004084b:	push   ecx
1004084c:	add    ecx,0x3
1004084f:	push   ecx
10040850:	call   0x100457b0
10040855:	mov    ecx,DWORD PTR [esp+0x50]
10040859:	mov    eax,DWORD PTR [esp+0x20]
1004085d:	mov    BYTE PTR [ecx],0x5d
10040860:	mov    BYTE PTR [eax+0x3],0x55
10040864:	add    ebx,0x3
10040867:	add    eax,0x3
1004086a:	add    eax,0x1
1004086d:	mov    ecx,ebx
1004086f:	sar    ecx,0x8
10040872:	mov    BYTE PTR [eax],cl
10040874:	mov    BYTE PTR [eax+0x1],bl
10040877:	mov    edx,DWORD PTR [esp+0x50]
1004087b:	add    esp,0xc
1004087e:	add    eax,0x2
10040881:	mov    BYTE PTR [edx+0x1],cl
10040884:	mov    DWORD PTR [esp+0x14],eax
10040888:	mov    eax,DWORD PTR [esp+0x44]
1004088c:	mov    BYTE PTR [eax+0x2],bl
1004088f:	mov    esi,DWORD PTR [esp+0x10]
10040893:	mov    eax,DWORD PTR [esp+0x18]
10040897:	mov    ecx,DWORD PTR [esp+0x8c]
1004089e:	or     DWORD PTR [eax+0x48],ecx
100408a1:	mov    DWORD PTR [esp+0x2c],0x0
100408a9:	jmp    0x100419f7
100408ae:	mov    edi,DWORD PTR [esp+0x18]
100408b2:	mov    eax,DWORD PTR [edi+0x20]
100408b5:	mov    edx,DWORD PTR [esp+0x34]
100408b9:	mov    ebx,0x1
100408be:	add    esi,ebx
100408c0:	xor    ebp,ebp
100408c2:	mov    DWORD PTR [esp+0x64],eax
100408c6:	mov    DWORD PTR [esp+0x10],esi
100408ca:	mov    al,BYTE PTR [esi]
100408cc:	cmp    al,0x2a
100408ce:	mov    DWORD PTR [esp+0x60],edx
100408d2:	mov    DWORD PTR [esp+0x28],ebp
100408d6:	mov    DWORD PTR [esp+0x24],0x5f
100408de:	mov    DWORD PTR [esp+0x58],ebp
100408e2:	jne    0x100409c0
100408e8:	movzx  ebp,BYTE PTR [esi+0x1]
100408ec:	mov    ecx,DWORD PTR [edi+0xc]
100408ef:	test   BYTE PTR [ecx+ebp*1],0x2
100408f3:	je     0x100409be
100408f9:	add    esi,0x1
100408fc:	xor    edi,edi
100408fe:	mov    ebx,0x1006e980
10040903:	mov    ebp,esi
10040905:	mov    DWORD PTR [esp+0x2c],edi
10040909:	lea    esp,[esp+0x0]
10040910:	add    esi,0x1
10040913:	mov    DWORD PTR [esp+0x10],esi
10040917:	movzx  edx,BYTE PTR [esi]
1004091a:	test   BYTE PTR [edx+ecx*1],0x2
1004091e:	jne    0x10040910
10040920:	mov    al,BYTE PTR [esi]
10040922:	cmp    al,0x3a
10040924:	je     0x10041b35
1004092a:	cmp    al,0x29
1004092c:	jne    0x10041b44
10040932:	sub    esi,ebp
10040934:	cmp    esi,DWORD PTR [edi*8+0x1006e9a8]
1004093b:	jne    0x1004094c
1004093d:	push   esi
1004093e:	push   ebx
1004093f:	push   ebp
10040940:	call   0x1004f1f6
10040945:	add    esp,0xc
10040948:	test   eax,eax
1004094a:	je     0x10040991
1004094c:	mov    eax,DWORD PTR [edi*8+0x1006e9a8]
10040953:	add    edi,0x1
10040956:	cmp    edi,0x7
10040959:	lea    ebx,[ebx+eax*1+0x1]
1004095d:	jl     0x10040934
1004095f:	mov    eax,DWORD PTR [esp+0x20]
10040963:	mov    DWORD PTR [eax],0x3c
10040969:	mov    esi,DWORD PTR [esp+0x10]
1004096d:	mov    edx,DWORD PTR [esp+0x9c]
10040974:	mov    DWORD PTR [edx],esi
10040976:	xor    eax,eax
10040978:	mov    ecx,DWORD PTR [esp+0xfc]
1004097f:	pop    edi
10040980:	pop    esi
10040981:	pop    ebp
10040982:	pop    ebx
10040983:	xor    ecx,esp
10040985:	call   0x10042f87
1004098a:	add    esp,0xf0
10040990:	ret    
10040991:	mov    ecx,DWORD PTR [esp+0x14]
10040995:	mov    al,BYTE PTR [edi*8+0x1006e9ac]
1004099c:	mov    BYTE PTR [ecx],al
1004099e:	add    ecx,0x1
100409a1:	cmp    al,0x6e
100409a3:	mov    DWORD PTR [esp+0x14],ecx
100409a7:	jne    0x100409b4
100409a9:	mov    ecx,DWORD PTR [esp+0x18]
100409ad:	mov    DWORD PTR [ecx+0x4c],0x1
100409b4:	cmp    edi,0x7
100409b7:	jge    0x1004095f
100409b9:	jmp    0x100419f3
100409be:	xor    ebp,ebp
100409c0:	cmp    al,0x3f
100409c2:	jne    0x100410b0
100409c8:	add    esi,ebx
100409ca:	mov    DWORD PTR [esp+0x10],esi
100409ce:	mov    al,BYTE PTR [esi]
100409d0:	movzx  ecx,al
100409d3:	add    ecx,0xffffffdf
100409d6:	cmp    ecx,0x5b
100409d9:	ja     0x1004130b
100409df:	movzx  edx,BYTE PTR [ecx+0x10041e1c]
100409e6:	jmp    DWORD PTR [edx*4+0x10041de0]
100409ed:	add    esi,ebx
100409ef:	mov    DWORD PTR [esp+0x10],esi
100409f3:	mov    al,BYTE PTR [esi]
100409f5:	test   al,al
100409f7:	je     0x10040a10
100409f9:	lea    esp,[esp+0x0]
10040a00:	cmp    al,0x29
10040a02:	je     0x10040a1f
10040a04:	add    esi,ebx
10040a06:	mov    DWORD PTR [esp+0x10],esi
10040a0a:	mov    al,BYTE PTR [esi]
10040a0c:	test   al,al
10040a0e:	jne    0x10040a00
10040a10:	mov    ecx,DWORD PTR [esp+0x20]
10040a14:	mov    DWORD PTR [ecx],0x12
10040a1a:	jmp    0x1004096d
10040a1f:	cmp    BYTE PTR [esi],0x0
10040a22:	je     0x10040a10
10040a24:	jmp    0x100419f7
10040a29:	mov    DWORD PTR [esp+0x58],ebx
10040a2d:	add    esi,ebx
10040a2f:	jmp    0x10041443
10040a34:	cmp    BYTE PTR [esi+0x1],0x3f
10040a38:	mov    DWORD PTR [esp+0x24],0x60
10040a40:	jne    0x10040a5d
10040a42:	mov    al,BYTE PTR [esi+0x2]
10040a45:	cmp    al,0x3d
10040a47:	je     0x1004144f
10040a4d:	cmp    al,0x21
10040a4f:	je     0x1004144f
10040a55:	cmp    al,0x3c
10040a57:	je     0x1004144f
10040a5d:	mov    edx,DWORD PTR [esp+0x14]
10040a61:	mov    BYTE PTR [edx+0x3],0x64
10040a65:	mov    esi,DWORD PTR [esp+0x10]
10040a69:	mov    al,BYTE PTR [esi+0x1]
10040a6c:	or     ebp,0xffffffff
10040a6f:	cmp    al,0x52
10040a71:	mov    DWORD PTR [esp+0x28],0x3
10040a79:	mov    ebx,ebp
10040a7b:	jne    0x10040a98
10040a7d:	cmp    BYTE PTR [esi+0x2],0x26
10040a81:	lea    ecx,[esi+0x2]
10040a84:	jne    0x10040a98
10040a86:	mov    DWORD PTR [esp+0x10],ecx
10040a8a:	mov    BYTE PTR [edx+0x3],0x65
10040a8e:	mov    esi,DWORD PTR [esp+0x10]
10040a92:	mov    DWORD PTR [esp+0x54],ebp
10040a96:	jmp    0x10040adc
10040a98:	cmp    al,0x3c
10040a9a:	jne    0x10040aad
10040a9c:	add    esi,0x1
10040a9f:	mov    DWORD PTR [esp+0x54],0x3e
10040aa7:	mov    DWORD PTR [esp+0x10],esi
10040aab:	jmp    0x10040adc
10040aad:	cmp    al,0x27
10040aaf:	jne    0x10040ac2
10040ab1:	add    esi,0x1
10040ab4:	mov    DWORD PTR [esp+0x54],0x27
10040abc:	mov    DWORD PTR [esp+0x10],esi
10040ac0:	jmp    0x10040adc
10040ac2:	cmp    al,0x2d
10040ac4:	mov    DWORD PTR [esp+0x54],0x0
10040acc:	je     0x10040ad2
10040ace:	cmp    al,0x2b
10040ad0:	jne    0x10040adc
10040ad2:	add    esi,0x1
10040ad5:	mov    DWORD PTR [esp+0x10],esi
10040ad9:	movzx  ebx,BYTE PTR [esi]
10040adc:	movzx  eax,BYTE PTR [esi+0x1]
10040ae0:	mov    edx,DWORD PTR [edi+0xc]
10040ae3:	add    esi,0x1
10040ae6:	test   BYTE PTR [eax+edx*1],0x10
10040aea:	je     0x10041b53
10040af0:	mov    DWORD PTR [esp+0x10],esi
10040af4:	movzx  eax,BYTE PTR [esi]
10040af7:	xor    ecx,ecx
10040af9:	test   BYTE PTR [eax+edx*1],0x10
10040afd:	mov    edi,esi
10040aff:	mov    DWORD PTR [esp+0x1c],ecx
10040b03:	mov    DWORD PTR [esp+0x2c],edi
10040b07:	je     0x10040b42
10040b09:	mov    edx,DWORD PTR [esp+0x18]
10040b0d:	mov    edx,DWORD PTR [edx+0xc]
10040b10:	test   ecx,ecx
10040b12:	jl     0x10040b32
10040b14:	test   BYTE PTR [eax+0x1006f428],0x4
10040b1b:	je     0x10040b2a
10040b1d:	lea    ecx,[ecx+ecx*4]
10040b20:	lea    eax,[eax+ecx*2-0x30]
10040b24:	mov    DWORD PTR [esp+0x1c],eax
10040b28:	jmp    0x10040b2e
10040b2a:	mov    DWORD PTR [esp+0x1c],ebp
10040b2e:	mov    ecx,DWORD PTR [esp+0x1c]
10040b32:	add    esi,0x1
10040b35:	mov    DWORD PTR [esp+0x10],esi
10040b39:	movzx  eax,BYTE PTR [esi]
10040b3c:	test   BYTE PTR [eax+edx*1],0x10
10040b40:	jne    0x10040b10
10040b42:	mov    eax,DWORD PTR [esp+0x54]
10040b46:	mov    ebp,esi
10040b48:	sub    ebp,edi
10040b4a:	test   eax,eax
10040b4c:	jle    0x10040b60
10040b4e:	movzx  edx,BYTE PTR [esi]
10040b51:	add    esi,0x1
10040b54:	cmp    edx,eax
10040b56:	mov    DWORD PTR [esp+0x10],esi
10040b5a:	jne    0x10041b62
10040b60:	mov    al,BYTE PTR [esi]
10040b62:	add    esi,0x1
10040b65:	cmp    al,0x29
10040b67:	mov    DWORD PTR [esp+0x10],esi
10040b6b:	jne    0x10041b62
10040b71:	cmp    DWORD PTR [esp+0x38],0x0
10040b76:	jne    0x1004144f
10040b7c:	test   ebx,ebx
10040b7e:	jle    0x10040bc9
10040b80:	test   ecx,ecx
10040b82:	jle    0x10041b74
10040b88:	cmp    ebx,0x2d
10040b8b:	mov    eax,DWORD PTR [esp+0x18]
10040b8f:	jne    0x10040ba1
10040b91:	mov    edx,DWORD PTR [eax+0x30]
10040b94:	sub    edx,ecx
10040b96:	add    edx,0x1
10040b99:	mov    DWORD PTR [esp+0x1c],edx
10040b9d:	mov    ecx,edx
10040b9f:	jmp    0x10040ba4
10040ba1:	add    ecx,DWORD PTR [eax+0x30]
10040ba4:	test   ecx,ecx
10040ba6:	jle    0x10041b83
10040bac:	cmp    ecx,DWORD PTR [eax+0x34]
10040baf:	jg     0x10041b83
10040bb5:	mov    eax,DWORD PTR [esp+0x14]
10040bb9:	mov    edx,ecx
10040bbb:	sar    edx,0x8
10040bbe:	mov    BYTE PTR [eax+0x4],dl
10040bc1:	mov    BYTE PTR [eax+0x5],cl
10040bc4:	jmp    0x1004144f
10040bc9:	mov    ebx,DWORD PTR [esp+0x18]
10040bcd:	cmp    DWORD PTR [ebx+0x28],0x0
10040bd1:	mov    edi,DWORD PTR [ebx+0x24]
10040bd4:	mov    DWORD PTR [esp+0x3c],0x0
10040bdc:	jle    0x10040c0b
10040bde:	mov    esi,DWORD PTR [esp+0x3c]
10040be2:	mov    ecx,DWORD PTR [esp+0x2c]
10040be6:	push   ebp
10040be7:	lea    eax,[edi+0x2]
10040bea:	push   eax
10040beb:	push   ecx
10040bec:	call   0x1004f1f6
10040bf1:	add    esp,0xc
10040bf4:	test   eax,eax
10040bf6:	je     0x10040c07
10040bf8:	add    edi,DWORD PTR [ebx+0x2c]
10040bfb:	add    esi,0x1
10040bfe:	cmp    esi,DWORD PTR [ebx+0x28]
10040c01:	mov    DWORD PTR [esp+0x3c],esi
10040c05:	jl     0x10040be2
10040c07:	mov    esi,DWORD PTR [esp+0x10]
10040c0b:	mov    edx,DWORD PTR [esp+0x3c]
10040c0f:	cmp    edx,DWORD PTR [ebx+0x28]
10040c12:	jge    0x10040c2e
10040c14:	movzx  ecx,BYTE PTR [edi+0x1]
10040c18:	mov    ch,BYTE PTR [edi]
10040c1a:	mov    eax,DWORD PTR [esp+0x14]
10040c1e:	mov    BYTE PTR [eax+0x5],cl
10040c21:	mov    edx,ecx
10040c23:	sar    edx,0x8
10040c26:	mov    BYTE PTR [eax+0x4],dl
10040c29:	jmp    0x1004144f
10040c2e:	mov    eax,DWORD PTR [esp+0x34]
10040c32:	shr    eax,0x3
10040c35:	and    eax,0x1
10040c38:	push   eax
10040c39:	mov    edi,ebx
10040c3b:	mov    ebx,DWORD PTR [esp+0x30]
10040c3f:	push   ebp
10040c40:	push   edi
10040c41:	mov    eax,esi
10040c43:	call   0x1003e1d0
10040c48:	add    esp,0xc
10040c4b:	test   eax,eax
10040c4d:	jle    0x10040c63
10040c4f:	mov    ecx,DWORD PTR [esp+0x14]
10040c53:	mov    edx,eax
10040c55:	sar    edx,0x8
10040c58:	mov    BYTE PTR [ecx+0x4],dl
10040c5b:	mov    BYTE PTR [ecx+0x5],al
10040c5e:	jmp    0x1004144f
10040c63:	cmp    DWORD PTR [esp+0x54],0x0
10040c68:	jne    0x10041b92
10040c6e:	cmp    BYTE PTR [ebx],0x52
10040c71:	jne    0x10040cc0
10040c73:	mov    eax,0x1
10040c78:	xor    ecx,ecx
10040c7a:	cmp    ebp,eax
10040c7c:	jle    0x10040ca3
10040c7e:	mov    edi,edi
10040c80:	movzx  edx,BYTE PTR [eax+ebx*1]
10040c84:	test   BYTE PTR [edx+0x1006f428],0x4
10040c8b:	je     0x10041ba1
10040c91:	add    eax,0x1
10040c94:	cmp    eax,ebp
10040c96:	lea    ecx,[ecx+ecx*4]
10040c99:	lea    ecx,[edx+ecx*2-0x30]
10040c9d:	jl     0x10040c80
10040c9f:	test   ecx,ecx
10040ca1:	jne    0x10040ca8
10040ca3:	mov    ecx,0xffff
10040ca8:	mov    eax,DWORD PTR [esp+0x14]
10040cac:	mov    edx,ecx
10040cae:	sar    edx,0x8
10040cb1:	mov    BYTE PTR [eax+0x3],0x65
10040cb5:	mov    BYTE PTR [eax+0x4],dl
10040cb8:	mov    BYTE PTR [eax+0x5],cl
10040cbb:	jmp    0x1004144f
10040cc0:	cmp    ebp,0x6
10040cc3:	jne    0x10040ced
10040cc5:	push   ebp
10040cc6:	push   0x1007423c
10040ccb:	push   ebx
10040ccc:	call   0x1004f1f6
10040cd1:	add    esp,0xc
10040cd4:	test   eax,eax
10040cd6:	jne    0x10040ced
10040cd8:	mov    eax,DWORD PTR [esp+0x14]
10040cdc:	mov    BYTE PTR [eax+0x3],0x66
10040ce0:	mov    DWORD PTR [esp+0x28],0x1
10040ce8:	jmp    0x1004144f
10040ced:	mov    eax,DWORD PTR [esp+0x1c]
10040cf1:	test   eax,eax
10040cf3:	jle    0x10041bb0
10040cf9:	cmp    eax,DWORD PTR [edi+0x34]
10040cfc:	jg     0x10041bb0
10040d02:	mov    ecx,DWORD PTR [esp+0x14]
10040d06:	mov    edx,eax
10040d08:	sar    edx,0x8
10040d0b:	mov    BYTE PTR [ecx+0x4],dl
10040d0e:	mov    BYTE PTR [ecx+0x5],al
10040d11:	jmp    0x1004144f
10040d16:	mov    DWORD PTR [esp+0x24],0x58
10040d1e:	add    esi,ebx
10040d20:	jmp    0x1004144b
10040d25:	add    esi,ebx
10040d27:	mov    DWORD PTR [esp+0x10],esi
10040d2b:	cmp    BYTE PTR [esi],0x29
10040d2e:	jne    0x10040d46
10040d30:	mov    eax,DWORD PTR [esp+0x14]
10040d34:	mov    BYTE PTR [eax],0x6d
10040d37:	add    eax,ebx
10040d39:	mov    DWORD PTR [esp+0x14],eax
10040d3d:	mov    DWORD PTR [esp+0x2c],ebp
10040d41:	jmp    0x100419f3
10040d46:	mov    DWORD PTR [esp+0x24],0x59
10040d4e:	jmp    0x1004144f
10040d53:	mov    cl,BYTE PTR [esi+0x1]
10040d56:	cmp    cl,0x21
10040d59:	je     0x10040e15
10040d5f:	cmp    cl,0x3d
10040d62:	je     0x10040e05
10040d68:	mov    edx,DWORD PTR [edi+0xc]
10040d6b:	movzx  ecx,cl
10040d6e:	test   BYTE PTR [ecx+edx*1],0x10
10040d72:	je     0x10041bc5
10040d78:	mov    ebp,DWORD PTR [edi+0xc]
10040d7b:	sub    al,0x3c
10040d7d:	neg    al
10040d7f:	sbb    eax,eax
10040d81:	add    esi,ebx
10040d83:	mov    DWORD PTR [esp+0x10],esi
10040d87:	movzx  ecx,BYTE PTR [esi]
10040d8a:	and    eax,0xffffffe9
10040d8d:	add    eax,0x3e
10040d90:	test   BYTE PTR [ecx+ebp*1],0x10
10040d94:	mov    edx,esi
10040d96:	mov    DWORD PTR [esp+0x2c],edx
10040d9a:	je     0x10040daf
10040d9c:	mov    ecx,ebp
10040d9e:	mov    edi,edi
10040da0:	add    esi,ebx
10040da2:	mov    DWORD PTR [esp+0x10],esi
10040da6:	movzx  edi,BYTE PTR [esi]
10040da9:	test   BYTE PTR [edi+ecx*1],0x10
10040dad:	jne    0x10040da0
10040daf:	mov    edi,esi
10040db1:	sub    edi,edx
10040db3:	cmp    DWORD PTR [esp+0x38],0x0
10040db8:	mov    DWORD PTR [esp+0x28],edi
10040dbc:	je     0x10040f09
10040dc2:	movzx  edx,BYTE PTR [esi]
10040dc5:	cmp    edx,eax
10040dc7:	jne    0x10041bf4
10040dcd:	mov    ecx,DWORD PTR [esp+0x18]
10040dd1:	cmp    DWORD PTR [ecx+0x28],0x2710
10040dd8:	jge    0x10041c03
10040dde:	lea    eax,[edi+0x3]
10040de1:	cmp    eax,DWORD PTR [ecx+0x2c]
10040de4:	jle    0x1004105d
10040dea:	cmp    edi,0x20
10040ded:	mov    DWORD PTR [ecx+0x2c],eax
10040df0:	jle    0x1004105d
10040df6:	mov    eax,DWORD PTR [esp+0x20]
10040dfa:	mov    DWORD PTR [eax],0x30
10040e00:	jmp    0x1004096d
10040e05:	mov    DWORD PTR [esp+0x24],0x5a
10040e0d:	add    esi,0x2
10040e10:	jmp    0x1004144b
10040e15:	mov    DWORD PTR [esp+0x24],0x5b
10040e1d:	add    esi,0x2
10040e20:	jmp    0x1004144b
10040e25:	mov    DWORD PTR [esp+0x24],0x5d
10040e2d:	add    esi,ebx
10040e2f:	jmp    0x1004144b
10040e34:	mov    edi,DWORD PTR [esp+0x14]
10040e38:	mov    BYTE PTR [edi],0x53
10040e3b:	mov    esi,DWORD PTR [esp+0x10]
10040e3f:	add    esi,ebx
10040e41:	mov    DWORD PTR [esp+0x10],esi
10040e45:	movzx  ecx,BYTE PTR [esi]
10040e48:	mov    DWORD PTR [esp+0x74],edi
10040e4c:	mov    edx,0x4
10040e51:	add    edi,ebx
10040e53:	xor    eax,eax
10040e55:	test   BYTE PTR [ecx+0x1006f428],dl
10040e5b:	mov    DWORD PTR [esp+0x94],ebx
10040e62:	je     0x10040e7c
10040e64:	add    esi,ebx
10040e66:	lea    eax,[eax+eax*4]
10040e69:	lea    eax,[ecx+eax*2-0x30]
10040e6d:	mov    DWORD PTR [esp+0x10],esi
10040e71:	movzx  ecx,BYTE PTR [esi]
10040e74:	test   BYTE PTR [ecx+0x1006f428],dl
10040e7a:	jne    0x10040e64
10040e7c:	cmp    BYTE PTR [esi],0x29
10040e7f:	jne    0x10041bd6
10040e85:	cmp    eax,0xff
10040e8a:	jg     0x10041be5
10040e90:	mov    BYTE PTR [edi],al
10040e92:	mov    ecx,DWORD PTR [esp+0x10]
10040e96:	mov    eax,DWORD PTR [esp+0x18]
10040e9a:	sub    ecx,DWORD PTR [eax+0x18]
10040e9d:	add    edi,ebx
10040e9f:	add    ecx,ebx
10040ea1:	sar    ecx,0x8
10040ea4:	mov    BYTE PTR [edi],cl
10040ea6:	mov    cl,BYTE PTR [esp+0x10]
10040eaa:	sub    cl,BYTE PTR [eax+0x18]
10040ead:	mov    BYTE PTR [edi+0x2],0x0
10040eb1:	add    cl,bl
10040eb3:	mov    BYTE PTR [edi+0x1],cl
10040eb6:	mov    BYTE PTR [edi+0x3],0x0
10040eba:	add    edi,edx
10040ebc:	mov    DWORD PTR [esp+0x14],edi
10040ec0:	mov    DWORD PTR [esp+0x2c],0x0
10040ec8:	jmp    0x100419f3
10040ecd:	add    esi,ebx
10040ecf:	mov    DWORD PTR [esp+0x10],esi
10040ed3:	mov    al,BYTE PTR [esi]
10040ed5:	cmp    al,0x3d
10040ed7:	je     0x10040ef4
10040ed9:	cmp    al,0x3e
10040edb:	je     0x10040ef4
10040edd:	cmp    al,0x3c
10040edf:	je     0x10040d78
10040ee5:	mov    eax,DWORD PTR [esp+0x20]
10040ee9:	mov    DWORD PTR [eax],0x29
10040eef:	jmp    0x1004096d
10040ef4:	xor    edx,edx
10040ef6:	cmp    al,0x3e
10040ef8:	sete   dl
10040efb:	mov    ebp,0x29
10040f00:	mov    DWORD PTR [esp+0x28],edx
10040f04:	jmp    0x100416d5
10040f09:	mov    eax,DWORD PTR [esp+0x18]
10040f0d:	mov    ebx,DWORD PTR [eax+0x24]
10040f10:	mov    eax,DWORD PTR [eax+0x28]
10040f13:	test   eax,eax
10040f15:	mov    DWORD PTR [esp+0x3c],0x0
10040f1d:	mov    DWORD PTR [esp+0x8c],eax
10040f24:	jle    0x10041027
10040f2a:	lea    ebx,[ebx+0x0]
10040f30:	cmp    edi,0x4
10040f33:	mov    edx,DWORD PTR [esp+0x2c]
10040f37:	mov    eax,edi
10040f39:	lea    ecx,[ebx+0x2]
10040f3c:	jb     0x10040f54
10040f3e:	mov    edi,edi
10040f40:	mov    ebp,DWORD PTR [edx]
10040f42:	cmp    ebp,DWORD PTR [ecx]
10040f44:	jne    0x10040f5c
10040f46:	sub    eax,0x4
10040f49:	add    ecx,0x4
10040f4c:	add    edx,0x4
10040f4f:	cmp    eax,0x4
10040f52:	jae    0x10040f40
10040f54:	test   eax,eax
10040f56:	je     0x10040fc1
10040f5c:	movzx  edi,BYTE PTR [edx]
10040f5f:	movzx  ebp,BYTE PTR [ecx]
10040f62:	sub    edi,ebp
10040f64:	jne    0x10040fab
10040f66:	sub    eax,0x1
10040f69:	add    ecx,0x1
10040f6c:	add    edx,0x1
10040f6f:	test   eax,eax
10040f71:	je     0x10040fbd
10040f73:	movzx  edi,BYTE PTR [edx]
10040f76:	movzx  ebp,BYTE PTR [ecx]
10040f79:	sub    edi,ebp
10040f7b:	jne    0x10040fab
10040f7d:	sub    eax,0x1
10040f80:	add    ecx,0x1
10040f83:	add    edx,0x1
10040f86:	test   eax,eax
10040f88:	je     0x10040fbd
10040f8a:	movzx  edi,BYTE PTR [edx]
10040f8d:	movzx  ebp,BYTE PTR [ecx]
10040f90:	sub    edi,ebp
10040f92:	jne    0x10040fab
10040f94:	sub    eax,0x1
10040f97:	add    ecx,0x1
10040f9a:	add    edx,0x1
10040f9d:	test   eax,eax
10040f9f:	je     0x10040fbd
10040fa1:	movzx  edi,BYTE PTR [edx]
10040fa4:	movzx  eax,BYTE PTR [ecx]
10040fa7:	sub    edi,eax
10040fa9:	je     0x10040fbd
10040fab:	test   edi,edi
10040fad:	mov    edi,DWORD PTR [esp+0x28]
10040fb1:	mov    eax,0x1
10040fb6:	jg     0x10040fc3
10040fb8:	or     eax,0xffffffff
10040fbb:	jmp    0x10040fc3
10040fbd:	mov    edi,DWORD PTR [esp+0x28]
10040fc1:	xor    eax,eax
10040fc3:	test   eax,eax
10040fc5:	jne    0x10040fe6
10040fc7:	cmp    BYTE PTR [ebx+edi*1+0x2],al
10040fcb:	jne    0x10041005
10040fcd:	test   DWORD PTR [esp+0x34],0x80000
10040fd5:	jne    0x10040fe8
10040fd7:	mov    ecx,DWORD PTR [esp+0x20]
10040fdb:	mov    DWORD PTR [ecx],0x2b
10040fe1:	jmp    0x1004096d
10040fe6:	jl     0x10041005
10040fe8:	mov    eax,DWORD PTR [esp+0x3c]
10040fec:	mov    ecx,DWORD PTR [esp+0x18]
10040ff0:	add    ebx,DWORD PTR [ecx+0x2c]
10040ff3:	add    eax,0x1
10040ff6:	cmp    eax,DWORD PTR [ecx+0x28]
10040ff9:	mov    DWORD PTR [esp+0x3c],eax
10040ffd:	jl     0x10040f30
10041003:	jmp    0x10041027
10041005:	mov    ecx,DWORD PTR [esp+0x18]
10041009:	mov    eax,DWORD PTR [ecx+0x2c]
1004100c:	mov    ecx,DWORD PTR [esp+0x8c]
10041013:	sub    ecx,DWORD PTR [esp+0x3c]
10041017:	imul   ecx,eax
1004101a:	push   ecx
1004101b:	add    eax,ebx
1004101d:	push   ebx
1004101e:	push   eax
1004101f:	call   0x100457b0
10041024:	add    esp,0xc
10041027:	mov    eax,DWORD PTR [esp+0x18]
1004102b:	mov    edx,DWORD PTR [eax+0x30]
1004102e:	mov    ecx,DWORD PTR [esp+0x2c]
10041032:	add    edx,0x1
10041035:	sar    edx,0x8
10041038:	mov    BYTE PTR [ebx],dl
1004103a:	mov    al,BYTE PTR [eax+0x30]
1004103d:	push   edi
1004103e:	push   ecx
1004103f:	lea    edx,[ebx+0x2]
10041042:	add    al,0x1
10041044:	push   edx
10041045:	mov    BYTE PTR [ebx+0x1],al
10041048:	call   0x10045270
1004104d:	mov    ecx,DWORD PTR [esp+0x24]
10041051:	mov    BYTE PTR [ebx+edi*1+0x2],0x0
10041056:	mov    esi,DWORD PTR [esp+0x1c]
1004105a:	add    esp,0xc
1004105d:	mov    edi,DWORD PTR [esp+0x18]
10041061:	add    esi,0x1
10041064:	add    DWORD PTR [ecx+0x28],0x1
10041068:	mov    DWORD PTR [esp+0x10],esi
1004106c:	add    DWORD PTR [edi+0x30],0x1
10041070:	mov    ecx,DWORD PTR [edi+0x30]
10041073:	mov    eax,DWORD PTR [esp+0x14]
10041077:	sar    ecx,0x8
1004107a:	mov    BYTE PTR [eax+0x3],cl
1004107d:	mov    dl,BYTE PTR [edi+0x30]
10041080:	mov    BYTE PTR [eax+0x4],dl
10041083:	mov    DWORD PTR [esp+0x28],0x2
1004108b:	jmp    0x1004144f
10041090:	mov    ebp,0x29
10041095:	mov    DWORD PTR [esp+0x28],ebx
10041099:	jmp    0x100416d5
1004109e:	add    esi,ebx
100410a0:	mov    DWORD PTR [esp+0x10],esi
100410a4:	mov    ebp,0x29
100410a9:	mov    ebx,edi
100410ab:	jmp    0x1004123b
100410b0:	test   edx,0x1000
100410b6:	je     0x1004106c
100410b8:	mov    DWORD PTR [esp+0x24],0x5e
100410c0:	jmp    0x1004144f
100410c5:	mov    ebx,DWORD PTR [esp+0x20]
100410c9:	mov    DWORD PTR [esp+0x7c],esi
100410cd:	mov    esi,DWORD PTR [esp+0x18]
100410d1:	mov    eax,DWORD PTR [esi+0x30]
100410d4:	xor    edi,edi
100410d6:	push   edi
100410d7:	push   eax
100410d8:	mov    eax,DWORD PTR [esp+0x3c]
100410dc:	lea    ecx,[esp+0x18]
100410e0:	push   ebx
100410e1:	push   ecx
100410e2:	call   0x1003dc60
100410e7:	add    esp,0x10
100410ea:	cmp    DWORD PTR [ebx],edi
100410ec:	jne    0x10040969
100410f2:	cmp    eax,edi
100410f4:	jge    0x1003f3ce
100410fa:	mov    ecx,eax
100410fc:	neg    ecx
100410fe:	cmp    ecx,0x1a
10041101:	jne    0x10041128
10041103:	mov    esi,DWORD PTR [esp+0x10]
10041107:	cmp    BYTE PTR [esi+0x1],0x5c
1004110b:	jne    0x1004111b
1004110d:	cmp    BYTE PTR [esi+0x2],0x45
10041111:	jne    0x1004111b
10041113:	add    esi,0x2
10041116:	jmp    0x100419f7
1004111b:	mov    DWORD PTR [esp+0x50],0x1
10041123:	jmp    0x100419f7
10041128:	cmp    ecx,0x19
1004112b:	je     0x100419f3
10041131:	mov    edx,DWORD PTR [esp+0x30]
10041135:	cmp    edx,0xfffffffe
10041138:	jne    0x1004114b
1004113a:	cmp    ecx,0x5
1004113d:	jle    0x1004114b
1004113f:	cmp    ecx,0x17
10041142:	jge    0x1004114b
10041144:	or     edx,0xffffffff
10041147:	mov    DWORD PTR [esp+0x30],edx
1004114b:	cmp    ecx,0x1b
1004114e:	mov    DWORD PTR [esp+0x5c],edx
10041152:	mov    edx,DWORD PTR [esp+0x4c]
10041156:	mov    DWORD PTR [esp+0x68],edx
1004115a:	jne    0x10041688
10041160:	mov    eax,DWORD PTR [esi+0x20]
10041163:	mov    esi,DWORD PTR [esp+0x10]
10041167:	add    esi,0x1
1004116a:	mov    DWORD PTR [esp+0x10],esi
1004116e:	mov    cl,BYTE PTR [esi]
10041170:	sub    cl,0x3c
10041173:	neg    cl
10041175:	lea    edx,[esi+0x1]
10041178:	mov    DWORD PTR [esp+0x64],eax
1004117c:	mov    al,BYTE PTR [edx]
1004117e:	mov    DWORD PTR [esp+0x28],edi
10041182:	mov    DWORD PTR [esp+0x58],edi
10041186:	sbb    ecx,ecx
10041188:	and    ecx,0xffffffe9
1004118b:	add    ecx,0x3e
1004118e:	cmp    al,0x2b
10041190:	mov    ebp,ecx
10041192:	je     0x100411f5
10041194:	cmp    al,0x2d
10041196:	je     0x100411f5
10041198:	mov    ecx,edx
1004119a:	mov    al,BYTE PTR [ecx]
1004119c:	test   al,al
1004119e:	mov    edi,0x1
100411a3:	je     0x100411ca
100411a5:	movzx  eax,al
100411a8:	cmp    eax,ebp
100411aa:	je     0x100411ca
100411ac:	mov    ebx,DWORD PTR [esp+0x18]
100411b0:	mov    ebx,DWORD PTR [ebx+0xc]
100411b3:	mov    al,BYTE PTR [eax+ebx*1]
100411b6:	test   al,0x4
100411b8:	jne    0x100411bc
100411ba:	xor    edi,edi
100411bc:	test   al,0x10
100411be:	je     0x100411ca
100411c0:	mov    al,BYTE PTR [ecx+0x1]
100411c3:	add    ecx,0x1
100411c6:	test   al,al
100411c8:	jne    0x100411a5
100411ca:	movzx  eax,BYTE PTR [ecx]
100411cd:	cmp    eax,ebp
100411cf:	mov    ebx,DWORD PTR [esp+0x18]
100411d3:	je     0x100411e4
100411d5:	mov    ecx,DWORD PTR [esp+0x20]
100411d9:	mov    DWORD PTR [ecx],0x39
100411df:	jmp    0x100419f7
100411e4:	test   edi,edi
100411e6:	jne    0x10041235
100411e8:	mov    DWORD PTR [esp+0x28],0x1
100411f0:	jmp    0x100416d1
100411f5:	movzx  edi,BYTE PTR [esi+0x2]
100411f9:	lea    eax,[esi+0x2]
100411fc:	mov    cl,0x4
100411fe:	test   BYTE PTR [edi+0x1006f428],cl
10041204:	je     0x1004121f
10041206:	jmp    0x10041210
10041208:	lea    esp,[esp+0x0]
1004120f:	nop
10041210:	movzx  edi,BYTE PTR [eax+0x1]
10041214:	add    eax,0x1
10041217:	test   BYTE PTR [edi+0x1006f428],cl
1004121d:	jne    0x10041210
1004121f:	movzx  eax,BYTE PTR [eax]
10041222:	cmp    eax,ebp
10041224:	je     0x10041231
10041226:	mov    DWORD PTR [ebx],0x39
1004122c:	jmp    0x100419f7
10041231:	mov    ebx,DWORD PTR [esp+0x18]
10041235:	mov    esi,edx
10041237:	mov    DWORD PTR [esp+0x10],esi
1004123b:	mov    al,BYTE PTR [esi]
1004123d:	movzx  edx,al
10041240:	cmp    edx,0x2b
10041243:	jne    0x10041267
10041245:	add    esi,0x1
10041248:	mov    DWORD PTR [esp+0x10],esi
1004124c:	movzx  ecx,BYTE PTR [esi]
1004124f:	test   BYTE PTR [ecx+0x1006f428],0x4
10041256:	jne    0x10041284
10041258:	mov    edx,DWORD PTR [esp+0x20]
1004125c:	mov    DWORD PTR [edx],0x3f
10041262:	jmp    0x1004096d
10041267:	cmp    edx,0x2d
1004126a:	jne    0x10041284
1004126c:	movzx  ecx,BYTE PTR [esi+0x1]
10041270:	test   BYTE PTR [ecx+0x1006f428],0x4
10041277:	je     0x1004130d
1004127d:	add    esi,0x1
10041280:	mov    DWORD PTR [esp+0x10],esi
10041284:	movzx  eax,BYTE PTR [esi]
10041287:	test   BYTE PTR [eax+0x1006f428],0x4
1004128e:	mov    DWORD PTR [esp+0x1c],0x0
10041296:	je     0x100412c2
10041298:	jmp    0x100412a0
1004129a:	lea    ebx,[ebx+0x0]
100412a0:	mov    ecx,DWORD PTR [esp+0x1c]
100412a4:	lea    ecx,[ecx+ecx*4]
100412a7:	add    esi,0x1
100412aa:	lea    eax,[eax+ecx*2-0x30]
100412ae:	mov    DWORD PTR [esp+0x1c],eax
100412b2:	mov    DWORD PTR [esp+0x10],esi
100412b6:	movzx  eax,BYTE PTR [esi]
100412b9:	test   BYTE PTR [eax+0x1006f428],0x4
100412c0:	jne    0x100412a0
100412c2:	movzx  ecx,BYTE PTR [esi]
100412c5:	cmp    ecx,ebp
100412c7:	jne    0x10041c54
100412cd:	cmp    edx,0x2d
100412d0:	jne    0x10041663
100412d6:	mov    eax,DWORD PTR [esp+0x1c]
100412da:	test   eax,eax
100412dc:	je     0x10041c63
100412e2:	mov    edx,DWORD PTR [esp+0x18]
100412e6:	mov    ecx,DWORD PTR [edx+0x30]
100412e9:	sub    ecx,eax
100412eb:	add    ecx,0x1
100412ee:	mov    eax,ecx
100412f0:	test   eax,eax
100412f2:	mov    DWORD PTR [esp+0x1c],eax
100412f6:	jg     0x100417c2
100412fc:	mov    eax,DWORD PTR [esp+0x20]
10041300:	mov    DWORD PTR [eax],0xf
10041306:	jmp    0x1004096d
1004130b:	mov    ebx,edi
1004130d:	xor    edi,edi
1004130f:	xor    edx,edx
10041311:	cmp    al,0x29
10041313:	mov    DWORD PTR [esp+0x3c],edi
10041317:	mov    DWORD PTR [esp+0x54],edx
1004131b:	lea    ecx,[esp+0x54]
1004131f:	je     0x1004138c
10041321:	mov    edx,0x10
10041326:	cmp    al,0x3a
10041328:	je     0x10041384
1004132a:	movzx  eax,al
1004132d:	add    esi,0x1
10041330:	sub    eax,0x2d
10041333:	cmp    eax,0x4b
10041336:	mov    DWORD PTR [esp+0x10],esi
1004133a:	ja     0x10041c12
10041340:	movzx  eax,BYTE PTR [eax+0x10041e9c]
10041347:	jmp    DWORD PTR [eax*4+0x10041e78]
1004134e:	lea    ecx,[esp+0x3c]
10041352:	jmp    0x1004137e
10041354:	or     DWORD PTR [ecx],0x80000
1004135a:	or     DWORD PTR [ebx+0x44],edx
1004135d:	jmp    0x1004137e
1004135f:	or     DWORD PTR [ecx],0x1
10041362:	jmp    0x1004137e
10041364:	or     DWORD PTR [ecx],0x2
10041367:	jmp    0x1004137e
10041369:	or     DWORD PTR [ecx],0x4
1004136c:	jmp    0x1004137e
1004136e:	or     DWORD PTR [ecx],0x8
10041371:	jmp    0x1004137e
10041373:	or     DWORD PTR [ecx],0x200
10041379:	jmp    0x1004137e
1004137b:	or     DWORD PTR [ecx],0x40
1004137e:	mov    al,BYTE PTR [esi]
10041380:	cmp    al,0x29
10041382:	jne    0x10041326
10041384:	mov    edx,DWORD PTR [esp+0x54]
10041388:	mov    edi,DWORD PTR [esp+0x3c]
1004138c:	mov    ebp,DWORD PTR [esp+0x34]
10041390:	or     edx,ebp
10041392:	not    edi
10041394:	and    edx,edi
10041396:	cmp    BYTE PTR [esi],0x29
10041399:	mov    eax,edx
1004139b:	mov    DWORD PTR [esp+0x60],eax
1004139f:	jne    0x10041440
100413a5:	mov    edx,DWORD PTR [ebx+0x14]
100413a8:	mov    ecx,DWORD PTR [esp+0x14]
100413ac:	add    edx,0x3
100413af:	cmp    ecx,edx
100413b1:	jne    0x100413dd
100413b3:	mov    edx,DWORD PTR [esp+0x38]
100413b7:	test   edx,edx
100413b9:	je     0x100413c0
100413bb:	cmp    DWORD PTR [edx],0x6
100413be:	jne    0x100413dd
100413c0:	mov    ecx,DWORD PTR [esp+0xa8]
100413c7:	mov    DWORD PTR [ebx+0x40],eax
100413ca:	mov    DWORD PTR [esp+0x34],eax
100413ce:	mov    DWORD PTR [ecx],eax
100413d0:	mov    DWORD PTR [esp+0x2c],0x0
100413d8:	jmp    0x100419f7
100413dd:	mov    edx,eax
100413df:	xor    edx,ebp
100413e1:	test   dl,0x7
100413e4:	je     0x100413fe
100413e6:	mov    BYTE PTR [ecx],0x19
100413e9:	mov    dl,al
100413eb:	add    ecx,0x1
100413ee:	and    dl,0x7
100413f1:	mov    BYTE PTR [ecx],dl
100413f3:	mov    esi,DWORD PTR [esp+0x10]
100413f7:	add    ecx,0x1
100413fa:	mov    DWORD PTR [esp+0x14],ecx
100413fe:	mov    ecx,eax
10041400:	shr    ecx,0x9
10041403:	and    ecx,0x1
10041406:	mov    DWORD PTR [esp+0xa4],ecx
1004140d:	xor    ecx,0x1
10041410:	mov    DWORD PTR [esp+0xa0],ecx
10041417:	mov    ecx,eax
10041419:	and    ecx,0x1
1004141c:	shl    ecx,0x8
1004141f:	mov    DWORD PTR [esp+0x84],ecx
10041426:	mov    ecx,DWORD PTR [esp+0xa8]
1004142d:	mov    DWORD PTR [esp+0x34],eax
10041431:	mov    DWORD PTR [ecx],eax
10041433:	mov    DWORD PTR [esp+0x2c],0x0
1004143b:	jmp    0x100419f7
10041440:	add    esi,0x1
10041443:	mov    DWORD PTR [esp+0x24],0x5e
1004144b:	mov    DWORD PTR [esp+0x10],esi
1004144f:	mov    eax,DWORD PTR [esp+0x24]
10041453:	mov    ebx,DWORD PTR [esp+0x14]
10041457:	mov    ecx,DWORD PTR [esp+0x18]
1004145b:	xor    edx,edx
1004145d:	cmp    eax,0x5d
10041460:	setl   dl
10041463:	mov    BYTE PTR [ebx],al
10041465:	mov    edi,DWORD PTR [ecx+0x48]
10041468:	mov    DWORD PTR [esp+0x44],ebx
1004146c:	mov    DWORD PTR [esp+0x6c],0x0
10041474:	sub    edx,0x1
10041477:	and    edx,ebx
10041479:	cmp    eax,0x5a
1004147c:	mov    DWORD PTR [esp+0x2c],edx
10041480:	je     0x1004148b
10041482:	cmp    eax,0x5b
10041485:	je     0x1004148b
10041487:	xor    eax,eax
10041489:	jmp    0x10041490
1004148b:	mov    eax,0x1
10041490:	mov    esi,DWORD PTR [esp+0x38]
10041494:	mov    ebp,DWORD PTR [esp+0x20]
10041498:	mov    edx,esi
1004149a:	neg    edx
1004149c:	sbb    edx,edx
1004149e:	lea    ecx,[esp+0x6c]
100414a2:	and    edx,ecx
100414a4:	mov    ecx,DWORD PTR [esp+0x98]
100414ab:	push   edx
100414ac:	mov    edx,DWORD PTR [esp+0x1c]
100414b0:	push   edx
100414b1:	push   ecx
100414b2:	lea    edx,[esp+0x84]
100414b9:	push   edx
100414ba:	mov    edx,DWORD PTR [esp+0x38]
100414be:	lea    ecx,[esp+0xa0]
100414c5:	push   ecx
100414c6:	mov    ecx,DWORD PTR [esp+0x6c]
100414ca:	push   edx
100414cb:	push   ecx
100414cc:	mov    ecx,DWORD PTR [esp+0x50]
100414d0:	push   eax
100414d1:	push   ebp
100414d2:	lea    edx,[esp+0x34]
100414d6:	push   edx
100414d7:	mov    edx,DWORD PTR [esp+0x88]
100414de:	lea    eax,[esp+0x6c]
100414e2:	push   eax
100414e3:	and    ecx,0x7
100414e6:	push   ecx
100414e7:	push   edx
100414e8:	call   0x10041ef0
100414ed:	add    esp,0x34
100414f0:	test   eax,eax
100414f2:	je     0x10040969
100414f8:	cmp    DWORD PTR [esp+0x24],0x60
100414fd:	jne    0x10041530
100414ff:	test   esi,esi
10041501:	jne    0x10041530
10041503:	mov    eax,ebx
10041505:	xor    ecx,ecx
10041507:	xor    edx,edx
10041509:	mov    dh,BYTE PTR [eax+0x1]
1004150c:	add    ecx,0x1
1004150f:	mov    dl,BYTE PTR [eax+0x2]
10041512:	add    eax,edx
10041514:	cmp    BYTE PTR [eax],0x55
10041517:	jne    0x10041507
10041519:	cmp    BYTE PTR [ebx+0x3],0x66
1004151d:	jne    0x1004159b
1004151f:	cmp    ecx,0x1
10041522:	jg     0x10041c24
10041528:	mov    DWORD PTR [esp+0x24],0x66
10041530:	mov    eax,DWORD PTR [esp+0x90]
10041537:	mov    ecx,DWORD PTR [esp+0x78]
1004153b:	mov    esi,DWORD PTR [esp+0x10]
1004153f:	cmp    BYTE PTR [esi],0x29
10041542:	jne    0x10041c3c
10041548:	mov    edx,DWORD PTR [esp+0x38]
1004154c:	test   edx,edx
1004154e:	je     0x100415bf
10041550:	mov    eax,DWORD PTR [edx]
10041552:	mov    ecx,DWORD PTR [esp+0x6c]
10041556:	mov    edx,0x7fffffeb
1004155b:	sub    edx,eax
1004155d:	lea    edi,[ecx-0x6]
10041560:	cmp    edx,edi
10041562:	jl     0x10041c48
10041568:	lea    eax,[eax+ecx*1-0x6]
1004156c:	mov    ecx,DWORD PTR [esp+0x38]
10041570:	mov    DWORD PTR [ecx],eax
10041572:	mov    BYTE PTR [ebx],0x5e
10041575:	add    ebx,0x1
10041578:	mov    BYTE PTR [ebx],0x0
1004157b:	mov    BYTE PTR [ebx+0x1],0x3
1004157f:	add    ebx,0x2
10041582:	mov    BYTE PTR [ebx],0x55
10041585:	add    ebx,0x1
10041588:	mov    BYTE PTR [ebx],0x0
1004158b:	mov    BYTE PTR [ebx+0x1],0x3
1004158f:	add    ebx,0x2
10041592:	mov    DWORD PTR [esp+0x14],ebx
10041596:	jmp    0x100419f3
1004159b:	cmp    ecx,0x2
1004159e:	jg     0x10041c30
100415a4:	cmp    ecx,0x1
100415a7:	jne    0x10041530
100415a9:	or     ecx,0xffffffff
100415ac:	or     eax,0xffffffff
100415af:	mov    DWORD PTR [esp+0x78],ecx
100415b3:	mov    DWORD PTR [esp+0x90],eax
100415ba:	jmp    0x1004153b
100415bf:	mov    edx,DWORD PTR [esp+0x44]
100415c3:	mov    DWORD PTR [esp+0x14],edx
100415c7:	mov    edx,DWORD PTR [esp+0x24]
100415cb:	cmp    edx,0x66
100415ce:	je     0x100419f7
100415d4:	cmp    edx,0x5d
100415d7:	mov    ebx,DWORD PTR [esp+0x4c]
100415db:	mov    ebp,DWORD PTR [esp+0x30]
100415df:	mov    DWORD PTR [esp+0x68],ebx
100415e3:	mov    DWORD PTR [esp+0x5c],ebp
100415e7:	mov    DWORD PTR [esp+0x88],0x0
100415f2:	jl     0x10041649
100415f4:	cmp    ebp,0xfffffffe
100415f7:	jne    0x10041628
100415f9:	test   eax,eax
100415fb:	jl     0x10041616
100415fd:	mov    DWORD PTR [esp+0x30],eax
10041601:	mov    DWORD PTR [esp+0x88],0x1
1004160c:	mov    DWORD PTR [esp+0x5c],0xffffffff
10041614:	jmp    0x10041638
10041616:	mov    DWORD PTR [esp+0x30],0xffffffff
1004161e:	mov    DWORD PTR [esp+0x5c],0xffffffff
10041626:	jmp    0x10041638
10041628:	test   eax,eax
1004162a:	jl     0x10041638
1004162c:	test   ecx,ecx
1004162e:	jge    0x10041640
10041630:	or     eax,edi
10041632:	mov    ecx,eax
10041634:	mov    DWORD PTR [esp+0x78],ecx
10041638:	test   ecx,ecx
1004163a:	jl     0x100419f7
10041640:	mov    DWORD PTR [esp+0x4c],ecx
10041644:	jmp    0x100419f7
10041649:	cmp    edx,0x58
1004164c:	jne    0x100419f7
10041652:	test   ecx,ecx
10041654:	jl     0x100419f7
1004165a:	mov    DWORD PTR [esp+0x4c],ecx
1004165e:	jmp    0x100419f7
10041663:	cmp    edx,0x2b
10041666:	jne    0x100417c2
1004166c:	mov    eax,DWORD PTR [esp+0x1c]
10041670:	test   eax,eax
10041672:	je     0x10041b74
10041678:	mov    edx,DWORD PTR [esp+0x18]
1004167c:	add    eax,DWORD PTR [edx+0x30]
1004167f:	mov    DWORD PTR [esp+0x1c],eax
10041683:	jmp    0x100417c2
10041688:	cmp    ecx,0x1c
1004168b:	mov    esi,DWORD PTR [esp+0x10]
1004168f:	jne    0x100418f5
10041695:	mov    dl,BYTE PTR [esi+0x1]
10041698:	cmp    dl,0x3c
1004169b:	je     0x100416ab
1004169d:	cmp    dl,0x27
100416a0:	je     0x100416ab
100416a2:	cmp    dl,0x7b
100416a5:	jne    0x100418f5
100416ab:	add    esi,0x1
100416ae:	mov    DWORD PTR [esp+0x10],esi
100416b2:	mov    al,BYTE PTR [esi]
100416b4:	cmp    al,0x3c
100416b6:	mov    DWORD PTR [esp+0x28],edi
100416ba:	jne    0x100416c3
100416bc:	mov    ebp,0x3e
100416c1:	jmp    0x100416d1
100416c3:	sub    al,0x27
100416c5:	neg    al
100416c7:	sbb    eax,eax
100416c9:	and    eax,0x56
100416cc:	add    eax,0x27
100416cf:	mov    ebp,eax
100416d1:	mov    edi,DWORD PTR [esp+0x18]
100416d5:	mov    edx,DWORD PTR [edi+0xc]
100416d8:	add    esi,0x1
100416db:	mov    DWORD PTR [esp+0x10],esi
100416df:	movzx  eax,BYTE PTR [esi]
100416e2:	test   BYTE PTR [eax+edx*1],0x10
100416e6:	mov    ecx,esi
100416e8:	mov    DWORD PTR [esp+0x2c],ecx
100416ec:	je     0x10041700
100416ee:	mov    eax,edx
100416f0:	add    esi,0x1
100416f3:	mov    DWORD PTR [esp+0x10],esi
100416f7:	movzx  edx,BYTE PTR [esi]
100416fa:	test   BYTE PTR [edx+eax*1],0x10
100416fe:	jne    0x100416f0
10041700:	mov    ebx,esi
10041702:	sub    ebx,ecx
10041704:	cmp    DWORD PTR [esp+0x38],0x0
10041709:	je     0x10041738
1004170b:	test   ebx,ebx
1004170d:	je     0x10041c72
10041713:	movzx  eax,BYTE PTR [esi]
10041716:	cmp    eax,ebp
10041718:	jne    0x10041c81
1004171e:	cmp    ebx,0x20
10041721:	jg     0x10041c90
10041727:	mov    edi,DWORD PTR [esp+0x18]
1004172b:	mov    DWORD PTR [esp+0x1c],0x0
10041733:	jmp    0x100417b3
10041738:	mov    eax,DWORD PTR [esp+0x18]
1004173c:	mov    edi,DWORD PTR [eax+0x24]
1004173f:	xor    ebp,ebp
10041741:	cmp    DWORD PTR [eax+0x28],ebp
10041744:	jle    0x10041773
10041746:	mov    esi,eax
10041748:	mov    edx,DWORD PTR [esp+0x2c]
1004174c:	push   ebx
1004174d:	lea    ecx,[edi+0x2]
10041750:	push   ecx
10041751:	push   edx
10041752:	call   0x1004f1f6
10041757:	add    esp,0xc
1004175a:	test   eax,eax
1004175c:	jne    0x10041764
1004175e:	cmp    BYTE PTR [edi+ebx*1+0x2],al
10041762:	je     0x1004176f
10041764:	add    edi,DWORD PTR [esi+0x2c]
10041767:	add    ebp,0x1
1004176a:	cmp    ebp,DWORD PTR [esi+0x28]
1004176d:	jl     0x10041748
1004176f:	mov    esi,DWORD PTR [esp+0x10]
10041773:	mov    eax,DWORD PTR [esp+0x18]
10041777:	cmp    ebp,DWORD PTR [eax+0x28]
1004177a:	jge    0x1004178a
1004177c:	movzx  ecx,BYTE PTR [edi+0x1]
10041780:	mov    ch,BYTE PTR [edi]
10041782:	mov    edi,eax
10041784:	mov    DWORD PTR [esp+0x1c],ecx
10041788:	jmp    0x100417b3
1004178a:	mov    edx,DWORD PTR [esp+0x34]
1004178e:	shr    edx,0x3
10041791:	and    edx,0x1
10041794:	push   edx
10041795:	mov    edi,eax
10041797:	push   ebx
10041798:	mov    ebx,DWORD PTR [esp+0x34]
1004179c:	push   edi
1004179d:	mov    eax,esi
1004179f:	call   0x1003e1d0
100417a4:	add    esp,0xc
100417a7:	test   eax,eax
100417a9:	mov    DWORD PTR [esp+0x1c],eax
100417ad:	jle    0x10041c9f
100417b3:	cmp    DWORD PTR [esp+0x28],0x0
100417b8:	mov    eax,DWORD PTR [esp+0x14]
100417bc:	je     0x1004190b
100417c2:	cmp    DWORD PTR [esp+0x38],0x0
100417c7:	mov    edi,DWORD PTR [esp+0x14]
100417cb:	mov    ebp,DWORD PTR [esp+0x18]
100417cf:	mov    ebx,DWORD PTR [ebp+0x14]
100417d2:	mov    DWORD PTR [esp+0x2c],edi
100417d6:	jne    0x10041852
100417dc:	cmp    DWORD PTR [esp+0x1c],0x0
100417e1:	mov    BYTE PTR [edi],0x0
100417e4:	je     0x100417f4
100417e6:	mov    esi,DWORD PTR [esp+0x1c]
100417ea:	mov    eax,DWORD PTR [ebp+0x14]
100417ed:	call   0x1003e6d0
100417f2:	mov    ebx,eax
100417f4:	test   ebx,ebx
100417f6:	jne    0x100418ae
100417fc:	mov    eax,DWORD PTR [esp+0x34]
10041800:	mov    ecx,DWORD PTR [esp+0x1c]
10041804:	shr    eax,0x3
10041807:	and    eax,0x1
1004180a:	push   eax
1004180b:	mov    eax,DWORD PTR [esp+0x14]
1004180f:	push   ecx
10041810:	push   ebp
10041811:	call   0x1003e1d0
10041816:	add    esp,0xc
10041819:	test   eax,eax
1004181b:	jl     0x10041b92
10041821:	mov    eax,DWORD PTR [ebp+0x14]
10041824:	mov    edx,DWORD PTR [esp+0x1c]
10041828:	mov    ecx,DWORD PTR [esp+0x14]
1004182c:	mov    edi,DWORD PTR [esp+0x14]
10041830:	lea    ebx,[eax+edx*1]
10041833:	mov    edx,ecx
10041835:	sub    edx,eax
10041837:	mov    eax,DWORD PTR [ebp+0x20]
1004183a:	add    edx,0x4
1004183d:	sar    edx,0x8
10041840:	mov    BYTE PTR [eax],dl
10041842:	sub    cl,BYTE PTR [ebp+0x14]
10041845:	mov    edx,DWORD PTR [ebp+0x20]
10041848:	add    cl,0x4
1004184b:	mov    BYTE PTR [edx+0x1],cl
1004184e:	add    DWORD PTR [ebp+0x20],0x2
10041852:	mov    BYTE PTR [edi],0x5d
10041855:	mov    BYTE PTR [edi+0x1],0x0
10041859:	add    edi,0x3
1004185c:	mov    al,0x6
1004185e:	mov    BYTE PTR [edi-0x1],al
10041861:	mov    BYTE PTR [edi],0x52
10041864:	mov    ecx,ebx
10041866:	sub    ecx,DWORD PTR [ebp+0x14]
10041869:	add    edi,0x3
1004186c:	sar    ecx,0x8
1004186f:	mov    BYTE PTR [edi-0x2],cl
10041872:	sub    bl,BYTE PTR [ebp+0x14]
10041875:	add    edi,0x3
10041878:	cmp    DWORD PTR [esp+0x30],0xfffffffe
1004187d:	mov    BYTE PTR [edi-0x4],bl
10041880:	mov    BYTE PTR [edi-0x3],0x55
10041884:	mov    BYTE PTR [edi-0x2],0x0
10041888:	mov    BYTE PTR [edi-0x1],al
1004188b:	mov    esi,DWORD PTR [esp+0x10]
1004188f:	mov    DWORD PTR [esp+0x14],edi
10041893:	mov    DWORD PTR [esp+0x6c],0x9
1004189b:	jne    0x100419f7
100418a1:	mov    DWORD PTR [esp+0x30],0xffffffff
100418a9:	jmp    0x100419f7
100418ae:	xor    eax,eax
100418b0:	mov    ah,BYTE PTR [ebx+0x1]
100418b3:	mov    al,BYTE PTR [ebx+0x2]
100418b6:	test   eax,eax
100418b8:	jne    0x10041852
100418ba:	mov    esi,DWORD PTR [esp+0x98]
100418c1:	test   esi,esi
100418c3:	je     0x100418e6
100418c5:	mov    eax,DWORD PTR [esi+0x4]
100418c8:	cmp    eax,ebx
100418ca:	jb     0x100418e6
100418cc:	push   0x0
100418ce:	push   edi
100418cf:	push   eax
100418d0:	call   0x1003e7e0
100418d5:	add    esp,0xc
100418d8:	test   eax,eax
100418da:	je     0x10041852
100418e0:	mov    esi,DWORD PTR [esi]
100418e2:	test   esi,esi
100418e4:	jne    0x100418c5
100418e6:	mov    ecx,DWORD PTR [esp+0x20]
100418ea:	mov    DWORD PTR [ecx],0x28
100418f0:	jmp    0x10040969
100418f5:	cmp    ecx,0x1d
100418f8:	jl     0x10041959
100418fa:	mov    edi,DWORD PTR [esp+0x18]
100418fe:	mov    ecx,0xffffffe3
10041903:	sub    ecx,eax
10041905:	mov    eax,DWORD PTR [esp+0x14]
10041909:	jmp    0x1004190f
1004190b:	mov    ecx,DWORD PTR [esp+0x1c]
1004190f:	cmp    DWORD PTR [esp+0x30],0xfffffffe
10041914:	jne    0x1004191e
10041916:	mov    DWORD PTR [esp+0x30],0xffffffff
1004191e:	mov    BYTE PTR [eax],0x51
10041921:	mov    DWORD PTR [esp+0x2c],eax
10041925:	add    eax,0x1
10041928:	mov    edx,ecx
1004192a:	sar    edx,0x8
1004192d:	mov    BYTE PTR [eax],dl
1004192f:	mov    BYTE PTR [eax+0x1],cl
10041932:	add    eax,0x2
10041935:	cmp    ecx,0x20
10041938:	mov    DWORD PTR [esp+0x14],eax
1004193c:	mov    eax,0x1
10041941:	jge    0x10041945
10041943:	shl    eax,cl
10041945:	or     DWORD PTR [edi+0x3c],eax
10041948:	cmp    ecx,DWORD PTR [edi+0x38]
1004194b:	jle    0x100419f3
10041951:	mov    DWORD PTR [edi+0x38],ecx
10041954:	jmp    0x100419f3
10041959:	cmp    ecx,0x16
1004195c:	je     0x10041cae
10041962:	cmp    ecx,0xf
10041965:	je     0x10041cae
1004196b:	cmp    ecx,0x10
1004196e:	je     0x10041cae
10041974:	cmp    ecx,0x5
10041977:	jle    0x10041993
10041979:	cmp    ecx,0x17
1004197c:	jge    0x10041993
1004197e:	mov    ecx,DWORD PTR [esp+0x14]
10041982:	neg    al
10041984:	mov    DWORD PTR [esp+0x2c],ecx
10041988:	mov    BYTE PTR [ecx],al
1004198a:	add    ecx,0x1
1004198d:	mov    DWORD PTR [esp+0x14],ecx
10041991:	jmp    0x100419f3
10041993:	mov    ecx,DWORD PTR [esp+0x14]
10041997:	neg    al
10041999:	mov    BYTE PTR [ecx],al
1004199b:	add    ecx,0x1
1004199e:	mov    DWORD PTR [esp+0x2c],edi
100419a2:	mov    DWORD PTR [esp+0x14],ecx
100419a6:	jmp    0x100419f3
100419a8:	mov    edx,DWORD PTR [esp+0x18]
100419ac:	mov    esi,DWORD PTR [esp+0x30]
100419b0:	cmp    esi,0xfffffffe
100419b3:	jne    0x100419d5
100419b5:	mov    ecx,DWORD PTR [esp+0x4c]
100419b9:	movzx  eax,al
100419bc:	or     eax,DWORD PTR [esp+0x84]
100419c3:	mov    DWORD PTR [esp+0x5c],0xffffffff
100419cb:	mov    DWORD PTR [esp+0x68],ecx
100419cf:	mov    DWORD PTR [esp+0x30],eax
100419d3:	jmp    0x100419f3
100419d5:	movzx  ecx,BYTE PTR [ecx-0x1]
100419d9:	or     ecx,DWORD PTR [edx+0x48]
100419dc:	mov    eax,DWORD PTR [esp+0x4c]
100419e0:	or     ecx,DWORD PTR [esp+0x84]
100419e7:	mov    DWORD PTR [esp+0x5c],esi
100419eb:	mov    DWORD PTR [esp+0x68],eax
100419ef:	mov    DWORD PTR [esp+0x4c],ecx
100419f3:	mov    esi,DWORD PTR [esp+0x10]
100419f7:	mov    edi,DWORD PTR [esp+0x74]
100419fb:	mov    ebx,DWORD PTR [esp+0xb8]
10041a02:	mov    ebp,DWORD PTR [esp+0x2c]
10041a06:	mov    edx,DWORD PTR [esp+0x14]
10041a0a:	mov    ecx,DWORD PTR [esp+0x80]
10041a11:	add    esi,0x1
10041a14:	jmp    0x1003f26a
10041a19:	mov    edx,DWORD PTR [esp+0x20]
10041a1d:	mov    DWORD PTR [edx],0x34
10041a23:	jmp    0x1004096d
10041a28:	mov    eax,DWORD PTR [esp+0x20]
10041a2c:	mov    DWORD PTR [eax],0x14
10041a32:	jmp    0x1004096d
10041a37:	mov    ecx,DWORD PTR [esp+0x20]
10041a3b:	mov    DWORD PTR [ecx],0x34
10041a41:	jmp    0x1004096d
10041a46:	mov    edx,DWORD PTR [esp+0x30]
10041a4a:	mov    eax,DWORD PTR [esp+0xb4]
10041a51:	mov    ecx,DWORD PTR [esp+0x4c]
10041a55:	mov    DWORD PTR [eax],edx
10041a57:	mov    edx,DWORD PTR [esp+0xac]
10041a5e:	mov    eax,DWORD PTR [esp+0xb0]
10041a65:	mov    DWORD PTR [edx],ecx
10041a67:	mov    ecx,DWORD PTR [esp+0x14]
10041a6b:	mov    edx,DWORD PTR [esp+0x9c]
10041a72:	mov    DWORD PTR [eax],ecx
10041a74:	mov    DWORD PTR [edx],esi
10041a76:	mov    edx,DWORD PTR [esp+0x38]
10041a7a:	test   edx,edx
10041a7c:	je     0x10041a9c
10041a7e:	mov    eax,DWORD PTR [edx]
10041a80:	mov    edi,DWORD PTR [esp+0x80]
10041a87:	mov    ebx,ecx
10041a89:	mov    ebp,0x7fffffeb
10041a8e:	sub    ebx,edi
10041a90:	sub    ebp,eax
10041a92:	cmp    ebp,ebx
10041a94:	jl     0x10041a28
10041a96:	sub    eax,edi
10041a98:	add    eax,ecx
10041a9a:	mov    DWORD PTR [edx],eax
10041a9c:	mov    eax,0x1
10041aa1:	jmp    0x10040978
10041aa6:	mov    dl,BYTE PTR [esi+0x1]
10041aa9:	mov    eax,DWORD PTR [esp+0x20]
10041aad:	sub    dl,0x3a
10041ab0:	neg    dl
10041ab2:	sbb    edx,edx
10041ab4:	and    edx,0x12
10041ab7:	add    edx,0xd
10041aba:	mov    DWORD PTR [eax],edx
10041abc:	jmp    0x1004096d
10041ac1:	mov    ecx,DWORD PTR [esp+0x20]
10041ac5:	mov    DWORD PTR [ecx],0x1f
10041acb:	jmp    0x1004096d
10041ad0:	mov    edx,DWORD PTR [esp+0x20]
10041ad4:	mov    DWORD PTR [edx],0x1e
10041ada:	jmp    0x10040969
10041adf:	mov    DWORD PTR [esi],0x7
10041ae5:	jmp    0x10040969
10041aea:	mov    eax,DWORD PTR [esp+0x20]
10041aee:	mov    DWORD PTR [eax],0x8
10041af4:	jmp    0x1004096d
10041af9:	mov    ecx,DWORD PTR [esp+0x20]
10041afd:	mov    DWORD PTR [ecx],0x6
10041b03:	jmp    0x1004096d
10041b08:	mov    edx,DWORD PTR [esp+0x20]
10041b0c:	mov    DWORD PTR [edx],0x9
10041b12:	jmp    0x1004096d
10041b17:	mov    ecx,DWORD PTR [esp+0x20]
10041b1b:	mov    DWORD PTR [ecx],0x37
10041b21:	jmp    0x1004096d
10041b26:	mov    edx,DWORD PTR [esp+0x20]
10041b2a:	mov    DWORD PTR [edx],0x14
10041b30:	jmp    0x1004096d
10041b35:	mov    ecx,DWORD PTR [esp+0x20]
10041b39:	mov    DWORD PTR [ecx],0x3b
10041b3f:	jmp    0x1004096d
10041b44:	mov    edx,DWORD PTR [esp+0x20]
10041b48:	mov    DWORD PTR [edx],0x3c
10041b4e:	jmp    0x1004096d
10041b53:	mov    edx,DWORD PTR [esp+0x20]
10041b57:	mov    DWORD PTR [edx],0x1c
10041b5d:	jmp    0x1004096d
10041b62:	mov    eax,DWORD PTR [esp+0x20]
10041b66:	sub    esi,0x1
10041b69:	mov    DWORD PTR [eax],0x1a
10041b6f:	jmp    0x1004096d
10041b74:	mov    ecx,DWORD PTR [esp+0x20]
10041b78:	mov    DWORD PTR [ecx],0x3a
10041b7e:	jmp    0x1004096d
10041b83:	mov    edx,DWORD PTR [esp+0x20]
10041b87:	mov    DWORD PTR [edx],0xf
10041b8d:	jmp    0x1004096d
10041b92:	mov    eax,DWORD PTR [esp+0x20]
10041b96:	mov    DWORD PTR [eax],0xf
10041b9c:	jmp    0x10040969
10041ba1:	mov    ecx,DWORD PTR [esp+0x20]
10041ba5:	mov    DWORD PTR [ecx],0xf
10041bab:	jmp    0x10040969
10041bb0:	mov    edx,DWORD PTR [esp+0x20]
10041bb4:	neg    eax
10041bb6:	sbb    eax,eax
10041bb8:	and    eax,0xffffffec
10041bbb:	add    eax,0x23
10041bbe:	mov    DWORD PTR [edx],eax
10041bc0:	jmp    0x10040969
10041bc5:	mov    eax,DWORD PTR [esp+0x20]
10041bc9:	add    esi,ebx
10041bcb:	mov    DWORD PTR [eax],0x18
10041bd1:	jmp    0x1004096d
10041bd6:	mov    ecx,DWORD PTR [esp+0x20]
10041bda:	mov    DWORD PTR [ecx],0x27
10041be0:	jmp    0x1004096d
10041be5:	mov    edx,DWORD PTR [esp+0x20]
10041be9:	mov    DWORD PTR [edx],0x26
10041bef:	jmp    0x1004096d
10041bf4:	mov    ecx,DWORD PTR [esp+0x20]
10041bf8:	mov    DWORD PTR [ecx],0x2a
10041bfe:	jmp    0x1004096d
10041c03:	mov    edx,DWORD PTR [esp+0x20]
10041c07:	mov    DWORD PTR [edx],0x31
10041c0d:	jmp    0x1004096d
10041c12:	mov    eax,DWORD PTR [esp+0x20]
10041c16:	mov    DWORD PTR [eax],0xc
10041c1c:	sub    esi,0x1
10041c1f:	jmp    0x1004096d
10041c24:	mov    DWORD PTR [ebp+0x0],0x36
10041c2b:	jmp    0x10040969
10041c30:	mov    DWORD PTR [ebp+0x0],0x1b
10041c37:	jmp    0x10040969
10041c3c:	mov    DWORD PTR [ebp+0x0],0xe
10041c43:	jmp    0x1004096d
10041c48:	mov    DWORD PTR [ebp+0x0],0x14
10041c4f:	jmp    0x1004096d
10041c54:	mov    ecx,DWORD PTR [esp+0x20]
10041c58:	mov    DWORD PTR [ecx],0x1d
10041c5e:	jmp    0x1004096d
10041c63:	mov    edx,DWORD PTR [esp+0x20]
10041c67:	mov    DWORD PTR [edx],0x3a
10041c6d:	jmp    0x1004096d
10041c72:	mov    edx,DWORD PTR [esp+0x20]
10041c76:	mov    DWORD PTR [edx],0x3e
10041c7c:	jmp    0x1004096d
10041c81:	mov    eax,DWORD PTR [esp+0x20]
10041c85:	mov    DWORD PTR [eax],0x2a
10041c8b:	jmp    0x1004096d
10041c90:	mov    ecx,DWORD PTR [esp+0x20]
10041c94:	mov    DWORD PTR [ecx],0x30
10041c9a:	jmp    0x1004096d
10041c9f:	mov    edx,DWORD PTR [esp+0x20]
10041ca3:	mov    DWORD PTR [edx],0xf
10041ca9:	jmp    0x10040969
10041cae:	mov    DWORD PTR [ebx],0x2d
10041cb4:	jmp    0x1004096d
10041cb9:	lea    ecx,[ecx+0x0]
10041cbc:	inc    esi
10041cbd:	sbb    al,BYTE PTR [eax+edx*1]
10041cc0:	in     eax,0xf5
10041cc2:	add    edx,DWORD PTR [eax]
10041cc4:	scas   al,BYTE PTR es:[edi]
10041cc5:	or     BYTE PTR [eax+edx*1],al
10041cc8:	arpl   di,di
10041cca:	add    edx,DWORD PTR [eax]
10041ccc:	ins    DWORD PTR es:[edi],dx
10041ccd:	inc    DWORD PTR [ebx]
10041ccf:	adc    BYTE PTR [eax],al
10041cd1:	test   BYTE PTR [ebx],0x10
10041cd4:	jl     0x10041cd5
10041cd6:	add    edx,DWORD PTR [eax]
10041cd8:	pop    edi
10041cd9:	test   BYTE PTR [ebx],0x10
10041cdc:	lds    edx,FWORD PTR [eax]
10041cde:	add    al,0x10
10041ce0:	aas    
10041ce1:	test   BYTE PTR [ebx],0x10
10041ce4:	mov    ah,0xf5
10041ce6:	add    edx,DWORD PTR [eax]
10041ce8:	sub    bh,bh
10041cea:	add    edx,DWORD PTR [eax]
10041cec:	int3   
10041ced:	repz add edx,DWORD PTR [eax]
10041cf0:	add    BYTE PTR [esp+ecx*1],cl
10041cf3:	or     al,0xc
10041cf5:	or     al,0xc
10041cf7:	or     al,0xc
10041cf9:	or     al,0xc
10041cfb:	or     al,0xc
10041cfd:	or     al,0xc
10041cff:	or     al,0xc
10041d01:	or     al,0xc
10041d03:	or     al,0xc
10041d05:	or     al,0xc
10041d07:	or     al,0xc
10041d09:	or     al,0xc
10041d0b:	or     al,0xc
10041d0d:	or     al,0xc
10041d0f:	or     al,0xc
10041d11:	or     al,0xc
10041d13:	or     al,0x1
10041d15:	or     al,0xc
10041d17:	or     al,0x2
10041d19:	add    BYTE PTR [ebx],al
10041d1b:	add    al,0xc
10041d1d:	or     al,0x5
10041d1f:	or     al,0xc
10041d21:	or     al,0xc
10041d23:	or     al,0xc
10041d25:	or     al,0xc
10041d27:	or     al,0xc
10041d29:	or     al,0xc
10041d2b:	or     al,0xc
10041d2d:	or     al,0xc
10041d2f:	push   es
10041d30:	or     al,0xc
10041d32:	or     al,0xc
10041d34:	or     al,0xc
10041d36:	or     al,0xc
10041d38:	or     al,0xc
10041d3a:	or     al,0xc
10041d3c:	or     al,0xc
10041d3e:	or     al,0xc
10041d40:	or     al,0xc
10041d42:	or     al,0xc
10041d44:	or     al,0xc
10041d46:	or     al,0xc
10041d48:	or     al,0xc
10041d4a:	or     al,0x7
10041d4c:	or     BYTE PTR [ecx],cl
10041d4e:	or     cl,BYTE PTR [esp+ecx*1]
10041d51:	or     al,0xc
10041d53:	or     al,0xc
10041d55:	or     al,0xc
10041d57:	or     al,0xc
10041d59:	or     al,0xc
10041d5b:	or     al,0xc
10041d5d:	or     al,0xc
10041d5f:	or     al,0xc
10041d61:	or     al,0xc
10041d63:	or     al,0xc
10041d65:	or     al,0xc
10041d67:	or     al,0xc
10041d69:	or     al,0xc
10041d6b:	or     eax,DWORD PTR [eax]
10041d6d:	lea    ecx,[ecx+0x0]
10041d70:	ins    DWORD PTR es:[edi],dx
10041d71:	cli    
10041d72:	add    edx,DWORD PTR [eax]
10041d74:	loopne 0x10041d6f
10041d76:	add    edx,DWORD PTR [eax]
10041d78:	and    ebx,edi
10041d7a:	add    edx,DWORD PTR [eax]
10041d7c:	in     eax,dx
10041d7d:	cli    
10041d7e:	add    edx,DWORD PTR [eax]
10041d80:	mov    ebx,0x9a1003fa
10041d85:	cli    
10041d86:	add    edx,DWORD PTR [eax]
10041d88:	inc    DWORD PTR [edi]
10041d8a:	add    al,0x10
10041d8c:	pop    es
10041d8d:	or     BYTE PTR [eax+edx*1],al
10041d90:	invd   
10041d92:	add    al,0x10
10041d94:	pop    ss
10041d95:	or     BYTE PTR [eax+edx*1],al
10041d98:	or     BYTE PTR ss:[eax+edx*1],al
10041d9c:	cmp    ecx,DWORD PTR [eax]
10041d9e:	add    al,0x10
10041da0:	inc    eax
10041da1:	or     BYTE PTR [eax+edx*1],al
10041da4:	inc    ebp
10041da5:	or     BYTE PTR [eax+edx*1],al
10041da8:	pop    ds
10041da9:	or     BYTE PTR [eax+edx*1],al
10041dac:	daa    
10041dad:	or     BYTE PTR [eax+edx*1],al
10041db0:	sub    al,0x8
10041db2:	add    al,0x10
10041db4:	xor    DWORD PTR [eax],ecx
10041db6:	add    al,0x10
10041db8:	dec    edx
10041db9:	or     BYTE PTR [eax+edx*1],al
10041dbc:	add    BYTE PTR [ecx+eax*1],cl
10041dbf:	or     al,0x2
10041dc1:	or     al,0x3
10041dc3:	or     al,0xc
10041dc5:	or     al,0xc
10041dc7:	or     al,0xc
10041dc9:	add    al,0xc
10041dcb:	add    eax,0x70c060c
10041dd0:	or     al,0xc
10041dd2:	or     al,0xc
10041dd4:	or     al,0xc
10041dd6:	or     BYTE PTR [ecx+ecx*1],cl
10041dd9:	or     al,0xa
10041ddb:	or     al,0xb
10041ddd:	lea    ecx,[ecx+0x0]
10041de0:	and    eax,0xed10040d
10041de5:	or     DWORD PTR [eax+edx*1],eax
10041de8:	nop
10041de9:	adc    BYTE PTR [eax+edx*1],al
10041dec:	js     0x10041dfb
10041dee:	add    al,0x10
10041df0:	xor    al,0xa
10041df2:	add    al,0x10
10041df4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
10041df5:	adc    BYTE PTR [eax+edx*1],al
10041df8:	sub    eax,0x5310040a
10041dfd:	or     eax,0xd161004
10041e02:	add    al,0x10
10041e04:	and    eax,0x3410040e
10041e09:	push   cs
10041e0a:	add    al,0x10
10041e0c:	int    0xe
10041e0e:	add    al,0x10
10041e10:	sahf   
10041e11:	adc    BYTE PTR [eax+edx*1],al
10041e14:	sub    DWORD PTR [edx],ecx
10041e16:	add    al,0x10
10041e18:	or     edx,DWORD PTR [ebx]
10041e1a:	add    al,0x10
10041e1c:	add    BYTE PTR [esi],cl
10041e1e:	add    DWORD PTR [esi],ecx
10041e20:	push   cs
10041e21:	add    al,BYTE PTR [ebx]
10041e23:	add    al,0xe
10041e25:	push   cs
10041e26:	add    eax,0xe0e050e
10041e2b:	add    eax,0x5050505
10041e30:	add    eax,0x5050505
10041e35:	push   es
10041e36:	push   cs
10041e37:	pop    es
10041e38:	or     BYTE PTR [ecx],cl
10041e3a:	push   cs
10041e3b:	push   cs
10041e3c:	push   cs
10041e3d:	push   cs
10041e3e:	or     cl,BYTE PTR [esi]
10041e40:	push   cs
10041e41:	push   cs
10041e42:	push   cs
10041e43:	push   cs
10041e44:	push   cs
10041e45:	push   cs
10041e46:	push   cs
10041e47:	push   cs
10041e48:	push   cs
10041e49:	push   cs
10041e4a:	push   cs
10041e4b:	or     ecx,DWORD PTR [esi]
10041e4d:	or     al,0xe
10041e4f:	push   cs
10041e50:	push   cs
10041e51:	push   cs
10041e52:	push   cs
10041e53:	push   cs
10041e54:	push   cs
10041e55:	push   cs
10041e56:	push   cs
10041e57:	push   cs
10041e58:	push   cs
10041e59:	push   cs
10041e5a:	push   cs
10041e5b:	push   cs
10041e5c:	push   cs
10041e5d:	push   cs
10041e5e:	push   cs
10041e5f:	push   cs
10041e60:	push   cs
10041e61:	push   cs
10041e62:	push   cs
10041e63:	push   cs
10041e64:	push   cs
10041e65:	push   cs
10041e66:	push   cs
10041e67:	push   cs
10041e68:	push   cs
10041e69:	push   cs
10041e6a:	push   cs
10041e6b:	push   cs
10041e6c:	push   cs
10041e6d:	push   cs
10041e6e:	push   cs
10041e6f:	push   cs
10041e70:	push   cs
10041e71:	push   cs
10041e72:	push   cs
10041e73:	push   cs
10041e74:	push   cs
10041e75:	push   cs
10041e76:	push   cs
10041e77:	or     eax,0x1004134e
10041e7c:	push   esp
10041e7d:	adc    eax,DWORD PTR [eax+edx*1]
10041e80:	jae    0x10041e95
10041e82:	add    al,0x10
10041e84:	jnp    0x10041e99
10041e86:	add    al,0x10
10041e88:	pop    edi
10041e89:	adc    eax,DWORD PTR [eax+edx*1]
10041e8c:	adc    eax,DWORD PTR fs:[eax+edx*1]
10041e90:	imul   edx,DWORD PTR [ebx],0x136e1004
10041e96:	add    al,0x10
10041e98:	adc    bl,BYTE PTR [esp+eax*1]
10041e9b:	adc    BYTE PTR [eax],al
10041e9d:	or     BYTE PTR [eax],cl
10041e9f:	or     BYTE PTR [eax],cl
10041ea1:	or     BYTE PTR [eax],cl
10041ea3:	or     BYTE PTR [eax],cl
10041ea5:	or     BYTE PTR [eax],cl
10041ea7:	or     BYTE PTR [eax],cl
10041ea9:	or     BYTE PTR [eax],cl
10041eab:	or     BYTE PTR [eax],cl
10041ead:	or     BYTE PTR [eax],cl
10041eaf:	or     BYTE PTR [eax],cl
10041eb1:	or     BYTE PTR [eax],cl
10041eb3:	or     BYTE PTR [eax],cl
10041eb5:	or     BYTE PTR [eax],cl
10041eb7:	or     BYTE PTR [eax],cl
10041eb9:	add    DWORD PTR [eax],ecx
10041ebb:	or     BYTE PTR [eax],cl
10041ebd:	or     BYTE PTR [eax],cl
10041ebf:	or     BYTE PTR [eax],cl
10041ec1:	or     BYTE PTR [eax],cl
10041ec3:	or     BYTE PTR [edx],al
10041ec5:	or     BYTE PTR [eax],cl
10041ec7:	add    ecx,DWORD PTR [eax]
10041ec9:	or     BYTE PTR [eax],cl
10041ecb:	or     BYTE PTR [eax],cl
10041ecd:	or     BYTE PTR [eax],cl
10041ecf:	or     BYTE PTR [eax],cl
10041ed1:	or     BYTE PTR [eax],cl
10041ed3:	or     BYTE PTR [eax],cl
10041ed5:	or     BYTE PTR [eax],cl
10041ed7:	or     BYTE PTR [eax+ecx*1],al
10041eda:	or     BYTE PTR [eax],cl
10041edc:	add    eax,0x8080808
10041ee1:	or     BYTE PTR [esi],al
10041ee3:	or     BYTE PTR [eax],cl
10041ee5:	or     BYTE PTR [eax],cl
10041ee7:	pop    es
10041ee8:	int3   
10041ee9:	int3   
10041eea:	int3   
10041eeb:	int3   
10041eec:	int3   
10041eed:	int3   
10041eee:	int3   
10041eef:	int3   
10041ef0:	push   ebp
10041ef1:	mov    ebp,esp
10041ef3:	and    esp,0xfffffff8
10041ef6:	sub    esp,0x3c
10041ef9:	mov    eax,DWORD PTR [ebp+0x14]
10041efc:	mov    ecx,DWORD PTR [eax]
10041efe:	mov    eax,DWORD PTR [ebp+0x30]
10041f01:	mov    edx,DWORD PTR [ebp+0x10]
10041f04:	mov    DWORD PTR [esp+0x34],eax
10041f08:	mov    eax,0xfffffffe
10041f0d:	push   ebx
10041f0e:	mov    ebx,DWORD PTR [edx]
10041f10:	mov    DWORD PTR [esp+0xc],eax
10041f14:	mov    DWORD PTR [esp+0x20],eax
10041f18:	mov    eax,DWORD PTR [ebp+0x24]
10041f1b:	push   esi
10041f1c:	mov    esi,DWORD PTR [ebp+0x38]
10041f1f:	mov    DWORD PTR [esp+0x18],ecx
10041f23:	lea    ecx,[eax+0x6]
10041f26:	mov    DWORD PTR [esp+0x40],ebx
10041f2a:	mov    DWORD PTR [esp+0xc],ecx
10041f2e:	mov    BYTE PTR [ebx+0x1],0x0
10041f32:	push   edi
10041f33:	mov    edi,DWORD PTR [ebp+0x34]
10041f36:	mov    BYTE PTR [ebx+0x2],0x0
10041f3a:	neg    esi
10041f3c:	mov    DWORD PTR [esp+0x24],ebx
10041f40:	mov    DWORD PTR [esp+0x3c],ebx
10041f44:	lea    ebx,[ebx+eax*1+0x3]
10041f48:	mov    eax,DWORD PTR [edi+0x30]
10041f4b:	sbb    esi,esi
10041f4d:	lea    edx,[esp+0x10]
10041f51:	mov    DWORD PTR [esp+0x34],0x0
10041f59:	mov    DWORD PTR [esp+0x2c],eax
10041f5d:	mov    DWORD PTR [esp+0x38],eax
10041f61:	and    esi,edx
10041f63:	cmp    DWORD PTR [ebp+0x20],0x0
10041f67:	mov    DWORD PTR [esp+0x18],ebx
10041f6b:	je     0x10041f74
10041f6d:	mov    eax,DWORD PTR [esp+0x38]
10041f71:	mov    DWORD PTR [edi+0x30],eax
10041f74:	mov    eax,DWORD PTR [ebp+0x8]
10041f77:	mov    ecx,eax
10041f79:	and    ecx,0x7
10041f7c:	cmp    ecx,DWORD PTR [ebp+0xc]
10041f7f:	je     0x10041f97
10041f81:	mov    BYTE PTR [ebx],0x19
10041f84:	add    ebx,0x1
10041f87:	and    al,0x7
10041f89:	mov    BYTE PTR [ebx],al
10041f8b:	add    ebx,0x1
10041f8e:	add    DWORD PTR [esp+0x10],0x2
10041f93:	mov    DWORD PTR [esp+0x18],ebx
10041f97:	cmp    DWORD PTR [ebp+0x1c],0x0
10041f9b:	je     0x10041fba
10041f9d:	mov    BYTE PTR [ebx],0x5c
10041fa0:	add    ebx,0x1
10041fa3:	mov    BYTE PTR [ebx],0x0
10041fa6:	mov    BYTE PTR [ebx+0x1],0x0
10041faa:	mov    DWORD PTR [esp+0x34],ebx
10041fae:	add    ebx,0x2
10041fb1:	add    DWORD PTR [esp+0x10],0x3
10041fb6:	mov    DWORD PTR [esp+0x18],ebx
10041fba:	push   esi
10041fbb:	push   edi
10041fbc:	lea    edx,[esp+0x48]
10041fc0:	push   edx
10041fc1:	lea    eax,[esp+0x2c]
10041fc5:	push   eax
10041fc6:	lea    ecx,[esp+0x40]
10041fca:	push   ecx
10041fcb:	mov    ecx,DWORD PTR [ebp+0x18]
10041fce:	lea    edx,[esp+0x30]
10041fd2:	push   edx
10041fd3:	lea    eax,[ebp+0x8]
10041fd6:	push   eax
10041fd7:	lea    edx,[esp+0x34]
10041fdb:	call   0x1003f160
10041fe0:	add    esp,0x1c
10041fe3:	test   eax,eax
10041fe5:	je     0x10042105
10041feb:	mov    eax,DWORD PTR [edi+0x30]
10041fee:	cmp    eax,DWORD PTR [esp+0x2c]
10041ff2:	jle    0x10041ff8
10041ff4:	mov    DWORD PTR [esp+0x2c],eax
10041ff8:	cmp    DWORD PTR [ebp+0x38],0x0
10041ffc:	mov    ebx,DWORD PTR [esp+0x18]
10042000:	mov    ecx,DWORD PTR [esp+0x24]
10042004:	jne    0x100420a4
1004200a:	cmp    BYTE PTR [ecx],0x54
1004200d:	mov    edx,DWORD PTR [esp+0x30]
10042011:	je     0x10042021
10042013:	mov    eax,DWORD PTR [esp+0x20]
10042017:	mov    DWORD PTR [esp+0x28],edx
1004201b:	mov    DWORD PTR [esp+0x14],eax
1004201f:	jmp    0x10042074
10042021:	mov    eax,DWORD PTR [esp+0x28]
10042025:	test   eax,eax
10042027:	jl     0x10042040
10042029:	cmp    eax,edx
1004202b:	je     0x10042054
1004202d:	cmp    DWORD PTR [esp+0x14],0x0
10042032:	jge    0x10042038
10042034:	mov    DWORD PTR [esp+0x14],eax
10042038:	mov    DWORD PTR [esp+0x28],0xffffffff
10042040:	test   edx,edx
10042042:	jl     0x10042054
10042044:	mov    eax,DWORD PTR [esp+0x20]
10042048:	test   eax,eax
1004204a:	jge    0x10042058
1004204c:	mov    eax,edx
1004204e:	mov    DWORD PTR [esp+0x20],eax
10042052:	jmp    0x10042058
10042054:	mov    eax,DWORD PTR [esp+0x20]
10042058:	mov    edx,eax
1004205a:	xor    edx,DWORD PTR [esp+0x14]
1004205e:	test   edx,0xfffffdff
10042064:	je     0x10042070
10042066:	mov    DWORD PTR [esp+0x14],0xffffffff
1004206e:	jmp    0x10042074
10042070:	or     DWORD PTR [esp+0x14],eax
10042074:	cmp    DWORD PTR [ebp+0x1c],0x0
10042078:	je     0x100420a4
1004207a:	mov    eax,DWORD PTR [ebp+0x8]
1004207d:	push   eax
1004207e:	push   ecx
1004207f:	mov    BYTE PTR [ebx],0x0
10042082:	call   0x1003e4c0
10042087:	add    esp,0x8
1004208a:	test   eax,eax
1004208c:	jl     0x10042117
10042092:	mov    edi,DWORD PTR [esp+0x34]
10042096:	mov    ecx,eax
10042098:	sar    ecx,0x8
1004209b:	mov    BYTE PTR [edi],cl
1004209d:	mov    ecx,DWORD PTR [esp+0x24]
100420a1:	mov    BYTE PTR [edi+0x1],al
100420a4:	mov    edi,DWORD PTR [esp+0x1c]
100420a8:	cmp    BYTE PTR [edi],0x7c
100420ab:	jne    0x1004213b
100420b1:	cmp    DWORD PTR [ebp+0x38],0x0
100420b5:	je     0x100420d7
100420b7:	mov    edx,DWORD PTR [ebp+0x10]
100420ba:	add    DWORD PTR [esp+0x10],0x3
100420bf:	mov    eax,DWORD PTR [edx]
100420c1:	mov    ecx,DWORD PTR [ebp+0x24]
100420c4:	add    edi,0x1
100420c7:	mov    DWORD PTR [esp+0x1c],edi
100420cb:	mov    edi,DWORD PTR [ebp+0x34]
100420ce:	lea    ebx,[eax+ecx*1+0x3]
100420d2:	jmp    0x10041f63
100420d7:	mov    edx,ebx
100420d9:	sub    edx,ecx
100420db:	mov    BYTE PTR [ebx],0x54
100420de:	mov    al,bl
100420e0:	sar    edx,0x8
100420e3:	mov    BYTE PTR [ebx+0x1],dl
100420e6:	sub    al,cl
100420e8:	mov    BYTE PTR [ebx+0x2],al
100420eb:	mov    DWORD PTR [esp+0x24],ebx
100420ef:	mov    DWORD PTR [esp+0x44],ebx
100420f3:	add    ebx,0x3
100420f6:	add    edi,0x1
100420f9:	mov    DWORD PTR [esp+0x1c],edi
100420fd:	mov    edi,DWORD PTR [ebp+0x34]
10042100:	jmp    0x10041f63
10042105:	mov    ecx,DWORD PTR [esp+0x1c]
10042109:	mov    edx,DWORD PTR [ebp+0x14]
1004210c:	mov    DWORD PTR [edx],ecx
1004210e:	xor    eax,eax
10042110:	pop    edi
10042111:	pop    esi
10042112:	pop    ebx
10042113:	mov    esp,ebp
10042115:	pop    ebp
10042116:	ret    
10042117:	mov    ecx,DWORD PTR [ebp+0x18]
1004211a:	mov    edx,DWORD PTR [esp+0x1c]
1004211e:	sub    eax,0xfffffffe
10042121:	neg    eax
10042123:	sbb    eax,eax
10042125:	and    eax,0xfffffff5
10042128:	add    eax,0x24
1004212b:	mov    DWORD PTR [ecx],eax
1004212d:	mov    eax,DWORD PTR [ebp+0x14]
10042130:	mov    DWORD PTR [eax],edx
10042132:	xor    eax,eax
10042134:	pop    edi
10042135:	pop    esi
10042136:	pop    ebx
10042137:	mov    esp,ebp
10042139:	pop    ebp
1004213a:	ret    
1004213b:	mov    esi,DWORD PTR [ebp+0x38]
1004213e:	test   esi,esi
10042140:	jne    0x10042166
10042142:	mov    eax,ebx
10042144:	sub    eax,ecx
10042146:	xor    edx,edx
10042148:	mov    dh,BYTE PTR [ecx+0x1]
1004214b:	mov    dl,BYTE PTR [ecx+0x2]
1004214e:	mov    BYTE PTR [ecx+0x2],al
10042151:	mov    esi,edx
10042153:	mov    edx,eax
10042155:	sar    edx,0x8
10042158:	mov    BYTE PTR [ecx+0x1],dl
1004215b:	sub    ecx,esi
1004215d:	test   esi,esi
1004215f:	mov    eax,esi
10042161:	jg     0x10042146
10042163:	mov    esi,DWORD PTR [ebp+0x38]
10042166:	mov    eax,DWORD PTR [esp+0x3c]
1004216a:	mov    ecx,ebx
1004216c:	sub    ecx,eax
1004216e:	mov    dl,bl
10042170:	sub    dl,al
10042172:	mov    eax,DWORD PTR [ebp+0x8]
10042175:	sar    ecx,0x8
10042178:	mov    BYTE PTR [ebx],0x55
1004217b:	mov    BYTE PTR [ebx+0x1],cl
1004217e:	mov    ecx,DWORD PTR [ebp+0xc]
10042181:	mov    BYTE PTR [ebx+0x2],dl
10042184:	and    eax,0x7
10042187:	add    ebx,0x3
1004218a:	cmp    eax,ecx
1004218c:	je     0x100421a7
1004218e:	cmp    BYTE PTR [edi],0x29
10042191:	jne    0x100421a7
10042193:	mov    BYTE PTR [ebx],0x19
10042196:	add    ebx,0x1
10042199:	mov    BYTE PTR [ebx],cl
1004219b:	mov    ecx,DWORD PTR [esp+0x10]
1004219f:	add    ebx,0x1
100421a2:	add    ecx,0x2
100421a5:	jmp    0x100421ab
100421a7:	mov    ecx,DWORD PTR [esp+0x10]
100421ab:	test   esi,esi
100421ad:	mov    eax,DWORD PTR [esp+0x2c]
100421b1:	mov    edx,DWORD PTR [ebp+0x34]
100421b4:	mov    DWORD PTR [edx+0x30],eax
100421b7:	mov    eax,DWORD PTR [ebp+0x10]
100421ba:	mov    edx,DWORD PTR [ebp+0x14]
100421bd:	mov    DWORD PTR [eax],ebx
100421bf:	mov    eax,DWORD PTR [ebp+0x28]
100421c2:	mov    DWORD PTR [edx],edi
100421c4:	mov    edx,DWORD PTR [esp+0x28]
100421c8:	mov    DWORD PTR [eax],edx
100421ca:	mov    eax,DWORD PTR [ebp+0x2c]
100421cd:	mov    edx,DWORD PTR [esp+0x14]
100421d1:	mov    DWORD PTR [eax],edx
100421d3:	je     0x100421f8
100421d5:	mov    eax,DWORD PTR [esi]
100421d7:	mov    edx,0x7fffffeb
100421dc:	sub    edx,eax
100421de:	cmp    edx,ecx
100421e0:	jge    0x100421f4
100421e2:	mov    eax,DWORD PTR [ebp+0x18]
100421e5:	mov    DWORD PTR [eax],0x14
100421eb:	xor    eax,eax
100421ed:	pop    edi
100421ee:	pop    esi
100421ef:	pop    ebx
100421f0:	mov    esp,ebp
100421f2:	pop    ebp
100421f3:	ret    
100421f4:	add    eax,ecx
100421f6:	mov    DWORD PTR [esi],eax
100421f8:	pop    edi
100421f9:	pop    esi
100421fa:	mov    eax,0x1
100421ff:	pop    ebx
10042200:	mov    esp,ebp
10042202:	pop    ebp
10042203:	ret    
10042204:	int3   
10042205:	int3   
10042206:	int3   
10042207:	int3   
10042208:	int3   
10042209:	int3   
1004220a:	int3   
1004220b:	int3   
1004220c:	int3   
1004220d:	int3   
1004220e:	int3   
1004220f:	int3   
10042210:	push   ebx
10042211:	push   ebp
10042212:	mov    ebp,DWORD PTR [esp+0xc]
10042216:	push   esi
10042217:	push   edi
10042218:	mov    edi,DWORD PTR [esp+0x18]
1004221c:	lea    esp,[esp+0x0]
10042220:	movzx  eax,BYTE PTR [ebp+0x0]
10042224:	movzx  eax,BYTE PTR [eax+0x1006e438]
1004222b:	add    eax,ebp
1004222d:	xor    ebx,ebx
1004222f:	mov    esi,0x2
10042234:	call   0x1003e3c0
10042239:	movzx  ecx,BYTE PTR [eax]
1004223c:	cmp    ecx,0x5e
1004223f:	je     0x100422aa
10042241:	cmp    ecx,0x5f
10042244:	jne    0x10042260
10042246:	xor    ecx,ecx
10042248:	mov    ch,BYTE PTR [eax+0x3]
1004224b:	mov    edx,0x1
10042250:	mov    cl,BYTE PTR [eax+0x4]
10042253:	cmp    ecx,0x20
10042256:	jge    0x1004225a
10042258:	shl    edx,cl
1004225a:	or     edx,DWORD PTR [esp+0x1c]
1004225e:	jmp    0x100422ae
10042260:	cmp    ecx,0x58
10042263:	je     0x100422aa
10042265:	cmp    ecx,0x5d
10042268:	je     0x100422aa
1004226a:	cmp    ecx,0x60
1004226d:	je     0x100422aa
1004226f:	cmp    ecx,0x39
10042272:	je     0x10042298
10042274:	cmp    ecx,0x3a
10042277:	je     0x10042298
10042279:	cmp    ecx,0x42
1004227c:	je     0x10042298
1004227e:	cmp    ecx,0x1
10042281:	je     0x100422c2
10042283:	cmp    ecx,esi
10042285:	je     0x100422c2
10042287:	test   BYTE PTR [edi],0x2
1004228a:	jne    0x10042291
1004228c:	cmp    ecx,0x1a
1004228f:	je     0x100422c2
10042291:	pop    edi
10042292:	pop    esi
10042293:	pop    ebp
10042294:	xor    eax,eax
10042296:	pop    ebx
10042297:	ret    
10042298:	cmp    BYTE PTR [eax+0x1],0xd
1004229c:	jne    0x10042291
1004229e:	mov    edx,DWORD PTR [esp+0x20]
100422a2:	test   DWORD PTR [esp+0x1c],edx
100422a6:	jne    0x10042291
100422a8:	jmp    0x100422c2
100422aa:	mov    edx,DWORD PTR [esp+0x1c]
100422ae:	mov    ecx,DWORD PTR [esp+0x20]
100422b2:	push   ecx
100422b3:	push   edx
100422b4:	push   edi
100422b5:	push   eax
100422b6:	call   0x10042210
100422bb:	add    esp,0x10
100422be:	test   eax,eax
100422c0:	je     0x10042291
100422c2:	xor    eax,eax
100422c4:	mov    ah,BYTE PTR [ebp+0x1]
100422c7:	mov    al,BYTE PTR [ebp+0x2]
100422ca:	add    ebp,eax
100422cc:	cmp    BYTE PTR [ebp+0x0],0x54
100422d0:	je     0x10042220
100422d6:	pop    edi
100422d7:	pop    esi
100422d8:	pop    ebp
100422d9:	mov    eax,0x1
100422de:	pop    ebx
100422df:	ret    
100422e0:	push   ebp
100422e1:	mov    ebp,DWORD PTR [esp+0xc]
100422e5:	push   esi
100422e6:	mov    esi,DWORD PTR [esp+0xc]
100422ea:	push   edi
100422eb:	mov    edi,DWORD PTR [esp+0x18]
100422ef:	nop
100422f0:	movzx  eax,BYTE PTR [esi]
100422f3:	movzx  eax,BYTE PTR [eax+0x1006e438]
100422fa:	movzx  edx,BYTE PTR [eax+esi*1]
100422fe:	add    eax,esi
10042300:	mov    ecx,edx
10042302:	sub    ecx,0x4
10042305:	cmp    ecx,0x62
10042308:	ja     0x10042339
1004230a:	lea    ebx,[ebx+0x0]
10042310:	movzx  ecx,BYTE PTR [ecx+0x100423d0]
10042317:	jmp    DWORD PTR [ecx*4+0x100423c0]
1004231e:	add    eax,0x2
10042321:	jmp    0x1004232c
10042323:	movzx  edx,BYTE PTR [edx+0x1006e438]
1004232a:	add    eax,edx
1004232c:	movzx  edx,BYTE PTR [eax]
1004232f:	mov    ecx,edx
10042331:	sub    ecx,0x4
10042334:	cmp    ecx,0x62
10042337:	jbe    0x10042310
10042339:	movzx  ecx,BYTE PTR [eax]
1004233c:	cmp    ecx,0x5e
1004233f:	je     0x10042395
10042341:	cmp    ecx,0x5f
10042344:	jne    0x10042360
10042346:	xor    ecx,ecx
10042348:	mov    ch,BYTE PTR [eax+0x3]
1004234b:	mov    edx,0x1
10042350:	mov    cl,BYTE PTR [eax+0x4]
10042353:	cmp    ecx,0x20
10042356:	jge    0x1004235a
10042358:	shl    edx,cl
1004235a:	push   edi
1004235b:	or     edx,ebp
1004235d:	push   edx
1004235e:	jmp    0x10042397
10042360:	cmp    ecx,0x58
10042363:	je     0x10042395
10042365:	cmp    ecx,0x5d
10042368:	je     0x10042395
1004236a:	cmp    ecx,0x60
1004236d:	je     0x10042395
1004236f:	cmp    ecx,0x39
10042372:	je     0x10042389
10042374:	cmp    ecx,0x3a
10042377:	je     0x10042389
10042379:	cmp    ecx,0x42
1004237c:	je     0x10042389
1004237e:	cmp    ecx,0x1a
10042381:	je     0x100423a4
10042383:	pop    edi
10042384:	pop    esi
10042385:	xor    eax,eax
10042387:	pop    ebp
10042388:	ret    
10042389:	cmp    BYTE PTR [eax+0x1],0xc
1004238d:	jne    0x10042383
1004238f:	test   edi,ebp
10042391:	jne    0x10042383
10042393:	jmp    0x100423a4
10042395:	push   edi
10042396:	push   ebp
10042397:	push   eax
10042398:	call   0x100422e0
1004239d:	add    esp,0xc
100423a0:	test   eax,eax
100423a2:	je     0x10042383
100423a4:	xor    eax,eax
100423a6:	mov    ah,BYTE PTR [esi+0x1]
100423a9:	mov    al,BYTE PTR [esi+0x2]
100423ac:	add    esi,eax
100423ae:	cmp    BYTE PTR [esi],0x54
100423b1:	je     0x100422f0
100423b7:	pop    edi
100423b8:	pop    esi
100423b9:	mov    eax,0x1
100423be:	pop    ebp
100423bf:	ret    
100423c0:	cmp    DWORD PTR [ebx],esp
100423c2:	add    al,0x10
100423c4:	push   ds
100423c5:	and    eax,DWORD PTR [eax+edx*1]
100423c8:	and    esp,DWORD PTR [ebx]
100423ca:	add    al,0x10
100423cc:	cmp    DWORD PTR [ebx],esp
100423ce:	add    al,0x10
100423d0:	add    BYTE PTR [eax],al
100423d2:	add    eax,DWORD PTR [ebx]
100423d4:	add    eax,DWORD PTR [ebx]
100423d6:	add    eax,DWORD PTR [ebx]
100423d8:	add    eax,DWORD PTR [ebx]
100423da:	add    eax,DWORD PTR [ebx]
100423dc:	add    eax,DWORD PTR [ebx]
100423de:	add    eax,DWORD PTR [ebx]
100423e0:	add    eax,DWORD PTR [ebx]
100423e2:	add    eax,DWORD PTR [ebx]
100423e4:	add    eax,DWORD PTR [ecx]
100423e6:	add    eax,DWORD PTR [ebx]
100423e8:	add    eax,DWORD PTR [ebx]
100423ea:	add    eax,DWORD PTR [ebx]
100423ec:	add    eax,DWORD PTR [ebx]
100423ee:	add    eax,DWORD PTR [ebx]
100423f0:	add    eax,DWORD PTR [ebx]
100423f2:	add    eax,DWORD PTR [ebx]
100423f4:	add    eax,DWORD PTR [ebx]
100423f6:	add    eax,DWORD PTR [ebx]
100423f8:	add    eax,DWORD PTR [ebx]
100423fa:	add    eax,DWORD PTR [ebx]
100423fc:	add    eax,DWORD PTR [ebx]
100423fe:	add    eax,DWORD PTR [ebx]
10042400:	add    eax,DWORD PTR [ebx]
10042402:	add    eax,DWORD PTR [ebx]
10042404:	add    eax,DWORD PTR [ebx]
10042406:	add    eax,DWORD PTR [ebx]
10042408:	add    eax,DWORD PTR [ebx]
1004240a:	add    eax,DWORD PTR [ebx]
1004240c:	add    eax,DWORD PTR [ebx]
1004240e:	add    eax,DWORD PTR [ebx]
10042410:	add    eax,DWORD PTR [ebx]
10042412:	add    eax,DWORD PTR [ebx]
10042414:	add    eax,DWORD PTR [ebx]
10042416:	add    eax,DWORD PTR [ebx]
10042418:	add    eax,DWORD PTR [ebx]
1004241a:	add    eax,DWORD PTR [ebx]
1004241c:	add    eax,DWORD PTR [ebx]
1004241e:	add    eax,DWORD PTR [edx]
10042420:	add    eax,DWORD PTR [ebx]
10042422:	add    eax,DWORD PTR [ebx]
10042424:	add    eax,DWORD PTR [eax]
10042426:	add    BYTE PTR [eax],al
10042428:	add    eax,DWORD PTR [ebx]
1004242a:	add    eax,DWORD PTR [ebx]
1004242c:	add    eax,DWORD PTR [ebx]
1004242e:	add    eax,DWORD PTR [ebx]
10042430:	add    al,BYTE PTR [edx]
10042432:	add    cl,ah
10042434:	int3   
10042435:	int3   
10042436:	int3   
10042437:	int3   
10042438:	int3   
10042439:	int3   
1004243a:	int3   
1004243b:	int3   
1004243c:	int3   
1004243d:	int3   
1004243e:	int3   
1004243f:	int3   
10042440:	push   ebx
10042441:	push   ebp
10042442:	push   esi
10042443:	push   edi
10042444:	mov    edi,DWORD PTR [esp+0x18]
10042448:	or     ebp,0xffffffff
1004244b:	jmp    0x10042450
1004244d:	lea    ecx,[ecx+0x0]
10042450:	mov    eax,DWORD PTR [esp+0x14]
10042454:	mov    ebx,0x1
10042459:	add    eax,0x3
1004245c:	mov    esi,ebx
1004245e:	call   0x1003e3c0
10042463:	movzx  ecx,BYTE PTR [eax]
10042466:	lea    edx,[ecx-0x1c]
10042469:	cmp    edx,0x44
1004246c:	ja     0x100424e3
1004246e:	movzx  edx,BYTE PTR [edx+0x100424fc]
10042475:	jmp    DWORD PTR [edx*4+0x100424ec]
1004247c:	xor    edx,edx
1004247e:	cmp    ecx,0x58
10042481:	sete   dl
10042484:	push   edx
10042485:	push   edi
10042486:	push   eax
10042487:	call   0x10042440
1004248c:	add    esp,0xc
1004248f:	test   eax,eax
10042491:	jl     0x100424e3
10042493:	test   ebp,ebp
10042495:	jge    0x100424bd
10042497:	mov    ebp,eax
10042499:	jmp    0x100424c1
1004249b:	add    eax,0x2
1004249e:	cmp    DWORD PTR [esp+0x1c],0x0
100424a3:	je     0x100424e3
100424a5:	test   ebp,ebp
100424a7:	jge    0x100424b9
100424a9:	test   BYTE PTR [edi],bl
100424ab:	movzx  ebp,BYTE PTR [eax+0x1]
100424af:	je     0x100424c1
100424b1:	or     ebp,0x100
100424b7:	jmp    0x100424c1
100424b9:	movzx  eax,BYTE PTR [eax+0x1]
100424bd:	cmp    ebp,eax
100424bf:	jne    0x100424e3
100424c1:	mov    eax,DWORD PTR [esp+0x14]
100424c5:	xor    ecx,ecx
100424c7:	mov    ch,BYTE PTR [eax+0x1]
100424ca:	mov    cl,BYTE PTR [eax+0x2]
100424cd:	add    eax,ecx
100424cf:	cmp    BYTE PTR [eax],0x54
100424d2:	mov    DWORD PTR [esp+0x14],eax
100424d6:	je     0x10042450
100424dc:	pop    edi
100424dd:	pop    esi
100424de:	mov    eax,ebp
100424e0:	pop    ebp
100424e1:	pop    ebx
100424e2:	ret    
100424e3:	pop    edi
100424e4:	pop    esi
100424e5:	pop    ebp
100424e6:	or     eax,0xffffffff
100424e9:	pop    ebx
100424ea:	ret    
100424eb:	nop
100424ec:	sahf   
100424ed:	and    al,0x4
100424ef:	adc    BYTE PTR [ebx+0x7c100424],bl
100424f5:	and    al,0x4
100424f7:	adc    bl,ah
100424f9:	and    al,0x4
100424fb:	adc    BYTE PTR [eax],al
100424fd:	add    BYTE PTR [ebx],al
100424ff:	add    eax,DWORD PTR [ebx]
10042501:	add    BYTE PTR [eax],al
10042503:	add    eax,DWORD PTR [ebx]
10042505:	add    eax,DWORD PTR [ebx]
10042507:	add    DWORD PTR [ebx],eax
10042509:	add    BYTE PTR [ebx],al
1004250b:	add    eax,DWORD PTR [ebx]
1004250d:	add    eax,DWORD PTR [ebx]
1004250f:	add    eax,DWORD PTR [ebx]
10042511:	add    eax,DWORD PTR [ebx]
10042513:	add    eax,DWORD PTR [ebx]
10042515:	add    eax,DWORD PTR [ebx]
10042517:	add    eax,DWORD PTR [ebx]
10042519:	add    eax,DWORD PTR [ebx]
1004251b:	add    eax,DWORD PTR [ebx]
1004251d:	add    eax,DWORD PTR [ebx]
1004251f:	add    eax,DWORD PTR [ebx]
10042521:	add    eax,DWORD PTR [ebx]
10042523:	add    eax,DWORD PTR [ebx]
10042525:	add    eax,DWORD PTR [ebx]
10042527:	add    eax,DWORD PTR [ebx]
10042529:	add    eax,DWORD PTR [ebx]
1004252b:	add    eax,DWORD PTR [ebx]
1004252d:	add    eax,DWORD PTR [ebx]
1004252f:	add    eax,DWORD PTR [ebx]
10042531:	add    eax,DWORD PTR [ebx]
10042533:	add    eax,DWORD PTR [ebx]
10042535:	add    eax,DWORD PTR [ebx]
10042537:	add    eax,DWORD PTR [edx]
10042539:	add    eax,DWORD PTR [ebx]
1004253b:	add    eax,DWORD PTR [ebx]
1004253d:	add    al,BYTE PTR [edx]
1004253f:	add    al,BYTE PTR [edx]
10042541:	int3   
10042542:	int3   
10042543:	int3   
10042544:	int3   
10042545:	int3   
10042546:	int3   
10042547:	int3   
10042548:	int3   
10042549:	int3   
1004254a:	int3   
1004254b:	int3   
1004254c:	int3   
1004254d:	int3   
1004254e:	int3   
1004254f:	int3   
10042550:	push   ebp
10042551:	mov    ebp,esp
10042553:	and    esp,0xfffffff8
10042556:	mov    eax,0x108c
1004255b:	call   0x10049ed0
10042560:	mov    eax,ds:0x1007e030
10042565:	xor    eax,esp
10042567:	mov    DWORD PTR [esp+0x1088],eax
1004256e:	mov    eax,DWORD PTR [ebp+0xc]
10042571:	push   ebx
10042572:	push   esi
10042573:	push   edi
10042574:	xor    edi,edi
10042576:	mov    esi,edx
10042578:	xor    ebx,ebx
1004257a:	cmp    ecx,edi
1004257c:	mov    DWORD PTR [esp+0x18],esi
10042580:	mov    DWORD PTR [esp+0x2c],ecx
10042584:	mov    DWORD PTR [esp+0x28],eax
10042588:	mov    DWORD PTR [esp+0x14],0x1
10042590:	mov    DWORD PTR [esp+0xc],edi
10042594:	mov    DWORD PTR [esp+0x10],esi
10042598:	je     0x10042b02
1004259e:	cmp    eax,edi
100425a0:	mov    DWORD PTR [ecx],edi
100425a2:	jne    0x100425ae
100425a4:	mov    eax,0x10
100425a9:	jmp    0x10042ae4
100425ae:	mov    DWORD PTR [eax],edi
100425b0:	mov    eax,DWORD PTR [ebp+0x8]
100425b3:	test   eax,0x800
100425b8:	je     0x100425c4
100425ba:	mov    eax,0x20
100425bf:	jmp    0x10042ad2
100425c4:	test   eax,0xfc038580
100425c9:	je     0x100425d5
100425cb:	mov    eax,0x11
100425d0:	jmp    0x10042ad2
100425d5:	mov    DWORD PTR [esp+0x30],0x1006e4a8
100425dd:	mov    DWORD PTR [esp+0x34],0x1006e5a8
100425e5:	mov    DWORD PTR [esp+0x38],0x1006e6a8
100425ed:	mov    DWORD PTR [esp+0x3c],0x1006e7e8
100425f5:	cmp    BYTE PTR [esi],0x28
100425f8:	jne    0x1004272c
100425fe:	jmp    0x10042602
10042600:	xor    edi,edi
10042602:	cmp    BYTE PTR [esi+ebx*1+0x1],0x2a
10042607:	jne    0x1004272c
1004260d:	push   0x3
1004260f:	lea    edi,[esi+ebx*1+0x2]
10042613:	push   0x10074244
10042618:	push   edi
10042619:	call   0x1004f1f6
1004261e:	add    esp,0xc
10042621:	test   eax,eax
10042623:	jne    0x10042640
10042625:	mov    ecx,DWORD PTR [ebp+0x8]
10042628:	mov    eax,0x100000
1004262d:	and    ecx,0xff8fffff
10042633:	add    ebx,0x5
10042636:	or     ecx,eax
10042638:	mov    DWORD PTR [ebp+0x8],ecx
1004263b:	jmp    0x10042720
10042640:	push   0x3
10042642:	push   0x10074248
10042647:	push   edi
10042648:	call   0x1004f1f6
1004264d:	add    esp,0xc
10042650:	test   eax,eax
10042652:	jne    0x1004266f
10042654:	mov    ecx,DWORD PTR [ebp+0x8]
10042657:	mov    eax,0x200000
1004265c:	and    ecx,0xff8fffff
10042662:	add    ebx,0x5
10042665:	or     ecx,eax
10042667:	mov    DWORD PTR [ebp+0x8],ecx
1004266a:	jmp    0x10042720
1004266f:	push   0x5
10042671:	push   0x1007424c
10042676:	push   edi
10042677:	call   0x1004f1f6
1004267c:	add    esp,0xc
1004267f:	test   eax,eax
10042681:	jne    0x1004269e
10042683:	mov    ecx,DWORD PTR [ebp+0x8]
10042686:	mov    eax,0x300000
1004268b:	and    ecx,0xff8fffff
10042691:	add    ebx,0x7
10042694:	or     ecx,eax
10042696:	mov    DWORD PTR [ebp+0x8],ecx
10042699:	jmp    0x10042720
1004269e:	push   0x4
100426a0:	push   0x10074254
100426a5:	push   edi
100426a6:	call   0x1004f1f6
100426ab:	add    esp,0xc
100426ae:	test   eax,eax
100426b0:	jne    0x100426ca
100426b2:	mov    ecx,DWORD PTR [ebp+0x8]
100426b5:	mov    eax,0x400000
100426ba:	and    ecx,0xff8fffff
100426c0:	add    ebx,0x6
100426c3:	or     ecx,eax
100426c5:	mov    DWORD PTR [ebp+0x8],ecx
100426c8:	jmp    0x10042720
100426ca:	push   0x8
100426cc:	push   0x1007425c
100426d1:	push   edi
100426d2:	call   0x1004f1f6
100426d7:	add    esp,0xc
100426da:	test   eax,eax
100426dc:	jne    0x100426f6
100426de:	mov    ecx,DWORD PTR [ebp+0x8]
100426e1:	mov    eax,0x500000
100426e6:	and    ecx,0xff8fffff
100426ec:	add    ebx,0xa
100426ef:	or     ecx,eax
100426f1:	mov    DWORD PTR [ebp+0x8],ecx
100426f4:	jmp    0x10042720
100426f6:	push   0xc
100426f8:	push   0x10074268
100426fd:	push   edi
100426fe:	call   0x1004f1f6
10042703:	add    esp,0xc
10042706:	test   eax,eax
10042708:	jne    0x10042750
1004270a:	add    ebx,0xe
1004270d:	mov    eax,0x800000
10042712:	mov    edx,DWORD PTR [ebp+0x8]
10042715:	and    edx,0xfe7fffff
1004271b:	or     edx,eax
1004271d:	mov    DWORD PTR [ebp+0x8],edx
10042720:	cmp    BYTE PTR [esi+ebx*1],0x28
10042724:	je     0x10042600
1004272a:	xor    edi,edi
1004272c:	mov    ecx,DWORD PTR [ebp+0x8]
1004272f:	mov    eax,ecx
10042731:	and    eax,0x1800000
10042736:	je     0x1004276e
10042738:	cmp    eax,0x800000
1004273d:	je     0x1004276e
1004273f:	cmp    eax,0x1000000
10042744:	je     0x1004276e
10042746:	mov    eax,0x38
1004274b:	jmp    0x10042ad2
10042750:	push   0xc
10042752:	push   0x10074278
10042757:	push   edi
10042758:	call   0x1004f1f6
1004275d:	add    esp,0xc
10042760:	test   eax,eax
10042762:	jne    0x1004272a
10042764:	add    ebx,0xe
10042767:	mov    eax,0x1000000
1004276c:	jmp    0x10042712
1004276e:	mov    eax,ecx
10042770:	and    eax,0x700000
10042775:	cmp    eax,0x300000
1004277a:	mov    ecx,0x2
1004277f:	jg     0x100427d2
10042781:	je     0x100427cb
10042783:	cmp    eax,edi
10042785:	je     0x10042795
10042787:	cmp    eax,0x100000
1004278c:	je     0x100427c4
1004278e:	cmp    eax,0x200000
10042793:	jne    0x100427e0
10042795:	mov    eax,0xa
1004279a:	cmp    eax,0xff
1004279f:	mov    DWORD PTR [esp+0x80],edi
100427a6:	jle    0x10042800
100427a8:	mov    DWORD PTR [esp+0x84],ecx
100427af:	mov    ecx,eax
100427b1:	sar    ecx,0x8
100427b4:	mov    BYTE PTR [esp+0x88],cl
100427bb:	mov    BYTE PTR [esp+0x89],al
100427c2:	jmp    0x10042812
100427c4:	mov    eax,0xd
100427c9:	jmp    0x1004279a
100427cb:	mov    eax,0xd0a
100427d0:	jmp    0x1004279a
100427d2:	cmp    eax,0x400000
100427d7:	je     0x100427f3
100427d9:	cmp    eax,0x500000
100427de:	je     0x100427ea
100427e0:	mov    eax,0x38
100427e5:	jmp    0x10042ad2
100427ea:	mov    DWORD PTR [esp+0x80],ecx
100427f1:	jmp    0x10042812
100427f3:	mov    DWORD PTR [esp+0x80],0x1
100427fe:	jmp    0x10042812
10042800:	mov    DWORD PTR [esp+0x84],0x1
1004280b:	mov    BYTE PTR [esp+0x88],al
10042812:	lea    edx,[esp+0x90]
10042819:	mov    eax,edx
1004281b:	mov    DWORD PTR [esp+0x44],eax
1004281f:	mov    ecx,edx
10042821:	mov    eax,esi
10042823:	mov    DWORD PTR [esp+0x40],edx
10042827:	mov    DWORD PTR [esp+0x68],edi
1004282b:	mov    DWORD PTR [esp+0x6c],edi
1004282f:	mov    DWORD PTR [esp+0x64],edi
10042833:	mov    DWORD PTR [esp+0x60],edi
10042837:	mov    DWORD PTR [esp+0x58],edi
1004283b:	mov    DWORD PTR [esp+0x5c],edi
1004283f:	mov    DWORD PTR [esp+0x54],edi
10042843:	mov    DWORD PTR [esp+0x50],ecx
10042847:	mov    DWORD PTR [esp+0x48],esi
1004284b:	lea    edx,[eax+0x1]
1004284e:	mov    edi,edi
10042850:	mov    cl,BYTE PTR [eax]
10042852:	add    eax,0x1
10042855:	test   cl,cl
10042857:	jne    0x10042850
10042859:	sub    eax,edx
1004285b:	lea    edx,[esp+0x90]
10042862:	mov    DWORD PTR [esp+0x1c],edx
10042866:	xor    edi,edi
10042868:	lea    ecx,[esp+0x14]
1004286c:	push   ecx
1004286d:	lea    edx,[esp+0x34]
10042871:	push   edx
10042872:	push   edi
10042873:	lea    ecx,[esp+0x2c]
10042877:	push   ecx
10042878:	lea    edx,[esp+0x34]
1004287c:	push   edx
1004287d:	push   edi
1004287e:	push   edi
1004287f:	push   edi
10042880:	add    eax,esi
10042882:	lea    ecx,[esp+0x2c]
10042886:	push   ecx
10042887:	mov    DWORD PTR [esp+0x70],eax
1004288b:	mov    eax,DWORD PTR [ebp+0x8]
1004288e:	lea    edx,[esp+0x34]
10042892:	push   edx
10042893:	lea    ecx,[esp+0x44]
10042897:	mov    edx,eax
10042899:	push   ecx
1004289a:	and    edx,0x7
1004289d:	push   edx
1004289e:	add    esi,ebx
100428a0:	push   eax
100428a1:	mov    DWORD PTR [esp+0xac],edi
100428a8:	mov    DWORD PTR [esp+0xa4],eax
100428af:	mov    DWORD PTR [esp+0xa8],edi
100428b6:	mov    DWORD PTR [esp+0x44],esi
100428ba:	mov    BYTE PTR [esp+0xc4],0x5e
100428c2:	call   0x10041ef0
100428c7:	mov    eax,DWORD PTR [esp+0x40]
100428cb:	add    esp,0x34
100428ce:	cmp    eax,edi
100428d0:	jne    0x10042ad2
100428d6:	cmp    DWORD PTR [esp+0x14],0x10000
100428de:	jle    0x100428ea
100428e0:	mov    eax,0x14
100428e5:	jmp    0x10042ad2
100428ea:	mov    eax,DWORD PTR [esp+0x5c]
100428ee:	mov    ecx,DWORD PTR [esp+0x14]
100428f2:	add    eax,0x3
100428f5:	imul   eax,DWORD PTR [esp+0x58]
100428fa:	lea    ebx,[eax+ecx*1+0x28]
100428fe:	push   ebx
100428ff:	call   DWORD PTR ds:0x1007f4f8
10042905:	mov    edi,eax
10042907:	add    esp,0x4
1004290a:	test   edi,edi
1004290c:	jne    0x10042918
1004290e:	mov    eax,0x15
10042913:	jmp    0x10042ad2
10042918:	mov    DWORD PTR [edi+0x4],ebx
1004291b:	mov    DWORD PTR [edi],0x50435245
10042921:	mov    edx,DWORD PTR [esp+0x70]
10042925:	mov    DWORD PTR [edi+0x8],edx
10042928:	movzx  eax,WORD PTR [esp+0x74]
1004292d:	xor    ecx,ecx
1004292f:	mov    WORD PTR [edi+0xc],ax
10042933:	mov    WORD PTR [edi+0xe],cx
10042937:	mov    WORD PTR [edi+0x14],cx
1004293b:	mov    WORD PTR [edi+0x16],cx
1004293f:	mov    WORD PTR [edi+0x18],0x28
10042945:	movzx  edx,WORD PTR [esp+0x5c]
1004294a:	mov    WORD PTR [edi+0x1a],dx
1004294e:	movzx  eax,WORD PTR [esp+0x58]
10042953:	mov    WORD PTR [edi+0x1c],ax
10042957:	mov    WORD PTR [edi+0x1e],cx
1004295b:	mov    DWORD PTR [edi+0x20],ecx
1004295e:	mov    DWORD PTR [edi+0x24],ecx
10042961:	mov    edx,DWORD PTR [esp+0x60]
10042965:	mov    DWORD PTR [esp+0x64],edx
10042969:	mov    DWORD PTR [esp+0x60],ecx
1004296d:	mov    DWORD PTR [esp+0x58],ecx
10042971:	movzx  eax,WORD PTR [edi+0x18]
10042975:	push   ecx
10042976:	add    eax,edi
10042978:	mov    DWORD PTR [esp+0x58],eax
1004297c:	movzx  edx,WORD PTR [edi+0x1a]
10042980:	movzx  ebx,WORD PTR [edi+0x1c]
10042984:	imul   ebx,edx
10042987:	lea    edx,[esp+0x34]
1004298b:	push   edx
1004298c:	push   ecx
1004298d:	lea    edx,[esp+0x2c]
10042991:	push   edx
10042992:	lea    edx,[esp+0x34]
10042996:	push   edx
10042997:	push   ecx
10042998:	push   ecx
10042999:	push   ecx
1004299a:	add    ebx,eax
1004299c:	mov    DWORD PTR [esp+0x98],ecx
100429a3:	mov    DWORD PTR [esp+0x9c],ecx
100429aa:	lea    eax,[esp+0xb0]
100429b1:	mov    DWORD PTR [esp+0x64],ebx
100429b5:	mov    DWORD PTR [esp+0x70],eax
100429b9:	lea    ecx,[esp+0x2c]
100429bd:	push   ecx
100429be:	mov    BYTE PTR [ebx],0x5e
100429c1:	mov    eax,DWORD PTR [edi+0x8]
100429c4:	lea    edx,[esp+0x34]
100429c8:	push   edx
100429c9:	lea    ecx,[esp+0x44]
100429cd:	mov    edx,eax
100429cf:	push   ecx
100429d0:	and    edx,0x7
100429d3:	push   edx
100429d4:	push   eax
100429d5:	mov    DWORD PTR [esp+0x44],esi
100429d9:	mov    DWORD PTR [esp+0x50],ebx
100429dd:	call   0x10041ef0
100429e2:	movzx  eax,WORD PTR [esp+0x94]
100429ea:	mov    WORD PTR [edi+0x10],ax
100429ee:	mov    cx,WORD PTR [esp+0x9c]
100429f6:	mov    WORD PTR [edi+0x12],cx
100429fa:	movzx  edx,WORD PTR [esp+0xa8]
10042a02:	add    esp,0x34
10042a05:	mov    WORD PTR [edi+0xc],dx
10042a09:	cmp    DWORD PTR [esp+0x7c],0x0
10042a0e:	je     0x10042a18
10042a10:	mov    DWORD PTR [esp+0x20],0xffffffff
10042a18:	cmp    DWORD PTR [esp+0xc],0x0
10042a1d:	jne    0x10042a30
10042a1f:	mov    eax,DWORD PTR [esp+0x10]
10042a23:	cmp    BYTE PTR [eax],0x0
10042a26:	je     0x10042a30
10042a28:	mov    DWORD PTR [esp+0xc],0x16
10042a30:	mov    eax,DWORD PTR [esp+0x1c]
10042a34:	mov    BYTE PTR [eax],0x0
10042a37:	add    eax,0x1
10042a3a:	sub    eax,ebx
10042a3c:	cmp    eax,DWORD PTR [esp+0x14]
10042a40:	jle    0x10042a4c
10042a42:	mov    DWORD PTR [esp+0xc],0x17
10042a4a:	jmp    0x10042ac4
10042a4c:	cmp    DWORD PTR [esp+0xc],0x0
10042a51:	jne    0x10042ac4
10042a53:	mov    eax,DWORD PTR [esp+0x50]
10042a57:	lea    ecx,[esp+0x90]
10042a5e:	cmp    eax,ecx
10042a60:	jbe    0x10042ab2
10042a62:	sub    eax,0x2
10042a65:	mov    DWORD PTR [esp+0x50],eax
10042a69:	movzx  edx,BYTE PTR [eax+0x1]
10042a6d:	mov    dh,BYTE PTR [eax]
10042a6f:	xor    ecx,ecx
10042a71:	mov    eax,edx
10042a73:	mov    ch,BYTE PTR [eax+ebx*1]
10042a76:	mov    DWORD PTR [esp+0x14],eax
10042a7a:	mov    cl,BYTE PTR [eax+ebx*1+0x1]
10042a7e:	mov    eax,ebx
10042a80:	mov    esi,ecx
10042a82:	call   0x1003e6d0
10042a87:	test   eax,eax
10042a89:	je     0x10042aa8
10042a8b:	mov    esi,DWORD PTR [esp+0x14]
10042a8f:	mov    edx,eax
10042a91:	sub    edx,ebx
10042a93:	sar    edx,0x8
10042a96:	sub    al,bl
10042a98:	mov    BYTE PTR [esi+ebx*1],dl
10042a9b:	mov    BYTE PTR [esi+ebx*1+0x1],al
10042a9f:	cmp    DWORD PTR [esp+0xc],0x0
10042aa4:	je     0x10042a53
10042aa6:	jmp    0x10042ac4
10042aa8:	mov    DWORD PTR [esp+0xc],0x35
10042ab0:	jmp    0x10042ac4
10042ab2:	mov    ax,WORD PTR [edi+0x12]
10042ab6:	cmp    ax,WORD PTR [edi+0x10]
10042aba:	jbe    0x10042b19
10042abc:	mov    DWORD PTR [esp+0xc],0xf
10042ac4:	push   edi
10042ac5:	call   DWORD PTR ds:0x1007f4fc
10042acb:	mov    eax,DWORD PTR [esp+0x10]
10042acf:	add    esp,0x4
10042ad2:	mov    ecx,DWORD PTR [esp+0x10]
10042ad6:	sub    ecx,DWORD PTR [esp+0x18]
10042ada:	mov    edx,DWORD PTR [esp+0x28]
10042ade:	mov    DWORD PTR [edx],ecx
10042ae0:	mov    ecx,DWORD PTR [esp+0x2c]
10042ae4:	test   eax,eax
10042ae6:	mov    edi,0x1006eaf8
10042aeb:	jle    0x10042b00
10042aed:	lea    ecx,[ecx+0x0]
10042af0:	mov    dl,BYTE PTR [edi]
10042af2:	add    edi,0x1
10042af5:	test   dl,dl
10042af7:	jne    0x10042af0
10042af9:	sub    eax,0x1
10042afc:	test   eax,eax
10042afe:	jg     0x10042af0
10042b00:	mov    DWORD PTR [ecx],edi
10042b02:	xor    eax,eax
10042b04:	pop    edi
10042b05:	pop    esi
10042b06:	pop    ebx
10042b07:	mov    ecx,DWORD PTR [esp+0x1088]
10042b0e:	xor    ecx,esp
10042b10:	call   0x10042f87
10042b15:	mov    esp,ebp
10042b17:	pop    ebp
10042b18:	ret    
10042b19:	mov    eax,DWORD PTR [edi+0x8]
10042b1c:	test   al,0x10
10042b1e:	jne    0x10042ba4
10042b24:	mov    DWORD PTR [esp+0x18],eax
10042b28:	mov    eax,DWORD PTR [esp+0x6c]
10042b2c:	push   eax
10042b2d:	push   0x0
10042b2f:	lea    ecx,[esp+0x20]
10042b33:	push   ecx
10042b34:	push   ebx
10042b35:	call   0x10042210
10042b3a:	add    esp,0x10
10042b3d:	test   eax,eax
10042b3f:	je     0x10042b47
10042b41:	or     DWORD PTR [edi+0x8],0x10
10042b45:	jmp    0x10042ba4
10042b47:	mov    eax,DWORD PTR [esp+0x24]
10042b4b:	test   eax,eax
10042b4d:	jge    0x10042b63
10042b4f:	push   0x0
10042b51:	lea    edx,[esp+0x1c]
10042b55:	push   edx
10042b56:	push   ebx
10042b57:	call   0x10042440
10042b5c:	add    esp,0xc
10042b5f:	test   eax,eax
10042b61:	jl     0x10042b8b
10042b63:	mov    ecx,eax
10042b65:	and    ecx,0xff
10042b6b:	test   eax,0x100
10042b70:	je     0x10042b80
10042b72:	mov    edx,DWORD PTR [esp+0x34]
10042b76:	movzx  edx,BYTE PTR [edx+ecx*1]
10042b7a:	cmp    edx,ecx
10042b7c:	jne    0x10042b80
10042b7e:	mov    eax,ecx
10042b80:	or     WORD PTR [edi+0xc],0x2
10042b85:	mov    WORD PTR [edi+0x14],ax
10042b89:	jmp    0x10042ba4
10042b8b:	mov    eax,DWORD PTR [esp+0x6c]
10042b8f:	push   eax
10042b90:	push   0x0
10042b92:	push   ebx
10042b93:	call   0x100422e0
10042b98:	add    esp,0xc
10042b9b:	test   eax,eax
10042b9d:	je     0x10042ba4
10042b9f:	or     WORD PTR [edi+0xc],0x8
10042ba4:	mov    eax,DWORD PTR [esp+0x20]
10042ba8:	test   eax,eax
10042baa:	jl     0x10042be2
10042bac:	test   BYTE PTR [edi+0x8],0x10
10042bb0:	je     0x10042bb9
10042bb2:	test   eax,0x200
10042bb7:	je     0x10042be2
10042bb9:	mov    ecx,eax
10042bbb:	and    ecx,0xff
10042bc1:	test   eax,0x100
10042bc6:	je     0x10042bd9
10042bc8:	mov    edx,DWORD PTR [esp+0x34]
10042bcc:	movzx  edx,BYTE PTR [edx+ecx*1]
10042bd0:	cmp    edx,ecx
10042bd2:	jne    0x10042bd9
10042bd4:	and    eax,0xfffffeff
10042bd9:	or     WORD PTR [edi+0xc],0x4
10042bde:	mov    WORD PTR [edi+0x16],ax
10042be2:	mov    ecx,DWORD PTR [esp+0x1094]
10042be9:	mov    eax,edi
10042beb:	pop    edi
10042bec:	pop    esi
10042bed:	pop    ebx
10042bee:	xor    ecx,esp
10042bf0:	call   0x10042f87
10042bf5:	mov    esp,ebp
10042bf7:	pop    ebp
10042bf8:	ret    
10042bf9:	int3   
10042bfa:	int3   
10042bfb:	int3   
10042bfc:	int3   
10042bfd:	int3   
10042bfe:	int3   
10042bff:	int3   
10042c00:	push   ebp
10042c01:	mov    ebp,esp
10042c03:	and    esp,0xfffffff8
10042c06:	sub    esp,0x54
10042c09:	mov    eax,ds:0x1007e030
10042c0e:	xor    eax,esp
10042c10:	mov    DWORD PTR [esp+0x50],eax
10042c14:	test   edx,edx
10042c16:	push   ebx
10042c17:	mov    eax,edx
10042c19:	je     0x10042c6c
10042c1b:	test   esi,esi
10042c1d:	je     0x10042c6c
10042c1f:	cmp    DWORD PTR [edx],0x50435245
10042c25:	je     0x10042c54
10042c27:	lea    eax,[esp+0x2c]
10042c2b:	push   eax
10042c2c:	lea    ecx,[esp+0x8]
10042c30:	push   ecx
10042c31:	xor    ebx,ebx
10042c33:	call   0x10042e10
10042c38:	add    esp,0x8
10042c3b:	test   eax,eax
10042c3d:	jne    0x10042c54
10042c3f:	mov    eax,0xfffffffc
10042c44:	pop    ebx
10042c45:	mov    ecx,DWORD PTR [esp+0x50]
10042c49:	xor    ecx,esp
10042c4b:	call   0x10042f87
10042c50:	mov    esp,ebp
10042c52:	pop    ebp
10042c53:	ret    
10042c54:	movzx  edx,WORD PTR [eax+0x10]
10042c58:	mov    DWORD PTR [esi],edx
10042c5a:	xor    eax,eax
10042c5c:	pop    ebx
10042c5d:	mov    ecx,DWORD PTR [esp+0x50]
10042c61:	xor    ecx,esp
10042c63:	call   0x10042f87
10042c68:	mov    esp,ebp
10042c6a:	pop    ebp
10042c6b:	ret    
10042c6c:	mov    ecx,DWORD PTR [esp+0x54]
10042c70:	pop    ebx
10042c71:	xor    ecx,esp
10042c73:	mov    eax,0xfffffffe
10042c78:	call   0x10042f87
10042c7d:	mov    esp,ebp
10042c7f:	pop    ebp
10042c80:	ret    
10042c81:	int3   
10042c82:	int3   
10042c83:	int3   
10042c84:	int3   
10042c85:	int3   
10042c86:	int3   
10042c87:	int3   
10042c88:	int3   
10042c89:	int3   
10042c8a:	int3   
10042c8b:	int3   
10042c8c:	int3   
10042c8d:	int3   
10042c8e:	int3   
10042c8f:	int3   
10042c90:	cmp    DWORD PTR [esp+0x4],0x2
10042c95:	push   esi
10042c96:	mov    esi,eax
10042c98:	movzx  eax,BYTE PTR [ecx]
10042c9b:	jne    0x10042cd8
10042c9d:	cmp    eax,0xa
10042ca0:	je     0x10042ccb
10042ca2:	cmp    eax,0xd
10042ca5:	jne    0x10042d3e
10042cab:	add    esi,0xffffffff
10042cae:	cmp    ecx,esi
10042cb0:	jae    0x10042cbd
10042cb2:	cmp    BYTE PTR [ecx+0x1],0xa
10042cb6:	mov    eax,0x2
10042cbb:	je     0x10042cc2
10042cbd:	mov    eax,0x1
10042cc2:	mov    DWORD PTR [edi],eax
10042cc4:	mov    eax,0x1
10042cc9:	pop    esi
10042cca:	ret    
10042ccb:	mov    DWORD PTR [edi],0x1
10042cd1:	mov    eax,0x1
10042cd6:	pop    esi
10042cd7:	ret    
10042cd8:	cmp    eax,0x85
10042cdd:	jg     0x10042d23
10042cdf:	je     0x10042d10
10042ce1:	cmp    eax,0xa
10042ce4:	jl     0x10042d3e
10042ce6:	cmp    eax,0xc
10042ce9:	jle    0x10042ccb
10042ceb:	cmp    eax,0xd
10042cee:	jne    0x10042d3e
10042cf0:	add    esi,0xffffffff
10042cf3:	cmp    ecx,esi
10042cf5:	jae    0x10042d02
10042cf7:	cmp    BYTE PTR [ecx+0x1],0xa
10042cfb:	mov    eax,0x2
10042d00:	je     0x10042d07
10042d02:	mov    eax,0x1
10042d07:	mov    DWORD PTR [edi],eax
10042d09:	mov    eax,0x1
10042d0e:	pop    esi
10042d0f:	ret    
10042d10:	xor    eax,eax
10042d12:	test   edx,edx
10042d14:	setne  al
10042d17:	pop    esi
10042d18:	add    eax,0x1
10042d1b:	mov    DWORD PTR [edi],eax
10042d1d:	mov    eax,0x1
10042d22:	ret    
10042d23:	cmp    eax,0x2028
10042d28:	jl     0x10042d3e
10042d2a:	cmp    eax,0x2029
10042d2f:	jg     0x10042d3e
10042d31:	mov    DWORD PTR [edi],0x3
10042d37:	mov    eax,0x1
10042d3c:	pop    esi
10042d3d:	ret    
10042d3e:	xor    eax,eax
10042d40:	pop    esi
10042d41:	ret    
10042d42:	int3   
10042d43:	int3   
10042d44:	int3   
10042d45:	int3   
10042d46:	int3   
10042d47:	int3   
10042d48:	int3   
10042d49:	int3   
10042d4a:	int3   
10042d4b:	int3   
10042d4c:	int3   
10042d4d:	int3   
10042d4e:	int3   
10042d4f:	int3   
10042d50:	movzx  eax,BYTE PTR [ecx-0x1]
10042d54:	sub    ecx,0x1
10042d57:	cmp    DWORD PTR [esp+0x4],0x2
10042d5c:	jne    0x10042d94
10042d5e:	cmp    eax,0xa
10042d61:	je     0x10042d78
10042d63:	cmp    eax,0xd
10042d66:	jne    0x10042dff
10042d6c:	mov    DWORD PTR [edx],0x1
10042d72:	mov    eax,0x1
10042d77:	ret    
10042d78:	cmp    ecx,esi
10042d7a:	jbe    0x10042d87
10042d7c:	cmp    BYTE PTR [ecx-0x1],0xd
10042d80:	mov    eax,0x2
10042d85:	je     0x10042d8c
10042d87:	mov    eax,0x1
10042d8c:	mov    DWORD PTR [edx],eax
10042d8e:	mov    eax,0x1
10042d93:	ret    
10042d94:	cmp    eax,0x85
10042d99:	jg     0x10042de5
10042d9b:	je     0x10042dd1
10042d9d:	cmp    eax,0xa
10042da0:	je     0x10042db5
10042da2:	jle    0x10042dff
10042da4:	cmp    eax,0xd
10042da7:	jg     0x10042dff
10042da9:	mov    DWORD PTR [edx],0x1
10042daf:	mov    eax,0x1
10042db4:	ret    
10042db5:	cmp    ecx,esi
10042db7:	jbe    0x10042dc4
10042db9:	cmp    BYTE PTR [ecx-0x1],0xd
10042dbd:	mov    eax,0x2
10042dc2:	je     0x10042dc9
10042dc4:	mov    eax,0x1
10042dc9:	mov    DWORD PTR [edx],eax
10042dcb:	mov    eax,0x1
10042dd0:	ret    
10042dd1:	xor    eax,eax
10042dd3:	cmp    DWORD PTR [esp+0x8],eax
10042dd7:	setne  al
10042dda:	add    eax,0x1
10042ddd:	mov    DWORD PTR [edx],eax
10042ddf:	mov    eax,0x1
10042de4:	ret    
10042de5:	cmp    eax,0x2028
10042dea:	jl     0x10042dff
10042dec:	cmp    eax,0x2029
10042df1:	jg     0x10042dff
10042df3:	mov    DWORD PTR [edx],0x3
10042df9:	mov    eax,0x1
10042dfe:	ret    
10042dff:	xor    eax,eax
10042e01:	ret    
10042e02:	int3   
10042e03:	int3   
10042e04:	int3   
10042e05:	int3   
10042e06:	int3   
10042e07:	int3   
10042e08:	int3   
10042e09:	int3   
10042e0a:	int3   
10042e0b:	int3   
10042e0c:	int3   
10042e0d:	int3   
10042e0e:	int3   
10042e0f:	int3   
10042e10:	mov    eax,DWORD PTR [edx]
10042e12:	push   ebp
10042e13:	mov    ebp,DWORD PTR [esp+0x8]
10042e17:	push   esi
10042e18:	mov    ecx,eax
10042e1a:	and    ecx,0xff0000
10042e20:	mov    esi,eax
10042e22:	shr    esi,0x10
10042e25:	or     ecx,esi
10042e27:	mov    esi,eax
10042e29:	and    esi,0xff00
10042e2f:	shl    eax,0x10
10042e32:	or     esi,eax
10042e34:	shr    ecx,0x8
10042e37:	shl    esi,0x8
10042e3a:	or     ecx,esi
10042e3c:	cmp    ecx,0x50435245
10042e42:	je     0x10042e49
10042e44:	pop    esi
10042e45:	xor    eax,eax
10042e47:	pop    ebp
10042e48:	ret    
10042e49:	push   edi
10042e4a:	mov    esi,edx
10042e4c:	mov    ecx,0xa
10042e51:	mov    edi,ebp
10042e53:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
10042e55:	mov    eax,DWORD PTR [edx+0x4]
10042e58:	mov    ecx,eax
10042e5a:	and    ecx,0xff0000
10042e60:	mov    esi,eax
10042e62:	shr    esi,0x10
10042e65:	or     ecx,esi
10042e67:	shr    ecx,0x8
10042e6a:	mov    esi,eax
10042e6c:	shl    eax,0x10
10042e6f:	and    esi,0xff00
10042e75:	or     esi,eax
10042e77:	shl    esi,0x8
10042e7a:	or     ecx,esi
10042e7c:	mov    DWORD PTR [ebp+0x4],ecx
10042e7f:	mov    eax,DWORD PTR [edx+0x8]
10042e82:	mov    ecx,eax
10042e84:	and    ecx,0xff0000
10042e8a:	mov    esi,eax
10042e8c:	shr    esi,0x10
10042e8f:	or     ecx,esi
10042e91:	shr    ecx,0x8
10042e94:	mov    esi,eax
10042e96:	shl    eax,0x10
10042e99:	and    esi,0xff00
10042e9f:	or     esi,eax
10042ea1:	shl    esi,0x8
10042ea4:	or     ecx,esi
10042ea6:	test   ebx,ebx
10042ea8:	mov    DWORD PTR [ebp+0x8],ecx
10042eab:	movzx  eax,WORD PTR [edx+0xc]
10042eaf:	movzx  cx,ah
10042eb3:	mov    ch,al
10042eb5:	mov    WORD PTR [ebp+0xc],cx
10042eb9:	movzx  eax,WORD PTR [edx+0x10]
10042ebd:	movzx  cx,ah
10042ec1:	mov    ch,al
10042ec3:	mov    WORD PTR [ebp+0x10],cx
10042ec7:	movzx  eax,WORD PTR [edx+0x12]
10042ecb:	movzx  cx,ah
10042ecf:	mov    ch,al
10042ed1:	mov    WORD PTR [ebp+0x12],cx
10042ed5:	movzx  eax,WORD PTR [edx+0x14]
10042ed9:	movzx  cx,ah
10042edd:	mov    ch,al
10042edf:	mov    WORD PTR [ebp+0x14],cx
10042ee3:	movzx  eax,WORD PTR [edx+0x16]
10042ee7:	movzx  cx,ah
10042eeb:	mov    ch,al
10042eed:	mov    WORD PTR [ebp+0x16],cx
10042ef1:	movzx  eax,WORD PTR [edx+0x18]
10042ef5:	movzx  cx,ah
10042ef9:	mov    ch,al
10042efb:	mov    WORD PTR [ebp+0x18],cx
10042eff:	movzx  eax,WORD PTR [edx+0x1a]
10042f03:	movzx  cx,ah
10042f07:	mov    ch,al
10042f09:	mov    WORD PTR [ebp+0x1a],cx
10042f0d:	movzx  eax,WORD PTR [edx+0x1c]
10042f11:	movzx  dx,ah
10042f15:	mov    dh,al
10042f17:	mov    WORD PTR [ebp+0x1c],dx
10042f1b:	je     0x10042f7c
10042f1d:	mov    edx,DWORD PTR [esp+0x14]
10042f21:	mov    ecx,0xa
10042f26:	mov    esi,ebx
10042f28:	mov    edi,edx
10042f2a:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
10042f2c:	mov    eax,DWORD PTR [ebx]
10042f2e:	mov    ecx,eax
10042f30:	and    ecx,0xff0000
10042f36:	mov    esi,eax
10042f38:	shr    esi,0x10
10042f3b:	or     ecx,esi
10042f3d:	mov    esi,eax
10042f3f:	shl    esi,0x10
10042f42:	and    eax,0xff00
10042f47:	or     esi,eax
10042f49:	shl    esi,0x8
10042f4c:	shr    ecx,0x8
10042f4f:	or     ecx,esi
10042f51:	mov    DWORD PTR [edx],ecx
10042f53:	mov    eax,DWORD PTR [ebx+0x4]
10042f56:	mov    ecx,eax
10042f58:	mov    esi,eax
10042f5a:	shr    esi,0x10
10042f5d:	and    ecx,0xff0000
10042f63:	or     ecx,esi
10042f65:	mov    esi,eax
10042f67:	shl    esi,0x10
10042f6a:	and    eax,0xff00
10042f6f:	or     esi,eax
10042f71:	shr    ecx,0x8
10042f74:	shl    esi,0x8
10042f77:	or     ecx,esi
10042f79:	mov    DWORD PTR [edx+0x4],ecx
10042f7c:	pop    edi
10042f7d:	pop    esi
10042f7e:	mov    eax,ebp
10042f80:	pop    ebp
10042f81:	ret    
10042f82:	jmp    0x100435f8
10042f87:	cmp    ecx,DWORD PTR ds:0x1007e030
10042f8d:	jne    0x10042f91
10042f8f:	repz ret 
10042f91:	jmp    0x10046b06
10042f96:	push   ebp
10042f97:	mov    ebp,esp
10042f99:	mov    eax,DWORD PTR [ebp+0x14]
10042f9c:	push   esi
10042f9d:	push   edi
10042f9e:	xor    edi,edi
10042fa0:	cmp    eax,edi
10042fa2:	je     0x10042feb
10042fa4:	cmp    DWORD PTR [ebp+0x8],edi
10042fa7:	jne    0x10042fc4
10042fa9:	call   0x10046c45
10042fae:	push   0x16
10042fb0:	pop    esi
10042fb1:	mov    DWORD PTR [eax],esi
10042fb3:	push   edi
10042fb4:	push   edi
10042fb5:	push   edi
10042fb6:	push   edi
10042fb7:	push   edi
10042fb8:	call   0x1004347c
10042fbd:	add    esp,0x14
10042fc0:	mov    eax,esi
10042fc2:	jmp    0x10042fed
10042fc4:	cmp    DWORD PTR [ebp+0x10],edi
10042fc7:	je     0x10042fa9
10042fc9:	cmp    DWORD PTR [ebp+0xc],eax
10042fcc:	jae    0x10042fdc
10042fce:	call   0x10046c45
10042fd3:	push   0x22
10042fd5:	pop    ecx
10042fd6:	mov    DWORD PTR [eax],ecx
10042fd8:	mov    esi,ecx
10042fda:	jmp    0x10042fb3
10042fdc:	push   eax
10042fdd:	push   DWORD PTR [ebp+0x10]
10042fe0:	push   DWORD PTR [ebp+0x8]
10042fe3:	call   0x100457b0
10042fe8:	add    esp,0xc
10042feb:	xor    eax,eax
10042fed:	pop    edi
10042fee:	pop    esi
10042fef:	pop    ebp
10042ff0:	ret    
10042ff1:	mov    eax,ecx
10042ff3:	and    DWORD PTR [eax+0x4],0x0
10042ff7:	and    DWORD PTR [eax+0x8],0x0
10042ffb:	mov    DWORD PTR [eax],0x100665a0
10043001:	ret    
10043002:	push   ebx
10043003:	mov    ebx,DWORD PTR [esp+0x8]
10043007:	push   esi
10043008:	push   edi
10043009:	mov    edi,ecx
1004300b:	mov    DWORD PTR [edi],0x100665a0
10043011:	mov    eax,DWORD PTR [ebx]
10043013:	test   eax,eax
10043015:	je     0x1004303d
10043017:	push   eax
10043018:	call   0x10043100
1004301d:	mov    esi,eax
1004301f:	inc    esi
10043020:	push   esi
10043021:	call   0x1004507d
10043026:	test   eax,eax
10043028:	pop    ecx
10043029:	pop    ecx
1004302a:	mov    DWORD PTR [edi+0x4],eax
1004302d:	je     0x10043041
1004302f:	push   DWORD PTR [ebx]
10043031:	push   esi
10043032:	push   eax
10043033:	call   0x10046c89
10043038:	add    esp,0xc
1004303b:	jmp    0x10043041
1004303d:	and    DWORD PTR [edi+0x4],0x0
10043041:	mov    DWORD PTR [edi+0x8],0x1
10043048:	mov    eax,edi
1004304a:	pop    edi
1004304b:	pop    esi
1004304c:	pop    ebx
1004304d:	ret    0x4
10043050:	mov    eax,ecx
10043052:	mov    ecx,DWORD PTR [esp+0x4]
10043056:	mov    DWORD PTR [eax],0x100665a0
1004305c:	mov    ecx,DWORD PTR [ecx]
1004305e:	and    DWORD PTR [eax+0x8],0x0
10043062:	mov    DWORD PTR [eax+0x4],ecx
10043065:	ret    0x8
10043068:	push   ebx
10043069:	mov    ebx,DWORD PTR [esp+0x8]
1004306d:	push   esi
1004306e:	mov    esi,ecx
10043070:	mov    DWORD PTR [esi],0x100665a0
10043076:	mov    eax,DWORD PTR [ebx+0x8]
10043079:	mov    DWORD PTR [esi+0x8],eax
1004307c:	test   eax,eax
1004307e:	mov    eax,DWORD PTR [ebx+0x4]
10043081:	push   edi
10043082:	je     0x100430b5
10043084:	test   eax,eax
10043086:	je     0x100430af
10043088:	push   eax
10043089:	call   0x10043100
1004308e:	mov    edi,eax
10043090:	inc    edi
10043091:	push   edi
10043092:	call   0x1004507d
10043097:	test   eax,eax
10043099:	pop    ecx
1004309a:	pop    ecx
1004309b:	mov    DWORD PTR [esi+0x4],eax
1004309e:	je     0x100430b8
100430a0:	push   DWORD PTR [ebx+0x4]
100430a3:	push   edi
100430a4:	push   eax
100430a5:	call   0x10046c89
100430aa:	add    esp,0xc
100430ad:	jmp    0x100430b8
100430af:	and    DWORD PTR [esi+0x4],0x0
100430b3:	jmp    0x100430b8
100430b5:	mov    DWORD PTR [esi+0x4],eax
100430b8:	pop    edi
100430b9:	mov    eax,esi
100430bb:	pop    esi
100430bc:	pop    ebx
100430bd:	ret    0x4
100430c0:	cmp    DWORD PTR [ecx+0x8],0x0
100430c4:	mov    DWORD PTR [ecx],0x100665a0
100430ca:	je     0x100430d5
100430cc:	push   DWORD PTR [ecx+0x4]
100430cf:	call   0x100435f8
100430d4:	pop    ecx
100430d5:	ret    
100430d6:	mov    eax,DWORD PTR [ecx+0x4]
100430d9:	test   eax,eax
100430db:	jne    0x100430e2
100430dd:	mov    eax,0x100665a8
100430e2:	ret    
100430e3:	push   esi
100430e4:	mov    esi,ecx
100430e6:	call   0x100430c0
100430eb:	test   BYTE PTR [esp+0x8],0x1
100430f0:	je     0x100430f9
100430f2:	push   esi
100430f3:	call   0x10042f82
100430f8:	pop    ecx
100430f9:	mov    eax,esi
100430fb:	pop    esi
100430fc:	ret    0x4
100430ff:	int3   
10043100:	mov    ecx,DWORD PTR [esp+0x4]
10043104:	test   ecx,0x3
1004310a:	je     0x10043130
1004310c:	mov    al,BYTE PTR [ecx]
1004310e:	add    ecx,0x1
10043111:	test   al,al
10043113:	je     0x10043163
10043115:	test   ecx,0x3
1004311b:	jne    0x1004310c
1004311d:	add    eax,0x0
10043122:	lea    esp,[esp+0x0]
10043129:	lea    esp,[esp+0x0]
10043130:	mov    eax,DWORD PTR [ecx]
10043132:	mov    edx,0x7efefeff
10043137:	add    edx,eax
10043139:	xor    eax,0xffffffff
1004313c:	xor    eax,edx
1004313e:	add    ecx,0x4
10043141:	test   eax,0x81010100
10043146:	je     0x10043130
10043148:	mov    eax,DWORD PTR [ecx-0x4]
1004314b:	test   al,al
1004314d:	je     0x10043181
1004314f:	test   ah,ah
10043151:	je     0x10043177
10043153:	test   eax,0xff0000
10043158:	je     0x1004316d
1004315a:	test   eax,0xff000000
1004315f:	je     0x10043163
10043161:	jmp    0x10043130
10043163:	lea    eax,[ecx-0x1]
10043166:	mov    ecx,DWORD PTR [esp+0x4]
1004316a:	sub    eax,ecx
1004316c:	ret    
1004316d:	lea    eax,[ecx-0x2]
10043170:	mov    ecx,DWORD PTR [esp+0x4]
10043174:	sub    eax,ecx
10043176:	ret    
10043177:	lea    eax,[ecx-0x3]
1004317a:	mov    ecx,DWORD PTR [esp+0x4]
1004317e:	sub    eax,ecx
10043180:	ret    
10043181:	lea    eax,[ecx-0x4]
10043184:	mov    ecx,DWORD PTR [esp+0x4]
10043188:	sub    eax,ecx
1004318a:	ret    
1004318b:	push   0x14
1004318d:	push   0x10074648
10043192:	call   0x10046d84
10043197:	and    DWORD PTR [ebp-0x4],0x0
1004319b:	dec    DWORD PTR [ebp+0x10]
1004319e:	js     0x100431da
100431a0:	mov    ecx,DWORD PTR [ebp+0x8]
100431a3:	sub    ecx,DWORD PTR [ebp+0xc]
100431a6:	mov    DWORD PTR [ebp+0x8],ecx
100431a9:	call   DWORD PTR [ebp+0x14]
100431ac:	jmp    0x1004319b
100431ae:	mov    eax,DWORD PTR [ebp-0x14]
100431b1:	mov    DWORD PTR [ebp-0x1c],eax
100431b4:	mov    eax,DWORD PTR [ebp-0x1c]
100431b7:	mov    eax,DWORD PTR [eax]
100431b9:	mov    DWORD PTR [ebp-0x20],eax
100431bc:	mov    eax,DWORD PTR [ebp-0x20]
100431bf:	cmp    DWORD PTR [eax],0xe06d7363
100431c5:	je     0x100431d2
100431c7:	mov    DWORD PTR [ebp-0x24],0x0
100431ce:	mov    eax,DWORD PTR [ebp-0x24]
100431d1:	ret    
100431d2:	call   0x10046cee
100431d7:	mov    esp,DWORD PTR [ebp-0x18]
100431da:	mov    DWORD PTR [ebp-0x4],0xfffffffe
100431e1:	call   0x10046dc9
100431e6:	ret    0x10
100431e9:	push   0xc
100431eb:	push   0x10074668
100431f0:	call   0x10046d84
100431f5:	and    DWORD PTR [ebp-0x1c],0x0
100431f9:	mov    esi,DWORD PTR [ebp+0xc]
100431fc:	mov    eax,esi
100431fe:	imul   eax,DWORD PTR [ebp+0x10]
10043202:	add    DWORD PTR [ebp+0x8],eax
10043205:	and    DWORD PTR [ebp-0x4],0x0
10043209:	dec    DWORD PTR [ebp+0x10]
1004320c:	js     0x10043219
1004320e:	sub    DWORD PTR [ebp+0x8],esi
10043211:	mov    ecx,DWORD PTR [ebp+0x8]
10043214:	call   DWORD PTR [ebp+0x14]
10043217:	jmp    0x10043209
10043219:	mov    DWORD PTR [ebp-0x1c],0x1
10043220:	mov    DWORD PTR [ebp-0x4],0xfffffffe
10043227:	call   0x10043234
1004322c:	call   0x10046dc9
10043231:	ret    0x10
10043234:	cmp    DWORD PTR [ebp-0x1c],0x0
10043238:	jne    0x1004324b
1004323a:	push   DWORD PTR [ebp+0x14]
1004323d:	push   DWORD PTR [ebp+0x10]
10043240:	push   DWORD PTR [ebp+0xc]
10043243:	push   DWORD PTR [ebp+0x8]
10043246:	call   0x1004318b
1004324b:	ret    
1004324c:	push   ecx
1004324d:	push   ebx
1004324e:	push   ebp
1004324f:	push   esi
10043250:	push   edi
10043251:	push   DWORD PTR ds:0x100825b0
10043257:	call   0x10046fe2
1004325c:	push   DWORD PTR ds:0x100825ac
10043262:	mov    esi,eax
10043264:	mov    DWORD PTR [esp+0x18],esi
10043268:	call   0x10046fe2
1004326d:	mov    edi,eax
1004326f:	cmp    edi,esi
10043271:	pop    ecx
10043272:	pop    ecx
10043273:	jb     0x100432f1
10043275:	mov    ebx,edi
10043277:	sub    ebx,esi
10043279:	lea    ebp,[ebx+0x4]
1004327c:	cmp    ebp,0x4
1004327f:	jb     0x100432f1
10043281:	push   esi
10043282:	call   0x100475e5
10043287:	mov    esi,eax
10043289:	cmp    esi,ebp
1004328b:	pop    ecx
1004328c:	jae    0x100432d8
1004328e:	mov    eax,0x800
10043293:	cmp    esi,eax
10043295:	jae    0x10043299
10043297:	mov    eax,esi
10043299:	add    eax,esi
1004329b:	cmp    eax,esi
1004329d:	jb     0x100432af
1004329f:	push   eax
100432a0:	push   DWORD PTR [esp+0x14]
100432a4:	call   0x1004759a
100432a9:	test   eax,eax
100432ab:	pop    ecx
100432ac:	pop    ecx
100432ad:	jne    0x100432c6
100432af:	lea    eax,[esi+0x10]
100432b2:	cmp    eax,esi
100432b4:	jb     0x100432f1
100432b6:	push   eax
100432b7:	push   DWORD PTR [esp+0x14]
100432bb:	call   0x1004759a
100432c0:	test   eax,eax
100432c2:	pop    ecx
100432c3:	pop    ecx
100432c4:	je     0x100432f1
100432c6:	sar    ebx,0x2
100432c9:	push   eax
100432ca:	lea    edi,[eax+ebx*4]
100432cd:	call   0x10046f76
100432d2:	pop    ecx
100432d3:	mov    ds:0x100825b0,eax
100432d8:	mov    esi,DWORD PTR [esp+0x18]
100432dc:	mov    DWORD PTR [edi],esi
100432de:	add    edi,0x4
100432e1:	push   edi
100432e2:	call   0x10046f76
100432e7:	mov    ds:0x100825ac,eax
100432ec:	pop    ecx
100432ed:	mov    eax,esi
100432ef:	jmp    0x100432f3
100432f1:	xor    eax,eax
100432f3:	pop    edi
100432f4:	pop    esi
100432f5:	pop    ebp
100432f6:	pop    ebx
100432f7:	pop    ecx
100432f8:	ret    
100432f9:	push   esi
100432fa:	push   0x4
100432fc:	push   0x20
100432fe:	call   0x10047552
10043303:	mov    esi,eax
10043305:	push   esi
10043306:	call   0x10046f76
1004330b:	add    esp,0xc
1004330e:	test   esi,esi
10043310:	mov    ds:0x100825b0,eax
10043315:	mov    ds:0x100825ac,eax
1004331a:	jne    0x10043321
1004331c:	push   0x18
1004331e:	pop    eax
1004331f:	pop    esi
10043320:	ret    
10043321:	and    DWORD PTR [esi],0x0
10043324:	xor    eax,eax
10043326:	pop    esi
10043327:	ret    
10043328:	push   0xc
1004332a:	push   0x10074688
1004332f:	call   0x10046d84
10043334:	call   0x100476e7
10043339:	and    DWORD PTR [ebp-0x4],0x0
1004333d:	push   DWORD PTR [ebp+0x8]
10043340:	call   0x1004324c
10043345:	pop    ecx
10043346:	mov    DWORD PTR [ebp-0x1c],eax
10043349:	mov    DWORD PTR [ebp-0x4],0xfffffffe
10043350:	call   0x1004335e
10043355:	mov    eax,DWORD PTR [ebp-0x1c]
10043358:	call   0x10046dc9
1004335d:	ret    
1004335e:	call   0x100476f0
10043363:	ret    
10043364:	push   DWORD PTR [esp+0x4]
10043368:	call   0x10043328
1004336d:	neg    eax
1004336f:	sbb    eax,eax
10043371:	neg    eax
10043373:	pop    ecx
10043374:	dec    eax
10043375:	ret    
10043376:	mov    eax,DWORD PTR [esp+0x4]
1004337a:	mov    ds:0x1007fa80,eax
1004337f:	ret    
10043380:	push   ebp
10043381:	lea    ebp,[esp-0x2a8]
10043388:	sub    esp,0x328
1004338e:	mov    eax,ds:0x1007e030
10043393:	xor    eax,ebp
10043395:	mov    DWORD PTR [ebp+0x2a4],eax
1004339b:	push   esi
1004339c:	mov    DWORD PTR [ebp+0x88],eax
100433a2:	mov    DWORD PTR [ebp+0x84],ecx
100433a8:	mov    DWORD PTR [ebp+0x80],edx
100433ae:	mov    DWORD PTR [ebp+0x7c],ebx
100433b1:	mov    DWORD PTR [ebp+0x78],esi
100433b4:	mov    DWORD PTR [ebp+0x74],edi
100433b7:	data16 mov WORD PTR [ebp+0xa0],ss
100433be:	data16 mov WORD PTR [ebp+0x94],cs
100433c5:	data16 mov WORD PTR [ebp+0x70],ds
100433c9:	data16 mov WORD PTR [ebp+0x6c],es
100433cd:	data16 mov WORD PTR [ebp+0x68],fs
100433d1:	data16 mov WORD PTR [ebp+0x64],gs
100433d5:	pushf  
100433d6:	pop    DWORD PTR [ebp+0x98]
100433dc:	mov    esi,DWORD PTR [ebp+0x2ac]
100433e2:	lea    eax,[ebp+0x2ac]
100433e8:	mov    DWORD PTR [ebp+0x9c],eax
100433ee:	mov    DWORD PTR [ebp-0x28],0x10001
100433f5:	mov    DWORD PTR [ebp+0x90],esi
100433fb:	mov    eax,DWORD PTR [eax-0x4]
100433fe:	push   0x50
10043400:	mov    DWORD PTR [ebp+0x8c],eax
10043406:	lea    eax,[ebp-0x80]
10043409:	push   0x0
1004340b:	push   eax
1004340c:	call   0x10045cf0
10043411:	lea    eax,[ebp-0x80]
10043414:	mov    DWORD PTR [ebp-0x30],eax
10043417:	lea    eax,[ebp-0x28]
1004341a:	add    esp,0xc
1004341d:	mov    DWORD PTR [ebp-0x80],0xc000000d
10043424:	mov    DWORD PTR [ebp-0x74],esi
10043427:	mov    DWORD PTR [ebp-0x2c],eax
1004342a:	call   DWORD PTR ds:0x10066184
10043430:	push   0x0
10043432:	mov    esi,eax
10043434:	call   DWORD PTR ds:0x10066180
1004343a:	lea    eax,[ebp-0x30]
1004343d:	push   eax
1004343e:	call   DWORD PTR ds:0x1006617c
10043444:	test   eax,eax
10043446:	jne    0x10043454
10043448:	test   esi,esi
1004344a:	jne    0x10043454
1004344c:	push   0x2
1004344e:	call   0x10047970
10043453:	pop    ecx
10043454:	push   0xc000000d
10043459:	call   DWORD PTR ds:0x10066108
1004345f:	push   eax
10043460:	call   DWORD PTR ds:0x10066178
10043466:	mov    ecx,DWORD PTR [ebp+0x2a4]
1004346c:	xor    ecx,ebp
1004346e:	pop    esi
1004346f:	call   0x10042f87
10043474:	add    ebp,0x2a8
1004347a:	leave  
1004347b:	ret    
1004347c:	push   ebp
1004347d:	mov    ebp,esp
1004347f:	push   DWORD PTR ds:0x1007fa80
10043485:	call   0x10046fe2
1004348a:	test   eax,eax
1004348c:	pop    ecx
1004348d:	je     0x10043492
1004348f:	pop    ebp
10043490:	jmp    eax
10043492:	push   0x2
10043494:	call   0x10047970
10043499:	pop    ecx
1004349a:	pop    ebp
1004349b:	jmp    0x10043380
100434a0:	xor    eax,eax
100434a2:	push   eax
100434a3:	push   eax
100434a4:	push   eax
100434a5:	push   eax
100434a6:	push   eax
100434a7:	call   0x1004347c
100434ac:	add    esp,0x14
100434af:	ret    
100434b0:	jmp    0x10042f82
100434b5:	push   ebp
100434b6:	mov    ebp,esp
100434b8:	push   esi
100434b9:	mov    esi,DWORD PTR [ebp+0x14]
100434bc:	push   edi
100434bd:	xor    edi,edi
100434bf:	cmp    esi,edi
100434c1:	jne    0x100434c7
100434c3:	xor    eax,eax
100434c5:	jmp    0x1004352c
100434c7:	cmp    DWORD PTR [ebp+0x8],edi
100434ca:	jne    0x100434e7
100434cc:	call   0x10046c45
100434d1:	push   0x16
100434d3:	pop    esi
100434d4:	mov    DWORD PTR [eax],esi
100434d6:	push   edi
100434d7:	push   edi
100434d8:	push   edi
100434d9:	push   edi
100434da:	push   edi
100434db:	call   0x1004347c
100434e0:	add    esp,0x14
100434e3:	mov    eax,esi
100434e5:	jmp    0x1004352c
100434e7:	cmp    DWORD PTR [ebp+0x10],edi
100434ea:	je     0x10043502
100434ec:	cmp    DWORD PTR [ebp+0xc],esi
100434ef:	jb     0x10043502
100434f1:	push   esi
100434f2:	push   DWORD PTR [ebp+0x10]
100434f5:	push   DWORD PTR [ebp+0x8]
100434f8:	call   0x10045270
100434fd:	add    esp,0xc
10043500:	jmp    0x100434c3
10043502:	push   DWORD PTR [ebp+0xc]
10043505:	push   edi
10043506:	push   DWORD PTR [ebp+0x8]
10043509:	call   0x10045cf0
1004350e:	add    esp,0xc
10043511:	cmp    DWORD PTR [ebp+0x10],edi
10043514:	je     0x100434cc
10043516:	cmp    DWORD PTR [ebp+0xc],esi
10043519:	jae    0x10043529
1004351b:	call   0x10046c45
10043520:	push   0x22
10043522:	pop    ecx
10043523:	mov    DWORD PTR [eax],ecx
10043525:	mov    esi,ecx
10043527:	jmp    0x100434d6
10043529:	push   0x16
1004352b:	pop    eax
1004352c:	pop    edi
1004352d:	pop    esi
1004352e:	pop    ebp
1004352f:	ret    
10043530:	push   ecx
10043531:	mov    DWORD PTR [ecx],0x100665c0
10043537:	call   0x10047978
1004353c:	pop    ecx
1004353d:	ret    
1004353e:	push   esi
1004353f:	mov    esi,ecx
10043541:	call   0x10043530
10043546:	test   BYTE PTR [esp+0x8],0x1
1004354b:	je     0x10043554
1004354d:	push   esi
1004354e:	call   0x10042f82
10043553:	pop    ecx
10043554:	mov    eax,esi
10043556:	pop    esi
10043557:	ret    0x4
1004355a:	mov    eax,DWORD PTR [esp+0x4]
1004355e:	add    ecx,0x9
10043561:	push   ecx
10043562:	add    eax,0x9
10043565:	push   eax
10043566:	call   0x100479f0
1004356b:	neg    eax
1004356d:	pop    ecx
1004356e:	sbb    eax,eax
10043570:	pop    ecx
10043571:	inc    eax
10043572:	ret    0x4
10043575:	push   esi
10043576:	push   0x1
10043578:	push   0x1007e02c
1004357d:	mov    esi,ecx
1004357f:	call   0x10043050
10043584:	mov    DWORD PTR [esi],0x100665c8
1004358a:	mov    eax,esi
1004358c:	pop    esi
1004358d:	ret    
1004358e:	push   ebp
1004358f:	mov    ebp,esp
10043591:	sub    esp,0xc
10043594:	jmp    0x100435a3
10043596:	push   DWORD PTR [ebp+0x8]
10043599:	call   0x10047a82
1004359e:	test   eax,eax
100435a0:	pop    ecx
100435a1:	je     0x100435b2
100435a3:	push   DWORD PTR [ebp+0x8]
100435a6:	call   0x1004507d
100435ab:	test   eax,eax
100435ad:	pop    ecx
100435ae:	je     0x10043596
100435b0:	leave  
100435b1:	ret    
100435b2:	test   BYTE PTR ds:0x1007fa90,0x1
100435b9:	mov    esi,0x1007fa84
100435be:	jne    0x100435d9
100435c0:	or     DWORD PTR ds:0x1007fa90,0x1
100435c7:	mov    ecx,esi
100435c9:	call   0x10043575
100435ce:	push   0x100659ee
100435d3:	call   0x10043364
100435d8:	pop    ecx
100435d9:	push   esi
100435da:	lea    ecx,[ebp-0xc]
100435dd:	call   0x10043068
100435e2:	push   0x10074e20
100435e7:	lea    eax,[ebp-0xc]
100435ea:	push   eax
100435eb:	mov    DWORD PTR [ebp-0xc],0x100665c8
100435f2:	call   0x10047aa4
100435f7:	int3   
100435f8:	push   0xc
100435fa:	push   0x100746a8
100435ff:	call   0x10046d84
10043604:	mov    esi,DWORD PTR [ebp+0x8]
10043607:	test   esi,esi
10043609:	je     0x10043680
1004360b:	cmp    DWORD PTR ds:0x100825a0,0x3
10043612:	jne    0x10043657
10043614:	push   0x4
10043616:	call   0x10047d8d
1004361b:	pop    ecx
1004361c:	and    DWORD PTR [ebp-0x4],0x0
10043620:	push   esi
10043621:	call   0x10047e06
10043626:	pop    ecx
10043627:	mov    DWORD PTR [ebp-0x1c],eax
1004362a:	test   eax,eax
1004362c:	je     0x10043637
1004362e:	push   esi
1004362f:	push   eax
10043630:	call   0x10047e31
10043635:	pop    ecx
10043636:	pop    ecx
10043637:	mov    DWORD PTR [ebp-0x4],0xfffffffe
1004363e:	call   0x1004364e
10043643:	cmp    DWORD PTR [ebp-0x1c],0x0
10043647:	jne    0x10043680
10043649:	push   DWORD PTR [ebp+0x8]
1004364c:	jmp    0x10043658
1004364e:	push   0x4
10043650:	call   0x10047cb5
10043655:	pop    ecx
10043656:	ret    
10043657:	push   esi
10043658:	push   0x0
1004365a:	push   DWORD PTR ds:0x1007fe38
10043660:	call   DWORD PTR ds:0x10066188
10043666:	test   eax,eax
10043668:	jne    0x10043680
1004366a:	call   0x10046c45
1004366f:	mov    esi,eax
10043671:	call   DWORD PTR ds:0x100660cc
10043677:	push   eax
10043678:	call   0x10046c0a
1004367d:	mov    DWORD PTR [esi],eax
1004367f:	pop    ecx
10043680:	call   0x10046dc9
10043685:	ret    
10043686:	push   0xc
10043688:	push   0x100746c8
1004368d:	call   0x10046d84
10043692:	mov    ecx,DWORD PTR [ebp+0x8]
10043695:	xor    edi,edi
10043697:	cmp    ecx,edi
10043699:	jbe    0x100436c9
1004369b:	push   0xffffffe0
1004369d:	pop    eax
1004369e:	xor    edx,edx
100436a0:	div    ecx
100436a2:	cmp    eax,DWORD PTR [ebp+0xc]
100436a5:	sbb    eax,eax
100436a7:	inc    eax
100436a8:	jne    0x100436c9
100436aa:	call   0x10046c45
100436af:	mov    DWORD PTR [eax],0xc
100436b5:	push   edi
100436b6:	push   edi
100436b7:	push   edi
100436b8:	push   edi
100436b9:	push   edi
100436ba:	call   0x1004347c
100436bf:	add    esp,0x14
100436c2:	xor    eax,eax
100436c4:	jmp    0x1004379e
100436c9:	imul   ecx,DWORD PTR [ebp+0xc]
100436cd:	mov    esi,ecx
100436cf:	mov    DWORD PTR [ebp+0x8],esi
100436d2:	cmp    esi,edi
100436d4:	jne    0x100436d9
100436d6:	xor    esi,esi
100436d8:	inc    esi
100436d9:	xor    ebx,ebx
100436db:	mov    DWORD PTR [ebp-0x1c],ebx
100436de:	cmp    esi,0xffffffe0
100436e1:	ja     0x1004374c
100436e3:	cmp    DWORD PTR ds:0x100825a0,0x3
100436ea:	jne    0x10043737
100436ec:	add    esi,0xf
100436ef:	and    esi,0xfffffff0
100436f2:	mov    DWORD PTR [ebp+0xc],esi
100436f5:	mov    eax,DWORD PTR [ebp+0x8]
100436f8:	cmp    eax,DWORD PTR ds:0x10082590
100436fe:	ja     0x10043737
10043700:	push   0x4
10043702:	call   0x10047d8d
10043707:	pop    ecx
10043708:	mov    DWORD PTR [ebp-0x4],edi
1004370b:	push   DWORD PTR [ebp+0x8]
1004370e:	call   0x100485da
10043713:	pop    ecx
10043714:	mov    DWORD PTR [ebp-0x1c],eax
10043717:	mov    DWORD PTR [ebp-0x4],0xfffffffe
1004371e:	call   0x10043782
10043723:	mov    ebx,DWORD PTR [ebp-0x1c]
10043726:	cmp    ebx,edi
10043728:	je     0x1004373b
1004372a:	push   DWORD PTR [ebp+0x8]
1004372d:	push   edi
1004372e:	push   ebx
1004372f:	call   0x10045cf0
10043734:	add    esp,0xc
10043737:	cmp    ebx,edi
10043739:	jne    0x1004379c
1004373b:	push   esi
1004373c:	push   0x8
1004373e:	push   DWORD PTR ds:0x1007fe38
10043744:	call   DWORD PTR ds:0x1006618c
1004374a:	mov    ebx,eax
1004374c:	cmp    ebx,edi
1004374e:	jne    0x1004379c
10043750:	cmp    DWORD PTR ds:0x1007ff94,edi
10043756:	je     0x1004378b
10043758:	push   esi
10043759:	call   0x10047a82
1004375e:	pop    ecx
1004375f:	test   eax,eax
10043761:	jne    0x100436d9
10043767:	mov    eax,DWORD PTR [ebp+0x10]
1004376a:	cmp    eax,edi
1004376c:	je     0x100436c2
10043772:	mov    DWORD PTR [eax],0xc
10043778:	jmp    0x100436c2
1004377d:	xor    edi,edi
1004377f:	mov    esi,DWORD PTR [ebp+0xc]
10043782:	push   0x4
10043784:	call   0x10047cb5
10043789:	pop    ecx
1004378a:	ret    
1004378b:	cmp    ebx,edi
1004378d:	jne    0x1004379c
1004378f:	mov    eax,DWORD PTR [ebp+0x10]
10043792:	cmp    eax,edi
10043794:	je     0x1004379c
10043796:	mov    DWORD PTR [eax],0xc
1004379c:	mov    eax,ebx
1004379e:	call   0x10046dc9
100437a3:	ret    
100437a4:	push   ebp
100437a5:	mov    ebp,esp
100437a7:	push   ecx
100437a8:	and    DWORD PTR [ebp-0x4],0x0
100437ac:	push   edi
100437ad:	lea    eax,[ebp-0x4]
100437b0:	push   eax
100437b1:	push   DWORD PTR [ebp+0xc]
100437b4:	push   DWORD PTR [ebp+0x8]
100437b7:	call   0x10043686
100437bc:	mov    edi,eax
100437be:	add    esp,0xc
100437c1:	test   edi,edi
100437c3:	jne    0x100437de
100437c5:	push   esi
100437c6:	mov    esi,DWORD PTR [ebp-0x4]
100437c9:	test   esi,esi
100437cb:	je     0x100437dd
100437cd:	call   0x10046c45
100437d2:	test   eax,eax
100437d4:	je     0x100437dd
100437d6:	call   0x10046c45
100437db:	mov    DWORD PTR [eax],esi
100437dd:	pop    esi
100437de:	mov    eax,edi
100437e0:	pop    edi
100437e1:	leave  
100437e2:	ret    
100437e3:	mov    eax,DWORD PTR [esp+0x4]
100437e7:	mov    cx,WORD PTR [eax]
100437ea:	inc    eax
100437eb:	inc    eax
100437ec:	test   cx,cx
100437ef:	jne    0x100437e7
100437f1:	sub    eax,DWORD PTR [esp+0x4]
100437f5:	sar    eax,1
100437f7:	dec    eax
100437f8:	ret    
100437f9:	push   DWORD PTR [esp+0x8]
100437fd:	push   0x0
100437ff:	push   DWORD PTR [esp+0xc]
10043803:	push   0x10048a6c
10043808:	call   0x100591cb
1004380d:	add    esp,0x10
10043810:	ret    
10043811:	jmp    0x1004358e
10043816:	push   ebp
10043817:	mov    ebp,esp
10043819:	push   esi
1004381a:	push   edi
1004381b:	mov    edi,DWORD PTR [ebp+0x10]
1004381e:	mov    eax,edi
10043820:	sub    eax,0x0
10043823:	je     0x10044e0e
10043829:	dec    eax
1004382a:	je     0x10044dfd
10043830:	dec    eax
10043831:	je     0x10044dcf
10043837:	dec    eax
10043838:	je     0x10044d87
1004383e:	dec    eax
1004383f:	je     0x10044cfe
10043845:	mov    ecx,DWORD PTR [ebp+0xc]
10043848:	mov    eax,DWORD PTR [ebp+0x8]
1004384b:	push   ebx
1004384c:	push   0x20
1004384e:	pop    edx
1004384f:	jmp    0x10043cc6
10043854:	mov    esi,DWORD PTR [eax]
10043856:	cmp    esi,DWORD PTR [ecx]
10043858:	je     0x100438d6
1004385a:	movzx  esi,BYTE PTR [eax]
1004385d:	movzx  ebx,BYTE PTR [ecx]
10043860:	sub    esi,ebx
10043862:	je     0x10043879
10043864:	xor    ebx,ebx
10043866:	test   esi,esi
10043868:	setg   bl
1004386b:	lea    ebx,[ebx+ebx*1-0x1]
1004386f:	mov    esi,ebx
10043871:	test   esi,esi
10043873:	jne    0x10043ce2
10043879:	movzx  esi,BYTE PTR [eax+0x1]
1004387d:	movzx  ebx,BYTE PTR [ecx+0x1]
10043881:	sub    esi,ebx
10043883:	je     0x1004389a
10043885:	xor    ebx,ebx
10043887:	test   esi,esi
10043889:	setg   bl
1004388c:	lea    ebx,[ebx+ebx*1-0x1]
10043890:	mov    esi,ebx
10043892:	test   esi,esi
10043894:	jne    0x10043ce2
1004389a:	movzx  esi,BYTE PTR [eax+0x2]
1004389e:	movzx  ebx,BYTE PTR [ecx+0x2]
100438a2:	sub    esi,ebx
100438a4:	je     0x100438bb
100438a6:	xor    ebx,ebx
100438a8:	test   esi,esi
100438aa:	setg   bl
100438ad:	lea    ebx,[ebx+ebx*1-0x1]
100438b1:	mov    esi,ebx
100438b3:	test   esi,esi
100438b5:	jne    0x10043ce2
100438bb:	movzx  esi,BYTE PTR [eax+0x3]
100438bf:	movzx  ebx,BYTE PTR [ecx+0x3]
100438c3:	sub    esi,ebx
100438c5:	je     0x100438d8
100438c7:	xor    ebx,ebx
100438c9:	test   esi,esi
100438cb:	setg   bl
100438ce:	lea    ebx,[ebx+ebx*1-0x1]
100438d2:	mov    esi,ebx
100438d4:	jmp    0x100438d8
100438d6:	xor    esi,esi
100438d8:	test   esi,esi
100438da:	jne    0x10043ce2
100438e0:	mov    esi,DWORD PTR [eax+0x4]
100438e3:	cmp    esi,DWORD PTR [ecx+0x4]
100438e6:	je     0x10043966
100438e8:	movzx  esi,BYTE PTR [eax+0x4]
100438ec:	movzx  ebx,BYTE PTR [ecx+0x4]
100438f0:	sub    esi,ebx
100438f2:	je     0x10043909
100438f4:	xor    ebx,ebx
100438f6:	test   esi,esi
100438f8:	setg   bl
100438fb:	lea    ebx,[ebx+ebx*1-0x1]
100438ff:	mov    esi,ebx
10043901:	test   esi,esi
10043903:	jne    0x10043ce2
10043909:	movzx  esi,BYTE PTR [eax+0x5]
1004390d:	movzx  ebx,BYTE PTR [ecx+0x5]
10043911:	sub    esi,ebx
10043913:	je     0x1004392a
10043915:	xor    ebx,ebx
10043917:	test   esi,esi
10043919:	setg   bl
1004391c:	lea    ebx,[ebx+ebx*1-0x1]
10043920:	mov    esi,ebx
10043922:	test   esi,esi
10043924:	jne    0x10043ce2
1004392a:	movzx  esi,BYTE PTR [eax+0x6]
1004392e:	movzx  ebx,BYTE PTR [ecx+0x6]
10043932:	sub    esi,ebx
10043934:	je     0x1004394b
10043936:	xor    ebx,ebx
10043938:	test   esi,esi
1004393a:	setg   bl
1004393d:	lea    ebx,[ebx+ebx*1-0x1]
10043941:	mov    esi,ebx
10043943:	test   esi,esi
10043945:	jne    0x10043ce2
1004394b:	movzx  esi,BYTE PTR [eax+0x7]
1004394f:	movzx  ebx,BYTE PTR [ecx+0x7]
10043953:	sub    esi,ebx
10043955:	je     0x10043968
10043957:	xor    ebx,ebx
10043959:	test   esi,esi
1004395b:	setg   bl
1004395e:	lea    ebx,[ebx+ebx*1-0x1]
10043962:	mov    esi,ebx
10043964:	jmp    0x10043968
10043966:	xor    esi,esi
10043968:	test   esi,esi
1004396a:	jne    0x10043ce2
10043970:	mov    esi,DWORD PTR [eax+0x8]
10043973:	cmp    esi,DWORD PTR [ecx+0x8]
10043976:	je     0x100439f6
10043978:	movzx  esi,BYTE PTR [eax+0x8]
1004397c:	movzx  ebx,BYTE PTR [ecx+0x8]
10043980:	sub    esi,ebx
10043982:	je     0x10043999
10043984:	xor    ebx,ebx
10043986:	test   esi,esi
10043988:	setg   bl
1004398b:	lea    ebx,[ebx+ebx*1-0x1]
1004398f:	mov    esi,ebx
10043991:	test   esi,esi
10043993:	jne    0x10043ce2
10043999:	movzx  esi,BYTE PTR [eax+0x9]
1004399d:	movzx  ebx,BYTE PTR [ecx+0x9]
100439a1:	sub    esi,ebx
100439a3:	je     0x100439ba
100439a5:	xor    ebx,ebx
100439a7:	test   esi,esi
100439a9:	setg   bl
100439ac:	lea    ebx,[ebx+ebx*1-0x1]
100439b0:	mov    esi,ebx
100439b2:	test   esi,esi
100439b4:	jne    0x10043ce2
100439ba:	movzx  esi,BYTE PTR [eax+0xa]
100439be:	movzx  ebx,BYTE PTR [ecx+0xa]
100439c2:	sub    esi,ebx
100439c4:	je     0x100439db
100439c6:	xor    ebx,ebx
100439c8:	test   esi,esi
100439ca:	setg   bl
100439cd:	lea    ebx,[ebx+ebx*1-0x1]
100439d1:	mov    esi,ebx
100439d3:	test   esi,esi
100439d5:	jne    0x10043ce2
100439db:	movzx  esi,BYTE PTR [eax+0xb]
100439df:	movzx  ebx,BYTE PTR [ecx+0xb]
100439e3:	sub    esi,ebx
100439e5:	je     0x100439f8
100439e7:	xor    ebx,ebx
100439e9:	test   esi,esi
100439eb:	setg   bl
100439ee:	lea    ebx,[ebx+ebx*1-0x1]
100439f2:	mov    esi,ebx
100439f4:	jmp    0x100439f8
100439f6:	xor    esi,esi
100439f8:	test   esi,esi
100439fa:	jne    0x10043ce2
10043a00:	mov    esi,DWORD PTR [eax+0xc]
10043a03:	cmp    esi,DWORD PTR [ecx+0xc]
10043a06:	je     0x10043a86
10043a08:	movzx  esi,BYTE PTR [eax+0xc]
10043a0c:	movzx  ebx,BYTE PTR [ecx+0xc]
10043a10:	sub    esi,ebx
10043a12:	je     0x10043a29
10043a14:	xor    ebx,ebx
10043a16:	test   esi,esi
10043a18:	setg   bl
10043a1b:	lea    ebx,[ebx+ebx*1-0x1]
10043a1f:	mov    esi,ebx
10043a21:	test   esi,esi
10043a23:	jne    0x10043ce2
10043a29:	movzx  esi,BYTE PTR [eax+0xd]
10043a2d:	movzx  ebx,BYTE PTR [ecx+0xd]
10043a31:	sub    esi,ebx
10043a33:	je     0x10043a4a
10043a35:	xor    ebx,ebx
10043a37:	test   esi,esi
10043a39:	setg   bl
10043a3c:	lea    ebx,[ebx+ebx*1-0x1]
10043a40:	mov    esi,ebx
10043a42:	test   esi,esi
10043a44:	jne    0x10043ce2
10043a4a:	movzx  esi,BYTE PTR [eax+0xe]
10043a4e:	movzx  ebx,BYTE PTR [ecx+0xe]
10043a52:	sub    esi,ebx
10043a54:	je     0x10043a6b
10043a56:	xor    ebx,ebx
10043a58:	test   esi,esi
10043a5a:	setg   bl
10043a5d:	lea    ebx,[ebx+ebx*1-0x1]
10043a61:	mov    esi,ebx
10043a63:	test   esi,esi
10043a65:	jne    0x10043ce2
10043a6b:	movzx  esi,BYTE PTR [eax+0xf]
10043a6f:	movzx  ebx,BYTE PTR [ecx+0xf]
10043a73:	sub    esi,ebx
10043a75:	je     0x10043a88
10043a77:	xor    ebx,ebx
10043a79:	test   esi,esi
10043a7b:	setg   bl
10043a7e:	lea    ebx,[ebx+ebx*1-0x1]
10043a82:	mov    esi,ebx
10043a84:	jmp    0x10043a88
10043a86:	xor    esi,esi
10043a88:	test   esi,esi
10043a8a:	jne    0x10043ce2
10043a90:	mov    esi,DWORD PTR [eax+0x10]
10043a93:	cmp    esi,DWORD PTR [ecx+0x10]
10043a96:	je     0x10043b16
10043a98:	movzx  ebx,BYTE PTR [ecx+0x10]
10043a9c:	movzx  esi,BYTE PTR [eax+0x10]
10043aa0:	sub    esi,ebx
10043aa2:	je     0x10043ab9
10043aa4:	xor    ebx,ebx
10043aa6:	test   esi,esi
10043aa8:	setg   bl
10043aab:	lea    ebx,[ebx+ebx*1-0x1]
10043aaf:	mov    esi,ebx
10043ab1:	test   esi,esi
10043ab3:	jne    0x10043ce2
10043ab9:	movzx  esi,BYTE PTR [eax+0x11]
10043abd:	movzx  ebx,BYTE PTR [ecx+0x11]
10043ac1:	sub    esi,ebx
10043ac3:	je     0x10043ada
10043ac5:	xor    ebx,ebx
10043ac7:	test   esi,esi
10043ac9:	setg   bl
10043acc:	lea    ebx,[ebx+ebx*1-0x1]
10043ad0:	mov    esi,ebx
10043ad2:	test   esi,esi
10043ad4:	jne    0x10043ce2
10043ada:	movzx  esi,BYTE PTR [eax+0x12]
10043ade:	movzx  ebx,BYTE PTR [ecx+0x12]
10043ae2:	sub    esi,ebx
10043ae4:	je     0x10043afb
10043ae6:	xor    ebx,ebx
10043ae8:	test   esi,esi
10043aea:	setg   bl
10043aed:	lea    ebx,[ebx+ebx*1-0x1]
10043af1:	mov    esi,ebx
10043af3:	test   esi,esi
10043af5:	jne    0x10043ce2
10043afb:	movzx  esi,BYTE PTR [eax+0x13]
10043aff:	movzx  ebx,BYTE PTR [ecx+0x13]
10043b03:	sub    esi,ebx
10043b05:	je     0x10043b18
10043b07:	xor    ebx,ebx
10043b09:	test   esi,esi
10043b0b:	setg   bl
10043b0e:	lea    ebx,[ebx+ebx*1-0x1]
10043b12:	mov    esi,ebx
10043b14:	jmp    0x10043b18
10043b16:	xor    esi,esi
10043b18:	test   esi,esi
10043b1a:	jne    0x10043ce2
10043b20:	mov    esi,DWORD PTR [eax+0x14]
10043b23:	cmp    esi,DWORD PTR [ecx+0x14]
10043b26:	je     0x10043ba6
10043b28:	movzx  esi,BYTE PTR [eax+0x14]
10043b2c:	movzx  ebx,BYTE PTR [ecx+0x14]
10043b30:	sub    esi,ebx
10043b32:	je     0x10043b49
10043b34:	xor    ebx,ebx
10043b36:	test   esi,esi
10043b38:	setg   bl
10043b3b:	lea    ebx,[ebx+ebx*1-0x1]
10043b3f:	mov    esi,ebx
10043b41:	test   esi,esi
10043b43:	jne    0x10043ce2
10043b49:	movzx  esi,BYTE PTR [eax+0x15]
10043b4d:	movzx  ebx,BYTE PTR [ecx+0x15]
10043b51:	sub    esi,ebx
10043b53:	je     0x10043b6a
10043b55:	xor    ebx,ebx
10043b57:	test   esi,esi
10043b59:	setg   bl
10043b5c:	lea    ebx,[ebx+ebx*1-0x1]
10043b60:	mov    esi,ebx
10043b62:	test   esi,esi
10043b64:	jne    0x10043ce2
10043b6a:	movzx  esi,BYTE PTR [eax+0x16]
10043b6e:	movzx  ebx,BYTE PTR [ecx+0x16]
10043b72:	sub    esi,ebx
10043b74:	je     0x10043b8b
10043b76:	xor    ebx,ebx
10043b78:	test   esi,esi
10043b7a:	setg   bl
10043b7d:	lea    ebx,[ebx+ebx*1-0x1]
10043b81:	mov    esi,ebx
10043b83:	test   esi,esi
10043b85:	jne    0x10043ce2
10043b8b:	movzx  esi,BYTE PTR [eax+0x17]
10043b8f:	movzx  ebx,BYTE PTR [ecx+0x17]
10043b93:	sub    esi,ebx
10043b95:	je     0x10043ba8
10043b97:	xor    ebx,ebx
10043b99:	test   esi,esi
10043b9b:	setg   bl
10043b9e:	lea    ebx,[ebx+ebx*1-0x1]
10043ba2:	mov    esi,ebx
10043ba4:	jmp    0x10043ba8
10043ba6:	xor    esi,esi
10043ba8:	test   esi,esi
10043baa:	jne    0x10043ce2
10043bb0:	mov    esi,DWORD PTR [eax+0x18]
10043bb3:	cmp    esi,DWORD PTR [ecx+0x18]
10043bb6:	je     0x10043c36
10043bb8:	movzx  esi,BYTE PTR [eax+0x18]
10043bbc:	movzx  ebx,BYTE PTR [ecx+0x18]
10043bc0:	sub    esi,ebx
10043bc2:	je     0x10043bd9
10043bc4:	xor    ebx,ebx
10043bc6:	test   esi,esi
10043bc8:	setg   bl
10043bcb:	lea    ebx,[ebx+ebx*1-0x1]
10043bcf:	mov    esi,ebx
10043bd1:	test   esi,esi
10043bd3:	jne    0x10043ce2
10043bd9:	movzx  esi,BYTE PTR [eax+0x19]
10043bdd:	movzx  ebx,BYTE PTR [ecx+0x19]
10043be1:	sub    esi,ebx
10043be3:	je     0x10043bfa
10043be5:	xor    ebx,ebx
10043be7:	test   esi,esi
10043be9:	setg   bl
10043bec:	lea    ebx,[ebx+ebx*1-0x1]
10043bf0:	mov    esi,ebx
10043bf2:	test   esi,esi
10043bf4:	jne    0x10043ce2
10043bfa:	movzx  esi,BYTE PTR [eax+0x1a]
10043bfe:	movzx  ebx,BYTE PTR [ecx+0x1a]
10043c02:	sub    esi,ebx
10043c04:	je     0x10043c1b
10043c06:	xor    ebx,ebx
10043c08:	test   esi,esi
10043c0a:	setg   bl
10043c0d:	lea    ebx,[ebx+ebx*1-0x1]
10043c11:	mov    esi,ebx
10043c13:	test   esi,esi
10043c15:	jne    0x10043ce2
10043c1b:	movzx  esi,BYTE PTR [eax+0x1b]
10043c1f:	movzx  ebx,BYTE PTR [ecx+0x1b]
10043c23:	sub    esi,ebx
10043c25:	je     0x10043c38
10043c27:	xor    ebx,ebx
10043c29:	test   esi,esi
10043c2b:	setg   bl
10043c2e:	lea    ebx,[ebx+ebx*1-0x1]
10043c32:	mov    esi,ebx
10043c34:	jmp    0x10043c38
10043c36:	xor    esi,esi
10043c38:	test   esi,esi
10043c3a:	jne    0x10043ce2
10043c40:	mov    esi,DWORD PTR [eax+0x1c]
10043c43:	cmp    esi,DWORD PTR [ecx+0x1c]
10043c46:	je     0x10043cba
10043c48:	movzx  esi,BYTE PTR [eax+0x1c]
10043c4c:	movzx  ebx,BYTE PTR [ecx+0x1c]
10043c50:	sub    esi,ebx
10043c52:	je     0x10043c65
10043c54:	xor    ebx,ebx
10043c56:	test   esi,esi
10043c58:	setg   bl
10043c5b:	lea    ebx,[ebx+ebx*1-0x1]
10043c5f:	mov    esi,ebx
10043c61:	test   esi,esi
10043c63:	jne    0x10043ce2
10043c65:	movzx  esi,BYTE PTR [eax+0x1d]
10043c69:	movzx  ebx,BYTE PTR [ecx+0x1d]
10043c6d:	sub    esi,ebx
10043c6f:	je     0x10043c82
10043c71:	xor    ebx,ebx
10043c73:	test   esi,esi
10043c75:	setg   bl
10043c78:	lea    ebx,[ebx+ebx*1-0x1]
10043c7c:	mov    esi,ebx
10043c7e:	test   esi,esi
10043c80:	jne    0x10043ce2
10043c82:	movzx  esi,BYTE PTR [eax+0x1e]
10043c86:	movzx  ebx,BYTE PTR [ecx+0x1e]
10043c8a:	sub    esi,ebx
10043c8c:	je     0x10043c9f
10043c8e:	xor    ebx,ebx
10043c90:	test   esi,esi
10043c92:	setg   bl
10043c95:	lea    ebx,[ebx+ebx*1-0x1]
10043c99:	mov    esi,ebx
10043c9b:	test   esi,esi
10043c9d:	jne    0x10043ce2
10043c9f:	movzx  esi,BYTE PTR [eax+0x1f]
10043ca3:	movzx  ebx,BYTE PTR [ecx+0x1f]
10043ca7:	sub    esi,ebx
10043ca9:	je     0x10043cbc
10043cab:	xor    ebx,ebx
10043cad:	test   esi,esi
10043caf:	setg   bl
10043cb2:	lea    ebx,[ebx+ebx*1-0x1]
10043cb6:	mov    esi,ebx
10043cb8:	jmp    0x10043cbc
10043cba:	xor    esi,esi
10043cbc:	test   esi,esi
10043cbe:	jne    0x10043ce2
10043cc0:	add    eax,edx
10043cc2:	add    ecx,edx
10043cc4:	sub    edi,edx
10043cc6:	cmp    edi,edx
10043cc8:	jae    0x10043854
10043cce:	add    eax,edi
10043cd0:	add    ecx,edi
10043cd2:	cmp    edi,0x1f
10043cd5:	ja     0x100440b5
10043cdb:	jmp    DWORD PTR [edi*4+0x10044e16]
10043ce2:	mov    eax,esi
10043ce4:	jmp    0x100440b7
10043ce9:	mov    edx,DWORD PTR [eax-0x1c]
10043cec:	cmp    edx,DWORD PTR [ecx-0x1c]
10043cef:	je     0x10043d62
10043cf1:	movzx  esi,dl
10043cf4:	movzx  edx,BYTE PTR [ecx-0x1c]
10043cf8:	sub    esi,edx
10043cfa:	je     0x10043d0d
10043cfc:	xor    edx,edx
10043cfe:	test   esi,esi
10043d00:	setg   dl
10043d03:	lea    edx,[edx+edx*1-0x1]
10043d07:	mov    esi,edx
10043d09:	test   esi,esi
10043d0b:	jne    0x10043ce2
10043d0d:	movzx  esi,BYTE PTR [eax-0x1b]
10043d11:	movzx  edx,BYTE PTR [ecx-0x1b]
10043d15:	sub    esi,edx
10043d17:	je     0x10043d2a
10043d19:	xor    edx,edx
10043d1b:	test   esi,esi
10043d1d:	setg   dl
10043d20:	lea    edx,[edx+edx*1-0x1]
10043d24:	mov    esi,edx
10043d26:	test   esi,esi
10043d28:	jne    0x10043ce2
10043d2a:	movzx  esi,BYTE PTR [eax-0x1a]
10043d2e:	movzx  edx,BYTE PTR [ecx-0x1a]
10043d32:	sub    esi,edx
10043d34:	je     0x10043d47
10043d36:	xor    edx,edx
10043d38:	test   esi,esi
10043d3a:	setg   dl
10043d3d:	lea    edx,[edx+edx*1-0x1]
10043d41:	mov    esi,edx
10043d43:	test   esi,esi
10043d45:	jne    0x10043ce2
10043d47:	movzx  esi,BYTE PTR [eax-0x19]
10043d4b:	movzx  edx,BYTE PTR [ecx-0x19]
10043d4f:	sub    esi,edx
10043d51:	je     0x10043d64
10043d53:	xor    edx,edx
10043d55:	test   esi,esi
10043d57:	setg   dl
10043d5a:	lea    edx,[edx+edx*1-0x1]
10043d5e:	mov    esi,edx
10043d60:	jmp    0x10043d64
10043d62:	xor    esi,esi
10043d64:	test   esi,esi
10043d66:	jne    0x10043ce2
10043d6c:	mov    edx,DWORD PTR [eax-0x18]
10043d6f:	cmp    edx,DWORD PTR [ecx-0x18]
10043d72:	je     0x10043df1
10043d74:	movzx  esi,dl
10043d77:	movzx  edx,BYTE PTR [ecx-0x18]
10043d7b:	sub    esi,edx
10043d7d:	je     0x10043d94
10043d7f:	xor    edx,edx
10043d81:	test   esi,esi
10043d83:	setg   dl
10043d86:	lea    edx,[edx+edx*1-0x1]
10043d8a:	mov    esi,edx
10043d8c:	test   esi,esi
10043d8e:	jne    0x10043ce2
10043d94:	movzx  esi,BYTE PTR [eax-0x17]
10043d98:	movzx  edx,BYTE PTR [ecx-0x17]
10043d9c:	sub    esi,edx
10043d9e:	je     0x10043db5
10043da0:	xor    edx,edx
10043da2:	test   esi,esi
10043da4:	setg   dl
10043da7:	lea    edx,[edx+edx*1-0x1]
10043dab:	mov    esi,edx
10043dad:	test   esi,esi
10043daf:	jne    0x10043ce2
10043db5:	movzx  esi,BYTE PTR [eax-0x16]
10043db9:	movzx  edx,BYTE PTR [ecx-0x16]
10043dbd:	sub    esi,edx
10043dbf:	je     0x10043dd6
10043dc1:	xor    edx,edx
10043dc3:	test   esi,esi
10043dc5:	setg   dl
10043dc8:	lea    edx,[edx+edx*1-0x1]
10043dcc:	mov    esi,edx
10043dce:	test   esi,esi
10043dd0:	jne    0x10043ce2
10043dd6:	movzx  esi,BYTE PTR [eax-0x15]
10043dda:	movzx  edx,BYTE PTR [ecx-0x15]
10043dde:	sub    esi,edx
10043de0:	je     0x10043df3
10043de2:	xor    edx,edx
10043de4:	test   esi,esi
10043de6:	setg   dl
10043de9:	lea    edx,[edx+edx*1-0x1]
10043ded:	mov    esi,edx
10043def:	jmp    0x10043df3
10043df1:	xor    esi,esi
10043df3:	test   esi,esi
10043df5:	jne    0x10043ce2
10043dfb:	mov    edx,DWORD PTR [eax-0x14]
10043dfe:	cmp    edx,DWORD PTR [ecx-0x14]
10043e01:	je     0x10043e80
10043e03:	movzx  esi,dl
10043e06:	movzx  edx,BYTE PTR [ecx-0x14]
10043e0a:	sub    esi,edx
10043e0c:	je     0x10043e23
10043e0e:	xor    edx,edx
10043e10:	test   esi,esi
10043e12:	setg   dl
10043e15:	lea    edx,[edx+edx*1-0x1]
10043e19:	mov    esi,edx
10043e1b:	test   esi,esi
10043e1d:	jne    0x10043ce2
10043e23:	movzx  esi,BYTE PTR [eax-0x13]
10043e27:	movzx  edx,BYTE PTR [ecx-0x13]
10043e2b:	sub    esi,edx
10043e2d:	je     0x10043e44
10043e2f:	xor    edx,edx
10043e31:	test   esi,esi
10043e33:	setg   dl
10043e36:	lea    edx,[edx+edx*1-0x1]
10043e3a:	mov    esi,edx
10043e3c:	test   esi,esi
10043e3e:	jne    0x10043ce2
10043e44:	movzx  esi,BYTE PTR [eax-0x12]
10043e48:	movzx  edx,BYTE PTR [ecx-0x12]
10043e4c:	sub    esi,edx
10043e4e:	je     0x10043e65
10043e50:	xor    edx,edx
10043e52:	test   esi,esi
10043e54:	setg   dl
10043e57:	lea    edx,[edx+edx*1-0x1]
10043e5b:	mov    esi,edx
10043e5d:	test   esi,esi
10043e5f:	jne    0x10043ce2
10043e65:	movzx  esi,BYTE PTR [eax-0x11]
10043e69:	movzx  edx,BYTE PTR [ecx-0x11]
10043e6d:	sub    esi,edx
10043e6f:	je     0x10043e82
10043e71:	xor    edx,edx
10043e73:	test   esi,esi
10043e75:	setg   dl
10043e78:	lea    edx,[edx+edx*1-0x1]
10043e7c:	mov    esi,edx
10043e7e:	jmp    0x10043e82
10043e80:	xor    esi,esi
10043e82:	test   esi,esi
10043e84:	jne    0x10043ce2
10043e8a:	mov    edx,DWORD PTR [eax-0x10]
10043e8d:	cmp    edx,DWORD PTR [ecx-0x10]
10043e90:	je     0x10043f0f
10043e92:	movzx  esi,dl
10043e95:	movzx  edx,BYTE PTR [ecx-0x10]
10043e99:	sub    esi,edx
10043e9b:	je     0x10043eb2
10043e9d:	xor    edx,edx
10043e9f:	test   esi,esi
10043ea1:	setg   dl
10043ea4:	lea    edx,[edx+edx*1-0x1]
10043ea8:	mov    esi,edx
10043eaa:	test   esi,esi
10043eac:	jne    0x10043ce2
10043eb2:	movzx  esi,BYTE PTR [eax-0xf]
10043eb6:	movzx  edx,BYTE PTR [ecx-0xf]
10043eba:	sub    esi,edx
10043ebc:	je     0x10043ed3
10043ebe:	xor    edx,edx
10043ec0:	test   esi,esi
10043ec2:	setg   dl
10043ec5:	lea    edx,[edx+edx*1-0x1]
10043ec9:	mov    esi,edx
10043ecb:	test   esi,esi
10043ecd:	jne    0x10043ce2
10043ed3:	movzx  esi,BYTE PTR [eax-0xe]
10043ed7:	movzx  edx,BYTE PTR [ecx-0xe]
10043edb:	sub    esi,edx
10043edd:	je     0x10043ef4
10043edf:	xor    edx,edx
10043ee1:	test   esi,esi
10043ee3:	setg   dl
10043ee6:	lea    edx,[edx+edx*1-0x1]
10043eea:	mov    esi,edx
10043eec:	test   esi,esi
10043eee:	jne    0x10043ce2
10043ef4:	movzx  esi,BYTE PTR [eax-0xd]
10043ef8:	movzx  edx,BYTE PTR [ecx-0xd]
10043efc:	sub    esi,edx
10043efe:	je     0x10043f11
10043f00:	xor    edx,edx
10043f02:	test   esi,esi
10043f04:	setg   dl
10043f07:	lea    edx,[edx+edx*1-0x1]
10043f0b:	mov    esi,edx
10043f0d:	jmp    0x10043f11
10043f0f:	xor    esi,esi
10043f11:	test   esi,esi
10043f13:	jne    0x10043ce2
10043f19:	mov    edx,DWORD PTR [eax-0xc]
10043f1c:	cmp    edx,DWORD PTR [ecx-0xc]
10043f1f:	je     0x10043f9f
10043f21:	movzx  edx,BYTE PTR [ecx-0xc]
10043f25:	movzx  esi,BYTE PTR [eax-0xc]
10043f29:	sub    esi,edx
10043f2b:	je     0x10043f42
10043f2d:	xor    edx,edx
10043f2f:	test   esi,esi
10043f31:	setg   dl
10043f34:	lea    edx,[edx+edx*1-0x1]
10043f38:	mov    esi,edx
10043f3a:	test   esi,esi
10043f3c:	jne    0x10043ce2
10043f42:	movzx  esi,BYTE PTR [eax-0xb]
10043f46:	movzx  edx,BYTE PTR [ecx-0xb]
10043f4a:	sub    esi,edx
10043f4c:	je     0x10043f63
10043f4e:	xor    edx,edx
10043f50:	test   esi,esi
10043f52:	setg   dl
10043f55:	lea    edx,[edx+edx*1-0x1]
10043f59:	mov    esi,edx
10043f5b:	test   esi,esi
10043f5d:	jne    0x10043ce2
10043f63:	movzx  esi,BYTE PTR [eax-0xa]
10043f67:	movzx  edx,BYTE PTR [ecx-0xa]
10043f6b:	sub    esi,edx
10043f6d:	je     0x10043f84
10043f6f:	xor    edx,edx
10043f71:	test   esi,esi
10043f73:	setg   dl
10043f76:	lea    edx,[edx+edx*1-0x1]
10043f7a:	mov    esi,edx
10043f7c:	test   esi,esi
10043f7e:	jne    0x10043ce2
10043f84:	movzx  esi,BYTE PTR [eax-0x9]
10043f88:	movzx  edx,BYTE PTR [ecx-0x9]
10043f8c:	sub    esi,edx
10043f8e:	je     0x10043fa1
10043f90:	xor    edx,edx
10043f92:	test   esi,esi
10043f94:	setg   dl
10043f97:	lea    edx,[edx+edx*1-0x1]
10043f9b:	mov    esi,edx
10043f9d:	jmp    0x10043fa1
10043f9f:	xor    esi,esi
10043fa1:	test   esi,esi
10043fa3:	jne    0x10043ce2
10043fa9:	mov    edx,DWORD PTR [eax-0x8]
10043fac:	cmp    edx,DWORD PTR [ecx-0x8]
10043faf:	je     0x1004402e
10043fb1:	movzx  esi,dl
10043fb4:	movzx  edx,BYTE PTR [ecx-0x8]
10043fb8:	sub    esi,edx
10043fba:	je     0x10043fd1
10043fbc:	xor    edx,edx
10043fbe:	test   esi,esi
10043fc0:	setg   dl
10043fc3:	lea    edx,[edx+edx*1-0x1]
10043fc7:	mov    esi,edx
10043fc9:	test   esi,esi
10043fcb:	jne    0x10043ce2
10043fd1:	movzx  esi,BYTE PTR [eax-0x7]
10043fd5:	movzx  edx,BYTE PTR [ecx-0x7]
10043fd9:	sub    esi,edx
10043fdb:	je     0x10043ff2
10043fdd:	xor    edx,edx
10043fdf:	test   esi,esi
10043fe1:	setg   dl
10043fe4:	lea    edx,[edx+edx*1-0x1]
10043fe8:	mov    esi,edx
10043fea:	test   esi,esi
10043fec:	jne    0x10043ce2
10043ff2:	movzx  esi,BYTE PTR [eax-0x6]
10043ff6:	movzx  edx,BYTE PTR [ecx-0x6]
10043ffa:	sub    esi,edx
10043ffc:	je     0x10044013
10043ffe:	xor    edx,edx
10044000:	test   esi,esi
10044002:	setg   dl
10044005:	lea    edx,[edx+edx*1-0x1]
10044009:	mov    esi,edx
1004400b:	test   esi,esi
1004400d:	jne    0x10043ce2
10044013:	movzx  esi,BYTE PTR [eax-0x5]
10044017:	movzx  edx,BYTE PTR [ecx-0x5]
1004401b:	sub    esi,edx
1004401d:	je     0x10044030
1004401f:	xor    edx,edx
10044021:	test   esi,esi
10044023:	setg   dl
10044026:	lea    edx,[edx+edx*1-0x1]
1004402a:	mov    esi,edx
1004402c:	jmp    0x10044030
1004402e:	xor    esi,esi
10044030:	test   esi,esi
10044032:	jne    0x10043ce2
10044038:	mov    edx,DWORD PTR [eax-0x4]
1004403b:	cmp    edx,DWORD PTR [ecx-0x4]
1004403e:	je     0x100440af
10044040:	movzx  esi,dl
10044043:	movzx  edx,BYTE PTR [ecx-0x4]
10044047:	sub    esi,edx
10044049:	je     0x1004405a
1004404b:	xor    edx,edx
1004404d:	test   esi,esi
1004404f:	setg   dl
10044052:	lea    edx,[edx+edx*1-0x1]
10044056:	test   edx,edx
10044058:	jne    0x10044090
1004405a:	movzx  esi,BYTE PTR [eax-0x3]
1004405e:	movzx  edx,BYTE PTR [ecx-0x3]
10044062:	sub    esi,edx
10044064:	je     0x10044075
10044066:	xor    edx,edx
10044068:	test   esi,esi
1004406a:	setg   dl
1004406d:	lea    edx,[edx+edx*1-0x1]
10044071:	test   edx,edx
10044073:	jne    0x10044090
10044075:	movzx  esi,BYTE PTR [eax-0x2]
10044079:	movzx  edx,BYTE PTR [ecx-0x2]
1004407d:	sub    esi,edx
1004407f:	je     0x10044094
10044081:	xor    edx,edx
10044083:	test   esi,esi
10044085:	setg   dl
10044088:	lea    edx,[edx+edx*1-0x1]
1004408c:	test   edx,edx
1004408e:	je     0x10044094
10044090:	mov    eax,edx
10044092:	jmp    0x100440b1
10044094:	movzx  eax,BYTE PTR [eax-0x1]
10044098:	movzx  ecx,BYTE PTR [ecx-0x1]
1004409c:	sub    eax,ecx
1004409e:	je     0x100440b1
100440a0:	xor    ecx,ecx
100440a2:	test   eax,eax
100440a4:	setg   cl
100440a7:	lea    ecx,[ecx+ecx*1-0x1]
100440ab:	mov    eax,ecx
100440ad:	jmp    0x100440b1
100440af:	xor    eax,eax
100440b1:	test   eax,eax
100440b3:	jne    0x100440b7
100440b5:	xor    eax,eax
100440b7:	pop    ebx
100440b8:	jmp    0x10044e10
100440bd:	mov    edx,DWORD PTR [eax-0x1d]
100440c0:	cmp    edx,DWORD PTR [ecx-0x1d]
100440c3:	je     0x10044142
100440c5:	movzx  esi,dl
100440c8:	movzx  edx,BYTE PTR [ecx-0x1d]
100440cc:	sub    esi,edx
100440ce:	je     0x100440e5
100440d0:	xor    edx,edx
100440d2:	test   esi,esi
100440d4:	setg   dl
100440d7:	lea    edx,[edx+edx*1-0x1]
100440db:	mov    esi,edx
100440dd:	test   esi,esi
100440df:	jne    0x10043ce2
100440e5:	movzx  esi,BYTE PTR [eax-0x1c]
100440e9:	movzx  edx,BYTE PTR [ecx-0x1c]
100440ed:	sub    esi,edx
100440ef:	je     0x10044106
100440f1:	xor    edx,edx
100440f3:	test   esi,esi
100440f5:	setg   dl
100440f8:	lea    edx,[edx+edx*1-0x1]
100440fc:	mov    esi,edx
100440fe:	test   esi,esi
10044100:	jne    0x10043ce2
10044106:	movzx  esi,BYTE PTR [eax-0x1b]
1004410a:	movzx  edx,BYTE PTR [ecx-0x1b]
1004410e:	sub    esi,edx
10044110:	je     0x10044127
10044112:	xor    edx,edx
10044114:	test   esi,esi
10044116:	setg   dl
10044119:	lea    edx,[edx+edx*1-0x1]
1004411d:	mov    esi,edx
1004411f:	test   esi,esi
10044121:	jne    0x10043ce2
10044127:	movzx  esi,BYTE PTR [eax-0x1a]
1004412b:	movzx  edx,BYTE PTR [ecx-0x1a]
1004412f:	sub    esi,edx
10044131:	je     0x10044144
10044133:	xor    edx,edx
10044135:	test   esi,esi
10044137:	setg   dl
1004413a:	lea    edx,[edx+edx*1-0x1]
1004413e:	mov    esi,edx
10044140:	jmp    0x10044144
10044142:	xor    esi,esi
10044144:	test   esi,esi
10044146:	jne    0x10043ce2
1004414c:	mov    edx,DWORD PTR [eax-0x19]
1004414f:	cmp    edx,DWORD PTR [ecx-0x19]
10044152:	je     0x100441d1
10044154:	movzx  esi,dl
10044157:	movzx  edx,BYTE PTR [ecx-0x19]
1004415b:	sub    esi,edx
1004415d:	je     0x10044174
1004415f:	xor    edx,edx
10044161:	test   esi,esi
10044163:	setg   dl
10044166:	lea    edx,[edx+edx*1-0x1]
1004416a:	mov    esi,edx
1004416c:	test   esi,esi
1004416e:	jne    0x10043ce2
10044174:	movzx  esi,BYTE PTR [eax-0x18]
10044178:	movzx  edx,BYTE PTR [ecx-0x18]
1004417c:	sub    esi,edx
1004417e:	je     0x10044195
10044180:	xor    edx,edx
10044182:	test   esi,esi
10044184:	setg   dl
10044187:	lea    edx,[edx+edx*1-0x1]
1004418b:	mov    esi,edx
1004418d:	test   esi,esi
1004418f:	jne    0x10043ce2
10044195:	movzx  esi,BYTE PTR [eax-0x17]
10044199:	movzx  edx,BYTE PTR [ecx-0x17]
1004419d:	sub    esi,edx
1004419f:	je     0x100441b6
100441a1:	xor    edx,edx
100441a3:	test   esi,esi
100441a5:	setg   dl
100441a8:	lea    edx,[edx+edx*1-0x1]
100441ac:	mov    esi,edx
100441ae:	test   esi,esi
100441b0:	jne    0x10043ce2
100441b6:	movzx  esi,BYTE PTR [eax-0x16]
100441ba:	movzx  edx,BYTE PTR [ecx-0x16]
100441be:	sub    esi,edx
100441c0:	je     0x100441d3
100441c2:	xor    edx,edx
100441c4:	test   esi,esi
100441c6:	setg   dl
100441c9:	lea    edx,[edx+edx*1-0x1]
100441cd:	mov    esi,edx
100441cf:	jmp    0x100441d3
100441d1:	xor    esi,esi
100441d3:	test   esi,esi
100441d5:	jne    0x10043ce2
100441db:	mov    edx,DWORD PTR [eax-0x15]
100441de:	cmp    edx,DWORD PTR [ecx-0x15]
100441e1:	je     0x10044260
100441e3:	movzx  esi,dl
100441e6:	movzx  edx,BYTE PTR [ecx-0x15]
100441ea:	sub    esi,edx
100441ec:	je     0x10044203
100441ee:	xor    edx,edx
100441f0:	test   esi,esi
100441f2:	setg   dl
100441f5:	lea    edx,[edx+edx*1-0x1]
100441f9:	mov    esi,edx
100441fb:	test   esi,esi
100441fd:	jne    0x10043ce2
10044203:	movzx  esi,BYTE PTR [eax-0x14]
10044207:	movzx  edx,BYTE PTR [ecx-0x14]
1004420b:	sub    esi,edx
1004420d:	je     0x10044224
1004420f:	xor    edx,edx
10044211:	test   esi,esi
10044213:	setg   dl
10044216:	lea    edx,[edx+edx*1-0x1]
1004421a:	mov    esi,edx
1004421c:	test   esi,esi
1004421e:	jne    0x10043ce2
10044224:	movzx  esi,BYTE PTR [eax-0x13]
10044228:	movzx  edx,BYTE PTR [ecx-0x13]
1004422c:	sub    esi,edx
1004422e:	je     0x10044245
10044230:	xor    edx,edx
10044232:	test   esi,esi
10044234:	setg   dl
10044237:	lea    edx,[edx+edx*1-0x1]
1004423b:	mov    esi,edx
1004423d:	test   esi,esi
1004423f:	jne    0x10043ce2
10044245:	movzx  esi,BYTE PTR [eax-0x12]
10044249:	movzx  edx,BYTE PTR [ecx-0x12]
1004424d:	sub    esi,edx
1004424f:	je     0x10044262
10044251:	xor    edx,edx
10044253:	test   esi,esi
10044255:	setg   dl
10044258:	lea    edx,[edx+edx*1-0x1]
1004425c:	mov    esi,edx
1004425e:	jmp    0x10044262
10044260:	xor    esi,esi
10044262:	test   esi,esi
10044264:	jne    0x10043ce2
1004426a:	mov    edx,DWORD PTR [eax-0x11]
1004426d:	cmp    edx,DWORD PTR [ecx-0x11]
10044270:	je     0x100442ef
10044272:	movzx  esi,dl
10044275:	movzx  edx,BYTE PTR [ecx-0x11]
10044279:	sub    esi,edx
1004427b:	je     0x10044292
1004427d:	xor    edx,edx
1004427f:	test   esi,esi
10044281:	setg   dl
10044284:	lea    edx,[edx+edx*1-0x1]
10044288:	mov    esi,edx
1004428a:	test   esi,esi
1004428c:	jne    0x10043ce2
10044292:	movzx  esi,BYTE PTR [eax-0x10]
10044296:	movzx  edx,BYTE PTR [ecx-0x10]
1004429a:	sub    esi,edx
1004429c:	je     0x100442b3
1004429e:	xor    edx,edx
100442a0:	test   esi,esi
100442a2:	setg   dl
100442a5:	lea    edx,[edx+edx*1-0x1]
100442a9:	mov    esi,edx
100442ab:	test   esi,esi
100442ad:	jne    0x10043ce2
100442b3:	movzx  esi,BYTE PTR [eax-0xf]
100442b7:	movzx  edx,BYTE PTR [ecx-0xf]
100442bb:	sub    esi,edx
100442bd:	je     0x100442d4
100442bf:	xor    edx,edx
100442c1:	test   esi,esi
100442c3:	setg   dl
100442c6:	lea    edx,[edx+edx*1-0x1]
100442ca:	mov    esi,edx
100442cc:	test   esi,esi
100442ce:	jne    0x10043ce2
100442d4:	movzx  esi,BYTE PTR [eax-0xe]
100442d8:	movzx  edx,BYTE PTR [ecx-0xe]
100442dc:	sub    esi,edx
100442de:	je     0x100442f1
100442e0:	xor    edx,edx
100442e2:	test   esi,esi
100442e4:	setg   dl
100442e7:	lea    edx,[edx+edx*1-0x1]
100442eb:	mov    esi,edx
100442ed:	jmp    0x100442f1
100442ef:	xor    esi,esi
100442f1:	test   esi,esi
100442f3:	jne    0x10043ce2
100442f9:	mov    edx,DWORD PTR [eax-0xd]
100442fc:	cmp    edx,DWORD PTR [ecx-0xd]
100442ff:	je     0x1004437e
10044301:	movzx  esi,dl
10044304:	movzx  edx,BYTE PTR [ecx-0xd]
10044308:	sub    esi,edx
1004430a:	je     0x10044321
1004430c:	xor    edx,edx
1004430e:	test   esi,esi
10044310:	setg   dl
10044313:	lea    edx,[edx+edx*1-0x1]
10044317:	mov    esi,edx
10044319:	test   esi,esi
1004431b:	jne    0x10043ce2
10044321:	movzx  esi,BYTE PTR [eax-0xc]
10044325:	movzx  edx,BYTE PTR [ecx-0xc]
10044329:	sub    esi,edx
1004432b:	je     0x10044342
1004432d:	xor    edx,edx
1004432f:	test   esi,esi
10044331:	setg   dl
10044334:	lea    edx,[edx+edx*1-0x1]
10044338:	mov    esi,edx
1004433a:	test   esi,esi
1004433c:	jne    0x10043ce2
10044342:	movzx  esi,BYTE PTR [eax-0xb]
10044346:	movzx  edx,BYTE PTR [ecx-0xb]
1004434a:	sub    esi,edx
1004434c:	je     0x10044363
1004434e:	xor    edx,edx
10044350:	test   esi,esi
10044352:	setg   dl
10044355:	lea    edx,[edx+edx*1-0x1]
10044359:	mov    esi,edx
1004435b:	test   esi,esi
1004435d:	jne    0x10043ce2
10044363:	movzx  esi,BYTE PTR [eax-0xa]
10044367:	movzx  edx,BYTE PTR [ecx-0xa]
1004436b:	sub    esi,edx
1004436d:	je     0x10044380
1004436f:	xor    edx,edx
10044371:	test   esi,esi
10044373:	setg   dl
10044376:	lea    edx,[edx+edx*1-0x1]
1004437a:	mov    esi,edx
1004437c:	jmp    0x10044380
1004437e:	xor    esi,esi
10044380:	test   esi,esi
10044382:	jne    0x10043ce2
10044388:	mov    edx,DWORD PTR [eax-0x9]
1004438b:	cmp    edx,DWORD PTR [ecx-0x9]
1004438e:	je     0x1004440e
10044390:	movzx  edx,BYTE PTR [ecx-0x9]
10044394:	movzx  esi,BYTE PTR [eax-0x9]
10044398:	sub    esi,edx
1004439a:	je     0x100443b1
1004439c:	xor    edx,edx
1004439e:	test   esi,esi
100443a0:	setg   dl
100443a3:	lea    edx,[edx+edx*1-0x1]
100443a7:	mov    esi,edx
100443a9:	test   esi,esi
100443ab:	jne    0x10043ce2
100443b1:	movzx  esi,BYTE PTR [eax-0x8]
100443b5:	movzx  edx,BYTE PTR [ecx-0x8]
100443b9:	sub    esi,edx
100443bb:	je     0x100443d2
100443bd:	xor    edx,edx
100443bf:	test   esi,esi
100443c1:	setg   dl
100443c4:	lea    edx,[edx+edx*1-0x1]
100443c8:	mov    esi,edx
100443ca:	test   esi,esi
100443cc:	jne    0x10043ce2
100443d2:	movzx  esi,BYTE PTR [eax-0x7]
100443d6:	movzx  edx,BYTE PTR [ecx-0x7]
100443da:	sub    esi,edx
100443dc:	je     0x100443f3
100443de:	xor    edx,edx
100443e0:	test   esi,esi
100443e2:	setg   dl
100443e5:	lea    edx,[edx+edx*1-0x1]
100443e9:	mov    esi,edx
100443eb:	test   esi,esi
100443ed:	jne    0x10043ce2
100443f3:	movzx  esi,BYTE PTR [eax-0x6]
100443f7:	movzx  edx,BYTE PTR [ecx-0x6]
100443fb:	sub    esi,edx
100443fd:	je     0x10044410
100443ff:	xor    edx,edx
10044401:	test   esi,esi
10044403:	setg   dl
10044406:	lea    edx,[edx+edx*1-0x1]
1004440a:	mov    esi,edx
1004440c:	jmp    0x10044410
1004440e:	xor    esi,esi
10044410:	test   esi,esi
10044412:	jne    0x10043ce2
10044418:	mov    edx,DWORD PTR [eax-0x5]
1004441b:	cmp    edx,DWORD PTR [ecx-0x5]
1004441e:	je     0x1004449d
10044420:	movzx  esi,dl
10044423:	movzx  edx,BYTE PTR [ecx-0x5]
10044427:	sub    esi,edx
10044429:	je     0x10044440
1004442b:	xor    edx,edx
1004442d:	test   esi,esi
1004442f:	setg   dl
10044432:	lea    edx,[edx+edx*1-0x1]
10044436:	mov    esi,edx
10044438:	test   esi,esi
1004443a:	jne    0x10043ce2
10044440:	movzx  esi,BYTE PTR [eax-0x4]
10044444:	movzx  edx,BYTE PTR [ecx-0x4]
10044448:	sub    esi,edx
1004444a:	je     0x10044461
1004444c:	xor    edx,edx
1004444e:	test   esi,esi
10044450:	setg   dl
10044453:	lea    edx,[edx+edx*1-0x1]
10044457:	mov    esi,edx
10044459:	test   esi,esi
1004445b:	jne    0x10043ce2
10044461:	movzx  esi,BYTE PTR [eax-0x3]
10044465:	movzx  edx,BYTE PTR [ecx-0x3]
10044469:	sub    esi,edx
1004446b:	je     0x10044482
1004446d:	xor    edx,edx
1004446f:	test   esi,esi
10044471:	setg   dl
10044474:	lea    edx,[edx+edx*1-0x1]
10044478:	mov    esi,edx
1004447a:	test   esi,esi
1004447c:	jne    0x10043ce2
10044482:	movzx  esi,BYTE PTR [eax-0x2]
10044486:	movzx  edx,BYTE PTR [ecx-0x2]
1004448a:	sub    esi,edx
1004448c:	je     0x1004449f
1004448e:	xor    edx,edx
10044490:	test   esi,esi
10044492:	setg   dl
10044495:	lea    edx,[edx+edx*1-0x1]
10044499:	mov    esi,edx
1004449b:	jmp    0x1004449f
1004449d:	xor    esi,esi
1004449f:	test   esi,esi
100444a1:	jne    0x10043ce2
100444a7:	movzx  ecx,BYTE PTR [ecx-0x1]
100444ab:	movzx  eax,BYTE PTR [eax-0x1]
100444af:	sub    eax,ecx
100444b1:	je     0x100440b7
100444b7:	xor    ecx,ecx
100444b9:	test   eax,eax
100444bb:	setg   cl
100444be:	lea    ecx,[ecx+ecx*1-0x1]
100444c2:	mov    eax,ecx
100444c4:	jmp    0x100440b7
100444c9:	mov    edx,DWORD PTR [eax-0x1e]
100444cc:	cmp    edx,DWORD PTR [ecx-0x1e]
100444cf:	je     0x1004454e
100444d1:	movzx  esi,dl
100444d4:	movzx  edx,BYTE PTR [ecx-0x1e]
100444d8:	sub    esi,edx
100444da:	je     0x100444f1
100444dc:	xor    edx,edx
100444de:	test   esi,esi
100444e0:	setg   dl
100444e3:	lea    edx,[edx+edx*1-0x1]
100444e7:	mov    esi,edx
100444e9:	test   esi,esi
100444eb:	jne    0x10043ce2
100444f1:	movzx  esi,BYTE PTR [eax-0x1d]
100444f5:	movzx  edx,BYTE PTR [ecx-0x1d]
100444f9:	sub    esi,edx
100444fb:	je     0x10044512
100444fd:	xor    edx,edx
100444ff:	test   esi,esi
10044501:	setg   dl
10044504:	lea    edx,[edx+edx*1-0x1]
10044508:	mov    esi,edx
1004450a:	test   esi,esi
1004450c:	jne    0x10043ce2
10044512:	movzx  esi,BYTE PTR [eax-0x1c]
10044516:	movzx  edx,BYTE PTR [ecx-0x1c]
1004451a:	sub    esi,edx
1004451c:	je     0x10044533
1004451e:	xor    edx,edx
10044520:	test   esi,esi
10044522:	setg   dl
10044525:	lea    edx,[edx+edx*1-0x1]
10044529:	mov    esi,edx
1004452b:	test   esi,esi
1004452d:	jne    0x10043ce2
10044533:	movzx  esi,BYTE PTR [eax-0x1b]
10044537:	movzx  edx,BYTE PTR [ecx-0x1b]
1004453b:	sub    esi,edx
1004453d:	je     0x10044550
1004453f:	xor    edx,edx
10044541:	test   esi,esi
10044543:	setg   dl
10044546:	lea    edx,[edx+edx*1-0x1]
1004454a:	mov    esi,edx
1004454c:	jmp    0x10044550
1004454e:	xor    esi,esi
10044550:	test   esi,esi
10044552:	jne    0x10043ce2
10044558:	mov    edx,DWORD PTR [eax-0x1a]
1004455b:	cmp    edx,DWORD PTR [ecx-0x1a]
1004455e:	je     0x100445dd
10044560:	movzx  esi,dl
10044563:	movzx  edx,BYTE PTR [ecx-0x1a]
10044567:	sub    esi,edx
10044569:	je     0x10044580
1004456b:	xor    edx,edx
1004456d:	test   esi,esi
1004456f:	setg   dl
10044572:	lea    edx,[edx+edx*1-0x1]
10044576:	mov    esi,edx
10044578:	test   esi,esi
1004457a:	jne    0x10043ce2
10044580:	movzx  esi,BYTE PTR [eax-0x19]
10044584:	movzx  edx,BYTE PTR [ecx-0x19]
10044588:	sub    esi,edx
1004458a:	je     0x100445a1
1004458c:	xor    edx,edx
1004458e:	test   esi,esi
10044590:	setg   dl
10044593:	lea    edx,[edx+edx*1-0x1]
10044597:	mov    esi,edx
10044599:	test   esi,esi
1004459b:	jne    0x10043ce2
100445a1:	movzx  esi,BYTE PTR [eax-0x18]
100445a5:	movzx  edx,BYTE PTR [ecx-0x18]
100445a9:	sub    esi,edx
100445ab:	je     0x100445c2
100445ad:	xor    edx,edx
100445af:	test   esi,esi
100445b1:	setg   dl
100445b4:	lea    edx,[edx+edx*1-0x1]
100445b8:	mov    esi,edx
100445ba:	test   esi,esi
100445bc:	jne    0x10043ce2
100445c2:	movzx  esi,BYTE PTR [eax-0x17]
100445c6:	movzx  edx,BYTE PTR [ecx-0x17]
100445ca:	sub    esi,edx
100445cc:	je     0x100445df
100445ce:	xor    edx,edx
100445d0:	test   esi,esi
100445d2:	setg   dl
100445d5:	lea    edx,[edx+edx*1-0x1]
100445d9:	mov    esi,edx
100445db:	jmp    0x100445df
100445dd:	xor    esi,esi
100445df:	test   esi,esi
100445e1:	jne    0x10043ce2
100445e7:	mov    edx,DWORD PTR [eax-0x16]
100445ea:	cmp    edx,DWORD PTR [ecx-0x16]
100445ed:	je     0x1004466c
100445ef:	movzx  esi,dl
100445f2:	movzx  edx,BYTE PTR [ecx-0x16]
100445f6:	sub    esi,edx
100445f8:	je     0x1004460f
100445fa:	xor    edx,edx
100445fc:	test   esi,esi
100445fe:	setg   dl
10044601:	lea    edx,[edx+edx*1-0x1]
10044605:	mov    esi,edx
10044607:	test   esi,esi
10044609:	jne    0x10043ce2
1004460f:	movzx  esi,BYTE PTR [eax-0x15]
10044613:	movzx  edx,BYTE PTR [ecx-0x15]
10044617:	sub    esi,edx
10044619:	je     0x10044630
1004461b:	xor    edx,edx
1004461d:	test   esi,esi
1004461f:	setg   dl
10044622:	lea    edx,[edx+edx*1-0x1]
10044626:	mov    esi,edx
10044628:	test   esi,esi
1004462a:	jne    0x10043ce2
10044630:	movzx  esi,BYTE PTR [eax-0x14]
10044634:	movzx  edx,BYTE PTR [ecx-0x14]
10044638:	sub    esi,edx
1004463a:	je     0x10044651
1004463c:	xor    edx,edx
1004463e:	test   esi,esi
10044640:	setg   dl
10044643:	lea    edx,[edx+edx*1-0x1]
10044647:	mov    esi,edx
10044649:	test   esi,esi
1004464b:	jne    0x10043ce2
10044651:	movzx  esi,BYTE PTR [eax-0x13]
10044655:	movzx  edx,BYTE PTR [ecx-0x13]
10044659:	sub    esi,edx
1004465b:	je     0x1004466e
1004465d:	xor    edx,edx
1004465f:	test   esi,esi
10044661:	setg   dl
10044664:	lea    edx,[edx+edx*1-0x1]
10044668:	mov    esi,edx
1004466a:	jmp    0x1004466e
1004466c:	xor    esi,esi
1004466e:	test   esi,esi
10044670:	jne    0x10043ce2
10044676:	mov    edx,DWORD PTR [eax-0x12]
10044679:	cmp    edx,DWORD PTR [ecx-0x12]
1004467c:	je     0x100446fb
1004467e:	movzx  esi,dl
10044681:	movzx  edx,BYTE PTR [ecx-0x12]
10044685:	sub    esi,edx
10044687:	je     0x1004469e
10044689:	xor    edx,edx
1004468b:	test   esi,esi
1004468d:	setg   dl
10044690:	lea    edx,[edx+edx*1-0x1]
10044694:	mov    esi,edx
10044696:	test   esi,esi
10044698:	jne    0x10043ce2
1004469e:	movzx  esi,BYTE PTR [eax-0x11]
100446a2:	movzx  edx,BYTE PTR [ecx-0x11]
100446a6:	sub    esi,edx
100446a8:	je     0x100446bf
100446aa:	xor    edx,edx
100446ac:	test   esi,esi
100446ae:	setg   dl
100446b1:	lea    edx,[edx+edx*1-0x1]
100446b5:	mov    esi,edx
100446b7:	test   esi,esi
100446b9:	jne    0x10043ce2
100446bf:	movzx  esi,BYTE PTR [eax-0x10]
100446c3:	movzx  edx,BYTE PTR [ecx-0x10]
100446c7:	sub    esi,edx
100446c9:	je     0x100446e0
100446cb:	xor    edx,edx
100446cd:	test   esi,esi
100446cf:	setg   dl
100446d2:	lea    edx,[edx+edx*1-0x1]
100446d6:	mov    esi,edx
100446d8:	test   esi,esi
100446da:	jne    0x10043ce2
100446e0:	movzx  esi,BYTE PTR [eax-0xf]
100446e4:	movzx  edx,BYTE PTR [ecx-0xf]
100446e8:	sub    esi,edx
100446ea:	je     0x100446fd
100446ec:	xor    edx,edx
100446ee:	test   esi,esi
100446f0:	setg   dl
100446f3:	lea    edx,[edx+edx*1-0x1]
100446f7:	mov    esi,edx
100446f9:	jmp    0x100446fd
100446fb:	xor    esi,esi
100446fd:	test   esi,esi
100446ff:	jne    0x10043ce2
10044705:	mov    edx,DWORD PTR [eax-0xe]
10044708:	cmp    edx,DWORD PTR [ecx-0xe]
1004470b:	je     0x1004478a
1004470d:	movzx  esi,dl
10044710:	movzx  edx,BYTE PTR [ecx-0xe]
10044714:	sub    esi,edx
10044716:	je     0x1004472d
10044718:	xor    edx,edx
1004471a:	test   esi,esi
1004471c:	setg   dl
1004471f:	lea    edx,[edx+edx*1-0x1]
10044723:	mov    esi,edx
10044725:	test   esi,esi
10044727:	jne    0x10043ce2
1004472d:	movzx  esi,BYTE PTR [eax-0xd]
10044731:	movzx  edx,BYTE PTR [ecx-0xd]
10044735:	sub    esi,edx
10044737:	je     0x1004474e
10044739:	xor    edx,edx
1004473b:	test   esi,esi
1004473d:	setg   dl
10044740:	lea    edx,[edx+edx*1-0x1]
10044744:	mov    esi,edx
10044746:	test   esi,esi
10044748:	jne    0x10043ce2
1004474e:	movzx  esi,BYTE PTR [eax-0xc]
10044752:	movzx  edx,BYTE PTR [ecx-0xc]
10044756:	sub    esi,edx
10044758:	je     0x1004476f
1004475a:	xor    edx,edx
1004475c:	test   esi,esi
1004475e:	setg   dl
10044761:	lea    edx,[edx+edx*1-0x1]
10044765:	mov    esi,edx
10044767:	test   esi,esi
10044769:	jne    0x10043ce2
1004476f:	movzx  esi,BYTE PTR [eax-0xb]
10044773:	movzx  edx,BYTE PTR [ecx-0xb]
10044777:	sub    esi,edx
10044779:	je     0x1004478c
1004477b:	xor    edx,edx
1004477d:	test   esi,esi
1004477f:	setg   dl
10044782:	lea    edx,[edx+edx*1-0x1]
10044786:	mov    esi,edx
10044788:	jmp    0x1004478c
1004478a:	xor    esi,esi
1004478c:	test   esi,esi
1004478e:	jne    0x10043ce2
10044794:	mov    edx,DWORD PTR [eax-0xa]
10044797:	cmp    edx,DWORD PTR [ecx-0xa]
1004479a:	je     0x1004481a
1004479c:	movzx  edx,BYTE PTR [ecx-0xa]
100447a0:	movzx  esi,BYTE PTR [eax-0xa]
100447a4:	sub    esi,edx
100447a6:	je     0x100447bd
100447a8:	xor    edx,edx
100447aa:	test   esi,esi
100447ac:	setg   dl
100447af:	lea    edx,[edx+edx*1-0x1]
100447b3:	mov    esi,edx
100447b5:	test   esi,esi
100447b7:	jne    0x10043ce2
100447bd:	movzx  edx,BYTE PTR [ecx-0x9]
100447c1:	movzx  esi,BYTE PTR [eax-0x9]
100447c5:	sub    esi,edx
100447c7:	je     0x100447de
100447c9:	xor    edx,edx
100447cb:	test   esi,esi
100447cd:	setg   dl
100447d0:	lea    edx,[edx+edx*1-0x1]
100447d4:	mov    esi,edx
100447d6:	test   esi,esi
100447d8:	jne    0x10043ce2
100447de:	movzx  edx,BYTE PTR [ecx-0x8]
100447e2:	movzx  esi,BYTE PTR [eax-0x8]
100447e6:	sub    esi,edx
100447e8:	je     0x100447ff
100447ea:	xor    edx,edx
100447ec:	test   esi,esi
100447ee:	setg   dl
100447f1:	lea    edx,[edx+edx*1-0x1]
100447f5:	mov    esi,edx
100447f7:	test   esi,esi
100447f9:	jne    0x10043ce2
100447ff:	movzx  edx,BYTE PTR [ecx-0x7]
10044803:	movzx  esi,BYTE PTR [eax-0x7]
10044807:	sub    esi,edx
10044809:	je     0x1004481c
1004480b:	xor    edx,edx
1004480d:	test   esi,esi
1004480f:	setg   dl
10044812:	lea    edx,[edx+edx*1-0x1]
10044816:	mov    esi,edx
10044818:	jmp    0x1004481c
1004481a:	xor    esi,esi
1004481c:	test   esi,esi
1004481e:	jne    0x10043ce2
10044824:	mov    edx,DWORD PTR [eax-0x6]
10044827:	cmp    edx,DWORD PTR [ecx-0x6]
1004482a:	je     0x100448a9
1004482c:	movzx  esi,dl
1004482f:	movzx  edx,BYTE PTR [ecx-0x6]
10044833:	sub    esi,edx
10044835:	je     0x1004484c
10044837:	xor    edx,edx
10044839:	test   esi,esi
1004483b:	setg   dl
1004483e:	lea    edx,[edx+edx*1-0x1]
10044842:	mov    esi,edx
10044844:	test   esi,esi
10044846:	jne    0x10043ce2
1004484c:	movzx  esi,BYTE PTR [eax-0x5]
10044850:	movzx  edx,BYTE PTR [ecx-0x5]
10044854:	sub    esi,edx
10044856:	je     0x1004486d
10044858:	xor    edx,edx
1004485a:	test   esi,esi
1004485c:	setg   dl
1004485f:	lea    edx,[edx+edx*1-0x1]
10044863:	mov    esi,edx
10044865:	test   esi,esi
10044867:	jne    0x10043ce2
1004486d:	movzx  esi,BYTE PTR [eax-0x4]
10044871:	movzx  edx,BYTE PTR [ecx-0x4]
10044875:	sub    esi,edx
10044877:	je     0x1004488e
10044879:	xor    edx,edx
1004487b:	test   esi,esi
1004487d:	setg   dl
10044880:	lea    edx,[edx+edx*1-0x1]
10044884:	mov    esi,edx
10044886:	test   esi,esi
10044888:	jne    0x10043ce2
1004488e:	movzx  esi,BYTE PTR [eax-0x3]
10044892:	movzx  edx,BYTE PTR [ecx-0x3]
10044896:	sub    esi,edx
10044898:	je     0x100448ab
1004489a:	xor    edx,edx
1004489c:	test   esi,esi
1004489e:	setg   dl
100448a1:	lea    edx,[edx+edx*1-0x1]
100448a5:	mov    esi,edx
100448a7:	jmp    0x100448ab
100448a9:	xor    esi,esi
100448ab:	test   esi,esi
100448ad:	jne    0x10043ce2
100448b3:	mov    dx,WORD PTR [eax-0x2]
100448b7:	cmp    dx,WORD PTR [ecx-0x2]
100448bb:	je     0x100440b5
100448c1:	movzx  edx,BYTE PTR [ecx-0x2]
100448c5:	movzx  esi,BYTE PTR [eax-0x2]
100448c9:	sub    esi,edx
100448cb:	je     0x100444a7
100448d1:	xor    edx,edx
100448d3:	test   esi,esi
100448d5:	setg   dl
100448d8:	lea    edx,[edx+edx*1-0x1]
100448dc:	test   edx,edx
100448de:	jne    0x10044cf7
100448e4:	jmp    0x100444a7
100448e9:	mov    edx,DWORD PTR [eax-0x1f]
100448ec:	cmp    edx,DWORD PTR [ecx-0x1f]
100448ef:	je     0x1004496f
100448f1:	movzx  edx,BYTE PTR [ecx-0x1f]
100448f5:	movzx  esi,BYTE PTR [eax-0x1f]
100448f9:	sub    esi,edx
100448fb:	je     0x10044912
100448fd:	xor    edx,edx
100448ff:	test   esi,esi
10044901:	setg   dl
10044904:	lea    edx,[edx+edx*1-0x1]
10044908:	mov    esi,edx
1004490a:	test   esi,esi
1004490c:	jne    0x10043ce2
10044912:	movzx  esi,BYTE PTR [eax-0x1e]
10044916:	movzx  edx,BYTE PTR [ecx-0x1e]
1004491a:	sub    esi,edx
1004491c:	je     0x10044933
1004491e:	xor    edx,edx
10044920:	test   esi,esi
10044922:	setg   dl
10044925:	lea    edx,[edx+edx*1-0x1]
10044929:	mov    esi,edx
1004492b:	test   esi,esi
1004492d:	jne    0x10043ce2
10044933:	movzx  esi,BYTE PTR [eax-0x1d]
10044937:	movzx  edx,BYTE PTR [ecx-0x1d]
1004493b:	sub    esi,edx
1004493d:	je     0x10044954
1004493f:	xor    edx,edx
10044941:	test   esi,esi
10044943:	setg   dl
10044946:	lea    edx,[edx+edx*1-0x1]
1004494a:	mov    esi,edx
1004494c:	test   esi,esi
1004494e:	jne    0x10043ce2
10044954:	movzx  esi,BYTE PTR [eax-0x1c]
10044958:	movzx  edx,BYTE PTR [ecx-0x1c]
1004495c:	sub    esi,edx
1004495e:	je     0x10044971
10044960:	xor    edx,edx
10044962:	test   esi,esi
10044964:	setg   dl
10044967:	lea    edx,[edx+edx*1-0x1]
1004496b:	mov    esi,edx
1004496d:	jmp    0x10044971
1004496f:	xor    esi,esi
10044971:	test   esi,esi
10044973:	jne    0x10043ce2
10044979:	mov    edx,DWORD PTR [eax-0x1b]
1004497c:	cmp    edx,DWORD PTR [ecx-0x1b]
1004497f:	je     0x100449fe
10044981:	movzx  esi,dl
10044984:	movzx  edx,BYTE PTR [ecx-0x1b]
10044988:	sub    esi,edx
1004498a:	je     0x100449a1
1004498c:	xor    edx,edx
1004498e:	test   esi,esi
10044990:	setg   dl
10044993:	lea    edx,[edx+edx*1-0x1]
10044997:	mov    esi,edx
10044999:	test   esi,esi
1004499b:	jne    0x10043ce2
100449a1:	movzx  esi,BYTE PTR [eax-0x1a]
100449a5:	movzx  edx,BYTE PTR [ecx-0x1a]
100449a9:	sub    esi,edx
100449ab:	je     0x100449c2
100449ad:	xor    edx,edx
100449af:	test   esi,esi
100449b1:	setg   dl
100449b4:	lea    edx,[edx+edx*1-0x1]
100449b8:	mov    esi,edx
100449ba:	test   esi,esi
100449bc:	jne    0x10043ce2
100449c2:	movzx  esi,BYTE PTR [eax-0x19]
100449c6:	movzx  edx,BYTE PTR [ecx-0x19]
100449ca:	sub    esi,edx
100449cc:	je     0x100449e3
100449ce:	xor    edx,edx
100449d0:	test   esi,esi
100449d2:	setg   dl
100449d5:	lea    edx,[edx+edx*1-0x1]
100449d9:	mov    esi,edx
100449db:	test   esi,esi
100449dd:	jne    0x10043ce2
100449e3:	movzx  esi,BYTE PTR [eax-0x18]
100449e7:	movzx  edx,BYTE PTR [ecx-0x18]
100449eb:	sub    esi,edx
100449ed:	je     0x10044a00
100449ef:	xor    edx,edx
100449f1:	test   esi,esi
100449f3:	setg   dl
100449f6:	lea    edx,[edx+edx*1-0x1]
100449fa:	mov    esi,edx
100449fc:	jmp    0x10044a00
100449fe:	xor    esi,esi
10044a00:	test   esi,esi
10044a02:	jne    0x10043ce2
10044a08:	mov    edx,DWORD PTR [eax-0x17]
10044a0b:	cmp    edx,DWORD PTR [ecx-0x17]
10044a0e:	je     0x10044a8d
10044a10:	movzx  esi,dl
10044a13:	movzx  edx,BYTE PTR [ecx-0x17]
10044a17:	sub    esi,edx
10044a19:	je     0x10044a30
10044a1b:	xor    edx,edx
10044a1d:	test   esi,esi
10044a1f:	setg   dl
10044a22:	lea    edx,[edx+edx*1-0x1]
10044a26:	mov    esi,edx
10044a28:	test   esi,esi
10044a2a:	jne    0x10043ce2
10044a30:	movzx  esi,BYTE PTR [eax-0x16]
10044a34:	movzx  edx,BYTE PTR [ecx-0x16]
10044a38:	sub    esi,edx
10044a3a:	je     0x10044a51
10044a3c:	xor    edx,edx
10044a3e:	test   esi,esi
10044a40:	setg   dl
10044a43:	lea    edx,[edx+edx*1-0x1]
10044a47:	mov    esi,edx
10044a49:	test   esi,esi
10044a4b:	jne    0x10043ce2
10044a51:	movzx  esi,BYTE PTR [eax-0x15]
10044a55:	movzx  edx,BYTE PTR [ecx-0x15]
10044a59:	sub    esi,edx
10044a5b:	je     0x10044a72
10044a5d:	xor    edx,edx
10044a5f:	test   esi,esi
10044a61:	setg   dl
10044a64:	lea    edx,[edx+edx*1-0x1]
10044a68:	mov    esi,edx
10044a6a:	test   esi,esi
10044a6c:	jne    0x10043ce2
10044a72:	movzx  esi,BYTE PTR [eax-0x14]
10044a76:	movzx  edx,BYTE PTR [ecx-0x14]
10044a7a:	sub    esi,edx
10044a7c:	je     0x10044a8f
10044a7e:	xor    edx,edx
10044a80:	test   esi,esi
10044a82:	setg   dl
10044a85:	lea    edx,[edx+edx*1-0x1]
10044a89:	mov    esi,edx
10044a8b:	jmp    0x10044a8f
10044a8d:	xor    esi,esi
10044a8f:	test   esi,esi
10044a91:	jne    0x10043ce2
10044a97:	mov    edx,DWORD PTR [eax-0x13]
10044a9a:	cmp    edx,DWORD PTR [ecx-0x13]
10044a9d:	je     0x10044b1c
10044a9f:	movzx  esi,dl
10044aa2:	movzx  edx,BYTE PTR [ecx-0x13]
10044aa6:	sub    esi,edx
10044aa8:	je     0x10044abf
10044aaa:	xor    edx,edx
10044aac:	test   esi,esi
10044aae:	setg   dl
10044ab1:	lea    edx,[edx+edx*1-0x1]
10044ab5:	mov    esi,edx
10044ab7:	test   esi,esi
10044ab9:	jne    0x10043ce2
10044abf:	movzx  esi,BYTE PTR [eax-0x12]
10044ac3:	movzx  edx,BYTE PTR [ecx-0x12]
10044ac7:	sub    esi,edx
10044ac9:	je     0x10044ae0
10044acb:	xor    edx,edx
10044acd:	test   esi,esi
10044acf:	setg   dl
10044ad2:	lea    edx,[edx+edx*1-0x1]
10044ad6:	mov    esi,edx
10044ad8:	test   esi,esi
10044ada:	jne    0x10043ce2
10044ae0:	movzx  esi,BYTE PTR [eax-0x11]
10044ae4:	movzx  edx,BYTE PTR [ecx-0x11]
10044ae8:	sub    esi,edx
10044aea:	je     0x10044b01
10044aec:	xor    edx,edx
10044aee:	test   esi,esi
10044af0:	setg   dl
10044af3:	lea    edx,[edx+edx*1-0x1]
10044af7:	mov    esi,edx
10044af9:	test   esi,esi
10044afb:	jne    0x10043ce2
10044b01:	movzx  esi,BYTE PTR [eax-0x10]
10044b05:	movzx  edx,BYTE PTR [ecx-0x10]
10044b09:	sub    esi,edx
10044b0b:	je     0x10044b1e
10044b0d:	xor    edx,edx
10044b0f:	test   esi,esi
10044b11:	setg   dl
10044b14:	lea    edx,[edx+edx*1-0x1]
10044b18:	mov    esi,edx
10044b1a:	jmp    0x10044b1e
10044b1c:	xor    esi,esi
10044b1e:	test   esi,esi
10044b20:	jne    0x10043ce2
10044b26:	mov    edx,DWORD PTR [eax-0xf]
10044b29:	cmp    edx,DWORD PTR [ecx-0xf]
10044b2c:	je     0x10044bac
10044b2e:	movzx  edx,BYTE PTR [ecx-0xf]
10044b32:	movzx  esi,BYTE PTR [eax-0xf]
10044b36:	sub    esi,edx
10044b38:	je     0x10044b4f
10044b3a:	xor    edx,edx
10044b3c:	test   esi,esi
10044b3e:	setg   dl
10044b41:	lea    edx,[edx+edx*1-0x1]
10044b45:	mov    esi,edx
10044b47:	test   esi,esi
10044b49:	jne    0x10043ce2
10044b4f:	movzx  esi,BYTE PTR [eax-0xe]
10044b53:	movzx  edx,BYTE PTR [ecx-0xe]
10044b57:	sub    esi,edx
10044b59:	je     0x10044b70
10044b5b:	xor    edx,edx
10044b5d:	test   esi,esi
10044b5f:	setg   dl
10044b62:	lea    edx,[edx+edx*1-0x1]
10044b66:	mov    esi,edx
10044b68:	test   esi,esi
10044b6a:	jne    0x10043ce2
10044b70:	movzx  esi,BYTE PTR [eax-0xd]
10044b74:	movzx  edx,BYTE PTR [ecx-0xd]
10044b78:	sub    esi,edx
10044b7a:	je     0x10044b91
10044b7c:	xor    edx,edx
10044b7e:	test   esi,esi
10044b80:	setg   dl
10044b83:	lea    edx,[edx+edx*1-0x1]
10044b87:	mov    esi,edx
10044b89:	test   esi,esi
10044b8b:	jne    0x10043ce2
10044b91:	movzx  esi,BYTE PTR [eax-0xc]
10044b95:	movzx  edx,BYTE PTR [ecx-0xc]
10044b99:	sub    esi,edx
10044b9b:	je     0x10044bae
10044b9d:	xor    edx,edx
10044b9f:	test   esi,esi
10044ba1:	setg   dl
10044ba4:	lea    edx,[edx+edx*1-0x1]
10044ba8:	mov    esi,edx
10044baa:	jmp    0x10044bae
10044bac:	xor    esi,esi
10044bae:	test   esi,esi
10044bb0:	jne    0x10043ce2
10044bb6:	mov    edx,DWORD PTR [eax-0xb]
10044bb9:	cmp    edx,DWORD PTR [ecx-0xb]
10044bbc:	je     0x10044c3b
10044bbe:	movzx  esi,dl
10044bc1:	movzx  edx,BYTE PTR [ecx-0xb]
10044bc5:	sub    esi,edx
10044bc7:	je     0x10044bde
10044bc9:	xor    edx,edx
10044bcb:	test   esi,esi
10044bcd:	setg   dl
10044bd0:	lea    edx,[edx+edx*1-0x1]
10044bd4:	mov    esi,edx
10044bd6:	test   esi,esi
10044bd8:	jne    0x10043ce2
10044bde:	movzx  esi,BYTE PTR [eax-0xa]
10044be2:	movzx  edx,BYTE PTR [ecx-0xa]
10044be6:	sub    esi,edx
10044be8:	je     0x10044bff
10044bea:	xor    edx,edx
10044bec:	test   esi,esi
10044bee:	setg   dl
10044bf1:	lea    edx,[edx+edx*1-0x1]
10044bf5:	mov    esi,edx
10044bf7:	test   esi,esi
10044bf9:	jne    0x10043ce2
10044bff:	movzx  esi,BYTE PTR [eax-0x9]
10044c03:	movzx  edx,BYTE PTR [ecx-0x9]
10044c07:	sub    esi,edx
10044c09:	je     0x10044c20
10044c0b:	xor    edx,edx
10044c0d:	test   esi,esi
10044c0f:	setg   dl
10044c12:	lea    edx,[edx+edx*1-0x1]
10044c16:	mov    esi,edx
10044c18:	test   esi,esi
10044c1a:	jne    0x10043ce2
10044c20:	movzx  esi,BYTE PTR [eax-0x8]
10044c24:	movzx  edx,BYTE PTR [ecx-0x8]
10044c28:	sub    esi,edx
10044c2a:	je     0x10044c3d
10044c2c:	xor    edx,edx
10044c2e:	test   esi,esi
10044c30:	setg   dl
10044c33:	lea    edx,[edx+edx*1-0x1]
10044c37:	mov    esi,edx
10044c39:	jmp    0x10044c3d
10044c3b:	xor    esi,esi
10044c3d:	test   esi,esi
10044c3f:	jne    0x10043ce2
10044c45:	mov    edx,DWORD PTR [eax-0x7]
10044c48:	cmp    edx,DWORD PTR [ecx-0x7]
10044c4b:	je     0x10044cca
10044c4d:	movzx  esi,dl
10044c50:	movzx  edx,BYTE PTR [ecx-0x7]
10044c54:	sub    esi,edx
10044c56:	je     0x10044c6d
10044c58:	xor    edx,edx
10044c5a:	test   esi,esi
10044c5c:	setg   dl
10044c5f:	lea    edx,[edx+edx*1-0x1]
10044c63:	mov    esi,edx
10044c65:	test   esi,esi
10044c67:	jne    0x10043ce2
10044c6d:	movzx  esi,BYTE PTR [eax-0x6]
10044c71:	movzx  edx,BYTE PTR [ecx-0x6]
10044c75:	sub    esi,edx
10044c77:	je     0x10044c8e
10044c79:	xor    edx,edx
10044c7b:	test   esi,esi
10044c7d:	setg   dl
10044c80:	lea    edx,[edx+edx*1-0x1]
10044c84:	mov    esi,edx
10044c86:	test   esi,esi
10044c88:	jne    0x10043ce2
10044c8e:	movzx  esi,BYTE PTR [eax-0x5]
10044c92:	movzx  edx,BYTE PTR [ecx-0x5]
10044c96:	sub    esi,edx
10044c98:	je     0x10044caf
10044c9a:	xor    edx,edx
10044c9c:	test   esi,esi
10044c9e:	setg   dl
10044ca1:	lea    edx,[edx+edx*1-0x1]
10044ca5:	mov    esi,edx
10044ca7:	test   esi,esi
10044ca9:	jne    0x10043ce2
10044caf:	movzx  esi,BYTE PTR [eax-0x4]
10044cb3:	movzx  edx,BYTE PTR [ecx-0x4]
10044cb7:	sub    esi,edx
10044cb9:	je     0x10044ccc
10044cbb:	xor    edx,edx
10044cbd:	test   esi,esi
10044cbf:	setg   dl
10044cc2:	lea    edx,[edx+edx*1-0x1]
10044cc6:	mov    esi,edx
10044cc8:	jmp    0x10044ccc
10044cca:	xor    esi,esi
10044ccc:	test   esi,esi
10044cce:	jne    0x10043ce2
10044cd4:	movzx  esi,BYTE PTR [eax-0x3]
10044cd8:	movzx  edx,BYTE PTR [ecx-0x3]
10044cdc:	sub    esi,edx
10044cde:	je     0x100448c1
10044ce4:	xor    edx,edx
10044ce6:	test   esi,esi
10044ce8:	setg   dl
10044ceb:	lea    edx,[edx+edx*1-0x1]
10044cef:	test   edx,edx
10044cf1:	je     0x100448c1
10044cf7:	mov    eax,edx
10044cf9:	jmp    0x100440b7
10044cfe:	mov    ecx,DWORD PTR [ebp+0x8]
10044d01:	mov    esi,DWORD PTR [ebp+0xc]
10044d04:	movzx  eax,BYTE PTR [ecx]
10044d07:	movzx  edx,BYTE PTR [esi]
10044d0a:	sub    eax,edx
10044d0c:	je     0x10044d23
10044d0e:	xor    edx,edx
10044d10:	test   eax,eax
10044d12:	setg   dl
10044d15:	lea    edx,[edx+edx*1-0x1]
10044d19:	mov    eax,edx
10044d1b:	test   eax,eax
10044d1d:	jne    0x10044e10
10044d23:	movzx  eax,BYTE PTR [ecx+0x1]
10044d27:	movzx  edx,BYTE PTR [esi+0x1]
10044d2b:	sub    eax,edx
10044d2d:	je     0x10044d44
10044d2f:	xor    edx,edx
10044d31:	test   eax,eax
10044d33:	setg   dl
10044d36:	lea    edx,[edx+edx*1-0x1]
10044d3a:	mov    eax,edx
10044d3c:	test   eax,eax
10044d3e:	jne    0x10044e10
10044d44:	movzx  eax,BYTE PTR [ecx+0x2]
10044d48:	movzx  edx,BYTE PTR [esi+0x2]
10044d4c:	sub    eax,edx
10044d4e:	je     0x10044d65
10044d50:	xor    edx,edx
10044d52:	test   eax,eax
10044d54:	setg   dl
10044d57:	lea    edx,[edx+edx*1-0x1]
10044d5b:	mov    eax,edx
10044d5d:	test   eax,eax
10044d5f:	jne    0x10044e10
10044d65:	movzx  eax,BYTE PTR [ecx+0x3]
10044d69:	movzx  ecx,BYTE PTR [esi+0x3]
10044d6d:	sub    eax,ecx
10044d6f:	je     0x10044e10
10044d75:	xor    ecx,ecx
10044d77:	test   eax,eax
10044d79:	setg   cl
10044d7c:	lea    ecx,[ecx+ecx*1-0x1]
10044d80:	mov    eax,ecx
10044d82:	jmp    0x10044e10
10044d87:	mov    ecx,DWORD PTR [ebp+0x8]
10044d8a:	mov    esi,DWORD PTR [ebp+0xc]
10044d8d:	movzx  eax,BYTE PTR [ecx]
10044d90:	movzx  edx,BYTE PTR [esi]
10044d93:	sub    eax,edx
10044d95:	je     0x10044da8
10044d97:	xor    edx,edx
10044d99:	test   eax,eax
10044d9b:	setg   dl
10044d9e:	lea    edx,[edx+edx*1-0x1]
10044da2:	mov    eax,edx
10044da4:	test   eax,eax
10044da6:	jne    0x10044e10
10044da8:	movzx  eax,BYTE PTR [ecx+0x1]
10044dac:	movzx  edx,BYTE PTR [esi+0x1]
10044db0:	sub    eax,edx
10044db2:	je     0x10044dc5
10044db4:	xor    edx,edx
10044db6:	test   eax,eax
10044db8:	setg   dl
10044dbb:	lea    edx,[edx+edx*1-0x1]
10044dbf:	mov    eax,edx
10044dc1:	test   eax,eax
10044dc3:	jne    0x10044e10
10044dc5:	movzx  eax,BYTE PTR [ecx+0x2]
10044dc9:	movzx  ecx,BYTE PTR [esi+0x2]
10044dcd:	jmp    0x10044d6d
10044dcf:	mov    ecx,DWORD PTR [ebp+0x8]
10044dd2:	mov    esi,DWORD PTR [ebp+0xc]
10044dd5:	movzx  eax,BYTE PTR [ecx]
10044dd8:	movzx  edx,BYTE PTR [esi]
10044ddb:	sub    eax,edx
10044ddd:	je     0x10044df0
10044ddf:	xor    edx,edx
10044de1:	test   eax,eax
10044de3:	setg   dl
10044de6:	lea    edx,[edx+edx*1-0x1]
10044dea:	mov    eax,edx
10044dec:	test   eax,eax
10044dee:	jne    0x10044e10
10044df0:	movzx  eax,BYTE PTR [ecx+0x1]
10044df4:	movzx  ecx,BYTE PTR [esi+0x1]
10044df8:	jmp    0x10044d6d
10044dfd:	mov    eax,DWORD PTR [ebp+0x8]
10044e00:	mov    ecx,DWORD PTR [ebp+0xc]
10044e03:	movzx  eax,BYTE PTR [eax]
10044e06:	movzx  ecx,BYTE PTR [ecx]
10044e09:	jmp    0x10044d6d
10044e0e:	xor    eax,eax
10044e10:	pop    edi
10044e11:	pop    esi
10044e12:	pop    ebp
10044e13:	ret    
10044e14:	mov    edi,edi
10044e16:	mov    ch,0x40
10044e18:	add    al,0x10
10044e1a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
10044e1b:	inc    esp
10044e1c:	add    al,0x10
10044e1e:	mov    bl,0x48
10044e20:	add    al,0x10
10044e22:	aam    0x4c
10044e24:	add    al,0x10
10044e26:	cmp    BYTE PTR [eax+0x4],al
10044e29:	adc    BYTE PTR [eax],bl
10044e2b:	inc    esp
10044e2c:	add    al,0x10
10044e2e:	and    al,0x48
10044e30:	add    al,0x10
10044e32:	inc    ebp
10044e33:	dec    esp
10044e34:	add    al,0x10
10044e36:	test   eax,0x8810043f
10044e3b:	inc    ebx
10044e3c:	add    al,0x10
10044e3e:	xchg   esp,eax
10044e3f:	inc    edi
10044e40:	add    al,0x10
10044e42:	mov    dh,0x4b
10044e44:	add    al,0x10
10044e46:	sbb    DWORD PTR [edi],edi
10044e48:	add    al,0x10
10044e4a:	stc    
10044e4b:	inc    edx
10044e4c:	add    al,0x10
10044e4e:	add    eax,0x26100447
10044e53:	dec    ebx
10044e54:	add    al,0x10
10044e56:	mov    bh,BYTE PTR [esi]
10044e58:	add    al,0x10
10044e5a:	push   0x42
10044e5c:	add    al,0x10
10044e5e:	jbe    0x10044ea6
10044e60:	add    al,0x10
10044e62:	xchg   edi,eax
10044e63:	dec    edx
10044e64:	add    al,0x10
10044e66:	sti    
10044e67:	cmp    eax,0x41db1004
10044e6c:	add    al,0x10
10044e6e:	out    0x45,eax
10044e70:	add    al,0x10
10044e72:	or     BYTE PTR [edx+0x4],cl
10044e75:	adc    BYTE PTR [ebp+edi*1+0x4],ch
10044e79:	adc    BYTE PTR [ecx+eax*2+0x4],cl
10044e7d:	adc    BYTE PTR [eax+0x45],bl
10044e80:	add    al,0x10
10044e82:	jns    0x10044ecd
10044e84:	add    al,0x10
10044e86:	jmp    0xcd1452c7
10044e8b:	inc    eax
10044e8c:	add    al,0x10
10044e8e:	leave  
10044e8f:	inc    esp
10044e90:	add    al,0x10
10044e92:	jmp    0x651452df
10044e97:	mov    ebp,esp
10044e99:	sub    esp,0x20
10044e9c:	push   ebx
10044e9d:	xor    ebx,ebx
10044e9f:	cmp    DWORD PTR [ebp+0x14],ebx
10044ea2:	jne    0x10044ec4
10044ea4:	call   0x10046c45
10044ea9:	push   ebx
10044eaa:	push   ebx
10044eab:	push   ebx
10044eac:	push   ebx
10044ead:	push   ebx
10044eae:	mov    DWORD PTR [eax],0x16
10044eb4:	call   0x1004347c
10044eb9:	add    esp,0x14
10044ebc:	or     eax,0xffffffff
10044ebf:	jmp    0x10044f89
10044ec4:	push   esi
10044ec5:	mov    esi,DWORD PTR [ebp+0xc]
10044ec8:	push   edi
10044ec9:	mov    edi,DWORD PTR [ebp+0x10]
10044ecc:	cmp    edi,ebx
10044ece:	je     0x10044ef4
10044ed0:	cmp    esi,ebx
10044ed2:	jne    0x10044ef4
10044ed4:	call   0x10046c45
10044ed9:	push   ebx
10044eda:	push   ebx
10044edb:	push   ebx
10044edc:	push   ebx
10044edd:	push   ebx
10044ede:	mov    DWORD PTR [eax],0x16
10044ee4:	call   0x1004347c
10044ee9:	add    esp,0x14
10044eec:	or     eax,0xffffffff
10044eef:	jmp    0x10044f87
10044ef4:	cmp    edi,0x3fffffff
10044efa:	mov    DWORD PTR [ebp-0x14],0x42
10044f01:	mov    DWORD PTR [ebp-0x18],esi
10044f04:	mov    DWORD PTR [ebp-0x20],esi
10044f07:	jbe    0x10044f12
10044f09:	mov    DWORD PTR [ebp-0x1c],0x7fffffff
10044f10:	jmp    0x10044f18
10044f12:	lea    eax,[edi+edi*1]
10044f15:	mov    DWORD PTR [ebp-0x1c],eax
10044f18:	push   DWORD PTR [ebp+0x1c]
10044f1b:	lea    eax,[ebp-0x20]
10044f1e:	push   DWORD PTR [ebp+0x18]
10044f21:	push   DWORD PTR [ebp+0x14]
10044f24:	push   eax
10044f25:	call   DWORD PTR [ebp+0x8]
10044f28:	add    esp,0x10
10044f2b:	cmp    esi,ebx
10044f2d:	mov    DWORD PTR [ebp+0x14],eax
10044f30:	je     0x10044f87
10044f32:	cmp    eax,ebx
10044f34:	jl     0x10044f78
10044f36:	dec    DWORD PTR [ebp-0x1c]
10044f39:	js     0x10044f45
10044f3b:	mov    eax,DWORD PTR [ebp-0x20]
10044f3e:	mov    BYTE PTR [eax],bl
10044f40:	inc    DWORD PTR [ebp-0x20]
10044f43:	jmp    0x10044f56
10044f45:	lea    eax,[ebp-0x20]
10044f48:	push   eax
10044f49:	push   ebx
10044f4a:	call   0x100488bd
10044f4f:	cmp    eax,0xffffffff
10044f52:	pop    ecx
10044f53:	pop    ecx
10044f54:	je     0x10044f78
10044f56:	dec    DWORD PTR [ebp-0x1c]
10044f59:	js     0x10044f62
10044f5b:	mov    eax,DWORD PTR [ebp-0x20]
10044f5e:	mov    BYTE PTR [eax],bl
10044f60:	jmp    0x10044f73
10044f62:	lea    eax,[ebp-0x20]
10044f65:	push   eax
10044f66:	push   ebx
10044f67:	call   0x100488bd
10044f6c:	cmp    eax,0xffffffff
10044f6f:	pop    ecx
10044f70:	pop    ecx
10044f71:	je     0x10044f78
10044f73:	mov    eax,DWORD PTR [ebp+0x14]
10044f76:	jmp    0x10044f87
10044f78:	xor    eax,eax
10044f7a:	cmp    DWORD PTR [ebp-0x1c],ebx
10044f7d:	mov    WORD PTR [esi+edi*2-0x2],bx
10044f82:	setge  al
10044f85:	dec    eax
10044f86:	dec    eax
10044f87:	pop    edi
10044f88:	pop    esi
10044f89:	pop    ebx
10044f8a:	leave  
10044f8b:	ret    
10044f8c:	push   ebp
10044f8d:	mov    ebp,esp
10044f8f:	push   esi
10044f90:	xor    esi,esi
10044f92:	cmp    DWORD PTR [ebp+0x10],esi
10044f95:	jne    0x10044fb4
10044f97:	call   0x10046c45
10044f9c:	push   esi
10044f9d:	push   esi
10044f9e:	push   esi
10044f9f:	push   esi
10044fa0:	push   esi
10044fa1:	mov    DWORD PTR [eax],0x16
10044fa7:	call   0x1004347c
10044fac:	add    esp,0x14
10044faf:	or     eax,0xffffffff
10044fb2:	jmp    0x10045010
10044fb4:	push   edi
10044fb5:	mov    edi,DWORD PTR [ebp+0x8]
10044fb8:	cmp    edi,esi
10044fba:	je     0x10044fc1
10044fbc:	cmp    DWORD PTR [ebp+0xc],esi
10044fbf:	ja     0x10044fce
10044fc1:	call   0x10046c45
10044fc6:	mov    DWORD PTR [eax],0x16
10044fcc:	jmp    0x10044fff
10044fce:	push   DWORD PTR [ebp+0x18]
10044fd1:	push   DWORD PTR [ebp+0x14]
10044fd4:	push   DWORD PTR [ebp+0x10]
10044fd7:	push   DWORD PTR [ebp+0xc]
10044fda:	push   edi
10044fdb:	push   0x100493ca
10044fe0:	call   0x10044e96
10044fe5:	add    esp,0x18
10044fe8:	cmp    eax,esi
10044fea:	jge    0x10044fef
10044fec:	mov    WORD PTR [edi],si
10044fef:	cmp    eax,0xfffffffe
10044ff2:	jne    0x1004500f
10044ff4:	call   0x10046c45
10044ff9:	mov    DWORD PTR [eax],0x22
10044fff:	push   esi
10045000:	push   esi
10045001:	push   esi
10045002:	push   esi
10045003:	push   esi
10045004:	call   0x1004347c
10045009:	add    esp,0x14
1004500c:	or     eax,0xffffffff
1004500f:	pop    edi
10045010:	pop    esi
10045011:	pop    ebp
10045012:	ret    
10045013:	push   DWORD PTR [esp+0x10]
10045017:	push   0x0
10045019:	push   DWORD PTR [esp+0x14]
1004501d:	push   DWORD PTR [esp+0x14]
10045021:	push   DWORD PTR [esp+0x14]
10045025:	call   0x10044f8c
1004502a:	add    esp,0x14
1004502d:	ret    
1004502e:	push   0xc
10045030:	push   0x100746e8
10045035:	call   0x10046d84
1004503a:	and    DWORD PTR [ebp-0x1c],0x0
1004503e:	mov    esi,DWORD PTR [ebp+0x8]
10045041:	cmp    esi,DWORD PTR ds:0x10082590
10045047:	ja     0x1004506b
10045049:	push   0x4
1004504b:	call   0x10047d8d
10045050:	pop    ecx
10045051:	and    DWORD PTR [ebp-0x4],0x0
10045055:	push   esi
10045056:	call   0x100485da
1004505b:	pop    ecx
1004505c:	mov    DWORD PTR [ebp-0x1c],eax
1004505f:	mov    DWORD PTR [ebp-0x4],0xfffffffe
10045066:	call   0x10045074
1004506b:	mov    eax,DWORD PTR [ebp-0x1c]
1004506e:	call   0x10046dc9
10045073:	ret    
10045074:	push   0x4
10045076:	call   0x10047cb5
1004507b:	pop    ecx
1004507c:	ret    
1004507d:	push   ebp
1004507e:	mov    ebp,DWORD PTR [esp+0x8]
10045082:	cmp    ebp,0xffffffe0
10045085:	ja     0x1004512a
1004508b:	push   ebx
1004508c:	mov    ebx,DWORD PTR ds:0x1006618c
10045092:	push   esi
10045093:	push   edi
10045094:	xor    esi,esi
10045096:	cmp    DWORD PTR ds:0x1007fe38,esi
1004509c:	mov    edi,ebp
1004509e:	jne    0x100450b8
100450a0:	call   0x10049e8a
100450a5:	push   0x1e
100450a7:	call   0x10049cea
100450ac:	push   0xff
100450b1:	call   0x100476d2
100450b6:	pop    ecx
100450b7:	pop    ecx
100450b8:	mov    eax,ds:0x100825a0
100450bd:	cmp    eax,0x1
100450c0:	jne    0x100450d0
100450c2:	cmp    ebp,esi
100450c4:	je     0x100450ca
100450c6:	mov    eax,ebp
100450c8:	jmp    0x100450cd
100450ca:	xor    eax,eax
100450cc:	inc    eax
100450cd:	push   eax
100450ce:	jmp    0x100450ee
100450d0:	cmp    eax,0x3
100450d3:	jne    0x100450e0
100450d5:	push   ebp
100450d6:	call   0x1004502e
100450db:	cmp    eax,esi
100450dd:	pop    ecx
100450de:	jne    0x100450f7
100450e0:	cmp    ebp,esi
100450e2:	jne    0x100450e7
100450e4:	xor    edi,edi
100450e6:	inc    edi
100450e7:	add    edi,0xf
100450ea:	and    edi,0xfffffff0
100450ed:	push   edi
100450ee:	push   esi
100450ef:	push   DWORD PTR ds:0x1007fe38
100450f5:	call   ebx
100450f7:	mov    esi,eax
100450f9:	test   esi,esi
100450fb:	jne    0x10045123
100450fd:	cmp    DWORD PTR ds:0x1007ff94,eax
10045103:	push   0xc
10045105:	pop    edi
10045106:	je     0x10045115
10045108:	push   ebp
10045109:	call   0x10047a82
1004510e:	test   eax,eax
10045110:	pop    ecx
10045111:	jne    0x10045094
10045113:	jmp    0x1004511c
10045115:	call   0x10046c45
1004511a:	mov    DWORD PTR [eax],edi
1004511c:	call   0x10046c45
10045121:	mov    DWORD PTR [eax],edi
10045123:	pop    edi
10045124:	mov    eax,esi
10045126:	pop    esi
10045127:	pop    ebx
10045128:	pop    ebp
10045129:	ret    
1004512a:	push   ebp
1004512b:	call   0x10047a82
10045130:	pop    ecx
10045131:	call   0x10046c45
10045136:	mov    DWORD PTR [eax],0xc
1004513c:	xor    eax,eax
1004513e:	pop    ebp
1004513f:	ret    
10045140:	push   ebp
10045141:	mov    ebp,esp
10045143:	sub    esp,0x5c
10045146:	mov    eax,ds:0x1007e030
1004514b:	xor    eax,ebp
1004514d:	mov    DWORD PTR [ebp-0x4],eax
10045150:	push   ebx
10045151:	push   esi
10045152:	push   edi
10045153:	push   0x4
10045155:	xor    edi,edi
10045157:	pop    eax
10045158:	mov    DWORD PTR [ebp-0x8],edi
1004515b:	call   0x10049ed0
10045160:	mov    DWORD PTR [ebp-0x10],esp
10045163:	push   0x1c
10045165:	lea    eax,[ebp-0x38]
10045168:	push   eax
10045169:	push   DWORD PTR [ebp-0x10]
1004516c:	call   DWORD PTR ds:0x100660f4
10045172:	test   eax,eax
10045174:	je     0x10045258
1004517a:	mov    eax,DWORD PTR [ebp-0x34]
1004517d:	mov    DWORD PTR [ebp-0x18],eax
10045180:	lea    eax,[ebp-0x5c]
10045183:	push   eax
10045184:	call   DWORD PTR ds:0x1006619c
1004518a:	mov    esi,DWORD PTR [ebp-0x58]
1004518d:	lea    eax,[ebp-0x8]
10045190:	push   eax
10045191:	mov    DWORD PTR [ebp-0x14],esi
10045194:	xor    ebx,ebx
10045196:	call   0x10047731
1004519b:	test   eax,eax
1004519d:	pop    ecx
1004519e:	je     0x100451ad
100451a0:	push   edi
100451a1:	push   edi
100451a2:	push   edi
100451a3:	push   edi
100451a4:	push   edi
100451a5:	call   0x10043380
100451aa:	add    esp,0x14
100451ad:	cmp    DWORD PTR [ebp-0x8],0x2
100451b1:	jne    0x100451e9
100451b3:	push   0x1006f838
100451b8:	call   DWORD PTR ds:0x10066198
100451be:	cmp    eax,edi
100451c0:	je     0x100451e9
100451c2:	push   0x100665d0
100451c7:	push   eax
100451c8:	call   DWORD PTR ds:0x1006612c
100451ce:	cmp    eax,edi
100451d0:	je     0x100451e9
100451d2:	lea    ecx,[ebp-0xc]
100451d5:	push   ecx
100451d6:	mov    DWORD PTR [ebp-0xc],edi
100451d9:	call   eax
100451db:	cmp    eax,0x1
100451de:	pop    ecx
100451df:	jne    0x100451e9
100451e1:	cmp    DWORD PTR [ebp-0xc],edi
100451e4:	jbe    0x100451e9
100451e6:	mov    ebx,DWORD PTR [ebp-0xc]
100451e9:	mov    edi,DWORD PTR [ebp-0x8]
100451ec:	dec    edi
100451ed:	neg    edi
100451ef:	sbb    edi,edi
100451f1:	and    edi,0x103
100451f7:	lea    eax,[esi-0x1]
100451fa:	lea    ebx,[ebx+esi*1-0x1]
100451fe:	not    eax
10045200:	inc    edi
10045201:	and    ebx,eax
10045203:	je     0x10045207
10045205:	add    ebx,esi
10045207:	lea    eax,[esi+esi*1]
1004520a:	cmp    ebx,eax
1004520c:	jae    0x10045210
1004520e:	mov    ebx,eax
10045210:	dec    esi
10045211:	not    esi
10045213:	and    esi,DWORD PTR [ebp-0x10]
10045216:	sub    esi,ebx
10045218:	cmp    DWORD PTR [ebp-0x8],0x1
1004521c:	jne    0x10045223
1004521e:	push   0x11
10045220:	pop    eax
10045221:	jmp    0x10045226
10045223:	mov    eax,DWORD PTR [ebp-0x14]
10045226:	mov    ecx,DWORD PTR [ebp-0x18]
10045229:	add    eax,ecx
1004522b:	cmp    esi,eax
1004522d:	jb     0x10045258
1004522f:	push   0x4
10045231:	push   0x1000
10045236:	push   ebx
10045237:	push   esi
10045238:	call   DWORD PTR ds:0x10066194
1004523e:	test   eax,eax
10045240:	je     0x10045258
10045242:	lea    eax,[ebp-0x1c]
10045245:	push   eax
10045246:	push   edi
10045247:	push   ebx
10045248:	push   esi
10045249:	call   DWORD PTR ds:0x10066190
1004524f:	test   eax,eax
10045251:	je     0x10045258
10045253:	xor    eax,eax
10045255:	inc    eax
10045256:	jmp    0x1004525a
10045258:	xor    eax,eax
1004525a:	lea    esp,[ebp-0x68]
1004525d:	pop    edi
1004525e:	pop    esi
1004525f:	pop    ebx
10045260:	mov    ecx,DWORD PTR [ebp-0x4]
10045263:	xor    ecx,ebp
10045265:	call   0x10042f87
1004526a:	leave  
1004526b:	ret    
1004526c:	int3   
1004526d:	int3   
1004526e:	int3   
1004526f:	int3   
10045270:	push   ebp
10045271:	mov    ebp,esp
10045273:	push   edi
10045274:	push   esi
10045275:	mov    esi,DWORD PTR [ebp+0xc]
10045278:	mov    ecx,DWORD PTR [ebp+0x10]
1004527b:	mov    edi,DWORD PTR [ebp+0x8]
1004527e:	mov    eax,ecx
10045280:	mov    edx,ecx
10045282:	add    eax,esi
10045284:	cmp    edi,esi
10045286:	jbe    0x10045290
10045288:	cmp    edi,eax
1004528a:	jb     0x10045434
10045290:	cmp    ecx,0x100
10045296:	jb     0x100452b7
10045298:	cmp    DWORD PTR ds:0x10082584,0x0
1004529f:	je     0x100452b7
100452a1:	push   edi
100452a2:	push   esi
100452a3:	and    edi,0xf
100452a6:	and    esi,0xf
100452a9:	cmp    edi,esi
100452ab:	pop    esi
100452ac:	pop    edi
100452ad:	jne    0x100452b7
100452af:	pop    esi
100452b0:	pop    edi
100452b1:	pop    ebp
100452b2:	jmp    0x10049f82
100452b7:	test   edi,0x3
100452bd:	jne    0x100452d4
100452bf:	shr    ecx,0x2
100452c2:	and    edx,0x3
100452c5:	cmp    ecx,0x8
100452c8:	jb     0x100452f4
100452ca:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
100452cc:	jmp    DWORD PTR [edx*4+0x100453e4]
100452d3:	nop
100452d4:	mov    eax,edi
100452d6:	mov    edx,0x3
100452db:	sub    ecx,0x4
100452de:	jb     0x100452ec
100452e0:	and    eax,0x3
100452e3:	add    ecx,eax
100452e5:	jmp    DWORD PTR [eax*4+0x100452f8]
100452ec:	jmp    DWORD PTR [ecx*4+0x100453f4]
100452f3:	nop
100452f4:	jmp    DWORD PTR [ecx*4+0x10045378]
100452fb:	nop
100452fc:	or     BYTE PTR [ebx+0x4],dl
100452ff:	adc    BYTE PTR [ebx+edx*2],dh
10045302:	add    al,0x10
10045304:	pop    eax
10045305:	push   ebx
10045306:	add    al,0x10
10045308:	and    edx,ecx
1004530a:	mov    al,BYTE PTR [esi]
1004530c:	mov    BYTE PTR [edi],al
1004530e:	mov    al,BYTE PTR [esi+0x1]
10045311:	mov    BYTE PTR [edi+0x1],al
10045314:	mov    al,BYTE PTR [esi+0x2]
10045317:	shr    ecx,0x2
1004531a:	mov    BYTE PTR [edi+0x2],al
1004531d:	add    esi,0x3
10045320:	add    edi,0x3
10045323:	cmp    ecx,0x8
10045326:	jb     0x100452f4
10045328:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
1004532a:	jmp    DWORD PTR [edx*4+0x100453e4]
10045331:	lea    ecx,[ecx+0x0]
10045334:	and    edx,ecx
10045336:	mov    al,BYTE PTR [esi]
10045338:	mov    BYTE PTR [edi],al
1004533a:	mov    al,BYTE PTR [esi+0x1]
1004533d:	shr    ecx,0x2
10045340:	mov    BYTE PTR [edi+0x1],al
10045343:	add    esi,0x2
10045346:	add    edi,0x2
10045349:	cmp    ecx,0x8
1004534c:	jb     0x100452f4
1004534e:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
10045350:	jmp    DWORD PTR [edx*4+0x100453e4]
10045357:	nop
10045358:	and    edx,ecx
1004535a:	mov    al,BYTE PTR [esi]
1004535c:	mov    BYTE PTR [edi],al
1004535e:	add    esi,0x1
10045361:	shr    ecx,0x2
10045364:	add    edi,0x1
10045367:	cmp    ecx,0x8
1004536a:	jb     0x100452f4
1004536c:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
1004536e:	jmp    DWORD PTR [edx*4+0x100453e4]
10045375:	lea    ecx,[ecx+0x0]
10045378:	fist   DWORD PTR [ebx+0x4]
1004537b:	adc    al,cl
1004537d:	push   ebx
1004537e:	add    al,0x10
10045380:	rcl    BYTE PTR [ebx+0x4],0x10
10045384:	mov    eax,0xb0100453
10045389:	push   ebx
1004538a:	add    al,0x10
1004538c:	test   al,0x53
1004538e:	add    al,0x10
10045390:	mov    al,ds:0x98100453
10045395:	push   ebx
10045396:	add    al,0x10
10045398:	mov    eax,DWORD PTR [esi+ecx*4-0x1c]
1004539c:	mov    DWORD PTR [edi+ecx*4-0x1c],eax
100453a0:	mov    eax,DWORD PTR [esi+ecx*4-0x18]
100453a4:	mov    DWORD PTR [edi+ecx*4-0x18],eax
100453a8:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
100453ac:	mov    DWORD PTR [edi+ecx*4-0x14],eax
100453b0:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
100453b4:	mov    DWORD PTR [edi+ecx*4-0x10],eax
100453b8:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
100453bc:	mov    DWORD PTR [edi+ecx*4-0xc],eax
100453c0:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
100453c4:	mov    DWORD PTR [edi+ecx*4-0x8],eax
100453c8:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
100453cc:	mov    DWORD PTR [edi+ecx*4-0x4],eax
100453d0:	lea    eax,[ecx*4+0x0]
100453d7:	add    esi,eax
100453d9:	add    edi,eax
100453db:	jmp    DWORD PTR [edx*4+0x100453e4]
100453e2:	mov    edi,edi
100453e4:	hlt    
100453e5:	push   ebx
100453e6:	add    al,0x10
100453e8:	cld    
100453e9:	push   ebx
100453ea:	add    al,0x10
100453ec:	or     BYTE PTR [esp+eax*1+0x10],dl
100453f0:	sbb    al,0x54
100453f2:	add    al,0x10
100453f4:	mov    eax,DWORD PTR [ebp+0x8]
100453f7:	pop    esi
100453f8:	pop    edi
100453f9:	leave  
100453fa:	ret    
100453fb:	nop
100453fc:	mov    al,BYTE PTR [esi]
100453fe:	mov    BYTE PTR [edi],al
10045400:	mov    eax,DWORD PTR [ebp+0x8]
10045403:	pop    esi
10045404:	pop    edi
10045405:	leave  
10045406:	ret    
10045407:	nop
10045408:	mov    al,BYTE PTR [esi]
1004540a:	mov    BYTE PTR [edi],al
1004540c:	mov    al,BYTE PTR [esi+0x1]
1004540f:	mov    BYTE PTR [edi+0x1],al
10045412:	mov    eax,DWORD PTR [ebp+0x8]
10045415:	pop    esi
10045416:	pop    edi
10045417:	leave  
10045418:	ret    
10045419:	lea    ecx,[ecx+0x0]
1004541c:	mov    al,BYTE PTR [esi]
1004541e:	mov    BYTE PTR [edi],al
10045420:	mov    al,BYTE PTR [esi+0x1]
10045423:	mov    BYTE PTR [edi+0x1],al
10045426:	mov    al,BYTE PTR [esi+0x2]
10045429:	mov    BYTE PTR [edi+0x2],al
1004542c:	mov    eax,DWORD PTR [ebp+0x8]
1004542f:	pop    esi
10045430:	pop    edi
10045431:	leave  
10045432:	ret    
10045433:	nop
10045434:	lea    esi,[ecx+esi*1-0x4]
10045438:	lea    edi,[ecx+edi*1-0x4]
1004543c:	test   edi,0x3
10045442:	jne    0x10045468
10045444:	shr    ecx,0x2
10045447:	and    edx,0x3
1004544a:	cmp    ecx,0x8
1004544d:	jb     0x1004545c
1004544f:	std    
10045450:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
10045452:	cld    
10045453:	jmp    DWORD PTR [edx*4+0x10045580]
1004545a:	mov    edi,edi
1004545c:	neg    ecx
1004545e:	jmp    DWORD PTR [ecx*4+0x10045530]
10045465:	lea    ecx,[ecx+0x0]
10045468:	mov    eax,edi
1004546a:	mov    edx,0x3
1004546f:	cmp    ecx,0x4
10045472:	jb     0x10045480
10045474:	and    eax,0x3
10045477:	sub    ecx,eax
10045479:	jmp    DWORD PTR [eax*4+0x10045484]
10045480:	jmp    DWORD PTR [ecx*4+0x10045580]
10045487:	nop
10045488:	xchg   esp,eax
10045489:	push   esp
1004548a:	add    al,0x10
1004548c:	mov    eax,0xe0100454
10045491:	push   esp
10045492:	add    al,0x10
10045494:	mov    al,BYTE PTR [esi+0x3]
10045497:	and    edx,ecx
10045499:	mov    BYTE PTR [edi+0x3],al
1004549c:	sub    esi,0x1
1004549f:	shr    ecx,0x2
100454a2:	sub    edi,0x1
100454a5:	cmp    ecx,0x8
100454a8:	jb     0x1004545c
100454aa:	std    
100454ab:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
100454ad:	cld    
100454ae:	jmp    DWORD PTR [edx*4+0x10045580]
100454b5:	lea    ecx,[ecx+0x0]
100454b8:	mov    al,BYTE PTR [esi+0x3]
100454bb:	and    edx,ecx
100454bd:	mov    BYTE PTR [edi+0x3],al
100454c0:	mov    al,BYTE PTR [esi+0x2]
100454c3:	shr    ecx,0x2
100454c6:	mov    BYTE PTR [edi+0x2],al
100454c9:	sub    esi,0x2
100454cc:	sub    edi,0x2
100454cf:	cmp    ecx,0x8
100454d2:	jb     0x1004545c
100454d4:	std    
100454d5:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
100454d7:	cld    
100454d8:	jmp    DWORD PTR [edx*4+0x10045580]
100454df:	nop
100454e0:	mov    al,BYTE PTR [esi+0x3]
100454e3:	and    edx,ecx
100454e5:	mov    BYTE PTR [edi+0x3],al
100454e8:	mov    al,BYTE PTR [esi+0x2]
100454eb:	mov    BYTE PTR [edi+0x2],al
100454ee:	mov    al,BYTE PTR [esi+0x1]
100454f1:	shr    ecx,0x2
100454f4:	mov    BYTE PTR [edi+0x1],al
100454f7:	sub    esi,0x3
100454fa:	sub    edi,0x3
100454fd:	cmp    ecx,0x8
10045500:	jb     0x1004545c
10045506:	std    
10045507:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
10045509:	cld    
1004550a:	jmp    DWORD PTR [edx*4+0x10045580]
10045511:	lea    ecx,[ecx+0x0]
10045514:	xor    al,0x55
10045516:	add    al,0x10
10045518:	cmp    al,0x55
1004551a:	add    al,0x10
1004551c:	inc    esp
1004551d:	push   ebp
1004551e:	add    al,0x10
10045520:	dec    esp
10045521:	push   ebp
10045522:	add    al,0x10
10045524:	push   esp
10045525:	push   ebp
10045526:	add    al,0x10
10045528:	pop    esp
10045529:	push   ebp
1004552a:	add    al,0x10
1004552c:	fs push ebp
1004552e:	add    al,0x10
10045530:	ja     0x10045587
10045532:	add    al,0x10
10045534:	mov    eax,DWORD PTR [esi+ecx*4+0x1c]
10045538:	mov    DWORD PTR [edi+ecx*4+0x1c],eax
1004553c:	mov    eax,DWORD PTR [esi+ecx*4+0x18]
10045540:	mov    DWORD PTR [edi+ecx*4+0x18],eax
10045544:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
10045548:	mov    DWORD PTR [edi+ecx*4+0x14],eax
1004554c:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
10045550:	mov    DWORD PTR [edi+ecx*4+0x10],eax
10045554:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
10045558:	mov    DWORD PTR [edi+ecx*4+0xc],eax
1004555c:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
10045560:	mov    DWORD PTR [edi+ecx*4+0x8],eax
10045564:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
10045568:	mov    DWORD PTR [edi+ecx*4+0x4],eax
1004556c:	lea    eax,[ecx*4+0x0]
10045573:	add    esi,eax
10045575:	add    edi,eax
10045577:	jmp    DWORD PTR [edx*4+0x10045580]
1004557e:	mov    edi,edi
10045580:	nop
10045581:	push   ebp
10045582:	add    al,0x10
10045584:	cwde   
10045585:	push   ebp
10045586:	add    al,0x10
10045588:	test   al,0x55
1004558a:	add    al,0x10
1004558c:	mov    esp,0x8b100455
10045591:	inc    ebp
10045592:	or     BYTE PTR [esi+0x5f],bl
10045595:	leave  
10045596:	ret    
10045597:	nop
10045598:	mov    al,BYTE PTR [esi+0x3]
1004559b:	mov    BYTE PTR [edi+0x3],al
1004559e:	mov    eax,DWORD PTR [ebp+0x8]
100455a1:	pop    esi
100455a2:	pop    edi
100455a3:	leave  
100455a4:	ret    
100455a5:	lea    ecx,[ecx+0x0]
100455a8:	mov    al,BYTE PTR [esi+0x3]
100455ab:	mov    BYTE PTR [edi+0x3],al
100455ae:	mov    al,BYTE PTR [esi+0x2]
100455b1:	mov    BYTE PTR [edi+0x2],al
100455b4:	mov    eax,DWORD PTR [ebp+0x8]
100455b7:	pop    esi
100455b8:	pop    edi
100455b9:	leave  
100455ba:	ret    
100455bb:	nop
100455bc:	mov    al,BYTE PTR [esi+0x3]
100455bf:	mov    BYTE PTR [edi+0x3],al
100455c2:	mov    al,BYTE PTR [esi+0x2]
100455c5:	mov    BYTE PTR [edi+0x2],al
100455c8:	mov    al,BYTE PTR [esi+0x1]
100455cb:	mov    BYTE PTR [edi+0x1],al
100455ce:	mov    eax,DWORD PTR [ebp+0x8]
100455d1:	pop    esi
100455d2:	pop    edi
100455d3:	leave  
100455d4:	ret    
100455d5:	mov    eax,DWORD PTR [esp+0x4]
100455d9:	test   eax,eax
100455db:	push   esi
100455dc:	mov    esi,ecx
100455de:	mov    BYTE PTR [esi+0xc],0x0
100455e2:	jne    0x10045647
100455e4:	call   0x100471ec
100455e9:	mov    DWORD PTR [esi+0x8],eax
100455ec:	mov    ecx,DWORD PTR [eax+0x6c]
100455ef:	mov    DWORD PTR [esi],ecx
100455f1:	mov    ecx,DWORD PTR [eax+0x68]
100455f4:	mov    DWORD PTR [esi+0x4],ecx
100455f7:	mov    ecx,DWORD PTR [esi]
100455f9:	cmp    ecx,DWORD PTR ds:0x1007e9a8
100455ff:	je     0x10045613
10045601:	mov    ecx,DWORD PTR ds:0x1007e8c4
10045607:	test   DWORD PTR [eax+0x70],ecx
1004560a:	jne    0x10045613
1004560c:	call   0x1004a998
10045611:	mov    DWORD PTR [esi],eax
10045613:	mov    eax,DWORD PTR [esi+0x4]
10045616:	cmp    eax,DWORD PTR ds:0x1007e7c8
1004561c:	je     0x10045634
1004561e:	mov    eax,DWORD PTR [esi+0x8]
10045621:	mov    ecx,DWORD PTR ds:0x1007e8c4
10045627:	test   DWORD PTR [eax+0x70],ecx
1004562a:	jne    0x10045634
1004562c:	call   0x1004a287
10045631:	mov    DWORD PTR [esi+0x4],eax
10045634:	mov    eax,DWORD PTR [esi+0x8]
10045637:	test   BYTE PTR [eax+0x70],0x2
1004563b:	jne    0x10045651
1004563d:	or     DWORD PTR [eax+0x70],0x2
10045641:	mov    BYTE PTR [esi+0xc],0x1
10045645:	jmp    0x10045651
10045647:	mov    ecx,DWORD PTR [eax]
10045649:	mov    DWORD PTR [esi],ecx
1004564b:	mov    eax,DWORD PTR [eax+0x4]
1004564e:	mov    DWORD PTR [esi+0x4],eax
10045651:	mov    eax,esi
10045653:	pop    esi
10045654:	ret    0x4
10045657:	mov    edx,DWORD PTR [esp+0x8]
1004565b:	push   esi
1004565c:	mov    esi,DWORD PTR [esp+0x8]
10045660:	push   edi
10045661:	movzx  eax,BYTE PTR [esi]
10045664:	lea    ecx,[eax-0x41]
10045667:	inc    esi
10045668:	cmp    ecx,0x19
1004566b:	ja     0x10045670
1004566d:	add    eax,0x20
10045670:	movzx  ecx,BYTE PTR [edx]
10045673:	lea    edi,[ecx-0x41]
10045676:	inc    edx
10045677:	cmp    edi,0x19
1004567a:	ja     0x1004567f
1004567c:	add    ecx,0x20
1004567f:	test   eax,eax
10045681:	je     0x10045687
10045683:	cmp    eax,ecx
10045685:	je     0x10045661
10045687:	pop    edi
10045688:	sub    eax,ecx
1004568a:	pop    esi
1004568b:	ret    
1004568c:	push   ebp
1004568d:	mov    ebp,esp
1004568f:	sub    esp,0x10
10045692:	push   ebx
10045693:	push   DWORD PTR [ebp+0x10]
10045696:	lea    ecx,[ebp-0x10]
10045699:	call   0x100455d5
1004569e:	xor    ebx,ebx
100456a0:	cmp    DWORD PTR [ebp+0x8],ebx
100456a3:	jne    0x100456d3
100456a5:	call   0x10046c45
100456aa:	push   ebx
100456ab:	push   ebx
100456ac:	push   ebx
100456ad:	push   ebx
100456ae:	push   ebx
100456af:	mov    DWORD PTR [eax],0x16
100456b5:	call   0x1004347c
100456ba:	add    esp,0x14
100456bd:	cmp    BYTE PTR [ebp-0x4],bl
100456c0:	je     0x100456c9
100456c2:	mov    eax,DWORD PTR [ebp-0x8]
100456c5:	and    DWORD PTR [eax+0x70],0xfffffffd
100456c9:	mov    eax,0x7fffffff
100456ce:	jmp    0x1004575c
100456d3:	push   edi
100456d4:	mov    edi,DWORD PTR [ebp+0xc]
100456d7:	cmp    edi,ebx
100456d9:	jne    0x10045706
100456db:	call   0x10046c45
100456e0:	push   ebx
100456e1:	push   ebx
100456e2:	push   ebx
100456e3:	push   ebx
100456e4:	push   ebx
100456e5:	mov    DWORD PTR [eax],0x16
100456eb:	call   0x1004347c
100456f0:	add    esp,0x14
100456f3:	cmp    BYTE PTR [ebp-0x4],bl
100456f6:	je     0x100456ff
100456f8:	mov    eax,DWORD PTR [ebp-0x8]
100456fb:	and    DWORD PTR [eax+0x70],0xfffffffd
100456ff:	mov    eax,0x7fffffff
10045704:	jmp    0x1004575b
10045706:	mov    eax,DWORD PTR [ebp-0x10]
10045709:	cmp    DWORD PTR [eax+0x14],ebx
1004570c:	jne    0x1004571b
1004570e:	push   edi
1004570f:	push   DWORD PTR [ebp+0x8]
10045712:	call   0x10045657
10045717:	pop    ecx
10045718:	pop    ecx
10045719:	jmp    0x1004574f
1004571b:	push   esi
1004571c:	mov    eax,DWORD PTR [ebp+0x8]
1004571f:	movzx  eax,BYTE PTR [eax]
10045722:	lea    ecx,[ebp-0x10]
10045725:	push   ecx
10045726:	push   eax
10045727:	call   0x10045daa
1004572c:	inc    DWORD PTR [ebp+0x8]
1004572f:	mov    esi,eax
10045731:	movzx  eax,BYTE PTR [edi]
10045734:	lea    ecx,[ebp-0x10]
10045737:	push   ecx
10045738:	push   eax
10045739:	call   0x10045daa
1004573e:	add    esp,0x10
10045741:	inc    edi
10045742:	cmp    esi,ebx
10045744:	je     0x1004574a
10045746:	cmp    esi,eax
10045748:	je     0x1004571c
1004574a:	sub    esi,eax
1004574c:	mov    eax,esi
1004574e:	pop    esi
1004574f:	cmp    BYTE PTR [ebp-0x4],bl
10045752:	je     0x1004575b
10045754:	mov    ecx,DWORD PTR [ebp-0x8]
10045757:	and    DWORD PTR [ecx+0x70],0xfffffffd
1004575b:	pop    edi
1004575c:	pop    ebx
1004575d:	leave  
1004575e:	ret    
1004575f:	push   ebp
10045760:	mov    ebp,esp
10045762:	push   esi
10045763:	xor    esi,esi
10045765:	cmp    DWORD PTR ds:0x100802c8,esi
1004576b:	jne    0x1004579d
1004576d:	cmp    DWORD PTR [ebp+0x8],esi
10045770:	jne    0x10045791
10045772:	call   0x10046c45
10045777:	push   esi
10045778:	push   esi
10045779:	push   esi
1004577a:	push   esi
1004577b:	push   esi
1004577c:	mov    DWORD PTR [eax],0x16
10045782:	call   0x1004347c
10045787:	add    esp,0x14
1004578a:	mov    eax,0x7fffffff
1004578f:	jmp    0x100457ac
10045791:	cmp    DWORD PTR [ebp+0xc],esi
10045794:	je     0x10045772
10045796:	pop    esi
10045797:	pop    ebp
10045798:	jmp    0x10045657
1004579d:	push   esi
1004579e:	push   DWORD PTR [ebp+0xc]
100457a1:	push   DWORD PTR [ebp+0x8]
100457a4:	call   0x1004568c
100457a9:	add    esp,0xc
100457ac:	pop    esi
100457ad:	pop    ebp
100457ae:	ret    
100457af:	int3   
100457b0:	push   ebp
100457b1:	mov    ebp,esp
100457b3:	push   edi
100457b4:	push   esi
100457b5:	mov    esi,DWORD PTR [ebp+0xc]
100457b8:	mov    ecx,DWORD PTR [ebp+0x10]
100457bb:	mov    edi,DWORD PTR [ebp+0x8]
100457be:	mov    eax,ecx
100457c0:	mov    edx,ecx
100457c2:	add    eax,esi
100457c4:	cmp    edi,esi
100457c6:	jbe    0x100457d0
100457c8:	cmp    edi,eax
100457ca:	jb     0x10045974
100457d0:	cmp    ecx,0x100
100457d6:	jb     0x100457f7
100457d8:	cmp    DWORD PTR ds:0x10082584,0x0
100457df:	je     0x100457f7
100457e1:	push   edi
100457e2:	push   esi
100457e3:	and    edi,0xf
100457e6:	and    esi,0xf
100457e9:	cmp    edi,esi
100457eb:	pop    esi
100457ec:	pop    edi
100457ed:	jne    0x100457f7
100457ef:	pop    esi
100457f0:	pop    edi
100457f1:	pop    ebp
100457f2:	jmp    0x10049f82
100457f7:	test   edi,0x3
100457fd:	jne    0x10045814
100457ff:	shr    ecx,0x2
10045802:	and    edx,0x3
10045805:	cmp    ecx,0x8
10045808:	jb     0x10045834
1004580a:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
1004580c:	jmp    DWORD PTR [edx*4+0x10045924]
10045813:	nop
10045814:	mov    eax,edi
10045816:	mov    edx,0x3
1004581b:	sub    ecx,0x4
1004581e:	jb     0x1004582c
10045820:	and    eax,0x3
10045823:	add    ecx,eax
10045825:	jmp    DWORD PTR [eax*4+0x10045838]
1004582c:	jmp    DWORD PTR [ecx*4+0x10045934]
10045833:	nop
10045834:	jmp    DWORD PTR [ecx*4+0x100458b8]
1004583b:	nop
1004583c:	dec    eax
1004583d:	pop    eax
1004583e:	add    al,0x10
10045840:	je     0x1004589a
10045842:	add    al,0x10
10045844:	cwde   
10045845:	pop    eax
10045846:	add    al,0x10
10045848:	and    edx,ecx
1004584a:	mov    al,BYTE PTR [esi]
1004584c:	mov    BYTE PTR [edi],al
1004584e:	mov    al,BYTE PTR [esi+0x1]
10045851:	mov    BYTE PTR [edi+0x1],al
10045854:	mov    al,BYTE PTR [esi+0x2]
10045857:	shr    ecx,0x2
1004585a:	mov    BYTE PTR [edi+0x2],al
1004585d:	add    esi,0x3
10045860:	add    edi,0x3
10045863:	cmp    ecx,0x8
10045866:	jb     0x10045834
10045868:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
1004586a:	jmp    DWORD PTR [edx*4+0x10045924]
10045871:	lea    ecx,[ecx+0x0]
10045874:	and    edx,ecx
10045876:	mov    al,BYTE PTR [esi]
10045878:	mov    BYTE PTR [edi],al
1004587a:	mov    al,BYTE PTR [esi+0x1]
1004587d:	shr    ecx,0x2
10045880:	mov    BYTE PTR [edi+0x1],al
10045883:	add    esi,0x2
10045886:	add    edi,0x2
10045889:	cmp    ecx,0x8
1004588c:	jb     0x10045834
1004588e:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
10045890:	jmp    DWORD PTR [edx*4+0x10045924]
10045897:	nop
10045898:	and    edx,ecx
1004589a:	mov    al,BYTE PTR [esi]
1004589c:	mov    BYTE PTR [edi],al
1004589e:	add    esi,0x1
100458a1:	shr    ecx,0x2
100458a4:	add    edi,0x1
100458a7:	cmp    ecx,0x8
100458aa:	jb     0x10045834
100458ac:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
100458ae:	jmp    DWORD PTR [edx*4+0x10045924]
100458b5:	lea    ecx,[ecx+0x0]
100458b8:	sbb    ebx,DWORD PTR [ecx+0x4]
100458bb:	adc    BYTE PTR [eax],cl
100458bd:	pop    ecx
100458be:	add    al,0x10
100458c0:	add    BYTE PTR [ecx+0x4],bl
100458c3:	adc    al,bh
100458c5:	pop    eax
100458c6:	add    al,0x10
100458c8:	lock pop eax
100458ca:	add    al,0x10
100458cc:	call   0xf0145d29
100458d1:	pop    eax
100458d2:	add    al,0x10
100458d4:	fcomp  DWORD PTR [eax+0x4]
100458d7:	adc    BYTE PTR [ebx-0x761b71bc],cl
100458dd:	inc    esp
100458de:	(bad)  
100458df:	in     al,0x8b
100458e1:	inc    esp
100458e2:	mov    gs,eax
100458e4:	mov    DWORD PTR [edi+ecx*4-0x18],eax
100458e8:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
100458ec:	mov    DWORD PTR [edi+ecx*4-0x14],eax
100458f0:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
100458f4:	mov    DWORD PTR [edi+ecx*4-0x10],eax
100458f8:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
100458fc:	mov    DWORD PTR [edi+ecx*4-0xc],eax
10045900:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
10045904:	mov    DWORD PTR [edi+ecx*4-0x8],eax
10045908:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
1004590c:	mov    DWORD PTR [edi+ecx*4-0x4],eax
10045910:	lea    eax,[ecx*4+0x0]
10045917:	add    esi,eax
10045919:	add    edi,eax
1004591b:	jmp    DWORD PTR [edx*4+0x10045924]
10045922:	mov    edi,edi
10045924:	xor    al,0x59
10045926:	add    al,0x10
10045928:	cmp    al,0x59
1004592a:	add    al,0x10
1004592c:	dec    eax
1004592d:	pop    ecx
1004592e:	add    al,0x10
10045930:	pop    esp
10045931:	pop    ecx
10045932:	add    al,0x10
10045934:	mov    eax,DWORD PTR [ebp+0x8]
10045937:	pop    esi
10045938:	pop    edi
10045939:	leave  
1004593a:	ret    
1004593b:	nop
1004593c:	mov    al,BYTE PTR [esi]
1004593e:	mov    BYTE PTR [edi],al
10045940:	mov    eax,DWORD PTR [ebp+0x8]
10045943:	pop    esi
10045944:	pop    edi
10045945:	leave  
10045946:	ret    
10045947:	nop
10045948:	mov    al,BYTE PTR [esi]
1004594a:	mov    BYTE PTR [edi],al
1004594c:	mov    al,BYTE PTR [esi+0x1]
1004594f:	mov    BYTE PTR [edi+0x1],al
10045952:	mov    eax,DWORD PTR [ebp+0x8]
10045955:	pop    esi
10045956:	pop    edi
10045957:	leave  
10045958:	ret    
10045959:	lea    ecx,[ecx+0x0]
1004595c:	mov    al,BYTE PTR [esi]
1004595e:	mov    BYTE PTR [edi],al
10045960:	mov    al,BYTE PTR [esi+0x1]
10045963:	mov    BYTE PTR [edi+0x1],al
10045966:	mov    al,BYTE PTR [esi+0x2]
10045969:	mov    BYTE PTR [edi+0x2],al
1004596c:	mov    eax,DWORD PTR [ebp+0x8]
1004596f:	pop    esi
10045970:	pop    edi
10045971:	leave  
10045972:	ret    
10045973:	nop
10045974:	lea    esi,[ecx+esi*1-0x4]
10045978:	lea    edi,[ecx+edi*1-0x4]
1004597c:	test   edi,0x3
10045982:	jne    0x100459a8
10045984:	shr    ecx,0x2
10045987:	and    edx,0x3
1004598a:	cmp    ecx,0x8
1004598d:	jb     0x1004599c
1004598f:	std    
10045990:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
10045992:	cld    
10045993:	jmp    DWORD PTR [edx*4+0x10045ac0]
1004599a:	mov    edi,edi
1004599c:	neg    ecx
1004599e:	jmp    DWORD PTR [ecx*4+0x10045a70]
100459a5:	lea    ecx,[ecx+0x0]
100459a8:	mov    eax,edi
100459aa:	mov    edx,0x3
100459af:	cmp    ecx,0x4
100459b2:	jb     0x100459c0
100459b4:	and    eax,0x3
100459b7:	sub    ecx,eax
100459b9:	jmp    DWORD PTR [eax*4+0x100459c4]
100459c0:	jmp    DWORD PTR [ecx*4+0x10045ac0]
100459c7:	nop
100459c8:	aam    0x59
100459ca:	add    al,0x10
100459cc:	clc    
100459cd:	pop    ecx
100459ce:	add    al,0x10
100459d0:	and    BYTE PTR [edx+0x4],bl
100459d3:	adc    BYTE PTR [edx-0x2edcfcba],cl
100459d9:	mov    BYTE PTR [edi+0x3],al
100459dc:	sub    esi,0x1
100459df:	shr    ecx,0x2
100459e2:	sub    edi,0x1
100459e5:	cmp    ecx,0x8
100459e8:	jb     0x1004599c
100459ea:	std    
100459eb:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
100459ed:	cld    
100459ee:	jmp    DWORD PTR [edx*4+0x10045ac0]
100459f5:	lea    ecx,[ecx+0x0]
100459f8:	mov    al,BYTE PTR [esi+0x3]
100459fb:	and    edx,ecx
100459fd:	mov    BYTE PTR [edi+0x3],al
10045a00:	mov    al,BYTE PTR [esi+0x2]
10045a03:	shr    ecx,0x2
10045a06:	mov    BYTE PTR [edi+0x2],al
10045a09:	sub    esi,0x2
10045a0c:	sub    edi,0x2
10045a0f:	cmp    ecx,0x8
10045a12:	jb     0x1004599c
10045a14:	std    
10045a15:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
10045a17:	cld    
10045a18:	jmp    DWORD PTR [edx*4+0x10045ac0]
10045a1f:	nop
10045a20:	mov    al,BYTE PTR [esi+0x3]
10045a23:	and    edx,ecx
10045a25:	mov    BYTE PTR [edi+0x3],al
10045a28:	mov    al,BYTE PTR [esi+0x2]
10045a2b:	mov    BYTE PTR [edi+0x2],al
10045a2e:	mov    al,BYTE PTR [esi+0x1]
10045a31:	shr    ecx,0x2
10045a34:	mov    BYTE PTR [edi+0x1],al
10045a37:	sub    esi,0x3
10045a3a:	sub    edi,0x3
10045a3d:	cmp    ecx,0x8
10045a40:	jb     0x1004599c
10045a46:	std    
10045a47:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
10045a49:	cld    
10045a4a:	jmp    DWORD PTR [edx*4+0x10045ac0]
10045a51:	lea    ecx,[ecx+0x0]
10045a54:	je     0x10045ab0
10045a56:	add    al,0x10
10045a58:	jl     0x10045ab4
10045a5a:	add    al,0x10
10045a5c:	test   BYTE PTR [edx+0x4],bl
10045a5f:	adc    BYTE PTR [edx+ebx*2+0x5a941004],cl
10045a66:	add    al,0x10
10045a68:	pushf  
10045a69:	pop    edx
10045a6a:	add    al,0x10
10045a6c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
10045a6d:	pop    edx
10045a6e:	add    al,0x10
10045a70:	mov    bh,0x5a
10045a72:	add    al,0x10
10045a74:	mov    eax,DWORD PTR [esi+ecx*4+0x1c]
10045a78:	mov    DWORD PTR [edi+ecx*4+0x1c],eax
10045a7c:	mov    eax,DWORD PTR [esi+ecx*4+0x18]
10045a80:	mov    DWORD PTR [edi+ecx*4+0x18],eax
10045a84:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
10045a88:	mov    DWORD PTR [edi+ecx*4+0x14],eax
10045a8c:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
10045a90:	mov    DWORD PTR [edi+ecx*4+0x10],eax
10045a94:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
10045a98:	mov    DWORD PTR [edi+ecx*4+0xc],eax
10045a9c:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
10045aa0:	mov    DWORD PTR [edi+ecx*4+0x8],eax
10045aa4:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
10045aa8:	mov    DWORD PTR [edi+ecx*4+0x4],eax
10045aac:	lea    eax,[ecx*4+0x0]
10045ab3:	add    esi,eax
10045ab5:	add    edi,eax
10045ab7:	jmp    DWORD PTR [edx*4+0x10045ac0]
10045abe:	mov    edi,edi
10045ac0:	rcr    BYTE PTR [edx+0x4],1
10045ac3:	adc    al,bl
10045ac5:	pop    edx
10045ac6:	add    al,0x10
10045ac8:	call   0xc145f27
10045acd:	pop    edx
10045ace:	add    al,0x10
10045ad0:	mov    eax,DWORD PTR [ebp+0x8]
10045ad3:	pop    esi
10045ad4:	pop    edi
10045ad5:	leave  
10045ad6:	ret    
10045ad7:	nop
10045ad8:	mov    al,BYTE PTR [esi+0x3]
10045adb:	mov    BYTE PTR [edi+0x3],al
10045ade:	mov    eax,DWORD PTR [ebp+0x8]
10045ae1:	pop    esi
10045ae2:	pop    edi
10045ae3:	leave  
10045ae4:	ret    
10045ae5:	lea    ecx,[ecx+0x0]
10045ae8:	mov    al,BYTE PTR [esi+0x3]
10045aeb:	mov    BYTE PTR [edi+0x3],al
10045aee:	mov    al,BYTE PTR [esi+0x2]
10045af1:	mov    BYTE PTR [edi+0x2],al
10045af4:	mov    eax,DWORD PTR [ebp+0x8]
10045af7:	pop    esi
10045af8:	pop    edi
10045af9:	leave  
10045afa:	ret    
10045afb:	nop
10045afc:	mov    al,BYTE PTR [esi+0x3]
10045aff:	mov    BYTE PTR [edi+0x3],al
10045b02:	mov    al,BYTE PTR [esi+0x2]
10045b05:	mov    BYTE PTR [edi+0x2],al
10045b08:	mov    al,BYTE PTR [esi+0x1]
10045b0b:	mov    BYTE PTR [edi+0x1],al
10045b0e:	mov    eax,DWORD PTR [ebp+0x8]
10045b11:	pop    esi
10045b12:	pop    edi
10045b13:	leave  
10045b14:	ret    
10045b15:	int3   
10045b16:	int3   
10045b17:	int3   
10045b18:	int3   
10045b19:	int3   
10045b1a:	int3   
10045b1b:	int3   
10045b1c:	int3   
10045b1d:	int3   
10045b1e:	int3   
10045b1f:	int3   
10045b20:	mov    ecx,DWORD PTR [esp+0x8]
10045b24:	push   edi
10045b25:	push   ebx
10045b26:	push   esi
10045b27:	mov    dl,BYTE PTR [ecx]
10045b29:	mov    edi,DWORD PTR [esp+0x10]
10045b2d:	test   dl,dl
10045b2f:	je     0x10045ba0
10045b31:	mov    dh,BYTE PTR [ecx+0x1]
10045b34:	test   dh,dh
10045b36:	je     0x10045b8d
10045b38:	mov    esi,edi
10045b3a:	mov    ecx,DWORD PTR [esp+0x14]
10045b3e:	mov    al,BYTE PTR [edi]
10045b40:	add    esi,0x1
10045b43:	cmp    al,dl
10045b45:	je     0x10045b5e
10045b47:	test   al,al
10045b49:	je     0x10045b58
10045b4b:	mov    al,BYTE PTR [esi]
10045b4d:	add    esi,0x1
10045b50:	cmp    al,dl
10045b52:	je     0x10045b5e
10045b54:	test   al,al
10045b56:	jne    0x10045b4b
10045b58:	pop    esi
10045b59:	pop    ebx
10045b5a:	pop    edi
10045b5b:	xor    eax,eax
10045b5d:	ret    
10045b5e:	mov    al,BYTE PTR [esi]
10045b60:	add    esi,0x1
10045b63:	cmp    al,dh
10045b65:	jne    0x10045b50
10045b67:	lea    edi,[esi-0x1]
10045b6a:	mov    ah,BYTE PTR [ecx+0x2]
10045b6d:	test   ah,ah
10045b6f:	je     0x10045b99
10045b71:	mov    al,BYTE PTR [esi]
10045b73:	add    esi,0x2
10045b76:	cmp    al,ah
10045b78:	jne    0x10045b38
10045b7a:	mov    al,BYTE PTR [ecx+0x3]
10045b7d:	test   al,al
10045b7f:	je     0x10045b99
10045b81:	mov    ah,BYTE PTR [esi-0x1]
10045b84:	add    ecx,0x2
10045b87:	cmp    al,ah
10045b89:	je     0x10045b6a
10045b8b:	jmp    0x10045b38
10045b8d:	xor    eax,eax
10045b8f:	pop    esi
10045b90:	pop    ebx
10045b91:	pop    edi
10045b92:	mov    al,dl
10045b94:	jmp    0x1004aa26
10045b99:	lea    eax,[edi-0x1]
10045b9c:	pop    esi
10045b9d:	pop    ebx
10045b9e:	pop    edi
10045b9f:	ret    
10045ba0:	mov    eax,edi
10045ba2:	pop    esi
10045ba3:	pop    ebx
10045ba4:	pop    edi
10045ba5:	ret    
10045ba6:	cmp    DWORD PTR [esp+0x8],0x0
10045bab:	je     0x10045bb3
10045bad:	mov    BYTE PTR [ecx],0x2d
10045bb0:	inc    ecx
10045bb1:	neg    eax
10045bb3:	push   esi
10045bb4:	mov    esi,ecx
10045bb6:	xor    edx,edx
10045bb8:	div    DWORD PTR [esp+0x8]
10045bbc:	cmp    edx,0x9
10045bbf:	jbe    0x10045bc6
10045bc1:	add    dl,0x57
10045bc4:	jmp    0x10045bc9
10045bc6:	add    dl,0x30
10045bc9:	mov    BYTE PTR [ecx],dl
10045bcb:	inc    ecx
10045bcc:	test   eax,eax
10045bce:	ja     0x10045bb6
10045bd0:	mov    BYTE PTR [ecx],0x0
10045bd3:	dec    ecx
10045bd4:	mov    dl,BYTE PTR [esi]
10045bd6:	mov    al,BYTE PTR [ecx]
10045bd8:	mov    BYTE PTR [ecx],dl
10045bda:	dec    ecx
10045bdb:	mov    BYTE PTR [esi],al
10045bdd:	inc    esi
10045bde:	cmp    esi,ecx
10045be0:	jb     0x10045bd4
10045be2:	pop    esi
10045be3:	ret    0x8
10045be6:	push   ebp
10045be7:	mov    ebp,esp
10045be9:	cmp    DWORD PTR [ebp+0x10],0xa
10045bed:	mov    eax,DWORD PTR [ebp+0x8]
10045bf0:	jne    0x10045bfc
10045bf2:	test   eax,eax
10045bf4:	jge    0x10045bfc
10045bf6:	push   0x1
10045bf8:	push   0xa
10045bfa:	jmp    0x10045c01
10045bfc:	push   0x0
10045bfe:	push   DWORD PTR [ebp+0x10]
10045c01:	mov    ecx,DWORD PTR [ebp+0xc]
10045c04:	call   0x10045ba6
10045c09:	mov    eax,DWORD PTR [ebp+0xc]
10045c0c:	pop    ebp
10045c0d:	ret    
10045c0e:	push   ebp
10045c0f:	mov    ebp,esp
10045c11:	xor    eax,eax
10045c13:	cmp    DWORD PTR [ebp+0x10],0xa
10045c17:	jne    0x10045c1f
10045c19:	cmp    DWORD PTR [ebp+0x8],eax
10045c1c:	jge    0x10045c1f
10045c1e:	inc    eax
10045c1f:	mov    ecx,DWORD PTR [ebp+0xc]
10045c22:	push   eax
10045c23:	push   DWORD PTR [ebp+0x10]
10045c26:	mov    eax,DWORD PTR [ebp+0x8]
10045c29:	call   0x10045ba6
10045c2e:	mov    eax,DWORD PTR [ebp+0xc]
10045c31:	pop    ebp
10045c32:	ret    
10045c33:	int3   
10045c34:	int3   
10045c35:	int3   
10045c36:	int3   
10045c37:	int3   
10045c38:	int3   
10045c39:	int3   
10045c3a:	int3   
10045c3b:	int3   
10045c3c:	int3   
10045c3d:	int3   
10045c3e:	int3   
10045c3f:	int3   
10045c40:	mov    eax,DWORD PTR [esp+0xc]
10045c44:	push   ebx
10045c45:	test   eax,eax
10045c47:	je     0x10045c9b
10045c49:	mov    edx,DWORD PTR [esp+0x8]
10045c4d:	xor    ebx,ebx
10045c4f:	mov    bl,BYTE PTR [esp+0xc]
10045c53:	test   edx,0x3
10045c59:	je     0x10045c71
10045c5b:	mov    cl,BYTE PTR [edx]
10045c5d:	add    edx,0x1
10045c60:	xor    cl,bl
10045c62:	je     0x10045cd6
10045c64:	sub    eax,0x1
10045c67:	je     0x10045c9b
10045c69:	test   edx,0x3
10045c6f:	jne    0x10045c5b
10045c71:	sub    eax,0x4
10045c74:	jb     0x10045c88
10045c76:	push   edi
10045c77:	mov    edi,ebx
10045c79:	shl    ebx,0x8
10045c7c:	add    ebx,edi
10045c7e:	mov    edi,ebx
10045c80:	shl    ebx,0x10
10045c83:	add    ebx,edi
10045c85:	jmp    0x10045ca2
10045c87:	pop    edi
10045c88:	add    eax,0x4
10045c8b:	je     0x10045c9b
10045c8d:	mov    cl,BYTE PTR [edx]
10045c8f:	add    edx,0x1
10045c92:	xor    cl,bl
10045c94:	je     0x10045cd6
10045c96:	sub    eax,0x1
10045c99:	jne    0x10045c8d
10045c9b:	pop    ebx
10045c9c:	ret    
10045c9d:	sub    eax,0x4
10045ca0:	jb     0x10045c87
10045ca2:	mov    ecx,DWORD PTR [edx]
10045ca4:	xor    ecx,ebx
10045ca6:	mov    edi,0x7efefeff
10045cab:	add    edi,ecx
10045cad:	xor    ecx,0xffffffff
10045cb0:	xor    ecx,edi
10045cb2:	add    edx,0x4
10045cb5:	and    ecx,0x81010100
10045cbb:	je     0x10045c9d
10045cbd:	mov    ecx,DWORD PTR [edx-0x4]
10045cc0:	xor    cl,bl
10045cc2:	je     0x10045ce7
10045cc4:	xor    ch,bl
10045cc6:	je     0x10045ce1
10045cc8:	shr    ecx,0x10
10045ccb:	xor    cl,bl
10045ccd:	je     0x10045cdb
10045ccf:	xor    ch,bl
10045cd1:	je     0x10045cd5
10045cd3:	jmp    0x10045c9d
10045cd5:	pop    edi
10045cd6:	lea    eax,[edx-0x1]
10045cd9:	pop    ebx
10045cda:	ret    
10045cdb:	lea    eax,[edx-0x2]
10045cde:	pop    edi
10045cdf:	pop    ebx
10045ce0:	ret    
10045ce1:	lea    eax,[edx-0x3]
10045ce4:	pop    edi
10045ce5:	pop    ebx
10045ce6:	ret    
10045ce7:	lea    eax,[edx-0x4]
10045cea:	pop    edi
10045ceb:	pop    ebx
10045cec:	ret    
10045ced:	int3   
10045cee:	int3   
10045cef:	int3   
10045cf0:	mov    edx,DWORD PTR [esp+0xc]
10045cf4:	mov    ecx,DWORD PTR [esp+0x4]
10045cf8:	test   edx,edx
10045cfa:	je     0x10045d65
10045cfc:	xor    eax,eax
10045cfe:	mov    al,BYTE PTR [esp+0x8]
10045d02:	test   al,al
10045d04:	jne    0x10045d1c
10045d06:	cmp    edx,0x100
10045d0c:	jb     0x10045d1c
10045d0e:	cmp    DWORD PTR ds:0x10082584,0x0
10045d15:	je     0x10045d1c
10045d17:	jmp    0x1004abcc
10045d1c:	push   edi
10045d1d:	mov    edi,ecx
10045d1f:	cmp    edx,0x4
10045d22:	jb     0x10045d55
10045d24:	neg    ecx
10045d26:	and    ecx,0x3
10045d29:	je     0x10045d37
10045d2b:	sub    edx,ecx
10045d2d:	mov    BYTE PTR [edi],al
10045d2f:	add    edi,0x1
10045d32:	sub    ecx,0x1
10045d35:	jne    0x10045d2d
10045d37:	mov    ecx,eax
10045d39:	shl    eax,0x8
10045d3c:	add    eax,ecx
10045d3e:	mov    ecx,eax
10045d40:	shl    eax,0x10
10045d43:	add    eax,ecx
10045d45:	mov    ecx,edx
10045d47:	and    edx,0x3
10045d4a:	shr    ecx,0x2
10045d4d:	je     0x10045d55
10045d4f:	rep stos DWORD PTR es:[edi],eax
10045d51:	test   edx,edx
10045d53:	je     0x10045d5f
10045d55:	mov    BYTE PTR [edi],al
10045d57:	add    edi,0x1
10045d5a:	sub    edx,0x1
10045d5d:	jne    0x10045d55
10045d5f:	mov    eax,DWORD PTR [esp+0x8]
10045d63:	pop    edi
10045d64:	ret    
10045d65:	mov    eax,DWORD PTR [esp+0x4]
10045d69:	ret    
10045d6a:	push   DWORD PTR ds:0x100802f4
10045d70:	call   0x10046fe2
10045d75:	test   eax,eax
10045d77:	pop    ecx
10045d78:	je     0x10045d7c
10045d7a:	call   eax
10045d7c:	push   0x19
10045d7e:	call   0x10049cea
10045d83:	push   0x1
10045d85:	push   0x0
10045d87:	call   0x1004ad4e
10045d8c:	add    esp,0xc
10045d8f:	jmp    0x1004ac5b
10045d94:	push   0xa
10045d96:	push   0x0
10045d98:	push   DWORD PTR [esp+0xc]
10045d9c:	call   0x1004afa1
10045da1:	add    esp,0xc
10045da4:	ret    
10045da5:	jmp    0x10045d94
10045daa:	push   ebp
10045dab:	mov    ebp,esp
10045dad:	sub    esp,0x18
10045db0:	push   ebx
10045db1:	push   esi
10045db2:	push   DWORD PTR [ebp+0xc]
10045db5:	lea    ecx,[ebp-0x18]
10045db8:	call   0x100455d5
10045dbd:	mov    ebx,DWORD PTR [ebp+0x8]
10045dc0:	mov    esi,0x100
10045dc5:	cmp    ebx,esi
10045dc7:	jae    0x10045e1d
10045dc9:	mov    ecx,DWORD PTR [ebp-0x18]
10045dcc:	cmp    DWORD PTR [ecx+0xac],0x1
10045dd3:	jle    0x10045de9
10045dd5:	lea    eax,[ebp-0x18]
10045dd8:	push   eax
10045dd9:	push   0x1
10045ddb:	push   ebx
10045ddc:	call   0x1004b3f3
10045de1:	mov    ecx,DWORD PTR [ebp-0x18]
10045de4:	add    esp,0xc
10045de7:	jmp    0x10045df6
10045de9:	mov    eax,DWORD PTR [ecx+0xc8]
10045def:	movzx  eax,BYTE PTR [eax+ebx*2]
10045df3:	and    eax,0x1
10045df6:	test   eax,eax
10045df8:	je     0x10045e09
10045dfa:	mov    eax,DWORD PTR [ecx+0xcc]
10045e00:	movzx  eax,BYTE PTR [eax+ebx*1]
10045e04:	jmp    0x10045eb0
10045e09:	cmp    BYTE PTR [ebp-0xc],0x0
10045e0d:	je     0x10045e16
10045e0f:	mov    eax,DWORD PTR [ebp-0x10]
10045e12:	and    DWORD PTR [eax+0x70],0xfffffffd
10045e16:	mov    eax,ebx
10045e18:	jmp    0x10045ebd
10045e1d:	mov    eax,DWORD PTR [ebp-0x18]
10045e20:	cmp    DWORD PTR [eax+0xac],0x1
10045e27:	jle    0x10045e5a
10045e29:	mov    DWORD PTR [ebp+0x8],ebx
10045e2c:	sar    DWORD PTR [ebp+0x8],0x8
10045e30:	lea    eax,[ebp-0x18]
10045e33:	push   eax
10045e34:	mov    eax,DWORD PTR [ebp+0x8]
10045e37:	and    eax,0xff
10045e3c:	push   eax
10045e3d:	call   0x1004b3af
10045e42:	test   eax,eax
10045e44:	pop    ecx
10045e45:	pop    ecx
10045e46:	je     0x10045e5a
10045e48:	mov    al,BYTE PTR [ebp+0x8]
10045e4b:	push   0x2
10045e4d:	mov    BYTE PTR [ebp-0x4],al
10045e50:	mov    BYTE PTR [ebp-0x3],bl
10045e53:	mov    BYTE PTR [ebp-0x2],0x0
10045e57:	pop    ecx
10045e58:	jmp    0x10045e6f
10045e5a:	call   0x10046c45
10045e5f:	mov    DWORD PTR [eax],0x2a
10045e65:	xor    ecx,ecx
10045e67:	mov    BYTE PTR [ebp-0x4],bl
10045e6a:	mov    BYTE PTR [ebp-0x3],0x0
10045e6e:	inc    ecx
10045e6f:	mov    eax,DWORD PTR [ebp-0x18]
10045e72:	push   0x1
10045e74:	push   DWORD PTR [eax+0x4]
10045e77:	lea    edx,[ebp-0x8]
10045e7a:	push   0x3
10045e7c:	push   edx
10045e7d:	push   ecx
10045e7e:	lea    ecx,[ebp-0x4]
10045e81:	push   ecx
10045e82:	push   esi
10045e83:	push   DWORD PTR [eax+0x14]
10045e86:	lea    eax,[ebp-0x18]
10045e89:	push   eax
10045e8a:	call   0x1004b36c
10045e8f:	add    esp,0x24
10045e92:	test   eax,eax
10045e94:	je     0x10045e09
10045e9a:	cmp    eax,0x1
10045e9d:	jne    0x10045ea5
10045e9f:	movzx  eax,BYTE PTR [ebp-0x8]
10045ea3:	jmp    0x10045eb0
10045ea5:	movzx  ecx,BYTE PTR [ebp-0x7]
10045ea9:	xor    eax,eax
10045eab:	mov    ah,BYTE PTR [ebp-0x8]
10045eae:	or     eax,ecx
10045eb0:	cmp    BYTE PTR [ebp-0xc],0x0
10045eb4:	je     0x10045ebd
10045eb6:	mov    ecx,DWORD PTR [ebp-0x10]
10045eb9:	and    DWORD PTR [ecx+0x70],0xfffffffd
10045ebd:	pop    esi
10045ebe:	pop    ebx
10045ebf:	leave  
10045ec0:	ret    
10045ec1:	cmp    DWORD PTR ds:0x100802c8,0x0
10045ec8:	jne    0x10045eda
10045eca:	mov    eax,DWORD PTR [esp+0x4]
10045ece:	lea    ecx,[eax-0x41]
10045ed1:	cmp    ecx,0x19
10045ed4:	ja     0x10045ee7
10045ed6:	add    eax,0x20
10045ed9:	ret    
10045eda:	push   0x0
10045edc:	push   DWORD PTR [esp+0x8]
10045ee0:	call   0x10045daa
10045ee5:	pop    ecx
10045ee6:	pop    ecx
10045ee7:	ret    
10045ee8:	push   0x10
10045eea:	push   0x10074708
10045eef:	call   0x10046d84
10045ef4:	xor    eax,eax
10045ef6:	mov    DWORD PTR [ebp-0x20],eax
10045ef9:	mov    DWORD PTR [ebp-0x4],eax
10045efc:	mov    DWORD PTR [ebp-0x1c],eax
10045eff:	mov    eax,DWORD PTR [ebp-0x1c]
10045f02:	cmp    eax,DWORD PTR [ebp+0x10]
10045f05:	jge    0x10045f1a
10045f07:	mov    esi,DWORD PTR [ebp+0x8]
10045f0a:	mov    ecx,esi
10045f0c:	call   DWORD PTR [ebp+0x14]
10045f0f:	add    esi,DWORD PTR [ebp+0xc]
10045f12:	mov    DWORD PTR [ebp+0x8],esi
10045f15:	inc    DWORD PTR [ebp-0x1c]
10045f18:	jmp    0x10045eff
10045f1a:	mov    DWORD PTR [ebp-0x20],0x1
10045f21:	mov    DWORD PTR [ebp-0x4],0xfffffffe
10045f28:	call   0x10045f35
10045f2d:	call   0x10046dc9
10045f32:	ret    0x14
10045f35:	cmp    DWORD PTR [ebp-0x20],0x0
10045f39:	jne    0x10045f4c
10045f3b:	push   DWORD PTR [ebp+0x18]
10045f3e:	push   DWORD PTR [ebp-0x1c]
10045f41:	push   DWORD PTR [ebp+0xc]
10045f44:	push   DWORD PTR [ebp+0x8]
10045f47:	call   0x1004318b
10045f4c:	ret    
10045f4d:	push   ebp
10045f4e:	mov    ebp,esp
10045f50:	push   ebx
10045f51:	push   esi
10045f52:	mov    esi,DWORD PTR [ebp+0x8]
10045f55:	push   edi
10045f56:	xor    edi,edi
10045f58:	cmp    DWORD PTR [ebp+0x14],edi
10045f5b:	jne    0x10045f6d
10045f5d:	cmp    esi,edi
10045f5f:	jne    0x10045f71
10045f61:	cmp    DWORD PTR [ebp+0xc],edi
10045f64:	jne    0x10045f78
10045f66:	xor    eax,eax
10045f68:	pop    edi
10045f69:	pop    esi
10045f6a:	pop    ebx
10045f6b:	pop    ebp
10045f6c:	ret    
10045f6d:	cmp    esi,edi
10045f6f:	je     0x10045f78
10045f71:	mov    ebx,DWORD PTR [ebp+0xc]
10045f74:	cmp    ebx,edi
10045f76:	ja     0x10045f93
10045f78:	call   0x10046c45
10045f7d:	push   0x16
10045f7f:	pop    esi
10045f80:	mov    DWORD PTR [eax],esi
10045f82:	push   edi
10045f83:	push   edi
10045f84:	push   edi
10045f85:	push   edi
10045f86:	push   edi
10045f87:	call   0x1004347c
10045f8c:	add    esp,0x14
10045f8f:	mov    eax,esi
10045f91:	jmp    0x10045f68
10045f93:	cmp    DWORD PTR [ebp+0x14],edi
10045f96:	jne    0x10045f9d
10045f98:	mov    WORD PTR [esi],di
10045f9b:	jmp    0x10045f66
10045f9d:	mov    edx,DWORD PTR [ebp+0x10]
10045fa0:	cmp    edx,edi
10045fa2:	jne    0x10045fa9
10045fa4:	mov    WORD PTR [esi],di
10045fa7:	jmp    0x10045f78
10045fa9:	cmp    DWORD PTR [ebp+0x14],0xffffffff
10045fad:	mov    eax,esi
10045faf:	jne    0x10045fc5
10045fb1:	movzx  ecx,WORD PTR [edx]
10045fb4:	mov    WORD PTR [eax],cx
10045fb7:	inc    eax
10045fb8:	inc    eax
10045fb9:	inc    edx
10045fba:	inc    edx
10045fbb:	cmp    cx,di
10045fbe:	je     0x10045fe4
10045fc0:	dec    ebx
10045fc1:	jne    0x10045fb1
10045fc3:	jmp    0x10045fe4
10045fc5:	movzx  ecx,WORD PTR [edx]
10045fc8:	mov    WORD PTR [eax],cx
10045fcb:	inc    eax
10045fcc:	inc    eax
10045fcd:	inc    edx
10045fce:	inc    edx
10045fcf:	cmp    cx,di
10045fd2:	je     0x10045fdc
10045fd4:	dec    ebx
10045fd5:	je     0x10045fdc
10045fd7:	dec    DWORD PTR [ebp+0x14]
10045fda:	jne    0x10045fc5
10045fdc:	cmp    DWORD PTR [ebp+0x14],edi
10045fdf:	jne    0x10045fe4
10045fe1:	mov    WORD PTR [eax],di
10045fe4:	cmp    ebx,edi
10045fe6:	jne    0x10045f66
10045fec:	cmp    DWORD PTR [ebp+0x14],0xffffffff
10045ff0:	jne    0x10046002
10045ff2:	mov    eax,DWORD PTR [ebp+0xc]
10045ff5:	push   0x50
10045ff7:	mov    WORD PTR [esi+eax*2-0x2],di
10045ffc:	pop    eax
10045ffd:	jmp    0x10045f68
10046002:	mov    WORD PTR [esi],di
10046005:	call   0x10046c45
1004600a:	push   0x22
1004600c:	pop    ecx
1004600d:	mov    DWORD PTR [eax],ecx
1004600f:	mov    esi,ecx
10046011:	jmp    0x10045f82
10046016:	push   ebp
10046017:	mov    ebp,esp
10046019:	sub    esp,0xc
1004601c:	mov    eax,ds:0x1007e030
10046021:	xor    eax,ebp
10046023:	mov    DWORD PTR [ebp-0x4],eax
10046026:	push   esi
10046027:	xor    esi,esi
10046029:	cmp    ebx,esi
1004602b:	push   edi
1004602c:	jne    0x1004604c
1004602e:	call   0x10046c45
10046033:	push   0x16
10046035:	pop    edi
10046036:	push   esi
10046037:	push   esi
10046038:	push   esi
10046039:	push   esi
1004603a:	push   esi
1004603b:	mov    DWORD PTR [eax],edi
1004603d:	call   0x1004347c
10046042:	add    esp,0x14
10046045:	mov    eax,edi
10046047:	jmp    0x1004618c
1004604c:	push   DWORD PTR [ebp+0x8]
1004604f:	push   ebx
10046050:	call   0x1004b7b6
10046055:	cmp    eax,DWORD PTR [ebp+0x8]
10046058:	pop    ecx
10046059:	pop    ecx
1004605a:	jb     0x10046061
1004605c:	mov    WORD PTR [ebx],si
1004605f:	jmp    0x1004602e
10046061:	mov    edx,DWORD PTR [ebp+0xc]
10046064:	mov    eax,DWORD PTR [edx]
10046066:	mov    ecx,DWORD PTR [eax+0x14]
10046069:	cmp    ecx,esi
1004606b:	jne    0x10046097
1004606d:	cmp    WORD PTR [ebx],si
10046070:	mov    eax,ebx
10046072:	je     0x10046090
10046074:	movzx  ecx,WORD PTR [eax]
10046077:	cmp    cx,0x41
1004607b:	jb     0x10046089
1004607d:	cmp    cx,0x5a
10046081:	ja     0x10046089
10046083:	add    ecx,0x20
10046086:	mov    WORD PTR [eax],cx
10046089:	inc    eax
1004608a:	inc    eax
1004608b:	cmp    WORD PTR [eax],si
1004608e:	jne    0x10046074
10046090:	xor    eax,eax
10046092:	jmp    0x1004618c
10046097:	push   DWORD PTR [eax+0x4]
1004609a:	mov    edi,0x100
1004609f:	push   esi
100460a0:	push   esi
100460a1:	push   0xffffffff
100460a3:	push   ebx
100460a4:	push   edi
100460a5:	push   ecx
100460a6:	push   edx
100460a7:	call   0x1004b776
100460ac:	mov    ecx,eax
100460ae:	add    esp,0x20
100460b1:	cmp    ecx,esi
100460b3:	mov    DWORD PTR [ebp-0xc],ecx
100460b6:	jne    0x100460cf
100460b8:	call   0x10046c45
100460bd:	mov    DWORD PTR [eax],0x2a
100460c3:	call   0x10046c45
100460c8:	mov    eax,DWORD PTR [eax]
100460ca:	jmp    0x1004618c
100460cf:	cmp    DWORD PTR [ebp+0x8],ecx
100460d2:	jae    0x100460e3
100460d4:	mov    WORD PTR [ebx],si
100460d7:	call   0x10046c45
100460dc:	push   0x22
100460de:	jmp    0x10046035
100460e3:	cmp    ecx,esi
100460e5:	jle    0x1004612d
100460e7:	push   0xffffffe0
100460e9:	xor    edx,edx
100460eb:	pop    eax
100460ec:	div    ecx
100460ee:	cmp    eax,0x2
100460f1:	jb     0x1004612d
100460f3:	lea    eax,[ecx+ecx*1+0x8]
100460f7:	cmp    eax,0x400
100460fc:	ja     0x10046111
100460fe:	call   0x1004b7e0
10046103:	mov    eax,esp
10046105:	cmp    eax,esi
10046107:	je     0x10046125
10046109:	mov    DWORD PTR [eax],0xcccc
1004610f:	jmp    0x10046122
10046111:	push   eax
10046112:	call   0x1004507d
10046117:	cmp    eax,esi
10046119:	pop    ecx
1004611a:	je     0x10046125
1004611c:	mov    DWORD PTR [eax],0xdddd
10046122:	add    eax,0x8
10046125:	mov    ecx,DWORD PTR [ebp-0xc]
10046128:	mov    DWORD PTR [ebp-0x8],eax
1004612b:	jmp    0x10046130
1004612d:	mov    DWORD PTR [ebp-0x8],esi
10046130:	cmp    DWORD PTR [ebp-0x8],esi
10046133:	jne    0x10046142
10046135:	call   0x10046c45
1004613a:	mov    DWORD PTR [eax],0xc
10046140:	jmp    0x100460c3
10046142:	mov    edx,DWORD PTR [ebp+0xc]
10046145:	mov    eax,DWORD PTR [edx]
10046147:	push   DWORD PTR [eax+0x4]
1004614a:	push   ecx
1004614b:	push   DWORD PTR [ebp-0x8]
1004614e:	push   0xffffffff
10046150:	push   ebx
10046151:	push   edi
10046152:	push   DWORD PTR [eax+0x14]
10046155:	push   edx
10046156:	call   0x1004b776
1004615b:	add    esp,0x20
1004615e:	test   eax,eax
10046160:	je     0x10046175
10046162:	push   DWORD PTR [ebp-0x8]
10046165:	push   DWORD PTR [ebp+0x8]
10046168:	push   ebx
10046169:	call   0x1004b4a9
1004616e:	add    esp,0xc
10046171:	mov    esi,eax
10046173:	jmp    0x10046181
10046175:	call   0x10046c45
1004617a:	push   0x2a
1004617c:	pop    ecx
1004617d:	mov    DWORD PTR [eax],ecx
1004617f:	mov    esi,ecx
10046181:	push   DWORD PTR [ebp-0x8]
10046184:	call   0x1001b6bb
10046189:	pop    ecx
1004618a:	mov    eax,esi
1004618c:	lea    esp,[ebp-0x14]
1004618f:	pop    edi
10046190:	pop    esi
10046191:	mov    ecx,DWORD PTR [ebp-0x4]
10046194:	xor    ecx,ebp
10046196:	call   0x10042f87
1004619b:	leave  
1004619c:	ret    
1004619d:	push   ebp
1004619e:	mov    ebp,esp
100461a0:	sub    esp,0x10
100461a3:	push   ebx
100461a4:	push   DWORD PTR [ebp+0x10]
100461a7:	lea    ecx,[ebp-0x10]
100461aa:	call   0x100455d5
100461af:	mov    ebx,DWORD PTR [ebp+0x8]
100461b2:	lea    eax,[ebp-0x10]
100461b5:	push   eax
100461b6:	push   DWORD PTR [ebp+0xc]
100461b9:	call   0x10046016
100461be:	cmp    BYTE PTR [ebp-0x4],0x0
100461c2:	pop    ecx
100461c3:	pop    ecx
100461c4:	pop    ebx
100461c5:	je     0x100461ce
100461c7:	mov    ecx,DWORD PTR [ebp-0x8]
100461ca:	and    DWORD PTR [ecx+0x70],0xfffffffd
100461ce:	leave  
100461cf:	ret    
100461d0:	push   esi
100461d1:	xor    esi,esi
100461d3:	cmp    DWORD PTR ds:0x100802c8,esi
100461d9:	jne    0x10046224
100461db:	mov    eax,DWORD PTR [esp+0x8]
100461df:	cmp    eax,esi
100461e1:	jne    0x100461ff
100461e3:	call   0x10046c45
100461e8:	push   esi
100461e9:	push   esi
100461ea:	push   esi
100461eb:	push   esi
100461ec:	push   esi
100461ed:	mov    DWORD PTR [eax],0x16
100461f3:	call   0x1004347c
100461f8:	add    esp,0x14
100461fb:	xor    eax,eax
100461fd:	pop    esi
100461fe:	ret    
100461ff:	cmp    WORD PTR [eax],si
10046202:	mov    ecx,eax
10046204:	je     0x10046237
10046206:	movzx  edx,WORD PTR [ecx]
10046209:	cmp    dx,0x41
1004620d:	jb     0x1004621b
1004620f:	cmp    dx,0x5a
10046213:	ja     0x1004621b
10046215:	add    edx,0x20
10046218:	mov    WORD PTR [ecx],dx
1004621b:	inc    ecx
1004621c:	inc    ecx
1004621d:	cmp    WORD PTR [ecx],si
10046220:	jne    0x10046206
10046222:	pop    esi
10046223:	ret    
10046224:	push   esi
10046225:	push   0xffffffff
10046227:	push   DWORD PTR [esp+0x10]
1004622b:	call   0x1004619d
10046230:	mov    eax,DWORD PTR [esp+0x14]
10046234:	add    esp,0xc
10046237:	pop    esi
10046238:	ret    
10046239:	mov    eax,DWORD PTR [esp+0x4]
1004623d:	push   ebx
1004623e:	mov    ebx,DWORD PTR [esp+0xc]
10046242:	cmp    WORD PTR [ebx],0x0
10046246:	push   edi
10046247:	mov    edi,eax
10046249:	je     0x10046291
1004624b:	movzx  ecx,WORD PTR [eax]
1004624e:	test   cx,cx
10046251:	je     0x1004628f
10046253:	movzx  edx,cx
10046256:	sub    eax,ebx
10046258:	test   dx,dx
1004625b:	mov    ecx,DWORD PTR [esp+0x10]
1004625f:	je     0x1004627d
10046261:	movzx  edx,WORD PTR [ecx]
10046264:	test   dx,dx
10046267:	je     0x10046294
10046269:	movzx  ebx,WORD PTR [eax+ecx*1]
1004626d:	movzx  edx,dx
10046270:	sub    ebx,edx
10046272:	jne    0x1004627d
10046274:	inc    ecx
10046275:	inc    ecx
10046276:	cmp    WORD PTR [eax+ecx*1],0x0
1004627b:	jne    0x10046261
1004627d:	cmp    WORD PTR [ecx],0x0
10046281:	je     0x10046294
10046283:	inc    edi
10046284:	inc    edi
10046285:	movzx  edx,WORD PTR [edi]
10046288:	inc    eax
10046289:	inc    eax
1004628a:	test   dx,dx
1004628d:	jne    0x10046258
1004628f:	xor    eax,eax
10046291:	pop    edi
10046292:	pop    ebx
10046293:	ret    
10046294:	mov    eax,edi
10046296:	jmp    0x10046291
10046298:	push   0x10
1004629a:	push   0x10074728
1004629f:	call   0x10046d84
100462a4:	mov    ebx,DWORD PTR [ebp+0x8]
100462a7:	test   ebx,ebx
100462a9:	jne    0x100462b9
100462ab:	push   DWORD PTR [ebp+0xc]
100462ae:	call   0x1004507d
100462b3:	pop    ecx
100462b4:	jmp    0x10046485
100462b9:	mov    esi,DWORD PTR [ebp+0xc]
100462bc:	test   esi,esi
100462be:	jne    0x100462cc
100462c0:	push   ebx
100462c1:	call   0x100435f8
100462c6:	pop    ecx
100462c7:	jmp    0x10046483
100462cc:	cmp    DWORD PTR ds:0x100825a0,0x3
100462d3:	jne    0x1004646c
100462d9:	xor    edi,edi
100462db:	mov    DWORD PTR [ebp-0x1c],edi
100462de:	cmp    esi,0xffffffe0
100462e1:	ja     0x10046471
100462e7:	push   0x4
100462e9:	call   0x10047d8d
100462ee:	pop    ecx
100462ef:	mov    DWORD PTR [ebp-0x4],edi
100462f2:	push   ebx
100462f3:	call   0x10047e06
100462f8:	pop    ecx
100462f9:	mov    DWORD PTR [ebp-0x20],eax
100462fc:	cmp    eax,edi
100462fe:	je     0x100463a2
10046304:	cmp    esi,DWORD PTR ds:0x10082590
1004630a:	ja     0x10046355
1004630c:	push   esi
1004630d:	push   ebx
1004630e:	push   eax
1004630f:	call   0x100482fb
10046314:	add    esp,0xc
10046317:	test   eax,eax
10046319:	je     0x10046320
1004631b:	mov    DWORD PTR [ebp-0x1c],ebx
1004631e:	jmp    0x10046355
10046320:	push   esi
10046321:	call   0x100485da
10046326:	pop    ecx
10046327:	mov    DWORD PTR [ebp-0x1c],eax
1004632a:	cmp    eax,edi
1004632c:	je     0x10046355
1004632e:	mov    eax,DWORD PTR [ebx-0x4]
10046331:	dec    eax
10046332:	cmp    eax,esi
10046334:	jb     0x10046338
10046336:	mov    eax,esi
10046338:	push   eax
10046339:	push   ebx
1004633a:	push   DWORD PTR [ebp-0x1c]
1004633d:	call   0x10045270
10046342:	push   ebx
10046343:	call   0x10047e06
10046348:	mov    DWORD PTR [ebp-0x20],eax
1004634b:	push   ebx
1004634c:	push   eax
1004634d:	call   0x10047e31
10046352:	add    esp,0x18
10046355:	cmp    DWORD PTR [ebp-0x1c],edi
10046358:	jne    0x100463a2
1004635a:	cmp    esi,edi
1004635c:	jne    0x10046364
1004635e:	xor    esi,esi
10046360:	inc    esi
10046361:	mov    DWORD PTR [ebp+0xc],esi
10046364:	add    esi,0xf
10046367:	and    esi,0xfffffff0
1004636a:	mov    DWORD PTR [ebp+0xc],esi
1004636d:	push   esi
1004636e:	push   edi
1004636f:	push   DWORD PTR ds:0x1007fe38
10046375:	call   DWORD PTR ds:0x1006618c
1004637b:	mov    DWORD PTR [ebp-0x1c],eax
1004637e:	cmp    eax,edi
10046380:	je     0x100463a2
10046382:	mov    eax,DWORD PTR [ebx-0x4]
10046385:	dec    eax
10046386:	cmp    eax,esi
10046388:	jb     0x1004638c
1004638a:	mov    eax,esi
1004638c:	push   eax
1004638d:	push   ebx
1004638e:	push   DWORD PTR [ebp-0x1c]
10046391:	call   0x10045270
10046396:	push   ebx
10046397:	push   DWORD PTR [ebp-0x20]
1004639a:	call   0x10047e31
1004639f:	add    esp,0x14
100463a2:	mov    DWORD PTR [ebp-0x4],0xfffffffe
100463a9:	call   0x100463dc
100463ae:	cmp    DWORD PTR [ebp-0x20],0x0
100463b2:	jne    0x100463e5
100463b4:	test   esi,esi
100463b6:	jne    0x100463b9
100463b8:	inc    esi
100463b9:	add    esi,0xf
100463bc:	and    esi,0xfffffff0
100463bf:	mov    DWORD PTR [ebp+0xc],esi
100463c2:	push   esi
100463c3:	push   ebx
100463c4:	push   0x0
100463c6:	push   DWORD PTR ds:0x1007fe38
100463cc:	call   DWORD PTR ds:0x100661a0
100463d2:	mov    edi,eax
100463d4:	jmp    0x100463e8
100463d6:	mov    esi,DWORD PTR [ebp+0xc]
100463d9:	mov    ebx,DWORD PTR [ebp+0x8]
100463dc:	push   0x4
100463de:	call   0x10047cb5
100463e3:	pop    ecx
100463e4:	ret    
100463e5:	mov    edi,DWORD PTR [ebp-0x1c]
100463e8:	test   edi,edi
100463ea:	jne    0x100464af
100463f0:	cmp    DWORD PTR ds:0x1007ff94,edi
100463f6:	je     0x10046424
100463f8:	push   esi
100463f9:	call   0x10047a82
100463fe:	pop    ecx
100463ff:	test   eax,eax
10046401:	jne    0x100462d9
10046407:	call   0x10046c45
1004640c:	cmp    DWORD PTR [ebp-0x20],edi
1004640f:	jne    0x1004647d
10046411:	mov    esi,eax
10046413:	call   DWORD PTR ds:0x100660cc
10046419:	push   eax
1004641a:	call   0x10046c0a
1004641f:	pop    ecx
10046420:	mov    DWORD PTR [esi],eax
10046422:	jmp    0x10046483
10046424:	test   edi,edi
10046426:	jne    0x100464af
1004642c:	call   0x10046c45
10046431:	cmp    DWORD PTR [ebp-0x20],edi
10046434:	je     0x1004649e
10046436:	mov    DWORD PTR [eax],0xc
1004643c:	jmp    0x100464af
1004643e:	test   esi,esi
10046440:	jne    0x10046443
10046442:	inc    esi
10046443:	push   esi
10046444:	push   ebx
10046445:	push   0x0
10046447:	push   DWORD PTR ds:0x1007fe38
1004644d:	call   DWORD PTR ds:0x100661a0
10046453:	mov    edi,eax
10046455:	test   edi,edi
10046457:	jne    0x100464af
10046459:	cmp    DWORD PTR ds:0x1007ff94,eax
1004645f:	je     0x10046495
10046461:	push   esi
10046462:	call   0x10047a82
10046467:	pop    ecx
10046468:	test   eax,eax
1004646a:	je     0x1004648b
1004646c:	cmp    esi,0xffffffe0
1004646f:	jbe    0x1004643e
10046471:	push   esi
10046472:	call   0x10047a82
10046477:	pop    ecx
10046478:	call   0x10046c45
1004647d:	mov    DWORD PTR [eax],0xc
10046483:	xor    eax,eax
10046485:	call   0x10046dc9
1004648a:	ret    
1004648b:	call   0x10046c45
10046490:	jmp    0x10046411
10046495:	test   edi,edi
10046497:	jne    0x100464af
10046499:	call   0x10046c45
1004649e:	mov    esi,eax
100464a0:	call   DWORD PTR ds:0x100660cc
100464a6:	push   eax
100464a7:	call   0x10046c0a
100464ac:	mov    DWORD PTR [esi],eax
100464ae:	pop    ecx
100464af:	mov    eax,edi
100464b1:	jmp    0x10046485
100464b3:	mov    ecx,DWORD PTR [esp+0x8]
100464b7:	push   esi
100464b8:	xor    esi,esi
100464ba:	cmp    ecx,esi
100464bc:	jbe    0x100464e7
100464be:	push   0xffffffe0
100464c0:	xor    edx,edx
100464c2:	pop    eax
100464c3:	div    ecx
100464c5:	cmp    eax,DWORD PTR [esp+0x10]
100464c9:	jae    0x100464e7
100464cb:	call   0x10046c45
100464d0:	push   esi
100464d1:	push   esi
100464d2:	push   esi
100464d3:	push   esi
100464d4:	push   esi
100464d5:	mov    DWORD PTR [eax],0xc
100464db:	call   0x1004347c
100464e0:	add    esp,0x14
100464e3:	xor    eax,eax
100464e5:	pop    esi
100464e6:	ret    
100464e7:	imul   ecx,DWORD PTR [esp+0x10]
100464ec:	push   ecx
100464ed:	push   DWORD PTR [esp+0xc]
100464f1:	call   0x10046298
100464f6:	pop    ecx
100464f7:	pop    ecx
100464f8:	pop    esi
100464f9:	ret    
100464fa:	call   0x100471ec
100464ff:	mov    ecx,DWORD PTR [esp+0x4]
10046503:	mov    DWORD PTR [eax+0x14],ecx
10046506:	ret    
10046507:	call   0x100471ec
1004650c:	mov    ecx,DWORD PTR [eax+0x14]
1004650f:	imul   ecx,ecx,0x343fd
10046515:	add    ecx,0x269ec3
1004651b:	mov    DWORD PTR [eax+0x14],ecx
1004651e:	mov    eax,ecx
10046520:	shr    eax,0x10
10046523:	and    eax,0x7fff
10046528:	ret    
10046529:	int3   
1004652a:	int3   
1004652b:	int3   
1004652c:	int3   
1004652d:	int3   
1004652e:	int3   
1004652f:	int3   
10046530:	push   edi
10046531:	mov    edi,DWORD PTR [esp+0x8]
10046535:	jmp    0x100465a5
10046537:	lea    esp,[esp+0x0]
1004653e:	mov    edi,edi
10046540:	mov    ecx,DWORD PTR [esp+0x4]
10046544:	push   edi
10046545:	test   ecx,0x3
1004654b:	je     0x10046560
1004654d:	mov    al,BYTE PTR [ecx]
1004654f:	add    ecx,0x1
10046552:	test   al,al
10046554:	je     0x10046593
10046556:	test   ecx,0x3
1004655c:	jne    0x1004654d
1004655e:	mov    edi,edi
10046560:	mov    eax,DWORD PTR [ecx]
10046562:	mov    edx,0x7efefeff
10046567:	add    edx,eax
10046569:	xor    eax,0xffffffff
1004656c:	xor    eax,edx
1004656e:	add    ecx,0x4
10046571:	test   eax,0x81010100
10046576:	je     0x10046560
10046578:	mov    eax,DWORD PTR [ecx-0x4]
1004657b:	test   al,al
1004657d:	je     0x100465a2
1004657f:	test   ah,ah
10046581:	je     0x1004659d
10046583:	test   eax,0xff0000
10046588:	je     0x10046598
1004658a:	test   eax,0xff000000
1004658f:	je     0x10046593
10046591:	jmp    0x10046560
10046593:	lea    edi,[ecx-0x1]
10046596:	jmp    0x100465a5
10046598:	lea    edi,[ecx-0x2]
1004659b:	jmp    0x100465a5
1004659d:	lea    edi,[ecx-0x3]
100465a0:	jmp    0x100465a5
100465a2:	lea    edi,[ecx-0x4]
100465a5:	mov    ecx,DWORD PTR [esp+0xc]
100465a9:	test   ecx,0x3
100465af:	je     0x100465ce
100465b1:	mov    dl,BYTE PTR [ecx]
100465b3:	add    ecx,0x1
100465b6:	test   dl,dl
100465b8:	je     0x10046620
100465ba:	mov    BYTE PTR [edi],dl
100465bc:	add    edi,0x1
100465bf:	test   ecx,0x3
100465c5:	jne    0x100465b1
100465c7:	jmp    0x100465ce
100465c9:	mov    DWORD PTR [edi],edx
100465cb:	add    edi,0x4
100465ce:	mov    edx,0x7efefeff
100465d3:	mov    eax,DWORD PTR [ecx]
100465d5:	add    edx,eax
100465d7:	xor    eax,0xffffffff
100465da:	xor    eax,edx
100465dc:	mov    edx,DWORD PTR [ecx]
100465de:	add    ecx,0x4
100465e1:	test   eax,0x81010100
100465e6:	je     0x100465c9
100465e8:	test   dl,dl
100465ea:	je     0x10046620
100465ec:	test   dh,dh
100465ee:	je     0x10046617
100465f0:	test   edx,0xff0000
100465f6:	je     0x1004660a
100465f8:	test   edx,0xff000000
100465fe:	je     0x10046602
10046600:	jmp    0x100465c9
10046602:	mov    DWORD PTR [edi],edx
10046604:	mov    eax,DWORD PTR [esp+0x8]
10046608:	pop    edi
10046609:	ret    
1004660a:	mov    WORD PTR [edi],dx
1004660d:	mov    eax,DWORD PTR [esp+0x8]
10046611:	mov    BYTE PTR [edi+0x2],0x0
10046615:	pop    edi
10046616:	ret    
10046617:	mov    WORD PTR [edi],dx
1004661a:	mov    eax,DWORD PTR [esp+0x8]
1004661e:	pop    edi
1004661f:	ret    
10046620:	mov    BYTE PTR [edi],dl
10046622:	mov    eax,DWORD PTR [esp+0x8]
10046626:	pop    edi
10046627:	ret    
10046628:	lea    eax,[esp+0x10]
1004662c:	push   eax
1004662d:	push   0x0
1004662f:	push   DWORD PTR [esp+0x14]
10046633:	push   DWORD PTR [esp+0x14]
10046637:	push   DWORD PTR [esp+0x14]
1004663b:	call   0x10044f8c
10046640:	add    esp,0x14
10046643:	ret    
10046644:	push   ebp
10046645:	mov    ebp,esp
10046647:	sub    esp,0x10
1004664a:	push   ebx
1004664b:	push   esi
1004664c:	push   DWORD PTR [ebp+0x10]
1004664f:	lea    ecx,[ebp-0x10]
10046652:	call   0x100455d5
10046657:	mov    ebx,DWORD PTR [ebp+0x8]
1004665a:	xor    esi,esi
1004665c:	cmp    ebx,esi
1004665e:	jne    0x1004668f
10046660:	call   0x10046c45
10046665:	push   esi
10046666:	push   esi
10046667:	push   esi
10046668:	push   esi
10046669:	push   esi
1004666a:	mov    DWORD PTR [eax],0x16
10046670:	call   0x1004347c
10046675:	add    esp,0x14
10046678:	cmp    BYTE PTR [ebp-0x4],0x0
1004667c:	je     0x10046685
1004667e:	mov    eax,DWORD PTR [ebp-0x8]
10046681:	and    DWORD PTR [eax+0x70],0xfffffffd
10046685:	mov    eax,0x7fffffff
1004668a:	jmp    0x1004674f
1004668f:	push   edi
10046690:	mov    edi,DWORD PTR [ebp+0xc]
10046693:	cmp    edi,esi
10046695:	jne    0x100466c6
10046697:	call   0x10046c45
1004669c:	push   esi
1004669d:	push   esi
1004669e:	push   esi
1004669f:	push   esi
100466a0:	push   esi
100466a1:	mov    DWORD PTR [eax],0x16
100466a7:	call   0x1004347c
100466ac:	add    esp,0x14
100466af:	cmp    BYTE PTR [ebp-0x4],0x0
100466b3:	je     0x100466bc
100466b5:	mov    eax,DWORD PTR [ebp-0x8]
100466b8:	and    DWORD PTR [eax+0x70],0xfffffffd
100466bc:	mov    eax,0x7fffffff
100466c1:	jmp    0x1004674e
100466c6:	mov    eax,DWORD PTR [ebp-0x10]
100466c9:	cmp    DWORD PTR [eax+0x14],esi
100466cc:	jne    0x10046708
100466ce:	movzx  eax,WORD PTR [ebx]
100466d1:	cmp    ax,0x41
100466d5:	jb     0x100466e0
100466d7:	cmp    ax,0x5a
100466db:	ja     0x100466e0
100466dd:	add    eax,0x20
100466e0:	movzx  esi,ax
100466e3:	movzx  eax,WORD PTR [edi]
100466e6:	cmp    ax,0x41
100466ea:	jb     0x100466f5
100466ec:	cmp    ax,0x5a
100466f0:	ja     0x100466f5
100466f2:	add    eax,0x20
100466f5:	inc    ebx
100466f6:	inc    ebx
100466f7:	inc    edi
100466f8:	inc    edi
100466f9:	test   si,si
100466fc:	movzx  eax,ax
100466ff:	je     0x10046739
10046701:	cmp    si,ax
10046704:	je     0x100466ce
10046706:	jmp    0x10046739
10046708:	movzx  eax,WORD PTR [ebx]
1004670b:	lea    ecx,[ebp-0x10]
1004670e:	push   ecx
1004670f:	push   eax
10046710:	call   0x1004b80c
10046715:	movzx  esi,ax
10046718:	movzx  eax,WORD PTR [edi]
1004671b:	lea    ecx,[ebp-0x10]
1004671e:	push   ecx
1004671f:	inc    ebx
10046720:	push   eax
10046721:	inc    ebx
10046722:	call   0x1004b80c
10046727:	add    esp,0x10
1004672a:	inc    edi
1004672b:	inc    edi
1004672c:	test   si,si
1004672f:	movzx  eax,ax
10046732:	je     0x10046739
10046734:	cmp    si,ax
10046737:	je     0x10046708
10046739:	movzx  ecx,ax
1004673c:	movzx  eax,si
1004673f:	sub    eax,ecx
10046741:	cmp    BYTE PTR [ebp-0x4],0x0
10046745:	je     0x1004674e
10046747:	mov    ecx,DWORD PTR [ebp-0x8]
1004674a:	and    DWORD PTR [ecx+0x70],0xfffffffd
1004674e:	pop    edi
1004674f:	pop    esi
10046750:	pop    ebx
10046751:	leave  
10046752:	ret    
10046753:	push   esi
10046754:	xor    esi,esi
10046756:	cmp    DWORD PTR ds:0x100802c8,esi
1004675c:	push   edi
1004675d:	jne    0x100467d0
1004675f:	mov    edi,DWORD PTR [esp+0xc]
10046763:	cmp    edi,esi
10046765:	jne    0x10046786
10046767:	call   0x10046c45
1004676c:	push   esi
1004676d:	push   esi
1004676e:	push   esi
1004676f:	push   esi
10046770:	push   esi
10046771:	mov    DWORD PTR [eax],0x16
10046777:	call   0x1004347c
1004677c:	add    esp,0x14
1004677f:	mov    eax,0x7fffffff
10046784:	jmp    0x100467e1
10046786:	mov    edx,DWORD PTR [esp+0x10]
1004678a:	cmp    edx,esi
1004678c:	je     0x10046767
1004678e:	movzx  eax,WORD PTR [edi]
10046791:	cmp    ax,0x41
10046795:	jb     0x100467a0
10046797:	cmp    ax,0x5a
1004679b:	ja     0x100467a0
1004679d:	add    eax,0x20
100467a0:	movzx  ecx,ax
100467a3:	movzx  eax,WORD PTR [edx]
100467a6:	cmp    ax,0x41
100467aa:	jb     0x100467b5
100467ac:	cmp    ax,0x5a
100467b0:	ja     0x100467b5
100467b2:	add    eax,0x20
100467b5:	inc    edi
100467b6:	inc    edi
100467b7:	inc    edx
100467b8:	inc    edx
100467b9:	cmp    cx,si
100467bc:	movzx  eax,ax
100467bf:	je     0x100467c6
100467c1:	cmp    cx,ax
100467c4:	je     0x1004678e
100467c6:	movzx  edx,ax
100467c9:	movzx  eax,cx
100467cc:	sub    eax,edx
100467ce:	jmp    0x100467e1
100467d0:	push   esi
100467d1:	push   DWORD PTR [esp+0x14]
100467d5:	push   DWORD PTR [esp+0x14]
100467d9:	call   0x10046644
100467de:	add    esp,0xc
100467e1:	pop    edi
100467e2:	pop    esi
100467e3:	ret    
100467e4:	mov    edx,DWORD PTR [esp+0x4]
100467e8:	push   esi
100467e9:	mov    esi,DWORD PTR [esp+0xc]
100467ed:	push   edi
100467ee:	jmp    0x100467f9
100467f0:	test   cx,cx
100467f3:	je     0x10046806
100467f5:	inc    edx
100467f6:	inc    edx
100467f7:	inc    esi
100467f8:	inc    esi
100467f9:	movzx  ecx,WORD PTR [esi]
100467fc:	movzx  eax,WORD PTR [edx]
100467ff:	movzx  edi,cx
10046802:	sub    eax,edi
10046804:	je     0x100467f0
10046806:	test   eax,eax
10046808:	pop    edi
10046809:	pop    esi
1004680a:	jge    0x10046810
1004680c:	or     eax,0xffffffff
1004680f:	ret    
10046810:	jle    0x10046815
10046812:	xor    eax,eax
10046814:	inc    eax
10046815:	ret    
10046816:	push   ebp
10046817:	mov    ebp,esp
10046819:	push   ecx
1004681a:	mov    eax,DWORD PTR [ebp+0xc]
1004681d:	cmp    eax,0x1
10046820:	push   ebx
10046821:	push   esi
10046822:	push   edi
10046823:	jne    0x10046940
10046829:	mov    ebx,DWORD PTR ds:0x100661ac
1004682f:	mov    edi,0x94
10046834:	push   edi
10046835:	push   0x0
10046837:	call   ebx
10046839:	push   eax
1004683a:	call   DWORD PTR ds:0x1006618c
10046840:	mov    esi,eax
10046842:	test   esi,esi
10046844:	jne    0x1004684d
10046846:	xor    eax,eax
10046848:	jmp    0x100469e8
1004684d:	push   esi
1004684e:	mov    DWORD PTR [esi],edi
10046850:	call   DWORD PTR ds:0x100661a8
10046856:	test   eax,eax
10046858:	push   esi
10046859:	push   0x0
1004685b:	jne    0x10046868
1004685d:	call   ebx
1004685f:	push   eax
10046860:	call   DWORD PTR ds:0x10066188
10046866:	jmp    0x10046846
10046868:	mov    eax,DWORD PTR [esi+0x10]
1004686b:	mov    edi,DWORD PTR [esi+0xc]
1004686e:	mov    DWORD PTR [ebp+0xc],eax
10046871:	mov    eax,DWORD PTR [esi+0x4]
10046874:	mov    DWORD PTR [ebp+0x10],eax
10046877:	mov    eax,DWORD PTR [esi+0x8]
1004687a:	mov    DWORD PTR [ebp-0x4],eax
1004687d:	and    edi,0x7fff
10046883:	call   ebx
10046885:	push   eax
10046886:	call   DWORD PTR ds:0x10066188
1004688c:	mov    eax,DWORD PTR [ebp+0xc]
1004688f:	cmp    eax,0x2
10046892:	je     0x1004689a
10046894:	or     edi,0x8000
1004689a:	mov    ecx,DWORD PTR [ebp-0x4]
1004689d:	mov    ds:0x1007fde8,eax
100468a2:	mov    eax,DWORD PTR [ebp+0x10]
100468a5:	mov    edx,eax
100468a7:	shl    edx,0x8
100468aa:	add    edx,ecx
100468ac:	push   0x1
100468ae:	mov    DWORD PTR ds:0x1007fdf0,edx
100468b4:	mov    ds:0x1007fdf4,eax
100468b9:	mov    DWORD PTR ds:0x1007fdf8,ecx
100468bf:	mov    DWORD PTR ds:0x1007fdec,edi
100468c5:	call   0x10047b49
100468ca:	test   eax,eax
100468cc:	pop    ecx
100468cd:	je     0x10046846
100468d3:	call   0x1004738e
100468d8:	test   eax,eax
100468da:	jne    0x100468e6
100468dc:	call   0x10047ba3
100468e1:	jmp    0x10046846
100468e6:	call   0x1004bfa6
100468eb:	call   DWORD PTR ds:0x100661a4
100468f1:	mov    ds:0x100825bc,eax
100468f6:	call   0x1004be71
100468fb:	mov    ds:0x1007fa98,eax
10046900:	call   0x1004b8b9
10046905:	test   eax,eax
10046907:	jge    0x10046910
10046909:	call   0x10047078
1004690e:	jmp    0x100468dc
10046910:	call   0x1004bdb8
10046915:	test   eax,eax
10046917:	jl     0x10046939
10046919:	call   0x1004bb45
1004691e:	test   eax,eax
10046920:	jl     0x10046939
10046922:	push   0x0
10046924:	call   0x100477a4
10046929:	test   eax,eax
1004692b:	pop    ecx
1004692c:	jne    0x10046939
1004692e:	inc    DWORD PTR ds:0x1007fa94
10046934:	jmp    0x100469e5
10046939:	call   0x1004baf9
1004693e:	jmp    0x10046909
10046940:	xor    edi,edi
10046942:	cmp    eax,edi
10046944:	jne    0x1004697b
10046946:	cmp    DWORD PTR ds:0x1007fa94,edi
1004694c:	jle    0x10046846
10046952:	dec    DWORD PTR ds:0x1007fa94
10046958:	cmp    DWORD PTR ds:0x1007fe24,edi
1004695e:	jne    0x10046965
10046960:	call   0x10047915
10046965:	cmp    DWORD PTR [ebp+0x10],edi
10046968:	jne    0x100469e5
1004696a:	call   0x1004baf9
1004696f:	call   0x10047078
10046974:	call   0x10047ba3
10046979:	jmp    0x100469e5
1004697b:	cmp    eax,0x2
1004697e:	jne    0x100469d9
10046980:	call   0x1004704e
10046985:	push   0x214
1004698a:	push   0x1
1004698c:	call   0x10047552
10046991:	mov    esi,eax
10046993:	cmp    esi,edi
10046995:	pop    ecx
10046996:	pop    ecx
10046997:	je     0x10046846
1004699d:	push   esi
1004699e:	push   DWORD PTR ds:0x1007e1a8
100469a4:	push   DWORD PTR ds:0x1007fdd8
100469aa:	call   0x10046fe2
100469af:	pop    ecx
100469b0:	call   eax
100469b2:	test   eax,eax
100469b4:	je     0x100469cd
100469b6:	push   edi
100469b7:	push   esi
100469b8:	call   0x100470b5
100469bd:	pop    ecx
100469be:	pop    ecx
100469bf:	call   DWORD PTR ds:0x10066160
100469c5:	or     DWORD PTR [esi+0x4],0xffffffff
100469c9:	mov    DWORD PTR [esi],eax
100469cb:	jmp    0x100469e5
100469cd:	push   esi
100469ce:	call   0x100435f8
100469d3:	pop    ecx
100469d4:	jmp    0x10046846
100469d9:	cmp    eax,0x3
100469dc:	jne    0x100469e5
100469de:	push   edi
100469df:	call   0x10047325
100469e4:	pop    ecx
100469e5:	xor    eax,eax
100469e7:	inc    eax
100469e8:	pop    edi
100469e9:	pop    esi
100469ea:	pop    ebx
100469eb:	leave  
100469ec:	ret    0xc
100469ef:	push   0xc
100469f1:	push   0x10074748
100469f6:	call   0x10046d84
100469fb:	mov    edi,ecx
100469fd:	mov    esi,edx
100469ff:	mov    ebx,DWORD PTR [ebp+0x8]
10046a02:	xor    eax,eax
10046a04:	inc    eax
10046a05:	mov    DWORD PTR [ebp-0x1c],eax
10046a08:	test   esi,esi
10046a0a:	jne    0x10046a18
10046a0c:	cmp    DWORD PTR ds:0x1007fa94,edx
10046a12:	je     0x10046add
10046a18:	and    DWORD PTR [ebp-0x4],0x0
10046a1c:	cmp    esi,eax
10046a1e:	je     0x10046a25
10046a20:	cmp    esi,0x2
10046a23:	jne    0x10046a53
10046a25:	mov    eax,ds:0x100665e8
10046a2a:	test   eax,eax
10046a2c:	je     0x10046a36
10046a2e:	push   edi
10046a2f:	push   esi
10046a30:	push   ebx
10046a31:	call   eax
10046a33:	mov    DWORD PTR [ebp-0x1c],eax
10046a36:	cmp    DWORD PTR [ebp-0x1c],0x0
10046a3a:	je     0x10046ad6
10046a40:	push   edi
10046a41:	push   esi
10046a42:	push   ebx
10046a43:	call   0x10046816
10046a48:	mov    DWORD PTR [ebp-0x1c],eax
10046a4b:	test   eax,eax
10046a4d:	je     0x10046ad6
10046a53:	push   edi
10046a54:	push   esi
10046a55:	push   ebx
10046a56:	call   0x10016587
10046a5b:	mov    DWORD PTR [ebp-0x1c],eax
10046a5e:	cmp    esi,0x1
10046a61:	jne    0x10046a87
10046a63:	test   eax,eax
10046a65:	jne    0x10046a87
10046a67:	push   edi
10046a68:	push   eax
10046a69:	push   ebx
10046a6a:	call   0x10016587
10046a6f:	push   edi
10046a70:	push   0x0
10046a72:	push   ebx
10046a73:	call   0x10046816
10046a78:	mov    eax,ds:0x100665e8
10046a7d:	test   eax,eax
10046a7f:	je     0x10046a87
10046a81:	push   edi
10046a82:	push   0x0
10046a84:	push   ebx
10046a85:	call   eax
10046a87:	test   esi,esi
10046a89:	je     0x10046a90
10046a8b:	cmp    esi,0x3
10046a8e:	jne    0x10046ab6
10046a90:	push   edi
10046a91:	push   esi
10046a92:	push   ebx
10046a93:	call   0x10046816
10046a98:	test   eax,eax
10046a9a:	jne    0x10046a9f
10046a9c:	and    DWORD PTR [ebp-0x1c],eax
10046a9f:	cmp    DWORD PTR [ebp-0x1c],0x0
10046aa3:	je     0x10046ab6
10046aa5:	mov    eax,ds:0x100665e8
10046aaa:	test   eax,eax
10046aac:	je     0x10046ab6
10046aae:	push   edi
10046aaf:	push   esi
10046ab0:	push   ebx
10046ab1:	call   eax
10046ab3:	mov    DWORD PTR [ebp-0x1c],eax
10046ab6:	mov    DWORD PTR [ebp-0x4],0xfffffffe
10046abd:	mov    eax,DWORD PTR [ebp-0x1c]
10046ac0:	jmp    0x10046adf
10046ac2:	mov    eax,DWORD PTR [ebp-0x14]
10046ac5:	mov    ecx,DWORD PTR [eax]
10046ac7:	mov    ecx,DWORD PTR [ecx]
10046ac9:	push   eax
10046aca:	push   ecx
10046acb:	call   0x1004c15d
10046ad0:	pop    ecx
10046ad1:	pop    ecx
10046ad2:	ret    
10046ad3:	mov    esp,DWORD PTR [ebp-0x18]
10046ad6:	mov    DWORD PTR [ebp-0x4],0xfffffffe
10046add:	xor    eax,eax
10046adf:	call   0x10046dc9
10046ae4:	ret    
10046ae5:	cmp    DWORD PTR [esp+0x8],0x1
10046aea:	jne    0x10046af1
10046aec:	call   0x1004c178
10046af1:	push   DWORD PTR [esp+0x4]
10046af5:	mov    ecx,DWORD PTR [esp+0x10]
10046af9:	mov    edx,DWORD PTR [esp+0xc]
10046afd:	call   0x100469ef
10046b02:	pop    ecx
10046b03:	ret    0xc
10046b06:	push   ebp
10046b07:	mov    ebp,esp
10046b09:	sub    esp,0x328
10046b0f:	mov    ds:0x1007fbb0,eax
10046b14:	mov    DWORD PTR ds:0x1007fbac,ecx
10046b1a:	mov    DWORD PTR ds:0x1007fba8,edx
10046b20:	mov    DWORD PTR ds:0x1007fba4,ebx
10046b26:	mov    DWORD PTR ds:0x1007fba0,esi
10046b2c:	mov    DWORD PTR ds:0x1007fb9c,edi
10046b32:	data16 mov WORD PTR ds:0x1007fbc8,ss
10046b39:	data16 mov WORD PTR ds:0x1007fbbc,cs
10046b40:	data16 mov WORD PTR ds:0x1007fb98,ds
10046b47:	data16 mov WORD PTR ds:0x1007fb94,es
10046b4e:	data16 mov WORD PTR ds:0x1007fb90,fs
10046b55:	data16 mov WORD PTR ds:0x1007fb8c,gs
10046b5c:	pushf  
10046b5d:	pop    DWORD PTR ds:0x1007fbc0
10046b63:	mov    eax,DWORD PTR [ebp+0x0]
10046b66:	mov    ds:0x1007fbb4,eax
10046b6b:	mov    eax,DWORD PTR [ebp+0x4]
10046b6e:	mov    ds:0x1007fbb8,eax
10046b73:	lea    eax,[ebp+0x8]
10046b76:	mov    ds:0x1007fbc4,eax
10046b7b:	mov    eax,DWORD PTR [ebp-0x320]
10046b81:	mov    DWORD PTR ds:0x1007fb00,0x10001
10046b8b:	mov    eax,ds:0x1007fbb8
10046b90:	mov    ds:0x1007fab4,eax
10046b95:	mov    DWORD PTR ds:0x1007faa8,0xc0000409
10046b9f:	mov    DWORD PTR ds:0x1007faac,0x1
10046ba9:	mov    eax,ds:0x1007e030
10046bae:	mov    DWORD PTR [ebp-0x328],eax
10046bb4:	mov    eax,ds:0x1007e034
10046bb9:	mov    DWORD PTR [ebp-0x324],eax
10046bbf:	call   DWORD PTR ds:0x10066184
10046bc5:	mov    ds:0x1007faf8,eax
10046bca:	push   0x1
10046bcc:	call   0x10047970
10046bd1:	pop    ecx
10046bd2:	push   0x0
10046bd4:	call   DWORD PTR ds:0x10066180
10046bda:	push   0x100665ec
10046bdf:	call   DWORD PTR ds:0x1006617c
10046be5:	cmp    DWORD PTR ds:0x1007faf8,0x0
10046bec:	jne    0x10046bf6
10046bee:	push   0x1
10046bf0:	call   0x10047970
10046bf5:	pop    ecx
10046bf6:	push   0xc0000409
10046bfb:	call   DWORD PTR ds:0x10066108
10046c01:	push   eax
10046c02:	call   DWORD PTR ds:0x10066178
10046c08:	leave  
10046c09:	ret    
10046c0a:	mov    eax,DWORD PTR [esp+0x4]
10046c0e:	xor    ecx,ecx
10046c10:	cmp    eax,DWORD PTR [ecx*8+0x1007e038]
10046c17:	je     0x10046c2b
10046c19:	inc    ecx
10046c1a:	cmp    ecx,0x2d
10046c1d:	jl     0x10046c10
10046c1f:	lea    ecx,[eax-0x13]
10046c22:	cmp    ecx,0x11
10046c25:	ja     0x10046c33
10046c27:	push   0xd
10046c29:	pop    eax
10046c2a:	ret    
10046c2b:	mov    eax,DWORD PTR [ecx*8+0x1007e03c]
10046c32:	ret    
10046c33:	add    eax,0xffffff44
10046c38:	push   0xe
10046c3a:	pop    ecx
10046c3b:	cmp    ecx,eax
10046c3d:	sbb    eax,eax
10046c3f:	and    eax,ecx
10046c41:	add    eax,0x8
10046c44:	ret    
10046c45:	call   0x10047169
10046c4a:	test   eax,eax
10046c4c:	jne    0x10046c54
10046c4e:	mov    eax,0x1007e1a0
10046c53:	ret    
10046c54:	add    eax,0x8
10046c57:	ret    
10046c58:	call   0x10047169
10046c5d:	test   eax,eax
10046c5f:	jne    0x10046c67
10046c61:	mov    eax,0x1007e1a4
10046c66:	ret    
10046c67:	add    eax,0xc
10046c6a:	ret    
10046c6b:	push   esi
10046c6c:	call   0x10046c58
10046c71:	mov    ecx,DWORD PTR [esp+0x8]
10046c75:	push   ecx
10046c76:	mov    DWORD PTR [eax],ecx
10046c78:	call   0x10046c0a
10046c7d:	pop    ecx
10046c7e:	mov    esi,eax
10046c80:	call   0x10046c45
10046c85:	mov    DWORD PTR [eax],esi
10046c87:	pop    esi
10046c88:	ret    
10046c89:	mov    ecx,DWORD PTR [esp+0x4]
10046c8d:	push   ebx
10046c8e:	xor    ebx,ebx
10046c90:	cmp    ecx,ebx
10046c92:	push   esi
10046c93:	push   edi
10046c94:	je     0x10046c9e
10046c96:	mov    edi,DWORD PTR [esp+0x14]
10046c9a:	cmp    edi,ebx
10046c9c:	ja     0x10046cb9
10046c9e:	call   0x10046c45
10046ca3:	push   0x16
10046ca5:	pop    esi
10046ca6:	mov    DWORD PTR [eax],esi
10046ca8:	push   ebx
10046ca9:	push   ebx
10046caa:	push   ebx
10046cab:	push   ebx
10046cac:	push   ebx
10046cad:	call   0x1004347c
10046cb2:	add    esp,0x14
10046cb5:	mov    eax,esi
10046cb7:	jmp    0x10046cea
10046cb9:	mov    esi,DWORD PTR [esp+0x18]
10046cbd:	cmp    esi,ebx
10046cbf:	jne    0x10046cc5
10046cc1:	mov    BYTE PTR [ecx],bl
10046cc3:	jmp    0x10046c9e
10046cc5:	mov    edx,ecx
10046cc7:	mov    al,BYTE PTR [esi]
10046cc9:	mov    BYTE PTR [edx],al
10046ccb:	inc    edx
10046ccc:	inc    esi
10046ccd:	cmp    al,bl
10046ccf:	je     0x10046cd4
10046cd1:	dec    edi
10046cd2:	jne    0x10046cc7
10046cd4:	cmp    edi,ebx
10046cd6:	jne    0x10046ce8
10046cd8:	mov    BYTE PTR [ecx],bl
10046cda:	call   0x10046c45
10046cdf:	push   0x22
10046ce1:	pop    ecx
10046ce2:	mov    DWORD PTR [eax],ecx
10046ce4:	mov    esi,ecx
10046ce6:	jmp    0x10046ca8
10046ce8:	xor    eax,eax
10046cea:	pop    edi
10046ceb:	pop    esi
10046cec:	pop    ebx
10046ced:	ret    
10046cee:	push   0x8
10046cf0:	push   0x10074768
10046cf5:	call   0x10046d84
10046cfa:	call   0x100471ec
10046cff:	mov    eax,DWORD PTR [eax+0x78]
10046d02:	test   eax,eax
10046d04:	je     0x10046d1c
10046d06:	and    DWORD PTR [ebp-0x4],0x0
10046d0a:	call   eax
10046d0c:	jmp    0x10046d15
10046d0e:	xor    eax,eax
10046d10:	inc    eax
10046d11:	ret    
10046d12:	mov    esp,DWORD PTR [ebp-0x18]
10046d15:	mov    DWORD PTR [ebp-0x4],0xfffffffe
10046d1c:	call   0x1004ac5b
10046d21:	call   0x10046dc9
10046d26:	ret    
10046d27:	call   0x100471ec
10046d2c:	mov    eax,DWORD PTR [eax+0x7c]
10046d2f:	test   eax,eax
10046d31:	je     0x10046d35
10046d33:	call   eax
10046d35:	jmp    0x10046cee
10046d3a:	push   0x8
10046d3c:	push   0x10074788
10046d41:	call   0x10046d84
10046d46:	push   DWORD PTR ds:0x1007fdcc
10046d4c:	call   0x10046fe2
10046d51:	pop    ecx
10046d52:	test   eax,eax
10046d54:	je     0x10046d6c
10046d56:	and    DWORD PTR [ebp-0x4],0x0
10046d5a:	call   eax
10046d5c:	jmp    0x10046d65
10046d5e:	xor    eax,eax
10046d60:	inc    eax
10046d61:	ret    
10046d62:	mov    esp,DWORD PTR [ebp-0x18]
10046d65:	mov    DWORD PTR [ebp-0x4],0xfffffffe
10046d6c:	jmp    0x10046cee
10046d71:	push   0x10046cee
10046d76:	call   0x10046f76
10046d7b:	pop    ecx
10046d7c:	mov    ds:0x1007fdcc,eax
10046d81:	ret    
10046d82:	int3   
10046d83:	int3   
10046d84:	push   0x10046de0
10046d89:	push   DWORD PTR fs:0x0
10046d90:	mov    eax,DWORD PTR [esp+0x10]
10046d94:	mov    DWORD PTR [esp+0x10],ebp
10046d98:	lea    ebp,[esp+0x10]
10046d9c:	sub    esp,eax
10046d9e:	push   ebx
10046d9f:	push   esi
10046da0:	push   edi
10046da1:	mov    eax,ds:0x1007e030
10046da6:	xor    DWORD PTR [ebp-0x4],eax
10046da9:	xor    eax,ebp
10046dab:	push   eax
10046dac:	mov    DWORD PTR [ebp-0x18],esp
10046daf:	push   DWORD PTR [ebp-0x8]
10046db2:	mov    eax,DWORD PTR [ebp-0x4]
10046db5:	mov    DWORD PTR [ebp-0x4],0xfffffffe
10046dbc:	mov    DWORD PTR [ebp-0x8],eax
10046dbf:	lea    eax,[ebp-0x10]
10046dc2:	mov    fs:0x0,eax
10046dc8:	ret    
10046dc9:	mov    ecx,DWORD PTR [ebp-0x10]
10046dcc:	mov    DWORD PTR fs:0x0,ecx
10046dd3:	pop    ecx
10046dd4:	pop    edi
10046dd5:	pop    edi
10046dd6:	pop    esi
10046dd7:	pop    ebx
10046dd8:	mov    esp,ebp
10046dda:	pop    ebp
10046ddb:	push   ecx
10046ddc:	ret    
10046ddd:	int3   
10046dde:	int3   
10046ddf:	int3   
10046de0:	sub    esp,0x14
10046de3:	push   ebx
10046de4:	mov    ebx,DWORD PTR [esp+0x20]
10046de8:	push   ebp
10046de9:	push   esi
10046dea:	mov    esi,DWORD PTR [ebx+0x8]
10046ded:	xor    esi,DWORD PTR ds:0x1007e030
10046df3:	push   edi
10046df4:	mov    eax,DWORD PTR [esi]
10046df6:	cmp    eax,0xfffffffe
10046df9:	mov    BYTE PTR [esp+0x13],0x0
10046dfe:	mov    DWORD PTR [esp+0x18],0x1
10046e06:	lea    edi,[ebx+0x10]
10046e09:	je     0x10046e18
10046e0b:	mov    ecx,DWORD PTR [esi+0x4]
10046e0e:	add    ecx,edi
10046e10:	xor    ecx,DWORD PTR [eax+edi*1]
10046e13:	call   0x10042f87
10046e18:	mov    ecx,DWORD PTR [esi+0xc]
10046e1b:	mov    eax,DWORD PTR [esi+0x8]
10046e1e:	add    ecx,edi
10046e20:	xor    ecx,DWORD PTR [eax+edi*1]
10046e23:	call   0x10042f87
10046e28:	mov    eax,DWORD PTR [esp+0x28]
10046e2c:	test   BYTE PTR [eax+0x4],0x66
10046e30:	jne    0x10046f55
10046e36:	mov    ebp,DWORD PTR [ebx+0xc]
10046e39:	cmp    ebp,0xfffffffe
10046e3c:	mov    ecx,DWORD PTR [esp+0x30]
10046e40:	lea    edx,[esp+0x1c]
10046e44:	mov    DWORD PTR [esp+0x1c],eax
10046e48:	mov    DWORD PTR [esp+0x20],ecx
10046e4c:	mov    DWORD PTR [ebx-0x4],edx
10046e4f:	je     0x10046eaf
10046e51:	lea    eax,[ebp+ebp*2+0x0]
10046e55:	mov    ecx,DWORD PTR [esi+eax*4+0x14]
10046e59:	test   ecx,ecx
10046e5b:	lea    ebx,[esi+eax*4+0x10]
10046e5f:	mov    eax,DWORD PTR [ebx]
10046e61:	mov    DWORD PTR [esp+0x14],eax
10046e65:	je     0x10046e7d
10046e67:	mov    edx,edi
10046e69:	call   0x1004c2fe
10046e6e:	test   eax,eax
10046e70:	mov    BYTE PTR [esp+0x13],0x1
10046e75:	jl     0x10046ebb
10046e77:	jg     0x10046ec5
10046e79:	mov    eax,DWORD PTR [esp+0x14]
10046e7d:	cmp    eax,0xfffffffe
10046e80:	mov    ebp,eax
10046e82:	jne    0x10046e51
10046e84:	cmp    BYTE PTR [esp+0x13],0x0
10046e89:	je     0x10046eaf
10046e8b:	mov    eax,DWORD PTR [esi]
10046e8d:	cmp    eax,0xfffffffe
10046e90:	je     0x10046e9f
10046e92:	mov    ecx,DWORD PTR [esi+0x4]
10046e95:	add    ecx,edi
10046e97:	xor    ecx,DWORD PTR [eax+edi*1]
10046e9a:	call   0x10042f87
10046e9f:	mov    ecx,DWORD PTR [esi+0xc]
10046ea2:	mov    eax,DWORD PTR [esi+0x8]
10046ea5:	add    ecx,edi
10046ea7:	xor    ecx,DWORD PTR [eax+edi*1]
10046eaa:	call   0x10042f87
10046eaf:	mov    eax,DWORD PTR [esp+0x18]
10046eb3:	pop    edi
10046eb4:	pop    esi
10046eb5:	pop    ebp
10046eb6:	pop    ebx
10046eb7:	add    esp,0x14
10046eba:	ret    
10046ebb:	mov    DWORD PTR [esp+0x18],0x0
10046ec3:	jmp    0x10046e8b
10046ec5:	mov    ecx,DWORD PTR [esp+0x28]
10046ec9:	cmp    DWORD PTR [ecx],0xe06d7363
10046ecf:	jne    0x10046efb
10046ed1:	cmp    DWORD PTR ds:0x1006cae8,0x0
10046ed8:	je     0x10046efb
10046eda:	push   0x1006cae8
10046edf:	call   0x1004c3d2
10046ee4:	add    esp,0x4
10046ee7:	test   eax,eax
10046ee9:	je     0x10046efb
10046eeb:	mov    edx,DWORD PTR [esp+0x28]
10046eef:	push   0x1
10046ef1:	push   edx
10046ef2:	call   DWORD PTR ds:0x1006cae8
10046ef8:	add    esp,0x8
10046efb:	mov    ecx,DWORD PTR [esp+0x2c]
10046eff:	call   0x1004c32e
10046f04:	mov    eax,DWORD PTR [esp+0x2c]
10046f08:	cmp    DWORD PTR [eax+0xc],ebp
10046f0b:	je     0x10046f20
10046f0d:	push   0x1007e030
10046f12:	push   edi
10046f13:	mov    edx,ebp
10046f15:	mov    ecx,eax
10046f17:	call   0x1004c348
10046f1c:	mov    eax,DWORD PTR [esp+0x2c]
10046f20:	mov    ecx,DWORD PTR [esp+0x14]
10046f24:	mov    DWORD PTR [eax+0xc],ecx
10046f27:	mov    eax,DWORD PTR [esi]
10046f29:	cmp    eax,0xfffffffe
10046f2c:	je     0x10046f3b
10046f2e:	mov    ecx,DWORD PTR [esi+0x4]
10046f31:	add    ecx,edi
10046f33:	xor    ecx,DWORD PTR [eax+edi*1]
10046f36:	call   0x10042f87
10046f3b:	mov    ecx,DWORD PTR [esi+0xc]
10046f3e:	mov    edx,DWORD PTR [esi+0x8]
10046f41:	add    ecx,edi
10046f43:	xor    ecx,DWORD PTR [edx+edi*1]
10046f46:	call   0x10042f87
10046f4b:	mov    ecx,DWORD PTR [ebx+0x8]
10046f4e:	mov    edx,edi
10046f50:	jmp    0x1004c315
10046f55:	cmp    DWORD PTR [ebx+0xc],0xfffffffe
10046f59:	je     0x10046eaf
10046f5f:	push   0x1007e030
10046f64:	push   edi
10046f65:	mov    ecx,ebx
10046f67:	mov    edx,0xfffffffe
10046f6c:	call   0x1004c348
10046f71:	jmp    0x10046e8b
10046f76:	push   esi
10046f77:	push   DWORD PTR ds:0x1007e1ac
10046f7d:	mov    esi,DWORD PTR ds:0x100661b0
10046f83:	call   esi
10046f85:	test   eax,eax
10046f87:	je     0x10046faa
10046f89:	mov    eax,ds:0x1007e1a8
10046f8e:	cmp    eax,0xffffffff
10046f91:	je     0x10046faa
10046f93:	push   eax
10046f94:	push   DWORD PTR ds:0x1007e1ac
10046f9a:	call   esi
10046f9c:	call   eax
10046f9e:	test   eax,eax
10046fa0:	je     0x10046faa
10046fa2:	mov    eax,DWORD PTR [eax+0x1f8]
10046fa8:	jmp    0x10046fc5
10046faa:	push   0x10066604
10046faf:	call   DWORD PTR ds:0x10066198
10046fb5:	test   eax,eax
10046fb7:	je     0x10046fd3
10046fb9:	push   0x100665f4
10046fbe:	push   eax
10046fbf:	call   DWORD PTR ds:0x1006612c
10046fc5:	test   eax,eax
10046fc7:	je     0x10046fd3
10046fc9:	push   DWORD PTR [esp+0x8]
10046fcd:	call   eax
10046fcf:	mov    DWORD PTR [esp+0x8],eax
10046fd3:	mov    eax,DWORD PTR [esp+0x8]
10046fd7:	pop    esi
10046fd8:	ret    
10046fd9:	push   0x0
10046fdb:	call   0x10046f76
10046fe0:	pop    ecx
10046fe1:	ret    
10046fe2:	push   esi
10046fe3:	push   DWORD PTR ds:0x1007e1ac
10046fe9:	mov    esi,DWORD PTR ds:0x100661b0
10046fef:	call   esi
10046ff1:	test   eax,eax
10046ff3:	je     0x10047016
10046ff5:	mov    eax,ds:0x1007e1a8
10046ffa:	cmp    eax,0xffffffff
10046ffd:	je     0x10047016
10046fff:	push   eax
10047000:	push   DWORD PTR ds:0x1007e1ac
10047006:	call   esi
10047008:	call   eax
1004700a:	test   eax,eax
1004700c:	je     0x10047016
1004700e:	mov    eax,DWORD PTR [eax+0x1fc]
10047014:	jmp    0x10047031
10047016:	push   0x10066604
1004701b:	call   DWORD PTR ds:0x10066198
10047021:	test   eax,eax
10047023:	je     0x1004703f
10047025:	push   0x10066614
1004702a:	push   eax
1004702b:	call   DWORD PTR ds:0x1006612c
10047031:	test   eax,eax
10047033:	je     0x1004703f
10047035:	push   DWORD PTR [esp+0x8]
10047039:	call   eax
1004703b:	mov    DWORD PTR [esp+0x8],eax
1004703f:	mov    eax,DWORD PTR [esp+0x8]
10047043:	pop    esi
10047044:	ret    
10047045:	call   DWORD PTR ds:0x100661b4
1004704b:	ret    0x4
1004704e:	push   DWORD PTR ds:0x1007e1ac
10047054:	call   DWORD PTR ds:0x100661b0
1004705a:	test   eax,eax
1004705c:	jne    0x10047077
1004705e:	push   DWORD PTR ds:0x1007fdd4
10047064:	call   0x10046fe2
10047069:	pop    ecx
1004706a:	push   eax
1004706b:	push   DWORD PTR ds:0x1007e1ac
10047071:	call   DWORD PTR ds:0x100661b8
10047077:	ret    
10047078:	mov    eax,ds:0x1007e1a8
1004707d:	cmp    eax,0xffffffff
10047080:	je     0x10047098
10047082:	push   eax
10047083:	push   DWORD PTR ds:0x1007fddc
10047089:	call   0x10046fe2
1004708e:	pop    ecx
1004708f:	call   eax
10047091:	or     DWORD PTR ds:0x1007e1a8,0xffffffff
10047098:	mov    eax,ds:0x1007e1ac
1004709d:	cmp    eax,0xffffffff
100470a0:	je     0x100470b0
100470a2:	push   eax
100470a3:	call   DWORD PTR ds:0x100661bc
100470a9:	or     DWORD PTR ds:0x1007e1ac,0xffffffff
100470b0:	jmp    0x10047c60
100470b5:	push   0xc
100470b7:	push   0x100747a8
100470bc:	call   0x10046d84
100470c1:	push   0x10066604
100470c6:	call   DWORD PTR ds:0x10066198
100470cc:	mov    DWORD PTR [ebp-0x1c],eax
100470cf:	mov    esi,DWORD PTR [ebp+0x8]
100470d2:	mov    DWORD PTR [esi+0x5c],0x1007e9f8
100470d9:	xor    edi,edi
100470db:	inc    edi
100470dc:	mov    DWORD PTR [esi+0x14],edi
100470df:	test   eax,eax
100470e1:	je     0x10047107
100470e3:	push   0x100665f4
100470e8:	push   eax
100470e9:	mov    ebx,DWORD PTR ds:0x1006612c
100470ef:	call   ebx
100470f1:	mov    DWORD PTR [esi+0x1f8],eax
100470f7:	push   0x10066614
100470fc:	push   DWORD PTR [ebp-0x1c]
100470ff:	call   ebx
10047101:	mov    DWORD PTR [esi+0x1fc],eax
10047107:	mov    DWORD PTR [esi+0x70],edi
1004710a:	mov    BYTE PTR [esi+0xc8],0x43
10047111:	mov    BYTE PTR [esi+0x14b],0x43
10047118:	mov    eax,0x1007e3a0
1004711d:	mov    DWORD PTR [esi+0x68],eax
10047120:	push   eax
10047121:	call   DWORD PTR ds:0x100660a4
10047127:	push   0xc
10047129:	call   0x10047d8d
1004712e:	pop    ecx
1004712f:	and    DWORD PTR [ebp-0x4],0x0
10047133:	mov    eax,DWORD PTR [ebp+0xc]
10047136:	mov    DWORD PTR [esi+0x6c],eax
10047139:	test   eax,eax
1004713b:	jne    0x10047145
1004713d:	mov    eax,ds:0x1007e9a8
10047142:	mov    DWORD PTR [esi+0x6c],eax
10047145:	push   DWORD PTR [esi+0x6c]
10047148:	call   0x1004a848
1004714d:	pop    ecx
1004714e:	mov    DWORD PTR [ebp-0x4],0xfffffffe
10047155:	call   0x10047160
1004715a:	call   0x10046dc9
1004715f:	ret    
10047160:	push   0xc
10047162:	call   0x10047cb5
10047167:	pop    ecx
10047168:	ret    
10047169:	push   esi
1004716a:	push   edi
1004716b:	call   DWORD PTR ds:0x100660cc
10047171:	mov    edi,eax
10047173:	call   0x1004704e
10047178:	push   DWORD PTR ds:0x1007e1a8
1004717e:	push   DWORD PTR ds:0x1007e1ac
10047184:	call   DWORD PTR ds:0x100661b0
1004718a:	call   eax
1004718c:	mov    esi,eax
1004718e:	test   esi,esi
10047190:	jne    0x100471e0
10047192:	push   0x214
10047197:	push   0x1
10047199:	call   0x10047552
1004719e:	mov    esi,eax
100471a0:	test   esi,esi
100471a2:	pop    ecx
100471a3:	pop    ecx
100471a4:	je     0x100471e0
100471a6:	push   esi
100471a7:	push   DWORD PTR ds:0x1007e1a8
100471ad:	push   DWORD PTR ds:0x1007fdd8
100471b3:	call   0x10046fe2
100471b8:	pop    ecx
100471b9:	call   eax
100471bb:	test   eax,eax
100471bd:	je     0x100471d7
100471bf:	push   0x0
100471c1:	push   esi
100471c2:	call   0x100470b5
100471c7:	pop    ecx
100471c8:	pop    ecx
100471c9:	call   DWORD PTR ds:0x10066160
100471cf:	or     DWORD PTR [esi+0x4],0xffffffff
100471d3:	mov    DWORD PTR [esi],eax
100471d5:	jmp    0x100471e0
100471d7:	push   esi
100471d8:	call   0x100435f8
100471dd:	pop    ecx
100471de:	xor    esi,esi
100471e0:	push   edi
100471e1:	call   DWORD PTR ds:0x1006615c
100471e7:	pop    edi
100471e8:	mov    eax,esi
100471ea:	pop    esi
100471eb:	ret    
100471ec:	push   esi
100471ed:	call   0x10047169
100471f2:	mov    esi,eax
100471f4:	test   esi,esi
100471f6:	jne    0x10047200
100471f8:	push   0x10
100471fa:	call   0x10047688
100471ff:	pop    ecx
10047200:	mov    eax,esi
10047202:	pop    esi
10047203:	ret    
10047204:	push   0x8
10047206:	push   0x100747c8
1004720b:	call   0x10046d84
10047210:	mov    esi,DWORD PTR [ebp+0x8]
10047213:	test   esi,esi
10047215:	je     0x10047305
1004721b:	mov    eax,DWORD PTR [esi+0x24]
1004721e:	test   eax,eax
10047220:	je     0x10047229
10047222:	push   eax
10047223:	call   0x100435f8
10047228:	pop    ecx
10047229:	mov    eax,DWORD PTR [esi+0x2c]
1004722c:	test   eax,eax
1004722e:	je     0x10047237
10047230:	push   eax
10047231:	call   0x100435f8
10047236:	pop    ecx
10047237:	mov    eax,DWORD PTR [esi+0x34]
1004723a:	test   eax,eax
1004723c:	je     0x10047245
1004723e:	push   eax
1004723f:	call   0x100435f8
10047244:	pop    ecx
10047245:	mov    eax,DWORD PTR [esi+0x3c]
10047248:	test   eax,eax
1004724a:	je     0x10047253
1004724c:	push   eax
1004724d:	call   0x100435f8
10047252:	pop    ecx
10047253:	mov    eax,DWORD PTR [esi+0x44]
10047256:	test   eax,eax
10047258:	je     0x10047261
1004725a:	push   eax
1004725b:	call   0x100435f8
10047260:	pop    ecx
10047261:	mov    eax,DWORD PTR [esi+0x48]
10047264:	test   eax,eax
10047266:	je     0x1004726f
10047268:	push   eax
10047269:	call   0x100435f8
1004726e:	pop    ecx
1004726f:	mov    eax,DWORD PTR [esi+0x5c]
10047272:	cmp    eax,0x1007e9f8
10047277:	je     0x10047280
10047279:	push   eax
1004727a:	call   0x100435f8
1004727f:	pop    ecx
10047280:	push   0xd
10047282:	call   0x10047d8d
10047287:	pop    ecx
10047288:	and    DWORD PTR [ebp-0x4],0x0
1004728c:	mov    edi,DWORD PTR [esi+0x68]
1004728f:	test   edi,edi
10047291:	je     0x100472ad
10047293:	push   edi
10047294:	call   DWORD PTR ds:0x100660ac
1004729a:	test   eax,eax
1004729c:	jne    0x100472ad
1004729e:	cmp    edi,0x1007e3a0
100472a4:	je     0x100472ad
100472a6:	push   edi
100472a7:	call   0x100435f8
100472ac:	pop    ecx
100472ad:	mov    DWORD PTR [ebp-0x4],0xfffffffe
100472b4:	call   0x10047310
100472b9:	push   0xc
100472bb:	call   0x10047d8d
100472c0:	pop    ecx
100472c1:	mov    DWORD PTR [ebp-0x4],0x1
100472c8:	mov    edi,DWORD PTR [esi+0x6c]
100472cb:	test   edi,edi
100472cd:	je     0x100472f2
100472cf:	push   edi
100472d0:	call   0x1004a8ce
100472d5:	pop    ecx
100472d6:	cmp    edi,DWORD PTR ds:0x1007e9a8
100472dc:	je     0x100472f2
100472de:	cmp    edi,0x1007e8d0
100472e4:	je     0x100472f2
100472e6:	cmp    DWORD PTR [edi],0x0
100472e9:	jne    0x100472f2
100472eb:	push   edi
100472ec:	call   0x1004a708
100472f1:	pop    ecx
100472f2:	mov    DWORD PTR [ebp-0x4],0xfffffffe
100472f9:	call   0x1004731c
100472fe:	push   esi
100472ff:	call   0x100435f8
10047304:	pop    ecx
10047305:	call   0x10046dc9
1004730a:	ret    0x4
1004730d:	mov    esi,DWORD PTR [ebp+0x8]
10047310:	push   0xd
10047312:	call   0x10047cb5
10047317:	pop    ecx
10047318:	ret    
10047319:	mov    esi,DWORD PTR [ebp+0x8]
1004731c:	push   0xc
1004731e:	call   0x10047cb5
10047323:	pop    ecx
10047324:	ret    
10047325:	cmp    DWORD PTR ds:0x1007e1a8,0xffffffff
1004732c:	je     0x1004737a
1004732e:	push   edi
1004732f:	mov    edi,DWORD PTR [esp+0x8]
10047333:	test   edi,edi
10047335:	jne    0x1004735d
10047337:	push   esi
10047338:	push   DWORD PTR ds:0x1007e1ac
1004733e:	mov    esi,DWORD PTR ds:0x100661b0
10047344:	call   esi
10047346:	test   eax,eax
10047348:	je     0x1004735c
1004734a:	push   DWORD PTR ds:0x1007e1a8
10047350:	push   DWORD PTR ds:0x1007e1ac
10047356:	call   esi
10047358:	call   eax
1004735a:	mov    edi,eax
1004735c:	pop    esi
1004735d:	push   0x0
1004735f:	push   DWORD PTR ds:0x1007e1a8
10047365:	push   DWORD PTR ds:0x1007fdd8
1004736b:	call   0x10046fe2
10047370:	pop    ecx
10047371:	call   eax
10047373:	push   edi
10047374:	call   0x10047204
10047379:	pop    edi
1004737a:	mov    eax,ds:0x1007e1ac
1004737f:	cmp    eax,0xffffffff
10047382:	je     0x1004738d
10047384:	push   0x0
10047386:	push   eax
10047387:	call   DWORD PTR ds:0x100661b8
1004738d:	ret    
1004738e:	push   edi
1004738f:	push   0x10066604
10047394:	call   DWORD PTR ds:0x10066198
1004739a:	mov    edi,eax
1004739c:	test   edi,edi
1004739e:	jne    0x100473a9
100473a0:	call   0x10047078
100473a5:	xor    eax,eax
100473a7:	pop    edi
100473a8:	ret    
100473a9:	push   esi
100473aa:	mov    esi,DWORD PTR ds:0x1006612c
100473b0:	push   0x10066644
100473b5:	push   edi
100473b6:	call   esi
100473b8:	push   0x10066638
100473bd:	push   edi
100473be:	mov    ds:0x1007fdd0,eax
100473c3:	call   esi
100473c5:	push   0x1006662c
100473ca:	push   edi
100473cb:	mov    ds:0x1007fdd4,eax
100473d0:	call   esi
100473d2:	push   0x10066624
100473d7:	push   edi
100473d8:	mov    ds:0x1007fdd8,eax
100473dd:	call   esi
100473df:	cmp    DWORD PTR ds:0x1007fdd0,0x0
100473e6:	mov    esi,DWORD PTR ds:0x100661b8
100473ec:	mov    ds:0x1007fddc,eax
100473f1:	je     0x10047409
100473f3:	cmp    DWORD PTR ds:0x1007fdd4,0x0
100473fa:	je     0x10047409
100473fc:	cmp    DWORD PTR ds:0x1007fdd8,0x0
10047403:	je     0x10047409
10047405:	test   eax,eax
10047407:	jne    0x1004742d
10047409:	mov    eax,ds:0x100661b0
1004740e:	mov    ds:0x1007fdd4,eax
10047413:	mov    eax,ds:0x100661bc
10047418:	mov    DWORD PTR ds:0x1007fdd0,0x10047045
10047422:	mov    DWORD PTR ds:0x1007fdd8,esi
10047428:	mov    ds:0x1007fddc,eax
1004742d:	call   DWORD PTR ds:0x100661b4
10047433:	cmp    eax,0xffffffff
10047436:	mov    ds:0x1007e1ac,eax
1004743b:	je     0x1004750d
10047441:	push   DWORD PTR ds:0x1007fdd4
10047447:	push   eax
10047448:	call   esi
1004744a:	test   eax,eax
1004744c:	je     0x1004750d
10047452:	call   0x10047924
10047457:	push   DWORD PTR ds:0x1007fdd0
1004745d:	call   0x10046f76
10047462:	push   DWORD PTR ds:0x1007fdd4
10047468:	mov    ds:0x1007fdd0,eax
1004746d:	call   0x10046f76
10047472:	push   DWORD PTR ds:0x1007fdd8
10047478:	mov    ds:0x1007fdd4,eax
1004747d:	call   0x10046f76
10047482:	push   DWORD PTR ds:0x1007fddc
10047488:	mov    ds:0x1007fdd8,eax
1004748d:	call   0x10046f76
10047492:	add    esp,0x10
10047495:	mov    ds:0x1007fddc,eax
1004749a:	call   0x10047c17
1004749f:	test   eax,eax
100474a1:	je     0x10047508
100474a3:	push   0x10047204
100474a8:	push   DWORD PTR ds:0x1007fdd0
100474ae:	call   0x10046fe2
100474b3:	pop    ecx
100474b4:	call   eax
100474b6:	cmp    eax,0xffffffff
100474b9:	mov    ds:0x1007e1a8,eax
100474be:	je     0x10047508
100474c0:	push   0x214
100474c5:	push   0x1
100474c7:	call   0x10047552
100474cc:	mov    esi,eax
100474ce:	test   esi,esi
100474d0:	pop    ecx
100474d1:	pop    ecx
100474d2:	je     0x10047508
100474d4:	push   esi
100474d5:	push   DWORD PTR ds:0x1007e1a8
100474db:	push   DWORD PTR ds:0x1007fdd8
100474e1:	call   0x10046fe2
100474e6:	pop    ecx
100474e7:	call   eax
100474e9:	test   eax,eax
100474eb:	je     0x10047508
100474ed:	push   0x0
100474ef:	push   esi
100474f0:	call   0x100470b5
100474f5:	pop    ecx
100474f6:	pop    ecx
100474f7:	call   DWORD PTR ds:0x10066160
100474fd:	or     DWORD PTR [esi+0x4],0xffffffff
10047501:	mov    DWORD PTR [esi],eax
10047503:	xor    eax,eax
10047505:	inc    eax
10047506:	jmp    0x1004750f
10047508:	call   0x10047078
1004750d:	xor    eax,eax
1004750f:	pop    esi
10047510:	pop    edi
10047511:	ret    
10047512:	push   esi
10047513:	push   edi
10047514:	xor    esi,esi
10047516:	push   DWORD PTR [esp+0xc]
1004751a:	call   0x1004507d
1004751f:	mov    edi,eax
10047521:	test   edi,edi
10047523:	pop    ecx
10047524:	jne    0x1004754d
10047526:	cmp    DWORD PTR ds:0x1007fde0,eax
1004752c:	jbe    0x1004754d
1004752e:	push   esi
1004752f:	call   DWORD PTR ds:0x100660bc
10047535:	lea    eax,[esi+0x3e8]
1004753b:	cmp    eax,DWORD PTR ds:0x1007fde0
10047541:	jbe    0x10047546
10047543:	or     eax,0xffffffff
10047546:	cmp    eax,0xffffffff
10047549:	mov    esi,eax
1004754b:	jne    0x10047516
1004754d:	mov    eax,edi
1004754f:	pop    edi
10047550:	pop    esi
10047551:	ret    
10047552:	push   esi
10047553:	push   edi
10047554:	xor    esi,esi
10047556:	push   0x0
10047558:	push   DWORD PTR [esp+0x14]
1004755c:	push   DWORD PTR [esp+0x14]
10047560:	call   0x10043686
10047565:	mov    edi,eax
10047567:	add    esp,0xc
1004756a:	test   edi,edi
1004756c:	jne    0x10047595
1004756e:	cmp    DWORD PTR ds:0x1007fde0,eax
10047574:	jbe    0x10047595
10047576:	push   esi
10047577:	call   DWORD PTR ds:0x100660bc
1004757d:	lea    eax,[esi+0x3e8]
10047583:	cmp    eax,DWORD PTR ds:0x1007fde0
10047589:	jbe    0x1004758e
1004758b:	or     eax,0xffffffff
1004758e:	cmp    eax,0xffffffff
10047591:	mov    esi,eax
10047593:	jne    0x10047556
10047595:	mov    eax,edi
10047597:	pop    edi
10047598:	pop    esi
10047599:	ret    
1004759a:	push   esi
1004759b:	push   edi
1004759c:	xor    esi,esi
1004759e:	push   DWORD PTR [esp+0x10]
100475a2:	push   DWORD PTR [esp+0x10]
100475a6:	call   0x10046298
100475ab:	mov    edi,eax
100475ad:	test   edi,edi
100475af:	pop    ecx
100475b0:	pop    ecx
100475b1:	jne    0x100475e0
100475b3:	cmp    DWORD PTR [esp+0x10],eax
100475b7:	je     0x100475e0
100475b9:	cmp    DWORD PTR ds:0x1007fde0,eax
100475bf:	jbe    0x100475e0
100475c1:	push   esi
100475c2:	call   DWORD PTR ds:0x100660bc
100475c8:	lea    eax,[esi+0x3e8]
100475ce:	cmp    eax,DWORD PTR ds:0x1007fde0
100475d4:	jbe    0x100475d9
100475d6:	or     eax,0xffffffff
100475d9:	cmp    eax,0xffffffff
100475dc:	mov    esi,eax
100475de:	jne    0x1004759e
100475e0:	mov    eax,edi
100475e2:	pop    edi
100475e3:	pop    esi
100475e4:	ret    
100475e5:	push   0x10
100475e7:	push   0x100747f0
100475ec:	call   0x10046d84
100475f1:	xor    eax,eax
100475f3:	mov    ebx,DWORD PTR [ebp+0x8]
100475f6:	xor    edi,edi
100475f8:	cmp    ebx,edi
100475fa:	setne  al
100475fd:	cmp    eax,edi
100475ff:	jne    0x1004761e
10047601:	call   0x10046c45
10047606:	mov    DWORD PTR [eax],0x16
1004760c:	push   edi
1004760d:	push   edi
1004760e:	push   edi
1004760f:	push   edi
10047610:	push   edi
10047611:	call   0x1004347c
10047616:	add    esp,0x14
10047619:	or     eax,0xffffffff
1004761c:	jmp    0x10047671
1004761e:	cmp    DWORD PTR ds:0x100825a0,0x3
10047625:	jne    0x1004765f
10047627:	push   0x4
10047629:	call   0x10047d8d
1004762e:	pop    ecx
1004762f:	mov    DWORD PTR [ebp-0x4],edi
10047632:	push   ebx
10047633:	call   0x10047e06
10047638:	pop    ecx
10047639:	mov    DWORD PTR [ebp-0x20],eax
1004763c:	cmp    eax,edi
1004763e:	je     0x1004764b
10047640:	mov    esi,DWORD PTR [ebx-0x4]
10047643:	sub    esi,0x9
10047646:	mov    DWORD PTR [ebp-0x1c],esi
10047649:	jmp    0x1004764e
1004764b:	mov    esi,DWORD PTR [ebp-0x1c]
1004764e:	mov    DWORD PTR [ebp-0x4],0xfffffffe
10047655:	call   0x1004767f
1004765a:	cmp    DWORD PTR [ebp-0x20],edi
1004765d:	jne    0x1004766f
1004765f:	push   ebx
10047660:	push   edi
10047661:	push   DWORD PTR ds:0x1007fe38
10047667:	call   DWORD PTR ds:0x100661c0
1004766d:	mov    esi,eax
1004766f:	mov    eax,esi
10047671:	call   0x10046dc9
10047676:	ret    
10047677:	xor    edi,edi
10047679:	mov    ebx,DWORD PTR [ebp+0x8]
1004767c:	mov    esi,DWORD PTR [ebp-0x1c]
1004767f:	push   0x4
10047681:	call   0x10047cb5
10047686:	pop    ecx
10047687:	ret    
10047688:	call   0x10049e8a
1004768d:	push   DWORD PTR [esp+0x4]
10047691:	call   0x10049cea
10047696:	push   DWORD PTR ds:0x1007e1b0
1004769c:	call   0x10046fe2
100476a1:	push   0xff
100476a6:	call   eax
100476a8:	add    esp,0xc
100476ab:	ret    
100476ac:	push   0x10066660
100476b1:	call   DWORD PTR ds:0x10066198
100476b7:	test   eax,eax
100476b9:	je     0x100476d1
100476bb:	push   0x10066650
100476c0:	push   eax
100476c1:	call   DWORD PTR ds:0x1006612c
100476c7:	test   eax,eax
100476c9:	je     0x100476d1
100476cb:	push   DWORD PTR [esp+0x4]
100476cf:	call   eax
100476d1:	ret    
100476d2:	push   DWORD PTR [esp+0x4]
100476d6:	call   0x100476ac
100476db:	pop    ecx
100476dc:	push   DWORD PTR [esp+0x4]
100476e0:	call   DWORD PTR ds:0x100661c4
100476e6:	int3   
100476e7:	push   0x8
100476e9:	call   0x10047d8d
100476ee:	pop    ecx
100476ef:	ret    
100476f0:	push   0x8
100476f2:	call   0x10047cb5
100476f7:	pop    ecx
100476f8:	ret    
100476f9:	push   esi
100476fa:	mov    esi,eax
100476fc:	jmp    0x10047709
100476fe:	mov    eax,DWORD PTR [esi]
10047700:	test   eax,eax
10047702:	je     0x10047706
10047704:	call   eax
10047706:	add    esi,0x4
10047709:	cmp    esi,DWORD PTR [esp+0x8]
1004770d:	jb     0x100476fe
1004770f:	pop    esi
10047710:	ret    
10047711:	push   esi
10047712:	mov    esi,DWORD PTR [esp+0x8]
10047716:	xor    eax,eax
10047718:	jmp    0x10047729
1004771a:	test   eax,eax
1004771c:	jne    0x1004772f
1004771e:	mov    ecx,DWORD PTR [esi]
10047720:	test   ecx,ecx
10047722:	je     0x10047726
10047724:	call   ecx
10047726:	add    esi,0x4
10047729:	cmp    esi,DWORD PTR [esp+0xc]
1004772d:	jb     0x1004771a
1004772f:	pop    esi
10047730:	ret    
10047731:	mov    ecx,DWORD PTR [esp+0x4]
10047735:	push   esi
10047736:	xor    esi,esi
10047738:	cmp    ecx,esi
1004773a:	jne    0x10047759
1004773c:	call   0x10046c45
10047741:	push   esi
10047742:	push   esi
10047743:	push   esi
10047744:	push   esi
10047745:	push   esi
10047746:	mov    DWORD PTR [eax],0x16
1004774c:	call   0x1004347c
10047751:	add    esp,0x14
10047754:	push   0x16
10047756:	pop    eax
10047757:	pop    esi
10047758:	ret    
10047759:	mov    eax,ds:0x1007fde8
1004775e:	cmp    eax,esi
10047760:	je     0x1004773c
10047762:	mov    DWORD PTR [ecx],eax
10047764:	xor    eax,eax
10047766:	pop    esi
10047767:	ret    
10047768:	mov    eax,DWORD PTR [esp+0x4]
1004776c:	push   esi
1004776d:	xor    esi,esi
1004776f:	cmp    eax,esi
10047771:	jne    0x10047790
10047773:	call   0x10046c45
10047778:	push   esi
10047779:	push   esi
1004777a:	push   esi
1004777b:	push   esi
1004777c:	push   esi
1004777d:	mov    DWORD PTR [eax],0x16
10047783:	call   0x1004347c
10047788:	add    esp,0x14
1004778b:	push   0x16
1004778d:	pop    eax
1004778e:	pop    esi
1004778f:	ret    
10047790:	cmp    DWORD PTR ds:0x1007fde8,esi
10047796:	je     0x10047773
10047798:	mov    ecx,DWORD PTR ds:0x1007fdf4
1004779e:	mov    DWORD PTR [eax],ecx
100477a0:	xor    eax,eax
100477a2:	pop    esi
100477a3:	ret    
100477a4:	cmp    DWORD PTR ds:0x1006cab8,0x0
100477ab:	je     0x100477c7
100477ad:	push   0x1006cab8
100477b2:	call   0x1004c3d2
100477b7:	test   eax,eax
100477b9:	pop    ecx
100477ba:	je     0x100477c7
100477bc:	push   DWORD PTR [esp+0x4]
100477c0:	call   DWORD PTR ds:0x1006cab8
100477c6:	pop    ecx
100477c7:	call   0x1004c43e
100477cc:	push   0x1006655c
100477d1:	push   0x10066540
100477d6:	call   0x10047711
100477db:	test   eax,eax
100477dd:	pop    ecx
100477de:	pop    ecx
100477df:	jne    0x10047835
100477e1:	push   esi
100477e2:	push   edi
100477e3:	push   0x1004bfca
100477e8:	call   0x10043364
100477ed:	mov    esi,0x10066450
100477f2:	mov    eax,esi
100477f4:	mov    edi,0x1006653c
100477f9:	cmp    eax,edi
100477fb:	pop    ecx
100477fc:	jae    0x1004780d
100477fe:	mov    eax,DWORD PTR [esi]
10047800:	test   eax,eax
10047802:	je     0x10047806
10047804:	call   eax
10047806:	add    esi,0x4
10047809:	cmp    esi,edi
1004780b:	jb     0x100477fe
1004780d:	cmp    DWORD PTR ds:0x100825b8,0x0
10047814:	pop    edi
10047815:	pop    esi
10047816:	je     0x10047833
10047818:	push   0x100825b8
1004781d:	call   0x1004c3d2
10047822:	test   eax,eax
10047824:	pop    ecx
10047825:	je     0x10047833
10047827:	push   0x0
10047829:	push   0x2
1004782b:	push   0x0
1004782d:	call   DWORD PTR ds:0x100825b8
10047833:	xor    eax,eax
10047835:	ret    
10047836:	push   0xc
10047838:	push   0x10074810
1004783d:	call   0x10046d84
10047842:	push   0x8
10047844:	call   0x10047d8d
10047849:	pop    ecx
1004784a:	and    DWORD PTR [ebp-0x4],0x0
1004784e:	xor    esi,esi
10047850:	inc    esi
10047851:	cmp    DWORD PTR ds:0x1007fe28,esi
10047857:	je     0x100478c4
10047859:	mov    DWORD PTR ds:0x1007fe24,esi
1004785f:	mov    al,BYTE PTR [ebp+0x10]
10047862:	mov    ds:0x1007fe20,al
10047867:	cmp    DWORD PTR [ebp+0xc],0x0
1004786b:	jne    0x100478b4
1004786d:	push   DWORD PTR ds:0x100825b0
10047873:	call   0x10046fe2
10047878:	mov    edi,eax
1004787a:	push   DWORD PTR ds:0x100825ac
10047880:	call   0x10046fe2
10047885:	pop    ecx
10047886:	pop    ecx
10047887:	mov    DWORD PTR [ebp-0x1c],eax
1004788a:	test   edi,edi
1004788c:	je     0x100478a4
1004788e:	sub    DWORD PTR [ebp-0x1c],0x4
10047892:	cmp    DWORD PTR [ebp-0x1c],edi
10047895:	jb     0x100478a4
10047897:	mov    eax,DWORD PTR [ebp-0x1c]
1004789a:	mov    eax,DWORD PTR [eax]
1004789c:	test   eax,eax
1004789e:	je     0x1004788e
100478a0:	call   eax
100478a2:	jmp    0x1004788e
100478a4:	push   0x1006656c
100478a9:	mov    eax,0x10066560
100478ae:	call   0x100476f9
100478b3:	pop    ecx
100478b4:	push   0x10066578
100478b9:	mov    eax,0x10066570
100478be:	call   0x100476f9
100478c3:	pop    ecx
100478c4:	mov    DWORD PTR [ebp-0x4],0xfffffffe
100478cb:	call   0x100478ef
100478d0:	cmp    DWORD PTR [ebp+0x10],0x0
100478d4:	jne    0x100478fe
100478d6:	mov    DWORD PTR ds:0x1007fe28,esi
100478dc:	push   0x8
100478de:	call   0x10047cb5
100478e3:	pop    ecx
100478e4:	push   DWORD PTR [ebp+0x8]
100478e7:	call   0x100476d2
100478ec:	xor    esi,esi
100478ee:	inc    esi
100478ef:	cmp    DWORD PTR [ebp+0x10],0x0
100478f3:	je     0x100478fd
100478f5:	push   0x8
100478f7:	call   0x10047cb5
100478fc:	pop    ecx
100478fd:	ret    
100478fe:	call   0x10046dc9
10047903:	ret    
10047904:	push   0x0
10047906:	push   0x1
10047908:	push   DWORD PTR [esp+0xc]
1004790c:	call   0x10047836
10047911:	add    esp,0xc
10047914:	ret    
10047915:	push   0x1
10047917:	push   0x0
10047919:	push   0x0
1004791b:	call   0x10047836
10047920:	add    esp,0xc
10047923:	ret    
10047924:	push   esi
10047925:	call   0x10046fd9
1004792a:	mov    esi,eax
1004792c:	push   esi
1004792d:	call   0x10047a78
10047932:	push   esi
10047933:	call   0x1004c671
10047938:	push   esi
10047939:	call   0x10043376
1004793e:	push   esi
1004793f:	call   0x1004ad6c
10047944:	push   esi
10047945:	call   0x1004c667
1004794a:	push   esi
1004794b:	call   0x1004c45d
10047950:	push   esi
10047951:	call   0x100595ff
10047956:	push   esi
10047957:	call   0x10046d71
1004795c:	push   0x10047904
10047961:	call   0x10046f76
10047966:	add    esp,0x24
10047969:	mov    ds:0x1007e1b0,eax
1004796e:	pop    esi
1004796f:	ret    
10047970:	and    DWORD PTR ds:0x100825a4,0x0
10047977:	ret    
10047978:	push   0xc
1004797a:	push   0x10074830
1004797f:	call   0x10046d84
10047984:	push   0xe
10047986:	call   0x10047d8d
1004798b:	pop    ecx
1004798c:	and    DWORD PTR [ebp-0x4],0x0
10047990:	mov    esi,DWORD PTR [ebp+0x8]
10047993:	mov    ecx,DWORD PTR [esi+0x4]
10047996:	test   ecx,ecx
10047998:	je     0x100479c9
1004799a:	mov    eax,ds:0x1007fe30
1004799f:	mov    edx,0x1007fe2c
100479a4:	mov    DWORD PTR [ebp-0x1c],eax
100479a7:	test   eax,eax
100479a9:	je     0x100479bc
100479ab:	cmp    DWORD PTR [eax],ecx
100479ad:	jne    0x100479db
100479af:	mov    ecx,DWORD PTR [eax+0x4]
100479b2:	mov    DWORD PTR [edx+0x4],ecx
100479b5:	push   eax
100479b6:	call   0x100435f8
100479bb:	pop    ecx
100479bc:	push   DWORD PTR [esi+0x4]
100479bf:	call   0x100435f8
100479c4:	pop    ecx
100479c5:	and    DWORD PTR [esi+0x4],0x0
100479c9:	mov    DWORD PTR [ebp-0x4],0xfffffffe
100479d0:	call   0x100479df
100479d5:	call   0x10046dc9
100479da:	ret    
100479db:	mov    edx,eax
100479dd:	jmp    0x100479a4
100479df:	push   0xe
100479e1:	call   0x10047cb5
100479e6:	pop    ecx
100479e7:	ret    
100479e8:	int3   
100479e9:	int3   
100479ea:	int3   
100479eb:	int3   
100479ec:	int3   
100479ed:	int3   
100479ee:	int3   
100479ef:	int3   
100479f0:	mov    edx,DWORD PTR [esp+0x4]
100479f4:	mov    ecx,DWORD PTR [esp+0x8]
100479f8:	test   edx,0x3
100479fe:	jne    0x10047a3c
10047a00:	mov    eax,DWORD PTR [edx]
10047a02:	cmp    al,BYTE PTR [ecx]
10047a04:	jne    0x10047a34
10047a06:	or     al,al
10047a08:	je     0x10047a30
10047a0a:	cmp    ah,BYTE PTR [ecx+0x1]
10047a0d:	jne    0x10047a34
10047a0f:	or     ah,ah
10047a11:	je     0x10047a30
10047a13:	shr    eax,0x10
10047a16:	cmp    al,BYTE PTR [ecx+0x2]
10047a19:	jne    0x10047a34
10047a1b:	or     al,al
10047a1d:	je     0x10047a30
10047a1f:	cmp    ah,BYTE PTR [ecx+0x3]
10047a22:	jne    0x10047a34
10047a24:	add    ecx,0x4
10047a27:	add    edx,0x4
10047a2a:	or     ah,ah
10047a2c:	jne    0x10047a00
10047a2e:	mov    edi,edi
10047a30:	xor    eax,eax
10047a32:	ret    
10047a33:	nop
10047a34:	sbb    eax,eax
10047a36:	shl    eax,1
10047a38:	add    eax,0x1
10047a3b:	ret    
10047a3c:	test   edx,0x1
10047a42:	je     0x10047a5c
10047a44:	mov    al,BYTE PTR [edx]
10047a46:	add    edx,0x1
10047a49:	cmp    al,BYTE PTR [ecx]
10047a4b:	jne    0x10047a34
10047a4d:	add    ecx,0x1
10047a50:	or     al,al
10047a52:	je     0x10047a30
10047a54:	test   edx,0x2
10047a5a:	je     0x10047a00
10047a5c:	mov    ax,WORD PTR [edx]
10047a5f:	add    edx,0x2
10047a62:	cmp    al,BYTE PTR [ecx]
10047a64:	jne    0x10047a34
10047a66:	or     al,al
10047a68:	je     0x10047a30
10047a6a:	cmp    ah,BYTE PTR [ecx+0x1]
10047a6d:	jne    0x10047a34
10047a6f:	or     ah,ah
10047a71:	je     0x10047a30
10047a73:	add    ecx,0x2
10047a76:	jmp    0x10047a00
10047a78:	mov    eax,DWORD PTR [esp+0x4]
10047a7c:	mov    ds:0x1007fe34,eax
10047a81:	ret    
10047a82:	push   DWORD PTR ds:0x1007fe34
10047a88:	call   0x10046fe2
10047a8d:	test   eax,eax
10047a8f:	pop    ecx
10047a90:	je     0x10047aa1
10047a92:	push   DWORD PTR [esp+0x4]
10047a96:	call   eax
10047a98:	test   eax,eax
10047a9a:	pop    ecx
10047a9b:	je     0x10047aa1
10047a9d:	xor    eax,eax
10047a9f:	inc    eax
10047aa0:	ret    
10047aa1:	xor    eax,eax
10047aa3:	ret    
10047aa4:	push   ebp
10047aa5:	mov    ebp,esp
10047aa7:	sub    esp,0x20
10047aaa:	mov    eax,DWORD PTR [ebp+0x8]
10047aad:	push   esi
10047aae:	push   edi
10047aaf:	push   0x8
10047ab1:	pop    ecx
10047ab2:	mov    esi,0x1006666c
10047ab7:	lea    edi,[ebp-0x20]
10047aba:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
10047abc:	mov    DWORD PTR [ebp-0x8],eax
10047abf:	mov    eax,DWORD PTR [ebp+0xc]
10047ac2:	test   eax,eax
10047ac4:	pop    edi
10047ac5:	mov    DWORD PTR [ebp-0x4],eax
10047ac8:	pop    esi
10047ac9:	je     0x10047ad7
10047acb:	test   BYTE PTR [eax],0x8
10047ace:	je     0x10047ad7
10047ad0:	mov    DWORD PTR [ebp-0xc],0x1994000
10047ad7:	lea    eax,[ebp-0xc]
10047ada:	push   eax
10047adb:	push   DWORD PTR [ebp-0x10]
10047ade:	push   DWORD PTR [ebp-0x1c]
10047ae1:	push   DWORD PTR [ebp-0x20]
10047ae4:	call   DWORD PTR ds:0x10066128
10047aea:	leave  
10047aeb:	ret    0x8
10047aee:	push   ebp
10047aef:	mov    ebp,esp
10047af1:	push   ecx
10047af2:	push   ecx
10047af3:	push   esi
10047af4:	lea    eax,[ebp-0x4]
10047af7:	xor    esi,esi
10047af9:	push   eax
10047afa:	mov    DWORD PTR [ebp-0x4],esi
10047afd:	mov    DWORD PTR [ebp-0x8],esi
10047b00:	call   0x10047731
10047b05:	test   eax,eax
10047b07:	pop    ecx
10047b08:	je     0x10047b17
10047b0a:	push   esi
10047b0b:	push   esi
10047b0c:	push   esi
10047b0d:	push   esi
10047b0e:	push   esi
10047b0f:	call   0x10043380
10047b14:	add    esp,0x14
10047b17:	lea    eax,[ebp-0x8]
10047b1a:	push   eax
10047b1b:	call   0x10047768
10047b20:	test   eax,eax
10047b22:	pop    ecx
10047b23:	je     0x10047b32
10047b25:	push   esi
10047b26:	push   esi
10047b27:	push   esi
10047b28:	push   esi
10047b29:	push   esi
10047b2a:	call   0x10043380
10047b2f:	add    esp,0x14
10047b32:	cmp    DWORD PTR [ebp-0x4],0x2
10047b36:	pop    esi
10047b37:	jne    0x10047b44
10047b39:	cmp    DWORD PTR [ebp-0x8],0x5
10047b3d:	jb     0x10047b44
10047b3f:	xor    eax,eax
10047b41:	inc    eax
10047b42:	leave  
10047b43:	ret    
10047b44:	push   0x3
10047b46:	pop    eax
10047b47:	leave  
10047b48:	ret    
10047b49:	xor    eax,eax
10047b4b:	cmp    DWORD PTR [esp+0x4],eax
10047b4f:	push   0x0
10047b51:	sete   al
10047b54:	push   0x1000
10047b59:	push   eax
10047b5a:	call   DWORD PTR ds:0x100661cc
10047b60:	test   eax,eax
10047b62:	mov    ds:0x1007fe38,eax
10047b67:	jne    0x10047b6c
10047b69:	xor    eax,eax
10047b6b:	ret    
10047b6c:	call   0x10047aee
10047b71:	cmp    eax,0x3
10047b74:	mov    ds:0x100825a0,eax
10047b79:	jne    0x10047b9f
10047b7b:	push   0x3f8
10047b80:	call   0x10047dbe
10047b85:	test   eax,eax
10047b87:	pop    ecx
10047b88:	jne    0x10047b9f
10047b8a:	push   DWORD PTR ds:0x1007fe38
10047b90:	call   DWORD PTR ds:0x100661c8
10047b96:	and    DWORD PTR ds:0x1007fe38,0x0
10047b9d:	jmp    0x10047b69
10047b9f:	xor    eax,eax
10047ba1:	inc    eax
10047ba2:	ret    
10047ba3:	push   ebp
10047ba4:	xor    ebp,ebp
10047ba6:	cmp    DWORD PTR ds:0x100825a0,0x3
10047bad:	jne    0x10047c03
10047baf:	push   ebx
10047bb0:	mov    ebx,DWORD PTR ds:0x10066188
10047bb6:	push   edi
10047bb7:	xor    edi,edi
10047bb9:	cmp    DWORD PTR ds:0x10082588,ebp
10047bbf:	jle    0x10047bf2
10047bc1:	push   esi
10047bc2:	mov    esi,DWORD PTR ds:0x1008258c
10047bc8:	add    esi,0x10
10047bcb:	push   0x8000
10047bd0:	push   ebp
10047bd1:	push   DWORD PTR [esi-0x4]
10047bd4:	call   DWORD PTR ds:0x100661d0
10047bda:	push   DWORD PTR [esi]
10047bdc:	push   ebp
10047bdd:	push   DWORD PTR ds:0x1007fe38
10047be3:	call   ebx
10047be5:	add    esi,0x14
10047be8:	inc    edi
10047be9:	cmp    edi,DWORD PTR ds:0x10082588
10047bef:	jl     0x10047bcb
10047bf1:	pop    esi
10047bf2:	push   DWORD PTR ds:0x1008258c
10047bf8:	push   ebp
10047bf9:	push   DWORD PTR ds:0x1007fe38
10047bff:	call   ebx
10047c01:	pop    edi
10047c02:	pop    ebx
10047c03:	push   DWORD PTR ds:0x1007fe38
10047c09:	call   DWORD PTR ds:0x100661c8
10047c0f:	mov    DWORD PTR ds:0x1007fe38,ebp
10047c15:	pop    ebp
10047c16:	ret    
10047c17:	push   esi
10047c18:	push   edi
10047c19:	xor    esi,esi
10047c1b:	mov    edi,0x1007fe40
10047c20:	cmp    DWORD PTR [esi*8+0x1007e1cc],0x1
10047c28:	jne    0x10047c48
10047c2a:	lea    eax,[esi*8+0x1007e1c8]
10047c31:	mov    DWORD PTR [eax],edi
10047c33:	push   0xfa0
10047c38:	push   DWORD PTR [eax]
10047c3a:	add    edi,0x18
10047c3d:	call   0x1004c68b
10047c42:	test   eax,eax
10047c44:	pop    ecx
10047c45:	pop    ecx
10047c46:	je     0x10047c54
10047c48:	inc    esi
10047c49:	cmp    esi,0x24
10047c4c:	jl     0x10047c20
10047c4e:	xor    eax,eax
10047c50:	inc    eax
10047c51:	pop    edi
10047c52:	pop    esi
10047c53:	ret    
10047c54:	and    DWORD PTR [esi*8+0x1007e1c8],0x0
10047c5c:	xor    eax,eax
10047c5e:	jmp    0x10047c51
10047c60:	push   ebx
10047c61:	mov    ebx,DWORD PTR ds:0x10066138
10047c67:	push   esi
10047c68:	mov    esi,0x1007e1c8
10047c6d:	push   edi
10047c6e:	mov    edi,DWORD PTR [esi]
10047c70:	test   edi,edi
10047c72:	je     0x10047c87
10047c74:	cmp    DWORD PTR [esi+0x4],0x1
10047c78:	je     0x10047c87
10047c7a:	push   edi
10047c7b:	call   ebx
10047c7d:	push   edi
10047c7e:	call   0x100435f8
10047c83:	and    DWORD PTR [esi],0x0
10047c86:	pop    ecx
10047c87:	add    esi,0x8
10047c8a:	cmp    esi,0x1007e2e8
10047c90:	jl     0x10047c6e
10047c92:	mov    esi,0x1007e1c8
10047c97:	pop    edi
10047c98:	mov    eax,DWORD PTR [esi]
10047c9a:	test   eax,eax
10047c9c:	je     0x10047ca7
10047c9e:	cmp    DWORD PTR [esi+0x4],0x1
10047ca2:	jne    0x10047ca7
10047ca4:	push   eax
10047ca5:	call   ebx
10047ca7:	add    esi,0x8
10047caa:	cmp    esi,0x1007e2e8
10047cb0:	jl     0x10047c98
10047cb2:	pop    esi
10047cb3:	pop    ebx
10047cb4:	ret    
10047cb5:	push   ebp
10047cb6:	mov    ebp,esp
10047cb8:	mov    eax,DWORD PTR [ebp+0x8]
10047cbb:	push   DWORD PTR [eax*8+0x1007e1c8]
10047cc2:	call   DWORD PTR ds:0x100660ec
10047cc8:	pop    ebp
10047cc9:	ret    
10047cca:	push   0xc
10047ccc:	push   0x10074850
10047cd1:	call   0x10046d84
10047cd6:	xor    edi,edi
10047cd8:	inc    edi
10047cd9:	mov    DWORD PTR [ebp-0x1c],edi
10047cdc:	xor    ebx,ebx
10047cde:	cmp    DWORD PTR ds:0x1007fe38,ebx
10047ce4:	jne    0x10047cfe
10047ce6:	call   0x10049e8a
10047ceb:	push   0x1e
10047ced:	call   0x10049cea
10047cf2:	push   0xff
10047cf7:	call   0x100476d2
10047cfc:	pop    ecx
10047cfd:	pop    ecx
10047cfe:	mov    esi,DWORD PTR [ebp+0x8]
10047d01:	lea    esi,[esi*8+0x1007e1c8]
10047d08:	cmp    DWORD PTR [esi],ebx
10047d0a:	je     0x10047d10
10047d0c:	mov    eax,edi
10047d0e:	jmp    0x10047d7e
10047d10:	push   0x18
10047d12:	call   0x10047512
10047d17:	pop    ecx
10047d18:	mov    edi,eax
10047d1a:	cmp    edi,ebx
10047d1c:	jne    0x10047d2d
10047d1e:	call   0x10046c45
10047d23:	mov    DWORD PTR [eax],0xc
10047d29:	xor    eax,eax
10047d2b:	jmp    0x10047d7e
10047d2d:	push   0xa
10047d2f:	call   0x10047d8d
10047d34:	pop    ecx
10047d35:	mov    DWORD PTR [ebp-0x4],ebx
10047d38:	cmp    DWORD PTR [esi],ebx
10047d3a:	jne    0x10047d68
10047d3c:	push   0xfa0
10047d41:	push   edi
10047d42:	call   0x1004c68b
10047d47:	pop    ecx
10047d48:	pop    ecx
10047d49:	test   eax,eax
10047d4b:	jne    0x10047d64
10047d4d:	push   edi
10047d4e:	call   0x100435f8
10047d53:	pop    ecx
10047d54:	call   0x10046c45
10047d59:	mov    DWORD PTR [eax],0xc
10047d5f:	mov    DWORD PTR [ebp-0x1c],ebx
10047d62:	jmp    0x10047d6f
10047d64:	mov    DWORD PTR [esi],edi
10047d66:	jmp    0x10047d6f
10047d68:	push   edi
10047d69:	call   0x100435f8
10047d6e:	pop    ecx
10047d6f:	mov    DWORD PTR [ebp-0x4],0xfffffffe
10047d76:	call   0x10047d84
10047d7b:	mov    eax,DWORD PTR [ebp-0x1c]
10047d7e:	call   0x10046dc9
10047d83:	ret    
10047d84:	push   0xa
10047d86:	call   0x10047cb5
10047d8b:	pop    ecx
10047d8c:	ret    
10047d8d:	push   ebp
10047d8e:	mov    ebp,esp
10047d90:	mov    eax,DWORD PTR [ebp+0x8]
10047d93:	push   esi
10047d94:	lea    esi,[eax*8+0x1007e1c8]
10047d9b:	cmp    DWORD PTR [esi],0x0
10047d9e:	jne    0x10047db3
10047da0:	push   eax
10047da1:	call   0x10047cca
10047da6:	test   eax,eax
10047da8:	pop    ecx
10047da9:	jne    0x10047db3
10047dab:	push   0x11
10047dad:	call   0x10047688
10047db2:	pop    ecx
10047db3:	push   DWORD PTR [esi]
10047db5:	call   DWORD PTR ds:0x100660f0
10047dbb:	pop    esi
10047dbc:	pop    ebp
10047dbd:	ret    
10047dbe:	push   0x140
10047dc3:	push   0x0
10047dc5:	push   DWORD PTR ds:0x1007fe38
10047dcb:	call   DWORD PTR ds:0x1006618c
10047dd1:	test   eax,eax
10047dd3:	mov    ds:0x1008258c,eax
10047dd8:	jne    0x10047ddb
10047dda:	ret    
10047ddb:	mov    ecx,DWORD PTR [esp+0x4]
10047ddf:	and    DWORD PTR ds:0x1007ff90,0x0
10047de6:	and    DWORD PTR ds:0x10082588,0x0
10047ded:	mov    ds:0x10082594,eax
10047df2:	xor    eax,eax
10047df4:	mov    DWORD PTR ds:0x10082590,ecx
10047dfa:	mov    DWORD PTR ds:0x10082598,0x10
10047e04:	inc    eax
10047e05:	ret    
10047e06:	mov    ecx,DWORD PTR ds:0x10082588
10047e0c:	mov    eax,ds:0x1008258c
10047e11:	imul   ecx,ecx,0x14
10047e14:	add    ecx,eax
10047e16:	jmp    0x10047e2a
10047e18:	mov    edx,DWORD PTR [esp+0x4]
10047e1c:	sub    edx,DWORD PTR [eax+0xc]
10047e1f:	cmp    edx,0x100000
10047e25:	jb     0x10047e30
10047e27:	add    eax,0x14
10047e2a:	cmp    eax,ecx
10047e2c:	jb     0x10047e18
10047e2e:	xor    eax,eax
10047e30:	ret    
10047e31:	push   ebp
10047e32:	mov    ebp,esp
10047e34:	sub    esp,0x10
10047e37:	mov    ecx,DWORD PTR [ebp+0x8]
10047e3a:	mov    eax,DWORD PTR [ecx+0x10]
10047e3d:	push   esi
10047e3e:	mov    esi,DWORD PTR [ebp+0xc]
10047e41:	push   edi
10047e42:	mov    edi,esi
10047e44:	sub    edi,DWORD PTR [ecx+0xc]
10047e47:	add    esi,0xfffffffc
10047e4a:	shr    edi,0xf
10047e4d:	mov    ecx,edi
10047e4f:	imul   ecx,ecx,0x204
10047e55:	lea    ecx,[ecx+eax*1+0x144]
10047e5c:	mov    DWORD PTR [ebp-0x10],ecx
10047e5f:	mov    ecx,DWORD PTR [esi]
10047e61:	dec    ecx
10047e62:	test   cl,0x1
10047e65:	mov    DWORD PTR [ebp-0x4],ecx
10047e68:	jne    0x10048141
10047e6e:	push   ebx
10047e6f:	lea    ebx,[ecx+esi*1]
10047e72:	mov    edx,DWORD PTR [ebx]
10047e74:	mov    DWORD PTR [ebp-0xc],edx
10047e77:	mov    edx,DWORD PTR [esi-0x4]
10047e7a:	mov    DWORD PTR [ebp-0x8],edx
10047e7d:	mov    edx,DWORD PTR [ebp-0xc]
10047e80:	test   dl,0x1
10047e83:	mov    DWORD PTR [ebp+0xc],ebx
10047e86:	jne    0x10047efc
10047e88:	sar    edx,0x4
10047e8b:	dec    edx
10047e8c:	cmp    edx,0x3f
10047e8f:	jbe    0x10047e94
10047e91:	push   0x3f
10047e93:	pop    edx
10047e94:	mov    ecx,DWORD PTR [ebx+0x4]
10047e97:	cmp    ecx,DWORD PTR [ebx+0x8]
10047e9a:	jne    0x10047ede
10047e9c:	cmp    edx,0x20
10047e9f:	mov    ebx,0x80000000
10047ea4:	jae    0x10047ebf
10047ea6:	mov    ecx,edx
10047ea8:	shr    ebx,cl
10047eaa:	lea    ecx,[edx+eax*1+0x4]
10047eae:	not    ebx
10047eb0:	and    DWORD PTR [eax+edi*4+0x44],ebx
10047eb4:	dec    BYTE PTR [ecx]
10047eb6:	jne    0x10047edb
10047eb8:	mov    ecx,DWORD PTR [ebp+0x8]
10047ebb:	and    DWORD PTR [ecx],ebx
10047ebd:	jmp    0x10047edb
10047ebf:	lea    ecx,[edx-0x20]
10047ec2:	shr    ebx,cl
10047ec4:	lea    ecx,[edx+eax*1+0x4]
10047ec8:	not    ebx
10047eca:	and    DWORD PTR [eax+edi*4+0xc4],ebx
10047ed1:	dec    BYTE PTR [ecx]
10047ed3:	jne    0x10047edb
10047ed5:	mov    ecx,DWORD PTR [ebp+0x8]
10047ed8:	and    DWORD PTR [ecx+0x4],ebx
10047edb:	mov    ebx,DWORD PTR [ebp+0xc]
10047ede:	mov    edx,DWORD PTR [ebx+0x8]
10047ee1:	mov    ebx,DWORD PTR [ebx+0x4]
10047ee4:	mov    ecx,DWORD PTR [ebp-0x4]
10047ee7:	add    ecx,DWORD PTR [ebp-0xc]
10047eea:	mov    DWORD PTR [edx+0x4],ebx
10047eed:	mov    edx,DWORD PTR [ebp+0xc]
10047ef0:	mov    ebx,DWORD PTR [edx+0x4]
10047ef3:	mov    edx,DWORD PTR [edx+0x8]
10047ef6:	mov    DWORD PTR [ebx+0x8],edx
10047ef9:	mov    DWORD PTR [ebp-0x4],ecx
10047efc:	mov    edx,ecx
10047efe:	sar    edx,0x4
10047f01:	dec    edx
10047f02:	cmp    edx,0x3f
10047f05:	jbe    0x10047f0a
10047f07:	push   0x3f
10047f09:	pop    edx
10047f0a:	mov    ebx,DWORD PTR [ebp-0x8]
10047f0d:	and    ebx,0x1
10047f10:	mov    DWORD PTR [ebp-0xc],ebx
10047f13:	jne    0x10047fa8
10047f19:	sub    esi,DWORD PTR [ebp-0x8]
10047f1c:	mov    ebx,DWORD PTR [ebp-0x8]
10047f1f:	sar    ebx,0x4
10047f22:	push   0x3f
10047f24:	mov    DWORD PTR [ebp+0xc],esi
10047f27:	dec    ebx
10047f28:	pop    esi
10047f29:	cmp    ebx,esi
10047f2b:	jbe    0x10047f2f
10047f2d:	mov    ebx,esi
10047f2f:	add    ecx,DWORD PTR [ebp-0x8]
10047f32:	mov    edx,ecx
10047f34:	sar    edx,0x4
10047f37:	dec    edx
10047f38:	cmp    edx,esi
10047f3a:	mov    DWORD PTR [ebp-0x4],ecx
10047f3d:	jbe    0x10047f41
10047f3f:	mov    edx,esi
10047f41:	cmp    ebx,edx
10047f43:	je     0x10047fa3
10047f45:	mov    ecx,DWORD PTR [ebp+0xc]
10047f48:	mov    esi,DWORD PTR [ecx+0x4]
10047f4b:	cmp    esi,DWORD PTR [ecx+0x8]
10047f4e:	jne    0x10047f8b
10047f50:	cmp    ebx,0x20
10047f53:	mov    esi,0x80000000
10047f58:	jae    0x10047f71
10047f5a:	mov    ecx,ebx
10047f5c:	shr    esi,cl
10047f5e:	not    esi
10047f60:	and    DWORD PTR [eax+edi*4+0x44],esi
10047f64:	dec    BYTE PTR [ebx+eax*1+0x4]
10047f68:	jne    0x10047f8b
10047f6a:	mov    ecx,DWORD PTR [ebp+0x8]
10047f6d:	and    DWORD PTR [ecx],esi
10047f6f:	jmp    0x10047f8b
10047f71:	lea    ecx,[ebx-0x20]
10047f74:	shr    esi,cl
10047f76:	not    esi
10047f78:	and    DWORD PTR [eax+edi*4+0xc4],esi
10047f7f:	dec    BYTE PTR [ebx+eax*1+0x4]
10047f83:	jne    0x10047f8b
10047f85:	mov    ecx,DWORD PTR [ebp+0x8]
10047f88:	and    DWORD PTR [ecx+0x4],esi
10047f8b:	mov    ecx,DWORD PTR [ebp+0xc]
10047f8e:	mov    esi,DWORD PTR [ecx+0x8]
10047f91:	mov    ecx,DWORD PTR [ecx+0x4]
10047f94:	mov    DWORD PTR [esi+0x4],ecx
10047f97:	mov    ecx,DWORD PTR [ebp+0xc]
10047f9a:	mov    esi,DWORD PTR [ecx+0x4]
10047f9d:	mov    ecx,DWORD PTR [ecx+0x8]
10047fa0:	mov    DWORD PTR [esi+0x8],ecx
10047fa3:	mov    esi,DWORD PTR [ebp+0xc]
10047fa6:	jmp    0x10047fab
10047fa8:	mov    ebx,DWORD PTR [ebp+0x8]
10047fab:	cmp    DWORD PTR [ebp-0xc],0x0
10047faf:	jne    0x10047fb9
10047fb1:	cmp    ebx,edx
10047fb3:	je     0x10048039
10047fb9:	mov    ecx,DWORD PTR [ebp-0x10]
10047fbc:	lea    ecx,[ecx+edx*8]
10047fbf:	mov    ebx,DWORD PTR [ecx+0x4]
10047fc2:	mov    DWORD PTR [esi+0x8],ecx
10047fc5:	mov    DWORD PTR [esi+0x4],ebx
10047fc8:	mov    DWORD PTR [ecx+0x4],esi
10047fcb:	mov    ecx,DWORD PTR [esi+0x4]
10047fce:	mov    DWORD PTR [ecx+0x8],esi
10047fd1:	mov    ecx,DWORD PTR [esi+0x4]
10047fd4:	cmp    ecx,DWORD PTR [esi+0x8]
10047fd7:	jne    0x10048039
10047fd9:	mov    cl,BYTE PTR [edx+eax*1+0x4]
10047fdd:	mov    BYTE PTR [ebp+0xf],cl
10047fe0:	inc    cl
10047fe2:	cmp    edx,0x20
10047fe5:	mov    BYTE PTR [edx+eax*1+0x4],cl
10047fe9:	jae    0x10048010
10047feb:	cmp    BYTE PTR [ebp+0xf],0x0
10047fef:	jne    0x10047fff
10047ff1:	mov    ecx,edx
10047ff3:	mov    ebx,0x80000000
10047ff8:	shr    ebx,cl
10047ffa:	mov    ecx,DWORD PTR [ebp+0x8]
10047ffd:	or     DWORD PTR [ecx],ebx
10047fff:	mov    ebx,0x80000000
10048004:	mov    ecx,edx
10048006:	shr    ebx,cl
10048008:	lea    eax,[eax+edi*4+0x44]
1004800c:	or     DWORD PTR [eax],ebx
1004800e:	jmp    0x10048039
10048010:	cmp    BYTE PTR [ebp+0xf],0x0
10048014:	jne    0x10048026
10048016:	lea    ecx,[edx-0x20]
10048019:	mov    ebx,0x80000000
1004801e:	shr    ebx,cl
10048020:	mov    ecx,DWORD PTR [ebp+0x8]
10048023:	or     DWORD PTR [ecx+0x4],ebx
10048026:	lea    ecx,[edx-0x20]
10048029:	mov    edx,0x80000000
1004802e:	shr    edx,cl
10048030:	lea    eax,[eax+edi*4+0xc4]
10048037:	or     DWORD PTR [eax],edx
10048039:	mov    eax,DWORD PTR [ebp-0x4]
1004803c:	mov    DWORD PTR [esi],eax
1004803e:	mov    DWORD PTR [eax+esi*1-0x4],eax
10048042:	mov    eax,DWORD PTR [ebp-0x10]
10048045:	dec    DWORD PTR [eax]
10048047:	jne    0x10048140
1004804d:	mov    eax,ds:0x1007ff90
10048052:	test   eax,eax
10048054:	je     0x10048132
1004805a:	mov    ecx,DWORD PTR ds:0x1008259c
10048060:	mov    esi,DWORD PTR ds:0x100661d0
10048066:	push   0x4000
1004806b:	shl    ecx,0xf
1004806e:	add    ecx,DWORD PTR [eax+0xc]
10048071:	mov    ebx,0x8000
10048076:	push   ebx
10048077:	push   ecx
10048078:	call   esi
1004807a:	mov    ecx,DWORD PTR ds:0x1008259c
10048080:	mov    eax,ds:0x1007ff90
10048085:	mov    edx,0x80000000
1004808a:	shr    edx,cl
1004808c:	or     DWORD PTR [eax+0x8],edx
1004808f:	mov    eax,ds:0x1007ff90
10048094:	mov    eax,DWORD PTR [eax+0x10]
10048097:	mov    ecx,DWORD PTR ds:0x1008259c
1004809d:	and    DWORD PTR [eax+ecx*4+0xc4],0x0
100480a5:	mov    eax,ds:0x1007ff90
100480aa:	mov    eax,DWORD PTR [eax+0x10]
100480ad:	dec    BYTE PTR [eax+0x43]
100480b0:	mov    eax,ds:0x1007ff90
100480b5:	mov    ecx,DWORD PTR [eax+0x10]
100480b8:	cmp    BYTE PTR [ecx+0x43],0x0
100480bc:	jne    0x100480c7
100480be:	and    DWORD PTR [eax+0x4],0xfffffffe
100480c2:	mov    eax,ds:0x1007ff90
100480c7:	cmp    DWORD PTR [eax+0x8],0xffffffff
100480cb:	jne    0x10048132
100480cd:	push   ebx
100480ce:	push   0x0
100480d0:	push   DWORD PTR [eax+0xc]
100480d3:	call   esi
100480d5:	mov    eax,ds:0x1007ff90
100480da:	push   DWORD PTR [eax+0x10]
100480dd:	push   0x0
100480df:	push   DWORD PTR ds:0x1007fe38
100480e5:	call   DWORD PTR ds:0x10066188
100480eb:	mov    ecx,DWORD PTR ds:0x10082588
100480f1:	mov    eax,ds:0x1007ff90
100480f6:	imul   ecx,ecx,0x14
100480f9:	mov    edx,DWORD PTR ds:0x1008258c
100480ff:	sub    ecx,eax
10048101:	lea    ecx,[ecx+edx*1-0x14]
10048105:	push   ecx
10048106:	lea    ecx,[eax+0x14]
10048109:	push   ecx
1004810a:	push   eax
1004810b:	call   0x100457b0
10048110:	mov    eax,DWORD PTR [ebp+0x8]
10048113:	add    esp,0xc
10048116:	dec    DWORD PTR ds:0x10082588
1004811c:	cmp    eax,DWORD PTR ds:0x1007ff90
10048122:	jbe    0x10048128
10048124:	sub    DWORD PTR [ebp+0x8],0x14
10048128:	mov    eax,ds:0x1008258c
1004812d:	mov    ds:0x10082594,eax
10048132:	mov    eax,DWORD PTR [ebp+0x8]
10048135:	mov    ds:0x1007ff90,eax
1004813a:	mov    DWORD PTR ds:0x1008259c,edi
10048140:	pop    ebx
10048141:	pop    edi
10048142:	pop    esi
10048143:	leave  
10048144:	ret    
10048145:	mov    eax,ds:0x10082598
1004814a:	push   esi
1004814b:	mov    esi,DWORD PTR ds:0x10082588
10048151:	push   edi
10048152:	xor    edi,edi
10048154:	cmp    esi,eax
10048156:	jne    0x1004818c
10048158:	add    eax,0x10
1004815b:	imul   eax,eax,0x14
1004815e:	push   eax
1004815f:	push   DWORD PTR ds:0x1008258c
10048165:	push   edi
10048166:	push   DWORD PTR ds:0x1007fe38
1004816c:	call   DWORD PTR ds:0x100661a0
10048172:	cmp    eax,edi
10048174:	jne    0x1004817a
10048176:	xor    eax,eax
10048178:	jmp    0x100481f2
1004817a:	add    DWORD PTR ds:0x10082598,0x10
10048181:	mov    esi,DWORD PTR ds:0x10082588
10048187:	mov    ds:0x1008258c,eax
1004818c:	imul   esi,esi,0x14
1004818f:	add    esi,DWORD PTR ds:0x1008258c
10048195:	push   0x41c4
1004819a:	push   0x8
1004819c:	push   DWORD PTR ds:0x1007fe38
100481a2:	call   DWORD PTR ds:0x1006618c
100481a8:	cmp    eax,edi
100481aa:	mov    DWORD PTR [esi+0x10],eax
100481ad:	je     0x10048176
100481af:	push   0x4
100481b1:	push   0x2000
100481b6:	push   0x100000
100481bb:	push   edi
100481bc:	call   DWORD PTR ds:0x10066194
100481c2:	cmp    eax,edi
100481c4:	mov    DWORD PTR [esi+0xc],eax
100481c7:	jne    0x100481db
100481c9:	push   DWORD PTR [esi+0x10]
100481cc:	push   edi
100481cd:	push   DWORD PTR ds:0x1007fe38
100481d3:	call   DWORD PTR ds:0x10066188
100481d9:	jmp    0x10048176
100481db:	or     DWORD PTR [esi+0x8],0xffffffff
100481df:	mov    DWORD PTR [esi],edi
100481e1:	mov    DWORD PTR [esi+0x4],edi
100481e4:	inc    DWORD PTR ds:0x10082588
100481ea:	mov    eax,DWORD PTR [esi+0x10]
100481ed:	or     DWORD PTR [eax],0xffffffff
100481f0:	mov    eax,esi
100481f2:	pop    edi
100481f3:	pop    esi
100481f4:	ret    
100481f5:	push   ebp
100481f6:	mov    ebp,esp
100481f8:	push   ecx
100481f9:	push   ecx
100481fa:	mov    ecx,DWORD PTR [ebp+0x8]
100481fd:	mov    eax,DWORD PTR [ecx+0x8]
10048200:	push   ebx
10048201:	push   esi
10048202:	mov    esi,DWORD PTR [ecx+0x10]
10048205:	push   edi
10048206:	xor    ebx,ebx
10048208:	jmp    0x1004820d
1004820a:	add    eax,eax
1004820c:	inc    ebx
1004820d:	test   eax,eax
1004820f:	jge    0x1004820a
10048211:	mov    eax,ebx
10048213:	imul   eax,eax,0x204
10048219:	lea    eax,[eax+esi*1+0x144]
10048220:	push   0x3f
10048222:	mov    DWORD PTR [ebp-0x8],eax
10048225:	pop    edx
10048226:	mov    DWORD PTR [eax+0x8],eax
10048229:	mov    DWORD PTR [eax+0x4],eax
1004822c:	add    eax,0x8
1004822f:	dec    edx
10048230:	jne    0x10048226
10048232:	push   0x4
10048234:	mov    edi,ebx
10048236:	push   0x1000
1004823b:	shl    edi,0xf
1004823e:	add    edi,DWORD PTR [ecx+0xc]
10048241:	push   0x8000
10048246:	push   edi
10048247:	call   DWORD PTR ds:0x10066194
1004824d:	test   eax,eax
1004824f:	jne    0x10048259
10048251:	or     eax,0xffffffff
10048254:	jmp    0x100482f6
10048259:	lea    edx,[edi+0x7000]
1004825f:	cmp    edi,edx
10048261:	mov    DWORD PTR [ebp-0x4],edx
10048264:	ja     0x100482a9
10048266:	mov    ecx,edx
10048268:	sub    ecx,edi
1004826a:	shr    ecx,0xc
1004826d:	lea    eax,[edi+0x10]
10048270:	inc    ecx
10048271:	or     DWORD PTR [eax-0x8],0xffffffff
10048275:	or     DWORD PTR [eax+0xfec],0xffffffff
1004827c:	lea    edx,[eax+0xffc]
10048282:	mov    DWORD PTR [eax],edx
10048284:	lea    edx,[eax-0x1004]
1004828a:	mov    DWORD PTR [eax-0x4],0xff0
10048291:	mov    DWORD PTR [eax+0x4],edx
10048294:	mov    DWORD PTR [eax+0xfe8],0xff0
1004829e:	add    eax,0x1000
100482a3:	dec    ecx
100482a4:	jne    0x10048271
100482a6:	mov    edx,DWORD PTR [ebp-0x4]
100482a9:	mov    eax,DWORD PTR [ebp-0x8]
100482ac:	add    eax,0x1f8
100482b1:	lea    ecx,[edi+0xc]
100482b4:	mov    DWORD PTR [eax+0x4],ecx
100482b7:	mov    DWORD PTR [ecx+0x8],eax
100482ba:	lea    ecx,[edx+0xc]
100482bd:	mov    DWORD PTR [eax+0x8],ecx
100482c0:	mov    DWORD PTR [ecx+0x4],eax
100482c3:	and    DWORD PTR [esi+ebx*4+0x44],0x0
100482c8:	xor    edi,edi
100482ca:	inc    edi
100482cb:	mov    DWORD PTR [esi+ebx*4+0xc4],edi
100482d2:	mov    al,BYTE PTR [esi+0x43]
100482d5:	mov    cl,al
100482d7:	inc    cl
100482d9:	test   al,al
100482db:	mov    eax,DWORD PTR [ebp+0x8]
100482de:	mov    BYTE PTR [esi+0x43],cl
100482e1:	jne    0x100482e6
100482e3:	or     DWORD PTR [eax+0x4],edi
100482e6:	mov    edx,0x80000000
100482eb:	mov    ecx,ebx
100482ed:	shr    edx,cl
100482ef:	not    edx
100482f1:	and    DWORD PTR [eax+0x8],edx
100482f4:	mov    eax,ebx
100482f6:	pop    edi
100482f7:	pop    esi
100482f8:	pop    ebx
100482f9:	leave  
100482fa:	ret    
100482fb:	push   ebp
100482fc:	mov    ebp,esp
100482fe:	sub    esp,0xc
10048301:	mov    ecx,DWORD PTR [ebp+0x8]
10048304:	mov    eax,DWORD PTR [ecx+0x10]
10048307:	push   ebx
10048308:	push   esi
10048309:	mov    esi,DWORD PTR [ebp+0x10]
1004830c:	push   edi
1004830d:	mov    edi,DWORD PTR [ebp+0xc]
10048310:	mov    edx,edi
10048312:	sub    edx,DWORD PTR [ecx+0xc]
10048315:	add    esi,0x17
10048318:	shr    edx,0xf
1004831b:	mov    ecx,edx
1004831d:	imul   ecx,ecx,0x204
10048323:	lea    ecx,[ecx+eax*1+0x144]
1004832a:	mov    DWORD PTR [ebp-0xc],ecx
1004832d:	mov    ecx,DWORD PTR [edi-0x4]
10048330:	and    esi,0xfffffff0
10048333:	dec    ecx
10048334:	cmp    esi,ecx
10048336:	lea    edi,[ecx+edi*1-0x4]
1004833a:	mov    ebx,DWORD PTR [edi]
1004833c:	mov    DWORD PTR [ebp+0x10],ecx
1004833f:	mov    DWORD PTR [ebp-0x4],ebx
10048342:	jle    0x1004849d
10048348:	test   bl,0x1
1004834b:	jne    0x10048496
10048351:	add    ebx,ecx
10048353:	cmp    esi,ebx
10048355:	jg     0x10048496
1004835b:	mov    ecx,DWORD PTR [ebp-0x4]
1004835e:	sar    ecx,0x4
10048361:	dec    ecx
10048362:	cmp    ecx,0x3f
10048365:	mov    DWORD PTR [ebp-0x8],ecx
10048368:	jbe    0x10048370
1004836a:	push   0x3f
1004836c:	pop    ecx
1004836d:	mov    DWORD PTR [ebp-0x8],ecx
10048370:	mov    ebx,DWORD PTR [edi+0x4]
10048373:	cmp    ebx,DWORD PTR [edi+0x8]
10048376:	jne    0x100483bb
10048378:	cmp    ecx,0x20
1004837b:	mov    ebx,0x80000000
10048380:	jae    0x1004839c
10048382:	shr    ebx,cl
10048384:	mov    ecx,DWORD PTR [ebp-0x8]
10048387:	lea    ecx,[ecx+eax*1+0x4]
1004838b:	not    ebx
1004838d:	and    DWORD PTR [eax+edx*4+0x44],ebx
10048391:	dec    BYTE PTR [ecx]
10048393:	jne    0x100483bb
10048395:	mov    ecx,DWORD PTR [ebp+0x8]
10048398:	and    DWORD PTR [ecx],ebx
1004839a:	jmp    0x100483bb
1004839c:	add    ecx,0xffffffe0
1004839f:	shr    ebx,cl
100483a1:	mov    ecx,DWORD PTR [ebp-0x8]
100483a4:	lea    ecx,[ecx+eax*1+0x4]
100483a8:	not    ebx
100483aa:	and    DWORD PTR [eax+edx*4+0xc4],ebx
100483b1:	dec    BYTE PTR [ecx]
100483b3:	jne    0x100483bb
100483b5:	mov    ecx,DWORD PTR [ebp+0x8]
100483b8:	and    DWORD PTR [ecx+0x4],ebx
100483bb:	mov    ecx,DWORD PTR [edi+0x8]
100483be:	mov    ebx,DWORD PTR [edi+0x4]
100483c1:	mov    DWORD PTR [ecx+0x4],ebx
100483c4:	mov    ecx,DWORD PTR [edi+0x4]
100483c7:	mov    edi,DWORD PTR [edi+0x8]
100483ca:	mov    DWORD PTR [ecx+0x8],edi
100483cd:	mov    ecx,DWORD PTR [ebp+0x10]
100483d0:	sub    ecx,esi
100483d2:	add    DWORD PTR [ebp-0x4],ecx
100483d5:	cmp    DWORD PTR [ebp-0x4],0x0
100483d9:	jle    0x10048484
100483df:	mov    edi,DWORD PTR [ebp-0x4]
100483e2:	mov    ecx,DWORD PTR [ebp+0xc]
100483e5:	sar    edi,0x4
100483e8:	dec    edi
100483e9:	cmp    edi,0x3f
100483ec:	lea    ecx,[ecx+esi*1-0x4]
100483f0:	jbe    0x100483f5
100483f2:	push   0x3f
100483f4:	pop    edi
100483f5:	mov    ebx,DWORD PTR [ebp-0xc]
100483f8:	lea    ebx,[ebx+edi*8]
100483fb:	mov    DWORD PTR [ebp+0x10],ebx
100483fe:	mov    ebx,DWORD PTR [ebx+0x4]
10048401:	mov    DWORD PTR [ecx+0x4],ebx
10048404:	mov    ebx,DWORD PTR [ebp+0x10]
10048407:	mov    DWORD PTR [ecx+0x8],ebx
1004840a:	mov    DWORD PTR [ebx+0x4],ecx
1004840d:	mov    ebx,DWORD PTR [ecx+0x4]
10048410:	mov    DWORD PTR [ebx+0x8],ecx
10048413:	mov    ebx,DWORD PTR [ecx+0x4]
10048416:	cmp    ebx,DWORD PTR [ecx+0x8]
10048419:	jne    0x10048472
1004841b:	mov    cl,BYTE PTR [edi+eax*1+0x4]
1004841f:	mov    BYTE PTR [ebp+0x13],cl
10048422:	inc    cl
10048424:	cmp    edi,0x20
10048427:	mov    BYTE PTR [edi+eax*1+0x4],cl
1004842b:	jae    0x10048449
1004842d:	cmp    BYTE PTR [ebp+0x13],0x0
10048431:	jne    0x10048441
10048433:	mov    ecx,edi
10048435:	mov    ebx,0x80000000
1004843a:	shr    ebx,cl
1004843c:	mov    ecx,DWORD PTR [ebp+0x8]
1004843f:	or     DWORD PTR [ecx],ebx
10048441:	lea    eax,[eax+edx*4+0x44]
10048445:	mov    ecx,edi
10048447:	jmp    0x10048469
10048449:	cmp    BYTE PTR [ebp+0x13],0x0
1004844d:	jne    0x1004845f
1004844f:	lea    ecx,[edi-0x20]
10048452:	mov    ebx,0x80000000
10048457:	shr    ebx,cl
10048459:	mov    ecx,DWORD PTR [ebp+0x8]
1004845c:	or     DWORD PTR [ecx+0x4],ebx
1004845f:	lea    eax,[eax+edx*4+0xc4]
10048466:	lea    ecx,[edi-0x20]
10048469:	mov    edx,0x80000000
1004846e:	shr    edx,cl
10048470:	or     DWORD PTR [eax],edx
10048472:	mov    edx,DWORD PTR [ebp+0xc]
10048475:	mov    ecx,DWORD PTR [ebp-0x4]
10048478:	lea    eax,[edx+esi*1-0x4]
1004847c:	mov    DWORD PTR [eax],ecx
1004847e:	mov    DWORD PTR [ecx+eax*1-0x4],ecx
10048482:	jmp    0x10048487
10048484:	mov    edx,DWORD PTR [ebp+0xc]
10048487:	lea    eax,[esi+0x1]
1004848a:	mov    DWORD PTR [edx-0x4],eax
1004848d:	mov    DWORD PTR [edx+esi*1-0x8],eax
10048491:	jmp    0x100485d2
10048496:	xor    eax,eax
10048498:	jmp    0x100485d5
1004849d:	jge    0x100485d2
100484a3:	mov    ebx,DWORD PTR [ebp+0xc]
100484a6:	sub    DWORD PTR [ebp+0x10],esi
100484a9:	lea    ecx,[esi+0x1]
100484ac:	mov    DWORD PTR [ebx-0x4],ecx
100484af:	lea    ebx,[ebx+esi*1-0x4]
100484b3:	mov    esi,DWORD PTR [ebp+0x10]
100484b6:	sar    esi,0x4
100484b9:	dec    esi
100484ba:	cmp    esi,0x3f
100484bd:	mov    DWORD PTR [ebp+0xc],ebx
100484c0:	mov    DWORD PTR [ebx-0x4],ecx
100484c3:	jbe    0x100484c8
100484c5:	push   0x3f
100484c7:	pop    esi
100484c8:	test   BYTE PTR [ebp-0x4],0x1
100484cc:	jne    0x10048552
100484d2:	mov    esi,DWORD PTR [ebp-0x4]
100484d5:	sar    esi,0x4
100484d8:	dec    esi
100484d9:	cmp    esi,0x3f
100484dc:	jbe    0x100484e1
100484de:	push   0x3f
100484e0:	pop    esi
100484e1:	mov    ecx,DWORD PTR [edi+0x4]
100484e4:	cmp    ecx,DWORD PTR [edi+0x8]
100484e7:	jne    0x1004852b
100484e9:	cmp    esi,0x20
100484ec:	mov    ebx,0x80000000
100484f1:	jae    0x1004850c
100484f3:	mov    ecx,esi
100484f5:	shr    ebx,cl
100484f7:	lea    esi,[esi+eax*1+0x4]
100484fb:	not    ebx
100484fd:	and    DWORD PTR [eax+edx*4+0x44],ebx
10048501:	dec    BYTE PTR [esi]
10048503:	jne    0x10048528
10048505:	mov    ecx,DWORD PTR [ebp+0x8]
10048508:	and    DWORD PTR [ecx],ebx
1004850a:	jmp    0x10048528
1004850c:	lea    ecx,[esi-0x20]
1004850f:	shr    ebx,cl
10048511:	lea    ecx,[esi+eax*1+0x4]
10048515:	not    ebx
10048517:	and    DWORD PTR [eax+edx*4+0xc4],ebx
1004851e:	dec    BYTE PTR [ecx]
10048520:	jne    0x10048528
10048522:	mov    ecx,DWORD PTR [ebp+0x8]
10048525:	and    DWORD PTR [ecx+0x4],ebx
10048528:	mov    ebx,DWORD PTR [ebp+0xc]
1004852b:	mov    ecx,DWORD PTR [edi+0x8]
1004852e:	mov    esi,DWORD PTR [edi+0x4]
10048531:	mov    DWORD PTR [ecx+0x4],esi
10048534:	mov    esi,DWORD PTR [edi+0x8]
10048537:	mov    ecx,DWORD PTR [edi+0x4]
1004853a:	mov    DWORD PTR [ecx+0x8],esi
1004853d:	mov    esi,DWORD PTR [ebp+0x10]
10048540:	add    esi,DWORD PTR [ebp-0x4]
10048543:	mov    DWORD PTR [ebp+0x10],esi
10048546:	sar    esi,0x4
10048549:	dec    esi
1004854a:	cmp    esi,0x3f
1004854d:	jbe    0x10048552
1004854f:	push   0x3f
10048551:	pop    esi
10048552:	mov    ecx,DWORD PTR [ebp-0xc]
10048555:	lea    ecx,[ecx+esi*8]
10048558:	mov    edi,DWORD PTR [ecx+0x4]
1004855b:	mov    DWORD PTR [ebx+0x8],ecx
1004855e:	mov    DWORD PTR [ebx+0x4],edi
10048561:	mov    DWORD PTR [ecx+0x4],ebx
10048564:	mov    ecx,DWORD PTR [ebx+0x4]
10048567:	mov    DWORD PTR [ecx+0x8],ebx
1004856a:	mov    ecx,DWORD PTR [ebx+0x4]
1004856d:	cmp    ecx,DWORD PTR [ebx+0x8]
10048570:	jne    0x100485c9
10048572:	mov    cl,BYTE PTR [esi+eax*1+0x4]
10048576:	mov    BYTE PTR [ebp+0xf],cl
10048579:	inc    cl
1004857b:	cmp    esi,0x20
1004857e:	mov    BYTE PTR [esi+eax*1+0x4],cl
10048582:	jae    0x100485a0
10048584:	cmp    BYTE PTR [ebp+0xf],0x0
10048588:	jne    0x10048598
1004858a:	mov    ecx,esi
1004858c:	mov    edi,0x80000000
10048591:	shr    edi,cl
10048593:	mov    ecx,DWORD PTR [ebp+0x8]
10048596:	or     DWORD PTR [ecx],edi
10048598:	lea    eax,[eax+edx*4+0x44]
1004859c:	mov    ecx,esi
1004859e:	jmp    0x100485c0
100485a0:	cmp    BYTE PTR [ebp+0xf],0x0
100485a4:	jne    0x100485b6
100485a6:	lea    ecx,[esi-0x20]
100485a9:	mov    edi,0x80000000
100485ae:	shr    edi,cl
100485b0:	mov    ecx,DWORD PTR [ebp+0x8]
100485b3:	or     DWORD PTR [ecx+0x4],edi
100485b6:	lea    eax,[eax+edx*4+0xc4]
100485bd:	lea    ecx,[esi-0x20]
100485c0:	mov    edx,0x80000000
100485c5:	shr    edx,cl
100485c7:	or     DWORD PTR [eax],edx
100485c9:	mov    eax,DWORD PTR [ebp+0x10]
100485cc:	mov    DWORD PTR [ebx],eax
100485ce:	mov    DWORD PTR [eax+ebx*1-0x4],eax
100485d2:	xor    eax,eax
100485d4:	inc    eax
100485d5:	pop    edi
100485d6:	pop    esi
100485d7:	pop    ebx
100485d8:	leave  
100485d9:	ret    
100485da:	push   ebp
100485db:	mov    ebp,esp
100485dd:	sub    esp,0x14
100485e0:	mov    eax,ds:0x10082588
100485e5:	mov    ecx,DWORD PTR [ebp+0x8]
100485e8:	imul   eax,eax,0x14
100485eb:	add    eax,DWORD PTR ds:0x1008258c
100485f1:	add    ecx,0x17
100485f4:	and    ecx,0xfffffff0
100485f7:	mov    DWORD PTR [ebp-0x10],ecx
100485fa:	sar    ecx,0x4
100485fd:	push   ebx
100485fe:	dec    ecx
100485ff:	cmp    ecx,0x20
10048602:	push   esi
10048603:	push   edi
10048604:	jge    0x10048611
10048606:	or     esi,0xffffffff
10048609:	shr    esi,cl
1004860b:	or     DWORD PTR [ebp-0x8],0xffffffff
1004860f:	jmp    0x1004861e
10048611:	add    ecx,0xffffffe0
10048614:	or     edx,0xffffffff
10048617:	xor    esi,esi
10048619:	shr    edx,cl
1004861b:	mov    DWORD PTR [ebp-0x8],edx
1004861e:	mov    ecx,DWORD PTR ds:0x10082594
10048624:	mov    ebx,ecx
10048626:	jmp    0x10048639
10048628:	mov    edx,DWORD PTR [ebx+0x4]
1004862b:	mov    edi,DWORD PTR [ebx]
1004862d:	and    edx,DWORD PTR [ebp-0x8]
10048630:	and    edi,esi
10048632:	or     edx,edi
10048634:	jne    0x10048640
10048636:	add    ebx,0x14
10048639:	cmp    ebx,eax
1004863b:	mov    DWORD PTR [ebp+0x8],ebx
1004863e:	jb     0x10048628
10048640:	cmp    ebx,eax
10048642:	jne    0x100486c3
10048644:	mov    ebx,DWORD PTR ds:0x1008258c
1004864a:	jmp    0x1004865d
1004864c:	mov    edx,DWORD PTR [ebx+0x4]
1004864f:	mov    edi,DWORD PTR [ebx]
10048651:	and    edx,DWORD PTR [ebp-0x8]
10048654:	and    edi,esi
10048656:	or     edx,edi
10048658:	jne    0x10048664
1004865a:	add    ebx,0x14
1004865d:	cmp    ebx,ecx
1004865f:	mov    DWORD PTR [ebp+0x8],ebx
10048662:	jb     0x1004864c
10048664:	cmp    ebx,ecx
10048666:	jne    0x100486c3
10048668:	jmp    0x10048676
1004866a:	cmp    DWORD PTR [ebx+0x8],0x0
1004866e:	jne    0x1004867a
10048670:	add    ebx,0x14
10048673:	mov    DWORD PTR [ebp+0x8],ebx
10048676:	cmp    ebx,eax
10048678:	jb     0x1004866a
1004867a:	cmp    ebx,eax
1004867c:	jne    0x100486af
1004867e:	mov    ebx,DWORD PTR ds:0x1008258c
10048684:	jmp    0x1004868f
10048686:	cmp    DWORD PTR [ebx+0x8],0x0
1004868a:	jne    0x10048696
1004868c:	add    ebx,0x14
1004868f:	cmp    ebx,ecx
10048691:	mov    DWORD PTR [ebp+0x8],ebx
10048694:	jb     0x10048686
10048696:	cmp    ebx,ecx
10048698:	jne    0x100486af
1004869a:	call   0x10048145
1004869f:	mov    ebx,eax
100486a1:	test   ebx,ebx
100486a3:	mov    DWORD PTR [ebp+0x8],ebx
100486a6:	jne    0x100486af
100486a8:	xor    eax,eax
100486aa:	jmp    0x100488b8
100486af:	push   ebx
100486b0:	call   0x100481f5
100486b5:	pop    ecx
100486b6:	mov    ecx,DWORD PTR [ebx+0x10]
100486b9:	mov    DWORD PTR [ecx],eax
100486bb:	mov    eax,DWORD PTR [ebx+0x10]
100486be:	cmp    DWORD PTR [eax],0xffffffff
100486c1:	je     0x100486a8
100486c3:	mov    DWORD PTR ds:0x10082594,ebx
100486c9:	mov    eax,DWORD PTR [ebx+0x10]
100486cc:	mov    edx,DWORD PTR [eax]
100486ce:	cmp    edx,0xffffffff
100486d1:	mov    DWORD PTR [ebp-0x4],edx
100486d4:	je     0x100486ea
100486d6:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
100486dd:	mov    edi,DWORD PTR [eax+edx*4+0x44]
100486e1:	and    ecx,DWORD PTR [ebp-0x8]
100486e4:	and    edi,esi
100486e6:	or     ecx,edi
100486e8:	jne    0x10048713
100486ea:	and    DWORD PTR [ebp-0x4],0x0
100486ee:	mov    edx,DWORD PTR [eax+0xc4]
100486f4:	lea    ecx,[eax+0x44]
100486f7:	mov    edi,DWORD PTR [ecx]
100486f9:	and    edx,DWORD PTR [ebp-0x8]
100486fc:	and    edi,esi
100486fe:	or     edx,edi
10048700:	jne    0x10048710
10048702:	inc    DWORD PTR [ebp-0x4]
10048705:	mov    edx,DWORD PTR [ecx+0x84]
1004870b:	add    ecx,0x4
1004870e:	jmp    0x100486f7
10048710:	mov    edx,DWORD PTR [ebp-0x4]
10048713:	mov    ecx,edx
10048715:	imul   ecx,ecx,0x204
1004871b:	lea    ecx,[ecx+eax*1+0x144]
10048722:	mov    DWORD PTR [ebp-0xc],ecx
10048725:	mov    ecx,DWORD PTR [eax+edx*4+0x44]
10048729:	xor    edi,edi
1004872b:	and    ecx,esi
1004872d:	jne    0x10048741
1004872f:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
10048736:	and    ecx,DWORD PTR [ebp-0x8]
10048739:	push   0x20
1004873b:	pop    edi
1004873c:	jmp    0x10048741
1004873e:	add    ecx,ecx
10048740:	inc    edi
10048741:	test   ecx,ecx
10048743:	jge    0x1004873e
10048745:	mov    ecx,DWORD PTR [ebp-0xc]
10048748:	mov    edx,DWORD PTR [ecx+edi*8+0x4]
1004874c:	mov    ecx,DWORD PTR [edx]
1004874e:	sub    ecx,DWORD PTR [ebp-0x10]
10048751:	mov    esi,ecx
10048753:	sar    esi,0x4
10048756:	dec    esi
10048757:	cmp    esi,0x3f
1004875a:	mov    DWORD PTR [ebp-0x8],ecx
1004875d:	jle    0x10048762
1004875f:	push   0x3f
10048761:	pop    esi
10048762:	cmp    esi,edi
10048764:	je     0x1004886b
1004876a:	mov    ecx,DWORD PTR [edx+0x4]
1004876d:	cmp    ecx,DWORD PTR [edx+0x8]
10048770:	jne    0x100487ce
10048772:	cmp    edi,0x20
10048775:	mov    ebx,0x80000000
1004877a:	jge    0x100487a2
1004877c:	mov    ecx,edi
1004877e:	shr    ebx,cl
10048780:	mov    ecx,DWORD PTR [ebp-0x4]
10048783:	lea    edi,[eax+edi*1+0x4]
10048787:	not    ebx
10048789:	mov    DWORD PTR [ebp-0x14],ebx
1004878c:	and    ebx,DWORD PTR [eax+ecx*4+0x44]
10048790:	mov    DWORD PTR [eax+ecx*4+0x44],ebx
10048794:	dec    BYTE PTR [edi]
10048796:	jne    0x100487cb
10048798:	mov    ecx,DWORD PTR [ebp-0x14]
1004879b:	mov    ebx,DWORD PTR [ebp+0x8]
1004879e:	and    DWORD PTR [ebx],ecx
100487a0:	jmp    0x100487ce
100487a2:	lea    ecx,[edi-0x20]
100487a5:	shr    ebx,cl
100487a7:	mov    ecx,DWORD PTR [ebp-0x4]
100487aa:	lea    ecx,[eax+ecx*4+0xc4]
100487b1:	lea    edi,[eax+edi*1+0x4]
100487b5:	not    ebx
100487b7:	and    DWORD PTR [ecx],ebx
100487b9:	dec    BYTE PTR [edi]
100487bb:	mov    DWORD PTR [ebp-0x14],ebx
100487be:	jne    0x100487cb
100487c0:	mov    ebx,DWORD PTR [ebp+0x8]
100487c3:	mov    ecx,DWORD PTR [ebp-0x14]
100487c6:	and    DWORD PTR [ebx+0x4],ecx
100487c9:	jmp    0x100487ce
100487cb:	mov    ebx,DWORD PTR [ebp+0x8]
100487ce:	cmp    DWORD PTR [ebp-0x8],0x0
100487d2:	mov    ecx,DWORD PTR [edx+0x8]
100487d5:	mov    edi,DWORD PTR [edx+0x4]
100487d8:	mov    DWORD PTR [ecx+0x4],edi
100487db:	mov    ecx,DWORD PTR [edx+0x4]
100487de:	mov    edi,DWORD PTR [edx+0x8]
100487e1:	mov    DWORD PTR [ecx+0x8],edi
100487e4:	je     0x10048877
100487ea:	mov    ecx,DWORD PTR [ebp-0xc]
100487ed:	lea    ecx,[ecx+esi*8]
100487f0:	mov    edi,DWORD PTR [ecx+0x4]
100487f3:	mov    DWORD PTR [edx+0x8],ecx
100487f6:	mov    DWORD PTR [edx+0x4],edi
100487f9:	mov    DWORD PTR [ecx+0x4],edx
100487fc:	mov    ecx,DWORD PTR [edx+0x4]
100487ff:	mov    DWORD PTR [ecx+0x8],edx
10048802:	mov    ecx,DWORD PTR [edx+0x4]
10048805:	cmp    ecx,DWORD PTR [edx+0x8]
10048808:	jne    0x10048868
1004880a:	mov    cl,BYTE PTR [esi+eax*1+0x4]
1004880e:	mov    BYTE PTR [ebp+0xb],cl
10048811:	inc    cl
10048813:	cmp    esi,0x20
10048816:	mov    BYTE PTR [esi+eax*1+0x4],cl
1004881a:	jge    0x1004883f
1004881c:	cmp    BYTE PTR [ebp+0xb],0x0
10048820:	jne    0x1004882d
10048822:	mov    edi,0x80000000
10048827:	mov    ecx,esi
10048829:	shr    edi,cl
1004882b:	or     DWORD PTR [ebx],edi
1004882d:	mov    ecx,esi
1004882f:	mov    edi,0x80000000
10048834:	shr    edi,cl
10048836:	mov    ecx,DWORD PTR [ebp-0x4]
10048839:	or     DWORD PTR [eax+ecx*4+0x44],edi
1004883d:	jmp    0x10048868
1004883f:	cmp    BYTE PTR [ebp+0xb],0x0
10048843:	jne    0x10048852
10048845:	lea    ecx,[esi-0x20]
10048848:	mov    edi,0x80000000
1004884d:	shr    edi,cl
1004884f:	or     DWORD PTR [ebx+0x4],edi
10048852:	mov    ecx,DWORD PTR [ebp-0x4]
10048855:	lea    edi,[eax+ecx*4+0xc4]
1004885c:	lea    ecx,[esi-0x20]
1004885f:	mov    esi,0x80000000
10048864:	shr    esi,cl
10048866:	or     DWORD PTR [edi],esi
10048868:	mov    ecx,DWORD PTR [ebp-0x8]
1004886b:	test   ecx,ecx
1004886d:	je     0x1004887a
1004886f:	mov    DWORD PTR [edx],ecx
10048871:	mov    DWORD PTR [ecx+edx*1-0x4],ecx
10048875:	jmp    0x1004887a
10048877:	mov    ecx,DWORD PTR [ebp-0x8]
1004887a:	mov    esi,DWORD PTR [ebp-0x10]
1004887d:	add    edx,ecx
1004887f:	lea    ecx,[esi+0x1]
10048882:	mov    DWORD PTR [edx],ecx
10048884:	mov    DWORD PTR [edx+esi*1-0x4],ecx
10048888:	mov    esi,DWORD PTR [ebp-0xc]
1004888b:	mov    ecx,DWORD PTR [esi]
1004888d:	test   ecx,ecx
1004888f:	lea    edi,[ecx+0x1]
10048892:	mov    DWORD PTR [esi],edi
10048894:	jne    0x100488b0
10048896:	cmp    ebx,DWORD PTR ds:0x1007ff90
1004889c:	jne    0x100488b0
1004889e:	mov    ecx,DWORD PTR [ebp-0x4]
100488a1:	cmp    ecx,DWORD PTR ds:0x1008259c
100488a7:	jne    0x100488b0
100488a9:	and    DWORD PTR ds:0x1007ff90,0x0
100488b0:	mov    ecx,DWORD PTR [ebp-0x4]
100488b3:	mov    DWORD PTR [eax],ecx
100488b5:	lea    eax,[edx+0x4]
100488b8:	pop    edi
100488b9:	pop    esi
100488ba:	pop    ebx
100488bb:	leave  
100488bc:	ret    
100488bd:	push   ebp
100488be:	mov    ebp,esp
100488c0:	push   ecx
100488c1:	push   esi
100488c2:	mov    esi,DWORD PTR [ebp+0xc]
100488c5:	push   esi
100488c6:	call   0x1004d25c
100488cb:	mov    DWORD PTR [ebp+0xc],eax
100488ce:	mov    eax,DWORD PTR [esi+0xc]
100488d1:	test   al,0x82
100488d3:	pop    ecx
100488d4:	jne    0x100488ed
100488d6:	call   0x10046c45
100488db:	mov    DWORD PTR [eax],0x9
100488e1:	or     DWORD PTR [esi+0xc],0x20
100488e5:	or     eax,0xffffffff
100488e8:	jmp    0x10048a1a
100488ed:	test   al,0x40
100488ef:	je     0x100488fe
100488f1:	call   0x10046c45
100488f6:	mov    DWORD PTR [eax],0x22
100488fc:	jmp    0x100488e1
100488fe:	push   ebx
100488ff:	xor    ebx,ebx
10048901:	test   al,0x1
10048903:	je     0x1004891b
10048905:	test   al,0x10
10048907:	mov    DWORD PTR [esi+0x4],ebx
1004890a:	je     0x10048995
10048910:	mov    ecx,DWORD PTR [esi+0x8]
10048913:	and    eax,0xfffffffe
10048916:	mov    DWORD PTR [esi],ecx
10048918:	mov    DWORD PTR [esi+0xc],eax
1004891b:	mov    eax,DWORD PTR [esi+0xc]
1004891e:	and    eax,0xffffffef
10048921:	or     eax,0x2
10048924:	test   ax,0x10c
10048928:	mov    DWORD PTR [esi+0xc],eax
1004892b:	mov    DWORD PTR [esi+0x4],ebx
1004892e:	mov    DWORD PTR [ebp-0x4],ebx
10048931:	jne    0x1004895f
10048933:	call   0x1004d0e1
10048938:	add    eax,0x20
1004893b:	cmp    esi,eax
1004893d:	je     0x1004894b
1004893f:	call   0x1004d0e1
10048944:	add    eax,0x40
10048947:	cmp    esi,eax
10048949:	jne    0x10048958
1004894b:	push   DWORD PTR [ebp+0xc]
1004894e:	call   0x1004d083
10048953:	test   eax,eax
10048955:	pop    ecx
10048956:	jne    0x1004895f
10048958:	push   esi
10048959:	call   0x1004d03f
1004895e:	pop    ecx
1004895f:	test   WORD PTR [esi+0xc],0x108
10048965:	push   edi
10048966:	je     0x100489ec
1004896c:	mov    eax,DWORD PTR [esi+0x8]
1004896f:	mov    edi,DWORD PTR [esi]
10048971:	lea    ecx,[eax+0x1]
10048974:	mov    DWORD PTR [esi],ecx
10048976:	mov    ecx,DWORD PTR [esi+0x18]
10048979:	sub    edi,eax
1004897b:	dec    ecx
1004897c:	cmp    edi,ebx
1004897e:	mov    DWORD PTR [esi+0x4],ecx
10048981:	jle    0x100489a0
10048983:	push   edi
10048984:	push   eax
10048985:	push   DWORD PTR [ebp+0xc]
10048988:	call   0x1004cf63
1004898d:	add    esp,0xc
10048990:	mov    DWORD PTR [ebp-0x4],eax
10048993:	jmp    0x100489e2
10048995:	or     eax,0x20
10048998:	mov    DWORD PTR [esi+0xc],eax
1004899b:	or     eax,0xffffffff
1004899e:	jmp    0x10048a19
100489a0:	mov    ecx,DWORD PTR [ebp+0xc]
100489a3:	cmp    ecx,0xffffffff
100489a6:	je     0x100489c3
100489a8:	cmp    ecx,0xfffffffe
100489ab:	je     0x100489c3
100489ad:	mov    eax,ecx
100489af:	and    eax,0x1f
100489b2:	imul   eax,eax,0x28
100489b5:	mov    edx,ecx
100489b7:	sar    edx,0x5
100489ba:	add    eax,DWORD PTR [edx*4+0x10082480]
100489c1:	jmp    0x100489c8
100489c3:	mov    eax,0x1007e9d0
100489c8:	test   BYTE PTR [eax+0x4],0x20
100489cc:	je     0x100489e2
100489ce:	push   0x2
100489d0:	push   ebx
100489d1:	push   ebx
100489d2:	push   ecx
100489d3:	call   0x1004c884
100489d8:	and    eax,edx
100489da:	add    esp,0x10
100489dd:	cmp    eax,0xffffffff
100489e0:	je     0x10048a07
100489e2:	mov    eax,DWORD PTR [esi+0x8]
100489e5:	mov    cl,BYTE PTR [ebp+0x8]
100489e8:	mov    BYTE PTR [eax],cl
100489ea:	jmp    0x10048a02
100489ec:	xor    edi,edi
100489ee:	inc    edi
100489ef:	push   edi
100489f0:	lea    eax,[ebp+0x8]
100489f3:	push   eax
100489f4:	push   DWORD PTR [ebp+0xc]
100489f7:	call   0x1004cf63
100489fc:	add    esp,0xc
100489ff:	mov    DWORD PTR [ebp-0x4],eax
10048a02:	cmp    DWORD PTR [ebp-0x4],edi
10048a05:	je     0x10048a10
10048a07:	or     DWORD PTR [esi+0xc],0x20
10048a0b:	or     eax,0xffffffff
10048a0e:	jmp    0x10048a18
10048a10:	mov    eax,DWORD PTR [ebp+0x8]
10048a13:	and    eax,0xff
10048a18:	pop    edi
10048a19:	pop    ebx
10048a1a:	pop    esi
10048a1b:	leave  
10048a1c:	ret    
10048a1d:	test   BYTE PTR [edi+0xc],0x40
10048a21:	push   ebx
10048a22:	push   esi
10048a23:	mov    esi,eax
10048a25:	mov    ebx,ecx
10048a27:	je     0x10048a62
10048a29:	cmp    DWORD PTR [edi+0x8],0x0
10048a2d:	jne    0x10048a62
10048a2f:	mov    eax,DWORD PTR [esp+0xc]
10048a33:	add    DWORD PTR [esi],eax
10048a35:	jmp    0x10048a69
10048a37:	movzx  eax,WORD PTR [ebx]
10048a3a:	dec    DWORD PTR [esp+0xc]
10048a3e:	push   eax
10048a3f:	mov    eax,edi
10048a41:	call   0x10049380
10048a46:	inc    ebx
10048a47:	inc    ebx
10048a48:	cmp    DWORD PTR [esi],0xffffffff
10048a4b:	pop    ecx
10048a4c:	jne    0x10048a62
10048a4e:	call   0x10046c45
10048a53:	cmp    DWORD PTR [eax],0x2a
10048a56:	jne    0x10048a69
10048a58:	push   0x3f
10048a5a:	mov    eax,edi
10048a5c:	call   0x10049380
10048a61:	pop    ecx
10048a62:	cmp    DWORD PTR [esp+0xc],0x0
10048a67:	jg     0x10048a37
10048a69:	pop    esi
10048a6a:	pop    ebx
10048a6b:	ret    
10048a6c:	push   ebp
10048a6d:	lea    ebp,[esp-0x3f4]
10048a74:	sub    esp,0x474
10048a7a:	mov    eax,ds:0x1007e030
10048a7f:	xor    eax,ebp
10048a81:	mov    DWORD PTR [ebp+0x3f0],eax
10048a87:	mov    eax,DWORD PTR [ebp+0x3fc]
10048a8d:	push   ebx
10048a8e:	mov    ebx,DWORD PTR [ebp+0x408]
10048a94:	push   esi
10048a95:	mov    esi,DWORD PTR [ebp+0x400]
10048a9b:	push   edi
10048a9c:	push   DWORD PTR [ebp+0x404]
10048aa2:	xor    edi,edi
10048aa4:	lea    ecx,[ebp-0x64]
10048aa7:	mov    DWORD PTR [ebp-0x3c],eax
10048aaa:	mov    DWORD PTR [ebp-0x28],ebx
10048aad:	mov    DWORD PTR [ebp-0x54],edi
10048ab0:	mov    DWORD PTR [ebp-0x14],edi
10048ab3:	mov    DWORD PTR [ebp-0x38],edi
10048ab6:	mov    DWORD PTR [ebp-0x18],edi
10048ab9:	mov    DWORD PTR [ebp-0x30],edi
10048abc:	mov    DWORD PTR [ebp-0x48],edi
10048abf:	mov    DWORD PTR [ebp-0x34],edi
10048ac2:	call   0x100455d5
10048ac7:	cmp    DWORD PTR [ebp-0x3c],edi
10048aca:	jne    0x10048af9
10048acc:	call   0x10046c45
10048ad1:	push   edi
10048ad2:	push   edi
10048ad3:	push   edi
10048ad4:	push   edi
10048ad5:	mov    DWORD PTR [eax],0x16
10048adb:	push   edi
10048adc:	call   0x1004347c
10048ae1:	add    esp,0x14
10048ae4:	cmp    BYTE PTR [ebp-0x58],0x0
10048ae8:	je     0x10048af1
10048aea:	mov    eax,DWORD PTR [ebp-0x5c]
10048aed:	and    DWORD PTR [eax+0x70],0xfffffffd
10048af1:	or     eax,0xffffffff
10048af4:	jmp    0x10049345
10048af9:	cmp    esi,edi
10048afb:	je     0x10048acc
10048afd:	movzx  edx,WORD PTR [esi]
10048b00:	xor    ecx,ecx
10048b02:	cmp    dx,di
10048b05:	mov    DWORD PTR [ebp-0x2c],edi
10048b08:	mov    DWORD PTR [ebp-0x20],edi
10048b0b:	mov    DWORD PTR [ebp-0x50],edi
10048b0e:	mov    DWORD PTR [ebp-0x24],edx
10048b11:	je     0x10049335
10048b17:	push   0x2
10048b19:	pop    edi
10048b1a:	add    esi,edi
10048b1c:	cmp    DWORD PTR [ebp-0x2c],0x0
10048b20:	mov    DWORD PTR [ebp-0x4c],esi
10048b23:	jl     0x10049335
10048b29:	lea    eax,[edx-0x20]
10048b2c:	cmp    ax,0x58
10048b30:	ja     0x10048b41
10048b32:	movzx  eax,dx
10048b35:	movzx  eax,BYTE PTR [eax+0x100673f8]
10048b3c:	and    eax,0xf
10048b3f:	jmp    0x10048b43
10048b41:	xor    eax,eax
10048b43:	movsx  eax,BYTE PTR [ecx+eax*8+0x10067418]
10048b4b:	push   0x7
10048b4d:	sar    eax,0x4
10048b50:	pop    ecx
10048b51:	cmp    eax,ecx
10048b53:	mov    DWORD PTR [ebp-0x68],eax
10048b56:	ja     0x10049303
10048b5c:	jmp    DWORD PTR [eax*4+0x10049360]
10048b63:	xor    eax,eax
10048b65:	or     DWORD PTR [ebp-0x18],0xffffffff
10048b69:	mov    DWORD PTR [ebp-0x6c],eax
10048b6c:	mov    DWORD PTR [ebp-0x48],eax
10048b6f:	mov    DWORD PTR [ebp-0x38],eax
10048b72:	mov    DWORD PTR [ebp-0x30],eax
10048b75:	mov    DWORD PTR [ebp-0x14],eax
10048b78:	mov    DWORD PTR [ebp-0x34],eax
10048b7b:	jmp    0x10049303
10048b80:	movzx  eax,dx
10048b83:	sub    eax,0x20
10048b86:	je     0x10048bc6
10048b88:	sub    eax,0x3
10048b8b:	je     0x10048bba
10048b8d:	sub    eax,0x8
10048b90:	je     0x10048bb1
10048b92:	sub    eax,edi
10048b94:	je     0x10048ba8
10048b96:	sub    eax,0x3
10048b99:	jne    0x10049303
10048b9f:	or     DWORD PTR [ebp-0x14],0x8
10048ba3:	jmp    0x10049303
10048ba8:	or     DWORD PTR [ebp-0x14],0x4
10048bac:	jmp    0x10049303
10048bb1:	or     DWORD PTR [ebp-0x14],0x1
10048bb5:	jmp    0x10049303
10048bba:	or     DWORD PTR [ebp-0x14],0x80
10048bc1:	jmp    0x10049303
10048bc6:	or     DWORD PTR [ebp-0x14],edi
10048bc9:	jmp    0x10049303
10048bce:	cmp    dx,0x2a
10048bd2:	jne    0x10048bf4
10048bd4:	add    ebx,0x4
10048bd7:	mov    DWORD PTR [ebp-0x28],ebx
10048bda:	mov    ebx,DWORD PTR [ebx-0x4]
10048bdd:	test   ebx,ebx
10048bdf:	mov    DWORD PTR [ebp-0x38],ebx
10048be2:	jge    0x10049303
10048be8:	or     DWORD PTR [ebp-0x14],0x4
10048bec:	neg    DWORD PTR [ebp-0x38]
10048bef:	jmp    0x10049303
10048bf4:	mov    eax,DWORD PTR [ebp-0x38]
10048bf7:	imul   eax,eax,0xa
10048bfa:	movzx  ecx,dx
10048bfd:	lea    eax,[eax+ecx*1-0x30]
10048c01:	mov    DWORD PTR [ebp-0x38],eax
10048c04:	jmp    0x10049303
10048c09:	and    DWORD PTR [ebp-0x18],0x0
10048c0d:	jmp    0x10049303
10048c12:	cmp    dx,0x2a
10048c16:	jne    0x10048c35
10048c18:	add    ebx,0x4
10048c1b:	mov    DWORD PTR [ebp-0x28],ebx
10048c1e:	mov    ebx,DWORD PTR [ebx-0x4]
10048c21:	test   ebx,ebx
10048c23:	mov    DWORD PTR [ebp-0x18],ebx
10048c26:	jge    0x10049303
10048c2c:	or     DWORD PTR [ebp-0x18],0xffffffff
10048c30:	jmp    0x10049303
10048c35:	mov    eax,DWORD PTR [ebp-0x18]
10048c38:	imul   eax,eax,0xa
10048c3b:	movzx  ecx,dx
10048c3e:	lea    eax,[eax+ecx*1-0x30]
10048c42:	mov    DWORD PTR [ebp-0x18],eax
10048c45:	jmp    0x10049303
10048c4a:	movzx  eax,dx
10048c4d:	cmp    eax,0x49
10048c50:	je     0x10048c9a
10048c52:	cmp    eax,0x68
10048c55:	je     0x10048c91
10048c57:	cmp    eax,0x6c
10048c5a:	je     0x10048c71
10048c5c:	cmp    eax,0x77
10048c5f:	jne    0x10049303
10048c65:	or     DWORD PTR [ebp-0x14],0x800
10048c6c:	jmp    0x10049303
10048c71:	cmp    WORD PTR [esi],0x6c
10048c75:	jne    0x10048c88
10048c77:	add    esi,edi
10048c79:	or     DWORD PTR [ebp-0x14],0x1000
10048c80:	mov    DWORD PTR [ebp-0x4c],esi
10048c83:	jmp    0x10049303
10048c88:	or     DWORD PTR [ebp-0x14],0x10
10048c8c:	jmp    0x10049303
10048c91:	or     DWORD PTR [ebp-0x14],0x20
10048c95:	jmp    0x10049303
10048c9a:	movzx  eax,WORD PTR [esi]
10048c9d:	cmp    ax,0x36
10048ca1:	jne    0x10048cbc
10048ca3:	cmp    WORD PTR [esi+0x2],0x34
10048ca8:	jne    0x10048cbc
10048caa:	add    esi,0x4
10048cad:	or     DWORD PTR [ebp-0x14],0x8000
10048cb4:	mov    DWORD PTR [ebp-0x4c],esi
10048cb7:	jmp    0x10049303
10048cbc:	cmp    ax,0x33
10048cc0:	jne    0x10048cdb
10048cc2:	cmp    WORD PTR [esi+0x2],0x32
10048cc7:	jne    0x10048cdb
10048cc9:	add    esi,0x4
10048ccc:	and    DWORD PTR [ebp-0x14],0xffff7fff
10048cd3:	mov    DWORD PTR [ebp-0x4c],esi
10048cd6:	jmp    0x10049303
10048cdb:	cmp    ax,0x64
10048cdf:	je     0x10049303
10048ce5:	cmp    ax,0x69
10048ce9:	je     0x10049303
10048cef:	cmp    ax,0x6f
10048cf3:	je     0x10049303
10048cf9:	cmp    ax,0x75
10048cfd:	je     0x10049303
10048d03:	cmp    ax,0x78
10048d07:	je     0x10049303
10048d0d:	cmp    ax,0x58
10048d11:	je     0x10049303
10048d17:	and    DWORD PTR [ebp-0x68],0x0
10048d1b:	mov    eax,DWORD PTR [ebp-0x3c]
10048d1e:	push   edx
10048d1f:	lea    esi,[ebp-0x2c]
10048d22:	mov    DWORD PTR [ebp-0x34],0x1
10048d29:	call   0x10049380
10048d2e:	jmp    0x10049302
10048d33:	movzx  eax,dx
10048d36:	cmp    eax,0x64
10048d39:	jg     0x10048ee6
10048d3f:	je     0x10048f65
10048d45:	cmp    eax,0x53
10048d48:	jg     0x10048e25
10048d4e:	je     0x10048daf
10048d50:	sub    eax,0x41
10048d53:	je     0x10048d65
10048d55:	sub    eax,edi
10048d57:	je     0x10048d9a
10048d59:	sub    eax,edi
10048d5b:	je     0x10048d65
10048d5d:	sub    eax,edi
10048d5f:	jne    0x100491e7
10048d65:	add    edx,0x20
10048d68:	mov    DWORD PTR [ebp-0x6c],0x1
10048d6f:	mov    DWORD PTR [ebp-0x24],edx
10048d72:	or     DWORD PTR [ebp-0x14],0x40
10048d76:	cmp    DWORD PTR [ebp-0x18],0x0
10048d7a:	lea    esi,[ebp-0x10]
10048d7d:	mov    eax,0x200
10048d82:	mov    DWORD PTR [ebp-0x1c],esi
10048d85:	mov    DWORD PTR [ebp-0x20],eax
10048d88:	jge    0x10048f89
10048d8e:	mov    DWORD PTR [ebp-0x18],0x6
10048d95:	jmp    0x10048fd6
10048d9a:	test   WORD PTR [ebp-0x14],0x830
10048da0:	jne    0x10048e42
10048da6:	or     DWORD PTR [ebp-0x14],0x20
10048daa:	jmp    0x10048e42
10048daf:	test   WORD PTR [ebp-0x14],0x830
10048db5:	jne    0x10048dbb
10048db7:	or     DWORD PTR [ebp-0x14],0x20
10048dbb:	mov    edi,DWORD PTR [ebp-0x18]
10048dbe:	cmp    edi,0xffffffff
10048dc1:	jne    0x10048dc8
10048dc3:	mov    edi,0x7fffffff
10048dc8:	add    ebx,0x4
10048dcb:	test   BYTE PTR [ebp-0x14],0x20
10048dcf:	mov    DWORD PTR [ebp-0x28],ebx
10048dd2:	mov    ebx,DWORD PTR [ebx-0x4]
10048dd5:	mov    DWORD PTR [ebp-0x1c],ebx
10048dd8:	je     0x100491ba
10048dde:	test   ebx,ebx
10048de0:	jne    0x10048dea
10048de2:	mov    eax,ds:0x1007ed28
10048de7:	mov    DWORD PTR [ebp-0x1c],eax
10048dea:	and    DWORD PTR [ebp-0x20],0x0
10048dee:	test   edi,edi
10048df0:	mov    esi,DWORD PTR [ebp-0x1c]
10048df3:	jle    0x100491e7
10048df9:	mov    al,BYTE PTR [esi]
10048dfb:	test   al,al
10048dfd:	je     0x100491e7
10048e03:	lea    ecx,[ebp-0x64]
10048e06:	movzx  eax,al
10048e09:	push   ecx
10048e0a:	push   eax
10048e0b:	call   0x1004b3af
10048e10:	test   eax,eax
10048e12:	pop    ecx
10048e13:	pop    ecx
10048e14:	je     0x10048e17
10048e16:	inc    esi
10048e17:	inc    esi
10048e18:	inc    DWORD PTR [ebp-0x20]
10048e1b:	cmp    DWORD PTR [ebp-0x20],edi
10048e1e:	jl     0x10048df9
10048e20:	jmp    0x100491e7
10048e25:	sub    eax,0x58
10048e28:	je     0x10049071
10048e2e:	sub    eax,edi
10048e30:	je     0x10048e99
10048e32:	sub    eax,ecx
10048e34:	je     0x10048d72
10048e3a:	sub    eax,edi
10048e3c:	jne    0x100491e7
10048e42:	movzx  eax,WORD PTR [ebx]
10048e45:	add    ebx,0x4
10048e48:	xor    esi,esi
10048e4a:	inc    esi
10048e4b:	test   BYTE PTR [ebp-0x14],0x20
10048e4f:	mov    DWORD PTR [ebp-0x34],esi
10048e52:	mov    DWORD PTR [ebp-0x28],ebx
10048e55:	mov    DWORD PTR [ebp-0x70],eax
10048e58:	je     0x10048e87
10048e5a:	mov    BYTE PTR [ebp-0x40],al
10048e5d:	lea    eax,[ebp-0x64]
10048e60:	push   eax
10048e61:	mov    eax,DWORD PTR [ebp-0x64]
10048e64:	mov    BYTE PTR [ebp-0x3f],0x0
10048e68:	push   DWORD PTR [eax+0xac]
10048e6e:	lea    eax,[ebp-0x40]
10048e71:	push   eax
10048e72:	lea    eax,[ebp-0x10]
10048e75:	push   eax
10048e76:	call   0x1004de15
10048e7b:	add    esp,0x10
10048e7e:	test   eax,eax
10048e80:	jge    0x10048e8b
10048e82:	mov    DWORD PTR [ebp-0x48],esi
10048e85:	jmp    0x10048e8b
10048e87:	mov    WORD PTR [ebp-0x10],ax
10048e8b:	lea    eax,[ebp-0x10]
10048e8e:	mov    DWORD PTR [ebp-0x1c],eax
10048e91:	mov    DWORD PTR [ebp-0x20],esi
10048e94:	jmp    0x100491e7
10048e99:	mov    eax,DWORD PTR [ebx]
10048e9b:	add    ebx,0x4
10048e9e:	test   eax,eax
10048ea0:	mov    DWORD PTR [ebp-0x28],ebx
10048ea3:	je     0x10048ed2
10048ea5:	mov    ecx,DWORD PTR [eax+0x4]
10048ea8:	test   ecx,ecx
10048eaa:	je     0x10048ed2
10048eac:	test   WORD PTR [ebp-0x14],0x800
10048eb2:	movsx  eax,WORD PTR [eax]
10048eb5:	mov    DWORD PTR [ebp-0x1c],ecx
10048eb8:	je     0x10048ec9
10048eba:	cdq    
10048ebb:	sub    eax,edx
10048ebd:	mov    DWORD PTR [ebp-0x34],0x1
10048ec4:	jmp    0x100491e2
10048ec9:	and    DWORD PTR [ebp-0x34],0x0
10048ecd:	jmp    0x100491e4
10048ed2:	mov    eax,ds:0x1007ed28
10048ed7:	mov    DWORD PTR [ebp-0x1c],eax
10048eda:	push   eax
10048edb:	call   0x10043100
10048ee0:	pop    ecx
10048ee1:	jmp    0x100491e4
10048ee6:	cmp    eax,0x70
10048ee9:	jg     0x10049076
10048eef:	je     0x1004906a
10048ef5:	cmp    eax,0x65
10048ef8:	jl     0x100491e7
10048efe:	cmp    eax,0x67
10048f01:	jle    0x10048d72
10048f07:	cmp    eax,0x69
10048f0a:	je     0x10048f65
10048f0c:	cmp    eax,0x6e
10048f0f:	je     0x10048f30
10048f11:	cmp    eax,0x6f
10048f14:	jne    0x100491e7
10048f1a:	test   BYTE PTR [ebp-0x14],0x80
10048f1e:	mov    DWORD PTR [ebp-0x24],0x8
10048f25:	je     0x10048f70
10048f27:	or     DWORD PTR [ebp-0x14],0x200
10048f2e:	jmp    0x10048f70
10048f30:	mov    esi,DWORD PTR [ebx]
10048f32:	add    ebx,0x4
10048f35:	mov    DWORD PTR [ebp-0x28],ebx
10048f38:	call   0x1004ddff
10048f3d:	test   eax,eax
10048f3f:	je     0x1004931e
10048f45:	test   BYTE PTR [ebp-0x14],0x20
10048f49:	je     0x10048f54
10048f4b:	mov    ax,WORD PTR [ebp-0x2c]
10048f4f:	mov    WORD PTR [esi],ax
10048f52:	jmp    0x10048f59
10048f54:	mov    eax,DWORD PTR [ebp-0x2c]
10048f57:	mov    DWORD PTR [esi],eax
10048f59:	mov    DWORD PTR [ebp-0x48],0x1
10048f60:	jmp    0x100492f0
10048f65:	or     DWORD PTR [ebp-0x14],0x40
10048f69:	mov    DWORD PTR [ebp-0x24],0xa
10048f70:	test   WORD PTR [ebp-0x14],0x8000
10048f76:	je     0x100490c0
10048f7c:	mov    eax,DWORD PTR [ebx]
10048f7e:	mov    edx,DWORD PTR [ebx+0x4]
10048f81:	add    ebx,0x8
10048f84:	jmp    0x100490f9
10048f89:	jne    0x10048f9a
10048f8b:	cmp    dx,0x67
10048f8f:	jne    0x10048fd6
10048f91:	mov    DWORD PTR [ebp-0x18],0x1
10048f98:	jmp    0x10048fd6
10048f9a:	cmp    DWORD PTR [ebp-0x18],eax
10048f9d:	jle    0x10048fa2
10048f9f:	mov    DWORD PTR [ebp-0x18],eax
10048fa2:	cmp    DWORD PTR [ebp-0x18],0xa3
10048fa9:	jle    0x10048fd6
10048fab:	mov    edi,DWORD PTR [ebp-0x18]
10048fae:	add    edi,0x15d
10048fb4:	push   edi
10048fb5:	call   0x10047512
10048fba:	test   eax,eax
10048fbc:	mov    edx,DWORD PTR [ebp-0x24]
10048fbf:	pop    ecx
10048fc0:	mov    DWORD PTR [ebp-0x50],eax
10048fc3:	je     0x10048fcf
10048fc5:	mov    DWORD PTR [ebp-0x1c],eax
10048fc8:	mov    DWORD PTR [ebp-0x20],edi
10048fcb:	mov    esi,eax
10048fcd:	jmp    0x10048fd6
10048fcf:	mov    DWORD PTR [ebp-0x18],0xa3
10048fd6:	mov    eax,DWORD PTR [ebx]
10048fd8:	add    ebx,0x8
10048fdb:	mov    DWORD PTR [ebp-0x78],eax
10048fde:	mov    eax,DWORD PTR [ebx-0x4]
10048fe1:	mov    DWORD PTR [ebp-0x74],eax
10048fe4:	lea    eax,[ebp-0x64]
10048fe7:	push   eax
10048fe8:	push   DWORD PTR [ebp-0x6c]
10048feb:	movsx  eax,dl
10048fee:	push   DWORD PTR [ebp-0x18]
10048ff1:	mov    DWORD PTR [ebp-0x28],ebx
10048ff4:	push   eax
10048ff5:	push   DWORD PTR [ebp-0x20]
10048ff8:	lea    eax,[ebp-0x78]
10048ffb:	push   esi
10048ffc:	push   eax
10048ffd:	push   DWORD PTR ds:0x1007ea98
10049003:	call   0x10046fe2
10049008:	pop    ecx
10049009:	call   eax
1004900b:	mov    ebx,DWORD PTR [ebp-0x14]
1004900e:	add    esp,0x1c
10049011:	and    ebx,0x80
10049017:	je     0x10049034
10049019:	cmp    DWORD PTR [ebp-0x18],0x0
1004901d:	jne    0x10049034
1004901f:	lea    eax,[ebp-0x64]
10049022:	push   eax
10049023:	push   esi
10049024:	push   DWORD PTR ds:0x1007eaa4
1004902a:	call   0x10046fe2
1004902f:	pop    ecx
10049030:	call   eax
10049032:	pop    ecx
10049033:	pop    ecx
10049034:	cmp    WORD PTR [ebp-0x24],0x67
10049039:	jne    0x10049054
1004903b:	test   ebx,ebx
1004903d:	jne    0x10049054
1004903f:	lea    eax,[ebp-0x64]
10049042:	push   eax
10049043:	push   esi
10049044:	push   DWORD PTR ds:0x1007eaa0
1004904a:	call   0x10046fe2
1004904f:	pop    ecx
10049050:	call   eax
10049052:	pop    ecx
10049053:	pop    ecx
10049054:	cmp    BYTE PTR [esi],0x2d
10049057:	jne    0x10049064
10049059:	or     DWORD PTR [ebp-0x14],0x100
10049060:	inc    esi
10049061:	mov    DWORD PTR [ebp-0x1c],esi
10049064:	push   esi
10049065:	jmp    0x10048edb
1004906a:	mov    DWORD PTR [ebp-0x18],0x8
10049071:	mov    DWORD PTR [ebp-0x54],ecx
10049074:	jmp    0x10049097
10049076:	sub    eax,0x73
10049079:	je     0x10048dbb
1004907f:	sub    eax,edi
10049081:	je     0x10048f69
10049087:	sub    eax,0x3
1004908a:	jne    0x100491e7
10049090:	mov    DWORD PTR [ebp-0x54],0x27
10049097:	test   BYTE PTR [ebp-0x14],0x80
1004909b:	mov    DWORD PTR [ebp-0x24],0x10
100490a2:	je     0x10048f70
100490a8:	mov    eax,DWORD PTR [ebp-0x54]
100490ab:	add    eax,0x51
100490ae:	mov    WORD PTR [ebp-0x44],0x30
100490b4:	mov    WORD PTR [ebp-0x42],ax
100490b8:	mov    DWORD PTR [ebp-0x30],edi
100490bb:	jmp    0x10048f70
100490c0:	test   WORD PTR [ebp-0x14],0x1000
100490c6:	jne    0x10048f7c
100490cc:	add    ebx,0x4
100490cf:	test   BYTE PTR [ebp-0x14],0x20
100490d3:	je     0x100490eb
100490d5:	test   BYTE PTR [ebp-0x14],0x40
100490d9:	mov    DWORD PTR [ebp-0x28],ebx
100490dc:	je     0x100490e4
100490de:	movsx  eax,WORD PTR [ebx-0x4]
100490e2:	jmp    0x100490e8
100490e4:	movzx  eax,WORD PTR [ebx-0x4]
100490e8:	cdq    
100490e9:	jmp    0x100490fc
100490eb:	test   BYTE PTR [ebp-0x14],0x40
100490ef:	mov    eax,DWORD PTR [ebx-0x4]
100490f2:	je     0x100490f7
100490f4:	cdq    
100490f5:	jmp    0x100490f9
100490f7:	xor    edx,edx
100490f9:	mov    DWORD PTR [ebp-0x28],ebx
100490fc:	test   BYTE PTR [ebp-0x14],0x40
10049100:	je     0x1004911a
10049102:	test   edx,edx
10049104:	jg     0x1004911a
10049106:	jl     0x1004910c
10049108:	test   eax,eax
1004910a:	jae    0x1004911a
1004910c:	neg    eax
1004910e:	adc    edx,0x0
10049111:	neg    edx
10049113:	or     DWORD PTR [ebp-0x14],0x100
1004911a:	test   WORD PTR [ebp-0x14],0x9000
10049120:	mov    ebx,edx
10049122:	mov    edi,eax
10049124:	jne    0x10049128
10049126:	xor    ebx,ebx
10049128:	cmp    DWORD PTR [ebp-0x18],0x0
1004912c:	jge    0x10049137
1004912e:	mov    DWORD PTR [ebp-0x18],0x1
10049135:	jmp    0x10049148
10049137:	and    DWORD PTR [ebp-0x14],0xfffffff7
1004913b:	mov    eax,0x200
10049140:	cmp    DWORD PTR [ebp-0x18],eax
10049143:	jle    0x10049148
10049145:	mov    DWORD PTR [ebp-0x18],eax
10049148:	mov    eax,edi
1004914a:	or     eax,ebx
1004914c:	jne    0x10049152
1004914e:	and    DWORD PTR [ebp-0x30],0x0
10049152:	lea    esi,[ebp+0x1ef]
10049158:	mov    eax,DWORD PTR [ebp-0x18]
1004915b:	dec    DWORD PTR [ebp-0x18]
1004915e:	test   eax,eax
10049160:	jg     0x10049168
10049162:	mov    eax,edi
10049164:	or     eax,ebx
10049166:	je     0x1004918c
10049168:	mov    eax,DWORD PTR [ebp-0x24]
1004916b:	cdq    
1004916c:	push   edx
1004916d:	push   eax
1004916e:	push   ebx
1004916f:	push   edi
10049170:	call   0x1004aae0
10049175:	add    ecx,0x30
10049178:	cmp    ecx,0x39
1004917b:	mov    DWORD PTR [ebp-0x7c],ebx
1004917e:	mov    edi,eax
10049180:	mov    ebx,edx
10049182:	jle    0x10049187
10049184:	add    ecx,DWORD PTR [ebp-0x54]
10049187:	mov    BYTE PTR [esi],cl
10049189:	dec    esi
1004918a:	jmp    0x10049158
1004918c:	lea    eax,[ebp+0x1ef]
10049192:	sub    eax,esi
10049194:	inc    esi
10049195:	test   WORD PTR [ebp-0x14],0x200
1004919b:	mov    DWORD PTR [ebp-0x20],eax
1004919e:	mov    DWORD PTR [ebp-0x1c],esi
100491a1:	je     0x100491e7
100491a3:	test   eax,eax
100491a5:	je     0x100491ae
100491a7:	mov    ecx,esi
100491a9:	cmp    BYTE PTR [ecx],0x30
100491ac:	je     0x100491e7
100491ae:	dec    DWORD PTR [ebp-0x1c]
100491b1:	mov    ecx,DWORD PTR [ebp-0x1c]
100491b4:	mov    BYTE PTR [ecx],0x30
100491b7:	inc    eax
100491b8:	jmp    0x100491e4
100491ba:	test   ebx,ebx
100491bc:	jne    0x100491c6
100491be:	mov    eax,ds:0x1007ed2c
100491c3:	mov    DWORD PTR [ebp-0x1c],eax
100491c6:	mov    eax,DWORD PTR [ebp-0x1c]
100491c9:	mov    DWORD PTR [ebp-0x34],0x1
100491d0:	jmp    0x100491db
100491d2:	dec    edi
100491d3:	cmp    WORD PTR [eax],0x0
100491d7:	je     0x100491df
100491d9:	inc    eax
100491da:	inc    eax
100491db:	test   edi,edi
100491dd:	jne    0x100491d2
100491df:	sub    eax,DWORD PTR [ebp-0x1c]
100491e2:	sar    eax,1
100491e4:	mov    DWORD PTR [ebp-0x20],eax
100491e7:	cmp    DWORD PTR [ebp-0x48],0x0
100491eb:	jne    0x100492f0
100491f1:	mov    eax,DWORD PTR [ebp-0x14]
100491f4:	test   al,0x40
100491f6:	je     0x10049223
100491f8:	test   ax,0x100
100491fc:	je     0x10049206
100491fe:	mov    WORD PTR [ebp-0x44],0x2d
10049204:	jmp    0x1004921c
10049206:	test   al,0x1
10049208:	je     0x10049212
1004920a:	mov    WORD PTR [ebp-0x44],0x2b
10049210:	jmp    0x1004921c
10049212:	test   al,0x2
10049214:	je     0x10049223
10049216:	mov    WORD PTR [ebp-0x44],0x20
1004921c:	mov    DWORD PTR [ebp-0x30],0x1
10049223:	mov    ebx,DWORD PTR [ebp-0x38]
10049226:	mov    esi,DWORD PTR [ebp-0x20]
10049229:	sub    ebx,esi
1004922b:	sub    ebx,DWORD PTR [ebp-0x30]
1004922e:	test   BYTE PTR [ebp-0x14],0xc
10049232:	jne    0x10049245
10049234:	push   DWORD PTR [ebp-0x3c]
10049237:	lea    eax,[ebp-0x2c]
1004923a:	push   ebx
1004923b:	push   0x20
1004923d:	call   0x100493a5
10049242:	add    esp,0xc
10049245:	push   DWORD PTR [ebp-0x30]
10049248:	mov    edi,DWORD PTR [ebp-0x3c]
1004924b:	lea    eax,[ebp-0x2c]
1004924e:	lea    ecx,[ebp-0x44]
10049251:	call   0x10048a1d
10049256:	test   BYTE PTR [ebp-0x14],0x8
1004925a:	pop    ecx
1004925b:	je     0x10049272
1004925d:	test   BYTE PTR [ebp-0x14],0x4
10049261:	jne    0x10049272
10049263:	push   edi
10049264:	push   ebx
10049265:	push   0x30
10049267:	lea    eax,[ebp-0x2c]
1004926a:	call   0x100493a5
1004926f:	add    esp,0xc
10049272:	cmp    DWORD PTR [ebp-0x34],0x0
10049276:	jne    0x100492c6
10049278:	test   esi,esi
1004927a:	jle    0x100492c6
1004927c:	mov    edi,DWORD PTR [ebp-0x1c]
1004927f:	mov    DWORD PTR [ebp-0x24],esi
10049282:	dec    DWORD PTR [ebp-0x24]
10049285:	lea    eax,[ebp-0x64]
10049288:	push   eax
10049289:	mov    eax,DWORD PTR [ebp-0x64]
1004928c:	push   DWORD PTR [eax+0xac]
10049292:	lea    eax,[ebp-0x70]
10049295:	push   edi
10049296:	push   eax
10049297:	call   0x1004de15
1004929c:	add    esp,0x10
1004929f:	test   eax,eax
100492a1:	mov    DWORD PTR [ebp-0x7c],eax
100492a4:	jle    0x100492c0
100492a6:	push   DWORD PTR [ebp-0x70]
100492a9:	mov    eax,DWORD PTR [ebp-0x3c]
100492ac:	lea    esi,[ebp-0x2c]
100492af:	call   0x10049380
100492b4:	add    edi,DWORD PTR [ebp-0x7c]
100492b7:	cmp    DWORD PTR [ebp-0x24],0x0
100492bb:	pop    ecx
100492bc:	jg     0x10049282
100492be:	jmp    0x100492d3
100492c0:	or     DWORD PTR [ebp-0x2c],0xffffffff
100492c4:	jmp    0x100492d3
100492c6:	mov    ecx,DWORD PTR [ebp-0x1c]
100492c9:	push   esi
100492ca:	lea    eax,[ebp-0x2c]
100492cd:	call   0x10048a1d
100492d2:	pop    ecx
100492d3:	cmp    DWORD PTR [ebp-0x2c],0x0
100492d7:	jl     0x100492f0
100492d9:	test   BYTE PTR [ebp-0x14],0x4
100492dd:	je     0x100492f0
100492df:	push   DWORD PTR [ebp-0x3c]
100492e2:	lea    eax,[ebp-0x2c]
100492e5:	push   ebx
100492e6:	push   0x20
100492e8:	call   0x100493a5
100492ed:	add    esp,0xc
100492f0:	cmp    DWORD PTR [ebp-0x50],0x0
100492f4:	je     0x10049303
100492f6:	push   DWORD PTR [ebp-0x50]
100492f9:	call   0x100435f8
100492fe:	and    DWORD PTR [ebp-0x50],0x0
10049302:	pop    ecx
10049303:	mov    esi,DWORD PTR [ebp-0x4c]
10049306:	movzx  eax,WORD PTR [esi]
10049309:	test   ax,ax
1004930c:	mov    DWORD PTR [ebp-0x24],eax
1004930f:	je     0x10049335
10049311:	mov    ecx,DWORD PTR [ebp-0x68]
10049314:	mov    ebx,DWORD PTR [ebp-0x28]
10049317:	mov    edx,eax
10049319:	jmp    0x10048b17
1004931e:	call   0x10046c45
10049323:	mov    DWORD PTR [eax],0x16
10049329:	xor    eax,eax
1004932b:	push   eax
1004932c:	push   eax
1004932d:	push   eax
1004932e:	push   eax
1004932f:	push   eax
10049330:	jmp    0x10048adc
10049335:	cmp    BYTE PTR [ebp-0x58],0x0
10049339:	je     0x10049342
1004933b:	mov    eax,DWORD PTR [ebp-0x5c]
1004933e:	and    DWORD PTR [eax+0x70],0xfffffffd
10049342:	mov    eax,DWORD PTR [ebp-0x2c]
10049345:	mov    ecx,DWORD PTR [ebp+0x3f0]
1004934b:	pop    edi
1004934c:	pop    esi
1004934d:	xor    ecx,ebp
1004934f:	pop    ebx
10049350:	call   0x10042f87
10049355:	add    ebp,0x3f4
1004935b:	leave  
1004935c:	ret    
1004935d:	lea    ecx,[ecx+0x0]
10049360:	sbb    ecx,DWORD PTR [ebp-0x749ceffc]
10049366:	add    al,0x10
10049368:	or     BYTE PTR [ebx-0x7431effc],0x4
1004936f:	adc    BYTE PTR [ecx],cl
10049371:	mov    WORD PTR [eax+edx*1],es
10049374:	adc    cl,BYTE PTR [esp+eax*1+0x48c4a10]
1004937b:	adc    BYTE PTR [ebx],dh
1004937d:	lea    eax,[eax+edx*1]
10049380:	test   BYTE PTR [eax+0xc],0x40
10049384:	je     0x1004938c
10049386:	cmp    DWORD PTR [eax+0x8],0x0
1004938a:	je     0x100493a2
1004938c:	push   eax
1004938d:	push   DWORD PTR [esp+0x8]
10049391:	call   0x1004d289
10049396:	cmp    ax,0xffff
1004939a:	pop    ecx
1004939b:	pop    ecx
1004939c:	jne    0x100493a2
1004939e:	or     DWORD PTR [esi],0xffffffff
100493a1:	ret    
100493a2:	inc    DWORD PTR [esi]
100493a4:	ret    
100493a5:	push   ebp
100493a6:	mov    ebp,esp
100493a8:	push   esi
100493a9:	mov    esi,eax
100493ab:	jmp    0x100493c1
100493ad:	push   DWORD PTR [ebp+0x8]
100493b0:	mov    eax,DWORD PTR [ebp+0x10]
100493b3:	dec    DWORD PTR [ebp+0xc]
100493b6:	call   0x10049380
100493bb:	cmp    DWORD PTR [esi],0xffffffff
100493be:	pop    ecx
100493bf:	je     0x100493c7
100493c1:	cmp    DWORD PTR [ebp+0xc],0x0
100493c5:	jg     0x100493ad
100493c7:	pop    esi
100493c8:	pop    ebp
100493c9:	ret    
100493ca:	push   ebp
100493cb:	lea    ebp,[esp-0x3f4]
100493d2:	sub    esp,0x474
100493d8:	mov    eax,ds:0x1007e030
100493dd:	xor    eax,ebp
100493df:	mov    DWORD PTR [ebp+0x3f0],eax
100493e5:	push   ebx
100493e6:	mov    ebx,DWORD PTR [ebp+0x408]
100493ec:	push   esi
100493ed:	mov    esi,DWORD PTR [ebp+0x3fc]
100493f3:	xor    eax,eax
100493f5:	push   edi
100493f6:	push   DWORD PTR [ebp+0x404]
100493fc:	mov    edi,DWORD PTR [ebp+0x400]
10049402:	lea    ecx,[ebp-0x58]
10049405:	mov    DWORD PTR [ebp-0x48],esi
10049408:	mov    DWORD PTR [ebp-0x24],ebx
1004940b:	mov    DWORD PTR [ebp-0x60],eax
1004940e:	mov    DWORD PTR [ebp-0x14],eax
10049411:	mov    DWORD PTR [ebp-0x38],eax
10049414:	mov    DWORD PTR [ebp-0x18],eax
10049417:	mov    DWORD PTR [ebp-0x30],eax
1004941a:	mov    DWORD PTR [ebp-0x5c],eax
1004941d:	mov    DWORD PTR [ebp-0x34],eax
10049420:	call   0x100455d5
10049425:	test   esi,esi
10049427:	jne    0x10049458
10049429:	call   0x10046c45
1004942e:	mov    DWORD PTR [eax],0x16
10049434:	xor    eax,eax
10049436:	push   eax
10049437:	push   eax
10049438:	push   eax
10049439:	push   eax
1004943a:	push   eax
1004943b:	call   0x1004347c
10049440:	add    esp,0x14
10049443:	cmp    BYTE PTR [ebp-0x4c],0x0
10049447:	je     0x10049450
10049449:	mov    eax,DWORD PTR [ebp-0x50]
1004944c:	and    DWORD PTR [eax+0x70],0xfffffffd
10049450:	or     eax,0xffffffff
10049453:	jmp    0x10049caf
10049458:	xor    esi,esi
1004945a:	cmp    edi,esi
1004945c:	jne    0x10049470
1004945e:	call   0x10046c45
10049463:	push   esi
10049464:	push   esi
10049465:	push   esi
10049466:	push   esi
10049467:	mov    DWORD PTR [eax],0x16
1004946d:	push   esi
1004946e:	jmp    0x1004943b
10049470:	movzx  ecx,WORD PTR [edi]
10049473:	cmp    cx,si
10049476:	mov    DWORD PTR [ebp-0x2c],esi
10049479:	mov    DWORD PTR [ebp-0x20],esi
1004947c:	mov    DWORD PTR [ebp-0x40],esi
1004947f:	mov    DWORD PTR [ebp-0x64],esi
10049482:	mov    DWORD PTR [ebp-0x28],ecx
10049485:	je     0x10049c9f
1004948b:	push   0x2
1004948d:	pop    esi
1004948e:	add    edi,esi
10049490:	xor    eax,eax
10049492:	cmp    DWORD PTR [ebp-0x2c],eax
10049495:	mov    DWORD PTR [ebp-0x6c],edi
10049498:	jl     0x10049c8f
1004949e:	lea    edx,[ecx-0x20]
100494a1:	cmp    dx,0x58
100494a5:	ja     0x100494b4
100494a7:	movzx  eax,cx
100494aa:	movzx  eax,BYTE PTR [eax+0x10067458]
100494b1:	and    eax,0xf
100494b4:	mov    edx,DWORD PTR [ebp-0x40]
100494b7:	imul   eax,eax,0x9
100494ba:	movzx  eax,BYTE PTR [eax+edx*1+0x10067478]
100494c2:	push   0x8
100494c4:	shr    eax,0x4
100494c7:	pop    edx
100494c8:	cmp    eax,edx
100494ca:	mov    DWORD PTR [ebp-0x40],eax
100494cd:	je     0x10049429
100494d3:	cmp    eax,0x7
100494d6:	ja     0x10049c77
100494dc:	jmp    DWORD PTR [eax*4+0x10049cca]
100494e3:	xor    eax,eax
100494e5:	or     DWORD PTR [ebp-0x18],0xffffffff
100494e9:	mov    DWORD PTR [ebp-0x68],eax
100494ec:	mov    DWORD PTR [ebp-0x5c],eax
100494ef:	mov    DWORD PTR [ebp-0x38],eax
100494f2:	mov    DWORD PTR [ebp-0x30],eax
100494f5:	mov    DWORD PTR [ebp-0x14],eax
100494f8:	mov    DWORD PTR [ebp-0x34],eax
100494fb:	jmp    0x10049c7d
10049500:	movzx  eax,cx
10049503:	sub    eax,0x20
10049506:	je     0x10049544
10049508:	sub    eax,0x3
1004950b:	je     0x10049538
1004950d:	sub    eax,edx
1004950f:	je     0x1004952f
10049511:	sub    eax,esi
10049513:	je     0x10049526
10049515:	sub    eax,0x3
10049518:	jne    0x10049c77
1004951e:	or     DWORD PTR [ebp-0x14],edx
10049521:	jmp    0x10049c7d
10049526:	or     DWORD PTR [ebp-0x14],0x4
1004952a:	jmp    0x10049c7d
1004952f:	or     DWORD PTR [ebp-0x14],0x1
10049533:	jmp    0x10049c7d
10049538:	or     DWORD PTR [ebp-0x14],0x80
1004953f:	jmp    0x10049c7d
10049544:	or     DWORD PTR [ebp-0x14],esi
10049547:	jmp    0x10049c7d
1004954c:	cmp    cx,0x2a
10049550:	jne    0x10049571
10049552:	mov    eax,DWORD PTR [ebx]
10049554:	add    ebx,0x4
10049557:	test   eax,eax
10049559:	mov    DWORD PTR [ebp-0x24],ebx
1004955c:	mov    DWORD PTR [ebp-0x38],eax
1004955f:	jge    0x10049c7d
10049565:	or     DWORD PTR [ebp-0x14],0x4
10049569:	neg    DWORD PTR [ebp-0x38]
1004956c:	jmp    0x10049c7d
10049571:	mov    eax,DWORD PTR [ebp-0x38]
10049574:	imul   eax,eax,0xa
10049577:	movzx  ecx,cx
1004957a:	lea    eax,[eax+ecx*1-0x30]
1004957e:	mov    DWORD PTR [ebp-0x38],eax
10049581:	jmp    0x10049c7d
10049586:	and    DWORD PTR [ebp-0x18],0x0
1004958a:	jmp    0x10049c7d
1004958f:	cmp    cx,0x2a
10049593:	jne    0x100495b1
10049595:	mov    eax,DWORD PTR [ebx]
10049597:	add    ebx,0x4
1004959a:	test   eax,eax
1004959c:	mov    DWORD PTR [ebp-0x24],ebx
1004959f:	mov    DWORD PTR [ebp-0x18],eax
100495a2:	jge    0x10049c7d
100495a8:	or     DWORD PTR [ebp-0x18],0xffffffff
100495ac:	jmp    0x10049c7d
100495b1:	mov    eax,DWORD PTR [ebp-0x18]
100495b4:	imul   eax,eax,0xa
100495b7:	movzx  ecx,cx
100495ba:	lea    eax,[eax+ecx*1-0x30]
100495be:	mov    DWORD PTR [ebp-0x18],eax
100495c1:	jmp    0x10049c7d
100495c6:	movzx  eax,cx
100495c9:	cmp    eax,0x49
100495cc:	je     0x10049613
100495ce:	cmp    eax,0x68
100495d1:	je     0x1004960a
100495d3:	cmp    eax,0x6c
100495d6:	je     0x100495ed
100495d8:	cmp    eax,0x77
100495db:	jne    0x10049c7d
100495e1:	or     DWORD PTR [ebp-0x14],0x800
100495e8:	jmp    0x10049c7d
100495ed:	cmp    WORD PTR [edi],0x6c
100495f1:	jne    0x10049601
100495f3:	add    edi,esi
100495f5:	or     DWORD PTR [ebp-0x14],0x1000
100495fc:	jmp    0x10049c7d
10049601:	or     DWORD PTR [ebp-0x14],0x10
10049605:	jmp    0x10049c7d
1004960a:	or     DWORD PTR [ebp-0x14],0x20
1004960e:	jmp    0x10049c7d
10049613:	movzx  eax,WORD PTR [edi]
10049616:	cmp    ax,0x36
1004961a:	jne    0x10049632
1004961c:	cmp    WORD PTR [edi+0x2],0x34
10049621:	jne    0x10049632
10049623:	add    edi,0x4
10049626:	or     DWORD PTR [ebp-0x14],0x8000
1004962d:	jmp    0x10049c7d
10049632:	cmp    ax,0x33
10049636:	jne    0x1004964e
10049638:	cmp    WORD PTR [edi+0x2],0x32
1004963d:	jne    0x1004964e
1004963f:	add    edi,0x4
10049642:	and    DWORD PTR [ebp-0x14],0xffff7fff
10049649:	jmp    0x10049c7d
1004964e:	cmp    ax,0x64
10049652:	je     0x10049c7d
10049658:	cmp    ax,0x69
1004965c:	je     0x10049c7d
10049662:	cmp    ax,0x6f
10049666:	je     0x10049c7d
1004966c:	cmp    ax,0x75
10049670:	je     0x10049c7d
10049676:	cmp    ax,0x78
1004967a:	je     0x10049c7d
10049680:	cmp    ax,0x58
10049684:	je     0x10049c7d
1004968a:	and    DWORD PTR [ebp-0x40],0x0
1004968e:	mov    eax,DWORD PTR [ebp-0x48]
10049691:	push   ecx
10049692:	lea    esi,[ebp-0x2c]
10049695:	mov    DWORD PTR [ebp-0x34],0x1
1004969c:	call   0x10049380
100496a1:	pop    ecx
100496a2:	jmp    0x10049c7d
100496a7:	movzx  eax,cx
100496aa:	cmp    eax,0x64
100496ad:	jg     0x1004985b
100496b3:	je     0x100498d6
100496b9:	cmp    eax,0x53
100496bc:	jg     0x10049799
100496c2:	je     0x10049723
100496c4:	sub    eax,0x41
100496c7:	je     0x100496d9
100496c9:	sub    eax,esi
100496cb:	je     0x1004970e
100496cd:	sub    eax,esi
100496cf:	je     0x100496d9
100496d1:	sub    eax,esi
100496d3:	jne    0x10049b5b
100496d9:	add    ecx,0x20
100496dc:	mov    DWORD PTR [ebp-0x68],0x1
100496e3:	mov    DWORD PTR [ebp-0x28],ecx
100496e6:	or     DWORD PTR [ebp-0x14],0x40
100496ea:	cmp    DWORD PTR [ebp-0x18],0x0
100496ee:	lea    esi,[ebp-0x10]
100496f1:	mov    eax,0x200
100496f6:	mov    DWORD PTR [ebp-0x1c],esi
100496f9:	mov    DWORD PTR [ebp-0x20],eax
100496fc:	jge    0x100498fa
10049702:	mov    DWORD PTR [ebp-0x18],0x6
10049709:	jmp    0x1004994a
1004970e:	test   WORD PTR [ebp-0x14],0x830
10049714:	jne    0x100497b7
1004971a:	or     DWORD PTR [ebp-0x14],0x20
1004971e:	jmp    0x100497b7
10049723:	test   WORD PTR [ebp-0x14],0x830
10049729:	jne    0x1004972f
1004972b:	or     DWORD PTR [ebp-0x14],0x20
1004972f:	mov    edi,DWORD PTR [ebp-0x18]
10049732:	cmp    edi,0xffffffff
10049735:	jne    0x1004973c
10049737:	mov    edi,0x7fffffff
1004973c:	add    ebx,0x4
1004973f:	test   BYTE PTR [ebp-0x14],0x20
10049743:	mov    DWORD PTR [ebp-0x24],ebx
10049746:	mov    ebx,DWORD PTR [ebx-0x4]
10049749:	mov    DWORD PTR [ebp-0x1c],ebx
1004974c:	je     0x10049b2e
10049752:	test   ebx,ebx
10049754:	jne    0x1004975e
10049756:	mov    eax,ds:0x1007ed28
1004975b:	mov    DWORD PTR [ebp-0x1c],eax
1004975e:	and    DWORD PTR [ebp-0x20],0x0
10049762:	test   edi,edi
10049764:	mov    esi,DWORD PTR [ebp-0x1c]
10049767:	jle    0x10049b5b
1004976d:	mov    al,BYTE PTR [esi]
1004976f:	test   al,al
10049771:	je     0x10049b5b
10049777:	lea    ecx,[ebp-0x58]
1004977a:	movzx  eax,al
1004977d:	push   ecx
1004977e:	push   eax
1004977f:	call   0x1004b3af
10049784:	test   eax,eax
10049786:	pop    ecx
10049787:	pop    ecx
10049788:	je     0x1004978b
1004978a:	inc    esi
1004978b:	inc    esi
1004978c:	inc    DWORD PTR [ebp-0x20]
1004978f:	cmp    DWORD PTR [ebp-0x20],edi
10049792:	jl     0x1004976d
10049794:	jmp    0x10049b5b
10049799:	sub    eax,0x58
1004979c:	je     0x100499e1
100497a2:	sub    eax,esi
100497a4:	je     0x1004980e
100497a6:	sub    eax,0x7
100497a9:	je     0x100496e6
100497af:	sub    eax,esi
100497b1:	jne    0x10049b5b
100497b7:	movzx  eax,WORD PTR [ebx]
100497ba:	add    ebx,0x4
100497bd:	xor    esi,esi
100497bf:	inc    esi
100497c0:	test   BYTE PTR [ebp-0x14],0x20
100497c4:	mov    DWORD PTR [ebp-0x34],esi
100497c7:	mov    DWORD PTR [ebp-0x24],ebx
100497ca:	mov    DWORD PTR [ebp-0x70],eax
100497cd:	je     0x100497fc
100497cf:	mov    BYTE PTR [ebp-0x44],al
100497d2:	lea    eax,[ebp-0x58]
100497d5:	push   eax
100497d6:	mov    eax,DWORD PTR [ebp-0x58]
100497d9:	mov    BYTE PTR [ebp-0x43],0x0
100497dd:	push   DWORD PTR [eax+0xac]
100497e3:	lea    eax,[ebp-0x44]
100497e6:	push   eax
100497e7:	lea    eax,[ebp-0x10]
100497ea:	push   eax
100497eb:	call   0x1004de15
100497f0:	add    esp,0x10
100497f3:	test   eax,eax
100497f5:	jge    0x10049800
100497f7:	mov    DWORD PTR [ebp-0x5c],esi
100497fa:	jmp    0x10049800
100497fc:	mov    WORD PTR [ebp-0x10],ax
10049800:	lea    eax,[ebp-0x10]
10049803:	mov    DWORD PTR [ebp-0x1c],eax
10049806:	mov    DWORD PTR [ebp-0x20],esi
10049809:	jmp    0x10049b5b
1004980e:	mov    eax,DWORD PTR [ebx]
10049810:	add    ebx,0x4
10049813:	test   eax,eax
10049815:	mov    DWORD PTR [ebp-0x24],ebx
10049818:	je     0x10049847
1004981a:	mov    ecx,DWORD PTR [eax+0x4]
1004981d:	test   ecx,ecx
1004981f:	je     0x10049847
10049821:	test   WORD PTR [ebp-0x14],0x800
10049827:	movsx  eax,WORD PTR [eax]
1004982a:	mov    DWORD PTR [ebp-0x1c],ecx
1004982d:	je     0x1004983e
1004982f:	cdq    
10049830:	sub    eax,edx
10049832:	mov    DWORD PTR [ebp-0x34],0x1
10049839:	jmp    0x10049b56
1004983e:	and    DWORD PTR [ebp-0x34],0x0
10049842:	jmp    0x10049b58
10049847:	mov    eax,ds:0x1007ed28
1004984c:	mov    DWORD PTR [ebp-0x1c],eax
1004984f:	push   eax
10049850:	call   0x10043100
10049855:	pop    ecx
10049856:	jmp    0x10049b58
1004985b:	cmp    eax,0x70
1004985e:	jg     0x100499ea
10049864:	je     0x100499de
1004986a:	cmp    eax,0x65
1004986d:	jl     0x10049b5b
10049873:	cmp    eax,0x67
10049876:	jle    0x100496e6
1004987c:	cmp    eax,0x69
1004987f:	je     0x100498d6
10049881:	cmp    eax,0x6e
10049884:	je     0x100498a1
10049886:	cmp    eax,0x6f
10049889:	jne    0x10049b5b
1004988f:	test   BYTE PTR [ebp-0x14],0x80
10049893:	mov    DWORD PTR [ebp-0x28],edx
10049896:	je     0x100498e1
10049898:	or     DWORD PTR [ebp-0x14],0x200
1004989f:	jmp    0x100498e1
100498a1:	mov    esi,DWORD PTR [ebx]
100498a3:	add    ebx,0x4
100498a6:	mov    DWORD PTR [ebp-0x24],ebx
100498a9:	call   0x1004ddff
100498ae:	test   eax,eax
100498b0:	je     0x10049429
100498b6:	test   BYTE PTR [ebp-0x14],0x20
100498ba:	je     0x100498c5
100498bc:	mov    ax,WORD PTR [ebp-0x2c]
100498c0:	mov    WORD PTR [esi],ax
100498c3:	jmp    0x100498ca
100498c5:	mov    eax,DWORD PTR [ebp-0x2c]
100498c8:	mov    DWORD PTR [esi],eax
100498ca:	mov    DWORD PTR [ebp-0x5c],0x1
100498d1:	jmp    0x10049c64
100498d6:	or     DWORD PTR [ebp-0x14],0x40
100498da:	mov    DWORD PTR [ebp-0x28],0xa
100498e1:	test   WORD PTR [ebp-0x14],0x8000
100498e7:	je     0x10049a34
100498ed:	add    ebx,edx
100498ef:	mov    eax,DWORD PTR [ebx-0x8]
100498f2:	mov    edx,DWORD PTR [ebx-0x4]
100498f5:	jmp    0x10049a6d
100498fa:	jne    0x1004990b
100498fc:	cmp    cx,0x67
10049900:	jne    0x1004994a
10049902:	mov    DWORD PTR [ebp-0x18],0x1
10049909:	jmp    0x1004994a
1004990b:	cmp    DWORD PTR [ebp-0x18],eax
1004990e:	jle    0x10049913
10049910:	mov    DWORD PTR [ebp-0x18],eax
10049913:	cmp    DWORD PTR [ebp-0x18],0xa3
1004991a:	jle    0x1004994a
1004991c:	mov    edi,DWORD PTR [ebp-0x18]
1004991f:	add    edi,0x15d
10049925:	push   edi
10049926:	call   0x10047512
1004992b:	test   eax,eax
1004992d:	pop    ecx
1004992e:	mov    ecx,DWORD PTR [ebp-0x28]
10049931:	push   0x8
10049933:	mov    DWORD PTR [ebp-0x64],eax
10049936:	pop    edx
10049937:	je     0x10049943
10049939:	mov    DWORD PTR [ebp-0x1c],eax
1004993c:	mov    DWORD PTR [ebp-0x20],edi
1004993f:	mov    esi,eax
10049941:	jmp    0x1004994a
10049943:	mov    DWORD PTR [ebp-0x18],0xa3
1004994a:	add    ebx,edx
1004994c:	mov    eax,DWORD PTR [ebx-0x8]
1004994f:	mov    DWORD PTR [ebp-0x78],eax
10049952:	mov    eax,DWORD PTR [ebx-0x4]
10049955:	mov    DWORD PTR [ebp-0x74],eax
10049958:	lea    eax,[ebp-0x58]
1004995b:	push   eax
1004995c:	push   DWORD PTR [ebp-0x68]
1004995f:	movsx  eax,cl
10049962:	push   DWORD PTR [ebp-0x18]
10049965:	mov    DWORD PTR [ebp-0x24],ebx
10049968:	push   eax
10049969:	push   DWORD PTR [ebp-0x20]
1004996c:	lea    eax,[ebp-0x78]
1004996f:	push   esi
10049970:	push   eax
10049971:	push   DWORD PTR ds:0x1007ea98
10049977:	call   0x10046fe2
1004997c:	pop    ecx
1004997d:	call   eax
1004997f:	mov    ebx,DWORD PTR [ebp-0x14]
10049982:	add    esp,0x1c
10049985:	and    ebx,0x80
1004998b:	je     0x100499a8
1004998d:	cmp    DWORD PTR [ebp-0x18],0x0
10049991:	jne    0x100499a8
10049993:	lea    eax,[ebp-0x58]
10049996:	push   eax
10049997:	push   esi
10049998:	push   DWORD PTR ds:0x1007eaa4
1004999e:	call   0x10046fe2
100499a3:	pop    ecx
100499a4:	call   eax
100499a6:	pop    ecx
100499a7:	pop    ecx
100499a8:	cmp    WORD PTR [ebp-0x28],0x67
100499ad:	jne    0x100499c8
100499af:	test   ebx,ebx
100499b1:	jne    0x100499c8
100499b3:	lea    eax,[ebp-0x58]
100499b6:	push   eax
100499b7:	push   esi
100499b8:	push   DWORD PTR ds:0x1007eaa0
100499be:	call   0x10046fe2
100499c3:	pop    ecx
100499c4:	call   eax
100499c6:	pop    ecx
100499c7:	pop    ecx
100499c8:	cmp    BYTE PTR [esi],0x2d
100499cb:	jne    0x100499d8
100499cd:	or     DWORD PTR [ebp-0x14],0x100
100499d4:	inc    esi
100499d5:	mov    DWORD PTR [ebp-0x1c],esi
100499d8:	push   esi
100499d9:	jmp    0x10049850
100499de:	mov    DWORD PTR [ebp-0x18],edx
100499e1:	mov    DWORD PTR [ebp-0x60],0x7
100499e8:	jmp    0x10049a0b
100499ea:	sub    eax,0x73
100499ed:	je     0x1004972f
100499f3:	sub    eax,esi
100499f5:	je     0x100498da
100499fb:	sub    eax,0x3
100499fe:	jne    0x10049b5b
10049a04:	mov    DWORD PTR [ebp-0x60],0x27
10049a0b:	test   BYTE PTR [ebp-0x14],0x80
10049a0f:	mov    DWORD PTR [ebp-0x28],0x10
10049a16:	je     0x100498e1
10049a1c:	mov    eax,DWORD PTR [ebp-0x60]
10049a1f:	add    eax,0x51
10049a22:	mov    WORD PTR [ebp-0x3c],0x30
10049a28:	mov    WORD PTR [ebp-0x3a],ax
10049a2c:	mov    DWORD PTR [ebp-0x30],esi
10049a2f:	jmp    0x100498e1
10049a34:	test   WORD PTR [ebp-0x14],0x1000
10049a3a:	jne    0x100498ed
10049a40:	add    ebx,0x4
10049a43:	test   BYTE PTR [ebp-0x14],0x20
10049a47:	je     0x10049a5f
10049a49:	test   BYTE PTR [ebp-0x14],0x40
10049a4d:	mov    DWORD PTR [ebp-0x24],ebx
10049a50:	je     0x10049a58
10049a52:	movsx  eax,WORD PTR [ebx-0x4]
10049a56:	jmp    0x10049a5c
10049a58:	movzx  eax,WORD PTR [ebx-0x4]
10049a5c:	cdq    
10049a5d:	jmp    0x10049a70
10049a5f:	test   BYTE PTR [ebp-0x14],0x40
10049a63:	mov    eax,DWORD PTR [ebx-0x4]
10049a66:	je     0x10049a6b
10049a68:	cdq    
10049a69:	jmp    0x10049a6d
10049a6b:	xor    edx,edx
10049a6d:	mov    DWORD PTR [ebp-0x24],ebx
10049a70:	test   BYTE PTR [ebp-0x14],0x40
10049a74:	je     0x10049a8e
10049a76:	test   edx,edx
10049a78:	jg     0x10049a8e
10049a7a:	jl     0x10049a80
10049a7c:	test   eax,eax
10049a7e:	jae    0x10049a8e
10049a80:	neg    eax
10049a82:	adc    edx,0x0
10049a85:	neg    edx
10049a87:	or     DWORD PTR [ebp-0x14],0x100
10049a8e:	test   WORD PTR [ebp-0x14],0x9000
10049a94:	mov    ebx,edx
10049a96:	mov    edi,eax
10049a98:	jne    0x10049a9c
10049a9a:	xor    ebx,ebx
10049a9c:	cmp    DWORD PTR [ebp-0x18],0x0
10049aa0:	jge    0x10049aab
10049aa2:	mov    DWORD PTR [ebp-0x18],0x1
10049aa9:	jmp    0x10049abc
10049aab:	and    DWORD PTR [ebp-0x14],0xfffffff7
10049aaf:	mov    eax,0x200
10049ab4:	cmp    DWORD PTR [ebp-0x18],eax
10049ab7:	jle    0x10049abc
10049ab9:	mov    DWORD PTR [ebp-0x18],eax
10049abc:	mov    eax,edi
10049abe:	or     eax,ebx
10049ac0:	jne    0x10049ac6
10049ac2:	and    DWORD PTR [ebp-0x30],0x0
10049ac6:	lea    esi,[ebp+0x1ef]
10049acc:	mov    eax,DWORD PTR [ebp-0x18]
10049acf:	dec    DWORD PTR [ebp-0x18]
10049ad2:	test   eax,eax
10049ad4:	jg     0x10049adc
10049ad6:	mov    eax,edi
10049ad8:	or     eax,ebx
10049ada:	je     0x10049b00
10049adc:	mov    eax,DWORD PTR [ebp-0x28]
10049adf:	cdq    
10049ae0:	push   edx
10049ae1:	push   eax
10049ae2:	push   ebx
10049ae3:	push   edi
10049ae4:	call   0x1004aae0
10049ae9:	add    ecx,0x30
10049aec:	cmp    ecx,0x39
10049aef:	mov    DWORD PTR [ebp-0x7c],ebx
10049af2:	mov    edi,eax
10049af4:	mov    ebx,edx
10049af6:	jle    0x10049afb
10049af8:	add    ecx,DWORD PTR [ebp-0x60]
10049afb:	mov    BYTE PTR [esi],cl
10049afd:	dec    esi
10049afe:	jmp    0x10049acc
10049b00:	lea    eax,[ebp+0x1ef]
10049b06:	sub    eax,esi
10049b08:	inc    esi
10049b09:	test   WORD PTR [ebp-0x14],0x200
10049b0f:	mov    DWORD PTR [ebp-0x20],eax
10049b12:	mov    DWORD PTR [ebp-0x1c],esi
10049b15:	je     0x10049b5b
10049b17:	test   eax,eax
10049b19:	je     0x10049b22
10049b1b:	mov    ecx,esi
10049b1d:	cmp    BYTE PTR [ecx],0x30
10049b20:	je     0x10049b5b
10049b22:	dec    DWORD PTR [ebp-0x1c]
10049b25:	mov    ecx,DWORD PTR [ebp-0x1c]
10049b28:	mov    BYTE PTR [ecx],0x30
10049b2b:	inc    eax
10049b2c:	jmp    0x10049b58
10049b2e:	test   ebx,ebx
10049b30:	jne    0x10049b3a
10049b32:	mov    eax,ds:0x1007ed2c
10049b37:	mov    DWORD PTR [ebp-0x1c],eax
10049b3a:	mov    eax,DWORD PTR [ebp-0x1c]
10049b3d:	mov    DWORD PTR [ebp-0x34],0x1
10049b44:	jmp    0x10049b4f
10049b46:	dec    edi
10049b47:	cmp    WORD PTR [eax],0x0
10049b4b:	je     0x10049b53
10049b4d:	add    eax,esi
10049b4f:	test   edi,edi
10049b51:	jne    0x10049b46
10049b53:	sub    eax,DWORD PTR [ebp-0x1c]
10049b56:	sar    eax,1
10049b58:	mov    DWORD PTR [ebp-0x20],eax
10049b5b:	cmp    DWORD PTR [ebp-0x5c],0x0
10049b5f:	jne    0x10049c64
10049b65:	mov    eax,DWORD PTR [ebp-0x14]
10049b68:	test   al,0x40
10049b6a:	je     0x10049b97
10049b6c:	test   ax,0x100
10049b70:	je     0x10049b7a
10049b72:	mov    WORD PTR [ebp-0x3c],0x2d
10049b78:	jmp    0x10049b90
10049b7a:	test   al,0x1
10049b7c:	je     0x10049b86
10049b7e:	mov    WORD PTR [ebp-0x3c],0x2b
10049b84:	jmp    0x10049b90
10049b86:	test   al,0x2
10049b88:	je     0x10049b97
10049b8a:	mov    WORD PTR [ebp-0x3c],0x20
10049b90:	mov    DWORD PTR [ebp-0x30],0x1
10049b97:	mov    ebx,DWORD PTR [ebp-0x38]
10049b9a:	mov    esi,DWORD PTR [ebp-0x20]
10049b9d:	sub    ebx,esi
10049b9f:	sub    ebx,DWORD PTR [ebp-0x30]
10049ba2:	test   BYTE PTR [ebp-0x14],0xc
10049ba6:	jne    0x10049bb9
10049ba8:	push   DWORD PTR [ebp-0x48]
10049bab:	lea    eax,[ebp-0x2c]
10049bae:	push   ebx
10049baf:	push   0x20
10049bb1:	call   0x100493a5
10049bb6:	add    esp,0xc
10049bb9:	push   DWORD PTR [ebp-0x30]
10049bbc:	mov    edi,DWORD PTR [ebp-0x48]
10049bbf:	lea    eax,[ebp-0x2c]
10049bc2:	lea    ecx,[ebp-0x3c]
10049bc5:	call   0x10048a1d
10049bca:	test   BYTE PTR [ebp-0x14],0x8
10049bce:	pop    ecx
10049bcf:	je     0x10049be6
10049bd1:	test   BYTE PTR [ebp-0x14],0x4
10049bd5:	jne    0x10049be6
10049bd7:	push   edi
10049bd8:	push   ebx
10049bd9:	push   0x30
10049bdb:	lea    eax,[ebp-0x2c]
10049bde:	call   0x100493a5
10049be3:	add    esp,0xc
10049be6:	cmp    DWORD PTR [ebp-0x34],0x0
10049bea:	jne    0x10049c3a
10049bec:	test   esi,esi
10049bee:	jle    0x10049c3a
10049bf0:	mov    edi,DWORD PTR [ebp-0x1c]
10049bf3:	mov    DWORD PTR [ebp-0x28],esi
10049bf6:	dec    DWORD PTR [ebp-0x28]
10049bf9:	lea    eax,[ebp-0x58]
10049bfc:	push   eax
10049bfd:	mov    eax,DWORD PTR [ebp-0x58]
10049c00:	push   DWORD PTR [eax+0xac]
10049c06:	lea    eax,[ebp-0x70]
10049c09:	push   edi
10049c0a:	push   eax
10049c0b:	call   0x1004de15
10049c10:	add    esp,0x10
10049c13:	test   eax,eax
10049c15:	mov    DWORD PTR [ebp-0x7c],eax
10049c18:	jle    0x10049c34
10049c1a:	push   DWORD PTR [ebp-0x70]
10049c1d:	mov    eax,DWORD PTR [ebp-0x48]
10049c20:	lea    esi,[ebp-0x2c]
10049c23:	call   0x10049380
10049c28:	add    edi,DWORD PTR [ebp-0x7c]
10049c2b:	cmp    DWORD PTR [ebp-0x28],0x0
10049c2f:	pop    ecx
10049c30:	jg     0x10049bf6
10049c32:	jmp    0x10049c47
10049c34:	or     DWORD PTR [ebp-0x2c],0xffffffff
10049c38:	jmp    0x10049c47
10049c3a:	mov    ecx,DWORD PTR [ebp-0x1c]
10049c3d:	push   esi
10049c3e:	lea    eax,[ebp-0x2c]
10049c41:	call   0x10048a1d
10049c46:	pop    ecx
10049c47:	cmp    DWORD PTR [ebp-0x2c],0x0
10049c4b:	jl     0x10049c64
10049c4d:	test   BYTE PTR [ebp-0x14],0x4
10049c51:	je     0x10049c64
10049c53:	push   DWORD PTR [ebp-0x48]
10049c56:	lea    eax,[ebp-0x2c]
10049c59:	push   ebx
10049c5a:	push   0x20
10049c5c:	call   0x100493a5
10049c61:	add    esp,0xc
10049c64:	cmp    DWORD PTR [ebp-0x64],0x0
10049c68:	je     0x10049c77
10049c6a:	push   DWORD PTR [ebp-0x64]
10049c6d:	call   0x100435f8
10049c72:	and    DWORD PTR [ebp-0x64],0x0
10049c76:	pop    ecx
10049c77:	mov    edi,DWORD PTR [ebp-0x6c]
10049c7a:	mov    ebx,DWORD PTR [ebp-0x24]
10049c7d:	movzx  eax,WORD PTR [edi]
10049c80:	test   ax,ax
10049c83:	mov    DWORD PTR [ebp-0x28],eax
10049c86:	je     0x10049c8f
10049c88:	mov    ecx,eax
10049c8a:	jmp    0x1004948b
10049c8f:	cmp    DWORD PTR [ebp-0x40],0x0
10049c93:	je     0x10049c9f
10049c95:	cmp    DWORD PTR [ebp-0x40],0x7
10049c99:	jne    0x10049429
10049c9f:	cmp    BYTE PTR [ebp-0x4c],0x0
10049ca3:	je     0x10049cac
10049ca5:	mov    eax,DWORD PTR [ebp-0x50]
10049ca8:	and    DWORD PTR [eax+0x70],0xfffffffd
10049cac:	mov    eax,DWORD PTR [ebp-0x2c]
10049caf:	mov    ecx,DWORD PTR [ebp+0x3f0]
10049cb5:	pop    edi
10049cb6:	pop    esi
10049cb7:	xor    ecx,ebp
10049cb9:	pop    ebx
10049cba:	call   0x10042f87
10049cbf:	add    ebp,0x3f4
10049cc5:	leave  
10049cc6:	ret    
10049cc7:	lea    ecx,[ecx+0x0]
10049cca:	mov    ss,WORD PTR [esi-0x6b1ceffc]
10049cd0:	add    al,0x10
10049cd2:	add    BYTE PTR [ebp-0x6ab3effc],dl
10049cd8:	add    al,0x10
10049cda:	xchg   BYTE PTR [ebp-0x6a70effc],dl
10049ce0:	add    al,0x10
10049ce2:	(bad)  
10049ce3:	xchg   ebp,eax
10049ce4:	add    al,0x10
10049ce6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
10049ce7:	xchg   esi,eax
10049ce8:	add    al,0x10
10049cea:	push   ecx
10049ceb:	push   ebx
10049cec:	mov    ebx,DWORD PTR [esp+0xc]
10049cf0:	push   esi
10049cf1:	push   edi
10049cf2:	xor    esi,esi
10049cf4:	xor    edi,edi
10049cf6:	cmp    ebx,DWORD PTR [edi*8+0x1007e2e8]
10049cfd:	je     0x10049d05
10049cff:	inc    edi
10049d00:	cmp    edi,0x17
10049d03:	jl     0x10049cf6
10049d05:	cmp    edi,0x17
10049d08:	jae    0x10049e85
10049d0e:	push   ebp
10049d0f:	push   0x3
10049d11:	call   0x1004ec52
10049d16:	cmp    eax,0x1
10049d19:	pop    ecx
10049d1a:	je     0x10049e51
10049d20:	push   0x3
10049d22:	call   0x1004ec52
10049d27:	test   eax,eax
10049d29:	pop    ecx
10049d2a:	jne    0x10049d39
10049d2c:	cmp    DWORD PTR ds:0x1007faa4,0x1
10049d33:	je     0x10049e51
10049d39:	cmp    ebx,0xfc
10049d3f:	je     0x10049e84
10049d45:	push   0x10066c28
10049d4a:	mov    ebx,0x314
10049d4f:	push   ebx
10049d50:	mov    ebp,0x1007ff98
10049d55:	push   ebp
10049d56:	call   0x10046c89
10049d5b:	add    esp,0xc
10049d5e:	test   eax,eax
10049d60:	je     0x10049d6f
10049d62:	push   esi
10049d63:	push   esi
10049d64:	push   esi
10049d65:	push   esi
10049d66:	push   esi
10049d67:	call   0x10043380
10049d6c:	add    esp,0x14
10049d6f:	push   0x104
10049d74:	mov    esi,0x1007ffb1
10049d79:	push   esi
10049d7a:	push   0x0
10049d7c:	mov    BYTE PTR ds:0x100800b5,0x0
10049d83:	call   DWORD PTR ds:0x100661d8
10049d89:	test   eax,eax
10049d8b:	jne    0x10049db3
10049d8d:	push   0x10066c10
10049d92:	push   0x2fb
10049d97:	push   esi
10049d98:	call   0x10046c89
10049d9d:	add    esp,0xc
10049da0:	test   eax,eax
10049da2:	je     0x10049db3
10049da4:	xor    eax,eax
10049da6:	push   eax
10049da7:	push   eax
10049da8:	push   eax
10049da9:	push   eax
10049daa:	push   eax
10049dab:	call   0x10043380
10049db0:	add    esp,0x14
10049db3:	push   esi
10049db4:	call   0x10043100
10049db9:	inc    eax
10049dba:	cmp    eax,0x3c
10049dbd:	pop    ecx
10049dbe:	jbe    0x10049df8
10049dc0:	push   esi
10049dc1:	call   0x10043100
10049dc6:	sub    esi,0x3b
10049dc9:	add    eax,esi
10049dcb:	push   0x3
10049dcd:	mov    ecx,0x100802ac
10049dd2:	push   0x10066c0c
10049dd7:	sub    ecx,eax
10049dd9:	push   ecx
10049dda:	push   eax
10049ddb:	call   0x1004eb9f
10049de0:	add    esp,0x14
10049de3:	test   eax,eax
10049de5:	je     0x10049df8
10049de7:	xor    esi,esi
10049de9:	push   esi
10049dea:	push   esi
10049deb:	push   esi
10049dec:	push   esi
10049ded:	push   esi
10049dee:	call   0x10043380
10049df3:	add    esp,0x14
10049df6:	jmp    0x10049dfa
10049df8:	xor    esi,esi
10049dfa:	push   0x10066c08
10049dff:	push   ebx
10049e00:	push   ebp
10049e01:	call   0x1004eb2e
10049e06:	add    esp,0xc
10049e09:	test   eax,eax
10049e0b:	je     0x10049e1a
10049e0d:	push   esi
10049e0e:	push   esi
10049e0f:	push   esi
10049e10:	push   esi
10049e11:	push   esi
10049e12:	call   0x10043380
10049e17:	add    esp,0x14
10049e1a:	push   DWORD PTR [edi*8+0x1007e2ec]
10049e21:	push   ebx
10049e22:	push   ebp
10049e23:	call   0x1004eb2e
10049e28:	add    esp,0xc
10049e2b:	test   eax,eax
10049e2d:	je     0x10049e3c
10049e2f:	push   esi
10049e30:	push   esi
10049e31:	push   esi
10049e32:	push   esi
10049e33:	push   esi
10049e34:	call   0x10043380
10049e39:	add    esp,0x14
10049e3c:	push   0x12010
10049e41:	push   0x10066be0
10049e46:	push   ebp
10049e47:	call   0x1004e990
10049e4c:	add    esp,0xc
10049e4f:	jmp    0x10049e84
10049e51:	push   0xfffffff4
10049e53:	call   DWORD PTR ds:0x100661d4
10049e59:	mov    ebp,eax
10049e5b:	cmp    ebp,esi
10049e5d:	je     0x10049e84
10049e5f:	cmp    ebp,0xffffffff
10049e62:	je     0x10049e84
10049e64:	push   0x0
10049e66:	lea    eax,[esp+0x14]
10049e6a:	push   eax
10049e6b:	lea    esi,[edi*8+0x1007e2ec]
10049e72:	push   DWORD PTR [esi]
10049e74:	call   0x10043100
10049e79:	pop    ecx
10049e7a:	push   eax
10049e7b:	push   DWORD PTR [esi]
10049e7d:	push   ebp
10049e7e:	call   DWORD PTR ds:0x100660b4
10049e84:	pop    ebp
10049e85:	pop    edi
10049e86:	pop    esi
10049e87:	pop    ebx
10049e88:	pop    ecx
10049e89:	ret    
10049e8a:	push   0x3
10049e8c:	call   0x1004ec52
10049e91:	cmp    eax,0x1
10049e94:	pop    ecx
10049e95:	je     0x10049eac
10049e97:	push   0x3
10049e99:	call   0x1004ec52
10049e9e:	test   eax,eax
10049ea0:	pop    ecx
10049ea1:	jne    0x10049ec2
10049ea3:	cmp    DWORD PTR ds:0x1007faa4,0x1
10049eaa:	jne    0x10049ec2
10049eac:	push   0xfc
10049eb1:	call   0x10049cea
10049eb6:	push   0xff
10049ebb:	call   0x10049cea
10049ec0:	pop    ecx
10049ec1:	pop    ecx
10049ec2:	ret    
10049ec3:	int3   
10049ec4:	int3   
10049ec5:	int3   
10049ec6:	int3   
10049ec7:	int3   
10049ec8:	int3   
10049ec9:	int3   
10049eca:	int3   
10049ecb:	int3   
10049ecc:	int3   
10049ecd:	int3   
10049ece:	int3   
10049ecf:	int3   
10049ed0:	push   ecx
10049ed1:	lea    ecx,[esp+0x4]
10049ed5:	sub    ecx,eax
10049ed7:	sbb    eax,eax
10049ed9:	not    eax
10049edb:	and    ecx,eax
10049edd:	mov    eax,esp
10049edf:	and    eax,0xfffff000
10049ee4:	cmp    ecx,eax
10049ee6:	jb     0x10049ef2
10049ee8:	mov    eax,ecx
10049eea:	pop    ecx
10049eeb:	xchg   esp,eax
10049eec:	mov    eax,DWORD PTR [eax]
10049eee:	mov    DWORD PTR [esp],eax
10049ef1:	ret    
10049ef2:	sub    eax,0x1000
10049ef7:	test   DWORD PTR [eax],eax
10049ef9:	jmp    0x10049ee4
10049efb:	push   ebp
10049efc:	mov    ebp,esp
10049efe:	sub    esp,0x8
10049f01:	mov    DWORD PTR [ebp-0x4],edi
10049f04:	mov    DWORD PTR [ebp-0x8],esi
10049f07:	mov    esi,DWORD PTR [ebp+0xc]
10049f0a:	mov    edi,DWORD PTR [ebp+0x8]
10049f0d:	mov    ecx,DWORD PTR [ebp+0x10]
10049f10:	shr    ecx,0x7
10049f13:	jmp    0x10049f1b
10049f15:	lea    ebx,[ebx+0x0]
10049f1b:	movdqa xmm0,XMMWORD PTR [esi]
10049f1f:	movdqa xmm1,XMMWORD PTR [esi+0x10]
10049f24:	movdqa xmm2,XMMWORD PTR [esi+0x20]
10049f29:	movdqa xmm3,XMMWORD PTR [esi+0x30]
10049f2e:	movdqa XMMWORD PTR [edi],xmm0
10049f32:	movdqa XMMWORD PTR [edi+0x10],xmm1
10049f37:	movdqa XMMWORD PTR [edi+0x20],xmm2
10049f3c:	movdqa XMMWORD PTR [edi+0x30],xmm3
10049f41:	movdqa xmm4,XMMWORD PTR [esi+0x40]
10049f46:	movdqa xmm5,XMMWORD PTR [esi+0x50]
10049f4b:	movdqa xmm6,XMMWORD PTR [esi+0x60]
10049f50:	movdqa xmm7,XMMWORD PTR [esi+0x70]
10049f55:	movdqa XMMWORD PTR [edi+0x40],xmm4
10049f5a:	movdqa XMMWORD PTR [edi+0x50],xmm5
10049f5f:	movdqa XMMWORD PTR [edi+0x60],xmm6
10049f64:	movdqa XMMWORD PTR [edi+0x70],xmm7
10049f69:	lea    esi,[esi+0x80]
10049f6f:	lea    edi,[edi+0x80]
10049f75:	dec    ecx
10049f76:	jne    0x10049f1b
10049f78:	mov    esi,DWORD PTR [ebp-0x8]
10049f7b:	mov    edi,DWORD PTR [ebp-0x4]
10049f7e:	mov    esp,ebp
10049f80:	pop    ebp
10049f81:	ret    
10049f82:	push   ebp
10049f83:	mov    ebp,esp
10049f85:	sub    esp,0x1c
10049f88:	mov    DWORD PTR [ebp-0xc],edi
10049f8b:	mov    DWORD PTR [ebp-0x8],esi
10049f8e:	mov    DWORD PTR [ebp-0x4],ebx
10049f91:	mov    ebx,DWORD PTR [ebp+0xc]
10049f94:	mov    eax,ebx
10049f96:	cdq    
10049f97:	mov    ecx,eax
10049f99:	mov    eax,DWORD PTR [ebp+0x8]
10049f9c:	xor    ecx,edx
10049f9e:	sub    ecx,edx
10049fa0:	and    ecx,0xf
10049fa3:	xor    ecx,edx
10049fa5:	sub    ecx,edx
10049fa7:	cdq    
10049fa8:	mov    edi,eax
10049faa:	xor    edi,edx
10049fac:	sub    edi,edx
10049fae:	and    edi,0xf
10049fb1:	xor    edi,edx
10049fb3:	sub    edi,edx
10049fb5:	mov    edx,ecx
10049fb7:	or     edx,edi
10049fb9:	jne    0x1004a005
10049fbb:	mov    esi,DWORD PTR [ebp+0x10]
10049fbe:	mov    ecx,esi
10049fc0:	and    ecx,0x7f
10049fc3:	mov    DWORD PTR [ebp-0x18],ecx
10049fc6:	cmp    esi,ecx
10049fc8:	je     0x10049fdd
10049fca:	sub    esi,ecx
10049fcc:	push   esi
10049fcd:	push   ebx
10049fce:	push   eax
10049fcf:	call   0x10049efb
10049fd4:	add    esp,0xc
10049fd7:	mov    eax,DWORD PTR [ebp+0x8]
10049fda:	mov    ecx,DWORD PTR [ebp-0x18]
10049fdd:	test   ecx,ecx
10049fdf:	je     0x1004a058
10049fe1:	mov    ebx,DWORD PTR [ebp+0x10]
10049fe4:	mov    edx,DWORD PTR [ebp+0xc]
10049fe7:	add    edx,ebx
10049fe9:	sub    edx,ecx
10049feb:	mov    DWORD PTR [ebp-0x14],edx
10049fee:	add    ebx,eax
10049ff0:	sub    ebx,ecx
10049ff2:	mov    DWORD PTR [ebp-0x10],ebx
10049ff5:	mov    esi,DWORD PTR [ebp-0x14]
10049ff8:	mov    edi,DWORD PTR [ebp-0x10]
10049ffb:	mov    ecx,DWORD PTR [ebp-0x18]
10049ffe:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
1004a000:	mov    eax,DWORD PTR [ebp+0x8]
1004a003:	jmp    0x1004a058
1004a005:	cmp    ecx,edi
1004a007:	jne    0x1004a03e
1004a009:	neg    ecx
1004a00b:	add    ecx,0x10
1004a00e:	mov    DWORD PTR [ebp-0x1c],ecx
1004a011:	mov    esi,DWORD PTR [ebp+0xc]
1004a014:	mov    edi,DWORD PTR [ebp+0x8]
1004a017:	mov    ecx,DWORD PTR [ebp-0x1c]
1004a01a:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
1004a01c:	mov    ecx,DWORD PTR [ebp+0x8]
1004a01f:	add    ecx,DWORD PTR [ebp-0x1c]
1004a022:	mov    edx,DWORD PTR [ebp+0xc]
1004a025:	add    edx,DWORD PTR [ebp-0x1c]
1004a028:	mov    eax,DWORD PTR [ebp+0x10]
1004a02b:	sub    eax,DWORD PTR [ebp-0x1c]
1004a02e:	push   eax
1004a02f:	push   edx
1004a030:	push   ecx
1004a031:	call   0x10049f82
1004a036:	add    esp,0xc
1004a039:	mov    eax,DWORD PTR [ebp+0x8]
1004a03c:	jmp    0x1004a058
1004a03e:	mov    esi,DWORD PTR [ebp+0xc]
1004a041:	mov    edi,DWORD PTR [ebp+0x8]
1004a044:	mov    ecx,DWORD PTR [ebp+0x10]
1004a047:	mov    edx,ecx
1004a049:	shr    ecx,0x2
1004a04c:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
1004a04e:	mov    ecx,edx
1004a050:	and    ecx,0x3
1004a053:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
1004a055:	mov    eax,DWORD PTR [ebp+0x8]
1004a058:	mov    ebx,DWORD PTR [ebp-0x4]
1004a05b:	mov    esi,DWORD PTR [ebp-0x8]
1004a05e:	mov    edi,DWORD PTR [ebp-0xc]
1004a061:	mov    esp,ebp
1004a063:	pop    ebp
1004a064:	ret    
1004a065:	and    DWORD PTR ds:0x10082580,0x0
1004a06c:	call   0x1004ece8
1004a071:	mov    ds:0x10082580,eax
1004a076:	xor    eax,eax
1004a078:	ret    
1004a079:	sub    eax,0x3a4
1004a07e:	je     0x1004a0a2
1004a080:	sub    eax,0x4
1004a083:	je     0x1004a09c
1004a085:	sub    eax,0xd
1004a088:	je     0x1004a096
1004a08a:	dec    eax
1004a08b:	je     0x1004a090
1004a08d:	xor    eax,eax
1004a08f:	ret    
1004a090:	mov    eax,0x404
1004a095:	ret    
1004a096:	mov    eax,0x412
1004a09b:	ret    
1004a09c:	mov    eax,0x804
1004a0a1:	ret    
1004a0a2:	mov    eax,0x411
1004a0a7:	ret    
1004a0a8:	push   ebx
1004a0a9:	push   ebp
1004a0aa:	push   esi
1004a0ab:	push   edi
1004a0ac:	mov    ebp,0x101
1004a0b1:	mov    esi,eax
1004a0b3:	push   ebp
1004a0b4:	xor    edi,edi
1004a0b6:	lea    ebx,[esi+0x1c]
1004a0b9:	push   edi
1004a0ba:	push   ebx
1004a0bb:	call   0x10045cf0
1004a0c0:	mov    DWORD PTR [esi+0x4],edi
1004a0c3:	mov    DWORD PTR [esi+0x8],edi
1004a0c6:	mov    DWORD PTR [esi+0xc],edi
1004a0c9:	xor    eax,eax
1004a0cb:	lea    edi,[esi+0x10]
1004a0ce:	stos   DWORD PTR es:[edi],eax
1004a0cf:	stos   DWORD PTR es:[edi],eax
1004a0d0:	stos   DWORD PTR es:[edi],eax
1004a0d1:	mov    eax,0x1007e3a0
1004a0d6:	add    esp,0xc
1004a0d9:	sub    eax,esi
1004a0db:	mov    cl,BYTE PTR [eax+ebx*1]
1004a0de:	mov    BYTE PTR [ebx],cl
1004a0e0:	inc    ebx
1004a0e1:	dec    ebp
1004a0e2:	jne    0x1004a0db
1004a0e4:	lea    ecx,[esi+0x11d]
1004a0ea:	mov    esi,0x100
1004a0ef:	mov    dl,BYTE PTR [ecx+eax*1]
1004a0f2:	mov    BYTE PTR [ecx],dl
1004a0f4:	inc    ecx
1004a0f5:	dec    esi
1004a0f6:	jne    0x1004a0ef
1004a0f8:	pop    edi
1004a0f9:	pop    esi
1004a0fa:	pop    ebp
1004a0fb:	pop    ebx
1004a0fc:	ret    
1004a0fd:	push   ebp
1004a0fe:	lea    ebp,[esp-0x49c]
1004a105:	sub    esp,0x51c
1004a10b:	mov    eax,ds:0x1007e030
1004a110:	xor    eax,ebp
1004a112:	mov    DWORD PTR [ebp+0x498],eax
1004a118:	push   ebx
1004a119:	push   edi
1004a11a:	lea    eax,[ebp-0x7c]
1004a11d:	push   eax
1004a11e:	push   DWORD PTR [esi+0x4]
1004a121:	call   DWORD PTR ds:0x100661dc
1004a127:	test   eax,eax
1004a129:	mov    edi,0x100
1004a12e:	je     0x1004a223
1004a134:	xor    eax,eax
1004a136:	mov    BYTE PTR [ebp+eax*1+0x398],al
1004a13d:	inc    eax
1004a13e:	cmp    eax,edi
1004a140:	jb     0x1004a136
1004a142:	mov    al,BYTE PTR [ebp-0x76]
1004a145:	test   al,al
1004a147:	mov    BYTE PTR [ebp+0x398],0x20
1004a14e:	je     0x1004a17b
1004a150:	lea    ebx,[ebp-0x75]
1004a153:	movzx  ecx,al
1004a156:	movzx  eax,BYTE PTR [ebx]
1004a159:	cmp    ecx,eax
1004a15b:	ja     0x1004a173
1004a15d:	sub    eax,ecx
1004a15f:	inc    eax
1004a160:	push   eax
1004a161:	lea    edx,[ebp+ecx*1+0x398]
1004a168:	push   0x20
1004a16a:	push   edx
1004a16b:	call   0x10045cf0
1004a170:	add    esp,0xc
1004a173:	inc    ebx
1004a174:	mov    al,BYTE PTR [ebx]
1004a176:	inc    ebx
1004a177:	test   al,al
1004a179:	jne    0x1004a153
1004a17b:	push   0x0
1004a17d:	push   DWORD PTR [esi+0xc]
1004a180:	lea    eax,[ebp-0x68]
1004a183:	push   DWORD PTR [esi+0x4]
1004a186:	push   eax
1004a187:	push   edi
1004a188:	lea    eax,[ebp+0x398]
1004a18e:	push   eax
1004a18f:	push   0x1
1004a191:	push   0x0
1004a193:	call   0x1004ef0d
1004a198:	xor    ebx,ebx
1004a19a:	push   ebx
1004a19b:	push   DWORD PTR [esi+0x4]
1004a19e:	lea    eax,[ebp+0x298]
1004a1a4:	push   edi
1004a1a5:	push   eax
1004a1a6:	push   edi
1004a1a7:	lea    eax,[ebp+0x398]
1004a1ad:	push   eax
1004a1ae:	push   edi
1004a1af:	push   DWORD PTR [esi+0xc]
1004a1b2:	push   ebx
1004a1b3:	call   0x1004b36c
1004a1b8:	add    esp,0x44
1004a1bb:	push   ebx
1004a1bc:	push   DWORD PTR [esi+0x4]
1004a1bf:	lea    eax,[ebp+0x198]
1004a1c5:	push   edi
1004a1c6:	push   eax
1004a1c7:	push   edi
1004a1c8:	lea    eax,[ebp+0x398]
1004a1ce:	push   eax
1004a1cf:	push   0x200
1004a1d4:	push   DWORD PTR [esi+0xc]
1004a1d7:	push   ebx
1004a1d8:	call   0x1004b36c
1004a1dd:	add    esp,0x24
1004a1e0:	xor    eax,eax
1004a1e2:	movzx  ecx,WORD PTR [ebp+eax*2-0x68]
1004a1e7:	test   cl,0x1
1004a1ea:	je     0x1004a1fa
1004a1ec:	or     BYTE PTR [esi+eax*1+0x1d],0x10
1004a1f1:	mov    cl,BYTE PTR [ebp+eax*1+0x298]
1004a1f8:	jmp    0x1004a20b
1004a1fa:	test   cl,0x2
1004a1fd:	je     0x1004a214
1004a1ff:	or     BYTE PTR [esi+eax*1+0x1d],0x20
1004a204:	mov    cl,BYTE PTR [ebp+eax*1+0x198]
1004a20b:	mov    BYTE PTR [esi+eax*1+0x11d],cl
1004a212:	jmp    0x1004a21c
1004a214:	mov    BYTE PTR [esi+eax*1+0x11d],0x0
1004a21c:	inc    eax
1004a21d:	cmp    eax,edi
1004a21f:	jb     0x1004a1e2
1004a221:	jmp    0x1004a270
1004a223:	lea    eax,[esi+0x11d]
1004a229:	mov    DWORD PTR [ebp-0x80],0xffffff9f
1004a230:	xor    ecx,ecx
1004a232:	sub    DWORD PTR [ebp-0x80],eax
1004a235:	mov    edx,DWORD PTR [ebp-0x80]
1004a238:	lea    eax,[esi+ecx*1+0x11d]
1004a23f:	add    edx,eax
1004a241:	lea    ebx,[edx+0x20]
1004a244:	cmp    ebx,0x19
1004a247:	ja     0x1004a255
1004a249:	or     BYTE PTR [esi+ecx*1+0x1d],0x10
1004a24e:	mov    dl,cl
1004a250:	add    dl,0x20
1004a253:	jmp    0x1004a264
1004a255:	cmp    edx,0x19
1004a258:	ja     0x1004a268
1004a25a:	or     BYTE PTR [esi+ecx*1+0x1d],0x20
1004a25f:	mov    dl,cl
1004a261:	sub    dl,0x20
1004a264:	mov    BYTE PTR [eax],dl
1004a266:	jmp    0x1004a26b
1004a268:	mov    BYTE PTR [eax],0x0
1004a26b:	inc    ecx
1004a26c:	cmp    ecx,edi
1004a26e:	jb     0x1004a235
1004a270:	mov    ecx,DWORD PTR [ebp+0x498]
1004a276:	pop    edi
1004a277:	xor    ecx,ebp
1004a279:	pop    ebx
1004a27a:	call   0x10042f87
1004a27f:	add    ebp,0x49c
1004a285:	leave  
1004a286:	ret    
1004a287:	push   0xc
1004a289:	push   0x10074870
1004a28e:	call   0x10046d84
1004a293:	call   0x100471ec
1004a298:	mov    edi,eax
1004a29a:	mov    eax,ds:0x1007e8c4
1004a29f:	test   DWORD PTR [edi+0x70],eax
1004a2a2:	je     0x1004a2c1
1004a2a4:	cmp    DWORD PTR [edi+0x6c],0x0
1004a2a8:	je     0x1004a2c1
1004a2aa:	mov    esi,DWORD PTR [edi+0x68]
1004a2ad:	test   esi,esi
1004a2af:	jne    0x1004a2b9
1004a2b1:	push   0x20
1004a2b3:	call   0x10047688
1004a2b8:	pop    ecx
1004a2b9:	mov    eax,esi
1004a2bb:	call   0x10046dc9
1004a2c0:	ret    
1004a2c1:	push   0xd
1004a2c3:	call   0x10047d8d
1004a2c8:	pop    ecx
1004a2c9:	and    DWORD PTR [ebp-0x4],0x0
1004a2cd:	mov    esi,DWORD PTR [edi+0x68]
1004a2d0:	mov    DWORD PTR [ebp-0x1c],esi
1004a2d3:	cmp    esi,DWORD PTR ds:0x1007e7c8
1004a2d9:	je     0x1004a311
1004a2db:	test   esi,esi
1004a2dd:	je     0x1004a2f9
1004a2df:	push   esi
1004a2e0:	call   DWORD PTR ds:0x100660ac
1004a2e6:	test   eax,eax
1004a2e8:	jne    0x1004a2f9
1004a2ea:	cmp    esi,0x1007e3a0
1004a2f0:	je     0x1004a2f9
1004a2f2:	push   esi
1004a2f3:	call   0x100435f8
1004a2f8:	pop    ecx
1004a2f9:	mov    eax,ds:0x1007e7c8
1004a2fe:	mov    DWORD PTR [edi+0x68],eax
1004a301:	mov    esi,DWORD PTR ds:0x1007e7c8
1004a307:	mov    DWORD PTR [ebp-0x1c],esi
1004a30a:	push   esi
1004a30b:	call   DWORD PTR ds:0x100660a4
1004a311:	mov    DWORD PTR [ebp-0x4],0xfffffffe
1004a318:	call   0x1004a322
1004a31d:	jmp    0x1004a2ad
1004a31f:	mov    esi,DWORD PTR [ebp-0x1c]
1004a322:	push   0xd
1004a324:	call   0x10047cb5
1004a329:	pop    ecx
1004a32a:	ret    
1004a32b:	push   ebp
1004a32c:	mov    ebp,esp
1004a32e:	sub    esp,0x10
1004a331:	push   ebx
1004a332:	xor    ebx,ebx
1004a334:	push   ebx
1004a335:	lea    ecx,[ebp-0x10]
1004a338:	call   0x100455d5
1004a33d:	cmp    esi,0xfffffffe
1004a340:	mov    DWORD PTR ds:0x100802ac,ebx
1004a346:	jne    0x1004a366
1004a348:	mov    DWORD PTR ds:0x100802ac,0x1
1004a352:	call   DWORD PTR ds:0x100661e4
1004a358:	cmp    BYTE PTR [ebp-0x4],bl
1004a35b:	je     0x1004a3a2
1004a35d:	mov    ecx,DWORD PTR [ebp-0x8]
1004a360:	and    DWORD PTR [ecx+0x70],0xfffffffd
1004a364:	jmp    0x1004a3a2
1004a366:	cmp    esi,0xfffffffd
1004a369:	jne    0x1004a37d
1004a36b:	mov    DWORD PTR ds:0x100802ac,0x1
1004a375:	call   DWORD PTR ds:0x100661e0
1004a37b:	jmp    0x1004a358
1004a37d:	cmp    esi,0xfffffffc
1004a380:	jne    0x1004a394
1004a382:	mov    eax,DWORD PTR [ebp-0x10]
1004a385:	mov    eax,DWORD PTR [eax+0x4]
1004a388:	mov    DWORD PTR ds:0x100802ac,0x1
1004a392:	jmp    0x1004a358
1004a394:	cmp    BYTE PTR [ebp-0x4],bl
1004a397:	je     0x1004a3a0
1004a399:	mov    eax,DWORD PTR [ebp-0x8]
1004a39c:	and    DWORD PTR [eax+0x70],0xfffffffd
1004a3a0:	mov    eax,esi
1004a3a2:	pop    ebx
1004a3a3:	leave  
1004a3a4:	ret    
1004a3a5:	push   ebp
1004a3a6:	mov    ebp,esp
1004a3a8:	sub    esp,0x20
1004a3ab:	mov    eax,ds:0x1007e030
1004a3b0:	xor    eax,ebp
1004a3b2:	mov    DWORD PTR [ebp-0x4],eax
1004a3b5:	push   ebx
1004a3b6:	mov    ebx,DWORD PTR [ebp+0xc]
1004a3b9:	push   esi
1004a3ba:	mov    esi,DWORD PTR [ebp+0x8]
1004a3bd:	push   edi
1004a3be:	call   0x1004a32b
1004a3c3:	mov    edi,eax
1004a3c5:	xor    esi,esi
1004a3c7:	cmp    edi,esi
1004a3c9:	mov    DWORD PTR [ebp+0x8],edi
1004a3cc:	jne    0x1004a3dc
1004a3ce:	mov    eax,ebx
1004a3d0:	call   0x1004a0a8
1004a3d5:	xor    eax,eax
1004a3d7:	jmp    0x1004a541
1004a3dc:	mov    DWORD PTR [ebp-0x1c],esi
1004a3df:	xor    eax,eax
1004a3e1:	cmp    DWORD PTR [eax+0x1007e7d0],edi
1004a3e7:	je     0x1004a450
1004a3e9:	inc    DWORD PTR [ebp-0x1c]
1004a3ec:	add    eax,0x30
1004a3ef:	cmp    eax,0xf0
1004a3f4:	jb     0x1004a3e1
1004a3f6:	lea    eax,[ebp-0x18]
1004a3f9:	push   eax
1004a3fa:	push   edi
1004a3fb:	call   DWORD PTR ds:0x100661dc
1004a401:	test   eax,eax
1004a403:	je     0x1004a532
1004a409:	push   0x101
1004a40e:	lea    eax,[ebx+0x1c]
1004a411:	push   esi
1004a412:	push   eax
1004a413:	call   0x10045cf0
1004a418:	xor    edx,edx
1004a41a:	inc    edx
1004a41b:	add    esp,0xc
1004a41e:	cmp    DWORD PTR [ebp-0x18],edx
1004a421:	mov    DWORD PTR [ebx+0x4],edi
1004a424:	mov    DWORD PTR [ebx+0xc],esi
1004a427:	jbe    0x1004a525
1004a42d:	cmp    BYTE PTR [ebp-0x12],0x0
1004a431:	je     0x1004a506
1004a437:	lea    esi,[ebp-0x11]
1004a43a:	mov    cl,BYTE PTR [esi]
1004a43c:	test   cl,cl
1004a43e:	je     0x1004a506
1004a444:	movzx  eax,BYTE PTR [esi-0x1]
1004a448:	movzx  ecx,cl
1004a44b:	jmp    0x1004a4f6
1004a450:	push   0x101
1004a455:	lea    eax,[ebx+0x1c]
1004a458:	push   esi
1004a459:	push   eax
1004a45a:	call   0x10045cf0
1004a45f:	mov    ecx,DWORD PTR [ebp-0x1c]
1004a462:	add    esp,0xc
1004a465:	imul   ecx,ecx,0x30
1004a468:	mov    DWORD PTR [ebp-0x20],esi
1004a46b:	lea    esi,[ecx+0x1007e7e0]
1004a471:	mov    DWORD PTR [ebp-0x1c],esi
1004a474:	jmp    0x1004a4a0
1004a476:	mov    al,BYTE PTR [esi+0x1]
1004a479:	test   al,al
1004a47b:	je     0x1004a4a5
1004a47d:	movzx  edi,BYTE PTR [esi]
1004a480:	movzx  eax,al
1004a483:	jmp    0x1004a497
1004a485:	mov    eax,DWORD PTR [ebp-0x20]
1004a488:	mov    al,BYTE PTR [eax+0x1007e7cc]
1004a48e:	or     BYTE PTR [ebx+edi*1+0x1d],al
1004a492:	movzx  eax,BYTE PTR [esi+0x1]
1004a496:	inc    edi
1004a497:	cmp    edi,eax
1004a499:	jbe    0x1004a485
1004a49b:	mov    edi,DWORD PTR [ebp+0x8]
1004a49e:	inc    esi
1004a49f:	inc    esi
1004a4a0:	cmp    BYTE PTR [esi],0x0
1004a4a3:	jne    0x1004a476
1004a4a5:	mov    esi,DWORD PTR [ebp-0x1c]
1004a4a8:	inc    DWORD PTR [ebp-0x20]
1004a4ab:	add    esi,0x8
1004a4ae:	cmp    DWORD PTR [ebp-0x20],0x4
1004a4b2:	mov    DWORD PTR [ebp-0x1c],esi
1004a4b5:	jb     0x1004a4a0
1004a4b7:	mov    eax,edi
1004a4b9:	mov    DWORD PTR [ebx+0x4],edi
1004a4bc:	mov    DWORD PTR [ebx+0x8],0x1
1004a4c3:	call   0x1004a079
1004a4c8:	push   0x6
1004a4ca:	mov    DWORD PTR [ebx+0xc],eax
1004a4cd:	lea    eax,[ebx+0x10]
1004a4d0:	lea    ecx,[ecx+0x1007e7d4]
1004a4d6:	pop    edx
1004a4d7:	mov    si,WORD PTR [ecx]
1004a4da:	inc    ecx
1004a4db:	mov    WORD PTR [eax],si
1004a4de:	inc    ecx
1004a4df:	inc    eax
1004a4e0:	inc    eax
1004a4e1:	dec    edx
1004a4e2:	jne    0x1004a4d7
1004a4e4:	mov    esi,ebx
1004a4e6:	call   0x1004a0fd
1004a4eb:	jmp    0x1004a3d5
1004a4f0:	or     BYTE PTR [ebx+eax*1+0x1d],0x4
1004a4f5:	inc    eax
1004a4f6:	cmp    eax,ecx
1004a4f8:	jbe    0x1004a4f0
1004a4fa:	inc    esi
1004a4fb:	inc    esi
1004a4fc:	cmp    BYTE PTR [esi-0x1],0x0
1004a500:	jne    0x1004a43a
1004a506:	lea    eax,[ebx+0x1e]
1004a509:	mov    ecx,0xfe
1004a50e:	or     BYTE PTR [eax],0x8
1004a511:	inc    eax
1004a512:	dec    ecx
1004a513:	jne    0x1004a50e
1004a515:	mov    eax,DWORD PTR [ebx+0x4]
1004a518:	call   0x1004a079
1004a51d:	mov    DWORD PTR [ebx+0xc],eax
1004a520:	mov    DWORD PTR [ebx+0x8],edx
1004a523:	jmp    0x1004a528
1004a525:	mov    DWORD PTR [ebx+0x8],esi
1004a528:	xor    eax,eax
1004a52a:	lea    edi,[ebx+0x10]
1004a52d:	stos   DWORD PTR es:[edi],eax
1004a52e:	stos   DWORD PTR es:[edi],eax
1004a52f:	stos   DWORD PTR es:[edi],eax
1004a530:	jmp    0x1004a4e4
1004a532:	cmp    DWORD PTR ds:0x100802ac,esi
1004a538:	jne    0x1004a3ce
1004a53e:	or     eax,0xffffffff
1004a541:	mov    ecx,DWORD PTR [ebp-0x4]
1004a544:	pop    edi
1004a545:	pop    esi
1004a546:	xor    ecx,ebp
1004a548:	pop    ebx
1004a549:	call   0x10042f87
1004a54e:	leave  
1004a54f:	ret    
1004a550:	push   0x14
1004a552:	push   0x10074890
1004a557:	call   0x10046d84
1004a55c:	or     DWORD PTR [ebp-0x20],0xffffffff
1004a560:	call   0x100471ec
1004a565:	mov    edi,eax
1004a567:	mov    DWORD PTR [ebp-0x24],edi
1004a56a:	call   0x1004a287
1004a56f:	mov    ebx,DWORD PTR [edi+0x68]
1004a572:	mov    esi,DWORD PTR [ebp+0x8]
1004a575:	call   0x1004a32b
1004a57a:	mov    DWORD PTR [ebp+0x8],eax
1004a57d:	cmp    eax,DWORD PTR [ebx+0x4]
1004a580:	je     0x1004a6dd
1004a586:	push   0x220
1004a58b:	call   0x10047512
1004a590:	pop    ecx
1004a591:	mov    ebx,eax
1004a593:	test   ebx,ebx
1004a595:	je     0x1004a6e1
1004a59b:	mov    ecx,0x88
1004a5a0:	mov    esi,DWORD PTR [edi+0x68]
1004a5a3:	mov    edi,ebx
1004a5a5:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
1004a5a7:	and    DWORD PTR [ebx],0x0
1004a5aa:	push   ebx
1004a5ab:	push   DWORD PTR [ebp+0x8]
1004a5ae:	call   0x1004a3a5
1004a5b3:	pop    ecx
1004a5b4:	pop    ecx
1004a5b5:	mov    DWORD PTR [ebp-0x20],eax
1004a5b8:	test   eax,eax
1004a5ba:	jne    0x1004a6bc
1004a5c0:	mov    esi,DWORD PTR [ebp-0x24]
1004a5c3:	push   DWORD PTR [esi+0x68]
1004a5c6:	call   DWORD PTR ds:0x100660ac
1004a5cc:	test   eax,eax
1004a5ce:	jne    0x1004a5e1
1004a5d0:	mov    eax,DWORD PTR [esi+0x68]
1004a5d3:	cmp    eax,0x1007e3a0
1004a5d8:	je     0x1004a5e1
1004a5da:	push   eax
1004a5db:	call   0x100435f8
1004a5e0:	pop    ecx
1004a5e1:	mov    DWORD PTR [esi+0x68],ebx
1004a5e4:	push   ebx
1004a5e5:	mov    edi,DWORD PTR ds:0x100660a4
1004a5eb:	call   edi
1004a5ed:	test   BYTE PTR [esi+0x70],0x2
1004a5f1:	jne    0x1004a6e1
1004a5f7:	test   BYTE PTR ds:0x1007e8c4,0x1
1004a5fe:	jne    0x1004a6e1
1004a604:	push   0xd
1004a606:	call   0x10047d8d
1004a60b:	pop    ecx
1004a60c:	and    DWORD PTR [ebp-0x4],0x0
1004a610:	mov    eax,DWORD PTR [ebx+0x4]
1004a613:	mov    ds:0x100802bc,eax
1004a618:	mov    eax,DWORD PTR [ebx+0x8]
1004a61b:	mov    ds:0x100802c0,eax
1004a620:	mov    eax,DWORD PTR [ebx+0xc]
1004a623:	mov    ds:0x100802c4,eax
1004a628:	xor    eax,eax
1004a62a:	mov    DWORD PTR [ebp-0x1c],eax
1004a62d:	cmp    eax,0x5
1004a630:	jge    0x1004a642
1004a632:	mov    cx,WORD PTR [ebx+eax*2+0x10]
1004a637:	mov    WORD PTR [eax*2+0x100802b0],cx
1004a63f:	inc    eax
1004a640:	jmp    0x1004a62a
1004a642:	xor    eax,eax
1004a644:	mov    DWORD PTR [ebp-0x1c],eax
1004a647:	cmp    eax,0x101
1004a64c:	jge    0x1004a65b
1004a64e:	mov    cl,BYTE PTR [eax+ebx*1+0x1c]
1004a652:	mov    BYTE PTR [eax+0x1007e5c0],cl
1004a658:	inc    eax
1004a659:	jmp    0x1004a644
1004a65b:	xor    eax,eax
1004a65d:	mov    DWORD PTR [ebp-0x1c],eax
1004a660:	cmp    eax,0x100
1004a665:	jge    0x1004a677
1004a667:	mov    cl,BYTE PTR [eax+ebx*1+0x11d]
1004a66e:	mov    BYTE PTR [eax+0x1007e6c8],cl
1004a674:	inc    eax
1004a675:	jmp    0x1004a65d
1004a677:	push   DWORD PTR ds:0x1007e7c8
1004a67d:	call   DWORD PTR ds:0x100660ac
1004a683:	test   eax,eax
1004a685:	jne    0x1004a69a
1004a687:	mov    eax,ds:0x1007e7c8
1004a68c:	cmp    eax,0x1007e3a0
1004a691:	je     0x1004a69a
1004a693:	push   eax
1004a694:	call   0x100435f8
1004a699:	pop    ecx
1004a69a:	mov    DWORD PTR ds:0x1007e7c8,ebx
1004a6a0:	push   ebx
1004a6a1:	call   edi
1004a6a3:	mov    DWORD PTR [ebp-0x4],0xfffffffe
1004a6aa:	call   0x1004a6b1
1004a6af:	jmp    0x1004a6e1
1004a6b1:	push   0xd
1004a6b3:	call   0x10047cb5
1004a6b8:	pop    ecx
1004a6b9:	ret    
1004a6ba:	jmp    0x1004a6e1
1004a6bc:	cmp    eax,0xffffffff
1004a6bf:	jne    0x1004a6e1
1004a6c1:	cmp    ebx,0x1007e3a0
1004a6c7:	je     0x1004a6d0
1004a6c9:	push   ebx
1004a6ca:	call   0x100435f8
1004a6cf:	pop    ecx
1004a6d0:	call   0x10046c45
1004a6d5:	mov    DWORD PTR [eax],0x16
1004a6db:	jmp    0x1004a6e1
1004a6dd:	and    DWORD PTR [ebp-0x20],0x0
1004a6e1:	mov    eax,DWORD PTR [ebp-0x20]
1004a6e4:	call   0x10046dc9
1004a6e9:	ret    
1004a6ea:	cmp    DWORD PTR ds:0x100825b4,0x0
1004a6f1:	jne    0x1004a705
1004a6f3:	push   0xfffffffd
1004a6f5:	call   0x1004a550
1004a6fa:	pop    ecx
1004a6fb:	mov    DWORD PTR ds:0x100825b4,0x1
1004a705:	xor    eax,eax
1004a707:	ret    
1004a708:	push   ebx
1004a709:	push   ebp
1004a70a:	push   esi
1004a70b:	mov    esi,DWORD PTR [esp+0x10]
1004a70f:	mov    eax,DWORD PTR [esi+0xbc]
1004a715:	xor    ebp,ebp
1004a717:	cmp    eax,ebp
1004a719:	push   edi
1004a71a:	je     0x1004a78b
1004a71c:	cmp    eax,0x1007edf8
1004a721:	je     0x1004a78b
1004a723:	mov    eax,DWORD PTR [esi+0xb0]
1004a729:	cmp    eax,ebp
1004a72b:	je     0x1004a78b
1004a72d:	cmp    DWORD PTR [eax],ebp
1004a72f:	jne    0x1004a78b
1004a731:	mov    eax,DWORD PTR [esi+0xb8]
1004a737:	cmp    eax,ebp
1004a739:	je     0x1004a752
1004a73b:	cmp    DWORD PTR [eax],ebp
1004a73d:	jne    0x1004a752
1004a73f:	push   eax
1004a740:	call   0x100435f8
1004a745:	push   DWORD PTR [esi+0xbc]
1004a74b:	call   0x1004f11d
1004a750:	pop    ecx
1004a751:	pop    ecx
1004a752:	mov    eax,DWORD PTR [esi+0xb4]
1004a758:	cmp    eax,ebp
1004a75a:	je     0x1004a773
1004a75c:	cmp    DWORD PTR [eax],ebp
1004a75e:	jne    0x1004a773
1004a760:	push   eax
1004a761:	call   0x100435f8
1004a766:	push   DWORD PTR [esi+0xbc]
1004a76c:	call   0x1004f0dd
1004a771:	pop    ecx
1004a772:	pop    ecx
1004a773:	push   DWORD PTR [esi+0xb0]
1004a779:	call   0x100435f8
1004a77e:	push   DWORD PTR [esi+0xbc]
1004a784:	call   0x100435f8
1004a789:	pop    ecx
1004a78a:	pop    ecx
1004a78b:	mov    eax,DWORD PTR [esi+0xc0]
1004a791:	cmp    eax,ebp
1004a793:	je     0x1004a7d9
1004a795:	cmp    DWORD PTR [eax],ebp
1004a797:	jne    0x1004a7d9
1004a799:	mov    eax,DWORD PTR [esi+0xc4]
1004a79f:	sub    eax,0xfe
1004a7a4:	push   eax
1004a7a5:	call   0x100435f8
1004a7aa:	mov    eax,DWORD PTR [esi+0xcc]
1004a7b0:	mov    edi,0x80
1004a7b5:	sub    eax,edi
1004a7b7:	push   eax
1004a7b8:	call   0x100435f8
1004a7bd:	mov    eax,DWORD PTR [esi+0xd0]
1004a7c3:	sub    eax,edi
1004a7c5:	push   eax
1004a7c6:	call   0x100435f8
1004a7cb:	push   DWORD PTR [esi+0xc0]
1004a7d1:	call   0x100435f8
1004a7d6:	add    esp,0x10
1004a7d9:	lea    edi,[esi+0xd4]
1004a7df:	mov    eax,DWORD PTR [edi]
1004a7e1:	cmp    eax,0x1007ed38
1004a7e6:	je     0x1004a7ff
1004a7e8:	cmp    DWORD PTR [eax+0xb4],ebp
1004a7ee:	jne    0x1004a7ff
1004a7f0:	push   eax
1004a7f1:	call   0x1004ef4d
1004a7f6:	push   DWORD PTR [edi]
1004a7f8:	call   0x100435f8
1004a7fd:	pop    ecx
1004a7fe:	pop    ecx
1004a7ff:	push   0x6
1004a801:	lea    edi,[esi+0x50]
1004a804:	pop    ebx
1004a805:	cmp    DWORD PTR [edi-0x8],0x1007e8c8
1004a80c:	je     0x1004a81f
1004a80e:	mov    eax,DWORD PTR [edi]
1004a810:	cmp    eax,ebp
1004a812:	je     0x1004a81f
1004a814:	cmp    DWORD PTR [eax],ebp
1004a816:	jne    0x1004a81f
1004a818:	push   eax
1004a819:	call   0x100435f8
1004a81e:	pop    ecx
1004a81f:	cmp    DWORD PTR [edi-0x4],ebp
1004a822:	je     0x1004a836
1004a824:	mov    eax,DWORD PTR [edi+0x4]
1004a827:	cmp    eax,ebp
1004a829:	je     0x1004a836
1004a82b:	cmp    DWORD PTR [eax],ebp
1004a82d:	jne    0x1004a836
1004a82f:	push   eax
1004a830:	call   0x100435f8
1004a835:	pop    ecx
1004a836:	add    edi,0x10
1004a839:	dec    ebx
1004a83a:	jne    0x1004a805
1004a83c:	push   esi
1004a83d:	call   0x100435f8
1004a842:	pop    ecx
1004a843:	pop    edi
1004a844:	pop    esi
1004a845:	pop    ebp
1004a846:	pop    ebx
1004a847:	ret    
1004a848:	push   ebx
1004a849:	push   ebp
1004a84a:	push   esi
1004a84b:	mov    esi,DWORD PTR [esp+0x10]
1004a84f:	push   edi
1004a850:	mov    edi,DWORD PTR ds:0x100660a4
1004a856:	push   esi
1004a857:	call   edi
1004a859:	mov    eax,DWORD PTR [esi+0xb0]
1004a85f:	test   eax,eax
1004a861:	je     0x1004a866
1004a863:	push   eax
1004a864:	call   edi
1004a866:	mov    eax,DWORD PTR [esi+0xb8]
1004a86c:	test   eax,eax
1004a86e:	je     0x1004a873
1004a870:	push   eax
1004a871:	call   edi
1004a873:	mov    eax,DWORD PTR [esi+0xb4]
1004a879:	test   eax,eax
1004a87b:	je     0x1004a880
1004a87d:	push   eax
1004a87e:	call   edi
1004a880:	mov    eax,DWORD PTR [esi+0xc0]
1004a886:	test   eax,eax
1004a888:	je     0x1004a88d
1004a88a:	push   eax
1004a88b:	call   edi
1004a88d:	push   0x6
1004a88f:	lea    ebx,[esi+0x50]
1004a892:	pop    ebp
1004a893:	cmp    DWORD PTR [ebx-0x8],0x1007e8c8
1004a89a:	je     0x1004a8a5
1004a89c:	mov    eax,DWORD PTR [ebx]
1004a89e:	test   eax,eax
1004a8a0:	je     0x1004a8a5
1004a8a2:	push   eax
1004a8a3:	call   edi
1004a8a5:	cmp    DWORD PTR [ebx-0x4],0x0
1004a8a9:	je     0x1004a8b5
1004a8ab:	mov    eax,DWORD PTR [ebx+0x4]
1004a8ae:	test   eax,eax
1004a8b0:	je     0x1004a8b5
1004a8b2:	push   eax
1004a8b3:	call   edi
1004a8b5:	add    ebx,0x10
1004a8b8:	dec    ebp
1004a8b9:	jne    0x1004a893
1004a8bb:	mov    eax,DWORD PTR [esi+0xd4]
1004a8c1:	add    eax,0xb4
1004a8c6:	push   eax
1004a8c7:	call   edi
1004a8c9:	pop    edi
1004a8ca:	pop    esi
1004a8cb:	pop    ebp
1004a8cc:	pop    ebx
1004a8cd:	ret    
1004a8ce:	push   esi
1004a8cf:	mov    esi,DWORD PTR [esp+0x8]
1004a8d3:	test   esi,esi
1004a8d5:	je     0x1004a956
1004a8d7:	push   ebx
1004a8d8:	push   ebp
1004a8d9:	push   edi
1004a8da:	mov    edi,DWORD PTR ds:0x100660ac
1004a8e0:	push   esi
1004a8e1:	call   edi
1004a8e3:	mov    eax,DWORD PTR [esi+0xb0]
1004a8e9:	test   eax,eax
1004a8eb:	je     0x1004a8f0
1004a8ed:	push   eax
1004a8ee:	call   edi
1004a8f0:	mov    eax,DWORD PTR [esi+0xb8]
1004a8f6:	test   eax,eax
1004a8f8:	je     0x1004a8fd
1004a8fa:	push   eax
1004a8fb:	call   edi
1004a8fd:	mov    eax,DWORD PTR [esi+0xb4]
1004a903:	test   eax,eax
1004a905:	je     0x1004a90a
1004a907:	push   eax
1004a908:	call   edi
1004a90a:	mov    eax,DWORD PTR [esi+0xc0]
1004a910:	test   eax,eax
1004a912:	je     0x1004a917
1004a914:	push   eax
1004a915:	call   edi
1004a917:	push   0x6
1004a919:	lea    ebx,[esi+0x50]
1004a91c:	pop    ebp
1004a91d:	cmp    DWORD PTR [ebx-0x8],0x1007e8c8
1004a924:	je     0x1004a92f
1004a926:	mov    eax,DWORD PTR [ebx]
1004a928:	test   eax,eax
1004a92a:	je     0x1004a92f
1004a92c:	push   eax
1004a92d:	call   edi
1004a92f:	cmp    DWORD PTR [ebx-0x4],0x0
1004a933:	je     0x1004a93f
1004a935:	mov    eax,DWORD PTR [ebx+0x4]
1004a938:	test   eax,eax
1004a93a:	je     0x1004a93f
1004a93c:	push   eax
1004a93d:	call   edi
1004a93f:	add    ebx,0x10
1004a942:	dec    ebp
1004a943:	jne    0x1004a91d
1004a945:	mov    eax,DWORD PTR [esi+0xd4]
1004a94b:	add    eax,0xb4
1004a950:	push   eax
1004a951:	call   edi
1004a953:	pop    edi
1004a954:	pop    ebp
1004a955:	pop    ebx
1004a956:	mov    eax,esi
1004a958:	pop    esi
1004a959:	ret    
1004a95a:	test   edi,edi
1004a95c:	je     0x1004a995
1004a95e:	test   eax,eax
1004a960:	je     0x1004a995
1004a962:	push   esi
1004a963:	mov    esi,DWORD PTR [eax]
1004a965:	cmp    esi,edi
1004a967:	je     0x1004a991
1004a969:	push   edi
1004a96a:	mov    DWORD PTR [eax],edi
1004a96c:	call   0x1004a848
1004a971:	test   esi,esi
1004a973:	pop    ecx
1004a974:	je     0x1004a991
1004a976:	push   esi
1004a977:	call   0x1004a8ce
1004a97c:	cmp    DWORD PTR [esi],0x0
1004a97f:	pop    ecx
1004a980:	jne    0x1004a991
1004a982:	cmp    esi,0x1007e8d0
1004a988:	je     0x1004a991
1004a98a:	push   esi
1004a98b:	call   0x1004a708
1004a990:	pop    ecx
1004a991:	mov    eax,edi
1004a993:	pop    esi
1004a994:	ret    
1004a995:	xor    eax,eax
1004a997:	ret    
1004a998:	push   0xc
1004a99a:	push   0x100748b0
1004a99f:	call   0x10046d84
1004a9a4:	call   0x100471ec
1004a9a9:	mov    esi,eax
1004a9ab:	mov    eax,ds:0x1007e8c4
1004a9b0:	test   DWORD PTR [esi+0x70],eax
1004a9b3:	je     0x1004a9d7
1004a9b5:	cmp    DWORD PTR [esi+0x6c],0x0
1004a9b9:	je     0x1004a9d7
1004a9bb:	call   0x100471ec
1004a9c0:	mov    esi,DWORD PTR [eax+0x6c]
1004a9c3:	test   esi,esi
1004a9c5:	jne    0x1004a9cf
1004a9c7:	push   0x20
1004a9c9:	call   0x10047688
1004a9ce:	pop    ecx
1004a9cf:	mov    eax,esi
1004a9d1:	call   0x10046dc9
1004a9d6:	ret    
1004a9d7:	push   0xc
1004a9d9:	call   0x10047d8d
1004a9de:	pop    ecx
1004a9df:	and    DWORD PTR [ebp-0x4],0x0
1004a9e3:	lea    eax,[esi+0x6c]
1004a9e6:	mov    edi,DWORD PTR ds:0x1007e9a8
1004a9ec:	call   0x1004a95a
1004a9f1:	mov    DWORD PTR [ebp-0x1c],eax
1004a9f4:	mov    DWORD PTR [ebp-0x4],0xfffffffe
1004a9fb:	call   0x1004aa02
1004aa00:	jmp    0x1004a9c3
1004aa02:	push   0xc
1004aa04:	call   0x10047cb5
1004aa09:	pop    ecx
1004aa0a:	mov    esi,DWORD PTR [ebp-0x1c]
1004aa0d:	ret    
1004aa0e:	int3   
1004aa0f:	int3   
1004aa10:	lea    eax,[edx-0x1]
1004aa13:	pop    ebx
1004aa14:	ret    
1004aa15:	lea    esp,[esp+0x0]
1004aa1c:	lea    esp,[esp+0x0]
1004aa20:	xor    eax,eax
1004aa22:	mov    al,BYTE PTR [esp+0x8]
1004aa26:	push   ebx
1004aa27:	mov    ebx,eax
1004aa29:	shl    eax,0x8
1004aa2c:	mov    edx,DWORD PTR [esp+0x8]
1004aa30:	test   edx,0x3
1004aa36:	je     0x1004aa4d
1004aa38:	mov    cl,BYTE PTR [edx]
1004aa3a:	add    edx,0x1
1004aa3d:	cmp    cl,bl
1004aa3f:	je     0x1004aa10
1004aa41:	test   cl,cl
1004aa43:	je     0x1004aa96
1004aa45:	test   edx,0x3
1004aa4b:	jne    0x1004aa38
1004aa4d:	or     ebx,eax
1004aa4f:	push   edi
1004aa50:	mov    eax,ebx
1004aa52:	shl    ebx,0x10
1004aa55:	push   esi
1004aa56:	or     ebx,eax
1004aa58:	mov    ecx,DWORD PTR [edx]
1004aa5a:	mov    edi,0x7efefeff
1004aa5f:	mov    eax,ecx
1004aa61:	mov    esi,edi
1004aa63:	xor    ecx,ebx
1004aa65:	add    esi,eax
1004aa67:	add    edi,ecx
1004aa69:	xor    ecx,0xffffffff
1004aa6c:	xor    eax,0xffffffff
1004aa6f:	xor    ecx,edi
1004aa71:	xor    eax,esi
1004aa73:	add    edx,0x4
1004aa76:	and    ecx,0x81010100
1004aa7c:	jne    0x1004aa9a
1004aa7e:	and    eax,0x81010100
1004aa83:	je     0x1004aa58
1004aa85:	and    eax,0x1010100
1004aa8a:	jne    0x1004aa94
1004aa8c:	and    esi,0x80000000
1004aa92:	jne    0x1004aa58
1004aa94:	pop    esi
1004aa95:	pop    edi
1004aa96:	pop    ebx
1004aa97:	xor    eax,eax
1004aa99:	ret    
1004aa9a:	mov    eax,DWORD PTR [edx-0x4]
1004aa9d:	cmp    al,bl
1004aa9f:	je     0x1004aad7
1004aaa1:	test   al,al
1004aaa3:	je     0x1004aa94
1004aaa5:	cmp    ah,bl
1004aaa7:	je     0x1004aad0
1004aaa9:	test   ah,ah
1004aaab:	je     0x1004aa94
1004aaad:	shr    eax,0x10
1004aab0:	cmp    al,bl
1004aab2:	je     0x1004aac9
1004aab4:	test   al,al
1004aab6:	je     0x1004aa94
1004aab8:	cmp    ah,bl
1004aaba:	je     0x1004aac2
1004aabc:	test   ah,ah
1004aabe:	je     0x1004aa94
1004aac0:	jmp    0x1004aa58
1004aac2:	pop    esi
1004aac3:	pop    edi
1004aac4:	lea    eax,[edx-0x1]
1004aac7:	pop    ebx
1004aac8:	ret    
1004aac9:	lea    eax,[edx-0x2]
1004aacc:	pop    esi
1004aacd:	pop    edi
1004aace:	pop    ebx
1004aacf:	ret    
1004aad0:	lea    eax,[edx-0x3]
1004aad3:	pop    esi
1004aad4:	pop    edi
1004aad5:	pop    ebx
1004aad6:	ret    
1004aad7:	lea    eax,[edx-0x4]
1004aada:	pop    esi
1004aadb:	pop    edi
1004aadc:	pop    ebx
1004aadd:	ret    
1004aade:	int3   
1004aadf:	int3   
1004aae0:	push   esi
1004aae1:	mov    eax,DWORD PTR [esp+0x14]
1004aae5:	or     eax,eax
1004aae7:	jne    0x1004ab11
1004aae9:	mov    ecx,DWORD PTR [esp+0x10]
1004aaed:	mov    eax,DWORD PTR [esp+0xc]
1004aaf1:	xor    edx,edx
1004aaf3:	div    ecx
1004aaf5:	mov    ebx,eax
1004aaf7:	mov    eax,DWORD PTR [esp+0x8]
1004aafb:	div    ecx
1004aafd:	mov    esi,eax
1004aaff:	mov    eax,ebx
1004ab01:	mul    DWORD PTR [esp+0x10]
1004ab05:	mov    ecx,eax
1004ab07:	mov    eax,esi
1004ab09:	mul    DWORD PTR [esp+0x10]
1004ab0d:	add    edx,ecx
1004ab0f:	jmp    0x1004ab58
1004ab11:	mov    ecx,eax
1004ab13:	mov    ebx,DWORD PTR [esp+0x10]
1004ab17:	mov    edx,DWORD PTR [esp+0xc]
1004ab1b:	mov    eax,DWORD PTR [esp+0x8]
1004ab1f:	shr    ecx,1
1004ab21:	rcr    ebx,1
1004ab23:	shr    edx,1
1004ab25:	rcr    eax,1
1004ab27:	or     ecx,ecx
1004ab29:	jne    0x1004ab1f
1004ab2b:	div    ebx
1004ab2d:	mov    esi,eax
1004ab2f:	mul    DWORD PTR [esp+0x14]
1004ab33:	mov    ecx,eax
1004ab35:	mov    eax,DWORD PTR [esp+0x10]
1004ab39:	mul    esi
1004ab3b:	add    edx,ecx
1004ab3d:	jb     0x1004ab4d
1004ab3f:	cmp    edx,DWORD PTR [esp+0xc]
1004ab43:	ja     0x1004ab4d
1004ab45:	jb     0x1004ab56
1004ab47:	cmp    eax,DWORD PTR [esp+0x8]
1004ab4b:	jbe    0x1004ab56
1004ab4d:	dec    esi
1004ab4e:	sub    eax,DWORD PTR [esp+0x10]
1004ab52:	sbb    edx,DWORD PTR [esp+0x14]
1004ab56:	xor    ebx,ebx
1004ab58:	sub    eax,DWORD PTR [esp+0x8]
1004ab5c:	sbb    edx,DWORD PTR [esp+0xc]
1004ab60:	neg    edx
1004ab62:	neg    eax
1004ab64:	sbb    edx,0x0
1004ab67:	mov    ecx,edx
1004ab69:	mov    edx,ebx
1004ab6b:	mov    ebx,ecx
1004ab6d:	mov    ecx,eax
1004ab6f:	mov    eax,esi
1004ab71:	pop    esi
1004ab72:	ret    0x10
1004ab75:	push   ebp
1004ab76:	mov    ebp,esp
1004ab78:	sub    esp,0x4
1004ab7b:	mov    DWORD PTR [ebp-0x4],edi
1004ab7e:	mov    edi,DWORD PTR [ebp+0x8]
1004ab81:	mov    ecx,DWORD PTR [ebp+0xc]
1004ab84:	shr    ecx,0x7
1004ab87:	pxor   xmm0,xmm0
1004ab8b:	jmp    0x1004ab95
1004ab8d:	lea    esp,[esp+0x0]
1004ab94:	nop
1004ab95:	movdqa XMMWORD PTR [edi],xmm0
1004ab99:	movdqa XMMWORD PTR [edi+0x10],xmm0
1004ab9e:	movdqa XMMWORD PTR [edi+0x20],xmm0
1004aba3:	movdqa XMMWORD PTR [edi+0x30],xmm0
1004aba8:	movdqa XMMWORD PTR [edi+0x40],xmm0
1004abad:	movdqa XMMWORD PTR [edi+0x50],xmm0
1004abb2:	movdqa XMMWORD PTR [edi+0x60],xmm0
1004abb7:	movdqa XMMWORD PTR [edi+0x70],xmm0
1004abbc:	lea    edi,[edi+0x80]
1004abc2:	dec    ecx
1004abc3:	jne    0x1004ab95
1004abc5:	mov    edi,DWORD PTR [ebp-0x4]
1004abc8:	mov    esp,ebp
1004abca:	pop    ebp
1004abcb:	ret    
1004abcc:	push   ebp
1004abcd:	mov    ebp,esp
1004abcf:	sub    esp,0x10
1004abd2:	mov    DWORD PTR [ebp-0x4],edi
1004abd5:	mov    eax,DWORD PTR [ebp+0x8]
1004abd8:	cdq    
1004abd9:	mov    edi,eax
1004abdb:	xor    edi,edx
1004abdd:	sub    edi,edx
1004abdf:	and    edi,0xf
1004abe2:	xor    edi,edx
1004abe4:	sub    edi,edx
1004abe6:	test   edi,edi
1004abe8:	jne    0x1004ac26
1004abea:	mov    ecx,DWORD PTR [ebp+0x10]
1004abed:	mov    edx,ecx
1004abef:	and    edx,0x7f
1004abf2:	mov    DWORD PTR [ebp-0xc],edx
1004abf5:	cmp    ecx,edx
1004abf7:	je     0x1004ac0b
1004abf9:	sub    ecx,edx
1004abfb:	push   ecx
1004abfc:	push   eax
1004abfd:	call   0x1004ab75
1004ac02:	add    esp,0x8
1004ac05:	mov    eax,DWORD PTR [ebp+0x8]
1004ac08:	mov    edx,DWORD PTR [ebp-0xc]
1004ac0b:	test   edx,edx
1004ac0d:	je     0x1004ac54
1004ac0f:	add    eax,DWORD PTR [ebp+0x10]
1004ac12:	sub    eax,edx
1004ac14:	mov    DWORD PTR [ebp-0x8],eax
1004ac17:	xor    eax,eax
1004ac19:	mov    edi,DWORD PTR [ebp-0x8]
1004ac1c:	mov    ecx,DWORD PTR [ebp-0xc]
1004ac1f:	rep stos BYTE PTR es:[edi],al
1004ac21:	mov    eax,DWORD PTR [ebp+0x8]
1004ac24:	jmp    0x1004ac54
1004ac26:	neg    edi
1004ac28:	add    edi,0x10
1004ac2b:	mov    DWORD PTR [ebp-0x10],edi
1004ac2e:	xor    eax,eax
1004ac30:	mov    edi,DWORD PTR [ebp+0x8]
1004ac33:	mov    ecx,DWORD PTR [ebp-0x10]
1004ac36:	rep stos BYTE PTR es:[edi],al
1004ac38:	mov    eax,DWORD PTR [ebp-0x10]
1004ac3b:	mov    ecx,DWORD PTR [ebp+0x8]
1004ac3e:	mov    edx,DWORD PTR [ebp+0x10]
1004ac41:	add    ecx,eax
1004ac43:	sub    edx,eax
1004ac45:	push   edx
1004ac46:	push   0x0
1004ac48:	push   ecx
1004ac49:	call   0x1004abcc
1004ac4e:	add    esp,0xc
1004ac51:	mov    eax,DWORD PTR [ebp+0x8]
1004ac54:	mov    edi,DWORD PTR [ebp-0x4]
1004ac57:	mov    esp,ebp
1004ac59:	pop    ebp
1004ac5a:	ret    
1004ac5b:	push   ebp
1004ac5c:	lea    ebp,[esp-0x2a8]
1004ac63:	sub    esp,0x328
1004ac69:	mov    eax,ds:0x1007e030
1004ac6e:	xor    eax,ebp
1004ac70:	mov    DWORD PTR [ebp+0x2a4],eax
1004ac76:	test   BYTE PTR ds:0x1007e9c0,0x1
1004ac7d:	push   esi
1004ac7e:	je     0x1004ac88
1004ac80:	push   0xa
1004ac82:	call   0x10049cea
1004ac87:	pop    ecx
1004ac88:	call   0x1004c4aa
1004ac8d:	test   eax,eax
1004ac8f:	je     0x1004ac99
1004ac91:	push   0x16
1004ac93:	call   0x1004c4b7
1004ac98:	pop    ecx
1004ac99:	test   BYTE PTR ds:0x1007e9c0,0x2
1004aca0:	je     0x1004ad46
1004aca6:	mov    DWORD PTR [ebp+0x88],eax
1004acac:	mov    DWORD PTR [ebp+0x84],ecx
1004acb2:	mov    DWORD PTR [ebp+0x80],edx
1004acb8:	mov    DWORD PTR [ebp+0x7c],ebx
1004acbb:	mov    DWORD PTR [ebp+0x78],esi
1004acbe:	mov    DWORD PTR [ebp+0x74],edi
1004acc1:	data16 mov WORD PTR [ebp+0xa0],ss
1004acc8:	data16 mov WORD PTR [ebp+0x94],cs
1004accf:	data16 mov WORD PTR [ebp+0x70],ds
1004acd3:	data16 mov WORD PTR [ebp+0x6c],es
1004acd7:	data16 mov WORD PTR [ebp+0x68],fs
1004acdb:	data16 mov WORD PTR [ebp+0x64],gs
1004acdf:	pushf  
1004ace0:	pop    DWORD PTR [ebp+0x98]
1004ace6:	mov    esi,DWORD PTR [ebp+0x2ac]
1004acec:	lea    eax,[ebp+0x2ac]
1004acf2:	mov    DWORD PTR [ebp+0x9c],eax
1004acf8:	mov    DWORD PTR [ebp-0x28],0x10001
1004acff:	mov    DWORD PTR [ebp+0x90],esi
1004ad05:	mov    eax,DWORD PTR [eax-0x4]
1004ad08:	push   0x50
1004ad0a:	mov    DWORD PTR [ebp+0x8c],eax
1004ad10:	lea    eax,[ebp-0x80]
1004ad13:	push   0x0
1004ad15:	push   eax
1004ad16:	call   0x10045cf0
1004ad1b:	lea    eax,[ebp-0x80]
1004ad1e:	add    esp,0xc
1004ad21:	mov    DWORD PTR [ebp-0x30],eax
1004ad24:	lea    eax,[ebp-0x28]
1004ad27:	push   0x0
1004ad29:	mov    DWORD PTR [ebp-0x80],0x40000015
1004ad30:	mov    DWORD PTR [ebp-0x74],esi
1004ad33:	mov    DWORD PTR [ebp-0x2c],eax
1004ad36:	call   DWORD PTR ds:0x10066180
1004ad3c:	lea    eax,[ebp-0x30]
1004ad3f:	push   eax
1004ad40:	call   DWORD PTR ds:0x1006617c
1004ad46:	push   0x3
1004ad48:	call   0x10047904
1004ad4d:	int3   
1004ad4e:	mov    ecx,DWORD PTR [esp+0x8]
1004ad52:	mov    eax,ds:0x1007e9c0
1004ad57:	mov    edx,DWORD PTR [esp+0x4]
1004ad5b:	and    edx,DWORD PTR [esp+0x8]
1004ad5f:	not    ecx
1004ad61:	and    ecx,eax
1004ad63:	or     ecx,edx
1004ad65:	mov    DWORD PTR ds:0x1007e9c0,ecx
1004ad6b:	ret    
1004ad6c:	mov    eax,DWORD PTR [esp+0x4]
1004ad70:	mov    ds:0x100802f4,eax
1004ad75:	ret    
1004ad76:	push   ebp
1004ad77:	mov    ebp,esp
1004ad79:	sub    esp,0x14
1004ad7c:	push   esi
1004ad7d:	push   edi
1004ad7e:	push   DWORD PTR [ebp+0x8]
1004ad81:	lea    ecx,[ebp-0x14]
1004ad84:	call   0x100455d5
1004ad89:	mov    eax,DWORD PTR [ebp+0x10]
1004ad8c:	mov    esi,DWORD PTR [ebp+0xc]
1004ad8f:	xor    edi,edi
1004ad91:	cmp    eax,edi
1004ad93:	je     0x1004ad97
1004ad95:	mov    DWORD PTR [eax],esi
1004ad97:	cmp    esi,edi
1004ad99:	jne    0x1004adc7
1004ad9b:	call   0x10046c45
1004ada0:	push   edi
1004ada1:	push   edi
1004ada2:	push   edi
1004ada3:	push   edi
1004ada4:	push   edi
1004ada5:	mov    DWORD PTR [eax],0x16
1004adab:	call   0x1004347c
1004adb0:	add    esp,0x14
1004adb3:	cmp    BYTE PTR [ebp-0x8],0x0
1004adb7:	je     0x1004adc0
1004adb9:	mov    eax,DWORD PTR [ebp-0xc]
1004adbc:	and    DWORD PTR [eax+0x70],0xfffffffd
1004adc0:	xor    eax,eax
1004adc2:	jmp    0x1004af9d
1004adc7:	cmp    DWORD PTR [ebp+0x14],edi
1004adca:	je     0x1004add8
1004adcc:	cmp    DWORD PTR [ebp+0x14],0x2
1004add0:	jl     0x1004ad9b
1004add2:	cmp    DWORD PTR [ebp+0x14],0x24
1004add6:	jg     0x1004ad9b
1004add8:	mov    ecx,DWORD PTR [ebp-0x14]
1004addb:	push   ebx
1004addc:	mov    bl,BYTE PTR [esi]
1004adde:	mov    DWORD PTR [ebp-0x4],edi
1004ade1:	lea    edi,[esi+0x1]
1004ade4:	cmp    DWORD PTR [ecx+0xac],0x1
1004adeb:	jle    0x1004ae04
1004aded:	lea    eax,[ebp-0x14]
1004adf0:	push   eax
1004adf1:	movzx  eax,bl
1004adf4:	push   0x8
1004adf6:	push   eax
1004adf7:	call   0x1004b3f3
1004adfc:	mov    ecx,DWORD PTR [ebp-0x14]
1004adff:	add    esp,0xc
1004ae02:	jmp    0x1004ae14
1004ae04:	mov    edx,DWORD PTR [ecx+0xc8]
1004ae0a:	movzx  eax,bl
1004ae0d:	movzx  eax,BYTE PTR [edx+eax*2]
1004ae11:	and    eax,0x8
1004ae14:	test   eax,eax
1004ae16:	je     0x1004ae1d
1004ae18:	mov    bl,BYTE PTR [edi]
1004ae1a:	inc    edi
1004ae1b:	jmp    0x1004ade4
1004ae1d:	cmp    bl,0x2d
1004ae20:	jne    0x1004ae28
1004ae22:	or     DWORD PTR [ebp+0x18],0x2
1004ae26:	jmp    0x1004ae2d
1004ae28:	cmp    bl,0x2b
1004ae2b:	jne    0x1004ae30
1004ae2d:	mov    bl,BYTE PTR [edi]
1004ae2f:	inc    edi
1004ae30:	mov    eax,DWORD PTR [ebp+0x14]
1004ae33:	test   eax,eax
1004ae35:	jl     0x1004af84
1004ae3b:	cmp    eax,0x1
1004ae3e:	je     0x1004af84
1004ae44:	cmp    eax,0x24
1004ae47:	jg     0x1004af84
1004ae4d:	test   eax,eax
1004ae4f:	jne    0x1004ae7b
1004ae51:	cmp    bl,0x30
1004ae54:	je     0x1004ae5f
1004ae56:	mov    DWORD PTR [ebp+0x14],0xa
1004ae5d:	jmp    0x1004ae93
1004ae5f:	mov    al,BYTE PTR [edi]
1004ae61:	cmp    al,0x78
1004ae63:	je     0x1004ae72
1004ae65:	cmp    al,0x58
1004ae67:	je     0x1004ae72
1004ae69:	mov    DWORD PTR [ebp+0x14],0x8
1004ae70:	jmp    0x1004ae93
1004ae72:	mov    DWORD PTR [ebp+0x14],0x10
1004ae79:	jmp    0x1004ae85
1004ae7b:	cmp    eax,0x10
1004ae7e:	jne    0x1004ae93
1004ae80:	cmp    bl,0x30
1004ae83:	jne    0x1004ae93
1004ae85:	mov    al,BYTE PTR [edi]
1004ae87:	cmp    al,0x78
1004ae89:	je     0x1004ae8f
1004ae8b:	cmp    al,0x58
1004ae8d:	jne    0x1004ae93
1004ae8f:	inc    edi
1004ae90:	mov    bl,BYTE PTR [edi]
1004ae92:	inc    edi
1004ae93:	mov    esi,DWORD PTR [ecx+0xc8]
1004ae99:	or     eax,0xffffffff
1004ae9c:	xor    edx,edx
1004ae9e:	div    DWORD PTR [ebp+0x14]
1004aea1:	movzx  ecx,bl
1004aea4:	movzx  ecx,WORD PTR [esi+ecx*2]
1004aea8:	test   cl,0x4
1004aeab:	je     0x1004aeb5
1004aead:	movsx  ecx,bl
1004aeb0:	sub    ecx,0x30
1004aeb3:	jmp    0x1004aecf
1004aeb5:	test   cx,0x103
1004aeba:	je     0x1004aeed
1004aebc:	mov    cl,bl
1004aebe:	sub    cl,0x61
1004aec1:	cmp    cl,0x19
1004aec4:	movsx  ecx,bl
1004aec7:	ja     0x1004aecc
1004aec9:	sub    ecx,0x20
1004aecc:	add    ecx,0xffffffc9
1004aecf:	cmp    ecx,DWORD PTR [ebp+0x14]
1004aed2:	jae    0x1004aeed
1004aed4:	or     DWORD PTR [ebp+0x18],0x8
1004aed8:	cmp    DWORD PTR [ebp-0x4],eax
1004aedb:	jb     0x1004af04
1004aedd:	jne    0x1004aee3
1004aedf:	cmp    ecx,edx
1004aee1:	jbe    0x1004af04
1004aee3:	or     DWORD PTR [ebp+0x18],0x4
1004aee7:	cmp    DWORD PTR [ebp+0x10],0x0
1004aeeb:	jne    0x1004af10
1004aeed:	mov    eax,DWORD PTR [ebp+0x18]
1004aef0:	dec    edi
1004aef1:	test   al,0x8
1004aef3:	jne    0x1004af15
1004aef5:	cmp    DWORD PTR [ebp+0x10],0x0
1004aef9:	je     0x1004aefe
1004aefb:	mov    edi,DWORD PTR [ebp+0xc]
1004aefe:	and    DWORD PTR [ebp-0x4],0x0
1004af02:	jmp    0x1004af60
1004af04:	mov    ebx,DWORD PTR [ebp-0x4]
1004af07:	imul   ebx,DWORD PTR [ebp+0x14]
1004af0b:	add    ebx,ecx
1004af0d:	mov    DWORD PTR [ebp-0x4],ebx
1004af10:	mov    bl,BYTE PTR [edi]
1004af12:	inc    edi
1004af13:	jmp    0x1004aea1
1004af15:	test   al,0x4
1004af17:	mov    esi,0x7fffffff
1004af1c:	jne    0x1004af39
1004af1e:	test   al,0x1
1004af20:	jne    0x1004af60
1004af22:	and    eax,0x2
1004af25:	je     0x1004af30
1004af27:	cmp    DWORD PTR [ebp-0x4],0x80000000
1004af2e:	ja     0x1004af39
1004af30:	test   eax,eax
1004af32:	jne    0x1004af60
1004af34:	cmp    DWORD PTR [ebp-0x4],esi
1004af37:	jbe    0x1004af60
1004af39:	call   0x10046c45
1004af3e:	test   BYTE PTR [ebp+0x18],0x1
1004af42:	mov    DWORD PTR [eax],0x22
1004af48:	je     0x1004af50
1004af4a:	or     DWORD PTR [ebp-0x4],0xffffffff
1004af4e:	jmp    0x1004af60
1004af50:	mov    al,BYTE PTR [ebp+0x18]
1004af53:	and    al,0x2
1004af55:	neg    al
1004af57:	sbb    eax,eax
1004af59:	neg    eax
1004af5b:	add    eax,esi
1004af5d:	mov    DWORD PTR [ebp-0x4],eax
1004af60:	mov    eax,DWORD PTR [ebp+0x10]
1004af63:	test   eax,eax
1004af65:	je     0x1004af69
1004af67:	mov    DWORD PTR [eax],edi
1004af69:	test   BYTE PTR [ebp+0x18],0x2
1004af6d:	je     0x1004af72
1004af6f:	neg    DWORD PTR [ebp-0x4]
1004af72:	cmp    BYTE PTR [ebp-0x8],0x0
1004af76:	je     0x1004af7f
1004af78:	mov    eax,DWORD PTR [ebp-0xc]
1004af7b:	and    DWORD PTR [eax+0x70],0xfffffffd
1004af7f:	mov    eax,DWORD PTR [ebp-0x4]
1004af82:	jmp    0x1004af9c
1004af84:	mov    eax,DWORD PTR [ebp+0x10]
1004af87:	test   eax,eax
1004af89:	je     0x1004af8d
1004af8b:	mov    DWORD PTR [eax],esi
1004af8d:	cmp    BYTE PTR [ebp-0x8],0x0
1004af91:	je     0x1004af9a
1004af93:	mov    eax,DWORD PTR [ebp-0xc]
1004af96:	and    DWORD PTR [eax+0x70],0xfffffffd
1004af9a:	xor    eax,eax
1004af9c:	pop    ebx
1004af9d:	pop    edi
1004af9e:	pop    esi
1004af9f:	leave  
1004afa0:	ret    
1004afa1:	push   ebp
1004afa2:	mov    ebp,esp
1004afa4:	xor    eax,eax
1004afa6:	cmp    DWORD PTR ds:0x100802c8,eax
1004afac:	push   eax
1004afad:	push   DWORD PTR [ebp+0x10]
1004afb0:	push   DWORD PTR [ebp+0xc]
1004afb3:	push   DWORD PTR [ebp+0x8]
1004afb6:	jne    0x1004afbf
1004afb8:	push   0x1007e9b0
1004afbd:	jmp    0x1004afc0
1004afbf:	push   eax
1004afc0:	call   0x1004ad76
1004afc5:	add    esp,0x14
1004afc8:	pop    ebp
1004afc9:	ret    
1004afca:	push   ebp
1004afcb:	mov    ebp,esp
1004afcd:	sub    esp,0x14
1004afd0:	mov    eax,ds:0x1007e030
1004afd5:	xor    eax,ebp
1004afd7:	mov    DWORD PTR [ebp-0x4],eax
1004afda:	push   ebx
1004afdb:	push   esi
1004afdc:	xor    ebx,ebx
1004afde:	cmp    DWORD PTR ds:0x100802f8,ebx
1004afe4:	push   edi
1004afe5:	mov    esi,ecx
1004afe7:	jne    0x1004b021
1004afe9:	push   ebx
1004afea:	push   ebx
1004afeb:	xor    edi,edi
1004afed:	inc    edi
1004afee:	push   edi
1004afef:	push   0x10066cc8
1004aff4:	push   0x100
1004aff9:	push   ebx
1004affa:	call   DWORD PTR ds:0x100661ec
1004b000:	test   eax,eax
1004b002:	je     0x1004b00c
1004b004:	mov    DWORD PTR ds:0x100802f8,edi
1004b00a:	jmp    0x1004b021
1004b00c:	call   DWORD PTR ds:0x100660cc
1004b012:	cmp    eax,0x78
1004b015:	jne    0x1004b021
1004b017:	mov    DWORD PTR ds:0x100802f8,0x2
1004b021:	cmp    DWORD PTR [ebp+0x14],ebx
1004b024:	jle    0x1004b048
1004b026:	mov    ecx,DWORD PTR [ebp+0x14]
1004b029:	mov    eax,DWORD PTR [ebp+0x10]
1004b02c:	dec    ecx
1004b02d:	cmp    BYTE PTR [eax],bl
1004b02f:	je     0x1004b039
1004b031:	inc    eax
1004b032:	cmp    ecx,ebx
1004b034:	jne    0x1004b02c
1004b036:	or     ecx,0xffffffff
1004b039:	mov    eax,DWORD PTR [ebp+0x14]
1004b03c:	sub    eax,ecx
1004b03e:	dec    eax
1004b03f:	cmp    eax,DWORD PTR [ebp+0x14]
1004b042:	jge    0x1004b045
1004b044:	inc    eax
1004b045:	mov    DWORD PTR [ebp+0x14],eax
1004b048:	mov    eax,ds:0x100802f8
1004b04d:	cmp    eax,0x2
1004b050:	je     0x1004b201
1004b056:	cmp    eax,ebx
1004b058:	je     0x1004b201
1004b05e:	cmp    eax,0x1
1004b061:	jne    0x1004b232
1004b067:	cmp    DWORD PTR [ebp+0x20],ebx
1004b06a:	mov    DWORD PTR [ebp-0x8],ebx
1004b06d:	jne    0x1004b077
1004b06f:	mov    eax,DWORD PTR [esi]
1004b071:	mov    eax,DWORD PTR [eax+0x4]
1004b074:	mov    DWORD PTR [ebp+0x20],eax
1004b077:	mov    esi,DWORD PTR ds:0x1006608c
1004b07d:	xor    eax,eax
1004b07f:	cmp    DWORD PTR [ebp+0x24],ebx
1004b082:	push   ebx
1004b083:	push   ebx
1004b084:	push   DWORD PTR [ebp+0x14]
1004b087:	setne  al
1004b08a:	push   DWORD PTR [ebp+0x10]
1004b08d:	lea    eax,[eax*8+0x1]
1004b094:	push   eax
1004b095:	push   DWORD PTR [ebp+0x20]
1004b098:	call   esi
1004b09a:	mov    edi,eax
1004b09c:	cmp    edi,ebx
1004b09e:	je     0x1004b232
1004b0a4:	jle    0x1004b0e9
1004b0a6:	push   0xffffffe0
1004b0a8:	xor    edx,edx
1004b0aa:	pop    eax
1004b0ab:	div    edi
1004b0ad:	cmp    eax,0x2
1004b0b0:	jb     0x1004b0e9
1004b0b2:	lea    eax,[edi+edi*1+0x8]
1004b0b6:	cmp    eax,0x400
1004b0bb:	ja     0x1004b0d0
1004b0bd:	call   0x1004b7e0
1004b0c2:	mov    eax,esp
1004b0c4:	cmp    eax,ebx
1004b0c6:	je     0x1004b0e4
1004b0c8:	mov    DWORD PTR [eax],0xcccc
1004b0ce:	jmp    0x1004b0e1
1004b0d0:	push   eax
1004b0d1:	call   0x1004507d
1004b0d6:	cmp    eax,ebx
1004b0d8:	pop    ecx
1004b0d9:	je     0x1004b0e4
1004b0db:	mov    DWORD PTR [eax],0xdddd
1004b0e1:	add    eax,0x8
1004b0e4:	mov    DWORD PTR [ebp-0xc],eax
1004b0e7:	jmp    0x1004b0ec
1004b0e9:	mov    DWORD PTR [ebp-0xc],ebx
1004b0ec:	cmp    DWORD PTR [ebp-0xc],ebx
1004b0ef:	je     0x1004b232
1004b0f5:	push   edi
1004b0f6:	push   DWORD PTR [ebp-0xc]
1004b0f9:	push   DWORD PTR [ebp+0x14]
1004b0fc:	push   DWORD PTR [ebp+0x10]
1004b0ff:	push   0x1
1004b101:	push   DWORD PTR [ebp+0x20]
1004b104:	call   esi
1004b106:	test   eax,eax
1004b108:	je     0x1004b1f0
1004b10e:	mov    esi,DWORD PTR ds:0x100661ec
1004b114:	push   ebx
1004b115:	push   ebx
1004b116:	push   edi
1004b117:	push   DWORD PTR [ebp-0xc]
1004b11a:	push   DWORD PTR [ebp+0xc]
1004b11d:	push   DWORD PTR [ebp+0x8]
1004b120:	call   esi
1004b122:	mov    ecx,eax
1004b124:	cmp    ecx,ebx
1004b126:	mov    DWORD PTR [ebp-0x8],ecx
1004b129:	je     0x1004b1f0
1004b12f:	test   WORD PTR [ebp+0xc],0x400
1004b135:	je     0x1004b160
1004b137:	cmp    DWORD PTR [ebp+0x1c],ebx
1004b13a:	je     0x1004b1f0
1004b140:	cmp    ecx,DWORD PTR [ebp+0x1c]
1004b143:	jg     0x1004b1f0
1004b149:	push   DWORD PTR [ebp+0x1c]
1004b14c:	push   DWORD PTR [ebp+0x18]
1004b14f:	push   edi
1004b150:	push   DWORD PTR [ebp-0xc]
1004b153:	push   DWORD PTR [ebp+0xc]
1004b156:	push   DWORD PTR [ebp+0x8]
1004b159:	call   esi
1004b15b:	jmp    0x1004b1f0
1004b160:	cmp    ecx,ebx
1004b162:	jle    0x1004b1a9
1004b164:	push   0xffffffe0
1004b166:	xor    edx,edx
1004b168:	pop    eax
1004b169:	div    ecx
1004b16b:	cmp    eax,0x2
1004b16e:	jb     0x1004b1a9
1004b170:	lea    eax,[ecx+ecx*1+0x8]
1004b174:	cmp    eax,0x400
1004b179:	ja     0x1004b191
1004b17b:	call   0x1004b7e0
1004b180:	mov    esi,esp
1004b182:	cmp    esi,ebx
1004b184:	je     0x1004b1f0
1004b186:	mov    DWORD PTR [esi],0xcccc
1004b18c:	add    esi,0x8
1004b18f:	jmp    0x1004b1ab
1004b191:	push   eax
1004b192:	call   0x1004507d
1004b197:	cmp    eax,ebx
1004b199:	pop    ecx
1004b19a:	je     0x1004b1a5
1004b19c:	mov    DWORD PTR [eax],0xdddd
1004b1a2:	add    eax,0x8
1004b1a5:	mov    esi,eax
1004b1a7:	jmp    0x1004b1ab
1004b1a9:	xor    esi,esi
1004b1ab:	cmp    esi,ebx
1004b1ad:	je     0x1004b1f0
1004b1af:	push   DWORD PTR [ebp-0x8]
1004b1b2:	push   esi
1004b1b3:	push   edi
1004b1b4:	push   DWORD PTR [ebp-0xc]
1004b1b7:	push   DWORD PTR [ebp+0xc]
1004b1ba:	push   DWORD PTR [ebp+0x8]
1004b1bd:	call   DWORD PTR ds:0x100661ec
1004b1c3:	test   eax,eax
1004b1c5:	je     0x1004b1e9
1004b1c7:	cmp    DWORD PTR [ebp+0x1c],ebx
1004b1ca:	push   ebx
1004b1cb:	push   ebx
1004b1cc:	jne    0x1004b1d2
1004b1ce:	push   ebx
1004b1cf:	push   ebx
1004b1d0:	jmp    0x1004b1d8
1004b1d2:	push   DWORD PTR [ebp+0x1c]
1004b1d5:	push   DWORD PTR [ebp+0x18]
1004b1d8:	push   DWORD PTR [ebp-0x8]
1004b1db:	push   esi
1004b1dc:	push   ebx
1004b1dd:	push   DWORD PTR [ebp+0x20]
1004b1e0:	call   DWORD PTR ds:0x100660b8
1004b1e6:	mov    DWORD PTR [ebp-0x8],eax
1004b1e9:	push   esi
1004b1ea:	call   0x1001b6bb
1004b1ef:	pop    ecx
1004b1f0:	push   DWORD PTR [ebp-0xc]
1004b1f3:	call   0x1001b6bb
1004b1f8:	mov    eax,DWORD PTR [ebp-0x8]
1004b1fb:	pop    ecx
1004b1fc:	jmp    0x1004b35a
1004b201:	cmp    DWORD PTR [ebp+0x8],ebx
1004b204:	mov    DWORD PTR [ebp-0xc],ebx
1004b207:	mov    DWORD PTR [ebp-0x10],ebx
1004b20a:	jne    0x1004b214
1004b20c:	mov    eax,DWORD PTR [esi]
1004b20e:	mov    eax,DWORD PTR [eax+0x14]
1004b211:	mov    DWORD PTR [ebp+0x8],eax
1004b214:	cmp    DWORD PTR [ebp+0x20],ebx
1004b217:	jne    0x1004b221
1004b219:	mov    eax,DWORD PTR [esi]
1004b21b:	mov    eax,DWORD PTR [eax+0x4]
1004b21e:	mov    DWORD PTR [ebp+0x20],eax
1004b221:	push   DWORD PTR [ebp+0x8]
1004b224:	call   0x1004f524
1004b229:	cmp    eax,0xffffffff
1004b22c:	pop    ecx
1004b22d:	mov    DWORD PTR [ebp-0x14],eax
1004b230:	jne    0x1004b239
1004b232:	xor    eax,eax
1004b234:	jmp    0x1004b35a
1004b239:	cmp    eax,DWORD PTR [ebp+0x20]
1004b23c:	je     0x1004b31d
1004b242:	push   ebx
1004b243:	push   ebx
1004b244:	lea    ecx,[ebp+0x14]
1004b247:	push   ecx
1004b248:	push   DWORD PTR [ebp+0x10]
1004b24b:	push   eax
1004b24c:	push   DWORD PTR [ebp+0x20]
1004b24f:	call   0x1004f56b
1004b254:	add    esp,0x18
1004b257:	cmp    eax,ebx
1004b259:	mov    DWORD PTR [ebp-0xc],eax
1004b25c:	je     0x1004b232
1004b25e:	mov    esi,DWORD PTR ds:0x100661e8
1004b264:	push   ebx
1004b265:	push   ebx
1004b266:	push   DWORD PTR [ebp+0x14]
1004b269:	push   eax
1004b26a:	push   DWORD PTR [ebp+0xc]
1004b26d:	push   DWORD PTR [ebp+0x8]
1004b270:	call   esi
1004b272:	cmp    eax,ebx
1004b274:	mov    DWORD PTR [ebp-0x8],eax
1004b277:	jne    0x1004b280
1004b279:	xor    esi,esi
1004b27b:	jmp    0x1004b337
1004b280:	jle    0x1004b2bf
1004b282:	cmp    eax,0xffffffe0
1004b285:	ja     0x1004b2bf
1004b287:	add    eax,0x8
1004b28a:	cmp    eax,0x400
1004b28f:	ja     0x1004b2a7
1004b291:	call   0x1004b7e0
1004b296:	mov    edi,esp
1004b298:	cmp    edi,ebx
1004b29a:	je     0x1004b279
1004b29c:	mov    DWORD PTR [edi],0xcccc
1004b2a2:	add    edi,0x8
1004b2a5:	jmp    0x1004b2c1
1004b2a7:	push   eax
1004b2a8:	call   0x1004507d
1004b2ad:	cmp    eax,ebx
1004b2af:	pop    ecx
1004b2b0:	je     0x1004b2bb
1004b2b2:	mov    DWORD PTR [eax],0xdddd
1004b2b8:	add    eax,0x8
1004b2bb:	mov    edi,eax
1004b2bd:	jmp    0x1004b2c1
1004b2bf:	xor    edi,edi
1004b2c1:	cmp    edi,ebx
1004b2c3:	je     0x1004b279
1004b2c5:	push   DWORD PTR [ebp-0x8]
1004b2c8:	push   ebx
1004b2c9:	push   edi
1004b2ca:	call   0x10045cf0
1004b2cf:	add    esp,0xc
1004b2d2:	push   DWORD PTR [ebp-0x8]
1004b2d5:	push   edi
1004b2d6:	push   DWORD PTR [ebp+0x14]
1004b2d9:	push   DWORD PTR [ebp-0xc]
1004b2dc:	push   DWORD PTR [ebp+0xc]
1004b2df:	push   DWORD PTR [ebp+0x8]
1004b2e2:	call   esi
1004b2e4:	cmp    eax,ebx
1004b2e6:	mov    DWORD PTR [ebp-0x8],eax
1004b2e9:	jne    0x1004b2ef
1004b2eb:	xor    esi,esi
1004b2ed:	jmp    0x1004b314
1004b2ef:	push   DWORD PTR [ebp+0x1c]
1004b2f2:	lea    eax,[ebp-0x8]
1004b2f5:	push   DWORD PTR [ebp+0x18]
1004b2f8:	push   eax
1004b2f9:	push   edi
1004b2fa:	push   DWORD PTR [ebp+0x20]
1004b2fd:	push   DWORD PTR [ebp-0x14]
1004b300:	call   0x1004f56b
1004b305:	mov    esi,eax
1004b307:	mov    DWORD PTR [ebp-0x10],esi
1004b30a:	add    esp,0x18
1004b30d:	neg    esi
1004b30f:	sbb    esi,esi
1004b311:	and    esi,DWORD PTR [ebp-0x8]
1004b314:	push   edi
1004b315:	call   0x1001b6bb
1004b31a:	pop    ecx
1004b31b:	jmp    0x1004b337
1004b31d:	push   DWORD PTR [ebp+0x1c]
1004b320:	push   DWORD PTR [ebp+0x18]
1004b323:	push   DWORD PTR [ebp+0x14]
1004b326:	push   DWORD PTR [ebp+0x10]
1004b329:	push   DWORD PTR [ebp+0xc]
1004b32c:	push   DWORD PTR [ebp+0x8]
1004b32f:	call   DWORD PTR ds:0x100661e8
1004b335:	mov    esi,eax
1004b337:	cmp    DWORD PTR [ebp-0xc],ebx
1004b33a:	je     0x1004b345
1004b33c:	push   DWORD PTR [ebp-0xc]
1004b33f:	call   0x100435f8
1004b344:	pop    ecx
1004b345:	mov    eax,DWORD PTR [ebp-0x10]
1004b348:	cmp    eax,ebx
1004b34a:	je     0x1004b358
1004b34c:	cmp    DWORD PTR [ebp+0x18],eax
1004b34f:	je     0x1004b358
1004b351:	push   eax
1004b352:	call   0x100435f8
1004b357:	pop    ecx
1004b358:	mov    eax,esi
1004b35a:	lea    esp,[ebp-0x20]
1004b35d:	pop    edi
1004b35e:	pop    esi
1004b35f:	pop    ebx
1004b360:	mov    ecx,DWORD PTR [ebp-0x4]
1004b363:	xor    ecx,ebp
1004b365:	call   0x10042f87
1004b36a:	leave  
1004b36b:	ret    
1004b36c:	push   ebp
1004b36d:	mov    ebp,esp
1004b36f:	sub    esp,0x10
1004b372:	push   DWORD PTR [ebp+0x8]
1004b375:	lea    ecx,[ebp-0x10]
1004b378:	call   0x100455d5
1004b37d:	push   DWORD PTR [ebp+0x28]
1004b380:	lea    ecx,[ebp-0x10]
1004b383:	push   DWORD PTR [ebp+0x24]
1004b386:	push   DWORD PTR [ebp+0x20]
1004b389:	push   DWORD PTR [ebp+0x1c]
1004b38c:	push   DWORD PTR [ebp+0x18]
1004b38f:	push   DWORD PTR [ebp+0x14]
1004b392:	push   DWORD PTR [ebp+0x10]
1004b395:	push   DWORD PTR [ebp+0xc]
1004b398:	call   0x1004afca
1004b39d:	add    esp,0x20
1004b3a0:	cmp    BYTE PTR [ebp-0x4],0x0
1004b3a4:	je     0x1004b3ad
1004b3a6:	mov    ecx,DWORD PTR [ebp-0x8]
1004b3a9:	and    DWORD PTR [ecx+0x70],0xfffffffd
1004b3ad:	leave  
1004b3ae:	ret    
1004b3af:	push   ebp
1004b3b0:	mov    ebp,esp
1004b3b2:	sub    esp,0x10
1004b3b5:	push   DWORD PTR [ebp+0xc]
1004b3b8:	lea    ecx,[ebp-0x10]
1004b3bb:	call   0x100455d5
1004b3c0:	movzx  eax,BYTE PTR [ebp+0x8]
1004b3c4:	mov    ecx,DWORD PTR [ebp-0x10]
1004b3c7:	mov    ecx,DWORD PTR [ecx+0xc8]
1004b3cd:	movzx  eax,WORD PTR [ecx+eax*2]
1004b3d1:	and    eax,0x8000
1004b3d6:	cmp    BYTE PTR [ebp-0x4],0x0
1004b3da:	je     0x1004b3e3
1004b3dc:	mov    ecx,DWORD PTR [ebp-0x8]
1004b3df:	and    DWORD PTR [ecx+0x70],0xfffffffd
1004b3e3:	leave  
1004b3e4:	ret    
1004b3e5:	push   0x0
1004b3e7:	push   DWORD PTR [esp+0x8]
1004b3eb:	call   0x1004b3af
1004b3f0:	pop    ecx
1004b3f1:	pop    ecx
1004b3f2:	ret    
1004b3f3:	push   ebp
1004b3f4:	mov    ebp,esp
1004b3f6:	sub    esp,0x18
1004b3f9:	push   ebx
1004b3fa:	push   DWORD PTR [ebp+0x10]
1004b3fd:	lea    ecx,[ebp-0x18]
1004b400:	call   0x100455d5
1004b405:	mov    ebx,DWORD PTR [ebp+0x8]
1004b408:	lea    eax,[ebx+0x1]
1004b40b:	cmp    eax,0x100
1004b410:	ja     0x1004b421
1004b412:	mov    eax,DWORD PTR [ebp-0x18]
1004b415:	mov    eax,DWORD PTR [eax+0xc8]
1004b41b:	movzx  eax,WORD PTR [eax+ebx*2]
1004b41f:	jmp    0x1004b496
1004b421:	mov    DWORD PTR [ebp+0x8],ebx
1004b424:	sar    DWORD PTR [ebp+0x8],0x8
1004b428:	lea    eax,[ebp-0x18]
1004b42b:	push   eax
1004b42c:	mov    eax,DWORD PTR [ebp+0x8]
1004b42f:	and    eax,0xff
1004b434:	push   eax
1004b435:	call   0x1004b3af
1004b43a:	test   eax,eax
1004b43c:	pop    ecx
1004b43d:	pop    ecx
1004b43e:	je     0x1004b452
1004b440:	mov    al,BYTE PTR [ebp+0x8]
1004b443:	push   0x2
1004b445:	mov    BYTE PTR [ebp-0x8],al
1004b448:	mov    BYTE PTR [ebp-0x7],bl
1004b44b:	mov    BYTE PTR [ebp-0x6],0x0
1004b44f:	pop    ecx
1004b450:	jmp    0x1004b45c
1004b452:	xor    ecx,ecx
1004b454:	mov    BYTE PTR [ebp-0x8],bl
1004b457:	mov    BYTE PTR [ebp-0x7],0x0
1004b45b:	inc    ecx
1004b45c:	mov    eax,DWORD PTR [ebp-0x18]
1004b45f:	push   0x1
1004b461:	push   DWORD PTR [eax+0x14]
1004b464:	push   DWORD PTR [eax+0x4]
1004b467:	lea    eax,[ebp-0x4]
1004b46a:	push   eax
1004b46b:	push   ecx
1004b46c:	lea    eax,[ebp-0x8]
1004b46f:	push   eax
1004b470:	lea    eax,[ebp-0x18]
1004b473:	push   0x1
1004b475:	push   eax
1004b476:	call   0x1004ef0d
1004b47b:	add    esp,0x20
1004b47e:	test   eax,eax
1004b480:	jne    0x1004b492
1004b482:	cmp    BYTE PTR [ebp-0xc],al
1004b485:	je     0x1004b48e
1004b487:	mov    eax,DWORD PTR [ebp-0x10]
1004b48a:	and    DWORD PTR [eax+0x70],0xfffffffd
1004b48e:	xor    eax,eax
1004b490:	jmp    0x1004b4a6
1004b492:	movzx  eax,WORD PTR [ebp-0x4]
1004b496:	and    eax,DWORD PTR [ebp+0xc]
1004b499:	cmp    BYTE PTR [ebp-0xc],0x0
1004b49d:	je     0x1004b4a6
1004b49f:	mov    ecx,DWORD PTR [ebp-0x10]
1004b4a2:	and    DWORD PTR [ecx+0x70],0xfffffffd
1004b4a6:	pop    ebx
1004b4a7:	leave  
1004b4a8:	ret    
1004b4a9:	mov    ecx,DWORD PTR [esp+0x4]
1004b4ad:	push   ebx
1004b4ae:	push   esi
1004b4af:	push   edi
1004b4b0:	xor    edi,edi
1004b4b2:	cmp    ecx,edi
1004b4b4:	je     0x1004b4be
1004b4b6:	mov    ebx,DWORD PTR [esp+0x14]
1004b4ba:	cmp    ebx,edi
1004b4bc:	ja     0x1004b4d9
1004b4be:	call   0x10046c45
1004b4c3:	push   0x16
1004b4c5:	pop    esi
1004b4c6:	mov    DWORD PTR [eax],esi
1004b4c8:	push   edi
1004b4c9:	push   edi
1004b4ca:	push   edi
1004b4cb:	push   edi
1004b4cc:	push   edi
1004b4cd:	call   0x1004347c
1004b4d2:	add    esp,0x14
1004b4d5:	mov    eax,esi
1004b4d7:	jmp    0x1004b511
1004b4d9:	mov    esi,DWORD PTR [esp+0x18]
1004b4dd:	cmp    esi,edi
1004b4df:	jne    0x1004b4e6
1004b4e1:	mov    WORD PTR [ecx],di
1004b4e4:	jmp    0x1004b4be
1004b4e6:	mov    edx,ecx
1004b4e8:	movzx  eax,WORD PTR [esi]
1004b4eb:	mov    WORD PTR [edx],ax
1004b4ee:	inc    edx
1004b4ef:	inc    edx
1004b4f0:	inc    esi
1004b4f1:	inc    esi
1004b4f2:	cmp    ax,di
1004b4f5:	je     0x1004b4fa
1004b4f7:	dec    ebx
1004b4f8:	jne    0x1004b4e8
1004b4fa:	cmp    ebx,edi
1004b4fc:	jne    0x1004b50f
1004b4fe:	mov    WORD PTR [ecx],di
1004b501:	call   0x10046c45
1004b506:	push   0x22
1004b508:	pop    ecx
1004b509:	mov    DWORD PTR [eax],ecx
1004b50b:	mov    esi,ecx
1004b50d:	jmp    0x1004b4c8
1004b50f:	xor    eax,eax
1004b511:	pop    edi
1004b512:	pop    esi
1004b513:	pop    ebx
1004b514:	ret    
1004b515:	push   ebp
1004b516:	mov    ebp,esp
1004b518:	sub    esp,0x10
1004b51b:	mov    eax,ds:0x1007e030
1004b520:	xor    eax,ebp
1004b522:	mov    DWORD PTR [ebp-0x4],eax
1004b525:	push   ebx
1004b526:	push   esi
1004b527:	mov    esi,DWORD PTR ds:0x100661ec
1004b52d:	xor    ebx,ebx
1004b52f:	cmp    DWORD PTR ds:0x100802fc,ebx
1004b535:	push   edi
1004b536:	mov    edi,ecx
1004b538:	jne    0x1004b570
1004b53a:	push   ebx
1004b53b:	push   ebx
1004b53c:	push   0x1
1004b53e:	push   0x10066cc8
1004b543:	push   0x100
1004b548:	push   ebx
1004b549:	call   esi
1004b54b:	test   eax,eax
1004b54d:	je     0x1004b55b
1004b54f:	mov    DWORD PTR ds:0x100802fc,0x1
1004b559:	jmp    0x1004b570
1004b55b:	call   DWORD PTR ds:0x100660cc
1004b561:	cmp    eax,0x78
1004b564:	jne    0x1004b570
1004b566:	mov    DWORD PTR ds:0x100802fc,0x2
1004b570:	cmp    DWORD PTR [ebp+0x14],ebx
1004b573:	jle    0x1004b592
1004b575:	mov    ecx,DWORD PTR [ebp+0x14]
1004b578:	mov    eax,DWORD PTR [ebp+0x10]
1004b57b:	dec    ecx
1004b57c:	cmp    WORD PTR [eax],bx
1004b57f:	je     0x1004b58a
1004b581:	inc    eax
1004b582:	inc    eax
1004b583:	cmp    ecx,ebx
1004b585:	jne    0x1004b57b
1004b587:	or     ecx,0xffffffff
1004b58a:	or     eax,0xffffffff
1004b58d:	sub    eax,ecx
1004b58f:	add    DWORD PTR [ebp+0x14],eax
1004b592:	mov    eax,ds:0x100802fc
1004b597:	cmp    eax,0x1
1004b59a:	jne    0x1004b5b5
1004b59c:	push   DWORD PTR [ebp+0x1c]
1004b59f:	push   DWORD PTR [ebp+0x18]
1004b5a2:	push   DWORD PTR [ebp+0x14]
1004b5a5:	push   DWORD PTR [ebp+0x10]
1004b5a8:	push   DWORD PTR [ebp+0xc]
1004b5ab:	push   DWORD PTR [ebp+0x8]
1004b5ae:	call   esi
1004b5b0:	jmp    0x1004b764
1004b5b5:	cmp    eax,0x2
1004b5b8:	je     0x1004b5be
1004b5ba:	cmp    eax,ebx
1004b5bc:	jne    0x1004b610
1004b5be:	cmp    DWORD PTR [ebp+0x8],ebx
1004b5c1:	mov    DWORD PTR [ebp-0xc],ebx
1004b5c4:	jne    0x1004b5ce
1004b5c6:	mov    eax,DWORD PTR [edi]
1004b5c8:	mov    eax,DWORD PTR [eax+0x14]
1004b5cb:	mov    DWORD PTR [ebp+0x8],eax
1004b5ce:	cmp    DWORD PTR [ebp+0x20],ebx
1004b5d1:	jne    0x1004b5db
1004b5d3:	mov    eax,DWORD PTR [edi]
1004b5d5:	mov    eax,DWORD PTR [eax+0x4]
1004b5d8:	mov    DWORD PTR [ebp+0x20],eax
1004b5db:	push   DWORD PTR [ebp+0x8]
1004b5de:	call   0x1004f524
1004b5e3:	cmp    DWORD PTR [ebp+0x20],eax
1004b5e6:	pop    ecx
1004b5e7:	je     0x1004b5f1
1004b5e9:	cmp    eax,0xffffffff
1004b5ec:	je     0x1004b5f1
1004b5ee:	mov    DWORD PTR [ebp+0x20],eax
1004b5f1:	mov    esi,DWORD PTR ds:0x100660b8
1004b5f7:	push   ebx
1004b5f8:	push   ebx
1004b5f9:	push   ebx
1004b5fa:	push   ebx
1004b5fb:	push   DWORD PTR [ebp+0x14]
1004b5fe:	push   DWORD PTR [ebp+0x10]
1004b601:	push   ebx
1004b602:	push   DWORD PTR [ebp+0x20]
1004b605:	call   esi
1004b607:	mov    edi,eax
1004b609:	cmp    edi,ebx
1004b60b:	mov    DWORD PTR [ebp-0x10],edi
1004b60e:	jne    0x1004b617
1004b610:	xor    eax,eax
1004b612:	jmp    0x1004b764
1004b617:	jle    0x1004b65b
1004b619:	push   0xffffffe0
1004b61b:	xor    edx,edx
1004b61d:	pop    eax
1004b61e:	div    edi
1004b620:	cmp    eax,0x1
1004b623:	jb     0x1004b65b
1004b625:	lea    eax,[edi+0x8]
1004b628:	cmp    eax,0x400
1004b62d:	ja     0x1004b642
1004b62f:	call   0x1004b7e0
1004b634:	mov    eax,esp
1004b636:	cmp    eax,ebx
1004b638:	je     0x1004b656
1004b63a:	mov    DWORD PTR [eax],0xcccc
1004b640:	jmp    0x1004b653
1004b642:	push   eax
1004b643:	call   0x1004507d
1004b648:	cmp    eax,ebx
1004b64a:	pop    ecx
1004b64b:	je     0x1004b656
1004b64d:	mov    DWORD PTR [eax],0xdddd
1004b653:	add    eax,0x8
1004b656:	mov    DWORD PTR [ebp-0x8],eax
1004b659:	jmp    0x1004b65e
1004b65b:	mov    DWORD PTR [ebp-0x8],ebx
1004b65e:	cmp    DWORD PTR [ebp-0x8],ebx
1004b661:	je     0x1004b610
1004b663:	push   ebx
1004b664:	push   ebx
1004b665:	push   edi
1004b666:	push   DWORD PTR [ebp-0x8]
1004b669:	push   DWORD PTR [ebp+0x14]
1004b66c:	push   DWORD PTR [ebp+0x10]
1004b66f:	push   ebx
1004b670:	push   DWORD PTR [ebp+0x20]
1004b673:	call   esi
1004b675:	test   eax,eax
1004b677:	je     0x1004b758
1004b67d:	push   ebx
1004b67e:	push   ebx
1004b67f:	push   edi
1004b680:	push   DWORD PTR [ebp-0x8]
1004b683:	mov    edi,DWORD PTR ds:0x100661e8
1004b689:	push   DWORD PTR [ebp+0xc]
1004b68c:	push   DWORD PTR [ebp+0x8]
1004b68f:	call   edi
1004b691:	mov    esi,eax
1004b693:	cmp    esi,ebx
1004b695:	je     0x1004b758
1004b69b:	jle    0x1004b6dc
1004b69d:	push   0xffffffe0
1004b69f:	xor    edx,edx
1004b6a1:	pop    eax
1004b6a2:	div    esi
1004b6a4:	cmp    eax,0x1
1004b6a7:	jb     0x1004b6dc
1004b6a9:	lea    eax,[esi+0x8]
1004b6ac:	cmp    eax,0x400
1004b6b1:	ja     0x1004b6c6
1004b6b3:	call   0x1004b7e0
1004b6b8:	mov    eax,esp
1004b6ba:	cmp    eax,ebx
1004b6bc:	je     0x1004b6da
1004b6be:	mov    DWORD PTR [eax],0xcccc
1004b6c4:	jmp    0x1004b6d7
1004b6c6:	push   eax
1004b6c7:	call   0x1004507d
1004b6cc:	cmp    eax,ebx
1004b6ce:	pop    ecx
1004b6cf:	je     0x1004b6da
1004b6d1:	mov    DWORD PTR [eax],0xdddd
1004b6d7:	add    eax,0x8
1004b6da:	mov    ebx,eax
1004b6dc:	test   ebx,ebx
1004b6de:	je     0x1004b758
1004b6e0:	push   esi
1004b6e1:	push   ebx
1004b6e2:	push   DWORD PTR [ebp-0x10]
1004b6e5:	push   DWORD PTR [ebp-0x8]
1004b6e8:	push   DWORD PTR [ebp+0xc]
1004b6eb:	push   DWORD PTR [ebp+0x8]
1004b6ee:	call   edi
1004b6f0:	test   eax,eax
1004b6f2:	je     0x1004b751
1004b6f4:	test   WORD PTR [ebp+0xc],0x400
1004b6fa:	je     0x1004b730
1004b6fc:	mov    eax,DWORD PTR [ebp+0x1c]
1004b6ff:	xor    edi,edi
1004b701:	cmp    eax,edi
1004b703:	mov    DWORD PTR [ebp-0xc],esi
1004b706:	je     0x1004b751
1004b708:	cmp    eax,esi
1004b70a:	jg     0x1004b70f
1004b70c:	lea    esi,[eax-0x1]
1004b70f:	push   esi
1004b710:	push   ebx
1004b711:	push   eax
1004b712:	push   DWORD PTR [ebp+0x18]
1004b715:	call   0x1004eb9f
1004b71a:	add    esp,0x10
1004b71d:	test   eax,eax
1004b71f:	je     0x1004b751
1004b721:	push   edi
1004b722:	push   edi
1004b723:	push   edi
1004b724:	push   edi
1004b725:	push   edi
1004b726:	call   0x10043380
1004b72b:	add    esp,0x14
1004b72e:	jmp    0x1004b751
1004b730:	xor    eax,eax
1004b732:	cmp    DWORD PTR [ebp+0x1c],eax
1004b735:	jne    0x1004b73b
1004b737:	push   eax
1004b738:	push   eax
1004b739:	jmp    0x1004b741
1004b73b:	push   DWORD PTR [ebp+0x1c]
1004b73e:	push   DWORD PTR [ebp+0x18]
1004b741:	push   esi
1004b742:	push   ebx
1004b743:	push   0x1
1004b745:	push   DWORD PTR [ebp+0x20]
1004b748:	call   DWORD PTR ds:0x1006608c
1004b74e:	mov    DWORD PTR [ebp-0xc],eax
1004b751:	push   ebx
1004b752:	call   0x1001b6bb
1004b757:	pop    ecx
1004b758:	push   DWORD PTR [ebp-0x8]
1004b75b:	call   0x1001b6bb
1004b760:	mov    eax,DWORD PTR [ebp-0xc]
1004b763:	pop    ecx
1004b764:	lea    esp,[ebp-0x1c]
1004b767:	pop    edi
1004b768:	pop    esi
1004b769:	pop    ebx
1004b76a:	mov    ecx,DWORD PTR [ebp-0x4]
1004b76d:	xor    ecx,ebp
1004b76f:	call   0x10042f87
1004b774:	leave  
1004b775:	ret    
1004b776:	push   ebp
1004b777:	mov    ebp,esp
1004b779:	sub    esp,0x10
1004b77c:	push   DWORD PTR [ebp+0x8]
1004b77f:	lea    ecx,[ebp-0x10]
1004b782:	call   0x100455d5
1004b787:	push   DWORD PTR [ebp+0x24]
1004b78a:	lea    ecx,[ebp-0x10]
1004b78d:	push   DWORD PTR [ebp+0x20]
1004b790:	push   DWORD PTR [ebp+0x1c]
1004b793:	push   DWORD PTR [ebp+0x18]
1004b796:	push   DWORD PTR [ebp+0x14]
1004b799:	push   DWORD PTR [ebp+0x10]
1004b79c:	push   DWORD PTR [ebp+0xc]
1004b79f:	call   0x1004b515
1004b7a4:	add    esp,0x1c
1004b7a7:	cmp    BYTE PTR [ebp-0x4],0x0
1004b7ab:	je     0x1004b7b4
1004b7ad:	mov    ecx,DWORD PTR [ebp-0x8]
1004b7b0:	and    DWORD PTR [ecx+0x70],0xfffffffd
1004b7b4:	leave  
1004b7b5:	ret    
1004b7b6:	xor    eax,eax
1004b7b8:	cmp    DWORD PTR [esp+0x8],eax
1004b7bc:	jbe    0x1004b7d1
1004b7be:	mov    ecx,DWORD PTR [esp+0x4]
1004b7c2:	cmp    WORD PTR [ecx],0x0
1004b7c6:	je     0x1004b7d1
1004b7c8:	inc    eax
1004b7c9:	inc    ecx
1004b7ca:	inc    ecx
1004b7cb:	cmp    eax,DWORD PTR [esp+0x8]
1004b7cf:	jb     0x1004b7c2
1004b7d1:	ret    
1004b7d2:	int3   
1004b7d3:	int3   
1004b7d4:	int3   
1004b7d5:	int3   
1004b7d6:	int3   
1004b7d7:	int3   
1004b7d8:	int3   
1004b7d9:	int3   
1004b7da:	int3   
1004b7db:	int3   
1004b7dc:	int3   
1004b7dd:	int3   
1004b7de:	int3   
1004b7df:	int3   
1004b7e0:	push   ecx
1004b7e1:	lea    ecx,[esp+0x8]
1004b7e5:	sub    ecx,eax
1004b7e7:	and    ecx,0xf
1004b7ea:	add    eax,ecx
1004b7ec:	sbb    ecx,ecx
1004b7ee:	or     eax,ecx
1004b7f0:	pop    ecx
1004b7f1:	jmp    0x10049ed0
1004b7f6:	push   ecx
1004b7f7:	lea    ecx,[esp+0x8]
1004b7fb:	sub    ecx,eax
1004b7fd:	and    ecx,0x7
1004b800:	add    eax,ecx
1004b802:	sbb    ecx,ecx
1004b804:	or     eax,ecx
1004b806:	pop    ecx
1004b807:	jmp    0x10049ed0
1004b80c:	push   ebp
1004b80d:	mov    ebp,esp
1004b80f:	mov    eax,0xffff
1004b814:	sub    esp,0x14
1004b817:	cmp    WORD PTR [ebp+0x8],ax
1004b81b:	je     0x1004b8b7
1004b821:	push   ebx
1004b822:	push   DWORD PTR [ebp+0xc]
1004b825:	lea    ecx,[ebp-0x14]
1004b828:	call   0x100455d5
1004b82d:	mov    ecx,DWORD PTR [ebp-0x14]
1004b830:	mov    edx,DWORD PTR [ecx+0x14]
1004b833:	xor    ebx,ebx
1004b835:	cmp    edx,ebx
1004b837:	jne    0x1004b84d
1004b839:	mov    eax,DWORD PTR [ebp+0x8]
1004b83c:	lea    ecx,[eax-0x41]
1004b83f:	cmp    cx,0x19
1004b843:	ja     0x1004b848
1004b845:	add    eax,0x20
1004b848:	movzx  eax,ax
1004b84b:	jmp    0x1004b8aa
1004b84d:	mov    eax,0x100
1004b852:	cmp    WORD PTR [ebp+0x8],ax
1004b856:	jae    0x1004b881
1004b858:	lea    eax,[ebp-0x14]
1004b85b:	push   eax
1004b85c:	push   0x1
1004b85e:	push   DWORD PTR [ebp+0x8]
1004b861:	call   0x1004f71d
1004b866:	add    esp,0xc
1004b869:	test   eax,eax
1004b86b:	movzx  eax,WORD PTR [ebp+0x8]
1004b86f:	je     0x1004b8aa
1004b871:	mov    ecx,DWORD PTR [ebp-0x14]
1004b874:	mov    ecx,DWORD PTR [ecx+0xcc]
1004b87a:	movzx  ax,BYTE PTR [ecx+eax*1]
1004b87f:	jmp    0x1004b848
1004b881:	push   DWORD PTR [ecx+0x4]
1004b884:	lea    ecx,[ebp-0x4]
1004b887:	push   0x1
1004b889:	push   ecx
1004b88a:	push   0x1
1004b88c:	lea    ecx,[ebp+0x8]
1004b88f:	push   ecx
1004b890:	push   eax
1004b891:	push   edx
1004b892:	lea    eax,[ebp-0x14]
1004b895:	push   eax
1004b896:	call   0x1004b776
1004b89b:	add    esp,0x20
1004b89e:	test   eax,eax
1004b8a0:	movzx  eax,WORD PTR [ebp+0x8]
1004b8a4:	je     0x1004b8aa
1004b8a6:	movzx  eax,WORD PTR [ebp-0x4]
1004b8aa:	cmp    BYTE PTR [ebp-0x8],bl
1004b8ad:	je     0x1004b8b6
1004b8af:	mov    ecx,DWORD PTR [ebp-0xc]
1004b8b2:	and    DWORD PTR [ecx+0x70],0xfffffffd
1004b8b6:	pop    ebx
1004b8b7:	leave  
1004b8b8:	ret    
1004b8b9:	push   0x54
1004b8bb:	push   0x100748d0
1004b8c0:	call   0x10046d84
1004b8c5:	xor    edi,edi
1004b8c7:	mov    DWORD PTR [ebp-0x4],edi
1004b8ca:	lea    eax,[ebp-0x64]
1004b8cd:	push   eax
1004b8ce:	call   DWORD PTR ds:0x100661f8
1004b8d4:	mov    DWORD PTR [ebp-0x4],0xfffffffe
1004b8db:	push   0x28
1004b8dd:	push   0x20
1004b8df:	pop    esi
1004b8e0:	push   esi
1004b8e1:	call   0x10047552
1004b8e6:	pop    ecx
1004b8e7:	pop    ecx
1004b8e8:	cmp    eax,edi
1004b8ea:	je     0x1004baf0
1004b8f0:	mov    ds:0x10082480,eax
1004b8f5:	mov    DWORD PTR ds:0x10082464,esi
1004b8fb:	lea    ecx,[eax+0x500]
1004b901:	jmp    0x1004b92c
1004b903:	mov    BYTE PTR [eax+0x4],0x0
1004b907:	or     DWORD PTR [eax],0xffffffff
1004b90a:	mov    BYTE PTR [eax+0x5],0xa
1004b90e:	mov    DWORD PTR [eax+0x8],edi
1004b911:	mov    BYTE PTR [eax+0x24],0x0
1004b915:	mov    BYTE PTR [eax+0x25],0xa
1004b919:	mov    BYTE PTR [eax+0x26],0xa
1004b91d:	add    eax,0x28
1004b920:	mov    ecx,DWORD PTR ds:0x10082480
1004b926:	add    ecx,0x500
1004b92c:	cmp    eax,ecx
1004b92e:	jb     0x1004b903
1004b930:	cmp    WORD PTR [ebp-0x32],di
1004b934:	je     0x1004ba37
1004b93a:	mov    eax,DWORD PTR [ebp-0x30]
1004b93d:	cmp    eax,edi
1004b93f:	je     0x1004ba37
1004b945:	mov    edi,DWORD PTR [eax]
1004b947:	lea    ebx,[eax+0x4]
1004b94a:	lea    eax,[ebx+edi*1]
1004b94d:	mov    DWORD PTR [ebp-0x1c],eax
1004b950:	mov    eax,0x800
1004b955:	cmp    edi,eax
1004b957:	jl     0x1004b95b
1004b959:	mov    edi,eax
1004b95b:	xor    esi,esi
1004b95d:	inc    esi
1004b95e:	jmp    0x1004b9b2
1004b960:	push   0x28
1004b962:	push   0x20
1004b964:	call   0x10047552
1004b969:	pop    ecx
1004b96a:	pop    ecx
1004b96b:	test   eax,eax
1004b96d:	je     0x1004b9bc
1004b96f:	lea    ecx,[esi*4+0x10082480]
1004b976:	mov    DWORD PTR [ecx],eax
1004b978:	add    DWORD PTR ds:0x10082464,0x20
1004b97f:	lea    edx,[eax+0x500]
1004b985:	jmp    0x1004b9ad
1004b987:	mov    BYTE PTR [eax+0x4],0x0
1004b98b:	or     DWORD PTR [eax],0xffffffff
1004b98e:	mov    BYTE PTR [eax+0x5],0xa
1004b992:	and    DWORD PTR [eax+0x8],0x0
1004b996:	and    BYTE PTR [eax+0x24],0x80
1004b99a:	mov    BYTE PTR [eax+0x25],0xa
1004b99e:	mov    BYTE PTR [eax+0x26],0xa
1004b9a2:	add    eax,0x28
1004b9a5:	mov    edx,DWORD PTR [ecx]
1004b9a7:	add    edx,0x500
1004b9ad:	cmp    eax,edx
1004b9af:	jb     0x1004b987
1004b9b1:	inc    esi
1004b9b2:	cmp    DWORD PTR ds:0x10082464,edi
1004b9b8:	jl     0x1004b960
1004b9ba:	jmp    0x1004b9c2
1004b9bc:	mov    edi,DWORD PTR ds:0x10082464
1004b9c2:	and    DWORD PTR [ebp-0x20],0x0
1004b9c6:	test   edi,edi
1004b9c8:	jle    0x1004ba37
1004b9ca:	mov    eax,DWORD PTR [ebp-0x1c]
1004b9cd:	mov    ecx,DWORD PTR [eax]
1004b9cf:	cmp    ecx,0xffffffff
1004b9d2:	je     0x1004ba2a
1004b9d4:	cmp    ecx,0xfffffffe
1004b9d7:	je     0x1004ba2a
1004b9d9:	mov    al,BYTE PTR [ebx]
1004b9db:	test   al,0x1
1004b9dd:	je     0x1004ba2a
1004b9df:	test   al,0x8
1004b9e1:	jne    0x1004b9ee
1004b9e3:	push   ecx
1004b9e4:	call   DWORD PTR ds:0x100661f4
1004b9ea:	test   eax,eax
1004b9ec:	je     0x1004ba2a
1004b9ee:	mov    esi,DWORD PTR [ebp-0x20]
1004b9f1:	mov    eax,esi
1004b9f3:	sar    eax,0x5
1004b9f6:	and    esi,0x1f
1004b9f9:	imul   esi,esi,0x28
1004b9fc:	add    esi,DWORD PTR [eax*4+0x10082480]
1004ba03:	mov    eax,DWORD PTR [ebp-0x1c]
1004ba06:	mov    eax,DWORD PTR [eax]
1004ba08:	mov    DWORD PTR [esi],eax
1004ba0a:	mov    al,BYTE PTR [ebx]
1004ba0c:	mov    BYTE PTR [esi+0x4],al
1004ba0f:	push   0xfa0
1004ba14:	lea    eax,[esi+0xc]
1004ba17:	push   eax
1004ba18:	call   0x1004c68b
1004ba1d:	pop    ecx
1004ba1e:	pop    ecx
1004ba1f:	test   eax,eax
1004ba21:	je     0x1004baf0
1004ba27:	inc    DWORD PTR [esi+0x8]
1004ba2a:	inc    DWORD PTR [ebp-0x20]
1004ba2d:	inc    ebx
1004ba2e:	add    DWORD PTR [ebp-0x1c],0x4
1004ba32:	cmp    DWORD PTR [ebp-0x20],edi
1004ba35:	jl     0x1004b9ca
1004ba37:	xor    ebx,ebx
1004ba39:	mov    esi,ebx
1004ba3b:	imul   esi,esi,0x28
1004ba3e:	add    esi,DWORD PTR ds:0x10082480
1004ba44:	mov    eax,DWORD PTR [esi]
1004ba46:	cmp    eax,0xffffffff
1004ba49:	je     0x1004ba56
1004ba4b:	cmp    eax,0xfffffffe
1004ba4e:	je     0x1004ba56
1004ba50:	or     BYTE PTR [esi+0x4],0x80
1004ba54:	jmp    0x1004bac8
1004ba56:	mov    BYTE PTR [esi+0x4],0x81
1004ba5a:	test   ebx,ebx
1004ba5c:	jne    0x1004ba63
1004ba5e:	push   0xfffffff6
1004ba60:	pop    eax
1004ba61:	jmp    0x1004ba6d
1004ba63:	mov    eax,ebx
1004ba65:	dec    eax
1004ba66:	neg    eax
1004ba68:	sbb    eax,eax
1004ba6a:	add    eax,0xfffffff5
1004ba6d:	push   eax
1004ba6e:	call   DWORD PTR ds:0x100661d4
1004ba74:	mov    edi,eax
1004ba76:	cmp    edi,0xffffffff
1004ba79:	je     0x1004babe
1004ba7b:	test   edi,edi
1004ba7d:	je     0x1004babe
1004ba7f:	push   edi
1004ba80:	call   DWORD PTR ds:0x100661f4
1004ba86:	test   eax,eax
1004ba88:	je     0x1004babe
1004ba8a:	mov    DWORD PTR [esi],edi
1004ba8c:	and    eax,0xff
1004ba91:	cmp    eax,0x2
1004ba94:	jne    0x1004ba9c
1004ba96:	or     BYTE PTR [esi+0x4],0x40
1004ba9a:	jmp    0x1004baa5
1004ba9c:	cmp    eax,0x3
1004ba9f:	jne    0x1004baa5
1004baa1:	or     BYTE PTR [esi+0x4],0x8
1004baa5:	push   0xfa0
1004baaa:	lea    eax,[esi+0xc]
1004baad:	push   eax
1004baae:	call   0x1004c68b
1004bab3:	pop    ecx
1004bab4:	pop    ecx
1004bab5:	test   eax,eax
1004bab7:	je     0x1004baf0
1004bab9:	inc    DWORD PTR [esi+0x8]
1004babc:	jmp    0x1004bac8
1004babe:	or     BYTE PTR [esi+0x4],0x40
1004bac2:	mov    DWORD PTR [esi],0xfffffffe
1004bac8:	inc    ebx
1004bac9:	cmp    ebx,0x3
1004bacc:	jl     0x1004ba39
1004bad2:	push   DWORD PTR ds:0x10082464
1004bad8:	call   DWORD PTR ds:0x100661f0
1004bade:	xor    eax,eax
1004bae0:	jmp    0x1004baf3
1004bae2:	xor    eax,eax
1004bae4:	inc    eax
1004bae5:	ret    
1004bae6:	mov    esp,DWORD PTR [ebp-0x18]
1004bae9:	mov    DWORD PTR [ebp-0x4],0xfffffffe
1004baf0:	or     eax,0xffffffff
1004baf3:	call   0x10046dc9
1004baf8:	ret    
1004baf9:	push   esi
1004bafa:	push   edi
1004bafb:	mov    esi,0x10082480
1004bb00:	mov    edi,DWORD PTR [esi]
1004bb02:	test   edi,edi
1004bb04:	je     0x1004bb37
1004bb06:	lea    eax,[edi+0x500]
1004bb0c:	jmp    0x1004bb28
1004bb0e:	cmp    DWORD PTR [edi+0x8],0x0
1004bb12:	je     0x1004bb1e
1004bb14:	lea    eax,[edi+0xc]
1004bb17:	push   eax
1004bb18:	call   DWORD PTR ds:0x10066138
1004bb1e:	mov    eax,DWORD PTR [esi]
1004bb20:	add    edi,0x28
1004bb23:	add    eax,0x500
1004bb28:	cmp    edi,eax
1004bb2a:	jb     0x1004bb0e
1004bb2c:	push   DWORD PTR [esi]
1004bb2e:	call   0x100435f8
1004bb33:	and    DWORD PTR [esi],0x0
1004bb36:	pop    ecx
1004bb37:	add    esi,0x4
1004bb3a:	cmp    esi,0x10082580
1004bb40:	jl     0x1004bb00
1004bb42:	pop    edi
1004bb43:	pop    esi
1004bb44:	ret    
1004bb45:	push   ebx
1004bb46:	xor    ebx,ebx
1004bb48:	cmp    DWORD PTR ds:0x100825b4,ebx
1004bb4e:	push   esi
1004bb4f:	push   edi
1004bb50:	jne    0x1004bb57
1004bb52:	call   0x1004a6ea
1004bb57:	mov    esi,DWORD PTR ds:0x1007fa98
1004bb5d:	xor    edi,edi
1004bb5f:	cmp    esi,ebx
1004bb61:	jne    0x1004bb7b
1004bb63:	or     eax,0xffffffff
1004bb66:	jmp    0x1004bc06
1004bb6b:	cmp    al,0x3d
1004bb6d:	je     0x1004bb70
1004bb6f:	inc    edi
1004bb70:	push   esi
1004bb71:	call   0x10043100
1004bb76:	pop    ecx
1004bb77:	lea    esi,[esi+eax*1+0x1]
1004bb7b:	mov    al,BYTE PTR [esi]
1004bb7d:	cmp    al,bl
1004bb7f:	jne    0x1004bb6b
1004bb81:	push   0x4
1004bb83:	inc    edi
1004bb84:	push   edi
1004bb85:	call   0x10047552
1004bb8a:	mov    edi,eax
1004bb8c:	cmp    edi,ebx
1004bb8e:	pop    ecx
1004bb8f:	pop    ecx
1004bb90:	mov    DWORD PTR ds:0x1007fe08,edi
1004bb96:	je     0x1004bb63
1004bb98:	mov    esi,DWORD PTR ds:0x1007fa98
1004bb9e:	push   ebp
1004bb9f:	jmp    0x1004bbe1
1004bba1:	push   esi
1004bba2:	call   0x10043100
1004bba7:	mov    ebp,eax
1004bba9:	inc    ebp
1004bbaa:	cmp    BYTE PTR [esi],0x3d
1004bbad:	pop    ecx
1004bbae:	je     0x1004bbdf
1004bbb0:	push   0x1
1004bbb2:	push   ebp
1004bbb3:	call   0x10047552
1004bbb8:	cmp    eax,ebx
1004bbba:	pop    ecx
1004bbbb:	pop    ecx
1004bbbc:	mov    DWORD PTR [edi],eax
1004bbbe:	je     0x1004bc0a
1004bbc0:	push   esi
1004bbc1:	push   ebp
1004bbc2:	push   eax
1004bbc3:	call   0x10046c89
1004bbc8:	add    esp,0xc
1004bbcb:	test   eax,eax
1004bbcd:	je     0x1004bbdc
1004bbcf:	push   ebx
1004bbd0:	push   ebx
1004bbd1:	push   ebx
1004bbd2:	push   ebx
1004bbd3:	push   ebx
1004bbd4:	call   0x10043380
1004bbd9:	add    esp,0x14
1004bbdc:	add    edi,0x4
1004bbdf:	add    esi,ebp
1004bbe1:	cmp    BYTE PTR [esi],bl
1004bbe3:	jne    0x1004bba1
1004bbe5:	push   DWORD PTR ds:0x1007fa98
1004bbeb:	call   0x100435f8
1004bbf0:	mov    DWORD PTR ds:0x1007fa98,ebx
1004bbf6:	mov    DWORD PTR [edi],ebx
1004bbf8:	mov    DWORD PTR ds:0x100825a8,0x1
1004bc02:	xor    eax,eax
1004bc04:	pop    ecx
1004bc05:	pop    ebp
1004bc06:	pop    edi
1004bc07:	pop    esi
1004bc08:	pop    ebx
1004bc09:	ret    
1004bc0a:	push   DWORD PTR ds:0x1007fe08
1004bc10:	call   0x100435f8
1004bc15:	mov    DWORD PTR ds:0x1007fe08,ebx
1004bc1b:	or     eax,0xffffffff
1004bc1e:	jmp    0x1004bc04
1004bc20:	push   ebp
1004bc21:	mov    ebp,esp
1004bc23:	push   ecx
1004bc24:	mov    ecx,DWORD PTR [ebp+0x10]
1004bc27:	push   ebx
1004bc28:	xor    eax,eax
1004bc2a:	cmp    DWORD PTR [ebp+0x8],eax
1004bc2d:	push   esi
1004bc2e:	mov    DWORD PTR [edi],eax
1004bc30:	mov    esi,edx
1004bc32:	mov    edx,DWORD PTR [ebp+0xc]
1004bc35:	mov    DWORD PTR [ecx],0x1
1004bc3b:	je     0x1004bc46
1004bc3d:	mov    ebx,DWORD PTR [ebp+0x8]
1004bc40:	add    DWORD PTR [ebp+0x8],0x4
1004bc44:	mov    DWORD PTR [ebx],edx
1004bc46:	mov    DWORD PTR [ebp-0x4],eax
1004bc49:	cmp    BYTE PTR [esi],0x22
1004bc4c:	jne    0x1004bc5e
1004bc4e:	xor    eax,eax
1004bc50:	cmp    DWORD PTR [ebp-0x4],eax
1004bc53:	mov    bl,0x22
1004bc55:	sete   al
1004bc58:	inc    esi
1004bc59:	mov    DWORD PTR [ebp-0x4],eax
1004bc5c:	jmp    0x1004bc9a
1004bc5e:	inc    DWORD PTR [edi]
1004bc60:	test   edx,edx
1004bc62:	je     0x1004bc6c
1004bc64:	mov    al,BYTE PTR [esi]
1004bc66:	mov    BYTE PTR [edx],al
1004bc68:	inc    edx
1004bc69:	mov    DWORD PTR [ebp+0xc],edx
1004bc6c:	mov    bl,BYTE PTR [esi]
1004bc6e:	movzx  eax,bl
1004bc71:	push   eax
1004bc72:	inc    esi
1004bc73:	call   0x1004f7f0
1004bc78:	test   eax,eax
1004bc7a:	pop    ecx
1004bc7b:	je     0x1004bc90
1004bc7d:	inc    DWORD PTR [edi]
1004bc7f:	cmp    DWORD PTR [ebp+0xc],0x0
1004bc83:	je     0x1004bc8f
1004bc85:	mov    ecx,DWORD PTR [ebp+0xc]
1004bc88:	mov    al,BYTE PTR [esi]
1004bc8a:	inc    DWORD PTR [ebp+0xc]
1004bc8d:	mov    BYTE PTR [ecx],al
1004bc8f:	inc    esi
1004bc90:	test   bl,bl
1004bc92:	mov    edx,DWORD PTR [ebp+0xc]
1004bc95:	mov    ecx,DWORD PTR [ebp+0x10]
1004bc98:	je     0x1004bccc
1004bc9a:	cmp    DWORD PTR [ebp-0x4],0x0
1004bc9e:	jne    0x1004bc49
1004bca0:	cmp    bl,0x20
1004bca3:	je     0x1004bcaa
1004bca5:	cmp    bl,0x9
1004bca8:	jne    0x1004bc49
1004bcaa:	test   edx,edx
1004bcac:	je     0x1004bcb2
1004bcae:	mov    BYTE PTR [edx-0x1],0x0
1004bcb2:	and    DWORD PTR [ebp-0x4],0x0
1004bcb6:	cmp    BYTE PTR [esi],0x0
1004bcb9:	je     0x1004bda8
1004bcbf:	mov    al,BYTE PTR [esi]
1004bcc1:	cmp    al,0x20
1004bcc3:	je     0x1004bcc9
1004bcc5:	cmp    al,0x9
1004bcc7:	jne    0x1004bccf
1004bcc9:	inc    esi
1004bcca:	jmp    0x1004bcbf
1004bccc:	dec    esi
1004bccd:	jmp    0x1004bcb2
1004bccf:	cmp    BYTE PTR [esi],0x0
1004bcd2:	je     0x1004bda8
1004bcd8:	cmp    DWORD PTR [ebp+0x8],0x0
1004bcdc:	je     0x1004bce7
1004bcde:	mov    eax,DWORD PTR [ebp+0x8]
1004bce1:	add    DWORD PTR [ebp+0x8],0x4
1004bce5:	mov    DWORD PTR [eax],edx
1004bce7:	inc    DWORD PTR [ecx]
1004bce9:	xor    ebx,ebx
1004bceb:	inc    ebx
1004bcec:	xor    ecx,ecx
1004bcee:	jmp    0x1004bcf2
1004bcf0:	inc    esi
1004bcf1:	inc    ecx
1004bcf2:	cmp    BYTE PTR [esi],0x5c
1004bcf5:	je     0x1004bcf0
1004bcf7:	cmp    BYTE PTR [esi],0x22
1004bcfa:	jne    0x1004bd22
1004bcfc:	test   cl,0x1
1004bcff:	jne    0x1004bd20
1004bd01:	cmp    DWORD PTR [ebp-0x4],0x0
1004bd05:	je     0x1004bd13
1004bd07:	lea    eax,[esi+0x1]
1004bd0a:	cmp    BYTE PTR [eax],0x22
1004bd0d:	jne    0x1004bd13
1004bd0f:	mov    esi,eax
1004bd11:	jmp    0x1004bd20
1004bd13:	xor    eax,eax
1004bd15:	xor    ebx,ebx
1004bd17:	cmp    DWORD PTR [ebp-0x4],eax
1004bd1a:	sete   al
1004bd1d:	mov    DWORD PTR [ebp-0x4],eax
1004bd20:	shr    ecx,1
1004bd22:	test   ecx,ecx
1004bd24:	je     0x1004bd38
1004bd26:	dec    ecx
1004bd27:	test   edx,edx
1004bd29:	je     0x1004bd2f
1004bd2b:	mov    BYTE PTR [edx],0x5c
1004bd2e:	inc    edx
1004bd2f:	inc    DWORD PTR [edi]
1004bd31:	test   ecx,ecx
1004bd33:	jne    0x1004bd26
1004bd35:	mov    DWORD PTR [ebp+0xc],edx
1004bd38:	mov    al,BYTE PTR [esi]
1004bd3a:	test   al,al
1004bd3c:	je     0x1004bd93
1004bd3e:	cmp    DWORD PTR [ebp-0x4],0x0
1004bd42:	jne    0x1004bd4c
1004bd44:	cmp    al,0x20
1004bd46:	je     0x1004bd93
1004bd48:	cmp    al,0x9
1004bd4a:	je     0x1004bd93
1004bd4c:	test   ebx,ebx
1004bd4e:	je     0x1004bd8d
1004bd50:	test   edx,edx
1004bd52:	movsx  eax,al
1004bd55:	push   eax
1004bd56:	je     0x1004bd7b
1004bd58:	call   0x1004f7f0
1004bd5d:	test   eax,eax
1004bd5f:	pop    ecx
1004bd60:	je     0x1004bd6f
1004bd62:	mov    al,BYTE PTR [esi]
1004bd64:	mov    ecx,DWORD PTR [ebp+0xc]
1004bd67:	inc    DWORD PTR [ebp+0xc]
1004bd6a:	mov    BYTE PTR [ecx],al
1004bd6c:	inc    esi
1004bd6d:	inc    DWORD PTR [edi]
1004bd6f:	mov    ecx,DWORD PTR [ebp+0xc]
1004bd72:	mov    al,BYTE PTR [esi]
1004bd74:	inc    DWORD PTR [ebp+0xc]
1004bd77:	mov    BYTE PTR [ecx],al
1004bd79:	jmp    0x1004bd88
1004bd7b:	call   0x1004f7f0
1004bd80:	test   eax,eax
1004bd82:	pop    ecx
1004bd83:	je     0x1004bd88
1004bd85:	inc    esi
1004bd86:	inc    DWORD PTR [edi]
1004bd88:	inc    DWORD PTR [edi]
1004bd8a:	mov    edx,DWORD PTR [ebp+0xc]
1004bd8d:	inc    esi
1004bd8e:	jmp    0x1004bce9
1004bd93:	test   edx,edx
1004bd95:	je     0x1004bd9e
1004bd97:	mov    BYTE PTR [edx],0x0
1004bd9a:	inc    edx
1004bd9b:	mov    DWORD PTR [ebp+0xc],edx
1004bd9e:	inc    DWORD PTR [edi]
1004bda0:	mov    ecx,DWORD PTR [ebp+0x10]
1004bda3:	jmp    0x1004bcb6
1004bda8:	mov    eax,DWORD PTR [ebp+0x8]
1004bdab:	test   eax,eax
1004bdad:	pop    esi
1004bdae:	pop    ebx
1004bdaf:	je     0x1004bdb4
1004bdb1:	and    DWORD PTR [eax],0x0
1004bdb4:	inc    DWORD PTR [ecx]
1004bdb6:	leave  
1004bdb7:	ret    
1004bdb8:	push   ebp
1004bdb9:	mov    ebp,esp
1004bdbb:	sub    esp,0xc
1004bdbe:	push   ebx
1004bdbf:	xor    ebx,ebx
1004bdc1:	cmp    DWORD PTR ds:0x100825b4,ebx
1004bdc7:	push   esi
1004bdc8:	push   edi
1004bdc9:	jne    0x1004bdd0
1004bdcb:	call   0x1004a6ea
1004bdd0:	push   0x104
1004bdd5:	mov    esi,0x10080300
1004bdda:	push   esi
1004bddb:	push   ebx
1004bddc:	mov    BYTE PTR ds:0x10080404,bl
1004bde2:	call   DWORD PTR ds:0x100661d8
1004bde8:	mov    eax,ds:0x100825bc
1004bded:	cmp    eax,ebx
1004bdef:	mov    DWORD PTR ds:0x1007fe18,esi
1004bdf5:	je     0x1004bdfe
1004bdf7:	cmp    BYTE PTR [eax],bl
1004bdf9:	mov    DWORD PTR [ebp-0x4],eax
1004bdfc:	jne    0x1004be01
1004bdfe:	mov    DWORD PTR [ebp-0x4],esi
1004be01:	mov    edx,DWORD PTR [ebp-0x4]
1004be04:	lea    eax,[ebp-0x8]
1004be07:	push   eax
1004be08:	push   ebx
1004be09:	push   ebx
1004be0a:	lea    edi,[ebp-0xc]
1004be0d:	call   0x1004bc20
1004be12:	mov    eax,DWORD PTR [ebp-0x8]
1004be15:	add    esp,0xc
1004be18:	cmp    eax,0x3fffffff
1004be1d:	jae    0x1004be69
1004be1f:	mov    ecx,DWORD PTR [ebp-0xc]
1004be22:	cmp    ecx,0xffffffff
1004be25:	jae    0x1004be69
1004be27:	mov    edi,eax
1004be29:	shl    edi,0x2
1004be2c:	lea    eax,[edi+ecx*1]
1004be2f:	cmp    eax,ecx
1004be31:	jb     0x1004be69
1004be33:	push   eax
1004be34:	call   0x10047512
1004be39:	mov    esi,eax
1004be3b:	cmp    esi,ebx
1004be3d:	pop    ecx
1004be3e:	je     0x1004be69
1004be40:	mov    edx,DWORD PTR [ebp-0x4]
1004be43:	lea    eax,[ebp-0x8]
1004be46:	push   eax
1004be47:	add    edi,esi
1004be49:	push   edi
1004be4a:	push   esi
1004be4b:	lea    edi,[ebp-0xc]
1004be4e:	call   0x1004bc20
1004be53:	mov    eax,DWORD PTR [ebp-0x8]
1004be56:	add    esp,0xc
1004be59:	dec    eax
1004be5a:	mov    ds:0x1007fdfc,eax
1004be5f:	mov    DWORD PTR ds:0x1007fe00,esi
1004be65:	xor    eax,eax
1004be67:	jmp    0x1004be6c
1004be69:	or     eax,0xffffffff
1004be6c:	pop    edi
1004be6d:	pop    esi
1004be6e:	pop    ebx
1004be6f:	leave  
1004be70:	ret    
1004be71:	push   ecx
1004be72:	push   ecx
1004be73:	mov    eax,ds:0x10080408
1004be78:	push   ebx
1004be79:	push   ebp
1004be7a:	push   esi
1004be7b:	push   edi
1004be7c:	mov    edi,DWORD PTR ds:0x10066208
1004be82:	xor    ebx,ebx
1004be84:	xor    esi,esi
1004be86:	cmp    eax,ebx
1004be88:	push   0x2
1004be8a:	pop    ebp
1004be8b:	jne    0x1004beba
1004be8d:	call   edi
1004be8f:	mov    esi,eax
1004be91:	cmp    esi,ebx
1004be93:	je     0x1004bea1
1004be95:	mov    DWORD PTR ds:0x10080408,0x1
1004be9f:	jmp    0x1004bec3
1004bea1:	call   DWORD PTR ds:0x100660cc
1004bea7:	cmp    eax,0x78
1004beaa:	jne    0x1004beb5
1004beac:	mov    eax,ebp
1004beae:	mov    ds:0x10080408,eax
1004beb3:	jmp    0x1004beba
1004beb5:	mov    eax,ds:0x10080408
1004beba:	cmp    eax,0x1
1004bebd:	jne    0x1004bf47
1004bec3:	cmp    esi,ebx
1004bec5:	jne    0x1004bed6
1004bec7:	call   edi
1004bec9:	mov    esi,eax
1004becb:	cmp    esi,ebx
1004becd:	jne    0x1004bed6
1004becf:	xor    eax,eax
1004bed1:	jmp    0x1004bf9f
1004bed6:	cmp    WORD PTR [esi],bx
1004bed9:	mov    eax,esi
1004bedb:	je     0x1004beeb
1004bedd:	add    eax,ebp
1004bedf:	cmp    WORD PTR [eax],bx
1004bee2:	jne    0x1004bedd
1004bee4:	add    eax,ebp
1004bee6:	cmp    WORD PTR [eax],bx
1004bee9:	jne    0x1004bedd
1004beeb:	mov    edi,DWORD PTR ds:0x100660b8
1004bef1:	push   ebx
1004bef2:	push   ebx
1004bef3:	push   ebx
1004bef4:	sub    eax,esi
1004bef6:	push   ebx
1004bef7:	sar    eax,1
1004bef9:	inc    eax
1004befa:	push   eax
1004befb:	push   esi
1004befc:	push   ebx
1004befd:	push   ebx
1004befe:	mov    DWORD PTR [esp+0x34],eax
1004bf02:	call   edi
1004bf04:	mov    ebp,eax
1004bf06:	cmp    ebp,ebx
1004bf08:	je     0x1004bf3c
1004bf0a:	push   ebp
1004bf0b:	call   0x10047512
1004bf10:	cmp    eax,ebx
1004bf12:	pop    ecx
1004bf13:	mov    DWORD PTR [esp+0x10],eax
1004bf17:	je     0x1004bf3c
1004bf19:	push   ebx
1004bf1a:	push   ebx
1004bf1b:	push   ebp
1004bf1c:	push   eax
1004bf1d:	push   DWORD PTR [esp+0x24]
1004bf21:	push   esi
1004bf22:	push   ebx
1004bf23:	push   ebx
1004bf24:	call   edi
1004bf26:	test   eax,eax
1004bf28:	jne    0x1004bf38
1004bf2a:	push   DWORD PTR [esp+0x10]
1004bf2e:	call   0x100435f8
1004bf33:	pop    ecx
1004bf34:	mov    DWORD PTR [esp+0x10],ebx
1004bf38:	mov    ebx,DWORD PTR [esp+0x10]
1004bf3c:	push   esi
1004bf3d:	call   DWORD PTR ds:0x10066204
1004bf43:	mov    eax,ebx
1004bf45:	jmp    0x1004bf9f
1004bf47:	cmp    eax,ebp
1004bf49:	je     0x1004bf4f
1004bf4b:	cmp    eax,ebx
1004bf4d:	jne    0x1004becf
1004bf4f:	call   DWORD PTR ds:0x10066200
1004bf55:	mov    esi,eax
1004bf57:	cmp    esi,ebx
1004bf59:	je     0x1004becf
1004bf5f:	cmp    BYTE PTR [esi],bl
1004bf61:	je     0x1004bf6d
1004bf63:	inc    eax
1004bf64:	cmp    BYTE PTR [eax],bl
1004bf66:	jne    0x1004bf63
1004bf68:	inc    eax
1004bf69:	cmp    BYTE PTR [eax],bl
1004bf6b:	jne    0x1004bf63
1004bf6d:	sub    eax,esi
1004bf6f:	inc    eax
1004bf70:	mov    ebp,eax
1004bf72:	push   ebp
1004bf73:	call   0x10047512
1004bf78:	mov    edi,eax
1004bf7a:	cmp    edi,ebx
1004bf7c:	pop    ecx
1004bf7d:	jne    0x1004bf8b
1004bf7f:	push   esi
1004bf80:	call   DWORD PTR ds:0x100661fc
1004bf86:	jmp    0x1004becf
1004bf8b:	push   ebp
1004bf8c:	push   esi
1004bf8d:	push   edi
1004bf8e:	call   0x10045270
1004bf93:	add    esp,0xc
1004bf96:	push   esi
1004bf97:	call   DWORD PTR ds:0x100661fc
1004bf9d:	mov    eax,edi
1004bf9f:	pop    edi
1004bfa0:	pop    esi
1004bfa1:	pop    ebp
1004bfa2:	pop    ebx
1004bfa3:	pop    ecx
1004bfa4:	pop    ecx
1004bfa5:	ret    
1004bfa6:	push   esi
1004bfa7:	push   edi
1004bfa8:	mov    eax,0x1007463c
1004bfad:	mov    edi,0x1007463c
1004bfb2:	cmp    eax,edi
1004bfb4:	mov    esi,eax
1004bfb6:	jae    0x1004bfc7
1004bfb8:	mov    eax,DWORD PTR [esi]
1004bfba:	test   eax,eax
1004bfbc:	je     0x1004bfc0
1004bfbe:	call   eax
1004bfc0:	add    esi,0x4
1004bfc3:	cmp    esi,edi
1004bfc5:	jb     0x1004bfb8
1004bfc7:	pop    edi
1004bfc8:	pop    esi
1004bfc9:	ret    
1004bfca:	push   esi
1004bfcb:	push   edi
1004bfcc:	mov    eax,0x10074644
1004bfd1:	mov    edi,0x10074644
1004bfd6:	cmp    eax,edi
1004bfd8:	mov    esi,eax
1004bfda:	jae    0x1004bfeb
1004bfdc:	mov    eax,DWORD PTR [esi]
1004bfde:	test   eax,eax
1004bfe0:	je     0x1004bfe4
1004bfe2:	call   eax
1004bfe4:	add    esi,0x4
1004bfe7:	cmp    esi,edi
1004bfe9:	jb     0x1004bfdc
1004bfeb:	pop    edi
1004bfec:	pop    esi
1004bfed:	ret    
1004bfee:	push   ebp
1004bfef:	mov    ebp,esp
1004bff1:	push   ecx
1004bff2:	push   ecx
1004bff3:	push   esi
1004bff4:	call   0x10047169
1004bff9:	mov    esi,eax
1004bffb:	test   esi,esi
1004bffd:	jne    0x1004c00d
1004bfff:	push   DWORD PTR [ebp+0xc]
1004c002:	call   DWORD PTR ds:0x1006617c
1004c008:	jmp    0x1004c15a
1004c00d:	mov    edx,DWORD PTR [esi+0x5c]
1004c010:	mov    eax,ds:0x1007ea7c
1004c015:	push   edi
1004c016:	mov    edi,DWORD PTR [ebp+0x8]
1004c019:	mov    ecx,edx
1004c01b:	push   ebx
1004c01c:	cmp    DWORD PTR [ecx],edi
1004c01e:	je     0x1004c02e
1004c020:	mov    ebx,eax
1004c022:	imul   ebx,ebx,0xc
1004c025:	add    ecx,0xc
1004c028:	add    ebx,edx
1004c02a:	cmp    ecx,ebx
1004c02c:	jb     0x1004c01c
1004c02e:	imul   eax,eax,0xc
1004c031:	add    eax,edx
1004c033:	cmp    ecx,eax
1004c035:	jae    0x1004c03f
1004c037:	cmp    DWORD PTR [ecx],edi
1004c039:	jne    0x1004c03f
1004c03b:	mov    eax,ecx
1004c03d:	jmp    0x1004c041
1004c03f:	xor    eax,eax
1004c041:	test   eax,eax
1004c043:	je     0x1004c04f
1004c045:	mov    ebx,DWORD PTR [eax+0x8]
1004c048:	test   ebx,ebx
1004c04a:	mov    DWORD PTR [ebp-0x4],ebx
1004c04d:	jne    0x1004c05d
1004c04f:	push   DWORD PTR [ebp+0xc]
1004c052:	call   DWORD PTR ds:0x1006617c
1004c058:	jmp    0x1004c158
1004c05d:	cmp    ebx,0x5
1004c060:	jne    0x1004c06e
1004c062:	and    DWORD PTR [eax+0x8],0x0
1004c066:	xor    eax,eax
1004c068:	inc    eax
1004c069:	jmp    0x1004c158
1004c06e:	cmp    ebx,0x1
1004c071:	je     0x1004c155
1004c077:	mov    ecx,DWORD PTR [esi+0x60]
1004c07a:	mov    DWORD PTR [ebp-0x8],ecx
1004c07d:	mov    ecx,DWORD PTR [ebp+0xc]
1004c080:	mov    DWORD PTR [esi+0x60],ecx
1004c083:	mov    ecx,DWORD PTR [eax+0x4]
1004c086:	cmp    ecx,0x8
1004c089:	jne    0x1004c147
1004c08f:	mov    ecx,DWORD PTR ds:0x1007ea70
1004c095:	mov    edi,DWORD PTR ds:0x1007ea74
1004c09b:	mov    edx,ecx
1004c09d:	add    edi,ecx
1004c09f:	cmp    edx,edi
1004c0a1:	jge    0x1004c0c7
1004c0a3:	imul   ecx,ecx,0xc
1004c0a6:	mov    edi,DWORD PTR [esi+0x5c]
1004c0a9:	and    DWORD PTR [ecx+edi*1+0x8],0x0
1004c0ae:	mov    edi,DWORD PTR ds:0x1007ea70
1004c0b4:	mov    ebx,DWORD PTR ds:0x1007ea74
1004c0ba:	inc    edx
1004c0bb:	add    ebx,edi
1004c0bd:	add    ecx,0xc
1004c0c0:	cmp    edx,ebx
1004c0c2:	jl     0x1004c0a6
1004c0c4:	mov    ebx,DWORD PTR [ebp-0x4]
1004c0c7:	mov    eax,DWORD PTR [eax]
1004c0c9:	cmp    eax,0xc000008e
1004c0ce:	mov    edi,DWORD PTR [esi+0x64]
1004c0d1:	jne    0x1004c0dc
1004c0d3:	mov    DWORD PTR [esi+0x64],0x83
1004c0da:	jmp    0x1004c13a
1004c0dc:	cmp    eax,0xc0000090
1004c0e1:	jne    0x1004c0ec
1004c0e3:	mov    DWORD PTR [esi+0x64],0x81
1004c0ea:	jmp    0x1004c13a
1004c0ec:	cmp    eax,0xc0000091
1004c0f1:	jne    0x1004c0fc
1004c0f3:	mov    DWORD PTR [esi+0x64],0x84
1004c0fa:	jmp    0x1004c13a
1004c0fc:	cmp    eax,0xc0000093
1004c101:	jne    0x1004c10c
1004c103:	mov    DWORD PTR [esi+0x64],0x85
1004c10a:	jmp    0x1004c13a
1004c10c:	cmp    eax,0xc000008d
1004c111:	jne    0x1004c11c
1004c113:	mov    DWORD PTR [esi+0x64],0x82
1004c11a:	jmp    0x1004c13a
1004c11c:	cmp    eax,0xc000008f
1004c121:	jne    0x1004c12c
1004c123:	mov    DWORD PTR [esi+0x64],0x86
1004c12a:	jmp    0x1004c13a
1004c12c:	cmp    eax,0xc0000092
1004c131:	jne    0x1004c13a
1004c133:	mov    DWORD PTR [esi+0x64],0x8a
1004c13a:	push   DWORD PTR [esi+0x64]
1004c13d:	push   0x8
1004c13f:	call   ebx
1004c141:	pop    ecx
1004c142:	mov    DWORD PTR [esi+0x64],edi
1004c145:	jmp    0x1004c14e
1004c147:	and    DWORD PTR [eax+0x8],0x0
1004c14b:	push   ecx
1004c14c:	call   ebx
1004c14e:	mov    eax,DWORD PTR [ebp-0x8]
1004c151:	pop    ecx
1004c152:	mov    DWORD PTR [esi+0x60],eax
1004c155:	or     eax,0xffffffff
1004c158:	pop    ebx
1004c159:	pop    edi
1004c15a:	pop    esi
1004c15b:	leave  
1004c15c:	ret    
1004c15d:	mov    eax,0xe06d7363
1004c162:	cmp    DWORD PTR [esp+0x4],eax
1004c166:	jne    0x1004c175
1004c168:	push   DWORD PTR [esp+0x8]
1004c16c:	push   eax
1004c16d:	call   0x1004bfee
1004c172:	pop    ecx
1004c173:	pop    ecx
1004c174:	ret    
1004c175:	xor    eax,eax
1004c177:	ret    
1004c178:	push   ebp
1004c179:	mov    ebp,esp
1004c17b:	sub    esp,0x10
1004c17e:	mov    eax,ds:0x1007e030
1004c183:	and    DWORD PTR [ebp-0x8],0x0
1004c187:	and    DWORD PTR [ebp-0x4],0x0
1004c18b:	push   ebx
1004c18c:	push   edi
1004c18d:	mov    edi,0xbb40e64e
1004c192:	cmp    eax,edi
1004c194:	mov    ebx,0xffff0000
1004c199:	je     0x1004c1a8
1004c19b:	test   ebx,eax
1004c19d:	je     0x1004c1a8
1004c19f:	not    eax
1004c1a1:	mov    ds:0x1007e034,eax
1004c1a6:	jmp    0x1004c208
1004c1a8:	push   esi
1004c1a9:	lea    eax,[ebp-0x8]
1004c1ac:	push   eax
1004c1ad:	call   DWORD PTR ds:0x10066214
1004c1b3:	mov    esi,DWORD PTR [ebp-0x4]
1004c1b6:	xor    esi,DWORD PTR [ebp-0x8]
1004c1b9:	call   DWORD PTR ds:0x10066210
1004c1bf:	xor    esi,eax
1004c1c1:	call   DWORD PTR ds:0x10066160
1004c1c7:	xor    esi,eax
1004c1c9:	call   DWORD PTR ds:0x10066118
1004c1cf:	xor    esi,eax
1004c1d1:	lea    eax,[ebp-0x10]
1004c1d4:	push   eax
1004c1d5:	call   DWORD PTR ds:0x1006620c
1004c1db:	mov    eax,DWORD PTR [ebp-0xc]
1004c1de:	xor    eax,DWORD PTR [ebp-0x10]
1004c1e1:	xor    esi,eax
1004c1e3:	cmp    esi,edi
1004c1e5:	jne    0x1004c1ee
1004c1e7:	mov    esi,0xbb40e64f
1004c1ec:	jmp    0x1004c1f9
1004c1ee:	test   ebx,esi
1004c1f0:	jne    0x1004c1f9
1004c1f2:	mov    eax,esi
1004c1f4:	shl    eax,0x10
1004c1f7:	or     esi,eax
1004c1f9:	mov    DWORD PTR ds:0x1007e030,esi
1004c1ff:	not    esi
1004c201:	mov    DWORD PTR ds:0x1007e034,esi
1004c207:	pop    esi
1004c208:	pop    edi
1004c209:	pop    ebx
1004c20a:	leave  
1004c20b:	ret    
1004c20c:	push   ebx
1004c20d:	push   esi
1004c20e:	push   edi
1004c20f:	mov    edx,DWORD PTR [esp+0x10]
1004c213:	mov    eax,DWORD PTR [esp+0x14]
1004c217:	mov    ecx,DWORD PTR [esp+0x18]
1004c21b:	push   ebp
1004c21c:	push   edx
1004c21d:	push   eax
1004c21e:	push   ecx
1004c21f:	push   ecx
1004c220:	push   0x1004c29c
1004c225:	push   DWORD PTR fs:0x0
1004c22c:	mov    eax,ds:0x1007e030
1004c231:	xor    eax,esp
1004c233:	mov    DWORD PTR [esp+0x8],eax
1004c237:	mov    DWORD PTR fs:0x0,esp
1004c23e:	mov    eax,DWORD PTR [esp+0x30]
1004c242:	mov    ebx,DWORD PTR [eax+0x8]
1004c245:	mov    ecx,DWORD PTR [esp+0x2c]
1004c249:	xor    ebx,DWORD PTR [ecx]
1004c24b:	mov    esi,DWORD PTR [eax+0xc]
1004c24e:	cmp    esi,0xfffffffe
1004c251:	je     0x1004c28e
1004c253:	mov    edx,DWORD PTR [esp+0x34]
1004c257:	cmp    edx,0xfffffffe
1004c25a:	je     0x1004c260
1004c25c:	cmp    esi,edx
1004c25e:	jbe    0x1004c28e
1004c260:	lea    esi,[esi+esi*2]
1004c263:	lea    ebx,[ebx+esi*4+0x10]
1004c267:	mov    ecx,DWORD PTR [ebx]
1004c269:	mov    DWORD PTR [eax+0xc],ecx
1004c26c:	cmp    DWORD PTR [ebx+0x4],0x0
1004c270:	jne    0x1004c23e
1004c272:	push   0x101
1004c277:	mov    eax,DWORD PTR [ebx+0x8]
1004c27a:	call   0x1004f919
1004c27f:	mov    ecx,0x1
1004c284:	mov    eax,DWORD PTR [ebx+0x8]
1004c287:	call   0x1004f938
1004c28c:	jmp    0x1004c23e
1004c28e:	pop    DWORD PTR fs:0x0
1004c295:	add    esp,0x18
1004c298:	pop    edi
1004c299:	pop    esi
1004c29a:	pop    ebx
1004c29b:	ret    
1004c29c:	mov    ecx,DWORD PTR [esp+0x4]
1004c2a0:	test   DWORD PTR [ecx+0x4],0x6
1004c2a7:	mov    eax,0x1
1004c2ac:	je     0x1004c2e1
1004c2ae:	mov    eax,DWORD PTR [esp+0x8]
1004c2b2:	mov    ecx,DWORD PTR [eax+0x8]
1004c2b5:	xor    ecx,eax
1004c2b7:	call   0x10042f87
1004c2bc:	push   ebp
1004c2bd:	mov    ebp,DWORD PTR [eax+0x18]
1004c2c0:	push   DWORD PTR [eax+0xc]
1004c2c3:	push   DWORD PTR [eax+0x10]
1004c2c6:	push   DWORD PTR [eax+0x14]
1004c2c9:	call   0x1004c20c
1004c2ce:	add    esp,0xc
1004c2d1:	pop    ebp
1004c2d2:	mov    eax,DWORD PTR [esp+0x8]
1004c2d6:	mov    edx,DWORD PTR [esp+0x10]
1004c2da:	mov    DWORD PTR [edx],eax
1004c2dc:	mov    eax,0x3
1004c2e1:	ret    
1004c2e2:	push   ebp
1004c2e3:	mov    ecx,DWORD PTR [esp+0x8]
1004c2e7:	mov    ebp,DWORD PTR [ecx]
1004c2e9:	push   DWORD PTR [ecx+0x1c]
1004c2ec:	push   DWORD PTR [ecx+0x18]
1004c2ef:	push   DWORD PTR [ecx+0x28]
1004c2f2:	call   0x1004c20c
1004c2f7:	add    esp,0xc
1004c2fa:	pop    ebp
1004c2fb:	ret    0x4
1004c2fe:	push   ebp
1004c2ff:	push   esi
1004c300:	push   edi
1004c301:	push   ebx
1004c302:	mov    ebp,edx
1004c304:	xor    eax,eax
1004c306:	xor    ebx,ebx
1004c308:	xor    edx,edx
1004c30a:	xor    esi,esi
1004c30c:	xor    edi,edi
1004c30e:	call   ecx
1004c310:	pop    ebx
1004c311:	pop    edi
1004c312:	pop    esi
1004c313:	pop    ebp
1004c314:	ret    
1004c315:	mov    ebp,edx
1004c317:	mov    esi,ecx
1004c319:	mov    eax,ecx
1004c31b:	push   0x1
1004c31d:	call   0x1004f919
1004c322:	xor    eax,eax
1004c324:	xor    ebx,ebx
1004c326:	xor    ecx,ecx
1004c328:	xor    edx,edx
1004c32a:	xor    edi,edi
1004c32c:	jmp    esi
1004c32e:	push   ebp
1004c32f:	mov    ebp,esp
1004c331:	push   ebx
1004c332:	push   esi
1004c333:	push   edi
1004c334:	push   0x0
1004c336:	push   0x0
1004c338:	push   0x1004c343
1004c33d:	push   ecx
1004c33e:	call   0x10056bc4
1004c343:	pop    edi
1004c344:	pop    esi
1004c345:	pop    ebx
1004c346:	pop    ebp
1004c347:	ret    
1004c348:	push   ebp
1004c349:	mov    ebp,DWORD PTR [esp+0x8]
1004c34d:	push   edx
1004c34e:	push   ecx
1004c34f:	push   DWORD PTR [esp+0x14]
1004c353:	call   0x1004c20c
1004c358:	add    esp,0xc
1004c35b:	pop    ebp
1004c35c:	ret    0x8
1004c35f:	int3   
1004c360:	mov    ecx,DWORD PTR [esp+0x4]
1004c364:	cmp    WORD PTR [ecx],0x5a4d
1004c369:	je     0x1004c36e
1004c36b:	xor    eax,eax
1004c36d:	ret    
1004c36e:	mov    eax,DWORD PTR [ecx+0x3c]
1004c371:	add    eax,ecx
1004c373:	cmp    DWORD PTR [eax],0x4550
1004c379:	jne    0x1004c36b
1004c37b:	xor    ecx,ecx
1004c37d:	cmp    WORD PTR [eax+0x18],0x10b
1004c383:	sete   cl
1004c386:	mov    eax,ecx
1004c388:	ret    
1004c389:	int3   
1004c38a:	int3   
1004c38b:	int3   
1004c38c:	int3   
1004c38d:	int3   
1004c38e:	int3   
1004c38f:	int3   
1004c390:	mov    eax,DWORD PTR [esp+0x4]
1004c394:	mov    ecx,DWORD PTR [eax+0x3c]
1004c397:	add    ecx,eax
1004c399:	movzx  eax,WORD PTR [ecx+0x14]
1004c39d:	push   ebx
1004c39e:	push   esi
1004c39f:	movzx  esi,WORD PTR [ecx+0x6]
1004c3a3:	xor    edx,edx
1004c3a5:	test   esi,esi
1004c3a7:	push   edi
1004c3a8:	lea    eax,[eax+ecx*1+0x18]
1004c3ac:	jbe    0x1004c3cc
1004c3ae:	mov    edi,DWORD PTR [esp+0x14]
1004c3b2:	mov    ecx,DWORD PTR [eax+0xc]
1004c3b5:	cmp    edi,ecx
1004c3b7:	jb     0x1004c3c2
1004c3b9:	mov    ebx,DWORD PTR [eax+0x8]
1004c3bc:	add    ebx,ecx
1004c3be:	cmp    edi,ebx
1004c3c0:	jb     0x1004c3ce
1004c3c2:	add    edx,0x1
1004c3c5:	add    eax,0x28
1004c3c8:	cmp    edx,esi
1004c3ca:	jb     0x1004c3b2
1004c3cc:	xor    eax,eax
1004c3ce:	pop    edi
1004c3cf:	pop    esi
1004c3d0:	pop    ebx
1004c3d1:	ret    
1004c3d2:	push   0x8
1004c3d4:	push   0x100748f0
1004c3d9:	call   0x10046d84
1004c3de:	and    DWORD PTR [ebp-0x4],0x0
1004c3e2:	mov    edx,0x10000000
1004c3e7:	push   edx
1004c3e8:	call   0x1004c360
1004c3ed:	pop    ecx
1004c3ee:	test   eax,eax
1004c3f0:	je     0x1004c42f
1004c3f2:	mov    eax,DWORD PTR [ebp+0x8]
1004c3f5:	sub    eax,edx
1004c3f7:	push   eax
1004c3f8:	push   edx
1004c3f9:	call   0x1004c390
1004c3fe:	pop    ecx
1004c3ff:	pop    ecx
1004c400:	test   eax,eax
1004c402:	je     0x1004c42f
1004c404:	mov    eax,DWORD PTR [eax+0x24]
1004c407:	shr    eax,0x1f
1004c40a:	not    eax
1004c40c:	and    eax,0x1
1004c40f:	mov    DWORD PTR [ebp-0x4],0xfffffffe
1004c416:	jmp    0x1004c438
1004c418:	mov    eax,DWORD PTR [ebp-0x14]
1004c41b:	mov    eax,DWORD PTR [eax]
1004c41d:	mov    eax,DWORD PTR [eax]
1004c41f:	xor    ecx,ecx
1004c421:	cmp    eax,0xc0000005
1004c426:	sete   cl
1004c429:	mov    eax,ecx
1004c42b:	ret    
1004c42c:	mov    esp,DWORD PTR [ebp-0x18]
1004c42f:	mov    DWORD PTR [ebp-0x4],0xfffffffe
1004c436:	xor    eax,eax
1004c438:	call   0x10046dc9
1004c43d:	ret    
1004c43e:	push   esi
1004c43f:	push   edi
1004c440:	xor    edi,edi
1004c442:	lea    esi,[edi+0x1007ea80]
1004c448:	push   DWORD PTR [esi]
1004c44a:	call   0x10046f76
1004c44f:	add    edi,0x4
1004c452:	cmp    edi,0x28
1004c455:	pop    ecx
1004c456:	mov    DWORD PTR [esi],eax
1004c458:	jb     0x1004c442
1004c45a:	pop    edi
1004c45b:	pop    esi
1004c45c:	ret    
1004c45d:	mov    eax,DWORD PTR [esp+0x4]
1004c461:	mov    ds:0x1008040c,eax
1004c466:	mov    ds:0x10080410,eax
1004c46b:	mov    ds:0x10080414,eax
1004c470:	mov    ds:0x10080418,eax
1004c475:	ret    
1004c476:	mov    eax,DWORD PTR [esp+0x4]
1004c47a:	mov    ecx,DWORD PTR ds:0x1007ea7c
1004c480:	push   esi
1004c481:	cmp    DWORD PTR [eax+0x4],edx
1004c484:	je     0x1004c496
1004c486:	mov    esi,ecx
1004c488:	imul   esi,esi,0xc
1004c48b:	add    esi,DWORD PTR [esp+0x8]
1004c48f:	add    eax,0xc
1004c492:	cmp    eax,esi
1004c494:	jb     0x1004c481
1004c496:	imul   ecx,ecx,0xc
1004c499:	add    ecx,DWORD PTR [esp+0x8]
1004c49d:	pop    esi
1004c49e:	cmp    eax,ecx
1004c4a0:	jae    0x1004c4a7
1004c4a2:	cmp    DWORD PTR [eax+0x4],edx
1004c4a5:	je     0x1004c4a9
1004c4a7:	xor    eax,eax
1004c4a9:	ret    
1004c4aa:	push   DWORD PTR ds:0x10080414
1004c4b0:	call   0x10046fe2
1004c4b5:	pop    ecx
1004c4b6:	ret    
1004c4b7:	push   0x20
1004c4b9:	push   0x10074910
1004c4be:	call   0x10046d84
1004c4c3:	xor    edi,edi
1004c4c5:	mov    DWORD PTR [ebp-0x1c],edi
1004c4c8:	mov    DWORD PTR [ebp-0x28],edi
1004c4cb:	mov    ebx,DWORD PTR [ebp+0x8]
1004c4ce:	cmp    ebx,0xb
1004c4d1:	jg     0x1004c51f
1004c4d3:	je     0x1004c4ea
1004c4d5:	mov    eax,ebx
1004c4d7:	push   0x2
1004c4d9:	pop    ecx
1004c4da:	sub    eax,ecx
1004c4dc:	je     0x1004c500
1004c4de:	sub    eax,ecx
1004c4e0:	je     0x1004c4ea
1004c4e2:	sub    eax,ecx
1004c4e4:	je     0x1004c54a
1004c4e6:	sub    eax,ecx
1004c4e8:	jne    0x1004c52e
1004c4ea:	call   0x10047169
1004c4ef:	mov    edi,eax
1004c4f1:	mov    DWORD PTR [ebp-0x28],edi
1004c4f4:	test   edi,edi
1004c4f6:	jne    0x1004c50c
1004c4f8:	or     eax,0xffffffff
1004c4fb:	jmp    0x1004c661
1004c500:	mov    esi,0x1008040c
1004c505:	mov    eax,ds:0x1008040c
1004c50a:	jmp    0x1004c56c
1004c50c:	push   DWORD PTR [edi+0x5c]
1004c50f:	mov    edx,ebx
1004c511:	call   0x1004c476
1004c516:	mov    esi,eax
1004c518:	add    esi,0x8
1004c51b:	mov    eax,DWORD PTR [esi]
1004c51d:	jmp    0x1004c579
1004c51f:	mov    eax,ebx
1004c521:	sub    eax,0xf
1004c524:	je     0x1004c562
1004c526:	sub    eax,0x6
1004c529:	je     0x1004c556
1004c52b:	dec    eax
1004c52c:	je     0x1004c54a
1004c52e:	call   0x10046c45
1004c533:	mov    DWORD PTR [eax],0x16
1004c539:	xor    eax,eax
1004c53b:	push   eax
1004c53c:	push   eax
1004c53d:	push   eax
1004c53e:	push   eax
1004c53f:	push   eax
1004c540:	call   0x1004347c
1004c545:	add    esp,0x14
1004c548:	jmp    0x1004c4f8
1004c54a:	mov    esi,0x10080414
1004c54f:	mov    eax,ds:0x10080414
1004c554:	jmp    0x1004c56c
1004c556:	mov    esi,0x10080410
1004c55b:	mov    eax,ds:0x10080410
1004c560:	jmp    0x1004c56c
1004c562:	mov    esi,0x10080418
1004c567:	mov    eax,ds:0x10080418
1004c56c:	mov    DWORD PTR [ebp-0x1c],0x1
1004c573:	push   eax
1004c574:	call   0x10046fe2
1004c579:	mov    DWORD PTR [ebp-0x20],eax
1004c57c:	pop    ecx
1004c57d:	xor    eax,eax
1004c57f:	cmp    DWORD PTR [ebp-0x20],0x1
1004c583:	je     0x1004c661
1004c589:	cmp    DWORD PTR [ebp-0x20],eax
1004c58c:	jne    0x1004c595
1004c58e:	push   0x3
1004c590:	call   0x10047904
1004c595:	cmp    DWORD PTR [ebp-0x1c],eax
1004c598:	je     0x1004c5a1
1004c59a:	push   eax
1004c59b:	call   0x10047d8d
1004c5a0:	pop    ecx
1004c5a1:	xor    eax,eax
1004c5a3:	mov    DWORD PTR [ebp-0x4],eax
1004c5a6:	cmp    ebx,0x8
1004c5a9:	je     0x1004c5b5
1004c5ab:	cmp    ebx,0xb
1004c5ae:	je     0x1004c5b5
1004c5b0:	cmp    ebx,0x4
1004c5b3:	jne    0x1004c5d0
1004c5b5:	mov    ecx,DWORD PTR [edi+0x60]
1004c5b8:	mov    DWORD PTR [ebp-0x2c],ecx
1004c5bb:	mov    DWORD PTR [edi+0x60],eax
1004c5be:	cmp    ebx,0x8
1004c5c1:	jne    0x1004c603
1004c5c3:	mov    ecx,DWORD PTR [edi+0x64]
1004c5c6:	mov    DWORD PTR [ebp-0x30],ecx
1004c5c9:	mov    DWORD PTR [edi+0x64],0x8c
1004c5d0:	cmp    ebx,0x8
1004c5d3:	jne    0x1004c603
1004c5d5:	mov    ecx,DWORD PTR ds:0x1007ea70
1004c5db:	mov    DWORD PTR [ebp-0x24],ecx
1004c5de:	mov    ecx,DWORD PTR ds:0x1007ea74
1004c5e4:	mov    edx,DWORD PTR ds:0x1007ea70
1004c5ea:	add    ecx,edx
1004c5ec:	cmp    DWORD PTR [ebp-0x24],ecx
1004c5ef:	jge    0x1004c60a
1004c5f1:	mov    ecx,DWORD PTR [ebp-0x24]
1004c5f4:	imul   ecx,ecx,0xc
1004c5f7:	mov    edx,DWORD PTR [edi+0x5c]
1004c5fa:	mov    DWORD PTR [ecx+edx*1+0x8],eax
1004c5fe:	inc    DWORD PTR [ebp-0x24]
1004c601:	jmp    0x1004c5de
1004c603:	call   0x10046fd9
1004c608:	mov    DWORD PTR [esi],eax
1004c60a:	mov    DWORD PTR [ebp-0x4],0xfffffffe
1004c611:	call   0x1004c62b
1004c616:	cmp    ebx,0x8
1004c619:	jne    0x1004c63a
1004c61b:	push   DWORD PTR [edi+0x64]
1004c61e:	push   ebx
1004c61f:	call   DWORD PTR [ebp-0x20]
1004c622:	pop    ecx
1004c623:	jmp    0x1004c63e
1004c625:	mov    ebx,DWORD PTR [ebp+0x8]
1004c628:	mov    edi,DWORD PTR [ebp-0x28]
1004c62b:	cmp    DWORD PTR [ebp-0x1c],0x0
1004c62f:	je     0x1004c639
1004c631:	push   0x0
1004c633:	call   0x10047cb5
1004c638:	pop    ecx
1004c639:	ret    
1004c63a:	push   ebx
1004c63b:	call   DWORD PTR [ebp-0x20]
1004c63e:	pop    ecx
1004c63f:	cmp    ebx,0x8
1004c642:	je     0x1004c64e
1004c644:	cmp    ebx,0xb
1004c647:	je     0x1004c64e
1004c649:	cmp    ebx,0x4
1004c64c:	jne    0x1004c65f
1004c64e:	mov    eax,DWORD PTR [ebp-0x2c]
1004c651:	mov    DWORD PTR [edi+0x60],eax
1004c654:	cmp    ebx,0x8
1004c657:	jne    0x1004c65f
1004c659:	mov    eax,DWORD PTR [ebp-0x30]
1004c65c:	mov    DWORD PTR [edi+0x64],eax
1004c65f:	xor    eax,eax
1004c661:	call   0x10046dc9
1004c666:	ret    
1004c667:	mov    eax,DWORD PTR [esp+0x4]
1004c66b:	mov    ds:0x10080420,eax
1004c670:	ret    
1004c671:	mov    eax,DWORD PTR [esp+0x4]
1004c675:	mov    ds:0x10080424,eax
1004c67a:	ret    
1004c67b:	push   DWORD PTR [esp+0x4]
1004c67f:	call   DWORD PTR ds:0x1006611c
1004c685:	xor    eax,eax
1004c687:	inc    eax
1004c688:	ret    0x8
1004c68b:	push   0x14
1004c68d:	push   0x10074930
1004c692:	call   0x10046d84
1004c697:	xor    edi,edi
1004c699:	mov    DWORD PTR [ebp-0x1c],edi
1004c69c:	push   DWORD PTR ds:0x10080424
1004c6a2:	call   0x10046fe2
1004c6a7:	pop    ecx
1004c6a8:	mov    esi,eax
1004c6aa:	cmp    esi,edi
1004c6ac:	jne    0x1004c701
1004c6ae:	lea    eax,[ebp-0x1c]
1004c6b1:	push   eax
1004c6b2:	call   0x10047731
1004c6b7:	pop    ecx
1004c6b8:	cmp    eax,edi
1004c6ba:	je     0x1004c6c9
1004c6bc:	push   edi
1004c6bd:	push   edi
1004c6be:	push   edi
1004c6bf:	push   edi
1004c6c0:	push   edi
1004c6c1:	call   0x10043380
1004c6c6:	add    esp,0x14
1004c6c9:	cmp    DWORD PTR [ebp-0x1c],0x1
1004c6cd:	je     0x1004c6f0
1004c6cf:	push   0x1006f838
1004c6d4:	call   DWORD PTR ds:0x10066198
1004c6da:	cmp    eax,edi
1004c6dc:	je     0x1004c6f0
1004c6de:	push   0x10066ccc
1004c6e3:	push   eax
1004c6e4:	call   DWORD PTR ds:0x1006612c
1004c6ea:	mov    esi,eax
1004c6ec:	cmp    esi,edi
1004c6ee:	jne    0x1004c6f5
1004c6f0:	mov    esi,0x1004c67b
1004c6f5:	push   esi
1004c6f6:	call   0x10046f76
1004c6fb:	pop    ecx
1004c6fc:	mov    ds:0x10080424,eax
1004c701:	mov    DWORD PTR [ebp-0x4],edi
1004c704:	push   DWORD PTR [ebp+0xc]
1004c707:	push   DWORD PTR [ebp+0x8]
1004c70a:	call   esi
1004c70c:	mov    DWORD PTR [ebp-0x20],eax
1004c70f:	jmp    0x1004c740
1004c711:	mov    eax,DWORD PTR [ebp-0x14]
1004c714:	mov    eax,DWORD PTR [eax]
1004c716:	mov    eax,DWORD PTR [eax]
1004c718:	mov    DWORD PTR [ebp-0x24],eax
1004c71b:	xor    ecx,ecx
1004c71d:	cmp    eax,0xc0000017
1004c722:	sete   cl
1004c725:	mov    eax,ecx
1004c727:	ret    
1004c728:	mov    esp,DWORD PTR [ebp-0x18]
1004c72b:	cmp    DWORD PTR [ebp-0x24],0xc0000017
1004c732:	jne    0x1004c73c
1004c734:	push   0x8
1004c736:	call   DWORD PTR ds:0x1006615c
1004c73c:	and    DWORD PTR [ebp-0x20],0x0
1004c740:	mov    DWORD PTR [ebp-0x4],0xfffffffe
1004c747:	mov    eax,DWORD PTR [ebp-0x20]
1004c74a:	call   0x10046dc9
1004c74f:	ret    
1004c750:	push   edi
1004c751:	mov    edi,DWORD PTR [esp+0x8]
1004c755:	mov    eax,DWORD PTR [edi]
1004c757:	cmp    DWORD PTR [eax],0xe06d7363
1004c75d:	jne    0x1004c789
1004c75f:	cmp    DWORD PTR [eax+0x10],0x3
1004c763:	jne    0x1004c789
1004c765:	mov    eax,DWORD PTR [eax+0x14]
1004c768:	cmp    eax,0x19930520
1004c76d:	je     0x1004c784
1004c76f:	cmp    eax,0x19930521
1004c774:	je     0x1004c784
1004c776:	cmp    eax,0x19930522
1004c77b:	je     0x1004c784
1004c77d:	cmp    eax,0x1994000
1004c782:	jne    0x1004c789
1004c784:	call   0x10046cee
1004c789:	cmp    BYTE PTR ds:0x10080468,0x0
1004c790:	push   esi
1004c791:	je     0x1004c7b5
1004c793:	push   DWORD PTR ds:0x10080464
1004c799:	call   0x10046fe2
1004c79e:	mov    esi,eax
1004c7a0:	test   esi,esi
1004c7a2:	pop    ecx
1004c7a3:	je     0x1004c7b5
1004c7a5:	push   esi
1004c7a6:	call   0x1004f944
1004c7ab:	test   eax,eax
1004c7ad:	pop    ecx
1004c7ae:	je     0x1004c7b5
1004c7b0:	push   edi
1004c7b1:	call   esi
1004c7b3:	jmp    0x1004c7b7
1004c7b5:	xor    eax,eax
1004c7b7:	pop    esi
1004c7b8:	pop    edi
1004c7b9:	ret    0x4
1004c7bc:	push   0x1004c750
1004c7c1:	call   DWORD PTR ds:0x10066180
1004c7c7:	push   eax
1004c7c8:	call   0x10046f76
1004c7cd:	mov    ds:0x10080464,eax
1004c7d2:	pop    ecx
1004c7d3:	mov    BYTE PTR ds:0x10080468,0x1
1004c7da:	xor    eax,eax
1004c7dc:	ret    
1004c7dd:	cmp    BYTE PTR ds:0x10080468,0x0
1004c7e4:	je     0x1004c800
1004c7e6:	push   DWORD PTR ds:0x10080464
1004c7ec:	call   0x10046fe2
1004c7f1:	pop    ecx
1004c7f2:	push   eax
1004c7f3:	call   DWORD PTR ds:0x10066180
1004c7f9:	mov    BYTE PTR ds:0x10080468,0x0
1004c800:	ret    
1004c801:	push   ebp
1004c802:	mov    ebp,esp
1004c804:	push   ecx
1004c805:	push   ecx
1004c806:	mov    eax,DWORD PTR [ebp+0xc]
1004c809:	push   esi
1004c80a:	mov    esi,DWORD PTR [ebp+0x8]
1004c80d:	mov    DWORD PTR [ebp-0x8],eax
1004c810:	mov    eax,DWORD PTR [ebp+0x10]
1004c813:	push   edi
1004c814:	push   esi
1004c815:	mov    DWORD PTR [ebp-0x4],eax
1004c818:	call   0x1004fa4f
1004c81d:	or     edi,0xffffffff
1004c820:	cmp    eax,edi
1004c822:	pop    ecx
1004c823:	jne    0x1004c836
1004c825:	call   0x10046c45
1004c82a:	mov    DWORD PTR [eax],0x9
1004c830:	mov    eax,edi
1004c832:	mov    edx,edi
1004c834:	jmp    0x1004c880
1004c836:	push   DWORD PTR [ebp+0x14]
1004c839:	lea    ecx,[ebp-0x4]
1004c83c:	push   ecx
1004c83d:	push   DWORD PTR [ebp-0x8]
1004c840:	push   eax
1004c841:	call   DWORD PTR ds:0x10066224
1004c847:	cmp    eax,edi
1004c849:	mov    DWORD PTR [ebp-0x8],eax
1004c84c:	jne    0x1004c861
1004c84e:	call   DWORD PTR ds:0x100660cc
1004c854:	test   eax,eax
1004c856:	je     0x1004c861
1004c858:	push   eax
1004c859:	call   0x10046c6b
1004c85e:	pop    ecx
1004c85f:	jmp    0x1004c830
1004c861:	mov    eax,esi
1004c863:	and    esi,0x1f
1004c866:	imul   esi,esi,0x28
1004c869:	sar    eax,0x5
1004c86c:	mov    eax,DWORD PTR [eax*4+0x10082480]
1004c873:	lea    eax,[eax+esi*1+0x4]
1004c877:	and    BYTE PTR [eax],0xfd
1004c87a:	mov    eax,DWORD PTR [ebp-0x8]
1004c87d:	mov    edx,DWORD PTR [ebp-0x4]
1004c880:	pop    edi
1004c881:	pop    esi
1004c882:	leave  
1004c883:	ret    
1004c884:	push   0x14
1004c886:	push   0x10074950
1004c88b:	call   0x10046d84
1004c890:	or     esi,0xffffffff
1004c893:	mov    DWORD PTR [ebp-0x24],esi
1004c896:	mov    DWORD PTR [ebp-0x20],esi
1004c899:	mov    eax,DWORD PTR [ebp+0x8]
1004c89c:	cmp    eax,0xfffffffe
1004c89f:	jne    0x1004c8bd
1004c8a1:	call   0x10046c58
1004c8a6:	and    DWORD PTR [eax],0x0
1004c8a9:	call   0x10046c45
1004c8ae:	mov    DWORD PTR [eax],0x9
1004c8b4:	mov    eax,esi
1004c8b6:	mov    edx,esi
1004c8b8:	jmp    0x1004c98d
1004c8bd:	xor    edi,edi
1004c8bf:	cmp    eax,edi
1004c8c1:	jl     0x1004c8cb
1004c8c3:	cmp    eax,DWORD PTR ds:0x10082464
1004c8c9:	jb     0x1004c8ec
1004c8cb:	call   0x10046c58
1004c8d0:	mov    DWORD PTR [eax],edi
1004c8d2:	call   0x10046c45
1004c8d7:	mov    DWORD PTR [eax],0x9
1004c8dd:	push   edi
1004c8de:	push   edi
1004c8df:	push   edi
1004c8e0:	push   edi
1004c8e1:	push   edi
1004c8e2:	call   0x1004347c
1004c8e7:	add    esp,0x14
1004c8ea:	jmp    0x1004c8b4
1004c8ec:	mov    ecx,eax
1004c8ee:	sar    ecx,0x5
1004c8f1:	lea    ebx,[ecx*4+0x10082480]
1004c8f8:	mov    esi,eax
1004c8fa:	and    esi,0x1f
1004c8fd:	imul   esi,esi,0x28
1004c900:	mov    ecx,DWORD PTR [ebx]
1004c902:	movzx  ecx,BYTE PTR [ecx+esi*1+0x4]
1004c907:	and    ecx,0x1
1004c90a:	jne    0x1004c932
1004c90c:	call   0x10046c58
1004c911:	mov    DWORD PTR [eax],edi
1004c913:	call   0x10046c45
1004c918:	mov    DWORD PTR [eax],0x9
1004c91e:	push   edi
1004c91f:	push   edi
1004c920:	push   edi
1004c921:	push   edi
1004c922:	push   edi
1004c923:	call   0x1004347c
1004c928:	add    esp,0x14
1004c92b:	or     edx,0xffffffff
1004c92e:	mov    eax,edx
1004c930:	jmp    0x1004c98d
1004c932:	push   eax
1004c933:	call   0x1004fac0
1004c938:	pop    ecx
1004c939:	mov    DWORD PTR [ebp-0x4],edi
1004c93c:	mov    eax,DWORD PTR [ebx]
1004c93e:	test   BYTE PTR [eax+esi*1+0x4],0x1
1004c943:	je     0x1004c961
1004c945:	push   DWORD PTR [ebp+0x14]
1004c948:	push   DWORD PTR [ebp+0x10]
1004c94b:	push   DWORD PTR [ebp+0xc]
1004c94e:	push   DWORD PTR [ebp+0x8]
1004c951:	call   0x1004c801
1004c956:	add    esp,0x10
1004c959:	mov    DWORD PTR [ebp-0x24],eax
1004c95c:	mov    DWORD PTR [ebp-0x20],edx
1004c95f:	jmp    0x1004c97b
1004c961:	call   0x10046c45
1004c966:	mov    DWORD PTR [eax],0x9
1004c96c:	call   0x10046c58
1004c971:	mov    DWORD PTR [eax],edi
1004c973:	or     DWORD PTR [ebp-0x24],0xffffffff
1004c977:	or     DWORD PTR [ebp-0x20],0xffffffff
1004c97b:	mov    DWORD PTR [ebp-0x4],0xfffffffe
1004c982:	call   0x1004c993
1004c987:	mov    eax,DWORD PTR [ebp-0x24]
1004c98a:	mov    edx,DWORD PTR [ebp-0x20]
1004c98d:	call   0x10046dc9
1004c992:	ret    
1004c993:	push   DWORD PTR [ebp+0x8]
1004c996:	call   0x1004fb60
1004c99b:	pop    ecx
1004c99c:	ret    
1004c99d:	push   ebp
1004c99e:	lea    ebp,[esp-0x518]
1004c9a5:	sub    esp,0x594
1004c9ab:	mov    eax,ds:0x1007e030
1004c9b0:	xor    eax,ebp
1004c9b2:	mov    DWORD PTR [ebp+0x514],eax
1004c9b8:	mov    eax,DWORD PTR [ebp+0x524]
1004c9be:	push   esi
1004c9bf:	xor    esi,esi
1004c9c1:	cmp    DWORD PTR [ebp+0x528],esi
1004c9c7:	mov    DWORD PTR [ebp-0x64],eax
1004c9ca:	mov    DWORD PTR [ebp-0x60],esi
1004c9cd:	mov    DWORD PTR [ebp-0x68],esi
1004c9d0:	jne    0x1004c9d9
1004c9d2:	xor    eax,eax
1004c9d4:	jmp    0x1004cf4d
1004c9d9:	cmp    eax,esi
1004c9db:	jne    0x1004ca04
1004c9dd:	call   0x10046c58
1004c9e2:	mov    DWORD PTR [eax],esi
1004c9e4:	call   0x10046c45
1004c9e9:	push   esi
1004c9ea:	push   esi
1004c9eb:	push   esi
1004c9ec:	push   esi
1004c9ed:	push   esi
1004c9ee:	mov    DWORD PTR [eax],0x16
1004c9f4:	call   0x1004347c
1004c9f9:	add    esp,0x14
1004c9fc:	or     eax,0xffffffff
1004c9ff:	jmp    0x1004cf4d
1004ca04:	mov    esi,DWORD PTR [ebp+0x520]
1004ca0a:	push   ebx
1004ca0b:	mov    ebx,esi
1004ca0d:	and    ebx,0x1f
1004ca10:	imul   ebx,ebx,0x28
1004ca13:	mov    eax,esi
1004ca15:	sar    eax,0x5
1004ca18:	push   edi
1004ca19:	lea    edi,[eax*4+0x10082480]
1004ca20:	mov    eax,DWORD PTR [edi]
1004ca22:	add    eax,ebx
1004ca24:	mov    cl,BYTE PTR [eax+0x24]
1004ca27:	add    cl,cl
1004ca29:	sar    cl,1
1004ca2b:	cmp    cl,0x2
1004ca2e:	mov    DWORD PTR [ebp-0x70],edi
1004ca31:	mov    BYTE PTR [ebp-0x55],cl
1004ca34:	je     0x1004ca3b
1004ca36:	cmp    cl,0x1
1004ca39:	jne    0x1004ca6e
1004ca3b:	mov    ecx,DWORD PTR [ebp+0x528]
1004ca41:	not    ecx
1004ca43:	test   cl,0x1
1004ca46:	jne    0x1004ca6e
1004ca48:	call   0x10046c58
1004ca4d:	xor    esi,esi
1004ca4f:	mov    DWORD PTR [eax],esi
1004ca51:	call   0x10046c45
1004ca56:	push   esi
1004ca57:	push   esi
1004ca58:	push   esi
1004ca59:	push   esi
1004ca5a:	push   esi
1004ca5b:	mov    DWORD PTR [eax],0x16
1004ca61:	call   0x1004347c
1004ca66:	add    esp,0x14
1004ca69:	jmp    0x1004cf43
1004ca6e:	test   BYTE PTR [eax+0x4],0x20
1004ca72:	je     0x1004ca83
1004ca74:	push   0x2
1004ca76:	push   0x0
1004ca78:	push   0x0
1004ca7a:	push   esi
1004ca7b:	call   0x1004c801
1004ca80:	add    esp,0x10
1004ca83:	push   esi
1004ca84:	call   0x1004d083
1004ca89:	test   eax,eax
1004ca8b:	pop    ecx
1004ca8c:	je     0x1004cc88
1004ca92:	mov    eax,DWORD PTR [edi]
1004ca94:	test   BYTE PTR [ebx+eax*1+0x4],0x80
1004ca99:	je     0x1004cc88
1004ca9f:	call   0x100471ec
1004caa4:	mov    eax,DWORD PTR [eax+0x6c]
1004caa7:	xor    ecx,ecx
1004caa9:	cmp    DWORD PTR [eax+0x14],ecx
1004caac:	lea    eax,[ebp-0x7c]
1004caaf:	sete   cl
1004cab2:	push   eax
1004cab3:	mov    eax,DWORD PTR [edi]
1004cab5:	push   DWORD PTR [ebx+eax*1]
1004cab8:	mov    esi,ecx
1004caba:	call   DWORD PTR ds:0x10066270
1004cac0:	test   eax,eax
1004cac2:	je     0x1004cc88
1004cac8:	test   esi,esi
1004caca:	je     0x1004cad6
1004cacc:	cmp    BYTE PTR [ebp-0x55],0x0
1004cad0:	je     0x1004cc88
1004cad6:	call   DWORD PTR ds:0x10066228
1004cadc:	and    DWORD PTR [ebp-0x50],0x0
1004cae0:	cmp    DWORD PTR [ebp+0x528],0x0
1004cae7:	mov    esi,DWORD PTR [ebp-0x64]
1004caea:	mov    DWORD PTR [ebp-0x7c],eax
1004caed:	mov    DWORD PTR [ebp-0x74],esi
1004caf0:	jbe    0x1004cef5
1004caf6:	and    DWORD PTR [ebp-0x5c],0x0
1004cafa:	jmp    0x1004caff
1004cafc:	mov    esi,DWORD PTR [ebp-0x74]
1004caff:	mov    al,BYTE PTR [ebp-0x55]
1004cb02:	test   al,al
1004cb04:	jne    0x1004cc10
1004cb0a:	mov    al,BYTE PTR [esi]
1004cb0c:	xor    ecx,ecx
1004cb0e:	cmp    al,0xa
1004cb10:	sete   cl
1004cb13:	movsx  eax,al
1004cb16:	push   eax
1004cb17:	mov    DWORD PTR [ebp-0x78],ecx
1004cb1a:	call   0x1004b3e5
1004cb1f:	test   eax,eax
1004cb21:	pop    ecx
1004cb22:	jne    0x1004cb3e
1004cb24:	push   0x1
1004cb26:	lea    eax,[ebp-0x54]
1004cb29:	push   esi
1004cb2a:	push   eax
1004cb2b:	call   0x1004df28
1004cb30:	add    esp,0xc
1004cb33:	cmp    eax,0xffffffff
1004cb36:	je     0x1004ceeb
1004cb3c:	jmp    0x1004cb6e
1004cb3e:	mov    eax,DWORD PTR [ebp-0x64]
1004cb41:	sub    eax,esi
1004cb43:	add    eax,DWORD PTR [ebp+0x528]
1004cb49:	cmp    eax,0x1
1004cb4c:	jbe    0x1004ceeb
1004cb52:	push   0x2
1004cb54:	lea    eax,[ebp-0x54]
1004cb57:	push   esi
1004cb58:	push   eax
1004cb59:	call   0x1004df28
1004cb5e:	add    esp,0xc
1004cb61:	cmp    eax,0xffffffff
1004cb64:	je     0x1004ceeb
1004cb6a:	inc    esi
1004cb6b:	inc    DWORD PTR [ebp-0x5c]
1004cb6e:	xor    eax,eax
1004cb70:	push   eax
1004cb71:	push   eax
1004cb72:	push   0x5
1004cb74:	lea    ecx,[ebp+0x50c]
1004cb7a:	push   ecx
1004cb7b:	push   0x1
1004cb7d:	lea    ecx,[ebp-0x54]
1004cb80:	push   ecx
1004cb81:	push   eax
1004cb82:	push   DWORD PTR [ebp-0x7c]
1004cb85:	inc    esi
1004cb86:	inc    DWORD PTR [ebp-0x5c]
1004cb89:	mov    DWORD PTR [ebp-0x74],esi
1004cb8c:	call   DWORD PTR ds:0x100660b8
1004cb92:	mov    esi,eax
1004cb94:	test   esi,esi
1004cb96:	je     0x1004ceeb
1004cb9c:	push   0x0
1004cb9e:	lea    eax,[ebp-0x50]
1004cba1:	push   eax
1004cba2:	push   esi
1004cba3:	lea    eax,[ebp+0x50c]
1004cba9:	push   eax
1004cbaa:	mov    eax,DWORD PTR [edi]
1004cbac:	push   DWORD PTR [ebx+eax*1]
1004cbaf:	call   DWORD PTR ds:0x100660b4
1004cbb5:	test   eax,eax
1004cbb7:	je     0x1004cee2
1004cbbd:	mov    eax,DWORD PTR [ebp-0x50]
1004cbc0:	add    DWORD PTR [ebp-0x60],eax
1004cbc3:	cmp    eax,esi
1004cbc5:	jl     0x1004ceeb
1004cbcb:	cmp    DWORD PTR [ebp-0x78],0x0
1004cbcf:	je     0x1004cc74
1004cbd5:	push   0x0
1004cbd7:	lea    eax,[ebp-0x50]
1004cbda:	push   eax
1004cbdb:	push   0x1
1004cbdd:	lea    eax,[ebp+0x50c]
1004cbe3:	push   eax
1004cbe4:	mov    eax,DWORD PTR [edi]
1004cbe6:	mov    BYTE PTR [ebp+0x50c],0xd
1004cbed:	push   DWORD PTR [ebx+eax*1]
1004cbf0:	call   DWORD PTR ds:0x100660b4
1004cbf6:	test   eax,eax
1004cbf8:	je     0x1004cee2
1004cbfe:	cmp    DWORD PTR [ebp-0x50],0x1
1004cc02:	jl     0x1004ceeb
1004cc08:	inc    DWORD PTR [ebp-0x68]
1004cc0b:	inc    DWORD PTR [ebp-0x60]
1004cc0e:	jmp    0x1004cc74
1004cc10:	cmp    al,0x1
1004cc12:	je     0x1004cc18
1004cc14:	cmp    al,0x2
1004cc16:	jne    0x1004cc33
1004cc18:	movzx  ecx,WORD PTR [esi]
1004cc1b:	xor    edx,edx
1004cc1d:	cmp    cx,0xa
1004cc21:	sete   dl
1004cc24:	inc    esi
1004cc25:	inc    esi
1004cc26:	add    DWORD PTR [ebp-0x5c],0x2
1004cc2a:	mov    DWORD PTR [ebp-0x54],ecx
1004cc2d:	mov    DWORD PTR [ebp-0x74],esi
1004cc30:	mov    DWORD PTR [ebp-0x78],edx
1004cc33:	cmp    al,0x1
1004cc35:	je     0x1004cc3b
1004cc37:	cmp    al,0x2
1004cc39:	jne    0x1004cc74
1004cc3b:	push   DWORD PTR [ebp-0x54]
1004cc3e:	call   0x1004fd21
1004cc43:	cmp    ax,WORD PTR [ebp-0x54]
1004cc47:	pop    ecx
1004cc48:	jne    0x1004cee2
1004cc4e:	inc    DWORD PTR [ebp-0x60]
1004cc51:	cmp    DWORD PTR [ebp-0x78],0x0
1004cc55:	je     0x1004cc74
1004cc57:	push   0xd
1004cc59:	pop    eax
1004cc5a:	push   eax
1004cc5b:	mov    DWORD PTR [ebp-0x54],eax
1004cc5e:	call   0x1004fd21
1004cc63:	cmp    ax,WORD PTR [ebp-0x54]
1004cc67:	pop    ecx
1004cc68:	jne    0x1004cee2
1004cc6e:	inc    DWORD PTR [ebp-0x60]
1004cc71:	inc    DWORD PTR [ebp-0x68]
1004cc74:	mov    eax,DWORD PTR [ebp+0x528]
1004cc7a:	cmp    DWORD PTR [ebp-0x5c],eax
1004cc7d:	jb     0x1004cafc
1004cc83:	jmp    0x1004ceeb
1004cc88:	mov    eax,DWORD PTR [edi]
1004cc8a:	add    eax,ebx
1004cc8c:	test   BYTE PTR [eax+0x4],0x80
1004cc90:	je     0x1004cebb
1004cc96:	mov    eax,DWORD PTR [ebp-0x64]
1004cc99:	xor    esi,esi
1004cc9b:	cmp    BYTE PTR [ebp-0x55],0x0
1004cc9f:	mov    DWORD PTR [ebp-0x54],esi
1004cca2:	jne    0x1004cd39
1004cca8:	cmp    DWORD PTR [ebp+0x528],esi
1004ccae:	mov    DWORD PTR [ebp-0x50],eax
1004ccb1:	jbe    0x1004cf1c
1004ccb7:	mov    ecx,DWORD PTR [ebp-0x50]
1004ccba:	and    DWORD PTR [ebp-0x5c],0x0
1004ccbe:	sub    ecx,DWORD PTR [ebp-0x64]
1004ccc1:	lea    eax,[ebp-0x4c]
1004ccc4:	cmp    ecx,DWORD PTR [ebp+0x528]
1004ccca:	jae    0x1004ccf3
1004cccc:	mov    edx,DWORD PTR [ebp-0x50]
1004cccf:	inc    DWORD PTR [ebp-0x50]
1004ccd2:	mov    dl,BYTE PTR [edx]
1004ccd4:	inc    ecx
1004ccd5:	cmp    dl,0xa
1004ccd8:	jne    0x1004cce4
1004ccda:	inc    DWORD PTR [ebp-0x68]
1004ccdd:	mov    BYTE PTR [eax],0xd
1004cce0:	inc    eax
1004cce1:	inc    DWORD PTR [ebp-0x5c]
1004cce4:	mov    BYTE PTR [eax],dl
1004cce6:	inc    eax
1004cce7:	inc    DWORD PTR [ebp-0x5c]
1004ccea:	cmp    DWORD PTR [ebp-0x5c],0x400
1004ccf1:	jb     0x1004ccc4
1004ccf3:	mov    esi,eax
1004ccf5:	lea    eax,[ebp-0x4c]
1004ccf8:	sub    esi,eax
1004ccfa:	push   0x0
1004ccfc:	lea    eax,[ebp-0x6c]
1004ccff:	push   eax
1004cd00:	push   esi
1004cd01:	lea    eax,[ebp-0x4c]
1004cd04:	push   eax
1004cd05:	mov    eax,DWORD PTR [edi]
1004cd07:	push   DWORD PTR [ebx+eax*1]
1004cd0a:	call   DWORD PTR ds:0x100660b4
1004cd10:	test   eax,eax
1004cd12:	je     0x1004cee2
1004cd18:	mov    eax,DWORD PTR [ebp-0x6c]
1004cd1b:	add    DWORD PTR [ebp-0x60],eax
1004cd1e:	cmp    eax,esi
1004cd20:	jl     0x1004ceeb
1004cd26:	mov    eax,DWORD PTR [ebp-0x50]
1004cd29:	sub    eax,DWORD PTR [ebp-0x64]
1004cd2c:	cmp    eax,DWORD PTR [ebp+0x528]
1004cd32:	jb     0x1004ccb7
1004cd34:	jmp    0x1004ceeb
1004cd39:	cmp    BYTE PTR [ebp-0x55],0x2
1004cd3d:	jne    0x1004cde0
1004cd43:	cmp    DWORD PTR [ebp+0x528],esi
1004cd49:	mov    DWORD PTR [ebp-0x50],eax
1004cd4c:	jbe    0x1004cf1c
1004cd52:	mov    ecx,DWORD PTR [ebp-0x50]
1004cd55:	xor    esi,esi
1004cd57:	sub    ecx,DWORD PTR [ebp-0x64]
1004cd5a:	lea    eax,[ebp-0x4c]
1004cd5d:	cmp    ecx,DWORD PTR [ebp+0x528]
1004cd63:	jae    0x1004cd96
1004cd65:	mov    edx,DWORD PTR [ebp-0x50]
1004cd68:	add    DWORD PTR [ebp-0x50],0x2
1004cd6c:	movzx  edx,WORD PTR [edx]
1004cd6f:	inc    ecx
1004cd70:	inc    ecx
1004cd71:	cmp    dx,0xa
1004cd75:	jne    0x1004cd84
1004cd77:	add    DWORD PTR [ebp-0x68],0x2
1004cd7b:	mov    WORD PTR [eax],0xd
1004cd80:	inc    eax
1004cd81:	inc    eax
1004cd82:	inc    esi
1004cd83:	inc    esi
1004cd84:	mov    edi,DWORD PTR [ebp-0x70]
1004cd87:	mov    WORD PTR [eax],dx
1004cd8a:	inc    eax
1004cd8b:	inc    eax
1004cd8c:	inc    esi
1004cd8d:	inc    esi
1004cd8e:	cmp    esi,0x3ff
1004cd94:	jb     0x1004cd5d
1004cd96:	mov    esi,eax
1004cd98:	lea    eax,[ebp-0x4c]
1004cd9b:	sub    esi,eax
1004cd9d:	push   0x0
1004cd9f:	lea    eax,[ebp-0x6c]
1004cda2:	push   eax
1004cda3:	push   esi
1004cda4:	lea    eax,[ebp-0x4c]
1004cda7:	push   eax
1004cda8:	mov    eax,DWORD PTR [edi]
1004cdaa:	push   DWORD PTR [ebx+eax*1]
1004cdad:	call   DWORD PTR ds:0x100660b4
1004cdb3:	test   eax,eax
1004cdb5:	je     0x1004cee2
1004cdbb:	mov    eax,DWORD PTR [ebp-0x6c]
1004cdbe:	add    DWORD PTR [ebp-0x60],eax
1004cdc1:	cmp    eax,esi
1004cdc3:	jl     0x1004ceeb
1004cdc9:	mov    eax,DWORD PTR [ebp-0x50]
1004cdcc:	sub    eax,DWORD PTR [ebp-0x64]
1004cdcf:	cmp    eax,DWORD PTR [ebp+0x528]
1004cdd5:	jb     0x1004cd52
1004cddb:	jmp    0x1004ceeb
1004cde0:	cmp    DWORD PTR [ebp+0x528],esi
1004cde6:	mov    DWORD PTR [ebp-0x5c],eax
1004cde9:	jbe    0x1004cf1c
1004cdef:	mov    ecx,DWORD PTR [ebp-0x5c]
1004cdf2:	and    DWORD PTR [ebp-0x50],0x0
1004cdf6:	sub    ecx,DWORD PTR [ebp-0x64]
1004cdf9:	push   0x2
1004cdfb:	lea    eax,[ebp+0x3b8]
1004ce01:	pop    esi
1004ce02:	cmp    ecx,DWORD PTR [ebp+0x528]
1004ce08:	jae    0x1004ce36
1004ce0a:	mov    edx,DWORD PTR [ebp-0x5c]
1004ce0d:	movzx  edx,WORD PTR [edx]
1004ce10:	add    DWORD PTR [ebp-0x5c],esi
1004ce13:	add    ecx,esi
1004ce15:	cmp    dx,0xa
1004ce19:	jne    0x1004ce25
1004ce1b:	mov    WORD PTR [eax],0xd
1004ce20:	add    eax,esi
1004ce22:	add    DWORD PTR [ebp-0x50],esi
1004ce25:	add    DWORD PTR [ebp-0x50],esi
1004ce28:	mov    WORD PTR [eax],dx
1004ce2b:	add    eax,esi
1004ce2d:	cmp    DWORD PTR [ebp-0x50],0x152
1004ce34:	jb     0x1004ce02
1004ce36:	xor    esi,esi
1004ce38:	push   esi
1004ce39:	push   esi
1004ce3a:	push   0x2ab
1004ce3f:	lea    ecx,[ebp+0x108]
1004ce45:	push   ecx
1004ce46:	lea    ecx,[ebp+0x3b8]
1004ce4c:	sub    eax,ecx
1004ce4e:	cdq    
1004ce4f:	sub    eax,edx
1004ce51:	sar    eax,1
1004ce53:	push   eax
1004ce54:	mov    eax,ecx
1004ce56:	push   eax
1004ce57:	push   esi
1004ce58:	push   0xfde9
1004ce5d:	call   DWORD PTR ds:0x100660b8
1004ce63:	mov    edi,eax
1004ce65:	cmp    edi,esi
1004ce67:	je     0x1004cee2
1004ce69:	push   0x0
1004ce6b:	lea    eax,[ebp-0x6c]
1004ce6e:	push   eax
1004ce6f:	mov    eax,edi
1004ce71:	sub    eax,esi
1004ce73:	push   eax
1004ce74:	lea    eax,[ebp+esi*1+0x108]
1004ce7b:	push   eax
1004ce7c:	mov    eax,DWORD PTR [ebp-0x70]
1004ce7f:	mov    eax,DWORD PTR [eax]
1004ce81:	push   DWORD PTR [ebx+eax*1]
1004ce84:	call   DWORD PTR ds:0x100660b4
1004ce8a:	test   eax,eax
1004ce8c:	je     0x1004ce97
1004ce8e:	add    esi,DWORD PTR [ebp-0x6c]
1004ce91:	cmp    edi,esi
1004ce93:	jg     0x1004ce69
1004ce95:	jmp    0x1004cea0
1004ce97:	call   DWORD PTR ds:0x100660cc
1004ce9d:	mov    DWORD PTR [ebp-0x54],eax
1004cea0:	cmp    edi,esi
1004cea2:	jg     0x1004ceeb
1004cea4:	mov    eax,DWORD PTR [ebp-0x5c]
1004cea7:	sub    eax,DWORD PTR [ebp-0x64]
1004ceaa:	cmp    eax,DWORD PTR [ebp+0x528]
1004ceb0:	mov    DWORD PTR [ebp-0x60],eax
1004ceb3:	jb     0x1004cdef
1004ceb9:	jmp    0x1004ceeb
1004cebb:	push   0x0
1004cebd:	lea    ecx,[ebp-0x6c]
1004cec0:	push   ecx
1004cec1:	push   DWORD PTR [ebp+0x528]
1004cec7:	push   DWORD PTR [ebp-0x64]
1004ceca:	push   DWORD PTR [eax]
1004cecc:	call   DWORD PTR ds:0x100660b4
1004ced2:	test   eax,eax
1004ced4:	je     0x1004cee2
1004ced6:	mov    eax,DWORD PTR [ebp-0x6c]
1004ced9:	and    DWORD PTR [ebp-0x54],0x0
1004cedd:	mov    DWORD PTR [ebp-0x60],eax
1004cee0:	jmp    0x1004ceeb
1004cee2:	call   DWORD PTR ds:0x100660cc
1004cee8:	mov    DWORD PTR [ebp-0x54],eax
1004ceeb:	mov    eax,DWORD PTR [ebp-0x60]
1004ceee:	test   eax,eax
1004cef0:	jne    0x1004cf48
1004cef2:	mov    edi,DWORD PTR [ebp-0x70]
1004cef5:	xor    esi,esi
1004cef7:	cmp    DWORD PTR [ebp-0x54],esi
1004cefa:	je     0x1004cf1c
1004cefc:	push   0x5
1004cefe:	pop    esi
1004ceff:	cmp    DWORD PTR [ebp-0x54],esi
1004cf02:	jne    0x1004cf11
1004cf04:	call   0x10046c45
1004cf09:	mov    DWORD PTR [eax],0x9
1004cf0f:	jmp    0x1004cf3c
1004cf11:	push   DWORD PTR [ebp-0x54]
1004cf14:	call   0x10046c6b
1004cf19:	pop    ecx
1004cf1a:	jmp    0x1004cf43
1004cf1c:	mov    eax,DWORD PTR [edi]
1004cf1e:	test   BYTE PTR [ebx+eax*1+0x4],0x40
1004cf23:	je     0x1004cf31
1004cf25:	mov    eax,DWORD PTR [ebp-0x64]
1004cf28:	cmp    BYTE PTR [eax],0x1a
1004cf2b:	jne    0x1004cf31
1004cf2d:	xor    eax,eax
1004cf2f:	jmp    0x1004cf4b
1004cf31:	call   0x10046c45
1004cf36:	mov    DWORD PTR [eax],0x1c
1004cf3c:	call   0x10046c58
1004cf41:	mov    DWORD PTR [eax],esi
1004cf43:	or     eax,0xffffffff
1004cf46:	jmp    0x1004cf4b
1004cf48:	sub    eax,DWORD PTR [ebp-0x68]
1004cf4b:	pop    edi
1004cf4c:	pop    ebx
1004cf4d:	mov    ecx,DWORD PTR [ebp+0x514]
1004cf53:	xor    ecx,ebp
1004cf55:	pop    esi
1004cf56:	call   0x10042f87
1004cf5b:	add    ebp,0x518
1004cf61:	leave  
1004cf62:	ret    
1004cf63:	push   0x10
1004cf65:	push   0x10074970
1004cf6a:	call   0x10046d84
1004cf6f:	mov    eax,DWORD PTR [ebp+0x8]
1004cf72:	cmp    eax,0xfffffffe
1004cf75:	jne    0x1004cf92
1004cf77:	call   0x10046c58
1004cf7c:	and    DWORD PTR [eax],0x0
1004cf7f:	call   0x10046c45
1004cf84:	mov    DWORD PTR [eax],0x9
1004cf8a:	or     eax,0xffffffff
1004cf8d:	jmp    0x1004d02f
1004cf92:	xor    edi,edi
1004cf94:	cmp    eax,edi
1004cf96:	jl     0x1004cfa0
1004cf98:	cmp    eax,DWORD PTR ds:0x10082464
1004cf9e:	jb     0x1004cfc1
1004cfa0:	call   0x10046c58
1004cfa5:	mov    DWORD PTR [eax],edi
1004cfa7:	call   0x10046c45
1004cfac:	mov    DWORD PTR [eax],0x9
1004cfb2:	push   edi
1004cfb3:	push   edi
1004cfb4:	push   edi
1004cfb5:	push   edi
1004cfb6:	push   edi
1004cfb7:	call   0x1004347c
1004cfbc:	add    esp,0x14
1004cfbf:	jmp    0x1004cf8a
1004cfc1:	mov    ecx,eax
1004cfc3:	sar    ecx,0x5
1004cfc6:	lea    ebx,[ecx*4+0x10082480]
1004cfcd:	mov    esi,eax
1004cfcf:	and    esi,0x1f
1004cfd2:	imul   esi,esi,0x28
1004cfd5:	mov    ecx,DWORD PTR [ebx]
1004cfd7:	movzx  ecx,BYTE PTR [ecx+esi*1+0x4]
1004cfdc:	and    ecx,0x1
1004cfdf:	je     0x1004cfa0
1004cfe1:	push   eax
1004cfe2:	call   0x1004fac0
1004cfe7:	pop    ecx
1004cfe8:	mov    DWORD PTR [ebp-0x4],edi
1004cfeb:	mov    eax,DWORD PTR [ebx]
1004cfed:	test   BYTE PTR [eax+esi*1+0x4],0x1
1004cff2:	je     0x1004d00a
1004cff4:	push   DWORD PTR [ebp+0x10]
1004cff7:	push   DWORD PTR [ebp+0xc]
1004cffa:	push   DWORD PTR [ebp+0x8]
1004cffd:	call   0x1004c99d
1004d002:	add    esp,0xc
1004d005:	mov    DWORD PTR [ebp-0x1c],eax
1004d008:	jmp    0x1004d020
1004d00a:	call   0x10046c45
1004d00f:	mov    DWORD PTR [eax],0x9
1004d015:	call   0x10046c58
1004d01a:	mov    DWORD PTR [eax],edi
1004d01c:	or     DWORD PTR [ebp-0x1c],0xffffffff
1004d020:	mov    DWORD PTR [ebp-0x4],0xfffffffe
1004d027:	call   0x1004d035
1004d02c:	mov    eax,DWORD PTR [ebp-0x1c]
1004d02f:	call   0x10046dc9
1004d034:	ret    
1004d035:	push   DWORD PTR [ebp+0x8]
1004d038:	call   0x1004fb60
1004d03d:	pop    ecx
1004d03e:	ret    
1004d03f:	inc    DWORD PTR ds:0x1008046c
1004d045:	push   0x1000
1004d04a:	call   0x10047512
1004d04f:	test   eax,eax
1004d051:	pop    ecx
1004d052:	mov    ecx,DWORD PTR [esp+0x4]
1004d056:	mov    DWORD PTR [ecx+0x8],eax
1004d059:	je     0x1004d068
1004d05b:	or     DWORD PTR [ecx+0xc],0x8
1004d05f:	mov    DWORD PTR [ecx+0x18],0x1000
1004d066:	jmp    0x1004d079
1004d068:	or     DWORD PTR [ecx+0xc],0x4
1004d06c:	lea    eax,[ecx+0x14]
1004d06f:	mov    DWORD PTR [ecx+0x8],eax
1004d072:	mov    DWORD PTR [ecx+0x18],0x2
1004d079:	mov    eax,DWORD PTR [ecx+0x8]
1004d07c:	and    DWORD PTR [ecx+0x4],0x0
1004d080:	mov    DWORD PTR [ecx],eax
1004d082:	ret    
1004d083:	mov    eax,DWORD PTR [esp+0x4]
1004d087:	cmp    eax,0xfffffffe
1004d08a:	jne    0x1004d09a
1004d08c:	call   0x10046c45
1004d091:	mov    DWORD PTR [eax],0x9
1004d097:	xor    eax,eax
1004d099:	ret    
1004d09a:	push   esi
1004d09b:	xor    esi,esi
1004d09d:	cmp    eax,esi
1004d09f:	jl     0x1004d0a9
1004d0a1:	cmp    eax,DWORD PTR ds:0x10082464
1004d0a7:	jb     0x1004d0c5
1004d0a9:	call   0x10046c45
1004d0ae:	push   esi
1004d0af:	push   esi
1004d0b0:	push   esi
1004d0b1:	push   esi
1004d0b2:	push   esi
1004d0b3:	mov    DWORD PTR [eax],0x9
1004d0b9:	call   0x1004347c
1004d0be:	add    esp,0x14
1004d0c1:	xor    eax,eax
1004d0c3:	pop    esi
1004d0c4:	ret    
1004d0c5:	mov    ecx,eax
1004d0c7:	and    eax,0x1f
1004d0ca:	imul   eax,eax,0x28
1004d0cd:	sar    ecx,0x5
1004d0d0:	mov    ecx,DWORD PTR [ecx*4+0x10082480]
1004d0d7:	movzx  eax,BYTE PTR [ecx+eax*1+0x4]
1004d0dc:	and    eax,0x40
1004d0df:	pop    esi
1004d0e0:	ret    
1004d0e1:	mov    eax,0x1007eaa8
1004d0e6:	ret    
1004d0e7:	mov    eax,ds:0x10082460
1004d0ec:	test   eax,eax
1004d0ee:	push   esi
1004d0ef:	push   0x14
1004d0f1:	pop    esi
1004d0f2:	jne    0x1004d0fb
1004d0f4:	mov    eax,0x200
1004d0f9:	jmp    0x1004d101
1004d0fb:	cmp    eax,esi
1004d0fd:	jge    0x1004d106
1004d0ff:	mov    eax,esi
1004d101:	mov    ds:0x10082460,eax
1004d106:	push   0x4
1004d108:	push   eax
1004d109:	call   0x10047552
1004d10e:	test   eax,eax
1004d110:	pop    ecx
1004d111:	pop    ecx
1004d112:	mov    ds:0x10081440,eax
1004d117:	jne    0x1004d137
1004d119:	push   0x4
1004d11b:	push   esi
1004d11c:	mov    DWORD PTR ds:0x10082460,esi
1004d122:	call   0x10047552
1004d127:	test   eax,eax
1004d129:	pop    ecx
1004d12a:	pop    ecx
1004d12b:	mov    ds:0x10081440,eax
1004d130:	jne    0x1004d137
1004d132:	push   0x1a
1004d134:	pop    eax
1004d135:	pop    esi
1004d136:	ret    
1004d137:	xor    edx,edx
1004d139:	mov    ecx,0x1007eaa8
1004d13e:	jmp    0x1004d145
1004d140:	mov    eax,ds:0x10081440
1004d145:	mov    DWORD PTR [edx+eax*1],ecx
1004d148:	add    ecx,0x20
1004d14b:	add    edx,0x4
1004d14e:	cmp    ecx,0x1007ed28
1004d154:	jl     0x1004d140
1004d156:	push   0xfffffffe
1004d158:	pop    esi
1004d159:	xor    edx,edx
1004d15b:	mov    ecx,0x1007eab8
1004d160:	push   edi
1004d161:	mov    edi,edx
1004d163:	and    edi,0x1f
1004d166:	imul   edi,edi,0x28
1004d169:	mov    eax,edx
1004d16b:	sar    eax,0x5
1004d16e:	mov    eax,DWORD PTR [eax*4+0x10082480]
1004d175:	mov    eax,DWORD PTR [edi+eax*1]
1004d178:	cmp    eax,0xffffffff
1004d17b:	je     0x1004d185
1004d17d:	cmp    eax,esi
1004d17f:	je     0x1004d185
1004d181:	test   eax,eax
1004d183:	jne    0x1004d187
1004d185:	mov    DWORD PTR [ecx],esi
1004d187:	add    ecx,0x20
1004d18a:	inc    edx
1004d18b:	cmp    ecx,0x1007eb18
1004d191:	jl     0x1004d161
1004d193:	pop    edi
1004d194:	xor    eax,eax
1004d196:	pop    esi
1004d197:	ret    
1004d198:	call   0x10050000
1004d19d:	cmp    BYTE PTR ds:0x1007fe20,0x0
1004d1a4:	je     0x1004d1ab
1004d1a6:	call   0x1004fde3
1004d1ab:	push   DWORD PTR ds:0x10081440
1004d1b1:	call   0x100435f8
1004d1b6:	pop    ecx
1004d1b7:	ret    
1004d1b8:	mov    eax,DWORD PTR [esp+0x4]
1004d1bc:	mov    ecx,0x1007eaa8
1004d1c1:	cmp    eax,ecx
1004d1c3:	jb     0x1004d1dc
1004d1c5:	cmp    eax,0x1007ed08
1004d1ca:	ja     0x1004d1dc
1004d1cc:	sub    eax,ecx
1004d1ce:	sar    eax,0x5
1004d1d1:	add    eax,0x10
1004d1d4:	push   eax
1004d1d5:	call   0x10047d8d
1004d1da:	pop    ecx
1004d1db:	ret    
1004d1dc:	add    eax,0x20
1004d1df:	push   eax
1004d1e0:	call   DWORD PTR ds:0x100660f0
1004d1e6:	ret    
1004d1e7:	mov    eax,DWORD PTR [esp+0x4]
1004d1eb:	cmp    eax,0x14
1004d1ee:	jge    0x1004d1fb
1004d1f0:	add    eax,0x10
1004d1f3:	push   eax
1004d1f4:	call   0x10047d8d
1004d1f9:	pop    ecx
1004d1fa:	ret    
1004d1fb:	mov    eax,DWORD PTR [esp+0x8]
1004d1ff:	add    eax,0x20
1004d202:	push   eax
1004d203:	call   DWORD PTR ds:0x100660f0
1004d209:	ret    
1004d20a:	mov    eax,DWORD PTR [esp+0x4]
1004d20e:	mov    ecx,0x1007eaa8
1004d213:	cmp    eax,ecx
1004d215:	jb     0x1004d22e
1004d217:	cmp    eax,0x1007ed08
1004d21c:	ja     0x1004d22e
1004d21e:	sub    eax,ecx
1004d220:	sar    eax,0x5
1004d223:	add    eax,0x10
1004d226:	push   eax
1004d227:	call   0x10047cb5
1004d22c:	pop    ecx
1004d22d:	ret    
1004d22e:	add    eax,0x20
1004d231:	push   eax
1004d232:	call   DWORD PTR ds:0x100660ec
1004d238:	ret    
1004d239:	mov    eax,DWORD PTR [esp+0x4]
1004d23d:	cmp    eax,0x14
1004d240:	jge    0x1004d24d
1004d242:	add    eax,0x10
1004d245:	push   eax
1004d246:	call   0x10047cb5
1004d24b:	pop    ecx
1004d24c:	ret    
1004d24d:	mov    eax,DWORD PTR [esp+0x8]
1004d251:	add    eax,0x20
1004d254:	push   eax
1004d255:	call   DWORD PTR ds:0x100660ec
1004d25b:	ret    
1004d25c:	mov    eax,DWORD PTR [esp+0x4]
1004d260:	push   esi
1004d261:	xor    esi,esi
1004d263:	cmp    eax,esi
1004d265:	jne    0x1004d284
1004d267:	call   0x10046c45
1004d26c:	push   esi
1004d26d:	push   esi
1004d26e:	push   esi
1004d26f:	push   esi
1004d270:	push   esi
1004d271:	mov    DWORD PTR [eax],0x16
1004d277:	call   0x1004347c
1004d27c:	add    esp,0x14
1004d27f:	or     eax,0xffffffff
1004d282:	pop    esi
1004d283:	ret    
1004d284:	mov    eax,DWORD PTR [eax+0x10]
1004d287:	pop    esi
1004d288:	ret    
1004d289:	push   ebp
1004d28a:	mov    ebp,esp
1004d28c:	sub    esp,0x10
1004d28f:	mov    eax,ds:0x1007e030
1004d294:	xor    eax,ebp
1004d296:	mov    DWORD PTR [ebp-0x4],eax
1004d299:	push   ebx
1004d29a:	push   esi
1004d29b:	mov    esi,DWORD PTR [ebp+0xc]
1004d29e:	test   BYTE PTR [esi+0xc],0x40
1004d2a2:	push   edi
1004d2a3:	jne    0x1004d438
1004d2a9:	push   esi
1004d2aa:	call   0x1004d25c
1004d2af:	cmp    eax,0xffffffff
1004d2b2:	pop    ecx
1004d2b3:	mov    edi,0x1007e9d0
1004d2b8:	je     0x1004d2e8
1004d2ba:	push   esi
1004d2bb:	call   0x1004d25c
1004d2c0:	cmp    eax,0xfffffffe
1004d2c3:	pop    ecx
1004d2c4:	je     0x1004d2e8
1004d2c6:	push   esi
1004d2c7:	call   0x1004d25c
1004d2cc:	sar    eax,0x5
1004d2cf:	push   esi
1004d2d0:	lea    ebx,[eax*4+0x10082480]
1004d2d7:	call   0x1004d25c
1004d2dc:	and    eax,0x1f
1004d2df:	imul   eax,eax,0x28
1004d2e2:	add    eax,DWORD PTR [ebx]
1004d2e4:	pop    ecx
1004d2e5:	pop    ecx
1004d2e6:	jmp    0x1004d2ea
1004d2e8:	mov    eax,edi
1004d2ea:	mov    al,BYTE PTR [eax+0x24]
1004d2ed:	and    al,0x7f
1004d2ef:	cmp    al,0x2
1004d2f1:	je     0x1004d438
1004d2f7:	push   esi
1004d2f8:	call   0x1004d25c
1004d2fd:	cmp    eax,0xffffffff
1004d300:	pop    ecx
1004d301:	je     0x1004d331
1004d303:	push   esi
1004d304:	call   0x1004d25c
1004d309:	cmp    eax,0xfffffffe
1004d30c:	pop    ecx
1004d30d:	je     0x1004d331
1004d30f:	push   esi
1004d310:	call   0x1004d25c
1004d315:	sar    eax,0x5
1004d318:	push   esi
1004d319:	lea    ebx,[eax*4+0x10082480]
1004d320:	call   0x1004d25c
1004d325:	and    eax,0x1f
1004d328:	imul   eax,eax,0x28
1004d32b:	add    eax,DWORD PTR [ebx]
1004d32d:	pop    ecx
1004d32e:	pop    ecx
1004d32f:	jmp    0x1004d333
1004d331:	mov    eax,edi
1004d333:	mov    al,BYTE PTR [eax+0x24]
1004d336:	and    al,0x7f
1004d338:	cmp    al,0x1
1004d33a:	jne    0x1004d398
1004d33c:	dec    DWORD PTR [esi+0x4]
1004d33f:	mov    ebx,DWORD PTR [ebp+0x8]
1004d342:	js     0x1004d352
1004d344:	mov    eax,DWORD PTR [esi]
1004d346:	mov    BYTE PTR [eax],bl
1004d348:	mov    ecx,DWORD PTR [esi]
1004d34a:	movzx  eax,BYTE PTR [ecx]
1004d34d:	inc    ecx
1004d34e:	mov    DWORD PTR [esi],ecx
1004d350:	jmp    0x1004d35e
1004d352:	movsx  eax,bl
1004d355:	push   esi
1004d356:	push   eax
1004d357:	call   0x100488bd
1004d35c:	pop    ecx
1004d35d:	pop    ecx
1004d35e:	cmp    eax,0xffffffff
1004d361:	jne    0x1004d36c
1004d363:	or     ax,0xffff
1004d367:	jmp    0x1004d458
1004d36c:	dec    DWORD PTR [esi+0x4]
1004d36f:	js     0x1004d37f
1004d371:	mov    eax,DWORD PTR [esi]
1004d373:	mov    BYTE PTR [eax],bh
1004d375:	mov    ecx,DWORD PTR [esi]
1004d377:	movzx  eax,BYTE PTR [ecx]
1004d37a:	inc    ecx
1004d37b:	mov    DWORD PTR [esi],ecx
1004d37d:	jmp    0x1004d38b
1004d37f:	movsx  eax,bh
1004d382:	push   esi
1004d383:	push   eax
1004d384:	call   0x100488bd
1004d389:	pop    ecx
1004d38a:	pop    ecx
1004d38b:	cmp    eax,0xffffffff
1004d38e:	je     0x1004d363
1004d390:	mov    ax,bx
1004d393:	jmp    0x1004d458
1004d398:	push   esi
1004d399:	call   0x1004d25c
1004d39e:	cmp    eax,0xffffffff
1004d3a1:	pop    ecx
1004d3a2:	je     0x1004d3d2
1004d3a4:	push   esi
1004d3a5:	call   0x1004d25c
1004d3aa:	cmp    eax,0xfffffffe
1004d3ad:	pop    ecx
1004d3ae:	je     0x1004d3d2
1004d3b0:	push   esi
1004d3b1:	call   0x1004d25c
1004d3b6:	sar    eax,0x5
1004d3b9:	push   esi
1004d3ba:	lea    ebx,[eax*4+0x10082480]
1004d3c1:	call   0x1004d25c
1004d3c6:	and    eax,0x1f
1004d3c9:	imul   eax,eax,0x28
1004d3cc:	add    eax,DWORD PTR [ebx]
1004d3ce:	pop    ecx
1004d3cf:	pop    ecx
1004d3d0:	jmp    0x1004d3d4
1004d3d2:	mov    eax,edi
1004d3d4:	test   BYTE PTR [eax+0x4],0x80
1004d3d8:	je     0x1004d438
1004d3da:	push   DWORD PTR [ebp+0x8]
1004d3dd:	lea    eax,[ebp-0xc]
1004d3e0:	push   0x5
1004d3e2:	push   eax
1004d3e3:	lea    eax,[ebp-0x10]
1004d3e6:	push   eax
1004d3e7:	call   0x100502d8
1004d3ec:	add    esp,0x10
1004d3ef:	test   eax,eax
1004d3f1:	jne    0x1004d363
1004d3f7:	xor    ebx,ebx
1004d3f9:	cmp    DWORD PTR [ebp-0x10],ebx
1004d3fc:	jle    0x1004d432
1004d3fe:	dec    DWORD PTR [esi+0x4]
1004d401:	js     0x1004d415
1004d403:	mov    eax,DWORD PTR [esi]
1004d405:	mov    cl,BYTE PTR [ebp+ebx*1-0xc]
1004d409:	mov    BYTE PTR [eax],cl
1004d40b:	mov    ecx,DWORD PTR [esi]
1004d40d:	movzx  eax,BYTE PTR [ecx]
1004d410:	inc    ecx
1004d411:	mov    DWORD PTR [esi],ecx
1004d413:	jmp    0x1004d423
1004d415:	movsx  eax,BYTE PTR [ebp+ebx*1-0xc]
1004d41a:	push   esi
1004d41b:	push   eax
1004d41c:	call   0x100488bd
1004d421:	pop    ecx
1004d422:	pop    ecx
1004d423:	cmp    eax,0xffffffff
1004d426:	je     0x1004d363
1004d42c:	inc    ebx
1004d42d:	cmp    ebx,DWORD PTR [ebp-0x10]
1004d430:	jl     0x1004d3fe
1004d432:	mov    ax,WORD PTR [ebp+0x8]
1004d436:	jmp    0x1004d458
1004d438:	add    DWORD PTR [esi+0x4],0xfffffffe
1004d43c:	js     0x1004d44b
1004d43e:	mov    ecx,DWORD PTR [esi]
1004d440:	mov    eax,DWORD PTR [ebp+0x8]
1004d443:	mov    WORD PTR [ecx],ax
1004d446:	add    DWORD PTR [esi],0x2
1004d449:	jmp    0x1004d458
1004d44b:	movzx  eax,WORD PTR [ebp+0x8]
1004d44f:	push   esi
1004d450:	push   eax
1004d451:	call   0x10050009
1004d456:	pop    ecx
1004d457:	pop    ecx
1004d458:	mov    ecx,DWORD PTR [ebp-0x4]
1004d45b:	pop    edi
1004d45c:	pop    esi
1004d45d:	xor    ecx,ebp
1004d45f:	pop    ebx
1004d460:	call   0x10042f87
1004d465:	leave  
1004d466:	ret    
1004d467:	push   ebp
1004d468:	lea    ebp,[esp-0x1f8]
1004d46f:	sub    esp,0x278
1004d475:	mov    eax,ds:0x1007e030
1004d47a:	xor    eax,ebp
1004d47c:	mov    DWORD PTR [ebp+0x1f4],eax
1004d482:	mov    eax,DWORD PTR [ebp+0x200]
1004d488:	push   ebx
1004d489:	mov    ebx,DWORD PTR [ebp+0x204]
1004d48f:	push   esi
1004d490:	xor    esi,esi
1004d492:	push   edi
1004d493:	mov    edi,DWORD PTR [ebp+0x20c]
1004d499:	push   DWORD PTR [ebp+0x208]
1004d49f:	lea    ecx,[ebp-0x64]
1004d4a2:	mov    DWORD PTR [ebp-0x30],eax
1004d4a5:	mov    DWORD PTR [ebp-0x2c],edi
1004d4a8:	mov    DWORD PTR [ebp-0x4c],esi
1004d4ab:	mov    DWORD PTR [ebp-0x18],esi
1004d4ae:	mov    DWORD PTR [ebp-0x40],esi
1004d4b1:	mov    DWORD PTR [ebp-0x20],esi
1004d4b4:	mov    DWORD PTR [ebp-0x3c],esi
1004d4b7:	mov    DWORD PTR [ebp-0x50],esi
1004d4ba:	mov    DWORD PTR [ebp-0x44],esi
1004d4bd:	call   0x100455d5
1004d4c2:	cmp    DWORD PTR [ebp-0x30],esi
1004d4c5:	jne    0x1004d4f4
1004d4c7:	call   0x10046c45
1004d4cc:	push   esi
1004d4cd:	push   esi
1004d4ce:	push   esi
1004d4cf:	push   esi
1004d4d0:	mov    DWORD PTR [eax],0x16
1004d4d6:	push   esi
1004d4d7:	call   0x1004347c
1004d4dc:	add    esp,0x14
1004d4df:	cmp    BYTE PTR [ebp-0x58],0x0
1004d4e3:	je     0x1004d4ec
1004d4e5:	mov    eax,DWORD PTR [ebp-0x5c]
1004d4e8:	and    DWORD PTR [eax+0x70],0xfffffffd
1004d4ec:	or     eax,0xffffffff
1004d4ef:	jmp    0x1004ddc4
1004d4f4:	mov    eax,DWORD PTR [ebp-0x30]
1004d4f7:	test   BYTE PTR [eax+0xc],0x40
1004d4fb:	jne    0x1004d5a5
1004d501:	push   eax
1004d502:	call   0x1004d25c
1004d507:	cmp    eax,0xffffffff
1004d50a:	pop    ecx
1004d50b:	je     0x1004d543
1004d50d:	push   DWORD PTR [ebp-0x30]
1004d510:	call   0x1004d25c
1004d515:	cmp    eax,0xfffffffe
1004d518:	pop    ecx
1004d519:	je     0x1004d543
1004d51b:	push   DWORD PTR [ebp-0x30]
1004d51e:	call   0x1004d25c
1004d523:	push   DWORD PTR [ebp-0x30]
1004d526:	sar    eax,0x5
1004d529:	lea    esi,[eax*4+0x10082480]
1004d530:	call   0x1004d25c
1004d535:	and    eax,0x1f
1004d538:	imul   eax,eax,0x28
1004d53b:	add    eax,DWORD PTR [esi]
1004d53d:	pop    ecx
1004d53e:	pop    ecx
1004d53f:	xor    esi,esi
1004d541:	jmp    0x1004d548
1004d543:	mov    eax,0x1007e9d0
1004d548:	test   BYTE PTR [eax+0x24],0x7f
1004d54c:	jne    0x1004d4c7
1004d552:	push   DWORD PTR [ebp-0x30]
1004d555:	call   0x1004d25c
1004d55a:	cmp    eax,0xffffffff
1004d55d:	pop    ecx
1004d55e:	je     0x1004d596
1004d560:	push   DWORD PTR [ebp-0x30]
1004d563:	call   0x1004d25c
1004d568:	cmp    eax,0xfffffffe
1004d56b:	pop    ecx
1004d56c:	je     0x1004d596
1004d56e:	push   DWORD PTR [ebp-0x30]
1004d571:	call   0x1004d25c
1004d576:	push   DWORD PTR [ebp-0x30]
1004d579:	sar    eax,0x5
1004d57c:	lea    esi,[eax*4+0x10082480]
1004d583:	call   0x1004d25c
1004d588:	and    eax,0x1f
1004d58b:	imul   eax,eax,0x28
1004d58e:	add    eax,DWORD PTR [esi]
1004d590:	pop    ecx
1004d591:	pop    ecx
1004d592:	xor    esi,esi
1004d594:	jmp    0x1004d59b
1004d596:	mov    eax,0x1007e9d0
1004d59b:	test   BYTE PTR [eax+0x24],0x80
1004d59f:	jne    0x1004d4c7
1004d5a5:	cmp    ebx,esi
1004d5a7:	je     0x1004d4c7
1004d5ad:	mov    dl,BYTE PTR [ebx]
1004d5af:	xor    ecx,ecx
1004d5b1:	test   dl,dl
1004d5b3:	mov    DWORD PTR [ebp-0x34],esi
1004d5b6:	mov    DWORD PTR [ebp-0x28],esi
1004d5b9:	mov    DWORD PTR [ebp-0x54],esi
1004d5bc:	mov    BYTE PTR [ebp-0x19],dl
1004d5bf:	je     0x1004ddb4
1004d5c5:	inc    ebx
1004d5c6:	cmp    DWORD PTR [ebp-0x34],0x0
1004d5ca:	mov    DWORD PTR [ebp-0x48],ebx
1004d5cd:	jl     0x1004ddb4
1004d5d3:	mov    al,dl
1004d5d5:	sub    al,0x20
1004d5d7:	cmp    al,0x58
1004d5d9:	ja     0x1004d5ec
1004d5db:	movsx  eax,dl
1004d5de:	movzx  eax,BYTE PTR [eax+0x100673f8]
1004d5e5:	and    eax,0xf
1004d5e8:	xor    esi,esi
1004d5ea:	jmp    0x1004d5f0
1004d5ec:	xor    esi,esi
1004d5ee:	xor    eax,eax
1004d5f0:	movsx  eax,BYTE PTR [ecx+eax*8+0x10067418]
1004d5f8:	push   0x7
1004d5fa:	sar    eax,0x4
1004d5fd:	pop    ecx
1004d5fe:	cmp    eax,ecx
1004d600:	mov    DWORD PTR [ebp-0x74],eax
1004d603:	ja     0x1004dd84
1004d609:	jmp    DWORD PTR [eax*4+0x1004dddf]
1004d610:	or     DWORD PTR [ebp-0x20],0xffffffff
1004d614:	mov    DWORD PTR [ebp-0x78],esi
1004d617:	mov    DWORD PTR [ebp-0x50],esi
1004d61a:	mov    DWORD PTR [ebp-0x40],esi
1004d61d:	mov    DWORD PTR [ebp-0x3c],esi
1004d620:	mov    DWORD PTR [ebp-0x18],esi
1004d623:	mov    DWORD PTR [ebp-0x44],esi
1004d626:	jmp    0x1004dd84
1004d62b:	movsx  eax,dl
1004d62e:	sub    eax,0x20
1004d631:	je     0x1004d671
1004d633:	sub    eax,0x3
1004d636:	je     0x1004d665
1004d638:	sub    eax,0x8
1004d63b:	je     0x1004d65c
1004d63d:	dec    eax
1004d63e:	dec    eax
1004d63f:	je     0x1004d653
1004d641:	sub    eax,0x3
1004d644:	jne    0x1004dd84
1004d64a:	or     DWORD PTR [ebp-0x18],0x8
1004d64e:	jmp    0x1004dd84
1004d653:	or     DWORD PTR [ebp-0x18],0x4
1004d657:	jmp    0x1004dd84
1004d65c:	or     DWORD PTR [ebp-0x18],0x1
1004d660:	jmp    0x1004dd84
1004d665:	or     DWORD PTR [ebp-0x18],0x80
1004d66c:	jmp    0x1004dd84
1004d671:	or     DWORD PTR [ebp-0x18],0x2
1004d675:	jmp    0x1004dd84
1004d67a:	cmp    dl,0x2a
1004d67d:	jne    0x1004d69f
1004d67f:	add    edi,0x4
1004d682:	mov    DWORD PTR [ebp-0x2c],edi
1004d685:	mov    edi,DWORD PTR [edi-0x4]
1004d688:	cmp    edi,esi
1004d68a:	mov    DWORD PTR [ebp-0x40],edi
1004d68d:	jge    0x1004dd84
1004d693:	or     DWORD PTR [ebp-0x18],0x4
1004d697:	neg    DWORD PTR [ebp-0x40]
1004d69a:	jmp    0x1004dd84
1004d69f:	mov    eax,DWORD PTR [ebp-0x40]
1004d6a2:	imul   eax,eax,0xa
1004d6a5:	movsx  ecx,dl
1004d6a8:	lea    eax,[eax+ecx*1-0x30]
1004d6ac:	mov    DWORD PTR [ebp-0x40],eax
1004d6af:	jmp    0x1004dd84
1004d6b4:	mov    DWORD PTR [ebp-0x20],esi
1004d6b7:	jmp    0x1004dd84
1004d6bc:	cmp    dl,0x2a
1004d6bf:	jne    0x1004d6de
1004d6c1:	add    edi,0x4
1004d6c4:	mov    DWORD PTR [ebp-0x2c],edi
1004d6c7:	mov    edi,DWORD PTR [edi-0x4]
1004d6ca:	cmp    edi,esi
1004d6cc:	mov    DWORD PTR [ebp-0x20],edi
1004d6cf:	jge    0x1004dd84
1004d6d5:	or     DWORD PTR [ebp-0x20],0xffffffff
1004d6d9:	jmp    0x1004dd84
1004d6de:	mov    eax,DWORD PTR [ebp-0x20]
1004d6e1:	imul   eax,eax,0xa
1004d6e4:	movsx  ecx,dl
1004d6e7:	lea    eax,[eax+ecx*1-0x30]
1004d6eb:	mov    DWORD PTR [ebp-0x20],eax
1004d6ee:	jmp    0x1004dd84
1004d6f3:	cmp    dl,0x49
1004d6f6:	je     0x1004d73e
1004d6f8:	cmp    dl,0x68
1004d6fb:	je     0x1004d735
1004d6fd:	cmp    dl,0x6c
1004d700:	je     0x1004d717
1004d702:	cmp    dl,0x77
1004d705:	jne    0x1004dd84
1004d70b:	or     DWORD PTR [ebp-0x18],0x800
1004d712:	jmp    0x1004dd84
1004d717:	cmp    BYTE PTR [ebx],0x6c
1004d71a:	jne    0x1004d72c
1004d71c:	inc    ebx
1004d71d:	or     DWORD PTR [ebp-0x18],0x1000
1004d724:	mov    DWORD PTR [ebp-0x48],ebx
1004d727:	jmp    0x1004dd84
1004d72c:	or     DWORD PTR [ebp-0x18],0x10
1004d730:	jmp    0x1004dd84
1004d735:	or     DWORD PTR [ebp-0x18],0x20
1004d739:	jmp    0x1004dd84
1004d73e:	mov    al,BYTE PTR [ebx]
1004d740:	cmp    al,0x36
1004d742:	jne    0x1004d75b
1004d744:	cmp    BYTE PTR [ebx+0x1],0x34
1004d748:	jne    0x1004d75b
1004d74a:	inc    ebx
1004d74b:	inc    ebx
1004d74c:	or     DWORD PTR [ebp-0x18],0x8000
1004d753:	mov    DWORD PTR [ebp-0x48],ebx
1004d756:	jmp    0x1004dd84
1004d75b:	cmp    al,0x33
1004d75d:	jne    0x1004d776
1004d75f:	cmp    BYTE PTR [ebx+0x1],0x32
1004d763:	jne    0x1004d776
1004d765:	inc    ebx
1004d766:	inc    ebx
1004d767:	and    DWORD PTR [ebp-0x18],0xffff7fff
1004d76e:	mov    DWORD PTR [ebp-0x48],ebx
1004d771:	jmp    0x1004dd84
1004d776:	cmp    al,0x64
1004d778:	je     0x1004dd84
1004d77e:	cmp    al,0x69
1004d780:	je     0x1004dd84
1004d786:	cmp    al,0x6f
1004d788:	je     0x1004dd84
1004d78e:	cmp    al,0x75
1004d790:	je     0x1004dd84
1004d796:	cmp    al,0x78
1004d798:	je     0x1004dd84
1004d79e:	cmp    al,0x58
1004d7a0:	je     0x1004dd84
1004d7a6:	mov    DWORD PTR [ebp-0x74],esi
1004d7a9:	lea    eax,[ebp-0x64]
1004d7ac:	push   eax
1004d7ad:	movzx  eax,dl
1004d7b0:	push   eax
1004d7b1:	mov    DWORD PTR [ebp-0x44],esi
1004d7b4:	call   0x1004b3af
1004d7b9:	pop    ecx
1004d7ba:	test   eax,eax
1004d7bc:	mov    al,BYTE PTR [ebp-0x19]
1004d7bf:	pop    ecx
1004d7c0:	je     0x1004d7db
1004d7c2:	mov    ecx,DWORD PTR [ebp-0x30]
1004d7c5:	lea    esi,[ebp-0x34]
1004d7c8:	call   0x1004df3f
1004d7cd:	mov    al,BYTE PTR [ebx]
1004d7cf:	inc    ebx
1004d7d0:	test   al,al
1004d7d2:	mov    DWORD PTR [ebp-0x48],ebx
1004d7d5:	je     0x1004dd9d
1004d7db:	mov    ecx,DWORD PTR [ebp-0x30]
1004d7de:	lea    esi,[ebp-0x34]
1004d7e1:	call   0x1004df3f
1004d7e6:	jmp    0x1004dd84
1004d7eb:	movsx  eax,dl
1004d7ee:	cmp    eax,0x64
1004d7f1:	jg     0x1004d969
1004d7f7:	je     0x1004d9e8
1004d7fd:	cmp    eax,0x53
1004d800:	jg     0x1004d8b1
1004d806:	je     0x1004d862
1004d808:	sub    eax,0x41
1004d80b:	je     0x1004d81d
1004d80d:	dec    eax
1004d80e:	dec    eax
1004d80f:	je     0x1004d851
1004d811:	dec    eax
1004d812:	dec    eax
1004d813:	je     0x1004d81d
1004d815:	dec    eax
1004d816:	dec    eax
1004d817:	jne    0x1004dc6c
1004d81d:	add    dl,0x20
1004d820:	mov    DWORD PTR [ebp-0x78],0x1
1004d827:	mov    BYTE PTR [ebp-0x19],dl
1004d82a:	or     DWORD PTR [ebp-0x18],0x40
1004d82e:	cmp    DWORD PTR [ebp-0x20],esi
1004d831:	lea    ebx,[ebp-0x14]
1004d834:	mov    eax,0x200
1004d839:	mov    DWORD PTR [ebp-0x24],ebx
1004d83c:	mov    DWORD PTR [ebp-0x68],eax
1004d83f:	jge    0x1004da0c
1004d845:	mov    DWORD PTR [ebp-0x20],0x6
1004d84c:	jmp    0x1004da5a
1004d851:	test   WORD PTR [ebp-0x18],0x830
1004d857:	jne    0x1004d8ce
1004d859:	or     DWORD PTR [ebp-0x18],0x800
1004d860:	jmp    0x1004d8ce
1004d862:	test   WORD PTR [ebp-0x18],0x830
1004d868:	jne    0x1004d871
1004d86a:	or     DWORD PTR [ebp-0x18],0x800
1004d871:	mov    ecx,DWORD PTR [ebp-0x20]
1004d874:	cmp    ecx,0xffffffff
1004d877:	jne    0x1004d87e
1004d879:	mov    ecx,0x7fffffff
1004d87e:	add    edi,0x4
1004d881:	test   WORD PTR [ebp-0x18],0x810
1004d887:	mov    DWORD PTR [ebp-0x2c],edi
1004d88a:	mov    edi,DWORD PTR [edi-0x4]
1004d88d:	mov    DWORD PTR [ebp-0x24],edi
1004d890:	je     0x1004dc4a
1004d896:	cmp    edi,esi
1004d898:	jne    0x1004d8a2
1004d89a:	mov    eax,ds:0x1007ed2c
1004d89f:	mov    DWORD PTR [ebp-0x24],eax
1004d8a2:	mov    eax,DWORD PTR [ebp-0x24]
1004d8a5:	mov    DWORD PTR [ebp-0x44],0x1
1004d8ac:	jmp    0x1004dc3f
1004d8b1:	sub    eax,0x58
1004d8b4:	je     0x1004daf3
1004d8ba:	dec    eax
1004d8bb:	dec    eax
1004d8bc:	je     0x1004d91b
1004d8be:	sub    eax,ecx
1004d8c0:	je     0x1004d82a
1004d8c6:	dec    eax
1004d8c7:	dec    eax
1004d8c8:	jne    0x1004dc6c
1004d8ce:	add    edi,0x4
1004d8d1:	test   WORD PTR [ebp-0x18],0x810
1004d8d7:	mov    DWORD PTR [ebp-0x2c],edi
1004d8da:	je     0x1004d903
1004d8dc:	movzx  eax,WORD PTR [edi-0x4]
1004d8e0:	push   eax
1004d8e1:	push   0x200
1004d8e6:	lea    eax,[ebp-0x14]
1004d8e9:	push   eax
1004d8ea:	lea    eax,[ebp-0x28]
1004d8ed:	push   eax
1004d8ee:	call   0x100502d8
1004d8f3:	add    esp,0x10
1004d8f6:	test   eax,eax
1004d8f8:	je     0x1004d910
1004d8fa:	mov    DWORD PTR [ebp-0x50],0x1
1004d901:	jmp    0x1004d910
1004d903:	mov    al,BYTE PTR [edi-0x4]
1004d906:	mov    BYTE PTR [ebp-0x14],al
1004d909:	mov    DWORD PTR [ebp-0x28],0x1
1004d910:	lea    eax,[ebp-0x14]
1004d913:	mov    DWORD PTR [ebp-0x24],eax
1004d916:	jmp    0x1004dc6c
1004d91b:	mov    eax,DWORD PTR [edi]
1004d91d:	add    edi,0x4
1004d920:	cmp    eax,esi
1004d922:	mov    DWORD PTR [ebp-0x2c],edi
1004d925:	je     0x1004d955
1004d927:	mov    ecx,DWORD PTR [eax+0x4]
1004d92a:	cmp    ecx,esi
1004d92c:	je     0x1004d955
1004d92e:	test   WORD PTR [ebp-0x18],0x800
1004d934:	movsx  eax,WORD PTR [eax]
1004d937:	mov    DWORD PTR [ebp-0x24],ecx
1004d93a:	je     0x1004d94d
1004d93c:	cdq    
1004d93d:	sub    eax,edx
1004d93f:	sar    eax,1
1004d941:	mov    DWORD PTR [ebp-0x44],0x1
1004d948:	jmp    0x1004dc69
1004d94d:	mov    DWORD PTR [ebp-0x44],esi
1004d950:	jmp    0x1004dc69
1004d955:	mov    eax,ds:0x1007ed28
1004d95a:	mov    DWORD PTR [ebp-0x24],eax
1004d95d:	push   eax
1004d95e:	call   0x10043100
1004d963:	pop    ecx
1004d964:	jmp    0x1004dc69
1004d969:	cmp    eax,0x70
1004d96c:	jg     0x1004daf8
1004d972:	je     0x1004daec
1004d978:	cmp    eax,0x65
1004d97b:	jl     0x1004dc6c
1004d981:	cmp    eax,0x67
1004d984:	jle    0x1004d82a
1004d98a:	cmp    eax,0x69
1004d98d:	je     0x1004d9e8
1004d98f:	cmp    eax,0x6e
1004d992:	je     0x1004d9b3
1004d994:	cmp    eax,0x6f
1004d997:	jne    0x1004dc6c
1004d99d:	test   BYTE PTR [ebp-0x18],0x80
1004d9a1:	mov    DWORD PTR [ebp-0x28],0x8
1004d9a8:	je     0x1004d9f3
1004d9aa:	or     DWORD PTR [ebp-0x18],0x200
1004d9b1:	jmp    0x1004d9f3
1004d9b3:	mov    esi,DWORD PTR [edi]
1004d9b5:	add    edi,0x4
1004d9b8:	mov    DWORD PTR [ebp-0x2c],edi
1004d9bb:	call   0x1004ddff
1004d9c0:	test   eax,eax
1004d9c2:	je     0x1004dd9d
1004d9c8:	test   BYTE PTR [ebp-0x18],0x20
1004d9cc:	je     0x1004d9d7
1004d9ce:	mov    ax,WORD PTR [ebp-0x34]
1004d9d2:	mov    WORD PTR [esi],ax
1004d9d5:	jmp    0x1004d9dc
1004d9d7:	mov    eax,DWORD PTR [ebp-0x34]
1004d9da:	mov    DWORD PTR [esi],eax
1004d9dc:	mov    DWORD PTR [ebp-0x50],0x1
1004d9e3:	jmp    0x1004dd71
1004d9e8:	or     DWORD PTR [ebp-0x18],0x40
1004d9ec:	mov    DWORD PTR [ebp-0x28],0xa
1004d9f3:	mov    ecx,DWORD PTR [ebp-0x18]
1004d9f6:	test   cx,cx
1004d9f9:	jns    0x1004db42
1004d9ff:	mov    eax,DWORD PTR [edi]
1004da01:	mov    edx,DWORD PTR [edi+0x4]
1004da04:	add    edi,0x8
1004da07:	jmp    0x1004db77
1004da0c:	jne    0x1004da1c
1004da0e:	cmp    dl,0x67
1004da11:	jne    0x1004da5a
1004da13:	mov    DWORD PTR [ebp-0x20],0x1
1004da1a:	jmp    0x1004da5a
1004da1c:	cmp    DWORD PTR [ebp-0x20],eax
1004da1f:	jle    0x1004da24
1004da21:	mov    DWORD PTR [ebp-0x20],eax
1004da24:	cmp    DWORD PTR [ebp-0x20],0xa3
1004da2b:	jle    0x1004da5a
1004da2d:	mov    esi,DWORD PTR [ebp-0x20]
1004da30:	add    esi,0x15d
1004da36:	push   esi
1004da37:	call   0x10047512
1004da3c:	test   eax,eax
1004da3e:	mov    dl,BYTE PTR [ebp-0x19]
1004da41:	pop    ecx
1004da42:	mov    DWORD PTR [ebp-0x54],eax
1004da45:	je     0x1004da51
1004da47:	mov    DWORD PTR [ebp-0x24],eax
1004da4a:	mov    DWORD PTR [ebp-0x68],esi
1004da4d:	mov    ebx,eax
1004da4f:	jmp    0x1004da58
1004da51:	mov    DWORD PTR [ebp-0x20],0xa3
1004da58:	xor    esi,esi
1004da5a:	mov    eax,DWORD PTR [edi]
1004da5c:	add    edi,0x8
1004da5f:	mov    DWORD PTR [ebp-0x80],eax
1004da62:	mov    eax,DWORD PTR [edi-0x4]
1004da65:	mov    DWORD PTR [ebp-0x7c],eax
1004da68:	lea    eax,[ebp-0x64]
1004da6b:	push   eax
1004da6c:	push   DWORD PTR [ebp-0x78]
1004da6f:	movsx  eax,dl
1004da72:	push   DWORD PTR [ebp-0x20]
1004da75:	mov    DWORD PTR [ebp-0x2c],edi
1004da78:	push   eax
1004da79:	push   DWORD PTR [ebp-0x68]
1004da7c:	lea    eax,[ebp-0x80]
1004da7f:	push   ebx
1004da80:	push   eax
1004da81:	push   DWORD PTR ds:0x1007ea98
1004da87:	call   0x10046fe2
1004da8c:	pop    ecx
1004da8d:	call   eax
1004da8f:	mov    edi,DWORD PTR [ebp-0x18]
1004da92:	add    esp,0x1c
1004da95:	and    edi,0x80
1004da9b:	je     0x1004dab7
1004da9d:	cmp    DWORD PTR [ebp-0x20],esi
1004daa0:	jne    0x1004dab7
1004daa2:	lea    eax,[ebp-0x64]
1004daa5:	push   eax
1004daa6:	push   ebx
1004daa7:	push   DWORD PTR ds:0x1007eaa4
1004daad:	call   0x10046fe2
1004dab2:	pop    ecx
1004dab3:	call   eax
1004dab5:	pop    ecx
1004dab6:	pop    ecx
1004dab7:	cmp    BYTE PTR [ebp-0x19],0x67
1004dabb:	jne    0x1004dad6
1004dabd:	cmp    edi,esi
1004dabf:	jne    0x1004dad6
1004dac1:	lea    eax,[ebp-0x64]
1004dac4:	push   eax
1004dac5:	push   ebx
1004dac6:	push   DWORD PTR ds:0x1007eaa0
1004dacc:	call   0x10046fe2
1004dad1:	pop    ecx
1004dad2:	call   eax
1004dad4:	pop    ecx
1004dad5:	pop    ecx
1004dad6:	cmp    BYTE PTR [ebx],0x2d
1004dad9:	jne    0x1004dae6
1004dadb:	or     DWORD PTR [ebp-0x18],0x100
1004dae2:	inc    ebx
1004dae3:	mov    DWORD PTR [ebp-0x24],ebx
1004dae6:	push   ebx
1004dae7:	jmp    0x1004d95e
1004daec:	mov    DWORD PTR [ebp-0x20],0x8
1004daf3:	mov    DWORD PTR [ebp-0x4c],ecx
1004daf6:	jmp    0x1004db19
1004daf8:	sub    eax,0x73
1004dafb:	je     0x1004d871
1004db01:	dec    eax
1004db02:	dec    eax
1004db03:	je     0x1004d9ec
1004db09:	sub    eax,0x3
1004db0c:	jne    0x1004dc6c
1004db12:	mov    DWORD PTR [ebp-0x4c],0x27
1004db19:	test   BYTE PTR [ebp-0x18],0x80
1004db1d:	mov    DWORD PTR [ebp-0x28],0x10
1004db24:	je     0x1004d9f3
1004db2a:	mov    al,BYTE PTR [ebp-0x4c]
1004db2d:	add    al,0x51
1004db2f:	mov    BYTE PTR [ebp-0x38],0x30
1004db33:	mov    BYTE PTR [ebp-0x37],al
1004db36:	mov    DWORD PTR [ebp-0x3c],0x2
1004db3d:	jmp    0x1004d9f3
1004db42:	test   cx,0x1000
1004db47:	jne    0x1004d9ff
1004db4d:	add    edi,0x4
1004db50:	test   cl,0x20
1004db53:	je     0x1004db6a
1004db55:	test   cl,0x40
1004db58:	mov    DWORD PTR [ebp-0x2c],edi
1004db5b:	je     0x1004db63
1004db5d:	movsx  eax,WORD PTR [edi-0x4]
1004db61:	jmp    0x1004db67
1004db63:	movzx  eax,WORD PTR [edi-0x4]
1004db67:	cdq    
1004db68:	jmp    0x1004db7a
1004db6a:	test   cl,0x40
1004db6d:	mov    eax,DWORD PTR [edi-0x4]
1004db70:	je     0x1004db75
1004db72:	cdq    
1004db73:	jmp    0x1004db77
1004db75:	xor    edx,edx
1004db77:	mov    DWORD PTR [ebp-0x2c],edi
1004db7a:	test   cl,0x40
1004db7d:	je     0x1004db97
1004db7f:	cmp    edx,esi
1004db81:	jg     0x1004db97
1004db83:	jl     0x1004db89
1004db85:	cmp    eax,esi
1004db87:	jae    0x1004db97
1004db89:	neg    eax
1004db8b:	adc    edx,0x0
1004db8e:	neg    edx
1004db90:	or     DWORD PTR [ebp-0x18],0x100
1004db97:	test   WORD PTR [ebp-0x18],0x9000
1004db9d:	mov    ebx,edx
1004db9f:	mov    edi,eax
1004dba1:	jne    0x1004dba5
1004dba3:	xor    ebx,ebx
1004dba5:	cmp    DWORD PTR [ebp-0x20],0x0
1004dba9:	jge    0x1004dbb4
1004dbab:	mov    DWORD PTR [ebp-0x20],0x1
1004dbb2:	jmp    0x1004dbc5
1004dbb4:	and    DWORD PTR [ebp-0x18],0xfffffff7
1004dbb8:	mov    eax,0x200
1004dbbd:	cmp    DWORD PTR [ebp-0x20],eax
1004dbc0:	jle    0x1004dbc5
1004dbc2:	mov    DWORD PTR [ebp-0x20],eax
1004dbc5:	mov    eax,edi
1004dbc7:	or     eax,ebx
1004dbc9:	jne    0x1004dbcf
1004dbcb:	and    DWORD PTR [ebp-0x3c],0x0
1004dbcf:	lea    esi,[ebp+0x1eb]
1004dbd5:	mov    eax,DWORD PTR [ebp-0x20]
1004dbd8:	dec    DWORD PTR [ebp-0x20]
1004dbdb:	test   eax,eax
1004dbdd:	jg     0x1004dbe5
1004dbdf:	mov    eax,edi
1004dbe1:	or     eax,ebx
1004dbe3:	je     0x1004dc09
1004dbe5:	mov    eax,DWORD PTR [ebp-0x28]
1004dbe8:	cdq    
1004dbe9:	push   edx
1004dbea:	push   eax
1004dbeb:	push   ebx
1004dbec:	push   edi
1004dbed:	call   0x1004aae0
1004dbf2:	add    ecx,0x30
1004dbf5:	cmp    ecx,0x39
1004dbf8:	mov    DWORD PTR [ebp-0x68],ebx
1004dbfb:	mov    edi,eax
1004dbfd:	mov    ebx,edx
1004dbff:	jle    0x1004dc04
1004dc01:	add    ecx,DWORD PTR [ebp-0x4c]
1004dc04:	mov    BYTE PTR [esi],cl
1004dc06:	dec    esi
1004dc07:	jmp    0x1004dbd5
1004dc09:	lea    eax,[ebp+0x1eb]
1004dc0f:	sub    eax,esi
1004dc11:	inc    esi
1004dc12:	test   WORD PTR [ebp-0x18],0x200
1004dc18:	mov    DWORD PTR [ebp-0x28],eax
1004dc1b:	mov    DWORD PTR [ebp-0x24],esi
1004dc1e:	je     0x1004dc6c
1004dc20:	test   eax,eax
1004dc22:	je     0x1004dc2b
1004dc24:	mov    ecx,esi
1004dc26:	cmp    BYTE PTR [ecx],0x30
1004dc29:	je     0x1004dc6c
1004dc2b:	dec    DWORD PTR [ebp-0x24]
1004dc2e:	mov    ecx,DWORD PTR [ebp-0x24]
1004dc31:	mov    BYTE PTR [ecx],0x30
1004dc34:	inc    eax
1004dc35:	jmp    0x1004dc69
1004dc37:	dec    ecx
1004dc38:	cmp    WORD PTR [eax],si
1004dc3b:	je     0x1004dc43
1004dc3d:	inc    eax
1004dc3e:	inc    eax
1004dc3f:	cmp    ecx,esi
1004dc41:	jne    0x1004dc37
1004dc43:	sub    eax,DWORD PTR [ebp-0x24]
1004dc46:	sar    eax,1
1004dc48:	jmp    0x1004dc69
1004dc4a:	cmp    edi,esi
1004dc4c:	jne    0x1004dc56
1004dc4e:	mov    eax,ds:0x1007ed28
1004dc53:	mov    DWORD PTR [ebp-0x24],eax
1004dc56:	mov    eax,DWORD PTR [ebp-0x24]
1004dc59:	jmp    0x1004dc62
1004dc5b:	dec    ecx
1004dc5c:	cmp    BYTE PTR [eax],0x0
1004dc5f:	je     0x1004dc66
1004dc61:	inc    eax
1004dc62:	cmp    ecx,esi
1004dc64:	jne    0x1004dc5b
1004dc66:	sub    eax,DWORD PTR [ebp-0x24]
1004dc69:	mov    DWORD PTR [ebp-0x28],eax
1004dc6c:	cmp    DWORD PTR [ebp-0x50],0x0
1004dc70:	jne    0x1004dd71
1004dc76:	mov    eax,DWORD PTR [ebp-0x18]
1004dc79:	test   al,0x40
1004dc7b:	je     0x1004dca2
1004dc7d:	test   ax,0x100
1004dc81:	je     0x1004dc89
1004dc83:	mov    BYTE PTR [ebp-0x38],0x2d
1004dc87:	jmp    0x1004dc9b
1004dc89:	test   al,0x1
1004dc8b:	je     0x1004dc93
1004dc8d:	mov    BYTE PTR [ebp-0x38],0x2b
1004dc91:	jmp    0x1004dc9b
1004dc93:	test   al,0x2
1004dc95:	je     0x1004dca2
1004dc97:	mov    BYTE PTR [ebp-0x38],0x20
1004dc9b:	mov    DWORD PTR [ebp-0x3c],0x1
1004dca2:	mov    ebx,DWORD PTR [ebp-0x40]
1004dca5:	sub    ebx,DWORD PTR [ebp-0x28]
1004dca8:	sub    ebx,DWORD PTR [ebp-0x3c]
1004dcab:	test   BYTE PTR [ebp-0x18],0xc
1004dcaf:	jne    0x1004dcc2
1004dcb1:	push   DWORD PTR [ebp-0x30]
1004dcb4:	lea    eax,[ebp-0x34]
1004dcb7:	push   ebx
1004dcb8:	push   0x20
1004dcba:	call   0x1004df72
1004dcbf:	add    esp,0xc
1004dcc2:	push   DWORD PTR [ebp-0x3c]
1004dcc5:	mov    edi,DWORD PTR [ebp-0x30]
1004dcc8:	lea    eax,[ebp-0x34]
1004dccb:	lea    ecx,[ebp-0x38]
1004dcce:	call   0x1004df96
1004dcd3:	test   BYTE PTR [ebp-0x18],0x8
1004dcd7:	pop    ecx
1004dcd8:	je     0x1004dcef
1004dcda:	test   BYTE PTR [ebp-0x18],0x4
1004dcde:	jne    0x1004dcef
1004dce0:	push   edi
1004dce1:	push   ebx
1004dce2:	push   0x30
1004dce4:	lea    eax,[ebp-0x34]
1004dce7:	call   0x1004df72
1004dcec:	add    esp,0xc
1004dcef:	cmp    DWORD PTR [ebp-0x44],0x0
1004dcf3:	mov    eax,DWORD PTR [ebp-0x28]
1004dcf6:	je     0x1004dd49
1004dcf8:	test   eax,eax
1004dcfa:	jle    0x1004dd49
1004dcfc:	mov    esi,DWORD PTR [ebp-0x24]
1004dcff:	mov    DWORD PTR [ebp-0x68],eax
1004dd02:	movzx  eax,WORD PTR [esi]
1004dd05:	dec    DWORD PTR [ebp-0x68]
1004dd08:	push   eax
1004dd09:	push   0x6
1004dd0b:	lea    eax,[ebp+0x1ec]
1004dd11:	push   eax
1004dd12:	lea    eax,[ebp-0x70]
1004dd15:	inc    esi
1004dd16:	push   eax
1004dd17:	inc    esi
1004dd18:	call   0x100502d8
1004dd1d:	add    esp,0x10
1004dd20:	test   eax,eax
1004dd22:	jne    0x1004dd43
1004dd24:	cmp    DWORD PTR [ebp-0x70],eax
1004dd27:	je     0x1004dd43
1004dd29:	push   DWORD PTR [ebp-0x70]
1004dd2c:	lea    eax,[ebp-0x34]
1004dd2f:	lea    ecx,[ebp+0x1ec]
1004dd35:	call   0x1004df96
1004dd3a:	cmp    DWORD PTR [ebp-0x68],0x0
1004dd3e:	pop    ecx
1004dd3f:	jne    0x1004dd02
1004dd41:	jmp    0x1004dd56
1004dd43:	or     DWORD PTR [ebp-0x34],0xffffffff
1004dd47:	jmp    0x1004dd56
1004dd49:	mov    ecx,DWORD PTR [ebp-0x24]
1004dd4c:	push   eax
1004dd4d:	lea    eax,[ebp-0x34]
1004dd50:	call   0x1004df96
1004dd55:	pop    ecx
1004dd56:	cmp    DWORD PTR [ebp-0x34],0x0
1004dd5a:	jl     0x1004dd71
1004dd5c:	test   BYTE PTR [ebp-0x18],0x4
1004dd60:	je     0x1004dd71
1004dd62:	push   edi
1004dd63:	push   ebx
1004dd64:	push   0x20
1004dd66:	lea    eax,[ebp-0x34]
1004dd69:	call   0x1004df72
1004dd6e:	add    esp,0xc
1004dd71:	cmp    DWORD PTR [ebp-0x54],0x0
1004dd75:	je     0x1004dd84
1004dd77:	push   DWORD PTR [ebp-0x54]
1004dd7a:	call   0x100435f8
1004dd7f:	and    DWORD PTR [ebp-0x54],0x0
1004dd83:	pop    ecx
1004dd84:	mov    ebx,DWORD PTR [ebp-0x48]
1004dd87:	mov    al,BYTE PTR [ebx]
1004dd89:	test   al,al
1004dd8b:	mov    BYTE PTR [ebp-0x19],al
1004dd8e:	je     0x1004ddb4
1004dd90:	mov    ecx,DWORD PTR [ebp-0x74]
1004dd93:	mov    edi,DWORD PTR [ebp-0x2c]
1004dd96:	mov    dl,al
1004dd98:	jmp    0x1004d5c5
1004dd9d:	call   0x10046c45
1004dda2:	mov    DWORD PTR [eax],0x16
1004dda8:	xor    eax,eax
1004ddaa:	push   eax
1004ddab:	push   eax
1004ddac:	push   eax
1004ddad:	push   eax
1004ddae:	push   eax
1004ddaf:	jmp    0x1004d4d7
1004ddb4:	cmp    BYTE PTR [ebp-0x58],0x0
1004ddb8:	je     0x1004ddc1
1004ddba:	mov    eax,DWORD PTR [ebp-0x5c]
1004ddbd:	and    DWORD PTR [eax+0x70],0xfffffffd
1004ddc1:	mov    eax,DWORD PTR [ebp-0x34]
1004ddc4:	mov    ecx,DWORD PTR [ebp+0x1f4]
1004ddca:	pop    edi
1004ddcb:	pop    esi
1004ddcc:	xor    ecx,ebp
1004ddce:	pop    ebx
1004ddcf:	call   0x10042f87
1004ddd4:	add    ebp,0x1f8
1004ddda:	leave  
1004dddb:	ret    
1004dddc:	lea    ecx,[ecx+0x0]
1004dddf:	test   eax,0x101004d7
1004dde4:	(bad)  
1004dde5:	add    al,0x10
1004dde7:	sub    edx,esi
1004dde9:	add    al,0x10
1004ddeb:	jp     0x1004ddc3
1004dded:	add    al,0x10
1004ddef:	mov    ah,0xd6
1004ddf1:	add    al,0x10
1004ddf3:	mov    esp,0xf31004d6
1004ddf8:	(bad)  
1004ddf9:	add    al,0x10
1004ddfb:	jmp    0x1004ddd4
1004ddfd:	add    al,0x10
1004ddff:	mov    eax,ds:0x1007e030
1004de04:	or     eax,0x1
1004de07:	xor    ecx,ecx
1004de09:	cmp    DWORD PTR ds:0x10080470,eax
1004de0f:	sete   cl
1004de12:	mov    eax,ecx
1004de14:	ret    
1004de15:	push   ebp
1004de16:	mov    ebp,esp
1004de18:	sub    esp,0x10
1004de1b:	push   ebx
1004de1c:	push   esi
1004de1d:	mov    esi,DWORD PTR [ebp+0xc]
1004de20:	xor    ebx,ebx
1004de22:	cmp    esi,ebx
1004de24:	je     0x1004de39
1004de26:	cmp    DWORD PTR [ebp+0x10],ebx
1004de29:	je     0x1004de39
1004de2b:	cmp    BYTE PTR [esi],bl
1004de2d:	jne    0x1004de3f
1004de2f:	mov    eax,DWORD PTR [ebp+0x8]
1004de32:	cmp    eax,ebx
1004de34:	je     0x1004de39
1004de36:	mov    WORD PTR [eax],bx
1004de39:	xor    eax,eax
1004de3b:	pop    esi
1004de3c:	pop    ebx
1004de3d:	leave  
1004de3e:	ret    
1004de3f:	push   DWORD PTR [ebp+0x14]
1004de42:	lea    ecx,[ebp-0x10]
1004de45:	call   0x100455d5
1004de4a:	mov    eax,DWORD PTR [ebp-0x10]
1004de4d:	cmp    DWORD PTR [eax+0x14],ebx
1004de50:	jne    0x1004de71
1004de52:	mov    eax,DWORD PTR [ebp+0x8]
1004de55:	cmp    eax,ebx
1004de57:	je     0x1004de60
1004de59:	movzx  cx,BYTE PTR [esi]
1004de5d:	mov    WORD PTR [eax],cx
1004de60:	cmp    BYTE PTR [ebp-0x4],bl
1004de63:	je     0x1004de6c
1004de65:	mov    eax,DWORD PTR [ebp-0x8]
1004de68:	and    DWORD PTR [eax+0x70],0xfffffffd
1004de6c:	xor    eax,eax
1004de6e:	inc    eax
1004de6f:	jmp    0x1004de3b
1004de71:	lea    eax,[ebp-0x10]
1004de74:	push   eax
1004de75:	movzx  eax,BYTE PTR [esi]
1004de78:	push   eax
1004de79:	call   0x1004b3af
1004de7e:	test   eax,eax
1004de80:	pop    ecx
1004de81:	pop    ecx
1004de82:	je     0x1004df01
1004de84:	mov    eax,DWORD PTR [ebp-0x10]
1004de87:	mov    ecx,DWORD PTR [eax+0xac]
1004de8d:	cmp    ecx,0x1
1004de90:	jle    0x1004deb7
1004de92:	cmp    DWORD PTR [ebp+0x10],ecx
1004de95:	jl     0x1004deb7
1004de97:	xor    edx,edx
1004de99:	cmp    DWORD PTR [ebp+0x8],ebx
1004de9c:	setne  dl
1004de9f:	push   edx
1004dea0:	push   DWORD PTR [ebp+0x8]
1004dea3:	push   ecx
1004dea4:	push   esi
1004dea5:	push   0x9
1004dea7:	push   DWORD PTR [eax+0x4]
1004deaa:	call   DWORD PTR ds:0x1006608c
1004deb0:	test   eax,eax
1004deb2:	mov    eax,DWORD PTR [ebp-0x10]
1004deb5:	jne    0x1004dec7
1004deb7:	mov    ecx,DWORD PTR [ebp+0x10]
1004deba:	cmp    ecx,DWORD PTR [eax+0xac]
1004dec0:	jb     0x1004dee2
1004dec2:	cmp    BYTE PTR [esi+0x1],bl
1004dec5:	je     0x1004dee2
1004dec7:	cmp    BYTE PTR [ebp-0x4],bl
1004deca:	mov    eax,DWORD PTR [eax+0xac]
1004ded0:	je     0x1004de3b
1004ded6:	mov    ecx,DWORD PTR [ebp-0x8]
1004ded9:	and    DWORD PTR [ecx+0x70],0xfffffffd
1004dedd:	jmp    0x1004de3b
1004dee2:	call   0x10046c45
1004dee7:	mov    DWORD PTR [eax],0x2a
1004deed:	cmp    BYTE PTR [ebp-0x4],bl
1004def0:	je     0x1004def9
1004def2:	mov    eax,DWORD PTR [ebp-0x8]
1004def5:	and    DWORD PTR [eax+0x70],0xfffffffd
1004def9:	or     eax,0xffffffff
1004defc:	jmp    0x1004de3b
1004df01:	xor    eax,eax
1004df03:	cmp    DWORD PTR [ebp+0x8],ebx
1004df06:	setne  al
1004df09:	push   eax
1004df0a:	push   DWORD PTR [ebp+0x8]
1004df0d:	mov    eax,DWORD PTR [ebp-0x10]
1004df10:	push   0x1
1004df12:	push   esi
1004df13:	push   0x9
1004df15:	push   DWORD PTR [eax+0x4]
1004df18:	call   DWORD PTR ds:0x1006608c
1004df1e:	test   eax,eax
1004df20:	jne    0x1004de60
1004df26:	jmp    0x1004dee2
1004df28:	push   0x0
1004df2a:	push   DWORD PTR [esp+0x10]
1004df2e:	push   DWORD PTR [esp+0x10]
1004df32:	push   DWORD PTR [esp+0x10]
1004df36:	call   0x1004de15
1004df3b:	add    esp,0x10
1004df3e:	ret    
1004df3f:	test   BYTE PTR [ecx+0xc],0x40
1004df43:	je     0x1004df4b
1004df45:	cmp    DWORD PTR [ecx+0x8],0x0
1004df49:	je     0x1004df6f
1004df4b:	dec    DWORD PTR [ecx+0x4]
1004df4e:	js     0x1004df5b
1004df50:	mov    edx,DWORD PTR [ecx]
1004df52:	mov    BYTE PTR [edx],al
1004df54:	inc    DWORD PTR [ecx]
1004df56:	movzx  eax,al
1004df59:	jmp    0x1004df67
1004df5b:	movsx  eax,al
1004df5e:	push   ecx
1004df5f:	push   eax
1004df60:	call   0x100488bd
1004df65:	pop    ecx
1004df66:	pop    ecx
1004df67:	cmp    eax,0xffffffff
1004df6a:	jne    0x1004df6f
1004df6c:	or     DWORD PTR [esi],eax
1004df6e:	ret    
1004df6f:	inc    DWORD PTR [esi]
1004df71:	ret    
1004df72:	push   ebp
1004df73:	mov    ebp,esp
1004df75:	push   esi
1004df76:	mov    esi,eax
1004df78:	jmp    0x1004df8d
1004df7a:	mov    ecx,DWORD PTR [ebp+0x10]
1004df7d:	mov    al,BYTE PTR [ebp+0x8]
1004df80:	dec    DWORD PTR [ebp+0xc]
1004df83:	call   0x1004df3f
1004df88:	cmp    DWORD PTR [esi],0xffffffff
1004df8b:	je     0x1004df93
1004df8d:	cmp    DWORD PTR [ebp+0xc],0x0
1004df91:	jg     0x1004df7a
1004df93:	pop    esi
1004df94:	pop    ebp
1004df95:	ret    
1004df96:	test   BYTE PTR [edi+0xc],0x40
1004df9a:	push   ebx
1004df9b:	push   esi
1004df9c:	mov    esi,eax
1004df9e:	mov    ebx,ecx
1004dfa0:	je     0x1004dfd6
1004dfa2:	cmp    DWORD PTR [edi+0x8],0x0
1004dfa6:	jne    0x1004dfd6
1004dfa8:	mov    eax,DWORD PTR [esp+0xc]
1004dfac:	add    DWORD PTR [esi],eax
1004dfae:	jmp    0x1004dfdd
1004dfb0:	mov    al,BYTE PTR [ebx]
1004dfb2:	dec    DWORD PTR [esp+0xc]
1004dfb6:	mov    ecx,edi
1004dfb8:	call   0x1004df3f
1004dfbd:	inc    ebx
1004dfbe:	cmp    DWORD PTR [esi],0xffffffff
1004dfc1:	jne    0x1004dfd6
1004dfc3:	call   0x10046c45
1004dfc8:	cmp    DWORD PTR [eax],0x2a
1004dfcb:	jne    0x1004dfdd
1004dfcd:	mov    ecx,edi
1004dfcf:	mov    al,0x3f
1004dfd1:	call   0x1004df3f
1004dfd6:	cmp    DWORD PTR [esp+0xc],0x0
1004dfdb:	jg     0x1004dfb0
1004dfdd:	pop    esi
1004dfde:	pop    ebx
1004dfdf:	ret    
1004dfe0:	push   ebp
1004dfe1:	lea    ebp,[esp-0x1f8]
1004dfe8:	sub    esp,0x278
1004dfee:	mov    eax,ds:0x1007e030
1004dff3:	xor    eax,ebp
1004dff5:	mov    DWORD PTR [ebp+0x1f4],eax
1004dffb:	mov    eax,DWORD PTR [ebp+0x200]
1004e001:	push   ebx
1004e002:	mov    ebx,DWORD PTR [ebp+0x204]
1004e008:	push   esi
1004e009:	xor    esi,esi
1004e00b:	push   edi
1004e00c:	mov    edi,DWORD PTR [ebp+0x20c]
1004e012:	push   DWORD PTR [ebp+0x208]
1004e018:	lea    ecx,[ebp-0x5c]
1004e01b:	mov    DWORD PTR [ebp-0x30],eax
1004e01e:	mov    DWORD PTR [ebp-0x2c],edi
1004e021:	mov    DWORD PTR [ebp-0x64],esi
1004e024:	mov    DWORD PTR [ebp-0x18],esi
1004e027:	mov    DWORD PTR [ebp-0x40],esi
1004e02a:	mov    DWORD PTR [ebp-0x20],esi
1004e02d:	mov    DWORD PTR [ebp-0x3c],esi
1004e030:	mov    DWORD PTR [ebp-0x68],esi
1004e033:	mov    DWORD PTR [ebp-0x44],esi
1004e036:	call   0x100455d5
1004e03b:	cmp    DWORD PTR [ebp-0x30],esi
1004e03e:	jne    0x1004e06d
1004e040:	call   0x10046c45
1004e045:	push   esi
1004e046:	push   esi
1004e047:	push   esi
1004e048:	push   esi
1004e049:	mov    DWORD PTR [eax],0x16
1004e04f:	push   esi
1004e050:	call   0x1004347c
1004e055:	add    esp,0x14
1004e058:	cmp    BYTE PTR [ebp-0x50],0x0
1004e05c:	je     0x1004e065
1004e05e:	mov    eax,DWORD PTR [ebp-0x54]
1004e061:	and    DWORD PTR [eax+0x70],0xfffffffd
1004e065:	or     eax,0xffffffff
1004e068:	jmp    0x1004e958
1004e06d:	mov    eax,DWORD PTR [ebp-0x30]
1004e070:	test   BYTE PTR [eax+0xc],0x40
1004e074:	jne    0x1004e11e
1004e07a:	push   eax
1004e07b:	call   0x1004d25c
1004e080:	cmp    eax,0xffffffff
1004e083:	pop    ecx
1004e084:	je     0x1004e0bc
1004e086:	push   DWORD PTR [ebp-0x30]
1004e089:	call   0x1004d25c
1004e08e:	cmp    eax,0xfffffffe
1004e091:	pop    ecx
1004e092:	je     0x1004e0bc
1004e094:	push   DWORD PTR [ebp-0x30]
1004e097:	call   0x1004d25c
1004e09c:	push   DWORD PTR [ebp-0x30]
1004e09f:	sar    eax,0x5
1004e0a2:	lea    esi,[eax*4+0x10082480]
1004e0a9:	call   0x1004d25c
1004e0ae:	and    eax,0x1f
1004e0b1:	imul   eax,eax,0x28
1004e0b4:	add    eax,DWORD PTR [esi]
1004e0b6:	pop    ecx
1004e0b7:	pop    ecx
1004e0b8:	xor    esi,esi
1004e0ba:	jmp    0x1004e0c1
1004e0bc:	mov    eax,0x1007e9d0
1004e0c1:	test   BYTE PTR [eax+0x24],0x7f
1004e0c5:	jne    0x1004e040
1004e0cb:	push   DWORD PTR [ebp-0x30]
1004e0ce:	call   0x1004d25c
1004e0d3:	cmp    eax,0xffffffff
1004e0d6:	pop    ecx
1004e0d7:	je     0x1004e10f
1004e0d9:	push   DWORD PTR [ebp-0x30]
1004e0dc:	call   0x1004d25c
1004e0e1:	cmp    eax,0xfffffffe
1004e0e4:	pop    ecx
1004e0e5:	je     0x1004e10f
1004e0e7:	push   DWORD PTR [ebp-0x30]
1004e0ea:	call   0x1004d25c
1004e0ef:	push   DWORD PTR [ebp-0x30]
1004e0f2:	sar    eax,0x5
1004e0f5:	lea    esi,[eax*4+0x10082480]
1004e0fc:	call   0x1004d25c
1004e101:	and    eax,0x1f
1004e104:	imul   eax,eax,0x28
1004e107:	add    eax,DWORD PTR [esi]
1004e109:	pop    ecx
1004e10a:	pop    ecx
1004e10b:	xor    esi,esi
1004e10d:	jmp    0x1004e114
1004e10f:	mov    eax,0x1007e9d0
1004e114:	test   BYTE PTR [eax+0x24],0x80
1004e118:	jne    0x1004e040
1004e11e:	cmp    ebx,esi
1004e120:	je     0x1004e040
1004e126:	mov    dl,BYTE PTR [ebx]
1004e128:	test   dl,dl
1004e12a:	mov    DWORD PTR [ebp-0x34],esi
1004e12d:	mov    DWORD PTR [ebp-0x28],esi
1004e130:	mov    DWORD PTR [ebp-0x48],esi
1004e133:	mov    DWORD PTR [ebp-0x60],esi
1004e136:	mov    BYTE PTR [ebp-0x19],dl
1004e139:	je     0x1004e948
1004e13f:	inc    ebx
1004e140:	xor    eax,eax
1004e142:	cmp    DWORD PTR [ebp-0x34],eax
1004e145:	mov    DWORD PTR [ebp-0x4c],ebx
1004e148:	jl     0x1004e937
1004e14e:	mov    cl,dl
1004e150:	sub    cl,0x20
1004e153:	cmp    cl,0x58
1004e156:	ja     0x1004e165
1004e158:	movsx  eax,dl
1004e15b:	movzx  eax,BYTE PTR [eax+0x10067458]
1004e162:	and    eax,0xf
1004e165:	mov    ecx,DWORD PTR [ebp-0x48]
1004e168:	imul   eax,eax,0x9
1004e16b:	movzx  eax,BYTE PTR [eax+ecx*1+0x10067478]
1004e173:	push   0x8
1004e175:	shr    eax,0x4
1004e178:	pop    esi
1004e179:	cmp    eax,esi
1004e17b:	mov    DWORD PTR [ebp-0x48],eax
1004e17e:	je     0x1004e920
1004e184:	push   0x7
1004e186:	pop    ecx
1004e187:	cmp    eax,ecx
1004e189:	ja     0x1004e90a
1004e18f:	jmp    DWORD PTR [eax*4+0x1004e970]
1004e196:	xor    eax,eax
1004e198:	or     DWORD PTR [ebp-0x20],0xffffffff
1004e19c:	mov    DWORD PTR [ebp-0x74],eax
1004e19f:	mov    DWORD PTR [ebp-0x68],eax
1004e1a2:	mov    DWORD PTR [ebp-0x40],eax
1004e1a5:	mov    DWORD PTR [ebp-0x3c],eax
1004e1a8:	mov    DWORD PTR [ebp-0x18],eax
1004e1ab:	mov    DWORD PTR [ebp-0x44],eax
1004e1ae:	jmp    0x1004e90a
1004e1b3:	movsx  eax,dl
1004e1b6:	sub    eax,0x20
1004e1b9:	je     0x1004e1f7
1004e1bb:	sub    eax,0x3
1004e1be:	je     0x1004e1eb
1004e1c0:	sub    eax,esi
1004e1c2:	je     0x1004e1e2
1004e1c4:	dec    eax
1004e1c5:	dec    eax
1004e1c6:	je     0x1004e1d9
1004e1c8:	sub    eax,0x3
1004e1cb:	jne    0x1004e90a
1004e1d1:	or     DWORD PTR [ebp-0x18],esi
1004e1d4:	jmp    0x1004e90a
1004e1d9:	or     DWORD PTR [ebp-0x18],0x4
1004e1dd:	jmp    0x1004e90a
1004e1e2:	or     DWORD PTR [ebp-0x18],0x1
1004e1e6:	jmp    0x1004e90a
1004e1eb:	or     DWORD PTR [ebp-0x18],0x80
1004e1f2:	jmp    0x1004e90a
1004e1f7:	or     DWORD PTR [ebp-0x18],0x2
1004e1fb:	jmp    0x1004e90a
1004e200:	cmp    dl,0x2a
1004e203:	jne    0x1004e225
1004e205:	add    edi,0x4
1004e208:	mov    DWORD PTR [ebp-0x2c],edi
1004e20b:	mov    edi,DWORD PTR [edi-0x4]
1004e20e:	test   edi,edi
1004e210:	mov    DWORD PTR [ebp-0x40],edi
1004e213:	jge    0x1004e90a
1004e219:	or     DWORD PTR [ebp-0x18],0x4
1004e21d:	neg    DWORD PTR [ebp-0x40]
1004e220:	jmp    0x1004e90a
1004e225:	mov    eax,DWORD PTR [ebp-0x40]
1004e228:	imul   eax,eax,0xa
1004e22b:	movsx  ecx,dl
1004e22e:	lea    eax,[eax+ecx*1-0x30]
1004e232:	mov    DWORD PTR [ebp-0x40],eax
1004e235:	jmp    0x1004e90a
1004e23a:	and    DWORD PTR [ebp-0x20],0x0
1004e23e:	jmp    0x1004e90a
1004e243:	cmp    dl,0x2a
1004e246:	jne    0x1004e265
1004e248:	add    edi,0x4
1004e24b:	mov    DWORD PTR [ebp-0x2c],edi
1004e24e:	mov    edi,DWORD PTR [edi-0x4]
1004e251:	test   edi,edi
1004e253:	mov    DWORD PTR [ebp-0x20],edi
1004e256:	jge    0x1004e90a
1004e25c:	or     DWORD PTR [ebp-0x20],0xffffffff
1004e260:	jmp    0x1004e90a
1004e265:	mov    eax,DWORD PTR [ebp-0x20]
1004e268:	imul   eax,eax,0xa
1004e26b:	movsx  ecx,dl
1004e26e:	lea    eax,[eax+ecx*1-0x30]
1004e272:	mov    DWORD PTR [ebp-0x20],eax
1004e275:	jmp    0x1004e90a
1004e27a:	cmp    dl,0x49
1004e27d:	je     0x1004e2c5
1004e27f:	cmp    dl,0x68
1004e282:	je     0x1004e2bc
1004e284:	cmp    dl,0x6c
1004e287:	je     0x1004e29e
1004e289:	cmp    dl,0x77
1004e28c:	jne    0x1004e90a
1004e292:	or     DWORD PTR [ebp-0x18],0x800
1004e299:	jmp    0x1004e90a
1004e29e:	cmp    BYTE PTR [ebx],0x6c
1004e2a1:	jne    0x1004e2b3
1004e2a3:	inc    ebx
1004e2a4:	or     DWORD PTR [ebp-0x18],0x1000
1004e2ab:	mov    DWORD PTR [ebp-0x4c],ebx
1004e2ae:	jmp    0x1004e90a
1004e2b3:	or     DWORD PTR [ebp-0x18],0x10
1004e2b7:	jmp    0x1004e90a
1004e2bc:	or     DWORD PTR [ebp-0x18],0x20
1004e2c0:	jmp    0x1004e90a
1004e2c5:	mov    al,BYTE PTR [ebx]
1004e2c7:	cmp    al,0x36
1004e2c9:	jne    0x1004e2e2
1004e2cb:	cmp    BYTE PTR [ebx+0x1],0x34
1004e2cf:	jne    0x1004e2e2
1004e2d1:	inc    ebx
1004e2d2:	inc    ebx
1004e2d3:	or     DWORD PTR [ebp-0x18],0x8000
1004e2da:	mov    DWORD PTR [ebp-0x4c],ebx
1004e2dd:	jmp    0x1004e90a
1004e2e2:	cmp    al,0x33
1004e2e4:	jne    0x1004e2fd
1004e2e6:	cmp    BYTE PTR [ebx+0x1],0x32
1004e2ea:	jne    0x1004e2fd
1004e2ec:	inc    ebx
1004e2ed:	inc    ebx
1004e2ee:	and    DWORD PTR [ebp-0x18],0xffff7fff
1004e2f5:	mov    DWORD PTR [ebp-0x4c],ebx
1004e2f8:	jmp    0x1004e90a
1004e2fd:	cmp    al,0x64
1004e2ff:	je     0x1004e90a
1004e305:	cmp    al,0x69
1004e307:	je     0x1004e90a
1004e30d:	cmp    al,0x6f
1004e30f:	je     0x1004e90a
1004e315:	cmp    al,0x75
1004e317:	je     0x1004e90a
1004e31d:	cmp    al,0x78
1004e31f:	je     0x1004e90a
1004e325:	cmp    al,0x58
1004e327:	je     0x1004e90a
1004e32d:	and    DWORD PTR [ebp-0x48],0x0
1004e331:	and    DWORD PTR [ebp-0x44],0x0
1004e335:	lea    eax,[ebp-0x5c]
1004e338:	push   eax
1004e339:	movzx  eax,dl
1004e33c:	push   eax
1004e33d:	call   0x1004b3af
1004e342:	pop    ecx
1004e343:	test   eax,eax
1004e345:	mov    al,BYTE PTR [ebp-0x19]
1004e348:	pop    ecx
1004e349:	je     0x1004e364
1004e34b:	mov    ecx,DWORD PTR [ebp-0x30]
1004e34e:	lea    esi,[ebp-0x34]
1004e351:	call   0x1004df3f
1004e356:	mov    al,BYTE PTR [ebx]
1004e358:	inc    ebx
1004e359:	test   al,al
1004e35b:	mov    DWORD PTR [ebp-0x4c],ebx
1004e35e:	je     0x1004e920
1004e364:	mov    ecx,DWORD PTR [ebp-0x30]
1004e367:	lea    esi,[ebp-0x34]
1004e36a:	call   0x1004df3f
1004e36f:	jmp    0x1004e90a
1004e374:	movsx  eax,dl
1004e377:	cmp    eax,0x64
1004e37a:	jg     0x1004e4f4
1004e380:	je     0x1004e56f
1004e386:	cmp    eax,0x53
1004e389:	jg     0x1004e43b
1004e38f:	je     0x1004e3ec
1004e391:	sub    eax,0x41
1004e394:	je     0x1004e3a6
1004e396:	dec    eax
1004e397:	dec    eax
1004e398:	je     0x1004e3db
1004e39a:	dec    eax
1004e39b:	dec    eax
1004e39c:	je     0x1004e3a6
1004e39e:	dec    eax
1004e39f:	dec    eax
1004e3a0:	jne    0x1004e7f2
1004e3a6:	add    dl,0x20
1004e3a9:	mov    DWORD PTR [ebp-0x74],0x1
1004e3b0:	mov    BYTE PTR [ebp-0x19],dl
1004e3b3:	or     DWORD PTR [ebp-0x18],0x40
1004e3b7:	cmp    DWORD PTR [ebp-0x20],0x0
1004e3bb:	lea    ebx,[ebp-0x14]
1004e3be:	mov    eax,0x200
1004e3c3:	mov    DWORD PTR [ebp-0x24],ebx
1004e3c6:	mov    DWORD PTR [ebp-0x6c],eax
1004e3c9:	jge    0x1004e593
1004e3cf:	mov    DWORD PTR [ebp-0x20],0x6
1004e3d6:	jmp    0x1004e5e2
1004e3db:	test   WORD PTR [ebp-0x18],0x830
1004e3e1:	jne    0x1004e458
1004e3e3:	or     DWORD PTR [ebp-0x18],0x800
1004e3ea:	jmp    0x1004e458
1004e3ec:	test   WORD PTR [ebp-0x18],0x830
1004e3f2:	jne    0x1004e3fb
1004e3f4:	or     DWORD PTR [ebp-0x18],0x800
1004e3fb:	mov    ecx,DWORD PTR [ebp-0x20]
1004e3fe:	cmp    ecx,0xffffffff
1004e401:	jne    0x1004e408
1004e403:	mov    ecx,0x7fffffff
1004e408:	add    edi,0x4
1004e40b:	test   WORD PTR [ebp-0x18],0x810
1004e411:	mov    DWORD PTR [ebp-0x2c],edi
1004e414:	mov    edi,DWORD PTR [edi-0x4]
1004e417:	mov    DWORD PTR [ebp-0x24],edi
1004e41a:	je     0x1004e7d0
1004e420:	test   edi,edi
1004e422:	jne    0x1004e42c
1004e424:	mov    eax,ds:0x1007ed2c
1004e429:	mov    DWORD PTR [ebp-0x24],eax
1004e42c:	mov    eax,DWORD PTR [ebp-0x24]
1004e42f:	mov    DWORD PTR [ebp-0x44],0x1
1004e436:	jmp    0x1004e7c5
1004e43b:	sub    eax,0x58
1004e43e:	je     0x1004e678
1004e444:	dec    eax
1004e445:	dec    eax
1004e446:	je     0x1004e4a5
1004e448:	sub    eax,ecx
1004e44a:	je     0x1004e3b3
1004e450:	dec    eax
1004e451:	dec    eax
1004e452:	jne    0x1004e7f2
1004e458:	add    edi,0x4
1004e45b:	test   WORD PTR [ebp-0x18],0x810
1004e461:	mov    DWORD PTR [ebp-0x2c],edi
1004e464:	je     0x1004e48d
1004e466:	movzx  eax,WORD PTR [edi-0x4]
1004e46a:	push   eax
1004e46b:	push   0x200
1004e470:	lea    eax,[ebp-0x14]
1004e473:	push   eax
1004e474:	lea    eax,[ebp-0x28]
1004e477:	push   eax
1004e478:	call   0x100502d8
1004e47d:	add    esp,0x10
1004e480:	test   eax,eax
1004e482:	je     0x1004e49a
1004e484:	mov    DWORD PTR [ebp-0x68],0x1
1004e48b:	jmp    0x1004e49a
1004e48d:	mov    al,BYTE PTR [edi-0x4]
1004e490:	mov    BYTE PTR [ebp-0x14],al
1004e493:	mov    DWORD PTR [ebp-0x28],0x1
1004e49a:	lea    eax,[ebp-0x14]
1004e49d:	mov    DWORD PTR [ebp-0x24],eax
1004e4a0:	jmp    0x1004e7f2
1004e4a5:	mov    eax,DWORD PTR [edi]
1004e4a7:	add    edi,0x4
1004e4aa:	test   eax,eax
1004e4ac:	mov    DWORD PTR [ebp-0x2c],edi
1004e4af:	je     0x1004e4e0
1004e4b1:	mov    ecx,DWORD PTR [eax+0x4]
1004e4b4:	test   ecx,ecx
1004e4b6:	je     0x1004e4e0
1004e4b8:	test   WORD PTR [ebp-0x18],0x800
1004e4be:	movsx  eax,WORD PTR [eax]
1004e4c1:	mov    DWORD PTR [ebp-0x24],ecx
1004e4c4:	je     0x1004e4d7
1004e4c6:	cdq    
1004e4c7:	sub    eax,edx
1004e4c9:	sar    eax,1
1004e4cb:	mov    DWORD PTR [ebp-0x44],0x1
1004e4d2:	jmp    0x1004e7ef
1004e4d7:	and    DWORD PTR [ebp-0x44],0x0
1004e4db:	jmp    0x1004e7ef
1004e4e0:	mov    eax,ds:0x1007ed28
1004e4e5:	mov    DWORD PTR [ebp-0x24],eax
1004e4e8:	push   eax
1004e4e9:	call   0x10043100
1004e4ee:	pop    ecx
1004e4ef:	jmp    0x1004e7ef
1004e4f4:	cmp    eax,0x70
1004e4f7:	jg     0x1004e67d
1004e4fd:	je     0x1004e675
1004e503:	cmp    eax,0x65
1004e506:	jl     0x1004e7f2
1004e50c:	cmp    eax,0x67
1004e50f:	jle    0x1004e3b3
1004e515:	cmp    eax,0x69
1004e518:	je     0x1004e56f
1004e51a:	cmp    eax,0x6e
1004e51d:	je     0x1004e53a
1004e51f:	cmp    eax,0x6f
1004e522:	jne    0x1004e7f2
1004e528:	test   BYTE PTR [ebp-0x18],0x80
1004e52c:	mov    DWORD PTR [ebp-0x28],esi
1004e52f:	je     0x1004e57a
1004e531:	or     DWORD PTR [ebp-0x18],0x200
1004e538:	jmp    0x1004e57a
1004e53a:	mov    esi,DWORD PTR [edi]
1004e53c:	add    edi,0x4
1004e53f:	mov    DWORD PTR [ebp-0x2c],edi
1004e542:	call   0x1004ddff
1004e547:	test   eax,eax
1004e549:	je     0x1004e920
1004e54f:	test   BYTE PTR [ebp-0x18],0x20
1004e553:	je     0x1004e55e
1004e555:	mov    ax,WORD PTR [ebp-0x34]
1004e559:	mov    WORD PTR [esi],ax
1004e55c:	jmp    0x1004e563
1004e55e:	mov    eax,DWORD PTR [ebp-0x34]
1004e561:	mov    DWORD PTR [esi],eax
1004e563:	mov    DWORD PTR [ebp-0x68],0x1
1004e56a:	jmp    0x1004e8f7
1004e56f:	or     DWORD PTR [ebp-0x18],0x40
1004e573:	mov    DWORD PTR [ebp-0x28],0xa
1004e57a:	mov    ecx,DWORD PTR [ebp-0x18]
1004e57d:	test   cx,cx
1004e580:	jns    0x1004e6c7
1004e586:	add    edi,esi
1004e588:	mov    eax,DWORD PTR [edi-0x8]
1004e58b:	mov    edx,DWORD PTR [edi-0x4]
1004e58e:	jmp    0x1004e6fc
1004e593:	jne    0x1004e5a3
1004e595:	cmp    dl,0x67
1004e598:	jne    0x1004e5e2
1004e59a:	mov    DWORD PTR [ebp-0x20],0x1
1004e5a1:	jmp    0x1004e5e2
1004e5a3:	cmp    DWORD PTR [ebp-0x20],eax
1004e5a6:	jle    0x1004e5ab
1004e5a8:	mov    DWORD PTR [ebp-0x20],eax
1004e5ab:	cmp    DWORD PTR [ebp-0x20],0xa3
1004e5b2:	jle    0x1004e5e2
1004e5b4:	mov    esi,DWORD PTR [ebp-0x20]
1004e5b7:	add    esi,0x15d
1004e5bd:	push   esi
1004e5be:	call   0x10047512
1004e5c3:	test   eax,eax
1004e5c5:	mov    dl,BYTE PTR [ebp-0x19]
1004e5c8:	pop    ecx
1004e5c9:	mov    DWORD PTR [ebp-0x60],eax
1004e5cc:	push   0x8
1004e5ce:	je     0x1004e5da
1004e5d0:	mov    DWORD PTR [ebp-0x24],eax
1004e5d3:	mov    DWORD PTR [ebp-0x6c],esi
1004e5d6:	mov    ebx,eax
1004e5d8:	jmp    0x1004e5e1
1004e5da:	mov    DWORD PTR [ebp-0x20],0xa3
1004e5e1:	pop    esi
1004e5e2:	add    edi,esi
1004e5e4:	mov    eax,DWORD PTR [edi-0x8]
1004e5e7:	mov    DWORD PTR [ebp-0x80],eax
1004e5ea:	mov    eax,DWORD PTR [edi-0x4]
1004e5ed:	mov    DWORD PTR [ebp-0x7c],eax
1004e5f0:	lea    eax,[ebp-0x5c]
1004e5f3:	push   eax
1004e5f4:	push   DWORD PTR [ebp-0x74]
1004e5f7:	movsx  eax,dl
1004e5fa:	push   DWORD PTR [ebp-0x20]
1004e5fd:	mov    DWORD PTR [ebp-0x2c],edi
1004e600:	push   eax
1004e601:	push   DWORD PTR [ebp-0x6c]
1004e604:	lea    eax,[ebp-0x80]
1004e607:	push   ebx
1004e608:	push   eax
1004e609:	push   DWORD PTR ds:0x1007ea98
1004e60f:	call   0x10046fe2
1004e614:	pop    ecx
1004e615:	call   eax
1004e617:	mov    edi,DWORD PTR [ebp-0x18]
1004e61a:	add    esp,0x1c
1004e61d:	and    edi,0x80
1004e623:	je     0x1004e640
1004e625:	cmp    DWORD PTR [ebp-0x20],0x0
1004e629:	jne    0x1004e640
1004e62b:	lea    eax,[ebp-0x5c]
1004e62e:	push   eax
1004e62f:	push   ebx
1004e630:	push   DWORD PTR ds:0x1007eaa4
1004e636:	call   0x10046fe2
1004e63b:	pop    ecx
1004e63c:	call   eax
1004e63e:	pop    ecx
1004e63f:	pop    ecx
1004e640:	cmp    BYTE PTR [ebp-0x19],0x67
1004e644:	jne    0x1004e65f
1004e646:	test   edi,edi
1004e648:	jne    0x1004e65f
1004e64a:	lea    eax,[ebp-0x5c]
1004e64d:	push   eax
1004e64e:	push   ebx
1004e64f:	push   DWORD PTR ds:0x1007eaa0
1004e655:	call   0x10046fe2
1004e65a:	pop    ecx
1004e65b:	call   eax
1004e65d:	pop    ecx
1004e65e:	pop    ecx
1004e65f:	cmp    BYTE PTR [ebx],0x2d
1004e662:	jne    0x1004e66f
1004e664:	or     DWORD PTR [ebp-0x18],0x100
1004e66b:	inc    ebx
1004e66c:	mov    DWORD PTR [ebp-0x24],ebx
1004e66f:	push   ebx
1004e670:	jmp    0x1004e4e9
1004e675:	mov    DWORD PTR [ebp-0x20],esi
1004e678:	mov    DWORD PTR [ebp-0x64],ecx
1004e67b:	jmp    0x1004e69e
1004e67d:	sub    eax,0x73
1004e680:	je     0x1004e3fb
1004e686:	dec    eax
1004e687:	dec    eax
1004e688:	je     0x1004e573
1004e68e:	sub    eax,0x3
1004e691:	jne    0x1004e7f2
1004e697:	mov    DWORD PTR [ebp-0x64],0x27
1004e69e:	test   BYTE PTR [ebp-0x18],0x80
1004e6a2:	mov    DWORD PTR [ebp-0x28],0x10
1004e6a9:	je     0x1004e57a
1004e6af:	mov    al,BYTE PTR [ebp-0x64]
1004e6b2:	add    al,0x51
1004e6b4:	mov    BYTE PTR [ebp-0x38],0x30
1004e6b8:	mov    BYTE PTR [ebp-0x37],al
1004e6bb:	mov    DWORD PTR [ebp-0x3c],0x2
1004e6c2:	jmp    0x1004e57a
1004e6c7:	test   cx,0x1000
1004e6cc:	jne    0x1004e586
1004e6d2:	add    edi,0x4
1004e6d5:	test   cl,0x20
1004e6d8:	je     0x1004e6ef
1004e6da:	test   cl,0x40
1004e6dd:	mov    DWORD PTR [ebp-0x2c],edi
1004e6e0:	je     0x1004e6e8
1004e6e2:	movsx  eax,WORD PTR [edi-0x4]
1004e6e6:	jmp    0x1004e6ec
1004e6e8:	movzx  eax,WORD PTR [edi-0x4]
1004e6ec:	cdq    
1004e6ed:	jmp    0x1004e6ff
1004e6ef:	test   cl,0x40
1004e6f2:	mov    eax,DWORD PTR [edi-0x4]
1004e6f5:	je     0x1004e6fa
1004e6f7:	cdq    
1004e6f8:	jmp    0x1004e6fc
1004e6fa:	xor    edx,edx
1004e6fc:	mov    DWORD PTR [ebp-0x2c],edi
1004e6ff:	test   cl,0x40
1004e702:	je     0x1004e71c
1004e704:	test   edx,edx
1004e706:	jg     0x1004e71c
1004e708:	jl     0x1004e70e
1004e70a:	test   eax,eax
1004e70c:	jae    0x1004e71c
1004e70e:	neg    eax
1004e710:	adc    edx,0x0
1004e713:	neg    edx
1004e715:	or     DWORD PTR [ebp-0x18],0x100
1004e71c:	test   WORD PTR [ebp-0x18],0x9000
1004e722:	mov    ebx,edx
1004e724:	mov    edi,eax
1004e726:	jne    0x1004e72a
1004e728:	xor    ebx,ebx
1004e72a:	cmp    DWORD PTR [ebp-0x20],0x0
1004e72e:	jge    0x1004e739
1004e730:	mov    DWORD PTR [ebp-0x20],0x1
1004e737:	jmp    0x1004e74a
1004e739:	and    DWORD PTR [ebp-0x18],0xfffffff7
1004e73d:	mov    eax,0x200
1004e742:	cmp    DWORD PTR [ebp-0x20],eax
1004e745:	jle    0x1004e74a
1004e747:	mov    DWORD PTR [ebp-0x20],eax
1004e74a:	mov    eax,edi
1004e74c:	or     eax,ebx
1004e74e:	jne    0x1004e754
1004e750:	and    DWORD PTR [ebp-0x3c],0x0
1004e754:	lea    esi,[ebp+0x1eb]
1004e75a:	mov    eax,DWORD PTR [ebp-0x20]
1004e75d:	dec    DWORD PTR [ebp-0x20]
1004e760:	test   eax,eax
1004e762:	jg     0x1004e76a
1004e764:	mov    eax,edi
1004e766:	or     eax,ebx
1004e768:	je     0x1004e78e
1004e76a:	mov    eax,DWORD PTR [ebp-0x28]
1004e76d:	cdq    
1004e76e:	push   edx
1004e76f:	push   eax
1004e770:	push   ebx
1004e771:	push   edi
1004e772:	call   0x1004aae0
1004e777:	add    ecx,0x30
1004e77a:	cmp    ecx,0x39
1004e77d:	mov    DWORD PTR [ebp-0x6c],ebx
1004e780:	mov    edi,eax
1004e782:	mov    ebx,edx
1004e784:	jle    0x1004e789
1004e786:	add    ecx,DWORD PTR [ebp-0x64]
1004e789:	mov    BYTE PTR [esi],cl
1004e78b:	dec    esi
1004e78c:	jmp    0x1004e75a
1004e78e:	lea    eax,[ebp+0x1eb]
1004e794:	sub    eax,esi
1004e796:	inc    esi
1004e797:	test   WORD PTR [ebp-0x18],0x200
1004e79d:	mov    DWORD PTR [ebp-0x28],eax
1004e7a0:	mov    DWORD PTR [ebp-0x24],esi
1004e7a3:	je     0x1004e7f2
1004e7a5:	test   eax,eax
1004e7a7:	je     0x1004e7b0
1004e7a9:	mov    ecx,esi
1004e7ab:	cmp    BYTE PTR [ecx],0x30
1004e7ae:	je     0x1004e7f2
1004e7b0:	dec    DWORD PTR [ebp-0x24]
1004e7b3:	mov    ecx,DWORD PTR [ebp-0x24]
1004e7b6:	mov    BYTE PTR [ecx],0x30
1004e7b9:	inc    eax
1004e7ba:	jmp    0x1004e7ef
1004e7bc:	dec    ecx
1004e7bd:	cmp    WORD PTR [eax],0x0
1004e7c1:	je     0x1004e7c9
1004e7c3:	inc    eax
1004e7c4:	inc    eax
1004e7c5:	test   ecx,ecx
1004e7c7:	jne    0x1004e7bc
1004e7c9:	sub    eax,DWORD PTR [ebp-0x24]
1004e7cc:	sar    eax,1
1004e7ce:	jmp    0x1004e7ef
1004e7d0:	test   edi,edi
1004e7d2:	jne    0x1004e7dc
1004e7d4:	mov    eax,ds:0x1007ed28
1004e7d9:	mov    DWORD PTR [ebp-0x24],eax
1004e7dc:	mov    eax,DWORD PTR [ebp-0x24]
1004e7df:	jmp    0x1004e7e8
1004e7e1:	dec    ecx
1004e7e2:	cmp    BYTE PTR [eax],0x0
1004e7e5:	je     0x1004e7ec
1004e7e7:	inc    eax
1004e7e8:	test   ecx,ecx
1004e7ea:	jne    0x1004e7e1
1004e7ec:	sub    eax,DWORD PTR [ebp-0x24]
1004e7ef:	mov    DWORD PTR [ebp-0x28],eax
1004e7f2:	cmp    DWORD PTR [ebp-0x68],0x0
1004e7f6:	jne    0x1004e8f7
1004e7fc:	mov    eax,DWORD PTR [ebp-0x18]
1004e7ff:	test   al,0x40
1004e801:	je     0x1004e828
1004e803:	test   ax,0x100
1004e807:	je     0x1004e80f
1004e809:	mov    BYTE PTR [ebp-0x38],0x2d
1004e80d:	jmp    0x1004e821
1004e80f:	test   al,0x1
1004e811:	je     0x1004e819
1004e813:	mov    BYTE PTR [ebp-0x38],0x2b
1004e817:	jmp    0x1004e821
1004e819:	test   al,0x2
1004e81b:	je     0x1004e828
1004e81d:	mov    BYTE PTR [ebp-0x38],0x20
1004e821:	mov    DWORD PTR [ebp-0x3c],0x1
1004e828:	mov    ebx,DWORD PTR [ebp-0x40]
1004e82b:	sub    ebx,DWORD PTR [ebp-0x28]
1004e82e:	sub    ebx,DWORD PTR [ebp-0x3c]
1004e831:	test   BYTE PTR [ebp-0x18],0xc
1004e835:	jne    0x1004e848
1004e837:	push   DWORD PTR [ebp-0x30]
1004e83a:	lea    eax,[ebp-0x34]
1004e83d:	push   ebx
1004e83e:	push   0x20
1004e840:	call   0x1004df72
1004e845:	add    esp,0xc
1004e848:	push   DWORD PTR [ebp-0x3c]
1004e84b:	mov    edi,DWORD PTR [ebp-0x30]
1004e84e:	lea    eax,[ebp-0x34]
1004e851:	lea    ecx,[ebp-0x38]
1004e854:	call   0x1004df96
1004e859:	test   BYTE PTR [ebp-0x18],0x8
1004e85d:	pop    ecx
1004e85e:	je     0x1004e875
1004e860:	test   BYTE PTR [ebp-0x18],0x4
1004e864:	jne    0x1004e875
1004e866:	push   edi
1004e867:	push   ebx
1004e868:	push   0x30
1004e86a:	lea    eax,[ebp-0x34]
1004e86d:	call   0x1004df72
1004e872:	add    esp,0xc
1004e875:	cmp    DWORD PTR [ebp-0x44],0x0
1004e879:	mov    eax,DWORD PTR [ebp-0x28]
1004e87c:	je     0x1004e8cf
1004e87e:	test   eax,eax
1004e880:	jle    0x1004e8cf
1004e882:	mov    esi,DWORD PTR [ebp-0x24]
1004e885:	mov    DWORD PTR [ebp-0x6c],eax
1004e888:	movzx  eax,WORD PTR [esi]
1004e88b:	dec    DWORD PTR [ebp-0x6c]
1004e88e:	push   eax
1004e88f:	push   0x6
1004e891:	lea    eax,[ebp+0x1ec]
1004e897:	push   eax
1004e898:	lea    eax,[ebp-0x78]
1004e89b:	inc    esi
1004e89c:	push   eax
1004e89d:	inc    esi
1004e89e:	call   0x100502d8
1004e8a3:	add    esp,0x10
1004e8a6:	test   eax,eax
1004e8a8:	jne    0x1004e8c9
1004e8aa:	cmp    DWORD PTR [ebp-0x78],eax
1004e8ad:	je     0x1004e8c9
1004e8af:	push   DWORD PTR [ebp-0x78]
1004e8b2:	lea    eax,[ebp-0x34]
1004e8b5:	lea    ecx,[ebp+0x1ec]
1004e8bb:	call   0x1004df96
1004e8c0:	cmp    DWORD PTR [ebp-0x6c],0x0
1004e8c4:	pop    ecx
1004e8c5:	jne    0x1004e888
1004e8c7:	jmp    0x1004e8dc
1004e8c9:	or     DWORD PTR [ebp-0x34],0xffffffff
1004e8cd:	jmp    0x1004e8dc
1004e8cf:	mov    ecx,DWORD PTR [ebp-0x24]
1004e8d2:	push   eax
1004e8d3:	lea    eax,[ebp-0x34]
1004e8d6:	call   0x1004df96
1004e8db:	pop    ecx
1004e8dc:	cmp    DWORD PTR [ebp-0x34],0x0
1004e8e0:	jl     0x1004e8f7
1004e8e2:	test   BYTE PTR [ebp-0x18],0x4
1004e8e6:	je     0x1004e8f7
1004e8e8:	push   edi
1004e8e9:	push   ebx
1004e8ea:	push   0x20
1004e8ec:	lea    eax,[ebp-0x34]
1004e8ef:	call   0x1004df72
1004e8f4:	add    esp,0xc
1004e8f7:	cmp    DWORD PTR [ebp-0x60],0x0
1004e8fb:	je     0x1004e90a
1004e8fd:	push   DWORD PTR [ebp-0x60]
1004e900:	call   0x100435f8
1004e905:	and    DWORD PTR [ebp-0x60],0x0
1004e909:	pop    ecx
1004e90a:	mov    ebx,DWORD PTR [ebp-0x4c]
1004e90d:	mov    al,BYTE PTR [ebx]
1004e90f:	test   al,al
1004e911:	mov    BYTE PTR [ebp-0x19],al
1004e914:	je     0x1004e937
1004e916:	mov    edi,DWORD PTR [ebp-0x2c]
1004e919:	mov    dl,al
1004e91b:	jmp    0x1004e13f
1004e920:	call   0x10046c45
1004e925:	mov    DWORD PTR [eax],0x16
1004e92b:	xor    eax,eax
1004e92d:	push   eax
1004e92e:	push   eax
1004e92f:	push   eax
1004e930:	push   eax
1004e931:	push   eax
1004e932:	jmp    0x1004e050
1004e937:	xor    esi,esi
1004e939:	cmp    DWORD PTR [ebp-0x48],esi
1004e93c:	je     0x1004e948
1004e93e:	cmp    DWORD PTR [ebp-0x48],0x7
1004e942:	jne    0x1004e040
1004e948:	cmp    BYTE PTR [ebp-0x50],0x0
1004e94c:	je     0x1004e955
1004e94e:	mov    eax,DWORD PTR [ebp-0x54]
1004e951:	and    DWORD PTR [eax+0x70],0xfffffffd
1004e955:	mov    eax,DWORD PTR [ebp-0x34]
1004e958:	mov    ecx,DWORD PTR [ebp+0x1f4]
1004e95e:	pop    edi
1004e95f:	pop    esi
1004e960:	xor    ecx,ebp
1004e962:	pop    ebx
1004e963:	call   0x10042f87
1004e968:	add    ebp,0x1f8
1004e96e:	leave  
1004e96f:	ret    
1004e970:	xor    ebx,esp
1004e972:	add    al,0x10
1004e974:	xchg   esi,eax
1004e975:	loope  0x1004e97b
1004e977:	adc    BYTE PTR [ebx+0x1004e1],dh
1004e97d:	loop   0x1004e983
1004e97f:	adc    BYTE PTR [edx],bh
1004e981:	loop   0x1004e987
1004e983:	adc    BYTE PTR [ebx-0x1e],al
1004e986:	add    al,0x10
1004e988:	jp     0x1004e96c
1004e98a:	add    al,0x10
1004e98c:	je     0x1004e971
1004e98e:	add    al,0x10
1004e990:	push   ebp
1004e991:	mov    ebp,esp
1004e993:	sub    esp,0x20
1004e996:	push   ebx
1004e997:	push   esi
1004e998:	push   edi
1004e999:	call   0x10046fd9
1004e99e:	xor    ebx,ebx
1004e9a0:	cmp    DWORD PTR ds:0x10080474,ebx
1004e9a6:	mov    DWORD PTR [ebp-0x10],eax
1004e9a9:	mov    DWORD PTR [ebp-0x4],ebx
1004e9ac:	mov    DWORD PTR [ebp-0x8],ebx
1004e9af:	mov    DWORD PTR [ebp-0xc],ebx
1004e9b2:	jne    0x1004ea65
1004e9b8:	push   0x10067538
1004e9bd:	call   DWORD PTR ds:0x10066220
1004e9c3:	mov    edi,eax
1004e9c5:	cmp    edi,ebx
1004e9c7:	jne    0x1004e9d0
1004e9c9:	xor    eax,eax
1004e9cb:	jmp    0x1004eb29
1004e9d0:	mov    esi,DWORD PTR ds:0x1006612c
1004e9d6:	push   0x1006752c
1004e9db:	push   edi
1004e9dc:	call   esi
1004e9de:	cmp    eax,ebx
1004e9e0:	je     0x1004e9c9
1004e9e2:	push   eax
1004e9e3:	call   0x10046f76
1004e9e8:	mov    DWORD PTR [esp],0x1006751c
1004e9ef:	push   edi
1004e9f0:	mov    ds:0x10080474,eax
1004e9f5:	call   esi
1004e9f7:	push   eax
1004e9f8:	call   0x10046f76
1004e9fd:	mov    DWORD PTR [esp],0x10067508
1004ea04:	push   edi
1004ea05:	mov    ds:0x10080478,eax
1004ea0a:	call   esi
1004ea0c:	push   eax
1004ea0d:	call   0x10046f76
1004ea12:	mov    ds:0x1008047c,eax
1004ea17:	lea    eax,[ebp-0x8]
1004ea1a:	push   eax
1004ea1b:	call   0x10047731
1004ea20:	test   eax,eax
1004ea22:	pop    ecx
1004ea23:	pop    ecx
1004ea24:	je     0x1004ea33
1004ea26:	push   ebx
1004ea27:	push   ebx
1004ea28:	push   ebx
1004ea29:	push   ebx
1004ea2a:	push   ebx
1004ea2b:	call   0x10043380
1004ea30:	add    esp,0x14
1004ea33:	cmp    DWORD PTR [ebp-0x8],0x2
1004ea37:	jne    0x1004ea65
1004ea39:	push   0x100674ec
1004ea3e:	push   edi
1004ea3f:	call   esi
1004ea41:	push   eax
1004ea42:	call   0x10046f76
1004ea47:	cmp    eax,ebx
1004ea49:	pop    ecx
1004ea4a:	mov    ds:0x10080484,eax
1004ea4f:	je     0x1004ea65
1004ea51:	push   0x100674d4
1004ea56:	push   edi
1004ea57:	call   esi
1004ea59:	push   eax
1004ea5a:	call   0x10046f76
1004ea5f:	pop    ecx
1004ea60:	mov    ds:0x10080480,eax
1004ea65:	mov    eax,ds:0x10080480
1004ea6a:	mov    esi,DWORD PTR [ebp-0x10]
1004ea6d:	cmp    eax,esi
1004ea6f:	je     0x1004eade
1004ea71:	cmp    DWORD PTR ds:0x10080484,esi
1004ea77:	je     0x1004eade
1004ea79:	push   eax
1004ea7a:	call   0x10046fe2
1004ea7f:	pop    ecx
1004ea80:	call   eax
1004ea82:	cmp    eax,ebx
1004ea84:	je     0x1004eaab
1004ea86:	lea    ecx,[ebp-0x14]
1004ea89:	push   ecx
1004ea8a:	push   0xc
1004ea8c:	lea    ecx,[ebp-0x20]
1004ea8f:	push   ecx
1004ea90:	push   0x1
1004ea92:	push   eax
1004ea93:	push   DWORD PTR ds:0x10080484
1004ea99:	call   0x10046fe2
1004ea9e:	pop    ecx
1004ea9f:	call   eax
1004eaa1:	test   eax,eax
1004eaa3:	je     0x1004eaab
1004eaa5:	test   BYTE PTR [ebp-0x18],0x1
1004eaa9:	jne    0x1004eade
1004eaab:	lea    eax,[ebp-0xc]
1004eaae:	push   eax
1004eaaf:	call   0x10047768
1004eab4:	test   eax,eax
1004eab6:	pop    ecx
1004eab7:	je     0x1004eac6
1004eab9:	push   ebx
1004eaba:	push   ebx
1004eabb:	push   ebx
1004eabc:	push   ebx
1004eabd:	push   ebx
1004eabe:	call   0x10043380
1004eac3:	add    esp,0x14
1004eac6:	cmp    DWORD PTR [ebp-0xc],0x4
1004eaca:	jb     0x1004ead5
1004eacc:	or     DWORD PTR [ebp+0x10],0x200000
1004ead3:	jmp    0x1004eb0f
1004ead5:	or     DWORD PTR [ebp+0x10],0x40000
1004eadc:	jmp    0x1004eb0f
1004eade:	mov    eax,ds:0x10080478
1004eae3:	cmp    eax,esi
1004eae5:	je     0x1004eb0f
1004eae7:	push   eax
1004eae8:	call   0x10046fe2
1004eaed:	pop    ecx
1004eaee:	call   eax
1004eaf0:	cmp    eax,ebx
1004eaf2:	mov    DWORD PTR [ebp-0x4],eax
1004eaf5:	je     0x1004eb0f
1004eaf7:	mov    eax,ds:0x1008047c
1004eafc:	cmp    eax,esi
1004eafe:	je     0x1004eb0f
1004eb00:	push   DWORD PTR [ebp-0x4]
1004eb03:	push   eax
1004eb04:	call   0x10046fe2
1004eb09:	pop    ecx
1004eb0a:	call   eax
1004eb0c:	mov    DWORD PTR [ebp-0x4],eax
1004eb0f:	push   DWORD PTR [ebp+0x10]
1004eb12:	push   DWORD PTR [ebp+0xc]
1004eb15:	push   DWORD PTR [ebp+0x8]
1004eb18:	push   DWORD PTR [ebp-0x4]
1004eb1b:	push   DWORD PTR ds:0x10080474
1004eb21:	call   0x10046fe2
1004eb26:	pop    ecx
1004eb27:	call   eax
1004eb29:	pop    edi
1004eb2a:	pop    esi
1004eb2b:	pop    ebx
1004eb2c:	leave  
1004eb2d:	ret    
1004eb2e:	mov    eax,DWORD PTR [esp+0x4]
1004eb32:	push   ebx
1004eb33:	xor    ebx,ebx
1004eb35:	cmp    eax,ebx
1004eb37:	push   esi
1004eb38:	push   edi
1004eb39:	je     0x1004eb43
1004eb3b:	mov    edi,DWORD PTR [esp+0x14]
1004eb3f:	cmp    edi,ebx
1004eb41:	ja     0x1004eb5e
1004eb43:	call   0x10046c45
1004eb48:	push   0x16
1004eb4a:	pop    esi
1004eb4b:	mov    DWORD PTR [eax],esi
1004eb4d:	push   ebx
1004eb4e:	push   ebx
1004eb4f:	push   ebx
1004eb50:	push   ebx
1004eb51:	push   ebx
1004eb52:	call   0x1004347c
1004eb57:	add    esp,0x14
1004eb5a:	mov    eax,esi
1004eb5c:	jmp    0x1004eb9b
1004eb5e:	mov    esi,DWORD PTR [esp+0x18]
1004eb62:	cmp    esi,ebx
1004eb64:	jne    0x1004eb6a
1004eb66:	mov    BYTE PTR [eax],bl
1004eb68:	jmp    0x1004eb43
1004eb6a:	mov    edx,eax
1004eb6c:	cmp    BYTE PTR [edx],bl
1004eb6e:	je     0x1004eb74
1004eb70:	inc    edx
1004eb71:	dec    edi
1004eb72:	jne    0x1004eb6c
1004eb74:	cmp    edi,ebx
1004eb76:	je     0x1004eb66
1004eb78:	mov    cl,BYTE PTR [esi]
1004eb7a:	mov    BYTE PTR [edx],cl
1004eb7c:	inc    edx
1004eb7d:	inc    esi
1004eb7e:	cmp    cl,bl
1004eb80:	je     0x1004eb85
1004eb82:	dec    edi
1004eb83:	jne    0x1004eb78
1004eb85:	cmp    edi,ebx
1004eb87:	jne    0x1004eb99
1004eb89:	mov    BYTE PTR [eax],bl
1004eb8b:	call   0x10046c45
1004eb90:	push   0x22
1004eb92:	pop    ecx
1004eb93:	mov    DWORD PTR [eax],ecx
1004eb95:	mov    esi,ecx
1004eb97:	jmp    0x1004eb4d
1004eb99:	xor    eax,eax
1004eb9b:	pop    edi
1004eb9c:	pop    esi
1004eb9d:	pop    ebx
1004eb9e:	ret    
1004eb9f:	push   ebp
1004eba0:	mov    ebp,esp
1004eba2:	push   ebx
1004eba3:	push   esi
1004eba4:	mov    esi,DWORD PTR [ebp+0x8]
1004eba7:	xor    ebx,ebx
1004eba9:	cmp    DWORD PTR [ebp+0x14],ebx
1004ebac:	push   edi
1004ebad:	jne    0x1004ebbf
1004ebaf:	cmp    esi,ebx
1004ebb1:	jne    0x1004ebc3
1004ebb3:	cmp    DWORD PTR [ebp+0xc],ebx
1004ebb6:	jne    0x1004ebca
1004ebb8:	xor    eax,eax
1004ebba:	pop    edi
1004ebbb:	pop    esi
1004ebbc:	pop    ebx
1004ebbd:	pop    ebp
1004ebbe:	ret    
1004ebbf:	cmp    esi,ebx
1004ebc1:	je     0x1004ebca
1004ebc3:	mov    edi,DWORD PTR [ebp+0xc]
1004ebc6:	cmp    edi,ebx
1004ebc8:	ja     0x1004ebe5
1004ebca:	call   0x10046c45
1004ebcf:	push   0x16
1004ebd1:	pop    esi
1004ebd2:	mov    DWORD PTR [eax],esi
1004ebd4:	push   ebx
1004ebd5:	push   ebx
1004ebd6:	push   ebx
1004ebd7:	push   ebx
1004ebd8:	push   ebx
1004ebd9:	call   0x1004347c
1004ebde:	add    esp,0x14
1004ebe1:	mov    eax,esi
1004ebe3:	jmp    0x1004ebba
1004ebe5:	cmp    DWORD PTR [ebp+0x14],ebx
1004ebe8:	jne    0x1004ebee
1004ebea:	mov    BYTE PTR [esi],bl
1004ebec:	jmp    0x1004ebb8
1004ebee:	mov    edx,DWORD PTR [ebp+0x10]
1004ebf1:	cmp    edx,ebx
1004ebf3:	jne    0x1004ebf9
1004ebf5:	mov    BYTE PTR [esi],bl
1004ebf7:	jmp    0x1004ebca
1004ebf9:	cmp    DWORD PTR [ebp+0x14],0xffffffff
1004ebfd:	mov    eax,esi
1004ebff:	jne    0x1004ec10
1004ec01:	mov    cl,BYTE PTR [edx]
1004ec03:	mov    BYTE PTR [eax],cl
1004ec05:	inc    eax
1004ec06:	inc    edx
1004ec07:	cmp    cl,bl
1004ec09:	je     0x1004ec29
1004ec0b:	dec    edi
1004ec0c:	jne    0x1004ec01
1004ec0e:	jmp    0x1004ec29
1004ec10:	mov    cl,BYTE PTR [edx]
1004ec12:	mov    BYTE PTR [eax],cl
1004ec14:	inc    eax
1004ec15:	inc    edx
1004ec16:	cmp    cl,bl
1004ec18:	je     0x1004ec22
1004ec1a:	dec    edi
1004ec1b:	je     0x1004ec22
1004ec1d:	dec    DWORD PTR [ebp+0x14]
1004ec20:	jne    0x1004ec10
1004ec22:	cmp    DWORD PTR [ebp+0x14],ebx
1004ec25:	jne    0x1004ec29
1004ec27:	mov    BYTE PTR [eax],bl
1004ec29:	cmp    edi,ebx
1004ec2b:	jne    0x1004ebb8
1004ec2d:	cmp    DWORD PTR [ebp+0x14],0xffffffff
1004ec31:	jne    0x1004ec42
1004ec33:	mov    eax,DWORD PTR [ebp+0xc]
1004ec36:	push   0x50
1004ec38:	mov    BYTE PTR [esi+eax*1-0x1],bl
1004ec3c:	pop    eax
1004ec3d:	jmp    0x1004ebba
1004ec42:	mov    BYTE PTR [esi],bl
1004ec44:	call   0x10046c45
1004ec49:	push   0x22
1004ec4b:	pop    ecx
1004ec4c:	mov    DWORD PTR [eax],ecx
1004ec4e:	mov    esi,ecx
1004ec50:	jmp    0x1004ebd4
1004ec52:	mov    ecx,DWORD PTR [esp+0x4]
1004ec56:	push   esi
1004ec57:	xor    esi,esi
1004ec59:	cmp    ecx,esi
1004ec5b:	jl     0x1004ec7b
1004ec5d:	cmp    ecx,0x2
1004ec60:	jle    0x1004ec6e
1004ec62:	cmp    ecx,0x3
1004ec65:	jne    0x1004ec7b
1004ec67:	mov    eax,ds:0x1007faa0
1004ec6c:	pop    esi
1004ec6d:	ret    
1004ec6e:	mov    eax,ds:0x1007faa0
1004ec73:	mov    DWORD PTR ds:0x1007faa0,ecx
1004ec79:	pop    esi
1004ec7a:	ret    
1004ec7b:	call   0x10046c45
1004ec80:	push   esi
1004ec81:	push   esi
1004ec82:	push   esi
1004ec83:	push   esi
1004ec84:	push   esi
1004ec85:	mov    DWORD PTR [eax],0x16
1004ec8b:	call   0x1004347c
1004ec90:	add    esp,0x14
1004ec93:	or     eax,0xffffffff
1004ec96:	pop    esi
1004ec97:	ret    
1004ec98:	push   0xc
1004ec9a:	push   0x10074990
1004ec9f:	call   0x10046d84
1004eca4:	and    DWORD PTR [ebp-0x4],0x0
1004eca8:	movapd xmm0,xmm1
1004ecac:	mov    DWORD PTR [ebp-0x1c],0x1
1004ecb3:	jmp    0x1004ecd8
1004ecb5:	mov    eax,DWORD PTR [ebp-0x14]
1004ecb8:	mov    eax,DWORD PTR [eax]
1004ecba:	mov    eax,DWORD PTR [eax]
1004ecbc:	cmp    eax,0xc0000005
1004ecc1:	je     0x1004eccd
1004ecc3:	cmp    eax,0xc000001d
1004ecc8:	je     0x1004eccd
1004ecca:	xor    eax,eax
1004eccc:	ret    
1004eccd:	xor    eax,eax
1004eccf:	inc    eax
1004ecd0:	ret    
1004ecd1:	mov    esp,DWORD PTR [ebp-0x18]
1004ecd4:	and    DWORD PTR [ebp-0x1c],0x0
1004ecd8:	mov    DWORD PTR [ebp-0x4],0xfffffffe
1004ecdf:	mov    eax,DWORD PTR [ebp-0x1c]
1004ece2:	call   0x10046dc9
1004ece7:	ret    
1004ece8:	push   ebp
1004ece9:	mov    ebp,esp
1004eceb:	sub    esp,0x18
1004ecee:	xor    eax,eax
1004ecf0:	push   ebx
1004ecf1:	mov    DWORD PTR [ebp-0x4],eax
1004ecf4:	mov    DWORD PTR [ebp-0xc],eax
1004ecf7:	mov    DWORD PTR [ebp-0x8],eax
1004ecfa:	push   ebx
1004ecfb:	pushf  
1004ecfc:	pop    eax
1004ecfd:	mov    ecx,eax
1004ecff:	xor    eax,0x200000
1004ed04:	push   eax
1004ed05:	popf   
1004ed06:	pushf  
1004ed07:	pop    edx
1004ed08:	sub    edx,ecx
1004ed0a:	je     0x1004ed2b
1004ed0c:	push   ecx
1004ed0d:	popf   
1004ed0e:	xor    eax,eax
1004ed10:	cpuid  
1004ed12:	mov    DWORD PTR [ebp-0xc],eax
1004ed15:	mov    DWORD PTR [ebp-0x18],ebx
1004ed18:	mov    DWORD PTR [ebp-0x14],edx
1004ed1b:	mov    DWORD PTR [ebp-0x10],ecx
1004ed1e:	mov    eax,0x1
1004ed23:	cpuid  
1004ed25:	mov    DWORD PTR [ebp-0x4],edx
1004ed28:	mov    DWORD PTR [ebp-0x8],eax
1004ed2b:	pop    ebx
1004ed2c:	test   DWORD PTR [ebp-0x4],0x4000000
1004ed33:	je     0x1004ed43
1004ed35:	call   0x1004ec98
1004ed3a:	test   eax,eax
1004ed3c:	je     0x1004ed43
1004ed3e:	xor    eax,eax
1004ed40:	inc    eax
1004ed41:	jmp    0x1004ed45
1004ed43:	xor    eax,eax
1004ed45:	pop    ebx
1004ed46:	leave  
1004ed47:	ret    
1004ed48:	call   0x1004ece8
1004ed4d:	mov    ds:0x10082584,eax
1004ed52:	xor    eax,eax
1004ed54:	ret    
1004ed55:	push   ebp
1004ed56:	mov    ebp,esp
1004ed58:	push   ecx
1004ed59:	push   ecx
1004ed5a:	mov    eax,ds:0x1007e030
1004ed5f:	xor    eax,ebp
1004ed61:	mov    DWORD PTR [ebp-0x4],eax
1004ed64:	mov    eax,ds:0x10080488
1004ed69:	push   ebx
1004ed6a:	push   esi
1004ed6b:	xor    ebx,ebx
1004ed6d:	cmp    eax,ebx
1004ed6f:	push   edi
1004ed70:	mov    edi,ecx
1004ed72:	jne    0x1004edae
1004ed74:	lea    eax,[ebp-0x8]
1004ed77:	push   eax
1004ed78:	xor    esi,esi
1004ed7a:	inc    esi
1004ed7b:	push   esi
1004ed7c:	push   0x10066cc8
1004ed81:	push   esi
1004ed82:	call   DWORD PTR ds:0x10066234
1004ed88:	test   eax,eax
1004ed8a:	je     0x1004ed94
1004ed8c:	mov    DWORD PTR ds:0x10080488,esi
1004ed92:	jmp    0x1004edc8
1004ed94:	call   DWORD PTR ds:0x100660cc
1004ed9a:	cmp    eax,0x78
1004ed9d:	jne    0x1004eda9
1004ed9f:	push   0x2
1004eda1:	pop    eax
1004eda2:	mov    ds:0x10080488,eax
1004eda7:	jmp    0x1004edae
1004eda9:	mov    eax,ds:0x10080488
1004edae:	cmp    eax,0x2
1004edb1:	je     0x1004ee86
1004edb7:	cmp    eax,ebx
1004edb9:	je     0x1004ee86
1004edbf:	cmp    eax,0x1
1004edc2:	jne    0x1004eeb0
1004edc8:	cmp    DWORD PTR [ebp+0x18],ebx
1004edcb:	mov    DWORD PTR [ebp-0x8],ebx
1004edce:	jne    0x1004edd8
1004edd0:	mov    eax,DWORD PTR [edi]
1004edd2:	mov    eax,DWORD PTR [eax+0x4]
1004edd5:	mov    DWORD PTR [ebp+0x18],eax
1004edd8:	mov    esi,DWORD PTR ds:0x1006608c
1004edde:	xor    eax,eax
1004ede0:	cmp    DWORD PTR [ebp+0x20],ebx
1004ede3:	push   ebx
1004ede4:	push   ebx
1004ede5:	push   DWORD PTR [ebp+0x10]
1004ede8:	setne  al
1004edeb:	push   DWORD PTR [ebp+0xc]
1004edee:	lea    eax,[eax*8+0x1]
1004edf5:	push   eax
1004edf6:	push   DWORD PTR [ebp+0x18]
1004edf9:	call   esi
1004edfb:	mov    edi,eax
1004edfd:	cmp    edi,ebx
1004edff:	je     0x1004eeb0
1004ee05:	jle    0x1004ee43
1004ee07:	cmp    edi,0x7ffffff0
1004ee0d:	ja     0x1004ee43
1004ee0f:	lea    eax,[edi+edi*1+0x8]
1004ee13:	cmp    eax,0x400
1004ee18:	ja     0x1004ee2d
1004ee1a:	call   0x1004b7e0
1004ee1f:	mov    eax,esp
1004ee21:	cmp    eax,ebx
1004ee23:	je     0x1004ee41
1004ee25:	mov    DWORD PTR [eax],0xcccc
1004ee2b:	jmp    0x1004ee3e
1004ee2d:	push   eax
1004ee2e:	call   0x1004507d
1004ee33:	cmp    eax,ebx
1004ee35:	pop    ecx
1004ee36:	je     0x1004ee41
1004ee38:	mov    DWORD PTR [eax],0xdddd
1004ee3e:	add    eax,0x8
1004ee41:	mov    ebx,eax
1004ee43:	test   ebx,ebx
1004ee45:	je     0x1004eeb0
1004ee47:	lea    eax,[edi+edi*1]
1004ee4a:	push   eax
1004ee4b:	push   0x0
1004ee4d:	push   ebx
1004ee4e:	call   0x10045cf0
1004ee53:	add    esp,0xc
1004ee56:	push   edi
1004ee57:	push   ebx
1004ee58:	push   DWORD PTR [ebp+0x10]
1004ee5b:	push   DWORD PTR [ebp+0xc]
1004ee5e:	push   0x1
1004ee60:	push   DWORD PTR [ebp+0x18]
1004ee63:	call   esi
1004ee65:	test   eax,eax
1004ee67:	je     0x1004ee7a
1004ee69:	push   DWORD PTR [ebp+0x14]
1004ee6c:	push   eax
1004ee6d:	push   ebx
1004ee6e:	push   DWORD PTR [ebp+0x8]
1004ee71:	call   DWORD PTR ds:0x10066234
1004ee77:	mov    DWORD PTR [ebp-0x8],eax
1004ee7a:	push   ebx
1004ee7b:	call   0x1001b6bb
1004ee80:	mov    eax,DWORD PTR [ebp-0x8]
1004ee83:	pop    ecx
1004ee84:	jmp    0x1004eefb
1004ee86:	xor    esi,esi
1004ee88:	cmp    DWORD PTR [ebp+0x1c],ebx
1004ee8b:	jne    0x1004ee95
1004ee8d:	mov    eax,DWORD PTR [edi]
1004ee8f:	mov    eax,DWORD PTR [eax+0x14]
1004ee92:	mov    DWORD PTR [ebp+0x1c],eax
1004ee95:	cmp    DWORD PTR [ebp+0x18],ebx
1004ee98:	jne    0x1004eea2
1004ee9a:	mov    eax,DWORD PTR [edi]
1004ee9c:	mov    eax,DWORD PTR [eax+0x4]
1004ee9f:	mov    DWORD PTR [ebp+0x18],eax
1004eea2:	push   DWORD PTR [ebp+0x1c]
1004eea5:	call   0x1004f524
1004eeaa:	cmp    eax,0xffffffff
1004eead:	pop    ecx
1004eeae:	jne    0x1004eeb4
1004eeb0:	xor    eax,eax
1004eeb2:	jmp    0x1004eefb
1004eeb4:	cmp    eax,DWORD PTR [ebp+0x18]
1004eeb7:	je     0x1004eed7
1004eeb9:	push   ebx
1004eeba:	push   ebx
1004eebb:	lea    ecx,[ebp+0x10]
1004eebe:	push   ecx
1004eebf:	push   DWORD PTR [ebp+0xc]
1004eec2:	push   eax
1004eec3:	push   DWORD PTR [ebp+0x18]
1004eec6:	call   0x1004f56b
1004eecb:	mov    esi,eax
1004eecd:	add    esp,0x18
1004eed0:	cmp    esi,ebx
1004eed2:	je     0x1004eeb0
1004eed4:	mov    DWORD PTR [ebp+0xc],esi
1004eed7:	push   DWORD PTR [ebp+0x14]
1004eeda:	push   DWORD PTR [ebp+0x10]
1004eedd:	push   DWORD PTR [ebp+0xc]
1004eee0:	push   DWORD PTR [ebp+0x8]
1004eee3:	push   DWORD PTR [ebp+0x1c]
1004eee6:	call   DWORD PTR ds:0x10066230
1004eeec:	cmp    esi,ebx
1004eeee:	mov    edi,eax
1004eef0:	je     0x1004eef9
1004eef2:	push   esi
1004eef3:	call   0x100435f8
1004eef8:	pop    ecx
1004eef9:	mov    eax,edi
1004eefb:	lea    esp,[ebp-0x14]
1004eefe:	pop    edi
1004eeff:	pop    esi
1004ef00:	pop    ebx
1004ef01:	mov    ecx,DWORD PTR [ebp-0x4]
1004ef04:	xor    ecx,ebp
1004ef06:	call   0x10042f87
1004ef0b:	leave  
1004ef0c:	ret    
1004ef0d:	push   ebp
1004ef0e:	mov    ebp,esp
1004ef10:	sub    esp,0x10
1004ef13:	push   DWORD PTR [ebp+0x8]
1004ef16:	lea    ecx,[ebp-0x10]
1004ef19:	call   0x100455d5
1004ef1e:	push   DWORD PTR [ebp+0x24]
1004ef21:	lea    ecx,[ebp-0x10]
1004ef24:	push   DWORD PTR [ebp+0x20]
1004ef27:	push   DWORD PTR [ebp+0x1c]
1004ef2a:	push   DWORD PTR [ebp+0x18]
1004ef2d:	push   DWORD PTR [ebp+0x14]
1004ef30:	push   DWORD PTR [ebp+0x10]
1004ef33:	push   DWORD PTR [ebp+0xc]
1004ef36:	call   0x1004ed55
1004ef3b:	add    esp,0x1c
1004ef3e:	cmp    BYTE PTR [ebp-0x4],0x0
1004ef42:	je     0x1004ef4b
1004ef44:	mov    ecx,DWORD PTR [ebp-0x8]
1004ef47:	and    DWORD PTR [ecx+0x70],0xfffffffd
1004ef4b:	leave  
1004ef4c:	ret    
1004ef4d:	push   esi
1004ef4e:	mov    esi,DWORD PTR [esp+0x8]
1004ef52:	test   esi,esi
1004ef54:	je     0x1004f0db
1004ef5a:	push   DWORD PTR [esi+0x4]
1004ef5d:	call   0x100435f8
1004ef62:	push   DWORD PTR [esi+0x8]
1004ef65:	call   0x100435f8
1004ef6a:	push   DWORD PTR [esi+0xc]
1004ef6d:	call   0x100435f8
1004ef72:	push   DWORD PTR [esi+0x10]
1004ef75:	call   0x100435f8
1004ef7a:	push   DWORD PTR [esi+0x14]
1004ef7d:	call   0x100435f8
1004ef82:	push   DWORD PTR [esi+0x18]
1004ef85:	call   0x100435f8
1004ef8a:	push   DWORD PTR [esi]
1004ef8c:	call   0x100435f8
1004ef91:	push   DWORD PTR [esi+0x20]
1004ef94:	call   0x100435f8
1004ef99:	push   DWORD PTR [esi+0x24]
1004ef9c:	call   0x100435f8
1004efa1:	push   DWORD PTR [esi+0x28]
1004efa4:	call   0x100435f8
1004efa9:	push   DWORD PTR [esi+0x2c]
1004efac:	call   0x100435f8
1004efb1:	push   DWORD PTR [esi+0x30]
1004efb4:	call   0x100435f8
1004efb9:	push   DWORD PTR [esi+0x34]
1004efbc:	call   0x100435f8
1004efc1:	push   DWORD PTR [esi+0x1c]
1004efc4:	call   0x100435f8
1004efc9:	push   DWORD PTR [esi+0x38]
1004efcc:	call   0x100435f8
1004efd1:	push   DWORD PTR [esi+0x3c]
1004efd4:	call   0x100435f8
1004efd9:	add    esp,0x40
1004efdc:	push   DWORD PTR [esi+0x40]
1004efdf:	call   0x100435f8
1004efe4:	push   DWORD PTR [esi+0x44]
1004efe7:	call   0x100435f8
1004efec:	push   DWORD PTR [esi+0x48]
1004efef:	call   0x100435f8
1004eff4:	push   DWORD PTR [esi+0x4c]
1004eff7:	call   0x100435f8
1004effc:	push   DWORD PTR [esi+0x50]
1004efff:	call   0x100435f8
1004f004:	push   DWORD PTR [esi+0x54]
1004f007:	call   0x100435f8
1004f00c:	push   DWORD PTR [esi+0x58]
1004f00f:	call   0x100435f8
1004f014:	push   DWORD PTR [esi+0x5c]
1004f017:	call   0x100435f8
1004f01c:	push   DWORD PTR [esi+0x60]
1004f01f:	call   0x100435f8
1004f024:	push   DWORD PTR [esi+0x64]
1004f027:	call   0x100435f8
1004f02c:	push   DWORD PTR [esi+0x68]
1004f02f:	call   0x100435f8
1004f034:	push   DWORD PTR [esi+0x6c]
1004f037:	call   0x100435f8
1004f03c:	push   DWORD PTR [esi+0x70]
1004f03f:	call   0x100435f8
1004f044:	push   DWORD PTR [esi+0x74]
1004f047:	call   0x100435f8
1004f04c:	push   DWORD PTR [esi+0x78]
1004f04f:	call   0x100435f8
1004f054:	push   DWORD PTR [esi+0x7c]
1004f057:	call   0x100435f8
1004f05c:	add    esp,0x40
1004f05f:	push   DWORD PTR [esi+0x80]
1004f065:	call   0x100435f8
1004f06a:	push   DWORD PTR [esi+0x84]
1004f070:	call   0x100435f8
1004f075:	push   DWORD PTR [esi+0x88]
1004f07b:	call   0x100435f8
1004f080:	push   DWORD PTR [esi+0x8c]
1004f086:	call   0x100435f8
1004f08b:	push   DWORD PTR [esi+0x90]
1004f091:	call   0x100435f8
1004f096:	push   DWORD PTR [esi+0x94]
1004f09c:	call   0x100435f8
1004f0a1:	push   DWORD PTR [esi+0x98]
1004f0a7:	call   0x100435f8
1004f0ac:	push   DWORD PTR [esi+0x9c]
1004f0b2:	call   0x100435f8
1004f0b7:	push   DWORD PTR [esi+0xa0]
1004f0bd:	call   0x100435f8
1004f0c2:	push   DWORD PTR [esi+0xa4]
1004f0c8:	call   0x100435f8
1004f0cd:	push   DWORD PTR [esi+0xa8]
1004f0d3:	call   0x100435f8
1004f0d8:	add    esp,0x2c
1004f0db:	pop    esi
1004f0dc:	ret    
1004f0dd:	push   esi
1004f0de:	mov    esi,DWORD PTR [esp+0x8]
1004f0e2:	test   esi,esi
1004f0e4:	je     0x1004f11b
1004f0e6:	mov    eax,DWORD PTR [esi]
1004f0e8:	cmp    eax,DWORD PTR ds:0x1007edf8
1004f0ee:	je     0x1004f0f7
1004f0f0:	push   eax
1004f0f1:	call   0x100435f8
1004f0f6:	pop    ecx
1004f0f7:	mov    eax,DWORD PTR [esi+0x4]
1004f0fa:	cmp    eax,DWORD PTR ds:0x1007edfc
1004f100:	je     0x1004f109
1004f102:	push   eax
1004f103:	call   0x100435f8
1004f108:	pop    ecx
1004f109:	mov    esi,DWORD PTR [esi+0x8]
1004f10c:	cmp    esi,DWORD PTR ds:0x1007ee00
1004f112:	je     0x1004f11b
1004f114:	push   esi
1004f115:	call   0x100435f8
1004f11a:	pop    ecx
1004f11b:	pop    esi
1004f11c:	ret    
1004f11d:	push   esi
1004f11e:	mov    esi,DWORD PTR [esp+0x8]
1004f122:	test   esi,esi
1004f124:	je     0x1004f1a4
1004f126:	mov    eax,DWORD PTR [esi+0xc]
1004f129:	cmp    eax,DWORD PTR ds:0x1007ee04
1004f12f:	je     0x1004f138
1004f131:	push   eax
1004f132:	call   0x100435f8
1004f137:	pop    ecx
1004f138:	mov    eax,DWORD PTR [esi+0x10]
1004f13b:	cmp    eax,DWORD PTR ds:0x1007ee08
1004f141:	je     0x1004f14a
1004f143:	push   eax
1004f144:	call   0x100435f8
1004f149:	pop    ecx
1004f14a:	mov    eax,DWORD PTR [esi+0x14]
1004f14d:	cmp    eax,DWORD PTR ds:0x1007ee0c
1004f153:	je     0x1004f15c
1004f155:	push   eax
1004f156:	call   0x100435f8
1004f15b:	pop    ecx
1004f15c:	mov    eax,DWORD PTR [esi+0x18]
1004f15f:	cmp    eax,DWORD PTR ds:0x1007ee10
1004f165:	je     0x1004f16e
1004f167:	push   eax
1004f168:	call   0x100435f8
1004f16d:	pop    ecx
1004f16e:	mov    eax,DWORD PTR [esi+0x1c]
1004f171:	cmp    eax,DWORD PTR ds:0x1007ee14
1004f177:	je     0x1004f180
1004f179:	push   eax
1004f17a:	call   0x100435f8
1004f17f:	pop    ecx
1004f180:	mov    eax,DWORD PTR [esi+0x20]
1004f183:	cmp    eax,DWORD PTR ds:0x1007ee18
1004f189:	je     0x1004f192
1004f18b:	push   eax
1004f18c:	call   0x100435f8
1004f191:	pop    ecx
1004f192:	mov    esi,DWORD PTR [esi+0x24]
1004f195:	cmp    esi,DWORD PTR ds:0x1007ee1c
1004f19b:	je     0x1004f1a4
1004f19d:	push   esi
1004f19e:	call   0x100435f8
1004f1a3:	pop    ecx
1004f1a4:	pop    esi
1004f1a5:	ret    
1004f1a6:	int3   
1004f1a7:	int3   
1004f1a8:	int3   
1004f1a9:	int3   
1004f1aa:	int3   
1004f1ab:	int3   
1004f1ac:	int3   
1004f1ad:	int3   
1004f1ae:	int3   
1004f1af:	int3   
1004f1b0:	push   ebp
1004f1b1:	mov    ebp,esp
1004f1b3:	push   esi
1004f1b4:	xor    eax,eax
1004f1b6:	push   eax
1004f1b7:	push   eax
1004f1b8:	push   eax
1004f1b9:	push   eax
1004f1ba:	push   eax
1004f1bb:	push   eax
1004f1bc:	push   eax
1004f1bd:	push   eax
1004f1be:	mov    edx,DWORD PTR [ebp+0xc]
1004f1c1:	lea    ecx,[ecx+0x0]
1004f1c4:	mov    al,BYTE PTR [edx]
1004f1c6:	or     al,al
1004f1c8:	je     0x1004f1d3
1004f1ca:	add    edx,0x1
1004f1cd:	bts    DWORD PTR [esp],eax
1004f1d1:	jmp    0x1004f1c4
1004f1d3:	mov    esi,DWORD PTR [ebp+0x8]
1004f1d6:	or     ecx,0xffffffff
1004f1d9:	lea    ecx,[ecx+0x0]
1004f1dc:	add    ecx,0x1
1004f1df:	mov    al,BYTE PTR [esi]
1004f1e1:	or     al,al
1004f1e3:	je     0x1004f1ee
1004f1e5:	add    esi,0x1
1004f1e8:	bt     DWORD PTR [esp],eax
1004f1ec:	jae    0x1004f1dc
1004f1ee:	mov    eax,ecx
1004f1f0:	add    esp,0x20
1004f1f3:	pop    esi
1004f1f4:	leave  
1004f1f5:	ret    
1004f1f6:	push   ebp
1004f1f7:	mov    ebp,esp
1004f1f9:	push   ecx
1004f1fa:	and    DWORD PTR [ebp-0x4],0x0
1004f1fe:	push   ebx
1004f1ff:	mov    ebx,DWORD PTR [ebp+0x10]
1004f202:	test   ebx,ebx
1004f204:	jne    0x1004f20d
1004f206:	xor    eax,eax
1004f208:	jmp    0x1004f2a7
1004f20d:	cmp    ebx,0x4
1004f210:	push   edi
1004f211:	jb     0x1004f288
1004f213:	lea    edi,[ebx-0x4]
1004f216:	test   edi,edi
1004f218:	jbe    0x1004f288
1004f21a:	mov    ecx,DWORD PTR [ebp+0xc]
1004f21d:	mov    eax,DWORD PTR [ebp+0x8]
1004f220:	mov    dl,BYTE PTR [eax]
1004f222:	add    eax,0x4
1004f225:	add    ecx,0x4
1004f228:	test   dl,dl
1004f22a:	je     0x1004f27e
1004f22c:	cmp    dl,BYTE PTR [ecx-0x4]
1004f22f:	jne    0x1004f27e
1004f231:	mov    dl,BYTE PTR [eax-0x3]
1004f234:	test   dl,dl
1004f236:	je     0x1004f274
1004f238:	cmp    dl,BYTE PTR [ecx-0x3]
1004f23b:	jne    0x1004f274
1004f23d:	mov    dl,BYTE PTR [eax-0x2]
1004f240:	test   dl,dl
1004f242:	je     0x1004f26a
1004f244:	cmp    dl,BYTE PTR [ecx-0x2]
1004f247:	jne    0x1004f26a
1004f249:	mov    dl,BYTE PTR [eax-0x1]
1004f24c:	test   dl,dl
1004f24e:	je     0x1004f260
1004f250:	cmp    dl,BYTE PTR [ecx-0x1]
1004f253:	jne    0x1004f260
1004f255:	add    DWORD PTR [ebp-0x4],0x4
1004f259:	cmp    DWORD PTR [ebp-0x4],edi
1004f25c:	jb     0x1004f220
1004f25e:	jmp    0x1004f29f
1004f260:	movzx  eax,BYTE PTR [eax-0x1]
1004f264:	movzx  ecx,BYTE PTR [ecx-0x1]
1004f268:	jmp    0x1004f2b0
1004f26a:	movzx  eax,BYTE PTR [eax-0x2]
1004f26e:	movzx  ecx,BYTE PTR [ecx-0x2]
1004f272:	jmp    0x1004f2b0
1004f274:	movzx  eax,BYTE PTR [eax-0x3]
1004f278:	movzx  ecx,BYTE PTR [ecx-0x3]
1004f27c:	jmp    0x1004f2b0
1004f27e:	movzx  eax,BYTE PTR [eax-0x4]
1004f282:	movzx  ecx,BYTE PTR [ecx-0x4]
1004f286:	jmp    0x1004f2b0
1004f288:	mov    ecx,DWORD PTR [ebp+0xc]
1004f28b:	mov    eax,DWORD PTR [ebp+0x8]
1004f28e:	jmp    0x1004f29f
1004f290:	mov    dl,BYTE PTR [eax]
1004f292:	test   dl,dl
1004f294:	je     0x1004f2aa
1004f296:	cmp    dl,BYTE PTR [ecx]
1004f298:	jne    0x1004f2aa
1004f29a:	inc    eax
1004f29b:	inc    ecx
1004f29c:	inc    DWORD PTR [ebp-0x4]
1004f29f:	cmp    DWORD PTR [ebp-0x4],ebx
1004f2a2:	jb     0x1004f290
1004f2a4:	xor    eax,eax
1004f2a6:	pop    edi
1004f2a7:	pop    ebx
1004f2a8:	leave  
1004f2a9:	ret    
1004f2aa:	movzx  eax,BYTE PTR [eax]
1004f2ad:	movzx  ecx,BYTE PTR [ecx]
1004f2b0:	sub    eax,ecx
1004f2b2:	jmp    0x1004f2a6
1004f2b4:	int3   
1004f2b5:	int3   
1004f2b6:	int3   
1004f2b7:	int3   
1004f2b8:	int3   
1004f2b9:	int3   
1004f2ba:	int3   
1004f2bb:	int3   
1004f2bc:	int3   
1004f2bd:	int3   
1004f2be:	int3   
1004f2bf:	int3   
1004f2c0:	push   ebp
1004f2c1:	mov    ebp,esp
1004f2c3:	push   esi
1004f2c4:	xor    eax,eax
1004f2c6:	push   eax
1004f2c7:	push   eax
1004f2c8:	push   eax
1004f2c9:	push   eax
1004f2ca:	push   eax
1004f2cb:	push   eax
1004f2cc:	push   eax
1004f2cd:	push   eax
1004f2ce:	mov    edx,DWORD PTR [ebp+0xc]
1004f2d1:	lea    ecx,[ecx+0x0]
1004f2d4:	mov    al,BYTE PTR [edx]
1004f2d6:	or     al,al
1004f2d8:	je     0x1004f2e3
1004f2da:	add    edx,0x1
1004f2dd:	bts    DWORD PTR [esp],eax
1004f2e1:	jmp    0x1004f2d4
1004f2e3:	mov    esi,DWORD PTR [ebp+0x8]
1004f2e6:	mov    edi,edi
1004f2e8:	mov    al,BYTE PTR [esi]
1004f2ea:	or     al,al
1004f2ec:	je     0x1004f2fa
1004f2ee:	add    esi,0x1
1004f2f1:	bt     DWORD PTR [esp],eax
1004f2f5:	jae    0x1004f2e8
1004f2f7:	lea    eax,[esi-0x1]
1004f2fa:	add    esp,0x20
1004f2fd:	pop    esi
1004f2fe:	leave  
1004f2ff:	ret    
1004f300:	push   ebp
1004f301:	mov    ebp,esp
1004f303:	sub    esp,0x10
1004f306:	push   DWORD PTR [ebp+0xc]
1004f309:	lea    ecx,[ebp-0x10]
1004f30c:	call   0x100455d5
1004f311:	mov    eax,DWORD PTR [ebp-0x10]
1004f314:	cmp    DWORD PTR [eax+0xac],0x1
1004f31b:	jle    0x1004f330
1004f31d:	lea    eax,[ebp-0x10]
1004f320:	push   eax
1004f321:	push   0x4
1004f323:	push   DWORD PTR [ebp+0x8]
1004f326:	call   0x1004b3f3
1004f32b:	add    esp,0xc
1004f32e:	jmp    0x1004f340
1004f330:	mov    eax,DWORD PTR [eax+0xc8]
1004f336:	mov    ecx,DWORD PTR [ebp+0x8]
1004f339:	movzx  eax,BYTE PTR [eax+ecx*2]
1004f33d:	and    eax,0x4
1004f340:	cmp    BYTE PTR [ebp-0x4],0x0
1004f344:	je     0x1004f34d
1004f346:	mov    ecx,DWORD PTR [ebp-0x8]
1004f349:	and    DWORD PTR [ecx+0x70],0xfffffffd
1004f34d:	leave  
1004f34e:	ret    
1004f34f:	cmp    DWORD PTR ds:0x100802c8,0x0
1004f356:	jne    0x1004f36a
1004f358:	mov    eax,DWORD PTR [esp+0x4]
1004f35c:	mov    ecx,DWORD PTR ds:0x1007e998
1004f362:	movzx  eax,BYTE PTR [ecx+eax*2]
1004f366:	and    eax,0x4
1004f369:	ret    
1004f36a:	push   0x0
1004f36c:	push   DWORD PTR [esp+0x8]
1004f370:	call   0x1004f300
1004f375:	pop    ecx
1004f376:	pop    ecx
1004f377:	ret    
1004f378:	push   ebp
1004f379:	mov    ebp,esp
1004f37b:	sub    esp,0x10
1004f37e:	push   DWORD PTR [ebp+0xc]
1004f381:	lea    ecx,[ebp-0x10]
1004f384:	call   0x100455d5
1004f389:	mov    eax,DWORD PTR [ebp-0x10]
1004f38c:	cmp    DWORD PTR [eax+0xac],0x1
1004f393:	jle    0x1004f3ab
1004f395:	lea    eax,[ebp-0x10]
1004f398:	push   eax
1004f399:	push   0x80
1004f39e:	push   DWORD PTR [ebp+0x8]
1004f3a1:	call   0x1004b3f3
1004f3a6:	add    esp,0xc
1004f3a9:	jmp    0x1004f3bd
1004f3ab:	mov    eax,DWORD PTR [eax+0xc8]
1004f3b1:	mov    ecx,DWORD PTR [ebp+0x8]
1004f3b4:	movzx  eax,BYTE PTR [eax+ecx*2]
1004f3b8:	and    eax,0x80
1004f3bd:	cmp    BYTE PTR [ebp-0x4],0x0
1004f3c1:	je     0x1004f3ca
1004f3c3:	mov    ecx,DWORD PTR [ebp-0x8]
1004f3c6:	and    DWORD PTR [ecx+0x70],0xfffffffd
1004f3ca:	leave  
1004f3cb:	ret    
1004f3cc:	cmp    DWORD PTR ds:0x100802c8,0x0
1004f3d3:	jne    0x1004f3e9
1004f3d5:	mov    eax,DWORD PTR [esp+0x4]
1004f3d9:	mov    ecx,DWORD PTR ds:0x1007e998
1004f3df:	movzx  eax,BYTE PTR [ecx+eax*2]
1004f3e3:	and    eax,0x80
1004f3e8:	ret    
1004f3e9:	push   0x0
1004f3eb:	push   DWORD PTR [esp+0x8]
1004f3ef:	call   0x1004f378
1004f3f4:	pop    ecx
1004f3f5:	pop    ecx
1004f3f6:	ret    
1004f3f7:	push   ebp
1004f3f8:	mov    ebp,esp
1004f3fa:	sub    esp,0x10
1004f3fd:	push   DWORD PTR [ebp+0xc]
1004f400:	lea    ecx,[ebp-0x10]
1004f403:	call   0x100455d5
1004f408:	mov    eax,DWORD PTR [ebp-0x10]
1004f40b:	cmp    DWORD PTR [eax+0xac],0x1
1004f412:	jle    0x1004f427
1004f414:	lea    eax,[ebp-0x10]
1004f417:	push   eax
1004f418:	push   0x8
1004f41a:	push   DWORD PTR [ebp+0x8]
1004f41d:	call   0x1004b3f3
1004f422:	add    esp,0xc
1004f425:	jmp    0x1004f437
1004f427:	mov    eax,DWORD PTR [eax+0xc8]
1004f42d:	mov    ecx,DWORD PTR [ebp+0x8]
1004f430:	movzx  eax,BYTE PTR [eax+ecx*2]
1004f434:	and    eax,0x8
1004f437:	cmp    BYTE PTR [ebp-0x4],0x0
1004f43b:	je     0x1004f444
1004f43d:	mov    ecx,DWORD PTR [ebp-0x8]
1004f440:	and    DWORD PTR [ecx+0x70],0xfffffffd
1004f444:	leave  
1004f445:	ret    
1004f446:	cmp    DWORD PTR ds:0x100802c8,0x0
1004f44d:	jne    0x1004f461
1004f44f:	mov    eax,DWORD PTR [esp+0x4]
1004f453:	mov    ecx,DWORD PTR ds:0x1007e998
1004f459:	movzx  eax,BYTE PTR [ecx+eax*2]
1004f45d:	and    eax,0x8
1004f460:	ret    
1004f461:	push   0x0
1004f463:	push   DWORD PTR [esp+0x8]
1004f467:	call   0x1004f3f7
1004f46c:	pop    ecx
1004f46d:	pop    ecx
1004f46e:	ret    
1004f46f:	push   ebp
1004f470:	mov    ebp,esp
1004f472:	sub    esp,0x10
1004f475:	push   DWORD PTR [ebp+0xc]
1004f478:	lea    ecx,[ebp-0x10]
1004f47b:	call   0x100455d5
1004f480:	mov    eax,DWORD PTR [ebp-0x10]
1004f483:	cmp    DWORD PTR [eax+0xac],0x1
1004f48a:	jle    0x1004f4a2
1004f48c:	lea    eax,[ebp-0x10]
1004f48f:	push   eax
1004f490:	push   0x157
1004f495:	push   DWORD PTR [ebp+0x8]
1004f498:	call   0x1004b3f3
1004f49d:	add    esp,0xc
1004f4a0:	jmp    0x1004f4b4
1004f4a2:	mov    eax,DWORD PTR [eax+0xc8]
1004f4a8:	mov    ecx,DWORD PTR [ebp+0x8]
1004f4ab:	movzx  eax,WORD PTR [eax+ecx*2]
1004f4af:	and    eax,0x157
1004f4b4:	cmp    BYTE PTR [ebp-0x4],0x0
1004f4b8:	je     0x1004f4c1
1004f4ba:	mov    ecx,DWORD PTR [ebp-0x8]
1004f4bd:	and    DWORD PTR [ecx+0x70],0xfffffffd
1004f4c1:	leave  
1004f4c2:	ret    
1004f4c3:	cmp    DWORD PTR ds:0x100802c8,0x0
1004f4ca:	jne    0x1004f4e0
1004f4cc:	mov    eax,DWORD PTR [esp+0x4]
1004f4d0:	mov    ecx,DWORD PTR ds:0x1007e998
1004f4d6:	movzx  eax,WORD PTR [ecx+eax*2]
1004f4da:	and    eax,0x157
1004f4df:	ret    
1004f4e0:	push   0x0
1004f4e2:	push   DWORD PTR [esp+0x8]
1004f4e6:	call   0x1004f46f
1004f4eb:	pop    ecx
1004f4ec:	pop    ecx
1004f4ed:	ret    
1004f4ee:	int3   
1004f4ef:	int3   
1004f4f0:	mov    eax,DWORD PTR [esp+0x8]
1004f4f4:	mov    ecx,DWORD PTR [esp+0x10]
1004f4f8:	or     ecx,eax
1004f4fa:	mov    ecx,DWORD PTR [esp+0xc]
1004f4fe:	jne    0x1004f509
1004f500:	mov    eax,DWORD PTR [esp+0x4]
1004f504:	mul    ecx
1004f506:	ret    0x10
1004f509:	push   ebx
1004f50a:	mul    ecx
1004f50c:	mov    ebx,eax
1004f50e:	mov    eax,DWORD PTR [esp+0x8]
1004f512:	mul    DWORD PTR [esp+0x14]
1004f516:	add    ebx,eax
1004f518:	mov    eax,DWORD PTR [esp+0x8]
1004f51c:	mul    ecx
1004f51e:	add    edx,ebx
1004f520:	pop    ebx
1004f521:	ret    0x10
1004f524:	push   ebp
1004f525:	mov    ebp,esp
1004f527:	sub    esp,0xc
1004f52a:	mov    eax,ds:0x1007e030
1004f52f:	xor    eax,ebp
1004f531:	mov    DWORD PTR [ebp-0x4],eax
1004f534:	push   0x6
1004f536:	lea    eax,[ebp-0xc]
1004f539:	push   eax
1004f53a:	push   0x1004
1004f53f:	push   DWORD PTR [ebp+0x8]
1004f542:	mov    BYTE PTR [ebp-0x6],0x0
1004f546:	call   DWORD PTR ds:0x1006623c
1004f54c:	test   eax,eax
1004f54e:	jne    0x1004f555
1004f550:	or     eax,0xffffffff
1004f553:	jmp    0x1004f55f
1004f555:	lea    eax,[ebp-0xc]
1004f558:	push   eax
1004f559:	call   0x10045d94
1004f55e:	pop    ecx
1004f55f:	mov    ecx,DWORD PTR [ebp-0x4]
1004f562:	xor    ecx,ebp
1004f564:	call   0x10042f87
1004f569:	leave  
1004f56a:	ret    
1004f56b:	push   ebp
1004f56c:	mov    ebp,esp
1004f56e:	sub    esp,0x34
1004f571:	mov    eax,ds:0x1007e030
1004f576:	xor    eax,ebp
1004f578:	mov    DWORD PTR [ebp-0x4],eax
1004f57b:	mov    eax,DWORD PTR [ebp+0x10]
1004f57e:	mov    ecx,DWORD PTR [ebp+0x18]
1004f581:	mov    DWORD PTR [ebp-0x28],eax
1004f584:	mov    eax,DWORD PTR [ebp+0x14]
1004f587:	push   ebx
1004f588:	mov    DWORD PTR [ebp-0x30],eax
1004f58b:	mov    eax,DWORD PTR [eax]
1004f58d:	push   esi
1004f58e:	mov    DWORD PTR [ebp-0x24],eax
1004f591:	mov    eax,DWORD PTR [ebp+0x8]
1004f594:	push   edi
1004f595:	xor    edi,edi
1004f597:	cmp    eax,DWORD PTR [ebp+0xc]
1004f59a:	mov    DWORD PTR [ebp-0x34],ecx
1004f59d:	mov    DWORD PTR [ebp-0x20],edi
1004f5a0:	mov    DWORD PTR [ebp-0x2c],edi
1004f5a3:	je     0x1004f708
1004f5a9:	mov    esi,DWORD PTR ds:0x100661dc
1004f5af:	lea    ecx,[ebp-0x18]
1004f5b2:	push   ecx
1004f5b3:	push   eax
1004f5b4:	call   esi
1004f5b6:	test   eax,eax
1004f5b8:	mov    ebx,DWORD PTR ds:0x1006608c
1004f5be:	je     0x1004f61e
1004f5c0:	cmp    DWORD PTR [ebp-0x18],0x1
1004f5c4:	jne    0x1004f61e
1004f5c6:	lea    eax,[ebp-0x18]
1004f5c9:	push   eax
1004f5ca:	push   DWORD PTR [ebp+0xc]
1004f5cd:	call   esi
1004f5cf:	test   eax,eax
1004f5d1:	je     0x1004f61e
1004f5d3:	cmp    DWORD PTR [ebp-0x18],0x1
1004f5d7:	jne    0x1004f61e
1004f5d9:	mov    esi,DWORD PTR [ebp-0x24]
1004f5dc:	cmp    esi,0xffffffff
1004f5df:	mov    DWORD PTR [ebp-0x2c],0x1
1004f5e6:	jne    0x1004f5f4
1004f5e8:	push   DWORD PTR [ebp-0x28]
1004f5eb:	call   0x10043100
1004f5f0:	mov    esi,eax
1004f5f2:	pop    ecx
1004f5f3:	inc    esi
1004f5f4:	cmp    esi,edi
1004f5f6:	jle    0x1004f653
1004f5f8:	cmp    esi,0x7ffffff0
1004f5fe:	ja     0x1004f653
1004f600:	lea    eax,[esi+esi*1+0x8]
1004f604:	cmp    eax,0x400
1004f609:	ja     0x1004f63a
1004f60b:	call   0x1004b7e0
1004f610:	mov    eax,esp
1004f612:	cmp    eax,edi
1004f614:	je     0x1004f64e
1004f616:	mov    DWORD PTR [eax],0xcccc
1004f61c:	jmp    0x1004f64b
1004f61e:	push   edi
1004f61f:	push   edi
1004f620:	push   DWORD PTR [ebp-0x24]
1004f623:	push   DWORD PTR [ebp-0x28]
1004f626:	push   0x1
1004f628:	push   DWORD PTR [ebp+0x8]
1004f62b:	call   ebx
1004f62d:	mov    esi,eax
1004f62f:	cmp    esi,edi
1004f631:	jne    0x1004f5f6
1004f633:	xor    eax,eax
1004f635:	jmp    0x1004f70b
1004f63a:	push   eax
1004f63b:	call   0x1004507d
1004f640:	cmp    eax,edi
1004f642:	pop    ecx
1004f643:	je     0x1004f64e
1004f645:	mov    DWORD PTR [eax],0xdddd
1004f64b:	add    eax,0x8
1004f64e:	mov    DWORD PTR [ebp-0x1c],eax
1004f651:	jmp    0x1004f656
1004f653:	mov    DWORD PTR [ebp-0x1c],edi
1004f656:	cmp    DWORD PTR [ebp-0x1c],edi
1004f659:	je     0x1004f633
1004f65b:	lea    eax,[esi+esi*1]
1004f65e:	push   eax
1004f65f:	push   edi
1004f660:	push   DWORD PTR [ebp-0x1c]
1004f663:	call   0x10045cf0
1004f668:	add    esp,0xc
1004f66b:	push   esi
1004f66c:	push   DWORD PTR [ebp-0x1c]
1004f66f:	push   DWORD PTR [ebp-0x24]
1004f672:	push   DWORD PTR [ebp-0x28]
1004f675:	push   0x1
1004f677:	push   DWORD PTR [ebp+0x8]
1004f67a:	call   ebx
1004f67c:	test   eax,eax
1004f67e:	je     0x1004f6ff
1004f680:	mov    ebx,DWORD PTR [ebp-0x34]
1004f683:	cmp    ebx,edi
1004f685:	je     0x1004f6a4
1004f687:	push   edi
1004f688:	push   edi
1004f689:	push   DWORD PTR [ebp+0x1c]
1004f68c:	push   ebx
1004f68d:	push   esi
1004f68e:	push   DWORD PTR [ebp-0x1c]
1004f691:	push   edi
1004f692:	push   DWORD PTR [ebp+0xc]
1004f695:	call   DWORD PTR ds:0x100660b8
1004f69b:	test   eax,eax
1004f69d:	je     0x1004f6ff
1004f69f:	mov    DWORD PTR [ebp-0x20],ebx
1004f6a2:	jmp    0x1004f6ff
1004f6a4:	cmp    DWORD PTR [ebp-0x2c],edi
1004f6a7:	mov    ebx,DWORD PTR ds:0x100660b8
1004f6ad:	jne    0x1004f6c3
1004f6af:	push   edi
1004f6b0:	push   edi
1004f6b1:	push   edi
1004f6b2:	push   edi
1004f6b3:	push   esi
1004f6b4:	push   DWORD PTR [ebp-0x1c]
1004f6b7:	push   edi
1004f6b8:	push   DWORD PTR [ebp+0xc]
1004f6bb:	call   ebx
1004f6bd:	mov    esi,eax
1004f6bf:	cmp    esi,edi
1004f6c1:	je     0x1004f6ff
1004f6c3:	push   esi
1004f6c4:	push   0x1
1004f6c6:	call   0x10047552
1004f6cb:	cmp    eax,edi
1004f6cd:	pop    ecx
1004f6ce:	pop    ecx
1004f6cf:	mov    DWORD PTR [ebp-0x20],eax
1004f6d2:	je     0x1004f6ff
1004f6d4:	push   edi
1004f6d5:	push   edi
1004f6d6:	push   esi
1004f6d7:	push   eax
1004f6d8:	push   esi
1004f6d9:	push   DWORD PTR [ebp-0x1c]
1004f6dc:	push   edi
1004f6dd:	push   DWORD PTR [ebp+0xc]
1004f6e0:	call   ebx
1004f6e2:	cmp    eax,edi
1004f6e4:	jne    0x1004f6f4
1004f6e6:	push   DWORD PTR [ebp-0x20]
1004f6e9:	call   0x100435f8
1004f6ee:	pop    ecx
1004f6ef:	mov    DWORD PTR [ebp-0x20],edi
1004f6f2:	jmp    0x1004f6ff
1004f6f4:	cmp    DWORD PTR [ebp-0x24],0xffffffff
1004f6f8:	je     0x1004f6ff
1004f6fa:	mov    ecx,DWORD PTR [ebp-0x30]
1004f6fd:	mov    DWORD PTR [ecx],eax
1004f6ff:	push   DWORD PTR [ebp-0x1c]
1004f702:	call   0x1001b6bb
1004f707:	pop    ecx
1004f708:	mov    eax,DWORD PTR [ebp-0x20]
1004f70b:	lea    esp,[ebp-0x40]
1004f70e:	pop    edi
1004f70f:	pop    esi
1004f710:	pop    ebx
1004f711:	mov    ecx,DWORD PTR [ebp-0x4]
1004f714:	xor    ecx,ebp
1004f716:	call   0x10042f87
1004f71b:	leave  
1004f71c:	ret    
1004f71d:	push   ebp
1004f71e:	mov    ebp,esp
1004f720:	sub    esp,0x14
1004f723:	cmp    WORD PTR [ebp+0x8],0xffff
1004f729:	jne    0x1004f731
1004f72b:	and    DWORD PTR [ebp-0x4],0x0
1004f72f:	jmp    0x1004f793
1004f731:	cmp    WORD PTR [ebp+0x8],0x100
1004f737:	jae    0x1004f753
1004f739:	movzx  eax,WORD PTR [ebp+0x8]
1004f73d:	mov    ecx,DWORD PTR ds:0x1007ed34
1004f743:	mov    ax,WORD PTR [ecx+eax*2]
1004f747:	and    ax,WORD PTR [ebp+0xc]
1004f74b:	movzx  eax,ax
1004f74e:	mov    DWORD PTR [ebp-0x4],eax
1004f751:	jmp    0x1004f793
1004f753:	push   DWORD PTR [ebp+0x10]
1004f756:	lea    ecx,[ebp-0x14]
1004f759:	call   0x100455d5
1004f75e:	mov    eax,DWORD PTR [ebp-0x14]
1004f761:	push   DWORD PTR [eax+0x14]
1004f764:	push   DWORD PTR [eax+0x4]
1004f767:	lea    eax,[ebp-0x4]
1004f76a:	push   eax
1004f76b:	push   0x1
1004f76d:	lea    eax,[ebp+0x8]
1004f770:	push   eax
1004f771:	lea    eax,[ebp-0x14]
1004f774:	push   0x1
1004f776:	push   eax
1004f777:	call   0x10050517
1004f77c:	add    esp,0x1c
1004f77f:	test   eax,eax
1004f781:	jne    0x1004f786
1004f783:	and    DWORD PTR [ebp-0x4],eax
1004f786:	cmp    BYTE PTR [ebp-0x8],0x0
1004f78a:	je     0x1004f793
1004f78c:	mov    eax,DWORD PTR [ebp-0xc]
1004f78f:	and    DWORD PTR [eax+0x70],0xfffffffd
1004f793:	movzx  eax,WORD PTR [ebp-0x4]
1004f797:	movzx  ecx,WORD PTR [ebp+0xc]
1004f79b:	and    eax,ecx
1004f79d:	leave  
1004f79e:	ret    
1004f79f:	push   ebp
1004f7a0:	mov    ebp,esp
1004f7a2:	sub    esp,0x10
1004f7a5:	push   DWORD PTR [ebp+0x8]
1004f7a8:	lea    ecx,[ebp-0x10]
1004f7ab:	call   0x100455d5
1004f7b0:	movzx  eax,BYTE PTR [ebp+0xc]
1004f7b4:	mov    ecx,DWORD PTR [ebp-0xc]
1004f7b7:	mov    dl,BYTE PTR [ebp+0x14]
1004f7ba:	test   BYTE PTR [ecx+eax*1+0x1d],dl
1004f7be:	jne    0x1004f7de
1004f7c0:	cmp    DWORD PTR [ebp+0x10],0x0
1004f7c4:	je     0x1004f7d8
1004f7c6:	mov    ecx,DWORD PTR [ebp-0x10]
1004f7c9:	mov    ecx,DWORD PTR [ecx+0xc8]
1004f7cf:	movzx  eax,WORD PTR [ecx+eax*2]
1004f7d3:	and    eax,DWORD PTR [ebp+0x10]
1004f7d6:	jmp    0x1004f7da
1004f7d8:	xor    eax,eax
1004f7da:	test   eax,eax
1004f7dc:	je     0x1004f7e1
1004f7de:	xor    eax,eax
1004f7e0:	inc    eax
1004f7e1:	cmp    BYTE PTR [ebp-0x4],0x0
1004f7e5:	je     0x1004f7ee
1004f7e7:	mov    ecx,DWORD PTR [ebp-0x8]
1004f7ea:	and    DWORD PTR [ecx+0x70],0xfffffffd
1004f7ee:	leave  
1004f7ef:	ret    
1004f7f0:	push   0x4
1004f7f2:	push   0x0
1004f7f4:	push   DWORD PTR [esp+0xc]
1004f7f8:	push   0x0
1004f7fa:	call   0x1004f79f
1004f7ff:	add    esp,0x10
1004f802:	ret    
1004f803:	int3   
1004f804:	push   ebp
1004f805:	mov    ebp,esp
1004f807:	push   ebx
1004f808:	push   esi
1004f809:	push   edi
1004f80a:	push   ebp
1004f80b:	push   0x0
1004f80d:	push   0x0
1004f80f:	push   0x1004f81c
1004f814:	push   DWORD PTR [ebp+0x8]
1004f817:	call   0x10056bc4
1004f81c:	pop    ebp
1004f81d:	pop    edi
1004f81e:	pop    esi
1004f81f:	pop    ebx
1004f820:	mov    esp,ebp
1004f822:	pop    ebp
1004f823:	ret    
1004f824:	mov    ecx,DWORD PTR [esp+0x4]
1004f828:	test   DWORD PTR [ecx+0x4],0x6
1004f82f:	mov    eax,0x1
1004f834:	je     0x1004f868
1004f836:	mov    eax,DWORD PTR [esp+0x14]
1004f83a:	mov    ecx,DWORD PTR [eax-0x4]
1004f83d:	xor    ecx,eax
1004f83f:	call   0x10042f87
1004f844:	push   ebp
1004f845:	mov    ebp,DWORD PTR [eax+0x10]
1004f848:	mov    edx,DWORD PTR [eax+0x28]
1004f84b:	push   edx
1004f84c:	mov    edx,DWORD PTR [eax+0x24]
1004f84f:	push   edx
1004f850:	call   0x1004f869
1004f855:	add    esp,0x8
1004f858:	pop    ebp
1004f859:	mov    eax,DWORD PTR [esp+0x8]
1004f85d:	mov    edx,DWORD PTR [esp+0x10]
1004f861:	mov    DWORD PTR [edx],eax
1004f863:	mov    eax,0x3
1004f868:	ret    
1004f869:	push   ebx
1004f86a:	push   esi
1004f86b:	push   edi
1004f86c:	mov    eax,DWORD PTR [esp+0x10]
1004f870:	push   ebp
1004f871:	push   eax
1004f872:	push   0xfffffffe
1004f874:	push   0x1004f824
1004f879:	push   DWORD PTR fs:0x0
1004f880:	mov    eax,ds:0x1007e030
1004f885:	xor    eax,esp
1004f887:	push   eax
1004f888:	lea    eax,[esp+0x4]
1004f88c:	mov    fs:0x0,eax
1004f892:	mov    eax,DWORD PTR [esp+0x28]
1004f896:	mov    ebx,DWORD PTR [eax+0x8]
1004f899:	mov    esi,DWORD PTR [eax+0xc]
1004f89c:	cmp    esi,0xffffffff
1004f89f:	je     0x1004f8db
1004f8a1:	cmp    DWORD PTR [esp+0x2c],0xffffffff
1004f8a6:	je     0x1004f8ae
1004f8a8:	cmp    esi,DWORD PTR [esp+0x2c]
1004f8ac:	jbe    0x1004f8db
1004f8ae:	lea    esi,[esi+esi*2]
1004f8b1:	mov    ecx,DWORD PTR [ebx+esi*4]
1004f8b4:	mov    DWORD PTR [esp+0xc],ecx
1004f8b8:	mov    DWORD PTR [eax+0xc],ecx
1004f8bb:	cmp    DWORD PTR [ebx+esi*4+0x4],0x0
1004f8c0:	jne    0x1004f8d9
1004f8c2:	push   0x101
1004f8c7:	mov    eax,DWORD PTR [ebx+esi*4+0x8]
1004f8cb:	call   0x1004f919
1004f8d0:	mov    eax,DWORD PTR [ebx+esi*4+0x8]
1004f8d4:	call   0x1004f938
1004f8d9:	jmp    0x1004f892
1004f8db:	mov    ecx,DWORD PTR [esp+0x4]
1004f8df:	mov    DWORD PTR fs:0x0,ecx
1004f8e6:	add    esp,0x18
1004f8e9:	pop    edi
1004f8ea:	pop    esi
1004f8eb:	pop    ebx
1004f8ec:	ret    
1004f8ed:	xor    eax,eax
1004f8ef:	mov    ecx,DWORD PTR fs:0x0
1004f8f6:	cmp    DWORD PTR [ecx+0x4],0x1004f824
1004f8fd:	jne    0x1004f90f
1004f8ff:	mov    edx,DWORD PTR [ecx+0xc]
1004f902:	mov    edx,DWORD PTR [edx+0xc]
1004f905:	cmp    DWORD PTR [ecx+0x8],edx
1004f908:	jne    0x1004f90f
1004f90a:	mov    eax,0x1
1004f90f:	ret    
1004f910:	push   ebx
1004f911:	push   ecx
1004f912:	mov    ebx,0x1007ee40
1004f917:	jmp    0x1004f924
1004f919:	push   ebx
1004f91a:	push   ecx
1004f91b:	mov    ebx,0x1007ee40
1004f920:	mov    ecx,DWORD PTR [esp+0xc]
1004f924:	mov    DWORD PTR [ebx+0x8],ecx
1004f927:	mov    DWORD PTR [ebx+0x4],eax
1004f92a:	mov    DWORD PTR [ebx+0xc],ebp
1004f92d:	push   ebp
1004f92e:	push   ecx
1004f92f:	push   eax
1004f930:	pop    eax
1004f931:	pop    ecx
1004f932:	pop    ebp
1004f933:	pop    ecx
1004f934:	pop    ebx
1004f935:	ret    0x4
1004f938:	call   eax
1004f93a:	ret    
1004f93b:	push   0x2
1004f93d:	call   0x10047688
1004f942:	pop    ecx
1004f943:	ret    
1004f944:	xor    eax,eax
1004f946:	inc    eax
1004f947:	cmp    DWORD PTR [esp+0x4],0x0
1004f94c:	jne    0x1004f950
1004f94e:	xor    eax,eax
1004f950:	ret    
1004f951:	mov    eax,DWORD PTR [esp+0x4]
1004f955:	test   eax,eax
1004f957:	push   esi
1004f958:	push   edi
1004f959:	jl     0x1004f9b5
1004f95b:	cmp    eax,DWORD PTR ds:0x10082464
1004f961:	jae    0x1004f9b5
1004f963:	mov    esi,eax
1004f965:	and    esi,0x1f
1004f968:	imul   esi,esi,0x28
1004f96b:	mov    ecx,eax
1004f96d:	sar    ecx,0x5
1004f970:	lea    edi,[ecx*4+0x10082480]
1004f977:	mov    ecx,DWORD PTR [edi]
1004f979:	cmp    DWORD PTR [esi+ecx*1],0xffffffff
1004f97d:	jne    0x1004f9b5
1004f97f:	cmp    DWORD PTR ds:0x1007faa4,0x1
1004f986:	push   ebx
1004f987:	mov    ebx,DWORD PTR [esp+0x14]
1004f98b:	jne    0x1004f9ab
1004f98d:	sub    eax,0x0
1004f990:	je     0x1004f9a2
1004f992:	dec    eax
1004f993:	je     0x1004f99d
1004f995:	dec    eax
1004f996:	jne    0x1004f9ab
1004f998:	push   ebx
1004f999:	push   0xfffffff4
1004f99b:	jmp    0x1004f9a5
1004f99d:	push   ebx
1004f99e:	push   0xfffffff5
1004f9a0:	jmp    0x1004f9a5
1004f9a2:	push   ebx
1004f9a3:	push   0xfffffff6
1004f9a5:	call   DWORD PTR ds:0x10066244
1004f9ab:	mov    eax,DWORD PTR [edi]
1004f9ad:	mov    DWORD PTR [esi+eax*1],ebx
1004f9b0:	xor    eax,eax
1004f9b2:	pop    ebx
1004f9b3:	jmp    0x1004f9cb
1004f9b5:	call   0x10046c45
1004f9ba:	mov    DWORD PTR [eax],0x9
1004f9c0:	call   0x10046c58
1004f9c5:	and    DWORD PTR [eax],0x0
1004f9c8:	or     eax,0xffffffff
1004f9cb:	pop    edi
1004f9cc:	pop    esi
1004f9cd:	ret    
1004f9ce:	mov    ecx,DWORD PTR [esp+0x4]
1004f9d2:	push   ebx
1004f9d3:	xor    ebx,ebx
1004f9d5:	cmp    ecx,ebx
1004f9d7:	push   esi
1004f9d8:	push   edi
1004f9d9:	jl     0x1004fa36
1004f9db:	cmp    ecx,DWORD PTR ds:0x10082464
1004f9e1:	jae    0x1004fa36
1004f9e3:	mov    esi,ecx
1004f9e5:	and    esi,0x1f
1004f9e8:	imul   esi,esi,0x28
1004f9eb:	mov    eax,ecx
1004f9ed:	sar    eax,0x5
1004f9f0:	lea    edi,[eax*4+0x10082480]
1004f9f7:	mov    eax,DWORD PTR [edi]
1004f9f9:	add    eax,esi
1004f9fb:	test   BYTE PTR [eax+0x4],0x1
1004f9ff:	je     0x1004fa36
1004fa01:	cmp    DWORD PTR [eax],0xffffffff
1004fa04:	je     0x1004fa36
1004fa06:	cmp    DWORD PTR ds:0x1007faa4,0x1
1004fa0d:	jne    0x1004fa2c
1004fa0f:	sub    ecx,ebx
1004fa11:	je     0x1004fa23
1004fa13:	dec    ecx
1004fa14:	je     0x1004fa1e
1004fa16:	dec    ecx
1004fa17:	jne    0x1004fa2c
1004fa19:	push   ebx
1004fa1a:	push   0xfffffff4
1004fa1c:	jmp    0x1004fa26
1004fa1e:	push   ebx
1004fa1f:	push   0xfffffff5
1004fa21:	jmp    0x1004fa26
1004fa23:	push   ebx
1004fa24:	push   0xfffffff6
1004fa26:	call   DWORD PTR ds:0x10066244
1004fa2c:	mov    eax,DWORD PTR [edi]
1004fa2e:	or     DWORD PTR [esi+eax*1],0xffffffff
1004fa32:	xor    eax,eax
1004fa34:	jmp    0x1004fa4b
1004fa36:	call   0x10046c45
1004fa3b:	mov    DWORD PTR [eax],0x9
1004fa41:	call   0x10046c58
1004fa46:	mov    DWORD PTR [eax],ebx
1004fa48:	or     eax,0xffffffff
1004fa4b:	pop    edi
1004fa4c:	pop    esi
1004fa4d:	pop    ebx
1004fa4e:	ret    
1004fa4f:	mov    eax,DWORD PTR [esp+0x4]
1004fa53:	cmp    eax,0xfffffffe
1004fa56:	jne    0x1004fa6f
1004fa58:	call   0x10046c58
1004fa5d:	and    DWORD PTR [eax],0x0
1004fa60:	call   0x10046c45
1004fa65:	mov    DWORD PTR [eax],0x9
1004fa6b:	or     eax,0xffffffff
1004fa6e:	ret    
1004fa6f:	push   esi
1004fa70:	xor    esi,esi
1004fa72:	cmp    eax,esi
1004fa74:	jl     0x1004fa98
1004fa76:	cmp    eax,DWORD PTR ds:0x10082464
1004fa7c:	jae    0x1004fa98
1004fa7e:	mov    ecx,eax
1004fa80:	and    eax,0x1f
1004fa83:	imul   eax,eax,0x28
1004fa86:	sar    ecx,0x5
1004fa89:	mov    ecx,DWORD PTR [ecx*4+0x10082480]
1004fa90:	add    eax,ecx
1004fa92:	test   BYTE PTR [eax+0x4],0x1
1004fa96:	jne    0x1004fabc
1004fa98:	call   0x10046c58
1004fa9d:	mov    DWORD PTR [eax],esi
1004fa9f:	call   0x10046c45
1004faa4:	push   esi
1004faa5:	push   esi
1004faa6:	push   esi
1004faa7:	push   esi
1004faa8:	push   esi
1004faa9:	mov    DWORD PTR [eax],0x9
1004faaf:	call   0x1004347c
1004fab4:	add    esp,0x14
1004fab7:	or     eax,0xffffffff
1004faba:	pop    esi
1004fabb:	ret    
1004fabc:	mov    eax,DWORD PTR [eax]
1004fabe:	pop    esi
1004fabf:	ret    
1004fac0:	push   0xc
1004fac2:	push   0x100749b0
1004fac7:	call   0x10046d84
1004facc:	mov    edi,DWORD PTR [ebp+0x8]
1004facf:	mov    eax,edi
1004fad1:	sar    eax,0x5
1004fad4:	mov    esi,edi
1004fad6:	and    esi,0x1f
1004fad9:	imul   esi,esi,0x28
1004fadc:	add    esi,DWORD PTR [eax*4+0x10082480]
1004fae3:	mov    DWORD PTR [ebp-0x1c],0x1
1004faea:	xor    ebx,ebx
1004faec:	cmp    DWORD PTR [esi+0x8],ebx
1004faef:	jne    0x1004fb27
1004faf1:	push   0xa
1004faf3:	call   0x10047d8d
1004faf8:	pop    ecx
1004faf9:	mov    DWORD PTR [ebp-0x4],ebx
1004fafc:	cmp    DWORD PTR [esi+0x8],ebx
1004faff:	jne    0x1004fb1b
1004fb01:	push   0xfa0
1004fb06:	lea    eax,[esi+0xc]
1004fb09:	push   eax
1004fb0a:	call   0x1004c68b
1004fb0f:	pop    ecx
1004fb10:	pop    ecx
1004fb11:	test   eax,eax
1004fb13:	jne    0x1004fb18
1004fb15:	mov    DWORD PTR [ebp-0x1c],ebx
1004fb18:	inc    DWORD PTR [esi+0x8]
1004fb1b:	mov    DWORD PTR [ebp-0x4],0xfffffffe
1004fb22:	call   0x1004fb57
1004fb27:	cmp    DWORD PTR [ebp-0x1c],ebx
1004fb2a:	je     0x1004fb49
1004fb2c:	mov    eax,edi
1004fb2e:	sar    eax,0x5
1004fb31:	and    edi,0x1f
1004fb34:	imul   edi,edi,0x28
1004fb37:	mov    eax,DWORD PTR [eax*4+0x10082480]
1004fb3e:	lea    eax,[eax+edi*1+0xc]
1004fb42:	push   eax
1004fb43:	call   DWORD PTR ds:0x100660f0
1004fb49:	mov    eax,DWORD PTR [ebp-0x1c]
1004fb4c:	call   0x10046dc9
1004fb51:	ret    
1004fb52:	xor    ebx,ebx
1004fb54:	mov    edi,DWORD PTR [ebp+0x8]
1004fb57:	push   0xa
1004fb59:	call   0x10047cb5
1004fb5e:	pop    ecx
1004fb5f:	ret    
1004fb60:	mov    eax,DWORD PTR [esp+0x4]
1004fb64:	mov    ecx,eax
1004fb66:	and    eax,0x1f
1004fb69:	imul   eax,eax,0x28
1004fb6c:	sar    ecx,0x5
1004fb6f:	mov    ecx,DWORD PTR [ecx*4+0x10082480]
1004fb76:	lea    eax,[ecx+eax*1+0xc]
1004fb7a:	push   eax
1004fb7b:	call   DWORD PTR ds:0x100660ec
1004fb81:	ret    
1004fb82:	push   0x18
1004fb84:	push   0x100749d0
1004fb89:	call   0x10046d84
1004fb8e:	or     DWORD PTR [ebp-0x1c],0xffffffff
1004fb92:	xor    edi,edi
1004fb94:	mov    DWORD PTR [ebp-0x24],edi
1004fb97:	push   0xb
1004fb99:	call   0x10047cca
1004fb9e:	pop    ecx
1004fb9f:	test   eax,eax
1004fba1:	jne    0x1004fbab
1004fba3:	or     eax,0xffffffff
1004fba6:	jmp    0x1004fd12
1004fbab:	push   0xb
1004fbad:	call   0x10047d8d
1004fbb2:	pop    ecx
1004fbb3:	mov    DWORD PTR [ebp-0x4],edi
1004fbb6:	mov    DWORD PTR [ebp-0x28],edi
1004fbb9:	cmp    edi,0x40
1004fbbc:	jge    0x1004fd03
1004fbc2:	mov    esi,DWORD PTR [edi*4+0x10082480]
1004fbc9:	test   esi,esi
1004fbcb:	je     0x1004fc90
1004fbd1:	mov    DWORD PTR [ebp-0x20],esi
1004fbd4:	mov    eax,DWORD PTR [edi*4+0x10082480]
1004fbdb:	add    eax,0x500
1004fbe0:	cmp    esi,eax
1004fbe2:	jae    0x1004fc84
1004fbe8:	test   BYTE PTR [esi+0x4],0x1
1004fbec:	jne    0x1004fc4a
1004fbee:	cmp    DWORD PTR [esi+0x8],0x0
1004fbf2:	jne    0x1004fc2d
1004fbf4:	push   0xa
1004fbf6:	call   0x10047d8d
1004fbfb:	pop    ecx
1004fbfc:	xor    ebx,ebx
1004fbfe:	inc    ebx
1004fbff:	mov    DWORD PTR [ebp-0x4],ebx
1004fc02:	cmp    DWORD PTR [esi+0x8],0x0
1004fc06:	jne    0x1004fc24
1004fc08:	push   0xfa0
1004fc0d:	lea    eax,[esi+0xc]
1004fc10:	push   eax
1004fc11:	call   0x1004c68b
1004fc16:	pop    ecx
1004fc17:	pop    ecx
1004fc18:	test   eax,eax
1004fc1a:	jne    0x1004fc21
1004fc1c:	mov    DWORD PTR [ebp-0x24],ebx
1004fc1f:	jmp    0x1004fc24
1004fc21:	inc    DWORD PTR [esi+0x8]
1004fc24:	and    DWORD PTR [ebp-0x4],0x0
1004fc28:	call   0x1004fc55
1004fc2d:	cmp    DWORD PTR [ebp-0x24],0x0
1004fc31:	jne    0x1004fc4a
1004fc33:	lea    ebx,[esi+0xc]
1004fc36:	push   ebx
1004fc37:	call   DWORD PTR ds:0x100660f0
1004fc3d:	test   BYTE PTR [esi+0x4],0x1
1004fc41:	je     0x1004fc5e
1004fc43:	push   ebx
1004fc44:	call   DWORD PTR ds:0x100660ec
1004fc4a:	add    esi,0x28
1004fc4d:	jmp    0x1004fbd1
1004fc4f:	mov    edi,DWORD PTR [ebp-0x28]
1004fc52:	mov    esi,DWORD PTR [ebp-0x20]
1004fc55:	push   0xa
1004fc57:	call   0x10047cb5
1004fc5c:	pop    ecx
1004fc5d:	ret    
1004fc5e:	cmp    DWORD PTR [ebp-0x24],0x0
1004fc62:	jne    0x1004fc4a
1004fc64:	mov    BYTE PTR [esi+0x4],0x1
1004fc68:	or     DWORD PTR [esi],0xffffffff
1004fc6b:	mov    eax,esi
1004fc6d:	sub    eax,DWORD PTR [edi*4+0x10082480]
1004fc74:	cdq    
1004fc75:	push   0x28
1004fc77:	pop    ecx
1004fc78:	idiv   ecx
1004fc7a:	mov    ecx,edi
1004fc7c:	shl    ecx,0x5
1004fc7f:	add    eax,ecx
1004fc81:	mov    DWORD PTR [ebp-0x1c],eax
1004fc84:	cmp    DWORD PTR [ebp-0x1c],0xffffffff
1004fc88:	jne    0x1004fd03
1004fc8a:	inc    edi
1004fc8b:	jmp    0x1004fbb6
1004fc90:	push   0x28
1004fc92:	push   0x20
1004fc94:	call   0x10047552
1004fc99:	pop    ecx
1004fc9a:	pop    ecx
1004fc9b:	mov    DWORD PTR [ebp-0x20],eax
1004fc9e:	test   eax,eax
1004fca0:	je     0x1004fd03
1004fca2:	lea    ecx,[edi*4+0x10082480]
1004fca9:	mov    DWORD PTR [ecx],eax
1004fcab:	add    DWORD PTR ds:0x10082464,0x20
1004fcb2:	mov    edx,DWORD PTR [ecx]
1004fcb4:	add    edx,0x500
1004fcba:	cmp    eax,edx
1004fcbc:	jae    0x1004fcd5
1004fcbe:	mov    BYTE PTR [eax+0x4],0x0
1004fcc2:	or     DWORD PTR [eax],0xffffffff
1004fcc5:	mov    BYTE PTR [eax+0x5],0xa
1004fcc9:	and    DWORD PTR [eax+0x8],0x0
1004fccd:	add    eax,0x28
1004fcd0:	mov    DWORD PTR [ebp-0x20],eax
1004fcd3:	jmp    0x1004fcb2
1004fcd5:	shl    edi,0x5
1004fcd8:	mov    DWORD PTR [ebp-0x1c],edi
1004fcdb:	mov    eax,edi
1004fcdd:	sar    eax,0x5
1004fce0:	mov    ecx,edi
1004fce2:	and    ecx,0x1f
1004fce5:	imul   ecx,ecx,0x28
1004fce8:	mov    eax,DWORD PTR [eax*4+0x10082480]
1004fcef:	mov    BYTE PTR [eax+ecx*1+0x4],0x1
1004fcf4:	push   edi
1004fcf5:	call   0x1004fac0
1004fcfa:	pop    ecx
1004fcfb:	test   eax,eax
1004fcfd:	jne    0x1004fd03
1004fcff:	or     DWORD PTR [ebp-0x1c],0xffffffff
1004fd03:	mov    DWORD PTR [ebp-0x4],0xfffffffe
1004fd0a:	call   0x1004fd18
1004fd0f:	mov    eax,DWORD PTR [ebp-0x1c]
1004fd12:	call   0x10046dc9
1004fd17:	ret    
1004fd18:	push   0xb
1004fd1a:	call   0x10047cb5
1004fd1f:	pop    ecx
1004fd20:	ret    
1004fd21:	push   ebp
1004fd22:	mov    ebp,esp
1004fd24:	sub    esp,0x10
1004fd27:	mov    eax,ds:0x1007e030
1004fd2c:	xor    eax,ebp
1004fd2e:	mov    DWORD PTR [ebp-0x4],eax
1004fd31:	push   esi
1004fd32:	xor    esi,esi
1004fd34:	cmp    DWORD PTR ds:0x1007ee50,esi
1004fd3a:	je     0x1004fd8a
1004fd3c:	cmp    DWORD PTR ds:0x1007ef74,0xfffffffe
1004fd43:	jne    0x1004fd4a
1004fd45:	call   0x10050555
1004fd4a:	mov    eax,ds:0x1007ef74
1004fd4f:	cmp    eax,0xffffffff
1004fd52:	jne    0x1004fd5a
1004fd54:	or     ax,0xffff
1004fd58:	jmp    0x1004fdca
1004fd5a:	push   esi
1004fd5b:	lea    ecx,[ebp-0x10]
1004fd5e:	push   ecx
1004fd5f:	push   0x1
1004fd61:	lea    ecx,[ebp+0x8]
1004fd64:	push   ecx
1004fd65:	push   eax
1004fd66:	call   DWORD PTR ds:0x10066250
1004fd6c:	test   eax,eax
1004fd6e:	jne    0x1004fdd7
1004fd70:	cmp    DWORD PTR ds:0x1007ee50,0x2
1004fd77:	jne    0x1004fd54
1004fd79:	call   DWORD PTR ds:0x100660cc
1004fd7f:	cmp    eax,0x78
1004fd82:	jne    0x1004fd54
1004fd84:	mov    DWORD PTR ds:0x1007ee50,esi
1004fd8a:	push   esi
1004fd8b:	push   esi
1004fd8c:	push   0x5
1004fd8e:	lea    eax,[ebp-0xc]
1004fd91:	push   eax
1004fd92:	push   0x1
1004fd94:	lea    eax,[ebp+0x8]
1004fd97:	push   eax
1004fd98:	push   esi
1004fd99:	call   DWORD PTR ds:0x1006624c
1004fd9f:	push   eax
1004fda0:	call   DWORD PTR ds:0x100660b8
1004fda6:	mov    ecx,DWORD PTR ds:0x1007ef74
1004fdac:	cmp    ecx,0xffffffff
1004fdaf:	je     0x1004fd54
1004fdb1:	push   esi
1004fdb2:	lea    edx,[ebp-0x10]
1004fdb5:	push   edx
1004fdb6:	push   eax
1004fdb7:	lea    eax,[ebp-0xc]
1004fdba:	push   eax
1004fdbb:	push   ecx
1004fdbc:	call   DWORD PTR ds:0x10066248
1004fdc2:	test   eax,eax
1004fdc4:	je     0x1004fd54
1004fdc6:	mov    ax,WORD PTR [ebp+0x8]
1004fdca:	mov    ecx,DWORD PTR [ebp-0x4]
1004fdcd:	xor    ecx,ebp
1004fdcf:	pop    esi
1004fdd0:	call   0x10042f87
1004fdd5:	leave  
1004fdd6:	ret    
1004fdd7:	mov    DWORD PTR ds:0x1007ee50,0x1
1004fde1:	jmp    0x1004fdc6
1004fde3:	push   0x10
1004fde5:	push   0x100749f8
1004fdea:	call   0x10046d84
1004fdef:	xor    ebx,ebx
1004fdf1:	mov    DWORD PTR [ebp-0x1c],ebx
1004fdf4:	push   0x1
1004fdf6:	call   0x10047d8d
1004fdfb:	pop    ecx
1004fdfc:	mov    DWORD PTR [ebp-0x4],ebx
1004fdff:	push   0x3
1004fe01:	pop    edi
1004fe02:	mov    DWORD PTR [ebp-0x20],edi
1004fe05:	cmp    edi,DWORD PTR ds:0x10082460
1004fe0b:	jge    0x1004fe64
1004fe0d:	mov    esi,edi
1004fe0f:	shl    esi,0x2
1004fe12:	mov    eax,ds:0x10081440
1004fe17:	add    eax,esi
1004fe19:	cmp    DWORD PTR [eax],ebx
1004fe1b:	je     0x1004fe61
1004fe1d:	mov    eax,DWORD PTR [eax]
1004fe1f:	test   BYTE PTR [eax+0xc],0x83
1004fe23:	je     0x1004fe34
1004fe25:	push   eax
1004fe26:	call   0x10050614
1004fe2b:	pop    ecx
1004fe2c:	cmp    eax,0xffffffff
1004fe2f:	je     0x1004fe34
1004fe31:	inc    DWORD PTR [ebp-0x1c]
1004fe34:	cmp    edi,0x14
1004fe37:	jl     0x1004fe61
1004fe39:	mov    eax,ds:0x10081440
1004fe3e:	mov    eax,DWORD PTR [esi+eax*1]
1004fe41:	add    eax,0x20
1004fe44:	push   eax
1004fe45:	call   DWORD PTR ds:0x10066138
1004fe4b:	mov    eax,ds:0x10081440
1004fe50:	push   DWORD PTR [esi+eax*1]
1004fe53:	call   0x100435f8
1004fe58:	pop    ecx
1004fe59:	mov    eax,ds:0x10081440
1004fe5e:	mov    DWORD PTR [esi+eax*1],ebx
1004fe61:	inc    edi
1004fe62:	jmp    0x1004fe02
1004fe64:	mov    DWORD PTR [ebp-0x4],0xfffffffe
1004fe6b:	call   0x1004fe79
1004fe70:	mov    eax,DWORD PTR [ebp-0x1c]
1004fe73:	call   0x10046dc9
1004fe78:	ret    
1004fe79:	push   0x1
1004fe7b:	call   0x10047cb5
1004fe80:	pop    ecx
1004fe81:	ret    
1004fe82:	push   ebx
1004fe83:	push   esi
1004fe84:	mov    esi,DWORD PTR [esp+0xc]
1004fe88:	mov    eax,DWORD PTR [esi+0xc]
1004fe8b:	mov    ecx,eax
1004fe8d:	and    cl,0x3
1004fe90:	xor    ebx,ebx
1004fe92:	cmp    cl,0x2
1004fe95:	jne    0x1004fed6
1004fe97:	test   ax,0x108
1004fe9b:	je     0x1004fed6
1004fe9d:	mov    eax,DWORD PTR [esi+0x8]
1004fea0:	push   edi
1004fea1:	mov    edi,DWORD PTR [esi]
1004fea3:	sub    edi,eax
1004fea5:	test   edi,edi
1004fea7:	jle    0x1004fed5
1004fea9:	push   edi
1004feaa:	push   eax
1004feab:	push   esi
1004feac:	call   0x1004d25c
1004feb1:	pop    ecx
1004feb2:	push   eax
1004feb3:	call   0x1004cf63
1004feb8:	add    esp,0xc
1004febb:	cmp    eax,edi
1004febd:	jne    0x1004fece
1004febf:	mov    eax,DWORD PTR [esi+0xc]
1004fec2:	test   al,al
1004fec4:	jns    0x1004fed5
1004fec6:	and    eax,0xfffffffd
1004fec9:	mov    DWORD PTR [esi+0xc],eax
1004fecc:	jmp    0x1004fed5
1004fece:	or     DWORD PTR [esi+0xc],0x20
1004fed2:	or     ebx,0xffffffff
1004fed5:	pop    edi
1004fed6:	mov    eax,DWORD PTR [esi+0x8]
1004fed9:	and    DWORD PTR [esi+0x4],0x0
1004fedd:	mov    DWORD PTR [esi],eax
1004fedf:	pop    esi
1004fee0:	mov    eax,ebx
1004fee2:	pop    ebx
1004fee3:	ret    
1004fee4:	push   esi
1004fee5:	mov    esi,DWORD PTR [esp+0x8]
1004fee9:	test   esi,esi
1004feeb:	jne    0x1004fef6
1004feed:	push   esi
1004feee:	call   0x1004ff26
1004fef3:	pop    ecx
1004fef4:	pop    esi
1004fef5:	ret    
1004fef6:	push   esi
1004fef7:	call   0x1004fe82
1004fefc:	test   eax,eax
1004fefe:	pop    ecx
1004feff:	je     0x1004ff06
1004ff01:	or     eax,0xffffffff
1004ff04:	pop    esi
1004ff05:	ret    
1004ff06:	test   WORD PTR [esi+0xc],0x4000
1004ff0c:	je     0x1004ff22
1004ff0e:	push   esi
1004ff0f:	call   0x1004d25c
1004ff14:	push   eax
1004ff15:	call   0x10050690
1004ff1a:	pop    ecx
1004ff1b:	pop    ecx
1004ff1c:	neg    eax
1004ff1e:	sbb    eax,eax
1004ff20:	pop    esi
1004ff21:	ret    
1004ff22:	xor    eax,eax
1004ff24:	pop    esi
1004ff25:	ret    
1004ff26:	push   0x14
1004ff28:	push   0x10074a18
1004ff2d:	call   0x10046d84
1004ff32:	xor    edi,edi
1004ff34:	mov    DWORD PTR [ebp-0x1c],edi
1004ff37:	mov    DWORD PTR [ebp-0x24],edi
1004ff3a:	push   0x1
1004ff3c:	call   0x10047d8d
1004ff41:	pop    ecx
1004ff42:	mov    DWORD PTR [ebp-0x4],edi
1004ff45:	xor    esi,esi
1004ff47:	mov    DWORD PTR [ebp-0x20],esi
1004ff4a:	cmp    esi,DWORD PTR ds:0x10082460
1004ff50:	jge    0x1004ffd9
1004ff56:	mov    eax,ds:0x10081440
1004ff5b:	lea    eax,[eax+esi*4]
1004ff5e:	cmp    DWORD PTR [eax],edi
1004ff60:	je     0x1004ffc0
1004ff62:	mov    eax,DWORD PTR [eax]
1004ff64:	test   BYTE PTR [eax+0xc],0x83
1004ff68:	je     0x1004ffc0
1004ff6a:	push   eax
1004ff6b:	push   esi
1004ff6c:	call   0x1004d1e7
1004ff71:	pop    ecx
1004ff72:	pop    ecx
1004ff73:	xor    edx,edx
1004ff75:	inc    edx
1004ff76:	mov    DWORD PTR [ebp-0x4],edx
1004ff79:	mov    eax,ds:0x10081440
1004ff7e:	mov    eax,DWORD PTR [eax+esi*4]
1004ff81:	mov    ecx,DWORD PTR [eax+0xc]
1004ff84:	test   cl,0x83
1004ff87:	je     0x1004ffb8
1004ff89:	cmp    DWORD PTR [ebp+0x8],edx
1004ff8c:	jne    0x1004ff9f
1004ff8e:	push   eax
1004ff8f:	call   0x1004fee4
1004ff94:	pop    ecx
1004ff95:	cmp    eax,0xffffffff
1004ff98:	je     0x1004ffb8
1004ff9a:	inc    DWORD PTR [ebp-0x1c]
1004ff9d:	jmp    0x1004ffb8
1004ff9f:	cmp    DWORD PTR [ebp+0x8],edi
1004ffa2:	jne    0x1004ffb8
1004ffa4:	test   cl,0x2
1004ffa7:	je     0x1004ffb8
1004ffa9:	push   eax
1004ffaa:	call   0x1004fee4
1004ffaf:	pop    ecx
1004ffb0:	cmp    eax,0xffffffff
1004ffb3:	jne    0x1004ffb8
1004ffb5:	or     DWORD PTR [ebp-0x24],eax
1004ffb8:	mov    DWORD PTR [ebp-0x4],edi
1004ffbb:	call   0x1004ffc8
1004ffc0:	inc    esi
1004ffc1:	jmp    0x1004ff47
1004ffc3:	xor    edi,edi
1004ffc5:	mov    esi,DWORD PTR [ebp-0x20]
1004ffc8:	mov    eax,ds:0x10081440
1004ffcd:	push   DWORD PTR [eax+esi*4]
1004ffd0:	push   esi
1004ffd1:	call   0x1004d239
1004ffd6:	pop    ecx
1004ffd7:	pop    ecx
1004ffd8:	ret    
1004ffd9:	mov    DWORD PTR [ebp-0x4],0xfffffffe
1004ffe0:	call   0x1004fff7
1004ffe5:	cmp    DWORD PTR [ebp+0x8],0x1
1004ffe9:	mov    eax,DWORD PTR [ebp-0x1c]
1004ffec:	je     0x1004fff1
1004ffee:	mov    eax,DWORD PTR [ebp-0x24]
1004fff1:	call   0x10046dc9
1004fff6:	ret    
1004fff7:	push   0x1
1004fff9:	call   0x10047cb5
1004fffe:	pop    ecx
1004ffff:	ret    
10050000:	push   0x1
10050002:	call   0x1004ff26
10050007:	pop    ecx
10050008:	ret    
10050009:	push   ebp
1005000a:	mov    ebp,esp
1005000c:	push   ecx
1005000d:	push   esi
1005000e:	mov    esi,DWORD PTR [ebp+0xc]
10050011:	push   esi
10050012:	call   0x1004d25c
10050017:	mov    DWORD PTR [ebp+0xc],eax
1005001a:	mov    eax,DWORD PTR [esi+0xc]
1005001d:	test   al,0x82
1005001f:	pop    ecx
10050020:	jne    0x1005003b
10050022:	call   0x10046c45
10050027:	mov    DWORD PTR [eax],0x9
1005002d:	or     DWORD PTR [esi+0xc],0x20
10050031:	mov    eax,0xffff
10050036:	jmp    0x10050176
1005003b:	test   al,0x40
1005003d:	je     0x1005004c
1005003f:	call   0x10046c45
10050044:	mov    DWORD PTR [eax],0x22
1005004a:	jmp    0x1005002d
1005004c:	test   al,0x1
1005004e:	je     0x10050067
10050050:	and    DWORD PTR [esi+0x4],0x0
10050054:	test   al,0x10
10050056:	je     0x100500e7
1005005c:	mov    ecx,DWORD PTR [esi+0x8]
1005005f:	and    eax,0xfffffffe
10050062:	mov    DWORD PTR [esi],ecx
10050064:	mov    DWORD PTR [esi+0xc],eax
10050067:	mov    eax,DWORD PTR [esi+0xc]
1005006a:	and    DWORD PTR [esi+0x4],0x0
1005006e:	and    DWORD PTR [ebp-0x4],0x0
10050072:	push   ebx
10050073:	push   0x2
10050075:	and    eax,0xffffffef
10050078:	pop    ebx
10050079:	or     eax,ebx
1005007b:	test   ax,0x10c
1005007f:	mov    DWORD PTR [esi+0xc],eax
10050082:	jne    0x100500b0
10050084:	call   0x1004d0e1
10050089:	add    eax,0x20
1005008c:	cmp    esi,eax
1005008e:	je     0x1005009c
10050090:	call   0x1004d0e1
10050095:	add    eax,0x40
10050098:	cmp    esi,eax
1005009a:	jne    0x100500a9
1005009c:	push   DWORD PTR [ebp+0xc]
1005009f:	call   0x1004d083
100500a4:	test   eax,eax
100500a6:	pop    ecx
100500a7:	jne    0x100500b0
100500a9:	push   esi
100500aa:	call   0x1004d03f
100500af:	pop    ecx
100500b0:	test   WORD PTR [esi+0xc],0x108
100500b6:	push   edi
100500b7:	je     0x10050140
100500bd:	mov    eax,DWORD PTR [esi+0x8]
100500c0:	mov    edi,DWORD PTR [esi]
100500c2:	lea    ecx,[eax+0x2]
100500c5:	mov    DWORD PTR [esi],ecx
100500c7:	mov    ecx,DWORD PTR [esi+0x18]
100500ca:	sub    edi,eax
100500cc:	sub    ecx,ebx
100500ce:	test   edi,edi
100500d0:	mov    DWORD PTR [esi+0x4],ecx
100500d3:	jle    0x100500f2
100500d5:	push   edi
100500d6:	push   eax
100500d7:	push   DWORD PTR [ebp+0xc]
100500da:	call   0x1004cf63
100500df:	add    esp,0xc
100500e2:	mov    DWORD PTR [ebp-0x4],eax
100500e5:	jmp    0x10050135
100500e7:	or     eax,0x20
100500ea:	mov    DWORD PTR [esi+0xc],eax
100500ed:	jmp    0x10050031
100500f2:	mov    ecx,DWORD PTR [ebp+0xc]
100500f5:	cmp    ecx,0xffffffff
100500f8:	je     0x10050115
100500fa:	cmp    ecx,0xfffffffe
100500fd:	je     0x10050115
100500ff:	mov    eax,ecx
10050101:	and    eax,0x1f
10050104:	imul   eax,eax,0x28
10050107:	mov    edx,ecx
10050109:	sar    edx,0x5
1005010c:	add    eax,DWORD PTR [edx*4+0x10082480]
10050113:	jmp    0x1005011a
10050115:	mov    eax,0x1007e9d0
1005011a:	test   BYTE PTR [eax+0x4],0x20
1005011e:	je     0x10050135
10050120:	push   ebx
10050121:	push   0x0
10050123:	push   0x0
10050125:	push   ecx
10050126:	call   0x1004c884
1005012b:	and    eax,edx
1005012d:	add    esp,0x10
10050130:	cmp    eax,0xffffffff
10050133:	je     0x10050162
10050135:	mov    eax,DWORD PTR [esi+0x8]
10050138:	mov    ebx,DWORD PTR [ebp+0x8]
1005013b:	mov    WORD PTR [eax],bx
1005013e:	jmp    0x1005015d
10050140:	push   0x2
10050142:	lea    eax,[ebp-0x4]
10050145:	push   eax
10050146:	push   DWORD PTR [ebp+0xc]
10050149:	mov    edi,ebx
1005014b:	mov    ebx,DWORD PTR [ebp+0x8]
1005014e:	mov    WORD PTR [ebp-0x4],bx
10050152:	call   0x1004cf63
10050157:	add    esp,0xc
1005015a:	mov    DWORD PTR [ebp-0x4],eax
1005015d:	cmp    DWORD PTR [ebp-0x4],edi
10050160:	je     0x1005016d
10050162:	or     DWORD PTR [esi+0xc],0x20
10050166:	mov    eax,0xffff
1005016b:	jmp    0x10050174
1005016d:	mov    eax,ebx
1005016f:	and    eax,0xffff
10050174:	pop    edi
10050175:	pop    ebx
10050176:	pop    esi
10050177:	leave  
10050178:	ret    
10050179:	push   ebp
1005017a:	mov    ebp,esp
1005017c:	sub    esp,0x10
1005017f:	push   ebx
10050180:	push   esi
10050181:	mov    esi,DWORD PTR [ebp+0xc]
10050184:	xor    ebx,ebx
10050186:	cmp    esi,ebx
10050188:	push   edi
10050189:	mov    edi,DWORD PTR [ebp+0x10]
1005018c:	jne    0x1005019f
1005018e:	cmp    edi,ebx
10050190:	jbe    0x1005019f
10050192:	mov    eax,DWORD PTR [ebp+0x8]
10050195:	cmp    eax,ebx
10050197:	je     0x1005019b
10050199:	mov    DWORD PTR [eax],ebx
1005019b:	xor    eax,eax
1005019d:	jmp    0x1005021e
1005019f:	mov    eax,DWORD PTR [ebp+0x8]
100501a2:	cmp    eax,ebx
100501a4:	je     0x100501a9
100501a6:	or     DWORD PTR [eax],0xffffffff
100501a9:	cmp    edi,0x7fffffff
100501af:	jbe    0x100501cc
100501b1:	call   0x10046c45
100501b6:	push   0x16
100501b8:	pop    esi
100501b9:	push   ebx
100501ba:	push   ebx
100501bb:	push   ebx
100501bc:	push   ebx
100501bd:	push   ebx
100501be:	mov    DWORD PTR [eax],esi
100501c0:	call   0x1004347c
100501c5:	add    esp,0x14
100501c8:	mov    eax,esi
100501ca:	jmp    0x1005021e
100501cc:	push   DWORD PTR [ebp+0x18]
100501cf:	lea    ecx,[ebp-0x10]
100501d2:	call   0x100455d5
100501d7:	mov    eax,DWORD PTR [ebp-0x10]
100501da:	cmp    DWORD PTR [eax+0x14],ebx
100501dd:	jne    0x10050277
100501e3:	mov    ax,WORD PTR [ebp+0x14]
100501e7:	cmp    ax,0xff
100501eb:	jbe    0x10050223
100501ed:	cmp    esi,ebx
100501ef:	je     0x10050200
100501f1:	cmp    edi,ebx
100501f3:	jbe    0x10050200
100501f5:	push   edi
100501f6:	push   ebx
100501f7:	push   esi
100501f8:	call   0x10045cf0
100501fd:	add    esp,0xc
10050200:	call   0x10046c45
10050205:	mov    DWORD PTR [eax],0x2a
1005020b:	call   0x10046c45
10050210:	cmp    BYTE PTR [ebp-0x4],bl
10050213:	mov    eax,DWORD PTR [eax]
10050215:	je     0x1005021e
10050217:	mov    ecx,DWORD PTR [ebp-0x8]
1005021a:	and    DWORD PTR [ecx+0x70],0xfffffffd
1005021e:	pop    edi
1005021f:	pop    esi
10050220:	pop    ebx
10050221:	leave  
10050222:	ret    
10050223:	cmp    esi,ebx
10050225:	je     0x10050255
10050227:	cmp    edi,ebx
10050229:	ja     0x10050253
1005022b:	call   0x10046c45
10050230:	push   0x22
10050232:	pop    esi
10050233:	push   ebx
10050234:	push   ebx
10050235:	push   ebx
10050236:	push   ebx
10050237:	push   ebx
10050238:	mov    DWORD PTR [eax],esi
1005023a:	call   0x1004347c
1005023f:	add    esp,0x14
10050242:	cmp    BYTE PTR [ebp-0x4],bl
10050245:	je     0x100501c8
10050247:	mov    eax,DWORD PTR [ebp-0x8]
1005024a:	and    DWORD PTR [eax+0x70],0xfffffffd
1005024e:	jmp    0x100501c8
10050253:	mov    BYTE PTR [esi],al
10050255:	mov    eax,DWORD PTR [ebp+0x8]
10050258:	cmp    eax,ebx
1005025a:	je     0x10050262
1005025c:	mov    DWORD PTR [eax],0x1
10050262:	cmp    BYTE PTR [ebp-0x4],bl
10050265:	je     0x1005019b
1005026b:	mov    eax,DWORD PTR [ebp-0x8]
1005026e:	and    DWORD PTR [eax+0x70],0xfffffffd
10050272:	jmp    0x1005019b
10050277:	lea    ecx,[ebp+0xc]
1005027a:	push   ecx
1005027b:	push   ebx
1005027c:	push   edi
1005027d:	push   esi
1005027e:	push   0x1
10050280:	lea    ecx,[ebp+0x14]
10050283:	push   ecx
10050284:	push   ebx
10050285:	mov    DWORD PTR [ebp+0xc],ebx
10050288:	push   DWORD PTR [eax+0x4]
1005028b:	call   DWORD PTR ds:0x100660b8
10050291:	cmp    eax,ebx
10050293:	je     0x100502a9
10050295:	cmp    DWORD PTR [ebp+0xc],ebx
10050298:	jne    0x10050200
1005029e:	mov    ecx,DWORD PTR [ebp+0x8]
100502a1:	cmp    ecx,ebx
100502a3:	je     0x10050262
100502a5:	mov    DWORD PTR [ecx],eax
100502a7:	jmp    0x10050262
100502a9:	call   DWORD PTR ds:0x100660cc
100502af:	cmp    eax,0x7a
100502b2:	jne    0x10050200
100502b8:	cmp    esi,ebx
100502ba:	je     0x1005022b
100502c0:	cmp    edi,ebx
100502c2:	jbe    0x1005022b
100502c8:	push   edi
100502c9:	push   ebx
100502ca:	push   esi
100502cb:	call   0x10045cf0
100502d0:	add    esp,0xc
100502d3:	jmp    0x1005022b
100502d8:	push   0x0
100502da:	push   DWORD PTR [esp+0x14]
100502de:	push   DWORD PTR [esp+0x14]
100502e2:	push   DWORD PTR [esp+0x14]
100502e6:	push   DWORD PTR [esp+0x14]
100502ea:	call   0x10050179
100502ef:	add    esp,0x14
100502f2:	ret    
100502f3:	push   ebp
100502f4:	mov    ebp,esp
100502f6:	sub    esp,0x10
100502f9:	mov    eax,ds:0x1007e030
100502fe:	xor    eax,ebp
10050300:	mov    DWORD PTR [ebp-0x4],eax
10050303:	cmp    DWORD PTR [ebp+0x14],0xffffffff
10050307:	push   ebx
10050308:	push   esi
10050309:	push   edi
1005030a:	jge    0x10050313
1005030c:	xor    eax,eax
1005030e:	jmp    0x10050505
10050313:	mov    eax,ds:0x10080550
10050318:	mov    esi,DWORD PTR ds:0x10066234
1005031e:	xor    ebx,ebx
10050320:	xor    edi,edi
10050322:	inc    ebx
10050323:	cmp    eax,edi
10050325:	jne    0x1005035a
10050327:	lea    eax,[ebp-0x8]
1005032a:	push   eax
1005032b:	push   ebx
1005032c:	push   0x10066cc8
10050331:	push   ebx
10050332:	call   esi
10050334:	test   eax,eax
10050336:	je     0x10050340
10050338:	mov    DWORD PTR ds:0x10080550,ebx
1005033e:	jmp    0x1005035e
10050340:	call   DWORD PTR ds:0x100660cc
10050346:	cmp    eax,0x78
10050349:	jne    0x10050355
1005034b:	push   0x2
1005034d:	pop    eax
1005034e:	mov    ds:0x10080550,eax
10050353:	jmp    0x1005035a
10050355:	mov    eax,ds:0x10080550
1005035a:	cmp    eax,ebx
1005035c:	jne    0x10050371
1005035e:	push   DWORD PTR [ebp+0x18]
10050361:	push   DWORD PTR [ebp+0x14]
10050364:	push   DWORD PTR [ebp+0x10]
10050367:	push   DWORD PTR [ebp+0xc]
1005036a:	call   esi
1005036c:	jmp    0x10050505
10050371:	cmp    eax,0x2
10050374:	je     0x1005037a
10050376:	cmp    eax,edi
10050378:	jne    0x1005030c
1005037a:	cmp    DWORD PTR [ebp+0x20],edi
1005037d:	mov    DWORD PTR [ebp-0xc],edi
10050380:	jne    0x1005038d
10050382:	mov    eax,DWORD PTR [ebp+0x8]
10050385:	mov    eax,DWORD PTR [eax]
10050387:	mov    eax,DWORD PTR [eax+0x14]
1005038a:	mov    DWORD PTR [ebp+0x20],eax
1005038d:	cmp    DWORD PTR [ebp+0x1c],edi
10050390:	jne    0x1005039d
10050392:	mov    eax,DWORD PTR [ebp+0x8]
10050395:	mov    eax,DWORD PTR [eax]
10050397:	mov    eax,DWORD PTR [eax+0x4]
1005039a:	mov    DWORD PTR [ebp+0x1c],eax
1005039d:	push   DWORD PTR [ebp+0x20]
100503a0:	call   0x1004f524
100503a5:	cmp    DWORD PTR [ebp+0x1c],eax
100503a8:	pop    ecx
100503a9:	je     0x100503b3
100503ab:	cmp    eax,0xffffffff
100503ae:	je     0x100503b3
100503b0:	mov    DWORD PTR [ebp+0x1c],eax
100503b3:	mov    ebx,DWORD PTR ds:0x100660b8
100503b9:	push   edi
100503ba:	push   edi
100503bb:	push   edi
100503bc:	push   edi
100503bd:	push   DWORD PTR [ebp+0x14]
100503c0:	push   DWORD PTR [ebp+0x10]
100503c3:	push   edi
100503c4:	push   DWORD PTR [ebp+0x1c]
100503c7:	call   ebx
100503c9:	mov    esi,eax
100503cb:	cmp    esi,edi
100503cd:	mov    DWORD PTR [ebp-0x10],esi
100503d0:	je     0x1005030c
100503d6:	jle    0x10050413
100503d8:	cmp    esi,0xffffffe0
100503db:	ja     0x10050413
100503dd:	lea    eax,[esi+0x8]
100503e0:	cmp    eax,0x400
100503e5:	ja     0x100503fa
100503e7:	call   0x1004b7e0
100503ec:	mov    eax,esp
100503ee:	cmp    eax,edi
100503f0:	je     0x1005040e
100503f2:	mov    DWORD PTR [eax],0xcccc
100503f8:	jmp    0x1005040b
100503fa:	push   eax
100503fb:	call   0x1004507d
10050400:	cmp    eax,edi
10050402:	pop    ecx
10050403:	je     0x1005040e
10050405:	mov    DWORD PTR [eax],0xdddd
1005040b:	add    eax,0x8
1005040e:	mov    DWORD PTR [ebp-0x8],eax
10050411:	jmp    0x10050416
10050413:	mov    DWORD PTR [ebp-0x8],edi
10050416:	cmp    DWORD PTR [ebp-0x8],edi
10050419:	je     0x1005030c
1005041f:	push   esi
10050420:	push   edi
10050421:	push   DWORD PTR [ebp-0x8]
10050424:	call   0x10045cf0
10050429:	add    esp,0xc
1005042c:	push   edi
1005042d:	push   edi
1005042e:	push   esi
1005042f:	push   DWORD PTR [ebp-0x8]
10050432:	push   DWORD PTR [ebp+0x14]
10050435:	push   DWORD PTR [ebp+0x10]
10050438:	push   edi
10050439:	push   DWORD PTR [ebp+0x1c]
1005043c:	call   ebx
1005043e:	test   eax,eax
10050440:	je     0x100504f9
10050446:	lea    eax,[esi+0x1]
10050449:	cmp    eax,edi
1005044b:	jle    0x10050491
1005044d:	cmp    eax,0x7ffffff0
10050452:	ja     0x10050491
10050454:	lea    eax,[esi+esi*1+0xa]
10050458:	cmp    eax,0x400
1005045d:	ja     0x10050479
1005045f:	call   0x1004b7e0
10050464:	mov    ebx,esp
10050466:	cmp    ebx,edi
10050468:	je     0x100504f9
1005046e:	mov    DWORD PTR [ebx],0xcccc
10050474:	add    ebx,0x8
10050477:	jmp    0x10050493
10050479:	push   eax
1005047a:	call   0x1004507d
1005047f:	cmp    eax,edi
10050481:	pop    ecx
10050482:	je     0x1005048d
10050484:	mov    DWORD PTR [eax],0xdddd
1005048a:	add    eax,0x8
1005048d:	mov    ebx,eax
1005048f:	jmp    0x10050493
10050491:	xor    ebx,ebx
10050493:	cmp    ebx,edi
10050495:	je     0x100504f9
10050497:	cmp    DWORD PTR [ebp+0x20],edi
1005049a:	jne    0x100504a7
1005049c:	mov    eax,DWORD PTR [ebp+0x8]
1005049f:	mov    eax,DWORD PTR [eax]
100504a1:	mov    eax,DWORD PTR [eax+0x14]
100504a4:	mov    DWORD PTR [ebp+0x20],eax
100504a7:	mov    edi,DWORD PTR [ebp+0x14]
100504aa:	push   ebx
100504ab:	push   DWORD PTR [ebp-0x10]
100504ae:	add    edi,edi
100504b0:	push   DWORD PTR [ebp-0x8]
100504b3:	lea    esi,[edi+ebx*1]
100504b6:	push   DWORD PTR [ebp+0xc]
100504b9:	or     WORD PTR [esi],0xffff
100504be:	push   DWORD PTR [ebp+0x20]
100504c1:	or     WORD PTR [esi-0x2],0xffff
100504c7:	call   DWORD PTR ds:0x10066230
100504cd:	cmp    WORD PTR [esi-0x2],0xffff
100504d3:	mov    DWORD PTR [ebp-0xc],eax
100504d6:	je     0x100504ee
100504d8:	cmp    WORD PTR [esi],0xffff
100504dd:	jne    0x100504ee
100504df:	push   edi
100504e0:	push   ebx
100504e1:	push   DWORD PTR [ebp+0x18]
100504e4:	call   0x100457b0
100504e9:	add    esp,0xc
100504ec:	jmp    0x100504f2
100504ee:	and    DWORD PTR [ebp-0xc],0x0
100504f2:	push   ebx
100504f3:	call   0x1001b6bb
100504f8:	pop    ecx
100504f9:	push   DWORD PTR [ebp-0x8]
100504fc:	call   0x1001b6bb
10050501:	mov    eax,DWORD PTR [ebp-0xc]
10050504:	pop    ecx
10050505:	lea    esp,[ebp-0x1c]
10050508:	pop    edi
10050509:	pop    esi
1005050a:	pop    ebx
1005050b:	mov    ecx,DWORD PTR [ebp-0x4]
1005050e:	xor    ecx,ebp
10050510:	call   0x10042f87
10050515:	leave  
10050516:	ret    
10050517:	push   ebp
10050518:	mov    ebp,esp
1005051a:	sub    esp,0x10
1005051d:	push   DWORD PTR [ebp+0x8]
10050520:	lea    ecx,[ebp-0x10]
10050523:	call   0x100455d5
10050528:	push   DWORD PTR [ebp+0x20]
1005052b:	lea    eax,[ebp-0x10]
1005052e:	push   DWORD PTR [ebp+0x1c]
10050531:	push   DWORD PTR [ebp+0x18]
10050534:	push   DWORD PTR [ebp+0x14]
10050537:	push   DWORD PTR [ebp+0x10]
1005053a:	push   DWORD PTR [ebp+0xc]
1005053d:	push   eax
1005053e:	call   0x100502f3
10050543:	add    esp,0x1c
10050546:	cmp    BYTE PTR [ebp-0x4],0x0
1005054a:	je     0x10050553
1005054c:	mov    ecx,DWORD PTR [ebp-0x8]
1005054f:	and    DWORD PTR [ecx+0x70],0xfffffffd
10050553:	leave  
10050554:	ret    
10050555:	xor    eax,eax
10050557:	push   eax
10050558:	push   eax
10050559:	push   0x3
1005055b:	push   eax
1005055c:	push   0x3
1005055e:	push   0x40000000
10050563:	push   0x10067ebc
10050568:	call   DWORD PTR ds:0x10066254
1005056e:	mov    ds:0x1007ef74,eax
10050573:	ret    
10050574:	mov    eax,ds:0x1007ef74
10050579:	cmp    eax,0xffffffff
1005057c:	push   esi
1005057d:	mov    esi,DWORD PTR ds:0x10066070
10050583:	je     0x1005058d
10050585:	cmp    eax,0xfffffffe
10050588:	je     0x1005058d
1005058a:	push   eax
1005058b:	call   esi
1005058d:	mov    eax,ds:0x1007ef70
10050592:	cmp    eax,0xffffffff
10050595:	je     0x1005059f
10050597:	cmp    eax,0xfffffffe
1005059a:	je     0x1005059f
1005059c:	push   eax
1005059d:	call   esi
1005059f:	pop    esi
100505a0:	ret    
100505a1:	push   ebx
100505a2:	push   esi
100505a3:	mov    esi,DWORD PTR [esp+0xc]
100505a7:	push   edi
100505a8:	xor    edi,edi
100505aa:	or     ebx,0xffffffff
100505ad:	cmp    esi,edi
100505af:	jne    0x100505ce
100505b1:	call   0x10046c45
100505b6:	push   edi
100505b7:	push   edi
100505b8:	push   edi
100505b9:	push   edi
100505ba:	push   edi
100505bb:	mov    DWORD PTR [eax],0x16
100505c1:	call   0x1004347c
100505c6:	add    esp,0x14
100505c9:	or     eax,0xffffffff
100505cc:	jmp    0x10050610
100505ce:	test   BYTE PTR [esi+0xc],0x83
100505d2:	je     0x1005060b
100505d4:	push   esi
100505d5:	call   0x1004fe82
100505da:	push   esi
100505db:	mov    ebx,eax
100505dd:	call   0x10050942
100505e2:	push   esi
100505e3:	call   0x1004d25c
100505e8:	push   eax
100505e9:	call   0x10050875
100505ee:	add    esp,0x10
100505f1:	test   eax,eax
100505f3:	jge    0x100505fa
100505f5:	or     ebx,0xffffffff
100505f8:	jmp    0x1005060b
100505fa:	mov    eax,DWORD PTR [esi+0x1c]
100505fd:	cmp    eax,edi
100505ff:	je     0x1005060b
10050601:	push   eax
10050602:	call   0x100435f8
10050607:	pop    ecx
10050608:	mov    DWORD PTR [esi+0x1c],edi
1005060b:	mov    DWORD PTR [esi+0xc],edi
1005060e:	mov    eax,ebx
10050610:	pop    edi
10050611:	pop    esi
10050612:	pop    ebx
10050613:	ret    
10050614:	push   0xc
10050616:	push   0x10074a40
1005061b:	call   0x10046d84
10050620:	or     DWORD PTR [ebp-0x1c],0xffffffff
10050624:	xor    eax,eax
10050626:	mov    esi,DWORD PTR [ebp+0x8]
10050629:	xor    edi,edi
1005062b:	cmp    esi,edi
1005062d:	setne  al
10050630:	cmp    eax,edi
10050632:	jne    0x10050651
10050634:	call   0x10046c45
10050639:	mov    DWORD PTR [eax],0x16
1005063f:	push   edi
10050640:	push   edi
10050641:	push   edi
10050642:	push   edi
10050643:	push   edi
10050644:	call   0x1004347c
10050649:	add    esp,0x14
1005064c:	or     eax,0xffffffff
1005064f:	jmp    0x1005065d
10050651:	test   BYTE PTR [esi+0xc],0x40
10050655:	je     0x10050663
10050657:	mov    DWORD PTR [esi+0xc],edi
1005065a:	mov    eax,DWORD PTR [ebp-0x1c]
1005065d:	call   0x10046dc9
10050662:	ret    
10050663:	push   esi
10050664:	call   0x1004d1b8
10050669:	pop    ecx
1005066a:	mov    DWORD PTR [ebp-0x4],edi
1005066d:	push   esi
1005066e:	call   0x100505a1
10050673:	pop    ecx
10050674:	mov    DWORD PTR [ebp-0x1c],eax
10050677:	mov    DWORD PTR [ebp-0x4],0xfffffffe
1005067e:	call   0x10050688
10050683:	jmp    0x1005065a
10050685:	mov    esi,DWORD PTR [ebp+0x8]
10050688:	push   esi
10050689:	call   0x1004d20a
1005068e:	pop    ecx
1005068f:	ret    
10050690:	push   0x10
10050692:	push   0x10074a60
10050697:	call   0x10046d84
1005069c:	mov    eax,DWORD PTR [ebp+0x8]
1005069f:	cmp    eax,0xfffffffe
100506a2:	jne    0x100506b7
100506a4:	call   0x10046c45
100506a9:	mov    DWORD PTR [eax],0x9
100506af:	or     eax,0xffffffff
100506b2:	jmp    0x10050761
100506b7:	xor    ebx,ebx
100506b9:	cmp    eax,ebx
100506bb:	jl     0x100506c5
100506bd:	cmp    eax,DWORD PTR ds:0x10082464
100506c3:	jb     0x100506df
100506c5:	call   0x10046c45
100506ca:	mov    DWORD PTR [eax],0x9
100506d0:	push   ebx
100506d1:	push   ebx
100506d2:	push   ebx
100506d3:	push   ebx
100506d4:	push   ebx
100506d5:	call   0x1004347c
100506da:	add    esp,0x14
100506dd:	jmp    0x100506af
100506df:	mov    ecx,eax
100506e1:	sar    ecx,0x5
100506e4:	lea    edi,[ecx*4+0x10082480]
100506eb:	mov    esi,eax
100506ed:	and    esi,0x1f
100506f0:	imul   esi,esi,0x28
100506f3:	mov    ecx,DWORD PTR [edi]
100506f5:	movzx  ecx,BYTE PTR [esi+ecx*1+0x4]
100506fa:	and    ecx,0x1
100506fd:	je     0x100506c5
100506ff:	push   eax
10050700:	call   0x1004fac0
10050705:	pop    ecx
10050706:	mov    DWORD PTR [ebp-0x4],ebx
10050709:	mov    eax,DWORD PTR [edi]
1005070b:	test   BYTE PTR [esi+eax*1+0x4],0x1
10050710:	je     0x10050743
10050712:	push   DWORD PTR [ebp+0x8]
10050715:	call   0x1004fa4f
1005071a:	pop    ecx
1005071b:	push   eax
1005071c:	call   DWORD PTR ds:0x100660d8
10050722:	test   eax,eax
10050724:	jne    0x10050731
10050726:	call   DWORD PTR ds:0x100660cc
1005072c:	mov    DWORD PTR [ebp-0x1c],eax
1005072f:	jmp    0x10050734
10050731:	mov    DWORD PTR [ebp-0x1c],ebx
10050734:	cmp    DWORD PTR [ebp-0x1c],ebx
10050737:	je     0x10050752
10050739:	call   0x10046c58
1005073e:	mov    ecx,DWORD PTR [ebp-0x1c]
10050741:	mov    DWORD PTR [eax],ecx
10050743:	call   0x10046c45
10050748:	mov    DWORD PTR [eax],0x9
1005074e:	or     DWORD PTR [ebp-0x1c],0xffffffff
10050752:	mov    DWORD PTR [ebp-0x4],0xfffffffe
10050759:	call   0x10050767
1005075e:	mov    eax,DWORD PTR [ebp-0x1c]
10050761:	call   0x10046dc9
10050766:	ret    
10050767:	push   DWORD PTR [ebp+0x8]
1005076a:	call   0x1004fb60
1005076f:	pop    ecx
10050770:	ret    
10050771:	int3   
10050772:	int3   
10050773:	int3   
10050774:	int3   
10050775:	int3   
10050776:	int3   
10050777:	int3   
10050778:	int3   
10050779:	int3   
1005077a:	int3   
1005077b:	int3   
1005077c:	int3   
1005077d:	int3   
1005077e:	int3   
1005077f:	int3   
10050780:	push   ebp
10050781:	mov    ebp,esp
10050783:	push   edi
10050784:	push   esi
10050785:	push   ebx
10050786:	mov    ecx,DWORD PTR [ebp+0x10]
10050789:	or     ecx,ecx
1005078b:	je     0x100507da
1005078d:	mov    esi,DWORD PTR [ebp+0x8]
10050790:	mov    edi,DWORD PTR [ebp+0xc]
10050793:	mov    bh,0x41
10050795:	mov    bl,0x5a
10050797:	mov    dh,0x20
10050799:	lea    ecx,[ecx+0x0]
1005079c:	mov    ah,BYTE PTR [esi]
1005079e:	or     ah,ah
100507a0:	mov    al,BYTE PTR [edi]
100507a2:	je     0x100507cb
100507a4:	or     al,al
100507a6:	je     0x100507cb
100507a8:	add    esi,0x1
100507ab:	add    edi,0x1
100507ae:	cmp    ah,bh
100507b0:	jb     0x100507b8
100507b2:	cmp    ah,bl
100507b4:	ja     0x100507b8
100507b6:	add    ah,dh
100507b8:	cmp    al,bh
100507ba:	jb     0x100507c2
100507bc:	cmp    al,bl
100507be:	ja     0x100507c2
100507c0:	add    al,dh
100507c2:	cmp    ah,al
100507c4:	jne    0x100507d1
100507c6:	sub    ecx,0x1
100507c9:	jne    0x1005079c
100507cb:	xor    ecx,ecx
100507cd:	cmp    ah,al
100507cf:	je     0x100507da
100507d1:	mov    ecx,0xffffffff
100507d6:	jb     0x100507da
100507d8:	neg    ecx
100507da:	mov    eax,ecx
100507dc:	pop    ebx
100507dd:	pop    esi
100507de:	pop    edi
100507df:	leave  
100507e0:	ret    
100507e1:	push   esi
100507e2:	mov    esi,DWORD PTR [esp+0x8]
100507e6:	push   edi
100507e7:	push   esi
100507e8:	call   0x1004fa4f
100507ed:	cmp    eax,0xffffffff
100507f0:	pop    ecx
100507f1:	je     0x10050840
100507f3:	cmp    esi,0x1
100507f6:	mov    eax,ds:0x10082480
100507fb:	jne    0x10050803
100507fd:	test   BYTE PTR [eax+0x54],0x1
10050801:	jne    0x1005080e
10050803:	cmp    esi,0x2
10050806:	jne    0x10050824
10050808:	test   BYTE PTR [eax+0x2c],0x1
1005080c:	je     0x10050824
1005080e:	push   0x2
10050810:	call   0x1004fa4f
10050815:	push   0x1
10050817:	mov    edi,eax
10050819:	call   0x1004fa4f
1005081e:	cmp    eax,edi
10050820:	pop    ecx
10050821:	pop    ecx
10050822:	je     0x10050840
10050824:	push   esi
10050825:	call   0x1004fa4f
1005082a:	pop    ecx
1005082b:	push   eax
1005082c:	call   DWORD PTR ds:0x10066070
10050832:	test   eax,eax
10050834:	jne    0x10050840
10050836:	call   DWORD PTR ds:0x100660cc
1005083c:	mov    edi,eax
1005083e:	jmp    0x10050842
10050840:	xor    edi,edi
10050842:	push   esi
10050843:	call   0x1004f9ce
10050848:	mov    eax,esi
1005084a:	and    esi,0x1f
1005084d:	imul   esi,esi,0x28
10050850:	sar    eax,0x5
10050853:	test   edi,edi
10050855:	mov    eax,DWORD PTR [eax*4+0x10082480]
1005085c:	pop    ecx
1005085d:	mov    BYTE PTR [eax+esi*1+0x4],0x0
10050862:	je     0x10050870
10050864:	push   edi
10050865:	call   0x10046c6b
1005086a:	pop    ecx
1005086b:	or     eax,0xffffffff
1005086e:	jmp    0x10050872
10050870:	xor    eax,eax
10050872:	pop    edi
10050873:	pop    esi
10050874:	ret    
10050875:	push   0x10
10050877:	push   0x10074a80
1005087c:	call   0x10046d84
10050881:	mov    eax,DWORD PTR [ebp+0x8]
10050884:	cmp    eax,0xfffffffe
10050887:	jne    0x100508a4
10050889:	call   0x10046c58
1005088e:	and    DWORD PTR [eax],0x0
10050891:	call   0x10046c45
10050896:	mov    DWORD PTR [eax],0x9
1005089c:	or     eax,0xffffffff
1005089f:	jmp    0x10050932
100508a4:	xor    edi,edi
100508a6:	cmp    eax,edi
100508a8:	jl     0x100508b2
100508aa:	cmp    eax,DWORD PTR ds:0x10082464
100508b0:	jb     0x100508d3
100508b2:	call   0x10046c58
100508b7:	mov    DWORD PTR [eax],edi
100508b9:	call   0x10046c45
100508be:	mov    DWORD PTR [eax],0x9
100508c4:	push   edi
100508c5:	push   edi
100508c6:	push   edi
100508c7:	push   edi
100508c8:	push   edi
100508c9:	call   0x1004347c
100508ce:	add    esp,0x14
100508d1:	jmp    0x1005089c
100508d3:	mov    ecx,eax
100508d5:	sar    ecx,0x5
100508d8:	lea    ebx,[ecx*4+0x10082480]
100508df:	mov    esi,eax
100508e1:	and    esi,0x1f
100508e4:	imul   esi,esi,0x28
100508e7:	mov    ecx,DWORD PTR [ebx]
100508e9:	movzx  ecx,BYTE PTR [ecx+esi*1+0x4]
100508ee:	and    ecx,0x1
100508f1:	je     0x100508b2
100508f3:	push   eax
100508f4:	call   0x1004fac0
100508f9:	pop    ecx
100508fa:	mov    DWORD PTR [ebp-0x4],edi
100508fd:	mov    eax,DWORD PTR [ebx]
100508ff:	test   BYTE PTR [eax+esi*1+0x4],0x1
10050904:	je     0x10050914
10050906:	push   DWORD PTR [ebp+0x8]
10050909:	call   0x100507e1
1005090e:	pop    ecx
1005090f:	mov    DWORD PTR [ebp-0x1c],eax
10050912:	jmp    0x10050923
10050914:	call   0x10046c45
10050919:	mov    DWORD PTR [eax],0x9
1005091f:	or     DWORD PTR [ebp-0x1c],0xffffffff
10050923:	mov    DWORD PTR [ebp-0x4],0xfffffffe
1005092a:	call   0x10050938
1005092f:	mov    eax,DWORD PTR [ebp-0x1c]
10050932:	call   0x10046dc9
10050937:	ret    
10050938:	push   DWORD PTR [ebp+0x8]
1005093b:	call   0x1004fb60
10050940:	pop    ecx
10050941:	ret    
10050942:	push   esi
10050943:	mov    esi,DWORD PTR [esp+0x8]
10050947:	mov    eax,DWORD PTR [esi+0xc]
1005094a:	test   al,0x83
1005094c:	je     0x1005096c
1005094e:	test   al,0x8
10050950:	je     0x1005096c
10050952:	push   DWORD PTR [esi+0x8]
10050955:	call   0x100435f8
1005095a:	and    DWORD PTR [esi+0xc],0xfffffbf7
10050961:	xor    eax,eax
10050963:	pop    ecx
10050964:	mov    DWORD PTR [esi],eax
10050966:	mov    DWORD PTR [esi+0x8],eax
10050969:	mov    DWORD PTR [esi+0x4],eax
1005096c:	pop    esi
1005096d:	ret    
1005096e:	xor    eax,eax
10050970:	cmp    DWORD PTR [esp+0x8],eax
10050974:	jbe    0x10050987
10050976:	mov    ecx,DWORD PTR [esp+0x4]
1005097a:	cmp    BYTE PTR [ecx],0x0
1005097d:	je     0x10050987
1005097f:	inc    eax
10050980:	inc    ecx
10050981:	cmp    eax,DWORD PTR [esp+0x8]
10050985:	jb     0x1005097a
10050987:	ret    
10050988:	int3   
10050989:	int3   
1005098a:	int3   
1005098b:	int3   
1005098c:	int3   
1005098d:	int3   
1005098e:	int3   
1005098f:	int3   
10050990:	push   ebp
10050991:	mov    ebp,esp
10050993:	push   0xfffffffe
10050995:	push   0x10074aa0
1005099a:	push   0x10046de0
1005099f:	mov    eax,fs:0x0
100509a5:	push   eax
100509a6:	sub    esp,0x18
100509a9:	mov    eax,ds:0x1007e030
100509ae:	xor    DWORD PTR [ebp-0x8],eax
100509b1:	xor    eax,ebp
100509b3:	mov    DWORD PTR [ebp-0x1c],eax
100509b6:	push   ebx
100509b7:	push   esi
100509b8:	push   edi
100509b9:	push   eax
100509ba:	lea    eax,[ebp-0x10]
100509bd:	mov    fs:0x0,eax
100509c3:	mov    DWORD PTR [ebp-0x18],esp
100509c6:	mov    esi,DWORD PTR [ebp+0x8]
100509c9:	test   esi,esi
100509cb:	je     0x10050a22
100509cd:	push   esi
100509ce:	call   DWORD PTR ds:0x100660dc
100509d4:	mov    edi,eax
100509d6:	add    edi,0x1
100509d9:	mov    DWORD PTR [ebp-0x20],edi
100509dc:	push   0x0
100509de:	push   0x0
100509e0:	push   edi
100509e1:	push   esi
100509e2:	push   0x0
100509e4:	push   0x0
100509e6:	call   DWORD PTR ds:0x1006608c
100509ec:	mov    esi,eax
100509ee:	mov    DWORD PTR [ebp-0x28],esi
100509f1:	test   esi,esi
100509f3:	jne    0x10050a29
100509f5:	mov    esi,DWORD PTR ds:0x100660cc
100509fb:	call   esi
100509fd:	test   eax,eax
100509ff:	jg     0x10050a10
10050a01:	call   esi
10050a03:	push   eax
10050a04:	call   0x10050c80
10050a09:	xor    eax,eax
10050a0b:	jmp    0x10050af0
10050a10:	call   esi
10050a12:	and    eax,0xffff
10050a17:	or     eax,0x80070000
10050a1c:	push   eax
10050a1d:	call   0x10050c80
10050a22:	xor    eax,eax
10050a24:	jmp    0x10050af0
10050a29:	mov    DWORD PTR [ebp-0x4],0x0
10050a30:	lea    eax,[esi+esi*1]
10050a33:	cmp    esi,0x1000
10050a39:	jge    0x10050a53
10050a3b:	call   0x1004b7e0
10050a40:	mov    DWORD PTR [ebp-0x18],esp
10050a43:	mov    eax,esp
10050a45:	mov    ebx,eax
10050a47:	mov    DWORD PTR [ebp-0x24],ebx
10050a4a:	mov    DWORD PTR [ebp-0x4],0xfffffffe
10050a51:	jmp    0x10050a85
10050a53:	push   eax
10050a54:	call   0x1004507d
10050a59:	add    esp,0x4
10050a5c:	mov    ebx,eax
10050a5e:	mov    DWORD PTR [ebp-0x24],ebx
10050a61:	mov    DWORD PTR [ebp-0x4],0xfffffffe
10050a68:	jmp    0x10050a85
10050a6a:	mov    eax,0x1
10050a6f:	ret    
10050a70:	mov    esp,DWORD PTR [ebp-0x18]
10050a73:	xor    ebx,ebx
10050a75:	mov    DWORD PTR [ebp-0x24],ebx
10050a78:	mov    DWORD PTR [ebp-0x4],0xfffffffe
10050a7f:	mov    edi,DWORD PTR [ebp-0x20]
10050a82:	mov    esi,DWORD PTR [ebp-0x28]
10050a85:	test   ebx,ebx
10050a87:	jne    0x10050a97
10050a89:	push   0x8007000e
10050a8e:	call   0x10050c80
10050a93:	xor    eax,eax
10050a95:	jmp    0x10050af0
10050a97:	push   esi
10050a98:	push   ebx
10050a99:	push   edi
10050a9a:	mov    ecx,DWORD PTR [ebp+0x8]
10050a9d:	push   ecx
10050a9e:	push   0x0
10050aa0:	push   0x0
10050aa2:	call   DWORD PTR ds:0x1006608c
10050aa8:	test   eax,eax
10050aaa:	jne    0x10050ac6
10050aac:	cmp    esi,0x1000
10050ab2:	jl     0x100509f5
10050ab8:	push   ebx
10050ab9:	call   0x100435f8
10050abe:	add    esp,0x4
10050ac1:	jmp    0x100509f5
10050ac6:	push   ebx
10050ac7:	call   DWORD PTR ds:0x100662b0
10050acd:	mov    edi,eax
10050acf:	cmp    esi,0x1000
10050ad5:	jl     0x10050ae0
10050ad7:	push   ebx
10050ad8:	call   0x100435f8
10050add:	add    esp,0x4
10050ae0:	test   edi,edi
10050ae2:	jne    0x10050aee
10050ae4:	push   0x8007000e
10050ae9:	call   0x10050c80
10050aee:	mov    eax,edi
10050af0:	lea    esp,[ebp-0x38]
10050af3:	mov    ecx,DWORD PTR [ebp-0x10]
10050af6:	mov    DWORD PTR fs:0x0,ecx
10050afd:	pop    ecx
10050afe:	pop    edi
10050aff:	pop    esi
10050b00:	pop    ebx
10050b01:	mov    ecx,DWORD PTR [ebp-0x1c]
10050b04:	xor    ecx,ebp
10050b06:	call   0x10042f87
10050b0b:	mov    esp,ebp
10050b0d:	pop    ebp
10050b0e:	ret    0x4
10050b11:	int3   
10050b12:	int3   
10050b13:	int3   
10050b14:	int3   
10050b15:	int3   
10050b16:	int3   
10050b17:	int3   
10050b18:	int3   
10050b19:	int3   
10050b1a:	int3   
10050b1b:	int3   
10050b1c:	int3   
10050b1d:	int3   
10050b1e:	int3   
10050b1f:	int3   
10050b20:	push   ebp
10050b21:	mov    ebp,esp
10050b23:	push   0xffffffff
10050b25:	push   0x1005f660
10050b2a:	mov    eax,fs:0x0
10050b30:	push   eax
10050b31:	push   ecx
10050b32:	push   ebx
10050b33:	push   esi
10050b34:	push   edi
10050b35:	mov    eax,ds:0x1007e030
10050b3a:	xor    eax,ebp
10050b3c:	push   eax
10050b3d:	lea    eax,[ebp-0xc]
10050b40:	mov    fs:0x0,eax
10050b46:	mov    DWORD PTR [ebp-0x10],esp
10050b49:	mov    edx,DWORD PTR [ebp+0x8]
10050b4c:	test   edx,edx
10050b4e:	je     0x10050bbd
10050b50:	mov    eax,edx
10050b52:	lea    esi,[eax+0x2]
10050b55:	mov    cx,WORD PTR [eax]
10050b58:	add    eax,0x2
10050b5b:	test   cx,cx
10050b5e:	jne    0x10050b55
10050b60:	push   0x0
10050b62:	push   0x0
10050b64:	push   0x0
10050b66:	sub    eax,esi
10050b68:	push   0x0
10050b6a:	sar    eax,1
10050b6c:	lea    edi,[eax+0x1]
10050b6f:	push   edi
10050b70:	push   edx
10050b71:	push   0x0
10050b73:	push   0x0
10050b75:	call   DWORD PTR ds:0x100660b8
10050b7b:	mov    esi,eax
10050b7d:	test   esi,esi
10050b7f:	jne    0x10050bd3
10050b81:	mov    esi,DWORD PTR ds:0x100660cc
10050b87:	call   esi
10050b89:	test   eax,eax
10050b8b:	jg     0x10050bab
10050b8d:	call   esi
10050b8f:	push   eax
10050b90:	call   0x10050c80
10050b95:	xor    eax,eax
10050b97:	mov    ecx,DWORD PTR [ebp-0xc]
10050b9a:	mov    DWORD PTR fs:0x0,ecx
10050ba1:	pop    ecx
10050ba2:	pop    edi
10050ba3:	pop    esi
10050ba4:	pop    ebx
10050ba5:	mov    esp,ebp
10050ba7:	pop    ebp
10050ba8:	ret    0x4
10050bab:	call   esi
10050bad:	and    eax,0xffff
10050bb2:	or     eax,0x80070000
10050bb7:	push   eax
10050bb8:	call   0x10050c80
10050bbd:	xor    eax,eax
10050bbf:	mov    ecx,DWORD PTR [ebp-0xc]
10050bc2:	mov    DWORD PTR fs:0x0,ecx
10050bc9:	pop    ecx
10050bca:	pop    edi
10050bcb:	pop    esi
10050bcc:	pop    ebx
10050bcd:	mov    esp,ebp
10050bcf:	pop    ebp
10050bd0:	ret    0x4
10050bd3:	push   esi
10050bd4:	mov    DWORD PTR [ebp-0x4],0x0
10050bdb:	call   0x1004358e
10050be0:	mov    ebx,eax
10050be2:	add    esp,0x4
10050be5:	test   ebx,ebx
10050be7:	mov    DWORD PTR [ebp-0x4],0xffffffff
10050bee:	jne    0x10050c16
10050bf0:	push   0x8007000e
10050bf5:	call   0x10050c80
10050bfa:	xor    eax,eax
10050bfc:	mov    ecx,DWORD PTR [ebp-0xc]
10050bff:	mov    DWORD PTR fs:0x0,ecx
10050c06:	pop    ecx
10050c07:	pop    edi
10050c08:	pop    esi
10050c09:	pop    ebx
10050c0a:	mov    esp,ebp
10050c0c:	pop    ebp
10050c0d:	ret    0x4
10050c10:	mov    eax,0x10050bf0
10050c15:	ret    
10050c16:	mov    eax,DWORD PTR [ebp+0x8]
10050c19:	push   0x0
10050c1b:	push   0x0
10050c1d:	push   esi
10050c1e:	push   ebx
10050c1f:	push   edi
10050c20:	push   eax
10050c21:	push   0x0
10050c23:	push   0x0
10050c25:	call   DWORD PTR ds:0x100660b8
10050c2b:	test   eax,eax
10050c2d:	jne    0x10050c5c
10050c2f:	push   ebx
10050c30:	call   0x10042f82
10050c35:	mov    esi,DWORD PTR ds:0x100660cc
10050c3b:	add    esp,0x4
10050c3e:	xor    ebx,ebx
10050c40:	call   esi
10050c42:	test   eax,eax
10050c44:	jg     0x10050c4a
10050c46:	call   esi
10050c48:	jmp    0x10050c56
10050c4a:	call   esi
10050c4c:	and    eax,0xffff
10050c51:	or     eax,0x80070000
10050c56:	push   eax
10050c57:	call   0x10050c80
10050c5c:	mov    eax,ebx
10050c5e:	mov    ecx,DWORD PTR [ebp-0xc]
10050c61:	mov    DWORD PTR fs:0x0,ecx
10050c68:	pop    ecx
10050c69:	pop    edi
10050c6a:	pop    esi
10050c6b:	pop    ebx
10050c6c:	mov    esp,ebp
10050c6e:	pop    ebp
10050c6f:	ret    0x4
10050c72:	int3   
10050c73:	int3   
10050c74:	int3   
10050c75:	int3   
10050c76:	int3   
10050c77:	int3   
10050c78:	int3   
10050c79:	int3   
10050c7a:	int3   
10050c7b:	int3   
10050c7c:	int3   
10050c7d:	int3   
10050c7e:	int3   
10050c7f:	int3   
10050c80:	mov    eax,DWORD PTR [esp+0x4]
10050c84:	push   0x0
10050c86:	push   eax
10050c87:	call   DWORD PTR ds:0x1007ef90
10050c8d:	ret    0x4
10050c90:	push   esi
10050c91:	mov    esi,ecx
10050c93:	mov    eax,DWORD PTR [esi+0x8]
10050c96:	test   eax,eax
10050c98:	mov    DWORD PTR [esi],0x10067ec8
10050c9e:	je     0x10050ca8
10050ca0:	mov    ecx,DWORD PTR [eax]
10050ca2:	mov    edx,DWORD PTR [ecx+0x8]
10050ca5:	push   eax
10050ca6:	call   edx
10050ca8:	mov    esi,DWORD PTR [esi+0xc]
10050cab:	test   esi,esi
10050cad:	je     0x10050cb6
10050caf:	push   esi
10050cb0:	call   DWORD PTR ds:0x1006622c
10050cb6:	pop    esi
10050cb7:	ret    
10050cb8:	int3   
10050cb9:	int3   
10050cba:	int3   
10050cbb:	int3   
10050cbc:	int3   
10050cbd:	int3   
10050cbe:	int3   
10050cbf:	int3   
10050cc0:	sub    esp,0x10
10050cc3:	mov    eax,DWORD PTR [esp+0x14]
10050cc7:	mov    ecx,DWORD PTR [esp+0x18]
10050ccb:	push   0x10074b14
10050cd0:	lea    edx,[esp+0x4]
10050cd4:	push   edx
10050cd5:	mov    DWORD PTR [esp+0x8],0x10067ec8
10050cdd:	mov    DWORD PTR [esp+0xc],eax
10050ce1:	mov    DWORD PTR [esp+0x10],ecx
10050ce5:	mov    DWORD PTR [esp+0x14],0x0
10050ced:	call   0x10047aa4
10050cf2:	int3   
10050cf3:	int3   
10050cf4:	int3   
10050cf5:	int3   
10050cf6:	int3   
10050cf7:	int3   
10050cf8:	int3   
10050cf9:	int3   
10050cfa:	int3   
10050cfb:	int3   
10050cfc:	int3   
10050cfd:	int3   
10050cfe:	int3   
10050cff:	int3   
10050d00:	mov    eax,DWORD PTR [esp+0x4]
10050d04:	push   esi
10050d05:	mov    esi,ecx
10050d07:	mov    DWORD PTR [esi],0x10067ec8
10050d0d:	mov    ecx,DWORD PTR [eax+0x4]
10050d10:	mov    DWORD PTR [esi+0x4],ecx
10050d13:	mov    edx,DWORD PTR [eax+0x8]
10050d16:	mov    eax,edx
10050d18:	test   eax,eax
10050d1a:	mov    DWORD PTR [esi+0x8],edx
10050d1d:	mov    DWORD PTR [esi+0xc],0x0
10050d24:	je     0x10050d2e
10050d26:	mov    ecx,DWORD PTR [eax]
10050d28:	mov    edx,DWORD PTR [ecx+0x4]
10050d2b:	push   eax
10050d2c:	call   edx
10050d2e:	mov    eax,esi
10050d30:	pop    esi
10050d31:	ret    0x4
10050d34:	int3   
10050d35:	int3   
10050d36:	int3   
10050d37:	int3   
10050d38:	int3   
10050d39:	int3   
10050d3a:	int3   
10050d3b:	int3   
10050d3c:	int3   
10050d3d:	int3   
10050d3e:	int3   
10050d3f:	int3   
10050d40:	push   esi
10050d41:	mov    esi,ecx
10050d43:	mov    eax,DWORD PTR [esi+0x8]
10050d46:	test   eax,eax
10050d48:	mov    DWORD PTR [esi],0x10067ec8
10050d4e:	je     0x10050d58
10050d50:	mov    ecx,DWORD PTR [eax]
10050d52:	mov    edx,DWORD PTR [ecx+0x8]
10050d55:	push   eax
10050d56:	call   edx
10050d58:	mov    eax,DWORD PTR [esi+0xc]
10050d5b:	test   eax,eax
10050d5d:	je     0x10050d66
10050d5f:	push   eax
10050d60:	call   DWORD PTR ds:0x1006622c
10050d66:	test   BYTE PTR [esp+0x8],0x1
10050d6b:	je     0x10050d76
10050d6d:	push   esi
10050d6e:	call   0x10042f82
10050d73:	add    esp,0x4
10050d76:	mov    eax,esi
10050d78:	pop    esi
10050d79:	ret    0x4
10050d7c:	jmp    DWORD PTR ds:0x100663d0
10050d82:	mov    eax,DWORD PTR [esp+0x4]
10050d86:	test   eax,eax
10050d88:	mov    DWORD PTR ds:0x10080558,0x1
10050d92:	mov    DWORD PTR ds:0x1008055c,0x98
10050d9c:	jne    0x10050da3
10050d9e:	mov    eax,0x10067ecc
10050da3:	push   eax
10050da4:	call   0x10050ffb
10050da9:	test   eax,eax
10050dab:	pop    ecx
10050dac:	jne    0x10050db4
10050dae:	mov    eax,0x80004005
10050db3:	ret    
10050db4:	push   ebx
10050db5:	push   esi
10050db6:	push   edi
10050db7:	push   0x0
10050db9:	mov    esi,0x10080558
10050dbe:	push   esi
10050dbf:	call   eax
10050dc1:	mov    ebx,eax
10050dc3:	mov    edi,0x80000000
10050dc8:	test   edi,ebx
10050dca:	pop    ecx
10050dcb:	pop    ecx
10050dcc:	je     0x10050dd7
10050dce:	call   0x10050fbb
10050dd3:	mov    eax,ebx
10050dd5:	jmp    0x10050df6
10050dd7:	call   0x10050f61
10050ddc:	mov    ebx,eax
10050dde:	test   edi,ebx
10050de0:	je     0x10050df4
10050de2:	push   0x98
10050de7:	push   0x0
10050de9:	push   esi
10050dea:	call   0x10045cf0
10050def:	add    esp,0xc
10050df2:	jmp    0x10050dce
10050df4:	xor    eax,eax
10050df6:	pop    edi
10050df7:	pop    esi
10050df8:	pop    ebx
10050df9:	ret    
10050dfa:	push   ebp
10050dfb:	mov    ebp,esp
10050dfd:	sub    esp,0x800
10050e03:	push   edi
10050e04:	push   DWORD PTR [ebp+0x8]
10050e07:	lea    eax,[ebp-0x400]
10050e0d:	push   0x10067ee4
10050e12:	push   eax
10050e13:	call   0x1005856f
10050e18:	lea    eax,[ebp-0x400]
10050e1e:	push   0x10067ee0
10050e23:	push   eax
10050e24:	call   0x10058d2c
10050e29:	mov    edi,eax
10050e2b:	add    esp,0x14
10050e2e:	test   edi,edi
10050e30:	je     0x10050ea9
10050e32:	push   esi
10050e33:	mov    esi,0x400
10050e38:	jmp    0x10050e8c
10050e3a:	lea    eax,[ebp-0x400]
10050e40:	push   eax
10050e41:	call   0x10043100
10050e46:	test   eax,eax
10050e48:	pop    ecx
10050e49:	je     0x10050e8c
10050e4b:	cmp    BYTE PTR [ebp-0x400],0x23
10050e52:	je     0x10050e8c
10050e54:	lea    eax,[ebp+eax*1-0x401]
10050e5b:	cmp    BYTE PTR [eax],0xa
10050e5e:	jne    0x10050e63
10050e60:	mov    BYTE PTR [eax],0x0
10050e63:	lea    eax,[ebp-0x400]
10050e69:	push   eax
10050e6a:	push   DWORD PTR [ebp+0x8]
10050e6d:	lea    eax,[ebp-0x800]
10050e73:	push   0x10067ed8
10050e78:	push   esi
10050e79:	push   eax
10050e7a:	call   0x10059805
10050e7f:	lea    eax,[ebp-0x800]
10050e85:	push   eax
10050e86:	call   DWORD PTR [ebp+0xc]
10050e89:	add    esp,0x18
10050e8c:	push   edi
10050e8d:	lea    eax,[ebp-0x400]
10050e93:	push   esi
10050e94:	push   eax
10050e95:	call   0x1005967e
10050e9a:	add    esp,0xc
10050e9d:	test   eax,eax
10050e9f:	jne    0x10050e3a
10050ea1:	push   edi
10050ea2:	call   0x10050614
10050ea7:	pop    ecx
10050ea8:	pop    esi
10050ea9:	pop    edi
10050eaa:	leave  
10050eab:	ret    
10050eac:	mov    eax,ds:0x1008056c
10050eb1:	test   eax,eax
10050eb3:	jne    0x10050ebb
10050eb5:	mov    eax,0xc1f30001
10050eba:	ret    
10050ebb:	jmp    eax
10050ebd:	mov    eax,ds:0x10080588
10050ec2:	test   eax,eax
10050ec4:	jne    0x10050ecc
10050ec6:	mov    eax,0xc1f30001
10050ecb:	ret    
10050ecc:	jmp    eax
10050ece:	mov    eax,ds:0x10080590
10050ed3:	test   eax,eax
10050ed5:	jne    0x10050edd
10050ed7:	mov    eax,0xc1f30001
10050edc:	ret    
10050edd:	jmp    eax
10050edf:	mov    eax,ds:0x10080594
10050ee4:	test   eax,eax
10050ee6:	je     0x10050eea
10050ee8:	jmp    eax
10050eea:	ret    
10050eeb:	mov    eax,ds:0x10080598
10050ef0:	test   eax,eax
10050ef2:	jne    0x10050efe
10050ef4:	mov    eax,DWORD PTR [esp+0x8]
10050ef8:	and    DWORD PTR [eax],0x0
10050efb:	xor    eax,eax
10050efd:	ret    
10050efe:	jmp    eax
10050f00:	mov    eax,ds:0x1008059c
10050f05:	test   eax,eax
10050f07:	jne    0x10050f0f
10050f09:	mov    eax,0xc1f30001
10050f0e:	ret    
10050f0f:	jmp    eax
10050f11:	mov    eax,ds:0x100805a8
10050f16:	test   eax,eax
10050f18:	jne    0x10050f20
10050f1a:	mov    eax,0xc1f30001
10050f1f:	ret    
10050f20:	jmp    eax
10050f22:	mov    eax,ds:0x100805ac
10050f27:	test   eax,eax
10050f29:	je     0x10050f2d
10050f2b:	jmp    eax
10050f2d:	ret    
10050f2e:	mov    eax,ds:0x100805b0
10050f33:	test   eax,eax
10050f35:	jne    0x10050f41
10050f37:	mov    eax,DWORD PTR [esp+0x8]
10050f3b:	and    DWORD PTR [eax],0x0
10050f3e:	xor    eax,eax
10050f40:	ret    
10050f41:	jmp    eax
10050f43:	mov    eax,ds:0x100805b4
10050f48:	test   eax,eax
10050f4a:	jne    0x10050f52
10050f4c:	mov    eax,0xc1f30001
10050f51:	ret    
10050f52:	jmp    eax
10050f54:	mov    eax,DWORD PTR [ecx]
10050f56:	test   eax,eax
10050f58:	je     0x10050f60
10050f5a:	mov    ecx,DWORD PTR [eax]
10050f5c:	push   eax
10050f5d:	call   DWORD PTR [ecx+0x8]
10050f60:	ret    
10050f61:	push   0x100805f0
10050f66:	call   0x10050ebd
10050f6b:	mov    eax,ds:0x100805f0
10050f70:	neg    eax
10050f72:	sbb    eax,eax
10050f74:	and    eax,0x7fffbffb
10050f79:	pop    ecx
10050f7a:	add    eax,0x80004005
10050f7f:	ret    
10050f80:	push   0x8
10050f82:	call   0x1004358e
10050f87:	test   eax,eax
10050f89:	pop    ecx
10050f8a:	je     0x10050fa0
10050f8c:	mov    ecx,DWORD PTR ds:0x100805f8
10050f92:	mov    DWORD PTR [eax+0x4],ecx
10050f95:	mov    ecx,DWORD PTR [esp+0x4]
10050f99:	mov    DWORD PTR [eax],ecx
10050f9b:	mov    ds:0x100805f8,eax
10050fa0:	ret    
10050fa1:	push   0x8
10050fa3:	push   0x0
10050fa5:	push   DWORD PTR [esp+0xc]
10050fa9:	call   DWORD PTR ds:0x10066060
10050faf:	test   eax,eax
10050fb1:	je     0x10050fba
10050fb3:	push   eax
10050fb4:	call   0x10050f80
10050fb9:	pop    ecx
10050fba:	ret    
10050fbb:	push   esi
10050fbc:	mov    esi,DWORD PTR ds:0x100660fc
10050fc2:	jmp    0x10050fdd
10050fc4:	push   DWORD PTR [eax]
10050fc6:	call   esi
10050fc8:	mov    eax,ds:0x100805f8
10050fcd:	mov    ecx,DWORD PTR [eax+0x4]
10050fd0:	push   eax
10050fd1:	mov    DWORD PTR ds:0x100805f8,ecx
10050fd7:	call   0x10042f82
10050fdc:	pop    ecx
10050fdd:	mov    eax,ds:0x100805f8
10050fe2:	test   eax,eax
10050fe4:	jne    0x10050fc4
10050fe6:	mov    eax,ds:0x100805f4
10050feb:	test   eax,eax
10050fed:	je     0x10050ff9
10050fef:	push   eax
10050ff0:	call   esi
10050ff2:	and    DWORD PTR ds:0x100805f4,0x0
10050ff9:	pop    esi
10050ffa:	ret    
10050ffb:	push   ebp
10050ffc:	mov    ebp,esp
10050ffe:	sub    esp,0x404
10051004:	mov    eax,DWORD PTR [ebp+0x8]
10051007:	cmp    BYTE PTR [eax],0x2e
1005100a:	push   ebx
1005100b:	mov    ebx,DWORD PTR ds:0x10066060
10051011:	push   esi
10051012:	jne    0x10051026
10051014:	cmp    BYTE PTR [eax+0x1],0x0
10051018:	jne    0x10051026
1005101a:	mov    DWORD PTR [ebp+0x8],0x10067ecc
10051021:	jmp    0x100510bb
10051026:	push   edi
10051027:	mov    esi,0x400
1005102c:	push   esi
1005102d:	push   eax
1005102e:	lea    eax,[ebp-0x404]
10051034:	push   eax
10051035:	call   0x10059a1d
1005103a:	mov    dl,BYTE PTR [ebp-0x404]
10051040:	add    esp,0xc
10051043:	xor    edi,edi
10051045:	test   dl,dl
10051047:	lea    eax,[ebp-0x404]
1005104d:	je     0x100510ba
1005104f:	mov    DWORD PTR [ebp-0x4],0x10067f20
10051056:	mov    cl,0x2f
10051058:	cmp    cl,dl
1005105a:	jne    0x1005105e
1005105c:	mov    edi,eax
1005105e:	inc    DWORD PTR [ebp-0x4]
10051061:	mov    ecx,DWORD PTR [ebp-0x4]
10051064:	mov    cl,BYTE PTR [ecx]
10051066:	test   cl,cl
10051068:	jne    0x10051058
1005106a:	inc    eax
1005106b:	mov    dl,BYTE PTR [eax]
1005106d:	test   dl,dl
1005106f:	jne    0x1005104f
10051071:	test   edi,edi
10051073:	je     0x100510ba
10051075:	lea    eax,[ebp-0x404]
1005107b:	push   0x10050fa1
10051080:	push   eax
10051081:	mov    BYTE PTR [edi],dl
10051083:	call   0x10050dfa
10051088:	pop    ecx
10051089:	pop    ecx
1005108a:	lea    eax,[ebp-0x404]
10051090:	push   0x10067f14
10051095:	push   eax
10051096:	call   0x10043100
1005109b:	pop    ecx
1005109c:	sub    esi,eax
1005109e:	push   esi
1005109f:	push   edi
100510a0:	call   0x10059805
100510a5:	add    esp,0xc
100510a8:	push   0x8
100510aa:	push   0x0
100510ac:	lea    eax,[ebp-0x404]
100510b2:	push   eax
100510b3:	call   ebx
100510b5:	mov    ds:0x100805f4,eax
100510ba:	pop    edi
100510bb:	push   0x8
100510bd:	push   0x0
100510bf:	push   DWORD PTR [ebp+0x8]
100510c2:	call   ebx
100510c4:	mov    esi,eax
100510c6:	test   esi,esi
100510c8:	je     0x100510eb
100510ca:	push   esi
100510cb:	call   0x10050f80
100510d0:	mov    DWORD PTR [esp],0x10067efc
100510d7:	push   esi
100510d8:	call   DWORD PTR ds:0x1006612c
100510de:	mov    esi,eax
100510e0:	test   esi,esi
100510e2:	jne    0x100510e9
100510e4:	call   0x10050fbb
100510e9:	mov    eax,esi
100510eb:	pop    esi
100510ec:	pop    ebx
100510ed:	leave  
100510ee:	ret    
100510ef:	int3   
100510f0:	push   esi
100510f1:	mov    esi,DWORD PTR [eax+0x8]
100510f4:	push   edi
100510f5:	mov    edi,DWORD PTR [eax+0x14]
100510f8:	mov    edx,ecx
100510fa:	shr    edx,0x8
100510fd:	mov    BYTE PTR [esi+edi*1],dl
10051100:	mov    edi,DWORD PTR [eax+0x8]
10051103:	mov    esi,0x1
10051108:	add    DWORD PTR [eax+0x14],esi
1005110b:	mov    edx,DWORD PTR [eax+0x14]
1005110e:	mov    BYTE PTR [edx+edi*1],cl
10051111:	add    DWORD PTR [eax+0x14],esi
10051114:	pop    edi
10051115:	pop    esi
10051116:	ret    
10051117:	int3   
10051118:	int3   
10051119:	int3   
1005111a:	int3   
1005111b:	int3   
1005111c:	int3   
1005111d:	int3   
1005111e:	int3   
1005111f:	int3   
10051120:	push   esi
10051121:	mov    esi,eax
10051123:	mov    eax,DWORD PTR [esi+0x1c]
10051126:	mov    ecx,DWORD PTR [esi+0x10]
10051129:	push   edi
1005112a:	mov    edi,DWORD PTR [eax+0x14]
1005112d:	cmp    edi,ecx
1005112f:	jbe    0x10051133
10051131:	mov    edi,ecx
10051133:	test   edi,edi
10051135:	je     0x1005116c
10051137:	mov    eax,DWORD PTR [eax+0x10]
1005113a:	mov    ecx,DWORD PTR [esi+0xc]
1005113d:	push   edi
1005113e:	push   eax
1005113f:	push   ecx
10051140:	call   0x10045270
10051145:	mov    eax,DWORD PTR [esi+0x1c]
10051148:	add    DWORD PTR [esi+0xc],edi
1005114b:	add    DWORD PTR [eax+0x10],edi
1005114e:	add    DWORD PTR [esi+0x14],edi
10051151:	sub    DWORD PTR [esi+0x10],edi
10051154:	mov    eax,DWORD PTR [esi+0x1c]
10051157:	sub    DWORD PTR [eax+0x14],edi
1005115a:	mov    esi,DWORD PTR [esi+0x1c]
1005115d:	add    esp,0xc
10051160:	cmp    DWORD PTR [esi+0x14],0x0
10051164:	jne    0x1005116c
10051166:	mov    edx,DWORD PTR [esi+0x8]
10051169:	mov    DWORD PTR [esi+0x10],edx
1005116c:	pop    edi
1005116d:	pop    esi
1005116e:	ret    
1005116f:	int3   
10051170:	push   esi
10051171:	push   edi
10051172:	mov    edi,DWORD PTR [esp+0xc]
10051176:	test   edi,edi
10051178:	je     0x10051946
1005117e:	mov    esi,DWORD PTR [edi+0x1c]
10051181:	test   esi,esi
10051183:	je     0x10051946
10051189:	mov    ecx,DWORD PTR [esp+0x10]
1005118d:	cmp    ecx,0x4
10051190:	ja     0x10051946
10051196:	cmp    DWORD PTR [edi+0xc],0x0
1005119a:	je     0x1005193e
100511a0:	cmp    DWORD PTR [edi],0x0
100511a3:	jne    0x100511af
100511a5:	cmp    DWORD PTR [edi+0x4],0x0
100511a9:	jne    0x1005193e
100511af:	mov    eax,DWORD PTR [esi+0x4]
100511b2:	cmp    eax,0x29a
100511b7:	jne    0x100511c2
100511b9:	cmp    ecx,0x4
100511bc:	jne    0x1005193e
100511c2:	cmp    DWORD PTR [edi+0x10],0x0
100511c6:	jne    0x100511d8
100511c8:	mov    eax,ds:0x1006b51c
100511cd:	mov    DWORD PTR [edi+0x18],eax
100511d0:	pop    edi
100511d1:	mov    eax,0xfffffffb
100511d6:	pop    esi
100511d7:	ret    
100511d8:	cmp    eax,0x2a
100511db:	mov    edx,DWORD PTR [esi+0x28]
100511de:	push   ebx
100511df:	push   ebp
100511e0:	mov    DWORD PTR [esi],edi
100511e2:	mov    DWORD PTR [esp+0x14],edx
100511e6:	mov    DWORD PTR [esi+0x28],ecx
100511e9:	mov    ebx,0x1
100511ee:	jne    0x10051498
100511f4:	mov    eax,0x2
100511f9:	cmp    DWORD PTR [esi+0x18],eax
100511fc:	jne    0x10051402
10051202:	push   0x0
10051204:	push   0x0
10051206:	push   0x0
10051208:	call   0x100561c0
1005120d:	mov    DWORD PTR [edi+0x30],eax
10051210:	mov    ecx,DWORD PTR [esi+0x14]
10051213:	mov    eax,DWORD PTR [esi+0x8]
10051216:	mov    BYTE PTR [eax+ecx*1],0x1f
1005121a:	add    DWORD PTR [esi+0x14],ebx
1005121d:	mov    eax,DWORD PTR [esi+0x14]
10051220:	mov    edx,DWORD PTR [esi+0x8]
10051223:	mov    BYTE PTR [eax+edx*1],0x8b
10051227:	add    DWORD PTR [esi+0x14],ebx
1005122a:	mov    eax,DWORD PTR [esi+0x14]
1005122d:	mov    ecx,DWORD PTR [esi+0x8]
10051230:	mov    BYTE PTR [eax+ecx*1],0x8
10051234:	add    DWORD PTR [esi+0x14],ebx
10051237:	mov    eax,DWORD PTR [esi+0x1c]
1005123a:	mov    ebp,DWORD PTR [esi+0x14]
1005123d:	add    esp,0xc
10051240:	test   eax,eax
10051242:	jne    0x100512d3
10051248:	mov    edx,DWORD PTR [esi+0x8]
1005124b:	mov    BYTE PTR [edx+ebp*1],al
1005124e:	add    DWORD PTR [esi+0x14],ebx
10051251:	mov    eax,DWORD PTR [esi+0x14]
10051254:	mov    ecx,DWORD PTR [esi+0x8]
10051257:	mov    BYTE PTR [eax+ecx*1],0x0
1005125b:	add    DWORD PTR [esi+0x14],ebx
1005125e:	mov    eax,DWORD PTR [esi+0x14]
10051261:	mov    edx,DWORD PTR [esi+0x8]
10051264:	mov    BYTE PTR [eax+edx*1],0x0
10051268:	add    DWORD PTR [esi+0x14],ebx
1005126b:	mov    eax,DWORD PTR [esi+0x14]
1005126e:	mov    ecx,DWORD PTR [esi+0x8]
10051271:	mov    BYTE PTR [eax+ecx*1],0x0
10051275:	add    DWORD PTR [esi+0x14],ebx
10051278:	mov    eax,DWORD PTR [esi+0x14]
1005127b:	mov    edx,DWORD PTR [esi+0x8]
1005127e:	mov    BYTE PTR [eax+edx*1],0x0
10051282:	add    DWORD PTR [esi+0x14],ebx
10051285:	mov    eax,DWORD PTR [esi+0x84]
1005128b:	cmp    eax,0x9
1005128e:	mov    ecx,DWORD PTR [esi+0x14]
10051291:	jne    0x1005129a
10051293:	mov    eax,0x2
10051298:	jmp    0x100512b1
1005129a:	cmp    DWORD PTR [esi+0x88],0x2
100512a1:	jge    0x100512ac
100512a3:	cmp    eax,0x2
100512a6:	jl     0x100512ac
100512a8:	xor    eax,eax
100512aa:	jmp    0x100512b1
100512ac:	mov    eax,0x4
100512b1:	mov    edx,DWORD PTR [esi+0x8]
100512b4:	mov    BYTE PTR [ecx+edx*1],al
100512b7:	add    DWORD PTR [esi+0x14],ebx
100512ba:	mov    eax,DWORD PTR [esi+0x14]
100512bd:	mov    ecx,DWORD PTR [esi+0x8]
100512c0:	mov    BYTE PTR [eax+ecx*1],0xb
100512c4:	add    DWORD PTR [esi+0x14],ebx
100512c7:	mov    DWORD PTR [esi+0x4],0x71
100512ce:	jmp    0x10051498
100512d3:	mov    edx,DWORD PTR [eax+0x24]
100512d6:	mov    ecx,DWORD PTR [eax+0x2c]
100512d9:	neg    edx
100512db:	sbb    dl,dl
100512dd:	and    edx,0x10
100512e0:	neg    ecx
100512e2:	sbb    cl,cl
100512e4:	and    ecx,0x2
100512e7:	add    dl,cl
100512e9:	mov    ecx,DWORD PTR [eax+0x1c]
100512ec:	neg    ecx
100512ee:	sbb    cl,cl
100512f0:	and    ecx,0x8
100512f3:	add    dl,cl
100512f5:	mov    ecx,DWORD PTR [eax+0x10]
100512f8:	neg    ecx
100512fa:	sbb    cl,cl
100512fc:	and    ecx,0x4
100512ff:	add    dl,cl
10051301:	cmp    DWORD PTR [eax],0x0
10051304:	mov    ecx,DWORD PTR [esi+0x8]
10051307:	setne  al
1005130a:	add    dl,al
1005130c:	mov    BYTE PTR [ecx+ebp*1],dl
1005130f:	add    DWORD PTR [esi+0x14],ebx
10051312:	mov    eax,DWORD PTR [esi+0x14]
10051315:	mov    edx,DWORD PTR [esi+0x1c]
10051318:	movzx  edx,BYTE PTR [edx+0x4]
1005131c:	mov    ecx,DWORD PTR [esi+0x8]
1005131f:	mov    BYTE PTR [eax+ecx*1],dl
10051322:	add    DWORD PTR [esi+0x14],ebx
10051325:	mov    ecx,DWORD PTR [esi+0x1c]
10051328:	movzx  ecx,BYTE PTR [ecx+0x5]
1005132c:	mov    eax,DWORD PTR [esi+0x14]
1005132f:	mov    edx,DWORD PTR [esi+0x8]
10051332:	mov    BYTE PTR [eax+edx*1],cl
10051335:	add    DWORD PTR [esi+0x14],ebx
10051338:	mov    edx,DWORD PTR [esi+0x1c]
1005133b:	movzx  edx,BYTE PTR [edx+0x6]
1005133f:	mov    eax,DWORD PTR [esi+0x14]
10051342:	mov    ecx,DWORD PTR [esi+0x8]
10051345:	mov    BYTE PTR [eax+ecx*1],dl
10051348:	add    DWORD PTR [esi+0x14],ebx
1005134b:	mov    ecx,DWORD PTR [esi+0x1c]
1005134e:	movzx  ecx,BYTE PTR [ecx+0x7]
10051352:	mov    eax,DWORD PTR [esi+0x14]
10051355:	mov    edx,DWORD PTR [esi+0x8]
10051358:	mov    BYTE PTR [eax+edx*1],cl
1005135b:	add    DWORD PTR [esi+0x14],ebx
1005135e:	mov    eax,DWORD PTR [esi+0x84]
10051364:	cmp    eax,0x9
10051367:	mov    ecx,DWORD PTR [esi+0x14]
1005136a:	jne    0x10051373
1005136c:	mov    eax,0x2
10051371:	jmp    0x1005138a
10051373:	cmp    DWORD PTR [esi+0x88],0x2
1005137a:	jge    0x10051385
1005137c:	cmp    eax,0x2
1005137f:	jl     0x10051385
10051381:	xor    eax,eax
10051383:	jmp    0x1005138a
10051385:	mov    eax,0x4
1005138a:	mov    edx,DWORD PTR [esi+0x8]
1005138d:	mov    BYTE PTR [ecx+edx*1],al
10051390:	add    DWORD PTR [esi+0x14],ebx
10051393:	mov    ecx,DWORD PTR [esi+0x1c]
10051396:	mov    eax,DWORD PTR [esi+0x14]
10051399:	mov    cl,BYTE PTR [ecx+0xc]
1005139c:	mov    edx,DWORD PTR [esi+0x8]
1005139f:	mov    BYTE PTR [eax+edx*1],cl
100513a2:	add    DWORD PTR [esi+0x14],ebx
100513a5:	mov    eax,DWORD PTR [esi+0x1c]
100513a8:	cmp    DWORD PTR [eax+0x10],0x0
100513ac:	mov    ecx,DWORD PTR [esi+0x14]
100513af:	je     0x100513d2
100513b1:	mov    al,BYTE PTR [eax+0x14]
100513b4:	mov    edx,DWORD PTR [esi+0x8]
100513b7:	mov    BYTE PTR [ecx+edx*1],al
100513ba:	add    DWORD PTR [esi+0x14],ebx
100513bd:	mov    ecx,DWORD PTR [esi+0x1c]
100513c0:	mov    cl,BYTE PTR [ecx+0x15]
100513c3:	mov    eax,DWORD PTR [esi+0x14]
100513c6:	mov    edx,DWORD PTR [esi+0x8]
100513c9:	mov    BYTE PTR [eax+edx*1],cl
100513cc:	add    DWORD PTR [esi+0x14],ebx
100513cf:	mov    ecx,DWORD PTR [esi+0x14]
100513d2:	mov    edx,DWORD PTR [esi+0x1c]
100513d5:	cmp    DWORD PTR [edx+0x2c],0x0
100513d9:	je     0x100513ef
100513db:	mov    eax,DWORD PTR [esi+0x8]
100513de:	push   ecx
100513df:	mov    ecx,DWORD PTR [edi+0x30]
100513e2:	push   eax
100513e3:	push   ecx
100513e4:	call   0x100561c0
100513e9:	add    esp,0xc
100513ec:	mov    DWORD PTR [edi+0x30],eax
100513ef:	mov    DWORD PTR [esi+0x20],0x0
100513f6:	mov    DWORD PTR [esi+0x4],0x45
100513fd:	jmp    0x10051498
10051402:	mov    ecx,DWORD PTR [esi+0x30]
10051405:	sub    ecx,0x8
10051408:	shl    ecx,0xc
1005140b:	add    ecx,0x800
10051411:	cmp    DWORD PTR [esi+0x88],eax
10051417:	jge    0x10051438
10051419:	mov    ebp,DWORD PTR [esi+0x84]
1005141f:	cmp    ebp,eax
10051421:	jl     0x10051438
10051423:	cmp    ebp,0x6
10051426:	jge    0x1005142c
10051428:	mov    eax,ebx
1005142a:	jmp    0x1005143a
1005142c:	xor    edx,edx
1005142e:	cmp    ebp,0x6
10051431:	setne  dl
10051434:	add    eax,edx
10051436:	jmp    0x1005143a
10051438:	xor    eax,eax
1005143a:	shl    eax,0x6
1005143d:	or     ecx,eax
1005143f:	cmp    DWORD PTR [esi+0x6c],0x0
10051443:	je     0x10051448
10051445:	or     ecx,0x20
10051448:	mov    eax,0x8421085
1005144d:	mul    ecx
1005144f:	sub    ecx,edx
10051451:	shr    ecx,1
10051453:	add    ecx,edx
10051455:	shr    ecx,0x4
10051458:	add    ecx,ebx
1005145a:	mov    eax,ecx
1005145c:	shl    ecx,0x5
1005145f:	sub    ecx,eax
10051461:	mov    eax,esi
10051463:	mov    DWORD PTR [esi+0x4],0x71
1005146a:	call   0x100510f0
1005146f:	cmp    DWORD PTR [esi+0x6c],0x0
10051473:	je     0x10051487
10051475:	movzx  ecx,WORD PTR [edi+0x32]
10051479:	call   0x100510f0
1005147e:	movzx  ecx,WORD PTR [edi+0x30]
10051482:	call   0x100510f0
10051487:	push   0x0
10051489:	push   0x0
1005148b:	push   0x0
1005148d:	call   0x100541e0
10051492:	add    esp,0xc
10051495:	mov    DWORD PTR [edi+0x30],eax
10051498:	cmp    DWORD PTR [esi+0x4],0x45
1005149c:	jne    0x10051568
100514a2:	mov    eax,DWORD PTR [esi+0x1c]
100514a5:	cmp    DWORD PTR [eax+0x10],0x0
100514a9:	je     0x10051561
100514af:	movzx  eax,WORD PTR [eax+0x14]
100514b3:	cmp    DWORD PTR [esi+0x20],eax
100514b6:	mov    ecx,DWORD PTR [esi+0x14]
100514b9:	jae    0x10051527
100514bb:	jmp    0x100514c0
100514bd:	lea    ecx,[ecx+0x0]
100514c0:	mov    eax,DWORD PTR [esi+0x14]
100514c3:	cmp    eax,DWORD PTR [esi+0xc]
100514c6:	jne    0x100514fe
100514c8:	mov    edx,DWORD PTR [esi+0x1c]
100514cb:	cmp    DWORD PTR [edx+0x2c],0x0
100514cf:	je     0x100514ed
100514d1:	cmp    eax,ecx
100514d3:	jbe    0x100514ed
100514d5:	sub    eax,ecx
100514d7:	push   eax
100514d8:	mov    eax,DWORD PTR [esi+0x8]
100514db:	add    eax,ecx
100514dd:	mov    ecx,DWORD PTR [edi+0x30]
100514e0:	push   eax
100514e1:	push   ecx
100514e2:	call   0x100561c0
100514e7:	add    esp,0xc
100514ea:	mov    DWORD PTR [edi+0x30],eax
100514ed:	mov    eax,edi
100514ef:	call   0x10051120
100514f4:	mov    eax,DWORD PTR [esi+0x14]
100514f7:	cmp    eax,DWORD PTR [esi+0xc]
100514fa:	mov    ecx,eax
100514fc:	je     0x10051527
100514fe:	mov    edx,DWORD PTR [esi+0x1c]
10051501:	mov    edx,DWORD PTR [edx+0x10]
10051504:	mov    ebx,DWORD PTR [esi+0x20]
10051507:	mov    dl,BYTE PTR [edx+ebx*1]
1005150a:	mov    ebp,DWORD PTR [esi+0x8]
1005150d:	mov    BYTE PTR [eax+ebp*1],dl
10051510:	mov    eax,0x1
10051515:	add    DWORD PTR [esi+0x14],eax
10051518:	add    DWORD PTR [esi+0x20],eax
1005151b:	mov    eax,DWORD PTR [esi+0x1c]
1005151e:	movzx  edx,WORD PTR [eax+0x14]
10051522:	cmp    DWORD PTR [esi+0x20],edx
10051525:	jb     0x100514c0
10051527:	mov    eax,DWORD PTR [esi+0x1c]
1005152a:	cmp    DWORD PTR [eax+0x2c],0x0
1005152e:	je     0x1005154f
10051530:	mov    eax,DWORD PTR [esi+0x14]
10051533:	cmp    eax,ecx
10051535:	jbe    0x1005154f
10051537:	mov    edx,DWORD PTR [esi+0x8]
1005153a:	sub    eax,ecx
1005153c:	push   eax
1005153d:	mov    eax,DWORD PTR [edi+0x30]
10051540:	add    edx,ecx
10051542:	push   edx
10051543:	push   eax
10051544:	call   0x100561c0
10051549:	add    esp,0xc
1005154c:	mov    DWORD PTR [edi+0x30],eax
1005154f:	mov    ecx,DWORD PTR [esi+0x1c]
10051552:	mov    edx,DWORD PTR [esi+0x20]
10051555:	cmp    edx,DWORD PTR [ecx+0x14]
10051558:	jne    0x10051568
1005155a:	mov    DWORD PTR [esi+0x20],0x0
10051561:	mov    DWORD PTR [esi+0x4],0x49
10051568:	cmp    DWORD PTR [esi+0x4],0x49
1005156c:	mov    ebp,0x1
10051571:	jne    0x1005161e
10051577:	mov    eax,DWORD PTR [esi+0x1c]
1005157a:	cmp    DWORD PTR [eax+0x1c],0x0
1005157e:	je     0x10051617
10051584:	mov    edx,DWORD PTR [esi+0x14]
10051587:	mov    eax,DWORD PTR [esi+0x14]
1005158a:	cmp    eax,DWORD PTR [esi+0xc]
1005158d:	jne    0x100515c5
1005158f:	mov    ecx,DWORD PTR [esi+0x1c]
10051592:	cmp    DWORD PTR [ecx+0x2c],0x0
10051596:	je     0x100515b4
10051598:	cmp    eax,edx
1005159a:	jbe    0x100515b4
1005159c:	mov    ecx,DWORD PTR [edi+0x30]
1005159f:	sub    eax,edx
100515a1:	push   eax
100515a2:	mov    eax,DWORD PTR [esi+0x8]
100515a5:	add    eax,edx
100515a7:	push   eax
100515a8:	push   ecx
100515a9:	call   0x100561c0
100515ae:	add    esp,0xc
100515b1:	mov    DWORD PTR [edi+0x30],eax
100515b4:	mov    eax,edi
100515b6:	call   0x10051120
100515bb:	mov    eax,DWORD PTR [esi+0x14]
100515be:	cmp    eax,DWORD PTR [esi+0xc]
100515c1:	mov    edx,eax
100515c3:	je     0x100515e6
100515c5:	mov    ecx,DWORD PTR [esi+0x20]
100515c8:	mov    ebx,DWORD PTR [esi+0x1c]
100515cb:	mov    ebx,DWORD PTR [ebx+0x1c]
100515ce:	movzx  ebx,BYTE PTR [ebx+ecx*1]
100515d2:	add    ecx,ebp
100515d4:	mov    DWORD PTR [esi+0x20],ecx
100515d7:	mov    ecx,DWORD PTR [esi+0x8]
100515da:	mov    BYTE PTR [eax+ecx*1],bl
100515dd:	add    DWORD PTR [esi+0x14],ebp
100515e0:	test   ebx,ebx
100515e2:	jne    0x10051587
100515e4:	jmp    0x100515e8
100515e6:	mov    ebx,ebp
100515e8:	mov    eax,DWORD PTR [esi+0x1c]
100515eb:	cmp    DWORD PTR [eax+0x2c],0x0
100515ef:	je     0x10051610
100515f1:	mov    eax,DWORD PTR [esi+0x14]
100515f4:	cmp    eax,edx
100515f6:	jbe    0x10051610
100515f8:	mov    ecx,DWORD PTR [esi+0x8]
100515fb:	sub    eax,edx
100515fd:	push   eax
100515fe:	add    ecx,edx
10051600:	mov    edx,DWORD PTR [edi+0x30]
10051603:	push   ecx
10051604:	push   edx
10051605:	call   0x100561c0
1005160a:	add    esp,0xc
1005160d:	mov    DWORD PTR [edi+0x30],eax
10051610:	test   ebx,ebx
10051612:	jne    0x1005161e
10051614:	mov    DWORD PTR [esi+0x20],ebx
10051617:	mov    DWORD PTR [esi+0x4],0x5b
1005161e:	cmp    DWORD PTR [esi+0x4],0x5b
10051622:	jne    0x100516cd
10051628:	mov    eax,DWORD PTR [esi+0x1c]
1005162b:	cmp    DWORD PTR [eax+0x24],0x0
1005162f:	je     0x100516c6
10051635:	mov    edx,DWORD PTR [esi+0x14]
10051638:	mov    eax,DWORD PTR [esi+0x14]
1005163b:	cmp    eax,DWORD PTR [esi+0xc]
1005163e:	jne    0x10051676
10051640:	mov    ecx,DWORD PTR [esi+0x1c]
10051643:	cmp    DWORD PTR [ecx+0x2c],0x0
10051647:	je     0x10051665
10051649:	cmp    eax,edx
1005164b:	jbe    0x10051665
1005164d:	mov    ecx,DWORD PTR [edi+0x30]
10051650:	sub    eax,edx
10051652:	push   eax
10051653:	mov    eax,DWORD PTR [esi+0x8]
10051656:	add    eax,edx
10051658:	push   eax
10051659:	push   ecx
1005165a:	call   0x100561c0
1005165f:	add    esp,0xc
10051662:	mov    DWORD PTR [edi+0x30],eax
10051665:	mov    eax,edi
10051667:	call   0x10051120
1005166c:	mov    eax,DWORD PTR [esi+0x14]
1005166f:	cmp    eax,DWORD PTR [esi+0xc]
10051672:	mov    edx,eax
10051674:	je     0x10051698
10051676:	mov    ecx,DWORD PTR [esi+0x20]
10051679:	mov    ebx,DWORD PTR [esi+0x1c]
1005167c:	mov    ebx,DWORD PTR [ebx+0x24]
1005167f:	movzx  ebx,BYTE PTR [ebx+ecx*1]
10051683:	add    ecx,0x1
10051686:	mov    DWORD PTR [esi+0x20],ecx
10051689:	mov    ecx,DWORD PTR [esi+0x8]
1005168c:	mov    BYTE PTR [eax+ecx*1],bl
1005168f:	add    DWORD PTR [esi+0x14],ebp
10051692:	test   ebx,ebx
10051694:	jne    0x10051638
10051696:	jmp    0x1005169a
10051698:	mov    ebx,ebp
1005169a:	mov    eax,DWORD PTR [esi+0x1c]
1005169d:	cmp    DWORD PTR [eax+0x2c],0x0
100516a1:	je     0x100516c2
100516a3:	mov    eax,DWORD PTR [esi+0x14]
100516a6:	cmp    eax,edx
100516a8:	jbe    0x100516c2
100516aa:	mov    ecx,DWORD PTR [esi+0x8]
100516ad:	sub    eax,edx
100516af:	push   eax
100516b0:	add    ecx,edx
100516b2:	mov    edx,DWORD PTR [edi+0x30]
100516b5:	push   ecx
100516b6:	push   edx
100516b7:	call   0x100561c0
100516bc:	add    esp,0xc
100516bf:	mov    DWORD PTR [edi+0x30],eax
100516c2:	test   ebx,ebx
100516c4:	jne    0x100516cd
100516c6:	mov    DWORD PTR [esi+0x4],0x67
100516cd:	cmp    DWORD PTR [esi+0x4],0x67
100516d1:	jne    0x1005172e
100516d3:	mov    eax,DWORD PTR [esi+0x1c]
100516d6:	cmp    DWORD PTR [eax+0x2c],0x0
100516da:	je     0x10051727
100516dc:	mov    ecx,DWORD PTR [esi+0x14]
100516df:	add    ecx,0x2
100516e2:	cmp    ecx,DWORD PTR [esi+0xc]
100516e5:	jbe    0x100516ee
100516e7:	mov    eax,edi
100516e9:	call   0x10051120
100516ee:	mov    eax,DWORD PTR [esi+0x14]
100516f1:	lea    edx,[eax+0x2]
100516f4:	cmp    edx,DWORD PTR [esi+0xc]
100516f7:	ja     0x1005172e
100516f9:	movzx  edx,BYTE PTR [edi+0x30]
100516fd:	mov    ecx,DWORD PTR [esi+0x8]
10051700:	mov    BYTE PTR [eax+ecx*1],dl
10051703:	add    DWORD PTR [esi+0x14],ebp
10051706:	movzx  edx,BYTE PTR [edi+0x31]
1005170a:	mov    eax,DWORD PTR [esi+0x14]
1005170d:	mov    ecx,DWORD PTR [esi+0x8]
10051710:	push   0x0
10051712:	push   0x0
10051714:	mov    BYTE PTR [eax+ecx*1],dl
10051717:	add    DWORD PTR [esi+0x14],ebp
1005171a:	push   0x0
1005171c:	call   0x100561c0
10051721:	add    esp,0xc
10051724:	mov    DWORD PTR [edi+0x30],eax
10051727:	mov    DWORD PTR [esi+0x4],0x71
1005172e:	cmp    DWORD PTR [esi+0x14],0x0
10051732:	je     0x1005174f
10051734:	mov    eax,edi
10051736:	call   0x10051120
1005173b:	cmp    DWORD PTR [edi+0x10],0x0
1005173f:	jne    0x10051776
10051741:	mov    DWORD PTR [esi+0x28],0xffffffff
10051748:	pop    ebp
10051749:	pop    ebx
1005174a:	pop    edi
1005174b:	xor    eax,eax
1005174d:	pop    esi
1005174e:	ret    
1005174f:	cmp    DWORD PTR [edi+0x4],0x0
10051753:	mov    ebx,DWORD PTR [esp+0x18]
10051757:	jne    0x1005177a
10051759:	cmp    ebx,DWORD PTR [esp+0x14]
1005175d:	jg     0x1005177a
1005175f:	cmp    ebx,0x4
10051762:	je     0x1005177a
10051764:	mov    eax,ds:0x1006b51c
10051769:	pop    ebp
1005176a:	pop    ebx
1005176b:	mov    DWORD PTR [edi+0x18],eax
1005176e:	pop    edi
1005176f:	mov    eax,0xfffffffb
10051774:	pop    esi
10051775:	ret    
10051776:	mov    ebx,DWORD PTR [esp+0x18]
1005177a:	mov    eax,DWORD PTR [esi+0x4]
1005177d:	cmp    eax,0x29a
10051782:	jne    0x1005179d
10051784:	cmp    DWORD PTR [edi+0x4],0x0
10051788:	je     0x100517a3
1005178a:	mov    ecx,DWORD PTR ds:0x1006b51c
10051790:	pop    ebp
10051791:	pop    ebx
10051792:	mov    DWORD PTR [edi+0x18],ecx
10051795:	pop    edi
10051796:	mov    eax,0xfffffffb
1005179b:	pop    esi
1005179c:	ret    
1005179d:	cmp    DWORD PTR [edi+0x4],0x0
100517a1:	jne    0x100517bc
100517a3:	cmp    DWORD PTR [esi+0x74],0x0
100517a7:	jne    0x100517bc
100517a9:	test   ebx,ebx
100517ab:	je     0x10051850
100517b1:	cmp    eax,0x29a
100517b6:	je     0x10051850
100517bc:	mov    eax,DWORD PTR [esi+0x84]
100517c2:	lea    edx,[eax+eax*2]
100517c5:	mov    eax,DWORD PTR [edx*4+0x10067f68]
100517cc:	push   ebx
100517cd:	push   esi
100517ce:	call   eax
100517d0:	add    esp,0x8
100517d3:	cmp    eax,0x2
100517d6:	je     0x100517dd
100517d8:	cmp    eax,0x3
100517db:	jne    0x100517e4
100517dd:	mov    DWORD PTR [esi+0x4],0x29a
100517e4:	test   eax,eax
100517e6:	je     0x10051926
100517ec:	cmp    eax,0x2
100517ef:	je     0x10051926
100517f5:	cmp    eax,ebp
100517f7:	jne    0x10051850
100517f9:	cmp    ebx,ebp
100517fb:	jne    0x10051808
100517fd:	push   esi
100517fe:	call   0x10055b20
10051803:	add    esp,0x4
10051806:	jmp    0x1005183f
10051808:	push   0x0
1005180a:	push   0x0
1005180c:	push   0x0
1005180e:	push   esi
1005180f:	call   0x10055a80
10051814:	add    esp,0x10
10051817:	cmp    ebx,0x3
1005181a:	jne    0x1005183f
1005181c:	mov    ecx,DWORD PTR [esi+0x4c]
1005181f:	mov    edx,DWORD PTR [esi+0x44]
10051822:	mov    WORD PTR [edx+ecx*2-0x2],0x0
10051829:	mov    eax,DWORD PTR [esi+0x4c]
1005182c:	mov    edx,DWORD PTR [esi+0x44]
1005182f:	lea    ecx,[eax+eax*1-0x2]
10051833:	push   ecx
10051834:	push   0x0
10051836:	push   edx
10051837:	call   0x10045cf0
1005183c:	add    esp,0xc
1005183f:	mov    eax,edi
10051841:	call   0x10051120
10051846:	cmp    DWORD PTR [edi+0x10],0x0
1005184a:	je     0x10051741
10051850:	cmp    ebx,0x4
10051853:	jne    0x10051748
10051859:	mov    eax,DWORD PTR [esi+0x18]
1005185c:	test   eax,eax
1005185e:	jg     0x10051867
10051860:	mov    eax,ebp
10051862:	pop    ebp
10051863:	pop    ebx
10051864:	pop    edi
10051865:	pop    esi
10051866:	ret    
10051867:	cmp    eax,0x2
1005186a:	jne    0x100518f2
10051870:	movzx  edx,BYTE PTR [edi+0x30]
10051874:	mov    ecx,DWORD PTR [esi+0x14]
10051877:	mov    eax,DWORD PTR [esi+0x8]
1005187a:	mov    BYTE PTR [eax+ecx*1],dl
1005187d:	add    DWORD PTR [esi+0x14],ebp
10051880:	movzx  edx,BYTE PTR [edi+0x31]
10051884:	mov    eax,DWORD PTR [esi+0x14]
10051887:	mov    ecx,DWORD PTR [esi+0x8]
1005188a:	mov    BYTE PTR [eax+ecx*1],dl
1005188d:	add    DWORD PTR [esi+0x14],ebp
10051890:	movzx  edx,BYTE PTR [edi+0x32]
10051894:	mov    eax,DWORD PTR [esi+0x14]
10051897:	mov    ecx,DWORD PTR [esi+0x8]
1005189a:	mov    BYTE PTR [eax+ecx*1],dl
1005189d:	add    DWORD PTR [esi+0x14],ebp
100518a0:	movzx  edx,BYTE PTR [edi+0x33]
100518a4:	mov    eax,DWORD PTR [esi+0x14]
100518a7:	mov    ecx,DWORD PTR [esi+0x8]
100518aa:	mov    BYTE PTR [eax+ecx*1],dl
100518ad:	add    DWORD PTR [esi+0x14],ebp
100518b0:	movzx  edx,BYTE PTR [edi+0x8]
100518b4:	mov    eax,DWORD PTR [esi+0x14]
100518b7:	mov    ecx,DWORD PTR [esi+0x8]
100518ba:	mov    BYTE PTR [eax+ecx*1],dl
100518bd:	add    DWORD PTR [esi+0x14],ebp
100518c0:	movzx  edx,BYTE PTR [edi+0x9]
100518c4:	mov    eax,DWORD PTR [esi+0x14]
100518c7:	mov    ecx,DWORD PTR [esi+0x8]
100518ca:	mov    BYTE PTR [eax+ecx*1],dl
100518cd:	add    DWORD PTR [esi+0x14],ebp
100518d0:	movzx  edx,BYTE PTR [edi+0xa]
100518d4:	mov    eax,DWORD PTR [esi+0x14]
100518d7:	mov    ecx,DWORD PTR [esi+0x8]
100518da:	mov    BYTE PTR [eax+ecx*1],dl
100518dd:	add    DWORD PTR [esi+0x14],ebp
100518e0:	movzx  edx,BYTE PTR [edi+0xb]
100518e4:	mov    eax,DWORD PTR [esi+0x14]
100518e7:	mov    ecx,DWORD PTR [esi+0x8]
100518ea:	mov    BYTE PTR [eax+ecx*1],dl
100518ed:	add    DWORD PTR [esi+0x14],ebp
100518f0:	jmp    0x10051906
100518f2:	movzx  ecx,WORD PTR [edi+0x32]
100518f6:	mov    eax,esi
100518f8:	call   0x100510f0
100518fd:	movzx  ecx,WORD PTR [edi+0x30]
10051901:	call   0x100510f0
10051906:	mov    eax,edi
10051908:	call   0x10051120
1005190d:	mov    eax,DWORD PTR [esi+0x18]
10051910:	test   eax,eax
10051912:	jle    0x10051919
10051914:	neg    eax
10051916:	mov    DWORD PTR [esi+0x18],eax
10051919:	pop    ebp
1005191a:	xor    eax,eax
1005191c:	cmp    DWORD PTR [esi+0x14],eax
1005191f:	pop    ebx
10051920:	pop    edi
10051921:	sete   al
10051924:	pop    esi
10051925:	ret    
10051926:	cmp    DWORD PTR [edi+0x10],0x0
1005192a:	jne    0x10051748
10051930:	pop    ebp
10051931:	pop    ebx
10051932:	pop    edi
10051933:	mov    DWORD PTR [esi+0x28],0xffffffff
1005193a:	xor    eax,eax
1005193c:	pop    esi
1005193d:	ret    
1005193e:	mov    eax,ds:0x1006b510
10051943:	mov    DWORD PTR [edi+0x18],eax
10051946:	pop    edi
10051947:	mov    eax,0xfffffffe
1005194c:	pop    esi
1005194d:	ret    
1005194e:	int3   
1005194f:	int3   
10051950:	push   esi
10051951:	mov    esi,DWORD PTR [esp+0x8]
10051955:	test   esi,esi
10051957:	je     0x10051a1b
1005195d:	mov    eax,DWORD PTR [esi+0x1c]
10051960:	test   eax,eax
10051962:	je     0x10051a1b
10051968:	push   edi
10051969:	mov    edi,DWORD PTR [eax+0x4]
1005196c:	cmp    edi,0x2a
1005196f:	je     0x1005199a
10051971:	cmp    edi,0x45
10051974:	je     0x1005199a
10051976:	cmp    edi,0x49
10051979:	je     0x1005199a
1005197b:	cmp    edi,0x5b
1005197e:	je     0x1005199a
10051980:	cmp    edi,0x67
10051983:	je     0x1005199a
10051985:	cmp    edi,0x71
10051988:	je     0x1005199a
1005198a:	cmp    edi,0x29a
10051990:	je     0x1005199a
10051992:	pop    edi
10051993:	mov    eax,0xfffffffe
10051998:	pop    esi
10051999:	ret    
1005199a:	mov    eax,DWORD PTR [eax+0x8]
1005199d:	test   eax,eax
1005199f:	je     0x100519ae
100519a1:	mov    ecx,DWORD PTR [esi+0x24]
100519a4:	push   eax
100519a5:	mov    eax,DWORD PTR [esi+0x28]
100519a8:	push   eax
100519a9:	call   ecx
100519ab:	add    esp,0x8
100519ae:	mov    edx,DWORD PTR [esi+0x1c]
100519b1:	mov    eax,DWORD PTR [edx+0x44]
100519b4:	test   eax,eax
100519b6:	je     0x100519c5
100519b8:	mov    ecx,DWORD PTR [esi+0x24]
100519bb:	push   eax
100519bc:	mov    eax,DWORD PTR [esi+0x28]
100519bf:	push   eax
100519c0:	call   ecx
100519c2:	add    esp,0x8
100519c5:	mov    edx,DWORD PTR [esi+0x1c]
100519c8:	mov    eax,DWORD PTR [edx+0x40]
100519cb:	test   eax,eax
100519cd:	je     0x100519dc
100519cf:	mov    ecx,DWORD PTR [esi+0x24]
100519d2:	push   eax
100519d3:	mov    eax,DWORD PTR [esi+0x28]
100519d6:	push   eax
100519d7:	call   ecx
100519d9:	add    esp,0x8
100519dc:	mov    edx,DWORD PTR [esi+0x1c]
100519df:	mov    eax,DWORD PTR [edx+0x38]
100519e2:	test   eax,eax
100519e4:	je     0x100519f3
100519e6:	mov    ecx,DWORD PTR [esi+0x24]
100519e9:	push   eax
100519ea:	mov    eax,DWORD PTR [esi+0x28]
100519ed:	push   eax
100519ee:	call   ecx
100519f0:	add    esp,0x8
100519f3:	mov    edx,DWORD PTR [esi+0x1c]
100519f6:	mov    eax,DWORD PTR [esi+0x28]
100519f9:	mov    ecx,DWORD PTR [esi+0x24]
100519fc:	push   edx
100519fd:	push   eax
100519fe:	call   ecx
10051a00:	add    esp,0x8
10051a03:	xor    eax,eax
10051a05:	cmp    edi,0x71
10051a08:	setne  al
10051a0b:	pop    edi
10051a0c:	mov    DWORD PTR [esi+0x1c],0x0
10051a13:	pop    esi
10051a14:	sub    eax,0x1
10051a17:	and    eax,0xfffffffd
10051a1a:	ret    
10051a1b:	mov    eax,0xfffffffe
10051a20:	pop    esi
10051a21:	ret    
10051a22:	int3   
10051a23:	int3   
10051a24:	int3   
10051a25:	int3   
10051a26:	int3   
10051a27:	int3   
10051a28:	int3   
10051a29:	int3   
10051a2a:	int3   
10051a2b:	int3   
10051a2c:	int3   
10051a2d:	int3   
10051a2e:	int3   
10051a2f:	int3   
10051a30:	mov    eax,DWORD PTR [esi+0x4]
10051a33:	push   edi
10051a34:	mov    edi,eax
10051a36:	cmp    edi,ecx
10051a38:	jbe    0x10051a3c
10051a3a:	mov    edi,ecx
10051a3c:	test   edi,edi
10051a3e:	jne    0x10051a44
10051a40:	xor    eax,eax
10051a42:	pop    edi
10051a43:	ret    
10051a44:	sub    eax,edi
10051a46:	mov    DWORD PTR [esi+0x4],eax
10051a49:	mov    eax,DWORD PTR [esi+0x1c]
10051a4c:	mov    eax,DWORD PTR [eax+0x18]
10051a4f:	cmp    eax,0x1
10051a52:	jne    0x10051a63
10051a54:	mov    ecx,DWORD PTR [esi]
10051a56:	mov    edx,DWORD PTR [esi+0x30]
10051a59:	push   edi
10051a5a:	push   ecx
10051a5b:	push   edx
10051a5c:	call   0x100541e0
10051a61:	jmp    0x10051a75
10051a63:	cmp    eax,0x2
10051a66:	jne    0x10051a7b
10051a68:	mov    eax,DWORD PTR [esi]
10051a6a:	mov    ecx,DWORD PTR [esi+0x30]
10051a6d:	push   edi
10051a6e:	push   eax
10051a6f:	push   ecx
10051a70:	call   0x100561c0
10051a75:	mov    DWORD PTR [esi+0x30],eax
10051a78:	add    esp,0xc
10051a7b:	mov    edx,DWORD PTR [esi]
10051a7d:	mov    eax,DWORD PTR [esp+0x8]
10051a81:	push   edi
10051a82:	push   edx
10051a83:	push   eax
10051a84:	call   0x10045270
10051a89:	add    DWORD PTR [esi],edi
10051a8b:	add    DWORD PTR [esi+0x8],edi
10051a8e:	add    esp,0xc
10051a91:	mov    eax,edi
10051a93:	pop    edi
10051a94:	ret    
10051a95:	int3   
10051a96:	int3   
10051a97:	int3   
10051a98:	int3   
10051a99:	int3   
10051a9a:	int3   
10051a9b:	int3   
10051a9c:	int3   
10051a9d:	int3   
10051a9e:	int3   
10051a9f:	int3   
10051aa0:	mov    eax,DWORD PTR [esi+0x2c]
10051aa3:	mov    ecx,DWORD PTR [esi+0x4c]
10051aa6:	mov    edx,DWORD PTR [esi+0x44]
10051aa9:	push   edi
10051aaa:	add    eax,eax
10051aac:	mov    DWORD PTR [esi+0x3c],eax
10051aaf:	xor    edi,edi
10051ab1:	mov    WORD PTR [edx+ecx*2-0x2],di
10051ab6:	mov    eax,DWORD PTR [esi+0x4c]
10051ab9:	mov    edx,DWORD PTR [esi+0x44]
10051abc:	lea    ecx,[eax+eax*1-0x2]
10051ac0:	push   ecx
10051ac1:	push   edi
10051ac2:	push   edx
10051ac3:	call   0x10045cf0
10051ac8:	mov    eax,DWORD PTR [esi+0x84]
10051ace:	lea    eax,[eax+eax*2]
10051ad1:	add    eax,eax
10051ad3:	movzx  ecx,WORD PTR [eax+eax*1+0x10067f62]
10051adb:	add    eax,eax
10051add:	mov    DWORD PTR [esi+0x80],ecx
10051ae3:	movzx  edx,WORD PTR [eax+0x10067f60]
10051aea:	mov    DWORD PTR [esi+0x8c],edx
10051af0:	movzx  ecx,WORD PTR [eax+0x10067f64]
10051af7:	mov    DWORD PTR [esi+0x90],ecx
10051afd:	movzx  edx,WORD PTR [eax+0x10067f66]
10051b04:	mov    eax,0x2
10051b09:	add    esp,0xc
10051b0c:	mov    DWORD PTR [esi+0x6c],edi
10051b0f:	mov    DWORD PTR [esi+0x5c],edi
10051b12:	mov    DWORD PTR [esi+0x74],edi
10051b15:	mov    DWORD PTR [esi+0x68],edi
10051b18:	mov    DWORD PTR [esi+0x48],edi
10051b1b:	mov    DWORD PTR [esi+0x7c],edx
10051b1e:	mov    DWORD PTR [esi+0x78],eax
10051b21:	mov    DWORD PTR [esi+0x60],eax
10051b24:	pop    edi
10051b25:	ret    
10051b26:	int3   
10051b27:	int3   
10051b28:	int3   
10051b29:	int3   
10051b2a:	int3   
10051b2b:	int3   
10051b2c:	int3   
10051b2d:	int3   
10051b2e:	int3   
10051b2f:	int3   
10051b30:	sub    esp,0x14
10051b33:	mov    ecx,DWORD PTR [edi+0x7c]
10051b36:	mov    edx,DWORD PTR [edi+0x6c]
10051b39:	push   ebx
10051b3a:	push   ebp
10051b3b:	mov    ebp,DWORD PTR [edi+0x78]
10051b3e:	push   esi
10051b3f:	mov    esi,DWORD PTR [edi+0x90]
10051b45:	mov    DWORD PTR [esp+0x10],ecx
10051b49:	mov    ecx,DWORD PTR [edi+0x38]
10051b4c:	mov    DWORD PTR [esp+0x14],esi
10051b50:	mov    esi,DWORD PTR [edi+0x2c]
10051b53:	lea    ebx,[esi-0x106]
10051b59:	add    ecx,edx
10051b5b:	cmp    edx,ebx
10051b5d:	jbe    0x10051b6d
10051b5f:	sub    edx,esi
10051b61:	add    edx,0x106
10051b67:	mov    DWORD PTR [esp+0x18],edx
10051b6b:	jmp    0x10051b75
10051b6d:	mov    DWORD PTR [esp+0x18],0x0
10051b75:	cmp    ebp,DWORD PTR [edi+0x8c]
10051b7b:	movzx  edx,BYTE PTR [ecx+ebp*1-0x1]
10051b80:	mov    BYTE PTR [esp+0xe],dl
10051b84:	movzx  edx,BYTE PTR [ecx+ebp*1]
10051b88:	lea    esi,[ecx+0x102]
10051b8e:	mov    BYTE PTR [esp+0xf],dl
10051b92:	jb     0x10051b99
10051b94:	shr    DWORD PTR [esp+0x10],0x2
10051b99:	mov    edx,DWORD PTR [edi+0x74]
10051b9c:	cmp    DWORD PTR [esp+0x14],edx
10051ba0:	jbe    0x10051ba6
10051ba2:	mov    DWORD PTR [esp+0x14],edx
10051ba6:	mov    edx,DWORD PTR [edi+0x38]
10051ba9:	mov    bl,BYTE PTR [esp+0xf]
10051bad:	add    edx,eax
10051baf:	cmp    BYTE PTR [edx+ebp*1],bl
10051bb2:	jne    0x10051c7f
10051bb8:	mov    bl,BYTE PTR [esp+0xe]
10051bbc:	cmp    BYTE PTR [edx+ebp*1-0x1],bl
10051bc0:	jne    0x10051c7f
10051bc6:	mov    bl,BYTE PTR [edx]
10051bc8:	cmp    bl,BYTE PTR [ecx]
10051bca:	jne    0x10051c7f
10051bd0:	mov    bl,BYTE PTR [edx+0x1]
10051bd3:	add    edx,0x1
10051bd6:	cmp    bl,BYTE PTR [ecx+0x1]
10051bd9:	jne    0x10051c7f
10051bdf:	add    ecx,0x2
10051be2:	add    edx,0x1
10051be5:	mov    bl,BYTE PTR [ecx+0x1]
10051be8:	add    ecx,0x1
10051beb:	add    edx,0x1
10051bee:	cmp    bl,BYTE PTR [edx]
10051bf0:	jne    0x10051c51
10051bf2:	mov    bl,BYTE PTR [ecx+0x1]
10051bf5:	add    ecx,0x1
10051bf8:	add    edx,0x1
10051bfb:	cmp    bl,BYTE PTR [edx]
10051bfd:	jne    0x10051c51
10051bff:	mov    bl,BYTE PTR [ecx+0x1]
10051c02:	add    ecx,0x1
10051c05:	add    edx,0x1
10051c08:	cmp    bl,BYTE PTR [edx]
10051c0a:	jne    0x10051c51
10051c0c:	mov    bl,BYTE PTR [ecx+0x1]
10051c0f:	add    ecx,0x1
10051c12:	add    edx,0x1
10051c15:	cmp    bl,BYTE PTR [edx]
10051c17:	jne    0x10051c51
10051c19:	mov    bl,BYTE PTR [ecx+0x1]
10051c1c:	add    ecx,0x1
10051c1f:	add    edx,0x1
10051c22:	cmp    bl,BYTE PTR [edx]
10051c24:	jne    0x10051c51
10051c26:	mov    bl,BYTE PTR [ecx+0x1]
10051c29:	add    ecx,0x1
10051c2c:	add    edx,0x1
10051c2f:	cmp    bl,BYTE PTR [edx]
10051c31:	jne    0x10051c51
10051c33:	mov    bl,BYTE PTR [ecx+0x1]
10051c36:	add    ecx,0x1
10051c39:	add    edx,0x1
10051c3c:	cmp    bl,BYTE PTR [edx]
10051c3e:	jne    0x10051c51
10051c40:	mov    bl,BYTE PTR [ecx+0x1]
10051c43:	add    ecx,0x1
10051c46:	add    edx,0x1
10051c49:	cmp    bl,BYTE PTR [edx]
10051c4b:	jne    0x10051c51
10051c4d:	cmp    ecx,esi
10051c4f:	jb     0x10051be5
10051c51:	mov    edx,ecx
10051c53:	sub    edx,esi
10051c55:	add    edx,0x102
10051c5b:	cmp    edx,ebp
10051c5d:	lea    ecx,[esi-0x102]
10051c63:	jle    0x10051c7f
10051c65:	cmp    edx,DWORD PTR [esp+0x14]
10051c69:	mov    DWORD PTR [edi+0x70],eax
10051c6c:	mov    ebp,edx
10051c6e:	jge    0x10051c9c
10051c70:	mov    bl,BYTE PTR [edx+ecx*1-0x1]
10051c74:	mov    dl,BYTE PTR [edx+ecx*1]
10051c77:	mov    BYTE PTR [esp+0xe],bl
10051c7b:	mov    BYTE PTR [esp+0xf],dl
10051c7f:	mov    edx,DWORD PTR [edi+0x34]
10051c82:	and    edx,eax
10051c84:	mov    eax,DWORD PTR [edi+0x40]
10051c87:	movzx  eax,WORD PTR [eax+edx*2]
10051c8b:	cmp    eax,DWORD PTR [esp+0x18]
10051c8f:	jbe    0x10051c9c
10051c91:	sub    DWORD PTR [esp+0x10],0x1
10051c96:	jne    0x10051ba6
10051c9c:	mov    eax,DWORD PTR [edi+0x74]
10051c9f:	cmp    ebp,eax
10051ca1:	ja     0x10051ca5
10051ca3:	mov    eax,ebp
10051ca5:	pop    esi
10051ca6:	pop    ebp
10051ca7:	pop    ebx
10051ca8:	add    esp,0x14
10051cab:	ret    
10051cac:	int3   
10051cad:	int3   
10051cae:	int3   
10051caf:	int3   
10051cb0:	mov    ecx,DWORD PTR [esi+0x38]
10051cb3:	mov    eax,DWORD PTR [esi+0x6c]
10051cb6:	push   ebp
10051cb7:	mov    ebp,DWORD PTR [esp+0x8]
10051cbb:	mov    dl,BYTE PTR [ecx+ebp*1]
10051cbe:	add    eax,ecx
10051cc0:	add    ecx,ebp
10051cc2:	cmp    dl,BYTE PTR [eax]
10051cc4:	push   edi
10051cc5:	lea    edi,[eax+0x102]
10051ccb:	jne    0x10051d6a
10051cd1:	mov    dl,BYTE PTR [ecx+0x1]
10051cd4:	cmp    dl,BYTE PTR [eax+0x1]
10051cd7:	jne    0x10051d6a
10051cdd:	add    eax,0x2
10051ce0:	add    ecx,0x2
10051ce3:	mov    dl,BYTE PTR [eax+0x1]
10051ce6:	add    eax,0x1
10051ce9:	add    ecx,0x1
10051cec:	cmp    dl,BYTE PTR [ecx]
10051cee:	jne    0x10051d4f
10051cf0:	mov    dl,BYTE PTR [eax+0x1]
10051cf3:	add    eax,0x1
10051cf6:	add    ecx,0x1
10051cf9:	cmp    dl,BYTE PTR [ecx]
10051cfb:	jne    0x10051d4f
10051cfd:	mov    dl,BYTE PTR [eax+0x1]
10051d00:	add    eax,0x1
10051d03:	add    ecx,0x1
10051d06:	cmp    dl,BYTE PTR [ecx]
10051d08:	jne    0x10051d4f
10051d0a:	mov    dl,BYTE PTR [eax+0x1]
10051d0d:	add    eax,0x1
10051d10:	add    ecx,0x1
10051d13:	cmp    dl,BYTE PTR [ecx]
10051d15:	jne    0x10051d4f
10051d17:	mov    dl,BYTE PTR [eax+0x1]
10051d1a:	add    eax,0x1
10051d1d:	add    ecx,0x1
10051d20:	cmp    dl,BYTE PTR [ecx]
10051d22:	jne    0x10051d4f
10051d24:	mov    dl,BYTE PTR [eax+0x1]
10051d27:	add    eax,0x1
10051d2a:	add    ecx,0x1
10051d2d:	cmp    dl,BYTE PTR [ecx]
10051d2f:	jne    0x10051d4f
10051d31:	mov    dl,BYTE PTR [eax+0x1]
10051d34:	add    eax,0x1
10051d37:	add    ecx,0x1
10051d3a:	cmp    dl,BYTE PTR [ecx]
10051d3c:	jne    0x10051d4f
10051d3e:	mov    dl,BYTE PTR [eax+0x1]
10051d41:	add    eax,0x1
10051d44:	add    ecx,0x1
10051d47:	cmp    dl,BYTE PTR [ecx]
10051d49:	jne    0x10051d4f
10051d4b:	cmp    eax,edi
10051d4d:	jb     0x10051ce3
10051d4f:	sub    eax,edi
10051d51:	add    eax,0x102
10051d56:	cmp    eax,0x3
10051d59:	jl     0x10051d6a
10051d5b:	mov    ecx,DWORD PTR [esi+0x74]
10051d5e:	cmp    eax,ecx
10051d60:	mov    DWORD PTR [esi+0x70],ebp
10051d63:	jbe    0x10051d6f
10051d65:	pop    edi
10051d66:	mov    eax,ecx
10051d68:	pop    ebp
10051d69:	ret    
10051d6a:	mov    eax,0x2
10051d6f:	pop    edi
10051d70:	pop    ebp
10051d71:	ret    
10051d72:	int3   
10051d73:	int3   
10051d74:	int3   
10051d75:	int3   
10051d76:	int3   
10051d77:	int3   
10051d78:	int3   
10051d79:	int3   
10051d7a:	int3   
10051d7b:	int3   
10051d7c:	int3   
10051d7d:	int3   
10051d7e:	int3   
10051d7f:	int3   
10051d80:	push   ebx
10051d81:	mov    ebx,DWORD PTR [edi+0x2c]
10051d84:	push   ebp
10051d85:	push   esi
10051d86:	mov    ebp,DWORD PTR [edi+0x3c]
10051d89:	sub    ebp,DWORD PTR [edi+0x74]
10051d8c:	mov    eax,DWORD PTR [edi+0x6c]
10051d8f:	mov    ecx,DWORD PTR [edi+0x2c]
10051d92:	lea    edx,[ebx+ecx*1-0x106]
10051d99:	sub    ebp,eax
10051d9b:	cmp    eax,edx
10051d9d:	jb     0x10051dfe
10051d9f:	mov    eax,DWORD PTR [edi+0x38]
10051da2:	push   ebx
10051da3:	lea    ecx,[eax+ebx*1]
10051da6:	push   ecx
10051da7:	push   eax
10051da8:	call   0x10045270
10051dad:	mov    edx,DWORD PTR [edi+0x4c]
10051db0:	mov    eax,DWORD PTR [edi+0x44]
10051db3:	sub    DWORD PTR [edi+0x70],ebx
10051db6:	sub    DWORD PTR [edi+0x6c],ebx
10051db9:	add    esp,0xc
10051dbc:	sub    DWORD PTR [edi+0x5c],ebx
10051dbf:	lea    ecx,[eax+edx*2]
10051dc2:	movzx  eax,WORD PTR [ecx-0x2]
10051dc6:	sub    ecx,0x2
10051dc9:	cmp    eax,ebx
10051dcb:	jb     0x10051dd1
10051dcd:	sub    eax,ebx
10051dcf:	jmp    0x10051dd3
10051dd1:	xor    eax,eax
10051dd3:	sub    edx,0x1
10051dd6:	mov    WORD PTR [ecx],ax
10051dd9:	jne    0x10051dc2
10051ddb:	mov    ecx,DWORD PTR [edi+0x40]
10051dde:	mov    edx,ebx
10051de0:	lea    ecx,[ecx+ebx*2]
10051de3:	movzx  eax,WORD PTR [ecx-0x2]
10051de7:	sub    ecx,0x2
10051dea:	cmp    eax,ebx
10051dec:	jb     0x10051df2
10051dee:	sub    eax,ebx
10051df0:	jmp    0x10051df4
10051df2:	xor    eax,eax
10051df4:	sub    edx,0x1
10051df7:	mov    WORD PTR [ecx],ax
10051dfa:	jne    0x10051de3
10051dfc:	add    ebp,ebx
10051dfe:	mov    esi,DWORD PTR [edi]
10051e00:	cmp    DWORD PTR [esi+0x4],0x0
10051e04:	je     0x10051e59
10051e06:	mov    edx,DWORD PTR [edi+0x74]
10051e09:	add    edx,DWORD PTR [edi+0x6c]
10051e0c:	mov    ecx,ebp
10051e0e:	add    edx,DWORD PTR [edi+0x38]
10051e11:	push   edx
10051e12:	call   0x10051a30
10051e17:	add    DWORD PTR [edi+0x74],eax
10051e1a:	mov    edx,DWORD PTR [edi+0x74]
10051e1d:	add    esp,0x4
10051e20:	cmp    edx,0x3
10051e23:	jb     0x10051e45
10051e25:	mov    eax,DWORD PTR [edi+0x6c]
10051e28:	mov    ecx,DWORD PTR [edi+0x38]
10051e2b:	lea    esi,[eax+ecx*1]
10051e2e:	movzx  eax,BYTE PTR [esi]
10051e31:	mov    ecx,DWORD PTR [edi+0x58]
10051e34:	mov    DWORD PTR [edi+0x48],eax
10051e37:	shl    eax,cl
10051e39:	movzx  ecx,BYTE PTR [esi+0x1]
10051e3d:	xor    eax,ecx
10051e3f:	and    eax,DWORD PTR [edi+0x54]
10051e42:	mov    DWORD PTR [edi+0x48],eax
10051e45:	cmp    edx,0x106
10051e4b:	jae    0x10051e59
10051e4d:	mov    edx,DWORD PTR [edi]
10051e4f:	cmp    DWORD PTR [edx+0x4],0x0
10051e53:	jne    0x10051d86
10051e59:	pop    esi
10051e5a:	pop    ebp
10051e5b:	pop    ebx
10051e5c:	ret    
10051e5d:	int3   
10051e5e:	int3   
10051e5f:	int3   
10051e60:	push   esi
10051e61:	push   edi
10051e62:	mov    edi,DWORD PTR [esp+0xc]
10051e66:	mov    eax,DWORD PTR [edi+0xc]
10051e69:	mov    esi,0xffff
10051e6e:	add    eax,0xfffffffb
10051e71:	cmp    eax,esi
10051e73:	jae    0x10051e77
10051e75:	mov    esi,eax
10051e77:	mov    eax,DWORD PTR [edi+0x74]
10051e7a:	cmp    eax,0x1
10051e7d:	ja     0x10051e8f
10051e7f:	call   0x10051d80
10051e84:	mov    eax,DWORD PTR [edi+0x74]
10051e87:	test   eax,eax
10051e89:	je     0x10051f2d
10051e8f:	add    DWORD PTR [edi+0x6c],eax
10051e92:	mov    ecx,DWORD PTR [edi+0x5c]
10051e95:	mov    edx,DWORD PTR [edi+0x6c]
10051e98:	mov    DWORD PTR [edi+0x74],0x0
10051e9f:	lea    eax,[ecx+esi*1]
10051ea2:	je     0x10051ea8
10051ea4:	cmp    edx,eax
10051ea6:	jb     0x10051ee1
10051ea8:	sub    edx,eax
10051eaa:	test   ecx,ecx
10051eac:	mov    DWORD PTR [edi+0x74],edx
10051eaf:	mov    DWORD PTR [edi+0x6c],eax
10051eb2:	jl     0x10051ebb
10051eb4:	mov    edx,DWORD PTR [edi+0x38]
10051eb7:	add    edx,ecx
10051eb9:	jmp    0x10051ebd
10051ebb:	xor    edx,edx
10051ebd:	push   0x0
10051ebf:	sub    eax,ecx
10051ec1:	push   eax
10051ec2:	push   edx
10051ec3:	push   edi
10051ec4:	call   0x10055d10
10051ec9:	mov    eax,DWORD PTR [edi+0x6c]
10051ecc:	mov    DWORD PTR [edi+0x5c],eax
10051ecf:	mov    eax,DWORD PTR [edi]
10051ed1:	add    esp,0x10
10051ed4:	call   0x10051120
10051ed9:	mov    ecx,DWORD PTR [edi]
10051edb:	cmp    DWORD PTR [ecx+0x10],0x0
10051edf:	je     0x10051f28
10051ee1:	mov    ecx,DWORD PTR [edi+0x5c]
10051ee4:	mov    edx,DWORD PTR [edi+0x6c]
10051ee7:	mov    eax,DWORD PTR [edi+0x2c]
10051eea:	sub    edx,ecx
10051eec:	sub    eax,0x106
10051ef1:	cmp    edx,eax
10051ef3:	jb     0x10051e77
10051ef5:	test   ecx,ecx
10051ef7:	jl     0x10051f00
10051ef9:	mov    eax,DWORD PTR [edi+0x38]
10051efc:	add    eax,ecx
10051efe:	jmp    0x10051f02
10051f00:	xor    eax,eax
10051f02:	push   0x0
10051f04:	push   edx
10051f05:	push   eax
10051f06:	push   edi
10051f07:	call   0x10055d10
10051f0c:	mov    ecx,DWORD PTR [edi+0x6c]
10051f0f:	mov    eax,DWORD PTR [edi]
10051f11:	add    esp,0x10
10051f14:	mov    DWORD PTR [edi+0x5c],ecx
10051f17:	call   0x10051120
10051f1c:	mov    edx,DWORD PTR [edi]
10051f1e:	cmp    DWORD PTR [edx+0x10],0x0
10051f22:	jne    0x10051e77
10051f28:	pop    edi
10051f29:	xor    eax,eax
10051f2b:	pop    esi
10051f2c:	ret    
10051f2d:	mov    esi,DWORD PTR [esp+0x10]
10051f31:	test   esi,esi
10051f33:	je     0x10051f28
10051f35:	mov    ecx,DWORD PTR [edi+0x5c]
10051f38:	test   ecx,ecx
10051f3a:	jl     0x10051f43
10051f3c:	mov    eax,DWORD PTR [edi+0x38]
10051f3f:	add    eax,ecx
10051f41:	jmp    0x10051f45
10051f43:	xor    eax,eax
10051f45:	xor    edx,edx
10051f47:	cmp    esi,0x4
10051f4a:	sete   dl
10051f4d:	push   edx
10051f4e:	mov    edx,DWORD PTR [edi+0x6c]
10051f51:	sub    edx,ecx
10051f53:	push   edx
10051f54:	push   eax
10051f55:	push   edi
10051f56:	call   0x10055d10
10051f5b:	mov    eax,DWORD PTR [edi+0x6c]
10051f5e:	mov    DWORD PTR [edi+0x5c],eax
10051f61:	mov    eax,DWORD PTR [edi]
10051f63:	add    esp,0x10
10051f66:	call   0x10051120
10051f6b:	mov    ecx,DWORD PTR [edi]
10051f6d:	xor    eax,eax
10051f6f:	cmp    DWORD PTR [ecx+0x10],eax
10051f72:	jne    0x10051f83
10051f74:	cmp    esi,0x4
10051f77:	setne  al
10051f7a:	pop    edi
10051f7b:	pop    esi
10051f7c:	sub    eax,0x1
10051f7f:	and    eax,0x2
10051f82:	ret    
10051f83:	cmp    esi,0x4
10051f86:	sete   al
10051f89:	pop    edi
10051f8a:	pop    esi
10051f8b:	lea    eax,[eax+eax*1+0x1]
10051f8f:	ret    
10051f90:	push   ebx
10051f91:	push   ebp
10051f92:	push   esi
10051f93:	push   edi
10051f94:	mov    edi,DWORD PTR [esp+0x14]
10051f98:	xor    ebp,ebp
10051f9a:	mov    ebx,0x1
10051f9f:	nop
10051fa0:	mov    eax,DWORD PTR [edi+0x74]
10051fa3:	cmp    eax,0x106
10051fa8:	jae    0x10051fcd
10051faa:	call   0x10051d80
10051faf:	mov    eax,DWORD PTR [edi+0x74]
10051fb2:	cmp    eax,0x106
10051fb7:	mov    esi,DWORD PTR [esp+0x18]
10051fbb:	jae    0x10051fc5
10051fbd:	test   esi,esi
10051fbf:	je     0x10052244
10051fc5:	test   eax,eax
10051fc7:	je     0x1005224b
10051fcd:	cmp    eax,0x3
10051fd0:	jb     0x1005201b
10051fd2:	mov    eax,DWORD PTR [edi+0x48]
10051fd5:	mov    ecx,DWORD PTR [edi+0x58]
10051fd8:	mov    edx,DWORD PTR [edi+0x6c]
10051fdb:	mov    esi,DWORD PTR [edi+0x34]
10051fde:	shl    eax,cl
10051fe0:	mov    ecx,DWORD PTR [edi+0x38]
10051fe3:	movzx  ecx,BYTE PTR [ecx+edx*1+0x2]
10051fe8:	xor    eax,ecx
10051fea:	and    eax,DWORD PTR [edi+0x54]
10051fed:	mov    ecx,DWORD PTR [edi+0x44]
10051ff0:	mov    DWORD PTR [edi+0x48],eax
10051ff3:	mov    ax,WORD PTR [ecx+eax*2]
10051ff7:	and    esi,edx
10051ff9:	mov    edx,DWORD PTR [edi+0x40]
10051ffc:	mov    WORD PTR [edx+esi*2],ax
10052000:	mov    ecx,DWORD PTR [edi+0x6c]
10052003:	and    ecx,DWORD PTR [edi+0x34]
10052006:	mov    edx,DWORD PTR [edi+0x40]
10052009:	movzx  ebp,WORD PTR [edx+ecx*2]
1005200d:	mov    eax,DWORD PTR [edi+0x48]
10052010:	mov    ecx,DWORD PTR [edi+0x44]
10052013:	mov    dx,WORD PTR [edi+0x6c]
10052017:	mov    WORD PTR [ecx+eax*2],dx
1005201b:	test   ebp,ebp
1005201d:	je     0x10052061
1005201f:	mov    eax,DWORD PTR [edi+0x6c]
10052022:	mov    ecx,DWORD PTR [edi+0x2c]
10052025:	sub    eax,ebp
10052027:	sub    ecx,0x106
1005202d:	cmp    eax,ecx
1005202f:	ja     0x10052061
10052031:	mov    ecx,DWORD PTR [edi+0x88]
10052037:	cmp    ecx,0x2
1005203a:	je     0x1005204a
1005203c:	cmp    ecx,0x3
1005203f:	je     0x1005204f
10052041:	mov    eax,ebp
10052043:	call   0x10051b30
10052048:	jmp    0x1005205e
1005204a:	cmp    ecx,0x3
1005204d:	jne    0x10052061
1005204f:	cmp    eax,ebx
10052051:	jne    0x10052061
10052053:	push   ebp
10052054:	mov    esi,edi
10052056:	call   0x10051cb0
1005205b:	add    esp,0x4
1005205e:	mov    DWORD PTR [edi+0x60],eax
10052061:	cmp    DWORD PTR [edi+0x60],0x3
10052065:	jb     0x100521a3
1005206b:	mov    dx,WORD PTR [edi+0x6c]
1005206f:	sub    dx,WORD PTR [edi+0x70]
10052073:	mov    al,BYTE PTR [edi+0x60]
10052076:	mov    esi,DWORD PTR [edi+0x16a4]
1005207c:	movzx  ecx,dx
1005207f:	mov    edx,DWORD PTR [edi+0x16a0]
10052085:	mov    WORD PTR [esi+edx*2],cx
10052089:	mov    edx,DWORD PTR [edi+0x1698]
1005208f:	mov    esi,DWORD PTR [edi+0x16a0]
10052095:	sub    al,0x3
10052097:	mov    BYTE PTR [edx+esi*1],al
1005209a:	add    DWORD PTR [edi+0x16a0],ebx
100520a0:	movzx  eax,al
100520a3:	movzx  edx,BYTE PTR [eax+0x10069290]
100520aa:	add    WORD PTR [edi+edx*4+0x498],bx
100520b2:	lea    eax,[edi+edx*4+0x498]
100520b9:	add    ecx,0xffff
100520bf:	cmp    cx,0x100
100520c4:	jae    0x100520d2
100520c6:	movzx  eax,cx
100520c9:	movzx  eax,BYTE PTR [eax+0x10069090]
100520d0:	jmp    0x100520df
100520d2:	movzx  ecx,cx
100520d5:	shr    ecx,0x7
100520d8:	movzx  eax,BYTE PTR [ecx+0x10069190]
100520df:	add    WORD PTR [edi+eax*4+0x988],bx
100520e7:	mov    edx,DWORD PTR [edi+0x169c]
100520ed:	xor    eax,eax
100520ef:	sub    edx,ebx
100520f1:	cmp    DWORD PTR [edi+0x16a0],edx
100520f7:	sete   al
100520fa:	mov    esi,eax
100520fc:	mov    eax,DWORD PTR [edi+0x60]
100520ff:	sub    DWORD PTR [edi+0x74],eax
10052102:	cmp    eax,DWORD PTR [edi+0x80]
10052108:	mov    ecx,DWORD PTR [edi+0x74]
1005210b:	ja     0x10052177
1005210d:	cmp    ecx,0x3
10052110:	jb     0x10052177
10052112:	add    eax,0xffffffff
10052115:	mov    DWORD PTR [edi+0x60],eax
10052118:	jmp    0x10052120
1005211a:	lea    ebx,[ebx+0x0]
10052120:	add    DWORD PTR [edi+0x6c],ebx
10052123:	mov    edx,DWORD PTR [edi+0x6c]
10052126:	mov    ecx,DWORD PTR [edi+0x38]
10052129:	movzx  eax,BYTE PTR [edx+ecx*1+0x2]
1005212e:	mov    ebp,DWORD PTR [edi+0x48]
10052131:	mov    ecx,DWORD PTR [edi+0x58]
10052134:	shl    ebp,cl
10052136:	mov    ecx,DWORD PTR [edi+0x44]
10052139:	xor    eax,ebp
1005213b:	and    eax,DWORD PTR [edi+0x54]
1005213e:	mov    ebp,DWORD PTR [edi+0x34]
10052141:	and    ebp,edx
10052143:	mov    edx,DWORD PTR [edi+0x40]
10052146:	mov    DWORD PTR [edi+0x48],eax
10052149:	mov    ax,WORD PTR [ecx+eax*2]
1005214d:	mov    WORD PTR [edx+ebp*2],ax
10052151:	mov    ecx,DWORD PTR [edi+0x6c]
10052154:	and    ecx,DWORD PTR [edi+0x34]
10052157:	mov    edx,DWORD PTR [edi+0x40]
1005215a:	movzx  ebp,WORD PTR [edx+ecx*2]
1005215e:	mov    eax,DWORD PTR [edi+0x48]
10052161:	mov    ecx,DWORD PTR [edi+0x44]
10052164:	mov    dx,WORD PTR [edi+0x6c]
10052168:	mov    WORD PTR [ecx+eax*2],dx
1005216c:	add    DWORD PTR [edi+0x60],0xffffffff
10052170:	jne    0x10052120
10052172:	jmp    0x100521fe
10052177:	add    DWORD PTR [edi+0x6c],eax
1005217a:	mov    eax,DWORD PTR [edi+0x6c]
1005217d:	mov    ecx,DWORD PTR [edi+0x38]
10052180:	lea    edx,[eax+ecx*1]
10052183:	mov    ecx,DWORD PTR [edi+0x58]
10052186:	mov    DWORD PTR [edi+0x60],0x0
1005218d:	movzx  eax,BYTE PTR [edx]
10052190:	mov    DWORD PTR [edi+0x48],eax
10052193:	movzx  edx,BYTE PTR [edx+0x1]
10052197:	shl    eax,cl
10052199:	xor    eax,edx
1005219b:	and    eax,DWORD PTR [edi+0x54]
1005219e:	mov    DWORD PTR [edi+0x48],eax
100521a1:	jmp    0x10052201
100521a3:	mov    eax,DWORD PTR [edi+0x6c]
100521a6:	mov    ecx,DWORD PTR [edi+0x38]
100521a9:	mov    al,BYTE PTR [eax+ecx*1]
100521ac:	mov    edx,DWORD PTR [edi+0x16a0]
100521b2:	mov    ecx,DWORD PTR [edi+0x16a4]
100521b8:	mov    WORD PTR [ecx+edx*2],0x0
100521be:	mov    ecx,DWORD PTR [edi+0x16a0]
100521c4:	mov    edx,DWORD PTR [edi+0x1698]
100521ca:	mov    BYTE PTR [edx+ecx*1],al
100521cd:	add    DWORD PTR [edi+0x16a0],ebx
100521d3:	movzx  edx,al
100521d6:	add    WORD PTR [edi+edx*4+0x94],bx
100521de:	lea    eax,[edi+edx*4+0x94]
100521e5:	mov    eax,DWORD PTR [edi+0x169c]
100521eb:	xor    ecx,ecx
100521ed:	sub    eax,ebx
100521ef:	cmp    DWORD PTR [edi+0x16a0],eax
100521f5:	sete   cl
100521f8:	add    DWORD PTR [edi+0x74],0xffffffff
100521fc:	mov    esi,ecx
100521fe:	add    DWORD PTR [edi+0x6c],ebx
10052201:	test   esi,esi
10052203:	je     0x10051fa0
10052209:	mov    ecx,DWORD PTR [edi+0x5c]
1005220c:	test   ecx,ecx
1005220e:	jl     0x10052217
10052210:	mov    eax,DWORD PTR [edi+0x38]
10052213:	add    eax,ecx
10052215:	jmp    0x10052219
10052217:	xor    eax,eax
10052219:	mov    edx,DWORD PTR [edi+0x6c]
1005221c:	push   0x0
1005221e:	sub    edx,ecx
10052220:	push   edx
10052221:	push   eax
10052222:	push   edi
10052223:	call   0x10055d10
10052228:	mov    eax,DWORD PTR [edi+0x6c]
1005222b:	mov    DWORD PTR [edi+0x5c],eax
1005222e:	mov    eax,DWORD PTR [edi]
10052230:	add    esp,0x10
10052233:	call   0x10051120
10052238:	mov    ecx,DWORD PTR [edi]
1005223a:	cmp    DWORD PTR [ecx+0x10],0x0
1005223e:	jne    0x10051fa0
10052244:	pop    edi
10052245:	pop    esi
10052246:	pop    ebp
10052247:	xor    eax,eax
10052249:	pop    ebx
1005224a:	ret    
1005224b:	mov    ecx,DWORD PTR [edi+0x5c]
1005224e:	test   ecx,ecx
10052250:	jl     0x10052259
10052252:	mov    eax,DWORD PTR [edi+0x38]
10052255:	add    eax,ecx
10052257:	jmp    0x1005225b
10052259:	xor    eax,eax
1005225b:	xor    edx,edx
1005225d:	cmp    esi,0x4
10052260:	sete   dl
10052263:	push   edx
10052264:	mov    edx,DWORD PTR [edi+0x6c]
10052267:	sub    edx,ecx
10052269:	push   edx
1005226a:	push   eax
1005226b:	push   edi
1005226c:	call   0x10055d10
10052271:	mov    eax,DWORD PTR [edi+0x6c]
10052274:	mov    DWORD PTR [edi+0x5c],eax
10052277:	mov    eax,DWORD PTR [edi]
10052279:	add    esp,0x10
1005227c:	call   0x10051120
10052281:	mov    ecx,DWORD PTR [edi]
10052283:	xor    eax,eax
10052285:	cmp    DWORD PTR [ecx+0x10],eax
10052288:	jne    0x1005229b
1005228a:	cmp    esi,0x4
1005228d:	setne  al
10052290:	pop    edi
10052291:	pop    esi
10052292:	pop    ebp
10052293:	pop    ebx
10052294:	sub    eax,0x1
10052297:	and    eax,0x2
1005229a:	ret    
1005229b:	cmp    esi,0x4
1005229e:	sete   al
100522a1:	pop    edi
100522a2:	pop    esi
100522a3:	pop    ebp
100522a4:	pop    ebx
100522a5:	lea    eax,[eax+eax*1+0x1]
100522a9:	ret    
100522aa:	int3   
100522ab:	int3   
100522ac:	int3   
100522ad:	int3   
100522ae:	int3   
100522af:	int3   
100522b0:	push   ecx
100522b1:	push   ebx
100522b2:	push   ebp
100522b3:	push   esi
100522b4:	push   edi
100522b5:	mov    edi,DWORD PTR [esp+0x18]
100522b9:	mov    DWORD PTR [esp+0x10],0x0
100522c1:	mov    ebp,0x1
100522c6:	mov    eax,DWORD PTR [edi+0x74]
100522c9:	cmp    eax,0x106
100522ce:	jae    0x100522f3
100522d0:	call   0x10051d80
100522d5:	mov    eax,DWORD PTR [edi+0x74]
100522d8:	cmp    eax,0x106
100522dd:	mov    esi,DWORD PTR [esp+0x1c]
100522e1:	jae    0x100522eb
100522e3:	test   esi,esi
100522e5:	je     0x10052546
100522eb:	test   eax,eax
100522ed:	je     0x100525fb
100522f3:	cmp    eax,0x3
100522f6:	jb     0x10052345
100522f8:	mov    eax,DWORD PTR [edi+0x48]
100522fb:	mov    ecx,DWORD PTR [edi+0x58]
100522fe:	mov    edx,DWORD PTR [edi+0x6c]
10052301:	mov    esi,DWORD PTR [edi+0x34]
10052304:	shl    eax,cl
10052306:	mov    ecx,DWORD PTR [edi+0x38]
10052309:	movzx  ecx,BYTE PTR [ecx+edx*1+0x2]
1005230e:	xor    eax,ecx
10052310:	and    eax,DWORD PTR [edi+0x54]
10052313:	mov    ecx,DWORD PTR [edi+0x44]
10052316:	mov    DWORD PTR [edi+0x48],eax
10052319:	movzx  eax,WORD PTR [ecx+eax*2]
1005231d:	and    esi,edx
1005231f:	mov    edx,DWORD PTR [edi+0x40]
10052322:	mov    WORD PTR [edx+esi*2],ax
10052326:	mov    ecx,DWORD PTR [edi+0x6c]
10052329:	and    ecx,DWORD PTR [edi+0x34]
1005232c:	mov    edx,DWORD PTR [edi+0x40]
1005232f:	movzx  eax,WORD PTR [edx+ecx*2]
10052333:	mov    ecx,DWORD PTR [edi+0x48]
10052336:	mov    edx,DWORD PTR [edi+0x44]
10052339:	mov    DWORD PTR [esp+0x10],eax
1005233d:	movzx  eax,WORD PTR [edi+0x6c]
10052341:	mov    WORD PTR [edx+ecx*2],ax
10052345:	mov    edx,DWORD PTR [edi+0x70]
10052348:	mov    ecx,DWORD PTR [edi+0x60]
1005234b:	mov    DWORD PTR [edi+0x64],edx
1005234e:	mov    edx,DWORD PTR [esp+0x10]
10052352:	test   edx,edx
10052354:	mov    ebx,0x2
10052359:	mov    DWORD PTR [edi+0x78],ecx
1005235c:	mov    DWORD PTR [edi+0x60],ebx
1005235f:	je     0x100523d2
10052361:	mov    eax,ecx
10052363:	cmp    eax,DWORD PTR [edi+0x80]
10052369:	jae    0x100523d2
1005236b:	mov    eax,DWORD PTR [edi+0x6c]
1005236e:	mov    ecx,DWORD PTR [edi+0x2c]
10052371:	sub    eax,edx
10052373:	sub    ecx,0x106
10052379:	cmp    eax,ecx
1005237b:	ja     0x100523d2
1005237d:	mov    ecx,DWORD PTR [edi+0x88]
10052383:	cmp    ecx,ebx
10052385:	je     0x10052395
10052387:	cmp    ecx,0x3
1005238a:	je     0x1005239a
1005238c:	mov    eax,edx
1005238e:	call   0x10051b30
10052393:	jmp    0x100523a9
10052395:	cmp    ecx,0x3
10052398:	jne    0x100523ac
1005239a:	cmp    eax,ebp
1005239c:	jne    0x100523ac
1005239e:	push   edx
1005239f:	mov    esi,edi
100523a1:	call   0x10051cb0
100523a6:	add    esp,0x4
100523a9:	mov    DWORD PTR [edi+0x60],eax
100523ac:	mov    eax,DWORD PTR [edi+0x60]
100523af:	cmp    eax,0x5
100523b2:	ja     0x100523d2
100523b4:	cmp    DWORD PTR [edi+0x88],ebp
100523ba:	je     0x100523cf
100523bc:	cmp    eax,0x3
100523bf:	jne    0x100523d2
100523c1:	mov    edx,DWORD PTR [edi+0x6c]
100523c4:	sub    edx,DWORD PTR [edi+0x70]
100523c7:	cmp    edx,0x1000
100523cd:	jbe    0x100523d2
100523cf:	mov    DWORD PTR [edi+0x60],ebx
100523d2:	mov    eax,DWORD PTR [edi+0x78]
100523d5:	cmp    eax,0x3
100523d8:	jb     0x1005254e
100523de:	cmp    DWORD PTR [edi+0x60],eax
100523e1:	ja     0x1005254e
100523e7:	mov    dx,WORD PTR [edi+0x6c]
100523eb:	sub    dx,WORD PTR [edi+0x64]
100523ef:	mov    eax,DWORD PTR [edi+0x6c]
100523f2:	mov    ecx,DWORD PTR [edi+0x74]
100523f5:	mov    ebx,DWORD PTR [edi+0x16a4]
100523fb:	lea    esi,[eax+ecx*1-0x3]
100523ff:	mov    al,BYTE PTR [edi+0x78]
10052402:	sub    dx,bp
10052405:	movzx  ecx,dx
10052408:	mov    edx,DWORD PTR [edi+0x16a0]
1005240e:	mov    WORD PTR [ebx+edx*2],cx
10052412:	mov    edx,DWORD PTR [edi+0x1698]
10052418:	mov    ebx,DWORD PTR [edi+0x16a0]
1005241e:	sub    al,0x3
10052420:	mov    BYTE PTR [edx+ebx*1],al
10052423:	add    DWORD PTR [edi+0x16a0],ebp
10052429:	movzx  eax,al
1005242c:	movzx  edx,BYTE PTR [eax+0x10069290]
10052433:	add    WORD PTR [edi+edx*4+0x498],bp
1005243b:	lea    eax,[edi+edx*4+0x498]
10052442:	add    ecx,0xffff
10052448:	cmp    cx,0x100
1005244d:	jae    0x1005245b
1005244f:	movzx  eax,cx
10052452:	movzx  eax,BYTE PTR [eax+0x10069090]
10052459:	jmp    0x10052468
1005245b:	movzx  ecx,cx
1005245e:	shr    ecx,0x7
10052461:	movzx  eax,BYTE PTR [ecx+0x10069190]
10052468:	add    WORD PTR [edi+eax*4+0x988],bp
10052470:	mov    edx,DWORD PTR [edi+0x169c]
10052476:	mov    eax,DWORD PTR [edi+0x78]
10052479:	sub    edx,ebp
1005247b:	xor    ebx,ebx
1005247d:	cmp    DWORD PTR [edi+0x16a0],edx
10052483:	mov    ecx,ebp
10052485:	sete   bl
10052488:	sub    ecx,eax
1005248a:	add    DWORD PTR [edi+0x74],ecx
1005248d:	add    eax,0xfffffffe
10052490:	mov    DWORD PTR [edi+0x78],eax
10052493:	add    DWORD PTR [edi+0x6c],ebp
10052496:	mov    edx,DWORD PTR [edi+0x6c]
10052499:	cmp    edx,esi
1005249b:	ja     0x100524ec
1005249d:	mov    eax,DWORD PTR [edi+0x48]
100524a0:	mov    ecx,DWORD PTR [edi+0x58]
100524a3:	mov    ebp,DWORD PTR [edi+0x34]
100524a6:	shl    eax,cl
100524a8:	mov    ecx,DWORD PTR [edi+0x38]
100524ab:	movzx  ecx,BYTE PTR [ecx+edx*1+0x2]
100524b0:	xor    eax,ecx
100524b2:	and    eax,DWORD PTR [edi+0x54]
100524b5:	mov    ecx,DWORD PTR [edi+0x44]
100524b8:	mov    DWORD PTR [edi+0x48],eax
100524bb:	movzx  eax,WORD PTR [ecx+eax*2]
100524bf:	and    ebp,edx
100524c1:	mov    edx,DWORD PTR [edi+0x40]
100524c4:	mov    WORD PTR [edx+ebp*2],ax
100524c8:	mov    ecx,DWORD PTR [edi+0x6c]
100524cb:	and    ecx,DWORD PTR [edi+0x34]
100524ce:	mov    edx,DWORD PTR [edi+0x40]
100524d1:	movzx  eax,WORD PTR [edx+ecx*2]
100524d5:	mov    ecx,DWORD PTR [edi+0x48]
100524d8:	mov    edx,DWORD PTR [edi+0x44]
100524db:	mov    DWORD PTR [esp+0x10],eax
100524df:	movzx  eax,WORD PTR [edi+0x6c]
100524e3:	mov    WORD PTR [edx+ecx*2],ax
100524e7:	mov    ebp,0x1
100524ec:	add    DWORD PTR [edi+0x78],0xffffffff
100524f0:	jne    0x10052493
100524f2:	add    DWORD PTR [edi+0x6c],ebp
100524f5:	test   ebx,ebx
100524f7:	mov    eax,DWORD PTR [edi+0x6c]
100524fa:	mov    DWORD PTR [edi+0x68],0x0
10052501:	mov    DWORD PTR [edi+0x60],0x2
10052508:	je     0x100522c6
1005250e:	mov    edx,DWORD PTR [edi+0x5c]
10052511:	test   edx,edx
10052513:	jl     0x1005251c
10052515:	mov    ecx,DWORD PTR [edi+0x38]
10052518:	add    ecx,edx
1005251a:	jmp    0x1005251e
1005251c:	xor    ecx,ecx
1005251e:	push   0x0
10052520:	sub    eax,edx
10052522:	push   eax
10052523:	push   ecx
10052524:	push   edi
10052525:	call   0x10055d10
1005252a:	mov    ecx,DWORD PTR [edi+0x6c]
1005252d:	mov    eax,DWORD PTR [edi]
1005252f:	add    esp,0x10
10052532:	mov    DWORD PTR [edi+0x5c],ecx
10052535:	call   0x10051120
1005253a:	mov    edx,DWORD PTR [edi]
1005253c:	cmp    DWORD PTR [edx+0x10],0x0
10052540:	jne    0x100522c6
10052546:	pop    edi
10052547:	pop    esi
10052548:	pop    ebp
10052549:	xor    eax,eax
1005254b:	pop    ebx
1005254c:	pop    ecx
1005254d:	ret    
1005254e:	cmp    DWORD PTR [edi+0x68],0x0
10052552:	je     0x100525ec
10052558:	mov    eax,DWORD PTR [edi+0x6c]
1005255b:	mov    ecx,DWORD PTR [edi+0x38]
1005255e:	mov    al,BYTE PTR [eax+ecx*1-0x1]
10052562:	mov    edx,DWORD PTR [edi+0x16a0]
10052568:	mov    ecx,DWORD PTR [edi+0x16a4]
1005256e:	mov    WORD PTR [ecx+edx*2],0x0
10052574:	mov    edx,DWORD PTR [edi+0x1698]
1005257a:	mov    ecx,DWORD PTR [edi+0x16a0]
10052580:	mov    BYTE PTR [edx+ecx*1],al
10052583:	add    DWORD PTR [edi+0x16a0],ebp
10052589:	movzx  edx,al
1005258c:	add    WORD PTR [edi+edx*4+0x94],bp
10052594:	lea    eax,[edi+edx*4+0x94]
1005259b:	mov    eax,DWORD PTR [edi+0x169c]
100525a1:	sub    eax,ebp
100525a3:	cmp    DWORD PTR [edi+0x16a0],eax
100525a9:	jne    0x100525da
100525ab:	mov    ecx,DWORD PTR [edi+0x5c]
100525ae:	test   ecx,ecx
100525b0:	jl     0x100525b9
100525b2:	mov    eax,DWORD PTR [edi+0x38]
100525b5:	add    eax,ecx
100525b7:	jmp    0x100525bb
100525b9:	xor    eax,eax
100525bb:	mov    edx,DWORD PTR [edi+0x6c]
100525be:	push   0x0
100525c0:	sub    edx,ecx
100525c2:	push   edx
100525c3:	push   eax
100525c4:	push   edi
100525c5:	call   0x10055d10
100525ca:	mov    eax,DWORD PTR [edi+0x6c]
100525cd:	mov    DWORD PTR [edi+0x5c],eax
100525d0:	mov    eax,DWORD PTR [edi]
100525d2:	add    esp,0x10
100525d5:	call   0x10051120
100525da:	mov    ecx,DWORD PTR [edi]
100525dc:	add    DWORD PTR [edi+0x6c],ebp
100525df:	add    DWORD PTR [edi+0x74],0xffffffff
100525e3:	cmp    DWORD PTR [ecx+0x10],0x0
100525e7:	jmp    0x10052540
100525ec:	add    DWORD PTR [edi+0x6c],ebp
100525ef:	add    DWORD PTR [edi+0x74],0xffffffff
100525f3:	mov    DWORD PTR [edi+0x68],ebp
100525f6:	jmp    0x100522c6
100525fb:	cmp    DWORD PTR [edi+0x68],0x0
100525ff:	je     0x1005264b
10052601:	mov    edx,DWORD PTR [edi+0x6c]
10052604:	mov    eax,DWORD PTR [edi+0x38]
10052607:	mov    al,BYTE PTR [edx+eax*1-0x1]
1005260b:	mov    ecx,DWORD PTR [edi+0x16a0]
10052611:	mov    edx,DWORD PTR [edi+0x16a4]
10052617:	mov    WORD PTR [edx+ecx*2],0x0
1005261d:	mov    edx,DWORD PTR [edi+0x16a0]
10052623:	mov    ecx,DWORD PTR [edi+0x1698]
10052629:	mov    BYTE PTR [ecx+edx*1],al
1005262c:	add    DWORD PTR [edi+0x16a0],ebp
10052632:	movzx  eax,al
10052635:	add    WORD PTR [edi+eax*4+0x94],bp
1005263d:	lea    eax,[edi+eax*4+0x94]
10052644:	mov    DWORD PTR [edi+0x68],0x0
1005264b:	mov    ecx,DWORD PTR [edi+0x5c]
1005264e:	test   ecx,ecx
10052650:	jl     0x10052659
10052652:	mov    eax,DWORD PTR [edi+0x38]
10052655:	add    eax,ecx
10052657:	jmp    0x1005265b
10052659:	xor    eax,eax
1005265b:	xor    edx,edx
1005265d:	cmp    esi,0x4
10052660:	sete   dl
10052663:	push   edx
10052664:	mov    edx,DWORD PTR [edi+0x6c]
10052667:	sub    edx,ecx
10052669:	push   edx
1005266a:	push   eax
1005266b:	push   edi
1005266c:	call   0x10055d10
10052671:	mov    eax,DWORD PTR [edi+0x6c]
10052674:	mov    DWORD PTR [edi+0x5c],eax
10052677:	mov    eax,DWORD PTR [edi]
10052679:	add    esp,0x10
1005267c:	call   0x10051120
10052681:	mov    ecx,DWORD PTR [edi]
10052683:	xor    eax,eax
10052685:	cmp    DWORD PTR [ecx+0x10],eax
10052688:	jne    0x1005269c
1005268a:	cmp    esi,0x4
1005268d:	setne  al
10052690:	pop    edi
10052691:	pop    esi
10052692:	pop    ebp
10052693:	pop    ebx
10052694:	sub    eax,0x1
10052697:	and    eax,0x2
1005269a:	pop    ecx
1005269b:	ret    
1005269c:	cmp    esi,0x4
1005269f:	sete   al
100526a2:	pop    edi
100526a3:	pop    esi
100526a4:	pop    ebp
100526a5:	pop    ebx
100526a6:	lea    eax,[eax+eax*1+0x1]
100526aa:	pop    ecx
100526ab:	ret    
100526ac:	int3   
100526ad:	int3   
100526ae:	int3   
100526af:	int3   
100526b0:	push   ebx
100526b1:	push   esi
100526b2:	push   edi
100526b3:	mov    edi,DWORD PTR [esp+0x10]
100526b7:	xor    ebx,ebx
100526b9:	cmp    edi,ebx
100526bb:	je     0x10052736
100526bd:	mov    esi,DWORD PTR [edi+0x1c]
100526c0:	cmp    esi,ebx
100526c2:	je     0x10052736
100526c4:	cmp    DWORD PTR [edi+0x20],ebx
100526c7:	je     0x10052736
100526c9:	cmp    DWORD PTR [edi+0x24],ebx
100526cc:	je     0x10052736
100526ce:	mov    DWORD PTR [edi+0x14],ebx
100526d1:	mov    DWORD PTR [edi+0x8],ebx
100526d4:	mov    DWORD PTR [edi+0x18],ebx
100526d7:	mov    DWORD PTR [edi+0x2c],0x2
100526de:	mov    eax,DWORD PTR [esi+0x8]
100526e1:	mov    DWORD PTR [esi+0x10],eax
100526e4:	mov    eax,DWORD PTR [esi+0x18]
100526e7:	cmp    eax,ebx
100526e9:	mov    DWORD PTR [esi+0x14],ebx
100526ec:	jge    0x100526f3
100526ee:	neg    eax
100526f0:	mov    DWORD PTR [esi+0x18],eax
100526f3:	mov    eax,DWORD PTR [esi+0x18]
100526f6:	mov    ecx,eax
100526f8:	neg    ecx
100526fa:	sbb    ecx,ecx
100526fc:	and    ecx,0xffffffb9
100526ff:	push   ebx
10052700:	add    ecx,0x71
10052703:	cmp    eax,0x2
10052706:	push   ebx
10052707:	mov    DWORD PTR [esi+0x4],ecx
1005270a:	push   ebx
1005270b:	jne    0x10052714
1005270d:	call   0x100561c0
10052712:	jmp    0x10052719
10052714:	call   0x100541e0
10052719:	add    esp,0xc
1005271c:	mov    DWORD PTR [edi+0x30],eax
1005271f:	push   esi
10052720:	mov    DWORD PTR [esi+0x28],ebx
10052723:	call   0x100556c0
10052728:	add    esp,0x4
1005272b:	call   0x10051aa0
10052730:	pop    edi
10052731:	pop    esi
10052732:	xor    eax,eax
10052734:	pop    ebx
10052735:	ret    
10052736:	pop    edi
10052737:	pop    esi
10052738:	mov    eax,0xfffffffe
1005273d:	pop    ebx
1005273e:	ret    
1005273f:	int3   
10052740:	mov    eax,DWORD PTR [esp+0x1c]
10052744:	xor    ecx,ecx
10052746:	cmp    eax,ecx
10052748:	push   ebp
10052749:	mov    ebp,0x1
1005274e:	je     0x10052958
10052754:	cmp    BYTE PTR [eax],0x31
10052757:	jne    0x10052958
1005275d:	cmp    DWORD PTR [esp+0x24],0x38
10052762:	jne    0x10052958
10052768:	push   edi
10052769:	mov    edi,DWORD PTR [esp+0xc]
1005276d:	cmp    edi,ecx
1005276f:	jne    0x10052779
10052771:	pop    edi
10052772:	mov    eax,0xfffffffe
10052777:	pop    ebp
10052778:	ret    
10052779:	cmp    DWORD PTR [edi+0x20],ecx
1005277c:	mov    DWORD PTR [edi+0x18],ecx
1005277f:	jne    0x1005278b
10052781:	mov    DWORD PTR [edi+0x20],0x100561e0
10052788:	mov    DWORD PTR [edi+0x28],ecx
1005278b:	cmp    DWORD PTR [edi+0x24],ecx
1005278e:	jne    0x10052797
10052790:	mov    DWORD PTR [edi+0x24],0x10056200
10052797:	cmp    DWORD PTR [esp+0x10],0xffffffff
1005279c:	jne    0x100527a6
1005279e:	mov    DWORD PTR [esp+0x10],0x6
100527a6:	push   ebx
100527a7:	mov    ebx,DWORD PTR [esp+0x1c]
100527ab:	cmp    ebx,ecx
100527ad:	jge    0x100527b5
100527af:	xor    ebp,ebp
100527b1:	neg    ebx
100527b3:	jmp    0x100527c2
100527b5:	cmp    ebx,0xf
100527b8:	jle    0x100527c2
100527ba:	mov    ebp,0x2
100527bf:	sub    ebx,0x10
100527c2:	mov    eax,DWORD PTR [esp+0x20]
100527c6:	add    eax,0xffffffff
100527c9:	cmp    eax,0x8
100527cc:	ja     0x1005294f
100527d2:	cmp    DWORD PTR [esp+0x18],0x8
100527d7:	jne    0x1005294f
100527dd:	lea    ecx,[ebx-0x8]
100527e0:	cmp    ecx,0x7
100527e3:	ja     0x1005294f
100527e9:	cmp    DWORD PTR [esp+0x14],0x9
100527ee:	ja     0x1005294f
100527f4:	cmp    DWORD PTR [esp+0x24],0x4
100527f9:	ja     0x1005294f
100527ff:	cmp    ebx,0x8
10052802:	jne    0x10052809
10052804:	mov    ebx,0x9
10052809:	mov    edx,DWORD PTR [edi+0x28]
1005280c:	mov    eax,DWORD PTR [edi+0x20]
1005280f:	push   esi
10052810:	push   0x16c0
10052815:	push   0x1
10052817:	push   edx
10052818:	call   eax
1005281a:	mov    esi,eax
1005281c:	add    esp,0xc
1005281f:	test   esi,esi
10052821:	je     0x10052945
10052827:	mov    DWORD PTR [edi+0x1c],esi
1005282a:	mov    DWORD PTR [esi+0x18],ebp
1005282d:	mov    ecx,ebx
1005282f:	mov    ebp,0x1
10052834:	shl    ebp,cl
10052836:	mov    DWORD PTR [esi+0x30],ebx
10052839:	mov    ebx,DWORD PTR [esp+0x24]
1005283d:	mov    eax,0x1
10052842:	lea    ecx,[ebp-0x1]
10052845:	mov    DWORD PTR [esi+0x34],ecx
10052848:	lea    ecx,[ebx+0x7]
1005284b:	shl    eax,cl
1005284d:	mov    DWORD PTR [esi+0x50],ecx
10052850:	add    ecx,0x2
10052853:	mov    DWORD PTR [esi],edi
10052855:	mov    DWORD PTR [esi+0x4c],eax
10052858:	add    eax,0xffffffff
1005285b:	mov    DWORD PTR [esi+0x54],eax
1005285e:	mov    eax,0xaaaaaaab
10052863:	mul    ecx
10052865:	shr    edx,1
10052867:	mov    DWORD PTR [esi+0x1c],0x0
1005286e:	mov    DWORD PTR [esi+0x2c],ebp
10052871:	mov    DWORD PTR [esi+0x58],edx
10052874:	mov    edx,DWORD PTR [edi+0x28]
10052877:	mov    eax,DWORD PTR [edi+0x20]
1005287a:	push   0x2
1005287c:	push   ebp
1005287d:	push   edx
1005287e:	call   eax
10052880:	mov    ecx,DWORD PTR [esi+0x2c]
10052883:	mov    DWORD PTR [esi+0x38],eax
10052886:	mov    edx,DWORD PTR [edi+0x28]
10052889:	mov    eax,DWORD PTR [edi+0x20]
1005288c:	push   0x2
1005288e:	push   ecx
1005288f:	push   edx
10052890:	call   eax
10052892:	mov    ecx,DWORD PTR [esi+0x4c]
10052895:	mov    DWORD PTR [esi+0x40],eax
10052898:	mov    edx,DWORD PTR [edi+0x28]
1005289b:	mov    eax,DWORD PTR [edi+0x20]
1005289e:	push   0x2
100528a0:	push   ecx
100528a1:	push   edx
100528a2:	call   eax
100528a4:	mov    DWORD PTR [esi+0x44],eax
100528a7:	lea    ecx,[ebx+0x6]
100528aa:	mov    eax,0x1
100528af:	shl    eax,cl
100528b1:	push   0x4
100528b3:	mov    DWORD PTR [esi+0x169c],eax
100528b9:	mov    ecx,DWORD PTR [edi+0x28]
100528bc:	mov    edx,DWORD PTR [edi+0x20]
100528bf:	push   eax
100528c0:	push   ecx
100528c1:	call   edx
100528c3:	mov    ecx,DWORD PTR [esi+0x169c]
100528c9:	add    esp,0x30
100528cc:	cmp    DWORD PTR [esi+0x38],0x0
100528d0:	lea    edx,[ecx*4+0x0]
100528d7:	mov    DWORD PTR [esi+0x8],eax
100528da:	mov    DWORD PTR [esi+0xc],edx
100528dd:	je     0x1005292d
100528df:	cmp    DWORD PTR [esi+0x40],0x0
100528e3:	je     0x1005292d
100528e5:	cmp    DWORD PTR [esi+0x44],0x0
100528e9:	je     0x1005292d
100528eb:	test   eax,eax
100528ed:	je     0x1005292d
100528ef:	mov    edx,ecx
100528f1:	shr    edx,1
100528f3:	lea    edx,[eax+edx*2]
100528f6:	lea    eax,[eax+ecx*2]
100528f9:	add    eax,ecx
100528fb:	mov    ecx,DWORD PTR [esp+0x18]
100528ff:	mov    DWORD PTR [esi+0x16a4],edx
10052905:	mov    edx,DWORD PTR [esp+0x28]
10052909:	push   edi
1005290a:	mov    DWORD PTR [esi+0x1698],eax
10052910:	mov    DWORD PTR [esi+0x84],ecx
10052916:	mov    DWORD PTR [esi+0x88],edx
1005291c:	mov    BYTE PTR [esi+0x24],0x8
10052920:	call   0x100526b0
10052925:	add    esp,0x4
10052928:	pop    esi
10052929:	pop    ebx
1005292a:	pop    edi
1005292b:	pop    ebp
1005292c:	ret    
1005292d:	mov    DWORD PTR [esi+0x4],0x29a
10052934:	mov    eax,ds:0x1006b518
10052939:	push   edi
1005293a:	mov    DWORD PTR [edi+0x18],eax
1005293d:	call   0x10051950
10052942:	add    esp,0x4
10052945:	pop    esi
10052946:	pop    ebx
10052947:	pop    edi
10052948:	mov    eax,0xfffffffc
1005294d:	pop    ebp
1005294e:	ret    
1005294f:	pop    ebx
10052950:	pop    edi
10052951:	mov    eax,0xfffffffe
10052956:	pop    ebp
10052957:	ret    
10052958:	mov    eax,0xfffffffa
1005295d:	pop    ebp
1005295e:	ret    
1005295f:	int3   
10052960:	mov    edx,DWORD PTR [esp+0x4]
10052964:	xor    ecx,ecx
10052966:	cmp    edx,ecx
10052968:	je     0x100529b7
1005296a:	mov    eax,DWORD PTR [edx+0x1c]
1005296d:	cmp    eax,ecx
1005296f:	je     0x100529b7
10052971:	mov    DWORD PTR [eax+0x1c],ecx
10052974:	mov    DWORD PTR [edx+0x14],ecx
10052977:	mov    DWORD PTR [edx+0x8],ecx
1005297a:	mov    DWORD PTR [edx+0x18],ecx
1005297d:	mov    DWORD PTR [edx+0x30],0x1
10052984:	mov    DWORD PTR [eax],ecx
10052986:	mov    DWORD PTR [eax+0x4],ecx
10052989:	mov    DWORD PTR [eax+0xc],ecx
1005298c:	mov    DWORD PTR [eax+0x20],ecx
1005298f:	mov    DWORD PTR [eax+0x28],ecx
10052992:	mov    DWORD PTR [eax+0x2c],ecx
10052995:	mov    DWORD PTR [eax+0x30],ecx
10052998:	mov    DWORD PTR [eax+0x38],ecx
1005299b:	mov    DWORD PTR [eax+0x3c],ecx
1005299e:	lea    ecx,[eax+0x530]
100529a4:	mov    DWORD PTR [eax+0x14],0x8000
100529ab:	mov    DWORD PTR [eax+0x6c],ecx
100529ae:	mov    DWORD PTR [eax+0x50],ecx
100529b1:	mov    DWORD PTR [eax+0x4c],ecx
100529b4:	xor    eax,eax
100529b6:	ret    
100529b7:	mov    eax,0xfffffffe
100529bc:	ret    
100529bd:	int3   
100529be:	int3   
100529bf:	int3   
100529c0:	mov    eax,DWORD PTR [esp+0xc]
100529c4:	push   edi
100529c5:	xor    edi,edi
100529c7:	cmp    eax,edi
100529c9:	je     0x10052a84
100529cf:	cmp    BYTE PTR [eax],0x31
100529d2:	jne    0x10052a84
100529d8:	cmp    DWORD PTR [esp+0x14],0x38
100529dd:	jne    0x10052a84
100529e3:	push   esi
100529e4:	mov    esi,DWORD PTR [esp+0xc]
100529e8:	cmp    esi,edi
100529ea:	je     0x10052a7c
100529f0:	cmp    DWORD PTR [esi+0x20],edi
100529f3:	mov    DWORD PTR [esi+0x18],edi
100529f6:	jne    0x10052a02
100529f8:	mov    DWORD PTR [esi+0x20],0x100561e0
100529ff:	mov    DWORD PTR [esi+0x28],edi
10052a02:	cmp    DWORD PTR [esi+0x24],edi
10052a05:	jne    0x10052a0e
10052a07:	mov    DWORD PTR [esi+0x24],0x10056200
10052a0e:	mov    eax,DWORD PTR [esi+0x28]
10052a11:	mov    ecx,DWORD PTR [esi+0x20]
10052a14:	push   0x2530
10052a19:	push   0x1
10052a1b:	push   eax
10052a1c:	call   ecx
10052a1e:	add    esp,0xc
10052a21:	cmp    eax,edi
10052a23:	jne    0x10052a2d
10052a25:	pop    esi
10052a26:	mov    eax,0xfffffffc
10052a2b:	pop    edi
10052a2c:	ret    
10052a2d:	mov    ecx,DWORD PTR [esp+0x10]
10052a31:	cmp    ecx,edi
10052a33:	mov    DWORD PTR [esi+0x1c],eax
10052a36:	jge    0x10052a3f
10052a38:	mov    DWORD PTR [eax+0x8],edi
10052a3b:	neg    ecx
10052a3d:	jmp    0x10052a52
10052a3f:	mov    edx,ecx
10052a41:	sar    edx,0x4
10052a44:	add    edx,0x1
10052a47:	cmp    ecx,0x30
10052a4a:	mov    DWORD PTR [eax+0x8],edx
10052a4d:	jge    0x10052a52
10052a4f:	and    ecx,0xf
10052a52:	lea    edx,[ecx-0x8]
10052a55:	cmp    edx,0x7
10052a58:	ja     0x10052a6c
10052a5a:	push   esi
10052a5b:	mov    DWORD PTR [eax+0x24],ecx
10052a5e:	mov    DWORD PTR [eax+0x34],edi
10052a61:	call   0x10052960
10052a66:	add    esp,0x4
10052a69:	pop    esi
10052a6a:	pop    edi
10052a6b:	ret    
10052a6c:	mov    ecx,DWORD PTR [esi+0x24]
10052a6f:	push   eax
10052a70:	mov    eax,DWORD PTR [esi+0x28]
10052a73:	push   eax
10052a74:	call   ecx
10052a76:	add    esp,0x8
10052a79:	mov    DWORD PTR [esi+0x1c],edi
10052a7c:	pop    esi
10052a7d:	mov    eax,0xfffffffe
10052a82:	pop    edi
10052a83:	ret    
10052a84:	mov    eax,0xfffffffa
10052a89:	pop    edi
10052a8a:	ret    
10052a8b:	int3   
10052a8c:	int3   
10052a8d:	int3   
10052a8e:	int3   
10052a8f:	int3   
10052a90:	mov    DWORD PTR [eax+0x4c],0x10067fe0
10052a97:	mov    DWORD PTR [eax+0x54],0x9
10052a9e:	mov    DWORD PTR [eax+0x50],0x100687e0
10052aa5:	mov    DWORD PTR [eax+0x58],0x5
10052aac:	ret    
10052aad:	int3   
10052aae:	int3   
10052aaf:	int3   
10052ab0:	push   ebp
10052ab1:	push   esi
10052ab2:	mov    esi,DWORD PTR [ebx+0x1c]
10052ab5:	xor    ebp,ebp
10052ab7:	cmp    DWORD PTR [esi+0x34],ebp
10052aba:	push   edi
10052abb:	mov    edi,eax
10052abd:	jne    0x10052ae8
10052abf:	mov    ecx,DWORD PTR [esi+0x24]
10052ac2:	mov    edx,DWORD PTR [ebx+0x20]
10052ac5:	mov    eax,0x1
10052aca:	shl    eax,cl
10052acc:	mov    ecx,DWORD PTR [ebx+0x28]
10052acf:	push   0x1
10052ad1:	push   eax
10052ad2:	push   ecx
10052ad3:	call   edx
10052ad5:	add    esp,0xc
10052ad8:	cmp    eax,ebp
10052ada:	mov    DWORD PTR [esi+0x34],eax
10052add:	jne    0x10052ae8
10052adf:	pop    edi
10052ae0:	pop    esi
10052ae1:	mov    eax,0x1
10052ae6:	pop    ebp
10052ae7:	ret    
10052ae8:	cmp    DWORD PTR [esi+0x28],ebp
10052aeb:	jne    0x10052b00
10052aed:	mov    ecx,DWORD PTR [esi+0x24]
10052af0:	mov    eax,0x1
10052af5:	shl    eax,cl
10052af7:	mov    DWORD PTR [esi+0x30],ebp
10052afa:	mov    DWORD PTR [esi+0x2c],ebp
10052afd:	mov    DWORD PTR [esi+0x28],eax
10052b00:	sub    edi,DWORD PTR [ebx+0x10]
10052b03:	mov    eax,DWORD PTR [esi+0x28]
10052b06:	cmp    edi,eax
10052b08:	jb     0x10052b2c
10052b0a:	mov    ecx,DWORD PTR [ebx+0xc]
10052b0d:	mov    edx,DWORD PTR [esi+0x34]
10052b10:	push   eax
10052b11:	sub    ecx,eax
10052b13:	push   ecx
10052b14:	push   edx
10052b15:	call   0x10045270
10052b1a:	mov    eax,DWORD PTR [esi+0x28]
10052b1d:	add    esp,0xc
10052b20:	pop    edi
10052b21:	mov    DWORD PTR [esi+0x30],ebp
10052b24:	mov    DWORD PTR [esi+0x2c],eax
10052b27:	pop    esi
10052b28:	xor    eax,eax
10052b2a:	pop    ebp
10052b2b:	ret    
10052b2c:	sub    eax,DWORD PTR [esi+0x30]
10052b2f:	mov    ebp,eax
10052b31:	cmp    ebp,edi
10052b33:	jbe    0x10052b37
10052b35:	mov    ebp,edi
10052b37:	mov    ecx,DWORD PTR [ebx+0xc]
10052b3a:	mov    edx,DWORD PTR [esi+0x34]
10052b3d:	add    edx,DWORD PTR [esi+0x30]
10052b40:	push   ebp
10052b41:	sub    ecx,edi
10052b43:	push   ecx
10052b44:	push   edx
10052b45:	call   0x10045270
10052b4a:	add    esp,0xc
10052b4d:	sub    edi,ebp
10052b4f:	je     0x10052b73
10052b51:	mov    eax,DWORD PTR [ebx+0xc]
10052b54:	mov    ecx,DWORD PTR [esi+0x34]
10052b57:	push   edi
10052b58:	sub    eax,edi
10052b5a:	push   eax
10052b5b:	push   ecx
10052b5c:	call   0x10045270
10052b61:	mov    edx,DWORD PTR [esi+0x28]
10052b64:	add    esp,0xc
10052b67:	mov    DWORD PTR [esi+0x30],edi
10052b6a:	pop    edi
10052b6b:	mov    DWORD PTR [esi+0x2c],edx
10052b6e:	pop    esi
10052b6f:	xor    eax,eax
10052b71:	pop    ebp
10052b72:	ret    
10052b73:	add    DWORD PTR [esi+0x30],ebp
10052b76:	mov    ecx,DWORD PTR [esi+0x30]
10052b79:	mov    eax,DWORD PTR [esi+0x28]
10052b7c:	cmp    ecx,eax
10052b7e:	jne    0x10052b87
10052b80:	mov    DWORD PTR [esi+0x30],0x0
10052b87:	mov    ecx,DWORD PTR [esi+0x2c]
10052b8a:	cmp    ecx,eax
10052b8c:	jae    0x10052b93
10052b8e:	add    ecx,ebp
10052b90:	mov    DWORD PTR [esi+0x2c],ecx
10052b93:	pop    edi
10052b94:	pop    esi
10052b95:	xor    eax,eax
10052b97:	pop    ebp
10052b98:	ret    
10052b99:	int3   
10052b9a:	int3   
10052b9b:	int3   
10052b9c:	int3   
10052b9d:	int3   
10052b9e:	int3   
10052b9f:	int3   
10052ba0:	mov    eax,DWORD PTR [esp+0x4]
10052ba4:	sub    esp,0x2c
10052ba7:	test   eax,eax
10052ba9:	push   edi
10052baa:	je     0x100540fc
10052bb0:	mov    edi,DWORD PTR [eax+0x1c]
10052bb3:	test   edi,edi
10052bb5:	je     0x100540fc
10052bbb:	cmp    DWORD PTR [eax+0xc],0x0
10052bbf:	je     0x100540fc
10052bc5:	cmp    DWORD PTR [eax],0x0
10052bc8:	jne    0x10052bd4
10052bca:	cmp    DWORD PTR [eax+0x4],0x0
10052bce:	jne    0x100540fc
10052bd4:	cmp    DWORD PTR [edi],0xb
10052bd7:	jne    0x10052bdf
10052bd9:	mov    DWORD PTR [edi],0xc
10052bdf:	mov    ecx,DWORD PTR [eax+0xc]
10052be2:	mov    edx,DWORD PTR [eax+0x4]
10052be5:	push   ebx
10052be6:	mov    ebx,DWORD PTR [edi+0x38]
10052be9:	push   ebp
10052bea:	mov    ebp,DWORD PTR [eax]
10052bec:	mov    DWORD PTR [esp+0x24],ecx
10052bf0:	mov    ecx,DWORD PTR [eax+0x10]
10052bf3:	mov    eax,DWORD PTR [edi]
10052bf5:	cmp    eax,0x1c
10052bf8:	push   esi
10052bf9:	mov    esi,DWORD PTR [edi+0x3c]
10052bfc:	mov    DWORD PTR [esp+0x1c],ecx
10052c00:	mov    DWORD PTR [esp+0x10],edx
10052c04:	mov    DWORD PTR [esp+0x18],ebx
10052c08:	mov    DWORD PTR [esp+0x38],edx
10052c0c:	mov    DWORD PTR [esp+0x2c],ecx
10052c10:	mov    DWORD PTR [esp+0x30],0x0
10052c18:	ja     0x10053fa9
10052c1e:	mov    edi,edi
10052c20:	jmp    DWORD PTR [eax*4+0x10054108]
10052c27:	cmp    DWORD PTR [edi+0x8],0x0
10052c2b:	jne    0x10052c38
10052c2d:	mov    DWORD PTR [edi],0xc
10052c33:	jmp    0x10053f9e
10052c38:	cmp    esi,0x10
10052c3b:	jae    0x10052c68
10052c3d:	lea    ecx,[ecx+0x0]
10052c40:	test   edx,edx
10052c42:	je     0x10053ffc
10052c48:	movzx  eax,BYTE PTR [ebp+0x0]
10052c4c:	mov    ecx,esi
10052c4e:	shl    eax,cl
10052c50:	sub    edx,0x1
10052c53:	add    esi,0x8
10052c56:	add    ebp,0x1
10052c59:	add    ebx,eax
10052c5b:	cmp    esi,0x10
10052c5e:	mov    DWORD PTR [esp+0x10],edx
10052c62:	mov    DWORD PTR [esp+0x18],ebx
10052c66:	jb     0x10052c40
10052c68:	test   BYTE PTR [edi+0x8],0x2
10052c6c:	je     0x10052cbb
10052c6e:	cmp    ebx,0x8b1f
10052c74:	jne    0x10052cbb
10052c76:	push   0x0
10052c78:	push   0x0
10052c7a:	push   0x0
10052c7c:	call   0x100561c0
10052c81:	mov    DWORD PTR [edi+0x18],eax
10052c84:	push   0x2
10052c86:	lea    ecx,[esp+0x30]
10052c8a:	mov    BYTE PTR [esp+0x30],0x1f
10052c8f:	mov    BYTE PTR [esp+0x31],0x8b
10052c94:	mov    edx,DWORD PTR [edi+0x18]
10052c97:	push   ecx
10052c98:	push   edx
10052c99:	call   0x100561c0
10052c9e:	mov    edx,DWORD PTR [esp+0x28]
10052ca2:	xor    ebx,ebx
10052ca4:	add    esp,0x18
10052ca7:	mov    DWORD PTR [edi+0x18],eax
10052caa:	mov    DWORD PTR [esp+0x18],ebx
10052cae:	xor    esi,esi
10052cb0:	mov    DWORD PTR [edi],0x1
10052cb6:	jmp    0x10053f9e
10052cbb:	mov    eax,DWORD PTR [edi+0x20]
10052cbe:	test   eax,eax
10052cc0:	mov    DWORD PTR [edi+0x10],0x0
10052cc7:	je     0x10052cd0
10052cc9:	mov    DWORD PTR [eax+0x30],0xffffffff
10052cd0:	test   BYTE PTR [edi+0x8],0x1
10052cd4:	je     0x10052d81
10052cda:	movzx  eax,bl
10052cdd:	shl    eax,0x8
10052ce0:	mov    ecx,ebx
10052ce2:	shr    ecx,0x8
10052ce5:	add    eax,ecx
10052ce7:	xor    edx,edx
10052ce9:	mov    ecx,0x1f
10052cee:	div    ecx
10052cf0:	test   edx,edx
10052cf2:	jne    0x10052d81
10052cf8:	mov    edx,ebx
10052cfa:	and    dl,0xf
10052cfd:	cmp    dl,0x8
10052d00:	je     0x10052d16
10052d02:	mov    eax,DWORD PTR [esp+0x40]
10052d06:	mov    edx,DWORD PTR [esp+0x10]
10052d0a:	mov    DWORD PTR [eax+0x18],0x10068a2c
10052d11:	jmp    0x10053f98
10052d16:	shr    ebx,0x4
10052d19:	mov    ecx,ebx
10052d1b:	and    ecx,0xf
10052d1e:	add    ecx,0x8
10052d21:	sub    esi,0x4
10052d24:	cmp    ecx,DWORD PTR [edi+0x24]
10052d27:	mov    DWORD PTR [esp+0x18],ebx
10052d2b:	jbe    0x10052d41
10052d2d:	mov    ecx,DWORD PTR [esp+0x40]
10052d31:	mov    edx,DWORD PTR [esp+0x10]
10052d35:	mov    DWORD PTR [ecx+0x18],0x10068a18
10052d3c:	jmp    0x10053f98
10052d41:	mov    edx,0x1
10052d46:	shl    edx,cl
10052d48:	push   0x0
10052d4a:	push   0x0
10052d4c:	push   0x0
10052d4e:	mov    DWORD PTR [edi+0x14],edx
10052d51:	call   0x100541e0
10052d56:	mov    ecx,DWORD PTR [esp+0x4c]
10052d5a:	mov    edx,DWORD PTR [esp+0x1c]
10052d5e:	shr    ebx,0x8
10052d61:	not    ebx
10052d63:	and    ebx,0x2
10052d66:	or     ebx,0x9
10052d69:	mov    DWORD PTR [edi+0x18],eax
10052d6c:	mov    DWORD PTR [ecx+0x30],eax
10052d6f:	mov    DWORD PTR [edi],ebx
10052d71:	xor    ebx,ebx
10052d73:	add    esp,0xc
10052d76:	mov    DWORD PTR [esp+0x18],ebx
10052d7a:	xor    esi,esi
10052d7c:	jmp    0x10053f9e
10052d81:	mov    edx,DWORD PTR [esp+0x40]
10052d85:	mov    DWORD PTR [edx+0x18],0x10068a00
10052d8c:	mov    edx,DWORD PTR [esp+0x10]
10052d90:	jmp    0x10053f98
10052d95:	cmp    esi,0x10
10052d98:	jae    0x10052dc8
10052d9a:	lea    ebx,[ebx+0x0]
10052da0:	test   edx,edx
10052da2:	je     0x10053ffc
10052da8:	movzx  eax,BYTE PTR [ebp+0x0]
10052dac:	mov    ecx,esi
10052dae:	shl    eax,cl
10052db0:	sub    edx,0x1
10052db3:	add    esi,0x8
10052db6:	add    ebp,0x1
10052db9:	add    ebx,eax
10052dbb:	cmp    esi,0x10
10052dbe:	mov    DWORD PTR [esp+0x10],edx
10052dc2:	mov    DWORD PTR [esp+0x18],ebx
10052dc6:	jb     0x10052da0
10052dc8:	cmp    bl,0x8
10052dcb:	mov    DWORD PTR [edi+0x10],ebx
10052dce:	je     0x10052de0
10052dd0:	mov    ecx,DWORD PTR [esp+0x40]
10052dd4:	mov    DWORD PTR [ecx+0x18],0x10068a2c
10052ddb:	jmp    0x10053f98
10052de0:	test   ebx,0xe000
10052de6:	je     0x10052df8
10052de8:	mov    eax,DWORD PTR [esp+0x40]
10052dec:	mov    DWORD PTR [eax+0x18],0x100689e4
10052df3:	jmp    0x10053f98
10052df8:	mov    eax,DWORD PTR [edi+0x20]
10052dfb:	test   eax,eax
10052dfd:	je     0x10052e09
10052dff:	mov    ecx,ebx
10052e01:	shr    ecx,0x8
10052e04:	and    ecx,0x1
10052e07:	mov    DWORD PTR [eax],ecx
10052e09:	test   DWORD PTR [edi+0x10],0x200
10052e10:	je     0x10052e37
10052e12:	mov    BYTE PTR [esp+0x20],bl
10052e16:	shr    ebx,0x8
10052e19:	push   0x2
10052e1b:	lea    edx,[esp+0x24]
10052e1f:	mov    BYTE PTR [esp+0x25],bl
10052e23:	mov    eax,DWORD PTR [edi+0x18]
10052e26:	push   edx
10052e27:	push   eax
10052e28:	call   0x100561c0
10052e2d:	mov    edx,DWORD PTR [esp+0x1c]
10052e31:	add    esp,0xc
10052e34:	mov    DWORD PTR [edi+0x18],eax
10052e37:	xor    ebx,ebx
10052e39:	xor    esi,esi
10052e3b:	mov    DWORD PTR [edi],0x2
10052e41:	jmp    0x10052e48
10052e43:	cmp    esi,0x20
10052e46:	jae    0x10052e6c
10052e48:	test   edx,edx
10052e4a:	je     0x10053ffc
10052e50:	movzx  eax,BYTE PTR [ebp+0x0]
10052e54:	mov    ecx,esi
10052e56:	shl    eax,cl
10052e58:	sub    edx,0x1
10052e5b:	add    esi,0x8
10052e5e:	add    ebp,0x1
10052e61:	add    ebx,eax
10052e63:	cmp    esi,0x20
10052e66:	mov    DWORD PTR [esp+0x10],edx
10052e6a:	jb     0x10052e48
10052e6c:	mov    eax,DWORD PTR [edi+0x20]
10052e6f:	test   eax,eax
10052e71:	je     0x10052e76
10052e73:	mov    DWORD PTR [eax+0x4],ebx
10052e76:	test   DWORD PTR [edi+0x10],0x200
10052e7d:	je     0x10052eb6
10052e7f:	mov    BYTE PTR [esp+0x20],bl
10052e83:	mov    ecx,ebx
10052e85:	mov    edx,ebx
10052e87:	shr    ecx,0x8
10052e8a:	shr    edx,0x10
10052e8d:	shr    ebx,0x18
10052e90:	push   0x4
10052e92:	lea    eax,[esp+0x24]
10052e96:	mov    BYTE PTR [esp+0x25],cl
10052e9a:	mov    BYTE PTR [esp+0x26],dl
10052e9e:	mov    BYTE PTR [esp+0x27],bl
10052ea2:	mov    ecx,DWORD PTR [edi+0x18]
10052ea5:	push   eax
10052ea6:	push   ecx
10052ea7:	call   0x100561c0
10052eac:	mov    edx,DWORD PTR [esp+0x1c]
10052eb0:	add    esp,0xc
10052eb3:	mov    DWORD PTR [edi+0x18],eax
10052eb6:	xor    ebx,ebx
10052eb8:	xor    esi,esi
10052eba:	mov    DWORD PTR [edi],0x3
10052ec0:	jmp    0x10052ec7
10052ec2:	cmp    esi,0x10
10052ec5:	jae    0x10052eeb
10052ec7:	test   edx,edx
10052ec9:	je     0x10053ffc
10052ecf:	movzx  eax,BYTE PTR [ebp+0x0]
10052ed3:	mov    ecx,esi
10052ed5:	shl    eax,cl
10052ed7:	sub    edx,0x1
10052eda:	add    esi,0x8
10052edd:	add    ebp,0x1
10052ee0:	add    ebx,eax
10052ee2:	cmp    esi,0x10
10052ee5:	mov    DWORD PTR [esp+0x10],edx
10052ee9:	jb     0x10052ec7
10052eeb:	mov    eax,DWORD PTR [edi+0x20]
10052eee:	test   eax,eax
10052ef0:	je     0x10052f08
10052ef2:	mov    ecx,ebx
10052ef4:	and    ecx,0xff
10052efa:	mov    DWORD PTR [eax+0x8],ecx
10052efd:	mov    ecx,DWORD PTR [edi+0x20]
10052f00:	mov    eax,ebx
10052f02:	shr    eax,0x8
10052f05:	mov    DWORD PTR [ecx+0xc],eax
10052f08:	test   DWORD PTR [edi+0x10],0x200
10052f0f:	je     0x10052f36
10052f11:	mov    BYTE PTR [esp+0x20],bl
10052f15:	shr    ebx,0x8
10052f18:	push   0x2
10052f1a:	lea    edx,[esp+0x24]
10052f1e:	mov    BYTE PTR [esp+0x25],bl
10052f22:	mov    eax,DWORD PTR [edi+0x18]
10052f25:	push   edx
10052f26:	push   eax
10052f27:	call   0x100561c0
10052f2c:	mov    edx,DWORD PTR [esp+0x1c]
10052f30:	add    esp,0xc
10052f33:	mov    DWORD PTR [edi+0x18],eax
10052f36:	xor    ebx,ebx
10052f38:	mov    DWORD PTR [esp+0x18],ebx
10052f3c:	xor    esi,esi
10052f3e:	mov    DWORD PTR [edi],0x4
10052f44:	test   DWORD PTR [edi+0x10],0x400
10052f4b:	je     0x10052fbb
10052f4d:	cmp    esi,0x10
10052f50:	jae    0x10052f76
10052f52:	test   edx,edx
10052f54:	je     0x10053ffc
10052f5a:	movzx  eax,BYTE PTR [ebp+0x0]
10052f5e:	mov    ecx,esi
10052f60:	shl    eax,cl
10052f62:	sub    edx,0x1
10052f65:	add    esi,0x8
10052f68:	add    ebp,0x1
10052f6b:	add    ebx,eax
10052f6d:	cmp    esi,0x10
10052f70:	mov    DWORD PTR [esp+0x10],edx
10052f74:	jb     0x10052f52
10052f76:	mov    eax,DWORD PTR [edi+0x20]
10052f79:	test   eax,eax
10052f7b:	mov    DWORD PTR [edi+0x40],ebx
10052f7e:	je     0x10052f83
10052f80:	mov    DWORD PTR [eax+0x14],ebx
10052f83:	test   DWORD PTR [edi+0x10],0x200
10052f8a:	je     0x10052fb1
10052f8c:	mov    BYTE PTR [esp+0x20],bl
10052f90:	shr    ebx,0x8
10052f93:	push   0x2
10052f95:	lea    ecx,[esp+0x24]
10052f99:	mov    BYTE PTR [esp+0x25],bl
10052f9d:	mov    edx,DWORD PTR [edi+0x18]
10052fa0:	push   ecx
10052fa1:	push   edx
10052fa2:	call   0x100561c0
10052fa7:	mov    edx,DWORD PTR [esp+0x1c]
10052fab:	add    esp,0xc
10052fae:	mov    DWORD PTR [edi+0x18],eax
10052fb1:	xor    ebx,ebx
10052fb3:	mov    DWORD PTR [esp+0x18],ebx
10052fb7:	xor    esi,esi
10052fb9:	jmp    0x10052fc9
10052fbb:	mov    eax,DWORD PTR [edi+0x20]
10052fbe:	test   eax,eax
10052fc0:	je     0x10052fc9
10052fc2:	mov    DWORD PTR [eax+0x10],0x0
10052fc9:	mov    DWORD PTR [edi],0x5
10052fcf:	test   DWORD PTR [edi+0x10],0x400
10052fd6:	je     0x1005307e
10052fdc:	mov    eax,DWORD PTR [edi+0x40]
10052fdf:	cmp    eax,edx
10052fe1:	mov    DWORD PTR [esp+0x14],eax
10052fe5:	jbe    0x10052fed
10052fe7:	mov    eax,edx
10052fe9:	mov    DWORD PTR [esp+0x14],edx
10052fed:	test   eax,eax
10052fef:	je     0x10053074
10052ff5:	mov    ecx,DWORD PTR [edi+0x20]
10052ff8:	test   ecx,ecx
10052ffa:	je     0x10053043
10052ffc:	mov    ecx,DWORD PTR [ecx+0x10]
10052fff:	test   ecx,ecx
10053001:	mov    DWORD PTR [esp+0x34],ecx
10053005:	je     0x10053043
10053007:	mov    ecx,DWORD PTR [edi+0x20]
1005300a:	mov    ecx,DWORD PTR [ecx+0x14]
1005300d:	sub    ecx,DWORD PTR [edi+0x40]
10053010:	mov    edx,DWORD PTR [edi+0x20]
10053013:	mov    edx,DWORD PTR [edx+0x18]
10053016:	mov    DWORD PTR [esp+0x24],ecx
1005301a:	add    ecx,eax
1005301c:	cmp    ecx,edx
1005301e:	jbe    0x10053026
10053020:	sub    edx,DWORD PTR [esp+0x24]
10053024:	mov    eax,edx
10053026:	mov    edx,DWORD PTR [esp+0x34]
1005302a:	push   eax
1005302b:	mov    eax,DWORD PTR [esp+0x28]
1005302f:	add    edx,eax
10053031:	push   ebp
10053032:	push   edx
10053033:	call   0x10045270
10053038:	mov    eax,DWORD PTR [esp+0x20]
1005303c:	mov    edx,DWORD PTR [esp+0x1c]
10053040:	add    esp,0xc
10053043:	test   DWORD PTR [edi+0x10],0x200
1005304a:	je     0x10053069
1005304c:	mov    ecx,DWORD PTR [esp+0x14]
10053050:	mov    edx,DWORD PTR [edi+0x18]
10053053:	push   ecx
10053054:	push   ebp
10053055:	push   edx
10053056:	call   0x100561c0
1005305b:	mov    edx,DWORD PTR [esp+0x1c]
1005305f:	mov    DWORD PTR [edi+0x18],eax
10053062:	mov    eax,DWORD PTR [esp+0x20]
10053066:	add    esp,0xc
10053069:	sub    edx,eax
1005306b:	add    ebp,eax
1005306d:	sub    DWORD PTR [edi+0x40],eax
10053070:	mov    DWORD PTR [esp+0x10],edx
10053074:	cmp    DWORD PTR [edi+0x40],0x0
10053078:	jne    0x10053ffc
1005307e:	mov    DWORD PTR [edi+0x40],0x0
10053085:	mov    DWORD PTR [edi],0x6
1005308b:	test   DWORD PTR [edi+0x10],0x800
10053092:	je     0x10053128
10053098:	test   edx,edx
1005309a:	je     0x10053ffc
100530a0:	xor    eax,eax
100530a2:	movzx  ecx,BYTE PTR [eax+ebp*1]
100530a6:	add    eax,0x1
100530a9:	mov    DWORD PTR [esp+0x14],eax
100530ad:	mov    eax,DWORD PTR [edi+0x20]
100530b0:	test   eax,eax
100530b2:	mov    DWORD PTR [esp+0x24],ecx
100530b6:	je     0x100530de
100530b8:	mov    ecx,DWORD PTR [eax+0x1c]
100530bb:	test   ecx,ecx
100530bd:	mov    DWORD PTR [esp+0x34],ecx
100530c1:	je     0x100530de
100530c3:	mov    ecx,DWORD PTR [edi+0x40]
100530c6:	cmp    ecx,DWORD PTR [eax+0x20]
100530c9:	jae    0x100530de
100530cb:	mov    edx,DWORD PTR [esp+0x34]
100530cf:	mov    al,BYTE PTR [esp+0x24]
100530d3:	mov    BYTE PTR [edx+ecx*1],al
100530d6:	add    DWORD PTR [edi+0x40],0x1
100530da:	mov    edx,DWORD PTR [esp+0x10]
100530de:	cmp    DWORD PTR [esp+0x24],0x0
100530e3:	je     0x100530ed
100530e5:	mov    eax,DWORD PTR [esp+0x14]
100530e9:	cmp    eax,edx
100530eb:	jb     0x100530a2
100530ed:	test   DWORD PTR [edi+0x10],0x200
100530f4:	je     0x1005310f
100530f6:	mov    ecx,DWORD PTR [esp+0x14]
100530fa:	mov    edx,DWORD PTR [edi+0x18]
100530fd:	push   ecx
100530fe:	push   ebp
100530ff:	push   edx
10053100:	call   0x100561c0
10053105:	mov    edx,DWORD PTR [esp+0x1c]
10053109:	add    esp,0xc
1005310c:	mov    DWORD PTR [edi+0x18],eax
1005310f:	mov    eax,DWORD PTR [esp+0x14]
10053113:	sub    edx,eax
10053115:	add    ebp,eax
10053117:	cmp    DWORD PTR [esp+0x24],0x0
1005311c:	mov    DWORD PTR [esp+0x10],edx
10053120:	jne    0x10053ffc
10053126:	jmp    0x10053136
10053128:	mov    eax,DWORD PTR [edi+0x20]
1005312b:	test   eax,eax
1005312d:	je     0x10053136
1005312f:	mov    DWORD PTR [eax+0x1c],0x0
10053136:	mov    DWORD PTR [edi+0x40],0x0
1005313d:	mov    DWORD PTR [edi],0x7
10053143:	test   DWORD PTR [edi+0x10],0x1000
1005314a:	je     0x100531e6
10053150:	test   edx,edx
10053152:	je     0x10053ffc
10053158:	xor    eax,eax
1005315a:	lea    ebx,[ebx+0x0]
10053160:	movzx  ecx,BYTE PTR [eax+ebp*1]
10053164:	add    eax,0x1
10053167:	mov    DWORD PTR [esp+0x14],eax
1005316b:	mov    eax,DWORD PTR [edi+0x20]
1005316e:	test   eax,eax
10053170:	mov    DWORD PTR [esp+0x24],ecx
10053174:	je     0x1005319c
10053176:	mov    ecx,DWORD PTR [eax+0x24]
10053179:	test   ecx,ecx
1005317b:	mov    DWORD PTR [esp+0x34],ecx
1005317f:	je     0x1005319c
10053181:	mov    ecx,DWORD PTR [edi+0x40]
10053184:	cmp    ecx,DWORD PTR [eax+0x28]
10053187:	jae    0x1005319c
10053189:	mov    edx,DWORD PTR [esp+0x34]
1005318d:	mov    al,BYTE PTR [esp+0x24]
10053191:	mov    BYTE PTR [edx+ecx*1],al
10053194:	add    DWORD PTR [edi+0x40],0x1
10053198:	mov    edx,DWORD PTR [esp+0x10]
1005319c:	cmp    DWORD PTR [esp+0x24],0x0
100531a1:	je     0x100531ab
100531a3:	mov    eax,DWORD PTR [esp+0x14]
100531a7:	cmp    eax,edx
100531a9:	jb     0x10053160
100531ab:	test   DWORD PTR [edi+0x10],0x200
100531b2:	je     0x100531cd
100531b4:	mov    ecx,DWORD PTR [esp+0x14]
100531b8:	mov    edx,DWORD PTR [edi+0x18]
100531bb:	push   ecx
100531bc:	push   ebp
100531bd:	push   edx
100531be:	call   0x100561c0
100531c3:	mov    edx,DWORD PTR [esp+0x1c]
100531c7:	add    esp,0xc
100531ca:	mov    DWORD PTR [edi+0x18],eax
100531cd:	mov    eax,DWORD PTR [esp+0x14]
100531d1:	sub    edx,eax
100531d3:	add    ebp,eax
100531d5:	cmp    DWORD PTR [esp+0x24],0x0
100531da:	mov    DWORD PTR [esp+0x10],edx
100531de:	jne    0x10053ffc
100531e4:	jmp    0x100531f4
100531e6:	mov    eax,DWORD PTR [edi+0x20]
100531e9:	test   eax,eax
100531eb:	je     0x100531f4
100531ed:	mov    DWORD PTR [eax+0x24],0x0
100531f4:	mov    DWORD PTR [edi],0x8
100531fa:	test   DWORD PTR [edi+0x10],0x200
10053201:	je     0x10053250
10053203:	cmp    esi,0x10
10053206:	jae    0x10053230
10053208:	test   edx,edx
1005320a:	je     0x10053ffc
10053210:	movzx  eax,BYTE PTR [ebp+0x0]
10053214:	mov    ecx,esi
10053216:	shl    eax,cl
10053218:	sub    edx,0x1
1005321b:	add    esi,0x8
1005321e:	add    ebp,0x1
10053221:	add    ebx,eax
10053223:	cmp    esi,0x10
10053226:	mov    DWORD PTR [esp+0x10],edx
1005322a:	mov    DWORD PTR [esp+0x18],ebx
1005322e:	jb     0x10053208
10053230:	movzx  ecx,WORD PTR [edi+0x18]
10053234:	cmp    ebx,ecx
10053236:	je     0x10053248
10053238:	mov    eax,DWORD PTR [esp+0x40]
1005323c:	mov    DWORD PTR [eax+0x18],0x100689d0
10053243:	jmp    0x10053f98
10053248:	xor    ebx,ebx
1005324a:	mov    DWORD PTR [esp+0x18],ebx
1005324e:	xor    esi,esi
10053250:	mov    eax,DWORD PTR [edi+0x20]
10053253:	test   eax,eax
10053255:	je     0x1005326d
10053257:	mov    ecx,DWORD PTR [edi+0x10]
1005325a:	sar    ecx,0x9
1005325d:	and    ecx,0x1
10053260:	mov    DWORD PTR [eax+0x2c],ecx
10053263:	mov    edx,DWORD PTR [edi+0x20]
10053266:	mov    DWORD PTR [edx+0x30],0x1
1005326d:	push   0x0
1005326f:	push   0x0
10053271:	push   0x0
10053273:	call   0x100561c0
10053278:	mov    ecx,DWORD PTR [esp+0x4c]
1005327c:	mov    edx,DWORD PTR [esp+0x1c]
10053280:	mov    DWORD PTR [edi+0x18],eax
10053283:	mov    DWORD PTR [ecx+0x30],eax
10053286:	add    esp,0xc
10053289:	mov    DWORD PTR [edi],0xb
1005328f:	jmp    0x10053f9e
10053294:	cmp    esi,0x20
10053297:	jae    0x100532c8
10053299:	lea    esp,[esp+0x0]
100532a0:	test   edx,edx
100532a2:	je     0x10053ffc
100532a8:	movzx  eax,BYTE PTR [ebp+0x0]
100532ac:	mov    ecx,esi
100532ae:	shl    eax,cl
100532b0:	sub    edx,0x1
100532b3:	add    esi,0x8
100532b6:	add    ebp,0x1
100532b9:	add    ebx,eax
100532bb:	cmp    esi,0x20
100532be:	mov    DWORD PTR [esp+0x10],edx
100532c2:	mov    DWORD PTR [esp+0x18],ebx
100532c6:	jb     0x100532a0
100532c8:	mov    ecx,ebx
100532ca:	and    ecx,0xff00
100532d0:	mov    eax,ebx
100532d2:	shl    eax,0x10
100532d5:	add    ecx,eax
100532d7:	xor    eax,eax
100532d9:	mov    ah,BYTE PTR [esp+0x1a]
100532dd:	shl    ecx,0x8
100532e0:	shr    ebx,0x18
100532e3:	add    ecx,eax
100532e5:	lea    eax,[ecx+ebx*1]
100532e8:	mov    ecx,DWORD PTR [esp+0x40]
100532ec:	mov    DWORD PTR [edi+0x18],eax
100532ef:	mov    DWORD PTR [ecx+0x30],eax
100532f2:	xor    ebx,ebx
100532f4:	xor    esi,esi
100532f6:	mov    DWORD PTR [edi],0xa
100532fc:	cmp    DWORD PTR [edi+0xc],0x0
10053300:	je     0x10053fb6
10053306:	push   0x0
10053308:	push   0x0
1005330a:	push   0x0
1005330c:	call   0x100541e0
10053311:	mov    edx,DWORD PTR [esp+0x4c]
10053315:	mov    DWORD PTR [edi+0x18],eax
10053318:	mov    DWORD PTR [edx+0x30],eax
1005331b:	mov    edx,DWORD PTR [esp+0x1c]
1005331f:	add    esp,0xc
10053322:	mov    DWORD PTR [edi],0xb
10053328:	cmp    DWORD PTR [esp+0x44],0x5
1005332d:	je     0x10053ffc
10053333:	cmp    DWORD PTR [edi+0x4],0x0
10053337:	je     0x10053351
10053339:	mov    ecx,esi
1005333b:	and    ecx,0x7
1005333e:	shr    ebx,cl
10053340:	sub    esi,ecx
10053342:	mov    DWORD PTR [edi],0x18
10053348:	mov    DWORD PTR [esp+0x18],ebx
1005334c:	jmp    0x10053f9e
10053351:	cmp    esi,0x3
10053354:	jae    0x1005337a
10053356:	test   edx,edx
10053358:	je     0x10053ffc
1005335e:	movzx  eax,BYTE PTR [ebp+0x0]
10053362:	mov    ecx,esi
10053364:	shl    eax,cl
10053366:	sub    edx,0x1
10053369:	add    esi,0x8
1005336c:	add    ebp,0x1
1005336f:	add    ebx,eax
10053371:	cmp    esi,0x3
10053374:	mov    DWORD PTR [esp+0x10],edx
10053378:	jb     0x10053356
1005337a:	mov    ecx,ebx
1005337c:	shr    ebx,1
1005337e:	mov    eax,ebx
10053380:	and    ecx,0x1
10053383:	and    eax,0x3
10053386:	sub    esi,0x1
10053389:	cmp    eax,0x3
1005338c:	mov    DWORD PTR [edi+0x4],ecx
1005338f:	ja     0x100533ef
10053391:	jmp    DWORD PTR [eax*4+0x1005417c]
10053398:	shr    ebx,0x2
1005339b:	mov    DWORD PTR [edi],0xd
100533a1:	mov    DWORD PTR [esp+0x18],ebx
100533a5:	sub    esi,0x2
100533a8:	jmp    0x10053f9e
100533ad:	mov    eax,edi
100533af:	call   0x10052a90
100533b4:	shr    ebx,0x2
100533b7:	mov    DWORD PTR [edi],0x12
100533bd:	mov    DWORD PTR [esp+0x18],ebx
100533c1:	sub    esi,0x2
100533c4:	jmp    0x10053f9e
100533c9:	shr    ebx,0x2
100533cc:	mov    DWORD PTR [edi],0xf
100533d2:	mov    DWORD PTR [esp+0x18],ebx
100533d6:	sub    esi,0x2
100533d9:	jmp    0x10053f9e
100533de:	mov    eax,DWORD PTR [esp+0x40]
100533e2:	mov    DWORD PTR [eax+0x18],0x100689bc
100533e9:	mov    DWORD PTR [edi],0x1b
100533ef:	shr    ebx,0x2
100533f2:	mov    DWORD PTR [esp+0x18],ebx
100533f6:	sub    esi,0x2
100533f9:	jmp    0x10053f9e
100533fe:	mov    ecx,esi
10053400:	and    ecx,0x7
10053403:	shr    ebx,cl
10053405:	sub    esi,ecx
10053407:	cmp    esi,0x20
1005340a:	mov    DWORD PTR [esp+0x18],ebx
1005340e:	jae    0x10053438
10053410:	test   edx,edx
10053412:	je     0x10053ffc
10053418:	movzx  eax,BYTE PTR [ebp+0x0]
1005341c:	mov    ecx,esi
1005341e:	shl    eax,cl
10053420:	sub    edx,0x1
10053423:	add    esi,0x8
10053426:	add    ebp,0x1
10053429:	add    ebx,eax
1005342b:	cmp    esi,0x20
1005342e:	mov    DWORD PTR [esp+0x10],edx
10053432:	mov    DWORD PTR [esp+0x18],ebx
10053436:	jb     0x10053410
10053438:	mov    ecx,ebx
1005343a:	mov    eax,ebx
1005343c:	not    ecx
1005343e:	and    eax,0xffff
10053443:	shr    ecx,0x10
10053446:	cmp    eax,ecx
10053448:	je     0x1005345a
1005344a:	mov    eax,DWORD PTR [esp+0x40]
1005344e:	mov    DWORD PTR [eax+0x18],0x1006899c
10053455:	jmp    0x10053f98
1005345a:	xor    ebx,ebx
1005345c:	mov    DWORD PTR [edi+0x40],eax
1005345f:	mov    DWORD PTR [esp+0x18],ebx
10053463:	xor    esi,esi
10053465:	mov    DWORD PTR [edi],0xe
1005346b:	mov    eax,DWORD PTR [edi+0x40]
1005346e:	test   eax,eax
10053470:	mov    DWORD PTR [esp+0x14],eax
10053474:	je     0x10053b2c
1005347a:	cmp    eax,edx
1005347c:	jbe    0x10053484
1005347e:	mov    eax,edx
10053480:	mov    DWORD PTR [esp+0x14],edx
10053484:	mov    ecx,DWORD PTR [esp+0x1c]
10053488:	cmp    eax,ecx
1005348a:	jbe    0x10053492
1005348c:	mov    eax,ecx
1005348e:	mov    DWORD PTR [esp+0x14],eax
10053492:	test   eax,eax
10053494:	je     0x10053ffc
1005349a:	mov    ecx,DWORD PTR [esp+0x14]
1005349e:	mov    edx,DWORD PTR [esp+0x28]
100534a2:	push   ecx
100534a3:	push   ebp
100534a4:	push   edx
100534a5:	call   0x10045270
100534aa:	mov    eax,DWORD PTR [esp+0x20]
100534ae:	sub    DWORD PTR [esp+0x1c],eax
100534b2:	sub    DWORD PTR [esp+0x28],eax
100534b6:	add    DWORD PTR [esp+0x34],eax
100534ba:	mov    edx,DWORD PTR [esp+0x1c]
100534be:	add    esp,0xc
100534c1:	add    ebp,eax
100534c3:	sub    DWORD PTR [edi+0x40],eax
100534c6:	jmp    0x10053f9e
100534cb:	cmp    esi,0xe
100534ce:	jae    0x100534f4
100534d0:	test   edx,edx
100534d2:	je     0x10053ffc
100534d8:	movzx  eax,BYTE PTR [ebp+0x0]
100534dc:	mov    ecx,esi
100534de:	shl    eax,cl
100534e0:	sub    edx,0x1
100534e3:	add    esi,0x8
100534e6:	add    ebp,0x1
100534e9:	add    ebx,eax
100534eb:	cmp    esi,0xe
100534ee:	mov    DWORD PTR [esp+0x10],edx
100534f2:	jb     0x100534d0
100534f4:	mov    ecx,ebx
100534f6:	and    ecx,0x1f
100534f9:	shr    ebx,0x5
100534fc:	add    ecx,0x101
10053502:	mov    eax,ebx
10053504:	mov    DWORD PTR [edi+0x60],ecx
10053507:	shr    ebx,0x5
1005350a:	mov    ecx,ebx
1005350c:	and    eax,0x1f
1005350f:	and    ecx,0xf
10053512:	add    eax,0x1
10053515:	add    ecx,0x4
10053518:	shr    ebx,0x4
1005351b:	sub    esi,0xe
1005351e:	cmp    DWORD PTR [edi+0x60],0x11e
10053525:	mov    DWORD PTR [edi+0x64],eax
10053528:	mov    DWORD PTR [edi+0x5c],ecx
1005352b:	mov    DWORD PTR [esp+0x18],ebx
1005352f:	ja     0x10053625
10053535:	cmp    eax,0x1e
10053538:	ja     0x10053625
1005353e:	mov    DWORD PTR [edi+0x68],0x0
10053545:	mov    DWORD PTR [edi],0x10
1005354b:	mov    ecx,DWORD PTR [edi+0x68]
1005354e:	cmp    ecx,DWORD PTR [edi+0x5c]
10053551:	jae    0x100535a8
10053553:	cmp    esi,0x3
10053556:	jae    0x1005357c
10053558:	test   edx,edx
1005355a:	je     0x10053ffc
10053560:	movzx  eax,BYTE PTR [ebp+0x0]
10053564:	mov    ecx,esi
10053566:	shl    eax,cl
10053568:	sub    edx,0x1
1005356b:	add    esi,0x8
1005356e:	add    ebp,0x1
10053571:	add    ebx,eax
10053573:	cmp    esi,0x3
10053576:	mov    DWORD PTR [esp+0x10],edx
1005357a:	jb     0x10053558
1005357c:	mov    eax,DWORD PTR [edi+0x68]
1005357f:	movzx  eax,WORD PTR [eax*2+0x10068860]
10053587:	movzx  ecx,bl
1005358a:	and    ecx,0x7
1005358d:	mov    WORD PTR [edi+eax*2+0x70],cx
10053592:	add    DWORD PTR [edi+0x68],0x1
10053596:	mov    ecx,DWORD PTR [edi+0x68]
10053599:	shr    ebx,0x3
1005359c:	sub    esi,0x3
1005359f:	cmp    ecx,DWORD PTR [edi+0x5c]
100535a2:	mov    DWORD PTR [esp+0x18],ebx
100535a6:	jb     0x10053553
100535a8:	cmp    DWORD PTR [edi+0x68],0x13
100535ac:	jae    0x100535d9
100535ae:	mov    ecx,0x1
100535b3:	xor    eax,eax
100535b5:	jmp    0x100535c0
100535b7:	lea    esp,[esp+0x0]
100535be:	mov    edi,edi
100535c0:	mov    edx,DWORD PTR [edi+0x68]
100535c3:	movzx  edx,WORD PTR [edx*2+0x10068860]
100535cb:	mov    WORD PTR [edi+edx*2+0x70],ax
100535d0:	add    DWORD PTR [edi+0x68],ecx
100535d3:	cmp    DWORD PTR [edi+0x68],0x13
100535d7:	jb     0x100535c0
100535d9:	lea    eax,[edi+0x530]
100535df:	lea    ecx,[edi+0x6c]
100535e2:	mov    DWORD PTR [ecx],eax
100535e4:	mov    DWORD PTR [edi+0x4c],eax
100535e7:	lea    edx,[edi+0x2f0]
100535ed:	push   edx
100535ee:	lea    eax,[edi+0x54]
100535f1:	push   eax
100535f2:	push   ecx
100535f3:	mov    DWORD PTR [eax],0x7
100535f9:	push   0x13
100535fb:	lea    eax,[edi+0x70]
100535fe:	push   eax
100535ff:	push   0x0
10053601:	call   0x100566d0
10053606:	mov    edx,DWORD PTR [esp+0x28]
1005360a:	add    esp,0x18
1005360d:	test   eax,eax
1005360f:	mov    DWORD PTR [esp+0x30],eax
10053613:	je     0x10053635
10053615:	mov    ecx,DWORD PTR [esp+0x40]
10053619:	mov    DWORD PTR [ecx+0x18],0x10068980
10053620:	jmp    0x10053f98
10053625:	mov    eax,DWORD PTR [esp+0x40]
10053629:	mov    DWORD PTR [eax+0x18],0x1006895c
10053630:	jmp    0x10053f98
10053635:	mov    DWORD PTR [edi+0x68],0x0
1005363c:	mov    DWORD PTR [edi],0x11
10053642:	mov    eax,DWORD PTR [edi+0x64]
10053645:	add    eax,DWORD PTR [edi+0x60]
10053648:	cmp    DWORD PTR [edi+0x68],eax
1005364b:	jae    0x10053889
10053651:	mov    ecx,DWORD PTR [edi+0x54]
10053654:	mov    eax,0x1
10053659:	shl    eax,cl
1005365b:	mov    ecx,DWORD PTR [edi+0x4c]
1005365e:	sub    eax,0x1
10053661:	and    eax,ebx
10053663:	mov    eax,DWORD PTR [ecx+eax*4]
10053666:	mov    ecx,eax
10053668:	shr    ecx,0x8
1005366b:	movzx  ecx,cl
1005366e:	cmp    ecx,esi
10053670:	mov    DWORD PTR [esp+0x14],eax
10053674:	jbe    0x100536ba
10053676:	test   edx,edx
10053678:	je     0x10053ffc
1005367e:	movzx  eax,BYTE PTR [ebp+0x0]
10053682:	mov    ecx,esi
10053684:	shl    eax,cl
10053686:	mov    ecx,DWORD PTR [edi+0x54]
10053689:	sub    edx,0x1
1005368c:	add    esi,0x8
1005368f:	add    ebx,eax
10053691:	mov    eax,0x1
10053696:	shl    eax,cl
10053698:	mov    ecx,DWORD PTR [edi+0x4c]
1005369b:	add    ebp,0x1
1005369e:	mov    DWORD PTR [esp+0x10],edx
100536a2:	sub    eax,0x1
100536a5:	and    eax,ebx
100536a7:	mov    eax,DWORD PTR [ecx+eax*4]
100536aa:	mov    ecx,eax
100536ac:	shr    ecx,0x8
100536af:	movzx  ecx,cl
100536b2:	cmp    ecx,esi
100536b4:	mov    DWORD PTR [esp+0x14],eax
100536b8:	ja     0x10053676
100536ba:	mov    ecx,eax
100536bc:	shr    ecx,0x10
100536bf:	cmp    ecx,0x10
100536c2:	jae    0x1005371b
100536c4:	mov    ecx,eax
100536c6:	shr    ecx,0x8
100536c9:	movzx  ecx,cl
100536cc:	cmp    esi,ecx
100536ce:	jae    0x100536fa
100536d0:	test   edx,edx
100536d2:	je     0x10053ffc
100536d8:	movzx  eax,BYTE PTR [ebp+0x0]
100536dc:	mov    ecx,esi
100536de:	shl    eax,cl
100536e0:	sub    edx,0x1
100536e3:	add    esi,0x8
100536e6:	add    ebp,0x1
100536e9:	add    ebx,eax
100536eb:	mov    eax,DWORD PTR [esp+0x14]
100536ef:	movzx  ecx,ah
100536f2:	cmp    esi,ecx
100536f4:	mov    DWORD PTR [esp+0x10],edx
100536f8:	jb     0x100536d0
100536fa:	movzx  ecx,ah
100536fd:	mov    eax,DWORD PTR [edi+0x68]
10053700:	shr    ebx,cl
10053702:	sub    esi,ecx
10053704:	mov    cx,WORD PTR [esp+0x16]
10053709:	mov    WORD PTR [edi+eax*2+0x70],cx
1005370e:	add    DWORD PTR [edi+0x68],0x1
10053712:	mov    DWORD PTR [esp+0x18],ebx
10053716:	jmp    0x1005387a
1005371b:	mov    cx,WORD PTR [esp+0x16]
10053720:	cmp    cx,0x10
10053724:	jne    0x10053791
10053726:	movzx  ecx,ah
10053729:	lea    eax,[ecx+0x2]
1005372c:	cmp    esi,eax
1005372e:	mov    DWORD PTR [esp+0x24],ecx
10053732:	jae    0x1005375e
10053734:	test   edx,edx
10053736:	je     0x10053ffc
1005373c:	movzx  eax,BYTE PTR [ebp+0x0]
10053740:	mov    ecx,esi
10053742:	shl    eax,cl
10053744:	mov    ecx,DWORD PTR [esp+0x24]
10053748:	sub    edx,0x1
1005374b:	add    esi,0x8
1005374e:	add    ebx,eax
10053750:	lea    eax,[ecx+0x2]
10053753:	add    ebp,0x1
10053756:	cmp    esi,eax
10053758:	mov    DWORD PTR [esp+0x10],edx
1005375c:	jb     0x10053734
1005375e:	mov    eax,DWORD PTR [edi+0x68]
10053761:	shr    ebx,cl
10053763:	sub    esi,ecx
10053765:	test   eax,eax
10053767:	mov    DWORD PTR [esp+0x18],ebx
1005376b:	je     0x100538e0
10053771:	movzx  ecx,WORD PTR [edi+eax*2+0x6e]
10053776:	mov    eax,ebx
10053778:	and    eax,0x3
1005377b:	add    eax,0x3
1005377e:	shr    ebx,0x2
10053781:	mov    DWORD PTR [esp+0x24],ecx
10053785:	mov    DWORD PTR [esp+0x14],eax
10053789:	sub    esi,0x2
1005378c:	jmp    0x10053840
10053791:	cmp    cx,0x11
10053795:	movzx  ecx,ah
10053798:	mov    DWORD PTR [esp+0x24],ecx
1005379c:	jne    0x100537e7
1005379e:	lea    eax,[ecx+0x3]
100537a1:	cmp    esi,eax
100537a3:	jae    0x100537cf
100537a5:	test   edx,edx
100537a7:	je     0x10053ffc
100537ad:	movzx  eax,BYTE PTR [ebp+0x0]
100537b1:	mov    ecx,esi
100537b3:	shl    eax,cl
100537b5:	mov    ecx,DWORD PTR [esp+0x24]
100537b9:	sub    edx,0x1
100537bc:	add    esi,0x8
100537bf:	add    ebx,eax
100537c1:	lea    eax,[ecx+0x3]
100537c4:	add    ebp,0x1
100537c7:	cmp    esi,eax
100537c9:	mov    DWORD PTR [esp+0x10],edx
100537cd:	jb     0x100537a5
100537cf:	shr    ebx,cl
100537d1:	mov    eax,ebx
100537d3:	and    eax,0x7
100537d6:	add    eax,0x3
100537d9:	mov    DWORD PTR [esp+0x14],eax
100537dd:	shr    ebx,0x3
100537e0:	mov    eax,0xfffffffd
100537e5:	jmp    0x10053830
100537e7:	lea    eax,[ecx+0x7]
100537ea:	cmp    esi,eax
100537ec:	jae    0x1005381a
100537ee:	mov    edi,edi
100537f0:	test   edx,edx
100537f2:	je     0x10053ffc
100537f8:	movzx  eax,BYTE PTR [ebp+0x0]
100537fc:	mov    ecx,esi
100537fe:	shl    eax,cl
10053800:	mov    ecx,DWORD PTR [esp+0x24]
10053804:	sub    edx,0x1
10053807:	add    esi,0x8
1005380a:	add    ebx,eax
1005380c:	lea    eax,[ecx+0x7]
1005380f:	add    ebp,0x1
10053812:	cmp    esi,eax
10053814:	mov    DWORD PTR [esp+0x10],edx
10053818:	jb     0x100537f0
1005381a:	shr    ebx,cl
1005381c:	mov    eax,ebx
1005381e:	and    eax,0x7f
10053821:	add    eax,0xb
10053824:	mov    DWORD PTR [esp+0x14],eax
10053828:	shr    ebx,0x7
1005382b:	mov    eax,0xfffffff9
10053830:	sub    eax,ecx
10053832:	add    esi,eax
10053834:	mov    eax,DWORD PTR [esp+0x14]
10053838:	mov    DWORD PTR [esp+0x24],0x0
10053840:	mov    ecx,DWORD PTR [edi+0x68]
10053843:	add    ecx,eax
10053845:	mov    eax,DWORD PTR [edi+0x64]
10053848:	add    eax,DWORD PTR [edi+0x60]
1005384b:	mov    DWORD PTR [esp+0x18],ebx
1005384f:	cmp    ecx,eax
10053851:	ja     0x100538f0
10053857:	cmp    DWORD PTR [esp+0x14],0x0
1005385c:	je     0x1005387a
1005385e:	mov    eax,DWORD PTR [esp+0x24]
10053862:	mov    ecx,DWORD PTR [edi+0x68]
10053865:	sub    DWORD PTR [esp+0x14],0x1
1005386a:	mov    WORD PTR [edi+ecx*2+0x70],ax
1005386f:	add    DWORD PTR [edi+0x68],0x1
10053873:	cmp    DWORD PTR [esp+0x14],0x0
10053878:	jne    0x10053862
1005387a:	mov    eax,DWORD PTR [edi+0x64]
1005387d:	add    eax,DWORD PTR [edi+0x60]
10053880:	cmp    DWORD PTR [edi+0x68],eax
10053883:	jb     0x10053651
10053889:	cmp    DWORD PTR [edi],0x1b
1005388c:	je     0x10053f9e
10053892:	lea    eax,[edi+0x530]
10053898:	lea    ecx,[edi+0x6c]
1005389b:	mov    DWORD PTR [ecx],eax
1005389d:	lea    edx,[edi+0x2f0]
100538a3:	push   edx
100538a4:	mov    DWORD PTR [edi+0x4c],eax
100538a7:	lea    eax,[edi+0x54]
100538aa:	push   eax
100538ab:	push   ecx
100538ac:	mov    ecx,DWORD PTR [edi+0x60]
100538af:	push   ecx
100538b0:	lea    edx,[edi+0x70]
100538b3:	push   edx
100538b4:	push   0x1
100538b6:	mov    DWORD PTR [eax],0x9
100538bc:	call   0x100566d0
100538c1:	add    esp,0x18
100538c4:	test   eax,eax
100538c6:	mov    DWORD PTR [esp+0x30],eax
100538ca:	je     0x10053900
100538cc:	mov    eax,DWORD PTR [esp+0x40]
100538d0:	mov    edx,DWORD PTR [esp+0x10]
100538d4:	mov    DWORD PTR [eax+0x18],0x10068940
100538db:	jmp    0x10053f98
100538e0:	mov    ecx,DWORD PTR [esp+0x40]
100538e4:	mov    DWORD PTR [ecx+0x18],0x10068924
100538eb:	jmp    0x10053f98
100538f0:	mov    eax,DWORD PTR [esp+0x40]
100538f4:	mov    DWORD PTR [eax+0x18],0x10068924
100538fb:	jmp    0x10053f98
10053900:	mov    edx,DWORD PTR [edi+0x6c]
10053903:	lea    ecx,[edi+0x6c]
10053906:	mov    DWORD PTR [edi+0x50],edx
10053909:	lea    edx,[edi+0x2f0]
1005390f:	push   edx
10053910:	lea    eax,[edi+0x58]
10053913:	push   eax
10053914:	push   ecx
10053915:	mov    ecx,DWORD PTR [edi+0x60]
10053918:	mov    DWORD PTR [eax],0x6
1005391e:	mov    eax,DWORD PTR [edi+0x64]
10053921:	push   eax
10053922:	lea    edx,[edi+ecx*2+0x70]
10053926:	push   edx
10053927:	push   0x2
10053929:	call   0x100566d0
1005392e:	mov    edx,DWORD PTR [esp+0x28]
10053932:	add    esp,0x18
10053935:	test   eax,eax
10053937:	mov    DWORD PTR [esp+0x30],eax
1005393b:	je     0x1005394d
1005393d:	mov    eax,DWORD PTR [esp+0x40]
10053941:	mov    DWORD PTR [eax+0x18],0x1006890c
10053948:	jmp    0x10053f98
1005394d:	mov    DWORD PTR [edi],0x12
10053953:	cmp    edx,0x6
10053956:	jb     0x100539c1
1005395c:	cmp    DWORD PTR [esp+0x1c],0x102
10053964:	jb     0x100539c1
10053966:	mov    eax,DWORD PTR [esp+0x40]
1005396a:	mov    edx,DWORD PTR [esp+0x1c]
1005396e:	mov    ecx,DWORD PTR [esp+0x28]
10053972:	mov    DWORD PTR [eax+0x10],edx
10053975:	mov    edx,DWORD PTR [esp+0x2c]
10053979:	mov    DWORD PTR [eax+0xc],ecx
1005397c:	mov    ecx,DWORD PTR [esp+0x10]
10053980:	push   edx
10053981:	mov    DWORD PTR [eax],ebp
10053983:	mov    DWORD PTR [eax+0x4],ecx
10053986:	push   eax
10053987:	mov    DWORD PTR [edi+0x38],ebx
1005398a:	mov    DWORD PTR [edi+0x3c],esi
1005398d:	call   0x10056210
10053992:	mov    eax,DWORD PTR [esp+0x48]
10053996:	mov    edx,DWORD PTR [eax+0x10]
10053999:	mov    ecx,DWORD PTR [eax+0xc]
1005399c:	mov    ebp,DWORD PTR [eax]
1005399e:	mov    eax,DWORD PTR [eax+0x4]
100539a1:	mov    ebx,DWORD PTR [edi+0x38]
100539a4:	mov    esi,DWORD PTR [edi+0x3c]
100539a7:	mov    DWORD PTR [esp+0x24],edx
100539ab:	add    esp,0x8
100539ae:	mov    DWORD PTR [esp+0x28],ecx
100539b2:	mov    DWORD PTR [esp+0x10],eax
100539b6:	mov    DWORD PTR [esp+0x18],ebx
100539ba:	mov    edx,eax
100539bc:	jmp    0x10053f9e
100539c1:	mov    ecx,DWORD PTR [edi+0x54]
100539c4:	mov    eax,0x1
100539c9:	shl    eax,cl
100539cb:	sub    eax,0x1
100539ce:	and    eax,ebx
100539d0:	mov    ecx,eax
100539d2:	mov    eax,DWORD PTR [edi+0x4c]
100539d5:	mov    eax,DWORD PTR [eax+ecx*4]
100539d8:	mov    ecx,eax
100539da:	shr    ecx,0x8
100539dd:	movzx  ecx,cl
100539e0:	cmp    ecx,esi
100539e2:	mov    DWORD PTR [esp+0x14],eax
100539e6:	jbe    0x10053a2c
100539e8:	test   edx,edx
100539ea:	je     0x10053ffc
100539f0:	movzx  eax,BYTE PTR [ebp+0x0]
100539f4:	mov    ecx,esi
100539f6:	shl    eax,cl
100539f8:	mov    ecx,DWORD PTR [edi+0x54]
100539fb:	sub    edx,0x1
100539fe:	add    esi,0x8
10053a01:	add    ebx,eax
10053a03:	mov    eax,0x1
10053a08:	shl    eax,cl
10053a0a:	mov    ecx,DWORD PTR [edi+0x4c]
10053a0d:	add    ebp,0x1
10053a10:	mov    DWORD PTR [esp+0x10],edx
10053a14:	sub    eax,0x1
10053a17:	and    eax,ebx
10053a19:	mov    eax,DWORD PTR [ecx+eax*4]
10053a1c:	mov    ecx,eax
10053a1e:	shr    ecx,0x8
10053a21:	movzx  ecx,cl
10053a24:	cmp    ecx,esi
10053a26:	mov    DWORD PTR [esp+0x14],eax
10053a2a:	ja     0x100539e8
10053a2c:	test   al,al
10053a2e:	je     0x10053afd
10053a34:	test   al,0xf0
10053a36:	jne    0x10053afd
10053a3c:	mov    ecx,eax
10053a3e:	shr    ecx,0x8
10053a41:	mov    DWORD PTR [esp+0x34],ecx
10053a45:	movzx  ecx,cl
10053a48:	mov    DWORD PTR [esp+0x24],ecx
10053a4c:	movzx  ecx,al
10053a4f:	add    ecx,DWORD PTR [esp+0x24]
10053a53:	mov    DWORD PTR [esp+0x18],eax
10053a57:	mov    eax,0x1
10053a5c:	shl    eax,cl
10053a5e:	mov    ecx,DWORD PTR [esp+0x24]
10053a62:	sub    eax,0x1
10053a65:	and    eax,ebx
10053a67:	shr    eax,cl
10053a69:	mov    ecx,DWORD PTR [esp+0x14]
10053a6d:	shr    ecx,0x10
10053a70:	add    eax,ecx
10053a72:	mov    ecx,eax
10053a74:	mov    eax,DWORD PTR [edi+0x4c]
10053a77:	mov    eax,DWORD PTR [eax+ecx*4]
10053a7a:	movzx  ecx,BYTE PTR [esp+0x34]
10053a7f:	mov    DWORD PTR [esp+0x14],eax
10053a83:	shr    eax,0x8
10053a86:	movzx  eax,al
10053a89:	add    eax,ecx
10053a8b:	cmp    eax,esi
10053a8d:	jbe    0x10053af0
10053a93:	test   edx,edx
10053a95:	je     0x10053ffc
10053a9b:	movzx  eax,BYTE PTR [ebp+0x0]
10053a9f:	mov    ecx,esi
10053aa1:	shl    eax,cl
10053aa3:	mov    ecx,DWORD PTR [esp+0x18]
10053aa7:	sub    edx,0x1
10053aaa:	add    esi,0x8
10053aad:	add    ebx,eax
10053aaf:	movzx  eax,ch
10053ab2:	add    ecx,eax
10053ab4:	mov    DWORD PTR [esp+0x24],eax
10053ab8:	mov    eax,0x1
10053abd:	shl    eax,cl
10053abf:	mov    ecx,DWORD PTR [esp+0x24]
10053ac3:	add    ebp,0x1
10053ac6:	mov    DWORD PTR [esp+0x10],edx
10053aca:	sub    eax,0x1
10053acd:	and    eax,ebx
10053acf:	shr    eax,cl
10053ad1:	movzx  ecx,WORD PTR [esp+0x1a]
10053ad6:	add    eax,ecx
10053ad8:	mov    ecx,DWORD PTR [edi+0x4c]
10053adb:	mov    eax,DWORD PTR [ecx+eax*4]
10053ade:	mov    DWORD PTR [esp+0x14],eax
10053ae2:	shr    eax,0x8
10053ae5:	movzx  eax,al
10053ae8:	add    eax,DWORD PTR [esp+0x24]
10053aec:	cmp    eax,esi
10053aee:	ja     0x10053a93
10053af0:	movzx  ecx,BYTE PTR [esp+0x19]
10053af5:	mov    eax,DWORD PTR [esp+0x14]
10053af9:	shr    ebx,cl
10053afb:	sub    esi,ecx
10053afd:	mov    ecx,eax
10053aff:	shr    ecx,0x8
10053b02:	movzx  ecx,cl
10053b05:	shr    ebx,cl
10053b07:	sub    esi,ecx
10053b09:	mov    DWORD PTR [esp+0x24],ecx
10053b0d:	mov    ecx,eax
10053b0f:	shr    ecx,0x10
10053b12:	test   al,al
10053b14:	mov    DWORD PTR [esp+0x18],ebx
10053b18:	mov    DWORD PTR [edi+0x40],ecx
10053b1b:	jne    0x10053b28
10053b1d:	mov    DWORD PTR [edi],0x17
10053b23:	jmp    0x10053f9e
10053b28:	test   al,0x20
10053b2a:	je     0x10053b37
10053b2c:	mov    DWORD PTR [edi],0xb
10053b32:	jmp    0x10053f9e
10053b37:	test   al,0x40
10053b39:	je     0x10053b4b
10053b3b:	mov    eax,DWORD PTR [esp+0x40]
10053b3f:	mov    DWORD PTR [eax+0x18],0x100688f0
10053b46:	jmp    0x10053f98
10053b4b:	and    eax,0xf
10053b4e:	mov    DWORD PTR [edi+0x48],eax
10053b51:	mov    DWORD PTR [edi],0x13
10053b57:	mov    eax,DWORD PTR [edi+0x48]
10053b5a:	test   eax,eax
10053b5c:	je     0x10053b9c
10053b5e:	cmp    esi,eax
10053b60:	jae    0x10053b86
10053b62:	test   edx,edx
10053b64:	je     0x10053ffc
10053b6a:	movzx  eax,BYTE PTR [ebp+0x0]
10053b6e:	mov    ecx,esi
10053b70:	shl    eax,cl
10053b72:	sub    edx,0x1
10053b75:	add    esi,0x8
10053b78:	add    ebp,0x1
10053b7b:	add    ebx,eax
10053b7d:	cmp    esi,DWORD PTR [edi+0x48]
10053b80:	mov    DWORD PTR [esp+0x10],edx
10053b84:	jb     0x10053b62
10053b86:	mov    ecx,DWORD PTR [edi+0x48]
10053b89:	mov    eax,0x1
10053b8e:	shl    eax,cl
10053b90:	sub    eax,0x1
10053b93:	and    eax,ebx
10053b95:	add    DWORD PTR [edi+0x40],eax
10053b98:	shr    ebx,cl
10053b9a:	sub    esi,ecx
10053b9c:	mov    DWORD PTR [edi],0x14
10053ba2:	mov    ecx,DWORD PTR [edi+0x58]
10053ba5:	mov    eax,0x1
10053baa:	shl    eax,cl
10053bac:	sub    eax,0x1
10053baf:	and    eax,ebx
10053bb1:	mov    ecx,eax
10053bb3:	mov    eax,DWORD PTR [edi+0x50]
10053bb6:	mov    eax,DWORD PTR [eax+ecx*4]
10053bb9:	mov    ecx,eax
10053bbb:	shr    ecx,0x8
10053bbe:	movzx  ecx,cl
10053bc1:	cmp    ecx,esi
10053bc3:	mov    DWORD PTR [esp+0x14],eax
10053bc7:	jbe    0x10053c14
10053bc9:	lea    esp,[esp+0x0]
10053bd0:	test   edx,edx
10053bd2:	je     0x10053ffc
10053bd8:	movzx  eax,BYTE PTR [ebp+0x0]
10053bdc:	mov    ecx,esi
10053bde:	shl    eax,cl
10053be0:	mov    ecx,DWORD PTR [edi+0x58]
10053be3:	sub    edx,0x1
10053be6:	add    esi,0x8
10053be9:	add    ebx,eax
10053beb:	mov    eax,0x1
10053bf0:	shl    eax,cl
10053bf2:	mov    ecx,DWORD PTR [edi+0x50]
10053bf5:	add    ebp,0x1
10053bf8:	mov    DWORD PTR [esp+0x10],edx
10053bfc:	sub    eax,0x1
10053bff:	and    eax,ebx
10053c01:	mov    eax,DWORD PTR [ecx+eax*4]
10053c04:	mov    ecx,eax
10053c06:	shr    ecx,0x8
10053c09:	movzx  ecx,cl
10053c0c:	cmp    ecx,esi
10053c0e:	mov    DWORD PTR [esp+0x14],eax
10053c12:	ja     0x10053bd0
10053c14:	test   al,0xf0
10053c16:	jne    0x10053cdd
10053c1c:	mov    ecx,eax
10053c1e:	shr    ecx,0x8
10053c21:	mov    DWORD PTR [esp+0x34],ecx
10053c25:	movzx  ecx,cl
10053c28:	mov    DWORD PTR [esp+0x24],ecx
10053c2c:	movzx  ecx,al
10053c2f:	add    ecx,DWORD PTR [esp+0x24]
10053c33:	mov    DWORD PTR [esp+0x18],eax
10053c37:	mov    eax,0x1
10053c3c:	shl    eax,cl
10053c3e:	mov    ecx,DWORD PTR [esp+0x24]
10053c42:	sub    eax,0x1
10053c45:	and    eax,ebx
10053c47:	shr    eax,cl
10053c49:	mov    ecx,DWORD PTR [esp+0x14]
10053c4d:	shr    ecx,0x10
10053c50:	add    eax,ecx
10053c52:	mov    ecx,eax
10053c54:	mov    eax,DWORD PTR [edi+0x50]
10053c57:	mov    eax,DWORD PTR [eax+ecx*4]
10053c5a:	movzx  ecx,BYTE PTR [esp+0x34]
10053c5f:	mov    DWORD PTR [esp+0x14],eax
10053c63:	shr    eax,0x8
10053c66:	movzx  eax,al
10053c69:	add    eax,ecx
10053c6b:	cmp    eax,esi
10053c6d:	jbe    0x10053cd0
10053c73:	test   edx,edx
10053c75:	je     0x10053ffc
10053c7b:	movzx  eax,BYTE PTR [ebp+0x0]
10053c7f:	mov    ecx,esi
10053c81:	shl    eax,cl
10053c83:	mov    ecx,DWORD PTR [esp+0x18]
10053c87:	sub    edx,0x1
10053c8a:	add    esi,0x8
10053c8d:	add    ebx,eax
10053c8f:	movzx  eax,ch
10053c92:	add    ecx,eax
10053c94:	mov    DWORD PTR [esp+0x24],eax
10053c98:	mov    eax,0x1
10053c9d:	shl    eax,cl
10053c9f:	mov    ecx,DWORD PTR [esp+0x24]
10053ca3:	add    ebp,0x1
10053ca6:	mov    DWORD PTR [esp+0x10],edx
10053caa:	sub    eax,0x1
10053cad:	and    eax,ebx
10053caf:	shr    eax,cl
10053cb1:	movzx  ecx,WORD PTR [esp+0x1a]
10053cb6:	add    eax,ecx
10053cb8:	mov    ecx,DWORD PTR [edi+0x50]
10053cbb:	mov    eax,DWORD PTR [ecx+eax*4]
10053cbe:	mov    DWORD PTR [esp+0x14],eax
10053cc2:	shr    eax,0x8
10053cc5:	movzx  eax,al
10053cc8:	add    eax,DWORD PTR [esp+0x24]
10053ccc:	cmp    eax,esi
10053cce:	ja     0x10053c73
10053cd0:	movzx  ecx,BYTE PTR [esp+0x19]
10053cd5:	mov    eax,DWORD PTR [esp+0x14]
10053cd9:	shr    ebx,cl
10053cdb:	sub    esi,ecx
10053cdd:	mov    ecx,eax
10053cdf:	shr    ecx,0x8
10053ce2:	movzx  ecx,cl
10053ce5:	shr    ebx,cl
10053ce7:	sub    esi,ecx
10053ce9:	test   al,0x40
10053ceb:	mov    DWORD PTR [esp+0x24],ecx
10053cef:	mov    DWORD PTR [esp+0x18],ebx
10053cf3:	je     0x10053d05
10053cf5:	mov    eax,DWORD PTR [esp+0x40]
10053cf9:	mov    DWORD PTR [eax+0x18],0x100688d8
10053d00:	jmp    0x10053f98
10053d05:	mov    ecx,eax
10053d07:	shr    ecx,0x10
10053d0a:	and    eax,0xf
10053d0d:	mov    DWORD PTR [edi+0x44],ecx
10053d10:	mov    DWORD PTR [edi+0x48],eax
10053d13:	mov    DWORD PTR [edi],0x15
10053d19:	mov    eax,DWORD PTR [edi+0x48]
10053d1c:	test   eax,eax
10053d1e:	je     0x10053d62
10053d20:	cmp    esi,eax
10053d22:	jae    0x10053d48
10053d24:	test   edx,edx
10053d26:	je     0x10053ffc
10053d2c:	movzx  eax,BYTE PTR [ebp+0x0]
10053d30:	mov    ecx,esi
10053d32:	shl    eax,cl
10053d34:	sub    edx,0x1
10053d37:	add    esi,0x8
10053d3a:	add    ebp,0x1
10053d3d:	add    ebx,eax
10053d3f:	cmp    esi,DWORD PTR [edi+0x48]
10053d42:	mov    DWORD PTR [esp+0x10],edx
10053d46:	jb     0x10053d24
10053d48:	mov    ecx,DWORD PTR [edi+0x48]
10053d4b:	mov    eax,0x1
10053d50:	shl    eax,cl
10053d52:	sub    eax,0x1
10053d55:	and    eax,ebx
10053d57:	add    DWORD PTR [edi+0x44],eax
10053d5a:	shr    ebx,cl
10053d5c:	sub    esi,ecx
10053d5e:	mov    DWORD PTR [esp+0x18],ebx
10053d62:	mov    ecx,DWORD PTR [edi+0x2c]
10053d65:	sub    ecx,DWORD PTR [esp+0x1c]
10053d69:	add    ecx,DWORD PTR [esp+0x2c]
10053d6d:	cmp    DWORD PTR [edi+0x44],ecx
10053d70:	jbe    0x10053d82
10053d72:	mov    eax,DWORD PTR [esp+0x40]
10053d76:	mov    DWORD PTR [eax+0x18],0x100688b8
10053d7d:	jmp    0x10053f98
10053d82:	mov    DWORD PTR [edi],0x16
10053d88:	cmp    DWORD PTR [esp+0x1c],0x0
10053d8d:	je     0x10053ffc
10053d93:	mov    ecx,DWORD PTR [esp+0x2c]
10053d97:	sub    ecx,DWORD PTR [esp+0x1c]
10053d9b:	mov    eax,DWORD PTR [edi+0x44]
10053d9e:	cmp    eax,ecx
10053da0:	jbe    0x10053dde
10053da2:	sub    eax,ecx
10053da4:	mov    ecx,DWORD PTR [edi+0x30]
10053da7:	cmp    eax,ecx
10053da9:	mov    DWORD PTR [esp+0x14],eax
10053dad:	jbe    0x10053dbf
10053daf:	sub    eax,ecx
10053db1:	mov    ecx,DWORD PTR [edi+0x34]
10053db4:	add    ecx,DWORD PTR [edi+0x28]
10053db7:	mov    DWORD PTR [esp+0x14],eax
10053dbb:	sub    ecx,eax
10053dbd:	jmp    0x10053dcb
10053dbf:	mov    ecx,DWORD PTR [edi+0x34]
10053dc2:	sub    ecx,eax
10053dc4:	add    ecx,DWORD PTR [edi+0x30]
10053dc7:	mov    eax,DWORD PTR [esp+0x14]
10053dcb:	mov    DWORD PTR [esp+0x24],ecx
10053dcf:	mov    ecx,DWORD PTR [edi+0x40]
10053dd2:	cmp    eax,ecx
10053dd4:	mov    DWORD PTR [esp+0x34],ecx
10053dd8:	jbe    0x10053df3
10053dda:	mov    eax,ecx
10053ddc:	jmp    0x10053def
10053dde:	mov    ecx,DWORD PTR [esp+0x28]
10053de2:	sub    ecx,eax
10053de4:	mov    eax,DWORD PTR [edi+0x40]
10053de7:	mov    DWORD PTR [esp+0x24],ecx
10053deb:	mov    DWORD PTR [esp+0x34],eax
10053def:	mov    DWORD PTR [esp+0x14],eax
10053df3:	mov    ecx,DWORD PTR [esp+0x1c]
10053df7:	cmp    eax,ecx
10053df9:	jbe    0x10053e01
10053dfb:	mov    eax,ecx
10053dfd:	mov    DWORD PTR [esp+0x14],eax
10053e01:	sub    ecx,eax
10053e03:	mov    DWORD PTR [esp+0x1c],ecx
10053e07:	mov    ecx,DWORD PTR [esp+0x34]
10053e0b:	sub    ecx,eax
10053e0d:	mov    eax,DWORD PTR [esp+0x28]
10053e11:	mov    DWORD PTR [edi+0x40],ecx
10053e14:	mov    ecx,DWORD PTR [esp+0x24]
10053e18:	mov    cl,BYTE PTR [ecx]
10053e1a:	add    DWORD PTR [esp+0x24],0x1
10053e1f:	mov    BYTE PTR [eax],cl
10053e21:	add    eax,0x1
10053e24:	sub    DWORD PTR [esp+0x14],0x1
10053e29:	jne    0x10053e14
10053e2b:	cmp    DWORD PTR [edi+0x40],0x0
10053e2f:	mov    DWORD PTR [esp+0x28],eax
10053e33:	jne    0x10053f9e
10053e39:	mov    DWORD PTR [edi],0x12
10053e3f:	jmp    0x10053f9e
10053e44:	cmp    DWORD PTR [esp+0x1c],0x0
10053e49:	je     0x10053ffc
10053e4f:	mov    eax,DWORD PTR [esp+0x28]
10053e53:	mov    cl,BYTE PTR [edi+0x40]
10053e56:	mov    BYTE PTR [eax],cl
10053e58:	add    eax,0x1
10053e5b:	sub    DWORD PTR [esp+0x1c],0x1
10053e60:	mov    DWORD PTR [esp+0x28],eax
10053e64:	mov    DWORD PTR [edi],0x12
10053e6a:	jmp    0x10053f9e
10053e6f:	cmp    DWORD PTR [edi+0x8],0x0
10053e73:	je     0x10053f3c
10053e79:	cmp    esi,0x20
10053e7c:	jae    0x10053ea8
10053e7e:	mov    edi,edi
10053e80:	test   edx,edx
10053e82:	je     0x10053ffc
10053e88:	movzx  eax,BYTE PTR [ebp+0x0]
10053e8c:	mov    ecx,esi
10053e8e:	shl    eax,cl
10053e90:	sub    edx,0x1
10053e93:	add    esi,0x8
10053e96:	add    ebp,0x1
10053e99:	add    ebx,eax
10053e9b:	cmp    esi,0x20
10053e9e:	mov    DWORD PTR [esp+0x10],edx
10053ea2:	mov    DWORD PTR [esp+0x18],ebx
10053ea6:	jb     0x10053e80
10053ea8:	mov    eax,DWORD PTR [esp+0x2c]
10053eac:	sub    eax,DWORD PTR [esp+0x1c]
10053eb0:	mov    ecx,DWORD PTR [esp+0x40]
10053eb4:	add    DWORD PTR [ecx+0x14],eax
10053eb7:	add    DWORD PTR [edi+0x1c],eax
10053eba:	test   eax,eax
10053ebc:	mov    DWORD PTR [esp+0x2c],eax
10053ec0:	je     0x10053ef1
10053ec2:	mov    ecx,DWORD PTR [esp+0x28]
10053ec6:	mov    edx,DWORD PTR [edi+0x18]
10053ec9:	push   eax
10053eca:	sub    ecx,eax
10053ecc:	cmp    DWORD PTR [edi+0x10],0x0
10053ed0:	push   ecx
10053ed1:	push   edx
10053ed2:	je     0x10053edb
10053ed4:	call   0x100561c0
10053ed9:	jmp    0x10053ee0
10053edb:	call   0x100541e0
10053ee0:	mov    ecx,DWORD PTR [esp+0x4c]
10053ee4:	mov    edx,DWORD PTR [esp+0x1c]
10053ee8:	mov    DWORD PTR [edi+0x18],eax
10053eeb:	add    esp,0xc
10053eee:	mov    DWORD PTR [ecx+0x30],eax
10053ef1:	cmp    DWORD PTR [edi+0x10],0x0
10053ef5:	mov    eax,DWORD PTR [esp+0x1c]
10053ef9:	mov    DWORD PTR [esp+0x2c],eax
10053efd:	mov    eax,ebx
10053eff:	jne    0x10053f1f
10053f01:	and    eax,0xff00
10053f06:	mov    ecx,ebx
10053f08:	shl    ecx,0x10
10053f0b:	add    eax,ecx
10053f0d:	xor    ecx,ecx
10053f0f:	mov    ch,BYTE PTR [esp+0x1a]
10053f13:	shl    eax,0x8
10053f16:	add    eax,ecx
10053f18:	mov    ecx,ebx
10053f1a:	shr    ecx,0x18
10053f1d:	add    eax,ecx
10053f1f:	cmp    eax,DWORD PTR [edi+0x18]
10053f22:	je     0x10053f34
10053f24:	mov    eax,DWORD PTR [esp+0x40]
10053f28:	mov    DWORD PTR [eax+0x18],0x100688a0
10053f2f:	jmp    0x10053f98
10053f34:	xor    ebx,ebx
10053f36:	mov    DWORD PTR [esp+0x18],ebx
10053f3a:	xor    esi,esi
10053f3c:	mov    DWORD PTR [edi],0x19
10053f42:	cmp    DWORD PTR [edi+0x8],0x0
10053f46:	je     0x10053fe4
10053f4c:	cmp    DWORD PTR [edi+0x10],0x0
10053f50:	je     0x10053fe4
10053f56:	cmp    esi,0x20
10053f59:	jae    0x10053f88
10053f5b:	jmp    0x10053f60
10053f5d:	lea    ecx,[ecx+0x0]
10053f60:	test   edx,edx
10053f62:	je     0x10053ffc
10053f68:	movzx  eax,BYTE PTR [ebp+0x0]
10053f6c:	mov    ecx,esi
10053f6e:	shl    eax,cl
10053f70:	sub    edx,0x1
10053f73:	add    esi,0x8
10053f76:	add    ebp,0x1
10053f79:	add    ebx,eax
10053f7b:	cmp    esi,0x20
10053f7e:	mov    DWORD PTR [esp+0x10],edx
10053f82:	mov    DWORD PTR [esp+0x18],ebx
10053f86:	jb     0x10053f60
10053f88:	cmp    ebx,DWORD PTR [edi+0x1c]
10053f8b:	je     0x10053fe0
10053f8d:	mov    ecx,DWORD PTR [esp+0x40]
10053f91:	mov    DWORD PTR [ecx+0x18],0x10068888
10053f98:	mov    DWORD PTR [edi],0x1b
10053f9e:	mov    eax,DWORD PTR [edi]
10053fa0:	cmp    eax,0x1c
10053fa3:	jbe    0x10052c20
10053fa9:	mov    eax,0xfffffffe
10053fae:	pop    esi
10053faf:	pop    ebp
10053fb0:	pop    ebx
10053fb1:	pop    edi
10053fb2:	add    esp,0x2c
10053fb5:	ret    
10053fb6:	mov    eax,DWORD PTR [esp+0x40]
10053fba:	mov    ecx,DWORD PTR [esp+0x28]
10053fbe:	mov    DWORD PTR [eax+0xc],ecx
10053fc1:	mov    ecx,DWORD PTR [esp+0x1c]
10053fc5:	mov    DWORD PTR [eax],ebp
10053fc7:	mov    DWORD PTR [eax+0x10],ecx
10053fca:	mov    DWORD PTR [eax+0x4],edx
10053fcd:	mov    DWORD PTR [edi+0x3c],esi
10053fd0:	pop    esi
10053fd1:	pop    ebp
10053fd2:	mov    DWORD PTR [edi+0x38],ebx
10053fd5:	pop    ebx
10053fd6:	mov    eax,0x2
10053fdb:	pop    edi
10053fdc:	add    esp,0x2c
10053fdf:	ret    
10053fe0:	xor    ebx,ebx
10053fe2:	xor    esi,esi
10053fe4:	mov    DWORD PTR [edi],0x1a
10053fea:	mov    DWORD PTR [esp+0x30],0x1
10053ff2:	jmp    0x10053ffc
10053ff4:	mov    DWORD PTR [esp+0x30],0xfffffffd
10053ffc:	mov    eax,DWORD PTR [esp+0x40]
10054000:	mov    ecx,DWORD PTR [esp+0x28]
10054004:	mov    DWORD PTR [eax+0xc],ecx
10054007:	mov    ecx,DWORD PTR [esp+0x1c]
1005400b:	mov    DWORD PTR [eax+0x10],ecx
1005400e:	mov    DWORD PTR [eax],ebp
10054010:	mov    DWORD PTR [eax+0x4],edx
10054013:	cmp    DWORD PTR [edi+0x28],0x0
10054017:	mov    DWORD PTR [edi+0x38],ebx
1005401a:	mov    DWORD PTR [edi+0x3c],esi
1005401d:	jne    0x1005402d
1005401f:	cmp    DWORD PTR [edi],0x18
10054022:	jge    0x10054051
10054024:	mov    edx,DWORD PTR [esp+0x2c]
10054028:	cmp    edx,DWORD PTR [eax+0x10]
1005402b:	je     0x10054051
1005402d:	mov    eax,DWORD PTR [esp+0x2c]
10054031:	mov    ebx,DWORD PTR [esp+0x40]
10054035:	call   0x10052ab0
1005403a:	test   eax,eax
1005403c:	je     0x10054051
1005403e:	mov    DWORD PTR [edi],0x1c
10054044:	pop    esi
10054045:	pop    ebp
10054046:	pop    ebx
10054047:	mov    eax,0xfffffffc
1005404c:	pop    edi
1005404d:	add    esp,0x2c
10054050:	ret    
10054051:	mov    esi,DWORD PTR [esp+0x40]
10054055:	mov    ebp,DWORD PTR [esp+0x38]
10054059:	sub    ebp,DWORD PTR [esi+0x4]
1005405c:	mov    ebx,DWORD PTR [esp+0x2c]
10054060:	sub    ebx,DWORD PTR [esi+0x10]
10054063:	add    DWORD PTR [esi+0x8],ebp
10054066:	add    DWORD PTR [esi+0x14],ebx
10054069:	add    DWORD PTR [edi+0x1c],ebx
1005406c:	cmp    DWORD PTR [edi+0x8],0x0
10054070:	je     0x100540a6
10054072:	test   ebx,ebx
10054074:	je     0x100540a6
10054076:	cmp    DWORD PTR [edi+0x10],0x0
1005407a:	push   ebx
1005407b:	je     0x1005408e
1005407d:	mov    ecx,DWORD PTR [esi+0xc]
10054080:	mov    edx,DWORD PTR [edi+0x18]
10054083:	sub    ecx,ebx
10054085:	push   ecx
10054086:	push   edx
10054087:	call   0x100561c0
1005408c:	jmp    0x1005409d
1005408e:	mov    eax,DWORD PTR [esi+0xc]
10054091:	mov    ecx,DWORD PTR [edi+0x18]
10054094:	sub    eax,ebx
10054096:	push   eax
10054097:	push   ecx
10054098:	call   0x100541e0
1005409d:	mov    DWORD PTR [edi+0x18],eax
100540a0:	add    esp,0xc
100540a3:	mov    DWORD PTR [esi+0x30],eax
100540a6:	mov    edx,DWORD PTR [edi+0x4]
100540a9:	neg    edx
100540ab:	sbb    edx,edx
100540ad:	and    edx,0x40
100540b0:	xor    eax,eax
100540b2:	cmp    DWORD PTR [edi],0xb
100540b5:	setne  al
100540b8:	sub    eax,0x1
100540bb:	and    eax,0x80
100540c0:	add    edx,eax
100540c2:	add    edx,DWORD PTR [edi+0x3c]
100540c5:	test   ebp,ebp
100540c7:	mov    DWORD PTR [esi+0x2c],edx
100540ca:	jne    0x100540d0
100540cc:	test   ebx,ebx
100540ce:	je     0x100540d7
100540d0:	cmp    DWORD PTR [esp+0x44],0x4
100540d5:	jne    0x100540f0
100540d7:	mov    eax,DWORD PTR [esp+0x30]
100540db:	test   eax,eax
100540dd:	jne    0x10053fae
100540e3:	pop    esi
100540e4:	pop    ebp
100540e5:	pop    ebx
100540e6:	mov    eax,0xfffffffb
100540eb:	pop    edi
100540ec:	add    esp,0x2c
100540ef:	ret    
100540f0:	mov    eax,DWORD PTR [esp+0x30]
100540f4:	pop    esi
100540f5:	pop    ebp
100540f6:	pop    ebx
100540f7:	pop    edi
100540f8:	add    esp,0x2c
100540fb:	ret    
100540fc:	mov    eax,0xfffffffe
10054101:	pop    edi
10054102:	add    esp,0x2c
10054105:	ret    
10054106:	mov    edi,edi
10054108:	daa    
10054109:	sub    al,0x5
1005410b:	adc    BYTE PTR [ebp+0x4310052d],dl
10054111:	cs add eax,0x52ec210
10054117:	adc    BYTE PTR [edi+ebp*1+0x5],al
1005411b:	adc    bh,cl
1005411d:	das    
1005411e:	add    eax,0x5308b10
10054123:	adc    BYTE PTR [ebx+0x31],al
10054126:	add    eax,0x531fa10
1005412b:	adc    BYTE PTR [edx+esi*1+0x32fc1005],dl
10054132:	add    eax,0x5332810
10054137:	adc    BYTE PTR [ebx],dh
10054139:	xor    eax,DWORD PTR ds:0x533fe10
1005413f:	adc    BYTE PTR [ebx+0x34],ch
10054142:	add    eax,0x534cb10
10054147:	adc    BYTE PTR [ebx+0x35],cl
1005414a:	add    eax,0x5364210
1005414f:	adc    BYTE PTR [ebx+0x39],dl
10054152:	add    eax,0x53b5710
10054157:	adc    BYTE PTR [edx+0x1910053b],ah
1005415d:	cmp    eax,0x3d881005
10054162:	add    eax,0x53e4410
10054167:	adc    BYTE PTR [edi+0x3e],ch
1005416a:	add    eax,0x53f4210
1005416f:	adc    dl,ch
10054171:	aas    
10054172:	add    eax,0x53ff410
10054177:	adc    BYTE PTR [eax+eax*2+0x5],al
1005417b:	adc    BYTE PTR [eax-0x52effacd],bl
10054181:	xor    eax,DWORD PTR ds:0x533c910
10054187:	adc    dh,bl
10054189:	xor    eax,DWORD PTR ds:0xcccccc10
1005418f:	int3   
10054190:	push   esi
10054191:	mov    esi,DWORD PTR [esp+0x8]
10054195:	test   esi,esi
10054197:	je     0x100541d3
10054199:	mov    eax,DWORD PTR [esi+0x1c]
1005419c:	test   eax,eax
1005419e:	je     0x100541d3
100541a0:	mov    ecx,DWORD PTR [esi+0x24]
100541a3:	test   ecx,ecx
100541a5:	je     0x100541d3
100541a7:	mov    eax,DWORD PTR [eax+0x34]
100541aa:	test   eax,eax
100541ac:	je     0x100541b8
100541ae:	push   eax
100541af:	mov    eax,DWORD PTR [esi+0x28]
100541b2:	push   eax
100541b3:	call   ecx
100541b5:	add    esp,0x8
100541b8:	mov    ecx,DWORD PTR [esi+0x1c]
100541bb:	mov    edx,DWORD PTR [esi+0x28]
100541be:	mov    eax,DWORD PTR [esi+0x24]
100541c1:	push   ecx
100541c2:	push   edx
100541c3:	call   eax
100541c5:	add    esp,0x8
100541c8:	mov    DWORD PTR [esi+0x1c],0x0
100541cf:	xor    eax,eax
100541d1:	pop    esi
100541d2:	ret    
100541d3:	mov    eax,0xfffffffe
100541d8:	pop    esi
100541d9:	ret    
100541da:	int3   
100541db:	int3   
100541dc:	int3   
100541dd:	int3   
100541de:	int3   
100541df:	int3   
100541e0:	mov    ecx,DWORD PTR [esp+0x4]
100541e4:	push   ebx
100541e5:	mov    ebx,DWORD PTR [esp+0x10]
100541e9:	push   edi
100541ea:	mov    edi,ecx
100541ec:	shr    edi,0x10
100541ef:	and    ecx,0xffff
100541f5:	cmp    ebx,0x1
100541f8:	jne    0x1005422b
100541fa:	mov    eax,DWORD PTR [esp+0x10]
100541fe:	movzx  edx,BYTE PTR [eax]
10054201:	add    ecx,edx
10054203:	cmp    ecx,0xfff1
10054209:	jb     0x10054211
1005420b:	sub    ecx,0xfff1
10054211:	add    edi,ecx
10054213:	cmp    edi,0xfff1
10054219:	jb     0x10054221
1005421b:	sub    edi,0xfff1
10054221:	mov    eax,edi
10054223:	shl    eax,0x10
10054226:	pop    edi
10054227:	or     eax,ecx
10054229:	pop    ebx
1005422a:	ret    
1005422b:	push   esi
1005422c:	mov    esi,DWORD PTR [esp+0x14]
10054230:	test   esi,esi
10054232:	jne    0x1005423d
10054234:	pop    esi
10054235:	pop    edi
10054236:	mov    eax,0x1
1005423b:	pop    ebx
1005423c:	ret    
1005423d:	cmp    ebx,0x10
10054240:	jae    0x10054281
10054242:	test   ebx,ebx
10054244:	je     0x10054257
10054246:	movzx  eax,BYTE PTR [esi]
10054249:	add    ecx,eax
1005424b:	sub    ebx,0x1
1005424e:	add    esi,0x1
10054251:	add    edi,ecx
10054253:	test   ebx,ebx
10054255:	jne    0x10054246
10054257:	cmp    ecx,0xfff1
1005425d:	jb     0x10054265
1005425f:	sub    ecx,0xfff1
10054265:	mov    eax,0x80078071
1005426a:	mul    edi
1005426c:	shr    edx,0xf
1005426f:	mov    eax,edx
10054271:	shl    eax,0x4
10054274:	sub    eax,edx
10054276:	add    eax,edi
10054278:	pop    esi
10054279:	shl    eax,0x10
1005427c:	pop    edi
1005427d:	or     eax,ecx
1005427f:	pop    ebx
10054280:	ret    
10054281:	cmp    ebx,0x15b0
10054287:	jb     0x10054369
1005428d:	mov    eax,0x5e6ea9af
10054292:	mul    ebx
10054294:	push   ebp
10054295:	mov    ebp,edx
10054297:	shr    ebp,0xb
1005429a:	lea    ebx,[ebx+0x0]
100542a0:	sub    ebx,0x15b0
100542a6:	mov    eax,0x15b
100542ab:	jmp    0x100542b0
100542ad:	lea    ecx,[ecx+0x0]
100542b0:	movzx  edx,BYTE PTR [esi]
100542b3:	add    ecx,edx
100542b5:	movzx  edx,BYTE PTR [esi+0x1]
100542b9:	add    edi,ecx
100542bb:	add    ecx,edx
100542bd:	movzx  edx,BYTE PTR [esi+0x2]
100542c1:	add    edi,ecx
100542c3:	add    ecx,edx
100542c5:	movzx  edx,BYTE PTR [esi+0x3]
100542c9:	add    edi,ecx
100542cb:	add    ecx,edx
100542cd:	movzx  edx,BYTE PTR [esi+0x4]
100542d1:	add    edi,ecx
100542d3:	add    ecx,edx
100542d5:	movzx  edx,BYTE PTR [esi+0x5]
100542d9:	add    edi,ecx
100542db:	add    ecx,edx
100542dd:	movzx  edx,BYTE PTR [esi+0x6]
100542e1:	add    edi,ecx
100542e3:	add    ecx,edx
100542e5:	movzx  edx,BYTE PTR [esi+0x7]
100542e9:	add    edi,ecx
100542eb:	add    ecx,edx
100542ed:	movzx  edx,BYTE PTR [esi+0x8]
100542f1:	add    edi,ecx
100542f3:	add    ecx,edx
100542f5:	movzx  edx,BYTE PTR [esi+0x9]
100542f9:	add    edi,ecx
100542fb:	add    ecx,edx
100542fd:	movzx  edx,BYTE PTR [esi+0xa]
10054301:	add    edi,ecx
10054303:	add    ecx,edx
10054305:	movzx  edx,BYTE PTR [esi+0xb]
10054309:	add    edi,ecx
1005430b:	add    ecx,edx
1005430d:	movzx  edx,BYTE PTR [esi+0xc]
10054311:	add    edi,ecx
10054313:	add    ecx,edx
10054315:	movzx  edx,BYTE PTR [esi+0xd]
10054319:	add    edi,ecx
1005431b:	add    ecx,edx
1005431d:	movzx  edx,BYTE PTR [esi+0xe]
10054321:	add    edi,ecx
10054323:	add    ecx,edx
10054325:	movzx  edx,BYTE PTR [esi+0xf]
10054329:	add    edi,ecx
1005432b:	add    ecx,edx
1005432d:	add    edi,ecx
1005432f:	add    esi,0x10
10054332:	sub    eax,0x1
10054335:	jne    0x100542b0
1005433b:	mov    eax,0x80078071
10054340:	mul    ecx
10054342:	shr    edx,0xf
10054345:	imul   edx,edx,0xffff000f
1005434b:	add    ecx,edx
1005434d:	mov    eax,0x80078071
10054352:	mul    edi
10054354:	shr    edx,0xf
10054357:	imul   edx,edx,0xffff000f
1005435d:	add    edi,edx
1005435f:	sub    ebp,0x1
10054362:	jne    0x100542a0
10054368:	pop    ebp
10054369:	test   ebx,ebx
1005436b:	je     0x10054447
10054371:	cmp    ebx,0x10
10054374:	jb     0x1005440e
1005437a:	mov    eax,ebx
1005437c:	shr    eax,0x4
1005437f:	nop
10054380:	movzx  edx,BYTE PTR [esi]
10054383:	add    ecx,edx
10054385:	movzx  edx,BYTE PTR [esi+0x1]
10054389:	add    edi,ecx
1005438b:	add    ecx,edx
1005438d:	movzx  edx,BYTE PTR [esi+0x2]
10054391:	add    edi,ecx
10054393:	add    ecx,edx
10054395:	movzx  edx,BYTE PTR [esi+0x3]
10054399:	add    edi,ecx
1005439b:	add    ecx,edx
1005439d:	movzx  edx,BYTE PTR [esi+0x4]
100543a1:	add    edi,ecx
100543a3:	add    ecx,edx
100543a5:	movzx  edx,BYTE PTR [esi+0x5]
100543a9:	add    edi,ecx
100543ab:	add    ecx,edx
100543ad:	movzx  edx,BYTE PTR [esi+0x6]
100543b1:	add    edi,ecx
100543b3:	add    ecx,edx
100543b5:	movzx  edx,BYTE PTR [esi+0x7]
100543b9:	add    edi,ecx
100543bb:	add    ecx,edx
100543bd:	movzx  edx,BYTE PTR [esi+0x8]
100543c1:	add    edi,ecx
100543c3:	add    ecx,edx
100543c5:	movzx  edx,BYTE PTR [esi+0x9]
100543c9:	add    edi,ecx
100543cb:	add    ecx,edx
100543cd:	movzx  edx,BYTE PTR [esi+0xa]
100543d1:	add    edi,ecx
100543d3:	add    ecx,edx
100543d5:	movzx  edx,BYTE PTR [esi+0xb]
100543d9:	add    edi,ecx
100543db:	add    ecx,edx
100543dd:	movzx  edx,BYTE PTR [esi+0xc]
100543e1:	add    edi,ecx
100543e3:	add    ecx,edx
100543e5:	movzx  edx,BYTE PTR [esi+0xd]
100543e9:	add    edi,ecx
100543eb:	add    ecx,edx
100543ed:	movzx  edx,BYTE PTR [esi+0xe]
100543f1:	add    edi,ecx
100543f3:	add    ecx,edx
100543f5:	movzx  edx,BYTE PTR [esi+0xf]
100543f9:	add    edi,ecx
100543fb:	add    ecx,edx
100543fd:	sub    ebx,0x10
10054400:	add    edi,ecx
10054402:	add    esi,0x10
10054405:	sub    eax,0x1
10054408:	jne    0x10054380
1005440e:	test   ebx,ebx
10054410:	je     0x10054423
10054412:	movzx  eax,BYTE PTR [esi]
10054415:	add    ecx,eax
10054417:	sub    ebx,0x1
1005441a:	add    esi,0x1
1005441d:	add    edi,ecx
1005441f:	test   ebx,ebx
10054421:	jne    0x10054412
10054423:	mov    eax,0x80078071
10054428:	mul    ecx
1005442a:	shr    edx,0xf
1005442d:	imul   edx,edx,0xffff000f
10054433:	add    ecx,edx
10054435:	mov    eax,0x80078071
1005443a:	mul    edi
1005443c:	shr    edx,0xf
1005443f:	imul   edx,edx,0xffff000f
10054445:	add    edi,edx
10054447:	mov    eax,edi
10054449:	pop    esi
1005444a:	shl    eax,0x10
1005444d:	pop    edi
1005444e:	or     eax,ecx
10054450:	pop    ebx
10054451:	ret    
10054452:	int3   
10054453:	int3   
10054454:	int3   
10054455:	int3   
10054456:	int3   
10054457:	int3   
10054458:	int3   
10054459:	int3   
1005445a:	int3   
1005445b:	int3   
1005445c:	int3   
1005445d:	int3   
1005445e:	int3   
1005445f:	int3   
10054460:	push   esi
10054461:	lea    eax,[edx+0x94]
10054467:	mov    ecx,0x11e
1005446c:	xor    esi,esi
1005446e:	mov    edi,edi
10054470:	mov    WORD PTR [eax],si
10054473:	add    eax,0x4
10054476:	sub    ecx,0x1
10054479:	jne    0x10054470
1005447b:	lea    eax,[edx+0x988]
10054481:	mov    ecx,0x1e
10054486:	mov    WORD PTR [eax],si
10054489:	add    eax,0x4
1005448c:	sub    ecx,0x1
1005448f:	jne    0x10054486
10054491:	lea    eax,[edx+0xa7c]
10054497:	mov    ecx,0x13
1005449c:	lea    esp,[esp+0x0]
100544a0:	mov    WORD PTR [eax],si
100544a3:	add    eax,0x4
100544a6:	sub    ecx,0x1
100544a9:	jne    0x100544a0
100544ab:	mov    DWORD PTR [edx+0x16ac],esi
100544b1:	mov    DWORD PTR [edx+0x16a8],esi
100544b7:	mov    DWORD PTR [edx+0x16b0],esi
100544bd:	mov    DWORD PTR [edx+0x16a0],esi
100544c3:	mov    WORD PTR [edx+0x494],0x1
100544cc:	pop    esi
100544cd:	ret    
100544ce:	int3   
100544cf:	int3   
100544d0:	push   ecx
100544d1:	mov    edx,DWORD PTR [eax+0x1450]
100544d7:	push   ebp
100544d8:	push   esi
100544d9:	mov    esi,DWORD PTR [esp+0x10]
100544dd:	mov    ebp,DWORD PTR [eax+esi*4+0xb5c]
100544e4:	lea    ecx,[esi+esi*1]
100544e7:	cmp    ecx,edx
100544e9:	mov    DWORD PTR [esp+0x8],ebp
100544ed:	jg     0x1005458b
100544f3:	push   ebx
100544f4:	jge    0x1005452a
100544f6:	mov    esi,DWORD PTR [eax+ecx*4+0xb60]
100544fd:	mov    ebp,DWORD PTR [eax+ecx*4+0xb5c]
10054504:	movzx  edx,WORD PTR [edi+esi*4]
10054508:	movzx  ebx,WORD PTR [edi+ebp*4]
1005450c:	cmp    dx,bx
1005450f:	jb     0x10054523
10054511:	jne    0x10054526
10054513:	mov    dl,BYTE PTR [esi+eax*1+0x1458]
1005451a:	cmp    dl,BYTE PTR [eax+ebp*1+0x1458]
10054521:	ja     0x10054526
10054523:	add    ecx,0x1
10054526:	mov    ebp,DWORD PTR [esp+0xc]
1005452a:	mov    esi,DWORD PTR [eax+ecx*4+0xb5c]
10054531:	movzx  edx,WORD PTR [edi+ebp*4]
10054535:	movzx  ebx,WORD PTR [edi+esi*4]
10054539:	cmp    dx,bx
1005453c:	jb     0x1005456b
1005453e:	jne    0x10054550
10054540:	mov    dl,BYTE PTR [eax+ebp*1+0x1458]
10054547:	cmp    dl,BYTE PTR [esi+eax*1+0x1458]
1005454e:	jbe    0x1005457b
10054550:	mov    edx,DWORD PTR [esp+0x14]
10054554:	mov    DWORD PTR [eax+edx*4+0xb5c],esi
1005455b:	mov    edx,DWORD PTR [eax+0x1450]
10054561:	mov    DWORD PTR [esp+0x14],ecx
10054565:	add    ecx,ecx
10054567:	cmp    ecx,edx
10054569:	jle    0x100544f4
1005456b:	mov    ecx,DWORD PTR [esp+0x14]
1005456f:	pop    ebx
10054570:	pop    esi
10054571:	mov    DWORD PTR [eax+ecx*4+0xb5c],ebp
10054578:	pop    ebp
10054579:	pop    ecx
1005457a:	ret    
1005457b:	mov    edx,DWORD PTR [esp+0x14]
1005457f:	pop    ebx
10054580:	pop    esi
10054581:	mov    DWORD PTR [eax+edx*4+0xb5c],ebp
10054588:	pop    ebp
10054589:	pop    ecx
1005458a:	ret    
1005458b:	mov    DWORD PTR [eax+esi*4+0xb5c],ebp
10054592:	pop    esi
10054593:	pop    ebp
10054594:	pop    ecx
10054595:	ret    
10054596:	int3   
10054597:	int3   
10054598:	int3   
10054599:	int3   
1005459a:	int3   
1005459b:	int3   
1005459c:	int3   
1005459d:	int3   
1005459e:	int3   
1005459f:	int3   
100545a0:	sub    esp,0x20
100545a3:	mov    edx,DWORD PTR [ecx+0x4]
100545a6:	push   ebx
100545a7:	mov    ebx,DWORD PTR [ecx]
100545a9:	mov    ecx,DWORD PTR [ecx+0x8]
100545ac:	mov    DWORD PTR [esp+0x18],edx
100545b0:	mov    edx,DWORD PTR [ecx+0x4]
100545b3:	push   ebp
100545b4:	mov    ebp,DWORD PTR [ecx]
100545b6:	mov    DWORD PTR [esp+0x24],edx
100545ba:	mov    edx,DWORD PTR [ecx+0x8]
100545bd:	push   esi
100545be:	mov    esi,DWORD PTR [ecx+0x10]
100545c1:	xor    ecx,ecx
100545c3:	mov    DWORD PTR [eax+0xb3c],ecx
100545c9:	mov    DWORD PTR [eax+0xb40],ecx
100545cf:	mov    DWORD PTR [eax+0xb44],ecx
100545d5:	mov    DWORD PTR [eax+0xb48],ecx
100545db:	mov    DWORD PTR [eax+0xb4c],ecx
100545e1:	mov    DWORD PTR [eax+0xb50],ecx
100545e7:	mov    DWORD PTR [eax+0xb54],ecx
100545ed:	mov    DWORD PTR [eax+0xb58],ecx
100545f3:	mov    DWORD PTR [esp+0x24],edx
100545f7:	mov    edx,DWORD PTR [eax+0x1454]
100545fd:	mov    edx,DWORD PTR [eax+edx*4+0xb5c]
10054604:	push   edi
10054605:	mov    WORD PTR [ebx+edx*4+0x2],cx
1005460a:	mov    edi,DWORD PTR [eax+0x1454]
10054610:	add    edi,0x1
10054613:	cmp    edi,0x23d
10054619:	mov    DWORD PTR [esp+0x1c],esi
1005461d:	mov    DWORD PTR [esp+0x18],ecx
10054621:	jge    0x100547af
10054627:	lea    ecx,[eax+edi*4+0xb5c]
1005462e:	mov    DWORD PTR [esp+0x14],ecx
10054632:	mov    ecx,0x23d
10054637:	sub    ecx,edi
10054639:	add    edi,ecx
1005463b:	mov    DWORD PTR [esp+0x20],ecx
1005463f:	mov    DWORD PTR [esp+0x10],edi
10054643:	jmp    0x10054649
10054645:	mov    esi,DWORD PTR [esp+0x1c]
10054649:	mov    edx,DWORD PTR [esp+0x14]
1005464d:	mov    edx,DWORD PTR [edx]
1005464f:	movzx  ecx,WORD PTR [ebx+edx*4+0x2]
10054654:	movzx  ecx,WORD PTR [ebx+ecx*4+0x2]
10054659:	add    ecx,0x1
1005465c:	cmp    ecx,esi
1005465e:	jle    0x10054667
10054660:	add    DWORD PTR [esp+0x18],0x1
10054665:	mov    ecx,esi
10054667:	cmp    edx,DWORD PTR [esp+0x24]
1005466b:	mov    WORD PTR [ebx+edx*4+0x2],cx
10054670:	jg     0x100546ba
10054672:	mov    edi,DWORD PTR [esp+0x28]
10054676:	add    WORD PTR [eax+ecx*2+0xb3c],0x1
1005467f:	xor    esi,esi
10054681:	cmp    edx,edi
10054683:	jl     0x10054690
10054685:	mov    esi,edx
10054687:	sub    esi,edi
10054689:	mov    edi,DWORD PTR [esp+0x2c]
1005468d:	mov    esi,DWORD PTR [edi+esi*4]
10054690:	movzx  edi,WORD PTR [ebx+edx*4]
10054694:	movzx  edi,di
10054697:	add    ecx,esi
10054699:	imul   ecx,edi
1005469c:	add    DWORD PTR [eax+0x16a8],ecx
100546a2:	test   ebp,ebp
100546a4:	je     0x100546b6
100546a6:	movzx  edx,WORD PTR [ebp+edx*4+0x2]
100546ab:	add    edx,esi
100546ad:	imul   edx,edi
100546b0:	add    DWORD PTR [eax+0x16ac],edx
100546b6:	mov    edi,DWORD PTR [esp+0x10]
100546ba:	add    DWORD PTR [esp+0x14],0x4
100546bf:	sub    DWORD PTR [esp+0x20],0x1
100546c4:	jne    0x10054645
100546ca:	mov    ebp,DWORD PTR [esp+0x18]
100546ce:	test   ebp,ebp
100546d0:	je     0x100547af
100546d6:	mov    ecx,DWORD PTR [esp+0x1c]
100546da:	lea    edx,[ecx-0x1]
100546dd:	mov    DWORD PTR [esp+0x2c],edx
100546e1:	lea    esi,[eax+ecx*2+0xb3c]
100546e8:	jmp    0x100546f0
100546ea:	lea    ebx,[ebx+0x0]
100546f0:	mov    ecx,DWORD PTR [esp+0x2c]
100546f4:	cmp    WORD PTR [eax+ecx*2+0xb3c],0x0
100546fd:	lea    edx,[eax+ecx*2+0xb3c]
10054704:	jne    0x10054712
10054706:	sub    edx,0x2
10054709:	sub    ecx,0x1
1005470c:	cmp    WORD PTR [edx],0x0
10054710:	je     0x10054706
10054712:	add    WORD PTR [eax+ecx*2+0xb3c],0xffff
1005471c:	add    WORD PTR [eax+ecx*2+0xb3e],0x2
10054725:	add    WORD PTR [esi],0xffff
1005472a:	sub    ebp,0x2
1005472d:	test   ebp,ebp
1005472f:	jg     0x100546f0
10054731:	mov    edx,DWORD PTR [esp+0x1c]
10054735:	test   edx,edx
10054737:	je     0x100547af
10054739:	mov    DWORD PTR [esp+0x20],esi
1005473d:	lea    ecx,[ecx+0x0]
10054740:	movzx  esi,WORD PTR [esi]
10054743:	test   esi,esi
10054745:	mov    DWORD PTR [esp+0x1c],esi
10054749:	je     0x1005479d
1005474b:	lea    ebp,[eax+edi*4+0xb5c]
10054752:	mov    ecx,DWORD PTR [ebp-0x4]
10054755:	sub    DWORD PTR [esp+0x10],0x1
1005475a:	sub    ebp,0x4
1005475d:	cmp    ecx,DWORD PTR [esp+0x24]
10054761:	mov    DWORD PTR [esp+0x2c],ebp
10054765:	jg     0x10054795
10054767:	movzx  edi,WORD PTR [ebx+ecx*4+0x2]
1005476c:	cmp    edi,edx
1005476e:	lea    esi,[ebx+ecx*4+0x2]
10054772:	je     0x1005478c
10054774:	movzx  ecx,WORD PTR [ebx+ecx*4]
10054778:	mov    ebp,edx
1005477a:	sub    ebp,edi
1005477c:	imul   ebp,ecx
1005477f:	add    DWORD PTR [eax+0x16a8],ebp
10054785:	mov    ebp,DWORD PTR [esp+0x2c]
10054789:	mov    WORD PTR [esi],dx
1005478c:	sub    DWORD PTR [esp+0x1c],0x1
10054791:	mov    esi,DWORD PTR [esp+0x1c]
10054795:	test   esi,esi
10054797:	jne    0x10054752
10054799:	mov    edi,DWORD PTR [esp+0x10]
1005479d:	mov    esi,DWORD PTR [esp+0x20]
100547a1:	sub    edx,0x1
100547a4:	sub    esi,0x2
100547a7:	test   edx,edx
100547a9:	mov    DWORD PTR [esp+0x20],esi
100547ad:	jne    0x10054740
100547af:	pop    edi
100547b0:	pop    esi
100547b1:	pop    ebp
100547b2:	pop    ebx
100547b3:	add    esp,0x20
100547b6:	ret    
100547b7:	int3   
100547b8:	int3   
100547b9:	int3   
100547ba:	int3   
100547bb:	int3   
100547bc:	int3   
100547bd:	int3   
100547be:	int3   
100547bf:	int3   
100547c0:	sub    esp,0xc
100547c3:	push   ebx
100547c4:	push   ebp
100547c5:	mov    ebp,DWORD PTR [esp+0x18]
100547c9:	push   esi
100547ca:	push   edi
100547cb:	movzx  edi,WORD PTR [eax+0x2]
100547cf:	xor    edx,edx
100547d1:	test   edi,edi
100547d3:	mov    ebx,ecx
100547d5:	mov    DWORD PTR [esp+0x14],0xffffffff
100547dd:	mov    ecx,0x7
100547e2:	mov    esi,0x4
100547e7:	jne    0x100547f3
100547e9:	mov    ecx,0x8a
100547ee:	mov    esi,0x3
100547f3:	test   ebx,ebx
100547f5:	mov    WORD PTR [eax+ebx*4+0x6],0xffff
100547fc:	jl     0x100548a5
10054802:	add    eax,0x6
10054805:	add    ebx,0x1
10054808:	mov    DWORD PTR [esp+0x18],ebx
1005480c:	mov    DWORD PTR [esp+0x10],eax
10054810:	mov    ebx,0x1
10054815:	mov    eax,edi
10054817:	mov    edi,DWORD PTR [esp+0x10]
1005481b:	movzx  edi,WORD PTR [edi]
1005481e:	add    edx,ebx
10054820:	cmp    edx,ecx
10054822:	jge    0x10054828
10054824:	cmp    eax,edi
10054826:	je     0x10054896
10054828:	cmp    edx,esi
1005482a:	jge    0x10054836
1005482c:	add    WORD PTR [ebp+eax*4+0xa7c],dx
10054834:	jmp    0x10054866
10054836:	test   eax,eax
10054838:	je     0x10054851
1005483a:	cmp    eax,DWORD PTR [esp+0x14]
1005483e:	je     0x10054848
10054840:	add    WORD PTR [ebp+eax*4+0xa7c],bx
10054848:	add    WORD PTR [ebp+0xabc],bx
1005484f:	jmp    0x10054866
10054851:	cmp    edx,0xa
10054854:	jg     0x1005485f
10054856:	add    WORD PTR [ebp+0xac0],bx
1005485d:	jmp    0x10054866
1005485f:	add    WORD PTR [ebp+0xac4],bx
10054866:	xor    edx,edx
10054868:	test   edi,edi
1005486a:	mov    DWORD PTR [esp+0x14],eax
1005486e:	jne    0x1005487c
10054870:	mov    ecx,0x8a
10054875:	mov    esi,0x3
1005487a:	jmp    0x10054896
1005487c:	cmp    eax,edi
1005487e:	jne    0x1005488c
10054880:	mov    ecx,0x6
10054885:	mov    esi,0x3
1005488a:	jmp    0x10054896
1005488c:	mov    ecx,0x7
10054891:	mov    esi,0x4
10054896:	add    DWORD PTR [esp+0x10],0x4
1005489b:	sub    DWORD PTR [esp+0x18],ebx
1005489f:	jne    0x10054815
100548a5:	pop    edi
100548a6:	pop    esi
100548a7:	pop    ebp
100548a8:	pop    ebx
100548a9:	add    esp,0xc
100548ac:	ret    
100548ad:	int3   
100548ae:	int3   
100548af:	int3   
100548b0:	sub    esp,0x18
100548b3:	push   ebx
100548b4:	push   ebp
100548b5:	movzx  ebp,WORD PTR [edx+0x2]
100548b9:	push   esi
100548ba:	xor    esi,esi
100548bc:	test   ebp,ebp
100548be:	push   edi
100548bf:	mov    ebx,ecx
100548c1:	mov    DWORD PTR [esp+0x1c],0xffffffff
100548c9:	mov    DWORD PTR [esp+0x14],ebp
100548cd:	mov    ecx,0x7
100548d2:	mov    edi,0x4
100548d7:	jne    0x100548e3
100548d9:	mov    ecx,0x8a
100548de:	mov    edi,0x3
100548e3:	test   ebx,ebx
100548e5:	jl     0x10054db9
100548eb:	add    edx,0x6
100548ee:	add    ebx,0x1
100548f1:	mov    DWORD PTR [esp+0x18],edx
100548f5:	mov    DWORD PTR [esp+0x20],ebx
100548f9:	mov    ebp,0x1
100548fe:	mov    edi,edi
10054900:	mov    ebx,DWORD PTR [esp+0x18]
10054904:	movzx  ebx,WORD PTR [ebx]
10054907:	mov    edx,DWORD PTR [esp+0x14]
1005490b:	add    esi,ebp
1005490d:	cmp    esi,ecx
1005490f:	mov    DWORD PTR [esp+0x24],edx
10054913:	mov    DWORD PTR [esp+0x14],ebx
10054917:	mov    DWORD PTR [esp+0x10],esi
1005491b:	jge    0x10054925
1005491d:	cmp    edx,ebx
1005491f:	je     0x10054daa
10054925:	cmp    esi,edi
10054927:	jge    0x100549cf
1005492d:	lea    ecx,[ecx+0x0]
10054930:	movzx  edi,WORD PTR [eax+edx*4+0xa7e]
10054938:	mov    ecx,DWORD PTR [eax+0x16bc]
1005493e:	mov    ebx,0x10
10054943:	sub    ebx,edi
10054945:	cmp    ecx,ebx
10054947:	jle    0x100549a4
10054949:	movzx  esi,WORD PTR [eax+edx*4+0xa7c]
10054951:	mov    edx,esi
10054953:	shl    edx,cl
10054955:	mov    ecx,DWORD PTR [eax+0x8]
10054958:	or     WORD PTR [eax+0x16b8],dx
1005495f:	movzx  ebx,BYTE PTR [eax+0x16b8]
10054966:	mov    edx,DWORD PTR [eax+0x14]
10054969:	mov    BYTE PTR [ecx+edx*1],bl
1005496c:	add    DWORD PTR [eax+0x14],ebp
1005496f:	mov    ecx,DWORD PTR [eax+0x14]
10054972:	movzx  ebx,BYTE PTR [eax+0x16b9]
10054979:	mov    edx,DWORD PTR [eax+0x8]
1005497c:	mov    BYTE PTR [ecx+edx*1],bl
1005497f:	mov    edx,DWORD PTR [eax+0x16bc]
10054985:	add    DWORD PTR [eax+0x14],ebp
10054988:	mov    cl,0x10
1005498a:	sub    cl,dl
1005498c:	shr    si,cl
1005498f:	lea    ecx,[edx+edi*1-0x10]
10054993:	mov    edx,DWORD PTR [esp+0x24]
10054997:	mov    WORD PTR [eax+0x16b8],si
1005499e:	mov    esi,DWORD PTR [esp+0x10]
100549a2:	jmp    0x100549b8
100549a4:	mov    bx,WORD PTR [eax+edx*4+0xa7c]
100549ac:	shl    bx,cl
100549af:	or     WORD PTR [eax+0x16b8],bx
100549b6:	add    ecx,edi
100549b8:	sub    esi,ebp
100549ba:	mov    DWORD PTR [eax+0x16bc],ecx
100549c0:	mov    DWORD PTR [esp+0x10],esi
100549c4:	jne    0x10054930
100549ca:	jmp    0x10054d76
100549cf:	test   edx,edx
100549d1:	je     0x10054b7c
100549d7:	cmp    edx,DWORD PTR [esp+0x1c]
100549db:	je     0x10054a7d
100549e1:	movzx  edi,WORD PTR [eax+edx*4+0xa7e]
100549e9:	mov    ecx,DWORD PTR [eax+0x16bc]
100549ef:	mov    ebx,0x10
100549f4:	sub    ebx,edi
100549f6:	cmp    ecx,ebx
100549f8:	mov    DWORD PTR [esp+0x1c],edi
100549fc:	jle    0x10054a59
100549fe:	movzx  esi,WORD PTR [eax+edx*4+0xa7c]
10054a06:	mov    edi,esi
10054a08:	shl    edi,cl
10054a0a:	mov    ecx,DWORD PTR [eax+0x8]
10054a0d:	or     WORD PTR [eax+0x16b8],di
10054a14:	movzx  ebx,BYTE PTR [eax+0x16b8]
10054a1b:	mov    edi,DWORD PTR [eax+0x14]
10054a1e:	mov    BYTE PTR [ecx+edi*1],bl
10054a21:	add    DWORD PTR [eax+0x14],ebp
10054a24:	movzx  ebx,BYTE PTR [eax+0x16b9]
10054a2b:	mov    ecx,DWORD PTR [eax+0x8]
10054a2e:	mov    edi,DWORD PTR [eax+0x14]
10054a31:	mov    BYTE PTR [edi+ecx*1],bl
10054a34:	mov    ebx,DWORD PTR [eax+0x16bc]
10054a3a:	add    DWORD PTR [eax+0x14],ebp
10054a3d:	mov    cl,0x10
10054a3f:	sub    cl,bl
10054a41:	shr    si,cl
10054a44:	mov    ecx,DWORD PTR [esp+0x1c]
10054a48:	lea    ecx,[ebx+ecx*1-0x10]
10054a4c:	mov    WORD PTR [eax+0x16b8],si
10054a53:	mov    esi,DWORD PTR [esp+0x10]
10054a57:	jmp    0x10054a71
10054a59:	mov    di,WORD PTR [eax+edx*4+0xa7c]
10054a61:	shl    di,cl
10054a64:	or     WORD PTR [eax+0x16b8],di
10054a6b:	mov    edi,DWORD PTR [esp+0x1c]
10054a6f:	add    ecx,edi
10054a71:	sub    esi,ebp
10054a73:	mov    DWORD PTR [eax+0x16bc],ecx
10054a79:	mov    DWORD PTR [esp+0x10],esi
10054a7d:	movzx  edi,WORD PTR [eax+0xabe]
10054a84:	mov    ecx,DWORD PTR [eax+0x16bc]
10054a8a:	mov    ebx,0x10
10054a8f:	sub    ebx,edi
10054a91:	cmp    ecx,ebx
10054a93:	mov    DWORD PTR [esp+0x1c],edi
10054a97:	jle    0x10054af3
10054a99:	movzx  esi,WORD PTR [eax+0xabc]
10054aa0:	mov    edi,esi
10054aa2:	shl    edi,cl
10054aa4:	mov    ecx,DWORD PTR [eax+0x8]
10054aa7:	or     WORD PTR [eax+0x16b8],di
10054aae:	movzx  ebx,BYTE PTR [eax+0x16b8]
10054ab5:	mov    edi,DWORD PTR [eax+0x14]
10054ab8:	mov    BYTE PTR [ecx+edi*1],bl
10054abb:	add    DWORD PTR [eax+0x14],ebp
10054abe:	movzx  ebx,BYTE PTR [eax+0x16b9]
10054ac5:	mov    ecx,DWORD PTR [eax+0x8]
10054ac8:	mov    edi,DWORD PTR [eax+0x14]
10054acb:	mov    BYTE PTR [edi+ecx*1],bl
10054ace:	mov    ebx,DWORD PTR [eax+0x16bc]
10054ad4:	add    DWORD PTR [eax+0x14],ebp
10054ad7:	mov    cl,0x10
10054ad9:	sub    cl,bl
10054adb:	shr    si,cl
10054ade:	mov    ecx,DWORD PTR [esp+0x1c]
10054ae2:	lea    ecx,[ebx+ecx*1-0x10]
10054ae6:	mov    WORD PTR [eax+0x16b8],si
10054aed:	mov    esi,DWORD PTR [esp+0x10]
10054af1:	jmp    0x10054b0a
10054af3:	mov    di,WORD PTR [eax+0xabc]
10054afa:	shl    di,cl
10054afd:	or     WORD PTR [eax+0x16b8],di
10054b04:	mov    edi,DWORD PTR [esp+0x1c]
10054b08:	add    ecx,edi
10054b0a:	add    esi,0xfffffffd
10054b0d:	cmp    ecx,0xe
10054b10:	mov    DWORD PTR [eax+0x16bc],ecx
10054b16:	jle    0x10054b6b
10054b18:	mov    edi,esi
10054b1a:	shl    edi,cl
10054b1c:	mov    ecx,DWORD PTR [eax+0x8]
10054b1f:	or     WORD PTR [eax+0x16b8],di
10054b26:	movzx  ebx,BYTE PTR [eax+0x16b8]
10054b2d:	mov    edi,DWORD PTR [eax+0x14]
10054b30:	mov    BYTE PTR [ecx+edi*1],bl
10054b33:	add    DWORD PTR [eax+0x14],ebp
10054b36:	movzx  ebx,BYTE PTR [eax+0x16b9]
10054b3d:	mov    edi,DWORD PTR [eax+0x14]
10054b40:	mov    ecx,DWORD PTR [eax+0x8]
10054b43:	mov    BYTE PTR [edi+ecx*1],bl
10054b46:	mov    ebx,DWORD PTR [eax+0x16bc]
10054b4c:	add    DWORD PTR [eax+0x14],ebp
10054b4f:	mov    cl,0x10
10054b51:	sub    cl,bl
10054b53:	shr    si,cl
10054b56:	add    ebx,0xfffffff2
10054b59:	mov    DWORD PTR [eax+0x16bc],ebx
10054b5f:	mov    WORD PTR [eax+0x16b8],si
10054b66:	jmp    0x10054d76
10054b6b:	shl    esi,cl
10054b6d:	or     WORD PTR [eax+0x16b8],si
10054b74:	add    ecx,0x2
10054b77:	jmp    0x10054d70
10054b7c:	cmp    esi,0xa
10054b7f:	mov    ecx,DWORD PTR [eax+0x16bc]
10054b85:	mov    ebx,0x10
10054b8a:	jg     0x10054c84
10054b90:	movzx  edi,WORD PTR [eax+0xac2]
10054b97:	sub    ebx,edi
10054b99:	cmp    ecx,ebx
10054b9b:	mov    DWORD PTR [esp+0x1c],edi
10054b9f:	jle    0x10054bfb
10054ba1:	movzx  esi,WORD PTR [eax+0xac0]
10054ba8:	mov    edi,esi
10054baa:	shl    edi,cl
10054bac:	mov    ecx,DWORD PTR [eax+0x8]
10054baf:	or     WORD PTR [eax+0x16b8],di
10054bb6:	movzx  ebx,BYTE PTR [eax+0x16b8]
10054bbd:	mov    edi,DWORD PTR [eax+0x14]
10054bc0:	mov    BYTE PTR [ecx+edi*1],bl
10054bc3:	add    DWORD PTR [eax+0x14],ebp
10054bc6:	movzx  ebx,BYTE PTR [eax+0x16b9]
10054bcd:	mov    ecx,DWORD PTR [eax+0x8]
10054bd0:	mov    edi,DWORD PTR [eax+0x14]
10054bd3:	mov    BYTE PTR [edi+ecx*1],bl
10054bd6:	mov    ebx,DWORD PTR [eax+0x16bc]
10054bdc:	add    DWORD PTR [eax+0x14],ebp
10054bdf:	mov    cl,0x10
10054be1:	sub    cl,bl
10054be3:	shr    si,cl
10054be6:	mov    ecx,DWORD PTR [esp+0x1c]
10054bea:	lea    ecx,[ebx+ecx*1-0x10]
10054bee:	mov    WORD PTR [eax+0x16b8],si
10054bf5:	mov    esi,DWORD PTR [esp+0x10]
10054bf9:	jmp    0x10054c12
10054bfb:	mov    di,WORD PTR [eax+0xac0]
10054c02:	shl    di,cl
10054c05:	or     WORD PTR [eax+0x16b8],di
10054c0c:	mov    edi,DWORD PTR [esp+0x1c]
10054c10:	add    ecx,edi
10054c12:	add    esi,0xfffffffd
10054c15:	cmp    ecx,0xd
10054c18:	mov    DWORD PTR [eax+0x16bc],ecx
10054c1e:	jle    0x10054c73
10054c20:	mov    edi,esi
10054c22:	shl    edi,cl
10054c24:	mov    ecx,DWORD PTR [eax+0x8]
10054c27:	or     WORD PTR [eax+0x16b8],di
10054c2e:	movzx  ebx,BYTE PTR [eax+0x16b8]
10054c35:	mov    edi,DWORD PTR [eax+0x14]
10054c38:	mov    BYTE PTR [ecx+edi*1],bl
10054c3b:	add    DWORD PTR [eax+0x14],ebp
10054c3e:	movzx  ebx,BYTE PTR [eax+0x16b9]
10054c45:	mov    edi,DWORD PTR [eax+0x14]
10054c48:	mov    ecx,DWORD PTR [eax+0x8]
10054c4b:	mov    BYTE PTR [edi+ecx*1],bl
10054c4e:	mov    ebx,DWORD PTR [eax+0x16bc]
10054c54:	add    DWORD PTR [eax+0x14],ebp
10054c57:	mov    cl,0x10
10054c59:	sub    cl,bl
10054c5b:	shr    si,cl
10054c5e:	add    ebx,0xfffffff3
10054c61:	mov    DWORD PTR [eax+0x16bc],ebx
10054c67:	mov    WORD PTR [eax+0x16b8],si
10054c6e:	jmp    0x10054d76
10054c73:	shl    esi,cl
10054c75:	or     WORD PTR [eax+0x16b8],si
10054c7c:	add    ecx,0x3
10054c7f:	jmp    0x10054d70
10054c84:	movzx  edi,WORD PTR [eax+0xac6]
10054c8b:	sub    ebx,edi
10054c8d:	cmp    ecx,ebx
10054c8f:	mov    DWORD PTR [esp+0x1c],edi
10054c93:	jle    0x10054cef
10054c95:	movzx  esi,WORD PTR [eax+0xac4]
10054c9c:	mov    edi,esi
10054c9e:	shl    edi,cl
10054ca0:	mov    ecx,DWORD PTR [eax+0x8]
10054ca3:	or     WORD PTR [eax+0x16b8],di
10054caa:	movzx  ebx,BYTE PTR [eax+0x16b8]
10054cb1:	mov    edi,DWORD PTR [eax+0x14]
10054cb4:	mov    BYTE PTR [ecx+edi*1],bl
10054cb7:	add    DWORD PTR [eax+0x14],ebp
10054cba:	movzx  ebx,BYTE PTR [eax+0x16b9]
10054cc1:	mov    ecx,DWORD PTR [eax+0x8]
10054cc4:	mov    edi,DWORD PTR [eax+0x14]
10054cc7:	mov    BYTE PTR [edi+ecx*1],bl
10054cca:	mov    ebx,DWORD PTR [eax+0x16bc]
10054cd0:	add    DWORD PTR [eax+0x14],ebp
10054cd3:	mov    cl,0x10
10054cd5:	sub    cl,bl
10054cd7:	shr    si,cl
10054cda:	mov    ecx,DWORD PTR [esp+0x1c]
10054cde:	lea    ecx,[ebx+ecx*1-0x10]
10054ce2:	mov    WORD PTR [eax+0x16b8],si
10054ce9:	mov    esi,DWORD PTR [esp+0x10]
10054ced:	jmp    0x10054d06
10054cef:	mov    di,WORD PTR [eax+0xac4]
10054cf6:	shl    di,cl
10054cf9:	or     WORD PTR [eax+0x16b8],di
10054d00:	mov    edi,DWORD PTR [esp+0x1c]
10054d04:	add    ecx,edi
10054d06:	add    esi,0xfffffff5
10054d09:	cmp    ecx,0x9
10054d0c:	mov    DWORD PTR [eax+0x16bc],ecx
10054d12:	jle    0x10054d64
10054d14:	mov    edi,esi
10054d16:	shl    edi,cl
10054d18:	mov    ecx,DWORD PTR [eax+0x8]
10054d1b:	or     WORD PTR [eax+0x16b8],di
10054d22:	movzx  ebx,BYTE PTR [eax+0x16b8]
10054d29:	mov    edi,DWORD PTR [eax+0x14]
10054d2c:	mov    BYTE PTR [ecx+edi*1],bl
10054d2f:	add    DWORD PTR [eax+0x14],ebp
10054d32:	movzx  ebx,BYTE PTR [eax+0x16b9]
10054d39:	mov    edi,DWORD PTR [eax+0x14]
10054d3c:	mov    ecx,DWORD PTR [eax+0x8]
10054d3f:	mov    BYTE PTR [edi+ecx*1],bl
10054d42:	mov    ebx,DWORD PTR [eax+0x16bc]
10054d48:	add    DWORD PTR [eax+0x14],ebp
10054d4b:	mov    cl,0x10
10054d4d:	sub    cl,bl
10054d4f:	shr    si,cl
10054d52:	add    ebx,0xfffffff7
10054d55:	mov    DWORD PTR [eax+0x16bc],ebx
10054d5b:	mov    WORD PTR [eax+0x16b8],si
10054d62:	jmp    0x10054d76
10054d64:	shl    esi,cl
10054d66:	or     WORD PTR [eax+0x16b8],si
10054d6d:	add    ecx,0x7
10054d70:	mov    DWORD PTR [eax+0x16bc],ecx
10054d76:	mov    ecx,DWORD PTR [esp+0x14]
10054d7a:	xor    esi,esi
10054d7c:	test   ecx,ecx
10054d7e:	mov    DWORD PTR [esp+0x1c],edx
10054d82:	jne    0x10054d90
10054d84:	mov    ecx,0x8a
10054d89:	mov    edi,0x3
10054d8e:	jmp    0x10054daa
10054d90:	cmp    edx,ecx
10054d92:	jne    0x10054da0
10054d94:	mov    ecx,0x6
10054d99:	mov    edi,0x3
10054d9e:	jmp    0x10054daa
10054da0:	mov    ecx,0x7
10054da5:	mov    edi,0x4
10054daa:	add    DWORD PTR [esp+0x18],0x4
10054daf:	sub    DWORD PTR [esp+0x20],ebp
10054db3:	jne    0x10054900
10054db9:	pop    edi
10054dba:	pop    esi
10054dbb:	pop    ebp
10054dbc:	pop    ebx
10054dbd:	add    esp,0x18
10054dc0:	ret    
10054dc1:	int3   
10054dc2:	int3   
10054dc3:	int3   
10054dc4:	int3   
10054dc5:	int3   
10054dc6:	int3   
10054dc7:	int3   
10054dc8:	int3   
10054dc9:	int3   
10054dca:	int3   
10054dcb:	int3   
10054dcc:	int3   
10054dcd:	int3   
10054dce:	int3   
10054dcf:	int3   
10054dd0:	push   ecx
10054dd1:	mov    ecx,DWORD PTR [eax+0x16bc]
10054dd7:	cmp    ecx,0xb
10054dda:	push   ebx
10054ddb:	mov    ebx,DWORD PTR [esp+0x14]
10054ddf:	push   ebp
10054de0:	push   esi
10054de1:	push   edi
10054de2:	mov    ebp,0x1
10054de7:	jle    0x10054e47
10054de9:	mov    esi,DWORD PTR [esp+0x18]
10054ded:	add    esi,0xfffffeff
10054df3:	mov    edx,esi
10054df5:	shl    edx,cl
10054df7:	mov    ecx,DWORD PTR [eax+0x14]
10054dfa:	or     WORD PTR [eax+0x16b8],dx
10054e01:	movzx  ebx,BYTE PTR [eax+0x16b8]
10054e08:	mov    edx,DWORD PTR [eax+0x8]
10054e0b:	mov    BYTE PTR [ecx+edx*1],bl
10054e0e:	add    DWORD PTR [eax+0x14],ebp
10054e11:	movzx  ebx,BYTE PTR [eax+0x16b9]
10054e18:	mov    ecx,DWORD PTR [eax+0x14]
10054e1b:	mov    edx,DWORD PTR [eax+0x8]
10054e1e:	mov    BYTE PTR [ecx+edx*1],bl
10054e21:	mov    edx,DWORD PTR [eax+0x16bc]
10054e27:	add    DWORD PTR [eax+0x14],ebp
10054e2a:	mov    ebx,DWORD PTR [esp+0x20]
10054e2e:	mov    cl,0x10
10054e30:	sub    cl,dl
10054e32:	shr    si,cl
10054e35:	add    edx,0xfffffff5
10054e38:	mov    DWORD PTR [eax+0x16bc],edx
10054e3e:	mov    WORD PTR [eax+0x16b8],si
10054e45:	jmp    0x10054e63
10054e47:	mov    edx,DWORD PTR [esp+0x18]
10054e4b:	add    edx,0xfffffeff
10054e51:	shl    edx,cl
10054e53:	or     WORD PTR [eax+0x16b8],dx
10054e5a:	add    ecx,0x5
10054e5d:	mov    DWORD PTR [eax+0x16bc],ecx
10054e63:	mov    ecx,DWORD PTR [eax+0x16bc]
10054e69:	cmp    ecx,0xb
10054e6c:	jle    0x10054ecd
10054e6e:	mov    esi,DWORD PTR [esp+0x1c]
10054e72:	add    esi,0xffffffff
10054e75:	mov    edx,esi
10054e77:	shl    edx,cl
10054e79:	mov    ecx,DWORD PTR [eax+0x14]
10054e7c:	mov    DWORD PTR [esp+0x10],ebx
10054e80:	or     WORD PTR [eax+0x16b8],dx
10054e87:	movzx  ebx,BYTE PTR [eax+0x16b8]
10054e8e:	mov    edx,DWORD PTR [eax+0x8]
10054e91:	mov    BYTE PTR [ecx+edx*1],bl
10054e94:	add    DWORD PTR [eax+0x14],ebp
10054e97:	movzx  ebx,BYTE PTR [eax+0x16b9]
10054e9e:	mov    ecx,DWORD PTR [eax+0x14]
10054ea1:	mov    edx,DWORD PTR [eax+0x8]
10054ea4:	mov    BYTE PTR [ecx+edx*1],bl
10054ea7:	mov    edx,DWORD PTR [eax+0x16bc]
10054ead:	add    DWORD PTR [eax+0x14],ebp
10054eb0:	mov    ebx,DWORD PTR [esp+0x10]
10054eb4:	mov    cl,0x10
10054eb6:	sub    cl,dl
10054eb8:	shr    si,cl
10054ebb:	add    edx,0xfffffff5
10054ebe:	mov    DWORD PTR [eax+0x16bc],edx
10054ec4:	mov    WORD PTR [eax+0x16b8],si
10054ecb:	jmp    0x10054ee6
10054ecd:	mov    edx,DWORD PTR [esp+0x1c]
10054ed1:	add    edx,0xffffffff
10054ed4:	shl    edx,cl
10054ed6:	or     WORD PTR [eax+0x16b8],dx
10054edd:	add    ecx,0x5
10054ee0:	mov    DWORD PTR [eax+0x16bc],ecx
10054ee6:	mov    ecx,DWORD PTR [eax+0x16bc]
10054eec:	cmp    ecx,0xc
10054eef:	jle    0x10054f4c
10054ef1:	lea    esi,[ebx-0x4]
10054ef4:	mov    edx,esi
10054ef6:	shl    edx,cl
10054ef8:	mov    ecx,DWORD PTR [eax+0x14]
10054efb:	mov    DWORD PTR [esp+0x10],ebx
10054eff:	or     WORD PTR [eax+0x16b8],dx
10054f06:	movzx  ebx,BYTE PTR [eax+0x16b8]
10054f0d:	mov    edx,DWORD PTR [eax+0x8]
10054f10:	mov    BYTE PTR [ecx+edx*1],bl
10054f13:	add    DWORD PTR [eax+0x14],ebp
10054f16:	movzx  ebx,BYTE PTR [eax+0x16b9]
10054f1d:	mov    ecx,DWORD PTR [eax+0x14]
10054f20:	mov    edx,DWORD PTR [eax+0x8]
10054f23:	mov    BYTE PTR [ecx+edx*1],bl
10054f26:	mov    edx,DWORD PTR [eax+0x16bc]
10054f2c:	add    DWORD PTR [eax+0x14],ebp
10054f2f:	mov    ebx,DWORD PTR [esp+0x10]
10054f33:	mov    cl,0x10
10054f35:	sub    cl,dl
10054f37:	shr    si,cl
10054f3a:	add    edx,0xfffffff4
10054f3d:	mov    DWORD PTR [eax+0x16bc],edx
10054f43:	mov    WORD PTR [eax+0x16b8],si
10054f4a:	jmp    0x10054f61
10054f4c:	lea    edx,[ebx-0x4]
10054f4f:	shl    edx,cl
10054f51:	or     WORD PTR [eax+0x16b8],dx
10054f58:	add    ecx,0x4
10054f5b:	mov    DWORD PTR [eax+0x16bc],ecx
10054f61:	xor    edi,edi
10054f63:	test   ebx,ebx
10054f65:	jle    0x10055003
10054f6b:	jmp    0x10054f70
10054f6d:	lea    ecx,[ecx+0x0]
10054f70:	mov    ecx,DWORD PTR [eax+0x16bc]
10054f76:	cmp    ecx,0xd
10054f79:	movzx  edx,BYTE PTR [edi+0x10068abc]
10054f80:	jle    0x10054fde
10054f82:	movzx  esi,WORD PTR [eax+edx*4+0xa7e]
10054f8a:	mov    edx,esi
10054f8c:	shl    edx,cl
10054f8e:	mov    ecx,DWORD PTR [eax+0x14]
10054f91:	or     WORD PTR [eax+0x16b8],dx
10054f98:	movzx  ebx,BYTE PTR [eax+0x16b8]
10054f9f:	mov    edx,DWORD PTR [eax+0x8]
10054fa2:	mov    BYTE PTR [ecx+edx*1],bl
10054fa5:	add    DWORD PTR [eax+0x14],ebp
10054fa8:	movzx  ebx,BYTE PTR [eax+0x16b9]
10054faf:	mov    ecx,DWORD PTR [eax+0x14]
10054fb2:	mov    edx,DWORD PTR [eax+0x8]
10054fb5:	mov    BYTE PTR [ecx+edx*1],bl
10054fb8:	mov    edx,DWORD PTR [eax+0x16bc]
10054fbe:	add    DWORD PTR [eax+0x14],ebp
10054fc1:	mov    ebx,DWORD PTR [esp+0x20]
10054fc5:	mov    cl,0x10
10054fc7:	sub    cl,dl
10054fc9:	shr    si,cl
10054fcc:	add    edx,0xfffffff3
10054fcf:	mov    DWORD PTR [eax+0x16bc],edx
10054fd5:	mov    WORD PTR [eax+0x16b8],si
10054fdc:	jmp    0x10054ff9
10054fde:	mov    dx,WORD PTR [eax+edx*4+0xa7e]
10054fe6:	shl    dx,cl
10054fe9:	or     WORD PTR [eax+0x16b8],dx
10054ff0:	add    ecx,0x3
10054ff3:	mov    DWORD PTR [eax+0x16bc],ecx
10054ff9:	add    edi,ebp
10054ffb:	cmp    edi,ebx
10054ffd:	jl     0x10054f70
10055003:	mov    ecx,DWORD PTR [esp+0x18]
10055007:	add    ecx,0xffffffff
1005500a:	lea    edx,[eax+0x94]
10055010:	call   0x100548b0
10055015:	mov    ecx,DWORD PTR [esp+0x1c]
10055019:	pop    edi
1005501a:	pop    esi
1005501b:	pop    ebp
1005501c:	add    ecx,0xffffffff
1005501f:	lea    edx,[eax+0x988]
10055025:	pop    ebx
10055026:	add    esp,0x4
10055029:	jmp    0x100548b0
1005502e:	int3   
1005502f:	int3   
10055030:	sub    esp,0xc
10055033:	push   ebx
10055034:	mov    ebx,DWORD PTR [esp+0x14]
10055038:	push   ebp
10055039:	xor    ecx,ecx
1005503b:	cmp    DWORD PTR [eax+0x16a0],ecx
10055041:	push   esi
10055042:	push   edi
10055043:	je     0x10055382
10055049:	lea    esp,[esp+0x0]
10055050:	mov    edx,DWORD PTR [eax+0x16a4]
10055056:	movzx  ebp,WORD PTR [edx+ecx*2]
1005505a:	mov    edx,DWORD PTR [eax+0x1698]
10055060:	movzx  esi,BYTE PTR [ecx+edx*1]
10055064:	add    ecx,0x1
10055067:	test   ebp,ebp
10055069:	mov    DWORD PTR [esp+0x18],ecx
1005506d:	mov    ecx,DWORD PTR [eax+0x16bc]
10055073:	jne    0x100550fa
10055079:	movzx  edi,WORD PTR [ebx+esi*4+0x2]
1005507e:	mov    edx,0x10
10055083:	sub    edx,edi
10055085:	cmp    ecx,edx
10055087:	jle    0x100550e5
10055089:	movzx  esi,WORD PTR [ebx+esi*4]
1005508d:	mov    edx,esi
1005508f:	shl    edx,cl
10055091:	mov    ecx,DWORD PTR [eax+0x8]
10055094:	mov    DWORD PTR [esp+0x10],ebx
10055098:	or     WORD PTR [eax+0x16b8],dx
1005509f:	movzx  ebx,BYTE PTR [eax+0x16b8]
100550a6:	mov    edx,DWORD PTR [eax+0x14]
100550a9:	mov    BYTE PTR [ecx+edx*1],bl
100550ac:	add    DWORD PTR [eax+0x14],0x1
100550b0:	movzx  ebx,BYTE PTR [eax+0x16b9]
100550b7:	mov    ecx,DWORD PTR [eax+0x14]
100550ba:	mov    edx,DWORD PTR [eax+0x8]
100550bd:	mov    BYTE PTR [ecx+edx*1],bl
100550c0:	mov    edx,DWORD PTR [eax+0x16bc]
100550c6:	add    DWORD PTR [eax+0x14],0x1
100550ca:	mov    ebx,DWORD PTR [esp+0x10]
100550ce:	mov    cl,0x10
100550d0:	sub    cl,dl
100550d2:	shr    si,cl
100550d5:	lea    ecx,[edx+edi*1-0x10]
100550d9:	mov    WORD PTR [eax+0x16b8],si
100550e0:	jmp    0x1005536c
100550e5:	mov    dx,WORD PTR [ebx+esi*4]
100550e9:	shl    dx,cl
100550ec:	or     WORD PTR [eax+0x16b8],dx
100550f3:	add    ecx,edi
100550f5:	jmp    0x1005536c
100550fa:	movzx  edx,BYTE PTR [esi+0x10069290]
10055101:	movzx  edi,WORD PTR [ebx+edx*4+0x406]
10055109:	mov    ebx,0x10
1005510e:	sub    ebx,edi
10055110:	cmp    ecx,ebx
10055112:	mov    DWORD PTR [esp+0x10],edi
10055116:	mov    edi,DWORD PTR [esp+0x20]
1005511a:	mov    DWORD PTR [esp+0x14],edx
1005511e:	jle    0x10055183
10055120:	movzx  edi,WORD PTR [edi+edx*4+0x404]
10055128:	mov    edx,edi
1005512a:	shl    edx,cl
1005512c:	mov    ecx,DWORD PTR [eax+0x8]
1005512f:	or     WORD PTR [eax+0x16b8],dx
10055136:	movzx  ebx,BYTE PTR [eax+0x16b8]
1005513d:	mov    edx,DWORD PTR [eax+0x14]
10055140:	mov    BYTE PTR [ecx+edx*1],bl
10055143:	add    DWORD PTR [eax+0x14],0x1
10055147:	mov    ecx,DWORD PTR [eax+0x14]
1005514a:	movzx  ebx,BYTE PTR [eax+0x16b9]
10055151:	mov    edx,DWORD PTR [eax+0x8]
10055154:	mov    BYTE PTR [ecx+edx*1],bl
10055157:	mov    edx,DWORD PTR [eax+0x16bc]
1005515d:	add    DWORD PTR [eax+0x14],0x1
10055161:	mov    cl,0x10
10055163:	sub    cl,dl
10055165:	shr    di,cl
10055168:	mov    ecx,DWORD PTR [esp+0x10]
1005516c:	lea    edx,[edx+ecx*1-0x10]
10055170:	mov    DWORD PTR [eax+0x16bc],edx
10055176:	mov    edx,DWORD PTR [esp+0x14]
1005517a:	mov    WORD PTR [eax+0x16b8],di
10055181:	jmp    0x100551a1
10055183:	mov    di,WORD PTR [edi+edx*4+0x404]
1005518b:	shl    di,cl
1005518e:	or     WORD PTR [eax+0x16b8],di
10055195:	mov    edi,DWORD PTR [esp+0x10]
10055199:	add    ecx,edi
1005519b:	mov    DWORD PTR [eax+0x16bc],ecx
100551a1:	mov    edi,DWORD PTR [edx*4+0x10068a48]
100551a8:	test   edi,edi
100551aa:	mov    ebx,DWORD PTR [esp+0x20]
100551ae:	je     0x1005522a
100551b0:	sub    esi,DWORD PTR [edx*4+0x10069390]
100551b7:	mov    ecx,DWORD PTR [eax+0x16bc]
100551bd:	mov    edx,0x10
100551c2:	sub    edx,edi
100551c4:	cmp    ecx,edx
100551c6:	jle    0x10055219
100551c8:	mov    edx,esi
100551ca:	shl    edx,cl
100551cc:	mov    ecx,DWORD PTR [eax+0x8]
100551cf:	or     WORD PTR [eax+0x16b8],dx
100551d6:	movzx  ebx,BYTE PTR [eax+0x16b8]
100551dd:	mov    edx,DWORD PTR [eax+0x14]
100551e0:	mov    BYTE PTR [ecx+edx*1],bl
100551e3:	add    DWORD PTR [eax+0x14],0x1
100551e7:	movzx  ebx,BYTE PTR [eax+0x16b9]
100551ee:	mov    ecx,DWORD PTR [eax+0x14]
100551f1:	mov    edx,DWORD PTR [eax+0x8]
100551f4:	mov    BYTE PTR [ecx+edx*1],bl
100551f7:	mov    edx,DWORD PTR [eax+0x16bc]
100551fd:	add    DWORD PTR [eax+0x14],0x1
10055201:	mov    ebx,DWORD PTR [esp+0x20]
10055205:	mov    cl,0x10
10055207:	sub    cl,dl
10055209:	shr    si,cl
1005520c:	lea    ecx,[edx+edi*1-0x10]
10055210:	mov    WORD PTR [eax+0x16b8],si
10055217:	jmp    0x10055224
10055219:	shl    esi,cl
1005521b:	or     WORD PTR [eax+0x16b8],si
10055222:	add    ecx,edi
10055224:	mov    DWORD PTR [eax+0x16bc],ecx
1005522a:	sub    ebp,0x1
1005522d:	cmp    ebp,0x100
10055233:	jae    0x1005523e
10055235:	movzx  edi,BYTE PTR [ebp+0x10069090]
1005523c:	jmp    0x1005524a
1005523e:	mov    edx,ebp
10055240:	shr    edx,0x7
10055243:	movzx  edi,BYTE PTR [edx+0x10069190]
1005524a:	mov    ecx,DWORD PTR [esp+0x24]
1005524e:	movzx  edx,WORD PTR [ecx+edi*4+0x2]
10055253:	mov    ecx,DWORD PTR [eax+0x16bc]
10055259:	mov    esi,0x10
1005525e:	sub    esi,edx
10055260:	cmp    ecx,esi
10055262:	mov    DWORD PTR [esp+0x14],edx
10055266:	jle    0x100552cb
10055268:	mov    edx,DWORD PTR [esp+0x24]
1005526c:	movzx  esi,WORD PTR [edx+edi*4]
10055270:	mov    edx,esi
10055272:	shl    edx,cl
10055274:	mov    ecx,DWORD PTR [eax+0x8]
10055277:	or     WORD PTR [eax+0x16b8],dx
1005527e:	movzx  ebx,BYTE PTR [eax+0x16b8]
10055285:	mov    edx,DWORD PTR [eax+0x14]
10055288:	mov    BYTE PTR [ecx+edx*1],bl
1005528b:	add    DWORD PTR [eax+0x14],0x1
1005528f:	movzx  ebx,BYTE PTR [eax+0x16b9]
10055296:	mov    ecx,DWORD PTR [eax+0x14]
10055299:	mov    edx,DWORD PTR [eax+0x8]
1005529c:	mov    BYTE PTR [ecx+edx*1],bl
1005529f:	mov    edx,DWORD PTR [eax+0x16bc]
100552a5:	add    DWORD PTR [eax+0x14],0x1
100552a9:	mov    ebx,DWORD PTR [esp+0x20]
100552ad:	mov    cl,0x10
100552af:	sub    cl,dl
100552b1:	shr    si,cl
100552b4:	mov    ecx,DWORD PTR [esp+0x14]
100552b8:	lea    edx,[edx+ecx*1-0x10]
100552bc:	mov    DWORD PTR [eax+0x16bc],edx
100552c2:	mov    WORD PTR [eax+0x16b8],si
100552c9:	jmp    0x100552e5
100552cb:	mov    esi,DWORD PTR [esp+0x24]
100552cf:	mov    si,WORD PTR [esi+edi*4]
100552d3:	shl    si,cl
100552d6:	or     WORD PTR [eax+0x16b8],si
100552dd:	add    ecx,edx
100552df:	mov    DWORD PTR [eax+0x16bc],ecx
100552e5:	mov    esi,DWORD PTR [edi*4+0x10068ad0]
100552ec:	test   esi,esi
100552ee:	je     0x10055372
100552f4:	mov    ecx,DWORD PTR [eax+0x16bc]
100552fa:	sub    ebp,DWORD PTR [edi*4+0x10069408]
10055301:	mov    edx,0x10
10055306:	sub    edx,esi
10055308:	cmp    ecx,edx
1005530a:	jle    0x10055361
1005530c:	mov    edx,ebp
1005530e:	shl    edx,cl
10055310:	mov    ecx,DWORD PTR [eax+0x8]
10055313:	mov    DWORD PTR [esp+0x14],ebx
10055317:	or     WORD PTR [eax+0x16b8],dx
1005531e:	movzx  ebx,BYTE PTR [eax+0x16b8]
10055325:	mov    edx,DWORD PTR [eax+0x14]
10055328:	mov    BYTE PTR [ecx+edx*1],bl
1005532b:	add    DWORD PTR [eax+0x14],0x1
1005532f:	movzx  ebx,BYTE PTR [eax+0x16b9]
10055336:	mov    ecx,DWORD PTR [eax+0x14]
10055339:	mov    edx,DWORD PTR [eax+0x8]
1005533c:	mov    BYTE PTR [ecx+edx*1],bl
1005533f:	mov    edx,DWORD PTR [eax+0x16bc]
10055345:	add    DWORD PTR [eax+0x14],0x1
10055349:	mov    ebx,DWORD PTR [esp+0x14]
1005534d:	mov    cl,0x10
1005534f:	sub    cl,dl
10055351:	shr    bp,cl
10055354:	lea    ecx,[edx+esi*1-0x10]
10055358:	mov    WORD PTR [eax+0x16b8],bp
1005535f:	jmp    0x1005536c
10055361:	shl    ebp,cl
10055363:	or     WORD PTR [eax+0x16b8],bp
1005536a:	add    ecx,esi
1005536c:	mov    DWORD PTR [eax+0x16bc],ecx
10055372:	mov    ecx,DWORD PTR [esp+0x18]
10055376:	cmp    ecx,DWORD PTR [eax+0x16a0]
1005537c:	jb     0x10055050
10055382:	movzx  edi,WORD PTR [ebx+0x402]
10055389:	mov    ecx,DWORD PTR [eax+0x16bc]
1005538f:	mov    edx,0x10
10055394:	sub    edx,edi
10055396:	cmp    ecx,edx
10055398:	jle    0x1005540d
1005539a:	movzx  esi,WORD PTR [ebx+0x400]
100553a1:	mov    edx,esi
100553a3:	shl    edx,cl
100553a5:	mov    ecx,DWORD PTR [eax+0x8]
100553a8:	mov    DWORD PTR [esp+0x20],ebx
100553ac:	or     WORD PTR [eax+0x16b8],dx
100553b3:	mov    edx,DWORD PTR [eax+0x14]
100553b6:	mov    bl,BYTE PTR [eax+0x16b8]
100553bc:	mov    BYTE PTR [ecx+edx*1],bl
100553bf:	add    DWORD PTR [eax+0x14],0x1
100553c3:	mov    ebp,DWORD PTR [eax+0x14]
100553c6:	mov    ecx,DWORD PTR [eax+0x8]
100553c9:	mov    dl,BYTE PTR [eax+0x16b9]
100553cf:	mov    ebx,DWORD PTR [esp+0x20]
100553d3:	mov    BYTE PTR [ecx+ebp*1],dl
100553d6:	mov    edx,DWORD PTR [eax+0x16bc]
100553dc:	add    DWORD PTR [eax+0x14],0x1
100553e0:	mov    cl,0x10
100553e2:	sub    cl,dl
100553e4:	shr    si,cl
100553e7:	lea    ecx,[edx+edi*1-0x10]
100553eb:	pop    edi
100553ec:	mov    DWORD PTR [eax+0x16bc],ecx
100553f2:	mov    WORD PTR [eax+0x16b8],si
100553f9:	movzx  edx,WORD PTR [ebx+0x402]
10055400:	pop    esi
10055401:	pop    ebp
10055402:	mov    DWORD PTR [eax+0x16b4],edx
10055408:	pop    ebx
10055409:	add    esp,0xc
1005540c:	ret    
1005540d:	mov    dx,WORD PTR [ebx+0x400]
10055414:	shl    dx,cl
10055417:	or     WORD PTR [eax+0x16b8],dx
1005541e:	add    ecx,edi
10055420:	pop    edi
10055421:	mov    DWORD PTR [eax+0x16bc],ecx
10055427:	movzx  ecx,WORD PTR [ebx+0x402]
1005542e:	pop    esi
1005542f:	pop    ebp
10055430:	mov    DWORD PTR [eax+0x16b4],ecx
10055436:	pop    ebx
10055437:	add    esp,0xc
1005543a:	ret    
1005543b:	int3   
1005543c:	int3   
1005543d:	int3   
1005543e:	int3   
1005543f:	int3   
10055440:	xor    eax,eax
10055442:	lea    ecx,[edx+0x94]
10055448:	cmp    WORD PTR [ecx],0x0
1005544c:	jne    0x10055459
1005544e:	add    eax,0x1
10055451:	add    ecx,0x4
10055454:	cmp    eax,0x9
10055457:	jl     0x10055448
10055459:	cmp    eax,0x9
1005545c:	jne    0x100554fd
10055462:	mov    eax,0xe
10055467:	lea    ecx,[edx+0xd0]
1005546d:	lea    ecx,[ecx+0x0]
10055470:	cmp    WORD PTR [ecx-0x4],0x0
10055475:	jne    0x100554fd
1005547b:	cmp    WORD PTR [ecx],0x0
1005547f:	jne    0x100554b6
10055481:	cmp    WORD PTR [ecx+0x4],0x0
10055486:	jne    0x100554c7
10055488:	cmp    WORD PTR [ecx+0x8],0x0
1005548d:	jne    0x100554d8
1005548f:	cmp    WORD PTR [ecx+0xc],0x0
10055494:	jne    0x100554e9
10055496:	cmp    WORD PTR [ecx+0x10],0x0
1005549b:	jne    0x100554fa
1005549d:	add    eax,0x6
100554a0:	add    ecx,0x18
100554a3:	cmp    eax,0x20
100554a6:	jl     0x10055470
100554a8:	mov    edx,DWORD PTR [edx]
100554aa:	xor    ecx,ecx
100554ac:	cmp    eax,0x20
100554af:	sete   cl
100554b2:	mov    DWORD PTR [edx+0x2c],ecx
100554b5:	ret    
100554b6:	mov    edx,DWORD PTR [edx]
100554b8:	xor    ecx,ecx
100554ba:	add    eax,0x1
100554bd:	cmp    eax,0x20
100554c0:	sete   cl
100554c3:	mov    DWORD PTR [edx+0x2c],ecx
100554c6:	ret    
100554c7:	mov    edx,DWORD PTR [edx]
100554c9:	xor    ecx,ecx
100554cb:	add    eax,0x2
100554ce:	cmp    eax,0x20
100554d1:	sete   cl
100554d4:	mov    DWORD PTR [edx+0x2c],ecx
100554d7:	ret    
100554d8:	mov    edx,DWORD PTR [edx]
100554da:	xor    ecx,ecx
100554dc:	add    eax,0x3
100554df:	cmp    eax,0x20
100554e2:	sete   cl
100554e5:	mov    DWORD PTR [edx+0x2c],ecx
100554e8:	ret    
100554e9:	mov    edx,DWORD PTR [edx]
100554eb:	xor    ecx,ecx
100554ed:	add    eax,0x4
100554f0:	cmp    eax,0x20
100554f3:	sete   cl
100554f6:	mov    DWORD PTR [edx+0x2c],ecx
100554f9:	ret    
100554fa:	add    eax,0x5
100554fd:	mov    edx,DWORD PTR [edx]
100554ff:	xor    ecx,ecx
10055501:	cmp    eax,0x20
10055504:	sete   cl
10055507:	mov    DWORD PTR [edx+0x2c],ecx
1005550a:	ret    
1005550b:	int3   
1005550c:	int3   
1005550d:	int3   
1005550e:	int3   
1005550f:	int3   
10055510:	xor    eax,eax
10055512:	push   esi
10055513:	mov    esi,ecx
10055515:	and    esi,0x1
10055518:	or     eax,esi
1005551a:	sub    edx,0x1
1005551d:	shr    ecx,1
1005551f:	add    eax,eax
10055521:	test   edx,edx
10055523:	jg     0x10055513
10055525:	shr    eax,1
10055527:	pop    esi
10055528:	ret    
10055529:	int3   
1005552a:	int3   
1005552b:	int3   
1005552c:	int3   
1005552d:	int3   
1005552e:	int3   
1005552f:	int3   
10055530:	mov    ecx,DWORD PTR [eax+0x16bc]
10055536:	cmp    ecx,0x10
10055539:	push   ebx
1005553a:	jne    0x10055575
1005553c:	movzx  ebx,BYTE PTR [eax+0x16b8]
10055543:	mov    edx,DWORD PTR [eax+0x14]
10055546:	mov    ecx,DWORD PTR [eax+0x8]
10055549:	mov    BYTE PTR [ecx+edx*1],bl
1005554c:	add    DWORD PTR [eax+0x14],0x1
10055550:	movzx  ebx,BYTE PTR [eax+0x16b9]
10055557:	mov    ecx,DWORD PTR [eax+0x14]
1005555a:	mov    edx,DWORD PTR [eax+0x8]
1005555d:	mov    BYTE PTR [ecx+edx*1],bl
10055560:	add    DWORD PTR [eax+0x14],0x1
10055564:	xor    ecx,ecx
10055566:	mov    DWORD PTR [eax+0x16bc],ecx
1005556c:	mov    WORD PTR [eax+0x16b8],cx
10055573:	pop    ebx
10055574:	ret    
10055575:	cmp    ecx,0x8
10055578:	jl     0x100555a3
1005557a:	mov    ecx,DWORD PTR [eax+0x8]
1005557d:	mov    edx,DWORD PTR [eax+0x14]
10055580:	mov    bl,BYTE PTR [eax+0x16b8]
10055586:	mov    BYTE PTR [ecx+edx*1],bl
10055589:	movzx  cx,BYTE PTR [eax+0x16b9]
10055591:	add    DWORD PTR [eax+0x14],0x1
10055595:	add    DWORD PTR [eax+0x16bc],0xfffffff8
1005559c:	mov    WORD PTR [eax+0x16b8],cx
100555a3:	pop    ebx
100555a4:	ret    
100555a5:	int3   
100555a6:	int3   
100555a7:	int3   
100555a8:	int3   
100555a9:	int3   
100555aa:	int3   
100555ab:	int3   
100555ac:	int3   
100555ad:	int3   
100555ae:	int3   
100555af:	int3   
100555b0:	mov    edx,DWORD PTR [eax+0x16bc]
100555b6:	cmp    edx,0x8
100555b9:	push   ebx
100555ba:	push   esi
100555bb:	jle    0x100555fa
100555bd:	movzx  ebx,BYTE PTR [eax+0x16b8]
100555c4:	mov    edx,DWORD PTR [eax+0x14]
100555c7:	mov    ecx,DWORD PTR [eax+0x8]
100555ca:	mov    BYTE PTR [ecx+edx*1],bl
100555cd:	movzx  ebx,BYTE PTR [eax+0x16b9]
100555d4:	mov    edx,DWORD PTR [eax+0x8]
100555d7:	mov    esi,0x1
100555dc:	add    DWORD PTR [eax+0x14],esi
100555df:	mov    ecx,DWORD PTR [eax+0x14]
100555e2:	mov    BYTE PTR [ecx+edx*1],bl
100555e5:	add    DWORD PTR [eax+0x14],esi
100555e8:	xor    ecx,ecx
100555ea:	pop    esi
100555eb:	mov    WORD PTR [eax+0x16b8],cx
100555f2:	mov    DWORD PTR [eax+0x16bc],ecx
100555f8:	pop    ebx
100555f9:	ret    
100555fa:	xor    ecx,ecx
100555fc:	cmp    edx,ecx
100555fe:	jle    0x10055613
10055600:	mov    esi,DWORD PTR [eax+0x14]
10055603:	mov    edx,DWORD PTR [eax+0x8]
10055606:	mov    bl,BYTE PTR [eax+0x16b8]
1005560c:	mov    BYTE PTR [edx+esi*1],bl
1005560f:	add    DWORD PTR [eax+0x14],0x1
10055613:	pop    esi
10055614:	mov    WORD PTR [eax+0x16b8],cx
1005561b:	mov    DWORD PTR [eax+0x16bc],ecx
10055621:	pop    ebx
10055622:	ret    
10055623:	int3   
10055624:	int3   
10055625:	int3   
10055626:	int3   
10055627:	int3   
10055628:	int3   
10055629:	int3   
1005562a:	int3   
1005562b:	int3   
1005562c:	int3   
1005562d:	int3   
1005562e:	int3   
1005562f:	int3   
10055630:	push   ebx
10055631:	push   esi
10055632:	push   edi
10055633:	mov    ebx,ecx
10055635:	mov    esi,edx
10055637:	call   0x100555b0
1005563c:	cmp    DWORD PTR [esp+0x10],0x0
10055641:	mov    DWORD PTR [eax+0x16b4],0x8
1005564b:	mov    edi,0x1
10055650:	je     0x1005568c
10055652:	mov    ecx,DWORD PTR [eax+0x14]
10055655:	mov    edx,DWORD PTR [eax+0x8]
10055658:	mov    BYTE PTR [ecx+edx*1],bl
1005565b:	add    DWORD PTR [eax+0x14],edi
1005565e:	mov    ecx,DWORD PTR [eax+0x14]
10055661:	mov    edx,DWORD PTR [eax+0x8]
10055664:	mov    BYTE PTR [ecx+edx*1],bh
10055667:	add    DWORD PTR [eax+0x14],edi
1005566a:	mov    edx,DWORD PTR [eax+0x8]
1005566d:	push   ebp
1005566e:	mov    ebp,DWORD PTR [eax+0x14]
10055671:	mov    cl,bl
10055673:	not    cl
10055675:	mov    BYTE PTR [edx+ebp*1],cl
10055678:	add    DWORD PTR [eax+0x14],edi
1005567b:	mov    ebp,DWORD PTR [eax+0x14]
1005567e:	mov    edx,DWORD PTR [eax+0x8]
10055681:	mov    ecx,ebx
10055683:	not    ecx
10055685:	mov    BYTE PTR [edx+ebp*1],ch
10055688:	add    DWORD PTR [eax+0x14],edi
1005568b:	pop    ebp
1005568c:	test   ebx,ebx
1005568e:	je     0x100556ae
10055690:	mov    ecx,DWORD PTR [eax+0x14]
10055693:	mov    edx,DWORD PTR [eax+0x8]
10055696:	sub    ebx,edi
10055698:	mov    DWORD PTR [esp+0x10],ebx
1005569c:	mov    bl,BYTE PTR [esi]
1005569e:	mov    BYTE PTR [ecx+edx*1],bl
100556a1:	mov    ebx,DWORD PTR [esp+0x10]
100556a5:	add    DWORD PTR [eax+0x14],edi
100556a8:	add    esi,edi
100556aa:	test   ebx,ebx
100556ac:	jne    0x10055690
100556ae:	pop    edi
100556af:	pop    esi
100556b0:	pop    ebx
100556b1:	ret    
100556b2:	int3   
100556b3:	int3   
100556b4:	int3   
100556b5:	int3   
100556b6:	int3   
100556b7:	int3   
100556b8:	int3   
100556b9:	int3   
100556ba:	int3   
100556bb:	int3   
100556bc:	int3   
100556bd:	int3   
100556be:	int3   
100556bf:	int3   
100556c0:	mov    edx,DWORD PTR [esp+0x4]
100556c4:	lea    eax,[edx+0x94]
100556ca:	mov    DWORD PTR [edx+0xb18],eax
100556d0:	lea    eax,[edx+0xa7c]
100556d6:	mov    DWORD PTR [edx+0xb30],eax
100556dc:	xor    eax,eax
100556de:	lea    ecx,[edx+0x988]
100556e4:	mov    DWORD PTR [edx+0xb20],0x1007efb0
100556ee:	mov    DWORD PTR [edx+0xb24],ecx
100556f4:	mov    DWORD PTR [edx+0xb2c],0x1007efc4
100556fe:	mov    DWORD PTR [edx+0xb38],0x1007efd8
10055708:	mov    WORD PTR [edx+0x16b8],ax
1005570f:	mov    DWORD PTR [edx+0x16bc],eax
10055715:	mov    DWORD PTR [edx+0x16b4],0x8
1005571f:	jmp    0x10054460
10055724:	int3   
10055725:	int3   
10055726:	int3   
10055727:	int3   
10055728:	int3   
10055729:	int3   
1005572a:	int3   
1005572b:	int3   
1005572c:	int3   
1005572d:	int3   
1005572e:	int3   
1005572f:	int3   
10055730:	sub    esp,0x24
10055733:	mov    eax,ds:0x1007e030
10055738:	xor    eax,esp
1005573a:	mov    DWORD PTR [esp+0x20],eax
1005573e:	push   esi
1005573f:	lea    esi,[esp+0x6]
10055743:	xor    ecx,ecx
10055745:	mov    eax,0x1
1005574a:	sub    edx,esi
1005574c:	lea    esp,[esp+0x0]
10055750:	lea    esi,[edx+eax*2]
10055753:	mov    si,WORD PTR [esp+esi*1+0x4]
10055758:	add    si,cx
1005575b:	add    si,si
1005575e:	movzx  ecx,si
10055761:	mov    WORD PTR [esp+eax*2+0x4],cx
10055766:	add    eax,0x1
10055769:	cmp    eax,0xf
1005576c:	jle    0x10055750
1005576e:	xor    esi,esi
10055770:	test   ebx,ebx
10055772:	jl     0x1005579d
10055774:	movzx  edx,WORD PTR [edi+esi*4+0x2]
10055779:	test   edx,edx
1005577b:	je     0x10055796
1005577d:	movzx  eax,WORD PTR [esp+edx*2+0x4]
10055782:	movzx  ecx,ax
10055785:	add    eax,0x1
10055788:	mov    WORD PTR [esp+edx*2+0x4],ax
1005578d:	call   0x10055510
10055792:	mov    WORD PTR [edi+esi*4],ax
10055796:	add    esi,0x1
10055799:	cmp    esi,ebx
1005579b:	jle    0x10055774
1005579d:	mov    ecx,DWORD PTR [esp+0x24]
100557a1:	pop    esi
100557a2:	xor    ecx,esp
100557a4:	call   0x10042f87
100557a9:	add    esp,0x24
100557ac:	ret    
100557ad:	int3   
100557ae:	int3   
100557af:	int3   
100557b0:	sub    esp,0x8
100557b3:	mov    eax,DWORD PTR [esp+0xc]
100557b7:	push   ebx
100557b8:	push   ebp
100557b9:	push   edi
100557ba:	mov    edi,DWORD PTR [eax]
100557bc:	mov    eax,DWORD PTR [eax+0x8]
100557bf:	mov    ecx,DWORD PTR [eax+0xc]
100557c2:	mov    ebp,DWORD PTR [eax]
100557c4:	xor    edx,edx
100557c6:	or     ebx,0xffffffff
100557c9:	xor    eax,eax
100557cb:	cmp    ecx,edx
100557cd:	mov    DWORD PTR [esp+0x10],ecx
100557d1:	mov    DWORD PTR [esp+0xc],ebx
100557d5:	mov    DWORD PTR [esi+0x1450],edx
100557db:	mov    DWORD PTR [esi+0x1454],0x23d
100557e5:	jle    0x1005581e
100557e7:	cmp    WORD PTR [edi+eax*4],dx
100557eb:	je     0x10055810
100557ed:	add    DWORD PTR [esi+0x1450],0x1
100557f4:	mov    ecx,DWORD PTR [esi+0x1450]
100557fa:	mov    DWORD PTR [esi+ecx*4+0xb5c],eax
10055801:	mov    DWORD PTR [esp+0xc],eax
10055805:	mov    BYTE PTR [eax+esi*1+0x1458],dl
1005580c:	mov    ebx,eax
1005580e:	jmp    0x10055815
10055810:	mov    WORD PTR [edi+eax*4+0x2],dx
10055815:	add    eax,0x1
10055818:	cmp    eax,DWORD PTR [esp+0x10]
1005581c:	jl     0x100557e7
1005581e:	cmp    DWORD PTR [esi+0x1450],0x2
10055825:	jge    0x10055879
10055827:	cmp    ebx,0x2
1005582a:	jge    0x10055833
1005582c:	add    ebx,0x1
1005582f:	mov    eax,ebx
10055831:	jmp    0x10055835
10055833:	xor    eax,eax
10055835:	add    DWORD PTR [esi+0x1450],0x1
1005583c:	mov    ecx,DWORD PTR [esi+0x1450]
10055842:	mov    DWORD PTR [esi+ecx*4+0xb5c],eax
10055849:	mov    WORD PTR [edi+eax*4],0x1
1005584f:	mov    BYTE PTR [esi+eax*1+0x1458],dl
10055856:	add    DWORD PTR [esi+0x16a8],0xffffffff
1005585d:	cmp    ebp,edx
1005585f:	je     0x1005586c
10055861:	movzx  eax,WORD PTR [ebp+eax*4+0x2]
10055866:	sub    DWORD PTR [esi+0x16ac],eax
1005586c:	cmp    DWORD PTR [esi+0x1450],0x2
10055873:	jl     0x10055827
10055875:	mov    DWORD PTR [esp+0xc],ebx
10055879:	mov    ecx,DWORD PTR [esp+0x18]
1005587d:	mov    DWORD PTR [ecx+0x4],ebx
10055880:	mov    eax,DWORD PTR [esi+0x1450]
10055886:	cdq    
10055887:	sub    eax,edx
10055889:	mov    ebp,eax
1005588b:	sar    ebp,1
1005588d:	cmp    ebp,0x1
10055890:	jl     0x100558a5
10055892:	push   ebp
10055893:	mov    eax,esi
10055895:	call   0x100544d0
1005589a:	sub    ebp,0x1
1005589d:	add    esp,0x4
100558a0:	cmp    ebp,0x1
100558a3:	jge    0x10055892
100558a5:	mov    ebx,DWORD PTR [esp+0x10]
100558a9:	lea    esp,[esp+0x0]
100558b0:	mov    eax,DWORD PTR [esi+0x1450]
100558b6:	mov    edx,DWORD PTR [esi+eax*4+0xb5c]
100558bd:	mov    ebp,DWORD PTR [esi+0xb60]
100558c3:	add    eax,0xffffffff
100558c6:	mov    DWORD PTR [esi+0x1450],eax
100558cc:	push   0x1
100558ce:	mov    eax,esi
100558d0:	mov    DWORD PTR [esi+0xb60],edx
100558d6:	call   0x100544d0
100558db:	mov    eax,DWORD PTR [esi+0xb60]
100558e1:	or     edx,0xffffffff
100558e4:	add    DWORD PTR [esi+0x1454],edx
100558ea:	mov    ecx,DWORD PTR [esi+0x1454]
100558f0:	mov    DWORD PTR [esi+ecx*4+0xb5c],ebp
100558f7:	add    DWORD PTR [esi+0x1454],edx
100558fd:	mov    ecx,DWORD PTR [esi+0x1454]
10055903:	mov    DWORD PTR [esi+ecx*4+0xb5c],eax
1005590a:	mov    cx,WORD PTR [edi+eax*4]
1005590e:	add    cx,WORD PTR [edi+ebp*4]
10055912:	add    esp,0x4
10055915:	mov    WORD PTR [edi+ebx*4],cx
10055919:	mov    cl,BYTE PTR [esi+eax*1+0x1458]
10055920:	mov    dl,BYTE PTR [esi+ebp*1+0x1458]
10055927:	cmp    dl,cl
10055929:	jb     0x10055930
1005592b:	movzx  ecx,dl
1005592e:	jmp    0x10055933
10055930:	movzx  ecx,cl
10055933:	add    cl,0x1
10055936:	mov    BYTE PTR [esi+ebx*1+0x1458],cl
1005593d:	movzx  ecx,bx
10055940:	mov    WORD PTR [edi+eax*4+0x2],cx
10055945:	mov    WORD PTR [edi+ebp*4+0x2],cx
1005594a:	mov    DWORD PTR [esi+0xb60],ebx
10055950:	push   0x1
10055952:	mov    eax,esi
10055954:	add    ebx,0x1
10055957:	call   0x100544d0
1005595c:	add    esp,0x4
1005595f:	cmp    DWORD PTR [esi+0x1450],0x2
10055966:	jge    0x100558b0
1005596c:	add    DWORD PTR [esi+0x1454],0xffffffff
10055973:	mov    eax,DWORD PTR [esi+0x1454]
10055979:	mov    edx,DWORD PTR [esi+0xb60]
1005597f:	mov    ecx,DWORD PTR [esp+0x18]
10055983:	mov    DWORD PTR [esi+eax*4+0xb5c],edx
1005598a:	mov    eax,esi
1005598c:	call   0x100545a0
10055991:	mov    ebx,DWORD PTR [esp+0xc]
10055995:	lea    edx,[esi+0xb3c]
1005599b:	call   0x10055730
100559a0:	pop    edi
100559a1:	pop    ebp
100559a2:	pop    ebx
100559a3:	add    esp,0x8
100559a6:	ret    
100559a7:	int3   
100559a8:	int3   
100559a9:	int3   
100559aa:	int3   
100559ab:	int3   
100559ac:	int3   
100559ad:	int3   
100559ae:	int3   
100559af:	int3   
100559b0:	push   esi
100559b1:	mov    esi,eax
100559b3:	mov    ecx,DWORD PTR [esi+0xb1c]
100559b9:	lea    eax,[esi+0x94]
100559bf:	push   esi
100559c0:	call   0x100547c0
100559c5:	mov    ecx,DWORD PTR [esi+0xb28]
100559cb:	lea    eax,[esi+0x988]
100559d1:	push   esi
100559d2:	call   0x100547c0
100559d7:	lea    eax,[esi+0xb30]
100559dd:	push   eax
100559de:	call   0x100557b0
100559e3:	add    esp,0xc
100559e6:	mov    eax,0x12
100559eb:	jmp    0x100559f0
100559ed:	lea    ecx,[ecx+0x0]
100559f0:	movzx  ecx,BYTE PTR [eax+0x10068abc]
100559f7:	cmp    WORD PTR [esi+ecx*4+0xa7e],0x0
10055a00:	jne    0x10055a6d
10055a02:	movzx  edx,BYTE PTR [eax+0x10068abb]
10055a09:	cmp    WORD PTR [esi+edx*4+0xa7e],0x0
10055a12:	jne    0x10055a4c
10055a14:	movzx  ecx,BYTE PTR [eax+0x10068aba]
10055a1b:	cmp    WORD PTR [esi+ecx*4+0xa7e],0x0
10055a24:	jne    0x10055a5b
10055a26:	movzx  edx,BYTE PTR [eax+0x10068ab9]
10055a2d:	cmp    WORD PTR [esi+edx*4+0xa7e],0x0
10055a36:	jne    0x10055a6a
10055a38:	sub    eax,0x4
10055a3b:	cmp    eax,0x3
10055a3e:	jge    0x100559f0
10055a40:	lea    ecx,[eax+eax*2+0x11]
10055a44:	add    DWORD PTR [esi+0x16a8],ecx
10055a4a:	pop    esi
10055a4b:	ret    
10055a4c:	sub    eax,0x1
10055a4f:	lea    ecx,[eax+eax*2+0x11]
10055a53:	add    DWORD PTR [esi+0x16a8],ecx
10055a59:	pop    esi
10055a5a:	ret    
10055a5b:	sub    eax,0x2
10055a5e:	lea    ecx,[eax+eax*2+0x11]
10055a62:	add    DWORD PTR [esi+0x16a8],ecx
10055a68:	pop    esi
10055a69:	ret    
10055a6a:	sub    eax,0x3
10055a6d:	lea    ecx,[eax+eax*2+0x11]
10055a71:	add    DWORD PTR [esi+0x16a8],ecx
10055a77:	pop    esi
10055a78:	ret    
10055a79:	int3   
10055a7a:	int3   
10055a7b:	int3   
10055a7c:	int3   
10055a7d:	int3   
10055a7e:	int3   
10055a7f:	int3   
10055a80:	mov    eax,DWORD PTR [esp+0x4]
10055a84:	mov    ecx,DWORD PTR [eax+0x16bc]
10055a8a:	cmp    ecx,0xd
10055a8d:	jle    0x10055af8
10055a8f:	push   ebx
10055a90:	push   esi
10055a91:	mov    esi,DWORD PTR [esp+0x18]
10055a95:	mov    edx,esi
10055a97:	shl    edx,cl
10055a99:	mov    ecx,DWORD PTR [eax+0x8]
10055a9c:	or     WORD PTR [eax+0x16b8],dx
10055aa3:	movzx  ebx,BYTE PTR [eax+0x16b8]
10055aaa:	mov    edx,DWORD PTR [eax+0x14]
10055aad:	mov    BYTE PTR [ecx+edx*1],bl
10055ab0:	movzx  ebx,BYTE PTR [eax+0x16b9]
10055ab7:	add    DWORD PTR [eax+0x14],0x1
10055abb:	mov    ecx,DWORD PTR [eax+0x14]
10055abe:	mov    edx,DWORD PTR [eax+0x8]
10055ac1:	mov    BYTE PTR [ecx+edx*1],bl
10055ac4:	mov    edx,DWORD PTR [eax+0x16bc]
10055aca:	add    DWORD PTR [eax+0x14],0x1
10055ace:	mov    cl,0x10
10055ad0:	sub    cl,dl
10055ad2:	shr    si,cl
10055ad5:	mov    ecx,DWORD PTR [esp+0x14]
10055ad9:	add    edx,0xfffffff3
10055adc:	mov    DWORD PTR [eax+0x16bc],edx
10055ae2:	mov    edx,DWORD PTR [esp+0x10]
10055ae6:	mov    WORD PTR [eax+0x16b8],si
10055aed:	pop    esi
10055aee:	pop    ebx
10055aef:	push   0x1
10055af1:	call   0x10055630
10055af6:	pop    ecx
10055af7:	ret    
10055af8:	mov    edx,DWORD PTR [esp+0x10]
10055afc:	shl    edx,cl
10055afe:	add    ecx,0x3
10055b01:	mov    DWORD PTR [eax+0x16bc],ecx
10055b07:	mov    ecx,DWORD PTR [esp+0xc]
10055b0b:	or     WORD PTR [eax+0x16b8],dx
10055b12:	mov    edx,DWORD PTR [esp+0x8]
10055b16:	push   0x1
10055b18:	call   0x10055630
10055b1d:	pop    ecx
10055b1e:	ret    
10055b1f:	int3   
10055b20:	mov    eax,DWORD PTR [esp+0x4]
10055b24:	mov    ecx,DWORD PTR [eax+0x16bc]
10055b2a:	mov    edx,0x2
10055b2f:	shl    edx,cl
10055b31:	push   ebx
10055b32:	push   esi
10055b33:	push   edi
10055b34:	or     WORD PTR [eax+0x16b8],dx
10055b3b:	cmp    ecx,0xd
10055b3e:	mov    esi,0x1
10055b43:	jle    0x10055b8f
10055b45:	movzx  ebx,BYTE PTR [eax+0x16b8]
10055b4c:	mov    edx,DWORD PTR [eax+0x14]
10055b4f:	mov    ecx,DWORD PTR [eax+0x8]
10055b52:	mov    BYTE PTR [ecx+edx*1],bl
10055b55:	add    DWORD PTR [eax+0x14],esi
10055b58:	movzx  ebx,BYTE PTR [eax+0x16b9]
10055b5f:	mov    ecx,DWORD PTR [eax+0x14]
10055b62:	mov    edx,DWORD PTR [eax+0x8]
10055b65:	mov    BYTE PTR [ecx+edx*1],bl
10055b68:	mov    edx,DWORD PTR [eax+0x16bc]
10055b6e:	add    DWORD PTR [eax+0x14],esi
10055b71:	mov    cl,0x10
10055b73:	sub    cl,dl
10055b75:	mov    edi,0x2
10055b7a:	shr    di,cl
10055b7d:	add    edx,0xfffffff3
10055b80:	mov    DWORD PTR [eax+0x16bc],edx
10055b86:	mov    WORD PTR [eax+0x16b8],di
10055b8d:	jmp    0x10055b98
10055b8f:	add    ecx,0x3
10055b92:	mov    DWORD PTR [eax+0x16bc],ecx
10055b98:	mov    ecx,DWORD PTR [eax+0x16bc]
10055b9e:	xor    edx,edx
10055ba0:	shl    edx,cl
10055ba2:	or     WORD PTR [eax+0x16b8],dx
10055ba9:	cmp    ecx,0x9
10055bac:	jle    0x10055bf5
10055bae:	movzx  ebx,BYTE PTR [eax+0x16b8]
10055bb5:	mov    edx,DWORD PTR [eax+0x14]
10055bb8:	mov    ecx,DWORD PTR [eax+0x8]
10055bbb:	mov    BYTE PTR [ecx+edx*1],bl
10055bbe:	add    DWORD PTR [eax+0x14],esi
10055bc1:	movzx  ebx,BYTE PTR [eax+0x16b9]
10055bc8:	mov    ecx,DWORD PTR [eax+0x14]
10055bcb:	mov    edx,DWORD PTR [eax+0x8]
10055bce:	mov    BYTE PTR [ecx+edx*1],bl
10055bd1:	mov    edx,DWORD PTR [eax+0x16bc]
10055bd7:	add    DWORD PTR [eax+0x14],esi
10055bda:	mov    cl,0x10
10055bdc:	sub    cl,dl
10055bde:	xor    edi,edi
10055be0:	shr    di,cl
10055be3:	add    edx,0xfffffff7
10055be6:	mov    DWORD PTR [eax+0x16bc],edx
10055bec:	mov    WORD PTR [eax+0x16b8],di
10055bf3:	jmp    0x10055bfe
10055bf5:	add    ecx,0x7
10055bf8:	mov    DWORD PTR [eax+0x16bc],ecx
10055bfe:	call   0x10055530
10055c03:	mov    ecx,DWORD PTR [eax+0x16bc]
10055c09:	mov    edx,DWORD PTR [eax+0x16b4]
10055c0f:	sub    edx,ecx
10055c11:	add    edx,0xb
10055c14:	cmp    edx,0x9
10055c17:	jge    0x10055cff
10055c1d:	mov    edx,0x2
10055c22:	shl    edx,cl
10055c24:	or     WORD PTR [eax+0x16b8],dx
10055c2b:	cmp    ecx,0xd
10055c2e:	jle    0x10055c7a
10055c30:	movzx  ebx,BYTE PTR [eax+0x16b8]
10055c37:	mov    edx,DWORD PTR [eax+0x14]
10055c3a:	mov    ecx,DWORD PTR [eax+0x8]
10055c3d:	mov    BYTE PTR [ecx+edx*1],bl
10055c40:	add    DWORD PTR [eax+0x14],esi
10055c43:	movzx  ebx,BYTE PTR [eax+0x16b9]
10055c4a:	mov    ecx,DWORD PTR [eax+0x14]
10055c4d:	mov    edx,DWORD PTR [eax+0x8]
10055c50:	mov    BYTE PTR [ecx+edx*1],bl
10055c53:	mov    edx,DWORD PTR [eax+0x16bc]
10055c59:	add    DWORD PTR [eax+0x14],esi
10055c5c:	mov    cl,0x10
10055c5e:	sub    cl,dl
10055c60:	mov    edi,0x2
10055c65:	shr    di,cl
10055c68:	add    edx,0xfffffff3
10055c6b:	mov    DWORD PTR [eax+0x16bc],edx
10055c71:	mov    WORD PTR [eax+0x16b8],di
10055c78:	jmp    0x10055c83
10055c7a:	add    ecx,0x3
10055c7d:	mov    DWORD PTR [eax+0x16bc],ecx
10055c83:	mov    ecx,DWORD PTR [eax+0x16bc]
10055c89:	xor    edx,edx
10055c8b:	shl    edx,cl
10055c8d:	or     WORD PTR [eax+0x16b8],dx
10055c94:	cmp    ecx,0x9
10055c97:	jle    0x10055cf1
10055c99:	movzx  ebx,BYTE PTR [eax+0x16b8]
10055ca0:	mov    edx,DWORD PTR [eax+0x14]
10055ca3:	mov    ecx,DWORD PTR [eax+0x8]
10055ca6:	mov    BYTE PTR [ecx+edx*1],bl
10055ca9:	add    DWORD PTR [eax+0x14],esi
10055cac:	movzx  ebx,BYTE PTR [eax+0x16b9]
10055cb3:	mov    ecx,DWORD PTR [eax+0x14]
10055cb6:	mov    edx,DWORD PTR [eax+0x8]
10055cb9:	mov    BYTE PTR [ecx+edx*1],bl
10055cbc:	mov    edx,DWORD PTR [eax+0x16bc]
10055cc2:	add    DWORD PTR [eax+0x14],esi
10055cc5:	mov    cl,0x10
10055cc7:	sub    cl,dl
10055cc9:	xor    esi,esi
10055ccb:	shr    si,cl
10055cce:	add    edx,0xfffffff7
10055cd1:	mov    DWORD PTR [eax+0x16bc],edx
10055cd7:	mov    WORD PTR [eax+0x16b8],si
10055cde:	call   0x10055530
10055ce3:	pop    edi
10055ce4:	pop    esi
10055ce5:	mov    DWORD PTR [eax+0x16b4],0x7
10055cef:	pop    ebx
10055cf0:	ret    
10055cf1:	add    ecx,0x7
10055cf4:	mov    DWORD PTR [eax+0x16bc],ecx
10055cfa:	call   0x10055530
10055cff:	pop    edi
10055d00:	pop    esi
10055d01:	mov    DWORD PTR [eax+0x16b4],0x7
10055d0b:	pop    ebx
10055d0c:	ret    
10055d0d:	int3   
10055d0e:	int3   
10055d0f:	int3   
10055d10:	push   ecx
10055d11:	push   ebx
10055d12:	mov    ebx,DWORD PTR [esp+0x14]
10055d16:	push   esi
10055d17:	mov    esi,DWORD PTR [esp+0x10]
10055d1b:	cmp    DWORD PTR [esi+0x84],0x0
10055d22:	push   edi
10055d23:	mov    DWORD PTR [esp+0xc],0x0
10055d2b:	jle    0x10055d84
10055d2d:	test   ebx,ebx
10055d2f:	jbe    0x10055d40
10055d31:	mov    eax,DWORD PTR [esi]
10055d33:	cmp    DWORD PTR [eax+0x2c],0x2
10055d37:	jne    0x10055d40
10055d39:	mov    edx,esi
10055d3b:	call   0x10055440
10055d40:	lea    ecx,[esi+0xb18]
10055d46:	push   ecx
10055d47:	call   0x100557b0
10055d4c:	lea    edx,[esi+0xb24]
10055d52:	push   edx
10055d53:	call   0x100557b0
10055d58:	add    esp,0x8
10055d5b:	mov    eax,esi
10055d5d:	call   0x100559b0
10055d62:	mov    edx,DWORD PTR [esi+0x16a8]
10055d68:	mov    ecx,DWORD PTR [esi+0x16ac]
10055d6e:	add    edx,0xa
10055d71:	add    ecx,0xa
10055d74:	shr    edx,0x3
10055d77:	shr    ecx,0x3
10055d7a:	cmp    ecx,edx
10055d7c:	mov    DWORD PTR [esp+0xc],eax
10055d80:	ja     0x10055d89
10055d82:	jmp    0x10055d87
10055d84:	lea    ecx,[ebx+0x5]
10055d87:	mov    edx,ecx
10055d89:	lea    eax,[ebx+0x4]
10055d8c:	cmp    eax,edx
10055d8e:	ja     0x10055dad
10055d90:	mov    eax,DWORD PTR [esp+0x18]
10055d94:	test   eax,eax
10055d96:	je     0x10055dad
10055d98:	mov    edi,DWORD PTR [esp+0x20]
10055d9c:	push   edi
10055d9d:	push   ebx
10055d9e:	push   eax
10055d9f:	push   esi
10055da0:	call   0x10055a80
10055da5:	add    esp,0x10
10055da8:	jmp    0x10055f02
10055dad:	cmp    DWORD PTR [esi+0x88],0x4
10055db4:	je     0x10055e78
10055dba:	cmp    ecx,edx
10055dbc:	je     0x10055e78
10055dc2:	mov    ecx,DWORD PTR [esi+0x16bc]
10055dc8:	cmp    ecx,0xd
10055dcb:	mov    edi,DWORD PTR [esp+0x20]
10055dcf:	lea    edx,[edi+0x4]
10055dd2:	jle    0x10055e26
10055dd4:	mov    eax,edx
10055dd6:	shl    eax,cl
10055dd8:	mov    ecx,DWORD PTR [esi+0x8]
10055ddb:	or     WORD PTR [esi+0x16b8],ax
10055de2:	movzx  ebx,BYTE PTR [esi+0x16b8]
10055de9:	mov    eax,DWORD PTR [esi+0x14]
10055dec:	mov    BYTE PTR [ecx+eax*1],bl
10055def:	add    DWORD PTR [esi+0x14],0x1
10055df3:	movzx  ebx,BYTE PTR [esi+0x16b9]
10055dfa:	mov    ecx,DWORD PTR [esi+0x14]
10055dfd:	mov    eax,DWORD PTR [esi+0x8]
10055e00:	mov    BYTE PTR [ecx+eax*1],bl
10055e03:	mov    ebx,DWORD PTR [esi+0x16bc]
10055e09:	add    DWORD PTR [esi+0x14],0x1
10055e0d:	mov    cl,0x10
10055e0f:	sub    cl,bl
10055e11:	shr    dx,cl
10055e14:	add    ebx,0xfffffff3
10055e17:	mov    DWORD PTR [esi+0x16bc],ebx
10055e1d:	mov    WORD PTR [esi+0x16b8],dx
10055e24:	jmp    0x10055e38
10055e26:	shl    edx,cl
10055e28:	or     WORD PTR [esi+0x16b8],dx
10055e2f:	add    ecx,0x3
10055e32:	mov    DWORD PTR [esi+0x16bc],ecx
10055e38:	mov    eax,DWORD PTR [esp+0xc]
10055e3c:	mov    ecx,DWORD PTR [esi+0xb28]
10055e42:	mov    edx,DWORD PTR [esi+0xb1c]
10055e48:	add    eax,0x1
10055e4b:	push   eax
10055e4c:	add    ecx,0x1
10055e4f:	push   ecx
10055e50:	add    edx,0x1
10055e53:	push   edx
10055e54:	mov    eax,esi
10055e56:	call   0x10054dd0
10055e5b:	lea    eax,[esi+0x988]
10055e61:	push   eax
10055e62:	lea    ecx,[esi+0x94]
10055e68:	push   ecx
10055e69:	mov    eax,esi
10055e6b:	call   0x10055030
10055e70:	add    esp,0x14
10055e73:	jmp    0x10055f02
10055e78:	mov    ecx,DWORD PTR [esi+0x16bc]
10055e7e:	cmp    ecx,0xd
10055e81:	mov    edi,DWORD PTR [esp+0x20]
10055e85:	lea    eax,[edi+0x2]
10055e88:	jle    0x10055edc
10055e8a:	mov    edx,eax
10055e8c:	shl    edx,cl
10055e8e:	mov    ecx,DWORD PTR [esi+0x8]
10055e91:	or     WORD PTR [esi+0x16b8],dx
10055e98:	movzx  ebx,BYTE PTR [esi+0x16b8]
10055e9f:	mov    edx,DWORD PTR [esi+0x14]
10055ea2:	mov    BYTE PTR [ecx+edx*1],bl
10055ea5:	add    DWORD PTR [esi+0x14],0x1
10055ea9:	movzx  ebx,BYTE PTR [esi+0x16b9]
10055eb0:	mov    ecx,DWORD PTR [esi+0x14]
10055eb3:	mov    edx,DWORD PTR [esi+0x8]
10055eb6:	mov    BYTE PTR [ecx+edx*1],bl
10055eb9:	mov    edx,DWORD PTR [esi+0x16bc]
10055ebf:	add    DWORD PTR [esi+0x14],0x1
10055ec3:	mov    cl,0x10
10055ec5:	sub    cl,dl
10055ec7:	shr    ax,cl
10055eca:	add    edx,0xfffffff3
10055ecd:	mov    DWORD PTR [esi+0x16bc],edx
10055ed3:	mov    WORD PTR [esi+0x16b8],ax
10055eda:	jmp    0x10055eee
10055edc:	shl    eax,cl
10055ede:	or     WORD PTR [esi+0x16b8],ax
10055ee5:	add    ecx,0x3
10055ee8:	mov    DWORD PTR [esi+0x16bc],ecx
10055eee:	push   0x10069018
10055ef3:	push   0x10068b98
10055ef8:	mov    eax,esi
10055efa:	call   0x10055030
10055eff:	add    esp,0x8
10055f02:	mov    edx,esi
10055f04:	call   0x10054460
10055f09:	test   edi,edi
10055f0b:	pop    edi
10055f0c:	je     0x10055f1a
10055f0e:	mov    eax,esi
10055f10:	pop    esi
10055f11:	pop    ebx
10055f12:	add    esp,0x4
10055f15:	jmp    0x100555b0
10055f1a:	pop    esi
10055f1b:	pop    ebx
10055f1c:	pop    ecx
10055f1d:	ret    
10055f1e:	int3   
10055f1f:	int3   
10055f20:	push   esi
10055f21:	mov    esi,edx
10055f23:	test   esi,esi
10055f25:	not    eax
10055f27:	je     0x10055f52
10055f29:	lea    esp,[esp+0x0]
10055f30:	test   cl,0x3
10055f33:	je     0x10055f52
10055f35:	movzx  edx,BYTE PTR [ecx]
10055f38:	xor    edx,eax
10055f3a:	and    edx,0xff
10055f40:	shr    eax,0x8
10055f43:	xor    eax,DWORD PTR [edx*4+0x10069480]
10055f4a:	add    ecx,0x1
10055f4d:	sub    esi,0x1
10055f50:	jne    0x10055f30
10055f52:	cmp    esi,0x20
10055f55:	push   ebx
10055f56:	push   edi
10055f57:	jb     0x1005613c
10055f5d:	mov    edi,esi
10055f5f:	shr    edi,0x5
10055f62:	xor    eax,DWORD PTR [ecx]
10055f64:	add    ecx,0x4
10055f67:	mov    edx,eax
10055f69:	shr    edx,0x10
10055f6c:	movzx  ebx,ah
10055f6f:	and    edx,0xff
10055f75:	mov    edx,DWORD PTR [edx*4+0x10069880]
10055f7c:	xor    edx,DWORD PTR [ebx*4+0x10069c80]
10055f83:	mov    ebx,eax
10055f85:	and    eax,0xff
10055f8a:	shr    ebx,0x18
10055f8d:	xor    edx,DWORD PTR [ebx*4+0x10069480]
10055f94:	add    ecx,0x4
10055f97:	xor    edx,DWORD PTR [eax*4+0x1006a080]
10055f9e:	add    ecx,0x4
10055fa1:	xor    edx,DWORD PTR [ecx-0x8]
10055fa4:	add    ecx,0x4
10055fa7:	mov    eax,edx
10055fa9:	shr    eax,0x10
10055fac:	and    eax,0xff
10055fb1:	mov    eax,DWORD PTR [eax*4+0x10069880]
10055fb8:	movzx  ebx,dh
10055fbb:	xor    eax,DWORD PTR [ebx*4+0x10069c80]
10055fc2:	mov    ebx,edx
10055fc4:	and    edx,0xff
10055fca:	shr    ebx,0x18
10055fcd:	xor    eax,DWORD PTR [ebx*4+0x10069480]
10055fd4:	add    ecx,0x4
10055fd7:	xor    eax,DWORD PTR [edx*4+0x1006a080]
10055fde:	add    ecx,0x4
10055fe1:	xor    eax,DWORD PTR [ecx-0x10]
10055fe4:	mov    edx,eax
10055fe6:	shr    edx,0x10
10055fe9:	movzx  ebx,ah
10055fec:	and    edx,0xff
10055ff2:	mov    edx,DWORD PTR [edx*4+0x10069880]
10055ff9:	xor    edx,DWORD PTR [ebx*4+0x10069c80]
10056000:	mov    ebx,eax
10056002:	and    eax,0xff
10056007:	shr    ebx,0x18
1005600a:	xor    edx,DWORD PTR [ebx*4+0x10069480]
10056011:	xor    edx,DWORD PTR [eax*4+0x1006a080]
10056018:	xor    edx,DWORD PTR [ecx-0xc]
1005601b:	mov    eax,edx
1005601d:	shr    eax,0x10
10056020:	and    eax,0xff
10056025:	mov    eax,DWORD PTR [eax*4+0x10069880]
1005602c:	movzx  ebx,dh
1005602f:	xor    eax,DWORD PTR [ebx*4+0x10069c80]
10056036:	mov    ebx,edx
10056038:	and    edx,0xff
1005603e:	shr    ebx,0x18
10056041:	xor    eax,DWORD PTR [ebx*4+0x10069480]
10056048:	xor    eax,DWORD PTR [edx*4+0x1006a080]
1005604f:	xor    eax,DWORD PTR [ecx-0x8]
10056052:	mov    edx,eax
10056054:	shr    edx,0x10
10056057:	movzx  ebx,ah
1005605a:	and    edx,0xff
10056060:	mov    edx,DWORD PTR [edx*4+0x10069880]
10056067:	xor    edx,DWORD PTR [ebx*4+0x10069c80]
1005606e:	mov    ebx,eax
10056070:	and    eax,0xff
10056075:	shr    ebx,0x18
10056078:	xor    edx,DWORD PTR [ebx*4+0x10069480]
1005607f:	xor    edx,DWORD PTR [eax*4+0x1006a080]
10056086:	xor    edx,DWORD PTR [ecx-0x4]
10056089:	mov    eax,edx
1005608b:	shr    eax,0x10
1005608e:	and    eax,0xff
10056093:	mov    eax,DWORD PTR [eax*4+0x10069880]
1005609a:	movzx  ebx,dh
1005609d:	xor    eax,DWORD PTR [ebx*4+0x10069c80]
100560a4:	mov    ebx,edx
100560a6:	shr    ebx,0x18
100560a9:	xor    eax,DWORD PTR [ebx*4+0x10069480]
100560b0:	and    edx,0xff
100560b6:	xor    eax,DWORD PTR [edx*4+0x1006a080]
100560bd:	xor    eax,DWORD PTR [ecx]
100560bf:	add    ecx,0x4
100560c2:	mov    edx,eax
100560c4:	shr    edx,0x10
100560c7:	movzx  ebx,ah
100560ca:	and    edx,0xff
100560d0:	mov    edx,DWORD PTR [edx*4+0x10069880]
100560d7:	xor    edx,DWORD PTR [ebx*4+0x10069c80]
100560de:	mov    ebx,eax
100560e0:	and    eax,0xff
100560e5:	shr    ebx,0x18
100560e8:	xor    edx,DWORD PTR [ebx*4+0x10069480]
100560ef:	add    ecx,0x4
100560f2:	xor    edx,DWORD PTR [eax*4+0x1006a080]
100560f9:	sub    esi,0x20
100560fc:	xor    edx,DWORD PTR [ecx-0x4]
100560ff:	mov    eax,edx
10056101:	shr    eax,0x10
10056104:	and    eax,0xff
10056109:	mov    eax,DWORD PTR [eax*4+0x10069880]
10056110:	movzx  ebx,dh
10056113:	xor    eax,DWORD PTR [ebx*4+0x10069c80]
1005611a:	mov    ebx,edx
1005611c:	shr    ebx,0x18
1005611f:	xor    eax,DWORD PTR [ebx*4+0x10069480]
10056126:	and    edx,0xff
1005612c:	xor    eax,DWORD PTR [edx*4+0x1006a080]
10056133:	sub    edi,0x1
10056136:	jne    0x10055f62
1005613c:	cmp    esi,0x4
1005613f:	jb     0x10056189
10056141:	mov    edx,esi
10056143:	shr    edx,0x2
10056146:	xor    eax,DWORD PTR [ecx]
10056148:	add    ecx,0x4
1005614b:	mov    edi,eax
1005614d:	shr    edi,0x10
10056150:	and    edi,0xff
10056156:	mov    edi,DWORD PTR [edi*4+0x10069880]
1005615d:	movzx  ebx,ah
10056160:	xor    edi,DWORD PTR [ebx*4+0x10069c80]
10056167:	mov    ebx,eax
10056169:	shr    ebx,0x18
1005616c:	xor    edi,DWORD PTR [ebx*4+0x10069480]
10056173:	and    eax,0xff
10056178:	xor    edi,DWORD PTR [eax*4+0x1006a080]
1005617f:	sub    esi,0x4
10056182:	sub    edx,0x1
10056185:	mov    eax,edi
10056187:	jne    0x10056146
10056189:	test   esi,esi
1005618b:	pop    edi
1005618c:	pop    ebx
1005618d:	je     0x100561ad
1005618f:	nop
10056190:	movzx  edx,BYTE PTR [ecx]
10056193:	xor    edx,eax
10056195:	and    edx,0xff
1005619b:	shr    eax,0x8
1005619e:	xor    eax,DWORD PTR [edx*4+0x10069480]
100561a5:	add    ecx,0x1
100561a8:	sub    esi,0x1
100561ab:	jne    0x10056190
100561ad:	not    eax
100561af:	pop    esi
100561b0:	ret    
100561b1:	int3   
100561b2:	int3   
100561b3:	int3   
100561b4:	int3   
100561b5:	int3   
100561b6:	int3   
100561b7:	int3   
100561b8:	int3   
100561b9:	int3   
100561ba:	int3   
100561bb:	int3   
100561bc:	int3   
100561bd:	int3   
100561be:	int3   
100561bf:	int3   
100561c0:	mov    ecx,DWORD PTR [esp+0x8]
100561c4:	test   ecx,ecx
100561c6:	jne    0x100561cb
100561c8:	xor    eax,eax
100561ca:	ret    
100561cb:	mov    edx,DWORD PTR [esp+0xc]
100561cf:	mov    eax,DWORD PTR [esp+0x4]
100561d3:	jmp    0x10055f20
100561d8:	int3   
100561d9:	int3   
100561da:	int3   
100561db:	int3   
100561dc:	int3   
100561dd:	int3   
100561de:	int3   
100561df:	int3   
100561e0:	mov    eax,DWORD PTR [esp+0x8]
100561e4:	imul   eax,DWORD PTR [esp+0xc]
100561e9:	push   eax
100561ea:	call   0x1004507d
100561ef:	add    esp,0x4
100561f2:	ret    
100561f3:	int3   
100561f4:	int3   
100561f5:	int3   
100561f6:	int3   
100561f7:	int3   
100561f8:	int3   
100561f9:	int3   
100561fa:	int3   
100561fb:	int3   
100561fc:	int3   
100561fd:	int3   
100561fe:	int3   
100561ff:	int3   
10056200:	mov    eax,DWORD PTR [esp+0x8]
10056204:	push   eax
10056205:	call   0x100435f8
1005620a:	pop    ecx
1005620b:	ret    
1005620c:	int3   
1005620d:	int3   
1005620e:	int3   
1005620f:	int3   
10056210:	sub    esp,0x3c
10056213:	push   ebx
10056214:	push   ebp
10056215:	push   esi
10056216:	push   edi
10056217:	mov    ecx,DWORD PTR [esp+0x50]
1005621b:	mov    eax,DWORD PTR [ecx+0x1c]
1005621e:	mov    edx,DWORD PTR [ecx+0x4]
10056221:	mov    ebx,DWORD PTR [eax+0x38]
10056224:	mov    ebp,DWORD PTR [ecx]
10056226:	sub    ebp,0x1
10056229:	lea    edx,[edx+ebp*1-0x5]
1005622d:	mov    DWORD PTR [esp+0x14],edx
10056231:	mov    esi,DWORD PTR [ecx+0xc]
10056234:	mov    ecx,DWORD PTR [ecx+0x10]
10056237:	mov    edx,ecx
10056239:	sub    edx,DWORD PTR [esp+0x54]
1005623d:	sub    esi,0x1
10056240:	add    edx,esi
10056242:	lea    ecx,[ecx+esi*1-0x101]
10056249:	mov    DWORD PTR [esp+0x38],edx
1005624d:	mov    edx,DWORD PTR [eax+0x28]
10056250:	mov    DWORD PTR [esp+0x2c],ecx
10056254:	mov    ecx,DWORD PTR [eax+0x2c]
10056257:	mov    DWORD PTR [esp+0x28],edx
1005625b:	mov    edx,DWORD PTR [eax+0x30]
1005625e:	mov    DWORD PTR [esp+0x3c],ecx
10056262:	mov    ecx,DWORD PTR [eax+0x34]
10056265:	mov    DWORD PTR [esp+0x44],edx
10056269:	mov    edx,DWORD PTR [eax+0x4c]
1005626c:	mov    DWORD PTR [esp+0x40],ecx
10056270:	mov    ecx,DWORD PTR [eax+0x50]
10056273:	mov    DWORD PTR [esp+0x20],edx
10056277:	mov    DWORD PTR [esp+0x24],ecx
1005627b:	mov    ecx,DWORD PTR [eax+0x54]
1005627e:	mov    edx,0x1
10056283:	shl    edx,cl
10056285:	mov    ecx,DWORD PTR [eax+0x58]
10056288:	mov    DWORD PTR [esp+0x18],eax
1005628c:	mov    edi,DWORD PTR [eax+0x3c]
1005628f:	mov    DWORD PTR [esp+0x54],0x1
10056297:	mov    eax,DWORD PTR [esp+0x54]
1005629b:	shl    eax,cl
1005629d:	sub    edx,0x1
100562a0:	mov    DWORD PTR [esp+0x10],ebp
100562a4:	mov    DWORD PTR [esp+0x48],edx
100562a8:	sub    eax,0x1
100562ab:	mov    DWORD PTR [esp+0x30],eax
100562af:	nop
100562b0:	cmp    edi,0xf
100562b3:	jae    0x100562d9
100562b5:	movzx  eax,BYTE PTR [ebp+0x1]
100562b9:	add    ebp,0x1
100562bc:	mov    ecx,edi
100562be:	shl    eax,cl
100562c0:	add    ebp,0x1
100562c3:	add    edi,0x8
100562c6:	mov    ecx,edi
100562c8:	add    ebx,eax
100562ca:	movzx  eax,BYTE PTR [ebp+0x0]
100562ce:	shl    eax,cl
100562d0:	mov    DWORD PTR [esp+0x10],ebp
100562d4:	add    ebx,eax
100562d6:	add    edi,0x8
100562d9:	mov    ecx,DWORD PTR [esp+0x20]
100562dd:	and    edx,ebx
100562df:	mov    eax,DWORD PTR [ecx+edx*4]
100562e2:	mov    edx,eax
100562e4:	shr    edx,0x8
100562e7:	movzx  ecx,dl
100562ea:	movzx  edx,al
100562ed:	shr    ebx,cl
100562ef:	sub    edi,ecx
100562f1:	test   edx,edx
100562f3:	je     0x10056338
100562f5:	test   dl,0x10
100562f8:	jne    0x10056345
100562fa:	test   dl,0x40
100562fd:	jne    0x1005664a
10056303:	mov    ecx,0x1
10056308:	mov    DWORD PTR [esp+0x54],ecx
1005630c:	mov    ecx,edx
1005630e:	mov    edx,DWORD PTR [esp+0x54]
10056312:	shl    edx,cl
10056314:	shr    eax,0x10
10056317:	sub    edx,0x1
1005631a:	and    edx,ebx
1005631c:	add    edx,eax
1005631e:	mov    eax,DWORD PTR [esp+0x20]
10056322:	mov    eax,DWORD PTR [eax+edx*4]
10056325:	mov    ecx,eax
10056327:	shr    ecx,0x8
1005632a:	movzx  ecx,cl
1005632d:	movzx  edx,al
10056330:	shr    ebx,cl
10056332:	sub    edi,ecx
10056334:	test   edx,edx
10056336:	jne    0x100562f5
10056338:	add    esi,0x1
1005633b:	shr    eax,0x10
1005633e:	mov    BYTE PTR [esi],al
10056340:	jmp    0x100565a5
10056345:	shr    eax,0x10
10056348:	and    edx,0xf
1005634b:	mov    DWORD PTR [esp+0x54],eax
1005634f:	je     0x1005637f
10056351:	cmp    edi,edx
10056353:	jae    0x10056369
10056355:	movzx  eax,BYTE PTR [ebp+0x1]
10056359:	add    ebp,0x1
1005635c:	mov    ecx,edi
1005635e:	shl    eax,cl
10056360:	mov    DWORD PTR [esp+0x10],ebp
10056364:	add    ebx,eax
10056366:	add    edi,0x8
10056369:	mov    ecx,edx
1005636b:	mov    eax,0x1
10056370:	shl    eax,cl
10056372:	sub    eax,0x1
10056375:	and    eax,ebx
10056377:	add    DWORD PTR [esp+0x54],eax
1005637b:	shr    ebx,cl
1005637d:	sub    edi,edx
1005637f:	cmp    edi,0xf
10056382:	jae    0x100563a8
10056384:	movzx  edx,BYTE PTR [ebp+0x1]
10056388:	add    ebp,0x1
1005638b:	movzx  eax,BYTE PTR [ebp+0x1]
1005638f:	mov    ecx,edi
10056391:	add    ebp,0x1
10056394:	shl    edx,cl
10056396:	add    edi,0x8
10056399:	mov    ecx,edi
1005639b:	shl    eax,cl
1005639d:	add    ebx,edx
1005639f:	mov    DWORD PTR [esp+0x10],ebp
100563a3:	add    ebx,eax
100563a5:	add    edi,0x8
100563a8:	mov    ecx,DWORD PTR [esp+0x30]
100563ac:	mov    edx,DWORD PTR [esp+0x24]
100563b0:	and    ecx,ebx
100563b2:	mov    edx,DWORD PTR [edx+ecx*4]
100563b5:	mov    eax,edx
100563b7:	shr    eax,0x8
100563ba:	movzx  ecx,al
100563bd:	movzx  eax,dl
100563c0:	shr    ebx,cl
100563c2:	sub    edi,ecx
100563c4:	test   al,0x10
100563c6:	mov    DWORD PTR [esp+0x1c],edx
100563ca:	jne    0x1005640b
100563cc:	lea    esp,[esp+0x0]
100563d0:	test   al,0x40
100563d2:	jne    0x1005663d
100563d8:	mov    ecx,eax
100563da:	movzx  eax,WORD PTR [esp+0x1e]
100563df:	mov    edx,0x1
100563e4:	shl    edx,cl
100563e6:	mov    ecx,DWORD PTR [esp+0x24]
100563ea:	sub    edx,0x1
100563ed:	and    edx,ebx
100563ef:	add    edx,eax
100563f1:	mov    edx,DWORD PTR [ecx+edx*4]
100563f4:	mov    eax,edx
100563f6:	shr    eax,0x8
100563f9:	movzx  ecx,al
100563fc:	movzx  eax,dl
100563ff:	shr    ebx,cl
10056401:	sub    edi,ecx
10056403:	test   al,0x10
10056405:	mov    DWORD PTR [esp+0x1c],edx
10056409:	je     0x100563d0
1005640b:	shr    edx,0x10
1005640e:	and    eax,0xf
10056411:	cmp    edi,eax
10056413:	mov    DWORD PTR [esp+0x1c],edx
10056417:	jae    0x10056445
10056419:	movzx  edx,BYTE PTR [ebp+0x1]
1005641d:	add    ebp,0x1
10056420:	mov    ecx,edi
10056422:	shl    edx,cl
10056424:	add    edi,0x8
10056427:	mov    DWORD PTR [esp+0x10],ebp
1005642b:	add    ebx,edx
1005642d:	cmp    edi,eax
1005642f:	jae    0x10056445
10056431:	movzx  edx,BYTE PTR [ebp+0x1]
10056435:	add    ebp,0x1
10056438:	mov    ecx,edi
1005643a:	shl    edx,cl
1005643c:	mov    DWORD PTR [esp+0x10],ebp
10056440:	add    ebx,edx
10056442:	add    edi,0x8
10056445:	mov    ecx,0x1
1005644a:	mov    edx,ecx
1005644c:	mov    ecx,eax
1005644e:	shl    edx,cl
10056450:	sub    edi,eax
10056452:	sub    edx,0x1
10056455:	and    edx,ebx
10056457:	mov    ecx,edx
10056459:	mov    edx,DWORD PTR [esp+0x1c]
1005645d:	add    edx,ecx
1005645f:	mov    ecx,eax
10056461:	mov    eax,esi
10056463:	sub    eax,DWORD PTR [esp+0x38]
10056467:	shr    ebx,cl
10056469:	cmp    edx,eax
1005646b:	mov    DWORD PTR [esp+0x1c],edx
1005646f:	jbe    0x100565c4
10056475:	mov    ebp,edx
10056477:	sub    ebp,eax
10056479:	cmp    ebp,DWORD PTR [esp+0x3c]
1005647d:	ja     0x10056622
10056483:	mov    ecx,DWORD PTR [esp+0x40]
10056487:	mov    eax,DWORD PTR [esp+0x44]
1005648b:	add    ecx,0xffffffff
1005648e:	test   eax,eax
10056490:	mov    DWORD PTR [esp+0x34],ecx
10056494:	jne    0x100564c2
10056496:	mov    eax,DWORD PTR [esp+0x28]
1005649a:	sub    eax,ebp
1005649c:	add    ecx,eax
1005649e:	cmp    ebp,DWORD PTR [esp+0x54]
100564a2:	jae    0x1005653a
100564a8:	sub    DWORD PTR [esp+0x54],ebp
100564ac:	lea    esp,[esp+0x0]
100564b0:	mov    al,BYTE PTR [ecx+0x1]
100564b3:	add    ecx,0x1
100564b6:	add    esi,0x1
100564b9:	sub    ebp,0x1
100564bc:	mov    BYTE PTR [esi],al
100564be:	jne    0x100564b0
100564c0:	jmp    0x10056536
100564c2:	cmp    eax,ebp
100564c4:	jae    0x10056518
100564c6:	mov    edx,eax
100564c8:	sub    edx,ebp
100564ca:	add    edx,DWORD PTR [esp+0x28]
100564ce:	sub    ebp,eax
100564d0:	add    ecx,edx
100564d2:	cmp    ebp,DWORD PTR [esp+0x54]
100564d6:	jae    0x1005653a
100564d8:	sub    DWORD PTR [esp+0x54],ebp
100564dc:	lea    esp,[esp+0x0]
100564e0:	mov    dl,BYTE PTR [ecx+0x1]
100564e3:	add    ecx,0x1
100564e6:	add    esi,0x1
100564e9:	sub    ebp,0x1
100564ec:	mov    BYTE PTR [esi],dl
100564ee:	jne    0x100564e0
100564f0:	cmp    eax,DWORD PTR [esp+0x54]
100564f4:	mov    ecx,DWORD PTR [esp+0x34]
100564f8:	jae    0x1005653a
100564fa:	sub    DWORD PTR [esp+0x54],eax
100564fe:	mov    ebp,eax
10056500:	mov    al,BYTE PTR [ecx+0x1]
10056503:	add    ecx,0x1
10056506:	add    esi,0x1
10056509:	sub    ebp,0x1
1005650c:	mov    BYTE PTR [esi],al
1005650e:	jne    0x10056500
10056510:	mov    ecx,esi
10056512:	sub    ecx,DWORD PTR [esp+0x1c]
10056516:	jmp    0x1005653a
10056518:	sub    eax,ebp
1005651a:	add    ecx,eax
1005651c:	cmp    ebp,DWORD PTR [esp+0x54]
10056520:	jae    0x1005653a
10056522:	sub    DWORD PTR [esp+0x54],ebp
10056526:	mov    al,BYTE PTR [ecx+0x1]
10056529:	add    ecx,0x1
1005652c:	add    esi,0x1
1005652f:	sub    ebp,0x1
10056532:	mov    BYTE PTR [esi],al
10056534:	jne    0x10056526
10056536:	mov    ecx,esi
10056538:	sub    ecx,edx
1005653a:	mov    eax,DWORD PTR [esp+0x54]
1005653e:	cmp    eax,0x2
10056541:	jbe    0x10056581
10056543:	lea    edx,[eax-0x3]
10056546:	mov    eax,0xaaaaaaab
1005654b:	mul    edx
1005654d:	mov    ebp,edx
1005654f:	shr    ebp,1
10056551:	add    ebp,0x1
10056554:	movzx  eax,BYTE PTR [ecx+0x1]
10056558:	sub    DWORD PTR [esp+0x54],0x3
1005655d:	add    ecx,0x1
10056560:	add    esi,0x1
10056563:	mov    BYTE PTR [esi],al
10056565:	mov    dl,BYTE PTR [ecx+0x1]
10056568:	add    ecx,0x1
1005656b:	add    esi,0x1
1005656e:	mov    BYTE PTR [esi],dl
10056570:	movzx  eax,BYTE PTR [ecx+0x1]
10056574:	add    ecx,0x1
10056577:	add    esi,0x1
1005657a:	sub    ebp,0x1
1005657d:	mov    BYTE PTR [esi],al
1005657f:	jne    0x10056554
10056581:	mov    ebp,DWORD PTR [esp+0x54]
10056585:	test   ebp,ebp
10056587:	je     0x100565a1
10056589:	mov    dl,BYTE PTR [ecx+0x1]
1005658c:	add    ecx,0x1
1005658f:	add    esi,0x1
10056592:	cmp    ebp,0x1
10056595:	mov    BYTE PTR [esi],dl
10056597:	jbe    0x100565a1
10056599:	mov    al,BYTE PTR [ecx+0x1]
1005659c:	add    esi,0x1
1005659f:	mov    BYTE PTR [esi],al
100565a1:	mov    ebp,DWORD PTR [esp+0x10]
100565a5:	mov    edx,DWORD PTR [esp+0x14]
100565a9:	cmp    ebp,edx
100565ab:	jae    0x10056674
100565b1:	cmp    esi,DWORD PTR [esp+0x2c]
100565b5:	jae    0x10056674
100565bb:	mov    edx,DWORD PTR [esp+0x48]
100565bf:	jmp    0x100562b0
100565c4:	mov    eax,esi
100565c6:	sub    eax,edx
100565c8:	jmp    0x100565d0
100565ca:	lea    ebx,[ebx+0x0]
100565d0:	movzx  ecx,BYTE PTR [eax+0x1]
100565d4:	add    eax,0x1
100565d7:	mov    BYTE PTR [esi+0x1],cl
100565da:	mov    dl,BYTE PTR [eax+0x1]
100565dd:	add    esi,0x1
100565e0:	add    eax,0x1
100565e3:	add    esi,0x1
100565e6:	mov    BYTE PTR [esi],dl
100565e8:	movzx  ecx,BYTE PTR [eax+0x1]
100565ec:	add    eax,0x1
100565ef:	add    esi,0x1
100565f2:	mov    BYTE PTR [esi],cl
100565f4:	mov    ecx,DWORD PTR [esp+0x54]
100565f8:	sub    ecx,0x3
100565fb:	cmp    ecx,0x2
100565fe:	mov    DWORD PTR [esp+0x54],ecx
10056602:	ja     0x100565d0
10056604:	test   ecx,ecx
10056606:	je     0x100565a5
10056608:	mov    dl,BYTE PTR [eax+0x1]
1005660b:	add    eax,0x1
1005660e:	add    esi,0x1
10056611:	cmp    ecx,0x1
10056614:	mov    BYTE PTR [esi],dl
10056616:	jbe    0x100565a5
10056618:	mov    al,BYTE PTR [eax+0x1]
1005661b:	add    esi,0x1
1005661e:	mov    BYTE PTR [esi],al
10056620:	jmp    0x100565a5
10056622:	mov    ecx,DWORD PTR [esp+0x50]
10056626:	mov    edx,DWORD PTR [esp+0x18]
1005662a:	mov    ebp,DWORD PTR [esp+0x10]
1005662e:	mov    DWORD PTR [ecx+0x18],0x100688b8
10056635:	mov    DWORD PTR [edx],0x1b
1005663b:	jmp    0x10056670
1005663d:	mov    eax,DWORD PTR [esp+0x50]
10056641:	mov    DWORD PTR [eax+0x18],0x100688d8
10056648:	jmp    0x10056666
1005664a:	test   dl,0x20
1005664d:	je     0x1005665b
1005664f:	mov    edx,DWORD PTR [esp+0x18]
10056653:	mov    DWORD PTR [edx],0xb
10056659:	jmp    0x10056670
1005665b:	mov    eax,DWORD PTR [esp+0x50]
1005665f:	mov    DWORD PTR [eax+0x18],0x100688f0
10056666:	mov    ecx,DWORD PTR [esp+0x18]
1005666a:	mov    DWORD PTR [ecx],0x1b
10056670:	mov    edx,DWORD PTR [esp+0x14]
10056674:	mov    eax,edi
10056676:	shr    eax,0x3
10056679:	sub    ebp,eax
1005667b:	add    eax,eax
1005667d:	add    eax,eax
1005667f:	add    eax,eax
10056681:	sub    edi,eax
10056683:	mov    ecx,edi
10056685:	mov    eax,0x1
1005668a:	shl    eax,cl
1005668c:	mov    ecx,DWORD PTR [esp+0x50]
10056690:	sub    edx,ebp
10056692:	add    edx,0x5
10056695:	sub    eax,0x1
10056698:	and    ebx,eax
1005669a:	lea    eax,[ebp+0x1]
1005669d:	mov    DWORD PTR [ecx],eax
1005669f:	lea    eax,[esi+0x1]
100566a2:	mov    DWORD PTR [ecx+0xc],eax
100566a5:	mov    eax,DWORD PTR [esp+0x2c]
100566a9:	sub    eax,esi
100566ab:	add    eax,0x101
100566b0:	mov    DWORD PTR [ecx+0x10],eax
100566b3:	mov    eax,DWORD PTR [esp+0x18]
100566b7:	mov    DWORD PTR [ecx+0x4],edx
100566ba:	mov    DWORD PTR [eax+0x3c],edi
100566bd:	pop    edi
100566be:	pop    esi
100566bf:	pop    ebp
100566c0:	mov    DWORD PTR [eax+0x38],ebx
100566c3:	pop    ebx
100566c4:	add    esp,0x3c
100566c7:	ret    
100566c8:	int3   
100566c9:	int3   
100566ca:	int3   
100566cb:	int3   
100566cc:	int3   
100566cd:	int3   
100566ce:	int3   
100566cf:	int3   
100566d0:	sub    esp,0x8c
100566d6:	mov    eax,ds:0x1007e030
100566db:	xor    eax,esp
100566dd:	mov    DWORD PTR [esp+0x88],eax
100566e4:	mov    eax,DWORD PTR [esp+0xa4]
100566eb:	mov    edx,DWORD PTR [esp+0xa0]
100566f2:	push   ebx
100566f3:	mov    ebx,DWORD PTR [esp+0xa0]
100566fa:	push   ebp
100566fb:	mov    ebp,DWORD PTR [esp+0x9c]
10056702:	push   esi
10056703:	mov    esi,DWORD PTR [esp+0xa4]
1005670a:	mov    DWORD PTR [esp+0x18],eax
1005670e:	xor    eax,eax
10056710:	test   esi,esi
10056712:	mov    DWORD PTR [esp+0x50],ebp
10056716:	mov    DWORD PTR [esp+0x38],ebx
1005671a:	mov    DWORD PTR [esp+0x48],edx
1005671e:	mov    DWORD PTR [esp+0x54],eax
10056722:	mov    DWORD PTR [esp+0x58],eax
10056726:	mov    DWORD PTR [esp+0x5c],eax
1005672a:	mov    DWORD PTR [esp+0x60],eax
1005672e:	mov    DWORD PTR [esp+0x64],eax
10056732:	mov    DWORD PTR [esp+0x68],eax
10056736:	mov    DWORD PTR [esp+0x6c],eax
1005673a:	mov    DWORD PTR [esp+0x70],eax
1005673e:	jbe    0x10056756
10056740:	movzx  ecx,WORD PTR [ebp+eax*2+0x0]
10056745:	add    WORD PTR [esp+ecx*2+0x54],0x1
1005674b:	lea    ecx,[esp+ecx*2+0x54]
1005674f:	add    eax,0x1
10056752:	cmp    eax,esi
10056754:	jb     0x10056740
10056756:	mov    eax,DWORD PTR [edx]
10056758:	mov    DWORD PTR [esp+0x10],eax
1005675c:	mov    ecx,0xf
10056761:	cmp    WORD PTR [esp+ecx*2+0x54],0x0
10056767:	jne    0x10056771
10056769:	sub    ecx,0x1
1005676c:	cmp    ecx,0x1
1005676f:	jae    0x10056761
10056771:	cmp    eax,ecx
10056773:	mov    DWORD PTR [esp+0x1c],ecx
10056777:	jbe    0x1005677f
10056779:	mov    DWORD PTR [esp+0x10],ecx
1005677d:	mov    eax,ecx
1005677f:	test   ecx,ecx
10056781:	jne    0x100567c4
10056783:	mov    WORD PTR [esp+0xe],cx
10056788:	mov    ecx,DWORD PTR [ebx]
1005678a:	mov    BYTE PTR [esp+0xc],0x40
1005678f:	mov    BYTE PTR [esp+0xd],0x1
10056794:	mov    eax,DWORD PTR [esp+0xc]
10056798:	mov    DWORD PTR [ecx],eax
1005679a:	add    DWORD PTR [ebx],0x4
1005679d:	mov    ecx,DWORD PTR [ebx]
1005679f:	pop    esi
100567a0:	mov    DWORD PTR [ecx],eax
100567a2:	add    DWORD PTR [ebx],0x4
100567a5:	pop    ebp
100567a6:	mov    DWORD PTR [edx],0x1
100567ac:	xor    eax,eax
100567ae:	pop    ebx
100567af:	mov    ecx,DWORD PTR [esp+0x88]
100567b6:	xor    ecx,esp
100567b8:	call   0x10042f87
100567bd:	add    esp,0x8c
100567c3:	ret    
100567c4:	mov    esi,0x1
100567c9:	lea    esp,[esp+0x0]
100567d0:	cmp    WORD PTR [esp+esi*2+0x54],0x0
100567d6:	jne    0x10056814
100567d8:	cmp    WORD PTR [esp+esi*2+0x56],0x0
100567de:	jne    0x10056802
100567e0:	cmp    WORD PTR [esp+esi*2+0x58],0x0
100567e6:	jne    0x10056807
100567e8:	cmp    WORD PTR [esp+esi*2+0x5a],0x0
100567ee:	jne    0x1005680c
100567f0:	cmp    WORD PTR [esp+esi*2+0x5c],0x0
100567f6:	jne    0x10056811
100567f8:	add    esi,0x5
100567fb:	cmp    esi,0xf
100567fe:	jbe    0x100567d0
10056800:	jmp    0x10056814
10056802:	add    esi,0x1
10056805:	jmp    0x10056814
10056807:	add    esi,0x2
1005680a:	jmp    0x10056814
1005680c:	add    esi,0x3
1005680f:	jmp    0x10056814
10056811:	add    esi,0x4
10056814:	cmp    eax,esi
10056816:	jae    0x1005681c
10056818:	mov    DWORD PTR [esp+0x10],esi
1005681c:	mov    edx,0x1
10056821:	mov    eax,edx
10056823:	push   edi
10056824:	movzx  edi,WORD PTR [esp+eax*2+0x58]
10056829:	add    edx,edx
1005682b:	sub    edx,edi
1005682d:	js     0x1005684b
1005682f:	add    eax,0x1
10056832:	cmp    eax,0xf
10056835:	jbe    0x10056824
10056837:	test   edx,edx
10056839:	mov    edi,DWORD PTR [esp+0xa0]
10056840:	jle    0x10056853
10056842:	test   edi,edi
10056844:	je     0x1005684b
10056846:	cmp    ecx,0x1
10056849:	je     0x10056853
1005684b:	or     eax,0xffffffff
1005684e:	jmp    0x10056ba5
10056853:	mov    WORD PTR [esp+0x7a],0x0
1005685a:	mov    eax,0x2
1005685f:	nop
10056860:	mov    cx,WORD PTR [esp+eax*1+0x78]
10056865:	add    cx,WORD PTR [esp+eax*1+0x58]
1005686a:	add    eax,0x2
1005686d:	cmp    eax,0x1e
10056870:	mov    WORD PTR [esp+eax*1+0x78],cx
10056875:	jb     0x10056860
10056877:	mov    ecx,DWORD PTR [esp+0x1c]
1005687b:	xor    eax,eax
1005687d:	cmp    DWORD PTR [esp+0xa8],eax
10056884:	jbe    0x100568b7
10056886:	cmp    WORD PTR [ebp+eax*2+0x0],0x0
1005688c:	je     0x100568ab
1005688e:	movzx  edx,WORD PTR [ebp+eax*2+0x0]
10056893:	movzx  edx,WORD PTR [esp+edx*2+0x78]
10056898:	mov    WORD PTR [ecx+edx*2],ax
1005689c:	movzx  edx,WORD PTR [ebp+eax*2+0x0]
100568a1:	add    WORD PTR [esp+edx*2+0x78],0x1
100568a7:	lea    edx,[esp+edx*2+0x78]
100568ab:	add    eax,0x1
100568ae:	cmp    eax,DWORD PTR [esp+0xa8]
100568b5:	jb     0x10056886
100568b7:	mov    eax,edi
100568b9:	sub    eax,0x0
100568bc:	mov    edx,0xffffffff
100568c1:	je     0x10056904
100568c3:	sub    eax,0x1
100568c6:	je     0x100568de
100568c8:	mov    DWORD PTR [esp+0x2c],0x1006b5d8
100568d0:	mov    DWORD PTR [esp+0x38],0x1006b618
100568d8:	mov    DWORD PTR [esp+0x30],edx
100568dc:	jmp    0x10056914
100568de:	mov    eax,0x1006b558
100568e3:	sub    eax,0x202
100568e8:	mov    DWORD PTR [esp+0x2c],eax
100568ec:	mov    eax,0x1006b598
100568f1:	sub    eax,0x202
100568f6:	mov    DWORD PTR [esp+0x38],eax
100568fa:	mov    DWORD PTR [esp+0x30],0x100
10056902:	jmp    0x10056914
10056904:	mov    DWORD PTR [esp+0x38],ecx
10056908:	mov    DWORD PTR [esp+0x2c],ecx
1005690c:	mov    DWORD PTR [esp+0x30],0x13
10056914:	mov    eax,DWORD PTR [ebx]
10056916:	mov    ecx,DWORD PTR [esp+0x14]
1005691a:	mov    DWORD PTR [esp+0x24],eax
1005691e:	mov    eax,0x1
10056923:	shl    eax,cl
10056925:	xor    ebp,ebp
10056927:	xor    ebx,ebx
10056929:	cmp    edi,0x1
1005692c:	lea    ecx,[eax-0x1]
1005692f:	mov    DWORD PTR [esp+0x18],esi
10056933:	mov    DWORD PTR [esp+0x34],edx
10056937:	mov    DWORD PTR [esp+0x44],eax
1005693b:	mov    DWORD PTR [esp+0x28],eax
1005693f:	mov    DWORD PTR [esp+0x40],ecx
10056943:	jne    0x10056950
10056945:	cmp    eax,0x5b0
1005694a:	jae    0x10056ba0
10056950:	mov    edx,DWORD PTR [esp+0x1c]
10056954:	mov    DWORD PTR [esp+0x1c],edx
10056958:	jmp    0x10056960
1005695a:	lea    ebx,[ebx+0x0]
10056960:	mov    al,BYTE PTR [esp+0x18]
10056964:	mov    esi,DWORD PTR [esp+0x1c]
10056968:	mov    edx,DWORD PTR [esp+0x30]
1005696c:	sub    al,bl
1005696e:	mov    BYTE PTR [esp+0x11],al
10056972:	movzx  eax,WORD PTR [esi]
10056975:	movzx  ecx,ax
10056978:	cmp    ecx,edx
1005697a:	jge    0x10056988
1005697c:	mov    BYTE PTR [esp+0x10],0x0
10056981:	mov    WORD PTR [esp+0x12],ax
10056986:	jmp    0x100569b5
10056988:	jle    0x100569a9
1005698a:	movzx  eax,WORD PTR [esi]
1005698d:	mov    ecx,DWORD PTR [esp+0x38]
10056991:	add    eax,eax
10056993:	mov    dl,BYTE PTR [eax+ecx*1]
10056996:	mov    ecx,DWORD PTR [esp+0x2c]
1005699a:	mov    BYTE PTR [esp+0x10],dl
1005699e:	mov    dx,WORD PTR [eax+ecx*1]
100569a2:	mov    WORD PTR [esp+0x12],dx
100569a7:	jmp    0x100569b5
100569a9:	mov    BYTE PTR [esp+0x10],0x60
100569ae:	mov    WORD PTR [esp+0x12],0x0
100569b5:	mov    ecx,DWORD PTR [esp+0x18]
100569b9:	mov    eax,DWORD PTR [esp+0x44]
100569bd:	sub    ecx,ebx
100569bf:	mov    edx,0x1
100569c4:	shl    edx,cl
100569c6:	mov    ecx,ebx
100569c8:	mov    edi,ebp
100569ca:	shr    edi,cl
100569cc:	mov    ecx,DWORD PTR [esp+0x24]
100569d0:	mov    DWORD PTR [esp+0x50],eax
100569d4:	lea    esi,[edx*4+0x0]
100569db:	add    edi,eax
100569dd:	lea    ecx,[ecx+edi*4]
100569e0:	mov    edi,DWORD PTR [esp+0x10]
100569e4:	sub    eax,edx
100569e6:	sub    ecx,esi
100569e8:	test   eax,eax
100569ea:	mov    DWORD PTR [ecx],edi
100569ec:	jne    0x100569e4
100569ee:	mov    edx,DWORD PTR [esp+0x18]
100569f2:	lea    ecx,[edx-0x1]
100569f5:	mov    eax,0x1
100569fa:	shl    eax,cl
100569fc:	test   ebp,eax
100569fe:	je     0x10056a06
10056a00:	shr    eax,1
10056a02:	test   ebp,eax
10056a04:	jne    0x10056a00
10056a06:	test   eax,eax
10056a08:	je     0x10056a15
10056a0a:	lea    ecx,[eax-0x1]
10056a0d:	and    ecx,ebp
10056a0f:	add    ecx,eax
10056a11:	mov    ebp,ecx
10056a13:	jmp    0x10056a17
10056a15:	xor    ebp,ebp
10056a17:	add    WORD PTR [esp+edx*2+0x58],0xffff
10056a1e:	movzx  eax,WORD PTR [esp+edx*2+0x58]
10056a23:	add    DWORD PTR [esp+0x1c],0x2
10056a28:	test   ax,ax
10056a2b:	jne    0x10056a4a
10056a2d:	cmp    edx,DWORD PTR [esp+0x20]
10056a31:	je     0x10056b13
10056a37:	mov    edx,DWORD PTR [esp+0x1c]
10056a3b:	movzx  eax,WORD PTR [edx]
10056a3e:	mov    ecx,DWORD PTR [esp+0x54]
10056a42:	movzx  edx,WORD PTR [ecx+eax*2]
10056a46:	mov    DWORD PTR [esp+0x18],edx
10056a4a:	cmp    edx,DWORD PTR [esp+0x14]
10056a4e:	jbe    0x10056960
10056a54:	mov    esi,DWORD PTR [esp+0x40]
10056a58:	and    esi,ebp
10056a5a:	cmp    esi,DWORD PTR [esp+0x34]
10056a5e:	mov    DWORD PTR [esp+0x48],esi
10056a62:	je     0x10056960
10056a68:	test   ebx,ebx
10056a6a:	jne    0x10056a70
10056a6c:	mov    ebx,DWORD PTR [esp+0x14]
10056a70:	mov    eax,DWORD PTR [esp+0x24]
10056a74:	mov    ecx,DWORD PTR [esp+0x50]
10056a78:	lea    edx,[eax+ecx*4]
10056a7b:	mov    ecx,DWORD PTR [esp+0x18]
10056a7f:	sub    ecx,ebx
10056a81:	mov    DWORD PTR [esp+0x24],edx
10056a85:	mov    eax,0x1
10056a8a:	lea    edx,[ebx+ecx*1]
10056a8d:	shl    eax,cl
10056a8f:	cmp    edx,DWORD PTR [esp+0x20]
10056a93:	jae    0x10056abe
10056a95:	lea    esi,[esp+edx*2+0x58]
10056a99:	lea    esp,[esp+0x0]
10056aa0:	movzx  edi,WORD PTR [esi]
10056aa3:	sub    eax,edi
10056aa5:	test   eax,eax
10056aa7:	jle    0x10056aba
10056aa9:	add    edx,0x1
10056aac:	add    ecx,0x1
10056aaf:	add    esi,0x2
10056ab2:	add    eax,eax
10056ab4:	cmp    edx,DWORD PTR [esp+0x20]
10056ab8:	jb     0x10056aa0
10056aba:	mov    esi,DWORD PTR [esp+0x48]
10056abe:	mov    eax,0x1
10056ac3:	shl    eax,cl
10056ac5:	add    DWORD PTR [esp+0x28],eax
10056ac9:	cmp    DWORD PTR [esp+0xa0],0x1
10056ad1:	mov    DWORD PTR [esp+0x44],eax
10056ad5:	jne    0x10056ae5
10056ad7:	cmp    DWORD PTR [esp+0x28],0x5b0
10056adf:	jae    0x10056ba0
10056ae5:	mov    edx,esi
10056ae7:	mov    esi,DWORD PTR [esp+0x3c]
10056aeb:	mov    eax,DWORD PTR [esi]
10056aed:	mov    BYTE PTR [eax+edx*4],cl
10056af0:	mov    ecx,DWORD PTR [esi]
10056af2:	mov    al,BYTE PTR [esp+0x14]
10056af6:	mov    BYTE PTR [ecx+edx*4+0x1],al
10056afa:	mov    eax,DWORD PTR [esi]
10056afc:	mov    ecx,DWORD PTR [esp+0x24]
10056b00:	sub    ecx,eax
10056b02:	sar    ecx,0x2
10056b05:	mov    DWORD PTR [esp+0x34],edx
10056b09:	mov    WORD PTR [eax+edx*4+0x2],cx
10056b0e:	jmp    0x10056960
10056b13:	mov    edi,DWORD PTR [esp+0x3c]
10056b17:	mov    al,dl
10056b19:	sub    al,bl
10056b1b:	test   ebp,ebp
10056b1d:	mov    BYTE PTR [esp+0x10],0x40
10056b22:	mov    BYTE PTR [esp+0x11],al
10056b26:	mov    WORD PTR [esp+0x12],0x0
10056b2d:	je     0x10056b85
10056b2f:	mov    esi,DWORD PTR [esp+0x24]
10056b33:	test   ebx,ebx
10056b35:	je     0x10056b55
10056b37:	mov    ecx,DWORD PTR [esp+0x40]
10056b3b:	and    ecx,ebp
10056b3d:	cmp    ecx,DWORD PTR [esp+0x34]
10056b41:	je     0x10056b55
10056b43:	mov    eax,DWORD PTR [esp+0x14]
10056b47:	mov    esi,DWORD PTR [edi]
10056b49:	xor    ebx,ebx
10056b4b:	mov    DWORD PTR [esp+0x18],eax
10056b4f:	mov    BYTE PTR [esp+0x11],al
10056b53:	mov    edx,eax
10056b55:	mov    ecx,ebx
10056b57:	mov    eax,ebp
10056b59:	shr    eax,cl
10056b5b:	mov    ecx,DWORD PTR [esp+0x10]
10056b5f:	mov    DWORD PTR [esi+eax*4],ecx
10056b62:	lea    ecx,[edx-0x1]
10056b65:	mov    eax,0x1
10056b6a:	shl    eax,cl
10056b6c:	test   ebp,eax
10056b6e:	je     0x10056b76
10056b70:	shr    eax,1
10056b72:	test   ebp,eax
10056b74:	jne    0x10056b70
10056b76:	test   eax,eax
10056b78:	je     0x10056b85
10056b7a:	lea    ecx,[eax-0x1]
10056b7d:	and    ecx,ebp
10056b7f:	add    ecx,eax
10056b81:	mov    ebp,ecx
10056b83:	jne    0x10056b33
10056b85:	mov    edx,DWORD PTR [esp+0x28]
10056b89:	mov    ecx,DWORD PTR [esp+0x4c]
10056b8d:	lea    eax,[edx*4+0x0]
10056b94:	add    DWORD PTR [edi],eax
10056b96:	mov    edx,DWORD PTR [esp+0x14]
10056b9a:	mov    DWORD PTR [ecx],edx
10056b9c:	xor    eax,eax
10056b9e:	jmp    0x10056ba5
10056ba0:	mov    eax,0x1
10056ba5:	mov    ecx,DWORD PTR [esp+0x98]
10056bac:	pop    edi
10056bad:	pop    esi
10056bae:	pop    ebp
10056baf:	pop    ebx
10056bb0:	xor    ecx,esp
10056bb2:	call   0x10042f87
10056bb7:	add    esp,0x8c
10056bbd:	ret    
10056bbe:	jmp    DWORD PTR ds:0x10066404
10056bc4:	jmp    DWORD PTR ds:0x10066218
10056bca:	jmp    DWORD PTR ds:0x10066278
10056bd0:	push   ebp
10056bd1:	mov    ebp,esp
10056bd3:	sub    esp,0xc
10056bd6:	mov    eax,ds:0x1007e030
10056bdb:	xor    eax,ebp
10056bdd:	mov    DWORD PTR [ebp-0x4],eax
10056be0:	push   esi
10056be1:	xor    esi,esi
10056be3:	call   DWORD PTR ds:0x1006606c
10056be9:	push   0x7
10056beb:	lea    ecx,[ebp-0xc]
10056bee:	push   ecx
10056bef:	push   0x1004
10056bf4:	push   eax
10056bf5:	call   DWORD PTR ds:0x1006623c
10056bfb:	test   eax,eax
10056bfd:	je     0x10056c1e
10056bff:	mov    cl,BYTE PTR [ebp-0xc]
10056c02:	test   cl,cl
10056c04:	lea    eax,[ebp-0xc]
10056c07:	je     0x10056c1e
10056c09:	imul   esi,esi,0xa
10056c0c:	movsx  ecx,cl
10056c0f:	inc    eax
10056c10:	lea    esi,[esi+ecx*1-0x30]
10056c14:	mov    cl,BYTE PTR [eax]
10056c16:	test   cl,cl
10056c18:	jne    0x10056c09
10056c1a:	test   esi,esi
10056c1c:	jne    0x10056c26
10056c1e:	call   DWORD PTR ds:0x100661e0
10056c24:	mov    esi,eax
10056c26:	mov    ecx,DWORD PTR [ebp-0x4]
10056c29:	mov    eax,esi
10056c2b:	xor    ecx,ebp
10056c2d:	pop    esi
10056c2e:	call   0x10042f87
10056c33:	leave  
10056c34:	ret    
10056c35:	push   0x3
10056c37:	pop    eax
10056c38:	ret    
10056c39:	push   ebp
10056c3a:	mov    ebp,esp
10056c3c:	sub    esp,0x98
10056c42:	mov    eax,ds:0x1007e030
10056c47:	xor    eax,ebp
10056c49:	mov    DWORD PTR [ebp-0x4],eax
10056c4c:	lea    eax,[ebp-0x98]
10056c52:	push   eax
10056c53:	mov    DWORD PTR [ebp-0x98],0x94
10056c5d:	call   DWORD PTR ds:0x100661a8
10056c63:	cmp    DWORD PTR [ebp-0x88],0x2
10056c6a:	jne    0x10056c7a
10056c6c:	cmp    DWORD PTR [ebp-0x94],0x5
10056c73:	mov    eax,0x10056c35
10056c78:	jae    0x10056c7f
10056c7a:	mov    eax,0x10056bd0
10056c7f:	push   eax
10056c80:	push   0x1007efec
10056c85:	call   DWORD PTR ds:0x1006621c
10056c8b:	call   DWORD PTR ds:0x1007efec
10056c91:	mov    ecx,DWORD PTR [ebp-0x4]
10056c94:	xor    ecx,ebp
10056c96:	call   0x10042f87
10056c9b:	leave  
10056c9c:	ret    
10056c9d:	mov    eax,DWORD PTR [esp+0x4]
10056ca1:	test   eax,eax
10056ca3:	jne    0x10056cac
10056ca5:	mov    eax,0x80070057
10056caa:	jmp    0x10056cbd
10056cac:	cmp    DWORD PTR [eax],0x2c
10056caf:	jne    0x10056ca5
10056cb1:	and    DWORD PTR [eax+0x1c],0x0
10056cb5:	lea    ecx,[eax+0x4]
10056cb8:	call   0x10014483
10056cbd:	ret    0x4
10056cc0:	push   esi
10056cc1:	mov    esi,ecx
10056cc3:	mov    eax,DWORD PTR [esi]
10056cc5:	test   eax,eax
10056cc7:	je     0x10056cd3
10056cc9:	push   eax
10056cca:	call   0x100435f8
10056ccf:	and    DWORD PTR [esi],0x0
10056cd2:	pop    ecx
10056cd3:	and    DWORD PTR [esi+0x4],0x0
10056cd7:	and    DWORD PTR [esi+0x8],0x0
10056cdb:	pop    esi
10056cdc:	ret    
10056cdd:	mov    eax,DWORD PTR [esp+0x4]
10056ce1:	test   eax,eax
10056ce3:	jl     0x10056cf2
10056ce5:	cmp    eax,DWORD PTR [ecx+0x4]
10056ce8:	jge    0x10056cf2
10056cea:	mov    ecx,DWORD PTR [ecx]
10056cec:	lea    eax,[ecx+eax*2]
10056cef:	ret    0x4
10056cf2:	push   0x0
10056cf4:	push   0x0
10056cf6:	push   0x1
10056cf8:	push   0xc000008c
10056cfd:	call   DWORD PTR ds:0x10066128
10056d03:	int3   
10056d04:	mov    eax,DWORD PTR [esp+0x4]
10056d08:	test   eax,eax
10056d0a:	jl     0x10056d19
10056d0c:	cmp    eax,DWORD PTR [ecx+0x4]
10056d0f:	jge    0x10056d19
10056d11:	mov    ecx,DWORD PTR [ecx]
10056d13:	lea    eax,[ecx+eax*4]
10056d16:	ret    0x4
10056d19:	push   0x0
10056d1b:	push   0x0
10056d1d:	push   0x1
10056d1f:	push   0xc000008c
10056d24:	call   DWORD PTR ds:0x10066128
10056d2a:	int3   
10056d2b:	push   esi
10056d2c:	mov    esi,ecx
10056d2e:	lea    ecx,[esi+0x4]
10056d31:	call   0x1001446f
10056d36:	xor    eax,eax
10056d38:	mov    DWORD PTR [esi+0x20],eax
10056d3b:	mov    DWORD PTR [esi+0x24],eax
10056d3e:	mov    DWORD PTR [esi+0x28],eax
10056d41:	mov    eax,esi
10056d43:	pop    esi
10056d44:	ret    
10056d45:	push   esi
10056d46:	mov    esi,DWORD PTR [esp+0x8]
10056d4a:	test   esi,esi
10056d4c:	jne    0x10056d55
10056d4e:	mov    eax,0x80070057
10056d53:	jmp    0x10056da1
10056d55:	mov    eax,DWORD PTR [esi]
10056d57:	test   eax,eax
10056d59:	je     0x10056d9f
10056d5b:	cmp    eax,0x2c
10056d5e:	jne    0x10056d4e
10056d60:	push   edi
10056d61:	xor    edi,edi
10056d63:	cmp    DWORD PTR [esi+0x24],edi
10056d66:	jle    0x10056d89
10056d68:	push   ebx
10056d69:	lea    ebx,[esi+0x20]
10056d6c:	push   edi
10056d6d:	mov    ecx,ebx
10056d6f:	call   0x10056cdd
10056d74:	movzx  eax,WORD PTR [eax]
10056d77:	push   DWORD PTR [esp+0x14]
10056d7b:	push   eax
10056d7c:	call   DWORD PTR ds:0x10066368
10056d82:	inc    edi
10056d83:	cmp    edi,DWORD PTR [esi+0x24]
10056d86:	jl     0x10056d6c
10056d88:	pop    ebx
10056d89:	lea    ecx,[esi+0x20]
10056d8c:	call   0x10056cc0
10056d91:	lea    eax,[esi+0x4]
10056d94:	push   eax
10056d95:	call   DWORD PTR ds:0x10066138
10056d9b:	and    DWORD PTR [esi],0x0
10056d9e:	pop    edi
10056d9f:	xor    eax,eax
10056da1:	pop    esi
10056da2:	ret    0x8
10056da5:	push   esi
10056da6:	mov    esi,ecx
10056da8:	lea    ecx,[esi+0x18]
10056dab:	call   0x1001446f
10056db0:	xor    eax,eax
10056db2:	mov    DWORD PTR [esi+0x30],eax
10056db5:	mov    DWORD PTR [esi+0x34],eax
10056db8:	mov    DWORD PTR [esi+0x38],eax
10056dbb:	mov    eax,esi
10056dbd:	pop    esi
10056dbe:	ret    
10056dbf:	push   esi
10056dc0:	mov    esi,ecx
10056dc2:	lea    eax,[esi+0x18]
10056dc5:	push   eax
10056dc6:	call   DWORD PTR ds:0x10066138
10056dcc:	lea    ecx,[esi+0x30]
10056dcf:	pop    esi
10056dd0:	jmp    0x10056cc0
10056dd5:	push   ebp
10056dd6:	mov    ebp,esp
10056dd8:	push   ecx
10056dd9:	push   ecx
10056dda:	push   esi
10056ddb:	mov    esi,ecx
10056ddd:	lea    eax,[esi+0x18]
10056de0:	push   eax
10056de1:	mov    DWORD PTR [ebp-0x8],eax
10056de4:	call   DWORD PTR ds:0x100660f0
10056dea:	mov    eax,DWORD PTR [esi+0x34]
10056ded:	mov    ecx,DWORD PTR [ebp+0x8]
10056df0:	cmp    ecx,eax
10056df2:	mov    BYTE PTR [ebp-0x4],0x1
10056df6:	jg     0x10056e1c
10056df8:	test   ecx,ecx
10056dfa:	jl     0x10056e1c
10056dfc:	cmp    ecx,eax
10056dfe:	jne    0x10056e0f
10056e00:	mov    esi,DWORD PTR [esi+0x8]
10056e03:	lea    ecx,[ebp-0x8]
10056e06:	call   0x10010d7e
10056e0b:	mov    eax,esi
10056e0d:	jmp    0x10056e26
10056e0f:	push   ecx
10056e10:	lea    ecx,[esi+0x30]
10056e13:	call   0x10056d04
10056e18:	mov    esi,DWORD PTR [eax]
10056e1a:	jmp    0x10056e03
10056e1c:	lea    ecx,[ebp-0x8]
10056e1f:	call   0x10010d7e
10056e24:	xor    eax,eax
10056e26:	pop    esi
10056e27:	leave  
10056e28:	ret    0x4
10056e2b:	push   esi
10056e2c:	mov    esi,ecx
10056e2e:	call   0x10056d2b
10056e33:	push   esi
10056e34:	mov    DWORD PTR [esi],0x2c
10056e3a:	call   0x10056c9d
10056e3f:	test   eax,eax
10056e41:	jge    0x10056e4d
10056e43:	mov    BYTE PTR ds:0x10080c00,0x1
10056e4a:	and    DWORD PTR [esi],0x0
10056e4d:	mov    eax,esi
10056e4f:	pop    esi
10056e50:	ret    
10056e51:	push   ebp
10056e52:	lea    ebp,[esp-0x78]
10056e56:	sub    esp,0x98
10056e5c:	mov    eax,ds:0x1007e030
10056e61:	xor    eax,ebp
10056e63:	mov    DWORD PTR [ebp+0x74],eax
10056e66:	push   esi
10056e67:	mov    esi,ecx
10056e69:	call   0x10056da5
10056e6e:	mov    eax,0x10000000
10056e73:	push   0x94
10056e78:	mov    DWORD PTR [esi+0x8],eax
10056e7b:	mov    DWORD PTR [esi+0x4],eax
10056e7e:	lea    eax,[ebp-0x20]
10056e81:	push   0x0
10056e83:	push   eax
10056e84:	mov    DWORD PTR [esi],0x3c
10056e8a:	mov    BYTE PTR [esi+0xc],0x0
10056e8e:	call   0x10045cf0
10056e93:	add    esp,0xc
10056e96:	lea    eax,[ebp-0x20]
10056e99:	push   eax
10056e9a:	mov    DWORD PTR [ebp-0x20],0x94
10056ea1:	call   DWORD PTR ds:0x100661a8
10056ea7:	cmp    DWORD PTR [ebp-0x10],0x2
10056eab:	jne    0x10056eb5
10056ead:	cmp    DWORD PTR [ebp-0x1c],0x5
10056eb1:	jb     0x10056ecd
10056eb3:	jmp    0x10056ec9
10056eb5:	cmp    DWORD PTR [ebp-0x10],0x1
10056eb9:	jne    0x10056ecd
10056ebb:	cmp    DWORD PTR [ebp-0x1c],0x4
10056ebf:	ja     0x10056ec9
10056ec1:	jne    0x10056ecd
10056ec3:	cmp    DWORD PTR [ebp-0x18],0x0
10056ec7:	jbe    0x10056ecd
10056ec9:	mov    BYTE PTR [esi+0xc],0x1
10056ecd:	lea    ecx,[esi+0x18]
10056ed0:	mov    DWORD PTR [esi+0x10],0x800
10056ed7:	mov    DWORD PTR [esi+0x14],0x1006b8e8
10056ede:	call   0x10014483
10056ee3:	test   eax,eax
10056ee5:	jge    0x10056eee
10056ee7:	mov    BYTE PTR ds:0x10080c00,0x1
10056eee:	mov    ecx,DWORD PTR [ebp+0x74]
10056ef1:	mov    eax,esi
10056ef3:	xor    ecx,ebp
10056ef5:	pop    esi
10056ef6:	call   0x10042f87
10056efb:	add    ebp,0x78
10056efe:	leave  
10056eff:	ret    
10056f00:	push   esi
10056f01:	push   DWORD PTR ds:0x10080a04
10056f07:	mov    esi,ecx
10056f09:	push   esi
10056f0a:	call   0x10056d45
10056f0f:	lea    ecx,[esi+0x20]
10056f12:	pop    esi
10056f13:	jmp    0x10056cc0
10056f18:	cmp    BYTE PTR [ecx+0x8],0x0
10056f1c:	mov    DWORD PTR [ecx],0x1006b8f8
10056f22:	je     0x10056f32
10056f24:	mov    ecx,DWORD PTR [ecx+0x4]
10056f27:	test   ecx,ecx
10056f29:	je     0x10056f32
10056f2b:	push   ecx
10056f2c:	call   DWORD PTR ds:0x100661c8
10056f32:	ret    
10056f33:	push   DWORD PTR [esp+0x4]
10056f37:	push   0x0
10056f39:	push   DWORD PTR [ecx+0x4]
10056f3c:	call   DWORD PTR ds:0x1006618c
10056f42:	ret    0x4
10056f45:	cmp    DWORD PTR [esp+0x4],0x0
10056f4a:	je     0x10056f5b
10056f4c:	push   DWORD PTR [esp+0x4]
10056f50:	push   0x0
10056f52:	push   DWORD PTR [ecx+0x4]
10056f55:	call   DWORD PTR ds:0x10066188
10056f5b:	ret    0x4
10056f5e:	push   ebp
10056f5f:	mov    ebp,esp
10056f61:	xor    eax,eax
10056f63:	cmp    DWORD PTR [ebp+0x8],eax
10056f66:	jne    0x10056f71
10056f68:	push   DWORD PTR [ebp+0xc]
10056f6b:	mov    eax,DWORD PTR [ecx]
10056f6d:	call   DWORD PTR [eax]
10056f6f:	jmp    0x10056f92
10056f71:	cmp    DWORD PTR [ebp+0xc],eax
10056f74:	jne    0x10056f82
10056f76:	push   DWORD PTR [ebp+0x8]
10056f79:	mov    eax,DWORD PTR [ecx]
10056f7b:	call   DWORD PTR [eax+0x4]
10056f7e:	xor    eax,eax
10056f80:	jmp    0x10056f92
10056f82:	push   DWORD PTR [ebp+0xc]
10056f85:	push   DWORD PTR [ebp+0x8]
10056f88:	push   eax
10056f89:	push   DWORD PTR [ecx+0x4]
10056f8c:	call   DWORD PTR ds:0x100661a0
10056f92:	pop    ebp
10056f93:	ret    0x8
10056f96:	push   DWORD PTR [esp+0x4]
10056f9a:	push   0x0
10056f9c:	push   DWORD PTR [ecx+0x4]
10056f9f:	call   DWORD PTR ds:0x100661c0
10056fa5:	ret    0x4
10056fa8:	push   esi
10056fa9:	mov    esi,ecx
10056fab:	call   0x10056f18
10056fb0:	test   BYTE PTR [esp+0x8],0x1
10056fb5:	je     0x10056fbe
10056fb7:	push   esi
10056fb8:	call   0x10042f82
10056fbd:	pop    ecx
10056fbe:	mov    eax,esi
10056fc0:	pop    esi
10056fc1:	ret    0x4
10056fc4:	mov    eax,ecx
10056fc6:	mov    ecx,DWORD PTR [esp+0x4]
10056fca:	mov    DWORD PTR [eax+0x4],ecx
10056fcd:	mov    DWORD PTR [eax],0x1006b90c
10056fd3:	xor    ecx,ecx
10056fd5:	mov    DWORD PTR [eax+0x14],0x2
10056fdc:	mov    DWORD PTR [eax+0xc],ecx
10056fdf:	mov    DWORD PTR [eax+0x10],ecx
10056fe2:	mov    WORD PTR [eax+0x18],cx
10056fe6:	mov    WORD PTR [eax+0x1a],cx
10056fea:	mov    DWORD PTR [eax+0x8],eax
10056fed:	ret    0x4
10056ff0:	mov    ecx,DWORD PTR [ecx+0x4]
10056ff3:	mov    eax,DWORD PTR [ecx]
10056ff5:	jmp    DWORD PTR [eax+0x4]
10056ff8:	xor    edx,edx
10056ffa:	lea    eax,[ecx+0x14]
10056ffd:	inc    edx
10056ffe:	lock xadd DWORD PTR [eax],edx
10057002:	lea    eax,[ecx+0x8]
10057005:	ret    
10057006:	mov    eax,ecx
10057008:	ret    
10057009:	test   BYTE PTR [esp+0x4],0x1
1005700e:	push   esi
1005700f:	mov    esi,ecx
10057011:	mov    DWORD PTR [esi],0x1006b90c
10057017:	je     0x10057020
10057019:	push   esi
1005701a:	call   0x10042f82
1005701f:	pop    ecx
10057020:	mov    eax,esi
10057022:	pop    esi
10057023:	ret    0x4
10057026:	mov    eax,DWORD PTR [esp+0x8]
1005702a:	mov    ecx,DWORD PTR [esp+0xc]
1005702e:	or     edx,0xffffffff
10057031:	sub    edx,eax
10057033:	cmp    edx,ecx
10057035:	jae    0x1005703d
10057037:	mov    eax,0x80070057
1005703c:	ret    
1005703d:	add    eax,ecx
1005703f:	mov    ecx,DWORD PTR [esp+0x4]
10057043:	mov    DWORD PTR [ecx],eax
10057045:	xor    eax,eax
10057047:	ret    
10057048:	push   ebp
10057049:	mov    ebp,esp
1005704b:	push   esi
1005704c:	mov    esi,DWORD PTR [ebp+0x8]
1005704f:	push   edi
10057050:	push   DWORD PTR [ebp+0xc]
10057053:	add    esi,0x8
10057056:	and    esi,0xfffffff8
10057059:	lea    eax,[ebp+0x8]
1005705c:	push   esi
1005705d:	push   eax
1005705e:	mov    edi,ecx
10057060:	call   0x10014404
10057065:	add    esp,0xc
10057068:	test   eax,eax
1005706a:	jl     0x100570a2
1005706c:	push   DWORD PTR [ebp+0x8]
1005706f:	lea    eax,[ebp+0x8]
10057072:	push   0x10
10057074:	push   eax
10057075:	call   0x10057026
1005707a:	add    esp,0xc
1005707d:	test   eax,eax
1005707f:	jl     0x100570a2
10057081:	mov    ecx,DWORD PTR [edi+0x4]
10057084:	push   DWORD PTR [ebp+0x8]
10057087:	mov    eax,DWORD PTR [ecx]
10057089:	call   DWORD PTR [eax]
1005708b:	test   eax,eax
1005708d:	je     0x100570a2
1005708f:	dec    esi
10057090:	and    DWORD PTR [eax+0x4],0x0
10057094:	mov    DWORD PTR [eax],edi
10057096:	mov    DWORD PTR [eax+0xc],0x1
1005709d:	mov    DWORD PTR [eax+0x8],esi
100570a0:	jmp    0x100570a4
100570a2:	xor    eax,eax
100570a4:	pop    edi
100570a5:	pop    esi
100570a6:	pop    ebp
100570a7:	ret    0x8
100570aa:	push   ebp
100570ab:	mov    ebp,esp
100570ad:	push   esi
100570ae:	mov    esi,DWORD PTR [ebp+0xc]
100570b1:	push   edi
100570b2:	push   DWORD PTR [ebp+0x10]
100570b5:	add    esi,0x8
100570b8:	and    esi,0xfffffff8
100570bb:	lea    eax,[ebp+0xc]
100570be:	push   esi
100570bf:	push   eax
100570c0:	mov    edi,ecx
100570c2:	call   0x10014404
100570c7:	add    esp,0xc
100570ca:	test   eax,eax
100570cc:	jl     0x100570fb
100570ce:	push   DWORD PTR [ebp+0xc]
100570d1:	lea    eax,[ebp+0xc]
100570d4:	push   0x10
100570d6:	push   eax
100570d7:	call   0x10007759
100570dc:	add    esp,0xc
100570df:	test   eax,eax
100570e1:	jl     0x100570fb
100570e3:	push   DWORD PTR [ebp+0xc]
100570e6:	mov    ecx,DWORD PTR [edi+0x4]
100570e9:	push   DWORD PTR [ebp+0x8]
100570ec:	mov    eax,DWORD PTR [ecx]
100570ee:	call   DWORD PTR [eax+0x8]
100570f1:	test   eax,eax
100570f3:	je     0x100570fb
100570f5:	dec    esi
100570f6:	mov    DWORD PTR [eax+0x8],esi
100570f9:	jmp    0x100570fd
100570fb:	xor    eax,eax
100570fd:	pop    edi
100570fe:	pop    esi
100570ff:	pop    ebp
10057100:	ret    0xc
10057103:	mov    eax,ds:0x10080a90
10057108:	cmp    eax,0x1
1005710b:	push   DWORD PTR [esp+0x4]
1005710f:	jne    0x10057121
10057111:	push   0x0
10057113:	call   DWORD PTR ds:0x100661ac
10057119:	push   eax
1005711a:	call   DWORD PTR ds:0x10066188
10057120:	ret    
10057121:	push   eax
10057122:	call   DWORD PTR ds:0x10080a94
10057128:	ret    
10057129:	push   ebx
1005712a:	push   0xc
1005712c:	call   DWORD PTR ds:0x1006605c
10057132:	test   eax,eax
10057134:	jne    0x1005713e
10057136:	inc    eax
10057137:	mov    ds:0x10080a90,eax
1005713c:	pop    ebx
1005713d:	ret    
1005713e:	push   ebp
1005713f:	push   esi
10057140:	push   edi
10057141:	push   0x1006f838
10057146:	call   DWORD PTR ds:0x10066220
1005714c:	mov    edi,eax
1005714e:	xor    ebp,ebp
10057150:	cmp    edi,ebp
10057152:	je     0x10057174
10057154:	mov    esi,DWORD PTR ds:0x1006612c
1005715a:	push   0x1006b940
1005715f:	push   edi
10057160:	call   esi
10057162:	push   0x1006b924
10057167:	push   edi
10057168:	mov    ds:0x10080a94,eax
1005716d:	call   esi
1005716f:	mov    ds:0x10080a98,eax
10057174:	cmp    DWORD PTR ds:0x10080a94,ebp
1005717a:	je     0x100571d7
1005717c:	cmp    DWORD PTR ds:0x10080a98,ebp
10057182:	je     0x100571d7
10057184:	mov    eax,fs:0x18
1005718a:	mov    esi,DWORD PTR [eax+0x30]
1005718d:	add    esi,0x34
10057190:	mov    eax,DWORD PTR [esi]
10057192:	cmp    eax,ebp
10057194:	jne    0x100571cd
10057196:	mov    ebx,DWORD PTR ds:0x100661ac
1005719c:	push   0x8
1005719e:	push   ebp
1005719f:	call   ebx
100571a1:	push   eax
100571a2:	call   DWORD PTR ds:0x1006618c
100571a8:	mov    edi,eax
100571aa:	cmp    edi,ebp
100571ac:	je     0x100571d7
100571ae:	push   ebp
100571af:	push   edi
100571b0:	push   esi
100571b1:	mov    DWORD PTR [edi],ebp
100571b3:	mov    DWORD PTR [edi+0x4],ebp
100571b6:	call   DWORD PTR ds:0x100660e0
100571bc:	test   eax,eax
100571be:	je     0x100571cb
100571c0:	push   edi
100571c1:	push   ebp
100571c2:	call   ebx
100571c4:	push   eax
100571c5:	call   DWORD PTR ds:0x10066188
100571cb:	mov    eax,DWORD PTR [esi]
100571cd:	mov    ds:0x10080a90,eax
100571d2:	xor    eax,eax
100571d4:	inc    eax
100571d5:	jmp    0x100571d9
100571d7:	xor    eax,eax
100571d9:	pop    edi
100571da:	pop    esi
100571db:	pop    ebp
100571dc:	pop    ebx
100571dd:	ret    
100571de:	push   DWORD PTR [esp+0x4]
100571e2:	call   0x10057103
100571e7:	pop    ecx
100571e8:	ret    0x4
100571eb:	cmp    DWORD PTR ds:0x10080a90,0x0
100571f2:	push   esi
100571f3:	jne    0x100571fe
100571f5:	call   0x10057129
100571fa:	test   eax,eax
100571fc:	je     0x10057241
100571fe:	mov    eax,ds:0x10080a90
10057203:	cmp    eax,0x1
10057206:	jne    0x1005721f
10057208:	push   0xd
1005720a:	push   0x0
1005720c:	call   DWORD PTR ds:0x100661ac
10057212:	push   eax
10057213:	call   DWORD PTR ds:0x1006618c
10057219:	test   eax,eax
1005721b:	je     0x10057241
1005721d:	pop    esi
1005721e:	ret    
1005721f:	push   eax
10057220:	call   DWORD PTR ds:0x10080a98
10057226:	test   eax,eax
10057228:	jne    0x10057289
1005722a:	push   0x40
1005722c:	mov    eax,0x1000
10057231:	push   eax
10057232:	push   eax
10057233:	push   0x0
10057235:	call   DWORD PTR ds:0x10066194
1005723b:	mov    esi,eax
1005723d:	test   esi,esi
1005723f:	jne    0x10057245
10057241:	xor    eax,eax
10057243:	pop    esi
10057244:	ret    
10057245:	mov    eax,DWORD PTR [esi]
10057247:	push   edi
10057248:	push   DWORD PTR ds:0x10080a90
1005724e:	call   DWORD PTR ds:0x10080a98
10057254:	mov    edi,eax
10057256:	test   edi,edi
10057258:	je     0x1005726c
1005725a:	push   0x8000
1005725f:	push   0x0
10057261:	push   esi
10057262:	call   DWORD PTR ds:0x100661d0
10057268:	mov    eax,edi
1005726a:	jmp    0x10057288
1005726c:	lea    edi,[esi+0xff0]
10057272:	push   esi
10057273:	push   DWORD PTR ds:0x10080a90
10057279:	call   DWORD PTR ds:0x10080a94
1005727f:	add    esi,0x10
10057282:	cmp    esi,edi
10057284:	jb     0x10057272
10057286:	mov    eax,esi
10057288:	pop    edi
10057289:	pop    esi
1005728a:	ret    
1005728b:	jmp    0x100571eb
10057290:	push   0x44
10057292:	mov    eax,0x10060374
10057297:	call   0x10059b25
1005729c:	push   0x1006b980
100572a1:	lea    ecx,[ebp-0x28]
100572a4:	call   0x100011c8
100572a9:	and    DWORD PTR [ebp-0x4],0x0
100572ad:	lea    eax,[ebp-0x28]
100572b0:	push   eax
100572b1:	lea    ecx,[ebp-0x50]
100572b4:	call   0x10001065
100572b9:	push   0x10074ec8
100572be:	lea    eax,[ebp-0x50]
100572c1:	push   eax
100572c2:	mov    DWORD PTR [ebp-0x50],0x1006b96c
100572c9:	call   0x10047aa4
100572ce:	int3   
100572cf:	push   0x44
100572d1:	mov    eax,0x10060374
100572d6:	call   0x10059b25
100572db:	push   0x1006b990
100572e0:	lea    ecx,[ebp-0x28]
100572e3:	call   0x100011c8
100572e8:	and    DWORD PTR [ebp-0x4],0x0
100572ec:	lea    eax,[ebp-0x28]
100572ef:	push   eax
100572f0:	lea    ecx,[ebp-0x50]
100572f3:	call   0x10001065
100572f8:	push   0x10074de8
100572fd:	lea    eax,[ebp-0x50]
10057300:	push   eax
10057301:	mov    DWORD PTR [ebp-0x50],0x1006b978
10057308:	call   0x10047aa4
1005730d:	int3   
1005730e:	int3   
1005730f:	int3   
10057310:	push   ebp
10057311:	mov    ebp,esp
10057313:	sub    esp,0x34
10057316:	push   0x1
10057318:	mov    eax,DWORD PTR [ebp+0x8]
1005731b:	push   eax
1005731c:	call   0x10057b50
10057321:	mov    DWORD PTR [ebp+0x8],eax
10057324:	push   0x0
10057326:	mov    ecx,DWORD PTR [ebp+0xc]
10057329:	push   ecx
1005732a:	call   0x10057b50
1005732f:	mov    DWORD PTR [ebp+0xc],eax
10057332:	mov    edx,DWORD PTR [ebp+0x8]
10057335:	movzx  eax,BYTE PTR [edx+0x1f]
10057339:	mov    DWORD PTR [ebp-0xc],eax
1005733c:	cmp    DWORD PTR [ebp-0xc],0x0
10057340:	je     0x10057348
10057342:	cmp    DWORD PTR [ebp-0xc],0x1f
10057346:	jl     0x10057357
10057348:	push   0x6
1005734a:	call   DWORD PTR ds:0x1006615c
10057350:	xor    eax,eax
10057352:	jmp    0x10057468
10057357:	mov    ecx,DWORD PTR [ebp+0x8]
1005735a:	add    ecx,DWORD PTR [ebp-0xc]
1005735d:	movzx  edx,BYTE PTR [ecx]
10057360:	cmp    edx,0xe9
10057366:	je     0x10057377
10057368:	push   0x6
1005736a:	call   DWORD PTR ds:0x1006615c
10057370:	xor    eax,eax
10057372:	jmp    0x10057468
10057377:	mov    eax,DWORD PTR [ebp+0x8]
1005737a:	add    eax,DWORD PTR [ebp-0xc]
1005737d:	mov    ecx,DWORD PTR [eax+0x1]
10057380:	mov    DWORD PTR [ebp-0x20],ecx
10057383:	mov    edx,DWORD PTR [ebp+0x8]
10057386:	add    edx,DWORD PTR [ebp-0xc]
10057389:	mov    eax,DWORD PTR [ebp-0x20]
1005738c:	lea    ecx,[edx+eax*1+0x5]
10057390:	sub    ecx,DWORD PTR [ebp-0xc]
10057393:	mov    DWORD PTR [ebp-0x8],ecx
10057396:	mov    edx,DWORD PTR [ebp-0x8]
10057399:	movzx  eax,BYTE PTR [edx]
1005739c:	cmp    eax,0xe9
100573a1:	je     0x100573b2
100573a3:	push   0x9
100573a5:	call   DWORD PTR ds:0x1006615c
100573ab:	xor    eax,eax
100573ad:	jmp    0x10057468
100573b2:	mov    ecx,DWORD PTR [ebp-0x8]
100573b5:	mov    edx,DWORD PTR [ecx+0x1]
100573b8:	mov    DWORD PTR [ebp-0x20],edx
100573bb:	mov    eax,DWORD PTR [ebp-0x20]
100573be:	mov    ecx,DWORD PTR [ebp-0x8]
100573c1:	lea    edx,[ecx+eax*1+0x5]
100573c5:	mov    DWORD PTR [ebp-0x28],edx
100573c8:	mov    eax,DWORD PTR [ebp-0x28]
100573cb:	cmp    eax,DWORD PTR [ebp+0xc]
100573ce:	je     0x100573df
100573d0:	push   0xc
100573d2:	call   DWORD PTR ds:0x1006615c
100573d8:	xor    eax,eax
100573da:	jmp    0x10057468
100573df:	mov    ecx,DWORD PTR [ebp-0xc]
100573e2:	push   ecx
100573e3:	mov    edx,DWORD PTR [ebp-0x8]
100573e6:	push   edx
100573e7:	lea    ecx,[ebp-0x1c]
100573ea:	call   0x10057470
100573ef:	mov    eax,DWORD PTR [ebp+0x8]
100573f2:	mov    DWORD PTR [ebp-0x4],eax
100573f5:	mov    ecx,DWORD PTR [ebp-0x8]
100573f8:	mov    DWORD PTR [ebp-0x24],ecx
100573fb:	mov    DWORD PTR [ebp-0x2c],0x0
10057402:	jmp    0x1005740d
10057404:	mov    edx,DWORD PTR [ebp-0x8]
10057407:	add    edx,DWORD PTR [ebp-0x2c]
1005740a:	mov    DWORD PTR [ebp-0x24],edx
1005740d:	mov    eax,DWORD PTR [ebp-0x2c]
10057410:	cmp    eax,DWORD PTR [ebp-0xc]
10057413:	jge    0x10057432
10057415:	push   0x0
10057417:	mov    ecx,DWORD PTR [ebp-0x4]
1005741a:	push   ecx
1005741b:	mov    edx,DWORD PTR [ebp-0x24]
1005741e:	push   edx
1005741f:	call   0x10057d60
10057424:	mov    DWORD PTR [ebp-0x4],eax
10057427:	mov    eax,DWORD PTR [ebp-0x4]
1005742a:	sub    eax,DWORD PTR [ebp+0x8]
1005742d:	mov    DWORD PTR [ebp-0x2c],eax
10057430:	jmp    0x10057404
10057432:	mov    ecx,DWORD PTR [ebp-0x2c]
10057435:	cmp    ecx,DWORD PTR [ebp-0xc]
10057438:	je     0x10057456
1005743a:	push   0xd
1005743c:	call   DWORD PTR ds:0x1006615c
10057442:	mov    DWORD PTR [ebp-0x30],0x0
10057449:	lea    ecx,[ebp-0x1c]
1005744c:	call   0x100574f0
10057451:	mov    eax,DWORD PTR [ebp-0x30]
10057454:	jmp    0x10057468
10057456:	mov    DWORD PTR [ebp-0x34],0x1
1005745d:	lea    ecx,[ebp-0x1c]
10057460:	call   0x100574f0
10057465:	mov    eax,DWORD PTR [ebp-0x34]
10057468:	mov    esp,ebp
1005746a:	pop    ebp
1005746b:	ret    0x8
1005746e:	int3   
1005746f:	int3   
10057470:	push   ebp
10057471:	mov    ebp,esp
10057473:	push   ecx
10057474:	mov    DWORD PTR [ebp-0x4],ecx
10057477:	mov    eax,DWORD PTR [ebp-0x4]
1005747a:	mov    ecx,DWORD PTR [ebp+0x8]
1005747d:	mov    DWORD PTR [eax+0x4],ecx
10057480:	mov    edx,DWORD PTR [ebp-0x4]
10057483:	mov    eax,DWORD PTR [ebp+0xc]
10057486:	mov    DWORD PTR [edx+0x8],eax
10057489:	mov    ecx,DWORD PTR [ebp-0x4]
1005748c:	mov    DWORD PTR [ecx+0xc],0x0
10057493:	call   DWORD PTR ds:0x10066108
10057499:	mov    edx,DWORD PTR [ebp-0x4]
1005749c:	mov    DWORD PTR [edx],eax
1005749e:	mov    eax,DWORD PTR [ebp-0x4]
100574a1:	cmp    DWORD PTR [eax+0x4],0x0
100574a5:	je     0x100574e1
100574a7:	mov    ecx,DWORD PTR [ebp-0x4]
100574aa:	cmp    DWORD PTR [ecx+0x8],0x0
100574ae:	je     0x100574e1
100574b0:	mov    edx,DWORD PTR [ebp+0xc]
100574b3:	push   edx
100574b4:	mov    eax,DWORD PTR [ebp+0x8]
100574b7:	push   eax
100574b8:	mov    ecx,DWORD PTR [ebp-0x4]
100574bb:	mov    edx,DWORD PTR [ecx]
100574bd:	push   edx
100574be:	call   DWORD PTR ds:0x10066158
100574c4:	test   eax,eax
100574c6:	jne    0x100574ca
100574c8:	jmp    0x100574e1
100574ca:	mov    eax,DWORD PTR [ebp-0x4]
100574cd:	add    eax,0xc
100574d0:	push   eax
100574d1:	push   0x40
100574d3:	mov    ecx,DWORD PTR [ebp+0xc]
100574d6:	push   ecx
100574d7:	mov    edx,DWORD PTR [ebp+0x8]
100574da:	push   edx
100574db:	call   DWORD PTR ds:0x10066190
100574e1:	mov    eax,DWORD PTR [ebp-0x4]
100574e4:	mov    esp,ebp
100574e6:	pop    ebp
100574e7:	ret    0x8
100574ea:	int3   
100574eb:	int3   
100574ec:	int3   
100574ed:	int3   
100574ee:	int3   
100574ef:	int3   
100574f0:	push   ebp
100574f1:	mov    ebp,esp
100574f3:	sub    esp,0x8
100574f6:	mov    DWORD PTR [ebp-0x8],ecx
100574f9:	mov    eax,DWORD PTR [ebp-0x8]
100574fc:	cmp    DWORD PTR [eax+0xc],0x0
10057500:	je     0x1005755a
10057502:	mov    ecx,DWORD PTR [ebp-0x8]
10057505:	cmp    DWORD PTR [ecx+0x4],0x0
10057509:	je     0x1005755a
1005750b:	mov    edx,DWORD PTR [ebp-0x8]
1005750e:	cmp    DWORD PTR [edx+0x8],0x0
10057512:	je     0x1005755a
10057514:	mov    DWORD PTR [ebp-0x4],0x0
1005751b:	mov    eax,DWORD PTR [ebp-0x8]
1005751e:	mov    ecx,DWORD PTR [eax+0x8]
10057521:	push   ecx
10057522:	mov    edx,DWORD PTR [ebp-0x8]
10057525:	mov    eax,DWORD PTR [edx+0x4]
10057528:	push   eax
10057529:	mov    ecx,DWORD PTR [ebp-0x8]
1005752c:	mov    edx,DWORD PTR [ecx]
1005752e:	push   edx
1005752f:	call   DWORD PTR ds:0x10066158
10057535:	test   eax,eax
10057537:	jne    0x1005753b
10057539:	jmp    0x1005755a
1005753b:	lea    eax,[ebp-0x4]
1005753e:	push   eax
1005753f:	mov    ecx,DWORD PTR [ebp-0x8]
10057542:	mov    edx,DWORD PTR [ecx+0xc]
10057545:	push   edx
10057546:	mov    eax,DWORD PTR [ebp-0x8]
10057549:	mov    ecx,DWORD PTR [eax+0x8]
1005754c:	push   ecx
1005754d:	mov    edx,DWORD PTR [ebp-0x8]
10057550:	mov    eax,DWORD PTR [edx+0x4]
10057553:	push   eax
10057554:	call   DWORD PTR ds:0x10066190
1005755a:	mov    esp,ebp
1005755c:	pop    ebp
1005755d:	ret    
1005755e:	int3   
1005755f:	int3   
10057560:	push   ebp
10057561:	mov    ebp,esp
10057563:	sub    esp,0xc
10057566:	push   0x20
10057568:	call   0x1004358e
1005756d:	add    esp,0x4
10057570:	mov    DWORD PTR [ebp-0x8],eax
10057573:	mov    eax,DWORD PTR [ebp-0x8]
10057576:	mov    DWORD PTR [ebp-0x4],eax
10057579:	cmp    DWORD PTR [ebp-0x4],0x0
1005757d:	jne    0x10057583
1005757f:	xor    eax,eax
10057581:	jmp    0x100575d0
10057583:	push   0x0
10057585:	mov    ecx,DWORD PTR [ebp+0x8]
10057588:	push   ecx
10057589:	call   0x10057b50
1005758e:	mov    DWORD PTR [ebp+0x8],eax
10057591:	push   0x0
10057593:	mov    edx,DWORD PTR [ebp+0xc]
10057596:	push   edx
10057597:	call   0x10057b50
1005759c:	mov    DWORD PTR [ebp+0xc],eax
1005759f:	mov    eax,DWORD PTR [ebp+0xc]
100575a2:	push   eax
100575a3:	mov    ecx,DWORD PTR [ebp-0x4]
100575a6:	push   ecx
100575a7:	mov    edx,DWORD PTR [ebp+0x8]
100575aa:	push   edx
100575ab:	call   0x100575e0
100575b0:	add    esp,0xc
100575b3:	test   eax,eax
100575b5:	je     0x100575bc
100575b7:	mov    eax,DWORD PTR [ebp-0x4]
100575ba:	jmp    0x100575d0
100575bc:	mov    eax,DWORD PTR [ebp-0x4]
100575bf:	mov    DWORD PTR [ebp-0xc],eax
100575c2:	mov    ecx,DWORD PTR [ebp-0xc]
100575c5:	push   ecx
100575c6:	call   0x10042f82
100575cb:	add    esp,0x4
100575ce:	xor    eax,eax
100575d0:	mov    esp,ebp
100575d2:	pop    ebp
100575d3:	ret    0x8
100575d6:	int3   
100575d7:	int3   
100575d8:	int3   
100575d9:	int3   
100575da:	int3   
100575db:	int3   
100575dc:	int3   
100575dd:	int3   
100575de:	int3   
100575df:	int3   
100575e0:	push   ebp
100575e1:	mov    ebp,esp
100575e3:	sub    esp,0x54
100575e6:	mov    eax,DWORD PTR [ebp+0x8]
100575e9:	mov    DWORD PTR [ebp-0x18],eax
100575ec:	mov    DWORD PTR [ebp-0x30],0x0
100575f3:	cmp    DWORD PTR [ebp-0x30],0x5
100575f7:	jge    0x100576c6
100575fd:	mov    ecx,DWORD PTR [ebp-0x18]
10057600:	mov    DWORD PTR [ebp-0x38],ecx
10057603:	mov    edx,DWORD PTR [ebp-0x38]
10057606:	mov    al,BYTE PTR [edx]
10057608:	mov    BYTE PTR [ebp-0x31],al
1005760b:	push   0x0
1005760d:	mov    ecx,DWORD PTR [ebp-0x18]
10057610:	push   ecx
10057611:	push   0x0
10057613:	call   0x10057d60
10057618:	mov    DWORD PTR [ebp-0x18],eax
1005761b:	mov    edx,DWORD PTR [ebp-0x18]
1005761e:	sub    edx,DWORD PTR [ebp+0x8]
10057621:	mov    DWORD PTR [ebp-0x30],edx
10057624:	movzx  eax,BYTE PTR [ebp-0x31]
10057628:	cmp    eax,0xe9
1005762d:	je     0x10057652
1005762f:	movzx  ecx,BYTE PTR [ebp-0x31]
10057633:	cmp    ecx,0xe0
10057639:	je     0x10057652
1005763b:	movzx  edx,BYTE PTR [ebp-0x31]
1005763f:	cmp    edx,0xc2
10057645:	je     0x10057652
10057647:	movzx  eax,BYTE PTR [ebp-0x31]
1005764b:	cmp    eax,0xc3
10057650:	jne    0x10057654
10057652:	jmp    0x100576c6
10057654:	movzx  ecx,BYTE PTR [ebp-0x31]
10057658:	cmp    ecx,0xff
1005765e:	jne    0x1005766e
10057660:	mov    edx,DWORD PTR [ebp-0x38]
10057663:	movzx  eax,BYTE PTR [edx+0x1]
10057667:	cmp    eax,0x25
1005766a:	jne    0x1005766e
1005766c:	jmp    0x100576c6
1005766e:	movzx  ecx,BYTE PTR [ebp-0x31]
10057672:	cmp    ecx,0x26
10057675:	je     0x100576a4
10057677:	movzx  edx,BYTE PTR [ebp-0x31]
1005767b:	cmp    edx,0x2e
1005767e:	je     0x100576a4
10057680:	movzx  eax,BYTE PTR [ebp-0x31]
10057684:	cmp    eax,0x36
10057687:	je     0x100576a4
10057689:	movzx  ecx,BYTE PTR [ebp-0x31]
1005768d:	cmp    ecx,0x3e
10057690:	je     0x100576a4
10057692:	movzx  edx,BYTE PTR [ebp-0x31]
10057696:	cmp    edx,0x64
10057699:	je     0x100576a4
1005769b:	movzx  eax,BYTE PTR [ebp-0x31]
1005769f:	cmp    eax,0x65
100576a2:	jne    0x100576c1
100576a4:	mov    ecx,DWORD PTR [ebp-0x38]
100576a7:	movzx  edx,BYTE PTR [ecx+0x1]
100576ab:	cmp    edx,0xff
100576b1:	jne    0x100576c1
100576b3:	mov    eax,DWORD PTR [ebp-0x38]
100576b6:	movzx  ecx,BYTE PTR [eax+0x2]
100576ba:	cmp    ecx,0x25
100576bd:	jne    0x100576c1
100576bf:	jmp    0x100576c6
100576c1:	jmp    0x100575f3
100576c6:	cmp    DWORD PTR [ebp-0x30],0x5
100576ca:	jge    0x100576d3
100576cc:	xor    eax,eax
100576ce:	jmp    0x1005784a
100576d3:	cmp    DWORD PTR [ebp-0x30],0x1a
100576d7:	jle    0x100576e0
100576d9:	xor    eax,eax
100576db:	jmp    0x1005784a
100576e0:	push   0x20
100576e2:	mov    edx,DWORD PTR [ebp+0xc]
100576e5:	push   edx
100576e6:	lea    ecx,[ebp-0x28]
100576e9:	call   0x10057470
100576ee:	mov    eax,DWORD PTR [ebp-0x30]
100576f1:	push   eax
100576f2:	mov    ecx,DWORD PTR [ebp+0x8]
100576f5:	push   ecx
100576f6:	lea    ecx,[ebp-0x14]
100576f9:	call   0x10057470
100576fe:	push   0x40
10057700:	lea    ecx,[ebp-0x28]
10057703:	call   0x10057850
10057708:	test   eax,eax
1005770a:	jne    0x1005772b
1005770c:	mov    DWORD PTR [ebp-0x40],0x0
10057713:	lea    ecx,[ebp-0x14]
10057716:	call   0x100574f0
1005771b:	lea    ecx,[ebp-0x28]
1005771e:	call   0x100574f0
10057723:	mov    eax,DWORD PTR [ebp-0x40]
10057726:	jmp    0x1005784a
1005772b:	lea    ecx,[ebp-0x14]
1005772e:	call   0x10057890
10057733:	test   eax,eax
10057735:	jne    0x10057756
10057737:	mov    DWORD PTR [ebp-0x44],0x0
1005773e:	lea    ecx,[ebp-0x14]
10057741:	call   0x100574f0
10057746:	lea    ecx,[ebp-0x28]
10057749:	call   0x100574f0
1005774e:	mov    eax,DWORD PTR [ebp-0x44]
10057751:	jmp    0x1005784a
10057756:	mov    edx,DWORD PTR [ebp+0x8]
10057759:	mov    DWORD PTR [ebp-0x4],edx
1005775c:	mov    eax,DWORD PTR [ebp+0xc]
1005775f:	mov    DWORD PTR [ebp-0x2c],eax
10057762:	mov    DWORD PTR [ebp-0x3c],0x0
10057769:	mov    ecx,DWORD PTR [ebp-0x3c]
1005776c:	cmp    ecx,DWORD PTR [ebp-0x30]
1005776f:	jge    0x10057797
10057771:	push   0x0
10057773:	mov    edx,DWORD PTR [ebp-0x4]
10057776:	push   edx
10057777:	mov    eax,DWORD PTR [ebp-0x2c]
1005777a:	push   eax
1005777b:	call   0x10057d60
10057780:	mov    DWORD PTR [ebp-0x4],eax
10057783:	mov    ecx,DWORD PTR [ebp-0x4]
10057786:	sub    ecx,DWORD PTR [ebp+0x8]
10057789:	mov    DWORD PTR [ebp-0x3c],ecx
1005778c:	mov    edx,DWORD PTR [ebp+0xc]
1005778f:	add    edx,DWORD PTR [ebp-0x3c]
10057792:	mov    DWORD PTR [ebp-0x2c],edx
10057795:	jmp    0x10057769
10057797:	mov    eax,DWORD PTR [ebp-0x3c]
1005779a:	cmp    eax,DWORD PTR [ebp-0x30]
1005779d:	je     0x100577be
1005779f:	mov    DWORD PTR [ebp-0x48],0x0
100577a6:	lea    ecx,[ebp-0x14]
100577a9:	call   0x100574f0
100577ae:	lea    ecx,[ebp-0x28]
100577b1:	call   0x100574f0
100577b6:	mov    eax,DWORD PTR [ebp-0x48]
100577b9:	jmp    0x1005784a
100577be:	push   0x5
100577c0:	mov    ecx,DWORD PTR [ebp+0x8]
100577c3:	add    ecx,DWORD PTR [ebp-0x30]
100577c6:	push   ecx
100577c7:	mov    edx,DWORD PTR [ebp-0x2c]
100577ca:	push   edx
100577cb:	call   0x100578d0
100577d0:	add    esp,0xc
100577d3:	test   eax,eax
100577d5:	jne    0x100577f3
100577d7:	mov    DWORD PTR [ebp-0x4c],0x0
100577de:	lea    ecx,[ebp-0x14]
100577e1:	call   0x100574f0
100577e6:	lea    ecx,[ebp-0x28]
100577e9:	call   0x100574f0
100577ee:	mov    eax,DWORD PTR [ebp-0x4c]
100577f1:	jmp    0x1005784a
100577f3:	mov    eax,DWORD PTR [ebp+0xc]
100577f6:	mov    cl,BYTE PTR [ebp-0x30]
100577f9:	mov    BYTE PTR [eax+0x1f],cl
100577fc:	mov    edx,DWORD PTR [ebp-0x30]
100577ff:	push   edx
10057800:	mov    eax,DWORD PTR [ebp+0x10]
10057803:	push   eax
10057804:	mov    ecx,DWORD PTR [ebp+0x8]
10057807:	push   ecx
10057808:	call   0x100578d0
1005780d:	add    esp,0xc
10057810:	test   eax,eax
10057812:	jne    0x10057830
10057814:	mov    DWORD PTR [ebp-0x50],0x0
1005781b:	lea    ecx,[ebp-0x14]
1005781e:	call   0x100574f0
10057823:	lea    ecx,[ebp-0x28]
10057826:	call   0x100574f0
1005782b:	mov    eax,DWORD PTR [ebp-0x50]
1005782e:	jmp    0x1005784a
10057830:	mov    DWORD PTR [ebp-0x54],0x1
10057837:	lea    ecx,[ebp-0x14]
1005783a:	call   0x100574f0
1005783f:	lea    ecx,[ebp-0x28]
10057842:	call   0x100574f0
10057847:	mov    eax,DWORD PTR [ebp-0x54]
1005784a:	mov    esp,ebp
1005784c:	pop    ebp
1005784d:	ret    
1005784e:	int3   
1005784f:	int3   
10057850:	push   ebp
10057851:	mov    ebp,esp
10057853:	push   ecx
10057854:	mov    DWORD PTR [ebp-0x4],ecx
10057857:	mov    eax,DWORD PTR [ebp-0x4]
1005785a:	cmp    DWORD PTR [eax+0xc],0x0
1005785e:	je     0x10057882
10057860:	mov    ecx,DWORD PTR [ebp-0x4]
10057863:	cmp    DWORD PTR [ecx+0x4],0x0
10057867:	je     0x10057882
10057869:	mov    edx,DWORD PTR [ebp-0x4]
1005786c:	cmp    DWORD PTR [edx+0x8],0x0
10057870:	je     0x10057882
10057872:	mov    eax,DWORD PTR [ebp-0x4]
10057875:	mov    ecx,DWORD PTR [ebp+0x8]
10057878:	mov    DWORD PTR [eax+0xc],ecx
1005787b:	mov    eax,0x1
10057880:	jmp    0x10057884
10057882:	xor    eax,eax
10057884:	mov    esp,ebp
10057886:	pop    ebp
10057887:	ret    0x4
1005788a:	int3   
1005788b:	int3   
1005788c:	int3   
1005788d:	int3   
1005788e:	int3   
1005788f:	int3   
10057890:	push   ebp
10057891:	mov    ebp,esp
10057893:	sub    esp,0x8
10057896:	mov    DWORD PTR [ebp-0x4],ecx
10057899:	mov    eax,DWORD PTR [ebp-0x4]
1005789c:	cmp    DWORD PTR [eax+0x4],0x0
100578a0:	je     0x100578bd
100578a2:	mov    ecx,DWORD PTR [ebp-0x4]
100578a5:	cmp    DWORD PTR [ecx+0x8],0x0
100578a9:	je     0x100578bd
100578ab:	mov    edx,DWORD PTR [ebp-0x4]
100578ae:	cmp    DWORD PTR [edx+0xc],0x0
100578b2:	je     0x100578bd
100578b4:	mov    DWORD PTR [ebp-0x8],0x1
100578bb:	jmp    0x100578c4
100578bd:	mov    DWORD PTR [ebp-0x8],0x0
100578c4:	mov    eax,DWORD PTR [ebp-0x8]
100578c7:	mov    esp,ebp
100578c9:	pop    ebp
100578ca:	ret    
100578cb:	int3   
100578cc:	int3   
100578cd:	int3   
100578ce:	int3   
100578cf:	int3   
100578d0:	push   ebp
100578d1:	mov    ebp,esp
100578d3:	cmp    DWORD PTR [ebp+0x10],0x5
100578d7:	jge    0x100578dd
100578d9:	xor    eax,eax
100578db:	jmp    0x10057922
100578dd:	push   0x0
100578df:	mov    eax,DWORD PTR [ebp+0xc]
100578e2:	push   eax
100578e3:	mov    ecx,DWORD PTR [ebp+0x8]
100578e6:	push   ecx
100578e7:	call   0x10057930
100578ec:	add    esp,0xc
100578ef:	mov    DWORD PTR [ebp+0x8],eax
100578f2:	mov    edx,DWORD PTR [ebp+0x10]
100578f5:	sub    edx,0x5
100578f8:	mov    DWORD PTR [ebp+0x10],edx
100578fb:	jmp    0x10057906
100578fd:	mov    eax,DWORD PTR [ebp+0x10]
10057900:	sub    eax,0x1
10057903:	mov    DWORD PTR [ebp+0x10],eax
10057906:	cmp    DWORD PTR [ebp+0x10],0x0
1005790a:	jle    0x1005791d
1005790c:	mov    ecx,DWORD PTR [ebp+0x8]
1005790f:	push   ecx
10057910:	call   0x10057970
10057915:	add    esp,0x4
10057918:	mov    DWORD PTR [ebp+0x8],eax
1005791b:	jmp    0x100578fd
1005791d:	mov    eax,0x1
10057922:	pop    ebp
10057923:	ret    
10057924:	int3   
10057925:	int3   
10057926:	int3   
10057927:	int3   
10057928:	int3   
10057929:	int3   
1005792a:	int3   
1005792b:	int3   
1005792c:	int3   
1005792d:	int3   
1005792e:	int3   
1005792f:	int3   
10057930:	push   ebp
10057931:	mov    ebp,esp
10057933:	cmp    DWORD PTR [ebp+0x10],0x0
10057937:	jne    0x1005793f
10057939:	mov    eax,DWORD PTR [ebp+0x8]
1005793c:	mov    DWORD PTR [ebp+0x10],eax
1005793f:	mov    ecx,DWORD PTR [ebp+0x8]
10057942:	mov    BYTE PTR [ecx],0xe9
10057945:	mov    edx,DWORD PTR [ebp+0x8]
10057948:	add    edx,0x1
1005794b:	mov    DWORD PTR [ebp+0x8],edx
1005794e:	mov    eax,DWORD PTR [ebp+0x10]
10057951:	add    eax,0x5
10057954:	mov    ecx,DWORD PTR [ebp+0xc]
10057957:	sub    ecx,eax
10057959:	mov    edx,DWORD PTR [ebp+0x8]
1005795c:	mov    DWORD PTR [edx],ecx
1005795e:	mov    eax,DWORD PTR [ebp+0x8]
10057961:	add    eax,0x4
10057964:	mov    DWORD PTR [ebp+0x8],eax
10057967:	mov    eax,DWORD PTR [ebp+0x8]
1005796a:	pop    ebp
1005796b:	ret    
1005796c:	int3   
1005796d:	int3   
1005796e:	int3   
1005796f:	int3   
10057970:	push   ebp
10057971:	mov    ebp,esp
10057973:	mov    eax,DWORD PTR [ebp+0x8]
10057976:	mov    BYTE PTR [eax],0xcc
10057979:	mov    ecx,DWORD PTR [ebp+0x8]
1005797c:	add    ecx,0x1
1005797f:	mov    DWORD PTR [ebp+0x8],ecx
10057982:	mov    eax,DWORD PTR [ebp+0x8]
10057985:	pop    ebp
10057986:	ret    
10057987:	int3   
10057988:	int3   
10057989:	int3   
1005798a:	int3   
1005798b:	int3   
1005798c:	int3   
1005798d:	int3   
1005798e:	int3   
1005798f:	int3   
10057990:	push   ebp
10057991:	mov    ebp,esp
10057993:	sub    esp,0xc
10057996:	cmp    DWORD PTR ds:0x10080ac4,0x0
1005799d:	je     0x100579a9
1005799f:	mov    eax,ds:0x10080ac4
100579a4:	jmp    0x10057b46
100579a9:	mov    DWORD PTR ds:0x10080ac4,0x10080a9c
100579b3:	push   0x28
100579b5:	push   0x0
100579b7:	push   0x10080a9c
100579bc:	call   0x10045cf0
100579c1:	add    esp,0xc
100579c4:	call   DWORD PTR ds:0x10066108
100579ca:	mov    ds:0x10080a9c,eax
100579cf:	push   0x1007eff4
100579d4:	call   DWORD PTR ds:0x10066220
100579da:	mov    ds:0x10080aa0,eax
100579df:	cmp    DWORD PTR ds:0x10080aa0,0x0
100579e6:	jne    0x100579ef
100579e8:	xor    eax,eax
100579ea:	jmp    0x10057b46
100579ef:	push   0x1007f004
100579f4:	mov    eax,ds:0x10080aa0
100579f9:	push   eax
100579fa:	call   DWORD PTR ds:0x1006612c
10057a00:	mov    ds:0x10080aa4,eax
10057a05:	push   0x1007f01c
10057a0a:	mov    ecx,DWORD PTR ds:0x10080aa0
10057a10:	push   ecx
10057a11:	call   DWORD PTR ds:0x1006612c
10057a17:	mov    ds:0x10080aa8,eax
10057a1c:	push   0x1007f02c
10057a21:	mov    edx,DWORD PTR ds:0x10080aa0
10057a27:	push   edx
10057a28:	call   DWORD PTR ds:0x1006612c
10057a2e:	mov    ds:0x10080aac,eax
10057a33:	push   0x1007f03c
10057a38:	mov    eax,ds:0x10080aa0
10057a3d:	push   eax
10057a3e:	call   DWORD PTR ds:0x1006612c
10057a44:	mov    ds:0x10080ab0,eax
10057a49:	push   0x1007f04c
10057a4e:	mov    ecx,DWORD PTR ds:0x10080aa0
10057a54:	push   ecx
10057a55:	call   DWORD PTR ds:0x1006612c
10057a5b:	mov    ds:0x10080ab4,eax
10057a60:	push   0x1007f05c
10057a65:	mov    edx,DWORD PTR ds:0x10080aa0
10057a6b:	push   edx
10057a6c:	call   DWORD PTR ds:0x1006612c
10057a72:	mov    ds:0x10080ab8,eax
10057a77:	push   0x1007f070
10057a7c:	mov    eax,ds:0x10080aa0
10057a81:	push   eax
10057a82:	call   DWORD PTR ds:0x1006612c
10057a88:	mov    ds:0x10080abc,eax
10057a8d:	push   0x1007f084
10057a92:	mov    ecx,DWORD PTR ds:0x10080aa0
10057a98:	push   ecx
10057a99:	call   DWORD PTR ds:0x1006612c
10057a9f:	mov    ds:0x10080ac0,eax
10057aa4:	push   0x8
10057aa6:	push   0x0
10057aa8:	lea    edx,[ebp-0x8]
10057aab:	push   edx
10057aac:	call   0x10045cf0
10057ab1:	add    esp,0xc
10057ab4:	mov    WORD PTR [ebp-0x8],0x9
10057aba:	cmp    DWORD PTR ds:0x10080aa4,0x0
10057ac1:	je     0x10057acd
10057ac3:	lea    eax,[ebp-0x8]
10057ac6:	push   eax
10057ac7:	call   DWORD PTR ds:0x10080aa4
10057acd:	cmp    DWORD PTR ds:0x10080aa4,0x0
10057ad4:	je     0x10057adf
10057ad6:	movzx  ecx,WORD PTR [ebp-0x8]
10057ada:	cmp    ecx,0x9
10057add:	jge    0x10057afa
10057adf:	mov    edx,DWORD PTR ds:0x10080aa0
10057ae5:	push   edx
10057ae6:	call   DWORD PTR ds:0x100660fc
10057aec:	mov    DWORD PTR ds:0x10080aa0,0x0
10057af6:	xor    eax,eax
10057af8:	jmp    0x10057b46
10057afa:	cmp    DWORD PTR ds:0x10080aa8,0x0
10057b01:	je     0x10057b13
10057b03:	push   0x0
10057b05:	push   0x0
10057b07:	mov    eax,ds:0x10080a9c
10057b0c:	push   eax
10057b0d:	call   DWORD PTR ds:0x10080aa8
10057b13:	cmp    DWORD PTR ds:0x10080ab0,0x0
10057b1a:	je     0x10057b41
10057b1c:	cmp    DWORD PTR ds:0x10080aac,0x0
10057b23:	je     0x10057b41
10057b25:	call   DWORD PTR ds:0x10080ab0
10057b2b:	mov    DWORD PTR [ebp-0xc],eax
10057b2e:	mov    ecx,DWORD PTR [ebp-0xc]
10057b31:	and    ecx,0x7
10057b34:	mov    DWORD PTR [ebp-0xc],ecx
10057b37:	mov    edx,DWORD PTR [ebp-0xc]
10057b3a:	push   edx
10057b3b:	call   DWORD PTR ds:0x10080aac
10057b41:	mov    eax,ds:0x10080ac4
10057b46:	mov    esp,ebp
10057b48:	pop    ebp
10057b49:	ret    
10057b4a:	int3   
10057b4b:	int3   
10057b4c:	int3   
10057b4d:	int3   
10057b4e:	int3   
10057b4f:	int3   
10057b50:	push   ebp
10057b51:	mov    ebp,esp
10057b53:	cmp    DWORD PTR [ebp+0x8],0x0
10057b57:	jne    0x10057b5d
10057b59:	xor    eax,eax
10057b5b:	jmp    0x10057bb0
10057b5d:	mov    eax,DWORD PTR [ebp+0x8]
10057b60:	movzx  ecx,BYTE PTR [eax]
10057b63:	cmp    ecx,0xff
10057b69:	jne    0x10057b8a
10057b6b:	mov    edx,DWORD PTR [ebp+0x8]
10057b6e:	movzx  eax,BYTE PTR [edx+0x1]
10057b72:	cmp    eax,0x25
10057b75:	jne    0x10057b8a
10057b77:	mov    ecx,DWORD PTR [ebp+0x8]
10057b7a:	mov    edx,DWORD PTR [ecx+0x2]
10057b7d:	mov    DWORD PTR [ebp+0x8],edx
10057b80:	mov    eax,DWORD PTR [ebp+0x8]
10057b83:	mov    ecx,DWORD PTR [eax]
10057b85:	mov    DWORD PTR [ebp+0x8],ecx
10057b88:	jmp    0x10057bad
10057b8a:	mov    edx,DWORD PTR [ebp+0x8]
10057b8d:	movzx  eax,BYTE PTR [edx]
10057b90:	cmp    eax,0xe9
10057b95:	jne    0x10057bad
10057b97:	cmp    DWORD PTR [ebp+0xc],0x0
10057b9b:	je     0x10057bad
10057b9d:	mov    ecx,DWORD PTR [ebp+0x8]
10057ba0:	mov    edx,DWORD PTR [ecx+0x1]
10057ba3:	mov    eax,DWORD PTR [ebp+0x8]
10057ba6:	lea    ecx,[eax+edx*1+0x5]
10057baa:	mov    DWORD PTR [ebp+0x8],ecx
10057bad:	mov    eax,DWORD PTR [ebp+0x8]
10057bb0:	pop    ebp
10057bb1:	ret    0x8
10057bb4:	int3   
10057bb5:	int3   
10057bb6:	int3   
10057bb7:	int3   
10057bb8:	int3   
10057bb9:	int3   
10057bba:	int3   
10057bbb:	int3   
10057bbc:	int3   
10057bbd:	int3   
10057bbe:	int3   
10057bbf:	int3   
10057bc0:	push   ebp
10057bc1:	mov    ebp,esp
10057bc3:	sub    esp,0x668
10057bc9:	mov    eax,DWORD PTR [ebp+0x8]
10057bcc:	push   eax
10057bcd:	call   DWORD PTR ds:0x10066220
10057bd3:	mov    DWORD PTR [ebp-0x668],eax
10057bd9:	cmp    DWORD PTR [ebp-0x668],0x0
10057be0:	jne    0x10057be9
10057be2:	xor    eax,eax
10057be4:	jmp    0x10057d4c
10057be9:	mov    ecx,DWORD PTR [ebp+0xc]
10057bec:	push   ecx
10057bed:	mov    edx,DWORD PTR [ebp-0x668]
10057bf3:	push   edx
10057bf4:	call   DWORD PTR ds:0x1006612c
10057bfa:	mov    DWORD PTR [ebp-0x664],eax
10057c00:	cmp    DWORD PTR [ebp-0x664],0x0
10057c07:	je     0x10057c14
10057c09:	mov    eax,DWORD PTR [ebp-0x664]
10057c0f:	jmp    0x10057d4c
10057c14:	call   0x10057990
10057c19:	mov    DWORD PTR [ebp-0x21c],eax
10057c1f:	cmp    DWORD PTR [ebp-0x21c],0x0
10057c26:	je     0x10057c4c
10057c28:	mov    eax,DWORD PTR [ebp-0x21c]
10057c2e:	cmp    DWORD PTR [eax+0x18],0x0
10057c32:	je     0x10057c4c
10057c34:	mov    ecx,DWORD PTR [ebp-0x21c]
10057c3a:	cmp    DWORD PTR [ecx+0x1c],0x0
10057c3e:	je     0x10057c4c
10057c40:	mov    edx,DWORD PTR [ebp-0x21c]
10057c46:	cmp    DWORD PTR [edx+0x20],0x0
10057c4a:	jne    0x10057c53
10057c4c:	xor    eax,eax
10057c4e:	jmp    0x10057d4c
10057c53:	push   0x0
10057c55:	mov    eax,DWORD PTR [ebp-0x668]
10057c5b:	push   eax
10057c5c:	push   0x0
10057c5e:	mov    ecx,DWORD PTR [ebp+0x8]
10057c61:	push   ecx
10057c62:	push   0x0
10057c64:	mov    edx,DWORD PTR [ebp-0x21c]
10057c6a:	mov    eax,DWORD PTR [edx]
10057c6c:	push   eax
10057c6d:	mov    ecx,DWORD PTR [ebp-0x21c]
10057c73:	call   DWORD PTR [ecx+0x18]
10057c76:	push   0x23c
10057c7b:	push   0x0
10057c7d:	lea    edx,[ebp-0x460]
10057c83:	push   edx
10057c84:	call   0x10045cf0
10057c89:	add    esp,0xc
10057c8c:	lea    eax,[ebp-0x460]
10057c92:	push   eax
10057c93:	mov    ecx,DWORD PTR [ebp-0x668]
10057c99:	push   ecx
10057c9a:	mov    edx,DWORD PTR [ebp-0x21c]
10057ca0:	mov    eax,DWORD PTR [edx]
10057ca2:	push   eax
10057ca3:	mov    ecx,DWORD PTR [ebp-0x21c]
10057ca9:	call   DWORD PTR [ecx+0x1c]
10057cac:	test   eax,eax
10057cae:	jne    0x10057cb7
10057cb0:	xor    eax,eax
10057cb2:	jmp    0x10057d4c
10057cb7:	lea    edx,[ebp-0x444]
10057cbd:	push   edx
10057cbe:	lea    eax,[ebp-0x660]
10057cc4:	push   eax
10057cc5:	call   0x10046530
10057cca:	add    esp,0x8
10057ccd:	push   0x1007f090
10057cd2:	lea    ecx,[ebp-0x660]
10057cd8:	push   ecx
10057cd9:	call   0x10046540
10057cde:	add    esp,0x8
10057ce1:	mov    edx,DWORD PTR [ebp+0xc]
10057ce4:	push   edx
10057ce5:	lea    eax,[ebp-0x660]
10057ceb:	push   eax
10057cec:	call   0x10046540
10057cf1:	add    esp,0x8
10057cf4:	push   0x218
10057cf9:	push   0x0
10057cfb:	lea    ecx,[ebp-0x218]
10057d01:	push   ecx
10057d02:	call   0x10045cf0
10057d07:	add    esp,0xc
10057d0a:	mov    DWORD PTR [ebp-0x218],0x18
10057d14:	mov    DWORD PTR [ebp-0x208],0x80
10057d1e:	lea    edx,[ebp-0x218]
10057d24:	push   edx
10057d25:	lea    eax,[ebp-0x660]
10057d2b:	push   eax
10057d2c:	mov    ecx,DWORD PTR [ebp-0x21c]
10057d32:	mov    edx,DWORD PTR [ecx]
10057d34:	push   edx
10057d35:	mov    eax,DWORD PTR [ebp-0x21c]
10057d3b:	call   DWORD PTR [eax+0x20]
10057d3e:	test   eax,eax
10057d40:	jne    0x10057d46
10057d42:	xor    eax,eax
10057d44:	jmp    0x10057d4c
10057d46:	mov    eax,DWORD PTR [ebp-0x214]
10057d4c:	mov    esp,ebp
10057d4e:	pop    ebp
10057d4f:	ret    0x8
10057d52:	int3   
10057d53:	int3   
10057d54:	int3   
10057d55:	int3   
10057d56:	int3   
10057d57:	int3   
10057d58:	int3   
10057d59:	int3   
10057d5a:	int3   
10057d5b:	int3   
10057d5c:	int3   
10057d5d:	int3   
10057d5e:	int3   
10057d5f:	int3   
10057d60:	push   ebp
10057d61:	mov    ebp,esp
10057d63:	sub    esp,0x58
10057d66:	push   0x0
10057d68:	mov    eax,DWORD PTR [ebp+0x10]
10057d6b:	push   eax
10057d6c:	lea    ecx,[ebp-0x58]
10057d6f:	call   0x10057d90
10057d74:	mov    ecx,DWORD PTR [ebp+0xc]
10057d77:	push   ecx
10057d78:	mov    edx,DWORD PTR [ebp+0x8]
10057d7b:	push   edx
10057d7c:	lea    ecx,[ebp-0x58]
10057d7f:	call   0x10057e90
10057d84:	mov    esp,ebp
10057d86:	pop    ebp
10057d87:	ret    0xc
10057d8a:	int3   
10057d8b:	int3   
10057d8c:	int3   
10057d8d:	int3   
10057d8e:	int3   
10057d8f:	int3   
10057d90:	push   ebp
10057d91:	mov    ebp,esp
10057d93:	sub    esp,0xc
10057d96:	mov    DWORD PTR [ebp-0x4],ecx
10057d99:	mov    ecx,DWORD PTR [ebp-0x4]
10057d9c:	call   0x10057e30
10057da1:	mov    ecx,DWORD PTR [ebp-0x4]
10057da4:	call   0x10057e70
10057da9:	cmp    DWORD PTR [ebp+0x8],0x0
10057dad:	je     0x10057db7
10057daf:	mov    eax,DWORD PTR [ebp+0x8]
10057db2:	mov    DWORD PTR [ebp-0x8],eax
10057db5:	jmp    0x10057dc0
10057db7:	mov    ecx,DWORD PTR [ebp-0x4]
10057dba:	add    ecx,0x14
10057dbd:	mov    DWORD PTR [ebp-0x8],ecx
10057dc0:	mov    edx,DWORD PTR [ebp-0x4]
10057dc3:	mov    eax,DWORD PTR [ebp-0x8]
10057dc6:	mov    DWORD PTR [edx+0x8],eax
10057dc9:	cmp    DWORD PTR [ebp+0xc],0x0
10057dcd:	je     0x10057dd7
10057dcf:	mov    ecx,DWORD PTR [ebp+0xc]
10057dd2:	mov    DWORD PTR [ebp-0xc],ecx
10057dd5:	jmp    0x10057de0
10057dd7:	mov    edx,DWORD PTR [ebp-0x4]
10057dda:	add    edx,0x10
10057ddd:	mov    DWORD PTR [ebp-0xc],edx
10057de0:	mov    eax,DWORD PTR [ebp-0x4]
10057de3:	mov    ecx,DWORD PTR [ebp-0xc]
10057de6:	mov    DWORD PTR [eax+0xc],ecx
10057de9:	mov    edx,DWORD PTR [ebp-0x4]
10057dec:	mov    eax,DWORD PTR [edx+0x8]
10057def:	mov    DWORD PTR [eax],0x0
10057df5:	mov    ecx,DWORD PTR [ebp-0x4]
10057df8:	mov    edx,DWORD PTR [ecx+0xc]
10057dfb:	mov    DWORD PTR [edx],0x0
10057e01:	mov    eax,DWORD PTR [ebp-0x4]
10057e04:	mov    esp,ebp
10057e06:	pop    ebp
10057e07:	ret    0x8
10057e0a:	int3   
10057e0b:	int3   
10057e0c:	int3   
10057e0d:	int3   
10057e0e:	int3   
10057e0f:	int3   
10057e10:	push   ebp
10057e11:	mov    ebp,esp
10057e13:	push   ecx
10057e14:	mov    DWORD PTR [ebp-0x4],ecx
10057e17:	mov    eax,DWORD PTR [ebp-0x4]
10057e1a:	mov    DWORD PTR [eax],0x1
10057e20:	mov    esp,ebp
10057e22:	pop    ebp
10057e23:	ret    
10057e24:	int3   
10057e25:	int3   
10057e26:	int3   
10057e27:	int3   
10057e28:	int3   
10057e29:	int3   
10057e2a:	int3   
10057e2b:	int3   
10057e2c:	int3   
10057e2d:	int3   
10057e2e:	int3   
10057e2f:	int3   
10057e30:	push   ebp
10057e31:	mov    ebp,esp
10057e33:	push   ecx
10057e34:	mov    DWORD PTR [ebp-0x4],ecx
10057e37:	mov    eax,DWORD PTR [ebp-0x4]
10057e3a:	mov    DWORD PTR [eax],0x0
10057e40:	mov    esp,ebp
10057e42:	pop    ebp
10057e43:	ret    
10057e44:	int3   
10057e45:	int3   
10057e46:	int3   
10057e47:	int3   
10057e48:	int3   
10057e49:	int3   
10057e4a:	int3   
10057e4b:	int3   
10057e4c:	int3   
10057e4d:	int3   
10057e4e:	int3   
10057e4f:	int3   
10057e50:	push   ebp
10057e51:	mov    ebp,esp
10057e53:	push   ecx
10057e54:	mov    DWORD PTR [ebp-0x4],ecx
10057e57:	mov    eax,DWORD PTR [ebp-0x4]
10057e5a:	mov    DWORD PTR [eax+0x4],0x1
10057e61:	mov    esp,ebp
10057e63:	pop    ebp
10057e64:	ret    
10057e65:	int3   
10057e66:	int3   
10057e67:	int3   
10057e68:	int3   
10057e69:	int3   
10057e6a:	int3   
10057e6b:	int3   
10057e6c:	int3   
10057e6d:	int3   
10057e6e:	int3   
10057e6f:	int3   
10057e70:	push   ebp
10057e71:	mov    ebp,esp
10057e73:	push   ecx
10057e74:	mov    DWORD PTR [ebp-0x4],ecx
10057e77:	mov    eax,DWORD PTR [ebp-0x4]
10057e7a:	mov    DWORD PTR [eax+0x4],0x0
10057e81:	mov    esp,ebp
10057e83:	pop    ebp
10057e84:	ret    
10057e85:	int3   
10057e86:	int3   
10057e87:	int3   
10057e88:	int3   
10057e89:	int3   
10057e8a:	int3   
10057e8b:	int3   
10057e8c:	int3   
10057e8d:	int3   
10057e8e:	int3   
10057e8f:	int3   
10057e90:	push   ebp
10057e91:	mov    ebp,esp
10057e93:	sub    esp,0x8
10057e96:	mov    DWORD PTR [ebp-0x8],ecx
10057e99:	cmp    DWORD PTR [ebp+0x8],0x0
10057e9d:	jne    0x10057ea8
10057e9f:	mov    eax,DWORD PTR [ebp-0x8]
10057ea2:	add    eax,0x18
10057ea5:	mov    DWORD PTR [ebp+0x8],eax
10057ea8:	cmp    DWORD PTR [ebp+0xc],0x0
10057eac:	jne    0x10057eba
10057eae:	push   0xd
10057eb0:	call   DWORD PTR ds:0x1006615c
10057eb6:	xor    eax,eax
10057eb8:	jmp    0x10057edf
10057eba:	mov    ecx,DWORD PTR [ebp+0xc]
10057ebd:	movzx  edx,BYTE PTR [ecx]
10057ec0:	lea    eax,[edx*8+0x1006baa8]
10057ec7:	mov    DWORD PTR [ebp-0x4],eax
10057eca:	mov    ecx,DWORD PTR [ebp+0xc]
10057ecd:	push   ecx
10057ece:	mov    edx,DWORD PTR [ebp+0x8]
10057ed1:	push   edx
10057ed2:	mov    eax,DWORD PTR [ebp-0x4]
10057ed5:	push   eax
10057ed6:	mov    edx,DWORD PTR [ebp-0x4]
10057ed9:	mov    ecx,DWORD PTR [ebp-0x8]
10057edc:	call   DWORD PTR [edx+0x4]
10057edf:	mov    esp,ebp
10057ee1:	pop    ebp
10057ee2:	ret    0x8
10057ee5:	int3   
10057ee6:	int3   
10057ee7:	int3   
10057ee8:	int3   
10057ee9:	int3   
10057eea:	int3   
10057eeb:	int3   
10057eec:	int3   
10057eed:	int3   
10057eee:	int3   
10057eef:	int3   
10057ef0:	push   ebp
10057ef1:	mov    ebp,esp
10057ef3:	sub    esp,0x1c
10057ef6:	mov    DWORD PTR [ebp-0x10],ecx
10057ef9:	mov    eax,DWORD PTR [ebp+0x8]
10057efc:	mov    ecx,DWORD PTR [eax]
10057efe:	shr    ecx,0x14
10057f01:	and    ecx,0xf
10057f04:	and    ecx,0x2
10057f07:	test   ecx,ecx
10057f09:	je     0x10057f3a
10057f0b:	mov    edx,DWORD PTR [ebp-0x10]
10057f0e:	cmp    DWORD PTR [edx+0x4],0x0
10057f12:	je     0x10057f24
10057f14:	mov    eax,DWORD PTR [ebp+0x8]
10057f17:	mov    ecx,DWORD PTR [eax]
10057f19:	shr    ecx,0xb
10057f1c:	and    ecx,0x7
10057f1f:	mov    DWORD PTR [ebp-0x14],ecx
10057f22:	jmp    0x10057f32
10057f24:	mov    edx,DWORD PTR [ebp+0x8]
10057f27:	mov    eax,DWORD PTR [edx]
10057f29:	shr    eax,0x8
10057f2c:	and    eax,0x7
10057f2f:	mov    DWORD PTR [ebp-0x14],eax
10057f32:	mov    ecx,DWORD PTR [ebp-0x14]
10057f35:	mov    DWORD PTR [ebp-0x18],ecx
10057f38:	jmp    0x10057f66
10057f3a:	mov    edx,DWORD PTR [ebp-0x10]
10057f3d:	cmp    DWORD PTR [edx],0x0
10057f40:	je     0x10057f52
10057f42:	mov    eax,DWORD PTR [ebp+0x8]
10057f45:	mov    ecx,DWORD PTR [eax]
10057f47:	shr    ecx,0xb
10057f4a:	and    ecx,0x7
10057f4d:	mov    DWORD PTR [ebp-0x1c],ecx
10057f50:	jmp    0x10057f60
10057f52:	mov    edx,DWORD PTR [ebp+0x8]
10057f55:	mov    eax,DWORD PTR [edx]
10057f57:	shr    eax,0x8
10057f5a:	and    eax,0x7
10057f5d:	mov    DWORD PTR [ebp-0x1c],eax
10057f60:	mov    ecx,DWORD PTR [ebp-0x1c]
10057f63:	mov    DWORD PTR [ebp-0x18],ecx
10057f66:	mov    edx,DWORD PTR [ebp-0x18]
10057f69:	mov    DWORD PTR [ebp-0x8],edx
10057f6c:	mov    eax,DWORD PTR [ebp-0x8]
10057f6f:	mov    DWORD PTR [ebp-0x4],eax
10057f72:	mov    ecx,DWORD PTR [ebp+0x8]
10057f75:	mov    edx,DWORD PTR [ecx]
10057f77:	shr    edx,0xe
10057f7a:	and    edx,0x7
10057f7d:	test   edx,edx
10057f7f:	jbe    0x1005802e
10057f85:	mov    eax,DWORD PTR [ebp+0x8]
10057f88:	mov    ecx,DWORD PTR [eax]
10057f8a:	shr    ecx,0xe
10057f8d:	and    ecx,0x7
10057f90:	mov    edx,DWORD PTR [ebp+0x10]
10057f93:	mov    al,BYTE PTR [edx+ecx*1]
10057f96:	mov    BYTE PTR [ebp-0x9],al
10057f99:	movzx  ecx,BYTE PTR [ebp-0x9]
10057f9d:	mov    dl,BYTE PTR [ecx+0x1006b9a8]
10057fa3:	mov    BYTE PTR [ebp-0xa],dl
10057fa6:	movzx  eax,BYTE PTR [ebp-0xa]
10057faa:	and    eax,0x10
10057fad:	test   eax,eax
10057faf:	je     0x1005801f
10057fb1:	mov    ecx,DWORD PTR [ebp+0x8]
10057fb4:	mov    edx,DWORD PTR [ecx]
10057fb6:	shr    edx,0xe
10057fb9:	and    edx,0x7
10057fbc:	mov    eax,DWORD PTR [ebp+0x10]
10057fbf:	mov    cl,BYTE PTR [eax+edx*1+0x1]
10057fc3:	mov    BYTE PTR [ebp-0xb],cl
10057fc6:	movzx  edx,BYTE PTR [ebp-0xb]
10057fca:	and    edx,0x7
10057fcd:	cmp    edx,0x5
10057fd0:	jne    0x1005801f
10057fd2:	movzx  eax,BYTE PTR [ebp-0x9]
10057fd6:	and    eax,0xc0
10057fdb:	test   eax,eax
10057fdd:	jne    0x10057fea
10057fdf:	mov    ecx,DWORD PTR [ebp-0x4]
10057fe2:	add    ecx,0x4
10057fe5:	mov    DWORD PTR [ebp-0x4],ecx
10057fe8:	jmp    0x1005801f
10057fea:	movzx  edx,BYTE PTR [ebp-0x9]
10057fee:	and    edx,0xc0
10057ff4:	cmp    edx,0x40
10057ff7:	jne    0x10058004
10057ff9:	mov    eax,DWORD PTR [ebp-0x4]
10057ffc:	add    eax,0x1
10057fff:	mov    DWORD PTR [ebp-0x4],eax
10058002:	jmp    0x1005801f
10058004:	movzx  ecx,BYTE PTR [ebp-0x9]
10058008:	and    ecx,0xc0
1005800e:	cmp    ecx,0x80
10058014:	jne    0x1005801f
10058016:	mov    edx,DWORD PTR [ebp-0x4]
10058019:	add    edx,0x4
1005801c:	mov    DWORD PTR [ebp-0x4],edx
1005801f:	movzx  eax,BYTE PTR [ebp-0xa]
10058023:	and    eax,0xf
10058026:	mov    ecx,DWORD PTR [ebp-0x4]
10058029:	add    ecx,eax
1005802b:	mov    DWORD PTR [ebp-0x4],ecx
1005802e:	mov    edx,DWORD PTR [ebp-0x4]
10058031:	push   edx
10058032:	mov    eax,DWORD PTR [ebp+0x10]
10058035:	push   eax
10058036:	mov    ecx,DWORD PTR [ebp+0xc]
10058039:	push   ecx
1005803a:	call   0x10045270
1005803f:	add    esp,0xc
10058042:	mov    edx,DWORD PTR [ebp+0x8]
10058045:	mov    eax,DWORD PTR [edx]
10058047:	shl    eax,0xc
1005804a:	sar    eax,0x1d
1005804d:	test   eax,eax
1005804f:	je     0x10058079
10058051:	mov    ecx,DWORD PTR [ebp+0x8]
10058054:	mov    edx,DWORD PTR [ecx]
10058056:	shl    edx,0xc
10058059:	sar    edx,0x1d
1005805c:	push   edx
1005805d:	mov    eax,DWORD PTR [ebp-0x8]
10058060:	push   eax
10058061:	mov    ecx,DWORD PTR [ebp+0x10]
10058064:	push   ecx
10058065:	mov    edx,DWORD PTR [ebp+0xc]
10058068:	push   edx
10058069:	mov    ecx,DWORD PTR [ebp-0x10]
1005806c:	call   0x10058120
10058071:	mov    ecx,DWORD PTR [ebp-0x10]
10058074:	mov    edx,DWORD PTR [ecx+0x8]
10058077:	mov    DWORD PTR [edx],eax
10058079:	mov    eax,DWORD PTR [ebp+0x8]
1005807c:	mov    ecx,DWORD PTR [eax]
1005807e:	shr    ecx,0x14
10058081:	and    ecx,0xf
10058084:	and    ecx,0x4
10058087:	test   ecx,ecx
10058089:	je     0x1005809d
1005808b:	mov    edx,DWORD PTR [ebp-0x10]
1005808e:	mov    eax,DWORD PTR [edx+0xc]
10058091:	mov    ecx,DWORD PTR [eax]
10058093:	neg    ecx
10058095:	mov    edx,DWORD PTR [ebp-0x10]
10058098:	mov    eax,DWORD PTR [edx+0xc]
1005809b:	mov    DWORD PTR [eax],ecx
1005809d:	mov    ecx,DWORD PTR [ebp+0x8]
100580a0:	mov    edx,DWORD PTR [ecx]
100580a2:	shr    edx,0x14
100580a5:	and    edx,0xf
100580a8:	and    edx,0x1
100580ab:	test   edx,edx
100580ad:	je     0x100580bb
100580af:	mov    eax,DWORD PTR [ebp-0x10]
100580b2:	mov    ecx,DWORD PTR [eax+0x8]
100580b5:	mov    DWORD PTR [ecx],0xffffffff
100580bb:	mov    eax,DWORD PTR [ebp+0x10]
100580be:	add    eax,DWORD PTR [ebp-0x4]
100580c1:	mov    esp,ebp
100580c3:	pop    ebp
100580c4:	ret    0xc
100580c7:	int3   
100580c8:	int3   
100580c9:	int3   
100580ca:	int3   
100580cb:	int3   
100580cc:	int3   
100580cd:	int3   
100580ce:	int3   
100580cf:	int3   
100580d0:	push   ebp
100580d1:	mov    ebp,esp
100580d3:	push   ecx
100580d4:	mov    DWORD PTR [ebp-0x4],ecx
100580d7:	mov    eax,DWORD PTR [ebp+0x10]
100580da:	push   eax
100580db:	mov    ecx,DWORD PTR [ebp+0xc]
100580de:	push   ecx
100580df:	mov    edx,DWORD PTR [ebp+0x8]
100580e2:	push   edx
100580e3:	mov    ecx,DWORD PTR [ebp-0x4]
100580e6:	call   0x10057ef0
100580eb:	mov    eax,DWORD PTR [ebp+0x10]
100580ee:	movzx  ecx,BYTE PTR [eax+0x1]
100580f2:	lea    edx,[ecx*8+0x1006baa8]
100580f9:	mov    DWORD PTR [ebp+0x8],edx
100580fc:	mov    eax,DWORD PTR [ebp+0x10]
100580ff:	add    eax,0x1
10058102:	push   eax
10058103:	mov    ecx,DWORD PTR [ebp+0xc]
10058106:	add    ecx,0x1
10058109:	push   ecx
1005810a:	mov    edx,DWORD PTR [ebp+0x8]
1005810d:	push   edx
1005810e:	mov    eax,DWORD PTR [ebp+0x8]
10058111:	mov    ecx,DWORD PTR [ebp-0x4]
10058114:	call   DWORD PTR [eax+0x4]
10058117:	mov    esp,ebp
10058119:	pop    ebp
1005811a:	ret    0xc
1005811d:	int3   
1005811e:	int3   
1005811f:	int3   
10058120:	push   ebp
10058121:	mov    ebp,esp
10058123:	sub    esp,0x20
10058126:	mov    DWORD PTR [ebp-0x18],ecx
10058129:	mov    eax,DWORD PTR [ebp+0x10]
1005812c:	sub    eax,DWORD PTR [ebp+0x14]
1005812f:	mov    DWORD PTR [ebp-0x10],eax
10058132:	mov    DWORD PTR [ebp-0x4],0x0
10058139:	mov    ecx,DWORD PTR [ebp+0x8]
1005813c:	add    ecx,DWORD PTR [ebp+0x14]
1005813f:	mov    DWORD PTR [ebp-0x14],ecx
10058142:	mov    DWORD PTR [ebp-0xc],0x0
10058149:	mov    edx,DWORD PTR [ebp-0x10]
1005814c:	mov    DWORD PTR [ebp-0x1c],edx
1005814f:	cmp    DWORD PTR [ebp-0x1c],0x1
10058153:	je     0x10058163
10058155:	cmp    DWORD PTR [ebp-0x1c],0x2
10058159:	je     0x1005817a
1005815b:	cmp    DWORD PTR [ebp-0x1c],0x4
1005815f:	je     0x10058191
10058161:	jmp    0x100581a5
10058163:	mov    eax,DWORD PTR [ebp-0x14]
10058166:	movsx  ecx,BYTE PTR [eax]
10058169:	mov    DWORD PTR [ebp-0xc],ecx
1005816c:	mov    edx,DWORD PTR [ebp-0x18]
1005816f:	mov    eax,DWORD PTR [edx+0xc]
10058172:	mov    DWORD PTR [eax],0x3
10058178:	jmp    0x100581a5
1005817a:	mov    ecx,DWORD PTR [ebp-0x14]
1005817d:	movsx  edx,WORD PTR [ecx]
10058180:	mov    DWORD PTR [ebp-0xc],edx
10058183:	mov    eax,DWORD PTR [ebp-0x18]
10058186:	mov    ecx,DWORD PTR [eax+0xc]
10058189:	mov    DWORD PTR [ecx],0x2
1005818f:	jmp    0x100581a5
10058191:	mov    edx,DWORD PTR [ebp-0x14]
10058194:	mov    eax,DWORD PTR [edx]
10058196:	mov    DWORD PTR [ebp-0xc],eax
10058199:	mov    ecx,DWORD PTR [ebp-0x18]
1005819c:	mov    edx,DWORD PTR [ecx+0xc]
1005819f:	mov    DWORD PTR [edx],0x0
100581a5:	mov    eax,DWORD PTR [ebp+0xc]
100581a8:	add    eax,DWORD PTR [ebp+0x10]
100581ab:	add    eax,DWORD PTR [ebp-0xc]
100581ae:	mov    DWORD PTR [ebp-0x4],eax
100581b1:	mov    ecx,DWORD PTR [ebp+0x8]
100581b4:	sub    ecx,DWORD PTR [ebp+0xc]
100581b7:	mov    edx,DWORD PTR [ebp-0xc]
100581ba:	sub    edx,ecx
100581bc:	mov    DWORD PTR [ebp-0x8],edx
100581bf:	mov    eax,DWORD PTR [ebp-0x10]
100581c2:	mov    DWORD PTR [ebp-0x20],eax
100581c5:	cmp    DWORD PTR [ebp-0x20],0x1
100581c9:	je     0x100581d9
100581cb:	cmp    DWORD PTR [ebp-0x20],0x2
100581cf:	je     0x100581e3
100581d1:	cmp    DWORD PTR [ebp-0x20],0x4
100581d5:	je     0x100581ef
100581d7:	jmp    0x100581f7
100581d9:	mov    ecx,DWORD PTR [ebp-0x14]
100581dc:	mov    dl,BYTE PTR [ebp-0x8]
100581df:	mov    BYTE PTR [ecx],dl
100581e1:	jmp    0x100581f7
100581e3:	mov    eax,DWORD PTR [ebp-0x14]
100581e6:	mov    cx,WORD PTR [ebp-0x8]
100581ea:	mov    WORD PTR [eax],cx
100581ed:	jmp    0x100581f7
100581ef:	mov    edx,DWORD PTR [ebp-0x14]
100581f2:	mov    eax,DWORD PTR [ebp-0x8]
100581f5:	mov    DWORD PTR [edx],eax
100581f7:	mov    eax,DWORD PTR [ebp-0x4]
100581fa:	mov    esp,ebp
100581fc:	pop    ebp
100581fd:	ret    0x10
10058200:	push   ebp
10058201:	mov    ebp,esp
10058203:	push   ecx
10058204:	mov    DWORD PTR [ebp-0x4],ecx
10058207:	mov    eax,DWORD PTR [ebp+0x10]
1005820a:	add    eax,0x1
1005820d:	mov    esp,ebp
1005820f:	pop    ebp
10058210:	ret    0xc
10058213:	int3   
10058214:	int3   
10058215:	int3   
10058216:	int3   
10058217:	int3   
10058218:	int3   
10058219:	int3   
1005821a:	int3   
1005821b:	int3   
1005821c:	int3   
1005821d:	int3   
1005821e:	int3   
1005821f:	int3   
10058220:	push   ebp
10058221:	mov    ebp,esp
10058223:	push   ecx
10058224:	mov    DWORD PTR [ebp-0x4],ecx
10058227:	mov    eax,DWORD PTR [ebp+0x10]
1005822a:	push   eax
1005822b:	mov    ecx,DWORD PTR [ebp+0xc]
1005822e:	push   ecx
1005822f:	mov    edx,DWORD PTR [ebp+0x8]
10058232:	push   edx
10058233:	mov    ecx,DWORD PTR [ebp-0x4]
10058236:	call   0x10057ef0
1005823b:	mov    eax,DWORD PTR [ebp+0x10]
1005823e:	movzx  ecx,BYTE PTR [eax+0x1]
10058242:	lea    edx,[ecx*8+0x1006c2b0]
10058249:	mov    DWORD PTR [ebp+0x8],edx
1005824c:	mov    eax,DWORD PTR [ebp+0x10]
1005824f:	add    eax,0x1
10058252:	push   eax
10058253:	mov    ecx,DWORD PTR [ebp+0xc]
10058256:	add    ecx,0x1
10058259:	push   ecx
1005825a:	mov    edx,DWORD PTR [ebp+0x8]
1005825d:	push   edx
1005825e:	mov    eax,DWORD PTR [ebp+0x8]
10058261:	mov    ecx,DWORD PTR [ebp-0x4]
10058264:	call   DWORD PTR [eax+0x4]
10058267:	mov    esp,ebp
10058269:	pop    ebp
1005826a:	ret    0xc
1005826d:	int3   
1005826e:	int3   
1005826f:	int3   
10058270:	push   ebp
10058271:	mov    ebp,esp
10058273:	push   ecx
10058274:	mov    DWORD PTR [ebp-0x4],ecx
10058277:	mov    ecx,DWORD PTR [ebp-0x4]
1005827a:	call   0x10057e10
1005827f:	mov    eax,DWORD PTR [ebp+0x10]
10058282:	push   eax
10058283:	mov    ecx,DWORD PTR [ebp+0xc]
10058286:	push   ecx
10058287:	mov    edx,DWORD PTR [ebp+0x8]
1005828a:	push   edx
1005828b:	mov    ecx,DWORD PTR [ebp-0x4]
1005828e:	call   0x100580d0
10058293:	mov    esp,ebp
10058295:	pop    ebp
10058296:	ret    0xc
10058299:	int3   
1005829a:	int3   
1005829b:	int3   
1005829c:	int3   
1005829d:	int3   
1005829e:	int3   
1005829f:	int3   
100582a0:	push   ebp
100582a1:	mov    ebp,esp
100582a3:	push   ecx
100582a4:	mov    DWORD PTR [ebp-0x4],ecx
100582a7:	mov    ecx,DWORD PTR [ebp-0x4]
100582aa:	call   0x10057e50
100582af:	mov    eax,DWORD PTR [ebp+0x10]
100582b2:	push   eax
100582b3:	mov    ecx,DWORD PTR [ebp+0xc]
100582b6:	push   ecx
100582b7:	mov    edx,DWORD PTR [ebp+0x8]
100582ba:	push   edx
100582bb:	mov    ecx,DWORD PTR [ebp-0x4]
100582be:	call   0x100580d0
100582c3:	mov    esp,ebp
100582c5:	pop    ebp
100582c6:	ret    0xc
100582c9:	int3   
100582ca:	int3   
100582cb:	int3   
100582cc:	int3   
100582cd:	int3   
100582ce:	int3   
100582cf:	int3   
100582d0:	push   ebp
100582d1:	mov    ebp,esp
100582d3:	sub    esp,0x14
100582d6:	mov    DWORD PTR [ebp-0x14],ecx
100582d9:	mov    eax,DWORD PTR [ebp+0x10]
100582dc:	movzx  ecx,BYTE PTR [eax+0x1]
100582e0:	and    ecx,0x38
100582e3:	test   ecx,ecx
100582e5:	jne    0x10058309
100582e7:	mov    DWORD PTR [ebp-0x10],0x5bf6
100582ee:	mov    DWORD PTR [ebp-0xc],0x10057ef0
100582f5:	mov    edx,DWORD PTR [ebp+0x10]
100582f8:	push   edx
100582f9:	mov    eax,DWORD PTR [ebp+0xc]
100582fc:	push   eax
100582fd:	lea    ecx,[ebp-0x10]
10058300:	push   ecx
10058301:	mov    ecx,DWORD PTR [ebp-0x14]
10058304:	call   DWORD PTR [ebp-0xc]
10058307:	jmp    0x10058329
10058309:	mov    DWORD PTR [ebp-0x8],0x52f6
10058310:	mov    DWORD PTR [ebp-0x4],0x10057ef0
10058317:	mov    edx,DWORD PTR [ebp+0x10]
1005831a:	push   edx
1005831b:	mov    eax,DWORD PTR [ebp+0xc]
1005831e:	push   eax
1005831f:	lea    ecx,[ebp-0x8]
10058322:	push   ecx
10058323:	mov    ecx,DWORD PTR [ebp-0x14]
10058326:	call   DWORD PTR [ebp-0x4]
10058329:	mov    esp,ebp
1005832b:	pop    ebp
1005832c:	ret    0xc
1005832f:	int3   
10058330:	push   ebp
10058331:	mov    ebp,esp
10058333:	sub    esp,0x14
10058336:	mov    DWORD PTR [ebp-0x14],ecx
10058339:	mov    eax,DWORD PTR [ebp+0x10]
1005833c:	movzx  ecx,BYTE PTR [eax+0x1]
10058340:	and    ecx,0x38
10058343:	test   ecx,ecx
10058345:	jne    0x10058369
10058347:	mov    DWORD PTR [ebp-0x10],0x66f7
1005834e:	mov    DWORD PTR [ebp-0xc],0x10057ef0
10058355:	mov    edx,DWORD PTR [ebp+0x10]
10058358:	push   edx
10058359:	mov    eax,DWORD PTR [ebp+0xc]
1005835c:	push   eax
1005835d:	lea    ecx,[ebp-0x10]
10058360:	push   ecx
10058361:	mov    ecx,DWORD PTR [ebp-0x14]
10058364:	call   DWORD PTR [ebp-0xc]
10058367:	jmp    0x10058389
10058369:	mov    DWORD PTR [ebp-0x8],0x52f7
10058370:	mov    DWORD PTR [ebp-0x4],0x10057ef0
10058377:	mov    edx,DWORD PTR [ebp+0x10]
1005837a:	push   edx
1005837b:	mov    eax,DWORD PTR [ebp+0xc]
1005837e:	push   eax
1005837f:	lea    ecx,[ebp-0x8]
10058382:	push   ecx
10058383:	mov    ecx,DWORD PTR [ebp-0x14]
10058386:	call   DWORD PTR [ebp-0x4]
10058389:	mov    esp,ebp
1005838b:	pop    ebp
1005838c:	ret    0xc
1005838f:	int3   
10058390:	push   ebp
10058391:	mov    ebp,esp
10058393:	sub    esp,0x10
10058396:	mov    DWORD PTR [ebp-0x10],ecx
10058399:	mov    eax,DWORD PTR [ebp+0x10]
1005839c:	movzx  ecx,BYTE PTR [eax+0x1]
100583a0:	cmp    ecx,0x15
100583a3:	je     0x100583b1
100583a5:	mov    edx,DWORD PTR [ebp+0x10]
100583a8:	movzx  eax,BYTE PTR [edx+0x1]
100583ac:	cmp    eax,0x25
100583af:	jne    0x100583c9
100583b1:	mov    ecx,DWORD PTR [ebp+0x10]
100583b4:	mov    edx,DWORD PTR [ecx+0x2]
100583b7:	mov    DWORD PTR [ebp-0xc],edx
100583ba:	mov    eax,DWORD PTR [ebp-0x10]
100583bd:	mov    ecx,DWORD PTR [eax+0x8]
100583c0:	mov    edx,DWORD PTR [ebp-0xc]
100583c3:	mov    eax,DWORD PTR [edx]
100583c5:	mov    DWORD PTR [ecx],eax
100583c7:	jmp    0x10058411
100583c9:	mov    ecx,DWORD PTR [ebp+0x10]
100583cc:	movzx  edx,BYTE PTR [ecx+0x1]
100583d0:	and    edx,0x38
100583d3:	cmp    edx,0x10
100583d6:	je     0x10058405
100583d8:	mov    eax,DWORD PTR [ebp+0x10]
100583db:	movzx  ecx,BYTE PTR [eax+0x1]
100583df:	and    ecx,0x38
100583e2:	cmp    ecx,0x18
100583e5:	je     0x10058405
100583e7:	mov    edx,DWORD PTR [ebp+0x10]
100583ea:	movzx  eax,BYTE PTR [edx+0x1]
100583ee:	and    eax,0x38
100583f1:	cmp    eax,0x20
100583f4:	je     0x10058405
100583f6:	mov    ecx,DWORD PTR [ebp+0x10]
100583f9:	movzx  edx,BYTE PTR [ecx+0x1]
100583fd:	and    edx,0x38
10058400:	cmp    edx,0x28
10058403:	jne    0x10058411
10058405:	mov    eax,DWORD PTR [ebp-0x10]
10058408:	mov    ecx,DWORD PTR [eax+0x8]
1005840b:	mov    DWORD PTR [ecx],0xffffffff
10058411:	mov    DWORD PTR [ebp-0x8],0x52ff
10058418:	mov    DWORD PTR [ebp-0x4],0x10057ef0
1005841f:	mov    edx,DWORD PTR [ebp+0x10]
10058422:	push   edx
10058423:	mov    eax,DWORD PTR [ebp+0xc]
10058426:	push   eax
10058427:	lea    ecx,[ebp-0x8]
1005842a:	push   ecx
1005842b:	mov    ecx,DWORD PTR [ebp-0x10]
1005842e:	call   DWORD PTR [ebp-0x4]
10058431:	mov    esp,ebp
10058433:	pop    ebp
10058434:	ret    0xc
10058437:	mov    eax,DWORD PTR [esp+0x4]
1005843b:	mov    dx,WORD PTR [esp+0x8]
10058440:	jmp    0x10058449
10058442:	cmp    cx,dx
10058445:	je     0x10058458
10058447:	inc    eax
10058448:	inc    eax
10058449:	movzx  ecx,WORD PTR [eax]
1005844c:	test   cx,cx
1005844f:	jne    0x10058442
10058451:	cmp    WORD PTR [eax],dx
10058454:	je     0x10058458
10058456:	xor    eax,eax
10058458:	ret    
10058459:	push   ebp
1005845a:	mov    ebp,esp
1005845c:	sub    esp,0x14
1005845f:	push   ebx
10058460:	push   esi
10058461:	push   edi
10058462:	mov    edi,DWORD PTR [ebp+0x8]
10058465:	xor    ebx,ebx
10058467:	cmp    edi,ebx
10058469:	je     0x1005848c
1005846b:	cmp    DWORD PTR [ebp+0xc],ebx
1005846e:	jbe    0x10058491
10058470:	cmp    edi,ebx
10058472:	je     0x10058530
10058478:	push   DWORD PTR [ebp+0xc]
1005847b:	push   edi
1005847c:	call   0x1005096e
10058481:	cmp    eax,DWORD PTR [ebp+0xc]
10058484:	pop    ecx
10058485:	pop    ecx
10058486:	jb     0x100584af
10058488:	mov    BYTE PTR [edi],bl
1005848a:	jmp    0x10058491
1005848c:	cmp    DWORD PTR [ebp+0xc],ebx
1005848f:	je     0x10058470
10058491:	call   0x10046c45
10058496:	push   0x16
10058498:	pop    esi
10058499:	push   ebx
1005849a:	push   ebx
1005849b:	push   ebx
1005849c:	push   ebx
1005849d:	push   ebx
1005849e:	mov    DWORD PTR [eax],esi
100584a0:	call   0x1004347c
100584a5:	add    esp,0x14
100584a8:	mov    eax,esi
100584aa:	jmp    0x10058532
100584af:	push   DWORD PTR [ebp+0x10]
100584b2:	lea    ecx,[ebp-0x14]
100584b5:	call   0x100455d5
100584ba:	mov    esi,edi
100584bc:	cmp    BYTE PTR [esi],bl
100584be:	je     0x10058522
100584c0:	mov    cl,BYTE PTR [edi]
100584c2:	mov    edx,DWORD PTR [ebp-0x10]
100584c5:	movzx  eax,cl
100584c8:	add    eax,edx
100584ca:	mov    dl,BYTE PTR [eax+0x1d]
100584cd:	test   dl,0x4
100584d0:	je     0x1005850b
100584d2:	mov    eax,DWORD PTR [ebp-0x10]
100584d5:	push   0x1
100584d7:	push   DWORD PTR [eax+0x4]
100584da:	lea    ecx,[ebp-0x4]
100584dd:	push   0x2
100584df:	push   ecx
100584e0:	push   0x2
100584e2:	push   edi
100584e3:	push   0x100
100584e8:	push   DWORD PTR [eax+0xc]
100584eb:	lea    eax,[ebp-0x14]
100584ee:	push   eax
100584ef:	call   0x1004b36c
100584f4:	add    esp,0x24
100584f7:	cmp    eax,ebx
100584f9:	je     0x10058537
100584fb:	mov    ecx,DWORD PTR [ebp-0x4]
100584fe:	mov    BYTE PTR [esi],cl
10058500:	inc    esi
10058501:	inc    edi
10058502:	cmp    eax,0x1
10058505:	jle    0x1005851d
10058507:	mov    BYTE PTR [esi],ch
10058509:	jmp    0x1005851c
1005850b:	test   dl,0x10
1005850e:	je     0x10058518
10058510:	mov    al,BYTE PTR [eax+0x11d]
10058516:	jmp    0x1005851a
10058518:	mov    al,cl
1005851a:	mov    BYTE PTR [esi],al
1005851c:	inc    esi
1005851d:	inc    edi
1005851e:	cmp    BYTE PTR [edi],bl
10058520:	jne    0x100584c0
10058522:	cmp    BYTE PTR [ebp-0x8],bl
10058525:	mov    BYTE PTR [esi],bl
10058527:	je     0x10058530
10058529:	mov    eax,DWORD PTR [ebp-0xc]
1005852c:	and    DWORD PTR [eax+0x70],0xfffffffd
10058530:	xor    eax,eax
10058532:	pop    edi
10058533:	pop    esi
10058534:	pop    ebx
10058535:	leave  
10058536:	ret    
10058537:	call   0x10046c45
1005853c:	mov    DWORD PTR [eax],0x2a
10058542:	mov    eax,DWORD PTR [ebp+0x8]
10058545:	mov    BYTE PTR [eax],bl
10058547:	call   0x10046c45
1005854c:	cmp    BYTE PTR [ebp-0x8],bl
1005854f:	mov    eax,DWORD PTR [eax]
10058551:	je     0x10058532
10058553:	mov    ecx,DWORD PTR [ebp-0xc]
10058556:	and    DWORD PTR [ecx+0x70],0xfffffffd
1005855a:	jmp    0x10058532
1005855c:	push   0x0
1005855e:	push   DWORD PTR [esp+0xc]
10058562:	push   DWORD PTR [esp+0xc]
10058566:	call   0x10058459
1005856b:	add    esp,0xc
1005856e:	ret    
1005856f:	push   ebp
10058570:	mov    ebp,esp
10058572:	sub    esp,0x20
10058575:	push   ebx
10058576:	xor    ebx,ebx
10058578:	cmp    DWORD PTR [ebp+0xc],ebx
1005857b:	jne    0x1005859a
1005857d:	call   0x10046c45
10058582:	push   ebx
10058583:	push   ebx
10058584:	push   ebx
10058585:	push   ebx
10058586:	push   ebx
10058587:	mov    DWORD PTR [eax],0x16
1005858d:	call   0x1004347c
10058592:	add    esp,0x14
10058595:	or     eax,0xffffffff
10058598:	jmp    0x100585e7
1005859a:	mov    eax,DWORD PTR [ebp+0x8]
1005859d:	cmp    eax,ebx
1005859f:	je     0x1005857d
100585a1:	push   esi
100585a2:	mov    DWORD PTR [ebp-0x18],eax
100585a5:	mov    DWORD PTR [ebp-0x20],eax
100585a8:	lea    eax,[ebp+0x10]
100585ab:	push   eax
100585ac:	push   ebx
100585ad:	push   DWORD PTR [ebp+0xc]
100585b0:	lea    eax,[ebp-0x20]
100585b3:	push   eax
100585b4:	mov    DWORD PTR [ebp-0x1c],0x7fffffff
100585bb:	mov    DWORD PTR [ebp-0x14],0x42
100585c2:	call   0x1004d467
100585c7:	add    esp,0x10
100585ca:	dec    DWORD PTR [ebp-0x1c]
100585cd:	mov    esi,eax
100585cf:	js     0x100585d8
100585d1:	mov    eax,DWORD PTR [ebp-0x20]
100585d4:	mov    BYTE PTR [eax],bl
100585d6:	jmp    0x100585e4
100585d8:	lea    eax,[ebp-0x20]
100585db:	push   eax
100585dc:	push   ebx
100585dd:	call   0x100488bd
100585e2:	pop    ecx
100585e3:	pop    ecx
100585e4:	mov    eax,esi
100585e6:	pop    esi
100585e7:	pop    ebx
100585e8:	leave  
100585e9:	ret    
100585ea:	push   ebp
100585eb:	mov    ebp,esp
100585ed:	sub    esp,0x1c
100585f0:	mov    edx,DWORD PTR [ebp+0x10]
100585f3:	push   esi
100585f4:	mov    esi,DWORD PTR [ebp+0x8]
100585f7:	push   0xfffffffe
100585f9:	pop    eax
100585fa:	cmp    esi,eax
100585fc:	mov    DWORD PTR [ebp-0x14],eax
100585ff:	mov    DWORD PTR [ebp-0x1c],edx
10058602:	jne    0x1005861f
10058604:	call   0x10046c58
10058609:	and    DWORD PTR [eax],0x0
1005860c:	call   0x10046c45
10058611:	mov    DWORD PTR [eax],0x9
10058617:	or     eax,0xffffffff
1005861a:	jmp    0x10058b89
1005861f:	push   edi
10058620:	xor    edi,edi
10058622:	cmp    esi,edi
10058624:	jl     0x1005862e
10058626:	cmp    esi,DWORD PTR ds:0x10082464
1005862c:	jb     0x10058655
1005862e:	call   0x10046c58
10058633:	mov    DWORD PTR [eax],edi
10058635:	call   0x10046c45
1005863a:	push   edi
1005863b:	push   edi
1005863c:	push   edi
1005863d:	push   edi
1005863e:	push   edi
1005863f:	mov    DWORD PTR [eax],0x9
10058645:	call   0x1004347c
1005864a:	add    esp,0x14
1005864d:	or     eax,0xffffffff
10058650:	jmp    0x10058b88
10058655:	mov    eax,esi
10058657:	and    esi,0x1f
1005865a:	imul   esi,esi,0x28
1005865d:	sar    eax,0x5
10058660:	push   ebx
10058661:	lea    ebx,[eax*4+0x10082480]
10058668:	mov    eax,DWORD PTR [ebx]
1005866a:	add    eax,esi
1005866c:	mov    cl,BYTE PTR [eax+0x4]
1005866f:	test   cl,0x1
10058672:	jne    0x1005868b
10058674:	call   0x10046c58
10058679:	mov    DWORD PTR [eax],edi
1005867b:	call   0x10046c45
10058680:	mov    DWORD PTR [eax],0x9
10058686:	jmp    0x100587d2
1005868b:	cmp    edx,edi
1005868d:	mov    DWORD PTR [ebp-0x10],edi
10058690:	je     0x10058b85
10058696:	test   cl,0x2
10058699:	jne    0x10058b85
1005869f:	mov    ecx,DWORD PTR [ebp+0xc]
100586a2:	cmp    ecx,edi
100586a4:	je     0x100587c0
100586aa:	mov    al,BYTE PTR [eax+0x24]
100586ad:	add    al,al
100586af:	sar    al,1
100586b1:	mov    BYTE PTR [ebp-0x2],al
100586b4:	movsx  eax,al
100586b7:	dec    eax
100586b8:	je     0x100587b8
100586be:	dec    eax
100586bf:	jne    0x100586d3
100586c1:	mov    eax,edx
100586c3:	not    eax
100586c5:	test   al,0x1
100586c7:	je     0x100587c0
100586cd:	and    edx,0xfffffffe
100586d0:	mov    DWORD PTR [ebp+0x10],edx
100586d3:	mov    DWORD PTR [ebp-0xc],ecx
100586d6:	mov    ecx,DWORD PTR [ebx]
100586d8:	mov    eax,DWORD PTR [ebp-0xc]
100586db:	lea    edi,[esi+ecx*1]
100586de:	test   BYTE PTR [edi+0x4],0x48
100586e2:	je     0x1005875a
100586e4:	mov    cl,BYTE PTR [edi+0x5]
100586e7:	cmp    cl,0xa
100586ea:	je     0x1005875a
100586ec:	xor    edx,edx
100586ee:	cmp    DWORD PTR [ebp+0x10],edx
100586f1:	je     0x1005875a
100586f3:	mov    BYTE PTR [eax],cl
100586f5:	mov    ecx,DWORD PTR [ebx]
100586f7:	inc    eax
100586f8:	dec    DWORD PTR [ebp+0x10]
100586fb:	cmp    BYTE PTR [ebp-0x2],dl
100586fe:	mov    DWORD PTR [ebp-0x10],0x1
10058705:	mov    BYTE PTR [esi+ecx*1+0x5],0xa
1005870a:	je     0x1005875a
1005870c:	mov    ecx,DWORD PTR [ebx]
1005870e:	mov    cl,BYTE PTR [esi+ecx*1+0x25]
10058712:	cmp    cl,0xa
10058715:	je     0x1005875a
10058717:	cmp    DWORD PTR [ebp+0x10],edx
1005871a:	je     0x1005875a
1005871c:	mov    BYTE PTR [eax],cl
1005871e:	mov    ecx,DWORD PTR [ebx]
10058720:	inc    eax
10058721:	dec    DWORD PTR [ebp+0x10]
10058724:	cmp    BYTE PTR [ebp-0x2],0x1
10058728:	mov    DWORD PTR [ebp-0x10],0x2
1005872f:	mov    BYTE PTR [esi+ecx*1+0x25],0xa
10058734:	jne    0x1005875a
10058736:	mov    ecx,DWORD PTR [ebx]
10058738:	mov    cl,BYTE PTR [esi+ecx*1+0x26]
1005873c:	cmp    cl,0xa
1005873f:	je     0x1005875a
10058741:	cmp    DWORD PTR [ebp+0x10],edx
10058744:	je     0x1005875a
10058746:	mov    BYTE PTR [eax],cl
10058748:	mov    ecx,DWORD PTR [ebx]
1005874a:	inc    eax
1005874b:	dec    DWORD PTR [ebp+0x10]
1005874e:	mov    DWORD PTR [ebp-0x10],0x3
10058755:	mov    BYTE PTR [esi+ecx*1+0x26],0xa
1005875a:	push   0x0
1005875c:	lea    ecx,[ebp-0x18]
1005875f:	push   ecx
10058760:	push   DWORD PTR [ebp+0x10]
10058763:	push   eax
10058764:	mov    eax,DWORD PTR [ebx]
10058766:	push   DWORD PTR [esi+eax*1]
10058769:	call   DWORD PTR ds:0x100660d4
1005876f:	test   eax,eax
10058771:	je     0x10058b4f
10058777:	mov    edi,DWORD PTR [ebp-0x18]
1005877a:	test   edi,edi
1005877c:	jl     0x10058b4f
10058782:	cmp    edi,DWORD PTR [ebp+0x10]
10058785:	ja     0x10058b4f
1005878b:	mov    eax,DWORD PTR [ebx]
1005878d:	add    DWORD PTR [ebp-0x10],edi
10058790:	lea    eax,[esi+eax*1+0x4]
10058794:	test   BYTE PTR [eax],0x80
10058797:	je     0x100589ef
1005879d:	cmp    BYTE PTR [ebp-0x2],0x2
100587a1:	je     0x10058a19
100587a7:	test   edi,edi
100587a9:	je     0x10058824
100587ab:	mov    ecx,DWORD PTR [ebp-0xc]
100587ae:	cmp    BYTE PTR [ecx],0xa
100587b1:	jne    0x10058824
100587b3:	or     BYTE PTR [eax],0x4
100587b6:	jmp    0x10058827
100587b8:	mov    eax,edx
100587ba:	not    eax
100587bc:	test   al,0x1
100587be:	jne    0x100587e1
100587c0:	call   0x10046c58
100587c5:	mov    DWORD PTR [eax],edi
100587c7:	call   0x10046c45
100587cc:	mov    DWORD PTR [eax],0x16
100587d2:	push   edi
100587d3:	push   edi
100587d4:	push   edi
100587d5:	push   edi
100587d6:	push   edi
100587d7:	call   0x1004347c
100587dc:	add    esp,0x14
100587df:	jmp    0x1005881c
100587e1:	mov    eax,edx
100587e3:	push   0x4
100587e5:	pop    ecx
100587e6:	shr    eax,1
100587e8:	cmp    eax,ecx
100587ea:	mov    DWORD PTR [ebp+0x10],ecx
100587ed:	jb     0x100587f2
100587ef:	mov    DWORD PTR [ebp+0x10],eax
100587f2:	push   DWORD PTR [ebp+0x10]
100587f5:	call   0x10047512
100587fa:	cmp    eax,edi
100587fc:	pop    ecx
100587fd:	mov    DWORD PTR [ebp-0xc],eax
10058800:	jne    0x100586d6
10058806:	call   0x10046c45
1005880b:	mov    DWORD PTR [eax],0xc
10058811:	call   0x10046c58
10058816:	mov    DWORD PTR [eax],0x8
1005881c:	or     eax,0xffffffff
1005881f:	jmp    0x10058b87
10058824:	and    BYTE PTR [eax],0xfb
10058827:	mov    edi,DWORD PTR [ebp-0xc]
1005882a:	mov    eax,DWORD PTR [ebp-0x10]
1005882d:	add    eax,edi
1005882f:	cmp    edi,eax
10058831:	mov    DWORD PTR [ebp+0x10],edi
10058834:	mov    DWORD PTR [ebp-0x10],eax
10058837:	jae    0x1005890d
1005883d:	mov    ecx,DWORD PTR [ebp+0x10]
10058840:	mov    al,BYTE PTR [ecx]
10058842:	cmp    al,0x1a
10058844:	je     0x100588f8
1005884a:	cmp    al,0xd
1005884c:	je     0x1005885a
1005884e:	mov    BYTE PTR [edi],al
10058850:	inc    edi
10058851:	inc    ecx
10058852:	mov    DWORD PTR [ebp+0x10],ecx
10058855:	jmp    0x100588ea
1005885a:	mov    eax,DWORD PTR [ebp-0x10]
1005885d:	dec    eax
1005885e:	cmp    ecx,eax
10058860:	jae    0x10058879
10058862:	lea    eax,[ecx+0x1]
10058865:	cmp    BYTE PTR [eax],0xa
10058868:	jne    0x10058874
1005886a:	inc    ecx
1005886b:	inc    ecx
1005886c:	mov    DWORD PTR [ebp+0x10],ecx
1005886f:	mov    BYTE PTR [edi],0xa
10058872:	jmp    0x100588e9
10058874:	mov    DWORD PTR [ebp+0x10],eax
10058877:	jmp    0x100588e6
10058879:	inc    DWORD PTR [ebp+0x10]
1005887c:	push   0x0
1005887e:	lea    eax,[ebp-0x18]
10058881:	push   eax
10058882:	push   0x1
10058884:	lea    eax,[ebp-0x1]
10058887:	push   eax
10058888:	mov    eax,DWORD PTR [ebx]
1005888a:	push   DWORD PTR [esi+eax*1]
1005888d:	call   DWORD PTR ds:0x100660d4
10058893:	test   eax,eax
10058895:	jne    0x100588a1
10058897:	call   DWORD PTR ds:0x100660cc
1005889d:	test   eax,eax
1005889f:	jne    0x100588e6
100588a1:	cmp    DWORD PTR [ebp-0x18],0x0
100588a5:	je     0x100588e6
100588a7:	mov    eax,DWORD PTR [ebx]
100588a9:	test   BYTE PTR [esi+eax*1+0x4],0x48
100588ae:	je     0x100588c4
100588b0:	cmp    BYTE PTR [ebp-0x1],0xa
100588b4:	je     0x1005886f
100588b6:	mov    BYTE PTR [edi],0xd
100588b9:	mov    eax,DWORD PTR [ebx]
100588bb:	mov    cl,BYTE PTR [ebp-0x1]
100588be:	mov    BYTE PTR [esi+eax*1+0x5],cl
100588c2:	jmp    0x100588e9
100588c4:	cmp    edi,DWORD PTR [ebp-0xc]
100588c7:	jne    0x100588cf
100588c9:	cmp    BYTE PTR [ebp-0x1],0xa
100588cd:	je     0x1005886f
100588cf:	push   0x1
100588d1:	push   0xffffffff
100588d3:	push   0xffffffff
100588d5:	push   DWORD PTR [ebp+0x8]
100588d8:	call   0x1004c801
100588dd:	add    esp,0x10
100588e0:	cmp    BYTE PTR [ebp-0x1],0xa
100588e4:	je     0x100588ea
100588e6:	mov    BYTE PTR [edi],0xd
100588e9:	inc    edi
100588ea:	mov    eax,DWORD PTR [ebp-0x10]
100588ed:	cmp    DWORD PTR [ebp+0x10],eax
100588f0:	jb     0x1005883d
100588f6:	jmp    0x1005890d
100588f8:	mov    eax,DWORD PTR [ebx]
100588fa:	lea    eax,[esi+eax*1+0x4]
100588fe:	test   BYTE PTR [eax],0x40
10058901:	jne    0x10058908
10058903:	or     BYTE PTR [eax],0x2
10058906:	jmp    0x1005890d
10058908:	mov    al,BYTE PTR [ecx]
1005890a:	mov    BYTE PTR [edi],al
1005890c:	inc    edi
1005890d:	mov    eax,edi
1005890f:	sub    eax,DWORD PTR [ebp-0xc]
10058912:	cmp    BYTE PTR [ebp-0x2],0x1
10058916:	mov    DWORD PTR [ebp-0x10],eax
10058919:	jne    0x100589ef
1005891f:	test   eax,eax
10058921:	je     0x100589ef
10058927:	dec    edi
10058928:	mov    cl,BYTE PTR [edi]
1005892a:	test   cl,cl
1005892c:	js     0x10058934
1005892e:	inc    edi
1005892f:	jmp    0x100589ba
10058934:	xor    eax,eax
10058936:	inc    eax
10058937:	movzx  ecx,cl
1005893a:	jmp    0x1005894b
1005893c:	cmp    eax,0x4
1005893f:	jg     0x10058954
10058941:	cmp    edi,DWORD PTR [ebp-0xc]
10058944:	jb     0x10058954
10058946:	dec    edi
10058947:	movzx  ecx,BYTE PTR [edi]
1005894a:	inc    eax
1005894b:	cmp    BYTE PTR [ecx+0x1007f0a0],0x0
10058952:	je     0x1005893c
10058954:	mov    dl,BYTE PTR [edi]
10058956:	movzx  ecx,dl
10058959:	movsx  ecx,BYTE PTR [ecx+0x1007f0a0]
10058960:	test   ecx,ecx
10058962:	jne    0x10058971
10058964:	call   0x10046c45
10058969:	mov    DWORD PTR [eax],0x2a
1005896f:	jmp    0x100589eb
10058971:	inc    ecx
10058972:	cmp    ecx,eax
10058974:	jne    0x1005897a
10058976:	add    edi,eax
10058978:	jmp    0x100589ba
1005897a:	mov    ecx,DWORD PTR [ebx]
1005897c:	add    ecx,esi
1005897e:	test   BYTE PTR [ecx+0x4],0x48
10058982:	je     0x100589a8
10058984:	inc    edi
10058985:	cmp    eax,0x2
10058988:	mov    BYTE PTR [ecx+0x5],dl
1005898b:	jl     0x10058996
1005898d:	mov    dl,BYTE PTR [edi]
1005898f:	mov    ecx,DWORD PTR [ebx]
10058991:	mov    BYTE PTR [esi+ecx*1+0x25],dl
10058995:	inc    edi
10058996:	cmp    eax,0x3
10058999:	jne    0x100589a4
1005899b:	mov    dl,BYTE PTR [edi]
1005899d:	mov    ecx,DWORD PTR [ebx]
1005899f:	mov    BYTE PTR [esi+ecx*1+0x26],dl
100589a3:	inc    edi
100589a4:	sub    edi,eax
100589a6:	jmp    0x100589ba
100589a8:	neg    eax
100589aa:	cdq    
100589ab:	push   0x1
100589ad:	push   edx
100589ae:	push   eax
100589af:	push   DWORD PTR [ebp+0x8]
100589b2:	call   0x1004c801
100589b7:	add    esp,0x10
100589ba:	mov    eax,DWORD PTR [ebp-0x1c]
100589bd:	sub    edi,DWORD PTR [ebp-0xc]
100589c0:	shr    eax,1
100589c2:	push   eax
100589c3:	push   DWORD PTR [ebp+0xc]
100589c6:	push   edi
100589c7:	push   DWORD PTR [ebp-0xc]
100589ca:	push   0x0
100589cc:	push   0xfde9
100589d1:	call   DWORD PTR ds:0x1006608c
100589d7:	test   eax,eax
100589d9:	mov    DWORD PTR [ebp-0x10],eax
100589dc:	jne    0x10058a12
100589de:	call   DWORD PTR ds:0x100660cc
100589e4:	push   eax
100589e5:	call   0x10046c6b
100589ea:	pop    ecx
100589eb:	or     DWORD PTR [ebp-0x14],0xffffffff
100589ef:	mov    eax,DWORD PTR [ebp-0xc]
100589f2:	cmp    eax,DWORD PTR [ebp+0xc]
100589f5:	je     0x100589fe
100589f7:	push   eax
100589f8:	call   0x100435f8
100589fd:	pop    ecx
100589fe:	mov    eax,DWORD PTR [ebp-0x14]
10058a01:	cmp    eax,0xfffffffe
10058a04:	jne    0x10058b87
10058a0a:	mov    eax,DWORD PTR [ebp-0x10]
10058a0d:	jmp    0x10058b87
10058a12:	add    eax,eax
10058a14:	mov    DWORD PTR [ebp-0x10],eax
10058a17:	jmp    0x100589ef
10058a19:	test   edi,edi
10058a1b:	je     0x10058a2b
10058a1d:	mov    ecx,DWORD PTR [ebp-0xc]
10058a20:	cmp    WORD PTR [ecx],0xa
10058a24:	jne    0x10058a2b
10058a26:	or     BYTE PTR [eax],0x4
10058a29:	jmp    0x10058a2e
10058a2b:	and    BYTE PTR [eax],0xfb
10058a2e:	mov    edi,DWORD PTR [ebp-0xc]
10058a31:	mov    eax,DWORD PTR [ebp-0x10]
10058a34:	add    eax,edi
10058a36:	cmp    edi,eax
10058a38:	mov    DWORD PTR [ebp+0x10],edi
10058a3b:	mov    DWORD PTR [ebp-0x10],eax
10058a3e:	jae    0x10058b44
10058a44:	mov    eax,DWORD PTR [ebp+0x10]
10058a47:	movzx  ecx,WORD PTR [eax]
10058a4a:	cmp    cx,0x1a
10058a4e:	je     0x10058b2c
10058a54:	cmp    cx,0xd
10058a58:	je     0x10058a69
10058a5a:	mov    WORD PTR [edi],cx
10058a5d:	inc    edi
10058a5e:	inc    edi
10058a5f:	inc    eax
10058a60:	inc    eax
10058a61:	mov    DWORD PTR [ebp+0x10],eax
10058a64:	jmp    0x10058b1e
10058a69:	mov    ecx,DWORD PTR [ebp-0x10]
10058a6c:	add    ecx,0xfffffffe
10058a6f:	cmp    eax,ecx
10058a71:	jae    0x10058a94
10058a73:	lea    ecx,[eax+0x2]
10058a76:	cmp    WORD PTR [ecx],0xa
10058a7a:	jne    0x10058a8c
10058a7c:	add    eax,0x4
10058a7f:	mov    DWORD PTR [ebp+0x10],eax
10058a82:	mov    WORD PTR [edi],0xa
10058a87:	jmp    0x10058b1c
10058a8c:	mov    DWORD PTR [ebp+0x10],ecx
10058a8f:	jmp    0x10058b17
10058a94:	add    DWORD PTR [ebp+0x10],0x2
10058a98:	push   0x0
10058a9a:	lea    eax,[ebp-0x18]
10058a9d:	push   eax
10058a9e:	push   0x2
10058aa0:	lea    eax,[ebp-0x8]
10058aa3:	push   eax
10058aa4:	mov    eax,DWORD PTR [ebx]
10058aa6:	push   DWORD PTR [esi+eax*1]
10058aa9:	call   DWORD PTR ds:0x100660d4
10058aaf:	test   eax,eax
10058ab1:	jne    0x10058abd
10058ab3:	call   DWORD PTR ds:0x100660cc
10058ab9:	test   eax,eax
10058abb:	jne    0x10058b17
10058abd:	cmp    DWORD PTR [ebp-0x18],0x0
10058ac1:	je     0x10058b17
10058ac3:	mov    eax,DWORD PTR [ebx]
10058ac5:	test   BYTE PTR [esi+eax*1+0x4],0x48
10058aca:	je     0x10058af3
10058acc:	cmp    WORD PTR [ebp-0x8],0xa
10058ad1:	je     0x10058a82
10058ad3:	mov    WORD PTR [edi],0xd
10058ad8:	mov    eax,DWORD PTR [ebx]
10058ada:	mov    cl,BYTE PTR [ebp-0x8]
10058add:	mov    BYTE PTR [esi+eax*1+0x5],cl
10058ae1:	mov    eax,DWORD PTR [ebx]
10058ae3:	mov    cl,BYTE PTR [ebp-0x7]
10058ae6:	mov    BYTE PTR [esi+eax*1+0x25],cl
10058aea:	mov    eax,DWORD PTR [ebx]
10058aec:	mov    BYTE PTR [esi+eax*1+0x26],0xa
10058af1:	jmp    0x10058b1c
10058af3:	cmp    edi,DWORD PTR [ebp-0xc]
10058af6:	jne    0x10058aff
10058af8:	cmp    WORD PTR [ebp-0x8],0xa
10058afd:	je     0x10058a82
10058aff:	push   0x1
10058b01:	push   0xffffffff
10058b03:	push   0xfffffffe
10058b05:	push   DWORD PTR [ebp+0x8]
10058b08:	call   0x1004c801
10058b0d:	add    esp,0x10
10058b10:	cmp    WORD PTR [ebp-0x8],0xa
10058b15:	je     0x10058b1e
10058b17:	mov    WORD PTR [edi],0xd
10058b1c:	inc    edi
10058b1d:	inc    edi
10058b1e:	mov    eax,DWORD PTR [ebp-0x10]
10058b21:	cmp    DWORD PTR [ebp+0x10],eax
10058b24:	jb     0x10058a44
10058b2a:	jmp    0x10058b44
10058b2c:	mov    ecx,DWORD PTR [ebx]
10058b2e:	lea    esi,[esi+ecx*1+0x4]
10058b32:	test   BYTE PTR [esi],0x40
10058b35:	jne    0x10058b3c
10058b37:	or     BYTE PTR [esi],0x2
10058b3a:	jmp    0x10058b44
10058b3c:	mov    ax,WORD PTR [eax]
10058b3f:	mov    WORD PTR [edi],ax
10058b42:	inc    edi
10058b43:	inc    edi
10058b44:	sub    edi,DWORD PTR [ebp-0xc]
10058b47:	mov    DWORD PTR [ebp-0x10],edi
10058b4a:	jmp    0x100589ef
10058b4f:	call   DWORD PTR ds:0x100660cc
10058b55:	push   0x5
10058b57:	pop    esi
10058b58:	cmp    eax,esi
10058b5a:	jne    0x10058b73
10058b5c:	call   0x10046c45
10058b61:	mov    DWORD PTR [eax],0x9
10058b67:	call   0x10046c58
10058b6c:	mov    DWORD PTR [eax],esi
10058b6e:	jmp    0x100589eb
10058b73:	cmp    eax,0x6d
10058b76:	jne    0x100589e4
10058b7c:	and    DWORD PTR [ebp-0x14],0x0
10058b80:	jmp    0x100589ef
10058b85:	xor    eax,eax
10058b87:	pop    ebx
10058b88:	pop    edi
10058b89:	pop    esi
10058b8a:	leave  
10058b8b:	ret    
10058b8c:	push   0x10
10058b8e:	push   0x10074b48
10058b93:	call   0x10046d84
10058b98:	mov    eax,DWORD PTR [ebp+0x8]
10058b9b:	cmp    eax,0xfffffffe
10058b9e:	jne    0x10058bbb
10058ba0:	call   0x10046c58
10058ba5:	and    DWORD PTR [eax],0x0
10058ba8:	call   0x10046c45
10058bad:	mov    DWORD PTR [eax],0x9
10058bb3:	or     eax,0xffffffff
10058bb6:	jmp    0x10058c58
10058bbb:	xor    edi,edi
10058bbd:	cmp    eax,edi
10058bbf:	jl     0x10058bc9
10058bc1:	cmp    eax,DWORD PTR ds:0x10082464
10058bc7:	jb     0x10058bea
10058bc9:	call   0x10046c58
10058bce:	mov    DWORD PTR [eax],edi
10058bd0:	call   0x10046c45
10058bd5:	mov    DWORD PTR [eax],0x9
10058bdb:	push   edi
10058bdc:	push   edi
10058bdd:	push   edi
10058bde:	push   edi
10058bdf:	push   edi
10058be0:	call   0x1004347c
10058be5:	add    esp,0x14
10058be8:	jmp    0x10058bb3
10058bea:	mov    ecx,eax
10058bec:	sar    ecx,0x5
10058bef:	lea    ebx,[ecx*4+0x10082480]
10058bf6:	mov    esi,eax
10058bf8:	and    esi,0x1f
10058bfb:	imul   esi,esi,0x28
10058bfe:	mov    ecx,DWORD PTR [ebx]
10058c00:	movzx  ecx,BYTE PTR [ecx+esi*1+0x4]
10058c05:	and    ecx,0x1
10058c08:	je     0x10058bc9
10058c0a:	push   eax
10058c0b:	call   0x1004fac0
10058c10:	pop    ecx
10058c11:	mov    DWORD PTR [ebp-0x4],edi
10058c14:	mov    eax,DWORD PTR [ebx]
10058c16:	test   BYTE PTR [eax+esi*1+0x4],0x1
10058c1b:	je     0x10058c33
10058c1d:	push   DWORD PTR [ebp+0x10]
10058c20:	push   DWORD PTR [ebp+0xc]
10058c23:	push   DWORD PTR [ebp+0x8]
10058c26:	call   0x100585ea
10058c2b:	add    esp,0xc
10058c2e:	mov    DWORD PTR [ebp-0x1c],eax
10058c31:	jmp    0x10058c49
10058c33:	call   0x10046c45
10058c38:	mov    DWORD PTR [eax],0x9
10058c3e:	call   0x10046c58
10058c43:	mov    DWORD PTR [eax],edi
10058c45:	or     DWORD PTR [ebp-0x1c],0xffffffff
10058c49:	mov    DWORD PTR [ebp-0x4],0xfffffffe
10058c50:	call   0x10058c5e
10058c55:	mov    eax,DWORD PTR [ebp-0x1c]
10058c58:	call   0x10046dc9
10058c5d:	ret    
10058c5e:	push   DWORD PTR [ebp+0x8]
10058c61:	call   0x1004fb60
10058c66:	pop    ecx
10058c67:	ret    
10058c68:	push   0xc
10058c6a:	push   0x10074b68
10058c6f:	call   0x10046d84
10058c74:	xor    ebx,ebx
10058c76:	mov    DWORD PTR [ebp-0x1c],ebx
10058c79:	xor    eax,eax
10058c7b:	mov    edi,DWORD PTR [ebp+0x8]
10058c7e:	cmp    edi,ebx
10058c80:	setne  al
10058c83:	cmp    eax,ebx
10058c85:	jne    0x10058ca3
10058c87:	call   0x10046c45
10058c8c:	mov    DWORD PTR [eax],0x16
10058c92:	push   ebx
10058c93:	push   ebx
10058c94:	push   ebx
10058c95:	push   ebx
10058c96:	push   ebx
10058c97:	call   0x1004347c
10058c9c:	add    esp,0x14
10058c9f:	xor    eax,eax
10058ca1:	jmp    0x10058d1c
10058ca3:	xor    eax,eax
10058ca5:	mov    esi,DWORD PTR [ebp+0xc]
10058ca8:	cmp    esi,ebx
10058caa:	setne  al
10058cad:	cmp    eax,ebx
10058caf:	je     0x10058c87
10058cb1:	xor    eax,eax
10058cb3:	cmp    BYTE PTR [esi],bl
10058cb5:	setne  al
10058cb8:	cmp    eax,ebx
10058cba:	je     0x10058c87
10058cbc:	call   0x1005a71b
10058cc1:	mov    DWORD PTR [ebp+0x8],eax
10058cc4:	cmp    eax,ebx
10058cc6:	jne    0x10058cd5
10058cc8:	call   0x10046c45
10058ccd:	mov    DWORD PTR [eax],0x18
10058cd3:	jmp    0x10058c9f
10058cd5:	mov    DWORD PTR [ebp-0x4],ebx
10058cd8:	cmp    BYTE PTR [edi],bl
10058cda:	jne    0x10058cfc
10058cdc:	call   0x10046c45
10058ce1:	mov    DWORD PTR [eax],0x16
10058ce7:	push   0xfffffffe
10058ce9:	lea    eax,[ebp-0x10]
10058cec:	push   eax
10058ced:	push   0x1007e030
10058cf2:	call   0x1004c20c
10058cf7:	add    esp,0xc
10058cfa:	jmp    0x10058c9f
10058cfc:	push   eax
10058cfd:	push   DWORD PTR [ebp+0x10]
10058d00:	push   esi
10058d01:	push   edi
10058d02:	call   0x1005a479
10058d07:	add    esp,0x10
10058d0a:	mov    DWORD PTR [ebp-0x1c],eax
10058d0d:	mov    DWORD PTR [ebp-0x4],0xfffffffe
10058d14:	call   0x10058d22
10058d19:	mov    eax,DWORD PTR [ebp-0x1c]
10058d1c:	call   0x10046dc9
10058d21:	ret    
10058d22:	push   DWORD PTR [ebp+0x8]
10058d25:	call   0x1004d20a
10058d2a:	pop    ecx
10058d2b:	ret    
10058d2c:	push   0x40
10058d2e:	push   DWORD PTR [esp+0xc]
10058d32:	push   DWORD PTR [esp+0xc]
10058d36:	call   0x10058c68
10058d3b:	add    esp,0xc
10058d3e:	ret    
10058d3f:	push   ebp
10058d40:	mov    ebp,esp
10058d42:	sub    esp,0x18
10058d45:	push   ebx
10058d46:	push   DWORD PTR [ebp+0xc]
10058d49:	lea    ecx,[ebp-0x18]
10058d4c:	call   0x100455d5
10058d51:	mov    ebx,DWORD PTR [ebp+0x8]
10058d54:	cmp    ebx,0x100
10058d5a:	jae    0x10058db0
10058d5c:	mov    ecx,DWORD PTR [ebp-0x18]
10058d5f:	cmp    DWORD PTR [ecx+0xac],0x1
10058d66:	jle    0x10058d7c
10058d68:	lea    eax,[ebp-0x18]
10058d6b:	push   eax
10058d6c:	push   0x2
10058d6e:	push   ebx
10058d6f:	call   0x1004b3f3
10058d74:	mov    ecx,DWORD PTR [ebp-0x18]
10058d77:	add    esp,0xc
10058d7a:	jmp    0x10058d89
10058d7c:	mov    eax,DWORD PTR [ecx+0xc8]
10058d82:	movzx  eax,BYTE PTR [eax+ebx*2]
10058d86:	and    eax,0x2
10058d89:	test   eax,eax
10058d8b:	je     0x10058d9c
10058d8d:	mov    eax,DWORD PTR [ecx+0xd0]
10058d93:	movzx  eax,BYTE PTR [eax+ebx*1]
10058d97:	jmp    0x10058e47
10058d9c:	cmp    BYTE PTR [ebp-0xc],0x0
10058da0:	je     0x10058da9
10058da2:	mov    eax,DWORD PTR [ebp-0x10]
10058da5:	and    DWORD PTR [eax+0x70],0xfffffffd
10058da9:	mov    eax,ebx
10058dab:	jmp    0x10058e54
10058db0:	mov    eax,DWORD PTR [ebp-0x18]
10058db3:	cmp    DWORD PTR [eax+0xac],0x1
10058dba:	jle    0x10058ded
10058dbc:	mov    DWORD PTR [ebp+0x8],ebx
10058dbf:	sar    DWORD PTR [ebp+0x8],0x8
10058dc3:	lea    eax,[ebp-0x18]
10058dc6:	push   eax
10058dc7:	mov    eax,DWORD PTR [ebp+0x8]
10058dca:	and    eax,0xff
10058dcf:	push   eax
10058dd0:	call   0x1004b3af
10058dd5:	test   eax,eax
10058dd7:	pop    ecx
10058dd8:	pop    ecx
10058dd9:	je     0x10058ded
10058ddb:	mov    al,BYTE PTR [ebp+0x8]
10058dde:	push   0x2
10058de0:	mov    BYTE PTR [ebp-0x4],al
10058de3:	mov    BYTE PTR [ebp-0x3],bl
10058de6:	mov    BYTE PTR [ebp-0x2],0x0
10058dea:	pop    ecx
10058deb:	jmp    0x10058e02
10058ded:	call   0x10046c45
10058df2:	mov    DWORD PTR [eax],0x2a
10058df8:	xor    ecx,ecx
10058dfa:	mov    BYTE PTR [ebp-0x4],bl
10058dfd:	mov    BYTE PTR [ebp-0x3],0x0
10058e01:	inc    ecx
10058e02:	mov    eax,DWORD PTR [ebp-0x18]
10058e05:	push   0x1
10058e07:	push   DWORD PTR [eax+0x4]
10058e0a:	lea    edx,[ebp-0x8]
10058e0d:	push   0x3
10058e0f:	push   edx
10058e10:	push   ecx
10058e11:	lea    ecx,[ebp-0x4]
10058e14:	push   ecx
10058e15:	push   0x200
10058e1a:	push   DWORD PTR [eax+0x14]
10058e1d:	lea    eax,[ebp-0x18]
10058e20:	push   eax
10058e21:	call   0x1004b36c
10058e26:	add    esp,0x24
10058e29:	test   eax,eax
10058e2b:	je     0x10058d9c
10058e31:	cmp    eax,0x1
10058e34:	jne    0x10058e3c
10058e36:	movzx  eax,BYTE PTR [ebp-0x8]
10058e3a:	jmp    0x10058e47
10058e3c:	movzx  ecx,BYTE PTR [ebp-0x7]
10058e40:	xor    eax,eax
10058e42:	mov    ah,BYTE PTR [ebp-0x8]
10058e45:	or     eax,ecx
10058e47:	cmp    BYTE PTR [ebp-0xc],0x0
10058e4b:	je     0x10058e54
10058e4d:	mov    ecx,DWORD PTR [ebp-0x10]
10058e50:	and    DWORD PTR [ecx+0x70],0xfffffffd
10058e54:	pop    ebx
10058e55:	leave  
10058e56:	ret    
10058e57:	cmp    DWORD PTR ds:0x100802c8,0x0
10058e5e:	jne    0x10058e70
10058e60:	mov    eax,DWORD PTR [esp+0x4]
10058e64:	lea    ecx,[eax-0x61]
10058e67:	cmp    ecx,0x19
10058e6a:	ja     0x10058e7d
10058e6c:	add    eax,0xffffffe0
10058e6f:	ret    
10058e70:	push   0x0
10058e72:	push   DWORD PTR [esp+0x8]
10058e76:	call   0x10058d3f
10058e7b:	pop    ecx
10058e7c:	pop    ecx
10058e7d:	ret    
10058e7e:	push   esi
10058e7f:	mov    esi,DWORD PTR [esp+0x8]
10058e83:	push   esi
10058e84:	call   0x1004fa4f
10058e89:	cmp    eax,0xffffffff
10058e8c:	pop    ecx
10058e8d:	jne    0x10058e9f
10058e8f:	call   0x10046c45
10058e94:	mov    DWORD PTR [eax],0x9
10058e9a:	or     eax,0xffffffff
10058e9d:	pop    esi
10058e9e:	ret    
10058e9f:	push   edi
10058ea0:	push   DWORD PTR [esp+0x14]
10058ea4:	push   0x0
10058ea6:	push   DWORD PTR [esp+0x18]
10058eaa:	push   eax
10058eab:	call   DWORD PTR ds:0x10066224
10058eb1:	mov    edi,eax
10058eb3:	cmp    edi,0xffffffff
10058eb6:	jne    0x10058ec0
10058eb8:	call   DWORD PTR ds:0x100660cc
10058ebe:	jmp    0x10058ec2
10058ec0:	xor    eax,eax
10058ec2:	test   eax,eax
10058ec4:	je     0x10058ed2
10058ec6:	push   eax
10058ec7:	call   0x10046c6b
10058ecc:	pop    ecx
10058ecd:	or     eax,0xffffffff
10058ed0:	jmp    0x10058eed
10058ed2:	mov    eax,esi
10058ed4:	and    esi,0x1f
10058ed7:	imul   esi,esi,0x28
10058eda:	sar    eax,0x5
10058edd:	mov    eax,DWORD PTR [eax*4+0x10082480]
10058ee4:	lea    eax,[eax+esi*1+0x4]
10058ee8:	and    BYTE PTR [eax],0xfd
10058eeb:	mov    eax,edi
10058eed:	pop    edi
10058eee:	pop    esi
10058eef:	ret    
10058ef0:	push   ebp
10058ef1:	mov    ebp,esp
10058ef3:	sub    esp,0x14
10058ef6:	push   ebx
10058ef7:	push   DWORD PTR [ebp+0x10]
10058efa:	lea    ecx,[ebp-0x14]
10058efd:	call   0x100455d5
10058f02:	xor    ebx,ebx
10058f04:	cmp    DWORD PTR [ebp+0x8],ebx
10058f07:	jne    0x10058f37
10058f09:	call   0x10046c45
10058f0e:	push   ebx
10058f0f:	push   ebx
10058f10:	push   ebx
10058f11:	push   ebx
10058f12:	push   ebx
10058f13:	mov    DWORD PTR [eax],0x16
10058f19:	call   0x1004347c
10058f1e:	add    esp,0x14
10058f21:	cmp    BYTE PTR [ebp-0x8],bl
10058f24:	je     0x10058f2d
10058f26:	mov    eax,DWORD PTR [ebp-0xc]
10058f29:	and    DWORD PTR [eax+0x70],0xfffffffd
10058f2d:	mov    eax,0x7fffffff
10058f32:	jmp    0x10058ff5
10058f37:	push   esi
10058f38:	mov    esi,DWORD PTR [ebp+0xc]
10058f3b:	cmp    esi,ebx
10058f3d:	jne    0x10058f6d
10058f3f:	call   0x10046c45
10058f44:	push   ebx
10058f45:	push   ebx
10058f46:	push   ebx
10058f47:	push   ebx
10058f48:	push   ebx
10058f49:	mov    DWORD PTR [eax],0x16
10058f4f:	call   0x1004347c
10058f54:	add    esp,0x14
10058f57:	cmp    BYTE PTR [ebp-0x8],bl
10058f5a:	je     0x10058f63
10058f5c:	mov    eax,DWORD PTR [ebp-0xc]
10058f5f:	and    DWORD PTR [eax+0x70],0xfffffffd
10058f63:	mov    eax,0x7fffffff
10058f68:	jmp    0x10058ff4
10058f6d:	push   edi
10058f6e:	mov    edi,DWORD PTR [ebp-0x10]
10058f71:	cmp    DWORD PTR [edi+0x8],ebx
10058f74:	jne    0x10058f83
10058f76:	push   esi
10058f77:	push   DWORD PTR [ebp+0x8]
10058f7a:	call   0x100479f0
10058f7f:	pop    ecx
10058f80:	pop    ecx
10058f81:	jmp    0x10058ffe
10058f83:	mov    eax,DWORD PTR [ebp+0x8]
10058f86:	movzx  cx,BYTE PTR [eax]
10058f8a:	movzx  ecx,cx
10058f8d:	movzx  edx,cl
10058f90:	inc    eax
10058f91:	test   BYTE PTR [edx+edi*1+0x1d],0x4
10058f96:	mov    DWORD PTR [ebp+0x8],eax
10058f99:	je     0x10058fb1
10058f9b:	mov    al,BYTE PTR [eax]
10058f9d:	cmp    al,bl
10058f9f:	jne    0x10058fa5
10058fa1:	xor    ecx,ecx
10058fa3:	jmp    0x10058fb1
10058fa5:	xor    edx,edx
10058fa7:	inc    DWORD PTR [ebp+0x8]
10058faa:	mov    dh,cl
10058fac:	mov    dl,al
10058fae:	movzx  ecx,dx
10058fb1:	movzx  ax,BYTE PTR [esi]
10058fb5:	movzx  eax,ax
10058fb8:	movzx  edx,al
10058fbb:	inc    esi
10058fbc:	test   BYTE PTR [edx+edi*1+0x1d],0x4
10058fc1:	je     0x10058fdb
10058fc3:	mov    dl,BYTE PTR [esi]
10058fc5:	cmp    dl,bl
10058fc7:	mov    BYTE PTR [ebp-0x1],dl
10058fca:	jne    0x10058fd0
10058fcc:	xor    eax,eax
10058fce:	jmp    0x10058fdb
10058fd0:	xor    edx,edx
10058fd2:	mov    dh,al
10058fd4:	inc    esi
10058fd5:	mov    dl,BYTE PTR [ebp-0x1]
10058fd8:	movzx  eax,dx
10058fdb:	cmp    ax,cx
10058fde:	jne    0x10058ff8
10058fe0:	cmp    cx,bx
10058fe3:	jne    0x10058f83
10058fe5:	cmp    BYTE PTR [ebp-0x8],bl
10058fe8:	je     0x10058ff1
10058fea:	mov    eax,DWORD PTR [ebp-0xc]
10058fed:	and    DWORD PTR [eax+0x70],0xfffffffd
10058ff1:	xor    eax,eax
10058ff3:	pop    edi
10058ff4:	pop    esi
10058ff5:	pop    ebx
10058ff6:	leave  
10058ff7:	ret    
10058ff8:	sbb    eax,eax
10058ffa:	and    eax,0x2
10058ffd:	dec    eax
10058ffe:	cmp    BYTE PTR [ebp-0x8],bl
10059001:	je     0x10058ff3
10059003:	mov    ecx,DWORD PTR [ebp-0xc]
10059006:	and    DWORD PTR [ecx+0x70],0xfffffffd
1005900a:	jmp    0x10058ff3
1005900c:	push   0x0
1005900e:	push   DWORD PTR [esp+0xc]
10059012:	push   DWORD PTR [esp+0xc]
10059016:	call   0x10058ef0
1005901b:	add    esp,0xc
1005901e:	ret    
1005901f:	push   ebp
10059020:	mov    ebp,esp
10059022:	sub    esp,0x20
10059025:	push   ebx
10059026:	xor    ebx,ebx
10059028:	cmp    DWORD PTR [ebp+0x14],ebx
1005902b:	jne    0x1005904d
1005902d:	call   0x10046c45
10059032:	push   ebx
10059033:	push   ebx
10059034:	push   ebx
10059035:	push   ebx
10059036:	push   ebx
10059037:	mov    DWORD PTR [eax],0x16
1005903d:	call   0x1004347c
10059042:	add    esp,0x14
10059045:	or     eax,0xffffffff
10059048:	jmp    0x100590e6
1005904d:	push   esi
1005904e:	mov    esi,DWORD PTR [ebp+0xc]
10059051:	push   edi
10059052:	mov    edi,DWORD PTR [ebp+0x10]
10059055:	cmp    edi,ebx
10059057:	je     0x1005907a
10059059:	cmp    esi,ebx
1005905b:	jne    0x1005907a
1005905d:	call   0x10046c45
10059062:	push   ebx
10059063:	push   ebx
10059064:	push   ebx
10059065:	push   ebx
10059066:	push   ebx
10059067:	mov    DWORD PTR [eax],0x16
1005906d:	call   0x1004347c
10059072:	add    esp,0x14
10059075:	or     eax,0xffffffff
10059078:	jmp    0x100590e4
1005907a:	mov    eax,0x7fffffff
1005907f:	cmp    edi,eax
10059081:	mov    DWORD PTR [ebp-0x1c],eax
10059084:	ja     0x10059089
10059086:	mov    DWORD PTR [ebp-0x1c],edi
10059089:	push   DWORD PTR [ebp+0x1c]
1005908c:	lea    eax,[ebp-0x20]
1005908f:	push   DWORD PTR [ebp+0x18]
10059092:	mov    DWORD PTR [ebp-0x14],0x42
10059099:	push   DWORD PTR [ebp+0x14]
1005909c:	mov    DWORD PTR [ebp-0x18],esi
1005909f:	push   eax
100590a0:	mov    DWORD PTR [ebp-0x20],esi
100590a3:	call   DWORD PTR [ebp+0x8]
100590a6:	add    esp,0x10
100590a9:	cmp    esi,ebx
100590ab:	mov    DWORD PTR [ebp+0x14],eax
100590ae:	je     0x100590e4
100590b0:	cmp    eax,ebx
100590b2:	jl     0x100590d6
100590b4:	dec    DWORD PTR [ebp-0x1c]
100590b7:	js     0x100590c0
100590b9:	mov    eax,DWORD PTR [ebp-0x20]
100590bc:	mov    BYTE PTR [eax],bl
100590be:	jmp    0x100590d1
100590c0:	lea    eax,[ebp-0x20]
100590c3:	push   eax
100590c4:	push   ebx
100590c5:	call   0x100488bd
100590ca:	cmp    eax,0xffffffff
100590cd:	pop    ecx
100590ce:	pop    ecx
100590cf:	je     0x100590d6
100590d1:	mov    eax,DWORD PTR [ebp+0x14]
100590d4:	jmp    0x100590e4
100590d6:	xor    eax,eax
100590d8:	cmp    DWORD PTR [ebp-0x1c],ebx
100590db:	mov    BYTE PTR [esi+edi*1-0x1],bl
100590df:	setge  al
100590e2:	dec    eax
100590e3:	dec    eax
100590e4:	pop    edi
100590e5:	pop    esi
100590e6:	pop    ebx
100590e7:	leave  
100590e8:	ret    
100590e9:	push   ebp
100590ea:	mov    ebp,esp
100590ec:	push   ebx
100590ed:	xor    ebx,ebx
100590ef:	cmp    DWORD PTR [ebp+0x10],ebx
100590f2:	jne    0x10059111
100590f4:	call   0x10046c45
100590f9:	push   ebx
100590fa:	push   ebx
100590fb:	push   ebx
100590fc:	push   ebx
100590fd:	push   ebx
100590fe:	mov    DWORD PTR [eax],0x16
10059104:	call   0x1004347c
10059109:	add    esp,0x14
1005910c:	or     eax,0xffffffff
1005910f:	jmp    0x1005916c
10059111:	push   esi
10059112:	mov    esi,DWORD PTR [ebp+0x8]
10059115:	cmp    esi,ebx
10059117:	je     0x1005911e
10059119:	cmp    DWORD PTR [ebp+0xc],ebx
1005911c:	ja     0x1005912b
1005911e:	call   0x10046c45
10059123:	mov    DWORD PTR [eax],0x16
10059129:	jmp    0x1005915b
1005912b:	push   DWORD PTR [ebp+0x18]
1005912e:	push   DWORD PTR [ebp+0x14]
10059131:	push   DWORD PTR [ebp+0x10]
10059134:	push   DWORD PTR [ebp+0xc]
10059137:	push   esi
10059138:	push   0x1004dfe0
1005913d:	call   0x1005901f
10059142:	add    esp,0x18
10059145:	cmp    eax,ebx
10059147:	jge    0x1005914b
10059149:	mov    BYTE PTR [esi],bl
1005914b:	cmp    eax,0xfffffffe
1005914e:	jne    0x1005916b
10059150:	call   0x10046c45
10059155:	mov    DWORD PTR [eax],0x22
1005915b:	push   ebx
1005915c:	push   ebx
1005915d:	push   ebx
1005915e:	push   ebx
1005915f:	push   ebx
10059160:	call   0x1004347c
10059165:	add    esp,0x14
10059168:	or     eax,0xffffffff
1005916b:	pop    esi
1005916c:	pop    ebx
1005916d:	pop    ebp
1005916e:	ret    
1005916f:	push   DWORD PTR [esp+0x10]
10059173:	push   0x0
10059175:	push   DWORD PTR [esp+0x14]
10059179:	push   DWORD PTR [esp+0x14]
1005917d:	push   DWORD PTR [esp+0x14]
10059181:	call   0x100590e9
10059186:	add    esp,0x14
10059189:	ret    
1005918a:	push   ebx
1005918b:	push   esi
1005918c:	mov    esi,DWORD PTR [esp+0xc]
10059190:	xor    ebx,ebx
10059192:	cmp    esi,ebx
10059194:	jne    0x100591b2
10059196:	call   0x10046c45
1005919b:	push   ebx
1005919c:	push   ebx
1005919d:	push   ebx
1005919e:	push   ebx
1005919f:	push   ebx
100591a0:	mov    DWORD PTR [eax],0x16
100591a6:	call   0x1004347c
100591ab:	add    esp,0x14
100591ae:	xor    eax,eax
100591b0:	jmp    0x100591c8
100591b2:	movzx  eax,BYTE PTR [esi]
100591b5:	push   eax
100591b6:	call   0x1004f7f0
100591bb:	inc    esi
100591bc:	test   eax,eax
100591be:	pop    ecx
100591bf:	je     0x100591c6
100591c1:	cmp    BYTE PTR [esi],bl
100591c3:	je     0x100591c6
100591c5:	inc    esi
100591c6:	mov    eax,esi
100591c8:	pop    esi
100591c9:	pop    ebx
100591ca:	ret    
100591cb:	push   ebp
100591cc:	mov    ebp,esp
100591ce:	sub    esp,0x20
100591d1:	push   esi
100591d2:	xor    esi,esi
100591d4:	cmp    DWORD PTR [ebp+0xc],esi
100591d7:	jne    0x100591f6
100591d9:	call   0x10046c45
100591de:	push   esi
100591df:	push   esi
100591e0:	push   esi
100591e1:	push   esi
100591e2:	push   esi
100591e3:	mov    DWORD PTR [eax],0x16
100591e9:	call   0x1004347c
100591ee:	add    esp,0x14
100591f1:	or     eax,0xffffffff
100591f4:	jmp    0x1005921d
100591f6:	push   DWORD PTR [ebp+0x14]
100591f9:	lea    eax,[ebp-0x20]
100591fc:	push   DWORD PTR [ebp+0x10]
100591ff:	mov    DWORD PTR [ebp-0x1c],0x7fffffff
10059206:	push   DWORD PTR [ebp+0xc]
10059209:	mov    DWORD PTR [ebp-0x14],0x42
10059210:	push   eax
10059211:	mov    DWORD PTR [ebp-0x18],esi
10059214:	mov    DWORD PTR [ebp-0x20],esi
10059217:	call   DWORD PTR [ebp+0x8]
1005921a:	add    esp,0x10
1005921d:	pop    esi
1005921e:	leave  
1005921f:	ret    
10059220:	push   DWORD PTR [esp+0x8]
10059224:	push   0x0
10059226:	push   DWORD PTR [esp+0xc]
1005922a:	push   0x1004d467
1005922f:	call   0x100591cb
10059234:	add    esp,0x10
10059237:	ret    
10059238:	push   ebp
10059239:	mov    ebp,esp
1005923b:	push   ecx
1005923c:	push   ebx
1005923d:	mov    eax,DWORD PTR [ebp+0xc]
10059240:	add    eax,0xc
10059243:	mov    DWORD PTR [ebp-0x4],eax
10059246:	mov    ebx,DWORD PTR fs:0x0
1005924d:	mov    eax,DWORD PTR [ebx]
1005924f:	mov    fs:0x0,eax
10059255:	mov    eax,DWORD PTR [ebp+0x8]
10059258:	mov    ebx,DWORD PTR [ebp+0xc]
1005925b:	mov    ebp,DWORD PTR [ebp-0x4]
1005925e:	mov    esp,DWORD PTR [ebx-0x4]
10059261:	jmp    eax
10059263:	pop    ebx
10059264:	leave  
10059265:	ret    0x8
10059268:	pop    eax
10059269:	pop    ecx
1005926a:	xchg   DWORD PTR [esp],eax
1005926d:	jmp    eax
1005926f:	push   ebp
10059270:	mov    ebp,esp
10059272:	push   ecx
10059273:	push   ecx
10059274:	push   ebx
10059275:	push   esi
10059276:	push   edi
10059277:	mov    esi,DWORD PTR fs:0x0
1005927e:	mov    DWORD PTR [ebp-0x4],esi
10059281:	mov    DWORD PTR [ebp-0x8],0x10059298
10059288:	push   0x0
1005928a:	push   DWORD PTR [ebp+0xc]
1005928d:	push   DWORD PTR [ebp-0x8]
10059290:	push   DWORD PTR [ebp+0x8]
10059293:	call   0x10056bc4
10059298:	mov    eax,DWORD PTR [ebp+0xc]
1005929b:	mov    eax,DWORD PTR [eax+0x4]
1005929e:	and    eax,0xfffffffd
100592a1:	mov    ecx,DWORD PTR [ebp+0xc]
100592a4:	mov    DWORD PTR [ecx+0x4],eax
100592a7:	mov    edi,DWORD PTR fs:0x0
100592ae:	mov    ebx,DWORD PTR [ebp-0x4]
100592b1:	mov    DWORD PTR [ebx],edi
100592b3:	mov    DWORD PTR fs:0x0,ebx
100592ba:	pop    edi
100592bb:	pop    esi
100592bc:	pop    ebx
100592bd:	leave  
100592be:	ret    0x8
100592c1:	push   ebp
100592c2:	mov    ebp,esp
100592c4:	sub    esp,0x8
100592c7:	push   ebx
100592c8:	push   esi
100592c9:	push   edi
100592ca:	cld    
100592cb:	mov    DWORD PTR [ebp-0x4],eax
100592ce:	xor    eax,eax
100592d0:	push   eax
100592d1:	push   eax
100592d2:	push   eax
100592d3:	push   DWORD PTR [ebp-0x4]
100592d6:	push   DWORD PTR [ebp+0x14]
100592d9:	push   DWORD PTR [ebp+0x10]
100592dc:	push   DWORD PTR [ebp+0xc]
100592df:	push   DWORD PTR [ebp+0x8]
100592e2:	call   0x1005b3e7
100592e7:	add    esp,0x20
100592ea:	mov    DWORD PTR [ebp-0x8],eax
100592ed:	pop    edi
100592ee:	pop    esi
100592ef:	pop    ebx
100592f0:	mov    eax,DWORD PTR [ebp-0x8]
100592f3:	mov    esp,ebp
100592f5:	pop    ebp
100592f6:	ret    
100592f7:	push   esi
100592f8:	cld    
100592f9:	mov    esi,DWORD PTR [esp+0xc]
100592fd:	mov    ecx,DWORD PTR [esi+0x8]
10059300:	xor    ecx,esi
10059302:	call   0x10042f87
10059307:	push   0x0
10059309:	push   esi
1005930a:	push   DWORD PTR [esi+0x14]
1005930d:	push   DWORD PTR [esi+0xc]
10059310:	push   0x0
10059312:	push   DWORD PTR [esp+0x24]
10059316:	push   DWORD PTR [esi+0x10]
10059319:	push   DWORD PTR [esp+0x24]
1005931d:	call   0x1005b3e7
10059322:	add    esp,0x20
10059325:	pop    esi
10059326:	ret    
10059327:	push   ebp
10059328:	mov    ebp,esp
1005932a:	sub    esp,0x38
1005932d:	push   ebx
1005932e:	cmp    DWORD PTR [ebp+0x8],0x123
10059335:	jne    0x10059349
10059337:	mov    eax,0x100593d0
1005933c:	mov    ecx,DWORD PTR [ebp+0xc]
1005933f:	mov    DWORD PTR [ecx],eax
10059341:	xor    eax,eax
10059343:	inc    eax
10059344:	jmp    0x100593f9
10059349:	and    DWORD PTR [ebp-0x28],0x0
1005934d:	mov    DWORD PTR [ebp-0x24],0x100593fc
10059354:	mov    eax,ds:0x1007e030
10059359:	lea    ecx,[ebp-0x28]
1005935c:	xor    eax,ecx
1005935e:	mov    DWORD PTR [ebp-0x20],eax
10059361:	mov    eax,DWORD PTR [ebp+0x18]
10059364:	mov    DWORD PTR [ebp-0x1c],eax
10059367:	mov    eax,DWORD PTR [ebp+0xc]
1005936a:	mov    DWORD PTR [ebp-0x18],eax
1005936d:	mov    eax,DWORD PTR [ebp+0x1c]
10059370:	mov    DWORD PTR [ebp-0x14],eax
10059373:	mov    eax,DWORD PTR [ebp+0x20]
10059376:	mov    DWORD PTR [ebp-0x10],eax
10059379:	and    DWORD PTR [ebp-0xc],0x0
1005937d:	and    DWORD PTR [ebp-0x8],0x0
10059381:	and    DWORD PTR [ebp-0x4],0x0
10059385:	mov    DWORD PTR [ebp-0xc],esp
10059388:	mov    DWORD PTR [ebp-0x8],ebp
1005938b:	mov    eax,fs:0x0
10059391:	mov    DWORD PTR [ebp-0x28],eax
10059394:	lea    eax,[ebp-0x28]
10059397:	mov    fs:0x0,eax
1005939d:	mov    DWORD PTR [ebp-0x38],0x1
100593a4:	mov    eax,DWORD PTR [ebp+0x8]
100593a7:	mov    DWORD PTR [ebp-0x34],eax
100593aa:	mov    eax,DWORD PTR [ebp+0x10]
100593ad:	mov    DWORD PTR [ebp-0x30],eax
100593b0:	call   0x100471ec
100593b5:	mov    eax,DWORD PTR [eax+0x80]
100593bb:	mov    DWORD PTR [ebp-0x2c],eax
100593be:	lea    eax,[ebp-0x34]
100593c1:	push   eax
100593c2:	mov    eax,DWORD PTR [ebp+0x8]
100593c5:	push   DWORD PTR [eax]
100593c7:	call   DWORD PTR [ebp-0x2c]
100593ca:	pop    ecx
100593cb:	pop    ecx
100593cc:	and    DWORD PTR [ebp-0x38],0x0
100593d0:	cmp    DWORD PTR [ebp-0x4],0x0
100593d4:	je     0x100593ed
100593d6:	mov    ebx,DWORD PTR fs:0x0
100593dd:	mov    eax,DWORD PTR [ebx]
100593df:	mov    ebx,DWORD PTR [ebp-0x28]
100593e2:	mov    DWORD PTR [ebx],eax
100593e4:	mov    DWORD PTR fs:0x0,ebx
100593eb:	jmp    0x100593f6
100593ed:	mov    eax,DWORD PTR [ebp-0x28]
100593f0:	mov    fs:0x0,eax
100593f6:	mov    eax,DWORD PTR [ebp-0x38]
100593f9:	pop    ebx
100593fa:	leave  
100593fb:	ret    
100593fc:	push   ebp
100593fd:	mov    ebp,esp
100593ff:	push   ecx
10059400:	push   ebx
10059401:	cld    
10059402:	mov    eax,DWORD PTR [ebp+0xc]
10059405:	mov    ecx,DWORD PTR [eax+0x8]
10059408:	xor    ecx,DWORD PTR [ebp+0xc]
1005940b:	call   0x10042f87
10059410:	mov    eax,DWORD PTR [ebp+0x8]
10059413:	mov    eax,DWORD PTR [eax+0x4]
10059416:	and    eax,0x66
10059419:	je     0x1005942c
1005941b:	mov    eax,DWORD PTR [ebp+0xc]
1005941e:	mov    DWORD PTR [eax+0x24],0x1
10059425:	xor    eax,eax
10059427:	inc    eax
10059428:	jmp    0x10059496
1005942a:	jmp    0x10059496
1005942c:	push   0x1
1005942e:	mov    eax,DWORD PTR [ebp+0xc]
10059431:	push   DWORD PTR [eax+0x18]
10059434:	mov    eax,DWORD PTR [ebp+0xc]
10059437:	push   DWORD PTR [eax+0x14]
1005943a:	mov    eax,DWORD PTR [ebp+0xc]
1005943d:	push   DWORD PTR [eax+0xc]
10059440:	push   0x0
10059442:	push   DWORD PTR [ebp+0x10]
10059445:	mov    eax,DWORD PTR [ebp+0xc]
10059448:	push   DWORD PTR [eax+0x10]
1005944b:	push   DWORD PTR [ebp+0x8]
1005944e:	call   0x1005b3e7
10059453:	add    esp,0x20
10059456:	mov    eax,DWORD PTR [ebp+0xc]
10059459:	cmp    DWORD PTR [eax+0x24],0x0
1005945d:	jne    0x1005946a
1005945f:	push   DWORD PTR [ebp+0x8]
10059462:	push   DWORD PTR [ebp+0xc]
10059465:	call   0x1005926f
1005946a:	push   0x0
1005946c:	push   0x0
1005946e:	push   0x0
10059470:	push   0x0
10059472:	push   0x0
10059474:	lea    eax,[ebp-0x4]
10059477:	push   eax
10059478:	push   0x123
1005947d:	call   0x10059327
10059482:	add    esp,0x1c
10059485:	mov    eax,DWORD PTR [ebp-0x4]
10059488:	mov    ebx,DWORD PTR [ebp+0xc]
1005948b:	mov    esp,DWORD PTR [ebx+0x1c]
1005948e:	mov    ebp,DWORD PTR [ebx+0x20]
10059491:	jmp    eax
10059493:	xor    eax,eax
10059495:	inc    eax
10059496:	pop    ebx
10059497:	leave  
10059498:	ret    
10059499:	push   ebp
1005949a:	mov    ebp,esp
1005949c:	push   ecx
1005949d:	push   ebx
1005949e:	push   esi
1005949f:	push   edi
100594a0:	mov    edi,DWORD PTR [ebp+0x8]
100594a3:	mov    eax,DWORD PTR [edi+0x10]
100594a6:	mov    esi,DWORD PTR [edi+0xc]
100594a9:	mov    DWORD PTR [ebp-0x4],eax
100594ac:	mov    ebx,esi
100594ae:	jmp    0x100594dd
100594b0:	cmp    esi,0xffffffff
100594b3:	jne    0x100594ba
100594b5:	call   0x10046d3a
100594ba:	mov    ecx,DWORD PTR [ebp-0x4]
100594bd:	dec    esi
100594be:	mov    eax,esi
100594c0:	imul   eax,eax,0x14
100594c3:	add    eax,ecx
100594c5:	mov    ecx,DWORD PTR [ebp+0x10]
100594c8:	cmp    DWORD PTR [eax+0x4],ecx
100594cb:	jge    0x100594d2
100594cd:	cmp    ecx,DWORD PTR [eax+0x8]
100594d0:	jle    0x100594d7
100594d2:	cmp    esi,0xffffffff
100594d5:	jne    0x100594e0
100594d7:	dec    DWORD PTR [ebp+0xc]
100594da:	mov    ebx,DWORD PTR [ebp+0x8]
100594dd:	mov    DWORD PTR [ebp+0x8],esi
100594e0:	cmp    DWORD PTR [ebp+0xc],0x0
100594e4:	jge    0x100594b0
100594e6:	mov    eax,DWORD PTR [ebp+0x14]
100594e9:	inc    esi
100594ea:	mov    DWORD PTR [eax],esi
100594ec:	mov    eax,DWORD PTR [ebp+0x18]
100594ef:	mov    DWORD PTR [eax],ebx
100594f1:	cmp    ebx,DWORD PTR [edi+0xc]
100594f4:	ja     0x100594fa
100594f6:	cmp    esi,ebx
100594f8:	jbe    0x100594ff
100594fa:	call   0x10046d3a
100594ff:	mov    eax,esi
10059501:	imul   eax,eax,0x14
10059504:	add    eax,DWORD PTR [ebp-0x4]
10059507:	pop    edi
10059508:	pop    esi
10059509:	pop    ebx
1005950a:	leave  
1005950b:	ret    
1005950c:	mov    eax,DWORD PTR [esp+0x8]
10059510:	push   esi
10059511:	mov    esi,DWORD PTR [esp+0x8]
10059515:	mov    DWORD PTR [esi],eax
10059517:	call   0x100471ec
1005951c:	mov    eax,DWORD PTR [eax+0x98]
10059522:	mov    DWORD PTR [esi+0x4],eax
10059525:	call   0x100471ec
1005952a:	mov    DWORD PTR [eax+0x98],esi
10059530:	mov    eax,esi
10059532:	pop    esi
10059533:	ret    
10059534:	call   0x100471ec
10059539:	mov    eax,DWORD PTR [eax+0x98]
1005953f:	jmp    0x1005954c
10059541:	mov    ecx,DWORD PTR [eax]
10059543:	cmp    ecx,DWORD PTR [esp+0x4]
10059547:	je     0x10059552
10059549:	mov    eax,DWORD PTR [eax+0x4]
1005954c:	test   eax,eax
1005954e:	jne    0x10059541
10059550:	inc    eax
10059551:	ret    
10059552:	xor    eax,eax
10059554:	ret    
10059555:	push   esi
10059556:	call   0x100471ec
1005955b:	mov    esi,DWORD PTR [esp+0x8]
1005955f:	cmp    esi,DWORD PTR [eax+0x98]
10059565:	jne    0x10059577
10059567:	call   0x100471ec
1005956c:	mov    ecx,DWORD PTR [esi+0x4]
1005956f:	mov    DWORD PTR [eax+0x98],ecx
10059575:	pop    esi
10059576:	ret    
10059577:	call   0x100471ec
1005957c:	mov    eax,DWORD PTR [eax+0x98]
10059582:	jmp    0x1005958d
10059584:	mov    ecx,DWORD PTR [eax+0x4]
10059587:	cmp    esi,ecx
10059589:	je     0x10059599
1005958b:	mov    eax,ecx
1005958d:	cmp    DWORD PTR [eax+0x4],0x0
10059591:	jne    0x10059584
10059593:	pop    esi
10059594:	jmp    0x10046d3a
10059599:	mov    ecx,DWORD PTR [esi+0x4]
1005959c:	mov    DWORD PTR [eax+0x4],ecx
1005959f:	pop    esi
100595a0:	ret    
100595a1:	push   ebp
100595a2:	mov    ebp,esp
100595a4:	sub    esp,0x18
100595a7:	mov    eax,ds:0x1007e030
100595ac:	and    DWORD PTR [ebp-0x18],0x0
100595b0:	lea    ecx,[ebp-0x18]
100595b3:	xor    eax,ecx
100595b5:	mov    ecx,DWORD PTR [ebp+0x8]
100595b8:	mov    DWORD PTR [ebp-0x10],eax
100595bb:	mov    eax,DWORD PTR [ebp+0xc]
100595be:	mov    DWORD PTR [ebp-0xc],eax
100595c1:	mov    eax,DWORD PTR [ebp+0x14]
100595c4:	inc    eax
100595c5:	mov    DWORD PTR [ebp-0x14],0x100592f7
100595cc:	mov    DWORD PTR [ebp-0x8],ecx
100595cf:	mov    DWORD PTR [ebp-0x4],eax
100595d2:	mov    eax,fs:0x0
100595d8:	mov    DWORD PTR [ebp-0x18],eax
100595db:	lea    eax,[ebp-0x18]
100595de:	mov    fs:0x0,eax
100595e4:	push   DWORD PTR [ebp+0x18]
100595e7:	push   ecx
100595e8:	push   DWORD PTR [ebp+0x10]
100595eb:	call   0x1005b4d0
100595f0:	mov    ecx,eax
100595f2:	mov    eax,DWORD PTR [ebp-0x18]
100595f5:	mov    fs:0x0,eax
100595fb:	mov    eax,ecx
100595fd:	leave  
100595fe:	ret    
100595ff:	ret    
10059600:	mov    eax,0x1005bfa9
10059605:	mov    ds:0x1007ea80,eax
1005960a:	mov    DWORD PTR ds:0x1007ea84,0x1005b6a5
10059614:	mov    DWORD PTR ds:0x1007ea88,0x1005b663
1005961e:	mov    DWORD PTR ds:0x1007ea8c,0x1005b697
10059628:	mov    DWORD PTR ds:0x1007ea90,0x1005b60d
10059632:	mov    ds:0x1007ea94,eax
10059637:	mov    DWORD PTR ds:0x1007ea98,0x1005bf23
10059641:	mov    DWORD PTR ds:0x1007ea9c,0x1005b623
1005964b:	mov    DWORD PTR ds:0x1007eaa0,0x1005b58d
10059655:	mov    DWORD PTR ds:0x1007eaa4,0x1005b51c
1005965f:	ret    
10059660:	call   0x10059600
10059665:	call   0x1005c02f
1005966a:	cmp    DWORD PTR [esp+0x4],0x0
1005966f:	mov    ds:0x10080acc,eax
10059674:	je     0x1005967b
10059676:	call   0x1005bfca
1005967b:	fnclex 
1005967d:	ret    
1005967e:	push   0x18
10059680:	push   0x10074b88
10059685:	call   0x10046d84
1005968a:	mov    eax,DWORD PTR [ebp+0x8]
1005968d:	mov    DWORD PTR [ebp-0x1c],eax
10059690:	mov    DWORD PTR [ebp-0x20],eax
10059693:	xor    ebx,ebx
10059695:	cmp    eax,ebx
10059697:	jne    0x100596bd
10059699:	cmp    DWORD PTR [ebp+0xc],ebx
1005969c:	je     0x100596bd
1005969e:	call   0x10046c45
100596a3:	mov    DWORD PTR [eax],0x16
100596a9:	push   ebx
100596aa:	push   ebx
100596ab:	push   ebx
100596ac:	push   ebx
100596ad:	push   ebx
100596ae:	call   0x1004347c
100596b3:	add    esp,0x14
100596b6:	xor    eax,eax
100596b8:	jmp    0x100597f4
100596bd:	xor    eax,eax
100596bf:	cmp    DWORD PTR [ebp+0xc],ebx
100596c2:	setge  al
100596c5:	cmp    eax,ebx
100596c7:	je     0x1005969e
100596c9:	xor    eax,eax
100596cb:	mov    esi,DWORD PTR [ebp+0x10]
100596ce:	cmp    esi,ebx
100596d0:	setne  al
100596d3:	cmp    eax,ebx
100596d5:	je     0x1005969e
100596d7:	cmp    DWORD PTR [ebp+0xc],ebx
100596da:	je     0x100596b6
100596dc:	mov    edi,esi
100596de:	mov    DWORD PTR [ebp-0x24],edi
100596e1:	push   esi
100596e2:	call   0x1004d1b8
100596e7:	pop    ecx
100596e8:	mov    DWORD PTR [ebp-0x4],ebx
100596eb:	test   BYTE PTR [esi+0xc],0x40
100596ef:	jne    0x1005979f
100596f5:	push   esi
100596f6:	call   0x1004d25c
100596fb:	pop    ecx
100596fc:	cmp    eax,0xffffffff
100596ff:	je     0x10059731
10059701:	push   esi
10059702:	call   0x1004d25c
10059707:	pop    ecx
10059708:	cmp    eax,0xfffffffe
1005970b:	je     0x10059731
1005970d:	push   esi
1005970e:	call   0x1004d25c
10059713:	sar    eax,0x5
10059716:	lea    edi,[eax*4+0x10082480]
1005971d:	push   esi
1005971e:	call   0x1004d25c
10059723:	pop    ecx
10059724:	pop    ecx
10059725:	and    eax,0x1f
10059728:	imul   eax,eax,0x28
1005972b:	add    eax,DWORD PTR [edi]
1005972d:	mov    edi,esi
1005972f:	jmp    0x10059736
10059731:	mov    eax,0x1007e9d0
10059736:	test   BYTE PTR [eax+0x24],0x7f
1005973a:	jne    0x10059784
1005973c:	push   esi
1005973d:	call   0x1004d25c
10059742:	pop    ecx
10059743:	cmp    eax,0xffffffff
10059746:	je     0x10059779
10059748:	push   esi
10059749:	call   0x1004d25c
1005974e:	pop    ecx
1005974f:	cmp    eax,0xfffffffe
10059752:	je     0x10059779
10059754:	push   esi
10059755:	call   0x1004d25c
1005975a:	sar    eax,0x5
1005975d:	lea    edi,[eax*4+0x10082480]
10059764:	push   esi
10059765:	call   0x1004d25c
1005976a:	pop    ecx
1005976b:	pop    ecx
1005976c:	and    eax,0x1f
1005976f:	imul   eax,eax,0x28
10059772:	add    eax,DWORD PTR [edi]
10059774:	mov    edi,DWORD PTR [ebp-0x24]
10059777:	jmp    0x1005977e
10059779:	mov    eax,0x1007e9d0
1005977e:	test   BYTE PTR [eax+0x24],0x80
10059782:	je     0x1005979f
10059784:	call   0x10046c45
10059789:	mov    DWORD PTR [eax],0x16
1005978f:	push   ebx
10059790:	push   ebx
10059791:	push   ebx
10059792:	push   ebx
10059793:	push   ebx
10059794:	call   0x1004347c
10059799:	add    esp,0x14
1005979c:	mov    DWORD PTR [ebp-0x20],ebx
1005979f:	cmp    DWORD PTR [ebp-0x20],ebx
100597a2:	je     0x100597e5
100597a4:	dec    DWORD PTR [ebp+0xc]
100597a7:	je     0x100597e0
100597a9:	dec    DWORD PTR [edi+0x4]
100597ac:	js     0x100597b8
100597ae:	mov    ecx,DWORD PTR [edi]
100597b0:	movzx  eax,BYTE PTR [ecx]
100597b3:	inc    ecx
100597b4:	mov    DWORD PTR [edi],ecx
100597b6:	jmp    0x100597bf
100597b8:	push   edi
100597b9:	call   0x1005c058
100597be:	pop    ecx
100597bf:	mov    DWORD PTR [ebp-0x28],eax
100597c2:	cmp    eax,0xffffffff
100597c5:	jne    0x100597d4
100597c7:	mov    eax,DWORD PTR [ebp-0x1c]
100597ca:	cmp    eax,DWORD PTR [ebp+0x8]
100597cd:	jne    0x100597e3
100597cf:	mov    DWORD PTR [ebp-0x20],ebx
100597d2:	jmp    0x100597e5
100597d4:	mov    ecx,DWORD PTR [ebp-0x1c]
100597d7:	mov    BYTE PTR [ecx],al
100597d9:	inc    DWORD PTR [ebp-0x1c]
100597dc:	cmp    al,0xa
100597de:	jne    0x100597a4
100597e0:	mov    eax,DWORD PTR [ebp-0x1c]
100597e3:	mov    BYTE PTR [eax],bl
100597e5:	mov    DWORD PTR [ebp-0x4],0xfffffffe
100597ec:	call   0x100597fd
100597f1:	mov    eax,DWORD PTR [ebp-0x20]
100597f4:	call   0x10046dc9
100597f9:	ret    
100597fa:	mov    edi,DWORD PTR [ebp-0x24]
100597fd:	push   edi
100597fe:	call   0x1004d20a
10059803:	pop    ecx
10059804:	ret    
10059805:	push   ebp
10059806:	mov    ebp,esp
10059808:	sub    esp,0x20
1005980b:	push   ebx
1005980c:	xor    ebx,ebx
1005980e:	cmp    DWORD PTR [ebp+0x10],ebx
10059811:	jne    0x10059830
10059813:	call   0x10046c45
10059818:	push   ebx
10059819:	push   ebx
1005981a:	push   ebx
1005981b:	push   ebx
1005981c:	push   ebx
1005981d:	mov    DWORD PTR [eax],0x16
10059823:	call   0x1004347c
10059828:	add    esp,0x14
1005982b:	or     eax,0xffffffff
1005982e:	jmp    0x100598af
10059830:	mov    ecx,DWORD PTR [ebp+0xc]
10059833:	cmp    ecx,ebx
10059835:	push   esi
10059836:	mov    esi,DWORD PTR [ebp+0x8]
10059839:	je     0x1005985c
1005983b:	cmp    esi,ebx
1005983d:	jne    0x1005985c
1005983f:	call   0x10046c45
10059844:	push   ebx
10059845:	push   ebx
10059846:	push   ebx
10059847:	push   ebx
10059848:	push   ebx
10059849:	mov    DWORD PTR [eax],0x16
1005984f:	call   0x1004347c
10059854:	add    esp,0x14
10059857:	or     eax,0xffffffff
1005985a:	jmp    0x100598ae
1005985c:	mov    eax,0x7fffffff
10059861:	cmp    ecx,eax
10059863:	mov    DWORD PTR [ebp-0x1c],eax
10059866:	ja     0x1005986b
10059868:	mov    DWORD PTR [ebp-0x1c],ecx
1005986b:	push   edi
1005986c:	lea    eax,[ebp+0x14]
1005986f:	push   eax
10059870:	push   ebx
10059871:	push   DWORD PTR [ebp+0x10]
10059874:	lea    eax,[ebp-0x20]
10059877:	push   eax
10059878:	mov    DWORD PTR [ebp-0x14],0x42
1005987f:	mov    DWORD PTR [ebp-0x18],esi
10059882:	mov    DWORD PTR [ebp-0x20],esi
10059885:	call   0x1004d467
1005988a:	add    esp,0x10
1005988d:	cmp    esi,ebx
1005988f:	mov    edi,eax
10059891:	je     0x100598ad
10059893:	dec    DWORD PTR [ebp-0x1c]
10059896:	js     0x1005989f
10059898:	mov    eax,DWORD PTR [ebp-0x20]
1005989b:	mov    BYTE PTR [eax],bl
1005989d:	jmp    0x100598ab
1005989f:	lea    eax,[ebp-0x20]
100598a2:	push   eax
100598a3:	push   ebx
100598a4:	call   0x100488bd
100598a9:	pop    ecx
100598aa:	pop    ecx
100598ab:	mov    eax,edi
100598ad:	pop    edi
100598ae:	pop    esi
100598af:	pop    ebx
100598b0:	leave  
100598b1:	ret    
100598b2:	int3   
100598b3:	int3   
100598b4:	int3   
100598b5:	int3   
100598b6:	int3   
100598b7:	int3   
100598b8:	int3   
100598b9:	int3   
100598ba:	int3   
100598bb:	int3   
100598bc:	int3   
100598bd:	int3   
100598be:	int3   
100598bf:	int3   
100598c0:	mov    ecx,DWORD PTR [esp+0xc]
100598c4:	push   edi
100598c5:	test   ecx,ecx
100598c7:	je     0x1005995f
100598cd:	push   esi
100598ce:	push   ebx
100598cf:	mov    ebx,ecx
100598d1:	mov    esi,DWORD PTR [esp+0x14]
100598d5:	test   esi,0x3
100598db:	mov    edi,DWORD PTR [esp+0x10]
100598df:	jne    0x100598ec
100598e1:	shr    ecx,0x2
100598e4:	jne    0x1005996f
100598ea:	jmp    0x10059913
100598ec:	mov    al,BYTE PTR [esi]
100598ee:	add    esi,0x1
100598f1:	mov    BYTE PTR [edi],al
100598f3:	add    edi,0x1
100598f6:	sub    ecx,0x1
100598f9:	je     0x10059926
100598fb:	test   al,al
100598fd:	je     0x1005992e
100598ff:	test   esi,0x3
10059905:	jne    0x100598ec
10059907:	mov    ebx,ecx
10059909:	shr    ecx,0x2
1005990c:	jne    0x1005996f
1005990e:	and    ebx,0x3
10059911:	je     0x10059926
10059913:	mov    al,BYTE PTR [esi]
10059915:	add    esi,0x1
10059918:	mov    BYTE PTR [edi],al
1005991a:	add    edi,0x1
1005991d:	test   al,al
1005991f:	je     0x10059958
10059921:	sub    ebx,0x1
10059924:	jne    0x10059913
10059926:	mov    eax,DWORD PTR [esp+0x10]
1005992a:	pop    ebx
1005992b:	pop    esi
1005992c:	pop    edi
1005992d:	ret    
1005992e:	test   edi,0x3
10059934:	je     0x1005994c
10059936:	mov    BYTE PTR [edi],al
10059938:	add    edi,0x1
1005993b:	sub    ecx,0x1
1005993e:	je     0x100599dc
10059944:	test   edi,0x3
1005994a:	jne    0x10059936
1005994c:	mov    ebx,ecx
1005994e:	shr    ecx,0x2
10059951:	jne    0x100599c7
10059953:	mov    BYTE PTR [edi],al
10059955:	add    edi,0x1
10059958:	sub    ebx,0x1
1005995b:	jne    0x10059953
1005995d:	pop    ebx
1005995e:	pop    esi
1005995f:	mov    eax,DWORD PTR [esp+0x8]
10059963:	pop    edi
10059964:	ret    
10059965:	mov    DWORD PTR [edi],edx
10059967:	add    edi,0x4
1005996a:	sub    ecx,0x1
1005996d:	je     0x1005990e
1005996f:	mov    edx,0x7efefeff
10059974:	mov    eax,DWORD PTR [esi]
10059976:	add    edx,eax
10059978:	xor    eax,0xffffffff
1005997b:	xor    eax,edx
1005997d:	mov    edx,DWORD PTR [esi]
1005997f:	add    esi,0x4
10059982:	test   eax,0x81010100
10059987:	je     0x10059965
10059989:	test   dl,dl
1005998b:	je     0x100599b9
1005998d:	test   dh,dh
1005998f:	je     0x100599af
10059991:	test   edx,0xff0000
10059997:	je     0x100599a5
10059999:	test   edx,0xff000000
1005999f:	jne    0x10059965
100599a1:	mov    DWORD PTR [edi],edx
100599a3:	jmp    0x100599bd
100599a5:	and    edx,0xffff
100599ab:	mov    DWORD PTR [edi],edx
100599ad:	jmp    0x100599bd
100599af:	and    edx,0xff
100599b5:	mov    DWORD PTR [edi],edx
100599b7:	jmp    0x100599bd
100599b9:	xor    edx,edx
100599bb:	mov    DWORD PTR [edi],edx
100599bd:	add    edi,0x4
100599c0:	xor    eax,eax
100599c2:	sub    ecx,0x1
100599c5:	je     0x100599d3
100599c7:	xor    eax,eax
100599c9:	mov    DWORD PTR [edi],eax
100599cb:	add    edi,0x4
100599ce:	sub    ecx,0x1
100599d1:	jne    0x100599c9
100599d3:	and    ebx,0x3
100599d6:	jne    0x10059953
100599dc:	mov    eax,DWORD PTR [esp+0x10]
100599e0:	pop    ebx
100599e1:	pop    esi
100599e2:	pop    edi
100599e3:	ret    
100599e4:	int3   
100599e5:	int3   
100599e6:	int3   
100599e7:	int3   
100599e8:	int3   
100599e9:	int3   
100599ea:	int3   
100599eb:	int3   
100599ec:	int3   
100599ed:	int3   
100599ee:	int3   
100599ef:	int3   
100599f0:	push   ebp
100599f1:	mov    ebp,esp
100599f3:	push   edi
100599f4:	mov    edi,DWORD PTR [ebp+0x8]
100599f7:	xor    eax,eax
100599f9:	or     ecx,0xffffffff
100599fc:	repnz scas al,BYTE PTR es:[edi]
100599fe:	add    ecx,0x1
10059a01:	neg    ecx
10059a03:	sub    edi,0x1
10059a06:	mov    al,BYTE PTR [ebp+0xc]
10059a09:	std    
10059a0a:	repnz scas al,BYTE PTR es:[edi]
10059a0c:	add    edi,0x1
10059a0f:	cmp    BYTE PTR [edi],al
10059a11:	je     0x10059a17
10059a13:	xor    eax,eax
10059a15:	jmp    0x10059a19
10059a17:	mov    eax,edi
10059a19:	cld    
10059a1a:	pop    edi
10059a1b:	leave  
10059a1c:	ret    
10059a1d:	push   ebp
10059a1e:	mov    ebp,esp
10059a20:	push   ecx
10059a21:	push   ecx
10059a22:	mov    eax,DWORD PTR [ebp+0xc]
10059a25:	push   ebx
10059a26:	xor    ebx,ebx
10059a28:	cmp    eax,ebx
10059a2a:	push   esi
10059a2b:	push   edi
10059a2c:	je     0x10059b13
10059a32:	cmp    BYTE PTR [eax],bl
10059a34:	je     0x10059b13
10059a3a:	cmp    DWORD PTR [ebp+0x8],ebx
10059a3d:	mov    esi,DWORD PTR ds:0x10066058
10059a43:	jne    0x10059aa0
10059a45:	push   ebx
10059a46:	push   ebx
10059a47:	push   ebx
10059a48:	push   eax
10059a49:	call   esi
10059a4b:	cmp    eax,ebx
10059a4d:	jne    0x10059a62
10059a4f:	call   DWORD PTR ds:0x100660cc
10059a55:	push   eax
10059a56:	call   0x10046c6b
10059a5b:	xor    eax,eax
10059a5d:	jmp    0x10059b1f
10059a62:	mov    edi,DWORD PTR [ebp+0x10]
10059a65:	cmp    edi,eax
10059a67:	ja     0x10059a6b
10059a69:	mov    edi,eax
10059a6b:	cmp    edi,0xffffffff
10059a6e:	jbe    0x10059a82
10059a70:	call   0x10046c45
10059a75:	mov    DWORD PTR [eax],0x16
10059a7b:	xor    eax,eax
10059a7d:	jmp    0x10059b20
10059a82:	push   0x1
10059a84:	push   edi
10059a85:	call   0x100437a4
10059a8a:	cmp    eax,ebx
10059a8c:	pop    ecx
10059a8d:	pop    ecx
10059a8e:	mov    DWORD PTR [ebp-0x4],eax
10059a91:	jne    0x10059ac7
10059a93:	call   0x10046c45
10059a98:	mov    DWORD PTR [eax],0xc
10059a9e:	jmp    0x10059a7b
10059aa0:	mov    edi,DWORD PTR [ebp+0x10]
10059aa3:	cmp    edi,ebx
10059aa5:	ja     0x10059ac1
10059aa7:	call   0x10046c45
10059aac:	push   ebx
10059aad:	push   ebx
10059aae:	push   ebx
10059aaf:	push   ebx
10059ab0:	push   ebx
10059ab1:	mov    DWORD PTR [eax],0x16
10059ab7:	call   0x1004347c
10059abc:	add    esp,0x14
10059abf:	jmp    0x10059a7b
10059ac1:	mov    eax,DWORD PTR [ebp+0x8]
10059ac4:	mov    DWORD PTR [ebp-0x4],eax
10059ac7:	lea    eax,[ebp-0x8]
10059aca:	push   eax
10059acb:	push   DWORD PTR [ebp-0x4]
10059ace:	push   edi
10059acf:	push   DWORD PTR [ebp+0xc]
10059ad2:	call   esi
10059ad4:	cmp    eax,edi
10059ad6:	jb     0x10059af3
10059ad8:	cmp    DWORD PTR [ebp+0x8],ebx
10059adb:	jne    0x10059ae6
10059add:	push   DWORD PTR [ebp-0x4]
10059ae0:	call   0x100435f8
10059ae5:	pop    ecx
10059ae6:	call   0x10046c45
10059aeb:	mov    DWORD PTR [eax],0x22
10059af1:	jmp    0x10059a7b
10059af3:	cmp    eax,ebx
10059af5:	jne    0x10059b0e
10059af7:	cmp    DWORD PTR [ebp+0x8],ebx
10059afa:	jne    0x10059a4f
10059b00:	push   DWORD PTR [ebp-0x4]
10059b03:	call   0x100435f8
10059b08:	pop    ecx
10059b09:	jmp    0x10059a4f
10059b0e:	mov    eax,DWORD PTR [ebp-0x4]
10059b11:	jmp    0x10059b20
10059b13:	push   DWORD PTR [ebp+0x10]
10059b16:	push   DWORD PTR [ebp+0x8]
10059b19:	call   0x1005c2e4
10059b1e:	pop    ecx
10059b1f:	pop    ecx
10059b20:	pop    edi
10059b21:	pop    esi
10059b22:	pop    ebx
10059b23:	leave  
10059b24:	ret    
10059b25:	push   eax
10059b26:	push   DWORD PTR fs:0x0
10059b2d:	lea    eax,[esp+0xc]
10059b31:	sub    esp,DWORD PTR [esp+0xc]
10059b35:	push   ebx
10059b36:	push   esi
10059b37:	push   edi
10059b38:	mov    DWORD PTR [eax],ebp
10059b3a:	mov    ebp,eax
10059b3c:	mov    eax,ds:0x1007e030
10059b41:	xor    eax,ebp
10059b43:	push   eax
10059b44:	push   DWORD PTR [ebp-0x4]
10059b47:	mov    DWORD PTR [ebp-0x4],0xffffffff
10059b4e:	lea    eax,[ebp-0xc]
10059b51:	mov    fs:0x0,eax
10059b57:	ret    
10059b58:	push   eax
10059b59:	push   DWORD PTR fs:0x0
10059b60:	lea    eax,[esp+0xc]
10059b64:	sub    esp,DWORD PTR [esp+0xc]
10059b68:	push   ebx
10059b69:	push   esi
10059b6a:	push   edi
10059b6b:	mov    DWORD PTR [eax],ebp
10059b6d:	mov    ebp,eax
10059b6f:	mov    eax,ds:0x1007e030
10059b74:	xor    eax,ebp
10059b76:	push   eax
10059b77:	mov    DWORD PTR [ebp-0x10],esp
10059b7a:	push   DWORD PTR [ebp-0x4]
10059b7d:	mov    DWORD PTR [ebp-0x4],0xffffffff
10059b84:	lea    eax,[ebp-0xc]
10059b87:	mov    fs:0x0,eax
10059b8d:	ret    
10059b8e:	push   eax
10059b8f:	push   DWORD PTR fs:0x0
10059b96:	lea    eax,[esp+0xc]
10059b9a:	sub    esp,DWORD PTR [esp+0xc]
10059b9e:	push   ebx
10059b9f:	push   esi
10059ba0:	push   edi
10059ba1:	mov    DWORD PTR [eax],ebp
10059ba3:	mov    ebp,eax
10059ba5:	mov    eax,ds:0x1007e030
10059baa:	xor    eax,ebp
10059bac:	push   eax
10059bad:	mov    DWORD PTR [ebp-0x10],eax
10059bb0:	push   DWORD PTR [ebp-0x4]
10059bb3:	mov    DWORD PTR [ebp-0x4],0xffffffff
10059bba:	lea    eax,[ebp-0xc]
10059bbd:	mov    fs:0x0,eax
10059bc3:	ret    
10059bc4:	push   eax
10059bc5:	push   DWORD PTR fs:0x0
10059bcc:	lea    eax,[esp+0xc]
10059bd0:	sub    esp,DWORD PTR [esp+0xc]
10059bd4:	push   ebx
10059bd5:	push   esi
10059bd6:	push   edi
10059bd7:	mov    DWORD PTR [eax],ebp
10059bd9:	mov    ebp,eax
10059bdb:	mov    eax,ds:0x1007e030
10059be0:	xor    eax,ebp
10059be2:	push   eax
10059be3:	mov    DWORD PTR [ebp-0x14],eax
10059be6:	mov    DWORD PTR [ebp-0x10],esp
10059be9:	push   DWORD PTR [ebp-0x4]
10059bec:	mov    DWORD PTR [ebp-0x4],0xffffffff
10059bf3:	lea    eax,[ebp-0xc]
10059bf6:	mov    fs:0x0,eax
10059bfc:	ret    
10059bfd:	mov    ecx,DWORD PTR [ebp-0xc]
10059c00:	mov    DWORD PTR fs:0x0,ecx
10059c07:	pop    ecx
10059c08:	pop    edi
10059c09:	pop    edi
10059c0a:	pop    esi
10059c0b:	pop    ebx
10059c0c:	mov    esp,ebp
10059c0e:	pop    ebp
10059c0f:	push   ecx
10059c10:	ret    
10059c11:	mov    ecx,DWORD PTR [ebp-0x10]
10059c14:	xor    ecx,ebp
10059c16:	call   0x10042f87
10059c1b:	jmp    0x10059bfd
10059c20:	mov    ecx,DWORD PTR [ebp-0x14]
10059c23:	xor    ecx,ebp
10059c25:	call   0x10042f87
10059c2a:	jmp    0x10059bfd
10059c2f:	int3   
10059c30:	push   esi
10059c31:	inc    ebx
10059c32:	xor    dh,BYTE PTR [eax]
10059c34:	pop    eax
10059c35:	inc    ebx
10059c36:	xor    BYTE PTR [eax],dh
10059c38:	push   ebp
10059c39:	mov    ebp,esp
10059c3b:	sub    esp,0x8
10059c3e:	push   ebx
10059c3f:	push   esi
10059c40:	push   edi
10059c41:	push   ebp
10059c42:	cld    
10059c43:	mov    ebx,DWORD PTR [ebp+0xc]
10059c46:	mov    eax,DWORD PTR [ebp+0x8]
10059c49:	test   DWORD PTR [eax+0x4],0x6
10059c50:	jne    0x10059d19
10059c56:	mov    DWORD PTR [ebp-0x8],eax
10059c59:	mov    eax,DWORD PTR [ebp+0x10]
10059c5c:	mov    DWORD PTR [ebp-0x4],eax
10059c5f:	lea    eax,[ebp-0x8]
10059c62:	mov    DWORD PTR [ebx-0x4],eax
10059c65:	mov    esi,DWORD PTR [ebx+0xc]
10059c68:	mov    edi,DWORD PTR [ebx+0x8]
10059c6b:	push   ebx
10059c6c:	call   0x1005c720
10059c71:	add    esp,0x4
10059c74:	or     eax,eax
10059c76:	jle    0x10059d0b
10059c7c:	cmp    esi,0xffffffff
10059c7f:	je     0x10059d12
10059c85:	lea    ecx,[esi+esi*2]
10059c88:	mov    eax,DWORD PTR [edi+ecx*4+0x4]
10059c8c:	or     eax,eax
10059c8e:	je     0x10059cf6
10059c90:	push   esi
10059c91:	push   ebp
10059c92:	lea    ebp,[ebx+0x10]
10059c95:	xor    ebx,ebx
10059c97:	xor    ecx,ecx
10059c99:	xor    edx,edx
10059c9b:	xor    esi,esi
10059c9d:	xor    edi,edi
10059c9f:	call   eax
10059ca1:	pop    ebp
10059ca2:	pop    esi
10059ca3:	mov    ebx,DWORD PTR [ebp+0xc]
10059ca6:	or     eax,eax
10059ca8:	je     0x10059cf6
10059caa:	js     0x10059d04
10059cac:	push   0x1
10059cae:	push   DWORD PTR [ebp+0x8]
10059cb1:	call   0x1005c623
10059cb6:	add    esp,0x8
10059cb9:	mov    edi,DWORD PTR [ebx+0x8]
10059cbc:	push   ebx
10059cbd:	call   0x1004f804
10059cc2:	add    esp,0x4
10059cc5:	lea    ebp,[ebx+0x10]
10059cc8:	push   esi
10059cc9:	push   ebx
10059cca:	call   0x1004f869
10059ccf:	add    esp,0x8
10059cd2:	lea    ecx,[esi+esi*2]
10059cd5:	push   0x1
10059cd7:	mov    eax,DWORD PTR [edi+ecx*4+0x8]
10059cdb:	call   0x1004f919
10059ce0:	mov    eax,DWORD PTR [edi+ecx*4]
10059ce3:	mov    DWORD PTR [ebx+0xc],eax
10059ce6:	mov    eax,DWORD PTR [edi+ecx*4+0x8]
10059cea:	xor    ebx,ebx
10059cec:	xor    ecx,ecx
10059cee:	xor    edx,edx
10059cf0:	xor    esi,esi
10059cf2:	xor    edi,edi
10059cf4:	call   eax
10059cf6:	mov    edi,DWORD PTR [ebx+0x8]
10059cf9:	lea    ecx,[esi+esi*2]
10059cfc:	mov    esi,DWORD PTR [edi+ecx*4]
10059cff:	jmp    0x10059c7c
10059d04:	mov    eax,0x0
10059d09:	jmp    0x10059d2e
10059d0b:	mov    eax,DWORD PTR [ebp+0x8]
10059d0e:	or     DWORD PTR [eax+0x4],0x8
10059d12:	mov    eax,0x1
10059d17:	jmp    0x10059d2e
10059d19:	push   ebp
10059d1a:	lea    ebp,[ebx+0x10]
10059d1d:	push   0xffffffff
10059d1f:	push   ebx
10059d20:	call   0x1004f869
10059d25:	add    esp,0x8
10059d28:	pop    ebp
10059d29:	mov    eax,0x1
10059d2e:	pop    ebp
10059d2f:	pop    edi
10059d30:	pop    esi
10059d31:	pop    ebx
10059d32:	mov    esp,ebp
10059d34:	pop    ebp
10059d35:	ret    
10059d36:	push   ebp
10059d37:	mov    ecx,DWORD PTR [esp+0x8]
10059d3b:	mov    ebp,DWORD PTR [ecx]
10059d3d:	mov    eax,DWORD PTR [ecx+0x1c]
10059d40:	push   eax
10059d41:	mov    eax,DWORD PTR [ecx+0x18]
10059d44:	push   eax
10059d45:	call   0x1004f869
10059d4a:	add    esp,0x8
10059d4d:	pop    ebp
10059d4e:	ret    0x4
10059d51:	push   ebp
10059d52:	mov    ebp,esp
10059d54:	sub    esp,0x28
10059d57:	push   ebx
10059d58:	push   esi
10059d59:	xor    ebx,ebx
10059d5b:	test   BYTE PTR [ebp+0x10],0x80
10059d5f:	push   edi
10059d60:	push   0x10
10059d62:	mov    esi,eax
10059d64:	mov    DWORD PTR [ebp-0x14],ebx
10059d67:	mov    DWORD PTR [ebp-0x18],ebx
10059d6a:	mov    BYTE PTR [ebp-0x2],bl
10059d6d:	mov    DWORD PTR [ebp-0x28],0xc
10059d74:	mov    DWORD PTR [ebp-0x24],ebx
10059d77:	pop    edi
10059d78:	je     0x10059d83
10059d7a:	mov    DWORD PTR [ebp-0x20],ebx
10059d7d:	mov    BYTE PTR [ebp-0x1],0x10
10059d81:	jmp    0x10059d8d
10059d83:	mov    DWORD PTR [ebp-0x20],0x1
10059d8a:	mov    BYTE PTR [ebp-0x1],bl
10059d8d:	lea    eax,[ebp-0x14]
10059d90:	push   eax
10059d91:	call   0x1005cd32
10059d96:	test   eax,eax
10059d98:	pop    ecx
10059d99:	je     0x10059da8
10059d9b:	push   ebx
10059d9c:	push   ebx
10059d9d:	push   ebx
10059d9e:	push   ebx
10059d9f:	push   ebx
10059da0:	call   0x10043380
10059da5:	add    esp,0x14
10059da8:	lea    eax,[ebp-0x18]
10059dab:	push   eax
10059dac:	call   0x10047731
10059db1:	test   eax,eax
10059db3:	pop    ecx
10059db4:	je     0x10059dc3
10059db6:	push   ebx
10059db7:	push   ebx
10059db8:	push   ebx
10059db9:	push   ebx
10059dba:	push   ebx
10059dbb:	call   0x10043380
10059dc0:	add    esp,0x14
10059dc3:	mov    eax,0x8000
10059dc8:	test   DWORD PTR [ebp+0x10],eax
10059dcb:	jne    0x10059ddf
10059dcd:	test   DWORD PTR [ebp+0x10],0x74000
10059dd4:	jne    0x10059ddb
10059dd6:	cmp    DWORD PTR [ebp-0x14],eax
10059dd9:	je     0x10059ddf
10059ddb:	or     BYTE PTR [ebp-0x1],0x80
10059ddf:	mov    eax,DWORD PTR [ebp+0x10]
10059de2:	push   0x3
10059de4:	pop    edx
10059de5:	and    eax,edx
10059de7:	sub    eax,ebx
10059de9:	mov    ecx,0x80000000
10059dee:	je     0x10059e2e
10059df0:	dec    eax
10059df1:	je     0x10059e25
10059df3:	dec    eax
10059df4:	je     0x10059e1c
10059df6:	call   0x10046c58
10059dfb:	mov    DWORD PTR [eax],ebx
10059dfd:	or     DWORD PTR [esi],0xffffffff
10059e00:	call   0x10046c45
10059e05:	push   0x16
10059e07:	pop    esi
10059e08:	push   ebx
10059e09:	push   ebx
10059e0a:	push   ebx
10059e0b:	push   ebx
10059e0c:	push   ebx
10059e0d:	mov    DWORD PTR [eax],esi
10059e0f:	call   0x1004347c
10059e14:	add    esp,0x14
10059e17:	jmp    0x1005a2ab
10059e1c:	mov    DWORD PTR [ebp-0xc],0xc0000000
10059e23:	jmp    0x10059e31
10059e25:	mov    DWORD PTR [ebp-0xc],0x40000000
10059e2c:	jmp    0x10059e31
10059e2e:	mov    DWORD PTR [ebp-0xc],ecx
10059e31:	mov    eax,DWORD PTR [ebp+0x14]
10059e34:	sub    eax,edi
10059e36:	je     0x10059e6d
10059e38:	sub    eax,edi
10059e3a:	je     0x10059e64
10059e3c:	sub    eax,edi
10059e3e:	je     0x10059e5b
10059e40:	sub    eax,edi
10059e42:	je     0x10059e56
10059e44:	sub    eax,0x40
10059e47:	jne    0x10059df6
10059e49:	xor    eax,eax
10059e4b:	cmp    DWORD PTR [ebp-0xc],ecx
10059e4e:	sete   al
10059e51:	mov    DWORD PTR [ebp-0x8],eax
10059e54:	jmp    0x10059e70
10059e56:	mov    DWORD PTR [ebp-0x8],edx
10059e59:	jmp    0x10059e70
10059e5b:	mov    DWORD PTR [ebp-0x8],0x2
10059e62:	jmp    0x10059e70
10059e64:	mov    DWORD PTR [ebp-0x8],0x1
10059e6b:	jmp    0x10059e70
10059e6d:	mov    DWORD PTR [ebp-0x8],ebx
10059e70:	mov    eax,DWORD PTR [ebp+0x10]
10059e73:	mov    edx,0x700
10059e78:	and    eax,edx
10059e7a:	mov    ecx,0x400
10059e7f:	cmp    eax,ecx
10059e81:	jg     0x10059ec1
10059e83:	je     0x10059eb8
10059e85:	cmp    eax,ebx
10059e87:	je     0x10059eb8
10059e89:	cmp    eax,0x100
10059e8e:	je     0x10059eaf
10059e90:	cmp    eax,0x200
10059e95:	je     0x10059f33
10059e9b:	cmp    eax,0x300
10059ea0:	jne    0x10059df6
10059ea6:	mov    DWORD PTR [ebp-0x10],0x2
10059ead:	jmp    0x10059ede
10059eaf:	mov    DWORD PTR [ebp-0x10],0x4
10059eb6:	jmp    0x10059ede
10059eb8:	mov    DWORD PTR [ebp-0x10],0x3
10059ebf:	jmp    0x10059ede
10059ec1:	cmp    eax,0x500
10059ec6:	je     0x10059ed7
10059ec8:	cmp    eax,0x600
10059ecd:	je     0x10059f33
10059ecf:	cmp    eax,edx
10059ed1:	jne    0x10059df6
10059ed7:	mov    DWORD PTR [ebp-0x10],0x1
10059ede:	mov    ecx,DWORD PTR [ebp+0x10]
10059ee1:	mov    eax,0x100
10059ee6:	test   eax,ecx
10059ee8:	mov    edi,0x80
10059eed:	je     0x10059f01
10059eef:	mov    edx,DWORD PTR ds:0x1007fde4
10059ef5:	not    edx
10059ef7:	and    edx,DWORD PTR [ebp+0x18]
10059efa:	test   dl,dl
10059efc:	js     0x10059f01
10059efe:	xor    edi,edi
10059f00:	inc    edi
10059f01:	test   cl,0x40
10059f04:	je     0x10059f1d
10059f06:	or     DWORD PTR [ebp-0xc],0x10000
10059f0d:	or     edi,0x4000000
10059f13:	cmp    DWORD PTR [ebp-0x18],0x2
10059f17:	jne    0x10059f1d
10059f19:	or     DWORD PTR [ebp-0x8],0x4
10059f1d:	test   cx,0x1000
10059f22:	je     0x10059f26
10059f24:	or     edi,eax
10059f26:	test   cl,0x20
10059f29:	je     0x10059f3c
10059f2b:	or     edi,0x8000000
10059f31:	jmp    0x10059f47
10059f33:	mov    DWORD PTR [ebp-0x10],0x5
10059f3a:	jmp    0x10059ede
10059f3c:	test   cl,0x10
10059f3f:	je     0x10059f47
10059f41:	or     edi,0x10000000
10059f47:	call   0x1004fb82
10059f4c:	cmp    eax,0xffffffff
10059f4f:	mov    DWORD PTR [esi],eax
10059f51:	jne    0x10059f6a
10059f53:	call   0x10046c58
10059f58:	mov    DWORD PTR [eax],ebx
10059f5a:	or     DWORD PTR [esi],0xffffffff
10059f5d:	call   0x10046c45
10059f62:	mov    DWORD PTR [eax],0x18
10059f68:	jmp    0x10059fba
10059f6a:	mov    eax,DWORD PTR [ebp+0x8]
10059f6d:	push   ebx
10059f6e:	push   edi
10059f6f:	push   DWORD PTR [ebp-0x10]
10059f72:	mov    DWORD PTR [eax],0x1
10059f78:	lea    eax,[ebp-0x28]
10059f7b:	push   eax
10059f7c:	push   DWORD PTR [ebp-0x8]
10059f7f:	push   DWORD PTR [ebp-0xc]
10059f82:	push   DWORD PTR [ebp+0xc]
10059f85:	call   DWORD PTR ds:0x10066254
10059f8b:	mov    edi,eax
10059f8d:	cmp    edi,0xffffffff
10059f90:	jne    0x10059fc6
10059f92:	mov    esi,DWORD PTR [esi]
10059f94:	mov    eax,esi
10059f96:	and    esi,0x1f
10059f99:	imul   esi,esi,0x28
10059f9c:	sar    eax,0x5
10059f9f:	mov    eax,DWORD PTR [eax*4+0x10082480]
10059fa6:	lea    eax,[eax+esi*1+0x4]
10059faa:	and    BYTE PTR [eax],0xfe
10059fad:	call   DWORD PTR ds:0x100660cc
10059fb3:	push   eax
10059fb4:	call   0x10046c6b
10059fb9:	pop    ecx
10059fba:	call   0x10046c45
10059fbf:	mov    eax,DWORD PTR [eax]
10059fc1:	jmp    0x1005a38a
10059fc6:	push   edi
10059fc7:	call   DWORD PTR ds:0x100661f4
10059fcd:	cmp    eax,ebx
10059fcf:	jne    0x10059ff5
10059fd1:	mov    esi,DWORD PTR [esi]
10059fd3:	mov    eax,esi
10059fd5:	and    esi,0x1f
10059fd8:	imul   esi,esi,0x28
10059fdb:	sar    eax,0x5
10059fde:	mov    eax,DWORD PTR [eax*4+0x10082480]
10059fe5:	lea    eax,[eax+esi*1+0x4]
10059fe9:	and    BYTE PTR [eax],0xfe
10059fec:	push   edi
10059fed:	call   DWORD PTR ds:0x10066070
10059ff3:	jmp    0x10059fad
10059ff5:	cmp    eax,0x2
10059ff8:	jne    0x1005a000
10059ffa:	or     BYTE PTR [ebp-0x1],0x40
10059ffe:	jmp    0x1005a009
1005a000:	cmp    eax,0x3
1005a003:	jne    0x1005a009
1005a005:	or     BYTE PTR [ebp-0x1],0x8
1005a009:	push   edi
1005a00a:	push   DWORD PTR [esi]
1005a00c:	call   0x1004f951
1005a011:	mov    eax,DWORD PTR [esi]
1005a013:	mov    edx,eax
1005a015:	and    eax,0x1f
1005a018:	imul   eax,eax,0x28
1005a01b:	sar    edx,0x5
1005a01e:	mov    edx,DWORD PTR [edx*4+0x10082480]
1005a025:	pop    ecx
1005a026:	pop    ecx
1005a027:	mov    cl,BYTE PTR [ebp-0x1]
1005a02a:	or     cl,0x1
1005a02d:	mov    BYTE PTR [edx+eax*1+0x4],cl
1005a031:	mov    eax,DWORD PTR [esi]
1005a033:	mov    edx,eax
1005a035:	and    eax,0x1f
1005a038:	imul   eax,eax,0x28
1005a03b:	sar    edx,0x5
1005a03e:	mov    edx,DWORD PTR [edx*4+0x10082480]
1005a045:	lea    eax,[edx+eax*1+0x24]
1005a049:	and    BYTE PTR [eax],0x80
1005a04c:	mov    BYTE PTR [ebp-0x3],cl
1005a04f:	and    BYTE PTR [ebp-0x3],0x48
1005a053:	mov    BYTE PTR [ebp-0x1],cl
1005a056:	jne    0x1005a0dc
1005a05c:	test   cl,0x80
1005a05f:	je     0x1005a316
1005a065:	test   BYTE PTR [ebp+0x10],0x2
1005a069:	je     0x1005a0dc
1005a06b:	push   0x2
1005a06d:	or     edi,0xffffffff
1005a070:	push   edi
1005a071:	push   DWORD PTR [esi]
1005a073:	call   0x10058e7e
1005a078:	add    esp,0xc
1005a07b:	cmp    eax,edi
1005a07d:	mov    DWORD PTR [ebp-0x8],eax
1005a080:	jne    0x1005a09b
1005a082:	call   0x10046c58
1005a087:	cmp    DWORD PTR [eax],0x83
1005a08d:	je     0x1005a0dc
1005a08f:	push   DWORD PTR [esi]
1005a091:	call   0x100507e1
1005a096:	jmp    0x10059fb9
1005a09b:	push   0x1
1005a09d:	lea    eax,[ebp-0x4]
1005a0a0:	push   eax
1005a0a1:	push   DWORD PTR [esi]
1005a0a3:	mov    BYTE PTR [ebp-0x4],bl
1005a0a6:	call   0x100585ea
1005a0ab:	add    esp,0xc
1005a0ae:	test   eax,eax
1005a0b0:	jne    0x1005a0cc
1005a0b2:	cmp    BYTE PTR [ebp-0x4],0x1a
1005a0b6:	jne    0x1005a0cc
1005a0b8:	mov    eax,DWORD PTR [ebp-0x8]
1005a0bb:	cdq    
1005a0bc:	push   edx
1005a0bd:	push   eax
1005a0be:	push   DWORD PTR [esi]
1005a0c0:	call   0x1005cac2
1005a0c5:	add    esp,0xc
1005a0c8:	cmp    eax,edi
1005a0ca:	je     0x1005a08f
1005a0cc:	push   ebx
1005a0cd:	push   ebx
1005a0ce:	push   DWORD PTR [esi]
1005a0d0:	call   0x10058e7e
1005a0d5:	add    esp,0xc
1005a0d8:	cmp    eax,edi
1005a0da:	je     0x1005a08f
1005a0dc:	test   BYTE PTR [ebp-0x1],0x80
1005a0e0:	je     0x1005a316
1005a0e6:	mov    ecx,0x74000
1005a0eb:	test   DWORD PTR [ebp+0x10],ecx
1005a0ee:	mov    edi,0x4000
1005a0f3:	jne    0x1005a104
1005a0f5:	mov    eax,DWORD PTR [ebp-0x14]
1005a0f8:	and    eax,ecx
1005a0fa:	jne    0x1005a101
1005a0fc:	or     DWORD PTR [ebp+0x10],edi
1005a0ff:	jmp    0x1005a104
1005a101:	or     DWORD PTR [ebp+0x10],eax
1005a104:	mov    eax,DWORD PTR [ebp+0x10]
1005a107:	and    eax,ecx
1005a109:	cmp    eax,edi
1005a10b:	je     0x1005a151
1005a10d:	cmp    eax,0x10000
1005a112:	je     0x1005a13d
1005a114:	cmp    eax,0x14000
1005a119:	je     0x1005a13d
1005a11b:	cmp    eax,0x20000
1005a120:	je     0x1005a14b
1005a122:	cmp    eax,0x24000
1005a127:	je     0x1005a14b
1005a129:	cmp    eax,0x40000
1005a12e:	je     0x1005a137
1005a130:	cmp    eax,0x44000
1005a135:	jne    0x1005a154
1005a137:	mov    BYTE PTR [ebp-0x2],0x1
1005a13b:	jmp    0x1005a154
1005a13d:	mov    ecx,DWORD PTR [ebp+0x10]
1005a140:	mov    eax,0x301
1005a145:	and    ecx,eax
1005a147:	cmp    ecx,eax
1005a149:	jne    0x1005a154
1005a14b:	mov    BYTE PTR [ebp-0x2],0x2
1005a14f:	jmp    0x1005a154
1005a151:	mov    BYTE PTR [ebp-0x2],bl
1005a154:	test   DWORD PTR [ebp+0x10],0x70000
1005a15b:	je     0x1005a316
1005a161:	test   BYTE PTR [ebp-0x1],0x40
1005a165:	mov    DWORD PTR [ebp-0x8],ebx
1005a168:	jne    0x1005a316
1005a16e:	mov    eax,DWORD PTR [ebp-0xc]
1005a171:	mov    ecx,0xc0000000
1005a176:	and    eax,ecx
1005a178:	cmp    eax,0x40000000
1005a17d:	je     0x1005a23a
1005a183:	cmp    eax,0x80000000
1005a188:	je     0x1005a201
1005a18a:	cmp    eax,ecx
1005a18c:	jne    0x1005a316
1005a192:	mov    eax,DWORD PTR [ebp-0x10]
1005a195:	cmp    eax,ebx
1005a197:	jbe    0x1005a316
1005a19d:	cmp    eax,0x2
1005a1a0:	jbe    0x1005a1b0
1005a1a2:	cmp    eax,0x4
1005a1a5:	jbe    0x1005a1d7
1005a1a7:	cmp    eax,0x5
1005a1aa:	jne    0x1005a316
1005a1b0:	movsx  eax,BYTE PTR [ebp-0x2]
1005a1b4:	xor    edi,edi
1005a1b6:	dec    eax
1005a1b7:	je     0x1005a2e3
1005a1bd:	dec    eax
1005a1be:	jne    0x1005a316
1005a1c4:	mov    DWORD PTR [ebp-0x8],0xfeff
1005a1cb:	mov    DWORD PTR [ebp-0x10],0x2
1005a1d2:	jmp    0x1005a2f1
1005a1d7:	push   0x2
1005a1d9:	push   ebx
1005a1da:	push   ebx
1005a1db:	push   DWORD PTR [esi]
1005a1dd:	call   0x1004c801
1005a1e2:	add    esp,0x10
1005a1e5:	or     eax,edx
1005a1e7:	je     0x1005a1b0
1005a1e9:	push   ebx
1005a1ea:	push   ebx
1005a1eb:	push   ebx
1005a1ec:	push   DWORD PTR [esi]
1005a1ee:	call   0x1004c801
1005a1f3:	and    eax,edx
1005a1f5:	add    esp,0x10
1005a1f8:	cmp    eax,0xffffffff
1005a1fb:	je     0x1005a08f
1005a201:	push   0x3
1005a203:	lea    eax,[ebp-0x8]
1005a206:	push   eax
1005a207:	push   DWORD PTR [esi]
1005a209:	call   0x100585ea
1005a20e:	add    esp,0xc
1005a211:	cmp    eax,0xffffffff
1005a214:	je     0x1005a08f
1005a21a:	cmp    eax,0x2
1005a21d:	je     0x1005a28a
1005a21f:	cmp    eax,0x3
1005a222:	jne    0x1005a2d5
1005a228:	cmp    DWORD PTR [ebp-0x8],0xbfbbef
1005a22f:	jne    0x1005a28a
1005a231:	mov    BYTE PTR [ebp-0x2],0x1
1005a235:	jmp    0x1005a316
1005a23a:	mov    eax,DWORD PTR [ebp-0x10]
1005a23d:	cmp    eax,ebx
1005a23f:	jbe    0x1005a316
1005a245:	cmp    eax,0x2
1005a248:	jbe    0x1005a1b0
1005a24e:	cmp    eax,0x4
1005a251:	ja     0x1005a1a7
1005a257:	push   0x2
1005a259:	push   ebx
1005a25a:	push   ebx
1005a25b:	push   DWORD PTR [esi]
1005a25d:	call   0x1004c801
1005a262:	add    esp,0x10
1005a265:	or     eax,edx
1005a267:	je     0x1005a1b0
1005a26d:	push   ebx
1005a26e:	push   ebx
1005a26f:	push   ebx
1005a270:	push   DWORD PTR [esi]
1005a272:	call   0x1004c801
1005a277:	add    esp,0x10
1005a27a:	and    eax,edx
1005a27c:	cmp    eax,0xffffffff
1005a27f:	jne    0x1005a316
1005a285:	jmp    0x1005a08f
1005a28a:	mov    eax,DWORD PTR [ebp-0x8]
1005a28d:	and    eax,0xffff
1005a292:	cmp    eax,0xfffe
1005a297:	jne    0x1005a2b2
1005a299:	push   DWORD PTR [esi]
1005a29b:	call   0x100507e1
1005a2a0:	pop    ecx
1005a2a1:	call   0x10046c45
1005a2a6:	push   0x16
1005a2a8:	pop    esi
1005a2a9:	mov    DWORD PTR [eax],esi
1005a2ab:	mov    eax,esi
1005a2ad:	jmp    0x1005a38a
1005a2b2:	cmp    eax,0xfeff
1005a2b7:	jne    0x1005a2d5
1005a2b9:	push   ebx
1005a2ba:	push   0x2
1005a2bc:	push   DWORD PTR [esi]
1005a2be:	call   0x10058e7e
1005a2c3:	add    esp,0xc
1005a2c6:	cmp    eax,0xffffffff
1005a2c9:	je     0x1005a08f
1005a2cf:	mov    BYTE PTR [ebp-0x2],0x2
1005a2d3:	jmp    0x1005a316
1005a2d5:	push   ebx
1005a2d6:	push   ebx
1005a2d7:	push   DWORD PTR [esi]
1005a2d9:	call   0x10058e7e
1005a2de:	add    esp,0xc
1005a2e1:	jmp    0x1005a27c
1005a2e3:	mov    DWORD PTR [ebp-0x8],0xbfbbef
1005a2ea:	mov    DWORD PTR [ebp-0x10],0x3
1005a2f1:	mov    eax,DWORD PTR [ebp-0x10]
1005a2f4:	sub    eax,edi
1005a2f6:	push   eax
1005a2f7:	lea    eax,[ebp+edi*1-0x8]
1005a2fb:	push   eax
1005a2fc:	push   DWORD PTR [esi]
1005a2fe:	call   0x1004cf63
1005a303:	add    esp,0xc
1005a306:	cmp    eax,0xffffffff
1005a309:	je     0x1005a08f
1005a30f:	add    edi,eax
1005a311:	cmp    DWORD PTR [ebp-0x10],edi
1005a314:	jg     0x1005a2f1
1005a316:	mov    eax,DWORD PTR [esi]
1005a318:	mov    ecx,eax
1005a31a:	and    eax,0x1f
1005a31d:	imul   eax,eax,0x28
1005a320:	sar    ecx,0x5
1005a323:	mov    ecx,DWORD PTR [ecx*4+0x10082480]
1005a32a:	lea    eax,[ecx+eax*1+0x24]
1005a32e:	mov    cl,BYTE PTR [eax]
1005a330:	xor    cl,BYTE PTR [ebp-0x2]
1005a333:	and    cl,0x7f
1005a336:	xor    BYTE PTR [eax],cl
1005a338:	mov    eax,DWORD PTR [esi]
1005a33a:	mov    ecx,eax
1005a33c:	and    eax,0x1f
1005a33f:	imul   eax,eax,0x28
1005a342:	sar    ecx,0x5
1005a345:	mov    ecx,DWORD PTR [ecx*4+0x10082480]
1005a34c:	lea    eax,[ecx+eax*1+0x24]
1005a350:	mov    ecx,DWORD PTR [ebp+0x10]
1005a353:	mov    dl,BYTE PTR [eax]
1005a355:	shr    ecx,0x10
1005a358:	shl    cl,0x7
1005a35b:	and    dl,0x7f
1005a35e:	or     cl,dl
1005a360:	cmp    BYTE PTR [ebp-0x3],bl
1005a363:	mov    BYTE PTR [eax],cl
1005a365:	jne    0x1005a388
1005a367:	test   BYTE PTR [ebp+0x10],0x8
1005a36b:	je     0x1005a388
1005a36d:	mov    esi,DWORD PTR [esi]
1005a36f:	mov    eax,esi
1005a371:	and    esi,0x1f
1005a374:	imul   esi,esi,0x28
1005a377:	sar    eax,0x5
1005a37a:	mov    eax,DWORD PTR [eax*4+0x10082480]
1005a381:	lea    eax,[eax+esi*1+0x4]
1005a385:	or     BYTE PTR [eax],0x20
1005a388:	mov    eax,ebx
1005a38a:	pop    edi
1005a38b:	pop    esi
1005a38c:	pop    ebx
1005a38d:	leave  
1005a38e:	ret    
1005a38f:	push   0x14
1005a391:	push   0x10074ba8
1005a396:	call   0x10046d84
1005a39b:	xor    esi,esi
1005a39d:	mov    DWORD PTR [ebp-0x1c],esi
1005a3a0:	xor    eax,eax
1005a3a2:	mov    edi,DWORD PTR [ebp+0x18]
1005a3a5:	cmp    edi,esi
1005a3a7:	setne  al
1005a3aa:	cmp    eax,esi
1005a3ac:	jne    0x1005a3c9
1005a3ae:	call   0x10046c45
1005a3b3:	push   0x16
1005a3b5:	pop    edi
1005a3b6:	mov    DWORD PTR [eax],edi
1005a3b8:	push   esi
1005a3b9:	push   esi
1005a3ba:	push   esi
1005a3bb:	push   esi
1005a3bc:	push   esi
1005a3bd:	call   0x1004347c
1005a3c2:	add    esp,0x14
1005a3c5:	mov    eax,edi
1005a3c7:	jmp    0x1005a422
1005a3c9:	or     DWORD PTR [edi],0xffffffff
1005a3cc:	xor    eax,eax
1005a3ce:	cmp    DWORD PTR [ebp+0x8],esi
1005a3d1:	setne  al
1005a3d4:	cmp    eax,esi
1005a3d6:	je     0x1005a3ae
1005a3d8:	cmp    DWORD PTR [ebp+0x1c],esi
1005a3db:	je     0x1005a3ec
1005a3dd:	mov    eax,DWORD PTR [ebp+0x14]
1005a3e0:	and    eax,0xfffffe7f
1005a3e5:	neg    eax
1005a3e7:	sbb    eax,eax
1005a3e9:	inc    eax
1005a3ea:	je     0x1005a3ae
1005a3ec:	mov    DWORD PTR [ebp-0x4],esi
1005a3ef:	push   DWORD PTR [ebp+0x14]
1005a3f2:	push   DWORD PTR [ebp+0x10]
1005a3f5:	push   DWORD PTR [ebp+0xc]
1005a3f8:	push   DWORD PTR [ebp+0x8]
1005a3fb:	lea    eax,[ebp-0x1c]
1005a3fe:	push   eax
1005a3ff:	mov    eax,edi
1005a401:	call   0x10059d51
1005a406:	add    esp,0x14
1005a409:	mov    DWORD PTR [ebp-0x20],eax
1005a40c:	mov    DWORD PTR [ebp-0x4],0xfffffffe
1005a413:	call   0x1005a42d
1005a418:	mov    eax,DWORD PTR [ebp-0x20]
1005a41b:	cmp    eax,esi
1005a41d:	je     0x1005a422
1005a41f:	or     DWORD PTR [edi],0xffffffff
1005a422:	call   0x10046dc9
1005a427:	ret    
1005a428:	xor    esi,esi
1005a42a:	mov    edi,DWORD PTR [ebp+0x18]
1005a42d:	cmp    DWORD PTR [ebp-0x1c],esi
1005a430:	je     0x1005a45a
1005a432:	cmp    DWORD PTR [ebp-0x20],esi
1005a435:	je     0x1005a452
1005a437:	mov    eax,DWORD PTR [edi]
1005a439:	mov    ecx,eax
1005a43b:	sar    ecx,0x5
1005a43e:	and    eax,0x1f
1005a441:	imul   eax,eax,0x28
1005a444:	mov    ecx,DWORD PTR [ecx*4+0x10082480]
1005a44b:	lea    eax,[ecx+eax*1+0x4]
1005a44f:	and    BYTE PTR [eax],0xfe
1005a452:	push   DWORD PTR [edi]
1005a454:	call   0x1004fb60
1005a459:	pop    ecx
1005a45a:	ret    
1005a45b:	push   ebp
1005a45c:	mov    ebp,esp
1005a45e:	push   0x1
1005a460:	push   DWORD PTR [ebp+0x8]
1005a463:	push   DWORD PTR [ebp+0x18]
1005a466:	push   DWORD PTR [ebp+0x14]
1005a469:	push   DWORD PTR [ebp+0x10]
1005a46c:	push   DWORD PTR [ebp+0xc]
1005a46f:	call   0x1005a38f
1005a474:	add    esp,0x18
1005a477:	pop    ebp
1005a478:	ret    
1005a479:	push   ebp
1005a47a:	mov    ebp,esp
1005a47c:	sub    esp,0x10
1005a47f:	mov    eax,ds:0x10080bf4
1005a484:	push   ebx
1005a485:	xor    ebx,ebx
1005a487:	push   esi
1005a488:	mov    esi,DWORD PTR [ebp+0xc]
1005a48b:	mov    DWORD PTR [ebp-0x4],eax
1005a48e:	mov    DWORD PTR [ebp-0xc],ebx
1005a491:	mov    DWORD PTR [ebp-0x8],ebx
1005a494:	mov    DWORD PTR [ebp-0x10],ebx
1005a497:	jmp    0x1005a49a
1005a499:	inc    esi
1005a49a:	cmp    BYTE PTR [esi],0x20
1005a49d:	je     0x1005a499
1005a49f:	mov    al,BYTE PTR [esi]
1005a4a1:	cmp    al,0x61
1005a4a3:	je     0x1005a4de
1005a4a5:	cmp    al,0x72
1005a4a7:	je     0x1005a4d5
1005a4a9:	cmp    al,0x77
1005a4ab:	je     0x1005a4cc
1005a4ad:	call   0x10046c45
1005a4b2:	push   ebx
1005a4b3:	push   ebx
1005a4b4:	push   ebx
1005a4b5:	push   ebx
1005a4b6:	push   ebx
1005a4b7:	mov    DWORD PTR [eax],0x16
1005a4bd:	call   0x1004347c
1005a4c2:	add    esp,0x14
1005a4c5:	xor    eax,eax
1005a4c7:	jmp    0x1005a717
1005a4cc:	mov    DWORD PTR [ebp+0xc],0x301
1005a4d3:	jmp    0x1005a4e5
1005a4d5:	or     DWORD PTR [ebp-0x4],0x1
1005a4d9:	mov    DWORD PTR [ebp+0xc],ebx
1005a4dc:	jmp    0x1005a4e9
1005a4de:	mov    DWORD PTR [ebp+0xc],0x109
1005a4e5:	or     DWORD PTR [ebp-0x4],0x2
1005a4e9:	xor    ecx,ecx
1005a4eb:	inc    ecx
1005a4ec:	inc    esi
1005a4ed:	mov    al,BYTE PTR [esi]
1005a4ef:	cmp    al,bl
1005a4f1:	push   edi
1005a4f2:	je     0x1005a6b1
1005a4f8:	mov    edx,0x80
1005a4fd:	mov    edi,0x4000
1005a502:	cmp    ecx,ebx
1005a504:	je     0x1005a635
1005a50a:	movsx  eax,al
1005a50d:	cmp    eax,0x53
1005a510:	jg     0x1005a5b8
1005a516:	je     0x1005a5a6
1005a51c:	sub    eax,0x20
1005a51f:	je     0x1005a62a
1005a525:	sub    eax,0xb
1005a528:	je     0x1005a580
1005a52a:	dec    eax
1005a52b:	je     0x1005a574
1005a52d:	sub    eax,0x18
1005a530:	je     0x1005a561
1005a532:	sub    eax,0xa
1005a535:	je     0x1005a559
1005a537:	sub    eax,0x4
1005a53a:	jne    0x1005a6ba
1005a540:	cmp    DWORD PTR [ebp-0x8],ebx
1005a543:	jne    0x1005a61f
1005a549:	or     DWORD PTR [ebp+0xc],0x10
1005a54d:	mov    DWORD PTR [ebp-0x8],0x1
1005a554:	jmp    0x1005a62a
1005a559:	or     DWORD PTR [ebp+0xc],edx
1005a55c:	jmp    0x1005a62a
1005a561:	test   BYTE PTR [ebp+0xc],0x40
1005a565:	jne    0x1005a61f
1005a56b:	or     DWORD PTR [ebp+0xc],0x40
1005a56f:	jmp    0x1005a62a
1005a574:	mov    DWORD PTR [ebp-0x10],0x1
1005a57b:	jmp    0x1005a61f
1005a580:	test   BYTE PTR [ebp+0xc],0x2
1005a584:	jne    0x1005a61f
1005a58a:	mov    eax,DWORD PTR [ebp+0xc]
1005a58d:	and    eax,0xfffffffe
1005a590:	or     eax,0x2
1005a593:	mov    DWORD PTR [ebp+0xc],eax
1005a596:	mov    eax,DWORD PTR [ebp-0x4]
1005a599:	and    eax,0xfffffffc
1005a59c:	or     eax,edx
1005a59e:	mov    DWORD PTR [ebp-0x4],eax
1005a5a1:	jmp    0x1005a62a
1005a5a6:	cmp    DWORD PTR [ebp-0x8],ebx
1005a5a9:	jne    0x1005a61f
1005a5ab:	or     DWORD PTR [ebp+0xc],0x20
1005a5af:	mov    DWORD PTR [ebp-0x8],0x1
1005a5b6:	jmp    0x1005a62a
1005a5b8:	sub    eax,0x54
1005a5bb:	je     0x1005a617
1005a5bd:	sub    eax,0xe
1005a5c0:	je     0x1005a606
1005a5c2:	dec    eax
1005a5c3:	je     0x1005a5f5
1005a5c5:	sub    eax,0xb
1005a5c8:	je     0x1005a5e0
1005a5ca:	sub    eax,0x6
1005a5cd:	jne    0x1005a6ba
1005a5d3:	test   WORD PTR [ebp+0xc],0xc000
1005a5d9:	jne    0x1005a61f
1005a5db:	or     DWORD PTR [ebp+0xc],edi
1005a5de:	jmp    0x1005a62a
1005a5e0:	cmp    DWORD PTR [ebp-0xc],ebx
1005a5e3:	jne    0x1005a61f
1005a5e5:	and    DWORD PTR [ebp-0x4],0xffffbfff
1005a5ec:	mov    DWORD PTR [ebp-0xc],0x1
1005a5f3:	jmp    0x1005a62a
1005a5f5:	cmp    DWORD PTR [ebp-0xc],ebx
1005a5f8:	jne    0x1005a61f
1005a5fa:	or     DWORD PTR [ebp-0x4],edi
1005a5fd:	mov    DWORD PTR [ebp-0xc],0x1
1005a604:	jmp    0x1005a62a
1005a606:	test   WORD PTR [ebp+0xc],0xc000
1005a60c:	jne    0x1005a61f
1005a60e:	or     DWORD PTR [ebp+0xc],0x8000
1005a615:	jmp    0x1005a62a
1005a617:	test   WORD PTR [ebp+0xc],0x1000
1005a61d:	je     0x1005a623
1005a61f:	xor    ecx,ecx
1005a621:	jmp    0x1005a62a
1005a623:	or     DWORD PTR [ebp+0xc],0x1000
1005a62a:	inc    esi
1005a62b:	mov    al,BYTE PTR [esi]
1005a62d:	cmp    al,bl
1005a62f:	jne    0x1005a502
1005a635:	cmp    DWORD PTR [ebp-0x10],ebx
1005a638:	je     0x1005a6b1
1005a63a:	jmp    0x1005a63d
1005a63c:	inc    esi
1005a63d:	cmp    BYTE PTR [esi],0x20
1005a640:	je     0x1005a63c
1005a642:	push   0x4
1005a644:	push   esi
1005a645:	push   0x1006cac4
1005a64a:	call   0x1005cecf
1005a64f:	add    esp,0xc
1005a652:	test   eax,eax
1005a654:	jne    0x1005a6ba
1005a656:	add    esi,0x4
1005a659:	push   0x1006cacc
1005a65e:	push   esi
1005a65f:	call   0x1005c54a
1005a664:	test   eax,eax
1005a666:	pop    ecx
1005a667:	pop    ecx
1005a668:	jne    0x1005a676
1005a66a:	add    esi,0x5
1005a66d:	or     DWORD PTR [ebp+0xc],0x40000
1005a674:	jmp    0x1005a6b1
1005a676:	push   0x1006cad4
1005a67b:	push   esi
1005a67c:	call   0x1005c54a
1005a681:	test   eax,eax
1005a683:	pop    ecx
1005a684:	pop    ecx
1005a685:	jne    0x1005a693
1005a687:	add    esi,0x8
1005a68a:	or     DWORD PTR [ebp+0xc],0x20000
1005a691:	jmp    0x1005a6b1
1005a693:	push   0x1006cae0
1005a698:	push   esi
1005a699:	call   0x1005c54a
1005a69e:	test   eax,eax
1005a6a0:	pop    ecx
1005a6a1:	pop    ecx
1005a6a2:	jne    0x1005a6ba
1005a6a4:	add    esi,0x7
1005a6a7:	or     DWORD PTR [ebp+0xc],0x10000
1005a6ae:	jmp    0x1005a6b1
1005a6b0:	inc    esi
1005a6b1:	cmp    BYTE PTR [esi],0x20
1005a6b4:	je     0x1005a6b0
1005a6b6:	cmp    BYTE PTR [esi],bl
1005a6b8:	je     0x1005a6d4
1005a6ba:	call   0x10046c45
1005a6bf:	push   ebx
1005a6c0:	push   ebx
1005a6c1:	push   ebx
1005a6c2:	push   ebx
1005a6c3:	push   ebx
1005a6c4:	mov    DWORD PTR [eax],0x16
1005a6ca:	call   0x1004347c
1005a6cf:	add    esp,0x14
1005a6d2:	jmp    0x1005a6f2
1005a6d4:	push   0x180
1005a6d9:	push   DWORD PTR [ebp+0x10]
1005a6dc:	lea    eax,[ebp-0x10]
1005a6df:	push   DWORD PTR [ebp+0xc]
1005a6e2:	push   DWORD PTR [ebp+0x8]
1005a6e5:	push   eax
1005a6e6:	call   0x1005a45b
1005a6eb:	add    esp,0x14
1005a6ee:	test   eax,eax
1005a6f0:	je     0x1005a6f6
1005a6f2:	xor    eax,eax
1005a6f4:	jmp    0x1005a716
1005a6f6:	mov    eax,DWORD PTR [ebp+0x14]
1005a6f9:	inc    DWORD PTR ds:0x1008046c
1005a6ff:	mov    ecx,DWORD PTR [ebp-0x4]
1005a702:	mov    DWORD PTR [eax+0xc],ecx
1005a705:	mov    ecx,DWORD PTR [ebp-0x10]
1005a708:	mov    DWORD PTR [eax+0x4],ebx
1005a70b:	mov    DWORD PTR [eax],ebx
1005a70d:	mov    DWORD PTR [eax+0x8],ebx
1005a710:	mov    DWORD PTR [eax+0x1c],ebx
1005a713:	mov    DWORD PTR [eax+0x10],ecx
1005a716:	pop    edi
1005a717:	pop    esi
1005a718:	pop    ebx
1005a719:	leave  
1005a71a:	ret    
1005a71b:	push   0x10
1005a71d:	push   0x10074bc8
1005a722:	call   0x10046d84
1005a727:	xor    ebx,ebx
1005a729:	xor    edi,edi
1005a72b:	mov    DWORD PTR [ebp-0x1c],edi
1005a72e:	push   0x1
1005a730:	call   0x10047d8d
1005a735:	pop    ecx
1005a736:	mov    DWORD PTR [ebp-0x4],ebx
1005a739:	xor    esi,esi
1005a73b:	mov    DWORD PTR [ebp-0x20],esi
1005a73e:	cmp    esi,DWORD PTR ds:0x10082460
1005a744:	jge    0x1005a80b
1005a74a:	mov    eax,ds:0x10081440
1005a74f:	lea    eax,[eax+esi*4]
1005a752:	cmp    DWORD PTR [eax],ebx
1005a754:	je     0x1005a7a6
1005a756:	mov    eax,DWORD PTR [eax]
1005a758:	test   BYTE PTR [eax+0xc],0x83
1005a75c:	jne    0x1005a79f
1005a75e:	lea    eax,[esi-0x3]
1005a761:	cmp    eax,0x10
1005a764:	ja     0x1005a778
1005a766:	lea    eax,[esi+0x10]
1005a769:	push   eax
1005a76a:	call   0x10047cca
1005a76f:	pop    ecx
1005a770:	test   eax,eax
1005a772:	je     0x1005a80b
1005a778:	mov    eax,ds:0x10081440
1005a77d:	push   DWORD PTR [eax+esi*4]
1005a780:	push   esi
1005a781:	call   0x1004d1e7
1005a786:	pop    ecx
1005a787:	pop    ecx
1005a788:	mov    eax,ds:0x10081440
1005a78d:	mov    eax,DWORD PTR [eax+esi*4]
1005a790:	test   BYTE PTR [eax+0xc],0x83
1005a794:	je     0x1005a7a2
1005a796:	push   eax
1005a797:	push   esi
1005a798:	call   0x1004d239
1005a79d:	pop    ecx
1005a79e:	pop    ecx
1005a79f:	inc    esi
1005a7a0:	jmp    0x1005a73b
1005a7a2:	mov    edi,eax
1005a7a4:	jmp    0x1005a808
1005a7a6:	shl    esi,0x2
1005a7a9:	push   0x38
1005a7ab:	call   0x10047512
1005a7b0:	pop    ecx
1005a7b1:	mov    ecx,DWORD PTR ds:0x10081440
1005a7b7:	mov    DWORD PTR [esi+ecx*1],eax
1005a7ba:	mov    eax,ds:0x10081440
1005a7bf:	add    eax,esi
1005a7c1:	cmp    DWORD PTR [eax],ebx
1005a7c3:	je     0x1005a80b
1005a7c5:	push   0xfa0
1005a7ca:	mov    eax,DWORD PTR [eax]
1005a7cc:	add    eax,0x20
1005a7cf:	push   eax
1005a7d0:	call   0x1004c68b
1005a7d5:	pop    ecx
1005a7d6:	pop    ecx
1005a7d7:	test   eax,eax
1005a7d9:	mov    eax,ds:0x10081440
1005a7de:	jne    0x1005a7f3
1005a7e0:	push   DWORD PTR [esi+eax*1]
1005a7e3:	call   0x100435f8
1005a7e8:	pop    ecx
1005a7e9:	mov    eax,ds:0x10081440
1005a7ee:	mov    DWORD PTR [esi+eax*1],ebx
1005a7f1:	jmp    0x1005a80b
1005a7f3:	mov    eax,DWORD PTR [esi+eax*1]
1005a7f6:	add    eax,0x20
1005a7f9:	push   eax
1005a7fa:	call   DWORD PTR ds:0x100660f0
1005a800:	mov    eax,ds:0x10081440
1005a805:	mov    edi,DWORD PTR [esi+eax*1]
1005a808:	mov    DWORD PTR [ebp-0x1c],edi
1005a80b:	cmp    edi,ebx
1005a80d:	je     0x1005a821
1005a80f:	mov    DWORD PTR [edi+0x4],ebx
1005a812:	mov    DWORD PTR [edi+0xc],ebx
1005a815:	mov    DWORD PTR [edi+0x8],ebx
1005a818:	mov    DWORD PTR [edi],ebx
1005a81a:	mov    DWORD PTR [edi+0x1c],ebx
1005a81d:	or     DWORD PTR [edi+0x10],0xffffffff
1005a821:	mov    DWORD PTR [ebp-0x4],0xfffffffe
1005a828:	call   0x1005a838
1005a82d:	mov    eax,edi
1005a82f:	call   0x10046dc9
1005a834:	ret    
1005a835:	mov    edi,DWORD PTR [ebp-0x1c]
1005a838:	push   0x1
1005a83a:	call   0x10047cb5
1005a83f:	pop    ecx
1005a840:	ret    
1005a841:	mov    DWORD PTR [ecx],0x1006caf0
1005a847:	jmp    0x100430c0
1005a84c:	push   esi
1005a84d:	mov    esi,ecx
1005a84f:	mov    DWORD PTR [esi],0x1006caf0
1005a855:	call   0x100430c0
1005a85a:	test   BYTE PTR [esp+0x8],0x1
1005a85f:	je     0x1005a868
1005a861:	push   esi
1005a862:	call   0x10042f82
1005a867:	pop    ecx
1005a868:	mov    eax,esi
1005a86a:	pop    esi
1005a86b:	ret    0x4
1005a86e:	push   esi
1005a86f:	push   edi
1005a870:	mov    edi,DWORD PTR [esp+0xc]
1005a874:	mov    eax,DWORD PTR [edi+0x4]
1005a877:	test   eax,eax
1005a879:	je     0x1005a8c4
1005a87b:	lea    edx,[eax+0x8]
1005a87e:	cmp    BYTE PTR [edx],0x0
1005a881:	je     0x1005a8c4
1005a883:	mov    esi,DWORD PTR [esp+0x10]
1005a887:	mov    ecx,DWORD PTR [esi+0x4]
1005a88a:	cmp    eax,ecx
1005a88c:	je     0x1005a8a2
1005a88e:	add    ecx,0x8
1005a891:	push   ecx
1005a892:	push   edx
1005a893:	call   0x100479f0
1005a898:	test   eax,eax
1005a89a:	pop    ecx
1005a89b:	pop    ecx
1005a89c:	je     0x1005a8a2
1005a89e:	xor    eax,eax
1005a8a0:	jmp    0x1005a8c7
1005a8a2:	test   BYTE PTR [esi],0x2
1005a8a5:	je     0x1005a8ac
1005a8a7:	test   BYTE PTR [edi],0x8
1005a8aa:	je     0x1005a89e
1005a8ac:	mov    eax,DWORD PTR [esp+0x14]
1005a8b0:	mov    eax,DWORD PTR [eax]
1005a8b2:	test   al,0x1
1005a8b4:	je     0x1005a8bb
1005a8b6:	test   BYTE PTR [edi],0x1
1005a8b9:	je     0x1005a89e
1005a8bb:	test   al,0x2
1005a8bd:	je     0x1005a8c4
1005a8bf:	test   BYTE PTR [edi],0x2
1005a8c2:	je     0x1005a89e
1005a8c4:	xor    eax,eax
1005a8c6:	inc    eax
1005a8c7:	pop    edi
1005a8c8:	pop    esi
1005a8c9:	ret    
1005a8ca:	mov    eax,DWORD PTR [esp+0x4]
1005a8ce:	mov    eax,DWORD PTR [eax]
1005a8d0:	mov    eax,DWORD PTR [eax]
1005a8d2:	cmp    eax,0xe0434f4d
1005a8d7:	je     0x1005a8f1
1005a8d9:	cmp    eax,0xe06d7363
1005a8de:	jne    0x1005a90b
1005a8e0:	call   0x100471ec
1005a8e5:	and    DWORD PTR [eax+0x90],0x0
1005a8ec:	jmp    0x10046cee
1005a8f1:	call   0x100471ec
1005a8f6:	cmp    DWORD PTR [eax+0x90],0x0
1005a8fd:	jle    0x1005a90b
1005a8ff:	call   0x100471ec
1005a904:	add    eax,0x90
1005a909:	dec    DWORD PTR [eax]
1005a90b:	xor    eax,eax
1005a90d:	ret    
1005a90e:	push   0x10
1005a910:	push   0x10074be8
1005a915:	call   0x10046d84
1005a91a:	mov    edi,DWORD PTR [ebp+0x10]
1005a91d:	mov    ebx,DWORD PTR [ebp+0x8]
1005a920:	cmp    DWORD PTR [edi+0x4],0x80
1005a927:	jg     0x1005a92f
1005a929:	movsx  esi,BYTE PTR [ebx+0x8]
1005a92d:	jmp    0x1005a932
1005a92f:	mov    esi,DWORD PTR [ebx+0x8]
1005a932:	mov    DWORD PTR [ebp-0x1c],esi
1005a935:	call   0x100471ec
1005a93a:	add    eax,0x90
1005a93f:	inc    DWORD PTR [eax]
1005a941:	and    DWORD PTR [ebp-0x4],0x0
1005a945:	cmp    esi,DWORD PTR [ebp+0x14]
1005a948:	je     0x1005a9af
1005a94a:	cmp    esi,0xffffffff
1005a94d:	jle    0x1005a954
1005a94f:	cmp    esi,DWORD PTR [edi+0x4]
1005a952:	jl     0x1005a959
1005a954:	call   0x10046d3a
1005a959:	mov    eax,esi
1005a95b:	shl    eax,0x3
1005a95e:	mov    ecx,DWORD PTR [edi+0x8]
1005a961:	add    ecx,eax
1005a963:	mov    esi,DWORD PTR [ecx]
1005a965:	mov    DWORD PTR [ebp-0x20],esi
1005a968:	mov    DWORD PTR [ebp-0x4],0x1
1005a96f:	cmp    DWORD PTR [ecx+0x4],0x0
1005a973:	je     0x1005a98a
1005a975:	mov    DWORD PTR [ebx+0x8],esi
1005a978:	push   0x103
1005a97d:	push   ebx
1005a97e:	mov    ecx,DWORD PTR [edi+0x8]
1005a981:	push   DWORD PTR [ecx+eax*1+0x4]
1005a985:	call   0x1005b4d0
1005a98a:	and    DWORD PTR [ebp-0x4],0x0
1005a98e:	jmp    0x1005a9aa
1005a990:	push   DWORD PTR [ebp-0x14]
1005a993:	call   0x1005a8ca
1005a998:	pop    ecx
1005a999:	ret    
1005a99a:	mov    esp,DWORD PTR [ebp-0x18]
1005a99d:	and    DWORD PTR [ebp-0x4],0x0
1005a9a1:	mov    edi,DWORD PTR [ebp+0x10]
1005a9a4:	mov    ebx,DWORD PTR [ebp+0x8]
1005a9a7:	mov    esi,DWORD PTR [ebp-0x20]
1005a9aa:	mov    DWORD PTR [ebp-0x1c],esi
1005a9ad:	jmp    0x1005a945
1005a9af:	mov    DWORD PTR [ebp-0x4],0xfffffffe
1005a9b6:	call   0x1005a9d4
1005a9bb:	cmp    esi,DWORD PTR [ebp+0x14]
1005a9be:	je     0x1005a9c5
1005a9c0:	call   0x10046d3a
1005a9c5:	mov    DWORD PTR [ebx+0x8],esi
1005a9c8:	call   0x10046dc9
1005a9cd:	ret    
1005a9ce:	mov    ebx,DWORD PTR [ebp+0x8]
1005a9d1:	mov    esi,DWORD PTR [ebp-0x1c]
1005a9d4:	call   0x100471ec
1005a9d9:	cmp    DWORD PTR [eax+0x90],0x0
1005a9e0:	jle    0x1005a9ee
1005a9e2:	call   0x100471ec
1005a9e7:	add    eax,0x90
1005a9ec:	dec    DWORD PTR [eax]
1005a9ee:	ret    
1005a9ef:	mov    eax,DWORD PTR [eax]
1005a9f1:	cmp    DWORD PTR [eax],0xe06d7363
1005a9f7:	jne    0x1005aa31
1005a9f9:	cmp    DWORD PTR [eax+0x10],0x3
1005a9fd:	jne    0x1005aa31
1005a9ff:	mov    ecx,DWORD PTR [eax+0x14]
1005aa02:	cmp    ecx,0x19930520
1005aa08:	je     0x1005aa1a
1005aa0a:	cmp    ecx,0x19930521
1005aa10:	je     0x1005aa1a
1005aa12:	cmp    ecx,0x19930522
1005aa18:	jne    0x1005aa31
1005aa1a:	cmp    DWORD PTR [eax+0x1c],0x0
1005aa1e:	jne    0x1005aa31
1005aa20:	call   0x100471ec
1005aa25:	xor    ecx,ecx
1005aa27:	inc    ecx
1005aa28:	mov    DWORD PTR [eax+0x20c],ecx
1005aa2e:	mov    eax,ecx
1005aa30:	ret    
1005aa31:	xor    eax,eax
1005aa33:	ret    
1005aa34:	push   0x8
1005aa36:	push   0x10074c10
1005aa3b:	call   0x10046d84
1005aa40:	mov    ecx,DWORD PTR [ebp+0x8]
1005aa43:	test   ecx,ecx
1005aa45:	je     0x1005aa71
1005aa47:	cmp    DWORD PTR [ecx],0xe06d7363
1005aa4d:	jne    0x1005aa71
1005aa4f:	mov    eax,DWORD PTR [ecx+0x1c]
1005aa52:	test   eax,eax
1005aa54:	je     0x1005aa71
1005aa56:	mov    eax,DWORD PTR [eax+0x4]
1005aa59:	test   eax,eax
1005aa5b:	je     0x1005aa71
1005aa5d:	and    DWORD PTR [ebp-0x4],0x0
1005aa61:	push   eax
1005aa62:	push   DWORD PTR [ecx+0x18]
1005aa65:	call   0x10059268
1005aa6a:	mov    DWORD PTR [ebp-0x4],0xfffffffe
1005aa71:	call   0x10046dc9
1005aa76:	ret    
1005aa77:	xor    eax,eax
1005aa79:	cmp    BYTE PTR [ebp+0xc],al
1005aa7c:	setne  al
1005aa7f:	ret    
1005aa80:	mov    esp,DWORD PTR [ebp-0x18]
1005aa83:	jmp    0x10046cee
1005aa88:	mov    ecx,DWORD PTR [esp+0x8]
1005aa8c:	mov    eax,DWORD PTR [ecx]
1005aa8e:	push   esi
1005aa8f:	mov    esi,DWORD PTR [esp+0x8]
1005aa93:	add    eax,esi
1005aa95:	cmp    DWORD PTR [ecx+0x4],0x0
1005aa99:	jl     0x1005aaab
1005aa9b:	mov    edx,DWORD PTR [ecx+0x4]
1005aa9e:	mov    ecx,DWORD PTR [ecx+0x8]
1005aaa1:	mov    esi,DWORD PTR [edx+esi*1]
1005aaa4:	mov    ecx,DWORD PTR [esi+ecx*1]
1005aaa7:	add    ecx,edx
1005aaa9:	add    eax,ecx
1005aaab:	pop    esi
1005aaac:	ret    
1005aaad:	push   ebp
1005aaae:	mov    ebp,esp
1005aab0:	sub    esp,0xc
1005aab3:	test   edi,edi
1005aab5:	jne    0x1005aac1
1005aab7:	call   0x10046d3a
1005aabc:	jmp    0x10046cee
1005aac1:	and    DWORD PTR [ebp-0x8],0x0
1005aac5:	cmp    DWORD PTR [edi],0x0
1005aac8:	mov    BYTE PTR [ebp-0x1],0x0
1005aacc:	jle    0x1005ab21
1005aace:	push   ebx
1005aacf:	push   esi
1005aad0:	mov    eax,DWORD PTR [ebp+0x8]
1005aad3:	mov    eax,DWORD PTR [eax+0x1c]
1005aad6:	mov    eax,DWORD PTR [eax+0xc]
1005aad9:	mov    ebx,DWORD PTR [eax]
1005aadb:	test   ebx,ebx
1005aadd:	lea    esi,[eax+0x4]
1005aae0:	jle    0x1005ab15
1005aae2:	mov    eax,DWORD PTR [ebp-0x8]
1005aae5:	shl    eax,0x4
1005aae8:	mov    DWORD PTR [ebp-0xc],eax
1005aaeb:	mov    ecx,DWORD PTR [ebp+0x8]
1005aaee:	push   DWORD PTR [ecx+0x1c]
1005aaf1:	mov    eax,DWORD PTR [esi]
1005aaf3:	push   eax
1005aaf4:	mov    eax,DWORD PTR [edi+0x4]
1005aaf7:	add    eax,DWORD PTR [ebp-0xc]
1005aafa:	push   eax
1005aafb:	call   0x1005a86e
1005ab00:	add    esp,0xc
1005ab03:	test   eax,eax
1005ab05:	jne    0x1005ab11
1005ab07:	dec    ebx
1005ab08:	add    esi,0x4
1005ab0b:	test   ebx,ebx
1005ab0d:	jg     0x1005aaeb
1005ab0f:	jmp    0x1005ab15
1005ab11:	mov    BYTE PTR [ebp-0x1],0x1
1005ab15:	inc    DWORD PTR [ebp-0x8]
1005ab18:	mov    eax,DWORD PTR [ebp-0x8]
1005ab1b:	cmp    eax,DWORD PTR [edi]
1005ab1d:	jl     0x1005aad0
1005ab1f:	pop    esi
1005ab20:	pop    ebx
1005ab21:	mov    al,BYTE PTR [ebp-0x1]
1005ab24:	leave  
1005ab25:	ret    
1005ab26:	push   0x4
1005ab28:	mov    eax,0x1005f67b
1005ab2d:	call   0x10059b58
1005ab32:	call   0x100471ec
1005ab37:	cmp    DWORD PTR [eax+0x94],0x0
1005ab3e:	je     0x1005ab45
1005ab40:	call   0x10046d3a
1005ab45:	and    DWORD PTR [ebp-0x4],0x0
1005ab49:	call   0x10046d27
1005ab4e:	or     DWORD PTR [ebp-0x4],0xffffffff
1005ab52:	jmp    0x10046cee
1005ab57:	call   0x100471ec
1005ab5c:	mov    ecx,DWORD PTR [ebp+0x8]
1005ab5f:	push   0x0
1005ab61:	push   0x0
1005ab63:	mov    DWORD PTR [eax+0x94],ecx
1005ab69:	call   0x10047aa4
1005ab6e:	int3   
1005ab6f:	push   0x2c
1005ab71:	push   0x10074c88
1005ab76:	call   0x10046d84
1005ab7b:	mov    ebx,ecx
1005ab7d:	mov    edi,DWORD PTR [ebp+0xc]
1005ab80:	mov    esi,DWORD PTR [ebp+0x8]
1005ab83:	mov    DWORD PTR [ebp-0x1c],ebx
1005ab86:	and    DWORD PTR [ebp-0x34],0x0
1005ab8a:	mov    eax,DWORD PTR [edi-0x4]
1005ab8d:	mov    DWORD PTR [ebp-0x24],eax
1005ab90:	push   DWORD PTR [esi+0x18]
1005ab93:	lea    eax,[ebp-0x3c]
1005ab96:	push   eax
1005ab97:	call   0x1005950c
1005ab9c:	pop    ecx
1005ab9d:	pop    ecx
1005ab9e:	mov    DWORD PTR [ebp-0x28],eax
1005aba1:	call   0x100471ec
1005aba6:	mov    eax,DWORD PTR [eax+0x88]
1005abac:	mov    DWORD PTR [ebp-0x2c],eax
1005abaf:	call   0x100471ec
1005abb4:	mov    eax,DWORD PTR [eax+0x8c]
1005abba:	mov    DWORD PTR [ebp-0x30],eax
1005abbd:	call   0x100471ec
1005abc2:	mov    DWORD PTR [eax+0x88],esi
1005abc8:	call   0x100471ec
1005abcd:	mov    ecx,DWORD PTR [ebp+0x10]
1005abd0:	mov    DWORD PTR [eax+0x8c],ecx
1005abd6:	and    DWORD PTR [ebp-0x4],0x0
1005abda:	xor    eax,eax
1005abdc:	inc    eax
1005abdd:	mov    DWORD PTR [ebp+0x10],eax
1005abe0:	mov    DWORD PTR [ebp-0x4],eax
1005abe3:	push   DWORD PTR [ebp+0x1c]
1005abe6:	push   DWORD PTR [ebp+0x18]
1005abe9:	push   ebx
1005abea:	push   DWORD PTR [ebp+0x14]
1005abed:	push   edi
1005abee:	call   0x100595a1
1005abf3:	add    esp,0x14
1005abf6:	mov    DWORD PTR [ebp-0x1c],eax
1005abf9:	and    DWORD PTR [ebp-0x4],0x0
1005abfd:	jmp    0x1005ac6e
1005abff:	mov    eax,DWORD PTR [ebp-0x14]
1005ac02:	call   0x1005a9ef
1005ac07:	ret    
1005ac08:	mov    esp,DWORD PTR [ebp-0x18]
1005ac0b:	call   0x100471ec
1005ac10:	and    DWORD PTR [eax+0x20c],0x0
1005ac17:	mov    esi,DWORD PTR [ebp+0x14]
1005ac1a:	mov    edi,DWORD PTR [ebp+0xc]
1005ac1d:	cmp    DWORD PTR [esi+0x4],0x80
1005ac24:	jg     0x1005ac2c
1005ac26:	movsx  ecx,BYTE PTR [edi+0x8]
1005ac2a:	jmp    0x1005ac2f
1005ac2c:	mov    ecx,DWORD PTR [edi+0x8]
1005ac2f:	mov    ebx,DWORD PTR [esi+0x10]
1005ac32:	and    DWORD PTR [ebp-0x20],0x0
1005ac36:	mov    eax,DWORD PTR [ebp-0x20]
1005ac39:	cmp    eax,DWORD PTR [esi+0xc]
1005ac3c:	jae    0x1005ac56
1005ac3e:	imul   eax,eax,0x14
1005ac41:	add    eax,ebx
1005ac43:	mov    edx,DWORD PTR [eax+0x4]
1005ac46:	cmp    ecx,edx
1005ac48:	jle    0x1005ac8a
1005ac4a:	cmp    ecx,DWORD PTR [eax+0x8]
1005ac4d:	jg     0x1005ac8a
1005ac4f:	mov    eax,DWORD PTR [esi+0x8]
1005ac52:	mov    ecx,DWORD PTR [eax+edx*8+0x8]
1005ac56:	push   ecx
1005ac57:	push   esi
1005ac58:	push   0x0
1005ac5a:	push   edi
1005ac5b:	call   0x1005a90e
1005ac60:	add    esp,0x10
1005ac63:	and    DWORD PTR [ebp-0x1c],0x0
1005ac67:	and    DWORD PTR [ebp-0x4],0x0
1005ac6b:	mov    esi,DWORD PTR [ebp+0x8]
1005ac6e:	mov    DWORD PTR [ebp-0x4],0xfffffffe
1005ac75:	mov    DWORD PTR [ebp+0x10],0x0
1005ac7c:	call   0x1005ac95
1005ac81:	mov    eax,DWORD PTR [ebp-0x1c]
1005ac84:	call   0x10046dc9
1005ac89:	ret    
1005ac8a:	inc    DWORD PTR [ebp-0x20]
1005ac8d:	jmp    0x1005ac36
1005ac8f:	mov    edi,DWORD PTR [ebp+0xc]
1005ac92:	mov    esi,DWORD PTR [ebp+0x8]
1005ac95:	mov    eax,DWORD PTR [ebp-0x24]
1005ac98:	mov    DWORD PTR [edi-0x4],eax
1005ac9b:	push   DWORD PTR [ebp-0x28]
1005ac9e:	call   0x10059555
1005aca3:	pop    ecx
1005aca4:	call   0x100471ec
1005aca9:	mov    ecx,DWORD PTR [ebp-0x2c]
1005acac:	mov    DWORD PTR [eax+0x88],ecx
1005acb2:	call   0x100471ec
1005acb7:	mov    ecx,DWORD PTR [ebp-0x30]
1005acba:	mov    DWORD PTR [eax+0x8c],ecx
1005acc0:	cmp    DWORD PTR [esi],0xe06d7363
1005acc6:	jne    0x1005ad0a
1005acc8:	cmp    DWORD PTR [esi+0x10],0x3
1005accc:	jne    0x1005ad0a
1005acce:	mov    eax,DWORD PTR [esi+0x14]
1005acd1:	cmp    eax,0x19930520
1005acd6:	je     0x1005ace6
1005acd8:	cmp    eax,0x19930521
1005acdd:	je     0x1005ace6
1005acdf:	cmp    eax,0x19930522
1005ace4:	jne    0x1005ad0a
1005ace6:	cmp    DWORD PTR [ebp-0x34],0x0
1005acea:	jne    0x1005ad0a
1005acec:	cmp    DWORD PTR [ebp-0x1c],0x0
1005acf0:	je     0x1005ad0a
1005acf2:	push   DWORD PTR [esi+0x18]
1005acf5:	call   0x10059534
1005acfa:	pop    ecx
1005acfb:	test   eax,eax
1005acfd:	je     0x1005ad0a
1005acff:	push   DWORD PTR [ebp+0x10]
1005ad02:	push   esi
1005ad03:	call   0x1005aa34
1005ad08:	pop    ecx
1005ad09:	pop    ecx
1005ad0a:	ret    
1005ad0b:	push   0xc
1005ad0d:	push   0x10074cb0
1005ad12:	call   0x10046d84
1005ad17:	xor    edx,edx
1005ad19:	mov    DWORD PTR [ebp-0x1c],edx
1005ad1c:	mov    eax,DWORD PTR [ebp+0x10]
1005ad1f:	mov    ecx,DWORD PTR [eax+0x4]
1005ad22:	cmp    ecx,edx
1005ad24:	je     0x1005ae82
1005ad2a:	cmp    BYTE PTR [ecx+0x8],dl
1005ad2d:	je     0x1005ae82
1005ad33:	mov    ecx,DWORD PTR [eax+0x8]
1005ad36:	cmp    ecx,edx
1005ad38:	jne    0x1005ad46
1005ad3a:	test   DWORD PTR [eax],0x80000000
1005ad40:	je     0x1005ae82
1005ad46:	mov    eax,DWORD PTR [eax]
1005ad48:	mov    esi,DWORD PTR [ebp+0xc]
1005ad4b:	test   eax,eax
1005ad4d:	js     0x1005ad53
1005ad4f:	lea    esi,[ecx+esi*1+0xc]
1005ad53:	mov    DWORD PTR [ebp-0x4],edx
1005ad56:	xor    ebx,ebx
1005ad58:	inc    ebx
1005ad59:	push   ebx
1005ad5a:	test   al,0x8
1005ad5c:	je     0x1005ad9f
1005ad5e:	mov    edi,DWORD PTR [ebp+0x8]
1005ad61:	push   DWORD PTR [edi+0x18]
1005ad64:	call   0x1004f944
1005ad69:	pop    ecx
1005ad6a:	pop    ecx
1005ad6b:	test   eax,eax
1005ad6d:	je     0x1005ae65
1005ad73:	push   ebx
1005ad74:	push   esi
1005ad75:	call   0x1004f944
1005ad7a:	pop    ecx
1005ad7b:	pop    ecx
1005ad7c:	test   eax,eax
1005ad7e:	je     0x1005ae65
1005ad84:	mov    eax,DWORD PTR [edi+0x18]
1005ad87:	mov    DWORD PTR [esi],eax
1005ad89:	mov    ecx,DWORD PTR [ebp+0x14]
1005ad8c:	add    ecx,0x8
1005ad8f:	push   ecx
1005ad90:	push   eax
1005ad91:	call   0x1005aa88
1005ad96:	pop    ecx
1005ad97:	pop    ecx
1005ad98:	mov    DWORD PTR [esi],eax
1005ad9a:	jmp    0x1005ae6a
1005ad9f:	mov    edi,DWORD PTR [ebp+0x14]
1005ada2:	mov    eax,DWORD PTR [ebp+0x8]
1005ada5:	push   DWORD PTR [eax+0x18]
1005ada8:	test   BYTE PTR [edi],bl
1005adaa:	je     0x1005adf4
1005adac:	call   0x1004f944
1005adb1:	pop    ecx
1005adb2:	pop    ecx
1005adb3:	test   eax,eax
1005adb5:	je     0x1005ae65
1005adbb:	push   ebx
1005adbc:	push   esi
1005adbd:	call   0x1004f944
1005adc2:	pop    ecx
1005adc3:	pop    ecx
1005adc4:	test   eax,eax
1005adc6:	je     0x1005ae65
1005adcc:	push   DWORD PTR [edi+0x14]
1005adcf:	mov    eax,DWORD PTR [ebp+0x8]
1005add2:	push   DWORD PTR [eax+0x18]
1005add5:	push   esi
1005add6:	call   0x100457b0
1005addb:	add    esp,0xc
1005adde:	cmp    DWORD PTR [edi+0x14],0x4
1005ade2:	jne    0x1005ae6a
1005ade8:	mov    eax,DWORD PTR [esi]
1005adea:	test   eax,eax
1005adec:	je     0x1005ae6a
1005adee:	add    edi,0x8
1005adf1:	push   edi
1005adf2:	jmp    0x1005ad90
1005adf4:	cmp    DWORD PTR [edi+0x18],edx
1005adf7:	jne    0x1005ae31
1005adf9:	call   0x1004f944
1005adfe:	pop    ecx
1005adff:	pop    ecx
1005ae00:	test   eax,eax
1005ae02:	je     0x1005ae65
1005ae04:	push   ebx
1005ae05:	push   esi
1005ae06:	call   0x1004f944
1005ae0b:	pop    ecx
1005ae0c:	pop    ecx
1005ae0d:	test   eax,eax
1005ae0f:	je     0x1005ae65
1005ae11:	push   DWORD PTR [edi+0x14]
1005ae14:	add    edi,0x8
1005ae17:	push   edi
1005ae18:	mov    eax,DWORD PTR [ebp+0x8]
1005ae1b:	push   DWORD PTR [eax+0x18]
1005ae1e:	call   0x1005aa88
1005ae23:	pop    ecx
1005ae24:	pop    ecx
1005ae25:	push   eax
1005ae26:	push   esi
1005ae27:	call   0x100457b0
1005ae2c:	add    esp,0xc
1005ae2f:	jmp    0x1005ae6a
1005ae31:	call   0x1004f944
1005ae36:	pop    ecx
1005ae37:	pop    ecx
1005ae38:	test   eax,eax
1005ae3a:	je     0x1005ae65
1005ae3c:	push   ebx
1005ae3d:	push   esi
1005ae3e:	call   0x1004f944
1005ae43:	pop    ecx
1005ae44:	pop    ecx
1005ae45:	test   eax,eax
1005ae47:	je     0x1005ae65
1005ae49:	push   DWORD PTR [edi+0x18]
1005ae4c:	call   0x1004f944
1005ae51:	pop    ecx
1005ae52:	test   eax,eax
1005ae54:	je     0x1005ae65
1005ae56:	test   BYTE PTR [edi],0x4
1005ae59:	push   0x0
1005ae5b:	pop    eax
1005ae5c:	setne  al
1005ae5f:	inc    eax
1005ae60:	mov    DWORD PTR [ebp-0x1c],eax
1005ae63:	jmp    0x1005ae6a
1005ae65:	call   0x10046d3a
1005ae6a:	mov    DWORD PTR [ebp-0x4],0xfffffffe
1005ae71:	mov    eax,DWORD PTR [ebp-0x1c]
1005ae74:	jmp    0x1005ae84
1005ae76:	xor    eax,eax
1005ae78:	inc    eax
1005ae79:	ret    
1005ae7a:	mov    esp,DWORD PTR [ebp-0x18]
1005ae7d:	jmp    0x10046cee
1005ae82:	xor    eax,eax
1005ae84:	call   0x10046dc9
1005ae89:	ret    
1005ae8a:	push   0x8
1005ae8c:	push   0x10074cd0
1005ae91:	call   0x10046d84
1005ae96:	mov    eax,DWORD PTR [ebp+0x10]
1005ae99:	test   DWORD PTR [eax],0x80000000
1005ae9f:	je     0x1005aea6
1005aea1:	mov    ebx,DWORD PTR [ebp+0xc]
1005aea4:	jmp    0x1005aeb0
1005aea6:	mov    ecx,DWORD PTR [eax+0x8]
1005aea9:	mov    edx,DWORD PTR [ebp+0xc]
1005aeac:	lea    ebx,[ecx+edx*1+0xc]
1005aeb0:	and    DWORD PTR [ebp-0x4],0x0
1005aeb4:	mov    esi,DWORD PTR [ebp+0x14]
1005aeb7:	push   esi
1005aeb8:	push   eax
1005aeb9:	push   DWORD PTR [ebp+0xc]
1005aebc:	mov    edi,DWORD PTR [ebp+0x8]
1005aebf:	push   edi
1005aec0:	call   0x1005ad0b
1005aec5:	add    esp,0x10
1005aec8:	dec    eax
1005aec9:	je     0x1005aeea
1005aecb:	dec    eax
1005aecc:	jne    0x1005af02
1005aece:	push   0x1
1005aed0:	lea    eax,[esi+0x8]
1005aed3:	push   eax
1005aed4:	push   DWORD PTR [edi+0x18]
1005aed7:	call   0x1005aa88
1005aedc:	pop    ecx
1005aedd:	pop    ecx
1005aede:	push   eax
1005aedf:	push   DWORD PTR [esi+0x18]
1005aee2:	push   ebx
1005aee3:	call   0x10059268
1005aee8:	jmp    0x1005af02
1005aeea:	lea    eax,[esi+0x8]
1005aeed:	push   eax
1005aeee:	push   DWORD PTR [edi+0x18]
1005aef1:	call   0x1005aa88
1005aef6:	pop    ecx
1005aef7:	pop    ecx
1005aef8:	push   eax
1005aef9:	push   DWORD PTR [esi+0x18]
1005aefc:	push   ebx
1005aefd:	call   0x10059268
1005af02:	mov    DWORD PTR [ebp-0x4],0xfffffffe
1005af09:	call   0x10046dc9
1005af0e:	ret    
1005af0f:	xor    eax,eax
1005af11:	inc    eax
1005af12:	ret    
1005af13:	mov    esp,DWORD PTR [ebp-0x18]
1005af16:	jmp    0x10046cee
1005af1b:	push   ebp
1005af1c:	mov    ebp,esp
1005af1e:	cmp    DWORD PTR [ebp+0x18],0x0
1005af22:	je     0x1005af34
1005af24:	push   DWORD PTR [ebp+0x18]
1005af27:	push   ebx
1005af28:	push   esi
1005af29:	push   DWORD PTR [ebp+0x8]
1005af2c:	call   0x1005ae8a
1005af31:	add    esp,0x10
1005af34:	cmp    DWORD PTR [ebp+0x20],0x0
1005af38:	push   DWORD PTR [ebp+0x8]
1005af3b:	jne    0x1005af40
1005af3d:	push   esi
1005af3e:	jmp    0x1005af43
1005af40:	push   DWORD PTR [ebp+0x20]
1005af43:	call   0x1005926f
1005af48:	push   DWORD PTR [edi]
1005af4a:	push   DWORD PTR [ebp+0x14]
1005af4d:	push   DWORD PTR [ebp+0x10]
1005af50:	push   esi
1005af51:	call   0x1005a90e
1005af56:	mov    eax,DWORD PTR [edi+0x4]
1005af59:	push   0x100
1005af5e:	push   DWORD PTR [ebp+0x1c]
1005af61:	inc    eax
1005af62:	push   DWORD PTR [ebp+0x14]
1005af65:	mov    DWORD PTR [esi+0x8],eax
1005af68:	push   DWORD PTR [ebp+0xc]
1005af6b:	mov    ecx,DWORD PTR [ebx+0xc]
1005af6e:	push   esi
1005af6f:	push   DWORD PTR [ebp+0x8]
1005af72:	call   0x1005ab6f
1005af77:	add    esp,0x28
1005af7a:	test   eax,eax
1005af7c:	je     0x1005af85
1005af7e:	push   esi
1005af7f:	push   eax
1005af80:	call   0x10059238
1005af85:	pop    ebp
1005af86:	ret    
1005af87:	push   ebp
1005af88:	mov    ebp,esp
1005af8a:	push   ecx
1005af8b:	push   ecx
1005af8c:	push   esi
1005af8d:	mov    esi,DWORD PTR [ebp+0x8]
1005af90:	cmp    DWORD PTR [esi],0x80000003
1005af96:	je     0x1005b076
1005af9c:	push   edi
1005af9d:	call   0x100471ec
1005afa2:	cmp    DWORD PTR [eax+0x80],0x0
1005afa9:	je     0x1005afea
1005afab:	call   0x100471ec
1005afb0:	lea    edi,[eax+0x80]
1005afb6:	call   0x10046fd9
1005afbb:	cmp    DWORD PTR [edi],eax
1005afbd:	je     0x1005afea
1005afbf:	cmp    DWORD PTR [esi],0xe0434f4d
1005afc5:	je     0x1005afea
1005afc7:	push   DWORD PTR [ebp+0x24]
1005afca:	push   DWORD PTR [ebp+0x20]
1005afcd:	push   DWORD PTR [ebp+0x18]
1005afd0:	push   DWORD PTR [ebp+0x14]
1005afd3:	push   DWORD PTR [ebp+0x10]
1005afd6:	push   DWORD PTR [ebp+0xc]
1005afd9:	push   esi
1005afda:	call   0x10059327
1005afdf:	add    esp,0x1c
1005afe2:	test   eax,eax
1005afe4:	jne    0x1005b075
1005afea:	mov    edi,DWORD PTR [ebp+0x18]
1005afed:	cmp    DWORD PTR [edi+0xc],0x0
1005aff1:	jne    0x1005aff8
1005aff3:	call   0x10046d3a
1005aff8:	mov    esi,DWORD PTR [ebp+0x1c]
1005affb:	lea    eax,[ebp-0x8]
1005affe:	push   eax
1005afff:	lea    eax,[ebp-0x4]
1005b002:	push   eax
1005b003:	push   esi
1005b004:	push   DWORD PTR [ebp+0x20]
1005b007:	push   edi
1005b008:	call   0x10059499
1005b00d:	mov    edi,eax
1005b00f:	mov    eax,DWORD PTR [ebp-0x4]
1005b012:	add    esp,0x14
1005b015:	cmp    eax,DWORD PTR [ebp-0x8]
1005b018:	jae    0x1005b075
1005b01a:	push   ebx
1005b01b:	cmp    esi,DWORD PTR [edi]
1005b01d:	jl     0x1005b066
1005b01f:	cmp    esi,DWORD PTR [edi+0x4]
1005b022:	jg     0x1005b066
1005b024:	mov    eax,DWORD PTR [edi+0xc]
1005b027:	mov    ecx,DWORD PTR [edi+0x10]
1005b02a:	shl    eax,0x4
1005b02d:	add    eax,ecx
1005b02f:	mov    ecx,DWORD PTR [eax-0xc]
1005b032:	test   ecx,ecx
1005b034:	je     0x1005b03c
1005b036:	cmp    BYTE PTR [ecx+0x8],0x0
1005b03a:	jne    0x1005b066
1005b03c:	lea    ebx,[eax-0x10]
1005b03f:	test   BYTE PTR [ebx],0x40
1005b042:	jne    0x1005b066
1005b044:	push   DWORD PTR [ebp+0x24]
1005b047:	mov    esi,DWORD PTR [ebp+0xc]
1005b04a:	push   DWORD PTR [ebp+0x20]
1005b04d:	push   0x0
1005b04f:	push   DWORD PTR [ebp+0x18]
1005b052:	push   DWORD PTR [ebp+0x14]
1005b055:	push   DWORD PTR [ebp+0x10]
1005b058:	push   DWORD PTR [ebp+0x8]
1005b05b:	call   0x1005af1b
1005b060:	mov    esi,DWORD PTR [ebp+0x1c]
1005b063:	add    esp,0x1c
1005b066:	inc    DWORD PTR [ebp-0x4]
1005b069:	mov    eax,DWORD PTR [ebp-0x4]
1005b06c:	add    edi,0x14
1005b06f:	cmp    eax,DWORD PTR [ebp-0x8]
1005b072:	jb     0x1005b01b
1005b074:	pop    ebx
1005b075:	pop    edi
1005b076:	pop    esi
1005b077:	leave  
1005b078:	ret    
1005b079:	push   ebp
1005b07a:	mov    ebp,esp
1005b07c:	sub    esp,0x2c
1005b07f:	mov    ecx,DWORD PTR [ebp+0xc]
1005b082:	push   ebx
1005b083:	mov    ebx,DWORD PTR [ebp+0x18]
1005b086:	mov    eax,DWORD PTR [ebx+0x4]
1005b089:	cmp    eax,0x80
1005b08e:	push   esi
1005b08f:	push   edi
1005b090:	mov    BYTE PTR [ebp-0x1],0x0
1005b094:	jg     0x1005b09c
1005b096:	movsx  ecx,BYTE PTR [ecx+0x8]
1005b09a:	jmp    0x1005b09f
1005b09c:	mov    ecx,DWORD PTR [ecx+0x8]
1005b09f:	cmp    ecx,0xffffffff
1005b0a2:	mov    DWORD PTR [ebp-0x8],ecx
1005b0a5:	jl     0x1005b0ab
1005b0a7:	cmp    ecx,eax
1005b0a9:	jl     0x1005b0b0
1005b0ab:	call   0x10046d3a
1005b0b0:	mov    esi,DWORD PTR [ebp+0x8]
1005b0b3:	mov    edi,0xe06d7363
1005b0b8:	cmp    DWORD PTR [esi],edi
1005b0ba:	jne    0x1005b38b
1005b0c0:	cmp    DWORD PTR [esi+0x10],0x3
1005b0c4:	mov    ebx,0x19930520
1005b0c9:	jne    0x1005b1f8
1005b0cf:	mov    eax,DWORD PTR [esi+0x14]
1005b0d2:	cmp    eax,ebx
1005b0d4:	je     0x1005b0e8
1005b0d6:	cmp    eax,0x19930521
1005b0db:	je     0x1005b0e8
1005b0dd:	cmp    eax,0x19930522
1005b0e2:	jne    0x1005b1f8
1005b0e8:	cmp    DWORD PTR [esi+0x1c],0x0
1005b0ec:	jne    0x1005b1f8
1005b0f2:	call   0x100471ec
1005b0f7:	cmp    DWORD PTR [eax+0x88],0x0
1005b0fe:	je     0x1005b3ca
1005b104:	call   0x100471ec
1005b109:	mov    esi,DWORD PTR [eax+0x88]
1005b10f:	mov    DWORD PTR [ebp+0x8],esi
1005b112:	call   0x100471ec
1005b117:	mov    eax,DWORD PTR [eax+0x8c]
1005b11d:	push   0x1
1005b11f:	push   esi
1005b120:	mov    DWORD PTR [ebp+0x10],eax
1005b123:	call   0x1004f944
1005b128:	test   eax,eax
1005b12a:	pop    ecx
1005b12b:	pop    ecx
1005b12c:	jne    0x1005b133
1005b12e:	call   0x10046d3a
1005b133:	cmp    DWORD PTR [esi],edi
1005b135:	jne    0x1005b15d
1005b137:	cmp    DWORD PTR [esi+0x10],0x3
1005b13b:	jne    0x1005b15d
1005b13d:	mov    eax,DWORD PTR [esi+0x14]
1005b140:	cmp    eax,ebx
1005b142:	je     0x1005b152
1005b144:	cmp    eax,0x19930521
1005b149:	je     0x1005b152
1005b14b:	cmp    eax,0x19930522
1005b150:	jne    0x1005b15d
1005b152:	cmp    DWORD PTR [esi+0x1c],0x0
1005b156:	jne    0x1005b15d
1005b158:	call   0x10046d3a
1005b15d:	call   0x100471ec
1005b162:	cmp    DWORD PTR [eax+0x94],0x0
1005b169:	je     0x1005b1f8
1005b16f:	call   0x100471ec
1005b174:	mov    edi,DWORD PTR [eax+0x94]
1005b17a:	call   0x100471ec
1005b17f:	push   DWORD PTR [ebp+0x8]
1005b182:	xor    esi,esi
1005b184:	mov    DWORD PTR [eax+0x94],esi
1005b18a:	call   0x1005aaad
1005b18f:	test   al,al
1005b191:	pop    ecx
1005b192:	jne    0x1005b1f0
1005b194:	xor    ebx,ebx
1005b196:	cmp    DWORD PTR [edi],ebx
1005b198:	jle    0x1005b1b7
1005b19a:	mov    eax,DWORD PTR [edi+0x4]
1005b19d:	mov    ecx,DWORD PTR [ebx+eax*1+0x4]
1005b1a1:	push   0x1007f1b8
1005b1a6:	call   0x1004355a
1005b1ab:	test   al,al
1005b1ad:	jne    0x1005b1bc
1005b1af:	inc    esi
1005b1b0:	add    ebx,0x10
1005b1b3:	cmp    esi,DWORD PTR [edi]
1005b1b5:	jl     0x1005b19a
1005b1b7:	jmp    0x10046cee
1005b1bc:	push   0x1
1005b1be:	push   DWORD PTR [ebp+0x8]
1005b1c1:	call   0x1005aa34
1005b1c6:	pop    ecx
1005b1c7:	pop    ecx
1005b1c8:	lea    eax,[ebp+0x8]
1005b1cb:	push   eax
1005b1cc:	lea    ecx,[ebp-0x2c]
1005b1cf:	mov    DWORD PTR [ebp+0x8],0x1006caf8
1005b1d6:	call   0x10043002
1005b1db:	push   0x10074cec
1005b1e0:	lea    eax,[ebp-0x2c]
1005b1e3:	push   eax
1005b1e4:	mov    DWORD PTR [ebp-0x2c],0x1006caf0
1005b1eb:	call   0x10047aa4
1005b1f0:	mov    esi,DWORD PTR [ebp+0x8]
1005b1f3:	mov    edi,0xe06d7363
1005b1f8:	cmp    DWORD PTR [esi],edi
1005b1fa:	jne    0x1005b388
1005b200:	cmp    DWORD PTR [esi+0x10],0x3
1005b204:	jne    0x1005b388
1005b20a:	mov    eax,DWORD PTR [esi+0x14]
1005b20d:	cmp    eax,ebx
1005b20f:	je     0x1005b223
1005b211:	cmp    eax,0x19930521
1005b216:	je     0x1005b223
1005b218:	cmp    eax,0x19930522
1005b21d:	jne    0x1005b388
1005b223:	mov    edi,DWORD PTR [ebp+0x18]
1005b226:	cmp    DWORD PTR [edi+0xc],0x0
1005b22a:	jbe    0x1005b2ef
1005b230:	lea    eax,[ebp-0x1c]
1005b233:	push   eax
1005b234:	lea    eax,[ebp-0x10]
1005b237:	push   eax
1005b238:	push   DWORD PTR [ebp-0x8]
1005b23b:	push   DWORD PTR [ebp+0x20]
1005b23e:	push   edi
1005b23f:	call   0x10059499
1005b244:	add    esp,0x14
1005b247:	mov    edi,eax
1005b249:	mov    eax,DWORD PTR [ebp-0x10]
1005b24c:	cmp    eax,DWORD PTR [ebp-0x1c]
1005b24f:	jae    0x1005b2ec
1005b255:	mov    eax,DWORD PTR [ebp-0x8]
1005b258:	cmp    DWORD PTR [edi],eax
1005b25a:	jg     0x1005b2e1
1005b260:	cmp    eax,DWORD PTR [edi+0x4]
1005b263:	jg     0x1005b2e1
1005b265:	mov    eax,DWORD PTR [edi+0x10]
1005b268:	mov    DWORD PTR [ebp-0xc],eax
1005b26b:	mov    eax,DWORD PTR [edi+0xc]
1005b26e:	test   eax,eax
1005b270:	mov    DWORD PTR [ebp-0x18],eax
1005b273:	jle    0x1005b2e1
1005b275:	mov    eax,DWORD PTR [esi+0x1c]
1005b278:	mov    eax,DWORD PTR [eax+0xc]
1005b27b:	lea    ebx,[eax+0x4]
1005b27e:	mov    eax,DWORD PTR [eax]
1005b280:	test   eax,eax
1005b282:	mov    DWORD PTR [ebp-0x14],eax
1005b285:	jle    0x1005b2aa
1005b287:	push   DWORD PTR [esi+0x1c]
1005b28a:	mov    eax,DWORD PTR [ebx]
1005b28c:	push   eax
1005b28d:	push   DWORD PTR [ebp-0xc]
1005b290:	mov    DWORD PTR [ebp-0x20],eax
1005b293:	call   0x1005a86e
1005b298:	add    esp,0xc
1005b29b:	test   eax,eax
1005b29d:	jne    0x1005b2b9
1005b29f:	dec    DWORD PTR [ebp-0x14]
1005b2a2:	add    ebx,0x4
1005b2a5:	cmp    DWORD PTR [ebp-0x14],eax
1005b2a8:	jg     0x1005b287
1005b2aa:	dec    DWORD PTR [ebp-0x18]
1005b2ad:	add    DWORD PTR [ebp-0xc],0x10
1005b2b1:	cmp    DWORD PTR [ebp-0x18],0x0
1005b2b5:	jg     0x1005b275
1005b2b7:	jmp    0x1005b2e1
1005b2b9:	push   DWORD PTR [ebp+0x24]
1005b2bc:	mov    ebx,DWORD PTR [ebp-0xc]
1005b2bf:	push   DWORD PTR [ebp+0x20]
1005b2c2:	mov    BYTE PTR [ebp-0x1],0x1
1005b2c6:	push   DWORD PTR [ebp-0x20]
1005b2c9:	push   DWORD PTR [ebp+0x18]
1005b2cc:	push   DWORD PTR [ebp+0x14]
1005b2cf:	push   DWORD PTR [ebp+0x10]
1005b2d2:	push   esi
1005b2d3:	mov    esi,DWORD PTR [ebp+0xc]
1005b2d6:	call   0x1005af1b
1005b2db:	mov    esi,DWORD PTR [ebp+0x8]
1005b2de:	add    esp,0x1c
1005b2e1:	inc    DWORD PTR [ebp-0x10]
1005b2e4:	add    edi,0x14
1005b2e7:	jmp    0x1005b249
1005b2ec:	mov    edi,DWORD PTR [ebp+0x18]
1005b2ef:	cmp    BYTE PTR [ebp+0x1c],0x0
1005b2f3:	je     0x1005b2ff
1005b2f5:	push   0x1
1005b2f7:	push   esi
1005b2f8:	call   0x1005aa34
1005b2fd:	pop    ecx
1005b2fe:	pop    ecx
1005b2ff:	cmp    BYTE PTR [ebp-0x1],0x0
1005b303:	jne    0x1005b3b7
1005b309:	mov    eax,DWORD PTR [edi]
1005b30b:	and    eax,0x1fffffff
1005b310:	cmp    eax,0x19930521
1005b315:	jb     0x1005b3b7
1005b31b:	mov    edi,DWORD PTR [edi+0x1c]
1005b31e:	test   edi,edi
1005b320:	je     0x1005b3b7
1005b326:	push   esi
1005b327:	call   0x1005aaad
1005b32c:	test   al,al
1005b32e:	pop    ecx
1005b32f:	jne    0x1005b3b7
1005b335:	call   0x100471ec
1005b33a:	call   0x100471ec
1005b33f:	call   0x100471ec
1005b344:	mov    DWORD PTR [eax+0x88],esi
1005b34a:	call   0x100471ec
1005b34f:	cmp    DWORD PTR [ebp+0x24],0x0
1005b353:	mov    ecx,DWORD PTR [ebp+0x10]
1005b356:	mov    DWORD PTR [eax+0x8c],ecx
1005b35c:	push   esi
1005b35d:	jne    0x1005b364
1005b35f:	push   DWORD PTR [ebp+0xc]
1005b362:	jmp    0x1005b367
1005b364:	push   DWORD PTR [ebp+0x24]
1005b367:	call   0x1005926f
1005b36c:	mov    esi,DWORD PTR [ebp+0x18]
1005b36f:	push   0xffffffff
1005b371:	push   esi
1005b372:	push   DWORD PTR [ebp+0x14]
1005b375:	push   DWORD PTR [ebp+0xc]
1005b378:	call   0x1005a90e
1005b37d:	add    esp,0x10
1005b380:	push   DWORD PTR [esi+0x1c]
1005b383:	call   0x1005ab26
1005b388:	mov    ebx,DWORD PTR [ebp+0x18]
1005b38b:	cmp    DWORD PTR [ebx+0xc],0x0
1005b38f:	jbe    0x1005b3b7
1005b391:	cmp    BYTE PTR [ebp+0x1c],0x0
1005b395:	jne    0x1005b1b7
1005b39b:	push   DWORD PTR [ebp+0x24]
1005b39e:	push   DWORD PTR [ebp+0x20]
1005b3a1:	push   DWORD PTR [ebp-0x8]
1005b3a4:	push   ebx
1005b3a5:	push   DWORD PTR [ebp+0x14]
1005b3a8:	push   DWORD PTR [ebp+0x10]
1005b3ab:	push   DWORD PTR [ebp+0xc]
1005b3ae:	push   esi
1005b3af:	call   0x1005af87
1005b3b4:	add    esp,0x20
1005b3b7:	call   0x100471ec
1005b3bc:	cmp    DWORD PTR [eax+0x94],0x0
1005b3c3:	je     0x1005b3ca
1005b3c5:	call   0x10046d3a
1005b3ca:	pop    edi
1005b3cb:	pop    esi
1005b3cc:	pop    ebx
1005b3cd:	leave  
1005b3ce:	ret    
1005b3cf:	push   esi
1005b3d0:	push   DWORD PTR [esp+0x8]
1005b3d4:	mov    esi,ecx
1005b3d6:	call   0x10043068
1005b3db:	mov    DWORD PTR [esi],0x1006caf0
1005b3e1:	mov    eax,esi
1005b3e3:	pop    esi
1005b3e4:	ret    0x4
1005b3e7:	push   ebp
1005b3e8:	mov    ebp,esp
1005b3ea:	push   ebx
1005b3eb:	push   esi
1005b3ec:	push   edi
1005b3ed:	call   0x100471ec
1005b3f2:	cmp    DWORD PTR [eax+0x20c],0x0
1005b3f9:	mov    eax,DWORD PTR [ebp+0x18]
1005b3fc:	mov    ecx,DWORD PTR [ebp+0x8]
1005b3ff:	mov    edi,0xe06d7363
1005b404:	mov    esi,0x1fffffff
1005b409:	mov    ebx,0x19930522
1005b40e:	jne    0x1005b430
1005b410:	mov    edx,DWORD PTR [ecx]
1005b412:	cmp    edx,edi
1005b414:	je     0x1005b430
1005b416:	cmp    edx,0x80000026
1005b41c:	je     0x1005b430
1005b41e:	mov    edx,DWORD PTR [eax]
1005b420:	and    edx,esi
1005b422:	cmp    edx,ebx
1005b424:	jb     0x1005b430
1005b426:	test   BYTE PTR [eax+0x20],0x1
1005b42a:	jne    0x1005b4c3
1005b430:	test   BYTE PTR [ecx+0x4],0x66
1005b434:	je     0x1005b459
1005b436:	cmp    DWORD PTR [eax+0x4],0x0
1005b43a:	je     0x1005b4c3
1005b440:	cmp    DWORD PTR [ebp+0x1c],0x0
1005b444:	jne    0x1005b4c3
1005b446:	push   0xffffffff
1005b448:	push   eax
1005b449:	push   DWORD PTR [ebp+0x14]
1005b44c:	push   DWORD PTR [ebp+0xc]
1005b44f:	call   0x1005a90e
1005b454:	add    esp,0x10
1005b457:	jmp    0x1005b4c3
1005b459:	cmp    DWORD PTR [eax+0xc],0x0
1005b45d:	jne    0x1005b471
1005b45f:	mov    edx,DWORD PTR [eax]
1005b461:	and    edx,esi
1005b463:	cmp    edx,0x19930521
1005b469:	jb     0x1005b4c3
1005b46b:	cmp    DWORD PTR [eax+0x1c],0x0
1005b46f:	je     0x1005b4c3
1005b471:	cmp    DWORD PTR [ecx],edi
1005b473:	jne    0x1005b4a7
1005b475:	cmp    DWORD PTR [ecx+0x10],0x3
1005b479:	jb     0x1005b4a7
1005b47b:	cmp    DWORD PTR [ecx+0x14],ebx
1005b47e:	jbe    0x1005b4a7
1005b480:	mov    edx,DWORD PTR [ecx+0x1c]
1005b483:	mov    edx,DWORD PTR [edx+0x8]
1005b486:	test   edx,edx
1005b488:	je     0x1005b4a7
1005b48a:	movzx  esi,BYTE PTR [ebp+0x24]
1005b48e:	push   esi
1005b48f:	push   DWORD PTR [ebp+0x20]
1005b492:	push   DWORD PTR [ebp+0x1c]
1005b495:	push   eax
1005b496:	push   DWORD PTR [ebp+0x14]
1005b499:	push   DWORD PTR [ebp+0x10]
1005b49c:	push   DWORD PTR [ebp+0xc]
1005b49f:	push   ecx
1005b4a0:	call   edx
1005b4a2:	add    esp,0x20
1005b4a5:	jmp    0x1005b4c6
1005b4a7:	push   DWORD PTR [ebp+0x20]
1005b4aa:	push   DWORD PTR [ebp+0x1c]
1005b4ad:	push   DWORD PTR [ebp+0x24]
1005b4b0:	push   eax
1005b4b1:	push   DWORD PTR [ebp+0x14]
1005b4b4:	push   DWORD PTR [ebp+0x10]
1005b4b7:	push   DWORD PTR [ebp+0xc]
1005b4ba:	push   ecx
1005b4bb:	call   0x1005b079
1005b4c0:	add    esp,0x20
1005b4c3:	xor    eax,eax
1005b4c5:	inc    eax
1005b4c6:	pop    edi
1005b4c7:	pop    esi
1005b4c8:	pop    ebx
1005b4c9:	pop    ebp
1005b4ca:	ret    
1005b4cb:	int3   
1005b4cc:	int3   
1005b4cd:	int3   
1005b4ce:	int3   
1005b4cf:	int3   
1005b4d0:	push   ebp
1005b4d1:	mov    ebp,esp
1005b4d3:	sub    esp,0x4
1005b4d6:	push   ebx
1005b4d7:	push   ecx
1005b4d8:	mov    eax,DWORD PTR [ebp+0xc]
1005b4db:	add    eax,0xc
1005b4de:	mov    DWORD PTR [ebp-0x4],eax
1005b4e1:	mov    eax,DWORD PTR [ebp+0x8]
1005b4e4:	push   ebp
1005b4e5:	push   DWORD PTR [ebp+0x10]
1005b4e8:	mov    ecx,DWORD PTR [ebp+0x10]
1005b4eb:	mov    ebp,DWORD PTR [ebp-0x4]
1005b4ee:	call   0x1004f910
1005b4f3:	push   esi
1005b4f4:	push   edi
1005b4f5:	call   eax
1005b4f7:	pop    edi
1005b4f8:	pop    esi
1005b4f9:	mov    ebx,ebp
1005b4fb:	pop    ebp
1005b4fc:	mov    ecx,DWORD PTR [ebp+0x10]
1005b4ff:	push   ebp
1005b500:	mov    ebp,ebx
1005b502:	cmp    ecx,0x100
1005b508:	jne    0x1005b50f
1005b50a:	mov    ecx,0x2
1005b50f:	push   ecx
1005b510:	call   0x1004f910
1005b515:	pop    ebp
1005b516:	pop    ecx
1005b517:	pop    ebx
1005b518:	leave  
1005b519:	ret    0xc
1005b51c:	push   ebp
1005b51d:	mov    ebp,esp
1005b51f:	sub    esp,0x10
1005b522:	push   esi
1005b523:	push   DWORD PTR [ebp+0xc]
1005b526:	lea    ecx,[ebp-0x10]
1005b529:	call   0x100455d5
1005b52e:	mov    esi,DWORD PTR [ebp+0x8]
1005b531:	movsx  eax,BYTE PTR [esi]
1005b534:	push   eax
1005b535:	call   0x10045ec1
1005b53a:	cmp    eax,0x65
1005b53d:	jmp    0x1005b54b
1005b53f:	inc    esi
1005b540:	movzx  eax,BYTE PTR [esi]
1005b543:	push   eax
1005b544:	call   0x1004f34f
1005b549:	test   eax,eax
1005b54b:	pop    ecx
1005b54c:	jne    0x1005b53f
1005b54e:	movsx  eax,BYTE PTR [esi]
1005b551:	push   eax
1005b552:	call   0x10045ec1
1005b557:	cmp    eax,0x78
1005b55a:	pop    ecx
1005b55b:	jne    0x1005b55f
1005b55d:	inc    esi
1005b55e:	inc    esi
1005b55f:	mov    ecx,DWORD PTR [ebp-0x10]
1005b562:	mov    ecx,DWORD PTR [ecx+0xbc]
1005b568:	mov    ecx,DWORD PTR [ecx]
1005b56a:	mov    al,BYTE PTR [esi]
1005b56c:	mov    cl,BYTE PTR [ecx]
1005b56e:	mov    BYTE PTR [esi],cl
1005b570:	inc    esi
1005b571:	mov    cl,BYTE PTR [esi]
1005b573:	mov    BYTE PTR [esi],al
1005b575:	mov    al,cl
1005b577:	mov    cl,BYTE PTR [esi]
1005b579:	inc    esi
1005b57a:	test   cl,cl
1005b57c:	jne    0x1005b571
1005b57e:	cmp    BYTE PTR [ebp-0x4],cl
1005b581:	pop    esi
1005b582:	je     0x1005b58b
1005b584:	mov    eax,DWORD PTR [ebp-0x8]
1005b587:	and    DWORD PTR [eax+0x70],0xfffffffd
1005b58b:	leave  
1005b58c:	ret    
1005b58d:	push   ebp
1005b58e:	mov    ebp,esp
1005b590:	sub    esp,0x10
1005b593:	push   esi
1005b594:	push   DWORD PTR [ebp+0xc]
1005b597:	lea    ecx,[ebp-0x10]
1005b59a:	call   0x100455d5
1005b59f:	mov    eax,DWORD PTR [ebp+0x8]
1005b5a2:	mov    cl,BYTE PTR [eax]
1005b5a4:	test   cl,cl
1005b5a6:	mov    esi,DWORD PTR [ebp-0x10]
1005b5a9:	je     0x1005b5c0
1005b5ab:	mov    edx,DWORD PTR [esi+0xbc]
1005b5b1:	mov    edx,DWORD PTR [edx]
1005b5b3:	mov    dl,BYTE PTR [edx]
1005b5b5:	cmp    cl,dl
1005b5b7:	je     0x1005b5c0
1005b5b9:	inc    eax
1005b5ba:	mov    cl,BYTE PTR [eax]
1005b5bc:	test   cl,cl
1005b5be:	jne    0x1005b5b5
1005b5c0:	mov    cl,BYTE PTR [eax]
1005b5c2:	inc    eax
1005b5c3:	test   cl,cl
1005b5c5:	je     0x1005b5fd
1005b5c7:	jmp    0x1005b5d4
1005b5c9:	cmp    cl,0x65
1005b5cc:	je     0x1005b5da
1005b5ce:	cmp    cl,0x45
1005b5d1:	je     0x1005b5da
1005b5d3:	inc    eax
1005b5d4:	mov    cl,BYTE PTR [eax]
1005b5d6:	test   cl,cl
1005b5d8:	jne    0x1005b5c9
1005b5da:	mov    edx,eax
1005b5dc:	dec    eax
1005b5dd:	cmp    BYTE PTR [eax],0x30
1005b5e0:	je     0x1005b5dc
1005b5e2:	mov    ecx,DWORD PTR [esi+0xbc]
1005b5e8:	mov    ecx,DWORD PTR [ecx]
1005b5ea:	push   ebx
1005b5eb:	mov    bl,BYTE PTR [eax]
1005b5ed:	cmp    bl,BYTE PTR [ecx]
1005b5ef:	pop    ebx
1005b5f0:	jne    0x1005b5f3
1005b5f2:	dec    eax
1005b5f3:	mov    cl,BYTE PTR [edx]
1005b5f5:	inc    eax
1005b5f6:	inc    edx
1005b5f7:	test   cl,cl
1005b5f9:	mov    BYTE PTR [eax],cl
1005b5fb:	jne    0x1005b5f3
1005b5fd:	cmp    BYTE PTR [ebp-0x4],0x0
1005b601:	pop    esi
1005b602:	je     0x1005b60b
1005b604:	mov    eax,DWORD PTR [ebp-0x8]
1005b607:	and    DWORD PTR [eax+0x70],0xfffffffd
1005b60b:	leave  
1005b60c:	ret    
1005b60d:	fldz   
1005b60f:	mov    eax,DWORD PTR [esp+0x4]
1005b613:	fcomp  QWORD PTR [eax]
1005b615:	fnstsw ax
1005b617:	test   ah,0x41
1005b61a:	jp     0x1005b620
1005b61c:	xor    eax,eax
1005b61e:	inc    eax
1005b61f:	ret    
1005b620:	xor    eax,eax
1005b622:	ret    
1005b623:	push   ebp
1005b624:	mov    ebp,esp
1005b626:	push   ecx
1005b627:	push   ecx
1005b628:	cmp    DWORD PTR [ebp+0x8],0x0
1005b62c:	push   DWORD PTR [ebp+0x14]
1005b62f:	push   DWORD PTR [ebp+0x10]
1005b632:	je     0x1005b64d
1005b634:	lea    eax,[ebp-0x8]
1005b637:	push   eax
1005b638:	call   0x1005cee6
1005b63d:	mov    ecx,DWORD PTR [ebp-0x8]
1005b640:	mov    eax,DWORD PTR [ebp+0xc]
1005b643:	mov    DWORD PTR [eax],ecx
1005b645:	mov    ecx,DWORD PTR [ebp-0x4]
1005b648:	mov    DWORD PTR [eax+0x4],ecx
1005b64b:	jmp    0x1005b65e
1005b64d:	lea    eax,[ebp+0x8]
1005b650:	push   eax
1005b651:	call   0x1005cf8c
1005b656:	mov    eax,DWORD PTR [ebp+0xc]
1005b659:	mov    ecx,DWORD PTR [ebp+0x8]
1005b65c:	mov    DWORD PTR [eax],ecx
1005b65e:	add    esp,0xc
1005b661:	leave  
1005b662:	ret    
1005b663:	push   0x0
1005b665:	push   DWORD PTR [esp+0x10]
1005b669:	push   DWORD PTR [esp+0x10]
1005b66d:	push   DWORD PTR [esp+0x10]
1005b671:	call   0x1005b623
1005b676:	add    esp,0x10
1005b679:	ret    
1005b67a:	test   edi,edi
1005b67c:	push   esi
1005b67d:	mov    esi,eax
1005b67f:	je     0x1005b695
1005b681:	push   esi
1005b682:	call   0x10043100
1005b687:	inc    eax
1005b688:	push   eax
1005b689:	push   esi
1005b68a:	add    esi,edi
1005b68c:	push   esi
1005b68d:	call   0x100457b0
1005b692:	add    esp,0x10
1005b695:	pop    esi
1005b696:	ret    
1005b697:	push   0x0
1005b699:	push   DWORD PTR [esp+0x8]
1005b69d:	call   0x1005b51c
1005b6a2:	pop    ecx
1005b6a3:	pop    ecx
1005b6a4:	ret    
1005b6a5:	push   0x0
1005b6a7:	push   DWORD PTR [esp+0x8]
1005b6ab:	call   0x1005b58d
1005b6b0:	pop    ecx
1005b6b1:	pop    ecx
1005b6b2:	ret    
1005b6b3:	push   ebp
1005b6b4:	mov    ebp,esp
1005b6b6:	sub    esp,0x10
1005b6b9:	push   ebx
1005b6ba:	push   esi
1005b6bb:	push   edi
1005b6bc:	push   DWORD PTR [ebp+0x1c]
1005b6bf:	lea    ecx,[ebp-0x10]
1005b6c2:	mov    ebx,eax
1005b6c4:	call   0x100455d5
1005b6c9:	xor    esi,esi
1005b6cb:	cmp    ebx,esi
1005b6cd:	jne    0x1005b6fa
1005b6cf:	call   0x10046c45
1005b6d4:	push   0x16
1005b6d6:	pop    edi
1005b6d7:	push   esi
1005b6d8:	push   esi
1005b6d9:	push   esi
1005b6da:	push   esi
1005b6db:	push   esi
1005b6dc:	mov    DWORD PTR [eax],edi
1005b6de:	call   0x1004347c
1005b6e3:	add    esp,0x14
1005b6e6:	cmp    BYTE PTR [ebp-0x4],0x0
1005b6ea:	je     0x1005b6f3
1005b6ec:	mov    eax,DWORD PTR [ebp-0x8]
1005b6ef:	and    DWORD PTR [eax+0x70],0xfffffffd
1005b6f3:	mov    eax,edi
1005b6f5:	jmp    0x1005b81b
1005b6fa:	cmp    DWORD PTR [ebp+0x8],esi
1005b6fd:	jbe    0x1005b6cf
1005b6ff:	cmp    DWORD PTR [ebp+0xc],esi
1005b702:	jle    0x1005b709
1005b704:	mov    eax,DWORD PTR [ebp+0xc]
1005b707:	jmp    0x1005b70b
1005b709:	xor    eax,eax
1005b70b:	add    eax,0x9
1005b70e:	cmp    DWORD PTR [ebp+0x8],eax
1005b711:	ja     0x1005b71c
1005b713:	call   0x10046c45
1005b718:	push   0x22
1005b71a:	jmp    0x1005b6d6
1005b71c:	cmp    BYTE PTR [ebp+0x18],0x0
1005b720:	je     0x1005b740
1005b722:	mov    edx,DWORD PTR [ebp+0x14]
1005b725:	xor    eax,eax
1005b727:	cmp    DWORD PTR [ebp+0xc],esi
1005b72a:	setg   al
1005b72d:	xor    ecx,ecx
1005b72f:	cmp    DWORD PTR [edx],0x2d
1005b732:	sete   cl
1005b735:	mov    edi,eax
1005b737:	add    ecx,ebx
1005b739:	mov    eax,ecx
1005b73b:	call   0x1005b67a
1005b740:	mov    edi,DWORD PTR [ebp+0x14]
1005b743:	cmp    DWORD PTR [edi],0x2d
1005b746:	mov    esi,ebx
1005b748:	jne    0x1005b750
1005b74a:	mov    BYTE PTR [ebx],0x2d
1005b74d:	lea    esi,[ebx+0x1]
1005b750:	cmp    DWORD PTR [ebp+0xc],0x0
1005b754:	jle    0x1005b76e
1005b756:	lea    eax,[esi+0x1]
1005b759:	mov    cl,BYTE PTR [eax]
1005b75b:	mov    BYTE PTR [esi],cl
1005b75d:	mov    esi,eax
1005b75f:	mov    eax,DWORD PTR [ebp-0x10]
1005b762:	mov    eax,DWORD PTR [eax+0xbc]
1005b768:	mov    eax,DWORD PTR [eax]
1005b76a:	mov    al,BYTE PTR [eax]
1005b76c:	mov    BYTE PTR [esi],al
1005b76e:	xor    eax,eax
1005b770:	cmp    BYTE PTR [ebp+0x18],al
1005b773:	sete   al
1005b776:	add    eax,DWORD PTR [ebp+0xc]
1005b779:	add    esi,eax
1005b77b:	cmp    DWORD PTR [ebp+0x8],0xffffffff
1005b77f:	jne    0x1005b786
1005b781:	or     ebx,0xffffffff
1005b784:	jmp    0x1005b78b
1005b786:	sub    ebx,esi
1005b788:	add    ebx,DWORD PTR [ebp+0x8]
1005b78b:	push   0x1006cb08
1005b790:	push   ebx
1005b791:	push   esi
1005b792:	call   0x10046c89
1005b797:	add    esp,0xc
1005b79a:	xor    ebx,ebx
1005b79c:	test   eax,eax
1005b79e:	je     0x1005b7ad
1005b7a0:	push   ebx
1005b7a1:	push   ebx
1005b7a2:	push   ebx
1005b7a3:	push   ebx
1005b7a4:	push   ebx
1005b7a5:	call   0x10043380
1005b7aa:	add    esp,0x14
1005b7ad:	cmp    DWORD PTR [ebp+0x10],ebx
1005b7b0:	lea    ecx,[esi+0x2]
1005b7b3:	je     0x1005b7b8
1005b7b5:	mov    BYTE PTR [esi],0x45
1005b7b8:	mov    eax,DWORD PTR [edi+0xc]
1005b7bb:	inc    esi
1005b7bc:	cmp    BYTE PTR [eax],0x30
1005b7bf:	je     0x1005b7ef
1005b7c1:	mov    eax,DWORD PTR [edi+0x4]
1005b7c4:	dec    eax
1005b7c5:	jns    0x1005b7cc
1005b7c7:	neg    eax
1005b7c9:	mov    BYTE PTR [esi],0x2d
1005b7cc:	inc    esi
1005b7cd:	cmp    eax,0x64
1005b7d0:	jl     0x1005b7dc
1005b7d2:	cdq    
1005b7d3:	push   0x64
1005b7d5:	pop    edi
1005b7d6:	idiv   edi
1005b7d8:	add    BYTE PTR [esi],al
1005b7da:	mov    eax,edx
1005b7dc:	inc    esi
1005b7dd:	cmp    eax,0xa
1005b7e0:	jl     0x1005b7ec
1005b7e2:	cdq    
1005b7e3:	push   0xa
1005b7e5:	pop    edi
1005b7e6:	idiv   edi
1005b7e8:	add    BYTE PTR [esi],al
1005b7ea:	mov    eax,edx
1005b7ec:	add    BYTE PTR [esi+0x1],al
1005b7ef:	test   BYTE PTR ds:0x10080bf8,0x1
1005b7f6:	je     0x1005b80c
1005b7f8:	cmp    BYTE PTR [ecx],0x30
1005b7fb:	jne    0x1005b80c
1005b7fd:	push   0x3
1005b7ff:	lea    eax,[ecx+0x1]
1005b802:	push   eax
1005b803:	push   ecx
1005b804:	call   0x100457b0
1005b809:	add    esp,0xc
1005b80c:	cmp    BYTE PTR [ebp-0x4],0x0
1005b810:	je     0x1005b819
1005b812:	mov    eax,DWORD PTR [ebp-0x8]
1005b815:	and    DWORD PTR [eax+0x70],0xfffffffd
1005b819:	xor    eax,eax
1005b81b:	pop    edi
1005b81c:	pop    esi
1005b81d:	pop    ebx
1005b81e:	leave  
1005b81f:	ret    
1005b820:	push   ebp
1005b821:	mov    ebp,esp
1005b823:	sub    esp,0x2c
1005b826:	mov    eax,ds:0x1007e030
1005b82b:	xor    eax,ebp
1005b82d:	mov    DWORD PTR [ebp-0x4],eax
1005b830:	mov    eax,DWORD PTR [ebp+0x8]
1005b833:	push   ebx
1005b834:	push   esi
1005b835:	push   edi
1005b836:	mov    edi,DWORD PTR [ebp+0xc]
1005b839:	push   0x16
1005b83b:	pop    esi
1005b83c:	push   esi
1005b83d:	lea    ecx,[ebp-0x1c]
1005b840:	push   ecx
1005b841:	lea    ecx,[ebp-0x2c]
1005b844:	push   ecx
1005b845:	push   DWORD PTR [eax+0x4]
1005b848:	push   DWORD PTR [eax]
1005b84a:	call   0x1005d1aa
1005b84f:	xor    ebx,ebx
1005b851:	add    esp,0x14
1005b854:	cmp    edi,ebx
1005b856:	jne    0x1005b870
1005b858:	call   0x10046c45
1005b85d:	push   ebx
1005b85e:	push   ebx
1005b85f:	push   ebx
1005b860:	push   ebx
1005b861:	push   ebx
1005b862:	mov    DWORD PTR [eax],esi
1005b864:	call   0x1004347c
1005b869:	add    esp,0x14
1005b86c:	mov    eax,esi
1005b86e:	jmp    0x1005b8df
1005b870:	mov    eax,DWORD PTR [ebp+0x10]
1005b873:	cmp    eax,ebx
1005b875:	jbe    0x1005b858
1005b877:	cmp    eax,0xffffffff
1005b87a:	mov    esi,DWORD PTR [ebp+0x14]
1005b87d:	jne    0x1005b884
1005b87f:	or     eax,0xffffffff
1005b882:	jmp    0x1005b898
1005b884:	xor    ecx,ecx
1005b886:	cmp    DWORD PTR [ebp-0x2c],0x2d
1005b88a:	sete   cl
1005b88d:	sub    eax,ecx
1005b88f:	xor    ecx,ecx
1005b891:	cmp    esi,ebx
1005b893:	setg   cl
1005b896:	sub    eax,ecx
1005b898:	lea    ecx,[ebp-0x2c]
1005b89b:	push   ecx
1005b89c:	lea    ecx,[esi+0x1]
1005b89f:	push   ecx
1005b8a0:	push   eax
1005b8a1:	xor    eax,eax
1005b8a3:	cmp    DWORD PTR [ebp-0x2c],0x2d
1005b8a7:	sete   al
1005b8aa:	xor    ecx,ecx
1005b8ac:	cmp    esi,ebx
1005b8ae:	setg   cl
1005b8b1:	add    eax,edi
1005b8b3:	add    ecx,eax
1005b8b5:	push   ecx
1005b8b6:	call   0x1005d032
1005b8bb:	add    esp,0x10
1005b8be:	cmp    eax,ebx
1005b8c0:	je     0x1005b8c6
1005b8c2:	mov    BYTE PTR [edi],bl
1005b8c4:	jmp    0x1005b8df
1005b8c6:	push   DWORD PTR [ebp+0x1c]
1005b8c9:	lea    eax,[ebp-0x2c]
1005b8cc:	push   ebx
1005b8cd:	push   eax
1005b8ce:	push   DWORD PTR [ebp+0x18]
1005b8d1:	mov    eax,edi
1005b8d3:	push   esi
1005b8d4:	push   DWORD PTR [ebp+0x10]
1005b8d7:	call   0x1005b6b3
1005b8dc:	add    esp,0x18
1005b8df:	mov    ecx,DWORD PTR [ebp-0x4]
1005b8e2:	pop    edi
1005b8e3:	pop    esi
1005b8e4:	xor    ecx,ebp
1005b8e6:	pop    ebx
1005b8e7:	call   0x10042f87
1005b8ec:	leave  
1005b8ed:	ret    
1005b8ee:	push   ebp
1005b8ef:	mov    ebp,esp
1005b8f1:	push   0x0
1005b8f3:	push   DWORD PTR [ebp+0x18]
1005b8f6:	push   DWORD PTR [ebp+0x14]
1005b8f9:	push   DWORD PTR [ebp+0x10]
1005b8fc:	push   DWORD PTR [ebp+0xc]
1005b8ff:	push   DWORD PTR [ebp+0x8]
1005b902:	call   0x1005b820
1005b907:	add    esp,0x18
1005b90a:	pop    ebp
1005b90b:	ret    
1005b90c:	push   ebp
1005b90d:	mov    ebp,esp
1005b90f:	sub    esp,0x24
1005b912:	push   esi
1005b913:	push   edi
1005b914:	push   DWORD PTR [ebp+0x1c]
1005b917:	lea    ecx,[ebp-0x24]
1005b91a:	mov    DWORD PTR [ebp-0x14],0x3ff
1005b921:	xor    edi,edi
1005b923:	mov    DWORD PTR [ebp-0x4],0x30
1005b92a:	call   0x100455d5
1005b92f:	cmp    DWORD PTR [ebp+0x14],edi
1005b932:	jge    0x1005b937
1005b934:	mov    DWORD PTR [ebp+0x14],edi
1005b937:	mov    esi,DWORD PTR [ebp+0xc]
1005b93a:	cmp    esi,edi
1005b93c:	jne    0x1005b969
1005b93e:	call   0x10046c45
1005b943:	push   0x16
1005b945:	pop    esi
1005b946:	push   edi
1005b947:	push   edi
1005b948:	push   edi
1005b949:	push   edi
1005b94a:	push   edi
1005b94b:	mov    DWORD PTR [eax],esi
1005b94d:	call   0x1004347c
1005b952:	add    esp,0x14
1005b955:	cmp    BYTE PTR [ebp-0x18],0x0
1005b959:	je     0x1005b962
1005b95b:	mov    eax,DWORD PTR [ebp-0x1c]
1005b95e:	and    DWORD PTR [eax+0x70],0xfffffffd
1005b962:	mov    eax,esi
1005b964:	jmp    0x1005bc79
1005b969:	cmp    DWORD PTR [ebp+0x10],edi
1005b96c:	jbe    0x1005b93e
1005b96e:	mov    eax,DWORD PTR [ebp+0x14]
1005b971:	add    eax,0xb
1005b974:	cmp    DWORD PTR [ebp+0x10],eax
1005b977:	mov    BYTE PTR [esi],0x0
1005b97a:	ja     0x1005b985
1005b97c:	call   0x10046c45
1005b981:	push   0x22
1005b983:	jmp    0x1005b945
1005b985:	mov    edi,DWORD PTR [ebp+0x8]
1005b988:	mov    eax,DWORD PTR [edi]
1005b98a:	mov    DWORD PTR [ebp-0xc],eax
1005b98d:	mov    eax,DWORD PTR [edi+0x4]
1005b990:	mov    ecx,eax
1005b992:	shr    ecx,0x14
1005b995:	mov    edx,0x7ff
1005b99a:	push   ebx
1005b99b:	and    ecx,edx
1005b99d:	xor    ebx,ebx
1005b99f:	cmp    ecx,edx
1005b9a1:	jne    0x1005ba37
1005b9a7:	test   ebx,ebx
1005b9a9:	jne    0x1005ba37
1005b9af:	mov    eax,DWORD PTR [ebp+0x10]
1005b9b2:	cmp    eax,0xffffffff
1005b9b5:	jne    0x1005b9bb
1005b9b7:	or     eax,eax
1005b9b9:	jmp    0x1005b9be
1005b9bb:	add    eax,0xfffffffe
1005b9be:	push   0x0
1005b9c0:	push   DWORD PTR [ebp+0x14]
1005b9c3:	lea    ebx,[esi+0x2]
1005b9c6:	push   eax
1005b9c7:	push   ebx
1005b9c8:	push   edi
1005b9c9:	call   0x1005b8ee
1005b9ce:	add    esp,0x14
1005b9d1:	test   eax,eax
1005b9d3:	je     0x1005b9ee
1005b9d5:	cmp    BYTE PTR [ebp-0x18],0x0
1005b9d9:	mov    BYTE PTR [esi],0x0
1005b9dc:	je     0x1005bc78
1005b9e2:	mov    ecx,DWORD PTR [ebp-0x1c]
1005b9e5:	and    DWORD PTR [ecx+0x70],0xfffffffd
1005b9e9:	jmp    0x1005bc78
1005b9ee:	cmp    BYTE PTR [ebx],0x2d
1005b9f1:	jne    0x1005b9f7
1005b9f3:	mov    BYTE PTR [esi],0x2d
1005b9f6:	inc    esi
1005b9f7:	mov    BYTE PTR [esi],0x30
1005b9fa:	inc    esi
1005b9fb:	cmp    DWORD PTR [ebp+0x18],0x0
1005b9ff:	push   0x65
1005ba01:	sete   al
1005ba04:	dec    al
1005ba06:	and    al,0xe0
1005ba08:	add    al,0x78
1005ba0a:	mov    BYTE PTR [esi],al
1005ba0c:	inc    esi
1005ba0d:	push   esi
1005ba0e:	call   0x100599f0
1005ba13:	test   eax,eax
1005ba15:	pop    ecx
1005ba16:	pop    ecx
1005ba17:	je     0x1005bc69
1005ba1d:	cmp    DWORD PTR [ebp+0x18],0x0
1005ba21:	sete   cl
1005ba24:	dec    cl
1005ba26:	and    cl,0xe0
1005ba29:	add    cl,0x70
1005ba2c:	mov    BYTE PTR [eax],cl
1005ba2e:	mov    BYTE PTR [eax+0x3],0x0
1005ba32:	jmp    0x1005bc69
1005ba37:	and    eax,0x80000000
1005ba3c:	xor    ecx,ecx
1005ba3e:	or     ecx,eax
1005ba40:	je     0x1005ba46
1005ba42:	mov    BYTE PTR [esi],0x2d
1005ba45:	inc    esi
1005ba46:	mov    ebx,DWORD PTR [ebp+0x18]
1005ba49:	mov    BYTE PTR [esi],0x30
1005ba4c:	inc    esi
1005ba4d:	test   ebx,ebx
1005ba4f:	sete   al
1005ba52:	dec    al
1005ba54:	and    al,0xe0
1005ba56:	add    al,0x78
1005ba58:	mov    BYTE PTR [esi],al
1005ba5a:	mov    ecx,DWORD PTR [edi+0x4]
1005ba5d:	inc    esi
1005ba5e:	neg    ebx
1005ba60:	sbb    ebx,ebx
1005ba62:	and    ebx,0xffffffe0
1005ba65:	and    ecx,0x7ff00000
1005ba6b:	xor    eax,eax
1005ba6d:	add    ebx,0x27
1005ba70:	xor    edx,edx
1005ba72:	or     eax,ecx
1005ba74:	jne    0x1005ba97
1005ba76:	mov    BYTE PTR [esi],0x30
1005ba79:	mov    ecx,DWORD PTR [edi+0x4]
1005ba7c:	mov    eax,DWORD PTR [edi]
1005ba7e:	and    ecx,0xfffff
1005ba84:	inc    esi
1005ba85:	or     eax,ecx
1005ba87:	jne    0x1005ba8e
1005ba89:	mov    DWORD PTR [ebp-0x14],edx
1005ba8c:	jmp    0x1005ba9b
1005ba8e:	mov    DWORD PTR [ebp-0x14],0x3fe
1005ba95:	jmp    0x1005ba9b
1005ba97:	mov    BYTE PTR [esi],0x31
1005ba9a:	inc    esi
1005ba9b:	mov    eax,esi
1005ba9d:	inc    esi
1005ba9e:	cmp    DWORD PTR [ebp+0x14],edx
1005baa1:	mov    DWORD PTR [ebp+0xc],eax
1005baa4:	jne    0x1005baaa
1005baa6:	mov    BYTE PTR [eax],dl
1005baa8:	jmp    0x1005bab9
1005baaa:	mov    ecx,DWORD PTR [ebp-0x24]
1005baad:	mov    ecx,DWORD PTR [ecx+0xbc]
1005bab3:	mov    ecx,DWORD PTR [ecx]
1005bab5:	mov    cl,BYTE PTR [ecx]
1005bab7:	mov    BYTE PTR [eax],cl
1005bab9:	mov    ecx,DWORD PTR [edi+0x4]
1005babc:	mov    eax,DWORD PTR [edi]
1005babe:	and    ecx,0xfffff
1005bac4:	mov    DWORD PTR [ebp-0x8],ecx
1005bac7:	ja     0x1005bad1
1005bac9:	cmp    eax,edx
1005bacb:	jbe    0x1005bb86
1005bad1:	mov    DWORD PTR [ebp-0xc],edx
1005bad4:	mov    DWORD PTR [ebp-0x8],0xf0000
1005badb:	cmp    DWORD PTR [ebp+0x14],0x0
1005badf:	jle    0x1005bb2e
1005bae1:	mov    edx,DWORD PTR [edi+0x4]
1005bae4:	and    edx,DWORD PTR [ebp-0x8]
1005bae7:	mov    eax,DWORD PTR [edi]
1005bae9:	movsx  ecx,WORD PTR [ebp-0x4]
1005baed:	and    eax,DWORD PTR [ebp-0xc]
1005baf0:	and    edx,0xfffff
1005baf6:	call   0x1005d320
1005bafb:	add    ax,0x30
1005baff:	movzx  eax,ax
1005bb02:	cmp    ax,0x39
1005bb06:	jbe    0x1005bb0a
1005bb08:	add    eax,ebx
1005bb0a:	mov    ecx,DWORD PTR [ebp-0x8]
1005bb0d:	sub    DWORD PTR [ebp-0x4],0x4
1005bb11:	mov    BYTE PTR [esi],al
1005bb13:	mov    eax,DWORD PTR [ebp-0xc]
1005bb16:	shrd   eax,ecx,0x4
1005bb1a:	shr    ecx,0x4
1005bb1d:	inc    esi
1005bb1e:	dec    DWORD PTR [ebp+0x14]
1005bb21:	cmp    WORD PTR [ebp-0x4],0x0
1005bb26:	mov    DWORD PTR [ebp-0xc],eax
1005bb29:	mov    DWORD PTR [ebp-0x8],ecx
1005bb2c:	jge    0x1005badb
1005bb2e:	cmp    WORD PTR [ebp-0x4],0x0
1005bb33:	jl     0x1005bb86
1005bb35:	mov    edx,DWORD PTR [edi+0x4]
1005bb38:	and    edx,DWORD PTR [ebp-0x8]
1005bb3b:	mov    eax,DWORD PTR [edi]
1005bb3d:	movsx  ecx,WORD PTR [ebp-0x4]
1005bb41:	and    eax,DWORD PTR [ebp-0xc]
1005bb44:	and    edx,0xfffff
1005bb4a:	call   0x1005d320
1005bb4f:	cmp    ax,0x8
1005bb53:	jbe    0x1005bb86
1005bb55:	lea    eax,[esi-0x1]
1005bb58:	mov    cl,BYTE PTR [eax]
1005bb5a:	cmp    cl,0x66
1005bb5d:	je     0x1005bb64
1005bb5f:	cmp    cl,0x46
1005bb62:	jne    0x1005bb6a
1005bb64:	mov    BYTE PTR [eax],0x30
1005bb67:	dec    eax
1005bb68:	jmp    0x1005bb58
1005bb6a:	cmp    eax,DWORD PTR [ebp+0xc]
1005bb6d:	je     0x1005bb83
1005bb6f:	mov    cl,BYTE PTR [eax]
1005bb71:	cmp    cl,0x39
1005bb74:	jne    0x1005bb7d
1005bb76:	add    bl,0x3a
1005bb79:	mov    BYTE PTR [eax],bl
1005bb7b:	jmp    0x1005bb86
1005bb7d:	inc    cl
1005bb7f:	mov    BYTE PTR [eax],cl
1005bb81:	jmp    0x1005bb86
1005bb83:	inc    BYTE PTR [eax-0x1]
1005bb86:	cmp    DWORD PTR [ebp+0x14],0x0
1005bb8a:	jle    0x1005bb9d
1005bb8c:	push   DWORD PTR [ebp+0x14]
1005bb8f:	push   0x30
1005bb91:	push   esi
1005bb92:	call   0x10045cf0
1005bb97:	add    esp,0xc
1005bb9a:	add    esi,DWORD PTR [ebp+0x14]
1005bb9d:	mov    eax,DWORD PTR [ebp+0xc]
1005bba0:	cmp    BYTE PTR [eax],0x0
1005bba3:	jne    0x1005bba7
1005bba5:	mov    esi,eax
1005bba7:	cmp    DWORD PTR [ebp+0x18],0x0
1005bbab:	mov    cl,0x34
1005bbad:	sete   al
1005bbb0:	dec    al
1005bbb2:	and    al,0xe0
1005bbb4:	add    al,0x70
1005bbb6:	mov    BYTE PTR [esi],al
1005bbb8:	mov    eax,DWORD PTR [edi]
1005bbba:	mov    edx,DWORD PTR [edi+0x4]
1005bbbd:	inc    esi
1005bbbe:	call   0x1005d320
1005bbc3:	xor    ebx,ebx
1005bbc5:	and    eax,0x7ff
1005bbca:	and    edx,ebx
1005bbcc:	sub    eax,DWORD PTR [ebp-0x14]
1005bbcf:	push   ebx
1005bbd0:	pop    ecx
1005bbd1:	sbb    edx,ecx
1005bbd3:	js     0x1005bbe1
1005bbd5:	jg     0x1005bbdb
1005bbd7:	cmp    eax,ebx
1005bbd9:	jb     0x1005bbe1
1005bbdb:	mov    BYTE PTR [esi],0x2b
1005bbde:	inc    esi
1005bbdf:	jmp    0x1005bbeb
1005bbe1:	mov    BYTE PTR [esi],0x2d
1005bbe4:	inc    esi
1005bbe5:	neg    eax
1005bbe7:	adc    edx,ebx
1005bbe9:	neg    edx
1005bbeb:	cmp    edx,ebx
1005bbed:	mov    edi,esi
1005bbef:	mov    BYTE PTR [esi],0x30
1005bbf2:	jl     0x1005bc18
1005bbf4:	mov    ecx,0x3e8
1005bbf9:	jg     0x1005bbff
1005bbfb:	cmp    eax,ecx
1005bbfd:	jb     0x1005bc18
1005bbff:	push   ebx
1005bc00:	push   ecx
1005bc01:	push   edx
1005bc02:	push   eax
1005bc03:	call   0x1005d240
1005bc08:	add    al,0x30
1005bc0a:	mov    BYTE PTR [esi],al
1005bc0c:	inc    esi
1005bc0d:	cmp    esi,edi
1005bc0f:	mov    DWORD PTR [ebp-0x10],edx
1005bc12:	mov    eax,ecx
1005bc14:	mov    edx,ebx
1005bc16:	jne    0x1005bc23
1005bc18:	test   edx,edx
1005bc1a:	jl     0x1005bc3a
1005bc1c:	jg     0x1005bc23
1005bc1e:	cmp    eax,0x64
1005bc21:	jb     0x1005bc3a
1005bc23:	push   0x0
1005bc25:	push   0x64
1005bc27:	push   edx
1005bc28:	push   eax
1005bc29:	call   0x1005d240
1005bc2e:	add    al,0x30
1005bc30:	mov    BYTE PTR [esi],al
1005bc32:	mov    DWORD PTR [ebp-0x10],edx
1005bc35:	inc    esi
1005bc36:	mov    eax,ecx
1005bc38:	mov    edx,ebx
1005bc3a:	cmp    esi,edi
1005bc3c:	jne    0x1005bc49
1005bc3e:	test   edx,edx
1005bc40:	jl     0x1005bc61
1005bc42:	jg     0x1005bc49
1005bc44:	cmp    eax,0xa
1005bc47:	jb     0x1005bc61
1005bc49:	push   0x0
1005bc4b:	push   0xa
1005bc4d:	push   edx
1005bc4e:	push   eax
1005bc4f:	call   0x1005d240
1005bc54:	add    al,0x30
1005bc56:	mov    BYTE PTR [esi],al
1005bc58:	mov    DWORD PTR [ebp-0x10],edx
1005bc5b:	inc    esi
1005bc5c:	mov    eax,ecx
1005bc5e:	mov    DWORD PTR [ebp-0x10],ebx
1005bc61:	add    al,0x30
1005bc63:	mov    BYTE PTR [esi],al
1005bc65:	mov    BYTE PTR [esi+0x1],0x0
1005bc69:	cmp    BYTE PTR [ebp-0x18],0x0
1005bc6d:	je     0x1005bc76
1005bc6f:	mov    eax,DWORD PTR [ebp-0x1c]
1005bc72:	and    DWORD PTR [eax+0x70],0xfffffffd
1005bc76:	xor    eax,eax
1005bc78:	pop    ebx
1005bc79:	pop    edi
1005bc7a:	pop    esi
1005bc7b:	leave  
1005bc7c:	ret    
1005bc7d:	push   ebp
1005bc7e:	mov    ebp,esp
1005bc80:	sub    esp,0x10
1005bc83:	push   ebx
1005bc84:	push   esi
1005bc85:	push   edi
1005bc86:	push   DWORD PTR [ebp+0x14]
1005bc89:	mov    ebx,eax
1005bc8b:	mov    esi,DWORD PTR [ebx+0x4]
1005bc8e:	mov    edi,ecx
1005bc90:	lea    ecx,[ebp-0x10]
1005bc93:	dec    esi
1005bc94:	call   0x100455d5
1005bc99:	test   edi,edi
1005bc9b:	jne    0x1005bcca
1005bc9d:	call   0x10046c45
1005bca2:	push   0x16
1005bca4:	pop    esi
1005bca5:	mov    DWORD PTR [eax],esi
1005bca7:	xor    eax,eax
1005bca9:	push   eax
1005bcaa:	push   eax
1005bcab:	push   eax
1005bcac:	push   eax
1005bcad:	push   eax
1005bcae:	call   0x1004347c
1005bcb3:	add    esp,0x14
1005bcb6:	cmp    BYTE PTR [ebp-0x4],0x0
1005bcba:	je     0x1005bcc3
1005bcbc:	mov    eax,DWORD PTR [ebp-0x8]
1005bcbf:	and    DWORD PTR [eax+0x70],0xfffffffd
1005bcc3:	mov    eax,esi
1005bcc5:	jmp    0x1005bd6d
1005bcca:	cmp    DWORD PTR [ebp+0x8],0x0
1005bcce:	jbe    0x1005bc9d
1005bcd0:	cmp    BYTE PTR [ebp+0x10],0x0
1005bcd4:	je     0x1005bcee
1005bcd6:	cmp    esi,DWORD PTR [ebp+0xc]
1005bcd9:	jne    0x1005bcee
1005bcdb:	xor    eax,eax
1005bcdd:	cmp    DWORD PTR [ebx],0x2d
1005bce0:	sete   al
1005bce3:	add    eax,esi
1005bce5:	add    eax,edi
1005bce7:	mov    BYTE PTR [eax],0x30
1005bcea:	mov    BYTE PTR [eax+0x1],0x0
1005bcee:	cmp    DWORD PTR [ebx],0x2d
1005bcf1:	mov    esi,edi
1005bcf3:	jne    0x1005bcfb
1005bcf5:	mov    BYTE PTR [edi],0x2d
1005bcf8:	lea    esi,[edi+0x1]
1005bcfb:	mov    eax,DWORD PTR [ebx+0x4]
1005bcfe:	xor    edi,edi
1005bd00:	inc    edi
1005bd01:	test   eax,eax
1005bd03:	jg     0x1005bd12
1005bd05:	mov    eax,esi
1005bd07:	call   0x1005b67a
1005bd0c:	mov    BYTE PTR [esi],0x30
1005bd0f:	inc    esi
1005bd10:	jmp    0x1005bd14
1005bd12:	add    esi,eax
1005bd14:	cmp    DWORD PTR [ebp+0xc],0x0
1005bd18:	jle    0x1005bd5e
1005bd1a:	mov    eax,esi
1005bd1c:	call   0x1005b67a
1005bd21:	mov    eax,DWORD PTR [ebp-0x10]
1005bd24:	mov    eax,DWORD PTR [eax+0xbc]
1005bd2a:	mov    eax,DWORD PTR [eax]
1005bd2c:	mov    al,BYTE PTR [eax]
1005bd2e:	mov    BYTE PTR [esi],al
1005bd30:	mov    ebx,DWORD PTR [ebx+0x4]
1005bd33:	inc    esi
1005bd34:	test   ebx,ebx
1005bd36:	jge    0x1005bd5e
1005bd38:	neg    ebx
1005bd3a:	cmp    BYTE PTR [ebp+0x10],0x0
1005bd3e:	jne    0x1005bd45
1005bd40:	cmp    DWORD PTR [ebp+0xc],ebx
1005bd43:	jl     0x1005bd48
1005bd45:	mov    DWORD PTR [ebp+0xc],ebx
1005bd48:	mov    edi,DWORD PTR [ebp+0xc]
1005bd4b:	mov    eax,esi
1005bd4d:	call   0x1005b67a
1005bd52:	push   edi
1005bd53:	push   0x30
1005bd55:	push   esi
1005bd56:	call   0x10045cf0
1005bd5b:	add    esp,0xc
1005bd5e:	cmp    BYTE PTR [ebp-0x4],0x0
1005bd62:	je     0x1005bd6b
1005bd64:	mov    eax,DWORD PTR [ebp-0x8]
1005bd67:	and    DWORD PTR [eax+0x70],0xfffffffd
1005bd6b:	xor    eax,eax
1005bd6d:	pop    edi
1005bd6e:	pop    esi
1005bd6f:	pop    ebx
1005bd70:	leave  
1005bd71:	ret    
1005bd72:	push   ebp
1005bd73:	mov    ebp,esp
1005bd75:	sub    esp,0x2c
1005bd78:	mov    eax,ds:0x1007e030
1005bd7d:	xor    eax,ebp
1005bd7f:	mov    DWORD PTR [ebp-0x4],eax
1005bd82:	mov    eax,DWORD PTR [ebp+0x8]
1005bd85:	push   ebx
1005bd86:	push   esi
1005bd87:	push   edi
1005bd88:	mov    edi,DWORD PTR [ebp+0xc]
1005bd8b:	push   0x16
1005bd8d:	pop    esi
1005bd8e:	push   esi
1005bd8f:	lea    ecx,[ebp-0x1c]
1005bd92:	push   ecx
1005bd93:	lea    ecx,[ebp-0x2c]
1005bd96:	push   ecx
1005bd97:	push   DWORD PTR [eax+0x4]
1005bd9a:	push   DWORD PTR [eax]
1005bd9c:	call   0x1005d1aa
1005bda1:	xor    ebx,ebx
1005bda3:	add    esp,0x14
1005bda6:	cmp    edi,ebx
1005bda8:	jne    0x1005bdc2
1005bdaa:	call   0x10046c45
1005bdaf:	push   ebx
1005bdb0:	push   ebx
1005bdb1:	push   ebx
1005bdb2:	push   ebx
1005bdb3:	push   ebx
1005bdb4:	mov    DWORD PTR [eax],esi
1005bdb6:	call   0x1004347c
1005bdbb:	add    esp,0x14
1005bdbe:	mov    eax,esi
1005bdc0:	jmp    0x1005be1c
1005bdc2:	mov    eax,DWORD PTR [ebp+0x10]
1005bdc5:	cmp    eax,ebx
1005bdc7:	jbe    0x1005bdaa
1005bdc9:	cmp    eax,0xffffffff
1005bdcc:	jne    0x1005bdd2
1005bdce:	or     eax,eax
1005bdd0:	jmp    0x1005bddd
1005bdd2:	xor    ecx,ecx
1005bdd4:	cmp    DWORD PTR [ebp-0x2c],0x2d
1005bdd8:	sete   cl
1005bddb:	sub    eax,ecx
1005bddd:	mov    esi,DWORD PTR [ebp+0x14]
1005bde0:	lea    ecx,[ebp-0x2c]
1005bde3:	push   ecx
1005bde4:	mov    ecx,DWORD PTR [ebp-0x28]
1005bde7:	add    ecx,esi
1005bde9:	push   ecx
1005bdea:	push   eax
1005bdeb:	xor    eax,eax
1005bded:	cmp    DWORD PTR [ebp-0x2c],0x2d
1005bdf1:	sete   al
1005bdf4:	add    eax,edi
1005bdf6:	push   eax
1005bdf7:	call   0x1005d032
1005bdfc:	add    esp,0x10
1005bdff:	cmp    eax,ebx
1005be01:	je     0x1005be07
1005be03:	mov    BYTE PTR [edi],bl
1005be05:	jmp    0x1005be1c
1005be07:	push   DWORD PTR [ebp+0x18]
1005be0a:	lea    eax,[ebp-0x2c]
1005be0d:	push   ebx
1005be0e:	push   esi
1005be0f:	push   DWORD PTR [ebp+0x10]
1005be12:	mov    ecx,edi
1005be14:	call   0x1005bc7d
1005be19:	add    esp,0x10
1005be1c:	mov    ecx,DWORD PTR [ebp-0x4]
1005be1f:	pop    edi
1005be20:	pop    esi
1005be21:	xor    ecx,ebp
1005be23:	pop    ebx
1005be24:	call   0x10042f87
1005be29:	leave  
1005be2a:	ret    
1005be2b:	push   ebp
1005be2c:	mov    ebp,esp
1005be2e:	sub    esp,0x30
1005be31:	mov    eax,ds:0x1007e030
1005be36:	xor    eax,ebp
1005be38:	mov    DWORD PTR [ebp-0x4],eax
1005be3b:	mov    eax,DWORD PTR [ebp+0x8]
1005be3e:	push   ebx
1005be3f:	push   esi
1005be40:	mov    esi,DWORD PTR [ebp+0xc]
1005be43:	push   edi
1005be44:	push   0x16
1005be46:	pop    edi
1005be47:	push   edi
1005be48:	lea    ecx,[ebp-0x1c]
1005be4b:	push   ecx
1005be4c:	lea    ecx,[ebp-0x30]
1005be4f:	push   ecx
1005be50:	push   DWORD PTR [eax+0x4]
1005be53:	push   DWORD PTR [eax]
1005be55:	call   0x1005d1aa
1005be5a:	xor    ebx,ebx
1005be5c:	add    esp,0x14
1005be5f:	cmp    esi,ebx
1005be61:	jne    0x1005be7e
1005be63:	call   0x10046c45
1005be68:	push   ebx
1005be69:	push   ebx
1005be6a:	push   ebx
1005be6b:	push   ebx
1005be6c:	push   ebx
1005be6d:	mov    DWORD PTR [eax],edi
1005be6f:	call   0x1004347c
1005be74:	add    esp,0x14
1005be77:	mov    eax,edi
1005be79:	jmp    0x1005bf14
1005be7e:	mov    ecx,DWORD PTR [ebp+0x10]
1005be81:	cmp    ecx,ebx
1005be83:	jbe    0x1005be63
1005be85:	mov    eax,DWORD PTR [ebp-0x2c]
1005be88:	dec    eax
1005be89:	mov    DWORD PTR [ebp-0x20],eax
1005be8c:	xor    eax,eax
1005be8e:	cmp    DWORD PTR [ebp-0x30],0x2d
1005be92:	sete   al
1005be95:	cmp    ecx,0xffffffff
1005be98:	lea    edi,[eax+esi*1]
1005be9b:	jne    0x1005bea1
1005be9d:	or     ecx,ecx
1005be9f:	jmp    0x1005bea3
1005bea1:	sub    ecx,eax
1005bea3:	lea    eax,[ebp-0x30]
1005bea6:	push   eax
1005bea7:	push   DWORD PTR [ebp+0x14]
1005beaa:	push   ecx
1005beab:	push   edi
1005beac:	call   0x1005d032
1005beb1:	add    esp,0x10
1005beb4:	cmp    eax,ebx
1005beb6:	je     0x1005bebc
1005beb8:	mov    BYTE PTR [esi],bl
1005beba:	jmp    0x1005bf14
1005bebc:	mov    eax,DWORD PTR [ebp-0x2c]
1005bebf:	dec    eax
1005bec0:	cmp    DWORD PTR [ebp-0x20],eax
1005bec3:	setl   cl
1005bec6:	cmp    eax,0xfffffffc
1005bec9:	jl     0x1005bef8
1005becb:	cmp    eax,DWORD PTR [ebp+0x14]
1005bece:	jge    0x1005bef8
1005bed0:	cmp    cl,bl
1005bed2:	je     0x1005bede
1005bed4:	mov    al,BYTE PTR [edi]
1005bed6:	inc    edi
1005bed7:	test   al,al
1005bed9:	jne    0x1005bed4
1005bedb:	mov    BYTE PTR [edi-0x2],bl
1005bede:	push   DWORD PTR [ebp+0x1c]
1005bee1:	lea    eax,[ebp-0x30]
1005bee4:	push   0x1
1005bee6:	push   DWORD PTR [ebp+0x14]
1005bee9:	mov    ecx,esi
1005beeb:	push   DWORD PTR [ebp+0x10]
1005beee:	call   0x1005bc7d
1005bef3:	add    esp,0x10
1005bef6:	jmp    0x1005bf14
1005bef8:	push   DWORD PTR [ebp+0x1c]
1005befb:	lea    eax,[ebp-0x30]
1005befe:	push   0x1
1005bf00:	push   eax
1005bf01:	push   DWORD PTR [ebp+0x18]
1005bf04:	mov    eax,esi
1005bf06:	push   DWORD PTR [ebp+0x14]
1005bf09:	push   DWORD PTR [ebp+0x10]
1005bf0c:	call   0x1005b6b3
1005bf11:	add    esp,0x18
1005bf14:	mov    ecx,DWORD PTR [ebp-0x4]
1005bf17:	pop    edi
1005bf18:	pop    esi
1005bf19:	xor    ecx,ebp
1005bf1b:	pop    ebx
1005bf1c:	call   0x10042f87
1005bf21:	leave  
1005bf22:	ret    
1005bf23:	push   ebp
1005bf24:	mov    ebp,esp
1005bf26:	mov    eax,DWORD PTR [ebp+0x14]
1005bf29:	cmp    eax,0x65
1005bf2c:	je     0x1005bf8d
1005bf2e:	cmp    eax,0x45
1005bf31:	je     0x1005bf8d
1005bf33:	cmp    eax,0x66
1005bf36:	jne    0x1005bf51
1005bf38:	push   DWORD PTR [ebp+0x20]
1005bf3b:	push   DWORD PTR [ebp+0x18]
1005bf3e:	push   DWORD PTR [ebp+0x10]
1005bf41:	push   DWORD PTR [ebp+0xc]
1005bf44:	push   DWORD PTR [ebp+0x8]
1005bf47:	call   0x1005bd72
1005bf4c:	add    esp,0x14
1005bf4f:	pop    ebp
1005bf50:	ret    
1005bf51:	cmp    eax,0x61
1005bf54:	je     0x1005bf74
1005bf56:	cmp    eax,0x41
1005bf59:	je     0x1005bf74
1005bf5b:	push   DWORD PTR [ebp+0x20]
1005bf5e:	push   DWORD PTR [ebp+0x1c]
1005bf61:	push   DWORD PTR [ebp+0x18]
1005bf64:	push   DWORD PTR [ebp+0x10]
1005bf67:	push   DWORD PTR [ebp+0xc]
1005bf6a:	push   DWORD PTR [ebp+0x8]
1005bf6d:	call   0x1005be2b
1005bf72:	jmp    0x1005bfa4
1005bf74:	push   DWORD PTR [ebp+0x20]
1005bf77:	push   DWORD PTR [ebp+0x1c]
1005bf7a:	push   DWORD PTR [ebp+0x18]
1005bf7d:	push   DWORD PTR [ebp+0x10]
1005bf80:	push   DWORD PTR [ebp+0xc]
1005bf83:	push   DWORD PTR [ebp+0x8]
1005bf86:	call   0x1005b90c
1005bf8b:	jmp    0x1005bfa4
1005bf8d:	push   DWORD PTR [ebp+0x20]
1005bf90:	push   DWORD PTR [ebp+0x1c]
1005bf93:	push   DWORD PTR [ebp+0x18]
1005bf96:	push   DWORD PTR [ebp+0x10]
1005bf99:	push   DWORD PTR [ebp+0xc]
1005bf9c:	push   DWORD PTR [ebp+0x8]
1005bf9f:	call   0x1005b820
1005bfa4:	add    esp,0x18
1005bfa7:	pop    ebp
1005bfa8:	ret    
1005bfa9:	push   ebp
1005bfaa:	mov    ebp,esp
1005bfac:	push   0x0
1005bfae:	push   DWORD PTR [ebp+0x1c]
1005bfb1:	push   DWORD PTR [ebp+0x18]
1005bfb4:	push   DWORD PTR [ebp+0x14]
1005bfb7:	push   DWORD PTR [ebp+0x10]
1005bfba:	push   DWORD PTR [ebp+0xc]
1005bfbd:	push   DWORD PTR [ebp+0x8]
1005bfc0:	call   0x1005bf23
1005bfc5:	add    esp,0x1c
1005bfc8:	pop    ebp
1005bfc9:	ret    
1005bfca:	push   esi
1005bfcb:	push   0x30000
1005bfd0:	push   0x10000
1005bfd5:	xor    esi,esi
1005bfd7:	push   esi
1005bfd8:	call   0x1005d33f
1005bfdd:	add    esp,0xc
1005bfe0:	test   eax,eax
1005bfe2:	je     0x1005bff1
1005bfe4:	push   esi
1005bfe5:	push   esi
1005bfe6:	push   esi
1005bfe7:	push   esi
1005bfe8:	push   esi
1005bfe9:	call   0x10043380
1005bfee:	add    esp,0x14
1005bff1:	pop    esi
1005bff2:	ret    
1005bff3:	push   ebp
1005bff4:	mov    ebp,esp
1005bff6:	sub    esp,0x18
1005bff9:	fld    QWORD PTR ds:0x1006cb18
1005bfff:	fstp   QWORD PTR [ebp-0x10]
1005c002:	fld    QWORD PTR ds:0x1006cb10
1005c008:	fstp   QWORD PTR [ebp-0x18]
1005c00b:	fld    QWORD PTR [ebp-0x18]
1005c00e:	fdiv   QWORD PTR [ebp-0x10]
1005c011:	fmul   QWORD PTR [ebp-0x10]
1005c014:	fsubr  QWORD PTR [ebp-0x18]
1005c017:	fstp   QWORD PTR [ebp-0x8]
1005c01a:	fld1   
1005c01c:	fcomp  QWORD PTR [ebp-0x8]
1005c01f:	fnstsw ax
1005c021:	test   ah,0x5
1005c024:	jp     0x1005c02b
1005c026:	xor    eax,eax
1005c028:	inc    eax
1005c029:	leave  
1005c02a:	ret    
1005c02b:	xor    eax,eax
1005c02d:	leave  
1005c02e:	ret    
1005c02f:	push   0x1006cb3c
1005c034:	call   DWORD PTR ds:0x10066198
1005c03a:	test   eax,eax
1005c03c:	je     0x1005c053
1005c03e:	push   0x1006cb20
1005c043:	push   eax
1005c044:	call   DWORD PTR ds:0x1006612c
1005c04a:	test   eax,eax
1005c04c:	je     0x1005c053
1005c04e:	push   0x0
1005c050:	call   eax
1005c052:	ret    
1005c053:	jmp    0x1005bff3
1005c058:	push   esi
1005c059:	mov    esi,DWORD PTR [esp+0x8]
1005c05d:	push   edi
1005c05e:	xor    edi,edi
1005c060:	cmp    esi,edi
1005c062:	jne    0x1005c081
1005c064:	call   0x10046c45
1005c069:	push   edi
1005c06a:	push   edi
1005c06b:	push   edi
1005c06c:	push   edi
1005c06d:	push   edi
1005c06e:	mov    DWORD PTR [eax],0x16
1005c074:	call   0x1004347c
1005c079:	add    esp,0x14
1005c07c:	jmp    0x1005c172
1005c081:	mov    eax,DWORD PTR [esi+0xc]
1005c084:	test   al,0x83
1005c086:	je     0x1005c172
1005c08c:	test   al,0x40
1005c08e:	jne    0x1005c172
1005c094:	test   al,0x2
1005c096:	je     0x1005c0a3
1005c098:	or     eax,0x20
1005c09b:	mov    DWORD PTR [esi+0xc],eax
1005c09e:	jmp    0x1005c172
1005c0a3:	or     eax,0x1
1005c0a6:	test   ax,0x10c
1005c0aa:	mov    DWORD PTR [esi+0xc],eax
1005c0ad:	jne    0x1005c0b8
1005c0af:	push   esi
1005c0b0:	call   0x1004d03f
1005c0b5:	pop    ecx
1005c0b6:	jmp    0x1005c0bd
1005c0b8:	mov    eax,DWORD PTR [esi+0x8]
1005c0bb:	mov    DWORD PTR [esi],eax
1005c0bd:	push   DWORD PTR [esi+0x18]
1005c0c0:	push   DWORD PTR [esi+0x8]
1005c0c3:	push   esi
1005c0c4:	call   0x1004d25c
1005c0c9:	pop    ecx
1005c0ca:	push   eax
1005c0cb:	call   0x10058b8c
1005c0d0:	add    esp,0xc
1005c0d3:	cmp    eax,edi
1005c0d5:	mov    DWORD PTR [esi+0x4],eax
1005c0d8:	je     0x1005c162
1005c0de:	cmp    eax,0xffffffff
1005c0e1:	je     0x1005c162
1005c0e3:	test   BYTE PTR [esi+0xc],0x82
1005c0e7:	jne    0x1005c138
1005c0e9:	push   esi
1005c0ea:	call   0x1004d25c
1005c0ef:	cmp    eax,0xffffffff
1005c0f2:	pop    ecx
1005c0f3:	je     0x1005c123
1005c0f5:	push   esi
1005c0f6:	call   0x1004d25c
1005c0fb:	cmp    eax,0xfffffffe
1005c0fe:	pop    ecx
1005c0ff:	je     0x1005c123
1005c101:	push   esi
1005c102:	call   0x1004d25c
1005c107:	sar    eax,0x5
1005c10a:	push   esi
1005c10b:	lea    edi,[eax*4+0x10082480]
1005c112:	call   0x1004d25c
1005c117:	and    eax,0x1f
1005c11a:	imul   eax,eax,0x28
1005c11d:	add    eax,DWORD PTR [edi]
1005c11f:	pop    ecx
1005c120:	pop    ecx
1005c121:	jmp    0x1005c128
1005c123:	mov    eax,0x1007e9d0
1005c128:	mov    al,BYTE PTR [eax+0x4]
1005c12b:	and    al,0x82
1005c12d:	cmp    al,0x82
1005c12f:	jne    0x1005c138
1005c131:	or     DWORD PTR [esi+0xc],0x2000
1005c138:	cmp    DWORD PTR [esi+0x18],0x200
1005c13f:	jne    0x1005c155
1005c141:	mov    eax,DWORD PTR [esi+0xc]
1005c144:	test   al,0x8
1005c146:	je     0x1005c155
1005c148:	test   ax,0x400
1005c14c:	jne    0x1005c155
1005c14e:	mov    DWORD PTR [esi+0x18],0x1000
1005c155:	mov    ecx,DWORD PTR [esi]
1005c157:	dec    DWORD PTR [esi+0x4]
1005c15a:	movzx  eax,BYTE PTR [ecx]
1005c15d:	inc    ecx
1005c15e:	mov    DWORD PTR [esi],ecx
1005c160:	jmp    0x1005c175
1005c162:	neg    eax
1005c164:	sbb    eax,eax
1005c166:	and    eax,0x10
1005c169:	add    eax,0x10
1005c16c:	or     DWORD PTR [esi+0xc],eax
1005c16f:	mov    DWORD PTR [esi+0x4],edi
1005c172:	or     eax,0xffffffff
1005c175:	pop    edi
1005c176:	pop    esi
1005c177:	ret    
1005c178:	push   ebp
1005c179:	mov    ebp,esp
1005c17b:	mov    eax,DWORD PTR [ebp+0x8]
1005c17e:	test   eax,eax
1005c180:	jne    0x1005c187
1005c182:	xor    eax,eax
1005c184:	inc    eax
1005c185:	pop    ebp
1005c186:	ret    
1005c187:	add    al,0x40
1005c189:	mov    BYTE PTR [ebp+0x8],al
1005c18c:	lea    eax,[ebp+0x8]
1005c18f:	push   eax
1005c190:	mov    BYTE PTR [ebp+0x9],0x3a
1005c194:	mov    BYTE PTR [ebp+0xa],0x5c
1005c198:	mov    BYTE PTR [ebp+0xb],0x0
1005c19c:	call   DWORD PTR ds:0x10066054
1005c1a2:	test   eax,eax
1005c1a4:	je     0x1005c1ab
1005c1a6:	cmp    eax,0x1
1005c1a9:	jne    0x1005c182
1005c1ab:	xor    eax,eax
1005c1ad:	pop    ebp
1005c1ae:	ret    
1005c1af:	push   ebp
1005c1b0:	mov    ebp,esp
1005c1b2:	push   ecx
1005c1b3:	push   ecx
1005c1b4:	push   ebx
1005c1b5:	xor    ebx,ebx
1005c1b7:	cmp    DWORD PTR [ebp+0x8],ebx
1005c1ba:	je     0x1005c1f3
1005c1bc:	push   DWORD PTR [ebp+0x8]
1005c1bf:	call   0x1005c178
1005c1c4:	test   eax,eax
1005c1c6:	pop    ecx
1005c1c7:	jne    0x1005c1fa
1005c1c9:	call   0x10046c58
1005c1ce:	mov    DWORD PTR [eax],0xf
1005c1d4:	call   0x10046c45
1005c1d9:	push   ebx
1005c1da:	push   ebx
1005c1db:	push   ebx
1005c1dc:	push   ebx
1005c1dd:	push   ebx
1005c1de:	mov    DWORD PTR [eax],0xd
1005c1e4:	call   0x1004347c
1005c1e9:	add    esp,0x14
1005c1ec:	xor    eax,eax
1005c1ee:	jmp    0x1005c2e1
1005c1f3:	call   0x1005c55d
1005c1f8:	jmp    0x1005c1fd
1005c1fa:	mov    eax,DWORD PTR [ebp+0x8]
1005c1fd:	push   edi
1005c1fe:	mov    edi,DWORD PTR [ebp+0xc]
1005c201:	cmp    edi,ebx
1005c203:	je     0x1005c232
1005c205:	mov    ecx,DWORD PTR [ebp+0x10]
1005c208:	cmp    ecx,ebx
1005c20a:	jg     0x1005c22b
1005c20c:	call   0x10046c45
1005c211:	push   ebx
1005c212:	push   ebx
1005c213:	push   ebx
1005c214:	push   ebx
1005c215:	push   ebx
1005c216:	mov    DWORD PTR [eax],0x16
1005c21c:	call   0x1004347c
1005c221:	add    esp,0x14
1005c224:	xor    eax,eax
1005c226:	jmp    0x1005c2e0
1005c22b:	mov    DWORD PTR [ebp+0x8],ecx
1005c22e:	mov    BYTE PTR [edi],bl
1005c230:	jmp    0x1005c235
1005c232:	mov    DWORD PTR [ebp+0x8],ebx
1005c235:	cmp    eax,ebx
1005c237:	je     0x1005c24b
1005c239:	add    al,0x40
1005c23b:	mov    BYTE PTR [ebp-0x4],al
1005c23e:	mov    BYTE PTR [ebp-0x3],0x3a
1005c242:	mov    BYTE PTR [ebp-0x2],0x2e
1005c246:	mov    BYTE PTR [ebp-0x1],bl
1005c249:	jmp    0x1005c252
1005c24b:	mov    BYTE PTR [ebp-0x4],0x2e
1005c24f:	mov    BYTE PTR [ebp-0x3],bl
1005c252:	push   esi
1005c253:	mov    esi,DWORD PTR ds:0x10066058
1005c259:	lea    eax,[ebp-0x8]
1005c25c:	push   eax
1005c25d:	push   edi
1005c25e:	push   DWORD PTR [ebp+0x8]
1005c261:	lea    eax,[ebp-0x4]
1005c264:	push   eax
1005c265:	call   esi
1005c267:	cmp    eax,ebx
1005c269:	je     0x1005c2d0
1005c26b:	cmp    edi,ebx
1005c26d:	je     0x1005c283
1005c26f:	cmp    eax,DWORD PTR [ebp+0x8]
1005c272:	jl     0x1005c2cc
1005c274:	call   0x10046c45
1005c279:	mov    DWORD PTR [eax],0x22
1005c27f:	mov    BYTE PTR [edi],bl
1005c281:	jmp    0x1005c2dd
1005c283:	cmp    eax,DWORD PTR [ebp+0x10]
1005c286:	jle    0x1005c28b
1005c288:	mov    DWORD PTR [ebp+0x10],eax
1005c28b:	push   0x1
1005c28d:	push   DWORD PTR [ebp+0x10]
1005c290:	call   0x100437a4
1005c295:	mov    edi,eax
1005c297:	cmp    edi,ebx
1005c299:	pop    ecx
1005c29a:	pop    ecx
1005c29b:	jne    0x1005c2b5
1005c29d:	call   0x10046c45
1005c2a2:	mov    DWORD PTR [eax],0xc
1005c2a8:	call   0x10046c58
1005c2ad:	mov    DWORD PTR [eax],0x8
1005c2b3:	jmp    0x1005c2dd
1005c2b5:	lea    eax,[ebp-0x8]
1005c2b8:	push   eax
1005c2b9:	push   edi
1005c2ba:	push   DWORD PTR [ebp+0x10]
1005c2bd:	lea    eax,[ebp-0x4]
1005c2c0:	push   eax
1005c2c1:	call   esi
1005c2c3:	cmp    eax,ebx
1005c2c5:	je     0x1005c2d0
1005c2c7:	cmp    eax,DWORD PTR [ebp+0x10]
1005c2ca:	jge    0x1005c2d0
1005c2cc:	mov    eax,edi
1005c2ce:	jmp    0x1005c2df
1005c2d0:	call   DWORD PTR ds:0x100660cc
1005c2d6:	push   eax
1005c2d7:	call   0x10046c6b
1005c2dc:	pop    ecx
1005c2dd:	xor    eax,eax
1005c2df:	pop    esi
1005c2e0:	pop    edi
1005c2e1:	pop    ebx
1005c2e2:	leave  
1005c2e3:	ret    
1005c2e4:	push   0xc
1005c2e6:	push   0x10074d28
1005c2eb:	call   0x10046d84
1005c2f0:	push   0x7
1005c2f2:	call   0x10047d8d
1005c2f7:	pop    ecx
1005c2f8:	and    DWORD PTR [ebp-0x4],0x0
1005c2fc:	push   DWORD PTR [ebp+0xc]
1005c2ff:	push   DWORD PTR [ebp+0x8]
1005c302:	push   0x0
1005c304:	call   0x1005c1af
1005c309:	add    esp,0xc
1005c30c:	mov    DWORD PTR [ebp-0x1c],eax
1005c30f:	mov    DWORD PTR [ebp-0x4],0xfffffffe
1005c316:	call   0x1005c324
1005c31b:	mov    eax,DWORD PTR [ebp-0x1c]
1005c31e:	call   0x10046dc9
1005c323:	ret    
1005c324:	push   0x7
1005c326:	call   0x10047cb5
1005c32b:	pop    ecx
1005c32c:	ret    
1005c32d:	int3   
1005c32e:	int3   
1005c32f:	int3   
1005c330:	push   ebp
1005c331:	mov    ebp,esp
1005c333:	sub    esp,0x14
1005c336:	push   esi
1005c337:	push   DWORD PTR [ebp+0x10]
1005c33a:	lea    ecx,[ebp-0x14]
1005c33d:	call   0x100455d5
1005c342:	mov    edx,DWORD PTR [ebp+0x8]
1005c345:	xor    esi,esi
1005c347:	cmp    edx,esi
1005c349:	jne    0x1005c37a
1005c34b:	call   0x10046c45
1005c350:	push   esi
1005c351:	push   esi
1005c352:	push   esi
1005c353:	push   esi
1005c354:	push   esi
1005c355:	mov    DWORD PTR [eax],0x16
1005c35b:	call   0x1004347c
1005c360:	add    esp,0x14
1005c363:	cmp    BYTE PTR [ebp-0x8],0x0
1005c367:	je     0x1005c370
1005c369:	mov    eax,DWORD PTR [ebp-0xc]
1005c36c:	and    DWORD PTR [eax+0x70],0xfffffffd
1005c370:	mov    eax,0x7fffffff
1005c375:	jmp    0x1005c547
1005c37a:	push   ebx
1005c37b:	mov    ebx,DWORD PTR [ebp+0xc]
1005c37e:	cmp    ebx,esi
1005c380:	jne    0x1005c3b1
1005c382:	call   0x10046c45
1005c387:	push   esi
1005c388:	push   esi
1005c389:	push   esi
1005c38a:	push   esi
1005c38b:	push   esi
1005c38c:	mov    DWORD PTR [eax],0x16
1005c392:	call   0x1004347c
1005c397:	add    esp,0x14
1005c39a:	cmp    BYTE PTR [ebp-0x8],0x0
1005c39e:	je     0x1005c3a7
1005c3a0:	mov    eax,DWORD PTR [ebp-0xc]
1005c3a3:	and    DWORD PTR [eax+0x70],0xfffffffd
1005c3a7:	mov    eax,0x7fffffff
1005c3ac:	jmp    0x1005c546
1005c3b1:	mov    eax,DWORD PTR [ebp-0x10]
1005c3b4:	cmp    DWORD PTR [eax+0x8],esi
1005c3b7:	jne    0x1005c3dd
1005c3b9:	lea    eax,[ebp-0x14]
1005c3bc:	push   eax
1005c3bd:	push   ebx
1005c3be:	push   edx
1005c3bf:	call   0x1004568c
1005c3c4:	add    esp,0xc
1005c3c7:	cmp    BYTE PTR [ebp-0x8],0x0
1005c3cb:	je     0x1005c546
1005c3d1:	mov    ecx,DWORD PTR [ebp-0xc]
1005c3d4:	and    DWORD PTR [ecx+0x70],0xfffffffd
1005c3d8:	jmp    0x1005c546
1005c3dd:	push   edi
1005c3de:	mov    edi,0x200
1005c3e3:	movzx  cx,BYTE PTR [edx]
1005c3e7:	movzx  ecx,cx
1005c3ea:	movzx  esi,cl
1005c3ed:	inc    edx
1005c3ee:	test   BYTE PTR [esi+eax*1+0x1d],0x4
1005c3f3:	mov    DWORD PTR [ebp+0x8],edx
1005c3f6:	je     0x1005c451
1005c3f8:	cmp    BYTE PTR [edx],0x0
1005c3fb:	jne    0x1005c401
1005c3fd:	xor    esi,esi
1005c3ff:	jmp    0x1005c46d
1005c401:	push   0x1
1005c403:	push   DWORD PTR [eax+0x4]
1005c406:	lea    ecx,[ebp-0x4]
1005c409:	push   0x2
1005c40b:	push   ecx
1005c40c:	push   0x2
1005c40e:	dec    edx
1005c40f:	push   edx
1005c410:	push   edi
1005c411:	push   DWORD PTR [eax+0xc]
1005c414:	lea    eax,[ebp-0x14]
1005c417:	push   eax
1005c418:	call   0x1004b36c
1005c41d:	add    esp,0x24
1005c420:	cmp    eax,0x1
1005c423:	jne    0x1005c42c
1005c425:	movzx  ax,BYTE PTR [ebp-0x4]
1005c42a:	jmp    0x1005c446
1005c42c:	cmp    eax,0x2
1005c42f:	jne    0x1005c502
1005c435:	movzx  ax,BYTE PTR [ebp-0x4]
1005c43a:	movzx  cx,BYTE PTR [ebp-0x3]
1005c43f:	shl    ax,0x8
1005c443:	add    ax,cx
1005c446:	inc    DWORD PTR [ebp+0x8]
1005c449:	movzx  esi,ax
1005c44c:	mov    eax,DWORD PTR [ebp-0x10]
1005c44f:	jmp    0x1005c46d
1005c451:	movzx  edx,cx
1005c454:	lea    ecx,[edx+eax*1]
1005c457:	test   BYTE PTR [ecx+0x1d],0x10
1005c45b:	je     0x1005c46a
1005c45d:	movzx  cx,BYTE PTR [ecx+0x11d]
1005c465:	movzx  esi,cx
1005c468:	jmp    0x1005c46d
1005c46a:	movzx  esi,dx
1005c46d:	movzx  cx,BYTE PTR [ebx]
1005c471:	movzx  ecx,cx
1005c474:	movzx  edx,cl
1005c477:	inc    ebx
1005c478:	test   BYTE PTR [edx+eax*1+0x1d],0x4
1005c47d:	je     0x1005c4d4
1005c47f:	cmp    BYTE PTR [ebx],0x0
1005c482:	jne    0x1005c488
1005c484:	xor    ecx,ecx
1005c486:	jmp    0x1005c4f0
1005c488:	push   0x1
1005c48a:	push   DWORD PTR [eax+0x4]
1005c48d:	lea    ecx,[ebp-0x4]
1005c490:	push   0x2
1005c492:	push   ecx
1005c493:	push   0x2
1005c495:	lea    ecx,[ebx-0x1]
1005c498:	push   ecx
1005c499:	push   edi
1005c49a:	push   DWORD PTR [eax+0xc]
1005c49d:	lea    eax,[ebp-0x14]
1005c4a0:	push   eax
1005c4a1:	call   0x1004b36c
1005c4a6:	add    esp,0x24
1005c4a9:	cmp    eax,0x1
1005c4ac:	jne    0x1005c4b5
1005c4ae:	movzx  ax,BYTE PTR [ebp-0x4]
1005c4b3:	jmp    0x1005c4cb
1005c4b5:	cmp    eax,0x2
1005c4b8:	jne    0x1005c502
1005c4ba:	movzx  ax,BYTE PTR [ebp-0x4]
1005c4bf:	movzx  cx,BYTE PTR [ebp-0x3]
1005c4c4:	shl    ax,0x8
1005c4c8:	add    ax,cx
1005c4cb:	movzx  ecx,ax
1005c4ce:	mov    eax,DWORD PTR [ebp-0x10]
1005c4d1:	inc    ebx
1005c4d2:	jmp    0x1005c4f0
1005c4d4:	movzx  edx,cx
1005c4d7:	lea    ecx,[edx+eax*1]
1005c4da:	test   BYTE PTR [ecx+0x1d],0x10
1005c4de:	je     0x1005c4ed
1005c4e0:	movzx  cx,BYTE PTR [ecx+0x11d]
1005c4e8:	movzx  ecx,cx
1005c4eb:	jmp    0x1005c4f0
1005c4ed:	movzx  ecx,dx
1005c4f0:	cmp    cx,si
1005c4f3:	jne    0x1005c521
1005c4f5:	test   si,si
1005c4f8:	je     0x1005c536
1005c4fa:	mov    edx,DWORD PTR [ebp+0x8]
1005c4fd:	jmp    0x1005c3e3
1005c502:	call   0x10046c45
1005c507:	mov    DWORD PTR [eax],0x16
1005c50d:	cmp    BYTE PTR [ebp-0x8],0x0
1005c511:	je     0x1005c51a
1005c513:	mov    eax,DWORD PTR [ebp-0xc]
1005c516:	and    DWORD PTR [eax+0x70],0xfffffffd
1005c51a:	mov    eax,0x7fffffff
1005c51f:	jmp    0x1005c545
1005c521:	sbb    eax,eax
1005c523:	and    eax,0x2
1005c526:	dec    eax
1005c527:	cmp    BYTE PTR [ebp-0x8],0x0
1005c52b:	je     0x1005c545
1005c52d:	mov    ecx,DWORD PTR [ebp-0xc]
1005c530:	and    DWORD PTR [ecx+0x70],0xfffffffd
1005c534:	jmp    0x1005c545
1005c536:	cmp    BYTE PTR [ebp-0x8],0x0
1005c53a:	je     0x1005c543
1005c53c:	mov    eax,DWORD PTR [ebp-0xc]
1005c53f:	and    DWORD PTR [eax+0x70],0xfffffffd
1005c543:	xor    eax,eax
1005c545:	pop    edi
1005c546:	pop    ebx
1005c547:	pop    esi
1005c548:	leave  
1005c549:	ret    
1005c54a:	push   0x0
1005c54c:	push   DWORD PTR [esp+0xc]
1005c550:	push   DWORD PTR [esp+0xc]
1005c554:	call   0x1005c330
1005c559:	add    esp,0xc
1005c55c:	ret    
1005c55d:	push   ebp
1005c55e:	lea    ebp,[esp-0x94]
1005c565:	sub    esp,0x114
1005c56b:	mov    eax,ds:0x1007e030
1005c570:	xor    eax,ebp
1005c572:	mov    DWORD PTR [ebp+0x90],eax
1005c578:	and    DWORD PTR [ebp-0x7c],0x0
1005c57c:	push   ebx
1005c57d:	push   esi
1005c57e:	push   edi
1005c57f:	mov    edi,DWORD PTR ds:0x10066064
1005c585:	lea    ebx,[ebp-0x78]
1005c588:	mov    eax,ebx
1005c58a:	push   eax
1005c58b:	push   0x105
1005c590:	call   edi
1005c592:	mov    esi,eax
1005c594:	cmp    esi,0x104
1005c59a:	jle    0x1005c5d4
1005c59c:	lea    eax,[esi+0x1]
1005c59f:	push   0x1
1005c5a1:	push   eax
1005c5a2:	mov    DWORD PTR [ebp-0x80],eax
1005c5a5:	call   0x10047552
1005c5aa:	mov    ebx,eax
1005c5ac:	test   ebx,ebx
1005c5ae:	pop    ecx
1005c5af:	pop    ecx
1005c5b0:	jne    0x1005c5c1
1005c5b2:	call   0x10046c45
1005c5b7:	mov    DWORD PTR [eax],0xc
1005c5bd:	xor    esi,esi
1005c5bf:	jmp    0x1005c5d4
1005c5c1:	test   esi,esi
1005c5c3:	mov    DWORD PTR [ebp-0x7c],0x1
1005c5ca:	je     0x1005c5d4
1005c5cc:	push   ebx
1005c5cd:	push   DWORD PTR [ebp-0x80]
1005c5d0:	call   edi
1005c5d2:	mov    esi,eax
1005c5d4:	xor    edi,edi
1005c5d6:	test   esi,esi
1005c5d8:	je     0x1005c5f1
1005c5da:	cmp    BYTE PTR [ebx+0x1],0x3a
1005c5de:	jne    0x1005c5fc
1005c5e0:	movzx  eax,BYTE PTR [ebx]
1005c5e3:	push   eax
1005c5e4:	call   0x10058e57
1005c5e9:	mov    edi,eax
1005c5eb:	pop    ecx
1005c5ec:	sub    edi,0x40
1005c5ef:	jmp    0x1005c5fc
1005c5f1:	call   0x10046c45
1005c5f6:	mov    DWORD PTR [eax],0xc
1005c5fc:	cmp    DWORD PTR [ebp-0x7c],0x0
1005c600:	je     0x1005c609
1005c602:	push   ebx
1005c603:	call   0x100435f8
1005c608:	pop    ecx
1005c609:	mov    ecx,DWORD PTR [ebp+0x90]
1005c60f:	mov    eax,edi
1005c611:	pop    edi
1005c612:	pop    esi
1005c613:	xor    ecx,ebp
1005c615:	pop    ebx
1005c616:	call   0x10042f87
1005c61b:	add    ebp,0x94
1005c621:	leave  
1005c622:	ret    
1005c623:	push   esi
1005c624:	mov    esi,DWORD PTR [esp+0x8]
1005c628:	cmp    DWORD PTR [esi],0xe06d7363
1005c62e:	jne    0x1005c655
1005c630:	cmp    DWORD PTR ds:0x1006cae8,0x0
1005c637:	je     0x1005c655
1005c639:	push   0x1006cae8
1005c63e:	call   0x1004c3d2
1005c643:	test   eax,eax
1005c645:	pop    ecx
1005c646:	je     0x1005c655
1005c648:	push   DWORD PTR [esp+0xc]
1005c64c:	push   esi
1005c64d:	call   DWORD PTR ds:0x1006cae8
1005c653:	pop    ecx
1005c654:	pop    ecx
1005c655:	pop    esi
1005c656:	ret    
1005c657:	int3   
1005c658:	int3   
1005c659:	int3   
1005c65a:	int3   
1005c65b:	int3   
1005c65c:	int3   
1005c65d:	int3   
1005c65e:	int3   
1005c65f:	int3   
1005c660:	push   ebx
1005c661:	push   ebp
1005c662:	mov    ebp,DWORD PTR [esp+0xc]
1005c666:	xor    eax,eax
1005c668:	or     edx,0xffffffff
1005c66b:	cmp    ecx,0xffffffff
1005c66e:	push   esi
1005c66f:	je     0x1005c702
1005c675:	lea    ecx,[ecx+ecx*2]
1005c678:	mov    esi,DWORD PTR [ebp+ecx*4+0x8]
1005c67c:	lea    ebx,[ebp+ecx*4+0x0]
1005c680:	sub    esi,edi
1005c682:	and    esi,0xfffff000
1005c688:	cmp    esi,edx
1005c68a:	je     0x1005c6b9
1005c68c:	test   eax,eax
1005c68e:	je     0x1005c6a0
1005c690:	mov    ecx,DWORD PTR [eax+0xc]
1005c693:	cmp    esi,ecx
1005c695:	jb     0x1005c6a0
1005c697:	mov    edx,DWORD PTR [eax+0x8]
1005c69a:	add    edx,ecx
1005c69c:	cmp    esi,edx
1005c69e:	jb     0x1005c6b7
1005c6a0:	push   esi
1005c6a1:	push   edi
1005c6a2:	call   0x1004c390
1005c6a7:	add    esp,0x8
1005c6aa:	test   eax,eax
1005c6ac:	je     0x1005c70b
1005c6ae:	test   DWORD PTR [eax+0x24],0x20000000
1005c6b5:	je     0x1005c70b
1005c6b7:	mov    edx,esi
1005c6b9:	mov    ecx,DWORD PTR [ebx+0x4]
1005c6bc:	test   ecx,ecx
1005c6be:	je     0x1005c6f7
1005c6c0:	sub    ecx,edi
1005c6c2:	and    ecx,0xfffff000
1005c6c8:	mov    esi,ecx
1005c6ca:	cmp    esi,edx
1005c6cc:	je     0x1005c6f7
1005c6ce:	mov    ecx,DWORD PTR [eax+0xc]
1005c6d1:	cmp    esi,ecx
1005c6d3:	jb     0x1005c6de
1005c6d5:	mov    edx,DWORD PTR [eax+0x8]
1005c6d8:	add    edx,ecx
1005c6da:	cmp    esi,edx
1005c6dc:	jb     0x1005c6f5
1005c6de:	push   esi
1005c6df:	push   edi
1005c6e0:	call   0x1004c390
1005c6e5:	add    esp,0x8
1005c6e8:	test   eax,eax
1005c6ea:	je     0x1005c70b
1005c6ec:	test   DWORD PTR [eax+0x24],0x20000000
1005c6f3:	je     0x1005c70b
1005c6f5:	mov    edx,esi
1005c6f7:	mov    ecx,DWORD PTR [ebx]
1005c6f9:	cmp    ecx,0xffffffff
1005c6fc:	jne    0x1005c675
1005c702:	pop    esi
1005c703:	pop    ebp
1005c704:	mov    eax,0x1
1005c709:	pop    ebx
1005c70a:	ret    
1005c70b:	pop    esi
1005c70c:	pop    ebp
1005c70d:	xor    eax,eax
1005c70f:	pop    ebx
1005c710:	ret    
1005c711:	int3   
1005c712:	int3   
1005c713:	int3   
1005c714:	int3   
1005c715:	int3   
1005c716:	int3   
1005c717:	int3   
1005c718:	int3   
1005c719:	int3   
1005c71a:	int3   
1005c71b:	int3   
1005c71c:	int3   
1005c71d:	int3   
1005c71e:	int3   
1005c71f:	int3   
1005c720:	push   ebp
1005c721:	mov    ebp,esp
1005c723:	push   0xfffffffe
1005c725:	push   0x10074d48
1005c72a:	push   0x10046de0
1005c72f:	mov    eax,fs:0x0
1005c735:	push   eax
1005c736:	sub    esp,0x30
1005c739:	push   ebx
1005c73a:	push   esi
1005c73b:	push   edi
1005c73c:	mov    eax,ds:0x1007e030
1005c741:	xor    DWORD PTR [ebp-0x8],eax
1005c744:	xor    eax,ebp
1005c746:	push   eax
1005c747:	lea    eax,[ebp-0x10]
1005c74a:	mov    fs:0x0,eax
1005c750:	mov    DWORD PTR [ebp-0x18],esp
1005c753:	mov    esi,DWORD PTR [ebp+0x8]
1005c756:	mov    edx,DWORD PTR [esi+0x8]
1005c759:	mov    DWORD PTR [ebp-0x1c],edx
1005c75c:	test   dl,0x3
1005c75f:	je     0x1005c775
1005c761:	xor    eax,eax
1005c763:	mov    ecx,DWORD PTR [ebp-0x10]
1005c766:	mov    DWORD PTR fs:0x0,ecx
1005c76d:	pop    ecx
1005c76e:	pop    edi
1005c76f:	pop    esi
1005c770:	pop    ebx
1005c771:	mov    esp,ebp
1005c773:	pop    ebp
1005c774:	ret    
1005c775:	mov    eax,fs:0x18
1005c77b:	mov    ecx,DWORD PTR [eax+0x8]
1005c77e:	mov    DWORD PTR [ebp-0x20],ecx
1005c781:	cmp    edx,ecx
1005c783:	jb     0x1005c78a
1005c785:	cmp    edx,DWORD PTR [eax+0x4]
1005c788:	jb     0x1005c761
1005c78a:	mov    edi,DWORD PTR [esi+0xc]
1005c78d:	mov    DWORD PTR [ebp-0x24],edi
1005c790:	cmp    edi,0xffffffff
1005c793:	je     0x1005caab
1005c799:	xor    ebx,ebx
1005c79b:	xor    eax,eax
1005c79d:	mov    ecx,edx
1005c79f:	nop
1005c7a0:	mov    esi,DWORD PTR [ecx]
1005c7a2:	cmp    esi,0xffffffff
1005c7a5:	je     0x1005c7ab
1005c7a7:	cmp    esi,eax
1005c7a9:	jae    0x1005c761
1005c7ab:	cmp    DWORD PTR [ecx+0x4],0x0
1005c7af:	je     0x1005c7b6
1005c7b1:	mov    ebx,0x1
1005c7b6:	add    eax,0x1
1005c7b9:	add    ecx,0xc
1005c7bc:	cmp    eax,edi
1005c7be:	jbe    0x1005c7a0
1005c7c0:	test   ebx,ebx
1005c7c2:	je     0x1005c7d3
1005c7c4:	mov    ecx,DWORD PTR [ebp+0x8]
1005c7c7:	mov    eax,DWORD PTR [ecx-0x8]
1005c7ca:	cmp    eax,DWORD PTR [ebp-0x20]
1005c7cd:	jb     0x1005c761
1005c7cf:	cmp    eax,ecx
1005c7d1:	jae    0x1005c761
1005c7d3:	mov    eax,edx
1005c7d5:	and    eax,0xfffff000
1005c7da:	mov    DWORD PTR [ebp-0x20],eax
1005c7dd:	xor    esi,esi
1005c7df:	mov    eax,ds:0x10080ad0
1005c7e4:	cmp    esi,eax
1005c7e6:	jge    0x1005c92d
1005c7ec:	mov    ebx,DWORD PTR [esi*8+0x10080ad8]
1005c7f3:	mov    edi,DWORD PTR [esi*8+0x10080adc]
1005c7fa:	cmp    ebx,DWORD PTR [ebp-0x20]
1005c7fd:	jne    0x1005c981
1005c803:	mov    DWORD PTR [ebp-0x4],0x0
1005c80a:	push   edi
1005c80b:	call   0x1004c360
1005c810:	add    esp,0x4
1005c813:	test   eax,eax
1005c815:	je     0x1005c923
1005c81b:	mov    eax,DWORD PTR [ebp-0x1c]
1005c81e:	push   eax
1005c81f:	mov    ecx,DWORD PTR [ebp-0x24]
1005c822:	call   0x1005c660
1005c827:	add    esp,0x4
1005c82a:	test   eax,eax
1005c82c:	je     0x1005c923
1005c832:	mov    ecx,DWORD PTR [ebp+0x8]
1005c835:	mov    edx,DWORD PTR [ecx+0x4]
1005c838:	sub    edx,edi
1005c83a:	push   edx
1005c83b:	push   edi
1005c83c:	call   0x1004c390
1005c841:	add    esp,0x8
1005c844:	test   eax,eax
1005c846:	je     0x1005c923
1005c84c:	mov    DWORD PTR [ebp-0x4],0xfffffffe
1005c853:	test   esi,esi
1005c855:	jle    0x1005caab
1005c85b:	mov    eax,0x1
1005c860:	mov    ecx,0x10080b58
1005c865:	xchg   DWORD PTR [ecx],eax
1005c867:	test   eax,eax
1005c869:	jne    0x1005caab
1005c86f:	mov    eax,DWORD PTR [ebp-0x20]
1005c872:	cmp    DWORD PTR [esi*8+0x10080ad8],eax
1005c879:	je     0x1005c8c3
1005c87b:	mov    ecx,DWORD PTR ds:0x10080ad0
1005c881:	lea    esi,[ecx-0x1]
1005c884:	test   esi,esi
1005c886:	jl     0x1005c8b2
1005c888:	jmp    0x1005c890
1005c88a:	lea    ebx,[ebx+0x0]
1005c890:	cmp    DWORD PTR [esi*8+0x10080ad8],eax
1005c897:	je     0x1005c8a0
1005c899:	sub    esi,0x1
1005c89c:	jns    0x1005c890
1005c89e:	jmp    0x1005c8ae
1005c8a0:	mov    ebx,DWORD PTR [esi*8+0x10080ad8]
1005c8a7:	mov    edi,DWORD PTR [esi*8+0x10080adc]
1005c8ae:	test   esi,esi
1005c8b0:	jge    0x1005c8c5
1005c8b2:	cmp    ecx,0x10
1005c8b5:	jge    0x1005c8c0
1005c8b7:	add    ecx,0x1
1005c8ba:	mov    DWORD PTR ds:0x10080ad0,ecx
1005c8c0:	lea    esi,[ecx-0x1]
1005c8c3:	test   esi,esi
1005c8c5:	jle    0x1005caa2
1005c8cb:	xor    eax,eax
1005c8cd:	test   esi,esi
1005c8cf:	jl     0x1005caa2
1005c8d5:	jmp    0x1005c8e0
1005c8d7:	lea    esp,[esp+0x0]
1005c8de:	mov    edi,edi
1005c8e0:	mov    ecx,DWORD PTR [eax*8+0x10080ad8]
1005c8e7:	mov    edx,DWORD PTR [eax*8+0x10080adc]
1005c8ee:	mov    DWORD PTR [eax*8+0x10080ad8],ebx
1005c8f5:	mov    DWORD PTR [eax*8+0x10080adc],edi
1005c8fc:	mov    ebx,ecx
1005c8fe:	mov    edi,edx
1005c900:	add    eax,0x1
1005c903:	cmp    eax,esi
1005c905:	jle    0x1005c8e0
1005c907:	jmp    0x1005caa2
1005c90c:	mov    ecx,DWORD PTR [ebp-0x14]
1005c90f:	mov    edx,DWORD PTR [ecx]
1005c911:	mov    eax,DWORD PTR [edx]
1005c913:	xor    ecx,ecx
1005c915:	cmp    eax,0xc0000005
1005c91a:	sete   cl
1005c91d:	mov    eax,ecx
1005c91f:	ret    
1005c920:	mov    esp,DWORD PTR [ebp-0x18]
1005c923:	mov    DWORD PTR [ebp-0x4],0xfffffffe
1005c92a:	mov    edx,DWORD PTR [ebp-0x1c]
1005c92d:	push   0x1c
1005c92f:	lea    eax,[ebp-0x40]
1005c932:	push   eax
1005c933:	push   edx
1005c934:	call   DWORD PTR ds:0x100660f4
1005c93a:	test   eax,eax
1005c93c:	je     0x1005caab
1005c942:	mov    eax,DWORD PTR [ebp-0x28]
1005c945:	cmp    eax,0x1000000
1005c94a:	je     0x1005c9b0
1005c94c:	cmp    eax,0x20000
1005c951:	jne    0x1005c99b
1005c953:	cmp    DWORD PTR ds:0x10080ad4,0x0
1005c95a:	jne    0x1005c992
1005c95c:	mov    DWORD PTR ds:0x10080b60,0x94
1005c966:	push   0x10080b60
1005c96b:	call   DWORD PTR ds:0x100661a8
1005c971:	test   eax,eax
1005c973:	je     0x1005c989
1005c975:	mov    DWORD PTR ds:0x10080ad4,0x1
1005c97f:	jmp    0x1005c992
1005c981:	add    esi,0x1
1005c984:	jmp    0x1005c7e4
1005c989:	cmp    DWORD PTR ds:0x10080ad4,0x0
1005c990:	je     0x1005c9b0
1005c992:	cmp    DWORD PTR ds:0x10080b70,0x1
1005c999:	je     0x1005c9b0
1005c99b:	or     eax,0xffffffff
1005c99e:	mov    ecx,DWORD PTR [ebp-0x10]
1005c9a1:	mov    DWORD PTR fs:0x0,ecx
1005c9a8:	pop    ecx
1005c9a9:	pop    edi
1005c9aa:	pop    esi
1005c9ab:	pop    ebx
1005c9ac:	mov    esp,ebp
1005c9ae:	pop    ebp
1005c9af:	ret    
1005c9b0:	mov    edi,DWORD PTR [ebp-0x3c]
1005c9b3:	push   edi
1005c9b4:	call   0x1004c360
1005c9b9:	add    esp,0x4
1005c9bc:	test   eax,eax
1005c9be:	je     0x1005c99b
1005c9c0:	test   BYTE PTR [ebp-0x2c],0xcc
1005c9c4:	je     0x1005c9ea
1005c9c6:	mov    ecx,DWORD PTR [ebp-0x1c]
1005c9c9:	sub    ecx,edi
1005c9cb:	push   ecx
1005c9cc:	push   edi
1005c9cd:	call   0x1004c390
1005c9d2:	add    esp,0x8
1005c9d5:	test   eax,eax
1005c9d7:	je     0x1005c761
1005c9dd:	test   DWORD PTR [eax+0x24],0x80000000
1005c9e4:	jne    0x1005c761
1005c9ea:	mov    edx,DWORD PTR [ebp-0x1c]
1005c9ed:	push   edx
1005c9ee:	mov    ecx,DWORD PTR [ebp-0x24]
1005c9f1:	call   0x1005c660
1005c9f6:	add    esp,0x4
1005c9f9:	test   eax,eax
1005c9fb:	je     0x1005c761
1005ca01:	mov    eax,DWORD PTR [ebp+0x8]
1005ca04:	mov    ecx,DWORD PTR [eax+0x4]
1005ca07:	sub    ecx,edi
1005ca09:	push   ecx
1005ca0a:	push   edi
1005ca0b:	call   0x1004c390
1005ca10:	add    esp,0x8
1005ca13:	test   eax,eax
1005ca15:	je     0x1005c761
1005ca1b:	mov    edx,0x1
1005ca20:	mov    eax,0x10080b58
1005ca25:	xchg   DWORD PTR [eax],edx
1005ca27:	test   edx,edx
1005ca29:	jne    0x1005caab
1005ca2f:	mov    esi,DWORD PTR ds:0x10080ad0
1005ca35:	mov    eax,esi
1005ca37:	mov    ecx,DWORD PTR [ebp-0x20]
1005ca3a:	test   esi,esi
1005ca3c:	jle    0x1005ca53
1005ca3e:	lea    edx,[esi*8+0x10080ad0]
1005ca45:	cmp    DWORD PTR [edx],ecx
1005ca47:	je     0x1005ca53
1005ca49:	sub    eax,0x1
1005ca4c:	sub    edx,0x8
1005ca4f:	test   eax,eax
1005ca51:	jg     0x1005ca45
1005ca53:	test   eax,eax
1005ca55:	jne    0x1005ca98
1005ca57:	cmp    esi,0xf
1005ca5a:	jle    0x1005ca61
1005ca5c:	mov    esi,0xf
1005ca61:	mov    edx,DWORD PTR [ebp-0x3c]
1005ca64:	test   esi,esi
1005ca66:	jl     0x1005ca86
1005ca68:	mov    eax,0x10080ad8
1005ca6d:	lea    ebx,[esi+0x1]
1005ca70:	mov    esi,DWORD PTR [eax]
1005ca72:	mov    edi,DWORD PTR [eax+0x4]
1005ca75:	mov    DWORD PTR [eax],ecx
1005ca77:	mov    DWORD PTR [eax+0x4],edx
1005ca7a:	mov    ecx,esi
1005ca7c:	mov    edx,edi
1005ca7e:	add    eax,0x8
1005ca81:	sub    ebx,0x1
1005ca84:	jne    0x1005ca70
1005ca86:	cmp    DWORD PTR ds:0x10080ad0,0x10
1005ca8d:	jge    0x1005caa2
1005ca8f:	add    DWORD PTR ds:0x10080ad0,0x1
1005ca96:	jmp    0x1005caa2
1005ca98:	mov    ecx,DWORD PTR [ebp-0x3c]
1005ca9b:	mov    DWORD PTR [eax*8+0x10080ad4],ecx
1005caa2:	mov    eax,0x10080b58
1005caa7:	xor    edx,edx
1005caa9:	xchg   DWORD PTR [eax],edx
1005caab:	mov    eax,0x1
1005cab0:	mov    ecx,DWORD PTR [ebp-0x10]
1005cab3:	mov    DWORD PTR fs:0x0,ecx
1005caba:	pop    ecx
1005cabb:	pop    edi
1005cabc:	pop    esi
1005cabd:	pop    ebx
1005cabe:	mov    esp,ebp
1005cac0:	pop    ebp
1005cac1:	ret    
1005cac2:	push   ebp
1005cac3:	mov    ebp,esp
1005cac5:	sub    esp,0x18
1005cac8:	push   ebx
1005cac9:	push   esi
1005caca:	push   edi
1005cacb:	xor    ebx,ebx
1005cacd:	push   0x1
1005cacf:	push   ebx
1005cad0:	push   ebx
1005cad1:	push   DWORD PTR [ebp+0x8]
1005cad4:	mov    DWORD PTR [ebp-0x10],ebx
1005cad7:	mov    DWORD PTR [ebp-0xc],ebx
1005cada:	call   0x1004c801
1005cadf:	mov    DWORD PTR [ebp-0x18],eax
1005cae2:	and    eax,edx
1005cae4:	add    esp,0x10
1005cae7:	cmp    eax,0xffffffff
1005caea:	mov    DWORD PTR [ebp-0x14],edx
1005caed:	je     0x1005cb48
1005caef:	push   0x2
1005caf1:	push   ebx
1005caf2:	push   ebx
1005caf3:	push   DWORD PTR [ebp+0x8]
1005caf6:	call   0x1004c801
1005cafb:	mov    ecx,eax
1005cafd:	and    ecx,edx
1005caff:	add    esp,0x10
1005cb02:	cmp    ecx,0xffffffff
1005cb05:	je     0x1005cb48
1005cb07:	mov    esi,DWORD PTR [ebp+0xc]
1005cb0a:	mov    edi,DWORD PTR [ebp+0x10]
1005cb0d:	sub    esi,eax
1005cb0f:	sbb    edi,edx
1005cb11:	js     0x1005cbdd
1005cb17:	jg     0x1005cb21
1005cb19:	cmp    esi,ebx
1005cb1b:	jbe    0x1005cbdd
1005cb21:	mov    ebx,0x1000
1005cb26:	push   ebx
1005cb27:	push   0x8
1005cb29:	call   DWORD PTR ds:0x100661ac
1005cb2f:	push   eax
1005cb30:	call   DWORD PTR ds:0x1006618c
1005cb36:	test   eax,eax
1005cb38:	mov    DWORD PTR [ebp-0x4],eax
1005cb3b:	jne    0x1005cb54
1005cb3d:	call   0x10046c45
1005cb42:	mov    DWORD PTR [eax],0xc
1005cb48:	call   0x10046c45
1005cb4d:	mov    eax,DWORD PTR [eax]
1005cb4f:	pop    edi
1005cb50:	pop    esi
1005cb51:	pop    ebx
1005cb52:	leave  
1005cb53:	ret    
1005cb54:	push   0x8000
1005cb59:	push   DWORD PTR [ebp+0x8]
1005cb5c:	call   0x1005cc76
1005cb61:	pop    ecx
1005cb62:	pop    ecx
1005cb63:	mov    DWORD PTR [ebp-0x8],eax
1005cb66:	test   edi,edi
1005cb68:	jl     0x1005cb74
1005cb6a:	jg     0x1005cb70
1005cb6c:	cmp    esi,ebx
1005cb6e:	jb     0x1005cb74
1005cb70:	mov    eax,ebx
1005cb72:	jmp    0x1005cb76
1005cb74:	mov    eax,esi
1005cb76:	push   eax
1005cb77:	push   DWORD PTR [ebp-0x4]
1005cb7a:	push   DWORD PTR [ebp+0x8]
1005cb7d:	call   0x1004c99d
1005cb82:	add    esp,0xc
1005cb85:	cmp    eax,0xffffffff
1005cb88:	je     0x1005cbc0
1005cb8a:	cdq    
1005cb8b:	sub    esi,eax
1005cb8d:	sbb    edi,edx
1005cb8f:	js     0x1005cb97
1005cb91:	jg     0x1005cb66
1005cb93:	test   esi,esi
1005cb95:	ja     0x1005cb66
1005cb97:	mov    esi,DWORD PTR [ebp-0x10]
1005cb9a:	push   DWORD PTR [ebp-0x8]
1005cb9d:	push   DWORD PTR [ebp+0x8]
1005cba0:	call   0x1005cc76
1005cba5:	pop    ecx
1005cba6:	pop    ecx
1005cba7:	push   DWORD PTR [ebp-0x4]
1005cbaa:	push   0x0
1005cbac:	call   DWORD PTR ds:0x100661ac
1005cbb2:	push   eax
1005cbb3:	call   DWORD PTR ds:0x10066188
1005cbb9:	xor    ebx,ebx
1005cbbb:	jmp    0x1005cc46
1005cbc0:	call   0x10046c58
1005cbc5:	cmp    DWORD PTR [eax],0x5
1005cbc8:	jne    0x1005cbd5
1005cbca:	call   0x10046c45
1005cbcf:	mov    DWORD PTR [eax],0xd
1005cbd5:	or     esi,0xffffffff
1005cbd8:	mov    DWORD PTR [ebp-0xc],esi
1005cbdb:	jmp    0x1005cb9a
1005cbdd:	cmp    edi,ebx
1005cbdf:	jg     0x1005cc52
1005cbe1:	jl     0x1005cbe7
1005cbe3:	cmp    esi,ebx
1005cbe5:	jae    0x1005cc52
1005cbe7:	push   ebx
1005cbe8:	push   DWORD PTR [ebp+0x10]
1005cbeb:	push   DWORD PTR [ebp+0xc]
1005cbee:	push   DWORD PTR [ebp+0x8]
1005cbf1:	call   0x1004c801
1005cbf6:	and    eax,edx
1005cbf8:	add    esp,0x10
1005cbfb:	cmp    eax,0xffffffff
1005cbfe:	je     0x1005cb48
1005cc04:	push   DWORD PTR [ebp+0x8]
1005cc07:	call   0x1004fa4f
1005cc0c:	pop    ecx
1005cc0d:	push   eax
1005cc0e:	call   DWORD PTR ds:0x10066068
1005cc14:	neg    eax
1005cc16:	sbb    eax,eax
1005cc18:	neg    eax
1005cc1a:	dec    eax
1005cc1b:	cdq    
1005cc1c:	mov    DWORD PTR [ebp-0x10],eax
1005cc1f:	and    eax,edx
1005cc21:	cmp    eax,0xffffffff
1005cc24:	mov    DWORD PTR [ebp-0xc],edx
1005cc27:	jne    0x1005cc52
1005cc29:	call   0x10046c45
1005cc2e:	mov    DWORD PTR [eax],0xd
1005cc34:	call   0x10046c58
1005cc39:	mov    esi,eax
1005cc3b:	call   DWORD PTR ds:0x100660cc
1005cc41:	mov    DWORD PTR [esi],eax
1005cc43:	mov    esi,DWORD PTR [ebp-0x10]
1005cc46:	and    esi,DWORD PTR [ebp-0xc]
1005cc49:	cmp    esi,0xffffffff
1005cc4c:	je     0x1005cb48
1005cc52:	push   ebx
1005cc53:	push   DWORD PTR [ebp-0x14]
1005cc56:	push   DWORD PTR [ebp-0x18]
1005cc59:	push   DWORD PTR [ebp+0x8]
1005cc5c:	call   0x1004c801
1005cc61:	and    eax,edx
1005cc63:	add    esp,0x10
1005cc66:	cmp    eax,0xffffffff
1005cc69:	je     0x1005cb48
1005cc6f:	xor    eax,eax
1005cc71:	jmp    0x1005cb4f
1005cc76:	push   ebp
1005cc77:	mov    ebp,esp
1005cc79:	mov    edx,DWORD PTR [ebp+0x8]
1005cc7c:	mov    eax,edx
1005cc7e:	sar    eax,0x5
1005cc81:	and    edx,0x1f
1005cc84:	imul   edx,edx,0x28
1005cc87:	push   ebx
1005cc88:	mov    ebx,DWORD PTR [ebp+0xc]
1005cc8b:	push   esi
1005cc8c:	lea    esi,[eax*4+0x10082480]
1005cc93:	mov    eax,DWORD PTR [esi]
1005cc95:	lea    ecx,[eax+edx*1]
1005cc98:	movzx  eax,BYTE PTR [ecx+0x4]
1005cc9c:	and    eax,0x80
1005cca1:	mov    DWORD PTR [ebp+0x8],eax
1005cca4:	mov    al,BYTE PTR [ecx+0x24]
1005cca7:	add    al,al
1005cca9:	movsx  eax,al
1005ccac:	push   edi
1005ccad:	mov    edi,0x4000
1005ccb2:	sar    eax,1
1005ccb4:	cmp    ebx,edi
1005ccb6:	je     0x1005cd08
1005ccb8:	cmp    ebx,0x8000
1005ccbe:	je     0x1005cd02
1005ccc0:	cmp    ebx,0x10000
1005ccc6:	je     0x1005ccee
1005ccc8:	cmp    ebx,0x20000
1005ccce:	je     0x1005ccee
1005ccd0:	cmp    ebx,0x40000
1005ccd6:	jne    0x1005cd15
1005ccd8:	or     BYTE PTR [ecx+0x4],0x80
1005ccdc:	mov    ecx,DWORD PTR [esi]
1005ccde:	lea    ecx,[ecx+edx*1+0x24]
1005cce2:	mov    dl,BYTE PTR [ecx]
1005cce4:	and    dl,0x81
1005cce7:	or     dl,0x1
1005ccea:	mov    BYTE PTR [ecx],dl
1005ccec:	jmp    0x1005cd15
1005ccee:	or     BYTE PTR [ecx+0x4],0x80
1005ccf2:	mov    ecx,DWORD PTR [esi]
1005ccf4:	lea    ecx,[ecx+edx*1+0x24]
1005ccf8:	mov    dl,BYTE PTR [ecx]
1005ccfa:	and    dl,0x82
1005ccfd:	or     dl,0x2
1005cd00:	jmp    0x1005ccea
1005cd02:	and    BYTE PTR [ecx+0x4],0x7f
1005cd06:	jmp    0x1005cd15
1005cd08:	or     BYTE PTR [ecx+0x4],0x80
1005cd0c:	mov    ecx,DWORD PTR [esi]
1005cd0e:	lea    ecx,[ecx+edx*1+0x24]
1005cd12:	and    BYTE PTR [ecx],0x80
1005cd15:	cmp    DWORD PTR [ebp+0x8],0x0
1005cd19:	jne    0x1005cd22
1005cd1b:	mov    eax,0x8000
1005cd20:	jmp    0x1005cd2d
1005cd22:	neg    eax
1005cd24:	sbb    eax,eax
1005cd26:	and    eax,0xc000
1005cd2b:	add    eax,edi
1005cd2d:	pop    edi
1005cd2e:	pop    esi
1005cd2f:	pop    ebx
1005cd30:	pop    ebp
1005cd31:	ret    
1005cd32:	mov    eax,DWORD PTR [esp+0x4]
1005cd36:	push   esi
1005cd37:	xor    esi,esi
1005cd39:	cmp    eax,esi
1005cd3b:	jne    0x1005cd5a
1005cd3d:	call   0x10046c45
1005cd42:	push   esi
1005cd43:	push   esi
1005cd44:	push   esi
1005cd45:	push   esi
1005cd46:	push   esi
1005cd47:	mov    DWORD PTR [eax],0x16
1005cd4d:	call   0x1004347c
1005cd52:	add    esp,0x14
1005cd55:	push   0x16
1005cd57:	pop    eax
1005cd58:	pop    esi
1005cd59:	ret    
1005cd5a:	mov    ecx,DWORD PTR ds:0x10080bfc
1005cd60:	mov    DWORD PTR [eax],ecx
1005cd62:	xor    eax,eax
1005cd64:	pop    esi
1005cd65:	ret    
1005cd66:	push   ebp
1005cd67:	mov    ebp,esp
1005cd69:	sub    esp,0x10
1005cd6c:	push   ebx
1005cd6d:	xor    ebx,ebx
1005cd6f:	cmp    DWORD PTR [ebp+0x10],ebx
1005cd72:	jne    0x1005cd7b
1005cd74:	xor    eax,eax
1005cd76:	jmp    0x1005ceb8
1005cd7b:	push   edi
1005cd7c:	push   DWORD PTR [ebp+0x14]
1005cd7f:	lea    ecx,[ebp-0x10]
1005cd82:	call   0x100455d5
1005cd87:	mov    edi,DWORD PTR [ebp-0xc]
1005cd8a:	cmp    DWORD PTR [edi+0x8],ebx
1005cd8d:	jne    0x1005cdb5
1005cd8f:	push   DWORD PTR [ebp+0x10]
1005cd92:	push   DWORD PTR [ebp+0xc]
1005cd95:	push   DWORD PTR [ebp+0x8]
1005cd98:	call   0x1004f1f6
1005cd9d:	add    esp,0xc
1005cda0:	cmp    BYTE PTR [ebp-0x4],bl
1005cda3:	je     0x1005ceb7
1005cda9:	mov    ecx,DWORD PTR [ebp-0x8]
1005cdac:	and    DWORD PTR [ecx+0x70],0xfffffffd
1005cdb0:	jmp    0x1005ceb7
1005cdb5:	cmp    DWORD PTR [ebp+0x8],ebx
1005cdb8:	jne    0x1005cde8
1005cdba:	call   0x10046c45
1005cdbf:	push   ebx
1005cdc0:	push   ebx
1005cdc1:	push   ebx
1005cdc2:	push   ebx
1005cdc3:	push   ebx
1005cdc4:	mov    DWORD PTR [eax],0x16
1005cdca:	call   0x1004347c
1005cdcf:	add    esp,0x14
1005cdd2:	cmp    BYTE PTR [ebp-0x4],bl
1005cdd5:	je     0x1005cdde
1005cdd7:	mov    eax,DWORD PTR [ebp-0x8]
1005cdda:	and    DWORD PTR [eax+0x70],0xfffffffd
1005cdde:	mov    eax,0x7fffffff
1005cde3:	jmp    0x1005ceb7
1005cde8:	push   esi
1005cde9:	mov    esi,DWORD PTR [ebp+0xc]
1005cdec:	cmp    esi,ebx
1005cdee:	jne    0x1005ce1e
1005cdf0:	call   0x10046c45
1005cdf5:	push   ebx
1005cdf6:	push   ebx
1005cdf7:	push   ebx
1005cdf8:	push   ebx
1005cdf9:	push   ebx
1005cdfa:	mov    DWORD PTR [eax],0x16
1005ce00:	call   0x1004347c
1005ce05:	add    esp,0x14
1005ce08:	cmp    BYTE PTR [ebp-0x4],bl
1005ce0b:	je     0x1005ce14
1005ce0d:	mov    eax,DWORD PTR [ebp-0x8]
1005ce10:	and    DWORD PTR [eax+0x70],0xfffffffd
1005ce14:	mov    eax,0x7fffffff
1005ce19:	jmp    0x1005ceb6
1005ce1e:	mov    eax,DWORD PTR [ebp+0x8]
1005ce21:	movzx  cx,BYTE PTR [eax]
1005ce25:	dec    DWORD PTR [ebp+0x10]
1005ce28:	movzx  ecx,cx
1005ce2b:	movzx  edx,cl
1005ce2e:	inc    eax
1005ce2f:	test   BYTE PTR [edx+edi*1+0x1d],0x4
1005ce34:	mov    DWORD PTR [ebp+0x8],eax
1005ce37:	je     0x1005ce65
1005ce39:	cmp    DWORD PTR [ebp+0x10],ebx
1005ce3c:	jne    0x1005ce4f
1005ce3e:	movzx  eax,BYTE PTR [esi]
1005ce41:	xor    ecx,ecx
1005ce43:	test   BYTE PTR [eax+edi*1+0x1d],0x4
1005ce48:	jne    0x1005cea8
1005ce4a:	movzx  eax,ax
1005ce4d:	jmp    0x1005ce95
1005ce4f:	mov    al,BYTE PTR [eax]
1005ce51:	cmp    al,bl
1005ce53:	jne    0x1005ce59
1005ce55:	xor    ecx,ecx
1005ce57:	jmp    0x1005ce65
1005ce59:	xor    edx,edx
1005ce5b:	inc    DWORD PTR [ebp+0x8]
1005ce5e:	mov    dh,cl
1005ce60:	mov    dl,al
1005ce62:	movzx  ecx,dx
1005ce65:	movzx  ax,BYTE PTR [esi]
1005ce69:	movzx  eax,ax
1005ce6c:	movzx  edx,al
1005ce6f:	inc    esi
1005ce70:	test   BYTE PTR [edx+edi*1+0x1d],0x4
1005ce75:	je     0x1005ce95
1005ce77:	cmp    DWORD PTR [ebp+0x10],ebx
1005ce7a:	jne    0x1005ce80
1005ce7c:	xor    eax,eax
1005ce7e:	jmp    0x1005ce95
1005ce80:	mov    dl,BYTE PTR [esi]
1005ce82:	dec    DWORD PTR [ebp+0x10]
1005ce85:	cmp    dl,bl
1005ce87:	je     0x1005ce7c
1005ce89:	xor    ebx,ebx
1005ce8b:	mov    bh,al
1005ce8d:	inc    esi
1005ce8e:	mov    bl,dl
1005ce90:	movzx  eax,bx
1005ce93:	xor    ebx,ebx
1005ce95:	cmp    ax,cx
1005ce98:	jne    0x1005cebb
1005ce9a:	cmp    cx,bx
1005ce9d:	je     0x1005cea8
1005ce9f:	cmp    DWORD PTR [ebp+0x10],ebx
1005cea2:	jne    0x1005ce1e
1005cea8:	cmp    BYTE PTR [ebp-0x4],bl
1005ceab:	je     0x1005ceb4
1005cead:	mov    eax,DWORD PTR [ebp-0x8]
1005ceb0:	and    DWORD PTR [eax+0x70],0xfffffffd
1005ceb4:	xor    eax,eax
1005ceb6:	pop    esi
1005ceb7:	pop    edi
1005ceb8:	pop    ebx
1005ceb9:	leave  
1005ceba:	ret    
1005cebb:	sbb    eax,eax
1005cebd:	and    eax,0x2
1005cec0:	dec    eax
1005cec1:	cmp    BYTE PTR [ebp-0x4],bl
1005cec4:	je     0x1005ceb6
1005cec6:	mov    ecx,DWORD PTR [ebp-0x8]
1005cec9:	and    DWORD PTR [ecx+0x70],0xfffffffd
1005cecd:	jmp    0x1005ceb6
1005cecf:	push   0x0
1005ced1:	push   DWORD PTR [esp+0x10]
1005ced5:	push   DWORD PTR [esp+0x10]
1005ced9:	push   DWORD PTR [esp+0x10]
1005cedd:	call   0x1005cd66
1005cee2:	add    esp,0x10
1005cee5:	ret    
1005cee6:	push   ebp
1005cee7:	mov    ebp,esp
1005cee9:	sub    esp,0x28
1005ceec:	mov    eax,ds:0x1007e030
1005cef1:	xor    eax,ebp
1005cef3:	mov    DWORD PTR [ebp-0x4],eax
1005cef6:	push   ebx
1005cef7:	push   esi
1005cef8:	mov    esi,DWORD PTR [ebp+0x8]
1005cefb:	push   edi
1005cefc:	push   DWORD PTR [ebp+0x10]
1005ceff:	mov    edi,DWORD PTR [ebp+0xc]
1005cf02:	lea    ecx,[ebp-0x24]
1005cf05:	call   0x100455d5
1005cf0a:	lea    eax,[ebp-0x24]
1005cf0d:	push   eax
1005cf0e:	xor    ebx,ebx
1005cf10:	push   ebx
1005cf11:	push   ebx
1005cf12:	push   ebx
1005cf13:	push   ebx
1005cf14:	push   edi
1005cf15:	lea    eax,[ebp-0x28]
1005cf18:	push   eax
1005cf19:	lea    eax,[ebp-0x10]
1005cf1c:	push   eax
1005cf1d:	call   0x1005de2d
1005cf22:	mov    DWORD PTR [ebp-0x14],eax
1005cf25:	lea    eax,[ebp-0x10]
1005cf28:	push   esi
1005cf29:	push   eax
1005cf2a:	call   0x1005d3a9
1005cf2f:	add    esp,0x28
1005cf32:	test   BYTE PTR [ebp-0x14],0x3
1005cf36:	jne    0x1005cf63
1005cf38:	cmp    eax,0x1
1005cf3b:	jne    0x1005cf4e
1005cf3d:	cmp    BYTE PTR [ebp-0x18],bl
1005cf40:	je     0x1005cf49
1005cf42:	mov    eax,DWORD PTR [ebp-0x1c]
1005cf45:	and    DWORD PTR [eax+0x70],0xfffffffd
1005cf49:	push   0x3
1005cf4b:	pop    eax
1005cf4c:	jmp    0x1005cf7d
1005cf4e:	cmp    eax,0x2
1005cf51:	jne    0x1005cf6f
1005cf53:	cmp    BYTE PTR [ebp-0x18],bl
1005cf56:	je     0x1005cf5f
1005cf58:	mov    eax,DWORD PTR [ebp-0x1c]
1005cf5b:	and    DWORD PTR [eax+0x70],0xfffffffd
1005cf5f:	push   0x4
1005cf61:	jmp    0x1005cf4b
1005cf63:	test   BYTE PTR [ebp-0x14],0x1
1005cf67:	jne    0x1005cf53
1005cf69:	test   BYTE PTR [ebp-0x14],0x2
1005cf6d:	jne    0x1005cf3d
1005cf6f:	cmp    BYTE PTR [ebp-0x18],bl
1005cf72:	je     0x1005cf7b
1005cf74:	mov    eax,DWORD PTR [ebp-0x1c]
1005cf77:	and    DWORD PTR [eax+0x70],0xfffffffd
1005cf7b:	xor    eax,eax
1005cf7d:	mov    ecx,DWORD PTR [ebp-0x4]
1005cf80:	pop    edi
1005cf81:	pop    esi
1005cf82:	xor    ecx,ebp
1005cf84:	pop    ebx
1005cf85:	call   0x10042f87
1005cf8a:	leave  
1005cf8b:	ret    
1005cf8c:	push   ebp
1005cf8d:	mov    ebp,esp
1005cf8f:	sub    esp,0x28
1005cf92:	mov    eax,ds:0x1007e030
1005cf97:	xor    eax,ebp
1005cf99:	mov    DWORD PTR [ebp-0x4],eax
1005cf9c:	push   ebx
1005cf9d:	push   esi
1005cf9e:	mov    esi,DWORD PTR [ebp+0x8]
1005cfa1:	push   edi
1005cfa2:	push   DWORD PTR [ebp+0x10]
1005cfa5:	mov    edi,DWORD PTR [ebp+0xc]
1005cfa8:	lea    ecx,[ebp-0x24]
1005cfab:	call   0x100455d5
1005cfb0:	lea    eax,[ebp-0x24]
1005cfb3:	push   eax
1005cfb4:	xor    ebx,ebx
1005cfb6:	push   ebx
1005cfb7:	push   ebx
1005cfb8:	push   ebx
1005cfb9:	push   ebx
1005cfba:	push   edi
1005cfbb:	lea    eax,[ebp-0x28]
1005cfbe:	push   eax
1005cfbf:	lea    eax,[ebp-0x10]
1005cfc2:	push   eax
1005cfc3:	call   0x1005de2d
1005cfc8:	mov    DWORD PTR [ebp-0x14],eax
1005cfcb:	lea    eax,[ebp-0x10]
1005cfce:	push   esi
1005cfcf:	push   eax
1005cfd0:	call   0x1005d8eb
1005cfd5:	add    esp,0x28
1005cfd8:	test   BYTE PTR [ebp-0x14],0x3
1005cfdc:	jne    0x1005d009
1005cfde:	cmp    eax,0x1
1005cfe1:	jne    0x1005cff4
1005cfe3:	cmp    BYTE PTR [ebp-0x18],bl
1005cfe6:	je     0x1005cfef
1005cfe8:	mov    eax,DWORD PTR [ebp-0x1c]
1005cfeb:	and    DWORD PTR [eax+0x70],0xfffffffd
1005cfef:	push   0x3
1005cff1:	pop    eax
1005cff2:	jmp    0x1005d023
1005cff4:	cmp    eax,0x2
1005cff7:	jne    0x1005d015
1005cff9:	cmp    BYTE PTR [ebp-0x18],bl
1005cffc:	je     0x1005d005
1005cffe:	mov    eax,DWORD PTR [ebp-0x1c]
1005d001:	and    DWORD PTR [eax+0x70],0xfffffffd
1005d005:	push   0x4
1005d007:	jmp    0x1005cff1
1005d009:	test   BYTE PTR [ebp-0x14],0x1
1005d00d:	jne    0x1005cff9
1005d00f:	test   BYTE PTR [ebp-0x14],0x2
1005d013:	jne    0x1005cfe3
1005d015:	cmp    BYTE PTR [ebp-0x18],bl
1005d018:	je     0x1005d021
1005d01a:	mov    eax,DWORD PTR [ebp-0x1c]
1005d01d:	and    DWORD PTR [eax+0x70],0xfffffffd
1005d021:	xor    eax,eax
1005d023:	mov    ecx,DWORD PTR [ebp-0x4]
1005d026:	pop    edi
1005d027:	pop    esi
1005d028:	xor    ecx,ebp
1005d02a:	pop    ebx
1005d02b:	call   0x10042f87
1005d030:	leave  
1005d031:	ret    
1005d032:	push   ebp
1005d033:	mov    ebp,esp
1005d035:	mov    ecx,DWORD PTR [ebp+0x14]
1005d038:	push   ebx
1005d039:	push   esi
1005d03a:	mov    esi,DWORD PTR [ebp+0x8]
1005d03d:	xor    ebx,ebx
1005d03f:	cmp    esi,ebx
1005d041:	push   edi
1005d042:	mov    edi,DWORD PTR [ecx+0xc]
1005d045:	jne    0x1005d065
1005d047:	call   0x10046c45
1005d04c:	push   0x16
1005d04e:	pop    esi
1005d04f:	mov    DWORD PTR [eax],esi
1005d051:	push   ebx
1005d052:	push   ebx
1005d053:	push   ebx
1005d054:	push   ebx
1005d055:	push   ebx
1005d056:	call   0x1004347c
1005d05b:	add    esp,0x14
1005d05e:	mov    eax,esi
1005d060:	jmp    0x1005d0ea
1005d065:	cmp    DWORD PTR [ebp+0xc],ebx
1005d068:	jbe    0x1005d047
1005d06a:	mov    edx,DWORD PTR [ebp+0x10]
1005d06d:	cmp    edx,ebx
1005d06f:	mov    BYTE PTR [esi],bl
1005d071:	jle    0x1005d077
1005d073:	mov    eax,edx
1005d075:	jmp    0x1005d079
1005d077:	xor    eax,eax
1005d079:	inc    eax
1005d07a:	cmp    DWORD PTR [ebp+0xc],eax
1005d07d:	ja     0x1005d08d
1005d07f:	call   0x10046c45
1005d084:	push   0x22
1005d086:	pop    ecx
1005d087:	mov    DWORD PTR [eax],ecx
1005d089:	mov    esi,ecx
1005d08b:	jmp    0x1005d051
1005d08d:	cmp    edx,ebx
1005d08f:	mov    BYTE PTR [esi],0x30
1005d092:	lea    eax,[esi+0x1]
1005d095:	jle    0x1005d0b1
1005d097:	mov    cl,BYTE PTR [edi]
1005d099:	cmp    cl,bl
1005d09b:	je     0x1005d0a3
1005d09d:	movsx  ecx,cl
1005d0a0:	inc    edi
1005d0a1:	jmp    0x1005d0a6
1005d0a3:	push   0x30
1005d0a5:	pop    ecx
1005d0a6:	mov    BYTE PTR [eax],cl
1005d0a8:	inc    eax
1005d0a9:	dec    edx
1005d0aa:	cmp    edx,ebx
1005d0ac:	jg     0x1005d097
1005d0ae:	mov    ecx,DWORD PTR [ebp+0x14]
1005d0b1:	cmp    edx,ebx
1005d0b3:	mov    BYTE PTR [eax],bl
1005d0b5:	jl     0x1005d0c9
1005d0b7:	cmp    BYTE PTR [edi],0x35
1005d0ba:	jl     0x1005d0c9
1005d0bc:	jmp    0x1005d0c1
1005d0be:	mov    BYTE PTR [eax],0x30
1005d0c1:	dec    eax
1005d0c2:	cmp    BYTE PTR [eax],0x39
1005d0c5:	je     0x1005d0be
1005d0c7:	inc    BYTE PTR [eax]
1005d0c9:	cmp    BYTE PTR [esi],0x31
1005d0cc:	jne    0x1005d0d3
1005d0ce:	inc    DWORD PTR [ecx+0x4]
1005d0d1:	jmp    0x1005d0e8
1005d0d3:	lea    edi,[esi+0x1]
1005d0d6:	push   edi
1005d0d7:	call   0x10043100
1005d0dc:	inc    eax
1005d0dd:	push   eax
1005d0de:	push   edi
1005d0df:	push   esi
1005d0e0:	call   0x100457b0
1005d0e5:	add    esp,0x10
1005d0e8:	xor    eax,eax
1005d0ea:	pop    edi
1005d0eb:	pop    esi
1005d0ec:	pop    ebx
1005d0ed:	pop    ebp
1005d0ee:	ret    
1005d0ef:	push   ebp
1005d0f0:	mov    ebp,esp
1005d0f2:	push   ecx
1005d0f3:	mov    edx,DWORD PTR [ebp+0xc]
1005d0f6:	movzx  eax,WORD PTR [edx+0x6]
1005d0fa:	push   ebx
1005d0fb:	mov    ecx,eax
1005d0fd:	push   esi
1005d0fe:	push   edi
1005d0ff:	shr    ecx,0x4
1005d102:	and    eax,0x8000
1005d107:	mov    edi,0x7ff
1005d10c:	and    ecx,edi
1005d10e:	mov    DWORD PTR [ebp+0xc],eax
1005d111:	mov    eax,DWORD PTR [edx+0x4]
1005d114:	mov    edx,DWORD PTR [edx]
1005d116:	movzx  ebx,cx
1005d119:	mov    esi,0x80000000
1005d11e:	and    eax,0xfffff
1005d123:	test   ebx,ebx
1005d125:	mov    DWORD PTR [ebp-0x4],esi
1005d128:	je     0x1005d13d
1005d12a:	cmp    ebx,edi
1005d12c:	je     0x1005d136
1005d12e:	add    ecx,0x3c00
1005d134:	jmp    0x1005d15e
1005d136:	mov    edi,0x7fff
1005d13b:	jmp    0x1005d161
1005d13d:	xor    ebx,ebx
1005d13f:	cmp    eax,ebx
1005d141:	jne    0x1005d155
1005d143:	cmp    edx,ebx
1005d145:	jne    0x1005d155
1005d147:	mov    eax,DWORD PTR [ebp+0x8]
1005d14a:	mov    cx,WORD PTR [ebp+0xc]
1005d14e:	mov    DWORD PTR [eax+0x4],ebx
1005d151:	mov    DWORD PTR [eax],ebx
1005d153:	jmp    0x1005d1a1
1005d155:	add    ecx,0x3c01
1005d15b:	mov    DWORD PTR [ebp-0x4],ebx
1005d15e:	movzx  edi,cx
1005d161:	mov    ecx,edx
1005d163:	shr    ecx,0x15
1005d166:	shl    eax,0xb
1005d169:	or     ecx,eax
1005d16b:	or     ecx,DWORD PTR [ebp-0x4]
1005d16e:	mov    eax,DWORD PTR [ebp+0x8]
1005d171:	shl    edx,0xb
1005d174:	test   esi,ecx
1005d176:	mov    DWORD PTR [eax+0x4],ecx
1005d179:	mov    DWORD PTR [eax],edx
1005d17b:	jne    0x1005d19c
1005d17d:	mov    ecx,DWORD PTR [eax]
1005d17f:	mov    edx,DWORD PTR [eax+0x4]
1005d182:	mov    ebx,ecx
1005d184:	add    edx,edx
1005d186:	shr    ebx,0x1f
1005d189:	or     edx,ebx
1005d18b:	add    ecx,ecx
1005d18d:	add    edi,0xffff
1005d193:	test   esi,edx
1005d195:	mov    DWORD PTR [eax+0x4],edx
1005d198:	mov    DWORD PTR [eax],ecx
1005d19a:	je     0x1005d17d
1005d19c:	mov    ecx,DWORD PTR [ebp+0xc]
1005d19f:	or     ecx,edi
1005d1a1:	pop    edi
1005d1a2:	pop    esi
1005d1a3:	mov    WORD PTR [eax+0x8],cx
1005d1a7:	pop    ebx
1005d1a8:	leave  
1005d1a9:	ret    
1005d1aa:	push   ebp
1005d1ab:	mov    ebp,esp
1005d1ad:	sub    esp,0x30
1005d1b0:	mov    eax,ds:0x1007e030
1005d1b5:	xor    eax,ebp
1005d1b7:	mov    DWORD PTR [ebp-0x4],eax
1005d1ba:	mov    eax,DWORD PTR [ebp+0x14]
1005d1bd:	push   ebx
1005d1be:	mov    ebx,DWORD PTR [ebp+0x10]
1005d1c1:	push   esi
1005d1c2:	mov    DWORD PTR [ebp-0x30],eax
1005d1c5:	push   edi
1005d1c6:	lea    eax,[ebp+0x8]
1005d1c9:	push   eax
1005d1ca:	lea    eax,[ebp-0x10]
1005d1cd:	push   eax
1005d1ce:	call   0x1005d0ef
1005d1d3:	pop    ecx
1005d1d4:	pop    ecx
1005d1d5:	lea    eax,[ebp-0x2c]
1005d1d8:	push   eax
1005d1d9:	push   0x0
1005d1db:	push   0x11
1005d1dd:	sub    esp,0xc
1005d1e0:	lea    esi,[ebp-0x10]
1005d1e3:	mov    edi,esp
1005d1e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1005d1e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1005d1e7:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
1005d1e9:	call   0x1005e4f1
1005d1ee:	mov    esi,DWORD PTR [ebp-0x30]
1005d1f1:	mov    DWORD PTR [ebx+0x8],eax
1005d1f4:	movsx  eax,BYTE PTR [ebp-0x2a]
1005d1f8:	mov    DWORD PTR [ebx],eax
1005d1fa:	movsx  eax,WORD PTR [ebp-0x2c]
1005d1fe:	mov    DWORD PTR [ebx+0x4],eax
1005d201:	lea    eax,[ebp-0x28]
1005d204:	push   eax
1005d205:	push   DWORD PTR [ebp+0x18]
1005d208:	push   esi
1005d209:	call   0x10046c89
1005d20e:	add    esp,0x24
1005d211:	test   eax,eax
1005d213:	je     0x1005d224
1005d215:	xor    eax,eax
1005d217:	push   eax
1005d218:	push   eax
1005d219:	push   eax
1005d21a:	push   eax
1005d21b:	push   eax
1005d21c:	call   0x10043380
1005d221:	add    esp,0x14
1005d224:	mov    ecx,DWORD PTR [ebp-0x4]
1005d227:	pop    edi
1005d228:	mov    DWORD PTR [ebx+0xc],esi
1005d22b:	pop    esi
1005d22c:	mov    eax,ebx
1005d22e:	xor    ecx,ebp
1005d230:	pop    ebx
1005d231:	call   0x10042f87
1005d236:	leave  
1005d237:	ret    
1005d238:	int3   
1005d239:	int3   
1005d23a:	int3   
1005d23b:	int3   
1005d23c:	int3   
1005d23d:	int3   
1005d23e:	int3   
1005d23f:	int3   
1005d240:	push   edi
1005d241:	push   esi
1005d242:	push   ebp
1005d243:	xor    edi,edi
1005d245:	xor    ebp,ebp
1005d247:	mov    eax,DWORD PTR [esp+0x14]
1005d24b:	or     eax,eax
1005d24d:	jge    0x1005d264
1005d24f:	inc    edi
1005d250:	inc    ebp
1005d251:	mov    edx,DWORD PTR [esp+0x10]
1005d255:	neg    eax
1005d257:	neg    edx
1005d259:	sbb    eax,0x0
1005d25c:	mov    DWORD PTR [esp+0x14],eax
1005d260:	mov    DWORD PTR [esp+0x10],edx
1005d264:	mov    eax,DWORD PTR [esp+0x1c]
1005d268:	or     eax,eax
1005d26a:	jge    0x1005d280
1005d26c:	inc    edi
1005d26d:	mov    edx,DWORD PTR [esp+0x18]
1005d271:	neg    eax
1005d273:	neg    edx
1005d275:	sbb    eax,0x0
1005d278:	mov    DWORD PTR [esp+0x1c],eax
1005d27c:	mov    DWORD PTR [esp+0x18],edx
1005d280:	or     eax,eax
1005d282:	jne    0x1005d2ac
1005d284:	mov    ecx,DWORD PTR [esp+0x18]
1005d288:	mov    eax,DWORD PTR [esp+0x14]
1005d28c:	xor    edx,edx
1005d28e:	div    ecx
1005d290:	mov    ebx,eax
1005d292:	mov    eax,DWORD PTR [esp+0x10]
1005d296:	div    ecx
1005d298:	mov    esi,eax
1005d29a:	mov    eax,ebx
1005d29c:	mul    DWORD PTR [esp+0x18]
1005d2a0:	mov    ecx,eax
1005d2a2:	mov    eax,esi
1005d2a4:	mul    DWORD PTR [esp+0x18]
1005d2a8:	add    edx,ecx
1005d2aa:	jmp    0x1005d2f3
1005d2ac:	mov    ebx,eax
1005d2ae:	mov    ecx,DWORD PTR [esp+0x18]
1005d2b2:	mov    edx,DWORD PTR [esp+0x14]
1005d2b6:	mov    eax,DWORD PTR [esp+0x10]
1005d2ba:	shr    ebx,1
1005d2bc:	rcr    ecx,1
1005d2be:	shr    edx,1
1005d2c0:	rcr    eax,1
1005d2c2:	or     ebx,ebx
1005d2c4:	jne    0x1005d2ba
1005d2c6:	div    ecx
1005d2c8:	mov    esi,eax
1005d2ca:	mul    DWORD PTR [esp+0x1c]
1005d2ce:	mov    ecx,eax
1005d2d0:	mov    eax,DWORD PTR [esp+0x18]
1005d2d4:	mul    esi
1005d2d6:	add    edx,ecx
1005d2d8:	jb     0x1005d2e8
1005d2da:	cmp    edx,DWORD PTR [esp+0x14]
1005d2de:	ja     0x1005d2e8
1005d2e0:	jb     0x1005d2f1
1005d2e2:	cmp    eax,DWORD PTR [esp+0x10]
1005d2e6:	jbe    0x1005d2f1
1005d2e8:	dec    esi
1005d2e9:	sub    eax,DWORD PTR [esp+0x18]
1005d2ed:	sbb    edx,DWORD PTR [esp+0x1c]
1005d2f1:	xor    ebx,ebx
1005d2f3:	sub    eax,DWORD PTR [esp+0x10]
1005d2f7:	sbb    edx,DWORD PTR [esp+0x14]
1005d2fb:	dec    ebp
1005d2fc:	jns    0x1005d305
1005d2fe:	neg    edx
1005d300:	neg    eax
1005d302:	sbb    edx,0x0
1005d305:	mov    ecx,edx
1005d307:	mov    edx,ebx
1005d309:	mov    ebx,ecx
1005d30b:	mov    ecx,eax
1005d30d:	mov    eax,esi
1005d30f:	dec    edi
1005d310:	jne    0x1005d319
1005d312:	neg    edx
1005d314:	neg    eax
1005d316:	sbb    edx,0x0
1005d319:	pop    ebp
1005d31a:	pop    esi
1005d31b:	pop    edi
1005d31c:	ret    0x10
1005d31f:	int3   
1005d320:	cmp    cl,0x40
1005d323:	jae    0x1005d33a
1005d325:	cmp    cl,0x20
1005d328:	jae    0x1005d330
1005d32a:	shrd   eax,edx,cl
1005d32d:	shr    edx,cl
1005d32f:	ret    
1005d330:	mov    eax,edx
1005d332:	xor    edx,edx
1005d334:	and    cl,0x1f
1005d337:	shr    eax,cl
1005d339:	ret    
1005d33a:	xor    eax,eax
1005d33c:	xor    edx,edx
1005d33e:	ret    
1005d33f:	push   ebp
1005d340:	mov    ebp,esp
1005d342:	mov    eax,DWORD PTR [ebp+0x10]
1005d345:	mov    ecx,DWORD PTR [ebp+0xc]
1005d348:	and    eax,0xfff7ffff
1005d34d:	and    ecx,eax
1005d34f:	test   ecx,0xfcf0fce0
1005d355:	push   esi
1005d356:	je     0x1005d389
1005d358:	push   edi
1005d359:	mov    edi,DWORD PTR [ebp+0x8]
1005d35c:	xor    esi,esi
1005d35e:	cmp    edi,esi
1005d360:	je     0x1005d36d
1005d362:	push   esi
1005d363:	push   esi
1005d364:	call   0x1005eee7
1005d369:	pop    ecx
1005d36a:	pop    ecx
1005d36b:	mov    DWORD PTR [edi],eax
1005d36d:	call   0x10046c45
1005d372:	push   0x16
1005d374:	pop    edi
1005d375:	push   esi
1005d376:	push   esi
1005d377:	push   esi
1005d378:	push   esi
1005d379:	push   esi
1005d37a:	mov    DWORD PTR [eax],edi
1005d37c:	call   0x1004347c
1005d381:	add    esp,0x14
1005d384:	mov    eax,edi
1005d386:	pop    edi
1005d387:	jmp    0x1005d3a6
1005d389:	mov    esi,DWORD PTR [ebp+0x8]
1005d38c:	test   esi,esi
1005d38e:	push   eax
1005d38f:	push   DWORD PTR [ebp+0xc]
1005d392:	je     0x1005d39d
1005d394:	call   0x1005eee7
1005d399:	mov    DWORD PTR [esi],eax
1005d39b:	jmp    0x1005d3a2
1005d39d:	call   0x1005eee7
1005d3a2:	pop    ecx
1005d3a3:	pop    ecx
1005d3a4:	xor    eax,eax
1005d3a6:	pop    esi
1005d3a7:	pop    ebp
1005d3a8:	ret    
1005d3a9:	push   ebp
1005d3aa:	mov    ebp,esp
1005d3ac:	sub    esp,0x2c
1005d3af:	mov    eax,DWORD PTR [ebp+0x8]
1005d3b2:	movzx  ecx,WORD PTR [eax+0xa]
1005d3b6:	push   ebx
1005d3b7:	mov    ebx,ecx
1005d3b9:	and    ecx,0x8000
1005d3bf:	mov    DWORD PTR [ebp-0x14],ecx
1005d3c2:	mov    ecx,DWORD PTR [eax+0x6]
1005d3c5:	mov    DWORD PTR [ebp-0x20],ecx
1005d3c8:	mov    ecx,DWORD PTR [eax+0x2]
1005d3cb:	movzx  eax,WORD PTR [eax]
1005d3ce:	and    ebx,0x7fff
1005d3d4:	sub    ebx,0x3fff
1005d3da:	shl    eax,0x10
1005d3dd:	cmp    ebx,0xffffc001
1005d3e3:	push   edi
1005d3e4:	mov    DWORD PTR [ebp-0x1c],ecx
1005d3e7:	mov    DWORD PTR [ebp-0x18],eax
1005d3ea:	jne    0x1005d413
1005d3ec:	xor    ebx,ebx
1005d3ee:	xor    eax,eax
1005d3f0:	cmp    DWORD PTR [ebp+eax*4-0x20],ebx
1005d3f4:	jne    0x1005d403
1005d3f6:	inc    eax
1005d3f7:	cmp    eax,0x3
1005d3fa:	jl     0x1005d3f0
1005d3fc:	xor    eax,eax
1005d3fe:	jmp    0x1005d8a8
1005d403:	xor    eax,eax
1005d405:	lea    edi,[ebp-0x20]
1005d408:	stos   DWORD PTR es:[edi],eax
1005d409:	stos   DWORD PTR es:[edi],eax
1005d40a:	push   0x2
1005d40c:	stos   DWORD PTR es:[edi],eax
1005d40d:	pop    eax
1005d40e:	jmp    0x1005d8a8
1005d413:	and    DWORD PTR [ebp+0x8],0x0
1005d417:	push   esi
1005d418:	lea    esi,[ebp-0x20]
1005d41b:	lea    edi,[ebp-0x2c]
1005d41e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1005d41f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1005d420:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1005d421:	mov    esi,DWORD PTR ds:0x1007f1f8
1005d427:	dec    esi
1005d428:	lea    ecx,[esi+0x1]
1005d42b:	mov    eax,ecx
1005d42d:	cdq    
1005d42e:	and    edx,0x1f
1005d431:	add    eax,edx
1005d433:	sar    eax,0x5
1005d436:	mov    edx,ecx
1005d438:	and    edx,0x8000001f
1005d43e:	mov    DWORD PTR [ebp-0x10],ebx
1005d441:	mov    DWORD PTR [ebp-0xc],eax
1005d444:	jns    0x1005d44b
1005d446:	dec    edx
1005d447:	or     edx,0xffffffe0
1005d44a:	inc    edx
1005d44b:	lea    edi,[ebp+eax*4-0x20]
1005d44f:	push   0x1f
1005d451:	xor    eax,eax
1005d453:	pop    ecx
1005d454:	sub    ecx,edx
1005d456:	inc    eax
1005d457:	shl    eax,cl
1005d459:	mov    DWORD PTR [ebp-0x8],ecx
1005d45c:	test   DWORD PTR [edi],eax
1005d45e:	je     0x1005d4f1
1005d464:	mov    eax,DWORD PTR [ebp-0xc]
1005d467:	or     edx,0xffffffff
1005d46a:	shl    edx,cl
1005d46c:	not    edx
1005d46e:	test   DWORD PTR [ebp+eax*4-0x20],edx
1005d472:	jmp    0x1005d479
1005d474:	cmp    DWORD PTR [ebp+eax*4-0x20],0x0
1005d479:	jne    0x1005d483
1005d47b:	inc    eax
1005d47c:	cmp    eax,0x3
1005d47f:	jl     0x1005d474
1005d481:	jmp    0x1005d4f1
1005d483:	mov    eax,esi
1005d485:	cdq    
1005d486:	push   0x1f
1005d488:	pop    ecx
1005d489:	and    edx,ecx
1005d48b:	add    eax,edx
1005d48d:	sar    eax,0x5
1005d490:	and    esi,0x8000001f
1005d496:	jns    0x1005d49d
1005d498:	dec    esi
1005d499:	or     esi,0xffffffe0
1005d49c:	inc    esi
1005d49d:	and    DWORD PTR [ebp-0x4],0x0
1005d4a1:	sub    ecx,esi
1005d4a3:	xor    edx,edx
1005d4a5:	inc    edx
1005d4a6:	shl    edx,cl
1005d4a8:	lea    ecx,[ebp+eax*4-0x20]
1005d4ac:	mov    esi,DWORD PTR [ecx]
1005d4ae:	add    esi,edx
1005d4b0:	mov    DWORD PTR [ebp+0x8],esi
1005d4b3:	mov    esi,DWORD PTR [ecx]
1005d4b5:	cmp    DWORD PTR [ebp+0x8],esi
1005d4b8:	jb     0x1005d4dc
1005d4ba:	cmp    DWORD PTR [ebp+0x8],edx
1005d4bd:	jmp    0x1005d4da
1005d4bf:	test   ecx,ecx
1005d4c1:	je     0x1005d4ee
1005d4c3:	and    DWORD PTR [ebp-0x4],0x0
1005d4c7:	lea    ecx,[ebp+eax*4-0x20]
1005d4cb:	mov    edx,DWORD PTR [ecx]
1005d4cd:	lea    esi,[edx+0x1]
1005d4d0:	cmp    esi,edx
1005d4d2:	mov    DWORD PTR [ebp+0x8],esi
1005d4d5:	jb     0x1005d4dc
1005d4d7:	cmp    esi,0x1
1005d4da:	jae    0x1005d4e3
1005d4dc:	mov    DWORD PTR [ebp-0x4],0x1
1005d4e3:	dec    eax
1005d4e4:	mov    edx,DWORD PTR [ebp+0x8]
1005d4e7:	mov    DWORD PTR [ecx],edx
1005d4e9:	mov    ecx,DWORD PTR [ebp-0x4]
1005d4ec:	jns    0x1005d4bf
1005d4ee:	mov    DWORD PTR [ebp+0x8],ecx
1005d4f1:	mov    ecx,DWORD PTR [ebp-0x8]
1005d4f4:	or     eax,0xffffffff
1005d4f7:	shl    eax,cl
1005d4f9:	and    DWORD PTR [edi],eax
1005d4fb:	mov    eax,DWORD PTR [ebp-0xc]
1005d4fe:	inc    eax
1005d4ff:	cmp    eax,0x3
1005d502:	jge    0x1005d511
1005d504:	push   0x3
1005d506:	pop    ecx
1005d507:	lea    edi,[ebp+eax*4-0x20]
1005d50b:	sub    ecx,eax
1005d50d:	xor    eax,eax
1005d50f:	rep stos DWORD PTR es:[edi],eax
1005d511:	cmp    DWORD PTR [ebp+0x8],0x0
1005d515:	je     0x1005d518
1005d517:	inc    ebx
1005d518:	mov    eax,ds:0x1007f1f4
1005d51d:	mov    ecx,eax
1005d51f:	sub    ecx,DWORD PTR ds:0x1007f1f8
1005d525:	cmp    ebx,ecx
1005d527:	jge    0x1005d536
1005d529:	xor    eax,eax
1005d52b:	lea    edi,[ebp-0x20]
1005d52e:	stos   DWORD PTR es:[edi],eax
1005d52f:	stos   DWORD PTR es:[edi],eax
1005d530:	stos   DWORD PTR es:[edi],eax
1005d531:	jmp    0x1005d743
1005d536:	cmp    ebx,eax
1005d538:	jg     0x1005d74d
1005d53e:	sub    eax,DWORD PTR [ebp-0x10]
1005d541:	lea    esi,[ebp-0x2c]
1005d544:	mov    ecx,eax
1005d546:	lea    edi,[ebp-0x20]
1005d549:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1005d54a:	cdq    
1005d54b:	and    edx,0x1f
1005d54e:	add    eax,edx
1005d550:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1005d551:	mov    edx,ecx
1005d553:	sar    eax,0x5
1005d556:	and    edx,0x8000001f
1005d55c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1005d55d:	jns    0x1005d564
1005d55f:	dec    edx
1005d560:	or     edx,0xffffffe0
1005d563:	inc    edx
1005d564:	and    DWORD PTR [ebp-0xc],0x0
1005d568:	and    DWORD PTR [ebp+0x8],0x0
1005d56c:	or     edi,0xffffffff
1005d56f:	mov    ecx,edx
1005d571:	shl    edi,cl
1005d573:	mov    DWORD PTR [ebp-0x4],0x20
1005d57a:	sub    DWORD PTR [ebp-0x4],edx
1005d57d:	not    edi
1005d57f:	mov    ebx,DWORD PTR [ebp+0x8]
1005d582:	lea    ebx,[ebp+ebx*4-0x20]
1005d586:	mov    esi,DWORD PTR [ebx]
1005d588:	mov    ecx,esi
1005d58a:	and    ecx,edi
1005d58c:	mov    DWORD PTR [ebp-0x10],ecx
1005d58f:	mov    ecx,edx
1005d591:	shr    esi,cl
1005d593:	mov    ecx,DWORD PTR [ebp-0x4]
1005d596:	or     esi,DWORD PTR [ebp-0xc]
1005d599:	mov    DWORD PTR [ebx],esi
1005d59b:	mov    esi,DWORD PTR [ebp-0x10]
1005d59e:	shl    esi,cl
1005d5a0:	inc    DWORD PTR [ebp+0x8]
1005d5a3:	cmp    DWORD PTR [ebp+0x8],0x3
1005d5a7:	mov    DWORD PTR [ebp-0xc],esi
1005d5aa:	jl     0x1005d57f
1005d5ac:	mov    esi,eax
1005d5ae:	push   0x2
1005d5b0:	shl    esi,0x2
1005d5b3:	lea    ecx,[ebp-0x18]
1005d5b6:	pop    edx
1005d5b7:	sub    ecx,esi
1005d5b9:	cmp    edx,eax
1005d5bb:	jl     0x1005d5c5
1005d5bd:	mov    esi,DWORD PTR [ecx]
1005d5bf:	mov    DWORD PTR [ebp+edx*4-0x20],esi
1005d5c3:	jmp    0x1005d5ca
1005d5c5:	and    DWORD PTR [ebp+edx*4-0x20],0x0
1005d5ca:	dec    edx
1005d5cb:	sub    ecx,0x4
1005d5ce:	test   edx,edx
1005d5d0:	jge    0x1005d5b9
1005d5d2:	mov    esi,DWORD PTR ds:0x1007f1f8
1005d5d8:	dec    esi
1005d5d9:	lea    ecx,[esi+0x1]
1005d5dc:	mov    eax,ecx
1005d5de:	cdq    
1005d5df:	and    edx,0x1f
1005d5e2:	add    eax,edx
1005d5e4:	sar    eax,0x5
1005d5e7:	mov    edx,ecx
1005d5e9:	and    edx,0x8000001f
1005d5ef:	mov    DWORD PTR [ebp-0xc],eax
1005d5f2:	jns    0x1005d5f9
1005d5f4:	dec    edx
1005d5f5:	or     edx,0xffffffe0
1005d5f8:	inc    edx
1005d5f9:	push   0x1f
1005d5fb:	pop    ecx
1005d5fc:	sub    ecx,edx
1005d5fe:	xor    edx,edx
1005d600:	inc    edx
1005d601:	shl    edx,cl
1005d603:	lea    ebx,[ebp+eax*4-0x20]
1005d607:	mov    DWORD PTR [ebp-0x10],ecx
1005d60a:	test   DWORD PTR [ebx],edx
1005d60c:	je     0x1005d694
1005d612:	or     edx,0xffffffff
1005d615:	shl    edx,cl
1005d617:	not    edx
1005d619:	test   DWORD PTR [ebp+eax*4-0x20],edx
1005d61d:	jmp    0x1005d624
1005d61f:	cmp    DWORD PTR [ebp+eax*4-0x20],0x0
1005d624:	jne    0x1005d62e
1005d626:	inc    eax
1005d627:	cmp    eax,0x3
1005d62a:	jl     0x1005d61f
1005d62c:	jmp    0x1005d694
1005d62e:	mov    eax,esi
1005d630:	cdq    
1005d631:	push   0x1f
1005d633:	pop    ecx
1005d634:	and    edx,ecx
1005d636:	add    eax,edx
1005d638:	sar    eax,0x5
1005d63b:	and    esi,0x8000001f
1005d641:	jns    0x1005d648
1005d643:	dec    esi
1005d644:	or     esi,0xffffffe0
1005d647:	inc    esi
1005d648:	and    DWORD PTR [ebp+0x8],0x0
1005d64c:	xor    edx,edx
1005d64e:	sub    ecx,esi
1005d650:	inc    edx
1005d651:	shl    edx,cl
1005d653:	lea    ecx,[ebp+eax*4-0x20]
1005d657:	mov    esi,DWORD PTR [ecx]
1005d659:	lea    edi,[esi+edx*1]
1005d65c:	cmp    edi,esi
1005d65e:	jb     0x1005d664
1005d660:	cmp    edi,edx
1005d662:	jae    0x1005d66b
1005d664:	mov    DWORD PTR [ebp+0x8],0x1
1005d66b:	mov    DWORD PTR [ecx],edi
1005d66d:	mov    ecx,DWORD PTR [ebp+0x8]
1005d670:	jmp    0x1005d691
1005d672:	test   ecx,ecx
1005d674:	je     0x1005d694
1005d676:	lea    ecx,[ebp+eax*4-0x20]
1005d67a:	mov    edx,DWORD PTR [ecx]
1005d67c:	lea    esi,[edx+0x1]
1005d67f:	xor    edi,edi
1005d681:	cmp    esi,edx
1005d683:	jb     0x1005d68a
1005d685:	cmp    esi,0x1
1005d688:	jae    0x1005d68d
1005d68a:	xor    edi,edi
1005d68c:	inc    edi
1005d68d:	mov    DWORD PTR [ecx],esi
1005d68f:	mov    ecx,edi
1005d691:	dec    eax
1005d692:	jns    0x1005d672
1005d694:	mov    ecx,DWORD PTR [ebp-0x10]
1005d697:	or     eax,0xffffffff
1005d69a:	shl    eax,cl
1005d69c:	and    DWORD PTR [ebx],eax
1005d69e:	mov    eax,DWORD PTR [ebp-0xc]
1005d6a1:	inc    eax
1005d6a2:	cmp    eax,0x3
1005d6a5:	jge    0x1005d6b4
1005d6a7:	push   0x3
1005d6a9:	pop    ecx
1005d6aa:	lea    edi,[ebp+eax*4-0x20]
1005d6ae:	sub    ecx,eax
1005d6b0:	xor    eax,eax
1005d6b2:	rep stos DWORD PTR es:[edi],eax
1005d6b4:	mov    ecx,DWORD PTR ds:0x1007f1fc
1005d6ba:	inc    ecx
1005d6bb:	mov    eax,ecx
1005d6bd:	cdq    
1005d6be:	and    edx,0x1f
1005d6c1:	add    eax,edx
1005d6c3:	mov    edx,ecx
1005d6c5:	sar    eax,0x5
1005d6c8:	and    edx,0x8000001f
1005d6ce:	jns    0x1005d6d5
1005d6d0:	dec    edx
1005d6d1:	or     edx,0xffffffe0
1005d6d4:	inc    edx
1005d6d5:	and    DWORD PTR [ebp-0xc],0x0
1005d6d9:	and    DWORD PTR [ebp+0x8],0x0
1005d6dd:	or     edi,0xffffffff
1005d6e0:	mov    ecx,edx
1005d6e2:	shl    edi,cl
1005d6e4:	mov    DWORD PTR [ebp-0x4],0x20
1005d6eb:	sub    DWORD PTR [ebp-0x4],edx
1005d6ee:	not    edi
1005d6f0:	mov    ebx,DWORD PTR [ebp+0x8]
1005d6f3:	lea    ebx,[ebp+ebx*4-0x20]
1005d6f7:	mov    esi,DWORD PTR [ebx]
1005d6f9:	mov    ecx,esi
1005d6fb:	and    ecx,edi
1005d6fd:	mov    DWORD PTR [ebp-0x10],ecx
1005d700:	mov    ecx,edx
1005d702:	shr    esi,cl
1005d704:	mov    ecx,DWORD PTR [ebp-0x4]
1005d707:	or     esi,DWORD PTR [ebp-0xc]
1005d70a:	mov    DWORD PTR [ebx],esi
1005d70c:	mov    esi,DWORD PTR [ebp-0x10]
1005d70f:	shl    esi,cl
1005d711:	inc    DWORD PTR [ebp+0x8]
1005d714:	cmp    DWORD PTR [ebp+0x8],0x3
1005d718:	mov    DWORD PTR [ebp-0xc],esi
1005d71b:	jl     0x1005d6f0
1005d71d:	mov    esi,eax
1005d71f:	push   0x2
1005d721:	shl    esi,0x2
1005d724:	lea    ecx,[ebp-0x18]
1005d727:	pop    edx
1005d728:	sub    ecx,esi
1005d72a:	cmp    edx,eax
1005d72c:	jl     0x1005d736
1005d72e:	mov    esi,DWORD PTR [ecx]
1005d730:	mov    DWORD PTR [ebp+edx*4-0x20],esi
1005d734:	jmp    0x1005d73b
1005d736:	and    DWORD PTR [ebp+edx*4-0x20],0x0
1005d73b:	dec    edx
1005d73c:	sub    ecx,0x4
1005d73f:	test   edx,edx
1005d741:	jge    0x1005d72a
1005d743:	push   0x2
1005d745:	xor    ebx,ebx
1005d747:	pop    eax
1005d748:	jmp    0x1005d8a7
1005d74d:	cmp    ebx,DWORD PTR ds:0x1007f1f0
1005d753:	mov    ecx,DWORD PTR ds:0x1007f1fc
1005d759:	jl     0x1005d80c
1005d75f:	xor    eax,eax
1005d761:	lea    edi,[ebp-0x20]
1005d764:	stos   DWORD PTR es:[edi],eax
1005d765:	stos   DWORD PTR es:[edi],eax
1005d766:	stos   DWORD PTR es:[edi],eax
1005d767:	or     DWORD PTR [ebp-0x20],0x80000000
1005d76e:	mov    eax,ecx
1005d770:	cdq    
1005d771:	and    edx,0x1f
1005d774:	add    eax,edx
1005d776:	mov    edx,ecx
1005d778:	sar    eax,0x5
1005d77b:	and    edx,0x8000001f
1005d781:	jns    0x1005d788
1005d783:	dec    edx
1005d784:	or     edx,0xffffffe0
1005d787:	inc    edx
1005d788:	and    DWORD PTR [ebp-0xc],0x0
1005d78c:	and    DWORD PTR [ebp+0x8],0x0
1005d790:	or     edi,0xffffffff
1005d793:	mov    ecx,edx
1005d795:	shl    edi,cl
1005d797:	mov    DWORD PTR [ebp-0x4],0x20
1005d79e:	sub    DWORD PTR [ebp-0x4],edx
1005d7a1:	not    edi
1005d7a3:	mov    ebx,DWORD PTR [ebp+0x8]
1005d7a6:	lea    ebx,[ebp+ebx*4-0x20]
1005d7aa:	mov    esi,DWORD PTR [ebx]
1005d7ac:	mov    ecx,esi
1005d7ae:	and    ecx,edi
1005d7b0:	mov    DWORD PTR [ebp-0x10],ecx
1005d7b3:	mov    ecx,edx
1005d7b5:	shr    esi,cl
1005d7b7:	mov    ecx,DWORD PTR [ebp-0x4]
1005d7ba:	or     esi,DWORD PTR [ebp-0xc]
1005d7bd:	mov    DWORD PTR [ebx],esi
1005d7bf:	mov    esi,DWORD PTR [ebp-0x10]
1005d7c2:	shl    esi,cl
1005d7c4:	inc    DWORD PTR [ebp+0x8]
1005d7c7:	cmp    DWORD PTR [ebp+0x8],0x3
1005d7cb:	mov    DWORD PTR [ebp-0xc],esi
1005d7ce:	jl     0x1005d7a3
1005d7d0:	mov    esi,eax
1005d7d2:	push   0x2
1005d7d4:	shl    esi,0x2
1005d7d7:	lea    ecx,[ebp-0x18]
1005d7da:	pop    edx
1005d7db:	sub    ecx,esi
1005d7dd:	cmp    edx,eax
1005d7df:	jl     0x1005d7e9
1005d7e1:	mov    esi,DWORD PTR [ecx]
1005d7e3:	mov    DWORD PTR [ebp+edx*4-0x20],esi
1005d7e7:	jmp    0x1005d7ee
1005d7e9:	and    DWORD PTR [ebp+edx*4-0x20],0x0
1005d7ee:	dec    edx
1005d7ef:	sub    ecx,0x4
1005d7f2:	test   edx,edx
1005d7f4:	jge    0x1005d7dd
1005d7f6:	mov    eax,ds:0x1007f1f0
1005d7fb:	mov    ecx,DWORD PTR ds:0x1007f204
1005d801:	lea    ebx,[ecx+eax*1]
1005d804:	xor    eax,eax
1005d806:	inc    eax
1005d807:	jmp    0x1005d8a7
1005d80c:	mov    eax,ds:0x1007f204
1005d811:	and    DWORD PTR [ebp-0x20],0x7fffffff
1005d818:	add    ebx,eax
1005d81a:	mov    eax,ecx
1005d81c:	cdq    
1005d81d:	and    edx,0x1f
1005d820:	add    eax,edx
1005d822:	mov    edx,ecx
1005d824:	sar    eax,0x5
1005d827:	and    edx,0x8000001f
1005d82d:	jns    0x1005d834
1005d82f:	dec    edx
1005d830:	or     edx,0xffffffe0
1005d833:	inc    edx
1005d834:	and    DWORD PTR [ebp-0xc],0x0
1005d838:	and    DWORD PTR [ebp+0x8],0x0
1005d83c:	or     esi,0xffffffff
1005d83f:	mov    ecx,edx
1005d841:	shl    esi,cl
1005d843:	mov    DWORD PTR [ebp-0x4],0x20
1005d84a:	sub    DWORD PTR [ebp-0x4],edx
1005d84d:	not    esi
1005d84f:	mov    ecx,DWORD PTR [ebp+0x8]
1005d852:	mov    edi,DWORD PTR [ebp+ecx*4-0x20]
1005d856:	mov    ecx,edi
1005d858:	and    ecx,esi
1005d85a:	mov    DWORD PTR [ebp-0x10],ecx
1005d85d:	mov    ecx,edx
1005d85f:	shr    edi,cl
1005d861:	mov    ecx,DWORD PTR [ebp+0x8]
1005d864:	or     edi,DWORD PTR [ebp-0xc]
1005d867:	mov    DWORD PTR [ebp+ecx*4-0x20],edi
1005d86b:	mov    edi,DWORD PTR [ebp-0x10]
1005d86e:	mov    ecx,DWORD PTR [ebp-0x4]
1005d871:	shl    edi,cl
1005d873:	inc    DWORD PTR [ebp+0x8]
1005d876:	cmp    DWORD PTR [ebp+0x8],0x3
1005d87a:	mov    DWORD PTR [ebp-0xc],edi
1005d87d:	jl     0x1005d84f
1005d87f:	mov    esi,eax
1005d881:	push   0x2
1005d883:	shl    esi,0x2
1005d886:	lea    ecx,[ebp-0x18]
1005d889:	pop    edx
1005d88a:	sub    ecx,esi
1005d88c:	cmp    edx,eax
1005d88e:	jl     0x1005d898
1005d890:	mov    esi,DWORD PTR [ecx]
1005d892:	mov    DWORD PTR [ebp+edx*4-0x20],esi
1005d896:	jmp    0x1005d89d
1005d898:	and    DWORD PTR [ebp+edx*4-0x20],0x0
1005d89d:	dec    edx
1005d89e:	sub    ecx,0x4
1005d8a1:	test   edx,edx
1005d8a3:	jge    0x1005d88c
1005d8a5:	xor    eax,eax
1005d8a7:	pop    esi
1005d8a8:	push   0x1f
1005d8aa:	pop    ecx
1005d8ab:	sub    ecx,DWORD PTR ds:0x1007f1fc
1005d8b1:	shl    ebx,cl
1005d8b3:	mov    ecx,DWORD PTR [ebp-0x14]
1005d8b6:	neg    ecx
1005d8b8:	sbb    ecx,ecx
1005d8ba:	and    ecx,0x80000000
1005d8c0:	or     ebx,ecx
1005d8c2:	mov    ecx,DWORD PTR ds:0x1007f200
1005d8c8:	or     ebx,DWORD PTR [ebp-0x20]
1005d8cb:	cmp    ecx,0x40
1005d8ce:	jne    0x1005d8dd
1005d8d0:	mov    ecx,DWORD PTR [ebp+0xc]
1005d8d3:	mov    edx,DWORD PTR [ebp-0x1c]
1005d8d6:	mov    DWORD PTR [ecx+0x4],ebx
1005d8d9:	mov    DWORD PTR [ecx],edx
1005d8db:	jmp    0x1005d8e7
1005d8dd:	cmp    ecx,0x20
1005d8e0:	jne    0x1005d8e7
1005d8e2:	mov    ecx,DWORD PTR [ebp+0xc]
1005d8e5:	mov    DWORD PTR [ecx],ebx
1005d8e7:	pop    edi
1005d8e8:	pop    ebx
1005d8e9:	leave  
1005d8ea:	ret    
1005d8eb:	push   ebp
1005d8ec:	mov    ebp,esp
1005d8ee:	sub    esp,0x2c
1005d8f1:	mov    eax,DWORD PTR [ebp+0x8]
1005d8f4:	movzx  ecx,WORD PTR [eax+0xa]
1005d8f8:	push   ebx
1005d8f9:	mov    ebx,ecx
1005d8fb:	and    ecx,0x8000
1005d901:	mov    DWORD PTR [ebp-0x14],ecx
1005d904:	mov    ecx,DWORD PTR [eax+0x6]
1005d907:	mov    DWORD PTR [ebp-0x20],ecx
1005d90a:	mov    ecx,DWORD PTR [eax+0x2]
1005d90d:	movzx  eax,WORD PTR [eax]
1005d910:	and    ebx,0x7fff
1005d916:	sub    ebx,0x3fff
1005d91c:	shl    eax,0x10
1005d91f:	cmp    ebx,0xffffc001
1005d925:	push   edi
1005d926:	mov    DWORD PTR [ebp-0x1c],ecx
1005d929:	mov    DWORD PTR [ebp-0x18],eax
1005d92c:	jne    0x1005d955
1005d92e:	xor    ebx,ebx
1005d930:	xor    eax,eax
1005d932:	cmp    DWORD PTR [ebp+eax*4-0x20],ebx
1005d936:	jne    0x1005d945
1005d938:	inc    eax
1005d939:	cmp    eax,0x3
1005d93c:	jl     0x1005d932
1005d93e:	xor    eax,eax
1005d940:	jmp    0x1005ddea
1005d945:	xor    eax,eax
1005d947:	lea    edi,[ebp-0x20]
1005d94a:	stos   DWORD PTR es:[edi],eax
1005d94b:	stos   DWORD PTR es:[edi],eax
1005d94c:	push   0x2
1005d94e:	stos   DWORD PTR es:[edi],eax
1005d94f:	pop    eax
1005d950:	jmp    0x1005ddea
1005d955:	and    DWORD PTR [ebp+0x8],0x0
1005d959:	push   esi
1005d95a:	lea    esi,[ebp-0x20]
1005d95d:	lea    edi,[ebp-0x2c]
1005d960:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1005d961:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1005d962:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1005d963:	mov    esi,DWORD PTR ds:0x1007f210
1005d969:	dec    esi
1005d96a:	lea    ecx,[esi+0x1]
1005d96d:	mov    eax,ecx
1005d96f:	cdq    
1005d970:	and    edx,0x1f
1005d973:	add    eax,edx
1005d975:	sar    eax,0x5
1005d978:	mov    edx,ecx
1005d97a:	and    edx,0x8000001f
1005d980:	mov    DWORD PTR [ebp-0x10],ebx
1005d983:	mov    DWORD PTR [ebp-0xc],eax
1005d986:	jns    0x1005d98d
1005d988:	dec    edx
1005d989:	or     edx,0xffffffe0
1005d98c:	inc    edx
1005d98d:	lea    edi,[ebp+eax*4-0x20]
1005d991:	push   0x1f
1005d993:	xor    eax,eax
1005d995:	pop    ecx
1005d996:	sub    ecx,edx
1005d998:	inc    eax
1005d999:	shl    eax,cl
1005d99b:	mov    DWORD PTR [ebp-0x8],ecx
1005d99e:	test   DWORD PTR [edi],eax
1005d9a0:	je     0x1005da33
1005d9a6:	mov    eax,DWORD PTR [ebp-0xc]
1005d9a9:	or     edx,0xffffffff
1005d9ac:	shl    edx,cl
1005d9ae:	not    edx
1005d9b0:	test   DWORD PTR [ebp+eax*4-0x20],edx
1005d9b4:	jmp    0x1005d9bb
1005d9b6:	cmp    DWORD PTR [ebp+eax*4-0x20],0x0
1005d9bb:	jne    0x1005d9c5
1005d9bd:	inc    eax
1005d9be:	cmp    eax,0x3
1005d9c1:	jl     0x1005d9b6
1005d9c3:	jmp    0x1005da33
1005d9c5:	mov    eax,esi
1005d9c7:	cdq    
1005d9c8:	push   0x1f
1005d9ca:	pop    ecx
1005d9cb:	and    edx,ecx
1005d9cd:	add    eax,edx
1005d9cf:	sar    eax,0x5
1005d9d2:	and    esi,0x8000001f
1005d9d8:	jns    0x1005d9df
1005d9da:	dec    esi
1005d9db:	or     esi,0xffffffe0
1005d9de:	inc    esi
1005d9df:	and    DWORD PTR [ebp-0x4],0x0
1005d9e3:	sub    ecx,esi
1005d9e5:	xor    edx,edx
1005d9e7:	inc    edx
1005d9e8:	shl    edx,cl
1005d9ea:	lea    ecx,[ebp+eax*4-0x20]
1005d9ee:	mov    esi,DWORD PTR [ecx]
1005d9f0:	add    esi,edx
1005d9f2:	mov    DWORD PTR [ebp+0x8],esi
1005d9f5:	mov    esi,DWORD PTR [ecx]
1005d9f7:	cmp    DWORD PTR [ebp+0x8],esi
1005d9fa:	jb     0x1005da1e
1005d9fc:	cmp    DWORD PTR [ebp+0x8],edx
1005d9ff:	jmp    0x1005da1c
1005da01:	test   ecx,ecx
1005da03:	je     0x1005da30
1005da05:	and    DWORD PTR [ebp-0x4],0x0
1005da09:	lea    ecx,[ebp+eax*4-0x20]
1005da0d:	mov    edx,DWORD PTR [ecx]
1005da0f:	lea    esi,[edx+0x1]
1005da12:	cmp    esi,edx
1005da14:	mov    DWORD PTR [ebp+0x8],esi
1005da17:	jb     0x1005da1e
1005da19:	cmp    esi,0x1
1005da1c:	jae    0x1005da25
1005da1e:	mov    DWORD PTR [ebp-0x4],0x1
1005da25:	dec    eax
1005da26:	mov    edx,DWORD PTR [ebp+0x8]
1005da29:	mov    DWORD PTR [ecx],edx
1005da2b:	mov    ecx,DWORD PTR [ebp-0x4]
1005da2e:	jns    0x1005da01
1005da30:	mov    DWORD PTR [ebp+0x8],ecx
1005da33:	mov    ecx,DWORD PTR [ebp-0x8]
1005da36:	or     eax,0xffffffff
1005da39:	shl    eax,cl
1005da3b:	and    DWORD PTR [edi],eax
1005da3d:	mov    eax,DWORD PTR [ebp-0xc]
1005da40:	inc    eax
1005da41:	cmp    eax,0x3
1005da44:	jge    0x1005da53
1005da46:	push   0x3
1005da48:	pop    ecx
1005da49:	lea    edi,[ebp+eax*4-0x20]
1005da4d:	sub    ecx,eax
1005da4f:	xor    eax,eax
1005da51:	rep stos DWORD PTR es:[edi],eax
1005da53:	cmp    DWORD PTR [ebp+0x8],0x0
1005da57:	je     0x1005da5a
1005da59:	inc    ebx
1005da5a:	mov    eax,ds:0x1007f20c
1005da5f:	mov    ecx,eax
1005da61:	sub    ecx,DWORD PTR ds:0x1007f210
1005da67:	cmp    ebx,ecx
1005da69:	jge    0x1005da78
1005da6b:	xor    eax,eax
1005da6d:	lea    edi,[ebp-0x20]
1005da70:	stos   DWORD PTR es:[edi],eax
1005da71:	stos   DWORD PTR es:[edi],eax
1005da72:	stos   DWORD PTR es:[edi],eax
1005da73:	jmp    0x1005dc85
1005da78:	cmp    ebx,eax
1005da7a:	jg     0x1005dc8f
1005da80:	sub    eax,DWORD PTR [ebp-0x10]
1005da83:	lea    esi,[ebp-0x2c]
1005da86:	mov    ecx,eax
1005da88:	lea    edi,[ebp-0x20]
1005da8b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1005da8c:	cdq    
1005da8d:	and    edx,0x1f
1005da90:	add    eax,edx
1005da92:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1005da93:	mov    edx,ecx
1005da95:	sar    eax,0x5
1005da98:	and    edx,0x8000001f
1005da9e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1005da9f:	jns    0x1005daa6
1005daa1:	dec    edx
1005daa2:	or     edx,0xffffffe0
1005daa5:	inc    edx
1005daa6:	and    DWORD PTR [ebp-0xc],0x0
1005daaa:	and    DWORD PTR [ebp+0x8],0x0
1005daae:	or     edi,0xffffffff
1005dab1:	mov    ecx,edx
1005dab3:	shl    edi,cl
1005dab5:	mov    DWORD PTR [ebp-0x4],0x20
1005dabc:	sub    DWORD PTR [ebp-0x4],edx
1005dabf:	not    edi
1005dac1:	mov    ebx,DWORD PTR [ebp+0x8]
1005dac4:	lea    ebx,[ebp+ebx*4-0x20]
1005dac8:	mov    esi,DWORD PTR [ebx]
1005daca:	mov    ecx,esi
1005dacc:	and    ecx,edi
1005dace:	mov    DWORD PTR [ebp-0x10],ecx
1005dad1:	mov    ecx,edx
1005dad3:	shr    esi,cl
1005dad5:	mov    ecx,DWORD PTR [ebp-0x4]
1005dad8:	or     esi,DWORD PTR [ebp-0xc]
1005dadb:	mov    DWORD PTR [ebx],esi
1005dadd:	mov    esi,DWORD PTR [ebp-0x10]
1005dae0:	shl    esi,cl
1005dae2:	inc    DWORD PTR [ebp+0x8]
1005dae5:	cmp    DWORD PTR [ebp+0x8],0x3
1005dae9:	mov    DWORD PTR [ebp-0xc],esi
1005daec:	jl     0x1005dac1
1005daee:	mov    esi,eax
1005daf0:	push   0x2
1005daf2:	shl    esi,0x2
1005daf5:	lea    ecx,[ebp-0x18]
1005daf8:	pop    edx
1005daf9:	sub    ecx,esi
1005dafb:	cmp    edx,eax
1005dafd:	jl     0x1005db07
1005daff:	mov    esi,DWORD PTR [ecx]
1005db01:	mov    DWORD PTR [ebp+edx*4-0x20],esi
1005db05:	jmp    0x1005db0c
1005db07:	and    DWORD PTR [ebp+edx*4-0x20],0x0
1005db0c:	dec    edx
1005db0d:	sub    ecx,0x4
1005db10:	test   edx,edx
1005db12:	jge    0x1005dafb
1005db14:	mov    esi,DWORD PTR ds:0x1007f210
1005db1a:	dec    esi
1005db1b:	lea    ecx,[esi+0x1]
1005db1e:	mov    eax,ecx
1005db20:	cdq    
1005db21:	and    edx,0x1f
1005db24:	add    eax,edx
1005db26:	sar    eax,0x5
1005db29:	mov    edx,ecx
1005db2b:	and    edx,0x8000001f
1005db31:	mov    DWORD PTR [ebp-0xc],eax
1005db34:	jns    0x1005db3b
1005db36:	dec    edx
1005db37:	or     edx,0xffffffe0
1005db3a:	inc    edx
1005db3b:	push   0x1f
1005db3d:	pop    ecx
1005db3e:	sub    ecx,edx
1005db40:	xor    edx,edx
1005db42:	inc    edx
1005db43:	shl    edx,cl
1005db45:	lea    ebx,[ebp+eax*4-0x20]
1005db49:	mov    DWORD PTR [ebp-0x10],ecx
1005db4c:	test   DWORD PTR [ebx],edx
1005db4e:	je     0x1005dbd6
1005db54:	or     edx,0xffffffff
1005db57:	shl    edx,cl
1005db59:	not    edx
1005db5b:	test   DWORD PTR [ebp+eax*4-0x20],edx
1005db5f:	jmp    0x1005db66
1005db61:	cmp    DWORD PTR [ebp+eax*4-0x20],0x0
1005db66:	jne    0x1005db70
1005db68:	inc    eax
1005db69:	cmp    eax,0x3
1005db6c:	jl     0x1005db61
1005db6e:	jmp    0x1005dbd6
1005db70:	mov    eax,esi
1005db72:	cdq    
1005db73:	push   0x1f
1005db75:	pop    ecx
1005db76:	and    edx,ecx
1005db78:	add    eax,edx
1005db7a:	sar    eax,0x5
1005db7d:	and    esi,0x8000001f
1005db83:	jns    0x1005db8a
1005db85:	dec    esi
1005db86:	or     esi,0xffffffe0
1005db89:	inc    esi
1005db8a:	and    DWORD PTR [ebp+0x8],0x0
1005db8e:	xor    edx,edx
1005db90:	sub    ecx,esi
1005db92:	inc    edx
1005db93:	shl    edx,cl
1005db95:	lea    ecx,[ebp+eax*4-0x20]
1005db99:	mov    esi,DWORD PTR [ecx]
1005db9b:	lea    edi,[esi+edx*1]
1005db9e:	cmp    edi,esi
1005dba0:	jb     0x1005dba6
1005dba2:	cmp    edi,edx
1005dba4:	jae    0x1005dbad
1005dba6:	mov    DWORD PTR [ebp+0x8],0x1
1005dbad:	mov    DWORD PTR [ecx],edi
1005dbaf:	mov    ecx,DWORD PTR [ebp+0x8]
1005dbb2:	jmp    0x1005dbd3
1005dbb4:	test   ecx,ecx
1005dbb6:	je     0x1005dbd6
1005dbb8:	lea    ecx,[ebp+eax*4-0x20]
1005dbbc:	mov    edx,DWORD PTR [ecx]
1005dbbe:	lea    esi,[edx+0x1]
1005dbc1:	xor    edi,edi
1005dbc3:	cmp    esi,edx
1005dbc5:	jb     0x1005dbcc
1005dbc7:	cmp    esi,0x1
1005dbca:	jae    0x1005dbcf
1005dbcc:	xor    edi,edi
1005dbce:	inc    edi
1005dbcf:	mov    DWORD PTR [ecx],esi
1005dbd1:	mov    ecx,edi
1005dbd3:	dec    eax
1005dbd4:	jns    0x1005dbb4
1005dbd6:	mov    ecx,DWORD PTR [ebp-0x10]
1005dbd9:	or     eax,0xffffffff
1005dbdc:	shl    eax,cl
1005dbde:	and    DWORD PTR [ebx],eax
1005dbe0:	mov    eax,DWORD PTR [ebp-0xc]
1005dbe3:	inc    eax
1005dbe4:	cmp    eax,0x3
1005dbe7:	jge    0x1005dbf6
1005dbe9:	push   0x3
1005dbeb:	pop    ecx
1005dbec:	lea    edi,[ebp+eax*4-0x20]
1005dbf0:	sub    ecx,eax
1005dbf2:	xor    eax,eax
1005dbf4:	rep stos DWORD PTR es:[edi],eax
1005dbf6:	mov    ecx,DWORD PTR ds:0x1007f214
1005dbfc:	inc    ecx
1005dbfd:	mov    eax,ecx
1005dbff:	cdq    
1005dc00:	and    edx,0x1f
1005dc03:	add    eax,edx
1005dc05:	mov    edx,ecx
1005dc07:	sar    eax,0x5
1005dc0a:	and    edx,0x8000001f
1005dc10:	jns    0x1005dc17
1005dc12:	dec    edx
1005dc13:	or     edx,0xffffffe0
1005dc16:	inc    edx
1005dc17:	and    DWORD PTR [ebp-0xc],0x0
1005dc1b:	and    DWORD PTR [ebp+0x8],0x0
1005dc1f:	or     edi,0xffffffff
1005dc22:	mov    ecx,edx
1005dc24:	shl    edi,cl
1005dc26:	mov    DWORD PTR [ebp-0x4],0x20
1005dc2d:	sub    DWORD PTR [ebp-0x4],edx
1005dc30:	not    edi
1005dc32:	mov    ebx,DWORD PTR [ebp+0x8]
1005dc35:	lea    ebx,[ebp+ebx*4-0x20]
1005dc39:	mov    esi,DWORD PTR [ebx]
1005dc3b:	mov    ecx,esi
1005dc3d:	and    ecx,edi
1005dc3f:	mov    DWORD PTR [ebp-0x10],ecx
1005dc42:	mov    ecx,edx
1005dc44:	shr    esi,cl
1005dc46:	mov    ecx,DWORD PTR [ebp-0x4]
1005dc49:	or     esi,DWORD PTR [ebp-0xc]
1005dc4c:	mov    DWORD PTR [ebx],esi
1005dc4e:	mov    esi,DWORD PTR [ebp-0x10]
1005dc51:	shl    esi,cl
1005dc53:	inc    DWORD PTR [ebp+0x8]
1005dc56:	cmp    DWORD PTR [ebp+0x8],0x3
1005dc5a:	mov    DWORD PTR [ebp-0xc],esi
1005dc5d:	jl     0x1005dc32
1005dc5f:	mov    esi,eax
1005dc61:	push   0x2
1005dc63:	shl    esi,0x2
1005dc66:	lea    ecx,[ebp-0x18]
1005dc69:	pop    edx
1005dc6a:	sub    ecx,esi
1005dc6c:	cmp    edx,eax
1005dc6e:	jl     0x1005dc78
1005dc70:	mov    esi,DWORD PTR [ecx]
1005dc72:	mov    DWORD PTR [ebp+edx*4-0x20],esi
1005dc76:	jmp    0x1005dc7d
1005dc78:	and    DWORD PTR [ebp+edx*4-0x20],0x0
1005dc7d:	dec    edx
1005dc7e:	sub    ecx,0x4
1005dc81:	test   edx,edx
1005dc83:	jge    0x1005dc6c
1005dc85:	push   0x2
1005dc87:	xor    ebx,ebx
1005dc89:	pop    eax
1005dc8a:	jmp    0x1005dde9
1005dc8f:	cmp    ebx,DWORD PTR ds:0x1007f208
1005dc95:	mov    ecx,DWORD PTR ds:0x1007f214
1005dc9b:	jl     0x1005dd4e
1005dca1:	xor    eax,eax
1005dca3:	lea    edi,[ebp-0x20]
1005dca6:	stos   DWORD PTR es:[edi],eax
1005dca7:	stos   DWORD PTR es:[edi],eax
1005dca8:	stos   DWORD PTR es:[edi],eax
1005dca9:	or     DWORD PTR [ebp-0x20],0x80000000
1005dcb0:	mov    eax,ecx
1005dcb2:	cdq    
1005dcb3:	and    edx,0x1f
1005dcb6:	add    eax,edx
1005dcb8:	mov    edx,ecx
1005dcba:	sar    eax,0x5
1005dcbd:	and    edx,0x8000001f
1005dcc3:	jns    0x1005dcca
1005dcc5:	dec    edx
1005dcc6:	or     edx,0xffffffe0
1005dcc9:	inc    edx
1005dcca:	and    DWORD PTR [ebp-0xc],0x0
1005dcce:	and    DWORD PTR [ebp+0x8],0x0
1005dcd2:	or     edi,0xffffffff
1005dcd5:	mov    ecx,edx
1005dcd7:	shl    edi,cl
1005dcd9:	mov    DWORD PTR [ebp-0x4],0x20
1005dce0:	sub    DWORD PTR [ebp-0x4],edx
1005dce3:	not    edi
1005dce5:	mov    ebx,DWORD PTR [ebp+0x8]
1005dce8:	lea    ebx,[ebp+ebx*4-0x20]
1005dcec:	mov    esi,DWORD PTR [ebx]
1005dcee:	mov    ecx,esi
1005dcf0:	and    ecx,edi
1005dcf2:	mov    DWORD PTR [ebp-0x10],ecx
1005dcf5:	mov    ecx,edx
1005dcf7:	shr    esi,cl
1005dcf9:	mov    ecx,DWORD PTR [ebp-0x4]
1005dcfc:	or     esi,DWORD PTR [ebp-0xc]
1005dcff:	mov    DWORD PTR [ebx],esi
1005dd01:	mov    esi,DWORD PTR [ebp-0x10]
1005dd04:	shl    esi,cl
1005dd06:	inc    DWORD PTR [ebp+0x8]
1005dd09:	cmp    DWORD PTR [ebp+0x8],0x3
1005dd0d:	mov    DWORD PTR [ebp-0xc],esi
1005dd10:	jl     0x1005dce5
1005dd12:	mov    esi,eax
1005dd14:	push   0x2
1005dd16:	shl    esi,0x2
1005dd19:	lea    ecx,[ebp-0x18]
1005dd1c:	pop    edx
1005dd1d:	sub    ecx,esi
1005dd1f:	cmp    edx,eax
1005dd21:	jl     0x1005dd2b
1005dd23:	mov    esi,DWORD PTR [ecx]
1005dd25:	mov    DWORD PTR [ebp+edx*4-0x20],esi
1005dd29:	jmp    0x1005dd30
1005dd2b:	and    DWORD PTR [ebp+edx*4-0x20],0x0
1005dd30:	dec    edx
1005dd31:	sub    ecx,0x4
1005dd34:	test   edx,edx
1005dd36:	jge    0x1005dd1f
1005dd38:	mov    eax,ds:0x1007f208
1005dd3d:	mov    ecx,DWORD PTR ds:0x1007f21c
1005dd43:	lea    ebx,[ecx+eax*1]
1005dd46:	xor    eax,eax
1005dd48:	inc    eax
1005dd49:	jmp    0x1005dde9
1005dd4e:	mov    eax,ds:0x1007f21c
1005dd53:	and    DWORD PTR [ebp-0x20],0x7fffffff
1005dd5a:	add    ebx,eax
1005dd5c:	mov    eax,ecx
1005dd5e:	cdq    
1005dd5f:	and    edx,0x1f
1005dd62:	add    eax,edx
1005dd64:	mov    edx,ecx
1005dd66:	sar    eax,0x5
1005dd69:	and    edx,0x8000001f
1005dd6f:	jns    0x1005dd76
1005dd71:	dec    edx
1005dd72:	or     edx,0xffffffe0
1005dd75:	inc    edx
1005dd76:	and    DWORD PTR [ebp-0xc],0x0
1005dd7a:	and    DWORD PTR [ebp+0x8],0x0
1005dd7e:	or     esi,0xffffffff
1005dd81:	mov    ecx,edx
1005dd83:	shl    esi,cl
1005dd85:	mov    DWORD PTR [ebp-0x4],0x20
1005dd8c:	sub    DWORD PTR [ebp-0x4],edx
1005dd8f:	not    esi
1005dd91:	mov    ecx,DWORD PTR [ebp+0x8]
1005dd94:	mov    edi,DWORD PTR [ebp+ecx*4-0x20]
1005dd98:	mov    ecx,edi
1005dd9a:	and    ecx,esi
1005dd9c:	mov    DWORD PTR [ebp-0x10],ecx
1005dd9f:	mov    ecx,edx
1005dda1:	shr    edi,cl
1005dda3:	mov    ecx,DWORD PTR [ebp+0x8]
1005dda6:	or     edi,DWORD PTR [ebp-0xc]
1005dda9:	mov    DWORD PTR [ebp+ecx*4-0x20],edi
1005ddad:	mov    edi,DWORD PTR [ebp-0x10]
1005ddb0:	mov    ecx,DWORD PTR [ebp-0x4]
1005ddb3:	shl    edi,cl
1005ddb5:	inc    DWORD PTR [ebp+0x8]
1005ddb8:	cmp    DWORD PTR [ebp+0x8],0x3
1005ddbc:	mov    DWORD PTR [ebp-0xc],edi
1005ddbf:	jl     0x1005dd91
1005ddc1:	mov    esi,eax
1005ddc3:	push   0x2
1005ddc5:	shl    esi,0x2
1005ddc8:	lea    ecx,[ebp-0x18]
1005ddcb:	pop    edx
1005ddcc:	sub    ecx,esi
1005ddce:	cmp    edx,eax
1005ddd0:	jl     0x1005ddda
1005ddd2:	mov    esi,DWORD PTR [ecx]
1005ddd4:	mov    DWORD PTR [ebp+edx*4-0x20],esi
1005ddd8:	jmp    0x1005dddf
1005ddda:	and    DWORD PTR [ebp+edx*4-0x20],0x0
1005dddf:	dec    edx
1005dde0:	sub    ecx,0x4
1005dde3:	test   edx,edx
1005dde5:	jge    0x1005ddce
1005dde7:	xor    eax,eax
1005dde9:	pop    esi
1005ddea:	push   0x1f
1005ddec:	pop    ecx
1005dded:	sub    ecx,DWORD PTR ds:0x1007f214
1005ddf3:	shl    ebx,cl
1005ddf5:	mov    ecx,DWORD PTR [ebp-0x14]
1005ddf8:	neg    ecx
1005ddfa:	sbb    ecx,ecx
1005ddfc:	and    ecx,0x80000000
1005de02:	or     ebx,ecx
1005de04:	mov    ecx,DWORD PTR ds:0x1007f218
1005de0a:	or     ebx,DWORD PTR [ebp-0x20]
1005de0d:	cmp    ecx,0x40
1005de10:	jne    0x1005de1f
1005de12:	mov    ecx,DWORD PTR [ebp+0xc]
1005de15:	mov    edx,DWORD PTR [ebp-0x1c]
1005de18:	mov    DWORD PTR [ecx+0x4],ebx
1005de1b:	mov    DWORD PTR [ecx],edx
1005de1d:	jmp    0x1005de29
1005de1f:	cmp    ecx,0x20
1005de22:	jne    0x1005de29
1005de24:	mov    ecx,DWORD PTR [ebp+0xc]
1005de27:	mov    DWORD PTR [ecx],ebx
1005de29:	pop    edi
1005de2a:	pop    ebx
1005de2b:	leave  
1005de2c:	ret    
1005de2d:	push   ebp
1005de2e:	mov    ebp,esp
1005de30:	sub    esp,0x7c
1005de33:	mov    eax,ds:0x1007e030
1005de38:	xor    eax,ebp
1005de3a:	mov    DWORD PTR [ebp-0x4],eax
1005de3d:	mov    eax,DWORD PTR [ebp+0x8]
1005de40:	push   ebx
1005de41:	xor    ebx,ebx
1005de43:	push   esi
1005de44:	xor    esi,esi
1005de46:	mov    DWORD PTR [ebp-0x7c],eax
1005de49:	mov    eax,DWORD PTR [ebp+0xc]
1005de4c:	inc    esi
1005de4d:	xor    ecx,ecx
1005de4f:	cmp    DWORD PTR [ebp+0x24],ebx
1005de52:	push   edi
1005de53:	mov    DWORD PTR [ebp-0x70],eax
1005de56:	lea    edi,[ebp-0x20]
1005de59:	mov    DWORD PTR [ebp-0x74],ebx
1005de5c:	mov    DWORD PTR [ebp-0x68],esi
1005de5f:	mov    DWORD PTR [ebp-0x4c],ebx
1005de62:	mov    DWORD PTR [ebp-0x58],ebx
1005de65:	mov    DWORD PTR [ebp-0x5c],ebx
1005de68:	mov    DWORD PTR [ebp-0x60],ebx
1005de6b:	mov    DWORD PTR [ebp-0x64],ebx
1005de6e:	mov    DWORD PTR [ebp-0x50],ebx
1005de71:	mov    DWORD PTR [ebp-0x6c],ebx
1005de74:	jne    0x1005de95
1005de76:	call   0x10046c45
1005de7b:	push   ebx
1005de7c:	push   ebx
1005de7d:	push   ebx
1005de7e:	push   ebx
1005de7f:	push   ebx
1005de80:	mov    DWORD PTR [eax],0x16
1005de86:	call   0x1004347c
1005de8b:	add    esp,0x14
1005de8e:	xor    eax,eax
1005de90:	jmp    0x1005e4af
1005de95:	mov    edx,DWORD PTR [ebp+0x10]
1005de98:	mov    DWORD PTR [ebp-0x54],edx
1005de9b:	mov    al,BYTE PTR [edx]
1005de9d:	cmp    al,0x20
1005de9f:	je     0x1005dead
1005dea1:	cmp    al,0x9
1005dea3:	je     0x1005dead
1005dea5:	cmp    al,0xa
1005dea7:	je     0x1005dead
1005dea9:	cmp    al,0xd
1005deab:	jne    0x1005deb0
1005dead:	inc    edx
1005deae:	jmp    0x1005de9b
1005deb0:	mov    bl,0x30
1005deb2:	mov    al,BYTE PTR [edx]
1005deb4:	inc    edx
1005deb5:	cmp    ecx,0xb
1005deb8:	ja     0x1005e0ed
1005debe:	jmp    DWORD PTR [ecx*4+0x1005e4c1]
1005dec5:	mov    cl,al
1005dec7:	sub    cl,0x31
1005deca:	cmp    cl,0x8
1005decd:	ja     0x1005ded5
1005decf:	push   0x3
1005ded1:	pop    ecx
1005ded2:	dec    edx
1005ded3:	jmp    0x1005deb2
1005ded5:	mov    ecx,DWORD PTR [ebp+0x24]
1005ded8:	mov    ecx,DWORD PTR [ecx]
1005deda:	mov    ecx,DWORD PTR [ecx+0xbc]
1005dee0:	mov    ecx,DWORD PTR [ecx]
1005dee2:	cmp    al,BYTE PTR [ecx]
1005dee4:	jne    0x1005deeb
1005dee6:	push   0x5
1005dee8:	pop    ecx
1005dee9:	jmp    0x1005deb2
1005deeb:	movsx  eax,al
1005deee:	sub    eax,0x2b
1005def1:	je     0x1005df10
1005def3:	dec    eax
1005def4:	dec    eax
1005def5:	je     0x1005df04
1005def7:	sub    eax,0x3
1005defa:	jne    0x1005e08b
1005df00:	mov    ecx,esi
1005df02:	jmp    0x1005deb2
1005df04:	push   0x2
1005df06:	pop    ecx
1005df07:	mov    DWORD PTR [ebp-0x74],0x8000
1005df0e:	jmp    0x1005deb2
1005df10:	and    DWORD PTR [ebp-0x74],0x0
1005df14:	push   0x2
1005df16:	pop    ecx
1005df17:	jmp    0x1005deb2
1005df19:	mov    cl,al
1005df1b:	sub    cl,0x31
1005df1e:	cmp    cl,0x8
1005df21:	mov    DWORD PTR [ebp-0x58],esi
1005df24:	jbe    0x1005decf
1005df26:	mov    ecx,DWORD PTR [ebp+0x24]
1005df29:	mov    ecx,DWORD PTR [ecx]
1005df2b:	mov    ecx,DWORD PTR [ecx+0xbc]
1005df31:	mov    ecx,DWORD PTR [ecx]
1005df33:	cmp    al,BYTE PTR [ecx]
1005df35:	jne    0x1005df3b
1005df37:	push   0x4
1005df39:	jmp    0x1005dee8
1005df3b:	cmp    al,0x2b
1005df3d:	je     0x1005df67
1005df3f:	cmp    al,0x2d
1005df41:	je     0x1005df67
1005df43:	cmp    al,bl
1005df45:	je     0x1005df00
1005df47:	cmp    al,0x43
1005df49:	jle    0x1005e08b
1005df4f:	cmp    al,0x45
1005df51:	jle    0x1005df63
1005df53:	cmp    al,0x63
1005df55:	jle    0x1005e08b
1005df5b:	cmp    al,0x65
1005df5d:	jg     0x1005e08b
1005df63:	push   0x6
1005df65:	jmp    0x1005dee8
1005df67:	dec    edx
1005df68:	push   0xb
1005df6a:	jmp    0x1005dee8
1005df6f:	mov    cl,al
1005df71:	sub    cl,0x31
1005df74:	cmp    cl,0x8
1005df77:	jbe    0x1005decf
1005df7d:	mov    ecx,DWORD PTR [ebp+0x24]
1005df80:	mov    ecx,DWORD PTR [ecx]
1005df82:	mov    ecx,DWORD PTR [ecx+0xbc]
1005df88:	mov    ecx,DWORD PTR [ecx]
1005df8a:	cmp    al,BYTE PTR [ecx]
1005df8c:	je     0x1005dee6
1005df92:	cmp    al,bl
1005df94:	je     0x1005df00
1005df9a:	mov    edx,DWORD PTR [ebp-0x54]
1005df9d:	jmp    0x1005e0b6
1005dfa2:	mov    DWORD PTR [ebp-0x58],esi
1005dfa5:	jmp    0x1005dfc1
1005dfa7:	cmp    al,0x39
1005dfa9:	jg     0x1005dfc5
1005dfab:	cmp    DWORD PTR [ebp-0x4c],0x19
1005dfaf:	jae    0x1005dfbb
1005dfb1:	inc    DWORD PTR [ebp-0x4c]
1005dfb4:	sub    al,bl
1005dfb6:	mov    BYTE PTR [edi],al
1005dfb8:	inc    edi
1005dfb9:	jmp    0x1005dfbe
1005dfbb:	inc    DWORD PTR [ebp-0x50]
1005dfbe:	mov    al,BYTE PTR [edx]
1005dfc0:	inc    edx
1005dfc1:	cmp    al,bl
1005dfc3:	jge    0x1005dfa7
1005dfc5:	mov    ecx,DWORD PTR [ebp+0x24]
1005dfc8:	mov    ecx,DWORD PTR [ecx]
1005dfca:	mov    ecx,DWORD PTR [ecx+0xbc]
1005dfd0:	mov    ecx,DWORD PTR [ecx]
1005dfd2:	cmp    al,BYTE PTR [ecx]
1005dfd4:	je     0x1005df37
1005dfda:	cmp    al,0x2b
1005dfdc:	je     0x1005df67
1005dfde:	cmp    al,0x2d
1005dfe0:	je     0x1005df67
1005dfe2:	jmp    0x1005df47
1005dfe7:	cmp    DWORD PTR [ebp-0x4c],0x0
1005dfeb:	mov    DWORD PTR [ebp-0x58],esi
1005dfee:	mov    DWORD PTR [ebp-0x5c],esi
1005dff1:	jne    0x1005e019
1005dff3:	jmp    0x1005dffb
1005dff5:	dec    DWORD PTR [ebp-0x50]
1005dff8:	mov    al,BYTE PTR [edx]
1005dffa:	inc    edx
1005dffb:	cmp    al,bl
1005dffd:	je     0x1005dff5
1005dfff:	jmp    0x1005e019
1005e001:	cmp    al,0x39
1005e003:	jg     0x1005dfda
1005e005:	cmp    DWORD PTR [ebp-0x4c],0x19
1005e009:	jae    0x1005e016
1005e00b:	inc    DWORD PTR [ebp-0x4c]
1005e00e:	sub    al,bl
1005e010:	mov    BYTE PTR [edi],al
1005e012:	inc    edi
1005e013:	dec    DWORD PTR [ebp-0x50]
1005e016:	mov    al,BYTE PTR [edx]
1005e018:	inc    edx
1005e019:	cmp    al,bl
1005e01b:	jge    0x1005e001
1005e01d:	jmp    0x1005dfda
1005e01f:	sub    al,bl
1005e021:	cmp    al,0x9
1005e023:	mov    DWORD PTR [ebp-0x5c],esi
1005e026:	ja     0x1005df9a
1005e02c:	push   0x4
1005e02e:	jmp    0x1005ded1
1005e033:	lea    ecx,[edx-0x2]
1005e036:	mov    DWORD PTR [ebp-0x54],ecx
1005e039:	mov    cl,al
1005e03b:	sub    cl,0x31
1005e03e:	cmp    cl,0x8
1005e041:	ja     0x1005e04a
1005e043:	push   0x9
1005e045:	jmp    0x1005ded1
1005e04a:	movsx  eax,al
1005e04d:	sub    eax,0x2b
1005e050:	je     0x1005e072
1005e052:	dec    eax
1005e053:	dec    eax
1005e054:	je     0x1005e066
1005e056:	sub    eax,0x3
1005e059:	jne    0x1005df9a
1005e05f:	push   0x8
1005e061:	jmp    0x1005dee8
1005e066:	or     DWORD PTR [ebp-0x68],0xffffffff
1005e06a:	push   0x7
1005e06c:	pop    ecx
1005e06d:	jmp    0x1005deb2
1005e072:	push   0x7
1005e074:	jmp    0x1005dee8
1005e079:	mov    DWORD PTR [ebp-0x60],esi
1005e07c:	jmp    0x1005e081
1005e07e:	mov    al,BYTE PTR [edx]
1005e080:	inc    edx
1005e081:	cmp    al,bl
1005e083:	je     0x1005e07e
1005e085:	sub    al,0x31
1005e087:	cmp    al,0x8
1005e089:	jbe    0x1005e043
1005e08b:	dec    edx
1005e08c:	jmp    0x1005e0b6
1005e08e:	mov    cl,al
1005e090:	sub    cl,0x31
1005e093:	cmp    cl,0x8
1005e096:	jbe    0x1005e043
1005e098:	cmp    al,bl
1005e09a:	jmp    0x1005e059
1005e09c:	cmp    DWORD PTR [ebp+0x20],0x0
1005e0a0:	je     0x1005e0e9
1005e0a2:	movsx  eax,al
1005e0a5:	sub    eax,0x2b
1005e0a8:	lea    ecx,[edx-0x1]
1005e0ab:	mov    DWORD PTR [ebp-0x54],ecx
1005e0ae:	je     0x1005e072
1005e0b0:	dec    eax
1005e0b1:	dec    eax
1005e0b2:	je     0x1005e066
1005e0b4:	mov    edx,ecx
1005e0b6:	cmp    DWORD PTR [ebp-0x58],0x0
1005e0ba:	mov    eax,DWORD PTR [ebp-0x70]
1005e0bd:	mov    DWORD PTR [eax],edx
1005e0bf:	je     0x1005e46a
1005e0c5:	push   0x18
1005e0c7:	pop    eax
1005e0c8:	cmp    DWORD PTR [ebp-0x4c],eax
1005e0cb:	jbe    0x1005e0dd
1005e0cd:	cmp    BYTE PTR [ebp-0x9],0x5
1005e0d1:	jl     0x1005e0d6
1005e0d3:	inc    BYTE PTR [ebp-0x9]
1005e0d6:	dec    edi
1005e0d7:	inc    DWORD PTR [ebp-0x50]
1005e0da:	mov    DWORD PTR [ebp-0x4c],eax
1005e0dd:	cmp    DWORD PTR [ebp-0x4c],0x0
1005e0e1:	jbe    0x1005e491
1005e0e7:	jmp    0x1005e142
1005e0e9:	push   0xa
1005e0eb:	pop    ecx
1005e0ec:	dec    edx
1005e0ed:	cmp    ecx,0xa
1005e0f0:	jne    0x1005deb2
1005e0f6:	jmp    0x1005e0b6
1005e0f8:	mov    DWORD PTR [ebp-0x60],esi
1005e0fb:	xor    ecx,ecx
1005e0fd:	jmp    0x1005e118
1005e0ff:	cmp    al,0x39
1005e101:	jg     0x1005e123
1005e103:	imul   ecx,ecx,0xa
1005e106:	movsx  esi,al
1005e109:	lea    ecx,[ecx+esi*1-0x30]
1005e10d:	cmp    ecx,0x1450
1005e113:	jg     0x1005e11e
1005e115:	mov    al,BYTE PTR [edx]
1005e117:	inc    edx
1005e118:	cmp    al,bl
1005e11a:	jge    0x1005e0ff
1005e11c:	jmp    0x1005e123
1005e11e:	mov    ecx,0x1451
1005e123:	mov    DWORD PTR [ebp-0x64],ecx
1005e126:	jmp    0x1005e133
1005e128:	cmp    al,0x39
1005e12a:	jg     0x1005e08b
1005e130:	mov    al,BYTE PTR [edx]
1005e132:	inc    edx
1005e133:	cmp    al,bl
1005e135:	jge    0x1005e128
1005e137:	jmp    0x1005e08b
1005e13c:	dec    DWORD PTR [ebp-0x4c]
1005e13f:	inc    DWORD PTR [ebp-0x50]
1005e142:	dec    edi
1005e143:	cmp    BYTE PTR [edi],0x0
1005e146:	je     0x1005e13c
1005e148:	lea    eax,[ebp-0x3c]
1005e14b:	push   eax
1005e14c:	push   DWORD PTR [ebp-0x4c]
1005e14f:	lea    eax,[ebp-0x20]
1005e152:	push   eax
1005e153:	call   0x1005f1ea
1005e158:	mov    eax,DWORD PTR [ebp-0x64]
1005e15b:	xor    ecx,ecx
1005e15d:	add    esp,0xc
1005e160:	cmp    DWORD PTR [ebp-0x68],ecx
1005e163:	jge    0x1005e167
1005e165:	neg    eax
1005e167:	add    eax,DWORD PTR [ebp-0x50]
1005e16a:	cmp    DWORD PTR [ebp-0x60],ecx
1005e16d:	jne    0x1005e172
1005e16f:	add    eax,DWORD PTR [ebp+0x18]
1005e172:	cmp    DWORD PTR [ebp-0x5c],ecx
1005e175:	jne    0x1005e17a
1005e177:	sub    eax,DWORD PTR [ebp+0x1c]
1005e17a:	cmp    eax,0x1450
1005e17f:	jg     0x1005e473
1005e185:	cmp    eax,0xffffebb0
1005e18a:	jl     0x1005e48a
1005e190:	mov    esi,0x1007f220
1005e195:	sub    esi,0x60
1005e198:	cmp    eax,ecx
1005e19a:	mov    DWORD PTR [ebp-0x54],eax
1005e19d:	je     0x1005e458
1005e1a3:	jge    0x1005e1b2
1005e1a5:	neg    eax
1005e1a7:	mov    esi,0x1007f380
1005e1ac:	mov    DWORD PTR [ebp-0x54],eax
1005e1af:	sub    esi,0x60
1005e1b2:	cmp    DWORD PTR [ebp+0x14],ecx
1005e1b5:	jne    0x1005e1bb
1005e1b7:	mov    WORD PTR [ebp-0x3c],cx
1005e1bb:	cmp    DWORD PTR [ebp-0x54],ecx
1005e1be:	je     0x1005e458
1005e1c4:	mov    eax,DWORD PTR [ebp-0x54]
1005e1c7:	sar    DWORD PTR [ebp-0x54],0x3
1005e1cb:	add    esi,0x54
1005e1ce:	and    eax,0x7
1005e1d1:	test   eax,eax
1005e1d3:	mov    DWORD PTR [ebp-0x4c],esi
1005e1d6:	je     0x1005e44e
1005e1dc:	imul   eax,eax,0xc
1005e1df:	add    eax,esi
1005e1e1:	mov    ebx,eax
1005e1e3:	cmp    WORD PTR [ebx],0x8000
1005e1e8:	mov    DWORD PTR [ebp-0x70],ebx
1005e1eb:	jb     0x1005e201
1005e1ed:	mov    esi,ebx
1005e1ef:	lea    edi,[ebp-0x48]
1005e1f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1005e1f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1005e1f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1005e1f5:	dec    DWORD PTR [ebp-0x46]
1005e1f8:	mov    esi,DWORD PTR [ebp-0x4c]
1005e1fb:	lea    ebx,[ebp-0x48]
1005e1fe:	mov    DWORD PTR [ebp-0x70],ebx
1005e201:	movzx  edx,WORD PTR [ebx+0xa]
1005e205:	mov    ecx,DWORD PTR [ebp-0x32]
1005e208:	xor    eax,eax
1005e20a:	mov    DWORD PTR [ebp-0x50],eax
1005e20d:	mov    DWORD PTR [ebp-0x2c],eax
1005e210:	mov    DWORD PTR [ebp-0x28],eax
1005e213:	mov    DWORD PTR [ebp-0x24],eax
1005e216:	mov    eax,edx
1005e218:	mov    edi,0x7fff
1005e21d:	xor    eax,ecx
1005e21f:	and    ecx,edi
1005e221:	and    edx,edi
1005e223:	and    eax,0x8000
1005e228:	cmp    cx,0x7fff
1005e22d:	lea    edi,[edx+ecx*1]
1005e230:	movzx  edi,di
1005e233:	jae    0x1005e434
1005e239:	cmp    dx,0x7fff
1005e23e:	jae    0x1005e434
1005e244:	cmp    di,0xbffd
1005e249:	ja     0x1005e434
1005e24f:	cmp    di,0x3fbf
1005e254:	ja     0x1005e263
1005e256:	xor    eax,eax
1005e258:	mov    DWORD PTR [ebp-0x38],eax
1005e25b:	mov    DWORD PTR [ebp-0x3c],eax
1005e25e:	jmp    0x1005e44b
1005e263:	test   cx,cx
1005e266:	jne    0x1005e287
1005e268:	inc    edi
1005e269:	test   DWORD PTR [ebp-0x34],0x7fffffff
1005e270:	jne    0x1005e287
1005e272:	cmp    DWORD PTR [ebp-0x38],0x0
1005e276:	jne    0x1005e287
1005e278:	cmp    DWORD PTR [ebp-0x3c],0x0
1005e27c:	jne    0x1005e287
1005e27e:	and    WORD PTR [ebp-0x32],cx
1005e282:	jmp    0x1005e44e
1005e287:	xor    ecx,ecx
1005e289:	cmp    dx,cx
1005e28c:	jne    0x1005e2af
1005e28e:	inc    edi
1005e28f:	test   DWORD PTR [ebx+0x8],0x7fffffff
1005e296:	jne    0x1005e2af
1005e298:	cmp    DWORD PTR [ebx+0x4],ecx
1005e29b:	jne    0x1005e2af
1005e29d:	cmp    DWORD PTR [ebx],ecx
1005e29f:	jne    0x1005e2af
1005e2a1:	mov    DWORD PTR [ebp-0x34],ecx
1005e2a4:	mov    DWORD PTR [ebp-0x38],ecx
1005e2a7:	mov    DWORD PTR [ebp-0x3c],ecx
1005e2aa:	jmp    0x1005e44e
1005e2af:	and    DWORD PTR [ebp-0x68],ecx
1005e2b2:	lea    esi,[ebp-0x28]
1005e2b5:	mov    DWORD PTR [ebp-0x58],0x5
1005e2bc:	mov    ecx,DWORD PTR [ebp-0x68]
1005e2bf:	mov    edx,DWORD PTR [ebp-0x58]
1005e2c2:	add    ecx,ecx
1005e2c4:	test   edx,edx
1005e2c6:	mov    DWORD PTR [ebp-0x64],edx
1005e2c9:	jle    0x1005e320
1005e2cb:	lea    ecx,[ebp+ecx*1-0x3c]
1005e2cf:	add    ebx,0x8
1005e2d2:	mov    DWORD PTR [ebp-0x5c],ecx
1005e2d5:	mov    DWORD PTR [ebp-0x60],ebx
1005e2d8:	mov    ecx,DWORD PTR [ebp-0x60]
1005e2db:	mov    edx,DWORD PTR [ebp-0x5c]
1005e2de:	movzx  edx,WORD PTR [edx]
1005e2e1:	movzx  ecx,WORD PTR [ecx]
1005e2e4:	and    DWORD PTR [ebp-0x78],0x0
1005e2e8:	imul   ecx,edx
1005e2eb:	mov    edx,DWORD PTR [esi-0x4]
1005e2ee:	lea    ebx,[edx+ecx*1]
1005e2f1:	cmp    ebx,edx
1005e2f3:	jb     0x1005e2f9
1005e2f5:	cmp    ebx,ecx
1005e2f7:	jae    0x1005e300
1005e2f9:	mov    DWORD PTR [ebp-0x78],0x1
1005e300:	cmp    DWORD PTR [ebp-0x78],0x0
1005e304:	mov    DWORD PTR [esi-0x4],ebx
1005e307:	je     0x1005e30c
1005e309:	inc    WORD PTR [esi]
1005e30c:	add    DWORD PTR [ebp-0x5c],0x2
1005e310:	sub    DWORD PTR [ebp-0x60],0x2
1005e314:	dec    DWORD PTR [ebp-0x64]
1005e317:	cmp    DWORD PTR [ebp-0x64],0x0
1005e31b:	jg     0x1005e2d8
1005e31d:	mov    ebx,DWORD PTR [ebp-0x70]
1005e320:	inc    esi
1005e321:	inc    esi
1005e322:	inc    DWORD PTR [ebp-0x68]
1005e325:	dec    DWORD PTR [ebp-0x58]
1005e328:	cmp    DWORD PTR [ebp-0x58],0x0
1005e32c:	jg     0x1005e2bc
1005e32e:	add    edi,0xc002
1005e334:	test   di,di
1005e337:	jle    0x1005e374
1005e339:	test   DWORD PTR [ebp-0x24],0x80000000
1005e340:	jne    0x1005e36f
1005e342:	mov    esi,DWORD PTR [ebp-0x28]
1005e345:	mov    ecx,DWORD PTR [ebp-0x2c]
1005e348:	shl    DWORD PTR [ebp-0x2c],1
1005e34b:	shr    ecx,0x1f
1005e34e:	mov    edx,esi
1005e350:	add    esi,esi
1005e352:	or     esi,ecx
1005e354:	mov    ecx,DWORD PTR [ebp-0x24]
1005e357:	shr    edx,0x1f
1005e35a:	add    ecx,ecx
1005e35c:	or     ecx,edx
1005e35e:	add    edi,0xffff
1005e364:	test   di,di
1005e367:	mov    DWORD PTR [ebp-0x28],esi
1005e36a:	mov    DWORD PTR [ebp-0x24],ecx
1005e36d:	jg     0x1005e339
1005e36f:	test   di,di
1005e372:	jg     0x1005e3c2
1005e374:	add    edi,0xffff
1005e37a:	test   di,di
1005e37d:	jge    0x1005e3c2
1005e37f:	mov    ecx,edi
1005e381:	neg    ecx
1005e383:	movzx  esi,cx
1005e386:	add    edi,esi
1005e388:	test   BYTE PTR [ebp-0x2c],0x1
1005e38c:	je     0x1005e391
1005e38e:	inc    DWORD PTR [ebp-0x50]
1005e391:	mov    ecx,DWORD PTR [ebp-0x24]
1005e394:	mov    ebx,DWORD PTR [ebp-0x28]
1005e397:	mov    edx,DWORD PTR [ebp-0x28]
1005e39a:	shr    DWORD PTR [ebp-0x24],1
1005e39d:	shl    ecx,0x1f
1005e3a0:	shr    ebx,1
1005e3a2:	or     ebx,ecx
1005e3a4:	mov    ecx,DWORD PTR [ebp-0x2c]
1005e3a7:	shl    edx,0x1f
1005e3aa:	shr    ecx,1
1005e3ac:	or     ecx,edx
1005e3ae:	dec    esi
1005e3af:	mov    DWORD PTR [ebp-0x28],ebx
1005e3b2:	mov    DWORD PTR [ebp-0x2c],ecx
1005e3b5:	jne    0x1005e388
1005e3b7:	cmp    DWORD PTR [ebp-0x50],0x0
1005e3bb:	je     0x1005e3c2
1005e3bd:	or     WORD PTR [ebp-0x2c],0x1
1005e3c2:	cmp    WORD PTR [ebp-0x2c],0x8000
1005e3c8:	ja     0x1005e3db
1005e3ca:	mov    ecx,DWORD PTR [ebp-0x2c]
1005e3cd:	and    ecx,0x1ffff
1005e3d3:	cmp    ecx,0x18000
1005e3d9:	jne    0x1005e40e
1005e3db:	cmp    DWORD PTR [ebp-0x2a],0xffffffff
1005e3df:	jne    0x1005e40b
1005e3e1:	and    DWORD PTR [ebp-0x2a],0x0
1005e3e5:	cmp    DWORD PTR [ebp-0x26],0xffffffff
1005e3e9:	jne    0x1005e406
1005e3eb:	and    DWORD PTR [ebp-0x26],0x0
1005e3ef:	cmp    WORD PTR [ebp-0x22],0xffff
1005e3f5:	jne    0x1005e400
1005e3f7:	mov    WORD PTR [ebp-0x22],0x8000
1005e3fd:	inc    edi
1005e3fe:	jmp    0x1005e40e
1005e400:	inc    WORD PTR [ebp-0x22]
1005e404:	jmp    0x1005e40e
1005e406:	inc    DWORD PTR [ebp-0x26]
1005e409:	jmp    0x1005e40e
1005e40b:	inc    DWORD PTR [ebp-0x2a]
1005e40e:	cmp    di,0x7fff
1005e413:	mov    esi,DWORD PTR [ebp-0x4c]
1005e416:	jae    0x1005e434
1005e418:	mov    cx,WORD PTR [ebp-0x2a]
1005e41c:	mov    WORD PTR [ebp-0x3c],cx
1005e420:	mov    ecx,DWORD PTR [ebp-0x28]
1005e423:	mov    DWORD PTR [ebp-0x3a],ecx
1005e426:	mov    ecx,DWORD PTR [ebp-0x24]
1005e429:	or     edi,eax
1005e42b:	mov    DWORD PTR [ebp-0x36],ecx
1005e42e:	mov    WORD PTR [ebp-0x32],di
1005e432:	jmp    0x1005e44e
1005e434:	neg    ax
1005e437:	sbb    eax,eax
1005e439:	and    DWORD PTR [ebp-0x38],0x0
1005e43d:	and    eax,0x80000000
1005e442:	add    eax,0x7fff8000
1005e447:	and    DWORD PTR [ebp-0x3c],0x0
1005e44b:	mov    DWORD PTR [ebp-0x34],eax
1005e44e:	cmp    DWORD PTR [ebp-0x54],0x0
1005e452:	jne    0x1005e1c4
1005e458:	mov    eax,DWORD PTR [ebp-0x34]
1005e45b:	movzx  ecx,WORD PTR [ebp-0x3c]
1005e45f:	mov    esi,DWORD PTR [ebp-0x3a]
1005e462:	mov    edx,DWORD PTR [ebp-0x36]
1005e465:	shr    eax,0x10
1005e468:	jmp    0x1005e499
1005e46a:	mov    DWORD PTR [ebp-0x6c],0x4
1005e471:	jmp    0x1005e491
1005e473:	xor    esi,esi
1005e475:	mov    eax,0x7fff
1005e47a:	mov    edx,0x80000000
1005e47f:	xor    ecx,ecx
1005e481:	mov    DWORD PTR [ebp-0x6c],0x2
1005e488:	jmp    0x1005e499
1005e48a:	mov    DWORD PTR [ebp-0x6c],0x1
1005e491:	xor    ecx,ecx
1005e493:	xor    eax,eax
1005e495:	xor    edx,edx
1005e497:	xor    esi,esi
1005e499:	mov    edi,DWORD PTR [ebp-0x7c]
1005e49c:	or     eax,DWORD PTR [ebp-0x74]
1005e49f:	mov    WORD PTR [edi],cx
1005e4a2:	mov    WORD PTR [edi+0xa],ax
1005e4a6:	mov    eax,DWORD PTR [ebp-0x6c]
1005e4a9:	mov    DWORD PTR [edi+0x2],esi
1005e4ac:	mov    DWORD PTR [edi+0x6],edx
1005e4af:	mov    ecx,DWORD PTR [ebp-0x4]
1005e4b2:	pop    edi
1005e4b3:	pop    esi
1005e4b4:	xor    ecx,ebp
1005e4b6:	pop    ebx
1005e4b7:	call   0x10042f87
1005e4bc:	leave  
1005e4bd:	ret    
1005e4be:	lea    ecx,[ecx+0x0]
1005e4c1:	(bad)
1005e4c4:	adc    BYTE PTR [ecx],bl
1005e4c6:	fild   WORD PTR ds:0x5df6f10
1005e4cc:	adc    BYTE PTR [edx-0x18effa21],ah
1005e4d2:	fild   WORD PTR ds:0x5e01f10
1005e4d8:	adc    BYTE PTR [ebx],dh
1005e4da:	loopne 0x1005e4e1
1005e4dc:	adc    BYTE PTR [esi+0x791005e0],cl
1005e4e2:	loopne 0x1005e4e9
1005e4e4:	adc    al,bh
1005e4e6:	loopne 0x1005e4ed
1005e4e8:	adc    ch,ch
1005e4ea:	loopne 0x1005e4f1
1005e4ec:	adc    BYTE PTR [eax+eiz*8-0x74aaeffb],bl
1005e4f3:	in     al,dx
1005e4f4:	sub    esp,0x74
1005e4f7:	mov    eax,ds:0x1007e030
1005e4fc:	xor    eax,ebp
1005e4fe:	mov    DWORD PTR [ebp-0x4],eax
1005e501:	push   ebx
1005e502:	mov    ebx,DWORD PTR [ebp+0x1c]
1005e505:	push   esi
1005e506:	push   edi
1005e507:	lea    esi,[ebp+0x8]
1005e50a:	lea    edi,[ebp-0x10]
1005e50d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1005e50e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1005e50f:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
1005e511:	mov    edx,DWORD PTR [ebp-0x8]
1005e514:	mov    ecx,edx
1005e516:	mov    eax,0x8000
1005e51b:	and    ecx,eax
1005e51d:	and    edx,0x7fff
1005e523:	test   cx,cx
1005e526:	mov    DWORD PTR [ebp-0x60],ebx
1005e529:	mov    BYTE PTR [ebp-0x30],0xcc
1005e52d:	mov    BYTE PTR [ebp-0x2f],0xcc
1005e531:	mov    BYTE PTR [ebp-0x2e],0xcc
1005e535:	mov    BYTE PTR [ebp-0x2d],0xcc
1005e539:	mov    BYTE PTR [ebp-0x2c],0xcc
1005e53d:	mov    BYTE PTR [ebp-0x2b],0xcc
1005e541:	mov    BYTE PTR [ebp-0x2a],0xcc
1005e545:	mov    BYTE PTR [ebp-0x29],0xcc
1005e549:	mov    BYTE PTR [ebp-0x28],0xcc
1005e54d:	mov    BYTE PTR [ebp-0x27],0xcc
1005e551:	mov    BYTE PTR [ebp-0x26],0xfb
1005e555:	mov    BYTE PTR [ebp-0x25],0x3f
1005e559:	mov    DWORD PTR [ebp-0x74],0x1
1005e560:	mov    DWORD PTR [ebp-0x6c],ecx
1005e563:	je     0x1005e56b
1005e565:	mov    BYTE PTR [ebx+0x2],0x2d
1005e569:	jmp    0x1005e56f
1005e56b:	mov    BYTE PTR [ebx+0x2],0x20
1005e56f:	test   dx,dx
1005e572:	mov    esi,DWORD PTR [ebp-0xc]
1005e575:	mov    edi,DWORD PTR [ebp-0x10]
1005e578:	jne    0x1005e5a8
1005e57a:	test   esi,esi
1005e57c:	jne    0x1005e5a8
1005e57e:	test   edi,edi
1005e580:	jne    0x1005e5a8
1005e582:	and    WORD PTR [ebx],di
1005e585:	cmp    cx,ax
1005e588:	setne  al
1005e58b:	dec    al
1005e58d:	and    al,0xd
1005e58f:	add    al,0x20
1005e591:	mov    BYTE PTR [ebx+0x2],al
1005e594:	mov    BYTE PTR [ebx+0x3],0x1
1005e598:	mov    BYTE PTR [ebx+0x4],0x30
1005e59c:	mov    BYTE PTR [ebx+0x5],0x0
1005e5a0:	xor    eax,eax
1005e5a2:	inc    eax
1005e5a3:	jmp    0x1005ed71
1005e5a8:	cmp    dx,0x7fff
1005e5ad:	jne    0x1005e651
1005e5b3:	mov    eax,0x80000000
1005e5b8:	cmp    esi,eax
1005e5ba:	mov    WORD PTR [ebx],0x1
1005e5bf:	jne    0x1005e5c5
1005e5c1:	test   edi,edi
1005e5c3:	je     0x1005e5d4
1005e5c5:	test   esi,0x40000000
1005e5cb:	jne    0x1005e5d4
1005e5cd:	push   0x1006cb60
1005e5d2:	jmp    0x1005e625
1005e5d4:	test   cx,cx
1005e5d7:	je     0x1005e5ec
1005e5d9:	cmp    esi,0xc0000000
1005e5df:	jne    0x1005e5ec
1005e5e1:	test   edi,edi
1005e5e3:	jne    0x1005e620
1005e5e5:	push   0x1006cb58
1005e5ea:	jmp    0x1005e5f9
1005e5ec:	cmp    esi,eax
1005e5ee:	jne    0x1005e620
1005e5f0:	test   edi,edi
1005e5f2:	jne    0x1005e620
1005e5f4:	push   0x1006cb50
1005e5f9:	lea    eax,[ebx+0x4]
1005e5fc:	push   0x16
1005e5fe:	push   eax
1005e5ff:	call   0x10046c89
1005e604:	add    esp,0xc
1005e607:	xor    esi,esi
1005e609:	test   eax,eax
1005e60b:	je     0x1005e61a
1005e60d:	push   esi
1005e60e:	push   esi
1005e60f:	push   esi
1005e610:	push   esi
1005e611:	push   esi
1005e612:	call   0x10043380
1005e617:	add    esp,0x14
1005e61a:	mov    BYTE PTR [ebx+0x3],0x5
1005e61e:	jmp    0x1005e64a
1005e620:	push   0x1006cb48
1005e625:	lea    eax,[ebx+0x4]
1005e628:	push   0x16
1005e62a:	push   eax
1005e62b:	call   0x10046c89
1005e630:	add    esp,0xc
1005e633:	xor    esi,esi
1005e635:	test   eax,eax
1005e637:	je     0x1005e646
1005e639:	push   esi
1005e63a:	push   esi
1005e63b:	push   esi
1005e63c:	push   esi
1005e63d:	push   esi
1005e63e:	call   0x10043380
1005e643:	add    esp,0x14
1005e646:	mov    BYTE PTR [ebx+0x3],0x6
1005e64a:	xor    eax,eax
1005e64c:	jmp    0x1005ed71
1005e651:	movzx  ecx,dx
1005e654:	mov    ebx,ecx
1005e656:	imul   ecx,ecx,0x4d10
1005e65c:	shr    ebx,0x8
1005e65f:	mov    eax,esi
1005e661:	shr    eax,0x18
1005e664:	lea    eax,[ebx+eax*2]
1005e667:	imul   eax,eax,0x4d
1005e66a:	lea    eax,[eax+ecx*1-0x134312f4]
1005e671:	sar    eax,0x10
1005e674:	movzx  ecx,ax
1005e677:	movsx  ebx,cx
1005e67a:	mov    DWORD PTR [ebp-0x4c],ecx
1005e67d:	xor    eax,eax
1005e67f:	mov    ecx,0x1007f220
1005e684:	neg    ebx
1005e686:	sub    ecx,0x60
1005e689:	cmp    ebx,eax
1005e68b:	mov    WORD PTR [ebp-0x16],dx
1005e68f:	mov    DWORD PTR [ebp-0x1a],esi
1005e692:	mov    DWORD PTR [ebp-0x1e],edi
1005e695:	mov    WORD PTR [ebp-0x20],ax
1005e699:	mov    DWORD PTR [ebp-0x68],ecx
1005e69c:	je     0x1005e950
1005e6a2:	jge    0x1005e6b1
1005e6a4:	mov    ecx,0x1007f380
1005e6a9:	neg    ebx
1005e6ab:	sub    ecx,0x60
1005e6ae:	mov    DWORD PTR [ebp-0x68],ecx
1005e6b1:	cmp    ebx,eax
1005e6b3:	je     0x1005e950
1005e6b9:	add    DWORD PTR [ebp-0x68],0x54
1005e6bd:	mov    ecx,ebx
1005e6bf:	and    ecx,0x7
1005e6c2:	sar    ebx,0x3
1005e6c5:	test   ecx,ecx
1005e6c7:	je     0x1005e946
1005e6cd:	imul   ecx,ecx,0xc
1005e6d0:	add    ecx,DWORD PTR [ebp-0x68]
1005e6d3:	cmp    WORD PTR [ecx],0x8000
1005e6d8:	mov    DWORD PTR [ebp-0x64],ecx
1005e6db:	jb     0x1005e6f0
1005e6dd:	mov    esi,ecx
1005e6df:	lea    edi,[ebp-0x3c]
1005e6e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1005e6e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1005e6e4:	lea    eax,[ebp-0x3c]
1005e6e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1005e6e8:	dec    DWORD PTR [ebp-0x3a]
1005e6eb:	mov    DWORD PTR [ebp-0x64],eax
1005e6ee:	mov    ecx,eax
1005e6f0:	movzx  edi,WORD PTR [ecx+0xa]
1005e6f4:	mov    edx,DWORD PTR [ebp-0x16]
1005e6f7:	xor    eax,eax
1005e6f9:	mov    ecx,edi
1005e6fb:	mov    esi,0x7fff
1005e700:	xor    ecx,edx
1005e702:	and    edx,esi
1005e704:	and    edi,esi
1005e706:	mov    DWORD PTR [ebp-0x48],eax
1005e709:	mov    DWORD PTR [ebp-0x10],eax
1005e70c:	mov    DWORD PTR [ebp-0xc],eax
1005e70f:	mov    DWORD PTR [ebp-0x8],eax
1005e712:	and    ecx,0x8000
1005e718:	cmp    dx,si
1005e71b:	lea    eax,[edi+edx*1]
1005e71e:	movzx  eax,ax
1005e721:	jae    0x1005e92a
1005e727:	cmp    di,si
1005e72a:	jae    0x1005e92a
1005e730:	cmp    ax,0xbffd
1005e734:	ja     0x1005e92a
1005e73a:	cmp    ax,0x3fbf
1005e73e:	ja     0x1005e750
1005e740:	xor    eax,eax
1005e742:	mov    DWORD PTR [ebp-0x18],eax
1005e745:	mov    DWORD PTR [ebp-0x1c],eax
1005e748:	mov    DWORD PTR [ebp-0x20],eax
1005e74b:	jmp    0x1005e946
1005e750:	xor    esi,esi
1005e752:	cmp    dx,si
1005e755:	jne    0x1005e774
1005e757:	inc    eax
1005e758:	test   DWORD PTR [ebp-0x18],0x7fffffff
1005e75f:	jne    0x1005e774
1005e761:	cmp    DWORD PTR [ebp-0x1c],esi
1005e764:	jne    0x1005e774
1005e766:	cmp    DWORD PTR [ebp-0x20],esi
1005e769:	jne    0x1005e774
1005e76b:	mov    WORD PTR [ebp-0x16],si
1005e76f:	jmp    0x1005e946
1005e774:	cmp    di,si
1005e777:	jne    0x1005e79d
1005e779:	mov    edx,DWORD PTR [ebp-0x64]
1005e77c:	inc    eax
1005e77d:	test   DWORD PTR [edx+0x8],0x7fffffff
1005e784:	jne    0x1005e79d
1005e786:	cmp    DWORD PTR [edx+0x4],esi
1005e789:	jne    0x1005e79d
1005e78b:	cmp    DWORD PTR [edx],esi
1005e78d:	jne    0x1005e79d
1005e78f:	mov    DWORD PTR [ebp-0x18],esi
1005e792:	mov    DWORD PTR [ebp-0x1c],esi
1005e795:	mov    DWORD PTR [ebp-0x20],esi
1005e798:	jmp    0x1005e946
1005e79d:	lea    edi,[ebp-0xc]
1005e7a0:	mov    DWORD PTR [ebp-0x5c],esi
1005e7a3:	mov    DWORD PTR [ebp-0x44],edi
1005e7a6:	mov    DWORD PTR [ebp-0x40],0x5
1005e7ad:	mov    edx,DWORD PTR [ebp-0x5c]
1005e7b0:	mov    esi,DWORD PTR [ebp-0x40]
1005e7b3:	add    edx,edx
1005e7b5:	test   esi,esi
1005e7b7:	mov    DWORD PTR [ebp-0x50],esi
1005e7ba:	jle    0x1005e814
1005e7bc:	lea    edx,[ebp+edx*1-0x20]
1005e7c0:	mov    DWORD PTR [ebp-0x58],edx
1005e7c3:	mov    edx,DWORD PTR [ebp-0x64]
1005e7c6:	add    edx,0x8
1005e7c9:	mov    DWORD PTR [ebp-0x54],edx
1005e7cc:	mov    edx,DWORD PTR [ebp-0x58]
1005e7cf:	mov    esi,DWORD PTR [ebp-0x54]
1005e7d2:	movzx  esi,WORD PTR [esi]
1005e7d5:	movzx  edx,WORD PTR [edx]
1005e7d8:	mov    edi,DWORD PTR [edi-0x4]
1005e7db:	imul   edx,esi
1005e7de:	and    DWORD PTR [ebp-0x70],0x0
1005e7e2:	lea    esi,[edi+edx*1]
1005e7e5:	cmp    esi,edi
1005e7e7:	jb     0x1005e7ed
1005e7e9:	cmp    esi,edx
1005e7eb:	jae    0x1005e7f4
1005e7ed:	mov    DWORD PTR [ebp-0x70],0x1
1005e7f4:	cmp    DWORD PTR [ebp-0x70],0x0
1005e7f8:	mov    edi,DWORD PTR [ebp-0x44]
1005e7fb:	mov    DWORD PTR [edi-0x4],esi
1005e7fe:	je     0x1005e803
1005e800:	inc    WORD PTR [edi]
1005e803:	add    DWORD PTR [ebp-0x58],0x2
1005e807:	sub    DWORD PTR [ebp-0x54],0x2
1005e80b:	dec    DWORD PTR [ebp-0x50]
1005e80e:	cmp    DWORD PTR [ebp-0x50],0x0
1005e812:	jg     0x1005e7cc
1005e814:	inc    edi
1005e815:	inc    edi
1005e816:	inc    DWORD PTR [ebp-0x5c]
1005e819:	dec    DWORD PTR [ebp-0x40]
1005e81c:	cmp    DWORD PTR [ebp-0x40],0x0
1005e820:	mov    DWORD PTR [ebp-0x44],edi
1005e823:	jg     0x1005e7ad
1005e825:	add    eax,0xc002
1005e82a:	test   ax,ax
1005e82d:	jle    0x1005e86a
1005e82f:	test   DWORD PTR [ebp-0x8],0x80000000
1005e836:	jne    0x1005e865
1005e838:	mov    edx,DWORD PTR [ebp-0x10]
1005e83b:	mov    edi,DWORD PTR [ebp-0xc]
1005e83e:	mov    esi,DWORD PTR [ebp-0xc]
1005e841:	shl    DWORD PTR [ebp-0x10],1
1005e844:	shr    edx,0x1f
1005e847:	add    edi,edi
1005e849:	or     edi,edx
1005e84b:	mov    edx,DWORD PTR [ebp-0x8]
1005e84e:	shr    esi,0x1f
1005e851:	add    edx,edx
1005e853:	or     edx,esi
1005e855:	add    eax,0xffff
1005e85a:	test   ax,ax
1005e85d:	mov    DWORD PTR [ebp-0xc],edi
1005e860:	mov    DWORD PTR [ebp-0x8],edx
1005e863:	jg     0x1005e82f
1005e865:	test   ax,ax
1005e868:	jg     0x1005e8bc
1005e86a:	add    eax,0xffff
1005e86f:	test   ax,ax
1005e872:	jge    0x1005e8bc
1005e874:	mov    edx,eax
1005e876:	neg    edx
1005e878:	movzx  edx,dx
1005e87b:	mov    DWORD PTR [ebp-0x44],edx
1005e87e:	add    eax,edx
1005e880:	test   BYTE PTR [ebp-0x10],0x1
1005e884:	je     0x1005e889
1005e886:	inc    DWORD PTR [ebp-0x48]
1005e889:	mov    edx,DWORD PTR [ebp-0x8]
1005e88c:	mov    edi,DWORD PTR [ebp-0xc]
1005e88f:	mov    esi,DWORD PTR [ebp-0xc]
1005e892:	shr    DWORD PTR [ebp-0x8],1
1005e895:	shl    edx,0x1f
1005e898:	shr    edi,1
1005e89a:	or     edi,edx
1005e89c:	mov    edx,DWORD PTR [ebp-0x10]
1005e89f:	shl    esi,0x1f
1005e8a2:	shr    edx,1
1005e8a4:	or     edx,esi
1005e8a6:	dec    DWORD PTR [ebp-0x44]
1005e8a9:	mov    DWORD PTR [ebp-0xc],edi
1005e8ac:	mov    DWORD PTR [ebp-0x10],edx
1005e8af:	jne    0x1005e880
1005e8b1:	cmp    DWORD PTR [ebp-0x48],0x0
1005e8b5:	je     0x1005e8bc
1005e8b7:	or     WORD PTR [ebp-0x10],0x1
1005e8bc:	cmp    WORD PTR [ebp-0x10],0x8000
1005e8c2:	ja     0x1005e8d5
1005e8c4:	mov    edx,DWORD PTR [ebp-0x10]
1005e8c7:	and    edx,0x1ffff
1005e8cd:	cmp    edx,0x18000
1005e8d3:	jne    0x1005e908
1005e8d5:	cmp    DWORD PTR [ebp-0xe],0xffffffff
1005e8d9:	jne    0x1005e905
1005e8db:	and    DWORD PTR [ebp-0xe],0x0
1005e8df:	cmp    DWORD PTR [ebp-0xa],0xffffffff
1005e8e3:	jne    0x1005e900
1005e8e5:	and    DWORD PTR [ebp-0xa],0x0
1005e8e9:	cmp    WORD PTR [ebp-0x6],0xffff
1005e8ef:	jne    0x1005e8fa
1005e8f1:	mov    WORD PTR [ebp-0x6],0x8000
1005e8f7:	inc    eax
1005e8f8:	jmp    0x1005e908
1005e8fa:	inc    WORD PTR [ebp-0x6]
1005e8fe:	jmp    0x1005e908
1005e900:	inc    DWORD PTR [ebp-0xa]
1005e903:	jmp    0x1005e908
1005e905:	inc    DWORD PTR [ebp-0xe]
1005e908:	cmp    ax,0x7fff
1005e90c:	jae    0x1005e92a
1005e90e:	mov    dx,WORD PTR [ebp-0xe]
1005e912:	mov    WORD PTR [ebp-0x20],dx
1005e916:	mov    edx,DWORD PTR [ebp-0xc]
1005e919:	mov    DWORD PTR [ebp-0x1e],edx
1005e91c:	mov    edx,DWORD PTR [ebp-0x8]
1005e91f:	or     eax,ecx
1005e921:	mov    DWORD PTR [ebp-0x1a],edx
1005e924:	mov    WORD PTR [ebp-0x16],ax
1005e928:	jmp    0x1005e946
1005e92a:	neg    cx
1005e92d:	sbb    ecx,ecx
1005e92f:	and    DWORD PTR [ebp-0x1c],0x0
1005e933:	and    ecx,0x80000000
1005e939:	add    ecx,0x7fff8000
1005e93f:	and    DWORD PTR [ebp-0x20],0x0
1005e943:	mov    DWORD PTR [ebp-0x18],ecx
1005e946:	test   ebx,ebx
1005e948:	jne    0x1005e6b9
1005e94e:	xor    eax,eax
1005e950:	mov    ecx,DWORD PTR [ebp-0x18]
1005e953:	shr    ecx,0x10
1005e956:	cmp    cx,0x3fff
1005e95b:	mov    ebx,0x7fff
1005e960:	jb     0x1005ebb0
1005e966:	mov    esi,DWORD PTR [ebp-0x26]
1005e969:	inc    DWORD PTR [ebp-0x4c]
1005e96c:	movzx  edx,cx
1005e96f:	mov    ecx,esi
1005e971:	xor    ecx,edx
1005e973:	and    edx,ebx
1005e975:	and    esi,ebx
1005e977:	and    ecx,0x8000
1005e97d:	cmp    dx,bx
1005e980:	lea    edi,[esi+edx*1]
1005e983:	mov    DWORD PTR [ebp-0x58],eax
1005e986:	mov    DWORD PTR [ebp-0x10],eax
1005e989:	mov    DWORD PTR [ebp-0xc],eax
1005e98c:	mov    DWORD PTR [ebp-0x8],eax
1005e98f:	movzx  edi,di
1005e992:	jae    0x1005eb96
1005e998:	cmp    si,bx
1005e99b:	jae    0x1005eb96
1005e9a1:	cmp    di,0xbffd
1005e9a6:	ja     0x1005eb96
1005e9ac:	cmp    di,0x3fbf
1005e9b1:	ja     0x1005e9bb
1005e9b3:	mov    DWORD PTR [ebp-0x18],eax
1005e9b6:	jmp    0x1005ebaa
1005e9bb:	cmp    dx,ax
1005e9be:	jne    0x1005e9dd
1005e9c0:	inc    edi
1005e9c1:	test   DWORD PTR [ebp-0x18],0x7fffffff
1005e9c8:	jne    0x1005e9dd
1005e9ca:	cmp    DWORD PTR [ebp-0x1c],eax
1005e9cd:	jne    0x1005e9dd
1005e9cf:	cmp    DWORD PTR [ebp-0x20],eax
1005e9d2:	jne    0x1005e9dd
1005e9d4:	mov    WORD PTR [ebp-0x16],ax
1005e9d8:	jmp    0x1005ebb0
1005e9dd:	cmp    si,ax
1005e9e0:	jne    0x1005e9f6
1005e9e2:	inc    edi
1005e9e3:	test   DWORD PTR [ebp-0x28],0x7fffffff
1005e9ea:	jne    0x1005e9f6
1005e9ec:	cmp    DWORD PTR [ebp-0x2c],eax
1005e9ef:	jne    0x1005e9f6
1005e9f1:	cmp    DWORD PTR [ebp-0x30],eax
1005e9f4:	je     0x1005e9b3
1005e9f6:	and    DWORD PTR [ebp-0x54],0x0
1005e9fa:	lea    eax,[ebp-0xc]
1005e9fd:	mov    DWORD PTR [ebp-0x40],0x5
1005ea04:	mov    edx,DWORD PTR [ebp-0x54]
1005ea07:	mov    esi,DWORD PTR [ebp-0x40]
1005ea0a:	add    edx,edx
1005ea0c:	test   esi,esi
1005ea0e:	mov    DWORD PTR [ebp-0x50],esi
1005ea11:	jle    0x1005ea65
1005ea13:	lea    esi,[ebp-0x28]
1005ea16:	lea    edx,[ebp+edx*1-0x20]
1005ea1a:	mov    DWORD PTR [ebp-0x5c],esi
1005ea1d:	mov    DWORD PTR [ebp-0x48],edx
1005ea20:	mov    edx,DWORD PTR [ebp-0x5c]
1005ea23:	mov    esi,DWORD PTR [ebp-0x48]
1005ea26:	movzx  esi,WORD PTR [esi]
1005ea29:	movzx  edx,WORD PTR [edx]
1005ea2c:	and    DWORD PTR [ebp-0x44],0x0
1005ea30:	imul   edx,esi
1005ea33:	mov    esi,DWORD PTR [eax-0x4]
1005ea36:	lea    ebx,[esi+edx*1]
1005ea39:	cmp    ebx,esi
1005ea3b:	jb     0x1005ea41
1005ea3d:	cmp    ebx,edx
1005ea3f:	jae    0x1005ea48
1005ea41:	mov    DWORD PTR [ebp-0x44],0x1
1005ea48:	cmp    DWORD PTR [ebp-0x44],0x0
1005ea4c:	mov    DWORD PTR [eax-0x4],ebx
1005ea4f:	je     0x1005ea54
1005ea51:	inc    WORD PTR [eax]
1005ea54:	add    DWORD PTR [ebp-0x48],0x2
1005ea58:	sub    DWORD PTR [ebp-0x5c],0x2
1005ea5c:	dec    DWORD PTR [ebp-0x50]
1005ea5f:	cmp    DWORD PTR [ebp-0x50],0x0
1005ea63:	jg     0x1005ea20
1005ea65:	inc    eax
1005ea66:	inc    eax
1005ea67:	inc    DWORD PTR [ebp-0x54]
1005ea6a:	dec    DWORD PTR [ebp-0x40]
1005ea6d:	cmp    DWORD PTR [ebp-0x40],0x0
1005ea71:	jg     0x1005ea04
1005ea73:	add    edi,0xc002
1005ea79:	xor    eax,eax
1005ea7b:	cmp    di,ax
1005ea7e:	jle    0x1005eabc
1005ea80:	test   DWORD PTR [ebp-0x8],0x80000000
1005ea87:	jne    0x1005eab7
1005ea89:	mov    edx,DWORD PTR [ebp-0x10]
1005ea8c:	mov    ebx,DWORD PTR [ebp-0xc]
1005ea8f:	mov    esi,DWORD PTR [ebp-0xc]
1005ea92:	shl    DWORD PTR [ebp-0x10],1
1005ea95:	shr    edx,0x1f
1005ea98:	add    ebx,ebx
1005ea9a:	or     ebx,edx
1005ea9c:	mov    edx,DWORD PTR [ebp-0x8]
1005ea9f:	shr    esi,0x1f
1005eaa2:	add    edx,edx
1005eaa4:	or     edx,esi
1005eaa6:	add    edi,0xffff
1005eaac:	cmp    di,ax
1005eaaf:	mov    DWORD PTR [ebp-0xc],ebx
1005eab2:	mov    DWORD PTR [ebp-0x8],edx
1005eab5:	jg     0x1005ea80
1005eab7:	cmp    di,ax
1005eaba:	jg     0x1005eb0b
1005eabc:	add    edi,0xffff
1005eac2:	cmp    di,ax
1005eac5:	jge    0x1005eb0b
1005eac7:	mov    eax,edi
1005eac9:	neg    eax
1005eacb:	movzx  eax,ax
1005eace:	add    edi,eax
1005ead0:	test   BYTE PTR [ebp-0x10],0x1
1005ead4:	je     0x1005ead9
1005ead6:	inc    DWORD PTR [ebp-0x58]
1005ead9:	mov    edx,DWORD PTR [ebp-0x8]
1005eadc:	mov    ebx,DWORD PTR [ebp-0xc]
1005eadf:	mov    esi,DWORD PTR [ebp-0xc]
1005eae2:	shr    DWORD PTR [ebp-0x8],1
1005eae5:	shl    edx,0x1f
1005eae8:	shr    ebx,1
1005eaea:	or     ebx,edx
1005eaec:	mov    edx,DWORD PTR [ebp-0x10]
1005eaef:	shl    esi,0x1f
1005eaf2:	shr    edx,1
1005eaf4:	or     edx,esi
1005eaf6:	dec    eax
1005eaf7:	mov    DWORD PTR [ebp-0xc],ebx
1005eafa:	mov    DWORD PTR [ebp-0x10],edx
1005eafd:	jne    0x1005ead0
1005eaff:	xor    eax,eax
1005eb01:	cmp    DWORD PTR [ebp-0x58],eax
1005eb04:	je     0x1005eb0b
1005eb06:	or     WORD PTR [ebp-0x10],0x1
1005eb0b:	cmp    WORD PTR [ebp-0x10],0x8000
1005eb11:	ja     0x1005eb24
1005eb13:	mov    edx,DWORD PTR [ebp-0x10]
1005eb16:	and    edx,0x1ffff
1005eb1c:	cmp    edx,0x18000
1005eb22:	jne    0x1005eb55
1005eb24:	cmp    DWORD PTR [ebp-0xe],0xffffffff
1005eb28:	jne    0x1005eb52
1005eb2a:	cmp    DWORD PTR [ebp-0xa],0xffffffff
1005eb2e:	mov    DWORD PTR [ebp-0xe],eax
1005eb31:	jne    0x1005eb4d
1005eb33:	cmp    WORD PTR [ebp-0x6],0xffff
1005eb39:	mov    DWORD PTR [ebp-0xa],eax
1005eb3c:	jne    0x1005eb47
1005eb3e:	mov    WORD PTR [ebp-0x6],0x8000
1005eb44:	inc    edi
1005eb45:	jmp    0x1005eb55
1005eb47:	inc    WORD PTR [ebp-0x6]
1005eb4b:	jmp    0x1005eb55
1005eb4d:	inc    DWORD PTR [ebp-0xa]
1005eb50:	jmp    0x1005eb55
1005eb52:	inc    DWORD PTR [ebp-0xe]
1005eb55:	cmp    di,0x7fff
1005eb5a:	jb     0x1005eb7a
1005eb5c:	neg    cx
1005eb5f:	mov    DWORD PTR [ebp-0x1c],eax
1005eb62:	mov    DWORD PTR [ebp-0x20],eax
1005eb65:	sbb    ecx,ecx
1005eb67:	and    ecx,0x80000000
1005eb6d:	add    ecx,0x7fff8000
1005eb73:	mov    DWORD PTR [ebp-0x18],ecx
1005eb76:	xor    eax,eax
1005eb78:	jmp    0x1005ebb0
1005eb7a:	mov    ax,WORD PTR [ebp-0xe]
1005eb7e:	mov    WORD PTR [ebp-0x20],ax
1005eb82:	mov    eax,DWORD PTR [ebp-0xc]
1005eb85:	mov    DWORD PTR [ebp-0x1e],eax
1005eb88:	mov    eax,DWORD PTR [ebp-0x8]
1005eb8b:	or     edi,ecx
1005eb8d:	mov    DWORD PTR [ebp-0x1a],eax
1005eb90:	mov    WORD PTR [ebp-0x16],di
1005eb94:	jmp    0x1005eb76
1005eb96:	neg    cx
1005eb99:	sbb    ecx,ecx
1005eb9b:	and    ecx,0x80000000
1005eba1:	add    ecx,0x7fff8000
1005eba7:	mov    DWORD PTR [ebp-0x18],ecx
1005ebaa:	mov    DWORD PTR [ebp-0x1c],eax
1005ebad:	mov    DWORD PTR [ebp-0x20],eax
1005ebb0:	test   BYTE PTR [ebp+0x18],0x1
1005ebb4:	mov    edx,DWORD PTR [ebp-0x60]
1005ebb7:	mov    ecx,DWORD PTR [ebp-0x4c]
1005ebba:	mov    WORD PTR [edx],cx
1005ebbd:	je     0x1005ebf1
1005ebbf:	movsx  ecx,cx
1005ebc2:	add    DWORD PTR [ebp+0x14],ecx
1005ebc5:	cmp    DWORD PTR [ebp+0x14],eax
1005ebc8:	jg     0x1005ebf1
1005ebca:	and    WORD PTR [edx],0x0
1005ebce:	cmp    WORD PTR [ebp-0x6c],0x8000
1005ebd4:	mov    BYTE PTR [edx+0x3],0x1
1005ebd8:	setne  al
1005ebdb:	dec    al
1005ebdd:	and    al,0xd
1005ebdf:	add    al,0x20
1005ebe1:	mov    BYTE PTR [edx+0x2],al
1005ebe4:	mov    BYTE PTR [edx+0x4],0x30
1005ebe8:	mov    BYTE PTR [edx+0x5],0x0
1005ebec:	jmp    0x1005e5a0
1005ebf1:	push   0x15
1005ebf3:	pop    ecx
1005ebf4:	cmp    DWORD PTR [ebp+0x14],ecx
1005ebf7:	jle    0x1005ebfc
1005ebf9:	mov    DWORD PTR [ebp+0x14],ecx
1005ebfc:	mov    esi,DWORD PTR [ebp-0x18]
1005ebff:	shr    esi,0x10
1005ec02:	push   0x8
1005ec04:	sub    esi,0x3ffe
1005ec0a:	mov    WORD PTR [ebp-0x16],ax
1005ec0e:	pop    ebx
1005ec0f:	mov    eax,DWORD PTR [ebp-0x20]
1005ec12:	mov    edi,DWORD PTR [ebp-0x1c]
1005ec15:	mov    ecx,DWORD PTR [ebp-0x1c]
1005ec18:	shl    DWORD PTR [ebp-0x20],1
1005ec1b:	shr    eax,0x1f
1005ec1e:	add    edi,edi
1005ec20:	or     edi,eax
1005ec22:	mov    eax,DWORD PTR [ebp-0x18]
1005ec25:	shr    ecx,0x1f
1005ec28:	add    eax,eax
1005ec2a:	or     eax,ecx
1005ec2c:	dec    ebx
1005ec2d:	mov    DWORD PTR [ebp-0x1c],edi
1005ec30:	mov    DWORD PTR [ebp-0x18],eax
1005ec33:	jne    0x1005ec0f
1005ec35:	test   esi,esi
1005ec37:	jge    0x1005ec6b
1005ec39:	neg    esi
1005ec3b:	and    esi,0xff
1005ec41:	jle    0x1005ec6b
1005ec43:	mov    eax,DWORD PTR [ebp-0x18]
1005ec46:	mov    edi,DWORD PTR [ebp-0x1c]
1005ec49:	mov    ecx,DWORD PTR [ebp-0x1c]
1005ec4c:	shr    DWORD PTR [ebp-0x18],1
1005ec4f:	shl    eax,0x1f
1005ec52:	shr    edi,1
1005ec54:	or     edi,eax
1005ec56:	mov    eax,DWORD PTR [ebp-0x20]
1005ec59:	shl    ecx,0x1f
1005ec5c:	shr    eax,1
1005ec5e:	or     eax,ecx
1005ec60:	dec    esi
1005ec61:	test   esi,esi
1005ec63:	mov    DWORD PTR [ebp-0x1c],edi
1005ec66:	mov    DWORD PTR [ebp-0x20],eax
1005ec69:	jg     0x1005ec43
1005ec6b:	mov    eax,DWORD PTR [ebp+0x14]
1005ec6e:	inc    eax
1005ec6f:	test   eax,eax
1005ec71:	lea    ebx,[edx+0x4]
1005ec74:	mov    DWORD PTR [ebp-0x40],ebx
1005ec77:	mov    DWORD PTR [ebp-0x4c],eax
1005ec7a:	jle    0x1005ed35
1005ec80:	mov    edx,DWORD PTR [ebp-0x20]
1005ec83:	mov    eax,DWORD PTR [ebp-0x1c]
1005ec86:	lea    esi,[ebp-0x20]
1005ec89:	lea    edi,[ebp-0x3c]
1005ec8c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1005ec8d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1005ec8e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1005ec8f:	shl    DWORD PTR [ebp-0x20],1
1005ec92:	mov    edi,DWORD PTR [ebp-0x20]
1005ec95:	shl    DWORD PTR [ebp-0x20],1
1005ec98:	shr    edx,0x1f
1005ec9b:	lea    ecx,[eax+eax*1]
1005ec9e:	or     ecx,edx
1005eca0:	mov    edx,DWORD PTR [ebp-0x18]
1005eca3:	mov    esi,eax
1005eca5:	shr    esi,0x1f
1005eca8:	add    edx,edx
1005ecaa:	or     edx,esi
1005ecac:	mov    eax,ecx
1005ecae:	lea    esi,[ecx+ecx*1]
1005ecb1:	shr    eax,0x1f
1005ecb4:	lea    ecx,[edx+edx*1]
1005ecb7:	mov    edx,DWORD PTR [ebp-0x3c]
1005ecba:	shr    edi,0x1f
1005ecbd:	or     ecx,eax
1005ecbf:	mov    eax,DWORD PTR [ebp-0x20]
1005ecc2:	or     esi,edi
1005ecc4:	lea    edi,[edx+eax*1]
1005ecc7:	cmp    edi,eax
1005ecc9:	jb     0x1005eccf
1005eccb:	cmp    edi,edx
1005eccd:	jae    0x1005ece7
1005eccf:	lea    eax,[esi+0x1]
1005ecd2:	xor    edx,edx
1005ecd4:	cmp    eax,esi
1005ecd6:	jb     0x1005ecdd
1005ecd8:	cmp    eax,0x1
1005ecdb:	jae    0x1005ece0
1005ecdd:	xor    edx,edx
1005ecdf:	inc    edx
1005ece0:	test   edx,edx
1005ece2:	mov    esi,eax
1005ece4:	je     0x1005ece7
1005ece6:	inc    ecx
1005ece7:	mov    eax,DWORD PTR [ebp-0x38]
1005ecea:	lea    edx,[eax+esi*1]
1005eced:	cmp    edx,esi
1005ecef:	mov    DWORD PTR [ebp-0x44],edx
1005ecf2:	jb     0x1005ecf8
1005ecf4:	cmp    edx,eax
1005ecf6:	jae    0x1005ecf9
1005ecf8:	inc    ecx
1005ecf9:	add    ecx,DWORD PTR [ebp-0x34]
1005ecfc:	shr    edx,0x1f
1005ecff:	add    ecx,ecx
1005ed01:	or     ecx,edx
1005ed03:	lea    esi,[edi+edi*1]
1005ed06:	mov    DWORD PTR [ebp-0x20],esi
1005ed09:	mov    esi,DWORD PTR [ebp-0x44]
1005ed0c:	mov    DWORD PTR [ebp-0x18],ecx
1005ed0f:	shr    ecx,0x18
1005ed12:	add    esi,esi
1005ed14:	add    cl,0x30
1005ed17:	mov    eax,edi
1005ed19:	shr    eax,0x1f
1005ed1c:	or     esi,eax
1005ed1e:	mov    BYTE PTR [ebx],cl
1005ed20:	inc    ebx
1005ed21:	dec    DWORD PTR [ebp-0x4c]
1005ed24:	cmp    DWORD PTR [ebp-0x4c],0x0
1005ed28:	mov    DWORD PTR [ebp-0x1c],esi
1005ed2b:	mov    BYTE PTR [ebp-0x15],0x0
1005ed2f:	jg     0x1005ec80
1005ed35:	dec    ebx
1005ed36:	mov    al,BYTE PTR [ebx]
1005ed38:	dec    ebx
1005ed39:	cmp    al,0x35
1005ed3b:	jge    0x1005ed4b
1005ed3d:	mov    ecx,DWORD PTR [ebp-0x40]
1005ed40:	jmp    0x1005ed86
1005ed42:	cmp    BYTE PTR [ebx],0x39
1005ed45:	jne    0x1005ed50
1005ed47:	mov    BYTE PTR [ebx],0x30
1005ed4a:	dec    ebx
1005ed4b:	cmp    ebx,DWORD PTR [ebp-0x40]
1005ed4e:	jae    0x1005ed42
1005ed50:	cmp    ebx,DWORD PTR [ebp-0x40]
1005ed53:	mov    eax,DWORD PTR [ebp-0x60]
1005ed56:	jae    0x1005ed5c
1005ed58:	inc    ebx
1005ed59:	inc    WORD PTR [eax]
1005ed5c:	inc    BYTE PTR [ebx]
1005ed5e:	sub    bl,al
1005ed60:	sub    bl,0x3
1005ed63:	movsx  ecx,bl
1005ed66:	mov    BYTE PTR [eax+0x3],bl
1005ed69:	mov    BYTE PTR [ecx+eax*1+0x4],0x0
1005ed6e:	mov    eax,DWORD PTR [ebp-0x74]
1005ed71:	mov    ecx,DWORD PTR [ebp-0x4]
1005ed74:	pop    edi
1005ed75:	pop    esi
1005ed76:	xor    ecx,ebp
1005ed78:	pop    ebx
1005ed79:	call   0x10042f87
1005ed7e:	leave  
1005ed7f:	ret    
1005ed80:	cmp    BYTE PTR [ebx],0x30
1005ed83:	jne    0x1005ed8a
1005ed85:	dec    ebx
1005ed86:	cmp    ebx,ecx
1005ed88:	jae    0x1005ed80
1005ed8a:	cmp    ebx,ecx
1005ed8c:	mov    eax,DWORD PTR [ebp-0x60]
1005ed8f:	jae    0x1005ed5e
1005ed91:	and    WORD PTR [eax],0x0
1005ed95:	cmp    WORD PTR [ebp-0x6c],0x8000
1005ed9b:	mov    BYTE PTR [eax+0x3],0x1
1005ed9f:	setne  dl
1005eda2:	dec    dl
1005eda4:	and    dl,0xd
1005eda7:	add    dl,0x20
1005edaa:	mov    BYTE PTR [eax+0x2],dl
1005edad:	mov    BYTE PTR [ecx],0x30
1005edb0:	mov    BYTE PTR [eax+0x5],0x0
1005edb4:	jmp    0x1005e5a0
1005edb9:	xor    eax,eax
1005edbb:	test   bl,0x10
1005edbe:	je     0x1005edc1
1005edc0:	inc    eax
1005edc1:	test   bl,0x8
1005edc4:	je     0x1005edc9
1005edc6:	or     eax,0x4
1005edc9:	test   bl,0x4
1005edcc:	je     0x1005edd1
1005edce:	or     eax,0x8
1005edd1:	test   bl,0x2
1005edd4:	je     0x1005edd9
1005edd6:	or     eax,0x10
1005edd9:	test   bl,0x1
1005eddc:	je     0x1005ede1
1005edde:	or     eax,0x20
1005ede1:	test   ebx,0x80000
1005ede7:	je     0x1005edec
1005ede9:	or     eax,0x2
1005edec:	mov    ecx,ebx
1005edee:	mov    edx,0x300
1005edf3:	and    ecx,edx
1005edf5:	push   esi
1005edf6:	mov    esi,0x200
1005edfb:	je     0x1005ee20
1005edfd:	cmp    ecx,0x100
1005ee03:	je     0x1005ee1b
1005ee05:	cmp    ecx,esi
1005ee07:	je     0x1005ee14
1005ee09:	cmp    ecx,edx
1005ee0b:	jne    0x1005ee20
1005ee0d:	or     eax,0xc00
1005ee12:	jmp    0x1005ee20
1005ee14:	or     eax,0x800
1005ee19:	jmp    0x1005ee20
1005ee1b:	or     eax,0x400
1005ee20:	mov    ecx,ebx
1005ee22:	and    ecx,0x30000
1005ee28:	je     0x1005ee36
1005ee2a:	cmp    ecx,0x10000
1005ee30:	jne    0x1005ee38
1005ee32:	or     eax,esi
1005ee34:	jmp    0x1005ee38
1005ee36:	or     eax,edx
1005ee38:	test   ebx,0x40000
1005ee3e:	pop    esi
1005ee3f:	je     0x1005ee46
1005ee41:	or     eax,0x1000
1005ee46:	ret    
1005ee47:	xor    eax,eax
1005ee49:	test   dl,0x10
1005ee4c:	je     0x1005ee53
1005ee4e:	mov    eax,0x80
1005ee53:	test   dl,0x8
1005ee56:	push   ebx
1005ee57:	push   esi
1005ee58:	push   edi
1005ee59:	mov    ebx,0x200
1005ee5e:	je     0x1005ee62
1005ee60:	or     eax,ebx
1005ee62:	test   dl,0x4
1005ee65:	je     0x1005ee6c
1005ee67:	or     eax,0x400
1005ee6c:	test   dl,0x2
1005ee6f:	je     0x1005ee76
1005ee71:	or     eax,0x800
1005ee76:	test   dl,0x1
1005ee79:	je     0x1005ee80
1005ee7b:	or     eax,0x1000
1005ee80:	test   edx,0x80000
1005ee86:	mov    edi,0x100
1005ee8b:	je     0x1005ee8f
1005ee8d:	or     eax,edi
1005ee8f:	mov    ecx,edx
1005ee91:	mov    esi,0x300
1005ee96:	and    ecx,esi
1005ee98:	je     0x1005eeb9
1005ee9a:	cmp    ecx,edi
1005ee9c:	je     0x1005eeb4
1005ee9e:	cmp    ecx,ebx
1005eea0:	je     0x1005eead
1005eea2:	cmp    ecx,esi
1005eea4:	jne    0x1005eeb9
1005eea6:	or     eax,0x6000
1005eeab:	jmp    0x1005eeb9
1005eead:	or     eax,0x4000
1005eeb2:	jmp    0x1005eeb9
1005eeb4:	or     eax,0x2000
1005eeb9:	mov    ecx,0x3000000
1005eebe:	pop    edi
1005eebf:	and    edx,ecx
1005eec1:	cmp    edx,0x1000000
1005eec7:	pop    esi
1005eec8:	pop    ebx
1005eec9:	je     0x1005eee1
1005eecb:	cmp    edx,0x2000000
1005eed1:	je     0x1005eedd
1005eed3:	cmp    edx,ecx
1005eed5:	jne    0x1005eee6
1005eed7:	or     eax,0x8000
1005eedc:	ret    
1005eedd:	or     eax,0x40
1005eee0:	ret    
1005eee1:	or     eax,0x8040
1005eee6:	ret    
1005eee7:	sub    esp,0x10
1005eeea:	push   ebx
1005eeeb:	push   ebp
1005eeec:	push   esi
1005eeed:	push   edi
1005eeee:	fstcw  WORD PTR [esp+0x14]
1005eef3:	mov    ebx,DWORD PTR [esp+0x14]
1005eef7:	xor    edx,edx
1005eef9:	test   bl,0x1
1005eefc:	je     0x1005ef01
1005eefe:	push   0x10
1005ef00:	pop    edx
1005ef01:	test   bl,0x4
1005ef04:	je     0x1005ef09
1005ef06:	or     edx,0x8
1005ef09:	test   bl,0x8
1005ef0c:	je     0x1005ef11
1005ef0e:	or     edx,0x4
1005ef11:	test   bl,0x10
1005ef14:	je     0x1005ef19
1005ef16:	or     edx,0x2
1005ef19:	test   bl,0x20
1005ef1c:	je     0x1005ef21
1005ef1e:	or     edx,0x1
1005ef21:	test   bl,0x2
1005ef24:	je     0x1005ef2c
1005ef26:	or     edx,0x80000
1005ef2c:	movzx  ecx,bx
1005ef2f:	mov    eax,ecx
1005ef31:	mov    edi,0xc00
1005ef36:	and    eax,edi
1005ef38:	mov    ebp,0x300
1005ef3d:	mov    esi,0x200
1005ef42:	je     0x1005ef64
1005ef44:	cmp    eax,0x400
1005ef49:	je     0x1005ef5e
1005ef4b:	cmp    eax,0x800
1005ef50:	je     0x1005ef5a
1005ef52:	cmp    eax,edi
1005ef54:	jne    0x1005ef64
1005ef56:	or     edx,ebp
1005ef58:	jmp    0x1005ef64
1005ef5a:	or     edx,esi
1005ef5c:	jmp    0x1005ef64
1005ef5e:	or     edx,0x100
1005ef64:	and    ecx,ebp
1005ef66:	je     0x1005ef74
1005ef68:	cmp    ecx,esi
1005ef6a:	jne    0x1005ef7a
1005ef6c:	or     edx,0x10000
1005ef72:	jmp    0x1005ef7a
1005ef74:	or     edx,0x20000
1005ef7a:	test   bx,0x1000
1005ef7f:	je     0x1005ef87
1005ef81:	or     edx,0x40000
1005ef87:	mov    esi,DWORD PTR [esp+0x28]
1005ef8b:	mov    ecx,DWORD PTR [esp+0x24]
1005ef8f:	mov    eax,esi
1005ef91:	not    eax
1005ef93:	and    eax,edx
1005ef95:	and    ecx,esi
1005ef97:	or     eax,ecx
1005ef99:	cmp    eax,edx
1005ef9b:	mov    DWORD PTR [esp+0x1c],eax
1005ef9f:	je     0x1005f04f
1005efa5:	mov    ebx,eax
1005efa7:	call   0x1005edb9
1005efac:	movzx  eax,ax
1005efaf:	mov    DWORD PTR [esp+0x10],eax
1005efb3:	fldcw  WORD PTR [esp+0x10]
1005efb7:	fstcw  WORD PTR [esp+0x10]
1005efbc:	mov    ebx,DWORD PTR [esp+0x10]
1005efc0:	xor    edx,edx
1005efc2:	test   bl,0x1
1005efc5:	je     0x1005efca
1005efc7:	push   0x10
1005efc9:	pop    edx
1005efca:	test   bl,0x4
1005efcd:	je     0x1005efd2
1005efcf:	or     edx,0x8
1005efd2:	test   bl,0x8
1005efd5:	je     0x1005efda
1005efd7:	or     edx,0x4
1005efda:	test   bl,0x10
1005efdd:	je     0x1005efe2
1005efdf:	or     edx,0x2
1005efe2:	test   bl,0x20
1005efe5:	je     0x1005efea
1005efe7:	or     edx,0x1
1005efea:	test   bl,0x2
1005efed:	je     0x1005eff5
1005efef:	or     edx,0x80000
1005eff5:	movzx  ecx,bx
1005eff8:	mov    eax,ecx
1005effa:	and    eax,edi
1005effc:	je     0x1005f022
1005effe:	cmp    eax,0x400
1005f003:	je     0x1005f01c
1005f005:	cmp    eax,0x800
1005f00a:	je     0x1005f014
1005f00c:	cmp    eax,edi
1005f00e:	jne    0x1005f022
1005f010:	or     edx,ebp
1005f012:	jmp    0x1005f022
1005f014:	or     edx,0x200
1005f01a:	jmp    0x1005f022
1005f01c:	or     edx,0x100
1005f022:	and    ecx,ebp
1005f024:	je     0x1005f036
1005f026:	cmp    ecx,0x200
1005f02c:	jne    0x1005f03c
1005f02e:	or     edx,0x10000
1005f034:	jmp    0x1005f03c
1005f036:	or     edx,0x20000
1005f03c:	test   bx,0x1000
1005f041:	je     0x1005f049
1005f043:	or     edx,0x40000
1005f049:	mov    eax,edx
1005f04b:	mov    DWORD PTR [esp+0x1c],edx
1005f04f:	cmp    DWORD PTR ds:0x10082584,0x0
1005f056:	je     0x1005f1e2
1005f05c:	and    esi,0x308031f
1005f062:	mov    edi,esi
1005f064:	stmxcsr DWORD PTR [esp+0x18]
1005f069:	mov    eax,DWORD PTR [esp+0x18]
1005f06d:	xor    esi,esi
1005f06f:	test   al,al
1005f071:	jns    0x1005f076
1005f073:	push   0x10
1005f075:	pop    esi
1005f076:	test   ax,0x200
1005f07a:	je     0x1005f07f
1005f07c:	or     esi,0x8
1005f07f:	test   ax,0x400
1005f083:	je     0x1005f088
1005f085:	or     esi,0x4
1005f088:	test   ax,0x800
1005f08c:	je     0x1005f091
1005f08e:	or     esi,0x2
1005f091:	test   ax,0x1000
1005f095:	je     0x1005f09a
1005f097:	or     esi,0x1
1005f09a:	test   ax,0x100
1005f09e:	je     0x1005f0a6
1005f0a0:	or     esi,0x80000
1005f0a6:	mov    ecx,eax
1005f0a8:	mov    ebp,0x6000
1005f0ad:	and    ecx,ebp
1005f0af:	je     0x1005f0db
1005f0b1:	cmp    ecx,0x2000
1005f0b7:	je     0x1005f0d5
1005f0b9:	cmp    ecx,0x4000
1005f0bf:	je     0x1005f0cd
1005f0c1:	cmp    ecx,ebp
1005f0c3:	jne    0x1005f0db
1005f0c5:	or     esi,0x300
1005f0cb:	jmp    0x1005f0db
1005f0cd:	or     esi,0x200
1005f0d3:	jmp    0x1005f0db
1005f0d5:	or     esi,0x100
1005f0db:	mov    ebx,0x8040
1005f0e0:	and    eax,ebx
1005f0e2:	sub    eax,0x40
1005f0e5:	je     0x1005f103
1005f0e7:	sub    eax,0x7fc0
1005f0ec:	je     0x1005f0fb
1005f0ee:	sub    eax,0x40
1005f0f1:	jne    0x1005f109
1005f0f3:	or     esi,0x1000000
1005f0f9:	jmp    0x1005f109
1005f0fb:	or     esi,0x3000000
1005f101:	jmp    0x1005f109
1005f103:	or     esi,0x2000000
1005f109:	mov    edx,edi
1005f10b:	and    edi,DWORD PTR [esp+0x24]
1005f10f:	not    edx
1005f111:	and    edx,esi
1005f113:	or     edx,edi
1005f115:	cmp    edx,esi
1005f117:	jne    0x1005f120
1005f119:	mov    eax,esi
1005f11b:	jmp    0x1005f1cb
1005f120:	call   0x1005ee47
1005f125:	push   eax
1005f126:	mov    DWORD PTR [esp+0x2c],eax
1005f12a:	call   0x1005f3b6
1005f12f:	pop    ecx
1005f130:	stmxcsr DWORD PTR [esp+0x28]
1005f135:	mov    eax,DWORD PTR [esp+0x28]
1005f139:	xor    edx,edx
1005f13b:	test   al,al
1005f13d:	jns    0x1005f142
1005f13f:	push   0x10
1005f141:	pop    edx
1005f142:	mov    edi,0x200
1005f147:	test   edi,eax
1005f149:	je     0x1005f14e
1005f14b:	or     edx,0x8
1005f14e:	test   ax,0x400
1005f152:	je     0x1005f157
1005f154:	or     edx,0x4
1005f157:	test   ax,0x800
1005f15b:	je     0x1005f160
1005f15d:	or     edx,0x2
1005f160:	test   ax,0x1000
1005f164:	je     0x1005f169
1005f166:	or     edx,0x1
1005f169:	mov    esi,0x100
1005f16e:	test   esi,eax
1005f170:	je     0x1005f178
1005f172:	or     edx,0x80000
1005f178:	mov    ecx,eax
1005f17a:	and    ecx,ebp
1005f17c:	je     0x1005f1a0
1005f17e:	cmp    ecx,0x2000
1005f184:	je     0x1005f19e
1005f186:	cmp    ecx,0x4000
1005f18c:	je     0x1005f19a
1005f18e:	cmp    ecx,ebp
1005f190:	jne    0x1005f1a0
1005f192:	or     edx,0x300
1005f198:	jmp    0x1005f1a0
1005f19a:	or     edx,edi
1005f19c:	jmp    0x1005f1a0
1005f19e:	or     edx,esi
1005f1a0:	and    eax,ebx
1005f1a2:	sub    eax,0x40
1005f1a5:	je     0x1005f1c3
1005f1a7:	sub    eax,0x7fc0
1005f1ac:	je     0x1005f1bb
1005f1ae:	sub    eax,0x40
1005f1b1:	jne    0x1005f1c9
1005f1b3:	or     edx,0x1000000
1005f1b9:	jmp    0x1005f1c9
1005f1bb:	or     edx,0x3000000
1005f1c1:	jmp    0x1005f1c9
1005f1c3:	or     edx,0x2000000
1005f1c9:	mov    eax,edx
1005f1cb:	mov    ecx,DWORD PTR [esp+0x1c]
1005f1cf:	mov    edx,eax
1005f1d1:	xor    edx,ecx
1005f1d3:	or     eax,ecx
1005f1d5:	test   edx,0x8031f
1005f1db:	je     0x1005f1e2
1005f1dd:	or     eax,0x80000000
1005f1e2:	pop    edi
1005f1e3:	pop    esi
1005f1e4:	pop    ebp
1005f1e5:	pop    ebx
1005f1e6:	add    esp,0x10
1005f1e9:	ret    
1005f1ea:	push   ebp
1005f1eb:	mov    ebp,esp
1005f1ed:	sub    esp,0x18
1005f1f0:	mov    eax,ds:0x1007e030
1005f1f5:	xor    eax,ebp
1005f1f7:	mov    DWORD PTR [ebp-0x4],eax
1005f1fa:	mov    eax,DWORD PTR [ebp+0x10]
1005f1fd:	push   ebx
1005f1fe:	push   esi
1005f1ff:	xor    esi,esi
1005f201:	cmp    DWORD PTR [ebp+0xc],esi
1005f204:	push   edi
1005f205:	mov    DWORD PTR [ebp-0x18],0x404e
1005f20c:	mov    DWORD PTR [eax],esi
1005f20e:	mov    DWORD PTR [eax+0x4],esi
1005f211:	mov    DWORD PTR [eax+0x8],esi
1005f214:	jbe    0x1005f360
1005f21a:	mov    edx,DWORD PTR [eax]
1005f21c:	mov    ebx,DWORD PTR [eax+0x4]
1005f21f:	mov    esi,eax
1005f221:	lea    edi,[ebp-0x10]
1005f224:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1005f225:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1005f226:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1005f227:	mov    ecx,edx
1005f229:	shr    ecx,0x1f
1005f22c:	lea    edi,[edx+edx*1]
1005f22f:	lea    edx,[ebx+ebx*1]
1005f232:	or     edx,ecx
1005f234:	mov    ecx,DWORD PTR [eax+0x8]
1005f237:	mov    esi,ebx
1005f239:	shr    esi,0x1f
1005f23c:	add    ecx,ecx
1005f23e:	or     ecx,esi
1005f240:	mov    DWORD PTR [ebp-0x14],edi
1005f243:	mov    esi,edi
1005f245:	and    DWORD PTR [ebp-0x14],0x0
1005f249:	mov    ebx,edx
1005f24b:	shr    ebx,0x1f
1005f24e:	add    ecx,ecx
1005f250:	shr    edi,0x1f
1005f253:	or     ecx,ebx
1005f255:	mov    ebx,DWORD PTR [ebp-0x10]
1005f258:	add    esi,esi
1005f25a:	add    edx,edx
1005f25c:	or     edx,edi
1005f25e:	lea    edi,[esi+ebx*1]
1005f261:	cmp    edi,esi
1005f263:	mov    DWORD PTR [eax],esi
1005f265:	mov    DWORD PTR [eax+0x4],edx
1005f268:	mov    DWORD PTR [eax+0x8],ecx
1005f26b:	jb     0x1005f271
1005f26d:	cmp    edi,ebx
1005f26f:	jae    0x1005f278
1005f271:	mov    DWORD PTR [ebp-0x14],0x1
1005f278:	xor    ebx,ebx
1005f27a:	cmp    DWORD PTR [ebp-0x14],ebx
1005f27d:	mov    DWORD PTR [eax],edi
1005f27f:	je     0x1005f29b
1005f281:	lea    esi,[edx+0x1]
1005f284:	cmp    esi,edx
1005f286:	jb     0x1005f28d
1005f288:	cmp    esi,0x1
1005f28b:	jae    0x1005f290
1005f28d:	xor    ebx,ebx
1005f28f:	inc    ebx
1005f290:	test   ebx,ebx
1005f292:	mov    DWORD PTR [eax+0x4],esi
1005f295:	je     0x1005f29b
1005f297:	inc    ecx
1005f298:	mov    DWORD PTR [eax+0x8],ecx
1005f29b:	mov    ecx,DWORD PTR [eax+0x4]
1005f29e:	mov    edx,DWORD PTR [ebp-0xc]
1005f2a1:	lea    ebx,[ecx+edx*1]
1005f2a4:	xor    esi,esi
1005f2a6:	cmp    ebx,ecx
1005f2a8:	jb     0x1005f2ae
1005f2aa:	cmp    ebx,edx
1005f2ac:	jae    0x1005f2b1
1005f2ae:	xor    esi,esi
1005f2b0:	inc    esi
1005f2b1:	test   esi,esi
1005f2b3:	mov    DWORD PTR [eax+0x4],ebx
1005f2b6:	je     0x1005f2bb
1005f2b8:	inc    DWORD PTR [eax+0x8]
1005f2bb:	mov    ecx,DWORD PTR [ebp-0x8]
1005f2be:	add    DWORD PTR [eax+0x8],ecx
1005f2c1:	and    DWORD PTR [ebp-0x14],0x0
1005f2c5:	lea    ecx,[edi+edi*1]
1005f2c8:	mov    edx,edi
1005f2ca:	shr    edx,0x1f
1005f2cd:	lea    edi,[ebx+ebx*1]
1005f2d0:	or     edi,edx
1005f2d2:	mov    edx,DWORD PTR [eax+0x8]
1005f2d5:	mov    esi,ebx
1005f2d7:	shr    esi,0x1f
1005f2da:	lea    ebx,[edx+edx*1]
1005f2dd:	mov    edx,DWORD PTR [ebp+0x8]
1005f2e0:	or     ebx,esi
1005f2e2:	mov    DWORD PTR [eax],ecx
1005f2e4:	mov    DWORD PTR [eax+0x4],edi
1005f2e7:	mov    DWORD PTR [eax+0x8],ebx
1005f2ea:	movsx  edx,BYTE PTR [edx]
1005f2ed:	lea    esi,[ecx+edx*1]
1005f2f0:	cmp    esi,ecx
1005f2f2:	mov    DWORD PTR [ebp-0x10],edx
1005f2f5:	jb     0x1005f2fb
1005f2f7:	cmp    esi,edx
1005f2f9:	jae    0x1005f302
1005f2fb:	mov    DWORD PTR [ebp-0x14],0x1
1005f302:	cmp    DWORD PTR [ebp-0x14],0x0
1005f306:	mov    DWORD PTR [eax],esi
1005f308:	je     0x1005f326
1005f30a:	lea    ecx,[edi+0x1]
1005f30d:	xor    edx,edx
1005f30f:	cmp    ecx,edi
1005f311:	jb     0x1005f318
1005f313:	cmp    ecx,0x1
1005f316:	jae    0x1005f31b
1005f318:	xor    edx,edx
1005f31a:	inc    edx
1005f31b:	test   edx,edx
1005f31d:	mov    DWORD PTR [eax+0x4],ecx
1005f320:	je     0x1005f326
1005f322:	inc    ebx
1005f323:	mov    DWORD PTR [eax+0x8],ebx
1005f326:	dec    DWORD PTR [ebp+0xc]
1005f329:	inc    DWORD PTR [ebp+0x8]
1005f32c:	cmp    DWORD PTR [ebp+0xc],0x0
1005f330:	ja     0x1005f21a
1005f336:	xor    esi,esi
1005f338:	jmp    0x1005f360
1005f33a:	mov    ecx,DWORD PTR [eax+0x4]
1005f33d:	mov    edx,ecx
1005f33f:	shr    edx,0x10
1005f342:	mov    DWORD PTR [eax+0x8],edx
1005f345:	mov    edx,DWORD PTR [eax]
1005f347:	mov    edi,edx
1005f349:	shl    ecx,0x10
1005f34c:	shr    edi,0x10
1005f34f:	or     ecx,edi
1005f351:	shl    edx,0x10
1005f354:	add    DWORD PTR [ebp-0x18],0xfff0
1005f35b:	mov    DWORD PTR [eax+0x4],ecx
1005f35e:	mov    DWORD PTR [eax],edx
1005f360:	cmp    DWORD PTR [eax+0x8],esi
1005f363:	je     0x1005f33a
1005f365:	mov    ebx,0x8000
1005f36a:	test   DWORD PTR [eax+0x8],ebx
1005f36d:	jne    0x1005f39f
1005f36f:	mov    esi,DWORD PTR [eax]
1005f371:	mov    edi,DWORD PTR [eax+0x4]
1005f374:	add    DWORD PTR [ebp-0x18],0xffff
1005f37b:	mov    ecx,esi
1005f37d:	add    esi,esi
1005f37f:	shr    ecx,0x1f
1005f382:	mov    DWORD PTR [eax],esi
1005f384:	lea    esi,[edi+edi*1]
1005f387:	or     esi,ecx
1005f389:	mov    ecx,DWORD PTR [eax+0x8]
1005f38c:	mov    edx,edi
1005f38e:	shr    edx,0x1f
1005f391:	add    ecx,ecx
1005f393:	or     ecx,edx
1005f395:	test   ebx,ecx
1005f397:	mov    DWORD PTR [eax+0x4],esi
1005f39a:	mov    DWORD PTR [eax+0x8],ecx
1005f39d:	je     0x1005f36f
1005f39f:	mov    cx,WORD PTR [ebp-0x18]
1005f3a3:	mov    WORD PTR [eax+0xa],cx
1005f3a7:	mov    ecx,DWORD PTR [ebp-0x4]
1005f3aa:	pop    edi
1005f3ab:	pop    esi
1005f3ac:	xor    ecx,ebp
1005f3ae:	pop    ebx
1005f3af:	call   0x10042f87
1005f3b4:	leave  
1005f3b5:	ret    
1005f3b6:	push   0x8
1005f3b8:	push   0x10074d68
1005f3bd:	call   0x10046d84
1005f3c2:	xor    eax,eax
1005f3c4:	cmp    DWORD PTR ds:0x10082584,eax
1005f3ca:	je     0x1005f422
1005f3cc:	test   BYTE PTR [ebp+0x8],0x40
1005f3d0:	je     0x1005f41a
1005f3d2:	cmp    DWORD PTR ds:0x1007f4f4,eax
1005f3d8:	je     0x1005f41a
1005f3da:	mov    DWORD PTR [ebp-0x4],eax
1005f3dd:	ldmxcsr DWORD PTR [ebp+0x8]
1005f3e1:	jmp    0x1005f411
1005f3e3:	mov    eax,DWORD PTR [ebp-0x14]
1005f3e6:	mov    eax,DWORD PTR [eax]
1005f3e8:	mov    eax,DWORD PTR [eax]
1005f3ea:	cmp    eax,0xc0000005
1005f3ef:	je     0x1005f3fb
1005f3f1:	cmp    eax,0xc000001d
1005f3f6:	je     0x1005f3fb
1005f3f8:	xor    eax,eax
1005f3fa:	ret    
1005f3fb:	xor    eax,eax
1005f3fd:	inc    eax
1005f3fe:	ret    
1005f3ff:	mov    esp,DWORD PTR [ebp-0x18]
1005f402:	and    DWORD PTR ds:0x1007f4f4,0x0
1005f409:	and    DWORD PTR [ebp+0x8],0xffffffbf
1005f40d:	ldmxcsr DWORD PTR [ebp+0x8]
1005f411:	mov    DWORD PTR [ebp-0x4],0xfffffffe
1005f418:	jmp    0x1005f422
1005f41a:	and    DWORD PTR [ebp+0x8],0xffffffbf
1005f41e:	ldmxcsr DWORD PTR [ebp+0x8]
1005f422:	call   0x10046dc9
1005f427:	ret    
1005f428:	int3   
1005f429:	int3   
1005f42a:	int3   
1005f42b:	int3   
1005f42c:	int3   
1005f42d:	int3   
1005f42e:	int3   
1005f42f:	int3   
1005f430:	push   edi
1005f431:	push   esi
1005f432:	push   ebx
1005f433:	xor    edi,edi
1005f435:	mov    eax,DWORD PTR [esp+0x14]
1005f439:	or     eax,eax
1005f43b:	jge    0x1005f451
1005f43d:	inc    edi
1005f43e:	mov    edx,DWORD PTR [esp+0x10]
1005f442:	neg    eax
1005f444:	neg    edx
1005f446:	sbb    eax,0x0
1005f449:	mov    DWORD PTR [esp+0x14],eax
1005f44d:	mov    DWORD PTR [esp+0x10],edx
1005f451:	mov    eax,DWORD PTR [esp+0x1c]
1005f455:	or     eax,eax
1005f457:	jge    0x1005f46d
1005f459:	inc    edi
1005f45a:	mov    edx,DWORD PTR [esp+0x18]
1005f45e:	neg    eax
1005f460:	neg    edx
1005f462:	sbb    eax,0x0
1005f465:	mov    DWORD PTR [esp+0x1c],eax
1005f469:	mov    DWORD PTR [esp+0x18],edx
1005f46d:	or     eax,eax
1005f46f:	jne    0x1005f489
1005f471:	mov    ecx,DWORD PTR [esp+0x18]
1005f475:	mov    eax,DWORD PTR [esp+0x14]
1005f479:	xor    edx,edx
1005f47b:	div    ecx
1005f47d:	mov    ebx,eax
1005f47f:	mov    eax,DWORD PTR [esp+0x10]
1005f483:	div    ecx
1005f485:	mov    edx,ebx
1005f487:	jmp    0x1005f4ca
1005f489:	mov    ebx,eax
1005f48b:	mov    ecx,DWORD PTR [esp+0x18]
1005f48f:	mov    edx,DWORD PTR [esp+0x14]
1005f493:	mov    eax,DWORD PTR [esp+0x10]
1005f497:	shr    ebx,1
1005f499:	rcr    ecx,1
1005f49b:	shr    edx,1
1005f49d:	rcr    eax,1
1005f49f:	or     ebx,ebx
1005f4a1:	jne    0x1005f497
1005f4a3:	div    ecx
1005f4a5:	mov    esi,eax
1005f4a7:	mul    DWORD PTR [esp+0x1c]
1005f4ab:	mov    ecx,eax
1005f4ad:	mov    eax,DWORD PTR [esp+0x18]
1005f4b1:	mul    esi
1005f4b3:	add    edx,ecx
1005f4b5:	jb     0x1005f4c5
1005f4b7:	cmp    edx,DWORD PTR [esp+0x14]
1005f4bb:	ja     0x1005f4c5
1005f4bd:	jb     0x1005f4c6
1005f4bf:	cmp    eax,DWORD PTR [esp+0x10]
1005f4c3:	jbe    0x1005f4c6
1005f4c5:	dec    esi
1005f4c6:	xor    edx,edx
1005f4c8:	mov    eax,esi
1005f4ca:	dec    edi
1005f4cb:	jne    0x1005f4d4
1005f4cd:	neg    edx
1005f4cf:	neg    eax
1005f4d1:	sbb    edx,0x0
1005f4d4:	pop    ebx
1005f4d5:	pop    esi
1005f4d6:	pop    edi
1005f4d7:	ret    0x10
1005f4da:	int3   
1005f4db:	int3   
1005f4dc:	push   0x10046de0
1005f4e1:	push   DWORD PTR fs:0x0
1005f4e8:	mov    eax,DWORD PTR [esp+0x10]
1005f4ec:	mov    DWORD PTR [esp+0x10],ebp
1005f4f0:	lea    ebp,[esp+0x10]
1005f4f4:	sub    esp,eax
1005f4f6:	push   ebx
1005f4f7:	push   esi
1005f4f8:	push   edi
1005f4f9:	mov    eax,ds:0x1007e030
1005f4fe:	xor    DWORD PTR [ebp-0x4],eax
1005f501:	xor    eax,ebp
1005f503:	mov    DWORD PTR [ebp-0x1c],eax
1005f506:	push   eax
1005f507:	mov    DWORD PTR [ebp-0x18],esp
1005f50a:	push   DWORD PTR [ebp-0x8]
1005f50d:	mov    eax,DWORD PTR [ebp-0x4]
1005f510:	mov    DWORD PTR [ebp-0x4],0xfffffffe
1005f517:	mov    DWORD PTR [ebp-0x8],eax
1005f51a:	lea    eax,[ebp-0x10]
1005f51d:	mov    fs:0x0,eax
1005f523:	ret    
1005f524:	mov    ecx,DWORD PTR [ebp-0x1c]
1005f527:	xor    ecx,ebp
1005f529:	call   0x10042f87
1005f52e:	jmp    0x10046dc9
1005f533:	int3   
1005f534:	int3   
1005f535:	int3   
1005f536:	int3   
1005f537:	int3   
1005f538:	int3   
1005f539:	int3   
1005f53a:	int3   
1005f53b:	int3   
1005f53c:	int3   
1005f53d:	int3   
1005f53e:	int3   
1005f53f:	int3   
1005f540:	cmp    DWORD PTR ds:0x10082584,0x0
1005f547:	je     0x1005f576
1005f549:	push   ebp
1005f54a:	mov    ebp,esp
1005f54c:	sub    esp,0x8
1005f54f:	and    esp,0xfffffff8
1005f552:	fstp   QWORD PTR [esp]
1005f555:	cvttsd2si eax,QWORD PTR [esp]
1005f55a:	leave  
1005f55b:	ret    
1005f55c:	cmp    DWORD PTR ds:0x10082584,0x0
1005f563:	je     0x1005f576
1005f565:	sub    esp,0x4
1005f568:	fnstcw WORD PTR [esp]
1005f56b:	pop    eax
1005f56c:	and    ax,0x7f
1005f570:	cmp    ax,0x7f
1005f574:	je     0x1005f549
1005f576:	push   ebp
1005f577:	mov    ebp,esp
1005f579:	sub    esp,0x20
1005f57c:	and    esp,0xfffffff0
1005f57f:	fld    st(0)
1005f581:	fst    DWORD PTR [esp+0x18]
1005f585:	fistp  QWORD PTR [esp+0x10]
1005f589:	fild   QWORD PTR [esp+0x10]
1005f58d:	mov    edx,DWORD PTR [esp+0x18]
1005f591:	mov    eax,DWORD PTR [esp+0x10]
1005f595:	test   eax,eax
1005f597:	je     0x1005f5d5
1005f599:	fsubp  st(1),st
1005f59b:	test   edx,edx
1005f59d:	jns    0x1005f5bd
1005f59f:	fstp   DWORD PTR [esp]
1005f5a2:	mov    ecx,DWORD PTR [esp]
1005f5a5:	xor    ecx,0x80000000
1005f5ab:	add    ecx,0x7fffffff
1005f5b1:	adc    eax,0x0
1005f5b4:	mov    edx,DWORD PTR [esp+0x14]
1005f5b8:	adc    edx,0x0
1005f5bb:	jmp    0x1005f5e9
1005f5bd:	fstp   DWORD PTR [esp]
1005f5c0:	mov    ecx,DWORD PTR [esp]
1005f5c3:	add    ecx,0x7fffffff
1005f5c9:	sbb    eax,0x0
1005f5cc:	mov    edx,DWORD PTR [esp+0x14]
1005f5d0:	sbb    edx,0x0
1005f5d3:	jmp    0x1005f5e9
1005f5d5:	mov    edx,DWORD PTR [esp+0x14]
1005f5d9:	test   edx,0x7fffffff
1005f5df:	jne    0x1005f599
1005f5e1:	fstp   DWORD PTR [esp+0x18]
1005f5e5:	fstp   DWORD PTR [esp+0x18]
1005f5e9:	leave  
1005f5ea:	ret    
1005f5eb:	int3   
1005f5ec:	int3   
1005f5ed:	int3   
1005f5ee:	int3   
1005f5ef:	int3   
1005f5f0:	push   ebx
1005f5f1:	push   esi
1005f5f2:	mov    eax,DWORD PTR [esp+0x18]
1005f5f6:	or     eax,eax
1005f5f8:	jne    0x1005f612
1005f5fa:	mov    ecx,DWORD PTR [esp+0x14]
1005f5fe:	mov    eax,DWORD PTR [esp+0x10]
1005f602:	xor    edx,edx
1005f604:	div    ecx
1005f606:	mov    ebx,eax
1005f608:	mov    eax,DWORD PTR [esp+0xc]
1005f60c:	div    ecx
1005f60e:	mov    edx,ebx
1005f610:	jmp    0x1005f653
1005f612:	mov    ecx,eax
1005f614:	mov    ebx,DWORD PTR [esp+0x14]
1005f618:	mov    edx,DWORD PTR [esp+0x10]
1005f61c:	mov    eax,DWORD PTR [esp+0xc]
1005f620:	shr    ecx,1
1005f622:	rcr    ebx,1
1005f624:	shr    edx,1
1005f626:	rcr    eax,1
1005f628:	or     ecx,ecx
1005f62a:	jne    0x1005f620
1005f62c:	div    ebx
1005f62e:	mov    esi,eax
1005f630:	mul    DWORD PTR [esp+0x18]
1005f634:	mov    ecx,eax
1005f636:	mov    eax,DWORD PTR [esp+0x14]
1005f63a:	mul    esi
1005f63c:	add    edx,ecx
1005f63e:	jb     0x1005f64e
1005f640:	cmp    edx,DWORD PTR [esp+0x10]
1005f644:	ja     0x1005f64e
1005f646:	jb     0x1005f64f
1005f648:	cmp    eax,DWORD PTR [esp+0xc]
1005f64c:	jbe    0x1005f64f
1005f64e:	dec    esi
1005f64f:	xor    edx,edx
1005f651:	mov    eax,esi
1005f653:	pop    esi
1005f654:	pop    ebx
1005f655:	ret    0x10
1005f658:	int3   
1005f659:	int3   
1005f65a:	int3   
1005f65b:	int3   
1005f65c:	int3   
1005f65d:	int3   
1005f65e:	int3   
1005f65f:	int3   
1005f660:	mov    edx,DWORD PTR [esp+0x8]
1005f664:	lea    eax,[edx+0xc]
1005f667:	mov    ecx,DWORD PTR [edx-0x14]
1005f66a:	xor    ecx,eax
1005f66c:	call   0x10042f87
1005f671:	mov    eax,0x10074af0
1005f676:	jmp    0x100592c1
1005f67b:	mov    edx,DWORD PTR [esp+0x8]
1005f67f:	lea    eax,[edx+0xc]
1005f682:	mov    ecx,DWORD PTR [edx-0x14]
1005f685:	xor    ecx,eax
1005f687:	call   0x10042f87
1005f68c:	mov    eax,0x10074c60
1005f691:	jmp    0x100592c1
1005f696:	mov    ecx,DWORD PTR [ebp-0x10]
1005f699:	jmp    0x1002b0e9
1005f69e:	mov    edx,DWORD PTR [esp+0x8]
1005f6a2:	lea    eax,[edx+0xc]
1005f6a5:	mov    ecx,DWORD PTR [edx-0x14]
1005f6a8:	xor    ecx,eax
1005f6aa:	call   0x10042f87
1005f6af:	mov    eax,0x10074f6c
1005f6b4:	jmp    0x100592c1
1005f6b9:	mov    eax,DWORD PTR [ebp-0x10]
1005f6bc:	add    eax,0x4
1005f6bf:	jmp    0x1002335a
1005f6c4:	mov    edx,DWORD PTR [esp+0x8]
1005f6c8:	lea    eax,[edx+0xc]
1005f6cb:	mov    ecx,DWORD PTR [edx-0x14]
1005f6ce:	xor    ecx,eax
1005f6d0:	call   0x10042f87
1005f6d5:	mov    eax,0x10074f98
1005f6da:	jmp    0x100592c1
1005f6df:	lea    eax,[ebp+0x10]
1005f6e2:	jmp    0x1002335a
1005f6e7:	mov    edx,DWORD PTR [esp+0x8]
1005f6eb:	lea    eax,[edx+0xc]
1005f6ee:	mov    ecx,DWORD PTR [edx-0x10]
1005f6f1:	xor    ecx,eax
1005f6f3:	call   0x10042f87
1005f6f8:	mov    eax,0x10074fc4
1005f6fd:	jmp    0x100592c1
1005f702:	lea    eax,[ebp-0x10]
1005f705:	jmp    0x1002335a
1005f70a:	mov    edx,DWORD PTR [esp+0x8]
1005f70e:	lea    eax,[edx+0xc]
1005f711:	mov    ecx,DWORD PTR [edx-0x14]
1005f714:	xor    ecx,eax
1005f716:	call   0x10042f87
1005f71b:	mov    eax,0x10074ff0
1005f720:	jmp    0x100592c1
1005f725:	lea    eax,[ebp+0x8]
1005f728:	jmp    0x1002335a
1005f72d:	mov    edx,DWORD PTR [esp+0x8]
1005f731:	lea    eax,[edx+0xc]
1005f734:	mov    ecx,DWORD PTR [edx-0x10]
1005f737:	xor    ecx,eax
1005f739:	call   0x10042f87
1005f73e:	mov    eax,0x1007501c
1005f743:	jmp    0x100592c1
1005f748:	lea    eax,[ebp-0x28]
1005f74b:	jmp    0x1002335a
1005f750:	mov    edx,DWORD PTR [esp+0x8]
1005f754:	lea    eax,[edx+0xc]
1005f757:	mov    ecx,DWORD PTR [edx-0x30]
1005f75a:	xor    ecx,eax
1005f75c:	call   0x10042f87
1005f761:	mov    ecx,DWORD PTR [edx-0x4]
1005f764:	xor    ecx,eax
1005f766:	call   0x10042f87
1005f76b:	mov    eax,0x10075048
1005f770:	jmp    0x100592c1
1005f775:	push   DWORD PTR [ebp-0x10]
1005f778:	call   0x10042f82
1005f77d:	pop    ecx
1005f77e:	ret    
1005f77f:	mov    edx,DWORD PTR [esp+0x8]
1005f783:	lea    eax,[edx+0xc]
1005f786:	mov    ecx,DWORD PTR [edx-0x14]
1005f789:	xor    ecx,eax
1005f78b:	call   0x10042f87
1005f790:	mov    eax,0x10075074
1005f795:	jmp    0x100592c1
1005f79a:	int3   
1005f79b:	int3   
1005f79c:	int3   
1005f79d:	int3   
1005f79e:	int3   
1005f79f:	int3   
1005f7a0:	lea    eax,[ebp-0x10]
1005f7a3:	jmp    0x10009928
1005f7a8:	mov    edx,DWORD PTR [esp+0x8]
1005f7ac:	lea    eax,[edx-0x1c]
1005f7af:	mov    ecx,DWORD PTR [edx-0x20]
1005f7b2:	xor    ecx,eax
1005f7b4:	call   0x10042f87
1005f7b9:	mov    eax,0x100750a0
1005f7be:	jmp    0x100592c1
1005f7c3:	int3   
1005f7c4:	int3   
1005f7c5:	int3   
1005f7c6:	int3   
1005f7c7:	int3   
1005f7c8:	int3   
1005f7c9:	int3   
1005f7ca:	int3   
1005f7cb:	int3   
1005f7cc:	int3   
1005f7cd:	int3   
1005f7ce:	int3   
1005f7cf:	int3   
1005f7d0:	lea    ecx,[ebp-0x20]
1005f7d3:	jmp    0x1001b753
1005f7d8:	mov    edx,DWORD PTR [esp+0x8]
1005f7dc:	lea    eax,[edx-0x14]
1005f7df:	mov    ecx,DWORD PTR [edx-0x18]
1005f7e2:	xor    ecx,eax
1005f7e4:	call   0x10042f87
1005f7e9:	mov    eax,0x100750cc
1005f7ee:	jmp    0x100592c1
1005f7f3:	int3   
1005f7f4:	int3   
1005f7f5:	int3   
1005f7f6:	int3   
1005f7f7:	int3   
1005f7f8:	int3   
1005f7f9:	int3   
1005f7fa:	int3   
1005f7fb:	int3   
1005f7fc:	int3   
1005f7fd:	int3   
1005f7fe:	int3   
1005f7ff:	int3   
1005f800:	mov    eax,DWORD PTR [ebp-0x10]
1005f803:	and    eax,0x1
1005f806:	je     0x1005f818
1005f80c:	and    DWORD PTR [ebp-0x10],0xfffffffe
1005f810:	mov    edi,DWORD PTR [ebp+0x8]
1005f813:	jmp    0x100024f8
1005f818:	ret    
1005f819:	mov    edx,DWORD PTR [esp+0x8]
1005f81d:	lea    eax,[edx-0x8]
1005f820:	mov    ecx,DWORD PTR [edx-0xc]
1005f823:	xor    ecx,eax
1005f825:	call   0x10042f87
1005f82a:	mov    eax,0x100750f8
1005f82f:	jmp    0x100592c1
1005f834:	int3   
1005f835:	int3   
1005f836:	int3   
1005f837:	int3   
1005f838:	int3   
1005f839:	int3   
1005f83a:	int3   
1005f83b:	int3   
1005f83c:	int3   
1005f83d:	int3   
1005f83e:	int3   
1005f83f:	int3   
1005f840:	lea    eax,[ebp-0x54]
1005f843:	jmp    0x10009928
1005f848:	lea    eax,[ebp-0x4c]
1005f84b:	jmp    0x10009928
1005f850:	mov    edx,DWORD PTR [esp+0x8]
1005f854:	lea    eax,[edx-0x58]
1005f857:	mov    ecx,DWORD PTR [edx-0x5c]
1005f85a:	xor    ecx,eax
1005f85c:	call   0x10042f87
1005f861:	mov    eax,0x1007512c
1005f866:	jmp    0x100592c1
1005f86b:	int3   
1005f86c:	int3   
1005f86d:	int3   
1005f86e:	int3   
1005f86f:	int3   
1005f870:	lea    eax,[ebp-0x50]
1005f873:	jmp    0x10009928
1005f878:	lea    eax,[ebp-0x4c]
1005f87b:	jmp    0x10009928
1005f880:	mov    edx,DWORD PTR [esp+0x8]
1005f884:	lea    eax,[edx-0x5c]
1005f887:	mov    ecx,DWORD PTR [edx-0x60]
1005f88a:	xor    ecx,eax
1005f88c:	call   0x10042f87
1005f891:	mov    eax,0x10075160
1005f896:	jmp    0x100592c1
1005f89b:	mov    ecx,DWORD PTR [ebp+0x8]
1005f89e:	jmp    0x1002b0e9
1005f8a3:	mov    eax,DWORD PTR [ebp+0x8]
1005f8a6:	add    eax,0x4
1005f8a9:	jmp    0x1002d2d1
1005f8ae:	mov    edx,DWORD PTR [esp+0x8]
1005f8b2:	lea    eax,[edx+0xc]
1005f8b5:	mov    ecx,DWORD PTR [edx-0x10]
1005f8b8:	xor    ecx,eax
1005f8ba:	call   0x10042f87
1005f8bf:	mov    eax,0x10075194
1005f8c4:	jmp    0x100592c1
1005f8c9:	lea    ecx,[ebp-0x20]
1005f8cc:	jmp    0x1001b753
1005f8d1:	mov    edx,DWORD PTR [esp+0x8]
1005f8d5:	lea    eax,[edx+0xc]
1005f8d8:	mov    ecx,DWORD PTR [edx-0x24]
1005f8db:	xor    ecx,eax
1005f8dd:	call   0x10042f87
1005f8e2:	mov    eax,0x100751c0
1005f8e7:	jmp    0x100592c1
1005f8ec:	mov    edx,DWORD PTR [esp+0x8]
1005f8f0:	lea    eax,[edx+0xc]
1005f8f3:	mov    ecx,DWORD PTR [edx-0x14]
1005f8f6:	xor    ecx,eax
1005f8f8:	call   0x10042f87
1005f8fd:	mov    eax,0x10075218
1005f902:	jmp    0x100592c1
1005f907:	mov    edx,DWORD PTR [esp+0x8]
1005f90b:	lea    eax,[edx+0xc]
1005f90e:	mov    ecx,DWORD PTR [edx-0x1c]
1005f911:	xor    ecx,eax
1005f913:	call   0x10042f87
1005f918:	mov    eax,0x10075270
1005f91d:	jmp    0x100592c1
1005f922:	push   DWORD PTR [ebp-0x20]
1005f925:	call   0x100434b0
1005f92a:	pop    ecx
1005f92b:	ret    
1005f92c:	lea    eax,[ebp-0x14]
1005f92f:	jmp    0x1002b41b
1005f934:	mov    edx,DWORD PTR [esp+0x8]
1005f938:	lea    eax,[edx+0xc]
1005f93b:	mov    ecx,DWORD PTR [edx-0x28]
1005f93e:	xor    ecx,eax
1005f940:	call   0x10042f87
1005f945:	mov    eax,0x100752d8
1005f94a:	jmp    0x100592c1
1005f94f:	lea    eax,[ebp-0x10]
1005f952:	jmp    0x10009928
1005f957:	mov    edx,DWORD PTR [esp+0x8]
1005f95b:	lea    eax,[edx+0xc]
1005f95e:	mov    ecx,DWORD PTR [edx-0x18]
1005f961:	xor    ecx,eax
1005f963:	call   0x10042f87
1005f968:	mov    eax,0x10075324
1005f96d:	jmp    0x100592c1
1005f972:	push   DWORD PTR [ebp-0x14]
1005f975:	call   0x100434b0
1005f97a:	pop    ecx
1005f97b:	ret    
1005f97c:	lea    eax,[ebp+0x8]
1005f97f:	jmp    0x1002b41b
1005f984:	mov    edx,DWORD PTR [esp+0x8]
1005f988:	lea    eax,[edx+0xc]
1005f98b:	mov    ecx,DWORD PTR [edx-0x24]
1005f98e:	xor    ecx,eax
1005f990:	call   0x10042f87
1005f995:	mov    eax,0x1007538c
1005f99a:	jmp    0x100592c1
1005f99f:	mov    edx,DWORD PTR [esp+0x8]
1005f9a3:	lea    eax,[edx+0xc]
1005f9a6:	mov    ecx,DWORD PTR [edx-0x1c]
1005f9a9:	xor    ecx,eax
1005f9ab:	call   0x10042f87
1005f9b0:	mov    eax,0x100753e4
1005f9b5:	jmp    0x100592c1
1005f9ba:	mov    eax,DWORD PTR [ebp-0x10]
1005f9bd:	and    eax,0x1
1005f9c0:	je     0x1005f9d2
1005f9c6:	and    DWORD PTR [ebp-0x10],0xfffffffe
1005f9ca:	mov    edi,DWORD PTR [ebp+0x8]
1005f9cd:	jmp    0x100024f8
1005f9d2:	ret    
1005f9d3:	mov    edx,DWORD PTR [esp+0x8]
1005f9d7:	lea    eax,[edx+0xc]
1005f9da:	mov    ecx,DWORD PTR [edx-0x14]
1005f9dd:	xor    ecx,eax
1005f9df:	call   0x10042f87
1005f9e4:	mov    eax,0x10075410
1005f9e9:	jmp    0x100592c1
1005f9ee:	mov    edx,DWORD PTR [esp+0x8]
1005f9f2:	lea    eax,[edx+0xc]
1005f9f5:	mov    ecx,DWORD PTR [edx-0x1c]
1005f9f8:	xor    ecx,eax
1005f9fa:	call   0x10042f87
1005f9ff:	mov    eax,0x1007549c
1005fa04:	jmp    0x100592c1
1005fa09:	mov    ecx,DWORD PTR [ebp-0x10]
1005fa0c:	jmp    0x100430c0
1005fa11:	mov    edx,DWORD PTR [esp+0x8]
1005fa15:	lea    eax,[edx+0xc]
1005fa18:	mov    ecx,DWORD PTR [edx-0x14]
1005fa1b:	xor    ecx,eax
1005fa1d:	call   0x10042f87
1005fa22:	mov    eax,0x100754c8
1005fa27:	jmp    0x100592c1
1005fa2c:	jmp    0x1000206e
1005fa31:	mov    edx,DWORD PTR [esp+0x8]
1005fa35:	lea    eax,[edx+0xc]
1005fa38:	mov    ecx,DWORD PTR [edx-0x10]
1005fa3b:	xor    ecx,eax
1005fa3d:	call   0x10042f87
1005fa42:	mov    eax,0x100754f4
1005fa47:	jmp    0x100592c1
1005fa4c:	mov    edx,DWORD PTR [esp+0x8]
1005fa50:	lea    eax,[edx+0xc]
1005fa53:	mov    ecx,DWORD PTR [edx-0x18]
1005fa56:	xor    ecx,eax
1005fa58:	call   0x10042f87
1005fa5d:	mov    eax,0x1007554c
1005fa62:	jmp    0x100592c1
1005fa67:	mov    edx,DWORD PTR [esp+0x8]
1005fa6b:	lea    eax,[edx+0xc]
1005fa6e:	mov    ecx,DWORD PTR [edx-0x1c]
1005fa71:	xor    ecx,eax
1005fa73:	call   0x10042f87
1005fa78:	mov    eax,0x100755a4
1005fa7d:	jmp    0x100592c1
1005fa82:	mov    edx,DWORD PTR [esp+0x8]
1005fa86:	lea    eax,[edx+0xc]
1005fa89:	mov    ecx,DWORD PTR [edx-0x1c]
1005fa8c:	xor    ecx,eax
1005fa8e:	call   0x10042f87
1005fa93:	mov    eax,0x100755fc
1005fa98:	jmp    0x100592c1
1005fa9d:	mov    edx,DWORD PTR [esp+0x8]
1005faa1:	lea    eax,[edx+0xc]
1005faa4:	mov    ecx,DWORD PTR [edx-0x1c]
1005faa7:	xor    ecx,eax
1005faa9:	call   0x10042f87
1005faae:	mov    eax,0x10075654
1005fab3:	jmp    0x100592c1
1005fab8:	mov    ecx,DWORD PTR [ebp+0x8]
1005fabb:	jmp    0x10012ee9
1005fac0:	mov    ecx,DWORD PTR [ebp+0x8]
1005fac3:	add    ecx,0x1c
1005fac6:	jmp    0x10012ee9
1005facb:	mov    edx,DWORD PTR [esp+0x8]
1005facf:	lea    eax,[edx+0xc]
1005fad2:	mov    ecx,DWORD PTR [edx-0x10]
1005fad5:	xor    ecx,eax
1005fad7:	call   0x10042f87
1005fadc:	mov    eax,0x10075688
1005fae1:	jmp    0x100592c1
1005fae6:	mov    edx,DWORD PTR [esp+0x8]
1005faea:	lea    eax,[edx+0xc]
1005faed:	mov    ecx,DWORD PTR [edx-0x1c]
1005faf0:	xor    ecx,eax
1005faf2:	call   0x10042f87
1005faf7:	mov    eax,0x100756e0
1005fafc:	jmp    0x100592c1
1005fb01:	mov    edx,DWORD PTR [esp+0x8]
1005fb05:	lea    eax,[edx+0xc]
1005fb08:	mov    ecx,DWORD PTR [edx-0x1c]
1005fb0b:	xor    ecx,eax
1005fb0d:	call   0x10042f87
1005fb12:	mov    eax,0x10075738
1005fb17:	jmp    0x100592c1
1005fb1c:	lea    esi,[ebp-0x18]
1005fb1f:	jmp    0x1000772e
1005fb24:	mov    edx,DWORD PTR [esp+0x8]
1005fb28:	lea    eax,[edx+0xc]
1005fb2b:	mov    ecx,DWORD PTR [edx-0x20]
1005fb2e:	xor    ecx,eax
1005fb30:	call   0x10042f87
1005fb35:	mov    ecx,DWORD PTR [edx-0x8]
1005fb38:	xor    ecx,eax
1005fb3a:	call   0x10042f87
1005fb3f:	mov    eax,0x10075798
1005fb44:	jmp    0x100592c1
1005fb49:	mov    edx,DWORD PTR [esp+0x8]
1005fb4d:	lea    eax,[edx+0xc]
1005fb50:	mov    ecx,DWORD PTR [edx-0x1c]
1005fb53:	xor    ecx,eax
1005fb55:	call   0x10042f87
1005fb5a:	mov    eax,0x100757f0
1005fb5f:	jmp    0x100592c1
1005fb64:	mov    edx,DWORD PTR [esp+0x8]
1005fb68:	lea    eax,[edx+0xc]
1005fb6b:	mov    ecx,DWORD PTR [edx-0x1c]
1005fb6e:	xor    ecx,eax
1005fb70:	call   0x10042f87
1005fb75:	mov    eax,0x10075848
1005fb7a:	jmp    0x100592c1
1005fb7f:	lea    eax,[ebp-0x18]
1005fb82:	jmp    0x1002335a
1005fb87:	lea    eax,[ebp+0xc]
1005fb8a:	jmp    0x1002335a
1005fb8f:	lea    eax,[ebp-0x18]
1005fb92:	jmp    0x1002335a
1005fb97:	lea    eax,[ebp+0xc]
1005fb9a:	jmp    0x1002335a
1005fb9f:	lea    eax,[ebp-0x14]
1005fba2:	jmp    0x1002335a
1005fba7:	lea    eax,[ebp+0x10]
1005fbaa:	jmp    0x1002335a
1005fbaf:	lea    eax,[ebp-0x1c]
1005fbb2:	jmp    0x1002335a
1005fbb7:	mov    edx,DWORD PTR [esp+0x8]
1005fbbb:	lea    eax,[edx+0xc]
1005fbbe:	mov    ecx,DWORD PTR [edx-0x28]
1005fbc1:	xor    ecx,eax
1005fbc3:	call   0x10042f87
1005fbc8:	mov    eax,0x100758a4
1005fbcd:	jmp    0x100592c1
1005fbd2:	lea    eax,[ebp+0x8]
1005fbd5:	jmp    0x1002b41b
1005fbda:	mov    edx,DWORD PTR [esp+0x8]
1005fbde:	lea    eax,[edx+0xc]
1005fbe1:	mov    ecx,DWORD PTR [edx-0x14]
1005fbe4:	xor    ecx,eax
1005fbe6:	call   0x10042f87
1005fbeb:	mov    eax,0x100758d0
1005fbf0:	jmp    0x100592c1
1005fbf5:	lea    eax,[ebp-0x10]
1005fbf8:	jmp    0x1002b41b
1005fbfd:	mov    edx,DWORD PTR [esp+0x8]
1005fc01:	lea    eax,[edx+0xc]
1005fc04:	mov    ecx,DWORD PTR [edx-0x28]
1005fc07:	xor    ecx,eax
1005fc09:	call   0x10042f87
1005fc0e:	mov    ecx,DWORD PTR [edx+0x3f4]
1005fc14:	xor    ecx,eax
1005fc16:	call   0x10042f87
1005fc1b:	mov    eax,0x100758fc
1005fc20:	jmp    0x100592c1
1005fc25:	lea    ecx,[ebp-0x24]
1005fc28:	jmp    0x10010d7e
1005fc2d:	lea    eax,[ebp-0x10]
1005fc30:	jmp    0x1002335a
1005fc35:	lea    eax,[ebp-0x18]
1005fc38:	jmp    0x1002335a
1005fc3d:	lea    eax,[ebp-0x1c]
1005fc40:	jmp    0x1002335a
1005fc45:	mov    edx,DWORD PTR [esp+0x8]
1005fc49:	lea    eax,[edx+0xc]
1005fc4c:	mov    ecx,DWORD PTR [edx-0x28]
1005fc4f:	xor    ecx,eax
1005fc51:	call   0x10042f87
1005fc56:	mov    ecx,DWORD PTR [edx+0x214]
1005fc5c:	xor    ecx,eax
1005fc5e:	call   0x10042f87
1005fc63:	mov    eax,0x10075940
1005fc68:	jmp    0x100592c1
1005fc6d:	jmp    0x1000206e
1005fc72:	mov    edx,DWORD PTR [esp+0x8]
1005fc76:	lea    eax,[edx+0xc]
1005fc79:	mov    ecx,DWORD PTR [edx-0x18]
1005fc7c:	xor    ecx,eax
1005fc7e:	call   0x10042f87
1005fc83:	mov    eax,0x100759a0
1005fc88:	jmp    0x100592c1
1005fc8d:	jmp    0x1000206e
1005fc92:	mov    edx,DWORD PTR [esp+0x8]
1005fc96:	lea    eax,[edx+0xc]
1005fc99:	mov    ecx,DWORD PTR [edx-0x18]
1005fc9c:	xor    ecx,eax
1005fc9e:	call   0x10042f87
1005fca3:	mov    eax,0x10075a00
1005fca8:	jmp    0x100592c1
1005fcad:	lea    eax,[ebp+0x0]
1005fcb0:	jmp    0x10017a4a
1005fcb5:	lea    eax,[ebp+0x0]
1005fcb8:	jmp    0x10017a4a
1005fcbd:	mov    edx,DWORD PTR [esp+0x8]
1005fcc1:	lea    eax,[edx+0xc]
1005fcc4:	mov    ecx,DWORD PTR [edx-0x2c]
1005fcc7:	xor    ecx,eax
1005fcc9:	call   0x10042f87
1005fcce:	mov    ecx,DWORD PTR [edx+0x2110]
1005fcd4:	xor    ecx,eax
1005fcd6:	call   0x10042f87
1005fcdb:	mov    eax,0x10075a9c
1005fce0:	jmp    0x100592c1
1005fce5:	mov    ecx,DWORD PTR [ebp+0x8]
1005fce8:	jmp    0x10012ee9
1005fced:	mov    ecx,DWORD PTR [ebp+0x8]
1005fcf0:	add    ecx,0x1c
1005fcf3:	jmp    0x10012ee9
1005fcf8:	mov    ecx,DWORD PTR [ebp+0x8]
1005fcfb:	add    ecx,0x38
1005fcfe:	jmp    0x10012ee9
1005fd03:	mov    edx,DWORD PTR [esp+0x8]
1005fd07:	lea    eax,[edx+0xc]
1005fd0a:	mov    ecx,DWORD PTR [edx-0x10]
1005fd0d:	xor    ecx,eax
1005fd0f:	call   0x10042f87
1005fd14:	mov    eax,0x10075ad8
1005fd19:	jmp    0x100592c1
1005fd1e:	mov    ecx,DWORD PTR [ebp+0x8]
1005fd21:	jmp    0x10012ee9
1005fd26:	mov    ecx,DWORD PTR [ebp+0x8]
1005fd29:	add    ecx,0x1c
1005fd2c:	jmp    0x10012ee9
1005fd31:	mov    ecx,DWORD PTR [ebp+0x8]
1005fd34:	add    ecx,0x38
1005fd37:	jmp    0x10012ee9
1005fd3c:	mov    ecx,DWORD PTR [ebp+0x8]
1005fd3f:	add    ecx,0x54
1005fd42:	jmp    0x10012ee9
1005fd47:	mov    edx,DWORD PTR [esp+0x8]
1005fd4b:	lea    eax,[edx+0xc]
1005fd4e:	mov    ecx,DWORD PTR [edx-0x10]
1005fd51:	xor    ecx,eax
1005fd53:	call   0x10042f87
1005fd58:	mov    eax,0x10075b1c
1005fd5d:	jmp    0x100592c1
1005fd62:	mov    edx,DWORD PTR [esp+0x8]
1005fd66:	lea    eax,[edx+0xc]
1005fd69:	mov    ecx,DWORD PTR [edx-0x1c]
1005fd6c:	xor    ecx,eax
1005fd6e:	call   0x10042f87
1005fd73:	mov    eax,0x10075b74
1005fd78:	jmp    0x100592c1
1005fd7d:	mov    edx,DWORD PTR [esp+0x8]
1005fd81:	lea    eax,[edx+0xc]
1005fd84:	mov    ecx,DWORD PTR [edx-0x18]
1005fd87:	xor    ecx,eax
1005fd89:	call   0x10042f87
1005fd8e:	mov    eax,0x10075bcc
1005fd93:	jmp    0x100592c1
1005fd98:	mov    eax,DWORD PTR [ebp+0x8]
1005fd9b:	jmp    0x10009928
1005fda0:	mov    edx,DWORD PTR [esp+0x8]
1005fda4:	lea    eax,[edx+0xc]
1005fda7:	mov    ecx,DWORD PTR [edx-0x10]
1005fdaa:	xor    ecx,eax
1005fdac:	call   0x10042f87
1005fdb1:	mov    eax,0x10075bf8
1005fdb6:	jmp    0x100592c1
1005fdbb:	mov    edx,DWORD PTR [esp+0x8]
1005fdbf:	lea    eax,[edx+0xc]
1005fdc2:	mov    ecx,DWORD PTR [edx-0x18]
1005fdc5:	xor    ecx,eax
1005fdc7:	call   0x10042f87
1005fdcc:	mov    eax,0x10075c84
1005fdd1:	jmp    0x100592c1
1005fdd6:	jmp    0x1000206e
1005fddb:	mov    edx,DWORD PTR [esp+0x8]
1005fddf:	lea    eax,[edx+0xc]
1005fde2:	mov    ecx,DWORD PTR [edx-0x18]
1005fde5:	xor    ecx,eax
1005fde7:	call   0x10042f87
1005fdec:	mov    eax,0x10075ce4
1005fdf1:	jmp    0x100592c1
1005fdf6:	lea    esi,[ebp+0x8]
1005fdf9:	jmp    0x10004b69
1005fdfe:	mov    edx,DWORD PTR [esp+0x8]
1005fe02:	lea    eax,[edx+0xc]
1005fe05:	mov    ecx,DWORD PTR [edx-0x14]
1005fe08:	xor    ecx,eax
1005fe0a:	call   0x10042f87
1005fe0f:	mov    eax,0x10075d10
1005fe14:	jmp    0x100592c1
1005fe19:	mov    eax,DWORD PTR [ebp-0x10]
1005fe1c:	and    eax,0x1
1005fe1f:	je     0x1005fe31
1005fe25:	and    DWORD PTR [ebp-0x10],0xfffffffe
1005fe29:	mov    eax,DWORD PTR [ebp+0x8]
1005fe2c:	jmp    0x10002087
1005fe31:	ret    
1005fe32:	mov    edx,DWORD PTR [esp+0x8]
1005fe36:	lea    eax,[edx+0xc]
1005fe39:	mov    ecx,DWORD PTR [edx-0x1c]
1005fe3c:	xor    ecx,eax
1005fe3e:	call   0x10042f87
1005fe43:	mov    eax,0x10075d3c
1005fe48:	jmp    0x100592c1
1005fe4d:	lea    ecx,[ebp+0x8]
1005fe50:	jmp    0x10012ee9
1005fe55:	mov    ecx,DWORD PTR [ebp-0x10]
1005fe58:	jmp    0x10012ee9
1005fe5d:	mov    edx,DWORD PTR [esp+0x8]
1005fe61:	lea    eax,[edx+0xc]
1005fe64:	mov    ecx,DWORD PTR [edx-0x14]
1005fe67:	xor    ecx,eax
1005fe69:	call   0x10042f87
1005fe6e:	mov    eax,0x10075d70
1005fe73:	jmp    0x100592c1
1005fe78:	mov    ecx,DWORD PTR [ebp+0x8]
1005fe7b:	jmp    0x100430c0
1005fe80:	mov    edx,DWORD PTR [esp+0x8]
1005fe84:	lea    eax,[edx+0xc]
1005fe87:	mov    ecx,DWORD PTR [edx-0x10]
1005fe8a:	xor    ecx,eax
1005fe8c:	call   0x10042f87
1005fe91:	mov    eax,0x10075d9c
1005fe96:	jmp    0x100592c1
1005fe9b:	int3   
1005fe9c:	int3   
1005fe9d:	int3   
1005fe9e:	int3   
1005fe9f:	int3   
1005fea0:	mov    ecx,DWORD PTR [ebp+0x4]
1005fea3:	jmp    0x10012ee9
1005fea8:	mov    edx,DWORD PTR [esp+0x8]
1005feac:	lea    eax,[edx-0x4]
1005feaf:	mov    ecx,DWORD PTR [edx-0x8]
1005feb2:	xor    ecx,eax
1005feb4:	call   0x10042f87
1005feb9:	mov    eax,0x10075dc8
1005febe:	jmp    0x100592c1
1005fec3:	int3   
1005fec4:	int3   
1005fec5:	int3   
1005fec6:	int3   
1005fec7:	int3   
1005fec8:	int3   
1005fec9:	int3   
1005feca:	int3   
1005fecb:	int3   
1005fecc:	int3   
1005fecd:	int3   
1005fece:	int3   
1005fecf:	int3   
1005fed0:	lea    eax,[ebp-0x34]
1005fed3:	jmp    0x10009928
1005fed8:	mov    edx,DWORD PTR [esp+0x8]
1005fedc:	lea    eax,[edx-0x38]
1005fedf:	mov    ecx,DWORD PTR [edx-0x3c]
1005fee2:	xor    ecx,eax
1005fee4:	call   0x10042f87
1005fee9:	add    eax,0xc
1005feec:	mov    ecx,DWORD PTR [edx-0x8]
1005feef:	xor    ecx,eax
1005fef1:	call   0x10042f87
1005fef6:	mov    eax,0x10075df4
1005fefb:	jmp    0x100592c1
1005ff00:	mov    ecx,DWORD PTR [ebp-0x10]
1005ff03:	jmp    0x100430c0
1005ff08:	mov    edx,DWORD PTR [esp+0x8]
1005ff0c:	lea    eax,[edx-0xc]
1005ff0f:	mov    ecx,DWORD PTR [edx-0x10]
1005ff12:	xor    ecx,eax
1005ff14:	call   0x10042f87
1005ff19:	mov    eax,0x10075e20
1005ff1e:	jmp    0x100592c1
1005ff23:	int3   
1005ff24:	int3   
1005ff25:	int3   
1005ff26:	int3   
1005ff27:	int3   
1005ff28:	int3   
1005ff29:	int3   
1005ff2a:	int3   
1005ff2b:	int3   
1005ff2c:	int3   
1005ff2d:	int3   
1005ff2e:	int3   
1005ff2f:	int3   
1005ff30:	lea    ecx,[ebp-0x28]
1005ff33:	jmp    0x10012ee9
1005ff38:	mov    edx,DWORD PTR [esp+0x8]
1005ff3c:	lea    eax,[edx-0x28]
1005ff3f:	mov    ecx,DWORD PTR [edx-0x2c]
1005ff42:	xor    ecx,eax
1005ff44:	call   0x10042f87
1005ff49:	mov    eax,0x10075e4c
1005ff4e:	jmp    0x100592c1
1005ff53:	int3   
1005ff54:	int3   
1005ff55:	int3   
1005ff56:	int3   
1005ff57:	int3   
1005ff58:	int3   
1005ff59:	int3   
1005ff5a:	int3   
1005ff5b:	int3   
1005ff5c:	int3   
1005ff5d:	int3   
1005ff5e:	int3   
1005ff5f:	int3   
1005ff60:	lea    eax,[ebp-0x4c]
1005ff63:	jmp    0x10034420
1005ff68:	mov    edx,DWORD PTR [esp+0x8]
1005ff6c:	lea    eax,[edx-0x50]
1005ff6f:	mov    ecx,DWORD PTR [edx-0x54]
1005ff72:	xor    ecx,eax
1005ff74:	call   0x10042f87
1005ff79:	mov    eax,0x10075e78
1005ff7e:	jmp    0x100592c1
1005ff83:	int3   
1005ff84:	int3   
1005ff85:	int3   
1005ff86:	int3   
1005ff87:	int3   
1005ff88:	int3   
1005ff89:	int3   
1005ff8a:	int3   
1005ff8b:	int3   
1005ff8c:	int3   
1005ff8d:	int3   
1005ff8e:	int3   
1005ff8f:	int3   
1005ff90:	mov    eax,DWORD PTR [ebp-0x14]
1005ff93:	and    eax,0x1
1005ff96:	je     0x1005ffa8
1005ff9c:	and    DWORD PTR [ebp-0x14],0xfffffffe
1005ffa0:	mov    ecx,DWORD PTR [ebp-0x10]
1005ffa3:	jmp    0x10012ee9
1005ffa8:	ret    
1005ffa9:	mov    edx,DWORD PTR [esp+0x8]
1005ffad:	lea    eax,[edx-0x18]
1005ffb0:	mov    ecx,DWORD PTR [edx-0x1c]
1005ffb3:	xor    ecx,eax
1005ffb5:	call   0x10042f87
1005ffba:	mov    eax,0x10075ea4
1005ffbf:	jmp    0x100592c1
1005ffc4:	mov    edx,DWORD PTR [esp+0x8]
1005ffc8:	lea    eax,[edx+0xc]
1005ffcb:	mov    ecx,DWORD PTR [edx-0x18]
1005ffce:	xor    ecx,eax
1005ffd0:	call   0x10042f87
1005ffd5:	mov    eax,0x10075efc
1005ffda:	jmp    0x100592c1
1005ffdf:	mov    eax,DWORD PTR [ebp+0x8]
1005ffe2:	jmp    0x1002b41b
1005ffe7:	mov    edx,DWORD PTR [esp+0x8]
1005ffeb:	lea    eax,[edx+0xc]
1005ffee:	mov    ecx,DWORD PTR [edx-0x10]
1005fff1:	xor    ecx,eax
1005fff3:	call   0x10042f87
1005fff8:	mov    eax,0x10075f28
1005fffd:	jmp    0x100592c1
10060002:	jmp    0x1000206e
10060007:	mov    edx,DWORD PTR [esp+0x8]
1006000b:	lea    eax,[edx+0xc]
1006000e:	mov    ecx,DWORD PTR [edx-0x18]
10060011:	xor    ecx,eax
10060013:	call   0x10042f87
10060018:	mov    eax,0x10075f88
1006001d:	jmp    0x100592c1
10060022:	lea    ecx,[ebp-0x20]
10060025:	jmp    0x1001b753
1006002a:	mov    edx,DWORD PTR [esp+0x8]
1006002e:	lea    eax,[edx+0xc]
10060031:	mov    ecx,DWORD PTR [edx-0x24]
10060034:	xor    ecx,eax
10060036:	call   0x10042f87
1006003b:	mov    eax,0x1007601c
10060040:	jmp    0x100592c1
10060045:	lea    ecx,[ebp-0x38]
10060048:	jmp    0x1001b753
1006004d:	lea    eax,[ebp-0x28]
10060050:	jmp    0x1002b41b
10060055:	lea    esi,[ebp-0x28]
10060058:	jmp    0x1002db1f
1006005d:	mov    edx,DWORD PTR [esp+0x8]
10060061:	lea    eax,[edx-0x4c]
10060064:	mov    ecx,DWORD PTR [edx-0x50]
10060067:	xor    ecx,eax
10060069:	call   0x10042f87
1006006e:	mov    eax,0x10076058
10060073:	jmp    0x100592c1
10060078:	mov    eax,DWORD PTR [ebp+0x8]
1006007b:	jmp    0x1002335a
10060080:	mov    edx,DWORD PTR [esp+0x8]
10060084:	lea    eax,[edx+0xc]
10060087:	mov    ecx,DWORD PTR [edx-0x10]
1006008a:	xor    ecx,eax
1006008c:	call   0x10042f87
10060091:	mov    eax,0x10076084
10060096:	jmp    0x100592c1
1006009b:	lea    ecx,[ebp+0xc]
1006009e:	jmp    0x1001b753
100600a3:	lea    eax,[ebp-0x18]
100600a6:	jmp    0x1002b41b
100600ab:	lea    eax,[ebp-0x14]
100600ae:	jmp    0x1002b41b
100600b3:	mov    edx,DWORD PTR [esp+0x8]
100600b7:	lea    eax,[edx+0xc]
100600ba:	mov    ecx,DWORD PTR [edx-0x1c]
100600bd:	xor    ecx,eax
100600bf:	call   0x10042f87
100600c4:	mov    ecx,DWORD PTR [edx-0x4]
100600c7:	xor    ecx,eax
100600c9:	call   0x10042f87
100600ce:	mov    eax,0x100760c0
100600d3:	jmp    0x100592c1
100600d8:	lea    eax,[ebp-0x18]
100600db:	jmp    0x10009d4e
100600e0:	lea    eax,[ebp-0x14]
100600e3:	jmp    0x10039f30
100600e8:	mov    edx,DWORD PTR [esp+0x8]
100600ec:	lea    eax,[edx+0xc]
100600ef:	mov    ecx,DWORD PTR [edx-0x1c]
100600f2:	xor    ecx,eax
100600f4:	call   0x10042f87
100600f9:	mov    eax,0x100760f4
100600fe:	jmp    0x100592c1
10060103:	mov    edx,DWORD PTR [esp+0x8]
10060107:	lea    eax,[edx+0xc]
1006010a:	mov    ecx,DWORD PTR [edx-0x1c]
1006010d:	xor    ecx,eax
1006010f:	call   0x10042f87
10060114:	mov    eax,0x1007614c
10060119:	jmp    0x100592c1
1006011e:	mov    eax,DWORD PTR [ebp-0x10]
10060121:	and    eax,0x1
10060124:	je     0x10060136
1006012a:	and    DWORD PTR [ebp-0x10],0xfffffffe
1006012e:	lea    eax,[ebp+0x8]
10060131:	jmp    0x1002335a
10060136:	ret    
10060137:	mov    edx,DWORD PTR [esp+0x8]
1006013b:	lea    eax,[edx+0xc]
1006013e:	mov    ecx,DWORD PTR [edx-0x18]
10060141:	xor    ecx,eax
10060143:	call   0x10042f87
10060148:	mov    eax,0x10076178
1006014d:	jmp    0x100592c1
10060152:	mov    edx,DWORD PTR [esp+0x8]
10060156:	lea    eax,[edx+0xc]
10060159:	mov    ecx,DWORD PTR [edx-0x1c]
1006015c:	xor    ecx,eax
1006015e:	call   0x10042f87
10060163:	mov    eax,0x100761d0
10060168:	jmp    0x100592c1
1006016d:	jmp    0x1000206e
10060172:	mov    edx,DWORD PTR [esp+0x8]
10060176:	lea    eax,[edx+0xc]
10060179:	mov    ecx,DWORD PTR [edx-0x18]
1006017c:	xor    ecx,eax
1006017e:	call   0x10042f87
10060183:	mov    eax,0x10076230
10060188:	jmp    0x100592c1
1006018d:	mov    eax,DWORD PTR [ebp-0x10]
10060190:	add    eax,0x8
10060193:	jmp    0x10021291
10060198:	mov    edx,DWORD PTR [esp+0x8]
1006019c:	lea    eax,[edx+0xc]
1006019f:	mov    ecx,DWORD PTR [edx-0x14]
100601a2:	xor    ecx,eax
100601a4:	call   0x10042f87
100601a9:	mov    eax,0x1007625c
100601ae:	jmp    0x100592c1
100601b3:	mov    eax,DWORD PTR [ebp+0x8]
100601b6:	add    eax,0x8
100601b9:	jmp    0x10021291
100601be:	mov    edx,DWORD PTR [esp+0x8]
100601c2:	lea    eax,[edx+0xc]
100601c5:	mov    ecx,DWORD PTR [edx-0x10]
100601c8:	xor    ecx,eax
100601ca:	call   0x10042f87
100601cf:	mov    eax,0x10076288
100601d4:	jmp    0x100592c1
100601d9:	push   DWORD PTR [ebp-0x18]
100601dc:	call   0x10042f82
100601e1:	pop    ecx
100601e2:	ret    
100601e3:	mov    edx,DWORD PTR [esp+0x8]
100601e7:	lea    eax,[edx+0xc]
100601ea:	mov    ecx,DWORD PTR [edx-0x20]
100601ed:	xor    ecx,eax
100601ef:	call   0x10042f87
100601f4:	mov    eax,0x100762e8
100601f9:	jmp    0x100592c1
100601fe:	lea    esi,[ebp-0x28]
10060201:	jmp    0x1002043c
10060206:	lea    eax,[ebp-0x14]
10060209:	jmp    0x1002335a
1006020e:	lea    eax,[ebp-0x20]
10060211:	jmp    0x1002b41b
10060216:	lea    esi,[ebp-0x2c]
10060219:	jmp    0x1000772e
1006021e:	lea    eax,[ebp-0x1c]
10060221:	jmp    0x1002335a
10060226:	mov    edx,DWORD PTR [esp+0x8]
1006022a:	lea    eax,[edx+0xc]
1006022d:	mov    ecx,DWORD PTR [edx-0x30]
10060230:	xor    ecx,eax
10060232:	call   0x10042f87
10060237:	mov    ecx,DWORD PTR [edx-0x4]
1006023a:	xor    ecx,eax
1006023c:	call   0x10042f87
10060241:	mov    eax,0x10076334
10060246:	jmp    0x100592c1
1006024b:	lea    esi,[ebp-0x24]
1006024e:	jmp    0x1002043c
10060253:	lea    eax,[ebp-0x14]
10060256:	jmp    0x1002335a
1006025b:	lea    esi,[ebp-0x28]
1006025e:	jmp    0x1000772e
10060263:	lea    eax,[ebp-0x18]
10060266:	jmp    0x1002335a
1006026b:	mov    edx,DWORD PTR [esp+0x8]
1006026f:	lea    eax,[edx+0xc]
10060272:	mov    ecx,DWORD PTR [edx-0x2c]
10060275:	xor    ecx,eax
10060277:	call   0x10042f87
1006027c:	mov    ecx,DWORD PTR [edx-0x4]
1006027f:	xor    ecx,eax
10060281:	call   0x10042f87
10060286:	mov    eax,0x10076378
1006028b:	jmp    0x100592c1
10060290:	lea    eax,[ebp+0x8]
10060293:	jmp    0x1002b41b
10060298:	lea    eax,[ebp+0x10]
1006029b:	jmp    0x1002b41b
100602a0:	mov    edx,DWORD PTR [esp+0x8]
100602a4:	lea    eax,[edx+0xc]
100602a7:	mov    ecx,DWORD PTR [edx-0x14]
100602aa:	xor    ecx,eax
100602ac:	call   0x10042f87
100602b1:	mov    eax,0x100763ac
100602b6:	jmp    0x100592c1
100602bb:	lea    eax,[ebp-0x40]
100602be:	jmp    0x1002335a
100602c3:	lea    eax,[ebp-0x3c]
100602c6:	jmp    0x1002335a
100602cb:	lea    eax,[ebp-0x44]
100602ce:	jmp    0x1002335a
100602d3:	lea    eax,[ebp-0x44]
100602d6:	jmp    0x1002335a
100602db:	lea    ecx,[ebp-0x20]
100602de:	jmp    0x1001b753
100602e3:	lea    ecx,[ebp-0x30]
100602e6:	jmp    0x1001b753
100602eb:	mov    edx,DWORD PTR [esp+0x8]
100602ef:	lea    eax,[edx-0x4c]
100602f2:	mov    ecx,DWORD PTR [edx-0x50]
100602f5:	xor    ecx,eax
100602f7:	call   0x10042f87
100602fc:	mov    eax,0x10076400
10060301:	jmp    0x100592c1
10060306:	lea    esi,[ebp-0x78]
10060309:	jmp    0x1001a7ad
1006030e:	mov    edx,DWORD PTR [esp+0x8]
10060312:	lea    eax,[edx+0xc]
10060315:	mov    ecx,DWORD PTR [edx-0x8c]
1006031b:	xor    ecx,eax
1006031d:	call   0x10042f87
10060322:	mov    ecx,DWORD PTR [edx-0x4]
10060325:	xor    ecx,eax
10060327:	call   0x10042f87
1006032c:	mov    eax,0x1007642c
10060331:	jmp    0x100592c1
10060336:	mov    edx,DWORD PTR [esp+0x8]
1006033a:	lea    eax,[edx+0xc]
1006033d:	mov    ecx,DWORD PTR [edx-0x20]
10060340:	xor    ecx,eax
10060342:	call   0x10042f87
10060347:	mov    eax,0x10076484
1006034c:	jmp    0x100592c1
10060351:	mov    edx,DWORD PTR [esp+0x8]
10060355:	lea    eax,[edx+0xc]
10060358:	mov    ecx,DWORD PTR [edx-0x18]
1006035b:	xor    ecx,eax
1006035d:	call   0x10042f87
10060362:	mov    eax,0x100764dc
10060367:	jmp    0x100592c1
1006036c:	lea    ecx,[ebp-0x28]
1006036f:	jmp    0x10012ee9
10060374:	mov    edx,DWORD PTR [esp+0x8]
10060378:	lea    eax,[edx+0xc]
1006037b:	mov    ecx,DWORD PTR [edx-0x54]
1006037e:	xor    ecx,eax
10060380:	call   0x10042f87
10060385:	mov    eax,0x10076508
1006038a:	jmp    0x100592c1
1006038f:	lea    esi,[ebp-0x444]
10060395:	jmp    0x10014637
1006039a:	lea    esi,[ebp-0x440]
100603a0:	jmp    0x10014637
100603a5:	mov    edx,DWORD PTR [esp+0x8]
100603a9:	lea    eax,[edx-0x444]
100603af:	mov    ecx,DWORD PTR [edx-0x448]
100603b5:	xor    ecx,eax
100603b7:	call   0x10042f87
100603bc:	add    eax,0xc
100603bf:	mov    ecx,DWORD PTR [edx-0x8]
100603c2:	xor    ecx,eax
100603c4:	call   0x10042f87
100603c9:	mov    eax,0x1007653c
100603ce:	jmp    0x100592c1
100603d3:	lea    esi,[ebp-0x2c]
100603d6:	jmp    0x10017a3e
100603db:	lea    esi,[ebp-0x28]
100603de:	jmp    0x10017a3e
100603e3:	mov    edx,DWORD PTR [esp+0x8]
100603e7:	lea    eax,[edx+0xc]
100603ea:	mov    ecx,DWORD PTR [edx-0x30]
100603ed:	xor    ecx,eax
100603ef:	call   0x10042f87
100603f4:	mov    eax,0x100765d8
100603f9:	jmp    0x100592c1
100603fe:	lea    esi,[ebp-0x9c]
10060404:	jmp    0x1000bcad
10060409:	mov    edx,DWORD PTR [esp+0x8]
1006040d:	lea    eax,[edx+0xc]
10060410:	mov    ecx,DWORD PTR [edx-0xa4]
10060416:	xor    ecx,eax
10060418:	call   0x10042f87
1006041d:	mov    ecx,DWORD PTR [edx-0x4]
10060420:	xor    ecx,eax
10060422:	call   0x10042f87
10060427:	mov    eax,0x10076604
1006042c:	jmp    0x100592c1
10060431:	mov    ecx,DWORD PTR [ebp+0x8]
10060434:	jmp    0x10012ee9
10060439:	mov    ecx,DWORD PTR [ebp+0x8]
1006043c:	add    ecx,0x1c
1006043f:	jmp    0x10012ee9
10060444:	mov    ecx,DWORD PTR [ebp+0x8]
10060447:	add    ecx,0x38
1006044a:	jmp    0x10012ee9
1006044f:	mov    ecx,DWORD PTR [ebp+0x8]
10060452:	add    ecx,0x54
10060455:	jmp    0x10012ee9
1006045a:	mov    ecx,DWORD PTR [ebp+0x8]
1006045d:	add    ecx,0x70
10060460:	jmp    0x10012ee9
10060465:	mov    edx,DWORD PTR [esp+0x8]
10060469:	lea    eax,[edx+0xc]
1006046c:	mov    ecx,DWORD PTR [edx-0x10]
1006046f:	xor    ecx,eax
10060471:	call   0x10042f87
10060476:	mov    eax,0x10076650
1006047b:	jmp    0x100592c1
10060480:	lea    esi,[ebp-0x20]
10060483:	jmp    0x10011ee7
10060488:	mov    edx,DWORD PTR [esp+0x8]
1006048c:	lea    eax,[edx+0xc]
1006048f:	mov    ecx,DWORD PTR [edx-0x24]
10060492:	xor    ecx,eax
10060494:	call   0x10042f87
10060499:	mov    eax,0x1007667c
1006049e:	jmp    0x100592c1
100604a3:	lea    ecx,[ebp-0x28]
100604a6:	jmp    0x10012ee9
100604ab:	mov    edx,DWORD PTR [esp+0x8]
100604af:	lea    eax,[edx+0xc]
100604b2:	mov    ecx,DWORD PTR [edx-0x2c]
100604b5:	xor    ecx,eax
100604b7:	call   0x10042f87
100604bc:	mov    eax,0x100766a8
100604c1:	jmp    0x100592c1
100604c6:	mov    edx,DWORD PTR [esp+0x8]
100604ca:	lea    eax,[edx+0xc]
100604cd:	mov    ecx,DWORD PTR [edx-0x18]
100604d0:	xor    ecx,eax
100604d2:	call   0x10042f87
100604d7:	mov    eax,0x10076700
100604dc:	jmp    0x100592c1
100604e1:	lea    ecx,[ebp-0x30]
100604e4:	jmp    0x10012ee9
100604e9:	mov    edx,DWORD PTR [esp+0x8]
100604ed:	lea    eax,[edx+0xc]
100604f0:	mov    ecx,DWORD PTR [edx-0x3c]
100604f3:	xor    ecx,eax
100604f5:	call   0x10042f87
100604fa:	mov    ecx,DWORD PTR [edx-0x8]
100604fd:	xor    ecx,eax
100604ff:	call   0x10042f87
10060504:	mov    eax,0x10076760
10060509:	jmp    0x100592c1
1006050e:	mov    edx,DWORD PTR [esp+0x8]
10060512:	lea    eax,[edx+0xc]
10060515:	mov    ecx,DWORD PTR [edx-0x34]
10060518:	xor    ecx,eax
1006051a:	call   0x10042f87
1006051f:	mov    eax,0x100767ec
10060524:	jmp    0x100592c1
10060529:	mov    edx,DWORD PTR [esp+0x8]
1006052d:	lea    eax,[edx+0xc]
10060530:	mov    ecx,DWORD PTR [edx-0x20]
10060533:	xor    ecx,eax
10060535:	call   0x10042f87
1006053a:	mov    eax,0x10076844
1006053f:	jmp    0x100592c1
10060544:	mov    edx,DWORD PTR [esp+0x8]
10060548:	lea    eax,[edx+0xc]
1006054b:	mov    ecx,DWORD PTR [edx-0x18]
1006054e:	xor    ecx,eax
10060550:	call   0x10042f87
10060555:	mov    eax,0x1007689c
1006055a:	jmp    0x100592c1
1006055f:	lea    ecx,[ebp-0x44]
10060562:	jmp    0x10012ee9
10060567:	lea    ecx,[ebp-0x28]
1006056a:	jmp    0x10012ee9
1006056f:	lea    ecx,[ebp-0x28]
10060572:	jmp    0x10012ee9
10060577:	lea    ecx,[ebp-0x44]
1006057a:	jmp    0x10012ee9
1006057f:	lea    ecx,[ebp-0x7c]
10060582:	jmp    0x10012ee9
10060587:	lea    ecx,[ebp-0x60]
1006058a:	jmp    0x10012ee9
1006058f:	mov    edx,DWORD PTR [esp+0x8]
10060593:	lea    eax,[edx+0xc]
10060596:	mov    ecx,DWORD PTR [edx-0x84]
1006059c:	xor    ecx,eax
1006059e:	call   0x10042f87
100605a3:	mov    eax,0x100768f0
100605a8:	jmp    0x100592c1
100605ad:	mov    eax,DWORD PTR [ebp+0x8]
100605b0:	jmp    0x1000991a
100605b5:	mov    esi,DWORD PTR [ebp+0x8]
100605b8:	add    esi,0x4
100605bb:	jmp    0x10011ee7
100605c0:	mov    edx,DWORD PTR [esp+0x8]
100605c4:	lea    eax,[edx+0xc]
100605c7:	mov    ecx,DWORD PTR [edx-0x10]
100605ca:	xor    ecx,eax
100605cc:	call   0x10042f87
100605d1:	mov    eax,0x10076924
100605d6:	jmp    0x100592c1
100605db:	lea    esi,[ebp-0x14]
100605de:	jmp    0x1000772e
100605e3:	mov    edx,DWORD PTR [esp+0x8]
100605e7:	lea    eax,[edx+0xc]
100605ea:	mov    ecx,DWORD PTR [edx-0x30]
100605ed:	xor    ecx,eax
100605ef:	call   0x10042f87
100605f4:	mov    ecx,DWORD PTR [edx-0x4]
100605f7:	xor    ecx,eax
100605f9:	call   0x10042f87
100605fe:	mov    eax,0x10076950
10060603:	jmp    0x100592c1
10060608:	lea    ecx,[ebp-0x2c]
1006060b:	jmp    0x10012ee9
10060610:	mov    edx,DWORD PTR [esp+0x8]
10060614:	lea    eax,[edx+0xc]
10060617:	mov    ecx,DWORD PTR [edx-0x30]
1006061a:	xor    ecx,eax
1006061c:	call   0x10042f87
10060621:	mov    eax,0x1007697c
10060626:	jmp    0x100592c1
1006062b:	mov    esi,DWORD PTR [ebp+0x8]
1006062e:	jmp    0x10004b69
10060633:	mov    edx,DWORD PTR [esp+0x8]
10060637:	lea    eax,[edx+0xc]
1006063a:	mov    ecx,DWORD PTR [edx-0x10]
1006063d:	xor    ecx,eax
1006063f:	call   0x10042f87
10060644:	mov    eax,0x100769a8
10060649:	jmp    0x100592c1
1006064e:	jmp    0x1000206e
10060653:	mov    edx,DWORD PTR [esp+0x8]
10060657:	lea    eax,[edx+0xc]
1006065a:	mov    ecx,DWORD PTR [edx-0x18]
1006065d:	xor    ecx,eax
1006065f:	call   0x10042f87
10060664:	mov    eax,0x10076a08
10060669:	jmp    0x100592c1
1006066e:	lea    esi,[ebp-0x38]
10060671:	jmp    0x10004b69
10060676:	lea    esi,[ebp-0x70]
10060679:	jmp    0x10004b69
1006067e:	lea    edi,[ebp-0x70]
10060681:	jmp    0x10004cc7
10060686:	mov    edx,DWORD PTR [esp+0x8]
1006068a:	lea    eax,[edx+0xc]
1006068d:	mov    ecx,DWORD PTR [edx-0x74]
10060690:	xor    ecx,eax
10060692:	call   0x10042f87
10060697:	mov    eax,0x10076a44
1006069c:	jmp    0x100592c1
100606a1:	lea    ecx,[ebp-0x38]
100606a4:	jmp    0x10012ee9
100606a9:	lea    ecx,[ebp-0x70]
100606ac:	jmp    0x10012ee9
100606b1:	lea    esi,[ebp-0x70]
100606b4:	jmp    0x10004caf
100606b9:	mov    edx,DWORD PTR [esp+0x8]
100606bd:	lea    eax,[edx+0xc]
100606c0:	mov    ecx,DWORD PTR [edx-0x74]
100606c3:	xor    ecx,eax
100606c5:	call   0x10042f87
100606ca:	mov    eax,0x10076a80
100606cf:	jmp    0x100592c1
100606d4:	mov    eax,ds:0x10080c1c
100606d9:	and    eax,0xfffffffe
100606dc:	mov    ds:0x10080c1c,eax
100606e1:	ret    
100606e2:	mov    edx,DWORD PTR [esp+0x8]
100606e6:	lea    eax,[edx+0xc]
100606e9:	mov    ecx,DWORD PTR [edx-0x10]
100606ec:	xor    ecx,eax
100606ee:	call   0x10042f87
100606f3:	mov    eax,0x10076aac
100606f8:	jmp    0x100592c1
100606fd:	mov    eax,ds:0x10080c38
10060702:	and    eax,0xfffffffe
10060705:	mov    ds:0x10080c38,eax
1006070a:	ret    
1006070b:	mov    edx,DWORD PTR [esp+0x8]
1006070f:	lea    eax,[edx+0xc]
10060712:	mov    ecx,DWORD PTR [edx-0x10]
10060715:	xor    ecx,eax
10060717:	call   0x10042f87
1006071c:	mov    eax,0x10076ad8
10060721:	jmp    0x100592c1
10060726:	lea    esi,[ebp-0x4c]
10060729:	jmp    0x10004b69
1006072e:	lea    esi,[ebp-0x30]
10060731:	jmp    0x10004b69
10060736:	lea    ecx,[ebp-0x30]
10060739:	jmp    0x10012ee9
1006073e:	mov    edx,DWORD PTR [esp+0x8]
10060742:	lea    eax,[edx-0x84]
10060748:	mov    ecx,DWORD PTR [edx-0x88]
1006074e:	xor    ecx,eax
10060750:	call   0x10042f87
10060755:	add    eax,0xc
10060758:	mov    ecx,DWORD PTR [edx-0x8]
1006075b:	xor    ecx,eax
1006075d:	call   0x10042f87
10060762:	mov    eax,0x10076b14
10060767:	jmp    0x100592c1
1006076c:	lea    eax,[ebp-0x10]
1006076f:	jmp    0x10002087
10060774:	lea    eax,[ebp-0x14]
10060777:	jmp    0x10002087
1006077c:	lea    edi,[ebp-0x1c]
1006077f:	jmp    0x100024f8
10060784:	lea    edi,[ebp-0x20]
10060787:	jmp    0x100024f8
1006078c:	lea    eax,[ebp-0x18]
1006078f:	jmp    0x10002087
10060794:	lea    esi,[ebp-0x1c]
10060797:	jmp    0x100046ab
1006079c:	mov    edx,DWORD PTR [esp+0x8]
100607a0:	lea    eax,[edx+0xc]
100607a3:	mov    ecx,DWORD PTR [edx-0x28]
100607a6:	xor    ecx,eax
100607a8:	call   0x10042f87
100607ad:	mov    eax,0x10076b78
100607b2:	jmp    0x100592c1
100607b7:	int3   
100607b8:	int3   
100607b9:	int3   
100607ba:	int3   
100607bb:	int3   
100607bc:	int3   
100607bd:	int3   
100607be:	int3   
100607bf:	int3   
100607c0:	lea    ecx,[ebp-0x2c]
100607c3:	jmp    0x10012ee9
100607c8:	mov    eax,DWORD PTR [ebp-0x34]
100607cb:	push   eax
100607cc:	call   0x10042f82
100607d1:	pop    ecx
100607d2:	ret    
100607d3:	mov    edx,DWORD PTR [esp+0x8]
100607d7:	lea    eax,[edx-0x38]
100607da:	mov    ecx,DWORD PTR [edx-0x3c]
100607dd:	xor    ecx,eax
100607df:	call   0x10042f87
100607e4:	add    eax,0xc
100607e7:	mov    ecx,DWORD PTR [edx-0x4]
100607ea:	xor    ecx,eax
100607ec:	call   0x10042f87
100607f1:	mov    eax,0x10076bac
100607f6:	jmp    0x100592c1
100607fb:	int3   
100607fc:	int3   
100607fd:	int3   
100607fe:	int3   
100607ff:	int3   
10060800:	lea    eax,[ebp+0xc]
10060803:	jmp    0x100372c0
10060808:	mov    edx,DWORD PTR [esp+0x8]
1006080c:	lea    eax,[edx-0x14]
1006080f:	mov    ecx,DWORD PTR [edx-0x18]
10060812:	xor    ecx,eax
10060814:	call   0x10042f87
10060819:	mov    eax,0x10076bd8
1006081e:	jmp    0x100592c1
10060823:	int3   
10060824:	int3   
10060825:	int3   
10060826:	int3   
10060827:	int3   
10060828:	int3   
10060829:	int3   
1006082a:	int3   
1006082b:	int3   
1006082c:	int3   
1006082d:	int3   
1006082e:	int3   
1006082f:	int3   
10060830:	lea    esi,[ebp-0x14]
10060833:	jmp    0x1000772e
10060838:	mov    eax,DWORD PTR [ebp-0x1c]
1006083b:	and    eax,0x1
1006083e:	je     0x10060850
10060844:	and    DWORD PTR [ebp-0x1c],0xfffffffe
10060848:	lea    ecx,[ebp-0x58]
1006084b:	jmp    0x10012ee9
10060850:	ret    
10060851:	mov    eax,DWORD PTR [ebp-0x1c]
10060854:	and    eax,0x2
10060857:	je     0x10060869
1006085d:	and    DWORD PTR [ebp-0x1c],0xfffffffd
10060861:	lea    ecx,[ebp-0x3c]
10060864:	jmp    0x10012ee9
10060869:	ret    
1006086a:	mov    edx,DWORD PTR [esp+0x8]
1006086e:	lea    eax,[edx+0xc]
10060871:	mov    ecx,DWORD PTR [edx-0x5c]
10060874:	xor    ecx,eax
10060876:	call   0x10042f87
1006087b:	mov    ecx,DWORD PTR [edx-0x4]
1006087e:	xor    ecx,eax
10060880:	call   0x10042f87
10060885:	mov    eax,0x10076c14
1006088a:	jmp    0x100592c1
1006088f:	int3   
10060890:	lea    esi,[ebp+0x0]
10060893:	jmp    0x1000bd15
10060898:	lea    eax,[ebp-0x10]
1006089b:	jmp    0x10009928
100608a0:	mov    edx,DWORD PTR [esp+0x8]
100608a4:	lea    eax,[edx+0xc]
100608a7:	mov    ecx,DWORD PTR [edx-0x60]
100608aa:	xor    ecx,eax
100608ac:	call   0x10042f87
100608b1:	mov    ecx,DWORD PTR [edx+0xa0]
100608b7:	xor    ecx,eax
100608b9:	call   0x10042f87
100608be:	mov    eax,0x10076c48
100608c3:	jmp    0x100592c1
100608c8:	int3   
100608c9:	int3   
100608ca:	int3   
100608cb:	int3   
100608cc:	int3   
100608cd:	int3   
100608ce:	int3   
100608cf:	int3   
100608d0:	lea    eax,[ebp-0x64]
100608d3:	jmp    0x10009928
100608d8:	lea    esi,[ebp-0x4c]
100608db:	jmp    0x10034590
100608e0:	lea    esi,[ebp-0x3c]
100608e3:	jmp    0x10034590
100608e8:	lea    esi,[ebp-0x38]
100608eb:	jmp    0x10034590
100608f0:	lea    eax,[ebp-0x44]
100608f3:	jmp    0x10009928
100608f8:	mov    edx,DWORD PTR [esp+0x8]
100608fc:	lea    eax,[edx+0xc]
100608ff:	mov    ecx,DWORD PTR [edx-0x68]
10060902:	xor    ecx,eax
10060904:	call   0x10042f87
10060909:	mov    ecx,DWORD PTR [edx-0x4]
1006090c:	xor    ecx,eax
1006090e:	call   0x10042f87
10060913:	mov    eax,0x10076c94
10060918:	jmp    0x100592c1
1006091d:	int3   
1006091e:	int3   
1006091f:	int3   
10060920:	lea    eax,[ebp-0xa0]
10060926:	jmp    0x10034420
1006092b:	lea    eax,[ebp-0x98]
10060931:	jmp    0x10034420
10060936:	lea    ecx,[ebp-0x4c]
10060939:	jmp    0x10012ee9
1006093e:	lea    eax,[ebp-0x9c]
10060944:	jmp    0x10034420
10060949:	lea    eax,[ebp-0x94]
1006094f:	jmp    0x10034420
10060954:	lea    eax,[ebp-0xa4]
1006095a:	jmp    0x10034420
1006095f:	lea    eax,[ebp-0x90]
10060965:	jmp    0x10034420
1006096a:	lea    eax,[ebp-0x90]
10060970:	jmp    0x10034420
10060975:	mov    edx,DWORD PTR [esp+0x8]
10060979:	lea    eax,[edx-0xb0]
1006097f:	mov    ecx,DWORD PTR [edx-0xb4]
10060985:	xor    ecx,eax
10060987:	call   0x10042f87
1006098c:	add    eax,0x10
1006098f:	mov    ecx,DWORD PTR [edx-0x4]
10060992:	xor    ecx,eax
10060994:	call   0x10042f87
10060999:	mov    eax,0x10076cf8
1006099e:	jmp    0x100592c1
100609a3:	mov    edx,DWORD PTR [esp+0x8]
100609a7:	lea    eax,[edx+0xc]
100609aa:	mov    ecx,DWORD PTR [edx-0x1c]
100609ad:	xor    ecx,eax
100609af:	call   0x10042f87
100609b4:	mov    eax,0x10076d50
100609b9:	jmp    0x100592c1
100609be:	mov    edx,DWORD PTR [esp+0x8]
100609c2:	lea    eax,[edx+0xc]
100609c5:	mov    ecx,DWORD PTR [edx-0x1c]
100609c8:	xor    ecx,eax
100609ca:	call   0x10042f87
100609cf:	mov    eax,0x10076da8
100609d4:	jmp    0x100592c1
100609d9:	mov    eax,DWORD PTR [ebp-0x30]
100609dc:	and    eax,0x1
100609df:	je     0x100609f1
100609e5:	and    DWORD PTR [ebp-0x30],0xfffffffe
100609e9:	mov    ecx,DWORD PTR [ebp-0x28]
100609ec:	jmp    0x10012ee9
100609f1:	ret    
100609f2:	lea    ecx,[ebp-0x40]
100609f5:	jmp    0x1001b753
100609fa:	lea    ecx,[ebp-0x50]
100609fd:	jmp    0x1001b753
10060a02:	lea    eax,[ebp-0x18]
10060a05:	jmp    0x1002335a
10060a0a:	lea    edi,[ebp-0x20]
10060a0d:	jmp    0x100024f8
10060a12:	mov    edx,DWORD PTR [esp+0x8]
10060a16:	lea    eax,[edx+0xc]
10060a19:	mov    ecx,DWORD PTR [edx-0x54]
10060a1c:	xor    ecx,eax
10060a1e:	call   0x10042f87
10060a23:	mov    ecx,DWORD PTR [edx+0x40c]
10060a29:	xor    ecx,eax
10060a2b:	call   0x10042f87
10060a30:	mov    eax,0x10076df4
10060a35:	jmp    0x100592c1
10060a3a:	lea    ecx,[ebp-0x20]
10060a3d:	jmp    0x1001b753
10060a42:	lea    eax,[ebp-0x38]
10060a45:	jmp    0x1002b41b
10060a4a:	lea    ecx,[ebp-0x38]
10060a4d:	jmp    0x1001b753
10060a52:	mov    edx,DWORD PTR [esp+0x8]
10060a56:	lea    eax,[edx-0x3c]
10060a59:	mov    ecx,DWORD PTR [edx-0x40]
10060a5c:	xor    ecx,eax
10060a5e:	call   0x10042f87
10060a63:	mov    eax,0x10076e30
10060a68:	jmp    0x100592c1
10060a6d:	mov    ecx,DWORD PTR [ebp+0x8]
10060a70:	jmp    0x10012ee9
10060a75:	lea    ecx,[ebp-0x28]
10060a78:	jmp    0x10012ee9
10060a7d:	mov    edx,DWORD PTR [esp+0x8]
10060a81:	lea    eax,[edx+0xc]
10060a84:	mov    ecx,DWORD PTR [edx-0x30]
10060a87:	xor    ecx,eax
10060a89:	call   0x10042f87
10060a8e:	mov    eax,0x10076e64
10060a93:	jmp    0x100592c1
10060a98:	mov    edx,DWORD PTR [esp+0x8]
10060a9c:	lea    eax,[edx+0xc]
10060a9f:	mov    ecx,DWORD PTR [edx-0x28]
10060aa2:	xor    ecx,eax
10060aa4:	call   0x10042f87
10060aa9:	mov    eax,0x10076ebc
10060aae:	jmp    0x100592c1
10060ab3:	mov    edx,DWORD PTR [esp+0x8]
10060ab7:	lea    eax,[edx+0xc]
10060aba:	mov    ecx,DWORD PTR [edx-0x28]
10060abd:	xor    ecx,eax
10060abf:	call   0x10042f87
10060ac4:	mov    eax,0x10076f14
10060ac9:	jmp    0x100592c1
10060ace:	mov    edx,DWORD PTR [esp+0x8]
10060ad2:	lea    eax,[edx+0xc]
10060ad5:	mov    ecx,DWORD PTR [edx-0x28]
10060ad8:	xor    ecx,eax
10060ada:	call   0x10042f87
10060adf:	mov    eax,0x10076f6c
10060ae4:	jmp    0x100592c1
10060ae9:	mov    edx,DWORD PTR [esp+0x8]
10060aed:	lea    eax,[edx+0xc]
10060af0:	mov    ecx,DWORD PTR [edx-0x28]
10060af3:	xor    ecx,eax
10060af5:	call   0x10042f87
10060afa:	mov    eax,0x10076fc4
10060aff:	jmp    0x100592c1
10060b04:	lea    eax,[ebp-0x28]
10060b07:	jmp    0x10026e77
10060b0c:	lea    eax,[ebp-0x28]
10060b0f:	jmp    0x10026e77
10060b14:	lea    eax,[ebp-0x28]
10060b17:	jmp    0x10026e77
10060b1c:	push   DWORD PTR [ebp-0x30]
10060b1f:	call   0x10042f82
10060b24:	pop    ecx
10060b25:	ret    
10060b26:	lea    eax,[ebp-0x1c]
10060b29:	jmp    0x10026e77
10060b2e:	mov    edx,DWORD PTR [esp+0x8]
10060b32:	lea    eax,[edx-0x34]
10060b35:	mov    ecx,DWORD PTR [edx-0x38]
10060b38:	xor    ecx,eax
10060b3a:	call   0x10042f87
10060b3f:	mov    eax,0x10077010
10060b44:	jmp    0x100592c1
10060b49:	mov    eax,DWORD PTR [ebp-0x10]
10060b4c:	add    eax,0x8
10060b4f:	jmp    0x1002335a
10060b54:	mov    eax,DWORD PTR [ebp-0x10]
10060b57:	add    eax,0xc
10060b5a:	jmp    0x1002335a
10060b5f:	mov    eax,DWORD PTR [ebp-0x10]
10060b62:	add    eax,0x10
10060b65:	jmp    0x100244d9
10060b6a:	mov    edx,DWORD PTR [esp+0x8]
10060b6e:	lea    eax,[edx+0xc]
10060b71:	mov    ecx,DWORD PTR [edx-0x14]
10060b74:	xor    ecx,eax
10060b76:	call   0x10042f87
10060b7b:	mov    eax,0x1007704c
10060b80:	jmp    0x100592c1
10060b85:	lea    eax,[ebp-0x4c]
10060b88:	jmp    0x10024377
10060b8d:	lea    eax,[ebp-0x54]
10060b90:	jmp    0x1002335a
10060b95:	lea    edi,[ebp-0x50]
10060b98:	jmp    0x100024f8
10060b9d:	mov    edx,DWORD PTR [esp+0x8]
10060ba1:	lea    eax,[edx-0x54]
10060ba4:	mov    ecx,DWORD PTR [edx-0x58]
10060ba7:	xor    ecx,eax
10060ba9:	call   0x10042f87
10060bae:	mov    eax,0x10077088
10060bb3:	jmp    0x100592c1
10060bb8:	mov    eax,DWORD PTR [ebp-0x10]
10060bbb:	add    eax,0x8
10060bbe:	jmp    0x1002335a
10060bc3:	mov    eax,DWORD PTR [ebp-0x10]
10060bc6:	add    eax,0xc
10060bc9:	jmp    0x1002335a
10060bce:	mov    edx,DWORD PTR [esp+0x8]
10060bd2:	lea    eax,[edx+0xc]
10060bd5:	mov    ecx,DWORD PTR [edx-0x14]
10060bd8:	xor    ecx,eax
10060bda:	call   0x10042f87
10060bdf:	mov    eax,0x100770bc
10060be4:	jmp    0x100592c1
10060be9:	mov    edx,DWORD PTR [esp+0x8]
10060bed:	lea    eax,[edx+0xc]
10060bf0:	mov    ecx,DWORD PTR [edx-0x1c]
10060bf3:	xor    ecx,eax
10060bf5:	call   0x10042f87
10060bfa:	mov    eax,0x10077114
10060bff:	jmp    0x100592c1
10060c04:	lea    esi,[ebp-0x30]
10060c07:	jmp    0x10004b69
10060c0c:	lea    esi,[ebp-0x5c]
10060c0f:	jmp    0x10004b69
10060c14:	mov    edx,DWORD PTR [esp+0x8]
10060c18:	lea    eax,[edx-0x6c]
10060c1b:	mov    ecx,DWORD PTR [edx-0x70]
10060c1e:	xor    ecx,eax
10060c20:	call   0x10042f87
10060c25:	add    eax,0xc
10060c28:	mov    ecx,DWORD PTR [edx-0x8]
10060c2b:	xor    ecx,eax
10060c2d:	call   0x10042f87
10060c32:	mov    eax,0x10077148
10060c37:	jmp    0x100592c1
10060c3c:	lea    esi,[ebp-0x40]
10060c3f:	jmp    0x10004b69
10060c44:	lea    esi,[ebp-0x6c]
10060c47:	jmp    0x10004b69
10060c4c:	mov    edx,DWORD PTR [esp+0x8]
10060c50:	lea    eax,[edx-0x7c]
10060c53:	mov    ecx,DWORD PTR [edx-0x80]
10060c56:	xor    ecx,eax
10060c58:	call   0x10042f87
10060c5d:	add    eax,0xc
10060c60:	mov    ecx,DWORD PTR [edx-0x8]
10060c63:	xor    ecx,eax
10060c65:	call   0x10042f87
10060c6a:	mov    eax,0x1007717c
10060c6f:	jmp    0x100592c1
10060c74:	mov    edx,DWORD PTR [esp+0x8]
10060c78:	lea    eax,[edx+0xc]
10060c7b:	mov    ecx,DWORD PTR [edx-0x24]
10060c7e:	xor    ecx,eax
10060c80:	call   0x10042f87
10060c85:	mov    eax,0x100771d4
10060c8a:	jmp    0x100592c1
10060c8f:	mov    edx,DWORD PTR [esp+0x8]
10060c93:	lea    eax,[edx+0xc]
10060c96:	mov    ecx,DWORD PTR [edx-0x14]
10060c99:	xor    ecx,eax
10060c9b:	call   0x10042f87
10060ca0:	mov    eax,0x1007722c
10060ca5:	jmp    0x100592c1
10060caa:	lea    eax,[ebp-0x1c]
10060cad:	jmp    0x1001b1ff
10060cb2:	mov    edx,DWORD PTR [esp+0x8]
10060cb6:	lea    eax,[edx+0xc]
10060cb9:	mov    ecx,DWORD PTR [edx-0x24]
10060cbc:	xor    ecx,eax
10060cbe:	call   0x10042f87
10060cc3:	mov    eax,0x10077258
10060cc8:	jmp    0x100592c1
10060ccd:	lea    ecx,[ebp+0x24]
10060cd0:	jmp    0x10001195
10060cd5:	lea    ecx,[ebp+0x8]
10060cd8:	jmp    0x10012ee9
10060cdd:	mov    ecx,DWORD PTR [ebp-0x10]
10060ce0:	jmp    0x10012ee9
10060ce5:	mov    edx,DWORD PTR [esp+0x8]
10060ce9:	lea    eax,[edx+0xc]
10060cec:	mov    ecx,DWORD PTR [edx-0x18]
10060cef:	xor    ecx,eax
10060cf1:	call   0x10042f87
10060cf6:	mov    eax,0x10077294
10060cfb:	jmp    0x100592c1
10060d00:	jmp    0x1000206e
10060d05:	mov    edx,DWORD PTR [esp+0x8]
10060d09:	lea    eax,[edx+0xc]
10060d0c:	mov    ecx,DWORD PTR [edx-0x18]
10060d0f:	xor    ecx,eax
10060d11:	call   0x10042f87
10060d16:	mov    eax,0x100772f4
10060d1b:	jmp    0x100592c1
10060d20:	mov    edx,DWORD PTR [esp+0x8]
10060d24:	lea    eax,[edx+0xc]
10060d27:	mov    ecx,DWORD PTR [edx-0x24]
10060d2a:	xor    ecx,eax
10060d2c:	call   0x10042f87
10060d31:	mov    eax,0x1007734c
10060d36:	jmp    0x100592c1
10060d3b:	mov    edx,DWORD PTR [esp+0x8]
10060d3f:	lea    eax,[edx+0xc]
10060d42:	mov    ecx,DWORD PTR [edx-0x18]
10060d45:	xor    ecx,eax
10060d47:	call   0x10042f87
10060d4c:	mov    eax,0x100773a4
10060d51:	jmp    0x100592c1
10060d56:	lea    eax,[ebp-0x1c]
10060d59:	jmp    0x1001975a
10060d5e:	mov    edx,DWORD PTR [esp+0x8]
10060d62:	lea    eax,[edx-0x1c]
10060d65:	mov    ecx,DWORD PTR [edx-0x20]
10060d68:	xor    ecx,eax
10060d6a:	call   0x10042f87
10060d6f:	mov    eax,0x100773d0
10060d74:	jmp    0x100592c1
10060d79:	lea    esi,[ebp-0x10]
10060d7c:	jmp    0x1000772e
10060d81:	mov    edx,DWORD PTR [esp+0x8]
10060d85:	lea    eax,[edx+0xc]
10060d88:	mov    ecx,DWORD PTR [edx-0x14]
10060d8b:	xor    ecx,eax
10060d8d:	call   0x10042f87
10060d92:	mov    eax,0x100773fc
10060d97:	jmp    0x100592c1
10060d9c:	lea    esi,[ebp+0x24]
10060d9f:	jmp    0x100132d1
10060da4:	lea    ecx,[ebp+0x8]
10060da7:	jmp    0x10012ee9
10060dac:	mov    ecx,DWORD PTR [ebp-0x10]
10060daf:	jmp    0x10012ee9
10060db4:	mov    edx,DWORD PTR [esp+0x8]
10060db8:	lea    eax,[edx+0xc]
10060dbb:	mov    ecx,DWORD PTR [edx-0x18]
10060dbe:	xor    ecx,eax
10060dc0:	call   0x10042f87
10060dc5:	mov    eax,0x10077438
10060dca:	jmp    0x100592c1
10060dcf:	jmp    0x1000206e
10060dd4:	mov    edx,DWORD PTR [esp+0x8]
10060dd8:	lea    eax,[edx+0xc]
10060ddb:	mov    ecx,DWORD PTR [edx-0x18]
10060dde:	xor    ecx,eax
10060de0:	call   0x10042f87
10060de5:	mov    eax,0x10077498
10060dea:	jmp    0x100592c1
10060def:	lea    ecx,[ebp-0x30]
10060df2:	jmp    0x10012ee9
10060df7:	mov    edx,DWORD PTR [esp+0x8]
10060dfb:	lea    eax,[edx+0xc]
10060dfe:	mov    ecx,DWORD PTR [edx-0x5c]
10060e01:	xor    ecx,eax
10060e03:	call   0x10042f87
10060e08:	mov    eax,0x100774c4
10060e0d:	jmp    0x100592c1
10060e12:	lea    ecx,[ebp-0x34]
10060e15:	jmp    0x10012ee9
10060e1a:	lea    esi,[ebp-0x28]
10060e1d:	jmp    0x10011ee7
10060e22:	lea    ecx,[ebp-0x50]
10060e25:	jmp    0x10012ee9
10060e2a:	mov    edx,DWORD PTR [esp+0x8]
10060e2e:	lea    eax,[edx+0xc]
10060e31:	mov    ecx,DWORD PTR [edx-0x54]
10060e34:	xor    ecx,eax
10060e36:	call   0x10042f87
10060e3b:	mov    eax,0x10077500
10060e40:	jmp    0x100592c1
10060e45:	lea    ecx,[ebp-0x30]
10060e48:	jmp    0x10012ee9
10060e4d:	mov    edx,DWORD PTR [esp+0x8]
10060e51:	lea    eax,[edx+0xc]
10060e54:	mov    ecx,DWORD PTR [edx-0x40]
10060e57:	xor    ecx,eax
10060e59:	call   0x10042f87
10060e5e:	mov    ecx,DWORD PTR [edx-0x8]
10060e61:	xor    ecx,eax
10060e63:	call   0x10042f87
10060e68:	mov    eax,0x10077594
10060e6d:	jmp    0x100592c1
10060e72:	mov    edx,DWORD PTR [esp+0x8]
10060e76:	lea    eax,[edx+0xc]
10060e79:	mov    ecx,DWORD PTR [edx-0x20]
10060e7c:	xor    ecx,eax
10060e7e:	call   0x10042f87
10060e83:	mov    eax,0x100775ec
10060e88:	jmp    0x100592c1
10060e8d:	mov    eax,DWORD PTR [ebp-0x14]
10060e90:	and    eax,0x1
10060e93:	je     0x10060ea5
10060e99:	and    DWORD PTR [ebp-0x14],0xfffffffe
10060e9d:	mov    esi,DWORD PTR [ebp+0x8]
10060ea0:	jmp    0x1000465b
10060ea5:	ret    
10060ea6:	lea    ecx,[ebp-0x50]
10060ea9:	jmp    0x10012ee9
10060eae:	lea    ecx,[ebp-0x34]
10060eb1:	jmp    0x10012ee9
10060eb6:	mov    edx,DWORD PTR [esp+0x8]
10060eba:	lea    eax,[edx+0xc]
10060ebd:	mov    ecx,DWORD PTR [edx-0x54]
10060ec0:	xor    ecx,eax
10060ec2:	call   0x10042f87
10060ec7:	mov    eax,0x10077628
10060ecc:	jmp    0x100592c1
10060ed1:	push   DWORD PTR [ebp-0x14]
10060ed4:	call   0x10042f82
10060ed9:	pop    ecx
10060eda:	ret    
10060edb:	mov    eax,DWORD PTR [ebp-0x10]
10060ede:	and    eax,0x1
10060ee1:	je     0x10060ef3
10060ee7:	and    DWORD PTR [ebp-0x10],0xfffffffe
10060eeb:	mov    eax,DWORD PTR [ebp+0x8]
10060eee:	jmp    0x10009d4e
10060ef3:	ret    
10060ef4:	push   DWORD PTR [ebp-0x14]
10060ef7:	call   0x10042f82
10060efc:	pop    ecx
10060efd:	ret    
10060efe:	mov    edx,DWORD PTR [esp+0x8]
10060f02:	lea    eax,[edx+0xc]
10060f05:	mov    ecx,DWORD PTR [edx-0x18]
10060f08:	xor    ecx,eax
10060f0a:	call   0x10042f87
10060f0f:	mov    eax,0x10077664
10060f14:	jmp    0x100592c1
10060f19:	lea    eax,[ebp-0x10]
10060f1c:	jmp    0x10009d4e
10060f21:	mov    edx,DWORD PTR [esp+0x8]
10060f25:	lea    eax,[edx+0xc]
10060f28:	mov    ecx,DWORD PTR [edx-0x18]
10060f2b:	xor    ecx,eax
10060f2d:	call   0x10042f87
10060f32:	mov    eax,0x10077690
10060f37:	jmp    0x100592c1
10060f3c:	lea    edi,[ebp+0xc]
10060f3f:	jmp    0x100024f8
10060f44:	lea    ecx,[ebp-0x28]
10060f47:	jmp    0x10012ee9
10060f4c:	lea    ecx,[ebp-0x44]
10060f4f:	jmp    0x10012ee9
10060f54:	mov    edx,DWORD PTR [esp+0x8]
10060f58:	lea    eax,[edx+0xc]
10060f5b:	mov    ecx,DWORD PTR [edx-0x48]
10060f5e:	xor    ecx,eax
10060f60:	call   0x10042f87
10060f65:	mov    eax,0x100776cc
10060f6a:	jmp    0x100592c1
10060f6f:	lea    esi,[ebp+0x24]
10060f72:	jmp    0x10011ee7
10060f77:	lea    ecx,[ebp+0x8]
10060f7a:	jmp    0x10012ee9
10060f7f:	mov    ecx,DWORD PTR [ebp-0x10]
10060f82:	jmp    0x10012ee9
10060f87:	mov    edx,DWORD PTR [esp+0x8]
10060f8b:	lea    eax,[edx+0xc]
10060f8e:	mov    ecx,DWORD PTR [edx-0x18]
10060f91:	xor    ecx,eax
10060f93:	call   0x10042f87
10060f98:	mov    eax,0x10077708
10060f9d:	jmp    0x100592c1
10060fa2:	jmp    0x1000206e
10060fa7:	mov    edx,DWORD PTR [esp+0x8]
10060fab:	lea    eax,[edx+0xc]
10060fae:	mov    ecx,DWORD PTR [edx-0x1c]
10060fb1:	xor    ecx,eax
10060fb3:	call   0x10042f87
10060fb8:	mov    eax,0x10077768
10060fbd:	jmp    0x100592c1
10060fc2:	mov    esi,DWORD PTR [ebp+0x8]
10060fc5:	jmp    0x100046ab
10060fca:	mov    esi,DWORD PTR [ebp+0x8]
10060fcd:	add    esi,0x4
10060fd0:	jmp    0x1000c9af
10060fd5:	mov    esi,DWORD PTR [ebp+0x8]
10060fd8:	add    esi,0x8
10060fdb:	jmp    0x1000c9c0
10060fe0:	mov    eax,DWORD PTR [ebp+0x8]
10060fe3:	add    eax,0xc
10060fe6:	jmp    0x100260c6
10060feb:	mov    edx,DWORD PTR [esp+0x8]
10060fef:	lea    eax,[edx+0xc]
10060ff2:	mov    ecx,DWORD PTR [edx-0x10]
10060ff5:	xor    ecx,eax
10060ff7:	call   0x10042f87
10060ffc:	mov    eax,0x100777ac
10061001:	jmp    0x100592c1
10061006:	mov    eax,DWORD PTR [ebp-0x58]
10061009:	and    eax,0x1
1006100c:	je     0x1006101e
10061012:	and    DWORD PTR [ebp-0x58],0xfffffffe
10061016:	mov    ecx,DWORD PTR [ebp-0x5c]
10061019:	jmp    0x10012ee9
1006101e:	ret    
1006101f:	mov    edx,DWORD PTR [esp+0x8]
10061023:	lea    eax,[edx+0xc]
10061026:	mov    ecx,DWORD PTR [edx-0x60]
10061029:	xor    ecx,eax
1006102b:	call   0x10042f87
10061030:	mov    ecx,DWORD PTR [edx-0x4]
10061033:	xor    ecx,eax
10061035:	call   0x10042f87
1006103a:	mov    eax,0x100777d8
1006103f:	jmp    0x100592c1
10061044:	lea    esi,[ebp-0x18]
10061047:	jmp    0x1000aa41
1006104c:	mov    edx,DWORD PTR [esp+0x8]
10061050:	lea    eax,[edx+0xc]
10061053:	mov    ecx,DWORD PTR [edx-0x15c]
10061059:	xor    ecx,eax
1006105b:	call   0x10042f87
10061060:	mov    eax,0x10077804
10061065:	jmp    0x100592c1
1006106a:	jmp    0x100379d0
1006106f:	mov    edx,DWORD PTR [esp+0x8]
10061073:	lea    eax,[edx-0x14]
10061076:	mov    ecx,DWORD PTR [edx-0x18]
10061079:	xor    ecx,eax
1006107b:	call   0x10042f87
10061080:	mov    eax,0x10077830
10061085:	jmp    0x100592c1
1006108a:	mov    eax,DWORD PTR [ebp-0x68]
1006108d:	and    eax,0x1
10061090:	je     0x100610a2
10061096:	and    DWORD PTR [ebp-0x68],0xfffffffe
1006109a:	lea    ecx,[ebp-0x4c]
1006109d:	jmp    0x10012ee9
100610a2:	ret    
100610a3:	lea    esi,[ebp-0x68]
100610a6:	jmp    0x1000aa41
100610ab:	lea    ecx,[ebp-0x4c]
100610ae:	jmp    0x10012ee9
100610b3:	lea    ecx,[ebp-0x30]
100610b6:	jmp    0x10012ee9
100610bb:	mov    edx,DWORD PTR [esp+0x8]
100610bf:	lea    eax,[edx-0x6c]
100610c2:	mov    ecx,DWORD PTR [edx-0x70]
100610c5:	xor    ecx,eax
100610c7:	call   0x10042f87
100610cc:	add    eax,0xc
100610cf:	mov    ecx,DWORD PTR [edx-0x8]
100610d2:	xor    ecx,eax
100610d4:	call   0x10042f87
100610d9:	mov    eax,0x1007787c
100610de:	jmp    0x100592c1
100610e3:	mov    eax,DWORD PTR [ebp-0xc8]
100610e9:	and    eax,0x1
100610ec:	je     0x10061104
100610f2:	and    DWORD PTR [ebp-0xc8],0xfffffffe
100610f9:	lea    ecx,[ebp-0xc0]
100610ff:	jmp    0x10012ee9
10061104:	ret    
10061105:	lea    esi,[ebp-0xc8]
1006110b:	jmp    0x1000aa41
10061110:	lea    ecx,[ebp-0x88]
10061116:	jmp    0x10012ee9
1006111b:	lea    ecx,[ebp-0x30]
1006111e:	jmp    0x10012ee9
10061123:	lea    esi,[ebp-0xa0]
10061129:	jmp    0x10011ee7
1006112e:	mov    esi,DWORD PTR [ebp-0xc4]
10061134:	jmp    0x10011ee7
10061139:	lea    edi,[ebp-0x5c]
1006113c:	jmp    0x1000c76f
10061141:	lea    ecx,[ebp-0x88]
10061147:	jmp    0x10012ee9
1006114c:	lea    edi,[ebp-0x88]
10061152:	jmp    0x1000c76f
10061157:	mov    edx,DWORD PTR [esp+0x8]
1006115b:	lea    eax,[edx-0xcc]
10061161:	mov    ecx,DWORD PTR [edx-0xd0]
10061167:	xor    ecx,eax
10061169:	call   0x10042f87
1006116e:	add    eax,0xc
10061171:	mov    ecx,DWORD PTR [edx-0x8]
10061174:	xor    ecx,eax
10061176:	call   0x10042f87
1006117b:	mov    eax,0x100778f0
10061180:	jmp    0x100592c1
10061185:	mov    esi,DWORD PTR [ebp-0x10]
10061188:	jmp    0x100046ab
1006118d:	mov    esi,DWORD PTR [ebp-0x10]
10061190:	add    esi,0x4
10061193:	jmp    0x100046ab
10061198:	mov    edx,DWORD PTR [esp+0x8]
1006119c:	lea    eax,[edx+0xc]
1006119f:	mov    ecx,DWORD PTR [edx-0x14]
100611a2:	xor    ecx,eax
100611a4:	call   0x10042f87
100611a9:	mov    eax,0x10077924
100611ae:	jmp    0x100592c1
100611b3:	lea    ecx,[ebp-0x38]
100611b6:	jmp    0x10012ee9
100611bb:	mov    edx,DWORD PTR [esp+0x8]
100611bf:	lea    eax,[edx+0xc]
100611c2:	mov    ecx,DWORD PTR [edx-0x44]
100611c5:	xor    ecx,eax
100611c7:	call   0x10042f87
100611cc:	mov    ecx,DWORD PTR [edx-0x8]
100611cf:	xor    ecx,eax
100611d1:	call   0x10042f87
100611d6:	mov    eax,0x100779b8
100611db:	jmp    0x100592c1
100611e0:	mov    edx,DWORD PTR [esp+0x8]
100611e4:	lea    eax,[edx+0xc]
100611e7:	mov    ecx,DWORD PTR [edx-0x20]
100611ea:	xor    ecx,eax
100611ec:	call   0x10042f87
100611f1:	mov    eax,0x10077a10
100611f6:	jmp    0x100592c1
100611fb:	lea    esi,[ebp-0x18]
100611fe:	jmp    0x1000772e
10061203:	mov    edx,DWORD PTR [esp+0x8]
10061207:	lea    eax,[edx+0xc]
1006120a:	mov    ecx,DWORD PTR [edx-0x1c]
1006120d:	xor    ecx,eax
1006120f:	call   0x10042f87
10061214:	mov    eax,0x10077a3c
10061219:	jmp    0x100592c1
1006121e:	mov    edx,DWORD PTR [esp+0x8]
10061222:	lea    eax,[edx+0xc]
10061225:	mov    ecx,DWORD PTR [edx-0x18]
10061228:	xor    ecx,eax
1006122a:	call   0x10042f87
1006122f:	mov    eax,0x10077a94
10061234:	jmp    0x100592c1
10061239:	lea    ecx,[ebp-0x4c]
1006123c:	jmp    0x10012ee9
10061241:	lea    ecx,[ebp-0x30]
10061244:	jmp    0x10012ee9
10061249:	lea    ecx,[ebp-0x30]
1006124c:	jmp    0x10012ee9
10061251:	mov    edx,DWORD PTR [esp+0x8]
10061255:	lea    eax,[edx-0x84]
1006125b:	mov    ecx,DWORD PTR [edx-0x88]
10061261:	xor    ecx,eax
10061263:	call   0x10042f87
10061268:	add    eax,0xc
1006126b:	mov    ecx,DWORD PTR [edx-0x8]
1006126e:	xor    ecx,eax
10061270:	call   0x10042f87
10061275:	mov    eax,0x10077ad0
1006127a:	jmp    0x100592c1
1006127f:	int3   
10061280:	mov    eax,DWORD PTR [ebp-0x24]
10061283:	and    eax,0x1
10061286:	je     0x10061298
1006128c:	and    DWORD PTR [ebp-0x24],0xfffffffe
10061290:	mov    ecx,DWORD PTR [ebp-0x20]
10061293:	jmp    0x10012ee9
10061298:	ret    
10061299:	mov    edx,DWORD PTR [esp+0x8]
1006129d:	lea    eax,[edx-0x20]
100612a0:	mov    ecx,DWORD PTR [edx-0x24]
100612a3:	xor    ecx,eax
100612a5:	call   0x10042f87
100612aa:	add    eax,0x8
100612ad:	mov    ecx,DWORD PTR [edx-0x4]
100612b0:	xor    ecx,eax
100612b2:	call   0x10042f87
100612b7:	mov    eax,0x10077afc
100612bc:	jmp    0x100592c1
100612c1:	int3   
100612c2:	int3   
100612c3:	int3   
100612c4:	int3   
100612c5:	int3   
100612c6:	int3   
100612c7:	int3   
100612c8:	int3   
100612c9:	int3   
100612ca:	int3   
100612cb:	int3   
100612cc:	int3   
100612cd:	int3   
100612ce:	int3   
100612cf:	int3   
100612d0:	lea    edi,[ebp-0x3c]
100612d3:	jmp    0x100024f8
100612d8:	lea    edi,[ebp-0x44]
100612db:	jmp    0x100024f8
100612e0:	lea    edi,[ebp-0x38]
100612e3:	jmp    0x100024f8
100612e8:	lea    edi,[ebp-0x44]
100612eb:	jmp    0x100024f8
100612f0:	lea    edi,[ebp-0x48]
100612f3:	jmp    0x100024f8
100612f8:	lea    ecx,[ebp-0x20]
100612fb:	jmp    0x1001b753
10061300:	mov    edx,DWORD PTR [esp+0x8]
10061304:	lea    eax,[edx-0x5c]
10061307:	mov    ecx,DWORD PTR [edx-0x60]
1006130a:	xor    ecx,eax
1006130c:	call   0x10042f87
10061311:	mov    eax,0x10077b50
10061316:	jmp    0x100592c1
1006131b:	int3   
1006131c:	int3   
1006131d:	int3   
1006131e:	int3   
1006131f:	int3   
10061320:	lea    eax,[ebp-0x14]
10061323:	jmp    0x10002087
10061328:	lea    ecx,[ebp-0x30]
1006132b:	jmp    0x10012ee9
10061330:	mov    edx,DWORD PTR [esp+0x8]
10061334:	lea    eax,[edx+0xc]
10061337:	mov    ecx,DWORD PTR [edx-0x48]
1006133a:	xor    ecx,eax
1006133c:	call   0x10042f87
10061341:	mov    ecx,DWORD PTR [edx+0x195c]
10061347:	xor    ecx,eax
10061349:	call   0x10042f87
1006134e:	mov    eax,0x10077b84
10061353:	jmp    0x100592c1
10061358:	int3   
10061359:	int3   
1006135a:	int3   
1006135b:	int3   
1006135c:	int3   
1006135d:	int3   
1006135e:	int3   
1006135f:	int3   
10061360:	lea    esi,[ebp-0x30]
10061363:	jmp    0x10014637
10061368:	lea    eax,[ebp-0x40]
1006136b:	jmp    0x10002087
10061370:	lea    eax,[ebp-0x2c]
10061373:	jmp    0x10002087
10061378:	lea    eax,[ebp-0x3c]
1006137b:	jmp    0x10002087
10061380:	lea    esi,[ebp-0x28]
10061383:	jmp    0x100067eb
10061388:	mov    eax,DWORD PTR [ebp+0x4]
1006138b:	jmp    0x10002087
10061390:	mov    edx,DWORD PTR [esp+0x8]
10061394:	lea    eax,[edx-0x44]
10061397:	mov    ecx,DWORD PTR [edx-0x48]
1006139a:	xor    ecx,eax
1006139c:	call   0x10042f87
100613a1:	mov    eax,0x10077bd8
100613a6:	jmp    0x100592c1
100613ab:	int3   
100613ac:	int3   
100613ad:	int3   
100613ae:	int3   
100613af:	int3   
100613b0:	lea    ecx,[ebp-0x28]
100613b3:	jmp    0x10012ee9
100613b8:	mov    ecx,DWORD PTR [ebp+0x4]
100613bb:	jmp    0x100430c0
100613c0:	mov    edx,DWORD PTR [esp+0x8]
100613c4:	lea    eax,[edx-0x28]
100613c7:	mov    ecx,DWORD PTR [edx-0x2c]
100613ca:	xor    ecx,eax
100613cc:	call   0x10042f87
100613d1:	mov    eax,0x10077c0c
100613d6:	jmp    0x100592c1
100613db:	int3   
100613dc:	int3   
100613dd:	int3   
100613de:	int3   
100613df:	int3   
100613e0:	lea    ecx,[ebp-0x17c]
100613e6:	jmp    0x10012ee9
100613eb:	lea    ecx,[ebp-0x160]
100613f1:	jmp    0x100430c0
100613f6:	lea    eax,[ebp-0x1a0]
100613fc:	jmp    0x10009928
10061401:	lea    ecx,[ebp-0x198]
10061407:	jmp    0x10012ee9
1006140c:	lea    ecx,[ebp-0x138]
10061412:	jmp    0x100430c0
10061417:	mov    edx,DWORD PTR [esp+0x8]
1006141b:	lea    eax,[edx-0x1a4]
10061421:	mov    ecx,DWORD PTR [edx-0x1a8]
10061427:	xor    ecx,eax
10061429:	call   0x10042f87
1006142e:	add    eax,0xc
10061431:	mov    ecx,DWORD PTR [edx-0x4]
10061434:	xor    ecx,eax
10061436:	call   0x10042f87
1006143b:	mov    eax,0x10077c58
10061440:	jmp    0x100592c1
10061445:	int3   
10061446:	int3   
10061447:	int3   
10061448:	int3   
10061449:	int3   
1006144a:	int3   
1006144b:	int3   
1006144c:	int3   
1006144d:	int3   
1006144e:	int3   
1006144f:	int3   
10061450:	lea    eax,[ebp-0x58]
10061453:	jmp    0x10009928
10061458:	lea    eax,[ebp-0x64]
1006145b:	jmp    0x100372c0
10061460:	lea    ecx,[ebp-0x54]
10061463:	jmp    0x10012ee9
10061468:	lea    ecx,[ebp-0x38]
1006146b:	jmp    0x100430c0
10061470:	lea    ecx,[ebp-0x54]
10061473:	jmp    0x10012ee9
10061478:	lea    ecx,[ebp-0x38]
1006147b:	jmp    0x100430c0
10061480:	lea    ecx,[ebp-0x54]
10061483:	jmp    0x10012ee9
10061488:	mov    edx,DWORD PTR [esp+0x8]
1006148c:	lea    eax,[edx-0x64]
1006148f:	mov    ecx,DWORD PTR [edx-0x68]
10061492:	xor    ecx,eax
10061494:	call   0x10042f87
10061499:	mov    eax,0x10077cb4
1006149e:	jmp    0x100592c1
100614a3:	int3   
100614a4:	int3   
100614a5:	int3   
100614a6:	int3   
100614a7:	int3   
100614a8:	int3   
100614a9:	int3   
100614aa:	int3   
100614ab:	int3   
100614ac:	int3   
100614ad:	int3   
100614ae:	int3   
100614af:	int3   
100614b0:	lea    eax,[ebp-0x60]
100614b3:	jmp    0x100372c0
100614b8:	lea    ecx,[ebp-0x54]
100614bb:	jmp    0x10012ee9
100614c0:	lea    ecx,[ebp-0x38]
100614c3:	jmp    0x100430c0
100614c8:	mov    edx,DWORD PTR [esp+0x8]
100614cc:	lea    eax,[edx-0x64]
100614cf:	mov    ecx,DWORD PTR [edx-0x68]
100614d2:	xor    ecx,eax
100614d4:	call   0x10042f87
100614d9:	mov    eax,0x10077cf0
100614de:	jmp    0x100592c1
100614e3:	int3   
100614e4:	int3   
100614e5:	int3   
100614e6:	int3   
100614e7:	int3   
100614e8:	int3   
100614e9:	int3   
100614ea:	int3   
100614eb:	int3   
100614ec:	int3   
100614ed:	int3   
100614ee:	int3   
100614ef:	int3   
100614f0:	lea    ecx,[ebp-0x140]
100614f6:	jmp    0x10012ee9
100614fb:	lea    ecx,[ebp-0x194]
10061501:	jmp    0x100430c0
10061506:	lea    ecx,[ebp-0x140]
1006150c:	jmp    0x10012ee9
10061511:	lea    ecx,[ebp-0x140]
10061517:	jmp    0x10012ee9
1006151c:	lea    ecx,[ebp-0x140]
10061522:	jmp    0x10012ee9
10061527:	lea    ecx,[ebp-0x16c]
1006152d:	jmp    0x10012ee9
10061532:	mov    edx,DWORD PTR [esp+0x8]
10061536:	lea    eax,[edx+0xc]
10061539:	mov    ecx,DWORD PTR [edx-0x19c]
1006153f:	xor    ecx,eax
10061541:	call   0x10042f87
10061546:	mov    ecx,DWORD PTR [edx-0x4]
10061549:	xor    ecx,eax
1006154b:	call   0x10042f87
10061550:	mov    eax,0x10077d44
10061555:	jmp    0x100592c1
1006155a:	int3   
1006155b:	int3   
1006155c:	int3   
1006155d:	int3   
1006155e:	int3   
1006155f:	int3   
10061560:	lea    ecx,[ebp-0x2c]
10061563:	jmp    0x10012ee9
10061568:	lea    ecx,[ebp-0x64]
1006156b:	jmp    0x10012ee9
10061570:	lea    ecx,[ebp-0x80]
10061573:	jmp    0x10012ee9
10061578:	lea    ecx,[ebp-0x48]
1006157b:	jmp    0x10012ee9
10061580:	mov    edx,DWORD PTR [esp+0x8]
10061584:	lea    eax,[edx-0x80]
10061587:	mov    ecx,DWORD PTR [edx-0x84]
1006158d:	xor    ecx,eax
1006158f:	call   0x10042f87
10061594:	add    eax,0xc
10061597:	mov    ecx,DWORD PTR [edx-0x4]
1006159a:	xor    ecx,eax
1006159c:	call   0x10042f87
100615a1:	mov    eax,0x10077d88
100615a6:	jmp    0x100592c1
100615ab:	int3   
100615ac:	int3   
100615ad:	int3   
100615ae:	int3   
100615af:	int3   
100615b0:	lea    eax,[ebp-0x10]
100615b3:	jmp    0x10009928
100615b8:	mov    edx,DWORD PTR [esp+0x8]
100615bc:	lea    eax,[edx-0x10]
100615bf:	mov    ecx,DWORD PTR [edx-0x14]
100615c2:	xor    ecx,eax
100615c4:	call   0x10042f87
100615c9:	mov    eax,0x10077db4
100615ce:	jmp    0x100592c1
100615d3:	int3   
100615d4:	int3   
100615d5:	int3   
100615d6:	int3   
100615d7:	int3   
100615d8:	int3   
100615d9:	int3   
100615da:	int3   
100615db:	int3   
100615dc:	int3   
100615dd:	int3   
100615de:	int3   
100615df:	int3   
100615e0:	lea    ecx,[ebp-0x54]
100615e3:	jmp    0x10012ee9
100615e8:	lea    ecx,[ebp-0x38]
100615eb:	jmp    0x100430c0
100615f0:	mov    edx,DWORD PTR [esp+0x8]
100615f4:	lea    eax,[edx-0x58]
100615f7:	mov    ecx,DWORD PTR [edx-0x5c]
100615fa:	xor    ecx,eax
100615fc:	call   0x10042f87
10061601:	mov    eax,0x10077de8
10061606:	jmp    0x100592c1
1006160b:	int3   
1006160c:	int3   
1006160d:	int3   
1006160e:	int3   
1006160f:	int3   
10061610:	lea    ecx,[ebp-0x50]
10061613:	jmp    0x10012ee9
10061618:	lea    ecx,[ebp-0x34]
1006161b:	jmp    0x100430c0
10061620:	mov    edx,DWORD PTR [esp+0x8]
10061624:	lea    eax,[edx-0x54]
10061627:	mov    ecx,DWORD PTR [edx-0x58]
1006162a:	xor    ecx,eax
1006162c:	call   0x10042f87
10061631:	mov    eax,0x10077e1c
10061636:	jmp    0x100592c1
1006163b:	int3   
1006163c:	int3   
1006163d:	int3   
1006163e:	int3   
1006163f:	int3   
10061640:	lea    ecx,[ebp-0x54]
10061643:	jmp    0x10012ee9
10061648:	lea    ecx,[ebp-0x38]
1006164b:	jmp    0x100430c0
10061650:	mov    edx,DWORD PTR [esp+0x8]
10061654:	lea    eax,[edx-0x5c]
10061657:	mov    ecx,DWORD PTR [edx-0x60]
1006165a:	xor    ecx,eax
1006165c:	call   0x10042f87
10061661:	mov    eax,0x10077e50
10061666:	jmp    0x100592c1
1006166b:	int3   
1006166c:	int3   
1006166d:	int3   
1006166e:	int3   
1006166f:	int3   
10061670:	lea    ecx,[ebp-0x54]
10061673:	jmp    0x10012ee9
10061678:	lea    ecx,[ebp-0x38]
1006167b:	jmp    0x100430c0
10061680:	mov    edx,DWORD PTR [esp+0x8]
10061684:	lea    eax,[edx-0x6c]
10061687:	mov    ecx,DWORD PTR [edx-0x70]
1006168a:	xor    ecx,eax
1006168c:	call   0x10042f87
10061691:	mov    eax,0x10077e84
10061696:	jmp    0x100592c1
1006169b:	int3   
1006169c:	int3   
1006169d:	int3   
1006169e:	int3   
1006169f:	int3   
100616a0:	lea    eax,[ebp-0x5c]
100616a3:	jmp    0x100372c0
100616a8:	lea    ecx,[ebp-0x54]
100616ab:	jmp    0x10012ee9
100616b0:	lea    ecx,[ebp-0x38]
100616b3:	jmp    0x100430c0
100616b8:	lea    ecx,[ebp-0x54]
100616bb:	jmp    0x10012ee9
100616c0:	lea    ecx,[ebp-0x38]
100616c3:	jmp    0x100430c0
100616c8:	mov    edx,DWORD PTR [esp+0x8]
100616cc:	lea    eax,[edx-0x5c]
100616cf:	mov    ecx,DWORD PTR [edx-0x60]
100616d2:	xor    ecx,eax
100616d4:	call   0x10042f87
100616d9:	mov    eax,0x10077ed0
100616de:	jmp    0x100592c1
100616e3:	int3   
100616e4:	int3   
100616e5:	int3   
100616e6:	int3   
100616e7:	int3   
100616e8:	int3   
100616e9:	int3   
100616ea:	int3   
100616eb:	int3   
100616ec:	int3   
100616ed:	int3   
100616ee:	int3   
100616ef:	int3   
100616f0:	lea    eax,[ebp-0x5c]
100616f3:	jmp    0x100372c0
100616f8:	lea    ecx,[ebp-0x54]
100616fb:	jmp    0x10012ee9
10061700:	lea    ecx,[ebp-0x38]
10061703:	jmp    0x100430c0
10061708:	mov    edx,DWORD PTR [esp+0x8]
1006170c:	lea    eax,[edx-0x64]
1006170f:	mov    ecx,DWORD PTR [edx-0x68]
10061712:	xor    ecx,eax
10061714:	call   0x10042f87
10061719:	mov    eax,0x10077f0c
1006171e:	jmp    0x100592c1
10061723:	int3   
10061724:	int3   
10061725:	int3   
10061726:	int3   
10061727:	int3   
10061728:	int3   
10061729:	int3   
1006172a:	int3   
1006172b:	int3   
1006172c:	int3   
1006172d:	int3   
1006172e:	int3   
1006172f:	int3   
10061730:	lea    eax,[ebp-0x5c]
10061733:	jmp    0x100372c0
10061738:	lea    ecx,[ebp-0x54]
1006173b:	jmp    0x10012ee9
10061740:	lea    ecx,[ebp-0x38]
10061743:	jmp    0x100430c0
10061748:	lea    ecx,[ebp-0x54]
1006174b:	jmp    0x10012ee9
10061750:	lea    ecx,[ebp-0x38]
10061753:	jmp    0x100430c0
10061758:	lea    ecx,[ebp-0x54]
1006175b:	jmp    0x10012ee9
10061760:	lea    ecx,[ebp-0x54]
10061763:	jmp    0x10012ee9
10061768:	lea    ecx,[ebp-0x54]
1006176b:	jmp    0x10012ee9
10061770:	mov    edx,DWORD PTR [esp+0x8]
10061774:	lea    eax,[edx-0x60]
10061777:	mov    ecx,DWORD PTR [edx-0x64]
1006177a:	xor    ecx,eax
1006177c:	call   0x10042f87
10061781:	mov    eax,0x10077f70
10061786:	jmp    0x100592c1
1006178b:	int3   
1006178c:	int3   
1006178d:	int3   
1006178e:	int3   
1006178f:	int3   
10061790:	lea    eax,[ebp-0x58]
10061793:	jmp    0x100372c0
10061798:	lea    ecx,[ebp-0x50]
1006179b:	jmp    0x10012ee9
100617a0:	lea    ecx,[ebp-0x34]
100617a3:	jmp    0x100430c0
100617a8:	mov    edx,DWORD PTR [esp+0x8]
100617ac:	lea    eax,[edx-0x5c]
100617af:	mov    ecx,DWORD PTR [edx-0x60]
100617b2:	xor    ecx,eax
100617b4:	call   0x10042f87
100617b9:	mov    eax,0x10077fac
100617be:	jmp    0x100592c1
100617c3:	int3   
100617c4:	int3   
100617c5:	int3   
100617c6:	int3   
100617c7:	int3   
100617c8:	int3   
100617c9:	int3   
100617ca:	int3   
100617cb:	int3   
100617cc:	int3   
100617cd:	int3   
100617ce:	int3   
100617cf:	int3   
100617d0:	lea    ecx,[ebp-0x864]
100617d6:	jmp    0x10012ee9
100617db:	lea    ecx,[ebp-0x848]
100617e1:	jmp    0x100430c0
100617e6:	mov    edx,DWORD PTR [esp+0x8]
100617ea:	lea    eax,[edx-0x8a4]
100617f0:	mov    ecx,DWORD PTR [edx-0x8a8]
100617f6:	xor    ecx,eax
100617f8:	call   0x10042f87
100617fd:	add    eax,0xc
10061800:	mov    ecx,DWORD PTR [edx-0x8]
10061803:	xor    ecx,eax
10061805:	call   0x10042f87
1006180a:	mov    eax,0x10077fe0
1006180f:	jmp    0x100592c1
10061814:	int3   
10061815:	int3   
10061816:	int3   
10061817:	int3   
10061818:	int3   
10061819:	int3   
1006181a:	int3   
1006181b:	int3   
1006181c:	int3   
1006181d:	int3   
1006181e:	int3   
1006181f:	int3   
10061820:	lea    ecx,[ebp-0x4c]
10061823:	jmp    0x10012ee9
10061828:	lea    ecx,[ebp-0x30]
1006182b:	jmp    0x10012ee9
10061830:	mov    edx,DWORD PTR [esp+0x8]
10061834:	lea    eax,[edx+0xc]
10061837:	mov    ecx,DWORD PTR [edx-0xac]
1006183d:	xor    ecx,eax
1006183f:	call   0x10042f87
10061844:	mov    ecx,DWORD PTR [edx-0x8]
10061847:	xor    ecx,eax
10061849:	call   0x10042f87
1006184e:	mov    eax,0x10078048
10061853:	jmp    0x100592c1
10061858:	int3   
10061859:	int3   
1006185a:	int3   
1006185b:	int3   
1006185c:	int3   
1006185d:	int3   
1006185e:	int3   
1006185f:	int3   
10061860:	mov    eax,DWORD PTR [ebp-0x14]
10061863:	and    eax,0x1
10061866:	je     0x10061878
1006186c:	and    DWORD PTR [ebp-0x14],0xfffffffe
10061870:	mov    ecx,DWORD PTR [ebp-0x10]
10061873:	jmp    0x10012ee9
10061878:	ret    
10061879:	mov    edx,DWORD PTR [esp+0x8]
1006187d:	lea    eax,[edx-0x28]
10061880:	mov    ecx,DWORD PTR [edx-0x2c]
10061883:	xor    ecx,eax
10061885:	call   0x10042f87
1006188a:	mov    eax,0x10078074
1006188f:	jmp    0x100592c1
10061894:	int3   
10061895:	int3   
10061896:	int3   
10061897:	int3   
10061898:	int3   
10061899:	int3   
1006189a:	int3   
1006189b:	int3   
1006189c:	int3   
1006189d:	int3   
1006189e:	int3   
1006189f:	int3   
100618a0:	mov    eax,DWORD PTR [ebp-0x58]
100618a3:	and    eax,0x1
100618a6:	je     0x100618b8
100618ac:	and    DWORD PTR [ebp-0x58],0xfffffffe
100618b0:	mov    eax,DWORD PTR [ebp+0x4]
100618b3:	jmp    0x10002087
100618b8:	ret    
100618b9:	lea    ecx,[ebp-0x54]
100618bc:	jmp    0x10012ee9
100618c1:	lea    ecx,[ebp-0x38]
100618c4:	jmp    0x100430c0
100618c9:	mov    edx,DWORD PTR [esp+0x8]
100618cd:	lea    eax,[edx-0x58]
100618d0:	mov    ecx,DWORD PTR [edx-0x5c]
100618d3:	xor    ecx,eax
100618d5:	call   0x10042f87
100618da:	mov    eax,0x100780b0
100618df:	jmp    0x100592c1
100618e4:	int3   
100618e5:	int3   
100618e6:	int3   
100618e7:	int3   
100618e8:	int3   
100618e9:	int3   
100618ea:	int3   
100618eb:	int3   
100618ec:	int3   
100618ed:	int3   
100618ee:	int3   
100618ef:	int3   
100618f0:	mov    eax,DWORD PTR [ebp-0x54]
100618f3:	and    eax,0x1
100618f6:	je     0x10061908
100618fc:	and    DWORD PTR [ebp-0x54],0xfffffffe
10061900:	mov    ecx,DWORD PTR [ebp-0x58]
10061903:	jmp    0x10012ee9
10061908:	ret    
10061909:	lea    esi,[ebp-0x68]
1006190c:	jmp    0x1000465b
10061911:	lea    ecx,[ebp-0x48]
10061914:	jmp    0x10012ee9
10061919:	lea    ecx,[ebp-0x2c]
1006191c:	jmp    0x10012ee9
10061921:	lea    ecx,[ebp-0x2c]
10061924:	jmp    0x10012ee9
10061929:	lea    ecx,[ebp-0x48]
1006192c:	jmp    0x10012ee9
10061931:	mov    edx,DWORD PTR [esp+0x8]
10061935:	lea    eax,[edx-0x74]
10061938:	mov    ecx,DWORD PTR [edx-0x78]
1006193b:	xor    ecx,eax
1006193d:	call   0x10042f87
10061942:	add    eax,0x10
10061945:	mov    ecx,DWORD PTR [edx-0x4]
10061948:	xor    ecx,eax
1006194a:	call   0x10042f87
1006194f:	mov    eax,0x10078104
10061954:	jmp    0x100592c1
10061959:	mov    edx,DWORD PTR [esp+0x8]
1006195d:	lea    eax,[edx+0xc]
10061960:	mov    ecx,DWORD PTR [edx-0x1c]
10061963:	xor    ecx,eax
10061965:	call   0x10042f87
1006196a:	mov    eax,0x1007815c
1006196f:	jmp    0x100592c1
10061974:	mov    edx,DWORD PTR [esp+0x8]
10061978:	lea    eax,[edx+0xc]
1006197b:	mov    ecx,DWORD PTR [edx-0x1c]
1006197e:	xor    ecx,eax
10061980:	call   0x10042f87
10061985:	mov    eax,0x100781b4
1006198a:	jmp    0x100592c1
1006198f:	mov    eax,DWORD PTR [ebp+0x8]
10061992:	add    eax,0x10
10061995:	jmp    0x1002bebc
1006199a:	mov    eax,DWORD PTR [ebp+0x8]
1006199d:	add    eax,0x20
100619a0:	jmp    0x1002bebc
100619a5:	mov    edx,DWORD PTR [esp+0x8]
100619a9:	lea    eax,[edx+0xc]
100619ac:	mov    ecx,DWORD PTR [edx-0x10]
100619af:	xor    ecx,eax
100619b1:	call   0x10042f87
100619b6:	mov    eax,0x100781e8
100619bb:	jmp    0x100592c1
100619c0:	mov    eax,DWORD PTR [ebp-0x1fc]
100619c6:	and    eax,0x1
100619c9:	je     0x100619e1
100619cf:	and    DWORD PTR [ebp-0x1fc],0xfffffffe
100619d6:	lea    ecx,[ebp-0x198]
100619dc:	jmp    0x10012ee9
100619e1:	ret    
100619e2:	mov    eax,DWORD PTR [ebp-0x1fc]
100619e8:	and    eax,0x2
100619eb:	je     0x10061a03
100619f1:	and    DWORD PTR [ebp-0x1fc],0xfffffffd
100619f8:	lea    ecx,[ebp-0x160]
100619fe:	jmp    0x10012ee9
10061a03:	ret    
10061a04:	mov    eax,DWORD PTR [ebp-0x1fc]
10061a0a:	and    eax,0x4
10061a0d:	je     0x10061a25
10061a13:	and    DWORD PTR [ebp-0x1fc],0xfffffffb
10061a1a:	lea    ecx,[ebp-0x17c]
10061a20:	jmp    0x10012ee9
10061a25:	ret    
10061a26:	mov    eax,DWORD PTR [ebp-0x1fc]
10061a2c:	and    eax,0x8
10061a2f:	je     0x10061a47
10061a35:	and    DWORD PTR [ebp-0x1fc],0xfffffff7
10061a3c:	lea    ecx,[ebp-0x128]
10061a42:	jmp    0x10012ee9
10061a47:	ret    
10061a48:	lea    ecx,[ebp-0x1ec]
10061a4e:	jmp    0x10012ee9
10061a53:	lea    ecx,[ebp-0x1b4]
10061a59:	jmp    0x10012ee9
10061a5e:	lea    ecx,[ebp-0x1d0]
10061a64:	jmp    0x10012ee9
10061a69:	lea    ecx,[ebp-0xd4]
10061a6f:	jmp    0x10012ee9
10061a74:	lea    ecx,[ebp-0x10c]
10061a7a:	jmp    0x10012ee9
10061a7f:	lea    ecx,[ebp-0x144]
10061a85:	jmp    0x10012ee9
10061a8a:	lea    ecx,[ebp-0xf0]
10061a90:	jmp    0x10012ee9
10061a95:	lea    ecx,[ebp-0xb8]
10061a9b:	jmp    0x10012ee9
10061aa0:	lea    esi,[ebp-0x9c]
10061aa6:	jmp    0x1000bcad
10061aab:	mov    edx,DWORD PTR [esp+0x8]
10061aaf:	lea    eax,[edx-0x1fc]
10061ab5:	mov    ecx,DWORD PTR [edx-0x200]
10061abb:	xor    ecx,eax
10061abd:	call   0x10042f87
10061ac2:	mov    eax,0x10078278
10061ac7:	jmp    0x100592c1
10061acc:	lea    ecx,[ebp-0x48]
10061acf:	jmp    0x10012ee9
10061ad4:	lea    ecx,[ebp-0x2c]
10061ad7:	jmp    0x10012ee9
10061adc:	mov    edx,DWORD PTR [esp+0x8]
10061ae0:	lea    eax,[edx-0x44]
10061ae3:	mov    ecx,DWORD PTR [edx-0x48]
10061ae6:	xor    ecx,eax
10061ae8:	call   0x10042f87
10061aed:	mov    eax,0x100782ac
10061af2:	jmp    0x100592c1
10061af7:	mov    esi,DWORD PTR [ebp+0x8]
10061afa:	add    esi,0x4
10061afd:	jmp    0x10024f10
10061b02:	mov    esi,DWORD PTR [ebp+0x8]
10061b05:	add    esi,0x18
10061b08:	jmp    0x10024f10
10061b0d:	mov    eax,DWORD PTR [ebp+0x8]
10061b10:	add    eax,0x2c
10061b13:	jmp    0x1002335a
10061b18:	mov    eax,DWORD PTR [ebp+0x8]
10061b1b:	add    eax,0x30
10061b1e:	jmp    0x100260c6
10061b23:	mov    eax,DWORD PTR [ebp+0x8]
10061b26:	add    eax,0x34
10061b29:	jmp    0x1000c9d1
10061b2e:	mov    edx,DWORD PTR [esp+0x8]
10061b32:	lea    eax,[edx+0xc]
10061b35:	mov    ecx,DWORD PTR [edx-0x10]
10061b38:	xor    ecx,eax
10061b3a:	call   0x10042f87
10061b3f:	mov    eax,0x100782f8
10061b44:	jmp    0x100592c1
10061b49:	mov    edx,DWORD PTR [esp+0x8]
10061b4d:	lea    eax,[edx+0xc]
10061b50:	mov    ecx,DWORD PTR [edx-0x1c]
10061b53:	xor    ecx,eax
10061b55:	call   0x10042f87
10061b5a:	mov    eax,0x10078350
10061b5f:	jmp    0x100592c1
10061b64:	lea    esi,[ebp-0x2c]
10061b67:	jmp    0x10004b69
10061b6c:	mov    edx,DWORD PTR [esp+0x8]
10061b70:	lea    eax,[edx+0xc]
10061b73:	mov    ecx,DWORD PTR [edx-0x44]
10061b76:	xor    ecx,eax
10061b78:	call   0x10042f87
10061b7d:	mov    ecx,DWORD PTR [edx-0x4]
10061b80:	xor    ecx,eax
10061b82:	call   0x10042f87
10061b87:	mov    eax,0x1007837c
10061b8c:	jmp    0x100592c1
10061b91:	lea    eax,[ebp-0x18]
10061b94:	jmp    0x10034de0
10061b99:	lea    ecx,[ebp-0x38]
10061b9c:	jmp    0x10012ee9
10061ba1:	lea    ecx,[ebp-0x54]
10061ba4:	jmp    0x10012ee9
10061ba9:	lea    edi,[ebp-0x1c]
10061bac:	jmp    0x100024f8
10061bb1:	mov    edx,DWORD PTR [esp+0x8]
10061bb5:	lea    eax,[edx+0xc]
10061bb8:	mov    ecx,DWORD PTR [edx-0x58]
10061bbb:	xor    ecx,eax
10061bbd:	call   0x10042f87
10061bc2:	mov    ecx,DWORD PTR [edx-0x8]
10061bc5:	xor    ecx,eax
10061bc7:	call   0x10042f87
10061bcc:	mov    eax,0x100783f4
10061bd1:	jmp    0x100592c1
10061bd6:	lea    eax,[ebp-0x54]
10061bd9:	jmp    0x10034de0
10061bde:	lea    ecx,[ebp-0x4c]
10061be1:	jmp    0x10012ee9
10061be6:	lea    ecx,[ebp-0x30]
10061be9:	jmp    0x10012ee9
10061bee:	mov    edx,DWORD PTR [esp+0x8]
10061bf2:	lea    eax,[edx+0xc]
10061bf5:	mov    ecx,DWORD PTR [edx-0x58]
10061bf8:	xor    ecx,eax
10061bfa:	call   0x10042f87
10061bff:	mov    ecx,DWORD PTR [edx-0x8]
10061c02:	xor    ecx,eax
10061c04:	call   0x10042f87
10061c09:	mov    eax,0x10078464
10061c0e:	jmp    0x100592c1
10061c13:	lea    eax,[ebp-0x14]
10061c16:	jmp    0x1002335a
10061c1b:	lea    eax,[ebp-0x2c]
10061c1e:	jmp    0x1002335a
10061c23:	lea    eax,[ebp-0x24]
10061c26:	jmp    0x1002335a
10061c2b:	lea    eax,[ebp-0x28]
10061c2e:	jmp    0x1002335a
10061c33:	lea    eax,[ebp-0x20]
10061c36:	jmp    0x1002335a
10061c3b:	mov    edx,DWORD PTR [esp+0x8]
10061c3f:	lea    eax,[edx-0x2c]
10061c42:	mov    ecx,DWORD PTR [edx-0x30]
10061c45:	xor    ecx,eax
10061c47:	call   0x10042f87
10061c4c:	mov    eax,0x100784b0
10061c51:	jmp    0x100592c1
10061c56:	lea    eax,[ebp-0x2c]
10061c59:	jmp    0x10034de0
10061c5e:	lea    ecx,[ebp-0x9c]
10061c64:	jmp    0x10012ee9
10061c69:	lea    ecx,[ebp-0x80]
10061c6c:	jmp    0x10012ee9
10061c71:	lea    esi,[ebp-0x9c]
10061c77:	jmp    0x1001a7ad
10061c7c:	lea    eax,[ebp-0x28]
10061c7f:	jmp    0x1001b1ff
10061c84:	lea    esi,[ebp-0x1c]
10061c87:	jmp    0x1001b2d3
10061c8c:	lea    ecx,[ebp-0xe0]
10061c92:	jmp    0x10012ee9
10061c97:	mov    edx,DWORD PTR [esp+0x8]
10061c9b:	lea    eax,[edx+0xc]
10061c9e:	mov    ecx,DWORD PTR [edx-0xe4]
10061ca4:	xor    ecx,eax
10061ca6:	call   0x10042f87
10061cab:	mov    eax,0x10078544
10061cb0:	jmp    0x100592c1
10061cb5:	lea    eax,[ebp-0x38]
10061cb8:	jmp    0x10001234
10061cbd:	mov    edx,DWORD PTR [esp+0x8]
10061cc1:	lea    eax,[edx+0xc]
10061cc4:	mov    ecx,DWORD PTR [edx-0x48]
10061cc7:	xor    ecx,eax
10061cc9:	call   0x10042f87
10061cce:	mov    eax,0x10078578
10061cd3:	jmp    0x100592c1
10061cd8:	lea    ecx,[ebp-0x7c]
10061cdb:	jmp    0x10012ee9
10061ce0:	lea    ecx,[ebp-0x3c]
10061ce3:	jmp    0x10001195
10061ce8:	mov    ecx,DWORD PTR [ebp-0x54]
10061ceb:	jmp    0x10001195
10061cf0:	lea    esi,[ebp-0xfc]
10061cf6:	jmp    0x10001f1b
10061cfb:	lea    ecx,[ebp-0xbc]
10061d01:	jmp    0x10012ee9
10061d06:	lea    esi,[ebp-0xbc]
10061d0c:	jmp    0x10001f1b
10061d11:	mov    edx,DWORD PTR [esp+0x8]
10061d15:	lea    eax,[edx+0xc]
10061d18:	mov    ecx,DWORD PTR [edx-0x100]
10061d1e:	xor    ecx,eax
10061d20:	call   0x10042f87
10061d25:	mov    ecx,DWORD PTR [edx-0x8]
10061d28:	xor    ecx,eax
10061d2a:	call   0x10042f87
10061d2f:	mov    eax,0x10078604
10061d34:	jmp    0x100592c1
10061d39:	lea    ecx,[ebp-0x4c]
10061d3c:	jmp    0x10012ee9
10061d41:	lea    ecx,[ebp-0x30]
10061d44:	jmp    0x10012ee9
10061d49:	lea    ecx,[ebp-0x6c]
10061d4c:	jmp    0x10001195
10061d51:	mov    edx,DWORD PTR [esp+0x8]
10061d55:	lea    eax,[edx-0x64]
10061d58:	mov    ecx,DWORD PTR [edx-0x68]
10061d5b:	xor    ecx,eax
10061d5d:	call   0x10042f87
10061d62:	add    eax,0x4
10061d65:	mov    ecx,DWORD PTR [edx-0x8]
10061d68:	xor    ecx,eax
10061d6a:	call   0x10042f87
10061d6f:	mov    eax,0x10078648
10061d74:	jmp    0x100592c1
10061d79:	mov    eax,DWORD PTR [ebp+0x8]
10061d7c:	jmp    0x1000122f
10061d81:	mov    edx,DWORD PTR [esp+0x8]
10061d85:	lea    eax,[edx+0xc]
10061d88:	mov    ecx,DWORD PTR [edx-0x10]
10061d8b:	xor    ecx,eax
10061d8d:	call   0x10042f87
10061d92:	mov    eax,0x10078674
10061d97:	jmp    0x100592c1
10061d9c:	lea    eax,[ebp-0x14]
10061d9f:	jmp    0x10009928
10061da4:	lea    eax,[ebp-0x18]
10061da7:	jmp    0x10034de0
10061dac:	mov    edx,DWORD PTR [esp+0x8]
10061db0:	lea    eax,[edx-0xc]
10061db3:	mov    ecx,DWORD PTR [edx-0x10]
10061db6:	xor    ecx,eax
10061db8:	call   0x10042f87
10061dbd:	mov    eax,0x100786a8
10061dc2:	jmp    0x100592c1
10061dc7:	mov    eax,DWORD PTR [ebp-0x10]
10061dca:	and    eax,0x1
10061dcd:	je     0x10061ddf
10061dd3:	and    DWORD PTR [ebp-0x10],0xfffffffe
10061dd7:	mov    esi,DWORD PTR [ebp+0x8]
10061dda:	jmp    0x10004232
10061ddf:	ret    
10061de0:	lea    ecx,[ebp-0x34]
10061de3:	jmp    0x10012ee9
10061de8:	lea    ecx,[ebp-0x34]
10061deb:	jmp    0x10012ee9
10061df0:	lea    ecx,[ebp-0x34]
10061df3:	jmp    0x10012ee9
10061df8:	lea    ecx,[ebp-0x34]
10061dfb:	jmp    0x10012ee9
10061e00:	lea    ecx,[ebp-0x34]
10061e03:	jmp    0x10012ee9
10061e08:	lea    ecx,[ebp-0x34]
10061e0b:	jmp    0x10012ee9
10061e10:	lea    ecx,[ebp-0x34]
10061e13:	jmp    0x10012ee9
10061e18:	mov    edx,DWORD PTR [esp+0x8]
10061e1c:	lea    eax,[edx+0xc]
10061e1f:	mov    ecx,DWORD PTR [edx-0x38]
10061e22:	xor    ecx,eax
10061e24:	call   0x10042f87
10061e29:	mov    eax,0x10078710
10061e2e:	jmp    0x100592c1
10061e33:	lea    eax,[ebp-0x60]
10061e36:	jmp    0x100149a9
10061e3b:	lea    esi,[ebp-0x6c]
10061e3e:	jmp    0x1000772e
10061e43:	mov    edx,DWORD PTR [esp+0x8]
10061e47:	lea    eax,[edx+0xc]
10061e4a:	mov    ecx,DWORD PTR [edx-0x70]
10061e4d:	xor    ecx,eax
10061e4f:	call   0x10042f87
10061e54:	mov    ecx,DWORD PTR [edx-0x4]
10061e57:	xor    ecx,eax
10061e59:	call   0x10042f87
10061e5e:	mov    eax,0x10078744
10061e63:	jmp    0x100592c1
10061e68:	lea    ecx,[ebp+0x8]
10061e6b:	jmp    0x10012ee9
10061e70:	mov    edx,DWORD PTR [esp+0x8]
10061e74:	lea    eax,[edx+0xc]
10061e77:	mov    ecx,DWORD PTR [edx-0x44]
10061e7a:	xor    ecx,eax
10061e7c:	call   0x10042f87
10061e81:	mov    eax,0x10078770
10061e86:	jmp    0x100592c1
10061e8b:	lea    eax,[ebp-0x28]
10061e8e:	jmp    0x10001234
10061e93:	mov    edx,DWORD PTR [esp+0x8]
10061e97:	lea    eax,[edx-0x4c]
10061e9a:	mov    ecx,DWORD PTR [edx-0x50]
10061e9d:	xor    ecx,eax
10061e9f:	call   0x10042f87
10061ea4:	mov    eax,0x100787a4
10061ea9:	jmp    0x100592c1
10061eae:	lea    esi,[ebp-0xac]
10061eb4:	jmp    0x100132d1
10061eb9:	mov    esi,DWORD PTR [ebp-0xc0]
10061ebf:	jmp    0x100132d1
10061ec4:	lea    edi,[ebp-0x234]
10061eca:	jmp    0x10013358
10061ecf:	lea    ecx,[ebp-0x184]
10061ed5:	jmp    0x10012ee9
10061eda:	lea    edi,[ebp-0x184]
10061ee0:	jmp    0x10013358
10061ee5:	mov    edx,DWORD PTR [esp+0x8]
10061ee9:	lea    eax,[edx+0xc]
10061eec:	mov    ecx,DWORD PTR [edx-0x238]
10061ef2:	xor    ecx,eax
10061ef4:	call   0x10042f87
10061ef9:	mov    ecx,DWORD PTR [edx-0x8]
10061efc:	xor    ecx,eax
10061efe:	call   0x10042f87
10061f03:	mov    eax,0x10078824
10061f08:	jmp    0x100592c1
10061f0d:	jmp    0x100132cc
10061f12:	mov    edx,DWORD PTR [esp+0x8]
10061f16:	lea    eax,[edx+0xc]
10061f19:	mov    ecx,DWORD PTR [edx-0x10]
10061f1c:	xor    ecx,eax
10061f1e:	call   0x10042f87
10061f23:	mov    eax,0x10078850
10061f28:	jmp    0x100592c1
10061f2d:	lea    esi,[ebp-0x1c]
10061f30:	jmp    0x1000465b
10061f35:	mov    edx,DWORD PTR [esp+0x8]
10061f39:	lea    eax,[edx+0xc]
10061f3c:	mov    ecx,DWORD PTR [edx-0x20]
10061f3f:	xor    ecx,eax
10061f41:	call   0x10042f87
10061f46:	mov    eax,0x1007887c
10061f4b:	jmp    0x100592c1
10061f50:	lea    ecx,[ebp-0x2c]
10061f53:	jmp    0x10012ee9
10061f58:	lea    ecx,[ebp-0x48]
10061f5b:	jmp    0x10012ee9
10061f60:	lea    eax,[ebp+0x10]
10061f63:	jmp    0x10009928
10061f68:	mov    edx,DWORD PTR [esp+0x8]
10061f6c:	lea    eax,[edx+0xc]
10061f6f:	mov    ecx,DWORD PTR [edx-0x4c]
10061f72:	xor    ecx,eax
10061f74:	call   0x10042f87
10061f79:	mov    eax,0x100788b8
10061f7e:	jmp    0x100592c1
10061f83:	lea    ecx,[ebp-0x28]
10061f86:	jmp    0x10012ee9
10061f8b:	lea    ecx,[ebp-0x44]
10061f8e:	jmp    0x10012ee9
10061f93:	mov    edx,DWORD PTR [esp+0x8]
10061f97:	lea    eax,[edx+0xc]
10061f9a:	mov    ecx,DWORD PTR [edx-0x4c]
10061f9d:	xor    ecx,eax
10061f9f:	call   0x10042f87
10061fa4:	mov    eax,0x100788ec
10061fa9:	jmp    0x100592c1
10061fae:	lea    ecx,[ebp-0x2c]
10061fb1:	jmp    0x10012ee9
10061fb6:	mov    edx,DWORD PTR [esp+0x8]
10061fba:	lea    eax,[edx+0xc]
10061fbd:	mov    ecx,DWORD PTR [edx-0x44]
10061fc0:	xor    ecx,eax
10061fc2:	call   0x10042f87
10061fc7:	mov    ecx,DWORD PTR [edx-0x4]
10061fca:	xor    ecx,eax
10061fcc:	call   0x10042f87
10061fd1:	mov    eax,0x10078918
10061fd6:	jmp    0x100592c1
10061fdb:	mov    edx,DWORD PTR [esp+0x8]
10061fdf:	lea    eax,[edx+0xc]
10061fe2:	mov    ecx,DWORD PTR [edx-0x18]
10061fe5:	xor    ecx,eax
10061fe7:	call   0x10042f87
10061fec:	mov    eax,0x10078970
10061ff1:	jmp    0x100592c1
10061ff6:	lea    ecx,[ebp-0x4c]
10061ff9:	jmp    0x10012ee9
10061ffe:	lea    ecx,[ebp-0x2c]
10062001:	jmp    0x10012ee9
10062006:	mov    edx,DWORD PTR [esp+0x8]
1006200a:	lea    eax,[edx+0xc]
1006200d:	mov    ecx,DWORD PTR [edx-0x50]
10062010:	xor    ecx,eax
10062012:	call   0x10042f87
10062017:	mov    ecx,DWORD PTR [edx-0x4]
1006201a:	xor    ecx,eax
1006201c:	call   0x10042f87
10062021:	mov    eax,0x100789a4
10062026:	jmp    0x100592c1
1006202b:	push   DWORD PTR [ebp-0x14]
1006202e:	call   0x10042f82
10062033:	pop    ecx
10062034:	ret    
10062035:	mov    edx,DWORD PTR [esp+0x8]
10062039:	lea    eax,[edx+0xc]
1006203c:	mov    ecx,DWORD PTR [edx-0x18]
1006203f:	xor    ecx,eax
10062041:	call   0x10042f87
10062046:	mov    ecx,DWORD PTR [edx+0x1000c]
1006204c:	xor    ecx,eax
1006204e:	call   0x10042f87
10062053:	mov    eax,0x100789d0
10062058:	jmp    0x100592c1
1006205d:	lea    edi,[ebp+0x8]
10062060:	jmp    0x100024f8
10062065:	lea    ecx,[ebp-0x28]
10062068:	jmp    0x10012ee9
1006206d:	mov    edx,DWORD PTR [esp+0x8]
10062071:	lea    eax,[edx+0xc]
10062074:	mov    ecx,DWORD PTR [edx-0x2c]
10062077:	xor    ecx,eax
10062079:	call   0x10042f87
1006207e:	mov    eax,0x10078a04
10062083:	jmp    0x100592c1
10062088:	lea    ecx,[ebp-0x2c]
1006208b:	jmp    0x10012ee9
10062090:	mov    edx,DWORD PTR [esp+0x8]
10062094:	lea    eax,[edx+0xc]
10062097:	mov    ecx,DWORD PTR [edx-0x38]
1006209a:	xor    ecx,eax
1006209c:	call   0x10042f87
100620a1:	mov    ecx,DWORD PTR [edx-0x4]
100620a4:	xor    ecx,eax
100620a6:	call   0x10042f87
100620ab:	mov    eax,0x10078a30
100620b0:	jmp    0x100592c1
100620b5:	mov    eax,DWORD PTR [ebp-0x14]
100620b8:	and    eax,0x1
100620bb:	je     0x100620cd
100620c1:	and    DWORD PTR [ebp-0x14],0xfffffffe
100620c5:	lea    ecx,[ebp-0x30]
100620c8:	jmp    0x10012ee9
100620cd:	ret    
100620ce:	lea    esi,[ebp-0x14]
100620d1:	jmp    0x1000aa41
100620d6:	lea    ecx,[ebp-0x4c]
100620d9:	jmp    0x10012ee9
100620de:	mov    edx,DWORD PTR [esp+0x8]
100620e2:	lea    eax,[edx+0xc]
100620e5:	mov    ecx,DWORD PTR [edx-0x50]
100620e8:	xor    ecx,eax
100620ea:	call   0x10042f87
100620ef:	mov    eax,0x10078a6c
100620f4:	jmp    0x100592c1
100620f9:	lea    ecx,[ebp-0x80]
100620fc:	jmp    0x10012ee9
10062101:	lea    ecx,[ebp-0x80]
10062104:	jmp    0x10012ee9
10062109:	lea    ecx,[ebp-0x48]
1006210c:	jmp    0x10012ee9
10062111:	lea    ecx,[ebp-0x64]
10062114:	jmp    0x10012ee9
10062119:	lea    ecx,[ebp-0x2c]
1006211c:	jmp    0x10012ee9
10062121:	mov    edx,DWORD PTR [esp+0x8]
10062125:	lea    eax,[edx-0x84]
1006212b:	mov    ecx,DWORD PTR [edx-0x88]
10062131:	xor    ecx,eax
10062133:	call   0x10042f87
10062138:	mov    eax,0x10078ab8
1006213d:	jmp    0x100592c1
10062142:	mov    ecx,DWORD PTR [ebp+0x8]
10062145:	jmp    0x10012ee9
1006214a:	mov    edx,DWORD PTR [esp+0x8]
1006214e:	lea    eax,[edx+0xc]
10062151:	mov    ecx,DWORD PTR [edx-0x10]
10062154:	xor    ecx,eax
10062156:	call   0x10042f87
1006215b:	mov    eax,0x10078ae4
10062160:	jmp    0x100592c1
10062165:	lea    esi,[ebp+0x24]
10062168:	jmp    0x10004232
1006216d:	lea    ecx,[ebp+0x8]
10062170:	jmp    0x10012ee9
10062175:	mov    ecx,DWORD PTR [ebp-0x10]
10062178:	jmp    0x10012ee9
1006217d:	mov    edx,DWORD PTR [esp+0x8]
10062181:	lea    eax,[edx+0xc]
10062184:	mov    ecx,DWORD PTR [edx-0x18]
10062187:	xor    ecx,eax
10062189:	call   0x10042f87
1006218e:	mov    eax,0x10078b20
10062193:	jmp    0x100592c1
10062198:	jmp    0x1000206e
1006219d:	mov    edx,DWORD PTR [esp+0x8]
100621a1:	lea    eax,[edx+0xc]
100621a4:	mov    ecx,DWORD PTR [edx-0x1c]
100621a7:	xor    ecx,eax
100621a9:	call   0x10042f87
100621ae:	mov    eax,0x10078b80
100621b3:	jmp    0x100592c1
100621b8:	lea    ecx,[ebp-0x2c]
100621bb:	jmp    0x10012ee9
100621c0:	mov    edx,DWORD PTR [esp+0x8]
100621c4:	lea    eax,[edx+0xc]
100621c7:	mov    ecx,DWORD PTR [edx-0x58]
100621ca:	xor    ecx,eax
100621cc:	call   0x10042f87
100621d1:	mov    eax,0x10078bac
100621d6:	jmp    0x100592c1
100621db:	lea    eax,[ebp-0x14]
100621de:	jmp    0x10009d4e
100621e3:	mov    edx,DWORD PTR [esp+0x8]
100621e7:	lea    eax,[edx+0xc]
100621ea:	mov    ecx,DWORD PTR [edx-0x1c]
100621ed:	xor    ecx,eax
100621ef:	call   0x10042f87
100621f4:	mov    eax,0x10078bd8
100621f9:	jmp    0x100592c1
100621fe:	mov    eax,DWORD PTR [ebp-0xcc]
10062204:	and    eax,0x1
10062207:	je     0x1006221f
1006220d:	and    DWORD PTR [ebp-0xcc],0xfffffffe
10062214:	lea    ecx,[ebp-0xa0]
1006221a:	jmp    0x10012ee9
1006221f:	ret    
10062220:	mov    eax,DWORD PTR [ebp-0xcc]
10062226:	and    eax,0x2
10062229:	je     0x10062241
1006222f:	and    DWORD PTR [ebp-0xcc],0xfffffffd
10062236:	lea    ecx,[ebp-0xbc]
1006223c:	jmp    0x10012ee9
10062241:	ret    
10062242:	lea    ecx,[ebp-0x30]
10062245:	jmp    0x10012ee9
1006224a:	lea    ecx,[ebp-0x4c]
1006224d:	jmp    0x10012ee9
10062252:	lea    ecx,[ebp-0xbc]
10062258:	jmp    0x10012ee9
1006225d:	lea    ecx,[ebp-0x84]
10062263:	jmp    0x10012ee9
10062268:	lea    ecx,[ebp-0xa0]
1006226e:	jmp    0x10012ee9
10062273:	lea    ecx,[ebp-0x68]
10062276:	jmp    0x10012ee9
1006227b:	lea    ecx,[ebp-0x84]
10062281:	jmp    0x10012ee9
10062286:	mov    edx,DWORD PTR [esp+0x8]
1006228a:	lea    eax,[edx-0xcc]
10062290:	mov    ecx,DWORD PTR [edx-0xd0]
10062296:	xor    ecx,eax
10062298:	call   0x10042f87
1006229d:	add    eax,0xc
100622a0:	mov    ecx,DWORD PTR [edx-0x8]
100622a3:	xor    ecx,eax
100622a5:	call   0x10042f87
100622aa:	mov    eax,0x10078c58
100622af:	jmp    0x100592c1
100622b4:	lea    ecx,[ebp-0x48]
100622b7:	jmp    0x10012ee9
100622bc:	lea    ecx,[ebp-0x2c]
100622bf:	jmp    0x10012ee9
100622c4:	mov    edx,DWORD PTR [esp+0x8]
100622c8:	lea    eax,[edx+0xc]
100622cb:	mov    ecx,DWORD PTR [edx-0x4c]
100622ce:	xor    ecx,eax
100622d0:	call   0x10042f87
100622d5:	mov    eax,0x10078c8c
100622da:	jmp    0x100592c1
100622df:	lea    ecx,[ebp-0x30]
100622e2:	jmp    0x10012ee9
100622e7:	mov    edx,DWORD PTR [esp+0x8]
100622eb:	lea    eax,[edx-0x44]
100622ee:	mov    ecx,DWORD PTR [edx-0x48]
100622f1:	xor    ecx,eax
100622f3:	call   0x10042f87
100622f8:	add    eax,0xc
100622fb:	mov    ecx,DWORD PTR [edx-0x8]
100622fe:	xor    ecx,eax
10062300:	call   0x10042f87
10062305:	mov    eax,0x10078cb8
1006230a:	jmp    0x100592c1
1006230f:	lea    ecx,[ebp-0x50]
10062312:	jmp    0x10012ee9
10062317:	lea    eax,[ebp-0xd8]
1006231d:	jmp    0x10009928
10062322:	lea    ecx,[ebp-0x34]
10062325:	jmp    0x10012ee9
1006232a:	lea    esi,[ebp-0xb8]
10062330:	jmp    0x10004232
10062335:	mov    esi,DWORD PTR [ebp-0xc8]
1006233b:	jmp    0x10004232
10062340:	lea    edi,[ebp-0x7c]
10062343:	jmp    0x10008081
10062348:	lea    edi,[ebp-0xa8]
1006234e:	jmp    0x10008081
10062353:	mov    edx,DWORD PTR [esp+0x8]
10062357:	lea    eax,[edx-0xdc]
1006235d:	mov    ecx,DWORD PTR [edx-0xe0]
10062363:	xor    ecx,eax
10062365:	call   0x10042f87
1006236a:	add    eax,0xc
1006236d:	mov    ecx,DWORD PTR [edx-0x8]
10062370:	xor    ecx,eax
10062372:	call   0x10042f87
10062377:	mov    eax,0x10078d14
1006237c:	jmp    0x100592c1
10062381:	lea    eax,[ebp+0xc]
10062384:	jmp    0x10009928
10062389:	lea    ecx,[ebp-0x30]
1006238c:	jmp    0x10012ee9
10062391:	mov    esi,DWORD PTR [ebp-0x50]
10062394:	jmp    0x10004232
10062399:	lea    edi,[ebp-0xa8]
1006239f:	jmp    0x10008081
100623a4:	lea    edi,[ebp-0x7c]
100623a7:	jmp    0x10008081
100623ac:	mov    edx,DWORD PTR [esp+0x8]
100623b0:	lea    eax,[edx+0xc]
100623b3:	mov    ecx,DWORD PTR [edx-0xac]
100623b9:	xor    ecx,eax
100623bb:	call   0x10042f87
100623c0:	mov    ecx,DWORD PTR [edx-0x4]
100623c3:	xor    ecx,eax
100623c5:	call   0x10042f87
100623ca:	mov    eax,0x10078d60
100623cf:	jmp    0x100592c1
100623d4:	lea    ecx,[ebp-0x30]
100623d7:	jmp    0x10012ee9
100623dc:	mov    edx,DWORD PTR [esp+0x8]
100623e0:	lea    eax,[edx+0xc]
100623e3:	mov    ecx,DWORD PTR [edx-0x4c]
100623e6:	xor    ecx,eax
100623e8:	call   0x10042f87
100623ed:	mov    ecx,DWORD PTR [edx-0x4]
100623f0:	xor    ecx,eax
100623f2:	call   0x10042f87
100623f7:	mov    eax,0x10078d8c
100623fc:	jmp    0x100592c1
10062401:	lea    eax,[ebp-0x14]
10062404:	jmp    0x10009928
10062409:	mov    edx,DWORD PTR [esp+0x8]
1006240d:	lea    eax,[edx+0xc]
10062410:	mov    ecx,DWORD PTR [edx-0x2c]
10062413:	xor    ecx,eax
10062415:	call   0x10042f87
1006241a:	mov    eax,0x10078db8
1006241f:	jmp    0x100592c1
10062424:	lea    ecx,[ebp-0x68]
10062427:	jmp    0x10006e29
1006242c:	lea    ecx,[ebp-0x30]
1006242f:	jmp    0x1000722b
10062434:	lea    ecx,[ebp-0x40]
10062437:	jmp    0x10006e29
1006243c:	lea    ecx,[ebp-0x2c]
1006243f:	jmp    0x10012ee9
10062444:	lea    ecx,[ebp-0x84]
1006244a:	jmp    0x10012ee9
1006244f:	lea    ecx,[ebp-0x58]
10062452:	jmp    0x10006e29
10062457:	lea    ecx,[ebp-0x84]
1006245d:	jmp    0x10012ee9
10062462:	mov    edx,DWORD PTR [esp+0x8]
10062466:	lea    eax,[edx+0xc]
10062469:	mov    ecx,DWORD PTR [edx-0x88]
1006246f:	xor    ecx,eax
10062471:	call   0x10042f87
10062476:	mov    ecx,DWORD PTR [edx-0x4]
10062479:	xor    ecx,eax
1006247b:	call   0x10042f87
10062480:	mov    eax,0x10078e14
10062485:	jmp    0x100592c1
1006248a:	mov    eax,DWORD PTR [ebp+0x8]
1006248d:	jmp    0x10002087
10062492:	mov    edx,DWORD PTR [esp+0x8]
10062496:	lea    eax,[edx+0xc]
10062499:	mov    ecx,DWORD PTR [edx-0x10]
1006249c:	xor    ecx,eax
1006249e:	call   0x10042f87
100624a3:	mov    eax,0x10078e40
100624a8:	jmp    0x100592c1
100624ad:	lea    eax,[ebp-0x1c]
100624b0:	jmp    0x10034de0
100624b5:	mov    edx,DWORD PTR [esp+0x8]
100624b9:	lea    eax,[edx-0x14]
100624bc:	mov    ecx,DWORD PTR [edx-0x18]
100624bf:	xor    ecx,eax
100624c1:	call   0x10042f87
100624c6:	mov    eax,0x10078e6c
100624cb:	jmp    0x100592c1
100624d0:	push   DWORD PTR [ebp-0x14]
100624d3:	call   0x10042f82
100624d8:	pop    ecx
100624d9:	ret    
100624da:	lea    eax,[ebp-0x14]
100624dd:	jmp    0x1000421a
100624e2:	mov    edx,DWORD PTR [esp+0x8]
100624e6:	lea    eax,[edx+0xc]
100624e9:	mov    ecx,DWORD PTR [edx-0x18]
100624ec:	xor    ecx,eax
100624ee:	call   0x10042f87
100624f3:	mov    eax,0x10078ea0
100624f8:	jmp    0x100592c1
100624fd:	int3   
100624fe:	int3   
100624ff:	int3   
10062500:	lea    eax,[ebp-0x14]
10062503:	jmp    0x10009928
10062508:	lea    eax,[ebp-0x10]
1006250b:	jmp    0x10009928
10062510:	mov    edx,DWORD PTR [esp+0x8]
10062514:	lea    eax,[edx-0x20]
10062517:	mov    ecx,DWORD PTR [edx-0x24]
1006251a:	xor    ecx,eax
1006251c:	call   0x10042f87
10062521:	mov    eax,0x10078ed4
10062526:	jmp    0x100592c1
1006252b:	int3   
1006252c:	int3   
1006252d:	int3   
1006252e:	int3   
1006252f:	int3   
10062530:	mov    eax,DWORD PTR [ebp-0x18]
10062533:	push   eax
10062534:	call   0x10042f82
10062539:	pop    ecx
1006253a:	ret    
1006253b:	lea    edi,[ebp-0x28]
1006253e:	jmp    0x100024f8
10062543:	mov    eax,DWORD PTR [ebp-0x18]
10062546:	push   eax
10062547:	call   0x10042f82
1006254c:	pop    ecx
1006254d:	ret    
1006254e:	lea    edi,[ebp-0x18]
10062551:	jmp    0x100024f8
10062556:	lea    edi,[ebp-0x14]
10062559:	jmp    0x100024f8
1006255e:	mov    edx,DWORD PTR [esp+0x8]
10062562:	lea    eax,[edx+0xc]
10062565:	mov    ecx,DWORD PTR [edx-0x2c]
10062568:	xor    ecx,eax
1006256a:	call   0x10042f87
1006256f:	mov    ecx,DWORD PTR [edx-0x4]
10062572:	xor    ecx,eax
10062574:	call   0x10042f87
10062579:	mov    eax,0x10078f30
1006257e:	jmp    0x100592c1
10062583:	int3   
10062584:	int3   
10062585:	int3   
10062586:	int3   
10062587:	int3   
10062588:	int3   
10062589:	int3   
1006258a:	int3   
1006258b:	int3   
1006258c:	int3   
1006258d:	int3   
1006258e:	int3   
1006258f:	int3   
10062590:	lea    eax,[ebp-0x14]
10062593:	jmp    0x10034420
10062598:	lea    eax,[ebp-0x24]
1006259b:	jmp    0x10034de0
100625a0:	lea    eax,[ebp-0x1c]
100625a3:	jmp    0x10034420
100625a8:	mov    edx,DWORD PTR [esp+0x8]
100625ac:	lea    eax,[edx+0xc]
100625af:	mov    ecx,DWORD PTR [edx-0x2c]
100625b2:	xor    ecx,eax
100625b4:	call   0x10042f87
100625b9:	mov    eax,0x10078fa0
100625be:	jmp    0x100592c1
100625c3:	int3   
100625c4:	int3   
100625c5:	int3   
100625c6:	int3   
100625c7:	int3   
100625c8:	int3   
100625c9:	int3   
100625ca:	int3   
100625cb:	int3   
100625cc:	int3   
100625cd:	int3   
100625ce:	int3   
100625cf:	int3   
100625d0:	mov    edx,DWORD PTR [esp+0x8]
100625d4:	lea    eax,[edx+0xc]
100625d7:	mov    ecx,DWORD PTR [edx-0x20]
100625da:	xor    ecx,eax
100625dc:	call   0x10042f87
100625e1:	mov    eax,0x10078ff8
100625e6:	jmp    0x100592c1
100625eb:	int3   
100625ec:	int3   
100625ed:	int3   
100625ee:	int3   
100625ef:	int3   
100625f0:	lea    ecx,[ebp-0x40]
100625f3:	jmp    0x100379a0
100625f8:	mov    edx,DWORD PTR [esp+0x8]
100625fc:	lea    eax,[edx-0x44]
100625ff:	mov    ecx,DWORD PTR [edx-0x48]
10062602:	xor    ecx,eax
10062604:	call   0x10042f87
10062609:	mov    eax,0x10079024
1006260e:	jmp    0x100592c1
10062613:	int3   
10062614:	int3   
10062615:	int3   
10062616:	int3   
10062617:	int3   
10062618:	int3   
10062619:	int3   
1006261a:	int3   
1006261b:	int3   
1006261c:	int3   
1006261d:	int3   
1006261e:	int3   
1006261f:	int3   
10062620:	lea    ecx,[ebp-0x14]
10062623:	jmp    0x100379a0
10062628:	mov    eax,DWORD PTR [ebp-0x1c]
1006262b:	and    eax,0x1
1006262e:	je     0x10062640
10062634:	and    DWORD PTR [ebp-0x1c],0xfffffffe
10062638:	mov    ecx,DWORD PTR [ebp-0x18]
1006263b:	jmp    0x10012ee9
10062640:	ret    
10062641:	mov    edx,DWORD PTR [esp+0x8]
10062645:	lea    eax,[edx-0x1c]
10062648:	mov    ecx,DWORD PTR [edx-0x20]
1006264b:	xor    ecx,eax
1006264d:	call   0x10042f87
10062652:	mov    eax,0x10079058
10062657:	jmp    0x100592c1
1006265c:	int3   
1006265d:	int3   
1006265e:	int3   
1006265f:	int3   
10062660:	lea    eax,[ebp-0x1c]
10062663:	jmp    0x10009928
10062668:	lea    ecx,[ebp-0x44]
1006266b:	jmp    0x10012ee9
10062670:	mov    edx,DWORD PTR [esp+0x8]
10062674:	lea    eax,[edx+0xc]
10062677:	mov    ecx,DWORD PTR [edx-0x48]
1006267a:	xor    ecx,eax
1006267c:	call   0x10042f87
10062681:	mov    eax,0x100790c0
10062686:	jmp    0x100592c1
1006268b:	int3   
1006268c:	int3   
1006268d:	int3   
1006268e:	int3   
1006268f:	int3   
10062690:	lea    ecx,[ebp-0x54]
10062693:	jmp    0x10012ee9
10062698:	lea    ecx,[ebp-0x38]
1006269b:	jmp    0x100430c0
100626a0:	lea    eax,[ebp-0x58]
100626a3:	jmp    0x10009928
100626a8:	mov    edx,DWORD PTR [esp+0x8]
100626ac:	lea    eax,[edx-0x5c]
100626af:	mov    ecx,DWORD PTR [edx-0x60]
100626b2:	xor    ecx,eax
100626b4:	call   0x10042f87
100626b9:	mov    eax,0x100790fc
100626be:	jmp    0x100592c1
100626c3:	int3   
100626c4:	int3   
100626c5:	int3   
100626c6:	int3   
100626c7:	int3   
100626c8:	int3   
100626c9:	int3   
100626ca:	int3   
100626cb:	int3   
100626cc:	int3   
100626cd:	int3   
100626ce:	int3   
100626cf:	int3   
100626d0:	mov    eax,DWORD PTR [ebp-0x58]
100626d3:	and    eax,0x1
100626d6:	je     0x100626e8
100626dc:	and    DWORD PTR [ebp-0x58],0xfffffffe
100626e0:	mov    eax,DWORD PTR [ebp+0x4]
100626e3:	jmp    0x10002087
100626e8:	ret    
100626e9:	lea    ecx,[ebp-0x54]
100626ec:	jmp    0x10012ee9
100626f1:	lea    ecx,[ebp-0x38]
100626f4:	jmp    0x100430c0
100626f9:	mov    edx,DWORD PTR [esp+0x8]
100626fd:	lea    eax,[edx-0x60]
10062700:	mov    ecx,DWORD PTR [edx-0x64]
10062703:	xor    ecx,eax
10062705:	call   0x10042f87
1006270a:	mov    eax,0x10079138
1006270f:	jmp    0x100592c1
10062714:	int3   
10062715:	int3   
10062716:	int3   
10062717:	int3   
10062718:	int3   
10062719:	int3   
1006271a:	int3   
1006271b:	int3   
1006271c:	int3   
1006271d:	int3   
1006271e:	int3   
1006271f:	int3   
10062720:	mov    eax,DWORD PTR [ebp-0x14]
10062723:	and    eax,0x1
10062726:	je     0x10062738
1006272c:	and    DWORD PTR [ebp-0x14],0xfffffffe
10062730:	mov    ecx,DWORD PTR [ebp-0x10]
10062733:	jmp    0x10012ee9
10062738:	ret    
10062739:	lea    ecx,[ebp-0x30]
1006273c:	jmp    0x10012ee9
10062741:	lea    ecx,[ebp-0x30]
10062744:	jmp    0x10012ee9
10062749:	lea    ecx,[ebp-0x30]
1006274c:	jmp    0x10012ee9
10062751:	lea    ecx,[ebp-0x30]
10062754:	jmp    0x10012ee9
10062759:	lea    ecx,[ebp-0x30]
1006275c:	jmp    0x10012ee9
10062761:	lea    ecx,[ebp-0x30]
10062764:	jmp    0x10012ee9
10062769:	mov    edx,DWORD PTR [esp+0x8]
1006276d:	lea    eax,[edx-0x34]
10062770:	mov    ecx,DWORD PTR [edx-0x38]
10062773:	xor    ecx,eax
10062775:	call   0x10042f87
1006277a:	mov    eax,0x10079194
1006277f:	jmp    0x100592c1
10062784:	lea    ecx,[ebp-0x64]
10062787:	jmp    0x10012ee9
1006278c:	lea    ecx,[ebp-0x2c]
1006278f:	jmp    0x10012ee9
10062794:	lea    esi,[ebp-0x90]
1006279a:	jmp    0x1000465b
1006279f:	lea    ecx,[ebp-0x80]
100627a2:	jmp    0x10012ee9
100627a7:	lea    ecx,[ebp-0x48]
100627aa:	jmp    0x10012ee9
100627af:	lea    ecx,[ebp-0x80]
100627b2:	jmp    0x10012ee9
100627b7:	mov    edx,DWORD PTR [esp+0x8]
100627bb:	lea    eax,[edx-0x94]
100627c1:	mov    ecx,DWORD PTR [edx-0x98]
100627c7:	xor    ecx,eax
100627c9:	call   0x10042f87
100627ce:	mov    eax,0x100791f8
100627d3:	jmp    0x100592c1
100627d8:	lea    ecx,[ebp-0x64]
100627db:	jmp    0x10012ee9
100627e0:	lea    ecx,[ebp-0x2c]
100627e3:	jmp    0x10012ee9
100627e8:	lea    ecx,[ebp-0x48]
100627eb:	jmp    0x10012ee9
100627f0:	mov    edx,DWORD PTR [esp+0x8]
100627f4:	lea    eax,[edx-0x64]
100627f7:	mov    ecx,DWORD PTR [edx-0x68]
100627fa:	xor    ecx,eax
100627fc:	call   0x10042f87
10062801:	mov    eax,0x10079234
10062806:	jmp    0x100592c1
1006280b:	lea    eax,[ebp-0x24]
1006280e:	jmp    0x10039f30
10062813:	push   DWORD PTR [ebp-0x1c]
10062816:	call   0x10042f82
1006281b:	pop    ecx
1006281c:	ret    
1006281d:	mov    eax,DWORD PTR [ebp-0x10]
10062820:	and    eax,0x1
10062823:	je     0x10062835
10062829:	and    DWORD PTR [ebp-0x10],0xfffffffe
1006282d:	lea    ecx,[ebp-0x44]
10062830:	jmp    0x10012ee9
10062835:	ret    
10062836:	mov    eax,DWORD PTR [ebp-0x10]
10062839:	and    eax,0x2
1006283c:	je     0x1006284e
10062842:	and    DWORD PTR [ebp-0x10],0xfffffffd
10062846:	lea    ecx,[ebp-0x7c]
10062849:	jmp    0x10012ee9
1006284e:	ret    
1006284f:	mov    eax,DWORD PTR [ebp-0x10]
10062852:	and    eax,0x4
10062855:	je     0x10062867
1006285b:	and    DWORD PTR [ebp-0x10],0xfffffffb
1006285f:	lea    ecx,[ebp-0x60]
10062862:	jmp    0x10012ee9
10062867:	ret    
10062868:	mov    eax,DWORD PTR [ebp-0x10]
1006286b:	and    eax,0x8
1006286e:	je     0x10062883
10062874:	and    DWORD PTR [ebp-0x10],0xfffffff7
10062878:	lea    ecx,[ebp-0x98]
1006287e:	jmp    0x10012ee9
10062883:	ret    
10062884:	lea    ecx,[ebp-0x44]
10062887:	jmp    0x10012ee9
1006288c:	lea    ecx,[ebp-0x98]
10062892:	jmp    0x10012ee9
10062897:	lea    ecx,[ebp-0x60]
1006289a:	jmp    0x10012ee9
1006289f:	lea    ecx,[ebp-0x7c]
100628a2:	jmp    0x10012ee9
100628a7:	mov    edx,DWORD PTR [esp+0x8]
100628ab:	lea    eax,[edx+0xc]
100628ae:	mov    ecx,DWORD PTR [edx-0xb8]
100628b4:	xor    ecx,eax
100628b6:	call   0x10042f87
100628bb:	mov    eax,0x100792c8
100628c0:	jmp    0x100592c1
100628c5:	lea    eax,[ebp-0x10]
100628c8:	jmp    0x10002087
100628cd:	mov    edx,DWORD PTR [esp+0x8]
100628d1:	lea    eax,[edx+0xc]
100628d4:	mov    ecx,DWORD PTR [edx-0x14]
100628d7:	xor    ecx,eax
100628d9:	call   0x10042f87
100628de:	mov    eax,0x100792f4
100628e3:	jmp    0x100592c1
100628e8:	lea    ecx,[ebp-0xbc]
100628ee:	jmp    0x10012ee9
100628f3:	lea    eax,[ebp-0xdc]
100628f9:	jmp    0x1002335a
100628fe:	lea    eax,[ebp-0xe0]
10062904:	jmp    0x1002335a
10062909:	lea    ecx,[ebp-0xbc]
1006290f:	jmp    0x10012ee9
10062914:	lea    ecx,[ebp-0xbc]
1006291a:	jmp    0x10012ee9
1006291f:	lea    ecx,[ebp-0x30]
10062922:	jmp    0x10012ee9
10062927:	lea    eax,[ebp-0xa0]
1006292d:	jmp    0x10009928
10062932:	lea    ecx,[ebp-0xbc]
10062938:	jmp    0x10012ee9
1006293d:	lea    ecx,[ebp-0xbc]
10062943:	jmp    0x10012ee9
10062948:	lea    ecx,[ebp-0xbc]
1006294e:	jmp    0x10012ee9
10062953:	lea    ecx,[ebp-0xbc]
10062959:	jmp    0x10012ee9
1006295e:	lea    edi,[ebp-0xe4]
10062964:	jmp    0x100024f8
10062969:	lea    ecx,[ebp-0x74]
1006296c:	jmp    0x10012ee9
10062971:	mov    edx,DWORD PTR [esp+0x8]
10062975:	lea    eax,[edx-0xe4]
1006297b:	mov    ecx,DWORD PTR [edx-0xe8]
10062981:	xor    ecx,eax
10062983:	call   0x10042f87
10062988:	add    eax,0xc
1006298b:	mov    ecx,DWORD PTR [edx-0x8]
1006298e:	xor    ecx,eax
10062990:	call   0x10042f87
10062995:	mov    eax,0x10079380
1006299a:	jmp    0x100592c1
1006299f:	lea    ecx,[ebp-0x28]
100629a2:	jmp    0x1001b753
100629a7:	lea    ecx,[ebp-0x38]
100629aa:	jmp    0x1001b753
100629af:	mov    edx,DWORD PTR [esp+0x8]
100629b3:	lea    eax,[edx+0xc]
100629b6:	mov    ecx,DWORD PTR [edx-0x3c]
100629b9:	xor    ecx,eax
100629bb:	call   0x10042f87
100629c0:	mov    eax,0x100793e8
100629c5:	jmp    0x100592c1
100629ca:	lea    eax,[ebp-0x18]
100629cd:	jmp    0x1002335a
100629d2:	lea    ecx,[ebp-0x60]
100629d5:	jmp    0x1001b753
100629da:	lea    ecx,[ebp-0x50]
100629dd:	jmp    0x1001b753
100629e2:	lea    ecx,[ebp-0x70]
100629e5:	jmp    0x1001b753
100629ea:	lea    edi,[ebp+0x10]
100629ed:	jmp    0x100024f8
100629f2:	lea    ecx,[ebp-0x80]
100629f5:	jmp    0x1001b753
100629fa:	lea    ecx,[ebp-0x40]
100629fd:	jmp    0x1001b753
10062a02:	lea    ecx,[ebp-0x30]
10062a05:	jmp    0x1001b753
10062a0a:	lea    edi,[ebp+0x10]
10062a0d:	jmp    0x100024f8
10062a12:	mov    edx,DWORD PTR [esp+0x8]
10062a16:	lea    eax,[edx+0xc]
10062a19:	mov    ecx,DWORD PTR [edx-0xb4]
10062a1f:	xor    ecx,eax
10062a21:	call   0x10042f87
10062a26:	mov    eax,0x100794c8
10062a2b:	jmp    0x100592c1
10062a30:	lea    eax,[ebp-0x18]
10062a33:	jmp    0x1002335a
10062a38:	lea    eax,[ebp-0x28]
10062a3b:	jmp    0x10004296
10062a40:	lea    eax,[ebp-0x28]
10062a43:	jmp    0x10024377
10062a48:	lea    esi,[ebp-0x1c]
10062a4b:	jmp    0x100046ab
10062a50:	mov    edx,DWORD PTR [esp+0x8]
10062a54:	lea    eax,[edx+0xc]
10062a57:	mov    ecx,DWORD PTR [edx-0x60]
10062a5a:	xor    ecx,eax
10062a5c:	call   0x10042f87
10062a61:	mov    eax,0x10079540
10062a66:	jmp    0x100592c1
10062a6b:	lea    eax,[ebp-0x30]
10062a6e:	jmp    0x10004296
10062a73:	lea    ecx,[ebp+0x54]
10062a76:	jmp    0x10012ee9
10062a7b:	lea    ecx,[ebp+0x1c]
10062a7e:	jmp    0x10012ee9
10062a83:	lea    ecx,[ebp+0x0]
10062a86:	jmp    0x10012ee9
10062a8b:	lea    ecx,[ebp+0x38]
10062a8e:	jmp    0x10012ee9
10062a93:	lea    esi,[ebp-0xf0]
10062a99:	jmp    0x10003423
10062a9e:	lea    ecx,[ebp-0x68]
10062aa1:	jmp    0x10012ee9
10062aa6:	lea    ecx,[ebp-0x4c]
10062aa9:	jmp    0x10012ee9
10062aae:	mov    edx,DWORD PTR [esp+0x8]
10062ab2:	lea    eax,[edx+0xc]
10062ab5:	mov    ecx,DWORD PTR [edx-0xf4]
10062abb:	xor    ecx,eax
10062abd:	call   0x10042f87
10062ac2:	mov    ecx,DWORD PTR [edx+0x7c]
10062ac5:	xor    ecx,eax
10062ac7:	call   0x10042f87
10062acc:	mov    eax,0x100795ec
10062ad1:	jmp    0x100592c1
10062ad6:	mov    edx,DWORD PTR [esp+0x8]
10062ada:	lea    eax,[edx+0xc]
10062add:	mov    ecx,DWORD PTR [edx-0x20]
10062ae0:	xor    ecx,eax
10062ae2:	call   0x10042f87
10062ae7:	mov    eax,0x10079644
10062aec:	jmp    0x100592c1
10062af1:	lea    ecx,[ebp-0x6c]
10062af4:	jmp    0x10012ee9
10062af9:	lea    ecx,[ebp-0x34]
10062afc:	jmp    0x10001195
10062b01:	lea    ecx,[ebp-0x50]
10062b04:	jmp    0x10012ee9
10062b09:	lea    ecx,[ebp-0x88]
10062b0f:	jmp    0x10012ee9
10062b14:	lea    ecx,[ebp-0x88]
10062b1a:	jmp    0x10012ee9
10062b1f:	mov    edx,DWORD PTR [esp+0x8]
10062b23:	lea    eax,[edx-0x9c]
10062b29:	mov    ecx,DWORD PTR [edx-0xa0]
10062b2f:	xor    ecx,eax
10062b31:	call   0x10042f87
10062b36:	add    eax,0xc
10062b39:	mov    ecx,DWORD PTR [edx-0x8]
10062b3c:	xor    ecx,eax
10062b3e:	call   0x10042f87
10062b43:	mov    eax,0x10079698
10062b48:	jmp    0x100592c1
10062b4d:	push   DWORD PTR [ebp-0x14]
10062b50:	call   0x10042f82
10062b55:	pop    ecx
10062b56:	ret    
10062b57:	mov    edx,DWORD PTR [esp+0x8]
10062b5b:	lea    eax,[edx+0xc]
10062b5e:	mov    ecx,DWORD PTR [edx-0x18]
10062b61:	xor    ecx,eax
10062b63:	call   0x10042f87
10062b68:	mov    eax,0x100796f8
10062b6d:	jmp    0x100592c1
10062b72:	lea    esi,[ebp-0x28]
10062b75:	jmp    0x1000772e
10062b7a:	lea    eax,[ebp+0x0]
10062b7d:	jmp    0x10017a4a
10062b82:	mov    edx,DWORD PTR [esp+0x8]
10062b86:	lea    eax,[edx+0xc]
10062b89:	mov    ecx,DWORD PTR [edx-0x2c]
10062b8c:	xor    ecx,eax
10062b8e:	call   0x10042f87
10062b93:	mov    ecx,DWORD PTR [edx+0x410]
10062b99:	xor    ecx,eax
10062b9b:	call   0x10042f87
10062ba0:	mov    eax,0x10079760
10062ba5:	jmp    0x100592c1
10062baa:	mov    edx,DWORD PTR [esp+0x8]
10062bae:	lea    eax,[edx+0xc]
10062bb1:	mov    ecx,DWORD PTR [edx-0x20]
10062bb4:	xor    ecx,eax
10062bb6:	call   0x10042f87
10062bbb:	mov    eax,0x100797b8
10062bc0:	jmp    0x100592c1
10062bc5:	lea    ecx,[ebp-0x110]
10062bcb:	jmp    0x10012ee9
10062bd0:	lea    ecx,[ebp-0x60]
10062bd3:	jmp    0x10012ee9
10062bd8:	lea    esi,[ebp-0xec]
10062bde:	jmp    0x10003423
10062be3:	lea    ecx,[ebp-0x44]
10062be6:	jmp    0x10012ee9
10062beb:	mov    edx,DWORD PTR [esp+0x8]
10062bef:	lea    eax,[edx+0xc]
10062bf2:	mov    ecx,DWORD PTR [edx-0x114]
10062bf8:	xor    ecx,eax
10062bfa:	call   0x10042f87
10062bff:	mov    ecx,DWORD PTR [edx-0x4]
10062c02:	xor    ecx,eax
10062c04:	call   0x10042f87
10062c09:	mov    eax,0x10079804
10062c0e:	jmp    0x100592c1
10062c13:	lea    ecx,[ebp-0x44]
10062c16:	jmp    0x10012ee9
10062c1b:	lea    ecx,[ebp-0x28]
10062c1e:	jmp    0x10012ee9
10062c23:	mov    edx,DWORD PTR [esp+0x8]
10062c27:	lea    eax,[edx+0xc]
10062c2a:	mov    ecx,DWORD PTR [edx-0x48]
10062c2d:	xor    ecx,eax
10062c2f:	call   0x10042f87
10062c34:	mov    eax,0x10079838
10062c39:	jmp    0x100592c1
10062c3e:	mov    edx,DWORD PTR [esp+0x8]
10062c42:	lea    eax,[edx+0xc]
10062c45:	mov    ecx,DWORD PTR [edx-0x1c]
10062c48:	xor    ecx,eax
10062c4a:	call   0x10042f87
10062c4f:	mov    eax,0x10079890
10062c54:	jmp    0x100592c1
10062c59:	lea    eax,[ebp-0x58]
10062c5c:	jmp    0x1002335a
10062c61:	lea    edi,[ebp-0x5c]
10062c64:	jmp    0x100024f8
10062c69:	lea    ecx,[ebp-0x30]
10062c6c:	jmp    0x10012ee9
10062c71:	lea    ecx,[ebp-0x50]
10062c74:	jmp    0x10001195
10062c79:	lea    edi,[ebp-0x54]
10062c7c:	jmp    0x100024f8
10062c81:	lea    ecx,[ebp-0x98]
10062c87:	jmp    0x10012ee9
10062c8c:	lea    edi,[ebp-0x54]
10062c8f:	jmp    0x100024f8
10062c94:	mov    edx,DWORD PTR [esp+0x8]
10062c98:	lea    eax,[edx+0xc]
10062c9b:	mov    ecx,DWORD PTR [edx-0x9c]
10062ca1:	xor    ecx,eax
10062ca3:	call   0x10042f87
10062ca8:	mov    ecx,DWORD PTR [edx-0x8]
10062cab:	xor    ecx,eax
10062cad:	call   0x10042f87
10062cb2:	mov    eax,0x1007992c
10062cb7:	jmp    0x100592c1
10062cbc:	lea    esi,[ebp-0x24]
10062cbf:	jmp    0x10011ee7
10062cc4:	lea    ecx,[ebp-0x40]
10062cc7:	jmp    0x10012ee9
10062ccc:	mov    edx,DWORD PTR [esp+0x8]
10062cd0:	lea    eax,[edx+0xc]
10062cd3:	mov    ecx,DWORD PTR [edx-0x44]
10062cd6:	xor    ecx,eax
10062cd8:	call   0x10042f87
10062cdd:	mov    eax,0x10079960
10062ce2:	jmp    0x100592c1
10062ce7:	lea    eax,[ebp-0x18]
10062cea:	jmp    0x10009928
10062cef:	mov    edx,DWORD PTR [esp+0x8]
10062cf3:	lea    eax,[edx+0xc]
10062cf6:	mov    ecx,DWORD PTR [edx-0x24]
10062cf9:	xor    ecx,eax
10062cfb:	call   0x10042f87
10062d00:	mov    eax,0x1007998c
10062d05:	jmp    0x100592c1
10062d0a:	lea    esi,[ebp-0x28]
10062d0d:	jmp    0x1000465b
10062d12:	mov    edx,DWORD PTR [esp+0x8]
10062d16:	lea    eax,[edx+0xc]
10062d19:	mov    ecx,DWORD PTR [edx-0x2c]
10062d1c:	xor    ecx,eax
10062d1e:	call   0x10042f87
10062d23:	mov    eax,0x100799f4
10062d28:	jmp    0x100592c1
10062d2d:	lea    esi,[ebp-0x24]
10062d30:	jmp    0x1000465b
10062d35:	mov    edx,DWORD PTR [esp+0x8]
10062d39:	lea    eax,[edx+0xc]
10062d3c:	mov    ecx,DWORD PTR [edx-0x28]
10062d3f:	xor    ecx,eax
10062d41:	call   0x10042f87
10062d46:	mov    eax,0x10079a88
10062d4b:	jmp    0x100592c1
10062d50:	lea    edi,[ebp+0xc]
10062d53:	jmp    0x100024f8
10062d58:	lea    edi,[ebp+0x8]
10062d5b:	jmp    0x100024f8
10062d60:	lea    ecx,[ebp-0x44]
10062d63:	jmp    0x10012ee9
10062d68:	lea    ecx,[ebp-0x28]
10062d6b:	jmp    0x10012ee9
10062d70:	mov    edx,DWORD PTR [esp+0x8]
10062d74:	lea    eax,[edx+0xc]
10062d77:	mov    ecx,DWORD PTR [edx-0x48]
10062d7a:	xor    ecx,eax
10062d7c:	call   0x10042f87
10062d81:	mov    eax,0x10079acc
10062d86:	jmp    0x100592c1
10062d8b:	lea    ecx,[ebp-0x180]
10062d91:	jmp    0x10012ee9
10062d96:	lea    esi,[ebp-0xc0]
10062d9c:	jmp    0x1000bcad
10062da1:	lea    ecx,[ebp-0x180]
10062da7:	jmp    0x10012ee9
10062dac:	lea    ecx,[ebp-0x180]
10062db2:	jmp    0x10012ee9
10062db7:	lea    ecx,[ebp-0x180]
10062dbd:	jmp    0x10012ee9
10062dc2:	lea    ecx,[ebp-0x180]
10062dc8:	jmp    0x10012ee9
10062dcd:	lea    esi,[ebp-0x158]
10062dd3:	jmp    0x1000bd15
10062dd8:	lea    ecx,[ebp-0x2c]
10062ddb:	jmp    0x10012ee9
10062de0:	lea    ecx,[ebp-0x180]
10062de6:	jmp    0x10012ee9
10062deb:	lea    ecx,[ebp-0x1b8]
10062df1:	jmp    0x10012ee9
10062df6:	lea    ecx,[ebp-0x1f0]
10062dfc:	jmp    0x10012ee9
10062e01:	lea    ecx,[ebp-0x20c]
10062e07:	jmp    0x10012ee9
10062e0c:	lea    ecx,[ebp-0x1d4]
10062e12:	jmp    0x10012ee9
10062e17:	lea    ecx,[ebp-0x19c]
10062e1d:	jmp    0x10012ee9
10062e22:	lea    ecx,[ebp-0x180]
10062e28:	jmp    0x10012ee9
10062e2d:	lea    ecx,[ebp-0x180]
10062e33:	jmp    0x10012ee9
10062e38:	lea    ecx,[ebp-0x180]
10062e3e:	jmp    0x10012ee9
10062e43:	lea    ecx,[ebp-0x2c]
10062e46:	jmp    0x10012ee9
10062e4b:	lea    ecx,[ebp-0x19c]
10062e51:	jmp    0x10012ee9
10062e56:	lea    ecx,[ebp-0x19c]
10062e5c:	jmp    0x10012ee9
10062e61:	lea    ecx,[ebp-0x1b8]
10062e67:	jmp    0x10012ee9
10062e6c:	mov    edx,DWORD PTR [esp+0x8]
10062e70:	lea    eax,[edx+0xc]
10062e73:	mov    ecx,DWORD PTR [edx-0x210]
10062e79:	xor    ecx,eax
10062e7b:	call   0x10042f87
10062e80:	mov    ecx,DWORD PTR [edx-0x4]
10062e83:	xor    ecx,eax
10062e85:	call   0x10042f87
10062e8a:	mov    eax,0x10079ba0
10062e8f:	jmp    0x100592c1
10062e94:	mov    eax,DWORD PTR [ebp-0x14]
10062e97:	and    eax,0x1
10062e9a:	je     0x10062eac
10062ea0:	and    DWORD PTR [ebp-0x14],0xfffffffe
10062ea4:	lea    ecx,[ebp-0x30]
10062ea7:	jmp    0x10012ee9
10062eac:	ret    
10062ead:	mov    eax,DWORD PTR [ebp-0x14]
10062eb0:	and    eax,0x2
10062eb3:	je     0x10062ec5
10062eb9:	and    DWORD PTR [ebp-0x14],0xfffffffd
10062ebd:	lea    ecx,[ebp-0x30]
10062ec0:	jmp    0x10012ee9
10062ec5:	ret    
10062ec6:	mov    eax,DWORD PTR [ebp-0x14]
10062ec9:	and    eax,0x4
10062ecc:	je     0x10062ede
10062ed2:	and    DWORD PTR [ebp-0x14],0xfffffffb
10062ed6:	lea    ecx,[ebp-0x30]
10062ed9:	jmp    0x10012ee9
10062ede:	ret    
10062edf:	mov    eax,DWORD PTR [ebp-0x14]
10062ee2:	and    eax,0x8
10062ee5:	je     0x10062ef7
10062eeb:	and    DWORD PTR [ebp-0x14],0xfffffff7
10062eef:	lea    ecx,[ebp-0x4c]
10062ef2:	jmp    0x10012ee9
10062ef7:	ret    
10062ef8:	mov    edx,DWORD PTR [esp+0x8]
10062efc:	lea    eax,[edx+0xc]
10062eff:	mov    ecx,DWORD PTR [edx-0x50]
10062f02:	xor    ecx,eax
10062f04:	call   0x10042f87
10062f09:	mov    eax,0x10079be4
10062f0e:	jmp    0x100592c1
10062f13:	mov    eax,DWORD PTR [ebp-0x14]
10062f16:	and    eax,0x1
10062f19:	je     0x10062f2b
10062f1f:	and    DWORD PTR [ebp-0x14],0xfffffffe
10062f23:	lea    ecx,[ebp-0x30]
10062f26:	jmp    0x10012ee9
10062f2b:	ret    
10062f2c:	mov    eax,DWORD PTR [ebp-0x14]
10062f2f:	and    eax,0x2
10062f32:	je     0x10062f44
10062f38:	and    DWORD PTR [ebp-0x14],0xfffffffd
10062f3c:	lea    ecx,[ebp-0x30]
10062f3f:	jmp    0x10012ee9
10062f44:	ret    
10062f45:	mov    eax,DWORD PTR [ebp-0x14]
10062f48:	and    eax,0x4
10062f4b:	je     0x10062f5d
10062f51:	and    DWORD PTR [ebp-0x14],0xfffffffb
10062f55:	lea    ecx,[ebp-0x4c]
10062f58:	jmp    0x10012ee9
10062f5d:	ret    
10062f5e:	mov    edx,DWORD PTR [esp+0x8]
10062f62:	lea    eax,[edx+0xc]
10062f65:	mov    ecx,DWORD PTR [edx-0x54]
10062f68:	xor    ecx,eax
10062f6a:	call   0x10042f87
10062f6f:	mov    eax,0x10079c20
10062f74:	jmp    0x100592c1
10062f79:	lea    eax,[ebp-0x48]
10062f7c:	push   eax
10062f7d:	call   0x10006e1c
10062f82:	ret    
10062f83:	lea    ecx,[ebp-0x80]
10062f86:	jmp    0x10012ee9
10062f8b:	lea    ecx,[ebp-0x30]
10062f8e:	jmp    0x10001195
10062f93:	mov    edx,DWORD PTR [esp+0x8]
10062f97:	lea    eax,[edx+0xc]
10062f9a:	mov    ecx,DWORD PTR [edx-0x84]
10062fa0:	xor    ecx,eax
10062fa2:	call   0x10042f87
10062fa7:	mov    ecx,DWORD PTR [edx-0x4]
10062faa:	xor    ecx,eax
10062fac:	call   0x10042f87
10062fb1:	mov    eax,0x10079c64
10062fb6:	jmp    0x100592c1
10062fbb:	lea    eax,[ebp-0x14]
10062fbe:	jmp    0x10002087
10062fc3:	lea    eax,[ebp-0x18]
10062fc6:	jmp    0x10002087
10062fcb:	lea    eax,[ebp-0x1c]
10062fce:	jmp    0x10002087
10062fd3:	lea    eax,[ebp-0x1c]
10062fd6:	jmp    0x10034de0
10062fdb:	mov    edx,DWORD PTR [esp+0x8]
10062fdf:	lea    eax,[edx-0x1c]
10062fe2:	mov    ecx,DWORD PTR [edx-0x20]
10062fe5:	xor    ecx,eax
10062fe7:	call   0x10042f87
10062fec:	mov    eax,0x10079ca8
10062ff1:	jmp    0x100592c1
10062ff6:	lea    eax,[ebp-0x78]
10062ff9:	jmp    0x10002087
10062ffe:	lea    eax,[ebp-0x6c]
10063001:	jmp    0x10002087
10063006:	lea    eax,[ebp-0x70]
10063009:	jmp    0x10002087
1006300e:	lea    eax,[ebp-0x74]
10063011:	jmp    0x10034de0
10063016:	mov    edx,DWORD PTR [esp+0x8]
1006301a:	lea    eax,[edx-0x7c]
1006301d:	mov    ecx,DWORD PTR [edx-0x80]
10063020:	xor    ecx,eax
10063022:	call   0x10042f87
10063027:	mov    eax,0x10079cec
1006302c:	jmp    0x100592c1
10063031:	lea    eax,[ebp-0x18]
10063034:	jmp    0x10002087
10063039:	lea    eax,[ebp-0x14]
1006303c:	jmp    0x10002087
10063041:	lea    eax,[ebp-0x10]
10063044:	jmp    0x10002087
10063049:	lea    eax,[ebp-0x10]
1006304c:	jmp    0x10034de0
10063051:	mov    edx,DWORD PTR [esp+0x8]
10063055:	lea    eax,[edx+0xc]
10063058:	mov    ecx,DWORD PTR [edx-0x1c]
1006305b:	xor    ecx,eax
1006305d:	call   0x10042f87
10063062:	mov    eax,0x10079d30
10063067:	jmp    0x100592c1
1006306c:	lea    ecx,[ebp-0x2c]
1006306f:	jmp    0x10012ee9
10063074:	push   DWORD PTR [ebp-0x30]
10063077:	call   0x10042f82
1006307c:	pop    ecx
1006307d:	ret    
1006307e:	lea    eax,[ebp-0x48]
10063081:	jmp    0x10004695
10063086:	lea    ecx,[ebp-0x64]
10063089:	jmp    0x10012ee9
1006308e:	mov    edx,DWORD PTR [esp+0x8]
10063092:	lea    eax,[edx+0xc]
10063095:	mov    ecx,DWORD PTR [edx-0x68]
10063098:	xor    ecx,eax
1006309a:	call   0x10042f87
1006309f:	mov    ecx,DWORD PTR [edx-0x4]
100630a2:	xor    ecx,eax
100630a4:	call   0x10042f87
100630a9:	mov    eax,0x10079d74
100630ae:	jmp    0x100592c1
100630b3:	lea    ecx,[ebp-0x3c]
100630b6:	jmp    0x100379a0
100630bb:	lea    eax,[ebp-0x30]
100630be:	jmp    0x10009928
100630c3:	mov    edx,DWORD PTR [esp+0x8]
100630c7:	lea    eax,[edx+0xc]
100630ca:	mov    ecx,DWORD PTR [edx-0x40]
100630cd:	xor    ecx,eax
100630cf:	call   0x10042f87
100630d4:	mov    ecx,DWORD PTR [edx-0x4]
100630d7:	xor    ecx,eax
100630d9:	call   0x10042f87
100630de:	mov    eax,0x10079da8
100630e3:	jmp    0x100592c1
100630e8:	lea    ecx,[ebp-0x3c]
100630eb:	jmp    0x100379a0
100630f0:	lea    ecx,[ebp-0x2c]
100630f3:	jmp    0x10012ee9
100630f8:	lea    ecx,[ebp-0x58]
100630fb:	jmp    0x10012ee9
10063100:	lea    ecx,[ebp-0x58]
10063103:	jmp    0x10012ee9
10063108:	lea    eax,[ebp-0x30]
1006310b:	jmp    0x10009928
10063110:	mov    edx,DWORD PTR [esp+0x8]
10063114:	lea    eax,[edx+0xc]
10063117:	mov    ecx,DWORD PTR [edx-0x60]
1006311a:	xor    ecx,eax
1006311c:	call   0x10042f87
10063121:	mov    ecx,DWORD PTR [edx-0x4]
10063124:	xor    ecx,eax
10063126:	call   0x10042f87
1006312b:	mov    eax,0x10079df4
10063130:	jmp    0x100592c1
10063135:	lea    ecx,[ebp-0xc0]
1006313b:	jmp    0x10012ee9
10063140:	lea    ecx,[ebp-0x30]
10063143:	jmp    0x10012ee9
10063148:	lea    ecx,[ebp-0x4c]
1006314b:	jmp    0x10012ee9
10063150:	lea    ecx,[ebp-0x68]
10063153:	jmp    0x10012ee9
10063158:	lea    ecx,[ebp-0x84]
1006315e:	jmp    0x10012ee9
10063163:	lea    ecx,[ebp-0xc0]
10063169:	jmp    0x10012ee9
1006316e:	lea    ecx,[ebp-0xc0]
10063174:	jmp    0x10012ee9
10063179:	lea    esi,[ebp-0x14c]
1006317f:	jmp    0x10003423
10063184:	mov    edx,DWORD PTR [esp+0x8]
10063188:	lea    eax,[edx+0xc]
1006318b:	mov    ecx,DWORD PTR [edx-0x150]
10063191:	xor    ecx,eax
10063193:	call   0x10042f87
10063198:	mov    ecx,DWORD PTR [edx-0x4]
1006319b:	xor    ecx,eax
1006319d:	call   0x10042f87
100631a2:	mov    eax,0x10079e60
100631a7:	jmp    0x100592c1
100631ac:	lea    ecx,[ebp-0x34]
100631af:	jmp    0x10001195
100631b4:	mov    edx,DWORD PTR [esp+0x8]
100631b8:	lea    eax,[edx+0xc]
100631bb:	mov    ecx,DWORD PTR [edx-0x38]
100631be:	xor    ecx,eax
100631c0:	call   0x10042f87
100631c5:	mov    ecx,DWORD PTR [edx-0x4]
100631c8:	xor    ecx,eax
100631ca:	call   0x10042f87
100631cf:	mov    eax,0x10079e8c
100631d4:	jmp    0x100592c1
100631d9:	int3   
100631da:	int3   
100631db:	int3   
100631dc:	int3   
100631dd:	int3   
100631de:	int3   
100631df:	int3   
100631e0:	lea    eax,[ebp-0x2c]
100631e3:	jmp    0x10009928
100631e8:	lea    eax,[ebp-0x28]
100631eb:	jmp    0x10009928
100631f0:	mov    edx,DWORD PTR [esp+0x8]
100631f4:	lea    eax,[edx-0x40]
100631f7:	mov    ecx,DWORD PTR [edx-0x44]
100631fa:	xor    ecx,eax
100631fc:	call   0x10042f87
10063201:	add    eax,0x10
10063204:	mov    ecx,DWORD PTR [edx-0x8]
10063207:	xor    ecx,eax
10063209:	call   0x10042f87
1006320e:	mov    eax,0x10079ec0
10063213:	jmp    0x100592c1
10063218:	int3   
10063219:	int3   
1006321a:	int3   
1006321b:	int3   
1006321c:	int3   
1006321d:	int3   
1006321e:	int3   
1006321f:	int3   
10063220:	lea    ecx,[ebp-0x40]
10063223:	jmp    0x100379a0
10063228:	mov    edx,DWORD PTR [esp+0x8]
1006322c:	lea    eax,[edx-0x3c]
1006322f:	mov    ecx,DWORD PTR [edx-0x40]
10063232:	xor    ecx,eax
10063234:	call   0x10042f87
10063239:	mov    eax,0x10079eec
1006323e:	jmp    0x100592c1
10063243:	int3   
10063244:	int3   
10063245:	int3   
10063246:	int3   
10063247:	int3   
10063248:	int3   
10063249:	int3   
1006324a:	int3   
1006324b:	int3   
1006324c:	int3   
1006324d:	int3   
1006324e:	int3   
1006324f:	int3   
10063250:	lea    eax,[ebp-0x7c]
10063253:	jmp    0x10002087
10063258:	lea    ecx,[ebp-0xa8]
1006325e:	jmp    0x10012ee9
10063263:	lea    ecx,[ebp-0x140]
10063269:	jmp    0x10012ee9
1006326e:	lea    ecx,[ebp-0x124]
10063274:	jmp    0x10012ee9
10063279:	lea    ecx,[ebp-0x108]
1006327f:	jmp    0x10012ee9
10063284:	lea    ecx,[ebp-0xec]
1006328a:	jmp    0x10012ee9
1006328f:	lea    ecx,[ebp-0xd0]
10063295:	jmp    0x100430c0
1006329a:	mov    edx,DWORD PTR [esp+0x8]
1006329e:	lea    eax,[edx+0xc]
100632a1:	mov    ecx,DWORD PTR [edx-0x144]
100632a7:	xor    ecx,eax
100632a9:	call   0x10042f87
100632ae:	mov    ecx,DWORD PTR [edx-0x4]
100632b1:	xor    ecx,eax
100632b3:	call   0x10042f87
100632b8:	mov    eax,0x10079f48
100632bd:	jmp    0x100592c1
100632c2:	int3   
100632c3:	int3   
100632c4:	int3   
100632c5:	int3   
100632c6:	int3   
100632c7:	int3   
100632c8:	int3   
100632c9:	int3   
100632ca:	int3   
100632cb:	int3   
100632cc:	int3   
100632cd:	int3   
100632ce:	int3   
100632cf:	int3   
100632d0:	lea    eax,[ebp+0x4]
100632d3:	jmp    0x10002087
100632d8:	lea    eax,[ebp+0x4]
100632db:	jmp    0x10002087
100632e0:	mov    edx,DWORD PTR [esp+0x8]
100632e4:	lea    eax,[edx-0x8]
100632e7:	mov    ecx,DWORD PTR [edx-0xc]
100632ea:	xor    ecx,eax
100632ec:	call   0x10042f87
100632f1:	mov    eax,0x10079f7c
100632f6:	jmp    0x100592c1
100632fb:	lea    ecx,[ebp-0x58]
100632fe:	jmp    0x10012ee9
10063303:	lea    ecx,[ebp+0x54]
10063306:	jmp    0x10012ee9
1006330b:	lea    ecx,[ebp+0x1c]
1006330e:	jmp    0x10012ee9
10063313:	lea    eax,[ebp-0x3c]
10063316:	jmp    0x10009928
1006331b:	lea    eax,[ebp-0x1c]
1006331e:	jmp    0x10009928
10063323:	lea    ecx,[ebp+0x38]
10063326:	jmp    0x10012ee9
1006332b:	lea    ecx,[ebp+0x0]
1006332e:	jmp    0x10012ee9
10063333:	lea    ecx,[ebp-0x74]
10063336:	jmp    0x10012ee9
1006333b:	mov    edx,DWORD PTR [esp+0x8]
1006333f:	lea    eax,[edx+0xc]
10063342:	mov    ecx,DWORD PTR [edx-0x78]
10063345:	xor    ecx,eax
10063347:	call   0x10042f87
1006334c:	mov    ecx,DWORD PTR [edx+0x7c]
1006334f:	xor    ecx,eax
10063351:	call   0x10042f87
10063356:	mov    eax,0x1007a01c
1006335b:	jmp    0x100592c1
10063360:	lea    ecx,[ebp-0x50]
10063363:	jmp    0x10012ee9
10063368:	lea    ecx,[ebp-0x88]
1006336e:	jmp    0x10012ee9
10063373:	lea    ecx,[ebp-0x6c]
10063376:	jmp    0x10012ee9
1006337b:	lea    ecx,[ebp-0x34]
1006337e:	jmp    0x10001195
10063383:	lea    ecx,[ebp-0x50]
10063386:	jmp    0x10012ee9
1006338b:	lea    ecx,[ebp-0xfc]
10063391:	jmp    0x10012ee9
10063396:	lea    ecx,[ebp-0xfc]
1006339c:	jmp    0x10012ee9
100633a1:	push   DWORD PTR [ebp-0x110]
100633a7:	call   0x10042f82
100633ac:	pop    ecx
100633ad:	ret    
100633ae:	lea    eax,[ebp-0xe0]
100633b4:	jmp    0x10004695
100633b9:	lea    ecx,[ebp-0xfc]
100633bf:	jmp    0x10012ee9
100633c4:	lea    ecx,[ebp-0xdc]
100633ca:	jmp    0x10012ee9
100633cf:	lea    ecx,[ebp-0xc0]
100633d5:	jmp    0x10012ee9
100633da:	lea    ecx,[ebp-0xa4]
100633e0:	jmp    0x10012ee9
100633e5:	lea    ecx,[ebp-0x50]
100633e8:	jmp    0x10012ee9
100633ed:	lea    ecx,[ebp-0xdc]
100633f3:	jmp    0x10012ee9
100633f8:	mov    edx,DWORD PTR [esp+0x8]
100633fc:	lea    eax,[edx-0x114]
10063402:	mov    ecx,DWORD PTR [edx-0x118]
10063408:	xor    ecx,eax
1006340a:	call   0x10042f87
1006340f:	add    eax,0xc
10063412:	mov    ecx,DWORD PTR [edx-0x8]
10063415:	xor    ecx,eax
10063417:	call   0x10042f87
1006341c:	mov    eax,0x1007a0c0
10063421:	jmp    0x100592c1
10063426:	lea    ecx,[ebp-0xc0]
1006342c:	jmp    0x10012ee9
10063431:	lea    ecx,[ebp-0x34]
10063434:	jmp    0x10001195
10063439:	lea    ecx,[ebp-0x114]
1006343f:	jmp    0x10012ee9
10063444:	lea    ecx,[ebp-0xf8]
1006344a:	jmp    0x10012ee9
1006344f:	lea    ecx,[ebp-0xdc]
10063455:	jmp    0x10012ee9
1006345a:	lea    ecx,[ebp-0x50]
1006345d:	jmp    0x10012ee9
10063462:	lea    ecx,[ebp-0x6c]
10063465:	jmp    0x10012ee9
1006346a:	mov    edx,DWORD PTR [esp+0x8]
1006346e:	lea    eax,[edx-0x11c]
10063474:	mov    ecx,DWORD PTR [edx-0x120]
1006347a:	xor    ecx,eax
1006347c:	call   0x10042f87
10063481:	add    eax,0xc
10063484:	mov    ecx,DWORD PTR [edx-0x8]
10063487:	xor    ecx,eax
10063489:	call   0x10042f87
1006348e:	mov    eax,0x1007a128
10063493:	jmp    0x100592c1
10063498:	lea    ecx,[ebp-0x2c]
1006349b:	jmp    0x10012ee9
100634a0:	mov    edx,DWORD PTR [esp+0x8]
100634a4:	lea    eax,[edx-0x24]
100634a7:	mov    ecx,DWORD PTR [edx-0x28]
100634aa:	xor    ecx,eax
100634ac:	call   0x10042f87
100634b1:	mov    eax,0x1007a154
100634b6:	jmp    0x100592c1
100634bb:	lea    ecx,[ebp-0x30]
100634be:	jmp    0x10012ee9
100634c3:	mov    edx,DWORD PTR [esp+0x8]
100634c7:	lea    eax,[edx-0x34]
100634ca:	mov    ecx,DWORD PTR [edx-0x38]
100634cd:	xor    ecx,eax
100634cf:	call   0x10042f87
100634d4:	add    eax,0x8
100634d7:	mov    ecx,DWORD PTR [edx-0x8]
100634da:	xor    ecx,eax
100634dc:	call   0x10042f87
100634e1:	mov    eax,0x1007a180
100634e6:	jmp    0x100592c1
100634eb:	lea    ecx,[ebp-0x4c]
100634ee:	jmp    0x10012ee9
100634f3:	lea    ecx,[ebp-0x30]
100634f6:	jmp    0x10012ee9
100634fb:	lea    ecx,[ebp-0x68]
100634fe:	jmp    0x10012ee9
10063503:	mov    edx,DWORD PTR [esp+0x8]
10063507:	lea    eax,[edx-0x6c]
1006350a:	mov    ecx,DWORD PTR [edx-0x70]
1006350d:	xor    ecx,eax
1006350f:	call   0x10042f87
10063514:	add    eax,0xc
10063517:	mov    ecx,DWORD PTR [edx-0x8]
1006351a:	xor    ecx,eax
1006351c:	call   0x10042f87
10063521:	mov    eax,0x1007a1c4
10063526:	jmp    0x100592c1
1006352b:	jmp    0x100379d0
10063530:	mov    edx,DWORD PTR [esp+0x8]
10063534:	lea    eax,[edx+0xc]
10063537:	mov    ecx,DWORD PTR [edx-0x10]
1006353a:	xor    ecx,eax
1006353c:	call   0x10042f87
10063541:	mov    eax,0x1007a1f0
10063546:	jmp    0x100592c1
1006354b:	lea    ecx,[ebp-0x30]
1006354e:	jmp    0x10012ee9
10063553:	mov    edx,DWORD PTR [esp+0x8]
10063557:	lea    eax,[edx+0xc]
1006355a:	mov    ecx,DWORD PTR [edx-0x5c]
1006355d:	xor    ecx,eax
1006355f:	call   0x10042f87
10063564:	mov    eax,0x1007a250
10063569:	jmp    0x100592c1
1006356e:	lea    eax,[ebp+0x8]
10063571:	jmp    0x1001b1ff
10063576:	mov    eax,DWORD PTR [ebp-0xb4]
1006357c:	and    eax,0x1
1006357f:	je     0x10063597
10063585:	and    DWORD PTR [ebp-0xb4],0xfffffffe
1006358c:	mov    ecx,DWORD PTR [ebp-0xa8]
10063592:	jmp    0x10012ee9
10063597:	ret    
10063598:	lea    ecx,[ebp-0x98]
1006359e:	jmp    0x10012ee9
100635a3:	lea    ecx,[ebp-0xd8]
100635a9:	jmp    0x10012ee9
100635ae:	lea    ecx,[ebp-0xd8]
100635b4:	jmp    0x10012ee9
100635b9:	lea    ecx,[ebp-0xd8]
100635bf:	jmp    0x10012ee9
100635c4:	mov    edx,DWORD PTR [esp+0x8]
100635c8:	lea    eax,[edx+0xc]
100635cb:	mov    ecx,DWORD PTR [edx-0xdc]
100635d1:	xor    ecx,eax
100635d3:	call   0x10042f87
100635d8:	mov    ecx,DWORD PTR [edx-0x4]
100635db:	xor    ecx,eax
100635dd:	call   0x10042f87
100635e2:	mov    eax,0x1007a2a4
100635e7:	jmp    0x100592c1
100635ec:	mov    eax,DWORD PTR [ebp-0x10]
100635ef:	and    eax,0x1
100635f2:	je     0x10063604
100635f8:	and    DWORD PTR [ebp-0x10],0xfffffffe
100635fc:	mov    esi,DWORD PTR [ebp+0x8]
100635ff:	jmp    0x1000c9e8
10063604:	ret    
10063605:	lea    ecx,[ebp-0x40]
10063608:	jmp    0x10012ee9
1006360d:	lea    esi,[ebp-0x24]
10063610:	jmp    0x1000465b
10063615:	mov    edx,DWORD PTR [esp+0x8]
10063619:	lea    eax,[edx+0xc]
1006361c:	mov    ecx,DWORD PTR [edx-0x44]
1006361f:	xor    ecx,eax
10063621:	call   0x10042f87
10063626:	mov    eax,0x1007a2e0
1006362b:	jmp    0x100592c1
10063630:	lea    ecx,[ebp-0x1034]
10063636:	jmp    0x10012ee9
1006363b:	lea    esi,[ebp-0x1050]
10063641:	jmp    0x1000c9e8
10063646:	lea    esi,[ebp-0x1064]
1006364c:	jmp    0x1000c9e8
10063651:	mov    edx,DWORD PTR [esp+0x8]
10063655:	lea    eax,[edx+0xc]
10063658:	mov    ecx,DWORD PTR [edx-0x106c]
1006365e:	xor    ecx,eax
10063660:	call   0x10042f87
10063665:	mov    ecx,DWORD PTR [edx-0x8]
10063668:	xor    ecx,eax
1006366a:	call   0x10042f87
1006366f:	mov    eax,0x1007a384
10063674:	jmp    0x100592c1
10063679:	lea    ecx,[ebp-0x84]
1006367f:	jmp    0x10012ee9
10063684:	lea    ecx,[ebp-0x30]
10063687:	jmp    0x10012ee9
1006368c:	lea    ecx,[ebp-0x68]
1006368f:	jmp    0x10012ee9
10063694:	lea    ecx,[ebp-0x4c]
10063697:	jmp    0x10012ee9
1006369c:	mov    edx,DWORD PTR [esp+0x8]
100636a0:	lea    eax,[edx-0x8c]
100636a6:	mov    ecx,DWORD PTR [edx-0x90]
100636ac:	xor    ecx,eax
100636ae:	call   0x10042f87
100636b3:	add    eax,0x8
100636b6:	mov    ecx,DWORD PTR [edx-0x8]
100636b9:	xor    ecx,eax
100636bb:	call   0x10042f87
100636c0:	mov    eax,0x1007a3d0
100636c5:	jmp    0x100592c1
100636ca:	mov    eax,DWORD PTR [ebp+0x8]
100636cd:	jmp    0x10009d00
100636d2:	mov    eax,DWORD PTR [ebp+0x8]
100636d5:	add    eax,0x4
100636d8:	jmp    0x10009d00
100636dd:	mov    eax,DWORD PTR [ebp+0x8]
100636e0:	add    eax,0x8
100636e3:	jmp    0x10009d00
100636e8:	mov    ebx,DWORD PTR [ebp+0x8]
100636eb:	add    ebx,0x18
100636ee:	jmp    0x10007b7d
100636f3:	mov    eax,DWORD PTR [ebp+0x8]
100636f6:	add    eax,0x30
100636f9:	jmp    0x10009d4e
100636fe:	mov    edx,DWORD PTR [esp+0x8]
10063702:	lea    eax,[edx+0xc]
10063705:	mov    ecx,DWORD PTR [edx-0x10]
10063708:	xor    ecx,eax
1006370a:	call   0x10042f87
1006370f:	mov    eax,0x1007a41c
10063714:	jmp    0x100592c1
10063719:	mov    eax,DWORD PTR [ebp+0x8]
1006371c:	jmp    0x10009d00
10063721:	mov    eax,DWORD PTR [ebp+0x8]
10063724:	add    eax,0x4
10063727:	jmp    0x10009d00
1006372c:	mov    eax,DWORD PTR [ebp+0x8]
1006372f:	add    eax,0x8
10063732:	jmp    0x10009d00
10063737:	mov    eax,DWORD PTR [ebp+0x8]
1006373a:	add    eax,0xc
1006373d:	jmp    0x10009d00
10063742:	mov    edx,DWORD PTR [esp+0x8]
10063746:	lea    eax,[edx+0xc]
10063749:	mov    ecx,DWORD PTR [edx-0x10]
1006374c:	xor    ecx,eax
1006374e:	call   0x10042f87
10063753:	mov    eax,0x1007a460
10063758:	jmp    0x100592c1
1006375d:	mov    eax,DWORD PTR [ebp+0x8]
10063760:	jmp    0x10009d00
10063765:	mov    eax,DWORD PTR [ebp+0x8]
10063768:	add    eax,0x4
1006376b:	jmp    0x10009d00
10063770:	mov    eax,DWORD PTR [ebp+0x8]
10063773:	add    eax,0x8
10063776:	jmp    0x10009d00
1006377b:	mov    edx,DWORD PTR [esp+0x8]
1006377f:	lea    eax,[edx+0xc]
10063782:	mov    ecx,DWORD PTR [edx-0x10]
10063785:	xor    ecx,eax
10063787:	call   0x10042f87
1006378c:	mov    eax,0x1007a49c
10063791:	jmp    0x100592c1
10063796:	lea    ecx,[ebp-0x34]
10063799:	jmp    0x1000722b
1006379e:	mov    edx,DWORD PTR [esp+0x8]
100637a2:	lea    eax,[edx+0xc]
100637a5:	mov    ecx,DWORD PTR [edx-0x40]
100637a8:	xor    ecx,eax
100637aa:	call   0x10042f87
100637af:	mov    ecx,DWORD PTR [edx-0x4]
100637b2:	xor    ecx,eax
100637b4:	call   0x10042f87
100637b9:	mov    eax,0x1007a4c8
100637be:	jmp    0x100592c1
100637c3:	lea    ecx,[ebp-0x30]
100637c6:	jmp    0x10012ee9
100637cb:	mov    edx,DWORD PTR [esp+0x8]
100637cf:	lea    eax,[edx+0xc]
100637d2:	mov    ecx,DWORD PTR [edx-0x34]
100637d5:	xor    ecx,eax
100637d7:	call   0x10042f87
100637dc:	mov    ecx,DWORD PTR [edx-0x8]
100637df:	xor    ecx,eax
100637e1:	call   0x10042f87
100637e6:	mov    eax,0x1007a528
100637eb:	jmp    0x100592c1
100637f0:	lea    ecx,[ebp-0x2c]
100637f3:	jmp    0x10012ee9
100637f8:	mov    eax,DWORD PTR [ebp-0x30]
100637fb:	jmp    0x10002087
10063800:	mov    eax,DWORD PTR [ebp-0x34]
10063803:	and    eax,0x1
10063806:	je     0x10063818
1006380c:	and    DWORD PTR [ebp-0x34],0xfffffffe
10063810:	mov    eax,DWORD PTR [ebp-0x30]
10063813:	jmp    0x10002087
10063818:	ret    
10063819:	mov    edx,DWORD PTR [esp+0x8]
1006381d:	lea    eax,[edx-0x34]
10063820:	mov    ecx,DWORD PTR [edx-0x38]
10063823:	xor    ecx,eax
10063825:	call   0x10042f87
1006382a:	add    eax,0xc
1006382d:	mov    ecx,DWORD PTR [edx-0x4]
10063830:	xor    ecx,eax
10063832:	call   0x10042f87
10063837:	mov    eax,0x1007a564
1006383c:	jmp    0x100592c1
10063841:	int3   
10063842:	int3   
10063843:	int3   
10063844:	int3   
10063845:	int3   
10063846:	int3   
10063847:	int3   
10063848:	int3   
10063849:	int3   
1006384a:	int3   
1006384b:	int3   
1006384c:	int3   
1006384d:	int3   
1006384e:	int3   
1006384f:	int3   
10063850:	lea    ecx,[ebp-0xa4]
10063856:	jmp    0x10012ee9
1006385b:	lea    ecx,[ebp-0x88]
10063861:	jmp    0x10012ee9
10063866:	lea    eax,[ebp-0xb8]
1006386c:	jmp    0x10034de0
10063871:	lea    ecx,[ebp-0x34]
10063874:	jmp    0x10012ee9
10063879:	lea    ecx,[ebp-0x50]
1006387c:	jmp    0x10012ee9
10063881:	lea    ecx,[ebp-0x6c]
10063884:	jmp    0x10012ee9
10063889:	lea    ecx,[ebp-0x50]
1006388c:	jmp    0x10012ee9
10063891:	lea    ecx,[ebp-0x34]
10063894:	jmp    0x10012ee9
10063899:	lea    ecx,[ebp-0xd8]
1006389f:	jmp    0x10012ee9
100638a4:	lea    ecx,[ebp-0x50]
100638a7:	jmp    0x10012ee9
100638ac:	lea    ecx,[ebp-0x34]
100638af:	jmp    0x10012ee9
100638b4:	lea    ecx,[ebp-0xd8]
100638ba:	jmp    0x10012ee9
100638bf:	lea    ecx,[ebp-0x34]
100638c2:	jmp    0x10012ee9
100638c7:	lea    ecx,[ebp-0xd8]
100638cd:	jmp    0x10012ee9
100638d2:	lea    ecx,[ebp-0x50]
100638d5:	jmp    0x10012ee9
100638da:	lea    ecx,[ebp-0x34]
100638dd:	jmp    0x10012ee9
100638e2:	lea    ecx,[ebp-0xd8]
100638e8:	jmp    0x10012ee9
100638ed:	lea    ecx,[ebp-0x34]
100638f0:	jmp    0x10012ee9
100638f5:	lea    ecx,[ebp-0xd8]
100638fb:	jmp    0x10012ee9
10063900:	lea    ecx,[ebp-0x34]
10063903:	jmp    0x10012ee9
10063908:	mov    edx,DWORD PTR [esp+0x8]
1006390c:	lea    eax,[edx+0xc]
1006390f:	mov    ecx,DWORD PTR [edx-0xe0]
10063915:	xor    ecx,eax
10063917:	call   0x10042f87
1006391c:	mov    ecx,DWORD PTR [edx-0xc]
1006391f:	xor    ecx,eax
10063921:	call   0x10042f87
10063926:	mov    eax,0x1007a65c
1006392b:	jmp    0x100592c1
10063930:	lea    ecx,[ebp-0x70]
10063933:	jmp    0x10012ee9
10063938:	lea    ecx,[ebp-0x48]
1006393b:	jmp    0x10012ee9
10063940:	lea    ecx,[ebp-0xc4]
10063946:	jmp    0x10012ee9
1006394b:	lea    ecx,[ebp-0x2c]
1006394e:	jmp    0x10012ee9
10063953:	lea    ecx,[ebp-0xa8]
10063959:	jmp    0x10012ee9
1006395e:	lea    ecx,[ebp-0x70]
10063961:	jmp    0x10012ee9
10063966:	lea    ecx,[ebp-0x8c]
1006396c:	jmp    0x10012ee9
10063971:	lea    ecx,[ebp-0x8c]
10063977:	jmp    0x10012ee9
1006397c:	mov    edx,DWORD PTR [esp+0x8]
10063980:	lea    eax,[edx+0xc]
10063983:	mov    ecx,DWORD PTR [edx-0xcc]
10063989:	xor    ecx,eax
1006398b:	call   0x10042f87
10063990:	mov    ecx,DWORD PTR [edx-0x4]
10063993:	xor    ecx,eax
10063995:	call   0x10042f87
1006399a:	mov    eax,0x1007a6d0
1006399f:	jmp    0x100592c1
100639a4:	lea    eax,[ebp-0x10]
100639a7:	jmp    0x10039f30
100639ac:	mov    edx,DWORD PTR [esp+0x8]
100639b0:	lea    eax,[edx+0xc]
100639b3:	mov    ecx,DWORD PTR [edx-0x14]
100639b6:	xor    ecx,eax
100639b8:	call   0x10042f87
100639bd:	mov    eax,0x1007a6fc
100639c2:	jmp    0x100592c1
100639c7:	lea    eax,[ebp-0x10]
100639ca:	jmp    0x10009d4e
100639cf:	mov    edx,DWORD PTR [esp+0x8]
100639d3:	lea    eax,[edx+0xc]
100639d6:	mov    ecx,DWORD PTR [edx-0x14]
100639d9:	xor    ecx,eax
100639db:	call   0x10042f87
100639e0:	mov    eax,0x1007a728
100639e5:	jmp    0x100592c1
100639ea:	push   DWORD PTR [ebp-0x14]
100639ed:	call   0x10042f82
100639f2:	pop    ecx
100639f3:	ret    
100639f4:	lea    eax,[ebp-0x14]
100639f7:	jmp    0x10009f0b
100639fc:	lea    eax,[ebp-0x10]
100639ff:	jmp    0x10009d4e
10063a04:	mov    edx,DWORD PTR [esp+0x8]
10063a08:	lea    eax,[edx+0xc]
10063a0b:	mov    ecx,DWORD PTR [edx-0x18]
10063a0e:	xor    ecx,eax
10063a10:	call   0x10042f87
10063a15:	mov    eax,0x1007a764
10063a1a:	jmp    0x100592c1
10063a1f:	lea    eax,[ebp-0x80]
10063a22:	jmp    0x1002335a
10063a27:	lea    eax,[ebp+0x14]
10063a2a:	jmp    0x1002335a
10063a2f:	lea    ecx,[ebp-0x5c]
10063a32:	jmp    0x1001b753
10063a37:	lea    ecx,[ebp-0x3c]
10063a3a:	jmp    0x1001b753
10063a3f:	lea    ecx,[ebp-0x6c]
10063a42:	jmp    0x1001b753
10063a47:	lea    ecx,[ebp-0x2c]
10063a4a:	jmp    0x1001b753
10063a4f:	lea    edi,[ebp+0x10]
10063a52:	jmp    0x100024f8
10063a57:	lea    ecx,[ebp-0x7c]
10063a5a:	jmp    0x1001b753
10063a5f:	lea    ecx,[ebp-0x4c]
10063a62:	jmp    0x1001b753
10063a67:	mov    edx,DWORD PTR [esp+0x8]
10063a6b:	lea    eax,[edx+0xc]
10063a6e:	mov    ecx,DWORD PTR [edx-0xe8]
10063a74:	xor    ecx,eax
10063a76:	call   0x10042f87
10063a7b:	mov    eax,0x1007a80c
10063a80:	jmp    0x100592c1
10063a85:	lea    eax,[ebp-0x40]
10063a88:	jmp    0x10034de0
10063a8d:	lea    eax,[ebp-0x64]
10063a90:	jmp    0x10009928
10063a95:	lea    eax,[ebp-0x5c]
10063a98:	jmp    0x10009928
10063a9d:	lea    esi,[ebp-0x54]
10063aa0:	jmp    0x10004232
10063aa5:	mov    edx,DWORD PTR [esp+0x8]
10063aa9:	lea    eax,[edx+0xc]
10063aac:	mov    ecx,DWORD PTR [edx-0x68]
10063aaf:	xor    ecx,eax
10063ab1:	call   0x10042f87
10063ab6:	mov    ecx,DWORD PTR [edx-0x8]
10063ab9:	xor    ecx,eax
10063abb:	call   0x10042f87
10063ac0:	mov    eax,0x1007a884
10063ac5:	jmp    0x100592c1
10063aca:	lea    eax,[ebp-0x54]
10063acd:	jmp    0x10009928
10063ad2:	lea    eax,[ebp-0x60]
10063ad5:	jmp    0x10009928
10063ada:	lea    eax,[ebp-0x58]
10063add:	jmp    0x10034de0
10063ae2:	lea    esi,[ebp-0x98]
10063ae8:	jmp    0x10004232
10063aed:	lea    ecx,[ebp-0x50]
10063af0:	jmp    0x10012ee9
10063af5:	lea    ecx,[ebp-0xb8]
10063afb:	jmp    0x10012ee9
10063b00:	lea    esi,[ebp-0x24]
10063b03:	jmp    0x10004232
10063b08:	lea    eax,[ebp-0x80]
10063b0b:	jmp    0x100182b3
10063b10:	lea    ecx,[ebp-0x50]
10063b13:	jmp    0x10012ee9
10063b18:	mov    edx,DWORD PTR [esp+0x8]
10063b1c:	lea    eax,[edx+0xc]
10063b1f:	mov    ecx,DWORD PTR [edx-0xbc]
10063b25:	xor    ecx,eax
10063b27:	call   0x10042f87
10063b2c:	mov    ecx,DWORD PTR [edx-0x8]
10063b2f:	xor    ecx,eax
10063b31:	call   0x10042f87
10063b36:	mov    eax,0x1007a924
10063b3b:	jmp    0x100592c1
10063b40:	lea    esi,[ebp-0x20]
10063b43:	jmp    0x10004232
10063b48:	mov    edx,DWORD PTR [esp+0x8]
10063b4c:	lea    eax,[edx-0x1c]
10063b4f:	mov    ecx,DWORD PTR [edx-0x20]
10063b52:	xor    ecx,eax
10063b54:	call   0x10042f87
10063b59:	mov    eax,0x1007a950
10063b5e:	jmp    0x100592c1
10063b63:	lea    eax,[ebp-0x14]
10063b66:	jmp    0x10009928
10063b6b:	mov    eax,DWORD PTR [ebp-0x48]
10063b6e:	and    eax,0x1
10063b71:	je     0x10063b83
10063b77:	and    DWORD PTR [ebp-0x48],0xfffffffe
10063b7b:	mov    ecx,DWORD PTR [ebp-0x18]
10063b7e:	jmp    0x10012ee9
10063b83:	ret    
10063b84:	lea    eax,[ebp-0x1c]
10063b87:	jmp    0x10034de0
10063b8c:	lea    ecx,[ebp-0x40]
10063b8f:	jmp    0x10012ee9
10063b94:	lea    esi,[ebp-0x34]
10063b97:	jmp    0x10004232
10063b9c:	mov    edx,DWORD PTR [esp+0x8]
10063ba0:	lea    eax,[edx+0xc]
10063ba3:	mov    ecx,DWORD PTR [edx-0x4c]
10063ba6:	xor    ecx,eax
10063ba8:	call   0x10042f87
10063bad:	mov    eax,0x1007a9ac
10063bb2:	jmp    0x100592c1
10063bb7:	lea    ecx,[ebp-0x10]
10063bba:	jmp    0x10015efd
10063bbf:	mov    edx,DWORD PTR [esp+0x8]
10063bc3:	lea    eax,[edx+0xc]
10063bc6:	mov    ecx,DWORD PTR [edx-0x14]
10063bc9:	xor    ecx,eax
10063bcb:	call   0x10042f87
10063bd0:	mov    eax,0x1007a9d8
10063bd5:	jmp    0x100592c1
10063bda:	lea    eax,[ebp-0x28]
10063bdd:	jmp    0x1002335a
10063be2:	mov    edx,DWORD PTR [esp+0x8]
10063be6:	lea    eax,[edx-0x24]
10063be9:	mov    ecx,DWORD PTR [edx-0x28]
10063bec:	xor    ecx,eax
10063bee:	call   0x10042f87
10063bf3:	add    eax,0x4
10063bf6:	mov    ecx,DWORD PTR [edx-0x8]
10063bf9:	xor    ecx,eax
10063bfb:	call   0x10042f87
10063c00:	mov    eax,0x1007aa04
10063c05:	jmp    0x100592c1
10063c0a:	lea    eax,[ebp-0x18]
10063c0d:	jmp    0x10009928
10063c12:	mov    edx,DWORD PTR [esp+0x8]
10063c16:	lea    eax,[edx+0xc]
10063c19:	mov    ecx,DWORD PTR [edx-0x1c]
10063c1c:	xor    ecx,eax
10063c1e:	call   0x10042f87
10063c23:	mov    eax,0x1007aa30
10063c28:	jmp    0x100592c1
10063c2d:	lea    ecx,[ebp+0x8]
10063c30:	jmp    0x10012ee9
10063c35:	mov    edx,DWORD PTR [esp+0x8]
10063c39:	lea    eax,[edx+0xc]
10063c3c:	mov    ecx,DWORD PTR [edx-0x14]
10063c3f:	xor    ecx,eax
10063c41:	call   0x10042f87
10063c46:	mov    eax,0x1007aa5c
10063c4b:	jmp    0x100592c1
10063c50:	lea    ecx,[ebp-0x2c]
10063c53:	jmp    0x10012ee9
10063c58:	lea    ecx,[ebp-0x70]
10063c5b:	jmp    0x10012ee9
10063c60:	mov    edx,DWORD PTR [esp+0x8]
10063c64:	lea    eax,[edx+0xc]
10063c67:	mov    ecx,DWORD PTR [edx-0x90]
10063c6d:	xor    ecx,eax
10063c6f:	call   0x10042f87
10063c74:	mov    ecx,DWORD PTR [edx-0x4]
10063c77:	xor    ecx,eax
10063c79:	call   0x10042f87
10063c7e:	mov    eax,0x1007aa90
10063c83:	jmp    0x100592c1
10063c88:	push   DWORD PTR [ebp-0x34]
10063c8b:	call   0x10042f82
10063c90:	pop    ecx
10063c91:	ret    
10063c92:	lea    eax,[ebp-0x34]
10063c95:	jmp    0x10009f1a
10063c9a:	lea    ecx,[ebp-0x2c]
10063c9d:	jmp    0x10012ee9
10063ca2:	push   DWORD PTR [ebp-0x40]
10063ca5:	call   0x10042f82
10063caa:	pop    ecx
10063cab:	ret    
10063cac:	push   DWORD PTR [ebp-0x40]
10063caf:	call   0x10042f82
10063cb4:	pop    ecx
10063cb5:	ret    
10063cb6:	push   DWORD PTR [ebp-0x40]
10063cb9:	call   0x10042f82
10063cbe:	pop    ecx
10063cbf:	ret    
10063cc0:	push   DWORD PTR [ebp-0x40]
10063cc3:	call   0x10042f82
10063cc8:	pop    ecx
10063cc9:	ret    
10063cca:	lea    eax,[ebp-0x38]
10063ccd:	jmp    0x10009d4e
10063cd2:	mov    edx,DWORD PTR [esp+0x8]
10063cd6:	lea    eax,[edx+0xc]
10063cd9:	mov    ecx,DWORD PTR [edx-0x4c]
10063cdc:	xor    ecx,eax
10063cde:	call   0x10042f87
10063ce3:	mov    ecx,DWORD PTR [edx-0x4]
10063ce6:	xor    ecx,eax
10063ce8:	call   0x10042f87
10063ced:	mov    eax,0x1007ab20
10063cf2:	jmp    0x100592c1
10063cf7:	push   DWORD PTR [ebp-0x30]
10063cfa:	call   0x10042f82
10063cff:	pop    ecx
10063d00:	ret    
10063d01:	lea    eax,[ebp-0x40]
10063d04:	jmp    0x10009f0b
10063d09:	lea    ecx,[ebp-0x2c]
10063d0c:	jmp    0x10012ee9
10063d11:	push   DWORD PTR [ebp-0x38]
10063d14:	call   0x10042f82
10063d19:	pop    ecx
10063d1a:	ret    
10063d1b:	push   DWORD PTR [ebp-0x38]
10063d1e:	call   0x10042f82
10063d23:	pop    ecx
10063d24:	ret    
10063d25:	push   DWORD PTR [ebp-0x38]
10063d28:	call   0x10042f82
10063d2d:	pop    ecx
10063d2e:	ret    
10063d2f:	push   DWORD PTR [ebp-0x38]
10063d32:	call   0x10042f82
10063d37:	pop    ecx
10063d38:	ret    
10063d39:	lea    eax,[ebp-0x34]
10063d3c:	jmp    0x10009d4e
10063d41:	mov    edx,DWORD PTR [esp+0x8]
10063d45:	lea    eax,[edx+0xc]
10063d48:	mov    ecx,DWORD PTR [edx-0x44]
10063d4b:	xor    ecx,eax
10063d4d:	call   0x10042f87
10063d52:	mov    ecx,DWORD PTR [edx-0x4]
10063d55:	xor    ecx,eax
10063d57:	call   0x10042f87
10063d5c:	mov    eax,0x1007ab88
10063d61:	jmp    0x100592c1
10063d66:	push   DWORD PTR [ebp-0x10]
10063d69:	call   0x10042f82
10063d6e:	pop    ecx
10063d6f:	ret    
10063d70:	lea    eax,[ebp-0x10]
10063d73:	jmp    0x10009f1a
10063d78:	mov    edx,DWORD PTR [esp+0x8]
10063d7c:	lea    eax,[edx+0xc]
10063d7f:	mov    ecx,DWORD PTR [edx-0x18]
10063d82:	xor    ecx,eax
10063d84:	call   0x10042f87
10063d89:	mov    eax,0x1007abbc
10063d8e:	jmp    0x100592c1
10063d93:	push   DWORD PTR [ebp-0x10]
10063d96:	call   0x10042f82
10063d9b:	pop    ecx
10063d9c:	ret    
10063d9d:	lea    eax,[ebp-0x14]
10063da0:	jmp    0x10009f0b
10063da5:	mov    edx,DWORD PTR [esp+0x8]
10063da9:	lea    eax,[edx+0xc]
10063dac:	mov    ecx,DWORD PTR [edx-0x18]
10063daf:	xor    ecx,eax
10063db1:	call   0x10042f87
10063db6:	mov    eax,0x1007abf0
10063dbb:	jmp    0x100592c1
10063dc0:	lea    ecx,[ebp-0x10]
10063dc3:	jmp    0x1000722b
10063dc8:	mov    edx,DWORD PTR [esp+0x8]
10063dcc:	lea    eax,[edx+0xc]
10063dcf:	mov    ecx,DWORD PTR [edx-0x14]
10063dd2:	xor    ecx,eax
10063dd4:	call   0x10042f87
10063dd9:	mov    eax,0x1007ac1c
10063dde:	jmp    0x100592c1
10063de3:	lea    eax,[ebp-0x21c]
10063de9:	jmp    0x10002087
10063dee:	lea    ecx,[ebp-0x260]
10063df4:	jmp    0x10012ee9
10063df9:	lea    esi,[ebp-0x220]
10063dff:	jmp    0x100067eb
10063e04:	lea    eax,[ebp-0x230]
10063e0a:	jmp    0x10009928
10063e0f:	mov    edx,DWORD PTR [esp+0x8]
10063e13:	lea    eax,[edx+0xc]
10063e16:	mov    ecx,DWORD PTR [edx-0x264]
10063e1c:	xor    ecx,eax
10063e1e:	call   0x10042f87
10063e23:	mov    ecx,DWORD PTR [edx-0x4]
10063e26:	xor    ecx,eax
10063e28:	call   0x10042f87
10063e2d:	mov    eax,0x1007ac60
10063e32:	jmp    0x100592c1
10063e37:	lea    esi,[ebp-0x64]
10063e3a:	jmp    0x10004232
10063e3f:	lea    ecx,[ebp-0x30]
10063e42:	jmp    0x10012ee9
10063e47:	lea    ecx,[ebp-0x4c]
10063e4a:	jmp    0x10012ee9
10063e4f:	lea    ecx,[ebp-0x88]
10063e55:	jmp    0x10012ee9
10063e5a:	mov    edx,DWORD PTR [esp+0x8]
10063e5e:	lea    eax,[edx+0xc]
10063e61:	mov    ecx,DWORD PTR [edx-0x8c]
10063e67:	xor    ecx,eax
10063e69:	call   0x10042f87
10063e6e:	mov    ecx,DWORD PTR [edx-0x4]
10063e71:	xor    ecx,eax
10063e73:	call   0x10042f87
10063e78:	mov    eax,0x1007aca4
10063e7d:	jmp    0x100592c1
10063e82:	int3   
10063e83:	int3   
10063e84:	int3   
10063e85:	int3   
10063e86:	int3   
10063e87:	int3   
10063e88:	int3   
10063e89:	int3   
10063e8a:	int3   
10063e8b:	int3   
10063e8c:	int3   
10063e8d:	int3   
10063e8e:	int3   
10063e8f:	int3   
10063e90:	lea    ecx,[ebp-0x1ac]
10063e96:	jmp    0x10012ee9
10063e9b:	lea    ecx,[ebp-0x1c8]
10063ea1:	jmp    0x10012ee9
10063ea6:	lea    ecx,[ebp-0x1e4]
10063eac:	jmp    0x10012ee9
10063eb1:	lea    ecx,[ebp-0x158]
10063eb7:	jmp    0x10012ee9
10063ebc:	lea    ecx,[ebp-0x174]
10063ec2:	jmp    0x10012ee9
10063ec7:	lea    ecx,[ebp-0x30]
10063eca:	jmp    0x10012ee9
10063ecf:	lea    ecx,[ebp-0x4c]
10063ed2:	jmp    0x10012ee9
10063ed7:	lea    ecx,[ebp-0x104]
10063edd:	jmp    0x10012ee9
10063ee2:	lea    ecx,[ebp-0x190]
10063ee8:	jmp    0x10012ee9
10063eed:	lea    eax,[ebp-0x1fc]
10063ef3:	jmp    0x10009928
10063ef8:	lea    ecx,[ebp-0x190]
10063efe:	jmp    0x10012ee9
10063f03:	lea    ecx,[ebp-0x1c8]
10063f09:	jmp    0x10012ee9
10063f0e:	lea    esi,[ebp-0xe8]
10063f14:	jmp    0x1000bd15
10063f19:	lea    ecx,[ebp-0x174]
10063f1f:	jmp    0x10012ee9
10063f24:	lea    ecx,[ebp-0x190]
10063f2a:	jmp    0x10012ee9
10063f2f:	lea    ecx,[ebp-0x13c]
10063f35:	jmp    0x10012ee9
10063f3a:	lea    ecx,[ebp-0x158]
10063f40:	jmp    0x10012ee9
10063f45:	lea    ecx,[ebp-0x1c8]
10063f4b:	jmp    0x10012ee9
10063f50:	lea    ecx,[ebp-0x1e4]
10063f56:	jmp    0x10012ee9
10063f5b:	lea    ecx,[ebp-0x1ac]
10063f61:	jmp    0x10012ee9
10063f66:	lea    ecx,[ebp-0x120]
10063f6c:	jmp    0x10012ee9
10063f71:	lea    ecx,[ebp-0x13c]
10063f77:	jmp    0x10012ee9
10063f7c:	mov    edx,DWORD PTR [esp+0x8]
10063f80:	lea    eax,[edx-0x1fc]
10063f86:	mov    ecx,DWORD PTR [edx-0x200]
10063f8c:	xor    ecx,eax
10063f8e:	call   0x10042f87
10063f93:	add    eax,0xc
10063f96:	mov    ecx,DWORD PTR [edx-0x8]
10063f99:	xor    ecx,eax
10063f9b:	call   0x10042f87
10063fa0:	mov    eax,0x1007ada0
10063fa5:	jmp    0x100592c1
10063faa:	int3   
10063fab:	int3   
10063fac:	int3   
10063fad:	int3   
10063fae:	int3   
10063faf:	int3   
10063fb0:	lea    eax,[ebp-0x14]
10063fb3:	jmp    0x10009928
10063fb8:	lea    eax,[ebp-0x10]
10063fbb:	jmp    0x10009928
10063fc0:	mov    edx,DWORD PTR [esp+0x8]
10063fc4:	lea    eax,[edx-0x28]
10063fc7:	mov    ecx,DWORD PTR [edx-0x2c]
10063fca:	xor    ecx,eax
10063fcc:	call   0x10042f87
10063fd1:	mov    eax,0x1007add4
10063fd6:	jmp    0x100592c1
10063fdb:	int3   
10063fdc:	int3   
10063fdd:	int3   
10063fde:	int3   
10063fdf:	int3   
10063fe0:	lea    ecx,[ebp-0x28]
10063fe3:	jmp    0x10012ee9
10063fe8:	mov    edx,DWORD PTR [esp+0x8]
10063fec:	lea    eax,[edx-0x24]
10063fef:	mov    ecx,DWORD PTR [edx-0x28]
10063ff2:	xor    ecx,eax
10063ff4:	call   0x10042f87
10063ff9:	mov    eax,0x1007ae00
10063ffe:	jmp    0x100592c1
10064003:	lea    eax,[ebp+0x4]
10064006:	jmp    0x10009f0b
1006400b:	lea    eax,[ebp+0x8]
1006400e:	jmp    0x10009f1a
10064013:	lea    ecx,[ebp+0x44]
10064016:	jmp    0x10012ee9
1006401b:	lea    ecx,[ebp-0x44]
1006401e:	jmp    0x10012ee9
10064023:	lea    ecx,[ebp-0x60]
10064026:	jmp    0x10012ee9
1006402b:	lea    ecx,[ebp-0x28]
1006402e:	jmp    0x10012ee9
10064033:	lea    ecx,[ebp+0xc]
10064036:	jmp    0x10012ee9
1006403b:	mov    edx,DWORD PTR [esp+0x8]
1006403f:	lea    eax,[edx+0xc]
10064042:	mov    ecx,DWORD PTR [edx-0x64]
10064045:	xor    ecx,eax
10064047:	call   0x10042f87
1006404c:	mov    ecx,DWORD PTR [edx+0x6c]
1006404f:	xor    ecx,eax
10064051:	call   0x10042f87
10064056:	mov    eax,0x1007ae78
1006405b:	jmp    0x100592c1
10064060:	lea    ecx,[ebp-0x4a4]
10064066:	jmp    0x10012ee9
1006406b:	lea    ecx,[ebp-0x530]
10064071:	jmp    0x10012ee9
10064076:	lea    ecx,[ebp-0x4dc]
1006407c:	jmp    0x10012ee9
10064081:	lea    ecx,[ebp-0x4f8]
10064087:	jmp    0x10012ee9
1006408c:	lea    ecx,[ebp-0x434]
10064092:	jmp    0x10012ee9
10064097:	lea    ecx,[ebp-0x450]
1006409d:	jmp    0x10012ee9
100640a2:	lea    ecx,[ebp-0x488]
100640a8:	jmp    0x10012ee9
100640ad:	lea    ecx,[ebp-0x5a8]
100640b3:	jmp    0x1001b753
100640b8:	lea    ecx,[ebp-0x598]
100640be:	jmp    0x1001b753
100640c3:	lea    eax,[ebp-0x5cc]
100640c9:	jmp    0x1002335a
100640ce:	lea    edi,[ebp-0x5c8]
100640d4:	jmp    0x100024f8
100640d9:	lea    ecx,[ebp-0x46c]
100640df:	jmp    0x10012ee9
100640e4:	lea    ecx,[ebp-0x54c]
100640ea:	jmp    0x10012ee9
100640ef:	lea    ecx,[ebp-0x584]
100640f5:	jmp    0x10012ee9
100640fa:	lea    ecx,[ebp-0x514]
10064100:	jmp    0x10012ee9
10064105:	lea    ecx,[ebp-0x568]
1006410b:	jmp    0x10012ee9
10064110:	lea    eax,[ebp-0x5d4]
10064116:	jmp    0x10009f0b
1006411b:	lea    eax,[ebp-0x5c0]
10064121:	jmp    0x10009f1a
10064126:	mov    edx,DWORD PTR [esp+0x8]
1006412a:	lea    eax,[edx-0x5e4]
10064130:	mov    ecx,DWORD PTR [edx-0x5e8]
10064136:	xor    ecx,eax
10064138:	call   0x10042f87
1006413d:	add    eax,0xc
10064140:	mov    ecx,DWORD PTR [edx-0x8]
10064143:	xor    ecx,eax
10064145:	call   0x10042f87
1006414a:	mov    eax,0x1007af48
1006414f:	jmp    0x100592c1
10064154:	lea    ecx,[ebp-0x220]
1006415a:	jmp    0x10012ee9
1006415f:	lea    ecx,[ebp-0x27c]
10064165:	jmp    0x10012ee9
1006416a:	lea    ecx,[ebp-0x27c]
10064170:	jmp    0x10012ee9
10064175:	lea    ecx,[ebp-0x258]
1006417b:	jmp    0x10012ee9
10064180:	lea    ecx,[ebp-0x220]
10064186:	jmp    0x10012ee9
1006418b:	lea    ecx,[ebp-0x27c]
10064191:	jmp    0x10012ee9
10064196:	lea    esi,[ebp-0x140]
1006419c:	jmp    0x1000bcad
100641a1:	lea    ecx,[ebp-0x27c]
100641a7:	jmp    0x10012ee9
100641ac:	lea    ecx,[ebp-0x27c]
100641b2:	jmp    0x10012ee9
100641b7:	lea    ecx,[ebp-0x27c]
100641bd:	jmp    0x10012ee9
100641c2:	lea    ecx,[ebp-0x27c]
100641c8:	jmp    0x10012ee9
100641cd:	lea    ecx,[ebp-0x27c]
100641d3:	jmp    0x10012ee9
100641d8:	lea    ecx,[ebp-0x178]
100641de:	jmp    0x10012ee9
100641e3:	lea    ecx,[ebp-0x258]
100641e9:	jmp    0x10012ee9
100641ee:	lea    ecx,[ebp-0x258]
100641f4:	jmp    0x10012ee9
100641f9:	lea    ecx,[ebp-0x23c]
100641ff:	jmp    0x10012ee9
10064204:	lea    esi,[ebp-0xb0]
1006420a:	jmp    0x1000bd15
1006420f:	lea    ecx,[ebp-0x15c]
10064215:	jmp    0x10012ee9
1006421a:	lea    ecx,[ebp-0x23c]
10064220:	jmp    0x10012ee9
10064225:	lea    ecx,[ebp-0x194]
1006422b:	jmp    0x10012ee9
10064230:	lea    ecx,[ebp-0x1cc]
10064236:	jmp    0x10012ee9
1006423b:	lea    ecx,[ebp-0x1e8]
10064241:	jmp    0x10012ee9
10064246:	lea    ecx,[ebp-0x204]
1006424c:	jmp    0x10012ee9
10064251:	lea    ecx,[ebp-0x1b0]
10064257:	jmp    0x10012ee9
1006425c:	mov    edx,DWORD PTR [esp+0x8]
10064260:	lea    eax,[edx-0x28c]
10064266:	mov    ecx,DWORD PTR [edx-0x290]
1006426c:	xor    ecx,eax
1006426e:	call   0x10042f87
10064273:	add    eax,0xc
10064276:	mov    ecx,DWORD PTR [edx-0x8]
10064279:	xor    ecx,eax
1006427b:	call   0x10042f87
10064280:	mov    eax,0x1007b038
10064285:	jmp    0x100592c1
1006428a:	lea    ecx,[ebp-0x68]
1006428d:	jmp    0x10012ee9
10064292:	lea    ecx,[ebp-0x30]
10064295:	jmp    0x10012ee9
1006429a:	lea    ecx,[ebp-0x4c]
1006429d:	jmp    0x10012ee9
100642a2:	lea    ecx,[ebp-0xa0]
100642a8:	jmp    0x10012ee9
100642ad:	lea    ecx,[ebp-0x84]
100642b3:	jmp    0x10012ee9
100642b8:	lea    ecx,[ebp-0x68]
100642bb:	jmp    0x10012ee9
100642c0:	lea    ecx,[ebp-0xa0]
100642c6:	jmp    0x10012ee9
100642cb:	lea    ecx,[ebp-0x84]
100642d1:	jmp    0x10012ee9
100642d6:	lea    ecx,[ebp-0xa0]
100642dc:	jmp    0x10012ee9
100642e1:	mov    edx,DWORD PTR [esp+0x8]
100642e5:	lea    eax,[edx-0xa4]
100642eb:	mov    ecx,DWORD PTR [edx-0xa8]
100642f1:	xor    ecx,eax
100642f3:	call   0x10042f87
100642f8:	add    eax,0xc
100642fb:	mov    ecx,DWORD PTR [edx-0x8]
100642fe:	xor    ecx,eax
10064300:	call   0x10042f87
10064305:	mov    eax,0x1007b0b0
1006430a:	jmp    0x100592c1
1006430f:	lea    ecx,[ebp-0x84]
10064315:	jmp    0x10012ee9
1006431a:	lea    ecx,[ebp-0x30]
1006431d:	jmp    0x10012ee9
10064322:	lea    ecx,[ebp-0xa0]
10064328:	jmp    0x10012ee9
1006432d:	lea    ecx,[ebp-0xa0]
10064333:	jmp    0x10012ee9
10064338:	lea    ecx,[ebp-0x68]
1006433b:	jmp    0x10012ee9
10064340:	lea    ecx,[ebp-0x4c]
10064343:	jmp    0x10012ee9
10064348:	mov    edx,DWORD PTR [esp+0x8]
1006434c:	lea    eax,[edx-0xac]
10064352:	mov    ecx,DWORD PTR [edx-0xb0]
10064358:	xor    ecx,eax
1006435a:	call   0x10042f87
1006435f:	add    eax,0xc
10064362:	mov    ecx,DWORD PTR [edx-0x8]
10064365:	xor    ecx,eax
10064367:	call   0x10042f87
1006436c:	mov    eax,0x1007b10c
10064371:	jmp    0x100592c1
10064376:	lea    eax,[ebp-0x1c]
10064379:	jmp    0x10009f1a
1006437e:	lea    eax,[ebp-0x18]
10064381:	jmp    0x10009f1a
10064386:	mov    edx,DWORD PTR [esp+0x8]
1006438a:	lea    eax,[edx+0xc]
1006438d:	mov    ecx,DWORD PTR [edx-0x44]
10064390:	xor    ecx,eax
10064392:	call   0x10042f87
10064397:	mov    eax,0x1007b140
1006439c:	jmp    0x100592c1
100643a1:	lea    eax,[ebp-0x18]
100643a4:	jmp    0x10009f1a
100643a9:	lea    eax,[ebp-0x14]
100643ac:	jmp    0x10009f1a
100643b1:	mov    edx,DWORD PTR [esp+0x8]
100643b5:	lea    eax,[edx+0xc]
100643b8:	mov    ecx,DWORD PTR [edx-0x40]
100643bb:	xor    ecx,eax
100643bd:	call   0x10042f87
100643c2:	mov    eax,0x1007b174
100643c7:	jmp    0x100592c1
100643cc:	lea    eax,[ebp-0x20]
100643cf:	jmp    0x10009f0b
100643d4:	lea    eax,[ebp-0x14]
100643d7:	jmp    0x10009f0b
100643dc:	lea    eax,[ebp-0x1c]
100643df:	jmp    0x10009f1a
100643e4:	lea    eax,[ebp-0x18]
100643e7:	jmp    0x10009d4e
100643ec:	lea    esi,[ebp-0x40]
100643ef:	jmp    0x1002647f
100643f4:	mov    edx,DWORD PTR [esp+0x8]
100643f8:	lea    eax,[edx+0xc]
100643fb:	mov    ecx,DWORD PTR [edx-0x44]
100643fe:	xor    ecx,eax
10064400:	call   0x10042f87
10064405:	mov    eax,0x1007b1c0
1006440a:	jmp    0x100592c1
1006440f:	lea    eax,[ebp-0x14]
10064412:	jmp    0x100260c6
10064417:	mov    edx,DWORD PTR [esp+0x8]
1006441b:	lea    eax,[edx+0xc]
1006441e:	mov    ecx,DWORD PTR [edx-0x18]
10064421:	xor    ecx,eax
10064423:	call   0x10042f87
10064428:	mov    eax,0x1007b220
1006442d:	jmp    0x100592c1
10064432:	mov    eax,DWORD PTR [ebp-0x14]
10064435:	and    eax,0x1
10064438:	je     0x1006444a
1006443e:	and    DWORD PTR [ebp-0x14],0xfffffffe
10064442:	lea    eax,[ebp+0x18]
10064445:	jmp    0x10034de0
1006444a:	ret    
1006444b:	mov    edx,DWORD PTR [esp+0x8]
1006444f:	lea    eax,[edx+0xc]
10064452:	mov    ecx,DWORD PTR [edx-0x20]
10064455:	xor    ecx,eax
10064457:	call   0x10042f87
1006445c:	mov    eax,0x1007b290
10064461:	jmp    0x100592c1
10064466:	lea    ecx,[ebp-0x10]
10064469:	jmp    0x10015efd
1006446e:	mov    edx,DWORD PTR [esp+0x8]
10064472:	lea    eax,[edx+0xc]
10064475:	mov    ecx,DWORD PTR [edx-0x24]
10064478:	xor    ecx,eax
1006447a:	call   0x10042f87
1006447f:	mov    eax,0x1007b2bc
10064484:	jmp    0x100592c1
10064489:	lea    ecx,[ebp-0x18]
1006448c:	jmp    0x10010d7e
10064491:	lea    eax,[ebp-0x24]
10064494:	jmp    0x1002335a
10064499:	lea    eax,[ebp-0x28]
1006449c:	jmp    0x1002335a
100644a1:	lea    eax,[ebp-0x20]
100644a4:	jmp    0x1002335a
100644a9:	mov    edx,DWORD PTR [esp+0x8]
100644ad:	lea    eax,[edx-0x2c]
100644b0:	mov    ecx,DWORD PTR [edx-0x30]
100644b3:	xor    ecx,eax
100644b5:	call   0x10042f87
100644ba:	mov    eax,0x1007b300
100644bf:	jmp    0x100592c1
100644c4:	lea    ecx,[ebp-0x2c]
100644c7:	jmp    0x10012ee9
100644cc:	mov    edx,DWORD PTR [esp+0x8]
100644d0:	lea    eax,[edx+0xc]
100644d3:	mov    ecx,DWORD PTR [edx-0x3c]
100644d6:	xor    ecx,eax
100644d8:	call   0x10042f87
100644dd:	mov    ecx,DWORD PTR [edx-0x4]
100644e0:	xor    ecx,eax
100644e2:	call   0x10042f87
100644e7:	mov    eax,0x1007b32c
100644ec:	jmp    0x100592c1
100644f1:	lea    ecx,[ebp-0x30]
100644f4:	jmp    0x10012ee9
100644f9:	mov    edx,DWORD PTR [esp+0x8]
100644fd:	lea    eax,[edx+0xc]
10064500:	mov    ecx,DWORD PTR [edx-0x34]
10064503:	xor    ecx,eax
10064505:	call   0x10042f87
1006450a:	mov    eax,0x1007b358
1006450f:	jmp    0x100592c1
10064514:	lea    ecx,[ebp-0x2c]
10064517:	jmp    0x10012ee9
1006451c:	push   DWORD PTR [ebp-0x34]
1006451f:	call   0x10042f82
10064524:	pop    ecx
10064525:	ret    
10064526:	mov    edx,DWORD PTR [esp+0x8]
1006452a:	lea    eax,[edx+0xc]
1006452d:	mov    ecx,DWORD PTR [edx-0x40]
10064530:	xor    ecx,eax
10064532:	call   0x10042f87
10064537:	mov    ecx,DWORD PTR [edx-0x4]
1006453a:	xor    ecx,eax
1006453c:	call   0x10042f87
10064541:	mov    eax,0x1007b38c
10064546:	jmp    0x100592c1
1006454b:	lea    ecx,[ebp-0x30]
1006454e:	jmp    0x10012ee9
10064553:	lea    ecx,[ebp-0x4c]
10064556:	jmp    0x10012ee9
1006455b:	lea    eax,[ebp-0x5c]
1006455e:	jmp    0x10009928
10064563:	mov    edx,DWORD PTR [esp+0x8]
10064567:	lea    eax,[edx-0x64]
1006456a:	mov    ecx,DWORD PTR [edx-0x68]
1006456d:	xor    ecx,eax
1006456f:	call   0x10042f87
10064574:	add    eax,0xc
10064577:	mov    ecx,DWORD PTR [edx-0x8]
1006457a:	xor    ecx,eax
1006457c:	call   0x10042f87
10064581:	mov    eax,0x1007b3c8
10064586:	jmp    0x100592c1
1006458b:	lea    ecx,[ebp-0x2c]
1006458e:	jmp    0x10012ee9
10064593:	push   DWORD PTR [ebp-0x4c]
10064596:	call   0x10042f82
1006459b:	pop    ecx
1006459c:	ret    
1006459d:	lea    ecx,[ebp-0x48]
100645a0:	jmp    0x10012ee9
100645a5:	push   DWORD PTR [ebp-0x54]
100645a8:	call   0x10042f82
100645ad:	pop    ecx
100645ae:	ret    
100645af:	mov    edx,DWORD PTR [esp+0x8]
100645b3:	lea    eax,[edx+0xc]
100645b6:	mov    ecx,DWORD PTR [edx-0x5c]
100645b9:	xor    ecx,eax
100645bb:	call   0x10042f87
100645c0:	mov    ecx,DWORD PTR [edx-0x4]
100645c3:	xor    ecx,eax
100645c5:	call   0x10042f87
100645ca:	mov    eax,0x1007b40c
100645cf:	jmp    0x100592c1
100645d4:	lea    ecx,[ebp-0x30]
100645d7:	jmp    0x10012ee9
100645dc:	lea    ecx,[ebp-0xa0]
100645e2:	jmp    0x10012ee9
100645e7:	lea    ecx,[ebp-0xbc]
100645ed:	jmp    0x10012ee9
100645f2:	lea    ecx,[ebp-0xbc]
100645f8:	jmp    0x10012ee9
100645fd:	mov    eax,DWORD PTR [ebp-0xcc]
10064603:	and    eax,0x1
10064606:	je     0x1006461e
1006460c:	and    DWORD PTR [ebp-0xcc],0xfffffffe
10064613:	lea    ecx,[ebp-0xa0]
10064619:	jmp    0x10012ee9
1006461e:	ret    
1006461f:	mov    eax,DWORD PTR [ebp-0xcc]
10064625:	and    eax,0x2
10064628:	je     0x1006463d
1006462e:	and    DWORD PTR [ebp-0xcc],0xfffffffd
10064635:	lea    ecx,[ebp-0x68]
10064638:	jmp    0x10012ee9
1006463d:	ret    
1006463e:	mov    eax,DWORD PTR [ebp-0xcc]
10064644:	and    eax,0x4
10064647:	je     0x1006465f
1006464d:	and    DWORD PTR [ebp-0xcc],0xfffffffb
10064654:	lea    ecx,[ebp-0xbc]
1006465a:	jmp    0x10012ee9
1006465f:	ret    
10064660:	mov    eax,DWORD PTR [ebp-0xcc]
10064666:	and    eax,0x8
10064669:	je     0x1006467e
1006466f:	and    DWORD PTR [ebp-0xcc],0xfffffff7
10064676:	lea    ecx,[ebp-0x4c]
10064679:	jmp    0x10012ee9
1006467e:	ret    
1006467f:	mov    eax,DWORD PTR [ebp-0xcc]
10064685:	and    eax,0x10
10064688:	je     0x100646a0
1006468e:	and    DWORD PTR [ebp-0xcc],0xffffffef
10064695:	lea    ecx,[ebp-0x84]
1006469b:	jmp    0x10012ee9
100646a0:	ret    
100646a1:	push   DWORD PTR [ebp-0xc4]
100646a7:	call   0x10042f82
100646ac:	pop    ecx
100646ad:	ret    
100646ae:	mov    edx,DWORD PTR [esp+0x8]
100646b2:	lea    eax,[edx-0xd4]
100646b8:	mov    ecx,DWORD PTR [edx-0xd8]
100646be:	xor    ecx,eax
100646c0:	call   0x10042f87
100646c5:	add    eax,0xc
100646c8:	mov    ecx,DWORD PTR [edx-0x8]
100646cb:	xor    ecx,eax
100646cd:	call   0x10042f87
100646d2:	mov    eax,0x1007b480
100646d7:	jmp    0x100592c1
100646dc:	lea    eax,[ebp-0x18]
100646df:	jmp    0x10009d00
100646e4:	lea    eax,[ebp-0x14]
100646e7:	jmp    0x10009d00
100646ec:	lea    eax,[ebp-0x10]
100646ef:	jmp    0x10009d00
100646f4:	mov    edx,DWORD PTR [esp+0x8]
100646f8:	lea    eax,[edx+0xc]
100646fb:	mov    ecx,DWORD PTR [edx-0x1c]
100646fe:	xor    ecx,eax
10064700:	call   0x10042f87
10064705:	mov    eax,0x1007b4bc
1006470a:	jmp    0x100592c1
1006470f:	lea    ecx,[ebp-0x2c]
10064712:	jmp    0x10012ee9
10064717:	push   DWORD PTR [ebp-0x50]
1006471a:	call   0x10042f82
1006471f:	pop    ecx
10064720:	ret    
10064721:	lea    ecx,[ebp-0x48]
10064724:	jmp    0x10012ee9
10064729:	push   DWORD PTR [ebp-0x50]
1006472c:	call   0x10042f82
10064731:	pop    ecx
10064732:	ret    
10064733:	mov    edx,DWORD PTR [esp+0x8]
10064737:	lea    eax,[edx+0xc]
1006473a:	mov    ecx,DWORD PTR [edx-0x60]
1006473d:	xor    ecx,eax
1006473f:	call   0x10042f87
10064744:	mov    ecx,DWORD PTR [edx-0x4]
10064747:	xor    ecx,eax
10064749:	call   0x10042f87
1006474e:	mov    eax,0x1007b500
10064753:	jmp    0x100592c1
10064758:	lea    eax,[ebp-0x10]
1006475b:	jmp    0x10009d00
10064760:	lea    eax,[ebp-0x14]
10064763:	jmp    0x10009d00
10064768:	lea    eax,[ebp-0x18]
1006476b:	jmp    0x10009d00
10064770:	mov    edx,DWORD PTR [esp+0x8]
10064774:	lea    eax,[edx+0xc]
10064777:	mov    ecx,DWORD PTR [edx-0x20]
1006477a:	xor    ecx,eax
1006477c:	call   0x10042f87
10064781:	mov    eax,0x1007b53c
10064786:	jmp    0x100592c1
1006478b:	lea    eax,[ebp-0x14]
1006478e:	jmp    0x10009928
10064793:	lea    eax,[ebp-0x5c]
10064796:	push   eax
10064797:	call   0x10009ffa
1006479c:	ret    
1006479d:	mov    eax,DWORD PTR [ebp-0x18]
100647a0:	and    eax,0x1
100647a3:	je     0x100647b5
100647a9:	and    DWORD PTR [ebp-0x18],0xfffffffe
100647ad:	mov    eax,DWORD PTR [ebp+0xc]
100647b0:	jmp    0x10009928
100647b5:	ret    
100647b6:	mov    edx,DWORD PTR [esp+0x8]
100647ba:	lea    eax,[edx+0xc]
100647bd:	mov    ecx,DWORD PTR [edx-0x60]
100647c0:	xor    ecx,eax
100647c2:	call   0x10042f87
100647c7:	mov    eax,0x1007b578
100647cc:	jmp    0x100592c1
100647d1:	lea    ecx,[ebp-0x64]
100647d4:	jmp    0x10012ee9
100647d9:	lea    ecx,[ebp-0x48]
100647dc:	jmp    0x10012ee9
100647e1:	lea    ecx,[ebp-0x80]
100647e4:	jmp    0x10012ee9
100647e9:	lea    ecx,[ebp-0x2c]
100647ec:	jmp    0x10012ee9
100647f1:	lea    esi,[ebp-0x98]
100647f7:	jmp    0x1000c9e8
100647fc:	mov    edx,DWORD PTR [esp+0x8]
10064800:	lea    eax,[edx-0x9c]
10064806:	mov    ecx,DWORD PTR [edx-0xa0]
1006480c:	xor    ecx,eax
1006480e:	call   0x10042f87
10064813:	mov    eax,0x1007b5c4
10064818:	jmp    0x100592c1
1006481d:	lea    eax,[ebp+0xc]
10064820:	jmp    0x10009928
10064825:	mov    eax,DWORD PTR [ebp-0x10]
10064828:	and    eax,0x1
1006482b:	je     0x1006483d
10064831:	and    DWORD PTR [ebp-0x10],0xfffffffe
10064835:	mov    eax,DWORD PTR [ebp+0x8]
10064838:	jmp    0x10009928
1006483d:	ret    
1006483e:	lea    eax,[ebp+0x10]
10064841:	jmp    0x10009f0b
10064846:	mov    edx,DWORD PTR [esp+0x8]
1006484a:	lea    eax,[edx+0xc]
1006484d:	mov    ecx,DWORD PTR [edx-0x14]
10064850:	xor    ecx,eax
10064852:	call   0x10042f87
10064857:	mov    eax,0x1007b600
1006485c:	jmp    0x100592c1
10064861:	lea    eax,[ebp-0x14]
10064864:	jmp    0x10009d4e
10064869:	lea    eax,[ebp-0x18]
1006486c:	jmp    0x10009d4e
10064871:	lea    eax,[ebp-0x14]
10064874:	jmp    0x10009d4e
10064879:	mov    edx,DWORD PTR [esp+0x8]
1006487d:	lea    eax,[edx+0xc]
10064880:	mov    ecx,DWORD PTR [edx-0x20]
10064883:	xor    ecx,eax
10064885:	call   0x10042f87
1006488a:	mov    eax,0x1007b63c
1006488f:	jmp    0x100592c1
10064894:	lea    eax,[ebp+0x10]
10064897:	jmp    0x10009f1a
1006489c:	lea    eax,[ebp-0x1c]
1006489f:	jmp    0x100260c6
100648a4:	lea    eax,[ebp+0x8]
100648a7:	jmp    0x10009f0b
100648ac:	mov    edx,DWORD PTR [esp+0x8]
100648b0:	lea    eax,[edx+0xc]
100648b3:	mov    ecx,DWORD PTR [edx-0x20]
100648b6:	xor    ecx,eax
100648b8:	call   0x10042f87
100648bd:	mov    eax,0x1007b6ac
100648c2:	jmp    0x100592c1
100648c7:	lea    eax,[ebp-0x14]
100648ca:	jmp    0x1000cff6
100648cf:	lea    esi,[ebp-0x10]
100648d2:	jmp    0x1000aa41
100648d7:	lea    eax,[ebp-0x1c]
100648da:	jmp    0x10009928
100648df:	mov    eax,DWORD PTR [ebp-0x18]
100648e2:	and    eax,0x1
100648e5:	je     0x100648f7
100648eb:	and    DWORD PTR [ebp-0x18],0xfffffffe
100648ef:	mov    eax,DWORD PTR [ebp+0x8]
100648f2:	jmp    0x10009928
100648f7:	ret    
100648f8:	mov    edx,DWORD PTR [esp+0x8]
100648fc:	lea    eax,[edx+0xc]
100648ff:	mov    ecx,DWORD PTR [edx-0x20]
10064902:	xor    ecx,eax
10064904:	call   0x10042f87
10064909:	mov    eax,0x1007b6f0
1006490e:	jmp    0x100592c1
10064913:	lea    eax,[ebp-0x10]
10064916:	jmp    0x10009928
1006491b:	lea    ecx,[ebp-0x38]
1006491e:	jmp    0x10012ee9
10064923:	mov    edx,DWORD PTR [esp+0x8]
10064927:	lea    eax,[edx+0xc]
1006492a:	mov    ecx,DWORD PTR [edx-0x3c]
1006492d:	xor    ecx,eax
1006492f:	call   0x10042f87
10064934:	mov    eax,0x1007b724
10064939:	jmp    0x100592c1
1006493e:	jmp    0x100379d0
10064943:	lea    eax,[ebp-0x14]
10064946:	jmp    0x10034de0
1006494b:	lea    ecx,[ebp+0x70]
1006494e:	jmp    0x10012ee9
10064953:	lea    ecx,[ebp-0x5c]
10064956:	jmp    0x10012ee9
1006495b:	lea    ecx,[ebp-0x94]
10064961:	jmp    0x10012ee9
10064966:	lea    ecx,[ebp+0x1c]
10064969:	jmp    0x10012ee9
1006496e:	lea    ecx,[ebp+0x0]
10064971:	jmp    0x10012ee9
10064976:	lea    ecx,[ebp+0x38]
10064979:	jmp    0x10012ee9
1006497e:	lea    ecx,[ebp-0x78]
10064981:	jmp    0x10012ee9
10064986:	lea    ecx,[ebp-0x94]
1006498c:	jmp    0x10012ee9
10064991:	lea    ecx,[ebp-0x5c]
10064994:	jmp    0x10012ee9
10064999:	lea    ecx,[ebp-0x94]
1006499f:	jmp    0x10012ee9
100649a4:	lea    ecx,[ebp-0x5c]
100649a7:	jmp    0x10012ee9
100649ac:	lea    ecx,[ebp-0x78]
100649af:	jmp    0x10012ee9
100649b4:	lea    eax,[ebp-0x14]
100649b7:	jmp    0x10002087
100649bc:	lea    esi,[ebp-0x40]
100649bf:	jmp    0x1000465b
100649c4:	lea    ecx,[ebp-0x5c]
100649c7:	jmp    0x10012ee9
100649cc:	lea    ecx,[ebp-0x78]
100649cf:	jmp    0x10012ee9
100649d4:	lea    ecx,[ebp-0xb0]
100649da:	jmp    0x10012ee9
100649df:	lea    ecx,[ebp-0x94]
100649e5:	jmp    0x10012ee9
100649ea:	lea    ecx,[ebp-0x5c]
100649ed:	jmp    0x10012ee9
100649f2:	lea    ecx,[ebp-0x78]
100649f5:	jmp    0x10012ee9
100649fa:	lea    eax,[ebp-0x14]
100649fd:	jmp    0x10002087
10064a02:	lea    ecx,[ebp-0x78]
10064a05:	jmp    0x10012ee9
10064a0a:	lea    ecx,[ebp-0xb0]
10064a10:	jmp    0x10012ee9
10064a15:	lea    ecx,[ebp+0x54]
10064a18:	jmp    0x10012ee9
10064a1d:	lea    ecx,[ebp-0x94]
10064a23:	jmp    0x10012ee9
10064a28:	lea    eax,[ebp-0x1c]
10064a2b:	jmp    0x10009928
10064a30:	lea    ecx,[ebp-0xb0]
10064a36:	jmp    0x10012ee9
10064a3b:	lea    ecx,[ebp-0x78]
10064a3e:	jmp    0x10012ee9
10064a43:	lea    ecx,[ebp-0x5c]
10064a46:	jmp    0x10012ee9
10064a4b:	lea    eax,[ebp-0x14]
10064a4e:	jmp    0x10004296
10064a53:	mov    edx,DWORD PTR [esp+0x8]
10064a57:	lea    eax,[edx+0xc]
10064a5a:	mov    ecx,DWORD PTR [edx-0xb4]
10064a60:	xor    ecx,eax
10064a62:	call   0x10042f87
10064a67:	mov    ecx,DWORD PTR [edx+0x98]
10064a6d:	xor    ecx,eax
10064a6f:	call   0x10042f87
10064a74:	mov    eax,0x1007b894
10064a79:	jmp    0x100592c1
10064a7e:	lea    esi,[ebp-0x1c]
10064a81:	jmp    0x1002bd62
10064a86:	lea    eax,[ebp-0x20]
10064a89:	jmp    0x1002335a
10064a8e:	lea    ecx,[ebp+0xa8]
10064a94:	jmp    0x10012ee9
10064a99:	lea    ecx,[ebp+0x8c]
10064a9f:	jmp    0x10012ee9
10064aa4:	lea    eax,[ebp-0x74]
10064aa7:	jmp    0x1001975a
10064aac:	lea    ecx,[ebp-0xb0]
10064ab2:	jmp    0x10012ee9
10064ab7:	lea    ecx,[ebp+0x70]
10064aba:	jmp    0x10012ee9
10064abf:	lea    ecx,[ebp+0x54]
10064ac2:	jmp    0x10012ee9
10064ac7:	lea    ecx,[ebp+0x54]
10064aca:	jmp    0x10012ee9
10064acf:	lea    eax,[ebp-0x28]
10064ad2:	jmp    0x10002087
10064ad7:	lea    ecx,[ebp-0xb0]
10064add:	jmp    0x10012ee9
10064ae2:	lea    ecx,[ebp-0x120]
10064ae8:	jmp    0x10012ee9
10064aed:	lea    ecx,[ebp-0x104]
10064af3:	jmp    0x10012ee9
10064af8:	lea    ecx,[ebp-0x13c]
10064afe:	jmp    0x10012ee9
10064b03:	lea    ecx,[ebp-0x174]
10064b09:	jmp    0x10012ee9
10064b0e:	lea    ecx,[ebp-0xe8]
10064b14:	jmp    0x10012ee9
10064b19:	lea    ecx,[ebp-0x190]
10064b1f:	jmp    0x10012ee9
10064b24:	lea    eax,[ebp-0x54]
10064b27:	jmp    0x10009928
10064b2c:	lea    ecx,[ebp+0x70]
10064b2f:	jmp    0x10012ee9
10064b34:	lea    eax,[ebp-0x24]
10064b37:	jmp    0x1002335a
10064b3c:	lea    ecx,[ebp-0x158]
10064b42:	jmp    0x10012ee9
10064b47:	lea    edi,[ebp-0x5c]
10064b4a:	jmp    0x100024f8
10064b4f:	lea    ecx,[ebp-0xcc]
10064b55:	jmp    0x10012ee9
10064b5a:	lea    edi,[ebp-0x48]
10064b5d:	jmp    0x100024f8
10064b62:	lea    ecx,[ebp+0x1c]
10064b65:	jmp    0x10012ee9
10064b6a:	lea    ecx,[ebp+0x54]
10064b6d:	jmp    0x10012ee9
10064b72:	lea    edi,[ebp-0x60]
10064b75:	jmp    0x100024f8
10064b7a:	lea    ecx,[ebp-0xcc]
10064b80:	jmp    0x10012ee9
10064b85:	lea    edi,[ebp-0x44]
10064b88:	jmp    0x100024f8
10064b8d:	lea    ecx,[ebp+0x0]
10064b90:	jmp    0x10012ee9
10064b95:	lea    edi,[ebp-0x4c]
10064b98:	jmp    0x100024f8
10064b9d:	lea    ecx,[ebp+0x38]
10064ba0:	jmp    0x10012ee9
10064ba5:	lea    eax,[ebp-0x2c]
10064ba8:	jmp    0x1002335a
10064bad:	lea    ecx,[ebp-0x94]
10064bb3:	jmp    0x1001b753
10064bb8:	lea    ecx,[ebp-0x78]
10064bbb:	jmp    0x1001b753
10064bc0:	lea    eax,[ebp-0x2c]
10064bc3:	jmp    0x10002087
10064bc8:	mov    edx,DWORD PTR [esp+0x8]
10064bcc:	lea    eax,[edx+0xc]
10064bcf:	mov    ecx,DWORD PTR [edx-0x194]
10064bd5:	xor    ecx,eax
10064bd7:	call   0x10042f87
10064bdc:	mov    ecx,DWORD PTR [edx+0xd0]
10064be2:	xor    ecx,eax
10064be4:	call   0x10042f87
10064be9:	mov    eax,0x1007ba64
10064bee:	jmp    0x100592c1
10064bf3:	lea    ecx,[ebp-0xb8]
10064bf9:	jmp    0x10012ee9
10064bfe:	lea    ecx,[ebp-0x9c]
10064c04:	jmp    0x10012ee9
10064c09:	lea    ecx,[ebp-0xf0]
10064c0f:	jmp    0x10012ee9
10064c14:	lea    ecx,[ebp-0xf0]
10064c1a:	jmp    0x10012ee9
10064c1f:	lea    ecx,[ebp-0xf0]
10064c25:	jmp    0x10012ee9
10064c2a:	lea    ecx,[ebp-0xf0]
10064c30:	jmp    0x10012ee9
10064c35:	lea    ecx,[ebp-0xf0]
10064c3b:	jmp    0x10012ee9
10064c40:	lea    ecx,[ebp-0xf0]
10064c46:	jmp    0x10012ee9
10064c4b:	lea    ecx,[ebp-0xf0]
10064c51:	jmp    0x10012ee9
10064c56:	lea    ecx,[ebp-0x144]
10064c5c:	jmp    0x10012ee9
10064c61:	lea    eax,[ebp-0x128]
10064c67:	jmp    0x10009928
10064c6c:	lea    ecx,[ebp-0x124]
10064c72:	jmp    0x10012ee9
10064c77:	lea    ecx,[ebp-0x124]
10064c7d:	jmp    0x10012ee9
10064c82:	lea    ecx,[ebp-0x124]
10064c88:	jmp    0x10012ee9
10064c8d:	mov    edx,DWORD PTR [esp+0x8]
10064c91:	lea    eax,[edx+0xc]
10064c94:	mov    ecx,DWORD PTR [edx-0x148]
10064c9a:	xor    ecx,eax
10064c9c:	call   0x10042f87
10064ca1:	mov    ecx,DWORD PTR [edx-0x8]
10064ca4:	xor    ecx,eax
10064ca6:	call   0x10042f87
10064cab:	mov    eax,0x1007bb3c
10064cb0:	jmp    0x100592c1
10064cb5:	lea    ecx,[ebp+0xb0]
10064cbb:	jmp    0x10012ee9
10064cc0:	lea    ecx,[ebp-0x48]
10064cc3:	jmp    0x10012ee9
10064cc8:	lea    eax,[ebp-0x1c]
10064ccb:	jmp    0x10009928
10064cd0:	lea    ecx,[ebp+0x94]
10064cd6:	jmp    0x10012ee9
10064cdb:	lea    edi,[ebp-0x14]
10064cde:	jmp    0x100024f8
10064ce3:	lea    edi,[ebp-0x14]
10064ce6:	jmp    0x100024f8
10064ceb:	lea    esi,[ebp+0x0]
10064cee:	jmp    0x1000bd15
10064cf3:	lea    ecx,[ebp+0xb0]
10064cf9:	jmp    0x10012ee9
10064cfe:	lea    ecx,[ebp+0x94]
10064d04:	jmp    0x10012ee9
10064d09:	lea    eax,[ebp-0x1c]
10064d0c:	jmp    0x10009928
10064d11:	lea    ecx,[ebp+0xb0]
10064d17:	jmp    0x10012ee9
10064d1c:	lea    edi,[ebp-0x18]
10064d1f:	jmp    0x100024f8
10064d24:	lea    edi,[ebp-0x18]
10064d27:	jmp    0x100024f8
10064d2c:	mov    edx,DWORD PTR [esp+0x8]
10064d30:	lea    eax,[edx+0xc]
10064d33:	mov    ecx,DWORD PTR [edx-0x4c]
10064d36:	xor    ecx,eax
10064d38:	call   0x10042f87
10064d3d:	mov    ecx,DWORD PTR [edx+0xd8]
10064d43:	xor    ecx,eax
10064d45:	call   0x10042f87
10064d4a:	mov    eax,0x1007bc0c
10064d4f:	jmp    0x100592c1
10064d54:	lea    eax,[ebp-0x40]
10064d57:	jmp    0x1001b309
10064d5c:	lea    ecx,[ebp-0x30]
10064d5f:	jmp    0x10012ee9
10064d64:	lea    ecx,[ebp-0x78]
10064d67:	jmp    0x10012ee9
10064d6c:	lea    ecx,[ebp-0x5c]
10064d6f:	jmp    0x10012ee9
10064d74:	lea    eax,[ebp-0x34]
10064d77:	jmp    0x10009928
10064d7c:	mov    edx,DWORD PTR [esp+0x8]
10064d80:	lea    eax,[edx+0xc]
10064d83:	mov    ecx,DWORD PTR [edx-0x80]
10064d86:	xor    ecx,eax
10064d88:	call   0x10042f87
10064d8d:	mov    ecx,DWORD PTR [edx-0x8]
10064d90:	xor    ecx,eax
10064d92:	call   0x10042f87
10064d97:	mov    eax,0x1007bc9c
10064d9c:	jmp    0x100592c1
10064da1:	lea    eax,[ebp-0x18]
10064da4:	jmp    0x10004296
10064da9:	mov    edx,DWORD PTR [esp+0x8]
10064dad:	lea    eax,[edx+0xc]
10064db0:	mov    ecx,DWORD PTR [edx-0x1c]
10064db3:	xor    ecx,eax
10064db5:	call   0x10042f87
10064dba:	mov    eax,0x1007bcfc
10064dbf:	jmp    0x100592c1
10064dc4:	lea    eax,[ebp-0x14]
10064dc7:	jmp    0x1002335a
10064dcc:	lea    esi,[ebp-0x1c]
10064dcf:	jmp    0x1002bd62
10064dd4:	mov    edx,DWORD PTR [esp+0x8]
10064dd8:	lea    eax,[edx+0xc]
10064ddb:	mov    ecx,DWORD PTR [edx-0x20]
10064dde:	xor    ecx,eax
10064de0:	call   0x10042f87
10064de5:	mov    eax,0x1007bd64
10064dea:	jmp    0x100592c1
10064def:	lea    eax,[ebp-0x14]
10064df2:	jmp    0x1002335a
10064df7:	lea    esi,[ebp-0x1c]
10064dfa:	jmp    0x1002bd62
10064dff:	mov    edx,DWORD PTR [esp+0x8]
10064e03:	lea    eax,[edx+0xc]
10064e06:	mov    ecx,DWORD PTR [edx-0x20]
10064e09:	xor    ecx,eax
10064e0b:	call   0x10042f87
10064e10:	mov    eax,0x1007bdcc
10064e15:	jmp    0x100592c1
10064e1a:	lea    eax,[ebp-0x34]
10064e1d:	jmp    0x10024d81
10064e22:	lea    eax,[ebp-0x2c]
10064e25:	jmp    0x1000dc4f
10064e2a:	push   DWORD PTR [ebp-0x40]
10064e2d:	call   0x10042f82
10064e32:	pop    ecx
10064e33:	ret    
10064e34:	lea    eax,[ebp-0x40]
10064e37:	jmp    0x10009f1a
10064e3c:	lea    eax,[ebp-0x3c]
10064e3f:	jmp    0x10009d4e
10064e44:	lea    eax,[ebp-0x38]
10064e47:	jmp    0x10009d4e
10064e4c:	mov    edx,DWORD PTR [esp+0x8]
10064e50:	lea    eax,[edx-0x54]
10064e53:	mov    ecx,DWORD PTR [edx-0x58]
10064e56:	xor    ecx,eax
10064e58:	call   0x10042f87
10064e5d:	mov    eax,0x1007be20
10064e62:	jmp    0x100592c1
10064e67:	lea    eax,[ebp-0x14]
10064e6a:	jmp    0x10009d4e
10064e6f:	mov    edx,DWORD PTR [esp+0x8]
10064e73:	lea    eax,[edx+0xc]
10064e76:	mov    ecx,DWORD PTR [edx-0x18]
10064e79:	xor    ecx,eax
10064e7b:	call   0x10042f87
10064e80:	mov    eax,0x1007be80
10064e85:	jmp    0x100592c1
10064e8a:	lea    eax,[ebp+0x8]
10064e8d:	jmp    0x1001b1ff
10064e92:	lea    eax,[ebp-0x10]
10064e95:	jmp    0x10034de0
10064e9a:	lea    ecx,[ebp-0x30]
10064e9d:	jmp    0x10012ee9
10064ea2:	mov    edx,DWORD PTR [esp+0x8]
10064ea6:	lea    eax,[edx+0xc]
10064ea9:	mov    ecx,DWORD PTR [edx-0x38]
10064eac:	xor    ecx,eax
10064eae:	call   0x10042f87
10064eb3:	mov    eax,0x1007bebc
10064eb8:	jmp    0x100592c1
10064ebd:	lea    ecx,[ebp-0x30]
10064ec0:	jmp    0x10012ee9
10064ec5:	lea    eax,[ebp-0x54]
10064ec8:	jmp    0x10004695
10064ecd:	lea    ecx,[ebp-0x4c]
10064ed0:	jmp    0x10012ee9
10064ed5:	lea    eax,[ebp-0x50]
10064ed8:	jmp    0x10034de0
10064edd:	push   DWORD PTR [ebp-0x58]
10064ee0:	call   0x10042f82
10064ee5:	pop    ecx
10064ee6:	ret    
10064ee7:	lea    esi,[ebp-0x6c]
10064eea:	jmp    0x1002b424
10064eef:	lea    eax,[ebp-0x64]
10064ef2:	jmp    0x10002087
10064ef7:	push   DWORD PTR [ebp-0x50]
10064efa:	call   0x10042f82
10064eff:	pop    ecx
10064f00:	ret    
10064f01:	lea    eax,[ebp-0x78]
10064f04:	jmp    0x1002daf4
10064f09:	lea    esi,[ebp-0x50]
10064f0c:	jmp    0x100046ab
10064f11:	lea    esi,[ebp-0x60]
10064f14:	jmp    0x100046ab
10064f19:	mov    edx,DWORD PTR [esp+0x8]
10064f1d:	lea    eax,[edx+0xc]
10064f20:	mov    ecx,DWORD PTR [edx-0x7c]
10064f23:	xor    ecx,eax
10064f25:	call   0x10042f87
10064f2a:	mov    ecx,DWORD PTR [edx-0x8]
10064f2d:	xor    ecx,eax
10064f2f:	call   0x10042f87
10064f34:	mov    eax,0x1007bf7c
10064f39:	jmp    0x100592c1
10064f3e:	lea    ecx,[ebp-0xbc]
10064f44:	jmp    0x10012ee9
10064f49:	lea    ecx,[ebp-0x68]
10064f4c:	jmp    0x10012ee9
10064f51:	lea    ecx,[ebp-0x30]
10064f54:	jmp    0x10012ee9
10064f59:	lea    ecx,[ebp-0xa0]
10064f5f:	jmp    0x10012ee9
10064f64:	lea    ecx,[ebp-0x84]
10064f6a:	jmp    0x10012ee9
10064f6f:	lea    ecx,[ebp-0x4c]
10064f72:	jmp    0x10012ee9
10064f77:	lea    ecx,[ebp-0xf4]
10064f7d:	jmp    0x10012ee9
10064f82:	lea    ecx,[ebp-0x114]
10064f88:	jmp    0x10012ee9
10064f8d:	lea    ecx,[ebp-0xa0]
10064f93:	jmp    0x10012ee9
10064f98:	lea    ecx,[ebp-0x4c]
10064f9b:	jmp    0x10012ee9
10064fa0:	lea    ecx,[ebp-0x84]
10064fa6:	jmp    0x10012ee9
10064fab:	lea    ecx,[ebp-0x114]
10064fb1:	jmp    0x10012ee9
10064fb6:	lea    ecx,[ebp-0xf4]
10064fbc:	jmp    0x10012ee9
10064fc1:	lea    ecx,[ebp-0xd8]
10064fc7:	jmp    0x10012ee9
10064fcc:	push   DWORD PTR [ebp-0x118]
10064fd2:	call   0x10042f82
10064fd7:	pop    ecx
10064fd8:	ret    
10064fd9:	lea    ecx,[ebp-0x114]
10064fdf:	jmp    0x10012ee9
10064fe4:	lea    ecx,[ebp-0xa0]
10064fea:	jmp    0x10012ee9
10064fef:	lea    ecx,[ebp-0xf4]
10064ff5:	jmp    0x10012ee9
10064ffa:	lea    ecx,[ebp-0x114]
10065000:	jmp    0x10012ee9
10065005:	lea    ecx,[ebp-0x114]
1006500b:	jmp    0x10012ee9
10065010:	lea    ecx,[ebp-0xa0]
10065016:	jmp    0x10012ee9
1006501b:	lea    ecx,[ebp-0xf4]
10065021:	jmp    0x10012ee9
10065026:	lea    ecx,[ebp-0x114]
1006502c:	jmp    0x10012ee9
10065031:	lea    ecx,[ebp-0xf4]
10065037:	jmp    0x10012ee9
1006503c:	lea    ecx,[ebp-0x114]
10065042:	jmp    0x10012ee9
10065047:	lea    ecx,[ebp-0x114]
1006504d:	jmp    0x10012ee9
10065052:	lea    ecx,[ebp-0x114]
10065058:	jmp    0x10012ee9
1006505d:	mov    edx,DWORD PTR [esp+0x8]
10065061:	lea    eax,[edx-0x12c]
10065067:	mov    ecx,DWORD PTR [edx-0x130]
1006506d:	xor    ecx,eax
1006506f:	call   0x10042f87
10065074:	add    eax,0xc
10065077:	mov    ecx,DWORD PTR [edx-0x8]
1006507a:	xor    ecx,eax
1006507c:	call   0x10042f87
10065081:	mov    eax,0x1007c080
10065086:	jmp    0x100592c1
1006508b:	lea    ecx,[ebp+0x88]
10065091:	jmp    0x10012ee9
10065096:	lea    eax,[ebp-0x1c]
10065099:	jmp    0x10004296
1006509e:	lea    esi,[ebp+0x0]
100650a1:	jmp    0x10003423
100650a6:	mov    edx,DWORD PTR [esp+0x8]
100650aa:	lea    eax,[edx+0xc]
100650ad:	mov    ecx,DWORD PTR [edx-0x34]
100650b0:	xor    ecx,eax
100650b2:	call   0x10042f87
100650b7:	mov    ecx,DWORD PTR [edx+0xb0]
100650bd:	xor    ecx,eax
100650bf:	call   0x10042f87
100650c4:	mov    eax,0x1007c0f0
100650c9:	jmp    0x100592c1
100650ce:	jmp    0x100379d0
100650d3:	lea    ecx,[ebp-0x14]
100650d6:	jmp    0x10015efd
100650db:	mov    edx,DWORD PTR [esp+0x8]
100650df:	lea    eax,[edx+0xc]
100650e2:	mov    ecx,DWORD PTR [edx-0x18]
100650e5:	xor    ecx,eax
100650e7:	call   0x10042f87
100650ec:	mov    eax,0x1007c158
100650f1:	jmp    0x100592c1
100650f6:	lea    eax,[ebp-0x2c]
100650f9:	jmp    0x1000dc4f
100650fe:	push   DWORD PTR [ebp-0x38]
10065101:	call   0x10042f82
10065106:	pop    ecx
10065107:	ret    
10065108:	lea    eax,[ebp-0x34]
1006510b:	jmp    0x10009f0b
10065110:	lea    eax,[ebp-0x40]
10065113:	jmp    0x10009d4e
10065118:	lea    eax,[ebp-0x30]
1006511b:	jmp    0x10039f30
10065120:	mov    edx,DWORD PTR [esp+0x8]
10065124:	lea    eax,[edx-0x4c]
10065127:	mov    ecx,DWORD PTR [edx-0x50]
1006512a:	xor    ecx,eax
1006512c:	call   0x10042f87
10065131:	mov    eax,0x1007c1a4
10065136:	jmp    0x100592c1
1006513b:	jmp    0x100379d0
10065140:	lea    ecx,[ebp-0x14]
10065143:	jmp    0x10015efd
10065148:	mov    edx,DWORD PTR [esp+0x8]
1006514c:	lea    eax,[edx+0xc]
1006514f:	mov    ecx,DWORD PTR [edx-0x18]
10065152:	xor    ecx,eax
10065154:	call   0x10042f87
10065159:	mov    eax,0x1007c20c
1006515e:	jmp    0x100592c1
10065163:	lea    ecx,[ebp-0xa88]
10065169:	jmp    0x10015efd
1006516e:	push   0x10015efd
10065173:	push   0x40
10065175:	push   0x4
10065177:	lea    eax,[ebp-0x210]
1006517d:	push   eax
1006517e:	call   0x100431e9
10065183:	ret    
10065184:	push   0x10015efd
10065189:	push   0x40
1006518b:	push   0x4
1006518d:	lea    eax,[ebp-0x310]
10065193:	push   eax
10065194:	call   0x100431e9
10065199:	ret    
1006519a:	push   0x10015efd
1006519f:	push   0x40
100651a1:	push   0x4
100651a3:	lea    eax,[ebp-0x110]
100651a9:	push   eax
100651aa:	call   0x100431e9
100651af:	ret    
100651b0:	lea    ecx,[ebp-0xa8c]
100651b6:	jmp    0x10015efd
100651bb:	mov    edx,DWORD PTR [esp+0x8]
100651bf:	lea    eax,[edx-0xa94]
100651c5:	mov    ecx,DWORD PTR [edx-0xa98]
100651cb:	xor    ecx,eax
100651cd:	call   0x10042f87
100651d2:	mov    eax,0x1007c258
100651d7:	jmp    0x100592c1
100651dc:	lea    ecx,[ebp+0xc]
100651df:	jmp    0x10015efd
100651e4:	mov    edx,DWORD PTR [esp+0x8]
100651e8:	lea    eax,[edx+0xc]
100651eb:	mov    ecx,DWORD PTR [edx-0x14]
100651ee:	xor    ecx,eax
100651f0:	call   0x10042f87
100651f5:	mov    eax,0x1007c284
100651fa:	jmp    0x100592c1
100651ff:	mov    eax,0x10080f30
10065204:	jmp    0x1001b1ff
10065209:	mov    edx,DWORD PTR [esp+0x8]
1006520d:	lea    eax,[edx+0xc]
10065210:	mov    ecx,DWORD PTR [edx-0x10]
10065213:	xor    ecx,eax
10065215:	call   0x10042f87
1006521a:	mov    eax,0x1007c2cc
1006521f:	jmp    0x100592c1
10065224:	mov    esi,0x10080da4
10065229:	jmp    0x100046ab
1006522e:	mov    esi,0x10080da8
10065233:	jmp    0x100046ab
10065238:	mov    edx,DWORD PTR [esp+0x8]
1006523c:	lea    eax,[edx+0xc]
1006523f:	mov    ecx,DWORD PTR [edx-0x10]
10065242:	xor    ecx,eax
10065244:	call   0x10042f87
10065249:	mov    eax,0x1007c300
1006524e:	jmp    0x100592c1
10065253:	int3   
10065254:	int3   
10065255:	int3   
10065256:	int3   
10065257:	int3   
10065258:	int3   
10065259:	int3   
1006525a:	int3   
1006525b:	int3   
1006525c:	int3   
1006525d:	int3   
1006525e:	int3   
1006525f:	int3   
10065260:	push   0x32
10065262:	push   0xa
10065264:	push   0x10080d54
10065269:	call   0x100199e4
1006526e:	push   0x10065800
10065273:	call   0x10043364
10065278:	pop    ecx
10065279:	ret    
1006527a:	xor    eax,eax
1006527c:	push   eax
1006527d:	push   eax
1006527e:	push   eax
1006527f:	call   DWORD PTR ds:0x10066074
10065285:	mov    ds:0x10080d78,eax
1006528a:	ret    
1006528b:	push   0x1006580b
10065290:	call   0x10043364
10065295:	pop    ecx
10065296:	ret    
10065297:	push   0x6abc43f6
1006529c:	push   0x1006d040
100652a1:	call   0x100042bd
100652a6:	push   eax
100652a7:	push   0xd
100652a9:	push   0x1006d06c
100652ae:	call   0x100042cf
100652b3:	add    esp,0x14
100652b6:	mov    ds:0x10080d8c,eax
100652bb:	ret    
100652bc:	push   0x5432c0b6
100652c1:	push   0x12e0de64
100652c6:	push   0x1006d07c
100652cb:	call   0x100042bd
100652d0:	pop    ecx
100652d1:	pop    ecx
100652d2:	push   eax
100652d3:	call   0x100042bd
100652d8:	push   eax
100652d9:	push   0x10
100652db:	push   0x1006d0b0
100652e0:	call   0x100042cf
100652e5:	add    esp,0x14
100652e8:	mov    ds:0x10080d90,eax
100652ed:	ret    
100652ee:	push   0x114c60e
100652f3:	push   0x6af7d20e
100652f8:	push   0x1006d0c4
100652fd:	call   0x100042bd
10065302:	pop    ecx
10065303:	pop    ecx
10065304:	push   eax
10065305:	call   0x100042bd
1006530a:	push   eax
1006530b:	push   0x11
1006530d:	push   0x1006d104
10065312:	call   0x100042cf
10065317:	add    esp,0x14
1006531a:	mov    ds:0x10080d88,eax
1006531f:	ret    
10065320:	push   0x37f7b076
10065325:	push   0x1b4e4dfa
1006532a:	push   0x5f4a96e2
1006532f:	push   0x1006d118
10065334:	call   0x100042bd
10065339:	pop    ecx
1006533a:	pop    ecx
1006533b:	push   eax
1006533c:	call   0x100042bd
10065341:	pop    ecx
10065342:	pop    ecx
10065343:	push   eax
10065344:	call   0x100042bd
10065349:	push   eax
1006534a:	push   0x11
1006534c:	push   0x1006d14c
10065351:	call   0x100042cf
10065356:	add    esp,0x14
10065359:	mov    ds:0x10080d84,eax
1006535e:	ret    
1006535f:	call   0x1000bd51
10065364:	push   0x10065826
10065369:	call   0x10043364
1006536e:	pop    ecx
1006536f:	ret    
10065370:	push   0x6e70fba2
10065375:	push   0x289df6aa
1006537a:	push   0x2d0e0758
1006537f:	push   0x5ca03e44
10065384:	push   0x1006dcc8
10065389:	call   0x100042bd
1006538e:	pop    ecx
1006538f:	pop    ecx
10065390:	push   eax
10065391:	call   0x100042bd
10065396:	pop    ecx
10065397:	pop    ecx
10065398:	push   eax
10065399:	call   0x100042bd
1006539e:	pop    ecx
1006539f:	pop    ecx
100653a0:	push   eax
100653a1:	call   0x100042bd
100653a6:	push   eax
100653a7:	push   0x2
100653a9:	push   0x1006dcf4
100653ae:	call   0x100042cf
100653b3:	add    esp,0x14
100653b6:	mov    ds:0x10081438,eax
100653bb:	ret    
100653bc:	push   0x13e8582a
100653c1:	push   0x7c46bbf6
100653c6:	push   0x1006e1d4
100653cb:	call   0x100042bd
100653d0:	pop    ecx
100653d1:	pop    ecx
100653d2:	push   eax
100653d3:	call   0x100042bd
100653d8:	push   eax
100653d9:	push   0x1
100653db:	push   0x1006d48c
100653e0:	call   0x100042cf
100653e5:	add    esp,0x14
100653e8:	mov    ds:0x1008143c,eax
100653ed:	ret    
100653ee:	push   0x266e3b48
100653f3:	push   0x1006e238
100653f8:	call   0x100042bd
100653fd:	push   eax
100653fe:	push   0x10
10065400:	push   0x1006e260
10065405:	call   0x100042cf
1006540a:	add    esp,0x14
1006540d:	mov    ds:0x10080dc0,eax
10065412:	ret    
10065413:	push   0x1006e274
10065418:	push   0x10
1006541a:	push   0x1006e298
1006541f:	call   0x100042cf
10065424:	add    esp,0xc
10065427:	mov    ds:0x10080dbc,eax
1006542c:	ret    
1006542d:	push   0x59549c1a
10065432:	push   0x29c80fbe
10065437:	push   0x1006e2ac
1006543c:	call   0x100042bd
10065441:	pop    ecx
10065442:	pop    ecx
10065443:	push   eax
10065444:	call   0x100042bd
10065449:	push   eax
1006544a:	push   0x10
1006544c:	push   0x1006e2dc
10065451:	call   0x100042cf
10065456:	add    esp,0x14
10065459:	mov    ds:0x10080db8,eax
1006545e:	ret    
1006545f:	push   edi
10065460:	mov    edi,0x10080dc8
10065465:	call   0x10012b22
1006546a:	push   0x10065884
1006546f:	call   0x10043364
10065474:	pop    ecx
10065475:	pop    edi
10065476:	ret    
10065477:	xor    eax,eax
10065479:	push   eax
1006547a:	push   eax
1006547b:	push   eax
1006547c:	call   DWORD PTR ds:0x10066074
10065482:	mov    ds:0x10080dc4,eax
10065487:	ret    
10065488:	call   0x10012ef3
1006548d:	push   0x10065891
10065492:	call   0x10043364
10065497:	pop    ecx
10065498:	ret    
10065499:	call   0x10018217
1006549e:	mov    ds:0x10080e7c,eax
100654a3:	mov    BYTE PTR [eax+0x15],0x1
100654a7:	mov    eax,ds:0x10080e7c
100654ac:	mov    DWORD PTR [eax+0x4],eax
100654af:	mov    eax,ds:0x10080e7c
100654b4:	mov    DWORD PTR [eax],eax
100654b6:	mov    eax,ds:0x10080e7c
100654bb:	mov    DWORD PTR [eax+0x8],eax
100654be:	and    DWORD PTR ds:0x10080e80,0x0
100654c5:	push   0x10065896
100654ca:	call   0x10043364
100654cf:	pop    ecx
100654d0:	ret    
100654d1:	push   esi
100654d2:	mov    esi,0x10080e98
100654d7:	push   edi
100654d8:	mov    ecx,esi
100654da:	call   0x1001446f
100654df:	xor    eax,eax
100654e1:	mov    edi,0x10080e88
100654e6:	mov    ecx,esi
100654e8:	mov    ds:0x10080e8c,eax
100654ed:	mov    ds:0x10080e94,eax
100654f2:	mov    ds:0x10080e90,eax
100654f7:	mov    DWORD PTR ds:0x10080c04,edi
100654fd:	mov    ds:0x10080eb0,eax
10065502:	call   0x10014483
10065507:	test   eax,eax
10065509:	jge    0x10065514
1006550b:	mov    BYTE PTR ds:0x10080c00,0x1
10065512:	jmp    0x1006551e
10065514:	mov    DWORD PTR ds:0x10080e8c,0x24
1006551e:	push   0x1006589b
10065523:	mov    DWORD PTR ds:0x10080e88,0x1006fc60
1006552d:	mov    DWORD PTR ds:0x10080c18,edi
10065533:	call   0x10043364
10065538:	pop    ecx
10065539:	pop    edi
1006553a:	pop    esi
1006553b:	ret    
1006553c:	xor    eax,eax
1006553e:	push   eax
1006553f:	push   eax
10065540:	push   eax
10065541:	call   DWORD PTR ds:0x10066074
10065547:	mov    ds:0x10080ec8,eax
1006554c:	ret    
1006554d:	push   0x100658af
10065552:	call   0x10043364
10065557:	pop    ecx
10065558:	ret    
10065559:	call   0x100195b8
1006555e:	mov    ds:0x10080ed0,eax
10065563:	mov    BYTE PTR [eax+0x29],0x1
10065567:	mov    eax,ds:0x10080ed0
1006556c:	mov    DWORD PTR [eax+0x4],eax
1006556f:	mov    eax,ds:0x10080ed0
10065574:	mov    DWORD PTR [eax],eax
10065576:	mov    eax,ds:0x10080ed0
1006557b:	mov    DWORD PTR [eax+0x8],eax
1006557e:	and    DWORD PTR ds:0x10080ed4,0x0
10065585:	push   0x100658bc
1006558a:	call   0x10043364
1006558f:	pop    ecx
10065590:	ret    
10065591:	call   0x10019818
10065596:	mov    ds:0x10080edc,eax
1006559b:	xor    eax,eax
1006559d:	push   eax
1006559e:	push   eax
1006559f:	push   eax
100655a0:	mov    ds:0x10080ee0,eax
100655a5:	call   DWORD PTR ds:0x10066074
100655ab:	push   0x100658c6
100655b0:	mov    ds:0x10080ee4,eax
100655b5:	call   0x10043364
100655ba:	pop    ecx
100655bb:	ret    
100655bc:	push   0x32
100655be:	push   0xa
100655c0:	push   0x10080ee8
100655c5:	call   0x100199e4
100655ca:	push   0x100658e6
100655cf:	call   0x10043364
100655d4:	pop    ecx
100655d5:	ret    
100655d6:	push   0xfa
100655db:	push   0x32
100655dd:	push   0x10080f0c
100655e2:	call   0x100199e4
100655e7:	push   0x100658f1
100655ec:	call   0x10043364
100655f1:	pop    ecx
100655f2:	ret    
100655f3:	push   0x0
100655f5:	mov    eax,0x10065209
100655fa:	call   0x10059b25
100655ff:	call   0x1001b388
10065604:	xor    esi,esi
10065606:	mov    ds:0x10080f34,eax
1006560b:	mov    DWORD PTR ds:0x10080f38,esi
10065611:	mov    DWORD PTR [esp+0x18],esi
10065615:	call   0x1001b3a0
1006561a:	push   esi
1006561b:	push   esi
1006561c:	push   esi
1006561d:	mov    ds:0x10080f40,eax
10065622:	mov    DWORD PTR ds:0x10080f44,esi
10065628:	mov    DWORD PTR ds:0x10080f4c,esi
1006562e:	call   DWORD PTR ds:0x10066074
10065634:	push   0x100658fc
10065639:	mov    ds:0x10080f48,eax
1006563e:	call   0x10043364
10065643:	pop    ecx
10065644:	call   0x10059bfd
10065649:	ret    
1006564a:	call   0x10021c07
1006564f:	mov    ds:0x10080f58,eax
10065654:	mov    BYTE PTR [eax+0x21],0x1
10065658:	mov    eax,ds:0x10080f58
1006565d:	mov    DWORD PTR [eax+0x4],eax
10065660:	mov    eax,ds:0x10080f58
10065665:	mov    DWORD PTR [eax],eax
10065667:	mov    eax,ds:0x10080f58
1006566c:	mov    DWORD PTR [eax+0x8],eax
1006566f:	and    DWORD PTR ds:0x10080f5c,0x0
10065676:	push   0x10065912
1006567b:	call   0x10043364
10065680:	pop    ecx
10065681:	ret    
10065682:	xor    eax,eax
10065684:	push   eax
10065685:	push   eax
10065686:	push   eax
10065687:	call   DWORD PTR ds:0x10066074
1006568d:	mov    ds:0x10080f50,eax
10065692:	ret    
10065693:	xor    eax,eax
10065695:	push   eax
10065696:	push   eax
10065697:	push   eax
10065698:	call   DWORD PTR ds:0x10066074
1006569e:	mov    ds:0x10080f60,eax
100656a3:	ret    
100656a4:	xor    eax,eax
100656a6:	push   eax
100656a7:	push   eax
100656a8:	push   eax
100656a9:	push   eax
100656aa:	call   DWORD PTR ds:0x10066130
100656b0:	mov    ds:0x10080f6c,eax
100656b5:	ret    
100656b6:	xor    eax,eax
100656b8:	push   eax
100656b9:	push   eax
100656ba:	push   eax
100656bb:	push   eax
100656bc:	call   DWORD PTR ds:0x10066130
100656c2:	mov    ds:0x10080f64,eax
100656c7:	ret    
100656c8:	xor    eax,eax
100656ca:	push   eax
100656cb:	push   eax
100656cc:	push   eax
100656cd:	push   eax
100656ce:	call   DWORD PTR ds:0x10066130
100656d4:	mov    ds:0x10080f68,eax
100656d9:	ret    
100656da:	call   0x10026e8e
100656df:	and    DWORD PTR ds:0x10080f90,0x0
100656e6:	push   0x1006593e
100656eb:	mov    ds:0x10080f8c,eax
100656f0:	call   0x10043364
100656f5:	pop    ecx
100656f6:	ret    
100656f7:	call   0x10026e8e
100656fc:	and    DWORD PTR ds:0x10080f84,0x0
10065703:	push   0x1006595e
10065708:	mov    ds:0x10080f80,eax
1006570d:	call   0x10043364
10065712:	pop    ecx
10065713:	ret    
10065714:	call   0x10026e8e
10065719:	and    DWORD PTR ds:0x10080f9c,0x0
10065720:	push   0x1006597e
10065725:	mov    ds:0x10080f98,eax
1006572a:	call   0x10043364
1006572f:	pop    ecx
10065730:	ret    
10065731:	call   0x10026e8e
10065736:	and    DWORD PTR ds:0x10080f78,0x0
1006573d:	push   0x1006599e
10065742:	mov    ds:0x10080f74,eax
10065747:	call   0x10043364
1006574c:	pop    ecx
1006574d:	ret    
1006574e:	int3   
1006574f:	int3   
10065750:	push   0x0
10065752:	push   0x0
10065754:	push   0x1
10065756:	push   0x0
10065758:	call   DWORD PTR ds:0x10066130
1006575e:	mov    ds:0x10080fa0,eax
10065763:	ret    
10065764:	int3   
10065765:	int3   
10065766:	int3   
10065767:	int3   
10065768:	int3   
10065769:	int3   
1006576a:	int3   
1006576b:	int3   
1006576c:	int3   
1006576d:	int3   
1006576e:	int3   
1006576f:	int3   
10065770:	push   0x100659c0
10065775:	call   0x10043364
1006577a:	pop    ecx
1006577b:	ret    
1006577c:	int3   
1006577d:	int3   
1006577e:	int3   
1006577f:	int3   
10065780:	push   0x10065a10
10065785:	call   0x10043364
1006578a:	pop    ecx
1006578b:	ret    
1006578c:	mov    ecx,0x10080a00
10065791:	call   0x10056e51
10065796:	push   0x10065a1c
1006579b:	call   0x10043364
100657a0:	pop    ecx
100657a1:	ret    
100657a2:	mov    ecx,0x10080a3c
100657a7:	call   0x10056e2b
100657ac:	push   0x10065a26
100657b1:	call   0x10043364
100657b6:	pop    ecx
100657b7:	ret    
100657b8:	call   DWORD PTR ds:0x100661ac
100657be:	push   0x10065a30
100657c3:	mov    DWORD PTR ds:0x10080a68,0x1006b8f8
100657cd:	mov    ds:0x10080a6c,eax
100657d2:	mov    BYTE PTR ds:0x10080a70,0x0
100657d9:	call   0x10043364
100657de:	pop    ecx
100657df:	ret    
100657e0:	push   0x10080a68
100657e5:	mov    ecx,0x10080a74
100657ea:	call   0x10056fc4
100657ef:	push   0x10065a3a
100657f4:	call   0x10043364
100657f9:	pop    ecx
100657fa:	ret    
100657fb:	int3   
100657fc:	int3   
100657fd:	int3   
100657fe:	int3   
100657ff:	int3   
10065800:	push   0x10080d54
10065805:	call   0x100011f8
1006580a:	ret    
1006580b:	ret    
1006580c:	jmp    0x100052bb
10065811:	jmp    0x10004f68
10065816:	mov    eax,ds:0x10081428
1006581b:	test   eax,eax
1006581d:	je     0x10065825
1006581f:	mov    ecx,DWORD PTR [eax]
10065821:	push   eax
10065822:	call   DWORD PTR [ecx+0x8]
10065825:	ret    
10065826:	push   0x0
10065828:	mov    eax,0x10065238
1006582d:	call   0x10059b25
10065832:	push   0xffffffff
10065834:	mov    DWORD PTR [esp+0x1c],0x1
1006583c:	push   DWORD PTR ds:0x10080da8
10065842:	call   DWORD PTR ds:0x10066084
10065848:	mov    eax,0x10080dac
1006584d:	call   0x1000d2f4
10065852:	mov    eax,ds:0x10080da8
10065857:	test   eax,eax
10065859:	mov    esi,DWORD PTR ds:0x10066070
1006585f:	je     0x10065864
10065861:	push   eax
10065862:	call   esi
10065864:	mov    eax,ds:0x10080da4
10065869:	and    DWORD PTR ds:0x10080da8,0x0
10065870:	test   eax,eax
10065872:	je     0x10065877
10065874:	push   eax
10065875:	call   esi
10065877:	and    DWORD PTR ds:0x10080da4,0x0
1006587e:	call   0x10059bfd
10065883:	ret    
10065884:	push   esi
10065885:	mov    esi,0x10080dc8
1006588a:	call   0x1000bcad
1006588f:	pop    esi
10065890:	ret    
10065891:	jmp    0x10012f6a
10065896:	jmp    0x10017a57
1006589b:	mov    DWORD PTR ds:0x10080e88,0x1006fc60
100658a5:	mov    ecx,0x10080e88
100658aa:	jmp    0x100144dd
100658af:	push   esi
100658b0:	mov    esi,0x10080eb8
100658b5:	call   0x100047e3
100658ba:	pop    esi
100658bb:	ret    
100658bc:	mov    eax,0x10080ecc
100658c1:	jmp    0x100190f7
100658c6:	push   esi
100658c7:	mov    esi,0x10080ed8
100658cc:	call   0x10019771
100658d1:	push   DWORD PTR ds:0x10080edc
100658d7:	call   0x10042f82
100658dc:	and    DWORD PTR ds:0x10080edc,0x0
100658e3:	pop    ecx
100658e4:	pop    esi
100658e5:	ret    
100658e6:	push   0x10080ee8
100658eb:	call   0x100011f8
100658f0:	ret    
100658f1:	push   0x10080f0c
100658f6:	call   0x100011f8
100658fb:	ret    
100658fc:	push   esi
100658fd:	mov    esi,0x10080f3c
10065902:	call   0x1001b2d3
10065907:	mov    eax,0x10080f30
1006590c:	pop    esi
1006590d:	jmp    0x1001b1ff
10065912:	jmp    0x100208d7
10065917:	mov    eax,ds:0x1008142c
1006591c:	test   eax,eax
1006591e:	push   esi
1006591f:	mov    esi,eax
10065921:	je     0x1006593c
10065923:	push   0x10022a57
10065928:	push   0x2
1006592a:	push   0x14
1006592c:	add    eax,0x4
1006592f:	push   eax
10065930:	call   0x100431e9
10065935:	push   esi
10065936:	call   0x10042f82
1006593b:	pop    ecx
1006593c:	pop    esi
1006593d:	ret    
1006593e:	push   esi
1006593f:	mov    esi,0x10080f88
10065944:	call   0x10026f16
10065949:	push   DWORD PTR ds:0x10080f8c
1006594f:	call   0x10042f82
10065954:	and    DWORD PTR ds:0x10080f8c,0x0
1006595b:	pop    ecx
1006595c:	pop    esi
1006595d:	ret    
1006595e:	push   esi
1006595f:	mov    esi,0x10080f7c
10065964:	call   0x10026f16
10065969:	push   DWORD PTR ds:0x10080f80
1006596f:	call   0x10042f82
10065974:	and    DWORD PTR ds:0x10080f80,0x0
1006597b:	pop    ecx
1006597c:	pop    esi
1006597d:	ret    
1006597e:	push   esi
1006597f:	mov    esi,0x10080f94
10065984:	call   0x10026f16
10065989:	push   DWORD PTR ds:0x10080f98
1006598f:	call   0x10042f82
10065994:	and    DWORD PTR ds:0x10080f98,0x0
1006599b:	pop    ecx
1006599c:	pop    esi
1006599d:	ret    
1006599e:	push   esi
1006599f:	mov    esi,0x10080f70
100659a4:	call   0x10026f16
100659a9:	push   DWORD PTR ds:0x10080f74
100659af:	call   0x10042f82
100659b4:	and    DWORD PTR ds:0x10080f74,0x0
100659bb:	pop    ecx
100659bc:	pop    esi
100659bd:	ret    
100659be:	int3   
100659bf:	int3   
100659c0:	cmp    DWORD PTR ds:0x1007f71c,0x10
100659c7:	jb     0x100659d7
100659c9:	mov    eax,ds:0x1007f708
100659ce:	push   eax
100659cf:	call   0x10042f82
100659d4:	add    esp,0x4
100659d7:	xor    eax,eax
100659d9:	mov    DWORD PTR ds:0x1007f71c,0xf
100659e3:	mov    ds:0x1007f718,eax
100659e8:	mov    ds:0x1007f708,al
100659ed:	ret    
100659ee:	mov    DWORD PTR ds:0x1007fa84,0x100665c8
100659f8:	mov    ecx,0x1007fa84
100659fd:	jmp    0x100430c0
10065a02:	int3   
10065a03:	int3   
10065a04:	int3   
10065a05:	int3   
10065a06:	int3   
10065a07:	int3   
10065a08:	int3   
10065a09:	int3   
10065a0a:	int3   
10065a0b:	int3   
10065a0c:	int3   
10065a0d:	int3   
10065a0e:	int3   
10065a0f:	int3   
10065a10:	push   0x1007ef80
10065a15:	call   DWORD PTR ds:0x10066294
10065a1b:	ret    
10065a1c:	mov    ecx,0x10080a00
10065a21:	jmp    0x10056dbf
10065a26:	mov    ecx,0x10080a3c
10065a2b:	jmp    0x10056f00
10065a30:	mov    ecx,0x10080a68
10065a35:	jmp    0x10056f18
10065a3a:	mov    DWORD PTR ds:0x10080a74,0x1006b90c
10065a44:	ret    
