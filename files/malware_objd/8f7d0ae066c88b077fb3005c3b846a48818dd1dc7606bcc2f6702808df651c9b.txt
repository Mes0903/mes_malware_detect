
8f7d0ae066c88b077fb3005c3b846a48818dd1dc7606bcc2f6702808df651c9b.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	call   0x4013e0
  401008:	mov    eax,ds:0x425e4c
  40100d:	push   eax
  40100e:	call   0x401040
  401013:	add    esp,0x4
  401016:	mov    ds:0x425e50,eax
  40101b:	pop    ebp
  40101c:	ret    
  40101d:	int3   
  40101e:	int3   
  40101f:	int3   
  401020:	push   ebp
  401021:	mov    ebp,esp
  401023:	call   0x401000
  401028:	mov    eax,ds:0x425e50
  40102d:	push   eax
  40102e:	call   0x401790
  401033:	add    esp,0x4
  401036:	mov    ds:0x425e54,eax
  40103b:	pop    ebp
  40103c:	ret    
  40103d:	int3   
  40103e:	int3   
  40103f:	int3   
  401040:	push   ebp
  401041:	mov    ebp,esp
  401043:	mov    eax,DWORD PTR [ebp+0x8]
  401046:	mov    eax,DWORD PTR [eax-0x4]
  401049:	pop    ebp
  40104a:	ret    
  40104b:	int3   
  40104c:	int3   
  40104d:	int3   
  40104e:	int3   
  40104f:	int3   
  401050:	push   ebp
  401051:	mov    ebp,esp
  401053:	sub    esp,0x130
  401059:	push   0x12b
  40105e:	lea    eax,[ebp-0x130]
  401064:	push   eax
  401065:	call   DWORD PTR ds:0x424430
  40106b:	movzx  ecx,BYTE PTR [ebp-0x12f]
  401072:	cmp    ecx,0x3a
  401075:	je     0x40107b
  401077:	xor    eax,eax
  401079:	jmp    0x401087
  40107b:	mov    edx,DWORD PTR ds:0x4245cc
  401081:	mov    DWORD PTR ds:0x425e58,edx
  401087:	mov    esp,ebp
  401089:	pop    ebp
  40108a:	ret    
  40108b:	int3   
  40108c:	int3   
  40108d:	int3   
  40108e:	int3   
  40108f:	int3   
  401090:	push   ebp
  401091:	mov    ebp,esp
  401093:	sub    esp,0x2c8
  401099:	push   ebx
  40109a:	push   esi
  40109b:	push   edi
  40109c:	mov    DWORD PTR [ebp-0x28c],0x401830
  4010a6:	mov    DWORD PTR ds:0x425e5c,ebp
  4010ac:	pusha  
  4010ad:	call   0x401050
  4010b2:	mov    DWORD PTR [ebp-0x290],0x0
  4010bc:	mov    DWORD PTR [ebp-0x2a0],0x80000002
  4010c6:	call   0x4016c0
  4010cb:	test   eax,eax
  4010cd:	je     0x401107
  4010cf:	call   0x4015b0
  4010d4:	mov    eax,ds:0x425e4c
  4010d9:	push   eax
  4010da:	call   0x401040
  4010df:	add    esp,0x4
  4010e2:	mov    ds:0x425e50,eax
  4010e7:	mov    ecx,DWORD PTR ds:0x425e50
  4010ed:	push   ecx
  4010ee:	call   0x401790
  4010f3:	add    esp,0x4
  4010f6:	mov    ds:0x425e60,eax
  4010fb:	mov    edx,DWORD PTR ds:0x425e50
  401101:	mov    DWORD PTR [ebp-0x298],edx
  401107:	mov    DWORD PTR [ebp-0x284],0x64
  401111:	mov    DWORD PTR [ebp-0x224],0xc
  40111b:	mov    DWORD PTR [ebp-0x290],0x0
  401125:	mov    DWORD PTR [ebp-0x258],0x0
  40112f:	mov    DWORD PTR [ebp-0x280],0x1
  401139:	mov    DWORD PTR [ebp-0x21c],0x0
  401143:	mov    eax,DWORD PTR [ebp-0x290]
  401149:	cmp    eax,DWORD PTR ds:0x425e50
  40114f:	jae    0x4011db
  401155:	mov    ecx,DWORD PTR [ebp-0x298]
  40115b:	push   ecx
  40115c:	mov    edx,DWORD PTR [ebp-0x284]
  401162:	push   edx
  401163:	call   0x4018d0
  401168:	add    esp,0x8
  40116b:	mov    DWORD PTR [ebp-0x29c],eax
  401171:	mov    eax,DWORD PTR [ebp-0x29c]
  401177:	push   eax
  401178:	mov    ecx,DWORD PTR ds:0x425e4c
  40117e:	add    ecx,DWORD PTR [ebp-0x258]
  401184:	push   ecx
  401185:	mov    edx,DWORD PTR ds:0x425e60
  40118b:	add    edx,DWORD PTR [ebp-0x290]
  401191:	push   edx
  401192:	call   0x401410
  401197:	add    esp,0xc
  40119a:	mov    eax,DWORD PTR [ebp-0x224]
  4011a0:	add    eax,DWORD PTR [ebp-0x284]
  4011a6:	add    eax,DWORD PTR [ebp-0x258]
  4011ac:	mov    DWORD PTR [ebp-0x258],eax
  4011b2:	mov    ecx,DWORD PTR [ebp-0x290]
  4011b8:	add    ecx,DWORD PTR [ebp-0x284]
  4011be:	mov    DWORD PTR [ebp-0x290],ecx
  4011c4:	mov    edx,DWORD PTR [ebp-0x298]
  4011ca:	sub    edx,DWORD PTR [ebp-0x29c]
  4011d0:	mov    DWORD PTR [ebp-0x298],edx
  4011d6:	jmp    0x401143
  4011db:	mov    eax,ds:0x425e50
  4011e0:	push   eax
  4011e1:	mov    ecx,DWORD PTR ds:0x425e60
  4011e7:	push   ecx
  4011e8:	call   0x4019d0
  4011ed:	add    esp,0x8
  4011f0:	mov    DWORD PTR [ebp-0x258],0x0
  4011fa:	mov    DWORD PTR [ebp-0x2bc],0x0
  401204:	mov    edx,DWORD PTR ds:0x425e50
  40120a:	push   edx
  40120b:	push   0x0
  40120d:	mov    eax,ds:0x425e54
  401212:	push   eax
  401213:	call   0x401020
  401218:	add    esp,0xc
  40121b:	mov    ecx,DWORD PTR ds:0x425e50
  401221:	mov    DWORD PTR [ebp-0x2c4],ecx
  401227:	mov    edx,DWORD PTR [ebp-0x2bc]
  40122d:	cmp    edx,DWORD PTR ds:0x425e50
  401233:	jae    0x4012be
  401239:	mov    eax,DWORD PTR [ebp-0x2c4]
  40123f:	push   eax
  401240:	mov    ecx,DWORD PTR [ebp-0x284]
  401246:	push   ecx
  401247:	call   0x4018d0
  40124c:	add    esp,0x8
  40124f:	mov    DWORD PTR [ebp-0x2c8],eax
  401255:	mov    edx,DWORD PTR [ebp-0x2c8]
  40125b:	push   edx
  40125c:	mov    eax,ds:0x425e4c
  401261:	add    eax,DWORD PTR [ebp-0x258]
  401267:	push   eax
  401268:	mov    ecx,DWORD PTR ds:0x425e54
  40126e:	add    ecx,DWORD PTR [ebp-0x2bc]
  401274:	push   ecx
  401275:	call   0x401410
  40127a:	add    esp,0xc
  40127d:	mov    edx,DWORD PTR [ebp-0x224]
  401283:	add    edx,DWORD PTR [ebp-0x284]
  401289:	add    edx,DWORD PTR [ebp-0x258]
  40128f:	mov    DWORD PTR [ebp-0x258],edx
  401295:	mov    eax,DWORD PTR [ebp-0x2bc]
  40129b:	add    eax,DWORD PTR [ebp-0x284]
  4012a1:	mov    DWORD PTR [ebp-0x2bc],eax
  4012a7:	mov    ecx,DWORD PTR [ebp-0x2c4]
  4012ad:	sub    ecx,DWORD PTR [ebp-0x2c8]
  4012b3:	mov    DWORD PTR [ebp-0x2c4],ecx
  4012b9:	jmp    0x401227
  4012be:	mov    edx,DWORD PTR ds:0x425e50
  4012c4:	push   edx
  4012c5:	mov    eax,ds:0x425e54
  4012ca:	push   eax
  4012cb:	call   0x4019d0
  4012d0:	add    esp,0x8
  4012d3:	mov    DWORD PTR [ebp-0x28c],0x401830
  4012dd:	mov    ecx,DWORD PTR ds:0x425e60
  4012e3:	mov    edx,DWORD PTR ds:0x425e54
  4012e9:	mov    DWORD PTR [ecx],edx
  4012eb:	push   0x19000
  4012f0:	call   0x401790
  4012f5:	add    esp,0x4
  4012f8:	mov    ds:0x425e64,eax
  4012fd:	mov    eax,ds:0x425e64
  401302:	add    eax,0x200
  401307:	mov    ds:0x425e68,eax
  40130c:	push   0x17700
  401311:	mov    ecx,DWORD PTR ds:0x425e60
  401317:	push   ecx
  401318:	mov    edx,DWORD PTR ds:0x425e68
  40131e:	push   edx
  40131f:	call   0x401410
  401324:	add    esp,0xc
  401327:	mov    eax,ds:0x425e64
  40132c:	add    eax,0x17590
  401331:	mov    ds:0x425e6c,eax
  401336:	mov    ecx,ecx
  401338:	mov    ecx,ecx
  40133a:	mov    ecx,ecx
  40133c:	popa   
  40133d:	mov    ecx,ecx
  40133f:	mov    ecx,ecx
  401341:	mov    ecx,ecx
  401343:	mov    ecx,ecx
  401345:	push   0x37
  401347:	mov    eax,DWORD PTR [ebp-0x28c]
  40134d:	mov    ecx,ecx
  40134f:	mov    ecx,ecx
  401351:	mov    ecx,esp
  401353:	sub    ecx,0x26
  401356:	mov    edx,0x1e
  40135b:	mov    DWORD PTR [ecx+edx*1+0x8],0x0
  401363:	add    DWORD PTR [ecx+edx*1+0x8],eax
  401367:	ret    
  401368:	xor    eax,eax
  40136a:	pop    edi
  40136b:	pop    esi
  40136c:	pop    ebx
  40136d:	mov    esp,ebp
  40136f:	pop    ebp
  401370:	ret    
  401371:	int3   
  401372:	int3   
  401373:	int3   
  401374:	int3   
  401375:	int3   
  401376:	int3   
  401377:	int3   
  401378:	int3   
  401379:	int3   
  40137a:	int3   
  40137b:	int3   
  40137c:	int3   
  40137d:	int3   
  40137e:	int3   
  40137f:	int3   
  401380:	push   ebp
  401381:	mov    ebp,esp
  401383:	push   ecx
  401384:	mov    DWORD PTR [ebp-0x4],0xc836
  40138b:	call   0x401090
  401390:	mov    esp,ebp
  401392:	pop    ebp
  401393:	ret    
  401394:	int3   
  401395:	int3   
  401396:	int3   
  401397:	int3   
  401398:	int3   
  401399:	int3   
  40139a:	int3   
  40139b:	int3   
  40139c:	int3   
  40139d:	int3   
  40139e:	int3   
  40139f:	int3   
  4013a0:	push   ebp
  4013a1:	mov    ebp,esp
  4013a3:	mov    eax,ds:0x425e70
  4013a8:	sub    eax,0x8
  4013ab:	shr    eax,1
  4013ad:	mov    ds:0x425e70,eax
  4013b2:	pop    ebp
  4013b3:	ret    
  4013b4:	int3   
  4013b5:	int3   
  4013b6:	int3   
  4013b7:	int3   
  4013b8:	int3   
  4013b9:	int3   
  4013ba:	int3   
  4013bb:	int3   
  4013bc:	int3   
  4013bd:	int3   
  4013be:	int3   
  4013bf:	int3   
  4013c0:	push   ebp
  4013c1:	mov    ebp,esp
  4013c3:	pop    ebp
  4013c4:	ret    0x10
  4013c7:	int3   
  4013c8:	int3   
  4013c9:	int3   
  4013ca:	int3   
  4013cb:	int3   
  4013cc:	int3   
  4013cd:	int3   
  4013ce:	int3   
  4013cf:	int3   
  4013d0:	push   ebp
  4013d1:	mov    ebp,esp
  4013d3:	pop    ebp
  4013d4:	ret    0x10
  4013d7:	int3   
  4013d8:	int3   
  4013d9:	int3   
  4013da:	int3   
  4013db:	int3   
  4013dc:	int3   
  4013dd:	int3   
  4013de:	int3   
  4013df:	int3   
  4013e0:	push   ebp
  4013e1:	mov    ebp,esp
  4013e3:	sub    esp,0x8
  4013e6:	mov    DWORD PTR [ebp-0x4],0x4
  4013ed:	mov    eax,DWORD PTR [ebp-0x4]
  4013f0:	add    eax,0x403888
  4013f5:	mov    ds:0x425e4c,eax
  4013fa:	mov    ecx,DWORD PTR ds:0x4247a8
  401400:	mov    DWORD PTR [ebp-0x8],ecx
  401403:	mov    esp,ebp
  401405:	pop    ebp
  401406:	ret    
  401407:	int3   
  401408:	int3   
  401409:	int3   
  40140a:	int3   
  40140b:	int3   
  40140c:	int3   
  40140d:	int3   
  40140e:	int3   
  40140f:	int3   
  401410:	push   ebp
  401411:	mov    ebp,esp
  401413:	sub    esp,0x214
  401419:	push   0x104
  40141e:	lea    eax,[ebp-0x208]
  401424:	push   eax
  401425:	call   DWORD PTR ds:0x425e74
  40142b:	mov    DWORD PTR [ebp-0x210],0x0
  401435:	jmp    0x401446
  401437:	mov    ecx,DWORD PTR [ebp-0x210]
  40143d:	add    ecx,0x1
  401440:	mov    DWORD PTR [ebp-0x210],ecx
  401446:	mov    edx,DWORD PTR [ebp-0x210]
  40144c:	cmp    edx,DWORD PTR [ebp+0x10]
  40144f:	jge    0x40157b
  401455:	cmp    DWORD PTR [ebp-0x210],0x0
  40145c:	jne    0x401515
  401462:	mov    DWORD PTR [ebp-0x214],0x41f018
  40146c:	mov    eax,0x5c
  401471:	mov    ecx,DWORD PTR [ebp-0x214]
  401477:	mov    WORD PTR [ecx],ax
  40147a:	mov    edx,0x73
  40147f:	mov    eax,DWORD PTR [ebp-0x214]
  401485:	mov    WORD PTR [eax+0x2],dx
  401489:	mov    ecx,0x79
  40148e:	mov    edx,DWORD PTR [ebp-0x214]
  401494:	mov    WORD PTR [edx+0x4],cx
  401498:	mov    eax,0x65
  40149d:	mov    ecx,DWORD PTR [ebp-0x214]
  4014a3:	mov    WORD PTR [ecx+0xa],ax
  4014a7:	mov    edx,0x6d
  4014ac:	mov    eax,DWORD PTR [ebp-0x214]
  4014b2:	mov    WORD PTR [eax+0xc],dx
  4014b6:	mov    ecx,0x33
  4014bb:	mov    edx,DWORD PTR [ebp-0x214]
  4014c1:	mov    WORD PTR [edx+0xe],cx
  4014c5:	mov    eax,0x32
  4014ca:	mov    ecx,DWORD PTR [ebp-0x214]
  4014d0:	mov    WORD PTR [ecx+0x10],ax
  4014d4:	mov    edx,0x5c
  4014d9:	mov    eax,DWORD PTR [ebp-0x214]
  4014df:	mov    WORD PTR [eax+0x12],dx
  4014e3:	mov    ecx,0x73
  4014e8:	mov    edx,DWORD PTR [ebp-0x214]
  4014ee:	mov    WORD PTR [edx+0x16],cx
  4014f2:	mov    eax,0x65
  4014f7:	mov    ecx,DWORD PTR [ebp-0x214]
  4014fd:	mov    WORD PTR [ecx+0x24],ax
  401501:	mov    edx,DWORD PTR [ebp-0x214]
  401507:	push   edx
  401508:	lea    eax,[ebp-0x208]
  40150e:	push   eax
  40150f:	call   DWORD PTR ds:0x425e78
  401515:	mov    ecx,DWORD PTR [ebp+0x8]
  401518:	add    ecx,DWORD PTR [ebp-0x210]
  40151e:	mov    edx,DWORD PTR [ebp+0xc]
  401521:	add    edx,DWORD PTR [ebp-0x210]
  401527:	mov    al,BYTE PTR [edx]
  401529:	mov    BYTE PTR [ecx],al
  40152b:	cmp    DWORD PTR [ebp-0x210],0x0
  401532:	jne    0x401576
  401534:	mov    ecx,DWORD PTR ds:0x424434
  40153a:	mov    DWORD PTR ds:0x425e7c,ecx
  401540:	push   0x0
  401542:	push   0x80
  401547:	push   0x3
  401549:	push   0x0
  40154b:	push   0x3
  40154d:	push   0x1
  40154f:	lea    edx,[ebp-0x208]
  401555:	push   edx
  401556:	call   DWORD PTR ds:0x425e7c
  40155c:	mov    DWORD PTR [ebp-0x20c],eax
  401562:	cmp    DWORD PTR [ebp-0x20c],0xffffffff
  401569:	je     0x401574
  40156b:	cmp    DWORD PTR [ebp-0x20c],0x0
  401572:	jne    0x401576
  401574:	jmp    0x4015a8
  401576:	jmp    0x401437
  40157b:	mov    eax,DWORD PTR [ebp+0x8]
  40157e:	cmp    eax,DWORD PTR ds:0x425e68
  401584:	jne    0x4015a8
  401586:	mov    ecx,DWORD PTR ds:0x425e64
  40158c:	sub    ecx,0x400000
  401592:	push   ecx
  401593:	mov    edx,DWORD PTR ds:0x425e64
  401599:	push   edx
  40159a:	mov    eax,ds:0x425e54
  40159f:	push   eax
  4015a0:	call   0x401940
  4015a5:	add    esp,0xc
  4015a8:	mov    esp,ebp
  4015aa:	pop    ebp
  4015ab:	ret    
  4015ac:	int3   
  4015ad:	int3   
  4015ae:	int3   
  4015af:	int3   
  4015b0:	push   ebp
  4015b1:	mov    ebp,esp
  4015b3:	sub    esp,0x14
  4015b6:	mov    DWORD PTR [ebp-0x14],0x403ac8
  4015bd:	mov    DWORD PTR [ebp-0x10],0x1027
  4015c4:	mov    DWORD PTR [ebp-0x4],0x4
  4015cb:	mov    eax,DWORD PTR [ebp-0x4]
  4015ce:	mov    ecx,DWORD PTR [ebp-0x14]
  4015d1:	lea    edx,[ecx+eax*1+0x29]
  4015d5:	mov    DWORD PTR [ebp-0xc],edx
  4015d8:	mov    eax,DWORD PTR [ebp-0xc]
  4015db:	mov    DWORD PTR [ebp-0x8],eax
  4015de:	mov    ecx,DWORD PTR ds:0x425e58
  4015e4:	movzx  edx,BYTE PTR [ecx]
  4015e7:	cmp    edx,0x8b
  4015ed:	je     0x40160e
  4015ef:	mov    eax,ds:0x425e58
  4015f4:	movzx  ecx,BYTE PTR [eax]
  4015f7:	cmp    ecx,0x55
  4015fa:	je     0x40160e
  4015fc:	mov    edx,DWORD PTR ds:0x425e58
  401602:	movzx  eax,BYTE PTR [edx]
  401605:	cmp    eax,0x6a
  401608:	je     0x40160e
  40160a:	xor    eax,eax
  40160c:	jmp    0x40161a
  40160e:	mov    ecx,DWORD PTR [ebp-0x8]
  401611:	sub    ecx,0x29
  401614:	mov    DWORD PTR ds:0x425e4c,ecx
  40161a:	mov    esp,ebp
  40161c:	pop    ebp
  40161d:	ret    
  40161e:	int3   
  40161f:	int3   
  401620:	push   ebp
  401621:	mov    ebp,esp
  401623:	mov    eax,DWORD PTR [ebp+0x8]
  401626:	mov    ecx,DWORD PTR [ebp+0x8]
  401629:	add    ecx,DWORD PTR [eax+0x4]
  40162c:	mov    eax,ecx
  40162e:	pop    ebp
  40162f:	ret    
  401630:	push   ebp
  401631:	mov    ebp,esp
  401633:	sub    esp,0x8
  401636:	mov    DWORD PTR [ebp-0x4],0x0
  40163d:	jmp    0x401648
  40163f:	mov    eax,DWORD PTR [ebp-0x4]
  401642:	add    eax,0x1
  401645:	mov    DWORD PTR [ebp-0x4],eax
  401648:	mov    ecx,DWORD PTR [ebp-0x4]
  40164b:	cmp    ecx,DWORD PTR ds:0x425e70
  401651:	jae    0x4016b6
  401653:	mov    edx,DWORD PTR [ebp-0x4]
  401656:	push   edx
  401657:	mov    eax,ds:0x425e80
  40165c:	push   eax
  40165d:	call   0x401870
  401662:	add    esp,0x8
  401665:	sar    eax,0xc
  401668:	cmp    eax,0x3
  40166b:	jne    0x4016b4
  40166d:	mov    ecx,DWORD PTR [ebp-0x4]
  401670:	push   ecx
  401671:	mov    edx,DWORD PTR ds:0x425e80
  401677:	push   edx
  401678:	call   0x401870
  40167d:	add    esp,0x8
  401680:	and    eax,0xfff
  401685:	add    eax,0x907
  40168a:	mov    DWORD PTR [ebp-0x8],eax
  40168d:	mov    eax,DWORD PTR [ebp+0x8]
  401690:	mov    ecx,DWORD PTR [ebp+0xc]
  401693:	add    ecx,DWORD PTR [eax]
  401695:	mov    edx,DWORD PTR [ebp-0x8]
  401698:	mov    eax,DWORD PTR [ecx+edx*1-0x907]
  40169f:	add    eax,DWORD PTR [ebp+0x10]
  4016a2:	mov    ecx,DWORD PTR [ebp+0x8]
  4016a5:	mov    edx,DWORD PTR [ebp+0xc]
  4016a8:	add    edx,DWORD PTR [ecx]
  4016aa:	mov    ecx,DWORD PTR [ebp-0x8]
  4016ad:	mov    DWORD PTR [edx+ecx*1-0x907],eax
  4016b4:	jmp    0x40163f
  4016b6:	mov    esp,ebp
  4016b8:	pop    ebp
  4016b9:	ret    
  4016ba:	int3   
  4016bb:	int3   
  4016bc:	int3   
  4016bd:	int3   
  4016be:	int3   
  4016bf:	int3   
  4016c0:	push   ebp
  4016c1:	mov    ebp,esp
  4016c3:	sub    esp,0x2c
  4016c6:	mov    DWORD PTR [ebp-0x1c],0x41f048
  4016cd:	mov    DWORD PTR [ebp-0x20],0x41f0c4
  4016d4:	mov    DWORD PTR [ebp-0x2c],0x41f0d4
  4016db:	mov    DWORD PTR [ebp-0x14],0x0
  4016e2:	lea    eax,[ebp-0x14]
  4016e5:	push   eax
  4016e6:	push   0x0
  4016e8:	call   DWORD PTR ds:0x424438
  4016ee:	cmp    DWORD PTR [ebp-0x14],0x0
  4016f2:	jne    0x4016fb
  4016f4:	xor    eax,eax
  4016f6:	jmp    0x40177f
  4016fb:	mov    ecx,0x61
  401700:	mov    edx,DWORD PTR [ebp-0x2c]
  401703:	mov    WORD PTR [edx],cx
  401706:	mov    eax,DWORD PTR [ebp-0x20]
  401709:	push   eax
  40170a:	mov    ecx,DWORD PTR [ebp-0x2c]
  40170d:	push   ecx
  40170e:	call   DWORD PTR ds:0x42443c
  401714:	push   eax
  401715:	call   DWORD PTR ds:0x424440
  40171b:	mov    DWORD PTR [ebp-0x18],eax
  40171e:	mov    edx,0x61
  401723:	mov    eax,DWORD PTR [ebp-0x1c]
  401726:	mov    WORD PTR [eax+0x16],dx
  40172a:	lea    ecx,[ebp-0x28]
  40172d:	push   ecx
  40172e:	push   0x20019
  401733:	push   0x0
  401735:	mov    edx,DWORD PTR [ebp-0x1c]
  401738:	push   edx
  401739:	push   0x80000002
  40173e:	call   DWORD PTR [ebp-0x18]
  401741:	test   eax,eax
  401743:	jne    0x40174e
  401745:	mov    eax,0x1
  40174a:	jmp    0x40177f
  40174c:	jmp    0x401757
  40174e:	call   0x4016c0
  401753:	xor    eax,eax
  401755:	jmp    0x40177f
  401757:	mov    eax,DWORD PTR [ebp-0x24]
  40175a:	movzx  ecx,BYTE PTR [eax]
  40175d:	cmp    ecx,0x55
  401760:	je     0x40177f
  401762:	mov    edx,DWORD PTR [ebp-0x24]
  401765:	movzx  eax,BYTE PTR [edx]
  401768:	cmp    eax,0x8b
  40176d:	je     0x40177f
  40176f:	mov    ecx,DWORD PTR [ebp-0x24]
  401772:	movzx  edx,BYTE PTR [ecx]
  401775:	cmp    edx,0x6a
  401778:	je     0x40177f
  40177a:	call   0x401380
  40177f:	mov    esp,ebp
  401781:	pop    ebp
  401782:	ret    
  401783:	int3   
  401784:	int3   
  401785:	int3   
  401786:	int3   
  401787:	int3   
  401788:	int3   
  401789:	int3   
  40178a:	int3   
  40178b:	int3   
  40178c:	int3   
  40178d:	int3   
  40178e:	int3   
  40178f:	int3   
  401790:	push   ebp
  401791:	mov    ebp,esp
  401793:	sub    esp,0x220
  401799:	mov    DWORD PTR [ebp-0x8],0x307c
  4017a0:	mov    DWORD PTR [ebp-0x220],0x3000
  4017aa:	mov    DWORD PTR [ebp-0x4],0x40
  4017b1:	mov    DWORD PTR [ebp-0x214],0x0
  4017bb:	mov    DWORD PTR [ebp-0x218],0x0
  4017c5:	mov    DWORD PTR [ebp-0x8],0x307c
  4017cc:	mov    DWORD PTR [ebp-0x8],0x307c
  4017d3:	mov    DWORD PTR [ebp-0x8],0x307c
  4017da:	mov    eax,ds:0x424444
  4017df:	mov    ds:0x425e78,eax
  4017e4:	mov    DWORD PTR [ebp-0x8],0x307c
  4017eb:	mov    ecx,DWORD PTR ds:0x424448
  4017f1:	mov    DWORD PTR ds:0x425e74,ecx
  4017f7:	push   0x104
  4017fc:	lea    edx,[ebp-0x210]
  401802:	push   edx
  401803:	call   DWORD PTR ds:0x425e74
  401809:	mov    eax,DWORD PTR [ebp-0x4]
  40180c:	push   eax
  40180d:	mov    ecx,DWORD PTR [ebp-0x220]
  401813:	push   ecx
  401814:	mov    edx,DWORD PTR [ebp+0x8]
  401817:	push   edx
  401818:	mov    eax,DWORD PTR [ebp-0x214]
  40181e:	push   eax
  40181f:	push   0xffffffff
  401821:	call   DWORD PTR ds:0x42444c
  401827:	mov    esp,ebp
  401829:	pop    ebp
  40182a:	ret    
  40182b:	int3   
  40182c:	int3   
  40182d:	int3   
  40182e:	int3   
  40182f:	int3   
  401830:	push   ebp
  401831:	mov    ebp,esp
  401833:	push   ecx
  401834:	push   ebx
  401835:	mov    DWORD PTR [ebp-0x4],0x7d200
  40183c:	mov    DWORD PTR [ebp-0x4],0x7d200
  401843:	mov    DWORD PTR [ebp-0x4],0x7d200
  40184a:	mov    ebx,ebx
  40184c:	mov    esp,DWORD PTR ds:0x425e5c
  401852:	mov    ebx,ebx
  401854:	add    esp,0x4
  401857:	mov    ebx,ebx
  401859:	mov    eax,ds:0x425e6c
  40185e:	jmp    eax
  401860:	pop    ebx
  401861:	mov    esp,ebp
  401863:	pop    ebp
  401864:	ret    
  401865:	int3   
  401866:	int3   
  401867:	int3   
  401868:	int3   
  401869:	int3   
  40186a:	int3   
  40186b:	int3   
  40186c:	int3   
  40186d:	int3   
  40186e:	int3   
  40186f:	int3   
  401870:	push   ebp
  401871:	mov    ebp,esp
  401873:	sub    esp,0x18
  401876:	mov    eax,DWORD PTR [ebp+0x8]
  401879:	mov    DWORD PTR [ebp-0x8],eax
  40187c:	mov    ecx,DWORD PTR [ebp+0xc]
  40187f:	mov    DWORD PTR [ebp-0x4],ecx
  401882:	mov    DWORD PTR [ebp-0x10],0x19c
  401889:	mov    edx,DWORD PTR [ebp-0x8]
  40188c:	mov    DWORD PTR ds:0x425e84,edx
  401892:	mov    eax,DWORD PTR [ebp-0x4]
  401895:	mov    ds:0x425e88,eax
  40189a:	mov    ecx,DWORD PTR ds:0x425e84
  4018a0:	mov    DWORD PTR [ebp-0x14],ecx
  4018a3:	mov    edx,DWORD PTR ds:0x425e88
  4018a9:	mov    DWORD PTR [ebp-0xc],edx
  4018ac:	mov    eax,DWORD PTR [ebp-0xc]
  4018af:	mov    ecx,DWORD PTR [ebp-0x14]
  4018b2:	lea    edx,[ecx+eax*2]
  4018b5:	mov    DWORD PTR [ebp-0x18],edx
  4018b8:	mov    eax,DWORD PTR [ebp-0x18]
  4018bb:	mov    DWORD PTR [ebp-0x14],eax
  4018be:	mov    ecx,DWORD PTR [ebp-0x14]
  4018c1:	movzx  edx,WORD PTR [ecx]
  4018c4:	mov    DWORD PTR [ebp-0xc],edx
  4018c7:	mov    eax,DWORD PTR [ebp-0xc]
  4018ca:	mov    esp,ebp
  4018cc:	pop    ebp
  4018cd:	ret    
  4018ce:	int3   
  4018cf:	int3   
  4018d0:	push   ebp
  4018d1:	mov    ebp,esp
  4018d3:	sub    esp,0xc
  4018d6:	mov    eax,DWORD PTR [ebp+0x8]
  4018d9:	mov    DWORD PTR [ebp-0x8],eax
  4018dc:	mov    ecx,DWORD PTR [ebp+0xc]
  4018df:	mov    DWORD PTR [ebp-0xc],ecx
  4018e2:	mov    DWORD PTR [ebp-0x4],0x11afc
  4018e9:	mov    edx,DWORD PTR [ebp-0x8]
  4018ec:	cmp    edx,DWORD PTR [ebp-0xc]
  4018ef:	jae    0x4018ff
  4018f1:	mov    DWORD PTR [ebp-0x4],0x11afc
  4018f8:	mov    eax,DWORD PTR [ebp-0x8]
  4018fb:	jmp    0x401909
  4018fd:	jmp    0x401909
  4018ff:	mov    DWORD PTR [ebp-0x4],0x11afc
  401906:	mov    eax,DWORD PTR [ebp-0xc]
  401909:	mov    esp,ebp
  40190b:	pop    ebp
  40190c:	ret    
  40190d:	int3   
  40190e:	int3   
  40190f:	int3   
  401910:	push   ebp
  401911:	mov    ebp,esp
  401913:	mov    eax,DWORD PTR [ebp+0x10]
  401916:	push   eax
  401917:	mov    ecx,DWORD PTR [ebp+0xc]
  40191a:	push   ecx
  40191b:	mov    edx,DWORD PTR [ebp+0x8]
  40191e:	push   edx
  40191f:	call   0x401990
  401924:	add    esp,0xc
  401927:	pop    ebp
  401928:	ret    
  401929:	int3   
  40192a:	int3   
  40192b:	int3   
  40192c:	int3   
  40192d:	int3   
  40192e:	int3   
  40192f:	int3   
  401930:	push   ebp
  401931:	mov    ebp,esp
  401933:	mov    eax,DWORD PTR [ebp+0x8]
  401936:	xor    eax,DWORD PTR [ebp+0xc]
  401939:	pop    ebp
  40193a:	ret    
  40193b:	int3   
  40193c:	int3   
  40193d:	int3   
  40193e:	int3   
  40193f:	int3   
  401940:	push   ebp
  401941:	mov    ebp,esp
  401943:	sub    esp,0x8
  401946:	mov    eax,DWORD PTR [ebp+0x8]
  401949:	cmp    DWORD PTR [eax+0x4],0x0
  40194d:	je     0x40198b
  40194f:	mov    ecx,DWORD PTR [ebp+0x8]
  401952:	add    ecx,0x8
  401955:	mov    DWORD PTR ds:0x425e80,ecx
  40195b:	mov    edx,DWORD PTR [ebp+0x8]
  40195e:	mov    eax,DWORD PTR [edx+0x4]
  401961:	mov    ds:0x425e70,eax
  401966:	call   0x4013a0
  40196b:	mov    ecx,DWORD PTR [ebp+0x8]
  40196e:	mov    DWORD PTR ds:0x425e8c,ecx
  401974:	mov    edx,DWORD PTR [ebp+0x10]
  401977:	push   edx
  401978:	mov    eax,DWORD PTR [ebp+0xc]
  40197b:	push   eax
  40197c:	push   0x1
  40197e:	call   0x401910
  401983:	add    esp,0xc
  401986:	mov    DWORD PTR [ebp+0x8],eax
  401989:	jmp    0x401946
  40198b:	mov    esp,ebp
  40198d:	pop    ebp
  40198e:	ret    
  40198f:	int3   
  401990:	push   ebp
  401991:	mov    ebp,esp
  401993:	cmp    DWORD PTR [ebp+0x8],0x1
  401997:	jne    0x4019a1
  401999:	mov    eax,ds:0x425e8c
  40199e:	mov    DWORD PTR [ebp+0x8],eax
  4019a1:	mov    ecx,DWORD PTR [ebp+0x10]
  4019a4:	push   ecx
  4019a5:	mov    edx,DWORD PTR [ebp+0xc]
  4019a8:	push   edx
  4019a9:	mov    eax,DWORD PTR [ebp+0x8]
  4019ac:	push   eax
  4019ad:	call   0x401630
  4019b2:	add    esp,0xc
  4019b5:	mov    ecx,DWORD PTR [ebp+0x8]
  4019b8:	push   ecx
  4019b9:	call   0x401620
  4019be:	add    esp,0x4
  4019c1:	mov    DWORD PTR [ebp+0x8],eax
  4019c4:	mov    eax,DWORD PTR [ebp+0x8]
  4019c7:	pop    ebp
  4019c8:	ret    
  4019c9:	int3   
  4019ca:	int3   
  4019cb:	int3   
  4019cc:	int3   
  4019cd:	int3   
  4019ce:	int3   
  4019cf:	int3   
  4019d0:	push   ebp
  4019d1:	mov    ebp,esp
  4019d3:	sub    esp,0x228
  4019d9:	mov    DWORD PTR [ebp-0x218],0x0
  4019e3:	mov    DWORD PTR [ebp-0x214],0x41f0e8
  4019ed:	mov    DWORD PTR [ebp-0x4],0x12f1
  4019f4:	mov    DWORD PTR [ebp-0x4],0x12f1
  4019fb:	mov    DWORD PTR [ebp-0x220],0x0
  401a05:	jmp    0x401a16
  401a07:	mov    eax,DWORD PTR [ebp-0x220]
  401a0d:	add    eax,0x4
  401a10:	mov    DWORD PTR [ebp-0x220],eax
  401a16:	mov    ecx,DWORD PTR [ebp-0x220]
  401a1c:	cmp    ecx,DWORD PTR [ebp+0xc]
  401a1f:	jae    0x401ad3
  401a25:	mov    DWORD PTR [ebp-0x4],0x12f1
  401a2c:	mov    DWORD PTR [ebp-0x4],0x12f1
  401a33:	mov    edx,DWORD PTR [ebp-0x220]
  401a39:	add    edx,0x662f7
  401a3f:	mov    DWORD PTR ds:0x425e90,edx
  401a45:	mov    DWORD PTR [ebp-0x4],0x12f1
  401a4c:	mov    eax,DWORD PTR [ebp+0x8]
  401a4f:	add    eax,DWORD PTR [ebp-0x220]
  401a55:	mov    DWORD PTR [ebp-0x228],eax
  401a5b:	mov    DWORD PTR [ebp-0x4],0x12f1
  401a62:	mov    DWORD PTR [ebp-0x4],0x12f1
  401a69:	mov    ecx,DWORD PTR [ebp-0x228]
  401a6f:	mov    edx,DWORD PTR [ecx]
  401a71:	add    edx,DWORD PTR [ebp-0x220]
  401a77:	mov    eax,DWORD PTR [ebp-0x228]
  401a7d:	mov    DWORD PTR [eax],edx
  401a7f:	mov    DWORD PTR [ebp-0x4],0x12f1
  401a86:	mov    ecx,DWORD PTR [ebp-0x228]
  401a8c:	mov    DWORD PTR [ebp-0x224],ecx
  401a92:	mov    edx,DWORD PTR ds:0x425e90
  401a98:	mov    DWORD PTR [ebp-0x4],edx
  401a9b:	mov    DWORD PTR [ebp-0x4],0x12f1
  401aa2:	mov    eax,DWORD PTR [ebp-0x224]
  401aa8:	mov    ecx,DWORD PTR [eax]
  401aaa:	mov    DWORD PTR [ebp-0x4],ecx
  401aad:	mov    edx,DWORD PTR ds:0x425e90
  401ab3:	push   edx
  401ab4:	mov    eax,DWORD PTR [ebp-0x4]
  401ab7:	push   eax
  401ab8:	call   0x401930
  401abd:	add    esp,0x8
  401ac0:	mov    DWORD PTR [ebp-0x4],eax
  401ac3:	mov    ecx,DWORD PTR [ebp-0x224]
  401ac9:	mov    edx,DWORD PTR [ebp-0x4]
  401acc:	mov    DWORD PTR [ecx],edx
  401ace:	jmp    0x401a07
  401ad3:	mov    esp,ebp
  401ad5:	pop    ebp
  401ad6:	ret    
  401ad7:	int3   
	...
  403248:	push   eax
  403249:	inc    esp
  40324a:	inc    edx
  40324b:	add    BYTE PTR [eax+0x44],al
  40324e:	inc    edx
  40324f:	add    BYTE PTR [esp+eax*2+0x42],dl
  403253:	add    BYTE PTR [eax+0x44],bl
  403256:	inc    edx
  403257:	add    BYTE PTR [esp+eax*2+0x42],bl
  40325b:	add    BYTE PTR [eax+0x44],ah
  40325e:	inc    edx
  40325f:	add    BYTE PTR [esp+eax*2+0x42],ah
  403263:	add    BYTE PTR [eax+0x44],ch
  403266:	inc    edx
  403267:	add    BYTE PTR [esp+eax*2+0x42],ch
  40326b:	add    BYTE PTR [eax+0x44],dh
  40326e:	inc    edx
  40326f:	add    BYTE PTR [esp+eax*2+0x42],dh
  403273:	add    BYTE PTR [eax+0x44],bh
  403276:	inc    edx
  403277:	add    BYTE PTR [esp+eax*2+0x42],bh
  40327b:	add    BYTE PTR [eax-0x7bffbdbc],al
  403281:	inc    esp
  403282:	inc    edx
  403283:	add    BYTE PTR [eax-0x73ffbdbc],cl
  403289:	inc    esp
  40328a:	inc    edx
  40328b:	add    BYTE PTR [eax-0x6bffbdbc],dl
  403291:	inc    esp
  403292:	inc    edx
  403293:	add    BYTE PTR [eax-0x63ffbdbc],bl
  403299:	inc    esp
  40329a:	inc    edx
  40329b:	add    BYTE PTR [eax+0x60004244],ah
  4032a1:	inc    esp
  4032a2:	inc    edx
  4032a3:	add    BYTE PTR [esp+eax*2+0x44a80042],ah
  4032aa:	inc    edx
  4032ab:	add    BYTE PTR [esp+eax*2+0x44b00042],ch
  4032b2:	inc    edx
  4032b3:	add    BYTE PTR [esp+eax*2+0x44b80042],dh
  4032ba:	inc    edx
  4032bb:	add    BYTE PTR [esp+eax*2+0x44c00042],bh
  4032c2:	inc    edx
  4032c3:	add    BYTE PTR [eax+0x44],al
  4032c6:	inc    edx
  4032c7:	add    ah,al
  4032c9:	inc    esp
  4032ca:	inc    edx
  4032cb:	add    al,cl
  4032cd:	inc    esp
  4032ce:	inc    edx
  4032cf:	add    ah,cl
  4032d1:	inc    esp
  4032d2:	inc    edx
  4032d3:	add    al,dl
  4032d5:	inc    esp
  4032d6:	inc    edx
  4032d7:	add    ah,dl
  4032d9:	inc    esp
  4032da:	inc    edx
  4032db:	add    al,bl
  4032dd:	inc    esp
  4032de:	inc    edx
  4032df:	add    ah,bl
  4032e1:	inc    esp
  4032e2:	inc    edx
  4032e3:	add    al,ah
  4032e5:	inc    esp
  4032e6:	inc    edx
  4032e7:	add    ah,ah
  4032e9:	inc    esp
  4032ea:	inc    edx
  4032eb:	add    al,ch
  4032ed:	inc    esp
  4032ee:	inc    edx
  4032ef:	add    ah,ch
  4032f1:	inc    esp
  4032f2:	inc    edx
  4032f3:	add    al,dh
  4032f5:	inc    esp
  4032f6:	inc    edx
  4032f7:	add    ah,dh
  4032f9:	inc    esp
  4032fa:	inc    edx
  4032fb:	add    al,bh
  4032fd:	inc    esp
  4032fe:	inc    edx
  4032ff:	add    ah,bh
  403301:	inc    esp
  403302:	inc    edx
  403303:	add    BYTE PTR [eax],al
  403305:	inc    ebp
  403306:	inc    edx
  403307:	add    BYTE PTR [eax*2+0x45080042],al
  40330e:	inc    edx
  40330f:	add    BYTE PTR [eax*2+0x45100042],cl
  403316:	inc    edx
  403317:	add    BYTE PTR [eax*2+0x45180042],dl
  40331e:	inc    edx
  40331f:	add    BYTE PTR [eax*2+0x45200042],bl
  403326:	inc    edx
  403327:	add    BYTE PTR [eax*2+0x45280042],ah
  40332e:	inc    edx
  40332f:	add    BYTE PTR [eax*2+0x45300042],ch
  403336:	inc    edx
  403337:	add    BYTE PTR [eax*2+0x45380042],dh
  40333e:	inc    edx
  40333f:	add    BYTE PTR [eax*2+0x45400042],bh
  403346:	inc    edx
  403347:	add    BYTE PTR [ebp+eax*2+0x42],al
  40334b:	add    BYTE PTR [eax+0x45],cl
  40334e:	inc    edx
  40334f:	add    BYTE PTR [ebp+eax*2+0x42],cl
  403353:	add    BYTE PTR [eax+0x45],dl
  403356:	inc    edx
  403357:	add    BYTE PTR [ebp+eax*2+0x42],dl
  40335b:	add    BYTE PTR [eax+0x45],bl
  40335e:	inc    edx
  40335f:	add    BYTE PTR [ebp+eax*2+0x42],bl
  403363:	add    BYTE PTR [eax+0x45],ah
  403366:	inc    edx
  403367:	add    BYTE PTR [ebp+eax*2+0x42],ah
  40336b:	add    BYTE PTR [eax+0x45],ch
  40336e:	inc    edx
  40336f:	add    BYTE PTR [ebp+eax*2+0x42],ch
  403373:	add    BYTE PTR [eax+0x45],dh
  403376:	inc    edx
  403377:	add    BYTE PTR [ebp+eax*2+0x42],dh
  40337b:	add    BYTE PTR [eax+0x45],bh
  40337e:	inc    edx
  40337f:	add    BYTE PTR [ebp+eax*2+0x42],bh
  403383:	add    BYTE PTR [eax-0x7bffbdbb],al
  403389:	inc    ebp
  40338a:	inc    edx
  40338b:	add    BYTE PTR [eax-0x73ffbdbb],cl
  403391:	inc    ebp
  403392:	inc    edx
  403393:	add    BYTE PTR [eax-0x6bffbdbb],dl
  403399:	inc    ebp
  40339a:	inc    edx
  40339b:	add    BYTE PTR [eax-0x63ffbdbb],bl
  4033a1:	inc    ebp
  4033a2:	inc    edx
  4033a3:	add    ah,dl
  4033a5:	inc    esp
  4033a6:	inc    edx
  4033a7:	add    BYTE PTR [eax-0x5bffbdbb],ah
  4033ad:	inc    ebp
  4033ae:	inc    edx
  4033af:	add    BYTE PTR [eax-0x57ffbdbc],al
  4033b5:	inc    ebp
  4033b6:	inc    edx
  4033b7:	add    BYTE PTR [ebp+eax*2+0x45b00042],ch
  4033be:	inc    edx
  4033bf:	add    BYTE PTR [ebp+eax*2+0x45b80042],dh
  4033c6:	inc    edx
  4033c7:	add    BYTE PTR [eax+0x44],dh
  4033ca:	inc    edx
  4033cb:	add    BYTE PTR [ebp+eax*2+0x45c00042],bh
  4033d2:	inc    edx
  4033d3:	add    ah,al
  4033d5:	inc    ebp
  4033d6:	inc    edx
  4033d7:	add    BYTE PTR [edi+eax*2+0x42],dl
  4033db:	add    BYTE PTR [eax+0x47],bl
  4033de:	inc    edx
  4033df:	add    BYTE PTR [edi+eax*2+0x42],bl
  4033e3:	add    BYTE PTR [eax+0x47],ah
  4033e6:	inc    edx
  4033e7:	add    BYTE PTR [edi+eax*2+0x42],ah
  4033eb:	add    BYTE PTR [eax+0x47],bl
  4033ee:	inc    edx
  4033ef:	add    BYTE PTR [eax+0x47],ch
  4033f2:	inc    edx
  4033f3:	add    BYTE PTR [eax+0x47],ch
  4033f6:	inc    edx
  4033f7:	add    BYTE PTR [edi+eax*2+0x42],ch
  4033fb:	add    BYTE PTR [eax+0x47],dh
  4033fe:	inc    edx
  4033ff:	add    BYTE PTR [edi+eax*2+0x42],dh
  403403:	add    BYTE PTR [eax+0x47],bh
  403406:	inc    edx
  403407:	add    BYTE PTR [edi+eax*2+0x42],dh
  40340b:	add    BYTE PTR [edi+eax*2+0x42],bh
  40340f:	add    BYTE PTR [eax-0x7bffbdb9],al
  403415:	inc    edi
  403416:	inc    edx
  403417:	add    BYTE PTR [eax-0x7bffbdb9],cl
  40341d:	inc    edi
  40341e:	inc    edx
  40341f:	add    BYTE PTR [edi+eax*2+0x47880042],cl
  403426:	inc    edx
  403427:	add    BYTE PTR [eax+0x47],bl
  40342a:	inc    edx
  40342b:	add    BYTE PTR [edi+eax*2+0x42],ah
  40342f:	add    BYTE PTR [edi+eax*2+0x42],dh
  403433:	add    BYTE PTR [edi+eax*2+0x42],dh
  403437:	add    BYTE PTR [eax+0x47],bh
  40343a:	inc    edx
  40343b:	add    BYTE PTR [eax+0x47],bh
  40343e:	inc    edx
  40343f:	add    BYTE PTR [eax+0x47],dh
  403442:	inc    edx
  403443:	add    BYTE PTR [eax-0x7fffbdb9],dl
  403449:	inc    edi
  40344a:	inc    edx
  40344b:	add    BYTE PTR [edi+eax*2+0x42],dh
  40344f:	add    BYTE PTR [edi+eax*2+0x42],bh
  403453:	add    BYTE PTR [eax+0x47],ch
  403456:	inc    edx
  403457:	add    BYTE PTR [eax+0x47],bh
  40345a:	inc    edx
  40345b:	add    BYTE PTR [eax+0x47],bh
  40345e:	inc    edx
  40345f:	add    BYTE PTR [edi+eax*2+0x42],dh
  403463:	add    BYTE PTR [eax+0x60004247],dl
  403469:	inc    edi
  40346a:	inc    edx
  40346b:	add    BYTE PTR [edi+eax*2+0x47740042],dl
  403472:	inc    edx
  403473:	add    BYTE PTR [eax+0x47],bh
  403476:	inc    edx
  403477:	add    BYTE PTR [eax-0x67ffbdb9],bl
  40347d:	inc    edi
  40347e:	inc    edx
  40347f:	add    BYTE PTR [edi+eax*2+0x47940042],cl
  403486:	inc    edx
  403487:	add    BYTE PTR [edi+eax*2+0x42],ah
  40348b:	add    BYTE PTR [eax+0x78004247],dl
  403491:	inc    edi
  403492:	inc    edx
  403493:	add    BYTE PTR [edi+eax*2+0x42],dh
  403497:	add    BYTE PTR [edi+eax*2+0x42],bh
  40349b:	add    BYTE PTR [edi+eax*2+0x479c0042],al
  4034a2:	inc    edx
  4034a3:	add    BYTE PTR [edi+eax*2+0x42],ah
  4034a7:	add    BYTE PTR [edi+eax*2+0x47600042],cl
  4034ae:	inc    edx
  4034af:	add    BYTE PTR [edi+eax*2+0x478c0042],bl
  4034b6:	inc    edx
  4034b7:	add    BYTE PTR [edi+eax*2+0x42],bl
  4034bb:	add    BYTE PTR [eax-0x7bffbdb9],dl
  4034c1:	inc    edi
  4034c2:	inc    edx
  4034c3:	add    BYTE PTR [edi+eax*2+0x47640042],bl
  4034ca:	inc    edx
  4034cb:	add    BYTE PTR [eax-0x7fffbdb9],al
  4034d1:	inc    edi
  4034d2:	inc    edx
  4034d3:	add    BYTE PTR [edi+eax*2+0x42],dl
  4034d7:	add    BYTE PTR [eax+0x47],bl
  4034da:	inc    edx
  4034db:	add    BYTE PTR [eax+0x47],bh
  4034de:	inc    edx
  4034df:	add    BYTE PTR [eax+0x60004247],ah
  4034e5:	inc    edi
  4034e6:	inc    edx
  4034e7:	add    BYTE PTR [edi+eax*2+0x42],bh
  4034eb:	add    BYTE PTR [edi+eax*2+0x47840042],al
  4034f2:	inc    edx
  4034f3:	add    BYTE PTR [eax-0x67ffbdb9],ah
  4034f9:	inc    edi
  4034fa:	inc    edx
  4034fb:	add    BYTE PTR [eax+0x47],bl
  4034fe:	inc    edx
  4034ff:	add    BYTE PTR [edi+eax*2+0x475c0042],bl
  403506:	inc    edx
  403507:	add    BYTE PTR [eax+0x54004247],ah
  40350d:	inc    edi
  40350e:	inc    edx
  40350f:	add    BYTE PTR [edi+eax*2+0x42],ah
  403513:	add    BYTE PTR [edi+eax*2+0x42],ch
  403517:	add    BYTE PTR [edi+eax*2+0x42],bh
  40351b:	add    BYTE PTR [edi+eax*2+0x47740042],dl
  403522:	inc    edx
  403523:	add    BYTE PTR [edi+eax*2+0x42],dl
  403527:	add    BYTE PTR [edi+eax*2+0x47940042],cl
  40352e:	inc    edx
  40352f:	add    BYTE PTR [edi+eax*2+0x42],dl
  403533:	add    BYTE PTR [edi+eax*2+0x42],bh
  403537:	add    BYTE PTR [edi+eax*2+0x478c0042],cl
  40353e:	inc    edx
  40353f:	add    BYTE PTR [eax+0x54004247],bl
  403545:	inc    edi
  403546:	inc    edx
  403547:	add    BYTE PTR [eax+0x47],ch
  40354a:	inc    edx
  40354b:	add    BYTE PTR [edi+eax*2+0x477c0042],dl
  403552:	inc    edx
  403553:	add    BYTE PTR [eax+0x47],dh
  403556:	inc    edx
  403557:	add    BYTE PTR [eax-0x7bffbdb9],cl
  40355d:	inc    edi
  40355e:	inc    edx
  40355f:	add    BYTE PTR [eax+0x47],ch
  403562:	inc    edx
  403563:	add    BYTE PTR [edi+eax*2+0x42],ah
  403567:	add    al,dl
  403569:	inc    ebp
  40356a:	inc    edx
  40356b:	add    ah,dl
  40356d:	inc    ebp
  40356e:	inc    edx
  40356f:	add    al,bl
  403571:	inc    ebp
  403572:	inc    edx
  403573:	add    ah,bl
  403575:	inc    ebp
  403576:	inc    edx
  403577:	add    al,ah
  403579:	inc    ebp
  40357a:	inc    edx
  40357b:	add    ah,ah
  40357d:	inc    ebp
  40357e:	inc    edx
  40357f:	add    al,ch
  403581:	inc    ebp
  403582:	inc    edx
  403583:	add    ah,ch
  403585:	inc    ebp
  403586:	inc    edx
  403587:	add    al,dh
  403589:	inc    ebp
  40358a:	inc    edx
  40358b:	add    ah,dh
  40358d:	inc    ebp
  40358e:	inc    edx
  40358f:	add    al,bh
  403591:	inc    ebp
  403592:	inc    edx
  403593:	add    ah,bh
  403595:	inc    ebp
  403596:	inc    edx
  403597:	add    BYTE PTR [eax],al
  403599:	inc    esi
  40359a:	inc    edx
  40359b:	add    BYTE PTR [esi+eax*2],al
  40359e:	inc    edx
  40359f:	add    BYTE PTR [eax],cl
  4035a1:	inc    esi
  4035a2:	inc    edx
  4035a3:	add    BYTE PTR [esi+eax*2],cl
  4035a6:	inc    edx
  4035a7:	add    BYTE PTR [eax],dl
  4035a9:	inc    esi
  4035aa:	inc    edx
  4035ab:	add    BYTE PTR [esi+eax*2],dl
  4035ae:	inc    edx
  4035af:	add    BYTE PTR [eax],bl
  4035b1:	inc    esi
  4035b2:	inc    edx
  4035b3:	add    BYTE PTR [esi+eax*2],bl
  4035b6:	inc    edx
  4035b7:	add    BYTE PTR [eax],ah
  4035b9:	inc    esi
  4035ba:	inc    edx
  4035bb:	add    BYTE PTR [esi+eax*2],ah
  4035be:	inc    edx
  4035bf:	add    BYTE PTR [eax],ch
  4035c1:	inc    esi
  4035c2:	inc    edx
  4035c3:	add    BYTE PTR [esi+eax*2],ch
  4035c6:	inc    edx
  4035c7:	add    BYTE PTR [eax],dh
  4035c9:	inc    esi
  4035ca:	inc    edx
  4035cb:	add    BYTE PTR [esi+eax*2],dh
  4035ce:	inc    edx
  4035cf:	add    BYTE PTR [eax],bh
  4035d1:	inc    esi
  4035d2:	inc    edx
  4035d3:	add    BYTE PTR [esi+eax*2],bh
  4035d6:	inc    edx
  4035d7:	add    BYTE PTR [eax+0x46],al
  4035da:	inc    edx
  4035db:	add    BYTE PTR [esi+eax*2+0x42],al
  4035df:	add    BYTE PTR [eax+0x46],cl
  4035e2:	inc    edx
  4035e3:	add    BYTE PTR [esi+eax*2+0x42],cl
  4035e7:	add    ah,cl
  4035e9:	inc    ebp
  4035ea:	inc    edx
  4035eb:	add    BYTE PTR [eax+0x46],dl
  4035ee:	inc    edx
  4035ef:	add    BYTE PTR [esi+eax*2+0x42],dl
  4035f3:	add    BYTE PTR [eax+0x46],bl
  4035f6:	inc    edx
  4035f7:	add    BYTE PTR [esi+eax*2+0x42],bl
  4035fb:	add    BYTE PTR [eax+0x46],ah
  4035fe:	inc    edx
  4035ff:	add    BYTE PTR [esi+eax*2+0x42],ah
  403603:	add    BYTE PTR [eax+0x46],ch
  403606:	inc    edx
  403607:	add    BYTE PTR [esi+eax*2+0x42],ch
  40360b:	add    BYTE PTR [eax+0x46],dh
  40360e:	inc    edx
  40360f:	add    BYTE PTR [esi+eax*2+0x42],dh
  403613:	add    BYTE PTR [eax+0x46],bh
  403616:	inc    edx
  403617:	add    BYTE PTR [esi+eax*2+0x42],bh
  40361b:	add    BYTE PTR [eax-0x7bffbdba],al
  403621:	inc    esi
  403622:	inc    edx
  403623:	add    BYTE PTR [eax-0x73ffbdba],cl
  403629:	inc    esi
  40362a:	inc    edx
  40362b:	add    BYTE PTR [eax-0x6bffbdba],dl
  403631:	inc    esi
  403632:	inc    edx
  403633:	add    BYTE PTR [eax-0x63ffbdba],bl
  403639:	inc    esi
  40363a:	inc    edx
  40363b:	add    BYTE PTR [eax-0x5bffbdba],ah
  403641:	inc    esi
  403642:	inc    edx
  403643:	add    BYTE PTR [eax-0x53ffbdba],ch
  403649:	inc    esi
  40364a:	inc    edx
  40364b:	add    BYTE PTR [eax-0x4bffbdba],dh
  403651:	inc    esi
  403652:	inc    edx
  403653:	add    BYTE PTR [eax-0x43ffbdba],bh
  403659:	inc    esi
  40365a:	inc    edx
  40365b:	add    al,al
  40365d:	inc    esi
  40365e:	inc    edx
  40365f:	add    ah,al
  403661:	inc    esi
  403662:	inc    edx
  403663:	add    al,cl
  403665:	inc    esi
  403666:	inc    edx
  403667:	add    ah,cl
  403669:	inc    esi
  40366a:	inc    edx
  40366b:	add    al,dl
  40366d:	inc    esi
  40366e:	inc    edx
  40366f:	add    ah,dl
  403671:	inc    esi
  403672:	inc    edx
  403673:	add    al,bl
  403675:	inc    esi
  403676:	inc    edx
  403677:	add    ah,bl
  403679:	inc    esi
  40367a:	inc    edx
  40367b:	add    al,ah
  40367d:	inc    esi
  40367e:	inc    edx
  40367f:	add    BYTE PTR [esi+eax*2+0x46e40042],bh
  403686:	inc    edx
  403687:	add    BYTE PTR [eax+0x46],cl
  40368a:	inc    edx
  40368b:	add    al,ch
  40368d:	inc    esi
  40368e:	inc    edx
  40368f:	add    ah,ch
  403691:	inc    esi
  403692:	inc    edx
  403693:	add    al,dh
  403695:	inc    esi
  403696:	inc    edx
  403697:	add    ah,dh
  403699:	inc    esi
  40369a:	inc    edx
  40369b:	add    al,bh
  40369d:	inc    esi
  40369e:	inc    edx
  40369f:	add    ah,bh
  4036a1:	inc    esi
  4036a2:	inc    edx
  4036a3:	add    BYTE PTR [eax],al
  4036a5:	inc    edi
  4036a6:	inc    edx
  4036a7:	add    BYTE PTR [edi+eax*2],al
  4036aa:	inc    edx
  4036ab:	add    BYTE PTR [eax],cl
  4036ad:	inc    edi
  4036ae:	inc    edx
  4036af:	add    BYTE PTR [edi+eax*2],cl
  4036b2:	inc    edx
  4036b3:	add    BYTE PTR [eax],dl
  4036b5:	inc    edi
  4036b6:	inc    edx
  4036b7:	add    BYTE PTR [edi+eax*2],dl
  4036ba:	inc    edx
  4036bb:	add    BYTE PTR [eax],bl
  4036bd:	inc    edi
  4036be:	inc    edx
  4036bf:	add    BYTE PTR [edi+eax*2],bl
  4036c2:	inc    edx
  4036c3:	add    al,dl
  4036c5:	inc    esi
  4036c6:	inc    edx
  4036c7:	add    BYTE PTR [eax],ah
  4036c9:	inc    edi
  4036ca:	inc    edx
  4036cb:	add    BYTE PTR [edi+eax*2],ah
  4036ce:	inc    edx
  4036cf:	add    BYTE PTR [eax],ch
  4036d1:	inc    edi
  4036d2:	inc    edx
  4036d3:	add    BYTE PTR [edi+eax*2],ch
  4036d6:	inc    edx
  4036d7:	add    BYTE PTR [eax],dh
  4036d9:	inc    edi
  4036da:	inc    edx
  4036db:	add    BYTE PTR [edi+eax*2],dh
  4036de:	inc    edx
  4036df:	add    BYTE PTR [eax],bh
  4036e1:	inc    edi
  4036e2:	inc    edx
  4036e3:	add    BYTE PTR [edi+eax*2],bh
  4036e6:	inc    edx
  4036e7:	add    BYTE PTR [eax+0x47],al
  4036ea:	inc    edx
  4036eb:	add    BYTE PTR [edi+eax*2+0x42],al
  4036ef:	add    BYTE PTR [eax+0x47],cl
  4036f2:	inc    edx
  4036f3:	add    BYTE PTR [edi+eax*2+0x42],cl
  4036f7:	add    BYTE PTR [eax-0x4bffbdb9],dh
  4036fd:	inc    edi
  4036fe:	inc    edx
  4036ff:	add    BYTE PTR [eax-0x43ffbdb9],bh
  403705:	inc    edi
  403706:	inc    edx
  403707:	add    al,al
  403709:	inc    edi
  40370a:	inc    edx
  40370b:	add    ah,al
  40370d:	inc    edi
  40370e:	inc    edx
  40370f:	add    al,cl
  403711:	inc    edi
  403712:	inc    edx
  403713:	add    ah,cl
  403715:	inc    edi
  403716:	inc    edx
  403717:	add    al,dl
  403719:	inc    edi
  40371a:	inc    edx
  40371b:	add    BYTE PTR [eax-0x6bffbdb8],dl
  403721:	dec    eax
  403722:	inc    edx
  403723:	add    ah,dl
  403725:	inc    edi
  403726:	inc    edx
  403727:	add    al,bl
  403729:	inc    edi
  40372a:	inc    edx
  40372b:	add    ah,bl
  40372d:	inc    edi
  40372e:	inc    edx
  40372f:	add    ah,al
  403731:	inc    edi
  403732:	inc    edx
  403733:	add    al,ah
  403735:	inc    edi
  403736:	inc    edx
  403737:	add    ah,ah
  403739:	inc    edi
  40373a:	inc    edx
  40373b:	add    al,ch
  40373d:	inc    edi
  40373e:	inc    edx
  40373f:	add    ah,ch
  403741:	inc    edi
  403742:	inc    edx
  403743:	add    al,dh
  403745:	inc    edi
  403746:	inc    edx
  403747:	add    ah,dh
  403749:	inc    edi
  40374a:	inc    edx
  40374b:	add    ah,ch
  40374d:	inc    edi
  40374e:	inc    edx
  40374f:	add    al,bh
  403751:	inc    edi
  403752:	inc    edx
  403753:	add    ah,bh
  403755:	inc    edi
  403756:	inc    edx
  403757:	add    BYTE PTR [eax-0x2bffbdb8],bl
  40375d:	inc    edi
  40375e:	inc    edx
  40375f:	add    BYTE PTR [eax],al
  403761:	dec    eax
  403762:	inc    edx
  403763:	add    al,bh
  403765:	inc    edi
  403766:	inc    edx
  403767:	add    BYTE PTR [eax+ecx*2+0x47d40042],bl
  40376e:	inc    edx
  40376f:	add    BYTE PTR [eax+ecx*2],al
  403772:	inc    edx
  403773:	add    al,ah
  403775:	inc    edi
  403776:	inc    edx
  403777:	add    BYTE PTR [eax],cl
  403779:	dec    eax
  40377a:	inc    edx
  40377b:	add    BYTE PTR [eax+ecx*2],cl
  40377e:	inc    edx
  40377f:	add    BYTE PTR [eax],dl
  403781:	dec    eax
  403782:	inc    edx
  403783:	add    BYTE PTR [eax-0x5bffbdb8],ah
  403789:	dec    eax
  40378a:	inc    edx
  40378b:	add    BYTE PTR [eax+ecx*2],dl
  40378e:	inc    edx
  40378f:	add    BYTE PTR [eax],bl
  403791:	dec    eax
  403792:	inc    edx
  403793:	add    BYTE PTR [eax+ecx*2],bl
  403796:	inc    edx
  403797:	add    BYTE PTR [eax],ah
  403799:	dec    eax
  40379a:	inc    edx
  40379b:	add    BYTE PTR [eax+ecx*2],ah
  40379e:	inc    edx
  40379f:	add    BYTE PTR [eax],ch
  4037a1:	dec    eax
  4037a2:	inc    edx
  4037a3:	add    ah,dh
  4037a5:	inc    edi
  4037a6:	inc    edx
  4037a7:	add    BYTE PTR [eax+ecx*2],ch
  4037aa:	inc    edx
  4037ab:	add    al,bl
  4037ad:	inc    edi
  4037ae:	inc    edx
  4037af:	add    BYTE PTR [eax],dh
  4037b1:	dec    eax
  4037b2:	inc    edx
  4037b3:	add    BYTE PTR [eax+ecx*2],dh
  4037b6:	inc    edx
  4037b7:	add    BYTE PTR [eax],bh
  4037b9:	dec    eax
  4037ba:	inc    edx
  4037bb:	add    BYTE PTR [eax+ecx*2],cl
  4037be:	inc    edx
  4037bf:	add    BYTE PTR [eax+0x3c004248],bl
  4037c5:	dec    eax
  4037c6:	inc    edx
  4037c7:	add    BYTE PTR [eax+0x48],al
  4037ca:	inc    edx
  4037cb:	add    BYTE PTR [eax+ecx*2],cl
  4037ce:	inc    edx
  4037cf:	add    BYTE PTR [eax+ecx*2+0x42],al
  4037d3:	add    ah,dh
  4037d5:	inc    edi
  4037d6:	inc    edx
  4037d7:	add    al,al
  4037d9:	inc    edi
  4037da:	inc    edx
  4037db:	add    BYTE PTR [eax+ecx*2],ch
  4037de:	inc    edx
  4037df:	add    BYTE PTR [eax+0x48],cl
  4037e2:	inc    edx
  4037e3:	add    BYTE PTR [eax+ecx*2+0x42],cl
  4037e7:	add    BYTE PTR [eax+ecx*2+0x48500042],dl
  4037ee:	inc    edx
  4037ef:	add    BYTE PTR [eax+ecx*2+0x42],dl
  4037f3:	add    BYTE PTR [eax+0x48],bl
  4037f6:	inc    edx
  4037f7:	add    BYTE PTR [eax+0x48],dl
  4037fa:	inc    edx
  4037fb:	add    BYTE PTR [eax+0x30004248],bl
  403801:	dec    eax
  403802:	inc    edx
  403803:	add    BYTE PTR [eax-0x53ffbdb8],ch
  403809:	dec    eax
  40380a:	inc    edx
  40380b:	add    BYTE PTR [eax-0x2fffbdb8],dh
  403811:	inc    edi
  403812:	inc    edx
  403813:	add    BYTE PTR [eax+ecx*2],dh
  403816:	inc    edx
  403817:	add    BYTE PTR [eax+ecx*2+0x47b80042],dh
  40381e:	inc    edx
  40381f:	add    BYTE PTR [eax+ecx*2+0x42],bl
  403823:	add    BYTE PTR [eax+ecx*2],bh
  403826:	inc    edx
  403827:	add    BYTE PTR [eax+0x48],ah
  40382a:	inc    edx
  40382b:	add    ah,dh
  40382d:	inc    edi
  40382e:	inc    edx
  40382f:	add    BYTE PTR [eax+ecx*2+0x42],ah
  403833:	add    BYTE PTR [eax+0x48],ch
  403836:	inc    edx
  403837:	add    BYTE PTR [eax+ecx*2+0x42],ch
  40383b:	add    ah,dh
  40383d:	inc    edi
  40383e:	inc    edx
  40383f:	add    BYTE PTR [eax+ecx*2],al
  403842:	inc    edx
  403843:	add    BYTE PTR [eax+0x48],dh
  403846:	inc    edx
  403847:	add    al,al
  403849:	inc    edi
  40384a:	inc    edx
  40384b:	add    BYTE PTR [eax+ecx*2],al
  40384e:	inc    edx
  40384f:	add    ah,ch
  403851:	inc    edi
  403852:	inc    edx
  403853:	add    BYTE PTR [eax+0x48],ch
  403856:	inc    edx
  403857:	add    ah,al
  403859:	inc    edi
  40385a:	inc    edx
  40385b:	add    BYTE PTR [eax-0x2bffbdb8],bh
  403861:	inc    edi
  403862:	inc    edx
  403863:	add    BYTE PTR [eax+ecx*2+0x42],dh
  403867:	add    BYTE PTR [edi+eax*2+0x48780042],dh
  40386e:	inc    edx
  40386f:	add    BYTE PTR [eax+ecx*2+0x42],bh
  403873:	add    BYTE PTR [eax],ah
  403875:	dec    eax
  403876:	inc    edx
  403877:	add    BYTE PTR [eax+ecx*2+0x48800042],bh
  40387e:	inc    edx
  40387f:	add    BYTE PTR [eax+ecx*2+0x48880042],al
  403886:	inc    edx
  403887:	add    BYTE PTR [eax],al
  403889:	add    al,BYTE PTR [eax]
  40388b:	add    bh,dh
  40388d:	bound  eax,QWORD PTR [esi]
  40388f:	add    bh,bl
  403891:	bound  eax,QWORD PTR [esi]
  403893:	add    BYTE PTR [ebx+0x50],ch
  403896:	xchg   esi,eax
  403897:	xor    cl,BYTE PTR [ebx-0x74cd61af]
  40389d:	push   ecx
  40389e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40389f:	xor    bl,BYTE PTR [ebx-0x8cd51af]
  4038a5:	add    al,BYTE PTR [edi]
  4038a7:	add    BYTE PTR [ebx],ah
  4038a9:	arpl   WORD PTR [esi],ax
  4038ab:	add    BYTE PTR [esi+ebx*2],dl
  4038ae:	lea    edi,ds:0x3d9c5e67
  4038b4:	pop    eax
  4038b5:	pop    esi
  4038b6:	scas   al,BYTE PTR es:[edi]
  4038b7:	cmp    eax,0x3dd55e61
  4038bc:	leave  
  4038bd:	pop    esi
  4038be:	out    dx,al
  4038bf:	cmp    eax,0x3e2b5cfb
  4038c4:	sub    al,0x5d
  4038c6:	push   edi
  4038c7:	ds cs pop ebp
  4038ca:	fstp   TBYTE PTR [esi]
  4038cc:	xchg   ebx,eax
  4038cd:	pop    esp
  4038ce:	push   es
  4038cf:	add    bh,dh
  4038d1:	adc    al,BYTE PTR [edi]
  4038d3:	add    BYTE PTR [edi+0x38000663],bl
  4038d9:	push   ebx
  4038da:	retf   
  4038db:	xor    BYTE PTR [edx+0x53],al
  4038de:	add    dh,BYTE PTR [ecx]
  4038e0:	repnz push ecx
  4038e2:	and    DWORD PTR [ecx],esi
  4038e4:	cdq    
  4038e5:	push   edx
  4038e6:	lds    esi,FWORD PTR [ecx]
  4038e8:	sub    al,0x52
  4038ea:	out    dx,eax
  4038eb:	xor    DWORD PTR [eax+0x52],ebx
  4038ee:	stc    
  4038ef:	xor    DWORD PTR [eax],eax
	...
  4038f9:	add    BYTE PTR [eax],al
  4038fb:	add    bl,dh
  4038fd:	push   eax
  4038fe:	adc    al,0x32
  403900:	adc    DWORD PTR [ecx+0x37],edx
  403903:	xor    ch,dh
  403905:	push   eax
  403906:	cmp    DWORD PTR [edx],esi
  403908:	mov    dl,0x50
  40390a:	pop    esi
  40390b:	xor    dh,BYTE PTR [esi]
  40390d:	push   ecx
  40390e:	shl    DWORD PTR [edx],0x71
  403911:	push   eax
  403912:	lea    esi,[ebx]
  403914:	jb     0x403966
  403916:	mov    al,ds:0xcb504733
  40391b:	xor    ebx,DWORD PTR [ebx]
  40391d:	push   eax
  40391e:	in     al,dx
  40391f:	xor    esi,ebp
  403921:	push   esi
  403922:	daa    
  403923:	xor    al,0x41
  403925:	push   edi
  403926:	push   ecx
  403927:	xor    al,0x4b
  403929:	push   edi
  40392a:	gs xor al,0x5e
  40392d:	push   edi
  40392e:	test   BYTE PTR [edi+ebp*2],dh
  403931:	push   esi
  403932:	xchg   edi,eax
  403933:	xor    al,0x68
  403935:	push   esi
  403936:	cwde   
  403937:	xor    al,0x9a
  403939:	push   esi
  40393a:	mov    ebx,0xd256b534
  40393f:	xor    al,0x9a
  403941:	push   esi
  403942:	loope  0x403978
  403944:	test   eax,0x7350456
  403949:	push   esi
  40394a:	dec    esi
  40394b:	xor    eax,0x35525631
  403950:	adc    dl,BYTE PTR [esi+0x6c]
  403953:	xor    eax,0x35b85575
  403958:	mov    edi,0x9635d355
  40395d:	push   ebp
  40395e:	in     eax,dx
  40395f:	xor    eax,0x0
	...
  40396c:	adc    DWORD PTR [ebp-0x8],0x35
  403970:	(bad)  
  403971:	push   esp
  403972:	or     BYTE PTR [esi],dh
  403974:	add    edx,DWORD PTR [ebp+0x1b]
  403977:	adc    BYTE PTR ss:[ebp+0x32],dl
  40397b:	ss sbb eax,0xba363955
  403981:	push   esp
  403982:	dec    edi
  403983:	ss mov ecx,0xd5365254
  403989:	push   esp
  40398a:	outs   dx,BYTE PTR ds:[esi]
  40398b:	ss retf 0x7454
  40398f:	adc    BYTE PTR ss:[esp+ebx*4+0x36],0x31
  403995:	push   esp
  403996:	retf   0x4536
  403999:	push   esp
  40399a:	fidiv  DWORD PTR [esi]
  40399c:	icebp  
  40399d:	push   ebx
  40399e:	sub    eax,0x4a53cf37
  4039a3:	aaa    
  4039a4:	mov    eax,ds:0x8e376553
  4039a9:	push   ebx
  4039aa:	ja     0x4039e3
  4039ac:	jle    0x403a01
  4039ae:	xor    BYTE PTR [edi],0x83
  4039b1:	push   edx
  4039b2:	fwait
  4039b3:	aaa    
  4039b4:	xchg   ebp,eax
  4039b5:	push   edx
  4039b6:	mov    bh,0x37
  4039b8:	mov    edx,0xc137c852
  4039bd:	push   edx
  4039be:	jecxz  0x4039f7
  4039c0:	mul    DWORD PTR [edx+0x6]
  4039c3:	add    bh,dh
  4039c5:	bound  eax,QWORD PTR [esi]
  4039c7:	add    bh,dh
  4039c9:	bound  eax,QWORD PTR [esi]
  4039cb:	add    bh,dh
  4039cd:	bound  eax,QWORD PTR [esi]
	...
  4039db:	add    bh,dh
  4039dd:	bound  eax,QWORD PTR [esi]
  4039df:	add    bh,dh
  4039e1:	bound  eax,QWORD PTR [esi]
  4039e3:	add    bh,dh
  4039e5:	bound  eax,QWORD PTR [esi]
  4039e7:	add    bh,dh
  4039e9:	bound  eax,QWORD PTR [esi]
  4039eb:	add    bh,dh
  4039ed:	bound  eax,QWORD PTR [esi]
  4039ef:	add    bh,dh
  4039f1:	bound  eax,QWORD PTR [esi]
  4039f3:	add    bh,dh
  4039f5:	bound  eax,QWORD PTR [esi]
  4039f7:	add    bh,dh
  4039f9:	bound  eax,QWORD PTR [esi]
  4039fb:	add    bh,dh
  4039fd:	bound  eax,QWORD PTR [esi]
  4039ff:	add    bh,dh
  403a01:	bound  eax,QWORD PTR [esi]
  403a03:	add    bh,dh
  403a05:	bound  eax,QWORD PTR [esi]
  403a07:	add    bh,dh
  403a09:	bound  eax,QWORD PTR [esi]
  403a0b:	add    bh,dh
  403a0d:	bound  eax,QWORD PTR [esi]
  403a0f:	add    bh,dh
  403a11:	bound  eax,QWORD PTR [esi]
  403a13:	add    bh,dh
  403a15:	bound  eax,QWORD PTR [esi]
  403a17:	add    bh,dh
  403a19:	bound  eax,QWORD PTR [esi]
  403a1b:	add    bh,dh
  403a1d:	bound  eax,QWORD PTR [esi]
  403a1f:	add    bh,dh
  403a21:	bound  eax,QWORD PTR [esi]
  403a23:	add    bh,dh
  403a25:	bound  eax,QWORD PTR [esi]
  403a27:	add    bh,dh
  403a29:	bound  eax,QWORD PTR [esi]
  403a2b:	add    bh,dh
  403a2d:	bound  eax,QWORD PTR [esi]
  403a2f:	add    bh,dh
  403a31:	bound  eax,QWORD PTR [esi]
  403a33:	add    bh,dh
  403a35:	bound  eax,QWORD PTR [esi]
  403a37:	add    bh,dh
  403a39:	bound  eax,QWORD PTR [esi]
  403a3b:	add    bh,dh
  403a3d:	bound  eax,QWORD PTR [esi]
	...
  403a4b:	add    bh,dh
  403a4d:	bound  eax,QWORD PTR [esi]
  403a4f:	add    bh,dh
  403a51:	bound  eax,QWORD PTR [esi]
  403a53:	add    bh,dh
  403a55:	bound  eax,QWORD PTR [esi]
  403a57:	add    bh,dh
  403a59:	bound  eax,QWORD PTR [esi]
  403a5b:	add    bh,dh
  403a5d:	bound  eax,QWORD PTR [esi]
  403a5f:	add    bh,dh
  403a61:	bound  eax,QWORD PTR [esi]
  403a63:	add    bh,dh
  403a65:	bound  eax,QWORD PTR [esi]
  403a67:	add    bh,dh
  403a69:	bound  eax,QWORD PTR [esi]
  403a6b:	add    bh,dh
  403a6d:	bound  eax,QWORD PTR [esi]
  403a6f:	add    bh,dh
  403a71:	bound  eax,QWORD PTR [esi]
  403a73:	add    bh,dh
  403a75:	bound  eax,QWORD PTR [esi]
  403a77:	add    bh,dh
  403a79:	bound  eax,QWORD PTR [esi]
  403a7b:	add    bh,dh
  403a7d:	bound  eax,QWORD PTR [esi]
  403a7f:	add    bh,dh
  403a81:	bound  eax,QWORD PTR [esi]
  403a83:	add    bh,dh
  403a85:	bound  eax,QWORD PTR [esi]
  403a87:	add    bh,dh
  403a89:	bound  eax,QWORD PTR [esi]
  403a8b:	add    bh,dh
  403a8d:	bound  eax,QWORD PTR [esi]
  403a8f:	add    bh,dh
  403a91:	bound  eax,QWORD PTR [esi]
  403a93:	add    bh,dh
  403a95:	bound  eax,QWORD PTR [esi]
  403a97:	add    bh,dh
  403a99:	bound  eax,QWORD PTR [esi]
  403a9b:	add    bh,dh
  403a9d:	bound  eax,QWORD PTR [esi]
  403a9f:	add    bh,dh
  403aa1:	bound  eax,QWORD PTR [esi]
  403aa3:	add    bh,dh
  403aa5:	bound  eax,QWORD PTR [esi]
  403aa7:	add    bh,dh
  403aa9:	bound  eax,QWORD PTR [esi]
  403aab:	add    bh,dh
  403aad:	bound  eax,QWORD PTR [esi]
	...
  403abb:	add    bh,dh
  403abd:	bound  eax,QWORD PTR [esi]
  403abf:	add    bh,dh
  403ac1:	bound  eax,QWORD PTR [esi]
  403ac3:	add    bh,dh
  403ac5:	bound  eax,QWORD PTR [esi]
  403ac7:	add    BYTE PTR [eax],al
  403ac9:	ja     0x403acc
  403acb:	add    bh,dh
  403acd:	sbb    eax,DWORD PTR [edi+0x0]
  403ad0:	mov    eax,0x85507207
  403ad5:	or     eax,0x75b4165
  403ada:	je     0x403b41
  403adc:	adc    BYTE PTR fs:[esi],al
  403adf:	add    BYTE PTR [ebx],dh
  403ae1:	or     al,0x67
  403ae3:	sub    ecx,DWORD PTR fs:[edx]
  403ae6:	fs jb  0x403b3f
  403ae9:	adc    DWORD PTR [edi+0x45],edi
  403aec:	dec    edi
  403aed:	and    al,BYTE PTR [esi]
  403aef:	add    BYTE PTR [ebx],dh
  403af1:	or     al,0x67
  403af3:	sub    ecx,DWORD PTR fs:[edx]
  403af6:	fs jb  0x403b0f
  403af9:	adc    DWORD PTR [edi+0x45],edi
  403afc:	das    
  403afd:	xor    al,0x6
  403aff:	add    BYTE PTR [eax],bh
  403b01:	push   es
  403b02:	jb     0x403b51
  403b04:	or     BYTE PTR [edi],al
  403b06:	jae    0x403b74
  403b08:	sbb    ch,BYTE PTR [ebx]
  403b0a:	outs   dx,BYTE PTR ds:[si]
  403b0c:	adc    ecx,DWORD PTR [edi]
  403b0e:	arpl   WORD PTR [ecx-0x9],ax
  403b11:	bound  eax,QWORD PTR [esi]
  403b13:	add    BYTE PTR [ecx+edx*1],dh
  403b16:	arpl   WORD PTR [ecx-0x15],sp
  403b19:	add    eax,0x5db6940
  403b1e:	inc    edi
  403b1f:	add    bl,dl
  403b21:	(bad)  
  403b23:	jb     0x403af9
  403b25:	add    DWORD PTR [edx+0x41],esi
  403b28:	mul    DWORD PTR [edx+0x6]
  403b2b:	add    BYTE PTR [eax+0x577205],dh
	...
  403b39:	add    BYTE PTR [eax],al
  403b3b:	add    dh,cl
  403b3d:	or     al,0x62
  403b3f:	outs   dx,DWORD PTR ds:[esi]
  403b40:	ror    BYTE PTR [edi],0x42
  403b43:	imul   esp,DWORD PTR [ebp-0x678b9afb],0xf7417f10
  403b4d:	bound  eax,QWORD PTR [esi]
  403b4f:	add    BYTE PTR [eax-0x5fb28dfb],dh
  403b55:	push   es
  403b56:	jae    0x403bc4
  403b58:	xchg   edx,eax
  403b59:	sub    ah,BYTE PTR [edi+0x6e]
  403b5c:	fwait
  403b5d:	push   cs
  403b5e:	arpl   WORD PTR [edi-0x9],dx
  403b61:	bound  eax,QWORD PTR [esi]
  403b63:	add    bl,bh
  403b65:	pusha  
  403b66:	inc    esi
  403b67:	add    BYTE PTR [ebx],al
  403b69:	popa   
  403b6a:	inc    esi
  403b6b:	add    BYTE PTR [ebx],bl
  403b6d:	popa   
  403b6e:	inc    esi
  403b6f:	add    BYTE PTR [ebx],ah
  403b71:	popa   
  403b72:	inc    esi
  403b73:	add    BYTE PTR [edi],bh
  403b75:	popa   
  403b76:	inc    esi
  403b77:	add    BYTE PTR [ebx],ah
  403b79:	popa   
  403b7a:	inc    esi
  403b7b:	add    BYTE PTR [edi+0x61],dl
  403b7e:	inc    esi
  403b7f:	add    BYTE PTR [edi],bh
  403b81:	popa   
  403b82:	inc    esi
  403b83:	add    BYTE PTR [eax],bh
  403b85:	push   es
  403b86:	jb     0x403bd8
  403b88:	and    eax,0x1b41650c
  403b8d:	pop    es
  403b8e:	je     0x403bf5
  403b90:	and    al,0x10
  403b92:	push   es
  403b93:	add    BYTE PTR [ebx+0xc],al
  403b96:	cmp    ecx,DWORD PTR fs:[bp+si]
  403b9a:	fs jb  0x403bb3
  403b9d:	adc    DWORD PTR [edi+0x45],edi
	...
  403bac:	jmp    DWORD PTR [ecx]
  403bae:	push   es
  403baf:	add    ah,bl
  403bb1:	add    eax,0xed26e74
  403bb6:	xor    eax,0x6a071132
  403bbb:	ins    BYTE PTR es:[edi],dx
  403bbc:	mul    DWORD PTR [edx+0x6]
  403bbf:	add    dl,ah
  403bc1:	pshufw mm4,QWORD PTR [ebx-0x3b],0x16
  403bc6:	sub    BYTE PTR [ebx+edx*8+0xe],ah
  403bca:	push   es
  403bcb:	add    dl,cl
  403bcd:	add    eax,0x169a736b
  403bd2:	push   es
  403bd3:	add    BYTE PTR [edx-0x5a9c8ff1],bl
  403bd9:	push   ss
  403bda:	sub    BYTE PTR [ebx+ecx*4+0xe],ah
  403bde:	push   es
  403bdf:	add    BYTE PTR [edx-0x789c94fb],ah
  403be5:	sbb    DWORD PTR [esi],eax
  403be7:	add    BYTE PTR [ecx-0x7d8b8bf7],ch
  403bed:	add    DWORD PTR [edx+0x41],ebp
  403bf0:	arpl   WORD PTR [edi],ax
  403bf2:	imul   esp,DWORD PTR [ebx-0x9],0x49000662
  403bf9:	or     al,0x74
  403bfb:	je     0x403c5f
  403bfd:	add    al,0x6a
  403bff:	inc    ecx
  403c00:	arpl   WORD PTR [edi],ax
  403c02:	imul   esp,DWORD PTR [ebx-0x9],0x2a000662
  403c09:	or     DWORD PTR [ebx+0x61],ebp
  403c0c:	inc    edi
  403c0d:	xor    DWORD PTR [edi+0x65],ebp
	...
  403c1c:	sub    BYTE PTR [edx],ch
  403c1e:	pusha  
  403c1f:	inc    esi
  403c20:	push   ds
  403c21:	pop    es
  403c22:	arpl   WORD PTR [eax],ax
  403c24:	dec    ecx
  403c25:	or     al,0x74
  403c27:	je     0x403c4b
  403c29:	add    al,0x6a
  403c2b:	push   eax
  403c2c:	add    eax,0x1465720a
  403c31:	clts   
  403c33:	add    BYTE PTR [edi],ch
  403c35:	add    BYTE PTR [edi+0x70],ah
  403c38:	ss pop es
  403c3a:	push   0x6f
  403c3c:	aam    0x62
  403c3e:	push   es
  403c3f:	add    ah,bl
  403c41:	push   DWORD PTR [ebx+0x6e]
  403c44:	fiadd  DWORD PTR [esi]
  403c46:	xor    eax,0x69ff0932
  403c4b:	ins    BYTE PTR es:[edi],dx
  403c4c:	mul    DWORD PTR [edx+0x6]
  403c4f:	add    BYTE PTR [eax-0x3aaf8e01],dh
  403c55:	or     DWORD PTR [ebp+0x65],esp
  403c58:	les    edx,FWORD PTR ds:0x1296654e
  403c5e:	push   es
  403c5f:	add    bh,dh
  403c61:	bound  esp,QWORD PTR [eax+0x1]
  403c64:	idiv   DWORD PTR [esi-0x73086fa1]
  403c6a:	add    eax,0x587f700
  403c6f:	add    bh,dh
  403c71:	cwde   
  403c72:	std    
  403c73:	add    bh,dh
  403c75:	push   ebx
  403c76:	add    eax,0x58bf700
  403c7b:	add    bh,dh
  403c7d:	dec    ebx
  403c7e:	add    al,BYTE PTR [eax]
	...
  403c8c:	test   DWORD PTR [ebx-0x7408fffb],0x8bf70005
  403c96:	add    eax,0x58bf700
  403c9b:	add    bh,dh
  403c9d:	mov    eax,DWORD PTR ds:0x58bf700
  403ca3:	add    bh,dh
  403ca5:	mov    eax,DWORD PTR ds:0x58bf700
  403cab:	add    bh,dh
  403cad:	or     eax,DWORD PTR [edx]
  403caf:	add    bh,dh
  403cb1:	sbb    DWORD PTR [edx+edi*4],0x9a98be9
  403cb8:	ret    0xbdaa
  403cbb:	add    DWORD PTR [ebx],edi
  403cbd:	(bad)  
  403cbe:	and    edx,DWORD PTR [edi+ecx*1+0x63]
  403cc2:	jno    0x403ce4
  403cc4:	pop    es
  403cc5:	sahf   
  403cc6:	ins    BYTE PTR es:[edi],dx
  403cc7:	addr16 in eax,0xaa
  403cca:	outs   dx,BYTE PTR ds:[esi]
  403ccb:	and    ah,dl
  403ccd:	stos   BYTE PTR es:[edi],al
  403cce:	outs   dx,DWORD PTR ds:[esi]
  403ccf:	outs   dx,BYTE PTR ds:[esi]
  403cd0:	shl    BYTE PTR [edi+0x6bd26225],1
  403cd6:	jo     0x403d4d
  403cd8:	loope  0x403d45
  403cda:	imul   ebp,DWORD PTR [esi+0x17],0xffffffc0
  403cde:	dec    esp
  403cdf:	push   ebx
  403ce0:	pop    ss
  403ce1:	lahf   
  403ce2:	ins    BYTE PTR es:[edi],dx
  403ce3:	rcr    BYTE PTR fs:[ecx+0x62fd0d0e],cl
  403cea:	retf   
  403ceb:	add    esi,edi
  403ced:	(bad)  
  403cee:	out    dx,eax
  403cef:	add    eax,DWORD PTR [eax]
	...
  403cf9:	add    BYTE PTR [eax],al
  403cfb:	add    bh,dh
  403cfd:	bound  edi,QWORD PTR [edi-0x649d08c0]
  403d03:	add    al,0xf4
  403d05:	(bad)  
  403d06:	retf   0xb29c
  403d09:	xor    ch,bh
  403d0b:	add    esi,edi
  403d0d:	(bad)  
  403d0e:	out    dx,eax
  403d0f:	add    esi,edi
  403d11:	bound  ecx,QWORD PTR [edi]
  403d13:	add    al,0x0
  403d15:	(bad)  
  403d16:	hlt    
  403d17:	add    al,0xf5
  403d19:	push   esp
  403d1a:	out    dx,eax
  403d1b:	sbb    esi,esi
  403d1d:	(bad)  
  403d1e:	out    dx,eax
  403d1f:	push   ebp
  403d20:	mul    DWORD PTR [edx-0x11]
  403d23:	add    esi,edi
  403d25:	bound  edx,QWORD PTR [esi]
  403d27:	pop    es
  403d28:	mul    BYTE PTR [edx-0x11]
  403d2b:	adc    esi,edi
  403d2d:	(bad)  
  403d2e:	out    dx,eax
  403d2f:	xor    esi,esi
  403d31:	(bad)  
  403d32:	out    dx,eax
  403d33:	add    esi,DWORD PTR [edi]
  403d35:	arpl   di,bp
  403d37:	adc    esi,edi
  403d39:	(bad)  
  403d3a:	out    dx,eax
  403d3b:	add    eax,0x3eb62f7
  403d40:	mul    DWORD PTR [edx-0x11]
  403d43:	add    esi,edi
  403d45:	(bad)  
  403d46:	jmp    0x403d4b
  403d48:	mul    DWORD PTR [edx-0x11]
  403d4b:	add    esi,edi
  403d4d:	(bad)  
  403d4e:	out    dx,eax
  403d4f:	xchg   ebx,eax
  403d50:	mul    BYTE PTR [edx-0x11]
  403d53:	add    eax,0x96d762f7
  403d58:	mul    BYTE PTR [edx-0x13]
  403d5b:	add    esi,edi
  403d5d:	(bad)  
  403d5e:	out    dx,eax
  403d5f:	add    eax,DWORD PTR [eax]
	...
  403d69:	add    BYTE PTR [eax],al
  403d6b:	add    BYTE PTR [edi],al
  403d6d:	arpl   di,bp
  403d6f:	adc    esi,edi
  403d71:	(bad)  
  403d72:	out    dx,eax
  403d73:	add    esp,edi
  403d75:	(bad)  
  403d76:	out    dx,eax
  403d77:	adc    esi,edi
  403d79:	bound  eax,QWORD PTR [esi]
  403d7b:	jmp    0xd946a074
  403d80:	hlt    
  403d81:	bound  eax,QWORD PTR [esi]
  403d83:	jmp    0xe946a07c
  403d88:	hlt    
  403d89:	bound  eax,QWORD PTR [esi]
  403d8b:	in     eax,dx
  403d8c:	popf   
  403d8d:	popa   
  403d8e:	push   es
  403d8f:	and    esp,esi
  403d91:	bound  eax,QWORD PTR [esi]
  403d93:	jmp    0xe946a08c
  403d98:	hlt    
  403d99:	bound  eax,QWORD PTR [esi]
  403d9b:	jmp    0xe946a094
  403da0:	hlt    
  403da1:	bound  eax,QWORD PTR [esi]
  403da3:	jmp    0xe946a09c
  403da8:	hlt    
  403da9:	bound  eax,QWORD PTR [esi]
  403dab:	jmp    0xe946a0a4
  403db0:	hlt    
  403db1:	bound  eax,QWORD PTR [esi]
  403db3:	jmp    0xe946a0ac
  403db8:	hlt    
  403db9:	bound  eax,QWORD PTR [esi]
  403dbb:	jmp    0xe946a0b4
  403dc0:	hlt    
  403dc1:	bound  eax,QWORD PTR [esi]
  403dc3:	jmp    0xe946a0bc
  403dc8:	hlt    
  403dc9:	bound  eax,QWORD PTR [esi]
  403dcb:	jmp    0xe946a0c4
	...
  403ddc:	hlt    
  403ddd:	bound  eax,QWORD PTR [esi]
  403ddf:	jmp    0xe946a0d8
  403de4:	hlt    
  403de5:	bound  eax,QWORD PTR [esi]
  403de7:	jmp    0xe946a0e0
  403dec:	hlt    
  403ded:	bound  eax,QWORD PTR [esi]
  403def:	lds    esi,FWORD PTR [ebp+0x61]
  403df2:	push   es
  403df3:	jns    0x403de9
  403df5:	bound  eax,QWORD PTR [esi]
  403df7:	jmp    0xe946a0f0
  403dfc:	hlt    
  403dfd:	bound  eax,QWORD PTR [esi]
  403dff:	add    BYTE PTR [esi+0x63],bl
  403e02:	push   es
  403e03:	add    BYTE PTR [esi+0x63],cl
  403e06:	push   es
  403e07:	add    BYTE PTR [esi+0x63],cl
  403e0a:	push   es
  403e0b:	add    BYTE PTR [esi],bl
  403e0d:	arpl   WORD PTR [esi],ax
  403e0f:	add    BYTE PTR [eax+0x7],al
  403e12:	arpl   WORD PTR [eax-0x76],di
  403e15:	arpl   WORD PTR [esi],ax
  403e17:	add    BYTE PTR [ebp+0x72],dl
  403e1a:	pop    es
  403e1b:	add    BYTE PTR [esi],bl
  403e1d:	jae    0x403e25
  403e1f:	add    BYTE PTR [esi],bl
  403e21:	jnp    0x403e2a
  403e23:	add    BYTE PTR [esi],cl
  403e25:	pop    ebp
  403e26:	push   es
  403e27:	add    BYTE PTR [esi],cl
  403e29:	arpl   WORD PTR [esi],ax
  403e2b:	add    dh,bl
  403e2d:	bound  eax,QWORD PTR [esi]
  403e2f:	add    dh,bl
  403e31:	bound  eax,QWORD PTR [esi]
  403e33:	add    dh,ch
  403e35:	pop    esi
  403e36:	push   es
  403e37:	pusha  
  403e38:	lock or al,0x62
  403e3b:	popa   
  403e3c:	sub    al,BYTE PTR [edx]
  403e3e:	push   es
	...
  403e4b:	add    dh,bl
  403e4d:	popa   
  403e4e:	push   es
  403e4f:	add    dh,cl
  403e51:	push   edx
  403e52:	pop    es
  403e53:	add    dh,cl
  403e55:	pusha  
  403e56:	push   es
  403e57:	add    BYTE PTR [esi-0x61fff888],bl
  403e5d:	bound  eax,QWORD PTR [esi]
  403e5f:	add    BYTE PTR [esi-0x71fff99e],cl
  403e65:	bound  eax,QWORD PTR [esi]
  403e67:	add    dh,bl
  403e69:	pop    esi
  403e6a:	push   es
  403e6b:	inc    eax
  403e6c:	mov    al,ds:0xef746736
  403e71:	pop    esi
  403e72:	push   es
  403e73:	add    dh,al
  403e75:	sub    eax,DWORD PTR [esi]
  403e77:	add    BYTE PTR [esi+0x22],bl
  403e7a:	pop    es
  403e7b:	add    BYTE PTR [esi+0x28],bl
  403e7e:	push   es
  403e7f:	add    BYTE PTR [esi+0x6e],cl
  403e82:	pop    es
  403e83:	add    bh,dh
  403e85:	mov    eax,DWORD PTR ds:0x58bf700
  403e8b:	add    bh,dh
  403e8d:	mov    eax,DWORD PTR ds:0x5cbf700
  403e93:	add    BYTE PTR [edi],dh
  403e95:	mov    WORD PTR ds:0x58bf700,es
  403e9b:	add    bh,dh
  403e9d:	mov    eax,DWORD PTR ds:0x58bf700
  403ea3:	add    bh,dh
  403ea5:	(bad)  
  403ea6:	mov    ch,ah
  403ea8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403ea9:	shr    DWORD PTR [ebp+0xf],cl
  403eac:	out    0xcb,eax
  403eae:	add    eax,0xf8
	...
  403ebb:	add    BYTE PTR [ebp-0x7003d76],al
  403ec1:	push   ss
  403ec2:	or     eax,0x5e1f66a
  403ec7:	call   0x42f738
  403ecc:	scas   al,BYTE PTR es:[edi]
  403ecd:	leave  
  403ece:	push   es
  403ecf:	add    BYTE PTR [edx+0x1],al
  403ed2:	out    dx,al
  403ed3:	push   eax
  403ed4:	das    
  403ed5:	and    al,0x20
  403ed7:	adc    BYTE PTR [edi],dh
  403ed9:	mov    ebp,?
  403edb:	jb     0x403ed3
  403edd:	enter  0x83f1,0x3a
  403ee1:	test   BYTE PTR ds:0x5700fc74,al
  403ee7:	or     BYTE PTR [ecx+ebx*4-0x10],bh
  403eeb:	jne    0x403edc
  403eed:	hlt    
  403eee:	push   esp
  403eef:	or     BYTE PTR [esi+0x2a0006c9],ch
  403ef5:	add    esi,ebp
  403ef7:	xor    DWORD PTR [ebx+0xf5852e3],0x6f
  403efe:	adc    al,BYTE PTR [eax-0x9]
  403f01:	adc    esi,DWORD PTR [ecx+eax*1+0x34]
  403f05:	add    al,0xf1
  403f07:	jne    0x403f04
  403f09:	bound  esi,QWORD PTR [eax+0x41]
  403f0c:	pop    edi
  403f0d:	popf   
  403f0e:	mov    ds:0xef62f7f7,al
  403f13:	add    edi,DWORD PTR [edi+ebp*1-0x19]
  403f17:	mov    ah,ch
  403f19:	or     bh,ch
  403f1b:	test   dl,0x72
  403f1e:	cmp    BYTE PTR [ecx+0x0],dh
	...
  403f29:	add    BYTE PTR [eax],al
  403f2b:	add    BYTE PTR [ebx],bh
  403f2d:	xchg   ebp,eax
  403f2e:	mov    edx,0xe70f30fb
  403f33:	test   ch,0x6e
  403f36:	ss ret 0x62f3
  403f3a:	mov    dl,0x8a
  403f3c:	or     esp,ecx
  403f3e:	sub    edi,esp
  403f40:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403f41:	cmp    al,BYTE PTR [edi-0x10dd187b]
  403f47:	sti    
  403f48:	test   DWORD PTR [ebx+0x2c],esp
  403f4b:	div    DWORD PTR [eax]
  403f4d:	pop    ds
  403f4e:	test   DWORD PTR [ebx],0xbeef62f7
  403f54:	xor    dl,BYTE PTR [edi+0x62f703ef]
  403f5a:	je     0x403fac
  403f5c:	out    dx,eax
  403f5d:	out    0xfd,eax
  403f5f:	mov    BYTE PTR [edx],bh
  403f61:	fwait
  403f62:	aas    
  403f63:	push   0xfffffff5
  403f65:	xchg   ebx,eax
  403f66:	cmp    bh,al
  403f68:	ror    BYTE PTR [esi],0xc7
  403f6b:	test   BYTE PTR [edx+0x6b],0xb0
  403f6f:	push   ecx
  403f70:	or     ebp,eax
  403f72:	and    bh,ah
  403f74:	mov    esi,0x4a03eba1
  403f79:	call   0x9bf3c209
  403f7e:	aas    
  403f7f:	pop    esp
  403f80:	pop    ds
  403f81:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403f82:	inc    DWORD PTR [ebx-0x9]
  403f85:	call   0x40a0:0x94b404fd
  403f8c:	jg     0x403ff1
  403f8e:	push   es
  403f8f:	jmp    0x403f94
	...
  403f9c:	hlt    
  403f9d:	(bad)
  403fa2:	push   es
  403fa3:	jmp    0xf194279c
  403fa8:	ins    DWORD PTR es:[edi],dx
  403fa9:	jno    0x403f36
  403fab:	lods   al,BYTE PTR ds:[esi]
  403fac:	dec    esp
  403fad:	xor    ebp,DWORD PTR [eax+ebp*8+0x41]
  403fb1:	push   cs
  403fb2:	cli    
  403fb3:	inc    esi
  403fb4:	(bad)  
  403fb5:	call   0xdd54:0x93ecb4f9
  403fbc:	sub    DWORD PTR [esi],ecx
  403fbe:	push   cs
  403fbf:	inc    ecx
  403fc0:	jne    0x403f56
  403fc2:	stc    
  403fc3:	es (bad) 
  403fc5:	out    0x53,eax
  403fc7:	icebp  
  403fc8:	ins    DWORD PTR es:[edi],dx
  403fc9:	jno    0x404037
  403fcb:	jmp    0x9539a26e
  403fd0:	add    BYTE PTR [ebx+esi*2+0xe0e0901],dl
  403fd7:	(bad)  
  403fd8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403fd9:	outs   dx,BYTE PTR ds:[esi]
  403fda:	pop    esi
  403fdb:	bound  eax,QWORD PTR [edi-0x65]
  403fde:	add    eax,0xd657f094
  403fe3:	pop    edi
  403fe4:	loope  0x40402e
  403fe6:	(bad)  
  403fe7:	mov    al,0xb5
  403fe9:	push   0x6
  403feb:	xchg   ecx,eax
  403fec:	hlt    
  403fed:	bound  eax,QWORD PTR [esi]
  403fef:	jmp    0xe94ee0b1
  403ff4:	xor    eax,ebp
  403ff6:	jmp    0x2311:0x5696b76a
  403ffd:	pop    eax
  403ffe:	pop    ss
  403fff:	sub    DWORD PTR [eax],eax
	...
  404009:	add    BYTE PTR [eax],al
  40400b:	add    bl,dh
  40400d:	call   0x14f9:0x93b7e874
  404014:	add    edx,DWORD PTR [ebx+esi*2-0x6f1631f]
  40401b:	mov    es,WORD PTR [edx-0x7cff3999]
  404021:	xchg   ebx,eax
  404022:	into   
  404023:	ret    0x5f8a
  404026:	lea    edx,[ebp+0x56]
  404029:	jmp    0xff56:0x9b138d14
  404030:	inc    ebx
  404031:	outs   dx,DWORD PTR ds:[esi]
  404032:	stc    
  404033:	jne    0x40407f
  404035:	mov    ?,WORD PTR [ebx+0x8]
  404038:	test   eax,0x1e850a30
  40403d:	pop    ss
  40403e:	adc    eax,0x3d8b938b
  404043:	inc    ebp
  404044:	push   ds
  404045:	add    al,0x1
  404047:	mov    eax,0x65f1f
  40404c:	mov    ch,0x94
  40404e:	sub    al,0xc0
  404050:	add    eax,0xe7c02d61
  404055:	mov    al,ds:0xea53000a
  40405a:	jmp    0x5650:0x509ad283
  404061:	pop    es
  404062:	xchg   ebp,eax
  404063:	adc    DWORD PTR [esi+0x5f],ecx
  404066:	(bad)  
  404067:	jb     0x404048
  404069:	mov    ds:0x6a5b83f9,eax
  40406e:	push   es
  40406f:	je     0x404071
	...
  404079:	add    BYTE PTR [eax],al
  40407b:	add    al,dl
  40407d:	jecxz  0x4040fa
  40407f:	or     dh,cl
  404081:	add    DWORD PTR [ecx],eax
  404083:	sub    ebx,DWORD PTR [esi-0x553d30c8]
  404089:	test   WORD PTR [ebp-0x62],di
  40408d:	data16 jae 0x40409a
  404090:	jbe    0x4040f7
  404092:	push   es
  404093:	add    BYTE PTR [esi-0x353d30c8],bl
  404099:	lea    si,[ebp-0x56]
  40409d:	iret   
  40409e:	inc    ebx
  40409f:	cld    
  4040a0:	mov    fs,WORD PTR [esi+0x6]
  4040a3:	add    bh,dh
  4040a5:	add    al,0x48
  4040a7:	or     BYTE PTR [esi+ecx*4-0x80],bh
  4040ab:	inc    ebp
  4040ac:	sub    DWORD PTR [ebx+esi*8+0x75],0xffffffe7
  4040b1:	jns    0x4040a6
  4040b3:	jne    0x4040b4
  4040b5:	sbb    BYTE PTR [edi+0x10],dl
  4040b8:	jb     0x404076
  4040ba:	jl     0x4040c3
  4040bc:	or     al,0x3c
  4040be:	push   ebx
  4040bf:	leave  
  4040c0:	xor    eax,0xd2830580
  4040c5:	aaa    
  4040c6:	add    eax,0xc264f075
  4040cb:	pop    esi
  4040cc:	cs add DWORD PTR ds:[eax],eax
  4040d0:	ins    BYTE PTR es:[edi],dx
  4040d1:	(bad)  
  4040d2:	icebp  
  4040d3:	add    esp,DWORD PTR [edi]
  4040d5:	arpl   WORD PTR [ecx],di
  4040d7:	adc    BYTE PTR [edx-0x8fe42b9],ah
  4040dd:	jnp    0x4040e4
  4040df:	pop    esi
	...
  4040ec:	cs add DWORD PTR ds:[eax],eax
  4040f0:	stos   BYTE PTR es:[edi],al
  4040f1:	add    al,0xe1
  4040f3:	xor    DWORD PTR [ebx],0xffe274
  4040f9:	in     al,dx
  4040fa:	pop    ebp
  4040fb:	push   0x45ade3
  404100:	out    dx,eax
  404101:	or     eax,0xe5e8c304
  404106:	add    eax,0x135f76a
  40410b:	push   0xfffffff7
  40410d:	xor    eax,0x7bf76801
  404112:	add    eax,0xfa36c880
  404117:	out    0x4,eax
  404119:	retf   
  40411a:	add    al,BYTE PTR [eax]
  40411c:	outs   dx,BYTE PTR ds:[esi]
  40411d:	inc    esi
  40411e:	test   BYTE PTR [eax+0x2a],0x80
  404122:	mov    edx,0x5b7bffc2
  404127:	add    BYTE PTR [edx+0x62],dh
  40412a:	sub    ch,ah
  40412c:	inc    edi
  40412d:	sti    
  40412e:	out    dx,al
  40412f:	adc    esi,edi
  404131:	bound  esp,QWORD PTR [edx-0x77]
  404134:	pop    DWORD PTR [ecx-0x6dd80c78]
  40413a:	cli    
  40413b:	out    dx,eax
  40413c:	(bad)  
  40413d:	ja     0x4041bd
  40413f:	add    al,0xf7
  404141:	pop    ebp
  404142:	scas   eax,DWORD PTR es:[edi]
  404143:	jns    0x40413e
  404145:	xchg   ecx,eax
  404146:	repnz out dx,eax
  404148:	dec    edi
  404149:	popa   
  40414a:	pop    esi
  40414b:	add    al,0xf7
  40414d:	cmp    eax,0xbd2f
	...
  40415a:	add    BYTE PTR [eax],al
  40415c:	xor    eax,0xc2f2ef5a
  404161:	mov    bl,BYTE PTR [edx-0x77]
  404164:	aas    
  404165:	add    DWORD PTR [eax-0xd],0xffb291a7
  40416c:	sbb    BYTE PTR [edi+0x30],bl
  40416f:	repz sub ch,ah
  404172:	stos   BYTE PTR es:[edi],al
  404173:	jmp    0x40416c
  404175:	pop    ss
  404176:	arpl   bx,si
  404178:	mov    ds:0x7dd178e,al
  40417d:	(bad)  
  40417e:	out    dx,eax
  40417f:	stos   DWORD PTR es:[edi],eax
  404180:	mul    BYTE PTR [edx-0x11]
  404183:	add    ebp,DWORD PTR [esi]
  404185:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404186:	test   DWORD PTR [ebx],0x540bdda2
  40418c:	dec    edi
  40418d:	sti    
  40418e:	push   ebp
  40418f:	push   ss
  404190:	aaa    
  404191:	arpl   di,si
  404193:	jne    0x40418b
  404195:	mov    ds:0xfcf55de0,eax
  40419a:	out    dx,al
  40419b:	repnz dec edx
  40419d:	pop    ebx
  40419e:	(bad)  
  40419f:	xchg   ecx,eax
  4041a0:	retf   0xc890
  4041a3:	mov    esp,0x58ef67b5
  4041a8:	ins    BYTE PTR es:[edi],dx
  4041a9:	jg     0x4041ca
  4041ab:	dec    esp
  4041ac:	pop    ds
  4041ad:	retf   
  4041ae:	push   es
  4041af:	(bad)  [ebx+eiz*2]
  4041b2:	(bad)  
  4041b3:	cmp    edi,edx
  4041b5:	mov    ds:0xfcf313f9,eax
  4041ba:	add    eax,0xee5b0f9e
  4041bf:	push   ss
	...
  4041cc:	xchg   BYTE PTR [eax+0x67baa0f9],dl
  4041d2:	push   es
  4041d3:	sbb    al,0xf8
  4041d5:	jle    0x40415c
  4041d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4041d8:	pop    esp
  4041d9:	xor    ebx,DWORD PTR [esi+0x1]
  4041dc:	cmp    DWORD PTR [ebp+0x46],esi
  4041df:	jmp    0x2a475730
  4041e4:	gs nop
  4041e6:	jae    0x4041d5
  4041e8:	jne    0x404210
  4041ea:	(bad)  
  4041eb:	cs mov edi,0xf4e9068e
  4041f1:	bound  ebp,QWORD PTR [ecx+ebp*8+0x45]
  4041f5:	push   ss
  4041f6:	or     bh,BYTE PTR [esi]
  4041f8:	scas   eax,DWORD PTR es:[edi]
  4041f9:	pop    edx
  4041fa:	out    dx,al
  4041fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4041fc:	daa    
  4041fd:	nop
  4041fe:	stc    
  4041ff:	bound  edi,QWORD PTR [edi+0x25fb8d5a]
  404205:	push   ss
  404206:	cli    
  404207:	push   ds
  404208:	(bad)  
  40420c:	or     al,0x91
  40420e:	push   esp
  40420f:	icebp  
  404210:	inc    ebx
  404211:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404212:	push   cs
  404213:	jmp    0x9a2b1db7
  404218:	cmp    al,0xfb
  40421a:	sbb    eax,0xfe6334da
  40421f:	jnp    0x40421c
  404221:	mov    ds:0x8ff353f9,eax
  404226:	jae    0x404219
  404228:	lods   al,BYTE PTR ds:[esi]
  404229:	enter  0xd6f9,0xc6
  40422d:	cdq    
  40422e:	(bad)  
  40422f:	in     eax,0x0
	...
  404239:	add    BYTE PTR [eax],al
  40423b:	add    ah,dh
  40423d:	xor    eax,0xda2008d
  404242:	push   ebx
  404243:	adc    al,0x1d
  404245:	inc    ecx
  404246:	push   es
  404247:	jne    0x4041e3
  404249:	int3   
  40424a:	les    edx,FWORD PTR [eax]
  40424c:	mov    ss,WORD PTR [edx+0x17511073]
  404252:	or     bh,bh
  404254:	jmp    0x4041e4
  404256:	loope  0x40423e
  404258:	arpl   WORD PTR [ecx+0x6acb8bf9],dx
  40425e:	daa    
  40425f:	add    al,BYTE PTR [edi-0x58]
  404262:	push   ss
  404263:	add    BYTE PTR [ebx],cl
  404265:	push   cs
  404266:	jmp    0x4275:0xf9929a83
  40426d:	sub    eax,0x7f8b8d02
  404272:	push   esi
  404273:	jmp    FWORD PTR [ebx]
  404275:	mov    esp,ecx
  404277:	ret    
  404278:	mov    eax,ds:0x9b8bf991
  40427d:	pop    DWORD PTR [eax+edi*1-0x74fee8b2]
  404284:	pop    ebx
  404285:	jg     0x404290
  404287:	enter  0x68b5,0x2d
  40428b:	rcl    bh,0xa8
  40428e:	push   cs
  40428f:	add    BYTE PTR [ebx+0xe],bl
  404292:	jmp    0x1275:0xf992da83
  404299:	sub    eax,0x915b8d04
  40429e:	push   esi
  40429f:	inc    DWORD PTR [eax]
	...
  4042a9:	add    BYTE PTR [eax],al
  4042ab:	add    BYTE PTR [ebx-0x75],bh
  4042ae:	loope  0x404247
  4042b0:	icebp  
  4042b1:	xchg   ebx,eax
  4042b2:	stc    
  4042b3:	mov    ebx,DWORD PTR [ebx-0x31c77b72]
  4042b9:	push   ss
  4042ba:	push   cs
  4042bb:	vmwrite esp,DWORD PTR ds:0xaf9a86f8
  4042c2:	add    al,0x2b
  4042c4:	idiv   DWORD PTR [ebx+0x7befc2bc]
  4042ca:	push   eax
  4042cb:	mov    ecx,ebx
  4042cd:	stc    
  4042ce:	sar    ah,0xb0
  4042d1:	push   edi
  4042d2:	push   es
  4042d3:	push   0xfffffff6
  4042d5:	push   es
  4042d6:	inc    eax
  4042d7:	inc    DWORD PTR [edi-0x43]
  4042da:	jo     0x4042e4
  4042dc:	(bad)  
  4042dd:	jb     0x4042d6
  4042df:	call   DWORD PTR [eax+0x740c4011]
  4042e5:	mov    ah,0x5
  4042e7:	je     0x4042e2
  4042e9:	lods   al,BYTE PTR ds:[esi]
  4042ea:	mov    edi,0x3f17845
  4042ef:	sub    esi,DWORD PTR [edi]
  4042f1:	rol    ebx,cl
  4042f3:	or     bh,dh
  4042f5:	outs   dx,BYTE PTR ds:[esi]
  4042f6:	jnp    0x4042e4
  4042f8:	ins    BYTE PTR es:[edi],dx
  4042f9:	ja     0x40430d
  4042fb:	sbb    DWORD PTR ds:0x3e04707c,0x3a
  404302:	stc    
  404303:	dec    DWORD PTR [ecx-0x51]
  404306:	stc    
  404307:	dec    dl
  404309:	sbb    ebp,0xffffffd0
  40430c:	cmp    esp,DWORD PTR ds:0xbf6
	...
  40431a:	add    BYTE PTR [eax],al
  40431c:	aaa    
  40431d:	xlat   BYTE PTR ds:[ebx]
  40431e:	cli    
  40431f:	mov    al,dl
  404321:	stos   DWORD PTR es:[edi],eax
  404322:	into   
  404323:	add    dh,bh
  404325:	jnp    0x40432c
  404327:	add    BYTE PTR [edi+edx*4],cl
  40432a:	pop    ebx
  40432b:	add    DWORD PTR [eax],edx
  40432d:	idiv   ecx
  40432f:	inc    BYTE PTR [edx+0x33ddd83]
  404335:	pop    ebp
  404336:	test   cl,0x35
  404339:	cwde   
  40433a:	add    eax,0x825f7c55
  40433f:	(bad)  
  404340:	jmp    0x40432f
  404342:	jp     0x4043b9
  404344:	repz loope 0x40434c
  404347:	lea    esi,[edx]
  404349:	arpl   bx,sp
  40434b:	push   esp
  40434c:	rcl    BYTE PTR [edi],1
  40434e:	call   DWORD PTR [ebp-0x38]
  404351:	pop    ss
  404352:	out    0xdb,eax
  404354:	sub    eax,0xec03ef7e
  404359:	mov    ds:0xf74063b,al
  40435e:	mov    ebx,0x4662204
  404363:	les    eax,FWORD PTR [ecx-0x64]
  404366:	lods   eax,DWORD PTR ds:[esi]
  404367:	add    bh,dh
  404369:	fldcw  WORD PTR [edx]
  40436b:	lock hlt 
  40436d:	xchg   edx,eax
  40436e:	(bad)  
  40436f:	dec    eax
  404370:	out    0x17,eax
  404372:	mov    esp,0xef62f6ac
  404377:	add    ebx,DWORD PTR [ecx]
  404379:	pushf  
  40437a:	lods   eax,DWORD PTR ds:[esi]
  40437b:	add    bh,dh
  40437d:	aaa    
  40437e:	je     0x404360
	...
  40438c:	jbe    0x404334
  40438e:	imul   esi
  404390:	pusha  
  404391:	lea    ebx,[ebx+ebx*1]
  404394:	cmp    al,0xf8
  404396:	out    dx,al
  404397:	pop    ecx
  404398:	idiv   eax
  40439a:	in     al,dx
  40439b:	pop    ecx
  40439c:	idiv   eax
  40439e:	jmp    0x4043fb
  4043a0:	mul    DWORD PTR [edx-0x11]
  4043a3:	ret    
  4043a4:	cmp    BYTE PTR [edi],dl
  4043a6:	repz (bad) [edi]
  4043a9:	jl     0x40439a
  4043ab:	add    edi,DWORD PTR [esi+0x27]
  4043ae:	xor    eax,DWORD PTR [ebx+ebp*4+0x31]
  4043b2:	sub    BYTE PTR [ecx-0x11],bh
  4043b5:	jp     0x404389
  4043b7:	in     eax,dx
  4043b8:	adc    BYTE PTR [ebp+0x620f4920],cl
  4043be:	out    dx,eax
  4043bf:	add    esi,edi
  4043c1:	fnstenv [edx+0x72706dfb]
  4043c7:	dec    ecx
  4043c8:	out    dx,eax
  4043c9:	xor    edx,DWORD PTR [edi+0x662f783]
  4043cf:	jmp    0xeebf2a4b
  4043d4:	leave  
  4043d5:	mov    WORD PTR [esi-0x1a],ss
  4043d8:	dec    edi
  4043d9:	pop    ebx
  4043da:	stc    
  4043db:	cmp    esi,edi
  4043dd:	fistp  QWORD PTR [ebx-0x2f]
  4043e0:	hlt    
  4043e1:	adc    eax,0x6b9c2a05
  4043e6:	stc    
  4043e7:	cmp    al,0xa3
  4043e9:	fiadd  WORD PTR [ebx-0x67367bf]
  4043ef:	sbb    DWORD PTR [eax],eax
	...
  4043f9:	add    BYTE PTR [eax],al
  4043fb:	add    BYTE PTR [eax+0x43c1fa16],dl
  404401:	mov    ecx,?
  404403:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404404:	(bad)  
  404405:	int3   
  404406:	jb     0x4043f3
  404408:	lods   eax,DWORD PTR ds:[esi]
  404409:	into   
  40440a:	stc    
  40440b:	sbb    al,0x87
  40440d:	jnp    0x4043b4
  40440f:	jg     0x404405
  404411:	bound  ecx,QWORD PTR [ebp-0x3b664256]
  404417:	icebp  
  404418:	hlt    
  404419:	xor    eax,0xa775858d
  40441e:	(bad)  
  40441f:	outs   dx,BYTE PTR ds:[esi]
  404420:	fistp  WORD PTR [esi-0x12]
  404423:	mov    DWORD PTR [ebp-0x74],ebx
  404426:	stc    
  404427:	jo     0x4043e8
  404429:	mov    al,cl
  40442b:	lods   al,BYTE PTR ds:[esi]
  40442c:	push   eax
  40442d:	arpl   WORD PTR [esi],ax
  40442f:	jmp    0xf5b3d028
  404434:	dec    esp
  404435:	enter  0x3efb,0x19
  404439:	fcom   DWORD PTR [ebx-0x1b]
  40443c:	popf   
  40443d:	jo     0x4044ab
  40443f:	jmp    0x9d39a702
  404444:	and    BYTE PTR [ebx+esi*2+0xe161921],cl
  40444b:	push   ss
  40444c:	jg     0x4044ac
  40444e:	stc    
  40444f:	mov    ebx,0xc499e8
  404454:	out    0x5f,al
  404456:	push   ebx
  404457:	mov    edi,edx
  404459:	loopne 0x40441d
  40445b:	clc    
  40445c:	adc    DWORD PTR [ebx],ebx
  40445e:	inc    BYTE PTR [eax]
	...
  40446c:	into   
  40446d:	pop    edi
  40446e:	push   es
  40446f:	(bad)  
  404470:	and    edx,DWORD PTR [ebx+0x5fde0006]
  404476:	lea    edx,[ebp-0x2a]
  404479:	or     dl,BYTE PTR [ecx*4+0x6a567f13]
  404480:	lahf   
  404481:	jle    0x4044f6
  404483:	cld    
  404484:	imul   edx,DWORD PTR [ebx],0x8ee3fffe
  40448a:	clc    
  40448b:	push   edx
  40448c:	ret    0x430a
  40448f:	clc    
  404490:	inc    edi
  404491:	mov    al,ds:0x9c30002
  404496:	jmp    0xbe0c:0x430c8f6a
  40449d:	jge    0x404512
  40449f:	or     BYTE PTR [esi-0x160005af],al
  4044a5:	mov    esp,0x8d344e08
  4044ab:	in     al,dx
  4044ac:	hlt    
  4044ad:	pop    edx
  4044ae:	mov    eax,DWORD PTR [ebp+0x4a]
  4044b1:	das    
  4044b2:	stc    
  4044b3:	jne    0x4044fb
  4044b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4044b6:	sbb    ah,bh
  4044b8:	test   eax,0x56c2cf7d
  4044bd:	pop    edi
  4044be:	push   ebx
  4044bf:	mov    ecx,edx
  4044c1:	loope  0x40453e
  4044c3:	or     al,0x1e
  4044c5:	adc    edx,DWORD PTR [edx]
  4044c7:	sub    DWORD PTR [ebx+0x6f],0x6
  4044cb:	je     0x404505
  4044cd:	jle    0x404542
  4044cf:	adc    BYTE PTR [eax],al
	...
  4044d9:	add    BYTE PTR [eax],al
  4044db:	add    cl,bl
  4044dd:	adc    ecx,DWORD PTR [edx]
  4044df:	jmp    DWORD PTR [ebx-0x79]
  4044e2:	loope  0x4044e1
  4044e4:	div    DWORD PTR [eax-0x15]
  4044e7:	jmp    FWORD PTR [esi]
  4044e9:	aaa    
  4044ea:	push   es
  4044eb:	add    BYTE PTR [edx+0x15],cl
  4044ee:	out    0xff,al
  4044f0:	bound  ebp,QWORD PTR [edx+ebp*8-0x499c108b]
  4044f7:	(bad)  
  4044f8:	fdivr  DWORD PTR [ecx-0x7a]
  4044fb:	jge    0x4044e4
  4044fd:	jnp    0x404570
  4044ff:	adc    al,0x74
  404501:	daa    
  404502:	push   es
  404503:	add    BYTE PTR [ebx-0x7e],cl
  404506:	jmp    0xb00c:0x7098e775
  40450d:	inc    edi
  40450e:	cli    
  40450f:	out    0x60,eax
  404511:	leave  
  404512:	jmp    0x43ff:0xf9beaeff
  404519:	add    eax,0x901283d9
  40451e:	add    eax,0x70e8fd74
  404523:	or     al,0x8f
  404525:	fadd   DWORD PTR cs:[eax]
  404528:	mul    esp
  40452a:	pop    es
  40452b:	sub    esi,DWORD PTR [edi]
  40452d:	ins    BYTE PTR es:[edi],dx
  40452e:	jmp    0x4045a5
  404530:	sti    
  404531:	or     BYTE PTR [eax+0x8],dh
  404534:	dec    edi
  404535:	dec    ebp
  404536:	jmp    0xf708:0xc7c358ff
  40453d:	(bad)  
  40453e:	jle    0x40452c
	...
  40454c:	dec    eax
  40454d:	scas   eax,DWORD PTR es:[edi]
  40454e:	std    
  40454f:	out    0x18,eax
  404551:	xor    edx,ebp
  404553:	jmp    DWORD PTR [edi-0x2d98025b]
  404559:	rol    DWORD PTR [eax+eax*1+0x28],cl
  40455d:	iret   
  40455e:	std    
  40455f:	out    0xa4,eax
  404561:	push   eax
  404562:	jmp    0xff75:0xea7b8dff
  404569:	bound  edx,QWORD PTR [edi]
  40456b:	push   edi
  40456c:	or     BYTE PTR [edx-0x280aa6e8],cl
  404572:	stos   BYTE PTR es:[edi],al
  404573:	jmp    FWORD PTR [eax-0x27046d77]
  404579:	sub    eax,0xfce8ec00
  40457e:	in     al,dx
  40457f:	jle    0x4045bb
  404581:	jae    0x404522
  404583:	in     al,dx
  404584:	bound  ebx,QWORD PTR [ebx+0x7]
  404587:	ror    BYTE PTR ds:[ecx-0x5b41b320],1
  40458e:	jmp    0x404593
  404590:	sub    bl,dh
  404592:	ret    
  404593:	xchg   DWORD PTR [ebx-0x8e377a],esi
  404599:	jp     0x4045ba
  40459b:	out    dx,al
  40459c:	test   al,0x89
  40459e:	adc    al,0x41
  4045a0:	repz fld TBYTE PTR [edx]
  4045a3:	call   0xfc1b651c
  4045a8:	push   ds
  4045a9:	arpl   WORD PTR [eax+0x1289fb71],sp
  4045af:	cld    
	...
  4045bc:	cwde   
  4045bd:	bound  edx,QWORD PTR [ebp+0x128978eb]
  4045c3:	call   0xdc375538
  4045c8:	hlt    
  4045c9:	mov    DWORD PTR [eax-0x15],edi
  4045cc:	pusha  
  4045cd:	movntq (bad),mm3
  4045ce:	out    0xdb,eax
  4045d0:	and    eax,DWORD PTR [edi+0x1f7ceb68]
  4045d6:	arpl   WORD PTR [ebp+0x50ef5a35],di
  4045dc:	ins    BYTE PTR es:[edi],dx
  4045dd:	jbe    0x40464b
  4045df:	rol    BYTE PTR [ebx-0x5f],0xa2
  4045e3:	out    dx,eax
  4045e4:	mul    DWORD PTR [edx-0x11]
  4045e7:	add    edi,DWORD PTR [edx+0x1f]
  4045ea:	cmp    edx,DWORD PTR [eax+eiz*1+0xf]
  4045ee:	push   es
  4045ef:	loope  0x40462d
  4045f1:	inc    eax
  4045f2:	call   0xc7203ae0
  4045f7:	mov    eax,ds:0xf17389ef
  4045fc:	sbb    al,0x8c
  4045fe:	call   DWORD PTR [esi]
  404600:	or     al,0xdb
  404602:	inc    ebx
  404603:	adc    esp,ebx
  404605:	push   cs
  404606:	cli    
  404607:	adc    esp,ecx
  404609:	ja     0x404611
  40460b:	jmp    0xdfb30ef1
  404610:	int    0xe
  404612:	(bad)  
  404613:	cdq    
  404614:	xor    ah,BYTE PTR [ebx-0x12]
  404617:	pop    eax
  404618:	mul    BYTE PTR [edx+0x6]
  40461b:	jo     0x404654
  40461d:	(bad)  
  40461e:	stc    
  40461f:	pop    esp
	...
  40462c:	iret   
  40462d:	jnp    0x40460c
  40462f:	mov    ebp,0x3cf962f4
  404634:	stos   DWORD PTR es:[edi],eax
  404635:	sbb    ch,0xc2
  404638:	lea    ecx,[eax+0x58a72c8d]
  40463e:	into   
  40463f:	mov    dh,0xa4
  404641:	xor    edi,ecx
  404643:	sbb    al,0x8b
  404645:	adc    BYTE PTR [edi+ebx*4-0x54307773],0x78
  40464d:	mov    BYTE PTR [edx+0x62],dl
  404650:	dec    eax
  404651:	in     al,0xc2
  404653:	jns    0x40468a
  404655:	push   ds
  404656:	bnd jmp 0x6446a950
  40465c:	mov    bh,0x86
  40465e:	push   esi
  40465f:	outs   dx,BYTE PTR ds:[esi]
  404660:	(bad)  
  404661:	pop    edx
  404662:	out    dx,al
  404663:	sub    DWORD PTR [edi],ebp
  404665:	arpl   WORD PTR [esi],ax
  404667:	fs xor al,0xb
  40466a:	dec    ebx
  40466b:	push   esi
  40466c:	(bad)  
  40466d:	pop    edx
  40466e:	out    dx,al
  40466f:	jne    0x404694
  404671:	mov    cl,bh
  404673:	add    BYTE PTR [edi+0x6383fe22],ah
  404679:	jl     0x40467d
  40467b:	jb     0x40466f
  40467d:	fild   QWORD PTR [ebx-0x8]
  404680:	sbb    bh,BYTE PTR [ebp+0x73]
  404683:	cld    
  404684:	out    0xfc,al
  404686:	jmp    0xb9c9548b
  40468b:	je     0x4046a9
  40468d:	jge    0x404702
  40468f:	clc    
	...
  40469c:	scas   al,BYTE PTR es:[edi]
  40469d:	and    eax,0x62dfe806
  4046a2:	push   es
  4046a3:	add    cl,dl
  4046a5:	retf   
  4046a6:	icebp  
  4046a7:	rcl    BYTE PTR [edi+0x23],1
  4046aa:	repnz dec DWORD PTR [ebx-0x80]
  4046ae:	out    dx,al
  4046af:	addr16 mov ds:0x65e,al
  4046b3:	jmp    0x40467d
  4046b5:	jp     0x40472a
  4046b7:	or     BYTE PTR [esi-0x3e0002d9],dh
  4046bd:	gs (bad) 
  4046bf:	leave  
  4046c0:	pop    esp
  4046c1:	bound  eax,QWORD PTR [esi]
  4046c3:	jmp    0x40465d
  4046c5:	data16 (bad) 
  4046c7:	leave  
  4046c8:	dec    esp
  4046c9:	bound  eax,QWORD PTR [esi]
  4046cb:	push   0xffffff9c
  4046cd:	and    eax,0x86ebfffa
  4046d2:	loope  0x4046d8
  4046d4:	push   edi
  4046d5:	jns    0x4046d0
  4046d7:	(bad)  
  4046d8:	retf   
  4046d9:	mov    es,WORD PTR [edi]
  4046db:	add    BYTE PTR [esi+0x63],bl
  4046de:	mov    eax,DWORD PTR [ebp-0x12]
  4046e1:	cs stc 
  4046e3:	jne    0x40474b
  4046e5:	stos   DWORD PTR es:[edi],eax
  4046e6:	cld    
  4046e7:	sti    
  4046e8:	loope  0x404763
  4046ea:	test   DWORD PTR [ebp-0x32],edi
  4046ed:	pop    esi
  4046ee:	jb     0x404702
  4046f0:	inc    ecx
  4046f1:	retf   
  4046f2:	cmp    eax,0xf7aa45
  4046f7:	mov    eax,0x57af7
  4046fc:	mul    DWORD PTR [esp+eax*1]
  4046ff:	sub    eax,DWORD PTR [eax]
	...
  404709:	add    BYTE PTR [eax],al
  40470b:	add    BYTE PTR [edi],dh
  40470d:	xor    al,0x0
  40470f:	sub    esi,DWORD PTR [edi]
  404711:	push   edx
  404712:	rol    BYTE PTR [edi+esi*8],0xe6
  404716:	jp     0x404704
  404718:	je     0x404757
  40471a:	jmp    0x8aff:0x523db28d
  404721:	xchg   ecx,eax
  404722:	fstp   QWORD PTR [edx]
  404724:	or     bh,BYTE PTR [ecx+0x5]
  404727:	test   DWORD PTR [edi+0x62ff1af4],esi
  40472d:	xchg   esp,eax
  40472e:	fucomp st(6)
  404730:	fild   WORD PTR [ebp-0x6bcd7612]
  404736:	out    dx,al
  404737:	jne    0x40470c
  404739:	fs jecxz 0x404727
  40473c:	idiv   DWORD PTR [ebx-0x6]
  40473f:	mov    edi,0x75ee904b
  404744:	jmp    0x4046f2
  404746:	push   0x28a447f8
  40474b:	or     esi,edi
  40474d:	jnp    0x40473d
  40474f:	jne    0x4046f4
  404751:	mov    ah,0xd4
  404753:	jmp    0x40474c
  404755:	jnp    0x404745
  404757:	jne    0x404758
  404759:	mov    ds:0xbd88fad4,eax
  40475e:	mov    esp,0x487befc2
  404763:	mov    ecx,DWORD PTR [ebx-0x3b174707]
  404769:	mov    al,ds:0xdfb28dca
  40476e:	push   ebp
  40476f:	inc    DWORD PTR [eax]
	...
  404779:	add    BYTE PTR [eax],al
  40477b:	add    dl,ch
  40477d:	xchg   ebx,eax
  40477e:	(bad)  
  404780:	dec    ebx
  404781:	jl     0x404788
  404783:	test   DWORD PTR [edi],esi
  404785:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404786:	jge    0x40473f
  404788:	mul    DWORD PTR [edx-0x11]
  40478b:	add    eax,DWORD PTR [eax+0x10]
  40478e:	neg    ebx
  404790:	pop    ebp
  404791:	mov    edx,DWORD PTR [eax-0x18]
  404794:	jle    0x4047b6
  404796:	push   ebx
  404797:	call   0x7897ce3e
  40479c:	or     al,0x63
  40479e:	out    dx,eax
  40479f:	cld    
  4047a0:	pop    eax
  4047a1:	push   esi
  4047a2:	imul   eax,DWORD PTR [edi+0x7aef62f7],0xffffffb2
  4047a9:	xchg   edx,eax
  4047aa:	and    BYTE PTR [esi+0xb],ch
  4047ad:	jnp    0x40482c
  4047af:	add    al,0xf6
  4047b1:	bound  ebp,QWORD PTR [edi+edi*4-0x5]
  4047b5:	pop    edi
  4047b6:	out    dx,eax
  4047b7:	add    eax,DWORD PTR [edi+0x63]
  4047ba:	lahf   
  4047bb:	fisttp DWORD PTR [esi+0x6e03ef62]
  4047c1:	pop    ds
  4047c2:	add    ebp,eax
  4047c4:	dec    edx
  4047c5:	pop    DWORD PTR [edi]
  4047c7:	push   0x82ef63f4
  4047cc:	mov    ebx,0xf703e25e
  4047d1:	jb     0x4047c2
  4047d3:	push   ebx
  4047d4:	lahf   
  4047d5:	repnz out dx,eax
  4047d7:	add    esi,edi
  4047d9:	fld    TBYTE PTR [edx]
  4047db:	fmul   QWORD PTR ds:0x71b863
	...
  4047e9:	add    BYTE PTR [eax],al
  4047eb:	add    BYTE PTR [ebx-0x6f0fc57b],cl
  4047f1:	(bad)  
  4047f3:	out    0x2,eax
  4047f5:	xchg   ebx,eax
  4047f6:	xchg   edi,eax
  4047f7:	pop    ebp
  4047f8:	hlt    
  4047f9:	arpl   di,bp
  4047fb:	xor    BYTE PTR [ebx+0x6f41666e],0x85
  404802:	adc    ch,al
  404804:	pop    edi
  404805:	dec    ebp
  404806:	xchg   esp,eax
  404807:	add    al,0xf7
  404809:	test   edx,esi
  40480b:	sti    
  40480c:	push   eax
  40480d:	int3   
  40480e:	push   es
  40480f:	jae    0x404869
  404811:	test   DWORD PTR [ecx+eiz*8-0x54],ebp
  404815:	inc    ebp
  404816:	dec    esi
  404817:	test   al,0xf4
  404819:	test   DWORD PTR [ebx-0xf],esi
  40481c:	sbb    al,0x5e
  40481e:	sti    
  40481f:	push   esi
  404820:	sbb    BYTE PTR [ecx-0x22],bl
  404823:	dec    esi
  404824:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404825:	mov    ?,ecx
  404827:	mov    esp,0x3de47d1c
  40482c:	adc    BYTE PTR [ebp+0xf181125],al
  404832:	(bad)  
  404833:	xchg   BYTE PTR cs:[edx-0x7],bh
  404837:	pushf  
  404838:	cld    
  404839:	jl     0x404849
  40483b:	sbb    al,0x10
  40483d:	test   DWORD PTR ds:0xea0ed831,esp
  404843:	add    eax,edi
  404845:	bound  eax,QWORD PTR [esi]
  404847:	jmp    0x122e5725
  40484c:	loopne 0x4047d2
  40484e:	stc    
  40484f:	jmp    0x404854
	...
  40485c:	(bad)  [esi]
  40485e:	push   cs
  40485f:	add    edx,eax
  404861:	mov    bh,cl
  404863:	out    0x3d,al
  404865:	mov    al,ds:0x5fb6b05d
  40486a:	push   es
  40486b:	cmp    al,0x2c
  40486d:	ja     0x4047f4
  40486f:	dec    esp
  404870:	stos   DWORD PTR es:[edi],eax
  404871:	test   BYTE PTR [ebp-0xf],dh
  404874:	cdq    
  404875:	push   cs
  404876:	push   cs
  404877:	shr    DWORD PTR [ecx-0x1216f987],1
  40487d:	mov    ds:0x8488abcf,al
  404882:	push   edx
  404883:	jb     0x40482d
  404885:	fadd   DWORD PTR [ebx-0xf]
  404888:	mul    edx
  40488a:	push   es
  40488b:	jmp    0x29ac7b84
  404890:	dec    ebx
  404891:	lahf   
  404892:	in     al,dx
  404893:	add    BYTE PTR [esi+0x60],cl
  404896:	iret   
  404897:	ret    0x6052
  40489a:	push   ebx
  40489b:	mov    edi,DWORD PTR [edx+0x15]
  40489e:	cli    
  40489f:	mov    ebx,DWORD PTR [ebx-0x78]
  4048a2:	mov    WORD PTR [ebp+0x4a],cs
  4048a5:	or     DWORD PTR [eax],0x4a70f51
  4048ab:	sub    ebx,esi
  4048ad:	nop
  4048ae:	lods   eax,DWORD PTR ds:[esi]
  4048af:	pop    ecx
  4048b0:	popf   
  4048b1:	jle    0x4048b8
  4048b3:	repz test BYTE PTR ds:0x6026c2cf,bl
  4048ba:	push   ebx
  4048bb:	mov    edi,DWORD PTR [edx+0x8b5115]
	...
  4048c9:	add    BYTE PTR [eax],al
  4048cb:	add    BYTE PTR [ebx-0x74],bl
  4048ce:	std    
  4048cf:	mov    esp,DWORD PTR [ebx-0x78]
  4048d2:	mov    WORD PTR [ebp-0x2],cs
  4048d5:	add    BYTE PTR [ebx+esi*8],0x42
  4048d9:	sbb    eax,0x8c1cc958
  4048de:	stc    
  4048df:	push   esp
  4048e0:	lods   al,BYTE PTR gs:[esi]
  4048e2:	push   eax
  4048e3:	push   edi
  4048e4:	adc    ecx,DWORD PTR gs:[esi]
  4048e7:	cld    
  4048e8:	push   ebp
  4048e9:	dec    ebx
  4048ea:	push   ss
  4048eb:	sub    ebx,DWORD PTR [esi]
  4048ed:	or     DWORD PTR [ebx+0xc],edi
  4048f0:	lods   eax,DWORD PTR ds:[esi]
  4048f1:	pusha  
  4048f2:	cmc    
  4048f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4048f4:	(bad)
  4048f7:	add    esi,ebx
  4048f9:	sbb    eax,0x8a5cc958
  4048fe:	stc    
  4048ff:	push   esp
  404900:	and    eax,0x5ac485ab
  404905:	adc    al,0x51
  404907:	push   ebx
  404908:	ss popa 
  40490a:	pop    es
  40490b:	add    BYTE PTR [esi+0x6608737e],bl
  404911:	out    dx,eax
  404912:	stc    
  404913:	call   FWORD PTR [ecx+0x9]
  404916:	jnp    0x404920
  404918:	div    DWORD PTR [ebx+edi*1]
  40491b:	sub    eax,DWORD PTR [ebp+0x32]
  40491e:	add    al,BYTE PTR [ecx]
  404920:	idiv   DWORD PTR [ecx+0x7d]
  404923:	adc    al,0x1d
  404925:	add    al,0xc4
  404927:	loop   0x404977
  404929:	add    BYTE PTR [ecx+0x8],ah
  40492c:	mov    al,0x3c
  40492e:	jg     0x4049a5
	...
  40493c:	repz xor edi,DWORD PTR [ecx]
  40493f:	(bad)  
  404940:	div    DWORD PTR [eax-0x43]
  404943:	sub    ecx,DWORD PTR [edi+edi*8+0x5]
  404947:	cmp    edi,DWORD PTR [edi-0x42]
  40494a:	loop   0x40494c
  40494c:	mov    edx,0xe6047c1b
  404951:	jns    0x40498b
  404953:	inc    BYTE PTR [eax]
  404955:	add    al,0x49
  404957:	(bad)  
  404958:	jge    0x4049d7
  40495a:	das    
  40495b:	mov    bl,bh
  40495d:	cmp    BYTE PTR [edi+0x45],0xf8
  404961:	adc    BYTE PTR [esi],al
  404963:	cmp    dh,BYTE PTR [esi]
  404965:	xchg   ebp,eax
  404966:	xor    BYTE PTR [eax],dl
  404968:	mov    ds,WORD PTR gs:[esi]
  40496b:	leave  
  40496c:	loope  0x4049bb
  40496e:	imul   edx,ebp,0xc943e13c
  404974:	mov    ch,0x88
  404976:	add    eax,0x86807c55
  40497b:	les    edi,FWORD PTR [edi-0x47a8b7c3]
  404981:	pop    ss
  404982:	cli    
  404983:	pop    edx
  404984:	jge    0x404913
  404986:	jge    0x4049cd
  404988:	stos   BYTE PTR es:[edi],al
  404989:	push   es
  40498a:	inc    esi
  40498b:	add    DWORD PTR [edi+0x4f],ebp
  40498e:	out    dx,al
  40498f:	mov    ebx,DWORD PTR [ecx+ecx*2-0x77f574c5]
  404996:	mov    edx,0x58c8f45
  40499b:	add    bh,dh
  40499d:	bound  esi,QWORD PTR [esi+esi*1+0x0]
	...
  4049a9:	add    BYTE PTR [eax],al
  4049ab:	add    bh,ah
  4049ad:	test   DWORD PTR [edi],ebp
  4049af:	out    0xba,al
  4049b1:	jg     0x404993
  4049b3:	lods   eax,DWORD PTR ds:[esi]
  4049b4:	mov    dl,0x7f
  4049b6:	fsubr  DWORD PTR [ebp+0x4e773b0b]
  4049bc:	pop    eax
  4049bd:	arpl   WORD PTR [edx],dx
  4049bf:	call   0xe86b02c4
  4049c4:	jge    0x404a1d
  4049c6:	mov    bh,0x7b
  4049c8:	stos   BYTE PTR es:[edi],al
  4049c9:	xor    al,0xad
  4049cc:	mov    dl,0x7f
  4049ce:	ja     0x4049df
  4049d0:	out    dx,eax
  4049d1:	jno    0x40496c
  4049d3:	ds sub ebp,ebp
  4049d6:	mov    dl,0xe4
  4049d8:	outs   dx,DWORD PTR ds:[esi]
  4049d9:	push   edi
  4049da:	pop    es
  4049db:	jp     0x40499f
  4049dd:	sub    ebp,0xdbed114e
  4049e3:	sub    DWORD PTR [eax+ebp*1+0x37],edi
  4049e7:	xor    ebp,ebx
  4049e9:	xor    ah,BYTE PTR [eax]
  4049eb:	inc    DWORD PTR ds:[edi+ebp*1+0x67803a79]
  4049f3:	add    BYTE PTR [ebp+0x27],bh
  4049f6:	or     edi,DWORD PTR [ebx+0x34]
  4049f9:	mov    al,fs:0x2dac3c45
  4049ff:	not    eax
  404a01:	push   ss
  404a02:	xlat   BYTE PTR fs:[ebx]
  404a04:	jbe    0x4049ac
  404a06:	sti    
  404a07:	in     al,0xc0
  404a09:	cmp    DWORD PTR [edi+ebp*1],0xe022ef9c
	...
  404a1c:	inc    edi
  404a1d:	sbb    BYTE PTR [edx+0xc],0x9f
  404a21:	test   esp,0xafe7f704
  404a27:	adc    ebp,DWORD PTR [edi-0x28]
  404a2a:	out    dx,eax
  404a2b:	add    esi,edi
  404a2d:	add    DWORD PTR [esi],0x438afb3c
  404a33:	mov    bh,0x94
  404a35:	or     DWORD PTR [edi+0x73819f2c],0xef3c639d
  404a3f:	jmp    0x1606b838
  404a44:	aam    0xeb
  404a46:	inc    ebx
  404a47:	jns    0x404a9d
  404a49:	div    ecx
  404a4b:	xchg   ecx,eax
  404a4c:	fld    QWORD PTR [eax+0x277a76f9]
  404a52:	(bad)  
  404a53:	outs   dx,BYTE PTR ds:[esi]
  404a54:	sahf   
  404a55:	jbe    0x404a50
  404a57:	fcomp  QWORD PTR [ecx+eax*4]
  404a5a:	jae    0x404ab5
  404a5c:	and    ebp,esi
  404a5e:	clc    
  404a5f:	push   esi
  404a60:	adc    al,0x81
  404a62:	jae    0x404ab1
  404a64:	adc    ebx,DWORD PTR [edx-0x11]
  404a67:	jmp    0xedb3cc60
  404a6c:	sbb    al,0x66
  404a6e:	out    dx,eax
  404a6f:	jmp    0xb5395d68
  404a74:	lock out dx,eax
  404a76:	adc    DWORD PTR [edi],0x15
  404a79:	cmp    ecx,0xf8c6dcb9
  404a7f:	push   ss
	...
  404a8c:	aam    0x80
  404a8e:	jae    0x404aa5
  404a90:	aam    0xf6
  404a92:	std    
  404a93:	je     0x404b03
  404a95:	xchg   ecx,eax
  404a96:	clc    
  404a97:	(bad)  
  404a98:	aad    0x13
  404a9a:	out    dx,al
  404a9b:	not    esi
  404a9d:	cmp    cl,0xee
  404aa0:	pop    ds
  404aa1:	imul   ebp,esi,0x54
  404aa4:	fwait
  404aa5:	cmp    cl,0x53
  404aa8:	add    ecx,DWORD PTR [ebx]
  404aaa:	dec    esp
  404aab:	and    DWORD PTR [edx],esi
  404aad:	arpl   cx,di
  404aaf:	push   esp
  404ab0:	repz mov bh,BYTE PTR [ebp-0x67a4c00]
  404ab7:	or     edx,DWORD PTR [esi-0x7b]
  404aba:	jae    0x404ab0
  404abc:	inc    ecx
  404abd:	sbb    edi,esi
  404abf:	dec    ebx
  404ac1:	outs   dx,BYTE PTR ds:[esi]
  404ac2:	out    dx,al
  404ac3:	stos   DWORD PTR es:[edi],eax
  404ac4:	push   esp
  404ac5:	test   ecx,edi
  404ac7:	and    esi,DWORD PTR [esi]
  404ac9:	test   DWORD PTR [ebx-0x8],esi
  404acc:	jbe    0x404a8f
  404ace:	sti    
  404acf:	push   DWORD PTR [ecx-0x7b]
  404ad2:	jae    0x404adc
  404ad4:	xchg   bl,al
  404ad6:	icebp  
  404ad7:	call   ecx
  404ad9:	lock lds ebx,FWORD PTR [ebx-0x69]
  404add:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404ade:	push   cs
  404adf:	add    bl,ch
  404ae1:	out    dx,eax
  404ae2:	jmp    0x5b8b:0x51980a83
  404ae9:	js     0x404af7
  404aeb:	ror    BYTE PTR [edx+0x6a],0xc1
	...
  404afb:	add    BYTE PTR [esi],cl
  404afd:	fs push es
  404aff:	add    BYTE PTR ds:0x167d8584,al
  404b05:	addr16 jae 0x404b0f
  404b08:	test   BYTE PTR [ebx+0x4],ah
  404b0b:	add    BYTE PTR [esi],cl
  404b0d:	xchg   ecx,eax
  404b0e:	or     DWORD PTR [ebx+0x75077c53],eax
  404b14:	(bad)  
  404b16:	push   es
  404b17:	add    esi,ebx
  404b19:	arpl   bp,bp
  404b1b:	add    dh,BYTE PTR [ebp-0x2835784b]
  404b21:	arpl   WORD PTR [eax+eax*1],ax
  404b24:	arpl   WORD PTR [ebx],bp
  404b26:	cli    
  404b27:	push   eax
  404b28:	ins    BYTE PTR es:[edi],dx
  404b29:	or     eax,0x704bff06
  404b2e:	stc    
  404b2f:	jne    0x404af7
  404b31:	mov    esp,DWORD PTR [ecx+ebp*8-0x3ff29c62]
  404b38:	neg    DWORD PTR [esi]
  404b3a:	ja     0x404ac9
  404b3c:	cmp    dl,BYTE PTR [edx-0x90895ce]
  404b42:	inc    eax
  404b43:	hlt    
  404b44:	daa    
  404b45:	adc    al,0x2
  404b47:	inc    DWORD PTR [edx]
  404b49:	call   0xe989:0xa18375e6
  404b50:	test   DWORD PTR [ecx+0x4deac00a],0x896f7d83
  404b5a:	push   ecx
  404b5b:	inc    esi
  404b5c:	je     0x404bcc
  404b5e:	fiadd  WORD PTR [ecx]
	...
  404b6c:	loop   0x404afd
  404b6e:	cmp    BYTE PTR [ebp+0x4f],0x8a
  404b72:	push   ecx
  404b73:	cmp    bh,BYTE PTR [esi+ecx*2-0x26]
  404b77:	inc    eax
  404b78:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404b79:	loope  0x404bbf
  404b7b:	std    
  404b7c:	cmp    BYTE PTR [eax],cl
  404b7e:	mov    edi,eax
  404b80:	add    dh,0xdd
  404b83:	push   eax
  404b84:	shl    BYTE PTR [ebx+0x30f76a05],0x51
  404b8b:	adc    BYTE PTR [eax],bl
  404b8d:	mov    esi,0x12a8e8d9
  404b92:	add    al,BYTE PTR [eax]
  404b94:	cld    
  404b95:	dec    ecx
  404b96:	pop    esi
  404b97:	or     ch,BYTE PTR [eax-0x702d0df]
  404b9d:	inc    edi
  404b9e:	sub    edi,edi
  404ba0:	fcom   QWORD PTR [eax-0x7efcba76]
  404ba6:	lds    esi,FWORD PTR [edx+edi*8+0x6c]
  404baa:	push   ecx
  404bab:	clc    
  404bac:	push   0xd375e68c
  404bb1:	push   esp
  404bb2:	sbb    ebp,ecx
  404bb4:	test   DWORD PTR [ebx+0x4becc78a],0x63741c51
  404bbe:	(bad)  
  404bbf:	cld    
  404bc0:	div    cl
  404bc2:	lock mov WORD PTR [edx],?
  404bc5:	pop    ebx
  404bc6:	das    
  404bc7:	xor    al,0xa0
  404bc9:	clc    
  404bca:	repnz loopne 0x404bef
  404bcd:	push   ebx
  404bce:	rcl    BYTE PTR [esi+0x0],0x0
	...
  404bda:	add    BYTE PTR [eax],al
  404bdc:	add    edi,DWORD PTR [esi+0x32]
  404bdf:	or     al,0x9f
  404be1:	inc    esp
  404be2:	mov    al,0xe0
  404be4:	sbb    BYTE PTR [esi],0xa6
  404be7:	(bad)
  404bea:	cmp    cl,BYTE PTR [ebp+0xc1ae463]
  404bf0:	mul    BYTE PTR [edx-0x11]
  404bf3:	sub    edx,0x6b
  404bf6:	mov    BYTE PTR [esi],dl
  404bf8:	push   esi
  404bf9:	sub    ebp,DWORD PTR [esi]
  404bfb:	add    al,0x80
  404bfd:	sub    bh,dh
  404bff:	ins    DWORD PTR es:[edi],dx
  404c00:	idiv   DWORD PTR [ebp-0x6]
  404c03:	test   DWORD PTR [ecx-0x8],0x6ec2e0de
  404c0a:	pusha  
  404c0b:	push   esi
  404c0c:	dec    DWORD PTR [edx+0x7e28e153]
  404c12:	lds    eax,FWORD PTR es:[edi]
  404c15:	arpl   WORD PTR [esp+eax*8],ax
  404c18:	ins    BYTE PTR es:[edi],dx
  404c19:	xchg   ebx,eax
  404c1a:	push   ds
  404c1b:	in     eax,0x4e
  404c1d:	ins    BYTE PTR es:[edi],dx
  404c1e:	out    dx,eax
  404c1f:	add    esi,edi
  404c21:	xchg   ebx,eax
  404c22:	inc    ebp
  404c23:	push   esp
  404c24:	repz jecxz 0x404c64
  404c27:	adc    ah,BYTE PTR [ebp-0x34]
  404c2a:	and    eax,DWORD PTR [edx-0xd01ac1b]
  404c30:	pop    es
  404c31:	add    DWORD PTR [ecx],0xbfe80b8a
  404c37:	mov    dh,BYTE PTR [esi]
  404c39:	arpl   WORD PTR [ecx],ax
  404c3b:	ret    
  404c3c:	dec    edx
  404c3d:	cdq    
  404c3e:	sub    al,0x36
	...
  404c4c:	jl     0x404bdc
  404c4e:	push   es
  404c4f:	sahf   
  404c50:	jae    0x404c79
  404c52:	push   cs
  404c53:	test   BYTE PTR [ebp+0x7df57be9],0x2f
  404c5a:	push   ss
  404c5b:	repnz mov ebx,0x6b621df6
  404c61:	mov    ds:0x6606e1ec,eax
  404c66:	and    eax,esi
  404c68:	sti    
  404c69:	bound  eax,QWORD PTR [esi]
  404c6b:	jb     0x404c6c
  404c6d:	out    0x56,eax
  404c6f:	pusha  
  404c70:	cmp    ah,BYTE PTR [ebx+0x35]
  404c73:	stos   DWORD PTR es:[edi],eax
  404c74:	xor    BYTE PTR [ecx+0x1dab9eee],al
  404c7a:	iret   
  404c7b:	stos   DWORD PTR es:[edi],eax
  404c7c:	pop    es
  404c7d:	arpl   WORD PTR [ebx+0x62],dx
  404c80:	adc    DWORD PTR [di-0x14f4],eax
  404c85:	bound  esi,QWORD PTR [ebx-0x12]
  404c88:	cmp    DWORD PTR [edi],esp
  404c8a:	push   cs
  404c8b:	ds mov ebx,0xd66a0623
  404c91:	outs   dx,BYTE PTR ds:[esi]
  404c92:	push   es
  404c93:	hlt    
  404c94:	icebp  
  404c95:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404c96:	inc    ebx
  404c97:	cmc    
  404c98:	xchg   ecx,eax
  404c99:	sub    al,BYTE PTR [edi-0x17]
  404c9c:	dec    ecx
  404c9d:	test   DWORD PTR ds:0x6842a41,0xf99a6de9
  404ca7:	mov    esp,0x46018b00
  404cac:	repz bound eax,QWORD PTR ds:0x11
	...
  404cbb:	add    BYTE PTR [ecx+edx*1+0x7d18eeee],dh
  404cc2:	stc    
  404cc3:	jb     0x404c78
  404cc5:	jl     0x404d3a
  404cc7:	icebp  
  404cc8:	and    eax,0xfb0e178b
  404ccd:	(bad)  
  404cce:	stc    
  404ccf:	xchg   esp,eax
  404cd0:	call   0xc8413ae4
  404cd5:	test   DWORD PTR [esi],eax
  404cd7:	add    BYTE PTR [ebp-0x60],al
  404cda:	pop    ebp
  404cdb:	leave  
  404cdc:	or     al,0x6f
  404cde:	push   es
  404cdf:	push   ebp
  404ce0:	push   ebp
  404ce1:	jae    0x404d38
  404ce3:	sbb    DWORD PTR [ebx],0x6f
  404ce6:	push   es
  404ce7:	jne    0x404c7a
  404ce9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404cea:	inc    ebx
  404ceb:	or     BYTE PTR [ecx+0xd004728],cl
  404cf1:	add    ecx,DWORD PTR [edx]
  404cf3:	add    bl,dl
  404cf5:	arpl   cx,ax
  404cf7:	inc    ebp
  404cf8:	call   0x739d:0x8e414edd
  404cff:	or     BYTE PTR [esi+0x5e00e0c3],dh
  404d05:	jmp    0x53444ce8
  404d0a:	out    dx,al
  404d0b:	mov    bl,0x70
  404d0d:	pusha  
  404d0e:	push   es
  404d0f:	add    esp,DWORD PTR [esi+0x65e85521]
  404d15:	cdq    
  404d16:	stc    
  404d17:	inc    ebp
  404d19:	mov    bh,0xf9
  404d1b:	jne    0x404d73
  404d1d:	xor    esi,ebp
  404d1f:	mov    ebp,0x0
	...
  404d2c:	jo     0x404d8e
  404d2e:	push   es
  404d2f:	call   DWORD PTR [ebx+0x6c]
  404d32:	push   ebp
  404d33:	call   0x46d38c
  404d38:	pop    DWORD PTR [edx]
  404d3a:	push   cs
  404d3b:	mov    edi,0x74062756
  404d40:	push   es
  404d41:	popf   
  404d42:	jae    0x404d4c
  404d44:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404d45:	int3   
  404d46:	std    
  404d47:	dec    ecx
  404d49:	call   0xa217a913
  404d4e:	push   cs
  404d4f:	add    BYTE PTR [ebx+0x1283eae8],dh
  404d55:	pushf  
  404d56:	push   ecx
  404d57:	push   0x28ef7
  404d5c:	mul    DWORD PTR [ecx-0x55]
  404d5f:	sti    
  404d60:	shl    BYTE PTR [edx+ecx*4+0x45],1
  404d64:	retf   
  404d65:	or     BYTE PTR [esi],ah
  404d67:	cmc    
  404d68:	sub    al,0xcb
  404d6a:	add    eax,0xec884200
  404d6f:	push   ss
  404d70:	mov    al,0x1e
  404d72:	out    0x6a,al
  404d74:	test   DWORD PTR [edi],0x822aff02
  404d7a:	outs   dx,DWORD PTR ds:[esi]
  404d7b:	add    BYTE PTR [eax+0x364bd076],bl
  404d81:	mov    al,BYTE PTR [eax-0x24cdf140]
  404d87:	jne    0x404d0c
  404d89:	mov    eax,ds:0xcc78fb6f
  404d8e:	ret    
  404d8f:	inc    ebp
	...
  404d9c:	jae    0x404d27
  404d9e:	add    eax,0xdd1cf700
  404da3:	dec    ebx
  404da4:	mov    dh,0x89
  404da6:	out    dx,al
  404da7:	sub    eax,0x458e746c
  404dac:	jmp    FWORD PTR [esi-0x3b78026]
  404db2:	sbb    al,0x42
  404db4:	sti    
  404db5:	jle    0x404db5
  404db7:	imul   esi,edi,0xc708441e
  404dbd:	xchg   ecx,eax
  404dbe:	inc    eax
  404dbf:	dec    ebp
  404dc0:	mov    dh,0x89
  404dc2:	fidiv  DWORD PTR [edx]
  404dc4:	bsr    ebx,ebx
  404dc7:	call   FWORD PTR [eax]
  404dc9:	add    ch,0x74
  404dcc:	cli    
  404dcd:	repnz inc eax
  404dcf:	cld    
  404dd0:	sbb    al,0x71
  404dd2:	xchg   bh,al
  404dd4:	sti    
  404dd5:	or     BYTE PTR [ebx],bl
  404dd7:	add    BYTE PTR [edx-0xcba70a5],al
  404ddd:	arpl   ax,ax
  404ddf:	retf   0x5fb5
  404de2:	out    dx,eax
  404de3:	ss ins BYTE PTR es:[edi],dx
  404de5:	xchg   DWORD PTR [eax+ecx*4-0x3c1b94ce],edi
  404dec:	dec    ebx
  404ded:	pusha  
  404dee:	outs   dx,DWORD PTR ds:[esi]
  404def:	sbb    al,0xf7
  404df1:	out    dx,eax
  404df2:	hlt    
  404df3:	fwait
  404df4:	mul    DWORD PTR [edx-0x11]
  404df7:	add    ebx,DWORD PTR [esp+ebp*4]
  404dfa:	sub    eax,0xef0cf708
  404dff:	imul   eax,DWORD PTR [eax],0x0
  404e05:	add    BYTE PTR [eax],al
  404e07:	add    BYTE PTR [eax],al
  404e09:	add    BYTE PTR [eax],al
  404e0b:	add    bh,dh
  404e0d:	or     al,0xec
  404e0f:	imul   esi,edi,0x776bef0c
  404e15:	arpl   di,bp
  404e17:	add    edx,DWORD PTR [eax+0x47ebf6f0]
  404e1d:	sub    bh,0x3
  404e20:	ins    BYTE PTR es:[edi],dx
  404e21:	fwait
  404e22:	add    al,0xc4
  404e24:	xor    al,0xef
  404e26:	jecxz  0x404e58
  404e28:	pop    edi
  404e29:	retf   0x38a
  404e2c:	idiv   DWORD PTR [edx+0x62f703ee]
  404e32:	xor    al,0xcb
  404e34:	xor    eax,0x7c36ef5f
  404e39:	xchg   DWORD PTR [esi+eax*2-0x1],esi
  404e3d:	ins    DWORD PTR es:[edi],dx
  404e3e:	scas   eax,DWORD PTR es:[edi]
  404e3f:	push   edi
  404e40:	cli    
  404e41:	loop   0x404dfa
  404e43:	add    eax,edx
  404e45:	imul   esi,DWORD PTR [edi],0x3
  404e48:	mul    DWORD PTR [edx-0x11]
  404e4b:	retf   0x5f35
  404e4e:	out    dx,eax
  404e4f:	fsubr  QWORD PTR [edx+0x1298476a]
  404e55:	arpl   di,bp
  404e57:	or     BYTE PTR [edi],0x7a
  404e5a:	mov    ebx,0xef535e0e
  404e5f:	add    esi,edi
  404e61:	imul   eax,DWORD PTR [esi],0xb06a345c
  404e67:	sub    edi,ebx
  404e69:	pop    edi
  404e6a:	mov    esi,0x662f4e9
  404e6f:	xor    BYTE PTR [eax],al
	...
  404e79:	add    BYTE PTR [eax],al
  404e7b:	add    BYTE PTR [esi+0x6fbc065e],dh
  404e81:	xchg   BYTE PTR [ebp+0x60cb025],al
  404e87:	xchg   ebx,eax
  404e88:	hlt    
  404e89:	jns    0x404efe
  404e8b:	icebp  
  404e8c:	int3   
  404e8d:	into   
  404e8e:	jecxz  0x404e79
  404e90:	hlt    
  404e91:	ins    DWORD PTR es:[edi],dx
  404e92:	(bad)  
  404e93:	jne    0x404e73
  404e95:	adc    dl,BYTE PTR [esi-0x2f]
  404e98:	sub    DWORD PTR [ebp-0x7],edi
  404e9b:	fidiv  WORD PTR [edx+0x1f]
  404e9e:	cli    
  404e9f:	xor    ebx,esp
  404ea1:	jns    0x404f16
  404ea3:	int    0xac
  404ea5:	out    dx,eax
  404ea6:	or     eax,0x6802ad1
  404eab:	jmp    0xe5b3f1a1
  404eb0:	popf   
  404eb1:	out    dx,eax
  404eb2:	stc    
  404eb3:	rcl    esp,0x7c
  404eb6:	stc    
  404eb7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404eb8:	sbb    BYTE PTR [ebx+0x1f71eaed],ah
  404ebe:	cli    
  404ebf:	mov    al,ds:0x34065e31
  404ec4:	add    BYTE PTR [esi+0x670e7255],0x6c
  404ecb:	(bad)  [ecx]
  404ecd:	mov    edi,DWORD PTR [ebp+0x73]
  404ed0:	sbb    al,0x79
  404ed2:	ins    BYTE PTR es:[edi],dx
  404ed3:	jmp    0xeaacb17a
  404ed8:	call   0x662:0x8cea6c62
  404edf:	jmp    0x404ee4
	...
  404eec:	je     0x404f67
  404eee:	jae    0x404ed1
  404ef0:	sbb    al,0x6e
  404ef2:	loop   0x404ef4
  404ef4:	push   ds
  404ef5:	pop    DWORD PTR gs:[ebx]
  404ef8:	dec    esi
  404ef9:	sub    DWORD PTR [edx+0x6a],ebx
  404efc:	push   cs
  404efd:	xor    eax,0x5f3b35ee
  404f02:	push   es
  404f03:	mov    DWORD PTR [ebp-0x7bff93a0],ebx
  404f09:	fs ins BYTE PTR es:[edi],dx
  404f0b:	add    BYTE PTR [esi+ebx*2+0x6c],dh
  404f0f:	add    BYTE PTR [ecx],al
  404f11:	push   eax
  404f12:	out    dx,al
  404f13:	daa    
  404f14:	sti    
  404f15:	pop    esi
  404f16:	push   es
  404f17:	or     ecx,DWORD PTR [esi]
  404f19:	adc    ebp,DWORD PTR [ecx]
  404f1b:	mov    DWORD PTR [ebp+0x74006f78],ecx
  404f21:	fs ins BYTE PTR es:[edi],dx
  404f23:	add    BYTE PTR [ebx+eiz*2+0x56],al
  404f27:	call   0x46d122
  404f2c:	pop    ss
  404f2d:	and    DWORD PTR [esi],ecx
  404f2f:	or     ebx,DWORD PTR [esi+0x13]
  404f32:	and    bh,bh
  404f34:	int    0x62
  404f36:	out    dx,al
  404f37:	mov    ebx,0xff0664ba
  404f3c:	jge    0x404eca
  404f3e:	mov    dl,0xe4
  404f40:	pop    esi
  404f41:	rol    DWORD PTR fs:[ebx],0x91
  404f45:	popf   
  404f46:	stc    
  404f47:	inc    DWORD PTR [ebp+0x7633f96b]
  404f4d:	ret    
  404f4e:	loop   0x404f50
	...
  404f5c:	pop    esi
  404f5d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404f5e:	add    eax,0xf99d71ff
  404f63:	sub    ecx,DWORD PTR [esi+0x51084557]
  404f69:	repz lds ebx,FWORD PTR [ebx+0x57]
  404f6d:	sahf   
  404f6e:	push   cs
  404f6f:	add    BYTE PTR [ebx-0x17],ch
  404f72:	jmp    0xf783:0xe3aa553
  404f79:	push   esp
  404f7a:	fnsave [eax+ebp*8+0x28]
  404f7e:	push   eax
  404f7f:	or     BYTE PTR [edi],bl
  404f81:	pop    esp
  404f82:	fld    DWORD PTR [eax]
  404f84:	idiv   DWORD PTR [eax]
  404f86:	push   eax
  404f87:	add    al,0xf
  404f89:	mov    eax,0x48f700d9
  404f8e:	adc    al,ch
  404f90:	pop    eax
  404f91:	add    ax,0x3c00
  404f95:	xor    eax,ebx
  404f97:	add    al,0xf7
  404f99:	mov    dh,0x88
  404f9b:	in     al,dx
  404f9c:	jbe    0x404fdb
  404f9e:	in     eax,0xef
  404fa0:	enter  0x3760,0x57
  404fa4:	je     0x404f5c
  404fa6:	dec    ax
  404fa8:	mov    al,BYTE PTR ss:0x9890a74
  404faf:	gs aas 
  404fb1:	dec    ebx
  404fb2:	add    ch,al
  404fb4:	jbe    0x404f38
  404fb6:	(bad)  
  404fb8:	mov    al,0x86
  404fba:	pop    eax
  404fbb:	dec    eax
  404fbc:	mov    al,BYTE PTR ss:0x0
	...
  404fcb:	add    bh,dh
  404fcd:	mov    DWORD PTR [edx+0x45320e3d],eax
  404fd3:	add    bh,dh
  404fd5:	xor    eax,0x232afee9
  404fda:	dec    edx
  404fdb:	inc    ecx
  404fdc:	not    ecx
  404fde:	arpl   cx,di
  404fe0:	pusha  
  404fe1:	fadd   st,st(7)
  404fe3:	add    eax,0x4541ce
  404fe8:	test   DWORD PTR [ecx+0x67a0005],0xf840efd2
  404ff2:	xor    eax,ebp
  404ff4:	mov    bh,cl
  404ff6:	fdivp  st(7),st
  404ff8:	cmp    dh,0xed
  404ffb:	out    dx,eax
  404ffc:	sub    BYTE PTR [edx+0x60],ah
  404fff:	xor    al,0xf
  405001:	rcr    DWORD PTR [edi-0x27],0x18
  405005:	in     eax,0xaa
  405007:	xlat   BYTE PTR ds:[ebx]
  405008:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405009:	or     bh,BYTE PTR [edx-0x289d49b5]
  40500f:	add    eax,0xec6f62f7
  405014:	xchg   edi,eax
  405015:	jge    0x405006
  405017:	add    edi,esp
  405019:	mov    ds:0x644c7ed8,al
  40501e:	out    dx,eax
  40501f:	add    edi,DWORD PTR [eax-0x2716ec20]
  405025:	jbe    0x405016
  405027:	add    esi,edi
  405029:	bound  esp,QWORD PTR [eax]
  40502b:	jg     0x404ffc
  40502d:	xchg   BYTE PTR [eax],al
  40502f:	fld    DWORD PTR [eax]
	...
  405039:	add    BYTE PTR [eax],al
  40503b:	add    al,al
  40503d:	out    dx,ax
  40503f:	add    ecx,DWORD PTR [ebp+0x63]
  405042:	test   DWORD PTR [ebx],eax
  405044:	sbb    eax,0x7a038563
  405049:	loopne 0x405032
  40504b:	call   0x877fc6f0
  405050:	jb     0x4050c9
  405052:	rcr    al,0x90
  405055:	adc    ecx,eax
  405057:	mov    es,WORD PTR [ebx-0x7f273f7a]
  40505d:	lock mov edx,0xef7fd1eb
  405063:	add    edi,esp
  405065:	mov    ds:0x64047ed8,al
  40506a:	out    dx,eax
  40506b:	add    ecx,edi
  40506d:	mov    bh,0x37
  40506f:	inc    ebx
  405070:	test   DWORD PTR [edx],0x62b64c02
  405076:	xchg   DWORD PTR [ecx+0x4b],edx
  405079:	jbe    0x404ffb
  40507b:	or     al,0x37
  40507d:	data16 arpl dx,dx
  405080:	mul    DWORD PTR [edx+0x6]
  405083:	jmp    0x64cbe40b
  405088:	inc    eax
  405089:	xchg   cl,bh
  40508b:	data16 in al,0x10
  40508e:	out    dx,al
  40508f:	call   0x6634:0xe2f97640
  405096:	xor    BYTE PTR [ebx],0xf4
  405099:	bound  eax,QWORD PTR [esi]
  40509b:	jo     0x40501e
  40509d:	sub    cl,0x3e
	...
  4050ac:	pop    ds
  4050ad:	call   0x761f9235
  4050b2:	stc    
  4050b3:	cdq    
  4050b4:	pop    esp
  4050b5:	les    ecx,FWORD PTR [esi-0x58]
  4050b8:	hlt    
  4050b9:	jne    0x40506e
  4050bb:	or     edi,ecx
  4050bd:	jne    0x4050b8
  4050bf:	cmp    edx,0xdc690662
  4050c5:	(bad)  
  4050c6:	std    
  4050c7:	push   es
  4050c8:	lahf   
  4050c9:	imul   eax,esi,0x6c038ee
  4050cf:	jmp    0xe93f32c8
  4050d4:	(bad)  
  4050d5:	fcomp  QWORD PTR [edx+0x5662f4e9]
  4050db:	fiadd  WORD PTR [esi-0x57291676]
  4050e1:	adc    bh,cl
  4050e3:	xchg   esp,eax
  4050e4:	mov    ds:0x93c6f985,eax
  4050e9:	cmp    dh,bl
  4050eb:	mov    esi,0xc183e7a0
  4050f0:	pop    eax
  4050f1:	jne    0x4050ec
  4050f3:	sbb    ebx,ebx
  4050f5:	mov    bl,0x4e
  4050f7:	sub    bl,bh
  4050f9:	jne    0x4050ae
  4050fb:	mov    DWORD PTR [eax+0x75],edx
  4050fe:	stc    
  4050ff:	add    ebp,esi
  405101:	bound  eax,QWORD PTR [esi]
  405103:	imul   ebx,DWORD PTR [ebx+0x4],0x8d7900fd
  40510a:	or     eax,0x853542c0
  40510f:	mov    ebp,0x0
	...
  40511c:	jbe    0x40519b
  40511e:	stc    
  40511f:	call   FWORD PTR [edi]
  405121:	daa    
  405122:	cmp    eax,0x83ea5e50
  405127:	cld    
  405128:	test   eax,0xb650f98d
  40512d:	outs   dx,DWORD PTR ds:[esi]
  40512e:	in     al,0x0
  405130:	push   ds
  405131:	xor    DWORD PTR [ebx-0x682457b],ecx
  405137:	call   FWORD PTR [esi-0x74]
  40513a:	mov    bl,0xec
  40513c:	cmp    DWORD PTR [ecx+edi*8-0x66cd718],ecx
  405143:	push   DWORD PTR [esi-0x16174c73]
  405149:	mov    edi,ecx
  40514b:	push   eax
  40514c:	jmp    0xfa303c22
  405151:	mov    ebp,esi
  405153:	fcmovnb st,st(2)
  405155:	(bad)  
  405156:	stc    
  405157:	call   0x39e9fa
  40515c:	cmc    
  40515d:	mov    eax,DWORD PTR ds:[ebp-0x68266]
  405164:	fiadd  WORD PTR [esi+0x608ee2de]
  40516a:	inc    esi
  40516b:	push   eax
  40516c:	sbb    esp,ebx
  40516e:	cli    
  40516f:	out    dx,eax
  405170:	mov    ecx,0x3ff568d
  405175:	jl     0x405160
  405177:	(bad)  
  405178:	cmp    DWORD PTR [eax-0x72560b4e],ecx
  40517e:	out    dx,al
  40517f:	jmp    0x405184
	...
  40518c:	mov    eax,ds:0xc3fff98d
  405191:	jg     0x40517c
  405193:	(bad)  
  405194:	jns    0x40511e
  405196:	fdiv   st,st(7)
  405198:	test   esp,0xce72ffd0
  40519e:	loopne 0x40519f
  4051a0:	inc    eax
  4051a1:	ror    DWORD PTR [eax-0x300ac702],cl
  4051a7:	jne    0x4051dc
  4051a9:	loop   0x405173
  4051ab:	jecxz  0x4051a4
  4051ad:	mov    DWORD PTR [edi+0x0],ebp
  4051b0:	and    bh,dl
  4051b2:	aad    0xef
  4051b4:	sbb    BYTE PTR ds:0xd0b6fed,dl
  4051ba:	shr    BYTE PTR [edx-0x9],1
  4051bd:	and    al,0x96
  4051bf:	in     al,dx
  4051c0:	adc    BYTE PTR ds:0x2d95e8d0,bl
  4051c6:	sar    bh,1
  4051c8:	add    BYTE PTR [esi],0xd9
  4051cb:	out    dx,eax
  4051cc:	call   0xab3f8715
  4051d1:	pop    ecx
  4051d2:	loopne 0x4051d3
  4051d4:	fcom   DWORD PTR [ecx+0x7c]
  4051d7:	jecxz  0x4051d0
  4051d9:	mov    DWORD PTR [esi-0x2f3eb040],eax
  4051df:	mov    ch,0xc7
  4051e1:	dec    esp
  4051e2:	sar    bh,1
  4051e4:	iret   
  4051e5:	in     eax,0xe0
  4051e7:	push   DWORD PTR [eax-0x671779fe]
  4051ed:	test   bl,dl
  4051ef:	inc    DWORD PTR [eax]
	...
  4051f9:	add    BYTE PTR [eax],al
  4051fb:	add    BYTE PTR [edx-0x6f],ch
  4051fe:	jecxz  0x4051ff
  405200:	cwde   
  405201:	xchg   ecx,eax
  405202:	push   0xa78c90f7
  405207:	gs aas 
  405209:	dec    ebx
  40520a:	add    bh,bh
  40520c:	dec    edx
  40520d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40520e:	jecxz  0x40520f
  405210:	js     0x4051a3
  405212:	dec    edi
  405213:	loop   0x40520c
  405215:	mov    DWORD PTR [esi],ecx
  405217:	shl    bl,0x90
  40521a:	mov    cs,WORD PTR [ebp-0x2a6f9db1]
  405220:	pop    eax
  405221:	out    0x9f,eax
  405223:	mov    DWORD PTR [edx],edx
  405225:	(bad)  
  405226:	es inc ebx
  405228:	imul   DWORD PTR [edi+0x43]
  40522b:	aad    0x8a
  40522d:	jle    0x4051bf
  40522f:	aad    0x38
  405231:	mov    bh,BYTE PTR [ebp+0x6262f7e1]
  405237:	jg     0x40524c
  405239:	sub    DWORD PTR [eax-0x2b],0xffffffc7
  40523d:	jae    0x4051d9
  40523f:	call   0xec98c54c
  405244:	int    0x7f
  405246:	out    dx,eax
  405247:	add    esi,DWORD PTR [edx-0x5e]
  40524a:	xlat   BYTE PTR ds:[ebx]
  40524b:	dec    eax
  40524c:	add    BYTE PTR [ebp+0x72f8e553],ch
  405252:	push   edi
  405253:	or     eax,esp
  405255:	jb     0x405287
  405257:	mov    esi,DWORD PTR [edx+0x7b]
  40525a:	cmp    ch,dl
  40525c:	loopne 0x4052d0
  40525e:	pop    edx
  40525f:	in     al,dx
	...
  40526c:	enter  0x1872,0xec
  405270:	or     bh,BYTE PTR [edx+0x10]
  405273:	aad    0x94
  405275:	cld    
  405276:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405277:	inc    edx
  405278:	div    DWORD PTR [ecx+0x3a]
  40527b:	loopne 0x405245
  40527d:	jb     0x405277
  40527f:	jmp    0x40521e
  405281:	test   bh,ch
  405283:	add    edi,esp
  405285:	mov    ds:0xe06df873,al
  40528a:	xlat   BYTE PTR ds:[ebx]
  40528b:	in     al,0x98
  40528d:	jb     0x405303
  40528f:	sar    DWORD PTR [eax+esi*1+0x46],cl
  405293:	dec    esp
  405294:	ss arpl sp,bx
  405297:	lahf   
  405298:	cmp    BYTE PTR [eax+0x7278e4cb],0xd7
  40529f:	mov    dl,0x56
  4052a1:	arpl   WORD PTR [esi],ax
  4052a3:	jmp    0xbf370aeb
  4052a8:	dec    ebx
  4052a9:	jb     0x405299
  4052ab:	or     dl,BYTE PTR [ecx+0x72]
  4052ae:	stc    
  4052af:	sahf   
  4052b0:	cmp    DWORD PTR [edi-0x17],0x5e7b2396
  4052b7:	jg     0x4052e4
  4052b9:	jb     0x405314
  4052bb:	daa    
  4052bc:	sub    al,0xa6
  4052be:	push   ebx
  4052bf:	jb     0x4052d9
  4052c1:	std    
  4052c2:	or     eax,0xf9791681
  4052c7:	outs   dx,BYTE PTR ds:[esi]
  4052c8:	outs   dx,DWORD PTR ds:[esi]
  4052c9:	xchg   ebx,eax
  4052ca:	stc    
  4052cb:	sbb    al,0x36
  4052cd:	sbb    eax,DWORD PTR [edi-0x17]
	...
  4052dc:	jnp    0x405343
  4052de:	stc    
  4052df:	fdiv   st(4),st
  4052e1:	loope  0x405327
  4052e3:	in     eax,0x6d
  4052e5:	pop    eax
  4052e6:	lds    esi,FWORD PTR [ecx+0x2bcf62b5]
  4052ec:	lock jno 0x405341
  4052ef:	(bad)  
  4052f0:	shl    ch,1
  4052f2:	ret    0x1331
  4052f5:	stos   BYTE PTR es:[edi],al
  4052f6:	inc    ebx
  4052f7:	and    esp,esi
  4052f9:	bound  eax,QWORD PTR [esi]
  4052fb:	jmp    0xe94e4277
  405300:	cmp    BYTE PTR [ebp-0x7],dl
  405303:	xchg   esp,eax
  405304:	clc    
  405305:	jno    0x40537a
  405307:	icebp  
  405308:	dec    esi
  405309:	arpl   si,bp
  40530b:	cld    
  40530c:	into   
  40530d:	jno    0x405308
  40530f:	pusha  
  405310:	jmp    0x64274083
  405315:	daa    
  405316:	cli    
  405317:	jmp    0x7246b610
  40531c:	out    0xa5,al
  40531e:	dec    esi
  40531f:	sub    bl,dh
  405321:	jge    0x405338
  405323:	bound  ebp,QWORD PTR [esi]
  405325:	outs   dx,DWORD PTR ds:[esi]
  405326:	cmp    eax,0x735ac900
  40532b:	or     DWORD PTR [ecx+0x5e01fe1b],ebx
  405331:	gs push es
  405333:	jmp    0x40538d
  405335:	lock cmp BYTE PTR [ebx],cl
  405338:	xchg   ecx,eax
  405339:	or     ebp,edi
  40533b:	xor    ebx,0xffffff9e
  40533e:	push   es
  40533f:	jne    0x405341
	...
  405349:	add    BYTE PTR [eax],al
  40534b:	add    BYTE PTR [esi-0x6c],dl
  40534e:	jae    0x40534c
  405350:	jbe    0x40533a
  405352:	stc    
  405353:	push   DWORD PTR [ecx-0xf]
  405356:	inc    edx
  405357:	clc    
  405358:	adc    DWORD PTR [eax+0x2c1e08c4],esi
  40535e:	lea    edi,ds:0x472e4d
  405364:	lds    ebp,FWORD PTR [esi+0x50]
  405367:	mov    esi,ecx
  405369:	mov    ?,WORD PTR [eax]
  40536b:	mul    BYTE PTR [ecx+0x2bff0d95]
  405371:	cdq    
  405372:	rol    DWORD PTR ds:0x472ecd,0xde
  405379:	fs push es
  40537b:	add    BYTE PTR [ecx+0x228b53a9],al
  405381:	sub    al,0x50
  405383:	push   0xffffffce
  405385:	xchg   ebp,eax
  405386:	jae    0x405390
  405388:	out    0xd4,al
  40538a:	(bad)  
  40538b:	jmp    ecx
  40538d:	out    dx,eax
  40538e:	std    
  40538f:	jmp    FWORD PTR [ebx+0x6c]
  405392:	loope  0x40537f
  405394:	out    dx,al
  405395:	pushw  es
  405397:	xor    esi,0x65
  40539a:	jo     0x4053ab
  40539c:	mov    esp,esp
  40539e:	cmp    DWORD PTR [edx],esp
  4053a0:	sub    ebp,DWORD PTR [ebp+edi*8-0x73]
  4053a4:	cmp    DWORD PTR [esi-0x73],esp
  4053a7:	enter  0xc8ad,0x59
  4053ab:	push   0x413dc0f7
	...
  4053bc:	idiv   DWORD PTR [eax]
  4053be:	fisubr DWORD PTR [edx-0x6b]
  4053c1:	jp     0x4053c8
  4053c3:	or     esi,DWORD PTR [edi]
  4053c5:	ss push cs
  4053c7:	(bad)  
  4053c8:	mov    bh,0x7d
  4053ca:	add    eax,0x223c36a
  4053cf:	push   edi
  4053d0:	dec    edi
  4053d1:	sub    al,ah
  4053d3:	add    bh,dh
  4053d5:	je     0x40539c
  4053d7:	je     0x4053cb
  4053d9:	mov    edi,0x7d4c0005
  4053de:	iret   
  4053df:	pop    es
  4053e0:	not    DWORD PTR [eax-0x26]
  4053e3:	test   al,0x17
  4053e5:	jp     0x4053ec
  4053e7:	sub    DWORD PTR [edi],0x7d
  4053ea:	pop    esp
  4053eb:	add    edi,DWORD PTR [ecx]
  4053ed:	mov    DWORD PTR ds:0x34a8308b,eax
  4053f3:	leave  
  4053f4:	xor    eax,0x7c550586
  4053f9:	es add ah,0x3
  4053fd:	add    eax,0x79f20c4e
  405402:	cmc    
  405403:	push   eax
  405405:	leave  
  405406:	ffree  st(5)
  405408:	loop   0x405442
  40540a:	aam    0x89
  40540c:	cmp    bh,BYTE PTR [esi]
  40540e:	aam    0x75
  405410:	jmp    0x40545a
  405412:	pop    esi
  405413:	cld    
  405414:	rcl    dh,1
  405416:	std    
  405417:	out    0xdc,eax
  405419:	dec    esi
  40541a:	aam    0xff
  40541c:	rcl    dh,0xf5
  40541f:	inc    BYTE PTR [eax]
	...
  405429:	add    BYTE PTR [eax],al
  40542b:	add    BYTE PTR [edx+0x76],al
  40542e:	aam    0x75
  405430:	mov    bl,0x51
  405432:	mov    ds:0xd479f709,eax
  405437:	jne    0x4053dc
  405439:	popa   
  40543a:	mov    ebp,?
  40543c:	cwde   
  40543d:	(bad)  
  40543e:	loopne 0x4053fb
  405440:	mov    ch,0x5e
  405442:	out    dx,eax
  405443:	ss jl  0x4054c4
  405446:	cmp    DWORD PTR ds:0xfc527028,esi
  40544c:	nop
  40544d:	leave  
  40544e:	iret   
  40544f:	add    al,0xf7
  405451:	shl    ah,cl
  405453:	ret    
  405454:	loop   0x4054bd
  405456:	adc    BYTE PTR ds:0xfcad99c1,ch
  40545c:	pop    eax
  40545d:	fsub   QWORD PTR [edx]
  40545f:	cld    
  405460:	sbb    bl,0xc7
  405463:	je     0x4054e1
  405465:	cmc    
  405466:	loop   0x405484
  405468:	aaa    
  405469:	outs   dx,BYTE PTR ds:[esi]
  40546a:	push   esi
  40546b:	sar    DWORD PTR [eax],1
  40546d:	outs   dx,DWORD PTR ds:[esi]
  40546e:	xor    BYTE PTR [ebp+eiz*1-0x40],0x5f
  405473:	test   al,ch
  405475:	(bad)  
  405476:	sti    
  405477:	jmp    0x6217:0x538713c9
  40547e:	out    dx,eax
  40547f:	cld    
  405480:	push   eax
  405481:	cmc    
  405482:	fbstp  TBYTE PTR [eax]
  405484:	lods   al,BYTE PTR ds:[esi]
  405485:	adc    BYTE PTR [esi],ah
  405487:	(bad)  
  405488:	out    dx,eax
  405489:	bound  esp,QWORD PTR [esi+0xa]
  40548c:	je     0x405436
  40548e:	jmp    0x40546c
	...
  40549c:	leave  
  40549d:	stos   DWORD PTR es:[edi],eax
  40549e:	out    dx,al
  40549f:	add    esi,edi
  4054a1:	bound  edx,QWORD PTR [eax+0x2d9c412c]
  4054a7:	cld    
  4054a8:	fadd   DWORD PTR [esi]
  4054aa:	pushf  
  4054ab:	cmp    al,0x36
  4054ad:	arpl   WORD PTR [edi-0x10dbc1cd],dx
  4054b3:	fld    TBYTE PTR [eax+0x6e]
  4054b6:	or     cl,dl
  4054b8:	dec    edi
  4054b9:	stos   BYTE PTR es:[edi],al
  4054ba:	mov    ah,0x42
  4054bc:	idiv   edx
  4054be:	dec    ebp
  4054bf:	ds arpl WORD PTR ss:[esi],ax
  4054c3:	add    DWORD PTR [ebx],esp
  4054c5:	outs   dx,BYTE PTR ds:[esi]
  4054c6:	stc    
  4054c7:	out    dx,al
  4054c8:	cmp    al,0xf6
  4054ca:	dec    esp
  4054cb:	sub    bl,bh
  4054cd:	cli    
  4054ce:	imul   esi,DWORD PTR [eax],0x34
  4054d1:	arpl   si,bp
  4054d3:	push   eax
  4054d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4054d5:	outs   dx,BYTE PTR ds:[esi]
  4054d6:	stc    
  4054d7:	inc    ecx
  4054d8:	mov    al,ds:0xcce9471a
  4054dd:	xchg   ebp,eax
  4054de:	dec    ebp
  4054df:	sub    bl,dh
  4054e1:	jp     0x40554f
  4054e3:	mov    dh,0x47
  4054e5:	outs   dx,BYTE PTR ds:[esi]
  4054e6:	outs   dx,BYTE PTR ds:[esi]
  4054e7:	inc    edx
  4054e8:	sbb    ah,BYTE PTR [esi+eax*1]
  4054eb:	adc    DWORD PTR [eax],ebx
  4054ed:	sbb    al,0x47
  4054ef:	jmp    0x97395f20
  4054f4:	daa    
  4054f5:	sti    
  4054f6:	and    dh,BYTE PTR fs:[edx+eiz*2+0x23ec8c6e]
  4054fe:	push   es
  4054ff:	xchg   ecx,eax
	...
  40550c:	call   0xbcb74e7e
  405511:	popf   
  405512:	dec    ebp
  405513:	sub    bl,dh
  405515:	cli    
  405516:	and    al,0xb2
  405518:	mov    ch,0x62
  40551a:	out    dx,al
  40551b:	sbb    al,0x26
  40551d:	outs   dx,BYTE PTR ds:[esi]
  40551e:	stc    
  40551f:	ror    DWORD PTR [ebx+0x1a],0x47
  405523:	jmp    0xa88d78c4
  405528:	hlt    
  405529:	jp     0x405553
  40552b:	ds (bad) 
  40552d:	ins    DWORD PTR es:[edi],dx
  40552e:	lds    ebx,FWORD PTR [ebx+eiz*2-0x235b7281]
  405535:	pop    eax
  405536:	(bad)  
  405537:	popf   
  405538:	stc    
  405539:	loop   0x405579
  40553b:	jmp    0xe9feb161
  405540:	hlt    
  405541:	bound  eax,QWORD PTR [esi]
  405543:	and    BYTE PTR [edx-0x3afff99a],dh
  405549:	mov    bh,0xed
  40554b:	pop    ss
  40554c:	push   ds
  40554d:	pop    edx
  40554e:	pop    edx
  40554f:	je     0x4054e4
  405551:	loope  0x405591
  405553:	das    
  405554:	and    ebx,DWORD PTR [ebx-0x44]
  405557:	add    DWORD PTR [esi-0x6c14f99f],ebx
  40555d:	fild   DWORD PTR [esi]
  40555f:	add    BYTE PTR [esi-0x197fb99f],cl
  405565:	data16 jae 0x40554c
  405568:	in     eax,0xa0
  40556a:	iret   
  40556b:	ret    0x6152
  40556e:	push   ebx
  40556f:	mov    eax,DWORD PTR [eax]
	...
  405579:	add    BYTE PTR [eax],al
  40557b:	add    BYTE PTR [edx],bh
  40557d:	xor    eax,0x1bd55350
  405582:	or     al,BYTE PTR ds:0x6655e
  405588:	pop    DWORD PTR [esi-0x752217aa]
  40558e:	stc    
  40558f:	call   ebp
  405591:	sahf   
  405592:	(bad)  
  405593:	fsub   DWORD PTR [ebp-0x2474f1f5]
  405599:	(bad)  
  40559a:	in     eax,dx
  40559b:	add    dh,BYTE PTR [edx+0x22c90d2f]
  4055a1:	pop    edx
  4055a2:	xchg   BYTE PTR [esi],bh
  4055a4:	add    al,0xa
  4055a6:	repz or eax,edi
  4055a9:	or     al,BYTE PTR [esp+eiz*4]
  4055ac:	push   edi
  4055ad:	dec    eax
  4055ae:	(bad)  
  4055af:	stos   BYTE PTR es:[edi],al
  4055b0:	xchg   ebx,eax
  4055b1:	scas   eax,DWORD PTR es:[edi]
  4055b2:	jae    0x40559a
  4055b4:	mov    al,gs:0xaf895e5d
  4055ba:	les    ecx,FWORD PTR [eax]
  4055bc:	into   
  4055bd:	xor    DWORD PTR [eax-0x47],edx
  4055c0:	shl    BYTE PTR [eax+0x6],cl
  4055c3:	add    BYTE PTR [esi+0x50],cl
  4055c6:	aam    0x90
  4055c8:	lods   eax,DWORD PTR ds:[esi]
  4055c9:	mov    ecx,0xe9f7ac96
  4055ce:	clc    
  4055cf:	mov    ch,0xb7
  4055d1:	jmp    0x9002:0xef872b15
  4055d8:	je     0x405612
  4055da:	or     BYTE PTR [eax-0x6fe749cc],dl
	...
  4055ec:	and    al,BYTE PTR [ebp+esi*2+0x7245b583]
  4055f3:	inc    ebx
  4055f4:	retf   
  4055f5:	dec    ecx
  4055f6:	jb     0x405674
  4055f8:	in     eax,dx
  4055f9:	push   ebp
  4055fa:	or     edx,DWORD PTR [eax+0x40186f8]
  405600:	hlt    
  405601:	leave  
  405602:	inc    esp
  405603:	cmp    al,0xb6
  405605:	or     DWORD PTR [ecx+0xb],ecx
  405608:	and    edx,DWORD PTR [eax+0x72]
  40560b:	jg     0x4055fe
  40560d:	ins    DWORD PTR es:[edi],dx
  40560e:	inc    edx
  40560f:	nop
  405610:	hlt    
  405611:	test   eax,0xe9d63c44
  405616:	dec    eax
  405617:	or     al,BYTE PTR [ebx]
  405619:	push   eax
  40561a:	jb     0x40569b
  40561c:	repnz lods eax,DWORD PTR ds:[esi]
  40561e:	inc    eax
  40561f:	add    eax,DWORD PTR [edi+0x39]
  405622:	ret    
  405623:	ret    0xd7f1
  405626:	xchg   edx,eax
  405627:	shr    DWORD PTR ds:0xe8c27c7c,0xc1
  40562e:	ret    0xffe8
  405631:	mov    al,0x75
  405633:	mov    edi,DWORD PTR [edx+ebp*8]
  405636:	sub    bl,BYTE PTR [ebx+0x34]
  405639:	scas   eax,DWORD PTR es:[edi]
  40563a:	jl     0x405628
  40563c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40563d:	mov    ah,0x33
  40563f:	cld    
  405640:	jl     0x4055f0
  405642:	std    
  405643:	(bad)  
  405644:	jl     0x4055f4
  405646:	cmc    
  405647:	(bad)  
  405648:	ins    BYTE PTR es:[edi],dx
  405649:	(bad)  
  40564a:	stc    
  40564b:	(bad)  
  40564c:	and    al,0x51
  40564e:	in     al,0x22
	...
  40565c:	bound  edi,QWORD PTR [bp-0x208d]
  405661:	lock pop ss
  405663:	into   
  405664:	rcl    dl,0x6a
  405667:	mov    esp,0xc4455b39
  40566c:	lahf   
  40566d:	pop    edx
  40566e:	pop    edi
  40566f:	inc    edx
  405670:	xchg   ebp,eax
  405671:	push   0x5f
  405673:	sub    al,0x87
  405675:	fild   QWORD PTR [ecx]
  405677:	pop    es
  405678:	xchg   edi,ebx
  40567a:	push   es
  40567b:	pop    es
  40567c:	addr16 jmp 0x40563f
  40567f:	je     0x4056fd
  405681:	lahf   
  405682:	jg     0x4056b2
  405684:	and    BYTE PTR [eax],cl
  405686:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405687:	ret    0x62eb
  40568a:	xor    bh,BYTE PTR [ecx+0x63]
  40568d:	loope  0x40563a
  40568f:	loopne 0x4056fa
  405691:	imul   edi,DWORD PTR [eax+0x62880c31],0x47
  405698:	pop    ebx
  405699:	adc    al,BYTE PTR [edi-0x40]
  40569c:	mov    edi,0x2ccef21
  4056a1:	xor    BYTE PTR [edi],0x43
  4056a4:	idiv   DWORD PTR [edx+0x75]
  4056a7:	lods   eax,DWORD PTR ds:[esi]
  4056a8:	mul    DWORD PTR [edx-0x1c]
  4056ab:	ret    
  4056ac:	stos   BYTE PTR es:[edi],al
  4056ad:	inc    eax
  4056ae:	adc    BYTE PTR [edi+0x7],0x6c
  4056b2:	repnz dec DWORD PTR [esi+0x1804055f]
  4056b9:	cmc    
  4056ba:	out    0xcc,al
  4056bc:	mov    ch,BYTE PTR [esi+0x57]
  4056bf:	test   DWORD PTR [eax],eax
	...
  4056c9:	add    BYTE PTR [eax],al
  4056cb:	add    BYTE PTR [eax],ch
  4056cd:	(bad)  
  4056ce:	out    dx,eax
  4056cf:	clc    
  4056d0:	inc    eax
  4056d1:	cmc    
  4056d2:	in     eax,dx
  4056d3:	inc    eax
  4056d4:	clc    
  4056d5:	hlt    
  4056d6:	dec    edx
  4056d7:	fcom   QWORD PTR [ebp-0x76]
  4056da:	out    dx,eax
  4056db:	add    edi,esp
  4056dd:	(bad)  
  4056de:	call   0x6a41169
  4056e3:	jmp    0x3ac42edc
  4056e8:	shr    DWORD PTR [edx-0x7],0xb9
  4056ec:	sub    al,0x5f
  4056ee:	pop    es
  4056ef:	jmp    0x378bd1e8
  4056f4:	repz bound ecx,QWORD PTR ds:0xaae6b229
  4056fb:	jmp    0xe57bb9f4
  405700:	cmc    
  405701:	bound  eax,QWORD PTR [esi]
  405703:	out    0x73,al
  405705:	les    eax,FWORD PTR [esi]
  405707:	jmp    0x74465400
  40570c:	jno    0x405784
  40570e:	clc    
  40570f:	fidiv  WORD PTR [ebx+0x491bee13]
  405715:	arpl   WORD PTR [esi],ax
  405717:	pop    esp
  405718:	jns    0x405790
  40571a:	clc    
  40571b:	(bad)  
  40571c:	cmp    edx,DWORD PTR [ebx]
  40571e:	out    dx,al
  40571f:	sub    DWORD PTR [ecx],esi
  405721:	push   0xfffffff9
  405723:	loop   0x405759
  405725:	lock sbb DWORD PTR [ecx-0x80],eax
  405729:	sbb    eax,DWORD PTR [edi-0x17]
  40572c:	leave  
  40572d:	fcomip st,st(5)
  40572f:	lahf   
	...
  40573c:	xor    ebp,DWORD PTR [edx+0x56]
  40573f:	sub    DWORD PTR [esi+0x438ef970],0x4b190df0
  405749:	mov    al,ds:0x7e337ef0
  40574e:	or     DWORD PTR [esi-0x3f],esi
  405751:	pop    edx
  405752:	mov    esp,DWORD PTR [edi+eiz*1+0x69]
  405756:	stc    
  405757:	les    di,DWORD PTR [edx+0x66]
  40575b:	push   edi
  40575c:	xor    ebp,DWORD PTR [edx-0x71]
  40575f:	ins    BYTE PTR es:[edi],dx
  405760:	sbb    BYTE PTR [ecx-0x7],ch
  405763:	dec    esi
  405764:	dec    esi
  405765:	arpl   WORD PTR [eax+eax*1-0x22],bp
  405769:	or     eax,DWORD PTR [edx+ebp*2]
  40576c:	into   
  40576d:	or     eax,DWORD PTR ds:0x665ce68
  405773:	shl    BYTE PTR [ecx],0xd1
  405776:	jmp    0x35f:0xee9711fe
  40577d:	pushw  es
  40577f:	mov    DWORD PTR [ebx-0x598bb963],ecx
  405785:	xchg   esi,eax
  405786:	jae    0x405798
  405788:	icebp  
  405789:	adc    BYTE PTR [edx],cl
  40578b:	jmp    FWORD PTR [ebx]
  40578d:	sahf   
  40578e:	out    dx,al
  40578f:	div    ebx
  405791:	xchg   esi,eax
  405792:	stc    
  405793:	mov    esp,esi
  405795:	xchg   esi,eax
  405796:	jae    0x405790
  405798:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405799:	sub    ebx,ebx
  40579b:	add    BYTE PTR [esi+0x75dc68],cl
	...
  4057a9:	add    BYTE PTR [eax],al
  4057ab:	add    BYTE PTR [ebp+0x40ecb39c],dl
  4057b1:	popf   
  4057b2:	stc    
  4057b3:	call   0x4713a6
  4057b8:	mov    eax,ds:0xa1feead3
  4057bd:	popf   
  4057be:	out    dx,al
  4057bf:	imul   ecx,DWORD PTR [ebp+ebx*4+0x399d8bf9],0x6552c2cf
  4057ca:	push   ebx
  4057cb:	mov    esi,DWORD PTR [edx-0x21]
  4057ce:	ret    0x80ec
  4057d1:	popf   
  4057d2:	stc    
  4057d3:	push   ebx
  4057d4:	jno    0x4057e9
  4057d6:	or     bh,bh
  4057d8:	sub    ebp,DWORD PTR [ebp+0x61]
  4057db:	int3   
  4057dc:	(bad)  
  4057dd:	pop    ds
  4057de:	push   es
  4057df:	dec    DWORD PTR [ebx+0x7e]
  4057e2:	dec    esi
  4057e3:	inc    ecx
  4057e4:	push   ds
  4057e5:	lea    ebx,[ebp+esi*8-0x5f]
  4057e9:	popf   
  4057ea:	or     eax,0x8680f7c0
  4057ef:	(bad)  
  4057f1:	jns    0x4057f8
  4057f3:	sub    ecx,esp
  4057f5:	out    dx,eax
  4057f6:	xchg   bh,ch
  4057f8:	loope  0x405823
  4057fa:	int    0x50
  4057fc:	dec    edi
  4057fd:	jbe    0x405801
  4057ff:	add    bh,dh
  405801:	and    DWORD PTR ds:0xf879f7dd,esi
  405807:	mov    edi,0x8efdf0
  40580c:	idiv   DWORD PTR [ecx+0xe]
  40580f:	add    al,0x0
	...
  405819:	add    BYTE PTR [eax],al
  40581b:	add    dh,dh
  40581d:	jns    0x405824
  40581f:	pshufw mm5,QWORD PTR [edx+eax*1],0x0
  405824:	div    esi
  405826:	inc    esi
  405827:	cld    
  405828:	inc    edi
  405829:	bound  ebx,QWORD PTR [ecx-0x17]
  40582c:	nop
  40582d:	jns    0x4058ad
  40582f:	test   DWORD PTR [eax+0x27ffcc80],ebx
  405835:	xchg   edx,eax
  405836:	cmp    al,0xfd
  405838:	js     0x4057cb
  40583a:	clc    
  40583b:	mov    edi,0xbd5d75ea
  405840:	mov    edi,0x7a8d023a
  405845:	cdq    
  405846:	iret   
  405847:	call   FWORD PTR [eax+0x4a]
  40584a:	fimul  DWORD PTR [ecx-0x3346b6]
  405850:	ret    0x3571
  405853:	call   0xd2783
  405858:	dec    esp
  405859:	or     esp,0x8606ff75
  40585f:	out    dx,eax
  405860:	sub    ecx,esp
  405862:	int3   
  405863:	push   eax
  405864:	mulps  xmm2,xmm7
  405867:	call   FWORD PTR [eax]
  405869:	dec    edx
  40586a:	int    0x75
  40586c:	adc    ecx,DWORD PTR [edx-0x26]
  40586f:	and    eax,0xca60631c
  405874:	in     al,dx
  405875:	mov    ds:0xedf836d3,al
  40587a:	push   edx
  40587b:	fisttp DWORD PTR [ecx+0xca4879]
	...
  405889:	add    BYTE PTR [eax],al
  40588b:	add    BYTE PTR [esi+0x1d],bh
  40588e:	inc    edi
  40588f:	xchg   BYTE PTR [edx+0x6b],ah
  405892:	out    dx,eax
  405893:	dec    edi
  405894:	xor    eax,0x27cfaad6
  405899:	push   0xc1dfc7b2
  40589e:	inc    edx
  40589f:	add    esi,edi
  4058a1:	(bad)  [edi]
  4058a3:	dec    ebx
  4058a4:	add    eax,0x9fcf9a68
  4058a9:	in     eax,dx
  4058aa:	sub    al,BYTE PTR [ebx]
  4058ac:	neg    DWORD PTR [ebx+0x2f]
  4058af:	dec    edi
  4058b0:	fst    DWORD PTR [edx]
  4058b2:	clc    
  4058b3:	dec    edi
  4058b4:	lahf   
  4058b5:	jp     0x405903
  4058b7:	aam    0x90
  4058b9:	fs stos DWORD PTR es:[di],eax
  4058bc:	das    
  4058bd:	push   0x1324cc5a
  4058c2:	xlat   BYTE PTR ds:[ebx]
  4058c3:	mov    bh,0x86
  4058c5:	addr16 ror cl,1
  4058c8:	jmp    0xef62:0x4b2bc76e
  4058cf:	jl     0x40588b
  4058d1:	push   esi
  4058d2:	mov    eax,0xefd75f4f
  4058d7:	fcmovnu st,st(5)
  4058d9:	jno    0x405883
  4058db:	leave  
  4058dc:	dec    eax
  4058dd:	in     eax,dx
  4058de:	mov    ds:0x987a56dc,al
  4058e3:	leave  
  4058e4:	ins    BYTE PTR es:[edi],dx
  4058e5:	mov    ds:0x5a35bb34,eax
  4058ea:	out    dx,eax
  4058eb:	cs jl  0x405964
  4058ee:	sbb    BYTE PTR [ebp+0x0],bh
	...
  4058f9:	add    BYTE PTR [eax],al
  4058fb:	add    BYTE PTR [edx-0x3e0c6ba6],ah
  405901:	jnp    0x405909
  405903:	out    dx,eax
  405904:	xchg   edx,eax
  405905:	pop    ds
  405906:	pop    es
  405907:	popa   
  405908:	neg    BYTE PTR [edi]
  40590a:	xchg   BYTE PTR [esi],ah
  40590c:	sti    
  40590d:	in     eax,dx
  40590e:	repnz mov esi,0x16861fbf
  405914:	sbb    ebp,edi
  405916:	jmp    0x405981
  405918:	(bad)  
  405919:	push   edi
  40591a:	jb     0x405968
  40591c:	jnp    0x405944
  40591e:	or     al,0xb5
  405920:	aam    0xe3
  405922:	cmp    eax,esp
  405924:	inc    eax
  405925:	mov    cl,BYTE PTR [ebp+0x7365ccac]
  40592b:	icebp  
  40592c:	pushf  
  40592d:	imul   ebx,ebp,0xffffffe9
  405930:	hlt    
  405931:	loope  0x405931
  405933:	jmp    0x8dc6977e
  405938:	cld    
  405939:	gs es jge 0x4058ce
  40593d:	out    0x79,al
  40593f:	shr    DWORD PTR [edi+0x74e77258],0xe7
  405946:	cmp    eax,0xf28aee
  40594b:	imul   edi,DWORD PTR [eax],0x29f0f92b
  405951:	pop    esi
  405952:	shr    BYTE PTR ds:0xc2066603,0xf2
  405959:	jns    0x40595f
  40595b:	shr    BYTE PTR [eax+0xabcf06],cl
	...
  405969:	add    BYTE PTR [eax],al
  40596b:	add    BYTE PTR [eax+0x66],bl
  40596e:	push   edx
  40596f:	bound  ebp,QWORD PTR [eax]
  405971:	loop   0x405935
  405973:	lds    eax,FWORD PTR [ebx]
  405975:	loop   0x4059b2
  405977:	pop    edx
  405978:	add    esp,DWORD PTR [esi+eax*1]
  40597b:	jmp    0xd4c5aa28
  405980:	xchg   DWORD PTR [edx],ebx
  405982:	inc    edi
  405983:	jmp    0x4f487c
  405988:	lea    ebx,[ecx+ebx*4+0x4b]
  40598c:	iret   
  40598d:	pop    esi
  40598e:	push   es
  40598f:	jne    0x4059b2
  405991:	inc    edi
  405992:	(bad)  
  405993:	pop    ebx
  405994:	push   edi
  405995:	mov    al,ds:0xb7e5000e
  40599a:	rol    DWORD PTR [ebp-0x5e],0x61
  40599e:	push   es
  40599f:	add    dh,bl
  4059a1:	in     al,dx
  4059a2:	inc    edx
  4059a3:	clc    
  4059a4:	scas   al,BYTE PTR es:[edi]
  4059a5:	call   0x15f9:0x61c40873
  4059ac:	pop    ebp
  4059ad:	daa    
  4059ae:	inc    edi
  4059af:	add    ch,dl
  4059b1:	mov    eax,ds:0x89365b72
  4059b6:	fld    QWORD PTR [eax]
  4059b8:	into   
  4059b9:	out    0xd5,al
  4059bb:	lea    edx,[ebx-0x4195a96b]
  4059c1:	das    
  4059c2:	stc    
  4059c3:	adc    eax,0x472719
  4059c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4059c9:	mov    eax,ds:0x24d12972
  4059ce:	loop   0x4059d1
	...
  4059dc:	sahf   
  4059dd:	popa   
  4059de:	push   es
  4059df:	inc    DWORD PTR [ebx]
  4059e1:	call   0xfc73:0x9da64589
  4059e8:	or     DWORD PTR [edx+ebp*8],esp
  4059eb:	or     ebx,0x6a
  4059ee:	stc    
  4059ef:	jae    0x405a48
  4059f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4059f2:	inc    ebx
  4059f3:	lock dec esp
  4059f5:	popa   
  4059f6:	push   es
  4059f7:	add    BYTE PTR [ebp+0x65],al
  4059fa:	rol    BYTE PTR [ebp-0x72],0x5e
  4059fe:	push   es
  4059ff:	add    BYTE PTR [esi+0xb],bl
  405a02:	push   es
  405a03:	push   0x4e
  405a05:	or     edx,DWORD PTR [esi]
  405a07:	lea    edx,[ebx]
  405a09:	adc    DWORD PTR [esi+0x6a],0xfffffff7
  405a0d:	jnp    0x4059cf
  405a0f:	jne    0x405a34
  405a11:	aam    0xf7
  405a13:	mov    dh,0xac
  405a15:	cmp    al,BYTE PTR [edx]
  405a17:	or     esi,DWORD PTR [edi]
  405a19:	outs   dx,DWORD PTR ds:[esi]
  405a1a:	add    al,BYTE PTR [ebx+0x74]
  405a1d:	outs   dx,BYTE PTR ds:[esi]
  405a1e:	leave  
  405a1f:	add    BYTE PTR [ebx+0xb75c083],al
  405a25:	adc    edi,edi
  405a27:	(bad)  
  405a29:	jnp    0x405aa7
  405a2b:	ret    
  405a2c:	dec    esp
  405a2d:	inc    ebx
  405a2e:	les    ecx,FWORD PTR [eax]
  405a30:	imul   DWORD PTR [esi-0x581f1384]
  405a36:	std    
  405a37:	out    0xf0,eax
  405a39:	inc    eax
  405a3a:	add    al,BYTE PTR [eax]
  405a3c:	aaa    
  405a3d:	retf   0x41dd
	...
  405a4c:	(bad)  
  405a4d:	xor    eax,0xc7c050c1
  405a52:	std    
  405a53:	dec    edi
  405a54:	iret   
  405a55:	outs   dx,BYTE PTR ds:[esi]
  405a56:	lods   al,BYTE PTR ds:[esi]
  405a57:	add    bh,dh
  405a59:	mov    cl,0xba
  405a5b:	ret    0x79f3
  405a5e:	mov    edx,DWORD PTR ss:[ebx+0x44fcc5f9]
  405a65:	stc    
  405a66:	dec    esi
  405a67:	or     bh,dh
  405a69:	out    0xf7,al
  405a6b:	sub    dh,BYTE PTR [edi-0x103d452f]
  405a71:	jns    0x405a8f
  405a73:	fisttp DWORD PTR ds:0xdd005f7a
  405a79:	jns    0x405ada
  405a7b:	add    BYTE PTR [eax+0xf],ch
  405a7e:	(bad)  
  405a7f:	(bad)  
  405a80:	jmp    0xdd79:0xcd005f71
  405a87:	ss sub al,0x7a
  405a8a:	add    eax,0x162e370b
  405a8f:	mov    DWORD PTR [edx-0x3d395c9e],edi
  405a95:	xchg   di,ax
  405a97:	int    0x20
  405a99:	fs nop
  405a9b:	cli    
  405a9c:	push   0x3f7ac1ef
  405aa1:	stc    
  405aa2:	out    dx,al
  405aa3:	pop    ecx
  405aa4:	mul    DWORD PTR [ebx-0xe]
  405aa7:	(bad)  
  405aa8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405aa9:	arpl   dx,di
  405aab:	test   DWORD PTR [ecx],0x59e6ee
	...
  405ab9:	add    BYTE PTR [eax],al
  405abb:	add    bh,dh
  405abd:	clc    
  405abe:	out    dx,al
  405abf:	fucomi st,st(5)
  405ac1:	xchg   edi,ebp
  405ac3:	add    edi,esp
  405ac5:	mov    ds:0x7b45fbda,al
  405aca:	xchg   edi,eax
  405acb:	(bad)  
  405acc:	loopne 0x405b31
  405ace:	adc    al,0xab
  405ad0:	ins    BYTE PTR es:[edi],dx
  405ad1:	lahf   
  405ad2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405ad3:	mov    esp,0x30ef5ab5
  405ad8:	jl     0x405b50
  405ada:	(bad)
  405add:	in     eax,dx
  405ade:	neg    bl
  405ae0:	jo     0x405b45
  405ae2:	sbb    dh,al
  405ae4:	mov    esi,0x4203eba0
  405ae9:	fdivr  st,st(3)
  405aeb:	and    DWORD PTR [edx],0xf14fef57
  405af1:	fistp  QWORD PTR [edx-0x5]
  405af4:	nop
  405af5:	out    dx,al
  405af6:	call   0x2dda1215
  405afb:	sti    
  405afc:	cmp    cl,0xee
  405aff:	les    eax,FWORD PTR [edx]
  405b01:	push   edi
  405b02:	fmul   DWORD PTR [edi-0x1]
  405b05:	jp     0x405ab0
  405b07:	test   eax,0xc3e462f7
  405b0c:	jmp    0x405b60
  405b0e:	sahf   
  405b0f:	push   edi
  405b10:	jmp    0x405b75
  405b12:	xor    bh,al
  405b14:	push   ecx
  405b15:	in     eax,dx
  405b16:	add    eax,0xf9132ce1
  405b1b:	scas   al,BYTE PTR es:[edi]
  405b1c:	cmp    dh,BYTE PTR [edi+0x1e]
  405b1f:	jb     0x405b21
	...
  405b29:	add    BYTE PTR [eax],al
  405b2b:	add    al,bh
  405b2d:	push   esi
  405b2e:	inc    esi
  405b2f:	cmp    DWORD PTR [ebx-0x13],edx
  405b32:	call   0xf9528dcd
  405b37:	adc    al,0x1f
  405b39:	adc    edi,ecx
  405b3b:	cld    
  405b3c:	sbb    al,0x7b
  405b3e:	cdq    
  405b3f:	mov    ?,WORD PTR [edx]
  405b41:	arpl   WORD PTR [esi-0x60],bx
  405b44:	xor    eax,0x7e14065a
  405b49:	jbe    0x405b9b
  405b4b:	mov    esi,0xf17bdfc7
  405b50:	hlt    
  405b51:	xlat   BYTE PTR ds:[ebx]
  405b52:	lar    esi,WORD PTR [ebx-0x6250a642]
  405b59:	and    eax,0xa85fe90e
  405b5e:	or     ch,BYTE PTR [edx-0x25]
  405b61:	fs or  eax,0x2d6c2729
  405b67:	sub    DWORD PTR [esi],ecx
  405b69:	ret    0x3058
  405b6c:	mov    ch,0x6b
  405b6e:	push   es
  405b6f:	jb     0x405b49
  405b71:	outs   dx,BYTE PTR ds:[esi]
  405b72:	lea    ebx,[esp+ebp*4+0x2e02f7ed]
  405b79:	leave  
  405b7a:	(bad)  
  405b7b:	out    dx,eax
  405b7c:	je     0x405bdd
  405b7e:	ss jnp 0x405b0f
  405b81:	loop   0x405b7d
  405b83:	mov    al,0x3b
  405b85:	push   0x4de4fd86
  405b8a:	sub    ebp,DWORD PTR [ecx-0x50]
  405b8d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405b8e:	je     0x405b7c
	...
  405b9c:	je     0x405bfd
  405b9e:	inc    eax
  405b9f:	pop    esi
  405ba0:	imul   esp,edx,0xffffffea
  405ba3:	sub    BYTE PTR [ebx+0x27],bh
  405ba6:	or     al,0x0
  405ba8:	inc    ebp
  405ba9:	dec    ebx
  405baa:	jns    0x405ba8
  405bac:	mov    edi,0x82800bb4
  405bb1:	shl    BYTE PTR [ecx+0x8],0xce
  405bb5:	cmp    DWORD PTR [edi-0x80],esp
  405bb8:	mov    bl,BYTE PTR [esp+ebp*8+0x9]
  405bbc:	inc    ebp
  405bbd:	es pop ebp
  405bbf:	pop    edi
  405bc0:	loopne 0x405bdf
  405bc2:	les    ecx,FWORD PTR [eax]
  405bc4:	push   cs
  405bc5:	push   0x36
  405bc7:	jb     0x405bef
  405bc9:	push   0x3f
  405bcb:	ja     0x405be7
  405bcd:	jp     0x405c05
  405bcf:	jmp    0x405c0c
  405bd1:	push   0x47
  405bd3:	jb     0x405be9
  405bd5:	push   0x40
  405bd7:	ja     0x405be1
  405bd9:	jp     0x405c22
  405bdb:	add    al,0xe4
  405bdd:	cmp    dl,BYTE PTR [ecx]
  405bdf:	cmp    al,0xbf
  405be1:	mov    bl,0xc
  405be3:	cmp    al,0xb8
  405be5:	scas   al,BYTE PTR es:[edi]
  405be6:	add    BYTE PTR [edi+ebp*4],ch
  405be9:	popa   
  405bea:	por    mm0,mm7
  405bed:	jp     0x405bb5
  405bef:	pop    ebx
  405bf0:	popa   
  405bf1:	xchg   edi,ecx
  405bf3:	ret    0x65d6
  405bf6:	(bad)  
  405bf7:	loopne 0x405bc3
  405bf9:	pop    ebx
  405bfa:	lds    ebp,FWORD PTR [edx-0x397a659b]
	...
  405c0c:	pushf  
  405c0d:	pop    edx
  405c0e:	fdiv   QWORD PTR [ebp+0xf]
  405c11:	out    dx,al
  405c12:	push   es
  405c13:	add    BYTE PTR [esi+0x705f5d65],cl
  405c19:	sbb    al,0xc4
  405c1b:	or     BYTE PTR [esi+0x6650558e],bl
  405c21:	mov    ebp,0x66ce2a19
  405c26:	(bad)  
  405c27:	jb     0x405c88
  405c29:	sub    cl,bh
  405c2b:	mov    ebx,0x54af7
  405c30:	div    eax
  405c32:	popa   
  405c33:	dec    ebp
  405c34:	mov    dh,0x4b
  405c36:	sub    eax,DWORD PTR [ecx]
  405c38:	test   al,0x33
  405c3a:	inc    esp
  405c3b:	std    
  405c3c:	dec    eax
  405c3d:	sbb    cl,ah
  405c3f:	xlat   BYTE PTR ds:[ebx]
  405c40:	inc    ebx
  405c41:	pop    esp
  405c42:	lds    edi,FWORD PTR [ecx-0x3af7c8]
  405c48:	and    eax,0xa206fab1
  405c4d:	jecxz  0x405bd7
  405c4f:	ret    
  405c50:	mov    esp,0x6c55c190
  405c55:	test   DWORD PTR [eax+0x527c07c4],0xe8729f58
  405c5f:	aas    
  405c60:	not    ebx
  405c62:	xor    BYTE PTR [ecx],al
  405c64:	xor    al,0xc8
  405c66:	cmp    DWORD PTR ds:0x421590,0x83133df7
	...
  405c7c:	and    ch,cl
  405c7e:	dec    eax
  405c7f:	inc    ecx
  405c80:	test   DWORD PTR [ecx+0x31],0x685f7409
  405c87:	dec    ebx
  405c88:	ss dec edx
  405c8a:	add    eax,0xc264fa75
  405c8f:	pop    ebx
  405c90:	scas   al,BYTE PTR es:[edi]
  405c91:	(bad)  
  405c92:	jmp    0xda2cfc71
  405c97:	add    bh,dh
  405c99:	(bad)  
  405c9a:	pop    edi
  405c9b:	cld    
  405c9c:	inc    ebp
  405c9d:	in     al,0xc
  405c9f:	push   eax
  405ca0:	cwde   
  405ca1:	aas    
  405ca2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405ca3:	dec    ebx
  405ca4:	ss dec edx
  405ca6:	or     al,al
  405ca8:	clc    
  405ca9:	int    0x92
  405cab:	add    bh,dh
  405cad:	dec    ecx
  405cae:	int3   
  405caf:	inc    ebp
  405cb0:	jg     0x405d15
  405cb2:	out    dx,eax
  405cb3:	add    esi,edi
  405cb5:	bound  ebp,QWORD PTR [edx+0x48]
  405cb8:	outs   dx,DWORD PTR ds:[esi]
  405cb9:	mov    bl,0x45
  405cbb:	add    al,0xcd
  405cbd:	bound  eax,QWORD PTR [ebp+0x5]
  405cc0:	pop    eax
  405cc1:	(bad)  
  405cc2:	ret    
  405cc3:	ret    0x7ea
  405cc6:	xor    al,0x45
  405cc8:	imul   DWORD PTR [ebx-0x51]
  405ccb:	cmp    ch,cl
  405ccd:	dec    edx
  405cce:	icebp  
  405ccf:	fdivr  st(7),st
  405cd1:	bound  ebp,QWORD PTR [ebx+edi*4-0x53]
  405cd5:	aad    0xf
  405cd7:	xchg   DWORD PTR [edx-0x42c810a6],ebp
  405cdd:	pop    edi
  405cde:	adc    bh,BYTE PTR [eax+eax*1+0x0]
  405ce5:	add    BYTE PTR [eax],al
  405ce7:	add    BYTE PTR [eax],al
  405ce9:	add    BYTE PTR [eax],al
  405ceb:	add    BYTE PTR [edi],cl
  405ced:	dec    edi
  405cee:	xchg   edx,eax
  405cef:	ret    0xea10
  405cf2:	and    DWORD PTR [eax+0x5377a67a],edi
  405cf8:	add    dh,dl
  405cfa:	ja     0x405cbe
  405cfc:	adc    BYTE PTR [esi-0x2b],0x4
  405d00:	lock aad 0x5b
  405d03:	ret    0x802
  405d06:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405d07:	inc    esp
  405d08:	imul   DWORD PTR [ebx+0x2f]
  405d0b:	aaa    
  405d0c:	or     esp,ebp
  405d0e:	test   eax,0x6a727cb7
  405d13:	dec    eax
  405d14:	(bad)  
  405d15:	mov    dl,0x9d
  405d17:	ret    0xbea
  405d1a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405d1b:	inc    esp
  405d1c:	imul   DWORD PTR [ebx+0x2f]
  405d1f:	aaa    
  405d20:	or     eax,0x36507ccb
  405d25:	arpl   WORD PTR [eax],dx
  405d27:	cmp    BYTE PTR [edi-0x82504b6],ah
  405d2d:	(bad)  
  405d2e:	hlt    
  405d2f:	ret    
  405d30:	or     ah,BYTE PTR [edx-0x54]
  405d33:	ret    0x5302
  405d36:	push   es
  405d37:	add    ecx,ecx
  405d39:	cmp    al,BYTE PTR [esi]
  405d3b:	jmp    0xd23332f5
  405d40:	jp     0x405d8f
  405d42:	stc    
  405d43:	fidiv  WORD PTR [esi]
  405d45:	aad    0xfa
  405d47:	sar    DWORD PTR [eax+0x6be9063a],0x23
  405d4e:	pop    ebp
  405d4f:	mov    al,0x0
	...
  405d59:	add    BYTE PTR [eax],al
  405d5b:	add    BYTE PTR [edx],bh
  405d5d:	mov    ch,0x8d
  405d5f:	int    0x74
  405d61:	es (bad) 
  405d63:	mov    bh,0x36
  405d65:	pop    edi
  405d66:	push   ebp
  405d67:	sbb    DWORD PTR [ebx-0x4b2db936],ebx
  405d6d:	(bad)  
  405d6e:	(bad)  
  405d6f:	sbb    esi,esp
  405d71:	and    edi,ecx
  405d73:	push   0x20
  405d75:	les    ecx,FWORD PTR [ebp+0x28]
  405d78:	repz bound esi,QWORD PTR [edx-0x1e]
  405d7c:	jnp    0x405d1b
  405d7e:	popa   
  405d7f:	xor    dh,BYTE PTR [edx+eiz*2-0x1c1502fa]
  405d86:	cmp    cl,BYTE PTR [esi-0x56]
  405d89:	mov    eax,ds:0x6c28e906
  405d8e:	test   DWORD PTR [edx+edx*2],ebx
  405d91:	stos   BYTE PTR es:[edi],al
  405d92:	inc    edi
  405d93:	jmp    0x244358c
  405d98:	mov    bl,0xba
  405d9a:	iret   
  405d9b:	sub    ah,dl
  405d9d:	cmp    ecx,edi
  405d9f:	aam    0x13
  405da1:	stos   BYTE PTR es:[edi],al
  405da2:	inc    edi
  405da3:	jmp    0x27330615
  405da8:	jo     0x405dd9
  405daa:	clc    
  405dab:	es mov dh,0x8b
  405dae:	pop    es
  405daf:	jmp    0x834726a8
  405db4:	cli    
  405db5:	dec    edx
  405db6:	jne    0x405de9
  405db8:	repz bound eax,QWORD PTR [ebp+0x923f600]
  405dbf:	test   BYTE PTR [eax],al
	...
  405dc9:	add    BYTE PTR [eax],al
  405dcb:	add    BYTE PTR [eax+0x17000661],ch
  405dd1:	out    0xcd,al
  405dd3:	dec    BYTE PTR [ecx-0x557a74dd]
  405dd9:	and    al,0xf9
  405ddb:	jmp    FWORD PTR [esi]
  405ddd:	and    al,0xb3
  405ddf:	enter  0x2348,0xf9
  405de3:	call   0x469d0e
  405de8:	inc    ebp
  405de9:	and    cl,BYTE PTR [ecx]
  405deb:	test   BYTE PTR [ebp-0x49fff99e],cl
  405df1:	call   0xed8e9f40
  405df6:	xor    al,0x58
  405df9:	and    edi,ecx
  405dfb:	push   eax
  405dfc:	xchg   BYTE PTR [edi+0x6f0e00df],dh
  405e02:	(bad)  
  405e03:	setb   BYTE PTR [esi]
  405e06:	push   es
  405e07:	add    BYTE PTR [esi],bl
  405e09:	sub    eax,DWORD PTR [ebx-0x6dd773c]
  405e0f:	add    BYTE PTR [esi],cl
  405e11:	bound  eax,QWORD PTR [esi]
  405e13:	lea    edx,[ebx+0x59fff825]
  405e19:	mov    dl,0xf9
  405e1b:	mov    ch,0x22
  405e1d:	and    al,0xf9
  405e1f:	dec    DWORD PTR [ecx+0x75]
  405e22:	popa   
  405e23:	dec    ebx
  405e24:	(bad)  
  405e25:	popa   
  405e26:	lea    edx,[ebp-0x6dbde]
  405e2c:	lds    esp,FWORD PTR [ecx]
  405e2e:	or     DWORD PTR [eax+eax*1+0x0],eax
  405e35:	add    BYTE PTR [eax],al
  405e37:	add    BYTE PTR [eax],al
  405e39:	add    BYTE PTR [eax],al
  405e3b:	add    BYTE PTR [esi],ah
  405e3d:	bound  eax,QWORD PTR [esi]
  405e3f:	add    ch,al
  405e41:	mov    ah,0xf2
  405e43:	mov    db6,ebx
  405e46:	add    eax,0xb3229e00
  405e4b:	aam    0xf7
  405e4d:	jne    0x405e15
  405e4f:	dec    DWORD PTR ds:0xf7002d4c
  405e55:	dec    ebx
  405e56:	add    ebp,eax
  405e58:	xor    BYTE PTR [ebp+eax*1+0x0],0xec
  405e5d:	mov    esi,DWORD PTR [ecx]
  405e5f:	jns    0x405ecf
  405e61:	push   es
  405e62:	mov    ebp,0x5247ba8d
  405e67:	push   0x74a5c
  405e6c:	pusha  
  405e6d:	mov    esi,0xcd02ffba
  405e72:	dec    ebp
  405e73:	inc    ecx
  405e74:	not    DWORD PTR [eax-0x3b]
  405e77:	je     0x405e28
  405e79:	sbb    al,0x3f
  405e7b:	cld    
  405e7c:	inc    eax
  405e7d:	ds fs dec ebx
  405e80:	mov    dh,0x4b
  405e82:	or     al,0xc0
  405e84:	stos   DWORD PTR es:[edi],eax
  405e85:	inc    edx
  405e86:	inc    esp
  405e87:	(bad)  
  405e88:	jb     0x405e95
  405e8a:	mov    eax,0x54b20ff
  405e8f:	add    bh,dh
  405e91:	mov    esi,0xe411c08f
  405e96:	mov    eax,0x51c9f50
  405e9b:	maskmovq mm4,mm3
  405e9e:	pushf  
  405e9f:	fadd   DWORD PTR [eax]
	...
  405ea9:	add    BYTE PTR [eax],al
  405eab:	add    bh,dh
  405ead:	dec    ebx
  405eae:	or     al,0xc0
  405eb0:	push   0x5f
  405eb2:	test   BYTE PTR [ebp-0x464349],bh
  405eb8:	idiv   DWORD PTR ds:0x8aa2ff09
  405ebe:	mov    eax,0xfd5d0ff
  405ec3:	loope  0x405f04
  405ec5:	or     eax,DWORD PTR ds:0x1ca104eb
  405ecb:	inc    DWORD PTR [edx-0x72]
  405ece:	stos   BYTE PTR es:[edi],al
  405ecf:	lock leave 
  405ed1:	arpl   di,bp
  405ed3:	add    ebp,DWORD PTR [eax-0x7053d82a]
  405ed9:	xor    eax,0x6b8c03ef
  405ede:	or     BYTE PTR [ecx],bh
  405ee0:	(bad)  
  405ee1:	dec    ebx
  405ee2:	and    esi,edx
  405ee4:	mul    DWORD PTR [edx+0x6a]
  405ee7:	mov    DWORD PTR [ebx+0x27bef05d],esi
  405eed:	pop    esp
  405eee:	xor    cl,ah
  405ef0:	jno    0x405f4e
  405ef2:	loopne 0x405e9f
  405ef4:	fnstenv [ebx]
  405ef6:	out    dx,eax
  405ef7:	add    ecx,DWORD PTR [esi+0x66]
  405efa:	sar    BYTE PTR [esi-0x346da3a8],1
  405f00:	push   ecx
  405f01:	pop    esp
  405f02:	shr    BYTE PTR [ebx+0x3ef358b],0x6c
  405f09:	and    BYTE PTR [ecx*8-0x509b49cc],dl
	...
  405f1c:	je     0x405f45
  405f1e:	xchg   ebx,eax
  405f1f:	push   ebx
  405f20:	les    esi,FWORD PTR [ecx-0x1836a8c3]
  405f26:	sub    DWORD PTR [eax],edx
  405f28:	push   0xffffffeb
  405f2a:	outs   dx,BYTE PTR ds:[esi]
  405f2b:	add    esi,edi
  405f2d:	bound  esi,QWORD PTR [edx+0x17]
  405f30:	xor    ah,BYTE PTR [ebx-0x11]
  405f33:	add    esi,edi
  405f35:	out    0x96,eax
  405f37:	mov    ch,BYTE PTR [edi]
  405f39:	and    al,BYTE PTR [edi+0x53a57e05]
  405f3f:	mov    ch,BYTE PTR [edx+0x6b]
  405f42:	in     al,dx
  405f43:	mov    esp,0x826f63b9
  405f48:	aam    0x9b
  405f4a:	add    al,0xbb
  405f4c:	je     0x405fa5
  405f4e:	pop    es
  405f4f:	xor    bh,cl
  405f51:	pop    edi
  405f52:	inc    esp
  405f53:	jnp    0x405f8c
  405f55:	arpl   WORD PTR [esi],ax
  405f57:	jmp    0xeb05e750
  405f5c:	ins    BYTE PTR es:[edi],dx
  405f5d:	pop    ebx
  405f5e:	inc    ebx
  405f5f:	adc    eax,0x6c3eb37b
  405f64:	fist   WORD PTR [edx-0x3f]
  405f67:	out    dx,eax
  405f68:	repz jg 0x405fae
  405f6b:	xchg   BYTE PTR [ecx+0x1d7002a4],bh
  405f71:	cs jmp 0xf8ab999d
  405f77:	adc    eax,0xa7c0fafe
  405f7c:	add    ch,dl
  405f7e:	push   edx
  405f7f:	sbb    eax,DWORD PTR [eax]
	...
  405f89:	add    BYTE PTR [eax],al
  405f8b:	add    BYTE PTR [ebx],al
  405f8d:	pop    esp
  405f8e:	jae    0x405f5d
  405f90:	mov    ds:0xb0640ed5,al
  405f95:	push   edx
  405f96:	push   esi
  405f97:	shr    eax,0x62
  405f9a:	push   es
  405f9b:	jmp    0xe9427928
  405fa0:	hlt    
  405fa1:	bound  ecx,QWORD PTR [ebp-0x5cb01ccc]
  405fa7:	psrld  mm7,QWORD PTR [eax+0x29cb425f]
  405fae:	(bad)  
  405faf:	in     eax,dx
  405fb0:	hlt    
  405fb1:	mov    ch,0x8d
  405fb3:	test   DWORD PTR [esi+0x26],esi
  405fb6:	cli    
  405fb7:	aaa    
  405fb8:	stos   BYTE PTR es:[edi],al
  405fb9:	mov    dl,0x55
  405fbb:	sbb    BYTE PTR [ebp+0x6fed72e7],ah
  405fc1:	fisttp QWORD PTR [esi]
  405fc3:	bound  esi,QWORD PTR [eax-0x48db708e]
  405fc9:	out    dx,al
  405fca:	add    BYTE PTR [edx+0x4a],dh
  405fcd:	pop    edi
  405fce:	lea    ebp,[esi-0x1aaf1214]
  405fd4:	outs   dx,DWORD PTR ds:[esi]
  405fd5:	pop    esp
  405fd6:	xor    eax,0x355dd653
  405fdb:	add    BYTE PTR [edx+ebp*8],dh
  405fde:	add    DWORD PTR [edi],0xd76cc2b6
  405fe4:	int    0x60
  405fe6:	mov    eax,0x8bc56399
  405fec:	aad    0x53
  405fee:	(bad)  
  405fef:	and    eax,DWORD PTR [eax]
	...
  405ff9:	add    BYTE PTR [eax],al
  405ffb:	add    dh,dl
  405ffd:	push   ebx
  405ffe:	dec    BYTE PTR [ebp-0x48af8fe6]
  406004:	fld    DWORD PTR [esi]
  406006:	add    eax,0xc4259a56
  40600b:	or     al,0x8d
  40600d:	ss (bad) 
  40600f:	clc    
  406010:	cmp    eax,0xadfa251b
  406015:	sbb    ecx,DWORD PTR [ebx+0x763b618c]
  40601b:	and    dl,bh
  40601d:	arpl   WORD PTR [eax+0x8],cx
  406020:	(bad)  
  406021:	and    eax,0xeb940317
  406026:	sti    
  406027:	xor    esi,DWORD PTR [esi]
  406029:	inc    ebx
  40602a:	(bad)  
  40602b:	xor    esi,DWORD PTR [esi]
  40602d:	jmp    0x28707fcb
  406032:	mov    ebx,0xab81dc1
  406037:	rcr    DWORD PTR [ebp+0x70],0x5
  40603b:	fldenv [ebp+0x2dfa351c]
  406041:	sbb    esi,DWORD PTR ds:0xe1b3fa
  406047:	scas   eax,DWORD PTR es:[edi]
  406048:	add    DWORD PTR [edx+0x6ed803f3],ebx
  40604e:	mov    eax,0x8bc56309
  406054:	gs push ebx
  406056:	(bad)  
  406057:	and    edx,DWORD PTR [esi+0x53]
  40605a:	dec    BYTE PTR [ebp-0x39d39096]
	...
  40606c:	test   eax,0x50290342
  406072:	(bad)  
  406076:	aad    0x8b
  406078:	mov    edi,0xbd23be5c
  40607d:	pop    esp
  40607e:	mov    esi,0x1638838d
  406083:	inc    esi
  406084:	out    0xb3,eax
  406086:	push   es
  406087:	dec    esi
  406088:	dec    DWORD PTR [edx-0x7a0bee3c]
  40608e:	mov    ?,edx
  406090:	les    esi,FWORD PTR [ebx-0x1a]
  406093:	clc    
  406094:	les    esp,FWORD PTR [ebx-0x78]
  406097:	pushf  
  406098:	loopne 0x4060e4
  40609a:	nop
  40609b:	inc    esi
  40609c:	jp     0x4060ea
  40609e:	pop    ebx
  40609f:	sbb    al,0x36
  4060a1:	mov    WORD PTR [ebx],ss
  4060a3:	add    ecx,DWORD PTR [esi-0x2c]
  4060a6:	mov    ebx,0xb96c5d33
  4060ab:	xor    ebx,DWORD PTR [ebp-0x42]
  4060ae:	xchg   BYTE PTR [edi],al
  4060b0:	das    
  4060b1:	rol    DWORD PTR [edx-0x1d760b97],cl
  4060b7:	shl    BYTE PTR [edi],0x40
  4060ba:	add    bl,al
  4060bc:	ins    BYTE PTR es:[edi],dx
  4060bd:	adc    al,0xf1
  4060bf:	clc    
  4060c0:	aam    0x13
  4060c2:	icebp  
  4060c3:	clc    
  4060c4:	jp     0x40609d
  4060c6:	adc    eax,0x897f28af
  4060cb:	add    eax,ecx
  4060cd:	daa    
  4060ce:	ret    0xc2
	...
  4060d9:	add    BYTE PTR [eax],al
  4060db:	add    BYTE PTR [ebx],al
  4060dd:	dec    ebp
  4060de:	aad    0x8b
  4060e0:	nop    DWORD PTR [eax-0x47e402dd]
  4060e7:	lea    ebp,[ebx+0x40]
  4060ea:	jb     0x406147
  4060ec:	lock leave 
  4060ee:	add    DWORD PTR [esi+0x1f],ecx
  4060f1:	arpl   WORD PTR [esi],bp
  4060f3:	lds    eax,FWORD PTR [esi]
  4060f5:	fs xor eax,0x5794dd8f
  4060fb:	out    0xcf,eax
  4060fd:	xchg   esp,eax
  4060fe:	push   edi
  4060ff:	mov    DWORD PTR [ebx+0x78],ebp
  406102:	adc    ebx,0x59ebea23
  406108:	or     esp,DWORD PTR [edx]
  40610a:	sub    al,0x12
  40610c:	hlt    
  40610d:	cmp    DWORD PTR [ebp+edi*4-0x1c],esp
  406111:	pop    esp
  406112:	int3   
  406113:	mov    esi,0x806a5ce4
  406118:	lock test dh,bh
  40611b:	xchg   ebx,eax
  40611c:	sbb    al,0x64
  40611e:	mov    eax,ds:0xe823b7f3
  406123:	push   es
  406124:	mov    ah,0xec
  406126:	add    esi,edi
  406128:	jg     0x4060ae
  40612a:	div    esi
  40612c:	outs   dx,DWORD PTR ds:[esi]
  40612d:	out    0x52,al
  40612f:	adc    eax,DWORD PTR [edx+edx*8-0x4f0b4779]
  406136:	adc    eax,ebp
  406138:	xor    eax,0x7cd3ec67
  40613d:	pop    ebx
  40613e:	sbb    al,0xbf
	...
  40614c:	adc    al,0x5d
  40614e:	cld    
  40614f:	mov    esi,0x89e7e772
  406154:	mov    ah,0xd9
  406156:	mov    DWORD PTR [esi],eax
  406158:	rcr    DWORD PTR [edx+0x6406c4ae],0xb5
  40615f:	mov    ds,WORD PTR ds:0x1fe6a794
  406165:	xchg   esp,eax
  406166:	xchg   edi,eax
  406167:	mov    BYTE PTR [ebx+0x78],dh
  40616a:	into   
  40616b:	or     eax,DWORD PTR [ebx-0x56]
  40616e:	in     al,dx
  40616f:	pop    ecx
  406170:	ret    
  406171:	and    DWORD PTR [ecx+edx*1+0x620639f4],ebp
  406178:	mov    bl,0x93
  40617a:	std    
  40617b:	retf   0x93aa
  40617e:	push   DWORD PTR [eax+eiz*2+0x60]
  406182:	fs add al,0xfd
  406185:	push   eax
  406186:	add    eax,0xc622d0af
  40618b:	in     al,0xf1
  40618d:	and    ecx,DWORD PTR [ebp+0x254fc942]
  406193:	inc    eax
  406194:	rcr    DWORD PTR [ebx+ecx*4+0x5d],0x5
  406199:	mov    ds:0x63b4a9b5,eax
  40619e:	push   eax
  40619f:	add    DWORD PTR [edx-0x3b15f0dc],edi
  4061a5:	jmp    0x4061a4
  4061a7:	ficom  DWORD PTR [edx-0x7d]
  4061aa:	std    
  4061ab:	fimul  DWORD PTR [ebp+eiz*8-0x77]
  4061af:	test   BYTE PTR [eax],0x0
	...
  4061ba:	add    BYTE PTR [eax],al
  4061bc:	sub    edi,DWORD PTR [ebp-0x570e38a8]
  4061c2:	sub    ch,BYTE PTR [eax]
  4061c4:	cmp    ebp,DWORD PTR [eax+0x5]
  4061c7:	and    edi,DWORD PTR [ecx+0x5c]
  4061ca:	xor    eax,0x354f5ae0
  4061cf:	jecxz  0x406241
  4061d1:	neg    BYTE PTR [eax]
  4061d3:	xor    DWORD PTR [esi],0x10
  4061d6:	out    dx,eax
  4061d7:	jmp    0x39fb:0xddc521ee
  4061de:	(bad)  
  4061df:	rol    BYTE PTR [edx+0x5c],0x25
  4061e3:	mov    bl,0x2a
  4061e5:	pop    edx
  4061e6:	mov    esp,DWORD PTR [ebp-0xa]
  4061e9:	mov    ch,0x16
  4061eb:	(bad)  
  4061ec:	inc    esi
  4061ed:	arpl   WORD PTR [eax-0xb],ax
  4061f0:	xor    eax,0x3bea0322
  4061f5:	jmp    0x4061f3
  4061f7:	fimul  DWORD PTR [ebx+eax*4-0x1]
  4061fb:	add    BYTE PTR ds:0x21948b16,bh
  406201:	scas   al,BYTE PTR es:[edi]
  406202:	adc    al,BYTE PTR [esp+ebx*8+0x5f]
  406206:	push   eax
  406207:	sub    BYTE PTR [edi+0x1e030f1d],bl
  40620d:	call   0x4094960f
  406212:	cld    
  406213:	xor    esp,DWORD PTR [esi]
  406215:	fimul  WORD PTR [ecx-0x58fea0f1]
  40621b:	fmul   st,st(5)
  40621d:	lods   al,BYTE PTR ds:[esi]
  40621e:	cmp    al,cl
	...
  40622c:	punpckhwd mm0,QWORD PTR ds:0x351515ca
  406233:	stc    
  406234:	std    
  406235:	push   ss
  406236:	xor    eax,0x18fb2bfa
  40623b:	enter  0x2fd5,0xe1
  40623f:	add    ecx,DWORD PTR [eax+0x72]
  406242:	mov    ebx,0x8bdf5f82
  406248:	test   DWORD PTR [edi-0x4],0xfe4ff423
  40624f:	(bad)  
  406250:	loop   0x4062b5
  406252:	loopne 0x406221
  406254:	inc    DWORD PTR [ecx+0x4]
  406257:	inc    esi
  406258:	repnz and esi,eax
  40625b:	add    eax,0xfb8d1f4d
  406260:	in     eax,dx
  406261:	push   ss
  406262:	and    eax,0x8b17edf9
  406267:	xchg   esp,eax
  406268:	and    DWORD PTR [ecx+eax*1],esi
  40626b:	aaa    
  40626c:	lea    ebx,[edi+0x50]
  40626f:	cmp    BYTE PTR [edi+0x20],bl
  406272:	lsl    ecx,WORD PTR [esi+0x5433fde7]
  406279:	aas    
  40627a:	cld    
  40627b:	xor    edx,DWORD PTR [esi-0x23]
  40627e:	mov    DWORD PTR [edi],ecx
  406280:	test   esp,0x4903d500
  406286:	dec    edi
  406287:	or     al,0x36
  406289:	or     ecx,DWORD PTR [edi]
  40628b:	add    ebp,DWORD PTR ds:0x33bbd1
	...
  406299:	add    BYTE PTR [eax],al
  40629b:	add    dh,ch
  40629d:	sub    BYTE PTR [ebp-0x6e4912cd],bh
  4062a3:	pop    ds
  4062a4:	rcl    BYTE PTR [edi+0x5b],cl
  4062a7:	inc    ebp
  4062a8:	hlt    
  4062a9:	adc    eax,0x57b4c0e5
  4062ae:	add    bl,cl
  4062b0:	jl     0x406264
  4062b2:	repnz cli 
  4062b4:	adc    al,0xa2
  4062b6:	repnz clc 
  4062b8:	push   0xffffffbf
  4062ba:	push   es
  4062bb:	add    eax,0x36ca89e
  4062c0:	xor    DWORD PTR [eax-0x3c],edx
  4062c3:	sar    dl,0x48
  4062c6:	ret    0x9c8b
  4062c9:	cmp    BYTE PTR [ebp-0x45c771dd],bh
  4062cf:	lea    esp,[ebx+0x4c]
  4062d2:	mov    ebp,0x25f90a3
  4062d7:	push   esi
  4062d8:	out    dx,eax
  4062d9:	mov    al,bl
  4062db:	or     esp,esi
  4062dd:	jnp    0x406269
  4062df:	clc    
  4062e0:	and    al,0x52
  4062e2:	in     eax,0xfa
  4062e4:	and    al,0x44
  4062e6:	(bad)  
  4062e7:	mov    eax,gs
  4062e9:	and    al,BYTE PTR [edi+ebp*2]
  4062ec:	fmul   DWORD PTR [eax+0x43]
  4062ef:	sbb    al,0x36
  4062f1:	or     al,BYTE PTR [eax]
  4062f3:	add    ebp,DWORD PTR ds:0x3e33bcd0
  4062f9:	push   0xbe2d33ba
  4062fe:	sahf   
  4062ff:	pop    ds
	...
  40630c:	jge    0x406385
  40630e:	in     al,dx
  40630f:	mov    esp,?
  406311:	bound  eax,QWORD PTR [ecx-0xc]
  406314:	aaa    
  406315:	and    ebx,esi
  406317:	add    ch,BYTE PTR [esi]
  406319:	jmp    0x914f56b3
  40631e:	xchg   esp,eax
  40631f:	mov    DWORD PTR [ebx+0x5d],edi
  406322:	sub    eax,0xec54fefd
  406327:	cmp    eax,0xaf220b
  40632c:	hlt    
  40632d:	pop    ds
  40632e:	fs mov ebx,0xbc1c5a24
  406334:	push   0xffffffef
  406336:	out    dx,eax
  406337:	test   cl,cl
  406339:	shr    BYTE PTR [eax+0x3],cl
  40633c:	and    DWORD PTR [ebx+0x5fecc22e],eax
  406342:	pop    ds
  406343:	mov    edi,DWORD PTR [edi-0x510cbb70]
  406349:	out    0x62,al
  40634b:	pop    es
  40634c:	aad    0xc1
  40634e:	dec    edx
  40634f:	sub    esp,esi
  406351:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406352:	rol    esp,cl
  406354:	mov    dh,0x73
  406356:	in     al,dx
  406357:	leave  
  406358:	jl     0x4063b3
  40635a:	fdivr  QWORD PTR [ebx-0x67a5a63c]
  406360:	loopne 0x4063c8
  406362:	(bad)  
  406363:	mov    al,ds:0xfb99607a
  406368:	aaa    
  406369:	and    al,bl
  40636b:	add    cl,BYTE PTR [esi-0x18]
  40636e:	cmc    
  40636f:	repnz add BYTE PTR [eax],al
	...
  40637a:	add    BYTE PTR [eax],al
  40637c:	pop    esi
  40637d:	nop
  40637e:	in     al,0x88
  406380:	jae    0x4063de
  406382:	and    ebp,DWORD PTR [edx+0x3debff91]
  406388:	repz and DWORD PTR [edi+0x741ff5ff],ebp
  40638f:	mov    edx,0xbbfc5a04
  406394:	sub    bh,0x5
  406397:	ficomp WORD PTR [ebx-0xbdd27dd]
  40639d:	lods   al,BYTE PTR ds:[esi]
  40639e:	push   ss
  40639f:	test   al,0x36
  4063a1:	push   0x5b7db905
  4063a6:	xor    eax,0x8b5a0592
  4063ab:	pop    ebp
  4063ac:	stc    
  4063ad:	ret    0x424d
  4063b0:	dec    edx
  4063b1:	pusha  
  4063b2:	dec    eax
  4063b3:	fnstsw WORD PTR [ebx-0x4115e9df]
  4063b9:	out    0xfb,eax
  4063bb:	mov    edx,0x74ff8f9c
  4063c0:	xor    BYTE PTR [ebx+0x76],0x9d
  4063c4:	dec    ecx
  4063c5:	adc    eax,0x22dcb705
  4063ca:	(bad)
  4063cd:	cmp    DWORD PTR [ebp+0x3559c540],ecx
  4063d3:	inc    edx
  4063d4:	jg     0x4063b4
  4063d6:	add    BYTE PTR [edi],ch
  4063d8:	loop   0x4063d1
  4063da:	sub    eax,0xc78ee2ea
  4063df:	sub    DWORD PTR [eax],eax
	...
  4063e9:	add    BYTE PTR [eax],al
  4063eb:	add    BYTE PTR [eax+0x4d72c560],bl
  4063f1:	(bad)  
  4063f2:	(bad)  
  4063f3:	fimul  DWORD PTR [ebp+eiz*8-0x6f]
  4063f7:	idiv   BYTE PTR [esi]
  4063f9:	jnp    0x4063a2
  4063fb:	adc    esi,ebp
  4063fd:	ins    BYTE PTR es:[edi],dx
  4063fe:	(bad)  
  4063ff:	sub    edi,ebp
  406401:	pop    edi
  406402:	(bad)  
  406403:	bound  ebp,QWORD PTR [edi+ecx*4-0x1a614503]
  40640a:	mov    esi,esi
  40640c:	fst    DWORD PTR [edx-0x5b094a17]
  406412:	or     ch,BYTE PTR [eax-0x5cfa8dcc]
  406418:	outs   dx,BYTE PTR ds:[esi]
  406419:	pop    eax
  40641a:	xor    eax,0xfe513600
  40641f:	(bad)  
  406420:	shr    BYTE PTR [ebp+0x3],cl
  406423:	sbb    eax,0x5e056296
  406428:	inc    esi
  406429:	and    ch,al
  40642b:	pop    ss
  40642c:	or     eax,0x2df98d38
  406431:	sbb    DWORD PTR ds:0xe293fb,esi
  406437:	cmp    DWORD PTR [esi],edi
  406439:	xor    bl,bh
  40643b:	add    ecx,eax
  40643d:	inc    edx
  40643e:	mov    al,0xda
  406441:	arpl   bp,ax
  406443:	mov    esp,DWORD PTR [ebp+0x54]
  406446:	(bad)  
  406447:	xor    esp,DWORD PTR [esi-0x16]
  40644a:	xchg   ecx,eax
  40644b:	pop    ss
  40644c:	sub    ebp,esi
  40644e:	fsubr  st(6),st
	...
  40645c:	frstor [eax+0x5c1cc136]
  406462:	add    eax,0x350f55d0
  406467:	sti    
  406468:	mov    ebp,0xa18c8b0c
  40646d:	push   cs
  40646e:	jp     0x406412
  406470:	shl    DWORD PTR [ebx+0x48],0x3c
  406474:	iret   
  406475:	and    eax,0xdbe40316
  40647a:	sti    
  40647b:	xor    edx,esi
  40647d:	push   ebx
  40647e:	dec    BYTE PTR [ebp+0x56637802]
  406484:	ret    0x522
  406487:	pop    esi
  406488:	xchg   BYTE PTR ds:0x2d5d17c5,ah
  40648e:	mov    ecx,0xf91761ff
  406493:	xor    esp,DWORD PTR [ebx+ebx*2-0x3]
  406497:	xor    edx,DWORD PTR [edi-0x17]
  40649a:	add    DWORD PTR [edi],0xf42e451a
  4064a0:	idiv   DWORD PTR [ebx+edi*8]
  4064a3:	shl    BYTE PTR [edi],0x4a
  4064a6:	push   es
  4064a7:	ret    
  4064a8:	js     0x4064d3
  4064aa:	mov    dl,0xff
  4064ac:	xor    BYTE PTR [ebp-0x44],cl
  4064af:	or     ebp,DWORD PTR [edi]
  4064b1:	dec    ebp
  4064b2:	mov    esi,0x8a398b8d
  4064b7:	dec    ebp
  4064b9:	jl     0x4064c2
  4064bb:	push   esi
  4064bc:	repz cli 
  4064be:	(bad)  
  4064bf:	or     al,BYTE PTR [eax]
	...
  4064c9:	add    BYTE PTR [eax],al
  4064cb:	add    ah,dh
  4064cd:	or     esi,DWORD PTR [edx-0x1]
  4064d0:	add    cl,ah
  4064d2:	mov    cl,0x33
  4064d4:	cld    
  4064d5:	push   esp
  4064d6:	mov    edi,0x81beef33
  4064db:	seto   BYTE PTR [ecx+ecx*4]
  4064df:	stos   DWORD PTR es:[edi],eax
  4064e0:	hlt    
  4064e1:	jno    0x4064dd
  4064e3:	shl    BYTE PTR [esi-0x6f35f9a8],0xb0
  4064ea:	mov    dl,0xff
  4064ec:	enter  0xba6c,0xb
  4064f0:	mov    esi,0x5b8dbc6c
  4064f5:	dec    eax
  4064f6:	cld    
  4064f7:	lahf   
  4064f8:	test   BYTE PTR [edi+0x7b035e06],cl
  4064fe:	(bad)  
  4064ff:	adc    eax,0xff7272f4
  406504:	cwde   
  406505:	mov    BYTE PTR [edx-0x41ab72cd],dh
  40650b:	xor    ecx,DWORD PTR [esi-0x4bf8863a]
  406511:	adc    bl,BYTE PTR [esi+0x65]
  406514:	hlt    
  406515:	add    ebp,esi
  406517:	shl    BYTE PTR [edi],0x49
  40651a:	push   es
  40651b:	ret    
  40651c:	test   al,0x58
  40651e:	mov    ch,0xff
  406520:	pusha  
  406521:	or     al,0xbc
  406523:	or     ebx,DWORD PTR [edi+0x62]
  406526:	sbb    al,0xaf
  406528:	xor    dh,0xef
  40652b:	xchg   ebp,eax
  40652c:	cmp    ebx,DWORD PTR [esi+0x60]
  40652f:	pop    es
	...
  40653c:	test   eax,0xedc6ae5e
  406541:	gs lahf 
  406543:	jae    0x406575
  406545:	push   ecx
  406546:	mov    eax,0xe44de4b3
  40654b:	lods   eax,DWORD PTR ds:[esi]
  40654c:	in     al,0x4a
  40654e:	pop    edx
  40654f:	sub    al,0xcf
  406552:	fwait
  406553:	mov    ds:0xdc296510,eax
  406558:	aaa    
  406559:	and    esp,eax
  40655b:	push   es
  40655c:	sub    eax,0xf8b38811
  406561:	push   eax
  406562:	mov    esp,0xbc49fcab
  406567:	lods   eax,DWORD PTR ds:[esi]
  406568:	jp     0x406559
  40656a:	iret   
  40656b:	aam    0x42
  40656d:	out    0x61,eax
  40656f:	pop    es
  406570:	cmp    DWORD PTR [edi+0x2e],esp
  406573:	(bad)  
  406574:	jmp    0x5050:0xc8734663
  40657b:	mov    bl,0x4
  40657d:	dec    ebp
  40657e:	in     al,0xae
  406580:	add    al,0x4a
  406582:	jb     0x40650c
  406584:	clc    
  406585:	lahf   
  406586:	mov    ecx,0xa964185b
  40658b:	jecxz  0x406544
  40658d:	and    esp,ecx
  40658f:	push   es
  406590:	mov    ah,0x10
  406592:	and    BYTE PTR [ebx-0x5323af70],dh
  406598:	cld    
  406599:	dec    edx
  40659a:	fsubr  QWORD PTR [esi-0x5c10088e]
	...
  4065ac:	xchg   ecx,eax
  4065ad:	jg     0x4065b0
  4065af:	pop    es
  4065b0:	leave  
  4065b1:	mov    gs,WORD PTR [esi]
  4065b3:	(bad)  
  4065b4:	std    
  4065b5:	arpl   WORD PTR [esi],ax
  4065b7:	sbb    esp,esp
  4065b9:	dec    edi
  4065ba:	stc    
  4065bb:	out    dx,al
  4065bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4065bd:	xchg   esp,eax
  4065be:	std    
  4065bf:	repnz mov ds:0xc86cfe94,al
  4065c5:	pop    edi
  4065c6:	adc    ch,BYTE PTR [edx]
  4065c8:	cli    
  4065c9:	add    eax,DWORD PTR ds:0xc721eb1f
  4065cf:	idiv   cl
  4065d1:	sbb    al,0xb9
  4065d3:	mov    esi,0xfaf95065
  4065d8:	dec    esp
  4065d9:	pop    esp
  4065da:	(bad)  
  4065db:	cli    
  4065dc:	dec    edx
  4065dd:	ficomp WORD PTR [ecx+0xe719a06]
  4065e3:	das    
  4065e4:	lock mov al,0x32
  4065e7:	test   al,0x39
  4065e9:	jbe    0x4065f0
  4065eb:	mov    al,0x85
  4065ed:	dec    edi
  4065ee:	stc    
  4065ef:	xchg   BYTE PTR [ebp-0x660d036d],ah
  4065f5:	xchg   ebx,eax
  4065f6:	jmp    DWORD PTR [eax+edi*2+0x67]
  4065fa:	test   bh,ch
  4065fc:	inc    ecx
  4065fd:	pop    eax
  4065fe:	add    eax,0xc621e4af
  406603:	out    0xf1,eax
  406605:	and    edi,DWORD PTR [ecx-0x6b07aaa]
  40660b:	sbb    cl,BYTE PTR [edx+0xfafe5b]
	...
  406619:	add    BYTE PTR [eax],al
  40661b:	add    BYTE PTR [ecx-0x23],ah
  40661e:	xchg   ecx,eax
  40661f:	(bad)  
  406620:	scas   eax,DWORD PTR es:[edi]
  406621:	push   ecx
  406622:	cmp    al,0x74
  406624:	stc    
  406625:	mov    eax,0x5cb2282a
  40662a:	add    eax,0xf9500539
  40662f:	push   ds
  406630:	inc    ebp
  406631:	xchg   ebx,eax
  406632:	std    
  406633:	loop   0x406687
  406635:	xchg   ebx,eax
  406636:	(bad)  
  406637:	pop    esp
  406638:	clc    
  406639:	pop    edi
  40663a:	mov    ebp,0x2c2d0c00
  40663f:	add    ebx,DWORD PTR [eax+0x59c1c64b]
  406645:	push   0x1149bfcc
  40664a:	stc    
  40664b:	(bad)  
  40664c:	in     eax,dx
  40664d:	dec    BYTE PTR [ecx+edi*8]
  406650:	in     eax,dx
  406651:	add    BYTE PTR [ebx-0x2b0bb664],cl
  406657:	xchg   BYTE PTR ds:0x5f245865,dh
  40665d:	and    eax,0xcd570313
  406662:	jnp    0x40666c
  406664:	cvtps2pd xmm0,QWORD PTR [edi]
  406667:	pop    edi
  406668:	adc    ah,BYTE PTR [ecx+ecx*2+0x8]
  40666c:	pop    ds
  40666d:	stos   BYTE PTR es:[edi],al
  40666e:	or     bh,bh
  406670:	fist   DWORD PTR [edx]
  406672:	mov    esi,DWORD PTR [esi-0x32]
  406675:	popa   
  406676:	(bad)  
  406677:	pcmpgtb mm2,QWORD PTR [ecx]
  40667a:	stc    
  40667b:	pop    edx
  40667c:	pop    ss
  40667d:	mov    al,ds:0x5f5e
	...
  40668a:	add    BYTE PTR [eax],al
  40668c:	or     BYTE PTR [edx],cl
  40668e:	les    ecx,FWORD PTR [esi+ecx*8]
  406691:	mov    ch,0x8d
  406693:	in     al,dx
  406694:	dec    ebp
  406695:	sbb    edi,esi
  406697:	push   edi
  406698:	nop
  406699:	mov    bh,0xc1
  40669b:	inc    ebp
  40669c:	sub    ah,BYTE PTR [edi+0x6]
  40669f:	add    dh,cl
  4066a1:	adc    esi,DWORD PTR [ebx+0xc]
  4066a4:	sbb    DWORD PTR [esi-0x4d5c3802],esp
  4066aa:	mov    eax,DWORD PTR [ecx-0x62]
  4066ad:	popa   
  4066ae:	and    eax,0x31bb145
  4066b3:	push   esp
  4066b4:	cmp    esp,DWORD PTR [edx+0xe258906]
  4066ba:	jmp    0x8bdafa86
  4066bf:	inc    ecx
  4066c0:	idiv   DWORD PTR [ebx]
  4066c2:	mov    bh,0xdc
  4066c4:	cmp    eax,0xd305cfd4
  4066c9:	(bad)  
  4066ca:	inc    ebp
  4066cb:	add    cl,ah
  4066cd:	div    edx
  4066cf:	(bad)  
  4066d2:	and    eax,0xb53bb68d
  4066d7:	loope  0x4066fe
  4066d9:	stc    
  4066da:	cdq    
  4066db:	sbb    al,0x7c
  4066dd:	xchg   edx,edi
  4066df:	add    bh,BYTE PTR [edx-0x30bfe4c9]
  4066e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4066e6:	jns    0x406729
  4066e8:	imul   DWORD PTR [ebx-0x66]
  4066eb:	inc    eax
  4066ec:	adc    cl,BYTE PTR ds:0x83b6
	...
  4066fa:	add    BYTE PTR [eax],al
  4066fc:	mov    edx,0x2be84517
  406701:	cmp    al,0x5
  406703:	add    BYTE PTR [edi+esi*2-0x56],dh
  406707:	inc    eax
  406708:	test   BYTE PTR ds:0xb8ff5d7a,cl
  40670e:	ret    0x6c40
  406711:	xchg   edx,edi
  406713:	add    bh,BYTE PTR [edx]
  406715:	call   0xbf93cf6b
  40671a:	inc    esp
  40671b:	add    BYTE PTR [edi-0x1c],al
  40671e:	or     esp,ebp
  406720:	fdivr  DWORD PTR [esp+eax*1-0x7d822ca3]
  406727:	fs jp  0x406724
  40672a:	add    al,0x80
  40672c:	je     0x4066ce
  40672e:	(bad)  
  40672f:	jne    0x40670d
  406731:	mov    eax,0x522b089a
  406736:	test   DWORD PTR [ebx+0x44be53],esp
  40673c:	idiv   eax
  40673e:	sub    al,0xf6
  406740:	pop    eax
  406742:	add    eax,0x6462f700
  406747:	mov    ebx,0x9c184d88
  40674c:	cmc    
  40674d:	(bad)  
  40674e:	in     eax,0x83
  406750:	push   esp
  406751:	out    dx,al
  406752:	pop    ecx
  406753:	inc    edx
  406754:	mul    DWORD PTR [edx-0x54]
  406757:	sub    esp,DWORD PTR [ecx-0x27]
  40675a:	mov    eax,ds:0xef5a9fff
  40675f:	add    eax,DWORD PTR [eax]
	...
  406769:	add    BYTE PTR [eax],al
  40676b:	add    bh,dh
  40676d:	xchg   ecx,eax
  40676e:	sbb    eax,0xb75d56b8
  406773:	(bad)  
  406774:	add    DWORD PTR ds:[edi+0x6662b681],ecx
  40677b:	sbb    DWORD PTR [ebx-0x21],ebx
  40677e:	sub    eax,0xefaa1f04
  406783:	add    esi,edi
  406785:	add    ebx,DWORD PTR [edi]
  406787:	xor    DWORD PTR [esi-0x3ce69b9e],0x7c042ddf
  406791:	pop    edi
  406792:	inc    edi
  406793:	xor    DWORD PTR [esi-0xf44179e],0x54bce018
  40679d:	mov    dl,0x5a
  40679f:	inc    ebp
  4067a0:	neg    ecx
  4067a2:	fst    DWORD PTR [edi+0x7a]
  4067a5:	mov    ds:0xaaf27cef,al
  4067aa:	bound  eax,QWORD PTR [ebp-0x9]
  4067ad:	add    DWORD PTR [ebx],ecx
  4067af:	xor    DWORD PTR [esi],0x57197463
  4067b5:	fisubr WORD PTR [ebp-0x1fe50ffd]
  4067bb:	mov    ecx,0x455aaf94
  4067c0:	neg    ecx
  4067c2:	fldenv [ebx]
  4067c4:	jp     0x406768
  4067c6:	out    dx,eax
  4067c7:	sbb    DWORD PTR [ebx],ecx
  4067c9:	dec    esp
  4067ca:	push   es
  4067cb:	mov    esp,0x5c56bb04
	...
  4067dc:	cmp    ah,BYTE PTR [ebx-0x12]
  4067df:	fwait
  4067e0:	push   eax
  4067e1:	dec    esp
  4067e2:	stc    
  4067e3:	ret    0xac32
  4067e6:	iret   
  4067e7:	sub    esi,edi
  4067e9:	bound  edx,QWORD PTR [ebx+0x62]
  4067ec:	xchg   edi,eax
  4067ed:	loopne 0x4067b0
  4067ef:	add    edx,ebx
  4067f1:	dec    edx
  4067f2:	stc    
  4067f3:	(bad)  
  4067f4:	xchg   ecx,eax
  4067f5:	fadd   DWORD PTR [ecx]
  4067f7:	and    al,0xcf
  4067f9:	fld    QWORD PTR [esi-0x17]
  4067fc:	int    0x76
  4067fe:	retf   
  4067ff:	xchg   ecx,eax
  406800:	ja     0x4067a4
  406802:	push   es
  406803:	out    dx,al
  406804:	jl     0x406862
  406806:	int3   
  406807:	pusha  
  406808:	lock sbb eax,0x62bb5ca2
  40680e:	(bad)  
  40680f:	fnsave [edi]
  406811:	sti    
  406812:	mov    ch,BYTE PTR [eax]
  406814:	sti    
  406815:	mov    eax,ds:0x228b9473
  40681a:	stc    
  40681b:	scas   al,BYTE PTR es:[edi]
  40681c:	popa   
  40681d:	fadd   DWORD PTR [ecx]
  40681f:	je     0x40689d
  406821:	fld    QWORD PTR [esi-0x17]
  406824:	jge    0x40689c
  406826:	mov    ebp,DWORD PTR [ebp+0x7a]
  406829:	mov    eax,ds:0xddf8da06
  40682e:	imul   esi,DWORD PTR [edi+0x33],0x77d53563
  406835:	(bad)  
  406836:	mov    BYTE PTR [eax],ch
  406838:	repz pop esp
  40683b:	cwde   
  40683c:	mov    ah,0xd9
  40683e:	add    DWORD PTR [eax+eax*1+0x0],esi
	...
  40684a:	add    BYTE PTR [eax],al
  40684c:	push   eax
  40684d:	fld    QWORD PTR [esi-0x17]
  406850:	cmp    edx,esi
  406852:	shl    BYTE PTR [edx-0x19],1
  406855:	mov    dl,0x8b
  406857:	test   al,0xf4
  406859:	xlat   BYTE PTR ds:[ebx]
  40685a:	xor    al,BYTE PTR [eax]
  40685c:	mov    ah,dl
  40685e:	inc    esi
  40685f:	add    BYTE PTR ds:0x4f8d5153,ah
  406865:	pop    edi
  406866:	stc    
  406867:	xor    eax,0x46e282
  40686c:	add    DWORD PTR [ebx+0x7fabfffa],ebx
  406872:	mov    eax,DWORD PTR [ecx-0x72]
  406875:	int3   
  406876:	inc    ebx
  406877:	clc    
  406878:	(bad)  
  406879:	jmp    0x406873
  40687b:	push   ecx
  40687d:	enter  0x8bd0,0x19
  406881:	adc    eax,0x410823d4
  406886:	push   edx
  406887:	cld    
  406888:	push   ebp
  406889:	and    DWORD PTR ds:0x8bcac304,eax
  40688f:	inc    ecx
  406890:	dec    esi
  406891:	bound  eax,QWORD PTR [ebx-0x8]
  406894:	dec    ebx
  406895:	fdivr  DWORD PTR [esi-0x7e]
  406898:	in     al,0xfd
  40689a:	jb     0x406898
  40689c:	mov    eax,ds:0xe389fea3
  4068a1:	adc    al,bh
  4068a3:	mov    BYTE PTR [eax-0x36],0xf8
  4068a7:	mov    ecx,DWORD PTR [ebp+0x1f]
  4068aa:	lds    eax,FWORD PTR ds:0x7547171d
	...
  4068bc:	push   edx
  4068bd:	mov    bh,0xea
  4068bf:	jmp    DWORD PTR [ecx-0x3]
  4068c2:	mov    esi,es
  4068c4:	push   ebp
  4068c5:	xor    BYTE PTR ds:0xc7547245,dh
  4068cb:	add    ebx,edx
  4068cd:	leave  
  4068ce:	add    cl,BYTE PTR [esi+0x45055f0f]
  4068d4:	inc    esi
  4068d5:	bound  esp,QWORD PTR [edi-0x696c815]
  4068db:	jne    0x4068ff
  4068dd:	enter  0xf843,0xf7
  4068e1:	ret    0xfc29
  4068e4:	mov    dh,0x82
  4068e6:	or     BYTE PTR [ebx-0x3e482a57],cl
  4068ec:	mov    ah,0x3f
  4068ee:	push   es
  4068ef:	fdiv   DWORD PTR [esi]
  4068f1:	pop    es
  4068f2:	aad    0xb9
  4068f4:	mov    ds:0x7cffab79,eax
  4068f9:	jns    0x40697a
  4068fb:	push   ebp
  4068fc:	adc    DWORD PTR [ebp+0x40],0xfffffffc
  406900:	aam    0x88
  406902:	out    0xc5,eax
  406904:	cld    
  406905:	jge    0x40690e
  406907:	add    al,0x7a
  406909:	call   0x3d37aa88
  40690e:	inc    eax
  40690f:	clc    
  406910:	repnz outs dx,DWORD PTR ds:[esi]
  406912:	jbe    0x40692f
  406914:	cmp    BYTE PTR [ecx],0x30
  406917:	cld    
  406918:	js     0x406991
  40691a:	stos   BYTE PTR es:[edi],al
  40691b:	mov    edx,eax
  40691d:	daa    
  40691e:	(bad)  
  40691f:	mov    BYTE PTR [eax],0x0
	...
  40692a:	add    BYTE PTR [eax],al
  40692c:	fld    st(4)
  40692e:	stos   DWORD PTR es:[edi],eax
  40692f:	mov    esp,DWORD PTR [ebx+edi*8]
  406932:	lds    eax,FWORD PTR ds:0x754403f4
  406938:	sub    al,0xe3
  40693a:	cwde   
  40693b:	call   FWORD PTR [eax]
  40693d:	adc    DWORD PTR [esi-0x3a],edi
  406940:	jl     0x406933
  406942:	cmc    
  406943:	inc    esp
  406944:	or     ebp,DWORD PTR ds:0xb6fb03c7
  40694a:	popa   
  40694b:	mov    ?,WORD PTR [esi-0x10baf9c5]
  406951:	ds rol ecx,cl
  406954:	push   ebp
  406955:	push   ss
  406956:	stos   BYTE PTR es:[edi],al
  406957:	jne    0x40693c
  406959:	mov    eax,0x4e6ef840
  40695e:	test   eax,0x7e19b9c1
  406963:	(bad)  
  406964:	jl     0x4069c8
  406966:	pop    esp
  406967:	ret    0x5fb4
  40696a:	in     al,dx
  40696b:	retf   
  40696c:	sar    BYTE PTR ss:[edi],1
  40696f:	add    dl,BYTE PTR [edx]
  406971:	mov    bl,0x5a
  406973:	inc    edx
  406974:	mul    DWORD PTR [ebx-0x6]
  406977:	push   edi
  406978:	jb     0x40691d
  40697a:	out    dx,eax
  40697b:	add    bl,dl
  40697d:	stos   BYTE PTR es:[edi],al
  40697e:	bound  eax,QWORD PTR [edx-0x9]
  406981:	frstor [ecx-0x3ca00951]
  406987:	jle    0x4069bf
  406989:	arpl   WORD PTR [esi+eax*2+0x7f],si
  40698d:	arpl   dx,bp
  40698f:	and    eax,DWORD PTR [eax]
	...
  406999:	add    BYTE PTR [eax],al
  40699b:	add    BYTE PTR [edx+0x34baefa3],al
  4069a1:	scas   eax,DWORD PTR es:[edi]
  4069a2:	je     0x406943
  4069a4:	pusha  
  4069a5:	iret   
  4069a6:	neg    DWORD PTR [ebx+0x3ef1a11]
  4069ac:	je     0x4069f8
  4069ae:	call   0x5a8a7ae8
  4069b3:	cld    
  4069b4:	pop    eax
  4069b5:	imul   ebp,DWORD PTR [eax-0x50a208fc],0xc80af831
  4069bf:	stos   DWORD PTR es:[edi],eax
  4069c0:	sub    BYTE PTR [ecx-0x2c],cl
  4069c3:	pop    ss
  4069c4:	ins    BYTE PTR es:[edi],dx
  4069c5:	mov    ds:0x22ec93eb,al
  4069ca:	cmp    al,BYTE PTR [ebx]
  4069cc:	dec    edi
  4069cd:	dec    ecx
  4069ce:	test   al,0xab
  4069d0:	or     BYTE PTR ds:0xddf77eeb,bh
  4069d6:	out    dx,al
  4069d7:	mov    esp,0x50ef5e35
  4069dc:	jl     0x406a15
  4069de:	ins    BYTE PTR es:[edi],dx
  4069df:	shl    bh,0xb4
  4069e2:	mov    esp,0x15614dce
  4069e7:	add    eax,0x8106654d
  4069ec:	ins    BYTE PTR es:[edi],dx
  4069ed:	sbb    DWORD PTR [esi],eax
  4069ef:	jmp    0xdd39b565
  4069f4:	cli    
  4069f5:	cmp    esp,DWORD PTR [edx+esi*2-0x55]
  4069f9:	mov    ebp,0x53366416
  4069fe:	push   esi
  4069ff:	inc    ecx
	...
  406a0c:	(bad)  
  406a0d:	inc    esp
  406a0e:	stc    
  406a0f:	inc    esi
  406a10:	aad    0x1f
  406a12:	inc    ebx
  406a13:	cmp    ecx,esi
  406a15:	bound  ecx,QWORD PTR [ebp-0x351f1b5c]
  406a1b:	(bad)  
  406a1c:	or     edx,DWORD PTR [esi+0x56ce6af4]
  406a22:	push   es
  406a23:	xchg   ebp,eax
  406a24:	neg    ebx
  406a26:	inc    edx
  406a27:	in     eax,0x91
  406a29:	push   0x48608c85
  406a2e:	jb     0x406a23
  406a30:	jns    0x4069f8
  406a32:	push   cs
  406a33:	jmp    0xcd2dc95f
  406a38:	jno    0x406a92
  406a3a:	stc    
  406a3b:	je     0x406a89
  406a3d:	inc    eax
  406a3e:	push   0xffffffe6
  406a40:	lea    ecx,[eax-0x7b]
  406a43:	loope  0x4069d2
  406a45:	into   
  406a46:	add    al,0xc2
  406a48:	add    dl,bl
  406a4a:	inc    edx
  406a4b:	aad    0xa
  406a4d:	jae    0x4069da
  406a4f:	sub    al,0x6b
  406a51:	mov    bl,0x55
  406a53:	shr    DWORD PTR [ebx+0x19],1
  406a56:	push   es
  406a57:	jmp    0x3539b5d5
  406a5c:	or     esi,DWORD PTR [ebp+0x633e7dee]
  406a62:	push   es
  406a63:	fisubr DWORD PTR [ecx]
  406a65:	fadd   st(4),st
  406a67:	xor    dh,BYTE PTR [edx+0x47e90a24]
  406a6d:	fsub   st(1),st
	...
  406a7b:	add    ch,bh
  406a7d:	mov    bl,0x85
  406a7f:	jge    0x406a3f
  406a81:	arpl   WORD PTR [ebx+0xb],si
  406a84:	push   es
  406a85:	pop    edi
  406a86:	push   es
  406a87:	add    dh,bl
  406a89:	pushf  
  406a8a:	pop    ebp
  406a8b:	leave  
  406a8c:	or     al,0x50
  406a8e:	stc    
  406a8f:	mov    bl,BYTE PTR [ebx-0x61ff43b1]
  406a95:	arpl   WORD PTR [esi],ax
  406a97:	push   0xffffff9e
  406a99:	cld    
  406a9a:	jb     0x406aac
  406a9c:	cmp    esp,0x83460872
  406aa2:	enter  0x9e00,0xe2
  406aa6:	lds    edi,FWORD PTR [esi-0x5e]
  406aa9:	pusha  
  406aaa:	(bad)  
  406aab:	sub    DWORD PTR [ebx+0x73],edx
  406aae:	test   DWORD PTR [ebp+0x7e],edi
  406ab1:	arpl   WORD PTR [ebx+0x7],si
  406ab4:	lds    ebx,FWORD PTR [esi+0x6]
  406ab7:	add    BYTE PTR [esi-0x18],bl
  406aba:	add    ebp,ebx
  406abc:	adc    al,0xc9
  406abe:	lds    ebx,FWORD PTR [edi-0x6b]
  406ac1:	push   es
  406ac2:	les    ecx,FWORD PTR [esi+ebx*2]
  406ac5:	mov    dl,0x8d
  406ac7:	in     al,dx
  406ac8:	fild   WORD PTR [edi]
  406aca:	repnz (bad) 
  406acc:	pop    ecx
  406acd:	stc    
  406ace:	clc    
  406acf:	jne    0x406b1b
  406ad1:	retf   0xf483
  406ad4:	dec    eax
  406ad5:	stc    
  406ad6:	clc    
  406ad7:	(bad)  
  406ad8:	xchg   ebx,eax
  406ad9:	div    bh
  406adb:	(bad)  
  406adc:	cmp    DWORD PTR [esi+0x6],ebx
	...
  406aeb:	add    BYTE PTR [esi],cl
  406aed:	and    al,BYTE PTR [ebx-0x706b704]
  406af3:	add    DWORD PTR [esi],ebx
  406af5:	arpl   WORD PTR [esi],ax
  406af7:	lea    edx,[ebx+0x59fff95e]
  406afd:	stc    
  406afe:	jb     0x406b08
  406b00:	idiv   DWORD PTR [edx+eax*1-0x540f8d73]
  406b07:	jmp    eax
  406b09:	ins    BYTE PTR es:[edi],dx
  406b0a:	sbb    BYTE PTR [eax],al
  406b0c:	dec    ebp
  406b0d:	cmp    al,0x70
  406b0f:	test   ebx,edx
  406b11:	into   
  406b12:	scas   eax,DWORD PTR es:[edi]
  406b13:	jmp    DWORD PTR [edi]
  406b15:	bound  eax,QWORD PTR [edx]
  406b17:	call   0x42f912
  406b1c:	je     0x406ae2
  406b1e:	scas   eax,DWORD PTR es:[edi]
  406b1f:	je     0x406b1c
  406b21:	inc    eax
  406b22:	lds    esi,FWORD PTR [ebp-0xd]
  406b25:	push   0xe3faebc2
  406b2a:	add    al,0x0
  406b2c:	idiv   DWORD PTR [ebx]
  406b2e:	mov    esp,0x483bffc2
  406b33:	mov    ebx,DWORD PTR [ebx+0x24fcc6b9]
  406b39:	xor    edx,ecx
  406b3b:	push   0x1d
  406b3d:	sub    DWORD PTR gs:[eax],ecx
  406b40:	pop    edi
  406b41:	mov    edi,0x4168ffaf
  406b46:	lds    esi,FWORD PTR [ebx+ecx*8-0xf]
  406b4a:	dec    edx
  406b4b:	jmp    edx
  406b4d:	push   ebx
  406b4e:	popf   
  406b4f:	jg     0x406b51
	...
  406b59:	add    BYTE PTR [eax],al
  406b5b:	add    BYTE PTR [eax+0x4d],dl
  406b5e:	scas   al,BYTE PTR es:[edi]
  406b5f:	or     esi,DWORD PTR [edi]
  406b61:	iret   
  406b62:	add    ebp,ebx
  406b64:	mov    ebx,0xf66a02b1
  406b69:	mov    dh,0x38
  406b6b:	inc    edi
  406b6d:	sub    al,0x28
  406b6f:	or     BYTE PTR [edi],bl
  406b71:	repnz scas eax,DWORD PTR es:[edi]
  406b73:	add    bh,dh
  406b75:	mov    dh,0xc5
  406b77:	jle    0x406b60
  406b79:	sar    BYTE PTR [eax],1
  406b7b:	adc    al,0xcf
  406b7d:	jbe    0x406b2e
  406b7f:	jne    0x406b76
  406b81:	enter  0x8b04,0xaa
  406b85:	(bad)  {k5}{z}
  406b8a:	out    dx,eax
  406b8b:	sbb    eax,0xa929d7f6
  406b90:	inc    edi
  406b91:	inc    esi
  406b92:	adc    bh,al
  406b94:	loope  0x406b46
  406b96:	fild   QWORD PTR [eax+0x5c975762]
  406b9c:	scas   eax,DWORD PTR es:[edi]
  406b9d:	inc    ebp
  406b9e:	jo     0x406b8c
  406ba0:	xor    esi,DWORD PTR [ebx-0x3]
  406ba3:	add    eax,0xcc6a5ecc
  406ba8:	inc    ebx
  406ba9:	div    DWORD PTR [ebx-0x3c]
  406bac:	dec    esp
  406bad:	sbb    al,0x2d
  406baf:	maskmovq mm5,(bad)
  406bb0:	imul   DWORD PTR [edi+0x1e769764]
  406bb6:	out    dx,eax
  406bb7:	stos   DWORD PTR es:[edi],eax
  406bb8:	cwde   
  406bb9:	inc    ebp
  406bba:	pushf  
  406bbb:	fsubr  QWORD PTR [ebp+0xa895b8]
	...
  406bc9:	add    BYTE PTR [eax],al
  406bcb:	add    BYTE PTR [edx],al
  406bcd:	pop    ebx
  406bce:	inc    edi
  406bcf:	or     eax,DWORD PTR [eax+0x38fc2045]
  406bd5:	into   
  406bd6:	sbb    BYTE PTR ds:0xfb9a45cd,0x50
  406bdd:	pop    eax
  406bde:	or     BYTE PTR [eax+0x2e2f5960],ch
  406be4:	cmc    
  406be5:	cmp    DWORD PTR [eax-0x108d2d7e],edx
  406beb:	sti    
  406bec:	dec    eax
  406bed:	inc    ebp
  406bee:	jno    0x406bf0
  406bf0:	jg     0x406c54
  406bf2:	test   DWORD PTR [ebx],0x7aec39f7
  406bf8:	mov    edx,0xc7044572
  406bfd:	xlat   BYTE PTR ds:[ebx]
  406bfe:	popa   
  406bff:	add    al,0x1f
  406c01:	inc    ebp
  406c02:	rcl    BYTE PTR [eax+ebx*1-0x31],0xf7
  406c07:	fwait
  406c08:	(bad)  
  406c09:	pop    ss
  406c0a:	push   es
  406c0b:	jmp    0x31064c04
  406c10:	cmc    
  406c11:	cmp    DWORD PTR [edx],ebp
  406c13:	sbb    al,0xf4
  406c15:	mov    eax,ds:0xd844c6ed
  406c1a:	push   edx
  406c1b:	in     eax,0x6d
  406c1d:	jno    0x406c8b
  406c1f:	jmp    0xe9c34268
  406c24:	mov    WORD PTR [ecx+edi*8+0x19],es
  406c28:	cwde   
  406c29:	into   
  406c2a:	or     dh,BYTE PTR [esi+0x25]
  406c2d:	jae    0x406c8d
  406c2f:	rol    BYTE PTR [eax],0x0
	...
  406c3a:	add    BYTE PTR [eax],al
  406c3c:	aaa    
  406c3d:	jae    0x406bc4
  406c3f:	in     al,0xe4
  406c41:	bound  esi,QWORD PTR [ebx-0x16]
  406c44:	xor    eax,0xbc6c0238
  406c49:	iret   
  406c4a:	lahf   
  406c4b:	bound  esi,QWORD PTR [eax+ebp*4+0x449f2bcf]
  406c52:	push   edx
  406c53:	jb     0x406cc4
  406c55:	loopne 0x406c18
  406c57:	xor    DWORD PTR [eax],edi
  406c59:	nop
  406c5a:	stc    
  406c5b:	ret    
  406c5c:	hlt    
  406c5d:	stos   DWORD PTR es:[edi],eax
  406c5e:	stc    
  406c5f:	pushf  
  406c60:	jl     0x406c9e
  406c62:	ret    0x9836
  406c65:	inc    esp
  406c66:	shr    DWORD PTR [eax+edx*4-0xb16f99d],0xd7
  406c6e:	push   edx
  406c6f:	icebp  
  406c70:	fnsave [eax-0x75]
  406c73:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406c74:	pushf  
  406c75:	mov    bl,0x6c
  406c77:	in     eax,dx
  406c78:	iret   
  406c79:	popf   
  406c7a:	cli    
  406c7b:	cdq    
  406c7c:	cdq    
  406c7d:	into   
  406c7e:	push   cs
  406c7f:	out    0xa6,al
  406c81:	push   esi
  406c82:	inc    ecx
  406c83:	push   0xe30b46df
  406c88:	das    
  406c89:	pop    edx
  406c8a:	jb     0x406c6f
  406c8c:	jne    0x406c54
  406c8e:	inc    BYTE PTR [eax]
  406c90:	push   cs
  406c91:	xchg   ebx,eax
  406c92:	iret   
  406c93:	xor    ebx,DWORD PTR [esi-0x17]
  406c96:	add    cl,BYTE PTR [ebx+0x3c5e159]
  406c9c:	icebp  
  406c9d:	add    eax,0x4c4
	...
  406caa:	add    BYTE PTR [eax],al
  406cac:	push   cs
  406cad:	mov    bl,0x8d
  406caf:	in     al,dx
  406cb0:	pop    ebp
  406cb1:	add    al,0xf2
  406cb3:	push   ebx
  406cb4:	sub    DWORD PTR [edi-0x62],esp
  406cb7:	cmp    cl,dh
  406cb9:	pop    edi
  406cba:	out    dx,al
  406cbb:	in     al,dx
  406cbc:	xchg   ecx,eax
  406cbd:	cld    
  406cbe:	clc    
  406cbf:	mov    DWORD PTR [ebx],ebx
  406cc1:	sti    
  406cc2:	mov    al,BYTE PTR [ebp+0x4a]
  406cc5:	mov    al,0xee
  406cc7:	sub    DWORD PTR [ecx-0x4],ebp
  406cca:	clc    
  406ccb:	xor    esi,DWORD PTR ds:0xa46a186a
  406cd1:	addr16 push es
  406cd3:	cli    
  406cd4:	sahf   
  406cd5:	pop    edi
  406cd6:	stc    
  406cd7:	jne    0x406d23
  406cd9:	std    
  406cda:	jb     0x406ce4
  406cdc:	inc    esi
  406cdd:	(bad)  
  406cde:	clc    
  406cdf:	call   ecx
  406ce1:	loop   0x406ca8
  406ce3:	bndldx bnd2,[eax+0x6]
  406ce7:	add    BYTE PTR [esi-0x190b8d04],cl
  406ced:	jl     0x406cc0
  406cef:	call   DWORD PTR [ecx]
  406cf1:	cmp    edi,ecx
  406cf3:	stc    
  406cf4:	pop    esi
  406cf5:	pop    edi
  406cf6:	jo     0x406cfd
  406cf8:	neg    DWORD PTR [ebx+0x7]
  406cfb:	add    BYTE PTR [esi-0x4],cl
  406cfe:	jb     0x406cf4
  406d00:	out    0x99,al
  406d02:	stc    
  406d03:	inc    DWORD PTR [ecx-0x3d]
  406d06:	(bad)  
  406d07:	je     0x406d23
  406d09:	std    
  406d0a:	jb     0x406d00
  406d0c:	es retf 0xffdf
	...
  406d1c:	push   ecx
  406d1d:	leave  
  406d1e:	push   ebx
  406d1f:	hlt    
  406d20:	test   eax,0xa1f76a14
  406d26:	mul    BYTE PTR [eax]
  406d28:	idiv   DWORD PTR [ecx]
  406d2a:	mov    ds:0x29041375,al
  406d2f:	hlt    
  406d30:	or     BYTE PTR [edi-0x2],ah
  406d33:	(bad)  
  406d34:	mov    edx,0xf7000211
  406d39:	cmp    DWORD PTR ds:0x28b4046,ebx
  406d3f:	jmp    DWORD PTR [edx-0x28]
  406d42:	cdq    
  406d43:	into   
  406d44:	lods   al,BYTE PTR ds:[esi]
  406d45:	dec    esp
  406d46:	add    eax,0x360bec53
  406d4b:	ss jl  0x406d32
  406d4e:	sbb    DWORD PTR [esi+0x38],eax
  406d51:	mov    eax,DWORD PTR [edx]
  406d53:	call   0x427338
  406d58:	hlt    
  406d59:	ret    
  406d5a:	dec    ebx
  406d5b:	inc    edi
  406d5c:	jl     0x406cdf
  406d5e:	ins    DWORD PTR es:[edi],dx
  406d5f:	xchg   esp,eax
  406d60:	push   es
  406d61:	dec    esp
  406d62:	add    eax,0x509df2b0
  406d67:	mov    eax,0x51b83
  406d6c:	fmul   QWORD PTR [edx+0x4c8847b8]
  406d72:	dec    edx
  406d73:	push   ebx
  406d74:	(bad)  
  406d75:	in     al,0xbe
  406d77:	add    bh,dh
  406d79:	mov    dl,0x39
  406d7b:	clc    
  406d7c:	ror    BYTE PTR [ecx+0xff3b],1
	...
  406d8a:	add    BYTE PTR [eax],al
  406d8c:	cli    
  406d8d:	clc    
  406d8e:	dec    ebp
  406d8f:	push   0x43e0c9
  406d94:	pop    eax
  406d95:	mov    edi,0x757ae8a1
  406d9a:	add    al,BYTE PTR [eax]
  406d9c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406d9d:	inc    esp
  406d9e:	lds    esi,FWORD PTR [ebx+edi*4-0x3c]
  406da2:	stos   BYTE PTR es:[edi],al
  406da3:	push   0x433062a1
  406da8:	test   DWORD PTR [edx-0x4f],0xec62f7ba
  406daf:	stos   DWORD PTR es:[edi],eax
  406db0:	enter  0x64a9,0xc4
  406db4:	pop    esi
  406db5:	xlat   BYTE PTR ds:[ebx]
  406db6:	fld    QWORD PTR [ebx]
  406db8:	div    edx
  406dba:	jmp    0x5b3bc770
  406dbf:	adc    dh,bh
  406dc1:	bound  eax,QWORD PTR [ebx+eax*8]
  406dc4:	xor    DWORD PTR [edx-0x69b7fc60],ebp
  406dca:	xchg   edi,eax
  406dcb:	pusha  
  406dcc:	fld    DWORD PTR [ecx-0x70]
  406dcf:	js     0x406e1b
  406dd1:	push   ebx
  406dd2:	in     al,0xd1
  406dd4:	arpl   WORD PTR [edi+0x76],sp
  406dd7:	add    esp,ebx
  406dd9:	push   0x20b99c1f
  406dde:	jo     0x406d84
  406de0:	and    BYTE PTR [ecx],ch
  406de2:	and    BYTE PTR [ebp-0x5b3b5e16],ah
  406de8:	sub    dh,BYTE PTR [edi]
  406dea:	push   edi
  406deb:	fcmovne st,st(7)
  406ded:	inc    ecx
  406dee:	push   eax
  406def:	add    BYTE PTR [eax],0x0
	...
  406dfa:	add    BYTE PTR [eax],al
  406dfc:	and    bh,BYTE PTR [ebx]
  406dfe:	out    dx,eax
  406dff:	sub    al,0xf0
  406e01:	sub    DWORD PTR [edx-0x709d0855],ebp
  406e07:	add    ecx,DWORD PTR [eax+0xaa437b7]
  406e0d:	aaa    
  406e0e:	sub    BYTE PTR [esi],ch
  406e10:	out    dx,eax
  406e11:	dec    edx
  406e12:	or     BYTE PTR [esi+0x2e184170],ah
  406e18:	arpl   WORD PTR [edx-0x69],cx
  406e1b:	int    0x60
  406e1d:	inc    ecx
  406e1e:	in     al,0xc3
  406e20:	loop   0x406e86
  406e22:	adc    al,0x8
  406e24:	cld    
  406e25:	and    dh,BYTE PTR [ebx+0xc]
  406e28:	jl     0x406dc1
  406e2a:	push   es
  406e2b:	std    
  406e2c:	enter  0xf954,0x74
  406e30:	inc    eax
  406e31:	inc    eax
  406e32:	jae    0x406e11
  406e34:	push   esp
  406e35:	xchg   esp,eax
  406e36:	xor    ah,BYTE PTR [ebx+esi*1-0x46]
  406e3a:	add    edx,DWORD PTR [edx-0x16f99d06]
  406e40:	imul   edx,DWORD PTR [edi+0x400972f2],0x9454b573
  406e4a:	push   cs
  406e4b:	mov    dh,0xde
  406e4d:	ds out dx,al
  406e4f:	inc    ecx
  406e50:	xor    eax,0xb872f941
  406e55:	mov    al,ds:0x6fb1b05d
  406e5a:	push   es
  406e5b:	cmp    al,0x70
  406e5d:	dec    edi
  406e5e:	test   DWORD PTR [ebp+0x0],esp
	...
  406e6c:	inc    ebx
  406e6d:	cwde   
  406e6e:	push   ebp
  406e6f:	rcl    BYTE PTR [ecx-0xb36f935],cl
  406e75:	(bad)  
  406e76:	out    dx,al
  406e77:	or     dh,BYTE PTR [ebp+0x2e60f940]
  406e7d:	aas    
  406e7e:	outs   dx,BYTE PTR ds:[esi]
  406e7f:	jmp    0x5239af18
  406e84:	in     eax,dx
  406e85:	and    cl,bh
  406e87:	push   esi
  406e88:	jb     0x406e30
  406e8a:	mov    dl,0xc1
  406e8c:	hlt    
  406e8d:	add    BYTE PTR [esi],0xe9
  406e90:	pop    esp
  406e91:	stos   BYTE PTR es:[edi],al
  406e92:	fdivr  DWORD PTR [esi]
  406e94:	push   esp
  406e95:	jmp    0x70c6:0xbe667542
  406e9c:	xchg   edi,eax
  406e9d:	inc    eax
  406e9e:	stc    
  406e9f:	jmp    0x54356eed
  406ea4:	cmp    al,0xa6
  406ea6:	(bad)  
  406ea7:	aad    0xf4
  406ea9:	bound  eax,QWORD PTR [esi]
  406eab:	es scas al,BYTE PTR es:[edi]
  406ead:	push   ss
  406eae:	stc    
  406eaf:	add    BYTE PTR [ecx+0x64],bl
  406eb2:	push   es
  406eb3:	(bad)  
  406eb4:	xchg   ebx,eax
  406eb5:	aam    0xf8
  406eb7:	pop    ds
  406eb8:	dec    esi
  406eb9:	fs stc 
  406ebb:	jne    0x406f07
  406ebd:	aad    0x42
  406ebf:	rcr    BYTE PTR [ecx],1
  406ec1:	pop    ebx
  406ec2:	mov    dl,0x8f
  406ec4:	shl    edx,cl
  406ec6:	mov    al,BYTE PTR [ebp+0x4e]
  406ec9:	je     0x406f39
  406ecb:	add    BYTE PTR [esi],cl
  406ecd:	xchg   BYTE PTR fs:[edx+0x0],ch
	...
  406ed9:	add    BYTE PTR [eax],al
  406edb:	add    BYTE PTR [esi],bl
  406edd:	add    eax,0x7d260873
  406ee2:	int3   
  406ee3:	add    BYTE PTR [esi],cl
  406ee5:	jno    0x406ead
  406ee7:	je     0x406ef9
  406ee9:	jmp    0x5b1f3f68
  406eee:	add    ebp,ecx
  406ef0:	cwde   
  406ef1:	arpl   WORD PTR [esi],ax
  406ef3:	add    BYTE PTR [ecx-0x36004956],dl
  406ef9:	arpl   WORD PTR [esi],ax
  406efb:	lea    esp,[ebx]
  406efd:	xchg   edi,eax
  406efe:	push   esi
  406eff:	inc    ebx
  406f01:	lahf   
  406f02:	outs   dx,BYTE PTR ds:[esi]
  406f03:	add    dh,cl
  406f05:	arpl   WORD PTR [esi+0x5627138d],ax
  406f0b:	call   0x46a01c
  406f10:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406f11:	and    esi,DWORD PTR [ebx+0x5]
  406f14:	aaa    
  406f15:	iret   
  406f16:	push   es
  406f17:	add    BYTE PTR [esi-0x1f4bbd10],cl
  406f1d:	arpl   WORD PTR [esi],ax
  406f1f:	lea    ecx,[ebx+0x23]
  406f22:	mov    edi,0x6638e3c
  406f27:	xor    ecx,esi
  406f29:	fsubr  DWORD PTR [ebx+0x3a23a3c7]
  406f2f:	add    BYTE PTR [esi+0x63],bl
  406f32:	stc    
  406f33:	jne    0x406f2c
  406f35:	popf   
  406f36:	xchg   esp,eax
  406f37:	inc    ebp
  406f38:	dec    ebx
  406f39:	mov    BYTE PTR [esi-0x2c],cl
  406f3c:	push   eax
  406f3d:	dec    eax
  406f3e:	add    eax,0x0
	...
  406f4b:	add    BYTE PTR [eax],dh
  406f4d:	push   es
  406f4e:	xchg   ebp,eax
  406f4f:	jmp    eax
  406f51:	dec    ecx
  406f52:	add    eax,0x3589b28d
  406f57:	push   0xfffffff7
  406f59:	xchg   ebx,eax
  406f5a:	add    bh,bh
  406f5c:	mov    ds:0x2ee6a9dd,al
  406f61:	dec    ecx
  406f62:	add    eax,0xc95370b
  406f67:	adc    DWORD PTR [edx-0xa8afe27],0x14
  406f6e:	and    bh,bh
  406f70:	mov    dh,ch
  406f72:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406f73:	jne    0x406fb8
  406f75:	mov    eax,ds:0x4c364f22
  406f7a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406f7b:	jne    0x406f28
  406f7d:	aam    0x1c
  406f7f:	leave  
  406f80:	test   DWORD PTR [ebx-0x7e],0x5e1d07c4
  406f87:	inc    ebp
  406f88:	scas   eax,DWORD PTR es:[edi]
  406f89:	pop    esp
  406f8a:	sub    BYTE PTR [eax],al
  406f8c:	enter  0x9937,0xe8
  406f90:	shl    DWORD PTR [edx+0xbecffa7],1
  406f96:	adc    DWORD PTR [edx],eax
  406f98:	pushf  
  406f99:	pop    edi
  406f9a:	lea    eax,[ebp+0x6f]
  406f9d:	popf   
  406f9e:	adc    DWORD PTR [edi+ecx*4-0x8ff32c6],edi
  406fa5:	sti    
  406fa6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406fa7:	jne    0x406ffc
  406fa9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406faa:	adc    DWORD PTR [eax-0x662861],edi
	...
  406fbc:	add    BYTE PTR [ecx-0x3b],0x75
  406fc0:	cmc    
  406fc1:	mov    al,ds:0x62eafef2
  406fc6:	jmp    DWORD PTR [eax+0x17186ee2]
  406fcc:	lahf   
  406fcd:	dec    ebx
  406fce:	ficomp DWORD PTR [esi-0x439bc1a8]
  406fd4:	push   eax
  406fd5:	mov    eax,0x2c35ac47
  406fda:	out    dx,eax
  406fdb:	add    eax,DWORD PTR [eax-0x48]
  406fde:	cmp    ebp,DWORD PTR [ebp+ebp*8+0x30a0e81f]
  406fe5:	mov    eax,0x1ff5aba3
  406fea:	fsub   DWORD PTR [eax-0x542c47e0]
  406ff0:	sbb    eax,0x7ca0c81f
  406ff5:	and    ah,BYTE PTR [ecx+eax*2]
  406ff8:	ds and ebx,ebp
  406ffb:	add    ebp,DWORD PTR [edx+0x3384c2e9]
  407001:	aas    
  407002:	fs inc esi
  407004:	add    ebp,DWORD PTR [edx-0x51]
  407007:	pop    ss
  407008:	icebp  
  407009:	and    eax,0x62f703ef
  40700e:	out    dx,eax
  40700f:	enter  0x3f32,0xef
  407013:	add    esi,edi
  407015:	bound  esi,QWORD PTR [edx+0x46]
  407018:	retf   
  407019:	xchg   edx,eax
  40701a:	js     0x407032
  40701c:	repz cmp eax,0xbfa
	...
  40702a:	add    BYTE PTR [eax],al
  40702c:	iret   
  40702d:	retf   
  40702e:	imul   esp,DWORD PTR [eax-0x601e1e50],0x2df0b6f7
  407038:	idiv   DWORD PTR ds:0xb7980fda
  40703e:	dec    ebx
  40703f:	stos   DWORD PTR es:[edi],eax
  407040:	sub    DWORD PTR ds:0x3e27a040,edi
  407046:	mov    dl,0x9f
  407048:	(bad)  
  407049:	clts   
  40704b:	adc    eax,0x205e3d57
  407050:	cmp    ch,BYTE PTR [edx+0x6]
  407053:	mov    esp,0x25854e7b
  407058:	add    ah,0xc1
  40705b:	lods   al,BYTE PTR ds:[esi]
  40705c:	js     0x4070c1
  40705e:	push   es
  40705f:	xchg   DWORD PTR [edi],edi
  407061:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407062:	clc    
  407063:	out    0xf4,eax
  407065:	enter  0x6c02,0xb9
  407069:	ds push esi
  40706b:	xor    DWORD PTR [edx+eiz*2+0x6],0xf93ddce9
  407073:	jmp    0xf1b3ae6c
  407078:	dec    esp
  407079:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40707a:	iret   
  40707b:	jmp    0xe6049c74
  407080:	hlt    
  407081:	xchg   edi,eax
  407082:	(bad)  
  407083:	aad    0x74
  407085:	es stos BYTE PTR es:[edi],al
  407087:	push   ss
  407088:	les    esp,FWORD PTR ds:0x62f38543
  40708e:	push   es
  40708f:	jmp    0x407094
	...
  40709c:	lds    ebx,FWORD PTR [ecx]
  40709e:	outs   dx,BYTE PTR ds:[esi]
  40709f:	jmp    0x9239ad88
  4070a4:	or     DWORD PTR [edi],ebx
  4070a6:	stc    
  4070a7:	xchg   esi,eax
  4070a8:	push   0xffffffa6
  4070aa:	mov    BYTE PTR [ecx],0xfb
  4070ad:	push   edx
  4070ae:	push   es
  4070af:	jmp    0x7f1b3b50
  4070b4:	pusha  
  4070b5:	jmp    0xe916:0x630b3142
  4070bc:	hlt    
  4070bd:	dec    edx
  4070be:	pop    edx
  4070bf:	inc    ebp
  4070c0:	mov    BYTE PTR [edi+ecx*4],bh
  4070c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4070c4:	inc    eax
  4070c5:	out    dx,al
  4070c6:	jp     0x4070f5
  4070c8:	cmp    bh,BYTE PTR [edi+0x6]
  4070cb:	jmp    0x106e0c4
  4070d0:	int    0xc8
  4070d2:	rol    DWORD PTR [ebp-0x26],0x42
  4070d6:	stc    
  4070d7:	dec    DWORD PTR [esi-0x2e3f8d23]
  4070dd:	test   eax,0x988bffd2
  4070e2:	mov    DWORD PTR [ebp-0x2],eax
  4070e5:	and    eax,DWORD PTR [ebx-0x28]
  4070e8:	add    DWORD PTR [esi+eax*1+0x0],ebp
  4070ec:	sbb    DWORD PTR [edx+0x6041fff2],ebp
  4070f2:	push   es
  4070f3:	lea    ebx,[ebx+0x4e685624]
  4070f9:	pusha  
  4070fa:	push   es
  4070fb:	xor    BYTE PTR [eax+eiz*2-0x7],0x75
	...
  40710c:	or     BYTE PTR es:[eax+ecx*8+0xe],ch
  407111:	pusha  
  407112:	or     eax,0x8564bac0
  407117:	jge    0x407163
  407119:	pusha  
  40711a:	jae    0x407121
  40711c:	daa    
  40711d:	add    eax,DWORD PTR [esi]
  40711f:	add    BYTE PTR [esi],cl
  407121:	and    eax,0x6d41b043
  407126:	push   es
  407127:	add    BYTE PTR [ebx-0x55],dl
  40712a:	mov    dh,0x50
  40712c:	xchg   ecx,eax
  40712d:	pop    edx
  40712e:	mov    edx,0x65fce68
  407133:	adc    BYTE PTR [ebx-0x55],0xc2
  407137:	push   eax
  407138:	jbe    0x4070e4
  40713a:	into   
  40713b:	add    dh,bl
  40713d:	push   0xedb75c6
  407142:	fiadd  WORD PTR [eax]
  407144:	into   
  407145:	pop    edi
  407146:	lea    eax,[ebp-0x1a]
  407149:	and    eax,0x83230006
  40714e:	ret    0x2b9
  407151:	addr16 push es
  407153:	add    bh,dh
  407155:	pop    eax
  407156:	ret    0x5df3
  407159:	test   BYTE PTR [esi-0x3c],cl
  40715c:	retf   
  40715d:	dec    ecx
  40715e:	add    eax,0x5cf68000
  407163:	(bad)  
  407164:	xor    bh,BYTE PTR [edx-0x40]
  407167:	inc    ebp
  407168:	dec    edi
  407169:	mov    WORD PTR [eax],cs
  40716b:	add    bh,dh
  40716d:	mov    WORD PTR [esi-0xc],cs
	...
  40717c:	pusha  
  40717d:	dec    esp
  40717e:	add    eax,0xc10e6a00
  407183:	push   eax
  407184:	fisttp QWORD PTR [ecx+0x2f]
  407187:	add    BYTE PTR [eax-0x42],cl
  40718a:	pop    ecx
  40718b:	call   0x45f5ce
  407190:	in     al,dx
  407191:	mov    DWORD PTR [ecx],edx
  407193:	push   es
  407194:	je     0x407164
  407196:	mov    cl,0x0
  407198:	mov    ds:0xf78cac4e,al
  40719d:	dec    ecx
  40719e:	add    eax,0x9a39a2ff
  4071a3:	jne    0x4071dc
  4071a5:	sub    al,0x11
  4071a7:	mov    eax,0x4148579f
  4071ac:	idiv   esp
  4071ae:	adc    BYTE PTR [edi+ecx*1-0x8ff3c35],bh
  4071b5:	int3   
  4071b6:	into   
  4071b7:	adc    al,0xf8
  4071b9:	cwde   
  4071ba:	inc    ecx
  4071bb:	fadd   QWORD PTR [edi+0x56]
  4071be:	add    bh,bh
  4071c0:	bound  ecx,QWORD PTR [edx+ebp*4]
  4071c3:	sti    
  4071c4:	iret   
  4071c5:	jmp    0x37f77d64
  4071ca:	pop    es
  4071cb:	jmp    0x4071ee
  4071cd:	mov    bl,0x41
  4071cf:	mov    ah,0xb8
  4071d1:	aaa    
  4071d2:	push   ecx
  4071d3:	call   0xffdc3c2e
  4071d8:	test   al,0x63
  4071da:	ficomp DWORD PTR [edi-0x71]
  4071dd:	push   edx
  4071de:	and    DWORD PTR [eax+eax*1],eax
	...
  4071e9:	add    BYTE PTR [eax],al
  4071eb:	add    bh,dh
  4071ed:	xchg   edx,eax
  4071ee:	push   eax
  4071ef:	pop    ss
  4071f0:	push   ebx
  4071f1:	cmp    dl,dl
  4071f3:	push   edi
  4071f4:	lahf   
  4071f5:	popf   
  4071f6:	inc    esi
  4071f7:	popf   
  4071f8:	sub    BYTE PTR [esi+0x2f],0x17
  4071fc:	cmc    
  4071fd:	dec    ebp
  4071fe:	inc    BYTE PTR [eax+0x17ef52f2]
  407204:	add    edi,DWORD PTR [edx]
  407206:	call   0xe29c:0xebb061f3
  40720d:	out    dx,al
  40720e:	push   es
  40720f:	inc    esp
  407210:	dec    esi
  407211:	cmp    cl,BYTE PTR [eax]
  407213:	or     DWORD PTR [edi],esi
  407215:	mov    al,0xed
  407217:	test   al,0xe8
  407219:	in     eax,dx
  40721a:	or     DWORD PTR es:[edi+ebp*4],ebx
  40721e:	fimul  WORD PTR [esi-0x6360f946]
  407224:	mov    ds:0x6b16e04e,al
  407229:	dec    ebx
  40722a:	push   es
  40722b:	cdq    
  40722c:	sbb    BYTE PTR [edx],bh
  40722e:	fs mov ebx,0xab93b010
  407234:	push   ecx
  407235:	and    ch,bh
  407237:	add    eax,DWORD PTR [eax]
  407239:	mov    al,0xaf
  40723b:	stos   DWORD PTR es:[edi],eax
  40723c:	or     DWORD PTR ds:0xaff09cb0,ebx
  407242:	imul   ebp,DWORD PTR [ebx-0x635fe32f],0xffffffe0
  407249:	scas   eax,DWORD PTR es:[edi]
  40724a:	stos   DWORD PTR es:[di],eax
  40724c:	mov    ecx,0x9c901c
	...
  407259:	add    BYTE PTR [eax],al
  40725b:	add    BYTE PTR [edi+esi*4+0x3b],dh
  40725f:	add    eax,DWORD PTR [ebx+0x6b]
  407262:	adc    BYTE PTR [esi],0x93
  407265:	dec    edx
  407266:	lahf   
  407267:	mov    ecx,0x620639b8
  40726c:	mov    bh,0x9d
  40726e:	pop    ecx
  40726f:	mov    al,ds:0xbc0652b6
  407274:	outs   dx,DWORD PTR ds:[esi]
  407275:	inc    esi
  407276:	test   DWORD PTR ds:0x322d957c,esp
  40727c:	ja     0x407235
  40727e:	or     ch,cl
  407280:	loopne 0x40722a
  407282:	test   esp,eax
  407284:	test   BYTE PTR [ecx],bh
  407286:	jne    0x407239
  407288:	imul   ebx,DWORD PTR [edi-0x506c6606],0x20d7410a
  407292:	push   es
  407293:	jmp    0xd9be9511
  407298:	jnp    0x407249
  40729a:	or     al,BYTE PTR [ecx]
  40729c:	jmp    0x4072b2
  40729e:	stc    
  40729f:	push   cs
  4072a0:	jge    0x407241
  4072a2:	inc    BYTE PTR [esi]
  4072a4:	jmp    0x31ce60df
  4072a9:	bound  eax,QWORD PTR [esi]
  4072ab:	loop   0x4072e1
  4072ad:	scas   al,BYTE PTR es:[edi]
  4072ae:	pop    ds
  4072af:	out    dx,al
  4072b0:	add    dl,BYTE PTR [ebx-0x7]
  4072b3:	pop    esp
  4072b4:	adc    DWORD PTR [edx+0x4aeb54f9],0x5
  4072bb:	xlat   BYTE PTR ds:[ebx]
  4072bc:	ins    BYTE PTR es:[edi],dx
  4072bd:	cmp    DWORD PTR [ebp+0xb1],ecx
	...
  4072cb:	add    BYTE PTR [edi+ebp*4-0x6],ch
  4072cf:	rol    esi,1
  4072d1:	pop    ds
  4072d2:	push   es
  4072d3:	jmp    0xc14b2235
  4072d8:	psubw  mm5,QWORD PTR es:[esi-0x4fa2db88]
  4072e0:	mov    ecx,0x68340667
  4072e5:	inc    edi
  4072e6:	xchg   DWORD PTR [ebp-0x7106c715],ebp
  4072ec:	jle    0x4072cc
  4072ee:	jae    0x4072f0
  4072f0:	js     0x4072ce
  4072f2:	clc    
  4072f3:	push   eax
  4072f4:	out    0x5d,al
  4072f6:	pop    es
  4072f7:	add    BYTE PTR [esi-0x6138e1f4],bl
  4072fd:	fs iret 
  4072ff:	ret    
  407300:	arpl   cx,bp
  407302:	jmp    0x6ad2e8a
  407307:	je     0x407292
  407309:	loope  0x407385
  40730b:	adc    BYTE PTR [esi+0x43ff1f68],bl
  407311:	dec    eax
  407312:	clc    
  407313:	jne    0x40729b
  407315:	or     al,0xd9
  407317:	(bad)  
  407318:	sub    esp,ebx
  40731a:	clc    
  40731b:	jne    0x40736b
  40731d:	fnsave [edx+0xc]
  407320:	sbb    DWORD PTR [edx+0xe],edx
  407323:	call   0x396879
  407328:	pop    ss
  407329:	and    DWORD PTR [esi],edx
  40732b:	add    BYTE PTR [ebx+0x83e9e9],al
	...
  407339:	add    BYTE PTR [eax],al
  40733b:	add    BYTE PTR [ebx+0x6c],bh
  40733e:	push   es
  40733f:	je     0x40735b
  407341:	loope  0x4073bd
  407343:	or     al,0x1e
  407345:	push   0x33a3ff10
  40734a:	clc    
  40734b:	jne    0x407373
  40734d:	or     al,0xb5
  40734f:	(bad)  
  407350:	cmp    ebp,ebx
  407352:	clc    
  407353:	jne    0x40736f
  407355:	fnsave [edx+0x8]
  407358:	ss sar di,1
  40735c:	cmp    DWORD PTR [edi],esp
  40735e:	les    ecx,FWORD PTR [esi+ecx*1]
  407361:	jae    0x4072f0
  407363:	in     al,dx
  407364:	pop    ebp
  407365:	clc    
  407366:	cmc    
  407367:	jmp    DWORD PTR [ebx]
  407369:	imul   ebp,esi,0x45
  40736c:	mov    ecx,0x1389f8dc
  407371:	imul   eax,DWORD PTR [ebp+0x53df77d],0x74
  407378:	and    ecx,ebp
  40737a:	adc    eax,0xbf7acf0c
  40737f:	(bad)  
  407380:	mov    eax,0x3574c534
  407385:	mov    edi,0xc947f046
  40738a:	push   ss
  40738b:	or     al,0x8f
  40738d:	adc    DWORD PTR [edi+edi*8+0x74c53498],edi
  407394:	(bad)
  407397:	cld    
  407398:	test   DWORD PTR [ecx-0xb],0x9d6a05ff
  40739f:	jne    0x4073a1
	...
  4073a9:	add    BYTE PTR [eax],al
  4073ab:	add    BYTE PTR [ebx+0x78],bh
  4073ae:	push   ss
  4073af:	clc    
  4073b0:	pop    edi
  4073b1:	je     0x407356
  4073b3:	jmp    FWORD PTR [eax+0x44]
  4073b6:	lds    esi,FWORD PTR [ebp+0x6]
  4073b9:	adc    DWORD PTR [esi],0x90ce5810
  4073bf:	dec    edx
  4073c1:	push   ecx
  4073c2:	pushf  
  4073c3:	jne    0x4073c4
  4073c5:	popa   
  4073c6:	dec    esp
  4073c7:	inc    DWORD PTR [eax+0x60]
  4073ca:	mov    es,WORD PTR [ebp+0x47]
  4073cd:	fldcw  WORD PTR [esi+eax*8-0x60cfb0]
  4073d4:	mov    ds:0x3e86ad15,al
  4073d9:	inc    eax
  4073da:	lahf   
  4073db:	leave  
  4073dc:	xor    eax,0x7c550545
  4073e1:	sbb    eax,0x2807c483
  4073e6:	or     DWORD PTR [edi+ecx*1],ecx
  4073e9:	aad    0xbb
  4073eb:	(bad)  
  4073ec:	clc    
  4073ed:	mov    cl,0x39
  4073ef:	or     al,0x74
  4073f1:	outs   dx,DWORD PTR ds:[esi]
  4073f2:	push   cs
  4073f3:	add    BYTE PTR [ebx+0x7d],ah
  4073f6:	lahf   
  4073f7:	jne    0x4073ec
  4073f9:	bound  edx,QWORD PTR [edi-0x67c946bc]
  4073ff:	or     eax,0x86dcafb7
  407404:	xor    dh,BYTE PTR [ebx]
  407406:	aas    
  407407:	cdq    
  407408:	dec    edx
  407409:	addr16 xchg edi,eax
  40740b:	xchg   ecx,eax
  40740c:	cdq    
  40740d:	ss js  0x40741d
	...
  40741c:	mov    bh,0xaf
  40741e:	int3   
  40741f:	sub    BYTE PTR [edx],0x37
  407422:	out    dx,eax
  407423:	add    eax,DWORD PTR [edi]
  407425:	arpl   sp,bx
  407427:	repnz cdq 
  407429:	mov    al,0xff
  40742b:	cwde   
  40742c:	or     dh,BYTE PTR [edi]
  40742e:	push   eax
  40742f:	jg     0x8f4c466b
  407435:	dec    eax
  407436:	inc    ecx
  407437:	cdq    
  407438:	js     0x407422
  40743a:	mov    eax,ds:0xcb4ac793
  40743f:	mov    eax,0xf283668
  407444:	repz dec edx
  407446:	retf   
  407447:	mov    edx,0xc6363658
  40744c:	add    esp,DWORD PTR [ebx-0x46]
  40744f:	mov    WORD PTR [ebx-0x1e],ds
  407452:	and    dl,BYTE PTR [esp+eiz*4-0x3d66db77]
  407459:	push   0x17
  40745b:	sub    DWORD PTR [ecx+0x36],edx
  40745e:	lock mov dh,BYTE PTR [edx-0x10e89396]
  407465:	bound  ebx,QWORD PTR [ebx+0x42]
  407468:	sbb    BYTE PTR [eax+0x182cabf7],dh
  40746e:	rcr    BYTE PTR [eax-0x29acdd04],1
  407474:	jae    0x407416
  407476:	mov    edi,0xf7aff833
  40747b:	stos   DWORD PTR es:[edi],eax
  40747c:	test   DWORD PTR [esi+eax*1],edx
  40747f:	mov    dh,0x0
	...
  407489:	add    BYTE PTR [eax],al
  40748b:	add    BYTE PTR [edi-0x26ca3997],cl
  407491:	loop   0x40750d
  407493:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407494:	hlt    
  407495:	bound  edx,QWORD PTR [esi]
  407497:	jmp    0x1d39c787
  40749c:	outs   dx,DWORD PTR ds:[esi]
  40749d:	xor    eax,0x7f8c9173
  4074a2:	in     al,0x86
  4074a4:	pop    edi
  4074a5:	imul   eax,esi,0x8ba1f5f5
  4074ab:	sub    al,0x83
  4074ad:	xchg   edx,eax
  4074ae:	out    dx,al
  4074af:	jmp    0x6739aa13
  4074b4:	jmp    0x4c6a6323
  4074b9:	xor    eax,0x99b362f9
  4074be:	iret   
  4074bf:	sub    eax,DWORD PTR [eax+0x50725235]
  4074c5:	jecxz  0x407488
  4074c7:	jne    0x407457
  4074c9:	xor    eax,0xfae92ef9
  4074ce:	imul   DWORD PTR [esi]
  4074d0:	jg     0x407534
  4074d2:	push   es
  4074d3:	jmp    0xed835ecc
  4074d8:	add    esp,DWORD PTR [ebx]
  4074da:	jb     0x4074c8
  4074dc:	je     0x407558
  4074de:	push   es
  4074df:	xchg   esp,eax
  4074e0:	inc    ecx
  4074e1:	dec    edx
  4074e2:	jle    0x4074cc
  4074e4:	hlt    
  4074e5:	(bad)  
  4074e6:	stc    
  4074e7:	je     0x4074e1
  4074e9:	dec    edx
  4074ea:	fisttp DWORD PTR [edx]
  4074ec:	(bad)  
  4074ed:	xor    eax,0x290d
	...
  4074fa:	add    BYTE PTR [eax],al
  4074fc:	icebp  
  4074fd:	outs   dx,BYTE PTR gs:[esi]
  4074ff:	call   0xde4718e8
  407504:	out    0x66,al
  407506:	out    dx,al
  407507:	repnz inc eax
  407509:	xor    eax,0xcaeec2f9
  40750e:	add    BYTE PTR [eax],al
  407510:	ficomp WORD PTR [edi+0x6b2bff06]
  407516:	out    dx,al
  407517:	or     al,0x82
  407519:	int3   
  40751a:	clc    
  40751b:	mov    DWORD PTR [ebx-0x69],ebx
  40751e:	clc    
  40751f:	call   DWORD PTR [ecx-0x21fec779]
  407525:	pusha  
  407526:	mov    eax,DWORD PTR [ebp-0x73264]
  40752c:	inc    BYTE PTR [esi]
  40752e:	sbb    al,0x71
  407531:	int3   
  407532:	mov    al,BYTE PTR [ebp-0x732a4]
  407538:	push   cs
  407539:	int3   
  40753a:	mov    dl,0xb8
  40753c:	adc    ah,cl
  40753e:	clc    
  40753f:	call   0x4695bc
  407544:	pop    es
  407545:	loop   0x407500
  407547:	(bad)  
  407548:	and    esp,ecx
  40754a:	inc    ebp
  40754b:	bndldx (bad),[ecx]
  40754e:	push   es
  40754f:	add    BYTE PTR [esi+0x30c292eb],cl
  407555:	int3   
  407556:	clc    
  407557:	neg    DWORD PTR [eax+esi*1-0x7]
  40755b:	dec    DWORD PTR [esi+0x5d]
  40755e:	add    BYTE PTR [ebx+0x0],0x0
  407565:	add    BYTE PTR [eax],al
  407567:	add    BYTE PTR [eax],al
  407569:	add    BYTE PTR [eax],al
  40756b:	add    BYTE PTR [esi+0x60],cl
  40756e:	push   es
  40756f:	lea    ebx,[esp+edi*1-0x641d97b7]
  407576:	inc    edi
  407577:	add    dh,dh
  407579:	fcmovnb st,st(4)
  40757b:	add    BYTE PTR [esi+0x69],cl
  40757e:	(bad)  
  40757f:	jne    0x40759c
  407581:	pop    es
  407582:	retf   0x1e00
  407585:	pusha  
  407586:	mov    edx,DWORD PTR [ebp-0x73334]
  40758c:	mov    ds:0xa6502aa1,eax
  407591:	int3   
  407592:	dec    eax
  407593:	inc    ecx
  407594:	test   DWORD PTR [ecx-0x53],0x54a3472
  40759b:	or     esi,DWORD PTR [edi]
  40759d:	ja     0x4075a6
  40759f:	jmp    0x45bf44
  4075a4:	call   0x1f28841f
  4075a9:	sub    DWORD PTR [eax+0x1609ecff],edx
  4075af:	maxps  xmm2,XMMWORD PTR [edi-0x3308beb3]
  4075b6:	adc    eax,0xbd4ccf0c
  4075bb:	(bad)  
  4075bc:	mov    eax,0xf76a0ed0
  4075c1:	mov    ah,0x16
  4075c3:	or     al,0x9f
  4075c5:	pusha  
  4075c6:	mov    ebp,0x7696a0ff
  4075cb:	ret    0xbc99
  4075ce:	nop
  4075cf:	lea    eax,[eax]
	...
  4075d9:	add    BYTE PTR [eax],al
  4075db:	add    BYTE PTR ds:0x9f503466,ah
  4075e1:	fdivr  QWORD PTR [ebx-0x70067f01]
  4075e7:	jne    0x4075c8
  4075e9:	pushf  
  4075ea:	push   ss
  4075eb:	adc    al,0x70
  4075ed:	out    dx,al
  4075ee:	hlt    
  4075ef:	dec    edi
  4075f0:	push   0x67e80cf6
  4075f5:	adc    DWORD PTR [eax-0x575ab001],0xffffffff
  4075fc:	push   eax
  4075fd:	push   eax
  4075fe:	and    eax,0x8a1db58d
  407603:	test   DWORD PTR [ebx+0x74ff9063],ecx
  407609:	fdivrp st(4),st
  40760b:	jmp    FWORD PTR [ebx+0x2812ac47]
  407611:	mov    dh,0xf5
  407613:	(bad)  
  407614:	push   0x6d
  407616:	xchg   ebx,eax
  407617:	call   FWORD PTR [eax]
  407619:	(bad)  
  40761a:	xlat   BYTE PTR ds:[ebx]
  40761b:	lea    esi,[edx+eiz*2]
  40761e:	out    dx,eax
  40761f:	or     BYTE PTR [edi],dh
  407621:	scas   al,BYTE PTR es:[edi]
  407622:	adc    ch,BYTE PTR [edx+eax*2]
  407625:	stos   BYTE PTR es:[edi],al
  407626:	cs add al,0xf8
  407629:	lods   al,BYTE PTR ds:[esi]
  40762a:	rep stos DWORD PTR es:[edi],eax
  40762c:	push   es
  40762d:	push   cs
  40762e:	mov    eax,0x7af8e895
  407633:	xchg   esi,eax
  407634:	loopne 0x407668
  407636:	pop    ds
  407637:	lods   al,BYTE PTR ds:[esi]
  407638:	ds push cs
  40763a:	mov    al,ds:0x19e62795
  40763f:	cld    
	...
  40764c:	enter  0xe3b6,0x94
  407650:	dec    edx
  407651:	push   edi
  407652:	aas    
  407653:	xchg   ebp,eax
  407654:	inc    edx
  407655:	pop    ebx
  407656:	sub    BYTE PTR [edi],0xf
  407659:	ds jmp 0x4075f0
  40765c:	and    dl,BYTE PTR [edi+0x1f]
  40765f:	xchg   ebp,eax
  407660:	sub    bl,BYTE PTR [ebx-0x79]
  407663:	xor    BYTE PTR [edx+0x35ac6032],bl
  407669:	sbb    bl,BYTE PTR [eax-0x6b]
  40766c:	jp     0x407656
  40766e:	sub    al,0x96
  407670:	xor    BYTE PTR [edx],0xbf
  407673:	xchg   esp,eax
  407674:	inc    edx
  407675:	out    dx,eax
  407676:	inc    eax
  407677:	xchg   ebp,eax
  407678:	jo     0x4076b5
  40767a:	mov    edx,eax
  40767c:	mul    DWORD PTR [edx+0x6a]
  40767f:	(bad)  
  407680:	lock out 0x3d,eax
  407683:	xchg   esi,eax
  407684:	pop    eax
  407685:	xor    ah,BYTE PTR [eax]
  407687:	dec    edi
  407688:	xchg   ebx,eax
  407689:	xor    DWORD PTR [eax],ebx
  40768b:	xchg   ebp,eax
  40768c:	pop    edi
  40768d:	add    al,0x2d
  40768f:	add    al,0xf7
  407691:	xor    DWORD PTR [edx+0x5c],edx
  407694:	cmp    DWORD PTR [edx],esi
  407696:	add    BYTE PTR [ebp+eax*1+0x3e94f81a],ch
  40769d:	and    eax,0x97f4dd06
  4076a2:	(bad)  
  4076a3:	std    
  4076a4:	into   
  4076a5:	(bad)  
  4076a6:	stc    
  4076a7:	pop    esp
  4076a8:	pop    es
  4076a9:	xor    DWORD PTR [ebx-0x7],esi
  4076ac:	arpl   WORD PTR [eax+0xd60a],di
	...
  4076ba:	add    BYTE PTR [eax],al
  4076bc:	icebp  
  4076bd:	pop    edx
  4076be:	out    dx,al
  4076bf:	push   cs
  4076c0:	popa   
  4076c1:	xor    bh,cl
  4076c3:	mov    al,0xb6
  4076c5:	push   edx
  4076c6:	push   es
  4076c7:	adc    al,0x7e
  4076c9:	ds stc 
  4076cb:	cmp    al,0xef
  4076cd:	cmp    al,BYTE PTR [edi-0x6e]
  4076d0:	xor    DWORD PTR [ecx],0xd
  4076d3:	test   eax,0x14f95100
  4076d8:	ret    
  4076d9:	mov    eax,ds:0x317ea6ee
  4076de:	stc    
  4076df:	cmp    DWORD PTR [edx-0x49],esp
  4076e2:	push   ds
  4076e3:	xchg   BYTE PTR [ecx],al
  4076e5:	push   edi
  4076e6:	push   esi
  4076e7:	jle    0x4076e2
  4076e9:	pop    edx
  4076ea:	out    dx,al
  4076eb:	aaa    
  4076ec:	mov    esi,DWORD PTR [ecx]
  4076ee:	stc    
  4076ef:	sbb    DWORD PTR [ebx+0x18],0x24bd66f9
  4076f6:	adc    ch,cl
  4076f8:	(bad)  
  4076fa:	jmp    0xf9976855
  4076ff:	aam    0x84
  407701:	xor    BYTE PTR [ebx-0xb],dh
  407704:	push   ds
  407705:	dec    ebp
  407706:	stc    
  407707:	mov    ah,0xfc
  407709:	cmp    bh,BYTE PTR [edi-0x6ce74ca]
  40770f:	mov    ah,0x48
  407711:	xor    BYTE PTR [ebx-0x7],dh
  407714:	imul   esi,DWORD PTR [edi+0x3057930a],0x73
  40771b:	loope  0x4076a9
  40771d:	or     cl,bh
  40771f:	push   cs
	...
  40772c:	arpl   WORD PTR [ecx],si
  40772e:	jae    0x407730
  407730:	push   edx
  407731:	(bad)  
  407732:	jb     0x407744
  407734:	sub    DWORD PTR [edi+0xa],ebx
  407737:	push   0x4a
  407739:	(bad)  
  40773a:	jb     0x407744
  40773c:	div    BYTE PTR [edx-0x10e60007]
  407742:	ret    
  407743:	adc    BYTE PTR [esi],bl
  407745:	push   0xffffff8d
  407747:	in     al,dx
  407748:	lea    ebx,[edx]
  40774a:	not    BYTE PTR [ebx-0x40]
  40774d:	ins    DWORD PTR es:[edi],dx
  40774e:	sub    eax,0xa9a65db
  407753:	(bad)  
  407754:	out    dx,al
  407755:	in     eax,0x42
  407757:	clc    
  407758:	test   eax,0x138f0e4a
  40775d:	rol    eax,cl
  40775f:	inc    ebp
  407760:	jb     0x4077c9
  407762:	push   es
  407763:	add    dh,bl
  407765:	jmp    0xa65632a4
  40776a:	push   es
  40776b:	add    dl,ah
  40776d:	jb     0x4076f4
  40776f:	jge    0x407717
  407771:	fs jb  0x4077ca
  407774:	sbb    ebx,DWORD PTR [edx+0x65f450f6]
  40777a:	ins    BYTE PTR es:[edi],dx
  40777b:	add    ah,dh
  40777d:	test   WORD PTR [ebp-0x72],di
  407781:	fs jb  0x407789
  407784:	sub    DWORD PTR [edx+0x16],ecx
  407787:	jmp    0x407715
  407789:	dec    esi
  40778a:	push   es
  40778b:	push   0xffffff8e
  40778d:	jecxz  0x4077d1
  40778f:	clc    
	...
  40779c:	mov    ss,ebp
  40779e:	adc    bh,BYTE PTR [ebx+0xb06a7a5]
  4077a4:	push   cs
  4077a5:	dec    ebx
  4077a6:	sub    DWORD PTR [ebx+0x7405d88b],eax
  4077ac:	daa    
  4077ad:	mov    cl,0x43
  4077af:	or     al,0xc5
  4077b1:	mov    eax,ds:0x41f73bf6
  4077b6:	sbb    al,0x17
  4077b8:	mov    ah,0x5d
  4077ba:	jns    0x407831
  4077bc:	sub    esi,DWORD PTR [ebp-0x83f7e9]
  4077c2:	xchg   esp,eax
  4077c3:	jecxz  0x4077ba
  4077c5:	sub    al,0x61
  4077c7:	mov    esi,DWORD PTR [edx+0x775940d]
  4077cd:	mov    ecx,0x1582ff05
  4077d2:	popf   
  4077d3:	out    0x37,al
  4077d5:	cmp    al,BYTE PTR ds:0x3481348b
  4077db:	pop    ebx
  4077dc:	mov    esi,0x43fff8fb
  4077e1:	mov    ch,0x99
  4077e3:	cmp    DWORD PTR [ebx+0x40562ff5],0xffffffa2
  4077ea:	cmp    al,0x50
  4077ec:	cmp    bl,BYTE PTR ss:[ebp+0x539b66c]
  4077f3:	mov    ebx,DWORD PTR [edi-0x803b200]
  4077f9:	cmp    DWORD PTR ds:0x10f9fc00,eax
  4077ff:	add    BYTE PTR ds:[eax],al
	...
  40780a:	add    BYTE PTR [eax],al
  40780c:	pop    ds
  40780d:	jl     0x407841
  40780f:	inc    ecx
  407810:	test   DWORD PTR [edx+ebx*4-0xc],0xb0539b7
  407818:	mov    bh,0xd
  40781a:	in     al,0x8a
  40781c:	xchg   DWORD PTR [ecx],edx
  40781e:	and    BYTE PTR [eax+0x36],dl
  407821:	cmp    dh,BYTE PTR [eax]
  407823:	call   0x45f1bc
  407828:	cld    
  407829:	jns    0x40783c
  40782b:	push   ds
  40782c:	jl     0x4077cf
  40782e:	xchg   BYTE PTR [ebp+0x63],al
  407831:	leave  
  407832:	pushf  
  407833:	in     al,dx
  407834:	aaa    
  407835:	cmp    DWORD PTR ds:0x38625050,eax
  40783b:	xchg   dl,cl
  40783d:	cs out dx,eax
  40783f:	pop    ss
  407840:	in     eax,dx
  407841:	jmp    0x31a8:0x62f703ed
  407848:	int3   
  407849:	sbb    DWORD PTR [ebx+ecx*2],ebp
  40784c:	mul    DWORD PTR [edx-0x11]
  40784f:	add    eax,eax
  407851:	nop
  407852:	xchg   esp,eax
  407853:	mov    esp,0x9f649534
  407858:	je     0x407880
  40785a:	fild   WORD PTR [ebp+0x4334b7ca]
  407860:	mul    DWORD PTR [edx+0x5b]
  407863:	div    BYTE PTR [ebp+0x6d]
  407866:	push   esp
  407867:	cmp    eax,0x17ef6336
  40786c:	(bad)  
  40786d:	loope  0x407868
  40786f:	adc    BYTE PTR [eax],al
	...
  407879:	add    BYTE PTR [eax],al
  40787b:	add    BYTE PTR [esp+eiz*4],ch
  40787e:	out    dx,eax
  40787f:	add    esp,DWORD PTR [edx+0x66]
  407882:	ja     0x407887
  407884:	mul    DWORD PTR [edx-0x11]
  407887:	mov    edx,0x8e21e0b4
  40788c:	mov    ecx,0x37c9ef63
  407891:	fs out dx,eax
  407893:	leave  
  407894:	aaa    
  407895:	popa   
  407896:	out    dx,eax
  407897:	leave  
  407898:	aaa    
  407899:	(bad)  
  40789a:	out    dx,eax
  40789b:	leave  
  40789c:	aaa    
  40789d:	addr16 out dx,eax
  40789f:	leave  
  4078a0:	aaa    
  4078a1:	push   0x373a7ee2
  4078a6:	mov    edi,0xefb8f71d
  4078ab:	sbb    eax,0x1defb8f7
  4078b0:	idiv   DWORD PTR [eax+0x61171bef]
  4078b6:	out    dx,eax
  4078b7:	add    ebx,ebp
  4078b9:	adc    ch,0x5
  4078bc:	jb     0x407866
  4078be:	push   es
  4078bf:	xor    esp,DWORD PTR [ebx]
  4078c1:	adc    esi,DWORD PTR cs:[esi-0xdf95bed]
  4078c8:	xor    al,0xb8
  4078ca:	add    al,0x30
  4078cc:	cmp    ah,BYTE PTR [esi]
  4078ce:	inc    ebx
  4078cf:	sbb    ebx,esi
  4078d1:	bound  eax,QWORD PTR [esi]
  4078d3:	jmp    0x9a372089
  4078d8:	xchg   DWORD PTR [eax+0x2df493f2],edi
  4078de:	adc    esi,DWORD PTR [edx+0x0]
	...
  4078e9:	add    BYTE PTR [eax],al
  4078eb:	add    bl,bl
  4078ed:	mov    ds:0xb834e206,eax
  4078f2:	add    DWORD PTR [esi-0x16f9cd4f],ebp
  4078f8:	hlt    
  4078f9:	(bad)  
  4078fa:	stc    
  4078fb:	pop    esp
  4078fc:	pop    edi
  4078fd:	adc    ecx,DWORD PTR cs:[esi+0x32]
  407901:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407902:	push   es
  407903:	jb     0x407936
  407905:	xor    ecx,edi
  407907:	stos   BYTE PTR es:[edi],al
  407908:	sub    edx,ebx
  40790a:	jmp    0x8b1b2979
  40790f:	and    al,0x53
  407911:	xchg   ebx,eax
  407912:	outs   dx,BYTE PTR ds:[esi]
  407913:	repz add al,0xa4
  407916:	push   es
  407917:	xchg   ecx,eax
  407918:	icebp  
  407919:	inc    eax
  40791a:	stc    
  40791b:	xchg   esi,eax
  40791c:	add    al,0x5a
  40791e:	(bad)  
  40791f:	adc    eax,0x717ae1fd
  407924:	mov    al,ds:0x396c6db4
  407929:	xor    edx,DWORD PTR [esi-0x7f]
  40792c:	pop    ecx
  40792d:	and    al,BYTE PTR [esi]
  40792f:	jmp    0xc7be9bad
  407934:	div    esp
  407936:	inc    edx
  407937:	pop    esi
  407938:	les    ebx,FWORD PTR [ebp-0x50]
  40793b:	lods   al,BYTE PTR ds:[esi]
  40793c:	xchg   dx,ax
  40793e:	or     DWORD PTR [edi+0x562fb9],edx
  407944:	popa   
  407945:	mov    eax,DWORD PTR [ebx-0x4]
  407948:	jle    0x4079ac
  40794a:	mov    al,0x45
  40794c:	and    eax,0xb60972
	...
  407959:	add    BYTE PTR [eax],al
  40795b:	add    BYTE PTR [ebx-0x57f0aa21],bl
  407961:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407962:	call   DWORD PTR [eax+0x51]
  407965:	mov    eax,DWORD PTR [ebx-0x8]
  407968:	jle    0x4079cc
  40796a:	mov    cl,0x45
  40796c:	or     BYTE PTR [edx+0x9],dh
  40796f:	mov    bh,0x5b
  407971:	aad    0x55
  407973:	jmp    FWORD PTR [ebx+0x7e0f6dd1]
  407979:	mov    al,ds:0xad5b8d06
  40797e:	push   esi
  40797f:	call   0x469ff4
  407984:	lea    ebx,[edx]
  407986:	xor    cl,BYTE PTR [ebp-0x17aa1d35]
  40798c:	adc    BYTE PTR [esi+eax*1+0x42e20e00],bl
  407993:	mov    esi,?
  407995:	dec    esi
  407996:	or     al,0x50
  407998:	packuswb mm5,mm6
  40799b:	in     eax,dx
  40799c:	mov    esi,0xfae8f8dc
  4079a1:	jmp    0x8b53:0x2087fff8
  4079a8:	jb     0x407990
  4079aa:	shr    DWORD PTR [ecx+eax*4],0xdc
  4079ae:	clc    
  4079af:	push   ebx
  4079b0:	or     DWORD PTR [ecx+0x6],ecx
  4079b3:	push   0xffffff8e
  4079b5:	fnsave [edx+0x8]
  4079b8:	jbe    0x40799a
  4079ba:	(bad)  
  4079bb:	jmp    DWORD PTR [ecx]
  4079bd:	scas   al,BYTE PTR es:[edi]
  4079be:	inc    ebx
  4079bf:	cld    
	...
  4079cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4079cd:	addr16 push es
  4079cf:	out    dx,eax
  4079d0:	pusha  
  4079d1:	fdiv   QWORD PTR [edx+0x8]
  4079d4:	mul    DWORD PTR [ecx-0x628f2f5a]
  4079da:	sbb    bl,BYTE PTR [edi+esi*8+0x7a8d0539]
  4079e1:	sbb    cl,BYTE PTR [eax-0x6335a701]
  4079e7:	pop    eax
  4079e8:	sub    edi,DWORD PTR [ebp-0x77]
  4079eb:	(bad)  
  4079ec:	jb     0x4079c8
  4079ee:	xchg   edi,edi
  4079f0:	inc    eax
  4079f1:	scas   al,BYTE PTR es:[edi]
  4079f2:	add    al,BYTE PTR [eax]
  4079f4:	test   esi,0x5d30608f
  4079fa:	mov    DWORD PTR [eax+0x1f],edx
  4079fd:	sahf   
  4079fe:	dec    ecx
  4079ff:	add    bh,dh
  407a01:	adc    BYTE PTR [edx+0x57c7452b],bh
  407a07:	je     0x407a19
  407a09:	cmp    eax,0xb9e4eb88
  407a0e:	enter  0x8bff,0x46
  407a12:	dec    edi
  407a13:	add    edi,esi
  407a15:	cmp    DWORD PTR ds:0x595c50b,eax
  407a1b:	(bad)  
  407a1c:	lock cmp DWORD PTR [eax+0x41],eax
  407a20:	jbe    0x407a44
  407a22:	test   DWORD PTR [eax],eax
  407a24:	idiv   DWORD PTR [ecx]
  407a26:	pop    ss
  407a27:	in     eax,0xfc
  407a29:	stc    
  407a2a:	adc    BYTE PTR [esi],dl
  407a2c:	pop    edi
  407a2d:	out    0x4,al
	...
  407a3b:	add    bh,dh
  407a3d:	mov    esi,0xd4b8608e
  407a42:	xchg   DWORD PTR [eax-0x50],edx
  407a45:	push   esi
  407a46:	cli    
  407a47:	out    0x6b,eax
  407a49:	leave  
  407a4a:	xchg   edi,edi
  407a4c:	mov    WORD PTR ds:0x3a0d001f,?
  407a52:	mov    BYTE PTR [ebp-0x1],dh
  407a55:	loope  0x407ab1
  407a57:	ror    BYTE PTR [eax-0x4d649f9e],1
  407a5d:	sub    eax,0x2c278e58
  407a62:	(bad)  
  407a64:	pop    eax
  407a65:	mov    eax,0xba688e3f
  407a6a:	out    dx,eax
  407a6b:	pop    es
  407a6c:	mul    DWORD PTR [edx+0x57]
  407a6f:	lds    eax,FWORD PTR [ebx+ebp*1+0x30]
  407a73:	jl     0x407aef
  407a75:	mov    gs,WORD PTR [eax]
  407a77:	mov    cs,WORD PTR [eax-0x46]
  407a7a:	and    BYTE PTR [edx],al
  407a7c:	mul    DWORD PTR [edx+0x18]
  407a7f:	pop    eax
  407a80:	fwait
  407a81:	sub    edx,DWORD PTR [eax]
  407a83:	mov    ds,WORD PTR [edi-0x8fc00a0]
  407a89:	mov    edx,0x62f707ef
  407a8e:	pop    ss
  407a8f:	call   0x342fdced
  407a94:	adc    ch,dh
  407a96:	mov    cl,BYTE PTR [esi+0x17e02b08]
  407a9c:	out    dx,eax
  407a9d:	cmp    al,BYTE PTR [eax-0x4c]
	...
  407aac:	clc    
  407aad:	sub    al,BYTE PTR [edi-0x73]
  407ab0:	hlt    
  407ab1:	(bad)  
  407ab2:	out    dx,eax
  407ab3:	mov    WORD PTR [edx-0x1f723f79],fs
  407ab9:	mov    ebx,0x2ad8f3ee
  407abe:	inc    edi
  407abf:	add    al,0xfb
  407ac1:	(bad)  
  407ac2:	out    dx,eax
  407ac3:	fwait
  407ac4:	retf   
  407ac5:	jmp    0x2a677eb8
  407aca:	push   edx
  407acb:	xor    BYTE PTR [eax+0x2a8d902a],bh
  407ad1:	pop    ebx
  407ad2:	xchg   esi,ecx
  407ad4:	mov    eax,0xba9c802a
  407ad9:	sub    BYTE PTR [eax-0x73],bh
  407adc:	inc    edi
  407add:	sub    al,BYTE PTR [esi]
  407adf:	cld    
  407ae0:	mov    WORD PTR [edx-0x4],es
  407ae3:	sahf   
  407ae4:	jp     0x407b10
  407ae6:	out    dx,al
  407ae7:	mov    eax,0x6cf92a72
  407aec:	jo     0x407a79
  407aee:	stc    
  407aef:	push   esi
  407af0:	adc    BYTE PTR [ebx-0x5bdb1c92],0x6
  407af7:	push   ecx
  407af8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407af9:	inc    ebx
  407afa:	stc    
  407afb:	ds (bad) 
  407afe:	push   ecx
  407aff:	sub    BYTE PTR ss:[edx],0x85
  407b03:	ins    BYTE PTR es:[edi],dx
  407b04:	cvtpi2ps xmm7,mm1
  407b07:	es sti 
  407b09:	scas   al,BYTE PTR es:[edi]
  407b0a:	inc    ebx
  407b0b:	push   0xffffffa8
  407b0d:	mov    bh,cl
  407b0f:	push   ss
	...
  407b1c:	or     BYTE PTR [edi+0x74],0xcd
  407b20:	ja     0x407b02
  407b22:	pop    ebp
  407b23:	push   es
  407b24:	jb     0x407b50
  407b26:	add    bh,dh
  407b28:	ror    DWORD PTR [edx+0x2a83f6f9],0x73
  407b2f:	loope  0x407b9d
  407b31:	repnz enter 0x73e6,0xe6
  407b36:	stos   BYTE PTR es:[edi],al
  407b37:	inc    ecx
  407b38:	push   0x2a
  407b3a:	stc    
  407b3b:	in     eax,dx
  407b3c:	push   cs
  407b3d:	sub    bh,cl
  407b3f:	push   esp
  407b40:	jmp    0x407b83
  407b42:	mov    al,ds:0xf92973b6
  407b47:	je     0x407b55
  407b49:	sub    bh,cl
  407b4b:	mov    dh,0x83
  407b4d:	out    dx,eax
  407b4e:	push   ecx
  407b4f:	scas   al,BYTE PTR es:[edi]
  407b50:	jnp    0x407b7b
  407b52:	stc    
  407b53:	sbb    al,0xc3
  407b55:	inc    ecx
  407b56:	mov    eax,ds:0xed296bae
  407b5b:	in     eax,0xe
  407b5d:	arpl   WORD PTR [ecx+ebp*8+0x7b],bp
  407b61:	scas   eax,DWORD PTR es:[edi]
  407b62:	push   cs
  407b63:	add    BYTE PTR [esi+0x19ffc99b],al
  407b69:	xlat   BYTE PTR ds:[ebx]
  407b6a:	mov    dl,0x54
  407b6c:	or     edi,edx
  407b6e:	clc    
  407b6f:	call   0x396eca
  407b74:	sbb    DWORD PTR [ecx-0x28e600a6],edx
  407b7a:	in     eax,dx
  407b7b:	mov    ebp,0x2bf8d72c
	...
  407b8c:	and    eax,0x8f50504e
  407b91:	gs out dx,al
  407b93:	cmp    ebx,eax
  407b95:	gs push es
  407b97:	mov    ebx,esp
  407b99:	or     eax,edi
  407b9b:	call   FWORD PTR [ecx]
  407b9d:	jecxz  0x407b59
  407b9f:	sub    al,0x19
  407ba1:	xlat   BYTE PTR ds:[ebx]
  407ba2:	clc    
  407ba3:	add    BYTE PTR [edx+0x37],ah
  407ba6:	popa   
  407ba7:	inc    edx
  407ba8:	outs   dx,BYTE PTR ds:[esi]
  407ba9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407baa:	push   es
  407bab:	inc    ebx
  407bad:	or     eax,edi
  407baf:	(bad)  
  407bb0:	stc    
  407bb1:	int    0xb9
  407bb3:	mov    ebp,0xc00d650e
  407bb8:	xchg   edx,eax
  407bb9:	sub    ecx,DWORD PTR [edx-0x729b16b]
  407bbf:	(bad)  
  407bc0:	mov    esp,0x543d5dd
  407bc5:	clc    
  407bc6:	jb     0x407bd4
  407bc8:	pop    ebx
  407bc9:	loop   0x407c00
  407bcb:	(bad)  
  407bcc:	mov    ecx,0xbee855dc
  407bd1:	call   0x858a:0x43440006
  407bd8:	into   
  407bd9:	(bad)  
  407bdb:	(bad)  
  407bdc:	out    dx,al
  407bdd:	(bad)  [edx+0x8]
  407be0:	imul   cx,cx,0x59ff
  407be5:	fdiv   QWORD PTR [edx-0x4]
  407be8:	not    eax
  407bea:	push   ss
  407beb:	or     BYTE PTR [edi+0xffbcf0],bl
	...
  407bf9:	add    BYTE PTR [eax],al
  407bfb:	add    BYTE PTR [eax-0x4a36d67f],ah
  407c01:	ds add eax,0x82de7c55
  407c07:	les    ebx,FWORD PTR [edi+0x72ff8db1]
  407c0d:	test   DWORD PTR [eax-0xef087b0],0x3a9b2afe
  407c17:	inc    ecx
  407c18:	mul    DWORD PTR [ecx+0x39f7be1b]
  407c1e:	clc    
  407c1f:	mov    edi,0xa5bee8
  407c24:	idiv   DWORD PTR [ecx]
  407c26:	les    eax,FWORD PTR [ebp+0x4f]
  407c29:	cmp    al,BYTE PTR ds:0x4778f700
  407c2f:	hlt    
  407c30:	cmp    BYTE PTR [ecx+0x5],al
  407c33:	add    BYTE PTR [ebp+0x7a001b39],bl
  407c39:	mov    edi,0x6120f79e
  407c3e:	xor    ch,BYTE PTR [edx-0x9]
  407c41:	mov    dh,0x47
  407c43:	hlt    
  407c44:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407c45:	mov    esi,0x3900f487
  407c4a:	mov    WORD PTR [eax+0x0],ss
  407c4d:	xchg   DWORD PTR [edx-0x62fa7d01],ecx
  407c53:	push   esp
  407c54:	mov    cl,0x39
  407c56:	add    eax,0x78db70b
  407c5b:	jmp    0x45b5fa
	...
  407c6c:	je     0x407c14
  407c6e:	xchg   ecx,eax
  407c6f:	not    eax
  407c71:	lock add DWORD PTR [ecx+edi*8-0x44],esi
  407c76:	dec    esi
  407c77:	in     al,dx
  407c78:	enter  0xa062,0x8a
  407c7c:	lock scas al,BYTE PTR es:[edi]
  407c7e:	loop   0x407c0a
  407c80:	cmp    ch,BYTE PTR [ebx]
  407c82:	test   BYTE PTR [ecx+0x1f],dl
  407c85:	mov    bl,0x3e
  407c87:	inc    ebp
  407c88:	not    ebp
  407c8a:	imul   ecx,DWORD PTR [edi+0x337827a0],0x331a19f
  407c94:	neg    DWORD PTR [ebx-0x51]
  407c97:	clts   
  407c99:	(bad)  
  407c9a:	imul   ebx,DWORD PTR [ebx+0x33582780],0x925add82
  407ca4:	push   0xea8abf27
  407ca9:	push   esi
  407caa:	inc    eax
  407cab:	rcl    BYTE PTR [edi-0x66],1
  407cae:	scas   al,BYTE PTR es:[edi]
  407caf:	add    ebx,DWORD PTR [edi+0x1d]
  407cb2:	sbb    ecx,DWORD PTR [edx+0xf2f5b48]
  407cb8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407cb9:	fldcw  WORD PTR [ecx-0x6d]
  407cbc:	inc    eax
  407cbd:	daa    
  407cbe:	sbb    BYTE PTR [ebx],bl
  407cc0:	mul    BYTE PTR [edx+0x0]
  407cc3:	dec    ecx
  407cc4:	sub    BYTE PTR [ebp+0x18b89be7],ch
  407cca:	add    BYTE PTR [edx-0x6df51a8c],cl
	...
  407cdc:	adc    BYTE PTR [edi],ah
  407cde:	out    dx,al
  407cdf:	adc    bl,bh
  407ce1:	mov    esp,0x5a8a8aef
  407ce6:	xlat   BYTE PTR ds:[ebx]
  407ce7:	shr    BYTE PTR [edx],1
  407ce9:	daa    
  407cea:	fcomp  DWORD PTR [ebp-0x77114703]
  407cf0:	bound  ebx,QWORD PTR [ebx-0x39]
  407cf3:	fdiv   QWORD PTR [edx-0x5d763fda]
  407cf9:	cmp    esi,DWORD PTR [eax+0x626d089]
  407cff:	jl     0x407d64
  407d01:	cs stc 
  407d03:	scas   al,BYTE PTR es:[edi]
  407d04:	outs   dx,BYTE PTR ds:[esi]
  407d05:	mov    al,0xe
  407d07:	xchg   ecx,eax
  407d08:	stc    
  407d09:	adc    al,0xf9
  407d0b:	sahf   
  407d0c:	jle    0x407cfe
  407d0e:	cmc    
  407d0f:	sahf   
  407d10:	jle    0x407d38
  407d12:	out    dx,al
  407d13:	xor    DWORD PTR [esi+eiz*1-0x7],esp
  407d17:	xchg   al,bl
  407d19:	sub    ch,bh
  407d1b:	sar    DWORD PTR [edi+0x26],1
  407d1e:	stc    
  407d1f:	jbe    0x407d19
  407d21:	es out dx,al
  407d23:	cmc    
  407d24:	cmp    DWORD PTR [ebx+0x6],esp
  407d27:	xor    BYTE PTR [ecx-0xc4bf9a5],dh
  407d2d:	xchg   DWORD PTR ss:0x4ef92e97,ebp
  407d34:	call   0x6fda77d8
  407d39:	mov    al,0xa
  407d3b:	ds inc eax
  407d3d:	inc    ebx
  407d3e:	dec    esi
  407d3f:	test   al,0x0
	...
  407d49:	add    BYTE PTR [eax],al
  407d4b:	add    ah,dh
  407d4d:	cmp    bl,BYTE PTR [ebp+0x6c]
  407d50:	sti    
  407d51:	bound  ecx,QWORD PTR ds:0x54df3e29
  407d57:	call   0xad01e050
  407d5c:	jl     0x407dc1
  407d5e:	push   es
  407d5f:	jmp    0xfd839b58
  407d64:	outs   dx,DWORD PTR ds:[esi]
  407d65:	pop    esi
  407d66:	push   es
  407d67:	jmp    0xe9ace05e
  407d6c:	jmp    0xf29f:0x89e96c62
  407d73:	cmp    DWORD PTR [eax+0x7fd6f1df],eax
  407d79:	and    eax,0x2af9d656
  407d7e:	stc    
  407d7f:	push   esp
  407d80:	outs   dx,DWORD PTR ds:[esi]
  407d81:	cmp    ch,BYTE PTR [ebx]
  407d83:	add    BYTE PTR [ebx+0x61],dh
  407d86:	push   es
  407d87:	or     ebx,DWORD PTR [esi-0x5716fcab]
  407d8d:	pusha  
  407d8e:	push   es
  407d8f:	add    BYTE PTR [esi],dh
  407d91:	sahf   
  407d92:	dec    esi
  407d93:	inc    ecx
  407d94:	into   
  407d95:	fidiv  DWORD PTR [edx+0xc]
  407d98:	xchg   BYTE PTR [ebx-0x2e],bl
  407d9b:	inc    DWORD PTR [ecx+0x43d08d71]
  407da1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407da2:	repnz div DWORD PTR [ecx-0x26]
  407da6:	push   ebp
  407da7:	push   edx
  407da8:	dec    bx
  407daa:	sar    bh,cl
  407dac:	add    DWORD PTR [ecx+0xf083],ebp
	...
  407dba:	add    BYTE PTR [eax],al
  407dbc:	or     ebx,ebx
  407dbe:	clc    
  407dbf:	call   0x396f8e
  407dc4:	inc    esp
  407dc5:	popa   
  407dc6:	outs   dx,BYTE PTR ds:[esi]
  407dc7:	pop    ecx
  407dc8:	scas   eax,DWORD PTR es:[edi]
  407dc9:	mov    al,ds:0xd18bff06
  407dce:	lock push DWORD PTR [ecx-0x791ecd26]
  407dd5:	mov    al,ds:0xef1ae806
  407dda:	clc    
  407ddb:	call   edi
  407ddd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407dde:	loop   0x407dd7
  407de0:	adc    ebx,ebx
  407de2:	imul   eax,DWORD PTR [eax],0xffffff86
  407de5:	jg     0x407e3e
  407de7:	inc    ecx
  407de8:	push   ds
  407de9:	fidiv  DWORD PTR [edx-0x724f610]
  407def:	call   FWORD PTR [ebx+0x0]
  407df2:	dec    esi
  407df3:	inc    ecx
  407df4:	push   ds
  407df5:	leave  
  407df6:	lahf   
  407df7:	rol    DWORD PTR [ecx],cl
  407df9:	fisttp QWORD PTR [esi-0x72afd7b]
  407dff:	jmp    DWORD PTR [esi+ebx*2-0x61d09492]
  407e06:	push   es
  407e07:	push   edi
  407e09:	(bad)  
  407e0a:	xchg   ecx,eax
  407e0b:	mul    eax
  407e0d:	adc    eax,0x72d63581
  407e12:	inc    ebx
  407e13:	add    bh,bl
  407e15:	mov    dl,0xb5
  407e17:	dec    eax
  407e19:	ret    
  407e1a:	xchg   eax,ebp
  407e1c:	enter  0x80f5,0x83
	...
  407e2c:	jp     0x407e04
  407e2e:	mov    bh,bh
  407e30:	mov    al,0x3a
  407e32:	or     DWORD PTR [ecx+0x74],ecx
  407e35:	(bad)  
  407e36:	sahf   
  407e37:	mul    DWORD PTR [eax+0x377401d5]
  407e3d:	mov    ecx,0xa588e84f
  407e42:	add    DWORD PTR [eax],0x1ce503
  407e48:	mul    DWORD PTR [eax+eax*2-0x62cdfd01]
  407e4f:	repz inc ebx
  407e51:	test   DWORD PTR [ecx-0x76615d01],eax
  407e57:	jmp    DWORD PTR [eax-0x6b]
  407e5a:	pop    ss
  407e5b:	or     BYTE PTR [edi-0xb],cl
  407e5e:	mov    ebp,0x576550ff
  407e63:	call   0xffc1eba8
  407e68:	retf   0x9d41
  407e6b:	cmp    DWORD PTR [edx],ebp
  407e6d:	jge    0x407df0
  407e6f:	jmp    FWORD PTR [edx+0x5e]
  407e72:	mov    edi,edi
  407e74:	sub    BYTE PTR [ebp+0x17],cl
  407e77:	or     BYTE PTR [edi],cl
  407e79:	and    DWORD PTR [esi+0x575d18ff],edi
  407e7f:	in     al,0x8
  407e81:	and    eax,0x49fae880
  407e86:	cmp    edi,0xf79e6f00
  407e8c:	clc    
  407e8d:	(bad)  
  407e8e:	loopne 0x407e2b
	...
  407e9c:	cmc    
  407e9d:	adc    bl,al
  407e9f:	xchg   al,ch
  407ea1:	in     eax,dx
  407ea2:	(bad)  
  407ea3:	mov    fs,eax
  407ea5:	and    eax,edi
  407ea7:	mov    gs,WORD PTR [eax-0x75793fdd]
  407ead:	xor    dh,BYTE PTR [eax+0x3a23c886]
  407eb3:	cld    
  407eb4:	fdivr  st,st(5)
  407eb6:	test   al,0x86
  407eb8:	mov    eax,0xa8935a23
  407ebd:	and    ebx,DWORD PTR [eax-0x6fec3665]
  407ec3:	xchg   BYTE PTR [eax+0x5b9c979d],ah
  407ec9:	and    al,0x80
  407ecb:	xchg   BYTE PTR [eax-0x72648453],dl
  407ed1:	out    0xee,eax
  407ed3:	add    ebp,DWORD PTR [esi+0x2203e720]
  407ed9:	fcom   DWORD PTR [edx-0x7e]
  407edc:	cmp    esp,DWORD PTR [esi]
  407ede:	aad    0x3
  407ee0:	frstor [ecx+0x50]
  407ee3:	adc    bh,ch
  407ee5:	cmp    bl,BYTE PTR [edi-0x49]
  407ee8:	pop    eax
  407ee9:	and    esi,DWORD PTR [esi+0x40]
  407eec:	push   ebx
  407eed:	mov    edx,0x62b633bd
  407ef2:	xor    BYTE PTR [eax],dl
  407ef4:	out    dx,eax
  407ef5:	cmp    al,bl
  407ef7:	test   DWORD PTR [eax],edi
  407ef9:	and    edx,DWORD PTR [edi-0x105e388c]
  407eff:	xchg   BYTE PTR [eax],al
	...
  407f09:	add    BYTE PTR [eax],al
  407f0b:	add    BYTE PTR [edx+0x212e075a],ah
  407f11:	and    ecx,DWORD PTR [eax]
  407f13:	sbb    esp,DWORD PTR [esi-0x6e]
  407f16:	scas   al,BYTE PTR es:[edi]
  407f17:	add    edx,DWORD PTR [eax]
  407f19:	lods   eax,DWORD PTR ds:[esi]
  407f1a:	neg    DWORD PTR [ebx-0x9f9db43]
  407f20:	jp     0x407edc
  407f22:	ficomp WORD PTR [ecx+0x5cf962b3]
  407f28:	repz or ch,BYTE PTR [ecx]
  407f2b:	fdiv   QWORD PTR [edx+0x22]
  407f2e:	outs   dx,BYTE PTR ds:[esi]
  407f2f:	jmp    0xce472359
  407f34:	call   0x784c6da3
  407f39:	and    bh,cl
  407f3b:	push   ecx
  407f3c:	lods   al,BYTE PTR ds:[esi]
  407f3d:	mov    bl,0x47
  407f3f:	jmp    0xc14f17bf
  407f44:	enter  0xf91f,0xa6
  407f48:	jp     0x407ee2
  407f4a:	cli    
  407f4b:	sahf   
  407f4c:	clc    
  407f4d:	push   0xffffffee
  407f4f:	mov    bl,0x5f
  407f51:	and    bh,cl
  407f53:	mov    al,ds:0x1c0667b5
  407f58:	push   cs
  407f59:	movd   mm5,ecx
  407f5c:	hlt    
  407f5d:	adc    DWORD PTR [eax-0x6910f8a],edi
  407f63:	hlt    
  407f64:	jl     0x407f70
  407f66:	push   esp
  407f67:	pop    esp
  407f68:	jp     0x407f8c
  407f6a:	iret   
  407f6b:	sub    ebp,DWORD PTR [ebx+0x22]
  407f6e:	push   edx
  407f6f:	bound  eax,QWORD PTR [eax]
	...
  407f79:	add    BYTE PTR [eax],al
  407f7b:	add    BYTE PTR [edi-0x1a],bh
  407f7e:	jp     0x407f5d
  407f80:	hlt    
  407f81:	jno    0x407f05
  407f83:	or     esi,esp
  407f85:	bound  eax,QWORD PTR [esi]
  407f87:	ds clc 
  407f89:	outs   dx,BYTE PTR ds:[esi]
  407f8a:	out    dx,al
  407f8b:	mov    ch,0x8e
  407f8d:	and    bh,cl
  407f8f:	loop   0x407fc5
  407f91:	cwde   
  407f92:	push   ss
  407f93:	xchg   ecx,eax
  407f94:	mov    ecx,0x73e947aa
  407f99:	cwde   
  407f9a:	or     al,BYTE PTR [ecx]
  407f9c:	sub    DWORD PTR ds:0xa79c0ef9,esi
  407fa2:	or     al,BYTE PTR [eax]
  407fa4:	data16 outs dx,BYTE PTR fs:[esi]
  407fa7:	xchg   ebp,eax
  407fa8:	outs   dx,DWORD PTR ds:[esi]
  407fa9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407faa:	push   es
  407fab:	push   0x4755ae
  407fb0:	or     DWORD PTR [ecx],esi
  407fb2:	out    0x48,al
  407fb4:	pop    ds
  407fb5:	addr16 out dx,al
  407fb7:	sbb    DWORD PTR [esi+eiz*8+0x718e0bf8],ebp
  407fbe:	sbb    BYTE PTR [eax+0x1e],dl
  407fc1:	call   0x93e68c38
  407fc6:	aam    0xff
  407fc8:	mov    DWORD PTR [ebp+0x56],edx
  407fcb:	inc    DWORD PTR [ebx]
  407fcd:	pop    ds
  407fce:	loope  0x407f61
  407fd0:	mov    esi,esp
  407fd2:	clc    
  407fd3:	call   0x39575a
  407fd8:	xchg   dh,al
  407fda:	(bad)  
  407fdb:	dec    DWORD PTR [ecx+0x68067b]
	...
  407fe9:	add    BYTE PTR [eax],al
  407feb:	add    BYTE PTR [ebx],ah
  407fed:	push   ebp
  407fee:	inc    edi
  407fef:	add    dh,ah
  407ff1:	xchg   BYTE PTR [edi+0x41],dl
  407ff4:	sahf   
  407ff5:	jge    0x407ffb
  407ff7:	add    BYTE PTR [esi+0x5fe1ede5],cl
  407ffd:	out    0xf8,al
  407fff:	or     ebx,DWORD PTR [esi]
  408001:	jb     0x40801b
  408003:	push   eax
  408004:	scas   al,BYTE PTR es:[edi]
  408005:	out    0x72,al
  408007:	or     al,0xb6
  408009:	dec    ebx
  40800a:	aam    0xff
  40800c:	test   eax,0x93ff5655
  408011:	sbb    eax,0xe70959e1
  408016:	clc    
  408017:	call   0x395796
  40801c:	mov    dh,0xbe
  40801e:	enter  0xd9ff,0x7b
  408022:	push   es
  408023:	push   0x4754a3
  408028:	mul    ebx
  40802a:	lds    edx,FWORD PTR [ecx-0x4a]
  40802d:	or     eax,DWORD PTR [edx+0x43d31635]
  408033:	add    BYTE PTR [edi],bl
  408035:	mov    bl,0xb4
  408037:	inc    DWORD PTR [eax]
  408039:	add    al,0xc5
  40803b:	je     0x408016
  40803d:	sti    
  40803e:	xor    al,0xff
  408040:	push   0x16
  408042:	ins    DWORD PTR es:[edi],dx
  408043:	and    ebp,eax
  408045:	inc    ecx
  408046:	test   DWORD PTR [eax+0x47],edx
  408049:	cmp    edi,edi
  40804b:	pop    es
  40804c:	iret   
  40804d:	push   0xffffff85
  40804f:	inc    DWORD PTR [eax]
	...
  408059:	add    BYTE PTR [eax],al
  40805b:	add    al,dl
  40805d:	xor    dh,cl
  40805f:	int    0xc8
  408061:	loope  0x4080cc
  408063:	outs   dx,BYTE PTR ds:[esi]
  408064:	mov    cl,0xd9
  408066:	test   BYTE PTR [edx-0x9],ch
  408069:	mov    eax,ds:0xa36519f
  40806e:	in     eax,dx
  40806f:	ret    0x4b46
  408072:	add    ch,BYTE PTR [eax-0xb]
  408075:	or     DWORD PTR ds:0x537a8f80,eax
  40807b:	call   DWORD PTR [eax-0x168bbaeb]
  408081:	jns    0x408055
  408083:	dec    BYTE PTR [edx]
  408085:	push   es
  408086:	ins    DWORD PTR es:[edi],dx
  408087:	jmp    0x50c61232
  40808c:	(bad)  
  40808d:	mov    bh,bh
  40808f:	pop    es
  408090:	pop    edi
  408091:	mov    dl,0x84
  408093:	jmp    DWORD PTR [eax-0x5e]
  408096:	cmp    esi,ecx
  408098:	pop    eax
  408099:	mov    cl,0x6a
  40809b:	ss inc ecx
  40809d:	test   eax,0xfac26885
  4080a2:	sar    edi,0x41
  4080a5:	fisttp WORD PTR [eax]
  4080a7:	call   0xffc5fbdb
  4080ac:	(bad)  
  4080ad:	bound  edi,QWORD PTR [edi+0x176aa282]
  4080b3:	dec    ebx
  4080b4:	and    DWORD PTR [eax],esp
  4080b6:	adc    BYTE PTR [ebp+edi*8+0x30],ch
  4080ba:	or     BYTE PTR [ebx+0x6bf39610],al
	...
  4080cc:	in     eax,0x30
  4080ce:	clc    
  4080cf:	sub    BYTE PTR [esi],0x25
  4080d2:	out    0x3,eax
  4080d4:	mov    ds:0xbb86faeb,al
  4080d9:	push   ss
  4080da:	push   ebp
  4080db:	add    al,0x5d
  4080dd:	gs fdivr st,st(0)
  4080e0:	clc    
  4080e1:	or     bl,BYTE PTR [ebx]
  4080e3:	dec    edi
  4080e4:	fcomp  DWORD PTR [edi]
  4080e6:	enterw 0x8acc,0xea
  4080eb:	add    al,0xf7
  4080ed:	(bad)  
  4080ee:	xlat   BYTE PTR ds:[ebx]
  4080ef:	or     DWORD PTR [ecx+0x328cb01f],esi
  4080f5:	sbb    eax,DWORD PTR [edi+0x8]
  4080f8:	mul    BYTE PTR [edx-0x11]
  4080fb:	and    BYTE PTR [edx],0x1b
  4080fe:	xchg   edi,eax
  4080ff:	test   BYTE PTR [esi+0x62],bl
  408102:	out    dx,eax
  408103:	push   cs
  408104:	mov    bh,0x96
  408106:	repz inc eax
  408108:	sti    
  408109:	popa   
  40810a:	out    dx,eax
  40810b:	add    eax,DWORD PTR [eax]
  40810d:	outs   dx,BYTE PTR ds:[esi]
  40810e:	js     0x408108
  408110:	mov    BYTE PTR [edi],bl
  408112:	cli    
  408113:	or     ecx,DWORD PTR [edi+0x708268ea]
  408119:	or     esi,edi
  40811b:	and    dl,0x1a
  40811e:	push   edi
  40811f:	ret    0x1f32
  408122:	push   eax
  408123:	in     eax,dx
  408124:	adc    BYTE PTR [ebx],cl
  408126:	call   DWORD PTR [ebp+0x50]
  408129:	pop    ds
  40812a:	lahf   
  40812b:	add    dl,0x6a
  40812e:	push   edi
  40812f:	icebp  
	...
  40813c:	inc    edx
  40813d:	pop    ds
  40813e:	push   es
  40813f:	ss dec edx
  408141:	jns    0x408131
  408143:	jmp    0xf339a112
  408148:	mov    ah,0x96
  40814a:	adc    dl,BYTE PTR [ecx-0x16b84e85]
  408150:	inc    esp
  408151:	pop    es
  408152:	mov    bh,BYTE PTR [eax]
  408154:	jne    0x408175
  408156:	push   esi
  408157:	push   es
  408158:	packuswb mm5,mm6
  40815b:	scas   al,BYTE PTR es:[edi]
  40815c:	jbe    0x40817d
  40815e:	stc    
  40815f:	adc    ecx,0xa
  408162:	out    0x18,eax
  408164:	jne    0x408184
  408166:	or     eax,0x6e72efa9
  40816b:	push   0x3906a3c4
  408170:	dec    ebx
  408171:	nop
  408172:	xlat   BYTE PTR ds:[ebx]
  408173:	into   
  408174:	jbe    0x408129
  408176:	stc    
  408177:	cmp    al,0xfb
  408179:	or     dh,BYTE PTR [esi]
  40817b:	mov    edi,0xd56c1e76
  408180:	dec    esp
  408181:	and    edi,edx
  408183:	scas   al,BYTE PTR es:[edi]
  408184:	jbe    0x4081f0
  408186:	(bad)  
  408187:	sbb    eax,0x38878b0f
  40818c:	mov    ah,0x1e
  40818e:	dec    ecx
  40818f:	add    ebp,0xab8ef933
  408195:	sbb    eax,0x741cf173
  40819a:	clc    
  40819b:	jle    0x408213
  40819d:	mov    DWORD PTR [esi],eax
  40819f:	add    DWORD PTR [eax],eax
	...
  4081a9:	add    BYTE PTR [eax],al
  4081ab:	add    BYTE PTR [ecx-0x4c],ch
  4081ae:	inc    edi
  4081af:	jmp    0xa8978010
  4081b4:	hlt    
  4081b5:	sbb    eax,0xa3334833
  4081ba:	push   es
  4081bb:	inc    ecx
  4081bc:	inc    edx
  4081bd:	cs stc 
  4081bf:	dec    esi
  4081c0:	sub    ebx,DWORD PTR ds:0x8a460073
  4081c6:	idiv   ebp
  4081c8:	add    esp,esp
  4081ca:	imul   eax,DWORD PTR [eax],0x36
  4081cd:	cmc    
  4081ce:	push   esi
  4081cf:	inc    ecx
  4081d0:	push   ds
  4081d1:	or     bl,BYTE PTR [ecx-0x69da0af]
  4081d7:	xor    eax,0x462eef
  4081dc:	not    BYTE PTR [edi-0x2a]
  4081df:	inc    DWORD PTR [ecx]
  4081e1:	jo     0x4081a9
  4081e3:	je     0x40820d
  4081e5:	jmp    0x1542762c
  4081ea:	cmc    
  4081eb:	(bad)  
  4081ec:	jnp    0x408257
  4081ee:	out    dx,al
  4081ef:	mov    cl,0xe3
  4081f1:	loop   0x4081eb
  4081f3:	dec    DWORD PTR [ebx-0x65]
  4081f6:	out    dx,al
  4081f7:	add    DWORD PTR [ebx-0x3195071e],edx
  4081fd:	or     DWORD PTR [edi+0x6e671f51],ecx
  408203:	ret    
  408204:	out    dx,eax
  408205:	and    ecx,edi
  408207:	dec    bl
  408209:	or     BYTE PTR [esi+0x41],0xce
  40820d:	mov    DWORD PTR [eax+edx*8],eax
	...
  40821c:	popa   
  40821d:	loop   0x408274
  40821f:	dec    DWORD PTR [ebx]
  408221:	outs   dx,DWORD PTR ds:[esi]
  408222:	out    dx,al
  408223:	mov    al,ds:0x6af8e283
  408228:	mov    cs,WORD PTR [ecx]
  40822a:	xchg   edx,eax
  40822b:	push   ecx
  40822c:	fbld   TBYTE PTR [esi+0x6e]
  40822f:	ret    
  408230:	out    dx,eax
  408231:	and    ecx,edi
  408233:	dec    BYTE PTR [ebx-0x80]
  408236:	dec    esi
  408237:	inc    ecx
  408238:	mov    cs,WORD PTR [ecx-0x1d1e301c]
  40823e:	or     al,0xc0
  408240:	dec    edx
  408241:	jnp    0x4081d2
  408243:	inc    ebp
  408244:	retf   0x72e2
  408247:	hlt    
  408248:	div    DWORD PTR [eax+esi*8+0x782b5f07]
  40824f:	dec    DWORD PTR [eax-0x5c]
  408252:	lock repz dec edi
  408255:	fwait
  408256:	dec    ecx
  408257:	(bad)  
  408258:	cmp    BYTE PTR [ecx],ah
  40825a:	add    eax,0xc3fa7d68
  40825f:	call   DWORD PTR [eax-0x8bf2b55]
  408265:	repz add al,BYTE PTR [eax]
  408268:	test   DWORD PTR [ebx+0x6c40b26d],0x9e085086
  408272:	or     eax,0x791ea7e8
  408277:	dec    DWORD PTR [ebp+0x4694ed0b]
  40827d:	retf   
  40827e:	add    al,0x68
	...
  40828c:	xchg   edi,eax
  40828d:	pop    ebx
  40828e:	ret    
  40828f:	call   FWORD PTR [eax+0x8]
  408292:	add    eax,0x95227700
  408297:	iret   
  408298:	shr    BYTE PTR ds:0x3c43c00d,1
  40829e:	mov    al,BYTE PTR [ebp-0x35]
  4082a1:	(bad)  
  4082a3:	repz mov eax,0x6e80a5f
  4082a9:	iret   
  4082aa:	js     0x4082ab
  4082ac:	test   al,0x7f
  4082ae:	jle    0x408298
  4082b0:	push   ss
  4082b1:	into   
  4082b2:	js     0x4082b3
  4082b4:	or     eax,0x2689ed0a
  4082b9:	dec    ebx
  4082ba:	add    ch,BYTE PTR [eax-0x4c]
  4082bd:	jnp    0x408282
  4082bf:	call   FWORD PTR [eax]
  4082c1:	or     BYTE PTR ds:0xe4e27700,al
  4082c7:	into   
  4082c8:	jo     0x408257
  4082ca:	sar    dh,cl
  4082cc:	loop   0x408330
  4082ce:	imul   DWORD PTR [ebx-0xa]
  4082d1:	sbb    eax,0x62cd7f58
  4082d6:	(bad)  
  4082d7:	cwde   
  4082d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4082d9:	mov    eax,ds:0xb235ebef
  4082de:	scas   al,BYTE PTR es:[edi]
  4082df:	add    ecx,edi
  4082e1:	pusha  
  4082e2:	out    dx,eax
  4082e3:	add    esi,DWORD PTR [edi+0xb]
  4082e6:	stos   DWORD PTR es:[edi],eax
  4082e7:	dec    esi
  4082e8:	xor    BYTE PTR [esp+eiz*8],bl
  4082eb:	inc    ebx
  4082ec:	mov    ds:0xc97674,eax
	...
  4082f9:	add    BYTE PTR [eax],al
  4082fb:	add    BYTE PTR [esp+ebx*1],ah
  4082fe:	xchg   edx,eax
  4082ff:	ja     0x408319
  408301:	xchg   esi,eax
  408302:	out    0x6b,eax
  408304:	xor    eax,0x87f081f
  408309:	xchg   esi,eax
  40830a:	sti    
  40830b:	imul   esp,ebp,0x2e
  40830e:	clc    
  40830f:	jle    0x408309
  408311:	xchg   ebp,eax
  408312:	repz jle 0x40837f
  408315:	imul   eax,DWORD PTR [edi],0xffffff89
  408318:	mov    esi,0xb54ce01b
  40831d:	out    dx,ax
  40831f:	fsubr  DWORD PTR [ebp+0xe]
  408322:	inc    edi
  408323:	add    al,0xf7
  408325:	or     ecx,DWORD PTR [ecx-0x3f90bd82]
  40832b:	clc    
  40832c:	clc    
  40832d:	or     bh,BYTE PTR [edx-0x59e4478c]
  408333:	inc    ecx
  408334:	jmp    DWORD PTR [edx+0x12]
  408337:	mov    ebx,DWORD PTR [ebx-0x5e48551f]
  40833d:	sbb    ebx,DWORD PTR [eax-0x6f258dba]
  408343:	jle    0x4082d5
  408345:	(bad)  
  408346:	out    dx,eax
  408347:	add    esi,edi
  408349:	out    0x29,eax
  40834b:	adc    ah,ch
  40834d:	and    dh,bl
  40834f:	or     BYTE PTR [edi+0x5a],dh
  408352:	push   es
  408353:	jmp    0x112fe9c7
  408358:	repnz bound eax,QWORD PTR [esi]
  40835b:	pop    di
  40835d:	addr16 out dx,al
  40835f:	stc    
	...
  40836c:	rcr    DWORD PTR [ebx],0xf9
  40836f:	loop   0x408325
  408371:	xchg   ebp,eax
  408372:	or     ecx,eax
  408374:	repz mov dl,0x47
  408377:	jmp    0x514b193d
  40837c:	sub    ch,BYTE PTR [ecx+edi*8]
  40837f:	ss popf 
  408381:	ins    DWORD PTR es:[edi],dx
  408382:	outs   dx,BYTE PTR ds:[esi]
  408383:	out    0x44,eax
  408385:	mov    ds:0x671f2606,al
  40838a:	out    dx,al
  40838b:	fisubr WORD PTR [ecx+0x7f60f91b]
  408391:	(bad)  
  408393:	push   cs
  408394:	mov    DWORD PTR [edx+0x62f4e838],ecx
  40839a:	mov    esp,DWORD PTR [esi+esi*4+0x1c]
  40839e:	stc    
  40839f:	test   ch,0x2
  4083a2:	mov    cl,0x22
  4083a4:	imul   ebx,DWORD PTR [edx],0x19356c8b
  4083aa:	stc    
  4083ab:	faddp  st(3),st
  4083ad:	sbb    DWORD PTR [ebx-0x6e5ae6f],esi
  4083b3:	rcr    DWORD PTR [ecx+edx*8+0x5],0xe9
  4083b8:	ins    DWORD PTR es:[edi],dx
  4083b9:	loopne 0x408374
  4083bb:	mov    edi,0xe6461a3a
  4083c0:	js     0x4083e0
  4083c2:	push   es
  4083c3:	jmp    0xabd36bbc
  4083c8:	and    DWORD PTR [edx],ebx
  4083ca:	stc    
  4083cb:	xchg   esi,eax
  4083cc:	cmc    
  4083cd:	jb     0x4083d5
  4083cf:	jmp    0x4083d4
	...
  4083dc:	hlt    
  4083dd:	mov    fs,WORD PTR [ebx+0x5c]
  4083e0:	mov    ch,0x4e
  4083e2:	push   esi
  4083e3:	add    dh,ah
  4083e5:	loop   0x40842f
  4083e7:	inc    ecx
  4083e8:	mov    cs,WORD PTR [esi+0x665eb6c0]
  4083ee:	or     eax,0xef6163c0
  4083f3:	mov    cl,0x4e
  4083f5:	pushw  es
  4083f7:	(bad)  
  4083f8:	jecxz  0x40839e
  4083fa:	clc    
  4083fb:	jmp    FWORD PTR [ecx-0x71d3bc17]
  408401:	push   cs
  408402:	sti    
  408403:	dec    edi
  408404:	(bad)  
  408405:	data16 out dx,al
  408407:	test   eax,0xb065ec0
  40840c:	ficom  WORD PTR [ecx]
  40840e:	add    ch,cl
  408410:	ret    0x65e
  408413:	add    BYTE PTR [esi+0xe414dd9],al
  408419:	xchg   edi,eax
  40841a:	jae    0x408428
  40841c:	neg    ah
  40841e:	(bad)  
  40841f:	(bad)  
  408420:	stc    
  408421:	jmp    0x983946b8
  408426:	stc    
  408427:	lea    ebx,[edx+ecx*2+0x54]
  40842b:	push   eax
  40842c:	neg    BYTE PTR [eax+0x35d9ffc8]
  408432:	clc    
  408433:	jne    0x408413
  408435:	xor    eax,0x8de675f8
  40843a:	adc    al,0xff
  40843c:	test   eax,0xf9ee96
	...
  408449:	add    BYTE PTR [eax],al
  40844b:	add    BYTE PTR [esi+edx*4-0x15d21407],dl
  408452:	inc    ebx
  408453:	sub    al,0x47
  408455:	loope  0x408408
  408457:	(bad)  
  408458:	imul   edx,DWORD PTR [esi+0x260c0f6e],0xd243fef9
  408462:	idiv   edi
  408464:	jns    0x4083f3
  408466:	push   esp
  408467:	mov    bh,0xf7
  408469:	or     eax,DWORD PTR ds:0xc06fb70b
  40846f:	addr16 inc edx
  408471:	push   ebx
  408472:	(bad)  
  408475:	push   cs
  408476:	or     eax,ebp
  408478:	jecxz  0x40843b
  40847a:	jns    0x40847b
  40847c:	push   0x60feb14e
  408481:	adc    ch,0xe7
  408484:	mov    ds:0xa7ff7a49,eax
  408489:	fild   DWORD PTR [ebp-0xef41883]
  40848f:	or     al,0xcf
  408491:	mov    cl,0xd4
  408493:	inc    eax
  408494:	idiv   ebx
  408496:	ins    BYTE PTR es:[edi],dx
  408497:	and    ch,BYTE PTR [eax+0xb]
  40849a:	add    eax,0x493f2eb
  40849f:	add    bh,dh
  4084a1:	or     ebx,edi
  4084a3:	or     dh,BYTE PTR [edi]
  4084a5:	out    dx,eax
  4084a6:	or     edx,DWORD PTR [edx+0x10]
  4084a9:	test   BYTE PTR [eax+ebp*8],0x61
  4084ad:	imul   edi,DWORD PTR [edx-0x1],0x0
	...
  4084bc:	movzx  ecx,WORD PTR [edi-0x1]
  4084c0:	clc    
  4084c1:	test   DWORD PTR [eax+0x7d11f1c2],eax
  4084c7:	push   eax
  4084c8:	call   0xe13f3e1c
  4084cd:	add    DWORD PTR [edx+0x0],ebp
  4084d0:	mov    eax,ds:0xb785050a
  4084d5:	add    DWORD PTR [esi+0x7d29c810],eax
  4084db:	dec    DWORD PTR [edx-0x47008422]
  4084e1:	xor    dh,BYTE PTR [ecx-0x4b]
  4084e4:	test   DWORD PTR [ecx],0xc86fb57c
  4084ea:	jl     0x4084eb
  4084ec:	(bad)  
  4084ed:	arpl   WORD PTR [ebx],cx
  4084ef:	dec    esi
  4084f0:	cwde   
  4084f1:	sbb    BYTE PTR [esi+0x3a630346],dh
  4084f7:	(bad)  
  4084f8:	fwait
  4084f9:	in     al,0xa2
  4084fb:	js     0x4084b5
  4084fd:	sahf   
  4084fe:	add    DWORD PTR [edi+esi*8],0x62
  408502:	out    dx,eax
  408503:	jp     0x4084ef
  408505:	xchg   WORD PTR [edi+0xf681839],sp
  40850c:	aaa    
  40850d:	pop    DWORD PTR ds:0x5816b28d
  408513:	icebp  
  408514:	add    BYTE PTR [eax],bl
  408516:	fidiv  DWORD PTR [edi+0x5f]
  408519:	cmp    ebx,DWORD PTR [edx]
  40851b:	jnp    0x40855d
  40851d:	mov    bl,0x40
  40851f:	icebp  
	...
  40852c:	cmp    al,0xb
  40852e:	dec    DWORD PTR [ebp+0x30]
  408531:	sbb    BYTE PTR [eax-0x3f],ah
  408534:	sub    al,0x8d
  408536:	out    dx,al
  408537:	jp     0x4084e3
  408539:	push   ss
  40853a:	and    cl,dh
  40853c:	lock or dl,bl
  40853f:	jns    0x408551
  408541:	sbb    BYTE PTR [eax],dl
  408543:	icebp  
  408544:	or     al,0xb
  408546:	test   DWORD PTR [ebp+0x0],0xeb463618
  40854d:	bound  edx,QWORD PTR [edx+0x2ae1e38e]
  408553:	je     0x40853e
  408555:	pop    ss
  408556:	call   0xecca6648
  40855b:	jp     0x4085bf
  40855d:	imul   edx,edi,0x32
  408560:	mov    eax,0x328cd017
  408565:	pop    ss
  408566:	inc    edi
  408567:	add    dh,dh
  408569:	(bad)  
  40856a:	out    dx,eax
  40856b:	mov    BYTE PTR [edx+0xf],dh
  40856e:	mov    ecx,0x6b2b07a
  408573:	sar    DWORD PTR [edi-0x33],0x5
  408577:	jmp    0x6d49a86d
  40857c:	push   ecx
  40857d:	bound  eax,QWORD PTR [esi]
  40857f:	jmp    0xe947e453
  408584:	hlt    
  408585:	xor    DWORD PTR [bx+di-0xc],0xf5110662
  40858d:	mov    ah,0x47
  40858f:	jmp    0x408594
	...
  40859c:	jg     0x40857b
  40859e:	lock ja 0x40858e
  4085a1:	pop    ss
  4085a2:	push   esi
  4085a3:	adc    DWORD PTR [esi+0x26],0xdd6b66f9
  4085aa:	cmc    
  4085ab:	pop    edi
  4085ac:	int    0x17
  4085ae:	stc    
  4085af:	pushf  
  4085b0:	les    ebx,FWORD PTR [eax]
  4085b2:	stc    
  4085b3:	dec    esi
  4085b4:	dec    esp
  4085b5:	arpl   WORD PTR [edi],ax
  4085b7:	jmp    0x36c36bb0
  4085bc:	scas   al,BYTE PTR es:[edi]
  4085bd:	pop    ss
  4085be:	stc    
  4085bf:	cdq    
  4085c0:	sbb    al,0xd8
  4085c2:	dec    ebp
  4085c3:	test   al,0xf4
  4085c5:	mov    bl,BYTE PTR ds:0x611733bb
  4085cb:	cmc    
  4085cc:	sub    ah,BYTE PTR [edx-0x31cefefa]
  4085d2:	add    eax,0x7222f1e9
  4085d7:	fmul   DWORD PTR [edx]
  4085d9:	pop    ss
  4085da:	mov    ah,BYTE PTR [ebp+eiz*2+0x15]
  4085de:	stc    
  4085df:	test   ch,0x15
  4085e2:	jae    0x4085c5
  4085e4:	dec    esp
  4085e5:	stc    
  4085e6:	cli    
  4085e7:	out    0x5e,al
  4085e9:	push   ss
  4085ea:	mov    bl,0xd9
  4085ec:	dec    ebp
  4085ed:	push   ss
  4085ee:	stc    
  4085ef:	inc    ecx
  4085f0:	mul    DWORD PTR [ebx+0x6]
  4085f3:	jmp    0x1316671
  4085f8:	mov    al,0x9c
  4085fa:	stc    
  4085fb:	push   eax
  4085fc:	inc    esi
  4085fd:	fmul   QWORD PTR [ebp+0x41]
	...
  40860c:	sahf   
  40860d:	or     bl,BYTE PTR [eax]
  40860f:	push   edx
  408610:	iret   
  408611:	pop    esi
  408612:	outs   dx,BYTE PTR ds:[esi]
  408613:	adc    al,0xdc
  408615:	and    ecx,edi
  408617:	out    0x86,eax
  408619:	lds    eax,FWORD PTR ds:0x72a29500
  40861f:	adc    esp,esi
  408621:	pop    esi
  408622:	mov    eax,DWORD PTR [ebp-0x66707]
  408628:	push   cs
  408629:	pushf  
  40862a:	jae    0x408634
  40862c:	jbe    0x40866a
  40862e:	cli    
  40862f:	call   ecx
  408631:	fwait
  408632:	mov    bl,0xf0
  408634:	rcr    BYTE PTR [ebx-0x56611707],1
  40863a:	stc    
  40863b:	push   DWORD PTR [edi+eax*2]
  40863e:	out    dx,al
  40863f:	xchg   ecx,eax
  408640:	jecxz  0x4085dd
  408642:	stc    
  408643:	or     ecx,DWORD PTR [esi]
  408645:	adc    ebx,DWORD PTR ds:0x4631eb68
  40864b:	add    BYTE PTR [esi-0x2e32e476],cl
  408651:	fwait
  408652:	push   esi
  408653:	push   0xe
  408655:	xor    bh,al
  408657:	jne    0x40865f
  408659:	mov    dh,BYTE PTR [edi*8+0x19ee9be1]
  408660:	xlat   BYTE PTR ds:[ebx]
  408661:	fwait
  408662:	stc    
  408663:	push   0x4631ea
  408668:	test   BYTE PTR [edi-0x7],dh
  40866b:	jne    0x408643
  40866d:	mov    DWORD PTR [esi+edi*8+0x0],ebp
	...
  40867c:	rcr    DWORD PTR [edx+0x221fe46e],1
  408682:	stc    
  408683:	imul   edi,ebp,0xf708739b
  408689:	and    ebx,DWORD PTR [edx-0x12db3f02]
  40868f:	jecxz  0x4086b7
  408691:	dec    ebx
  408692:	add    ch,BYTE PTR [edx+0x13]
  408695:	aad    0xe7
  408697:	pop    es
  408698:	lahf   
  408699:	jg     0x40871a
  40869b:	jmp    DWORD PTR [eax-0x6704183c]
  4086a1:	jbe    0x4086ad
  4086a3:	call   0xffbe44d8
  4086a8:	mov    esi,0x2bfff8c9
  4086ad:	and    DWORD PTR [ecx+0x68],0xbe6e0bf7
  4086b4:	jo     0x4086c4
  4086b6:	add    edi,edi
  4086b8:	loop   0x4086bd
  4086ba:	ins    DWORD PTR es:[edi],dx
  4086bb:	xlat   BYTE PTR ds:[ebx]
  4086bc:	push   ecx
  4086bd:	test   BYTE PTR [esi-0x37],bh
  4086c0:	xor    eax,0x7c550513
  4086c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4086c6:	add    ah,0x4f
  4086c9:	inc    esp
  4086ca:	mov    eax,0x50bf7fb
  4086cf:	add    BYTE PTR [edx-0x3a],ch
  4086d2:	jo     0x408724
  4086d4:	lahf   
  4086d5:	rol    BYTE PTR gs:[eax-0x9],1
  4086d9:	dec    esp
  4086da:	call   0x644ea6ea
  4086df:	dec    eax
	...
  4086ec:	mov    dh,0xb
  4086ee:	ins    DWORD PTR es:[edi],dx
  4086ef:	mov    edx,0xb7e743c
  4086f4:	aaa    
  4086f5:	neg    DWORD PTR [esi]
  4086f7:	mov    DWORD PTR [edx-0x8ff128d],edi
  4086fd:	ins    BYTE PTR es:[edi],dx
  4086fe:	mov    edi,0x71166aff
  408703:	jne    0x4086f4
  408705:	or     eax,0xcacf07eb
  40870a:	outs   dx,BYTE PTR ds:[esi]
  40870b:	(bad)  
  40870c:	fsub   DWORD PTR [ebx-0x20]
  40870f:	icebp  
  408710:	enter  0x6f0b,0x4c
  408714:	enter  0xa614,0x42
  408718:	out    dx,eax
  408719:	bound  esi,QWORD PTR [edx]
  40871b:	mov    ecx,ebx
  40871d:	loop   0x4086c9
  40871f:	mov    al,0xb1
  408721:	adc    al,0xb8
  408723:	aas    
  408724:	jb     0x408701
  408726:	mov    al,0x77
  408728:	mov    al,ds:0xf703ef63
  40872d:	out    0x29,eax
  40872f:	or     ah,bh
  408731:	and    dl,BYTE PTR [ebx]
  408733:	add    DWORD PTR [edi+0x5b],esi
  408736:	out    dx,eax
  408737:	lock sti 
  408739:	or     ebx,esp
  40873b:	add    al,0xf7
  40873d:	bound  eax,QWORD PTR [eax-0xdebff0f]
  408743:	pop    es
  408744:	pop    edi
  408745:	pop    es
  408746:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408747:	ja     0x4087a9
  408749:	mov    bl,0x1f
  40874b:	ja     0x40872f
  40874d:	push   0x57
  40874f:	fiadd  WORD PTR [eax]
	...
  408759:	add    BYTE PTR [eax],al
  40875b:	add    BYTE PTR [ecx+0x14],dl
  40875e:	pop    eax
  40875f:	ins    BYTE PTR es:[edi],dx
  408760:	or     DWORD PTR [ebx],ebp
  408762:	push   eax
  408763:	ja     0x408734
  408765:	popa   
  408766:	mov    edi,0xba1538c4
  40876b:	pop    es
  40876c:	pop    ds
  40876d:	xor    esi,DWORD PTR [edi+esi*2]
  408770:	sub    dl,ch
  408772:	imul   edi,DWORD PTR [ecx+eiz*1-0x2513d7ec],0x8203ef61
  40877d:	fisubr WORD PTR [esi+esi*2]
  408780:	or     BYTE PTR [edi+edi*4],dl
  408783:	imul   ebp,DWORD PTR [edi+0x6a77082a],0xffffffde
  40878a:	sub    al,0x76
  40878c:	lock adc ebx,DWORD PTR [edi+0x5daa276]
  408793:	imul   DWORD PTR [ecx+0x14]
  408796:	out    dx,al
  408797:	jae    0x40873e
  408799:	bound  eax,QWORD PTR [esi]
  40879b:	jo     0x408814
  40879d:	(bad)  
  40879e:	neg    esi
  4087a0:	inc    ecx
  4087a1:	mov    ds:0x62616d09,eax
  4087a6:	push   es
  4087a7:	jmp    0xc804751b
  4087ac:	sub    DWORD PTR [ecx+esi*8],edx
  4087af:	jmp    0x4087b5
  4087b1:	arpl   WORD PTR [esi],ax
  4087b3:	jmp    0x54cc1748
  4087b8:	ss adc eax,0xa07fa6f9
  4087be:	sub    bh,BYTE PTR [ecx]
	...
  4087cc:	fwait
  4087cd:	pop    ss
  4087ce:	dec    ecx
  4087cf:	sub    bl,bh
  4087d1:	or     dl,BYTE PTR [edi+0x5a]
  4087d4:	hlt    
  4087d5:	bound  ecx,QWORD PTR ds:0xed6167a9
  4087db:	and    edi,DWORD PTR [esi-0x13]
  4087de:	ret    
  4087df:	ja     0x4087ca
  4087e1:	adc    ecx,DWORD PTR [ebx+0x6eb30f2b]
  4087e7:	cmp    DWORD PTR [bp+si+0x5106],esp
  4087ec:	sbb    eax,edx
  4087ee:	add    eax,0x7322ede9
  4087f3:	jmp    0x4087c2
  4087f5:	mov    ds:0x14b65c8b,al
  4087fa:	stc    
  4087fb:	ds jg  0x40879e
  4087fe:	sub    ah,BYTE PTR [eax+0x77]
  408801:	into   
  408802:	imul   DWORD PTR [esi]
  408804:	mov    eax,ds:0x3bb1bb8a
  408809:	adc    edi,eax
  40880b:	xchg   esp,eax
  40880c:	lock or bh,BYTE PTR [edx]
  40880f:	and    cl,BYTE PTR [ecx+0x4854f913]
  408815:	adc    al,0xf9
  408817:	add    cl,bh
  408819:	xor    eax,0x992584e1
  40881e:	stc    
  40881f:	jmp    DWORD PTR [ebx+0x76]
  408822:	push   esi
  408823:	call   0x3a258d
  408828:	push   cs
  408829:	aaa    
  40882a:	clc    
  40882b:	jne    0x4087f3
  40882d:	jle    0x4087d6
  40882f:	inc    BYTE PTR [eax]
	...
  408839:	add    BYTE PTR [eax],al
  40883b:	add    BYTE PTR [ecx-0x6e861168],ch
  408841:	cwde   
  408842:	stc    
  408843:	lea    esp,[ebx]
  408845:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408846:	clc    
  408847:	jmp    FWORD PTR [ecx+0x37]
  40884a:	clc    
  40884b:	mov    ch,0x2a
  40884d:	cdq    
  40884e:	stc    
  40884f:	push   DWORD PTR [esi-0x61ff4b4e]
  408855:	xchg   ecx,eax
  408856:	(bad)  
  408857:	movlps QWORD PTR [ebx],xmm0
  40885a:	clc    
  40885b:	jmp    FWORD PTR [ecx-0x68]
  40885e:	mov    bl,0xbc
  408860:	push   0x96e8f998
  408865:	aad    0x5
  408867:	add    cl,ch
  408869:	sar    DWORD PTR [ebp-0x11681602],0x49
  408870:	xchg   ecx,eax
  408871:	cwde   
  408872:	stc    
  408873:	leave  
  408874:	sbb    al,0x5b
  408876:	push   es
  408877:	push   ebp
  408878:	lds    edi,FWORD PTR [edx-0x7b]
  40887b:	les    ebp,FWORD PTR [edx-0x49f38c69]
  408881:	out    0xcc,eax
  408883:	(bad)  
  408884:	mov    ecx,0x25fc42dd
  408889:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40888a:	or     DWORD PTR [edx+ebx*4+0x36000666],eax
  408891:	xor    dl,BYTE PTR [ecx+eax*2+0x1e]
  408895:	xchg   edi,eax
  408896:	jae    0x408894
  408898:	out    0xd8,al
  40889a:	retf   
  40889b:	push   edi
  40889d:	js     0x408871
  40889f:	add    BYTE PTR [bx+si],al
	...
  4088aa:	add    BYTE PTR [eax],al
  4088ac:	inc    edx
  4088ad:	int    0xc3
  4088af:	inc    DWORD PTR [eax+0x69]
  4088b2:	jmp    0x70f867be
  4088b7:	jmp    eax
  4088b9:	arpl   WORD PTR [edi],cx
  4088bb:	(bad)  
  4088bc:	fadd   DWORD PTR [eax]
  4088be:	in     eax,dx
  4088bf:	js     0x4088e5
  4088c1:	cmp    eax,DWORD PTR [edx]
  4088c3:	inc    DWORD PTR [edx+0x30]
  4088c6:	ins    DWORD PTR es:[edi],dx
  4088c7:	popf   
  4088c8:	lods   eax,DWORD PTR ds:[esi]
  4088c9:	cmp    BYTE PTR [edx+0x50],dh
  4088cc:	dec    edi
  4088cd:	not    ebp
  4088cf:	inc    eax
  4088d0:	imul   DWORD PTR [ebx+0x73]
  4088d3:	jne    0x4088d4
  4088d5:	xor    esi,esi
  4088d7:	std    
  4088d8:	mov    al,ds:0xb1ea6cd8
  4088dd:	shl    BYTE PTR [ecx+0x68],0x65
  4088e1:	dec    esp
  4088e2:	(bad)  
  4088e5:	jbe    0x408965
  4088e7:	call   0xffb24eef
  4088ec:	daa    
  4088ed:	fs test eax,0xd4fbb653
  4088f3:	(bad)  
  4088f4:	loop   0x408909
  4088f6:	ins    DWORD PTR es:[edi],dx
  4088f7:	push   edx
  4088f8:	popa   
  4088f9:	cwde   
  4088fa:	jb     0x4088e4
  4088fc:	cs leave 
  4088fe:	jno    0x4088ff
  408900:	fcomip st,st(7)
  408902:	aad    0x40
  408904:	div    DWORD PTR [eax-0x2bb00418]
  40890a:	dec    esi
  40890b:	(bad)  
  40890c:	cmp    bl,cl
  40890e:	in     al,dx
  40890f:	mov    ah,0x0
	...
  408919:	add    BYTE PTR [eax],al
  40891b:	add    ah,al
  40891d:	mov    edx,0xd6285004
  408922:	or     al,0xe8
  408924:	out    0x59,al
  408926:	jb     0x408927
  408928:	pavgw  mm7,QWORD PTR [edx]
  40892b:	call   DWORD PTR [eax]
  40892d:	bound  esp,QWORD PTR [eax]
  40892f:	out    dx,al
  408930:	or     al,0xfa
  408932:	dec    esi
  408933:	cmp    eax,0x41261100
  408938:	out    dx,eax
  408939:	bound  esi,QWORD PTR [edx+0x2ae4e388]
  40893f:	ja     0x408981
  408941:	jge    0x408932
  408943:	jmp    0xbba993c
  408948:	iret   
  408949:	and    ch,BYTE PTR [esp+esi*2]
  40894c:	rcr    dl,1
  40894e:	sub    DWORD PTR [eax+0x7c],esi
  408951:	dec    esi
  408952:	inc    edx
  408953:	mov    esp,0x336f6337
  408958:	not    DWORD PTR [esi-0x4b2523ec]
  40895e:	cs add al,0x40
  408961:	sti    
  408962:	ret    0xf7b6
  408965:	(bad)  
  408966:	in     al,0x43
  408968:	and    esi,DWORD PTR [ecx+0x10]
  40896b:	pop    esp
  40896c:	iret   
  40896d:	xor    ah,BYTE PTR [eax+0x1322fc73]
  408973:	sbb    BYTE PTR [edi],ah
  408975:	jnp    0x4089d1
  408977:	xlat   BYTE PTR ds:[ebx]
  408978:	aaa    
  408979:	arpl   WORD PTR [edi],di
  40897b:	jae    0x408967
  40897d:	pop    edx
  40897e:	xchg   edi,eax
  40897f:	pop    ebx
	...
  40898c:	push   0x10
  40898e:	js     0x4089ec
  408990:	mov    cl,0x28
  408992:	jo     0x408a07
  408994:	pop    ebx
  408995:	push   esp
  408996:	scas   eax,DWORD PTR es:[edi]
  408997:	lods   eax,DWORD PTR ds:[esi]
  408998:	push   eax
  408999:	adc    BYTE PTR [eax+0x73],ah
  40899c:	inc    ebp
  40899d:	shl    DWORD PTR [esi],0xb
  4089a0:	retf   0xc525
  4089a3:	or     eax,0x5be79638
  4089a8:	adc    DWORD PTR es:[eax+0x73],eax
  4089ac:	popf   
  4089ad:	inc    ebx
  4089ae:	cmp    cl,bh
  4089b0:	clc    
  4089b1:	cli    
  4089b2:	add    eax,0xf90fa54e
  4089b7:	ret    
  4089b8:	add    BYTE PTR [eax],dl
  4089ba:	jae    0x4089ad
  4089bc:	lods   al,BYTE PTR ds:[esi]
  4089bd:	sub    eax,0x7c841ef8
  4089c2:	and    BYTE PTR [esi],dl
  4089c4:	(bad)  
  4089c5:	addr16 out dx,al
  4089c7:	cmp    ah,BYTE PTR [ebp+0x10]
  4089ca:	stc    
  4089cb:	xchg   ecx,eax
  4089cc:	sbb    al,0xb5
  4089ce:	inc    edi
  4089cf:	jmp    0x14f2039
  4089d4:	scas   al,BYTE PTR es:[edi]
  4089d5:	push   cs
  4089d6:	stc    
  4089d7:	out    dx,al
  4089d8:	lods   al,BYTE PTR ds:[esi]
  4089d9:	test   DWORD PTR [eax+ebp*1-0xd],edx
  4089dd:	psllq  mm1,0x1c
  4089e1:	dec    ebx
  4089e2:	sti    
  4089e3:	(bad)  
  4089e4:	inc    ebp
  4089e5:	jnp    0x408981
  4089e7:	cmp    edi,DWORD PTR [edx-0x54c307f1]
  4089ed:	pop    es
  4089ee:	sub    eax,0xbc
	...
  4089fb:	add    BYTE PTR ds:0xc2a36e10,ah
  408a01:	mov    ds:0x678fae06,al
  408a06:	out    dx,al
  408a07:	pop    es
  408a08:	push   es
  408a09:	adc    cl,bh
  408a0b:	adc    ebx,edi
  408a0d:	mov    bl,0x47
  408a0f:	jmp    0x814f2019
  408a14:	or     ecx,DWORD PTR [esi]
  408a16:	stc    
  408a17:	xchg   BYTE PTR [ebp+edi*1+0x55],cl
  408a1b:	sub    bl,bh
  408a1d:	(bad)  
  408a1f:	loope  0x4089dd
  408a21:	data16 sti 
  408a23:	outs   dx,BYTE PTR ds:[esi]
  408a24:	lds    ecx,FWORD PTR [edi]
  408a26:	jae    0x408a8d
  408a28:	lds    edx,FWORD PTR [ebp+0x2407510e]
  408a2e:	stc    
  408a2f:	push   esi
  408a30:	and    eax,0xf4e5c41a
  408a35:	mov    ch,0x8d
  408a37:	add    dl,al
  408a39:	call   0x174e96b8
  408a3e:	adc    edi,edi
  408a40:	pop    ebx
  408a41:	jae    0x408a3c
  408a43:	jne    0x408a77
  408a45:	xchg   esp,eax
  408a46:	jae    0x408a50
  408a48:	out    0xd3,al
  408a4a:	in     al,dx
  408a4b:	jmp    ecx
  408a4d:	xchg   esp,eax
  408a4e:	jae    0x408a5c
  408a50:	mul    al
  408a52:	ret    0x1ff
  408a55:	dec    edi
  408a56:	les    ecx,FWORD PTR [esi+ebx*8]
  408a59:	sub    ecx,DWORD PTR [esp+ebp*8+0x6afaa64d]
	...
  408a6c:	into   
  408a6d:	xchg   ecx,eax
  408a6e:	jae    0x408a84
  408a70:	loope  0x408a88
  408a72:	or     edi,edi
  408a74:	sub    esp,DWORD PTR [ebx-0x12]
  408a77:	cdq    
  408a78:	xchg   BYTE PTR [ecx+edi*8+0x5d0b8e0b],dl
  408a7f:	mov    ebx,ebx
  408a81:	xchg   edx,eax
  408a82:	outs   dx,BYTE PTR ds:[esi]
  408a83:	or     ah,BYTE PTR es:[edx]
  408a86:	stc    
  408a87:	(bad)  
  408a88:	jmp    0x408a1c
  408a8a:	out    dx,al
  408a8b:	or     al,0x57
  408a8d:	xchg   esp,eax
  408a8e:	stc    
  408a8f:	push   0xbee9629e
  408a94:	into   
  408a95:	xchg   ebx,eax
  408a96:	jae    0x408aa0
  408a98:	data16 xabort 0xff
  408a9c:	popa   
  408a9d:	das    
  408a9e:	ss push esp
  408aa0:	pop    ds
  408aa1:	addr16 stc 
  408aa3:	jne    0x408b17
  408aa5:	scas   eax,DWORD PTR es:[edi]
  408aa6:	test   eax,0x16e93e1
  408aac:	dec    esi
  408aad:	cmp    DWORD PTR [eax+0x115e150],0xffffffe8
  408ab4:	les    edx,FWORD PTR [ebx+0x3e26fff9]
  408aba:	push   edx
  408abb:	inc    ecx
  408abc:	idiv   ebx
  408abe:	jne    0x408b35
  408ac0:	xor    esp,DWORD PTR [esp+ebx*2-0x255ad738]
  408ac7:	add    edi,esi
  408ac9:	pushf  
  408aca:	mov    ah,0x50
  408acc:	sbb    bh,cl
  408ace:	cld    
  408acf:	out    0x0,eax
	...
  408ad9:	add    BYTE PTR [eax],al
  408adb:	add    BYTE PTR [eax+0x8ff773c],ah
  408ae1:	out    dx,eax
  408ae2:	push   0x7746d6e8
  408ae7:	jmp    FWORD PTR [esi]
  408ae9:	cmp    dl,BYTE PTR [edx]
  408aeb:	add    BYTE PTR [edx-0x7f],cl
  408aee:	pushw  0xf03e
  408af2:	ret    
  408af3:	jmp    ecx
  408af5:	xchg   esi,eax
  408af6:	stc    
  408af7:	out    0x8b,eax
  408af9:	inc    ebx
  408afa:	ja     0x408afb
  408afc:	rcl    BYTE PTR [esi+0x2cdf5015],1
  408b02:	cmp    eax,0xf02cc0ff
  408b07:	adc    esp,DWORD PTR [edi]
  408b09:	xor    eax,0x5d9f07f0
  408b0e:	ja     0x408b0f
  408b10:	test   al,0xb3
  408b12:	rcl    DWORD PTR [ebx+0x36],1
  408b15:	cld    
  408b16:	jne    0x408b8d
  408b18:	jmp    0x408b3d
  408b1a:	jnp    0x408ae4
  408b1c:	nop
  408b1d:	mov    esp,0x4be77575
  408b22:	pop    edx
  408b23:	aad    0xaf
  408b25:	in     al,dx
  408b26:	jne    0x408b27
  408b28:	add    dl,BYTE PTR [eax]
  408b2a:	aad    0xfe
  408b2c:	jmp    0x75e4:0x681c5d03
  408b33:	leave  
  408b34:	xor    eax,0x6c55052b
  408b39:	out    0x81,eax
  408b3b:	les    edx,FWORD PTR [ebx+0x7c]
  408b3e:	lock or eax,DWORD PTR [eax]
	...
  408b49:	add    BYTE PTR [eax],al
  408b4b:	add    BYTE PTR [edi+0x62],bl
  408b4e:	add    edi,DWORD PTR [ebx]
  408b50:	inc    eax
  408b51:	or     eax,0x98c343f4
  408b56:	data16 (bad) 
  408b58:	sub    al,0x7a
  408b5a:	out    dx,eax
  408b5b:	add    ebx,DWORD PTR [eax]
  408b5d:	int3   
  408b5e:	(bad)  
  408b5f:	sub    ebx,ecx
  408b61:	mov    ds:0xea270ef,eax
  408b66:	xor    dh,dh
  408b68:	clc    
  408b69:	cli    
  408b6a:	arpl   WORD PTR [eax+0x8],si
  408b6d:	or     eax,0xfdf70297
  408b72:	pop    eax
  408b73:	fcmovnb st,st(7)
  408b75:	mov    dh,0xae
  408b77:	add    esi,eax
  408b79:	xchg   esi,eax
  408b7a:	or     esi,DWORD PTR [eax+0x62]
  408b7d:	pop    ebx
  408b7e:	pop    ss
  408b7f:	stc    
  408b80:	loope  0x408b8e
  408b82:	clc    
  408b83:	(bad)  
  408b85:	bound  eax,QWORD PTR [eax]
  408b87:	mov    cl,0x5f
  408b89:	dec    edi
  408b8a:	xchg   ebx,eax
  408b8b:	ret    0xdc8
  408b8e:	pop    edx
  408b8f:	jo     0x408b51
  408b91:	xchg   esi,eax
  408b92:	neg    DWORD PTR [ebx+0x56]
  408b95:	or     al,0xd0
  408b97:	outs   dx,DWORD PTR ds:[esi]
  408b98:	mov    al,0x96
  408b9a:	retf   
  408b9b:	pop    esp
  408b9c:	and    DWORD PTR [edi],esp
  408b9e:	shr    BYTE PTR [edi-0x52],0x21
  408ba2:	test   DWORD PTR [ebx],0x83c2d842
  408ba8:	mov    ebx,0x1d04450f
  408bad:	data16 mov al,ds:0xf9
	...
  408bbb:	add    al,bh
  408bbd:	cli    
  408bbe:	xchg   BYTE PTR [ebp+0x78],al
  408bc1:	or     al,0x66
  408bc3:	leave  
  408bc4:	ins    BYTE PTR es:[edi],dx
  408bc5:	jnp    0x408b57
  408bc7:	shl    DWORD PTR [edi-0x3b4ee89e],cl
  408bcd:	mov    eax,ds:0x2226eef
  408bd2:	push   es
  408bd3:	and    DWORD PTR [edx],edi
  408bd5:	or     al,0xf8
  408bd7:	hlt    
  408bd8:	dec    esp
  408bd9:	add    al,0xa8
  408bdb:	ror    BYTE PTR [bp+di],1
  408bde:	outs   dx,BYTE PTR ds:[esi]
  408bdf:	lock and BYTE PTR [ebx-0x50343efa],ah
  408be6:	inc    edi
  408be7:	jmp    0xb227e185
  408bec:	cmp    ecx,DWORD PTR [eax+edi*8]
  408bef:	mov    ah,0x1c
  408bf1:	add    al,0x90
  408bf3:	aaa    
  408bf4:	mov    al,ds:0x20df6e0b
  408bf9:	mov    ds:0xb0479106,eax
  408bfe:	inc    edi
  408bff:	jmp    0xa227e18d
  408c04:	mov    ebx,0xec94f80b
  408c09:	add    edi,DWORD PTR [eax+0x7]
  408c0c:	push   eax
  408c0d:	or     al,0x6e
  408c0f:	loop   0x408bd1
  408c11:	mov    ds:0xaf878106,al
  408c16:	inc    edi
  408c17:	jmp    0x3227e275
  408c1c:	mov    edx,0x54f80b
	...
  408c29:	add    BYTE PTR [eax],al
  408c2b:	add    BYTE PTR [ebx+0x21d76003],bh
  408c31:	or     al,0x6e
  408c33:	(bad)  
  408c34:	lds    esp,FWORD PTR [edx-0x4febaefa]
  408c3a:	inc    edi
  408c3b:	jmp    0x2227e249
  408c40:	mov    edx,0x8b34f80b
  408c45:	add    ecx,DWORD PTR [eax-0x59]
  408c48:	adc    DWORD PTR [esi+ebp*2],ecx
  408c4b:	lock mov al,ds:0xd40106a2
  408c51:	scas   eax,DWORD PTR es:[edi]
  408c52:	inc    edi
  408c53:	jmp    0x127e231
  408c58:	es es stc 
  408c5b:	(bad)  
  408c5c:	arpl   WORD PTR [edi],ax
  408c5e:	loope  0x408c96
  408c60:	enter  0xf97c,0x68
  408c64:	sub    BYTE PTR [ebx],dh
  408c66:	inc    esi
  408c67:	add    BYTE PTR [esi],ah
  408c69:	adc    BYTE PTR [ebp+0x41],0x4e
  408c6d:	jl     0x408ca2
  408c6f:	loope  0x408cc7
  408c71:	es stc 
  408c73:	inc    BYTE PTR [ebx+0x7]
  408c76:	loope  0x408c96
  408c78:	mov    eax,0x1568f97c
  408c7d:	xor    eax,DWORD PTR [esi+0x0]
  408c80:	adc    BYTE PTR ss:[ebp+0x41],0x1e
  408c85:	jl     0x408cba
  408c87:	loope  0x408ccf
  408c89:	es stc 
  408c8b:	(bad)  
  408c8c:	arpl   WORD PTR [edi],ax
  408c8e:	loope  0x408c96
	...
  408c9c:	or     BYTE PTR [ecx-0x7],bh
  408c9f:	push   0x463501
  408ca4:	xchg   bl,dl
  408ca6:	push   esp
  408ca7:	inc    ecx
  408ca8:	into   
  408ca9:	cs pop es
  408cab:	add    dh,bl
  408cad:	out    0xf8,al
  408caf:	jne    0x408c87
  408cb1:	scas   al,BYTE PTR es:[edi]
  408cb2:	jmp    0x6eb966b4
  408cb7:	or     DWORD PTR [edx],eax
  408cb9:	es stc 
  408cbb:	outs   dx,DWORD PTR ds:[si]
  408cbd:	xor    al,0x46
  408cbf:	add    BYTE PTR [esi],dh
  408cc1:	gs push es
  408cc3:	add    BYTE PTR [esi],cl
  408cc5:	js     0x408d3a
  408cc7:	or     dh,al
  408cc9:	xchg   edi,eax
  408cca:	sti    
  408ccb:	dec    DWORD PTR [ecx+0x27]
  408cce:	or     edx,DWORD PTR [edi+ebx*8+0x5e]
  408cd2:	outs   dx,BYTE PTR ds:[esi]
  408cd3:	mov    ebp,0x67f925bd
  408cd8:	mov    WORD PTR [esi+0x6],fs
  408cdb:	xor    bh,0xf0
  408cde:	lock pop es
  408ce0:	pop    edi
  408ce1:	mov    ebx,0x7460ff68
  408ce6:	andps  xmm6,XMMWORD PTR [esi-0x5b432305]
  408ced:	cmp    al,BYTE PTR [edx]
  408cef:	push   0x8004fbf5
  408cf4:	inc    eax
  408cf5:	daa    
  408cf6:	std    
  408cf7:	out    0x8d,eax
  408cf9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408cfa:	imul   edi,edi,0xffffff9f
  408cfd:	test   al,0xd7
  408cff:	inc    eax
	...
  408d0c:	mul    DWORD PTR [ebx]
  408d0e:	push   bx
  408d10:	mov    dh,0xfb
  408d12:	fadd   QWORD PTR [ecx]
  408d14:	idiv   ebx
  408d16:	test   bh,bh
  408d18:	mov    al,BYTE PTR [ebx]
  408d1a:	pop    ebp
  408d1b:	xchg   ebx,eax
  408d1c:	or     bh,BYTE PTR [ecx]
  408d1e:	imul   ebp,DWORD PTR [eax-0x12],0xffffffc7
  408d22:	ret    
  408d23:	call   DWORD PTR [eax-0x8bf28a4]
  408d29:	jecxz  0x408d31
  408d2b:	add    bh,dh
  408d2d:	jnp    0x408d9a
  408d2f:	jne    0x408d20
  408d31:	jae    0x408d29
  408d33:	cld    
  408d34:	fmul   DWORD PTR [eax]
  408d36:	fisttp QWORD PTR ds:0x6804bb2b
  408d3c:	aam    0xec
  408d3e:	ret    
  408d3f:	call   FWORD PTR [eax-0x2]
  408d42:	add    al,0x0
  408d44:	ja     0x408d6e
  408d46:	lock pop es
  408d48:	lahf   
  408d49:	xchg   esi,eax
  408d4a:	imul   edi,edi,0x540fa3a8
  408d50:	ss cld 
  408d52:	fsubr  st(2),st
  408d54:	inc    esp
  408d55:	cmp    eax,DWORD PTR [edx]
  408d57:	push   0x8004fbf5
  408d5c:	mov    BYTE PTR [esi-0x6],cl
  408d5f:	out    0x31,eax
  408d61:	arpl   WORD PTR [edx+0x57c786c],sp
  408d67:	ins    DWORD PTR es:[edi],dx
  408d68:	jmp    0x8809:0x6afa875a
  408d6f:	fld    DWORD PTR [eax]
	...
  408d79:	add    BYTE PTR [eax],al
  408d7b:	add    BYTE PTR ds:0x50fbfa0a,dl
  408d81:	or     DWORD PTR [edx+0x6c],edi
  408d84:	push   eax
  408d85:	jl     0x408d5a
  408d87:	ins    BYTE PTR es:[edi],dx
  408d88:	ret    0x875a
  408d8b:	jbe    0x408dcf
  408d8d:	or     DWORD PTR [eax+0x6c],esp
  408d90:	ret    0x5806
  408d93:	idiv   al
  408d95:	cli    
  408d96:	adc    al,0x44
  408d98:	sub    BYTE PTR [ecx],cl
  408d9a:	es inc ecx
  408d9c:	sti    
  408d9d:	bound  ebx,QWORD PTR [edx-0x461af488]
  408da3:	call   DWORD PTR [eax]
  408da5:	xchg   ebp,eax
  408da6:	int3   
  408da7:	fistp  DWORD PTR [esi+ebp*4-0x70fffc52]
  408dae:	repz pop ebx
  408db0:	mov    dh,0x20
  408db2:	sbb    BYTE PTR [edi+eax*2+0x7b],ch
  408db6:	out    dx,eax
  408db7:	add    ebx,eax
  408db9:	leave  
  408dba:	mov    esi,0x175b6a6c
  408dbf:	mov    ds:0x5af808cf,eax
  408dc4:	and    DWORD PTR ds:0x865f6bf0,0x9c0c293
  408dce:	pop    edx
  408dcf:	clc    
  408dd0:	rol    BYTE PTR [ebx-0x5f],1
  408dd3:	imul   esi,DWORD PTR [eax-0x8fab84d],0xfffffff7
  408dda:	mov    ah,dl
  408ddc:	mov    eax,ds:0x5bf78e
	...
  408de9:	add    BYTE PTR [eax],al
  408deb:	add    BYTE PTR [eax],bl
  408ded:	sti    
  408dee:	mov    bh,0x6b
  408df0:	lahf   
  408df1:	jbe    0x408df9
  408df3:	stos   DWORD PTR es:[edi],eax
  408df4:	sbb    al,0x8
  408df6:	outs   dx,BYTE PTR ds:[esi]
  408df7:	pop    ecx
  408df8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408df9:	mov    ds:0x5c86a606,eax
  408dfe:	out    dx,al
  408dff:	sahf   
  408e00:	mov    dh,0x7
  408e02:	stc    
  408e03:	cmp    DWORD PTR [ebx+0x62],ecx
  408e06:	push   es
  408e07:	jle    0x408d96
  408e09:	mov    bl,0xf9
  408e0b:	cld    
  408e0c:	pop    esp
  408e0d:	add    BYTE PTR [eax-0x6f],bl
  408e10:	fadd   QWORD PTR [edi]
  408e12:	out    dx,al
  408e13:	and    eax,0xa0f907b1
  408e18:	mov    ecx,0xb9bc065a
  408e1d:	idiv   al
  408e1f:	aam    0x28
  408e21:	add    BYTE PTR [ebx+0xd079c2f],dl
  408e27:	sub    DWORD PTR [edi],esp
  408e29:	push   0x6e
  408e2b:	enter  0xa328,0x6
  408e2f:	cdq    
  408e30:	lods   al,BYTE PTR ds:[esi]
  408e31:	inc    ecx
  408e32:	shl    BYTE PTR [esi],0x9c
  408e35:	mov    dl,0x56
  408e37:	cs push es
  408e39:	pusha  
  408e3a:	out    dx,al
  408e3b:	xchg   ebp,eax
  408e3c:	lea    eax,[edi]
  408e3e:	stc    
  408e3f:	adc    esp,edi
  408e41:	and    al,0xf9
  408e43:	push   ss
  408e44:	sub    ah,BYTE PTR ds:0xdcc7e90e
  408e4a:	jmp    0x6c43c5b9
  408e4f:	jmp    0x408e54
	...
  408e5c:	pop    ebp
  408e5d:	mov    ss,WORD PTR [esi]
  408e5f:	test   bh,0x5b
  408e62:	stc    
  408e63:	mov    ah,0x5b
  408e65:	fwait
  408e66:	inc    edi
  408e67:	jmp    0xdf03fb88
  408e6c:	sbb    eax,0xcadd42da
  408e71:	pop    es
  408e72:	clc    
  408e73:	push   esp
  408e74:	pop    es
  408e75:	or     BYTE PTR [ebx+0x0],dh
  408e78:	mov    ds:0xc6e1337c,al
  408e7d:	sbb    eax,0xa29ae7f9
  408e82:	stc    
  408e83:	call   DWORD PTR [edi]
  408e85:	and    edi,ebp
  408e87:	push   0xffffff8e
  408e89:	jl     0x408efe
  408e8b:	sbb    BYTE PTR [ecx+0x4bff0d12],dl
  408e91:	jle    0x408ee1
  408e93:	inc    ecx
  408e94:	dec    esi
  408e95:	stos   DWORD PTR es:[edi],eax
  408e96:	call   0x8fbd005f
  408e9b:	inc    ebp
  408e9c:	jbe    0x408e28
  408e9e:	inc    ebx
  408e9f:	call   0x1cb40a92
  408ea4:	rcl    DWORD PTR [edx],1
  408ea6:	or     eax,0x4e7ddbff
  408eab:	inc    ecx
  408eac:	push   ds
  408ead:	stos   DWORD PTR es:[edi],eax
  408eae:	rol    ah,1
  408eb0:	sar    DWORD PTR [edi+ecx*4+0x45],0xbe
  408eb5:	and    eax,0x435bfef9
  408eba:	stc    
  408ebb:	jne    0x408edf
  408ebd:	jl     0x408ef2
  408ebf:	loope  0x408ec1
	...
  408ec9:	add    BYTE PTR [eax],al
  408ecb:	add    BYTE PTR [esi+0x1e],dl
  408ece:	stc    
  408ecf:	out    0xce,eax
  408ed1:	inc    edi
  408ed2:	stc    
  408ed3:	inc    DWORD PTR [edi-0x647212de]
  408ed9:	adc    BYTE PTR [esi-0x1],0x8b
  408edd:	data16 stc 
  408edf:	jne    0x408ea3
  408ee1:	jns    0x408f16
  408ee3:	loope  0x408e8b
  408ee5:	pop    ds
  408ee6:	stc    
  408ee7:	out    0x26,eax
  408ee9:	inc    esi
  408eea:	stc    
  408eeb:	call   DWORD PTR [edi+0x23]
  408eee:	in     eax,0x83
  408ef0:	push   ebx
  408ef1:	jle    0x408ef9
  408ef3:	cmovp  esi,ebx
  408ef6:	add    eax,0x7adf9e00
  408efb:	clc    
  408efc:	idiv   ebx
  408efe:	std    
  408eff:	sub    DWORD PTR [ebp-0x4],0x4
  408f03:	add    BYTE PTR [edi+ebx*4+0x76],dh
  408f07:	add    BYTE PTR [eax],al
  408f09:	add    BYTE PTR [edx+0x6dfbf700],0x75
  408f10:	iret   
  408f11:	mov    ah,0xe8
  408f13:	pop    es
  408f14:	pop    DWORD PTR [edi]
  408f16:	scas   eax,DWORD PTR es:[edi]
  408f17:	push   DWORD PTR [eax-0x1b]
  408f1a:	call   0xfaa7f81a
  408f1f:	out    0xd3,eax
  408f21:	xchg   ebp,eax
  408f22:	outs   dx,DWORD PTR ds:[esi]
  408f23:	call   FWORD PTR [eax+0x7]
  408f26:	ins    DWORD PTR es:[edi],dx
  408f27:	dec    edx
  408f29:	adc    ebx,DWORD PTR [ebp+0x61]
  408f2c:	mov    DWORD PTR [ebp+0xff6f],ecx
	...
  408f3a:	add    BYTE PTR [eax],al
  408f3c:	retf   0x6f8f
  408f3f:	jne    0x408f30
  408f41:	mov    bl,0xd4
  408f43:	mov    ebp,0x7d85a530
  408f48:	fisttp WORD PTR [eax]
  408f4a:	add    eax,0xf02f61ef
  408f4f:	(bad)  
  408f50:	mov    ds:0xff756f4b,al
  408f55:	mov    bl,0xc0
  408f57:	mov    ebp,0xe5b4d08
  408f5c:	add    bh,cl
  408f5e:	pop    esp
  408f5f:	inc    DWORD PTR [edx-0x8a9095]
  408f65:	jae    0x408f6b
  408f67:	mov    esi,0x756f6ce8
  408f6c:	rcl    DWORD PTR [ecx+ebp*8+0x7],cl
  408f70:	iret   
  408f71:	adc    al,0xaf
  408f73:	call   eax
  408f75:	js     0x408f58
  408f77:	jecxz  0x408f70
  408f79:	xchg   DWORD PTR [eax],ecx
  408f7b:	add    DWORD PTR [edx+0x5c],0x6
  408f7f:	jne    0x408f69
  408f81:	bound  esi,QWORD PTR [esi+edi*4-0x6c]
  408f85:	add    eax,0x5b22691f
  408f8a:	(bad)  
  408f8b:	xchg   edi,eax
  408f8c:	bound  eax,QWORD PTR ds:0x78ed5cc8
  408f92:	out    dx,eax
  408f93:	push   0xa3d75b0a
  408f98:	dec    edx
  408f99:	add    eax,0xf0a68b0
  408f9e:	(bad)  
  408f9f:	pusha  
	...
  408fac:	mov    bh,0x5
  408fae:	mov    al,ds:0x9706ea68
  408fb3:	dec    eax
  408fb4:	aaa    
  408fb5:	add    eax,0xaea6890
  408fba:	xchg   DWORD PTR [eax+0x37],edx
  408fbd:	add    eax,0x12ca6880
  408fc2:	xchg   edi,eax
  408fc3:	cmp    BYTE PTR [edi],dh
  408fc5:	add    eax,0xf6ca6870
  408fca:	xchg   BYTE PTR [eax+0x37],al
  408fcd:	add    eax,0xfeaa6860
  408fd2:	push   esi
  408fd3:	test   al,0x37
  408fd5:	add    eax,0x3e353a50
  408fda:	out    dx,eax
  408fdb:	into   
  408fdc:	ins    DWORD PTR es:[edi],dx
  408fdd:	imul   BYTE PTR [ebp+0x3f]
  408fe0:	pop    es
  408fe1:	or     eax,0x719f6838
  408fe6:	out    dx,eax
  408fe7:	pop    eax
  408fe8:	inc    ecx
  408fe9:	jp     0x40901b
  408feb:	iret   
  408fec:	mov    bh,0x62
  408fee:	xchg   edi,eax
  408fef:	push   edi
  408ff0:	dec    ebx
  408ff1:	mov    ds:0xafd1dbef,al
  408ff6:	scas   al,BYTE PTR es:[edi]
  408ff7:	add    ecx,DWORD PTR [edi+0x26]
  408ffa:	mov    bl,0xc2
  408ffc:	fdivr  DWORD PTR [edi+eiz*1-0x31]
  409000:	aaa    
  409001:	arpl   WORD PTR [edi+0x6a22365],dx
  409007:	jmp    0xee4b1e5b
  40900c:	retf   0xee5c
  40900f:	push   eax
	...
  40901c:	sbb    DWORD PTR [ecx+edi*8],eax
  40901f:	push   ecx
  409020:	add    al,0x63
  409022:	jmp    0x538d53be
  409027:	sub    bl,dh
  409029:	jp     0x409060
  40902b:	sbb    al,0xba
  40902d:	add    al,0x61
  40902f:	push   es
  409030:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409031:	mov    ds:0xaf884106,eax
  409036:	inc    edi
  409037:	jmp    0x2893f1d8
  40903c:	sti    
  40903d:	jp     0x40905c
  40903f:	xor    al,0x32
  409041:	add    al,0xf8
  409043:	sbb    al,0x5f
  409045:	add    eax,0x47bce173
  40904a:	clc    
  40904b:	xchg   al,bl
  40904d:	jp     0x409061
  40904f:	jmp    0x51ae54f5
  409054:	mov    es:0xadb80106,eax
  40905a:	inc    edi
  40905b:	jmp    0xa8941eac
  409060:	hlt    
  409061:	jp     0x4090b5
  409063:	mov    esp,0xaa61043b
  409068:	inc    edi
  409069:	mov    ds:0xaf17d106,eax
  40906e:	inc    edi
  40906f:	jmp    0x364b1e05
  409074:	push   es
  409075:	pop    esp
  409076:	out    dx,al
  409077:	fcom   QWORD PTR [edx-0x498b06fd]
  40907d:	pop    es
  40907e:	push   esi
  40907f:	push   ds
	...
  40908c:	out    0x57,al
  40908e:	stc    
  40908f:	fcomp  QWORD PTR [ebx-0x65]
  409092:	inc    edi
  409093:	jmp    0xeb2bd4
  409098:	ficomp WORD PTR [edi+0xd]
  40909b:	rol    BYTE PTR [ebx-0x6],0xbf
  40909f:	inc    ebp
  4090a0:	(bad)  
  4090a1:	pop    edi
  4090a2:	push   es
  4090a3:	add    dh,cl
  4090a5:	inc    esp
  4090a6:	inc    ebx
  4090a7:	hlt    
  4090a8:	cdq    
  4090a9:	add    al,0xf9
  4090ab:	inc    DWORD PTR [edi+ebx*2+0x6c]
  4090af:	add    BYTE PTR [edi+ebx*2],dh
  4090b2:	ins    BYTE PTR es:[edi],dx
  4090b3:	add    BYTE PTR [ebx],bh
  4090b5:	and    esi,ebp
  4090b7:	push   eax
  4090b8:	or     esp,ebx
  4090ba:	icebp  
  4090bb:	test   DWORD PTR [ecx+0x7c],0x76c3ff56
  4090c2:	stc    
  4090c3:	jne    0x40910f
  4090c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4090c6:	sbb    BYTE PTR [esi+ebx*2+0x2c00d5f],ch
  4090cd:	popa   
  4090ce:	in     eax,dx
  4090cf:	inc    eax
  4090d0:	idiv   BYTE PTR [ecx+0x7c4e414d]
  4090d6:	jae    0x4090e4
  4090d8:	adc    sp,ax
  4090db:	dec    ecx
  4090dd:	mov    dh,dl
  4090df:	(bad)  
  4090e0:	shl    DWORD PTR [ebx-0xf],cl
  4090e3:	dec    ecx
  4090e5:	das    
  4090e6:	push   edi
  4090e7:	call   0x3a317d
  4090ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4090ed:	loop   0x4090e4
  4090ef:	test   DWORD PTR [eax],0x0
  4090f5:	add    BYTE PTR [eax],al
  4090f7:	add    BYTE PTR [eax],al
  4090f9:	add    BYTE PTR [eax],al
  4090fb:	add    cl,cl
  4090fd:	jl     0x4090f8
  4090ff:	mov    ch,0xbe
  409101:	je     0x4090fc
  409103:	(bad)  
  409104:	mov    ecx,0xc3e80112
  409109:	jge    0x409104
  40910b:	dec    ecx
  40910d:	shl    ch,cl
  40910f:	test   ecx,0x59a5ee7c
  409115:	mov    ecx,edi
  409117:	call   DWORD PTR [ebx-0x86a1272]
  40911d:	pop    eax
  40911e:	idiv   bl
  409120:	iret   
  409121:	dec    eax
  409122:	pushf  
  409123:	add    bh,dh
  409125:	xor    al,BYTE PTR [edi+0x8]
  409128:	not    esi
  40912a:	jnp    0x409118
  40912c:	je     0x40917e
  40912e:	popa   
  40912f:	push   0xfffffff7
  409131:	in     eax,0xfa
  409133:	(bad)  
  409134:	sub    dh,ah
  409136:	pop    esp
  409137:	mov    edx,0x8963216b
  40913c:	cmp    bl,BYTE PTR [eax]
  40913e:	ficomp DWORD PTR [esi-0xfdb4bd]
  409144:	or     dh,ah
  409146:	pop    esp
  409147:	mov    bh,0x89
  409149:	shl    DWORD PTR [edx+0x6a],0xf7
  40914d:	mov    ds:0xc36543e,eax
  409152:	fstp   QWORD PTR [esi-0xfdb535]
  409158:	and    ch,bl
  40915a:	mov    ecx,0xf6e3f740
  40915f:	rol    DWORD PTR [eax],0x0
	...
  40916a:	add    BYTE PTR [eax],al
  40916c:	pop    eax
  40916d:	icebp  
  40916e:	(bad)  
  40916f:	mov    edi,0x4fd4f8cb
  409174:	dec    eax
  409175:	idiv   esp
  409177:	out    0x6a,eax
  409179:	js     0x4091de
  40917b:	dec    DWORD PTR [edi+0x44]
  40917e:	mov    ds:0x51630ff,eax
  409183:	push   0xffc3b468
  409188:	cwde   
  409189:	fst    st(5)
  40918b:	inc    eax
  40918c:	div    DWORD PTR [eax-0x35401ed7]
  409192:	add    al,0xe8
  409194:	mov    esi,0xecff634d
  409199:	dec    ebx
  40919a:	test   BYTE PTR [esi],0xa7
  40919d:	(bad)  [ecx+0x75]
  4091a0:	jmp    DWORD PTR [edx+0x17]
  4091a3:	fldlg2 
  4091a5:	add    DWORD PTR [eax],ebx
  4091a7:	pop    esp
  4091a8:	add    edx,eax
  4091aa:	pcmpgtw mm1,QWORD PTR [ebp+0x63]
  4091ae:	xchg   DWORD PTR [edi],esi
  4091b0:	sub    esp,DWORD PTR [edi+ebp*8-0x51699625]
  4091b7:	add    ecx,DWORD PTR [edi+0x65]
  4091ba:	out    dx,eax
  4091bb:	add    esi,DWORD PTR [edi+0xa]
  4091be:	iret   
  4091bf:	inc    ecx
  4091c0:	mov    al,0x1
  4091c2:	hlt    
  4091c3:	inc    ebx
  4091c4:	and    esi,DWORD PTR [edx+0x3f]
  4091c7:	aam    0xa1
  4091c9:	ja     0x4091b2
  4091cb:	pop    ebx
  4091cc:	xor    eax,0x64c7ff
	...
  4091d9:	add    BYTE PTR [eax],al
  4091db:	add    BYTE PTR [edi-0x779b7f09],bl
  4091e1:	mov    edi,gs
  4091e3:	fild   DWORD PTR [ecx-0x56]
  4091e6:	cs add al,0xf
  4091e9:	mov    ch,0x12
  4091eb:	ret    
  4091ec:	jo     0x409177
  4091ee:	in     eax,dx
  4091ef:	add    esi,edi
  4091f1:	loop   0x409189
  4091f3:	ins    BYTE PTR es:[edi],dx
  4091f4:	add    DWORD PTR ss:[eax-0x27896708],edx
  4091fb:	rol    eax,cl
  4091fd:	add    edx,edi
  4091ff:	sti    
  409200:	push   eax
  409201:	pop    ebx
  409202:	jnp    0x409268
  409204:	inc    eax
  409205:	or     ah,BYTE PTR [ebx+0x50138a5]
  40920b:	or     dh,BYTE PTR [eax]
  40920d:	ja     0x409206
  40920f:	pop    ebx
  409210:	lods   eax,DWORD PTR ds:[esi]
  409211:	(bad)  
  409212:	push   edi
  409213:	lea    eax,fs:[ebp+0x50]
  409217:	out    dx,al
  409218:	lock or bl,bh
  40921b:	adc    BYTE PTR [bx+di],al
  40921e:	aad    0x7
  409220:	or     BYTE PTR [edi-0x9],dh
  409223:	pop    ebx
  409224:	cdq    
  409225:	inc    BYTE PTR ds:0x73019336
  40922b:	sub    eax,0x110e765b
  409230:	adc    eax,0x1d1ef8bf
  409235:	and    eax,0xeda9e902
  40923a:	jmp    0x503fa2a9
  40923f:	sahf   
	...
  40924c:	scas   al,BYTE PTR es:[edi]
  40924d:	add    BYTE PTR [edi-0x1a],ch
  409250:	pop    ebx
  409251:	jbe    0x409261
  409253:	add    DWORD PTR [edi],esi
  409255:	mov    esp,0xa62eeef8
  40925a:	cli    
  40925b:	jb     0x40926b
  40925d:	xchg   BYTE PTR [esi+0x28],cl
  409260:	sti    
  409261:	jmp    0x40929d
  409263:	inc    eax
  409264:	stos   DWORD PTR es:[edi],eax
  409265:	mov    ds:0x62d46906,eax
  40926a:	jb     0x4092a6
  40926c:	fwait
  40926d:	retf   
  40926e:	push   edx
  40926f:	sub    bl,bh
  409271:	xchg   edi,eax
  409272:	out    dx,al
  409273:	leave  
  409274:	dec    ecx
  409275:	arpl   WORD PTR [esi],ax
  409277:	loop   0x40922d
  409279:	jbe    0x409294
  40927b:	aas    
  40927c:	(bad)  [esi]
  40927e:	into   
  40927f:	sahf   
  409280:	aam    0x92
  409282:	outs   dx,BYTE PTR ds:[esi]
  409283:	jmp    0x1f8a27c
  409288:	mov    esi,0x84e94795
  40928d:	add    DWORD PTR [ebx-0xf],esi
  409290:	int3   
  409291:	mov    ds:0xad476e1,al
  409296:	dec    edi
  409297:	das    
  409298:	xchg   esp,eax
  409299:	jmp    FWORD PTR [ebp-0x62]
  40929c:	outs   dx,BYTE PTR ds:[esi]
  40929d:	mov    ds:0xb48cb606,eax
  4092a2:	stos   DWORD PTR es:[edi],eax
  4092a3:	jmp    0xd606fe9c
  4092a8:	cmc    
  4092a9:	cwde   
  4092aa:	out    dx,al
  4092ab:	add    BYTE PTR [eax],bl
  4092ad:	lods   al,BYTE PTR ds:[esi]
  4092ae:	stc    
  4092af:	inc    DWORD PTR [eax]
	...
  4092b9:	add    BYTE PTR [eax],al
  4092bb:	add    BYTE PTR [esi+0xc],bl
  4092be:	stc    
  4092bf:	push   DWORD PTR [ecx-0x743a923c]
  4092c5:	es stc 
  4092c7:	dec    edi
  4092c8:	adc    DWORD PTR [edx],ebx
  4092ca:	add    eax,ebp
  4092cc:	fmul   QWORD PTR [ecx+edi*8-0x45000901]
  4092d3:	inc    DWORD PTR [ecx]
  4092d5:	nop
  4092d6:	pop    es
  4092d7:	inc    esi
  4092d8:	pop    esi
  4092d9:	inc    ebp
  4092da:	push   es
  4092db:	jne    0x4092d1
  4092dd:	sub    al,0xfd
  4092df:	xor    ecx,DWORD PTR [esi]
  4092e1:	fdivp  st(0),st
  4092e3:	jmp    DWORD PTR [ecx-0x29510b7c]
  4092e9:	imul   esi,DWORD PTR [ebx-0x73],0xffffffc1
  4092ed:	sbb    bh,ch
  4092ef:	(bad)  
  4092f0:	cmp    ebp,DWORD PTR [edi-0x12]
  4092f3:	ja     0x40935a
  4092f5:	test   cl,bh
  4092f7:	pop    edi
  4092f8:	shr    BYTE PTR [ebp-0x4571fb3c],1
  4092fe:	mov    ebp,esp
  409300:	ss addr16 push es
  409303:	out    dx,eax
  409304:	loopne 0x409311
  409306:	loopne 0x40935d
  409308:	pop    ds
  409309:	addr16 stc 
  40930b:	jne    0x40935f
  40930d:	test   BYTE PTR [ebx+0x8],dh
  409310:	jbe    0x4092a4
  409312:	loopne 0x409313
  409314:	or     DWORD PTR [ebx],0xc1610006
  40931a:	ins    DWORD PTR es:[edi],dx
  40931b:	in     al,dx
  40931c:	jmp    0x409343
  40931e:	stc    
  40931f:	inc    BYTE PTR [eax]
	...
  409329:	add    BYTE PTR [eax],al
  40932b:	add    BYTE PTR [ebx],bh
  40932d:	outs   dx,DWORD PTR ds:[esi]
  40932e:	stc    
  40932f:	jne    0x409347
  409331:	mov    edi,DWORD PTR [esi-0x307b6e1a]
  409337:	ret    0x6326
  40933a:	push   ebx
  40933b:	mov    esi,edi
  40933d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40933e:	fs jne 0x409344
  409341:	mov    ds:0xa808c214,al
  409346:	or     al,al
  409348:	mov    eax,DWORD PTR [ebx]
  40934a:	in     eax,dx
  40934b:	shl    BYTE PTR [edx-0x20affb36],1
  409351:	xchg   ecx,eax
  409352:	inc    edx
  409353:	(bad)  
  409354:	call   0x6b3f4815
  409359:	hlt    
  40935a:	ins    BYTE PTR es:[edi],dx
  40935b:	stos   DWORD PTR es:[edi],eax
  40935c:	fcom   DWORD PTR [ebp+0x64]
  40935f:	call   0xffa542d2
  409364:	mov    esi,0x2a000d4a
  409369:	jno    0x4093d4
  40936b:	xor    DWORD PTR [ebx+0x1effe9f8],0x4
  409372:	fs jne 0x409374
  409375:	adc    ebx,DWORD PTR [ebx-0x72e25f46]
  40937b:	inc    ebp
  40937c:	fwait
  40937d:	mov    ds:0x36bb6802,al
  409382:	vmovsd xmm7,QWORD PTR [ebx-0x4308bf50]
  40938a:	adc    cl,ah
  40938c:	das    
  40938d:	dec    ebx
  40938e:	add    ch,al
	...
  40939c:	jbe    0x40936a
  40939e:	data16 (bad) 
  4093a0:	cld    
  4093a1:	retf   
  4093a2:	fst    QWORD PTR [ebx]
  4093a4:	(bad)  
  4093a5:	push   ebx
  4093a6:	add    eax,0xb2964800
  4093ab:	dec    dl
  4093ad:	add    ebp,DWORD PTR [ebp+0x63]
  4093b0:	push   esp
  4093b1:	in     eax,0x66
  4093b3:	call   0xffa7d25e
  4093b8:	int    0xb
  4093ba:	in     eax,dx
  4093bb:	ret    
  4093bc:	leave  
  4093bd:	dec    edx
  4093be:	add    ch,BYTE PTR [eax+0x1]
  4093c1:	arpl   WORD PTR [ecx+0x11fd20c2],di
  4093c7:	arpl   WORD PTR [edi-0x5a94105d],bp
  4093cd:	and    cl,BYTE PTR [eax+0x61]
  4093d0:	cld    
  4093d1:	and    bh,BYTE PTR [ebx-0x11754f09]
  4093d7:	add    ecx,DWORD PTR [eax]
  4093d9:	mov    ebp,0x6b6a609e
  4093de:	inc    edi
  4093df:	sbb    ah,dl
  4093e1:	std    
  4093e2:	pop    ds
  4093e3:	ins    BYTE PTR es:[edi],dx
  4093e4:	adc    eax,0x4d6117c0
  4093e9:	arpl   WORD PTR [edi-0x105bd6c9],ax
  4093ef:	jmp    0x409429
  4093f1:	xchg   ebp,eax
  4093f2:	scas   al,BYTE PTR es:[edi]
  4093f3:	add    eax,eax
  4093f5:	aaa    
  4093f6:	push   cs
  4093f7:	int3   
  4093f8:	aaa    
  4093f9:	arpl   WORD PTR [edi],ax
  4093fb:	and    eax,0xce7fdb7
	...
  40940c:	mov    bh,0x76
  40940e:	lock mov bl,0x30
  409411:	(bad)  
  409412:	push   ecx
  409413:	or     al,0x8f
  409415:	push   0xa9060d0
  40941a:	xlat   BYTE PTR ds:[ebx]
  40941b:	lahf   
  40941c:	mov    ch,bh
  40941e:	push   esp
  40941f:	add    al,0xf
  409421:	pop    ss
  409422:	adc    ebx,eax
  409424:	js     0x4093ab
  409426:	aaa    
  409427:	mov    edx,0x16a862b7
  40942c:	push   esi
  40942d:	stos   BYTE PTR es:[edi],al
  40942e:	cs add al,0x4f
  409431:	sti    
  409432:	push   edi
  409433:	pusha  
  409434:	pop    eax
  409435:	imul   ebp,DWORD PTR [edi+0x3f9301d7],0x976ac261
  40943f:	arpl   WORD PTR [ecx-0x3],ax
  409442:	ja     0x4094af
  409444:	sub    DWORD PTR [esi-0x776889fb],edi
  40944a:	push   es
  40944b:	add    eax,ebp
  40944d:	xchg   esp,eax
  40944e:	inc    edi
  40944f:	jmp    0xa8904a60
  409454:	hlt    
  409455:	std    
  409456:	xor    cl,BYTE PTR [eax+0x3c]
  409459:	mov    ds:0xbda74106,al
  40945e:	clc    
  40945f:	inc    esi
  409460:	repz and dh,BYTE PTR [edx-0x12]
  409464:	inc    esp
  409465:	lods   eax,DWORD PTR ds:[esi]
  409466:	stc    
  409467:	mov    esp,0x2fb00afc
  40946c:	push   edi
  40946d:	cld    
  40946e:	in     eax,dx
  40946f:	dec    ebp
	...
  40947c:	cmp    ah,0xf8
  40947f:	xchg   ebx,eax
  409480:	fdivr  st,st(5)
  409482:	jb     0x409465
  409484:	pop    esp
  409485:	sbb    edi,eax
  409487:	push   cs
  409488:	push   edi
  409489:	mov    DWORD PTR [esi+eax*1],ebx
  40948c:	test   eax,0x562fee64
  409491:	cld    
  409492:	clc    
  409493:	sbb    ebx,0xfffffffb
  409496:	jb     0x409479
  409498:	sbb    al,0x27
  40949a:	clc    
  40949b:	out    0x40,al
  40949d:	cld    
  40949e:	jb     0x40947d
  4094a0:	cmp    BYTE PTR [esi+0xe],dh
  4094a3:	shl    DWORD PTR [edx],0xba
  4094a6:	clc    
  4094a7:	into   
  4094a8:	cmp    ah,BYTE PTR [ecx]
  4094aa:	add    ch,cl
  4094ac:	aas    
  4094ad:	jmp    0x68df539b
  4094b2:	out    dx,al
  4094b3:	lods   eax,DWORD PTR ds:[esi]
  4094b4:	mov    ebx,0xb4e2f8fb
  4094b9:	jbe    0x409503
  4094bb:	adc    ecx,edx
  4094bd:	xchg   esp,eax
  4094be:	inc    edi
  4094bf:	jmp    0xa9969968
  4094c4:	mov    al,0xfb
  4094c6:	push   ebp
  4094c7:	cmp    DWORD PTR [ebx+0x4e000684],eax
  4094cd:	lea    edi,[eax+0x45b56768]
  4094d3:	add    BYTE PTR [esi],cl
  4094d5:	pushf  
  4094d6:	jae    0x4094e0
  4094d8:	jbe    0x409538
  4094da:	jecxz  0x4094db
  4094dc:	cdq    
  4094dd:	mov    esi,0x160
	...
  4094ea:	add    BYTE PTR [eax],al
  4094ec:	push   cs
  4094ed:	lea    edi,[eax+0x45b4a668]
  4094f3:	add    BYTE PTR [esi-0x63],cl
  4094f6:	jae    0x409500
  4094f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4094f9:	dec    ecx
  4094fa:	jecxz  0x4094fb
  4094fc:	mov    ecx,0xde0260be
  409501:	mov    WORD PTR [eax+0x45b4d068],?
  409507:	add    BYTE PTR [esi+0x608739c],bl
  40950d:	mul    cl
  40950f:	(bad)  
  409510:	jmp    0xf9fcb1a3
  409515:	fwait
  409516:	iret   
  409517:	ret    0x5fc6
  40951a:	push   ebx
  40951b:	mov    ebp,edx
  40951d:	ffreep st(1)
  40951f:	cld    
  409520:	je     0x409581
  409522:	ins    BYTE PTR es:[edi],dx
  409523:	or     DWORD PTR [ecx-0x2517fee6],ebx
  409529:	(bad)  
  40952b:	jmp    DWORD PTR [edi]
  40952d:	sub    edi,ebp
  40952f:	push   0xffffff84
  409531:	pushf  
  409532:	jae    0x40953c
  409534:	mov    dh,0xdf
  409536:	clc    
  409537:	(bad)  
  409538:	mov    ecx,0xc3ff2409
  40953d:	outs   dx,BYTE PTR ds:[esi]
  40953e:	out    dx,al
  40953f:	jbe    0x4094ea
  409541:	pushf  
  409542:	stc    
  409543:	push   0x3a
  409545:	pushf  
  409546:	jae    0x409550
  409548:	xchg   BYTE PTR [ebx],cl
  40954a:	clc    
  40954b:	(bad)  
  40954c:	jns    0x4094ea
  40954e:	jae    0x40954c
	...
  40955c:	not    esp
  40955e:	fld    QWORD PTR [edi]
  409560:	pop    edi
  409561:	xor    ebx,DWORD PTR [ebx+0x46b240ff]
  409567:	add    al,0xf7
  409569:	push   esi
  40956a:	(bad)  
  40956b:	in     al,dx
  40956c:	popf   
  40956d:	or     ebp,ebp
  40956f:	inc    edx
  409570:	ror    BYTE PTR [edx+0x2],0x68
  409574:	out    0xbc,al
  409576:	sar    edi,0x19
  409579:	push   esi
  40957a:	arpl   WORD PTR [eax-0x4a],cx
  40957d:	or     DWORD PTR [ebp-0x2e],ebp
  409580:	dec    ecx
  409581:	lods   al,BYTE PTR ds:[esi]
  409582:	pop    eax
  409583:	or     esi,DWORD PTR [edi]
  409585:	mov    ebp,0xb5f84ffd
  40958a:	hlt    
  40958b:	(bad)  
  40958c:	push   0x0
  40958e:	mov    ch,0xfe
  409590:	bound  eax,QWORD PTR [ebp*2+0x5841db98]
  409597:	call   0xff991b32
  40959c:	pop    ebp
  40959d:	or     al,0xed
  40959f:	inc    edx
  4095a0:	and    bl,cl
  4095a2:	add    al,0x68
  4095a4:	push   es
  4095a5:	fld    st(1)
  4095a7:	call   DWORD PTR [eax+0xe]
  4095aa:	add    eax,0xa4647700
  4095af:	mov    esi,0xc00f09a8
  4095b4:	sub    esi,edi
  4095b6:	mov    ah,0xfe
  4095b8:	and    bh,ah
  4095ba:	pop    ecx
  4095bb:	jne    0x4095c0
  4095bd:	cmp    al,0x5b
  4095bf:	jne    0x4095c1
	...
  4095c9:	add    BYTE PTR [eax],al
  4095cb:	add    bh,bh
  4095cd:	and    ebp,ebp
  4095cf:	jecxz  0x409551
  4095d1:	and    DWORD PTR [edx+0x72],ebp
  4095d4:	cmp    al,0xb9
  4095d6:	pop    edx
  4095d7:	(bad)  
  4095d8:	jmp    0x23a3:0xfb755a1b
  4095df:	push   edi
  4095e0:	mov    dh,0x62
  4095e2:	out    dx,eax
  4095e3:	pop    esp
  4095e4:	loop   0x409650
  4095e6:	xchg   edi,eax
  4095e7:	sbb    BYTE PTR [ebx-0x6],0x8f
  4095eb:	dec    ebx
  4095ec:	xor    eax,0x6db6ef67
  4095f1:	pop    es
  4095f2:	ins    BYTE PTR es:[edi],dx
  4095f3:	dec    eax
  4095f4:	cmp    ecx,DWORD PTR [ebp-0x6011611]
  4095fa:	stc    
  4095fb:	or     ebx,DWORD PTR [edi]
  4095fd:	in     al,0x36
  4095ff:	pop    ebp
  409600:	and    ah,ch
  409602:	test   eax,0xef628f5f
  409607:	ins    BYTE PTR es:[edi],dx
  409608:	push   ecx
  409609:	mov    edi,ebp
  40960b:	mov    ah,0xb7
  40960d:	bound  ecx,QWORD PTR [eax-0x29]
  409610:	clc    
  409611:	or     cl,bh
  409613:	pop    esp
  409614:	clc    
  409615:	stc    
  409616:	(bad)  
  409617:	add    dh,bh
  409619:	or     DWORD PTR [ecx-0x14],esi
  40961c:	or     edx,DWORD PTR [edx+0x6fe003ae]
  409622:	imul   DWORD PTR [ebx+0x29]
  409625:	cli    
  409626:	pop    ss
  409627:	pop    ebp
  409628:	shr    BYTE PTR [edi+0x13],1
  40962b:	pop    ebp
  40962c:	inc    edx
  40962d:	imul   eax,DWORD PTR [edi],0x77
	...
  40963c:	jg     0x409637
  40963e:	dec    DWORD PTR [edx-0x4b]
  409641:	pop    esi
  409642:	out    dx,eax
  409643:	mov    dh,0x7d
  409645:	push   es
  409646:	outs   dx,BYTE PTR ds:[esi]
  409647:	dec    eax
  409648:	iret   
  409649:	icebp  
  40964a:	out    0x5c,eax
  40964c:	jb     0x4095ed
  40964e:	jecxz  0x409603
  409650:	cdq    
  409651:	outs   dx,DWORD PTR ds:[esi]
  409652:	jmp    0x4096b0
  409654:	retf   0x2703
  409657:	ret    
  409658:	mov    BYTE PTR [ecx],al
  40965a:	add    eax,0xf462f7a5
  40965f:	inc    ebx
  409660:	call   0xf7433d44
  409665:	bound  eax,QWORD PTR [esi]
  409667:	scas   al,BYTE PTR es:[edi]
  409668:	xor    ecx,esi
  40966a:	add    eax,0xc162f4e9
  40966f:	sub    al,0xbf
  409671:	stc    
  409672:	add    cl,ch
  409674:	hlt    
  409675:	mov    WORD PTR [esi],es
  409677:	add    esi,ebx
  409679:	mov    WORD PTR [esi],es
  40967b:	add    edi,ebx
  40967d:	out    0x42,eax
  40967f:	jge    0x409605
  409681:	out    0x82,al
  409683:	jne    0x409650
  409685:	stc    
  409686:	clc    
  409687:	sbb    edx,ecx
  409689:	outs   dx,DWORD PTR ds:[esi]
  40968a:	(bad)  
  40968b:	outs   dx,BYTE PTR ds:[esi]
  40968c:	dec    ecx
  40968d:	std    
  40968e:	in     eax,dx
  40968f:	gs push edx
  409691:	bound  eax,QWORD PTR [esi]
  409693:	repnz mov ah,0x6e
  409696:	add    eax,DWORD PTR [eax-0x71]
  409699:	arpl   WORD PTR [esi],ax
  40969b:	jmp    0xa88e4cac
	...
  4096ac:	hlt    
  4096ad:	stc    
  4096ae:	jb     0x40969d
  4096b0:	pop    esp
  4096b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4096b2:	mov    eax,0x8d934b36
  4096b7:	sbb    DWORD PTR [ecx-0x22],esi
  4096ba:	icebp  
  4096bb:	push   ds
  4096bc:	cmp    edi,eax
  4096be:	push   ebp
  4096bf:	mov    ebx,0x16b8365c
  4096c4:	sub    ebp,edx
  4096c6:	sbb    BYTE PTR [ecx],0x2b
  4096c9:	clc    
  4096ca:	clc    
  4096cb:	adc    DWORD PTR [edi-0x43],eax
  4096ce:	clc    
  4096cf:	(bad)  
  4096d0:	lahf   
  4096d1:	clc    
  4096d2:	pusha  
  4096d3:	push   edi
  4096d4:	arpl   WORD PTR [ebx-0xc7511fa],sp
  4096da:	lock out 0x3c,al
  4096dd:	clc    
  4096de:	xor    cl,al
  4096e0:	ret    
  4096e1:	mov    ds:0xb600c106,eax
  4096e6:	clc    
  4096e7:	into   
  4096e8:	jb     0x4096c8
  4096ea:	loope  0x4096ec
  4096ec:	cmp    DWORD PTR [ecx+edi*8-0x56f3a196],ebx
  4096f3:	push   edi
  4096f4:	pop    ds
  4096f5:	pop    edi
  4096f6:	stc    
  4096f7:	mov    ch,0x9e
  4096f9:	xchg   esp,eax
  4096fa:	stc    
  4096fb:	call   DWORD PTR [ecx+0x1f48e752]
  409701:	pop    edi
  409702:	out    dx,al
  409703:	jne    0x4096a8
  409705:	fwait
  409706:	stc    
  409707:	mov    ebx,ebx
  409709:	mov    dh,cl
  40970b:	push   DWORD PTR [ecx+0x9]
  40970e:	stc    
  40970f:	add    BYTE PTR [bx+si],al
	...
  40971a:	add    BYTE PTR [eax],al
  40971c:	mov    ecx,0xa10045b3
  409721:	shl    ebp,1
  409723:	not    DWORD PTR [ecx-0x50ca0665]
  409729:	es inc esi
  40972b:	add    BYTE PTR [esi-0x5e00464d],ah
  409731:	in     eax,0x82
  409733:	call   0x6b3a32e1
  409738:	push   cs
  409739:	or     al,0xbe
  40973b:	push   edi
  40973c:	lahf   
  40973d:	arpl   cx,di
  40973f:	mov    ch,0x2e
  409741:	xchg   esp,eax
  409742:	stc    
  409743:	call   DWORD PTR [ecx]
  409745:	push   edx
  409746:	out    0x48,eax
  409748:	(bad)  
  409749:	arpl   si,bp
  40974b:	cmp    DWORD PTR [ebx],esi
  40974d:	pushf  
  40974e:	stc    
  40974f:	mov    DWORD PTR [ebx+0x7f],ebx
  409752:	icebp  
  409753:	push   ecx
  409755:	jmp    0x9cfa6fdc
  40975a:	stc    
  40975b:	push   eax
  40975c:	xchg   BYTE PTR [eax-0x6361beaf],ah
  409762:	mov    bl,0xf0
  409764:	test   eax,0xfbfff99c
  409769:	jge    0x4097b9
  40976b:	inc    ecx
  40976c:	sahf   
  40976d:	mov    edx,DWORD PTR [eax]
  40976f:	mov    ebp,0xb5c10f7
  409774:	mov    bh,0x8d
  409776:	sti    
  409777:	cmp    BYTE PTR [edx],0xc1
  40977a:	push   ebx
  40977b:	push   DWORD PTR [eax-0x3]
  40977e:	aad    0xf
	...
  40978c:	push   0x43858bf9
  409791:	mov    al,0x5b
  409793:	inc    edi
  409795:	rcr    DWORD PTR [edi-0x47],1
  409798:	push   eax
  409799:	fsub   DWORD PTR [edi+0x14]
  40979c:	cld    
  40979d:	leave  
  40979e:	enter  0xa705,0xe1
  4097a2:	xor    edi,DWORD PTR [ecx-0x7abc1fc8]
  4097a8:	push   ebx
  4097a9:	jo     0x409807
  4097ab:	inc    DWORD PTR [edx]
  4097ad:	or     al,BYTE PTR ds:0x59467400
  4097b3:	neg    DWORD PTR [eax]
  4097b5:	add    BYTE PTR ds:0x9e8c9a74,0xec
  4097bc:	add    BYTE PTR [eax-0x3a74ffa4],dl
  4097c2:	jg     0x409781
  4097c4:	(bad)  
  4097c7:	push   edi
  4097c9:	scas   eax,DWORD PTR es:[edi]
  4097ca:	scas   eax,DWORD PTR es:[edi]
  4097cb:	test   DWORD PTR [bp+di],0xafe0be6c
  4097d2:	or     al,0xe8
  4097d4:	inc    ecx
  4097d5:	xchg   esi,eax
  4097d6:	pop    esp
  4097d7:	call   eax
  4097d9:	(bad)  
  4097da:	popa   
  4097db:	test   eax,0xef755c4d
  4097e1:	arpl   WORD PTR [ebx+0x5c5db8b6],bp
  4097e7:	mov    ch,0x9f
  4097e9:	in     eax,dx
  4097ea:	pop    esi
  4097eb:	jmp    FWORD PTR [eax+0xe80d77]
	...
  4097f9:	add    BYTE PTR [eax],al
  4097fb:	add    BYTE PTR [ebx-0x6700a3d2],al
  409801:	arpl   WORD PTR [edx-0x280977a0],bx
  409807:	pop    ecx
  409808:	add    ch,BYTE PTR [ebx-0x39]
  40980b:	mov    cl,BYTE PTR [ecx-0xa]
  40980e:	(bad)  
  40980f:	pop    ecx
  409810:	inc    edx
  409811:	add    edi,DWORD PTR [eax+0x31f67059]
  409817:	or     al,0x5f
  409819:	jecxz  0x409893
  40981b:	pop    ecx
  40981c:	pusha  
  40981d:	div    BYTE PTR [ecx+0x38]
  409820:	pusha  
  409821:	neg    BYTE PTR [edi-0x689535a7]
  409827:	hlt    
  409828:	xor    dh,0x8f
  40982b:	pop    ecx
  40982c:	mov    bh,bh
  40982e:	(bad)  
  40982f:	pop    ecx
  409830:	cmp    BYTE PTR [ebx],cl
  409832:	sbb    ebx,DWORD PTR [ebx-0x708809d0]
  409838:	sbb    ebp,esi
  40983a:	outs   dx,DWORD PTR ds:[esi]
  40983b:	pop    ecx
  40983c:	shrd   DWORD PTR [esi],esi,0x59
  409840:	sbb    dh,dh
  409842:	cdq    
  409843:	ins    BYTE PTR es:[edi],dx
  409844:	or     dh,dh
  409846:	push   edi
  409847:	ins    BYTE PTR es:[edi],dx
  409848:	leave  
  409849:	mov    ebx,0xb000594f
  40984e:	dec    esi
  40984f:	push   ecx
  409850:	clc    
  409851:	cmc    
  409852:	push   esi
  409853:	adc    eax,0x5937f5ae
  409858:	mov    ds:0xe05937f2,al
  40985d:	or     al,BYTE PTR [edi]
  40985f:	fwait
	...
  40986c:	fdiv   st,st(5)
  40986e:	pop    ds
  40986f:	mov    edi,0x59d00bc8
  409874:	enter  0xff5,0xcf
  409878:	mov    esp,0xf79ea30a
  40987d:	bound  esi,QWORD PTR [esi]
  40987f:	inc    esi
  409880:	jmp    DWORD PTR [edx-0x6e]
  409883:	mov    WORD PTR [ebx+0x432d05e1],ds
  409889:	mov    DWORD PTR [esi],eax
  40988b:	sub    ebx,0xfffffff5
  40988e:	jb     0x409881
  409890:	sbb    al,0x39
  409892:	mov    al,0xde
  409894:	das    
  409895:	in     al,dx
  409896:	inc    edx
  409897:	aad    0x79
  409899:	lahf   
  40989a:	(bad)  
  40989b:	cmp    DWORD PTR [ebx-0x4d7ae80],ecx
  4098a1:	mov    cl,BYTE PTR [ecx+0x16]
  4098a4:	xor    al,0xf5
  4098a6:	idiv   esp
  4098a8:	aad    0xaa
  4098aa:	inc    edi
  4098ab:	jmp    0xa6fd8d7c
  4098b0:	scas   eax,DWORD PTR es:[edi]
  4098b1:	imul   eax,esi,0x6ea54615
  4098b7:	call   0x8ef89eb0
  4098bc:	sub    ebp,ebp
  4098be:	push   ebp
  4098bf:	xchg   BYTE PTR [ecx+0x5d],al
  4098c2:	out    dx,al
  4098c3:	jno    0x4098b3
  4098c5:	cmc    
  4098c6:	clc    
  4098c7:	xor    DWORD PTR [ebx+0x716ef8ba],0xb9fe9f
	...
  4098d9:	add    BYTE PTR [eax],al
  4098db:	add    BYTE PTR [ebx+esi*2],bl
  4098de:	push   ecx
  4098df:	test   al,0xf4
  4098e1:	mov    cl,BYTE PTR [ecx-0x42]
  4098e4:	xor    eax,0x9414f7f5
  4098e9:	stos   BYTE PTR es:[edi],al
  4098ea:	inc    edi
  4098eb:	jmp    0x3efdc24c
  4098f0:	dec    edi
  4098f1:	push   0xa4e7bdc6
  4098f6:	outs   dx,BYTE PTR ds:[esi]
  4098f7:	jmp    0x4098ed
  4098f9:	add    edi,DWORD PTR [eax+0x55ecc126]
  4098ff:	push   ds
  409900:	mov    ecx,0xfebdee5c
  409905:	repz clc 
  409907:	add    DWORD PTR [edi-0x45],eax
  40990a:	clc    
  40990b:	add    cl,bh
  40990d:	pop    es
  40990e:	xchg   DWORD PTR [edi+0x5f],edx
  409911:	pusha  
  409912:	stc    
  409913:	jne    0x4098ab
  409915:	mov    BYTE PTR [ecx-0x3],dh
  409918:	mov    DWORD PTR [ecx+edi*8+0x738c9a75],ecx
  40991f:	or     BYTE PTR [esi-0x56004c66],ah
  409925:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409926:	les    eax,FWORD PTR [esi+ecx*4]
  409929:	mov    bl,0x8b
  40992b:	in     al,dx
  40992c:	fbld   TBYTE PTR [edx-0x73560826]
  409932:	mov    eax,DWORD PTR [ebp-0x56]
  409935:	scas   eax,DWORD PTR es:[edi]
  409936:	div    DWORD PTR [ebp+0x3a]
  409939:	lea    esi,[ebx]
  40993b:	loope  0x409943
  40993d:	push   ds
  40993e:	stc    
  40993f:	out    0x0,eax
	...
  409949:	add    BYTE PTR [eax],al
  40994b:	add    ah,cl
  40994d:	ret    0x5
  409950:	push   ebp
  409951:	mov    al,ds:0x5e8f8509
  409956:	push   es
  409957:	add    BYTE PTR [ecx+0x22],ah
  40995a:	icebp  
  40995b:	add    BYTE PTR [esi],bl
  40995d:	pusha  
  40995e:	push   es
  40995f:	(bad)  
  409960:	rcl    DWORD PTR [edx+0x600e07f9],cl
  409966:	ins    BYTE PTR es:[edi],dx
  409967:	add    BYTE PTR [eax+eiz*2],ah
  40996a:	ins    BYTE PTR es:[edi],dx
  40996b:	add    BYTE PTR [eax+eiz*2],ah
  40996e:	mov    eax,DWORD PTR [ebp-0x5e]
  409971:	scas   al,BYTE PTR es:[edi]
  409972:	mov    DWORD PTR [ebp-0x65c5e],eax
  409978:	mov    cs,WORD PTR [ebx+esi*2-0x2edd608]
  40997f:	call   0x466d36
  409984:	aad    0x9f
  409986:	jb     0x40998d
  409988:	out    0xe2,eax
  40998a:	push   es
  40998b:	add    dh,bl
  40998d:	pop    es
  40998e:	mov    edx,0x4caf748
  409993:	inc    DWORD PTR [edx+0x16]
  409996:	ins    DWORD PTR es:[edi],dx
  409997:	mov    ch,0x6c
  409999:	pop    esp
  40999a:	push   ecx
  40999b:	push   eax
  40999c:	jl     0x4099f7
  40999e:	pop    DWORD PTR [ebp-0xb00b55]
  4099a4:	inc    edi
  4099a5:	fsubr  DWORD PTR [ebp+eiz*4+0x4c]
  4099a9:	cld    
  4099aa:	dec    edi
  4099ab:	mov    DWORD PTR [edx+0x19],esi
  4099ae:	dec    eax
  4099af:	inc    DWORD PTR [eax]
	...
  4099b9:	add    BYTE PTR [eax],al
  4099bb:	add    BYTE PTR [eax+0x78b75c21],al
  4099c1:	and    al,0xef
  4099c3:	(bad)  
  4099c4:	fdivr  DWORD PTR [edi+eiz*4-0x6a4b08c0]
  4099cb:	lock push 0x22ff4fac
  4099d1:	sub    ecx,ebp
  4099d3:	inc    eax
  4099d4:	not    ecx
  4099d6:	pop    ebx
  4099d7:	mov    edx,0x8589d448
  4099dc:	pop    ebx
  4099dd:	aam    0x4f
  4099df:	dec    ebp
  4099e1:	or     ebp,ebp
  4099e3:	(bad)  
  4099e4:	enter  0x24a,0xff
  4099e8:	bound  edi,QWORD PTR [ecx+0x48]
  4099eb:	jmp    DWORD PTR [eax]
  4099ed:	ins    BYTE PTR es:[edi],dx
  4099ee:	push   ss
  4099ef:	loope  0x4099a0
  4099f1:	dec    edx
  4099f2:	add    ch,al
  4099f4:	xor    bh,BYTE PTR [edi+0x7e7eff4f]
  4099fa:	popa   
  4099fb:	test   DWORD PTR [eax],0x90ffef8c
  409a01:	cmp    ch,BYTE PTR [eax-0x695708c0]
  409a07:	lock loopne 0x409a3b
  409a0a:	push   eax
  409a0b:	jmp    FWORD PTR [edx]
  409a0d:	fwait
  409a0e:	int    0x40
  409a10:	mul    DWORD PTR [ebx+0x63d0ba90]
  409a16:	and    BYTE PTR [edx+esi*2-0x3fa9effd],cl
  409a1d:	jge    0x409a0e
  409a1f:	jmp    0x409a21
	...
  409a29:	add    BYTE PTR [eax],al
  409a2b:	add    BYTE PTR [edx-0x4ffc5166],ah
  409a31:	mov    eax,0xf2a84dfe
  409a36:	test   DWORD PTR [edi],0x3ae9b96
  409a3c:	pop    esp
  409a3e:	xor    al,0x56
  409a40:	nop
  409a41:	fsubr  QWORD PTR [ecx+0x6c]
  409a44:	xor    dl,0xd7
  409a47:	jmp    0x6337:0xadc78a80
  409a4e:	enter  0x678f,0xfa
  409a52:	mov    edi,0xce386855
  409a57:	int3   
  409a58:	mov    bh,0x62
  409a5a:	mov    DWORD PTR [ecx-0x74580d63],0x55980f7a
  409a64:	dec    eax
  409a65:	out    0x59,al
  409a67:	pusha  
  409a68:	dec    eax
  409a69:	repnz pop DWORD PTR [ebx+eax*8]
  409a6d:	xchg   DWORD PTR [edi+edx*4+0x23],ebp
  409a71:	cli    
  409a72:	jg     0x409ac9
  409a74:	div    DWORD PTR [esi+0x1b]
  409a77:	and    DWORD PTR [edx-0x5],0x63185577
  409a7e:	repz mov al,0x98
  409a81:	(bad)  
  409a82:	out    dx,eax
  409a83:	fs dec ecx
  409a85:	repnz ror DWORD PTR [ebx],1
  409a88:	lidtd  [ebp+edx*2+0x6891f1f8]
	...
  409a9c:	call   0x6295da92
  409aa1:	pop    ebx
  409aa2:	push   edi
  409aa3:	ret    0xf1a4
  409aa6:	add    eax,0xedb84236
  409aab:	ss sub dh,dl
  409aae:	clc    
  409aaf:	pushf  
  409ab0:	cld    
  409ab1:	cli    
  409ab2:	xor    DWORD PTR [ebp+0x2a],edx
  409ab5:	repnz clc 
  409ab7:	pop    esp
  409ab8:	push   edi
  409ab9:	cli    
  409aba:	clc    
  409abb:	push   cs
  409abc:	dec    edx
  409abd:	js     0x409acd
  409abf:	adc    DWORD PTR [ecx],ecx
  409ac1:	mov    bh,0xf8
  409ac3:	dec    BYTE PTR [ebx-0x48]
  409ac6:	in     eax,0xfe
  409ac8:	inc    ebx
  409ac9:	repnz clc 
  409acb:	je     0x409ac9
  409acd:	cli    
  409ace:	sbb    eax,0xf8f2239d
  409ad3:	xchg   esp,eax
  409ad4:	enter  0xf8f9,0xd6
  409ad8:	and    edi,DWORD PTR [eax+0xe]
  409adb:	sar    esi,0xb6
  409ade:	clc    
  409adf:	mov    bl,0xb7
  409ae2:	loope  0x409a9a
  409ae4:	retf   
  409ae5:	icebp  
  409ae6:	in     eax,dx
  409ae7:	lds    ebp,FWORD PTR [edx-0xf]
  409aea:	clc    
  409aeb:	scas   al,BYTE PTR es:[edi]
  409aec:	cmp    esi,0xfaa3a6f0
  409af2:	out    0x57,al
  409af4:	stos   DWORD PTR es:[edi],eax
  409af5:	icebp  
  409af6:	clc    
  409af7:	pop    esp
  409af8:	int3   
  409af9:	stc    
  409afa:	clc    
  409afb:	mov    ds,WORD PTR [eax+ebx*1+0x86b0]
	...
  409b0a:	add    BYTE PTR [eax],al
  409b0c:	ret    
  409b0d:	icebp  
  409b0e:	mov    dl,0x89
  409b10:	mov    bl,0xf1
  409b12:	clc    
  409b13:	sub    DWORD PTR [edi-0x54910748],0xa35ed9b7
  409b1d:	icebp  
  409b1e:	in     eax,dx
  409b1f:	sub    DWORD PTR [edx-0xf],esi
  409b22:	clc    
  409b23:	push   esi
  409b24:	imul   esi,edx,0xf04b4ef0
  409b2a:	jb     0x409b2c
  409b2c:	out    0x7c,al
  409b2e:	xor    esi,edi
  409b30:	and    DWORD PTR [edi-0x60e14a07],edx
  409b36:	stc    
  409b37:	push   DWORD PTR [esi]
  409b39:	iret   
  409b3a:	scas   eax,DWORD PTR es:[edi]
  409b3b:	call   DWORD PTR [ecx]
  409b3d:	xchg   edi,eax
  409b3e:	inc    ebx
  409b3f:	clc    
  409b40:	out    0x25,eax
  409b42:	sti    
  409b43:	jmp    ecx
  409b45:	xchg   esi,eax
  409b46:	jae    0x409b44
  409b48:	mul    BYTE PTR [edx-0x6261ff5c]
  409b4e:	les    ecx,FWORD PTR [eax]
  409b50:	mov    es,ecx
  409b52:	mov    ebp,esp
  409b54:	or     eax,0x9e6afa30
  409b59:	cli    
  409b5a:	or     al,0xff
  409b5c:	sub    ebp,edi
  409b5e:	loopne 0x409b19
  409b60:	pop    ebp
  409b61:	xchg   esp,eax
  409b62:	stc    
  409b63:	mov    ebx,ecx
  409b65:	xchg   edx,eax
  409b66:	outs   dx,BYTE PTR ds:[esi]
  409b67:	hlt    
  409b68:	sub    DWORD PTR [esi],esp
  409b6a:	stc    
  409b6b:	(bad)  
  409b6c:	sub    ebp,edi
  409b6e:	loopne 0x409b66
	...
  409b7c:	mov    ds:0x1bfff994,eax
  409b81:	xchg   ebx,eax
  409b82:	stc    
  409b83:	jne    0x409bdb
  409b85:	mov    edx,fs
  409b87:	mov    bl,0x91
  409b89:	xchg   esp,eax
  409b8a:	iret   
  409b8b:	ret    0x645a
  409b8e:	push   ebx
  409b8f:	mov    esi,DWORD PTR [edx-0x1a]
  409b92:	rcl    eax,0x89
  409b95:	xchg   esp,eax
  409b96:	stc    
  409b97:	(bad)  
  409b98:	fist   DWORD PTR [edx-0xfd400aa]
  409b9e:	div    DWORD PTR ds:0x45af6f
  409ba4:	jbe    0x409bc4
  409ba6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409ba7:	add    BYTE PTR [esi],bl
  409ba9:	icebp  
  409baa:	mov    eax,0x4609b0f
  409baf:	add    bh,dh
  409bb1:	stc    
  409bb2:	dec    ebx
  409bb3:	inc    ebp
  409bb4:	out    dx,eax
  409bb5:	stc    
  409bb6:	add    al,0x0
  409bb8:	test   DWORD PTR [eax-0x31],0x508e0f3
  409bbf:	add    BYTE PTR [ebp-0x6],cl
  409bc2:	(bad)  
  409bc4:	pop    esi
  409bc5:	cli    
  409bc6:	(bad)  
  409bc8:	jnp    0x409b88
  409bca:	push   eax
  409bcb:	push   eax
  409bcc:	jb     0x409b54
  409bce:	pop    esi
  409bcf:	idiv   DWORD PTR [eax+0x2afeb258]
  409bd5:	push   edx
  409bd6:	push   ebp
  409bd7:	jne    0x409b84
  409bd9:	push   ecx
  409bda:	mov    ecx,0xf7f9f7a1
  409bdf:	mov    edi,0x0
	...
  409bec:	and    edi,edi
  409bee:	pop    ecx
  409bef:	std    
  409bf0:	idiv   cl
  409bf2:	add    al,0x68
  409bf4:	dec    edx
  409bf5:	xor    ebx,eax
  409bf7:	inc    DWORD PTR [ecx+0x5be80696]
  409bfd:	rcl    BYTE PTR [ebx-0x1],cl
  409c00:	jl     0x409bab
  409c02:	test   DWORD PTR [ebp-0xac4f9d],eax
  409c08:	(bad)  
  409c09:	dec    ebx
  409c0a:	pop    edx
  409c0b:	loope  0x409bab
  409c0d:	mov    eax,0xa97a8953
  409c12:	pop    ebx
  409c13:	dec    DWORD PTR [eax+0x53]
  409c16:	add    ch,BYTE PTR [eax-0x59]
  409c19:	mov    eax,ds:0x8e39ffc3
  409c1e:	push   ebp
  409c1f:	div    DWORD PTR [eax]
  409c21:	loopne 0x409c76
  409c23:	xor    eax,0xffc33116
  409c28:	sbb    cl,dl
  409c2a:	mov    edi,?
  409c2c:	sbb    BYTE PTR [edx-0x7ff71b72],al
  409c32:	push   esp
  409c33:	push   0xfffffff7
  409c35:	(bad)  
  409c36:	xlat   BYTE PTR ds:[ebx]
  409c37:	les    ebp,FWORD PTR [eax+0x4252efa1]
  409c3d:	repnz push edi
  409c3f:	push   edx
  409c40:	lock out dx,al
  409c42:	adc    DWORD PTR [ebp+0x3f],esp
  409c45:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409c46:	out    dx,eax
  409c47:	pop    ebx
  409c48:	lods   eax,DWORD PTR ds:[esi]
  409c49:	stos   DWORD PTR es:[edi],eax
  409c4a:	aaa    
  409c4b:	push   edx
  409c4c:	outs   dx,BYTE PTR ds:[esi]
  409c4d:	call   0x40f694
	...
  409c5a:	add    BYTE PTR [eax],al
  409c5c:	shr    dh,1
  409c5e:	les    eax,FWORD PTR [ebx]
  409c60:	pop    edi
  409c61:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409c62:	mov    esp,0x5351edc0
  409c68:	shr    dh,0xf
  409c6b:	push   edx
  409c6c:	jmp    0x5306:0xa8c4a703
  409c73:	mov    esp,DWORD PTR [eax-0x70778a12]
  409c79:	imul   bh
  409c7b:	push   ecx
  409c7c:	sbb    eax,0x20b68763
  409c81:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409c82:	out    dx,eax
  409c83:	push   eax
  409c84:	dec    edx
  409c85:	repz iret 
  409c87:	push   ecx
  409c88:	js     0x409c78
  409c8a:	sbb    DWORD PTR [ebx-0x41],esp
  409c8d:	mov    ds:0xab795bef,eax
  409c92:	mov    edi,0xcee86e51
  409c97:	pop    ecx
  409c98:	pop    eax
  409c99:	out    dx,al
  409c9a:	popa   
  409c9b:	xchg   DWORD PTR [ebx],ebp
  409c9d:	mul    BYTE PTR [edi+0x347aa751]
  409ca3:	lods   al,BYTE PTR ds:[esi]
  409ca4:	mov    bh,0x62
  409ca6:	cwde   
  409ca7:	xchg   edi,eax
  409ca8:	inc    edi
  409ca9:	test   BYTE PTR [edi-0x71c7cfaf],0xbc
  409cb0:	mov    bh,0x62
  409cb2:	xchg   edi,eax
  409cb3:	(bad)  [eax-0x12]
  409cb6:	ja     0x409cb5
  409cb8:	pop    eax
  409cb9:	ja     0x409cc1
  409cbb:	sar    BYTE PTR [ebx-0x50],1
  409cbe:	shl    DWORD PTR [esi+0x0],1
	...
  409cc9:	add    BYTE PTR [eax],al
  409ccb:	add    BYTE PTR [esi+0x4dc01ed],ah
  409cd1:	in     eax,dx
  409cd2:	xor    eax,0xf10f706e
  409cd7:	push   esi
  409cd8:	inc    esi
  409cd9:	xchg   ebx,eax
  409cda:	out    dx,al
  409cdb:	adc    DWORD PTR [eax-0x20ad0713],eax
  409ce1:	pop    eax
  409ce2:	(bad)  
  409ce3:	mov    ch,0xee
  409ce5:	xchg   edx,eax
  409ce6:	out    dx,al
  409ce7:	add    eax,0x26f8ed68
  409cec:	jo     0x409cfc
  409cee:	icebp  
  409cef:	es es pop eax
  409cf2:	push   es
  409cf3:	jmp    0x39c37cec
  409cf8:	dec    esi
  409cf9:	out    dx,al
  409cfa:	clc    
  409cfb:	mov    ecx,0xa85e95cc
  409d00:	hlt    
  409d01:	in     eax,dx
  409d02:	mov    dl,0xf9
  409d04:	aas    
  409d05:	out    dx,al
  409d06:	clc    
  409d07:	imul   cl
  409d09:	add    ecx,DWORD PTR [esi-0x58]
  409d0c:	hlt    
  409d0d:	cli    
  409d0e:	sbb    ah,BYTE PTR [ecx+0x648eee27]
  409d14:	int3   
  409d15:	cmc    
  409d16:	clc    
  409d17:	(bad)  
  409d18:	jnp    0x409cc9
  409d1a:	loope  0x409cf2
  409d1c:	(bad)  
  409d1d:	in     eax,dx
  409d1e:	add    eax,0x5c978f6
  409d23:	jmp    0xc5fb7f1c
  409d28:	scas   eax,DWORD PTR es:[edi]
  409d29:	in     eax,dx
  409d2a:	clc    
  409d2b:	jmp    0xe9c88427
	...
  409d3c:	hlt    
  409d3d:	bound  eax,QWORD PTR [ebp-0x70a63a4]
  409d43:	xchg   esi,eax
  409d44:	hlt    
  409d45:	pop    ebp
  409d46:	sub    BYTE PTR [eax-0xc],0x62
  409d4a:	push   es
  409d4b:	add    BYTE PTR [esi],al
  409d4d:	idiv   eax
  409d4f:	out    dx,al
  409d50:	fcom   DWORD PTR [edx+0x1d760873]
  409d56:	mov    dh,0xff
  409d58:	cdq    
  409d59:	xchg   edx,eax
  409d5a:	mov    bl,0xec
  409d5c:	mov    eax,ds:0x23fff992
  409d61:	jmp    0x93d06e46
  409d66:	stc    
  409d67:	inc    DWORD PTR [ebx+0x39fff188]
  409d6d:	xchg   ebx,eax
  409d6e:	jae    0x409d78
  409d70:	inc    esi
  409d71:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409d72:	mov    bh,0xff
  409d74:	or     DWORD PTR [ebx-0x6cfe1b4d],edx
  409d7a:	stc    
  409d7b:	jmp    DWORD PTR [ebx-0x18]
  409d7e:	loopne 0x409d34
  409d80:	pop    ds
  409d81:	xchg   ebx,eax
  409d82:	stc    
  409d83:	call   DWORD PTR [ebx+0x3c]
  409d86:	icebp  
  409d87:	(bad)  
  409d88:	stc    
  409d89:	xchg   edx,eax
  409d8a:	jae    0x409d94
  409d8c:	push   es
  409d8d:	and    al,0xb6
  409d8f:	call   FWORD PTR [ecx-0x6e1f4c64]
  409d95:	pushf  
  409d96:	stc    
  409d97:	inc    DWORD PTR [ebx]
  409d99:	call   0x9ca0367e
  409d9e:	stc    
  409d9f:	add    DWORD PTR [eax],0x0
	...
  409daa:	add    BYTE PTR [eax],al
  409dac:	pop    ebx
  409dad:	aas    
  409dae:	icebp  
  409daf:	dec    DWORD PTR [ecx+0x67]
  409db2:	jb     0x409dcf
  409db4:	fst    st(1)
  409db6:	aad    0xf7
  409db8:	cmp    DWORD PTR [edx+eax*1-0x7c96c38b],ebx
  409dbf:	fcom   DWORD PTR [ecx+0x4efff99c]
  409dc5:	popf   
  409dc6:	jae    0x409dd0
  409dc8:	data16 jmp 0x409d80
  409dcb:	call   FWORD PTR [ecx-0x78]
  409dce:	or     al,0x6a
  409dd0:	idiv   ecx
  409dd2:	inc    edi
  409dd3:	jne    0x409dd4
  409dd5:	loope  0x409dd0
  409dd7:	mov    al,0x20
  409dd9:	in     eax,0x48
  409ddb:	mov    ch,0x13
  409ddd:	jne    0x409e28
  409ddf:	call   FWORD PTR [edi]
  409de1:	inc    esi
  409de2:	sahf   
  409de3:	dec    DWORD PTR [eax]
  409de5:	jge    0x409d86
  409de7:	in     al,dx
  409de8:	or     BYTE PTR [ebp-0x2a4917b7],al
  409dee:	dec    eax
  409def:	push   eax
  409df1:	into   
  409df2:	pop    ecx
  409df3:	imul   eax
  409df5:	pushf  
  409df6:	pop    edx
  409df7:	ss stos DWORD PTR es:[edi],eax
  409df9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409dfa:	dec    ecx
  409dfb:	jmp    DWORD PTR [edx-0x2f00ae67]
  409e01:	mov    eax,ds:0x3cc8b41d
  409e06:	dec    ecx
  409e07:	mov    ch,0x9f
  409e09:	dec    esp
  409e0a:	dec    ecx
  409e0b:	dec    edi
  409e0d:	sbb    DWORD PTR [ecx+0xff],edx
	...
  409e1b:	add    BYTE PTR [eax-0x5f0f60ac],dh
  409e21:	pop    esp
  409e22:	dec    ecx
  409e23:	call   0xff89cc32
  409e28:	cwde   
  409e29:	(bad)  
  409e2a:	dec    esp
  409e2b:	jmp    0xff8894da
  409e30:	mov    BYTE PTR [esi+0x49],dh
  409e33:	call   0x4577fe
  409e38:	scas   al,BYTE PTR es:[edi]
  409e39:	mov    bh,0xfc
  409e3b:	dec    ebx
  409e3d:	sbb    BYTE PTR [ecx-0x7d],0x33
  409e41:	sbb    eax,0xf6ceffdf
  409e46:	inc    edi
  409e47:	jne    0x409e38
  409e49:	adc    DWORD PTR [eax],esp
  409e4b:	mov    cl,0x50
  409e4d:	mov    ah,0x79
  409e4f:	inc    ebp
  409e50:	dec    ebx
  409e51:	mov    eax,ds:0x62b65824
  409e56:	out    dx,eax
  409e57:	dec    esi
  409e58:	ret    0x975a
  409e5b:	shl    BYTE PTR [ebx],1
  409e5d:	jmp    0x409dee
  409e5f:	dec    esi
  409e60:	mov    ds:0xf8d887ee,al
  409e65:	cli    
  409e66:	sbb    al,0x95
  409e68:	sbb    bl,ch
  409e6a:	mov    ch,0x41
  409e6c:	sti    
  409e6d:	bound  ebx,QWORD PTR [edx]
  409e6f:	jnp    0x409e8c
  409e71:	loope  0x409e15
  409e73:	aas    
  409e74:	or     bl,ch
  409e76:	pop    edi
  409e77:	xor    BYTE PTR [edx+0x6a4ebeee],0x57
  409e7e:	push   eax
  409e7f:	sbb    BYTE PTR [eax],al
	...
  409e89:	add    BYTE PTR [eax],al
  409e8b:	add    dh,dl
  409e8d:	fwait
  409e8e:	scas   al,BYTE PTR es:[edi]
  409e8f:	add    ecx,edi
  409e91:	add    ah,BYTE PTR [eax+0x3]
  409e94:	neg    DWORD PTR [ebp+0x2f]
  409e97:	(bad)  
  409e98:	jnp    0x409e24
  409e9a:	in     eax,dx
  409e9b:	add    esi,edi
  409e9d:	and    DWORD PTR [edx-0x109d08b5],esp
  409ea3:	add    esi,DWORD PTR [eax-0x7b1ec60]
  409ea9:	(bad)  
  409eaa:	out    dx,eax
  409eab:	fldcw  WORD PTR [eax-0x5f261084]
  409eb1:	jl     0x409ea2
  409eb3:	xor    BYTE PTR [edx],0xef
  409eb6:	sahf   
  409eb7:	cmp    BYTE PTR [edx-0x11],0xf7
  409ebb:	dec    ebp
  409ebc:	mov    BYTE PTR [ebx-0x15772818],dl
  409ec2:	pop    ecx
  409ec3:	push   eax
  409ec4:	(bad)  
  409ec5:	lods   al,BYTE PTR ds:[esi]
  409ec6:	ja     0x409ecc
  409ec8:	neg    DWORD PTR [ebp-0x51]
  409ecb:	fdiv   st,st(3)
  409ecd:	sti    
  409ece:	or     al,0x2
  409ed0:	mul    DWORD PTR [edx+0x57]
  409ed3:	(bad)  
  409ed4:	scas   eax,DWORD PTR es:[edi]
  409ed5:	mov    ds:0x56ca4cef,eax
  409eda:	push   es
  409edb:	ror    DWORD PTR [ebp-0x4f],0xf8
  409edf:	scas   al,BYTE PTR es:[edi]
  409ee0:	mov    esi,0x9f6c8b12
  409ee5:	icebp  
  409ee6:	clc    
  409ee7:	sahf   
  409ee8:	imul   edx,DWORD PTR [esi+ebp*8-0x7157dda],0x60
	...
  409efc:	js     0x409ef1
  409efe:	lock xchg BYTE PTR [edx-0x55527d29],ch
  409f05:	jmp    0xc6bb902
  409f0a:	pop    esi
  409f0b:	sub    bl,bh
  409f0d:	jmp    0xe9e2f8c4
  409f12:	clc    
  409f13:	pop    esi
  409f14:	or     BYTE PTR [esi+ecx*2],al
  409f17:	test   al,0xf4
  409f19:	cli    
  409f1a:	push   esi
  409f1b:	xchg   edi,eax
  409f1c:	xor    ch,dl
  409f1e:	mov    gs,WORD PTR [edi+ecx*2-0xe]
  409f22:	clc    
  409f23:	lods   eax,DWORD PTR ds:[esi]
  409f25:	jmp    0xa2dbd88a
  409f2a:	push   es
  409f2b:	cs push 0x2a26f0f2
  409f31:	jmp    0x106:0xa2730832
  409f38:	push   es
  409f39:	mov    cl,0xf8
  409f3b:	push   cs
  409f3c:	sbb    al,0xe0
  409f3e:	jmp    0x6c2acb41
  409f43:	jmp    0xa89e8df4
  409f48:	hlt    
  409f49:	jmp    0xea6c9900
  409f4e:	clc    
  409f4f:	out    0xe1,al
  409f51:	add    ecx,DWORD PTR [esi+0x28]
  409f54:	sti    
  409f55:	cli    
  409f56:	adc    bl,BYTE PTR [edi+0x648ee9bb]
  409f5c:	mov    esp,0xf8f1
	...
  409f69:	add    BYTE PTR [eax],al
  409f6b:	add    BYTE PTR [ecx],dh
  409f6d:	or     edi,ecx
  409f6f:	addr16 pop esi
  409f71:	mov    esp,0xd0810045
  409f76:	cmc    
  409f77:	not    DWORD PTR [ecx+0x6f35f996]
  409f7d:	lods   eax,DWORD PTR ds:[esi]
  409f7e:	inc    ebp
  409f7f:	add    BYTE PTR [esi-0x7e004c72],al
  409f85:	ins    BYTE PTR es:[edi],dx
  409f86:	and    eax,0xffffff89
  409f89:	xchg   esi,eax
  409f8a:	stc    
  409f8b:	lea    ecx,[ebx-0x6e000ec3]
  409f91:	mov    ch,0x60
  409f93:	sti    
  409f94:	out    0x25,al
  409f96:	stc    
  409f97:	dec    bl
  409f99:	xchg   ebp,eax
  409f9a:	icebp  
  409f9b:	call   DWORD PTR [ecx-0x591ecc6a]
  409fa1:	and    eax,0xd12ae7f9
  409fa6:	clc    
  409fa7:	call   ebp
  409fa9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409faa:	jb     0x409fbf
  409fac:	dec    ebp
  409fad:	(bad)  
  409faf:	not    DWORD PTR [ecx]
  409fb1:	xchg   edi,eax
  409fb2:	add    dh,BYTE PTR [ebp-0x2c]
  409fb5:	xchg   edi,eax
  409fb6:	ss (bad) 
  409fb8:	pop    ebx
  409fb9:	cmp    cl,dh
  409fbb:	call   DWORD PTR [ecx]
  409fbd:	mov    ecx,DWORD PTR [edi+eax*8]
  409fc0:	sbb    edi,DWORD PTR [eax]
  409fc2:	icebp  
  409fc3:	inc    DWORD PTR [ecx]
  409fc5:	icebp  
  409fc6:	clc    
  409fc7:	dec    DWORD PTR [esi-0x236a1f4c]
  409fcd:	xchg   esi,eax
  409fce:	stc    
  409fcf:	lea    eax,[eax]
	...
  409fd9:	add    BYTE PTR [eax],al
  409fdb:	add    BYTE PTR [ebx],bl
  409fdd:	xor    al,0xf1
  409fdf:	inc    DWORD PTR [ecx+0x66e360b5]
  409fe5:	and    eax,0x8f5bfef9
  409fea:	icebp  
  409feb:	call   DWORD PTR [ecx-0x64]
  409fee:	xor    esp,ecx
  409ff0:	test   DWORD PTR [ecx-0x3d],0x976a58ff
  409ff7:	call   FWORD PTR [eax-0xb]
  409ffa:	inc    esp
  409ffb:	je     0x409fe1
  409ffd:	jl     0x409f8e
  409fff:	rol    BYTE PTR [eax-0x4f],1
  40a002:	dec    esp
  40a003:	add    al,0xca
  40a005:	add    ecx,DWORD PTR [eax+esi*1+0x68]
  40a009:	ja     0x40a041
  40a00b:	div    DWORD PTR [eax]
  40a00d:	leave  
  40a00e:	pop    eax
  40a00f:	or     dh,BYTE PTR [eax]
  40a011:	ja     0x40a049
  40a013:	mul    DWORD PTR [eax]
  40a015:	fld    DWORD PTR [ecx]
  40a017:	add    bh,dh
  40a019:	stc    
  40a01a:	mov    ah,0xe7
  40a01c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a01d:	sub    ecx,DWORD PTR [ebp-0x1]
  40a020:	je     0x40a051
  40a022:	test   WORD PTR [eax],0x279
  40a027:	je     0x409fe1
  40a029:	jl     0x409fba
  40a02b:	aam    0xe8
  40a02d:	mov    BYTE PTR [ebp+0x2],cl
  40a030:	bound  ecx,QWORD PTR [eax-0x28]
  40a033:	push   DWORD PTR [ebx+0x7e]
  40a036:	ds neg eax
  40a039:	mov    al,ds:0x9d8afeb2
  40a03e:	push   ebp
  40a03f:	inc    DWORD PTR [eax]
	...
  40a049:	add    BYTE PTR [eax],al
  40a04b:	add    al,cl
  40a04d:	mov    eax,ds:0x38c0db9a
  40a052:	stc    
  40a053:	mov    edi,0xbd7ff343
  40a058:	ret    
  40a059:	push   eax
  40a05a:	dec    ebp
  40a05b:	push   edi
  40a05d:	(bad)  
  40a05e:	cmc    
  40a05f:	(bad)  
  40a060:	push   0x5d
  40a062:	push   ebp
  40a063:	call   FWORD PTR [eax-0x6f4e0eaf]
  40a069:	call   0xe8d425b1
  40a06e:	dec    ebx
  40a06f:	push   edi
  40a071:	stc    
  40a072:	add    al,0x0
  40a074:	je     0x40a0d8
  40a076:	mov    ds:0xd7e7685f,al
  40a07b:	add    esp,ebx
  40a07d:	jnp    0x40a0eb
  40a07f:	mov    BYTE PTR [ebx-0x11],dl
  40a082:	(bad)  
  40a083:	dec    edx
  40a084:	imul   DWORD PTR [esi+0x4d]
  40a087:	xchg   DWORD PTR [edx+0x484aaffa],edx
  40a08d:	bound  edi,QWORD PTR [ebx]
  40a08f:	lods   eax,DWORD PTR ds:[esi]
  40a090:	fsub   DWORD PTR [edi+ebp*8+0x5a]
  40a094:	jns    0x40a07d
  40a096:	sbb    esp,edi
  40a098:	sbb    ah,dl
  40a09a:	dec    eax
  40a09b:	dec    edx
  40a09c:	sub    bh,ah
  40a09e:	pop    ecx
  40a09f:	push   edi
  40a0a0:	sub    bh,ah
  40a0a2:	xchg   DWORD PTR [edx-0x5e],ecx
  40a0a5:	pop    edx
  40a0a6:	xchg   edi,eax
  40a0a7:	popa   
  40a0a8:	popa   
  40a0a9:	out    0x77,eax
  40a0ab:	dec    edx
  40a0ac:	inc    edx
  40a0ad:	cli    
  40a0ae:	ja     0x40a0fa
	...
  40a0bc:	add    bh,ah
  40a0be:	icebp  
  40a0bf:	sti    
  40a0c0:	adc    BYTE PTR [edx],cl
  40a0c2:	xchg   ecx,eax
  40a0c3:	dec    edx
  40a0c4:	lock out 0x91,al
  40a0c7:	aaa    
  40a0c8:	loopne 0x40a0b0
  40a0ca:	dec    edi
  40a0cb:	dec    edx
  40a0cc:	stos   BYTE PTR es:[edi],al
  40a0cd:	dec    DWORD PTR [edi+0x4a]
  40a0d0:	fsub   st,st(6)
  40a0d2:	mov    ecx,0x88cbd8fb
  40a0d7:	dec    edx
  40a0d8:	enter  0x79e6,0x27
  40a0dc:	enter  0x27e6,0x4a
  40a0e0:	inc    edx
  40a0e1:	pop    ebx
  40a0e2:	pop    ss
  40a0e3:	scas   eax,DWORD PTR es:[edi]
  40a0e4:	(bad)  
  40a0e5:	out    0x17,al
  40a0e7:	dec    edx
  40a0e8:	bound  eax,QWORD PTR [ebx]
  40a0ea:	sbb    BYTE PTR [edx-0x60],cl
  40a0ed:	out    0x91,al
  40a0ef:	sti    
  40a0f0:	nop
  40a0f1:	mov    ebx,0xe6904a50
  40a0f6:	xor    DWORD PTR [edi-0x80],ebx
  40a0f9:	out    0x5,al
  40a0fb:	neg    BYTE PTR ds:0x2eeeb6d9
  40a101:	out    0xb2,al
  40a103:	aad    0xc6
  40a105:	in     eax,0xf8
  40a107:	sar    DWORD PTR [esi],1
  40a109:	mov    bl,0xf8
  40a10b:	(bad)  
  40a10c:	scas   al,BYTE PTR es:[edi]
  40a10d:	scas   eax,DWORD PTR es:[edi]
  40a10e:	in     eax,dx
  40a10f:	(bad)  
  40a110:	scas   al,BYTE PTR es:[edi]
  40a111:	in     eax,0xed
  40a113:	cmp    eax,0xbef8e664
  40a118:	js     0x40a11d
  40a11a:	icebp  
  40a11b:	mov    dh,0xae
  40a11d:	cli    
  40a11e:	outs   dx,BYTE PTR ds:[esi]
  40a11f:	js     0x40a121
	...
  40a129:	add    BYTE PTR [eax],al
  40a12b:	add    BYTE PTR [esi-0x34a3071b],ch
  40a131:	in     eax,dx
  40a132:	clc    
  40a133:	sahf   
  40a134:	retf   
  40a135:	test   BYTE PTR [edi+0x42e5ae96],dh
  40a13b:	xchg   ecx,eax
  40a13c:	mov    esp,0xbe86fab2
  40a141:	in     eax,0x72
  40a143:	jge    0x40a0f0
  40a145:	push   0x1bf4e99b
  40a14a:	(bad)
  40a14e:	lea    edx,[ebp+0x7a]
  40a151:	push   ds
  40a152:	repnz shl esp,cl
  40a155:	js     0x40a15f
  40a157:	push   esi
  40a158:	mov    al,0x5d
  40a15a:	out    dx,al
  40a15b:	fnstcw WORD PTR [esi-0x1b]
  40a15e:	clc    
  40a15f:	jo     0x40a0f1
  40a161:	jmp    0xf6358ad3
  40a166:	mov    bh,0xc1
  40a168:	cwde   
  40a169:	lea    eax,[edi-0x17]
  40a16c:	pushf  
  40a16d:	jp     0x40a1cd
  40a16f:	test   al,0xf4
  40a171:	in     eax,0x72
  40a173:	icebp  
  40a174:	dec    esp
  40a175:	mov    bl,ah
  40a177:	push   ss
  40a178:	fadd   DWORD PTR cs:[edx+0x11]
  40a17c:	arpl   WORD PTR [ebp-0x4b],di
  40a17f:	add    BYTE PTR [esi+0x20],dl
  40a182:	stc    
  40a183:	add    DWORD PTR [bp+si+0x45],edi
  40a188:	mov    DWORD PTR [edi+eiz*8+0x48],edx
  40a18c:	dec    edi
  40a18d:	popa   
  40a18e:	out    dx,al
  40a18f:	sbb    eax,0x0
	...
  40a19c:	xchg   edx,eax
  40a19d:	call   0x8923:0x159e0bf9
  40a1a4:	adc    edx,DWORD PTR [ebx-0x75b1fe92]
  40a1aa:	mov    eax,0xe0e713ff
  40a1af:	mov    ds:0xfff99a7b,al
  40a1b4:	add    edx,DWORD PTR [edi-0x657d8a07]
  40a1ba:	jae    0x40a1c4
  40a1bc:	xchg   BYTE PTR [edi],ah
  40a1be:	stos   DWORD PTR es:[edi],eax
  40a1bf:	dec    DWORD PTR [ecx+0x76f4739a]
  40a1c5:	ss mov dh,0xff
  40a1c8:	imul   ecx,DWORD PTR [ecx],0x5edf58bc
  40a1ce:	stc    
  40a1cf:	jne    0x40a1d7
  40a1d1:	mov    eax,edi
  40a1d3:	cld    
  40a1d4:	mov    DWORD PTR [edx-0x65758a07],ebx
  40a1da:	jae    0x40a1e4
  40a1dc:	inc    esi
  40a1dd:	and    DWORD PTR [ebx-0x3bd6b601],ebp
  40a1e3:	add    al,0xce
  40a1e5:	mov    ch,0x8b
  40a1e7:	in     al,dx
  40a1e8:	dec    ebp
  40a1e9:	and    al,0xfa
  40a1eb:	push   0xffffffde
  40a1ed:	push   es
  40a1ee:	or     bh,bh
  40a1f0:	sub    eax,0xffffffe0
  40a1f3:	in     eax,0x7b
  40a1f5:	fwait
  40a1f6:	stc    
  40a1f7:	mov    DWORD PTR [ebx-0x61ff9164],edx
  40a1fd:	mov    edi,DWORD PTR [eax+0x68]
	...
  40a20b:	add    BYTE PTR [edx-0x8ffba47],bl
  40a211:	loope  0x40a1ff
  40a213:	pop    eax
  40a214:	ss cli 
  40a216:	dec    ebp
  40a217:	jne    0x40a218
  40a219:	push   ecx
  40a21a:	xor    eax,0x40e588d9
  40a21f:	jne    0x40a1a4
  40a221:	in     eax,dx
  40a222:	retf   0x8f07
  40a225:	cld    
  40a226:	sahf   
  40a227:	push   DWORD PTR [eax-0x4d]
  40a22a:	inc    ebx
  40a22b:	add    al,0xf7
  40a22d:	cs jge 0x40a21c
  40a230:	je     0x40a1e8
  40a232:	dec    ebp
  40a233:	push   0xfffffff7
  40a235:	lahf   
  40a236:	repnz dec dl
  40a239:	icebp  
  40a23a:	pop    esp
  40a23b:	stos   BYTE PTR es:[edi],al
  40a23c:	call   0xd9ad:0xba8940a5
  40a243:	(bad)  
  40a244:	cmp    BYTE PTR [ebp-0x5d2a9781],ah
  40a24a:	ret    
  40a24b:	call   DWORD PTR [eax-0x8bf55e4]
  40a251:	int3   
  40a252:	(bad)  
  40a253:	pop    es
  40a254:	movq   mm5,QWORD PTR [ebx]
  40a257:	call   DWORD PTR [eax]
  40a259:	push   eax
  40a25a:	add    ch,BYTE PTR [eax-0x6d]
  40a25d:	inc    edx
  40a25e:	ret    
  40a25f:	call   FWORD PTR [eax-0x8bf54c1]
  40a265:	je     0x40a27e
  40a267:	loope  0x40a2a8
  40a269:	mov    ebx,0xc94ee804
  40a26e:	inc    eax
  40a26f:	inc    DWORD PTR [eax]
	...
  40a279:	add    BYTE PTR [eax],al
  40a27b:	add    ah,ch
  40a27d:	cmp    esi,edx
  40a27f:	and    ecx,DWORD PTR [edi-0x46]
  40a282:	test   eax,0x5cc9f740
  40a287:	and    eax,0x50412483
  40a28c:	dec    edi
  40a28d:	cli    
  40a28e:	add    al,0xef
  40a290:	jns    0x40a2b3
  40a292:	daa    
  40a293:	pop    ecx
  40a294:	ss arpl di,bp
  40a297:	mov    bl,0xa9
  40a299:	ins    DWORD PTR es:[edi],dx
  40a29a:	neg    DWORD PTR [ebx+0x7]
  40a29d:	or     dl,BYTE PTR [eax]
  40a29f:	inc    edi
  40a2a0:	(bad)
  40a2a4:	nop
  40a2a5:	jecxz  0x40a320
  40a2a7:	inc    edi
  40a2a8:	mov    BYTE PTR [ebp-0x9],ch
  40a2ab:	pop    ebx
  40a2ac:	jae    0x40a263
  40a2ae:	out    dx,eax
  40a2af:	inc    esi
  40a2b0:	scas   al,BYTE PTR es:[edi]
  40a2b1:	and    bl,ah
  40a2b3:	add    ecx,edx
  40a2b5:	xlat   BYTE PTR ds:[ebx]
  40a2b6:	rol    BYTE PTR [edx-0x50cf19cd],cl
  40a2bc:	into   
  40a2bd:	bound  eax,QWORD PTR [ebp-0xb]
  40a2c0:	pop    ecx
  40a2c1:	ins    DWORD PTR es:[edi],dx
  40a2c2:	out    0x5b,eax
  40a2c4:	and    DWORD PTR [esi-0x6281b941],esi
  40a2ca:	mov    ebx,0x277e0a7a
  40a2cf:	lds    edi,FWORD PTR [eax]
  40a2d1:	fsubr  st,st(1)
  40a2d3:	fdivr  QWORD PTR [eax-0x177c105f]
  40a2d9:	bound  edx,QWORD PTR [ebx]
  40a2db:	mov    ebx,0xc5367298
	...
  40a2ec:	sbb    BYTE PTR [edi+eax*4-0x109d9346],cl
  40a2f3:	cli    
  40a2f4:	dec    eax
  40a2f5:	outs   dx,BYTE PTR ds:[esi]
  40a2f6:	ret    0x18ad
  40a2f9:	ret    
  40a2fa:	xor    eax,0xf679f846
  40a2ff:	lods   al,BYTE PTR ds:[esi]
  40a300:	aaa    
  40a301:	arpl   WORD PTR [edi+0x5816a25b],di
  40a307:	inc    esi
  40a308:	inc    edi
  40a309:	dec    ebx
  40a30a:	out    dx,eax
  40a30b:	add    ecx,eax
  40a30d:	and    DWORD PTR [edi+0x576b4a46],edi
  40a313:	inc    ebx
  40a314:	mov    ds:0x915b37e2,al
  40a319:	adc    al,BYTE PTR [esi]
  40a31b:	ss xor esi,ecx
  40a31e:	push   es
  40a31f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a320:	je     0x40a2c3
  40a322:	push   es
  40a323:	pushf  
  40a324:	ds sub edx,edi
  40a327:	fidiv  DWORD PTR [esp+ebx*1]
  40a32a:	stc    
  40a32b:	push   ss
  40a32c:	xor    edx,esp
  40a32e:	repz aas 
  40a330:	cld    
  40a331:	imul   esi,DWORD PTR [ebx+0x3c],0xfefa5831
  40a338:	mov    al,0x6a
  40a33a:	out    dx,al
  40a33b:	jecxz  0x40a39c
  40a33d:	loop   0x40a337
  40a33f:	mov    ds,WORD PTR [edx-0xb123c55]
  40a345:	aaa    
  40a346:	(bad)  
  40a347:	int    0x76
  40a349:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a34a:	stc    
  40a34b:	inc    ebx
  40a34c:	repz dec esp
  40a34e:	adc    al,0xce
	...
  40a35c:	inc    eax
  40a35d:	push   0xffffffee
  40a35f:	xchg   ebp,eax
  40a360:	outs   dx,DWORD PTR ds:[esi]
  40a361:	loop   0x40a35b
  40a363:	jo     0x40a2e5
  40a365:	fisubr WORD PTR [ebp-0x17]
  40a368:	hlt    
  40a369:	shl    DWORD PTR [edi+0x473ba841],1
  40a36f:	jmp    0x289f89c0
  40a374:	sti    
  40a375:	loope  0x40a3e9
  40a377:	loope  0x40a335
  40a379:	stc    
  40a37a:	fisttp QWORD PTR [esi-0x7a8d1e46]
  40a380:	mov    dl,0x57
  40a382:	push   cs
  40a383:	xchg   ecx,eax
  40a384:	enter  0xf90e,0x76
  40a388:	mov    esp,0xa1e901a4
  40a38d:	in     al,dx
  40a38e:	jmp    0xf0ffdafb
  40a393:	pop    esi
  40a394:	cmp    dh,al
  40a396:	inc    edx
  40a397:	push   ebp
  40a398:	mov    ds:0x3bdd72e0,eax
  40a39d:	cwde   
  40a39e:	out    0x0,eax
  40a3a0:	xchg   BYTE PTR [eax+edi*8+0x64aace7],ah
  40a3a7:	add    ch,dl
  40a3a9:	and    eax,0x657f8509
  40a3ae:	push   es
  40a3af:	add    cl,bl
  40a3b1:	and    ecx,esi
  40a3b3:	add    BYTE PTR [esi+0x4bc70665],cl
  40a3b9:	xor    ecx,edi
  40a3bb:	pop    es
  40a3bc:	sahf   
  40a3bd:	gs ins BYTE PTR es:[edi],dx
	...
  40a3cb:	add    BYTE PTR [ebp+eiz*2+0x6c],ah
  40a3cf:	add    BYTE PTR [ebp+eiz*2-0x75],ah
  40a3d3:	inc    ebp
  40a3d4:	jp     0x40a3eb
  40a3d6:	mov    al,BYTE PTR [ebp-0x6d196]
  40a3dc:	sub    BYTE PTR cs:[ebx-0x8],dh
  40a3e0:	inc    ecx
  40a3e1:	mov    al,0xfc
  40a3e3:	call   0x46efe2
  40a3e8:	push   ebp
  40a3e9:	and    eax,0xc1270572
  40a3ee:	add    eax,0xb9bd4e00
  40a3f3:	dec    eax
  40a3f4:	packuswb mm7,mm1
  40a3f7:	jne    0x40a44b
  40a3f9:	cmp    eax,0x2651b283
  40a3fe:	push   esi
  40a3ff:	mov    ebx,DWORD PTR [esi+0x58]
  40a402:	xor    esp,0x79
  40a405:	es stc 
  40a407:	push   eax
  40a408:	int3   
  40a409:	ds jae 0x40a3be
  40a40c:	jno    0x40a434
  40a40e:	pop    DWORD PTR [ebp-0x6d182]
  40a414:	jbe    0x40a3b0
  40a416:	test   al,0xff
  40a418:	popa   
  40a419:	mov    edx,0xd8467f8
  40a41e:	inc    esi
  40a41f:	add    BYTE PTR [ecx-0xf],al
  40a422:	cmc    
  40a423:	div    edi
  40a425:	cmp    BYTE PTR [edx-0x1],al
  40a428:	or     ch,BYTE PTR [ebx]
  40a42a:	mov    ebp,0x3e31f740
  40a42f:	mov    cl,0x0
	...
  40a439:	add    BYTE PTR [eax],al
  40a43b:	add    al,al
  40a43d:	mov    eax,ds:0xa1d3857c
  40a442:	inc    edx
  40a443:	call   FWORD PTR ds:0x4e99dcca
  40a449:	or     eax,DWORD PTR ds:0x4a7a6aff
  40a44f:	call   FWORD PTR [eax+0x3fe10879]
  40a455:	or     eax,DWORD PTR ds:0x429b5ae8
  40a45b:	jmp    FWORD PTR [esi+0x47]
  40a45e:	push   ecx
  40a45f:	idiv   DWORD PTR [eax-0x27]
  40a462:	(bad)  
  40a464:	fsubr  DWORD PTR [edx]
  40a466:	lods   al,BYTE PTR ds:[esi]
  40a467:	inc    eax
  40a468:	test   eax,0xc168f07e
  40a46e:	inc    esp
  40a46f:	jmp    DWORD PTR [edx]
  40a471:	stos   DWORD PTR es:[edi],eax
  40a472:	leave  
  40a473:	inc    eax
  40a474:	mul    DWORD PTR [ecx-0x56b74e6c]
  40a47a:	mov    al,BYTE PTR [ebp-0xbae6b1]
  40a480:	push   0x4f
  40a482:	div    WORD PTR [eax]
  40a485:	adc    edx,edx
  40a487:	addr16 fs and eax,ebx
  40a48b:	jmp    DWORD PTR [ecx]
  40a48d:	aaa    
  40a48e:	xor    dh,bh
  40a490:	sbb    cl,bh
  40a492:	inc    esp
  40a493:	xor    eax,0xffc38216
  40a498:	adc    BYTE PTR [esi+0x73],dh
  40a49b:	inc    DWORD PTR [eax]
  40a49d:	aad    0x44
  40a49f:	je     0x40a4a1
	...
  40a4a9:	add    BYTE PTR [eax],al
  40a4ab:	add    dh,bl
  40a4ad:	dec    esp
  40a4ae:	xchg   esp,ebx
  40a4b0:	call   0x6244ea05
  40a4b5:	arpl   di,di
  40a4b7:	inc    edx
  40a4b8:	daa    
  40a4b9:	lock popa 
  40a4bb:	and    al,0xe0
  40a4bd:	fisttp WORD PTR [edi-0x2c]
  40a4c0:	fcomp  DWORD PTR [ecx-0x3437bc87]
  40a4c6:	fimul  DWORD PTR [esi]
  40a4c8:	mov    bh,0x56
  40a4ca:	loope  0x40a49f
  40a4cc:	ror    BYTE PTR [ebp-0x584fbc7f],1
  40a4d2:	popa   
  40a4d3:	and    al,0xa0
  40a4d5:	fistp  WORD PTR [edi]
  40a4d7:	sbb    edi,esi
  40a4d9:	(bad)  
  40a4da:	out    dx,eax
  40a4db:	xchg   BYTE PTR [edx-0x3a],bl
  40a4de:	pop    ss
  40a4df:	inc    ebx
  40a4e0:	nop
  40a4e1:	bound  edx,QWORD PTR [ebx+0x131d75da]
  40a4e7:	cmp    eax,DWORD PTR [eax+0x2ab7eedf]
  40a4ed:	in     al,0x31
  40a4ef:	sub    al,0x68
  40a4f1:	(bad)  
  40a4f3:	add    esp,ebx
  40a4f5:	and    eax,0xcff70457
  40a4fa:	cwde   
  40a4fb:	inc    edx
  40a4fc:	loop   0x40a568
  40a4fe:	(bad)  
  40a4ff:	outs   dx,DWORD PTR ds:[esi]
  40a500:	popf   
  40a501:	ffreep st(7)
  40a503:	inc    edx
  40a504:	or     dh,0xb7
  40a507:	inc    edx
  40a508:	inc    eax
  40a509:	fbstp  TBYTE PTR [ecx]
  40a50b:	or     al,0x4f
  40a50d:	bound  eax,QWORD PTR [edx+eax*2+0x0]
	...
  40a51c:	xor    bh,bl
  40a51e:	jno    0x40a54b
  40a520:	and    bh,bl
  40a522:	lahf   
  40a523:	inc    edx
  40a524:	stos   BYTE PTR es:[edi],al
  40a525:	push   0xffffff97
  40a527:	xor    eax,0x428fdf4d
  40a52c:	dec    edx
  40a52d:	(bad)  
  40a52e:	pop    DWORD PTR [edx+0x8]
  40a531:	(bad)  
  40a533:	or     ecx,DWORD PTR [edi]
  40a535:	(bad)  
  40a536:	push   esp
  40a537:	inc    edx
  40a538:	clc    
  40a539:	fiadd  WORD PTR ds:0xf8d6143c
  40a53f:	outs   dx,BYTE PTR ds:[esi]
  40a540:	xor    eax,0xa8510e58
  40a545:	or     al,0xf9
  40a547:	pop    esi
  40a548:	xor    eax,0x355ee218
  40a54d:	fsubp  st(5),st
  40a54f:	xchg   ecx,eax
  40a550:	inc    edi
  40a551:	fdivp  st(0),st
  40a553:	inc    esi
  40a554:	aas    
  40a555:	iret   
  40a556:	lock ds xor eax,0x3584aacb
  40a55d:	fdivp  st(0),st
  40a55f:	je     0x40a53d
  40a561:	aad    0xf8
  40a563:	es int3 
  40a565:	add    BYTE PTR [ebx-0x4d21cae2],ch
  40a56b:	sbb    ebp,ecx
  40a56d:	(bad)  
  40a56f:	add    DWORD PTR [ebp+0x10],ebp
  40a572:	stc    
  40a573:	push   es
  40a574:	xor    eax,0x4610fe28
  40a579:	loopne 0x40a573
  40a57b:	div    BYTE PTR [esi+0x1fa57]
	...
  40a589:	add    BYTE PTR [eax],al
  40a58b:	add    cl,ah
  40a58d:	sti    
  40a58e:	add    eax,0xda0ade9
  40a593:	jmp    0x6b2a8ed9
  40a598:	mov    edi,0x9ae96bde
  40a59d:	jno    0x40a598
  40a59f:	cmp    al,0xf3
  40a5a1:	retf   0x93ae
  40a5a4:	mov    dh,0xdd
  40a5a6:	mov    gs,WORD PTR [edi+esi*4]
  40a5a9:	dec    edx
  40a5aa:	mov    ebp,0xf7de3410
  40a5af:	sbb    al,0xf3
  40a5b1:	retf   0x9f0f
  40a5b4:	mov    dh,0xdd
  40a5b6:	clc    
  40a5b7:	sbb    al,0xb7
  40a5b9:	fnsave [edx-0x1f]
  40a5bc:	fdiv   QWORD PTR [esi+0x247900ab]
  40a5c2:	iret   
  40a5c3:	ret    0x6212
  40a5c6:	push   ebx
  40a5c7:	mov    edi,DWORD PTR [edx-0x19]
  40a5ca:	sar    esp,0xf4
  40a5cd:	data16 ins BYTE PTR es:[edi],dx
  40a5cf:	adc    al,0x59
  40a5d1:	push   ss
  40a5d2:	add    eax,ebp
  40a5d4:	(bad)  
  40a5d5:	dec    edi
  40a5d6:	stc    
  40a5d7:	call   DWORD PTR [edi-0x5a]
  40a5da:	cld    
  40a5db:	push   0xbee961de
  40a5e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a5e1:	test   BYTE PTR [edi+0x41],bl
  40a5e4:	into   
  40a5e5:	or     esp,ebx
  40a5e7:	pop    ecx
  40a5e8:	pop    edi
  40a5e9:	popa   
  40a5ea:	stc    
  40a5eb:	jne    0x40a583
  40a5ed:	mov    DWORD PTR [ebp-0x2a],esp
	...
  40a5fc:	fldenv [ebx]
  40a5fe:	stc    
  40a5ff:	jne    0x40a5fb
  40a601:	and    esi,DWORD PTR [ebx+0x8]
  40a604:	idiv   cl
  40a606:	stos   DWORD PTR es:[edi],eax
  40a607:	(bad)  
  40a608:	stc    
  40a609:	sub    esp,eax
  40a60b:	add    al,0x8e
  40a60d:	mov    ah,0x8b
  40a60f:	in     al,dx
  40a610:	(bad)  
  40a612:	fdivrp st(7),st
  40a614:	imul   esp,DWORD PTR [edx],0xb15a458b
  40a61a:	div    DWORD PTR [ebp+0x6a]
  40a61d:	and    dh,BYTE PTR [ebx]
  40a61f:	loope  0x40a647
  40a621:	mov    ds:0xf9f8e7f8,al
  40a626:	add    eax,0x9215500
  40a62b:	test   DWORD PTR [ebx-0x6efff9a0],ecx
  40a631:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a632:	lock add BYTE PTR [esi],bl
  40a635:	popa   
  40a636:	push   es
  40a637:	(bad)  
  40a638:	rcr    DWORD PTR [edx+0x610e07f9],cl
  40a63e:	ins    BYTE PTR es:[edi],dx
  40a63f:	add    BYTE PTR [edi+eiz*2],al
  40a642:	ins    BYTE PTR es:[edi],dx
  40a643:	add    bh,dh
  40a645:	popa   
  40a646:	add    cl,BYTE PTR [ebp-0x732b084e]
  40a64c:	jp     0x40a6ad
  40a64e:	ds (bad) 
  40a650:	clc    
  40a651:	jp     0x40a69a
  40a653:	jne    0x40a644
  40a655:	push   ebp
  40a656:	mov    al,0xfb
  40a658:	(bad)  
  40a65a:	fwait
  40a65b:	add    bh,dh
  40a65d:	rol    BYTE PTR [esp+esi*2+0x0],1
	...
  40a669:	add    BYTE PTR [eax],al
  40a66b:	add    dl,dh
  40a66d:	xor    dl,BYTE PTR [ebp-0x533608ff]
  40a673:	mov    esp,0xff050b3f
  40a678:	dec    edx
  40a679:	(bad)  
  40a67a:	sub    al,0x51
  40a67c:	xchg   DWORD PTR [ebp+0x7a7c5046],ebx
  40a682:	mov    BYTE PTR [ebp-0xb96a5d],al
  40a688:	inc    edi
  40a689:	sbb    BYTE PTR ds:0x467d6741,ch
  40a68f:	mov    DWORD PTR [edx+0x7a],edi
  40a692:	dec    DWORD PTR ds:[eax-0x7f53619e]
  40a699:	mov    BYTE PTR gs:[ebp-0xc72a61],al
  40a6a0:	(bad)  
  40a6a1:	loope  0x40a6a4
  40a6a3:	pop    edx
  40a6a4:	mov    dh,0xc9
  40a6a6:	inc    ebp
  40a6a7:	mov    ch,0x67
  40a6a9:	mov    ebp,0x7758ff38
  40a6ae:	and    ecx,DWORD PTR [eax-0x4a]
  40a6b1:	leave  
  40a6b2:	sub    al,0x92
  40a6b4:	cwde   
  40a6b5:	lods   eax,DWORD PTR ds:[esi]
  40a6b6:	cmp    BYTE PTR [ecx-0xcf5186],cl
  40a6bc:	cmp    BYTE PTR [eax],dh
  40a6be:	add    ch,BYTE PTR [eax+0x26]
  40a6c1:	jae    0x40a686
  40a6c3:	jmp    FWORD PTR [ecx]
  40a6c5:	push   edi
  40a6c6:	xor    dh,bh
  40a6c8:	and    BYTE PTR [ebx-0x60],ah
  40a6cb:	aas    
  40a6cc:	loop   0x40a68f
  40a6ce:	lds    eax,FWORD PTR ss:[eax]
	...
  40a6d9:	add    BYTE PTR [eax],al
  40a6db:	add    BYTE PTR [eax],dl
  40a6dd:	les    ebx,FWORD PTR [edx]
  40a6df:	outs   dx,DWORD PTR ds:[esi]
  40a6e0:	or     ah,bl
  40a6e2:	mov    DWORD PTR gs:[ebx],edx
  40a6e5:	aam    0x7f
  40a6e7:	aas    
  40a6e8:	lea    esp,[edx+0x17]
  40a6eb:	cmp    cl,BYTE PTR [esi+0x22]
  40a6ee:	out    dx,eax
  40a6ef:	mov    ds:0xe03f6fd2,al
  40a6f5:	fistp  DWORD PTR [ecx]
  40a6f7:	and    eax,0x2bef222f
  40a6fc:	sub    DWORD PTR [eax+edx*2],ecx
  40a6ff:	aas    
  40a700:	jle    0x40a6e7
  40a702:	inc    esi
  40a703:	aaa    
  40a704:	rcr    bl,0x71
  40a707:	mov    DWORD PTR [ebx+0x473f37d3],ebx
  40a70d:	dec    ebx
  40a70e:	jecxz  0x40a6e9
  40a710:	aaa    
  40a711:	arpl   WORD PTR [eax],bp
  40a713:	jns    0x40a6bc
  40a715:	rcr    DWORD PTR [edi],cl
  40a717:	aas    
  40a718:	cwde   
  40a719:	xchg   ebp,eax
  40a71a:	push   cs
  40a71b:	int3   
  40a71c:	aaa    
  40a71d:	arpl   WORD PTR [edi],ax
  40a71f:	repz pop ecx
  40a721:	fild   DWORD PTR [edi]
  40a723:	or     esi,DWORD PTR [edi+0x3a82e656]
  40a729:	mov    esi,0x66703eef
  40a72e:	jp     0x40a743
  40a730:	push   0x57895892
  40a735:	rcr    edi,cl
  40a737:	ds (bad) 
  40a739:	retf   0x6fee
  40a73c:	push   eax
  40a73d:	fcmovnb st,st(3)
  40a73f:	pop    ss
	...
  40a74c:	cld    
  40a74d:	mov    ds:0xcaa70652,al
  40a752:	mov    edx,0x9fdb386a
  40a757:	mov    BYTE PTR [edi],dl
  40a759:	rol    DWORD PTR ds:0x675e9b6,cl
  40a75f:	jmp    0x8dfb8758
  40a764:	loope  0x40a741
  40a766:	clc    
  40a767:	jmp    0x54c604b4
  40a76c:	fcom   st(3)
  40a76e:	clc    
  40a76f:	mov    ?,esp
  40a771:	push   esi
  40a772:	jae    0x40a7de
  40a774:	ja     0x40a740
  40a776:	lock jle 0x40a7aa
  40a779:	arpl   WORD PTR [edx+0x5],si
  40a77c:	popf   
  40a77d:	fimul  DWORD PTR [ecx-0x72dc39c]
  40a783:	data16 (bad) 
  40a785:	fnstenv [edx-0x725f6bb]
  40a78b:	inc    ecx
  40a78c:	int3   
  40a78d:	scas   eax,DWORD PTR es:[edi]
  40a78e:	clc    
  40a78f:	dec    esi
  40a790:	in     eax,dx
  40a791:	mov    ds:0x18759d71,al
  40a796:	fidiv  WORD PTR [esi]
  40a798:	icebp  
  40a799:	fld    DWORD PTR ds:0x642bdbd
  40a79f:	jmp    0x9d39c075
  40a7a4:	in     al,dx
  40a7a5:	retf   0x5153
  40a7a8:	rcr    ecx,1
  40a7aa:	clc    
  40a7ab:	pop    esp
  40a7ac:	fcom   st(1)
  40a7ae:	clc    
  40a7af:	push   cs
	...
  40a7bc:	ror    DWORD PTR [edi+0xe],0x11
  40a7c0:	adc    cl,BYTE PTR [ebx]
  40a7c2:	stc    
  40a7c3:	(bad)  
  40a7c4:	xor    dl,BYTE PTR [eax]
  40a7c6:	out    dx,al
  40a7c7:	(bad)  
  40a7c8:	sub    bl,dl
  40a7ca:	clc    
  40a7cb:	je     0x40a7b9
  40a7cd:	retf   0x919d
  40a7d0:	sbb    bl,dl
  40a7d2:	clc    
  40a7d3:	xchg   esp,eax
  40a7d4:	mov    bl,0xd1
  40a7d6:	clc    
  40a7d7:	(bad)  
  40a7d8:	or     dl,BYTE PTR [eax]
  40a7da:	loop   0x40a7b2
  40a7dc:	add    bl,dl
  40a7de:	clc    
  40a7df:	add    bl,bh
  40a7e1:	data16 out dx,al
  40a7e3:	pop    eax
  40a7e4:	xchg   BYTE PTR [eax+0x7eabfff9],bl
  40a7ea:	icebp  
  40a7eb:	call   DWORD PTR [ecx-0x68]
  40a7ee:	jae    0x40a7f8
  40a7f0:	xchg   BYTE PTR [ebx-0x52],bh
  40a7f3:	push   DWORD PTR [ecx-0x68]
  40a7f6:	mov    bl,0xe4
  40a7f8:	imul   ebx,DWORD PTR [eax+0x4bc6e8f9],0x5271fff9
  40a802:	jmp    0x354d:0xee9871f7
  40a809:	cwde   
  40a80a:	stc    
  40a80b:	jmp    FWORD PTR [ebx]
  40a80d:	xchg   ecx,esi
  40a80f:	call   DWORD PTR [ecx-0x79]
  40a812:	inc    esp
  40a813:	stos   DWORD PTR es:[edi],eax
  40a814:	xor    DWORD PTR [eax-0x6fd14a07],ebx
  40a81a:	stc    
  40a81b:	push   DWORD PTR [esi]
  40a81d:	shr    BYTE PTR [ebx+0xff],1
	...
  40a82b:	add    BYTE PTR [ecx],dh
  40a82d:	cwde   
  40a82e:	inc    ebx
  40a82f:	clc    
  40a830:	inc    edi
  40a831:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a832:	cli    
  40a833:	jmp    ecx
  40a835:	xchg   edi,eax
  40a836:	jae    0x40a834
  40a838:	ss mov ah,0x8f
  40a83b:	add    BYTE PTR [esi-0x61f73bd4],cl
  40a841:	mov    al,0x8b
  40a843:	in     al,dx
  40a844:	sbb    eax,0x6bfff22b
  40a849:	imul   ebp,esi,0x65f1beb
  40a84f:	mov    DWORD PTR [ebx+0x6675f99d],ebx
  40a855:	lea    esp,[edi]
  40a857:	stos   DWORD PTR es:[edi],eax
  40a858:	push   ecx
  40a859:	xchg   esi,eax
  40a85a:	pop    DWORD PTR [ebp+0x52]
  40a85d:	xchg   esi,eax
  40a85e:	jae    0x40a85c
  40a860:	xor    DWORD PTR [eax],edx
  40a862:	icebp  
  40a863:	push   edi
  40a865:	ss push ss
  40a867:	call   0xff7a996a
  40a86c:	in     al,dx
  40a86d:	or     esi,DWORD PTR [ecx+0x3e7e7e3d]
  40a873:	push   0xfffffff7
  40a875:	ds shl bl,0xc7
  40a879:	or     BYTE PTR [eax+0x5e6a0ffb],dh
  40a87f:	call   DWORD PTR [eax]
  40a881:	aam    0x44
  40a883:	je     0x40a863
  40a885:	arpl   WORD PTR [edx],ax
  40a887:	adc    BYTE PTR [eax],dl
  40a889:	sub    DWORD PTR [edx],edi
  40a88b:	jne    0x40a87c
  40a88d:	repz and BYTE PTR [edi+0x0],0x0
  40a895:	add    BYTE PTR [eax],al
  40a897:	add    BYTE PTR [eax],al
  40a899:	add    BYTE PTR [eax],al
  40a89b:	add    al,dh
  40a89d:	pop    ecx
  40a89e:	cmp    dh,BYTE PTR [ebp-0x11]
  40a8a1:	push   ecx
  40a8a2:	mov    al,0xb
  40a8a4:	loopne 0x40a875
  40a8a6:	or     al,0xe8
  40a8a8:	mov    ebp,ecx
  40a8aa:	cmp    edi,edi
  40a8ac:	shr    BYTE PTR [edi+0x2e42ff30],1
  40a8b2:	cmp    dh,BYTE PTR [ebp-0x11]
  40a8b5:	and    DWORD PTR [ebx+0x3a21b8a7],ebx
  40a8bb:	jne    0x40a870
  40a8bd:	xor    ch,BYTE PTR [edx-0x56]
  40a8c0:	test   al,0x91
  40a8c2:	dec    esp
  40a8c3:	ret    0xc9ef
  40a8c6:	iret   
  40a8c7:	mov    cl,BYTE PTR [ebx+0x29e8414d]
  40a8cd:	jns    0x40a87f
  40a8cf:	or     ebx,DWORD PTR [edi-0x7f00960d]
  40a8d5:	lds    eax,FWORD PTR [ebp+esi*2-0xe]
  40a8d9:	dec    DWORD PTR [ebx-0x3e]
  40a8dc:	dec    ecx
  40a8de:	xchg   DWORD PTR [ebp+0x67],eax
  40a8e1:	cli    
  40a8e2:	cmp    DWORD PTR [ebp-0xd],esi
  40a8e5:	popa   
  40a8e6:	out    dx,al
  40a8e7:	scas   eax,DWORD PTR es:[edi]
  40a8e8:	pop    eax
  40a8e9:	arpl   ax,sp
  40a8eb:	getsec 
  40a8ed:	push   0x62f79e63
  40a8f2:	out    dx,eax
  40a8f3:	cmp    cl,dl
  40a8f5:	(bad)  
  40a8f6:	(bad)  
  40a8f7:	mov    cl,BYTE PTR [ebp-0x45724028]
  40a8fd:	(bad)  
  40a8fe:	mov    bh,0xb1
	...
  40a90c:	sub    al,0xd8
  40a90e:	cmp    DWORD PTR [eax],ebp
  40a910:	and    BYTE PTR [esi-0x49],cl
  40a913:	sub    al,0x63
  40a915:	or     eax,0x4e7c3ba0
  40a91a:	mov    ebp,DWORD PTR [edi]
  40a91c:	mov    esi,0xb7de2a4a
  40a921:	bound  esi,QWORD PTR [ecx]
  40a923:	sub    al,0x1b
  40a925:	icebp  
  40a926:	out    dx,al
  40a927:	add    edi,esp
  40a929:	mov    ds:0x95dc05f1,al
  40a92e:	fs xor al,0x4f
  40a931:	push   ds
  40a932:	adc    eax,0x4bfd8c5
  40a937:	xchg   ecx,eax
  40a938:	mul    DWORD PTR [edx-0x14]
  40a93b:	xor    edi,DWORD PTR [esi+0x4d]
  40a93e:	inc    edi
  40a93f:	lods   al,BYTE PTR ds:[esi]
  40a940:	and    al,0x3d
  40a942:	scas   al,BYTE PTR es:[edi]
  40a943:	add    esp,DWORD PTR [ecx]
  40a945:	retf   
  40a946:	test   BYTE PTR [edx+0x43f462f7],dl
  40a94c:	and    ah,BYTE PTR [ebp+0x44]
  40a94f:	pop    ds
  40a950:	ins    DWORD PTR es:[edi],dx
  40a951:	jb     0x40a974
  40a953:	add    al,0xf7
  40a955:	xor    bh,BYTE PTR [ebp+0x17cb0a3a]
  40a95b:	mov    cl,0xf0
  40a95d:	retf   0x3a15
  40a960:	adc    bh,0xb4
  40a963:	(bad)  [eax+0x72]
  40a966:	outs   dx,DWORD PTR ds:[esi]
  40a967:	cli    
  40a968:	jo     0x40a9b8
  40a96a:	cmp    eax,0x672f7ac
  40a96f:	push   es
	...
  40a97c:	fst    st(7)
  40a97e:	jb     0x40a961
  40a980:	or     al,0x10
  40a982:	mov    al,ds:0x72d80de6
  40a987:	fisttp QWORD PTR ds:0x87d6ea4e
  40a98d:	pop    edi
  40a98e:	out    dx,al
  40a98f:	scas   al,BYTE PTR es:[edi]
  40a990:	(bad)  
  40a991:	xlat   BYTE PTR ds:[ebx]
  40a992:	clc    
  40a993:	(bad)  
  40a994:	addr16 retf 
  40a996:	in     eax,dx
  40a997:	mov    ecx,0x64f8d79b
  40a99c:	aaa    
  40a99d:	(bad)  
  40a99e:	push   ebp
  40a99f:	sar    ebp,0x12
  40a9a2:	stc    
  40a9a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a9a4:	loope  0x40aa08
  40a9a6:	pop    eax
  40a9a7:	mov    al,0xb2
  40a9a9:	push   0x6
  40a9ab:	cmp    al,0x70
  40a9ad:	mov    BYTE PTR [ebp+eiz*4+0x13064cc0],0x6
  40a9b5:	(bad)  
  40a9b6:	jb     0x40a9a9
  40a9b8:	sbb    al,0x5d
  40a9ba:	mov    eax,ds:0x42ec1d76
  40a9bf:	ins    DWORD PTR es:[edi],dx
  40a9c0:	mov    WORD PTR [ebx+0x5c],?
  40a9c3:	test   al,0xf4
  40a9c5:	aad    0x72
  40a9c7:	icebp  
  40a9c8:	sbb    al,0xfe
  40a9ca:	stc    
  40a9cb:	push   esi
  40a9cc:	std    
  40a9cd:	dec    eax
  40a9ce:	push   es
  40a9cf:	ror    DWORD PTR [ecx+0x5ce9473c],0x2d
  40a9d6:	pop    esp
  40a9d7:	test   al,0xf4
  40a9d9:	aad    0x32
  40a9db:	dec    eax
  40a9dc:	lods   al,BYTE PTR ds:[esi]
  40a9dd:	and    eax,DWORD PTR [esi]
  40a9df:	inc    ecx
	...
  40a9ec:	sbb    eax,0x126f907
  40a9f1:	mov    ds:0x9c5b0371,eax
  40a9f6:	pop    esp
  40a9f7:	test   al,0xf4
  40a9f9:	xor    ch,dh
  40a9fb:	bound  ecx,QWORD PTR [edi]
  40a9fd:	(bad)  
  40a9fe:	clc    
  40a9ff:	add    BYTE PTR [esi+0x6675f7b2],cl
  40aa05:	mov    ah,ch
  40aa07:	(bad)  
  40aa08:	imul   ebx,DWORD PTR [esi+ebp*8-0x6674877],0xdc86f46a
  40aa13:	lods   eax,DWORD PTR ds:[esi]
  40aa14:	sub    DWORD PTR [ebp+ecx*1+0x60b5a2c0],ebx
  40aa1b:	cs add al,0xa2
  40aa1e:	clc    
  40aa1f:	dec    edi
  40aa20:	inc    esi
  40aa21:	add    DWORD PTR [edx+0x3f0769ff],ebp
  40aa27:	pop    edx
  40aa28:	iret   
  40aa29:	pop    esi
  40aa2a:	push   esi
  40aa2b:	call   0x39e835
  40aa30:	into   
  40aa31:	scas   al,BYTE PTR es:[edi]
  40aa32:	div    DWORD PTR [ebp+0x6]
  40aa35:	mov    dh,BYTE PTR [ebp-0x11639602]
  40aa3b:	pop    ecx
  40aa3c:	mov    bh,0x9b
  40aa3e:	stc    
  40aa3f:	push   0xffffffda
  40aa41:	mov    DWORD PTR [ebp+ebp*4-0x3ff26397],ebp
  40aa48:	loop   0x40a9fe
  40aa4a:	pusha  
  40aa4b:	cs add al,0xa2
  40aa4e:	clc    
  40aa4f:	dec    edi
	...
  40aa5c:	shr    DWORD PTR es:[ecx+0x3f0729ff],1
  40aa63:	pop    edx
  40aa64:	(bad)  
  40aa65:	popa   
  40aa66:	push   esi
  40aa67:	call   0x39e861
  40aa6c:	mov    ?,WORD PTR [ecx-0x76598a09]
  40aa72:	test   esi,edi
  40aa74:	jmp    0x776a9914
  40aa79:	fwait
  40aa7a:	stc    
  40aa7b:	push   0xffffffbd
  40aa7d:	mov    DWORD PTR [ebp+ebp*4-0x17],edi
  40aa81:	fwait
  40aa82:	or     eax,0xd7f7f7c0
  40aa87:	addr16 leave 
  40aa89:	adc    esp,eax
  40aa8b:	inc    eax
  40aa8d:	jae    0x40aa93
  40aa8f:	lods   eax,DWORD PTR ds:[esi]
  40aa90:	push   0xbd39acd4
  40aa95:	or     al,BYTE PTR ds:0x60d04f50
  40aa9b:	call   DWORD PTR [eax-0x65]
  40aa9e:	sar    dh,cl
  40aaa0:	ret    0x2cd3
  40aaa3:	push   ebx
  40aaa4:	inc    ecx
  40aaa5:	lods   al,BYTE PTR ds:[esi]
  40aaa6:	cmp    eax,0x3de33ee8
  40aaab:	push   DWORD PTR [eax]
  40aaad:	xchg   esi,eax
  40aaae:	notrack jmp DWORD PTR [edx+0x596c2cd3]
  40aab5:	or     al,0x3e
  40aab7:	leave  
  40aab8:	xor    eax,0x7c5504bf
  40aabd:	out    dx,eax
  40aabe:	add    esp,0x0
	...
  40aac9:	add    BYTE PTR [eax],al
  40aacb:	add    BYTE PTR [ebx],ch
  40aacd:	in     al,dx
  40aace:	cmp    eax,0x3e8672ff
  40aad3:	push   eax
  40aad4:	clc    
  40aad5:	ins    DWORD PTR es:[edi],dx
  40aad6:	adc    bh,bh
  40aad8:	push   0xffffffce
  40aada:	sub    al,0x4
  40aadc:	or     dl,0x4
  40aadf:	or     esi,DWORD PTR [edi-0x9418843]
  40aae5:	leave  
  40aae6:	add    al,0xc7
  40aae8:	cmp    al,BYTE PTR [edx+0x5]
  40aaeb:	add    bh,dh
  40aaed:	leave  
  40aaee:	inc    ebp
  40aaef:	inc    ebp
  40aaf0:	retf   
  40aaf1:	sub    eax,0x9ff70006
  40aaf6:	add    al,0x6a
  40aaf8:	imul   DWORD PTR [edi+0x46f76a04]
  40aafe:	mov    eax,0x783f47f3
  40ab03:	hlt    
  40ab04:	mov    al,ds:0x90503e85
  40ab09:	arpl   WORD PTR [edx+0x1b4e883b],bx
  40ab0f:	sub    ebp,DWORD PTR [ecx-0x13fc1111]
  40ab15:	mov    ds:0xe25ffe92,al
  40ab1a:	in     eax,dx
  40ab1b:	add    esi,edi
  40ab1d:	dec    edx
  40ab1e:	cmp    cl,bl
  40ab20:	mov    bh,0x62
  40ab22:	lock lods eax,DWORD PTR ds:[esi]
  40ab24:	call   0x50a86af3
  40ab29:	aam    0x3e
  40ab2b:	mov    esp,DWORD PTR [edi]
  40ab2d:	out    0x61,al
  40ab2f:	xor    BYTE PTR [eax],al
	...
  40ab39:	add    BYTE PTR [eax],al
  40ab3b:	add    BYTE PTR [eax-0x2c],cl
  40ab3e:	iret   
  40ab3f:	aam    0xa6
  40ab41:	retf   0x67ef
  40ab44:	xor    ah,dl
  40ab46:	jne    0x40aac9
  40ab48:	daa    
  40ab49:	int3   
  40ab4a:	mov    bh,0x37
  40ab4c:	cmovbe eax,DWORD PTR [edi-0x10b6e7c9]
  40ab53:	stos   DWORD PTR es:[edi],eax
  40ab54:	jge    0x40ab8f
  40ab56:	cs add al,0x8
  40ab59:	push   cs
  40ab5a:	lahf   
  40ab5b:	das    
  40ab5c:	add    ah,dl
  40ab5e:	(bad)  
  40ab5f:	mov    cl,0xec
  40ab61:	retf   0x6b1e
  40ab64:	lock shl DWORD PTR [ebp-0x7f],cl
  40ab68:	ror    ebx,cl
  40ab6a:	ja     0x40aba3
  40ab6c:	dec    ebp
  40ab6d:	arpl   WORD PTR [edi],ax
  40ab6f:	nop
  40ab70:	cmp    eax,0x8a36ef22
  40ab75:	rcl    BYTE PTR [edi+0x37],cl
  40ab78:	enter  0xd1d3,0x7
  40ab7c:	iret   
  40ab7d:	sub    eax,0xe9b83784
  40ab82:	popa   
  40ab83:	and    al,0xa8
  40ab85:	sar    DWORD PTR [edi],cl
  40ab87:	stos   BYTE PTR es:[edi],al
  40ab88:	test   al,0x3b
  40ab8a:	(bad)  
  40ab8b:	fnstenv [edi]
  40ab8d:	arpl   WORD PTR [esi],ax
  40ab8f:	ss es shl eax,cl
  40ab93:	cs enter 0x72d3,0xf5
  40ab98:	fcomp  QWORD PTR [eax-0x1637e153]
  40ab9e:	add    BYTE PTR ds:0x0,0x0
  40aba5:	add    BYTE PTR [eax],al
  40aba7:	add    BYTE PTR [eax],al
  40aba9:	add    BYTE PTR [eax],al
  40abab:	add    al,cl
  40abad:	sar    eax,cl
  40abaf:	xor    esp,0x4a
  40abb2:	test   BYTE PTR [ebx+0x34f7d333],ah
  40abb8:	sub    ecx,esp
  40abba:	clc    
  40abbb:	mul    BYTE PTR [ecx]
  40abbd:	dec    esi
  40abbe:	or     al,BYTE PTR [ecx]
  40abc0:	call   0x7c27a4cc
  40abc5:	fucomp st(5)
  40abc7:	(bad)  
  40abc8:	or     esp,edx
  40abca:	imul   ebp,ecx,0xffffff8c
  40abcd:	cmc    
  40abce:	pop    ebx
  40abcf:	sub    bl,bh
  40abd1:	shl    DWORD PTR [edx-0x72c2647],cl
  40abd7:	mov    esi,0xedee6767
  40abdc:	(bad)  
  40abdd:	sar    eax,cl
  40abdf:	pusha  
  40abe0:	ja     0x40ab98
  40abe2:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40abe4:	rcr    edi,0xba
  40abe7:	test   ecx,edx
  40abe9:	sar    eax,cl
  40abeb:	jmp    0x4cc61637
  40abf0:	adc    al,0xda
  40abf2:	clc    
  40abf3:	xchg   ah,dh
  40abf5:	push   esi
  40abf6:	arpl   WORD PTR [edx+0x5f],bp
  40abf9:	mov    edi,0x632176f0
  40abfe:	jb     0x40ac0d
  40ac00:	je     0x40ac12
  40ac02:	out    dx,al
  40ac03:	pop    esi
  40ac04:	add    edx,edx
  40ac06:	add    eax,0x64aa5d5
  40ac0b:	jmp    0xd539bd21
	...
  40ac1c:	cld    
  40ac1d:	mov    edx,0x997a005f
  40ac22:	stc    
  40ac23:	jmp    FWORD PTR [ebx]
  40ac25:	mov    dh,cl
  40ac27:	jmp    ecx
  40ac29:	cwde   
  40ac2a:	jae    0x40ac34
  40ac2c:	ss dec esp
  40ac2e:	mov    ds:0xb398d1ff,al
  40ac33:	call   0x3a4521
  40ac38:	pop    ebx
  40ac39:	pop    esi
  40ac3a:	out    dx,al
  40ac3b:	lods   al,BYTE PTR ds:[esi]
  40ac3c:	mov    edx,0x2bfff998
  40ac41:	jb     0x40ac34
  40ac43:	jmp    DWORD PTR [ecx-0x68]
  40ac46:	jae    0x40ac50
  40ac48:	div    bh
  40ac4a:	mov    eax,ds:0xb39861ff
  40ac4f:	loopne 0x40ac7a
  40ac51:	cwde   
  40ac52:	stc    
  40ac53:	jmp    FWORD PTR [ebx+0x6a90ee5e]
  40ac59:	cwde   
  40ac5a:	stc    
  40ac5b:	dec    DWORD PTR [ebx+0x31fff12b]
  40ac61:	cwde   
  40ac62:	jae    0x40ac6c
  40ac64:	inc    esi
  40ac65:	in     eax,0xa1
  40ac67:	jmp    DWORD PTR [ecx-0x68]
  40ac6a:	mov    bl,0xe4
  40ac6c:	dec    ecx
  40ac6d:	cwde   
  40ac6e:	stc    
  40ac6f:	call   0x39dc6e
  40ac74:	popa   
  40ac75:	inc    edx
  40ac76:	out    0xf7,al
  40ac78:	popa   
  40ac79:	cwde   
  40ac7a:	out    dx,al
  40ac7b:	pop    ecx
  40ac7c:	cmp    DWORD PTR [eax+0xfff9],ebx
	...
  40ac8a:	add    BYTE PTR [eax],al
  40ac8c:	sub    edi,DWORD PTR [ebx-0xf]
  40ac8f:	jmp    DWORD PTR [ecx+0x7f]
  40ac92:	dec    eax
  40ac93:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ac94:	popa   
  40ac95:	cwde   
  40ac96:	stc    
  40ac97:	mov    ch,0x76
  40ac99:	jg     0x40ac94
  40ac9b:	jmp    DWORD PTR [esi]
  40ac9d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ac9e:	lahf   
  40ac9f:	jmp    DWORD PTR [ecx]
  40aca1:	cwde   
  40aca2:	mov    bl,0xdc
  40aca4:	div    DWORD PTR [eax]
  40aca6:	xor    edi,edi
  40aca8:	lahf   
  40aca9:	jae    0x40ad06
  40acab:	jmp    FWORD PTR [eax-0x570f96d8]
  40acb1:	nop
  40acb2:	xor    edi,edi
  40acb4:	and    cl,al
  40acb6:	xor    DWORD PTR [ebp-0x1],esi
  40acb9:	and    esi,ecx
  40acbb:	std    
  40acbc:	mov    BYTE PTR [eax+0x7887b533],cl
  40acc2:	xor    edi,edi
  40acc4:	(bad)  
  40acc5:	xlat   BYTE PTR ds:[ebx]
  40acc6:	pop    ecx
  40acc7:	push   DWORD PTR [eax+0x60]
  40acca:	mov    ecx,0x32ea5ef7
  40accf:	jmp    DWORD PTR [eax-0x30]
  40acd2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40acd3:	sti    
  40acd4:	dec    edi
  40acd5:	adc    edx,DWORD PTR [esi+0x4482f700]
  40acdb:	or     al,0xf7
  40acdd:	mov    cs,WORD PTR [edi+0x310774ec]
  40ace3:	push   0xfffffff7
  40ace5:	and    eax,0xc3aaff08
  40acea:	sub    al,0x2e
  40acec:	push   ebx
  40aced:	test   al,0x31
  40acef:	mov    DWORD PTR [eax],eax
	...
  40acf9:	add    BYTE PTR [eax],al
  40acfb:	add    BYTE PTR [edx-0x425852f1],bh
  40ad01:	jp     0x40ad05
  40ad03:	push   0x8004bbf5
  40ad08:	or     BYTE PTR [esi+0xa],ch
  40ad0b:	call   0xff729b18
  40ad10:	(bad)  
  40ad11:	and    ebx,edi
  40ad13:	inc    eax
  40ad14:	mul    eax
  40ad16:	out    0xe0,eax
  40ad18:	aas    
  40ad19:	jnp    0x40ad1d
  40ad1b:	jmp    FWORD PTR [edx-0x2e]
  40ad1e:	sub    al,0xe4
  40ad20:	ficomp DWORD PTR [ecx+0x32]
  40ad23:	dec    DWORD PTR [edx+0x3e]
  40ad26:	xor    dh,BYTE PTR [ebp-0x1]
  40ad29:	bound  edx,QWORD PTR [edi-0x3e]
  40ad2c:	xchg   esp,eax
  40ad2d:	rcl    BYTE PTR [edi+0x4a],1
  40ad30:	mov    ch,0x67
  40ad32:	out    dx,eax
  40ad33:	into   
  40ad34:	jge    0x40acf5
  40ad36:	ins    DWORD PTR es:[edi],dx
  40ad37:	aas    
  40ad38:	retf   
  40ad39:	fdivr  DWORD PTR [edi]
  40ad3b:	xor    al,0x72
  40ad3d:	es cmp edx,ebx
  40ad40:	cdq    
  40ad41:	push   esi
  40ad42:	fbstp  TBYTE PTR [edx+ecx*1]
  40ad45:	pop    edi
  40ad46:	inc    edi
  40ad47:	pop    edx
  40ad48:	gs arpl di,bp
  40ad4b:	or     BYTE PTR [edi-0x98a9da0],dh
  40ad51:	(bad)  
  40ad52:	out    dx,eax
  40ad53:	cmp    al,0xba
  40ad55:	retf   0x3ee
  40ad58:	mul    DWORD PTR [edx+0x28]
  40ad5b:	mov    esi,0x3dfd064
	...
  40ad6c:	idiv   DWORD PTR [edi+ebp*8]
  40ad6f:	test   eax,0xa9ef3a50
  40ad74:	dec    eax
  40ad75:	fild   QWORD PTR [ecx]
  40ad77:	cmp    BYTE PTR [edi+0x403861dd],ah
  40ad7d:	ror    bh,1
  40ad7f:	aam    0x31
  40ad81:	push   esi
  40ad82:	xlat   BYTE PTR ds:[ebx]
  40ad83:	xor    esp,DWORD PTR [edx-0x7aa02932]
  40ad89:	arpl   di,bp
  40ad8b:	(bad)  
  40ad8c:	pop    eax
  40ad8d:	push   edi
  40ad8e:	jmp    0x9f03:0xef62761c
  40ad95:	or     eax,0xd100c537
  40ad9a:	adc    DWORD PTR [edi+ecx*1],edx
  40ad9d:	iret   
  40ad9e:	inc    ebp
  40ad9f:	xor    esi,eax
  40ada1:	xor    ah,BYTE PTR [esp+edx*2+0x7a]
  40ada5:	in     eax,0x7a
  40ada7:	cmp    esp,eax
  40ada9:	iret   
  40adaa:	push   ds
  40adab:	(bad)  
  40adac:	sar    BYTE PTR [esi-0x2ffbbffb],1
  40adb2:	mov    fs,WORD PTR [ebx+eax*1-0x28]
  40adb6:	clc    
  40adb7:	data16 jecxz 0x40adde
  40adba:	mov    al,ds:0x63d045e
  40adbf:	rcl    DWORD PTR [ecx],0x2d
  40adc2:	inc    edi
  40adc3:	jmp    0x3f36c3ad
  40adc8:	in     al,0xcf
  40adca:	clc    
  40adcb:	mov    ah,0x98
  40adcd:	mov    DWORD PTR [edx-0x80],0x0
	...
  40addc:	(bad)  
  40addd:	iret   
  40adde:	mov    fs,WORD PTR [edi+ebx*8-0x29]
  40ade2:	clc    
  40ade3:	es popa 
  40ade5:	iret   
  40ade6:	pusha  
  40ade7:	push   ss
  40ade8:	test   eax,0xee160622
  40aded:	shl    al,cl
  40adef:	push   cs
  40adf0:	and    al,0xd0
  40adf2:	jb     0x40ade9
  40adf4:	cld    
  40adf5:	jl     0x40ada6
  40adf7:	(bad)  
  40adf8:	and    eax,0xc0982da
  40adfd:	sar    al,1
  40adff:	xor    esp,0x3a
  40ae02:	rol    DWORD PTR [ebx+0x3a],cl
  40ae05:	iret   
  40ae06:	not    DWORD PTR [esp+eax*1-0x1a290728]
  40ae0d:	push   ebp
  40ae0e:	or     al,cl
  40ae10:	cmc    
  40ae11:	stc    
  40ae12:	clc    
  40ae13:	(bad)  
  40ae14:	mov    ds:0xe5b6e9e5,eax
  40ae19:	iret   
  40ae1a:	imul   ebp,ecx,0x6c
  40ae1d:	mov    al,0x5b
  40ae1f:	sub    bl,dh
  40ae21:	iret   
  40ae22:	mov    dl,0x99
  40ae24:	mov    ebp,0x3f9ef8cf
  40ae29:	pop    ebx
  40ae2a:	out    dx,al
  40ae2b:	popf   
  40ae2c:	dec    esp
  40ae2d:	into   
  40ae2e:	clc    
  40ae2f:	pusha  
  40ae30:	jg     0x40aded
  40ae32:	lock add BYTE PTR [ecx-0x6f],bh
  40ae36:	ins    BYTE PTR es:[edi],dx
  40ae37:	add    BYTE PTR [esi],al
  40ae39:	pop    ebx
  40ae3a:	pop    ebp
  40ae3b:	inc    ecx
  40ae3c:	ficom  WORD PTR [ecx+0xf0b3]
	...
  40ae4a:	add    BYTE PTR [eax],al
  40ae4c:	inc    ecx
  40ae4d:	xchg   ecx,eax
  40ae4e:	stc    
  40ae4f:	jmp    DWORD PTR [ebx+0x66d9e0ce]
  40ae55:	xchg   ecx,eax
  40ae56:	stc    
  40ae57:	mov    DWORD PTR [ebx],esp
  40ae59:	push   ds
  40ae5a:	icebp  
  40ae5b:	(bad)  
  40ae5c:	cmp    ebp,esp
  40ae5e:	mov    edx,0xf990e1e4
  40ae63:	add    BYTE PTR [ebx-0x31],ah
  40ae66:	cmp    DWORD PTR [ebp-0x676c2],0xffffff9e
  40ae6d:	push   ss
  40ae6e:	bound  eax,QWORD PTR [ebx-0xe91e5]
  40ae74:	fldenv [ecx+0x72]
  40ae77:	pop    esp
  40ae78:	fst    QWORD PTR [edx-0x12]
  40ae7b:	idiv   ecx
  40ae7d:	nop
  40ae7e:	push   es
  40ae7f:	je     0x40aefe
  40ae81:	jmp    0x75f9:0x53e9fff8
  40ae88:	push   esi
  40ae89:	push   0x3d
  40ae8b:	mov    ds:0xb5f99459,al
  40ae90:	sub    cl,BYTE PTR [ecx+edi*8+0x11619ff]
  40ae97:	call   0x39f335
  40ae9c:	cmp    DWORD PTR [esi-0x12],edx
  40ae9f:	idiv   DWORD PTR [ecx]
  40aea1:	xchg   esp,eax
  40aea2:	stc    
  40aea3:	jne    0x40aecb
  40aea5:	push   0xffffff87
  40aea7:	mov    ds:0xb5f99449,al
  40aeac:	xor    cl,BYTE PTR [ecx+edi*8+0xff]
	...
  40aebb:	add    BYTE PTR [ecx+0x16],bl
  40aebe:	add    eax,ebp
  40aec0:	fld    QWORD PTR [ecx+edi*8-0x1]
  40aec4:	div    esp
  40aec6:	jo     0x40aea8
  40aec8:	loopne 0x40aea6
  40aeca:	jmp    FWORD PTR ss:[edx-0x2c]
  40aece:	sbb    al,0x65
  40aed0:	xchg   ebp,eax
  40aed1:	dec    esp
  40aed2:	aaa    
  40aed3:	dec    DWORD PTR [edx-0x3700c109]
  40aed9:	cmp    al,0xb1
  40aedb:	pop    es
  40aedc:	iret   
  40aedd:	or     al,0x63
  40aedf:	(bad)  
  40aee0:	mov    eax,0xa8e4712c
  40aee5:	xor    al,0x37
  40aee7:	call   0xff7795da
  40aeec:	mov    al,ds:0x98f7224e
  40aef1:	mov    WORD PTR [edx],ds
  40aef3:	cs pop edx
  40aef5:	xchg   esp,eax
  40aef6:	aaa    
  40aef7:	inc    DWORD PTR [edx-0x71]
  40aefa:	aas    
  40aefb:	inc    DWORD PTR [eax+0x78a4e373]
  40af01:	ins    BYTE PTR es:[edi],dx
  40af02:	aaa    
  40af03:	mov    ch,0x5f
  40af05:	ins    BYTE PTR es:[edi],dx
  40af06:	aaa    
  40af07:	call   FWORD PTR [edi-0x2d]
  40af0a:	pop    edi
  40af0b:	jmp    DWORD PTR [eax+0x64]
  40af0e:	jno    0x40aeec
  40af10:	pusha  
  40af11:	int3   
  40af12:	xor    eax,0x371f02e8
  40af17:	dec    DWORD PTR [eax-0x6a]
  40af1a:	xor    dh,bh
  40af1c:	inc    eax
  40af1d:	les    esi,FWORD PTR ds:0x75
	...
  40af2b:	add    bl,ch
  40af2d:	lods   al,BYTE PTR ds:[esi]
  40af2e:	scas   eax,DWORD PTR es:[edi]
  40af2f:	pop    es
  40af30:	pop    ds
  40af31:	jbe    0x40af67
  40af33:	jmp    FWORD PTR [eax]
  40af35:	pushf  
  40af36:	outs   dx,DWORD PTR ds:[esi]
  40af37:	lock sub BYTE PTR [ebp+esi*1+0x35e726e8],ah
  40af3f:	call   DWORD PTR [eax]
  40af41:	jle    0x40af6d
  40af43:	jmp    0xff76acee
  40af48:	add    BYTE PTR [edx+0x1a],ah
  40af4b:	xor    BYTE PTR [edi],cl
  40af4d:	pop    edi
  40af4e:	jle    0x40af53
  40af50:	neg    DWORD PTR [ecx+0x37e8ffac]
  40af56:	fs pop ds
  40af58:	je     0x40af01
  40af5a:	sbb    BYTE PTR [ebp+0x30d03ad8],0x4a
  40af61:	pop    ebx
  40af62:	xchg   DWORD PTR [edx*4+0x3a7a67cc],eax
  40af69:	iret   
  40af6a:	(bad)  
  40af6b:	adc    bl,BYTE PTR [edx+eiz*1]
  40af6e:	out    dx,eax
  40af6f:	xor    dl,ch
  40af71:	shl    DWORD PTR [esi-0x2e32573e],0xfb
  40af78:	cwde   
  40af79:	aad    0x41
  40af7b:	xor    BYTE PTR [eax+0x37ccde3b],bl
  40af81:	arpl   di,ax
  40af83:	add    eax,0x306f62f7
  40af88:	or     bl,BYTE PTR [ebx+0x17]
  40af8b:	daa    
  40af8c:	jp     0x40af5a
  40af8e:	pop    ss
  40af8f:	xor    BYTE PTR [eax],al
	...
  40af99:	add    BYTE PTR [eax],al
  40af9b:	add    dl,ch
  40af9d:	into   
  40af9e:	movzx  esi,al
  40afa1:	mov    edx,0xcc6065f0
  40afa6:	xor    eax,0x9262f345
  40afab:	jl     0x40b010
  40afad:	loop   0x40afd9
  40afaf:	pop    ds
  40afb0:	inc    eax
  40afb1:	int3   
  40afb2:	out    0x7d,eax
  40afb4:	mov    edx,0xc22f3ece
  40afb9:	jb     0x40af93
  40afbb:	mov    ecx,0x9480bafc
  40afc0:	mul    DWORD PTR [edx-0x1c]
  40afc3:	inc    ebx
  40afc4:	lock in eax,0x6f
  40afc7:	add    al,0xf7
  40afc9:	bound  esp,QWORD PTR [eax+0x66308c9]
  40afcf:	jmp    0x250212c8
  40afd4:	mov    edi,0xf4e900cb
  40afd9:	cmp    BYTE PTR [esi],al
  40afdb:	adc    edi,ebx
  40afdd:	cmp    BYTE PTR [esi],al
  40afdf:	add    esi,ebx
  40afe1:	fld    QWORD PTR [edx-0x6b]
  40afe4:	retf   
  40afe5:	fiadd  WORD PTR [edx-0x733df83]
  40afeb:	sbb    DWORD PTR [eax],esp
  40afed:	push   esi
  40afee:	(bad)  
  40afef:	jbe    0x40af7f
  40aff1:	(bad)  
  40aff2:	in     eax,dx
  40aff3:	dec    edi
  40aff4:	imul   esp,DWORD PTR [edx+0x6],0xfffffff2
  40aff8:	xor    al,0x57
  40affa:	add    al,0x52
  40affc:	into   
  40affd:	fiadd  WORD PTR [edx+0x45]
	...
  40b00b:	add    al,ah
  40b00d:	retf   
  40b00e:	clc    
  40b00f:	mov    ecx,0x3ef1e577
  40b014:	enter  0x55cb,0x3e
  40b018:	dec    esi
  40b019:	pop    ebx
  40b01a:	stc    
  40b01b:	mov    esp,0x8646c388
  40b020:	ror    bl,1
  40b022:	mov    gs,WORD PTR [ebx+eax*8-0x2d]
  40b026:	clc    
  40b027:	push   ds
  40b028:	ins    BYTE PTR es:[edi],dx
  40b029:	or     esi,DWORD PTR [edx-0x35]
  40b02c:	jne    0x40b03b
  40b02e:	jmp    0xeb7d:0x5cc1016
  40b035:	cmp    al,BYTE PTR [esi]
  40b037:	jmp    0x3d39bd2d
  40b03c:	pop    ss
  40b03d:	aam    0xf8
  40b03f:	out    dx,al
  40b040:	adc    DWORD PTR [esi],edx
  40b042:	neg    dh
  40b044:	or     esp,ecx
  40b046:	clc    
  40b047:	push   esp
  40b048:	xor    eax,ebx
  40b04a:	mov    dl,0xa0
  40b04c:	fxch   st(3)
  40b04e:	clc    
  40b04f:	xchg   esp,eax
  40b050:	in     al,0xd3
  40b052:	clc    
  40b053:	add    BYTE PTR [ecx],dh
  40b055:	addr16 hlt 
  40b057:	mov    ds:0x45f97c51,eax
  40b05c:	inc    esi
  40b05d:	push   0x92cbff86
  40b062:	out    dx,al
  40b063:	adc    DWORD PTR [esi+0x5f],edi
  40b066:	push   es
  40b067:	leave  
  40b068:	pushf  
  40b069:	retf   0x54f8
  40b06c:	push   ebp
  40b06d:	push   0xffffff85
  40b06f:	les    eax,FWORD PTR [eax]
	...
  40b079:	add    BYTE PTR [eax],al
  40b07b:	add    BYTE PTR [edx-0x14],dh
  40b07e:	clc    
  40b07f:	imul   edx,esi,0x66087379
  40b085:	popa   
  40b086:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b087:	inc    DWORD PTR [ecx+0x47]
  40b08a:	inc    ebx
  40b08b:	cld    
  40b08c:	not    al
  40b08e:	pop    ebx
  40b08f:	inc    ecx
  40b090:	into   
  40b091:	jns    0x40b0c6
  40b093:	loope  0x40b0fb
  40b095:	lahf   
  40b096:	clc    
  40b097:	dec    bl
  40b099:	into   
  40b09a:	loopne 0x40b0c1
  40b09c:	xor    DWORD PTR [ecx-0x7],edi
  40b09f:	push   0x459d98
  40b0a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b0a5:	fs push es
  40b0a7:	add    BYTE PTR [esi],bl
  40b0a9:	jns    0x40b11e
  40b0ab:	or     BYTE PTR [esi],dh
  40b0ad:	jne    0x40b0a8
  40b0af:	call   ecx
  40b0b1:	in     eax,dx
  40b0b2:	inc    edi
  40b0b3:	pop    ebx
  40b0b4:	lahf   
  40b0b5:	data16 stc 
  40b0b7:	xor    eax,0x460dff
  40b0bc:	icebp  
  40b0bd:	or     al,BYTE PTR [ecx]
  40b0bf:	call   0x3a2a12
  40b0c4:	or     WORD PTR [ecx+eax*2+0x5e],bx
  40b0c9:	out    dx,al
  40b0ca:	push   es
  40b0cb:	add    BYTE PTR [esi-0x1a],cl
  40b0ce:	clc    
  40b0cf:	jne    0x40b117
  40b0d1:	outs   dx,BYTE PTR ds:[esi]
  40b0d2:	call   0xf9b902d5
  40b0d7:	jne    0x40b0d0
  40b0d9:	scas   eax,DWORD PTR es:[edi]
  40b0da:	sub    dh,BYTE PTR [ebp-0x11]
  40b0dd:	mov    ds:0xa030,eax
	...
  40b0ea:	add    BYTE PTR [eax],al
  40b0ec:	sbb    BYTE PTR [ecx-0x44043dc4],ah
  40b0f2:	iret   
  40b0f3:	mov    bl,BYTE PTR [ebx]
  40b0f5:	adc    DWORD PTR [ecx+0x62fc0f0b],esi
  40b0fb:	(bad)  
  40b0fc:	clc    
  40b0fd:	aam    0x44
  40b0ff:	je     0x40b142
  40b101:	je     0x40b17d
  40b103:	pop    ebx
  40b104:	ss mov esp,0x2133e7d4
  40b10a:	sub    edi,edi
  40b10c:	inc    edi
  40b10d:	ins    BYTE PTR es:[edi],dx
  40b10e:	shl    BYTE PTR [edi-0x9],cl
  40b111:	mov    ebx,0xce5fbe19
  40b116:	int    0x40
  40b118:	imul   DWORD PTR [ebx+0x2b]
  40b11b:	jne    0x40b10c
  40b11d:	xor    esi,ecx
  40b11f:	retf   
  40b120:	mov    al,0x28
  40b122:	retf   0xf667
  40b125:	mov    ebx,0xb10fbe19
  40b12a:	int    0x40
  40b12c:	imul   ebx
  40b12e:	sub    DWORD PTR [ebp-0x1],esi
  40b131:	xor    esp,ebp
  40b133:	retf   
  40b134:	mov    BYTE PTR [eax-0x440a9836],dl
  40b13a:	sbb    DWORD PTR [esi+0x40ce000f],edi
  40b140:	test   DWORD PTR [ebx],0x63ff752a
  40b146:	stc    
  40b147:	retf   
  40b148:	pusha  
  40b149:	pop    eax
  40b14a:	sbb    dl,BYTE PTR [esi]
  40b14c:	xchg   esp,eax
  40b14d:	pusha  
  40b14e:	sub    ecx,ecx
	...
  40b15c:	xor    eax,0x7c5504d3
  40b161:	pop    edi
  40b162:	xchg   esp,eax
  40b164:	inc    ebx
  40b165:	in     eax,0x4
  40b167:	push   0xffffffde
  40b169:	(bad)  
  40b16a:	loopne 0x40b122
  40b16c:	clc    
  40b16d:	mov    edx,0xc9286426
  40b172:	gs (bad) 
  40b174:	sbb    al,0x3c
  40b176:	cmc    
  40b177:	sub    al,0xa2
  40b179:	pop    edx
  40b17a:	xlat   BYTE PTR ds:[ebx]
  40b17b:	adc    DWORD PTR [eax],0xffffffc9
  40b17e:	mov    bh,0x99
  40b180:	aad    0xc9
  40b182:	cmp    esp,edi
  40b184:	sbb    BYTE PTR [eax-0x58],dl
  40b187:	sub    al,0xf8
  40b189:	cmp    eax,DWORD PTR [ebx]
  40b18b:	sub    eax,0x9f975b6a
  40b190:	jmp    0x6a6d415d
  40b195:	mov    DWORD PTR [edi+0x1cbaf0b6],0xb5c8d064
  40b19f:	inc    ecx
  40b1a0:	repz bound ebx,QWORD PTR [edx]
  40b1a3:	jns    0x40b178
  40b1a5:	in     al,0xa2
  40b1a7:	das    
  40b1a8:	mov    eax,0xd1bf34e
  40b1ad:	add    BYTE PTR [eax+0x2c],bl
  40b1b0:	cld    
  40b1b1:	mov    ds:0x635487df,al
  40b1b6:	out    dx,eax
  40b1b7:	add    ebp,DWORD PTR [esi+0x1e]
  40b1ba:	inc    ebx
  40b1bb:	adc    BYTE PTR [edx],0x73
  40b1be:	out    dx,eax
  40b1bf:	mov    bh,0x0
	...
  40b1c9:	add    BYTE PTR [eax],al
  40b1cb:	add    dl,bh
  40b1cd:	(bad)  
  40b1ce:	mov    ecx,0x2b4e8013
  40b1d3:	sbb    ebx,DWORD PTR [esi+0x1]
  40b1d6:	and    BYTE PTR [esi+edi*2],ch
  40b1d9:	push   ds
  40b1da:	sbb    ebx,DWORD PTR [ebx+0x3ae2c95]
  40b1e0:	pusha  
  40b1e1:	dec    esi
  40b1e2:	or     ebx,DWORD PTR [ebx]
  40b1e4:	and    al,BYTE PTR [ecx]
  40b1e6:	add    BYTE PTR [edi+eiz*4],ch
  40b1e9:	cmp    ch,bh
  40b1eb:	add    ebx,DWORD PTR [eax+0x9]
  40b1ee:	push   es
  40b1ef:	cdq    
  40b1f0:	adc    ecx,DWORD PTR [esi+0xe]
  40b1f3:	add    DWORD PTR [eax-0x65],esp
  40b1f6:	clc    
  40b1f7:	out    0x13,al
  40b1f9:	in     eax,0xa3
  40b1fb:	(bad)  
  40b1fd:	cmp    dl,bh
  40b1ff:	xor    bh,BYTE PTR [edx]
  40b201:	enter  0x54f7,0xcf
  40b205:	mov    edx,0xc7dc8f11
  40b20a:	push   ebp
  40b20b:	push   ecx
  40b20c:	repnz (bad) 
  40b20e:	jmp    0x7309dd8a
  40b213:	loope  0x40b1f1
  40b215:	push   ebx
  40b216:	into   
  40b217:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b218:	sbb    al,0xbb
  40b21a:	dec    bx
  40b21c:	sbb    al,0xc8
  40b21e:	ins    DWORD PTR es:[edi],dx
  40b21f:	pop    esi
  40b220:	mov    al,0x22
  40b222:	push   es
  40b223:	mov    fs,WORD PTR [esi+0x567aedcb]
  40b229:	enter  0x19f8,0x6b
  40b22d:	xbegin 0x40b2b9
	...
  40b23b:	add    BYTE PTR [ebp+0x33],cl
  40b23e:	stc    
  40b23f:	hlt    
  40b240:	mov    esp,0xdc3153bf
  40b245:	(bad)  
  40b246:	in     eax,dx
  40b247:	test   eax,0xc1f8c812
  40b24c:	cld    
  40b24d:	sub    eax,DWORD PTR [edi-0x17]
  40b250:	int    0x4d
  40b252:	cli    
  40b253:	push   ecx
  40b254:	sub    esi,edi
  40b256:	clc    
  40b257:	mov    ds:0xdde9073f,eax
  40b25d:	or     BYTE PTR [esi+0x2e],dl
  40b260:	inc    esi
  40b261:	pop    edi
  40b262:	out    dx,al
  40b263:	fsubr  DWORD PTR [eax+ecx*8]
  40b266:	clc    
  40b267:	adc    esp,edi
  40b269:	add    al,0xf9
  40b26b:	push   ss
  40b26c:	or     al,0x4e
  40b26e:	cli    
  40b26f:	add    DWORD PTR [eax*1-0x7a06ff07],eax
  40b276:	les    ecx,FWORD PTR [esi+ebx*2]
  40b279:	mov    dl,0x8b
  40b27b:	in     al,dx
  40b27c:	int    0x22
  40b27e:	cli    
  40b27f:	push   0x4e
  40b281:	in     eax,0x1e
  40b283:	call   ebx
  40b285:	(bad)  
  40b286:	loopne 0x40b2c1
  40b288:	test   eax,0xd389f97c
  40b28d:	jp     0x40b2fb
  40b28f:	add    BYTE PTR [eax+ebx*2+0x6b0675f9],dh
  40b296:	and    al,0xff
  40b298:	dec    ecx
  40b299:	jl     0x40b307
  40b29b:	add    BYTE PTR [edi+edi*4+0x75f7],dh
	...
  40b2aa:	add    BYTE PTR [eax],al
  40b2ac:	push   ss
  40b2ad:	imul   edx,DWORD PTR [eax],0xffffffff
  40b2b0:	cdq    
  40b2b1:	jns    0x40b31f
  40b2b3:	add    BYTE PTR [ebx+ebx*2],al
  40b2b6:	stc    
  40b2b7:	jne    0x40b28f
  40b2b9:	push   0xc
  40b2bb:	jmp    FWORD PTR [ecx+0x79]
  40b2be:	outs   dx,BYTE PTR ds:[esi]
  40b2bf:	add    eax,0x69f8a01a
  40b2c4:	aam    0x79
  40b2c6:	jae    0x40b2d0
  40b2c8:	jbe    0x40b33f
  40b2ca:	clc    
  40b2cb:	dec    DWORD PTR [ecx-0x16]
  40b2ce:	add    DWORD PTR [edi+ebx*2+0x62],ebx
  40b2d2:	ins    BYTE PTR es:[edi],dx
  40b2d3:	and    ecx,DWORD PTR [ecx+0x13]
  40b2d6:	add    eax,ebp
  40b2d8:	cmp    bh,BYTE PTR [ecx+edi*8-0x1]
  40b2dc:	mov    dh,0x63
  40b2de:	pop    edx
  40b2df:	inc    ecx
  40b2e0:	sahf   
  40b2e1:	call   0xca84b202
  40b2e6:	loopne 0x40b2c5
  40b2e8:	enter  0xf978,0xff
  40b2ec:	inc    ebx
  40b2ed:	jle    0x40b2e8
  40b2ef:	jne    0x40b357
  40b2f1:	push   0x26
  40b2f3:	lahf   
  40b2f4:	or     DWORD PTR [ecx-0x31],edi
  40b2f7:	ret    0xb7f7
  40b2fa:	add    al,0x55
  40b2fc:	ins    BYTE PTR es:[edi],dx
  40b2fd:	enter  0xc484,0x5f
  40b301:	lds    ebp,FWORD PTR [esi]
  40b303:	(bad)  
  40b304:	jp     0x40b305
  40b306:	and    BYTE PTR [eax+0x40],dl
  40b309:	inc    edi
  40b30a:	adc    eax,0x1ca7c2ff
  40b30f:	mov    eax,0x0
	...
  40b31c:	cmp    BYTE PTR [esp+eax*1+0x77b5370b],0x47
  40b324:	idiv   BYTE PTR [ebx-0x4c4d38fc]
  40b32a:	add    DWORD PTR [eax],eax
  40b32c:	idiv   DWORD PTR [ebx+0x5034545]
  40b332:	pop    es
  40b333:	add    bh,dh
  40b335:	and    DWORD PTR [edx],eax
  40b337:	push   0xfffffff7
  40b339:	and    DWORD PTR [edx],eax
  40b33b:	push   0xfffffff7
  40b33d:	dec    esi
  40b33e:	mov    ecx,0x793747f3
  40b343:	hlt    
  40b344:	call   0xd890e235
  40b349:	outs   dx,BYTE PTR ds:[esi]
  40b34a:	sub    bh,bh
  40b34c:	dec    edx
  40b34d:	loopne 0x40b368
  40b34f:	mov    bh,BYTE PTR [edx-0x45]
  40b352:	add    al,0xb
  40b354:	mov    bh,0xc7
  40b356:	imul   eax
  40b358:	in     eax,dx
  40b359:	mov    edx,0xff1f0004
  40b35e:	mov    ecx,0xa924f740
  40b363:	jg     0x994019f9
  40b369:	or     edi,DWORD PTR [edx-0x30]
  40b36c:	xor    BYTE PTR [esi],0x36
  40b36f:	test   DWORD PTR [eax-0x70ae2d7c],0x78ff6680
  40b379:	inc    edx
  40b37a:	jns    0x40b36c
  40b37c:	push   0x292062
	...
  40b389:	add    BYTE PTR [eax],al
  40b38b:	add    BYTE PTR [edi-0x7d],bl
  40b38e:	dec    esi
  40b38f:	sub    DWORD PTR [eax+0x38],esp
  40b392:	out    dx,eax
  40b393:	fwait
  40b394:	aam    0x26
  40b396:	scas   al,BYTE PTR es:[edi]
  40b397:	add    edx,DWORD PTR [eax+0xf]
  40b39a:	push   DWORD PTR [eax]
  40b39c:	dec    eax
  40b39d:	(bad)
  40b3a0:	in     al,dx
  40b3a1:	mov    edx,0xc5385fca
  40b3a6:	gs jg  0x40b3cc
  40b3a9:	int    0xdf
  40b3ab:	sub    BYTE PTR [ebp-0x434ba89e],bl
  40b3b1:	and    ebp,edi
  40b3b3:	sub    BYTE PTR [edx-0x2e],ah
  40b3b6:	iret   
  40b3b7:	sub    BYTE PTR [eax],dl
  40b3b9:	lds    edi,FWORD PTR [ecx]
  40b3bb:	clc    
  40b3bc:	adc    BYTE PTR [ebx-0x7d],bl
  40b3bf:	sub    BYTE PTR [eax],al
  40b3c1:	fld    TBYTE PTR [ecx+0x1b]
  40b3c4:	add    ch,al
  40b3c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b3c7:	test   BYTE PTR [edx-0x17d76849],dh
  40b3cd:	arpl   WORD PTR [ebx],dx
  40b3cf:	hlt    
  40b3d0:	pop    eax
  40b3d1:	arpl   di,bp
  40b3d3:	sbb    BYTE PTR [ecx+0x37c7bb3b],bl
  40b3d9:	arpl   WORD PTR [eax+0x77ccdb6e],ax
  40b3df:	sub    al,al
  40b3e1:	dec    esi
  40b3e2:	out    0x1b,eax
  40b3e4:	jnp    0x40b380
  40b3e6:	sub    BYTE PTR [bx],bl
  40b3e9:	(bad)  
  40b3ea:	out    dx,eax
  40b3eb:	sbb    BYTE PTR [ecx+0x3b],ch
  40b3ee:	adc    eax,ecx
	...
  40b3fc:	aaa    
  40b3fd:	arpl   WORD PTR [eax+0x6e],dx
  40b400:	mov    ecx,esp
  40b402:	inc    edi
  40b403:	sub    BYTE PTR [eax+0x531bf74e],dl
  40b409:	call   0x4106:0x6742837
  40b410:	mov    ebx,0x74a0e9f8
  40b416:	outs   dx,BYTE PTR ds:[esi]
  40b417:	jmp    0x91f86810
  40b41c:	dec    eax
  40b41d:	sub    BYTE PTR [edi-0x17],al
  40b420:	femms  
  40b422:	out    dx,al
  40b423:	push   ss
  40b424:	pop    ds
  40b425:	(bad)  
  40b426:	clc    
  40b427:	jl     0x40b475
  40b429:	mov    esp,0xc40f3084
  40b42e:	ins    DWORD PTR es:[edi],dx
  40b42f:	call   0x81f86828
  40b434:	sub    BYTE PTR es:[edi-0x17],al
  40b438:	ror    DWORD PTR ds:0xc3d8d6ee,1
  40b43e:	clc    
  40b43f:	pop    esp
  40b440:	sbb    edi,DWORD PTR [esp+ebp*2-0x73c2760]
  40b447:	jl     0x40b438
  40b449:	retf   
  40b44a:	clc    
  40b44b:	mov    esi,0xb6a634e3
  40b450:	rol    bl,1
  40b452:	mov    dl,0xc1
  40b454:	and    ah,al
  40b456:	clc    
  40b457:	xchg   ecx,eax
  40b458:	xchg   esp,eax
  40b459:	jecxz  0x40b453
  40b45b:	sahf   
  40b45c:	sbb    BYTE PTR [esi],cl
  40b45e:	neg    BYTE PTR [esi+0x0]
	...
  40b46c:	adc    ah,al
  40b46e:	clc    
  40b46f:	adc    al,0xcf
  40b471:	les    esi,FWORD PTR [edx-0xf]
  40b474:	in     al,dx
  40b475:	push   cs
  40b476:	clc    
  40b477:	jle    0x40b491
  40b479:	les    esi,FWORD PTR [edx-0x73bf787]
  40b47f:	xor    DWORD PTR [eax-0x1d],0x1dd066f8
  40b486:	(bad)  
  40b487:	push   eax
  40b488:	jecxz  0x40b44e
  40b48a:	clc    
  40b48b:	push   esi
  40b48c:	ror    BYTE PTR [ebp-0x6],1
  40b48f:	inc    ecx
  40b490:	push   esp
  40b491:	xlat   BYTE PTR ds:[ebx]
  40b492:	add    eax,0xc4869e00
  40b497:	or     al,0x8e
  40b499:	mov    dl,0x8b
  40b49b:	in     al,dx
  40b49c:	rcl    DWORD PTR [ecx],0xd
  40b49f:	call   0x39f782
  40b4a4:	gs pop ds
  40b4a6:	jb     0x40b4e1
  40b4a8:	xchg   BYTE PTR [edi-0x50b1bea4],bl
  40b4ae:	loopne 0x40b4bc
  40b4b0:	mov    edx,0x6e50f97b
  40b4b5:	out    0xf8,eax
  40b4b7:	push   ecx
  40b4b9:	cmp    al,0x6e
  40b4bb:	sub    al,0x62
  40b4bd:	sahf   
  40b4be:	clc    
  40b4bf:	dec    edi
  40b4c0:	and    DWORD PTR [edx],edx
  40b4c2:	add    eax,ebp
  40b4c4:	dec    eax
  40b4c5:	xchg   ecx,edi
  40b4c7:	push   DWORD PTR [esi+0x310005e6]
  40b4cd:	cmp    eax,0x366e
	...
  40b4da:	add    BYTE PTR [eax],al
  40b4dc:	loop   0x40b47b
  40b4de:	clc    
  40b4df:	dec    edi
  40b4e0:	xor    DWORD PTR [edx],edx
  40b4e2:	add    eax,ebp
  40b4e4:	sub    al,0x87
  40b4e6:	stc    
  40b4e7:	push   DWORD PTR [esi]
  40b4e9:	push   0x7fa1ff99
  40b4ee:	les    ecx,FWORD PTR [eax]
  40b4f0:	ficom  WORD PTR [ebx-0x7db21375]
  40b4f6:	cli    
  40b4f7:	push   esi
  40b4f8:	sbb    ebp,ebx
  40b4fa:	clc    
  40b4fb:	imul   eax,ebp,0x66087389
  40b501:	mov    ebp,0x3f41ff99
  40b506:	inc    ebx
  40b507:	cld    
  40b508:	push   ebp
  40b509:	mov    bl,0x61
  40b50b:	dec    eax
  40b50c:	fbld   TBYTE PTR [esi-0x73]
  40b50f:	cmp    eax,0x45fec7
  40b514:	push   cs
  40b515:	leave  
  40b516:	clc    
  40b517:	push   cs
  40b518:	test   DWORD PTR [edi+0x6c],0x9ccbf700
  40b51f:	and    BYTE PTR [ebx],ch
  40b521:	or     eax,DWORD PTR ds:0x70ba8f56
  40b527:	add    bh,dh
  40b529:	les    eax,FWORD PTR [esp+esi*2-0x3f]
  40b52d:	or     eax,DWORD PTR [ebp+0x78b8f738]
  40b533:	xchg   edi,esi
  40b535:	retf   
  40b536:	add    al,0x50
  40b538:	iret   
  40b539:	stos   BYTE PTR es:[edi],al
  40b53a:	rol    BYTE PTR [eax-0x9],0x63
  40b53e:	sahf   
  40b53f:	mov    DWORD PTR [eax],eax
	...
  40b549:	add    BYTE PTR [eax],al
  40b54b:	add    bh,dh
  40b54d:	retf   
  40b54e:	into   
  40b54f:	add    dh,BYTE PTR ds:0x8e601cdc
  40b555:	mov    ecx,0xe3c75022
  40b55a:	add    al,0x0
  40b55c:	sbb    BYTE PTR [edx],cl
  40b55e:	call   0x1850:0x28ac32b
  40b565:	pop    ds
  40b566:	cli    
  40b567:	out    0x9c,eax
  40b569:	add    esp,DWORD PTR [ebx]
  40b56b:	jmp    FWORD PTR [edi+0x10000513]
  40b571:	inc    edx
  40b572:	call   0xf050:0x28a9b35
  40b579:	jbe    0x40b575
  40b57b:	out    0x40,eax
  40b57d:	hlt    
  40b57e:	and    bh,bh
  40b580:	iret   
  40b581:	imul   eax,DWORD PTR [ebx-0x391b2701],0x67
  40b588:	out    dx,al
  40b589:	pop    ebp
  40b58b:	jmp    DWORD PTR [ecx]
  40b58d:	aam    0x3a
  40b58f:	mov    esi,edi
  40b591:	retf   
  40b592:	std    
  40b593:	mov    edi,0xe7cb0043
  40b598:	or     al,0x23
  40b59a:	and    edi,edi
  40b59c:	inc    edi
  40b59d:	arpl   WORD PTR [edi+0x47c1a09b],di
  40b5a3:	jg     0x785b
  40b5a8:	nop
  40b5a9:	xor    DWORD PTR [eax-0x51],ecx
  40b5ac:	lock retf 0x3c08
	...
  40b5bc:	add    cl,0xa6
  40b5bf:	fwait
  40b5c0:	mul    DWORD PTR [edx+0x40]
  40b5c3:	data16 fistp QWORD PTR [eax-0x75]
  40b5c7:	ret    0x3168
  40b5ca:	and    BYTE PTR [edi+0x3bfccaf8],ch
  40b5d0:	pop    eax
  40b5d1:	rol    DWORD PTR [esi],0x9
  40b5d4:	jo     0x40b597
  40b5d6:	pop    es
  40b5d7:	sbb    esi,esi
  40b5d9:	sub    BYTE PTR [edi-0x1a],ch
  40b5dc:	inc    eax
  40b5dd:	ss add eax,0x2f753cbe
  40b5e3:	imul   esi,DWORD PTR [eax],0xffffffc1
  40b5e6:	out    0x24,eax
  40b5e8:	and    eax,0xf1fd2710
  40b5ed:	out    0x21,eax
  40b5ef:	and    eax,0xa44c118
  40b5f4:	adc    BYTE PTR [edi],dh
  40b5f6:	out    0x1b,eax
  40b5f8:	xor    al,0xc0
  40b5fa:	mov    edi,0xb8858d24
  40b5ff:	scas   al,BYTE PTR es:[edi]
  40b600:	lock retf 0x2575
  40b604:	lock rol BYTE PTR [eax+ecx*1-0x18],0x36
  40b60a:	neg    DWORD PTR [ebx]
  40b60c:	nop
  40b60d:	rcl    DWORD PTR [edi+0x33154f24],0xc3
  40b614:	rol    cl,1
  40b616:	shl    DWORD PTR [edx],1
  40b618:	aas    
  40b619:	and    ch,bh
  40b61b:	and    al,0x4a
  40b61d:	imul   edx,DWORD PTR [edi+0xf2],0x0
	...
  40b62c:	mov    ebx,0x8c7605c0
  40b631:	adc    bl,BYTE PTR [edx+0x28]
  40b634:	repz dec edx
  40b636:	add    al,0xe9
  40b638:	hlt    
  40b639:	loop   0x40b633
  40b63b:	aam    0x9c
  40b63d:	enter  0x5418,0xdb
  40b641:	mov    edi,0xbfd0d4f8
  40b646:	jb     0x40b639
  40b648:	fdiv   QWORD PTR [edx-0x66]
  40b64b:	rcr    DWORD PTR ds:[edi],cl
  40b64e:	pop    eax
  40b64f:	and    BYTE PTR [esi-0x106bf99a],dh
  40b655:	into   
  40b656:	xchg   BYTE PTR ds:0x1ef8b7c4,ch
  40b65c:	loope  0x40b683
  40b65e:	cli    
  40b65f:	mov    ecx,0xe16361b
  40b664:	cdq    
  40b665:	ins    BYTE PTR es:[edi],dx
  40b666:	out    dx,al
  40b667:	das    
  40b668:	mov    esi,0xb4f20662
  40b66d:	outs   dx,DWORD PTR ds:[esi]
  40b66e:	sub    DWORD PTR [ebx+0x260662f6],0x69
  40b675:	mov    eax,0x62f4e905
  40b67a:	shl    DWORD PTR [edi+edi*8],0xbf
  40b67e:	add    cl,ch
  40b680:	hlt    
  40b681:	dec    esp
  40b682:	push   es
  40b683:	inc    ebx
  40b684:	repz dec esp
  40b686:	push   es
  40b687:	push   ebx
  40b688:	sti    
  40b689:	in     eax,dx
  40b68a:	inc    edx
  40b68b:	mov    ch,0x43
  40b68d:	out    dx,eax
  40b68e:	cmp    BYTE PTR [ebp+0x0],0x0
  40b695:	add    BYTE PTR [eax],al
  40b697:	add    BYTE PTR [eax],al
  40b699:	add    BYTE PTR [eax],al
  40b69b:	add    BYTE PTR [eax+eax*8],cl
  40b69e:	clc    
  40b69f:	sbb    DWORD PTR [esi+esi*1],edx
  40b6a2:	(bad)  
  40b6a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b6a4:	jle    0x40b661
  40b6a6:	in     eax,dx
  40b6a7:	sub    DWORD PTR [ecx+0x62],0x3734e206
  40b6ae:	add    eax,DWORD PTR [eax+0x664fe]
  40b6b4:	into   
  40b6b5:	or     edi,DWORD PTR [edx-0x698f0b8]
  40b6bb:	jne    0x40b68b
  40b6bd:	mov    ebp,edi
  40b6bf:	mov    eax,ds:0x8b568419
  40b6c4:	(bad)  
  40b6c6:	xor    ah,0x41
  40b6c9:	test   cl,bh
  40b6cb:	push   eax
  40b6cc:	dec    esp
  40b6cd:	mov    ebx,edi
  40b6cf:	mov    eax,ds:0x858f8439
  40b6d4:	mov    esi,0x26fff95b
  40b6d9:	mov    ah,0x9a
  40b6db:	jmp    FWORD PTR [ecx]
  40b6dd:	adc    ecx,edi
  40b6df:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  40b6e1:	inc    DWORD PTR [ebp+0x0]
  40b6e4:	sbb    DWORD PTR [edx],ebx
  40b6e6:	div    bh
  40b6e8:	stc    
  40b6e9:	cmp    ecx,0x75
  40b6ec:	pop    edx
  40b6ed:	mov    esi,DWORD PTR [ecx+eiz*4]
  40b6f0:	stc    
  40b6f1:	or     DWORD PTR [edi-0x6a40d7b],0xffffffff
  40b6f8:	arpl   WORD PTR fs:[esi-0x7f],bp
  40b6fc:	mov    ah,BYTE PTR [esi+0xfef8]
	...
  40b70a:	add    BYTE PTR [eax],al
  40b70c:	jecxz  0x40b764
  40b70e:	icebp  
  40b70f:	call   FWORD PTR [ecx]
  40b711:	test   BYTE PTR [ebx+0xc],dh
  40b714:	inc    esi
  40b715:	mov    esp,0xee29ffa5
  40b71a:	sub    ah,0x21
  40b71d:	test   cl,bh
  40b71f:	push   0xe
  40b721:	or     ecx,DWORD PTR [edi-0x69930a4]
  40b727:	mov    ch,0xae
  40b729:	pop    ecx
  40b72a:	stc    
  40b72b:	call   FWORD PTR [ecx-0x6517f325]
  40b731:	inc    edx
  40b732:	stc    
  40b733:	jmp    DWORD PTR [edi-0x15]
  40b736:	in     eax,dx
  40b737:	div    edi
  40b739:	aam    0x23
  40b73b:	push   0xfffffff7
  40b73d:	arpl   WORD PTR [ecx+0x5c],si
  40b740:	ss int3 
  40b742:	and    esi,DWORD PTR [ebp-0xdbca39]
  40b748:	mov    al,0xbf
  40b74a:	or     al,ch
  40b74c:	xchg   esi,eax
  40b74d:	sub    al,0x24
  40b74f:	jmp    FWORD PTR [esi+0x4f]
  40b752:	cmp    edi,esi
  40b754:	cwde   
  40b755:	sbb    eax,0x1d978596
  40b75a:	and    al,0xff
  40b75c:	daa    
  40b75d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b75e:	pop    edi
  40b75f:	pop    esp
  40b760:	ss int3 
  40b762:	and    esi,DWORD PTR [ebp-0xdb8a79]
  40b768:	jo     0x40b729
  40b76a:	and    DWORD PTR [eax-0x4a],ecx
  40b76d:	retf   
  40b76e:	sub    al,0xbe
	...
  40b77c:	xchg   edi,eax
  40b77d:	test   DWORD PTR [ebx+ecx*1],esp
  40b780:	aaa    
  40b781:	fdivr  st,st(1)
  40b783:	adc    BYTE PTR [edx+0x48ff1c6c],0xc8
  40b78a:	popf   
  40b78b:	cmovo  edi,esp
  40b78e:	xchg   ebx,eax
  40b78f:	test   DWORD PTR [edi],ebx
  40b791:	mov    ch,0x26
  40b793:	inc    edi
  40b795:	arpl   WORD PTR [eax+0x2acd289d],cx
  40b79b:	adc    al,0xec
  40b79d:	or     ebx,DWORD PTR [esi-0x596c38fb]
  40b7a3:	pushf  
  40b7a4:	adc    BYTE PTR [ebp-0x6ad07ab2],dl
  40b7aa:	es (bad) 
  40b7ac:	jmp    0x3247:0x6a0004cb
  40b7b3:	div    eax
  40b7b5:	hlt    
  40b7b6:	mov    cl,0x67
  40b7b8:	cdq    
  40b7b9:	outs   dx,DWORD PTR ds:[esi]
  40b7ba:	(bad)  
  40b7bd:	bound  ebx,QWORD PTR [edx+0x14]
  40b7c0:	loopne 0x40b77f
  40b7c2:	xchg   edi,eax
  40b7c3:	and    DWORD PTR [edx+0x6f],ecx
  40b7c6:	xchg   DWORD PTR [ebp-0x74784298],edx
  40b7cc:	jp     0x40b764
  40b7ce:	ja     0x40b7f1
  40b7d0:	mov    eax,0xa82839e1
  40b7d5:	mov    ebp,0xe6f8046f
  40b7da:	push   ebx
  40b7db:	add    al,0xf7
  40b7dd:	bound  ebp,QWORD PTR [edi+ebx*2+0x0]
	...
  40b7e9:	add    BYTE PTR [eax],al
  40b7eb:	add    BYTE PTR [ebx-0x8dea84b],cl
  40b7f1:	ins    DWORD PTR es:[edi],dx
  40b7f2:	imul   edx,DWORD PTR [edx-0x7b109d09],0x42
  40b7f9:	retf   0x2137
  40b7fc:	js     0x40b860
  40b7fe:	call   0xefa32e8a
  40b803:	add    ebx,edi
  40b805:	push   edx
  40b806:	out    dx,eax
  40b807:	xor    BYTE PTR [ecx+0x4f0b99bd],ah
  40b80d:	nop
  40b80e:	test   DWORD PTR [ecx],esp
  40b810:	push   eax
  40b811:	mov    ebp,0xbd403059
  40b816:	pop    es
  40b817:	and    edx,ecx
  40b819:	push   0x17
  40b81b:	jmp    0xca6a:0x20f7bd5e
  40b822:	mul    DWORD PTR [eax]
  40b824:	sub    BYTE PTR [ebp+0x5a0f0b71],bh
  40b82a:	test   DWORD PTR [eax],esp
  40b82c:	sbb    BYTE PTR [ebp-0x42f7d86f],bh
  40b832:	iret   
  40b833:	and    BYTE PTR [edx+0x5d0dc76a],al
  40b839:	mov    ebp,0x9a4220bf
  40b83e:	scas   eax,DWORD PTR es:[edi]
  40b83f:	and    al,dh
  40b841:	mov    esp,0xcafb3c05
  40b846:	fwait
  40b847:	push   eax
  40b848:	pop    ss
  40b849:	mov    esp,0xb4185cf8
  40b84e:	clc    
  40b84f:	sahf   
	...
  40b85c:	pop    ss
  40b85d:	ss push cs
  40b85f:	add    DWORD PTR [esi],0x7b8ef8da
  40b865:	(bad)  
  40b866:	sar    DWORD PTR [esi+0x17],1
  40b869:	mov    esp,0xe1b3f505
  40b86e:	mov    edx,0xf8bc0f99
  40b873:	in     eax,0x89
  40b875:	push   edx
  40b876:	lea    ebp,[eax+eiz*8-0x4d]
  40b87a:	clc    
  40b87b:	pop    esi
  40b87c:	xlat   BYTE PTR ds:[ebx]
  40b87d:	jb     0x40b878
  40b87f:	fdiv   st(4),st
  40b881:	retf   0x706b
  40b884:	xlat   BYTE PTR ds:[ebx]
  40b885:	mov    ebx,0xbc4af3ec
  40b88a:	div    DWORD PTR [esp+edi*8+0x175057ca]
  40b891:	mov    esp,0xb41874f8
  40b896:	clc    
  40b897:	es or  al,0x1
  40b89a:	call   0xef05:0xb2bc171e
  40b8a1:	mov    ebx,0xdebf01f8
  40b8a6:	clc    
  40b8a7:	push   es
  40b8a8:	pop    ss
  40b8a9:	imul   ch
  40b8ab:	not    BYTE PTR [eax]
  40b8ad:	mov    esp,0xbba865ed
  40b8b2:	clc    
  40b8b3:	out    dx,al
  40b8b4:	retf   0xf09e
  40b8b7:	out    0xf8,al
  40b8b9:	retf   0x7d86
  40b8bc:	lock mov ebx,0x9cf8
	...
  40b8ca:	add    BYTE PTR [eax],al
  40b8cc:	iret   
  40b8cd:	mov    bl,0xf8
  40b8cf:	into   
  40b8d0:	shl    DWORD PTR [edx+ebx*4],cl
  40b8d3:	add    BYTE PTR [ecx],dh
  40b8d5:	pop    esp
  40b8d6:	stc    
  40b8d7:	mov    ch,0xae
  40b8d9:	push   ebx
  40b8da:	stc    
  40b8db:	jmp    DWORD PTR [ecx+0x2bff0cd9]
  40b8e1:	outs   dx,DWORD PTR ds:[esi]
  40b8e2:	out    dx,al
  40b8e3:	mov    ecx,0xfff95b93
  40b8e8:	sub    edx,DWORD PTR [edi-0xf]
  40b8eb:	jmp    DWORD PTR [ecx-0x72]
  40b8ee:	pop    esp
  40b8ef:	pushf  
  40b8f0:	jno    0x40b94d
  40b8f2:	stc    
  40b8f3:	inc    ebp
  40b8f4:	jbe    0x40b883
  40b8f6:	retf   
  40b8f7:	std    
  40b8f8:	xor    DWORD PTR [ecx+edi*8+0x75],ebx
  40b8fc:	and    cl,BYTE PTR [edi+0x5f8e8870]
  40b902:	iret   
  40b903:	ret    0x5fa2
  40b906:	push   ebx
  40b907:	mov    eax,DWORD PTR [edx-0x20]
  40b90a:	sar    esp,0xb4
  40b90d:	pop    edi
  40b90e:	ins    BYTE PTR es:[edi],dx
  40b90f:	sbb    al,0x31
  40b911:	fiadd  DWORD PTR [eax]
  40b913:	call   0x39f7ba
  40b918:	out    0xa9,eax
  40b91a:	cld    
  40b91b:	push   0x45a2e7
  40b920:	adc    DWORD PTR [edx+0x5f8f48e5],ebx
  40b926:	stc    
  40b927:	jne    0x40b96f
  40b929:	xchg   DWORD PTR [ebp+edi*8-0x1f],esi
  40b92d:	pop    ebx
  40b92e:	outs   dx,BYTE PTR ds:[esi]
  40b92f:	mov    ecx,0x0
	...
  40b93c:	xchg   edx,eax
  40b93d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b93e:	clc    
  40b93f:	addr16 dec esp
  40b941:	pop    edi
  40b942:	push   es
  40b943:	xor    BYTE PTR [ecx],0xda
  40b946:	add    al,ch
  40b948:	jle    0x40b8cc
  40b94a:	stc    
  40b94b:	call   DWORD PTR [ecx]
  40b94d:	(bad)  
  40b94f:	(bad)  
  40b950:	mov    ebx,0x777fee6e
  40b955:	pop    esp
  40b956:	stc    
  40b957:	leave  
  40b958:	test   DWORD PTR [edi],0x40aa0001
  40b95e:	sub    DWORD PTR [ecx-0xe502cd],eax
  40b964:	lock push ss
  40b966:	add    ch,BYTE PTR [edx+0xa]
  40b969:	icebp  
  40b96a:	popf   
  40b96b:	pop    es
  40b96c:	iret   
  40b96d:	ins    BYTE PTR es:[edi],dx
  40b96e:	jnp    0x40b96f
  40b970:	fdiv   DWORD PTR [ebx]
  40b972:	into   
  40b973:	sti    
  40b974:	pop    edi
  40b975:	rol    BYTE PTR [ecx],0x0
  40b978:	idiv   DWORD PTR [esi]
  40b97a:	mov    ?,edi
  40b97c:	shr    ecx,0x17
  40b97f:	push   eax
  40b980:	iret   
  40b981:	mov    edx,0xb4f7007f
  40b986:	inc    esp
  40b987:	je     0x40b964
  40b989:	out    dx,al
  40b98a:	add    BYTE PTR [ecx],al
  40b98c:	test   ebx,0x7b0f248f
  40b992:	mov    ecx,0x8e46f740
  40b997:	test   DWORD PTR [ecx-0x70afe7ef],0xff77f1
	...
  40b9a9:	add    BYTE PTR [eax],al
  40b9ab:	add    BYTE PTR [eax-0x24],bh
  40b9ae:	lods   al,BYTE PTR ds:[esi]
  40b9af:	push   DWORD PTR [eax+0x29]
  40b9b2:	pop    ebx
  40b9b3:	push   eax
  40b9b4:	push   0xa9e80cf7
  40b9b9:	mov    ebx,DWORD PTR [eax]
  40b9bb:	dec    DWORD PTR [edi+0x28]
  40b9be:	jl     0x40b9bf
  40b9c0:	push   eax
  40b9c1:	pop    ecx
  40b9c2:	sahf   
  40b9c3:	sti    
  40b9c4:	dec    eax
  40b9c5:	xlat   BYTE PTR ds:[ebx]
  40b9c6:	or     al,0xe8
  40b9c8:	call   0x2f3fd1ff
  40b9cd:	mov    es,WORD PTR [ecx]
  40b9cf:	add    dl,cl
  40b9d1:	xor    al,0x29
  40b9d3:	xor    DWORD PTR [ebx],0xffffffb0
  40b9d6:	lods   eax,DWORD PTR ds:[esi]
  40b9d7:	dec    DWORD PTR [esi-0x108ae857]
  40b9dd:	(bad)  
  40b9de:	xlat   BYTE PTR ds:[ebx]
  40b9df:	pop    ecx
  40b9e0:	outs   dx,DWORD PTR ds:[esi]
  40b9e1:	mov    edx,0xb6b28bd7
  40b9e6:	inc    esi
  40b9e7:	add    al,0xf7
  40b9e9:	leave  
  40b9ea:	mov    BYTE PTR [ecx+ebx*1+0x5f042e17],ch
  40b9f1:	into   
  40b9f2:	sbb    al,bl
  40b9f4:	call   0xcf4cf3b1
  40b9f9:	add    BYTE PTR [ebx+0x19b9d81d],ah
  40b9ff:	and    al,dl
  40ba01:	das    
  40ba02:	imul   DWORD PTR [ebx]
  40ba04:	stos   DWORD PTR es:[edi],eax
  40ba05:	fimul  DWORD PTR [edi-0x1d5b51e3]
  40ba0b:	add    esp,DWORD PTR [edx]
  40ba0d:	out    dx,al
  40ba0e:	xchg   edx,eax
  40ba0f:	add    DWORD PTR [eax],0x0
	...
  40ba1a:	add    BYTE PTR [eax],al
  40ba1c:	mov    ebx,0xa81d6f8e
  40ba21:	out    0x29,eax
  40ba23:	and    BYTE PTR [edi-0x46],al
  40ba26:	icebp  
  40ba27:	repz cdq 
  40ba29:	das    
  40ba2a:	repz sub ecx,DWORD PTR [ebx]
  40ba2d:	loop   0x40ba1d
  40ba2f:	add    edi,esp
  40ba31:	mov    ds:0x638b86df,al
  40ba36:	out    dx,eax
  40ba37:	add    esi,DWORD PTR [eax-0x8fbb8e1]
  40ba3d:	(bad)  
  40ba3e:	out    dx,eax
  40ba3f:	inc    esp
  40ba40:	mov    dl,0xae
  40ba42:	das    
  40ba43:	add    eax,0x3c562f7
  40ba48:	int    0x62
  40ba4a:	xchg   ebp,eax
  40ba4b:	add    ebx,ebp
  40ba4d:	bound  ebp,QWORD PTR [edx-0x39]
  40ba50:	inc    esp
  40ba51:	adc    ah,BYTE PTR [edx-0x79]
  40ba54:	dec    ebx
  40ba55:	mov    cl,0x7
  40ba57:	sbb    eax,0x1b79b9a7
  40ba5c:	xor    BYTE PTR [edi],ch
  40ba5e:	sti    
  40ba5f:	sub    esi,DWORD PTR [ecx-0xb16fa1f]
  40ba65:	ins    DWORD PTR es:[edi],dx
  40ba66:	(bad)  
  40ba67:	jne    0x40ba5a
  40ba69:	retf   
  40ba6a:	mov    al,0xe8
  40ba6c:	hlt    
  40ba6d:	bound  ebp,QWORD PTR [esi-0x64]
  40ba70:	cmp    al,0x22
  40ba72:	push   es
  40ba73:	(bad)  
  40ba74:	imul   ebp,DWORD PTR [ecx-0x12],0xf8b97a76
  40ba7b:	sbb    DWORD PTR [esi-0x6d],edi
  40ba7e:	mov    ah,BYTE PTR [eax+eax*1+0x0]
	...
  40ba8a:	add    BYTE PTR [eax],al
  40ba8c:	add    BYTE PTR [eax+0x12a4b6f8],dh
  40ba92:	out    dx,al
  40ba93:	pop    dx
  40ba95:	mov    eax,0xb37970f8
  40ba9a:	lock sahf 
  40ba9c:	jmp    0x40ba68
  40ba9e:	fidiv  DWORD PTR [ebx-0x1d]
  40baa1:	mov    bh,0x8a
  40baa3:	fs adc al,0xb0
  40baa6:	clc    
  40baa7:	xchg   BYTE PTR [eax+eax*2-0xd],ah
  40baab:	sbb    eax,0x3cf7b8b4
  40bab0:	add    al,0xb0
  40bab2:	clc    
  40bab3:	outs   dx,BYTE PTR ds:[esi]
  40bab4:	sti    
  40bab5:	sub    eax,0xd5cf510a
  40baba:	clc    
  40babb:	pop    esi
  40babc:	jge    0x40ba9c
  40babe:	loope  0x40bb1e
  40bac0:	jecxz  0x40ba79
  40bac2:	imul   ebp,ecx,0x4c
  40bac5:	mov    dh,0x59
  40bac7:	test   al,0xf4
  40bac9:	mov    bh,0xb2
  40bacb:	cmp    DWORD PTR [ebx],eax
  40bacd:	mov    eax,0x6c8936f8
  40bad2:	out    dx,al
  40bad3:	sub    ecx,ebx
  40bad5:	mov    bh,0xf8
  40bad7:	jo     0x40bb52
  40bad9:	(bad)  
  40bada:	lock push ds
  40badc:	jmp    0x40bb2a
  40bade:	push   es
  40badf:	xor    esi,0xdbe94715
  40bae5:	in     eax,dx
  40bae6:	cmc    
  40bae7:	add    BYTE PTR [ecx],dh
  40bae9:	pop    esp
  40baea:	stc    
  40baeb:	jmp    DWORD PTR [ebx+0xa5ee67]
	...
  40baf9:	add    BYTE PTR [eax],al
  40bafb:	add    bl,cl
  40bafd:	push   esi
  40bafe:	stc    
  40baff:	mov    DWORD PTR [ebx+0x19fff18b],edx
  40bb05:	or     ecx,edi
  40bb07:	addr16 add eax,0x290045fb
  40bb0d:	adc    dh,dh
  40bb0f:	imul   DWORD PTR [ecx]
  40bb11:	pop    esp
  40bb12:	stc    
  40bb13:	jne    0x40baff
  40bb15:	mov    ecx,DWORD PTR [ebp+ebx*4-0x7a70a457]
  40bb1c:	mov    dl,BYTE PTR [ebx-0x7]
  40bb1f:	push   DWORD PTR [edi+ebx*2]
  40bb22:	outs   dx,BYTE PTR ds:[esi]
  40bb23:	sbb    DWORD PTR [ebx],edi
  40bb25:	sahf   
  40bb26:	clc    
  40bb27:	(bad)  
  40bb28:	and    ecx,DWORD PTR [edi-0xf]
  40bb2b:	jmp    FWORD PTR [ecx+0x5b]
  40bb2e:	jae    0x40bb3c
  40bb30:	jbe    0x40bb3d
  40bb32:	call   0x21d8:0x82e579ff
  40bb39:	pop    esp
  40bb3a:	stc    
  40bb3b:	push   0xffffff8e
  40bb3d:	or     edx,DWORD PTR [edx+0x5d]
  40bb40:	iret   
  40bb41:	pop    esi
  40bb42:	stc    
  40bb43:	mov    ch,0x2e
  40bb45:	push   esp
  40bb46:	stc    
  40bb47:	jmp    FWORD PTR [ecx]
  40bb49:	ror    BYTE PTR [eax+ebp*8],cl
  40bb4c:	inc    edx
  40bb4d:	cmp    bh,cl
  40bb4f:	call   DWORD PTR [edi]
  40bb51:	loop   0x40bb24
  40bb53:	idiv   DWORD PTR [ecx-0x4d427aa5]
  40bb59:	push   ebx
  40bb5a:	stc    
  40bb5b:	dec    DWORD PTR [esi-0x19]
  40bb5e:	jge    0x40bae3
	...
  40bb6c:	retf   
  40bb6d:	mov    dh,cl
  40bb6f:	call   FWORD PTR [ecx]
  40bb71:	pop    edi
  40bb72:	jb     0x40bbe4
  40bb74:	fstp   QWORD PTR [ecx]
  40bb76:	out    dx,al
  40bb77:	div    edi
  40bb79:	push   eax
  40bb7a:	sbb    eax,0xace0c300
  40bb7f:	maskmovq mm2,(bad)
  40bb80:	not    DWORD PTR [eax+0x5c]
  40bb83:	jmp    DWORD PTR [edx-0x7640d34f]
  40bb89:	mov    al,0x1b
  40bb8b:	jmp    DWORD PTR [edx-0x4b]
  40bb8e:	adc    edi,edi
  40bb90:	adc    al,al
  40bb92:	xchg   ebp,eax
  40bb93:	pop    es
  40bb94:	pop    ds
  40bb95:	mov    esp,0x9000ff73
  40bb9a:	push   ebp
  40bb9b:	call   0xff5c63a0
  40bba0:	push   0xffffffb4
  40bba2:	sub    al,0x5
  40bba4:	xor    ch,0x1b
  40bba7:	jmp    FWORD PTR [edx-0x2700ec54]
  40bbad:	add    eax,0xfdc8e456
  40bbb2:	sbb    edi,edi
  40bbb4:	inc    edx
  40bbb5:	mov    ah,0x2c
  40bbb7:	lds    ebp,FWORD PTR [ecx-0x33]
  40bbba:	sbb    edi,edi
  40bbbc:	xor    ah,0x13
  40bbbf:	push   DWORD PTR [eax-0x60f86a23]
  40bbc5:	jmp    0x2de1bb40
  40bbca:	push   esi
  40bbcb:	fsub   QWORD PTR [eax+0xff1c45]
	...
  40bbd9:	add    BYTE PTR [eax],al
  40bbdb:	add    BYTE PTR [edx],cl
  40bbdd:	mov    ah,0x2c
  40bbdf:	aad    0x61
  40bbe1:	adc    eax,0x784aff1c
  40bbe6:	adc    al,0xff
  40bbe8:	js     0x40bc0f
  40bbea:	xchg   esi,eax
  40bbeb:	pop    es
  40bbec:	pop    edi
  40bbed:	test   DWORD PTR [edi-0x1],esi
  40bbf0:	push   0x68e45675
  40bbf5:	ins    DWORD PTR es:[edi],dx
  40bbf6:	sbb    al,0xe8
  40bbf8:	mov    ss,WORD PTR [ebx]
  40bbfa:	sbb    al,0xff
  40bbfc:	push   eax
  40bbfd:	arpl   WORD PTR [edx+0x27],bx
  40bc00:	inc    eax
  40bc01:	mov    dh,0x17
  40bc03:	sub    esp,DWORD PTR [ecx-0x24]
  40bc06:	bndldx (bad),[eax]
  40bc09:	lock push es
  40bc0b:	adc    dh,BYTE PTR [eax]
  40bc0d:	mov    dh,0x16
  40bc0f:	jbe    0x40bb9f
  40bc11:	mov    dh,0xf7
  40bc13:	sbb    DWORD PTR [edx-0x69],ebp
  40bc16:	neg    DWORD PTR [ecx]
  40bc18:	sbb    bl,cl
  40bc1a:	data16 jl 0x40bc2d
  40bc1d:	mov    dh,0xdf
  40bc1f:	dec    edi
  40bc20:	das    
  40bc21:	scas   al,BYTE PTR es:[edi]
  40bc22:	xlat   BYTE PTR ds:[ebx]
  40bc23:	sbb    DWORD PTR [edi],ecx
  40bc25:	cmp    BYTE PTR [esi+0x19],dh
  40bc28:	clc    
  40bc29:	mov    ch,0x91
  40bc2b:	xor    al,ch
  40bc2d:	mov    ch,0xbf
  40bc2f:	sub    al,0x65
  40bc31:	fdiv   QWORD PTR [edi-0x41101fe7]
  40bc37:	adc    eax,ebx
  40bc39:	mov    ch,0xa7
  40bc3b:	(bad)  
  40bc3c:	cld    
  40bc3d:	mov    ch,0x19
  40bc3f:	or     al,0x0
	...
  40bc49:	add    BYTE PTR [eax],al
  40bc4b:	add    bh,bl
  40bc4d:	pop    ebp
  40bc4e:	cdq    
  40bc4f:	sbb    eax,eax
  40bc51:	mov    ch,0x59
  40bc53:	adc    al,0xc0
  40bc55:	mov    ch,0x87
  40bc57:	sub    al,0x49
  40bc59:	fdivr  QWORD PTR [edi+0x19]
  40bc5c:	test   al,0x1f
  40bc5e:	xchg   DWORD PTR [ebx],ebp
  40bc60:	cld    
  40bc61:	mov    ah,0x6f
  40bc63:	sbb    DWORD PTR [eax+0x52c6b2f],ebx
  40bc69:	loopne 0x40bc59
  40bc6b:	add    edi,DWORD PTR [esi+0x2a03eaa0]
  40bc71:	jmp    0x3c4:0xb6b38542
  40bc78:	fst    QWORD PTR [ebp+0x40]
  40bc7b:	(bad)  
  40bc7c:	lock retf 0x71d6
  40bc80:	pusha  
  40bc81:	mov    ch,0x5
  40bc83:	pusha  
  40bc84:	cwde   
  40bc85:	mov    ecx,0x2289cf6d
  40bc8a:	push   es
  40bc8b:	es cmp dl,al
  40bc8e:	dec    ebp
  40bc8f:	test   al,0xf4
  40bc91:	mov    ch,0x72
  40bc93:	loope  0x40bca1
  40bc95:	mov    ds:0x4b0e0efa,eax
  40bc9a:	sbb    BYTE PTR [ebp+esi*1-0xb149f4b],ah
  40bca1:	bound  eax,QWORD PTR [esi-0x11a2960a]
  40bca7:	aas    
  40bca8:	call   0x7a27b562
  40bcad:	mov    ecx,0x54f8
	...
  40bcba:	add    BYTE PTR [eax],al
  40bcbc:	repz retf 0x7f7c
  40bcc0:	fbstp  TBYTE PTR [ebp-0x4b0f5432]
  40bcc6:	push   ecx
  40bcc7:	jb     0x40bcd9
  40bcc9:	loopne 0x40bc8c
  40bccb:	mov    ebp,0xe96c0da6
  40bcd0:	mov    dl,BYTE PTR [ecx+edi*8+0x34]
  40bcd4:	add    ecx,ebx
  40bcd6:	sbb    bh,BYTE PTR [edi-0x11]
  40bcd9:	mov    bl,0x8e
  40bcdb:	and    al,0xdf
  40bcdd:	out    0x32,eax
  40bcdf:	or     al,0xab
  40bce1:	and    eax,DWORD PTR [esi]
  40bce3:	(bad)  
  40bce4:	leave  
  40bce5:	dec    ebx
  40bce6:	dec    esi
  40bce7:	sub    bl,dh
  40bce9:	loop   0x40bd23
  40bceb:	jmp    0x5af0060
  40bcf0:	pusha  
  40bcf1:	and    eax,DWORD PTR [esi]
  40bcf3:	pop    ss
  40bcf4:	jecxz  0x40bd6e
  40bcf6:	sub    ecx,0xfffffff4
  40bcf9:	adc    ch,BYTE PTR [esi-0x37]
  40bcfc:	dec    ecx
  40bcfd:	and    eax,DWORD PTR [esi]
  40bcff:	mov    esi,0xe98384cc
  40bd04:	hlt    
  40bd05:	sbb    BYTE PTR ds:0x4e51e00,cl
  40bd0b:	or     edi,esp
  40bd0d:	jecxz  0x40bd3d
  40bd0f:	push   esi
  40bd10:	mov    dh,0xcc
  40bd12:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bd13:	jmp    DWORD PTR [ecx]
  40bd15:	or     BYTE PTR [ecx+0x5d],dh
  40bd18:	lahf   
  40bd19:	pusha  
  40bd1a:	push   esi
  40bd1b:	call   0x39e8dd
	...
  40bd2c:	jle    0x40bd36
  40bd2e:	stc    
  40bd2f:	push   DWORD PTR [ecx]
  40bd31:	sbb    ebp,DWORD PTR [esi+0x73]
  40bd34:	push   ebx
  40bd35:	mov    eax,ds:0xe6214ff8
  40bd3a:	add    al,ch
  40bd3c:	mov    al,ds:0xf6fff920
  40bd41:	loop   0x40bce0
  40bd43:	call   DWORD PTR [ecx]
  40bd45:	mov    BYTE PTR [edi],al
  40bd47:	inc    esi
  40bd48:	mov    cs,WORD PTR [eax+edi*8-0x30adb8c]
  40bd4f:	xor    ebx,DWORD PTR [esi-0x4e0006eb]
  40bd55:	dec    ebx
  40bd56:	hlt    
  40bd57:	scas   al,BYTE PTR es:[edi]
  40bd58:	div    BYTE PTR [ebx-0x2e5e608f]
  40bd5e:	cld    
  40bd5f:	dec    DWORD PTR [ebx]
  40bd61:	addr16 out dx,al
  40bd63:	jecxz  0x40bdb0
  40bd65:	dec    esp
  40bd66:	stc    
  40bd67:	pop    edi
  40bd68:	add    BYTE PTR [esi],ah
  40bd6a:	les    eax,FWORD PTR [esi+ecx*8]
  40bd6d:	repnz mov ebp,esp
  40bd70:	sbb    eax,0xabfffa23
  40bd75:	pop    ebx
  40bd76:	stc    
  40bd77:	jne    0x40bd1f
  40bd79:	xchg   esp,edi
  40bd7b:	xchg   edx,eax
  40bd7c:	and    DWORD PTR [edi+ecx*4+0x45],ecx
  40bd80:	and    cl,BYTE PTR [ebx+esi*2-0x4]
  40bd84:	adc    edx,edx
  40bd86:	add    al,ch
  40bd88:	mov    ah,0x2f
  40bd8a:	stc    
  40bd8b:	push   edi
  40bd8d:	inc    eax
  40bd8e:	iret   
  40bd8f:	or     eax,DWORD PTR [eax]
	...
  40bd99:	add    BYTE PTR [eax],al
  40bd9b:	add    ah,bh
  40bd9d:	mov    DWORD PTR [esi+0x2627441],edx
  40bda3:	je     0x40bdc7
  40bda5:	jne    0x40bd3e
  40bda7:	sti    
  40bda8:	dec    edi
  40bda9:	or     BYTE PTR [ebp-0x1],bh
  40bdac:	push   eax
  40bdad:	(bad)  [edi]
  40bdaf:	jne    0x40bdac
  40bdb1:	jl     0x40bd4a
  40bdb3:	sti    
  40bdb4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bdb5:	push   esp
  40bdb6:	xchg   edi,eax
  40bdb7:	pop    es
  40bdb8:	dec    edi
  40bdb9:	daa    
  40bdba:	je     0x40bdbb
  40bdbc:	xor    bh,ch
  40bdbe:	mov    ecx,DWORD PTR [ebp-0x5]
  40bdc1:	dec    eax
  40bdc2:	(bad)  
  40bdc4:	stos   DWORD PTR es:[edi],eax
  40bdc5:	scas   eax,DWORD PTR es:[edi]
  40bdc6:	mov    dh,0xe7
  40bdc8:	jmp    0x2d89:0xdcff1111
  40bdcf:	adc    al,0x74
  40bdd1:	repnz inc DWORD PTR ds:[ecx+esi*4-0x7318ba75]
  40bdda:	xchg   ebp,eax
  40bddb:	sti    
  40bddc:	cmp    BYTE PTR [ebx+ecx*4-0x1441233e],0xbf
  40bde4:	scas   al,BYTE PTR es:[edi]
  40bde5:	inc    BYTE PTR [eax]
  40bde7:	add    BYTE PTR [edx+0x45],al
  40bdea:	and    edi,edi
  40bdec:	dec    edx
  40bded:	nop
  40bdee:	pcmpeqw mm7,mm7
  40bdf1:	sar    DWORD PTR [edi-0x6e],cl
  40bdf4:	rcl    cl,0xf
  40bdf7:	jne    0x40bde4
  40bdf9:	imul   edx,DWORD PTR [ecx],0x75
  40bdfc:	jmp    ebx
  40bdfe:	not    DWORD PTR [edx+0x0]
	...
  40be0c:	test   al,0xe9
  40be0e:	dec    ecx
  40be0f:	ret    0xbbef
  40be12:	mov    ch,0x8a
  40be14:	mov    edi,DWORD PTR ds:0x5929c039
  40be1a:	mov    ch,0x82
  40be1c:	or     ah,BYTE PTR [ebx-0x9]
  40be1f:	add    ecx,DWORD PTR [ebx]
  40be21:	push   ebp
  40be22:	ins    BYTE PTR es:[edi],dx
  40be23:	cwde   
  40be24:	in     al,dx
  40be25:	(bad)  
  40be26:	fild   DWORD PTR [edi]
  40be28:	je     0x40be5a
  40be2a:	inc    DWORD PTR [ebx]
  40be2c:	jecxz  0x40be96
  40be2e:	ins    BYTE PTR es:[edi],dx
  40be2f:	cwde   
  40be30:	add    al,0x63
  40be32:	mov    dl,0xc
  40be34:	or     al,0xa3
  40be36:	xchg   ebx,eax
  40be37:	mov    dh,0xb2
  40be39:	fwait
  40be3a:	sub    al,0xf3
  40be3c:	dec    eax
  40be3d:	(bad)  [ecx-0x203c8bf9]
  40be43:	cmp    BYTE PTR [edx-0xb7010a2],0x5d
  40be4a:	das    
  40be4b:	(bad)  
  40be4c:	(bad)  
  40be4d:	jge    0x40be7e
  40be4f:	mov    edx,0x413610c1
  40be54:	pop    es
  40be55:	arpl   WORD PTR [eax+eax*8-0x1c],sp
  40be59:	in     eax,0xe
  40be5b:	(bad)  
  40be5c:	jne    0x40be8e
  40be5e:	sti    
  40be5f:	add    ecx,DWORD PTR [ebx-0x7cbc0b9a]
  40be65:	pop    ebx
  40be66:	add    al,0x44
  40be68:	dec    esp
  40be69:	adc    ch,BYTE PTR [ecx]
  40be6b:	dec    ebx
  40be6c:	mov    ch,0x52
  40be6e:	out    dx,eax
  40be6f:	call   0x40be74
	...
  40be7c:	mov    ebp,0x680831b1
  40be81:	daa    
  40be82:	scas   eax,DWORD PTR es:[edi]
  40be83:	cmp    DWORD PTR [edx],0x4214e3a3
  40be89:	mov    ds:0xb1699a96,eax
  40be8e:	xchg   edi,eax
  40be8f:	sbb    BYTE PTR [esi+0x27],ch
  40be92:	stos   DWORD PTR es:[edi],eax
  40be93:	mov    DWORD PTR [edx],esi
  40be95:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40be96:	dec    eax
  40be97:	or     BYTE PTR [edx+0x24],0xef
  40be9b:	pop    edx
  40be9c:	in     al,dx
  40be9d:	(bad)  
  40be9e:	out    dx,eax
  40be9f:	add    esp,DWORD PTR [esi+eax*1+0x69806206]
  40bea6:	lea    ebx,[edi+edi*8]
  40bea9:	mov    ch,0xa1
  40beab:	je     0x40beed
  40bead:	rcl    DWORD PTR [ebp+0x5e],0x68
  40beb1:	icebp  
  40beb2:	clc    
  40beb3:	fdiv   QWORD PTR [eax]
  40beb5:	mov    ebx,0xb2028870
  40beba:	clc    
  40bebb:	mov    esp,0x5636bb20
  40bec0:	add    dh,BYTE PTR [edx-0x1e074308]
  40bec6:	inc    edx
  40bec7:	sub    DWORD PTR [esi+0x27],esi
  40beca:	mov    BYTE PTR [edx],0xea
  40becd:	aaa    
  40bece:	(bad)  
  40becf:	adc    DWORD PTR [ecx],ebp
  40bed1:	fdivr  st,st(0)
  40bed3:	push   ss
  40bed4:	jl     0x40befd
  40bed6:	ret    0x7c0d
  40bed9:	daa    
  40beda:	ret    0x7074
  40bedd:	ror    DWORD PTR [esp+edi*2+0x0],0x0
  40bee5:	add    BYTE PTR [eax],al
  40bee7:	add    BYTE PTR [eax],al
  40bee9:	add    BYTE PTR [eax],al
  40beeb:	add    al,bl
  40beed:	jmp    0x40bf04
  40beef:	jmp    0x463621e8
  40bef4:	mov    eax,ds:0xfb285ae4
  40bef9:	jmp    0x40bf07
  40befb:	jmp    0x8e3621f4
  40bf00:	jg     0x40bf38
  40bf02:	push   cs
  40bf03:	bound  esi,QWORD PTR [ecx+0x798df55c]
  40bf09:	es out 0x19,al
  40bf0c:	add    dh,BYTE PTR [esi]
  40bf0e:	(bad)  
  40bf0f:	mov    dh,0x81
  40bf11:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bf12:	in     eax,dx
  40bf13:	pop    es
  40bf14:	push   esp
  40bf15:	mov    al,0xf8
  40bf17:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bf18:	jno    0x40bebe
  40bf1a:	in     eax,dx
  40bf1b:	mov    DWORD PTR [edx-0x50],ecx
  40bf1e:	clc    
  40bf1f:	xchg   ebp,eax
  40bf20:	jns    0x40bf58
  40bf22:	neg    BYTE PTR [ecx+eax*4-0x58]
  40bf26:	mov    esi,0x664be00
  40bf2b:	add    BYTE PTR ds:0x7e758b10,bl
  40bf31:	or     eax,0x649e000e
  40bf36:	cmc    
  40bf37:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bf38:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bf39:	mov    eax,DWORD PTR gs:[ebp-0x3a]
  40bf3d:	repz loopne 0x40bfa8
  40bf40:	jl     0x40bfa6
  40bf42:	push   es
  40bf43:	mov    eax,DWORD PTR [ebx-0x4c]
  40bf46:	mov    edi,DWORD PTR [ebp+0x42]
  40bf49:	and    eax,0x576503e9
  40bf4e:	jb     0x40bfb7
	...
  40bf5c:	mov    ch,0x66
  40bf5e:	mov    eax,DWORD PTR [ebp-0x4a]
  40bf61:	repz push edx
  40bf63:	push   esi
  40bf64:	out    0x4c,al
  40bf66:	mov    ds:0xbfe34e00,al
  40bf6b:	or     BYTE PTR [ecx+0x5b],bl
  40bf6e:	stc    
  40bf6f:	jne    0x40bf9c
  40bf71:	fs mov al,0x46
  40bf74:	stc    
  40bf75:	loop   0x40bf74
  40bf77:	or     BYTE PTR [ecx+0x35f02d61],ah
  40bf7d:	loope  0x40bf87
  40bf7f:	ror    DWORD PTR [eax],1
  40bf81:	sti    
  40bf82:	clc    
  40bf83:	imul   ecx,DWORD PTR [esi],0xe69f8ce
  40bf89:	jmp    0x69f8:0xcdee75f7
  40bf90:	fimul  WORD PTR [ebx-0x48]
  40bf93:	or     esi,0x22c00d63
  40bf99:	mov    cs,WORD PTR [eax+0x50]
  40bf9c:	mov    dh,0xe8
  40bf9e:	(bad)  
  40bf9f:	call   FWORD PTR [ecx-0x1ba621d1]
  40bfa5:	data16 ins BYTE PTR es:[edi],dx
  40bfa7:	add    bh,bh
  40bfa9:	not    DWORD PTR [edx-0x1]
  40bfac:	test   DWORD PTR [esi-0xe],0x263f769
  40bfb3:	call   0x42fa3a
  40bfb8:	in     al,dx
  40bfb9:	stc    
  40bfba:	sahf   
  40bfbb:	pop    es
  40bfbc:	and    al,0xe2
  40bfbe:	mov    eax,0x95
	...
  40bfcb:	add    BYTE PTR [eax+0x6cdad940],cl
  40bfd1:	jl     0x40bf7c
  40bfd3:	pop    esi
  40bfd4:	sbb    DWORD PTR [ebx+0x40],esi
  40bfd7:	adc    bh,dh
  40bfd9:	out    dx,al
  40bfda:	ja     0x40bfc8
  40bfdc:	je     0x40bf63
  40bfde:	adc    dl,BYTE PTR [edi-0x3c]
  40bfe1:	push   esp
  40bfe2:	sub    edi,edi
  40bfe4:	loop   0x40bfa3
  40bfe6:	adc    esi,DWORD PTR [ebp-0x1]
  40bfe9:	and    DWORD PTR ds:0xb2804890,edi
  40bfef:	dec    dl
  40bff1:	mov    cl,0x1c
  40bff3:	mov    WORD PTR [ebp+0x50],fs
  40bff6:	adc    eax,0xfff12f8b
  40bffb:	idiv   esp
  40bffd:	jns    0x40bf9d
  40bfff:	inc    esi
  40c000:	jb     0x40c000
  40c002:	adc    BYTE PTR [eax+0x18],dl
  40c005:	ss stc 
  40c007:	dec    BYTE PTR [edx+0xaab1cc1]
  40c00d:	rcl    BYTE PTR [ebx],0x89
  40c010:	mov    edx,0x74585c5
  40c015:	imul   edx,DWORD PTR ds:0x9d950375,0x1633df07
  40c01f:	jmp    eax
  40c021:	xor    ecx,esi
  40c023:	neg    eax
  40c025:	ja     0x40c039
  40c027:	dec    DWORD PTR [edx-0xc]
  40c02a:	adc    esi,DWORD PTR [ebp-0x3d]
  40c02d:	std    
  40c02e:	popf   
  40c02f:	sti    
	...
  40c03c:	iret   
  40c03d:	arpl   si,di
  40c03f:	adc    DWORD PTR [eax-0x4fd48c52],edi
  40c045:	cmp    BYTE PTR [ebx-0x782732e5],dl
  40c04b:	adc    ah,BYTE PTR [eax-0x3ae478c8]
  40c051:	fdiv   DWORD PTR [edi+0x12]
  40c054:	sbb    eax,0x2131863
  40c059:	pop    ebx
  40c05a:	xchg   DWORD PTR [ebp+0x7e5fae73],ebx
  40c060:	mov    ah,0xa
  40c062:	mov    eax,0xef5b353c
  40c067:	mov    eax,0x906bbf7d
  40c06c:	in     al,dx
  40c06d:	fs mov ebp,0xdf3859e4
  40c073:	adc    cl,dl
  40c075:	pop    edx
  40c076:	inc    edi
  40c077:	mov    edx,0x1227ae78
  40c07c:	retf   0x2052
  40c07f:	cwde   
  40c080:	lock mov edx,0xae301047
  40c086:	sets   al
  40c089:	lods   eax,DWORD PTR ds:[esi]
  40c08a:	xchg   ecx,eax
  40c08b:	sti    
  40c08c:	sbb    BYTE PTR [edi],al
  40c08e:	add    dl,BYTE PTR [edx]
  40c090:	sbb    BYTE PTR [esi+0x3811f371],ch
  40c096:	out    0x1b,eax
  40c098:	mov    ebp,0x6c11e7ad
  40c09d:	sbb    bl,bh
  40c09f:	jp     0x40c0a1
	...
  40c0a9:	add    BYTE PTR [eax],al
  40c0ab:	add    ch,dh
  40c0ad:	lods   eax,DWORD PTR ds:[esi]
  40c0ae:	push   ecx
  40c0af:	hlt    
  40c0b0:	icebp  
  40c0b1:	aaa    
  40c0b2:	out    0x1b,eax
  40c0b4:	jle    0x40c065
  40c0b6:	(bad)  
  40c0b7:	adc    DWORD PTR [edi+ebp*1-0xd],esi
  40c0bb:	add    al,0x61
  40c0bd:	push   ebp
  40c0be:	mov    eax,0x5ae0097
  40c0c3:	cmp    al,0xcb
  40c0c5:	lds    edi,FWORD PTR [ebp-0x54]
  40c0c8:	out    0xad,al
  40c0ca:	clc    
  40c0cb:	sbb    al,0xc3
  40c0cd:	lods   al,BYTE PTR ds:[esi]
  40c0ce:	jb     0x40c0c1
  40c0d0:	or     al,0x40
  40c0d2:	sti    
  40c0d3:	xchg   esi,eax
  40c0d4:	push   es
  40c0d5:	scas   al,BYTE PTR es:[edi]
  40c0d6:	jb     0x40c0d1
  40c0d8:	adc    BYTE PTR [ebp-0x7],0xfc
  40c0dc:	pushf  
  40c0dd:	lds    eax,FWORD PTR [esi-0x75219a7]
  40c0e3:	cld    
  40c0e4:	test   BYTE PTR [edx+esi*2-0x774f231f],ch
  40c0eb:	data16 out 0x9b,al
  40c0ee:	ret    
  40c0ef:	stc    
  40c0f0:	hlt    
  40c0f1:	pop    ss
  40c0f2:	lea    eax,[ebp+0x6]
  40c0f5:	cmp    BYTE PTR [edx],cl
  40c0f7:	ret    
  40c0f8:	cmc    
  40c0f9:	lods   eax,DWORD PTR ds:[esi]
  40c0fa:	jb     0x40c0ed
  40c0fc:	cld    
  40c0fd:	inc    eax
  40c0fe:	xchg   esi,eax
  40c0ff:	ds out 0xad,al
  40c102:	jb     0x40c0e9
  40c104:	out    0x37,eax
  40c106:	push   cs
  40c107:	inc    ecx
  40c108:	push   cs
  40c109:	lods   eax,DWORD PTR ds:[esi]
  40c10a:	clc    
  40c10b:	es mov edx,0x701617
	...
  40c119:	add    BYTE PTR [eax],al
  40c11b:	add    cl,bh
  40c11d:	lods   eax,DWORD PTR ds:[esi]
  40c11e:	jb     0x40c105
  40c120:	pop    es
  40c121:	cmp    BYTE PTR [esi],cl
  40c123:	add    esi,ebx
  40c125:	lods   al,BYTE PTR ds:[esi]
  40c126:	clc    
  40c127:	push   es
  40c128:	call   0x72ad:0xf9701217
  40c12f:	in     eax,0xe7
  40c131:	aaa    
  40c132:	push   cs
  40c133:	add    DWORD PTR [esi+0x7be6f8ac],ebp
  40c139:	pop    ss
  40c13a:	push   ds
  40c13b:	jo     0x40c137
  40c13d:	cdq    
  40c13e:	ret    
  40c13f:	std    
  40c140:	hlt    
  40c141:	adc    eax,0xa77bbd8d
  40c146:	jmp    0xf82ab94b
  40c14b:	jne    0x40c0f7
  40c14d:	into   
  40c14e:	add    eax,0xe0af0bff
  40c153:	sbb    DWORD PTR [esi],ebx
  40c155:	push   ebx
  40c156:	stc    
  40c157:	(bad)  
  40c158:	fld    TBYTE PTR [edx+0x48a675f7]
  40c15e:	mov    WORD PTR [edi-0xf72ac7f],cs
  40c164:	ja     0x40c105
  40c166:	add    eax,0x432f8e00
  40c16b:	adc    al,0x1d
  40c16d:	cwde   
  40c16e:	clc    
  40c16f:	je     0x40c10c
  40c171:	dec    ecx
  40c172:	xor    BYTE PTR [ecx],al
  40c174:	mov    fs,WORD PTR [eax-0x3f]
  40c177:	inc    ebp
  40c178:	adc    ah,BYTE PTR [eax+0x6]
  40c17b:	add    BYTE PTR [esi+0x2d],bl
  40c17e:	inc    ebx
  40c17f:	cld    
	...
  40c18c:	scas   al,BYTE PTR es:[edi]
  40c18d:	push   ebx
  40c18e:	jae    0x40c1a4
  40c190:	mov    cl,0xd4
  40c192:	or     bh,bh
  40c194:	fwait
  40c195:	test   al,0xe0
  40c197:	repnz adc BYTE PTR [ebx-0x7],dl
  40c19b:	mov    eax,DWORD PTR [esi]
  40c19d:	out    0x7a,eax
  40c19f:	cld    
  40c1a0:	dec    esi
  40c1a1:	aam    0x23
  40c1a3:	push   0x45fcc3
  40c1a8:	adc    ebp,edx
  40c1aa:	cld    
  40c1ab:	call   0x46a2de
  40c1b0:	adc    eax,0x860d7320
  40c1b5:	xor    eax,0x531e415b
  40c1ba:	jae    0x40c1b8
  40c1bc:	not    BYTE PTR [edx-0x7a]
  40c1bf:	add    BYTE PTR [esi],cl
  40c1c1:	sub    DWORD PTR [ebx-0x14],eax
  40c1c4:	and    eax,0xc245c164
  40c1c9:	pushw  es
  40c1cb:	add    bh,dh
  40c1cd:	mov    ecx,0xb9d37d83
  40c1d2:	nop
  40c1d3:	pop    ss
  40c1d4:	dec    edi
  40c1d5:	mov    ebx,0xec91ef04
  40c1da:	sahf   
  40c1db:	or     ebx,edi
  40c1dd:	xchg   esi,eax
  40c1de:	jno    0x40c1df
  40c1e0:	sar    ah,0x9e
  40c1e3:	sti    
  40c1e4:	mov    eax,0x2be8064e
  40c1e9:	sub    ecx,DWORD PTR [ecx]
  40c1eb:	call   FWORD PTR [esi+0x240]
	...
  40c1f9:	add    BYTE PTR [eax],al
  40c1fb:	add    bh,dh
  40c1fd:	inc    eax
  40c1fe:	iret   
  40c1ff:	adc    esi,DWORD PTR [ecx+eiz*4+0x4]
  40c203:	jne    0x40c1ff
  40c205:	sar    BYTE PTR [edi+0x0],cl
  40c208:	idiv   DWORD PTR [ecx-0x4680bac1]
  40c20e:	add    al,0x0
  40c210:	idiv   DWORD PTR [edi+ecx*8-0xd]
  40c214:	idiv   DWORD PTR [ecx-0x1cffffc]
  40c21a:	adc    al,0x0
  40c21c:	idiv   DWORD PTR [ecx+0x69b28d04]
  40c222:	mov    dl,0x8c
  40c224:	mov    edx,0xb28cb275
  40c229:	jno    0x40c1dd
  40c22b:	dec    dl
  40c22d:	xchg   ebp,eax
  40c22e:	pop    es
  40c22f:	jne    0x40c220
  40c231:	push   ecx
  40c232:	and    edi,esi
  40c234:	xor    BYTE PTR [ebp+eax*4+0x7d],cl
  40c238:	sbb    edi,DWORD PTR [ecx-0x218bcd70]
  40c23e:	or     al,0x0
  40c240:	mov    ds:0xb7d8396,eax
  40c245:	mov    ecx,0x3674059d
  40c24a:	adc    eax,0x79a8b00
  40c24f:	jne    0x40c250
  40c251:	popa   
  40c252:	loopne 0x40c1ec
  40c254:	cld    
  40c255:	mov    edx,0xaae874fb
  40c25a:	iret   
  40c25b:	cwde   
  40c25c:	in     al,0xaa
  40c25e:	push   ecx
	...
  40c26b:	add    bh,cl
  40c26d:	pop    ebx
  40c26e:	pop    esi
  40c26f:	push   cs
  40c270:	shr    BYTE PTR [edx+0x30c81431],1
  40c276:	jecxz  0x40c293
  40c278:	ret    0xa7d3
  40c27b:	push   cs
  40c27c:	mov    eax,0x951ba730
  40c281:	(bad)  
  40c282:	xchg   edi,eax
  40c283:	push   cs
  40c284:	test   al,0x30
  40c286:	fwait
  40c287:	sbb    edi,DWORD PTR [ebp-0x67f1782a]
  40c28d:	xor    BYTE PTR [edi+0x1b],bh
  40c290:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c291:	(bad)  
  40c292:	ja     0x40c2a2
  40c294:	cmp    BYTE PTR [esi+0x70],bl
  40c297:	(bad)  
  40c298:	jnp    0x40c2d2
  40c29a:	push   0xe1e6780e
  40c29f:	pop    ds
  40c2a0:	imul   DWORD PTR [esi]
  40c2a2:	stc    
  40c2a3:	cdq    
  40c2a4:	push   0x58ffd9a9
  40c2a9:	cmp    eax,0x3d580e7f
  40c2ae:	out    dx,eax
  40c2af:	push   cs
  40c2b0:	retf   0x5756
  40c2b3:	mov    ds:0x992faa78,eax
  40c2b8:	inc    eax
  40c2b9:	test   eax,0x1150ffb1
  40c2be:	jg     0x40c2ce
  40c2c0:	xor    BYTE PTR [edx-0x37e0f06f],ch
  40c2c6:	jnp    0x40c2d6
  40c2c8:	and    BYTE PTR [ecx],bl
  40c2ca:	in     al,0x15
  40c2cc:	call   0x4e04b0
	...
  40c2d9:	add    BYTE PTR [eax],al
  40c2db:	add    BYTE PTR [eax],dl
  40c2dd:	stos   BYTE PTR es:[edi],al
  40c2de:	xchg   edi,eax
  40c2df:	lods   eax,DWORD PTR ds:[esi]
  40c2e0:	aas    
  40c2e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c2e2:	add    eax,0x8d0ff4d9
  40c2e7:	std    
  40c2e8:	jbe    0x40c289
  40c2ea:	loope  0x40c32b
  40c2ec:	add    dh,BYTE PTR [eax]
  40c2ee:	push   cs
  40c2ef:	rcr    DWORD PTR [esi+0x5cd6f8dc],1
  40c2f5:	and    dl,dh
  40c2f7:	push   0x68
  40c2f9:	mov    ch,0x15
  40c2fb:	cmp    cl,ch
  40c2fd:	icebp  
  40c2fe:	push   es
  40c2ff:	jmp    0xa09925f8
  40c304:	xor    eax,0x60ae065b
  40c309:	popa   
  40c30a:	out    dx,al
  40c30b:	adc    al,0x30
  40c30d:	stos   BYTE PTR es:[edi],al
  40c30e:	clc    
  40c30f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c310:	mov    al,0xb1
  40c312:	push   es
  40c313:	jmp    0x24cc260c
  40c318:	jmp    0x40c32c
  40c31a:	stc    
  40c31b:	cld    
  40c31c:	mov    ecx,es
  40c31e:	cli    
  40c31f:	ins    BYTE PTR es:[edi],dx
  40c320:	cli    
  40c321:	test   eax,0xe5e72c8e
  40c326:	jp     0x40c399
  40c328:	repz or ch,BYTE PTR cs:[edx-0x80]
  40c32d:	lods   eax,DWORD PTR ds:[esi]
  40c32e:	add    ebx,ebx
  40c330:	repnz in eax,0x7a
  40c333:	push   ebp
  40c334:	stc    
  40c335:	xor    BYTE PTR [ecx+edx*4],cl
  40c338:	hlt    
  40c339:	bound  eax,QWORD PTR [esi]
  40c33b:	jmp    0xf2045de2
	...
  40c34c:	hlt    
  40c34d:	xlat   BYTE PTR ds:[ebx]
  40c34e:	inc    edx
  40c34f:	xor    DWORD PTR [ebx-0x231e8d58],ecx
  40c355:	xchg   esp,eax
  40c356:	mov    ah,BYTE PTR [esi]
  40c358:	add    ah,dh
  40c35a:	jp     0x40c37d
  40c35c:	repz cs add ah,dl
  40c360:	mov    ah,0x2e
  40c362:	or     al,0x51
  40c364:	hlt    
  40c365:	bound  eax,QWORD PTR [esi]
  40c367:	add    BYTE PTR [esi],bl
  40c369:	test   ebp,0x856506c2
  40c36f:	jge    0x40c37b
  40c371:	pusha  
  40c372:	je     0x40c393
  40c374:	fwait
  40c375:	mov    eax,ds:0xb74450f0
  40c37a:	div    DWORD PTR [ebp-0x1a]
  40c37d:	dec    esp
  40c37e:	sub    BYTE PTR [esi+0x458b57c9],cl
  40c384:	(bad)  
  40c385:	hlt    
  40c386:	div    DWORD PTR [ebp-0x3a]
  40c389:	dec    esp
  40c38a:	cwde   
  40c38b:	lea    ecx,[ecx-0x4dba70a9]
  40c391:	dec    ebx
  40c392:	sbb    ecx,DWORD PTR [ebp-0xa9a8ed]
  40c398:	adc    esp,DWORD PTR [edi+0x571b8de0]
  40c39e:	stc    
  40c39f:	mov    ebx,edx
  40c3a1:	jp     0x40c32e
  40c3a3:	inc    ebp
  40c3a4:	xchg   ah,dh
  40c3a6:	outs   dx,BYTE PTR ds:[esi]
  40c3a7:	add    al,0x79
  40c3a9:	rol    DWORD PTR [eax],1
  40c3ab:	call   0x39ea4e
	...
  40c3bc:	sbb    esp,DWORD PTR [ecx-0x2ef6af10]
  40c3c2:	add    al,ch
  40c3c4:	sub    eax,0xddfff95a
  40c3c9:	fsub   st,st(4)
  40c3cb:	add    DWORD PTR [ebx-0x4a],eax
  40c3ce:	mov    DWORD PTR [ebp-0x3a],eax
  40c3d1:	repz div DWORD PTR [ebp-0x46]
  40c3d5:	push   esi
  40c3d6:	jae    0x40c3e4
  40c3d8:	or     ecx,edx
  40c3da:	add    al,ch
  40c3dc:	js     0x40c437
  40c3de:	stc    
  40c3df:	call   FWORD PTR [ebx-0x26af0f60]
  40c3e5:	rol    BYTE PTR [eax],1
  40c3e7:	call   0x3a1da5
  40c3ec:	idiv   DWORD PTR [eax+ecx*4]
  40c3ef:	div    edi
  40c3f1:	into   
  40c3f2:	(bad)  
  40c3f3:	mov    bh,0xf7
  40c3f5:	mov    ecx,0x72a90004
  40c3fa:	inc    edi
  40c3fb:	or     bh,dh
  40c3fd:	ds shl bh,0xa7
  40c401:	mov    eax,0x6f0fb92
  40c406:	(bad)  
  40c407:	(bad)  
  40c408:	bound  esi,QWORD PTR [edx-0x6f1d7fe4]
  40c40e:	or     al,0x83
  40c410:	pop    edx
  40c411:	xchg   edx,eax
  40c412:	add    DWORD PTR [ebp-0x3],esi
  40c415:	loope  0x40c418
  40c417:	add    bh,dh
  40c419:	mov    ecx,0xc1b5c8ae
  40c41e:	add    al,0x8d
	...
  40c42c:	xor    dh,dl
  40c42e:	mov    cl,0xfe
  40c430:	sub    dh,BYTE PTR [edx-0x3785f1e4]
  40c436:	or     al,0x8b
  40c438:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c439:	loop   0x40c443
  40c43b:	add    bh,dh
  40c43d:	mov    ecx,0xd1ff750b
  40c442:	dec    esi
  40c443:	mov    cs,WORD PTR [eax-0x74bb36d8]
  40c449:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c44a:	add    eax,0x4b980e9
  40c44f:	add    BYTE PTR [esi+edi*4+0x0],dh
  40c453:	push   es
  40c454:	in     eax,0x5d
  40c456:	jg     0x40c49d
  40c458:	pop    edi
  40c459:	jmp    0x22303969
  40c45e:	and    DWORD PTR [eax+edx*2+0x4f457f20],ecx
  40c465:	leave  
  40c466:	or     esi,DWORD PTR [ebp-0x11]
  40c469:	and    eax,ecx
  40c46b:	stc    
  40c46c:	cmp    BYTE PTR [eax+0x7f],bh
  40c46f:	inc    ebp
  40c470:	das    
  40c471:	bound  edi,QWORD PTR [edi+0x175aa20a]
  40c477:	ficomp DWORD PTR [esi]
  40c479:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c47a:	vmwrite esi,DWORD PTR [edx-0x75f54156]
  40c481:	pop    edx
  40c482:	pop    ss
  40c483:	aaa    
  40c484:	or     al,0xa7
  40c486:	idiv   DWORD PTR [edx+edi*4-0x4e]
  40c48a:	popa   
  40c48b:	rol    DWORD PTR [eax],0x12
  40c48e:	call   0x40c523
	...
  40c49b:	add    al,bh
  40c49d:	mov    edx,0xa6e80eaa
  40c4a2:	jne    0x40c464
  40c4a4:	int3   
  40c4a5:	fsubr  DWORD PTR [ecx]
  40c4a7:	or     al,0x47
  40c4a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c4aa:	push   ecx
  40c4ab:	cld    
  40c4ac:	fdiv   st,st(0)
  40c4ae:	ret    
  40c4af:	or     cl,al
  40c4b1:	fsub   QWORD PTR [ecx]
  40c4b3:	sbb    al,0x74
  40c4b5:	sub    BYTE PTR [edi+0x6c324303],bh
  40c4bb:	mov    BYTE PTR [ebx+eiz*2+0x2875991b],bl
  40c4c2:	xchg   edi,eax
  40c4c3:	add    ebp,DWORD PTR [ebx]
  40c4c5:	ds ins BYTE PTR es:[edi],dx
  40c4c7:	mov    BYTE PTR [eax+0x18a51363],ah
  40c4cd:	lds    esp,FWORD PTR [ecx]
  40c4cf:	lds    ecx,FWORD PTR [eax-0x70ec0e5b]
  40c4d5:	and    al,0xf1
  40c4d7:	add    esi,edi
  40c4d9:	pop    ecx
  40c4da:	scas   eax,DWORD PTR es:[edi]
  40c4db:	nop
  40c4dc:	adc    bh,BYTE PTR [ebx]
  40c4de:	jb     0x40c488
  40c4e0:	mov    bh,0x62
  40c4e2:	pop    eax
  40c4e3:	nop
  40c4e4:	push   eax
  40c4e5:	mov    ebx,0xa6588a1e
  40c4ea:	jecxz  0x40c52f
  40c4ec:	retf   0xd757
  40c4ef:	jo     0x40c49b
  40c4f1:	and    ebp,edi
  40c4f3:	or     cl,dl
  40c4f5:	mov    dl,0x5
  40c4f7:	inc    ecx
  40c4f8:	dec    ebp
  40c4f9:	sub    BYTE PTR [esi],al
  40c4fb:	jmp    0xd7b2ab31
	...
  40c50c:	mov    WORD PTR [esi-0x5a51f108],fs
  40c512:	jb     0x40c4f9
  40c514:	cld    
  40c515:	sbb    DWORD PTR [eax+0x72a5fd0e],ecx
  40c51b:	stc    
  40c51c:	(bad)  
  40c51d:	das    
  40c51e:	or     dl,BYTE PTR [ecx]
  40c520:	call   0xea2f:0xeef6f8d4
  40c527:	out    dx,al
  40c528:	sbb    BYTE PTR [ecx-0x12],0x7e
  40c52c:	ins    DWORD PTR es:[edi],dx
  40c52d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c52e:	clc    
  40c52f:	fidiv  WORD PTR [eax-0x43]
  40c532:	clc    
  40c533:	pop    esp
  40c534:	fistp  QWORD PTR [ebp-0x5a01a077]
  40c53a:	clc    
  40c53b:	cmp    al,0xe3
  40c53d:	mov    edx,0xa5ee5876
  40c542:	clc    
  40c543:	cmp    al,0xdf
  40c545:	mov    edx,0xa5fe586e
  40c54a:	clc    
  40c54b:	sbb    al,0xb
  40c54d:	mov    ebx,0xa5ee7866
  40c552:	inc    edi
  40c553:	push   0x70
  40c555:	lods   eax,DWORD PTR ds:[esi]
  40c556:	add    eax,0xf0589315
  40c55b:	test   BYTE PTR [ecx],0xae
  40c55e:	idiv   DWORD PTR [esi-0x12]
  40c561:	fld    DWORD PTR [edx+0x71]
  40c564:	dec    ebp
  40c565:	call   0x558d:0xff4e1c3
  40c56c:	jb     0x40c50c
  40c56e:	stc    
  40c56f:	pop    esi
	...
  40c57c:	jo     0x40c5d7
  40c57e:	out    dx,al
  40c57f:	cmc    
  40c580:	lods   al,BYTE PTR ds:[esi]
  40c581:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c582:	clc    
  40c583:	loop   0x40c539
  40c585:	das    
  40c586:	sub    DWORD PTR [eax],eax
  40c588:	ret    
  40c589:	in     eax,0xfc
  40c58b:	push   eax
  40c58c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c58d:	sub    ecx,DWORD PTR [esi+0x735c01ff]
  40c593:	cld    
  40c594:	loope  0x40c56b
  40c596:	or     al,0xe8
  40c598:	popf   
  40c599:	and    al,0xf9
  40c59b:	jmp    DWORD PTR ds:0x10f7221
  40c5a1:	(bad)  
  40c5a2:	add    bh,bh
  40c5a4:	imul   ebx,DWORD PTR [ebp-0x12],0xffffff87
  40c5a8:	repz pop ebx
  40c5aa:	stc    
  40c5ab:	or     ecx,esi
  40c5ad:	aad    0xf8
  40c5af:	(bad)  
  40c5b0:	jnp    0x40c60f
  40c5b2:	out    dx,al
  40c5b3:	mov    BYTE PTR [esi+0x5a],dl
  40c5b6:	stc    
  40c5b7:	leave  
  40c5b8:	pushf  
  40c5b9:	test   al,0xf8
  40c5bb:	push   esp
  40c5bc:	gs dec esp
  40c5be:	xchg   esp,eax
  40c5c0:	jp     0x40c61c
  40c5c2:	stc    
  40c5c3:	call   FWORD PTR [ecx-0x4e0141db]
  40c5c9:	pop    ebx
  40c5ca:	push   es
  40c5cb:	add    dh,cl
  40c5cd:	pusha  
  40c5ce:	lea    eax,[ebp-0x2e]
  40c5d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c5d2:	mov    eax,0x3de09b74
  40c5d7:	add    BYTE PTR [ebx],cl
  40c5d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c5da:	in     eax,dx
  40c5db:	push   ecx
  40c5dc:	(bad)  
  40c5dd:	pusha  
  40c5de:	push   es
  40c5df:	inc    DWORD PTR [eax]
	...
  40c5e9:	add    BYTE PTR [eax],al
  40c5eb:	add    bl,bh
  40c5ed:	stos   BYTE PTR es:[edi],al
  40c5ee:	loopne 0x40c619
  40c5f0:	and    bl,BYTE PTR [ebx-0x7]
  40c5f3:	or     ebx,DWORD PTR [esi-0x2b]
  40c5f6:	pop    es
  40c5f7:	push   0x45f08f
  40c5fc:	add    ebp,edx
  40c5fe:	or     al,0xe8
  40c600:	stc    
  40c601:	xor    bh,cl
  40c603:	inc    ebp
  40c605:	lods   al,BYTE PTR ds:[esi]
  40c606:	pusha  
  40c607:	push   es
  40c608:	sahf   
  40c609:	mov    eax,ds:0x86f7fef8
  40c60e:	lock out 0xaf,eax
  40c611:	sub    eax,0x377eff0e
  40c616:	dec    ebp
  40c617:	inc    BYTE PTR [eax+0x65]
  40c61a:	popf   
  40c61b:	cmp    eax,0x8d04b9f6
  40c620:	jp     0x40c69a
  40c622:	ud0    ebp,DWORD PTR [eax]
  40c625:	jmp    0x8d0e:0x4587d01c
  40c62c:	jb     0x40c6a6
  40c62e:	ud0    edx,DWORD PTR [eax]
  40c631:	jmp    0xff0e:0x5c4fb50d
  40c638:	(bad)  
  40c63a:	cmp    bh,0xf8
  40c63d:	inc    edx
  40c63e:	js     0x40c5fc
  40c640:	icebp  
  40c641:	mov    ah,0x0
  40c643:	inc    eax
  40c644:	clc    
  40c645:	xor    eax,0xb9f70015
  40c64a:	jge    0x40c5e1
  40c64c:	mov    ch,0x8b
  40c64e:	add    bh,bh
	...
  40c65c:	enter  0xf4b7,0xff
  40c660:	enter  0x88b9,0x7c
  40c664:	jb     0x40c6dd
  40c666:	fimul  WORD PTR [edi+0x4f]
  40c669:	out    dx,al
  40c66a:	mov    al,0x40
  40c66c:	mul    DWORD PTR [ecx-0x460884e0]
  40c672:	sti    
  40c673:	mov    edi,0xa919bf2a
  40c678:	idiv   DWORD PTR [ecx-0x89572fc]
  40c67e:	(bad)  
  40c67f:	dec    BYTE PTR [eax+0x272bc42e]
  40c685:	push   edx
  40c686:	add    BYTE PTR [edi+0x36],cl
  40c689:	mov    edx,0xb9ecc21c
  40c68e:	add    al,0xb
  40c690:	aaa    
  40c691:	(bad)  
  40c692:	fiadd  DWORD PTR [eax]
  40c694:	dec    esi
  40c695:	(bad)  
  40c696:	out    dx,al
  40c697:	add    esi,edi
  40c699:	mov    ds:0xd958f7d9,eax
  40c69e:	jae    0x40c6a7
  40c6a0:	dec    eax
  40c6a1:	push   edi
  40c6a2:	das    
  40c6a3:	xchg   ecx,eax
  40c6a4:	icebp  
  40c6a5:	cmp    bh,BYTE PTR [edx-0x44]
  40c6a8:	mov    bh,0x62
  40c6aa:	xor    BYTE PTR [ecx+0x731fbafc],dl
  40c6b0:	sub    BYTE PTR [ebx+0x628efa13],ah
  40c6b6:	sbb    BYTE PTR [ecx+0x7353baec],dl
  40c6bc:	adc    BYTE PTR [ebx+0x7159],ah
	...
  40c6ca:	add    BYTE PTR [eax],al
  40c6cc:	xor    eax,0x7206ffa4
  40c6d1:	adc    bl,cl
  40c6d3:	mov    cl,0xa8
  40c6d5:	mov    edx,0xa2f072ef
  40c6da:	sahf   
  40c6db:	push   es
  40c6dc:	bound  esi,QWORD PTR [ebx+0x3f]
  40c6df:	pop    es
  40c6e0:	push   0x6b
  40c6e2:	xlat   BYTE PTR ds:[ebx]
  40c6e3:	or     ecx,ebx
  40c6e5:	mov    ds:0xf2cd1bcf,al
  40c6ea:	mov    DWORD PTR [esi],0xc17226dc
  40c6f0:	or     al,0xec
  40c6f2:	popa   
  40c6f3:	dec    edi
  40c6f4:	mov    ecx,0x2a06afa2
  40c6f9:	jae    0x40c6a3
  40c6fb:	push   eax
  40c6fc:	arpl   WORD PTR [ecx+0x388f069f],sp
  40c702:	sbb    eax,DWORD PTR [edi+esi*8]
  40c705:	ins    DWORD PTR es:[edi],dx
  40c706:	scas   eax,DWORD PTR es:[edi]
  40c707:	(bad)  
  40c708:	fmul   DWORD PTR [edx]
  40c70a:	dec    edx
  40c70b:	mov    ebx,0x90806337
  40c710:	in     al,dx
  40c711:	mov    al,BYTE PTR [edi]
  40c713:	jae    0x40c78d
  40c715:	mov    ds:0xd6c77605,al
  40c71a:	imul   DWORD PTR [esi-0xf]
  40c71d:	xor    ch,dh
  40c71f:	sahf   
  40c720:	in     eax,0xa1
  40c722:	clc    
  40c723:	mov    ecx,0xe172a1a4
  40c728:	in     al,dx
  40c729:	adc    bh,al
  40c72b:	dec    esi
  40c72c:	icebp  
  40c72d:	mov    dh,BYTE PTR [edx+0x76]
	...
  40c73b:	add    cl,bh
  40c73d:	mov    eax,ds:0xa0b6648a
  40c742:	clc    
  40c743:	ss mov eax,fs:0xa1f26db2
  40c74a:	clc    
  40c74b:	adc    DWORD PTR [ebx],ebx
  40c74d:	sbb    eax,0xa377e906
  40c752:	or     BYTE PTR [esp+ebx*1-0x5f],ch
  40c756:	clc    
  40c757:	push   cs
  40c758:	icebp  
  40c759:	xlat   BYTE PTR ds:[ebx]
  40c75a:	mov    ecx,0xeda1f907
  40c75f:	aad    0x6d
  40c761:	mov    ds:0xdb40f6f8,al
  40c766:	imul   esi
  40c768:	repnz mov al,BYTE PTR [edx-0x315e058a]
  40c76f:	stos   DWORD PTR es:[edi],eax
  40c770:	fbld   TBYTE PTR [ecx-0x1c109daf]
  40c776:	rcr    DWORD PTR [ecx-0x51075e0f],0x40
  40c77d:	fcomi  st,st(7)
  40c77f:	mov    esi,0xe90662f2
  40c784:	hlt    
  40c785:	in     eax,dx
  40c786:	inc    edx
  40c787:	(bad)  [edi+0x74ec71e1]
  40c78d:	pop    edx
  40c78e:	push   es
  40c78f:	adc    al,0x98
  40c791:	mov    cl,BYTE PTR [esi]
  40c793:	call   0xe8af2a8c
  40c798:	inc    esp
  40c799:	and    al,BYTE PTR [esi]
  40c79b:	add    BYTE PTR [ecx-0xf],bh
  40c79e:	or     al,0xe8
	...
  40c7ac:	imul   edx,DWORD PTR [ecx+edi*8],0xbe21d7ff
  40c7b3:	(bad)  
  40c7b4:	fldenv [edi+0x6e]
  40c7b7:	ds dec edi
  40c7b9:	gs push es
  40c7bb:	(bad)  
  40c7bc:	shl    DWORD PTR [eax+edi*8],cl
  40c7bf:	jmp    FWORD PTR [ecx-0x56981f2a]
  40c7c5:	addr16 stc 
  40c7c7:	(bad)  
  40c7c8:	shl    DWORD PTR [eax+edi*8],cl
  40c7cb:	(bad)  
  40c7cc:	stc    
  40c7cd:	(bad)  
  40c7ce:	div    DWORD PTR [ebp-0x6975a]
  40c7d4:	mov    dh,0xd
  40c7d6:	jl     0x40c7d8
  40c7d8:	push   cs
  40c7d9:	sbb    al,0x83
  40c7db:	mov    esp,0x40f967f8
  40c7e0:	sbb    DWORD PTR [ecx],esp
  40c7e2:	rol    BYTE PTR [eax],0x1e
  40c7e5:	mov    edx,DWORD PTR gs:[ebp-0x69734]
  40c7ec:	add    DWORD PTR [ebx+0x16],esp
  40c7ef:	add    dh,bl
  40c7f1:	or     DWORD PTR fs:[ecx+ecx*2+0x6b000667],eax
  40c7f9:	adc    esp,eax
  40c7fb:	(bad)  
  40c7fc:	mov    ecx,0xfa428b67
  40c801:	(bad)  
  40c802:	pusha  
  40c803:	cld    
  40c804:	jmp    0x2b28c0ac
  40c809:	in     eax,dx
  40c80a:	clc    
  40c80b:	inc    ebp
  40c80d:	and    al,0x73
  40c80f:	add    al,BYTE PTR [eax]
	...
  40c819:	add    BYTE PTR [eax],al
  40c81b:	add    BYTE PTR [ebp+0x5c9589f1],dh
  40c821:	data16 stc 
  40c823:	jmp    FWORD PTR [ebx]
  40c825:	mov    ds:0x6906502c,al
  40c82a:	dec    ecx
  40c82b:	inc    ecx
  40c82c:	test   DWORD PTR [ecx-0x75f2ade4],0x9fb70b04
  40c836:	push   es
  40c837:	jmp    0x40c855
  40c839:	punpckhbw mm0,mm2
  40c83c:	jno    0x40c857
  40c83e:	add    cl,BYTE PTR [ebp-0x7a84224b]
  40c844:	stos   DWORD PTR es:[edi],eax
  40c845:	or     BYTE PTR [edx],al
  40c847:	dec    edi
  40c849:	(bad)  
  40c84a:	mov    esp,0x8838f740
  40c84f:	or     ebx,DWORD PTR [edi-0x27]
  40c852:	jbe    0x40c853
  40c854:	inc    eax
  40c855:	sub    DWORD PTR [eax-0x4c],ecx
  40c858:	cmp    DWORD PTR [ecx+0x2],esp
  40c85b:	push   eax
  40c85c:	pop    ds
  40c85d:	cmp    DWORD PTR [edi-0x1],esi
  40c860:	sub    BYTE PTR [ebx],al
  40c862:	js     0x40c814
  40c864:	and    DWORD PTR [ecx+0x2],ecx
  40c867:	push   eax
  40c868:	(bad)  
  40c869:	mov    al,es:0x4878f740
  40c86f:	mov    al,0x9
  40c871:	jno    0x40c875
  40c873:	call   0x45ad66
  40c878:	in     al,dx
  40c879:	dec    ecx
  40c87a:	mov    DWORD PTR [edx],edx
  40c87c:	pop    edi
  40c87d:	and    eax,0x40a0
	...
  40c88a:	add    BYTE PTR [eax],al
  40c88c:	not    DWORD PTR [eax-0x771e4fb6]
  40c892:	add    al,0xff
  40c894:	bound  edx,QWORD PTR [edx-0x472d8714]
  40c89a:	add    al,0xe8
  40c89c:	dec    esi
  40c89d:	inc    eax
  40c89e:	add    eax,0xc00e72ff
  40c8a3:	std    
  40c8a4:	mov    eax,0x6aff51e0
  40c8a9:	adc    eax,0xa1a8ff04
  40c8ae:	out    dx,al
  40c8af:	js     0x40c8a8
  40c8b1:	(bad)  
  40c8b2:	out    dx,eax
  40c8b3:	mov    BYTE PTR [eax+0x6f],bl
  40c8b6:	bound  ecx,QWORD PTR [ecx-0x70]
  40c8b9:	lahf   
  40c8ba:	pop    DWORD PTR [ebx]
  40c8bc:	inc    edx
  40c8bd:	fimul  WORD PTR [eax-0x59757ffd]
  40c8c3:	jge    0x40c8bc
  40c8c5:	bound  edi,QWORD PTR [eax-0x47]
  40c8c8:	test   al,0xa0
  40c8ca:	outs   dx,DWORD PTR ds:[esi]
  40c8cb:	add    ebx,DWORD PTR [edi+0x29]
  40c8ce:	pop    ecx
  40c8cf:	add    esp,DWORD PTR [eax-0x57]
  40c8d2:	sub    al,0xc
  40c8d4:	div    DWORD PTR ds:0x1551f074
  40c8da:	jecxz  0x40c8c7
  40c8dc:	data16 hlt 
  40c8de:	inc    edi
  40c8df:	add    ebp,esp
  40c8e1:	mov    ds:0x32a712ba,al
  40c8e6:	cmp    BYTE PTR [ecx-0x1],bh
  40c8e9:	mov    al,BYTE PTR [ebx+0x469f2802]
  40c8ef:	sub    eax,DWORD PTR [eax]
	...
  40c8f9:	add    BYTE PTR [eax],al
  40c8fb:	add    BYTE PTR [ecx-0x61],dh
  40c8fe:	pop    ds
  40c8ff:	int    0x36
  40c901:	push   0xffffffef
  40c903:	pop    eax
  40c904:	jl     0x40c894
  40c906:	imul   ecx,eax,0xc
  40c909:	or     al,0xef
  40c90b:	ins    DWORD PTR es:[edi],dx
  40c90c:	(bad)  
  40c90d:	lahf   
  40c90e:	jns    0x40c91b
  40c910:	movaps XMMWORD PTR [ebx+eax*1-0x10],xmm6
  40c915:	in     al,dx
  40c916:	test   eax,0xe8795eff
  40c91b:	js     0x40c90c
  40c91d:	mov    bl,BYTE PTR [edi+0x549ed802]
  40c923:	daa    
  40c924:	rcr    BYTE PTR [eax],1
  40c926:	out    0xeb,eax
  40c928:	sbb    DWORD PTR [esi+0x7f4d02c7],0xffffffc0
  40c92f:	js     0x40c920
  40c931:	mov    dl,BYTE PTR [ebx+0x59eb002]
  40c937:	inc    ebx
  40c938:	repz or cl,bl
  40c93b:	or     al,0x3a
  40c93d:	arpl   WORD PTR [esi+0x5c],bp
  40c940:	pop    ss
  40c941:	and    al,0x6
  40c943:	sahf   
  40c944:	iret   
  40c945:	or     DWORD PTR [ebp+0x28],0xfffffff3
  40c949:	mov    dh,dh
  40c94b:	jns    0x40c942
  40c94d:	popf   
  40c94e:	or     al,0xa9
  40c950:	add    BYTE PTR [edi+0x56],dh
  40c953:	adc    DWORD PTR [eax-0x3b16b8c1],esp
  40c959:	popf   
  40c95a:	jb     0x40c93d
  40c95c:	dec    esp
  40c95d:	mov    ds:0x66f9,eax
	...
  40c96a:	add    BYTE PTR [eax],al
  40c96c:	cmc    
  40c96d:	mov    al,dh
  40c96f:	ins    BYTE PTR es:[edi],dx
  40c970:	cmc    
  40c971:	popf   
  40c972:	imul   ebp,ecx,0xffffffdc
  40c975:	mov    edi,0xaf4a85a
  40c97a:	mov    bl,0xa4
  40c97c:	mov    bl,0x62
  40c97e:	stc    
  40c97f:	hlt    
  40c980:	sbb    esp,DWORD PTR [esi]
  40c982:	inc    edi
  40c983:	jmp    0x2ed66da4
  40c988:	cmc    
  40c989:	imul   eax,esi,0x6e33009d
  40c98f:	push   edx
  40c990:	xchg   edi,eax
  40c991:	and    eax,DWORD PTR [esi]
  40c993:	mov    ecx,0x10e17f5
  40c998:	push   0xffffff9a
  40c99a:	clc    
  40c99b:	push   es
  40c99c:	or     al,0xf4
  40c99e:	mov    bh,dh
  40c9a0:	test   BYTE PTR [eax],0x6
  40c9a3:	xor    esp,0xa
  40c9a6:	jmp    0x6ea40537
  40c9ab:	jmp    0xd1c72ca4
  40c9b0:	outs   dx,BYTE PTR ds:[esi]
  40c9b1:	in     eax,dx
  40c9b2:	clc    
  40c9b3:	(bad)  
  40c9b4:	cli    
  40c9b5:	mov    ds:0x332b0571,al
  40c9ba:	out    dx,al
  40c9bb:	add    BYTE PTR [eax],cl
  40c9bd:	cld    
  40c9be:	idiv   edi
  40c9c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c9c1:	mov    eax,ds:0xf0e1474
  40c9c6:	lods   eax,DWORD PTR ds:[esi]
  40c9c7:	pop    ebp
  40c9c8:	iret   
  40c9c9:	push   si
  40c9cb:	(bad)  
  40c9cc:	sti    
  40c9cd:	outs   dx,BYTE PTR ds:[esi]
  40c9ce:	out    dx,al
  40c9cf:	pop    esp
	...
  40c9dc:	jb     0x40ca41
  40c9de:	stc    
  40c9df:	call   0x38b7a6
  40c9e4:	jbe    0x40ca21
  40c9e6:	mov    edi,edi
  40c9e8:	jno    0x40ca4d
  40c9ea:	jae    0x40c9e8
  40c9ec:	icebp  
  40c9ed:	adc    eax,0xec94e80e
  40c9f2:	idiv   edi
  40c9f4:	xchg   edi,eax
  40c9f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c9f6:	add    al,0x0
  40c9f8:	fwait
  40c9f9:	out    dx,al
  40c9fa:	in     al,dx
  40c9fb:	sbb    DWORD PTR [edx],0xa1ffef93
  40ca01:	in     eax,dx
  40ca02:	inc    ecx
  40ca03:	cld    
  40ca04:	jle    0x40ca68
  40ca06:	jae    0x40ca18
  40ca08:	mov    cl,0x15
  40ca0a:	or     ch,al
  40ca0c:	cmp    al,0x18
  40ca0e:	push   es
  40ca0f:	add    BYTE PTR ds:0xd58507a1,dl
  40ca15:	pushw  es
  40ca17:	add    cl,cl
  40ca19:	and    eax,0x611e00fe
  40ca1e:	push   es
  40ca1f:	(bad)  
  40ca20:	pop    ebx
  40ca21:	xchg   ebp,eax
  40ca22:	test   DWORD PTR [edi],0x6c610e
  40ca28:	fs popa 
  40ca2a:	ins    BYTE PTR es:[edi],dx
  40ca2b:	add    BYTE PTR [eax+eiz*2+0x30ea458b],al
  40ca32:	mov    eax,DWORD PTR [ebp-0x86416]
  40ca38:	push   ds
  40ca39:	bound  esi,QWORD PTR [ebx-0x8]
  40ca3c:	mov    cl,0x15
  40ca3e:	cli    
  40ca3f:	call   0x40ca44
	...
  40ca4c:	idiv   DWORD PTR [ebp+0x7d]
  40ca4f:	add    bh,dh
  40ca51:	add    ah,0x73
  40ca54:	repnz mov dl,0x96
  40ca57:	push   DWORD PTR [eax+0x3fbd6c8a]
  40ca5d:	dec    ebx
  40ca5e:	add    bh,bh
  40ca60:	sub    bh,BYTE PTR [edx-0x3a787b14]
  40ca66:	add    eax,0x87da7c50
  40ca6b:	test   BYTE PTR [ebx+0x27ff05fd],al
  40ca71:	pop    eax
  40ca72:	jmp    0x7a89:0x5e56774
  40ca79:	sbb    bh,dh
  40ca7b:	(bad)  
  40ca7c:	push   0x608bc9e2
  40ca81:	or     eax,0x7ecf006b
  40ca86:	fs inc ecx
  40ca88:	idiv   DWORD PTR [eax+esi*4]
  40ca8b:	out    dx,eax
  40ca8c:	inc    eax
  40ca8d:	xor    eax,0xbdcaff06
  40ca92:	in     al,dx
  40ca93:	int    0x68
  40ca95:	and    eax,0x2e7a8906
  40ca9a:	(bad)  
  40ca9b:	(bad)  
  40ca9c:	sub    BYTE PTR [ecx],cl
  40ca9e:	mov    eax,0x64d28eb
  40caa3:	add    BYTE PTR [ebx-0x8fe9368],ah
  40caa9:	ins    BYTE PTR es:[edi],dx
  40caaa:	(bad)  
  40caab:	inc    BYTE PTR [edx+0x66]
  40caae:	(bad)  
  40caaf:	inc    BYTE PTR [eax]
	...
  40cabd:	ins    DWORD PTR es:[edi],dx
  40cabe:	jo     0x40cac8
  40cac0:	psrad  mm6,QWORD PTR [edx-0x4d630f02]
  40cac7:	jmp    0x40caa9
  40cac9:	xchg   esp,eax
  40caca:	clc    
  40cacb:	out    0x6e,eax
  40cacd:	cmp    eax,0x62d8ff06
  40cad2:	call   0x43ff:0xd79bc9f4
  40cad9:	outs   dx,DWORD PTR ds:[esi]
  40cada:	sar    BYTE PTR [ecx-0x11],1
  40cadd:	mov    bl,BYTE PTR [esi]
  40cadf:	(bad)  
  40cae0:	mov    ecx,0xa0b9bf9b
  40cae5:	xchg   ebx,eax
  40cae6:	mov    bh,0xff
  40cae8:	nop
  40cae9:	or     eax,0x9ba1ff63
  40caee:	and    esp,edi
  40caf0:	(bad)  
  40caf1:	mov    al,es:0x119b91ff
  40caf7:	add    BYTE PTR [edi-0x8fbe917],bl
  40cafd:	test   eax,0x35f710ac
  40cb02:	je     0x40caf4
  40cb04:	ja     0x40caac
  40cb06:	xchg   esi,eax
  40cb07:	imul   DWORD PTR [ecx-0x65]
  40cb0a:	popa   
  40cb0b:	dec    ecx
  40cb0c:	arpl   WORD PTR [edx],si
  40cb0e:	push   0xd99c0779
  40cb13:	maxps  xmm1,XMMWORD PTR [edi]
  40cb16:	out    0x3,eax
  40cb18:	mul    DWORD PTR [edi+0x2f]
  40cb1b:	(bad)  
  40cb1d:	jl     0x40cb0d
  40cb1f:	add    eax,DWORD PTR [eax]
	...
  40cb29:	add    BYTE PTR [eax],al
  40cb2b:	add    bh,dh
  40cb2d:	mov    ds:0x9b30fba9,eax
  40cb32:	out    dx,al
  40cb33:	add    esi,DWORD PTR [eax]
  40cb35:	and    eax,0x62f9ff3b
  40cb3a:	out    dx,eax
  40cb3b:	imul   esi,edi,0xf769ef08
  40cb41:	or     bh,ch
  40cb43:	nop
  40cb44:	mov    bl,0x96
  40cb46:	mov    esi,0xf967b90
  40cb4b:	(bad)  
  40cb4c:	stc    
  40cb4d:	xor    DWORD PTR [eax],eax
  40cb4f:	jns    0x40cb40
  40cb51:	call   0x7106:0x20d0ff71
  40cb58:	hlt    
  40cb59:	bound  ecx,QWORD PTR ds:0xef605f29
  40cb5f:	enter  0x62f4,0x6
  40cb63:	push   ecx
  40cb64:	mov    dh,0x22
  40cb66:	inc    edi
  40cb67:	jmp    0xc156db2d
  40cb6c:	(bad)  
  40cb6d:	jmp    0xee85926a
  40cb72:	aad    0x6c
  40cb74:	jg     0x40cb0c
  40cb76:	lock mov dh,0xa1
  40cb79:	sub    dl,BYTE PTR [ecx+eax*8+0x72]
  40cb7d:	jmp    0xdfc4727a
  40cb82:	cmc    
  40cb83:	xchg   esi,eax
  40cb84:	mov    DWORD PTR [ecx-0x66924a13],ebx
  40cb8a:	clc    
  40cb8b:	add    esi,ebx
  40cb8d:	or     al,0x6
  40cb8f:	xchg   BYTE PTR [eax],al
	...
  40cb99:	add    BYTE PTR [eax],al
  40cb9b:	add    BYTE PTR [edi+0x697ef08a],ch
  40cba1:	cdq    
  40cba2:	jb     0x40cb89
  40cba4:	dec    esp
  40cba5:	test   BYTE PTR [edi-0x7d14a692],al
  40cbab:	push   ebp
  40cbac:	dec    ecx
  40cbad:	cdq    
  40cbae:	clc    
  40cbaf:	pop    esi
  40cbb0:	(bad)  
  40cbb1:	mov    ?,eax
  40cbb3:	push   esi
  40cbb4:	inc    ecx
  40cbb5:	or     BYTE PTR [esp+esi*2+0x290c9939],0xa8
  40cbbd:	add    eax,0x827f7056
  40cbc2:	lock and DWORD PTR ss:[ecx-0x66debe4e],ebx
  40cbca:	clc    
  40cbcb:	adc    DWORD PTR [edx+ebp*8],edi
  40cbce:	clc    
  40cbcf:	push   ds
  40cbd0:	std    
  40cbd1:	mov    ds:0x648ca171,al
  40cbd6:	push   es
  40cbd7:	(bad)  
  40cbd8:	cmp    eax,DWORD PTR [edx]
  40cbda:	mov    edi,0x61e9800
  40cbdf:	jmp    DWORD PTR [ebx]
  40cbe1:	mov    gs,edi
  40cbe3:	(bad)  
  40cbe4:	jmp    0xf6493d80
  40cbe9:	push   ss
  40cbea:	mov    dl,0xff
  40cbec:	fld    DWORD PTR [esi]
  40cbee:	add    al,0x0
  40cbf0:	mov    ecx,0x8c960d8
  40cbf5:	es push es
  40cbf7:	jmp    DWORD PTR [ebx-0x7a]
  40cbfa:	out    dx,eax
  40cbfb:	(bad)  
  40cbfc:	mov    ecx,0x87197
	...
  40cc09:	add    BYTE PTR [eax],al
  40cc0b:	add    dh,al
  40cc0d:	add    eax,0x669ffb2
  40cc12:	push   es
  40cc13:	add    BYTE PTR [ecx-0x28],bl
  40cc16:	pusha  
  40cc17:	or     eax,0xff062638
  40cc1c:	and    eax,DWORD PTR [edi-0x68960011]
  40cc22:	jno    0x40cc2c
  40cc24:	jbe    0x40cc53
  40cc26:	mov    dl,0xff
  40cc28:	jns    0x40cbb0
  40cc2a:	push   esi
  40cc2b:	mov    ebp,ecx
  40cc2d:	xchg   edi,eax
  40cc2e:	div    DWORD PTR [ebp-0x87086]
  40cc34:	jbe    0x40cc55
  40cc36:	(bad)  
  40cc37:	(bad)  
  40cc38:	fst    DWORD PTR [edi-0x685e0f4f]
  40cc3e:	idiv   edi
  40cc40:	and    ebp,DWORD PTR [ecx-0x7]
  40cc43:	jne    0x40cc9b
  40cc45:	(bad)  
  40cc46:	fsin   
  40cc48:	mov    ecx,0xeeb5f797
  40cc4d:	(bad)  
  40cc4e:	idiv   edi
  40cc50:	mov    dh,0x4b
  40cc52:	(bad)  
  40cc53:	dec    ecx
  40cc55:	xchg   edi,eax
  40cc56:	inc    ecx
  40cc57:	clc    
  40cc58:	out    0x95,eax
  40cc5a:	cli    
  40cc5b:	(bad)  
  40cc5c:	jmp    0xf83d3df8
  40cc61:	arpl   WORD PTR [ebx+0x77],ax
  40cc64:	test   DWORD PTR [ebx-0x75fc3e35],0xddb8b4f
  40cc6e:	into   
  40cc6f:	sti    
	...
  40cc7c:	dec    ebp
  40cc7d:	mov    ch,BYTE PTR [esi+0x22]
  40cc80:	fmul   DWORD PTR [edi]
  40cc82:	or     eax,0xfa1212e8
  40cc87:	(bad)  
  40cc88:	jle    0x40ccc9
  40cc8a:	push   es
  40cc8b:	push   0xbde989f7
  40cc90:	dec    edi
  40cc91:	mov    bh,0x5a
  40cc93:	inc    ecx
  40cc94:	div    DWORD PTR [ecx]
  40cc96:	sbb    DWORD PTR [esi+0x36],ebx
  40cc99:	mov    bh,cl
  40cc9b:	je     0x40cc8c
  40cc9d:	mov    eax,ds:0xc998b42c
  40cca2:	ins    BYTE PTR es:[edi],dx
  40cca3:	and    eax,0xff024b31
  40cca8:	ret    0x4cea
  40ccab:	inc    ecx
  40ccac:	div    eax
  40ccae:	outs   dx,DWORD PTR ds:[esi]
  40ccaf:	or     BYTE PTR [edi+0x70fef81a],cl
  40ccb5:	jb     0x40ccd8
  40ccb7:	pop    esi
  40ccb8:	mov    dh,0x89
  40ccba:	ins    BYTE PTR es:[edi],dx
  40ccbb:	add    dh,bh
  40ccbd:	mov    DWORD PTR [esi+edi*8+0x7dec81e2],eax
  40ccc4:	push   edx
  40ccc5:	add    edx,edi
  40ccc7:	addr16 push cs
  40ccc9:	fadd   DWORD PTR [ebx+0x0]
  40cccc:	iret   
  40cccd:	mov    eax,DWORD PTR [eax+eax*1]
  40ccd0:	ja     0x40ccfb
  40ccd2:	jo     0x40ccdc
  40ccd4:	pop    ds
  40ccd5:	(bad)  
  40ccd8:	sub    BYTE PTR [edx-0x7649a185],dh
  40ccde:	ins    BYTE PTR es:[edi],dx
  40ccdf:	add    al,BYTE PTR [eax]
	...
  40cce9:	add    BYTE PTR [eax],al
  40cceb:	add    bh,dh
  40cced:	mov    DWORD PTR [esi+edi*8-0x14089d76],eax
  40ccf4:	mov    edi,0x1fc1798
  40ccf9:	push   cs
  40ccfa:	adc    edi,esp
  40ccfc:	sub    DWORD PTR [edx+0x7],0x16
  40cd00:	jg     0x40cc99
  40cd02:	dec    ecx
  40cd04:	mov    dh,0x5e
  40cd06:	out    dx,eax
  40cd07:	push   esi
  40cd08:	ins    BYTE PTR es:[edi],dx
  40cd09:	xchg   bh,ch
  40cd0b:	jne    0x40ccf8
  40cd0d:	mov    cl,BYTE PTR [esi]
  40cd0f:	(bad)  
  40cd10:	rcl    DWORD PTR [edi+0x5a44c3f3],1
  40cd16:	push   edi
  40cd17:	mul    BYTE PTR [edx]
  40cd19:	and    ch,bh
  40cd1b:	push   ebx
  40cd1c:	iret   
  40cd1d:	push   es
  40cd1e:	pop    ecx
  40cd1f:	sti    
  40cd20:	mov    cl,0x32
  40cd22:	pop    ds
  40cd23:	ins    BYTE PTR es:[edi],dx
  40cd24:	mul    DWORD PTR [edx-0x38]
  40cd27:	mov    edx,0x4510ae18
  40cd2c:	div    DWORD PTR [edx]
  40cd2e:	test   al,0x71
  40cd30:	dec    DWORD PTR [edx-0x687648c8]
  40cd36:	inc    esi
  40cd37:	ins    BYTE PTR es:[edi],dx
  40cd38:	mul    BYTE PTR [edx-0x80]
  40cd3b:	mov    edx,0x45287f10
  40cd40:	div    DWORD PTR [edx]
  40cd42:	xor    BYTE PTR [ecx-0x1],0x8a
  40cd46:	sub    al,0xb7
  40cd48:	popa   
  40cd49:	xchg   edi,eax
  40cd4a:	xchg   BYTE PTR [edi+0x6d],cl
  40cd4d:	xchg   edi,eax
  40cd4e:	addr16 int 0x0
	...
  40cd59:	add    BYTE PTR [eax],al
  40cd5b:	add    BYTE PTR [esi],dh
  40cd5d:	push   0xffffffef
  40cd5f:	push   eax
  40cd60:	jl     0x40cce8
  40cd62:	imul   eax,eax,0x3c
  40cd65:	or     al,0xef
  40cd67:	ins    DWORD PTR es:[edi],dx
  40cd68:	adc    al,0x98
  40cd6a:	ror    DWORD PTR [ebx],1
  40cd6c:	pop    ds
  40cd6d:	add    eax,0xe929fb68
  40cd72:	mov    eax,ds:0x67c8ef7
  40cd77:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  40cd79:	push   0xffffffee
  40cd7b:	push   esp
  40cd7c:	or     al,0x98
  40cd7e:	clc    
  40cd7f:	xchg   ebx,eax
  40cd80:	rcl    DWORD PTR [edi-0x13f30e8e],1
  40cd86:	clc    
  40cd87:	push   ss
  40cd88:	cld    
  40cd89:	or     BYTE PTR [edx],bl
  40cd8b:	push   cs
  40cd8c:	imul   bp,si,0x68
  40cd90:	in     al,dx
  40cd91:	xchg   ebp,eax
  40cd92:	clc    
  40cd93:	(bad)  
  40cd94:	addr16 xchg edi,eax
  40cd96:	clc    
  40cd97:	jl     0x40cd85
  40cd99:	mov    al,BYTE PTR [eax-0x316a339a]
  40cd9f:	stos   DWORD PTR es:[edi],eax
  40cda0:	enter  0x5196,0x72
  40cda4:	fdiv   DWORD PTR [ecx]
  40cda6:	shr    esp,0x90
  40cda9:	ss inc edi
  40cdab:	jmp    0xe94730a4
  40cdb0:	fnstcw WORD PTR [ecx-0x750ccb08]
  40cdb6:	les    edi,FWORD PTR ds:0x148d62f3
  40cdbc:	add    esp,edx
  40cdbe:	std    
  40cdbf:	jmp    0x40cdc1
	...
  40cdc9:	add    BYTE PTR [eax],al
  40cdcb:	add    BYTE PTR [esi],al
  40cdcd:	je     0x40cdd4
  40cdcf:	mov    ecx,0xf038c79
  40cdd4:	jb     0x40ce32
  40cdd6:	pop    edx
  40cdd7:	sub    eax,0xae605fe6
  40cddc:	repnz ss push es
  40cddf:	jle    0x40cdc8
  40cde1:	data16 out dx,al
  40cde3:	repz out 0x62,eax
  40cde6:	push   es
  40cde7:	add    DWORD PTR [edx+0x35],ebp
  40cdea:	inc    edi
  40cdeb:	jmp    0xa89a31cc
  40cdf0:	hlt    
  40cdf1:	mov    bh,BYTE PTR [ebx]
  40cdf3:	jge    0x40ce32
  40cdf5:	xchg   ebp,eax
  40cdf6:	or     al,0x29
  40cdf8:	mov    al,ds:0x6b00f8ff
  40cdfd:	push   0xfffffff9
  40cdff:	adc    eax,0x4738bf
  40ce04:	(bad)  
  40ce05:	aad    0x4
  40ce07:	or     ebx,esi
  40ce09:	adc    dl,BYTE PTR [ebx-0x1]
  40ce0c:	or     edi,DWORD PTR [edi-0x42f1bea9]
  40ce12:	lods   al,BYTE PTR ds:[esi]
  40ce13:	pusha  
  40ce14:	dec    edi
  40ce15:	bound  eax,QWORD PTR [ebp+0x4702323d]
  40ce1b:	add    dh,bl
  40ce1d:	adc    cl,BYTE PTR [esi]
  40ce1f:	dec    ebx
  40ce21:	repnz push edi
  40ce23:	inc    ecx
  40ce24:	into   
  40ce25:	test   BYTE PTR ds:0x707de6a,bh
  40ce2b:	(bad)  
  40ce2c:	jmp    0x40cdf8
  40ce2e:	pop    eax
  40ce2f:	inc    ecx
	...
  40ce3c:	into   
  40ce3d:	call   0x8306:0x2201a511
  40ce44:	pop    edx
  40ce45:	push   0xd
  40ce47:	shr    dl,0x41
  40ce4a:	stc    
  40ce4b:	xor    eax,0x46fe72
  40ce50:	popa   
  40ce51:	gs stos DWORD PTR es:[edi],eax
  40ce53:	pop    edi
  40ce54:	fistp  WORD PTR [esi-0x7b]
  40ce57:	les    ebx,FWORD PTR [edx-0x3e6aee66]
  40ce5d:	and    DWORD PTR [esi],eax
  40ce5f:	(bad)  
  40ce60:	mov    edi,DWORD PTR [ebp+0x615e4158]
  40ce66:	push   es
  40ce67:	add    BYTE PTR [esi-0x7a],bl
  40ce6a:	add    eax,0x5b9fe543
  40ce6f:	leave  
  40ce70:	mov    WORD PTR [esi+0x6],fs
  40ce73:	and    DWORD PTR [ebx+0x5e4158bd],0x61
  40ce7a:	jb     0x40ce9b
  40ce7c:	mov    eax,ds:0xf760aa45
  40ce81:	retf   0xff04
  40ce84:	or     dl,BYTE PTR [edi]
  40ce86:	pop    edi
  40ce87:	inc    ecx
  40ce88:	test   DWORD PTR [eax],0xae2003c6
  40ce8e:	xchg   DWORD PTR [esi-0x4a],ebx
  40ce91:	mov    eax,ebp
  40ce93:	add    al,0x63
  40ce95:	stos   DWORD PTR es:[edi],eax
  40ce96:	inc    ebx
  40ce97:	add    bh,dh
  40ce99:	mov    eax,DWORD PTR [eax+eax*1]
  40ce9c:	xor    al,0xce
  40ce9e:	mov    ebx,ebp
	...
  40ceac:	je     0x40cef5
  40ceae:	repnz push edx
  40ceb0:	jl     0x40ce71
  40ceb2:	or     al,0xb
  40ceb4:	mov    bh,0x16
  40ceb6:	or     al,BYTE PTR [ebx+0x74048662]
  40cebc:	repnz or DWORD PTR [edx],edi
  40cebf:	add    BYTE PTR [edx+0x7d],cl
  40cec2:	sub    eax,eax
  40cec4:	sub    al,0xd3
  40cec6:	ret    0xf707
  40cec9:	or     DWORD PTR ds:0x819a437e,edi
  40cecf:	cmp    al,0x63
  40ced1:	sub    al,BYTE PTR [ebp+0x0]
  40ced4:	not    DWORD PTR [esi+0x7]
  40ced7:	sub    esi,DWORD PTR [edi-0x103e32bf]
  40cedd:	mov    DWORD PTR [edi+esi*1-0x74c3b0ef],eax
  40cee4:	and    cl,BYTE PTR [esi-0x766a7cb6]
  40ceea:	or     edx,edx
  40ceec:	add    al,BYTE PTR [ecx+eax*4+0x678b037c]
  40cef3:	add    al,0x1c
  40cef5:	retf   0x23e9
  40cef8:	pusha  
  40cef9:	inc    edi
  40cefa:	push   cs
  40cefb:	mov    esi,DWORD PTR [edx-0xb000883]
  40cf01:	mov    DWORD PTR [ecx+eax*8],eax
  40cf04:	push   edi
  40cf05:	arpl   bp,bp
  40cf07:	push   ebx
  40cf08:	dec    edi
  40cf09:	mov    ebx,0x3339f876
  40cf0e:	fs dec esi
	...
  40cf1c:	jmp    DWORD PTR [eax]
  40cf1e:	mov    edi,0x9d66a3f8
  40cf23:	jmp    0x40cf4b
  40cf25:	out    dx,eax
  40cf26:	aaa    
  40cf27:	clc    
  40cf28:	shl    BYTE PTR [edi],0x26
  40cf2b:	(bad)  
  40cf2e:	add    al,0xdd
  40cf30:	or     DWORD PTR [esi],ecx
  40cf32:	repz clc 
  40cf34:	mov    ebp,DWORD PTR [edx-0x6b]
  40cf37:	add    ecx,DWORD PTR [ebp-0x71f1ef9e]
  40cf3d:	xor    ebp,DWORD PTR [esi-0x21618bfd]
  40cf43:	or     al,0xb7
  40cf45:	push   cs
  40cf46:	or     BYTE PTR [edx+0x7849733],0x82
  40cf4d:	sbb    eax,0xcfdf52ff
  40cf52:	jbe    0x40cf4b
  40cf54:	ror    DWORD PTR [eax],0xef
  40cf57:	mov    BYTE PTR [ebx],dh
  40cf59:	xchg   ebx,eax
  40cf5a:	imul   DWORD PTR ds:[ebx]
  40cf5d:	xchg   edi,eax
  40cf5e:	(bad)  
  40cf5f:	adc    DWORD PTR [esi+0x33],ebx
  40cf62:	cs add al,0x74
  40cf65:	sahf   
  40cf66:	jmp    0x3b88:0xfc0db70a
  40cf6d:	xchg   ebx,eax
  40cf6e:	imul   edi,DWORD PTR [ebx+esi*8+0x62],0x1b
  40cf73:	sbb    ebp,DWORD PTR [edx+eiz*1-0x9]
  40cf77:	inc    ebx
  40cf78:	daa    
  40cf79:	mov    ebx,DWORD PTR [ebx]
  40cf7b:	mov    WORD PTR [ecx-0x6d],?
  40cf7e:	arpl   sp,bx
	...
  40cf8c:	jnp    0x40cfab
  40cf8e:	jg     0x40cf87
  40cf90:	shr    BYTE PTR [edx+0x1c],1
  40cf93:	test   eax,0x7281065e
  40cf99:	(bad)  
  40cf9b:	outs   dx,BYTE PTR ds:[esi]
  40cf9c:	frstor [edx-0x75]
  40cf9f:	lods   al,BYTE PTR ds:[esi]
  40cfa0:	inc    esp
  40cfa1:	and    edi,ecx
  40cfa3:	hlt    
  40cfa4:	pop    edi
  40cfa5:	xor    al,0x47
  40cfa7:	jmp    0xc34e6f21
  40cfac:	repz xchg ebx,eax
  40cfae:	jb     0x40cff5
  40cfb0:	sub    BYTE PTR [esi-0x65],ch
  40cfb3:	sahf   
  40cfb4:	mov    bl,0x62
  40cfb6:	test   DWORD PTR ds:0x92c4e803,ebp
  40cfbc:	cmp    esp,DWORD PTR [ecx-0x185816f3]
  40cfc2:	jmp    0xf9a755e5
  40cfc7:	pushf  
  40cfc8:	cld    
  40cfc9:	xchg   ecx,eax
  40cfca:	adc    al,BYTE PTR [ebp+0x53]
  40cfcd:	and    al,0x6
  40cfcf:	push   0xffffffb7
  40cfd1:	push   0x56
  40cfd3:	(bad)  
  40cfd4:	addr16 pop edi
  40cfd6:	stc    
  40cfd7:	jl     0x40cfd5
  40cfd9:	xchg   ecx,eax
  40cfda:	adc    cl,BYTE PTR [ecx+0x53]
  40cfdd:	and    al,0x6
  40cfdf:	push   0xffffff80
  40cfe1:	push   0xffffff8d
  40cfe3:	xor    al,0xe3
  40cfe5:	fild   DWORD PTR [ebx]
  40cfe7:	xor    edx,eax
  40cfe9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cfea:	or     ecx,ebp
  40cfec:	inc    edi
  40cfed:	fsubp  st(1),st
  40cfef:	push   0x0
	...
  40cff9:	add    BYTE PTR [eax],al
  40cffb:	add    BYTE PTR [eax-0x76],ah
  40cffe:	clc    
  40cfff:	xor    al,0xef
  40d001:	jp     0x40cfce
  40d003:	mov    DWORD PTR gs:[ecx+0x6707a90c],edx
  40d00a:	iret   
  40d00b:	stos   DWORD PTR es:[edi],eax
  40d00c:	in     al,0x62
  40d00e:	stc    
  40d00f:	adc    al,0xef
  40d011:	jp     0x40cfcd
  40d013:	inc    edi
  40d014:	imul   edx,DWORD PTR [ecx+0x66d8a90c],0x768c00cf
  40d01e:	push   es
  40d01f:	jmp    DWORD PTR [ebx+0x62]
  40d022:	stc    
  40d023:	jne    0x40d053
  40d025:	jle    0x40cfe8
  40d027:	std    
  40d028:	fstp   DWORD PTR [eax-0x6ddc3ff5]
  40d02e:	int    0xc2
  40d030:	data16 outs dx,BYTE PTR ds:[esi]
  40d033:	nop
  40d034:	ds daa 
  40d036:	push   es
  40d037:	push   0x470619
  40d03c:	(bad)  
  40d03d:	push   ebp
  40d03e:	xchg   esp,eax
  40d03f:	(bad)  
  40d040:	fstp   DWORD PTR [esi+eax*8+0x75]
  40d044:	sbb    esi,edi
  40d046:	xchg   ebp,eax
  40d047:	pusha  
  40d048:	pop    edi
  40d049:	data16 outs dx,BYTE PTR ds:[esi]
  40d04b:	mov    cl,0x39
  40d04d:	daa    
  40d04e:	push   es
  40d04f:	call   0x38c44f
  40d054:	aad    0xa5
  40d056:	pop    es
  40d057:	test   BYTE PTR [ebx],dl
  40d059:	addr16 push es
  40d05b:	add    BYTE PTR [ebx+0x23],ch
  40d05e:	cli    
  40d05f:	push   eax
	...
  40d06c:	fld    DWORD PTR [ecx]
  40d06e:	or     bh,bh
  40d070:	mov    bl,0xf5
  40d072:	pop    eax
  40d073:	inc    ecx
  40d074:	fsubrp st(4),st
  40d076:	les    ecx,FWORD PTR [eax]
  40d078:	lds    esp,FWORD PTR [ebp+0x656b8507]
  40d07e:	push   es
  40d07f:	add    BYTE PTR [edi+eiz*2],dh
  40d082:	mov    eax,DWORD PTR [ebp-0x3a]
  40d085:	ss ins BYTE PTR es:[edi],dx
  40d087:	inc    DWORD PTR [esi+0x3e]
  40d08a:	addr16 inc ecx
  40d08c:	mov    ss,WORD PTR [esi+0x6149fc71]
  40d092:	sahf   
  40d093:	pusha  
  40d094:	fbld   TBYTE PTR [esi-0x7b]
  40d097:	les    eax,FWORD PTR [edx+0x130fc65a]
  40d09d:	out    0x5,eax
  40d09f:	add    bh,dh
  40d0a1:	jnp    0x40d094
  40d0a3:	je     0x40d114
  40d0a5:	loopne 0x40d0af
  40d0a7:	pushf  
  40d0a8:	xlat   BYTE PTR ds:[ebx]
  40d0a9:	cmp    al,BYTE PTR [edx]
  40d0ab:	xor    DWORD PTR [ebx],0xffffff87
  40d0ae:	test   edi,esi
  40d0b0:	fisttp DWORD PTR [edi+0x7adde8f7]
  40d0b6:	add    al,0x0
  40d0b8:	jb     0x40d078
  40d0ba:	call   0xf1bc9e0e
  40d0bf:	je     0x40d0f0
  40d0c1:	and    edx,DWORD PTR [esi]
  40d0c3:	jmp    FWORD PTR [eax]
  40d0c5:	and    BYTE PTR [edi],cl
  40d0c7:	shl    al,0xff
  40d0ca:	inc    edx
  40d0cb:	add    edi,esi
  40d0cd:	jnp    0x40d054
  40d0cf:	jl     0x40d0d1
	...
  40d0d9:	add    BYTE PTR [eax],al
  40d0db:	add    BYTE PTR [ebx],cl
  40d0dd:	jnp    0x40d0e0
  40d0df:	test   BYTE PTR [edx+0x7700047a],dh
  40d0e5:	add    DWORD PTR [edi+ecx*1],0x73
  40d0e9:	scas   eax,DWORD PTR es:[edi]
  40d0ea:	add    eax,DWORD PTR [eax]
  40d0ec:	test   ecx,0xbce3548d
  40d0f2:	push   esi
  40d0f3:	call   0xff33d20b
  40d0f8:	cmp    eax,0xd0e83913
  40d0fd:	psubsw mm7,mm6
  40d100:	inc    edx
  40d101:	bound  edx,QWORD PTR [eax+ebp*8+0x24]
  40d105:	add    edx,esi
  40d107:	(bad)  
  40d108:	mov    al,0x47
  40d10a:	repnz push DWORD PTR [eax+0x32c7047a]
  40d111:	into   
  40d112:	add    al,0x0
  40d114:	idiv   DWORD PTR [ecx-0x7b]
  40d117:	cmp    al,0x4f
  40d119:	sbb    al,BYTE PTR [ebp+0x0]
  40d11c:	test   DWORD PTR [esi+0x54],0x451b6968
  40d123:	add    BYTE PTR [edi-0x88d9a9d],cl
  40d129:	bound  edi,QWORD PTR [edi]
  40d12b:	ins    BYTE PTR es:[edi],dx
  40d12c:	xchg   ecx,eax
  40d12d:	add    ch,BYTE PTR [esi]
  40d12f:	add    al,0x68
  40d131:	push   ss
  40d132:	xchg   ebx,ebp
  40d134:	(bad)  
  40d135:	adc    ebp,edi
  40d137:	add    ebp,esp
  40d139:	mov    ds:0xc5df1bf2,al
  40d13e:	or     eax,0x43
	...
  40d14b:	add    bh,dh
  40d14d:	jp     0x40d197
  40d14f:	jb     0x40d148
  40d151:	bound  edi,QWORD PTR [edi-0x51fd6d95]
  40d157:	add    esi,DWORD PTR [eax]
  40d159:	push   ss
  40d15a:	inc    edi
  40d15b:	jmp    0x40d10f
  40d15d:	adc    ebp,edi
  40d15f:	add    ebp,esp
  40d161:	mov    ds:0xbd8f4bba,al
  40d166:	int    0x42
  40d168:	idiv   DWORD PTR [edx+0x6c]
  40d16b:	jb     0x40d164
  40d16d:	bound  ebx,QWORD PTR [edi-0x51fdad95]
  40d173:	add    edi,eax
  40d175:	adc    eax,0x141eeb17
  40d17a:	out    dx,eax
  40d17b:	add    ebx,esp
  40d17d:	inc    eax
  40d17e:	ins    BYTE PTR es:[edi],dx
  40d17f:	pop    DWORD PTR ss:[edx]
  40d182:	scas   al,BYTE PTR es:[edi]
  40d183:	add    esi,esi
  40d185:	adc    eax,0x1896be5
  40d18a:	scas   al,BYTE PTR es:[edi]
  40d18b:	add    ebx,edi
  40d18d:	das    
  40d18e:	jle    0x40d193
  40d190:	div    DWORD PTR [edx]
  40d192:	push   edi
  40d193:	mov    edx,0xf2ef2257
  40d198:	sub    edi,DWORD PTR [ebx-0x3a]
  40d19b:	or     esp,DWORD PTR [ebx+eiz*2]
  40d19e:	out    dx,eax
  40d19f:	fsubp  st(5),st
  40d1a1:	jecxz  0x40d1a4
  40d1a3:	pushf  
  40d1a4:	cmp    BYTE PTR [edx],ah
  40d1a6:	out    dx,eax
  40d1a7:	add    eax,0x206650a
  40d1ac:	mov    bl,0x5c
  40d1ae:	(bad)  
  40d1af:	xor    al,0x0
	...
  40d1b9:	add    BYTE PTR [eax],al
  40d1bb:	add    BYTE PTR ds:0x239d42de,dl
  40d1c1:	std    
  40d1c2:	push   es
  40d1c3:	sahf   
  40d1c4:	out    dx,al
  40d1c5:	mov    ch,ch
  40d1c7:	fsub   QWORD PTR [esi-0x70]
  40d1ca:	clc    
  40d1cb:	mov    ds,esi
  40d1cd:	xchg   esi,eax
  40d1ce:	push   ebp
  40d1cf:	xchg   ecx,eax
  40d1d0:	adc    al,0x8e
  40d1d2:	clc    
  40d1d3:	jle    0x40d1a7
  40d1d5:	mul    BYTE PTR es:[esi+edi*4-0x6a]
  40d1da:	push   ebp
  40d1db:	add    edi,ecx
  40d1dd:	(bad)  
  40d1de:	jb     0x40d241
  40d1e0:	sbb    ebp,DWORD PTR [eax+edi*8+0x5e]
  40d1e4:	and    al,0x90
  40d1e6:	jb     0x40d245
  40d1e8:	ret    
  40d1e9:	jp     0x40d1fd
  40d1eb:	dec    esp
  40d1ec:	and    al,0x90
  40d1ee:	mov    gs,WORD PTR [eax+edi*1-0x4ae851c]
  40d1f5:	push   ss
  40d1f6:	xor    ch,BYTE PTR [edx-0x7a]
  40d1f9:	jle    0x40d200
  40d1fb:	mov    ch,0xd6
  40d1fd:	cli    
  40d1fe:	add    eax,0xf8cd15e9
  40d203:	xchg   esp,eax
  40d204:	in     al,dx
  40d205:	xchg   bh,al
  40d207:	imul   esp,esp,0xffffff8d
  40d20a:	clc    
  40d20b:	xchg   esp,eax
  40d20c:	mov    esp,0xbcf1728d
  40d211:	inc    edi
  40d212:	test   esi,edi
  40d214:	lds    ecx,FWORD PTR [ebp+0x17c5f972]
  40d21a:	push   cs
  40d21b:	add    ecx,esi
  40d21d:	loope  0x40d217
  40d21f:	out    0x0,al
	...
  40d229:	add    BYTE PTR [eax],al
  40d22b:	add    ch,al
  40d22d:	pop    ss
  40d22e:	jmp    0x71e6:0xee5b2fde
  40d235:	(bad)  
  40d236:	clc    
  40d237:	into   
  40d238:	pop    ds
  40d239:	xchg   ebx,eax
  40d23a:	in     eax,dx
  40d23b:	add    BYTE PTR [edx-0x25],bl
  40d23e:	idiv   edi
  40d240:	push   ecx
  40d241:	or     ebp,edx
  40d243:	call   0x38adfa
  40d248:	push   ecx
  40d249:	or     ebp,esi
  40d24b:	call   0x38adba
  40d250:	xchg   edx,esp
  40d252:	cli    
  40d253:	inc    DWORD PTR [ecx+0x71fc7191]
  40d259:	imul   edx,DWORD PTR [edx-0x7a98f0a0],0xffffffc4
  40d260:	pop    edx
  40d261:	stos   BYTE PTR es:[edi],al
  40d262:	test   esp,edi
  40d264:	rcl    DWORD PTR [eax+0x621ec2cd],0x53
  40d26b:	mov    esp,DWORD PTR [edx-0x2eff93cc]
  40d271:	or     cl,BYTE PTR [esi]
  40d273:	call   0x38e1dd
  40d278:	xchg   ebp,eax
  40d279:	cdq    
  40d27a:	push   ebx
  40d27b:	call   0x46e424
  40d280:	add    eax,0x1d1b74a2
  40d285:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d286:	inc    eax
  40d287:	jmp    0x40d2a5
  40d289:	loop   0x40d2bb
  40d28b:	or     eax,0x38865b5a
	...
  40d29c:	in     al,0xa
  40d29e:	add    eax,esi
  40d2a0:	fisub  WORD PTR [ecx-0x13]
  40d2a3:	add    dh,ch
  40d2a5:	pop    edx
  40d2a6:	dec    esi
  40d2a7:	cmp    ecx,DWORD PTR ds:0x1d8bec15
  40d2ad:	sbb    eax,0x61dac2cf
  40d2b2:	push   ebx
  40d2b3:	mov    eax,edx
  40d2b5:	out    0xc4,eax
  40d2b7:	mov    ah,0xf9
  40d2b9:	xchg   ebx,eax
  40d2ba:	jno    0x40d2c8
  40d2bc:	(bad)  
  40d2bd:	xor    cl,BYTE PTR [edi+edi*8-0x40054b09]
  40d2c4:	sub    al,BYTE PTR [edi-0x544a36ab]
  40d2ca:	add    al,0xff
  40d2cc:	or     al,BYTE PTR [eax-0x2ba4b224]
  40d2d2:	test   BYTE PTR [edx],0xb7
  40d2d5:	push   edi
  40d2d6:	add    DWORD PTR [edi-0x52],ebx
  40d2d9:	mov    ecx,0x76700011
  40d2de:	push   ds
  40d2df:	jmp    edx
  40d2e1:	mov    ebx,esp
  40d2e3:	push   esp
  40d2e4:	pop    esp
  40d2e5:	fdivr  st(6),st
  40d2e7:	mov    WORD PTR [edx-0x3500adf5],?
  40d2ed:	jg     0x40d2cb
  40d2ef:	icebp  
  40d2f0:	jge    0x40d306
  40d2f2:	test   DWORD PTR [edx],0x780ac37
  40d2f8:	hlt    
  40d2f9:	jnp    0x40d2ff
  40d2fb:	jmp    FWORD PTR [edx+0x74f72f]
	...
  40d309:	add    BYTE PTR [eax],al
  40d30b:	add    BYTE PTR [edi],ch
  40d30d:	and    edi,DWORD PTR [ebp-0x4e3df71]
  40d313:	mov    edi,0x1e5ffe8
  40d318:	idiv   DWORD PTR [ebx+0x7b]
  40d31b:	inc    esp
  40d31c:	sbb    eax,DWORD PTR [eax]
  40d31e:	jmp    0x2184:0x57bc07f
  40d325:	jns    0x40d32b
  40d327:	add    BYTE PTR [eax+0x72],cl
  40d32a:	push   ecx
  40d32b:	(bad)  
  40d32c:	call   0xc78550a6
  40d331:	pop    ebp
  40d332:	jno    0x40d304
  40d334:	dec    edi
  40d335:	xchg   DWORD PTR [ebx+0x41],esp
  40d338:	div    DWORD PTR [ecx+0x63]
  40d33b:	jo     0x40d334
  40d33d:	jns    0x40d393
  40d33f:	dec    DWORD PTR [edx+0x6a]
  40d342:	pop    edx
  40d343:	and    DWORD PTR [esi+0x63],edx
  40d346:	cs add al,0x9f
  40d349:	ss pop edi
  40d34b:	add    al,0xf7
  40d34d:	xor    dl,al
  40d34f:	jbe    0x40d318
  40d351:	sti    
  40d352:	add    DWORD PTR [ebx+0x36],esp
  40d355:	arpl   di,dx
  40d357:	dec    eax
  40d358:	pop    es
  40d359:	arpl   di,bp
  40d35b:	dec    ebp
  40d35c:	cs pop eax
  40d35e:	scas   eax,DWORD PTR es:[edi]
  40d35f:	ja     0x40d354
  40d361:	push   edi
  40d362:	popf   
  40d363:	ja     0x40d354
  40d365:	push   edi
  40d366:	mov    dh,0x0
  40d368:	jp     0x40d343
  40d36a:	in     al,dx
  40d36b:	add    esi,edi
  40d36d:	push   edi
  40d36e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d36f:	jbe    0x40d371
	...
  40d379:	add    BYTE PTR [eax],al
  40d37b:	add    dh,ch
  40d37d:	mov    ds:0x62f7b821,eax
  40d382:	out    dx,eax
  40d383:	add    ebx,DWORD PTR [esp+eiz*2-0x60]
  40d387:	inc    esi
  40d388:	and    DWORD PTR [ebx-0x11],0x3
  40d38c:	test   DWORD PTR [esi-0x73803c45],0x9131f05f
  40d396:	mov    BYTE PTR [ebx],ch
  40d398:	lock adc eax,0x7abbc8ef
  40d39e:	out    dx,al
  40d39f:	add    esi,edi
  40d3a1:	bound  ebp,QWORD PTR [edi+0x30]
  40d3a4:	neg    DWORD PTR [ebx+0x63]
  40d3a7:	dec    ebx
  40d3a8:	cmc    
  40d3a9:	(bad)  
  40d3aa:	out    dx,eax
  40d3ab:	pop    eax
  40d3ac:	shrd   DWORD PTR [eax],ebp,0xf0
  40d3b0:	stc    
  40d3b1:	fldcw  WORD PTR [ecx+0x170d75bf]
  40d3b7:	add    esp,DWORD PTR [edx+0x42]
  40d3ba:	xchg   edi,ebp
  40d3bc:	xor    DWORD PTR [edx],esp
  40d3be:	out    dx,eax
  40d3bf:	lock arpl WORD PTR [edi+0x6361e816],bx
  40d3c6:	out    dx,eax
  40d3c7:	cld    
  40d3c8:	mov    BYTE PTR [ebx+0x6],bl
  40d3cb:	ins    BYTE PTR es:[edi],dx
  40d3cc:	repnz pusha 
  40d3ce:	push   es
  40d3cf:	jmp    0xe92efa83
  40d3d4:	hlt    
  40d3d5:	bound  eax,QWORD PTR [esi]
  40d3d7:	shr    BYTE PTR [ecx+0x75e90661],1
  40d3dd:	push   cs
  40d3de:	out    dx,al
  40d3df:	call   0x40d3e4
	...
  40d3ec:	pop    ds
  40d3ed:	pop    esp
  40d3ee:	pop    DWORD PTR [edi+ebx*4-0x5c]
  40d3f2:	inc    edx
  40d3f3:	shl    ebp,1
  40d3f5:	bound  eax,QWORD PTR [esi]
  40d3f7:	jmp    0xe947749f
  40d3fc:	hlt    
  40d3fd:	fistp  QWORD PTR [edx-0x6f]
  40d400:	cmc    
  40d401:	adc    eax,0x82e67009
  40d406:	shr    BYTE PTR [ebx+eax*2],0x60
  40d40a:	push   es
  40d40b:	jmp    0xe8e84e04
  40d410:	hlt    
  40d411:	bound  eax,QWORD PTR [ebp+0x73602cfc]
  40d417:	out    0xc3,al
  40d419:	push   cs
  40d41a:	fisub  DWORD PTR [esi-0x16fe8552]
  40d420:	hlt    
  40d421:	(bad)  
  40d422:	out    dx,eax
  40d423:	xor    dl,0x62
  40d426:	push   es
  40d427:	push   0xffffffa6
  40d429:	jp     0x40d42c
  40d42b:	aam    0x19
  40d42d:	fidivr DWORD PTR [edx+0x21]
  40d430:	cmp    BYTE PTR [esi],ah
  40d432:	out    dx,al
  40d433:	in     al,0xf4
  40d435:	bound  eax,QWORD PTR [esi]
  40d437:	inc    eax
  40d438:	outs   dx,DWORD PTR ds:[esi]
  40d439:	bound  eax,QWORD PTR [esi]
  40d43b:	jmp    0xed2ee2b5
  40d440:	icebp  
  40d441:	fild   QWORD PTR [edx-0x18]
  40d444:	hlt    
  40d445:	bound  ecx,QWORD PTR [edi+0x7ae5c894]
  40d44b:	push   ebp
  40d44c:	repz push cs
  40d44e:	sldt   WORD PTR [eax]
	...
  40d459:	add    BYTE PTR [eax],al
  40d45b:	add    BYTE PTR [ecx],ah
  40d45d:	sbb    al,0xee
  40d45f:	add    bl,dh
  40d461:	pushw  es
  40d463:	jmp    0x40d436
  40d465:	mov    eax,ds:0x66d0e841
  40d46a:	push   es
  40d46b:	add    BYTE PTR [ecx+0x1b],ah
  40d46e:	mov    BYTE PTR [eax],0x9e
  40d471:	pushw  es
  40d473:	(bad)  
  40d474:	rol    esi,cl
  40d476:	clc    
  40d477:	dec    DWORD PTR [esi+0x6245c166]
  40d47d:	pushw  es
  40d47f:	add    BYTE PTR [esi-0x7143be5f],bl
  40d485:	pushw  es
  40d487:	add    BYTE PTR [ecx+0x1b],dl
  40d48a:	mov    esi,0x6665e00
  40d48f:	inc    DWORD PTR [ebx]
  40d491:	jnp    0x40d473
  40d493:	adc    ecx,DWORD PTR [eax+0x1389f779]
  40d499:	lahf   
  40d49a:	div    DWORD PTR [ebp-0x66]
  40d49d:	scas   al,BYTE PTR es:[edi]
  40d49e:	add    dh,bh
  40d4a0:	leave  
  40d4a1:	js     0x40d430
  40d4a3:	inc    ebp
  40d4a4:	xchg   esi,eax
  40d4a5:	jns    0x40d518
  40d4a7:	aam    0x76
  40d4a9:	xchg   ebx,eax
  40d4aa:	stc    
  40d4ab:	call   FWORD PTR [ecx-0x623bbdfa]
  40d4b1:	push   edx
  40d4b2:	scas   al,BYTE PTR es:[edi]
  40d4b3:	pusha  
  40d4b4:	dec    edi
  40d4b5:	pushw  es
  40d4b7:	jne    0x40d515
  40d4b9:	cs cwde 
  40d4bb:	popa   
  40d4bc:	pop    edi
  40d4bd:	data16 out dx,al
  40d4bf:	xchg   DWORD PTR [eax],eax
	...
  40d4c9:	add    BYTE PTR [eax],al
  40d4cb:	add    BYTE PTR [eax],bh
  40d4cd:	pushw  es
  40d4cf:	push   eax
  40d4d0:	fsub   DWORD PTR ss:[ebp+0x41]
  40d4d4:	push   cs
  40d4d5:	jns    0x40d548
  40d4d7:	rol    BYTE PTR [esi],0x69
  40d4da:	jbe    0x40d4dc
  40d4dc:	fimul  WORD PTR [eax+edi*4+0x5c93f774]
  40d4e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d4e4:	push   esi
  40d4e5:	mov    ebx,0xf25ce804
  40d4ea:	add    al,0x0
  40d4ec:	daa    
  40d4ed:	hlt    
  40d4ee:	lods   eax,DWORD PTR ds:[esi]
  40d4ef:	pusha  
  40d4f0:	ss jl  0x40d4da
  40d4f3:	je     0x40d4ac
  40d4f5:	arpl   WORD PTR [eax+esi*2],dx
  40d4f8:	idiv   DWORD PTR [ebx-0x3]
  40d4fb:	mov    edi,0xad5a6923
  40d500:	push   ss
  40d501:	cmp    eax,DWORD PTR [edx]
  40d503:	call   0x431f30
  40d508:	daa    
  40d509:	xor    al,0x99
  40d50b:	pusha  
  40d50c:	ss jl  0x40d4f8
  40d50f:	je     0x40d4c8
  40d511:	mov    ds:0x7bf76ef2,eax
  40d516:	frstor [esp+esi*2]
  40d519:	jle    0x40d4b7
  40d51b:	pop    edi
  40d51c:	mov    dh,0x7b
  40d51e:	add    esi,DWORD PTR [ebp-0x3]
  40d521:	arpl   WORD PTR [eax-0x238449a0],si
  40d527:	sub    esp,ecx
  40d529:	jnp    0x40d52f
  40d52b:	push   eax
  40d52c:	fist   WORD PTR [ecx+0x65]
  40d52f:	inc    ecx
	...
  40d53c:	not    DWORD PTR [eax]
  40d53e:	jno    0x40d500
  40d540:	dec    edi
  40d541:	out    dx,eax
  40d542:	pop    edx
  40d543:	add    bh,dh
  40d545:	xor    al,0x4
  40d547:	sub    esi,DWORD PTR [edi]
  40d549:	xchg   esp,eax
  40d54a:	les    esi,FWORD PTR [ebp+edx*4+0x30]
  40d54e:	jno    0x40d518
  40d550:	pop    gs
  40d552:	pop    edx
  40d553:	add    bh,dh
  40d555:	jmp    0x40d540
  40d557:	je     0x40d598
  40d559:	xor    edi,edi
  40d55b:	stc    
  40d55c:	add    BYTE PTR [eax+0x7d],dl
  40d55f:	inc    esp
  40d560:	cmp    edi,DWORD PTR [eax]
  40d562:	jno    0x40d528
  40d564:	fbld   TBYTE PTR [ebx+0x25]
  40d567:	pop    edi
  40d568:	mul    DWORD PTR [edx-0x41]
  40d56b:	in     al,dx
  40d56c:	imul   ebx,DWORD PTR [edi-0x77200afa],0x7
  40d573:	jnp    0x40d5b0
  40d575:	retf   
  40d576:	imul   ebp,DWORD PTR [edi-0x49],0x63
  40d57a:	jae    0x40d5b3
  40d57c:	je     0x40d584
  40d57e:	aaa    
  40d57f:	add    al,0x43
  40d581:	cmp    DWORD PTR [edi-0x5f8808fd],eax
  40d587:	in     al,dx
  40d588:	and    ebx,DWORD PTR [ebx-0x29]
  40d58b:	mov    bl,0x21
  40d58d:	mov    bh,cl
  40d58f:	in     al,dx
  40d590:	and    esp,DWORD PTR [ebx+0x7aff76c7]
  40d596:	out    0x83,eax
  40d598:	mov    DWORD PTR [eax-0x77bc8949],ecx
  40d59e:	cmp    esp,edi
	...
  40d5ac:	nop
  40d5ad:	xchg   DWORD PTR [edi],esp
  40d5af:	in     eax,dx
  40d5b0:	jno    0x40d53a
  40d5b2:	sbb    DWORD PTR [ecx+ebp*2+0x67dbf70e],ebp
  40d5b9:	or     BYTE PTR [eax-0x50f1a614],dl
  40d5bf:	fld    TBYTE PTR [edx]
  40d5c1:	in     eax,0x7f
  40d5c3:	in     al,dx
  40d5c4:	dec    ecx
  40d5c5:	push   cs
  40d5c6:	mov    bh,0xdb
  40d5c8:	xor    ah,ch
  40d5ca:	outs   dx,DWORD PTR ds:[esi]
  40d5cb:	in     al,dx
  40d5cc:	cmp    DWORD PTR [esi],ecx
  40d5ce:	mov    ds:0x5fe53adb,eax
  40d5d3:	in     al,dx
  40d5d4:	sub    DWORD PTR [esi],ecx
  40d5d6:	(bad)  [edx-0x1b]
  40d5da:	dec    edi
  40d5db:	in     al,dx
  40d5dc:	sbb    DWORD PTR [esi],ecx
  40d5de:	xchg   edi,eax
  40d5df:	fisttp DWORD PTR [edx-0x1b]
  40d5e2:	aas    
  40d5e3:	in     al,dx
  40d5e4:	sbb    eax,0xf6e6c56
  40d5e9:	popa   
  40d5ea:	push   es
  40d5eb:	mov    esp,0x41429ff3
  40d5f0:	mul    BYTE PTR [edx+0x6]
  40d5f3:	jmp    0xea2edc6f
  40d5f8:	push   0x1b156e53
  40d5fd:	and    al,BYTE PTR [esi]
  40d5ff:	push   cs
  40d600:	dec    ecx
  40d601:	xchg   edi,eax
  40d602:	in     eax,dx
  40d603:	adc    DWORD PTR [ecx],ebp
  40d605:	arpl   WORD PTR [esi],ax
  40d607:	repnz mov ah,0xe
  40d60a:	add    DWORD PTR [esi],ebp
  40d60c:	xor    DWORD PTR [ebx+0x6],edi
  40d60f:	jmp    0x40d614
	...
  40d61c:	hlt    
  40d61d:	bound  ebp,QWORD PTR [esi-0x7d]
  40d620:	adc    ah,BYTE PTR [edx]
  40d622:	push   es
  40d623:	fisub  WORD PTR [esi]
  40d625:	xchg   edi,eax
  40d626:	in     eax,dx
  40d627:	mov    ecx,0xe206633e
  40d62c:	mov    ah,0xe
  40d62e:	add    DWORD PTR [esi-0x16fc84ca],ebp
  40d634:	hlt    
  40d635:	(bad)  
  40d636:	stc    
  40d637:	cmp    al,0x3f
  40d639:	jg     0x40d6a9
  40d63b:	imul   ebx,DWORD PTR [eax+ecx*4-0x7],0xffffffda
  40d640:	xor    al,0xca
  40d642:	clc    
  40d643:	sahf   
  40d644:	dec    esp
  40d645:	mov    bl,dh
  40d647:	inc    edi
  40d648:	or     esp,DWORD PTR [eax+0x9]
  40d64b:	fs jl  0x40d5d4
  40d64e:	clc    
  40d64f:	xchg   BYTE PTR [esi+ecx*1-0x2a],bl
  40d653:	xchg   ecx,eax
  40d654:	cld    
  40d655:	in     al,0xf8
  40d657:	jbe    0x40d6a5
  40d659:	push   cs
  40d65a:	jmp    0xae66:0xf8e4b481
  40d661:	push   ds
  40d662:	idiv   BYTE PTR [ecx+0x568e0d3c]
  40d668:	or     al,0x7f
  40d66a:	jmp    0x58c8f2c0
  40d66f:	add    bh,al
  40d671:	mov    al,ds:0x86b0008
  40d676:	in     eax,dx
  40d677:	or     edx,0x21fffad2
  40d67d:	mov    ds:0xb881,al
	...
  40d68a:	add    BYTE PTR [eax],al
  40d68c:	adc    BYTE PTR [edx-0x9],bh
  40d68f:	add    dh,cl
  40d691:	bound  eax,QWORD PTR [esi]
  40d693:	mov    ecx,DWORD PTR [ebx+0x6ac00d56]
  40d699:	arpl   WORD PTR [esi+0x313de38],ax
  40d69f:	jmp    0x47373e
  40d6a4:	rcl    DWORD PTR [ebx],0x12
  40d6a7:	call   0x38e232
  40d6ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d6ad:	mov    ds:0x60460f71,al
  40d6b2:	push   esi
  40d6b3:	inc    ecx
  40d6b4:	mov    ?,WORD PTR [ecx+0x71]
  40d6b7:	adc    al,0xb6
  40d6b9:	hlt    
  40d6ba:	cmp    edi,0x6809a5b1
  40d6c0:	cwde   
  40d6c1:	xor    al,BYTE PTR [edi+0x0]
  40d6c4:	inc    ecx
  40d6c5:	adc    edx,DWORD PTR [edx]
  40d6c7:	call   0x38b9a5
  40d6cc:	out    0xe2,eax
  40d6ce:	mov    al,0xfe
  40d6d0:	cmp    DWORD PTR [ecx+0x60],0x6624f3e
  40d6d7:	(bad)  
  40d6d8:	fistp  DWORD PTR [edi+0x3271fffa]
  40d6de:	out    dx,al
  40d6df:	dec    edi
  40d6e1:	js     0x40d6da
  40d6e3:	(bad)  
  40d6e4:	retf   
  40d6e5:	lahf   
  40d6e6:	cli    
  40d6e7:	jmp    DWORD PTR [ecx+0x56b5f931]
  40d6ed:	jl     0x40d6e6
  40d6ef:	inc    DWORD PTR [eax]
	...
  40d6f9:	add    BYTE PTR [eax],al
  40d6fb:	add    dh,al
  40d6fd:	dec    esi
  40d6fe:	imul   eax,DWORD PTR [eax],0xfffffff7
  40d701:	jnp    0x40d77c
  40d703:	test   BYTE PTR [ebx+0x16],dl
  40d706:	in     al,dx
  40d707:	(bad)  
  40d708:	mov    bh,0x8c
  40d70a:	js     0x40d6f1
  40d70c:	idiv   BYTE PTR [ebx+0x4]
  40d70f:	lea    esp,[edx+0x3a]
  40d712:	out    dx,eax
  40d713:	(bad)  
  40d714:	lock dec esp
  40d716:	add    edx,DWORD PTR [eax]
  40d718:	idiv   DWORD PTR [ebx+0x4]
  40d71b:	(bad)  
  40d71d:	clc    
  40d71e:	add    al,0x0
  40d720:	idiv   esi
  40d722:	inc    edx
  40d723:	sub    al,0x27
  40d725:	in     al,0xe0
  40d727:	dec    esi
  40d728:	ss jl  0x40d707
  40d72b:	or     DWORD PTR [edx+0x7c],edx
  40d72e:	add    al,0xb
  40d730:	mov    bh,0x6
  40d732:	push   es
  40d733:	jmp    0x4551c7
  40d738:	jp     0x40d740
  40d73a:	sar    ch,0xa0
  40d73d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d73e:	jo     0x40d781
  40d740:	retf   
  40d741:	dec    ebx
  40d742:	pop    edx
  40d743:	inc    BYTE PTR [eax+0x3b]
  40d746:	add    ch,al
  40d748:	call   0x68bb:0xec00022f
  40d74f:	add    eax,0x5508e
  40d754:	div    DWORD PTR [eax+ebp*2+0x7e275f14]
  40d75b:	(bad)  
  40d75c:	pusha  
  40d75d:	nop
  40d75e:	les    esi,FWORD PTR [eax+eax*1+0x0]
	...
  40d76a:	add    BYTE PTR [eax],al
  40d76c:	call   0xb68878d4
  40d771:	jnp    0x40d760
  40d773:	je     0x40d758
  40d775:	repz out dx,eax
  40d777:	add    DWORD PTR [eax+0x4],0xffffffdb
  40d77b:	or     ebp,ecx
  40d77d:	jnp    0x40d76c
  40d77f:	je     0x40d78c
  40d781:	in     al,0xe3
  40d783:	sub    DWORD PTR [eax],0x62
  40d786:	pusha  
  40d787:	ja     0x40d714
  40d789:	mov    al,ds:0xd719e958
  40d78e:	mov    esp,0x4732a517
  40d793:	push   ds
  40d794:	jb     0x40d71b
  40d796:	aas    
  40d797:	push   esp
  40d798:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d799:	test   DWORD PTR [ecx-0x1cf107ed],esi
  40d79f:	call   0xf588330f
  40d7a4:	jmp    0x17e2:0x16dc1f84
  40d7ab:	jmp    0x42f0f7f
  40d7b0:	not    ebp
  40d7b2:	lods   al,BYTE PTR ds:[esi]
  40d7b3:	pop    ss
  40d7b4:	jle    0x40d794
  40d7b6:	cmp    ch,dl
  40d7b8:	rol    DWORD PTR [ebx+ebp*2-0x51fc70d9],0x3
  40d7c0:	hlt    
  40d7c1:	or     eax,0x3c85ba1
  40d7c6:	cs add al,0xa0
  40d7c9:	into   
  40d7ca:	xchg   edx,eax
  40d7cb:	jmp    0x59075c69
	...
  40d7dc:	and    ah,BYTE PTR [ebx-0x11]
  40d7df:	cld    
  40d7e0:	dec    eax
  40d7e1:	movlps xmm3,QWORD PTR [edx+eax*2+0x1b]
  40d7e6:	cs add al,0x78
  40d7e9:	push   cs
  40d7ea:	fcmovnu st,st(3)
  40d7ec:	jg     0x40d7cd
  40d7ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d7ef:	call   0xe99ba65d
  40d7f4:	popa   
  40d7f5:	test   BYTE PTR [esi],bh
  40d7f7:	fadd   QWORD PTR [edi-0x21]
  40d7fa:	(bad)
  40d7fe:	in     eax,dx
  40d7ff:	add    ebx,DWORD PTR [eax-0x3b]
  40d802:	push   ds
  40d803:	jmp    0xc7d832d3
  40d808:	xchg   edx,eax
  40d809:	test   BYTE PTR ds:0x859a4c76,al
  40d80f:	outs   dx,BYTE PTR ds:[esi]
  40d810:	pop    ds
  40d811:	jnp    0x40d7e4
  40d813:	jmp    0x51af3b0c
  40d818:	xchg   esp,eax
  40d819:	and    DWORD PTR [esi],eax
  40d81b:	push   esi
  40d81c:	popa   
  40d81d:	shl    bh,1
  40d81f:	dec    esi
  40d820:	pop    ds
  40d821:	jl     0x40d851
  40d823:	aam    0xf4
  40d825:	bound  ecx,QWORD PTR ds:0x6e348829
  40d82b:	je     0x40d859
  40d82d:	and    al,BYTE PTR [esi]
  40d82f:	cs pop ecx
  40d831:	outs   dx,DWORD PTR ds:[esi]
  40d832:	out    dx,al
  40d833:	stos   BYTE PTR es:[edi],al
  40d834:	pusha  
  40d835:	test   eax,edi
  40d837:	push   ds
  40d838:	mov    edi,ecx
  40d83a:	not    DWORD PTR [esi]
  40d83c:	fist   WORD PTR [ebx]
  40d83e:	out    dx,al
  40d83f:	bound  eax,QWORD PTR [eax]
	...
  40d849:	add    BYTE PTR [eax],al
  40d84b:	add    BYTE PTR [eax-0x7b],cl
  40d84e:	clc    
  40d84f:	cdq    
  40d850:	iret   
  40d851:	push   cs
  40d852:	push   ss
  40d853:	dec    BYTE PTR [edx+0x57]
  40d856:	push   esi
  40d857:	mul    BYTE PTR [edx]
  40d859:	pop    ebx
  40d85a:	out    dx,al
  40d85b:	pop    esp
  40d85c:	pushf  
  40d85d:	test   al,bh
  40d85f:	shl    DWORD PTR [ebx+eax*1-0x7],1
  40d863:	ficom  WORD PTR [eax-0x67284e32]
  40d869:	test   ch,ch
  40d86b:	pop    ds
  40d86c:	sub    al,0x63
  40d86e:	push   es
  40d86f:	push   0xffffff93
  40d871:	popa   
  40d872:	je     0x40d849
  40d874:	std    
  40d875:	out    dx,al
  40d876:	mov    cl,0xb7
  40d878:	pop    eax
  40d879:	test   BYTE PTR [ecx+ebx*4],al
  40d87c:	je     0x40d8f7
  40d87e:	add    ecx,DWORD PTR [edi]
  40d880:	jp     0x40d8cb
  40d882:	sub    BYTE PTR [edx],bl
  40d884:	out    0x60,al
  40d886:	in     eax,dx
  40d887:	sub    DWORD PTR [ebx-0xcd79a75],esi
  40d88d:	xor    DWORD PTR [edx-0x882fe00],0xffffffff
  40d894:	data16 lahf 
  40d896:	ins    BYTE PTR es:[edi],dx
  40d897:	add    BYTE PTR [esi],bl
  40d899:	das    
  40d89a:	outs   dx,BYTE PTR ds:[esi]
  40d89b:	add    edi,edi
  40d89d:	sbb    eax,0xd283ff06
  40d8a2:	cli    
  40d8a3:	(bad)  
  40d8a4:	mov    ecx,0x1e6cb6a6
  40d8a9:	pop    edi
  40d8aa:	push   esi
  40d8ab:	push   0x46fe0e
	...
  40d8bc:	mov    ecx,0xb9feb4d1
  40d8c1:	jnp    0x40d8a3
  40d8c3:	mov    eax,ds:0x5a0666ba
  40d8c8:	xchg   DWORD PTR [ebp-0x48],edi
  40d8cb:	jne    0x40d8b3
  40d8cd:	jge    0x40d8a5
  40d8cf:	jne    0x40d8a3
  40d8d1:	jge    0x40d8a0
  40d8d3:	je     0x40d88d
  40d8d5:	push   ds
  40d8d6:	mov    ebx,0xf9669f48
  40d8db:	jne    0x40d87f
  40d8dd:	sahf   
  40d8de:	mov    ch,0x83
  40d8e0:	mov    ecx,0xf2b5f789
  40d8e5:	mov    bh,dh
  40d8e7:	dec    DWORD PTR [esi-0x667c0262]
  40d8ed:	mov    DWORD PTR [eax-0x1],ecx
  40d8f0:	inc    ebx
  40d8f1:	push   edi
  40d8f2:	stc    
  40d8f3:	jne    0x40d88f
  40d8f5:	push   ss
  40d8f6:	stc    
  40d8f7:	jne    0x40d88f
  40d8f9:	sahf   
  40d8fa:	pusha  
  40d8fb:	cli    
  40d8fc:	mov    ecx,0xb9f1e089
  40d901:	mov    edi,esi
  40d903:	(bad)  
  40d904:	jecxz  0x40d8a9
  40d906:	cli    
  40d907:	call   FWORD PTR [ecx-0x254a06ea]
  40d90d:	xchg   edi,esi
  40d90f:	inc    DWORD PTR [esi-0x8ff92d5]
  40d915:	mov    eax,DWORD PTR [ebp+0x2606f8bf]
  40d91b:	inc    BYTE PTR [eax-0x17]
  40d91e:	fbstp  TBYTE PTR [eax+eax*1+0x0]
  40d925:	add    BYTE PTR [eax],al
  40d927:	add    BYTE PTR [eax],al
  40d929:	add    BYTE PTR [eax],al
  40d92b:	add    BYTE PTR [ebx+0x2],bh
  40d92e:	loopne 0x40d92e
  40d930:	pop    ds
  40d931:	pop    esp
  40d932:	pop    ebp
  40d933:	add    bh,dh
  40d935:	adc    BYTE PTR [esi-0x1ff6de49],dh
  40d93b:	out    0x36,eax
  40d93d:	mov    eax,ds:0x4e3efedf
  40d942:	adc    eax,0xd104a200
  40d947:	dec    BYTE PTR [edx-0x188b2089]
  40d94d:	inc    eax
  40d94e:	jbe    0x40d95c
  40d950:	lock mov esi,0x4f62e7fc
  40d956:	loopne 0x40d956
  40d958:	scas   al,BYTE PTR es:[edi]
  40d959:	dec    ebp
  40d95a:	icebp  
  40d95b:	inc    DWORD PTR [ebx-0xb]
  40d95e:	rol    BYTE PTR [edx-0xb7a445],1
  40d964:	inc    edx
  40d965:	mov    al,ds:0x687bbadc
  40d96a:	loopne 0x40d976
  40d96c:	mov    bh,0xf6
  40d96e:	add    eax,0xf14dbe5f
  40d973:	jmp    FWORD PTR [ecx+0x4de814f6]
  40d979:	pavgw  mm7,mm6
  40d97c:	in     al,dx
  40d97d:	retf   
  40d97e:	push   0xc3c33005
  40d983:	or     esi,edi
  40d985:	mov    al,0x68
  40d987:	or     al,0x8f
  40d989:	iret   
  40d98a:	jnp    0x40d98a
  40d98c:	js     0x40da02
  40d98e:	les    esi,FWORD PTR [eax+eax*1+0x0]
	...
  40d99a:	add    BYTE PTR [eax],al
  40d99c:	add    BYTE PTR [ecx+eiz*4],ah
  40d99f:	inc    edi
  40d9a0:	mov    dh,0x8b
  40d9a2:	loope  0x40da18
  40d9a4:	repz bound edx,QWORD PTR [edi-0x687e8bfe]
  40d9ab:	fsin   
  40d9ad:	or     al,0xef
  40d9af:	in     al,0xc3
  40d9b1:	outs   dx,BYTE PTR ds:[esi]
  40d9b2:	xchg   esi,ebp
  40d9b4:	jbe    0x40d937
  40d9b6:	jg     0x40da33
  40d9b8:	mov    bl,0x76
  40d9ba:	push   ss
  40d9bb:	mov    ah,0xd0
  40d9bd:	and    ebp,edi
  40d9bf:	in     al,0xa3
  40d9c1:	jbe    0x40d949
  40d9c3:	fidiv  WORD PTR [esi-0x7f]
  40d9c6:	pop    edi
  40d9c7:	jnp    0x40d97c
  40d9c9:	jp     0x40d9a1
  40d9cb:	fst    DWORD PTR [ebx]
  40d9cd:	(bad)  
  40d9ce:	out    dx,eax
  40d9cf:	(bad)  [edi+0x6fe54801]
  40d9d5:	daa    
  40d9d6:	inc    ebx
  40d9d7:	pop    esp
  40d9d8:	not    DWORD PTR [edx-0x11]
  40d9db:	add    ebx,edi
  40d9dd:	daa    
  40d9de:	mov    al,0xe4
  40d9e0:	jmp    0xe2347bcf
  40d9e5:	mul    BYTE PTR [esi]
  40d9e7:	(bad)  
  40d9e9:	in     al,0x17
  40d9eb:	in     eax,0xfd
  40d9ed:	mov    ds:0x638b7fdf,al
  40d9f2:	out    dx,eax
  40d9f3:	add    eax,eax
  40d9f5:	test   BYTE PTR [esi],0x5c
  40d9f8:	iret   
  40d9f9:	jle    0x40d9e9
  40d9fb:	add    esi,DWORD PTR [eax+0xdbf2f6]
	...
  40da09:	add    BYTE PTR [eax],al
  40da0b:	add    BYTE PTR [edx+0xd],ch
  40da0e:	out    dx,eax
  40da0f:	add    esi,DWORD PTR [ebx+edi*2-0x14]
  40da13:	hlt    
  40da14:	jb     0x40d9dd
  40da16:	out    dx,al
  40da17:	add    esi,edi
  40da19:	jmp    0x40da6c
  40da1b:	call   0xf5301a28
  40da20:	je     0x40d9fd
  40da22:	out    dx,al
  40da23:	add    esi,edi
  40da25:	or     bh,BYTE PTR [edx+0x63]
  40da28:	mov    dh,0x62
  40da2a:	push   es
  40da2b:	push   ds
  40da2c:	dec    ebx
  40da2d:	push   ds
  40da2e:	ins    DWORD PTR es:[edi],dx
  40da2f:	jmp    0x1e074628
  40da34:	retf   0x727f
  40da37:	mov    eax,ds:0xe9087fac
  40da3c:	hlt    
  40da3d:	jg     0x40dab1
  40da3f:	cdq    
  40da40:	pushf  
  40da41:	mov    edi,0xaf3284d
  40da46:	(bad)  
  40da47:	or     DWORD PTR [edx+eiz*2+0xca78151],esi
  40da4e:	push   es
  40da4f:	jmp    0xc1b29a73
  40da54:	adc    esi,edi
  40da56:	std    
  40da57:	shl    ebp,cl
  40da59:	or     al,bl
  40da5b:	leave  
  40da5c:	mov    ch,0x62
  40da5e:	push   ecx
  40da5f:	inc    ecx
  40da60:	test   DWORD PTR [esi+eax*1],ecx
  40da63:	jmp    0xb44752df
  40da68:	and    DWORD PTR [eax-0x92cc68e],eax
  40da6e:	icebp  
  40da6f:	inc    ecx
	...
  40da7c:	and    ah,ch
  40da7e:	clc    
  40da7f:	es inc esp
  40da81:	in     al,dx
  40da82:	aad    0x12
  40da84:	int    0xff
  40da86:	cmp    eax,esi
  40da88:	pop    ecx
  40da89:	fs shr bl,0x38
  40da8d:	and    eax,0x66481b0d
  40da92:	xchg   bl,al
  40da94:	hlt    
  40da95:	cmc    
  40da96:	out    0xf6,eax
  40da98:	sbb    dl,BYTE PTR [ebx+0x56]
  40da9b:	out    dx,al
  40da9c:	adc    ch,BYTE PTR [ebx-0x12]
  40da9f:	scas   al,BYTE PTR es:[edi]
  40daa0:	xchg   ebp,eax
  40daa1:	cmp    al,0xd1
  40daa4:	adc    al,0x1
  40daa6:	stc    
  40daa7:	(bad)  
  40daa8:	cwde   
  40daa9:	ins    DWORD PTR es:[edi],dx
  40daaa:	stc    
  40daab:	push   esp
  40daac:	mov    eax,DWORD PTR [eax-0x7cc1ff8e]
  40dab2:	jno    0x40dabc
  40dab4:	inc    esi
  40dab5:	fdivr  st,st(2)
  40dab7:	jmp    DWORD PTR [ecx-0x183fcc7e]
  40dabd:	xor    edi,0xffffffff
  40dac0:	xchg   ecx,eax
  40dac1:	cwde   
  40dac2:	stos   BYTE PTR es:[edi],al
  40dac3:	cmp    BYTE PTR [ecx+0x54],bl
  40dac6:	sub    DWORD PTR [eax+0x61],0xffffff83
  40daca:	idiv   edi
  40dacc:	jmp    0x40da68
  40dace:	loopne 0x40db25
  40dad0:	lock xor edi,0xffffffff
  40dad4:	sub    edx,DWORD PTR [ebx-0x7bdfb220]
  40dada:	idiv   edi
  40dadc:	sub    ebx,DWORD PTR [ebx+0x45e0]
	...
  40daea:	add    BYTE PTR [eax],al
  40daec:	adc    BYTE PTR [edi+esi*8-0x1f60d401],al
  40daf3:	cmp    eax,0xfff78420
  40daf8:	sub    esi,DWORD PTR [ebx-0x9]
  40dafb:	jne    0x40daff
  40dafd:	test   BYTE PTR [ecx+0x8],dh
  40db00:	inc    esi
  40db01:	adc    eax,0x2221fff8
  40db06:	iret   
  40db07:	ret    0x62c2
  40db0a:	push   ebx
  40db0b:	mov    eax,DWORD PTR [edx]
  40db0d:	out    0xc4,al
  40db0f:	call   0xff52f705
  40db14:	imul   esi,DWORD PTR [edx-0x20],0xffffff8d
  40db18:	je     0x40db7c
  40db1a:	push   es
  40db1b:	or     ecx,DWORD PTR [esi]
  40db1d:	sbb    edx,DWORD PTR [ecx+0x6a]
  40db20:	sahf   
  40db21:	or     dl,bl
  40db23:	pusha  
  40db24:	pop    edi
  40db25:	(bad)  
  40db26:	stc    
  40db27:	jne    0x40dae7
  40db29:	xor    DWORD PTR [ecx+0xc],0xff857dc6
  40db30:	mov    cl,0x6d
  40db32:	(bad)  
  40db33:	je     0x40db2c
  40db35:	dec    edx
  40db36:	xor    dl,BYTE PTR [eax-0x71]
  40db39:	ret    0xfe8b
  40db3c:	js     0x40dbaf
  40db3e:	les    esi,FWORD PTR [ebx+0x26]
  40db41:	repz dec ebp
  40db43:	call   0x422d6d25
  40db48:	jne    0x40db17
  40db4a:	jecxz  0x40db56
  40db4c:	aaa    
  40db4d:	pusha  
  40db4e:	stc    
  40db4f:	inc    BYTE PTR [eax]
	...
  40db59:	add    BYTE PTR [eax],al
  40db5b:	add    dl,cl
  40db5d:	arpl   WORD PTR [edx],si
  40db5f:	call   0xff24e68b
  40db64:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40db65:	in     al,dx
  40db66:	pop    ebp
  40db67:	call   0x89ec013
  40db6c:	pop    ds
  40db6d:	xchg   ecx,eax
  40db6e:	out    0xfe,al
  40db70:	sub    ah,ah
  40db72:	(bad)  
  40db73:	jl     0x40db95
  40db75:	or     eax,0x140f74e4
  40db7a:	sar    BYTE PTR [eax+edx*1+0x1d],0xed
  40db7f:	mov    ebp,0x67e4148a
  40db84:	test   DWORD PTR [ebx+0x310f0004],0xf2f0ff66
  40db8e:	dec    ebp
  40db8f:	clc    
  40db90:	jp     0x40db60
  40db92:	fmul   DWORD PTR [edi-0x20]
  40db95:	mov    dh,0xf4
  40db97:	(bad)  
  40db98:	bound  edi,QWORD PTR [eax-0x14]
  40db9b:	rcr    DWORD PTR [esi-0x74],cl
  40db9e:	add    al,0xb
  40dba0:	mov    bh,0xde
  40dba2:	push   esp
  40dba3:	(bad)  
  40dba4:	cmp    bl,BYTE PTR [ebp+eax*1+0x0]
  40dba8:	test   DWORD PTR [ebx+0x7cab44cb],0xe1f7000e
  40dbb2:	add    al,0x6a
  40dbb4:	mul    ecx
  40dbb6:	add    al,0x6a
  40dbb8:	mul    DWORD PTR [edx+0x72]
  40dbbb:	inc    edi
  40dbbc:	mov    edx,DWORD PTR [edx]
  40dbbe:	fcom   DWORD PTR [edi+0x0]
	...
  40dbc9:	add    BYTE PTR [eax],al
  40dbcb:	add    BYTE PTR [edi-0x7e2ba683],cl
  40dbd1:	test   edx,0xef0b4aec
  40dbd7:	add    edi,esp
  40dbd9:	mov    ds:0x385c0632,al
  40dbde:	inc    edi
  40dbdf:	lahf   
  40dbe0:	mov    eax,0xe3e0ef23
  40dbe5:	push   edx
  40dbe6:	xchg   edi,eax
  40dbe7:	push   es
  40dbe8:	jbe    0x40dc67
  40dbea:	xchg   edi,eax
  40dbeb:	loope  0x40dbb0
  40dbed:	jp     0x40dc2d
  40dbef:	in     al,dx
  40dbf0:	mov    bl,0xe3
  40dbf2:	xchg   ecx,esp
  40dbf4:	outs   dx,DWORD PTR ds:[esi]
  40dbf5:	daa    
  40dbf6:	xchg   ebx,eax
  40dbf7:	loope  0x40dba4
  40dbf9:	pop    edx
  40dbfa:	js     0x40dc53
  40dbfc:	add    edi,DWORD PTR [esi-0x7]
  40dbff:	out    dx,eax
  40dc00:	and    edi,esi
  40dc02:	(bad)  
  40dc04:	mov    ds:0x11fb576a,eax
  40dc09:	jge    0x40dc62
  40dc0b:	loope  0x40db90
  40dc0d:	mov    es,WORD PTR [esi+0x1d]
  40dc10:	cmp    BYTE PTR [ebp+0x47],0xe1
  40dc14:	mov    bl,0x72
  40dc16:	push   ebx
  40dc17:	xor    ecx,0x4eec3af6
  40dc1d:	or     ch,bh
  40dc1f:	add    esp,eax
  40dc21:	div    BYTE PTR [esi]
  40dc23:	in     al,dx
  40dc24:	adc    bh,dh
  40dc26:	pop    ds
  40dc27:	loope  0x40dbe8
  40dc29:	mov    eax,ds:0xe82203f2
  40dc2e:	add    al,BYTE PTR [ebx+0x0]
	...
  40dc3c:	mov    ah,0x77
  40dc3e:	or     cl,ah
  40dc40:	mov    ecx,0xdb6def09
  40dc45:	jnp    0x40dcb8
  40dc47:	or     ebx,DWORD PTR [edi-0x688cf9da]
  40dc4d:	jge    0x40dbdd
  40dc4f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dc50:	mov    eax,0x149102a5
  40dc55:	and    al,BYTE PTR [esi]
  40dc57:	jmp    0x64473f50
  40dc5c:	jns    0x40dcd3
  40dc5e:	test   esi,0xed6e2c97
  40dc64:	cmc    
  40dc65:	bound  eax,QWORD PTR [esi]
  40dc67:	shl    DWORD PTR [edi-0x3316f9fc],1
  40dc6d:	repz data16 sub bl,dh
  40dc71:	or     ch,BYTE PTR [ecx+0x8]
  40dc74:	mov    ah,0x62
  40dc76:	outs   dx,BYTE PTR ds:[esi]
  40dc77:	jo     0x40dc4e
  40dc79:	and    DWORD PTR [esi],eax
  40dc7b:	xchg   esi,eax
  40dc7c:	jmp    0xf3692a02
  40dc81:	jnp    0x40dcf5
  40dc83:	icebp  
  40dc84:	sbb    al,0xc4
  40dc86:	idiv   DWORD PTR [esi+0x17]
  40dc89:	add    al,0x71
  40dc8b:	or     BYTE PTR [edx+eiz*2+0x2195fe6e],dh
  40dc92:	push   es
  40dc93:	sar    DWORD PTR [ebp+0x3],1
  40dc96:	inc    edi
  40dc97:	jmp    0xe9473d38
  40dc9c:	je     0x40dd1b
  40dc9e:	jb     0x40dc81
	...
  40dcac:	or     al,0xe8
  40dcae:	test   DWORD PTR [esi-0x29],0xd63682ee
  40dcb5:	jl     0x40dcaf
  40dcb7:	cdq    
  40dcb8:	int3   
  40dcb9:	adc    ebp,DWORD PTR [esi-0x17]
  40dcbc:	hlt    
  40dcbd:	jnp    0x40dd31
  40dcbf:	and    eax,0x110df6d7
  40dcc4:	leave  
  40dcc5:	stc    
  40dcc6:	clc    
  40dcc7:	push   ss
  40dcc8:	lods   eax,DWORD PTR ds:[esi]
  40dcc9:	mov    eax,ds:0xe801e901
  40dcce:	jmp    0xf4e4fbd3
  40dcd3:	(bad)  
  40dcd4:	test   eax,0x74006e9b
  40dcd9:	inc    esp
  40dcda:	stc    
  40dcdb:	jne    0x40dc73
  40dcdd:	xchg   DWORD PTR [edx-0x72646687],edi
  40dce3:	inc    ebp
  40dce4:	stos   BYTE PTR es:[edi],al
  40dce5:	or     BYTE PTR [eax+ebp*8],bl
  40dce8:	inc    edx
  40dce9:	out    0xf7,al
  40dceb:	call   DWORD PTR [ebp-0x39db8b61]
  40dcf1:	adc    esp,DWORD PTR [edi+0x41]
  40dcf4:	pop    esi
  40dcf5:	das    
  40dcf6:	out    dx,al
  40dcf7:	pusha  
  40dcf8:	into   
  40dcf9:	fwait
  40dcfa:	not    DWORD PTR [eax-0x4a]
  40dcfd:	pushw  ss
  40dcff:	out    dx,eax
  40dd00:	fmul   DWORD PTR [esi]
  40dd02:	mov    ebp,0x56671f61
  40dd07:	jmp    ebx
  40dd09:	outs   dx,BYTE PTR ds:[esi]
  40dd0a:	out    dx,al
  40dd0b:	dec    ebx
  40dd0c:	mov    bl,0x9b
  40dd0e:	imul   eax
	...
  40dd1c:	adc    al,BYTE PTR [ebx]
  40dd1e:	stc    
  40dd1f:	call   DWORD PTR [ecx+0x69]
  40dd22:	scas   al,BYTE PTR es:[edi]
  40dd23:	pusha  
  40dd24:	iret   
  40dd25:	popw   es
  40dd27:	add    BYTE PTR [esi],cl
  40dd29:	pop    edi
  40dd2a:	mov    eax,DWORD PTR [ebp-0x8634f]
  40dd30:	dec    esi
  40dd31:	pop    es
  40dd32:	add    al,BYTE PTR [ecx]
  40dd34:	push   cs
  40dd35:	pop    edi
  40dd36:	out    dx,al
  40dd37:	stc    
  40dd38:	xor    DWORD PTR [edi+0x6],ebx
  40dd3b:	push   0x46ffb1
  40dd40:	(bad)  
  40dd41:	or     DWORD PTR [edi+0x41],esp
  40dd44:	into   
  40dd45:	push   cs
  40dd46:	(bad)  
  40dd47:	popa   
  40dd48:	(bad)  
  40dd49:	data16 stc 
  40dd4b:	xor    eax,0x4726ff
  40dd50:	jmp    0xf828eb70
  40dd55:	pop    ebp
  40dd56:	out    0xfe,eax
  40dd58:	mov    eax,0x36614fe4
  40dd5d:	mov    WORD PTR [edi+ebp*2+0x16],gs
  40dd61:	retf   
  40dd62:	add    al,0x68
  40dd64:	outs   dx,BYTE PTR ds:[esi]
  40dd65:	jmp    0x40dda8
  40dd67:	add    BYTE PTR [edi],cl
  40dd69:	mov    es,WORD PTR [eax+eax*1]
  40dd6c:	ja     0x40dcef
  40dd6e:	pop    ebp
  40dd6f:	or     BYTE PTR [edi-0x7f011a4e],bl
  40dd75:	dec    DWORD PTR [ebp-0x2856860a]
  40dd7b:	dec    edi
  40dd7c:	pop    edi
  40dd7d:	out    dx,al
  40dd7e:	pop    edi
	...
  40dd8b:	add    bh,dh
  40dd8d:	mov    eax,0x3760fc5d
  40dd92:	or     ch,al
  40dd94:	shl    BYTE PTR [edx],1
  40dd96:	fsin   
  40dd98:	ds into 
  40dd9a:	add    BYTE PTR [eax],al
  40dd9c:	mov    ds:0x3b80e8f4,al
  40dda1:	fcomp  st(2)
  40dda3:	(bad)  
  40dda4:	cmp    BYTE PTR [esi+0x2],ah
  40dda7:	push   0xffffffd9
  40dda9:	loopne 0x40de08
  40ddab:	or     BYTE PTR [edi],bl
  40ddad:	je     0x40de08
  40ddaf:	jmp    DWORD PTR [eax]
  40ddb1:	add    ecx,DWORD PTR [esi-0x4]
  40ddb4:	xor    BYTE PTR [edi-0x54],bh
  40ddb7:	pop    edi
  40ddb8:	mov    dh,0x8b
  40ddba:	add    al,0x0
  40ddbc:	test   DWORD PTR [ebx+0x12088495],0xa3a7fed8
  40ddc6:	add    BYTE PTR [ecx],al
  40ddc8:	test   DWORD PTR [ebx-0x73af8e14],0xaac96804
  40ddd2:	inc    ecx
  40ddd3:	add    BYTE PTR [edi+0x58],cl
  40ddd6:	bound  eax,QWORD PTR [ecx-0x9]
  40ddd9:	bound  edx,QWORD PTR [edi-0x10dba874]
  40dddf:	fimul  WORD PTR [ebx]
  40dde1:	test   BYTE PTR [esi-0x6e8608bc],ah
  40dde7:	or     ebx,DWORD PTR [edi-0x5621fdf3]
  40dded:	or     dl,BYTE PTR [ecx]
  40ddef:	add    BYTE PTR fs:[eax],al
	...
  40ddfa:	add    BYTE PTR [eax],al
  40ddfc:	arpl   WORD PTR ss:[edi-0x10dbe831],ax
  40de03:	imul   edi,DWORD PTR [esi+0x3],0x2e
  40de07:	add    al,0x1f
  40de09:	gs out dx,eax
  40de0b:	add    esi,DWORD PTR [edi+0x79]
  40de0e:	pop    ecx
  40de0f:	or     al,0x8f
  40de11:	sub    edx,ecx
  40de13:	fnsave [ecx-0x19]
  40de16:	imul   edx,ebp,0x34b7796a
  40de1c:	dec    edi
  40de1d:	pop    ebp
  40de1e:	dec    eax
  40de1f:	add    al,0xf7
  40de21:	jns    0x40de54
  40de23:	loopne 0x40de76
  40de25:	out    dx,eax
  40de26:	imul   bl
  40de28:	sub    dl,bh
  40de2a:	xchg   edi,eax
  40de2b:	(bad)  [edi]
  40de2d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40de2e:	jmp    0x3483:0x7aeda203
  40de35:	outs   dx,BYTE PTR ds:[esi]
  40de36:	sbb    ch,0x29
  40de39:	or     al,0xef
  40de3b:	imul   ebx,eax,0xf0bf979
  40de41:	jecxz  0x40de39
  40de43:	fcom   QWORD PTR [ecx]
  40de45:	jmp    0x40ddf0
  40de47:	fbstp  TBYTE PTR [ecx]
  40de49:	pop    edi
  40de4a:	xchg   edi,eax
  40de4b:	fs mov dh,0x62
  40de4e:	out    dx,eax
  40de4f:	add    esi,edi
  40de51:	bound  ebx,QWORD PTR [edx-0x79]
  40de54:	jmp    0x391e1dd2
  40de59:	or     esp,ebx
  40de5b:	add    dh,bh
  40de5d:	bound  eax,QWORD PTR [esi]
  40de5f:	inc    ecx
	...
  40de6c:	into   
  40de6d:	inc    BYTE PTR ds:0x66735ce9
  40de73:	test   al,0xf4
  40de75:	or     ch,ah
  40de77:	mov    BYTE PTR ds:0x54606e63,dh
  40de7d:	and    al,BYTE PTR [esi]
  40de7f:	push   cs
  40de80:	or     BYTE PTR [edx+0x77f4a84d],al
  40de86:	jb     0x40de79
  40de88:	mov    WORD PTR [ecx+edi*8-0x9ff440a],es
  40de8f:	mov    BYTE PTR ds:0x15d36e63,dh
  40de95:	and    al,BYTE PTR [esi]
  40de97:	push   ecx
  40de98:	ins    BYTE PTR es:[edi],dx
  40de99:	add    eax,DWORD PTR [edi-0x17]
  40de9c:	or     al,0x65
  40de9e:	push   es
  40de9f:	jmp    0xf1b35818
  40dea4:	pop    esp
  40dea5:	mov    al,ds:0xe743bef9
  40deaa:	cmp    BYTE PTR [esi+0x19f8793a],0x63
  40deb1:	aam    0x5f
  40deb3:	jmp    0x9db356ac
  40deb8:	and    ebp,edi
  40deba:	or     eax,0xf8fafd81
  40debf:	mov    ?,WORD PTR ds:0xe1e901a2
  40dec5:	jmp    0x40deb0
  40dec7:	push   0x76f77438
  40decc:	cmp    ecx,DWORD PTR [edx]
  40dece:	push   es
  40decf:	add    eax,DWORD PTR [eax]
	...
  40ded9:	add    BYTE PTR [eax],al
  40dedb:	add    bl,ah
  40dedd:	ja     0x40df51
  40dedf:	icebp  
  40dee0:	sbb    al,0x7a
  40dee2:	jo     0x40df42
  40dee4:	and    ebp,ebx
  40dee6:	inc    edx
  40dee7:	push   ebp
  40dee8:	xor    ebx,DWORD PTR [edi-0x52]
  40deeb:	leave  
  40deec:	xor    eax,0xde000663
  40def1:	arpl   WORD PTR [esi],ax
  40def3:	lea    ebx,[ebx-0x71]
  40def6:	cli    
  40def7:	jmp    DWORD PTR [ecx]
  40def9:	xor    al,0x6e
  40defb:	add    al,0xdf
  40defd:	arpl   WORD PTR [esi],ax
  40deff:	call   0x46dc7e
  40df04:	imul   sp,WORD PTR [ecx+eax*2-0x32],0xb
  40df0a:	push   es
  40df0b:	bound  ebx,QWORD PTR [edi+0x63]
  40df0e:	outs   dx,BYTE PTR ds:[esi]
  40df0f:	mov    DWORD PTR [edi+0x24],edi
  40df12:	push   es
  40df13:	jmp    FWORD PTR [ebx-0x7c]
  40df16:	inc    eax
  40df17:	inc    ecx
  40df18:	mov    ss,WORD PTR [esi+0x38f60871]
  40df1e:	cli    
  40df1f:	call   DWORD PTR [ecx-0x309df1fa]
  40df25:	pop    esi
  40df26:	outs   dx,BYTE PTR ds:[esi]
  40df27:	add    BYTE PTR [esi+ebx*1],ch
  40df2a:	push   es
  40df2b:	push   0x46fdd7
  40df30:	(bad)  
  40df31:	pusha  
  40df32:	push   es
  40df33:	add    dh,cl
  40df35:	fwait
  40df36:	jno    0x40df40
  40df38:	ss sbb eax,0xe9a1fffa
  40df3e:	xor    edi,0x0
	...
  40df4c:	nop
  40df4d:	fwait
  40df4e:	not    DWORD PTR [eax+0x66]
  40df51:	imul   esp,DWORD PTR [eax+0x0],0xfc719c4e
  40df58:	adc    DWORD PTR [ecx],0x138ce80e
  40df5e:	stc    
  40df5f:	jmp    DWORD PTR [edi-0x60]
  40df62:	add    al,0x0
  40df64:	sti    
  40df65:	out    0xec,eax
  40df67:	sbb    DWORD PTR [edx-0x66],0x6e
  40df6b:	add    BYTE PTR [esi+eax*2],ah
  40df6e:	stc    
  40df6f:	jne    0x40df77
  40df71:	mov    esi,DWORD PTR [edx+0x77]
  40df74:	not    DWORD PTR [eax]
  40df76:	fisttp QWORD PTR [eax+0x68283a]
  40df7c:	pop    edi
  40df7d:	dec    edi
  40df7e:	pusha  
  40df7f:	inc    ecx
  40df80:	not    DWORD PTR [ebx-0x73c99e09]
  40df86:	(bad)  [esi+edx*8]
  40df89:	les    eax,FWORD PTR [ecx+0x0]
  40df8c:	fild   WORD PTR [eax+0x71c0ff5d]
  40df92:	les    esi,FWORD PTR [ebx-0x22]
  40df95:	mov    ebx,0x74f7006c
  40df9a:	sahf   
  40df9b:	addr16 jmp 0x5575:0x470041e9
  40dfa3:	or     BYTE PTR [edi-0x6f015d92],cl
  40dfa9:	fs add eax,0x6a7d887a
	...
  40dfbb:	add    BYTE PTR [edi],cl
  40dfbd:	push   eax
  40dfbe:	pusha  
  40dfbf:	inc    ecx
  40dfc0:	mul    DWORD PTR [ebx]
  40dfc2:	stc    
  40dfc3:	popa   
  40dfc4:	mov    dh,0x8b
  40dfc6:	(bad)  [esi+edx*2]
  40dfc9:	xor    al,0x43
  40dfcb:	add    BYTE PTR [edi+0x74],cl
  40dfce:	pop    ebp
  40dfcf:	call   FWORD PTR [eax-0x7f]
  40dfd2:	les    esi,FWORD PTR [ebx-0x12]
  40dfd5:	pop    ebx
  40dfd6:	push   0x0
  40dfd8:	test   esp,0x6a02679e
  40dfde:	inc    ebx
  40dfdf:	add    BYTE PTR [edi+0x1f0855cc],ah
  40dfe5:	ret    0xfea2
  40dfe8:	sub    ah,dl
  40dfea:	scas   eax,DWORD PTR es:[edi]
  40dfeb:	js     0x40e00d
  40dfed:	cmc    
  40dfee:	(bad)  [ebx+ebx*1-0x13]
  40dff2:	push   ebp
  40dff3:	or     BYTE PTR [edi],bl
  40dff5:	ds push ebp
  40dff7:	dec    DWORD PTR [eax]
  40dff9:	arpl   WORD PTR [esi],si
  40dffb:	(bad)
  40dffe:	mov    dl,0x8e
  40e000:	or     al,0xe2
  40e002:	sub    dl,bh
  40e004:	dec    edx
  40e005:	push   cs
  40e006:	lds    eax,FWORD PTR [ebx]
  40e008:	pop    ebp
  40e009:	dec    ecx
  40e00a:	inc    eax
  40e00b:	push   eax
  40e00c:	out    dx,eax
  40e00d:	mov    dl,BYTE PTR [esi+0x51]
  40e010:	fdiv   DWORD PTR [ebp+0x65]
  40e013:	inc    eax
  40e014:	ror    DWORD PTR [eax],cl
  40e016:	out    dx,eax
  40e017:	jmp    0x40dfe3
  40e019:	neg    DWORD PTR [edi]
  40e01b:	(bad)  
  40e01d:	mov    ds:0xfc92,al
	...
  40e02a:	add    BYTE PTR [eax],al
  40e02c:	sub    BYTE PTR [ebx],cl
  40e02e:	out    dx,eax
  40e02f:	add    esp,DWORD PTR [eax+0x154d86b4]
  40e035:	and    al,0xef
  40e037:	xor    esp,DWORD PTR [eax+0x18ebf6ef]
  40e03d:	shr    edi,0xd9
  40e040:	cwde   
  40e041:	jmp    0x40e0b8
  40e043:	fimul  DWORD PTR [ecx+0x2f5f19e9]
  40e049:	and    al,0xef
  40e04b:	mov    WORD PTR [ebx-0x8bcd8f5],?
  40e051:	loop   0x40e05a
  40e053:	add    al,0xe3
  40e055:	pop    ds
  40e056:	push   edi
  40e057:	xor    ebp,edx
  40e059:	and    ebp,edi
  40e05b:	xor    BYTE PTR [edi-0x7d],cl
  40e05e:	dec    ecx
  40e05f:	add    al,0xf7
  40e061:	imul   ebp,DWORD PTR [edi-0x68f317b0],0x9775740f
  40e06b:	xor    al,0xcf
  40e06d:	(bad)  
  40e06e:	out    dx,eax
  40e06f:	call   0x6665eae6
  40e074:	mov    dh,0x62
  40e076:	pop    ds
  40e077:	fldcw  WORD PTR [ebx+0x5543976a]
  40e07d:	jne    0x40e084
  40e07f:	jbe    0x40e0a4
  40e081:	sub    edi,DWORD PTR [edi+0x6e]
  40e084:	mov    BYTE PTR cs:[esi],al
  40e087:	scas   eax,DWORD PTR es:[edi]
  40e088:	je     0x40e0c1
  40e08a:	push   es
  40e08b:	aam    0x1a
  40e08d:	pop    ds
  40e08e:	cli    
  40e08f:	sbb    al,BYTE PTR [eax]
	...
  40e099:	add    BYTE PTR [eax],al
  40e09b:	add    BYTE PTR [ebx-0x31b10745],bh
  40e0a1:	jne    0x40e096
  40e0a3:	xchg   edi,eax
  40e0a4:	add    ebx,DWORD PTR [ebx+esi*2-0x7e]
  40e0a8:	mov    esi,0x4036f9ef
  40e0ad:	imul   ebp,esi,0xffffff87
  40e0b0:	and    eax,0xfec6f874
  40e0b5:	test   eax,0xdf4e5c3
  40e0ba:	lea    eax,ds:0xb7f9a07a
  40e0c0:	out    0x8,eax
  40e0c2:	push   es
  40e0c3:	xchg   ebx,eax
  40e0c4:	shl    DWORD PTR [ebx+0x72],cl
  40e0c7:	icebp  
  40e0c8:	mov    WORD PTR [esi],ds
  40e0ca:	jo     0x40e0c2
  40e0cc:	scas   eax,DWORD PTR es:[edi]
  40e0cd:	jmp    0x40e111
  40e0cf:	in     eax,dx
  40e0d0:	jnp    0x40e101
  40e0d2:	arpl   WORD PTR [ecx],si
  40e0d4:	xor    al,0x63
  40e0d6:	lea    ebx,[esp+ecx*1]
  40e0d9:	sub    eax,DWORD PTR [edi-0x17]
  40e0dc:	je     0x40e113
  40e0de:	push   es
  40e0df:	push   ebp
  40e0e0:	sub    BYTE PTR [ebx],cl
  40e0e2:	ins    BYTE PTR es:[edi],dx
  40e0e3:	dec    ebx
  40e0e4:	mov    ah,0x62
  40e0e6:	push   ecx
  40e0e7:	rcl    ebx,1
  40e0e9:	std    
  40e0ea:	add    eax,0x71a303e9
  40e0ef:	into   
  40e0f0:	push   es
  40e0f1:	mov    esi,DWORD PTR [eax+0x55751f6b]
  40e0f7:	adc    ebx,esi
  40e0f9:	(bad)  
  40e0fa:	jmp    0x64577d56
  40e0ff:	sub    BYTE PTR [eax],al
	...
  40e109:	add    BYTE PTR [eax],al
  40e10b:	add    bl,dh
  40e10d:	adc    bh,cl
  40e10f:	add    BYTE PTR [ebx],ah
  40e111:	push   0x9aafc3ee
  40e116:	imul   eax
  40e118:	pop    edx
  40e119:	sbb    cl,bh
  40e11b:	push   DWORD PTR [ebp+0x61]
  40e11e:	inc    eax
  40e11f:	sbb    al,0x5e
  40e122:	jae    0x40e11e
  40e124:	push   eax
  40e125:	mov    WORD PTR [ebx],?
  40e127:	rol    BYTE PTR [edi+0x39fff79a],0x8e
  40e12e:	stos   BYTE PTR es:[edi],al
  40e12f:	cmp    cl,dl
  40e131:	and    al,0xbd
  40e133:	jmp    DWORD PTR [ebx-0x298a0875]
  40e139:	xchg   DWORD PTR [eax],esp
  40e13b:	jbe    0x40e156
  40e13d:	fwait
  40e13e:	push   edi
  40e13f:	pop    esi
  40e140:	pop    es
  40e141:	sahf   
  40e142:	add    al,0x0
  40e144:	and    esi,0xffffffec
  40e147:	and    edx,0xffffff8b
  40e14a:	outs   dx,BYTE PTR ds:[esi]
  40e14b:	add    BYTE PTR [ebx+edi*1-0x7],dh
  40e14f:	jne    0x40e0f7
  40e151:	xchg   esi,ecx
  40e153:	jne    0x40e0ee
  40e155:	mov    ecx,DWORD PTR [ebp+0x6068a45]
  40e15b:	push   0xffffff9e
  40e15d:	pop    es
  40e15e:	jl     0x40e1c2
  40e160:	iret   
  40e161:	pop    esi
  40e162:	outs   dx,BYTE PTR ds:[esi]
  40e163:	add    BYTE PTR [esi-0xd1779a1],cl
  40e169:	pop    ss
  40e16a:	stc    
  40e16b:	call   DWORD PTR [ebp-0x61]
  40e16e:	je     0x40e18f
	...
  40e17c:	inc    BYTE PTR [esi-0x74667dbc]
  40e182:	dec    eax
  40e183:	push   0xbee95f5e
  40e188:	mov    dh,0xd
  40e18a:	fs inc ecx
  40e18c:	dec    esi
  40e18d:	das    
  40e18e:	stc    
  40e18f:	jne    0x40e1d7
  40e191:	xchg   DWORD PTR [eax-0x5f],ecx
  40e194:	test   esp,0x51cee7d0
  40e19a:	sar    esi,1
  40e19c:	and    BYTE PTR [esi-0x30],dh
  40e19f:	(bad)  
  40e1a0:	mov    ds:0x8acbec71,al
  40e1a5:	in     al,dx
  40e1a6:	ror    al,1
  40e1a8:	xor    eax,0x6c55047d
  40e1ad:	or     eax,0x8efbc385
  40e1b2:	add    al,0x6a
  40e1b4:	and    bl,BYTE PTR [ecx]
  40e1b6:	push   edi
  40e1b7:	or     bh,bl
  40e1b9:	mov    WORD PTR [ebp-0x1],ss
  40e1bc:	loopne 0x40e1b1
  40e1be:	inc    esi
  40e1bf:	cld    
  40e1c0:	dec    edi
  40e1c1:	jl     0x40e1c7
  40e1c3:	out    dx,eax
  40e1c4:	xchg   ecx,eax
  40e1c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e1c6:	mov    ah,BYTE PTR [ecx+0x36]
  40e1c9:	jl     0x40e237
  40e1cb:	ret    0xbb55
  40e1ce:	add    al,0xff
  40e1d0:	inc    edx
  40e1d1:	je     0x40e1bf
  40e1d3:	pop    edx
  40e1d4:	push   esi
  40e1d5:	pop    ecx
  40e1d6:	sar    esi,1
  40e1d8:	and    ah,BYTE PTR [eax-0x2f]
  40e1db:	je     0x40e1cc
  40e1dd:	push   ebx
  40e1de:	jae    0x40e254
	...
  40e1ec:	cwde   
  40e1ed:	jno    0x40e1b8
  40e1ef:	sar    ebx,0x7b
  40e1f2:	xor    eax,0xc5fd9b8b
  40e1f7:	sti    
  40e1f8:	or     eax,0x782e6e7c
  40e1fd:	pop    ss
  40e1fe:	or     ch,al
  40e200:	sub    cl,BYTE PTR [edi]
  40e202:	sar    esi,1
  40e204:	jle    0x40e24d
  40e206:	fisub  WORD PTR [edi-0x9]
  40e209:	jnp    0x40e1ea
  40e20b:	mov    ebp,0x4166becf
  40e210:	mul    DWORD PTR [ebx]
  40e212:	in     al,0x61
  40e214:	mov    dh,0x7b
  40e216:	iret   
  40e217:	je     0x40e208
  40e219:	bound  edx,QWORD PTR [edi-0x688d69dd]
  40e21f:	imul   esi,edi,0x62
  40e222:	adc    BYTE PTR [ebp+0x450c8a90],0xf7
  40e229:	cli    
  40e22a:	mov    WORD PTR [ecx-0x4a],fs
  40e22d:	bound  edi,QWORD PTR [eax+0x50]
  40e230:	(bad)  
  40e231:	jp     0x40e218
  40e233:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e234:	or     DWORD PTR [edx+0x67],esi
  40e237:	push   eax
  40e238:	add    esi,DWORD PTR [edx-0x27]
  40e23b:	or     ecx,DWORD PTR [edi]
  40e23d:	xor    dl,dl
  40e23f:	(bad)  
  40e240:	icebp  
  40e241:	fwait
  40e242:	sub    al,0xff
  40e244:	call   0x7628465f
  40e249:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e24a:	inc    edx
  40e24b:	mov    al,BYTE PTR [ebx+0x53]
  40e24e:	je     0x40e241
	...
  40e25c:	pop    esi
  40e25d:	arpl   WORD PTR [edx+0x40],sp
  40e260:	retf   
  40e261:	adc    ch,BYTE PTR [eax]
  40e263:	push   eax
  40e264:	out    dx,eax
  40e265:	cld    
  40e266:	out    dx,al
  40e267:	(bad)  
  40e268:	inc    ebx
  40e269:	push   ebx
  40e26a:	sbb    BYTE PTR [ecx],dh
  40e26c:	adc    ebp,eax
  40e26e:	cs push eax
  40e270:	rcr    ch,1
  40e272:	mov    cl,0xd7
  40e274:	jo     0x40e272
  40e276:	out    dx,al
  40e277:	imul   esi,edi,0xf701f7fa
  40e27d:	(bad)  
  40e27e:	lock dec edi
  40e280:	sti    
  40e281:	cld    
  40e282:	out    0xd5,eax
  40e284:	push   es
  40e285:	addr16 push ebp
  40e287:	add    al,0xd
  40e289:	arpl   di,dx
  40e28b:	mov    ebp,0x73ef62d6
  40e290:	imul   esi,edi,0x5e2ecca
  40e296:	out    dx,eax
  40e297:	add    ebp,DWORD PTR [esi]
  40e299:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e29a:	jmp    0x76c5:0x5ddaa03
  40e2a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e2a2:	stc    
  40e2a3:	bound  edx,QWORD PTR [eax]
  40e2a5:	push   edi
  40e2a6:	(bad)  
  40e2a7:	sti    
  40e2a8:	into   
  40e2a9:	bound  ecx,QWORD PTR [ebx-0x6deb0dc]
  40e2af:	sbb    al,0xff
  40e2b1:	jno    0x40e325
  40e2b3:	loope  0x40e243
  40e2b5:	(bad)  
  40e2b6:	stc    
  40e2b7:	cld    
  40e2b8:	or     BYTE PTR [eax+0x53],dh
  40e2bb:	rcl    DWORD PTR [ecx+0xce72b1],1
	...
  40e2c9:	add    BYTE PTR [eax],al
  40e2cb:	add    BYTE PTR [edi+0x16],bh
  40e2ce:	cli    
  40e2cf:	pop    ecx
  40e2d0:	lea    esp,[edx+0x6c]
  40e2d3:	jmp    0xe9455464
  40e2d8:	hlt    
  40e2d9:	outs   dx,DWORD PTR ds:[esi]
  40e2da:	jb     0x40e2d5
  40e2dc:	pop    esi
  40e2dd:	jo     0x40e2d7
  40e2df:	fneni(8087 only) 
  40e2e1:	cli    
  40e2e2:	add    eax,0x7e7af4d3
  40e2e7:	retf   
  40e2e8:	hlt    
  40e2e9:	bound  edx,QWORD PTR [esi-0x1290c7ca]
  40e2ef:	stc    
  40e2f0:	push   edi
  40e2f1:	arpl   WORD PTR [esi],ax
  40e2f3:	xor    BYTE PTR [ebp+0x7fb40660],dh
  40e2f9:	jl     0x40e27f
  40e2fb:	sub    eax,0x8c85198b
  40e300:	pushf  
  40e301:	jo     0x40e374
  40e303:	in     al,dx
  40e304:	jecxz  0x40e29f
  40e306:	ret    
  40e307:	aad    0xf4
  40e309:	fist   DWORD PTR [edx-0x23]
  40e30c:	jg     0x40e360
  40e30e:	mov    esp,DWORD PTR [esp+ebx*2-0x5c1693e0]
  40e315:	test   DWORD PTR [ecx],0x6c5ac1de
  40e31b:	jmp    0xce52da63
  40e320:	es pop ss
  40e322:	add    DWORD PTR [eax],0xffffff8e
  40e325:	and    DWORD PTR [edi+eax*8+0x1b],edx
  40e329:	retf   
  40e32a:	clc    
  40e32b:	call   FWORD PTR [esi+0x64]
  40e32e:	lea    edx,[ebp+0x0]
	...
  40e339:	add    BYTE PTR [eax],al
  40e33b:	add    dh,al
  40e33d:	ficom  DWORD PTR [esi]
  40e33f:	lea    ecx,[ebx]
  40e341:	retf   
  40e342:	dec    eax
  40e343:	(bad)  
  40e344:	(bad)  [esi-0x68d195b8]
  40e34a:	jno    0x40e304
  40e34c:	jno    0x40e380
  40e34e:	or     al,BYTE PTR [ebx+0x73f8caf3]
  40e354:	cmp    ebp,ecx
  40e356:	jns    0x40e318
  40e358:	and    DWORD PTR [eax],0x740bff12
  40e35e:	div    DWORD PTR [edi]
  40e360:	xchg   ecx,eax
  40e361:	and    BYTE PTR [edx],cl
  40e363:	dec    ebx
  40e365:	pop    ebx
  40e366:	stc    
  40e367:	push   ebp
  40e368:	out    0x96,al
  40e36a:	das    
  40e36b:	call   0x46e57e
  40e370:	dec    ebp
  40e371:	scas   eax,DWORD PTR es:[edi]
  40e372:	add    al,0xff
  40e374:	mov    ds:0x35e071d7,eax
  40e379:	int    0x8b
  40e37b:	push   ebp
  40e37c:	inc    esi
  40e37d:	fist   DWORD PTR [esi]
  40e37f:	call   FWORD PTR [ebx-0x35]
  40e382:	not    DWORD PTR [edx-0x5a]
  40e385:	ss iret 
  40e387:	ret    0x63aa
  40e38a:	push   ebx
  40e38b:	mov    esp,DWORD PTR [edx-0xf073b1f]
  40e391:	xchg   esi,eax
  40e392:	not    DWORD PTR [edi+0x5]
  40e395:	inc    ecx
  40e396:	push   ss
  40e397:	mov    ebp,DWORD PTR [eax+ebp*8-0x6c6f077f]
  40e39e:	not    DWORD PTR [eax+0x0]
	...
  40e3a9:	add    BYTE PTR [eax],al
  40e3ab:	add    BYTE PTR [edi+eiz*2],ah
  40e3ae:	stc    
  40e3af:	jne    0x40e417
  40e3b1:	or     eax,0xef7ff06
  40e3b6:	repnz inc ch
  40e3b9:	pop    ebp
  40e3ba:	(bad)  
  40e3bb:	mov    edi,0x84cd13e2
  40e3c0:	push   ebx
  40e3c1:	scas   eax,DWORD PTR es:[edi]
  40e3c2:	aam    0xfe
  40e3c4:	idiv   DWORD PTR [ecx+0x4]
  40e3c7:	add    BYTE PTR [esi+edx*1-0x36],ch
  40e3cb:	std    
  40e3cc:	cmp    al,cl
  40e3ce:	js     0x40e3e1
  40e3d0:	add    BYTE PTR [esi],0xd6
  40e3d3:	std    
  40e3d4:	sub    al,bl
  40e3d6:	xor    DWORD PTR [ebp-0x12c8686],ecx
  40e3dc:	sbb    BYTE PTR [ecx+0x58],cl
  40e3df:	adc    BYTE PTR [eax],dl
  40e3e1:	ss retf 0x8fd
  40e3e5:	clc    
  40e3e6:	aam    0x51
  40e3e8:	repz cld 
  40e3ea:	xchg   esi,eax
  40e3eb:	sti    
  40e3ec:	stc    
  40e3ed:	pop    es
  40e3ee:	aad    0xff
  40e3f0:	xchg   DWORD PTR fs:[si+0x14f7],edi
  40e3f6:	aad    0xfe
  40e3f8:	loopne 0x40e391
  40e3fa:	lock (bad) 
  40e3fc:	bound  ecx,QWORD PTR [ebx+edx*8-0x2c2afc8c]
  40e403:	je     0x40e404
  40e405:	and    ecx,DWORD PTR ds:0x813dc0ff
  40e40b:	(bad)  
  40e40c:	out    0x44,eax
  40e40e:	xchg   ebx,edi
	...
  40e41c:	mov    cl,0x4d
  40e41e:	aad    0x74
  40e420:	xchg   esp,eax
  40e421:	popa   
  40e422:	lods   eax,DWORD PTR ds:[esi]
  40e423:	mov    cl,BYTE PTR [edx-0x67012bac]
  40e429:	icebp  
  40e42a:	out    dx,eax
  40e42b:	dec    BYTE PTR [edx+0x64]
  40e42e:	aam    0xfe
  40e430:	mov    BYTE PTR [ebp+0x32],dh
  40e433:	or     BYTE PTR [eax],ah
  40e435:	inc    ebx
  40e436:	ror    BYTE PTR [edi],0xf7
  40e439:	bound  edi,QWORD PTR [edx]
  40e43b:	jg     0x40e499
  40e43d:	in     al,0xa2
  40e43f:	retf   
  40e440:	push   0x6e
  40e442:	iret   
  40e443:	cmp    ch,BYTE PTR [eax+ebx*1-0x25]
  40e447:	jle    0x40e44f
  40e449:	loopne 0x40e4b4
  40e44b:	retf   
  40e44c:	push   edx
  40e44d:	outs   dx,BYTE PTR ds:[esi]
  40e44e:	mov    bh,0x33
  40e450:	frstor [edx+0x45]
  40e453:	add    al,0x40
  40e455:	clc    
  40e456:	fcmovbe st,st(2)
  40e458:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e459:	sub    ch,BYTE PTR [edx-0x3d]
  40e45c:	stos   DWORD PTR es:[edi],eax
  40e45d:	add    BYTE PTR [eax-0x109cd4b8],ah
  40e463:	add    esi,edi
  40e465:	shl    BYTE PTR [ebx+0x78],cl
  40e468:	and    BYTE PTR [ebp+0x7f],ch
  40e46b:	sar    BYTE PTR [ebp+0x51],cl
  40e46e:	push   0x48
  40e470:	or     edx,DWORD PTR [ebx]
  40e472:	bound  ecx,QWORD PTR [eax-0x2d989304]
  40e478:	test   al,0xf8
  40e47a:	(bad)  
  40e47b:	shr    BYTE PTR [ebx+0xd2586a],cl
	...
  40e489:	add    BYTE PTR [eax],al
  40e48b:	add    cl,ch
  40e48d:	ins    DWORD PTR es:[edi],dx
  40e48e:	mov    esp,0xc9e170ff
  40e493:	iret   
  40e494:	fcomp  st(5)
  40e496:	mov    edx,0x3aaf8226
  40e49b:	ror    ecx,1
  40e49d:	ins    DWORD PTR es:[edi],dx
  40e49e:	pop    esi
  40e49f:	ror    BYTE PTR [ebx+0x53],cl
  40e4a2:	sub    BYTE PTR [eax-0x15],bl
  40e4a5:	ins    DWORD PTR es:[edi],dx
  40e4a6:	cdq    
  40e4a7:	sti    
  40e4a8:	dec    ecx
  40e4a9:	jnp    0x40e497
  40e4ab:	shr    BYTE PTR [ecx-0xf359493],cl
  40e4b1:	rol    BYTE PTR [edi],cl
  40e4b3:	inc    eax
  40e4b4:	fwait
  40e4b5:	sar    BYTE PTR [ecx-0x17],cl
  40e4b8:	cmp    BYTE PTR [ecx+0x47],0x7e
  40e4bc:	arpl   WORD PTR [edx+0x5],bp
  40e4bf:	mul    DWORD PTR [esi-0x5a247394]
  40e4c5:	mov    dh,0xfd
  40e4c7:	out    0x46,eax
  40e4c9:	ins    BYTE PTR es:[edi],dx
  40e4ca:	clc    
  40e4cb:	cmp    ebp,DWORD PTR [ebx+0xc]
  40e4ce:	iret   
  40e4cf:	stos   DWORD PTR es:[edi],eax
  40e4d0:	mul    DWORD PTR [edx+0x53]
  40e4d3:	bound  edx,QWORD PTR [edi+0x6c]
  40e4d6:	jb     0x40e4c9
  40e4d8:	daa    
  40e4d9:	neg    BYTE PTR ds:0xf8f113d1
  40e4df:	mov    dh,0x26
  40e4e1:	test   BYTE PTR [ecx],0xc1
  40e4e4:	fadd   DWORD PTR [ebx]
  40e4e6:	push   es
  40e4e7:	jmp    0xa9c57251
  40e4ec:	icebp  
  40e4ed:	adc    bh,cl
  40e4ef:	sbb    al,0x0
	...
  40e4f9:	add    BYTE PTR [eax],al
  40e4fb:	add    bh,dh
  40e4fd:	ins    DWORD PTR es:[edi],dx
  40e4fe:	jb     0x40e4f1
  40e500:	cmp    al,0x2e
  40e502:	je     0x40e48a
  40e504:	es ins BYTE PTR es:[edi],dx
  40e506:	jb     0x40e4dd
  40e508:	daa    
  40e509:	not    BYTE PTR ds:0xee4aa876
  40e50f:	mov    esi,0x30f86da2
  40e514:	mov    ecx,0x6bb40650
  40e519:	js     0x40e513
  40e51b:	(bad)  
  40e51d:	ins    DWORD PTR es:[edi],dx
  40e51e:	jb     0x40e511
  40e520:	mov    esp,0xa6467685
  40e525:	ins    DWORD PTR es:[edi],dx
  40e526:	jb     0x40e515
  40e528:	lods   al,BYTE PTR ds:[esi]
  40e529:	pusha  
  40e52a:	jmpw   0x822
  40e52e:	push   esi
  40e52f:	and    BYTE PTR cs:[edi-0x7],bl
  40e533:	pushf  
  40e534:	pushf  
  40e535:	test   BYTE PTR ds:0xf86dc79b,cl
  40e53b:	pushf  
  40e53c:	test   al,0x6d
  40e53e:	jb     0x40e539
  40e540:	(bad)  
  40e541:	neg    DWORD PTR ds:0x759ce600
  40e547:	dec    DWORD PTR [ecx-0x71eb3957]
  40e54d:	xor    eax,0x9b0fec8d
  40e552:	aam    0xf7
  40e554:	pop    ecx
  40e555:	xchg   ebx,eax
  40e556:	div    DWORD PTR [ebp-0xa]
  40e559:	jmp    0x40e4dc
  40e55b:	add    BYTE PTR [edx-0x6d],cl
  40e55e:	not    DWORD PTR [eax+0x0]
	...
  40e569:	add    BYTE PTR [eax],al
  40e56b:	add    BYTE PTR [ecx],ch
  40e56d:	adc    eax,0x9d51e80e
  40e572:	idiv   edi
  40e574:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e575:	data16 ins BYTE PTR es:[edi],dx
  40e577:	add    BYTE PTR [esi+0x4e000391],dh
  40e57d:	in     eax,dx
  40e57e:	add    DWORD PTR [eax],0x50f79356
  40e584:	add    al,0x92
  40e586:	div    DWORD PTR [ebp+0x1e]
  40e589:	push   cs
  40e58a:	push   es
  40e58b:	push   0xe
  40e58d:	mov    BYTE PTR [edx],bl
  40e58f:	pusha  
  40e590:	push   ds
  40e591:	pusha  
  40e592:	rol    DWORD PTR [ebp-0x87572],0x1e
  40e599:	pusha  
  40e59a:	push   es
  40e59b:	add    BYTE PTR [ecx-0x1b],dl
  40e59e:	hlt    
  40e59f:	neg    DWORD PTR [ecx-0x6d]
  40e5a2:	push   es
  40e5a3:	add    dh,bl
  40e5a5:	pop    edi
  40e5a6:	rol    DWORD PTR [ebp-0x874ba],0xce
  40e5ad:	pop    edi
  40e5ae:	push   es
  40e5af:	add    BYTE PTR [ecx],ah
  40e5b1:	in     eax,0xfc
  40e5b3:	test   DWORD PTR [ecx],0xcefff893
  40e5b9:	pop    edi
  40e5ba:	lea    edx,[ebp-0x5a]
  40e5bd:	out    dx,al
  40e5be:	push   ss
  40e5bf:	push   0xffffff9e
  40e5c1:	in     al,dx
  40e5c2:	xor    eax,0x50f79301
  40e5c8:	test   DWORD PTR [esi],0x5ca0eb80
  40e5ce:	(bad)  
  40e5cf:	dec    edi
	...
  40e5dc:	cmp    dh,0xdc
  40e5df:	test   BYTE PTR [eax+0xaff336c],0x8a
  40e5e6:	aad    0x74
  40e5e8:	jmp    0x40e666
  40e5ea:	push   edx
  40e5eb:	or     ch,bl
  40e5ed:	jns    0x40e5b6
  40e5ef:	je     0x40e600
  40e5f1:	lea    esi,[ebx]
  40e5f3:	inc    esp
  40e5f4:	je     0x40e5cc
  40e5f6:	fdecstp 
  40e5f8:	pop    eax
  40e5f9:	pushf  
  40e5fa:	add    DWORD PTR [edi],ecx
  40e5fc:	jnp    0x40e583
  40e5fe:	add    DWORD PTR [eax],eax
  40e600:	idiv   eax
  40e602:	xchg   esi,eax
  40e603:	jmp    0x40e64d
  40e605:	mov    ah,0xc8
  40e607:	(bad)  
  40e608:	jmp    0xf741df12
  40e60d:	jns    0x40e5ce
  40e60f:	test   BYTE PTR [ebx-0x2c],al
  40e612:	enter  0xf7fe,0x79
  40e616:	xlat   BYTE PTR ds:[ebx]
  40e617:	mov    ebp,0x4163ca8f
  40e61c:	div    esi
  40e61e:	mov    ?,edi
  40e620:	or     al,0xec
  40e622:	enter  0xf4f,0xbd
  40e626:	sub    BYTE PTR [eax],al
  40e628:	test   DWORD PTR [esi],0x393573c2
  40e62e:	(bad)  
  40e62f:	shl    eax,cl
  40e631:	or     ecx,ecx
  40e633:	add    bh,dh
  40e635:	and    BYTE PTR [eax+0x419cf467],cl
  40e63b:	add    BYTE PTR [edx+0xfc01f7],al
	...
  40e649:	add    BYTE PTR [eax],al
  40e64b:	add    al,cl
  40e64d:	sub    DWORD PTR [edx],esi
  40e64f:	call   0x45b7ee
  40e654:	jb     0x40e692
  40e656:	pop    esi
  40e657:	and    edi,DWORD PTR [eax-0x5e47959d]
  40e65d:	push   0x17
  40e65f:	add    dh,bh
  40e661:	jns    0x40e6b3
  40e663:	pop    esp
  40e664:	cld    
  40e665:	add    eax,0xe08203ae
  40e66a:	out    dx,al
  40e66b:	iret   
  40e66c:	mov    DWORD PTR [edx-0x62],ebp
  40e66f:	fstp   TBYTE PTR [edx+0xa]
  40e672:	out    dx,eax
  40e673:	add    esi,DWORD PTR [edx-0x5d]
  40e676:	xlat   BYTE PTR ds:[ebx]
  40e677:	mov    BYTE PTR [ebp-0x20fc109d],dl
  40e67d:	cmp    DWORD PTR [ebp+eax*2-0x9],ecx
  40e681:	xlat   BYTE PTR ds:[ebx]
  40e682:	imul   eax,DWORD PTR [ebx],0x33c76a5f
  40e688:	pop    edi
  40e689:	cld    
  40e68a:	dec    esi
  40e68b:	add    al,0xf7
  40e68d:	pop    ebp
  40e68e:	scas   eax,DWORD PTR es:[edi]
  40e68f:	push   edi
  40e690:	(bad)  
  40e691:	in     eax,0xf1
  40e693:	mov    ch,BYTE PTR [ebp+0x3ef23]
  40e699:	fild   QWORD PTR [ebp+0x3]
  40e69c:	mul    DWORD PTR [edx-0x68]
  40e69f:	cwde   
  40e6a0:	sbb    BYTE PTR [edx-0x71],dh
  40e6a3:	into   
  40e6a4:	imul   esp,eax,0x6a11d68e
  40e6aa:	jg     0x40e644
  40e6ac:	sbb    al,0x72
  40e6ae:	ja     0x40e67e
	...
  40e6bc:	jno    0x40e69e
  40e6be:	mov    dl,dh
  40e6c0:	stc    
  40e6c1:	imul   ebx,DWORD PTR [ecx-0x78],0xce5f71c8
  40e6c8:	cmp    ch,bh
  40e6ca:	in     eax,dx
  40e6cb:	pop    ecx
  40e6cc:	idiv   esp
  40e6ce:	out    dx,al
  40e6cf:	pop    ecx
  40e6d0:	idiv   esp
  40e6d2:	out    dx,al
  40e6d3:	cmp    BYTE PTR [ebx-0x7e],0x37
  40e6d7:	into   
  40e6d8:	leave  
  40e6d9:	adc    bh,BYTE PTR [eax]
  40e6db:	clc    
  40e6dc:	jge    0x40e6fb
  40e6de:	push   es
  40e6df:	test   al,0xf4
  40e6e1:	pop    ebp
  40e6e2:	(bad)  
  40e6e3:	mov    ch,0x39
  40e6e5:	push   0x72
  40e6e7:	std    
  40e6e8:	mov    ecx,0xb116ddae
  40e6ed:	push   0x70485cf8
  40e6f2:	clc    
  40e6f3:	push   cs
  40e6f4:	shr    esi,0x15
  40e6f7:	push   es
  40e6f8:	outs   dx,DWORD PTR ds:[esi]
  40e6f9:	xchg   ebp,eax
  40e6fa:	lock (bad) 
  40e6fc:	mov    dl,0x81
  40e6fe:	adc    eax,0xf868aaf7
  40e703:	xor    al,0xa0
  40e705:	jo     0x40e6ff
  40e707:	out    0x4b,al
  40e709:	sti    
  40e70a:	push   edi
  40e70b:	jmp    0xd65b6504
  40e710:	ror    BYTE PTR [esi-0x7],0x94
  40e714:	xor    esi,DWORD PTR [eax-0x8]
  40e717:	(bad)  
  40e718:	cmp    ch,BYTE PTR [esi+0x6832b6e9]
  40e71e:	clc    
  40e71f:	cmp    al,0x0
	...
  40e729:	add    BYTE PTR [eax],al
  40e72b:	add    BYTE PTR [ebx+0x68],al
  40e72e:	mov    dl,0x95
  40e730:	dec    edx
  40e731:	push   0x661191f8
  40e736:	clc    
  40e737:	sahf   
  40e738:	xor    ch,BYTE PTR [esi+0x682a9ee9]
  40e73e:	in     eax,dx
  40e73f:	or     edx,esp
  40e741:	bound  eax,QWORD PTR [esi]
  40e743:	mov    al,0x35
  40e745:	push   ebp
  40e746:	push   es
  40e747:	adc    al,0x7e
  40e749:	jge    0x40e6cf
  40e74b:	lods   eax,DWORD PTR ds:[esi]
  40e74c:	arpl   WORD PTR [edi],cx
  40e74e:	stc    
  40e74f:	hlt    
  40e750:	lock or BYTE PTR [esi+eax*8],0xf4
  40e755:	bound  ecx,QWORD PTR ds:0x585e4829
  40e75b:	and    BYTE PTR [ebp-0x24c7f9a4],dh
  40e761:	in     eax,0xc5
  40e763:	add    ah,bl
  40e765:	jmp    0x40e72f
  40e767:	lea    ebx,[ebx+0x1524888]
  40e76d:	adc    BYTE PTR [edx],cl
  40e76f:	call   0x38cf7b
  40e774:	lds    ebp,FWORD PTR [ebp-0x7615b273]
  40e77a:	push   cs
  40e77b:	ss xchg ecx,eax
  40e77d:	into   
  40e77e:	inc    esp
  40e77f:	sub    DWORD PTR [edx+0x5fd44365],edx
  40e785:	jecxz  0x40e784
  40e787:	adc    al,0xfc
  40e789:	xchg   esp,eax
  40e78a:	sub    esi,esi
  40e78c:	pop    ss
  40e78d:	adc    dh,dl
  40e78f:	jmp    0x40e791
	...
  40e799:	add    BYTE PTR [eax],al
  40e79b:	add    BYTE PTR [esi],dh
  40e79d:	dec    esi
  40e79e:	or     DWORD PTR [esi+0x50ea491a],esi
  40e7a4:	(bad)  
  40e7a5:	or     DWORD PTR [ebp+0x41],esp
  40e7a8:	dec    esi
  40e7a9:	jmp    0x874fbfef
  40e7ae:	or     BYTE PTR [edi+0x5e],bl
  40e7b1:	fs test esp,eax
  40e7b4:	push   edx
  40e7b5:	jmp    0x961fbffb
  40e7ba:	jno    0x40e78c
  40e7bc:	ss mov edx,0xed51ff72
  40e7c2:	inc    ecx
  40e7c3:	rcr    al,1
  40e7c5:	loope  0x40e7c1
  40e7c7:	adc    al,0xfc
  40e7c9:	mov    cl,0x85
  40e7cb:	gs dec edx
  40e7cd:	xchg   edi,eax
  40e7ce:	clc    
  40e7cf:	call   FWORD PTR [esi]
  40e7d1:	xchg   edi,eax
  40e7d2:	jno    0x40e7a8
  40e7d4:	out    0x9,al
  40e7d6:	gs inc ecx
  40e7d8:	push   cs
  40e7d9:	jmp    0x874fc01f
  40e7de:	fcomp  DWORD PTR [esi-0x22]
  40e7e1:	arpl   WORD PTR [ebp+0x41e8d2c4],ax
  40e7e7:	fdiv   st,st(7)
  40e7e9:	test   eax,0x21a774c9
  40e7ee:	lahf   
  40e7ef:	jne    0x40e7b9
  40e7f1:	and    BYTE PTR [esp+eax*2-0x59],bh
  40e7f5:	idiv   BYTE PTR [edi]
  40e7f7:	int3   
  40e7f8:	daa    
  40e7f9:	xor    DWORD PTR [eax-0x30],edx
  40e7fc:	pop    ds
  40e7fd:	stos   BYTE PTR es:[edi],al
  40e7fe:	gs inc ecx
	...
  40e80c:	test   DWORD PTR [eax+0x10],0x4bb2fe1
  40e813:	call   0xff0aae7a
  40e818:	cld    
  40e819:	cmp    edx,edi
  40e81b:	and    DWORD PTR [eax+0x79],0x4
  40e81f:	add    BYTE PTR [esi-0x42],ch
  40e822:	mov    esp,0x53dfa82
  40e827:	(bad)  
  40e829:	sti    
  40e82a:	add    al,0x0
  40e82c:	test   DWORD PTR [eax+0x3f4f0c56],0xaaf7002c
  40e836:	loope  0x40e7ba
  40e838:	aaa    
  40e839:	jnp    0x40e8b4
  40e83b:	inc    esp
  40e83c:	xchg   DWORD PTR [eax+0x3e700c56],esp
  40e842:	xchg   esi,eax
  40e843:	inc    dl
  40e845:	mov    ebp,0xb837447c
  40e84a:	push   esi
  40e84b:	enter  0x3678,0xc6
  40e84f:	(bad)  
  40e850:	mov    edx,0xf7000205
  40e855:	jns    0x40e8d6
  40e857:	cmp    al,0x4c
  40e859:	inc    esp
  40e85a:	inc    ebx
  40e85b:	add    bh,dh
  40e85d:	gs xor al,0x8d
  40e860:	mov    edx,0xf66a3221
  40e865:	arpl   WORD PTR [edx],ax
  40e867:	push   0xfffffff7
  40e869:	push   es
  40e86a:	inc    edi
  40e86b:	mov    al,0x47
  40e86d:	arpl   bp,dx
  40e86f:	add    eax,DWORD PTR [eax]
	...
  40e879:	add    BYTE PTR [eax],al
  40e87b:	add    BYTE PTR [edx+0x20],dh
  40e87e:	das    
  40e87f:	xor    al,0xd8
  40e881:	push   eax
  40e882:	xchg   esp,eax
  40e883:	aas    
  40e884:	ss arpl sp,sp
  40e887:	ret    
  40e888:	inc    esp
  40e889:	xor    DWORD PTR [ecx+ecx*2-0x7d],ebp
  40e88d:	arpl   WORD PTR [ebx-0x21178be9],si
  40e893:	add    ebp,DWORD PTR [ebx]
  40e895:	pop    ebx
  40e896:	xor    DWORD PTR fs:[edi],eax
  40e899:	std    
  40e89a:	daa    
  40e89b:	push   es
  40e89c:	loopne 0x40e900
  40e89e:	sbb    BYTE PTR [ecx-0x11],dl
  40e8a1:	gs cdq 
  40e8a3:	mov    edx,DWORD PTR [ecx+0x3cb4af0]
  40e8a9:	push   edi
  40e8aa:	xchg   edi,eax
  40e8ab:	push   es
  40e8ac:	div    DWORD PTR [ebp+0x38]
  40e8af:	fsub   QWORD PTR [edi+0x67]
  40e8b2:	out    dx,eax
  40e8b3:	retf   0xf071
  40e8b6:	sub    bl,ah
  40e8b8:	pop    edx
  40e8b9:	pop    es
  40e8ba:	out    dx,eax
  40e8bb:	add    esp,DWORD PTR [eax-0x10]
  40e8be:	mov    dh,0xdb
  40e8c0:	pop    edx
  40e8c1:	hlt    
  40e8c2:	iret   
  40e8c3:	retf   0xf051
  40e8c6:	mov    esi,0xbff442db
  40e8cb:	retf   0x9ba2
  40e8ce:	lods   al,BYTE PTR ds:[esi]
  40e8cf:	idiv   DWORD PTR [eax]
  40e8d1:	pcmpgtb mm2,mm7
  40e8d4:	jne    0x40e875
  40e8d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e8d7:	js     0x40e88c
  40e8d9:	ds pop sp
  40e8dc:	mov    eax,0x42e01
	...
  40e8e9:	add    BYTE PTR [eax],al
  40e8eb:	add    BYTE PTR [ebp-0x60fbfaa1],cl
  40e8f1:	sub    eax,0x7af7450c
  40e8f6:	mov    WORD PTR [eax],gs
  40e8f8:	mul    DWORD PTR [edx+0x62]
  40e8fb:	ret    
  40e8fc:	jmp    0xf4e9eedb
  40e901:	bound  eax,QWORD PTR [esi]
  40e903:	bound  esp,QWORD PTR [edi]
  40e905:	addr16 mov ebx,?
  40e908:	pop    edi
  40e909:	pop    ds
  40e90a:	(bad)  
  40e90b:	mov    ecx,0x56f9eead
  40e910:	or     al,BYTE PTR [edi-0x7d]
  40e913:	sub    ebp,ecx
  40e915:	fst    QWORD PTR [edi-0x7a9d0b17]
  40e91b:	mov    esp,0x6d0765ac
  40e920:	and    BYTE PTR [esi-0x8],ah
  40e923:	jmp    0xea1307dd
  40e928:	hlt    
  40e929:	bound  eax,QWORD PTR [esi]
  40e92b:	es aaa 
  40e92d:	mov    eax,DWORD PTR ds:0xc162f4e9
  40e933:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e934:	inc    esp
  40e935:	cmp    eax,0x9df4e906
  40e93a:	inc    edx
  40e93b:	sub    eax,0xe90662f4
  40e940:	icebp  
  40e941:	push   cs
  40e942:	(bad)  
  40e943:	bound  esp,QWORD PTR [edx-0x2a]
  40e946:	inc    edx
  40e947:	mov    ch,0x2b
  40e949:	fadd   DWORD PTR [edx-0x47]
  40e94c:	and    edi,ecx
  40e94e:	push   es
  40e94f:	(bad)  
	...
  40e95c:	shr    BYTE PTR [edx-0x8],0x3b
  40e960:	dec    edi
  40e961:	pop    eax
  40e962:	(bad)  
  40e963:	cmp    al,0x7
  40e965:	loop   0x40e9e1
  40e967:	lods   eax,DWORD PTR ds:[esi]
  40e968:	hlt    
  40e969:	out    dx,eax
  40e96a:	inc    edi
  40e96b:	push   0xffffffb8
  40e96d:	mov    es,WORD PTR ds:0x60fab535
  40e973:	or     dh,BYTE PTR [edx+eiz*2+0x7d6714f9]
  40e97a:	call   0xda3e4b3
  40e97f:	test   eax,0x6058a7
  40e984:	push   ecx
  40e985:	pop    esi
  40e986:	push   es
  40e987:	add    BYTE PTR [edi-0x1e1431db],al
  40e98d:	mov    ds:0x60dec841,eax
  40e992:	push   es
  40e993:	add    BYTE PTR [ecx+0x14],bl
  40e996:	into   
  40e997:	inc    ebx
  40e999:	mov    ah,0xf7
  40e99b:	jne    0x40e973
  40e99d:	mov    dl,ah
  40e99f:	std    
  40e9a0:	cmp    DWORD PTR [edx-0x791d8a09],ebx
  40e9a6:	ds pop ebp
  40e9a8:	into   
  40e9a9:	pusha  
  40e9aa:	test   DWORD PTR [ebp+0x6],edi
  40e9ad:	pop    edi
  40e9ae:	jb     0x40e9b8
  40e9b0:	fst    DWORD PTR [ebx]
  40e9b2:	fsubp  st(0),st
  40e9b4:	retf   0x63d
  40e9b7:	add    BYTE PTR ds:0xe6558beb,al
  40e9bd:	in     eax,0x16
  40e9bf:	inc    DWORD PTR [eax]
	...
  40e9c9:	add    BYTE PTR [eax],al
  40e9cb:	add    BYTE PTR [ebx-0x68],ah
  40e9ce:	not    DWORD PTR [edx-0x7a]
  40e9d1:	out    0x51,eax
  40e9d3:	cld    
  40e9d4:	add    eax,0x6a75f76d
  40e9d9:	fwait
  40e9da:	push   esi
  40e9db:	or     BYTE PTR [edi],dl
  40e9dd:	popf   
  40e9de:	add    al,0x0
  40e9e0:	and    esp,esi
  40e9e2:	in     al,dx
  40e9e3:	adc    DWORD PTR [edx-0x147cad80],0xffffffc5
  40e9ea:	arpl   WORD PTR [ecx+0x5e],ax
  40e9ed:	pusha  
  40e9ee:	jae    0x40ea0e
  40e9f0:	xchg   ecx,eax
  40e9f1:	gs stos DWORD PTR es:[edi],eax
  40e9f3:	arpl   WORD PTR [edi],cx
  40e9f5:	pop    edi
  40e9f6:	pop    es
  40e9f7:	add    BYTE PTR [esi],bl
  40e9f9:	pusha  
  40e9fa:	mov    eax,0x61fbdaf
  40e9ff:	jmp    0x40ea12
  40ea01:	add    al,bh
  40ea03:	es or  al,0xdf
  40ea06:	ret    0xf702
  40ea09:	push   ebx
  40ea0a:	cmp    DWORD PTR ds:0x82d34ef7,0xffffffc2
  40ea11:	hlt    
  40ea12:	cmp    DWORD PTR [ecx-0x9],eax
  40ea15:	jns    0x40ea14
  40ea17:	sub    esp,0x79
  40ea1a:	add    al,0x0
  40ea1c:	je     0x40e9d4
  40ea1e:	or     DWORD PTR [edx+0x36],0x730f047a
  40ea25:	adc    eax,DWORD PTR ds:0xfff8f700
  40ea2b:	mov    edx,0x4bb3c
	...
  40ea3c:	lock cmc 
  40ea3e:	jecxz  0x40ea3f
  40ea40:	mov    eax,0xb344c579
  40ea45:	jns    0x40ea4b
  40ea47:	add    bh,dh
  40ea49:	cmp    al,0x38
  40ea4b:	clc    
  40ea4c:	idiv   DWORD PTR [ecx+0x4]
  40ea4f:	add    BYTE PTR [edx-0x42],ch
  40ea52:	ror    BYTE PTR [edi-0x7e],0xb6
  40ea56:	int3   
  40ea57:	dec    edi
  40ea58:	sbb    eax,0x14f95c7a
  40ea5d:	mov    ebx,0xf8e2ff04
  40ea62:	cmp    DWORD PTR [ecx-0x9],eax
  40ea65:	add    ah,0xe
  40ea68:	jae    0x40ea95
  40ea6a:	add    eax,0x4ef8f700
  40ea6f:	clc    
  40ea70:	div    DWORD PTR [eax+edi*2-0x55]
  40ea74:	idiv   DWORD PTR [ecx+0x4]
  40ea77:	or     edx,0xffffff95
  40ea7a:	add    DWORD PTR [edi],ecx
  40ea7c:	jnp    0x40ea55
  40ea7e:	add    DWORD PTR [eax],eax
  40ea80:	div    eax
  40ea82:	push   esi
  40ea83:	cld    
  40ea84:	push   ds
  40ea85:	test   DWORD PTR [ecx],0x7d4bf700
  40ea8b:	xor    eax,0xec196220
  40ea90:	imul   ebx,DWORD PTR ds:0x468ac79f,0xfa034160
  40ea9a:	aaa    
  40ea9b:	arpl   WORD PTR [esi+0xed9762],si
	...
  40eaa9:	add    BYTE PTR [eax],al
  40eaab:	add    BYTE PTR [edx+eiz*2-0x192f4b11],bl
  40eab2:	lods   eax,DWORD PTR ds:[esi]
  40eab3:	add    bh,BYTE PTR [esi-0x58]
  40eab6:	lea    ebx,[eax+edx*4-0x3a]
  40eaba:	scas   al,BYTE PTR es:[edi]
  40eabb:	add    ebp,DWORD PTR [eax-0x58]
  40eabe:	inc    ecx
  40eabf:	mov    edi,0x3ee4f3b
  40eac4:	mul    DWORD PTR [edx+0x5a]
  40eac7:	inc    ecx
  40eac8:	iret   
  40eac9:	mov    bl,0xd3
  40eacb:	add    al,0x4d
  40eacd:	arpl   bx,dx
  40eacf:	add    eax,DWORD PTR [edx+0x1d344da8]
  40ead5:	arpl   WORD PTR [edx+0x41],bx
  40ead8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ead9:	mov    bl,0x20
  40eadb:	icebp  
  40eadc:	pop    ebp
  40eadd:	scas   al,BYTE PTR es:[edi]
  40eade:	scas   al,BYTE PTR es:[edi]
  40eadf:	add    edi,esp
  40eae1:	and    bl,BYTE PTR [edx-0x61f8be8]
  40eae7:	add    ecx,DWORD PTR [ebx]
  40eae9:	mov    al,BYTE PTR [ebp+0x5]
  40eaec:	mul    DWORD PTR [edx-0x13]
  40eaef:	cli    
  40eaf0:	mov    al,0xd7
  40eaf2:	xlat   BYTE PTR ds:[ebx]
  40eaf3:	(bad)  
  40eaf4:	jecxz  0x40eb60
  40eaf6:	call   0x5ba33a4b
  40eafb:	fcomp  DWORD PTR [ecx-0x27]
  40eafe:	cmc    
  40eaff:	pop    ebx
  40eb00:	sti    
  40eb01:	(bad)  
  40eb02:	rol    BYTE PTR [ebp-0x392be7b0],0x41
  40eb09:	bound  edi,QWORD PTR [ebx]
  40eb0b:	fcom   DWORD PTR [eax+0x3c]
  40eb0e:	and    al,0x4
	...
  40eb1c:	test   eax,0x5aefb606
  40eb22:	test   BYTE PTR [edi-0x5e861ae0],ah
  40eb28:	hlt    
  40eb29:	(bad)  
  40eb2a:	or     eax,0x762fa6a
  40eb2f:	ins    BYTE PTR es:[edi],dx
  40eb30:	mov    eax,ds:0x398ef861
  40eb35:	xlat   BYTE PTR ds:[ebx]
  40eb36:	cli    
  40eb37:	xchg   BYTE PTR [edi],al
  40eb39:	jmp    0xc13c1389
  40eb3e:	int    0xab
  40eb40:	call   0xc8a33ea6
  40eb45:	in     al,0xc2
  40eb47:	popa   
  40eb48:	arpl   WORD PTR ds:[esi+ecx*1-0x48],bp
  40eb4d:	(bad)  
  40eb4e:	push   cs
  40eb4f:	inc    ecx
  40eb50:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eb51:	int    0xf7
  40eb53:	dec    esi
  40eb54:	inc    ebx
  40eb55:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eb56:	cli    
  40eb57:	push   0xffffffef
  40eb59:	xor    eax,0x62f4a84c
  40eb5e:	jb     0x40eb56
  40eb60:	imul   esp,DWORD PTR [esi+0x62f4e9fe],0xb1b4d206
  40eb6a:	push   esi
  40eb6b:	mov    ecx,0xbbfeb70f
  40eb70:	mov    cl,0x76
  40eb72:	shl    DWORD PTR [edx+0x2981633b],cl
  40eb78:	sub    esp,DWORD PTR [ebp-0x15]
  40eb7b:	retf   0xde75
  40eb7e:	(bad)  
  40eb7f:	jmp    0x40eb84
	...
  40eb8c:	(bad)  
  40eb8d:	fs jmp 0x40eb62
  40eb90:	mov    esp,0xf329a3f3
  40eb95:	popa   
  40eb96:	jb     0x40eb79
  40eb98:	cmp    dl,dh
  40eb9a:	push   cs
  40eb9b:	shl    DWORD PTR [esi-0x413107a5],0xb6
  40eba2:	inc    BYTE PTR [eax]
  40eba4:	lds    edx,FWORD PTR [ecx+edi*8+0x75]
  40eba8:	ss daa 
  40ebaa:	push   esi
  40ebab:	or     BYTE PTR [ecx-0x4f],ah
  40ebae:	push   cs
  40ebaf:	call   0x3a159d
  40ebb4:	push   ecx
  40ebb5:	mov    cl,0xe
  40ebb7:	call   0x3a1472
  40ebbc:	popa   
  40ebbd:	mov    cl,0xfa
  40ebbf:	(bad)  
  40ebc0:	jmp    0x40ec20
  40ebc2:	loopne 0x40eb97
  40ebc4:	loop   0x40ebed
  40ebc6:	stc    
  40ebc7:	leave  
  40ebc8:	pushf  
  40ebc9:	arpl   WORD PTR [esi],ax
  40ebcb:	push   ebp
  40ebcc:	push   ebp
  40ebcd:	cmp    eax,DWORD PTR [ebp+0x4f915ec4]
  40ebd3:	push   ebx
  40ebd4:	gs nop
  40ebd6:	or     al,bh
  40ebd8:	fsub   QWORD PTR [esi+eax*1+0x0]
  40ebdc:	fisub  WORD PTR [edi]
  40ebde:	jae    0x40ebe8
  40ebe0:	ss pop eax
  40ebe2:	pop    esi
  40ebe3:	add    dh,cl
  40ebe5:	jecxz  0x40ebd6
  40ebe7:	add    DWORD PTR [ecx+0x5d],ebp
  40ebea:	sub    eax,0x588785c0
  40ebef:	leave  
	...
  40ebfc:	int3   
  40ebfd:	pop    esi
  40ebfe:	clc    
  40ebff:	rol    BYTE PTR [esi],1
  40ec01:	ficom  DWORD PTR [edx+0xc]
  40ec04:	pop    es
  40ec05:	gs mov ebx,eax
  40ec08:	xchg   ecx,eax
  40ec09:	loop   0x40ebe8
  40ec0b:	add    BYTE PTR [esi-0x798a749c],cl
  40ec11:	fstp   TBYTE PTR [edx+0x8]
  40ec14:	add    eax,0x588b608d
  40ec19:	in     al,0xfb
  40ec1b:	xor    ah,bl
  40ec1d:	pop    ecx
  40ec1e:	js     0x40ec1c
  40ec20:	pop    ss
  40ec21:	scas   al,BYTE PTR es:[edi]
  40ec22:	add    DWORD PTR [eax+0x1beb7442],eax
  40ec28:	test   ecx,0x3ec540bf
  40ec2e:	test   bl,bh
  40ec30:	mov    cl,0xa0
  40ec32:	cli    
  40ec33:	jg     0x40ec58
  40ec35:	mov    eax,DWORD PTR [edx-0x2db023d]
  40ec3b:	sub    dh,BYTE PTR [edi]
  40ec3d:	jne    0x40ec60
  40ec3f:	pop    esi
  40ec40:	cs or  al,0xfc
  40ec43:	dec    esp
  40ec45:	cmp    DWORD PTR [esi+0x8],edx
  40ec48:	retf   
  40ec49:	xor    cl,BYTE PTR [ebx+0x4]
  40ec4c:	sar    DWORD PTR [ecx],cl
  40ec4e:	fist   WORD PTR [esi]
  40ec50:	mov    ebx,0x330a548a
  40ec55:	mov    BYTE PTR [ecx+0x6],cl
  40ec58:	sbb    ecx,DWORD PTR [ebx+0x42cc0a06]
  40ec5e:	pop    ds
  40ec5f:	rol    BYTE PTR [eax],0x0
	...
  40ec6a:	add    BYTE PTR [eax],al
  40ec6c:	cmp    al,0x29
  40ec6e:	and    cl,cl
  40ec70:	mov    ch,0x51
  40ec72:	add    al,0xc0
  40ec74:	xlat   BYTE PTR ds:[ebx]
  40ec75:	dec    ebp
  40ec76:	inc    bl
  40ec78:	lea    eax,[edi+eax*4]
  40ec7b:	vandpd ymm5,ymm1,YMMWORD PTR [edi+0x38d45574]
  40ec83:	or     al,0xa8
  40ec85:	pop    ecx
  40ec86:	jae    0x40eccc
  40ec88:	lahf   
  40ec89:	nop
  40ec8a:	dec    eax
  40ec8b:	or     BYTE PTR [eax+0xe],ch
  40ec8e:	rol    dh,0x3a
  40ec91:	jbe    0x40ec96
  40ec93:	add    bh,dh
  40ec95:	dec    ecx
  40ec96:	xchg   DWORD PTR [esp+edi*1],edi
  40ec99:	add    al,0x45
  40ec9b:	add    bh,dh
  40ec9d:	(bad)  [ecx]
  40ec9f:	lea    edi,[edx-0x995caa7]
  40eca5:	jecxz  0x40ecaa
  40eca7:	push   0xfffffff7
  40eca9:	jecxz  0x40ecae
  40ecab:	push   0xfffffff7
  40ecad:	bound  esi,QWORD PTR [edx+0x49]
  40ecb0:	dec    edi
  40ecb1:	mov    dl,0xd8
  40ecb3:	sbb    DWORD PTR [ebx+ebp*4+0x22ec042e],ecx
  40ecba:	push   edx
  40ecbb:	(bad)  
  40ecbc:	jne    0x40ec9b
  40ecbe:	mov    ecx,0x7496ab04
  40ecc3:	dec    ecx
  40ecc4:	sti    
  40ecc5:	jmp    0x40ece9
  40ecc7:	mov    ah,0xdd
  40ecc9:	push   0x30
  40eccb:	out    dx,al
  40eccc:	sbb    al,0xeb
  40ecce:	sbb    bh,BYTE PTR [eax+0x0]
	...
  40ecdc:	jge    0x40ecbb
  40ecde:	cmc    
  40ecdf:	mov    ?,WORD PTR [ebx+0x4068d52]
  40ece5:	push   es
  40ece6:	gs dec ecx
  40ece8:	jmp    0x40ed49
  40ecea:	sti    
  40eceb:	mov    bl,0x81
  40eced:	arpl   WORD PTR [eax+0x39],di
  40ecf0:	jecxz  0x40ed3d
  40ecf2:	mov    edx,0x3562f75c
  40ecf7:	add    eax,0x5eed62f7
  40ecfc:	xor    BYTE PTR [ebp+0x62f0c636],bh
  40ed02:	add    al,0xc4
  40ed04:	sbb    eax,0xb6cca7be
  40ed09:	imul   ebp,ebp,0x58
  40ed0c:	jl     0x40ed5d
  40ed0e:	ins    DWORD PTR es:[edi],dx
  40ed0f:	enter  0xcb68,0xed
  40ed13:	jecxz  0x40ecb5
  40ed15:	pop    esi
  40ed16:	inc    esi
  40ed17:	add    cl,BYTE PTR [ecx]
  40ed19:	pop    esi
  40ed1a:	and    DWORD PTR [ebp+0x3965f3b],ecx
  40ed20:	xlat   BYTE PTR ds:[ebx]
  40ed21:	(bad)  
  40ed22:	in     eax,dx
  40ed23:	stos   DWORD PTR es:[edi],eax
  40ed24:	(bad)  
  40ed25:	int3   
  40ed26:	or     bl,al
  40ed28:	outs   dx,DWORD PTR ds:[esi]
  40ed29:	test   al,0x5
  40ed2b:	sub    al,0xf7
  40ed2d:	sub    ch,0x3
  40ed30:	pop    edi
  40ed31:	xchg   DWORD PTR [esi],eax
  40ed33:	xchg   DWORD PTR ds:0xa0a48e5d,esi
  40ed39:	mov    BYTE PTR [esi],0x9
  40ed3c:	sti    
  40ed3d:	(bad)  
  40ed3e:	out    dx,al
  40ed3f:	test   BYTE PTR [eax],0x0
	...
  40ed4a:	add    BYTE PTR [eax],al
  40ed4c:	push   es
  40ed4d:	pop    esi
  40ed4e:	clc    
  40ed4f:	pusha  
  40ed50:	scas   eax,DWORD PTR es:[edi]
  40ed51:	push   edx
  40ed52:	outs   dx,DWORD PTR ds:[esi]
  40ed53:	jmp    0xd2394bac
  40ed58:	add    cl,ch
  40ed5a:	idiv   DWORD PTR [esi+0x41eaa77b]
  40ed60:	sti    
  40ed61:	add    BYTE PTR [esi],0xe9
  40ed64:	dec    esp
  40ed65:	pop    edi
  40ed66:	push   0xffffffa6
  40ed68:	xor    eax,0xdc9141eb
  40ed6d:	bound  esp,QWORD PTR [esi]
  40ed6f:	jmp    0xfd383868
  40ed74:	xor    eax,0x9f2c8e5d
  40ed79:	pop    esp
  40ed7a:	jb     0x40ed55
  40ed7c:	sbb    al,0x95
  40ed7e:	bound  ebp,QWORD PTR [eax]
  40ed80:	sti    
  40ed81:	pop    ebp
  40ed82:	jb     0x40edf1
  40ed84:	mov    WORD PTR ds:0xe1f4e95e,?
  40ed8a:	ret    0xb5ed
  40ed8d:	(bad)  
  40ed8e:	push   ss
  40ed8f:	shl    DWORD PTR [ebx],0xc7
  40ed92:	inc    ebp
  40ed93:	jmp    0x523fc44d
  40ed98:	(bad)  
  40ed99:	mov    edx,0x2171e906
  40ed9e:	or     esi,DWORD PTR [esi]
  40eda0:	fbstp  TBYTE PTR [edx+0x6e]
  40eda3:	(bad)  
  40eda4:	shl    BYTE PTR [ebx+0x56cf2606],1
  40edaa:	out    dx,eax
  40edab:	arpl   WORD PTR [ebx],bp
  40edad:	arpl   WORD PTR [esi],ax
  40edaf:	push   0x0
	...
  40edb9:	add    BYTE PTR [eax],al
  40edbb:	add    BYTE PTR [eax-0x1b6b0897],bh
  40edc1:	retf   0x79
  40edc4:	and    BYTE PTR [esi+0x11e3ff06],0xe0
  40edcb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40edcc:	xchg   DWORD PTR [ecx+0x6],esp
  40edcf:	adc    DWORD PTR [edx],0x6e
  40edd2:	div    DWORD PTR [ebp+0x4e]
  40edd5:	mov    DWORD PTR [esi-0x898e09c],edx
  40eddb:	jne    0x40ee17
  40eddd:	push   cs
  40edde:	xchg   esp,eax
  40eddf:	pop    ecx
  40ede0:	dec    esi
  40ede1:	popa   
  40ede2:	add    esp,0x2a
  40ede5:	and    dh,BYTE PTR [ebx+0xc]
  40ede8:	(bad)  
  40ede9:	enter  0x4163,0xe
  40eded:	and    dh,BYTE PTR [ebx-0x18]
  40edf0:	ss loope 0x40ee51
  40edf3:	add    BYTE PTR [esi],bl
  40edf5:	out    0xc3,al
  40edf7:	or     al,0x69
  40edf9:	xchg   ebp,eax
  40edfa:	push   ss
  40edfb:	push   0x458a9c
  40ee00:	imul   edx,DWORD PTR [ebp-0x47f7171e],0x2b5d0006
  40ee0a:	or     al,0x6a
  40ee0c:	into   
  40ee0d:	and    esi,DWORD PTR [ebx-0x4]
  40ee10:	dec    ecx
  40ee11:	xchg   esp,eax
  40ee12:	or     bh,bh
  40ee14:	repz (bad) 
  40ee16:	aas    
  40ee17:	inc    ecx
  40ee18:	fimul  WORD PTR [eax]
  40ee1a:	push   edx
  40ee1b:	jo     0x40ee46
  40ee1d:	and    cl,BYTE PTR [edi+0x45]
	...
  40ee2b:	add    BYTE PTR [esi],ch
  40ee2d:	lea    eax,[esi]
  40ee2f:	push   DWORD PTR [ebx+0x18]
  40ee32:	stc    
  40ee33:	jne    0x40edcf
  40ee35:	and    esi,DWORD PTR [ebx]
  40ee37:	loope  0x40ee8f
  40ee39:	mov    eax,ds:0x904ee806
  40ee3e:	idiv   edi
  40ee40:	pop    es
  40ee41:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ee42:	fisubr DWORD PTR [edx-0x62]
  40ee45:	and    esi,DWORD PTR [ebx-0xc]
  40ee48:	div    DWORD PTR [edi+ebp*1+0xc]
  40ee4c:	js     0x40ee85
  40ee4e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ee4f:	inc    edi
  40ee50:	mov    dh,0x49
  40ee52:	lods   al,BYTE PTR ds:[esi]
  40ee53:	sub    edi,esp
  40ee55:	pop    esp
  40ee56:	(bad)  
  40ee57:	mov    BYTE PTR [edx+0x58002871],bh
  40ee5d:	xlat   BYTE PTR ds:[ebx]
  40ee5e:	mov    bl,0xfe
  40ee60:	retf   0xc731
  40ee63:	xor    al,0x56
  40ee65:	xchg   edx,eax
  40ee66:	inc    ebx
  40ee67:	add    BYTE PTR [edi+0x5e],cl
  40ee6a:	xor    al,0xff
  40ee6c:	cmp    bl,al
  40ee6e:	inc    eax
  40ee6f:	aam    0x9d
  40ee71:	dec    ecx
  40ee72:	(bad)  
  40ee73:	je     0x40ee90
  40ee75:	sbb    eax,0x5f20e831
  40ee7a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ee7b:	inc    edi
  40ee7c:	mov    dh,0x49
  40ee7e:	lods   al,BYTE PTR ds:[esi]
  40ee7f:	std    
  40ee80:	mov    al,ds:0xb288c704
  40ee85:	sbb    DWORD PTR [ecx-0x3a65c8bc],ecx
  40ee8b:	je     0x40eea0
  40ee8d:	in     eax,dx
  40ee8e:	xor    BYTE PTR [eax+eax*1],cl
	...
  40ee99:	add    BYTE PTR [eax],al
  40ee9b:	add    al,dh
  40ee9d:	push   ds
  40ee9e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ee9f:	inc    edi
  40eea0:	ss dec edx
  40eea2:	lods   al,BYTE PTR ds:[esi]
  40eea3:	in     eax,0x50
  40eea5:	aad    0xc6
  40eea7:	mov    BYTE PTR [edx],dh
  40eea9:	inc    BYTE PTR [edx+0x1749d77c]
  40eeaf:	test   BYTE PTR [eax+0x74000449],al
  40eeb5:	ss sar bh,1
  40eeb8:	jmp    0xb1405782
  40eebd:	dec    ecx
  40eebe:	cmp    DWORD PTR [edi+eax*8+0x49],0x17
  40eec3:	test   BYTE PTR [ecx+ecx*2+0x4],dl
  40eec7:	add    BYTE PTR [edx+0x6],ch
  40eeca:	ror    BYTE PTR [edi-0x70],0x62
  40eece:	call   0x81c0:0x1ab290d7
  40eed5:	addr16 sub eax,0xedeb7310
  40eedb:	add    esi,edi
  40eedd:	fild   WORD PTR [edx+0x616c68c7]
  40eee3:	xchg   BYTE PTR [eax+0x5b],ah
  40eee6:	out    dx,al
  40eee7:	mov    ?,WORD PTR [ebx-0x343f61d6]
  40eeed:	xor    dl,dh
  40eeef:	repnz dec ebx
  40eef1:	pop    ebx
  40eef2:	(bad)  [ebx]
  40eef4:	aaa    
  40eef5:	(bad)  
  40eef6:	pop    edx
  40eef7:	cmp    DWORD PTR [ebx-0x5fc811d6],0xffffffca
  40eefe:	fld    QWORD PTR [ebx]
	...
  40ef0c:	sbb    BYTE PTR [ecx+edi*4],bl
  40ef0f:	cmp    edi,ebp
  40ef11:	dec    edx
  40ef12:	shr    DWORD PTR [eax+ebx*1],cl
  40ef15:	pop    ebx
  40ef16:	test   eax,0x1b5b1739
  40ef1b:	or     al,0x1f
  40ef1d:	(bad)  
  40ef1e:	push   ss
  40ef1f:	mov    edi,0xe01b5b01
  40ef24:	stc    
  40ef25:	aam    0xe5
  40ef27:	stos   DWORD PTR es:[edi],eax
  40ef28:	pop    edi
  40ef29:	int3   
  40ef2a:	cmp    BYTE PTR [edi-0x405a2f17],0x6b
  40ef31:	imul   eax,DWORD PTR [ebp+0x695a4e5e],0xffffffbf
  40ef38:	dec    ebx
  40ef39:	pop    ds
  40ef3a:	popa   
  40ef3b:	cmp    DWORD PTR [ebx-0x30f42ca6],esp
  40ef41:	jg     0x40ef09
  40ef43:	mov    esi,0xcbd35ab9
  40ef48:	mov    cl,0xd0
  40ef4a:	sbb    eax,0x556b23bf
  40ef4f:	push   ss
  40ef50:	push   cs
  40ef51:	pop    edx
  40ef52:	pop    es
  40ef53:	ss je  0x40ef2d
  40ef56:	retf   0xc8e9
  40ef59:	outs   dx,DWORD PTR ds:[esi]
  40ef5a:	and    DWORD PTR [esp+esi*4+0x6dee7166],0xffffff9f
  40ef62:	retf   0x8316
  40ef65:	pop    ecx
  40ef66:	jb     0x40ef49
  40ef68:	pushf  
  40ef69:	and    DWORD PTR [edi+0x6],ebp
  40ef6c:	test   al,0x4d
  40ef6e:	or     eax,0x93
	...
  40ef7b:	add    ah,dh
  40ef7d:	pop    ecx
  40ef7e:	jb     0x40ef61
  40ef80:	mov    WORD PTR ds:0x5991ee6f,ds
  40ef86:	jb     0x40ef6d
  40ef88:	pushf  
  40ef89:	fs push 0xffffffde
  40ef8c:	sbb    DWORD PTR [ecx+0x72],0x6c5c8cd1
  40ef93:	into   
  40ef94:	jno    0x40efef
  40ef96:	jb     0x40ef55
  40ef98:	pop    esp
  40ef99:	push   esp
  40ef9a:	ins    BYTE PTR es:[edi],dx
  40ef9b:	mov    esi,0xb9725961
  40efa0:	dec    esp
  40efa1:	dec    esp
  40efa2:	ins    BYTE PTR es:[edi],dx
  40efa3:	scas   al,BYTE PTR es:[edi]
  40efa4:	push   ecx
  40efa5:	pop    ecx
  40efa6:	jb     0x40ef3d
  40efa8:	pop    esp
  40efa9:	inc    esp
  40efaa:	ins    BYTE PTR es:[edi],dx
  40efab:	sahf   
  40efac:	inc    ecx
  40efad:	pop    ecx
  40efae:	jb     0x40ef31
  40efb0:	dec    esp
  40efb1:	cmp    al,0x6c
  40efb3:	mov    ?,WORD PTR [ecx-0x63728da8]
  40efb9:	xor    ebp,DWORD PTR [esi+edi*2-0x5f]
  40efbd:	pop    eax
  40efbe:	jb     0x40ef49
  40efc0:	mov    WORD PTR [ebx],gs
  40efc2:	ins    BYTE PTR es:[edi],dx
  40efc3:	outs   dx,BYTE PTR ds:[esi]
  40efc4:	xchg   ecx,eax
  40efc5:	pop    eax
  40efc6:	jb     0x40f00d
  40efc8:	pushf  
  40efc9:	and    ebp,DWORD PTR [esi+ebx*2-0x7f]
  40efcd:	pop    eax
  40efce:	jb     0x40f001
  40efd0:	mov    WORD PTR [ebx],ds
  40efd2:	ins    BYTE PTR es:[edi],dx
  40efd3:	dec    esi
  40efd4:	jno    0x40f02e
  40efd6:	jb     0x40efd8
  40efd8:	or     cl,BYTE PTR [esi]
  40efda:	mov    dh,0x6b
  40efdc:	loope  0x40eff6
  40efde:	stc    
  40efdf:	jne    0x40efe1
	...
  40efe9:	add    BYTE PTR [eax],al
  40efeb:	add    dh,bh
  40efed:	or     eax,0x18e16bae
  40eff2:	stc    
  40eff3:	jne    0x40efb7
  40eff5:	or     eax,0x18e16ba6
  40effa:	iret   
  40effb:	ret    0x6592
  40effe:	push   ecx
  40efff:	mov    esi,DWORD PTR [edx-0x1b]
  40f002:	ret    
  40f003:	call   0x8e3a0771
  40f008:	fwait
  40f009:	sbb    DWORD PTR [eax-0x1],ecx
  40f00c:	fld    TBYTE PTR [ecx-0x9]
  40f00f:	xor    eax,0x45adff
  40f014:	rcl    DWORD PTR es:[eax+0x0],1
  40f018:	dec    esi
  40f019:	push   0xffffffc6
  40f01b:	bswap  ebx
  40f01d:	jp     0x40f024
  40f01f:	add    BYTE PTR [esi],bl
  40f021:	push   ds
  40f022:	inc    ebx
  40f023:	clc    
  40f024:	push   ds
  40f025:	gs push es
  40f027:	add    BYTE PTR [ecx-0x5f],bl
  40f02a:	repnz dec DWORD PTR [ecx]
  40f02d:	gs push es
  40f02f:	push   0x1e
  40f031:	mov    eax,DWORD PTR [esi]
  40f033:	push   0x1e
  40f035:	mov    eax,DWORD PTR [esi]
  40f037:	(bad)  
  40f038:	fistp  DWORD PTR [edx]
  40f03a:	dec    eax
  40f03b:	lea    ecx,[ebx-0x7e000ef2]
  40f041:	scas   eax,DWORD PTR es:[edi]
  40f042:	div    DWORD PTR [ebp+0x76]
  40f045:	push   ss
  40f046:	jae    0x40f044
  40f048:	xchg   dh,bl
  40f04a:	push   eax
  40f04b:	add    dh,cl
  40f04d:	imul   eax,esi,0x74
	...
  40f05c:	fisttp DWORD PTR ds:0x64de00d1
  40f062:	outs   dx,BYTE PTR ds:[esi]
  40f063:	mov    ebp,0xff06a586
  40f068:	div    DWORD PTR [esi]
  40f06a:	or     al,ch
  40f06c:	iret   
  40f06d:	sbb    BYTE PTR [ebx-0x2d2ab802],bh
  40f073:	mov    WORD PTR [edx-0x66],?
  40f076:	mov    cl,0xfe
  40f078:	cwde   
  40f079:	cli    
  40f07a:	push   ebp
  40f07b:	call   0xfefc093f
  40f080:	jle    0x40f049
  40f082:	stos   BYTE PTR es:[edi],al
  40f083:	test   BYTE PTR [eax+0xc1daa79],0x71
  40f08a:	mov    ecx,0x5279ba8c
  40f08f:	push   0x44e61d
  40f094:	pusha  
  40f095:	(bad)
  40f099:	push   ecx
  40f09a:	mov    ebx,0x45025634
  40f09f:	add    BYTE PTR [edi+0x5e],bl
  40f0a2:	sub    bh,bh
  40f0a4:	inc    eax
  40f0a5:	rol    DWORD PTR [eax-0x44cebf15],cl
  40f0ab:	xor    BYTE PTR [edx+0x16],0xb3
  40f0af:	(bad)  
  40f0b0:	sub    BYTE PTR [edx+0x30],cl
  40f0b3:	pop    edx
  40f0b4:	je     0x40f04d
  40f0b6:	mov    dl,0x3
  40f0b8:	mov    ds:0x23848d82,al
  40f0bd:	adc    DWORD PTR [ebx+0xfe],edi
	...
  40f0cb:	add    BYTE PTR [eax],cl
  40f0cd:	cmp    cl,BYTE PTR [ebx-0x450eec7c]
  40f0d3:	(bad)  
  40f0d4:	jbe    0x40f085
  40f0d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f0d7:	div    al
  40f0d9:	call   0x4a37f389
  40f0de:	xor    cl,BYTE PTR [edx]
  40f0e0:	mov    eax,0xd8f6a7be
  40f0e5:	shr    BYTE PTR [ebx-0x50b608fe],1
  40f0eb:	sbb    eax,ecx
  40f0ed:	bound  esi,QWORD PTR [edx-0x51]
  40f0f0:	leave  
  40f0f1:	push   edi
  40f0f2:	pop    ecx
  40f0f3:	mov    esp,0xbc594683
  40f0f8:	mov    cl,0x57
  40f0fa:	xchg   ebx,eax
  40f0fb:	stos   DWORD PTR es:[edi],eax
  40f0fc:	mov    eax,ds:0x2bbc4157
  40f101:	imul   edx,DWORD PTR [ebp+0x3b],0xffffff9b
  40f105:	push   edi
  40f106:	xor    DWORD PTR [eax-0x43ceb9ad],eax
  40f10c:	mov    DWORD PTR [edx-0x66],esp
  40f10f:	fiadd  WORD PTR [ecx+0x79b40a0d]
  40f115:	push   edi
  40f116:	push   es
  40f117:	cwde   
  40f118:	ficom  WORD PTR [edi+0x9]
  40f11b:	mov    esp,0xbbf946a3
  40f120:	popa   
  40f121:	dec    edx
  40f122:	pop    esi
  40f123:	sub    DWORD PTR [eax+0x57],ebx
  40f126:	icebp  
  40f127:	jne    0x40f181
  40f129:	dec    edi
  40f12a:	jmp    0xf60e3aea
  40f12f:	stos   DWORD PTR es:[edi],eax
	...
  40f13c:	push   esp
  40f13d:	pop    eax
  40f13e:	fnstcw WORD PTR [ebx-0x4c39f2c7]
  40f144:	xor    DWORD PTR [edi-0x3a],edx
  40f147:	xor    ebx,DWORD PTR [ebp-0x44443ea9]
  40f14d:	pop    edx
  40f14e:	xlat   BYTE PTR ds:[ebx]
  40f14f:	mov    edi,0xbbb1571a
  40f154:	mov    edx,DWORD PTR [esi-0x3a]
  40f157:	xchg   edi,eax
  40f158:	mov    ds:0x36cced62,al
  40f15d:	push   0xffffffed
  40f15f:	push   eax
  40f160:	ins    BYTE PTR es:[edi],dx
  40f161:	inc    esi
  40f162:	ins    DWORD PTR es:[edi],dx
  40f163:	shr    ah,0xc9
  40f166:	in     eax,dx
  40f167:	sub    eax,0xbfb5627
  40f16c:	iret   
  40f16d:	in     al,dx
  40f16e:	add    BYTE PTR [ebx+0x2c06ecd9],bh
  40f174:	(bad)  
  40f175:	mov    esi,0x63320512
  40f17a:	neg    esp
  40f17c:	in     al,dx
  40f17d:	dec    edx
  40f17e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f17f:	pop    edi
  40f180:	jl     0x40f1d7
  40f182:	clc    
  40f183:	fsubr  QWORD PTR [eax+0x55]
  40f186:	jb     0x40f169
  40f188:	pop    esp
  40f189:	adc    ah,BYTE PTR [eax+0x46]
  40f18c:	pop    esp
  40f18d:	sub    eax,ebp
  40f18f:	in     eax,0xf4
  40f191:	scas   eax,DWORD PTR es:[edi]
  40f192:	mov    eax,DWORD PTR [ebp+0x78]
  40f195:	and    bh,bl
  40f197:	xchg   edi,eax
  40f198:	and    eax,0x8b9306c9
  40f19d:	push   ebp
  40f19e:	jb     0x40f191
	...
  40f1ac:	dec    esp
  40f1ad:	mov    al,0x5f
  40f1af:	push   ss
  40f1b0:	lods   al,BYTE PTR ds:[esi]
  40f1b1:	jmp    0x40f1f4
  40f1b3:	or     eax,0xb1618f78
  40f1b8:	mov    ebx,0xbbc8b62
  40f1bd:	stos   DWORD PTR es:[edi],eax
  40f1be:	inc    ebp
  40f1bf:	jmp    0x75478738
  40f1c4:	mov    bh,0xca
  40f1c6:	ror    DWORD PTR [ebp-0x46],0x62
  40f1ca:	dec    edi
  40f1cb:	rol    DWORD PTR [ecx],1
  40f1cd:	lods   eax,DWORD PTR ds:[esi]
  40f1ce:	push   es
  40f1cf:	jmp    0xeeb414d5
  40f1d4:	(bad)  
  40f1d5:	dec    edx
  40f1d6:	sar    BYTE PTR [edx],0x5c
  40f1d9:	push   ebp
  40f1da:	push   edi
  40f1db:	push   ecx
  40f1dc:	repz (bad) 
  40f1de:	out    0x77,eax
  40f1e0:	fsub   QWORD PTR ds:0xb2f32863
  40f1e6:	neg    DWORD PTR [ebx+esi*8]
  40f1e9:	dec    edx
  40f1ea:	aam    0x7b
  40f1ec:	cmp    eax,0x23b5ef55
  40f1f1:	push   esi
  40f1f2:	clc    
  40f1f3:	xor    bl,0x9c
  40f1f6:	xchg   BYTE PTR [eax],al
  40f1f8:	mov    eax,0x10fa7161
  40f1fd:	sbb    esi,DWORD PTR ds:0xf91907c0
  40f203:	call   FWORD PTR [ecx+0x10]
  40f206:	stos   BYTE PTR es:[edi],al
  40f207:	cmp    cl,dl
  40f209:	xchg   edx,eax
  40f20a:	mov    ebx,0xf90da3ff
  40f20f:	jne    0x40f211
	...
  40f219:	add    BYTE PTR [eax],al
  40f21b:	add    BYTE PTR [esi+0x39673009],dl
  40f221:	sbb    DWORD PTR [ecx+0x5e],ebx
  40f224:	out    0x1f,eax
  40f226:	add    al,0x0
  40f228:	and    esp,0xffffffeb
  40f22b:	and    edx,0x19
  40f22e:	push   ebp
  40f22f:	(bad)  
  40f230:	push   ebx
  40f231:	sbb    eax,edi
  40f233:	dec    DWORD PTR [esi-0x25ba409f]
  40f239:	popa   
  40f23a:	push   es
  40f23b:	add    BYTE PTR [esi-0x1c],bl
  40f23e:	inc    edx
  40f23f:	or     al,0xdd
  40f241:	pop    ecx
  40f242:	clc    
  40f243:	je     0x40f2ac
  40f245:	inc    esp
  40f246:	mov    eax,0xcdb4fc2b
  40f24b:	ret    0x615a
  40f24e:	mov    ebx,0x6615e01
  40f253:	jmp    0x40f204
  40f255:	fistp  QWORD PTR [edx+0x10]
  40f258:	dec    esi
  40f259:	test   DWORD PTR [ecx],eax
  40f25b:	mov    esp,ebx
  40f25d:	outs   dx,BYTE PTR ds:[esi]
  40f25e:	lea    ebx,[eax]
  40f260:	cmp    DWORD PTR [ebp+0x66e3ff0a],eax
  40f266:	out    dx,al
  40f267:	jbe    0x40f21b
  40f269:	sbb    edi,ecx
  40f26b:	add    DWORD PTR [ebp+0x69],0x71
  40f26f:	add    eax,0xebfe9417
  40f274:	shr    BYTE PTR [esi+0x1b597f21],1
  40f27a:	stc    
  40f27b:	or     edi,esi
  40f27d:	xchg   BYTE PTR [edx+0x57],bh
	...
  40f28b:	add    BYTE PTR [esi-0x8fffd36],bl
  40f291:	push   esi
  40f292:	add    ch,bl
  40f294:	and    al,0xc9
  40f296:	mov    ecx,0x8b374a07
  40f29b:	inc    esp
  40f29c:	iret   
  40f29d:	rol    DWORD PTR [edi-0x4],0xf0
  40f2a1:	in     eax,0xc0
  40f2a3:	pop    es
  40f2a4:	mov    dh,0xaa
  40f2a6:	or     cl,BYTE PTR [ecx+0x548bb23a]
  40f2ac:	stos   DWORD PTR es:[edi],eax
  40f2ad:	mov    eax,ds:0xa23a8b11
  40f2b2:	mov    DWORD PTR [ebx+ebx*4+0x45],edx
  40f2b6:	pop    eax
  40f2b7:	sar    eax,0x8a
  40f2ba:	mov    ds:0xbbff7e06,al
  40f2bf:	mov    BYTE PTR [edx],ch
  40f2c1:	jle    0x40f304
  40f2c3:	cmp    DWORD PTR [ebx+edx*2+0x36],0xffffff9a
  40f2c8:	jl     0x40f2d1
  40f2ca:	add    BYTE PTR [ebx+0x6294a2f],al
  40f2d0:	or     al,0x8a
  40f2d2:	jmp    0x8b7d3fa8
  40f2d7:	inc    esp
  40f2d8:	dec    edi
  40f2d9:	rol    DWORD PTR [edi-0x4],0xac
  40f2dd:	add    al,0xb
  40f2e0:	not    DWORD PTR [esi-0x18b1477]
  40f2e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f2e7:	mov    al,ds:0x44bc5b
  40f2ec:	out    dx,al
  40f2ed:	jle    0x40f2fd
  40f2ef:	jbe    0x40f2f1
	...
  40f2f9:	add    BYTE PTR [eax],al
  40f2fb:	add    cl,bh
  40f2fd:	jo     0x40f2c1
  40f2ff:	enter  0x3a35,0x4
  40f303:	dec    edx
  40f305:	in     eax,0x8d
  40f307:	inc    eax
  40f308:	mul    DWORD PTR [ecx]
  40f30a:	mov    esi,0xa0630067
  40f30f:	mov    dh,BYTE PTR [ebx-0xcc194a6]
  40f315:	mov    dl,0x85
  40f317:	cld    
  40f318:	dec    eax
  40f319:	push   esp
  40f31a:	mov    DWORD PTR [eax+0x2e806f6b],edi
  40f320:	jmp    0x40f375
  40f322:	repz mov ebx,0xabe5cdd1
  40f328:	cmp    al,al
  40f32a:	push   0xf122edb8
  40f32f:	jg     0x40f2c3
  40f331:	(bad)  
  40f332:	in     eax,dx
  40f333:	add    esi,DWORD PTR [eax+0x23b8e1cd]
  40f339:	pop    ebx
  40f33a:	dec    ecx
  40f33b:	mov    cs:0x98225a4a,eax
  40f341:	push   ebx
  40f342:	jne    0x40f382
  40f344:	add    ebx,DWORD PTR [eax-0x2007ec56]
  40f34a:	add    DWORD PTR [ebx],0x2e2062f7
  40f350:	jecxz  0x40f3a5
  40f352:	xchg   ebx,eax
  40f353:	or     ebx,DWORD PTR [edi-0x57]
  40f356:	mov    WORD PTR [eax-0x505d1697],?
  40f35c:	dec    ebp
  40f35d:	into   
  40f35e:	add    BYTE PTR [esi+0x0],al
	...
  40f369:	add    BYTE PTR [eax],al
  40f36b:	add    BYTE PTR [ebx-0x79],ah
  40f36e:	sbb    ecx,DWORD PTR [ebx+edi*4-0x6b2206b2]
  40f375:	in     al,0xae
  40f377:	add    ebp,esp
  40f379:	xor    BYTE PTR [edx+0x2],bl
  40f37c:	dec    esp
  40f37d:	retf   0x453
  40f380:	(bad)  
  40f381:	push   ebx
  40f382:	pop    ebx
  40f383:	or     al,0x1f
  40f385:	jbe    0x40f3d4
  40f387:	mov    bh,0x21
  40f389:	push   ebx
  40f38a:	cmp    edx,DWORD PTR [eax]
  40f38c:	sbb    ch,cl
  40f38e:	cmc    
  40f38f:	stos   DWORD PTR es:[edi],eax
  40f390:	out    dx,al
  40f391:	mov    edi,0xe840b606
  40f396:	push   ecx
  40f397:	aad    0x75
  40f399:	cdq    
  40f39a:	push   es
  40f39b:	sbb    al,0xf5
  40f39d:	inc    edi
  40f39e:	dec    edi
  40f39f:	jo     0x40f3d7
  40f3a1:	push   edi
  40f3a2:	mov    esp,fs
  40f3a4:	dec    eax
  40f3a5:	loopne 0x40f3ec
  40f3a7:	jmp    0x18442f21
  40f3ac:	mov    al,ds:0x881812d7
  40f3b1:	xlat   BYTE PTR ds:[ebx]
  40f3b2:	(bad)  
  40f3b3:	jbe    0x40f3bb
  40f3b5:	pop    ebx
  40f3b6:	out    dx,al
  40f3b7:	lahf   
  40f3b8:	adc    eax,0xedc0f852
  40f3bd:	and    dh,BYTE PTR [edx-0x15]
  40f3c0:	pop    ebp
  40f3c1:	xchg   DWORD PTR [ebp+0x56],edx
  40f3c4:	out    0x4a,al
  40f3c6:	clc    
  40f3c7:	aam    0x68
  40f3c9:	dec    edx
  40f3ca:	adc    cl,al
  40f3cc:	popa   
  40f3cd:	push   ecx
  40f3ce:	clc    
  40f3cf:	mov    ah,0x0
	...
  40f3d9:	add    BYTE PTR [eax],al
  40f3db:	add    BYTE PTR [eax+0x4a],cl
  40f3de:	push   cs
  40f3df:	leave  
  40f3e0:	inc    ecx
  40f3e1:	push   ecx
  40f3e2:	cmp    ch,cl
  40f3e4:	hlt    
  40f3e5:	mov    ds:0x3df69f00,al
  40f3ea:	punpckhdq mm5,QWORD PTR [esi]
  40f3ed:	push   edi
  40f3ee:	pop    es
  40f3ef:	pushf  
  40f3f0:	jmp    0xef4f:0x260e1f3c
  40f3f7:	pop    edx
  40f3f8:	rcl    BYTE PTR [ecx-0x8],0x26
  40f3fc:	mov    dh,0x4e
  40f3fe:	pop    es
  40f3ff:	jmp    0xa4cc56f8
  40f404:	lock sub DWORD PTR [edi],eax
  40f407:	jmp    0xde475700
  40f40c:	out    0x4a,eax
  40f40e:	out    dx,eax
  40f40f:	aad    0x9
  40f411:	push   edx
  40f412:	clc    
  40f413:	bound  esi,QWORD PTR [edi+0x4c00ce4e]
  40f419:	jbe    0x40f421
  40f41b:	push   ebp
  40f41c:	test   DWORD PTR [ecx],ecx
  40f41e:	push   ecx
  40f41f:	mov    ebx,ebx
  40f421:	pop    edx
  40f422:	add    eax,0x16
  40f425:	mov    dh,0xee
  40f427:	cld    
  40f428:	jmp    0x96cced46
  40f42d:	sbb    BYTE PTR [ebx+0xc],dh
  40f430:	push   ecx
  40f431:	push   ecx
  40f432:	stc    
  40f433:	jne    0x40f413
  40f435:	call   0x8b8df87a
  40f43a:	or     al,BYTE PTR [eax]
  40f43c:	retf   0xf768
  40f43f:	jne    0x40f441
	...
  40f449:	add    BYTE PTR [eax],al
  40f44b:	add    dl,dl
  40f44d:	fiadd  DWORD PTR [eax+0x8]
  40f450:	ficomp WORD PTR [ecx]
  40f452:	jae    0x40f45c
  40f454:	es ja  0x40f4c5
  40f457:	call   DWORD PTR [ecx-0x23]
  40f45a:	inc    edx
  40f45b:	adc    al,0x17
  40f45d:	dec    esi
  40f45e:	mov    al,0x1
  40f460:	mov    fs,WORD PTR [ebp+0x6]
  40f463:	pop    edi
  40f464:	out    0x23,eax
  40f466:	or     BYTE PTR [eax],al
  40f468:	imul   ebx,esp,0xffffffeb
  40f46b:	sbb    edx,0x1
  40f46e:	lea    edx,[ebp-0x56]
  40f471:	adc    BYTE PTR [esi],al
  40f473:	add    BYTE PTR [esi+0x2c2b0665],cl
  40f479:	add    DWORD PTR [ebx+0xc],eax
  40f47c:	pop    edi
  40f47d:	gs push es
  40f47f:	add    BYTE PTR [ecx-0x1f],al
  40f482:	lds    eax,FWORD PTR [ebx+0x75066973]
  40f488:	sub    eax,0x74147318
  40f48d:	fs ins BYTE PTR es:[edi],dx
  40f48f:	add    BYTE PTR [ebp+eiz*2-0x12],dh
  40f493:	nop
  40f494:	push   ecx
  40f495:	pop    ss
  40f496:	stc    
  40f497:	jmp    0x4759a3
  40f49c:	idiv   DWORD PTR [edi+ebp*1-0x1a4909f4]
  40f4a3:	(bad)  
  40f4a4:	mov    ds:0xff74b32b,al
  40f4a9:	xor    esi,DWORD PTR [edi]
  40f4ab:	bound  ecx,QWORD PTR [eax]
  40f4ad:	sbb    BYTE PTR [esp+eax*2+0x0],cl
	...
  40f4bc:	add    eax,DWORD PTR [eax]
  40f4be:	sub    BYTE PTR [ecx*4-0x7dfbd1c5],dl
  40f4c5:	xchg   DWORD PTR [esi-0x4e9e20b1],edi
  40f4cb:	(bad)  
  40f4cc:	loopne 0x40f4b1
  40f4ce:	add    al,BYTE PTR [edx]
  40f4d0:	idiv   DWORD PTR [ecx]
  40f4d2:	xchg   DWORD PTR [ebx+eax*1+0x3c],edi
  40f4d6:	sub    DWORD PTR [ebx],esp
  40f4d8:	enter  0x144f,0xff
  40f4dc:	dec    edx
  40f4dd:	inc    edx
  40f4de:	lods   al,BYTE PTR ds:[esi]
  40f4df:	sbb    eax,0x88b1c955
  40f4e4:	cmp    ch,BYTE PTR [esi+0x240374b1]
  40f4ea:	add    al,0x6a
  40f4ec:	sti    
  40f4ed:	scas   al,BYTE PTR es:[edi]
  40f4ee:	aaa    
  40f4ef:	cld    
  40f4f0:	inc    edi
  40f4f1:	mov    dl,0xf0
  40f4f3:	(bad)  
  40f4f4:	nop
  40f4f5:	xchg   ecx,eax
  40f4f6:	stos   DWORD PTR es:[edi],eax
  40f4f7:	(bad)  
  40f4f8:	idiv   BYTE PTR [ecx]
  40f4fa:	add    al,0x83
  40f4fc:	add    ch,BYTE PTR [esi]
  40f4fe:	pop    es
  40f4ff:	jne    0x40f4d8
  40f501:	mov    BYTE PTR [edi],ah
  40f503:	adc    ch,bl
  40f505:	cmp    al,0xb3
  40f507:	je     0x40f508
  40f509:	popa   
  40f50a:	dec    ebp
  40f50b:	bound  esp,QWORD PTR [eax+0x61]
  40f50e:	mov    cl,0x74
  40f510:	add    esi,esp
  40f512:	push   es
  40f513:	push   0xfffffff7
  40f515:	repz add ebp,eax
  40f518:	out    dx,eax
  40f519:	pop    eax
  40f51a:	mov    bl,0xfe
  40f51c:	dec    esi
  40f51d:	mov    eax,DWORD PTR [ebx]
	...
  40f52b:	add    bh,dh
  40f52d:	bound  ebp,QWORD PTR [esi+esi*1+0x3]
  40f531:	addr16 push edx
  40f533:	loope  0x40f55e
  40f535:	(bad)  
  40f536:	std    
  40f537:	mov    ah,0xab
  40f539:	pop    edx
  40f53a:	lds    esp,FWORD PTR [eax-0x69]
  40f53d:	dec    edi
  40f53e:	ror    DWORD PTR [edx+0x2eb94ebb],0xe3
  40f545:	mov    esp,0xddfb29ed
  40f54a:	and    bh,BYTE PTR [eax-0x4a6ec558]
  40f550:	icebp  
  40f551:	dec    edi
  40f552:	xchg   edi,eax
  40f553:	mov    esi,edi
  40f555:	(bad)  
  40f556:	in     eax,dx
  40f557:	and    BYTE PTR [ebx+0x5f],0xe2
  40f55b:	add    BYTE PTR cs:[eax-0x5],dl
  40f55f:	adc    ebx,DWORD PTR [ebp+0x69]
  40f562:	js     0x40f592
  40f564:	(bad)  
  40f565:	cmp    dh,BYTE PTR [edx+0x22]
  40f568:	ror    BYTE PTR [edi+0x36],0x2
  40f56c:	mul    DWORD PTR [edx-0x13]
  40f56f:	stos   BYTE PTR es:[edi],al
  40f570:	sbb    eax,0x7403ed62
  40f575:	int    0xe1
  40f577:	std    
  40f578:	sub    eax,DWORD PTR [ebx-0x42f8d1b8]
  40f57e:	cmc    
  40f57f:	mov    ah,0xb
  40f581:	pop    ebx
  40f582:	push   ebp
  40f583:	aam    0x17
  40f585:	push   eax
  40f586:	xor    DWORD PTR [ebx+ecx*1+0xd00c377],esi
  40f58d:	arpl   WORD PTR [ebx+0x3],dx
	...
  40f59b:	add    BYTE PTR [edi-0x2],bl
  40f59e:	pop    ss
  40f59f:	mov    ah,0x69
  40f5a1:	cmp    DWORD PTR [ebx+0x6c62f702],ebp
  40f5a7:	ss jmp 0x40f611
  40f5aa:	jp     0x40f58f
  40f5ac:	push   ecx
  40f5ad:	aad    0xdd
  40f5af:	sub    edi,edi
  40f5b1:	dec    edi
  40f5b2:	pop    es
  40f5b3:	jl     0x40f5a1
  40f5b5:	cmp    bh,BYTE PTR [esi-0x7af7c78]
  40f5bb:	pop    esp
  40f5bc:	bsr    eax,DWORD PTR [ebx]
  40f5bf:	push   ebx
  40f5c0:	repz mov esp,0x4d6dc106
  40f5c6:	clc    
  40f5c7:	into   
  40f5c8:	jp     0x40f63a
  40f5ca:	add    eax,0x79e3f4e9
  40f5cf:	in     eax,dx
  40f5d0:	or     al,0xd6
  40f5d2:	sbb    ch,BYTE PTR [esi-0x16f8b152]
  40f5d8:	hlt    
  40f5d9:	(bad)  
  40f5da:	neg    DWORD PTR [edi+ecx*1]
  40f5dd:	mov    ecx,0xdfff1306
  40f5e2:	inc    ecx
  40f5e3:	xchg   ebp,eax
  40f5e4:	dec    ebx
  40f5e5:	cmp    esp,DWORD PTR [ebx-0x71]
  40f5e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f5e9:	dec    ebp
  40f5ea:	out    dx,al
  40f5eb:	test   bl,bh
  40f5ed:	bound  eax,QWORD PTR [esi]
  40f5ef:	push   0x6
  40f5f1:	pop    edi
  40f5f2:	or     eax,0x4225f0fc
  40f5f7:	ins    DWORD PTR es:[edi],dx
  40f5f8:	repnz bound eax,QWORD PTR [esi]
  40f5fb:	jmp    0xd353cd65
	...
  40f60c:	hlt    
  40f60d:	mov    eax,0x4f2e6402
  40f612:	push   edi
  40f613:	inc    ecx
  40f614:	xor    DWORD PTR [ebp-0x8],ecx
  40f617:	inc    esi
  40f618:	jb     0x40f643
  40f61a:	pop    es
  40f61b:	jmp    0xe5bad814
  40f620:	adc    bh,0xc
  40f623:	jno    0x40f618
  40f625:	bound  eax,QWORD PTR [esi]
  40f627:	jmp    0xe9480fbf
  40f62c:	hlt    
  40f62d:	loope  0x40f6a8
  40f62f:	in     eax,0x61
  40f631:	xlat   BYTE PTR ds:[ebx]
  40f632:	or     al,0x51
  40f634:	repz bound eax,QWORD PTR [esi]
  40f637:	add    BYTE PTR [esi-0x11],bl
  40f63a:	mov    esp,0x83625e00
  40f63f:	jge    0x40f69b
  40f641:	dec    esi
  40f642:	jbe    0x40f699
  40f644:	push   ebp
  40f645:	cmp    BYTE PTR [ecx+edx*2-0x61],dh
  40f649:	xchg   edx,eax
  40f64a:	or     al,BYTE PTR [eax]
  40f64c:	push   ds
  40f64d:	mov    ds:0x11d67300,al
  40f652:	jae    0x40f660
  40f654:	mov    ecx,0xab83f29a
  40f659:	or     cl,BYTE PTR [ecx+edx*8]
  40f65c:	mov    ebx,0x4275f90a
  40f661:	jmp    0x458f:0x11496606
  40f668:	xchg   esi,eax
  40f669:	adc    BYTE PTR [ebx+0x10],dh
  40f66c:	mov    DWORD PTR [edx+0xfff2],ecx
	...
  40f67a:	add    BYTE PTR [eax],al
  40f67c:	add    edi,edi
  40f67e:	clc    
  40f67f:	jne    0x40f657
  40f681:	jmp    0x10ba56e1
  40f686:	stc    
  40f687:	jne    0x40f62b
  40f689:	outs   dx,DWORD PTR ds:[esi]
  40f68a:	add    al,0xff
  40f68c:	ret    
  40f68d:	adc    eax,0xea4675f9
  40f692:	(bad)  
  40f693:	std    
  40f694:	sbb    DWORD PTR [ecx],edx
  40f696:	stc    
  40f697:	jne    0x40f6af
  40f699:	jmp    0x1b0:0x114965b9
  40f6a0:	mov    fs,WORD PTR [ecx+0x6]
  40f6a3:	jmp    0x40f663
  40f6a5:	in     al,0x7a
  40f6a7:	or     al,0x9b
  40f6a9:	xchg   edi,eax
  40f6aa:	push   ecx
  40f6ab:	or     ebx,esp
  40f6ad:	mov    dl,BYTE PTR [ebp-0x7f]
  40f6b0:	dec    ebx
  40f6b1:	dec    ebp
  40f6b2:	clc    
  40f6b3:	call   FWORD PTR [esi+0x948735b]
  40f6b9:	mov    ecx,DWORD PTR [edx]
  40f6bb:	(bad)  
  40f6bc:	idiv   esi
  40f6be:	scas   eax,DWORD PTR es:[edi]
  40f6bf:	or     dl,0x77
  40f6c2:	push   es
  40f6c3:	shl    edx,1
  40f6c5:	dec    edi
  40f6c6:	mov    dh,0x74
  40f6c8:	inc    ebx
  40f6c9:	jae    0x40f738
  40f6cb:	fs inc eax
  40f6cd:	push   esp
  40f6ce:	jl     0x40f714
  40f6d0:	aas    
  40f6d1:	cmp    al,0x30
  40f6d3:	adc    BYTE PTR [eax],dh
  40f6d5:	scas   al,BYTE PTR es:[edi]
  40f6d6:	mov    esi,0xb643a2fe
  40f6db:	je     0x40f6cc
  40f6dd:	and    eax,DWORD PTR [eax+eiz*2]
	...
  40f6ec:	sbb    BYTE PTR [esi+esi*4],bl
  40f6ef:	je     0x40f6dc
  40f6f1:	mov    cl,0x3
  40f6f3:	inc    DWORD PTR [edx-0x8b49e9]
  40f6f9:	and    bh,BYTE PTR ds:0xb5fbf8fd
  40f6ff:	je     0x40f6f0
  40f701:	repnz and DWORD PTR [ebp-0x18],esp
  40f705:	in     eax,dx
  40f706:	push   0x0
  40f708:	idiv   DWORD PTR [ecx]
  40f70a:	add    al,0xeb
  40f70c:	repnz mov cl,0x2
  40f70f:	add    bh,dh
  40f711:	cmp    DWORD PTR [ebp+0x5139e7c1],edi
  40f717:	mov    edx,ebx
  40f719:	ins    BYTE PTR es:[edi],dx
  40f71a:	cmp    DWORD PTR [edi+ebp*8+0x39],0x93510531
  40f722:	rol    BYTE PTR [ebx],0xf7
  40f725:	shr    BYTE PTR [edi],1
  40f727:	or     BYTE PTR [eax+eax*2+0x728f35b7],cl
  40f72e:	pop    ds
  40f72f:	call   DWORD PTR [eax+0x7403ccb9]
  40f735:	dec    esp
  40f736:	add    al,0x75
  40f738:	xchg   BYTE PTR [ebp+0x628f082f],dl
  40f73e:	pop    ds
  40f73f:	push   DWORD PTR [eax+0x63]
  40f742:	mov    edi,0xed6736ba
  40f747:	push   esi
  40f748:	ins    BYTE PTR es:[edi],dx
  40f749:	aas    
  40f74a:	gs inc edi
  40f74c:	out    dx,eax
  40f74d:	xlat   BYTE PTR ds:[ebx]
  40f74e:	mov    dl,0xff
	...
  40f75c:	jge    0x40f7c5
  40f75e:	pop    ebp
  40f75f:	test   ebx,ecx
  40f761:	jb     0x40f750
  40f763:	aaa    
  40f764:	clc    
  40f765:	xlat   BYTE PTR ds:[ebx]
  40f766:	call   0x7406:0x58933813
  40f76d:	into   
  40f76e:	stc    
  40f76f:	add    esp,DWORD PTR [ebx+0xb56745a]
  40f775:	dec    esp
  40f776:	pop    esi
  40f777:	or     BYTE PTR [eax+0x61],ch
  40f77a:	ins    BYTE PTR es:[edi],dx
  40f77b:	cs out dx,eax
  40f77d:	bound  edi,QWORD PTR [ecx]
  40f77f:	sti    
  40f780:	jge    0x40f738
  40f782:	in     eax,0x53
  40f784:	jo     0x40f7e7
  40f786:	ins    BYTE PTR es:[edi],dx
  40f787:	add    eax,0x17ac19ef
  40f78c:	div    DWORD PTR [ebp+0x26759f74]
  40f792:	mov    edx,0x2ad84958
  40f797:	adc    al,0xb0
  40f799:	(bad)  
  40f79a:	in     eax,dx
  40f79b:	add    esi,edi
  40f79d:	bound  esi,QWORD PTR [esi+eax*2-0x5]
  40f7a1:	and    ebp,esi
  40f7a3:	add    esi,edi
  40f7a5:	(bad)  
  40f7a6:	in     eax,dx
  40f7a7:	test   BYTE PTR [ebx],bh
  40f7a9:	pop    ebx
  40f7aa:	in     eax,dx
  40f7ab:	push   DWORD PTR ss:[edi+0x2d]
  40f7af:	push   ecx
  40f7b0:	dec    eax
  40f7b1:	sbb    ch,BYTE PTR [edi+edi*8]
  40f7b4:	mov    al,ds:0x90fbdb4c
  40f7b9:	cmc    
  40f7ba:	test   eax,0x2d5791b0
  40f7bf:	add    BYTE PTR ss:[eax],al
	...
  40f7ca:	add    BYTE PTR [eax],al
  40f7cc:	push   DWORD PTR [edi+0x2d]
  40f7cf:	push   ecx
  40f7d0:	and    BYTE PTR [edx],bl
  40f7d2:	pop    es
  40f7d3:	sub    edi,DWORD PTR [eax+0x4b]
  40f7d6:	(bad)  
  40f7d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f7d8:	pushf  
  40f7d9:	dec    esp
  40f7da:	jb     0x40f7cd
  40f7dc:	mov    eax,?
  40f7de:	pop    eax
  40f7df:	push   ds
  40f7e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f7e1:	and    al,0x42
  40f7e3:	sbb    eax,0xe90662f5
  40f7e8:	shl    DWORD PTR [esi-0x59366616],1
  40f7ee:	repnz cdq 
  40f7f0:	xchg   esi,edx
  40f7f2:	push   cs
  40f7f3:	add    DWORD PTR [edi],ebx
  40f7f5:	dec    ecx
  40f7f6:	clc    
  40f7f7:	out    dx,al
  40f7f8:	push   ds
  40f7f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f7fa:	jmp    0xfbd5:0x79e02d5e
  40f801:	(bad)  
  40f802:	add    ah,dl
  40f804:	inc    esi
  40f805:	iret   
  40f806:	push   cs
  40f807:	add    bh,BYTE PTR [ebx]
  40f809:	lods   eax,DWORD PTR ds:[esi]
  40f80a:	push   edi
  40f80b:	mov    al,0x35
  40f80d:	push   edi
  40f80e:	push   es
  40f80f:	adc    ch,BYTE PTR [esi+0x5b2c8e3e]
  40f815:	loop   0x40f890
  40f817:	sar    ebx,0x62
  40f81a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f81b:	jmp    0xa96c5342
  40f820:	xor    DWORD PTR [edx+0x62f7abcd],ebp
  40f826:	mov    esp,DWORD PTR [ebx+esi*2]
  40f829:	and    esp,edi
  40f82b:	jmp    0x40f851
  40f82d:	cmp    ebp,DWORD PTR [edi+0x5]
	...
  40f83c:	nop
  40f83d:	dec    ecx
  40f83e:	mov    gs,WORD PTR [edi+eax*4]
  40f841:	(bad)  
  40f843:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f844:	ds aas 
  40f846:	pop    es
  40f847:	jmp    0x1b2c5b40
  40f84c:	jbe    0x40f7ed
  40f84e:	idiv   BYTE PTR [ecx-0x460d6089]
  40f854:	popa   
  40f855:	iret   
  40f856:	push   cs
  40f857:	add    BYTE PTR [esi],ah
  40f859:	jp     0x40f857
  40f85b:	inc    ecx
  40f85d:	int    0x4a
  40f85f:	lock test DWORD PTR [ebx+0x4d5a77ee],esp
  40f866:	(bad)  
  40f867:	je     0x40f8d7
  40f869:	stc    
  40f86a:	jb     0x40f868
  40f86c:	push   es
  40f86d:	pop    edx
  40f86e:	(bad)  
  40f86f:	inc    DWORD PTR [ecx]
  40f871:	cs mov eax,0xc607a15e
  40f877:	or     al,0x5e
  40f879:	daa    
  40f87a:	dec    ebx
  40f87b:	call   0xac2393c1
  40f880:	int    0x93
  40f882:	out    dx,al
  40f883:	add    BYTE PTR [eax+0x4a7d835f],ch
  40f889:	data16 jno 0x40f84d
  40f88c:	lea    edx,[edx+0x60bb00ee]
  40f892:	cmp    DWORD PTR [ebp+0x2a],0x66
  40f896:	jno    0x40f8a8
  40f898:	xor    DWORD PTR [ebx-0x7ac11706],ecx
  40f89e:	idiv   edi
	...
  40f8ac:	cmc    
  40f8ad:	push   ds
  40f8ae:	pop    edx
  40f8af:	pop    edi
  40f8b0:	xchg   edi,eax
  40f8b1:	and    ecx,DWORD PTR [eax+eax*1]
  40f8b4:	pop    ebp
  40f8b5:	xchg   ebx,eax
  40f8b6:	loop   0x40f8b8
  40f8b8:	or     ebx,DWORD PTR [ebp+ebp*8-0x75]
  40f8bc:	into   
  40f8bd:	gs push es
  40f8bf:	mov    ebx,DWORD PTR [ebx]
  40f8c1:	outs   dx,DWORD PTR ds:[esi]
  40f8c2:	div    DWORD PTR [ebp+0x7a]
  40f8c5:	enter  0x8af7,0x1b
  40f8c9:	sti    
  40f8ca:	(bad)  
  40f8cb:	loopne 0x40f899
  40f8cd:	mov    ch,0xee
  40f8cf:	loopne 0x40f8ce
  40f8d1:	stc    
  40f8d2:	clc    
  40f8d3:	mov    DWORD PTR [ebx+0x19],ebx
  40f8d6:	lea    edi,[ebp-0x1e]
  40f8d9:	int3   
  40f8da:	jb     0x40f8d8
  40f8dc:	mul    DWORD PTR [ebx+ecx*2-0x3f748353]
  40f8e3:	inc    esp
  40f8e4:	xchg   edi,eax
  40f8e5:	cmp    eax,DWORD PTR [eax+eax*1]
  40f8e8:	div    DWORD PTR [esi-0x40d81fb2]
  40f8ee:	dec    esi
  40f8ef:	hlt    
  40f8f0:	(bad)  
  40f8f1:	in     eax,dx
  40f8f2:	test   al,0x74
  40f8f4:	push   DWORD PTR [ebx-0x68]
  40f8f7:	cli    
  40f8f8:	pusha  
  40f8f9:	push   0x3fe3bffc
  40f8fe:	test   DWORD PTR [ebx+ecx*2+0x3b],edi
  40f902:	xor    BYTE PTR [esi],al
  40f904:	je     0x40f8e4
  40f906:	mov    ds:0x8521cbff,eax
  40f90b:	jl     0x40f964
  40f90d:	cmp    esi,DWORD PTR [eax]
  40f90f:	or     BYTE PTR [eax],al
	...
  40f919:	add    BYTE PTR [eax],al
  40f91b:	add    BYTE PTR [eax],dh
  40f91d:	into   
  40f91e:	mov    ds:0xa99c72e7,eax
  40f923:	(bad)  
  40f924:	and    BYTE PTR [esi+0x31cde7d6],ch
  40f92a:	stos   BYTE PTR es:[edi],al
  40f92b:	(bad)  
  40f92c:	adc    BYTE PTR [esi-0x637d184a],ch
  40f932:	test   eax,0x48fbccfe
  40f937:	pop    edi
  40f938:	cs std 
  40f93a:	push   es
  40f93b:	add    BYTE PTR [edi+edi*2-0x5e],bh
  40f93f:	stos   BYTE PTR es:[edi],al
  40f940:	call   0x62c3a7d4
  40f945:	fiadd  WORD PTR [edx]
  40f947:	je     0x40f93a
  40f949:	mov    esp,0x6ef7f427
  40f94e:	xchg   esi,eax
  40f94f:	mov    dh,BYTE PTR [edx]
  40f951:	dec    esi
  40f952:	stos   DWORD PTR es:[edi],eax
  40f953:	je     0x40f8f8
  40f955:	mov    ecx,0xce42ff02
  40f95a:	call   0xf6b7:0xa9b91449
  40f961:	(bad)  
  40f962:	in     eax,dx
  40f963:	add    esi,edi
  40f965:	test   al,0xb8
  40f967:	mov    edx,0x56ed57b6
  40f96c:	jl     0x40f9a5
  40f96e:	ins    DWORD PTR es:[edi],dx
  40f96f:	enter  0xb0b0,0x6c
  40f973:	das    
  40f974:	out    0x62,eax
  40f976:	mov    dl,0xf9
  40f978:	inc    eax
  40f979:	(bad)  
  40f97a:	in     eax,dx
  40f97b:	add    esi,edi
  40f97d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f97e:	es ret 0x0
	...
  40f98a:	add    BYTE PTR [eax],al
  40f98c:	add    al,0x63
  40f98e:	and    BYTE PTR [edi],bh
  40f990:	pop    es
  40f991:	jl     0x40f9ce
  40f993:	jns    0x40f948
  40f995:	jb     0x40f9af
  40f997:	out    0x94,eax
  40f999:	fldcw  WORD PTR [esi-0x26181fd]
  40f99f:	sbb    edi,esi
  40f9a1:	inc    edi
  40f9a2:	jae    0x40f957
  40f9a4:	cmp    esi,ecx
  40f9a6:	in     eax,0x9b
  40f9a8:	arpl   WORD PTR [ebp-0x398a5318],bp
  40f9ae:	std    
  40f9af:	add    ebp,DWORD PTR [edx-0x72fcacaa]
  40f9b5:	mov    esi,0x3aff36d0
  40f9ba:	jne    0x40fa05
  40f9bc:	or     BYTE PTR [eax-0x3f],cl
  40f9bf:	ss jmp 0x40fa09
  40f9c2:	xor    edi,esp
  40f9c4:	adc    BYTE PTR [ebp+0x13],dl
  40f9c7:	lods   eax,DWORD PTR ds:[esi]
  40f9c8:	icebp  
  40f9c9:	fldenv [edx]
  40f9cb:	mov    al,0xe9
  40f9cd:	int    0xf9
  40f9cf:	lods   al,BYTE PTR ds:[esi]
  40f9d0:	imul   ebx,DWORD PTR [ebx-0x6b],0x74
  40f9d4:	cmp    ecx,DWORD PTR [eax-0x6f]
  40f9d7:	lods   al,BYTE PTR ds:[esi]
  40f9d8:	dec    ebx
  40f9d9:	outs   dx,DWORD PTR ds:[esi]
  40f9da:	mov    BYTE PTR [esi],dh
  40f9dc:	(bad)  
  40f9dd:	cmp    dl,BYTE PTR [edx+0x4e]
  40f9e0:	rol    BYTE PTR [edi+0x77],0x46
  40f9e4:	mov    edi,0x8fc0747
  40f9e9:	dec    eax
  40f9ea:	jb     0x40f9cd
  40f9ec:	mov    ebp,fs
  40f9ee:	pop    ecx
  40f9ef:	data16 add BYTE PTR [eax],al
	...
  40f9fa:	add    BYTE PTR [eax],al
  40f9fc:	push   ebx
  40f9fd:	dec    eax
  40f9fe:	jb     0x40f9f5
  40fa00:	dec    ebx
  40fa01:	into   
  40fa02:	push   cs
  40fa03:	inc    ecx
  40fa04:	mov    ah,0xa6
  40fa06:	test   DWORD PTR [esi+0xf],0x8c6a129f
  40fa0d:	inc    edi
  40fa0e:	je     0x40f9fd
  40fa10:	ja     0x40f9d8
  40fa12:	cli    
  40fa13:	in     al,0x28
  40fa15:	push   esi
  40fa16:	sub    DWORD PTR [eax+ebx*4+0x3fee725e],0x7
  40fa1e:	pop    eax
  40fa1f:	xor    BYTE PTR [esi],dh
  40fa21:	jae    0x40fa29
  40fa23:	dec    eax
  40fa24:	fcom   st(5)
  40fa26:	inc    ebp
  40fa27:	jmp    0xac7f3951
  40fa2c:	mov    ebp,cs
  40fa2e:	call   ecx
  40fa30:	xor    al,0xa8
  40fa32:	int    0x2b
  40fa34:	or     BYTE PTR [ebx-0x7d],ah
  40fa37:	ins    BYTE PTR es:[edi],dx
  40fa38:	pop    eax
  40fa39:	pop    esi
  40fa3a:	jno    0x40fa33
  40fa3c:	dec    ebp
  40fa3d:	into   
  40fa3e:	adc    bl,dh
  40fa40:	out    0x5a,al
  40fa42:	out    dx,al
  40fa43:	add    DWORD PTR [esi-0x499f07b9],edi
  40fa49:	sbb    ch,BYTE PTR [edi-0x17]
  40fa4c:	hlt    
  40fa4d:	popa   
  40fa4e:	push   es
  40fa4f:	shl    DWORD PTR [ebp-0x3f],1
  40fa52:	div    DWORD PTR [esi+0x2f29f72]
  40fa58:	pushf  
  40fa59:	cmp    DWORD PTR ds:0xf76f26a6,edx
  40fa5f:	adc    al,0x0
	...
  40fa69:	add    BYTE PTR [eax],al
  40fa6b:	add    bl,bl
  40fa6d:	xor    dh,BYTE PTR ds:[esp+ebx*4]
  40fa71:	inc    ebp
  40fa72:	mov    WORD PTR [edi+eax*4],?
  40fa75:	fild   DWORD PTR [edx]
  40fa77:	add    BYTE PTR [edx+eiz*4],dh
  40fa7a:	cmp    edi,DWORD PTR [ebp+0x76]
  40fa7d:	(bad)  
  40fa7e:	in     eax,dx
  40fa7f:	mov    esp,ebx
  40fa81:	jb     0x40fa06
  40fa83:	cmp    BYTE PTR [esi-0x3c00f86d],bl
  40fa89:	neg    bh
  40fa8b:	inc    ecx
  40fa8c:	lods   al,BYTE PTR ds:[esi]
  40fa8d:	stc    
  40fa8e:	clc    
  40fa8f:	sub    ebx,esi
  40fa91:	cdq    
  40fa92:	int    0xc2
  40fa94:	and    BYTE PTR [edx-0x7d],0x7d
  40fa98:	cmp    ah,BYTE PTR [edi+eax*1-0x7b]
  40fa9c:	jno    0x40fafd
  40fa9e:	push   es
  40fa9f:	add    ch,dh
  40faa1:	stc    
  40faa2:	in     al,dx
  40faa3:	outs   dx,BYTE PTR ds:[esi]
  40faa4:	aad    0xb3
  40faa6:	repnz mov edx,DWORD PTR [edx-0x48]
  40faaa:	add    al,0x45
  40faac:	(bad)  
  40faad:	fs push es
  40faaf:	push   eax
  40fab0:	jmp    0xa6290948
  40fab5:	xchg   edi,eax
  40fab6:	idiv   edi
  40fab8:	stc    
  40fab9:	xchg   ebx,eax
  40faba:	adc    bh,bh
  40fabc:	ret    
  40fabd:	dec    ecx
  40fabe:	loopne 0x40fa79
  40fac0:	mov    bh,cl
  40fac2:	clc    
  40fac3:	mov    DWORD PTR [ebx+0xe],edx
  40fac6:	outs   dx,BYTE PTR ds:[esi]
  40fac7:	add    BYTE PTR [ecx],bl
  40fac9:	xchg   ebx,eax
  40faca:	adc    bh,bh
  40facc:	ret    
  40facd:	inc    esi
  40face:	loopne 0x40fb19
	...
  40fadc:	es stc 
  40fade:	clc    
  40fadf:	mov    ebp,ebx
  40fae1:	jb     0x40fa66
  40fae3:	cmp    DWORD PTR [esi],ecx
  40fae5:	xchg   ebx,eax
  40fae6:	pop    es
  40fae7:	inc    ebx
  40fae9:	adc    ah,al
  40faeb:	in     eax,dx
  40faec:	aas    
  40faed:	cli    
  40faee:	clc    
  40faef:	sub    ebx,DWORD PTR [esi-0x1d3d3268]
  40faf5:	popa   
  40faf6:	div    DWORD PTR [ebp-0xa]
  40faf9:	stc    
  40fafa:	jb     0x40fb10
  40fafc:	imul   esp
  40fafe:	ss int3 
  40fb00:	enter  0xfe6e,0xfe
  40fb04:	dec    edx
  40fb05:	push   esp
  40fb06:	pushf  
  40fb07:	xchg   edx,eax
  40fb08:	mov    ecx,0xb70aacc4
  40fb0d:	inc    esi
  40fb0e:	std    
  40fb0f:	(bad)  
  40fb10:	and    dl,al
  40fb12:	fwait
  40fb13:	lds    edx,FWORD PTR [esi]
  40fb15:	mov    ebp,0x4b72aac
  40fb1a:	mov    ebx,0x453bebc1
  40fb1f:	cmp    ecx,DWORD PTR [edx]
  40fb21:	mov    ah,0x31
  40fb23:	lea    eax,[eax+0x2ff0c06]
  40fb29:	xor    BYTE PTR [ebp+0x368c3f74],ch
  40fb2f:	or     al,0x68
  40fb31:	push   cs
  40fb32:	cld    
  40fb33:	out    0xd9,eax
  40fb35:	jge    0x40fae3
  40fb37:	(bad)  
  40fb38:	in     al,dx
  40fb39:	jnp    0x40fb37
  40fb3b:	test   BYTE PTR [ebp+0x43a],ah
	...
  40fb49:	add    BYTE PTR [eax],al
  40fb4b:	add    BYTE PTR [eax-0x12],cl
  40fb4e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fb4f:	out    0x6a,eax
  40fb51:	fisubr DWORD PTR [esi+edi*8-0x36b383f4]
  40fb58:	xor    eax,0xe9e90427
  40fb5d:	cmp    al,BYTE PTR [eax+eax*1]
  40fb60:	je     0x40fb20
  40fb62:	scas   al,BYTE PTR es:[edi]
  40fb63:	or     al,0xe8
  40fb65:	mov    esi,0x3bf700f6
  40fb6a:	(bad)  
  40fb6c:	push   ds
  40fb6d:	pop    edi
  40fb6e:	add    eax,DWORD PTR [eax]
  40fb70:	not    eax
  40fb72:	inc    edi
  40fb73:	hlt    
  40fb74:	ins    BYTE PTR es:[edi],dx
  40fb75:	aas    
  40fb76:	push   0x2
  40fb78:	cmp    cl,BYTE PTR [edx]
  40fb7a:	sbb    DWORD PTR [eax],eax
  40fb7c:	inc    edi
  40fb7d:	cmc    
  40fb7e:	daa    
  40fb7f:	or     bh,cl
  40fb81:	arpl   ax,bp
  40fb83:	dec    edx
  40fb84:	fadd   DWORD PTR [esp+edx*1+0x4]
  40fb88:	ror    dh,1
  40fb8a:	stc    
  40fb8b:	test   al,0x43
  40fb8d:	pop    ebx
  40fb8e:	test   DWORD PTR [ebp-0x37],esp
  40fb91:	inc    esp
  40fb92:	cmp    DWORD PTR [ebp+0x2b],0xb0eb6c6f
  40fb99:	iret   
  40fb9a:	loopne 0x40fb44
  40fb9c:	and    ecx,DWORD PTR [edi-0x7a]
  40fb9f:	inc    ecx
  40fba0:	push   ss
  40fba1:	inc    esp
  40fba2:	popa   
  40fba3:	fstp   QWORD PTR [eax-0x5c]
  40fba6:	ss (bad) 
  40fba8:	in     al,0x62
  40fbaa:	in     al,0xd5
  40fbac:	add    al,0x5e
  40fbae:	inc    esi
  40fbaf:	cwde   
	...
  40fbbc:	add    BYTE PTR [esi+ebp*8+0x7a],0x33
  40fbc1:	aaa    
  40fbc2:	aam    0x3
  40fbc4:	jo     0x40fb94
  40fbc6:	fldcw  WORD PTR [eax+0x35455ae3]
  40fbcc:	push   0xab7d2144
  40fbd1:	outs   dx,BYTE PTR ds:[esi]
  40fbd2:	ins    BYTE PTR es:[edi],dx
  40fbd3:	jmp    0x40fc25
  40fbd5:	iret   
  40fbd6:	loopne 0x40fb80
  40fbd8:	ret    
  40fbd9:	dec    esi
  40fbda:	push   es
  40fbdb:	adc    esi,edx
  40fbdd:	inc    ebx
  40fbde:	add    ebp,ebx
  40fbe0:	js     0x40fb86
  40fbe2:	mov    BYTE PTR ss:[ebx+eiz*2],0xf0
  40fbe7:	out    dx,al
  40fbe8:	push   esp
  40fbe9:	aad    0xae
  40fbeb:	add    esi,DWORD PTR [eax-0x62]
  40fbee:	aad    0x7c
  40fbf0:	mov    bl,0x3a
  40fbf2:	ins    DWORD PTR es:[edi],dx
  40fbf3:	fwait
  40fbf4:	cld    
  40fbf5:	and    esi,ecx
  40fbf7:	(bad)  
  40fbf8:	fnsave [eax]
  40fbfa:	xchg   edi,eax
  40fbfb:	test   al,0x0
  40fbfd:	inc    esp
  40fbfe:	out    dx,al
  40fbff:	mov    al,0x7
  40fc01:	loopne 0x40fbd8
  40fc03:	adc    BYTE PTR [esi-0x63],bh
  40fc06:	push   es
  40fc07:	leave  
  40fc08:	jae    0x40fbc0
  40fc0a:	out    dx,al
  40fc0b:	or     ah,BYTE PTR [edx-0x61]
  40fc0e:	jmp    0x73eb:0x703b19e2
  40fc15:	jp     0x40fc42
  40fc17:	mov    ebx,0xc2ea9f4b
  40fc1c:	add    DWORD PTR [ebx-0x74],eax
  40fc1f:	xor    al,0x0
	...
  40fc29:	add    BYTE PTR [eax],al
  40fc2b:	add    BYTE PTR [ebx-0x20],bl
  40fc2e:	(bad)
  40fc31:	cmp    al,BYTE PTR [ebx]
  40fc33:	jle    0x40fc9a
  40fc35:	pusha  
  40fc36:	push   ecx
  40fc37:	mov    DWORD PTR ds:0xd972e2af,ebx
  40fc3d:	cmp    bh,BYTE PTR [esp+eiz*4]
  40fc40:	jo     0x40fc12
  40fc42:	add    DWORD PTR [edx-0x37],esp
  40fc45:	inc    edx
  40fc46:	in     al,dx
  40fc47:	jmp    0x6ec9:0x46e29f03
  40fc4e:	div    DWORD PTR [eax+ecx*4+0x6cbcf793]
  40fc55:	cmp    esp,DWORD PTR [esi+0xc448f36]
  40fc5b:	sub    DWORD PTR [ecx],ecx
  40fc5d:	push   esp
  40fc5e:	not    DWORD PTR [eax+eiz*4-0x607665c5]
  40fc65:	inc    esp
  40fc66:	sub    al,0x29
  40fc68:	scas   eax,DWORD PTR es:[edi]
  40fc69:	sbb    ebp,eax
  40fc6b:	(bad)  
  40fc6d:	fld    DWORD PTR [ecx+0x1d]
  40fc70:	mov    bl,0x13
  40fc72:	mov    ch,BYTE PTR [eax+edi*1+0x2ca48993]
  40fc79:	xchg   ebx,eax
  40fc7a:	push   esp
  40fc7b:	shr    DWORD PTR [ebp+0x48],1
  40fc7e:	clc    
  40fc7f:	ficom  WORD PTR [edx-0x39292962]
  40fc85:	es out dx,eax
  40fc87:	(bad)  
  40fc88:	mov    al,0x43
  40fc8a:	clc    
  40fc8b:	add    BYTE PTR [ebp+0xd679],cl
	...
  40fc99:	add    BYTE PTR [eax],al
  40fc9b:	add    BYTE PTR [edx],ch
  40fc9d:	ins    BYTE PTR es:[edi],dx
  40fc9e:	cmp    DWORD PTR [ebp-0x7a],0x67
  40fca2:	jb     0x40fcbb
  40fca4:	xchg   ecx,eax
  40fca5:	je     0x40fc79
  40fca7:	(bad)  
  40fca8:	sti    
  40fca9:	cs stc 
  40fcab:	jne    0x40fc8f
  40fcad:	or     DWORD PTR [ebx+0x8],esi
  40fcb0:	popa   
  40fcb1:	xchg   esp,eax
  40fcb2:	push   ds
  40fcb3:	(bad)  
  40fcb4:	jmp    0x40fce4
  40fcb6:	loopne 0x40fcba
  40fcb8:	jne    0x40fcc4
  40fcba:	stc    
  40fcbb:	inc    edi
  40fcbc:	mov    ch,0x8b
  40fcbe:	dec    BYTE PTR [edi]
  40fcc0:	sbb    al,0x16
  40fcc2:	cli    
  40fcc3:	call   DWORD PTR [ecx]
  40fcc5:	or     dh,BYTE PTR [ebx-0xc]
  40fcc8:	inc    esi
  40fcc9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fcca:	push   WORD PTR [ecx]
  40fccd:	iret   
  40fcce:	push   es
  40fccf:	add    BYTE PTR [esi-0x3336a89a],bl
  40fcd5:	push   edx
  40fcd6:	push   es
  40fcd7:	push   ebp
  40fcd8:	add    eax,0xabff50db
  40fcdd:	ds loopne 0x40fcb2
  40fce0:	xor    BYTE PTR [ecx],cl
  40fce2:	stc    
  40fce3:	push   0x458359
  40fce8:	adc    DWORD PTR [esi+ecx*1-0x18],esi
  40fcec:	retf   0x67a
  40fcef:	add    BYTE PTR [ebp+0x26],dl
  40fcf2:	jae    0x40fcf9
  40fcf4:	xchg   ecx,eax
  40fcf5:	inc    ebp
  40fcf7:	or     BYTE PTR [esi+0x0],cl
  40fcfa:	clc    
  40fcfb:	push   DWORD PTR [ecx]
  40fcfd:	jae    0x40fd0d
  40fcff:	call   0x40fd04
	...
  40fd0c:	out    dx,eax
  40fd0d:	pop    eax
  40fd0e:	idiv   edi
  40fd10:	sar    DWORD PTR [edi],1
  40fd12:	arpl   WORD PTR [ecx+0xe],ax
  40fd15:	or     DWORD PTR [ebx+0x8],esi
  40fd18:	leave  
  40fd19:	fidiv  WORD PTR [ecx+0x4b]
  40fd1c:	test   DWORD PTR [ebx+0x4],0x597370b
  40fd23:	pop    edi
  40fd24:	cs push cs
  40fd26:	cld    
  40fd27:	(bad)  
  40fd28:	in     al,dx
  40fd29:	cmp    al,0xc4
  40fd2b:	mov    eax,0xfea0f8e8
  40fd30:	in     eax,0xc1
  40fd32:	jmp    0x40fd3a
  40fd34:	(bad)  
  40fd35:	in     al,dx
  40fd36:	mov    al,ds:0x76d3ff74
  40fd3b:	dec    ecx
  40fd3c:	test   DWORD PTR [ebx-0x3],0x41474abf
  40fd43:	leave  
  40fd44:	mov    ch,0x33
  40fd46:	add    al,0x68
  40fd48:	out    dx,al
  40fd49:	inc    cx
  40fd4b:	add    BYTE PTR [eax+0x36e7fc3e],ch
  40fd51:	test   DWORD PTR [edx],eax
  40fd53:	add    ah,ch
  40fd55:	mov    esi,DWORD PTR [esi]
  40fd57:	or     DWORD PTR [eax-0xd710fea],edx
  40fd5d:	out    0x71,eax
  40fd5f:	inc    eax
  40fd60:	mul    DWORD PTR [ebx]
  40fd62:	cmp    BYTE PTR [ebp+0x36],ah
  40fd65:	dec    esp
  40fd66:	mov    eax,ds:0xd893ff74
  40fd6b:	dec    edx
  40fd6c:	test   DWORD PTR [ebx-0x3],0xbf
	...
  40fd7b:	add    dl,ch
  40fd7d:	inc    edx
  40fd7e:	mov    eax,ds:0x6b8eb74
  40fd83:	mov    al,0x81
  40fd85:	or     al,BYTE PTR [eax+ebp*2]
  40fd88:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fd89:	out    dx,al
  40fd8a:	inc    edx
  40fd8b:	add    BYTE PTR [eax-0x2a],al
  40fd8e:	sti    
  40fd8f:	out    0xea,eax
  40fd91:	hlt    
  40fd92:	add    eax,DWORD PTR [eax]
  40fd94:	cld    
  40fd95:	mov    esi,DWORD PTR [esi]
  40fd97:	or     DWORD PTR [eax],ebp
  40fd99:	mov    esi,0x77fa8eef
  40fd9e:	jno    0x40fde0
  40fda0:	mul    DWORD PTR [edx-0x5b]
  40fda3:	add    esi,edi
  40fda5:	(bad)  
  40fda6:	in     eax,dx
  40fda7:	inc    esp
  40fda8:	ds and al,0xe6
  40fdab:	add    ebp,DWORD PTR [edx+0x3481b9ed]
  40fdb1:	sbb    BYTE PTR ss:[ebp+0x5f],cl
  40fdb5:	fs inc edx
  40fdb7:	inc    ebx
  40fdb8:	idiv   DWORD PTR [edi]
  40fdba:	cmp    edi,esp
  40fdbc:	fcomp  DWORD PTR [esi]
  40fdbe:	and    eax,0xad6bf704
  40fdc3:	das    
  40fdc4:	stc    
  40fdc5:	lahf   
  40fdc6:	aaa    
  40fdc7:	mov    ebx,0x43ed67b6
  40fdcc:	ins    BYTE PTR es:[edi],dx
  40fdcd:	xor    esp,DWORD PTR [ebp+0x27]
  40fdd0:	out    dx,eax
  40fdd1:	dec    ebx
  40fdd2:	out    dx,eax
  40fdd3:	pop    edi
  40fdd4:	xor    BYTE PTR [ecx+0x7ad2eed],al
  40fdda:	push   es
  40fddb:	call   FWORD PTR [ebx]
  40fddd:	mov    ds:0xa4ed,al
	...
  40fdea:	add    BYTE PTR [eax],al
  40fdec:	and    ebp,DWORD PTR [ebx+0x55]
  40fdef:	ins    DWORD PTR es:[edi],dx
  40fdf0:	cmp    eax,0x48f8ed63
  40fdf5:	mov    dh,0xe7
  40fdf7:	inc    esp
  40fdf8:	and    DWORD PTR [edx],ebp
  40fdfa:	sub    al,0x0
  40fdfc:	imul   ebx
  40fdfe:	ret    0x5dfb
  40fe01:	test   DWORD PTR [ebp-0x1b],ebp
  40fe04:	push   DWORD PTR [esi+0x6e2183d6]
  40fe0a:	mov    cl,0xf
  40fe0c:	ja     0x40fd8e
  40fe0e:	repz das 
  40fe10:	add    bl,ah
  40fe12:	fmul   DWORD PTR [eax-0x3d]
  40fe15:	ins    BYTE PTR es:[edi],dx
  40fe16:	ins    DWORD PTR es:[edi],dx
  40fe17:	in     eax,0xa3
  40fe19:	mov    dh,0xe2
  40fe1b:	cmp    ecx,0xffffffc2
  40fe1e:	jp     0x40fe20
  40fe20:	cmp    DWORD PTR [eax-0x33],ebp
  40fe23:	cmp    al,0x77
  40fe25:	add    BYTE PTR [esi],0xe9
  40fe28:	rcr    DWORD PTR [ecx],1
  40fe2a:	shl    BYTE PTR [eax+edx*2-0xb1607c0],0x27
  40fe32:	inc    edx
  40fe33:	loope  0x40fe29
  40fe35:	bound  eax,QWORD PTR [esi]
  40fe37:	jmp    0xc24fbcbb
  40fe3c:	mov    edi,0x200e37e2
  40fe41:	mov    WORD PTR [ebx+0x733f9f3c],es
  40fe47:	fist   DWORD PTR [ebx-0xb17015a]
  40fe4d:	bound  eax,QWORD PTR [esi]
  40fe4f:	sbb    al,0x0
	...
  40fe59:	add    BYTE PTR [eax],al
  40fe5b:	add    bh,bh
  40fe5d:	daa    
  40fe5e:	inc    edx
  40fe5f:	popf   
  40fe60:	cmc    
  40fe61:	bound  eax,QWORD PTR [esi]
  40fe63:	jmp    0x253052c7
  40fe68:	mov    esp,DWORD PTR [edx+0x6]
  40fe6b:	jmp    0xa74db464
  40fe70:	stos   DWORD PTR es:[edi],eax
  40fe71:	pop    edi
  40fe72:	mov    edi,0xf83f4f2c
  40fe77:	jmp    0xc578e170
  40fe7c:	loope  0x40fee3
  40fe7e:	mul    DWORD PTR [esp+ebx*2-0x3ed1ffb4]
  40fe85:	cmp    al,BYTE PTR [edi]
  40fe87:	jmp    0xc4c46180
  40fe8c:	cwde   
  40fe8d:	bound  esi,QWORD PTR [ecx-0x16]
  40fe90:	stos   BYTE PTR es:[edi],al
  40fe91:	push   0x8074ae26
  40fe96:	push   es
  40fe97:	mov    ah,0xe4
  40fe99:	in     al,dx
  40fe9a:	jns    0x40fe8d
  40fe9c:	outs   dx,DWORD PTR ds:[esi]
  40fe9d:	pop    ebx
  40fe9e:	xchg   dh,bl
  40fea0:	push   esp
  40fea1:	mov    dh,0x10
  40fea3:	imul   ebx,DWORD PTR [ebx],0xe4942662
  40fea9:	xchg   edi,eax
  40feaa:	jmp    0x40feac
  40feac:	and    BYTE PTR [ecx+0x3ea60140],bh
  40feb2:	inc    ecx
  40feb3:	sub    BYTE PTR [ecx+0x63],0x71
  40feb7:	cmc    
  40feb8:	imul   esi,DWORD PTR [esi+0x3f],0x7166d980
  40febf:	fild   WORD PTR [eax]
	...
  40fec9:	add    BYTE PTR [eax],al
  40fecb:	add    BYTE PTR [ecx-0x57],dl
  40fece:	repnz add BYTE PTR [esi],cl
  40fed1:	arpl   WORD PTR [esi],ax
  40fed3:	mov    esp,DWORD PTR [ebx-0x19827492]
  40fed9:	or     eax,0x4ee98026
  40fede:	jae    0x40fefc
  40fee0:	nop
  40fee1:	push   0x6
  40fee3:	jmp    DWORD PTR [ebx]
  40fee5:	fist   DWORD PTR [ecx-0x18]
  40fee8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fee9:	add    al,0xf9
  40feeb:	inc    ebp
  40feed:	and    dh,BYTE PTR [ebx+0x6]
  40fef0:	or     DWORD PTR [ecx+0x62d2c2cd],esp
  40fef6:	mov    esi,edi
  40fef8:	loopne 0x40fefb
  40fefa:	inc    ebx
  40fefb:	hlt    
  40fefc:	shl    esi,1
  40fefe:	cmp    BYTE PTR [eax],al
  40ff00:	mov    ds:0x2275f8ff,eax
  40ff05:	jns    0x40fef5
  40ff07:	or     al,0x18
  40ff09:	add    bh,cl
  40ff0b:	pop    edi
  40ff0c:	dec    eax
  40ff0d:	das    
  40ff0e:	mov    BYTE PTR [esi+ecx*4],0x7b
  40ff12:	mov    ebp,esp
  40ff14:	or     eax,0x9156c02b
  40ff19:	in     eax,0x7a
  40ff1b:	adc    al,0x5e
  40ff1d:	push   esi
  40ff1e:	or     eax,0x4c9d6b83
  40ff23:	inc    ecx
  40ff24:	dec    esi
  40ff25:	bound  esi,QWORD PTR [ecx+0x6]
  40ff28:	cmp    DWORD PTR [ebp+ecx*8-0x749db13e],esp
  40ff2f:	inc    ebp
	...
  40ff3c:	idiv   DWORD PTR [edi]
  40ff3e:	fild   DWORD PTR [ebx+ecx*4]
  40ff41:	sahf   
  40ff42:	inc    ecx
  40ff43:	add    BYTE PTR [eax],al
  40ff45:	leave  
  40ff46:	pop    edi
  40ff47:	add    bh,dh
  40ff49:	dec    ebx
  40ff4a:	fild   DWORD PTR [edi+eiz*2]
  40ff4d:	mov    BYTE PTR [ecx+0x0],0xe8
  40ff51:	enter  0x7b,0xf7
  40ff55:	dec    ebx
  40ff56:	fild   DWORD PTR [ebx+eax*2]
  40ff59:	into   
  40ff5a:	inc    edx
  40ff5b:	add    al,dh
  40ff5d:	enter  0x88,0xf7
  40ff61:	dec    ebx
  40ff62:	xchg   edi,eax
  40ff63:	inc    esp
  40ff64:	jmp    0x40ffc1
  40ff66:	xchg   ebp,eax
  40ff67:	inc    esp
  40ff68:	out    dx,eax
  40ff69:	pop    ebx
  40ff6a:	xchg   ebp,eax
  40ff6b:	inc    esp
  40ff6c:	jecxz  0x40ffc9
  40ff6e:	mov    ds:0x429d8b34,eax
  40ff73:	add    al,dl
  40ff75:	pop    esi
  40ff76:	repnz out 0x89,eax
  40ff79:	add    esp,DWORD PTR [ebp-0x55718d02]
  40ff7f:	dec    edi
  40ff80:	push   0xffffff86
  40ff82:	mov    dh,0x4f
  40ff84:	or     BYTE PTR [esi-0x957b06e],0x4f
  40ff8b:	lea    esi,[esi]
  40ff8d:	dec    esp
  40ff8e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ff8f:	je     0x40ff98
  40ff91:	in     al,0x5f
  40ff93:	not    DWORD PTR [eax-0x54bb693c]
  40ff99:	sti    
  40ff9a:	xchg   esi,eax
  40ff9b:	inc    esp
  40ff9c:	xchg   edi,eax
  40ff9d:	sti    
  40ff9e:	xchg   esi,eax
  40ff9f:	inc    esp
	...
  40ffac:	xchg   ebx,eax
  40ffad:	sti    
  40ffae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ffaf:	xor    al,0xa7
  40ffb1:	mov    ch,0x42
  40ffb3:	add    BYTE PTR [eax-0xa],ch
  40ffb6:	repz out 0x6d,eax
  40ffb9:	jae    0x40ff5f
  40ffbb:	(bad)  
  40ffbc:	pop    eax
  40ffbd:	neg    BYTE PTR [edi+0x3962ba8e]
  40ffc3:	mov    ds:0x48691ec3,al
  40ffc8:	pop    ds
  40ffc9:	and    eax,0x3d38b3ab
  40ffce:	out    dx,al
  40ffcf:	add    eax,DWORD PTR [edx-0x62ccce59]
  40ffd5:	arpl   WORD PTR [ebx-0x7c9d72fd],dx
  40ffdb:	add    ecx,DWORD PTR [ebp+0x2b485a62]
  40ffe1:	xchg   edx,eax
  40ffe2:	loopne 0x40ffdb
  40ffe4:	dec    ebp
  40ffe5:	test   eax,0x22ec042e
  40ffea:	loope  0x40ff73
  40ffec:	out    dx,al
  40ffed:	arpl   bp,bp
  40ffef:	add    esi,DWORD PTR [esi+edi*4-0x63]
  40fff3:	add    al,0xf8
  40fff5:	out    0xed,al
  40fff7:	add    dh,bh
  40fff9:	bound  esp,QWORD PTR [edi+ecx*2-0x55]
  40fffd:	js     0x410019
  40ffff:	test   al,0x1
  410001:	in     al,0x99
  410003:	add    al,0xf7
  410005:	bound  ebx,QWORD PTR [ecx+0x65134b8d]
  41000b:	pop    ds
  41000c:	fwait
  41000d:	call   0x41d02c
	...
  41001a:	add    BYTE PTR [eax],al
  41001c:	xchg   ebp,eax
  41001d:	popa   
  41001e:	jl     0x410088
  410020:	test   eax,0x3b91a9b6
  410025:	inc    edi
  410026:	jno    0x41003f
  410028:	(bad)  
  410029:	dec    ebx
  41002a:	mov    esi,0x6c62f74b
  41002f:	pop    ds
  410030:	mov    esp,DWORD PTR [ebx-0x18]
  410033:	xchg   DWORD PTR [edx+0x7403ed63],esi
  410039:	mov    esi,0xe700045d
  41003e:	sub    DWORD PTR [edi+esi*8],eax
  410041:	bound  ebp,QWORD PTR [edi+ebx*1+0x5b]
  410045:	arpl   WORD PTR [esi],ax
  410047:	out    0x70,al
  410049:	cli    
  41004a:	push   es
  41004b:	jmp    0x25b33c44
  410050:	fwait
  410051:	jnp    0x4100ac
  410053:	push   ds
  410054:	xchg   esi,eax
  410055:	jmp    0x410098
  410057:	and    DWORD PTR [esi+0x80efab7],edx
  41005d:	sub    edi,eax
  41005f:	jl     0x40ffe1
  410061:	inc    esp
  410062:	pop    eax
  410063:	pushf  
  410064:	push   edi
  410065:	cmp    eax,0xa1d18b6f
  41006a:	push   es
  41006b:	add    DWORD PTR [eax-0x5b],edx
  41006e:	push   es
  41006f:	jmp    0x44a5cb38
  410074:	mov    ah,0x62
  410076:	neg    DWORD PTR [ebx+ebp*1+0x44]
  41007a:	and    BYTE PTR [eax],0xfb
  41007d:	bound  ecx,QWORD PTR [ebx]
  41007f:	test   eax,0x0
	...
  41008c:	add    BYTE PTR [ebx+0x6e],bl
  41008f:	push   eax
  410090:	sbb    BYTE PTR [edx-0x5b4a3efa],ah
  410096:	push   es
  410097:	jmp    0xcaecba0
  41009c:	xor    al,0x63
  41009e:	not    DWORD PTR [ebx+esi*4]
  4100a1:	inc    ebx
  4100a2:	outs   dx,BYTE PTR ds:[esi]
  4100a3:	and    bl,dh
  4100a5:	bound  ecx,QWORD PTR [ebx]
  4100a7:	test   eax,0xf86e5b08
  4100ac:	shl    DWORD PTR [ecx-0x5ae66efa],1
  4100b2:	push   es
  4100b3:	jmp    0x4b6cb9c
  4100b8:	xor    al,0x63
  4100ba:	neg    esp
  4100bc:	mov    esp,0xf4b04a43
  4100c1:	bound  ecx,QWORD PTR [ebx]
  4100c3:	sub    ecx,esp
  4100c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4100c6:	outs   dx,BYTE PTR ds:[esi]
  4100c7:	jmp    0xfa4cc0
  4100cc:	mov    cl,0x54
  4100ce:	or     ch,al
  4100d0:	das    
  4100d1:	js     0x4100ca
  4100d3:	jmp    DWORD PTR [ecx]
  4100d5:	adc    eax,0x5f9f8ea0
  4100da:	div    DWORD PTR [ebp+0x42]
  4100dd:	pop    es
  4100de:	push   ebp
  4100df:	pop    ecx
  4100e0:	loope  0x4100e4
  4100e2:	stc    
  4100e3:	jne    0x4100c7
  4100e5:	add    dh,BYTE PTR [ebx-0xc]
  4100e8:	add    DWORD PTR [ebp+0xa],edx
  4100eb:	call   0x387965
	...
  4100fc:	and    DWORD PTR [ebp-0xa],edx
  4100ff:	call   FWORD PTR [ebx+0x3275f907]
  410105:	pop    es
  410106:	imul   ebx,DWORD PTR [ecx+0x11],0xffffffdb
  41010a:	clc    
  41010b:	jne    0x410147
  41010d:	(bad)  [edx-0x24]
  410110:	and    DWORD PTR [ecx+0xa],ebx
  410113:	call   0x387939
  410118:	mov    cl,0x5c
  41011a:	into   
  41011b:	call   0x38a43e
  410120:	add    DWORD PTR [ecx-0x33],edi
  410123:	ret    0x66ae
  410126:	push   ecx
  410127:	mov    esp,DWORD PTR [edx-0x1a]
  41012a:	ret    
  41012b:	call   0x553857d
  410130:	shr    ebx,1
  410132:	adc    al,0x1
  410134:	sahf   
  410135:	mov    WORD PTR [ebp+0x2a],ax
  410139:	outs   dx,DWORD PTR ds:[esi]
  41013a:	mov    DWORD PTR [ebp+0x76],eax
  41013d:	outs   dx,DWORD PTR ds:[esi]
  41013e:	mov    DWORD PTR [ebp+0x22],eax
  410141:	outs   dx,DWORD PTR ds:[esi]
  410142:	ins    BYTE PTR es:[edi],dx
  410143:	add    ah,BYTE PTR [ecx]
  410145:	pop    esp
  410146:	push   ss
  410147:	call   0x39d34b
  41014c:	or     eax,0xf701fe84
  410151:	inc    eax
  410152:	(bad)  
  410153:	repnz test DWORD PTR [ebx+0x4],0x8777e2ff
  41015b:	inc    esp
  41015c:	addr16 adc al,0xd6
  41015f:	add    BYTE PTR fs:[eax],al
	...
  41016a:	add    BYTE PTR [eax],al
  41016c:	mov    dh,0x4b
  41016e:	cdq    
  41016f:	je     0x4101b8
  410171:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410172:	ja     0x4101ba
  410174:	test   DWORD PTR [ebx+0xd],0xbabef0c0
  41017b:	(bad)  
  41017c:	cmp    BYTE PTR [edi+edx*4+0x44],cl
  410180:	sub    edi,esp
  410182:	xchg   esi,eax
  410183:	inc    esp
  410184:	das    
  410185:	fcom   QWORD PTR [esi+0x2ddc2344]
  41018b:	add    BYTE PTR [eax],bl
  41018d:	mov    bh,0xf3
  41018f:	out    0x19,eax
  410191:	xor    bl,BYTE PTR [ecx-0x65408b02]
  410197:	add    al,dh
  410199:	mov    esi,0x4bf8ff5b
  41019e:	cdq    
  41019f:	je     0x41018c
  4101a1:	mov    ds:0x4c3663a5,eax
  4101a6:	lods   al,BYTE PTR ds:[esi]
  4101a7:	inc    ebp
  4101a8:	cmp    BYTE PTR [esp+eax*1+0xb],cl
  4101ac:	mov    bh,0x40
  4101ae:	(bad)  
  4101af:	mov    ds:0x8d044bf7,al
  4101b4:	xor    bl,al
  4101b6:	xor    ecx,DWORD PTR [ebp-0x72cbfbc6]
  4101bc:	xor    dl,al
  4101be:	xor    ebp,DWORD PTR [edx-0xc]
  4101c1:	call   0x7ae011e4
  4101c6:	xchg   ecx,eax
  4101c7:	(bad)  
  4101c8:	mov    al,ds:0xf7f826cc
  4101cd:	inc    eax
  4101ce:	pop    DWORD PTR [edx+0x0]
	...
  4101dc:	test   DWORD PTR [ebx+0x4],0x5963328b
  4101e3:	sahf   
  4101e4:	shr    cl,1
  4101e6:	mov    ds:0x599f6baf,al
  4101eb:	xor    eax,DWORD PTR [edx+0x7a33559f]
  4101f1:	lahf   
  4101f2:	inc    ecx
  4101f3:	xor    ecx,ebp
  4101f5:	pop    esi
  4101f6:	cmp    BYTE PTR [eax],bl
  4101f8:	pop    es
  4101f9:	dec    ebx
  4101fa:	addr16 xchg ebp,eax
  4101fc:	push   ecx
  4101fd:	cmp    DWORD PTR [ebp+0x20],ebp
  410200:	dec    edi
  410201:	arpl   WORD PTR [edx+0x495f383e],bx
  410207:	lea    esi,[edi+0x319e1062]
  41020d:	cmp    DWORD PTR [ecx],esp
  41020f:	or     BYTE PTR [edi-0x18],ah
  410212:	scas   al,BYTE PTR es:[edi]
  410213:	add    esp,DWORD PTR [eax]
  410215:	cmp    ecx,edi
  410217:	popf   
  410218:	xor    DWORD PTR [edi+0x39],ebx
  41021b:	lea    esi,[edi+0x99de862]
  410221:	cmp    ecx,esp
  410223:	pop    ss
  410224:	or     ecx,DWORD PTR [edx-0x14]
  410227:	lahf   
  410228:	stc    
  410229:	cmp    BYTE PTR [ecx-0x129d20b9],ch
  41022f:	add    esi,edi
  410231:	jecxz  0x410235
  410233:	jo     0x4102a7
  410235:	mov    ds:0x8a649ced,al
  41023a:	ins    BYTE PTR es:[edi],dx
  41023b:	fbld   TBYTE PTR [eax+0x42ee9]
	...
  410249:	add    BYTE PTR [eax],al
  41024b:	add    al,cl
  41024d:	scas   eax,DWORD PTR es:[edi]
  41024e:	int    0x80
  410250:	add    ebp,edi
  410252:	addr16 inc ebx
  410254:	div    DWORD PTR [edi]
  410256:	sbb    dh,ch
  410258:	sbb    dl,al
  41025a:	push   ebx
  41025b:	inc    esp
  41025c:	mul    ebp
  41025e:	sub    ch,BYTE PTR [eax+esi*1-0x66500cc8]
  410265:	scas   al,BYTE PTR es:[edi]
  410266:	push   es
  410267:	in     eax,0x73
  410269:	scas   eax,DWORD PTR es:[edi]
  41026a:	push   cs
  41026b:	cmp    ebx,0xac66f83a
  410271:	and    dl,BYTE PTR [edi]
  410273:	jmp    0x6b2bee39
  410278:	aas    
  410279:	dec    esp
  41027a:	clc    
  41027b:	aam    0xfc
  41027d:	dec    edx
  41027e:	cmp    DWORD PTR [ebx+eax*4+0x69d96d39],ebx
  410285:	lahf   
  410286:	neg    BYTE PTR [ecx+0x410eaf73]
  41028c:	mov    ds:0xee26f794,eax
  410291:	and    dh,BYTE PTR [edx-0x1b]
  410294:	sub    eax,0xdee90f22
  410299:	push   edx
  41029a:	outs   dx,BYTE PTR ds:[esi]
  41029b:	cld    
  41029c:	shl    BYTE PTR [ecx+0x32b87406],1
  4102a2:	push   edi
  4102a3:	adc    DWORD PTR [ecx],eax
  4102a5:	pushf  
  4102a6:	div    esi
  4102a8:	jmp    DWORD PTR [edx]
  4102aa:	jb     0x410291
  4102ac:	cmp    eax,0xe90f22
	...
  4102b9:	add    BYTE PTR [eax],al
  4102bb:	add    BYTE PTR [ebx],bh
  4102bd:	lahf   
  4102be:	jmp    0x3964:0x662f4e8
  4102c5:	inc    edi
  4102c6:	push   edi
  4102c7:	into   
  4102c8:	add    DWORD PTR [ebx-0x12],ebp
  4102cb:	mov    ch,0x29
  4102cd:	cmp    al,bh
  4102cf:	repnz mov ah,0xb3
  4102d2:	add    BYTE PTR [edx-0xf],ch
  4102d5:	inc    esi
  4102d6:	pop    es
  4102d7:	xor    al,0xf1
  4102d9:	mov    eax,esi
  4102db:	mov    al,0xb6
  4102dd:	pop    edi
  4102de:	push   es
  4102df:	cmp    esi,ecx
  4102e1:	sub    ch,ah
  4102e3:	in     al,dx
  4102e4:	gs aas 
  4102e6:	je     0x4102d0
  4102e8:	xor    eax,0xa300c66c
  4102ed:	into   
  4102ee:	dec    edi
  4102ef:	xor    DWORD PTR [esi+0x64],0x71
  4102f3:	add    eax,0x10663c6
  4102f8:	sahf   
  4102f9:	loop   0x4102f9
  4102fb:	add    DWORD PTR [edx-0x383fd4a3],esp
  410301:	and    DWORD PTR [eax],eax
  410303:	add    BYTE PTR [ebp-0x41],bh
  410306:	mov    DWORD PTR [ecx+0x5e],eax
  410309:	call   0xd6bfef50
  41030e:	jb     0x410318
  410310:	(bad)  
  410311:	(bad)  
  410312:	push   edx
  410313:	dec    DWORD PTR [ecx]
  410315:	jecxz  0x410306
  410317:	add    DWORD PTR [edx+0x4cf88360],eax
  41031d:	push   eax
  41031e:	add    BYTE PTR [ebx+0x0],al
	...
  41032c:	pop    ebx
  41032d:	pop    es
  41032e:	clc    
  41032f:	je     0x410351
  410331:	dec    edx
  410332:	mov    eax,0x66bdcc9
  410337:	lea    edx,[ebx+0x7]
  41033a:	dec    eax
  41033b:	jmp    DWORD PTR [ebx+0x7392ee6b]
  410341:	(bad)  
  410342:	clc    
  410343:	add    DWORD PTR [esi],0x61
  410346:	jb     0x41034d
  410348:	(bad)  
  410349:	(bad)  
  41034a:	add    eax,0x7ae01075
  41034f:	in     al,dx
  410350:	ficom  WORD PTR [ebx+0x0]
  410353:	sub    ebx,DWORD PTR [esi-0x31f739d8]
  410359:	jmp    0x41039d
  41035b:	in     al,dx
  41035c:	(bad)  
  41035d:	fnstenv [edx+0x8]
  410360:	mov    dh,0x4f
  410362:	push   ecx
  410363:	call   FWORD PTR [ecx-0x2f8a399a]
  410369:	fnstsw WORD PTR [edx-0x14]
  41036c:	into   
  41036d:	push   ebx
  41036e:	add    BYTE PTR [ebx],ch
  410370:	test   DWORD PTR [ebx],0x4bffc1ca
  410376:	pop    DWORD PTR [ebx+edx*4+0x5c]
  41037a:	fwait
  41037b:	je     0x41036c
  41037d:	shl    DWORD PTR [esi],cl
  41037f:	push   ebp
  410380:	nop
  410381:	lods   eax,DWORD PTR ds:[esi]
  410382:	jg     0x41037b
  410384:	aaa    
  410385:	das    
  410386:	push   es
  410387:	add    DWORD PTR [edx],0xffffff90
  41038a:	add    dh,BYTE PTR [ebp-0xf]
  41038d:	push   eax
  41038e:	ret    0xc8
	...
  410399:	add    BYTE PTR [eax],al
  41039b:	add    BYTE PTR ds:0xb28d0444,dh
  4103a1:	ja     0x4103d5
  4103a3:	(bad)  
  4103a4:	jmp    0x9b74:0xc236ac33
  4103ab:	or     BYTE PTR [edi+0x6c],0x15
  4103af:	push   es
  4103b0:	je     0x4103b9
  4103b2:	mov    al,ds:0xe945cbff
  4103b7:	mov    edi,0xa8a2e
  4103bc:	add    BYTE PTR [edi],0xa0
  4103bf:	dec    edi
  4103c0:	sub    bh,cl
  4103c2:	or     ebp,eax
  4103c4:	std    
  4103c5:	(bad)  
  4103c6:	pushf  
  4103c7:	(bad)  
  4103c8:	je     0x41042e
  4103ca:	loop   0x410440
  4103cc:	stc    
  4103cd:	enter  0xec1d,0xf7
  4103d1:	scas   al,BYTE PTR es:[edi]
  4103d2:	add    eax,0xc1f3372b
  4103d7:	pop    es
  4103d8:	test   esi,0xa247ec46
  4103de:	loop   0x4103de
  4103e0:	bound  eax,QWORD PTR [esp+ebp*4+0x25]
  4103e4:	dec    edx
  4103e5:	sbb    eax,0x28328c9d
  4103ea:	xor    al,0xff
  4103ec:	dec    edx
  4103ed:	inc    esp
  4103ee:	lods   al,BYTE PTR ds:[esi]
  4103ef:	xchg   ebp,eax
  4103f0:	and    eax,DWORD PTR ds:0x62bf829d
  4103f6:	out    dx,al
  4103f7:	adc    eax,0x6a5e1ec
  4103fc:	sub    BYTE PTR [ebp+0x6c],bl
  4103ff:	sbb    BYTE PTR [eax],al
	...
  410409:	add    BYTE PTR [eax],al
  41040b:	add    BYTE PTR [ebx-0x33fded9e],bl
  410411:	and    dh,BYTE PTR [edi+0x4c62f0c5]
  410417:	imul   eax,DWORD PTR [edx+0x3388eda3],0x47
  41041e:	push   ds
  41041f:	cs iret 
  410421:	xor    eax,0x338f0bdb
  410426:	mov    dl,0x9a
  410428:	jno    0x4103f4
  41042a:	pop    ss
  41042b:	pop    eax
  41042c:	sub    BYTE PTR [ebx+0x5a],ah
  41042f:	inc    eax
  410430:	push   ebx
  410431:	xchg   edx,eax
  410432:	rol    DWORD PTR [eax+ebx*2],cl
  410435:	scas   eax,DWORD PTR es:[edi]
  410436:	jmp    0x45abcfd5
  41043b:	daa    
  41043c:	inc    ecx
  41043d:	xor    eax,0x6a36cc29
  410442:	in     eax,dx
  410443:	xor    BYTE PTR [esi+eax*2+0x6d],ch
  410447:	mov    edi,0x97aae72c
  41044c:	mov    eax,0x2033164a
  410451:	xor    eax,0x351b1001
  410456:	jae    0x41045f
  410458:	pop    ds
  410459:	inc    esi
  41045a:	pushf  
  41045b:	call   0x35f0:0xf2d6909
  410462:	pop    ebx
  410463:	or     al,0xf8
  410465:	scas   al,BYTE PTR es:[edi]
  410466:	fldcw  WORD PTR [ebp+ebp*1-0x2662ecb]
  41046d:	and    dl,BYTE PTR [ebx+0x4]
	...
  41047c:	loopne 0x41042c
  41047e:	shr    DWORD PTR [edi+eiz*8-0x4066476d],0x21
  410486:	pop    es
  410487:	in     eax,0xf4
  410489:	lea    ecx,[ebx+0xaaf5ebd]
  41048f:	xchg   ecx,eax
  410490:	sbb    dl,BYTE PTR [edi+0x23029ef7]
  410496:	jae    0x410462
  410498:	(bad)  
  410499:	scas   eax,DWORD PTR es:[edi]
  41049a:	push   ss
  41049b:	cmp    DWORD PTR [ebx-0x55],edx
  41049e:	pop    ecx
  41049f:	xchg   BYTE PTR [esi-0x5c],bh
  4104a2:	outs   dx,BYTE PTR ds:[esi]
  4104a3:	sub    BYTE PTR ds:0xf8760674,0x5a
  4104aa:	div    esp
  4104ac:	nop
  4104ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4104ae:	neg    esp
  4104b0:	in     al,dx
  4104b1:	dec    edx
  4104b2:	(bad)
  4104b6:	out    dx,eax
  4104b7:	adc    eax,0x20f8342c
  4104bc:	cmp    DWORD PTR [eax+0x6],edx
  4104bf:	pushf  
  4104c0:	imul   ecx,DWORD PTR [eax+0x6f],0xffffffe9
  4104c4:	hlt    
  4104c5:	inc    ebx
  4104c6:	mov    ecx,0x45c08dc1
  4104cb:	jmp    0x934bb42f
  4104d0:	cmp    dh,BYTE PTR ds:0x45cf172
  4104d6:	clc    
  4104d7:	push   ss
  4104d8:	mov    ?,WORD PTR [esi+eax*1+0x6ef64fe9]
  4104df:	or     eax,DWORD PTR [eax]
	...
  4104e9:	add    BYTE PTR [eax],al
  4104eb:	add    bh,dl
  4104ed:	mov    eax,ds:0x6701fe06
  4104f2:	ins    BYTE PTR es:[edi],dx
  4104f3:	shr    DWORD PTR [edi-0x51],cl
  4104f6:	push   cs
  4104f7:	add    DWORD PTR [esp+esi*1-0x8],edi
  4104fb:	out    0xcc,al
  4104fd:	bound  eax,QWORD PTR [esi]
  4104ff:	into   
  410500:	dec    esi
  410501:	mov    esp,0x63344ddd
  410506:	not    DWORD PTR [edi+ebp*8-0x38]
  41050a:	sbb    al,BYTE PTR [eax]
  41050c:	mov    cl,0x64
  41050e:	push   cs
  41050f:	call   0x39e070
  410514:	ss pop edi
  410516:	push   es
  410517:	out    dx,eax
  410518:	push   eax
  410519:	mov    ah,ah
  41051b:	fs maxps xmm6,xmm7
  41051f:	jne    0x4104c3
  410521:	test   DWORD PTR [edx],ebx
  410523:	dec    DWORD PTR [ebx]
  410525:	addr16 out dx,al
  410527:	imul   esi,DWORD PTR [ecx-0x26],0xfffffff8
  41052b:	push   0xbee75f8e
  410530:	out    0xf7,al
  410532:	arpl   WORD PTR [ecx-0x62],ax
  410535:	fidiv  DWORD PTR [edx+0xc]
  410538:	hlt    
  410539:	cmp    eax,0x78675f9
  41053e:	push   esp
  41053f:	call   ecx
  410541:	ficomp DWORD PTR [edi+0x0]
  410544:	pop    esi
  410545:	or     bh,BYTE PTR [edx+0x4553ac68]
  41054b:	add    BYTE PTR [ecx+0x6a0a64],dh
	...
  410559:	add    BYTE PTR [eax],al
  41055b:	add    ch,bh
  41055d:	fnstenv [edx+0x8]
  410560:	mov    dh,0xc
  410562:	stc    
  410563:	call   DWORD PTR [ecx]
  410565:	sub    esi,eax
  410567:	or     BYTE PTR [esi-0x7c],cl
  41056a:	mov    ebp,esp
  41056c:	popf   
  41056d:	repz sti 
  41056f:	push   0x1e
  410571:	test   DWORD PTR [edi+edi*8],esi
  410574:	mov    esp,DWORD PTR [edi-0x12]
  410577:	int    0x7b
  410579:	(bad)  
  41057b:	mov    DWORD PTR [ebx-0x35],ebx
  41057e:	pop    edi
  41057f:	jp     0x4105fc
  410581:	mov    al,ds:0x678bff06
  410586:	out    dx,al
  410587:	dec    ebp
  410588:	adc    ebx,ecx
  41058a:	clc    
  41058b:	dec    DWORD PTR [ebx-0x35]
  41058e:	clc    
  41058f:	jne    0x410588
  410591:	inc    ebx
  410592:	lods   al,BYTE PTR ds:[esi]
  410593:	test   DWORD PTR [edx+0x21],0x40b5c890
  41059a:	add    al,0x55
  41059c:	jl     0x4105be
  41059e:	test   bl,al
  4105a0:	retf   
  4105a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4105a2:	add    ch,BYTE PTR [edx+0x4]
  4105a5:	add    DWORD PTR [esi],edx
  4105a7:	or     bh,cl
  4105a9:	call   0xb3f204e3
  4105ae:	inc    ebp
  4105af:	cld    
  4105b0:	pop    ds
  4105b1:	ret    
  4105b2:	and    eax,0x15e0f741
  4105b7:	or     BYTE PTR [edi-0x6f016eb8],cl
  4105bd:	mov    cl,0x15
  4105bf:	cld    
	...
  4105cc:	mov    BYTE PTR [edi],ch
  4105ce:	or     al,0xe8
  4105d0:	mov    eax,0xaefe8f57
  4105d5:	jle    0x4105dd
  4105d7:	add    dl,cl
  4105d9:	mov    ah,0xae
  4105db:	xor    BYTE PTR [ebx],0x94
  4105de:	sub    al,0x0
  4105e0:	int    0x57
  4105e2:	(bad)  
  4105e3:	je     0x4105d4
  4105e5:	xchg   ebx,eax
  4105e6:	sub    edx,DWORD PTR [ebp+0x50]
  4105e9:	jno    0x410574
  4105eb:	inc    esp
  4105ec:	dec    ebx
  4105ed:	and    al,0x75
  4105ef:	fs mov dh,0x3b
  4105f2:	xchg   ecx,eax
  4105f3:	je     0x4105e4
  4105f5:	push   ebx
  4105f6:	stos   DWORD PTR es:[edi],eax
  4105f7:	std    
  4105f8:	xor    BYTE PTR [ecx+0x2c],dl
  4105fb:	add    BYTE PTR [edi-0x8beda74],bl
  410601:	jecxz  0x410673
  410603:	fs mov dh,0x3b
  410606:	xchg   ecx,eax
  410607:	xor    al,0x16
  410609:	hlt    
  41060a:	inc    edx
  41060b:	add    BYTE PTR [edi],bl
  41060d:	and    BYTE PTR ds:0xc44500ff,bh
  410613:	jae    0x4105cd
  410615:	bound  esi,QWORD PTR [esi+0x40]
  410618:	out    dx,eax
  410619:	mov    edx,0x632855e6
  41061e:	inc    ebp
  41061f:	add    al,0xf7
  410621:	inc    ecx
  410622:	mov    BYTE PTR [ebx],ch
  410624:	mov    esi,0xd0042ec6
  410629:	mov    bh,0xc5
  41062b:	xchg   esi,eax
  41062c:	inc    ebx
  41062d:	pop    ebx
  41062e:	(bad)
	...
  410639:	add    BYTE PTR [eax],al
  41063b:	add    BYTE PTR [ecx+0x32],al
  41063e:	test   eax,0x2df0be2b
  410643:	add    al,0x1f
  410645:	arpl   bp,bp
  410647:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410648:	push   0xffffffba
  41064a:	mov    ebx,DWORD PTR [edi]
  41064c:	arpl   WORD PTR ss:[eax-0x4ce60f0],cx
  410653:	or     ebx,DWORD PTR [edi-0x766907b6]
  410659:	xor    ebx,edi
  41065b:	fwait
  41065c:	cwde   
  41065d:	sbb    edx,DWORD PTR [ecx]
  41065f:	xchg   edi,eax
  410660:	jns    0x410693
  410662:	fist   DWORD PTR [edi-0x540a488f]
  410668:	sub    al,0x98
  41066a:	push   eax
  41066b:	xchg   esi,eax
  41066c:	das    
  41066d:	and    al,0xe2
  41066f:	add    eax,edx
  410671:	fst    QWORD PTR [ecx-0x7e]
  410674:	xor    al,0x2e
  410676:	aam    0x3
  410678:	fnsave [edi+0x30]
  41067b:	adc    bh,ch
  41067d:	cmp    cl,BYTE PTR [esi+0x2f]
  410680:	cmp    BYTE PTR [ecx],dh
  410682:	ja     0x4106c4
  410684:	xor    edi,DWORD PTR [edx+0x62b62058]
  41068a:	adc    BYTE PTR [eax],dl
  41068c:	out    dx,eax
  41068d:	cmp    cl,BYTE PTR [esi+0x1311995]
  410693:	adc    BYTE PTR [ebx],dl
  410695:	xor    DWORD PTR [ebx+0xb],esi
  410698:	pop    ds
  410699:	pop    ebp
  41069a:	push   es
  41069b:	pushf  
  41069c:	imul   esi,DWORD PTR [eax],0x2bce
	...
  4106aa:	add    BYTE PTR [eax],al
  4106ac:	clc    
  4106ad:	xor    BYTE PTR [ebx+0x72],dl
  4106b0:	lahf   
  4106b1:	in     eax,0xc2
  4106b3:	fstp   QWORD PTR ds:0x8a1f6c63
  4106b9:	mov    bh,0xe
  4106bb:	rcl    DWORD PTR [edx-0x6c],0xf7
  4106bf:	(bad)  
  4106c0:	jl     0x410669
  4106c2:	cli    
  4106c3:	push   ecx
  4106c4:	mov    ebx,0x6be945c7
  4106c9:	mov    bh,0xe
  4106cb:	rcl    edx,0x2e
  4106ce:	clc    
  4106cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4106d0:	mov    dh,BYTE PTR [edi+0x5af89efa]
  4106d6:	out    dx,al
  4106d7:	mov    bl,0xe7
  4106d9:	das    
  4106da:	clc    
  4106db:	mov    al,ds:0x1c0664b5
  4106e0:	jle    0x41071e
  4106e2:	test   BYTE PTR [ebp+0x306ba6f],ah
  4106e8:	mov    dl,0x31
  4106ea:	jb     0x4106cd
  4106ec:	dec    esp
  4106ed:	scas   al,BYTE PTR es:[edi]
  4106ee:	push   edx
  4106ef:	data16 mov bl,bl
  4106f2:	inc    ecx
  4106f3:	pop    ebp
  4106f4:	sbb    edx,DWORD PTR ds:0x2ff4a862
  4106fa:	jb     0x4106dd
  4106fc:	mov    WORD PTR [esi],gs
  4106fe:	cli    
  4106ff:	inc    esi
  410700:	push   0x31
  410702:	jb     0x410741
  410704:	bound  esi,QWORD PTR [edi-0x6c33bef2]
  41070a:	imul   DWORD PTR [esi]
  41070c:	sub    al,0x22
  41070e:	add    ebp,ecx
	...
  41071c:	loope  0x4106f9
  41071e:	jmp    0xcee9:0x6d2c376a
  410725:	push   0xfffffff7
  410727:	xchg   esp,eax
  410728:	in     al,dx
  410729:	cmp    cl,BYTE PTR [edx+0x0]
  41072c:	jb     0x410705
  41072e:	clc    
  41072f:	mov    DWORD PTR [ebx-0x28],edx
  410732:	pop    edi
  410733:	fidiv  DWORD PTR [ebx-0x5b]
  410736:	push   es
  410737:	inc    DWORD PTR [ebx-0x243211a5]
  41073d:	(bad)  
  41073e:	clc    
  41073f:	inc    DWORD PTR [ebx-0x35]
  410742:	clc    
  410743:	jne    0x41071b
  410745:	sti    
  410746:	outs   dx,DWORD PTR ds:[esi]
  410747:	push   esp
  410748:	test   eax,0xe2c2ced6
  41074d:	arpl   WORD PTR [ecx-0x75],dx
  410750:	mov    edx,0xb60c72d6
  410755:	mov    ds:0x5a89ff5b,al
  41075a:	(bad)  
  41075b:	je     0x410758
  41075d:	jle    0x410748
  41075f:	fbld   TBYTE PTR gs:[esi+0x56]
  410763:	call   0x3870c1
  410768:	(bad)  
  41076a:	jb     0x41077c
  41076c:	out    dx,al
  41076d:	aad    0x72
  41076f:	or     BYTE PTR [esi+0x39],ah
  410772:	sar    edi,1
  410774:	or     esp,edi
  410776:	int    0x56
  410778:	or     edi,edx
  41077a:	into   
  41077b:	ret    0x636a
  41077e:	push   ecx
  41077f:	mov    eax,DWORD PTR [eax]
	...
  410789:	add    BYTE PTR [eax],al
  41078b:	add    BYTE PTR [edx-0x5e073c1e],bh
  410791:	jns    0x410799
  410793:	push   0x7
  410795:	(bad)  
  410796:	jb     0x4107a0
  410798:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410799:	cli    
  41079a:	push   esp
  41079b:	dec    DWORD PTR [ecx]
  41079d:	fld    QWORD PTR [edx-0x4]
  4107a0:	aad    0x18
  4107a2:	arpl   WORD PTR [eax-0x71],cx
  4107a5:	arpl   WORD PTR [esi+0x7a5f1e3f],ax
  4107ab:	push   0x4550f2
  4107b0:	div    eax
  4107b2:	stos   DWORD PTR es:[edi],eax
  4107b3:	or     eax,0xb0439b4
  4107b8:	aaa    
  4107b9:	lods   eax,DWORD PTR ds:[esi]
  4107ba:	xor    dl,BYTE PTR [edi+0x1f]
  4107bd:	(bad)  [ebx]
  4107bf:	inc    DWORD PTR [eax]
  4107c1:	inc    esp
  4107c2:	les    esi,FWORD PTR [ebx-0x5e]
  4107c5:	ret    0xf838
  4107c8:	(bad)
  4107cd:	or     eax,0xbecf081e
  4107d2:	xchg   ebx,eax
  4107d3:	(bad)  
  4107d4:	fcomp  DWORD PTR ds:0x485df81e
  4107da:	xchg   ebp,eax
  4107db:	je     0x4107dc
  4107dd:	adc    ecx,DWORD PTR [edx]
  4107df:	inc    eax
  4107e1:	cmc    
  4107e2:	xchg   ebx,eax
  4107e3:	je     0x4107a4
  4107e5:	mov    ds:0x342afedf,al
  4107ea:	pushf  
  4107eb:	imul   ebp,DWORD PTR [eax+0x6793cd],0x0
	...
  4107fa:	add    BYTE PTR [eax],al
  4107fc:	test   al,0x5f
  4107fe:	inc    ecx
  4107ff:	add    BYTE PTR [eax-0x741875a9],bl
  410805:	adc    DWORD PTR [ebx+0x1efbfcfe],0x12
  41080c:	daa    
  41080d:	mov    ch,0x1d
  41080f:	clc    
  410810:	daa    
  410811:	mov    ebp,0xe55f081d
  410816:	mov    esp,0xd39468fe
  41081b:	push   ebp
  41081c:	pusha  
  41081d:	xchg   ebp,eax
  41081e:	xchg   ebx,eax
  41081f:	je     0x410880
  410821:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410822:	fist   DWORD PTR [ebp+0x50]
  410825:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410826:	xchg   esi,eax
  410827:	xor    dh,BYTE PTR [edi]
  410829:	jecxz  0x4107be
  41082b:	inc    BYTE PTR [eax+0x75]
  41082e:	nop
  41082f:	lods   eax,DWORD PTR ds:[esi]
  410830:	inc    DWORD PTR [edi+ebx*1-0x7c]
  410834:	xor    BYTE PTR [ebx-0x66],ah
  410837:	(bad)
  41083b:	fwait
  41083c:	jl     0x4107d0
  41083e:	adc    BYTE PTR [ebx+0x82c1bb9],dl
  410844:	not    DWORD PTR [edi-0x47f65f8c]
  41084a:	jmp    0xf0c9a2ea
  41084f:	xchg   edx,eax
  410850:	in     eax,dx
  410851:	and    dh,BYTE PTR [edx-0x10]
  410854:	pop    eax
  410855:	gs inc edi
  410857:	inc    ebp
  410858:	not    DWORD PTR [edx+0x2e3f95d5]
  41085e:	shl    DWORD PTR [ebx],1
	...
  41086c:	fdiv   DWORD PTR [edi-0x482fcc03]
  410872:	cmc    
  410873:	fwait
  410874:	cmp    edx,DWORD PTR ds:0x3fd892b9
  41087a:	sbb    edx,DWORD PTR [ebx-0x53e447]
  410880:	mov    al,0x96
  410882:	je     0x410823
  410884:	jne    0x4108ac
  410886:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410887:	cmp    cl,BYTE PTR ds:0x99ce0363
  41088d:	mov    bh,0xe5
  41088f:	fwait
  410890:	add    dl,BYTE PTR [edx-0x58806d80]
  410896:	jns    0x410916
  410898:	ret    
  410899:	(bad)  
  41089a:	and    eax,0xa8e2f745
  41089f:	add    ebp,ebx
  4108a1:	mov    edx,ebp
  4108a3:	add    al,0xd1
  4108a5:	mov    ds:0x734f3aed,eax
  4108aa:	stos   DWORD PTR es:[edi],eax
  4108ab:	add    esi,edi
  4108ad:	pop    ecx
  4108ae:	sub    eax,0x55961317
  4108b3:	mov    BYTE PTR [ecx-0x7f01c6d3],ch
  4108b9:	mov    dh,0x6
  4108bb:	sti    
  4108bc:	mov    ebx,0xf2efea6
  4108c1:	sub    ebp,DWORD PTR [ebp+0x3]
  4108c4:	test   BYTE PTR [esi+0x2c6e110e],dh
  4108ca:	clc    
  4108cb:	push   ss
  4108cc:	test   DWORD PTR [esi+0x83fe],esi
	...
  4108da:	add    BYTE PTR [eax],al
  4108dc:	and    BYTE PTR [edx+esi*2],ch
  4108df:	icebp  
  4108e0:	ins    BYTE PTR es:[edi],dx
  4108e1:	stos   BYTE PTR es:[edi],al
  4108e2:	idiv   esi
  4108e4:	data16 sub al,0x72
  4108e7:	icebp  
  4108e8:	fild   DWORD PTR [ecx+0x44ec74f7]
  4108ee:	imul   esp,esi,0xffffff86
  4108f1:	sub    eax,0x447354f8
  4108f6:	jp     0x410934
  4108f8:	xchg   BYTE PTR ds:0xebbb1afb,ch
  4108fe:	test   esi,0x8ff52d66
  410904:	mov    bl,0x65
  410906:	jno    0x410896
  410908:	data16 mov bh,0xfa
  41090b:	scas   al,BYTE PTR es:[edi]
  41090c:	or     BYTE PTR [ebx-0x12],bl
  41090f:	mov    esp,ecx
  410911:	sub    edi,eax
  410913:	ds pop esp
  410915:	and    al,BYTE PTR [ebx]
  410917:	jmp    0x6b2be0fd
  41091c:	mov    edi,0xf3135028
  410921:	mov    eax,0x5ae87e3b
  410926:	out    dx,al
  410927:	ins    DWORD PTR es:[edi],dx
  410928:	shr    DWORD PTR [ebx],0xf8
  41092b:	pusha  
  41092c:	mov    eax,0x10248c2e
  410931:	fwait
  410932:	inc    ebp
  410933:	jmp    0xdd4776ac
  410938:	mov    ah,0xba
  41093a:	adc    eax,0x4f62b5c7
	...
  41094b:	add    BYTE PTR [esi+0x4e0046b9],ah
  410951:	das    
  410952:	mov    eax,0xee69ed74
  410957:	sti    
  410958:	adc    bl,0xf8
  41095b:	or     ebx,esi
  41095d:	dec    edx
  41095e:	sbb    eax,0x6608650
  410963:	out    dx,eax
  410964:	ror    BYTE PTR [esi+0x1b],0x66
  410968:	pop    edi
  410969:	pusha  
  41096a:	push   esi
  41096b:	dec    DWORD PTR [ebx-0x7ffc1fd9]
  410971:	sar    al,cl
  410973:	call   0x387e8a
  410978:	loop   0x410990
  41097a:	mov    eax,0xf8d2d1b9
  41097f:	(bad)  
  410980:	mov    esp,0x3b072fc1
  410985:	daa    
  410986:	stc    
  410987:	jne    0x41094b
  410989:	shl    BYTE PTR [edx+0x8],cl
  41098c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41098d:	push   eax
  41098e:	push   esp
  41098f:	inc    DWORD PTR [ecx-0x353d328e]
  410995:	pop    edi
  410996:	push   ecx
  410997:	mov    esi,DWORD PTR [edx-0x1a]
  41099a:	ret    
  41099b:	call   0x4bb626bd
  4109a0:	iret   
  4109a1:	pushw  es
  4109a3:	jne    0x41092f
  4109a5:	call   0x4ddf166f
  4109aa:	push   es
  4109ab:	push   0xffffff9e
  4109ad:	dec    ebp
  4109ae:	idiv   edi
	...
  4109bc:	mov    ebp,DWORD PTR [ebx]
  4109be:	outs   dx,BYTE PTR ds:[esi]
  4109bf:	add    ah,dh
  4109c1:	data16 out dx,al
  4109c3:	xchg   ebp,eax
  4109c4:	push   ds
  4109c5:	addr16 push es
  4109c7:	mov    DWORD PTR [ebx-0x298a0729],ebx
  4109cd:	(bad)  
  4109ce:	rcl    BYTE PTR [edi+esi*8-0x6c],cl
  4109d2:	xchg   esi,eax
  4109d3:	mov    BYTE PTR [edx+0x4f74969d],bh
  4109d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4109da:	adc    ah,bh
  4109dc:	int    0x6c
  4109de:	xchg   esi,eax
  4109df:	je     0x4109cc
  4109e1:	pop    ds
  4109e2:	add    al,0x6a
  4109e4:	mul    DWORD PTR [ecx+0x39f74012]
  4109ea:	jns    0x410a30
  4109ec:	sub    ebp,ecx
  4109ee:	sbb    DWORD PTR [eax],eax
  4109f0:	lea    edi,[ecx]
  4109f2:	sbb    dl,BYTE PTR [edx]
  4109f4:	popf   
  4109f5:	cmp    DWORD PTR [edi-0xf9bf48c],edx
  4109fb:	jb     0x4109a9
  4109fd:	cli    
  4109fe:	add    eax,DWORD PTR [ebp-0x7883bbc9]
  410a04:	idiv   DWORD PTR [ebx]
  410a06:	add    al,0x8b
  410a08:	inc    edx
  410a09:	or     BYTE PTR [ecx+edx*1+0x72],bh
  410a0d:	jg     0x4109a1
  410a0f:	dec    edi
  410a10:	dec    ebp
  410a11:	cmp    al,0x1e
  410a13:	adc    bl,BYTE PTR [ebp+0x3c]
  410a16:	sbb    al,0x40
  410a18:	push   ecx
  410a19:	jnp    0x410a1d
  410a1b:	dec    DWORD PTR [edx-0x10]
  410a1e:	xchg   DWORD PTR [ecx+0x0],edx
	...
  410a29:	add    BYTE PTR [eax],al
  410a2b:	add    bh,ah
  410a2d:	mov    dh,0xc2
  410a2f:	ja     0x410a81
  410a31:	stc    
  410a32:	sbb    eax,0x467c9ff0
  410a37:	jmp    DWORD PTR [eax-0x1317b24d]
  410a3d:	sti    
  410a3e:	push   ds
  410a3f:	dec    eax
  410a40:	nop
  410a41:	dec    edi
  410a42:	call   0x6efe:0x87481be7
  410a49:	jg     0x4109f1
  410a4b:	inc    BYTE PTR [edx]
  410a4d:	lods   al,BYTE PTR ds:[esi]
  410a4e:	call   0xe2fe:0x87b8c152
  410a55:	bound  edx,QWORD PTR [ebp-0x71]
  410a58:	jmp    0x410a90
  410a5a:	pop    ecx
  410a5b:	sbb    DWORD PTR [edi+0x3b],esp
  410a5e:	sub    eax,DWORD PTR [eax+0x50]
  410a61:	sub    ah,ch
  410a63:	ret    
  410a64:	les    ecx,FWORD PTR [ebp-0x2b]
  410a67:	add    esi,edi
  410a69:	cmp    DWORD PTR [eax-0x71],edi
  410a6c:	ret    
  410a6d:	pop    edx
  410a6e:	inc    ebp
  410a6f:	mov    al,0xc0
  410a71:	sub    DWORD PTR [ecx],ebp
  410a73:	(bad)  
  410a74:	mov    ds:0x1319213a,eax
  410a79:	sub    dl,BYTE PTR [ebx-0x41a0ef05]
  410a7f:	mov    ss,WORD PTR [ecx]
  410a81:	sub    dl,BYTE PTR [ebx-0x66afef61]
  410a87:	mov    es,WORD PTR [ecx]
  410a89:	sub    dh,BYTE PTR [ebx-0x6d]
  410a8c:	adc    bh,dl
  410a8e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410a8f:	mov    es,WORD PTR [eax]
	...
  410a99:	add    BYTE PTR [eax],al
  410a9b:	add    cl,dh
  410a9d:	fst    QWORD PTR [edx-0x1fab8269]
  410aa3:	sbb    bl,ch
  410aa5:	sub    DWORD PTR [esp+edi*8],edi
  410aa8:	fldcw  WORD PTR [edi-0x6a31642f]
  410aae:	enter  0xbf8e,0x24
  410ab2:	repnz add ebp,DWORD PTR [edx]
  410ab5:	fmulp  st(1),st
  410ab7:	mov    es,WORD PTR [ebx+0x57]
  410aba:	lds    eax,FWORD PTR [edx+0x4f]
  410abd:	sub    ch,BYTE PTR [ecx-0x29519706]
  410ac3:	sbb    ebx,edx
  410ac5:	shr    BYTE PTR [esi],0x4
  410ac8:	inc    edi
  410ac9:	cmp    esp,DWORD PTR [ecx+0x3e299036]
  410acf:	sbb    al,0x45
  410ad1:	and    eax,0x630f042e
  410ad6:	in     eax,dx
  410ad7:	sahf   
  410ad8:	cmp    bh,BYTE PTR [edx-0x5be54dfa]
  410ade:	push   es
  410adf:	sbb    DWORD PTR [eax-0x52],edi
  410ae2:	push   cs
  410ae3:	push   ecx
  410ae4:	pop    esi
  410ae5:	lods   al,BYTE PTR ds:[esi]
  410ae6:	neg    DWORD PTR [esi+0x7c]
  410ae9:	out    0x53,eax
  410aeb:	push   esi
  410aec:	sub    DWORD PTR [eax],0x576cdd72
  410af2:	pop    esi
  410af3:	inc    esi
  410af4:	jno    0x410b52
  410af6:	(bad)  
  410af7:	mov    ch,0x1b
  410af9:	shr    DWORD PTR [edx],0xcf
  410afc:	mov    ebx,0x415662
	...
  410b09:	add    BYTE PTR [eax],al
  410b0b:	add    BYTE PTR [esi-0x1bd90870],bl
  410b11:	mov    edx,0x62b42ab4
  410b16:	outs   dx,BYTE PTR ds:[esi]
  410b17:	jmp    0x81fa4510
  410b1c:	cmp    eax,0xc4e945bf
  410b21:	sub    DWORD PTR [edx-0xf],esi
  410b24:	pop    esp
  410b25:	push   cs
  410b26:	jge    0x410b1e
  410b28:	add    BYTE PTR [eax-0x72],0x9a
  410b2c:	jns    0x410b57
  410b2e:	into   
  410b2f:	stos   DWORD PTR es:[edi],eax
  410b30:	jecxz  0x410b5a
  410b32:	push   ebx
  410b33:	jb     0x410acc
  410b35:	in     eax,0xc2
  410b37:	aad    0xed
  410b39:	bound  ebp,QWORD PTR [ebp+ecx*1+0x7a]
  410b3d:	scas   eax,DWORD PTR es:[edi]
  410b3e:	push   cs
  410b3f:	rcr    DWORD PTR [esi],1
  410b41:	cwde   
  410b42:	idiv   DWORD PTR [esi+0x43fa9f3c]
  410b48:	popf   
  410b49:	sub    DWORD PTR [edx-0x1f],esi
  410b4c:	mov    WORD PTR [eax-0x458d5909],?
  410b52:	and    ebx,DWORD PTR [esi+0xfee5b00]
  410b58:	sub    BYTE PTR [ecx],0xf8
  410b5b:	add    eax,DWORD PTR [edi-0x79ff8dd7]
  410b61:	int3   
  410b62:	pop    ebx
  410b63:	(bad)  
  410b64:	stc    
  410b65:	aad    0xf8
  410b67:	jne    0x410b53
  410b69:	aad    0x72
  410b6b:	or     BYTE PTR [esi+0x20],dh
  410b6e:	dec    eax
  410b6f:	inc    DWORD PTR [eax]
	...
  410b79:	add    BYTE PTR [eax],al
  410b7b:	add    cl,bl
  410b7d:	jmp    0x410b44
  410b7f:	add    al,0x4e
  410b81:	jno    0x410b0e
  410b83:	in     al,dx
  410b84:	test   eax,0xcee80a4f
  410b89:	ins    DWORD PTR es:[edi],dx
  410b8a:	idiv   edi
  410b8c:	inc    ebp
  410b8d:	and    al,0x74
  410b8f:	and    al,0x26
  410b91:	jb     0x410bf3
  410b93:	inc    ecx
  410b94:	push   ds
  410b95:	je     0x410b85
  410b97:	sbb    al,0x81
  410b99:	xlat   BYTE PTR ds:[ebx]
  410b9a:	clc    
  410b9b:	push   eax
  410b9c:	xchg   BYTE PTR [esi+eax*1-0x11],ah
  410ba0:	mov    eax,0x5f666146
  410ba5:	fs push esi
  410ba7:	jmp    DWORD PTR [ebx+0x2c]
  410baa:	loopne 0x410bb3
  410bac:	jp     0x410b85
  410bae:	clc    
  410baf:	call   0x387ed2
  410bb4:	pop    ss
  410bb5:	and    eax,0xaa830000
  410bba:	jmp    0x410b3f
  410bbc:	xchg   edx,eax
  410bbd:	xlat   BYTE PTR ds:[ebx]
  410bbe:	ins    DWORD PTR es:[edi],dx
  410bbf:	add    BYTE PTR [eax+ebx*1-0x7],al
  410bc3:	jne    0x410b9b
  410bc5:	retf   
  410bc6:	xor    eax,0x8ed6b950
  410bcb:	inc    ebp
  410bcc:	mov    edx,0x3ff1c49
  410bd1:	daa    
  410bd2:	loopne 0x410b7e
  410bd4:	imul   edx,esi,0xd5fd6af8
  410bda:	jb     0x410be4
  410bdc:	xchg   bl,al
  410bde:	clc    
  410bdf:	inc    DWORD PTR [eax]
	...
  410be9:	add    BYTE PTR [eax],al
  410beb:	add    BYTE PTR [ecx+0x49],bh
  410bee:	sbb    bh,bh
  410bf0:	test   DWORD PTR [esi-0x6],0x8ad861e7
  410bf7:	inc    BYTE PTR [eax+0x2fe8826]
  410bfd:	xor    bl,BYTE PTR [ebx+ecx*2-0x37754f39]
  410c04:	xor    eax,0x6c55043d
  410c09:	lea    eax,[esi+0x1df05fc3]
  410c0f:	add    ch,bl
  410c11:	dec    edi
  410c12:	mov    DWORD PTR [edi+edi*8-0x5f],esi
  410c16:	call   0x3b44:0x7ca0404e
  410c1d:	mov    ah,0xc8
  410c1f:	fs mov edi,0xe88003fa
  410c25:	cmp    DWORD PTR [eax],edx
  410c27:	inc    edi
  410c28:	(bad)  
  410c29:	into   
  410c2a:	and    DWORD PTR [ecx-0x9],eax
  410c2d:	lock fwait
  410c2f:	adc    eax,edx
  410c31:	cmp    DWORD PTR [ebx+ecx*1],eax
  410c34:	aaa    
  410c35:	int    0xdd
  410c37:	push   esi
  410c38:	(bad)  
  410c3a:	daa    
  410c3b:	(bad)  
  410c3c:	clc    
  410c3d:	xor    eax,esp
  410c3f:	jae    0x410c58
  410c41:	ret    
  410c42:	inc    eax
  410c43:	clc    
  410c44:	pop    edi
  410c45:	cmp    al,0x4
  410c47:	out    dx,eax
  410c48:	mov    eax,ds:0x36661494
  410c4d:	cmp    al,0x8d
  410c4f:	je     0x410c51
	...
  410c59:	add    BYTE PTR [eax],al
  410c5b:	add    bh,cl
  410c5d:	or     eax,0xa2df0816
  410c62:	pop    es
  410c63:	inc    eax
  410c65:	sbb    eax,0x6ccff816
  410c6a:	xor    bh,bh
  410c6c:	mov    al,0xf0
  410c6e:	iret   
  410c6f:	mov    edi,0xfe8bf56e
  410c74:	mov    al,ds:0xe05a9b63
  410c79:	pop    ebp
  410c7a:	adc    cl,BYTE PTR [ebp-0x6f]
  410c7d:	mov    al,0x91
  410c7f:	mov    eax,DWORD PTR [ebx]
  410c81:	pop    ebx
  410c82:	test   DWORD PTR [ecx+0x2b812631],esi
  410c88:	scas   al,BYTE PTR es:[edi]
  410c89:	and    edx,esp
  410c8b:	add    ecx,edx
  410c8d:	fld    DWORD PTR [ecx+0x113f3487]
  410c93:	push   ds
  410c94:	idiv   DWORD PTR [eax+0x5ae38b20]
  410c9a:	push   ebp
  410c9b:	adc    eax,eax
  410c9d:	and    eax,0x26b37d51
  410ca2:	gs leave 
  410ca4:	fistp  DWORD PTR [edx+0x667703ae]
  410caa:	in     eax,dx
  410cab:	(bad)  
  410cad:	mov    edx,0x62b621b4
  410cb2:	nop
  410cb3:	fwait
  410cb4:	jle    0x410d1b
  410cb6:	in     eax,dx
  410cb7:	add    ebp,esp
  410cb9:	and    dl,BYTE PTR [edx+0x3aa9dd]
  410cbf:	das    
	...
  410ccc:	or     BYTE PTR [esi],ah
  410cce:	in     eax,0xc3
  410cd0:	test   BYTE PTR [edx-0x4500be8a],al
  410cd6:	in     eax,dx
  410cd7:	add    esp,eax
  410cd9:	in     al,0x85
  410cdb:	jg     0x410d2f
  410cdd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410cde:	in     eax,dx
  410cdf:	mov    ch,BYTE PTR [ebx+0x2b]
  410ce2:	loope  0x410cf4
  410ce4:	out    dx,eax
  410ce5:	cmp    bl,ah
  410ce7:	or     eax,0x10d125d0
  410cec:	iret   
  410ced:	cmp    dl,dh
  410cef:	xor    al,0xc0
  410cf1:	and    eax,0xeb78d6c2
  410cf6:	mov    eax,0x725b18a
  410cfb:	mov    ebx,0x33ff6e4e
  410d00:	xor    bh,BYTE PTR [esi-0x188216fa]
  410d06:	outs   dx,BYTE PTR ds:[esi]
  410d07:	gs (bad) 
  410d09:	mov    ds:0xbf5e0106,eax
  410d0e:	inc    ebp
  410d0f:	jmp    0x914fbb81
  410d14:	test   BYTE PTR [eax+0x63127ef7],ch
  410d1a:	outs   dx,BYTE PTR ds:[esi]
  410d1b:	fs push ss
  410d1d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410d1e:	push   es
  410d1f:	add    DWORD PTR [ebx+0x6de945bf],esi
  410d25:	outs   dx,BYTE PTR ds:[esi]
  410d26:	in     eax,0xb1
  410d28:	mov    ebx,0x183dee62
  410d2d:	es clc 
  410d2f:	pusha  
	...
  410d3c:	mov    bh,0x36
  410d3e:	ins    DWORD PTR es:[edi],dx
  410d3f:	jmp    0xa8a1d620
  410d44:	hlt    
  410d45:	mov    edx,0x62b3cfbe
  410d4a:	div    esp
  410d4c:	pop    ebx
  410d4d:	popf   
  410d4e:	inc    ebp
  410d4f:	jmp    0x1e93f8d0
  410d54:	jge    0x410d30
  410d56:	inc    ecx
  410d57:	sbb    eax,0x476e62ea
  410d5c:	(bad)  
  410d5d:	mov    ds:0xbfac9106,eax
  410d62:	inc    ebp
  410d63:	jmp    0xa2267ce5
  410d68:	xor    esp,DWORD PTR [ebx-0x12]
  410d6b:	dec    ecx
  410d6c:	adc    BYTE PTR [eax+edi*8],ah
  410d6f:	jo     0x410d89
  410d71:	xor    ecx,DWORD PTR [edx+0x6e949724]
  410d77:	xchg   BYTE PTR ds:0x334106a2,dl
  410d7d:	mov    esi,0xdbce0045
  410d82:	xor    ah,cl
  410d84:	out    0x9f,al
  410d86:	push   es
  410d87:	call   0x3880a6
  410d8c:	pop    ss
  410d8d:	fs out dx,al
  410d8f:	adc    ebx,0xffffffd2
  410d92:	div    DWORD PTR [ebx-0x3a]
  410d95:	fnstsw WORD PTR [edx-0x10]
  410d98:	sahf   
  410d99:	push   esp
  410d9a:	inc    esp
  410d9b:	xor    ebx,0xffffffca
  410d9e:	div    DWORD PTR [ebx+0x0]
	...
  410da9:	add    BYTE PTR [eax],al
  410dab:	add    BYTE PTR [edx-0x7efffab8],dh
  410db1:	cdq    
  410db2:	clc    
  410db3:	jne    0x410e0b
  410db5:	enter  0x4dfc,0xd1
  410db9:	fprem  
  410dbb:	jne    0x410d77
  410dbd:	fnstenv [edx+0x8]
  410dc0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410dc1:	ins    BYTE PTR es:[edi],dx
  410dc2:	dec    eax
  410dc3:	jmp    DWORD PTR [ecx-0x4e0f8d27]
  410dc9:	push   ebx
  410dca:	push   cs
  410dcb:	call   0x387859
  410dd0:	icebp  
  410dd1:	push   ebx
  410dd2:	jmp    0x803c:0xe0286bff
  410dd9:	(bad)  
  410ddb:	(bad)  
  410ddc:	jnp    0x410da2
  410dde:	clc    
  410ddf:	jne    0x410dc7
  410de1:	fnstenv [edx+0x8]
  410de4:	neg    BYTE PTR [eax+ecx*2-0x1]
  410de8:	icebp  
  410de9:	fnstenv [edx-0x14]
  410dec:	out    0x2d,al
  410dee:	push   edi
  410def:	push   ecx
  410df1:	fidiv  DWORD PTR [edx-0xc]
  410df4:	mul    BYTE PTR ds:0xdad1ff57
  410dfa:	jb     0x410dec
  410dfc:	(bad)  
  410dfd:	pop    esi
  410dfe:	push   ebp
  410dff:	push   DWORD PTR [ecx-0x8178d26]
  410e05:	and    DWORD PTR [ebx-0x70eb3fb1],ecx
  410e0b:	je     0x410dc8
  410e0d:	sbb    al,0x9
  410e0f:	or     BYTE PTR [eax],al
	...
  410e19:	add    BYTE PTR [eax],al
  410e1b:	add    BYTE PTR [edi-0x5700c36d],bl
  410e21:	dec    esp
  410e22:	mov    ebx,0x2939fbc1
  410e27:	mov    ecx,DWORD PTR [ebx+0x1dfbb7b8]
  410e2d:	cmp    bl,BYTE PTR [edx]
  410e2f:	inc    eax
  410e30:	mov    BYTE PTR [esi-0x6],al
  410e33:	out    0xe6,eax
  410e35:	inc    ebx
  410e36:	(bad)  
  410e37:	(bad)  
  410e38:	outs   dx,BYTE PTR ds:[esi]
  410e39:	jbe    0x410dc9
  410e3b:	imul   esi,edi,0x5b68024f
  410e41:	push   ebx
  410e42:	inc    ebx
  410e43:	add    bh,cl
  410e45:	cmp    DWORD PTR [eax+eax*1],eax
  410e48:	ja     0x410ddb
  410e4a:	stos   BYTE PTR es:[edi],al
  410e4b:	push   edx
  410e4c:	push   eax
  410e4d:	test   dl,bh
  410e4f:	mov    edi,0xe83258c3
  410e54:	ins    BYTE PTR es:[edi],dx
  410e55:	out    dx,eax
  410e56:	mov    ?,esi
  410e58:	in     al,dx
  410e59:	jns    0x410e62
  410e5b:	sbb    edi,eax
  410e5d:	adc    DWORD PTR [eax+eax*1],eax
  410e60:	sbb    BYTE PTR [ebx-0x56618e5],ch
  410e66:	add    edx,DWORD PTR [eax+0x18]
  410e69:	(bad)  
  410e6a:	sti    
  410e6b:	out    0x64,eax
  410e6d:	add    cl,BYTE PTR [edi+0x33ad1ffe]
  410e73:	inc    DWORD PTR [eax]
  410e75:	push   esp
  410e76:	or     ah,bh
  410e78:	clc    
  410e79:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410e7a:	sti    
  410e7b:	out    0x0,eax
  410e7d:	ror    BYTE PTR [esi+0xfe],cl
	...
  410e8b:	add    BYTE PTR [esi+0x4bfff74e],bh
  410e91:	test   DWORD PTR [edi-0x1e9c4c7e],ecx
  410e97:	das    
  410e98:	pop    ebp
  410e99:	arpl   WORD PTR [ebx+0x45],dx
  410e9c:	enter  0xe598,0x9b
  410ea0:	xchg   BYTE PTR [eax-0x57907838],dh
  410ea6:	sar    DWORD PTR [ebx-0xd],0x87
  410eaa:	xor    eax,0xf0e2f745
  410eaf:	add    ebp,DWORD PTR [ebx]
  410eb1:	mov    ds:0xa411fa45,eax
  410eb6:	in     eax,dx
  410eb7:	cs lahf 
  410eb9:	cmp    dl,bl
  410ebb:	add    esi,edi
  410ebd:	ins    DWORD PTR es:[edi],dx
  410ebe:	lods   eax,DWORD PTR ds:[esi]
  410ebf:	adc    ah,dl
  410ec1:	mov    ecx,0x221edd85
  410ec6:	cmp    ebx,0x33e697b0
  410ecc:	fbld   TBYTE PTR [edx-0x13]
  410ecf:	xchg   esi,eax
  410ed0:	mov    ds:0xb61edd8b,al
  410ed5:	bound  edi,QWORD PTR [ebp+0x556acb86]
  410edb:	aad    0xcf
  410edd:	and    DWORD PTR [ecx-0x64],edx
  410ee0:	(bad)  
  410ee1:	mov    dl,0x48
  410ee3:	xchg   DWORD PTR [esi+edx*2],edi
  410ee6:	sub    eax,0x3922314d
  410eeb:	xchg   DWORD PTR [esi],esp
  410eed:	shl    ebp,1
  410eef:	inc    BYTE PTR [eax]
	...
  410ef9:	add    BYTE PTR [eax],al
  410efb:	add    BYTE PTR [ebx+0x1b112922],ch
  410f01:	and    bl,BYTE PTR [ebx-0x54fde705]
  410f07:	xchg   BYTE PTR [ecx],cl
  410f09:	ret    0xc226
  410f0c:	hlt    
  410f0d:	bound  esi,QWORD PTR [edx+0x29e60c7a]
  410f13:	mov    BYTE PTR [ecx-0x73],cl
  410f16:	in     eax,dx
  410f17:	sbb    DWORD PTR ds:0xdc7c0722,esi
  410f1d:	or     DWORD PTR [esi-0x64],eax
  410f20:	jno    0x410f42
  410f22:	mov    gs,WORD PTR [edi+edi*2]
  410f25:	in     al,dx
  410f26:	cmp    DWORD PTR [ebx+ecx*1-0x5c],eax
  410f2a:	push   es
  410f2b:	imul   edi,DWORD PTR [ecx-0x24d68bdf],0xfb285f42
  410f35:	mov    ecx,0x21bf45ee
  410f3a:	clc    
  410f3b:	loop   0x410ef1
  410f3d:	xchg   ebp,eax
  410f3e:	and    edx,DWORD PTR [esi]
  410f40:	jnp    0x410f1b
  410f42:	pop    ebp
  410f43:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410f44:	jns    0x410fb2
  410f46:	(bad)  
  410f47:	adc    eax,0xe96eb19a
  410f4c:	hlt    
  410f4d:	adc    DWORD PTR [ecx+0x45889801],edi
  410f53:	jmp    0xf1b3317c
  410f58:	mov    ecx,fs
  410f5a:	jle    0x410fd2
  410f5c:	jns    0x410f67
  410f5e:	into   
  410f5f:	push   ds
	...
  410f6c:	jo     0x410f8e
  410f6e:	sti    
  410f6f:	sbb    bh,BYTE PTR [ebx]
  410f71:	(bad)  
  410f73:	pop    esi
  410f74:	jno    0x410f96
  410f76:	cmc    
  410f77:	xchg   DWORD PTR [eax+ebp*2],ebp
  410f7a:	jno    0x410fa5
  410f7c:	fiadd  WORD PTR [ebp-0x12]
  410f7f:	cmc    
  410f80:	loopne 0x410fa3
  410f82:	clc    
  410f83:	repnz xor al,0x95
  410f86:	and    al,cl
  410f88:	dec    ebx
  410f89:	mov    BYTE PTR [ebp-0x17],al
  410f8c:	in     al,0xa
  410f8e:	lahf   
  410f8f:	mov    edx,0x91572079
  410f94:	hlt    
  410f95:	(bad)  
  410f96:	out    0x57,eax
  410f98:	fmul   QWORD PTR [ecx+0x5f]
  410f9b:	test   al,0xf4
  410f9d:	mov    dl,0xf7
  410f9f:	add    BYTE PTR [ebx+0x1c],dh
  410fa2:	loopne 0x410f27
  410fa4:	jbe    0x410f8f
  410fa6:	clc    
  410fa7:	call   0x386906
  410fac:	je     0x410fb3
  410fae:	loopne 0x410f8d
  410fb0:	or     eax,0x9e0bf8e6
  410fb5:	jae    0x410fd9
  410fb7:	push   0x457de7
  410fbc:	(bad)  
  410fbd:	(bad)  
  410fbe:	outs   dx,BYTE PTR ds:[esi]
  410fbf:	push   ebx
  410fc0:	mov    ecx,0x9e6847e6
  410fc5:	fs out 0xbe,eax
  410fc8:	ss ds popa 
  410fcb:	inc    ecx
  410fcc:	mov    ss,WORD PTR [edi+esi*8+0x75]
	...
  410fdc:	xchg   ah,bh
  410fde:	push   ebx
  410fdf:	js     0x41104a
  410fe1:	out    0xdf,al
  410fe3:	pop    ebp
  410fe4:	fxam   
  410fe6:	clc    
  410fe7:	jmp    ebx
  410fe9:	jmp    0x4cc7:0xfc6675f8
  410ff0:	jmp    0x8d0a68da
  410ff5:	arpl   WORD PTR [esi],ax
  410ff7:	push   ebp
  410ff8:	aad    0xfa
  410ffa:	test   ah,al
  410ffc:	scas   al,BYTE PTR es:[edi]
  410ffd:	xchg   edi,eax
  410ffe:	inc    edx
  410fff:	lock mov fs,edi
  411002:	jb     0x411010
  411004:	mov    dh,0xc5
  411006:	push   ebx
  411007:	jmp    FWORD PTR [ecx+0x2c74b819]
  41100d:	jecxz  0x411089
  41100f:	cld    
  411010:	sbb    al,0x6e
  411012:	and    ecx,DWORD PTR [ebx-0x7e9e13ad]
  411018:	cmp    BYTE PTR es:[esi],ah
  41101b:	jne    0x411014
  41101d:	in     eax,0x72
  41101f:	adc    cl,ch
  411021:	outs   dx,DWORD PTR ds:[esi]
  411022:	push   cs
  411023:	call   0xff7e571f
  411028:	clc    
  411029:	jo     0x411032
  41102b:	cld    
  41102c:	lock sahf 
  41102e:	mov    edi,esi
  411030:	bound  edx,QWORD PTR [edx]
  411032:	pushf  
  411033:	hlt    
  411034:	sub    al,0x19
  411036:	or     DWORD PTR [edx+esi*1+0x12e8341a],0x5f
  41103e:	cmp    esi,0x0
	...
  41104c:	mov    esi,0x2bffefcb
  411051:	test   DWORD PTR [edi+0x1e31b382],ecx
  411057:	add    BYTE PTR ds:0xff74814d,bl
  41105d:	xor    ebx,ebx
  41105f:	dec    ebx
  411060:	mov    al,ds:0x9b447cd8
  411065:	mov    ds:0x71f76a02,eax
  41106a:	cmp    DWORD PTR [edi+0x36],esp
  41106d:	or     bl,BYTE PTR [edx+eax*1]
  411070:	test   DWORD PTR [ecx],0x5a86e784
  411076:	cmp    esi,0x3f07c9fc
  41107c:	jle    0x4110c4
  41107e:	mov    ah,BYTE PTR [edi-0x7c]
  411081:	jo     0x4110c6
  411083:	add    BYTE PTR [eax+0x16],bl
  411086:	mov    edi,fs
  411088:	push   cs
  411089:	inc    ebp
  41108a:	add    al,BYTE PTR [eax]
  41108c:	cld    
  41108d:	dec    ecx
  41108e:	pop    es
  41108f:	and    eax,DWORD PTR [eax+0x3e]
  411092:	mov    edi,fs
  411094:	ins    BYTE PTR es:[edi],dx
  411095:	rol    DWORD PTR [edx+0x3731c7fe],1
  41109b:	leave  
  41109c:	mov    bh,0x9
  41109e:	sbb    al,0x0
  4110a0:	imul   DWORD PTR [eax-0x60896bf]
  4110a6:	xor    BYTE PTR [edi+edi*8+0x62],0x15
  4110ab:	cdq    
  4110ac:	sbb    DWORD PTR [edi],0x19
  4110af:	fwait
	...
  4110bc:	bound  esi,QWORD PTR [eax-0x6b067bf0]
  4110c2:	adc    eax,0xad8a9b
  4110c7:	test   cl,ch
  4110c9:	cwde   
  4110ca:	stc    
  4110cb:	sub    DWORD PTR [ebx+0x6b],0x5
  4110cf:	cli    
  4110d0:	sub    al,0x1e
  4110d2:	jmp    0xeda8c790
  4110d7:	fdivr  DWORD PTR [ebp+0xf]
  4110da:	ins    DWORD PTR es:[edi],dx
  4110db:	dec    eax
  4110dc:	mov    esp,0x34eded89
  4110e1:	push   ds
  4110e2:	push   ebx
  4110e3:	or     al,0x9f
  4110e5:	shl    BYTE PTR [ebx+eax*4],1
  4110e8:	test   eax,0x188022ec
  4110ed:	arpl   bp,bp
  4110ef:	jb     0x41114b
  4110f1:	mov    edi,DWORD PTR [edi-0x15]
  4110f4:	aaa    
  4110f5:	arpl   WORD PTR ds:0xeda4119f,dx
  4110fb:	or     BYTE PTR [ebx],0x6b
  4110fe:	test   DWORD PTR [ecx+eax*1-0x147c76e2],ebx
  411105:	push   ds
  411106:	cmp    ecx,0xcfa80af0
  41110c:	popa   
  41110d:	push   ds
  41110e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41110f:	inc    esi
  411110:	hlt    
  411111:	bound  edx,QWORD PTR [edx]
  411113:	(bad)  
  411114:	pop    esp
  411115:	loop   0x411140
  411117:	jl     0x4110e9
  411119:	(bad)  
  41111a:	in     eax,dx
  41111b:	jb     0x41109f
  41111d:	push   ds
  41111e:	fisttp DWORD PTR [ebx]
	...
  41112c:	dec    edi
  41112d:	or     DWORD PTR [edx+eax*4+0xfbb1e31],esp
  411134:	sub    BYTE PTR [eax-0x5648940b],bl
  41113a:	push   es
  41113b:	ss je  0x41115b
  41113e:	jb     0x411119
  411140:	jne    0x4110d9
  411142:	push   cs
  411143:	adc    ebp,ecx
  411145:	test   eax,0x97741ef7
  41114a:	push   ds
  41114b:	push   ss
  41114c:	(bad)  
  41114d:	jno    0x411146
  41114f:	xchg   esp,eax
  411150:	cld    
  411151:	or     bh,bl
  411153:	mov    bl,0x75
  411155:	sbb    al,0x6f
  411157:	add    al,0xcc
  411159:	mov    ds:0x6ddff606,al
  41115e:	out    dx,al
  41115f:	ins    DWORD PTR es:[edi],dx
  411160:	adc    ah,BYTE PTR [ebx+0x6]
  411163:	repnz xor al,0x97
  411166:	popa   
  411167:	push   ecx
  411168:	dec    esp
  411169:	test   DWORD PTR [ebp-0x17],eax
  41116c:	dec    esp
  41116d:	cs aas 
  41116f:	jmp    0xc182fd68
  411174:	pushf  
  411175:	add    al,0x60
  411177:	sub    bl,bh
  411179:	sbb    eax,0xc00cd972
  41117e:	cmp    al,0xe9
  411180:	hlt    
  411181:	imul   eax,esi,0x4161fd1d
  411187:	mov    eax,ds:0x9616a673
  41118c:	jg     0x4111fb
  41118e:	out    dx,al
  41118f:	into   
	...
  41119c:	popa   
  41119d:	sbb    al,0xf8
  41119f:	push   0xffffffec
  4111a1:	sbb    al,0x73
  4111a3:	mov    ch,0x73
  4111a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4111a6:	cli    
  4111a7:	add    edx,esi
  4111a9:	(bad)  
  4111aa:	out    0x2f,eax
  4111ac:	jne    0x411144
  4111ae:	push   cs
  4111af:	push   ecx
  4111b0:	inc    eax
  4111b1:	stos   DWORD PTR es:[edi],eax
  4111b2:	neg    DWORD PTR [esi+0x75]
  4111b5:	xchg   esi,eax
  4111b6:	or     dl,BYTE PTR [esi+0x3f]
  4111b9:	gs out dx,al
  4111bb:	and    al,BYTE PTR [edx+0x1c]
  4111be:	clc    
  4111bf:	add    BYTE PTR [ecx+0x6bfffc1a],dh
  4111c5:	imul   ebp,esi,0xf8e0545e
  4111cb:	dec    DWORD PTR [ebx+0x79]
  4111ce:	div    DWORD PTR [ebp+0xa]
  4111d1:	loopne 0x411245
  4111d3:	or     dh,ah
  4111d5:	jmp    0x411224
  4111d7:	jmp    ecx
  4111d9:	scas   al,BYTE PTR es:[edi]
  4111da:	lds    edx,FWORD PTR [esi+ebx*8]
  4111dd:	cmp    ecx,DWORD PTR [ebp-0x105ba214]
  4111e3:	push   esi
  4111e4:	dec    ebp
  4111e5:	mov    ds:0x608f4b7f,eax
  4111ea:	push   es
  4111eb:	je     0x41124f
  4111ed:	in     eax,0x3a
  4111ef:	add    DWORD PTR ds:0x2afff820,0x16
  4111f6:	test   DWORD PTR ds:0x472e65,edi
  4111fc:	sahf   
  4111fd:	adc    al,0x6e
  4111ff:	mov    DWORD PTR [eax],0x0
  411205:	add    BYTE PTR [eax],al
  411207:	add    BYTE PTR [eax],al
  411209:	add    BYTE PTR [eax],al
  41120b:	add    bl,bl
  41120d:	loop   0x411206
  41120f:	dec    DWORD PTR [esi+0x6645bf60]
  411215:	addr16 push es
  411217:	add    BYTE PTR [esi-0x3103bd13],bl
  41121d:	jmp    0x411261
  41121f:	clc    
  411220:	mov    esi,0x1e67f80c
  411225:	or     al,BYTE PTR [edi+0x0]
  411228:	xor    DWORD PTR [ebx+eax*4+0x4b],0xc00b671f
  411230:	push   0x27
  411232:	test   DWORD PTR [ebp-0x1a],edi
  411235:	data16 jb 0x411275
  411238:	fstp   QWORD PTR [ebx]
  41123a:	cld    
  41123b:	add    BYTE PTR [edx],ch
  41123d:	pop    ebx
  41123e:	mov    esi,DWORD PTR [ebp-0x5e]
  411241:	lea    ebx,[ecx]
  411243:	push   esi
  411244:	test   DWORD PTR [eax+0x11a9ff3c],0xa50b7587
  41124e:	cld    
  41124f:	pop    es
  411250:	and    ah,dl
  411252:	xor    edi,edi
  411254:	mov    ds:0x11dd6c01,al
  411259:	dec    ebp
  41125a:	test   DWORD PTR [ebp+0x8],ebx
  41125d:	xlat   BYTE PTR ds:[ebx]
  41125e:	jnp    0x4111e2
  411260:	cmp    DWORD PTR [esi],eax
  411262:	cmp    DWORD PTR [edi+edi*8+0x9],0xfffffff0
  411267:	add    al,0x74
  411269:	sub    eax,DWORD PTR [esi*2-0x4109b40]
	...
  41127c:	loopne 0x4112b4
  41127e:	(bad)
  411282:	out    0xc8,al
  411284:	mov    ch,0x5
  411286:	add    al,0x55
  411288:	jl     0x4112bf
  41128a:	add    ebx,0xffffffcb
  41128d:	pop    eax
  41128e:	dec    ebp
  41128f:	inc    esp
  411290:	mov    edi,0xf7000409
  411295:	(bad)  
  411296:	shl    bl,0xf7
  411299:	or     DWORD PTR [eax+eax*1],eax
  41129c:	mov    al,ds:0x328f1256
  4112a1:	(bad)  
  4112a2:	push   esp
  4112a3:	ins    BYTE PTR es:[edi],dx
  4112a4:	xchg   ebx,eax
  4112a5:	lahf   
  4112a6:	add    ch,BYTE PTR [edx-0x9]
  4112a9:	outs   dx,DWORD PTR ds:[esi]
  4112aa:	add    ch,BYTE PTR [edx-0x9]
  4112ad:	cld    
  4112ae:	lock sti 
  4112b0:	js     0x411330
  4112b2:	push   ss
  4112b3:	push   0xfffffff7
  4112b5:	pop    edi
  4112b6:	add    ch,al
  4112b8:	or     ah,BYTE PTR [edx]
  4112ba:	add    al,0x0
  4112bc:	in     al,dx
  4112bd:	leave  
  4112be:	out    dx,eax
  4112bf:	xor    al,0xc7
  4112c1:	jns    0x41132d
  4112c3:	loopne 0x411288
  4112c5:	mov    WORD PTR [esi+0x6562b288],es
  4112cb:	fcmove st,st(6)
  4112cd:	(bad)  
  4112cf:	add    esp,DWORD PTR [esi+0x317bdb1b]
  4112d5:	xchg   ebp,eax
  4112d6:	dec    ecx
  4112d7:	and    BYTE PTR [ebx-0x72fc2c92],0x62
  4112de:	push   ebp
  4112df:	js     0x4112e1
	...
  4112e9:	add    BYTE PTR [eax],al
  4112eb:	add    cl,ah
  4112ed:	(bad)  
  4112ee:	in     eax,dx
  4112ef:	or     al,0x37
  4112f1:	xchg   ebp,eax
  4112f2:	fadd   DWORD PTR [eax-0x5be9e57d]
  4112f8:	lods   al,BYTE PTR ds:[esi]
  4112f9:	sbb    ebx,DWORD PTR [ecx]
  4112fb:	dec    eax
  4112fc:	mov    bl,0x1a
  4112fe:	out    dx,al
  4112ff:	add    esi,edi
  411301:	bound  ebp,QWORD PTR [esi+edi*8-0x20]
  411305:	arpl   WORD PTR [ecx-0x2f],di
  411308:	loope  0x41129a
  41130a:	cmc    
  41130b:	and    BYTE PTR [ebx+0x1b],0x6
  41130f:	or     BYTE PTR [eax],0x63
  411312:	in     eax,dx
  411313:	or     al,0xb7
  411315:	(bad)  
  411316:	and    ah,dl
  411318:	rcl    DWORD PTR [eax+0x52246bf5],0xed
  41131f:	add    ecx,DWORD PTR [esi+0x66]
  411322:	scas   al,BYTE PTR es:[edi]
  411323:	mov    eax,eax
  411325:	push   cs
  411326:	adc    al,0x84
  411328:	call   0xb1694594
  41132d:	arpl   bp,bp
  41132f:	rcr    BYTE PTR [eax-0x8fc0fa6],cl
  411335:	ins    DWORD PTR es:[edi],dx
  411336:	lods   eax,DWORD PTR ds:[esi]
  411337:	clc    
  411338:	jmp    0x4112ec
  41133a:	cmp    eax,0x90a7036c
  41133f:	jg     0x4113c0
  411341:	mov    al,ds:0x19c7dd91
  411346:	sti    
  411347:	ja     0x41130e
  411349:	or     bl,BYTE PTR [eax-0x30]
  41134c:	pop    ecx
  41134d:	sbb    al,BYTE PTR [edi]
  41134f:	add    BYTE PTR [eax],0x0
	...
  41135a:	add    BYTE PTR [eax],al
  41135c:	stc    
  41135d:	mov    ds:0x8ff4b186,al
  411362:	aad    0x66
  411364:	ds adc ch,bh
  411367:	test   eax,0x62f81928
  41136c:	ds push ss
  41136e:	pop    esp
  41136f:	and    BYTE PTR [ebp+0x6d9c066d],dh
  411375:	push   cs
  411376:	test   BYTE PTR ds:0x6a4fafbf,ah
  41137c:	mov    dh,0xdd
  41137e:	dec    ebx
  41137f:	test   al,0xf4
  411381:	bound  esi,QWORD PTR [ecx-0x11]
  411384:	and    DWORD PTR [eax+0x62e72bcd],edi
  41138a:	mov    DWORD PTR [esp+eiz*2-0x76b0856],ebp
  411391:	or     bh,BYTE PTR [esi+0xc196198]
  411397:	sub    eax,ebp
  411399:	fisubr WORD PTR [ecx]
  41139b:	call   0x6cc67694
  4113a0:	dec    eax
  4113a1:	sbb    bh,al
  4113a3:	stc    
  4113a4:	hlt    
  4113a5:	imul   eax,DWORD PTR [ebx+0x662f3f6],0xf81dafd6
  4113af:	push   esp
  4113b0:	sub    eax,DWORD PTR [edx]
  4113b2:	inc    ebx
  4113b3:	sbb    al,0x20
  4113b5:	sbb    DWORD PTR [ecx+ebp*4],ecx
  4113b8:	jmp    0xf529169c
  4113bd:	(bad)  
  4113be:	div    DWORD PTR [eax+eax*1]
	...
  4113c9:	add    BYTE PTR [eax],al
  4113cb:	add    BYTE PTR [edi+0x18],dh
  4113ce:	jb     0x411371
  4113d0:	mov    WORD PTR [edx],gs
  4113d2:	pusha  
  4113d3:	sub    bl,dh
  4113d5:	or     dl,ah
  4113d7:	xchg   edi,eax
  4113d8:	icebp  
  4113d9:	sbb    BYTE PTR [esi+0x7218e724],cl
  4113df:	add    BYTE PTR [edx-0x68],bh
  4113e2:	jb     0x4113dc
  4113e4:	push   es
  4113e5:	frstor [eax+0x41]
  4113e8:	pop    esi
  4113e9:	lea    esi,[edi-0x71672602]
  4113ef:	inc    ebp
  4113f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4113f1:	cwde   
  4113f2:	jb     0x4113f0
  4113f4:	cdq    
  4113f5:	sbb    dh,al
  4113f7:	push   0x4700f3
  4113fc:	mov    dh,0xd2
  4113fe:	stc    
  4113ff:	(bad)  
  411400:	mov    ecx,0x8de442e6
  411405:	(bad)  
  411406:	jmp    0x1e00:0xaee11900
  41140d:	cmp    DWORD PTR gs:[ebp-0x1a],0x65
  411412:	pop    es
  411413:	test   BYTE PTR [ecx+0x65],bh
  411416:	push   es
  411417:	add    BYTE PTR [ebp+0x63],bl
  41141a:	loop   0x41141c
  41141c:	leave  
  41141d:	loopne 0x4113b1
  41141f:	add    dh,cl
  411421:	div    DWORD PTR fs:[ebp+0x6]
  411425:	mov    WORD PTR [ebx+0x36],fs
  411428:	fisub  WORD PTR [ebx+ecx*4+0x75]
  41142c:	imul   ah
  41142e:	stc    
  41142f:	mov    eax,DWORD PTR [eax]
	...
  411439:	add    BYTE PTR [eax],al
  41143b:	add    BYTE PTR [esi-0x5aae114c],al
  411441:	dec    ecx
  411442:	pusha  
  411443:	lods   eax,DWORD PTR ds:[esi]
  411444:	or     cl,BYTE PTR [edi+0x74]
  411447:	or     dl,bh
  411449:	pop    ebx
  41144a:	outs   dx,DWORD PTR ds:[esi]
  41144b:	add    al,0xa
  41144d:	dec    edi
  41144e:	jmp    0x411454
  411450:	jmp    0x27e3:0x1e0a0423
  411457:	jb     0x4113ed
  411459:	in     al,0xfb
  41145b:	cmp    ecx,esp
  41145d:	pop    edi
  41145e:	xchg   ah,ch
  411460:	sahf   
  411461:	mov    eax,DWORD PTR [ecx]
  411463:	xor    bh,0xdd
  411466:	ret    
  411467:	jg     0x41149c
  411469:	add    al,0x44
  41146b:	(bad)  
  41146d:	adc    eax,DWORD PTR [eax-0x57]
  411470:	scas   al,BYTE PTR es:[edi]
  411471:	adc    al,0x4d
  411473:	je     0x4114b6
  411475:	jae    0x411402
  411477:	dec    esp
  411478:	sub    ecx,DWORD PTR [ecx-0x388f1811]
  41147e:	arpl   si,ax
  411480:	mov    dl,0xa1
  411482:	add    al,BYTE PTR [eax]
  411484:	test   DWORD PTR [ecx],0xda434489
  41148a:	in     eax,dx
  41148b:	add    BYTE PTR [ebp-0x710011f7],cl
  411491:	or     esi,ebp
  411493:	inc    DWORD PTR [ebx+0x84f57c7]
  411499:	das    
  41149a:	mov    edi,0xf09b64a
  41149f:	rol    BYTE PTR [eax],0x0
	...
  4114aa:	add    BYTE PTR [eax],al
  4114ac:	sub    DWORD PTR [ebx],0xffffff87
  4114af:	jl     0x411480
  4114b1:	or     eax,esi
  4114b3:	sbb    ebp,eax
  4114b5:	out    dx,al
  4114b6:	dec    edi
  4114b7:	(bad)  
  4114b8:	push   0x42
  4114ba:	jns    0x411530
  4114bc:	rcr    DWORD PTR [eax],cl
  4114be:	icebp  
  4114bf:	jmp    0x411491
  4114c1:	xchg   esi,eax
  4114c2:	or     ebp,eax
  4114c4:	mov    al,BYTE PTR ds:0xb6c0fe7b
  4114ca:	pop    edx
  4114cb:	out    0xce,eax
  4114cd:	outs   dx,BYTE PTR ds:[esi]
  4114ce:	add    al,BYTE PTR [eax]
  4114d0:	mov    al,0xb6
  4114d2:	jbe    0x4114bb
  4114d4:	scas   al,BYTE PTR es:[edi]
  4114d5:	inc    ebx
  4114d6:	jns    0x4114d6
  4114d8:	mov    al,ds:0xa6e76a56
  4114dd:	push   ebx
  4114de:	jns    0x4114de
  4114e0:	nop
  4114e1:	push   esi
  4114e2:	outs   dx,BYTE PTR ds:[esi]
  4114e3:	out    0x9e,eax
  4114e5:	inc    ebx
  4114e6:	jns    0x4114e6
  4114e8:	jb     0x41154c
  4114ea:	sub    dh,BYTE PTR [eax+ebp*1+0xb]
  4114ee:	push   es
  4114ef:	shl    DWORD PTR [ecx+0x17],cl
  4114f2:	xor    esi,ebx
  4114f4:	aas    
  4114f5:	and    al,0xda
  4114f7:	add    ecx,edx
  4114f9:	jmp    0x41148c
  4114fb:	xor    BYTE PTR [esi+edx*1],0x14
  4114ff:	add    al,0xdd
  411501:	popf   
  411502:	jo     0x4114fa
  411504:	lock or ch,dh
  411507:	retf   
  411508:	inc    ecx
  411509:	pop    ss
  41150a:	ja     0x4114d2
  41150c:	cmp    al,0x17
  41150e:	ror    DWORD PTR [ebx],cl
	...
  41151c:	pop    ds
  41151d:	inc    esp
  41151e:	push   edx
  41151f:	jl     0x41154a
  411521:	mov    edx,fs
  411523:	imul   esi,edx,0xffffffa7
  411526:	inc    eax
  411527:	jl     0x411516
  411529:	and    dh,BYTE PTR [edx-0x3a7558e3]
  41152f:	dec    edi
  411530:	enter  0xc562,0x3
  411534:	test   DWORD PTR [edi],0x7f4deb60
  41153a:	scas   al,BYTE PTR es:[edi]
  41153b:	add    eax,DWORD PTR [edi+0x16]
  41153e:	fwait
  41153f:	or     ebx,edi
  411541:	add    ebx,DWORD PTR [edi+0x5a0be17c]
  411547:	leave  
  411548:	fst    DWORD PTR [esi]
  41154a:	stc    
  41154b:	cmc    
  41154c:	int3   
  41154d:	push   ss
  41154e:	jnp    0x41155b
  411550:	fistp  WORD PTR [esi-0x5b]
  411553:	jl     0x411516
  411555:	sub    al,0xac
  411557:	add    bh,dh
  411559:	scas   eax,DWORD PTR es:[edi]
  41155a:	je     0x4115c4
  41155c:	jne    0x41157d
  41155e:	rcl    bl,cl
  411560:	push   ds
  411561:	arpl   WORD PTR [ebx-0x3e],ax
  411564:	mov    eax,ds:0x4e6bf590
  411569:	sahf   
  41156a:	mov    eax,0x6a07f7b
  41156f:	mov    ch,0x78
  411571:	push   edi
  411572:	popa   
  411573:	and    DWORD PTR [edx-0xb1987ea],edi
  411579:	mov    ss,WORD PTR [ebp+0x11]
  41157c:	repz jl 0x4115c4
  41157f:	jmp    0x411584
	...
  41158c:	inc    ebp
  41158d:	dec    cl
  41158f:	xlat   BYTE PTR ds:[ebx]
  411590:	hlt    
  411591:	bound  ecx,QWORD PTR [ebx]
  411593:	test   eax,0xeeeb6467
  411598:	pop    esp
  411599:	push   es
  41159a:	pusha  
  41159b:	sub    bl,dh
  41159d:	lods   eax,DWORD PTR ds:[esi]
  41159e:	out    dx,al
  41159f:	sub    eax,0xf2066305
  4115a4:	mov    ah,0x91
  4115a6:	and    esi,DWORD PTR [esi+0x5652659c]
  4115ac:	lods   al,BYTE PTR ds:[esi]
  4115ad:	push   0xb303d5c6
  4115b2:	outs   dx,BYTE PTR ds:[esi]
  4115b3:	jmp    0xd1fa1bac
  4115b8:	lea    edi,[ebp+eax*2-0x17]
  4115bc:	and    al,0x15
  4115be:	jb     0x4115a1
  4115c0:	mov    WORD PTR [ebp+0x73],gs
  4115c3:	es jl  0x4115c3
  4115c6:	and    eax,0xfb156db3
  4115cb:	fidiv  DWORD PTR [ebx+ebx*8]
  4115ce:	test   DWORD PTR [esi],0x57f5155c
  4115d4:	sbb    ebx,DWORD PTR [esi+0x71]
  4115d7:	dec    esi
  4115d8:	dec    esp
  4115d9:	(bad)  
  4115da:	cli    
  4115db:	test   bh,0x5d
  4115de:	out    dx,al
  4115df:	addr16 mov ah,0x14
  4115e2:	clc    
  4115e3:	inc    esi
  4115e4:	sub    ah,BYTE PTR [ebx+eax*1]
  4115e7:	jmp    0x692bfeb3
  4115ec:	call   0x1100616
	...
  4115f9:	add    BYTE PTR [eax],al
  4115fb:	add    BYTE PTR ds:0xb20041e7,bl
  411601:	xor    ecx,edi
  411603:	jne    0x4115b3
  411605:	cwde   
  411606:	jb     0x411614
  411608:	mov    dh,0x7a
  41160a:	xor    BYTE PTR [eax],al
  41160c:	mov    fs,WORD PTR [esi+eax*8+0xf]
  411610:	or     edx,DWORD PTR [ebx+0x4]
  411613:	add    BYTE PTR [esi-0x60],bl
  411616:	inc    edx
  411617:	clc    
  411618:	pop    esi
  411619:	popa   
  41161a:	push   es
  41161b:	add    BYTE PTR [ecx+0x49ffe822],bl
  411621:	popa   
  411622:	push   es
  411623:	push   0x5e
  411625:	pop    es
  411626:	clc    
  411627:	imul   ebx,DWORD PTR [esi+0x7],0x8f1b8cf8
  41162e:	inc    edi
  41162f:	(bad)  
  411630:	retf   
  411631:	xchg   ecx,eax
  411632:	lock call ecx
  411635:	xor    ecx,edi
  411637:	jne    0x4115ff
  411639:	cwde   
  41163a:	jb     0x411638
  41163c:	mov    dh,0x88
  41163e:	xor    al,BYTE PTR [eax]
  411640:	push   cs
  411641:	fs (bad) 
  411643:	je     0x411660
  411645:	xchg   bh,ch
  411647:	add    DWORD PTR [esi],ebx
  411649:	popa   
  41164a:	outs   dx,BYTE PTR ds:[esi]
  41164b:	mov    ebp,0xfef81e56
  411650:	pop    ebx
  411651:	jno    0x411641
  411653:	inc    eax
  411654:	mov    ds:0x5550f899,eax
  411659:	mov    al,0x8a
  41165b:	test   esi,edi
  41165d:	nop
  41165e:	clc    
  41165f:	inc    DWORD PTR [eax]
	...
  411669:	add    BYTE PTR [eax],al
  41166b:	add    BYTE PTR [esi+0x2e],bh
  41166e:	loopne 0x4116a0
  411670:	mov    ds:0x5b89f899,eax
  411675:	jl     0x411667
  411677:	call   ecx
  411679:	mov    DWORD PTR [ecx-0x75652eb7],eax
  41167f:	inc    ebp
  411680:	retf   0x602f
  411683:	pop    ebp
  411684:	mul    DWORD PTR [ecx-0x105e003d]
  41168a:	outs   dx,BYTE PTR ds:[esi]
  41168b:	neg    BYTE PTR [eax+0x3747e1d]
  411691:	xor    al,BYTE PTR [esi-0x743277b5]
  411697:	test   BYTE PTR [edi+0xdfe7dcd],bl
  41169d:	or     ch,ah
  41169f:	fisttp WORD PTR gs:[edx+0x2]
  4116a3:	jmp    DWORD PTR [edx+0x60fe75de]
  4116a9:	in     eax,0xe7
  4116ab:	or     ecx,DWORD PTR [edi+0x6e]
  4116ae:	into   
  4116af:	(bad)  
  4116b0:	push   eax
  4116b1:	xchg   ebx,eax
  4116b2:	ja     0x41169b
  4116b4:	inc    eax
  4116b5:	lea    edi,[ebp+0x69]
  4116b8:	mul    DWORD PTR [ecx-0xd]
  4116bb:	addr16 mov dh,0x9
  4116be:	jg     0x411674
  4116c0:	and    ebp,DWORD PTR [ebp+0x3728fe7d]
  4116c6:	add    al,ch
  4116c8:	(bad)  
  4116c9:	cmc    
  4116ca:	jle    0x4116ca
  4116cc:	outs   dx,BYTE PTR ds:[esi]
  4116cd:	xchg   DWORD PTR [esi-0xa],esp
	...
  4116dc:	adc    BYTE PTR [ebp+0x7f],dl
  4116df:	test   BYTE PTR [ebx],ah
  4116e1:	push   ebp
  4116e2:	jge    0x4116e2
  4116e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4116e5:	and    DWORD PTR [ebp+0x7f09b667],ecx
  4116eb:	mov    ah,0xe3
  4116ed:	ins    BYTE PTR es:[edi],dx
  4116ee:	jge    0x4116ee
  4116f0:	call   0x272916eb
  4116f5:	idiv   BYTE PTR [esi-0x2]
  4116f8:	in     al,dx
  4116f9:	dec    ecx
  4116fa:	neg    BYTE PTR [eax]
  4116fc:	je     0x411754
  4116fe:	push   esi
  4116ff:	test   al,0xc
  411702:	clc    
  411703:	je     0x4116ec
  411705:	add    al,0x34
  411707:	(bad)  
  411708:	jb     0x41176c
  41170a:	int    0x70
  41170c:	mov    cl,0x13
  41170e:	ds ins BYTE PTR es:[edi],dx
  411710:	stos   BYTE PTR es:[edi],al
  411711:	stos   BYTE PTR es:[edi],al
  411712:	sar    BYTE PTR [eax-0x73],1
  411715:	outs   dx,BYTE PTR ds:[esi]
  411716:	in     al,0x43
  411718:	and    al,0x5d
  41171a:	sbb    eax,0xb8aa866c
  41171f:	js     0x4116d2
  411721:	(bad)  
  411723:	jo     0x4116a6
  411725:	adc    edx,ebx
  411727:	add    esi,edi
  411729:	bound  edx,QWORD PTR [ebx]
  41172b:	add    al,0xdf
  41172d:	call   0x675b:0x1468c315
  411734:	imul   edx,DWORD PTR [ebx],0x66e37889
  41173a:	xchg   ebp,eax
  41173b:	ins    BYTE PTR es:[edi],dx
  41173c:	mov    ebp,0x8a7913
	...
  411749:	add    BYTE PTR [eax],al
  41174b:	add    BYTE PTR [ebx+0x36],dh
  41174e:	jns    0x4117c8
  411750:	inc    ecx
  411751:	mov    ch,ch
  411753:	jmp    0x4117b9
  411755:	mov    ch,BYTE PTR [esi+0x49cd3003]
  41175b:	jo     0x411786
  41175d:	adc    edx,DWORD PTR [ecx-0x12]
  411760:	in     al,dx
  411761:	or     bh,BYTE PTR [esi]
  411763:	int3   
  411764:	sbb    DWORD PTR [ebx],edx
  411766:	ja     0x4117e6
  411768:	inc    eax
  411769:	or     edi,DWORD PTR [ecx]
  41176b:	js     0x4117e2
  41176d:	aad    0x15
  41176f:	jo     0x411772
  411771:	adc    ebp,esi
  411773:	or     BYTE PTR [ebx-0x12],dh
  411776:	in     eax,dx
  411777:	add    esi,edi
  411779:	jp     0x4117f3
  41177b:	jmp    0x4117b4
  41177d:	arpl   WORD PTR [edx-0x42],sp
  411780:	in     al,0xb3
  411782:	or     BYTE PTR [esi+0x78011ac0],ch
  411788:	fsub   DWORD PTR [ecx+0x7b]
  41178b:	js     0x411756
  41178d:	pop    esi
  41178e:	push   es
  41178f:	sub    eax,edx
  411791:	mov    es,WORD PTR [ebx+0x7412486c]
  411797:	pop    edi
  411798:	je     0x411769
  41179a:	loop   0x411772
  41179c:	and    BYTE PTR [ecx],dl
  41179e:	pop    es
  41179f:	pop    ebp
  4117a0:	mov    fs,ebp
  4117a2:	mov    ecx,0xf81108c1
  4117a7:	jmp    0xd9af9e4c
  4117ac:	hlt    
  4117ad:	add    DWORD PTR [ecx+0xb6],edi
	...
  4117bb:	add    BYTE PTR [esi-0x482f1196],al
  4117c1:	adc    eax,edi
  4117c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4117c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4117c5:	or     dh,al
  4117c7:	sahf   
  4117c8:	loopne 0x4117da
  4117ca:	jb     0x4117ad
  4117cc:	int3   
  4117cd:	jle    0x411810
  4117cf:	mov    fs,eax
  4117d1:	adc    BYTE PTR [edx-0x7ef1f73],dh
  4117d7:	jle    0x41181f
  4117d9:	push   0xffffffee
  4117db:	push   ss
  4117dc:	ss adc eax,edi
  4117df:	outs   dx,BYTE PTR ds:[esi]
  4117e0:	inc    esi
  4117e1:	push   ss
  4117e2:	clc    
  4117e3:	pushf  
  4117e4:	rcr    DWORD PTR [eax],cl
  4117e6:	clc    
  4117e7:	pop    esi
  4117e8:	mov    al,ds:0xd5410e96
  4117ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4117ee:	test   DWORD PTR [esi-0x60],0x883ee6d6
  4117f5:	adc    al,bh
  4117f7:	mov    ah,0xfc
  4117f9:	cli    
  4117fa:	fsubr  DWORD PTR [ebp+0x74f81089]
  411800:	lahf   
  411801:	sbb    al,bh
  411803:	es push 0x25110e97
  411809:	test   al,0xf7
  41180b:	push   ss
  41180c:	push   0x6016d6d7
  411811:	adc    eax,edi
  411813:	add    BYTE PTR [ebx+0x5e],dl
  411816:	out    dx,al
  411817:	and    al,0x93
  411819:	cwde   
  41181a:	clc    
  41181b:	inc    DWORD PTR [ebx]
  41181d:	scas   eax,DWORD PTR es:[edi]
  41181e:	lock inc DWORD PTR [eax]
	...
  411829:	add    BYTE PTR [eax],al
  41182b:	add    cl,cl
  41182d:	jge    0x411830
  41182f:	dec    eax
  411830:	cdq    
  411831:	cwde   
  411832:	clc    
  411833:	mov    ch,0xc6
  411835:	cmp    al,0xff
  411838:	mov    dh,0x8c
  41183a:	inc    eax
  41183b:	jmp    FWORD PTR [ecx+0x51dcb298]
  411841:	cwde   
  411842:	clc    
  411843:	call   0x39e896
  411848:	dec    ecx
  411849:	shl    bl,cl
  41184b:	test   DWORD PTR [ecx-0x68],0x9a21e5df
  411852:	clc    
  411853:	inc    ebx
  411855:	mov    ch,0xf0
  411857:	dec    DWORD PTR [ecx+0x6947dd7d]
  41185d:	cwde   
  41185e:	clc    
  41185f:	mov    ch,0x6a
  411861:	cmp    al,0xff
  411864:	leave  
  411865:	adc    cl,BYTE PTR [edi+edi*8]
  411868:	inc    ebx
  411869:	pop    ebp
  41186a:	out    dx,al
  41186b:	(bad)  
  41186c:	retf   
  41186d:	cwde   
  41186e:	clc    
  41186f:	call   DWORD PTR [ebx-0x36000f77]
  411875:	jge    0x411830
  411877:	inc    edi
  411878:	leave  
  411879:	cwde   
  41187a:	clc    
  41187b:	inc    ebp
  41187c:	(bad)  
  41187d:	jle    0x41185c
  41187f:	std    
  411880:	mov    ecx,0xca75f898
  411885:	jge    0x411864
  411887:	xor    ecx,DWORD PTR [esi]
  411889:	gs int 0xc2
  41188c:	sbb    ah,BYTE PTR [ebp+0x51]
  41188f:	mov    eax,DWORD PTR [eax]
	...
  411899:	add    BYTE PTR [eax],al
  41189b:	add    BYTE PTR [edx],cl
  41189d:	in     eax,0xc3
  41189f:	in     al,0x5b
  4118a1:	and    edi,esp
  4118a3:	push   eax
  4118a4:	mul    ecx
  4118a6:	retf   
  4118a7:	addr16 ss cli 
  4118aa:	jmp    0x4118b4
  4118ac:	pop    edi
  4118ad:	mov    ebx,0xfe42ff03
  4118b2:	imul   esp,DWORD PTR [ebp+0xa72192d],0xffffffb7
  4118b9:	xchg   esi,eax
  4118ba:	in     al,dx
  4118bb:	dec    edi
  4118bc:	je     0x411845
  4118be:	jle    0x4118c3
  4118c0:	and    dl,BYTE PTR [ecx+0x71]
  4118c3:	das    
  4118c4:	jo     0x411905
  4118c6:	jp     0x411848
  4118c8:	sbb    dh,BYTE PTR [edx]
  4118ca:	ja     0x4118cc
  4118cc:	idiv   ecx
  4118ce:	jmp    0x7a88c8d9
  4118d3:	repz idiv cl
  4118d6:	add    ebp,ebx
  4118d8:	xor    eax,0xdff7e7c1
  4118dd:	dec    ebx
  4118de:	jmp    0xc7e3:0xb77ef740
  4118e5:	loope  0x4118ce
  4118e7:	xor    dh,bh
  4118e9:	stc    
  4118ea:	xchg   bl,al
  4118ec:	add    esi,DWORD PTR [edx+eax*1-0x73]
  4118f0:	mov    dl,0xe5
  4118f2:	shl    BYTE PTR [edi-0x12],cl
  4118f5:	popa   
  4118f6:	ret    
  4118f7:	(bad)  
  4118f8:	cmp    DWORD PTR [edi],edx
  4118fa:	add    al,ch
  4118fc:	rcl    bl,cl
  4118fe:	jb     0x4118fe
	...
  41190c:	cld    
  41190d:	cmp    esi,esi
  41190f:	adc    eax,edi
  411911:	and    DWORD PTR ds:0xd2e00800,eax
  411917:	dec    BYTE PTR [edx-0x65c193ef]
  41191d:	push   eax
  41191e:	jno    0x411907
  411920:	rol    al,cl
  411922:	jb     0x411922
  411924:	clc    
  411925:	out    dx,al
  411926:	jnp    0x4118aa
  411928:	jb     0x41198d
  41192a:	and    eax,0x15cb6204
  41192f:	adc    eax,0x4b111038
  411934:	mov    dh,0x5a
  411936:	in     eax,dx
  411937:	into   
  411938:	jge    0x411938
  41193a:	ins    BYTE PTR es:[edi],dx
  41193b:	inc    eax
  41193c:	int3   
  41193d:	jl     0x41192c
  41193f:	jmp    0xbbc297d
  411944:	iret   
  411945:	mov    eax,ds:0xd9b174a1
  41194a:	sub    bh,BYTE PTR [eax+0x10]
  41194d:	dec    eax
  41194e:	push   ebp
  41194f:	ret    
  411950:	mov    al,ds:0x30631b10
  411955:	mov    ds:0x5b0b74ed,al
  41195a:	aad    0x73
  41195c:	mov    WORD PTR [edi],cs
  41195e:	mov    ecx,0x2e7ad9eb
  411963:	add    al,0xf
  411965:	gs in  eax,dx
  411967:	add    esi,DWORD PTR [edi+0xf]
  41196a:	sbb    ecx,DWORD PTR [edi+ebx*2]
  41196d:	xor    BYTE PTR [edx+0x74],bl
	...
  41197b:	add    BYTE PTR [ecx+0xf],ah
  41197e:	(bad)  [edx-0x50]
  411981:	mov    eax,ds:0x5acb74ed
  411986:	xchg   ebp,eax
  411987:	sub    cl,BYTE PTR [eax+0xf]
  41198a:	jns    0x411977
  41198c:	mul    BYTE PTR [edx-0x13]
  41198f:	cmp    DWORD PTR [ecx],0xffffff95
  411992:	in     eax,0x6b
  411994:	or     al,0x10
  411996:	popa   
  411997:	je     0x4119c2
  411999:	xchg   ebp,eax
  41199a:	pop    ecx
  41199b:	je     0x411948
  41199d:	pop    edx
  41199e:	inc    ebp
  41199f:	cmp    dh,BYTE PTR [ebx+0x364a490f]
  4119a5:	in     ax,dx
  4119a7:	into   
  4119a8:	jge    0x4119a8
  4119aa:	ins    BYTE PTR es:[edi],dx
  4119ab:	aas    
  4119ac:	sbb    al,0xb8
  4119ae:	push   es
  4119af:	sahf   
  4119b0:	push   cs
  4119b1:	movd   mm4,DWORD PTR [ecx+0x110e976b]
  4119b8:	dec    edi
  4119b9:	mov    eax,ds:0xa76d1ef7
  4119be:	cli    
  4119bf:	push   0x21
  4119c1:	into   
  4119c2:	dec    ebx
  4119c3:	test   al,0xf4
  4119c5:	bound  eax,QWORD PTR [edi]
  4119c7:	ins    DWORD PTR es:[edi],dx
  4119c8:	xor    DWORD PTR [ebx+0x6],esp
  4119cb:	jmp    0xa3046947
  4119d0:	mov    ch,0xe
  4119d2:	clc    
  4119d3:	fidiv  WORD PTR [eax]
  4119d5:	into   
  4119d6:	add    eax,0x39e1f4e9
  4119db:	mov    dl,0x60
  4119dd:	mov    ds:0xe906,eax
	...
  4119ea:	add    BYTE PTR [eax],al
  4119ec:	cmc    
  4119ed:	out    0xb3,al
  4119ef:	call   0x4c47ce8
  4119f4:	or     BYTE PTR [ecx+0x5df4e945],bl
  4119fa:	or     BYTE PTR [edi+0x6a0662f2],0x26
  411a01:	fimul  WORD PTR [ebx+0x28]
  411a04:	repz bound eax,QWORD PTR [edi]
  411a07:	gs jb  0x411a6d
  411a0a:	push   es
  411a0b:	jmp    0x22d46981
  411a10:	cmp    cl,BYTE PTR [esi]
  411a12:	clc    
  411a13:	div    BYTE PTR [eax-0x26]
  411a16:	add    eax,0x39e1f4e9
  411a1b:	pop    esi
  411a1c:	js     0x4119c1
  411a1e:	push   es
  411a1f:	jmp    0xe8b90119
  411a24:	hlt    
  411a25:	bound  eax,QWORD PTR [ebx+0x4598ac1c]
  411a2b:	jmp    0xdbc37824
  411a30:	sti    
  411a31:	bound  eax,QWORD PTR [esi]
  411a33:	add    BYTE PTR [esi],ah
  411a35:	leave  
  411a36:	pop    edi
  411a37:	inc    ecx
  411a38:	push   cs
  411a39:	xor    al,bh
  411a3b:	(bad)  
  411a3c:	sbb    edx,ecx
  411a3e:	dec    esp
  411a3f:	inc    ecx
  411a40:	fimul  WORD PTR [esi+0x145df842]
  411a46:	lock add cl,dl
  411a49:	in     eax,0x4f
  411a4b:	add    esi,ecx
  411a4d:	popa   
  411a4e:	sub    esi,esi
	...
  411a5c:	mov    BYTE PTR [eax+0x6bf1f872],dl
  411a62:	ret    
  411a63:	dec    ebx
  411a64:	(bad)  
  411a65:	popa   
  411a66:	mov    esi,eax
  411a68:	aad    0x8b
  411a6a:	jb     0x411a71
  411a6c:	test   DWORD PTR [eax+0x5],0x518c9e00
  411a73:	or     al,0x25
  411a75:	rcr    BYTE PTR [edi-0x75],1
  411a78:	inc    esp
  411a79:	add    ecx,DWORD PTR [edi-0x6f355b3]
  411a7f:	bndldx (bad),[ebx+0x5]
  411a83:	add    BYTE PTR [esi-0x71fef652],cl
  411a89:	popa   
  411a8a:	outs   dx,BYTE PTR ds:[esi]
  411a8b:	mov    edx,0xfef827b6
  411a90:	dec    ecx
  411a91:	test   eax,0x614e3131
  411a96:	or     eax,eax
  411a98:	push   ecx
  411a99:	(bad)  
  411a9b:	add    BYTE PTR [esi+0x61],bl
  411a9e:	cmp    DWORD PTR [edi+0x46],0x61
  411aa2:	pop    es
  411aa3:	test   BYTE PTR [ecx+eiz*2+0x6],ah
  411aa7:	add    cl,al
  411aa9:	or     BYTE PTR [eax],al
  411aab:	call   0x3a3531
  411ab0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411ab1:	sbb    ch,al
  411ab3:	dec    DWORD PTR [ecx+0x9]
  411ab6:	stc    
  411ab7:	jne    0x411ab0
  411ab9:	stos   DWORD PTR es:[edi],eax
  411aba:	je     0x411b32
  411abc:	add    esp,DWORD PTR [esi+ecx*1+0x46]
	...
  411acb:	add    BYTE PTR [eax],cl
  411acd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411ace:	fcmovnb st,st(3)
  411ad0:	(bad)  
  411ad1:	mov    edx,0x4b82ff03
  411ad6:	pop    ebx
  411ad7:	std    
  411ad8:	daa    
  411ad9:	cli    
  411ada:	add    ecx,DWORD PTR [ebx]
  411adc:	mov    bh,0x15
  411ade:	(bad)  
  411adf:	mov    bl,0xf7
  411ae1:	stc    
  411ae2:	add    ebp,DWORD PTR [edx-0x9]
  411ae5:	xchg   dh,cl
  411ae7:	out    0x27,eax
  411ae9:	scas   eax,DWORD PTR es:[edi]
  411aea:	into   
  411aeb:	jmp    0x411b14
  411aed:	lock add ebp,DWORD PTR [edx-0x9]
  411af1:	repz je 0x411b08
  411af4:	lods   al,BYTE PTR ds:[esi]
  411af5:	rol    edx,0xff
  411af8:	std    
  411af9:	cmp    DWORD PTR [esp+eax*4],eax
  411afc:	cmp    dl,0x3
  411aff:	add    BYTE PTR [edx+0x47],dh
  411b02:	outs   dx,BYTE PTR ds:[esi]
  411b03:	dec    edi
  411b04:	cwde   
  411b05:	scas   eax,DWORD PTR es:[edi]
  411b06:	pop    edx
  411b07:	dec    BYTE PTR [edx]
  411b09:	into   
  411b0a:	jne    0x411b20
  411b0c:	jl     0x411b5f
  411b0e:	ret    
  411b0f:	(bad)  
  411b10:	in     eax,dx
  411b11:	mov    ecx,0x3f6a77fe
  411b16:	bound  ecx,QWORD PTR [edi-0x23]
  411b19:	stc    
  411b1a:	fcos   
  411b1c:	fdivp  st(4),st
  411b1e:	fcos   
  411b20:	popa   
  411b21:	ja     0x411b91
  411b23:	inc    BYTE PTR [edx]
  411b25:	test   DWORD PTR [ecx+0x4400f740],edi
  411b2b:	jae    0x411ace
  411b2d:	in     al,0xef
  411b2f:	fild   WORD PTR [eax]
	...
  411b39:	add    BYTE PTR [eax],al
  411b3b:	add    BYTE PTR [edi+0x65],cl
  411b3e:	mov    edi,0xbf8338fe
  411b43:	fild   DWORD PTR [edx+0x284f6247]
  411b49:	arpl   dx,bx
  411b4b:	dec    edi
  411b4c:	mov    fs,WORD PTR [edx-0x2d]
  411b4f:	or     BYTE PTR [ebp+0x14f75062],cl
  411b55:	or     al,0xf3
  411b57:	cmp    BYTE PTR [ebp+0x40fceda1],0x97
  411b5e:	push   ss
  411b5f:	fdiv   st(0),st
  411b61:	or     eax,DWORD PTR [ecx-0x4e]
  411b64:	icebp  
  411b65:	xchg   ebp,eax
  411b66:	in     eax,0x5b
  411b68:	shl    DWORD PTR [ecx-0x6b1e8ee0],0xf5
  411b6f:	jo     0x411bd3
  411b71:	addr16 adc bh,dh
  411b74:	clc    
  411b75:	cli    
  411b76:	or     bl,al
  411b78:	leave  
  411b79:	or     eax,DWORD PTR [ecx]
  411b7b:	mul    DWORD PTR [eax-0x46b08cf5]
  411b81:	xchg   ebp,eax
  411b82:	in     eax,0x5b
  411b84:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411b85:	mov    eax,ds:0x95a970e8
  411b8a:	rcr    DWORD PTR [ebx-0xa],0xa5
  411b8e:	fdiv   DWORD PTR [eax-0x67]
  411b91:	xchg   ebp,eax
  411b92:	leave  
  411b93:	jo     0x411b80
  411b95:	out    dx,eax
  411b96:	and    al,0xc3
  411b98:	mov    BYTE PTR [ecx-0x13],bh
  411b9b:	jo     0x411ba8
  411b9d:	(bad)  
  411b9e:	mov    eax,0x16
	...
  411bab:	add    BYTE PTR [eax-0x69],ah
  411bae:	cs add al,0x70
  411bb1:	xchg   ebp,eax
  411bb2:	mov    ebp,0xa0a6525b
  411bb7:	jo     0x411c2e
  411bb9:	and    edi,esi
  411bbb:	jo     0x411b68
  411bbd:	push   ss
  411bbe:	ins    DWORD PTR es:[edi],dx
  411bbf:	out    dx,al
  411bc0:	inc    esp
  411bc1:	(bad)  
  411bc2:	fadd   DWORD PTR [esi+0x70810c50]
  411bc8:	dec    edi
  411bc9:	aad    0x77
  411bcb:	jo     0x411c06
  411bcd:	js     0x411bd5
  411bcf:	jmp    0x6f3fb27b
  411bd4:	add    DWORD PTR [esp+ecx*2],esp
  411bd7:	test   al,0xf4
  411bd9:	or     esi,DWORD PTR [edx+0x5d]
  411bdc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411bdd:	xchg   esi,eax
  411bde:	push   cs
  411bdf:	inc    ecx
  411be0:	frstor [eax-0x52d8b109]
  411be6:	int    0x2b
  411be8:	clc    
  411be9:	bound  edx,QWORD PTR [ecx+0x72]
  411bec:	cwde   
  411bed:	loop   0x411bb1
  411bef:	adc    eax,0x5cf8096f
  411bf4:	mov    cl,0xe
  411bf6:	push   edi
  411bf7:	es jmp 0x5616135b
  411bfd:	mov    ds:0x1e2ce945,al
  411c02:	aaa    
  411c03:	jmp    0xf70779fc
  411c08:	jns    0x411bc3
  411c0a:	add    eax,0x4221f4e9
  411c0f:	icebp  
	...
  411c1c:	cmc    
  411c1d:	bound  eax,QWORD PTR [esi]
  411c1f:	jmp    0xe733bb63
  411c24:	clc    
  411c25:	bound  eax,QWORD PTR [esi]
  411c27:	push   ebx
  411c28:	repz jl 0x411c31
  411c2b:	inc    ebx
  411c2c:	sti    
  411c2d:	jl     0x411c35
  411c2f:	pop    esp
  411c30:	mov    esi,0x6e745716
  411c35:	push   ss
  411c36:	lock mov esi,0x3cf79a08
  411c3c:	jecxz  0x411c46
  411c3e:	jb     0x411bed
  411c40:	retf   
  411c41:	out    0x36,eax
  411c43:	jmp    0x16077a3c
  411c48:	out    dx,al
  411c49:	sti    
  411c4a:	je     0x411c34
  411c4c:	hlt    
  411c4d:	bound  ebp,QWORD PTR [esi+0x4c]
  411c50:	mov    esp,DWORD PTR [ebx+0xc790006]
  411c56:	or     al,0xe8
  411c58:	imul   esp,DWORD PTR [edx],0x8e0efff9
  411c5e:	(bad)  
  411c5f:	lea    edx,[ebx-0x66000f76]
  411c65:	cs push esi
  411c67:	call   0x3a3e45
  411c6c:	xchg   edi,eax
  411c6d:	fcmovnu st,st(3)
  411c6f:	idiv   DWORD PTR [ecx+0x5235df79]
  411c75:	jns    0x411c6f
  411c77:	push   0xe
  411c79:	cs call 0xf7a6bbe7
  411c7f:	mov    ch,0x0
	...
  411c89:	add    BYTE PTR [eax],al
  411c8b:	add    dl,bh
  411c8d:	xchg   ecx,eax
  411c8e:	clc    
  411c8f:	call   FWORD PTR [ecx]
  411c91:	dec    esp
  411c92:	in     eax,0x48
  411c94:	(bad)  
  411c95:	gs out dx,al
  411c97:	xor    eax,0x89f878a1
  411c9c:	push   ebx
  411c9d:	(bad)  
  411c9e:	lock (bad) 
  411ca0:	stc    
  411ca1:	sub    al,0xf8
  411ca3:	addr16 ret 
  411ca5:	sub    eax,0xcaa90047
  411caa:	fcomi  st,st(7)
  411cac:	cdq    
  411cad:	js     0x411ca7
  411caf:	xor    eax,0x46cdaf
  411cb4:	(bad)  
  411cb5:	jo     0x411cf6
  411cb7:	jmp    FWORD PTR [ecx-0x5e137d7a]
  411cbd:	js     0x411cb7
  411cbf:	push   0xffffff8e
  411cc1:	sub    eax,0x5ecf68fe
  411cc6:	div    DWORD PTR [ebp-0x76f76]
  411ccc:	cdq    
  411ccd:	dec    edx
  411cce:	in     eax,0x48
  411cd0:	maxps  xmm5,xmm6
  411cd3:	stc    
  411cd4:	adc    BYTE PTR [edx-0x8],bh
  411cd7:	mov    edi,esi
  411cd9:	jbe    0x411d36
  411cdb:	test   BYTE PTR [eax-0x28],0xdd
  411cdf:	(bad)  
  411ce0:	fsub   st,st(0)
  411ce2:	fild   DWORD PTR [eax-0x9]
  411ce5:	mov    BYTE PTR [esi+0x689028db],bh
  411ceb:	(bad)  
  411cec:	loop   0x411cc8
  411cee:	mov    ebx,0x40
	...
  411cfb:	add    bh,dh
  411cfd:	mov    bl,0x4c
  411cff:	inc    ebp
  411d00:	sbb    BYTE PTR [eax-0x57e47b86],ch
  411d06:	push   0xdbfb9dfe
  411d0b:	add    ecx,DWORD PTR [esi+0x42ff03ba]
  411d11:	addr16 jo 0x411d12
  411d14:	lock push ecx
  411d16:	ds loope 0x411d58
  411d19:	mov    ebx,0xb8a2e803
  411d1e:	push   0x637f6efe
  411d23:	not    al
  411d25:	jno    0x411cab
  411d27:	mov    esp,0xfe6871db
  411d2c:	test   DWORD PTR [ebp-0x608982c],0x87b0bd58
  411d36:	sti    
  411d37:	out    0xed,eax
  411d39:	mov    ecx,0xe7a0fe68
  411d3e:	jb     0x411d36
  411d40:	cwde   
  411d41:	sub    DWORD PTR [edx+0x74],ebp
  411d44:	jmp    DWORD PTR [ecx]
  411d46:	jns    0x411d87
  411d48:	mov    BYTE PTR [ecx],bl
  411d4a:	push   0xffffffb4
  411d4c:	xchg   ebx,eax
  411d4d:	leave  
  411d4e:	imul   edi,esi,0xe7fa4f78
  411d54:	ja     0x411d90
  411d56:	imul   edi,esi,0xf65a8f68
  411d5c:	pusha  
  411d5d:	arpl   WORD PTR [eax+0x6d],sp
	...
  411d6b:	add    bl,ah
  411d6d:	pop    edx
  411d6e:	xchg   ebp,eax
  411d6f:	repnz adc BYTE PTR [eax],cl
  411d72:	xchg   ecx,eax
  411d73:	ins    DWORD PTR es:[edi],dx
  411d74:	cmp    edi,0xffffff90
  411d77:	ins    DWORD PTR es:[edi],dx
  411d78:	inc    ecx
  411d79:	or     bl,bh
  411d7b:	sti    
  411d7c:	push   eax
  411d7d:	jg     0x411dac
  411d7f:	ins    DWORD PTR es:[edi],dx
  411d80:	xor    DWORD PTR [eax],ecx
  411d82:	cmp    esp,DWORD PTR [ecx+eiz*1+0x8]
  411d86:	imul   ebp,DWORD PTR [ebp-0x55],0xd8d6555a
  411d8d:	pop    es
  411d8e:	pop    ecx
  411d8f:	ins    DWORD PTR es:[edi],dx
  411d90:	dec    ebx
  411d91:	daa    
  411d92:	pop    ecx
  411d93:	ins    DWORD PTR es:[edi],dx
  411d94:	or     DWORD PTR [eax],ecx
  411d96:	sar    ebx,cl
  411d98:	sbb    bl,ah
  411d9a:	aas    
  411d9b:	ins    DWORD PTR es:[edi],dx
  411d9c:	stc    
  411d9d:	pop    es
  411d9e:	jae    0x411df0
  411da0:	jmp    0x1e9d4eac
  411da5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411da6:	sub    BYTE PTR [ebp-0x1f],ch
  411da9:	int    0x1d
  411dab:	jne    0x411d86
  411dad:	pop    es
  411dae:	push   ss
  411daf:	or     eax,0x6d110834
  411db4:	xor    esi,0x10
  411db7:	ins    DWORD PTR es:[edi],dx
  411db8:	sar    edx,0xd9
  411dbb:	sar    BYTE PTR [ecx-0x674906f9],0xf
  411dc2:	icebp  
  411dc3:	ins    BYTE PTR es:[edi],dx
  411dc4:	nop
  411dc5:	pop    ecx
  411dc6:	lods   al,BYTE PTR ds:[esi]
  411dc7:	ins    BYTE PTR es:[edi],dx
  411dc8:	mov    eax,ds:0xa1679b07
  411dcd:	pop    es
  411dce:	fstp   DWORD PTR [ebx+0x0]
	...
  411dd9:	add    BYTE PTR [eax],al
  411ddb:	add    BYTE PTR [edx-0x76932f5c],dl
  411de1:	int    0xcd
  411de3:	je     0x411d66
  411de5:	pop    es
  411de6:	(bad)  
  411de7:	jo     0x411e1f
  411de9:	or     BYTE PTR [ecx+0x70abb6c],bh
  411def:	rcl    BYTE PTR [ebp+eax*1-0x8],0xae
  411df4:	ror    DWORD PTR [esi+0x385b91fa],cl
  411dfa:	push   es
  411dfb:	jmp    0xe950400d
  411e00:	and    esp,ebx
  411e02:	jmp    0x1ee9:0x6d0bb86a
  411e09:	call   0x2901:0xff2cf4f7
  411e10:	call   0xd57f:0xa7248e08
  411e17:	shl    DWORD PTR ds:0xcd4f907,1
  411e1d:	dec    DWORD PTR [esi]
  411e1f:	push   edi
  411e20:	fwait
  411e21:	or     al,bh
  411e23:	aam    0x90
  411e25:	or     BYTE PTR [edx-0xf],dh
  411e28:	pushf  
  411e29:	aaa    
  411e2a:	inc    esi
  411e2b:	arpl   WORD PTR ds:[ebx],bx
  411e2e:	vpmuludq ymm5,ymm2,YMMWORD PTR [edi+0x22773d8b]
  411e36:	repz es loope 0x411e94
  411e3a:	out    dx,al
  411e3b:	xchg   edi,eax
  411e3c:	icebp  
  411e3d:	bound  eax,QWORD PTR [esi]
  411e3f:	loop   0x411e41
	...
  411e49:	add    BYTE PTR [eax],al
  411e4b:	add    BYTE PTR [edi+ecx*4],dh
  411e4e:	add    ah,BYTE PTR [eax]
  411e50:	ss pop edx
  411e52:	push   es
  411e53:	push   es
  411e54:	rcl    DWORD PTR [esi-0x12],0x87
  411e58:	adc    DWORD PTR [ebx+0x6],esp
  411e5b:	loop   0x411e91
  411e5d:	pop    DWORD PTR [edx]
  411e5f:	and    BYTE PTR [esi],dh
  411e61:	pop    edx
  411e62:	push   es
  411e63:	jo     0x411e1b
  411e65:	push   cs
  411e66:	clc    
  411e67:	push   esp
  411e68:	and    edi,esi
  411e6a:	xchg   edx,eax
  411e6b:	sub    ebx,DWORD PTR [eax*1+0x50f248e]
  411e72:	jb     0x411e74
  411e74:	mov    dl,0x7a
  411e76:	jb     0x411e70
  411e78:	mov    cl,0x14
  411e7a:	or     al,ch
  411e7c:	jb     0x411e47
  411e7e:	clc    
  411e7f:	call   DWORD PTR [ebp-0x5e]
  411e82:	jae    0x411ebf
  411e84:	out    0x23,eax
  411e86:	hlt    
  411e87:	push   0x5e
  411e89:	mov    eax,DWORD PTR [edx-0xc]
  411e8c:	push   cs
  411e8d:	jp     0x411f01
  411e8f:	cld    
  411e90:	jbe    0x411e45
  411e92:	ins    BYTE PTR es:[edi],dx
  411e93:	push   DWORD PTR [ecx+0x6]
  411e96:	mov    eax,0xf82a3874
  411e9b:	(bad)  
  411e9d:	mov    ecx,0xaa1675f8
  411ea2:	lock ds xchg ecx,eax
  411ea5:	jns    0x411e9f
  411ea7:	jne    0x411ecb
  411ea9:	jns    0x411f1d
  411eab:	or     BYTE PTR [esi+0xff38c8],dh
	...
  411eb9:	add    BYTE PTR [eax],al
  411ebb:	add    BYTE PTR [ecx-0x4e0b8d87],dh
  411ec1:	adc    edi,esp
  411ec3:	jmp    FWORD PTR [ebx-0x1eeb1ff7]
  411ec9:	js     0x411ec3
  411ecb:	jmp    FWORD PTR [ebx-0x73da2083]
  411ed1:	js     0x411ecb
  411ed3:	leave  
  411ed4:	sbb    al,0xb
  411ed6:	clc    
  411ed7:	push   esp
  411ed8:	push   ebp
  411ed9:	stos   DWORD PTR es:[edi],eax
  411eda:	test   ah,al
  411edc:	or     dh,BYTE PTR [ecx]
  411ede:	stc    
  411edf:	jne    0x411ea3
  411ee1:	test   eax,0x78b146e8
  411ee6:	or     al,0xc0
  411ee8:	sub    esp,DWORD PTR [ebx+0x58]
  411eeb:	leave  
  411eec:	int3   
  411eed:	or     bh,al
  411eef:	mov    ebx,cs
  411ef1:	mov    es,WORD PTR [edi-0x1]
  411ef4:	sub    ecx,DWORD PTR [ebx]
  411ef6:	loopne 0x411e99
  411ef8:	div    DWORD PTR [ebx+ebp*2]
  411efb:	(bad)  
  411efc:	in     al,dx
  411efd:	mov    ebx,0xfb9783fc
  411f02:	add    eax,DWORD PTR [eax]
  411f04:	jo     0x411f54
  411f06:	outs   dx,BYTE PTR ds:[esi]
  411f07:	out    0xf3,eax
  411f09:	cmp    DWORD PTR [ebx-0x2],ebp
  411f0c:	outs   dx,BYTE PTR ds:[esi]
  411f0d:	ds pop esi
  411f0f:	(bad)  
  411f10:	loop   0x411ed1
  411f12:	ins    BYTE PTR es:[edi],dx
  411f13:	je     0x411f78
  411f15:	in     al,0xf6
  411f17:	neg    DWORD PTR [edi+0x21]
  411f1a:	ret    0x40fe
  411f1d:	xor    dh,0xeb
	...
  411f2c:	dec    esi
  411f2d:	cwde   
  411f2e:	add    eax,DWORD PTR [eax]
  411f30:	div    DWORD PTR [ebx+0x1e]
  411f33:	imul   esi,DWORD PTR [esi-0x4f182a05],0xec0003c5
  411f3d:	cmp    esi,esi
  411f3f:	add    al,0x1e
  411f41:	jecxz  0x411f46
  411f43:	add    bh,dh
  411f45:	xor    BYTE PTR [ebx+0x67],0xd3
  411f49:	and    al,bl
  411f4b:	call   DWORD PTR [eax]
  411f4d:	xchg   ecx,eax
  411f4e:	(bad)  
  411f50:	idiv   eax
  411f52:	jae    0x411edc
  411f54:	bound  esp,QWORD PTR [edx-0x44b1c425]
  411f5a:	add    edx,DWORD PTR [esi-0x31]
  411f5d:	xor    BYTE PTR [esi],bl
  411f5f:	add    bh,dh
  411f61:	adc    BYTE PTR [esp+esi*2-0xb],al
  411f65:	pusha  
  411f66:	cmc    
  411f67:	mov    edi,esp
  411f69:	adc    esi,0x57b76ee2
  411f6f:	addr16 icebp 
  411f71:	bnd ret 0x42ff
  411f75:	bound  edx,QWORD PTR [edx]
  411f77:	cs idiv ecx
  411f7a:	clc    
  411f7b:	mov    edi,0x5ceb6322
  411f80:	xor    ebx,eax
  411f82:	fstp   st(4)
  411f84:	retf   0x2e79
  411f87:	add    al,0x8f
  411f89:	xchg   esp,eax
  411f8a:	stc    
  411f8b:	add    esi,edi
  411f8d:	pop    edi
  411f8e:	mov    ebp,0x7b
	...
  411f9b:	add    bl,ch
  411f9d:	es push esi
  411f9f:	sub    dh,bl
  411fa1:	mov    eax,ds:0xf458d1ed
  411fa6:	cli    
  411fa7:	add    esi,edi
  411fa9:	push   edi
  411faa:	lods   eax,DWORD PTR ds:[esi]
  411fab:	out    dx,eax
  411fac:	div    bh
  411fae:	in     al,0x7d
  411fb0:	clc    
  411fb1:	fidivr DWORD PTR [edx]
  411fb3:	push   ecx
  411fb4:	outs   dx,DWORD PTR ds:[esi]
  411fb5:	sahf   
  411fb6:	mov    ch,0x7d
  411fb8:	mov    bl,0xfe
  411fba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411fbb:	add    al,0xf7
  411fbd:	xlat   BYTE PTR ds:[ebx]
  411fbe:	and    cl,BYTE PTR [edx+esi*1+0x63]
  411fc2:	in     eax,dx
  411fc3:	push   0xef6926ab
  411fc8:	adc    BYTE PTR [ebx+ebx*8],al
  411fcb:	sti    
  411fcc:	sbb    al,dh
  411fce:	push   edi
  411fcf:	imul   ecx,DWORD PTR [ecx],0x6d64bad9
  411fd5:	sahf   
  411fd6:	inc    ecx
  411fd7:	jl     0x411fc1
  411fd9:	fcomp  DWORD PTR [edx+0x259d7d50]
  411fdf:	jl     0x411fd9
  411fe1:	loop   0x411fd2
  411fe3:	add    esi,eax
  411fe5:	fst    QWORD PTR [ecx+0x2103d968]
  411feb:	out    dx,eax
  411fec:	fdiv   st(2),st
  411fee:	int    0xc2
  411ff0:	leave  
  411ff1:	add    esp,DWORD PTR [ebx-0x41]
  411ff4:	shl    BYTE PTR [edx+0x431b905],1
  411ffa:	add    DWORD PTR [ebp-0x50],ebx
  411ffd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411ffe:	ss inc esi
	...
  41200c:	cld    
  41200d:	bound  eax,QWORD PTR [esi]
  41200f:	pushf  
  412010:	and    edi,eax
  412012:	div    DWORD PTR [eax+eiz*4-0x5]
  412016:	pop    ecx
  412017:	sub    al,0x1e
  412019:	add    eax,0x3a98a90c
  41201e:	outs   dx,BYTE PTR ds:[esi]
  41201f:	out    0x9d,al
  412021:	mov    ds:0xfb1b3906,al
  412026:	inc    edx
  412027:	(bad)  
  412028:	fist   WORD PTR [ebx+0x43c53e6e]
  41202e:	push   es
  41202f:	inc    ecx
  412030:	sti    
  412031:	(bad)  
  412032:	out    0x6f,eax
  412034:	cmp    al,0x63
  412036:	ins    DWORD PTR es:[edi],dx
  412037:	sub    bl,bh
  412039:	mov    dl,0xf7
  41203b:	adc    al,0x4b
  41203d:	sti    
  41203e:	and    al,BYTE PTR [ecx]
  412040:	into   
  412041:	add    al,0xef
  412043:	mov    cl,0x34
  412045:	add    al,0xf8
  412047:	mov    al,0xba
  412049:	pop    ebx
  41204a:	push   es
  41204b:	adc    al,0xaa
  41204d:	test   DWORD PTR [ebx+0x67998ad],0x72045903
  412057:	icebp  
  412058:	lods   al,BYTE PTR ds:[esi]
  412059:	or     DWORD PTR [edx],edi
  41205b:	pop    esi
  41205c:	lahf   
  41205d:	fiadd  DWORD PTR [ecx+0x55]
  412060:	and    ch,BYTE PTR [ecx-0x9]
  412063:	aam    0xfc
  412065:	cli    
  412066:	mov    eax,ds:0x6d015f46
  41206b:	or     bl,BYTE PTR [esi+0x77]
  41206e:	push   cs
  41206f:	inc    ecx
	...
  41207c:	jae    0x41207f
  41207e:	clc    
  41207f:	cs mov edx,0xcc9cf75e
  412085:	or     dl,BYTE PTR [esi+0x6f015f1e]
  41208b:	jmp    0x81fa3284
  412090:	jmp    0x91e:0x9e00458b
  412097:	imul   ebx,DWORD PTR [edi+0x66],0x9e9675f7
  41209e:	shr    BYTE PTR [ecx-0x77],0x8a
  4120a2:	clc    
  4120a3:	jne    0x41203f
  4120a5:	mov    dh,BYTE PTR [edx+0x8]
  4120a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4120a9:	mov    WORD PTR [edx],?
  4120ab:	jmp    FWORD PTR [ecx-0x71fb3ac0]
  4120b1:	adc    ecx,DWORD PTR [ebp-0x305d2014]
  4120b7:	imul   DWORD PTR [ecx-0x55ba7576]
  4120bd:	pop    ss
  4120be:	stc    
  4120bf:	jne    0x4120fb
  4120c1:	mov    DWORD PTR [edx+0x8],esi
  4120c4:	data16 aam 0x2b
  4120c7:	add    BYTE PTR [esi-0x3],bl
  4120ca:	mov    bh,0xf
  4120cc:	shl    DWORD PTR [esi+0x414e0006],cl
  4120d2:	inc    edx
  4120d3:	clc    
  4120d4:	push   ds
  4120d5:	pushw  es
  4120d7:	add    BYTE PTR [ecx+0x24],dl
  4120da:	hlt    
  4120db:	call   DWORD PTR [ecx]
  4120dd:	pushw  es
  4120df:	push   0x0
	...
  4120e9:	add    BYTE PTR [eax],al
  4120eb:	add    BYTE PTR [esi],cl
  4120ed:	sbb    al,0xf8
  4120ef:	imul   ebx,DWORD PTR [esi],0x538cf81c
  4120f5:	xchg   edx,eax
  4120f6:	inc    edi
  4120f7:	lea    edx,[ebx-0x56000f8e]
  4120fd:	push   ss
  4120fe:	stc    
  4120ff:	jne    0x412137
  412101:	mov    dh,BYTE PTR [edx-0x4]
  412104:	inc    esi
  412105:	and    ch,BYTE PTR [eax+eax*1]
  412108:	into   
  412109:	cld    
  41210a:	mov    bh,0x74
  41210c:	rcr    DWORD PTR [esi+0x65de0184],cl
  412112:	outs   dx,BYTE PTR ds:[esi]
  412113:	mov    ebp,0xfef82686
  412118:	neg    esi
  41211a:	out    dx,eax
  41211b:	out    0x7f,eax
  41211d:	int3   
  41211e:	pusha  
  41211f:	inc    BYTE PTR [edi+0x75]
  412122:	push   edx
  412123:	mov    WORD PTR [edx-0x9],?
  412126:	push   0xd5dba0fe
  41212b:	out    0x4f,eax
  41212d:	int3   
  41212e:	pusha  
  41212f:	(bad)  
  412130:	jle    0x4120c0
  412132:	dec    ebx
  412133:	test   BYTE PTR [eax-0x3f02a3e0],0x18
  41213a:	popa   
  41213b:	imul   esi,edi,0xb668dca3
  412141:	or     esp,DWORD PTR [ecx-0x4c]
  412144:	dec    edi
  412145:	mov    eax,0x3e60fe60
  41214a:	cli    
  41214b:	out    0xf6,eax
  41214d:	dec    esp
  41214e:	pop    edi
  41214f:	inc    BYTE PTR [eax]
	...
  412159:	add    BYTE PTR [eax],al
  41215b:	add    BYTE PTR [esi-0x72],bh
  41215e:	jae    0x412156
  412160:	dec    eax
  412161:	loopne 0x412140
  412163:	(bad)  
  412164:	fcomp  DWORD PTR [ecx+ebx*8+0x40]
  412168:	div    eax
  41216a:	mov    dh,0xd7
  41216c:	sub    al,ch
  41216e:	pusha  
  41216f:	(bad)  
  412170:	mov    ds:0xb5e55bf3,al
  412175:	js     0x4121d7
  412177:	mov    BYTE PTR [edx+0x7f],dh
  41217a:	push   0x41510fe
  41217f:	push   0xffc3128b
  412184:	add    esi,ebx
  412186:	dec    ebx
  412187:	idiv   al
  412189:	scas   eax,DWORD PTR es:[edi]
  41218a:	pusha  
  41218b:	je     0x41218c
  41218d:	xchg   ecx,eax
  41218e:	cmp    al,0x41
  412190:	call   0xcfc59bd6
  412195:	inc    ecx
  412196:	pusha  
  412197:	(bad)  
  412198:	push   0xffffff87
  41219a:	aas    
  41219b:	not    al
  41219d:	arpl   WORD PTR [eax],sp
  41219f:	rcl    DWORD PTR [eax-0x1a],cl
  4121a2:	xchg   esi,eax
  4121a3:	(bad)  
  4121a4:	rol    BYTE PTR [ecx],0x5b
  4121a7:	dec    ebx
  4121a8:	rol    DWORD PTR [eax],0x9
  4121ab:	sub    bp,WORD PTR [ebx+0x15]
  4121af:	call   0x77b:0x7bf90036
  4121b6:	stc    
  4121b7:	gs cdq 
  4121b9:	(bad)  
  4121ba:	in     eax,dx
  4121bb:	fild   DWORD PTR [eax+0x42e8a]
	...
  4121c9:	add    BYTE PTR [eax],al
  4121cb:	add    BYTE PTR [eax-0x7e923a4a],cl
  4121d1:	add    cl,dl
  4121d3:	out    dx,eax
  4121d4:	lock or bh,BYTE PTR [esi-0x3e]
  4121d8:	jno    0x4121da
  4121da:	ja     0x41225b
  4121dc:	dec    eax
  4121dd:	clc    
  4121de:	mov    eax,0xbdbe7565
  4121e3:	ins    DWORD PTR es:[edi],dx
  4121e4:	pop    ecx
  4121e5:	add    dh,ch
  4121e7:	out    dx,eax
  4121e8:	fucom  st(3)
  4121ea:	bound  ebx,QWORD PTR [eax+0x41]
  4121ed:	add    BYTE PTR [ecx+0x6c84cb04],bl
  4121f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4121f4:	push   eax
  4121f5:	clc    
  4121f6:	mov    BYTE PTR [ebp+0x30],ah
  4121f9:	je     0x412221
  4121fb:	fsubr  QWORD PTR [eax]
  4121fd:	add    BYTE PTR [ecx-0x2289de5a],cl
  412203:	pop    ebx
  412204:	sbb    eax,0x1165683c
  412209:	mov    dh,0x5d
  41220b:	ins    DWORD PTR es:[edi],dx
  41220c:	or     DWORD PTR [eax],eax
  41220e:	pop    ecx
  41220f:	out    dx,eax
  412210:	lock or ah,BYTE PTR [ecx+0x48fff827]
  412217:	scas   eax,DWORD PTR es:[edi]
  412218:	fdivr  st(7),st
  41221a:	inc    eax
  41221b:	gs jmp 0x379cff96
  412221:	aas    
  412222:	push   es
  412223:	ss push edx
  412225:	add    DWORD PTR [edx-0x7fe9dbf],esi
  41222b:	fsubr  DWORD PTR es:[edi-0x12]
  41222f:	fiadd  DWORD PTR [eax]
	...
  412239:	add    BYTE PTR [eax],al
  41223b:	add    BYTE PTR [eax],bl
  41223d:	add    al,bh
  41223f:	push   ss
  412240:	mov    BYTE PTR [ebx],bl
  412242:	lock push cs
  412244:	sbb    al,BYTE PTR [ecx]
  412246:	mov    dl,0xd
  412248:	sbb    al,BYTE PTR [ecx]
  41224a:	clc    
  41224b:	(bad)  
  41224c:	xchg   ecx,eax
  41224d:	outs   dx,DWORD PTR ds:[esi]
  41224e:	out    dx,al
  41224f:	cli    
  412250:	iret   
  412251:	push   edi
  412253:	out    dx,al
  412254:	popa   
  412255:	pop    ds
  412256:	lock out 0x13,al
  412259:	add    DWORD PTR [edx-0x7],esi
  41225c:	sbb    al,0x53
  41225e:	cmp    dl,dh
  412260:	adc    eax,DWORD PTR [ecx]
  412262:	jb     0x41225d
  412264:	(bad)  [esi+0xd3bede]
  41226a:	clc    
  41226b:	xor    al,0x63
  41226d:	pop    es
  41226e:	jne    0x412227
  412270:	rol    DWORD PTR [eax],cl
  412272:	clc    
  412273:	je     0x412231
  412275:	clc    
  412276:	mul    DWORD PTR [esi-0x61c6fe54]
  41227c:	fild   DWORD PTR [eax]
  41227e:	mov    dl,0x99
  412280:	retf   
  412281:	add    al,bh
  412283:	add    ebx,0x9386f73d
  412289:	mov    dh,0xea
  41228b:	jbe    0x412228
  41228d:	add    bh,ch
  41228f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412290:	sar    bh,cl
  412292:	imul   DWORD PTR [esi+0x61]
  412295:	pop    es
  412296:	lock xchg bx,ax
  412299:	pop    es
  41229a:	(bad)  
  41229b:	pop    ds
  41229c:	call   0x0:0x9cf800
	...
  4122ab:	add    BYTE PTR [eax+0x4c4ef7f8],bl
  4122b1:	mov    eax,0x87310038
  4122b6:	clc    
  4122b7:	mov    ch,0x2e
  4122b9:	(bad)  
  4122ba:	clc    
  4122bb:	push   DWORD PTR [esi]
  4122bd:	fstp   TBYTE PTR [ecx]
  4122bf:	jmp    DWORD PTR [ecx]
  4122c1:	xchg   DWORD PTR [edx-0x8],eax
  4122c4:	out    0xb6,eax
  4122c6:	stc    
  4122c7:	jmp    ecx
  4122c9:	xchg   BYTE PTR [edx-0x4],dh
  4122cc:	idiv   BYTE PTR [esi]
  4122ce:	sub    eax,0xc5399e00
  4122d3:	or     al,0x9e
  4122d5:	sub    eax,0x3e0dec8d
  4122da:	sti    
  4122db:	push   0xffffff8e
  4122dd:	sbb    al,0x4d
  4122df:	dec    DWORD PTR [ebx]
  4122e1:	cli    
  4122e2:	fistp  QWORD PTR [ebp-0x76077e2b]
  4122e8:	fild   DWORD PTR [edx+0xa9675f8]
  4122ee:	inc    edx
  4122ef:	imul   ebx,DWORD PTR [edi],0x3f35f767
  4122f5:	das    
  4122f6:	inc    edi
  4122f7:	add    BYTE PTR [esi-0x65],al
  4122fa:	cli    
  4122fb:	jmp    DWORD PTR [ecx-0x49f78d7e]
  412301:	sub    BYTE PTR [edi+0x41],ch
  412304:	pop    esi
  412305:	or     al,BYTE PTR [esi]
  412307:	add    BYTE PTR [esi-0x1e],cl
  41230a:	(bad)  
  41230c:	arpl   WORD PTR [edx+0xfff8],ax
	...
  41231a:	add    BYTE PTR [eax],al
  41231c:	or     eax,DWORD PTR [ebx-0x75d98a08]
  412322:	(bad)  
  412323:	cmp    esp,DWORD PTR [ecx+0xac2ce81]
  412329:	bound  edx,QWORD PTR [ecx-0x75]
  41232c:	xchg   edx,eax
  41232d:	in     eax,0xc3
  41232f:	cld    
  412330:	and    al,0x62
  412332:	ins    BYTE PTR es:[edi],dx
  412333:	dec    esp
  412334:	mov    eax,ds:0xf7e8001b
  412339:	pop    ds
  41233a:	sbb    edi,edi
  41233c:	lock or ch,0xfb
  412340:	pop    edi
  412341:	or     al,0x4
  412343:	out    dx,eax
  412344:	mov    eax,ds:0x36688713
  412349:	or     al,0xec
  41234b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41234c:	pop    esi
  41234d:	retf   
  41234e:	add    edi,edi
  412350:	inc    edx
  412351:	hlt    
  412352:	imul   ebx,DWORD PTR [esi+0x58],0x5d
  412356:	arpl   si,di
  412358:	inc    edx
  412359:	pop    eax
  41235a:	arpl   WORD PTR [edi+edi*8+0x63],si
  41235e:	jge    0x41239a
  412360:	test   al,0x64
  412362:	dec    ecx
  412363:	sar    ebx,0xb
  412366:	mov    edi,0x4e8a8b8a
  41236b:	iret   
  41236c:	mov    BYTE PTR [eiz*2-0x4bf7cd74],cl
  412373:	dec    BYTE PTR [edx]
  412375:	adc    BYTE PTR [ebp+0x74],ah
  412378:	out    dx,eax
  412379:	and    esi,DWORD PTR [edi]
  41237b:	sub    dh,bh
  41237d:	or     ecx,DWORD PTR [ecx]
  41237f:	rol    BYTE PTR [eax],0x0
	...
  41238a:	add    BYTE PTR [eax],al
  41238c:	clc    
  41238d:	mov    ?,esi
  41238f:	add    edi,esi
  412391:	or     ecx,DWORD PTR [ebp+0x44]
  412394:	pop    edi
  412395:	or     eax,DWORD PTR [eax+eax*1]
  412398:	test   esp,0xc48f3ce
  41239e:	add    al,0x0
  4123a0:	int    0xb
  4123a2:	jmp    0x83ff:0xea0bceff
  4123a9:	inc    esi
  4123aa:	pop    esi
  4123ab:	dec    edi
  4123ac:	jp     0x41233c
  4123ae:	dec    edi
  4123af:	mul    BYTE PTR [eax]
  4123b1:	jl     0x412366
  4123b3:	(bad)  
  4123b4:	mov    ds:0x13746473,al
  4123b9:	jecxz  0x41241f
  4123bb:	sub    bh,dh
  4123bd:	(bad)  
  4123be:	in     eax,dx
  4123bf:	push   cs
  4123c0:	aaa    
  4123c1:	jbe    0x4123a5
  4123c3:	ins    BYTE PTR es:[edi],dx
  4123c4:	and    BYTE PTR [ebx-0x13],ah
  4123c7:	add    ebx,DWORD PTR [edi-0x42]
  4123ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4123cb:	(bad)  
  4123cc:	call   0xcf50dece
  4123d1:	xchg   ebx,eax
  4123d2:	scas   al,BYTE PTR es:[edi]
  4123d3:	(bad)  
  4123d4:	fst    DWORD PTR [ebx-0x197ccc9c]
  4123da:	xor    DWORD PTR [edx-0x37],ebx
  4123dd:	cld    
  4123de:	mov    ebp,0xaea3d8b5
  4123e3:	bound  edi,QWORD PTR [ecx-0x56c49516]
  4123e9:	cld    
  4123ea:	or     BYTE PTR [ebx-0x7e],ch
  4123ed:	add    BYTE PTR ds:[edx+0x0],ah
	...
  4123f9:	add    BYTE PTR [eax],al
  4123fb:	add    BYTE PTR [esi],cl
  4123fd:	arpl   WORD PTR [ebp-0x125df0ae],dx
  412403:	bound  ecx,QWORD PTR [ebx+0x1b]
  412406:	icebp  
  412407:	popa   
  412408:	mov    esp,edi
  41240a:	pop    edx
  41240b:	or     al,0x8f
  41240d:	fisubr DWORD PTR ds:0x6aea7961
  412413:	push   esp
  412414:	imul   edi,esp,0x8468eec8
  41241a:	(bad)  
  41241b:	jmp    0x4123d4
  41241d:	bound  edi,QWORD PTR [eax-0x4f0bbf69]
  412423:	popa   
  412424:	push   ecx
  412425:	jbe    0x41240c
  412427:	imul   ecx,edx,0xffffffa2
  41242a:	mov    al,ds:0x89e66f61
  41242f:	pop    ecx
  412430:	cmp    esp,edi
  412432:	add    eax,DWORD PTR [edi+ebx*4]
  412435:	test   DWORD PTR [esi],0x3afd28c3
  41243b:	cmp    al,0x29
  41243d:	cld    
  41243e:	js     0x4124a1
  412440:	mov    ds:0x1a81066a,eax
  412445:	cmp    al,0xf7
  412447:	outs   dx,BYTE PTR ds:[esi]
  412448:	jl     0x412431
  41244a:	out    dx,al
  41244b:	pop    esi
  41244c:	xchg   esi,eax
  41244d:	cld    
  41244e:	mov    DWORD PTR [edi+esi*4-0xc],esp
  412452:	not    DWORD PTR [esi-0x55]
  412455:	adc    DWORD PTR [edx],0xffffffc3
  412458:	mov    ch,0xfb
  41245a:	clc    
  41245b:	jl     0x412480
  41245d:	cmc    
  41245e:	idiv   DWORD PTR [esi]
	...
  41246c:	push   esi
  41246d:	ja     0x41247d
  41246f:	inc    ecx
  412470:	mov    edx,0x7c2ef73b
  412475:	out    0xe2,al
  412477:	push   ds
  412478:	push   esi
  412479:	std    
  41247a:	ins    BYTE PTR es:[edi],dx
  41247b:	jmp    0xa8ad6f4c
  412480:	hlt    
  412481:	sti    
  412482:	mov    cl,0x31
  412484:	dec    esi
  412485:	std    
  412486:	test   DWORD PTR [esi],0xd1ee63c8
  41248c:	mov    ah,0xfc
  41248e:	mul    DWORD PTR [eax+0x78]
  412491:	sbb    esi,eax
  412493:	out    dx,al
  412494:	pop    ss
  412495:	out    dx,eax
  412496:	cmp    DWORD PTR [ecx+0x39f7fd1f],0x286ca28b
  4124a0:	sti    
  4124a1:	sti    
  4124a2:	mov    cl,0xb1
  4124a4:	iret   
  4124a5:	cld    
  4124a6:	test   esi,0xf1ee6349
  4124ac:	xor    al,0xfc
  4124ae:	mul    DWORD PTR [eax+0x79]
  4124b1:	(bad)  
  4124b3:	scas   al,BYTE PTR es:[edi]
  4124b4:	xlat   BYTE PTR ds:[ebx]
  4124b5:	loopne 0x412470
  4124b7:	cdq    
  4124b8:	lahf   
  4124b9:	cld    
  4124ba:	imul   ecx
  4124bc:	and    BYTE PTR [eax-0xb5fab7d],cl
  4124c2:	test   DWORD PTR [esi+0x6476f4],0xf7dfdc8d
  4124cc:	cdq    
  4124cd:	xor    bh,0x73
	...
  4124dc:	out    0xe,eax
  4124de:	clc    
  4124df:	dec    DWORD PTR [ecx-0x18a073f]
  4124e5:	xchg   BYTE PTR [ecx+edi*1-0x67],dh
  4124e9:	cmp    al,0xb5
  4124ec:	dec    esi
  4124ed:	fwait
  4124ee:	clc    
  4124ef:	(bad)  
  4124f0:	cmp    DWORD PTR [ecx],edx
  4124f2:	or     al,ch
  4124f4:	adc    DWORD PTR [ebp-0x9],ebx
  4124f7:	call   FWORD PTR [ecx]
  4124f9:	shr    ebx,1
  4124fb:	test   DWORD PTR [ecx],0xae75f883
  412501:	mov    ?,WORD PTR [esi-0x77ce6c7]
  412507:	mov    ch,0xe6
  412509:	call   0xe808:0x1109fff8
  412510:	xor    eax,0xf9fff75d
  412515:	rcr    bl,1
  412517:	neg    DWORD PTR [ecx+0x2b5f89a]
  41251d:	fwait
  41251e:	clc    
  41251f:	call   FWORD PTR [ecx+0x25e80810]
  412525:	pop    eax
  412526:	idiv   edi
  412528:	cdq    
  412529:	(bad)  
  41252b:	test   DWORD PTR [ecx-0x66],0x8e6e75f8
  412532:	mov    ?,WORD PTR [ecx]
  412534:	cmp    DWORD PTR [edx-0x6d81427c],ebx
  41253a:	clc    
  41253b:	call   FWORD PTR [esi+0x12]
  41253e:	daa    
  41253f:	push   0x0
	...
  41254c:	pop    edi
  41254d:	out    0xbe,ax
  412550:	cdq    
  412551:	sbb    al,0x8
  412553:	call   0x387c97
  412558:	not    eax
  41255a:	popf   
  41255b:	iret   
  41255c:	and    cl,ch
  41255e:	push   edi
  41255f:	(bad)  
  412560:	push   0xffffffd8
  412562:	dec    edi
  412563:	(bad)  
  412564:	sbb    BYTE PTR [ecx-0x23],bh
  412567:	nop    DWORD PTR [ebp-0x76f700e6]
  41256e:	fisttp QWORD PTR [edi]
  412570:	add    bh,dl
  412572:	cmp    dh,dh
  412574:	clc    
  412575:	cwde   
  412576:	push   edi
  412577:	je     0x412578
  412579:	mov    ds:0xa8e8fe2a,eax
  41257e:	push   edi
  41257f:	mov    ah,0xbf
  412581:	cmp    BYTE PTR [edi-0x2],dl
  412584:	iret   
  412585:	sti    
  412586:	pop    ss
  412587:	call   eax
  412589:	xor    BYTE PTR [ebp+0x5748c0ef],bl
  41258f:	out    0x1a,eax
  412591:	add    BYTE PTR [ecx-0x2],bl
  412594:	mov    eax,0xb0f6768e
  412599:	push   eax
  41259a:	push   0x19
  41259c:	jmp    0x412606
  41259e:	push   edi
  41259f:	(bad)  
  4125a0:	push   0x53
  4125a2:	dec    edi
  4125a3:	(bad)  
  4125a4:	cwde   
  4125a5:	push   ebx
  4125a6:	pop    es
  4125a7:	cmp    al,0x90
  4125a9:	lock pop eax
  4125ab:	mov    ah,0x93
  4125ad:	lock pop eax
  4125af:	inc    BYTE PTR [eax]
	...
  4125b9:	add    BYTE PTR [eax],al
  4125bb:	add    BYTE PTR [edi+0x78ff1807],cl
  4125c1:	sbb    BYTE PTR [edi+0x591068df],bl
  4125c7:	out    0x6e,eax
  4125c9:	push   esp
  4125ca:	push   edi
  4125cb:	(bad)  
  4125cc:	pusha  
  4125cd:	jbe    0x4125fe
  4125cf:	neg    BYTE PTR [eax-0x48]
  4125d2:	imul   ebp,ebp,0xc
  4125d5:	mov    cl,0x58
  4125d7:	(bad)  
  4125d8:	mov    dl,0xb3
  4125da:	push   0xfffffff9
  4125dc:	inc    edx
  4125dd:	bound  esp,QWORD PTR [eax-0x6690c6a2]
  4125e3:	imul   edi,esi,0x4a
  4125e6:	in     eax,dx
  4125e7:	add    edi,DWORD PTR [esi]
  4125e9:	and    al,0xda
  4125eb:	add    ecx,edx
  4125ed:	in     eax,dx
  4125ee:	xchg   ecx,eax
  4125ef:	xor    BYTE PTR [esi+esi*8],0x13
  4125f3:	add    al,0x9d
  4125f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4125f6:	jo     0x4125d0
  4125f8:	lock or ch,dh
  4125fb:	sbb    al,0x0
  4125fd:	stc    
  4125fe:	jbe    0x4125c8
  412600:	cld    
  412601:	clc    
  412602:	ror    BYTE PTR [ebx],cl
  412604:	pop    edi
  412605:	mov    ah,0xc6
  412607:	(bad)  
  412608:	call   0x38a63906
  41260d:	mov    ds:0xf6796bed,al
  412612:	cmp    BYTE PTR [esi-0x2f],bl
  412615:	outs   dx,BYTE PTR ds:[esi]
  412616:	in     eax,0xeb
  412618:	test   DWORD PTR [edx+0x654f03ae],ecx
  41261e:	in     eax,dx
  41261f:	add    eax,DWORD PTR [eax]
	...
  412629:	add    BYTE PTR [eax],al
  41262b:	add    BYTE PTR [edi+0xb],dh
  41262e:	imul   esp,DWORD PTR [eax-0x4f],0xfffffff8
  412632:	adc    al,bl
  412634:	lods   al,BYTE PTR ds:[esi]
  412635:	clc    
  412636:	xchg   edx,eax
  412637:	or     ecx,DWORD PTR [edi-0x66a139ac]
  41263d:	sub    ch,BYTE PTR [edi+eax*1]
  412640:	test   DWORD PTR [ebp+0x1f756f64],0x8d29b4ea
  41264a:	in     eax,dx
  41264b:	jmp    0xc941e7a
  412650:	pop    edi
  412651:	scas   al,BYTE PTR es:[edi]
  412652:	adc    eax,0x22ea695d
  412657:	pusha  
  412658:	ins    DWORD PTR es:[edi],dx
  412659:	cs dec edx
  41265b:	int3   
  41265c:	mov    bh,0x62
  41265e:	je     0x41267f
  412660:	fisubr WORD PTR [edx-0x1d0cd7fa]
  412666:	aaa    
  412667:	jmp    0x37afc594
  41266c:	dec    ebp
  41266d:	mov    ds:0x11a33606,eax
  412672:	and    cl,ch
  412674:	hlt    
  412675:	imul   eax,esi,0x15
  412678:	and    cl,BYTE PTR [esi-0x6ce3012]
  41267e:	neg    DWORD PTR [ecx]
  412680:	and    edi,eax
  412682:	test   DWORD PTR [esi+0x34f8069],0x6647f834
  41268c:	and    BYTE PTR [eax-0x12],ah
  41268f:	sbb    eax,DWORD PTR [eax]
	...
  412699:	add    BYTE PTR [eax],al
  41269b:	add    bh,bl
  41269d:	clc    
  41269e:	test   DWORD PTR [ecx+0xe],0x4e4ef73c
  4126a5:	arpl   WORD PTR [eax+0x69],ax
  4126a8:	stc    
  4126a9:	bound  esi,QWORD PTR [ecx+0x43]
  4126ac:	mov    ecx,0x6c2933fb
  4126b1:	clc    
  4126b2:	imul   DWORD PTR [esi]
  4126b4:	and    dh,dl
  4126b6:	test   al,0xe1
  4126b8:	rep ins DWORD PTR es:[edi],dx
  4126ba:	mov    ebx,0xf7fbc81e
  4126bf:	pushf  
  4126c0:	cld    
  4126c1:	or     dl,BYTE PTR [eax+0x57f943d1]
  4126c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4126c8:	sub    eax,0x49e90322
  4126cd:	in     al,dx
  4126ce:	jmp    0x8ee9:0x6cfc3f6a
  4126d5:	test   al,0xf7
  4126d7:	pop    esp
  4126d8:	jmp    0x4126e4
  4126da:	ds and edx,edx
  4126dd:	clc    
  4126de:	lea    ebp,[edi+edx*8]
  4126e1:	mov    DWORD PTR [esi],eax
  4126e3:	inc    ecx
  4126e4:	outs   dx,DWORD PTR ds:[esi]
  4126e5:	mov    DWORD PTR [ebp+0x0],eax
  4126e8:	dec    esi
  4126e9:	or     esp,DWORD PTR [edx+ebp*2+0x1f]
  4126ed:	pop    edi
  4126ee:	div    DWORD PTR ds:0x472b3f
  4126f4:	ss xchg esi,eax
  4126f6:	cmp    bh,bh
  4126f8:	xchg   ecx,eax
  4126f9:	push   0xffffffc6
  4126fb:	je     0x4126f4
  4126fd:	scas   al,BYTE PTR es:[edi]
  4126fe:	pop    edi
	...
  41270b:	add    BYTE PTR [esi],bl
  41270d:	xchg   BYTE PTR [ecx+0x4709ab68],bh
  412713:	add    dh,bh
  412715:	xchg   ebp,eax
  412716:	jb     0x412720
  412718:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41271a:	inc    DWORD PTR fs:[ecx-0x6ec53275]
  412721:	xchg   esi,eax
  412722:	pop    edi
  412723:	add    BYTE PTR [esi],cl
  412725:	xchg   BYTE PTR [ecx+0x470c6b68],bh
  41272b:	add    BYTE PTR [esi-0x31be921a],dh
  412731:	xchg   edi,eax
  412732:	jb     0x41273c
  412734:	inc    esi
  412735:	xchg   edx,eax
  412736:	call   DWORD PTR fs:[ecx]
  412739:	xchg   edi,eax
  41273a:	jb     0x412738
  41273c:	add    DWORD PTR ds:0x56f8e800,ecx
  412742:	idiv   edi
  412744:	pop    es
  412745:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412746:	add    eax,DWORD PTR [eax]
  412748:	imul   ebp,ebx,0xffffffeb
  41274b:	sbb    edx,0xffffff95
  41274e:	push   ecx
  41274f:	push   edi
  412750:	je     0x4127b4
  412752:	ins    BYTE PTR es:[edi],dx
  412753:	push   eax
  412754:	icebp  
  412755:	or     al,0x0
  412757:	call   0x387622
  41275c:	pop    ss
  41275d:	sbb    eax,0xfd4b8bfc
  412762:	aas    
  412763:	inc    ecx
  412764:	mov    fs,ebp
  412766:	cmp    ch,BYTE PTR [ecx+0x26]
  412769:	and    al,bh
  41276b:	jg     0x412764
  41276d:	dec    esp
  41276e:	add    dh,BYTE PTR [eax+eax*1+0x0]
	...
  41277a:	add    BYTE PTR [eax],al
  41277c:	mov    edx,0xb669a6a3
  412781:	or     esi,DWORD PTR [ebp+0x25e5ae7]
  412787:	add    ah,bh
  412789:	retf   
  41278a:	(bad)  
  41278b:	push   ds
  41278c:	test   eax,0x38441a23
  412791:	mov    ebp,0xbf767b2
  412796:	ins    DWORD PTR es:[edi],dx
  412797:	mov    ebp,0x40e89d9f
  41279c:	idiv   DWORD PTR [ebx]
  41279e:	pop    ebx
  41279f:	je     0x412790
  4127a1:	rol    ebp,cl
  4127a3:	bound  edx,QWORD PTR [eax]
  4127a5:	jne    0x412811
  4127a7:	dec    ebp
  4127a8:	int    0x6c
  4127aa:	pop    ebx
  4127ab:	jmp    0x16f7:0x3d823df6
  4127b2:	pop    edx
  4127b3:	inc    ebp
  4127b4:	repz pop eax
  4127b6:	inc    edx
  4127b7:	mov    eax,0xfe5b8ce8
  4127bc:	in     eax,0x75
  4127be:	sbb    al,BYTE PTR [edi]
  4127c0:	(bad)  
  4127c2:	pop    ebx
  4127c3:	je     0x412798
  4127c5:	xor    al,0xd5
  4127c7:	pop    es
  4127c8:	(bad)  
  4127ca:	adc    edi,edi
  4127cc:	shl    ah,0xbd
  4127cf:	enter  0x7b5,0x4
  4127d3:	push   ebp
  4127d4:	jl     0x41283d
  4127d6:	jg     0x41279b
  4127d8:	stos   DWORD PTR es:[edi],eax
  4127d9:	mov    ch,0xb4
  4127db:	imul   esi,edi,0xfeb2e1
	...
  4127e9:	add    BYTE PTR [eax],al
  4127eb:	add    BYTE PTR [edx],ah
  4127ed:	hlt    
  4127ee:	imul   ecx,DWORD PTR [ecx-0x38],0xfffffff4
  4127f2:	pop    esp
  4127f3:	mov    BYTE PTR [edx],dh
  4127f5:	lock mov BYTE PTR [edx+ebx*1],dh
  4127f9:	(bad)  
  4127fd:	bound  esp,QWORD PTR [edx]
  4127ff:	in     eax,dx
  412800:	mov    eax,0x2983eda3
  412805:	arpl   WORD PTR [ecx-0x3f],bx
  412808:	fdivr  DWORD PTR [eax-0x73a73abd]
  41280e:	aad    0xe2
  412810:	sbb    ah,BYTE PTR [ebx-0x13]
  412813:	push   cs
  412814:	aaa    
  412815:	outs   dx,BYTE PTR ds:[esi]
  412816:	shl    BYTE PTR [ecx+0x5b2cb958],1
  41281c:	cmp    DWORD PTR [edx+0x5f70415],edx
  412822:	pop    eax
  412823:	jmp    0x412861
  412825:	mov    BYTE PTR [esi],ch
  412827:	add    al,0xc7
  412829:	cmc    
  41282a:	adc    cl,BYTE PTR [edi+ecx*1]
  41282d:	sbb    eax,0xa115b0c
  412832:	sahf   
  412833:	sbb    al,0x8
  412835:	cmc    
  412836:	test   BYTE PTR [ecx+edi*4],al
  412839:	loop   0x4127e2
  41283b:	add    eax,DWORD PTR [edx+0x2557a7f8]
  412841:	and    esp,DWORD PTR [edi+0x50f4e95a]
  412847:	push   ebp
  412848:	xchg   edx,eax
  412849:	cmp    esp,eax
  41284b:	rcr    BYTE PTR [ebp+0x57baf4],1
	...
  412859:	add    BYTE PTR [eax],al
  41285b:	add    cl,dl
  41285d:	outs   dx,BYTE PTR ds:[esi]
  41285e:	cmc    
  41285f:	imul   ebx,DWORD PTR [esp+ebp*1],0x30
  412863:	pop    edx
  412864:	and    DWORD PTR [ebp+0x62f44526],edx
  41286a:	mov    edx,0x21e09c8e
  41286f:	push   edi
  412870:	push   ds
  412871:	arpl   WORD PTR [ebx-0x1a915e4b],ax
  412877:	imul   ebp,DWORD PTR [edx+0x7f5a002d],0xffffff9e
  41287e:	stc    
  41287f:	jmp    0xf3f4:0xa80689a1
  412886:	jno    0x412869
  412888:	or     al,0xa6
  41288a:	out    0xe6,al
  41288c:	into   
  41288d:	hlt    
  41288e:	jno    0x41286d
  412890:	into   
  412891:	outs   dx,BYTE PTR ds:[esi]
  412892:	push   cs
  412893:	sar    DWORD PTR [ebp+ebp*1+0x21accef7],0x3
  41289b:	jmp    0x6b2c1241
  4128a0:	mov    bh,0x13
  4128a2:	push   ecx
  4128a3:	mov    dh,0x30
  4128a5:	push   0xf3dd24ee
  4128aa:	div    edx
  4128ac:	mov    ah,0x6e
  4128ae:	add    DWORD PTR [edi],edi
  4128b0:	mov    esp,0x79e90f21
  4128b5:	lahf   
  4128b6:	idiv   BYTE PTR [ecx]
  4128b8:	mov    esi,0xa6910a6e
  4128bd:	xor    eax,0x7ef7
	...
  4128ca:	add    BYTE PTR [eax],al
  4128cc:	cli    
  4128cd:	and    cl,BYTE PTR [eax]
  4128cf:	ins    DWORD PTR es:[edi],dx
  4128d0:	repz popa 
  4128d2:	push   es
  4128d3:	jmp    0x523b9777
  4128d8:	mov    cl,0x3a
  4128da:	neg    DWORD PTR [esi+0x7c]
  4128dd:	sahf   
  4128de:	jmp    0x50d4:0xf7f7b056
  4128e5:	cmc    
  4128e6:	jno    0x412929
  4128e8:	arpl   WORD PTR [ebp+edi*1+0x3e],si
  4128ec:	cs jmp 0xc48d6e63
  4128f2:	push   es
  4128f3:	jmp    0x92a1b3ec
  4128f8:	mov    ch,0xf3
  4128fa:	push   ecx
  4128fb:	adc    DWORD PTR [eax-0xc16f9c2],ecx
  412901:	and    dh,BYTE PTR [edx-0x1c]
  412904:	or     eax,0x9e0006bf
  412909:	pop    edi
  41290a:	mov    esi,eax
  41290c:	add    WORD PTR [ebp+0x41],bp
  412910:	mov    es,WORD PTR [edi+0x5f8e23d7]
  412916:	add    esi,eax
  412918:	out    0x24,eax
  41291a:	loopne 0x412984
  41291c:	mov    eax,0x20004705
  412921:	xchg   DWORD PTR [edi+0x25],esi
  412924:	dec    esi
  412925:	pop    edi
  412926:	or     eax,eax
  412928:	adc    esi,esp
  41292a:	out    dx,al
  41292b:	sbb    BYTE PTR [esi+0x5f],0x6
  41292f:	mov    al,BYTE PTR [eax]
	...
  412939:	add    BYTE PTR [eax],al
  41293b:	add    BYTE PTR [esi],bl
  41293d:	mov    eax,ds:0xacdefff7
  412942:	clc    
  412943:	jne    0x4128cb
  412945:	xchg   DWORD PTR [edi+0xb5f1e23],ebp
  41294b:	rol    BYTE PTR [edx],0xff
  41294e:	mov    es,WORD PTR [ebp+0x72]
  412951:	call   0xff3f:0x7266e872
  412958:	mov    eax,ebp
  41295a:	inc    edx
  41295b:	loopne 0x4128e6
  41295d:	and    al,0xe4
  41295f:	inc    DWORD PTR [ebx]
  412961:	jg     0x412942
  412963:	jns    0x41290c
  412965:	mov    edi,eax
  412967:	or     ebx,DWORD PTR [esi]
  412969:	and    bh,BYTE PTR ds:0x6d92bbd1
  41296f:	add    BYTE PTR [ebx],bh
  412971:	mov    cl,0xe3
  412973:	push   eax
  412974:	cmp    DWORD PTR [ecx],esp
  412976:	fsubr  st,st(0)
  412978:	sti    
  412979:	or     cl,bh
  41297b:	call   ebp
  41297d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41297e:	jae    0x4129a6
  412980:	mov    dh,0x65
  412982:	push   es
  412983:	out    dx,eax
  412984:	sbb    BYTE PTR [ebx-0x49f9f78e],cl
  41298a:	xor    bh,bh
  41298c:	neg    DWORD PTR [eax+0x5e]
  41298f:	je     0x412920
  412991:	popa   
  412992:	enter  0x9f07,0xa1
  412996:	or     bh,bh
  412998:	mov    cl,dh
  41299a:	leave  
  41299b:	jecxz  0x41291d
  41299d:	outs   dx,DWORD PTR ds:[esi]
  41299e:	arpl   si,di
	...
  4129ac:	add    al,BYTE PTR [esp+ebp*2]
  4129af:	ins    BYTE PTR es:[edi],dx
  4129b0:	sub    cl,BYTE PTR [ecx]
  4129b2:	push   eax
  4129b3:	(bad)  
  4129b4:	loop   0x4129d1
  4129b6:	imul   edi,DWORD PTR [ebp+0x1f],0x19
  4129ba:	push   eax
  4129bb:	pop    ecx
  4129bc:	mov    edi,0x117ff283
  4129c1:	cld    
  4129c2:	add    BYTE PTR [ebp-0x1b04f50],al
  4129c8:	iret   
  4129c9:	std    
  4129ca:	add    ebp,edi
  4129cc:	jns    0x41298f
  4129ce:	aad    0x7
  4129d0:	pop    ds
  4129d1:	out    dx,eax
  4129d2:	push   ss
  4129d3:	jmp    FWORD PTR [eax]
  4129d5:	rcl    ebp,1
  4129d7:	sti    
  4129d8:	and    BYTE PTR [edi+0x6e],cl
  4129db:	(bad)  
  4129dc:	mov    ds:0xca3c6c03,al
  4129e1:	call   0xdfc42835
  4129e6:	push   0x4d
  4129e8:	mov    edi,0xb28c4f78
  4129ed:	imul   esi,DWORD PTR [edx+0x4f4a72e7],0xfffffffe
  4129f4:	fdiv   st(3),st
  4129f6:	mov    cl,0xc8
  4129f8:	mov    ch,0x3
  4129fa:	add    al,0x55
  4129fc:	ins    BYTE PTR es:[edi],dx
  4129fd:	das    
  4129fe:	add    ebx,0xffffffdb
  412a01:	jbe    0x4129c8
  412a03:	sti    
  412a04:	daa    
  412a05:	xor    ebp,edx
  412a07:	or     eax,eax
  412a09:	scas   al,BYTE PTR es:[edi]
  412a0a:	or     ebp,eax
  412a0c:	sbb    al,0x68
  412a0e:	add    al,BYTE PTR [eax]
	...
  412a1c:	cld    
  412a1d:	bound  ebp,QWORD PTR ds:0xee3a7207
  412a23:	add    esi,edi
  412a25:	jl     0x412a14
  412a27:	jmp    0x412a5f
  412a29:	jle    0x4129d9
  412a2b:	add    edx,DWORD PTR [eax+0x356f177]
  412a31:	pop    ebx
  412a32:	adc    eax,0xf0f1bc1f
  412a37:	mov    WORD PTR [ebx],?
  412a39:	jmp    0x4129be
  412a3b:	add    ebx,edi
  412a3d:	test   eax,0xf068c554
  412a42:	push   edx
  412a43:	or     BYTE PTR [eax+0x77],ah
  412a46:	in     eax,0x6b
  412a48:	push   es
  412a49:	cs enter 0x7f56,0xa7
  412a4e:	mov    ecx,0x1e06b388
  412a53:	in     al,dx
  412a54:	mov    dl,0x7d
  412a56:	cs add al,0x38
  412a59:	ja     0x412a34
  412a5b:	push   esi
  412a5c:	stos   DWORD PTR es:[edi],eax
  412a5d:	pop    edx
  412a5e:	xchg   ebp,eax
  412a5f:	pop    edx
  412a60:	out    dx,al
  412a61:	icebp  
  412a62:	cwde   
  412a63:	mov    WORD PTR [ebx-0x70fbfc0e],?
  412a69:	xchg   edi,eax
  412a6a:	add    al,0xc5
  412a6c:	adc    al,dh
  412a6e:	cli    
  412a6f:	pop    es
  412a70:	or     BYTE PTR [edi-0xb],dh
  412a73:	imul   ebx,DWORD PTR [edx],0x2c
  412a76:	jo     0x412ace
  412a78:	outs   dx,DWORD PTR ds:[esi]
  412a79:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412a7a:	jns    0x412a65
  412a7c:	lock mov bl,al
  412a7f:	jmp    0x0:0x0
  412a86:	add    BYTE PTR [eax],al
  412a88:	add    BYTE PTR [eax],al
  412a8a:	add    BYTE PTR [eax],al
  412a8c:	aaa    
  412a8d:	arpl   WORD PTR [eax-0x30],bx
  412a90:	in     al,dx
  412a91:	out    dx,eax
  412a92:	fimul  DWORD PTR [ebx]
  412a94:	iret   
  412a95:	adc    dl,BYTE PTR [edi+edx*2]
  412a98:	rcr    edx,1
  412a9a:	stos   BYTE PTR es:[edi],al
  412a9b:	imul   esi,DWORD PTR [ebp+0x6e],0x3d
  412a9f:	add    esi,eax
  412aa1:	out    0x6,al
  412aa3:	push   0xfffffff4
  412aa5:	bound  eax,QWORD PTR [esi]
  412aa7:	push   0xffffffcf
  412aa9:	add    al,0x7
  412aab:	popf   
  412aac:	iret   
  412aad:	icebp  
  412aae:	jno    0x412ab5
  412ab0:	dec    ecx
  412ab1:	ja     0x412aa9
  412ab3:	add    DWORD PTR [ecx-0x2f10858],esi
  412ab9:	and    dh,BYTE PTR [ebx-0x69]
  412abc:	ret    
  412abd:	jle    0x412aa1
  412abf:	xchg   ebx,eax
  412ac0:	hlt    
  412ac1:	fld    QWORD PTR [ecx+0xd]
  412ac4:	inc    esp
  412ac5:	icebp  
  412ac6:	jno    0x412ac1
  412ac8:	frstor [ebp+eiz*2-0x1a]
  412acc:	ret    0xc65c
  412acf:	push   ebp
  412ad0:	pushf  
  412ad1:	in     eax,0x79
  412ad3:	shl    ebx,1
  412ad5:	jbe    0x412b2a
  412ad7:	push   0x28
  412ad9:	hlt    
  412ada:	push   es
  412adb:	cmp    eax,0xb979e530
  412ae0:	sti    
  412ae1:	jbe    0x412b22
  412ae3:	inc    ecx
  412ae4:	repz (bad) 
  412ae6:	out    0x6f,eax
  412ae8:	retf   0x1676
  412aeb:	xchg   ecx,eax
  412aec:	daa    
  412aed:	xor    al,0xf7
  412aef:	sahf   
	...
  412afc:	retf   0xfe76
  412aff:	xchg   esi,eax
  412b00:	sub    BYTE PTR [eax-0x12],ah
  412b03:	add    ah,bh
  412b05:	out    dx,eax
  412b06:	test   DWORD PTR [esi-0xb080bc8],0xbd670804
  412b10:	mov    ds:0x50f4f7f0,eax
  412b15:	icebp  
  412b16:	jno    0x412b71
  412b18:	inc    edx
  412b19:	ja     0x412b31
  412b1b:	push   ecx
  412b1c:	add    DWORD PTR [edi],esi
  412b1e:	not    DWORD PTR [esi+0x42]
  412b21:	ja     0x412b0d
  412b23:	dec    esi
  412b24:	rcr    BYTE PTR [edi-0x12],0x0
  412b28:	cdq    
  412b29:	pop    edi
  412b2a:	idiv   edi
  412b2c:	add    DWORD PTR [eax],esp
  412b2e:	loopne 0x412b2f
  412b30:	jnp    0x412b25
  412b32:	fistp  QWORD PTR [edx+ebp*4]
  412b35:	xchg   esi,eax
  412b36:	clc    
  412b37:	dec    DWORD PTR [ebx-0x36de2075]
  412b3d:	xchg   esi,eax
  412b3e:	clc    
  412b3f:	(bad)  
  412b40:	jnp    0x412ae1
  412b42:	fistp  WORD PTR [ecx]
  412b44:	test   eax,0xbfff896
  412b49:	xchg   esp,eax
  412b4a:	fist   WORD PTR [ecx]
  412b4c:	dec    ecx
  412b4d:	xchg   esi,eax
  412b4e:	clc    
  412b4f:	(bad)  
  412b50:	sti    
  412b51:	xchg   edi,ebx
  412b53:	or     DWORD PTR [ecx-0x3400076a],ebp
  412b59:	jle    0x412b3a
  412b5b:	add    DWORD PTR [ecx],ecx
  412b5d:	xchg   esi,eax
  412b5e:	clc    
  412b5f:	inc    DWORD PTR [eax]
	...
  412b69:	add    BYTE PTR [eax],al
  412b6b:	add    BYTE PTR [ebx-0x2da2076],bh
  412b71:	pushw  es
  412b73:	leave  
  412b74:	pushf  
  412b75:	addr16 push es
  412b77:	push   ebp
  412b78:	lds    eax,FWORD PTR [edi-0x61c93b7a]
  412b7e:	clc    
  412b7f:	call   ebx
  412b81:	mov    al,0xfb
  412b83:	push   eax
  412b84:	push   ecx
  412b85:	and    BYTE PTR [edi+edi*8],cl
  412b88:	or     ebx,DWORD PTR [edi-0x12]
  412b8b:	cvtps2pi mm4,QWORD PTR [ebx+0x6]
  412b8f:	or     ebx,DWORD PTR [esi+0x66]
  412b92:	and    DWORD PTR [ebp-0x38f99ce2],0xfff78edb
  412b9c:	push   cs
  412b9d:	arpl   WORD PTR [edi+0x976a45],di
  412ba3:	add    dh,bl
  412ba5:	cld    
  412ba6:	imul   DWORD PTR [ecx-0x32]
  412ba9:	in     eax,0x82
  412bab:	in     al,dx
  412bac:	test   DWORD PTR [edx+edx*2+0x42227fe],0xb330328d
  412bb7:	mov    WORD PTR [edx+0x38],?
  412bba:	dec    edx
  412bbb:	(bad)  
  412bbc:	mov    eax,0xaf7452cc
  412bc1:	cmp    eax,0x429ffbc8
  412bc6:	and    eax,0x43f0f700
  412bcb:	jae    0x412bc2
  412bcd:	pusha  
  412bce:	fld    DWORD PTR [edx+0x0]
	...
  412bdc:	push   edx
  412bdd:	lock dec ebx
  412bdf:	dec    BYTE PTR [eax-0x7ffb3805]
  412be5:	(bad)  
  412be6:	pop    ebx
  412be7:	jmp    0xfd68:0xe77887b5
  412bee:	push   ebx
  412bef:	dec    edi
  412bf0:	jp     0x412c71
  412bf2:	pop    esi
  412bf3:	mul    BYTE PTR [eax+0xd]
  412bf6:	mov    bl,0xfe
  412bf8:	loop   0x412c01
  412bfa:	push   ebp
  412bfb:	je     0x412bfc
  412bfd:	and    eax,DWORD PTR [eax+edi*1-0x4007dab8]
  412c04:	retf   
  412c05:	call   0xad88b084
  412c0a:	push   ebx
  412c0b:	(bad)  
  412c0c:	lahf   
  412c0d:	call   0xef9d:0xc4f740d7
  412c14:	sub    ch,cl
  412c16:	push   ebx
  412c17:	out    0x46,eax
  412c19:	sbb    al,BYTE PTR [eax+eax*1]
  412c1c:	cld    
  412c1d:	mov    ebx,0x2f080dde
  412c22:	push   edx
  412c23:	test   BYTE PTR [eax],0x6d
  412c26:	push   ebx
  412c27:	je     0x412c10
  412c29:	jecxz  0x412c69
  412c2b:	sti    
  412c2c:	lock jl 0x412c82
  412c2f:	mov    ah,0xe7
  412c31:	bound  ebx,QWORD PTR [eax+0x53]
  412c34:	loope  0x412c30
  412c36:	lods   eax,DWORD PTR ds:[esi]
  412c37:	sbb    eax,ebx
  412c39:	in     eax,dx
  412c3a:	push   eax
  412c3b:	leave  
  412c3c:	enter  0xc3fb,0x52
	...
  412c4c:	leave  
  412c4d:	in     eax,dx
  412c4e:	inc    eax
  412c4f:	fnstcw WORD PTR [edx+edi*8+0x62f72599]
  412c56:	es inc esi
  412c58:	cld    
  412c59:	bound  edx,QWORD PTR [edx+0x29e19c7e]
  412c5f:	push   eax
  412c60:	push   cs
  412c61:	arpl   WORD PTR [ebx-0x1a88664a],dx
  412c67:	pop    ebx
  412c68:	xor    cl,BYTE PTR es:[eax]
  412c6b:	push   ebx
  412c6c:	jg     0x412c15
  412c6e:	add    DWORD PTR [ebx+0xb],edx
  412c71:	pop    ebx
  412c72:	xchg   ebp,eax
  412c73:	bound  ecx,QWORD PTR [esi]
  412c75:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412c76:	in     eax,dx
  412c77:	push   edx
  412c78:	sub    eax,DWORD PTR [esi+eiz*4]
  412c7b:	les    ebp,FWORD PTR [eax+0x5]
  412c7e:	test   al,0x50
  412c80:	popa   
  412c81:	in     eax,dx
  412c82:	fcomp  st(0)
  412c84:	lock jp 0x412c47
  412c87:	fnsave [edi-0x8f9ba9e]
  412c8d:	bound  ebp,QWORD PTR [ebp+0x5b]
  412c90:	test   bh,ch
  412c92:	mov    eax,0xe5773952
  412c97:	fisttp DWORD PTR [edx]
  412c99:	jp     0x412cc9
  412c9b:	add    al,0x28
  412c9d:	aaa    
  412c9e:	mov    ?,WORD PTR [ebx+0x5d9562b7]
  412ca4:	sbb    ch,ch
  412ca6:	nop
  412ca7:	push   edx
  412ca8:	mov    ebx,DWORD PTR [edx+0x5]
  412cab:	cli    
  412cac:	popf   
  412cad:	mov    ds:0xdbed,eax
	...
  412cba:	add    BYTE PTR [eax],al
  412cbc:	mul    BYTE PTR [edx-0x13]
  412cbf:	adc    DWORD PTR [eax],0xa
  412cc2:	pop    es
  412cc3:	ja     0x412d0a
  412cc5:	in     eax,dx
  412cc6:	div    esp
  412cc8:	cmp    ch,ch
  412cca:	jno    0x412cbd
  412ccc:	cmp    al,0x2c
  412cce:	xor    ebx,DWORD PTR [esi+0x45]
  412cd1:	sbb    eax,ebp
  412cd3:	in     eax,dx
  412cd4:	hlt    
  412cd5:	xchg   ebp,eax
  412cd6:	mov    edi,DWORD PTR ds:0xd3fb2071
  412cdc:	hlt    
  412cdd:	js     0x412d31
  412cdf:	ds lahf 
  412ce1:	fs out dx,al
  412ce3:	dec    ebp
  412ce4:	or     ch,ah
  412ce6:	mul    DWORD PTR [eax-0x41]
  412ce9:	call   0xa402c85c
  412cee:	push   es
  412cef:	push   ds
  412cf0:	mov    edi,0xe08dee64
  412cf5:	in     al,dx
  412cf6:	test   DWORD PTR [esi],0x7cf7e8af
  412cfc:	jl     0x412d02
  412cfe:	or     BYTE PTR [edx+0x2bcded25],bh
  412d04:	clc    
  412d05:	bound  edx,QWORD PTR [ecx+0x62]
  412d08:	enter  0xc2e0,0xe5
  412d0c:	popf   
  412d0d:	xchg   ebp,eax
  412d0e:	ins    BYTE PTR es:[edi],dx
  412d0f:	jmp    0x5d38c44e
  412d14:	push   ebx
  412d15:	add    al,0xb6
  412d17:	sbb    esp,DWORD PTR [esi-0x58d37214]
  412d1d:	fdiv   DWORD PTR [ecx]
  412d1f:	inc    esp
	...
  412d2c:	jnp    0x412cd1
  412d2e:	push   es
  412d2f:	bound  eax,QWORD PTR [eax]
  412d31:	jp     0x412d81
  412d33:	sub    bl,dh
  412d35:	loop   0x412d6e
  412d37:	jmp    0x23afd484
  412d3c:	cmp    ah,BYTE PTR [ebx+0x1db33e06]
  412d42:	es jmp 0x107853c
  412d48:	add    dh,bl
  412d4a:	push   ecx
  412d4b:	call   0x38807c
  412d50:	push   cs
  412d51:	psubb  mm7,mm7
  412d54:	imul   edx,ecx,0x20c5815f
  412d5a:	clc    
  412d5b:	dec    edi
  412d5c:	cmp    DWORD PTR [eax+eax*1],edx
  412d5f:	call   0x39de5c
  412d64:	ss dec edx
  412d66:	xor    edi,edi
  412d68:	cmp    DWORD PTR [esi+0x514e4606],ecx
  412d6e:	push   es
  412d6f:	jne    0x412d55
  412d71:	sbb    ah,bh
  412d73:	xor    ebx,esi
  412d75:	xlat   BYTE PTR ds:[ebx]
  412d76:	clc    
  412d77:	(bad)  
  412d78:	fst    DWORD PTR [ecx+0x5a96aef5]
  412d7e:	jno    0x412d3b
  412d80:	jmp    0x64412998
  412d85:	out    0xdf,eax
  412d87:	xchg   ebx,eax
  412d88:	cmp    al,0x92
  412d8a:	clc    
  412d8b:	pop    edi
  412d8c:	pop    eax
  412d8d:	sub    ch,al
  412d8f:	add    al,0x0
	...
  412d99:	add    BYTE PTR [eax],al
  412d9b:	add    BYTE PTR [esi-0x4c],bl
  412d9e:	mov    esp,gs
  412da0:	fstp   QWORD PTR [edx-0x5de47c11]
  412da6:	dec    esp
  412da7:	inc    ecx
  412da8:	dec    esi
  412da9:	pop    edi
  412daa:	jno    0x412db0
  412dac:	xchg   edi,eax
  412dad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412dae:	(bad)  
  412daf:	push   DWORD PTR [esi+0x4e000563]
  412db5:	xchg   DWORD PTR [esi],ecx
  412db7:	xor    eax,0x458e9279
  412dbc:	push   0xffffff9a
  412dbe:	inc    edx
  412dbf:	clc    
  412dc0:	adc    ah,BYTE PTR [eax+0x6]
  412dc3:	add    BYTE PTR [ebx+0x7950f024],ch
  412dc9:	adc    al,0xfc
  412dcb:	push   edi
  412dcd:	dec    esi
  412dce:	push   es
  412dcf:	inc    DWORD PTR [edx+0x3014570d]
  412dd5:	xor    bl,al
  412dd7:	(bad)  
  412dd8:	stc    
  412dd9:	cmc    
  412dda:	inc    edi
  412ddb:	out    0x94,eax
  412ddd:	adc    DWORD PTR [eax+eax*1],eax
  412de0:	je     0x412e56
  412de2:	add    dh,BYTE PTR [esi+0xa]
  412de5:	adc    al,0x4
  412de7:	add    al,cl
  412de9:	retf   0x8cdb
  412dec:	pop    esp
  412ded:	mov    ebx,0x9842ff03
  412df2:	push   esi
  412df3:	je     0x412de4
  412df5:	xchg   ebx,eax
  412df6:	mov    al,ds:0x5629b85c
  412dfb:	je     0x412db0
  412dfd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412dfe:	call   0x0:0x33
  412e05:	add    BYTE PTR [eax],al
  412e07:	add    BYTE PTR [eax],al
  412e09:	add    BYTE PTR [eax],al
  412e0b:	add    BYTE PTR [eax-0x103ec3c7],ch
  412e11:	sti    
  412e12:	mov    al,0x8a
  412e14:	mov    edi,DWORD PTR [ebp+0x3f]
  412e17:	sti    
  412e18:	sbb    eax,0x8855d9fc
  412e1d:	iret   
  412e1e:	sti    
  412e1f:	out    0xb2,eax
  412e21:	stos   DWORD PTR es:[edi],eax
  412e22:	push   esi
  412e23:	(bad)  
  412e24:	outs   dx,BYTE PTR ds:[esi]
  412e25:	mov    edi,0xe5856747
  412e2a:	(bad)  
  412e2b:	jmp    FWORD PTR [ecx+0x6f]
  412e2e:	sti    
  412e2f:	out    0xe9,eax
  412e31:	add    BYTE PTR [eax-0x2],cl
  412e34:	pop    eax
  412e35:	(bad)  
  412e36:	push   esi
  412e37:	dec    dl
  412e39:	add    ebx,DWORD PTR [edi+esi*8+0x6]
  412e3d:	sbb    DWORD PTR [eax-0x38],ecx
  412e40:	xor    eax,0x6c5503f8
  412e45:	sbb    BYTE PTR [ebx+eax*8+0x6a02a633],al
  412e4c:	sar    BYTE PTR [eax+0x630f07dd],0x81
  412e53:	adc    eax,0xc976ea18
  412e58:	or     al,0x7b
  412e5a:	in     eax,dx
  412e5b:	add    ebx,DWORD PTR [eax]
  412e5d:	test   eax,0xa38d8d05
  412e62:	in     eax,dx
  412e63:	(bad)  [esi+edi*2]
  412e66:	cs add al,0xf0
  412e69:	outs   dx,DWORD PTR ds:[esi]
  412e6a:	in     eax,0x5b
  412e6c:	jno    0x412df5
  412e6e:	push   0x4f
	...
  412e7b:	add    cl,ah
  412e7d:	outs   dx,DWORD PTR ds:[esi]
  412e7e:	popa   
  412e7f:	dec    edi
  412e80:	arpl   WORD PTR [ebx+0x55],bx
  412e83:	xchg   ecx,eax
  412e84:	pop    es
  412e85:	jmp    0xb8ed:0x5eb63d50
  412e8c:	ins    DWORD PTR es:[edi],dx
  412e8d:	imul   BYTE PTR [eax+ecx*2-0x5c]
  412e91:	nop
  412e92:	nop
  412e93:	dec    esi
  412e94:	sub    edx,DWORD PTR [edi+0x45]
  412e97:	cld    
  412e98:	out    dx,eax
  412e99:	jmp    0x6fa229c6
  412e9e:	out    0xae,eax
  412ea0:	cmp    bl,BYTE PTR [esp+ebp*1]
  412ea3:	cld    
  412ea4:	nop
  412ea5:	(bad)  
  412ea6:	stos   BYTE PTR es:[edi],al
  412ea7:	push   ebx
  412ea8:	cmp    dl,ch
  412eaa:	xchg   edx,eax
  412eab:	call   FWORD PTR [eax+0x794ec6ab]
  412eb1:	pop    ebp
  412eb2:	sub    eax,0xee8d74ff
  412eb7:	add    esi,edi
  412eb9:	jmp    0x9fb27e30
  412ebe:	shl    DWORD PTR [ebx+ecx*8],0x6
  412ec2:	(bad)  
  412ec4:	sub    al,0xe9
  412ec6:	pop    edx
  412ec7:	dec    esp
  412ec8:	push   eax
  412ec9:	or     BYTE PTR ds:0xad5d414f,ch
  412ecf:	xlat   BYTE PTR ds:[ebx]
  412ed0:	icebp  
  412ed1:	(bad)  [edx]
  412ed3:	pusha  
  412ed4:	jge    0x412ec8
  412ed6:	push   es
  412ed7:	ret    0xe818
  412eda:	jno    0x412e89
  412edc:	mov    esp,0xa633e6
	...
  412ee9:	add    BYTE PTR [eax],al
  412eeb:	add    BYTE PTR [ecx-0x3e72be26],ch
  412ef1:	outs   dx,BYTE PTR ds:[esi]
  412ef2:	cli    
  412ef3:	xchg   esi,eax
  412ef4:	das    
  412ef5:	std    
  412ef6:	not    DWORD PTR [ebx+esi*4]
  412ef9:	add    DWORD PTR [edi*4-0xb741757],esp
  412f00:	push   eax
  412f01:	sti    
  412f02:	out    0xe9,al
  412f04:	hlt    
  412f05:	bound  esi,QWORD PTR [edi+0x6a3bd74]
  412f0b:	mov    esi,0x94000a2
  412f10:	sti    
  412f11:	bound  ecx,QWORD PTR [ebx]
  412f13:	sub    DWORD PTR [eax+0x30faeb62],esp
  412f19:	xor    eax,0xe92980c6
  412f1e:	idiv   DWORD PTR [esi]
  412f20:	inc    esi
  412f21:	mov    dh,0x3e
  412f23:	out    dx,al
  412f24:	iret   
  412f25:	(bad)  
  412f26:	in     eax,dx
  412f27:	and    esp,esi
  412f29:	bound  eax,QWORD PTR [esi]
  412f2b:	jb     0x412f71
  412f2d:	xor    dh,0x92
  412f30:	mov    ebx,0x890151e8
  412f35:	dec    eax
  412f36:	push   es
  412f37:	jmp    0xecb2d7b9
  412f3c:	sbb    esi,DWORD PTR [edx-0x5d0b16fa]
  412f42:	mov    edi,ecx
  412f44:	in     al,dx
  412f45:	outs   dx,BYTE PTR ds:[esi]
  412f46:	out    dx,al
  412f47:	add    esi,0xa2e9457c
  412f4d:	add    BYTE PTR [eax],al
  412f4f:	or     DWORD PTR [eax],eax
	...
  412f59:	add    BYTE PTR [eax],al
  412f5b:	add    bl,bh
  412f5d:	bound  ecx,QWORD PTR [ebx]
  412f5f:	test   eax,0x71ed5f20
  412f64:	sti    
  412f65:	bound  eax,QWORD PTR [esi]
  412f67:	add    ah,al
  412f69:	out    dx,al
  412f6a:	rol    DWORD PTR [eax],0x1e
  412f6d:	mov    ah,0x55
  412f6f:	(bad)  
  412f70:	jmp    0x412ef8
  412f72:	fistp  QWORD PTR [edi]
  412f74:	xor    BYTE PTR [esi+eax*1+0xb],ah
  412f78:	dec    esi
  412f79:	or     esi,DWORD PTR [ecx+ecx*4-0x25]
  412f7d:	jp     0x412f77
  412f7f:	jne    0x412ff7
  412f81:	xchg   DWORD PTR [ecx],ebx
  412f83:	inc    ebx
  412f84:	jno    0x412f1c
  412f86:	mov    es,WORD PTR [ebp+0x6e]
  412f89:	xchg   esi,eax
  412f8a:	jb     0x412f70
  412f8c:	jno    0x412f9e
  412f8e:	fsubr  st,st(0)
  412f90:	ficomp WORD PTR [edi]
  412f92:	stc    
  412f93:	call   ebp
  412f95:	mov    ds:0x81f4f73,eax
  412f9a:	in     al,0xff
  412f9c:	jmp    0x412f24
  412f9e:	ins    BYTE PTR es:[edi],dx
  412f9f:	inc    ecx
  412fa0:	fisub  WORD PTR [esi+0x42]
  412fa3:	fdiv   DWORD PTR [ecx]
  412fa5:	push   eax
  412fa6:	jmp    0xa45:0x87638f6b
  412fad:	push   0x688ed442
  412fb2:	inc    edx
  412fb3:	in     al,0x7e
  412fb5:	xchg   esi,eax
  412fb6:	jb     0x412f98
  412fb8:	push   es
  412fb9:	mov    edi,0xe9f1ff5b
  412fbe:	mov    bh,0x74
	...
  412fcc:	mov    eax,0x8100070b
  412fd1:	aad    0xf8
  412fd3:	jne    0x412f5b
  412fd5:	mov    eax,esp
  412fd7:	das    
  412fd8:	jno    0x412f70
  412fda:	clc    
  412fdb:	jne    0x412fd3
  412fdd:	xchg   ebp,eax
  412fde:	jb     0x412fe8
  412fe0:	idiv   ah
  412fe2:	daa    
  412fe3:	call   DWORD PTR [ecx-0x6a]
  412fe6:	jb     0x412fcc
  412fe8:	xor    DWORD PTR [eax],edx
  412fea:	fdivr  st,st(7)
  412fec:	test   DWORD PTR [esi-0x17a81806],0x2638fe4a
  412ff6:	(bad)  
  412ff7:	out    0x26,eax
  412ff9:	jmp    0x413045
  412ffb:	dec    ch
  412ffd:	push   ecx
  412ffe:	jp     0x41300f
  413000:	in     al,dx
  413001:	scas   eax,DWORD PTR es:[edi]
  413002:	iret   
  413003:	or     BYTE PTR [edi-0x1],dh
  413006:	add    ecx,DWORD PTR [edi]
  413008:	jp     0x412ff6
  41300a:	dec    edx
  41300b:	dec    BYTE PTR [eax]
  41300d:	popa   
  41300e:	add    al,0x0
  413010:	adc    BYTE PTR [edi-0x2e108bb6],dl
  413016:	jg     0x413046
  413018:	lock gs dec edx
  41301b:	je     0x413008
  41301d:	ins    DWORD PTR es:[edi],dx
  41301e:	shl    bh,1
  413020:	loopne 0x413011
  413022:	sti    
  413023:	out    0x8b,eax
  413025:	dec    ebp
  413026:	dec    ecx
  413027:	(bad)  
  413028:	ror    BYTE PTR [edi],1
  41302a:	pop    eax
  41302b:	out    0x8a,eax
  41302d:	dec    edx
  41302e:	dec    ecx
  41302f:	inc    BYTE PTR [eax]
	...
  413039:	add    BYTE PTR [eax],al
  41303b:	add    BYTE PTR [edx-0x41],dh
  41303e:	push   ebx
  41303f:	dec    edi
  413040:	iret   
  413041:	nop
  413042:	or     edi,edi
  413044:	mov    al,0x91
  413046:	add    ebx,DWORD PTR [edi+0x49]
  413049:	inc    ebx
  41304a:	inc    ebp
  41304b:	pop    es
  41304c:	test   esi,0xc798eb7e
  413052:	idiv   esi
  413054:	or     dh,ah
  413056:	pop    ebx
  413057:	bound  ecx,QWORD PTR [ecx-0x4a37b5b3]
  41305d:	or     BYTE PTR [edx*2+0x744a506c],al
  413064:	add    edx,DWORD PTR [edx+eiz*2+0x35]
  413068:	push   0xebbfefed
  41306d:	sbb    BYTE PTR [ebx+0x74],cl
  413070:	pop    es
  413071:	arpl   WORD PTR ds:0xd82ccb5c,di
  413077:	dec    ebx
  413078:	mov    eax,0x61d97a
  41307d:	arpl   ax,cx
  41307f:	shl    eax,1
  413081:	in     eax,0x3a
  413083:	lock shl ch,0x32
  413087:	cld    
  413088:	adc    BYTE PTR [edi-0x4deb4ea],ch
  41308e:	inc    ebp
  41308f:	push   ss
  413090:	sbb    dh,ah
  413092:	mov    dh,0x46
  413094:	in     al,0x62
  413096:	xor    bh,BYTE PTR [edi+0x1c]
  413099:	jnp    0x413088
  41309b:	add    edx,DWORD PTR [eax]
  41309d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41309e:	add    eax,0x2c
	...
  4130ab:	add    BYTE PTR [ebp+0x6b4aeda3],cl
  4130b1:	push   edi
  4130b2:	adc    ebp,esi
  4130b4:	jmp    0x909d1628
  4130b9:	in     eax,0x68
  4130bb:	dec    ebx
  4130bc:	push   eax
  4130bd:	arpl   bp,bp
  4130bf:	pop    edx
  4130c0:	xchg   edx,eax
  4130c1:	jp     0x413108
  4130c3:	fbstp  TBYTE PTR [edi]
  4130c5:	arpl   WORD PTR [eax-0x2f],dx
  4130c8:	in     al,dx
  4130c9:	js     0x4130b4
  4130cb:	dec    edx
  4130cc:	inc    ebx
  4130cd:	pop    ebx
  4130ce:	push   ebp
  4130cf:	ins    DWORD PTR es:[edi],dx
  4130d0:	mov    cl,0xe5
  4130d2:	cmp    ah,bl
  4130d4:	test   al,0xe5
  4130d6:	inc    eax
  4130d7:	mov    bl,BYTE PTR [eax]
  4130d9:	or     eax,ebp
  4130db:	les    ebx,FWORD PTR [eax+0x1ef79ae4]
  4130e1:	inc    edx
  4130e2:	sbb    cl,dl
  4130e4:	lock cli 
  4130e6:	imul   ecx,DWORD PTR [ebx-0x7f],0xffffffe5
  4130ea:	es inc esi
  4130ec:	lock bound ebx,QWORD PTR [edx+0x97a5c7e]
  4130f3:	fbstp  TBYTE PTR [edi-0x267ef99e]
  4130f9:	js     0x413140
  4130fb:	jmp    0xe6579fad
  413100:	out    0x3,eax
  413102:	dec    edi
  413103:	sub    bl,dh
  413105:	cli    
  413106:	adc    DWORD PTR [esp+ebp*4],ebx
  413109:	in     al,0xb
  41310b:	test   eax,0xd1a34828
	...
  41311c:	push   ecx
  41311d:	mov    ds:0x5947be06,al
  413122:	idiv   DWORD PTR [ebx+eiz*1]
  413125:	std    
  413126:	sub    DWORD PTR [esi-0x23081b53],0xe94578ac
  413130:	lods   al,BYTE PTR ds:[esi]
  413131:	pop    es
  413132:	ss xchg esi,eax
  413134:	lods   eax,DWORD PTR ds:[esi]
  413135:	sbb    al,ch
  413137:	(bad)  
  413139:	(bad)  
  41313a:	mov    edx,DWORD PTR [ebp+0x13fb2079]
  413140:	repz js 0x4131a0
  413143:	jbe    0x41310c
  413145:	pop    esp
  413146:	out    dx,al
  413147:	jmp    0x71391549
  41314c:	mov    bh,0xe8
  41314e:	outs   dx,BYTE PTR ds:[esi]
  41314f:	mov    dh,0xa0
  413151:	mov    ds:0x76f2c106,eax
  413156:	inc    ebp
  413157:	jmp    0x514fa089
  41315c:	and    ebp,esp
  41315e:	idiv   DWORD PTR [esi]
  413160:	cmp    eax,0xc736fa6f
  413165:	pop    esp
  413166:	out    dx,al
  413167:	pop    es
  413168:	cld    
  413169:	jecxz  0x413162
  41316b:	xor    BYTE PTR [edx],bh
  41316d:	pusha  
  41316e:	push   es
  41316f:	mov    ah,0x9
  413171:	clc    
  413172:	sub    DWORD PTR ds:0x83067a38,0x4c
  413179:	in     eax,0x71
  41317b:	add    BYTE PTR [esi-0x78],ah
  41317e:	int    0x2e
	...
  41318c:	imul   ebx,DWORD PTR [edx+0x96a458e],0x608f6c94
  413196:	outs   dx,BYTE PTR ds:[esi]
  413197:	jl     0x413143
  413199:	pop    ds
  41319a:	clc    
  41319b:	(bad)  
  41319c:	mov    ds:0x2965dfe6,eax
  4131a1:	call   0x75f8:0x9aa3fff8
  4131a8:	es mov bh,ah
  4131ab:	imul   ebx,DWORD PTR cs:[edx+0x6012c2ce],0xde5a8b51
  4131b6:	ret    
  4131b7:	cld    
  4131b8:	in     al,0x5e
  4131ba:	ins    BYTE PTR es:[edi],dx
  4131bb:	pop    edx
  4131bc:	imul   edx,DWORD PTR [eax+eax*1],0xf74882e8
  4131c3:	call   DWORD PTR [edi-0x2195045d]
  4131c9:	pop    es
  4131ca:	xlat   BYTE PTR ds:[ebx]
  4131cb:	ins    BYTE PTR es:[edi],dx
  4131cc:	pop    ds
  4131cd:	pop    edi
  4131ce:	outs   dx,BYTE PTR ds:[esi]
  4131cf:	mov    ah,0xfa
  4131d1:	pop    ds
  4131d2:	clc    
  4131d3:	(bad)  
  4131d4:	mov    ds:0xde413f80,eax
  4131d9:	xchg   DWORD PTR [ebp+0x34],ebx
  4131dc:	sub    DWORD PTR [edx-0x75d3ff4],ebx
  4131e2:	inc    edi
  4131e3:	push   0xbee75fce
  4131e8:	mov    BYTE PTR [ebx-0x5061be95],0xf8
  4131ef:	jne    0x4131f1
	...
  4131f9:	add    BYTE PTR [eax],al
  4131fb:	add    BYTE PTR [esi-0x36a5e479],dl
  413201:	cdq    
  413202:	fbld   TBYTE PTR ds:0x6af89aaf
  413208:	sahf   
  413209:	pop    es
  41320a:	xlat   BYTE PTR ds:[ebx]
  41320b:	ins    BYTE PTR es:[edi],dx
  41320c:	idiv   DWORD PTR [edx+0x65436803]
  413212:	(bad)  
  413213:	(bad)  
  413214:	fdiv   st,st(7)
  413216:	add    eax,DWORD PTR [eax]
  413218:	ja     0x41326b
  41321a:	and    eax,0xfaec6034
  41321f:	mov    edi,0x67b412e3
  413224:	idiv   ecx
  413226:	pop    esi
  413227:	mov    ebp,0x40d01ddf
  41322c:	imul   DWORD PTR [ecx]
  41322e:	dec    ebp
  41322f:	je     0x413220
  413231:	and    DWORD PTR [ebp+0x58],ebx
  413234:	xor    BYTE PTR [esp+ebx*2],bl
  413237:	icebp  
  413238:	out    0xa4,eax
  41323a:	dec    esi
  41323b:	imul   esi,edi,0xb66b2ba1
  413241:	stc    
  413242:	(bad)  [ebx-0xfdc55d]
  413248:	ret    0xbbda
  41324b:	inc    eax
  41324c:	mul    ecx
  41324e:	push   edx
  41324f:	xor    bh,al
  413251:	sar    edx,cl
  413253:	mov    edi,0x67b3c36b
  413258:	test   ebx,0xf04fbd5e
  41325e:	iret   
  41325f:	inc    eax
	...
  41326c:	idiv   DWORD PTR [ebx+0x4d]
  41326f:	je     0x413270
  413271:	xor    ecx,DWORD PTR [eax+0x5b41c858]
  413277:	mov    ebp,0x694e3907
  41327c:	mul    DWORD PTR [ebx-0x33c994d4]
  413282:	(bad)  [ebx+0x68040b1b]
  413288:	cmc    
  413289:	retf   
  41328a:	add    eax,DWORD PTR [eax-0xed7371]
  413290:	nop
  413291:	arpl   sp,si
  413293:	inc    ebx
  413294:	add    al,0x7c
  413296:	mov    ebp,0xe280db
  41329b:	mov    DWORD PTR [eax],edx
  41329d:	(bad)  
  41329e:	jns    0x413262
  4132a0:	jo     0x4132d4
  4132a2:	add    dh,cl
  4132a4:	lock retf 0xaa6b
  4132a8:	popa   
  4132a9:	loop   0x4132b0
  4132ab:	jl     0x4132b5
  4132ad:	loop   0x413297
  4132af:	inc    edi
  4132b0:	retf   
  4132b1:	fsubrp st(0),st
  4132b3:	shl    eax,1
  4132b5:	retf   0x19d7
  4132b8:	inc    eax
  4132b9:	loop   0x413261
  4132bb:	inc    edx
  4132bc:	hlt    
  4132bd:	bound  esi,QWORD PTR [edx]
  4132bf:	jnp    0x4132dd
  4132c1:	in     al,0xa9
  4132c3:	pop    esp
  4132c4:	and    edx,esp
  4132c6:	mov    eax,0xed63fbdc
  4132cb:	add    ecx,DWORD PTR [edi]
  4132cd:	jecxz  0x4132cc
  4132cf:	inc    esi
	...
  4132dc:	adc    esp,ebp
  4132de:	push   0x5c
  4132e0:	add    edx,esp
  4132e2:	cwde   
  4132e3:	jns    0x4132a0
  4132e5:	fidivr WORD PTR ds:0x886e8347
  4132eb:	sar    eax,1
  4132ed:	retf   0xe867
  4132f0:	call   0xf18527d6
  4132f5:	out    0xe4,eax
  4132f7:	add    al,0xf7
  4132f9:	bound  esp,QWORD PTR [eax-0x129d373f]
  4132ff:	add    esi,edi
  413301:	test   eax,0x69c14fa2
  413306:	in     eax,dx
  413307:	add    ecx,DWORD PTR [ebp+0x63]
  41330a:	ret    
  41330b:	add    ebx,DWORD PTR ds:0x7a03d363
  413311:	daa    
  413312:	xor    DWORD PTR [ebx+esi*2+0x283d06e7],esi
  413319:	loope  0x413312
  41331b:	cdq    
  41331c:	cmp    DWORD PTR [edi-0x2],edx
  41331f:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  413321:	fucomp st(6)
  413323:	rcr    DWORD PTR [eax+0x34e2f7e1],0x56
  41332a:	add    DWORD PTR [eax],eax
  41332c:	sub    edx,esp
  41332e:	imul   ecx
  413330:	dec    esp
  413331:	push   ds
  413332:	dec    edi
  413333:	test   al,0xf4
  413335:	loope  0x4133a8
  413337:	in     eax,0xbc
  413339:	or     dh,BYTE PTR [esi+ebp*8]
  41333c:	mov    ecx,0xb98b31
	...
  413349:	add    BYTE PTR [eax],al
  41334b:	add    bh,cl
  41334d:	out    0xf2,al
  41334f:	(bad)  
  413350:	mov    ecx,0x9b3b56e0
  413355:	cli    
  413356:	xor    ecx,esi
  413358:	mov    ecx,0xb9b981ea
  41335d:	loopne 0x413356
  41335f:	ror    ecx,1
  413361:	nop
  413362:	div    DWORD PTR [esi-0x1ca01ec2]
  413368:	das    
  413369:	and    al,BYTE PTR [esi]
  41336b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41336c:	addr16 shr edi,1
  41336f:	sahf   
  413370:	mov    ecx,0x9ce171e0
  413375:	shl    DWORD PTR [esi+ecx*4],cl
  413378:	cmp    ebx,ebp
  41337a:	adc    DWORD PTR [ebp+0x6af7e139],0x76efcc6f
  413384:	xor    eax,esp
  413386:	jae    0x4133a2
  413388:	mov    bl,0x71
  41338a:	imul   ebp,DWORD PTR [eax+0x4db1dff4],0x41f7e131
  413394:	mov    ss,WORD PTR [ebp+0x30644ef7]
  41339a:	outs   dx,BYTE PTR ds:[esi]
  41339b:	add    BYTE PTR [edx-0x1efff999],bl
  4133a1:	repnz fcomip st,st(7)
  4133a4:	loope  0x4133ce
  4133a6:	pop    edi
  4133a7:	mov    edi,0x67f7a756
  4133ac:	mov    ecx,0x46bb
	...
  4133b9:	add    BYTE PTR [eax],al
  4133bb:	add    BYTE PTR [esi-0x37],ah
  4133be:	push   0x41
  4133c0:	mov    ?,WORD PTR [eax*2-0x7c9ba1e5]
  4133c7:	clc    
  4133c8:	pop    ebp
  4133c9:	scas   al,BYTE PTR es:[edi]
  4133ca:	punpckhbw mm1,QWORD PTR [esi+0x64]
  4133ce:	out    0xbe,eax
  4133d0:	jbe    0x413446
  4133d2:	imul   eax,DWORD PTR [ecx+0x5e],0x29e8b229
  4133d9:	es clc 
  4133db:	jmp    FWORD PTR [ebx+0x66fdfd6]
  4133e1:	es clc 
  4133e3:	call   0x38a9ae
  4133e8:	xor    DWORD PTR [eax+0x36abff07],esi
  4133ee:	lock jmp DWORD PTR [ecx+0x26]
  4133f2:	jb     0x4133fc
  4133f4:	ss cmp bh,cl
  4133f7:	call   DWORD PTR [ecx+0x26]
  4133fa:	mov    dl,0xf0
  4133fc:	imul   esp,DWORD PTR [esi],0x75c2e8f8
  413402:	idiv   edi
  413404:	sub    edi,0x2571f7eb
  41340a:	fist   WORD PTR [ecx-0x4f]
  41340d:	es clc 
  41340f:	dec    DWORD PTR [ebx]
  413411:	das    
  413412:	out    dx,al
  413413:	add    al,0x61
  413415:	es clc 
  413417:	jmp    FWORD PTR [ebx-0xa9220d9]
  41341d:	pushw  es
  41341f:	inc    DWORD PTR [eax]
	...
  413429:	add    BYTE PTR [eax],al
  41342b:	add    bh,dh
  41342d:	(bad)  
  41342e:	pop    edx
  41342f:	div    BYTE PTR [eax-0x27caa5d0]
  413435:	sub    BYTE PTR [ecx-0x38],al
  413438:	mov    ch,0xcd
  41343a:	add    edx,DWORD PTR [ebp+0x6c]
  41343d:	and    eax,0xa393c385
  413442:	add    ebp,DWORD PTR [edx+0x2c]
  413445:	mov    edi,eax
  413447:	pop    es
  413448:	(bad)  
  413449:	mov    eax,ds:0x4278ff0f
  41344e:	mov    bh,0xfb
  413450:	jo     0x413448
  413452:	sti    
  413453:	addr16 addr16 cmc 
  413456:	(bad)  
  413457:	jmp    DWORD PTR [ecx+0x16]
  41345a:	gs inc edi
  41345c:	mov    dh,0xc9
  41345e:	pop    ebx
  41345f:	lea    edx,[ecx-0x30]
  413462:	inc    edx
  413463:	inc    dl
  413465:	rcr    ebx,1
  413467:	out    dx,eax
  413468:	ror    DWORD PTR [edx-0x360a97fe],cl
  41346e:	add    eax,DWORD PTR [eax-0x1bfd2e1]
  413474:	sub    BYTE PTR [ecx],dh
  413476:	add    al,BYTE PTR [eax]
  413478:	adc    BYTE PTR [edi-0x25],bl
  41347b:	das    
  41347c:	mov    cl,BYTE PTR [edx-0x612d97fe]
  413482:	ret    
  413483:	dec    DWORD PTR [ecx]
  413485:	jle    0x413481
  413487:	out    0xe1,eax
  413489:	and    DWORD PTR [ecx-0x2],eax
  41348c:	clc    
  41348d:	jge    0x4134dd
  41348f:	inc    BYTE PTR [eax]
	...
  413499:	add    BYTE PTR [eax],al
  41349b:	add    BYTE PTR [edx-0x3c],ch
  41349e:	pop    ebx
  41349f:	push   ebx
  4134a0:	sbb    esp,ebp
  4134a2:	inc    edx
  4134a3:	enter  0xc8b5,0x3
  4134a7:	push   ebp
  4134a8:	ins    BYTE PTR es:[edi],dx
  4134a9:	call   0x55d0f832
  4134ae:	inc    edx
  4134af:	(bad)  
  4134b0:	jp     0x413515
  4134b2:	stos   BYTE PTR es:[edi],al
  4134b3:	inc    edi
  4134b4:	xor    dh,bl
  4134b6:	shl    bh,cl
  4134b8:	mov    ecx,0x9c5be558
  4134bd:	jns    0x4134ac
  4134bf:	add    edi,esp
  4134c1:	mov    ds:0x61997ef0,al
  4134c6:	in     eax,dx
  4134c7:	add    esi,DWORD PTR [eax-0x8fccad8]
  4134cd:	(bad)  
  4134ce:	in     eax,dx
  4134cf:	cmp    al,0x33
  4134d1:	xlat   BYTE PTR ds:[ebx]
  4134d2:	and    ah,bh
  4134d4:	sbb    dh,0x93
  4134d7:	add    ecx,DWORD PTR ds:0xdd038363
  4134dd:	bound  ebx,QWORD PTR [edx-0x42]
  4134e0:	xor    esi,DWORD PTR fs:[edx+0x7e]
  4134e4:	fs (bad) 
  4134e6:	clc    
  4134e7:	inc    ebx
  4134e8:	test   al,0xdd
  4134ea:	jp     0x413537
  4134ec:	push   ecx
  4134ed:	pop    eax
  4134ee:	jmp    0xedbabf4d
  4134f3:	add    ebp,esp
  4134f5:	mov    ds:0x94e0951,al
  4134fa:	in     al,dx
  4134fb:	add    esi,edi
  4134fd:	dec    edx
  4134fe:	mov    cl,ah
	...
  41350c:	mov    bh,0x62
  41350e:	sar    BYTE PTR [ecx-0xa173514],0x19
  413515:	fisub  WORD PTR [esp+edx*2-0x7d]
  413519:	call   0xde4a70cf
  41351e:	cmp    eax,0xdb3718d6
  413523:	inc    edx
  413524:	stc    
  413525:	jmp    0x413591
  413527:	xor    al,0xe9
  413529:	fisttp QWORD PTR [eax+0x2145e8ae]
  41352f:	mov    cl,0x37
  413531:	arpl   WORD PTR [eax+0x79],di
  413534:	enter  0x6d5,0x76
  413538:	xor    al,0xdd
  41353a:	jno    0x41351d
  41353c:	sbb    al,0x40
  41353e:	xor    eax,0x81eb3466
  413543:	dec    ebp
  413544:	cld    
  413545:	fdivr  st(7),st
  413547:	ret    
  413548:	hlt    
  413549:	dec    edx
  41354a:	ins    DWORD PTR es:[edi],dx
  41354b:	mov    esp,0x7cf8ddb3
  413550:	jmp    0x413526
  413552:	idiv   DWORD PTR [esi]
  413554:	xor    al,0x57
  413556:	push   cs
  413557:	inc    ecx
  413558:	mov    eax,0x7a2ef792
  41355d:	out    0xee,al
  41355f:	push   ds
  413560:	xor    al,0xdd
  413562:	ins    BYTE PTR es:[edi],dx
  413563:	jmp    0xa8aa86b4
  413568:	hlt    
  413569:	fnsave [ecx-0x822d3e7]
  41356f:	push   es
	...
  41357c:	sahf   
  41357d:	gs out dx,al
  41357f:	shl    DWORD PTR [ebx-0x24],1
  413582:	mul    DWORD PTR [eax+0x7e]
  413585:	shr    edi,0xee
  413588:	mov    ch,0xee
  41358a:	add    ebp,0x39f7dcfd
  413590:	mov    ebx,DWORD PTR [edi+0x69]
  413593:	sub    bl,bh
  413595:	fnsave [ecx-0x8231227]
  41359b:	(bad)  
  41359c:	pop    edi
  41359d:	gs out dx,al
  41359f:	icebp  
  4135a0:	and    ebx,esp
  4135a2:	mul    DWORD PTR [eax+0x7f]
  4135a5:	mov    ebp,0x4bb5aeef
  4135aa:	push   es
  4135ab:	adc    DWORD PTR [ebp+0x4e],ebp
  4135ae:	inc    ebp
  4135af:	jmp    0x9f384c69
  4135b4:	xor    eax,0xfb14f7dd
  4135b9:	retf   0xe9
  4135bc:	sahf   
  4135bd:	and    eax,edi
  4135bf:	mov    DWORD PTR [ebx+0x38],edx
  4135c2:	lock dec DWORD PTR [ecx-0xd]
  4135c6:	adc    al,0x41
  4135c9:	and    eax,edi
  4135cb:	push   eax
  4135cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4135cd:	imul   DWORD PTR [edx+0x41]
  4135d0:	into   
  4135d1:	and    DWORD PTR [edx-0x7deae10],esi
  4135d7:	inc    ebx
  4135d9:	push   0x219ecdee
  4135de:	clc    
  4135df:	mov    DWORD PTR [eax],eax
	...
  4135e9:	add    BYTE PTR [eax],al
  4135eb:	add    BYTE PTR [ebx],dl
  4135ed:	xor    al,0xf0
  4135ef:	dec    ecx
  4135f1:	or     eax,0x133b67f8
  4135f6:	inc    edi
  4135f7:	add    cl,bl
  4135f9:	pop    edx
  4135fa:	out    0xf7,eax
  4135fc:	fldenv [eax]
  4135fe:	clc    
  4135ff:	jne    0x413657
  413601:	mov    BYTE PTR [ebp-0x71df06d0],dh
  413607:	test   DWORD PTR [edx],ebp
  413609:	cdq    
  41360a:	clc    
  41360b:	dec    ebx
  41360d:	jmp    0x6847:0x2249f7c3
  413614:	mov    dh,0x12
  413616:	inc    edi
  413617:	add    BYTE PTR [ecx+0x54],bl
  41361a:	out    0xf7,eax
  41361c:	sbb    DWORD PTR [edx],esp
  41361e:	clc    
  41361f:	jne    0x413637
  413621:	mov    BYTE PTR [ebp-0x71ddc6d0],dl
  413627:	test   DWORD PTR [esi-0x66],esp
  41362a:	clc    
  41362b:	inc    esp
  41362d:	data16 outs dx,BYTE PTR ds:[esi]
  41362f:	mov    cl,0xbb
  413631:	lahf   
  413632:	idiv   esi
  413634:	adc    DWORD PTR [esi+0x2259fff0],0x72
  41363b:	or     BYTE PTR [esi+0x1a],ah
  41363e:	sub    bh,bh
  413640:	div    esp
  413642:	mov    eax,DWORD PTR [edi+esi*4+0x72fe45f4]
  413649:	dec    esi
  41364a:	jp     0x413642
  41364c:	fcomp  DWORD PTR [edx+edx*8+0x67]
	...
  41365c:	xchg   edx,eax
  41365d:	retw   
  41365f:	dec    ecx
  413661:	xchg   esi,eax
  413662:	xor    dh,dh
  413664:	rol    BYTE PTR [ebp+eax*2+0x74],0xef
  413669:	xor    ebp,ebx
  41366b:	das    
  41366c:	mov    al,0x34
  41366e:	mov    eax,DWORD PTR [ebx+ebp*2+0x74fe4534]
  413675:	out    0x36,al
  413677:	neg    BYTE PTR [eax+0x7b0f029c]
  41367d:	mov    WORD PTR [edx],es
  41367f:	add    bh,dh
  413681:	dec    eax
  413682:	ja     0x413653
  413684:	mov    BYTE PTR [ebp+eax*2-0x7d30fc01],al
  41368b:	mov    esp,0xfe457caf
  413690:	idiv   DWORD PTR [edi+edi*2+0x3c9f7b0]
  413697:	push   0xbd36c9f7
  41369c:	push   eax
  41369d:	pop    esi
  41369e:	adc    ebp,eax
  4136a0:	lea    esp,[edx-0x1bf01ba]
  4136a6:	daa    
  4136a7:	idiv   BYTE PTR [eax]
  4136a9:	mov    esp,0xa2077446
  4136ae:	adc    eax,0x46ac282a
  4136b3:	mov    ah,0xf
  4136b5:	sbb    al,0x47
  4136b7:	(bad)  
  4136b8:	sbb    BYTE PTR [esi+0x5ff7e812],dl
  4136be:	inc    ebp
  4136bf:	inc    BYTE PTR [eax]
	...
  4136c9:	add    BYTE PTR [eax],al
  4136cb:	add    BYTE PTR [eax],cl
  4136cd:	push   esi
  4136ce:	pop    ds
  4136cf:	test   BYTE PTR [eax],0x62
  4136d2:	mov    al,ds:0x95728340
  4136d7:	xor    eax,0x4090da1f
  4136dc:	mov    ds:0xe14090b7,eax
  4136e1:	fidivr DWORD PTR [edx]
  4136e3:	and    esp,ecx
  4136e5:	fidivr DWORD PTR [eax+0x40]
  4136e8:	dec    ebx
  4136e9:	jae    0x413670
  4136eb:	jne    0x41370c
  4136ed:	fisubr DWORD PTR [eax+0x40]
  4136f0:	mov    edi,DWORD PTR [ebx-0x2546bfa8]
  4136f6:	rcl    BYTE PTR [ebx],cl
  4136f8:	lahf   
  4136f9:	mov    bl,0x6
  4136fb:	inc    ecx
  4136fc:	test   eax,0xa95392da
  413701:	fiadd  DWORD PTR [eax+0x40]
  413704:	arpl   WORD PTR [edi-0x256ebfd0],bp
  41370a:	mov    edx,0x6f39f13
  41370f:	inc    ecx
  413710:	sbb    edx,0xda814f5a
  413716:	sbb    BYTE PTR [eax-0x15],al
  413719:	jb     0x413720
  41371b:	jno    0x41373c
  41371d:	fimul  DWORD PTR [eax]
  41371f:	inc    eax
  413720:	stos   DWORD PTR es:[edi],eax
  413721:	lahf   
  413722:	clc    
  413723:	aas    
  413724:	pop    ecx
  413725:	fidiv  DWORD PTR [edx]
  413727:	dec    ebx
  413728:	dec    ecx
  413729:	(bad)  
  41372b:	aas    
  41372c:	ret    
  41372d:	jb     0x413734
  41372f:	mov    cl,0x0
	...
  413739:	add    BYTE PTR [eax],al
  41373b:	add    BYTE PTR [edi],cl
  41373d:	(bad)  
  41373f:	aas    
  413740:	and    DWORD PTR [ebx-0x25cec030],0x5a
  413747:	adc    al,0x1f
  413749:	out    0x6,eax
  41374b:	aas    
  41374c:	and    edx,ebx
  41374e:	jp     0x4137cc
  413750:	and    edx,ebx
  413752:	mov    eax,0x7174b3f
  413757:	mov    esi,0x34f7d8c8
  41375c:	jmp    0x413728
  41375e:	dec    edx
  41375f:	sar    BYTE PTR [ecx+0xb14f7d8],1
  413765:	fidiv  DWORD PTR [ecx-0x826df67]
  41376b:	mov    ds,WORD PTR [esi+0x366bee61]
  413771:	fincstp 
  413773:	jle    0x4137c3
  413775:	retf   0x76ef
  413778:	or     dl,al
  41377a:	dec    ebp
  41377b:	mov    ebp,0x9cf7d901
  413780:	pop    es
  413781:	shl    edi,1
  413783:	pop    esi
  413784:	jecxz  0x41371d
  413786:	sub    dl,BYTE PTR [esi-0x18]
  413789:	fdiv   DWORD PTR [ecx-0x82717bf]
  41378f:	push   ecx
  413790:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413791:	(bad)  
  413792:	idiv   DWORD PTR [esi]
  413794:	ror    BYTE PTR [esi],1
  413796:	jecxz  0x4137d6
  413798:	enter  0xeed8,0x1
  41379c:	xchg   eax,ebx
  41379e:	mul    DWORD PTR [esi]
	...
  4137ac:	(bad)  
  4137ad:	mov    ecx,0xc2301eef
  4137b2:	sbb    ebp,eax
  4137b4:	sub    ecx,ebx
  4137b6:	not    DWORD PTR [ebx+eax*8-0x30]
  4137ba:	test   DWORD PTR [esi],0xfe2a740b
  4137c0:	adc    ecx,ebx
  4137c2:	mov    cl,0x1d
  4137c4:	add    cl,bl
  4137c6:	test   DWORD PTR [ecx],0xe6f786f8
  4137cc:	stc    
  4137cd:	push   cs
  4137ce:	retf   
  4137cf:	(bad)  
  4137d0:	icebp  
  4137d1:	fsubr  st,st(6)
  4137d3:	aad    0x1d
  4137d5:	fdiv   st,st(7)
  4137d7:	into   
  4137d8:	lahf   
  4137d9:	mov    eax,ds:0x983100ef
  4137de:	fcomip st,st(1)
  4137e0:	in     eax,0x99
  4137e2:	clc    
  4137e3:	dec    DWORD PTR [ebx+0x51fff025]
  4137e9:	(bad)  
  4137ea:	loope  0x413817
  4137ec:	push   ecx
  4137ed:	cwde   
  4137ee:	clc    
  4137ef:	mov    ch,0x52
  4137f1:	xchg   ecx,eax
  4137f2:	clc    
  4137f3:	push   DWORD PTR [esi+0x3d]
  4137f6:	sub    al,0xff
  4137f8:	jno    0x413793
  4137fa:	inc    edx
  4137fb:	clc    
  4137fc:	xchg   esp,ecx
  4137fe:	cli    
  4137ff:	call   DWORD PTR [ecx-0x67]
  413802:	jb     0x413800
  413804:	jbe    0x413797
  413806:	adc    BYTE PTR [eax],al
  413808:	into   
  413809:	daa    
  41380a:	lds    ecx,FWORD PTR [esi+ecx*8]
  41380d:	mov    ebx,0xec8c
	...
  41381a:	add    BYTE PTR [eax],al
  41381c:	sbb    eax,0x9e6afb20
  413821:	or     bl,BYTE PTR [edi+edi*8-0x35]
  413825:	ins    BYTE PTR es:[edi],dx
  413826:	out    dx,al
  413827:	in     eax,dx
  413828:	push   es
  413829:	cwde   
  41382a:	clc    
  41382b:	mov    DWORD PTR [ebx-0x68],ebx
  41382e:	clc    
  41382f:	jne    0x4137c7
  413831:	or     al,0x41
  413833:	ins    DWORD PTR es:[edi],dx
  413834:	dec    edi
  413835:	div    DWORD PTR fs:0x46abef
  41383c:	push   es
  41383d:	xor    edi,ebx
  41383f:	inc    DWORD PTR [ecx]
  413841:	cdq    
  413842:	jb     0x41384c
  413844:	jbe    0x4137e7
  413846:	push   0x41
  413848:	dec    esi
  413849:	or     al,0x6
  41384b:	add    BYTE PTR [esi-0x1c],bl
  41384e:	fistp  QWORD PTR [ebx-0x769be]
  413854:	retf   
  413855:	xchg   edi,eax
  413856:	clc    
  413857:	jne    0x41389f
  413859:	mov    edi,?
  41385b:	sub    BYTE PTR [ecx-0x6a],dl
  41385e:	into   
  41385f:	ret    0xc5f7
  413862:	add    edx,DWORD PTR [ebp+0x6c]
  413865:	push   ss
  413866:	xchg   bl,al
  413868:	sbb    esi,DWORD PTR [edx]
  41386a:	add    al,BYTE PTR [eax]
  41386c:	and    BYTE PTR [eax-0x56],bl
  41386f:	leave  
  413870:	call   0x3ab5:0x8aff028a
  413877:	je     0x413868
  413879:	icebp  
  41387a:	iret   
  41387b:	push   ebx
  41387c:	lock clc 
  41387e:	stos   BYTE PTR es:[edi],al
	...
  41388b:	add    bh,dh
  41388d:	loopne 0x413907
  41388f:	addr16 leave 
  413891:	(bad)  
  413892:	(bad)  
  413893:	(bad)  
  413894:	(bad)  
  413896:	pop    es
  413897:	dec    DWORD PTR [edx-0x2e]
  41389a:	sub    edi,DWORD PTR [edi]
  41389c:	and    edx,DWORD PTR [ecx+0x39]
  41389f:	dec    BYTE PTR [edx-0x4a]
  4138a2:	sub    esp,DWORD PTR [ebp+0xa394107]
  4138a8:	mov    bh,0xad
  4138aa:	lock mov BYTE PTR [edx],dh
  4138ad:	cs stos BYTE PTR es:[edi],al
  4138af:	jmp    DWORD PTR [eax-0x52988768]
  4138b5:	scas   al,BYTE PTR es:[edi]
  4138b6:	(bad)  
  4138b7:	call   DWORD PTR [ecx+0x2fe380e]
  4138bd:	ret    0x1b2b
  4138c0:	sub    ecx,DWORD PTR [ecx-0x360998c7]
  4138c6:	sub    bh,BYTE PTR [ebp+0x40a78fdf]
  4138cc:	div    DWORD PTR [eax-0x51]
  4138cf:	sti    
  4138d0:	pusha  
  4138d1:	out    dx,al
  4138d2:	or     ebp,eax
  4138d4:	lock cmc 
  4138d6:	cmp    bh,dh
  4138d8:	push   eax
  4138d9:	dec    esi
  4138da:	aaa    
  4138db:	out    0xfa,eax
  4138dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4138de:	cmp    bh,dh
  4138e0:	mov    ecx,DWORD PTR cs:[edx]
  4138e3:	add    BYTE PTR [edx+0x752f7462],ah
  4138e9:	sahf   
  4138ea:	mov    eax,ds:0x23f28a9
  4138ef:	scas   al,BYTE PTR es:[edi]
	...
  4138fc:	mov    bh,0x62
  4138fe:	inc    ebp
  4138ff:	aaa    
  413900:	mov    esp,DWORD PTR [ecx]
  413902:	in     eax,dx
  413903:	cmp    al,0x8b
  413905:	data16 aad 0x4
  413908:	(bad)  
  41390a:	mov    al,0x8
  41390c:	aaa    
  41390d:	dec    esi
  41390e:	iret   
  41390f:	mov    dh,BYTE PTR [ebx-0x13495f2a]
  413915:	(bad)  
  413916:	adc    cl,BYTE PTR [edi+ebx*8]
  413919:	ss nop
  41391b:	cmp    al,0xe1
  41391d:	(bad)  
  41391e:	adc    al,BYTE PTR [eax-0x30]
  413921:	mov    al,0xd3
  413923:	cmp    al,0xd1
  413925:	dec    ecx
  413926:	in     eax,dx
  413927:	stos   DWORD PTR es:[edi],eax
  413928:	or     DWORD PTR [ebp+0x2e],eax
  41392b:	add    al,0x4f
  41392d:	sar    dl,1
  41392f:	ret    0xd5b8
  413932:	fimul  DWORD PTR [edi]
  413934:	lahf   
  413935:	mov    esp,0x6aa93d0a
  41393a:	sub    eax,0xa2ec0ab7
  41393f:	aas    
  413940:	cdq    
  413941:	push   eax
  413942:	inc    ecx
  413943:	cmp    al,0xb
  413945:	imul   edx,DWORD PTR [ebp-0xe],0xffffff89
  413949:	(bad)  
  41394a:	xor    BYTE PTR [ebx+ecx*1],bh
  41394d:	xlat   BYTE PTR ds:[ebx]
  41394e:	inc    ebp
  41394f:	fs into 
  413951:	aad    0x20
  413953:	test   eax,0xadbd3e70
  413958:	mov    bh,0x62
  41395a:	test   DWORD PTR [eax],ecx
  41395c:	shl    DWORD PTR [ebx],1
  41395e:	in     eax,dx
  41395f:	cmp    al,0x0
	...
  413969:	add    BYTE PTR [eax],al
  41396b:	add    bl,ah
  41396d:	adc    ax,0x2368
  413971:	(bad)  
  413972:	clc    
  413973:	pop    es
  413974:	aaa    
  413975:	dec    edi
  413976:	push   es
  413977:	fild   QWORD PTR [ebp+0x1f]
  41397a:	cli    
  41397b:	out    dx,al
  41397c:	sbb    dl,0xf7
  41397f:	pop    esp
  413980:	add    ecx,ebx
  413982:	add    ebx,esi
  413984:	in     al,dx
  413985:	aam    0xf7
  413987:	pop    esp
  413988:	fistp  QWORD PTR [ebp-0x2b23fc83]
  41398e:	mov    DWORD PTR [edi+eax*8],ebp
  413991:	and    eax,0x235d336e
  413996:	push   es
  413997:	inc    ecx
  413998:	lock inc esp
  41399a:	inc    ebp
  41399b:	jmp    0x914b885d
  4139a0:	mov    al,0x86
  4139a2:	neg    DWORD PTR [esi+0x1072a2f8]
  4139a8:	jb     0x4139c8
  4139aa:	(bad)  
  4139ab:	push   0xffffff9e
  4139ad:	rol    DWORD PTR [edx],1
  4139af:	cld    
  4139b0:	pushf  
  4139b1:	call   0xd5b9baf7
  4139b6:	cmp    bl,cl
  4139b8:	aad    0xd5
  4139ba:	div    edi
  4139bc:	neg    DWORD PTR [edx]
  4139be:	pop    ss
  4139bf:	push   cs
  4139c0:	sti    
  4139c1:	bound  ecx,QWORD PTR [ebp+0x4ac8e4a4]
  4139c7:	push   esi
  4139c8:	lds    bp,DWORD PTR [esi-0x4f]
  4139cc:	dec    esi
  4139cd:	and    al,BYTE PTR [esi]
  4139cf:	je     0x4139d1
	...
  4139d9:	add    BYTE PTR [eax],al
  4139db:	add    BYTE PTR [esi-0x45aea963],dh
  4139e1:	outs   dx,DWORD PTR ds:[esi]
  4139e2:	push   es
  4139e3:	jmp    0x5c4bdb61
  4139e8:	mov    dh,0xa1
  4139ea:	push   esi
  4139eb:	je     0x413a23
  4139ed:	popf   
  4139ee:	push   esi
  4139ef:	xchg   ecx,eax
  4139f0:	stc    
  4139f1:	inc    esp
  4139f2:	inc    ebp
  4139f3:	jmp    0x14b8915
  4139f8:	dec    esp
  4139f9:	xchg   bh,dh
  4139fb:	add    cl,bh
  4139fd:	gs (bad) 
  4139ff:	je     0x413a2b
  413a01:	out    0x42,al
  413a03:	cld    
  413a04:	int    0x1b
  413a06:	les    eax,FWORD PTR [ebx]
  413a08:	shl    BYTE PTR [edi+esi*8+0x75],0x1a
  413a0d:	cwde   
  413a0e:	jb     0x413a18
  413a10:	inc    esi
  413a11:	fdivp  st(1),st
  413a13:	dec    DWORD PTR [ecx-0x68]
  413a16:	jb     0x413a14
  413a18:	ss nop
  413a1a:	cs (bad) 
  413a1c:	cmp    DWORD PTR [eax+0x1a9df04a],ebx
  413a22:	call   0xf889fd27
  413a27:	jne    0x413a6f
  413a29:	mov    ecx,esp
  413a2b:	sub    DWORD PTR [ecx-0x193d3167],ebx
  413a31:	pusha  
  413a32:	push   ecx
  413a33:	mov    edi,DWORD PTR [edx-0x23]
  413a36:	ret    
  413a37:	cld    
  413a38:	hlt    
  413a39:	pop    esi
  413a3a:	ins    BYTE PTR es:[edi],dx
  413a3b:	pop    ebp
  413a3c:	jns    0x413a51
  413a3e:	add    al,ch
	...
  413a4c:	mov    cl,0xf8
  413a4f:	call   DWORD PTR [edi-0x5d]
  413a52:	sti    
  413a53:	push   0xbee760ce
  413a58:	(bad)  
  413a59:	es push 0x41
  413a5c:	sahf   
  413a5d:	or     dh,ah
  413a5f:	ins    DWORD PTR es:[edi],dx
  413a60:	dec    edi
  413a61:	pusha  
  413a62:	div    DWORD PTR [ebp-0x6a]
  413a65:	mov    ah,dh
  413a67:	push   edx
  413a68:	cmp    DWORD PTR [ecx-0x7661fea1],ebx
  413a6e:	mov    ecx,0x470ae068
  413a73:	add    BYTE PTR [esi+0x5e416a7e],dh
  413a79:	cdq    
  413a7a:	jb     0x413a84
  413a7c:	push   es
  413a7d:	sub    al,0x55
  413a7f:	push   edi
  413a81:	ins    BYTE PTR es:[edi],dx
  413a82:	stos   DWORD PTR es:[edi],eax
  413a83:	call   FWORD PTR [eax-0x2b]
  413a86:	jle    0x413aef
  413a88:	cmp    eax,0xd0ffc2ef
  413a8d:	jo     0x413a3d
  413a8f:	inc    eax
  413a90:	test   esp,0x7f4f07a7
  413a96:	sar    esi,1
  413a98:	xor    BYTE PTR [edx],dh
  413a9a:	add    eax,DWORD PTR [eax]
  413a9c:	sbb    ah,dh
  413a9e:	stos   BYTE PTR es:[edi],al
  413a9f:	aad    0x92
  413aa1:	mov    al,BYTE PTR [edx]
  413aa3:	push   0xffc3970c
  413aa8:	adc    DWORD PTR [edi+0x7859e80a],edx
  413aae:	cmp    eax,0xfe
	...
  413abb:	add    BYTE PTR [eax],al
  413abd:	xlat   BYTE PTR ds:[ebx]
  413abe:	and    al,0x47
  413ac0:	mov    dh,0xc9
  413ac2:	ds je  0x413ac4
  413ac5:	icebp  
  413ac6:	fdivr  st,st(5)
  413ac8:	call   0xf742e5c1
  413acd:	leave  
  413ace:	cmp    esi,0x62
  413ad1:	ret    0x4c2b
  413ad4:	rcr    esp,1
  413ad6:	cmp    eax,0x3d5642fe
  413adb:	je     0x413acc
  413add:	loope  0x413b2a
  413adf:	and    eax,0xc14b44b8
  413ae4:	sti    
  413ae5:	leave  
  413ae6:	enter  0x9b8a,0x48
  413aea:	inc    esi
  413aeb:	sti    
  413aec:	mov    al,ds:0x22ff07b6
  413af1:	fisubr DWORD PTR [ebx]
  413af3:	xchg   edi,eax
  413af4:	into   
  413af5:	sbb    al,0x3d
  413af7:	or     dh,BYTE PTR [edi+0x3a88f50d]
  413afd:	mov    ?,WORD PTR ds:0xa784df74
  413b03:	pop    es
  413b04:	pop    edi
  413b05:	bound  edi,QWORD PTR [edx]
  413b07:	fild   QWORD PTR [ecx-0x2d]
  413b0a:	sbb    BYTE PTR [edi+0xb9ad3ec],ch
  413b10:	dec    edi
  413b11:	xchg   BYTE PTR [edi+0x7ad35138],bh
  413b17:	aaa    
  413b18:	dec    ecx
  413b19:	dec    ebp
  413b1a:	cmc    
  413b1b:	sub    edx,DWORD PTR [edi]
  413b1d:	jge    0x413b0f
  413b1f:	cmp    BYTE PTR [eax],al
	...
  413b29:	add    BYTE PTR [eax],al
  413b2b:	add    BYTE PTR [ecx],bh
  413b2d:	dec    ebp
  413b2e:	jmp    0xe0cb355e
  413b33:	cmp    BYTE PTR [eax+0x61],ah
  413b36:	in     eax,dx
  413b37:	add    esi,edi
  413b39:	test   eax,0x2df70fab
  413b3e:	fs daa 
  413b40:	jne    0x413ae0
  413b42:	(bad)
  413b45:	das    
  413b46:	adc    al,0x5d
  413b48:	inc    ecx
  413b49:	inc    edx
  413b4a:	aas    
  413b4b:	ret    
  413b4c:	clc    
  413b4d:	in     eax,0x22
  413b4f:	cmp    BYTE PTR [eax+0x3a],al
  413b52:	mov    al,ds:0x12d1f8ae
  413b57:	or     bh,cl
  413b59:	fadd   st,st(4)
  413b5b:	cmp    cl,bl
  413b5d:	pop    esi
  413b5e:	lods   eax,DWORD PTR ds:[esi]
  413b5f:	scas   eax,DWORD PTR es:[edi]
  413b60:	out    dx,al
  413b61:	xor    dl,BYTE PTR ds:0x37c1f704
  413b67:	cmp    BYTE PTR [ebx-0x31],cl
  413b6a:	sbb    eax,0xe558b9d1
  413b6f:	sub    esi,DWORD PTR [ecx]
  413b71:	shl    BYTE PTR [eax+0x38],cl
  413b74:	std    
  413b75:	stos   BYTE PTR es:[edi],al
  413b76:	push   ebp
  413b77:	js     0x413b51
  413b79:	rcl    DWORD PTR [eax+0x37],1
  413b7c:	in     eax,0xa2
  413b7e:	xchg   esi,eax
  413b7f:	cmp    BYTE PTR [ecx+0x5a3540d2],dl
  413b85:	mov    esp,eax
  413b87:	scas   al,BYTE PTR es:[edi]
  413b88:	mov    ah,0x12
  413b8a:	pop    es
  413b8b:	mov    edx,0x5c06234f
	...
  413b9c:	mov    cl,0xce
  413b9e:	push   esi
  413b9f:	mov    esi,0x1e16572f
  413ba4:	xchg   ecx,eax
  413ba5:	pop    esi
  413ba6:	out    dx,al
  413ba7:	pop    ebp
  413ba8:	dec    ebx
  413ba9:	shl    edi,1
  413bab:	loop   0x413b61
  413bad:	push   ebp
  413bae:	ss cdq 
  413bb0:	jge    0x413bd9
  413bb2:	(bad)  
  413bb3:	xchg   ecx,eax
  413bb4:	sti    
  413bb5:	(bad)  
  413bb6:	out    0x37,eax
  413bb8:	call   DWORD PTR [esi+0xe]
  413bbb:	add    DWORD PTR [edi+eax*4],ebp
  413bbe:	mul    esi
  413bc0:	cmp    cl,dl
  413bc2:	jno    0x413bb5
  413bc4:	int3   
  413bc5:	repnz and esi,edx
  413bc8:	loopne 0x413b9a
  413bca:	jno    0x413b99
  413bcc:	enter  0xfe56,0xc6
  413bd0:	inc    esi
  413bd1:	push   0xffffffee
  413bd3:	push   ss
  413bd4:	push   ss
  413bd5:	shl    edi,1
  413bd7:	ror    DWORD PTR [edx+ecx*4-0x9],0xae
  413bdc:	je     0x413b7a
  413bde:	add    eax,0xbe11e4a5
  413be3:	sahf   
  413be4:	sub    cl,dl
  413be6:	neg    DWORD PTR [ebx+0x13ff9a51]
  413bec:	pop    ecx
  413bed:	adc    esp,eax
  413bef:	push   ss
  413bf0:	mov    dl,0xd1
  413bf2:	mov    ah,BYTE PTR [edi+edi*8]
  413bf5:	and    DWORD PTR [edi+0x76],ecx
  413bf8:	xchg   BYTE PTR [ecx-0x9],ah
  413bfb:	hlt    
  413bfc:	clc    
  413bfd:	mov    edx,0x1259
	...
  413c0a:	add    BYTE PTR [eax],al
  413c0c:	loopne 0x413bde
  413c0e:	or     ebp,DWORD PTR [ecx]
  413c10:	sub    edx,DWORD PTR [bp+0x62]
  413c14:	jecxz  0x413bfa
  413c16:	jns    0x413c65
  413c18:	cli    
  413c19:	pop    eax
  413c1a:	dec    edx
  413c1b:	add    BYTE PTR [esi],bl
  413c1d:	fld    DWORD PTR [esi]
  413c1f:	jne    0x413bb5
  413c21:	psubw  mm1,QWORD PTR [ebp-0x3e]
  413c25:	inc    BYTE PTR [esi]
  413c27:	add    BYTE PTR [ecx],dh
  413c29:	pop    ecx
  413c2a:	clc    
  413c2b:	jne    0x413c3f
  413c2d:	mov    eax,ds:0x5d8bff50
  413c32:	out    dx,al
  413c33:	(bad)  
  413c34:	add    BYTE PTR [edx+0x7e060bf8],bl
  413c3a:	sub    al,BYTE PTR [eax+0x28716330]
  413c40:	cwde   
  413c41:	cwde   
  413c42:	dec    edx
  413c43:	cld    
  413c44:	je     0x413cab
  413c46:	mov    DWORD PTR [ebp+0x22],eax
  413c49:	mov    ch,0x51
  413c4b:	call   0x39f2ef
  413c50:	and    eax,0xb6147325
  413c55:	fs push es
  413c57:	out    dx,eax
  413c58:	sbb    BYTE PTR [eax-0x5e17038e],0xf8
  413c5f:	jne    0x413c67
  413c61:	jge    0x413c03
  413c63:	inc    BYTE PTR [ecx-0x68]
  413c66:	or     al,0xd8
  413c68:	mov    dh,0x71
  413c6a:	and    bh,bh
  413c6c:	xchg   ecx,eax
  413c6d:	cwde   
  413c6e:	xor    al,0xc0
	...
  413c7c:	push   edi
  413c7d:	cdq    
  413c7e:	clc    
  413c7f:	inc    DWORD PTR [ecx-0x26c7566e]
  413c85:	adc    eax,DWORD PTR [edi+edi*4+0x4707ea]
  413c8c:	push   ebx
  413c8d:	mov    ds:0x97d950fb,eax
  413c92:	jb     0x413ca4
  413c94:	and    DWORD PTR [ebx],edx
  413c96:	or     al,0xe8
  413c98:	xor    bh,BYTE PTR [edx+0x24a5fff8]
  413c9e:	jae    0x413cd0
  413ca0:	test   DWORD PTR [ecx],0xa28f448b
  413ca6:	idiv   edi
  413ca8:	cdq    
  413ca9:	call   0x3230b0de
  413cae:	mov    ds:0xc8997823,eax
  413cb3:	(bad)  
  413cb4:	jmp    0x3089:0x13b82bc1
  413cbb:	(bad)  
  413cbc:	jmp    0xb679:0x5f74306d
  413cc3:	pop    es
  413cc4:	pop    edi
  413cc5:	loope  0x413c9e
  413cc7:	dec    BYTE PTR [eax+0x72]
  413cca:	xchg   esp,eax
  413ccb:	es inc eax
  413ccd:	rol    DWORD PTR [ebp-0xa2a0936],1
  413cd3:	mov    edi,0xfe31c16e
  413cd8:	sub    BYTE PTR [eax+eiz*2+0x6036f837],ch
  413cdf:	or     al,BYTE PTR [eax]
	...
  413ce9:	add    BYTE PTR [eax],al
  413ceb:	add    BYTE PTR [esi+ebp*1],bh
  413cee:	jmp    DWORD PTR [edi-0x19]
  413cf1:	mov    ecx,0x8f08bd22
  413cf6:	or     ch,al
  413cf8:	aad    0x65
  413cfa:	xor    esi,edi
  413cfc:	ins    BYTE PTR es:[edi],dx
  413cfd:	std    
  413cfe:	fstp   QWORD PTR [ebp+0x50]
  413d01:	add    eax,DWORD PTR [ebp+0xf]
  413d04:	test   DWORD PTR [esi+0x576eb8d],0xf8d8f633
  413d0e:	jg     0x413d54
  413d10:	ror    DWORD PTR [ecx-0x17188bcf],cl
  413d16:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413d17:	or     ecx,edi
  413d19:	cmp    edx,DWORD PTR ds:0x43c4f700
  413d1f:	je     0x413d51
  413d21:	or     DWORD PTR [eax-0x129d0809],edi
  413d27:	add    esi,edi
  413d29:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413d2a:	mov    ds:0xed67992f,al
  413d2f:	add    ebx,DWORD PTR ds:0x1d03c363
  413d35:	arpl   bx,dx
  413d37:	add    esi,DWORD PTR [edx+0x25]
  413d3a:	xor    esp,edx
  413d3c:	imul   esp,ebp,0x39
  413d3f:	sub    eax,0x349dcf71
  413d44:	jecxz  0x413d10
  413d46:	and    BYTE PTR [edi+0x10c5ba5c],ch
  413d4c:	mul    DWORD PTR [edx-0x1c]
  413d4f:	inc    ebx
	...
  413d5c:	les    esp,FWORD PTR [esp+eax*1-0x41]
  413d60:	ror    BYTE PTR ds:0xd040c2b6,1
  413d66:	jb     0x413d7b
  413d68:	dec    edi
  413d69:	inc    bl
  413d6b:	xor    al,0x31
  413d6d:	fistp  DWORD PTR ds:0xd8d67387
  413d73:	xor    al,0x21
  413d75:	xor    bh,BYTE PTR [ebx]
  413d77:	sub    al,0x27
  413d79:	jl     0x413d4b
  413d7b:	xor    al,0x7f
  413d7d:	in     eax,0xdd
  413d7f:	sub    al,0x9
  413d81:	iret   
  413d82:	push   ebx
  413d83:	add    al,0x0
  413d85:	adc    eax,0xcef92cbe
  413d8a:	mov    al,0xae
  413d8c:	cld    
  413d8d:	int    0x32
  413d8f:	or     al,0xdf
  413d91:	mov    ebx,0xcee134a2
  413d96:	push   edx
  413d97:	xor    esp,ecx
  413d99:	into   
  413d9a:	nop
  413d9b:	sub    ebp,DWORD PTR [esi-0x36cb777b]
  413da1:	sub    BYTE PTR [ebp-0xd318fd8],al
  413da7:	aaa    
  413da8:	ror    ah,1
  413daa:	push   es
  413dab:	fcomi  st,st(4)
  413dad:	(bad)  
  413dae:	int    0xab
  413db0:	lock bound edx,QWORD PTR [ecx+0x72]
  413db4:	fsub   st,st(2)
  413db6:	ret    0xcb59
  413db9:	int3   
  413dba:	mul    DWORD PTR [ecx+edx*2-0x36]
  413dbe:	push   esi
  413dbf:	dec    esi
	...
  413dcc:	pop    ecx
  413dcd:	pop    esi
  413dce:	idiv   DWORD PTR [eax+edi*8-0xb241c46]
  413dd5:	bound  ecx,QWORD PTR [ebx]
  413dd7:	sub    ebx,edi
  413dd9:	out    0x80,eax
  413ddb:	jmp    0xad00a0d4
  413de0:	sbb    al,0xce
  413de2:	imul   ecx
  413de4:	hlt    
  413de5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413de6:	inc    ecx
  413de7:	sbb    eax,0xe906650b
  413dec:	sahf   
  413ded:	into   
  413dee:	ins    DWORD PTR es:[edi],dx
  413def:	jmp    0xe9af0c82
  413df4:	jno    0x413e1d
  413df6:	repnz cdq 
  413df8:	jns    0x413de1
  413dfa:	repnz mul ah
  413dfd:	int3   
  413dfe:	push   esi
  413dff:	out    0x5e,al
  413e01:	(bad)  
  413e02:	not    DWORD PTR [edi+eiz*8-0x3b]
  413e06:	mov    cl,0xfb
  413e08:	hlt    
  413e09:	bound  ecx,QWORD PTR [ebx]
  413e0b:	test   eax,0x35eb644f
  413e10:	arpl   WORD PTR [edi],cx
  413e12:	dec    edi
  413e13:	sub    bl,dh
  413e15:	int    0x71
  413e17:	(bad)  [ebx+ebx*2]
  413e1a:	sub    al,0xae
  413e1c:	and    al,0xd9
  413e1e:	(bad)  
  413e1f:	je     0x413e8f
  413e21:	shr    edi,1
  413e23:	sahf   
  413e24:	and    al,0x1e
  413e26:	push   esp
  413e27:	xor    DWORD PTR [ebp+0x48ef77b],0x1257
	...
  413e39:	add    BYTE PTR [eax],al
  413e3b:	add    dh,bl
  413e3d:	outs   dx,BYTE PTR ds:[esi]
  413e3e:	inc    edx
  413e3f:	sub    bh,BYTE PTR [ecx]
  413e41:	xchg   edx,eax
  413e42:	mov    es,WORD PTR [ebp-0x775d2]
  413e48:	sbb    DWORD PTR [edi+eiz*8-0x9],ecx
  413e4c:	sbb    DWORD PTR [edx-0x6f758a08],edx
  413e52:	jb     0x413e5c
  413e54:	ss ss stc 
  413e57:	(bad)  
  413e58:	cmp    DWORD PTR [edx-0x6e3e0f4e],edx
  413e5e:	clc    
  413e5f:	call   0x39f9e2
  413e64:	sub    DWORD PTR [edi+ebp*8+0x7291d7eb],ebx
  413e6b:	cld    
  413e6c:	push   es
  413e6d:	mov    ds:0x8e4e0015,al
  413e72:	lds    edx,FWORD PTR [eax]
  413e74:	pop    esi
  413e75:	stos   BYTE PTR es:[edi],al
  413e76:	mov    esp,gs
  413e78:	fstp   QWORD PTR [edx]
  413e7a:	xchg   ebx,eax
  413e7b:	push   edi
  413e7c:	stc    
  413e7d:	or     ecx,DWORD PTR [eax+ebp*8]
  413e80:	outs   dx,DWORD PTR ds:[esi]
  413e81:	retf   
  413e82:	clc    
  413e83:	call   DWORD PTR ds:0x79057221
  413e89:	mov    es,ebp
  413e8b:	sbb    al,0xe
  413e8d:	dec    esi
  413e8e:	inc    edx
  413e8f:	xchg   esp,eax
  413e90:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413e91:	adc    bl,BYTE PTR [edi+ecx*1]
  413e94:	jo     0x413e2e
  413e96:	or     BYTE PTR [eax+0x29],dl
  413e99:	dec    ebx
  413e9a:	inc    eax
  413e9b:	push   cs
  413e9c:	fisub  WORD PTR [ecx-0x50]
  413e9f:	inc    edi
	...
  413eac:	or     esi,DWORD PTR [ecx+0x6321b608]
  413eb2:	push   esi
  413eb3:	punpcklbw mm3,DWORD PTR [ecx+0x4ae9500c]
  413eba:	inc    eax
  413ebb:	or     bl,BYTE PTR [esi]
  413ebd:	pusha  
  413ebe:	mov    al,0x47
  413ec0:	test   edx,0x85810ed3
  413ec6:	cli    
  413ec7:	dec    edi
  413ec8:	lock mov esp,cs
  413ecb:	add    eax,0x467cbd27
  413ed0:	sti    
  413ed1:	imul   esi,DWORD PTR [ebx],0xb2531f36
  413ed7:	inc    eax
  413ed8:	not    DWORD PTR [esi-0x32]
  413edb:	fwait
  413edc:	inc    edi
  413edd:	xor    cl,BYTE PTR [edx+0x10]
  413ee0:	idiv   DWORD PTR [ecx+0x38c3c380]
  413ee6:	mov    dh,0x1f
  413ee8:	test   DWORD PTR ds:0xb602febb,0x22077434
  413ef2:	push   es
  413ef3:	ss push 0xebbff87d
  413ef9:	out    dx,eax
  413efa:	jp     0x413f40
  413efc:	jg     0x413f6b
  413efe:	mov    esi,0xbef5007
  413f03:	call   0xfe75d6c5
  413f08:	inc    eax
  413f09:	dec    edi
  413f0a:	(bad)  
  413f0b:	inc    dl
  413f0d:	rcr    DWORD PTR [ebx],0xa0
	...
  413f1c:	aad    0xd4
  413f1e:	xor    eax,0xd31db28c
  413f23:	(bad)  
  413f24:	stos   BYTE PTR es:[edi],al
  413f25:	popa   
  413f26:	sbb    dl,BYTE PTR [ebp+edx*8-0x7501ca54]
  413f2d:	push   ecx
  413f2e:	xor    eax,0x78a1ef74
  413f33:	and    DWORD PTR [eax],eax
  413f35:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413f36:	xor    eax,0xa5b25f74
  413f3b:	and    al,0xf0
  413f3d:	adc    al,0x1a
  413f3f:	das    
  413f40:	call   0x6b4039db
  413f45:	arpl   WORD PTR ds:0x9881051c,ax
  413f4b:	xor    ecx,edx
  413f4d:	push   ebp
  413f4e:	jns    0x413f81
  413f50:	inc    ebx
  413f51:	imul   eax,DWORD PTR [ebp-0x7f33e962],0x7f
  413f58:	xor    ebp,edi
  413f5a:	sbb    eax,0x856b2b31
  413f5f:	rcl    dh,cl
  413f61:	retf   
  413f62:	push   0x60772b31
  413f67:	mov    bh,0xe8
  413f69:	retf   
  413f6a:	ror    BYTE PTR [ebx],cl
  413f6c:	lahf   
  413f6d:	xchg   BYTE PTR [ebx],cl
  413f6f:	xor    DWORD PTR [ecx-0x67682d35],ecx
  413f75:	xchg   ebp,eax
  413f76:	or     dh,BYTE PTR [ecx]
  413f78:	jns    0x413fa5
  413f7a:	ss inc esi
  413f7c:	or     al,0x63
  413f7e:	call   0x0:0x7c
  413f85:	add    BYTE PTR [eax],al
  413f87:	add    BYTE PTR [eax],al
  413f89:	add    BYTE PTR [eax],al
  413f8b:	add    BYTE PTR [ecx+eiz*8+0x21],bl
  413f8f:	sub    BYTE PTR [ebp-0x35],ah
  413f92:	and    BYTE PTR [ecx],dh
  413f94:	jecxz  0x414000
  413f96:	push   0xffffff87
  413f98:	push   eax
  413f99:	(bad)  
  413f9a:	adc    BYTE PTR [ecx],dh
  413f9c:	mov    eax,0x58fb92cb
  413fa1:	sub    dl,BYTE PTR [edx+0x31]
  413fa4:	cmp    ebx,ecx
  413fa6:	jb     0x413fb3
  413fa8:	and    ch,0xed
  413fab:	sub    ebp,DWORD PTR [ecx]
  413fad:	retf   
  413fae:	popf   
  413faf:	xor    BYTE PTR [ebx-0xf491fa2],ch
  413fb5:	mov    edx,0xcb115e67
  413fba:	inc    ebx
  413fbb:	add    al,0x9d
  413fbd:	bound  eax,QWORD PTR [ebp+0x31]
  413fc0:	cmc    
  413fc1:	(bad)  
  413fc2:	in     eax,dx
  413fc3:	jle    0x414038
  413fc5:	bound  esi,QWORD PTR [ecx+0x633f130]
  413fcb:	inc    ebx
  413fcc:	es leave 
  413fce:	jno    0x413fa9
  413fd0:	or     dl,0x6d
  413fd3:	jmp    0xe957bbd4
  413fd8:	hlt    
  413fd9:	mov    eax,ds:0xc9039981
  413fde:	idiv   ecx
  413fe0:	hlt    
  413fe1:	bound  eax,QWORD PTR [esi]
  413fe3:	scas   al,BYTE PTR es:[edi]
  413fe4:	jno    0x413fbc
  413fe6:	repz jle 0x413fd0
  413fe9:	arpl   WORD PTR [esi],ax
  413feb:	jmp    0x71c2e1e4
	...
  413ffc:	jmp    0x413fc6
  413ffe:	imul   ecx
  414000:	hlt    
  414001:	bound  eax,QWORD PTR [esi]
  414003:	es jns 0x413fd4
  414006:	repz push esi
  414008:	(bad)  
  414009:	leave  
  41400a:	imul   ecx
  41400c:	hlt    
  41400d:	fst    QWORD PTR [ecx-0x1f]
  414010:	sti    
  414011:	jae    0x41407f
  414013:	jmp    0x3b381f09
  414018:	daa    
  414019:	leave  
  41401a:	push   esi
  41401b:	pop    esp
  41401c:	jns    0x413fdc
  41401e:	repz es daa 
  414021:	sbb    cl,BYTE PTR [ecx-0x82b139c]
  414027:	push   ss
  414028:	and    al,0xc9
  41402a:	jno    0x414025
  41402c:	pop    es
  41402d:	dec    edi
  41402e:	or     al,BYTE PTR [esi]
  414030:	and    DWORD PTR [edx+0x6c],0x1e4ee7e9
  414037:	test   BYTE PTR [ebx+0x26],0x83
  41403b:	sub    al,0xfc
  41403d:	aam    0xf7
  41403f:	out    0xf3,al
  414041:	pop    ecx
  414042:	adc    ah,0xfb
  414045:	bound  eax,QWORD PTR [esi]
  414047:	push   0xffffff86
  414049:	mov    ebp,0xc9d0cef3
  41404e:	or     BYTE PTR [eax],al
  414050:	mov    ah,BYTE PTR [esi-0x9]
  414053:	(bad)  
  414054:	fsubp  st(5),st
  414056:	nop
  414057:	jno    0x414078
  414059:	pop    edi
  41405a:	mov    DWORD PTR [ebp-0x78632],eax
	...
  41406c:	push   ds
  41406d:	fisttp QWORD PTR [bx]
  414070:	fisub  WORD PTR [ebp-0x7f]
  414073:	shr    dl,0x57
  414076:	outs   dx,BYTE PTR ds:[esi]
  414077:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414078:	fistp  WORD PTR [edi+0x5f4b8cf7]
  41407e:	cli    
  41407f:	push   DWORD PTR [ecx]
  414081:	scas   eax,DWORD PTR es:[edi]
  414082:	ffreep st(5)
  414084:	xchg   ecx,eax
  414085:	gs push es
  414087:	test   DWORD PTR [esi-0x37],ecx
  41408a:	sub    BYTE PTR [edi-0x38f99a72],0x1b
  414091:	jnp    0x414087
  414093:	jmp    DWORD PTR [ecx]
  414095:	pop    esp
  414096:	push   es
  414097:	out    dx,eax
  414098:	jo     0x414080
  41409a:	mov    ch,0x71
  41409c:	dec    edi
  41409d:	mov    DWORD PTR gs:[ebp-0x782a2],eax
  4140a4:	mov    gs,WORD PTR [ebp-0x5b]
  4140a7:	cmovle esp,DWORD PTR [ebp-0x7f]
  4140ab:	sar    BYTE PTR [edx-0x49],0xc0
  4140af:	test   edx,edi
  4140b1:	xchg   ebp,eax
  4140b2:	clc    
  4140b3:	call   FWORD PTR [eax+0x65]
  4140b6:	out    0xbe,eax
  4140b8:	jbe    0x414043
  4140ba:	jbe    0x4140fd
  4140bc:	dec    esi
  4140bd:	loop   0x414041
  4140bf:	add    dh,dh
  4140c1:	jns    0x4140bb
  4140c3:	push   eax
  4140c4:	mul    ch
  4140c6:	or     BYTE PTR [eax],al
  4140c8:	push   cs
  4140c9:	fidiv  DWORD PTR [edi-0x7dde0e8c]
  4140cf:	in     al,0x0
	...
  4140d9:	add    BYTE PTR [eax],al
  4140db:	add    BYTE PTR ds:0xf707f878,ch
  4140e1:	mov    ebx,0x98fbd18
  4140e6:	mov    bl,0x40
  4140e8:	test   DWORD PTR [esi-0x72],0x2909e8ff
  4140ef:	dec    edi
  4140f0:	fist   WORD PTR [esi]
  4140f2:	idiv   edi
  4140f4:	loopne 0x414135
  4140f6:	inc    ebx
  4140f7:	je     0x41413e
  4140f9:	cmp    esi,DWORD PTR [esi-0x1d]
  4140fc:	(bad)  
  4140fd:	jmp    0xe138472a
  414102:	imul   esi,DWORD PTR [ebx+ebx*1+0x64],0xce42ff02
  41410a:	sub    BYTE PTR [ebx+ecx*1+0x49],dh
  41410e:	jle    0x4140f7
  414110:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414111:	push   ecx
  414112:	sub    dh,bh
  414114:	push   0x46
  414116:	xor    al,0xfe
  414118:	cwde   
  414119:	inc    ecx
  41411a:	mov    esi,0x1fef900f
  41411f:	repnz mov BYTE PTR [ecx],dh
  414122:	sbb    ebx,DWORD PTR [edx-0x15d7e67e]
  414128:	aad    0xb3
  41412a:	add    bh,bh
  41412c:	jmp    0x7e91:0x37428b5
  414133:	out    0x64,eax
  414135:	jns    0x41415f
  414137:	(bad)  
  414138:	mov    ds:0x50fe346e,al
  41413d:	imul   edi,DWORD PTR [esi+0xf],0x0
  414147:	add    BYTE PTR [eax],al
  414149:	add    BYTE PTR [eax],al
  41414b:	add    BYTE PTR [eax+0x27],cl
  41414e:	pop    ds
  41414f:	repnz inc eax
  414151:	pop    ecx
  414152:	sbb    esi,DWORD PTR [esi+0x3a]
  414155:	popa   
  414156:	sub    dh,bh
  414158:	push   0x56
  41415a:	xor    al,0xfe
  41415c:	sub    BYTE PTR [edx-0x6c],ah
  41415f:	push   cs
  414160:	idiv   DWORD PTR [ecx+0x6303c13a]
  414166:	in     eax,dx
  414167:	(bad)  
  414168:	jge    0x414121
  41416a:	ins    BYTE PTR es:[edi],dx
  41416b:	dec    eax
  41416c:	or     al,0xe4
  41416e:	adc    dl,BYTE PTR [ecx-0x53]
  414171:	and    ebp,ebp
  414173:	add    eax,DWORD PTR [ebx-0x13385779]
  414179:	(bad)  
  41417a:	in     eax,dx
  41417b:	add    esi,edi
  41417d:	jnp    0x41412c
  41417f:	aam    0x30
  414181:	xor    ebx,DWORD PTR [edx-0x29]
  414184:	fdiv   QWORD PTR [eax+eiz*4]
  414187:	pop    ss
  414188:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414189:	sbb    ebp,DWORD PTR [esi]
  41418b:	add    al,0x72
  41418d:	mov    ds:0x83cc0216,al
  414192:	ins    BYTE PTR es:[edi],dx
  414193:	scas   eax,DWORD PTR es:[edi]
  414194:	mov    esp,0x9c01fa62
  414199:	imul   edx,DWORD PTR ds:0xed22a5b4,0x2c
  4141a0:	sub    eax,edi
  4141a2:	push   0x21baf0b7
  4141a7:	pop    edi
  4141a8:	xchg   ecx,eax
  4141a9:	(bad)  
  4141aa:	je     0x414183
  4141ac:	mov    ebx,ds
  4141ae:	sti    
  4141af:	sub    al,0x0
	...
  4141b9:	add    BYTE PTR [eax],al
  4141bb:	add    BYTE PTR [ebx],cl
  4141bd:	(bad)  
  4141be:	dec    eax
  4141bf:	shl    al,cl
  4141c1:	cdq    
  4141c2:	sub    ecx,DWORD PTR [eax]
  4141c4:	imul   DWORD PTR ds:0x9e752074
  4141ca:	xor    DWORD PTR [edx+0x2c873960],ebx
  4141d0:	jecxz  0x41422c
  4141d2:	adc    eax,0x18c7f0c9
  4141d7:	jnp    0x41418c
  4141d9:	(bad)  
  4141da:	adc    BYTE PTR [edi+0x2d7ebaf8],dh
  4141e0:	cmp    edi,eax
  4141e2:	xchg   ebp,eax
  4141e3:	stc    
  4141e4:	mov    al,ds:0xe32ced21
  4141e9:	rol    DWORD PTR [esi],0xa1
  4141ec:	xor    eax,0x1c74f8c7
  4141f1:	mov    edi,0xc8e3e299
  4141f6:	outs   dx,BYTE PTR ds:[esi]
  4141f7:	repz inc esp
  4141f9:	and    al,BYTE PTR [esi]
  4141fb:	inc    ecx
  4141fc:	nop
  4141fd:	pop    ds
  4141fe:	inc    ebp
  4141ff:	jmp    0xc66230e0
  414204:	and    edx,DWORD PTR [esi]
  414206:	push   esi
  414207:	push   ecx
  414208:	fidiv  DWORD PTR [esi]
  41420a:	inc    ebp
  41420b:	jmp    0x2226d123
  414210:	mov    ah,0xc6
  414212:	clc    
  414213:	sbb    al,0xd3
  414215:	mov    esi,0xc51b9d1e
  41421a:	out    dx,al
  41421b:	mov    ch,0xd6
  41421d:	(bad)
	...
  41422c:	repz cmp al,BYTE PTR [ecx+0x5fc6b5f8]
  414233:	and    BYTE PTR [ebx+eiz*1+0x6],ah
  414237:	add    ebp,esi
  414239:	bound  eax,QWORD PTR [esi]
  41423b:	imul   edi,esp,0xe36621a7
  414241:	pop    eax
  414242:	(bad)  
  414243:	aad    0x94
  414245:	ds mov eax,ebx
  414248:	mov    ch,0xc6
  41424a:	inc    edi
  41424b:	inc    ecx
  41424c:	push   ds
  41424d:	xor    bh,0x46
  414250:	inc    esp
  414251:	push   ss
  414252:	div    esp
  414254:	adc    eax,0x13e9451e
  414259:	dec    edi
  41425a:	push   cs
  41425b:	inc    ecx
  41425c:	dec    ebx
  41425d:	leave  
  41425e:	mul    DWORD PTR [esi]
  414260:	in     al,dx
  414261:	add    esp,DWORD PTR ds:0x4c3e1b1e
  414267:	cdq    
  414268:	xor    eax,0x15d4f8c6
  41426d:	push   ds
  41426e:	inc    ebp
  41426f:	add    BYTE PTR [esi],bl
  414271:	ja     0x4142e5
  414273:	or     BYTE PTR [esi],al
  414275:	mov    edi,0xeb29fffc
  41427a:	mul    DWORD PTR [edi-0x69]
  41427d:	adc    DWORD PTR [edi+0x0],eax
  414280:	sbb    esp,edx
  414282:	out    0x48,al
  414284:	fistp  WORD PTR [esi-0x9]
  414287:	jne    0x41429f
  414289:	push   0xffffffb6
  41428b:	sti    
  41428c:	sub    DWORD PTR [edx+0x6d],edi
	...
  41429b:	add    BYTE PTR [esi+0x7a],al
  41429e:	addr16 inc ecx
  4142a0:	fidivr WORD PTR [eax+0x32]
  4142a3:	loope  0x4142bb
  4142a5:	mov    al,ds:0xc723fef7
  4142aa:	fistp  WORD PTR [ebp+edx*4-0x1c000787]
  4142b1:	jp     0x4142ab
  4142b3:	jne    0x41428b
  4142b5:	imul   ecx,edi,0xce79691f
  4142bb:	ret    0x61a2
  4142be:	push   ecx
  4142bf:	mov    edi,DWORD PTR [edx-0x21]
  4142c2:	ret    
  4142c3:	hlt    
  4142c4:	sub    BYTE PTR [edx-0x8],bh
  4142c7:	push   0xffffff8e
  4142c9:	out    0x58,eax
  4142cb:	push   DWORD PTR [ebx-0x76862037]
  4142d1:	js     0x4142cb
  4142d3:	mov    DWORD PTR [ebx+0x7d],edx
  4142d6:	rol    BYTE PTR ds:0x46fe76,0x5c
  4142dd:	popa   
  4142de:	push   es
  4142df:	add    bl,bl
  4142e1:	jecxz  0x4142d3
  4142e3:	(bad)  
  4142e4:	sub    DWORD PTR [edx+0x47],edi
  4142e7:	push   0x65e52
  4142ec:	out    0x7d,al
  4142ee:	or     al,BYTE PTR [eax]
  4142f0:	pop    esi
  4142f1:	jmp    0xfb38b525
  4142f6:	add    ebp,DWORD PTR [eax+0xb]
  4142f9:	jmp    0x40a1:0x5298ffc2
	...
  41430c:	test   esp,0xfaafe0f6
  414312:	add    edi,edi
  414314:	mov    ds:0x54db1bc3,al
  414319:	mov    esp,0x29cf672c
  41431e:	sar    edi,0x98
  414321:	pop    edi
  414322:	mov    al,0x40
  414324:	mul    DWORD PTR [ebx]
  414326:	jns    0x414388
  414328:	ss mov edx,0xb9f7019b
  41432e:	cmp    esi,0x6a
  414331:	ret    0xbf1b
  414334:	xchg   esp,eax
  414335:	cmc    
  414336:	sub    al,0x8c
  414338:	jp     0x41431f
  41433a:	sub    eax,0x1a8ac8fe
  41433f:	mov    esi,edx
  414341:	mov    ecx,0x21f2c703
  414346:	mov    ds:0x3b8f740,eax
  41434b:	add    bh,dh
  41434d:	ss xchg dh,dh
  414350:	mov    eax,ds:0xf4f2c4d
  414355:	mov    esi,0x31f70002
  41435a:	or     BYTE PTR [edi+esi*8],0xb9
  41435e:	fwait
  41435f:	aaa    
  414360:	add    eax,0xcb6803fb
  414365:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414366:	ret    0xd8ff
  414369:	push   edx
  41436a:	mov    ds:0xf684f740,al
  41436f:	loopne 0x414371
	...
  414379:	add    BYTE PTR [eax],al
  41437b:	add    BYTE PTR [edi-0x1d00fc06],ch
  414381:	rcr    DWORD PTR [ebx],0x7b
  414384:	xchg   esp,eax
  414385:	arpl   WORD PTR [eax],sp
  414387:	sub    dl,al
  414389:	mov    bl,BYTE PTR [ebx-0x3ec3bf3c]
  41438f:	mov    ch,0xb7
  414391:	bound  eax,QWORD PTR [ebp-0x12de6884]
  414397:	fwait
  414398:	mul    BYTE PTR [edx-0x13]
  41439b:	and    DWORD PTR [ecx],0x4e
  41439e:	in     eax,0x1b
  4143a0:	mov    eax,0x8329e8ff
  4143a5:	(bad)  
  4143a7:	sub    cl,BYTE PTR [ecx]
  4143a9:	les    edi,FWORD PTR ds:0xed55cc1c
  4143af:	add    edi,eax
  4143b1:	dec    ebp
  4143b2:	leave  
  4143b3:	sub    DWORD PTR [ebx+0x5b],ebp
  4143b6:	aad    0x33
  4143b8:	or     al,ah
  4143ba:	mov    eax,0xed5eb63b
  4143bf:	into   
  4143c0:	ins    DWORD PTR es:[edi],dx
  4143c1:	mov    dh,0x6c
  4143c3:	inc    eax
  4143c4:	int3   
  4143c5:	sub    edi,DWORD PTR ds:0x901f50cc
  4143cb:	(bad)  
  4143cc:	ror    bl,0x1b
  4143cf:	add    esi,DWORD PTR [ebx+eax*8+0x62acbfa0]
  4143d6:	in     eax,dx
  4143d7:	add    esi,edi
  4143d9:	add    esp,DWORD PTR [ebx]
  4143db:	mov    dh,0x37
  4143dd:	arpl   WORD PTR [eax-0x51],si
	...
  4143ec:	lock shl edx,cl
  4143ef:	ss add eax,0x579fed22
  4143f5:	xchg   edx,eax
  4143f6:	in     eax,dx
  4143f7:	add    esi,edi
  4143f9:	loop   0x4143d0
  4143fb:	add    eax,0x28e54ef7
  414400:	jmp    0x41445c
  414402:	push   ebp
  414403:	jbe    0x414405
  414405:	les    edi,FWORD PTR [eax]
  414407:	sbb    ebp,DWORD PTR [eax-0xb16f99e]
  41440d:	mov    edx,0xc51e03dc
  414412:	neg    DWORD PTR [esp+ecx*2+0xffc8bbb]
  414419:	lds    esp,FWORD PTR [ebx+0x6228220]
  41441f:	test   edi,ebx
  414421:	mov    es,WORD PTR [esi]
  414423:	jmp    0x25cca71c
  414428:	push   edi
  414429:	les    esi,FWORD PTR [ecx]
  41442b:	jmp    0x9447a724
  414430:	and    al,0x3b
  414432:	es loope 0x414469
  414435:	ret    
  414436:	pop    edi
  414437:	rol    bh,0x83
  41443a:	push   es
  41443b:	cmp    DWORD PTR [edi-0x26],edx
  41443e:	and    ecx,ebp
  414440:	hlt    
  414441:	bound  eax,QWORD PTR [esi]
  414443:	(bad)  
  414444:	cdq    
  414445:	push   0xfffffff7
  414447:	(bad)  
  414448:	jne    0x4143cb
  41444a:	cmp    BYTE PTR ds:0xce73c2b3,ch
	...
  41445c:	jnp    0x414418
  41445e:	push   ss
  41445f:	sbb    eax,0x9d41a9cc
  414464:	cmc    
  414465:	bound  eax,QWORD PTR [esi]
  414467:	jmp    0xd5389747
  41446c:	in     eax,dx
  41446d:	xor    al,0x45
  41446f:	jmp    0xfb0abb53
  414474:	mov    ch,0xc2
  414476:	fistp  QWORD PTR [ebp-0x16]
  414479:	shl    edi,0x6a
  41447c:	rcr    BYTE PTR [ecx-0x15],1
  41447f:	scas   al,BYTE PTR es:[edi]
  414480:	mov    ecx,0xb172eaed
  414485:	outs   dx,BYTE PTR ds:[esi]
  414486:	mov    ebp,DWORD PTR [esp+eiz*8-0x101e8b3f]
  41448d:	inc    ecx
  41448e:	mov    esi,0x6665e00
  414493:	call   FWORD PTR [edx+edi*4+0x660a8088]
  41449a:	push   es
  41449b:	add    BYTE PTR [ecx],ah
  41449d:	clc    
  41449e:	pop    es
  41449f:	(bad)  
  4144a0:	ficom  WORD PTR [ecx-0x9]
  4144a3:	dec    DWORD PTR [esi-0x19]
  4144a6:	cmp    cl,ch
  4144a8:	pop    ebp
  4144a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4144aa:	idiv   edi
  4144ac:	mov    dl,BYTE PTR [ebp-0x9]
  4144af:	xor    eax,0x46f6e7
  4144b4:	and    eax,edx
  4144b6:	retf   0x4f73
  4144b9:	data16 out dx,al
  4144bb:	mov    cl,0x24
  4144bd:	mov    edi,eax
  4144bf:	mov    eax,0x0
	...
  4144cc:	push   ds
  4144cd:	pushw  es
  4144cf:	add    bl,al
  4144d1:	and    al,0x23
  4144d3:	add    BYTE PTR [edx-0x21fffdc7],ch
  4144d9:	gs push es
  4144db:	sbb    DWORD PTR [ecx-0x31c07c9e],0xffffffb8
  4144e2:	cmp    BYTE PTR [edi],0xa1
  4144e5:	mov    eax,edi
  4144e7:	mov    ebx,DWORD PTR [ebx]
  4144e9:	mov    ebx,DWORD PTR [eax-0x37]
  4144ec:	pushf  
  4144ed:	bound  eax,QWORD PTR [esi]
  4144ef:	push   ebp
  4144f0:	inc    ebp
  4144f1:	pop    ebx
  4144f2:	test   ah,al
  4144f4:	bound  esi,QWORD PTR [eax-0x709a7b9]
  4144fa:	out    dx,eax
  4144fb:	inc    eax
  4144fc:	sahf   
  4144fd:	lea    esi,[ebp+0x1]
  414500:	dec    ebp
  414501:	mov    DWORD PTR [ecx+ecx*8-0x9d37feb],ecx
  414508:	adc    eax,0xb1fa5f80
  41450d:	ret    
  41450e:	push   es
  41450f:	mov    eax,edi
  414511:	cmp    DWORD PTR [edx-0x4],eax
  414514:	test   DWORD PTR [ecx+edi*1-0x16],0x239450d
  41451c:	xor    DWORD PTR [ecx+edi*1],esi
  41451f:	dec    edi
  414520:	ins    BYTE PTR es:[edi],dx
  414521:	jb     0x41453d
  414523:	(bad)  
  414524:	in     al,dx
  414525:	retf   
  414526:	add    ecx,DWORD PTR [ebx-0x37832cc2]
  41452c:	hlt    
  41452d:	lea    edi,[ebx-0x38]
	...
  41453c:	inc    eax
  41453d:	push   cs
  41453e:	and    BYTE PTR [edx+0x750257ba],al
  414544:	pop    ss
  414545:	adc    DWORD PTR [ebx],edi
  414547:	ret    0x34c2
  41454a:	push   ds
  41454b:	dec    edi
  41454c:	mov    edi,0xb7f789d3
  414551:	retf   
  414552:	sub    esi,DWORD PTR [ecx-0xa]
  414555:	mov    WORD PTR [edi],ds
  414557:	mov    dh,BYTE PTR [edx-0x7440034d]
  41455d:	iret   
  41455e:	sbb    al,0x4
  414560:	stc    
  414561:	ret    0x721
  414564:	aaa    
  414565:	dec    edx
  414566:	jmp    0x414567
  414568:	arpl   WORD PTR [eax],ax
  41456a:	cmp    eax,ecx
  41456c:	sti    
  41456d:	leave  
  41456e:	(bad)  
  41456f:	mov    cl,bl
  414571:	dec    ebp
  414572:	aaa    
  414573:	repz and al,0x5a
  414576:	retf   0xb767
  414579:	add    al,ah
  41457b:	dec    eax
  41457d:	pop    esp
  41457e:	add    ebx,eax
  414580:	mov    eax,0xf7f3c711
  414585:	leave  
  414586:	add    eax,DWORD PTR [eax]
  414588:	fadd   QWORD PTR [edi+edi*2]
  41458b:	inc    esp
  41458c:	mov    ds:0xef741f5a,eax
  414591:	loope  0x4145cb
  414593:	or     dh,bh
  414595:	leave  
  414596:	xchg   BYTE PTR [edi+0x271a630f],bh
  41459c:	or     ebp,DWORD PTR [ebx+0x55]
  41459f:	mov    al,BYTE PTR [eax]
	...
  4145a9:	add    BYTE PTR [eax],al
  4145ab:	add    cl,ah
  4145ad:	mov    edi,0xbabb7c50
  4145b2:	lods   eax,DWORD PTR ds:[esi]
  4145b3:	rcl    DWORD PTR [eax-0x51],cl
  4145b6:	loopne 0x4145de
  4145b8:	popa   
  4145b9:	jmp    0x1b31:0x36592fa2
  4145c0:	jp     0x41462f
  4145c2:	in     eax,dx
  4145c3:	add    edi,esp
  4145c5:	mov    ds:0x36400f99,al
  4145ca:	and    eax,0xbdb6c326
  4145cf:	sbb    ebx,DWORD PTR [eax]
  4145d1:	pusha  
  4145d2:	or     BYTE PTR [esi],ah
  4145d4:	sub    DWORD PTR [esi],esi
  4145d6:	add    DWORD PTR [ebx],ebx
  4145d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4145d9:	ins    BYTE PTR es:[edi],dx
  4145da:	in     eax,dx
  4145db:	add    ebx,DWORD PTR [eax]
  4145dd:	ss in  eax,0x1b
  4145e0:	test   BYTE PTR [ecx-0x18],bl
  4145e3:	and    eax,0x4d93e75
  4145e8:	mov    esp,DWORD PTR [eax+0x55]
  4145eb:	pop    ds
  4145ec:	test   DWORD PTR [ecx],esp
  4145ee:	in     eax,dx
  4145ef:	and    al,0x6b
  4145f1:	mov    bh,0xc5
  4145f3:	sbb    ebp,edi
  4145f5:	(bad)  
  4145f6:	in     eax,dx
  4145f7:	clc    
  4145f8:	mov    al,ds:0xf768e236
  4145fd:	(bad)  
  4145fe:	in     eax,dx
  4145ff:	add    edx,eax
  414601:	xor    eax,0x60521cb1
  414606:	mov    al,ds:0x44a36d25
  41460b:	cmp    esi,DWORD PTR [esi+0xceed66]
	...
  414619:	add    BYTE PTR [eax],al
  41461b:	add    BYTE PTR [ebp-0x32],bh
  41461e:	cmp    eax,0x861310cc
  414623:	les    esp,FWORD PTR [eax-0x4bfd0449]
  414629:	mov    edi,0x67607606
  41462e:	out    dx,al
  41462f:	cmp    ah,bh
  414631:	mov    edi,0x477cd3f7
  414636:	xor    dh,BYTE PTR [ecx-0x2307404b]
  41463c:	ins    BYTE PTR es:[edi],dx
  41463d:	(bad)  
  41463e:	div    edx
  414640:	adc    eax,ecx
  414642:	ins    BYTE PTR es:[edi],dx
  414643:	icebp  
  414644:	jl     0x41465c
  414646:	dec    esi
  414647:	test   al,0xf4
  414649:	mov    edi,0xcfece171
  41464e:	sbb    ebp,DWORD PTR [esi]
  414650:	adc    al,cl
  414652:	jno    0x414645
  414654:	fdivr  st(4),st
  414656:	stc    
  414657:	push   ds
  414658:	adc    bh,al
  41465a:	add    eax,0xcd62f4e9
  41465f:	sub    esi,edi
  414661:	bound  edx,QWORD PTR [ecx+0x72]
  414664:	jmp    esp
  414666:	ret    0x4301
  414669:	pop    ss
  41466a:	outs   dx,BYTE PTR ds:[esi]
  41466b:	push   eax
  41466c:	fdivr  QWORD PTR [edi+0x6]
  41466f:	icebp  
  414670:	inc    esi
  414671:	(bad)
  414676:	or     bl,dh
  414678:	dec    ecx
  414679:	addr16 out dx,al
  41467b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41467c:	stc    
  41467d:	mov    ebp,0xa6f7
	...
  41468a:	add    BYTE PTR [eax],al
  41468c:	test   eax,0xf4e905ba
  414691:	bound  ecx,QWORD PTR [ecx+0x6e2e0b24]
  414697:	nop
  414698:	xchg   DWORD PTR [ebx],esp
  41469a:	push   es
  41469b:	ror    DWORD PTR [ecx-0x76],0xf7
  41469f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4146a0:	mov    edi,0xa4cb72fe
  4146a5:	loope  0x414720
  4146a7:	xchg   ecx,eax
  4146a8:	add    al,0x38
  4146aa:	adc    BYTE PTR [ebx],al
  4146ac:	add    edx,DWORD PTR [ebx]
  4146ae:	test   DWORD PTR [eax],0x38dfb6a3
  4146b4:	mov    ecx,0x5e0bf887
  4146b9:	push   cs
  4146ba:	add    edi,eax
  4146bc:	ror    DWORD PTR [edx+0x628efff7],cl
  4146c2:	out    dx,al
  4146c3:	sar    DWORD PTR [eax-0x79],0xf8
  4146c7:	mov    esp,DWORD PTR [ebx+0x56c2ce86]
  4146cd:	bound  edx,QWORD PTR [ecx-0x75]
  4146d0:	retf   0x4792
  4146d3:	pop    eax
  4146d4:	inc    esi
  4146d5:	nop
  4146d6:	inc    BYTE PTR [eax+0x5e]
  4146d9:	mov    dh,BYTE PTR [ebp+0x1]
  4146dc:	sbb    eax,0x19db2c87
  4146e1:	or     eax,0x878fe800
  4146e6:	clc    
  4146e7:	call   DWORD PTR ds:0xa0840822
  4146ed:	popa   
  4146ee:	push   es
	...
  4146fb:	add    cl,bh
  4146fd:	or     al,0x0
  4146ff:	call   0x38b76e
  414704:	adc    eax,0xf7057222
  414709:	cmp    esi,edi
  41470b:	dec    DWORD PTR [esi]
  41470d:	xor    DWORD PTR [edx+0xc],0xe7ffdc19
  414714:	cmp    eax,0xb9fff882
  414719:	(bad)  
  41471b:	out    0x3f,eax
  41471d:	fs idiv edi
  414720:	in     eax,0x21
  414722:	jb     0x414726
  414724:	mov    ch,0xd7
  414726:	clc    
  414727:	jne    0x4146ff
  414729:	mov    DWORD PTR [esp+ebx*1],esp
  41472c:	cdq    
  41472d:	or     DWORD PTR [eax+eax*8],0x63eb64e3
  414734:	not    esp
  414736:	popf   
  414737:	pop    es
  414738:	lahf   
  414739:	push   eax
  41473a:	push   es
  41473b:	jmp    DWORD PTR [eax-0xa8bbc50]
  414741:	sar    BYTE PTR [ebp-0x3e72d699],1
  414747:	dec    DWORD PTR [ecx+0x4be80bb6]
  41474d:	fs and edi,esi
  414750:	in     al,dx
  414751:	mov    ebx,DWORD PTR [ebp+0x25095c01]
  414757:	je     0x414758
  414759:	and    ebx,DWORD PTR [esi]
  41475b:	sbb    ah,BYTE PTR [eax+0x24]
  41475e:	pop    es
  41475f:	rol    BYTE PTR [eax],0x0
	...
  41476a:	add    BYTE PTR [eax],al
  41476c:	loop   0x414737
  41476e:	sub    BYTE PTR [ebx],dh
  414770:	push   eax
  414771:	dec    BYTE PTR [ebx]
  414773:	call   0xfe65f733
  414778:	in     al,dx
  414779:	mov    ebx,DWORD PTR [ebp+0x24a54c01]
  41477f:	je     0x414780
  414781:	arpl   WORD PTR [ebx],bx
  414783:	adc    al,0x28
  414785:	ins    BYTE PTR es:[edi],dx
  414786:	jg     0x41477f
  414788:	xlat   BYTE PTR ds:[ebx]
  414789:	cmp    al,0x1
  41478b:	sub    esi,DWORD PTR [edi]
  41478d:	mov    al,0x43
  41478f:	jae    0x414775
  414791:	test   BYTE PTR [ebx],0x0
  414794:	out    0xcb,eax
  414796:	nop
  414797:	or     edi,DWORD PTR [edx+ecx*8]
  41479a:	add    eax,DWORD PTR [eax]
  41479c:	not    DWORD PTR [eax-0x360b44f2]
  4147a2:	add    eax,DWORD PTR [eax]
  4147a4:	jl     0x4147af
  4147a6:	mov    ecx,0x3b2b5c8
  4147ab:	push   ebp
  4147ac:	ins    BYTE PTR es:[edi],dx
  4147ad:	scas   al,BYTE PTR es:[edi]
  4147ae:	mov    bl,0x57
  4147b0:	pop    edi
  4147b1:	xor    ebx,DWORD PTR [ecx]
  4147b3:	aas    
  4147b4:	div    ecx
  4147b6:	xchg   ecx,eax
  4147b7:	add    BYTE PTR [ebx+eiz*2+0x6f4322a0],dh
  4147be:	cwde   
  4147bf:	cwde   
  4147c0:	clc    
  4147c1:	retf   0x22cb
  4147c4:	test   eax,0x2b43e4bc
  4147c9:	pop    ecx
  4147ca:	sbb    BYTE PTR [eax+0xbf2bbec],0x0
	...
  4147d9:	add    BYTE PTR [eax],al
  4147db:	add    BYTE PTR [edi-0x76dd8fb0],bl
  4147e1:	push   0xbbed98ad
  4147e6:	fimul  DWORD PTR [edi]
  4147e8:	js     0x414820
  4147ea:	cmc    
  4147eb:	sub    esi,esp
  4147ed:	mov    ebx,0xa13f2250
  4147f2:	in     eax,0x3
  4147f4:	retf   0x51e7
  4147f7:	xchg   BYTE PTR [edi+eax*8],dh
  4147fa:	pushf  
  4147fb:	mov    edx,0x1dc51ac0
  414800:	dec    esi
  414801:	and    ebp,ebp
  414803:	sbb    eax,esi
  414805:	popa   
  414806:	sub    al,0x22
  414808:	or     eax,0xb5de1598
  41480d:	mov    ebx,0xceb34a10
  414812:	in     eax,dx
  414813:	add    esi,edi
  414815:	bound  esi,QWORD PTR [edx-0x38]
  414818:	or     al,0x13
  41481a:	adc    eax,0xf0bbe432
  41481f:	test   DWORD PTR [ebx-0x17671232],ecx
  414825:	in     eax,dx
  414826:	sub    dh,BYTE PTR [eax]
  414828:	test   al,0xca
  41482a:	int    0xf8
  41482c:	icebp  
  41482d:	mov    ebx,0x62dc9f6c
  414832:	push   edx
  414833:	or     esi,DWORD PTR [edx+0x25]
  414836:	shl    DWORD PTR [eax+edx*8-0x2edf2e6f],1
  41483d:	fild   WORD PTR [esi]
  41483f:	xor    al,0x0
	...
  414849:	add    BYTE PTR [eax],al
  41484b:	add    BYTE PTR [edi],al
  41484d:	mov    esp,0xbb656508
  414852:	imul   ecx
  414854:	imul   esp,DWORD PTR [esi],0x36d639f6
  41485a:	jmp    0x7a8e:0xf7bc5081
  414861:	mov    bl,0x5
  414863:	cld    
  414864:	jns    0x414862
  414866:	fs es mov ah,0xbb
  41486a:	in     al,dx
  41486b:	adc    BYTE PTR [esi],bh
  41486d:	daa    
  41486e:	loop   0x414853
  414870:	hlt    
  414871:	bound  eax,QWORD PTR [esi]
  414873:	cs mov al,0xc3
  414876:	push   es
  414877:	jmp    0xaccaab70
  41487c:	sbb    al,0x2c
  41487e:	not    esp
  414880:	adc    BYTE PTR ds:0xbc32d5ee,dl
  414886:	div    edx
  414888:	mov    ah,0x2f
  41488a:	push   ss
  41488b:	push   0x68
  41488d:	ret    
  41488e:	push   es
  41488f:	mov    ch,0xf2
  414891:	mov    ebx,0x8d0b1171
  414896:	stc    
  414897:	push   ds
  414898:	(bad)  
  414899:	call   0xc3c15f7c
  41489e:	out    dx,al
  41489f:	jbe    0x4148c0
  4148a1:	mov    esp,0x36dbf2f7
  4148a6:	adc    DWORD PTR [edx+0x70],ebp
  4148a9:	mov    edi,0xbbe77d06
  4148ae:	dec    ecx
  4148af:	add    eax,0x0
	...
  4148bc:	push   ebx
  4148bd:	jecxz  0x4148d2
  4148bf:	jmp    0xf21f13b8
  4148c4:	hlt    
  4148c5:	(bad)  
  4148c6:	jmp    0x414866
  4148c8:	sbb    esp,DWORD PTR [ebx+0x3f]
  4148cb:	imul   edx,edi,0xb40072ba
  4148d1:	stos   DWORD PTR es:[edi],eax
  4148d2:	ja     0x414913
  4148d4:	(bad)  
  4148d6:	add    ecx,DWORD PTR [ebx]
  4148d8:	rcr    BYTE PTR gs:[ecx+0x7d2650b],cl
  4148df:	push   0xffffffbe
  4148e1:	jmp    0x7303928
  4148e6:	fbstp  TBYTE PTR [ebx-0x21]
  4148e9:	pop    esi
  4148ea:	out    dx,al
  4148eb:	pop    ebp
  4148ec:	mov    bh,0x83
  4148ee:	clc    
  4148ef:	call   FWORD PTR [ebx-0x55af2076]
  4148f5:	cmp    eax,0xffffff8b
  4148f8:	pop    ebp
  4148f9:	mov    ds:0xf14dc95c,eax
  4148fe:	mov    esp,gs
  414900:	mov    cr2,edi
  414903:	(bad)  
  414904:	rol    DWORD PTR [edx-0x151a9b0],1
  41490a:	pop    edi
  41490b:	in     al,dx
  41490c:	lds    esp,FWORD PTR [ebp+0x659cf7f7]
  414912:	ret    
  414913:	call   ecx
  414915:	sbb    al,0x40
  414917:	inc    ecx
  414918:	pop    esi
  414919:	out    0x38,al
  41491b:	add    BYTE PTR [ecx],ah
  41491d:	loop   0x4148eb
  41491f:	add    DWORD PTR [eax],eax
	...
  414929:	add    BYTE PTR [eax],al
  41492b:	add    BYTE PTR [esi+0x66],cl
  41492e:	mov    DWORD PTR [ebp-0x77bf6],eax
  414934:	outs   dx,BYTE PTR ds:[esi]
  414935:	sti    
  414936:	fbld   TBYTE PTR [edi+0xbf88331]
  41493c:	into   
  41493d:	push   edx
  41493e:	and    BYTE PTR [edi+ebx*1-0x3c7cf99a],0x51
  414946:	stc    
  414947:	call   DWORD PTR [ecx]
  414949:	gs pop es
  41494b:	test   BYTE PTR [ecx+0x5f],bh
  41494e:	push   es
  41494f:	add    BYTE PTR [ebx-0x14],ah
  414952:	lahf   
  414953:	(bad)  
  414954:	not    DWORD PTR [eax-0x311fb0e9]
  41495a:	push   ds
  41495b:	std    
  41495c:	fsub   DWORD PTR [eax-0x713bed6]
  414962:	pop    ss
  414963:	sub    al,cl
  414965:	inc    edx
  414966:	pop    ebp
  414967:	mov    ds:0xea1808c1,eax
  41496c:	add    BYTE PTR [edx-0x568449f8],bl
  414972:	imul   edi,ebp,0xffffffa8
  414975:	shl    BYTE PTR [edx-0x3ea35d99],1
  41497b:	jmp    FWORD PTR [ebx+0x46]
  41497e:	inc    esp
  41497f:	std    
  414980:	nop
  414981:	cmp    BYTE PTR [edx+0x3c410e7],dh
  414987:	add    BYTE PTR [edi+edi*8+0x16],dh
  41498b:	lea    esi,[edx-0x73]
  41498e:	sbb    dh,bh
	...
  41499c:	jo     0x414999
  41499e:	sbb    BYTE PTR [ebx+edx*4+0x4ffe1711],dh
  4149a5:	fs loop 0x4149a6
  4149a8:	pop    eax
  4149a9:	xor    cl,BYTE PTR [ebp+0x177851a3]
  4149af:	inc    ebp
  4149b0:	je     0x414a23
  4149b2:	bnd jno 0x4149f0
  4149b5:	mov    BYTE PTR [ebp-0xd],bl
  4149b8:	cmp    DWORD PTR [eax-0x4e2218e9],eax
  4149be:	sbb    dh,bh
  4149c0:	xor    BYTE PTR [esi+0x5a],al
  4149c3:	std    
  4149c4:	and    BYTE PTR [eax+0x2],ch
  4149c7:	add    bh,dh
  4149c9:	retf   
  4149ca:	lods   eax,DWORD PTR ds:[esi]
  4149cb:	add    DWORD PTR [edx+0x8fd5a3e],eax
  4149d1:	mov    al,0xb3
  4149d3:	dec    BYTE PTR [edx-0x51]
  4149d6:	sbb    esi,edi
  4149d8:	clc    
  4149d9:	popa   
  4149da:	aad    0x8f
  4149dc:	add    al,0xb8
  4149de:	fmul   DWORD PTR [edx]
  4149e0:	mov    bh,0x68
  4149e2:	imul   ebx,DWORD PTR [ebx],0x84edb8e0
  4149e8:	fwait
  4149e9:	sti    
  4149ea:	mov    edi,0x2326d11e
  4149ef:	add    al,0xf7
  4149f1:	addr16 push 0x2b
  4149f4:	sar    BYTE PTR [eax-0x438c6f13],0x9f
  4149fb:	push   ds
  4149fc:	mov    cl,0x13
  4149fe:	adc    eax,0x8
	...
  414a0b:	add    dh,dh
  414a0d:	(bad)  
  414a0e:	in     eax,dx
  414a0f:	sub    ebp,esi
  414a11:	pop    edi
  414a12:	in     eax,dx
  414a13:	add    ebp,esp
  414a15:	mov    ds:0x63c187f0,al
  414a1a:	in     eax,dx
  414a1b:	add    ecx,edx
  414a1d:	pop    esi
  414a1e:	out    dx,al
  414a1f:	add    esi,edi
  414a21:	addr16 pusha 
  414a23:	inc    edi
  414a24:	js     0x4149de
  414a26:	in     eax,dx
  414a27:	sub    eax,DWORD PTR [eax+eiz*2+0x4ac703ed]
  414a2e:	push   edi
  414a2f:	xchg   edx,eax
  414a30:	mov    bh,0x62
  414a32:	pop    edx
  414a33:	mov    BYTE PTR [esi],dh
  414a35:	mov    ecx,0xcac01e40
  414a3a:	xor    eax,DWORD PTR [esi]
  414a3c:	mul    DWORD PTR [edx+0x6c]
  414a3f:	inc    edi
  414a40:	in     al,dx
  414a41:	dec    esp
  414a42:	in     eax,dx
  414a43:	nop
  414a44:	jae    0x414a02
  414a46:	pop    ds
  414a47:	push   ds
  414a48:	xor    DWORD PTR [ebx],edx
  414a4a:	adc    eax,0xed62f238
  414a4f:	nop
  414a50:	jnp    0x414a0e
  414a52:	pop    es
  414a53:	push   ds
  414a54:	sbb    DWORD PTR [ebx],edx
  414a56:	adc    eax,0xf8b7da22
  414a5b:	or     DWORD PTR [edi],esi
  414a5d:	cs push es
  414a5f:	leave  
  414a60:	dec    esp
  414a61:	test   DWORD PTR [esi-0x58],0xe281e5f4
  414a68:	adc    DWORD PTR [ecx+0x571b39f7],edi
  414a6e:	pop    ss
  414a6f:	(bad)  
	...
  414a7c:	add    ah,bh
  414a7e:	xchg   ecx,eax
  414a7f:	stos   DWORD PTR es:[edi],eax
  414a80:	stc    
  414a81:	mov    eax,0xbf8b1bf7
  414a86:	(bad)  
  414a87:	fsubp  st(3),st
  414a89:	mov    eax,0xde71daeb
  414a8e:	les    ebp,FWORD PTR [edi+0x7456b8da]
  414a94:	js     0x414a52
  414a96:	clc    
  414a97:	sahf   
  414a98:	or     ch,BYTE PTR [eax]
  414a9a:	out    dx,al
  414a9b:	xchg   edx,eax
  414a9c:	mov    eax,ds:0x7060f7b8
  414aa1:	sti    
  414aa2:	clc    
  414aa3:	xchg   dl,dh
  414aa5:	mov    eax,0xb8e93db1
  414aaa:	div    DWORD PTR [esi+0x28]
  414aad:	mov    ah,0xf8
  414aaf:	outs   dx,BYTE PTR ds:[esi]
  414ab0:	fidivr DWORD PTR [edi-0x46ec000a]
  414ab6:	or     ebp,DWORD PTR [ecx]
  414ab8:	(bad)  
  414ab9:	je     0x414b29
  414abb:	jmp    0x414a45
  414abd:	and    al,BYTE PTR [esi]
  414abf:	inc    ecx
  414ac0:	call   0x852a5125
  414ac5:	aas    
  414ac6:	add    al,0xb5
  414ac8:	xor    eax,0xcf7cf8b7
  414acd:	mov    ch,0xf7
  414acf:	or     ecx,DWORD PTR cs:[edx]
  414ad2:	and    BYTE PTR [esi],ah
  414ad4:	adc    cl,BYTE PTR [edx+0x5]
  414ad7:	xchg   ebx,eax
  414ad8:	hlt    
  414ad9:	dec    esp
  414ada:	push   es
  414adb:	push   ss
  414adc:	enter  0xf8fb,0xe
	...
  414aec:	cli    
  414aed:	aas    
  414aee:	fiadd  DWORD PTR [eax]
  414af0:	inc    esi
  414af1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414af2:	imul   DWORD PTR [ecx+0x1e]
  414af5:	mov    esp,DWORD PTR [edi+0x7]
  414af8:	push   cs
  414af9:	arpl   di,si
  414afb:	mov    ch,0xca
  414afd:	pop    eax
  414afe:	clc    
  414aff:	inc    esi
  414b01:	arpl   WORD PTR [ebx],bx
  414b03:	dec    ecx
  414b05:	push   edi
  414b06:	mov    dl,0xa4
  414b08:	enter  0xf857,0xe8
  414b0c:	(bad)  
  414b0d:	mov    esp,0xdb9fff8
  414b12:	repz dec BYTE PTR [ecx-0x639320a9]
  414b19:	push   edi
  414b1a:	clc    
  414b1b:	cld    
  414b1c:	mov    ebp,0x59ffbe22
  414b21:	push   edi
  414b22:	clc    
  414b23:	repnz cmp BYTE PTR [edx-0x72ecf100],bl
  414b2a:	stc    
  414b2b:	jmp    FWORD PTR [ecx-0x8]
  414b2e:	pop    eax
  414b2f:	leave  
  414b30:	pop    ebp
  414b31:	in     eax,dx
  414b32:	mov    esp,gs
  414b34:	sbb    eax,0xe650e71e
  414b39:	push   es
  414b3a:	(bad)  
  414b3c:	into   
  414b3d:	pop    esi
  414b3e:	(bad)  
  414b3f:	jb     0x414ba0
  414b41:	and    edi,eax
  414b43:	mov    ebp,DWORD PTR [edx+esi*1]
  414b46:	pop    edi
  414b47:	add    eax,0xe806624f
  414b4c:	stc    
  414b4d:	mov    ebx,0xfff8
	...
  414b5a:	add    BYTE PTR [eax],al
  414b5c:	scas   al,BYTE PTR es:[edi]
  414b5d:	jmp    0x90fb:0x9cc790d5
  414b64:	aad    0x73
  414b66:	xchg   DWORD PTR [eax+0x53],ebp
  414b69:	popa   
  414b6a:	push   es
  414b6b:	add    BYTE PTR [esi],al
  414b6d:	sbb    al,0x1d
  414b6f:	dec    DWORD PTR [ecx]
  414b71:	xor    cl,BYTE PTR [edx+edx*8-0x103fbd09]
  414b78:	xchg   esp,esp
  414b7a:	add    BYTE PTR [ecx],al
  414b7c:	test   ebx,0xb4eda82b
  414b82:	sbb    ecx,DWORD PTR [edx-0x2e71e3db]
  414b88:	outs   dx,BYTE PTR ds:[esi]
  414b89:	call   FWORD PTR [ebx]
  414b8b:	mov    al,ch
  414b8d:	xor    BYTE PTR [eax],dh
  414b8f:	(bad)  
  414b90:	pop    edi
  414b91:	rol    BYTE PTR [edx],0x0
  414b94:	test   DWORD PTR [ebp+edx*4+0x2bcc4dfb],0x3cbf953
  414b9f:	nop
  414ba0:	jl     0x414b7b
  414ba2:	xchg   ecx,edx
  414ba4:	shl    BYTE PTR [esi+0x12],0x67
  414ba8:	repz retf 0x3
  414bac:	lahf   
  414bad:	aaa    
  414bae:	add    eax,0x43b0f700
  414bb3:	jae    0x414bbc
  414bb5:	inc    ecx
  414bb6:	xor    BYTE PTR [edi+0x4087af0f],cl
  414bbc:	neg    esp
  414bbe:	xchg   ebp,eax
  414bbf:	out    dx,eax
	...
  414bcc:	lahf   
  414bcd:	jno    0x414bd4
  414bcf:	add    bh,dh
  414bd1:	inc    eax
  414bd2:	xor    BYTE PTR [ecx-0x9],ch
  414bd5:	popa   
  414bd6:	add    ch,BYTE PTR [edx-0xb]
  414bd9:	xchg   ecx,eax
  414bda:	add    ebp,DWORD PTR [edx-0xc]
  414bdd:	xchg   ebx,eax
  414bde:	add    eax,DWORD PTR [eax]
  414be0:	test   DWORD PTR [ebx+0x2367741b],0xcbf70315
  414bea:	mov    al,BYTE PTR [ebx+eax*2+0xb]
  414bee:	or     eax,eax
  414bf0:	retf   0x1d07
  414bf3:	je     0x414c30
  414bf5:	test   BYTE PTR [ebp+0x5621fef],dl
  414bfb:	add    edi,esi
  414bfd:	bound  edx,QWORD PTR [ebx+0x10628eb7]
  414c03:	xchg   ecx,eax
  414c04:	or     dl,cl
  414c06:	jnp    0x414c0a
  414c08:	mul    DWORD PTR [edx-0xc]
  414c0b:	inc    ebx
  414c0c:	test   BYTE PTR [esi-0x53],ah
  414c0f:	stos   DWORD PTR es:[edi],eax
  414c10:	jmp    0x414c40
  414c12:	scas   al,BYTE PTR es:[edi]
  414c13:	add    esp,DWORD PTR [edi-0xf001636]
  414c19:	mov    ah,0x53
  414c1b:	add    al,0x5d
  414c1d:	arpl   WORD PTR [ebx+0x6],dx
  414c20:	dec    ebp
  414c21:	arpl   WORD PTR [ebx+0x7],ax
  414c24:	dec    edi
  414c25:	arpl   bp,bp
  414c27:	add    esi,DWORD PTR [edi-0x2febc54c]
  414c2d:	add    al,0xe2
  414c2f:	add    eax,DWORD PTR [eax]
	...
  414c39:	add    BYTE PTR [eax],al
  414c3b:	add    bh,dh
  414c3d:	jmp    0x2f395c6c
  414c42:	inc    esp
  414c43:	lods   al,BYTE PTR ds:[esi]
  414c44:	adc    ch,BYTE PTR [edi]
  414c46:	cs add al,0x9f
  414c49:	in     al,dx
  414c4a:	loope  0x414c4f
  414c4c:	not    DWORD PTR [edx]
  414c4e:	add    eax,0xed2224fa
  414c53:	sbb    cl,BYTE PTR [ebx]
  414c55:	scas   eax,DWORD PTR es:[edi]
  414c56:	xchg   ebp,eax
  414c57:	fsub   st,st(3)
  414c59:	mov    bl,0x78
  414c5b:	mov    bl,0x81
  414c5d:	cs jns 0x414c8b
  414c60:	fs pop edi
  414c62:	in     eax,dx
  414c63:	add    ecx,edi
  414c65:	addr16 sub eax,0xacc7f690
  414c6b:	sbb    ch,bl
  414c6d:	mov    dh,0xc5
  414c6f:	lods   eax,DWORD PTR ds:[esi]
  414c70:	in     al,0x21
  414c72:	in     eax,dx
  414c73:	sbb    cl,bl
  414c75:	mov    edx,0x62f34855
  414c7a:	in     eax,dx
  414c7b:	xchg   BYTE PTR [edi+eiz*2],dh
  414c7e:	push   es
  414c7f:	shl    DWORD PTR [esi+0x30],0x45
  414c83:	jmp    0xe943f664
  414c88:	hlt    
  414c89:	addr16 (bad) 
  414c8b:	xchg   ebp,eax
  414c8c:	sbb    bh,BYTE PTR [edi+edi*8]
  414c8f:	pushf  
  414c90:	xor    esi,DWORD PTR [edi+eax*2+0x65fbb01]
  414c97:	jmp    0xdab3ef95
  414c9c:	push   edx
  414c9d:	mov    ah,0x6d
  414c9f:	jmp    0x414ca4
	...
  414cac:	(bad)  [esi]
  414cae:	(bad)  
  414caf:	out    dx,al
  414cb0:	add    bl,0x6e
  414cb3:	lds    edi,FWORD PTR [ebx-0x4acf9de]
  414cb9:	mov    bl,0xd6
  414cbb:	(bad)  
  414cbc:	push   0xcc51eeb7
  414cc1:	mov    ah,0xf7
  414cc3:	(bad)  
  414cc4:	js     0x414c89
  414cc6:	out    dx,al
  414cc7:	cmp    DWORD PTR [esp+esi*4-0x54974909],edi
  414cce:	out    dx,al
  414ccf:	inc    ecx
  414cd0:	lods   al,BYTE PTR ds:[esi]
  414cd1:	mov    ah,0xf7
  414cd3:	mov    al,0x32
  414cd5:	jnp    0xe6e0c768
  414cdb:	cmp    ah,BYTE PTR [ebx+0xb]
  414cde:	outs   dx,BYTE PTR ds:[esi]
  414cdf:	sbb    al,0xee
  414ce1:	jae    0x414ce9
  414ce3:	and    DWORD PTR [ecx+0x62],0x767a7ec3
  414cea:	and    dh,BYTE PTR [si-0x84d]
  414cef:	cmc    
  414cf0:	std    
  414cf1:	fistp  QWORD PTR [ecx]
  414cf3:	sar    BYTE PTR [ebx],cl
  414cf5:	and    al,BYTE PTR [esi]
  414cf7:	jmp    0x296cab6d
  414cfc:	call   0x6b7:0x9026c3aa
  414d03:	add    BYTE PTR [esi+0x5f],bl
  414d06:	push   es
  414d07:	(bad)  
  414d08:	fwait
  414d09:	push   edi
  414d0a:	idiv   edi
  414d0c:	dec    esi
  414d0d:	pop    edi
  414d0e:	mov    edi,0x45
	...
  414d1b:	add    dl,dh
  414d1d:	pop    esi
  414d1e:	push   es
  414d1f:	add    BYTE PTR [esi],bl
  414d21:	and    al,BYTE PTR [edx-0xc]
  414d24:	push   cs
  414d25:	pop    edi
  414d26:	push   es
  414d27:	add    cl,cl
  414d29:	repz out 0x0,eax
  414d2c:	push   ds
  414d2d:	pop    edi
  414d2e:	push   es
  414d2f:	lea    ebx,[ebx+0x4f]
  414d32:	inc    edi
  414d33:	lea    ebx,[ebx+0x63]
  414d36:	inc    edi
  414d37:	lea    ecx,[ebx+0x7b]
  414d3a:	inc    edi
  414d3b:	push   0xffffffe1
  414d3d:	jmp    0x1704984
  414d42:	push   es
  414d43:	push   0xffffffcd
  414d45:	add    al,bh
  414d47:	(bad)  
  414d48:	(bad)  
  414d4a:	dec    esp
  414d4b:	inc    ecx
  414d4c:	(bad)  
  414d4e:	inc    edx
  414d4f:	call   0x12126b1
  414d54:	or     bl,BYTE PTR [esi-0x7b]
  414d57:	jge    0x414d0f
  414d59:	xor    bh,0xff
  414d5c:	sahf   
  414d5d:	loope  0x414dd2
  414d5f:	dec    DWORD PTR [ebx]
  414d61:	dec    ebx
  414d62:	mov    BYTE PTR [ebp+0x56],al
  414d65:	out    0x7a,eax
  414d67:	clc    
  414d68:	mov    fs,edx
  414d6a:	pop    ebp
  414d6b:	mov    esp,ebx
  414d6d:	dec    esi
  414d6e:	in     al,dx
  414d6f:	aas    
  414d70:	jno    0x414d49
  414d72:	pop    edi
  414d73:	call   0x3a0b27
  414d78:	pop    ss
  414d79:	icebp  
  414d7a:	xlat   BYTE PTR ds:[ebx]
  414d7b:	jmp    FWORD PTR [ebp+0x29107e]
	...
  414d89:	add    BYTE PTR [eax],al
  414d8b:	add    cl,dl
  414d8d:	dec    edx
  414d8e:	or     al,0xc0
  414d90:	dec    edx
  414d91:	(bad)  
  414d92:	mov    es,WORD PTR [ebp-0x9]
  414d95:	pop    ds
  414d96:	test   eax,0xfb515f0b
  414d9b:	dec    BYTE PTR [eax+0x29]
  414d9e:	mov    bh,bl
  414da0:	jo     0x414d9e
  414da2:	or     edi,edi
  414da4:	ret    0x8e1f
  414da7:	aas    
  414da8:	sti    
  414da9:	or     al,0xd0
  414dac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414dad:	cli    
  414dae:	add    ecx,DWORD PTR [edi+0x72341cf7]
  414db4:	mov    dh,0xbb
  414db6:	add    dl,0x8b
  414db9:	pusha  
  414dba:	shr    bl,0x74
  414dbd:	out    0x1f,eax
  414dbf:	dec    DWORD PTR [ebx-0x48be1dc]
  414dc5:	mov    eax,0xfb3c6ae9
  414dca:	add    eax,edi
  414dcc:	xor    cl,al
  414dce:	add    al,BYTE PTR [eax]
  414dd0:	idiv   DWORD PTR [ebx-0x5a30837e]
  414dd6:	add    al,BYTE PTR [eax]
  414dd8:	not    DWORD PTR [esi]
  414dda:	add    eax,0xfa92be9
  414ddf:	(bad)  
  414de0:	je     0x414e50
  414de2:	push   ds
  414de3:	inc    DWORD PTR [ebx+eax*8+0x10]
  414de7:	je     0x414d9c
  414de9:	add    dh,dh
  414deb:	push   0x3c
  414ded:	jnp    0x414df1
  414def:	mov    eax,0x0
	...
  414dfc:	idiv   BYTE PTR [ebx+0x33c0003]
  414e02:	inc    esp
  414e03:	push   esp
  414e04:	jl     0x414e35
  414e06:	add    ebx,0xffffffa3
  414e09:	dec    esp
  414e0a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414e0b:	dec    edi
  414e0c:	pop    ds
  414e0d:	push   esp
  414e0e:	test   al,0xff
  414e10:	aaa    
  414e11:	mov    esp,0xfcf6711b
  414e16:	jb     0xcbcdb146
  414e1c:	mov    bh,0x62
  414e1e:	in     eax,dx
  414e1f:	(bad)  
  414e20:	out    dx,eax
  414e21:	in     eax,0x12
  414e23:	addr16 mov ebp,0xc203ed23
  414e29:	push   0xda14414
  414e2e:	ss inc ebx
  414e30:	ins    DWORD PTR es:[edi],dx
  414e31:	dec    edi
  414e32:	push   ds
  414e33:	xchg   ebx,eax
  414e34:	mov    bh,0x62
  414e36:	inc    esi
  414e37:	jne    0x414e30
  414e39:	(bad)  
  414e3a:	in     eax,dx
  414e3b:	sub    eax,DWORD PTR [ebp+0x7517187b]
  414e41:	outs   dx,DWORD PTR ds:[esi]
  414e42:	cmp    dl,BYTE PTR [ebx-0x70129d49]
  414e48:	loope  0x414dfb
  414e4a:	jl     0x414e4b
  414e4c:	add    DWORD PTR [edi+0x12],esi
  414e4f:	xchg   ebx,eax
  414e50:	mov    bh,0x62
  414e52:	add    eax,0xed62f583
  414e57:	or     dh,BYTE PTR [edi+0x4e2cea36]
  414e5d:	(bad)  
  414e5e:	in     eax,dx
  414e5f:	add    eax,DWORD PTR [eax]
	...
  414e69:	add    BYTE PTR [eax],al
  414e6b:	add    BYTE PTR [eax-0x8fc2eda],dh
  414e71:	(bad)  
  414e72:	in     eax,dx
  414e73:	mov    BYTE PTR [ebx],dh
  414e75:	scas   eax,DWORD PTR es:[edi]
  414e76:	sbb    eax,0xeb3ac0aa
  414e7b:	push   ss
  414e7c:	inc    ebp
  414e7d:	addr16 inc ebx
  414e7f:	add    al,0xb0
  414e81:	xor    al,0xe1
  414e83:	push   ss
  414e84:	add    eax,DWORD PTR [eax]
  414e86:	xor    eax,0xad5da0c5
  414e8b:	(bad)  
  414e8c:	repz mov ecx,0x62f70366
  414e92:	mov    BYTE PTR [edx-0x219a450c],dl
  414e98:	xor    DWORD PTR [eax-0x4f7f3f8a],0xc870fa06
  414ea2:	xchg   edi,eax
  414ea3:	jmp    0x414e99
  414ea5:	bound  edx,QWORD PTR [esi+0x66]
  414ea8:	xchg   DWORD PTR [eax+0x64855e56],edi
  414eae:	outs   dx,BYTE PTR ds:[esi]
  414eaf:	jmp    0xc147b1af
  414eb4:	hlt    
  414eb5:	pushw  es
  414eb7:	jmp    0xe94524c8
  414ebc:	hlt    
  414ebd:	pop    ebx
  414ebe:	(bad)  
  414ebf:	mov    ebp,0x2d41a91d
  414ec4:	hlt    
  414ec5:	bound  eax,QWORD PTR [esi]
  414ec7:	jmp    0xba3b763b
  414ecc:	dec    esi
  414ecd:	mov    al,0x6d
  414ecf:	jmp    0x414ed1
	...
  414ed9:	add    BYTE PTR [eax],al
  414edb:	add    cl,ch
  414edd:	inc    BYTE PTR ss:[ebx-0x128c500c]
  414ee4:	jmp    0x33f3f63f
  414ee9:	mov    al,0xc
  414eeb:	sub    DWORD PTR [eax+0xc74f759],eax
  414ef1:	enter  0xfe81,0xb
  414ef5:	mov    cl,0xeb
  414ef7:	sbb    DWORD PTR [edx],eax
  414ef9:	aaa    
  414efa:	inc    cl
  414efc:	outs   dx,BYTE PTR ds:[esi]
  414efd:	pop    eax
  414efe:	test   esi,0x2837b022
  414f04:	sti    
  414f05:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414f06:	inc    ecx
  414f07:	mov    ebp,0xe90662f3
  414f0c:	jns    0x414f34
  414f0e:	cli    
  414f0f:	sbb    DWORD PTR [ebp-0x51],ebx
  414f12:	ins    DWORD PTR es:[edi],dx
  414f13:	jmp    0x414f68
  414f15:	cmp    DWORD PTR [esi],eax
  414f17:	sahf   
  414f18:	xchg   BYTE PTR [ebx-0x9],ah
  414f1b:	cld    
  414f1c:	sbb    ebx,DWORD PTR ds:0xa2ffe945
  414f22:	pop    es
  414f23:	add    BYTE PTR [edx],dl
  414f25:	cmp    al,0xf7
  414f27:	dec    DWORD PTR [esi+0x3ed8426e]
  414f2d:	arpl   WORD PTR [esi],ax
  414f2f:	add    BYTE PTR [ecx+0x4e01dbef],dl
  414f35:	arpl   WORD PTR [esi],ax
  414f37:	(bad)  
  414f38:	cmp    eax,0xbe4588af
  414f3d:	push   ebp
  414f3e:	je     0x414f48
	...
  414f4c:	test   eax,0x93c7e3ef
  414f51:	jnp    0x414f4a
  414f53:	dec    DWORD PTR [esi+0x63]
  414f56:	mov    edi,0x666ba45
  414f5b:	add    BYTE PTR [esi],bl
  414f5d:	outs   dx,BYTE PTR ds:[esi]
  414f5e:	inc    edx
  414f5f:	lock push cs
  414f61:	arpl   WORD PTR [esi],ax
  414f63:	add    cl,dl
  414f65:	out    dx,eax
  414f66:	repz add BYTE PTR [esi],bl
  414f69:	arpl   WORD PTR [esi],ax
  414f6b:	lea    edx,[ebx+0x6b]
  414f6e:	inc    edi
  414f6f:	inc    DWORD PTR [ebx+0xde5df57]
  414f75:	arpl   WORD PTR [esi],ax
  414f77:	or     ebx,DWORD PTR [esi]
  414f79:	ror    DWORD PTR [edi],cl
  414f7b:	sbb    DWORD PTR [ebx+0x5e],0xfffffff7
  414f7f:	jae    0x414f68
  414f81:	push   edi
  414f82:	jb     0x414f78
  414f84:	dec    ecx
  414f85:	lods   eax,DWORD PTR ds:[esi]
  414f86:	out    0x48,al
  414f88:	pop    ds
  414f89:	addr16 mov edi,0x6618245
  414f8f:	add    dh,cl
  414f91:	jnp    0x414f93
  414f93:	(bad)  
  414f94:	adc    esi,DWORD PTR [ebx-0x9]
  414f97:	call   FWORD PTR [esi+0x5a75f762]
  414f9d:	push   edi
  414f9e:	adc    ah,BYTE PTR [ebx+0xaf7a1e5]
  414fa4:	dec    esi
  414fa5:	ficomp WORD PTR [ecx]
  414fa7:	call   0xfe5de9a3
  414fac:	mov    BYTE PTR [ecx],bh
  414fae:	rcr    BYTE PTR [edx+0x0],1
	...
  414fbc:	sub    al,0x7b
  414fbe:	add    al,BYTE PTR [eax]
  414fc0:	add    eax,esi
  414fc2:	adc    dl,BYTE PTR [esp+ecx*4]
  414fc5:	add    ebx,0x24c731ff
  414fcb:	inc    edi
  414fcc:	mov    dh,0xbb
  414fce:	add    al,0x0
  414fd0:	idiv   DWORD PTR [ebx]
  414fd2:	xchg   BYTE PTR [ebx+ebp*1-0x44],bh
  414fd6:	xchg   DWORD PTR [edx],ecx
  414fd8:	dec    eax
  414fd9:	xchg   edi,eax
  414fda:	pop    es
  414fdb:	dec    dl
  414fdd:	daa    
  414fde:	sub    ecx,DWORD PTR [ebx-0xfc440c]
  414fe4:	stos   BYTE PTR es:[edi],al
  414fe5:	ja     0x415012
  414fe7:	jae    0x414fdf
  414fe9:	mov    ebx,0x7be4fc03
  414fee:	pop    esp
  414fef:	(bad)  
  414ff0:	sbb    BYTE PTR [ebp+0x12],cl
  414ff3:	icebp  
  414ff4:	popa   
  414ff5:	xchg   esp,eax
  414ff6:	cli    
  414ff7:	push   cs
  414ff8:	jb     0x414f94
  414ffa:	adc    bh,dh
  414ffc:	add    BYTE PTR [ecx],dh
  414ffe:	dec    BYTE PTR [edx]
  415000:	sbb    al,0xbd
  415002:	js     0x41506a
  415004:	icebp  
  415005:	mov    ah,0x13
  415007:	mov    bh,0xf6
  415009:	mov    ebx,0x21400003
  41500e:	cmp    edx,eax
  415010:	inc    edx
  415011:	xor    DWORD PTR [esi],esp
  415013:	cmp    BYTE PTR [ebx+0x5f57b297],0xaf
  41501a:	add    DWORD PTR [ecx-0x9],eax
  41501d:	mov    ds:0x90,eax
	...
  41502a:	add    BYTE PTR [eax],al
  41502c:	mov    ah,0xec
  41502e:	cwde   
  41502f:	call   FWORD PTR [eax-0x8ffffc5]
  415035:	mov    ds:0x62a020d4,eax
  41503a:	mov    al,ds:0x98b79b1c
  41503f:	adc    ebx,DWORD PTR [eax-0x76ed3764]
  415045:	mov    edx,0xad81eb87
  41504a:	hlt    
  41504b:	inc    ebx
  41504c:	add    al,0x52
  41504e:	xchg   ebp,eax
  41504f:	sub    eax,0xff70ae18
  415054:	test   al,0x36
  415056:	jecxz  0x4150a2
  415058:	sti    
  415059:	into   
  41505a:	mov    dl,0xc4
  41505c:	pop    eax
  41505d:	(bad)  
  41505e:	in     eax,dx
  41505f:	add    esi,edi
  415061:	cmp    ch,dh
  415063:	add    al,0xf7
  415065:	bound  eax,QWORD PTR [ebp-0x3e]
  415068:	jmp    0xae31:0x236740ad
  41506f:	add    edi,DWORD PTR [eax]
  415071:	daa    
  415072:	xor    DWORD PTR ds:0x80ed62f6,eax
  415078:	mov    ebx,0xe312bdae
  41507d:	xchg   edi,eax
  41507e:	pushf  
  41507f:	les    edx,FWORD PTR [eax]
  415081:	lds    edx,FWORD PTR [ebp-0x1b9d08fb]
  415087:	inc    ebx
  415088:	mov    edx,DWORD PTR [edi+0x0]
  41508b:	fldenv [ebx]
  41508d:	xor    DWORD PTR [esi+0x3],ebp
	...
  41509b:	add    bh,bl
  41509d:	pop    esi
  41509e:	xlat   BYTE PTR ds:[ebx]
  41509f:	adc    ch,cl
  4150a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4150a2:	loop   0x4150dc
  4150a4:	gs and ch,ch
  4150a7:	add    esi,edi
  4150a9:	(bad)  
  4150aa:	in     eax,dx
  4150ab:	sbb    esi,DWORD PTR [edx]
  4150ad:	dec    edi
  4150ae:	rcl    BYTE PTR [edx],1
  4150b0:	shr    BYTE PTR [esi-0xa],1
  4150b3:	adc    al,cl
  4150b5:	cmp    edx,DWORD PTR [edi]
  4150b7:	retf   
  4150b8:	aaa    
  4150b9:	arpl   bp,dx
  4150bb:	cmp    DWORD PTR [ebx-0x1449f954],ebp
  4150c1:	mov    al,ds:0x1c006251
  4150c6:	pop    esi
  4150c7:	adc    DWORD PTR [ecx],esi
  4150c9:	bound  eax,QWORD PTR [ebp-0x17]
  4150cc:	cld    
  4150cd:	xor    DWORD PTR ds:0x639e5aa,eax
  4150d3:	cmp    DWORD PTR [ebx],0x2ce90663
  4150d9:	lods   al,BYTE PTR ds:[esi]
  4150da:	imul   ecx
  4150dc:	hlt    
  4150dd:	cdq    
  4150de:	(bad)  
  4150df:	in     eax,dx
  4150e0:	hlt    
  4150e1:	adc    bl,BYTE PTR [esi+0x1]
  4150e4:	and    eax,0xece94562
  4150e9:	xor    DWORD PTR ds:0xb343e52a,eax
  4150ef:	jmp    0x415124
  4150f1:	lods   al,BYTE PTR ds:[esi]
  4150f2:	fild   WORD PTR [ecx+0x510662fb]
  4150f8:	push   esi
  4150f9:	lods   eax,DWORD PTR ds:[esi]
  4150fa:	idiv   DWORD PTR [esi]
  4150fc:	or     al,0x1b
  4150fe:	icebp  
  4150ff:	add    BYTE PTR ss:[eax],al
	...
  41510a:	add    BYTE PTR [eax],al
  41510c:	add    eax,0x536e7c4
  415111:	lods   eax,DWORD PTR ds:[esi]
  415112:	out    dx,al
  415113:	inc    eax
  415114:	in     al,dx
  415115:	lods   al,BYTE PTR ds:[esi]
  415116:	imul   DWORD PTR [edx+0x27]
  415119:	enter  0xa849,0xf4
  41511d:	bound  esi,QWORD PTR [edx-0x10]
  415120:	jns    0x415191
  415122:	fwait
  415123:	mov    dl,0x33
  415125:	lods   al,BYTE PTR ds:[esi]
  415126:	div    DWORD PTR [ebp-0x2]
  415129:	stos   DWORD PTR es:[edi],eax
  41512a:	adc    DWORD PTR [edx-0x57],edx
  41512d:	and    al,BYTE PTR [esi]
  41512f:	es out dx,eax
  415131:	ror    DWORD PTR [esi+0x28],0xf3
  415135:	popa   
  415136:	push   es
  415137:	jmp    0xd55114b0
  41513c:	out    0xac,al
  41513e:	out    dx,al
  41513f:	repz icebp 
  415141:	lods   al,BYTE PTR ds:[esi]
  415142:	test   DWORD PTR [eax],0x684ff68d
  415148:	stos   DWORD PTR es:[edi],eax
  415149:	inc    bp
  41514b:	add    BYTE PTR [esi-0x2c],ah
  41514e:	push   es
  41514f:	ret    
  415150:	push   ecx
  415151:	dec    esi
  415152:	das    
  415153:	add    DWORD PTR [esi-0x61f842a1],ecx
  415159:	pop    edi
  41515a:	push   es
  41515b:	xor    ecx,DWORD PTR [ecx+ecx*2-0xa]
  41515f:	and    DWORD PTR [ebx+eiz*2+0x71],0x2
  415164:	gs fs jmp 0x415151
  415168:	xchg   bh,bl
  41516a:	clc    
  41516b:	jmp    ecx
  41516d:	dec    esi
  41516e:	je     0x41516a
	...
  41517c:	rcl    DWORD PTR [ecx+0x6d],1
  41517f:	add    dh,al
  415181:	mov    eax,DWORD PTR [esi]
  415183:	add    BYTE PTR [esi+0x6b],bl
  415186:	clc    
  415187:	and    eax,0x46e082
  41518c:	mov    cl,0xc3
  41518e:	push   edi
  41518f:	or     DWORD PTR [edi+0x3a25f75f],0xe10046e0
  415199:	ret    
  41519a:	pop    edi
  41519b:	or     DWORD PTR [edi+0x5f],0xe08225f7
  4151a2:	inc    esi
  4151a3:	add    cl,dh
  4151a5:	ret    
  4151a6:	sbb    DWORD PTR [bx+0x5f],0xe06a25f7
  4151ae:	inc    esi
  4151af:	add    cl,dh
  4151b1:	ret    
  4151b2:	outs   dx,DWORD PTR ds:[esi]
  4151b3:	sbb    DWORD PTR [edi+0x6225f766],0xd10046e5
  4151bd:	shl    DWORD PTR [edi-0x7f],0xf
  4151c1:	pop    edi
  4151c2:	mul    DWORD PTR ds:0x46e55a
  4151c8:	not    DWORD PTR [eax+0x7b7687e0]
  4151ce:	add    bh,bh
  4151d0:	adc    dh,BYTE PTR [eax]
  4151d2:	test   BYTE PTR [eax-0x9],al
  4151d5:	call   0x7bb7e1ba
  4151da:	add    bh,bh
  4151dc:	fimul  DWORD PTR [edi]
  4151de:	test   BYTE PTR [eax+0x0],al
	...
  4151e9:	add    BYTE PTR [eax],al
  4151eb:	add    bh,dh
  4151ed:	add    cl,ah
  4151ef:	xchg   edi,eax
  4151f0:	jbe    0x41526d
  4151f2:	add    bh,bh
  4151f4:	shr    BYTE PTR [edi],cl
  4151f6:	test   BYTE PTR [eax-0x9],al
  4151f9:	fsub   st,st(0)
  4151fb:	lahf   
  4151fc:	jbe    0x415279
  4151fe:	add    bh,bh
  415200:	sbb    ah,BYTE PTR [eax]
  415202:	test   BYTE PTR [eax-0x9],al
  415205:	xor    al,ah
  415207:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415208:	jbe    0x415285
  41520a:	add    bh,bh
  41520c:	adc    dl,al
  41520e:	test   BYTE PTR [eax-0x9],al
  415211:	or     al,ah
  415213:	scas   eax,DWORD PTR es:[edi]
  415214:	jbe    0x415211
  415216:	add    edi,edi
  415218:	sbb    dl,al
  41521a:	test   BYTE PTR [eax-0x9],al
  41521d:	and    al,ah
  41521f:	mov    bh,0x76
  415221:	sti    
  415222:	add    edi,edi
  415224:	shr    BYTE PTR [edi],cl
  415226:	test   BYTE PTR [eax-0x9],al
  415229:	js     0x41520b
  41522b:	mov    edi,0xff03fb76
  415230:	fidivr DWORD PTR [edi-0x7c]
  415233:	inc    eax
  415234:	not    DWORD PTR [eax-0x20]
  415237:	(bad)  
  415238:	jbe    0x415235
  41523a:	add    edi,edi
  41523c:	shr    BYTE PTR [edi-0x7c],cl
  41523f:	inc    eax
  415240:	imul   DWORD PTR [eax-0x589301f]
  415246:	add    edi,edi
  415248:	sbb    dl,BYTE PTR [eax-0x7c]
  41524b:	inc    eax
  41524c:	mul    DWORD PTR [edx-0x20]
  41524f:	jmp    0x415254
	...
  41525c:	test   al,0xe3
  41525e:	cs add al,0xc8
  415261:	jg     0x415214
  415263:	test   DWORD PTR [edi],esi
  415265:	arpl   ax,cx
  415267:	jmp    0x4703604
  41526c:	mov    al,0x7f
  41526e:	rol    DWORD PTR [ebp-0x164f9cc9],0x98
  415275:	jecxz  0x4152a5
  415277:	add    al,0x98
  415279:	jg     0x41520c
  41527b:	test   DWORD PTR [edi],esi
  41527d:	arpl   WORD PTR [eax+0x2ee398e9],bx
  415283:	add    al,0x80
  415285:	jg     0x415218
  415287:	test   DWORD PTR [edi],esi
  415289:	arpl   WORD PTR [eax+0x2ee368e9],ax
  41528f:	add    al,0x68
  415291:	jg     0x415304
  415293:	test   DWORD PTR [edi+0x58e96862],esi
  415299:	jecxz  0x415249
  41529b:	add    edx,DWORD PTR [eax+0x7f]
  41529e:	loope  0x415221
  4152a0:	mov    bh,0x62
  4152a2:	push   eax
  4152a3:	jmp    0x3f037a0
  4152a8:	cmp    BYTE PTR [edi-0xf],bh
  4152ab:	xor    DWORD PTR [edi-0x716c79e],0x2003aee4
  4152b5:	jg     0x415288
  4152b7:	xor    DWORD PTR [edi-0x1716df9e],0x3aee4
	...
  4152c9:	add    BYTE PTR [eax],al
  4152cb:	add    BYTE PTR [eax],cl
  4152cd:	jg     0x4152c0
  4152cf:	xor    DWORD PTR [edi-0x2716f79e],0xf003aee4
  4152d9:	jle    0x41529c
  4152db:	xor    DWORD PTR [edi],0xcff60663
  4152e1:	add    BYTE PTR [eax+ebp*4+0x1921a7f4],0x75
  4152e9:	and    eax,DWORD PTR [esi]
  4152eb:	(bad)  
  4152ed:	je     0x415273
  4152ef:	sub    bl,bh
  4152f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4152f2:	and    DWORD PTR [ecx],edx
  4152f4:	jne    0x415319
  4152f6:	push   es
  4152f7:	(bad)  
  4152f8:	lahf   
  4152f9:	ins    BYTE PTR es:[edi],dx
  4152fa:	test   BYTE PTR [eax],ch
  4152fc:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4152fe:	and    DWORD PTR [ecx],ebp
  415300:	jne    0x415325
  415302:	push   es
  415303:	scas   al,BYTE PTR es:[edi]
  415304:	(bad)  
  415305:	and    al,0x84
  415307:	sub    bl,bh
  415309:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41530a:	and    DWORD PTR ds:0x96062375,ebp
  415310:	(bad)  
  415311:	adc    al,0x84
  415313:	sub    bl,dh
  415315:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415316:	and    DWORD PTR [ecx],esp
  415318:	jne    0x41533d
  41531a:	push   es
  41531b:	jle    0x41537c
  41531d:	or     al,0x84
  41531f:	sub    bl,bh
  415321:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415322:	and    DWORD PTR [ecx],ecx
  415324:	jne    0x415349
  415326:	push   es
  415327:	pop    di
  415329:	inc    esp
  41532a:	test   BYTE PTR [eax-0x3ede580c],ch
	...
  41533c:	jbe    0x415361
  41533e:	push   es
  41533f:	dec    esi
  415340:	dec    edi
  415341:	cmp    al,0x84
  415343:	test   al,0xf4
  415345:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415346:	and    DWORD PTR [ecx+0x36062376],edi
  41534c:	sysenter 
  41534e:	test   BYTE PTR [eax-0x5ede580c],ch
  415354:	jbe    0x415379
  415356:	push   es
  415357:	push   ds
  415358:	pop    ds
  415359:	sub    al,0x84
  41535b:	test   al,0xf4
  41535d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41535e:	and    DWORD PTR [ebp+0x76],esp
  415361:	and    eax,DWORD PTR [esi]
  415363:	add    cl,bh
  415365:	mov    edx,0x639f828b
  41536a:	mul    DWORD PTR ds:0x46e23e
  415370:	leave  
  415371:	mov    edi,0x5f1f828f
  415376:	mul    DWORD PTR ds:0x46e54a
  41537c:	test   eax,0xf8297bf
  415381:	pop    edi
  415382:	mul    DWORD PTR ds:0x46e482
  415388:	imul   edi,DWORD PTR [edi+0x5ecf829f],0xe51a25f7
  415392:	inc    esi
  415393:	add    BYTE PTR [ecx-0x41],bl
  415396:	mov    bl,0x82
  415398:	fistp  WORD PTR [esi-0x9]
  41539b:	and    eax,0x46e526
	...
  4153ac:	imul   edi,DWORD PTR [edi+0x5f1f82bb],0xe49e25f7
  4153b6:	inc    esi
  4153b7:	add    cl,ch
  4153b9:	mov    edi,0x5f0f82c3
  4153be:	mul    DWORD PTR ds:0x46e506
  4153c4:	test   eax,0x8f82cbbf
  4153c9:	arpl   di,si
  4153cb:	and    eax,0x46e4fe
  4153d0:	mov    ecx,0x5f82d3bf
  4153d5:	arpl   di,si
  4153d7:	and    eax,0x46e506
  4153dc:	leave  
  4153dd:	mov    edi,0x635f82d7
  4153e2:	mul    DWORD PTR ds:0x46e4f2
  4153e8:	test   DWORD PTR [esi+ecx*8+0x23],0x10a3cf3
  4153f0:	jb     0x4153a6
  4153f2:	dec    ebx
  4153f3:	arpl   di,si
  4153f5:	mov    ebx,0xbbfbc203
  4153fa:	xchg   bh,dh
  4153fc:	repz ss sti 
  4153ff:	mov    bh,0xf5
  415401:	mov    ebx,0xc0b50003
  415406:	add    eax,DWORD PTR [ebx+0x788c4bf]
  41540c:	jg     0x4153ce
  41540e:	add    eax,DWORD PTR [eax]
	...
  41541c:	idiv   ecx
  41541e:	(bad)  
  41541f:	push   DWORD PTR [esp+eiz*4-0xd]
  415423:	jl     0x415414
  415425:	xor    eax,DWORD PTR [ecx]
  415427:	add    bh,dh
  415429:	mov    ebx,0x38f70345
  41542e:	or     ebx,DWORD PTR [edi]
  415430:	or     dh,BYTE PTR [ebx+ecx*2+0x3bbf707]
  415437:	ret    0xbbf3
  41543a:	xchg   bh,dh
  41543c:	mov    bh,0x5e
  41543e:	cli    
  41543f:	mov    bh,0xfd
  415441:	mov    ebx,0xb8350003
  415446:	add    edi,DWORD PTR ds:0x3bc77
  41544c:	shl    BYTE PTR [ebx-0x4408f4b5],cl
  415452:	add    eax,edx
  415454:	sti    
  415455:	mov    ebx,0xbbf7ffc8
  41545a:	add    edi,DWORD PTR [ebp-0x1]
  41545d:	jecxz  0x415458
  41545f:	jmp    FWORD PTR [eax]
  415461:	mov    esp,0xaef70345
  415466:	add    eax,DWORD PTR [edx]
  415468:	idiv   DWORD PTR [ebx+0x634f0788]
  41546e:	std    
  41546f:	add    esi,edi
  415471:	bound  ebp,QWORD PTR [ebx]
  415473:	pop    es
  415474:	mul    DWORD PTR [edi-0x13]
  415477:	pop    es
  415478:	mul    DWORD PTR [edx-0x76]
  41547b:	sti    
  41547c:	test   al,0x50
  41547e:	in     eax,dx
  41547f:	add    eax,DWORD PTR [eax]
	...
  415489:	add    BYTE PTR [eax],al
  41548b:	add    bh,dh
  41548d:	mov    al,ds:0x632203e1
  415492:	in     eax,0x3
  415494:	mul    DWORD PTR [edi]
  415496:	in     eax,0x4b
  415498:	in     al,0x62
  41549a:	in     eax,dx
  41549b:	add    esi,DWORD PTR [ebp-0x3f3712a2]
  4154a1:	push   ebp
  4154a2:	in     eax,dx
  4154a3:	add    edi,DWORD PTR [edx]
  4154a5:	pop    ebx
  4154a6:	xchg   ebp,eax
  4154a7:	repnz mov al,0xa5
  4154aa:	in     eax,dx
  4154ab:	inc    ebp
  4154ac:	hlt    
  4154ad:	(bad)  
  4154ae:	cli    
  4154af:	add    edx,edi
  4154b1:	(bad)  
  4154b2:	in     eax,dx
  4154b3:	mov    al,dh
  4154b5:	jmp    0xab:0x62f703d5
  4154bc:	mul    DWORD PTR [edi-0x13]
  4154bf:	ret    
  4154c0:	and    BYTE PTR [ebp+0x4840fc12],0xed
  4154c7:	add    esi,edi
  4154c9:	mov    al,ds:0x632a03e9
  4154ce:	ins    DWORD PTR es:[edi],dx
  4154cf:	add    al,0xf7
  4154d1:	daa    
  4154d2:	in     eax,0x4b
  4154d4:	cld    
  4154d5:	(bad)  
  4154d6:	in     eax,dx
  4154d7:	add    esi,DWORD PTR ds:0x3fd6ed5e
  4154dd:	addr16 in eax,dx
  4154df:	add    esi,esi
  4154e1:	(bad)  
  4154e2:	loopne 0x41554c
  4154e4:	aaa    
  4154e5:	xlat   BYTE PTR ds:[ebx]
  4154e6:	cdq    
  4154e7:	cld    
  4154e8:	adc    bl,dl
  4154ea:	cs inc esi
  4154ec:	hlt    
  4154ed:	bound  ebp,QWORD PTR [ebp+eax*4+0x0]
	...
  4154f9:	add    BYTE PTR [eax],al
  4154fb:	add    ah,bh
  4154fd:	pop    esi
  4154fe:	push   es
  4154ff:	jmp    0xccb2faf8
  415504:	xchg   ecx,eax
  415505:	loop   0x41551d
  415507:	in     eax,dx
  415508:	hlt    
  415509:	bound  ecx,QWORD PTR [ebp+0x6611368]
  41550f:	jmp    0xedc6f148
  415514:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415516:	div    ecx
  415518:	hlt    
  415519:	bound  eax,QWORD PTR [esi]
  41551b:	jo     0x415597
  41551d:	push   esp
  41551e:	add    ch,cl
  415520:	hlt    
  415521:	fistp  QWORD PTR [edx-0x3b]
  415524:	shl    BYTE PTR [esp+ecx*4+0x660dc70],1
  41552b:	jmp    0xe8cdaea0
  415530:	repnz mov ds:0x632ca9f8,al
  415536:	(bad)  
  415537:	in     eax,dx
  415538:	hlt    
  415539:	xchg   edx,eax
  41553a:	and    eax,0x84a4a0ab
  41553f:	push   0xe9066090
  415544:	std    
  415545:	sbb    DWORD PTR cs:[edx+0x73],esi
  415549:	push   esp
  41554a:	add    ch,cl
  41554c:	hlt    
  41554d:	fld    DWORD PTR [ebp-0x85b870f]
  415553:	sub    DWORD PTR [edx+eiz*8+0x62f4ed1a],esi
  41555a:	push   cs
  41555b:	jmp    0x68ceb854
	...
  41556c:	fs pusha 
  41556e:	push   es
  41556f:	jmp    0xed603045
  415574:	hlt    
  415575:	(bad)  
  415576:	(bad)  
  415577:	or     BYTE PTR [eax+0x38f585e0],bh
  41557d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41557e:	test   DWORD PTR [esi-0x79],0x9f008b47
  415585:	scas   eax,DWORD PTR es:[edi]
  415586:	add    eax,DWORD PTR [eax]
  415588:	push   cs
  415589:	daa    
  41558a:	xchg   BYTE PTR [eax],bl
  41558c:	or     ah,BYTE PTR [eax+0x6]
  41558f:	inc    eax
  415590:	(bad)  
  415592:	sbb    eax,DWORD PTR [esi+ebx*1]
  415595:	pusha  
  415596:	push   cs
  415597:	add    BYTE PTR [esi],cl
  415599:	pusha  
  41559a:	lea    eax,[ecx-0x85c02]
  4155a0:	push   ebp
  4155a1:	daa    
  4155a2:	(bad)  
  4155a4:	ficomp WORD PTR [edi-0x74]
  4155a7:	add    esp,ecx
  4155a9:	pop    ds
  4155aa:	stc    
  4155ab:	rcl    BYTE PTR [esi+0x5f],0xc3
  4155af:	mov    ebx,DWORD PTR [edx+0xa8b0383]
  4155b5:	ret    
  4155b6:	add    edx,DWORD PTR [ebp+0x8]
  4155b9:	repnz xor al,0xf6
  4155bc:	push   ebx
  4155bd:	call   0xde07e0b9
  4155c2:	loopne 0x4155c5
  4155c4:	pop    DWORD PTR [esi+0x41]
  4155c7:	(bad)  
  4155c8:	retf   0x84f2
  4155cb:	clc    
  4155cc:	(bad)  
  4155cd:	shl    bh,cl
  4155cf:	add    DWORD PTR [eax],0x0
	...
  4155da:	add    BYTE PTR [eax],al
  4155dc:	push   eax
  4155dd:	pop    edi
  4155de:	mov    ecx,0xf85951ff
  4155e3:	(bad)  
  4155e4:	jecxz  0x41558d
  4155e6:	jae    0x41565a
  4155e8:	mov    ebp,0xb701f825
  4155ed:	mov    edx,0xd45e0003
  4155f2:	push   ds
  4155f3:	mov    ecx,edi
  4155f5:	scas   al,BYTE PTR es:[edi]
  4155f6:	add    eax,DWORD PTR [eax]
  4155f8:	dec    esi
  4155f9:	sub    BYTE PTR [esi+0x65f5a18],al
  4155ff:	inc    eax
  415600:	(bad)  
  415601:	pop    ss
  415602:	sbb    eax,DWORD PTR [esi+ecx*2]
  415605:	pop    edi
  415606:	lea    eax,[ecx-0x85609]
  41560c:	xor    BYTE PTR [eax-0x7d],al
  41560f:	pop    ss
  415610:	repz mov ecx,0xba35f603
  415616:	xchg   DWORD PTR [ecx],ecx
  415618:	ins    DWORD PTR es:[edi],dx
  415619:	xchg   ecx,eax
  41561a:	add    ebx,ebx
  41561c:	adc    DWORD PTR [eax+0x7a],edi
  41561f:	pop    ss
  415620:	sbb    al,0xb7
  415622:	xor    ebx,DWORD PTR [edi]
  415624:	not    BYTE PTR [edx]
  415626:	out    dx,al
  415627:	add    esi,edi
  415629:	mov    ecx,0xb7c1888
  41562e:	repnz add esi,edi
  415631:	mov    edi,DWORD PTR [eax+eax*4-0x1]
  415635:	xchg   DWORD PTR [ebx],eax
  415637:	add    BYTE PTR [edi],dh
  415639:	add    ecx,DWORD PTR [ebx+0x1b]
  41563c:	sti    
  41563d:	mov    eax,DWORD PTR [ebx]
  41563f:	mov    DWORD PTR [eax],eax
	...
  415649:	add    BYTE PTR [eax],al
  41564b:	add    BYTE PTR [esi-0x64],dh
  41564e:	idiv   edi
  415650:	rcl    BYTE PTR ds:0x8bf31784,0x3
  415657:	mov    cl,BYTE PTR [edi]
  415659:	mov    gs,WORD PTR [edx]
  41565b:	std    
  41565c:	mov    ah,0xfb
  41565e:	sbb    DWORD PTR [edx+0x177b8b91],eax
  415664:	and    bh,BYTE PTR [esi]
  415666:	stos   BYTE PTR es:[edi],al
  415667:	add    BYTE PTR [esi-0x50],bl
  41566a:	idiv   edi
  41566c:	mov    BYTE PTR [edi-0x15],bh
  41566f:	mov    dh,BYTE PTR [esi-0x64]
  415672:	idiv   edi
  415674:	js     0x415679
  415676:	test   BYTE PTR [edi],dl
  415678:	sti    
  415679:	mov    eax,DWORD PTR [ebx]
  41567b:	inc    eax
  41567c:	jle    0x4156a1
  41567e:	fild   WORD PTR [ebx]
  415680:	test   DWORD PTR [ebx-0x6ff87f84],0xb7c0003
  41568a:	jmp    0x41568f
  41568c:	mul    DWORD PTR [edx-0x13]
  41568f:	adc    DWORD PTR [esi],esi
  415691:	fs sar ebp,1
  415694:	outs   dx,BYTE PTR ds:[esi]
  415695:	jae    0x415682
  415697:	xor    eax,0xf365a532
  41569c:	sbb    eax,0xf7e31d65
  4156a1:	retf   
  4156a2:	fcos   
  4156a4:	sbb    BYTE PTR [edx-0x1b821546],ah
  4156aa:	(bad)  
  4156ac:	or     BYTE PTR [edx+0x8276],ah
	...
  4156ba:	add    BYTE PTR [eax],al
  4156bc:	call   0xb7454427
  4156c1:	jmp    0x415719
  4156c3:	out    0xf4,eax
  4156c5:	(bad)  
  4156c6:	in     eax,dx
  4156c7:	jp     0x415740
  4156c9:	jb     0x4156b4
  4156cb:	add    esi,edi
  4156cd:	in     eax,dx
  4156ce:	jbe    0x4156bb
  4156d0:	hlt    
  4156d1:	(bad)  
  4156d2:	in     eax,dx
  4156d3:	xor    edx,DWORD PTR [edi]
  4156d5:	inc    edx
  4156d6:	xchg   DWORD PTR [esi-0x4d12994a],esp
  4156dc:	sub    ebp,esi
  4156de:	dec    ecx
  4156df:	loopne 0x4156c9
  4156e1:	cmp    BYTE PTR [esp+eax*2],bl
  4156e4:	dec    ecx
  4156e5:	out    0xca,al
  4156e7:	mul    DWORD PTR [edx]
  4156e9:	push   0xa1a0f782
  4156ee:	in     eax,dx
  4156ef:	jp     0x41570d
  4156f1:	inc    edi
  4156f2:	fnstcw WORD PTR [edx-0x77]
  4156f5:	dec    ebp
  4156f6:	mov    dl,0x79
  4156f8:	adc    al,0x47
  4156fa:	in     eax,dx
  4156fb:	jns    0x4156de
  4156fd:	out    0xc4,al
  4156ff:	nop
  415700:	fsubr  st,st(5)
  415702:	mov    ds:0x74ef4a7b,al
  415707:	add    al,0xf7
  415709:	(bad)  
  41570a:	in     eax,dx
  41570b:	leave  
  41570c:	(bad)  
  41570d:	push   ss
  41570e:	fistp  QWORD PTR [esi+esi*4+0x66a006e7]
  415715:	xchg   edi,eax
  415716:	sub    DWORD PTR [ecx-0x233219b8],0x3c
  41571d:	in     al,0xc6
  41571f:	jmp    0x415721
	...
  415729:	add    BYTE PTR [eax],al
  41572b:	add    ch,bl
  41572d:	sub    DWORD PTR fs:[ecx],0x30
  415731:	sub    BYTE PTR [eax+0x6a],al
  415734:	pop    DWORD PTR [ebp+0x1a]
  415737:	call   0x9f9906c3
  41573c:	dec    edi
  41573d:	cmp    al,0xc4
  41573f:	in     eax,0xf4
  415741:	in     eax,dx
  415742:	push   edx
  415743:	add    eax,0x725037f7
  415748:	jmp    0xf7a0:0xf8d180a8
  41574f:	jmp    0x6347ba48
  415754:	in     eax,dx
  415755:	in     al,0xcd
  415757:	mul    BYTE PTR [eax+0x50]
  41575a:	add    eax,0x8b37f4e9
  41575f:	jne    0x415711
  415761:	je     0x4156e6
  415763:	out    dx,al
  415764:	rcl    DWORD PTR [esi],0x1
  415767:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415768:	leave  
  415769:	mov    al,ds:0xa23de9f7
  41576e:	sub    ebp,DWORD PTR [esi+0x550e5a24]
  415774:	ins    DWORD PTR es:[edi],dx
  415775:	xor    DWORD PTR [esi+0x6c],eax
  415778:	stc    
  415779:	push   ss
  41577a:	lock push 0x1a
  41577d:	jl     0x415781
  41577f:	jmp    0xccb2f778
  415784:	or     eax,0xf4ed16e6
  415789:	bound  ecx,QWORD PTR [ebp+0x6648c67]
  41578f:	jmp    0x415794
	...
  41579c:	xor    al,0xa9
  41579e:	sub    ch,0x68
  4157a1:	mov    al,ds:0x646600f7
  4157a6:	push   es
  4157a7:	add    bh,ah
  4157a9:	sbb    eax,0x645e0407
  4157ae:	mov    eax,DWORD PTR [esi-0x85fda]
  4157b4:	inc    BYTE PTR [ebx-0x5fc17974]
  4157ba:	idiv   edi
  4157bc:	xchg   esp,eax
  4157bd:	cdq    
  4157be:	pop    eax
  4157bf:	mov    BYTE PTR [esi],dl
  4157c1:	imul   eax,DWORD PTR [ecx+0x6641210],0xff227b5e
  4157cb:	jmp    DWORD PTR [ebx-0x62478c98]
  4157d1:	pop    esi
  4157d2:	clc    
  4157d3:	add    DWORD PTR [eax+0xe000387],ecx
  4157d9:	sbb    ebp,DWORD PTR [esi+0x9]
  4157dc:	xchg   ebx,eax
  4157dd:	mov    cs,WORD PTR [esi+eax*4-0x86012]
  4157e4:	addr16 push ds
  4157e6:	(bad)  
  4157e8:	into   
  4157e9:	arpl   WORD PTR [esi-0x77],ax
  4157ec:	cmp    BYTE PTR [eax+0x1ede0003],cl
  4157f2:	adc    DWORD PTR [eax],0x8b0663d2
  4157f8:	push   eax
  4157f9:	pop    DWORD PTR [ebx]
  4157fb:	add    BYTE PTR [esi+0x20719],bl
	...
  415809:	add    BYTE PTR [eax],al
  41580b:	add    BYTE PTR [eax+ebp*2-0x3b],ch
  41580f:	mov    BYTE PTR [esi-0x6de3779c],bh
  415815:	arpl   WORD PTR [esi],ax
  415817:	jne    0x4157c0
  415819:	sbb    al,BYTE PTR [ecx+0x6639210]
  41581f:	mov    DWORD PTR [eax],edx
  415821:	pop    DWORD PTR [ebx]
  415823:	add    BYTE PTR [esi-0x851715d],cl
  415829:	xchg   ebp,eax
  41582a:	idiv   edi
  41582c:	push   0xfb0f7802
  415831:	mov    DWORD PTR [ebx],eax
  415833:	mov    esi,DWORD PTR [ecx-0x7f]
  415836:	idiv   edi
  415838:	push   eax
  415839:	add    esi,edx
  41583b:	add    DWORD PTR ds:0xe787440f,esp
  415841:	mov    dh,BYTE PTR [ecx+0x1b]
  415844:	xrelease mov DWORD PTR [ebx],eax
  415847:	jne    0x415857
  415849:	add    eax,0x89f30f78
  41584e:	add    ecx,DWORD PTR [ecx-0x87e87]
  415854:	sbb    cl,cl
  415856:	jl     0x415805
  415858:	repz lea eax,[ebx]
  41585b:	add    BYTE PTR [esi+0x7],bh
  41585e:	repnz add esi,edi
  415861:	mov    DWORD PTR [esi-0x7b],edi
  415864:	fild   WORD PTR [ebp-0x7b82fffd]
  41586a:	add    eax,0x7d4be9c9
  41586f:	(bad)  
	...
  41587c:	adc    al,0x7f
  41587e:	jp     0x415887
  415880:	inc    ebp
  415881:	adc    DWORD PTR [eax],esi
  415883:	out    0xae,eax
  415885:	cwde   
  415886:	add    bh,dh
  415888:	jl     0x4158cf
  41588a:	test   edi,ebx
  41588c:	sti    
  41588d:	pop    ebx
  41588e:	jge    0x41585d
  415890:	iret   
  415891:	sar    bh,1
  415893:	std    
  415894:	mov    al,0x1
  415896:	xor    al,BYTE PTR [edx-0x754b756a]
  41589c:	mov    cl,0xb4
  41589e:	inc    edx
  41589f:	sti    
  4158a0:	cwde   
  4158a1:	fld    QWORD PTR [esi+0x7d7cf6e6]
  4158a7:	int    0x9f
  4158a9:	sbb    bh,bh
  4158ab:	std    
  4158ac:	and    BYTE PTR [ebx+0x40],0xa6
  4158b0:	sbb    esp,DWORD PTR [ecx-0x538bfc0b]
  4158b6:	nop
  4158b7:	add    bh,BYTE PTR [ecx+0x7f]
  4158ba:	loope  0x4158bf
  4158bc:	imul   edi
  4158be:	push   ss
  4158bf:	sti    
  4158c0:	jecxz  0x41593d
  4158c2:	je     0x415941
  4158c4:	add    BYTE PTR [edi-0x13],ah
  4158c7:	add    edi,DWORD PTR [esi-0x1b]
  4158ca:	aad    0xff
  4158cc:	inc    eax
  4158cd:	sahf   
  4158ce:	lods   eax,DWORD PTR ds:[esi]
  4158cf:	jp     0x41585b
  4158d1:	jg     0x4158b4
  4158d3:	add    esi,edi
  4158d5:	jmp    0x41593e
  4158d7:	repz hlt 
  4158d9:	(bad)  
  4158da:	in     eax,dx
  4158db:	js     0x415957
  4158dd:	jnp    0x4158c8
  4158df:	add    eax,DWORD PTR [eax]
	...
  4158e9:	add    BYTE PTR [eax],al
  4158eb:	add    bh,dh
  4158ed:	call   0x9d665acf
  4158f2:	sub    edi,DWORD PTR [ebx-0x8]
  4158f5:	arpl   WORD PTR [edi-0x19],dx
  4158f8:	hlt    
  4158f9:	(bad)  
  4158fa:	in     eax,dx
  4158fb:	mov    ds,edi
  4158fd:	jmp    0x63364c61
  415902:	in     eax,dx
  415903:	jp     0x415977
  415905:	jp     0x4158e8
  415907:	add    esi,edi
  415909:	and    dh,BYTE PTR [esi+0x55]
  41590c:	cld    
  41590d:	in     ax,dx
  41590f:	add    edi,DWORD PTR [esi-0x1c]
  415912:	(bad)  
  415914:	enter  0x649d,0x7d
  415918:	call   0x6d454683
  41591d:	jb     0x41590a
  41591f:	aad    0xb1
  415921:	mov    al,ds:0xefa81465
  415926:	jmp    0x3aa45032
  41592b:	sbb    eax,0x7dde46e
  415930:	mul    DWORD PTR [edx+0x6]
  415933:	pusha  
  415934:	jge    0x4159b0
  415936:	add    ch,cl
  415938:	hlt    
  415939:	and    cl,BYTE PTR [ebp+0x666d757]
  41593f:	jmp    0xed583dc7
  415944:	hlt    
  415945:	bound  ecx,QWORD PTR [ebx+0x6670367]
  41594b:	jmp    0x9b45cbba
	...
  41595c:	cmc    
  41595d:	mov    eax,ds:0xecf3d98e
  415962:	sbb    ah,ch
  415964:	hlt    
  415965:	bound  esi,QWORD PTR [ecx+0x0]
  415968:	push   0xf4e516e4
  41596d:	bound  ecx,QWORD PTR [ebp+0x6670b6f]
  415973:	jmp    0xe5ea3f2c
  415978:	lock bound eax,QWORD PTR [esi]
  41597b:	jo     0x4159fa
  41597d:	jb     0x415981
  41597f:	jmp    0xd1c24578
  415984:	clc    
  415985:	bound  eax,QWORD PTR [esi]
  415987:	cmp    ebx,edx
  415989:	popf   
  41598a:	mov    ebp,edi
  41598c:	clc    
  41598d:	bound  eax,QWORD PTR [esi]
  41598f:	pushf  
  415990:	or     ebp,edx
  415992:	cmp    cl,0xf8
  415995:	bound  eax,QWORD PTR [esi]
  415997:	jo     0x415a06
  415999:	jnp    0x41599d
  41599b:	jmp    0x47ce7c94
  4159a0:	pop    ss
  4159a1:	addr16 push es
  4159a3:	jmp    0xed583f1b
  4159a8:	hlt    
  4159a9:	bound  ecx,QWORD PTR [ebx+0x6670c67]
  4159af:	jmp    0x5f469d78
  4159b4:	add    BYTE PTR [edi+0x6],ah
  4159b7:	add    BYTE PTR [esi+0x188b0f1b],cl
  4159bd:	jo     0x4159c1
	...
  4159cb:	add    BYTE PTR [esi-0x65e77f11],bl
  4159d1:	pusha  
  4159d2:	push   es
  4159d3:	inc    eax
  4159d4:	pop    es
  4159d5:	rcr    BYTE PTR [edx],cl
  4159d7:	add    al,0x5e
  4159d9:	pusha  
  4159da:	jg     0x415962
  4159dc:	outs   dx,BYTE PTR ds:[esi]
  4159dd:	fs push es
  4159df:	add    ch,dl
  4159e1:	jmp    0x608f5e04
  4159e6:	(bad)  
  4159e7:	and    BYTE PTR [edi-0xe],bl
  4159ea:	sbb    al,BYTE PTR [esi+ebx*2]
  4159ed:	pusha  
  4159ee:	jae    0x415a09
  4159f0:	aad    0xe9
  4159f2:	push   ss
  4159f3:	add    al,0x4e
  4159f5:	pusha  
  4159f6:	jg     0x41597e
  4159f8:	imul   BYTE PTR [edx+0x6]
  4159fb:	add    BYTE PTR [esi-0x11],bl
  4159fe:	test   al,0x1c
  415a00:	sbb    ah,BYTE PTR [eax+0x6]
  415a03:	mov    DWORD PTR [eax+0x1e00026f],ecx
  415a09:	in     eax,dx
  415a0a:	mov    al,0x18
  415a0c:	sbb    ah,BYTE PTR [eax+0x6]
  415a0f:	sar    al,1
  415a11:	add    BYTE PTR [ebx-0x3e],bl
  415a14:	push   es
  415a15:	pusha  
  415a16:	lea    eax,[edx+edi*4+0x63]
  415a1a:	push   eax
  415a1b:	push   edi
  415a1c:	push   ebp
  415a1d:	sbb    al,0x22
  415a1f:	adc    BYTE PTR [ebp-0x69],dl
  415a22:	cmp    eax,DWORD PTR [eax+0x73065fce]
  415a28:	mov    dl,0xe4
  415a2a:	stc    
  415a2b:	add    al,0x4d
  415a2d:	jns    0x415a6c
  415a2f:	xchg   BYTE PTR [eax],al
	...
  415a39:	add    BYTE PTR [eax],al
  415a3b:	add    BYTE PTR [edx+0x1a000663],bh
  415a41:	cmp    esi,ecx
  415a43:	fdiv   st,st(5)
  415a45:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415a46:	test   eax,esp
  415a48:	test   DWORD PTR [ebx-0x79487e9a],0x89efc265
  415a52:	cmp    al,BYTE PTR [esi+0x385db]
  415a58:	add    edx,DWORD PTR [edi-0x76087fc8]
  415a5e:	add    esi,DWORD PTR [ecx-0xe]
  415a61:	or     ch,dh
  415a63:	add    bl,BYTE PTR [ecx+ebx*4+0x38]
  415a67:	add    dl,dh
  415a69:	mov    DWORD PTR [ebx],eax
  415a6b:	jb     0x415a63
  415a6d:	jl     0x415aa6
  415a6f:	add    dl,bl
  415a71:	mov    DWORD PTR [ebx],eax
  415a73:	jb     0x415a6b
  415a75:	dec    esp
  415a76:	ret    
  415a77:	call   0xc0c2d37b
  415a7c:	hlt    
  415a7d:	jns    0x415a69
  415a7f:	es cmp eax,0x7c560504
  415a85:	dec    ebx
  415a86:	mov    eax,ebx
  415a88:	pop    ds
  415a89:	xchg   ebp,eax
  415a8a:	stc    
  415a8b:	std    
  415a8c:	and    BYTE PTR [esi],bh
  415a8e:	dec    esi
  415a8f:	sbb    ch,ch
  415a91:	shl    BYTE PTR [esi+0x5e],0x35
  415a95:	xchg   ecx,eax
  415a96:	add    edx,DWORD PTR [ebp+0x1f]
  415a99:	test   ecx,edi
  415a9b:	std    
  415a9c:	add    ah,ch
  415a9e:	add    al,0x0
	...
  415aa9:	add    BYTE PTR [eax],al
  415aab:	add    bl,dh
  415aad:	mov    ds:0xdcf708c1,eax
  415ab2:	mov    bl,BYTE PTR [ebx+edx*1-0x7c]
  415ab6:	push   eax
  415ab7:	push   esi
  415ab8:	ins    BYTE PTR es:[edi],dx
  415ab9:	jnp    0x415a3c
  415abb:	mov    esi,0x3880f
  415ac0:	div    eax
  415ac2:	push   ss
  415ac3:	test   ah,ch
  415ac5:	mov    al,BYTE PTR [ebx]
  415ac7:	add    BYTE PTR [esi-0x6b],dh
  415aca:	add    DWORD PTR [eax],0xfffffff7
  415acd:	(bad)  
  415ace:	in     eax,dx
  415acf:	je     0x415ac1
  415ad1:	in     eax,0x59
  415ad3:	sub    BYTE PTR [edi],cl
  415ad5:	pop    edi
  415ad6:	pop    esp
  415ad7:	ds (bad) 
  415ad9:	push   edx
  415ada:	aam    0x0
  415adc:	cdq    
  415add:	out    dx,al
  415ade:	scas   eax,DWORD PTR es:[edi]
  415adf:	jmp    0x415aa8
  415ae1:	popf   
  415ae2:	mov    eax,0xc5a97d00
  415ae7:	std    
  415ae8:	jge    0x415a84
  415aea:	test   al,0x8d
  415aec:	xor    edi,DWORD PTR [edi]
  415aee:	add    eax,0xe173898d
  415af3:	add    esi,edi
  415af5:	in     al,dx
  415af6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415af7:	daa    
  415af8:	pusha  
  415af9:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  415afb:	add    eax,0x5753a98
  415b00:	push   edx
  415b01:	loope  0x415ae0
  415b03:	pop    es
  415b04:	mul    DWORD PTR [edx+0x66]
  415b07:	mov    eax,ds:0x3ed5f1b
  415b0c:	cdq    
  415b0d:	aaa    
  415b0e:	(bad)  
  415b0f:	lds    eax,FWORD PTR [eax]
	...
  415b19:	add    BYTE PTR [eax],al
  415b1b:	add    bh,bh
  415b1d:	bound  ebp,QWORD PTR [eax+edx*8+0x2a]
  415b21:	fs (bad) 
  415b23:	pop    ds
  415b24:	sti    
  415b25:	(bad)  
  415b26:	in     eax,dx
  415b27:	mov    cs,WORD PTR [edx+0x7e1aba6b]
  415b2d:	loope  0x415b0c
  415b2f:	pop    es
  415b30:	mul    DWORD PTR [edx+0x66]
  415b33:	mov    edi,ebx
  415b35:	pop    esi
  415b36:	in     eax,dx
  415b37:	add    esi,DWORD PTR [edi-0x4e0b015]
  415b3d:	(bad)  
  415b3e:	in     eax,dx
  415b3f:	mov    dh,BYTE PTR [ecx+0x72]
  415b42:	jmp    0x602f524a
  415b47:	sbb    esi,ebx
  415b49:	(bad)  
  415b4a:	in     eax,dx
  415b4b:	(bad)  
  415b4c:	jmp    DWORD PTR [esi+esi*1+0x1]
  415b50:	mov    bh,0xea
  415b52:	push   es
  415b53:	loope  0x415b4a
  415b55:	fcomp  DWORD PTR [edx]
  415b57:	in     eax,0xf4
  415b59:	bound  esi,QWORD PTR [ecx+0x0]
  415b5c:	jl     0x415b3e
  415b5e:	push   ss
  415b5f:	in     eax,0xf4
  415b61:	bound  ecx,QWORD PTR [ebp+0x65f036f]
  415b67:	jmp    0xe5ea3da0
  415b6c:	clc    
  415b6d:	bound  eax,QWORD PTR [esi]
  415b6f:	jo     0x415be2
  415b71:	jb     0x415b75
  415b73:	jmp    0xd1c2476c
  415b78:	lock bound eax,QWORD PTR [esi]
  415b7b:	mov    ecx,0xa8d3ec1b
	...
  415b8c:	pop    ebp
  415b8d:	push   0xffffff83
  415b8f:	stos   DWORD PTR es:[edi],eax
  415b90:	cmc    
  415b91:	xor    al,0x8b
  415b93:	lahf   
  415b94:	dec    ebx
  415b95:	mov    eax,ds:0xeb5086fc
  415b9a:	sbb    cl,0xf0
  415b9d:	bound  eax,QWORD PTR [esi]
  415b9f:	popa   
  415ba0:	jecxz  0x415b7c
  415ba2:	add    eax,0x562f4e9
  415ba7:	outs   dx,DWORD PTR ds:[esi]
  415ba8:	or     ebx,DWORD PTR [edi+0x6]
  415bab:	jmp    0xed64542b
  415bb0:	hlt    
  415bb1:	bound  eax,QWORD PTR [ebp+0x6627352]
  415bb7:	jmp    0xcdc4d641
  415bbc:	sar    BYTE PTR [edx+0x4],1
  415bbf:	bound  esp,QWORD PTR [edi+0x6d981e3e]
  415bc5:	test   al,0xee
  415bc7:	jle    0x415bb6
  415bc9:	xchg   esi,eax
  415bca:	idiv   DWORD PTR [esi+0x2b5b3c4a]
  415bd0:	repz bound eax,QWORD PTR [ebp+0x663f312]
  415bd7:	add    dh,bl
  415bd9:	adc    al,BYTE PTR [edx]
  415bdb:	sub    DWORD PTR [edx-0x3a7ee1c0],edx
  415be1:	fs jnp 0x415be4
  415be4:	into   
  415be5:	adc    al,BYTE PTR [edx]
  415be7:	sub    edx,esp
  415be9:	dec    edx
  415bea:	push   ds
  415beb:	mov    ebx,edx
  415bed:	dec    edx
  415bee:	push   ds
  415bef:	push   ecx
	...
  415bfc:	adc    eax,0xc46ceea6
  415c01:	cdq    
  415c02:	stc    
  415c03:	pop    edi
  415c04:	fadd   DWORD PTR [ecx]
  415c06:	pop    ebp
  415c07:	ret    0x6486
  415c0a:	rol    DWORD PTR [esi+0x66af6],0x8f
  415c11:	fs push es
  415c13:	add    bh,bl
  415c15:	pushf  
  415c16:	xchg   BYTE PTR [eax],al
  415c18:	pop    esi
  415c19:	fs jne 0x415c65
  415c1c:	int    0x17
  415c1e:	and    bl,BYTE PTR [eax]
  415c20:	push   edx
  415c21:	adc    eax,0x3fd83b44
  415c26:	add    al,BYTE PTR [eax]
  415c28:	pop    esi
  415c29:	adc    BYTE PTR [eax+ebp*8],bh
  415c2c:	push   esp
  415c2d:	call   0x3ee:0xa5d5fff9
  415c34:	xchg   esp,eax
  415c35:	cwde   
  415c36:	stc    
  415c37:	mov    ebx,eax
  415c39:	mov    ecx,ebx
  415c3b:	stc    
  415c3c:	leave  
  415c3d:	cwde   
  415c3e:	mov    WORD PTR [edx+esi*8+0x76],es
  415c42:	lea    ecx,[esi+0x6602e]
  415c48:	test   BYTE PTR [edx+eiz*1+0x4b20c01],dh
  415c4f:	ret    0xec69
  415c52:	idiv   esi
  415c54:	pusha  
  415c55:	je     0x415c59
  415c57:	add    dh,bl
  415c59:	out    0x98,al
  415c5b:	and    al,0xf7
  415c5d:	test   DWORD PTR [ebx],eax
	...
  415c6b:	add    BYTE PTR [ecx],bh
  415c6d:	(bad)  
  415c6e:	pop    esp
  415c6f:	ret    0x89ff
  415c72:	test   ch,cl
  415c74:	enter  0xb98a,0x1c
  415c78:	sti    
  415c79:	mov    DWORD PTR [ebx],eax
  415c7b:	mov    ecx,DWORD PTR [eax-0x7d]
  415c7e:	jle    0x415c97
  415c80:	jl     0x415c89
  415c82:	adc    al,BYTE PTR [edi+esi*8]
  415c85:	mov    DWORD PTR [esi+eax*4+0x385ff],ecx
  415c8c:	aaa    
  415c8d:	add    ebp,DWORD PTR [eax+0x389fb1c]
  415c93:	xchg   DWORD PTR [ecx-0x47],esi
  415c96:	(bad)  
  415c97:	push   edi
  415c99:	add    al,0x80
  415c9b:	sbb    bl,dh
  415c9d:	mov    DWORD PTR [ebx],eax
  415c9f:	mov    al,BYTE PTR [edi]
  415ca1:	mov    ebp,ss
  415ca3:	(bad)  
  415ca4:	xor    eax,0xa2ff1211
  415ca9:	(bad)  
  415caa:	(bad)  
  415cab:	push   edi
  415cad:	outs   dx,BYTE PTR ds:[esi]
  415cae:	sbb    ecx,DWORD PTR [ecx-0x4687]
  415cb4:	not    DWORD PTR [edx]
  415cb6:	sbb    BYTE PTR [eax],0xfb
  415cb9:	mov    DWORD PTR [ebx],eax
  415cbb:	inc    eax
  415cbc:	outs   dx,BYTE PTR ds:[esi]
  415cbd:	push   edi
  415cbe:	es add al,0xf7
  415cc1:	mov    DWORD PTR [esi+eax*4+0x37e07],ecx
  415cc8:	ins    BYTE PTR es:[edi],dx
  415cc9:	pop    es
  415cca:	sbb    al,BYTE PTR [edi+esi*8]
  415ccd:	mov    ebx,edx
  415ccf:	and    BYTE PTR [eax],al
	...
  415cd9:	add    BYTE PTR [eax],al
  415cdb:	add    ah,cl
  415cdd:	jmp    FWORD PTR ds:0x6f89f704
  415ce3:	jb     0x415d51
  415ce5:	dec    esp
  415ce6:	ret    
  415ce7:	call   0x20369db
  415cec:	inc    edi
  415ced:	arpl   WORD PTR ds:0x1896e096,dx
  415cf3:	mov    DWORD PTR [ecx+0x73],esi
  415cf6:	jmp    0xf72c53fe
  415cfb:	mov    ebx,0x3ed96d0
  415d00:	enter  0xdde0,0x7
  415d04:	mul    DWORD PTR [edx+0x66]
  415d07:	sahf   
  415d08:	adc    ebx,DWORD PTR [edi-0x13]
  415d0b:	add    esi,DWORD PTR [eax]
  415d0d:	call   0x1c5c:0x62f7036d
  415d14:	jbe    0x415d1d
  415d16:	or     DWORD PTR [esi*8-0x10d7ce17],ebx
  415d1d:	xor    BYTE PTR [ebp+ecx*8-0x61],dh
  415d21:	inc    ebp
  415d23:	cld    
  415d24:	xor    BYTE PTR [esi],0xf
  415d27:	pop    edi
  415d28:	push   ds
  415d29:	mov    eax,ds:0x99f003e5
  415d2e:	in     eax,dx
  415d2f:	push   es
  415d30:	mul    DWORD PTR [edx+0x1b]
  415d33:	or     BYTE PTR [eax],bl
  415d35:	pop    ds
  415d36:	leave  
  415d37:	sbb    ebx,eax
  415d39:	cdq    
  415d3a:	in     eax,dx
  415d3b:	jle    0x415d34
  415d3d:	(bad)  
  415d3e:	sti    
  415d3f:	push   0x0
	...
  415d49:	add    BYTE PTR [eax],al
  415d4b:	add    BYTE PTR [eax],dl
  415d4d:	pop    ds
  415d4e:	rcr    DWORD PTR [ebx],0x6e
  415d51:	das    
  415d52:	leave  
  415d53:	sbb    esp,DWORD PTR [ebp-0x17146817]
  415d59:	fwait
  415d5a:	pusha  
  415d5b:	cld    
  415d5c:	retf   0xba34
  415d5f:	pop    eax
  415d60:	xor    eax,0x5902ed6b
  415d65:	ja     0x415d48
  415d67:	add    esi,edi
  415d69:	(bad)  
  415d6b:	mov    BYTE PTR [ecx+0x73],dh
  415d6e:	loope  0x415d73
  415d70:	imul   ebx
  415d72:	push   es
  415d73:	outs   dx,DWORD PTR ds:[esi]
  415d74:	fcomp  QWORD PTR [esi+0x6]
  415d77:	jmp    0x5ea3bb0
  415d7c:	jmp    DWORD PTR [edx+0x6]
  415d7f:	jo     0x415dfb
  415d81:	jb     0x415d85
  415d83:	jmp    0xf1c2497c
  415d88:	clc    
  415d89:	bound  eax,QWORD PTR [esi]
  415d8b:	sbb    DWORD PTR [esi+edx*4],edx
  415d8e:	mov    ecx,0x662f8dd
  415d93:	jl     0x415d72
  415d95:	jmp    0x415d17
  415d97:	fprem  
  415d99:	bound  eax,QWORD PTR [esi]
  415d9b:	jo     0x415e12
  415d9d:	jp     0x415da1
  415d9f:	jmp    0x87ce8098
  415da4:	call   FWORD PTR [esi+0x6]
  415da7:	jmp    0xed583a2f
  415dac:	hlt    
  415dad:	bound  ecx,QWORD PTR [ebx+0x67]
	...
  415dbb:	add    bl,ah
  415dbd:	pop    esi
  415dbe:	push   es
  415dbf:	jmp    0x15cca068
  415dc4:	pop    ss
  415dc5:	jnp    0x415e1b
  415dc7:	jb     0x415e06
  415dc9:	mov    dl,dl
  415dcb:	mov    eax,ds:0x3757975c
  415dd0:	mov    esi,0xf4e1c43b
  415dd5:	jmp    0x415e19
  415dd7:	int    0x48
  415dd9:	call   0x960e4774
  415dde:	div    DWORD PTR [edx-0x16fda19d]
  415de4:	hlt    
  415de5:	or     al,0x1d
  415de7:	jb     0x415e63
  415de9:	data16 add ch,cl
  415dec:	hlt    
  415ded:	pop    ebx
  415dee:	(bad)
  415df1:	dec    ebx
  415df2:	lds    ebp,FWORD PTR [ebx]
  415df4:	mul    DWORD PTR [edx+0x2b]
  415df7:	add    bh,bl
  415df9:	arpl   WORD PTR [esi],ax
  415dfb:	push   0x4c4610f
  415e00:	push   cs
  415e01:	dec    esp
  415e02:	mov    dl,0xda
  415e05:	pusha  
  415e06:	test   esp,ebp
  415e08:	out    dx,al
  415e09:	sub    eax,0x74728b53
  415e0e:	es push esi
  415e10:	mov    ebp,0x89f18db5
  415e15:	out    0x5a,eax
  415e17:	and    al,0xae
  415e19:	out    0x5a,eax
  415e1b:	and    al,0xd6
  415e1d:	push   edi
  415e1e:	test   al,0x8
	...
  415e2c:	retf   0x660
  415e2f:	nop    DWORD PTR [esi+eax*1+0xd859e00]
  415e37:	lea    edi,[edx+0x74]
  415e3a:	push   es
  415e3b:	add    BYTE PTR [esi-0x59b74a0],cl
  415e41:	pop    esi
  415e42:	lea    eax,[esi-0x86b66]
  415e48:	adc    ebp,eax
  415e4a:	push   es
  415e4b:	push   0xc83d608f
  415e50:	sub    BYTE PTR [eax-0x73],dh
  415e53:	mov    fs,WORD PTR [edx-0x6c]
  415e56:	idiv   edi
  415e58:	push   ebp
  415e59:	lahf   
  415e5a:	jo     0x415e60
  415e5c:	xor    eax,0x350bed9f
  415e61:	lahf   
  415e62:	add    eax,DWORD PTR [eax]
  415e64:	out    0x5d,al
  415e66:	push   es
  415e67:	jmp    0x415eb5
  415e69:	dec    ebp
  415e6a:	(bad)  
  415e6b:	mov    edx,eax
  415e6d:	add    al,BYTE PTR [bx+si]
  415e70:	push   ds
  415e71:	imul   esi,DWORD PTR [eax+0x3fd22111],0x9023a501
  415e7b:	add    al,0xf7
  415e7d:	add    bh,bh
  415e7f:	mov    DWORD PTR [esp+eiz*2-0x77],edi
  415e83:	or     al,0x70
  415e85:	adc    DWORD PTR [ebp+0x389fb08],eax
  415e8b:	or     eax,0xb60cba41
	...
  415e9c:	aaa    
  415e9d:	mov    ecx,DWORD PTR [eax-0x777a7eb4]
  415ea3:	xchg   esi,eax
  415ea4:	sti    
  415ea5:	jge    0x415eaa
  415ea7:	add    BYTE PTR [esi-0x6b],ch
  415eaa:	xor    BYTE PTR [edi+0x389f6],0xf6
  415eb1:	or     esi,edi
  415eb3:	add    esi,edi
  415eb5:	mov    DWORD PTR [edx],eax
  415eb7:	mov    gs,edi
  415eb9:	test   DWORD PTR [ebx],eax
  415ebb:	add    BYTE PTR [ebx+edi*8-0xa],bh
  415ebf:	add    esi,edi
  415ec1:	mov    DWORD PTR [edx+0xe03ccc8],ecx
  415ec7:	add    al,0xf7
  415ec9:	mov    DWORD PTR [edi+esi*8+0x321f7],eax
  415ed0:	add    DWORD PTR [ebp-0x7a8678b5],eax
  415ed6:	idiv   edi
  415ed8:	js     0x415e6c
  415eda:	lods   eax,DWORD PTR ds:[esi]
  415edb:	or     bl,bh
  415edd:	mov    DWORD PTR [ebx],eax
  415edf:	or     eax,0xfdfd6f75
  415ee4:	pusha  
  415ee5:	adc    BYTE PTR [esi+0x24],al
  415ee8:	daa    
  415ee9:	xor    BYTE PTR [edx],al
  415eeb:	test   BYTE PTR gs:[ecx-0x7c3e3dc6],0x8c
  415ef3:	push   esp
  415ef4:	sbb    ebx,edx
  415ef6:	jmp    0x790d:0x3117407
  415efd:	mov    edi,0x3
	...
  415f0a:	add    BYTE PTR [eax],al
  415f0c:	mul    DWORD PTR [edx-0x10]
  415f0f:	mov    cl,0xb4
  415f11:	(bad)  
  415f12:	call   0x64a30bc8
  415f17:	inc    eax
  415f18:	jns    0x415f78
  415f1a:	cmp    BYTE PTR fs:[edi+0x57],bh
  415f1e:	inc    esp
  415f1f:	or     DWORD PTR [ebx-0x31],edi
  415f22:	out    dx,al
  415f23:	add    esi,edi
  415f25:	out    0x5f,eax
  415f27:	and    al,0xfb
  415f29:	(bad)  
  415f2a:	in     eax,dx
  415f2b:	xchg   bl,dh
  415f2d:	popa   
  415f2e:	sub    BYTE PTR [eax+0x1b],al
  415f31:	outs   dx,DWORD PTR ds:[esi]
  415f32:	in     eax,dx
  415f33:	or     esi,edi
  415f35:	(bad)  
  415f36:	aam    0xbe
  415f38:	inc    ebp
  415f39:	dec    ebp
  415f3a:	fs stc 
  415f3c:	push   cs
  415f3d:	mov    ?,WORD PTR [ecx+0x2f]
  415f40:	ins    BYTE PTR es:[edi],dx
  415f41:	jmp    0x81b4:0x92b86bed
  415f48:	sti    
  415f49:	in     ax,dx
  415f4b:	add    esp,DWORD PTR [ecx]
  415f4d:	imul   esi,DWORD PTR [ecx+eax*4-0xd],0x66
  415f52:	in     eax,dx
  415f53:	add    ebx,esi
  415f55:	mov    dl,BYTE PTR [edi+0x0]
  415f58:	fimul  WORD PTR [edx-0x7521f83c]
  415f5e:	outs   dx,BYTE PTR ds:[esi]
  415f5f:	shl    bh,0xfa
  415f62:	in     eax,dx
  415f63:	add    ecx,DWORD PTR [esi+0x7ef8fc65]
  415f69:	imul   esp,DWORD PTR [edi+esi*1-0x51],0x8e9e0
	...
  415f79:	add    BYTE PTR [eax],al
  415f7b:	add    BYTE PTR [esi],bl
  415f7d:	test   al,0x1c
  415f7f:	int3   
  415f80:	and    BYTE PTR [edi],dh
  415f82:	leave  
  415f83:	daa    
  415f84:	leave  
  415f85:	data16 dec di
  415f88:	adc    edi,DWORD PTR [edi]
  415f8a:	(bad)  
  415f8b:	cld    
  415f8c:	repnz out 0x1b,al
  415f8f:	add    esi,edi
  415f91:	bound  eax,QWORD PTR [esi]
  415f93:	fs xchg ebx,eax
  415f95:	arpl   WORD PTR [esi],ax
  415f97:	jmp    0x130b3b90
  415f9c:	xor    ebp,edx
  415f9e:	dec    edx
  415f9f:	add    eax,0xd4a4c07
  415fa4:	fistp  WORD PTR [edi+0x7f]
  415fa7:	adc    esi,esp
  415fa9:	bound  eax,QWORD PTR [esi]
  415fab:	jb     0x415f65
  415fad:	inc    esi
  415fae:	push   ss
  415faf:	jae    0x415f99
  415fb1:	xchg   ecx,eax
  415fb2:	cmp    eax,0x8b62f99d
  415fb7:	popf   
  415fb8:	or     BYTE PTR [edi-0x45],dh
  415fbb:	jmp    0x415fb1
  415fbd:	bound  eax,QWORD PTR [esi]
  415fbf:	xchg   ebp,eax
  415fc0:	lock dec ebx
  415fc2:	mov    ch,cl
  415fc4:	rcl    BYTE PTR [ecx-0x62b62109],1
  415fca:	push   es
  415fcb:	jmp    0xc5943bc4
  415fd0:	add    al,0x4c
  415fd2:	fdivr  QWORD PTR [edx-0x2b]
  415fd5:	fisttp QWORD PTR [ecx-0x15]
  415fd8:	jnp    0x416054
  415fda:	sub    edx,DWORD PTR [ebp-0x29]
  415fdd:	cmp    cl,BYTE PTR [ebp+eiz*1+0x0]
	...
  415fec:	out    dx,al
  415fed:	bound  edi,QWORD PTR [eax+ebp*8]
  415ff0:	pop    es
  415ff1:	imul   eax,DWORD PTR [ebx+0x28],0xbb74accc
  415ff8:	ins    BYTE PTR es:[edi],dx
  415ff9:	push   ds
  415ffa:	and    dl,ch
  415ffc:	ins    DWORD PTR es:[edi],dx
  415ffd:	(bad)  
  415ffe:	and    DWORD PTR [ecx],eax
  416000:	sub    al,0xad
  416002:	pop    es
  416003:	gs push edx
  416005:	bound  eax,QWORD PTR [esi]
  416007:	jmp    0xf9638f29
  41600c:	retf   0x5327
  41600f:	cmp    BYTE PTR [eax+eiz*4-0x12],bh
  416013:	pop    ebx
  416014:	dec    ebp
  416015:	(bad)  
  416016:	test   DWORD PTR [eax],0x10221ac5
  41601c:	lds    esi,FWORD PTR [edx]
  41601e:	and    bl,BYTE PTR [eax]
  416020:	sysexit 
  416022:	(bad)  
  416023:	into   
  416024:	xchg   ebp,eax
  416025:	jle    0x416015
  416027:	lahf   
  416028:	xchg   esp,eax
  416029:	cdq    
  41602a:	stc    
  41602b:	sub    eax,esi
  41602d:	fisttp QWORD PTR [edx+0x24]
  416030:	adc    ah,BYTE PTR [ebx+ebp*8-0x48]
  416034:	imul   ecx,DWORD PTR [ecx+0x7bc14ec2],0x3ef26c8d
  41603e:	mov    bh,0xfa
  416040:	(bad)  
  416042:	(bad)
  416046:	add    eax,0x2250cdc2
  41604b:	adc    ch,dl
  41604d:	lods   al,BYTE PTR ds:[esi]
  41604e:	jo     0x416056
	...
  41605c:	push   edi
  41605d:	sbb    esp,DWORD PTR [edx]
  41605f:	sbb    ch,dh
  416061:	sbb    al,0x3d
  416063:	mov    ?,WORD PTR [edx+0x43fff790]
  416069:	dec    esi
  41606a:	push   ebp
  41606b:	push   ecx
  41606c:	adc    eax,0xa463eea9
  416071:	cdq    
  416072:	stc    
  416073:	mov    esp,edx
  416075:	inc    edx
  416076:	push   ss
  416077:	mov    eax,esi
  416079:	fld    QWORD PTR [edx+0x24]
  41607c:	xchg   BYTE PTR [edx],dh
  41607e:	push   esi
  41607f:	mov    ebp,DWORD PTR [eax+0x7c]
  416082:	push   esi
  416083:	cli    
  416084:	mov    ecx,0xe5c88d99
  416089:	cdq    
  41608a:	lea    ebp,[edx+eax*1+0x3f]
  41608e:	mov    esi,0x2cba74ab
  416093:	test   DWORD PTR [edi-0x783e3323],0xf7ca0579
  41609d:	jl     0x41606b
  41609f:	cmp    DWORD PTR [ebx-0xc8dec5b],edi
  4160a5:	adc    al,0x47
  4160a7:	and    al,0xe3
  4160a9:	adc    al,BYTE PTR [edi+0x24]
  4160ac:	lsl    ecx,WORD PTR [edi+0x24]
  4160b0:	pop    es
  4160b1:	das    
  4160b2:	js     0x4160b4
  4160b4:	(bad)  
  4160b5:	jp     0x4160ba
  4160b7:	cmp    DWORD PTR [ecx-0x7a],esi
  4160ba:	idiv   edi
  4160bc:	adc    BYTE PTR [eax+0x891b],dh
	...
  4160ca:	add    BYTE PTR [eax],al
  4160cc:	jno    0x41607c
  4160ce:	idiv   edi
  4160d0:	add    BYTE PTR [ebp-0x6],ah
  4160d3:	jbe    0x4160c8
  4160d5:	je     0x4160d1
  4160d7:	jmp    0x803bc5df
  4160dc:	mov    al,0x79
  4160de:	imul   edi,edi,0xffffffe0
  4160e1:	je     0x4160e8
  4160e3:	xor    eax,ebx
  4160e5:	adc    al,0x1
  4160e7:	mov    DWORD PTR [ebx],edx
  4160e9:	xor    ecx,DWORD PTR [esi+eax*4+0x38617]
  4160f0:	hlt    
  4160f1:	inc    eax
  4160f2:	test   BYTE PTR [ebx+edx*1-0x52],ch
  4160f6:	add    dh,BYTE PTR [ebp+eax*1-0x1]
  4160fa:	out    dx,eax
  4160fb:	or     eax,0xfdf13f72
  416100:	mov    al,ds:0x2b870ab4
  416105:	data16 sbb al,BYTE PTR [edi-0x76eda1cd]
  41610c:	xor    esp,DWORD PTR [esi+0x26]
  41610f:	mov    DWORD PTR [ebx],ebp
  416111:	pop    esi
  416112:	adc    cl,BYTE PTR [ecx+0x5d1a662b]
  416118:	shl    DWORD PTR [esi-0x75],1
  41611b:	push   eax
  41611c:	repz add cl,BYTE PTR [edx]
  41611f:	pop    ecx
  416120:	je     0x416184
  416122:	test   eax,0xed723514
  416127:	and    BYTE PTR [ebx+0x4a],0x6c
  41612b:	js     0x416140
  41612d:	daa    
  41612e:	in     eax,dx
  41612f:	dec    ebp
	...
  41613c:	outs   dx,BYTE PTR ds:[esi]
  41613d:	xchg   ecx,eax
  41613e:	cli    
  41613f:	or     al,BYTE PTR [esi]
  416141:	mov    ds:0x4a3b8117,eax
  416146:	stos   DWORD PTR es:[edi],eax
  416147:	sbb    al,0xf7
  416149:	(bad)  [ecx]
  41614b:	and    BYTE PTR [edi-0x1290d21b],dh
  416151:	jecxz  0x416188
  416153:	cmc    
  416154:	mov    cl,0xe3
  416156:	sub    DWORD PTR [esi*1-0x4c771296],edi
  41615d:	inc    esi
  41615e:	test   eax,0x4716307e
  416163:	mov    DWORD PTR [ebx+0x47],ecx
  416166:	mov    eax,ds:0x3f17c57e
  41616b:	mov    edi,DWORD PTR [ecx+0x77]
  41616e:	jmp    0x765c5876
  416173:	jle    0x41618c
  416175:	addr16 in eax,dx
  416177:	add    esi,DWORD PTR [eax-0x23]
  41617a:	std    
  41617b:	inc    eax
  41617d:	mov    es,WORD PTR [ebp-0x1a]
  416180:	mov    esi,0xb831547d
  416185:	ss loopne 0x416135
  416188:	pusha  
  416189:	arpl   WORD PTR [ebp-0x524c08be],di
  41618f:	xor    BYTE PTR [edx-0x6f4570a2],dh
  416195:	ds cs add al,0xb8
  416199:	mov    ds:0xd4f2bd1c,eax
  41619e:	xchg   BYTE PTR [ecx],al
	...
  4161ac:	(bad)  
  4161ad:	and    ebp,ebp
  4161af:	shl    BYTE PTR [edi],cl
  4161b1:	push   edx
  4161b2:	push   es
  4161b3:	scas   al,BYTE PTR es:[edi]
  4161b4:	repz aam 0xbd
  4161b7:	jmp    0xe434:0xb8064e24
  4161be:	(bad)
  4161c1:	test   al,0x85
  4161c3:	nop
  4161c4:	hlt    
  4161c5:	(bad)  
  4161c6:	imul   ecx
  4161c8:	(bad)  
  4161c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4161ca:	sub    DWORD PTR [ecx-0xf441e0d],0x605362f4
  4161d4:	cli    
  4161d5:	(bad)  [eax-0x1b]
  4161d8:	jne    0x41617b
  4161da:	push   ds
  4161db:	mov    DWORD PTR [ecx],ebx
  4161dd:	mov    ?,WORD PTR [eax+0x662f5e9]
  4161e3:	lods   al,BYTE PTR fs:[esi]
  4161e5:	lea    edx,[edx+0x60]
  4161e8:	in     eax,0x53
  4161ea:	(bad)  
  4161eb:	in     al,dx
  4161ec:	hlt    
  4161ed:	bound  eax,QWORD PTR [esi]
  4161ef:	jmp    0xae00a773
  4161f4:	jmp    0xf52b5986
  4161f9:	bound  eax,QWORD PTR [ebx+0x648d829]
  4161ff:	in     eax,0xf4
  416201:	bound  esi,QWORD PTR [ebp+eax*1+0x75]
  416205:	mov    al,ds:0x62f4e506
  41620a:	sub    DWORD PTR [eax],0xffffffb8
  41620d:	cmp    bh,bl
  41620f:	je     0x416211
	...
  416219:	add    BYTE PTR [eax],al
  41621b:	add    dl,al
  41621d:	fisttp DWORD PTR [eax-0x8725723]
  416223:	(bad)  
  416225:	jecxz  0x4161f5
  416227:	out    0x1a,al
  416229:	in     eax,0x22
  41622b:	in     eax,0xf4
  41622d:	bound  ecx,QWORD PTR [ebp+0x6618b67]
  416233:	jmp    0x444f3b
  416238:	mov    ah,BYTE PTR [ecx+0x6]
  41623b:	mov    eax,esi
  41623d:	bound  eax,QWORD PTR [edx]
  41623f:	add    BYTE PTR [esi+0xe],bl
  416242:	cmp    al,0x8b
  416244:	shr    BYTE PTR [edx+0x2],0x0
  416248:	dec    esi
  416249:	or     al,0x90
  41624b:	adc    BYTE PTR [edx+0x61],bl
  41624e:	push   es
  41624f:	mov    DWORD PTR [eax+0x4e00026e],esp
  416255:	ud0    ecx,DWORD PTR [eax-0x74e5c4f6]
  41625c:	fidivr DWORD PTR [edx]
  41625e:	push   edx
  41625f:	mov    BYTE PTR [esi+eiz*2],dl
  416262:	cwde   
  416263:	adc    al,0x1a
  416265:	popa   
  416266:	push   es
  416267:	add    DWORD PTR [eax+0x76],esi
  41626a:	add    al,BYTE PTR [eax]
  41626c:	push   ds
  41626d:	dec    ecx
  41626e:	jg     0x4162ec
  416270:	cli    
  416271:	jbe    0x4162f2
  416273:	jl     0x41626f
  416275:	pop    esi
  416276:	jg     0x416216
  416278:	adc    ah,BYTE PTR [ebp+0x6]
  41627b:	add    BYTE PTR [edi+0x33],ah
  41627e:	and    bl,BYTE PTR [eax+0x0]
	...
  416289:	add    BYTE PTR [eax],al
  41628b:	add    ch,ah
  41628d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41628e:	or     DWORD PTR [esi+0x6581d],eax
  416294:	arpl   sp,bx
  416296:	push   es
  416297:	add    dh,bl
  416299:	pusha  
  41629a:	lea    eax,[edx+edi*4+0x1c]
  41629e:	add    eax,0x6a
  4162a1:	lea    ecx,ds:[edx+ebp*4+0x58]
  4162a6:	aaa    
  4162a7:	mov    DWORD PTR [edx+0x44],esp
  4162aa:	push   ds
  4162ab:	test   bh,dl
  4162ad:	or     DWORD PTR [ebx],ebp
  4162af:	mov    ecx,DWORD PTR [edx+0x208b6644]
  4162b5:	jo     0x4162b9
  4162b7:	add    BYTE PTR [esi-0x8dbb593],bl
  4162bd:	dec    ecx
  4162be:	push   eax
  4162bf:	mov    DWORD PTR [ecx-0x6a],ebp
  4162c2:	(bad)  
  4162c3:	push   edi
  4162c5:	jo     0x416325
  4162c7:	and    al,0xc7
  4162c9:	push   0x77
  4162cb:	dec    esp
  4162cc:	adc    esi,DWORD PTR [esi+0x50]
  4162cf:	dec    edi
  4162d0:	pusha  
  4162d1:	jmp    0xdc2:0xff07c480
  4162d8:	jnp    0x416351
  4162da:	or     eax,DWORD PTR [eax]
  4162dc:	div    DWORD PTR [eax+0x76e32447]
  4162e2:	adc    BYTE PTR [ecx-0x76c06235],cl
  4162e8:	retf   
  4162e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4162ea:	inc    ebx
  4162eb:	xchg   DWORD PTR [ebx+0x87179d],ebx
	...
  4162f9:	add    BYTE PTR [eax],al
  4162fb:	add    bl,cl
  4162fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4162fe:	sbb    ebp,ecx
  416300:	clc    
  416301:	adc    BYTE PTR [edi],bh
  416303:	and    al,0xab
  416305:	adc    BYTE PTR [ebp+0x379f314],al
  41630b:	sub    DWORD PTR [edx+ecx*8],esi
  41630e:	push   eax
  41630f:	dec    edi
  416310:	push   0xffffffee
  416312:	pop    ds
  416313:	xor    al,0x45
  416315:	adc    ebp,eax
  416317:	call   0xfe35b390
  41631c:	ins    BYTE PTR es:[edi],dx
  41631d:	int    0x1f
  41631f:	sub    al,0x74
  416321:	inc    esi
  416322:	add    DWORD PTR ds:0xe2383,ecx
  416328:	test   DWORD PTR [eax],0x79fb248d
  41632e:	add    eax,ebp
  416330:	xor    ebx,DWORD PTR [esi+0x79f7000f]
  416336:	add    esi,DWORD PTR [edi]
  416338:	xor    ebx,DWORD PTR [esi-0x6ea8ce5]
  41633e:	repz (bad) 
  416340:	jmp    0xf697caa7
  416345:	(bad)  
  416346:	in     eax,dx
  416347:	sub    dh,BYTE PTR [ebx]
  416349:	inc    edi
  41634a:	adc    eax,0xec1a7b01
  41634f:	add    esi,edi
  416351:	xlat   BYTE PTR ds:[ebx]
  416352:	sub    DWORD PTR [eax],ebp
  416354:	pop    es
  416355:	xor    al,0x14
  416357:	rol    esi,1
  416359:	xor    ah,BYTE PTR [edx+eax*8+0x4f]
  41635d:	xor    BYTE PTR [ecx+0xf1],0x0
	...
  41636c:	pop    edx
  41636d:	xlat   BYTE PTR ds:[ebx]
  41636e:	xor    DWORD PTR [eax],ebp
  416370:	sysenter 
  416372:	ds jge 0x4163ae
  416375:	xlat   BYTE PTR ds:[ebx]
  416376:	mov    ch,0xdc
  416378:	mov    edx,DWORD PTR [ebx-0x60010e78]
  41637e:	lock jle 0x41638d
  416381:	pusha  
  416382:	in     eax,dx
  416383:	add    edi,DWORD PTR [esi+0x26]
  416386:	leave  
  416387:	sub    ebx,esp
  416389:	(bad)  
  41638b:	add    esi,edi
  41638d:	push   cs
  41638e:	test   BYTE PTR [edx+edx*1-0xf7817a0],0x5f
  416396:	in     eax,dx
  416397:	add    edi,DWORD PTR [edx+eiz*2+0xef703ca]
  41639e:	test   BYTE PTR [edx+esi*8-0x1f78179a],0x65
  4163a6:	in     eax,dx
  4163a7:	add    ebp,DWORD PTR [esi+0x27]
  4163aa:	add    DWORD PTR [esi+ebp*2+0x1f],ecx
  4163ae:	leave  
  4163af:	push   edi
  4163b0:	jle    0x4163a3
  4163b2:	icebp  
  4163b3:	pop    es
  4163b4:	mul    DWORD PTR [edx-0x3c]
  4163b7:	les    edi,FWORD PTR [eax+0x1f]
  4163ba:	shl    DWORD PTR [ebx],0x2f
  4163bd:	xor    esi,DWORD PTR [edx+0x3d]
  4163c0:	mov    al,0x33
  4163c2:	stos   DWORD PTR es:[edi],eax
  4163c3:	push   ebp
  4163c4:	jl     0x4163e5
  4163c6:	push   es
  4163c7:	int    0xe0
  4163c9:	xor    cl,BYTE PTR [ebx-0x35844e1]
  4163cf:	out    0x0,al
	...
  4163d9:	add    BYTE PTR [eax],al
  4163db:	add    BYTE PTR [edi-0x14fab524],al
  4163e1:	push   ecx
  4163e2:	dec    edx
  4163e3:	or     eax,0xe843de3b
  4163e8:	std    
  4163e9:	push   ds
  4163ea:	and    ah,ch
  4163ec:	leave  
  4163ed:	push   es
  4163ee:	cmp    eax,0x8b354572
  4163f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4163f4:	cmp    al,0x1f
  4163f6:	out    dx,eax
  4163f7:	scas   al,BYTE PTR es:[edi]
  4163f8:	fmul   QWORD PTR [bp+si-0x33]
  4163fc:	mov    ah,0xe1
  4163fe:	inc    edx
  4163ff:	lds    edx,FWORD PTR [eax]
  416401:	fadd   QWORD PTR [edx-0x33]
  416404:	mov    eax,0x36625532
  416409:	jnp    0x416432
  41640b:	jle    0x416434
  41640d:	mov    BYTE PTR [ebx+0x2b3edf2d],cl
  416413:	mov    eax,ds:0xb0bea1fb
  416418:	jbe    0x41639e
  41641a:	ds pop esi
  41641c:	sub    eax,0x3272fc9a
  416421:	retf   0xf6ee
  416424:	sti    
  416425:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416426:	jmp    0x416441
  416428:	jp     0x416440
  41642a:	and    dl,BYTE PTR ds:0x51c8dc44
  416430:	in     eax,dx
  416431:	mov    ?,edi
  416433:	arpl   WORD PTR ss:[edi],bp
  416436:	and    ah,BYTE PTR [ebp-0x527454a5]
  41643c:	sbb    BYTE PTR [ebx],ah
  41643e:	push   esp
  41643f:	mov    ecx,0x0
	...
  41644c:	dec    ebx
  41644d:	cdq    
  41644e:	out    dx,al
  41644f:	pop    ds
  416450:	mov    esi,0xacc2f787
  416455:	fcmovnb st,st(3)
  416457:	add    BYTE PTR ds:0x1758221a,ah
  41645d:	(bad)  
  41645f:	add    ecx,DWORD PTR [ebp-0x73074861]
  416465:	pop    esi
  416466:	inc    edx
  416467:	and    al,0xe2
  416469:	cmp    eax,0xa0867dee
  41646e:	inc    edx
  41646f:	and    al,0x82
  416471:	pop    esi
  416472:	push   es
  416473:	add    BYTE PTR [esi-0x9890626],cl
  416479:	aaa    
  41647a:	push   0x24
  41647c:	adc    dl,BYTE PTR [ebx]
  41647e:	mov    ebx,DWORD PTR ss:[edx]
  416481:	cmp    ebp,DWORD PTR [esi]
  416483:	push   ebp
  416484:	dec    DWORD PTR ds:0x90d8e8c8
  41648a:	stc    
  41648b:	inc    ebp
  41648d:	sub    ah,BYTE PTR [edx]
  41648f:	inc    esp
  416490:	aad    0x96
  416492:	lea    eax,[edx+esi*1+0x25]
  416496:	push   esp
  416497:	push   eax
  416498:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416499:	enter  0xabee,0xa0
  41649d:	jns    0x416498
  41649f:	cmp    ecx,DWORD PTR [ebp+0xd]
  4164a2:	pop    edx
  4164a3:	and    al,0x6
  4164a5:	adc    al,0xe
  4164a7:	(bad)  
  4164a8:	bound  eax,QWORD PTR [ecx+0x12]
  4164ab:	add    DWORD PTR [esi],ebx
  4164ad:	gs push es
  4164af:	test   DWORD PTR [eax],eax
	...
  4164b9:	add    BYTE PTR [eax],al
  4164bb:	add    BYTE PTR [ecx+0x3a394b0b],ch
  4164c1:	inc    ecx
  4164c2:	inc    edx
  4164c3:	jge    0x416466
  4164c5:	or     eax,0x64d21488
  4164ca:	push   es
  4164cb:	push   0xffffffcf
  4164cd:	xor    eax,0xa6f88b47
  4164d2:	cdq    
  4164d3:	repz sbb DWORD PTR [eax-0x73],edi
  4164d7:	push   esp
  4164d8:	mov    dl,0x20
  4164da:	(bad)  
  4164db:	fdiv   st,st(7)
  4164dd:	add    al,0x4e
  4164df:	and    al,0x37
  4164e1:	int3   
  4164e2:	push   ebx
  4164e3:	mov    ecx,eax
  4164e5:	jb     0x41654c
  4164e7:	imul   BYTE PTR [eax-0x24b38377]
  4164ed:	mov    eax,ds:0x686c4f5e
  4164f2:	test   DWORD PTR [edi+ebp*8+0x7a],ebx
  4164f6:	fistp  DWORD PTR [ecx+eax*4-0x57]
  4164fa:	call   0x47470438
  4164ff:	and    al,0x1f
  416501:	sbb    ah,bh
  416503:	les    edi,FWORD PTR [ebx-0x8ffe1ab]
  416509:	jns    0x41650e
  41650b:	jmp    0x24a861fc
  416510:	add    edi,DWORD PTR [edx-0x8]
  416513:	add    BYTE PTR [ecx+0x7d],0x3
  416517:	add    BYTE PTR [edi+eiz*8+0x5],dh
  41651b:	or     eax,0x22571
	...
  41652c:	test   DWORD PTR [edi+ecx*2],0x8114d724
  416533:	adc    al,0xf3
  416535:	jns    0x41653a
  416537:	xor    DWORD PTR ds:0x34815510,0x3781547c
  416541:	jl     0x416596
  416543:	mov    edi,DWORD PTR [ebx+0x6c4f365d]
  416549:	inc    eax
  41654a:	fist   DWORD PTR [eax-0x7617e702]
  416550:	cmp    edx,DWORD PTR [esi+0x32]
  416553:	cmp    DWORD PTR [ebx],esi
  416555:	pop    esi
  416556:	sbb    cl,BYTE PTR [ecx+0x523e564b]
  41655c:	ins    BYTE PTR es:[edi],dx
  41655d:	addr16 push ebx
  41655f:	jl     0x416575
  416561:	arpl   WORD PTR ds:0x1887c4f0,dx
  416567:	jp     0x416508
  416569:	fld    TBYTE PTR [ecx-0x42d1f0d9]
  41656f:	jp     0x416532
  416571:	jp     0x416582
  416573:	clc    
  416574:	stos   BYTE PTR es:[edi],al
  416575:	xchg   esp,edx
  416577:	ret    0xe388
  41657a:	or     eax,DWORD PTR [edx]
  41657c:	mul    BYTE PTR [esp+eiz*2-0x1476af45]
  416583:	fcomp  st(5)
  416585:	jp     0x41654a
  416587:	test   DWORD PTR [edx+0x6ecc6487],0x1c011e
	...
  416599:	add    BYTE PTR [eax],al
  41659b:	add    ah,al
  41659d:	xor    dh,BYTE PTR [esi+edi*4+0x5f]
  4165a1:	fwait
  4165a2:	mov    dl,0xed
  4165a4:	(bad)  
  4165a5:	(bad)  [ebp-0x599cd1e7]
  4165ab:	lods   al,BYTE PTR ds:[esi]
  4165ac:	pop    eax
  4165ad:	les    esi,FWORD PTR [esi+ebx*1+0x42]
  4165b1:	jns    0x416571
  4165b3:	jmp    0x63da:0xdbae9c6e
  4165ba:	mov    ds:0xb93ebb79,eax
  4165bf:	add    BYTE PTR [edi],bh
  4165c1:	dec    ebx
  4165c2:	xchg   esi,eax
  4165c3:	outs   dx,DWORD PTR ds:[esi]
  4165c4:	out    dx,eax
  4165c5:	lahf   
  4165c6:	sub    DWORD PTR [eax],ebp
  4165c8:	add    esp,DWORD PTR [edx-0x13]
  4165cb:	add    esi,edi
  4165cd:	frstor [eax+0x76]
  4165d0:	fisttp WORD PTR [ebx+0x22]
  4165d3:	jo     0x4165b0
  4165d5:	fstp   TBYTE PTR [ecx-0x44cd38d9]
  4165db:	js     0x41659e
  4165dd:	jnp    0x41664e
  4165df:	imul   edx
  4165e1:	xchg   BYTE PTR [esp+ecx*8+0x6e],dh
  4165e5:	pop    ds
  4165e6:	push   es
  4165e7:	or     eax,0x625631fb
  4165ec:	xchg   ecx,eax
  4165ed:	jnp    0x416666
  4165ef:	sbb    al,0xda
  4165f1:	mov    BYTE PTR [ebx],bh
  4165f3:	inc    ecx
  4165f4:	ret    0x4da
  4165f7:	jmp    0x6ed8:0x8d8362f4
  4165fe:	push   es
  4165ff:	test   BYTE PTR [eax],0x0
	...
  41660a:	add    BYTE PTR [eax],al
  41660c:	jno    0x41659e
  41660e:	add    al,0xe9
  416610:	hlt    
  416611:	jecxz  0x41660c
  416613:	jmp    0x62f4:0xe9d2d89b
  41661a:	mov    esi,DWORD PTR ds:0x358b42df
  416620:	iret   
  416621:	sub    cl,BYTE PTR [ebx+0x65ee06f]
  416627:	jmp    0x193b2ca3
  41662c:	jbe    0x4165cf
  41662e:	add    ebx,DWORD PTR [ebx]
  416630:	jbe    0x4165d5
  416632:	add    ebx,DWORD PTR [ecx]
  416634:	fcom   DWORD PTR [esi]
  416636:	and    ch,ch
  416638:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416639:	fcmovne st,st(0)
  41663b:	xchg   ecx,eax
  41663c:	popf   
  41663d:	mov    esi,edi
  41663f:	sahf   
  416640:	mov    edi,0xbfd9221e
  416645:	cs and dl,ch
  416648:	scas   eax,DWORD PTR es:[edi]
  416649:	es and dl,cl
  41664c:	fbld   TBYTE PTR [ebx+0x33627254]
  416652:	jp     0x416620
  416654:	cmp    al,0x3f
  416656:	icebp  
  416657:	outs   dx,BYTE PTR ds:[esi]
  416658:	and    esi,DWORD PTR [edx]
  41665a:	push   ebx
  41665b:	jb     0x4166a7
  41665d:	fiadd  WORD PTR [edx+0x5]
  416660:	xlat   BYTE PTR ds:[ebx]
  416661:	jp     0x416672
  416663:	pop    esp
  416664:	or     ecx,DWORD PTR [eax+0x3f189d8b]
  41666a:	sub    eax,DWORD PTR [eax]
  41666c:	pop    ds
  41666d:	fld    DWORD PTR [ebp+0xe2]
	...
  41667b:	add    ch,cl
  41667d:	(bad)  
  41667e:	les    ecx,FWORD PTR [ebx+0x2efa116]
  416684:	xor    eax,0xeaffee66
  416689:	jbe    0x416684
  41668b:	push   ebp
  41668c:	jge    0x416698
  41668e:	enter  0x8a89,0x3d
  416692:	sub    ch,al
  416694:	or     al,0x8e
  416696:	stc    
  416697:	jmp    DWORD PTR ds:0xba448dca
  41669d:	cmp    eax,0xc88dc82d
  4166a2:	mov    esi,0x280b3ce9
  4166a7:	mul    DWORD PTR [edi+0x448bfcaf]
  4166ad:	lahf   
  4166ae:	fistp  WORD PTR [edi]
  4166b0:	(bad)  
  4166b1:	(bad)  
  4166b2:	lea    eax,[edx+edi*8+0x52]
  4166b6:	add    eax,0x7ba7f5c8
  4166bb:	or     BYTE PTR [ecx+0x4f142222],bl
  4166c1:	popa   
  4166c2:	push   es
  4166c3:	add    bl,bl
  4166c5:	jns    0x416737
  4166c7:	sub    BYTE PTR [ebp-0x5e],dl
  4166ca:	jp     0x4166f0
  4166cc:	lds    esi,FWORD PTR [edx]
  4166ce:	and    dh,BYTE PTR [eax]
  4166d0:	(bad)  
  4166d1:	sub    al,0x8d
  4166d3:	into   
  4166d4:	jbe    0x4166a5
  4166d6:	repnz push DWORD PTR [ecx+0x5]
  4166da:	fimul  WORD PTR [ebx+0x552e42da]
	...
  4166ec:	inc    BYTE PTR ds:0x92bce8c8
  4166f2:	stc    
  4166f3:	call   ebp
  4166f5:	xchg   esi,eax
  4166f6:	or     DWORD PTR [ebx+edi*8-0x8fff9a4],ecx
  4166fd:	clc    
  4166fe:	ins    DWORD PTR es:[edi],dx
  4166ff:	and    al,0xb
  416701:	jp     0x4166ff
  416703:	or     BYTE PTR ds:0x6c000378,0xe6
  41670a:	pop    ss
  41670b:	pop    eax
  41670c:	jb     0x41675b
  41670e:	sti    
  41670f:	sbb    DWORD PTR [ebx+edi*2+0x3],0x0
  416714:	je     0x416753
  416716:	add    DWORD PTR ds:0x2ca79,ecx
  41671c:	test   DWORD PTR [eax],0x14b2456
  416722:	mov    ebx,0x60fbc29
  416727:	or     bl,ah
  416729:	cmp    al,0x74
  41672b:	add    ch,BYTE PTR [ebp+esi*1+0x52]
  41672f:	mov    DWORD PTR [ebx],edi
  416731:	sahf   
  416732:	pop    es
  416733:	sub    DWORD PTR [eax+0x338b5249],ebp
  416739:	pop    esi
  41673a:	cs dec edi
  41673c:	ins    BYTE PTR es:[edi],dx
  41673d:	mov    esp,0x5e1b5c7a
  416742:	fcmove st,st(4)
  416744:	pusha  
  416745:	popf   
  416746:	in     al,dx
  416747:	aaa    
  416748:	jecxz  0x4167a7
  41674a:	ss jb  0x416770
  41674d:	add    DWORD PTR [edi+0x24],eax
	...
  41675c:	pop    es
  41675d:	ins    DWORD PTR es:[edi],dx
  41675e:	push   eax
  41675f:	mov    DWORD PTR [ecx],edi
  416761:	repnz cs hlt 
  416764:	inc    eax
  416765:	in     eax,0x78
  416767:	fsubr  DWORD PTR [esi+esi*1+0x26]
  41676b:	cmp    al,cl
  41676d:	dec    ecx
  41676e:	ja     0x41673e
  416770:	pop    ds
  416771:	lods   al,BYTE PTR ds:[esi]
  416772:	out    0xfd,eax
  416774:	and    BYTE PTR [ecx-0x6a447640],ah
  41677a:	pop    es
  41677b:	jle    0x416764
  41677d:	add    BYTE PTR [edi],ch
  41677f:	and    al,0xc7
  416781:	bound  esi,QWORD PTR [edi+ecx*2-0x25]
  416785:	dec    esi
  416786:	jbe    0x4167bf
  416788:	ror    DWORD PTR [edx+0x66],cl
  41678b:	dec    edi
  41678c:	sbb    eax,DWORD PTR [edi+0x64]
  41678f:	aas    
  416790:	adc    esi,DWORD PTR [ebx-0x68]
  416793:	push   esi
  416794:	inc    edi
  416795:	fsub   DWORD PTR [edi]
  416797:	fist   DWORD PTR [edx]
  416799:	xchg   edx,eax
  41679a:	xor    dl,ch
  41679c:	jle    0x4167b4
  41679e:	add    DWORD PTR [edx+eiz*1],ebp
  4167a1:	xor    dh,BYTE PTR [ecx+edi*4+0x6e]
  4167a5:	stos   BYTE PTR es:[edi],al
  4167a6:	adc    eax,0x1083c6ec
  4167ab:	cs mov dh,0x53
  4167ae:	pop    edx
  4167af:	mov    ds:0x7eed62f7,al
  4167b4:	inc    ebx
  4167b5:	aas    
  4167b6:	aad    0x2e
  4167b8:	jns    0x4167f8
  4167ba:	jmp    0x954f5ec2
  4167bf:	jle    0x4167c1
	...
  4167c9:	add    BYTE PTR [eax],al
  4167cb:	add    BYTE PTR [ebx],ah
  4167cd:	aas    
  4167ce:	stc    
  4167cf:	jl     0x41680c
  4167d1:	aas    
  4167d2:	std    
  4167d3:	push   eax
  4167d4:	and    eax,0x5fba6433
  4167d9:	nop
  4167da:	fucomp st(1)
  4167dc:	push   0x2d
  4167de:	sbb    al,0x7d
  4167e0:	xor    ecx,ebx
  4167e2:	and    DWORD PTR [eax],esp
  4167e4:	or     edi,DWORD PTR [ebx-0x59]
  4167e7:	cmc    
  4167e8:	push   edx
  4167e9:	and    DWORD PTR [eax+edi*1+0x13],0x3f
  4167ee:	in     al,dx
  4167ef:	mov    ebx,0x4632af6e
  4167f4:	jo     0x41680c
  4167f6:	leave  
  4167f7:	sbb    eax,ebp
  4167f9:	xlat   BYTE PTR ds:[ebx]
  4167fa:	xchg   edi,eax
  4167fb:	fsub   QWORD PTR [edi-0x71]
  4167fe:	sub    cl,0x6e
  416801:	stos   BYTE PTR es:[edi],al
  416802:	je     0x416844
  416804:	ror    DWORD PTR [edx+0x6],cl
  416807:	push   ds
  416808:	stos   DWORD PTR es:[edi],eax
  416809:	fxch   st(0)
  41680b:	adc    DWORD PTR [ecx+edx*4-0x9],0x21f68266
  416813:	or     eax,0xad8baaf2
  416818:	adc    BYTE PTR [edi+0x3b],al
  41681b:	sub    ch,BYTE PTR [edx+0x1f]
  41681e:	and    ah,BYTE PTR [ecx-0x1a14d5b2]
  416824:	pop    ebx
  416825:	pop    ds
  416826:	and    dl,BYTE PTR [ecx-0xeddd8ad]
  41682c:	sbb    ebp,ecx
  41682e:	and    ch,ch
	...
  41683c:	hlt    
  41683d:	bound  esi,QWORD PTR [ecx-0x10]
  416840:	jae    0x416803
  416842:	cs in  eax,dx
  416844:	hlt    
  416845:	bound  eax,QWORD PTR [esi]
  416847:	xchg   ebp,eax
  416848:	sti    
  416849:	cmp    eax,0x62f4ec06
  41684e:	jp     0x416834
  416850:	jae    0x4167d2
  416852:	add    al,0x7d
  416854:	fiadd  DWORD PTR [ecx]
  416856:	jp     0x41681d
  416858:	fsub   QWORD PTR [edx+0x79]
  41685b:	jmp    0x6a426754
  416860:	(bad)  
  416861:	fs jb  0x41685e
  416864:	repz and dl,BYTE PTR cs:[ecx]
  416868:	(bad)  
  416869:	xor    DWORD PTR [ebx-0xc4ec349],ecx
  41686f:	mov    esi,0x62368c4f
  416874:	mov    eax,0x8625e46
  416879:	inc    edi
  41687a:	push   ss
  41687b:	jb     0x4168a8
  41687d:	dec    esp
  41687e:	iret   
  41687f:	cmp    esp,DWORD PTR [ebx-0x767e3715]
  416885:	jae    0x41687e
  416887:	mov    ds,WORD PTR [edi]
  416889:	daa    
  41688a:	and    al,BYTE PTR [eax]
  41688c:	ds out 0xe9,eax
  41688f:	add    DWORD PTR [ebx],esp
  416891:	test   ch,ch
  416893:	adc    dl,BYTE PTR [ebp-0x54efddcf]
  416899:	ds stc 
  41689b:	push   ecx
  41689c:	cmp    al,0xff
  41689e:	(bad)  
  41689f:	call   0x4168a4
	...
  4168ac:	jl     0x416923
  4168ae:	stc    
  4168af:	dec    DWORD PTR ds:0xddfd858c
  4168b5:	jp     0x416841
  4168b7:	or     esi,0x508b0665
  4168bd:	jb     0x4168c1
  4168bf:	add    dh,bl
  4168c1:	xor    BYTE PTR [ebp+0x50],dl
  4168c4:	push   ebp
  4168c5:	mov    esp,0x8ade1eee
  4168ca:	stc    
  4168cb:	mov    ecx,DWORD PTR [edx+0x6f552e61]
  4168d1:	inc    bh
  4168d3:	mov    esp,esi
  4168d5:	popf   
  4168d6:	div    dl
  4168d8:	stc    
  4168d9:	mov    bh,BYTE PTR ds:0x8d5e19c3
  4168df:	inc    esp
  4168e0:	ret    0x3d5d
  4168e3:	xchg   BYTE PTR [edx+0x23fff781],dh
  4168e9:	add    BYTE PTR [esi+0x662e6be],0x0
  4168f0:	pop    esi
  4168f1:	adc    DWORD PTR [ebx+0x3d],eax
  4168f4:	pop    esi
  4168f5:	bound  eax,QWORD PTR [esi]
  4168f7:	add    BYTE PTR [edx+0x4cfd8563],bh
  4168fd:	adc    DWORD PTR [ecx],eax
  4168ff:	cmp    eax,0x60a5e
  416904:	sbb    dh,BYTE PTR ds:0x2d325c8d
  41690a:	jg     0x416978
  41690c:	xor    dh,BYTE PTR [ecx-0x7d]
  41690f:	in     eax,dx
	...
  41691c:	neg    DWORD PTR [edi+0x22]
  41691f:	mov    DWORD PTR [ecx+0x20fff777],eax
  416925:	pop    esp
  416926:	push   esp
  416927:	mov    DWORD PTR [ecx],ebp
  416929:	shl    DWORD PTR [ecx],cl
  41692b:	lock adc al,bh
  41692e:	test   eax,0x38b08ff
  416933:	(bad)  
  416934:	jp     0x4169b5
  416936:	idiv   edi
  416938:	clc    
  416939:	push   ecx
  41693a:	inc    esi
  41693b:	and    al,0xb
  41693d:	lahf   
  41693e:	jecxz  0x4168cb
  416940:	dec    ebx
  416941:	(bad)  
  416942:	loopne 0x41692d
  416944:	cmp    eax,0x3f244df5
  416949:	cmc    
  41694a:	inc    ebp
  41694b:	and    al,0x1f
  41694d:	fist   WORD PTR [ebx-0x77]
  416950:	mov    ecx,0xc0f10322
  416955:	dec    ecx
  416956:	add    DWORD PTR [esi+0x385e3],ebp
  41695c:	xor    BYTE PTR [esi-0x506302f2],0x7c
  416963:	pop    esp
  416964:	fcmovnb st,st(1)
  416966:	xchg   ch,bh
  416968:	and    bl,BYTE PTR [eax-0x5e24b384]
  41696e:	jl     0x416906
  416970:	jecxz  0x4168f7
  416972:	add    eax,DWORD PTR [eax]
  416974:	outs   dx,BYTE PTR ds:[esi]
  416975:	push   ss
  416976:	es cmp al,0x6e
  416979:	dec    esi
  41697a:	cmp    BYTE PTR es:[esi+0x3e],bh
  41697e:	adc    BYTE PTR es:[eax],al
	...
  416989:	add    BYTE PTR [eax],al
  41698b:	add    BYTE PTR [eax+0x608309a4],dh
  416991:	add    eax,DWORD PTR ds:[ebp+0x4c]
  416995:	xchg   ecx,eax
  416996:	jl     0x41691e
  416998:	jmp    0x416927
  41699a:	add    eax,DWORD PTR [eax]
  41699c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41699d:	pop    ecx
  41699e:	jnp    0x41696e
  4169a0:	dec    edi
  4169a1:	arpl   WORD PTR [edi-0x2a],dx
  4169a4:	cmp    al,BYTE PTR [eax+0x670b7d98]
  4169aa:	in     eax,dx
  4169ab:	add    esi,DWORD PTR [eax+eax*4-0x28]
  4169af:	jg     0x4169bf
  4169b1:	arpl   bp,bp
  4169b3:	add    ebx,esi
  4169b5:	inc    al
  4169b7:	daa    
  4169b8:	add    ah,dh
  4169ba:	mov    es,WORD PTR [ebx]
  4169bc:	mul    DWORD PTR [edx+0x64]
  4169bf:	dec    edi
  4169c0:	fist   DWORD PTR [esi]
  4169c2:	je     0x41697a
  4169c4:	into   
  4169c5:	stos   DWORD PTR es:[edi],eax
  4169c6:	push   0xffffffff
  4169c8:	(bad)  
  4169c9:	cmp    ebp,DWORD PTR [eax]
  4169cb:	ins    DWORD PTR es:[edi],dx
  4169cc:	cmc    
  4169cd:	jmp    0x4169ef
  4169cf:	push   ebx
  4169d0:	outs   dx,BYTE PTR ds:[esi]
  4169d1:	or     DWORD PTR es:[eax],edx
  4169d4:	outs   dx,BYTE PTR ds:[esi]
  4169d5:	mov    edx,DWORD PTR [edi+edx*8]
  4169d8:	and    al,0x13
  4169da:	bound  esi,QWORD PTR [edi]
  4169dc:	adc    edi,DWORD PTR [edi]
  4169de:	sahf   
  4169df:	jp     0x416992
  4169e1:	jmp    0x8b548977
  4169e6:	(bad)  
  4169e7:	lock mov dl,0x7f
  4169ea:	(bad)  
  4169eb:	shl    DWORD PTR ds:0x2f9b,cl
	...
  4169fc:	outs   dx,BYTE PTR ds:[esi]
  4169fd:	push   ss
  4169fe:	leave  
  4169ff:	xor    eax,DWORD PTR [edx+0x15]
  416a02:	je     0x4169b9
  416a04:	lahf   
  416a05:	xchg   esi,edi
  416a07:	in     eax,0x8a
  416a09:	jmp    0x416a10
  416a0b:	jp     0x416a48
  416a0d:	inc    edi
  416a0e:	and    eax,0xa7ec274d
  416a13:	fmul   QWORD PTR [edi+0x71]
  416a16:	shl    ch,1
  416a18:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  416a1a:	fs pop eax
  416a1c:	sbb    edx,DWORD PTR [edi+0x3f]
  416a1f:	adc    al,0x6e
  416a21:	add    DWORD PTR cs:[esi+edi*2],esi
  416a25:	push   ss
  416a26:	push   es
  416a27:	or     eax,0x54ae807
  416a2c:	adc    ebp,eax
  416a2e:	push   edx
  416a2f:	int    0x10
  416a31:	jmp    0x3951:0x1604c542
  416a38:	scas   al,BYTE PTR es:[edi]
  416a39:	mov    al,0xee
  416a3b:	mov    eax,0x72f77d49
  416a40:	fild   WORD PTR [esi+0x3e]
  416a43:	push   ss
  416a44:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416a45:	jmp    0x8a6ccd12
  416a4a:	mov    ds:0x3b7d1a78,eax
  416a4f:	sub    al,0x90
  416a51:	cmp    al,0x8b
  416a53:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416a54:	adc    BYTE PTR [ebx],bh
  416a56:	cmp    ebp,DWORD PTR [edi+0x17]
  416a59:	addr16 push es
  416a5b:	jmp    0x87c4d0b1
	...
  416a6c:	sti    
  416a6d:	pushw  es
  416a6f:	jmp    0xf45f6168
  416a74:	hlt    
  416a75:	popa   
  416a76:	push   es
  416a77:	jmp    0x26c4ccd4
  416a7c:	cmc    
  416a7d:	neg    BYTE PTR [esp+ebx*8]
  416a80:	hlt    
  416a81:	stc    
  416a82:	add    eax,0x836210e9
  416a87:	push   cs
  416a88:	div    dh
  416a8a:	or     BYTE PTR [esi+0x11c8ec44],bl
  416a90:	scas   al,BYTE PTR es:[edi]
  416a91:	mov    ?,edi
  416a93:	test   bh,0x7f
  416a96:	jmp    0x416a61
  416a98:	dec    DWORD PTR [esi]
  416a9a:	and    bh,cl
  416a9c:	jns    0x416b1c
  416a9e:	imul   ecx
  416aa0:	hlt    
  416aa1:	jmp    0x416a76
  416aa3:	add    bh,BYTE PTR [edx]
  416aa5:	adc    DWORD PTR [ecx+0x62],edx
  416aa8:	stos   BYTE PTR es:[edi],al
  416aa9:	mov    edi,DWORD PTR [edi-0x678c000]
  416aaf:	inc    ebp
  416ab0:	fst    QWORD PTR [esi-0x6cc8b09]
  416ab6:	imul   esp,DWORD PTR [esi+ebx*1],0xfa2441fb
  416abd:	and    ecx,DWORD PTR [esi-0x77]
  416ac0:	repnz inc edx
  416ac2:	pop    esi
  416ac3:	cmp    esp,DWORD PTR [esi+0x77]
  416ac6:	test   DWORD PTR [edi-0x7a06787a],esi
  416acc:	jno    0x416b45
  416ace:	sbb    DWORD PTR [eax+eax*1+0x0],0x0
  416ad6:	add    BYTE PTR [eax],al
  416ad8:	add    BYTE PTR [eax],al
  416ada:	add    BYTE PTR [eax],al
  416adc:	push   ds
  416add:	bound  eax,QWORD PTR [esi]
  416adf:	add    DWORD PTR [ecx-0x7279f6a0],0x61
  416ae6:	push   es
  416ae7:	add    BYTE PTR [ebp-0x56efddcb],al
  416aed:	cli    
  416aee:	les    ebp,FWORD PTR [ebx]
  416af0:	sbb    DWORD PTR [edx],edx
  416af2:	inc    edi
  416af3:	mov    eax,DWORD PTR [eax]
  416af5:	call   0x548d:0x8731ee29
  416afc:	cli    
  416afd:	dec    esi
  416afe:	push   ecx
  416aff:	push   edx
  416b00:	push   ebp
  416b01:	mov    eax,0x6136e88d
  416b06:	out    0xff,eax
  416b08:	adc    DWORD PTR [ebx-0x3d],ecx
  416b0b:	jg     0x416b68
  416b0d:	cli    
  416b0e:	inc    ecx
  416b0f:	and    al,0xc6
  416b11:	dec    edx
  416b12:	and    BYTE PTR [edx+ebx*4],0x61
  416b16:	push   es
  416b17:	jne    0x416ac0
  416b19:	loop   0x416ad3
  416b1b:	sub    BYTE PTR [edx+0xa000661],bl
  416b21:	push   0x3b
  416b23:	add    BYTE PTR [ebx-0x7483f99f],bl
  416b29:	in     al,0xf9
  416b2b:	add    cl,dl
  416b2d:	dec    edx
  416b2e:	cmp    eax,DWORD PTR [eax]
  416b30:	not    DWORD PTR [esi]
  416b32:	add    al,BYTE PTR [eax]
  416b34:	jecxz  0x416abc
  416b36:	cmp    ch,0xf4
  416b39:	aas    
  416b3a:	cli    
  416b3b:	push   esp
  416b3c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416b3d:	lock shr eax,cl
	...
  416b4c:	mov    esi,0x4cfde3ba
  416b51:	jne    0x416b99
  416b53:	pop    ecx
  416b54:	cwde   
  416b55:	or     dl,cl
  416b57:	std    
  416b58:	ror    DWORD PTR [eax],1
  416b5a:	into   
  416b5b:	cmp    BYTE PTR ds:0x93890373,dh
  416b61:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416b62:	xrelease mov BYTE PTR [eax+edx*4],dh
  416b66:	int3   
  416b67:	push   eax
  416b68:	stos   BYTE PTR es:[edi],al
  416b69:	lock shr eax,cl
  416b6c:	call   0xbb3f4f56
  416b71:	or     bl,dh
  416b73:	inc    DWORD PTR [ebx+0x7c10e716]
  416b79:	mov    dh,0x1f
  416b7b:	adc    BYTE PTR [edx-0x3f],bh
  416b7e:	in     al,0x4f
  416b80:	inc    ebp
  416b81:	add    esp,edx
  416b83:	call   0xfe247f78
  416b88:	jl     0x416b48
  416b8a:	pop    ds
  416b8b:	push   esp
  416b8c:	mov    cl,BYTE PTR [ebx+0x70f70003]
  416b92:	les    esi,FWORD PTR [ecx+0x16]
  416b95:	div    DWORD PTR [esi+0x0]
  416b98:	test   DWORD PTR [ecx+0x7e718903],0xb8f7ffff
  416ba2:	xor    ecx,DWORD PTR [ecx-0x1412ad57]
  416ba8:	nop
  416ba9:	jge    0x416bad
  416bab:	scas   al,BYTE PTR es:[edi]
  416bac:	jecxz  0x416b3b
  416bae:	add    eax,DWORD PTR [eax]
	...
  416bbc:	hlt    
  416bbd:	outs   dx,BYTE PTR ds:[esi]
  416bbe:	pop    ss
  416bbf:	fld    QWORD PTR ds:0x3e86ca63
  416bc5:	jl     0x416bb5
  416bc7:	or     DWORD PTR [ebx],0x6c03ed67
  416bcd:	sub    dh,ah
  416bcf:	pop    eax
  416bd0:	add    al,ch
  416bd2:	addr16 repz hlt 
  416bd5:	(bad)  
  416bd6:	in     eax,dx
  416bd7:	mov    WORD PTR [ecx+0x5b],?
  416bda:	jmp    0x666462e2
  416bdf:	xchg   ecx,eax
  416be0:	(bad)  [esi-0x13]
  416be3:	add    edi,DWORD PTR [eax-0x1b]
  416be6:	std    
  416be7:	pop    es
  416be8:	mul    DWORD PTR [edx+0x64]
  416beb:	mov    edi,edi
  416bed:	in     ax,dx
  416bef:	add    ebp,DWORD PTR [ebp+0x53]
  416bf2:	jmp    0x416ba9
  416bf4:	adc    DWORD PTR [ecx-0x21f60c8b],esp
  416bfa:	rol    DWORD PTR [edi],1
  416bfc:	mul    DWORD PTR [edx-0xe]
  416bff:	cld    
  416c00:	outs   dx,DWORD PTR ds:[esi]
  416c01:	in     eax,0xfd
  416c03:	pop    es
  416c04:	mul    DWORD PTR [edx+0x76]
  416c07:	mov    DWORD PTR [edi],ecx
  416c09:	addr16 in eax,dx
  416c0b:	add    esi,DWORD PTR [edi]
  416c0d:	jmp    0x8ced:0x62f4ff57
  416c14:	jns    0x416c68
  416c16:	loope  0x416c1b
  416c18:	mul    edi
  416c1a:	addr16 sti 
  416c1c:	hlt    
  416c1d:	(bad)  
  416c1e:	in     eax,dx
  416c1f:	lea    eax,[eax]
	...
  416c29:	add    BYTE PTR [eax],al
  416c2b:	add    bh,ah
  416c2d:	pusha  
  416c2e:	cmp    esp,ecx
  416c30:	mov    ch,0xea
  416c32:	std    
  416c33:	add    al,0x89
  416c35:	pop    esi
  416c36:	jmp    0xf637633e
  416c3b:	mov    ?,WORD PTR [ecx+0x52]
  416c3e:	jmp    0x602b6346
  416c43:	sti    
  416c44:	hlt    
  416c45:	bound  eax,QWORD PTR [esi]
  416c47:	jmp    0xcdca5080
  416c4c:	lock bound eax,QWORD PTR [esi]
  416c4f:	jo     0x416cce
  416c51:	push   edx
  416c52:	add    ch,cl
  416c54:	hlt    
  416c55:	jmp    0x633a5dda
  416c5a:	push   es
  416c5b:	mov    ecx,0xd980ea13
  416c60:	clc    
  416c61:	bound  eax,QWORD PTR [esi]
  416c63:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416c64:	repz bound ecx,QWORD PTR [ebx+0x666f767]
  416c6b:	jmp    0xed6050db
  416c70:	hlt    
  416c71:	bound  eax,QWORD PTR ds:0x65f234f
  416c77:	jmp    0xca16144f
  416c7c:	imul   esp,DWORD PTR [esi],0x22
  416c7f:	and    eax,0xb872a278
  416c84:	jnp    0x416cb4
  416c86:	and    cl,BYTE PTR [ecx]
  416c88:	jb     0x416c5e
  416c8a:	push   ss
  416c8b:	in     eax,0xf4
  416c8d:	bound  ebp,QWORD PTR [ebx]
  416c8f:	mov    ebp,0x0
	...
  416c9c:	sbb    BYTE PTR [ebx],dl
  416c9e:	push   ebp
  416c9f:	jb     0x416c26
  416ca1:	dec    edi
  416ca2:	add    ch,cl
  416ca4:	hlt    
  416ca5:	dec    ebx
  416ca6:	dec    edx
  416ca7:	add    eax,0x9e551523
  416cac:	xlat   BYTE PTR ds:[ebx]
  416cad:	xchg   ebx,eax
  416cae:	and    DWORD PTR ds:0xbcc6e5c3,0xfffffff0
  416cb5:	sbb    eax,0x17fa2a8b
  416cba:	pop    eax
  416cbb:	push   0xffffffbf
  416cbd:	cmp    eax,esp
  416cbf:	add    ebx,esi
  416cc1:	jmp    0x416c43
  416cc3:	stc    
  416cc4:	clc    
  416cc5:	bound  eax,QWORD PTR [esi]
  416cc7:	ret    0x3f30
  416cca:	push   esi
  416ccb:	add    BYTE PTR [ebx+0x37],bl
  416cce:	pop    ecx
  416ccf:	pop    esi
  416cd0:	sbb    eax,0xa6c23eab
  416cd5:	mov    si,0x8e00
  416cd9:	push   0x21e5c306
  416cde:	and    al,BYTE PTR [eiz*8+0x4de9b7ad]
  416ce5:	jmp    0xa04f752c
  416cea:	lea    eax,[edx+eax*1+0x53]
  416cee:	ja     0x416cdc
  416cf0:	cli    
  416cf1:	push   0x6
  416cf3:	add    bl,dl
  416cf5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416cf6:	jae    0x416cff
  416cf8:	iret   
  416cf9:	mov    eax,ds:0x661e042a
  416cfe:	lds    ecx,FWORD PTR [ebx+0x0]
	...
  416d0c:	call   0x8d66:0xe044241
  416d13:	xchg   esp,eax
  416d14:	xor    ah,BYTE PTR [esi]
  416d16:	add    al,BYTE PTR [eax]
  416d18:	push   ds
  416d19:	xor    eax,0x26328c8d
  416d1e:	add    al,BYTE PTR [eax]
  416d20:	push   cs
  416d21:	xor    BYTE PTR [ebp+0x25a3294],cl
  416d27:	add    dh,bl
  416d29:	xor    al,0x56
  416d2b:	mov    edx,DWORD PTR [edx+0x42]
  416d2e:	inc    esi
  416d2f:	add    al,0xce
  416d31:	gs push esp
  416d33:	push   eax
  416d34:	cmp    ebp,DWORD PTR [edx]
  416d36:	and    bl,BYTE PTR [eax]
  416d38:	es repz dec DWORD PTR ss:[ecx]
  416d3d:	in     eax,0xc2
  416d3f:	sub    al,0xd2
  416d41:	gs push es
  416d43:	ret    
  416d44:	fisubr DWORD PTR [ecx-0x56153336]
  416d4a:	retf   0xdacc
  416d4d:	test   eax,0xb6f7ccca
  416d52:	mov    ebx,fs
  416d54:	jbe    0x416dcd
  416d56:	aam    0x0
  416d58:	test   DWORD PTR [ebx-0xadfa9ce],0x54c6082f
  416d62:	push   ss
  416d63:	mov    dh,0x44
  416d65:	pop    ss
  416d66:	pop    ebp
  416d67:	aas    
  416d68:	div    edx
  416d6a:	sar    DWORD PTR [edi-0x49f77391],1
	...
  416d7c:	sti    
  416d7d:	jnp    0x416d09
  416d7f:	out    dx,eax
  416d80:	je     0x416d2c
  416d82:	dec    DWORD PTR [eax+ecx*4]
  416d85:	out    dx,eax
  416d86:	or     BYTE PTR [ecx+eax*8],bl
  416d89:	dec    edx
  416d8a:	add    al,BYTE PTR [ebx-0x30817fd1]
  416d90:	call   0xbbca2e86
  416d95:	pop    esi
  416d96:	retf   0x7441
  416d99:	les    ebx,FWORD PTR [edx]
  416d9b:	jl     0x416de3
  416d9d:	call   0xff16:0x667466b5
  416da4:	mov    esi,DWORD PTR [ebp-0x76]
  416da7:	rol    BYTE PTR [eax],1
  416da9:	ret    
  416daa:	xchg   ebp,eax
  416dab:	dec    esp
  416dac:	not    DWORD PTR [ecx-0x6895fe14]
  416db2:	cmc    
  416db3:	mov    ch,BYTE PTR [esi-0x75]
  416db6:	test   BYTE PTR [edx+ebp*4-0x1f022786],ah
  416dbd:	mov    al,BYTE PTR [esp+eiz*4-0x2278596]
  416dc4:	ror    BYTE PTR [edx-0x100726ee],1
  416dca:	add    esp,0x49
  416dcd:	retf   
  416dce:	add    ecx,DWORD PTR [ebx-0x17b6dfd]
  416dd4:	adc    esp,DWORD PTR [ebx-0x5e]
  416dd7:	or     DWORD PTR [ebp+0x1f],edi
  416dda:	ror    bl,cl
  416ddc:	outs   dx,DWORD PTR ds:[esi]
  416ddd:	pop    ds
  416dde:	bnd jae 0x416de1
	...
  416de9:	add    BYTE PTR [eax],al
  416deb:	add    BYTE PTR [esi-0x3bb79c95],cl
  416df1:	(bad)  
  416df2:	jne    0x416e3c
  416df4:	in     al,dx
  416df5:	shr    BYTE PTR [edx+eax*4-0x438ea882],cl
  416dfc:	ds push edi
  416dfe:	in     eax,dx
  416dff:	add    esi,edi
  416e01:	addr16 xchg edi,eax
  416e03:	xor    DWORD PTR [ebx],0x6c042df1
  416e09:	das    
  416e0a:	cmc    
  416e0b:	sbb    BYTE PTR [ecx+0x3b],0x4a
  416e0f:	or     bh,BYTE PTR [ebp+0x1f]
  416e12:	cli    
  416e13:	retf   
  416e14:	jg     0x416e35
  416e16:	fidiv  DWORD PTR [ebx+0x4e]
  416e19:	imul   esp,DWORD PTR [ebx+0x47],0x4
  416e1d:	(bad)  
  416e1e:	gs inc edi
  416e20:	or     al,0xd3
  416e22:	sub    al,0x83
  416e24:	cmp    ebx,DWORD PTR cs:[ecx]
  416e27:	mov    ebp,0x95e09bd0
  416e2c:	jbe    0x416dbd
  416e2e:	cmovne esi,edi
  416e31:	loop   0x416e34
  416e33:	or     DWORD PTR [edi+0x63],esp
  416e36:	icebp  
  416e37:	or     eax,0x2f525f6e
  416e3c:	and    DWORD PTR [ecx],0xe57b0ced
  416e42:	std    
  416e43:	fsubp  st(2),st
  416e45:	ja     0x416e2f
  416e47:	xchg   ebp,eax
  416e48:	jbe    0x416dd0
  416e4a:	xlat   BYTE PTR ds:[ebx]
  416e4b:	inc    esp
  416e4c:	mul    edx
  416e4e:	leave  
  416e4f:	or     BYTE PTR [eax],al
	...
  416e59:	add    BYTE PTR [eax],al
  416e5b:	add    BYTE PTR [edi+0x62],ah
  416e5e:	mov    ecx,0x5a5e7e0d
  416e63:	das    
  416e64:	dec    ecx
  416e65:	and    al,BYTE PTR [esi]
  416e67:	jmp    0xd9fb4d57
  416e6c:	shl    DWORD PTR [ebp-0x9],1
  416e6f:	stos   BYTE PTR es:[edi],al
  416e70:	jne    0x416eeb
  416e72:	push   ds
  416e73:	popf   
  416e74:	mov    dh,0x24
  416e76:	adc    DWORD PTR [ebx],0xffffffa4
  416e79:	data16 mov dl,bl
  416e7c:	mov    cl,0x75
  416e7e:	div    DWORD PTR [edi+edi*2+0x52]
  416e82:	idiv   esi
  416e84:	mov    ds:0xf4e0ee12,al
  416e89:	bound  eax,QWORD PTR [esi]
  416e8b:	mov    ?,WORD PTR [edx]
  416e8d:	sbb    cl,BYTE PTR [ebp+0xea528d5]
  416e93:	jmp    0x69234ec1
  416e98:	addr16 loop 0x416ea1
  416e9b:	jmp    0x1e918094
  416ea0:	jle    0x416ec5
  416ea2:	push   cs
  416ea3:	ins    BYTE PTR es:[edi],dx
  416ea4:	or     bl,ah
  416ea6:	mov    ebp,0x662f4d9
  416eab:	pusha  
  416eac:	ss loope 0x416e75
  416eaf:	in     eax,dx
  416eb0:	jg     0x416ee3
  416eb2:	test   DWORD PTR [edi-0x16059d05],eax
  416eb8:	xor    eax,0xee620080
  416ebd:	neg    esi
  416ebf:	test   eax,0x0
	...
  416ecc:	cli    
  416ecd:	bound  eax,QWORD PTR [esi]
  416ecf:	test   al,0x1a
  416ed1:	ins    BYTE PTR es:[edi],dx
  416ed2:	or     eax,0x853a6e77
  416ed7:	xchg   bl,bh
  416ed9:	(bad)  
  416eda:	cli    
  416edb:	jmp    0xf04df795
  416ee0:	ret    0x34de
  416ee3:	pusha  
  416ee4:	mov    eax,ds:0x7fe5c4e4
  416ee9:	cmp    eax,DWORD PTR [ebp+0x99f3900]
  416eef:	add    dh,cl
  416ef1:	mov    eax,ds:0x58d506e9
  416ef6:	jg     0x416f36
  416ef8:	adc    eax,0x9ee67754
  416efd:	xchg   edx,eax
  416efe:	add    eax,0xa7ccf00
  416f03:	mov    esp,DWORD PTR [ebp-0x20c01a1d]
  416f09:	adc    DWORD PTR [esi],0x9
  416f0c:	shr    bl,1
  416f0e:	push   ds
  416f0f:	sub    ebp,0x8e03f65e
  416f15:	mov    eax,ds:0xb85704ed
  416f1a:	jg     0x416f4e
  416f1c:	out    0xb2,eax
  416f1e:	test   edx,eax
  416f20:	pop    edx
  416f21:	jmp    0x416f59
  416f23:	sub    DWORD PTR [eax],0x57
  416f26:	or     eax,0x3f52d733
  416f2b:	sbb    DWORD PTR [esi+0xc9835e],0x0
	...
  416f3a:	add    BYTE PTR [eax],al
  416f3c:	or     ebx,ebp
  416f3e:	mov    eax,DWORD PTR [ebp-0x32]
  416f41:	xor    esi,ebp
  416f43:	daa    
  416f44:	push   ds
  416f45:	bound  eax,QWORD PTR [esi]
  416f47:	pop    edi
  416f48:	mov    al,0x3b
  416f4a:	jg     0x416f38
  416f4c:	jecxz  0x416eee
  416f4e:	add    al,BYTE PTR [eax]
  416f50:	xchg   ebp,eax
  416f51:	sbb    eax,0xdda40422
  416f56:	jb     0x416f99
  416f58:	push   ds
  416f59:	jmp    0x416f67
  416f5b:	mov    DWORD PTR [esi],eax
  416f5d:	jecxz  0x416f23
  416f5f:	add    al,0x8d
  416f61:	mov    eax,ds:0x5e648102
  416f66:	jae    0x416fa9
  416f68:	ficom  WORD PTR [ebx]
  416f6a:	call   0x8da34a31
  416f6f:	inc    esp
  416f70:	mul    DWORD PTR [edi+0xe]
  416f73:	mov    edx,0x448f7b
  416f78:	jl     0x416fed
  416f7a:	mov    WORD PTR [edx],cs
  416f7c:	je     0x416fc9
  416f7e:	inc    DWORD PTR [eax-0x57b784b]
  416f84:	sti    
  416f85:	scas   al,BYTE PTR es:[edi]
  416f86:	inc    esp
  416f87:	add    BYTE PTR ds:0xf704c54e,ah
  416f8d:	scas   al,BYTE PTR es:[edi]
  416f8e:	mov    ebx,fs
  416f90:	inc    edi
  416f91:	mov    esp,0x843a8936
  416f96:	mov    ds,WORD PTR [ebx-0x5]
  416f99:	out    dx,al
  416f9a:	das    
  416f9b:	clc    
  416f9c:	and    eax,0x1debdc
	...
  416fa9:	add    BYTE PTR [eax],al
  416fab:	add    bh,dh
  416fad:	mov    eax,DWORD PTR [ebx]
  416faf:	push   0x43ef7b
  416fb4:	jp     0x416ffc
  416fb6:	ficom  DWORD PTR [eax+0x4f]
  416fb9:	mov    dl,0x2
  416fbb:	add    bh,dh
  416fbd:	cmp    BYTE PTR [ebp-0x15c4b0bd],cl
  416fc3:	jo     0x416fbc
  416fc5:	mov    eax,DWORD PTR [ebx]
  416fc7:	pop    ecx
  416fc8:	outs   dx,BYTE PTR ds:[esi]
  416fc9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416fca:	cmp    eax,0x308befc2
  416fcf:	mov    DWORD PTR [ebx-0x3c76f5a1],edi
  416fd5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416fd6:	inc    DWORD PTR [esi-0x49f4b4ca]
  416fdc:	out    dx,al
  416fdd:	retf   0x18e1
  416fe0:	jle    0x416f63
  416fe2:	mov    bh,BYTE PTR [edi+0x7956cb7]
  416fe8:	ss jmp 0x8708:0x2ed08f2
  416ff0:	mov    dh,0x4a
  416ff2:	or     esi,DWORD PTR [esi-0x1ad19d02]
  416ff8:	out    dx,eax
  416ff9:	addr16 repz mov ebp,gs
  416ffd:	jmp    0x5ff6f740
  417002:	data16 (bad) 
  417004:	aaa    
  417005:	fs ja  0x417007
  417008:	stc    
  417009:	pop    ecx
  41700a:	jbe    0x416fd1
  41700c:	aaa    
  41700d:	fs ja  0x41701d
	...
  41701c:	jo     0x416fa0
  41701e:	aad    0x8c
  417020:	std    
  417021:	jmp    0xad33b454
  417026:	test   ah,0xb8
  417029:	push   ebx
  41702a:	in     al,0xd
  41702c:	js     0x417097
  41702e:	lds    si,DWORD PTR [edi]
  417031:	fs aaa 
  417033:	or     eax,0xef58240
  417038:	in     eax,dx
  417039:	arpl   WORD PTR [edi],si
  41703b:	add    al,0xf8
  41703d:	mov    eax,ds:0xa0ce0e66
  417042:	cmc    
  417043:	add    eax,esi
  417045:	out    0x31,eax
  417047:	and    bh,ch
  417049:	out    0x21,eax
  41704b:	and    BYTE PTR [ebx],al
  41704d:	call   0x5ba1353d
  417052:	jne    0x417058
  417054:	add    al,ch
  417056:	jmp    0x41701c
  417058:	dec    edi
  417059:	push   ebx
  41705a:	gs add al,0xf0
  41705d:	out    0xeb,eax
  41705f:	les    ebx,FWORD PTR [edi]
  417061:	imul   esi,DWORD PTR [ebp+0x4],0xffffffe0
  417065:	jmp    0x93b1b51e
  41706a:	ins    BYTE PTR es:[edi],dx
  41706b:	(bad)  
  41706e:	in     eax,dx
  41706f:	mov    esi,esi
  417071:	out    0xeb,eax
  417073:	les    ecx,FWORD PTR [edi]
  417075:	pop    ebx
  417076:	jne    0x41707c
  417078:	mov    eax,0xbbeb06e7
  41707d:	mov    dl,BYTE PTR [esi]
  41707f:	popa   
	...
  41708c:	repz xor ecx,DWORD PTR [ebx+0xe8abbeb]
  417093:	jno    0x417088
  417095:	xor    ecx,DWORD PTR [ebx-0x716d8305]
  41709b:	call   0xe95011a9
  4170a0:	pop    es
  4170a1:	fsubr  st(1),st
  4170a3:	push   0xffffffd0
  4170a5:	push   bx
  4170a7:	lahf   
  4170a8:	in     eax,0xe9
  4170aa:	inc    ecx
  4170ab:	fnstsw WORD PTR [ecx+0xf]
  4170ae:	push   cs
  4170af:	jb     0x41705b
  4170b1:	jmp    0x6002:0x1b69f149
  4170b8:	dec    ecx
  4170b9:	mov    bl,0xeb
  4170bb:	in     eax,0xe3
  4170bd:	test   eax,0x65ed0a85
  4170c2:	pop    es
  4170c3:	out    dx,al
  4170c4:	jecxz  0x417051
  4170c6:	lea    edx,[edi]
  4170c8:	cmp    edi,DWORD PTR [edx+eax*1-0x48]
  4170cc:	inc    edx
  4170cd:	fcmovnbe st,st(0)
  4170cf:	test   al,0x4d
  4170d1:	push   edx
  4170d2:	xor    eax,0x85716caf
  4170d7:	retf   0x752e
  4170da:	push   es
  4170db:	jmp    0xa7cefcc5
  4170e0:	xor    al,0x7c
  4170e2:	push   ss
  4170e3:	clc    
  4170e4:	and    bl,bl
  4170e6:	enter  0x1da8,0x60
  4170ea:	xor    eax,0x85717c97
  4170ef:	mov    al,BYTE PTR [eax]
	...
  4170f9:	add    BYTE PTR [eax],al
  4170fb:	add    BYTE PTR [edx],cl
  4170fd:	xor    dh,BYTE PTR [ebx]
  4170ff:	fiadd  DWORD PTR ds:0x34b78d99
  417105:	jl     0x41710b
  417107:	fsub   DWORD PTR ds:0x4f00c8db
  41710d:	mov    BYTE PTR [esi],cl
  41710f:	xor    DWORD PTR [eax-0x19],esp
  417112:	cmc    
  417113:	cmp    DWORD PTR [ebp-0x74],0x55deff06
  41711a:	fmul   QWORD PTR [ecx+0x8e0a638]
  417120:	call   FWORD PTR [edi+edi*2-0xf99d58b]
  417127:	mov    edi,DWORD PTR [ebx-0x26104866]
  41712d:	out    0xe1,eax
  41712f:	add    DWORD PTR [edi-0x6a],eax
  417132:	(bad)  
  417133:	clc    
  417134:	pop    ss
  417135:	mov    ch,0x27
  417137:	into   
  417138:	pop    ss
  417139:	cwde   
  41713a:	ja     0x41711f
  41713c:	inc    esp
  41713d:	shr    DWORD PTR [edx+ebp*4-0x26d84f41],0x1b
  417145:	push   ebx
  417146:	adc    al,0x89
  417148:	shl    DWORD PTR [ebp-0x7bf2e017],0xf7
  41714f:	mov    BYTE PTR [ebp+ebx*2-0x4],bh
  417153:	(bad)  
  417154:	mov    ds:0x5e000e8e,eax
  417159:	data16 jg 0x41712a
  41715c:	pop    DWORD PTR [edx+ebx*1+0x89]
	...
  41716b:	add    BYTE PTR [ecx-0x28fb165b],cl
  417171:	xchg   esi,eax
  417172:	(bad)  
  417173:	cli    
  417174:	xlat   BYTE PTR ds:[ebx]
  417175:	mov    ds:0x5752c085,eax
  41717a:	sbb    BYTE PTR [ecx+0x3fe0e758],cl
  417180:	xchg   ebp,eax
  417181:	popa   
  417182:	mov    bl,0x4
  417184:	(bad)  ds:0xa5398906
  41718a:	jmp    0xfac40095
  41718f:	add    bh,dh
  417191:	jnp    0x417196
  417193:	or     DWORD PTR [eax-0x78],eax
  417196:	pop    edx
  417197:	aas    
  417198:	div    edx
  41719a:	mov    ebp,0x848208bf
  41719f:	in     eax,0xf3
  4171a1:	jnp    0x4171a6
  4171a3:	add    ah,bh
  4171a5:	cmp    bh,dh
  4171a7:	jbe    0x4171df
  4171a9:	jl     0x417137
  4171ab:	fnsave [esi-0x27810ae0]
  4171b1:	pop    ss
  4171b2:	add    eax,DWORD PTR [eax]
  4171b4:	test   DWORD PTR [esi+edx*4+0x3bb4804],0x8c384287
  4171bf:	(bad)  
  4171c0:	je     0x4171fd
  4171c2:	test   DWORD PTR [esi-0x79029344],0x3de4fcc1
  4171cc:	ins    BYTE PTR es:[edi],dx
  4171cd:	xchg   edi,eax
  4171ce:	mov    BYTE PTR [eax+eax*1],al
	...
  4171d9:	add    BYTE PTR [eax],al
  4171db:	add    BYTE PTR [ecx],dl
  4171dd:	mov    ebx,0x58020903
  4171e2:	mov    ebp,ds
  4171e4:	mov    dh,0x58
  4171e6:	add    eax,0x46f907f
  4171eb:	add    bh,dh
  4171ed:	test   BYTE PTR [esi+0x3baeb04],dl
  4171f3:	xchg   DWORD PTR [eax-0x46],eax
  4171f6:	fisttp WORD PTR [esi]
  4171f8:	jbe    0x4171a2
  4171fa:	fiadd  WORD PTR [eax]
  4171fc:	idiv   DWORD PTR [ebx+0xc]
  4171ff:	mov    ch,0xf3
  417201:	adc    eax,0xc86e0041
  417206:	shr    ebp,0xe1
  417209:	cli    
  41720a:	(bad)  
  41720b:	cld    
  41720c:	idiv   DWORD PTR [ebx+0x3]
  41720f:	or     DWORD PTR [eax-0x79],esp
  417212:	pop    ebx
  417213:	aas    
  417214:	mul    DWORD PTR [edx-0x22]
  417217:	shl    DWORD PTR [eax-0x68],1
  41721a:	scas   al,BYTE PTR es:[edi]
  41721b:	fdivrp st(3),st
  41721d:	fstp   TBYTE PTR [eax+0x66661ac5]
  417223:	sar    eax,cl
  417225:	ins    DWORD PTR es:[edi],dx
  417226:	jbe    0x4171e6
  417228:	jbe    0x4171cc
  41722a:	loope  0x41723e
  41722c:	adc    edx,ebx
  41722e:	pop    DWORD PTR [ebx+0x106430d1]
  417234:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417235:	addr16 loop 0x41727c
  417238:	neg    ecx
  41723a:	cmp    ch,al
  41723c:	loop   0x4172a7
  41723e:	outs   dx,BYTE PTR ds:[esi]
  41723f:	fild   WORD PTR [eax]
	...
  417249:	add    BYTE PTR [eax],al
  41724b:	add    bl,cl
  41724d:	arpl   bp,bp
  41724f:	add    ebp,esi
  417251:	mov    bh,0xe9
  417253:	pop    edx
  417254:	clc    
  417255:	bound  esi,QWORD PTR [esi-0x49]
  417258:	jo     0x4171da
  41725a:	fild   WORD PTR [edx+edx*4-0x8fc1291]
  417261:	pop    ebx
  417262:	pop    eax
  417263:	add    BYTE PTR [eax],ah
  417265:	and    ch,ch
  417267:	mov    WORD PTR [edx+0x9ee00a2],?
  41726d:	mov    BYTE PTR [ecx],cl
  41726f:	add    al,0xf7
  417271:	(bad)  
  417272:	hlt    
  417273:	mov    ?,ebx
  417275:	imul   DWORD PTR [ebp-0x70987fd]
  41727b:	mov    WORD PTR [ecx],?
  41727d:	in     al,0x2d
  41727f:	add    BYTE PTR [eax-0x6c],bh
  417282:	sbb    al,0xf6
  417284:	jno    0x417217
  417286:	ins    BYTE PTR es:[edi],dx
  417287:	fst    QWORD PTR [edx]
  417289:	fcomp  QWORD PTR [ecx]
  41728b:	xchg   ecx,eax
  41728c:	repz lock sub eax,0xb8f5ee04
  417293:	mov    WORD PTR [edx],ds
  417295:	mov    ds:0x87b1fdc8,al
  41729a:	push   es
  41729b:	mov    ch,0xf4
  41729d:	bound  eax,QWORD PTR [esi]
  41729f:	loop   0x417312
  4172a1:	addr16 jp 0x4172cc
  4172a4:	repz out 0xd7,eax
  4172a7:	test   al,0x19
  4172a9:	popa   
  4172aa:	test   DWORD PTR [esi-0x16f99ce0],ecx
	...
  4172bc:	in     eax,dx
  4172bd:	mov    ch,0x2
  4172bf:	add    esi,DWORD PTR [edx-0x4461729e]
  4172c5:	jge    0x4172d7
  4172c7:	push   0xe9066ec9
  4172cc:	hlt    
  4172cd:	pop    ecx
  4172ce:	scas   eax,DWORD PTR es:[edi]
  4172cf:	in     eax,dx
  4172d0:	cmp    al,0x30
  4172d2:	push   es
  4172d3:	sbb    BYTE PTR [edx+0x7551496d],ch
  4172d9:	jmp    0x4172d8
  4172db:	jmp    0x47ed56d9
  4172e0:	mov    eax,ds:0xbb318d6d
  4172e5:	adc    BYTE PTR [edi],0x60
  4172e8:	mov    dl,0x9f
  4172ea:	call   0xf5a92e4f
  4172ef:	jo     0x417355
  4172f1:	aas    
  4172f2:	into   
  4172f3:	jo     0x4172aa
  4172f5:	out    dx,eax
  4172f6:	loop   0x41733b
  4172f8:	pop    esi
  4172f9:	mov    esp,0x3f3ed8ac
  4172fe:	fnsave [eax+0x44]
  417301:	scas   eax,DWORD PTR es:[edi]
  417302:	out    0xde,al
  417304:	sbb    DWORD PTR [eax-0x5b84f82b],0xd
  41730b:	sti    
  41730c:	ins    BYTE PTR es:[edi],dx
  41730d:	xchg   edx,eax
  41730e:	vpor   xmm7,xmm5,XMMWORD PTR [edi]
  417312:	into   
  417313:	jo     0x41734b
  417315:	out    dx,eax
  417316:	loop   0x4172ee
  417318:	rep ins DWORD PTR es:[edi],dx
  41731a:	push   es
  41731b:	sbb    BYTE PTR [edi+eiz*8-0x22],bh
	...
  41732b:	add    BYTE PTR [edi+0x5c310e86],cl
  417331:	fcmovnbe st,st(6)
  417333:	shl    DWORD PTR [esi],0x64
  417336:	daa    
  417337:	enter  0xa197,0x77
  41733b:	jecxz  0x41737a
  41733d:	push   edx
  41733e:	xor    eax,0x7fac2f33
  417343:	fcomp  DWORD PTR [edi-0x7a]
  417346:	add    al,0x31
  417348:	dec    esp
  417349:	fcmovne st,st(6)
  41734b:	shl    DWORD PTR [esi+0x76],0x28
  41734f:	shl    BYTE PTR [edi-0x5c],1
  417352:	ja     0x417337
  417354:	popa   
  417355:	cwde   
  417356:	push   es
  417357:	add    BYTE PTR [edi+0xfd87fac],bl
  41735d:	xchg   DWORD PTR [esi],edx
  41735f:	xor    DWORD PTR [edi],ebx
  417361:	fcmove st,st(6)
  417363:	shl    DWORD PTR [esi],0x63
  417366:	daa    
  417367:	rcl    BYTE PTR [edi-0x5c],1
  41736a:	ja     0x41734f
  41736c:	shl    DWORD PTR [edi+0x9],0xf
  417370:	scas   eax,DWORD PTR es:[edi]
  417371:	lods   al,BYTE PTR ds:[esi]
  417372:	lea    eax,[ebp-0x6a]
  417375:	mov    eax,ds:0x9b9f04e5
  41737a:	jg     0x417394
  41737c:	or     eax,0x5040e2e
  417381:	cs push cs
  417383:	mov    DWORD PTR [esi+0x175b5837],ecx
  417389:	jnp    0x4173e6
  41738b:	ret    0x6286
  41738e:	push   ebp
  41738f:	push   esi
	...
  41739c:	in     eax,0x2a
  41739e:	and    cl,BYTE PTR [eax+edi*2]
  4173a1:	(bad)  [edx+0x24]
  4173a4:	adc    BYTE PTR ds:[ebx-0x39019e0a],al
  4173ab:	punpckhbw mm4,QWORD PTR [ecx-0x440848f7]
  4173b2:	xor    ecx,DWORD PTR [ebx-0x17cc7c4c]
  4173b8:	mov    ds:0x9ffdd2a1,al
  4173bd:	xchg   DWORD PTR [eax+0x3f],ecx
  4173c0:	mul    DWORD PTR [ebx-0x42df03f2]
  4173c6:	add    dh,BYTE PTR [ebp-0x17cad1df]
  4173cc:	mov    dh,0xc1
  4173ce:	sar    ch,cl
  4173d0:	lahf   
  4173d1:	inc    DWORD PTR [edi+0x3f]
  4173d4:	mul    ebx
  4173d6:	retf   0xf8f9
  4173d9:	in     al,0x31
  4173db:	pop    ecx
  4173dc:	mov    ch,0x73
  4173de:	add    edx,DWORD PTR [ebx+0x7e]
  4173e1:	fidiv  WORD PTR [ebx]
  4173e3:	push   eax
  4173e4:	inc    esp
  4173e5:	add    DWORD PTR [eax],edi
  4173e7:	or     BYTE PTR [esi+eiz*4-0x1],ch
  4173eb:	mov    ch,BYTE PTR [edx]
  4173ed:	add    al,0x35
  4173ef:	push   eax
  4173f0:	ffreep st(6)
  4173f2:	iret   
  4173f3:	std    
  4173f4:	shl    BYTE PTR [ebx+0x7c367477],0x80
  4173fb:	inc    ebx
  4173fc:	scas   eax,DWORD PTR es:[edi]
  4173fd:	retf   
  4173fe:	jmp    0x4173f5
	...
  41740c:	stos   DWORD PTR es:[edi],eax
  41740d:	xor    al,0xd2
  41740f:	push   0x44b6fb
  417414:	push   0xffffffbe
  417416:	fist   DWORD PTR [eax-0x61]
  417419:	push   edx
  41741a:	iret   
  41741b:	std    
  41741c:	mov    bl,ah
  41741e:	ja     0x417493
  417420:	ss jl  0x4173a3
  417423:	inc    ebx
  417424:	jg     0x4173f1
  417426:	jmp    0x417401
  417428:	jae    0x417496
  41742a:	rcl    DWORD PTR [ecx+0x7a],cl
  41742d:	mov    esi,0xf94f50db
  417432:	into   
  417433:	std    
  417434:	pop    eax
  417435:	bound  eax,QWORD PTR [ebp+edi*2+0x63]
  417439:	bts    esp,edi
  41743c:	dec    eax
  41743d:	push   ss
  41743e:	jmpw   0xf2b8
  417442:	std    
  417443:	mov    eax,ss:0x7ffc22d9
  417449:	imul   eax
  41744b:	xor    BYTE PTR [edx+ebp*2+0x680f371d],0xb4
  417453:	rcr    DWORD PTR [edx],cl
  417455:	fild   QWORD PTR [edx]
  417457:	aam    0xa7
  417459:	loope  0x417407
  41745b:	cld    
  41745c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41745d:	jp     0x4173e1
  41745f:	iret   
  417460:	add    ch,BYTE PTR [ebp+0x5]
  417463:	mov    BYTE PTR [ebx+0x3480ed23],al
  417469:	imul   ebx,DWORD PTR ds:0x706f82dc,0xffffffd3
	...
  41747c:	dec    edi
  41747d:	out    0xf1,eax
  41747f:	inc    esp
  417480:	neg    ebp
  417482:	stos   BYTE PTR es:[edi],al
  417483:	shl    DWORD PTR [edi],cl
  417485:	jnp    0x4174fd
  417487:	ror    dl,1
  417489:	ins    BYTE PTR es:[edi],dx
  41748a:	fs xor ebx,eax
  41748d:	fsub   DWORD PTR [edx+0x412670d3]
  417493:	jge    0x4174e1
  417495:	jae    0x41746c
  417497:	pop    es
  417498:	and    al,0x22
  41749a:	in     eax,dx
  41749b:	xor    BYTE PTR [ebx+ebp*2],0x9d
  41749f:	fisttp DWORD PTR [edx]
  4174a1:	outs   dx,DWORD PTR ds:[esi]
  4174a2:	and    bl,dl
  4174a4:	pop    ds
  4174a5:	addr16 xchg edx,eax
  4174a7:	inc    esp
  4174a8:	neg    ebp
  4174aa:	stos   BYTE PTR es:[edi],al
  4174ab:	shl    DWORD PTR [edi],cl
  4174ad:	jnp    0x41743d
  4174af:	iret   
  4174b0:	jp     0x41751e
  4174b2:	je     0x4174e5
  4174b4:	jae    0x41748e
  4174b6:	mov    ds:0x62670d3,al
  4174bb:	cmc    
  4174bc:	jecxz  0x4174c5
  4174be:	test   BYTE PTR [ecx-0x16bb0f90],0x77
  4174c5:	and    dh,bh
  4174c7:	cmp    DWORD PTR [ebx],ebp
  4174c9:	es cli 
  4174cb:	(bad)  
  4174cc:	and    eax,0xb25481fb
  4174d1:	bound  ecx,QWORD PTR [ecx-0x11ecb4d4]
  4174d7:	add    BYTE PTR [edi+0x6e],al
  4174da:	neg    DWORD PTR [edi]
  4174dc:	jbe    0x4174fe
  4174de:	(bad)  
  4174df:	sbb    DWORD PTR [eax],eax
	...
  4174e9:	add    BYTE PTR [eax],al
  4174eb:	add    BYTE PTR [ebx],bh
  4174ed:	cmp    ebx,0xffffffa6
  4174f0:	and    eax,0xcef1c0e2
  4174f5:	xlat   BYTE PTR ds:[ebx]
  4174f6:	inc    ecx
  4174f7:	cdq    
  4174f8:	les    edi,FWORD PTR [edx-0x2d]
  4174fb:	xchg   edx,eax
  4174fc:	and    eax,0x7222586e
  417501:	jg     0x41755c
  417503:	stos   DWORD PTR es:[edi],eax
  417504:	in     al,dx
  417505:	imul   edx,DWORD PTR [edx+0x60],0xffffffcf
  417509:	jmp    0x4174f4
  41750b:	pop    ebp
  41750c:	repz bound eax,QWORD PTR [esi]
  41750f:	mov    edx,0xbc8b160e
  417514:	int3   
  417515:	fidiv  DWORD PTR [ecx-0x1b]
  417518:	ja     0x4174f9
  41751a:	xchg   BYTE PTR [edi-0x5b],cl
  41751d:	ins    DWORD PTR es:[edi],dx
  41751e:	push   esi
  41751f:	push   ecx
  417520:	xchg   DWORD PTR [ebx-0x9],ebp
  417523:	jmp    0xedafd872
  417528:	ds sub al,0x6
  41752b:	inc    ecx
  41752c:	and    ebp,DWORD PTR [ebp-0x9]
  41752f:	es jmp 0x4174c2
  417532:	mov    WORD PTR [ebx-0x10],gs
  417535:	hlt    
  417536:	inc    esp
  417537:	jmp    0xab75dc38
  41753c:	jno    0x4175a6
  41753e:	push   cs
  41753f:	add    BYTE PTR [edx-0x6a],bh
  417542:	rol    DWORD PTR [ebp-0x66e8a],0x4f
  417549:	pop    edi
  41754a:	push   es
  41754b:	add    ch,dh
  41754d:	xor    edi,DWORD PTR [edi-0x10]
	...
  41755c:	(bad)  
  41755d:	jecxz  0x4175d1
  41755f:	(bad)  
  417560:	sub    DWORD PTR [ecx+0x5635d227],edx
  417566:	lea    eax,[ebp-0x66f5e]
  41756c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41756d:	jecxz  0x4175e9
  41756f:	(bad)  
  417570:	imul   edx,DWORD PTR [ecx-0x6f1d7a07],0xeb95fff9
  41757a:	jns    0x41757a
  41757c:	pop    ecx
  41757d:	xchg   ecx,eax
  41757e:	or     DWORD PTR [esi+0x7fe6e61d],edi
  417584:	xchg   ebp,eax
  417585:	fstp   TBYTE PTR [edx-0x2]
  417588:	imul   edx,DWORD PTR [ecx+0x55b9b609],0x9cdf88fe
  417592:	add    eax,0x85210d00
  417597:	cli    
  417598:	(bad)  
  417599:	sbb    DWORD PTR [ebx],eax
  41759b:	adc    BYTE PTR ds:0x80c6735f,0x2c
  4175a2:	out    dx,al
  4175a3:	imul   ebp,DWORD PTR [eax],0xffffff94
  4175a6:	stc    
  4175a7:	xor    DWORD PTR [ebx+0x17],0xfffffff8
  4175ab:	(bad)  
  4175ac:	cmp    DWORD PTR [edi-0x7a],ebx
  4175af:	cmp    ebx,DWORD PTR [esi+0x2b83a111]
  4175b5:	pop    ss
  4175b6:	clc    
  4175b7:	dec    ecx
  4175b9:	pop    esi
  4175ba:	jae    0x41755a
  4175bc:	or     esp,edx
  4175be:	xchg   dh,bh
	...
  4175cc:	jmp    0xf829cc64
  4175d1:	fadd   DWORD PTR [eax+eax*1]
  4175d4:	idiv   DWORD PTR [eax+0x507e5935]
  4175da:	daa    
  4175db:	ret    0x7bff
  4175de:	xor    BYTE PTR [edi-0x731a04a6],al
  4175e4:	idiv   BYTE PTR [ebx+0x3]
  4175e7:	push   ecx
  4175e8:	test   eax,0xff5b7928
  4175ed:	hlt    
  4175ee:	dec    edi
  4175ef:	or     al,0x72
  4175f1:	test   DWORD PTR [edx+0x339938fe],0x37c30e8
  4175fb:	add    BYTE PTR [ebp-0x56fba485],bl
  417601:	cmp    al,BYTE PTR [edx]
  417603:	call   0xfe182d4c
  417608:	(bad)  
  417609:	lods   eax,DWORD PTR ds:[esi]
  41760a:	jns    0x41758e
  41760c:	repz push ecx
  41760e:	inc    ebx
  41760f:	add    BYTE PTR [edi+0x78],ch
  417612:	adc    DWORD PTR [edx+0x74],eax
  417615:	(bad)  
  417616:	repz jnp 0x4175ff
  417619:	mov    eax,0xe8e97880
  41761e:	aad    0xff
  417620:	loopne 0x41769d
  417622:	add    ebp,ecx
  417624:	inc    ebx
  417625:	add    edx,ebx
  417627:	xchg   DWORD PTR [edx-0x79],edi
  41762a:	aad    0xfd
  41762c:	enter  0xb04a,0xe9
	...
  41763c:	pop    es
  41763d:	add    eax,0x18b97480
  417642:	(bad)  
  417643:	xchg   DWORD PTR [edx-0x61],edi
  417646:	aad    0xfd
  417648:	test   al,0x28
  41764a:	xor    BYTE PTR [ecx+eiz*4+0x30],0xd6
  41764f:	mov    DWORD PTR [edx-0x49],ebp
  417652:	aad    0xfd
  417654:	nop
  417655:	(bad)  
  417656:	lock xchg ecx,eax
  417658:	mul    ch
  41765a:	or     eax,0x91a76e50
  41765f:	sar    DWORD PTR [edx+0x69],1
  417662:	fcomp  DWORD PTR [ecx+0x7b053432]
  417668:	push   0xb603ec9f
  41766d:	and    al,0x6c
  41766f:	int    0x7
  417671:	call   0x634ffa57
  417676:	pop    edx
  417677:	(bad)  
  417678:	mov    eax,ds:0x3cced510
  41767d:	imul   edx,eax,0xc6ea9483
  417683:	iret   
  417684:	xor    ah,BYTE PTR [edx+0x6d]
  417687:	or     esi,edi
  417689:	out    dx,eax
  41768a:	jg     0x41760f
  41768c:	pop    esp
  41768d:	jmp    0x6e32:0x621acfae
  417694:	jl     0x417675
  417696:	ins    DWORD PTR es:[edi],dx
  417697:	into   
  417698:	or     ch,BYTE PTR [ecx+0x3d]
  41769b:	fcomp  QWORD PTR [eax+0x62]
  41769e:	in     eax,dx
  41769f:	add    eax,DWORD PTR [eax]
	...
  4176a9:	add    BYTE PTR [eax],al
  4176ab:	add    BYTE PTR [edx-0x1c82cbf8],bl
  4176b1:	push   es
  4176b2:	stos   DWORD PTR es:[edi],eax
  4176b3:	cld    
  4176b4:	call   0x6e7885ce
  4176b9:	pop    ds
  4176ba:	leave  
  4176bb:	repz push edx
  4176bd:	fmul   QWORD PTR [ecx]
  4176bf:	sub    bl,ch
  4176c1:	add    BYTE PTR [edx-0x55],ch
  4176c4:	inc    esp
  4176c5:	pop    esp
  4176c6:	jbe    0x41768e
  4176c8:	ins    BYTE PTR es:[edi],dx
  4176c9:	jmp    0x4176c7
  4176cb:	gs jge 0x417730
  4176ce:	in     eax,dx
  4176cf:	(bad)  
  4176d1:	aad    0xbd
  4176d3:	repz jno 0x417676
  4176d6:	mov    edi,0x658c514
  4176db:	jle    0x417742
  4176dd:	adc    eax,0x18932983
  4176e2:	out    dx,al
  4176e3:	ins    DWORD PTR es:[edi],dx
  4176e4:	mov    al,ds:0xf891f766
  4176e9:	repz inc esp
  4176eb:	jmp    0xf3ea48c
  4176f0:	inc    eax
  4176f1:	push   esi
  4176f2:	scas   eax,DWORD PTR es:[edi]
  4176f3:	and    ah,BYTE PTR [esi+ecx*1]
  4176f6:	out    dx,al
  4176f7:	jns    0x417742
  4176f9:	test   WORD PTR [ecx-0x16bb0b90],0x412c
  417702:	std    
  417703:	out    0x39,al
  417705:	push   esi
  417706:	scas   eax,DWORD PTR es:[edi]
  417707:	ret    0x1105
  41770a:	out    dx,al
  41770b:	xor    eax,0x2ef76620
	...
  41771c:	loope  0x417727
  41771e:	(bad)  
  41771f:	icebp  
  417720:	hlt    
  417721:	adc    DWORD PTR [ebx+0x535acf1d],ecx
  417727:	rcr    DWORD PTR ds:0x7baef771,0xa2
  41772e:	xchg   cl,ch
  417730:	hlt    
  417731:	bound  edi,QWORD PTR [esi+0x6279fe5]
  417737:	bound  eax,QWORD PTR [ecx+eiz*8]
  41773a:	adc    ebp,DWORD PTR [edx-0x4c]
  41773d:	pop    esi
  41773e:	sub    DWORD PTR [edx-0xb7dd410],0x3b
  417745:	arpl   WORD PTR [esi+eax*4+0x6c],si
  417749:	fidiv  WORD PTR [ecx+0x28]
  41774c:	sti    
  41774d:	fst    DWORD PTR [esi]
  41774f:	jo     0x417716
  417751:	loop   0x417719
  417753:	in     eax,0x75
  417755:	mov    eax,ds:0xf0ef1402
  41775a:	inc    esp
  41775b:	jmp    0x9ceda6
  417760:	fcomp  QWORD PTR [edi+0x6]
  417763:	push   ebx
  417764:	and    eax,0x7d082238
  417769:	mov    ebp,esi
  41776b:	clc    
  41776c:	loope  0x417706
  41776e:	ja     0x417733
  417770:	push   ds
  417771:	fs push es
  417773:	add    BYTE PTR [esi],dl
  417775:	pusha  
  417776:	jae    0x4177b9
  417778:	mov    gs,esp
  41777a:	adc    al,0x89
  41777c:	outs   dx,BYTE PTR ds:[esi]
  41777d:	in     al,0xc5
  41777f:	add    al,0x0
	...
  417789:	add    BYTE PTR [eax],al
  41778b:	add    ch,bl
  41778d:	mov    ds:0xada3d02,eax
  417792:	aaa    
  417793:	add    ah,bl
  417795:	mov    BYTE PTR [esi+0x61ecb84],bh
  41779b:	mov    ecx,DWORD PTR [ebp-0x14]
  41779e:	adc    eax,0x855a8d83
  4177a3:	ror    BYTE PTR [edx+0x58],0x2
  4177a7:	jbe    0x417788
  4177a9:	pop    esi
  4177aa:	je     0x41779b
  4177ac:	aad    0xa4
  4177ae:	add    al,BYTE PTR [eax]
  4177b0:	or     ebp,esp
  4177b2:	loop   0x417737
  4177b4:	xor    dh,BYTE PTR [esi+0x56]
  4177b7:	push   esi
  4177b8:	xchg   ebp,eax
  4177b9:	aaa    
  4177ba:	push   cs
  4177bb:	mov    ebp,ebx
  4177bd:	bound  ecx,QWORD PTR [ebx+0x552e5645]
  4177c3:	call   0x3b0e3b
  4177c8:	push   ebx
  4177c9:	push   ds
  4177ca:	not    BYTE PTR [eax+0x63]
  4177cd:	and    al,0xe
  4177cf:	push   eax
  4177d0:	xchg   BYTE PTR [edi-0x2],bh
  4177d3:	jmp    DWORD PTR [ecx-0x1a]
  4177d6:	inc    edx
  4177d7:	call   0x11075bca
  4177dc:	lea    ecx,[edx-0x67de072b]
  4177e2:	outs   dx,BYTE PTR ds:[esi]
  4177e3:	test   bh,dh
  4177e5:	xchg   DWORD PTR [eax+eax*1-0x7e],eax
  4177e9:	mov    edi,0x9f9f50cb
  4177ee:	int3   
  4177ef:	std    
	...
  4177fc:	mov    al,ds:0x36747f94
  417801:	jl     0x41787b
  417803:	inc    ebx
  417804:	xchg   esp,ecx
  417806:	fld    TBYTE PTR [ebp-0x72]
  417809:	cmp    eax,0xd07b68c9
  41780e:	inc    esp
  41780f:	add    BYTE PTR [edx-0x49],ch
  417812:	fist   DWORD PTR [eax+0x5f]
  417815:	fcmovne st,st(4)
  417817:	std    
  417818:	push   0x6cfc26f1
  41781d:	mov    edi,0x6fb287d3
  417822:	jl     0x41787f
  417824:	inc    edi
  417825:	add    DWORD PTR [edi],esp
  417827:	hlt    
  417828:	jl     0x417861
  41782a:	fiadd  DWORD PTR [edi+0x5b7c8fba]
  417830:	dec    edi
  417831:	and    al,0xe
  417833:	jae    0x4177eb
  417835:	jnp    0x4178af
  417837:	inc    ebx
  417838:	das    
  417839:	dec    esp
  41783a:	fidivr DWORD PTR [ecx]
  41783c:	push   ds
  41783d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41783e:	retf   0xf368
  417841:	es inc ebx
  417843:	add    BYTE PTR [edx+0x1f50d23f],al
  417849:	(bad)  
  41784a:	int3   
  41784b:	std    
  41784c:	add    BYTE PTR [esi+ecx*1+0x73],dl
  417850:	mov    dh,0x7b
  417852:	js     0x417897
  417854:	fild   QWORD PTR [ebx]
  417856:	ficomp DWORD PTR ds:0x89cadcee
  41785c:	inc    edx
  41785d:	call   0x41bbdf
	...
  41786a:	add    BYTE PTR [eax],al
  41786c:	out    0x2,eax
  41786e:	inc    eax
  41786f:	cld    
  417870:	jle    0x4178c8
  417872:	ror    BYTE PTR [ecx+0x7859632a],cl
  417878:	xor    al,0x7b
  41787a:	jbe    0x4178c2
  41787c:	ret    
  41787d:	(bad)  [edx-0x2d20e025]
  417883:	inc    edx
  417884:	not    edi
  417886:	stos   BYTE PTR es:[edi],al
  417887:	retf   
  417888:	inc    edi
  417889:	jnp    0x4178d1
  41788b:	retf   
  41788c:	call   0xed24:0x487c565
  417893:	jle    0x4178c9
  417895:	jae    0x417854
  417897:	fisttp DWORD PTR [esi+0xfcc186a]
  41789d:	fistp  WORD PTR [edx-0x5d2808be]
  4178a3:	fcmovnb st,st(7)
  4178a5:	jp     0x4178c9
  4178a7:	retf   
  4178a8:	bound  esp,QWORD PTR [ebp-0x71]
  4178ab:	jle    0x417861
  4178ad:	push   0xffffff9d
  4178af:	fstp   TBYTE PTR [ebx+0x6a]
  4178b2:	call   0xf55df582
  4178b7:	xor    ebp,DWORD PTR [edi+ebx*1-0x23]
  4178bb:	xor    al,0x4f
  4178bd:	in     eax,dx
  4178be:	aam    0xcb
  4178c0:	xor    ah,cl
  4178c2:	lahf   
  4178c3:	hlt    
  4178c4:	ret    0x2ad7
  4178c7:	fadd   st(7),st
  4178c9:	jp     0x41791e
  4178cb:	int3   
  4178cc:	sbb    ah,BYTE PTR [ebp+0xf]
  4178cf:	das    
	...
  4178dc:	js     0x417954
  4178de:	or     al,dh
  4178e0:	jmp    DWORD PTR [edx+0x3a]
  4178e3:	jge    0x4178f9
  4178e5:	jecxz  0x417870
  4178e7:	js     0x4178e1
  4178e9:	fs in  eax,dx
  4178eb:	ss dec ecx
  4178ed:	or     al,0x64
  4178ef:	sub    edi,edi
  4178f1:	xlat   BYTE PTR ds:[ebx]
  4178f2:	cli    
  4178f3:	imul   DWORD PTR [ebp-0x22]
  4178f6:	ins    DWORD PTR es:[edi],dx
  4178f7:	retf   0x64da
  4178fa:	push   es
  4178fb:	sbb    DWORD PTR [ebx-0x439107f1],esi
  417901:	stc    
  417902:	add    eax,0x44eec0d1
  417907:	jmp    0x573af5a8
  41790c:	mov    esp,0x7163d434
  417911:	pop    edi
  417912:	jo     0x4178bc
  417914:	hlt    
  417915:	fiadd  DWORD PTR [edx]
  417917:	sti    
  417918:	xor    ah,dl
  41791a:	cld    
  41791b:	sar    DWORD PTR [eax],1
  41791d:	je     0x4178de
  41791f:	cmp    esp,DWORD PTR fs:[ebp-0x9]
  417923:	es cli 
  417925:	bound  eax,QWORD PTR [esi]
  417927:	jmp    0x19ce88c5
  41792c:	repnz fbstp TBYTE PTR [edx+0xf]
  417930:	cmp    al,0x66
  417932:	xor    eax,0x8b33401b
  417937:	fs (bad) 
  417939:	fs div esi
  41793c:	rcr    edi,cl
  41793e:	jp     0x41792f
	...
  41794c:	cmp    eax,0xb06cf766
  417951:	fs neg esi
  417954:	mov    ecx,0x3dd77ad7
  417959:	popw   es
  41795b:	(bad)  
  41795c:	icebp  
  41795d:	loope  0x417945
  41795f:	inc    esi
  417960:	mov    al,ds:0x2dbf7aa7
  417965:	popw   es
  417967:	jg     0x417966
  417969:	xor    edi,esi
  41796b:	popa   
  41796c:	repz pushf 
  41796e:	add    ebp,ecx
  417970:	mov    ecx,0xca38320
  417975:	jmp    0x6342e27a
  41797a:	jno    0x417923
  41797c:	es or  eax,0x98ee00ee
  417982:	stc    
  417983:	dec    DWORD PTR [ebp-0x3d]
  417986:	jle    0x417986
  417988:	dec    ecx
  417989:	cdq    
  41798a:	push   es
  41798b:	add    BYTE PTR [ebp+0x4da7735f],0xdb
  417992:	jle    0x417992
  417994:	sbb    DWORD PTR [ecx-0x14d78afa],ebx
  41799a:	add    BYTE PTR [eax+0x50f99938],0x46
  4179a1:	call   0x5b58:0x38d9fffb
  4179a8:	pop    ss
  4179a9:	mov    WORD PTR [ebx-0x3e],ds
  4179ac:	xchg   esi,eax
  4179ad:	pop    edi
  4179ae:	push   ebx
  4179af:	mov    DWORD PTR [eax],eax
	...
  4179b9:	add    BYTE PTR [eax],al
  4179bb:	add    bl,dh
  4179bd:	das    
  4179be:	push   esi
  4179bf:	push   ebx
  4179c0:	inc    eax
  4179c1:	in     al,0x52
  4179c3:	or     ch,dl
  4179c5:	cmp    cl,BYTE PTR [edx]
  4179c7:	mov    eax,DWORD PTR [ebx-0x1b36d791]
  4179cd:	arpl   WORD PTR [eax],cx
  4179cf:	mov    BYTE PTR [edx+0x628aef6a],dl
  4179d5:	outs   dx,BYTE PTR ds:[esi]
  4179d6:	jg     0x4179dc
  4179d8:	daa    
  4179d9:	push   ds
  4179da:	test   ecx,edi
  4179dc:	inc    esi
  4179dd:	sbb    ebp,ebx
  4179df:	push   ebx
  4179e0:	cld    
  4179e1:	xchg   BYTE PTR [edx+0x279949fa],ch
  4179e7:	ror    bl,cl
  4179e9:	push   0x1d
  4179eb:	mov    dl,BYTE PTR [edx]
  4179ed:	dec    ebp
  4179ee:	xor    al,0x1
  4179f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4179f1:	pop    edi
  4179f2:	inc    esp
  4179f3:	add    DWORD PTR [esi+eiz*2+0x7b],0xfffffff0
  4179f8:	shrd   DWORD PTR [esp+eax*2+0x48e9703],ecx,cl
  417a00:	sbb    al,0x1d
  417a02:	test   edx,edi
  417a04:	test   DWORD PTR [ebx+0x3f],0x7b9549f1
  417a0b:	in     al,dx
  417a0c:	inc    edx
  417a0d:	push   cs
  417a0e:	(bad)  
  417a0f:	(bad)  
  417a10:	fmul   DWORD PTR [ebx+eax*1+0x0]
  417a14:	test   DWORD PTR [ebx+0x3],0x34bf700
  417a1b:	add    bh,dh
  417a1d:	dec    ebx
  417a1e:	add    eax,DWORD PTR [eax]
	...
  417a2c:	test   DWORD PTR [ebx+0x3],0x34bf700
  417a33:	add    bh,dh
  417a35:	dec    ebx
  417a36:	add    eax,DWORD PTR [eax]
  417a38:	test   DWORD PTR [ebx+0x3],0x34bf700
  417a3f:	add    bh,dh
  417a41:	dec    ebx
  417a42:	add    eax,DWORD PTR [eax]
  417a44:	test   DWORD PTR [ebx+0x3],0x34bf700
  417a4b:	add    bh,dh
  417a4d:	dec    ebx
  417a4e:	add    eax,DWORD PTR [eax]
  417a50:	test   DWORD PTR [ebx+0x3],0x34bf700
  417a57:	add    bh,dh
  417a59:	dec    ebx
  417a5a:	add    eax,DWORD PTR [eax]
  417a5c:	test   DWORD PTR [ebx+0x3],0x34bf700
  417a63:	add    bh,dh
  417a65:	dec    ebx
  417a66:	add    eax,DWORD PTR [eax]
  417a68:	test   DWORD PTR [ebx+0x3],0x34bf700
  417a6f:	add    bh,dh
  417a71:	dec    ebx
  417a72:	add    eax,DWORD PTR [eax]
  417a74:	test   DWORD PTR [ebx+0x3],0x34bf700
  417a7b:	add    bh,dh
  417a7d:	dec    ebx
  417a7e:	add    eax,DWORD PTR [eax]
  417a80:	test   DWORD PTR [ebx+0x3],0x34bf700
  417a87:	add    bh,dh
  417a89:	(bad)  
  417a8a:	in     eax,dx
  417a8b:	add    esi,edi
  417a8d:	(bad)  
  417a8e:	in     eax,dx
  417a8f:	add    eax,DWORD PTR [eax]
	...
  417a99:	add    BYTE PTR [eax],al
  417a9b:	add    bh,dh
  417a9d:	(bad)  
  417a9e:	in     eax,dx
  417a9f:	add    esi,edi
  417aa1:	(bad)  
  417aa2:	in     eax,dx
  417aa3:	add    esi,edi
  417aa5:	(bad)  
  417aa6:	in     eax,dx
  417aa7:	add    esi,edi
  417aa9:	(bad)  
  417aaa:	in     eax,dx
  417aab:	add    esi,edi
  417aad:	(bad)  
  417aae:	in     eax,dx
  417aaf:	add    esi,edi
  417ab1:	(bad)  
  417ab2:	in     eax,dx
  417ab3:	add    esi,edi
  417ab5:	(bad)  
  417ab6:	in     eax,dx
  417ab7:	add    esi,edi
  417ab9:	(bad)  
  417aba:	in     eax,dx
  417abb:	add    esi,edi
  417abd:	(bad)  
  417abe:	in     eax,dx
  417abf:	add    esi,edi
  417ac1:	(bad)  
  417ac2:	in     eax,dx
  417ac3:	add    esi,edi
  417ac5:	(bad)  
  417ac6:	in     eax,dx
  417ac7:	add    esi,edi
  417ac9:	(bad)  
  417aca:	in     eax,dx
  417acb:	add    esi,edi
  417acd:	(bad)  
  417ace:	in     eax,dx
  417acf:	add    esi,edi
  417ad1:	(bad)  
  417ad2:	in     eax,dx
  417ad3:	add    esi,edi
  417ad5:	(bad)  
  417ad6:	in     eax,dx
  417ad7:	add    esi,edi
  417ad9:	(bad)  
  417ada:	in     eax,dx
  417adb:	add    esi,edi
  417add:	(bad)  {k5}{z}
  417ae2:	mov    ?,WORD PTR [ebx]
  417ae4:	mov    bl,0xcb
  417ae6:	mov    esp,DWORD PTR [ebx]
  417ae8:	loope  0x417a7d
  417aea:	(bad)  
  417aeb:	adc    esp,DWORD PTR [eax]
  417aed:	or     ebp,0x16
  417af0:	pop    ss
  417af1:	xor    DWORD PTR [ecx+0x5b],0xffffffd4
  417af5:	sbb    BYTE PTR [ecx+ebx*2-0x68],0xce
  417afa:	dec    ecx
  417afb:	popa   
  417afc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417afd:	sbb    BYTE PTR [ecx+0x5c],0x0
	...
  417b09:	add    BYTE PTR [eax],al
  417b0b:	add    BYTE PTR [edx+eax*4-0x29549eb5],dl
  417b12:	dec    edx
  417b13:	push   edx
  417b14:	xlat   BYTE PTR ds:[ebx]
  417b15:	pushf  
  417b16:	push   ss
  417b17:	stc    
  417b18:	(bad)  
  417b19:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417b1a:	push   es
  417b1b:	inc    esi
  417b1c:	mov    ds:0xa04074d9,eax
  417b21:	retf   0xc972
  417b24:	fadd   st(3),st
  417b26:	sub    eax,0x3d980bc9
  417b2b:	ror    DWORD PTR [edi],1
  417b2d:	xchg   ebp,eax
  417b2e:	ss fpatan 
  417b31:	and    BYTE PTR [eax+eax*1+0x13],0xad
  417b36:	addr16 add al,0x25
  417b39:	(bad)  
  417b3a:	popa   
  417b3b:	pop    es
  417b3c:	adc    ebp,DWORD PTR [eax-0x2ea8059c]
  417b42:	sub    cl,BYTE PTR [ecx]
  417b44:	xor    cl,bh
  417b46:	push   0x9
  417b48:	in     eax,0xc7
  417b4a:	pop    edi
  417b4b:	sar    DWORD PTR [eax],0xd2
  417b4e:	es mov ebx,0xbb61d217
  417b54:	sub    al,ah
  417b56:	bound  ecx,QWORD PTR [edi]
  417b58:	mov    gs,WORD PTR [edx+0x9]
  417b5b:	jecxz  0x417b2c
  417b5d:	int    0x74
  417b5f:	(bad)  
  417b60:	aam    0xc7
  417b62:	push   0x69d5218f
  417b67:	mov    al,al
  417b69:	(bad)  
  417b6a:	addr16 xchg esi,edi
  417b6d:	sub    BYTE PTR [esi-0x6b],0x0
	...
  417b79:	add    BYTE PTR [eax],al
  417b7b:	add    BYTE PTR [eax+0x1d63cd2],dh
  417b81:	(bad)  
  417b82:	outs   dx,DWORD PTR ds:[esi]
  417b83:	jbe    0x417b6f
  417b85:	(bad)  
  417b86:	fs jp  0x417b60
  417b89:	shl    BYTE PTR [ebx+0x7e],1
  417b8c:	mov    ds:0xa5486fd6,al
  417b91:	ret    
  417b92:	sub    BYTE PTR [edx-0x38],cl
  417b95:	retf   
  417b96:	daa    
  417b97:	in     al,0x2e
  417b99:	ins    DWORD PTR es:[edi],dx
  417b9a:	or     al,0xe9
  417b9c:	hlt    
  417b9d:	bound  eax,QWORD PTR [esi]
  417b9f:	add    BYTE PTR [esi],cl
  417ba1:	fs push es
  417ba3:	add    BYTE PTR [esi],bl
  417ba5:	fs push es
  417ba7:	add    BYTE PTR [esi],bl
  417ba9:	fs push es
  417bab:	add    BYTE PTR [esi],cl
  417bad:	fs push es
  417baf:	add    BYTE PTR [esi],cl
  417bb1:	fs push es
  417bb3:	add    dh,bl
  417bb5:	arpl   WORD PTR [esi],ax
  417bb7:	add    dh,bl
  417bb9:	arpl   WORD PTR [esi],ax
  417bbb:	add    dh,cl
  417bbd:	arpl   WORD PTR [esi],ax
  417bbf:	add    dh,cl
  417bc1:	arpl   WORD PTR [esi],ax
  417bc3:	add    dh,bl
  417bc5:	arpl   WORD PTR [esi],ax
  417bc7:	add    dh,bl
  417bc9:	arpl   WORD PTR [esi],ax
  417bcb:	add    dh,cl
  417bcd:	arpl   WORD PTR [esi],ax
  417bcf:	add    dh,cl
  417bd1:	arpl   WORD PTR [esi],ax
  417bd3:	add    BYTE PTR [esi-0x7cfff99d],bl
  417bd9:	lock inc edi
  417bdb:	imul   ecx,edi,0xffffff82
  417bde:	sub    eax,DWORD PTR [eax+eax*1]
	...
  417be9:	add    BYTE PTR [eax],al
  417beb:	add    al,bl
  417bed:	or     eax,0x1f3ec52
  417bf2:	fs sub eax,0x570ce2b1
  417bf8:	sbb    DWORD PTR [ecx-0x1],0x10
  417bfc:	dec    edx
  417bfd:	pop    eax
  417bfe:	pop    edi
  417bff:	in     al,0xa6
  417c01:	test   eax,0x635e8e55
  417c06:	push   es
  417c07:	add    BYTE PTR [esi+0x63],cl
  417c0a:	push   es
  417c0b:	add    BYTE PTR [esi+0x63],cl
  417c0e:	push   es
  417c0f:	add    BYTE PTR [esi+0x63],bl
  417c12:	push   es
  417c13:	add    BYTE PTR [esi+0x63],bl
  417c16:	push   es
  417c17:	add    BYTE PTR [esi+0x63],cl
  417c1a:	push   es
  417c1b:	add    BYTE PTR [esi+0x63],cl
  417c1e:	push   es
  417c1f:	add    BYTE PTR [esi],bl
  417c21:	arpl   WORD PTR [esi],ax
  417c23:	add    bh,dh
  417c25:	dec    ecx
  417c26:	add    eax,DWORD PTR [eax]
  417c28:	test   DWORD PTR [ecx+0x3],0x349f700
  417c2f:	add    bh,dh
  417c31:	dec    ecx
  417c32:	add    eax,DWORD PTR [eax]
  417c34:	test   DWORD PTR [ecx+0x3],0x349f700
  417c3b:	add    bh,dh
  417c3d:	dec    ecx
  417c3e:	add    eax,DWORD PTR [eax]
  417c40:	test   DWORD PTR [ebx+0x3],0x34bf700
  417c47:	add    bh,dh
  417c49:	dec    ebx
  417c4a:	add    eax,DWORD PTR [eax]
  417c4c:	test   DWORD PTR [ebx+0x3],0x0
	...
  417c5b:	add    bh,dh
  417c5d:	dec    ebx
  417c5e:	add    eax,DWORD PTR [eax]
  417c60:	test   DWORD PTR [ebx+0x3],0x34bf700
  417c67:	add    bh,dh
  417c69:	dec    ebx
  417c6a:	add    eax,DWORD PTR [eax]
  417c6c:	test   DWORD PTR [ebx+0x3],0x34bf700
  417c73:	add    bh,dh
  417c75:	dec    ebx
  417c76:	add    eax,DWORD PTR [eax]
  417c78:	test   DWORD PTR [ebx+0x3],0x34bf700
  417c7f:	add    bh,dh
  417c81:	dec    ebx
  417c82:	add    eax,DWORD PTR [eax]
  417c84:	test   DWORD PTR [ebx+0x3],0x34bf700
  417c8b:	add    bh,dh
  417c8d:	dec    ebx
  417c8e:	add    eax,DWORD PTR [eax]
  417c90:	test   DWORD PTR [ebx+0x3],0x34bf700
  417c97:	add    bh,dh
  417c99:	dec    ebx
  417c9a:	add    eax,DWORD PTR [eax]
  417c9c:	test   DWORD PTR [ebx+0x3],0x34bf700
  417ca3:	add    bh,dh
  417ca5:	dec    ebx
  417ca6:	add    eax,DWORD PTR [eax]
  417ca8:	mul    DWORD PTR [edx-0x13]
  417cab:	add    esi,edi
  417cad:	(bad)  
  417cae:	in     eax,dx
  417caf:	add    esi,edi
  417cb1:	(bad)  
  417cb2:	in     eax,dx
  417cb3:	add    esi,edi
  417cb5:	(bad)  
  417cb6:	in     eax,dx
  417cb7:	add    esi,edi
  417cb9:	(bad)  
  417cba:	in     eax,dx
  417cbb:	add    esi,edi
  417cbd:	(bad)  
  417cbe:	in     eax,dx
  417cbf:	add    eax,DWORD PTR [eax]
	...
  417cc9:	add    BYTE PTR [eax],al
  417ccb:	add    bh,dh
  417ccd:	(bad)  
  417cce:	in     eax,dx
  417ccf:	add    esi,edi
  417cd1:	(bad)  
  417cd2:	in     eax,dx
  417cd3:	add    esi,edi
  417cd5:	(bad)  
  417cd6:	in     eax,dx
  417cd7:	add    esi,edi
  417cd9:	(bad)  
  417cda:	in     eax,dx
  417cdb:	add    esi,edi
  417cdd:	(bad)  
  417cde:	in     eax,dx
  417cdf:	add    esi,edi
  417ce1:	(bad)  
  417ce2:	in     eax,dx
  417ce3:	add    esi,edi
  417ce5:	(bad)  
  417ce6:	in     eax,dx
  417ce7:	add    esi,edi
  417ce9:	(bad)  
  417cea:	in     eax,dx
  417ceb:	add    esi,edi
  417ced:	(bad)  
  417cee:	in     eax,dx
  417cef:	add    esi,edi
  417cf1:	(bad)  
  417cf2:	in     eax,dx
  417cf3:	add    esi,edi
  417cf5:	(bad)  
  417cf6:	in     eax,dx
  417cf7:	add    esi,edi
  417cf9:	(bad)  
  417cfa:	in     eax,dx
  417cfb:	add    esi,edi
  417cfd:	(bad)  
  417cfe:	in     eax,dx
  417cff:	add    esi,edi
  417d01:	(bad)  
  417d02:	in     eax,dx
  417d03:	add    esi,edi
  417d05:	(bad)  
  417d06:	in     eax,dx
  417d07:	add    esi,edi
  417d09:	(bad)  
  417d0a:	in     eax,dx
  417d0b:	add    esi,edi
  417d0d:	(bad)  
  417d0e:	in     eax,dx
  417d0f:	add    esi,edi
  417d11:	(bad)  
  417d12:	in     eax,dx
  417d13:	add    esi,edi
  417d15:	(bad)  
  417d16:	in     eax,dx
  417d17:	add    esi,edi
  417d19:	(bad)  
  417d1a:	in     eax,dx
  417d1b:	add    esi,edi
  417d1d:	(bad)  
  417d1e:	ficom  WORD PTR [ecx]
  417d20:	es xchg edi,eax
  417d22:	ror    BYTE PTR ds:0x508ed2f7,cl
  417d28:	(bad)  
  417d29:	aad    0x88
  417d2b:	push   ecx
  417d2c:	shl    DWORD PTR [edx+0x6],cl
  417d2f:	jns    0x417d31
	...
  417d39:	add    BYTE PTR [eax],al
  417d3b:	add    BYTE PTR [edx+edx*8-0x320b749c],bl
  417d42:	outs   dx,DWORD PTR ds:[esi]
  417d43:	dec    esp
  417d44:	jmp    0x242afb1f
  417d49:	xchg   ebx,eax
  417d4a:	xor    ebx,DWORD PTR ds:0x446d5d1e
  417d50:	loopne 0x417d23
  417d52:	jae    0x417d3d
  417d54:	or     edx,DWORD PTR [ebx-0x68f00acd]
  417d5a:	das    
  417d5b:	icebp  
  417d5c:	hlt    
  417d5d:	lea    esi,[edx+edi*8]
  417d60:	add    BYTE PTR [ebp+0x66],bl
  417d63:	or     ebx,DWORD PTR [eax]
  417d65:	mov    WORD PTR [edx+ebx*8],?
  417d68:	hlt    
  417d69:	into   
  417d6a:	popa   
  417d6b:	sbb    eax,0xff6dc026
  417d70:	hlt    
  417d71:	(bad)  
  417d72:	popa   
  417d73:	cli    
  417d74:	or     BYTE PTR [ebx+0x6a],ah
  417d77:	push   cs
  417d78:	or     eax,0xcab806c0
  417d7d:	xchg   ebx,eax
  417d7e:	push   es
  417d7f:	stc    
  417d80:	adc    edx,edx
  417d82:	jae    0x417d62
  417d84:	in     eax,0xd0
  417d86:	bound  ebx,QWORD PTR [eax]
  417d88:	repz retf 0xc561
  417d8c:	ror    ch,1
  417d8e:	push   es
  417d8f:	mov    esp,0xcc6bcce5
  417d94:	shl    DWORD PTR [edx+0x62],cl
  417d97:	mov    ebx,0xc767c5d3
  417d9c:	hlt    
  417d9d:	(bad)  
  417d9e:	je     0x417d54
	...
  417dac:	rcl    esi,0x68
  417daf:	xchg   esi,eax
  417db0:	imul   ebx,DWORD PTR [esi+esi*1-0x28],0x63
  417db5:	lea    esi,ds:0x6ac3f4d8
  417dbb:	jle    0x417ddb
  417dbd:	sar    BYTE PTR [ebp+0x0],0x69
  417dc1:	fwait
  417dc2:	push   es
  417dc3:	xor    DWORD PTR [ebp+edx*2+0x59803533],ecx
  417dca:	div    DWORD PTR [edx+0x76]
  417dcd:	xchg   DWORD PTR [edx+0x6f],esp
  417dd0:	shl    DWORD PTR [esi+0x27],1
  417dd3:	xor    cl,BYTE PTR ds:0x136345b
  417dd9:	pop    edi
  417dda:	xor    BYTE PTR [eax],al
  417ddc:	lods   eax,DWORD PTR ds:[esi]
  417ddd:	mov    ?,WORD PTR [ecx+ebp*2-0x33]
  417de1:	call   0x6875:0x90c37306
  417de8:	mov    bh,0x90
  417dea:	arpl   WORD PTR [eax],ax
  417dec:	mov    ebx,0x3747585
  417df1:	xchg   ebp,eax
  417df2:	push   es
  417df3:	arpl   cx,di
  417df5:	xchg   ecx,eax
  417df6:	jbe    0x417e6d
  417df8:	add    cl,BYTE PTR [edx-0x6b01ff8c]
  417dfe:	pop    edi
  417dff:	outs   dx,BYTE PTR ds:[esi]
  417e00:	std    
  417e01:	mov    DWORD PTR [ebp+0x73],esi
  417e04:	ficom  WORD PTR [ebx-0x760e98a1]
  417e0a:	je     0x417e0c
  417e0c:	(bad)
	...
  417e19:	add    BYTE PTR [eax],al
  417e1b:	add    BYTE PTR [esi+eax*4-0x79619396],bh
  417e22:	push   0x68bb367
  417e27:	push   0xffffffb3
  417e29:	xchg   esp,eax
  417e2a:	jae    0x417e9f
  417e2c:	(bad)  
  417e2d:	pop    edi
  417e2e:	daa    
  417e2f:	xor    cl,BYTE PTR [ebp-0x71cccaaa]
  417e35:	cwde   
  417e36:	outs   dx,BYTE PTR ds:[esi]
  417e37:	popa   
  417e38:	inc    edx
  417e39:	mov    dh,BYTE PTR [eax+0x65]
  417e3c:	mov    WORD PTR [edi+0x60],ds
  417e3f:	jb     0x417eb4
  417e41:	mov    ah,BYTE PTR [edx+0x6f]
  417e44:	mul    esi
  417e46:	add    ch,BYTE PTR [ecx-0x32]
  417e49:	frstor [edi]
  417e4b:	arpl   bp,ax
  417e4d:	dec    ecx
  417e4e:	and    dh,BYTE PTR [ecx-0x2d]
  417e51:	jecxz  0x417e55
  417e53:	jno    0x417e25
  417e55:	call   0x4a06e179
  417e5a:	xor    BYTE PTR [ebx-0x59],dh
  417e5d:	scas   al,BYTE PTR es:[edi]
  417e5e:	xor    BYTE PTR [ebx-0x6a],ch
  417e61:	stos   DWORD PTR es:[edi],eax
  417e62:	add    ch,BYTE PTR [ebx-0x72]
  417e65:	test   al,0x2a
  417e67:	pop    edi
  417e68:	xchg   edx,eax
  417e69:	popf   
  417e6a:	add    ah,BYTE PTR [ecx-0x61]
  417e6d:	scas   al,BYTE PTR es:[edi]
  417e6e:	pop    ds
  417e6f:	jno    0x417e03
  417e71:	dec    ecx
  417e72:	sub    al,0x6e
  417e74:	mov    ebp,DWORD PTR [esi-0x6a6d91d0]
  417e7a:	add    ch,BYTE PTR [edx+0x60]
  417e7d:	jge    0x417ea9
  417e7f:	jae    0x417e81
	...
  417e89:	add    BYTE PTR [eax],al
  417e8b:	add    BYTE PTR [esi+0x4c],dl
  417e8e:	sub    eax,0x3b655473
  417e93:	ins    DWORD PTR es:[edi],dx
  417e94:	bound  ecx,QWORD PTR [ecx+eiz*1+0x6c]
  417e98:	pop    edx
  417e99:	pop    ebp
  417e9a:	xor    ah,BYTE PTR [ebx+0x53]
  417e9d:	dec    esp
  417e9e:	and    DWORD PTR [edi+0x44],ebx
  417ea1:	and    BYTE PTR [bx+0x4b],bl
  417ea5:	pop    eax
  417ea6:	add    esi,DWORD PTR [ecx+0x2b]
  417ea9:	sub    esi,DWORD PTR [ecx]
  417eab:	jne    0x417ec3
  417ead:	xor    al,BYTE PTR ds:[eax]
  417eb0:	out    0x7b,eax
  417eb2:	repnz das 
  417eb4:	out    0x7b,eax
  417eb6:	add    dh,BYTE PTR [eax+0xa]
  417eb9:	push   ds
  417eba:	xor    ebp,DWORD PTR [edx+edx*1+0x4c]
  417ebe:	sub    DWORD PTR [ebp+0x5],ebp
  417ec1:	sub    BYTE PTR [esi+ebp*2],ah
  417ec4:	mul    DWORD PTR [ecx]
  417ec6:	and    al,0x67
  417ec8:	jmp    0x417f2c
  417eca:	xchg   ebp,eax
  417ecb:	add    esp,esi
  417ecd:	iret   
  417ece:	mov    ch,BYTE PTR [esi]
  417ed0:	aam    0xd4
  417ed2:	in     eax,dx
  417ed3:	and    ah,dh
  417ed5:	retf   0x2679
  417ed8:	enter  0x8b62,0x36
  417edc:	(bad)  
  417edd:	into   
  417ede:	xor    BYTE PTR ds:0x228acaf7,0xc1
  417ee5:	mov    edi,0xbfa70377
  417eea:	pop    ebp
  417eeb:	xor    al,0x94
  417eed:	aam    0xed
  417eef:	clc    
	...
  417efc:	jmp    0x417e8f
  417efe:	sbb    cl,bh
  417f00:	jecxz  0x417e93
  417f02:	in     eax,dx
  417f03:	sub    eax,DWORD PTR [eax+ecx*8+0x62852739]
  417f0a:	dec    ecx
  417f0b:	xor    DWORD PTR [ecx-0x8c4be41],ecx
  417f11:	ret    
  417f12:	aaa    
  417f13:	sub    BYTE PTR [ebp-0x40],ah
  417f16:	sbb    BYTE PTR [ebx+eiz*2],al
  417f19:	retf   
  417f1a:	or     BYTE PTR [edi],ch
  417f1c:	inc    eax
  417f1d:	(bad)  
  417f1e:	in     eax,dx
  417f1f:	and    cl,BYTE PTR [ecx-0x3e]
  417f22:	add    dh,BYTE PTR [eax]
  417f24:	inc    esi
  417f25:	arpl   WORD PTR [esp+ebp*1],cx
  417f28:	sub    ch,dl
  417f2a:	or     DWORD PTR [ebx],ebp
  417f2c:	push   esp
  417f2d:	arpl   WORD PTR [ecx],cx
  417f2f:	and    ecx,DWORD PTR [ecx-0x34]
  417f32:	add    dh,BYTE PTR [eax]
  417f34:	not    DWORD PTR [ebx+0x62d9f31e]
  417f3a:	shl    DWORD PTR [esi],cl
  417f3c:	adc    ecx,ecx
  417f3e:	(bad)  
  417f3f:	sub    DWORD PTR [edx*8-0x36e7cb13],edx
  417f46:	enter  0x142f,0x63
  417f4a:	aad    0x22
  417f4c:	adc    ecx,ecx
  417f4e:	push   es
  417f4f:	enter  0x62cc,0x75
  417f53:	enter  0xd032,0x73
  417f57:	mov    eax,ds:0x9965caf4
  417f5c:	and    al,0xd2
  417f5e:	push   es
  417f5f:	test   BYTE PTR [eax],al
	...
  417f69:	add    BYTE PTR [eax],al
  417f6b:	add    BYTE PTR ds:0xc8074cf,dl
  417f71:	arpl   WORD PTR [esi-0x78],si
  417f74:	add    edx,esp
  417f76:	push   es
  417f77:	mov    BYTE PTR ds:0x158865ba,dl
  417f7d:	arpl   WORD PTR [eax],si
  417f7f:	mov    ah,0x28
  417f81:	xchg   edx,eax
  417f82:	xor    al,0x18
  417f84:	repz mov ecx,0xbed14869
  417f8a:	gs jmp 0x41b4475a
  417f90:	loop   0x417f5a
  417f92:	pop    edi
  417f93:	jmp    0x46aa4169
  417f98:	into   
  417f99:	aam    0x6
  417f9b:	inc    esp
  417f9c:	enter  0x6ece,0x44
  417fa0:	and    eax,0x18177363
  417fa5:	(bad)  
  417fa6:	jbe    0x417fc8
  417fa8:	sti    
  417fa9:	int3   
  417faa:	popa   
  417fab:	sbb    ah,BYTE PTR [eax+eax*8]
  417fae:	arpl   WORD PTR [eax],cx
  417fb0:	sti    
  417fb1:	int    0x61
  417fb3:	adc    eax,0x469c614
  417fb8:	sti    
  417fb9:	shl    BYTE PTR [edi+0x2],cl
  417fbc:	push   cs
  417fbd:	int3   
  417fbe:	addr16 push esp
  417fc1:	mov    edi,0xc3e2d66a
  417fc6:	jge    0x417f96
  417fc8:	fild   WORD PTR [edi-0x765de7fa]
  417fce:	xor    eax,0x18
	...
  417fdb:	add    bl,bh
  417fdd:	retf   
  417fde:	jno    0x417fe0
  417fe0:	dec    ebp
  417fe1:	nop
  417fe2:	push   edi
  417fe3:	outs   dx,BYTE PTR ds:[esi]
  417fe4:	mov    ecx,0xb2656e64
  417fe9:	xchg   esp,eax
  417fea:	imul   esp,DWORD PTR [ebp+0x5e],0xffffff8a
  417fee:	jae    0x418063
  417ff0:	mov    al,BYTE PTR [edi+0x7f840068]
  417ff6:	jne    0x418065
  417ff8:	ja     0x417f80
  417ffa:	arpl   WORD PTR [eax],ax
  417ffc:	rcl    DWORD PTR [ecx-0x748691a9],1
  418002:	push   es
  418003:	je     0x418080
  418005:	xchg   ebp,eax
  418006:	jb     0x418071
  418008:	jo     0x417f8b
  41800a:	push   es
  41800b:	popa   
  41800c:	scas   al,BYTE PTR es:[edi]
  41800d:	xchg   ebx,eax
  41800e:	push   0x65
  418010:	push   ds
  418011:	xchg   ebx,eax
  418012:	pop    edi
  418013:	arpl   si,ax
  418015:	mov    DWORD PTR [edx+0x6c],ebp
  418018:	stos   DWORD PTR es:[edi],eax
  418019:	pop    esi
  41801a:	jbe    0x418081
  41801c:	mov    edi,0xcd006383
  418021:	mov    DWORD PTR [ebp+0x72],esp
  418024:	mov    ebx,0xe31069a
  418029:	xor    DWORD PTR [ecx+eiz*2+0x3d],0x777068a
  418031:	xchg   ebx,eax
  418032:	push   0x69
  418034:	out    dx,eax
  418035:	xchg   ecx,eax
  418036:	push   es
  418037:	imul   esi,edx,0xe7657087
  41803d:	xchg   DWORD PTR [ebx+0x32],esi
	...
  41804c:	fiadd  WORD PTR [ebp-0x6d0e9ca1]
  418052:	arpl   WORD PTR [eax],ax
  418054:	js     0x4180a3
  418056:	xor    DWORD PTR [esi],esi
  418058:	push   0xcb6cf74d
  41805d:	jge    0x4180bf
  41805f:	imul   esi,DWORD PTR [eax-0x89e9e9d],0x16752e35
  418069:	xor    eax,DWORD PTR [ebx]
  41806b:	data16 add ch,BYTE PTR ds:0xf10772c
  418072:	bnd call DWORD PTR [edi]
  418075:	sbb    eax,0x15e06834
  41807a:	cs add bh,bl
  41807d:	jmp    0x7002:0xeacf5f2a
  418084:	enter  0x32e0,0x0
  418088:	aad    0xd5
  41808a:	cs jno 0x418051
  41808d:	repnz sub BYTE PTR [ebp-0x9],ah
  418091:	jmp    0x4180b9
  418093:	pop    edi
  418094:	iret   
  418095:	jmp    0x4180bd
  418097:	pop    edi
  418098:	lahf   
  418099:	dec    ecx
  41809a:	ss ja  0x418041
  41809d:	mov    ecx,0x7a9a6123
  4180a2:	add    ch,BYTE PTR [ebx-0x6a]
  4180a5:	mov    ch,0x3e
  4180a7:	push   0x6102b09a
  4180ac:	xchg   esi,eax
  4180ad:	scas   eax,DWORD PTR es:[edi]
  4180ae:	and    esp,DWORD PTR [eax+eax*1+0x0]
	...
  4180ba:	add    BYTE PTR [eax],al
  4180bc:	xchg   esi,eax
  4180bd:	dec    ecx
  4180be:	mov    edx,DWORD PTR ss:[bx+0x721f]
  4180c4:	neg    DWORD PTR [ecx+0x7a526229]
  4180ca:	add    BYTE PTR ds:[ecx+0x65],bl
  4180ce:	xor    al,0x63
  4180d0:	popa   
  4180d1:	addr16 xor al,0x0
  4180d4:	push   esi
  4180d5:	jns    0x418105
  4180d7:	push   ax
  4180d9:	je     0x4180dd
  4180db:	jb     0x418133
  4180dd:	imul   ebp,DWORD PTR [edx],0x354c4b63
  4180e3:	pop    edi
  4180e4:	push   ds
  4180e5:	push   esi
  4180e6:	and    eax,0xed63206d
  4180eb:	and    al,0x24
  4180ed:	int3   
  4180ee:	shl    DWORD PTR [edx],1
  4180f0:	and    eax,0x3026dd63
  4180f5:	(bad)
  4180f8:	test   eax,0xc40c37ce
  4180fe:	mov    DWORD PTR [ebx],0x28c0c616
  418104:	fdivr  DWORD PTR [edi-0x3437de13]
  41810a:	xchg   ecx,eax
  41810b:	es call 0xd66e1d73
  418111:	ror    DWORD PTR [edx+0x7a632031],0x2a
  418118:	(bad)  
  418119:	leave  
  41811a:	mov    bh,BYTE PTR [edx]
  41811c:	test   eax,0x3796
	...
  41812a:	add    BYTE PTR [eax],al
  41812c:	aam    0xc7
  41812e:	mov    al,BYTE PTR [ebx]
  418130:	lahf   
  418131:	mov    edi,0x939a2f79
  418136:	in     eax,dx
  418137:	es mov ebx,cs
  41813a:	inc    edi
  41813b:	daa    
  41813c:	mov    WORD PTR [edx+0x49],fs
  41813f:	and    ebx,DWORD PTR [esi-0x8dcae3b]
  418145:	ror    DWORD PTR [esi+0x2f],1
  418148:	mov    al,ds:0x982c31c4
  41814d:	bound  ecx,QWORD PTR [ebp+ebp*1+0x5c]
  418151:	ror    DWORD PTR [esi+0x33],cl
  418154:	idiv   DWORD PTR [esi-0x39b3dcea]
  41815a:	pop    es
  41815b:	sub    bh,dh
  41815d:	into   
  41815e:	push   cs
  41815f:	cmp    esp,DWORD PTR [ebx-0x3a]
  418162:	sbb    eax,DWORD PTR [ecx+edx*2]
  418165:	(bad)  
  418166:	sti    
  418167:	ss dec esp
  418169:	arpl   WORD PTR [ebx],dx
  41816b:	sub    eax,0xba06c54f
  418170:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418171:	pop    DWORD PTR [esi]
  418173:	sti    
  418174:	ffree  st(3)
  418176:	outs   dx,BYTE PTR ds:[esi]
  418177:	enter  0xbee6,0x6
  41817b:	retf   
  41817c:	enter  0x68bd,0xc2
  418180:	test   DWORD PTR [ebp-0x3e3b16cc],ecx
  418186:	gs retf 0xc1cc
  41818a:	jae    0x418175
  41818c:	xlat   BYTE PTR ds:[ebx]
  41818d:	(bad)  
  41818e:	lds    eax,FWORD PTR [bx+si]
	...
  418199:	add    BYTE PTR [eax],al
  41819b:	add    ah,dh
  41819d:	mov    esp,0xc223be6a
  4181a2:	je     0x41818d
  4181a4:	daa    
  4181a5:	les    esp,FWORD PTR [edi-0x72]
  4181a8:	and    dl,al
  4181aa:	je     0x418195
  4181ac:	push   ss
  4181ad:	mov    dh,0x68
  4181af:	mov    BYTE PTR [edx],bl
  4181b1:	mov    dh,0x6
  4181b3:	xchg   ebx,eax
  4181b4:	adc    eax,0xf47a61ca
  4181b9:	mov    ch,0x73
  4181bb:	(bad)  
  4181bc:	fidiv  DWORD PTR [ebp+0x62d28573]
  4181c2:	jo     0x418214
  4181c4:	fmul   st,st(6)
  4181c6:	addr16 pop ebx
  4181c8:	fisub  DWORD PTR [edx+0x6a]
  4181cb:	inc    esi
  4181cc:	fnstsw WORD PTR [esi-0x7a0cc099]
  4181d2:	xor    al,0xfa
  4181d4:	retf   
  4181d5:	iret   
  4181d6:	popa   
  4181d7:	jmp    0xfa7514df
  4181dc:	jmp    0x74b4:0x273a0685
  4181e3:	sbb    eax,0xe96bc029
  4181e8:	adc    eax,0x141b67c0
  4181ed:	rol    BYTE PTR [esi],0x16
  4181f0:	sbb    al,ch
  4181f2:	push   0x68cf300
  4181f7:	ins    DWORD PTR es:[edi],dx
  4181f8:	out    dx,eax
  4181f9:	jg     0x41825c
  4181fb:	imul   eax,DWORD PTR [ebx],0x72725f
	...
  418209:	add    BYTE PTR [eax],al
  41820b:	add    bh,dh
  41820d:	mov    BYTE PTR [edi+0x74],bl
  418210:	xchg   edi,eax
  418211:	pusha  
  418212:	imul   ebp,DWORD PTR [esi-0x56],0x9e656887
  418219:	dec    edi
  41821a:	xor    eax,0x657ebf33
  41821f:	add    BYTE PTR [ebp-0x5a9ca078],ch
  418225:	sub    DWORD PTR [eax+0x0],0x34
  418229:	xchg   ebx,eax
  41822a:	push   0x68ea969
  41822f:	arpl   WORD PTR [esi+0x4e735f8e],ax
  418235:	nop
  418236:	push   edi
  418237:	jae    0x4182a6
  418239:	xchg   ecx,eax
  41823a:	ss jb  0x4182af
  41823d:	pusha  
  41823e:	push   edi
  41823f:	jne    0x4181fe
  418241:	sbb    DWORD PTR [edi+0x6e],0x4e
  418245:	lea    esi,[esi+0x61]
  418248:	lods   al,BYTE PTR ds:[esi]
  418249:	test   BYTE PTR [edi+0x0],ch
  41824c:	jg     0x4182c2
  41824e:	imul   ebp,DWORD PTR [ecx-0x38],0x5e
  418252:	imul   esp,DWORD PTR [ebp-0x44],0xffffff8a
  418256:	pop    edi
  418257:	outs   dx,BYTE PTR ds:[esi]
  418258:	push   ds
  418259:	sub    DWORD PTR [ecx+0x6f],0x638ab1
  418260:	mov    al,0x8c
  418262:	pop    edi
  418263:	gs test al,0x82
  418266:	jne    0x418268
  418268:	mov    BYTE PTR ss:[esi+0x65],dh
  41826c:	fimul  WORD PTR [esi+ebp*2+0x61]
	...
  41827b:	add    BYTE PTR [edx],cl
  41827d:	mov    BYTE PTR [ebx+0x0],ch
  418280:	call   0xf7b5eb0a
  418285:	data16 sub al,0x64
  418288:	pop    eax
  418289:	dec    edx
  41828a:	pop    ds
  41828b:	ins    DWORD PTR es:[edi],dx
  41828c:	push   eax
  41828d:	jno    0x4182b8
  41828f:	outs   dx,BYTE PTR ds:[esi]
  418290:	push   eax
  418291:	dec    edx
  418292:	sub    ebx,DWORD PTR [edi+0x25]
  418295:	pop    esi
  418296:	and    eax,0x2e58f777
  41829b:	ins    DWORD PTR es:[edi],dx
  41829c:	or     al,0x27
  41829e:	cmp    al,BYTE PTR [eax]
  4182a0:	loopne 0x41830e
  4182a2:	repz xor al,0xf7
  4182a5:	pop    ds
  4182a6:	sub    al,0x71
  4182a8:	adc    bh,BYTE PTR [edx]
  4182aa:	sub    eax,DWORD PTR [eax]
  4182ac:	adc    edx,DWORD PTR [edi]
  4182ae:	and    BYTE PTR [ecx-0x2],ch
  4182b1:	dec    ecx
  4182b2:	pop    ss
  4182b3:	fsub   DWORD PTR [bp+si]
  4182b6:	daa    
  4182b7:	pop    edi
  4182b8:	fisttp DWORD PTR [ecx+0x22]
  4182bb:	add    bl,ch
  4182bd:	icebp  
  4182be:	xor    eax,0x30ded36e
  4182c3:	add    ah,al
  4182c5:	stc    
  4182c6:	sub    DWORD PTR [edx-0x22],esi
  4182c9:	in     eax,dx
  4182ca:	add    ah,BYTE PTR [edx-0x2a]
  4182cd:	jmp    0x4182e5
  4182cf:	addr16 ret 
  4182d1:	dec    ecx
  4182d2:	outs   dx,BYTE PTR es:[esi]
  4182d4:	stos   DWORD PTR es:[edi],eax
  4182d5:	out    0x30,al
  4182d7:	add    BYTE PTR [esi-0x6f97d82d],dl
  4182dd:	stos   DWORD PTR es:[edi],eax
  4182de:	cmp    eax,DWORD PTR [eax]
	...
  4182ec:	xchg   esp,eax
  4182ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4182ee:	xor    BYTE PTR [esi-0x66],dh
  4182f1:	mov    ch,0x36
  4182f3:	arpl   di,si
  4182f5:	mov    eax,ds:0xa68c612d
  4182fa:	cmp    eax,DWORD PTR [eax]
  4182fc:	xchg   DWORD PTR [ebp+esi*1+0x213c6563],esp
  418303:	arpl   WORD PTR [ecx-0x5a],bx
  418306:	and    ebp,DWORD PTR [ebx+0x4e]
  418309:	arpl   WORD PTR [edi],cx
  41830b:	add    al,0x50
  41830d:	mov    edi,0xcc543208
  418312:	add    BYTE PTR [edi],ch
  418314:	call   0x574617b
  418319:	fidivr DWORD PTR [esi+ebx*1+0x3416d8f7]
  418320:	adc    al,0xd5
  418322:	in     eax,dx
  418323:	and    BYTE PTR [ecx+eax*8],dl
  418326:	add    dh,BYTE PTR ds:0x2cedd618
  41832c:	or     DWORD PTR [eax+eax*8-0x219cf4d5],edi
  418333:	xor    BYTE PTR [edx*8+0x62d03ad1],dl
  41833a:	int3   
  41833b:	xor    eax,0x2ab1c414
  418340:	jmp    0xda63710c
  418345:	ror    ebx,0x22
  418348:	in     eax,0x62
  41834a:	mov    ds,WORD PTR [edi]
  41834c:	rol    dh,1
  41834e:	mov    ?,WORD PTR [eax+eax*1]
	...
  418359:	add    BYTE PTR [eax],al
  41835b:	add    bh,dh
  41835d:	aam    0x80
  41835f:	das    
  418360:	sar    BYTE PTR [edi-0x4139fc7a],1
  418366:	mov    ?,WORD PTR [edx]
  418368:	aam    0xd4
  41836a:	in     eax,dx
  41836b:	xor    BYTE PTR [eax-0x63d7762b],bl
  418371:	bound  edi,QWORD PTR [ebp+0x35]
  418374:	sar    BYTE PTR [ebx-0x3308e0a4],0x65
  41837b:	and    eax,0x273fc489
  418380:	not    ebp
  418382:	dec    esi
  418383:	daa    
  418384:	test   bh,al
  418386:	push   ecx
  418387:	add    al,0x8c
  418389:	mov    ebx,0xc6f71f54
  41838e:	push   es
  41838f:	dec    eax
  418390:	pop    ds
  418391:	mov    edi,0xc7fb3a65
  418396:	je     0x4183a4
  418398:	clc    
  418399:	rol    BYTE PTR [esi],0x15
  41839c:	lock shl DWORD PTR [edx+0x1d],cl
  4183a0:	call   0x1a2af678
  4183a5:	mov    dl,0x70
  4183a7:	or     al,0x1
  4183a9:	retf   0x1263
  4183ac:	sti    
  4183ad:	mov    edi,0xbfdf0c68
  4183b2:	jo     0x4183b8
  4183b4:	sti    
  4183b5:	(bad)  
  4183b6:	gs (bad) 
  4183b9:	mov    BYTE PTR [esi],0xcc
  4183bc:	int    0xbe
  4183be:	fild   WORD PTR [bx+si]
	...
  4183c9:	add    BYTE PTR [eax],al
  4183cb:	add    cl,ch
  4183cd:	bound  esp,QWORD PTR [ebx-0x3f]
  4183d0:	rcl    esp,1
  4183d2:	arpl   cx,dx
  4183d4:	hlt    
  4183d5:	enter  0xd074,0x11
  4183d9:	shl    DWORD PTR [edx-0x17],0x17
  4183dd:	shl    BYTE PTR [edx-0x17],0x0
  4183e1:	(bad)  
  4183e2:	jae    0x418381
  4183e4:	or     eax,0x1ee97dc1
  4183e9:	shr    BYTE PTR [eax-0x74],0xf4
  4183ed:	mov    ebp,0xc00a8a6d
  4183f2:	jae    0x41838a
  4183f4:	push   ss
  4183f5:	xlat   BYTE PTR ds:[ebx]
  4183f6:	push   es
  4183f7:	mov    ebx,0xbb34932a
  4183fc:	and    dl,BYTE PTR [ecx+0x65]
  4183ff:	je     0x4183db
  418401:	les    ebp,FWORD PTR [edx+0x4c]
  418404:	in     al,0x62
  418406:	xor    eax,0x35800a18
  41840b:	sbb    BYTE PTR [edx],al
  41840d:	add    BYTE PTR [esi],0x4a
  418410:	fadd   st,st(3)
  418412:	add    BYTE PTR gs:[ebp-0x219e9577],ch
  418419:	jp     0x418484
  41841b:	jb     0x418457
  41841d:	xchg   BYTE PTR [eax+0x32],ch
  418420:	frstor [edi+ebx*2+0x6c]
  418424:	add    DWORD PTR [ecx-0x7cfe989d],eax
  41842a:	push   es
  41842b:	data16 icebp 
  41842d:	xchg   DWORD PTR [edx+0x62],esi
	...
  41843c:	out    dx,eax
  41843d:	jp     0x4184a9
  41843f:	xor    esi,ecx
  418441:	mov    BYTE PTR [ecx+0x76],ch
  418444:	pop    es
  418445:	mov    DWORD PTR [ecx+0x0],esp
  418448:	lock test DWORD PTR [edx+0x68],esi
  41844c:	out    dx,eax
  41844d:	mov    BYTE PTR [esi],al
  41844f:	gs ret 
  418451:	jnp    0x4184aa
  418453:	outs   dx,BYTE PTR ds:[esi]
  418454:	stos   DWORD PTR es:[edi],eax
  418455:	sub    DWORD PTR [edx+0x0],0xffffffad
  418459:	test   DWORD PTR [ecx+0x6f],ebp
  41845c:	lods   al,BYTE PTR ds:[esi]
  41845d:	pop    DWORD PTR [esi]
  41845f:	cmp    ax,WORD PTR [ebp+0x6e386f6d]
  418466:	push   es
  418467:	jae    0x4184a8
  418469:	jnp    0x4184d6
  41846b:	jns    0x4184bb
  41846d:	jnp    0x4184c6
  41846f:	js     0x4184ea
  418471:	sub    DWORD PTR [edx+0x6c],0x5e
  418475:	jp     0x4184ce
  418477:	jae    0x4184ea
  418479:	xchg   BYTE PTR [esi],al
  41847b:	push   0xffffffc1
  41847d:	jnp    0x4184e7
  41847f:	add    BYTE PTR [edi-0x69],bh
  418482:	xor    al,0x77
  418484:	ins    DWORD PTR es:[edi],dx
  418485:	xor    DWORD PTR [edx],0x72
  418488:	push   ds
  418489:	adc    BYTE PTR [edi+0x62],0xa7
  41848d:	arpl   WORD PTR [ebp+eiz*2-0x56],si
  418491:	push   ebp
  418492:	xor    eax,0x6a821e33
  418497:	popa   
  418498:	neg    DWORD PTR [ebx-0x5608a0d2]
  41849e:	xor    al,0x67
	...
  4184ac:	mov    DWORD PTR [ebp+eiz*1+0x25996600],ebx
  4184b3:	jb     0x418518
  4184b5:	cmp    ah,BYTE PTR [eax+ebp*2]
  4184b8:	pop    edx
  4184b9:	mov    ?,WORD PTR [ebx]
  4184bb:	arpl   WORD PTR [esi+0x3a],dx
  4184be:	div    BYTE PTR [edx]
  4184c0:	or     dh,BYTE PTR [edi]
  4184c2:	idiv   bh
  4184c4:	push   edi
  4184c5:	push   0x2b536317
  4184ca:	add    ebp,DWORD PTR [eax+0x56]
  4184cd:	dec    esp
  4184ce:	pop    ss
  4184cf:	popa   
  4184d0:	and    BYTE PTR [esi+eiz*1+0x0],cl
  4184d4:	adc    ebx,DWORD PTR [edi+0x3a]
  4184d7:	je     0x4184f3
  4184d9:	dec    esp
  4184da:	add    esi,DWORD PTR [ecx+0x16]
  4184dd:	xor    BYTE PTR [esi],ah
  4184df:	imul   DWORD PTR fs:[edx-0xf]
  4184e3:	xor    ebp,eax
  4184e5:	ins    BYTE PTR es:[edi],dx
  4184e6:	repz call FWORD PTR [eax]
  4184e9:	sbb    ebx,DWORD PTR [edi]
  4184eb:	ins    BYTE PTR es:[edi],dx
  4184ec:	or     BYTE PTR [edx],bh
  4184ee:	sub    eax,0x2609e45f
  4184f3:	jb     0x4184ec
  4184f5:	sbb    eax,0x26ce6e22
  4184fa:	pop    ds
  4184fb:	ins    BYTE PTR es:[edi],dx
  4184fc:	sar    BYTE PTR [ecx],cl
  4184fe:	sub    al,0x67
  418500:	retf   
  418501:	cmc    
  418502:	and    eax,0x21dcf76e
  418507:	jno    0x4184cd
  418509:	loop   0x418530
  41850b:	add    ah,al
  41850d:	int    0x26
  41850f:	ins    BYTE PTR es:[edi],dx
	...
  41851c:	mov    ds:0xa57002da,eax
  418521:	fidivr DWORD PTR [ecx]
  418523:	arpl   WORD PTR [ebp-0x5c92d4c7],sp
  418529:	bound  ecx,QWORD PTR [ecx+0x25]
  41852c:	call   0x40c6:0x992b5062
  418533:	sub    eax,0x2f3a6286
  418538:	xchg   dh,dl
  41853a:	dec    ecx
  41853b:	sub    edx,DWORD PTR [ebx+eiz*2+0x40]
  41853f:	and    esp,DWORD PTR [ebx-0x38]
  418542:	cmp    al,0x4
  418544:	push   ebp
  418545:	mov    esp,0xc4522839
  41854a:	sbb    DWORD PTR [edi],ebx
  41854c:	inc    esi
  41854d:	arpl   WORD PTR [eax],ax
  41854f:	sub    al,0x55
  418551:	(bad)  
  418552:	sbb    DWORD PTR [esi],esp
  418554:	test   ebp,0xba4d2bff
  41855a:	adc    al,BYTE PTR [eax+eiz*8]
  41855d:	nop
  41855e:	mov    esp,0xb894e5ef
  418563:	sti    
  418564:	jmp    0x144572fb
  418569:	xlat   BYTE PTR ds:[ebx]
  41856a:	in     al,0x31
  41856c:	or     DWORD PTR [edx-0x29e6ce38],edi
  418572:	fiadd  DWORD PTR [ebx]
  418574:	pmovmskb edx,mm1
  418577:	xor    edi,DWORD PTR [ebp+0x21fb107d]
  41857d:	jge    0x41857a
  41857f:	repz add BYTE PTR [eax],al
	...
  41858a:	add    BYTE PTR [eax],al
  41858c:	and    edi,DWORD PTR [ebp-0x9]
  41858f:	in     eax,0x11
  418591:	xchg   edi,eax
  418592:	sti    
  418593:	stc    
  418594:	and    BYTE PTR [ebx-0x3adc0c1b],dl
  41859a:	mov    BYTE PTR [ecx],dh
  41859c:	les    edi,FWORD PTR [edi-0x3827d240]
  4185a2:	nop
  4185a3:	das    
  4185a4:	retf   0x96d2
  4185a7:	and    cl,ah
  4185a9:	rcl    BYTE PTR [ebp+0x6baf733],cl
  4185af:	jge    0x418581
  4185b1:	sar    BYTE PTR [esi+edi*4],cl
  4185b4:	adc    edi,DWORD PTR [ebp+0x36]
  4185b7:	and    DWORD PTR [ecx],ebx
  4185b9:	jge    0x4185ea
  4185bb:	and    DWORD PTR [ecx],edx
  4185bd:	xchg   ecx,eax
  4185be:	cmp    eax,0x27980507
  4185c3:	inc    edi
  4185c4:	rcl    al,cl
  4185c6:	jno    0x41861c
  4185c8:	fcmovbe st,st(7)
  4185ca:	ins    DWORD PTR es:[edi],dx
  4185cb:	inc    esp
  4185cc:	sbb    dl,bh
  4185ce:	cmp    DWORD PTR [si],ecx
  4185d1:	les    ebp,FWORD PTR [eax]
  4185d3:	cmp    DWORD PTR [ebx],ecx
  4185d5:	rol    DWORD PTR [esi],cl
  4185d7:	jmp    0x19b45cf8
  4185dc:	int    0x7e
  4185de:	daa    
  4185df:	or     bl,BYTE PTR [edx]
  4185e1:	mov    ebp,0xc611fe62
  4185e6:	push   0x65beda10
  4185eb:	adc    eax,ebx
  4185ed:	shl    DWORD PTR [ebp+edi*8+0x0],0x0
	...
  4185fa:	add    BYTE PTR [eax],al
  4185fc:	aad    0x7c
  4185fe:	arpl   si,di
  418600:	sar    DWORD PTR [edi+0x43],1
  418603:	push   ds
  418604:	xor    ebx,DWORD PTR [edi-0x3517f0ca]
  41860a:	popa   
  41860b:	jmp    0xd9b45cdc
  418610:	jle    0x418690
  418612:	daa    
  418613:	mov    edx,0xb473d21b
  418618:	adc    edi,DWORD PTR [ecx+esi*2+0x69c01607]
  41861f:	(bad)  
  418620:	stc    
  418621:	mov    edx,0x9c179854
  418626:	xor    esp,edx
  418628:	push   edx
  418629:	sar    BYTE PTR [esi-0x74],0xf4
  41862d:	mov    edx,0x89049572
  418632:	daa    
  418633:	add    BYTE PTR [ecx+0x7e],cl
  418636:	jno    0x4186af
  418638:	cmp    BYTE PTR [edi+0x57],ch
  41863b:	push   0x635f929c
  418640:	jbe    0x4186ae
  418642:	je     0x4186ac
  418644:	ret    
  418645:	outs   dx,DWORD PTR ds:[esi]
  418646:	jb     0x418675
  418648:	mov    ebp,0x9c647487
  41864d:	outs   dx,DWORD PTR ds:[esi]
  41864e:	jo     0x4186b5
  418650:	clc    
  418651:	test   BYTE PTR [ebx+0x2f],ah
  418654:	adc    al,0x98
  418656:	popa   
  418657:	xor    edi,DWORD PTR cs:[edi+0x63]
  41865b:	add    dh,cl
  41865d:	lahf   
  41865e:	push   ebx
  41865f:	dec    ecx
	...
  41866c:	(bad)  
  41866d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41866e:	inc    edx
  41866f:	inc    esi
  418670:	pop    es
  418671:	mov    ds:0xaa373043,eax
  418676:	aas    
  418677:	push   eax
  418678:	adc    eax,0xda49409b
  41867d:	cdq    
  41867e:	ss pop ecx
  418680:	adc    ecx,DWORD PTR [esi-0x4928adbb]
  418686:	push   edx
  418687:	inc    ebp
  418688:	rcl    BYTE PTR [esi+0x50],cl
  41868b:	push   ebp
  41868c:	xlat   BYTE PTR ds:[ebx]
  41868d:	push   ebp
  41868e:	sub    DWORD PTR [eax],esi
  418690:	sahf   
  418691:	pusha  
  418692:	push   es
  418693:	add    BYTE PTR [esi+0x594d0666],bl
  418699:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41869a:	push   ebx
  41869b:	add    DWORD PTR [edi+0x5e000660],ecx
  4186a1:	pusha  
  4186a2:	push   es
  4186a3:	add    BYTE PTR [esi-0x4b],bl
  4186a6:	dec    ecx
  4186a7:	inc    esi
  4186a8:	sub    BYTE PTR [ecx-0x636cadc9],0x4b
  4186af:	imul   edi,DWORD PTR [ebp-0x6a],0x7a797369
  4186b6:	jb     0x418714
  4186b8:	test   DWORD PTR [edx+ebx*1],0x3cccd36e
  4186bf:	jno    0x418694
  4186c1:	clc    
  4186c2:	cmp    eax,0x24e6a572
  4186c7:	je     0x418692
  4186c9:	fidiv  WORD PTR [eax]
  4186cb:	jno    0x41865b
  4186cd:	int3   
  4186ce:	and    eax,0x5c
	...
  4186db:	add    BYTE PTR [edx-0x7b91e64d],ch
  4186e1:	mov    ch,0x21
  4186e3:	ins    BYTE PTR es:[edi],dx
  4186e4:	xchg   ebx,eax
  4186e5:	cmp    DWORD PTR [esi+0x6e],ebx
  4186e8:	mov    cs,WORD PTR [ebx-0x49a98bd1]
  4186ee:	es push ecx
  4186f0:	arpl   WORD PTR [eax+0x3a586e19],cx
  4186f6:	aas    
  4186f7:	mov    ah,BYTE PTR fs:0x4e5f
  4186fd:	xchg   esp,eax
  4186fe:	and    DWORD PTR [ebx+0x52],ebp
  418701:	cmp    al,BYTE PTR [edi+0x0]
  418704:	idiv   DWORD PTR [ecx]
  418706:	add    eax,DWORD PTR [eax]
  418708:	idiv   DWORD PTR [ecx]
  41870a:	add    eax,DWORD PTR [eax]
  41870c:	loope  0x41876c
  41870e:	sub    ah,BYTE PTR [ebx-0x9]
  418711:	push   0x4d2b6623
  418716:	and    dh,BYTE PTR [edx+0x12]
  418719:	pop    esi
  41871a:	pop    ebx
  41871b:	and    DWORD PTR [bx+si],ecx
  41871e:	inc    edx
  41871f:	push   edx
  418720:	neg    DWORD PTR [ebx+esi*1]
  418723:	arpl   WORD PTR [ecx],dx
  418725:	cmp    al,BYTE PTR [edx]
  418727:	add    bh,dh
  418729:	mov    ecx,0x33e56318
  41872e:	cs ins BYTE PTR es:[edi],dx
  418730:	and    al,0x48
  418732:	in     eax,0x63
  418734:	shl    DWORD PTR ds:0xe8c35503,cl
  41873a:	dec    ebx
  41873b:	arpl   bx,cx
  41873d:	bound  ebp,QWORD PTR [esi+0x26]
	...
  41874b:	add    bl,al
  41874d:	mov    ecx,0xbbb6288f
  418752:	jg     0x41878a
  418754:	retf   0x82be
  418757:	push   esi
  418758:	xchg   esp,eax
  418759:	iret   
  41875a:	jl     0x418778
  41875c:	call   0x7bb2:0xf727b6bc
  418763:	and    dl,BYTE PTR [esi-0x47c9833b]
  418769:	(bad)  
  41876a:	cmp    DWORD PTR [ecx],esp
  41876c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41876d:	lds    ebx,FWORD PTR [ebp+esi*1-0x68]
  418771:	mov    ebx,0x62933b3f
  418776:	in     eax,dx
  418777:	and    DWORD PTR [edi+ecx*8+0x4e],edx
  41877b:	xor    al,0x50
  41877d:	xchg   esi,eax
  41877e:	sti    
  41877f:	loope  0x4187d5
  418781:	mov    bh,0x41
  418783:	add    al,0x29
  418785:	shl    BYTE PTR [ecx],0x43
  418788:	inc    edi
  418789:	mov    esp,0xc151372b
  41878e:	add    dh,BYTE PTR [esi]
  418790:	cmp    ebp,edx
  418792:	or     ah,BYTE PTR [edi]
  418794:	neg    DWORD PTR [eax-0x29bbc7fe]
  41879a:	or     dh,BYTE PTR [esi]
  41879c:	xor    al,0xb9
  41879e:	repnz push ds
  4187a0:	mul    DWORD PTR [edx+0x0]
  4187a3:	and    BYTE PTR [esi+edx*4],dl
  4187a6:	mov    ebx,0xd1b714e1
  4187ab:	add    esp,DWORD PTR [esi]
  4187ad:	iret   
  4187ae:	rol    BYTE PTR [eax+0x0],0x0
	...
  4187ba:	add    BYTE PTR [eax],al
  4187bc:	pop    es
  4187bd:	sar    BYTE PTR [edi-0x2445fcac],0x22
  4187c4:	fidivr DWORD PTR [edi-0x4137fc13]
  4187ca:	scas   eax,DWORD PTR es:[edi]
  4187cb:	and    ah,bh
  4187cd:	mov    ebx,0x7862fa06
  4187d2:	bound  edi,QWORD PTR [ebp-0x6aba9d10]
  4187d8:	call   0x8c9eb94
  4187dd:	mov    BYTE PTR [ebp-0x79],0x10
  4187e1:	mov    ds:0xc1e88068,al
  4187e6:	gs xchg ebp,eax
  4187e8:	or     eax,0xfd9a61cd
  4187ed:	mov    esi,0xc5fcaa06
  4187f2:	arpl   WORD PTR [edx+0x4c6bb7a8],ax
  4187f8:	aad    0x9d
  4187fa:	popa   
  4187fb:	dec    esp
  4187fc:	fld    st(5)
  4187fe:	je     0x41885a
  418800:	fcmovnb st,st(1)
  418802:	jbe    0x4187ed
  418804:	ds aad 0x61
  418807:	dec    esp
  418808:	inc    edx
  418809:	ret    0xe962
  41880c:	cmp    edx,ebp
  41880e:	popa   
  41880f:	dec    ebp
  418810:	xor    BYTE PTR [ecx-0x2ae7c38f],bh
  418816:	gs sbb eax,0x2a068a10
  41881c:	or     esi,eax
  41881e:	bound  ebp,QWORD PTR [edi]
	...
  41882c:	add    esi,eax
  41882e:	popa   
  41882f:	jmp    0xf9bf5d6f
  418834:	loopne 0x4187d5
  418836:	popa   
  418837:	cmc    
  418838:	dec    ecx
  418839:	aam    0x61
  41883b:	sti    
  41883c:	fcmovnb st,st(5)
  41883e:	jge    0x418829
  418840:	cmp    edx,ebp
  418842:	jge    0x41881d
  418844:	shl    BYTE PTR [ebp-0x2b282682],0x72
  41884b:	mov    ds:0xaa06d1d1,al
  418850:	sub    dl,dl
  418852:	jbe    0x418854
  418854:	stos   BYTE PTR es:[edi],al
  418855:	mov    eax,ds:0x8faa7363
  41885a:	imul   edi,DWORD PTR [ecx-0x6b],0x9d006f80
  418861:	(bad)  
  418862:	outs   dx,DWORD PTR ds:[esi]
  418863:	jo     0x4188cf
  418865:	scas   eax,DWORD PTR es:[edi]
  418866:	arpl   WORD PTR [ebx+edi*2-0x7c],bp
  41886a:	jne    0x4188d1
  41886c:	lea    eax,[edx+0x7d7b7468]
  418872:	jb     0x418874
  418874:	mov    WORD PTR [eax-0x6e639a90],es
  41887a:	push   edx
  41887b:	outs   dx,DWORD PTR ds:[esi]
  41887c:	jge    0x4187fe
  41887e:	push   0x66
  418880:	push   ds
  418881:	mov    ds:0xaea06576,al
  418886:	je     0x4188f7
  418888:	lods   eax,DWORD PTR ds:[esi]
  418889:	jnp    0x418900
  41888b:	jae    0x418847
  41888d:	imul   ebp,DWORD PTR [ebp+0x65],0x0
	...
  41889c:	xor    BYTE PTR [edi+0x3f],bl
  41889f:	ins    DWORD PTR es:[edi],dx
  4188a0:	cs jp  0x418917
  4188a3:	jae    0x4188d6
  4188a5:	imul   edx,DWORD PTR [edi+0x74],0x6769a32b
  4188ac:	cmp    DWORD PTR [edx+0x62],edi
  4188af:	dec    edi
  4188b0:	loopne 0x41885b
  4188b2:	jne    0x418919
  4188b4:	fcomp  QWORD PTR [esi+0x41]
  4188b7:	fisubr DWORD PTR gs:[edx+0x68fb6b69]
  4188be:	aas    
  4188bf:	outs   dx,BYTE PTR ds:[esi]
  4188c0:	clc    
  4188c1:	addr16 je 0x418931
  4188c4:	out    dx,eax
  4188c5:	mov    bl,BYTE PTR [edi+0x6f]
  4188c8:	lock pop esi
  4188ca:	inc    ebp
  4188cb:	outs   dx,DWORD PTR ds:[esi]
  4188cc:	nop
  4188cd:	mov    fs,WORD PTR [ebx+0x72]
  4188d0:	stos   BYTE PTR es:[edi],al
  4188d1:	mov    ch,0x5f
  4188d3:	fs dec edx
  4188d5:	imul   edx,DWORD PTR [ebp+0x74],0x6e1a2bf7
  4188dc:	fmul   DWORD PTR [edx+ebx*1]
  4188df:	fs mov dh,0x39
  4188e2:	aaa    
  4188e3:	ins    DWORD PTR es:[edi],dx
  4188e4:	fcomp  DWORD PTR [eax]
  4188e6:	sbb    DWORD PTR [ebx-0x1c],edx
  4188e9:	push   ss
  4188ea:	xor    eax,0x17e5f73f
  4188ef:	ins    DWORD PTR es:[edi],dx
  4188f0:	fsubr  st(6),st
  4188f2:	xor    dl,BYTE PTR [eax-0x3b]
  4188f5:	repnz xor BYTE PTR [edi-0x35],ah
  4188f9:	(bad)  
  4188fa:	pop    ds
  4188fb:	arpl   cx,cx
  4188fd:	ficom  DWORD PTR [esi]
  4188ff:	jae    0x418901
	...
  418909:	add    BYTE PTR [eax],al
  41890b:	add    BYTE PTR [edx-0x64c0fd06],dl
  418911:	repz cmp eax,0x17e5a371
  418917:	imul   ebx,DWORD PTR [edx-0x618dac39],0x9a6c19a7
  418921:	mov    al,ds:0x39f7712d
  418926:	and    al,0x72
  418928:	outs   dx,BYTE PTR ds:[esi]
  418929:	stos   BYTE PTR es:[edi],al
  41892a:	xor    DWORD PTR ds:0x536c2e70,esp
  418931:	cmp    al,BYTE PTR [edx+esi*2+0x5e]
  418935:	mov    bh,BYTE PTR [esi]
  418937:	push   ebx
  418938:	popa   
  418939:	mov    dh,BYTE PTR [ebp*2+0x74235743]
  418940:	cmp    ebx,DWORD PTR [ebx+0x3e]
  418943:	pop    edi
  418944:	idiv   DWORD PTR [ebp+ebp*1+0x72]
  418948:	sub    ebp,DWORD PTR [ecx+0x32]
  41894b:	arpl   WORD PTR [ecx],bx
  41894d:	ins    DWORD PTR es:[edi],dx
  41894e:	sub    DWORD PTR [ecx+0x2b],esi
  418951:	pop    edi
  418952:	and    eax,0x34612351
  418957:	arpl   WORD PTR [esi],si
  418959:	cmp    al,BYTE PTR [ebx+eiz*2+0x5]
  41895d:	arpl   cx,bx
  41895f:	dec    eax
  418960:	adc    esi,ecx
  418962:	retf   0x1442
  418965:	aad    0xd9
  418967:	sbb    al,0xd9
  418969:	mov    ecx,0xbde324cc
  41896e:	mov    esp,0x3c
	...
  41897b:	add    cl,dl
  41897d:	mov    bl,0xb1
  41897f:	push   ds
  418980:	in     eax,0xbd
  418982:	in     eax,dx
  418983:	inc    edx
  418984:	aam    0xd4
  418986:	mov    cl,0x42
  418988:	(bad)  [edi-0x3159d764]
  41898e:	mov    BYTE PTR [ecx],dh
  418990:	aam    0x62
  418992:	lods   al,BYTE PTR ds:[esi]
  418993:	xor    DWORD PTR [eax-0x69bb6e2e],ebp
  418999:	sar    DWORD PTR [edx+0x1c],1
  41899c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41899d:	mov    ebp,0xcea528ac
  4189a2:	xchg   BYTE PTR ds:0x378ec398,ah
  4189a8:	xchg   esp,eax
  4189a9:	mov    dl,0x5b
  4189ab:	sbb    ecx,DWORD PTR [ecx-0x51d8ae3f]
  4189b1:	mov    ebp,0xb7f70456
  4189b6:	pop    esp
  4189b7:	sbb    ebx,DWORD PTR [ecx]
  4189b9:	mov    edi,0x97f72051
  4189be:	cmp    al,0x1b
  4189c0:	xor    al,al
  4189c2:	cmp    DWORD PTR [ecx+0x62],eax
  4189c5:	mov    eax,0xc0591d3d
  4189ca:	(bad)  
  4189cd:	les    edx,FWORD PTR [ecx]
  4189cf:	sbb    al,0xf8
  4189d1:	(bad)  
  4189d2:	in     eax,dx
  4189d3:	xor    esp,DWORD PTR [esi]
  4189d5:	iret   
  4189d6:	clc    
  4189d7:	xor    DWORD PTR [edx+eax*8],edx
  4189da:	iret   
  4189db:	daa    
  4189dc:	adc    esi,DWORD PTR [edi+0x53ed]
	...
  4189ea:	add    BYTE PTR [eax],al
  4189ec:	inc    esi
  4189ed:	iret   
  4189ee:	push   es
  4189ef:	push   es
  4189f0:	(bad)
  4189f3:	sti    
  4189f4:	shl    DWORD PTR [ebp-0x4b42338e],1
  4189fa:	jae    0x4189d1
  4189fc:	aad    0xb4
  4189fe:	arpl   sp,cx
  418a00:	hlt    
  418a01:	bound  eax,QWORD PTR [esi]
  418a03:	jmp    0xe947ecfc
  418a08:	hlt    
  418a09:	bound  eax,QWORD PTR [esi]
  418a0b:	jmp    0xe947ed04
  418a10:	hlt    
  418a11:	bound  eax,QWORD PTR [esi]
  418a13:	jmp    0xe947ed0c
  418a18:	hlt    
  418a19:	bound  eax,QWORD PTR [esi]
  418a1b:	jmp    0xe947ed14
  418a20:	hlt    
  418a21:	bound  eax,QWORD PTR [esi]
  418a23:	jmp    0xe947ed1c
  418a28:	hlt    
  418a29:	bound  eax,QWORD PTR [esi]
  418a2b:	jmp    0xe947ed24
  418a30:	hlt    
  418a31:	bound  eax,QWORD PTR [esi]
  418a33:	jmp    0xe947ed2c
  418a38:	hlt    
  418a39:	bound  eax,QWORD PTR [esi]
  418a3b:	jmp    0xe947ed34
  418a40:	hlt    
  418a41:	bound  eax,QWORD PTR [esi]
  418a43:	jmp    0xe947ed3c
  418a48:	hlt    
  418a49:	bound  eax,QWORD PTR [esi]
  418a4b:	jmp    0xe947ed44
	...
  418a5c:	hlt    
  418a5d:	bound  eax,QWORD PTR [esi]
  418a5f:	jmp    0xe947ed58
  418a64:	hlt    
  418a65:	bound  eax,QWORD PTR [esi]
  418a67:	jmp    0xe947ed60
  418a6c:	hlt    
  418a6d:	bound  eax,QWORD PTR [esi]
  418a6f:	jmp    0x47ed68
  418a74:	mov    fs,WORD PTR [ecx+0x6]
  418a77:	add    BYTE PTR [esi-0x61fff99f],cl
  418a7d:	popa   
  418a7e:	push   es
  418a7f:	add    BYTE PTR [esi-0x598cf99f],bl
  418a85:	jl     0x418af1
  418a87:	ins    BYTE PTR es:[edi],dx
  418a88:	fst    QWORD PTR [eax+0x29]
  418a8b:	cmp    ah,BYTE PTR fs:[ebp+0x6]
  418a8f:	push   ebx
  418a90:	xchg   esi,eax
  418a91:	sahf   
  418a92:	arpl   WORD PTR [eax+edx*4+0x66],si
  418a96:	push   0x64
  418a98:	xor    edx,DWORD PTR [ebx+0x69926156]
  418a9e:	aaa    
  418a9f:	add    BYTE PTR [esi+0x61],bl
  418aa2:	push   es
  418aa3:	add    BYTE PTR [esi+0x50],cl
  418aa6:	dec    ebx
  418aa7:	inc    ecx
  418aa8:	dec    esi
  418aa9:	lahf   
  418aaa:	dec    edx
  418aab:	inc    ecx
  418aac:	push   ds
  418aad:	scas   eax,DWORD PTR es:[edi]
  418aae:	dec    edx
  418aaf:	inc    ecx
  418ab0:	push   ds
  418ab1:	gs dec edx
  418ab3:	inc    ecx
  418ab4:	push   cs
  418ab5:	jnp    0x418b01
  418ab7:	inc    ecx
  418ab8:	push   cs
  418ab9:	retf   
  418aba:	dec    edx
  418abb:	inc    ecx
  418abc:	push   ds
  418abd:	fisttp DWORD PTR [ecx+0x41]
	...
  418acc:	push   ds
  418acd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418ace:	dec    edx
  418acf:	inc    ecx
  418ad0:	push   cs
  418ad1:	and    ecx,DWORD PTR [edx+0x41]
  418ad4:	push   cs
  418ad5:	pop    ss
  418ad6:	dec    edx
  418ad7:	inc    ecx
  418ad8:	fimul  WORD PTR ds:0x71de414a
  418ade:	dec    ebx
  418adf:	inc    ecx
  418ae0:	into   
  418ae1:	xor    al,0x4c
  418ae3:	inc    ecx
  418ae4:	into   
  418ae5:	pusha  
  418ae6:	push   es
  418ae7:	add    dh,bl
  418ae9:	pop    edi
  418aea:	push   es
  418aeb:	add    BYTE PTR [esi+0x62],bl
  418aee:	push   es
  418aef:	add    dh,cl
  418af1:	mov    ebp,DWORD PTR [edi+0x20]
  418af4:	adc    ch,BYTE PTR [eax+0x65]
  418af7:	jne    0x418af0
  418af9:	pop    esi
  418afa:	and    eax,0x269236e
  418aff:	jmp    DWORD PTR [eax-0x8e57cc6]
  418b05:	cmp    DWORD PTR [ebx],eax
  418b07:	aas    
  418b08:	pop    es
  418b09:	dec    edx
  418b0a:	aaa    
  418b0b:	pop    edi
  418b0c:	add    ebx,DWORD PTR [ebx+0x2]
  418b0f:	inc    DWORD PTR [eax-0x8e37cc6]
  418b15:	cmp    DWORD PTR [ebx],eax
  418b17:	dec    esp
  418b18:	loopne 0x418b32
  418b1a:	and    ch,BYTE PTR [edi+edx*1-0x5]
  418b1e:	xor    dh,BYTE PTR [eax-0x45]
  418b21:	sbb    ah,BYTE PTR [edi]
  418b23:	pop    edi
  418b24:	idiv   DWORD PTR [edx]
  418b26:	add    eax,DWORD PTR [eax]
  418b28:	ja     0x418b84
  418b2a:	add    al,BYTE PTR [eax]
  418b2c:	idiv   eax
  418b2e:	and    DWORD PTR [ecx+0x0],esp
	...
  418b39:	add    BYTE PTR [eax],al
  418b3b:	add    bh,cl
  418b3d:	(bad)  
  418b3e:	add    bh,bh
  418b40:	cmp    BYTE PTR [edx],bh
  418b42:	sbb    DWORD PTR [edi],0xfffffff7
  418b45:	cmp    DWORD PTR [ebx],eax
  418b47:	inc    ecx
  418b48:	cwde   
  418b49:	les    ebx,FWORD PTR [eax]
  418b4b:	addr16 call 0x833a:0x18ff03c8
  418b53:	and    dh,bh
  418b55:	cmp    DWORD PTR [ebx],eax
  418b57:	dec    eax
  418b58:	sahf   
  418b59:	enter  0x6d27,0x85
  418b5d:	ret    0x202
  418b60:	idiv   DWORD PTR [ecx]
  418b62:	add    DWORD PTR [ebx],0xfffffff7
  418b65:	cmp    DWORD PTR [ebx],eax
  418b67:	dec    ebx
  418b68:	outs   dx,BYTE PTR ds:[esi]
  418b69:	pop    edx
  418b6a:	inc    esi
  418b6b:	ins    DWORD PTR es:[edi],dx
  418b6c:	push   esp
  418b6d:	xchg   DWORD PTR ds:0x2f8e4963,ebx
  418b73:	add    ch,dh
  418b75:	cmp    DWORD PTR [ebx],eax
  418b77:	adc    BYTE PTR [edx+edi*1],0x3
  418b7b:	add    BYTE PTR [ebx+eiz*2],dh
  418b7e:	adc    BYTE PTR [ecx],bl
  418b80:	dec    esp
  418b81:	mov    ah,0x7
  418b83:	in     al,0xf1
  418b85:	rcr    BYTE PTR ds:0xecf4840,cl
  418b8b:	add    al,0xa0
  418b8d:	inc    ebx
  418b8e:	in     eax,dx
  418b8f:	adc    edx,0x62
  418b92:	in     eax,dx
  418b93:	add    edi,DWORD PTR [edx+ecx*8]
  418b96:	int    0x53
  418b98:	adc    al,al
  418b9a:	icebp  
  418b9b:	xor    BYTE PTR ds:0x3dcbe,al
	...
  418ba9:	add    BYTE PTR [eax],al
  418bab:	add    ch,dh
  418bad:	(bad)  
  418bae:	in     eax,dx
  418baf:	and    DWORD PTR [ecx],0x63
  418bb2:	in     eax,dx
  418bb3:	add    esi,DWORD PTR [esi-0x2de7454d]
  418bb9:	mov    ah,0xd
  418bbb:	inc    eax
  418bbc:	retf   0xb2bf
  418bbf:	sbb    ah,dl
  418bc1:	mov    ah,0xb9
  418bc3:	mul    DWORD PTR ss:[eax-0x13]
  418bc7:	add    esi,DWORD PTR [edi+0x73]
  418bca:	in     eax,dx
  418bcb:	add    esi,edi
  418bcd:	lahf   
  418bce:	mov    BYTE PTR [eax],bl
  418bd0:	pushf  
  418bd1:	mov    bl,0x7f
  418bd3:	jecxz  0x418bbe
  418bd5:	mov    esi,0xb9911c7a
  418bda:	jl     0x418c0b
  418bdc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418bdd:	shl    DWORD PTR [ecx+0x1c],0x89
  418be1:	mov    ebp,0xb39a4fcd
  418be6:	jns    0x418c1e
  418be8:	mul    DWORD PTR [ecx-0x13]
  418beb:	add    esi,DWORD PTR [edi-0x6e]
  418bee:	in     eax,dx
  418bef:	add    esi,edi
  418bf1:	mov    ds:0xd1501749,eax
  418bf6:	inc    esi
  418bf7:	xor    eax,0x304eb56b
  418bfc:	push   eax
  418bfd:	mov    ecx,0xd224e442
  418c02:	push   es
  418c03:	inc    esi
  418c04:	out    dx,eax
  418c05:	mov    bl,0x6
  418c07:	call   0xecc7ef00
  418c0c:	hlt    
  418c0d:	bound  eax,QWORD PTR [esi]
  418c0f:	cmp    DWORD PTR [eax],eax
	...
  418c19:	add    BYTE PTR [eax],al
  418c1b:	add    BYTE PTR [eax],dl
  418c1d:	mov    ch,0x73
  418c1f:	push   es
  418c20:	or     eax,0x4be96aa2
  418c25:	shl    BYTE PTR [eax-0x3],1
  418c28:	out    0xa1,eax
  418c2a:	je     0x418c30
  418c2c:	aas    
  418c2d:	scas   al,BYTE PTR es:[edi]
  418c2e:	ins    DWORD PTR es:[edi],dx
  418c2f:	or     al,cl
  418c31:	iret   
  418c32:	jae    0x418c32
  418c34:	(bad)  
  418c35:	mov    dh,0x5a
  418c37:	mov    esi,0xce62d0dd
  418c3c:	daa    
  418c3d:	mov    ah,0x5a
  418c3f:	stos   BYTE PTR es:[edi],al
  418c40:	sbb    DWORD PTR [ebp-0x49013b8c],esi
  418c46:	push   eax
  418c47:	int3   
  418c48:	and    dh,BYTE PTR [ebp+ebp*2+0x419eeece]
  418c4f:	mov    cl,0x4
  418c51:	iret   
  418c52:	addr16 mov ebx,0xba5ab4e1
  418c58:	fadd   st(5),st
  418c5a:	push   0xffffff8d
  418c5c:	adc    al,0xa8
  418c5e:	test   DWORD PTR [bx+si],ecx
  418c61:	(bad)  
  418c62:	je     0x418bfe
  418c64:	hlt    
  418c65:	lds    edi,FWORD PTR [esi+0x79]
  418c68:	add    al,dl
  418c6a:	je     0x418bf0
  418c6c:	retf   0x6190
  418c6f:	jno    0x418c5a
  418c71:	bound  edx,QWORD PTR [ebx-0x44]
  418c74:	add    eax,0x414318d
  418c79:	jp     0x418c81
  418c7b:	jmp    0x3a47ef74
	...
  418c8c:	or     BYTE PTR [edx-0x4affa697],ch
  418c92:	jae    0x418c94
  418c94:	inc    ecx
  418c95:	pop    ebp
  418c96:	push   edi
  418c97:	je     0x418cd4
  418c99:	xchg   edi,eax
  418c9a:	je     0x418d05
  418c9c:	or     BYTE PTR [esi+0x6a],bl
  418c9f:	cmp    DWORD PTR gs:[edx+0x6],esp
  418ca3:	push   ebx
  418ca4:	jmp    0x418c38
  418ca6:	gs (bad) 
  418ca8:	out    dx,al
  418ca9:	js     0x418d0a
  418cab:	jbe    0x418ca4
  418cad:	pop    edx
  418cae:	arpl   WORD PTR [edi-0x5],sp
  418cb1:	push   bp
  418cb3:	gs int 0x5e
  418cb6:	push   edi
  418cb7:	outs   dx,BYTE PTR ds:[esi]
  418cb8:	stc    
  418cb9:	popa   
  418cba:	dec    eax
  418cbb:	outs   dx,DWORD PTR ds:[esi]
  418cbc:	mov    bl,BYTE PTR [eax+eiz*2+0x79]
  418cc0:	fidivr WORD PTR [eax+0x5f]
  418cc3:	jbe    0x418c6c
  418cc5:	pop    ecx
  418cc6:	arpl   WORD PTR [edi+0x3b],sp
  418cc9:	gs push ebp
  418ccb:	gs popf 
  418ccd:	ja     0x418d32
  418ccf:	popa   
  418cd0:	dec    edx
  418cd1:	pusha  
  418cd2:	push   edx
  418cd3:	outs   dx,DWORD PTR ds:[esi]
  418cd4:	inc    ebp
  418cd5:	pusha  
  418cd6:	push   0x705c8c50
  418cdb:	imul   esi,DWORD PTR [edx],0x4e656160
  418ce1:	xchg   esi,eax
  418ce2:	arpl   WORD PTR [edx+0x6f],ax
  418ce5:	xchg   BYTE PTR [ebp+0x75],ch
  418ce8:	mov    ss,WORD PTR [ebp+0x5c886974]
  418cee:	push   0x65
	...
  418cfc:	jns    0x418d5e
  418cfe:	push   es
  418cff:	push   ebx
  418d00:	imul   edx,DWORD PTR [edi+0x5a8a7363],0x74
  418d07:	outs   dx,BYTE PTR gs:[esi]
  418d09:	ja     0x418d6a
  418d0b:	jbe    0x418d84
  418d0d:	pop    ecx
  418d0e:	arpl   WORD PTR [edi-0x55],sp
  418d11:	push   bp
  418d13:	gs daa 
  418d15:	pop    ecx
  418d16:	gs jb  0x418d10
  418d19:	scas   al,BYTE PTR es:[edi]
  418d1a:	and    DWORD PTR [ecx+0x5a],esi
  418d1d:	jnp    0x418d54
  418d1f:	ins    DWORD PTR es:[edi],dx
  418d20:	arpl   WORD PTR [ebx+0x785e7252],bp
  418d26:	sbb    DWORD PTR [edx+edx*2-0x4f],ebp
  418d2a:	and    eax,0x41a72400
  418d2f:	jno    0x418d75
  418d31:	push   ebx
  418d32:	pop    ss
  418d33:	outs   dx,BYTE PTR ds:[esi]
  418d34:	inc    edi
  418d35:	pop    esp
  418d36:	sbb    DWORD PTR [ebx+0x16],ebp
  418d39:	pop    esp
  418d3a:	sub    DWORD PTR [eax+edx*1+0x65],edx
  418d3e:	and    eax,0x1a3c476e
  418d43:	jbe    0x418d63
  418d45:	outs   dx,BYTE PTR ds:[esi]
  418d46:	and    eax,0x34a1265
  418d4b:	push   eax
  418d4c:	xor    BYTE PTR [ebp+0x56],bl
  418d4f:	and    dl,dl
  418d51:	sbb    al,0xe3
  418d53:	inc    edi
  418d54:	retf   
  418d55:	cmc    
  418d56:	push   edx
  418d57:	sub    eax,0xaf26826
  418d5c:	in     eax,dx
  418d5d:	add    DWORD PTR [eax],edx
  418d5f:	jno    0x418d61
	...
  418d69:	add    BYTE PTR [eax],al
  418d6b:	add    bl,ah
  418d6d:	arpl   dx,sp
  418d6f:	and    al,ah
  418d71:	dec    esi
  418d72:	std    
  418d73:	ds aam 0x2c
  418d76:	es jo  0x418d44
  418d79:	xor    esp,ebx
  418d7b:	sub    DWORD PTR [eax],ecx
  418d7d:	adc    al,0xfe
  418d7f:	or     DWORD PTR [esi-0x589cdc14],esi
  418d85:	fstp   st(5)
  418d87:	inc    edx
  418d88:	xchg   ecx,eax
  418d89:	in     al,dx
  418d8a:	pcmpgtb mm1,QWORD PTR [esi-0x28c5e829]
  418d91:	rcl    BYTE PTR [esi],cl
  418d93:	arpl   WORD PTR [ecx+0x7e741abd],bx
  418d99:	std    
  418d9a:	loop   0x418dc5
  418d9c:	mov    esp,0x20e95e62
  418da1:	outs   dx,BYTE PTR ds:[esi]
  418da2:	repz inc edx
  418da4:	pop    edx
  418da5:	rcr    DWORD PTR [ecx+0x21],1
  418da8:	push   ecx
  418da9:	mov    bh,0xfa
  418dab:	aaa    
  418dac:	push   esp
  418dad:	ror    DWORD PTR [eax+0x30],1
  418db0:	pop    edi
  418db1:	jge    0x418dc0
  418db3:	loope  0x418e11
  418db5:	mov    dh,0xe2
  418db7:	stc    
  418db8:	aaa    
  418db9:	shl    BYTE PTR [edi],1
  418dbb:	push   ss
  418dbc:	push   esp
  418dbd:	les    ebx,FWORD PTR [ecx]
  418dbf:	sbb    eax,0xe3e3d122
  418dc4:	pop    ss
  418dc5:	iret   
  418dc6:	add    BYTE PTR [ebx],dh
  418dc8:	adc    al,0x6e
  418dca:	jecxz  0x418e0e
  418dcc:	or     dl,cl
  418dce:	stc    
  418dcf:	and    BYTE PTR [eax],al
	...
  418dd9:	add    BYTE PTR [eax],al
  418ddb:	add    BYTE PTR [ecx],ah
  418ddd:	mov    bh,0xca
  418ddf:	dec    edi
  418de0:	add    BYTE PTR [ebx-0x3e1f15f6],dh
  418de6:	std    
  418de7:	xor    ecx,DWORD PTR [ebx]
  418de9:	retf   0x24cc
  418dec:	jmp    0x418db7
  418dee:	enter  0x1a15,0xd0
  418df2:	int3   
  418df3:	das    
  418df4:	aam    0xb6
  418df6:	cli    
  418df7:	xor    ah,bl
  418df9:	mov    ah,0xca
  418dfb:	and    al,0xdc
  418dfd:	ins    DWORD PTR es:[edi],dx
  418dfe:	repz inc edx
  418e00:	fcmovbe st,st(0)
  418e02:	mov    ecx,0xfab6d120
  418e07:	inc    eax
  418e08:	leave  
  418e09:	ret    
  418e0a:	nop
  418e0b:	pop    ds
  418e0c:	cwde   
  418e0d:	rol    BYTE PTR [eax-0x793af717],1
  418e13:	adc    eax,0xf896b4c0
  418e18:	out    dx,al
  418e19:	xchg   ebp,eax
  418e1a:	jl     0x418e3c
  418e1c:	test   DWORD PTR [ebp-0x2f6be152],ecx
  418e22:	push   es
  418e23:	jge    0x418e33
  418e25:	pop    edi
  418e26:	dec    ecx
  418e27:	jle    0x418df7
  418e29:	(bad)  
  418e2a:	push   0x55
  418e2c:	adc    al,0x90
  418e2e:	xor    cl,BYTE PTR [edi]
  418e30:	jecxz  0x418e90
  418e32:	cs dec edx
  418e34:	or     cl,dl
  418e36:	jbe    0x418e80
  418e38:	daa    
  418e39:	(bad)  
  418e3a:	fs push ebp
  418e3c:	lock jnp 0x418e65
  418e3f:	sub    al,0x0
	...
  418e49:	add    BYTE PTR [eax],al
  418e4b:	add    BYTE PTR [esi],ah
  418e4d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418e4e:	inc    ecx
  418e4f:	or     eax,edx
  418e51:	nop
  418e52:	ss repnz aam 0x97
  418e56:	ins    DWORD PTR es:[edi],dx
  418e57:	pop    ss
  418e58:	xlat   BYTE PTR ds:[ebx]
  418e59:	iret   
  418e5a:	outs   dx,DWORD PTR ds:[esi]
  418e5b:	sbb    dl,BYTE PTR [ebx-0x563fc18b]
  418e61:	ins    BYTE PTR es:[edi],dx
  418e62:	or     ebx,esp
  418e64:	hlt    
  418e65:	mov    ds:0xc1c71767,eax
  418e6a:	push   0x61aaa1f5
  418e6f:	pop    es
  418e70:	loop   0x418e28
  418e72:	outs   dx,BYTE PTR ds:[esi]
  418e73:	mov    bl,0xf4
  418e75:	scas   al,BYTE PTR es:[edi]
  418e76:	addr16 retf 0xb715
  418e7a:	ins    DWORD PTR es:[edi],dx
  418e7b:	into   
  418e7c:	add    bh,BYTE PTR [ecx+0x6]
  418e7f:	scas   al,BYTE PTR es:[edi]
  418e80:	and    DWORD PTR [edi-0x7cd9fbda],edx
  418e86:	dec    esi
  418e87:	popf   
  418e88:	rcl    BYTE PTR [edx-0x71dd07d9],0x9
  418e8f:	jecxz  0x418e8d
  418e91:	iret   
  418e92:	jae    0x418e49
  418e94:	dec    esi
  418e95:	pop    esi
  418e96:	and    DWORD PTR [edx-0x75ba93d7],ebx
  418e9c:	xlat   BYTE PTR ds:[ebx]
  418e9d:	shl    DWORD PTR [esi-0x63],0xe
  418ea1:	pop    esi
  418ea2:	sub    al,0xbe
  418ea4:	imul   ecx,DWORD PTR ds:[eax+eax*1],0x6565835f
  418eac:	mov    cs,WORD PTR [ebp+0x452b]
	...
  418eba:	add    BYTE PTR [eax],al
  418ebc:	js     0x418e41
  418ebe:	imul   esp,DWORD PTR [edi+esi*2+0x58],0x59fe3a61
  418ec6:	bound  esp,QWORD PTR [ebp+0x38]
  418ec9:	jae    0x418f2a
  418ecb:	je     0x418f14
  418ecd:	sbb    edx,DWORD PTR [edi]
  418ecf:	sub    al,BYTE PTR ds:0xcb303b72
  418ed5:	cmp    eax,DWORD PTR [esi+0x6f]
  418ed8:	cmp    BYTE PTR [ebp+0x63],dl
  418edb:	arpl   WORD PTR [edx],ax
  418edd:	pop    edx
  418ede:	imul   ebp,DWORD PTR [esi-0x3c],0x96c6641
  418ee5:	je     0x418f4a
  418ee7:	or     eax,0x6575aca4
  418eec:	cld    
  418eed:	adc    eax,0x54f36738
  418ef2:	jb     0x418f2e
  418ef4:	mov    esi,0xe77a6974
  418ef9:	pop    edx
  418efa:	push   0x61
  418efc:	mov    ecx,0xae30294d
  418f01:	sbb    DWORD PTR [esi+0x6f],esp
  418f04:	dec    ebx
  418f05:	jno    0x418f5e
  418f07:	je     0x418f50
  418f09:	sub    DWORD PTR [edx+0x65],0x5
  418f0d:	inc    edi
  418f0e:	dec    esp
  418f0f:	push   ebx
  418f10:	xchg   edi,eax
  418f11:	jl     0x418f39
  418f13:	xor    eax,0x203e36e8
  418f18:	popa   
  418f19:	pop    eax
  418f1a:	push   0x758e3964
  418f1f:	and    BYTE PTR [eax],al
	...
  418f29:	add    BYTE PTR [eax],al
  418f2b:	add    BYTE PTR [edi+0x49],al
  418f2e:	and    BYTE PTR ds:0xd3424,cl
  418f34:	cmp    BYTE PTR [ecx+0x28],ah
  418f37:	test   DWORD PTR cs:[ebx+0x3f],0x321c92a
  418f3f:	sub    ah,cl
  418f41:	adc    DWORD PTR [ebx],eax
  418f43:	dec    eax
  418f44:	mov    al,ds:0x7c0036f2
  418f49:	cs repz aaa 
  418f4c:	lahf   
  418f4d:	(bad)  
  418f4e:	xlat   BYTE PTR ds:[ebx]
  418f4f:	das    
  418f50:	sub    esp,DWORD PTR [edx+0x562722f5]
  418f56:	cmp    ch,BYTE PTR [ebx]
  418f58:	sbb    bl,BYTE PTR [edx-0x30]
  418f5b:	push   edi
  418f5c:	adc    bl,BYTE PTR [edx-0x30]
  418f5f:	push   edi
  418f60:	and    ch,BYTE PTR [edi-0x2e]
  418f63:	xor    DWORD PTR [edi],ebp
  418f65:	shl    BYTE PTR [bx+di],cl
  418f68:	pop    ds
  418f69:	outs   dx,DWORD PTR ds:[esi]
  418f6a:	shl    BYTE PTR [ecx],cl
  418f6c:	pop    ds
  418f6d:	shl    BYTE PTR [bx+di],cl
  418f70:	dec    edi
  418f71:	das    
  418f72:	shl    DWORD PTR [ecx],cl
  418f74:	dec    edi
  418f75:	daa    
  418f76:	shl    DWORD PTR [ecx],cl
  418f78:	aas    
  418f79:	push   edi
  418f7a:	add    al,BYTE PTR [ebp+0x12]
  418f7d:	push   esi
  418f7e:	push   esp
  418f7f:	pop    edi
  418f80:	or     edx,DWORD PTR [ebx+0x1c]
  418f83:	arpl   WORD PTR [ebx+eiz*2],sp
  418f86:	pcmpeqb mm3,QWORD PTR [edx]
  418f89:	addr16 dec ecx
  418f8b:	outs   dx,BYTE PTR ds:[esi]
  418f8c:	adc    DWORD PTR ds:0x6903,edi
	...
  418f9a:	add    BYTE PTR [eax],al
  418f9c:	ficom  DWORD PTR [edi]
  418f9e:	xor    eax,0xd058db63
  418fa3:	sub    eax,0x2725db
  418fa8:	scas   al,BYTE PTR es:[edi]
  418fa9:	sbb    BYTE PTR [ebp*2+0x4fcf3bc8],bh
  418fb0:	lds    ebp,FWORD PTR [eax+eiz*1]
  418fb3:	arpl   sp,ax
  418fb5:	clc    
  418fb6:	add    dl,BYTE PTR [ecx-0x38]
  418fb9:	and    ecx,DWORD PTR [edi]
  418fbb:	jne    0x418f53
  418fbd:	bound  ebx,QWORD PTR [ebx-0x715b34d8]
  418fc3:	adc    eax,0x188192c3
  418fc8:	xchg   edx,eax
  418fc9:	leave  
  418fca:	ja     0x418fe2
  418fcc:	mov    bl,0xa4
  418fce:	cdq    
  418fcf:	xor    ebp,DWORD PTR [ebx-0x74e97756]
  418fd5:	scas   eax,DWORD PTR es:[edi]
  418fd6:	in     eax,dx
  418fd7:	ss mov al,ah
  418fda:	jno    0x418ff6
  418fdc:	push   eax
  418fdd:	mov    cl,0x4a
  418fdf:	inc    eax
  418fe0:	xor    edx,eax
  418fe2:	pop    ebx
  418fe3:	(bad)  
  418fe4:	cmp    al,0x93
  418fe6:	inc    ecx
  418fe7:	sbb    DWORD PTR [edx-0x36],edx
  418fea:	aaa    
  418feb:	pop    ss
  418fec:	xor    esp,DWORD PTR [ebp-0x54d4cbe7]
  418ff2:	dec    eax
  418ff3:	pop    ss
  418ff4:	dec    ebx
  418ff5:	mov    al,0xed
  418ff7:	ss dec edx
  418ff9:	lds    esi,FWORD PTR [ecx]
  418ffb:	sbb    edx,DWORD PTR [eax-0x4f]
  418ffe:	or     al,BYTE PTR [eax+0x0]
	...
  419009:	add    BYTE PTR [eax],al
  41900b:	add    BYTE PTR [ecx],dh
  41900d:	ret    0xe41b
  419010:	sub    eax,0x1224ffc2
  419015:	(bad)  
  419016:	sbb    eax,DWORD PTR [eax+0x27]
  419019:	iret   
  41901a:	cli    
  41901b:	sub    dl,BYTE PTR [eax]
  41901d:	int    0xfc
  41901f:	aas    
  419020:	cmp    DWORD PTR [edi-0x33d0bfe3],edx
  419026:	cld    
  419027:	pop    ss
  419028:	out    0x62,al
  41902a:	mov    esp,0xd0b6d132
  41902f:	and    al,0xe5
  419031:	lds    esi,FWORD PTR [ecx-0x564f47b7]
  419037:	ss mov al,0xb4
  41903a:	retf   0xb327
  41903d:	leave  
  41903e:	into   
  41903f:	das    
  419040:	rol    bl,cl
  419042:	push   es
  419043:	mov    eax,ds:0xbe72b20b
  419048:	or     dh,BYTE PTR [edx+ebx*2+0x4e92e0af]
  41904f:	mov    cs,WORD PTR [ecx]
  419051:	mov    bh,0x6
  419053:	mov    edx,0x9672c4e5
  419058:	(bad)  [eax-0x64415a9f]
  41905e:	je     0x41901b
  419060:	rcl    BYTE PTR [ecx-0x3930809b],0x42
  419067:	sbb    BYTE PTR [ebx],0xc7
  41906a:	addr16 dec esi
  41906c:	cmp    eax,edx
  41906e:	jae    0x4190c5
	...
  41907c:	es mov ch,0x7d
  41907f:	xor    eax,0x21568f2d
  419084:	push   es
  419085:	mov    ah,0x72
  419087:	jmp    0x35a2588f
  41908c:	ficomp WORD PTR [ecx-0x5ec8b38c]
  419092:	cmp    ebx,DWORD PTR gs:[ebx-0x2be89a53]
  419099:	mov    edi,0x94371b61
  41909e:	gs pop ds
  4190a0:	sar    BYTE PTR [esi-0x392bffbe],1
  4190a6:	addr16 push cs
  4190a8:	cmp    eax,edx
  4190aa:	jae    0x4190a1
  4190ac:	(bad)  
  4190ad:	mov    ah,0x7d
  4190af:	adc    eax,0x21568f2d
  4190b4:	es mov ah,0x72
  4190b7:	jmp    0xdab52ae0
  4190bc:	inc    edi
  4190be:	je     0x41908d
  4190c0:	hlt    
  4190c1:	stos   BYTE PTR es:[edi],al
  4190c2:	addr16 (bad) 
  4190c5:	test   al,0x65
  4190c7:	add    BYTE PTR [ebx],ah
  4190c9:	add    DWORD PTR [esi],0x74817d55
  4190cf:	add    BYTE PTR [edx+0x1e65688d],dl
  4190d5:	pop    ebx
  4190d6:	gs js  0x41910a
  4190d9:	mov    WORD PTR [edx+0x70],?
  4190dc:	xor    BYTE PTR [ebp+0x6968],cl
	...
  4190ea:	add    BYTE PTR [eax],al
  4190ec:	push   cs
  4190ed:	jp     0x419130
  4190ef:	dec    eax
  4190f0:	push   edi
  4190f1:	outs   dx,DWORD PTR ds:[esi]
  4190f2:	dec    edx
  4190f3:	inc    ebp
  4190f4:	ins    BYTE PTR es:[edi],dx
  4190f5:	data16 aas 
  4190f7:	outs   dx,BYTE PTR ds:[esi]
  4190f8:	jge    0x41914b
  4190fa:	push   edi
  4190fb:	ins    BYTE PTR es:[edi],dx
  4190fc:	jb     0x4190a0
  4190fe:	pop    edi
  4190ff:	jb     0x4190df
  419101:	stos   DWORD PTR es:[edi],eax
  419102:	jb     0x419174
  419104:	daa    
  419105:	jne    0x419166
  419107:	dec    esi
  419108:	das    
  419109:	mov    ah,BYTE PTR [ebx+0x0]
  41910c:	sbb    eax,0x29746074
  419111:	xchg   BYTE PTR [ebp+eiz*2+0x12],dh
  419115:	lods   al,BYTE PTR ds:[esi]
  419116:	outs   dx,BYTE PTR ds:[esi]
  419117:	imul   edi,ebp,0xe2726372
  41911d:	jnp    0x41917e
  41911f:	outs   dx,BYTE PTR ds:[esi]
  419120:	cmp    dh,BYTE PTR [ecx+esi*2+0x73]
  419124:	mov    esi,0xf36d699e
  419129:	test   DWORD PTR [eax+0x64],ebp
  41912c:	jmp    0x41917e
  41912e:	push   es
  41912f:	push   ebx
  419130:	xchg   ecx,eax
  419131:	mov    esi,DWORD PTR [edx+0x77]
  419134:	call   DWORD PTR [eax+0x63]
  419137:	pop    esp
  419138:	fld    DWORD PTR [esi-0x7e0d8ca1]
  41913e:	je     0x41919c
  419140:	or     dh,BYTE PTR [edx+esi*2+0x61]
  419144:	inc    edx
  419145:	inc    ebp
  419146:	inc    esi
  419147:	outs   dx,DWORD PTR ds:[esi]
  419148:	xor    ecx,DWORD PTR [eax+0x27f76e57]
  41914e:	and    BYTE PTR [edx+0x0],dh
	...
  419159:	add    BYTE PTR [eax],al
  41915b:	add    bh,dh
  41915d:	pop    es
  41915e:	dec    esp
  41915f:	jo     0x419125
  419161:	clc    
  419162:	sub    esi,DWORD PTR [esp+edx*8+0x13]
  419166:	add    edx,DWORD PTR [ecx-0x32]
  419169:	neg    DWORD PTR [edi]
  41916b:	jno    0x419140
  41916d:	dec    ebx
  41916e:	aaa    
  41916f:	inc    edi
  419170:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419171:	fcomp  QWORD PTR ds:0x2aecab67
  419177:	pop    esp
  419178:	sar    ah,0x45
  41917b:	inc    esi
  41917c:	stos   DWORD PTR es:[edi],eax
  41917d:	sti    
  41917e:	add    bl,BYTE PTR [eax+eax*4-0x2e]
  419182:	xor    al,0x2e
  419184:	mov    gs,ecx
  419186:	sub    eax,DWORD PTR [eax]
  419188:	leave  
  419189:	loop   0x4191bf
  41918b:	addr16 not eax
  41918e:	xor    DWORD PTR [ebp+0x31],ebx
  419191:	jbe    0x4191c5
  419193:	add    BYTE PTR [ebx],bh
  419195:	jae    0x4191cb
  419197:	add    BYTE PTR [ebx],dh
  419199:	xchg   DWORD PTR [eax+0x44],eax
  41919c:	ds jl  0x4191a1
  41919f:	inc    ecx
  4191a0:	and    dl,BYTE PTR [esi+0x4d]
  4191a3:	inc    esi
  4191a4:	sub    ebx,DWORD PTR [edx+0x2]
  4191a7:	dec    edi
  4191a8:	xor    al,0x82
  4191aa:	sub    DWORD PTR [ecx+0x2b],esi
  4191ad:	jns    0x4191c3
  4191af:	ja     0x4191a8
  4191b1:	jl     0x4191da
  4191b3:	sub    dx,WORD PTR [ecx+0x21]
  4191b7:	jb     0x4191cb
  4191b9:	outs   dx,BYTE PTR ds:[esi]
  4191ba:	aas    
  4191bb:	ins    BYTE PTR es:[edi],dx
  4191bc:	and    BYTE PTR [ecx+eiz*1+0x6c],ch
	...
  4191cc:	and    al,0x8d
  4191ce:	inc    ecx
  4191cf:	push   eax
  4191d0:	cmp    dl,BYTE PTR [esi+0x43]
  4191d3:	jae    0x4191d8
  4191d5:	addr16 inc eax
  4191d7:	push   esp
  4191d8:	(bad)  
  4191d9:	sub    ecx,edx
  4191db:	pop    ds
  4191dc:	mov    edi,0xd430d062
  4191e1:	xchg   esi,eax
  4191e2:	mov    esi,0xc0c7c342
  4191e7:	das    
  4191e8:	aad    0xc1
  4191ea:	fild   DWORD PTR [ebx]
  4191ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4191ed:	mov    edi,0xbbc1ca17
  4191f3:	sub    BYTE PTR [ebx-0x6ad13e61],bl
  4191f9:	sar    DWORD PTR [ecx-0x425e49ce],0x48
  419200:	ret    
  419201:	mov    ds:0xa0941792,eax
  419206:	mov    ecx,0xcd70d733
  41920b:	xor    eax,DWORD PTR [ebp-0x79d77839]
  419211:	mov    bl,0x96
  419213:	cs mov ecx,eax
  419216:	cmp    DWORD PTR [edi],0x2e91a440
  41921c:	pop    edx
  41921d:	(bad)  
  41921e:	dec    ebx
  41921f:	and    eax,0x2f3c6365
  419224:	push   ecx
  419225:	scas   eax,DWORD PTR es:[edi]
  419226:	pop    eax
  419227:	and    eax,0x4729be45
  41922c:	pop    ebx
  41922d:	enter  0x254b,0x0
	...
  419239:	add    BYTE PTR [eax],al
  41923b:	add    BYTE PTR [ebx-0x6c],dl
  41923e:	sub    al,0x45
  419240:	daa    
  419241:	sahf   
  419242:	adc    DWORD PTR [ebx+0x24],eax
  419245:	scas   eax,DWORD PTR es:[edi]
  419246:	inc    edx
  419247:	inc    esi
  419248:	inc    ebx
  419249:	xchg   ebx,eax
  41924a:	int    0xd6
  41924c:	add    BYTE PTR [ebx-0x68ebcef8],ch
  419252:	ds inc ebx
  419254:	sub    ecx,eax
  419256:	clc    
  419257:	das    
  419258:	adc    eax,0x2603fbc2
  41925d:	enter  0x17ff,0x2
  419261:	ret    0xfb06
  419264:	pop    ds
  419265:	xchg   edi,eax
  419266:	aas    
  419267:	std    
  419268:	sbb    ebp,eax
  41926a:	gs aad 0x25
  41926d:	mov    ds:0x96afb945,al
  419272:	inc    ebx
  419273:	fsub   st(0),st
  419275:	ret    
  419276:	inc    eax
  419277:	mov    ch,0x4
  419279:	sub    DWORD PTR [edi],0x9
  41927c:	or     esi,DWORD PTR [ebp-0x4df03899]
  419282:	jae    0x419244
  419284:	loope  0x41924e
  419286:	gs mov ebp,0xbd43a7e8
  41928c:	rol    ebp,1
  41928e:	push   0xffffff8b
  419290:	shl    DWORD PTR [esi+eax*1+0x72c0e1ba],cl
  419297:	xchg   esi,eax
  419298:	shl    DWORD PTR [ecx+eiz*2+0x67c6b9a5],cl
  41929f:	mov    eax,DWORD PTR [eax]
	...
  4192a9:	add    BYTE PTR [eax],al
  4192ab:	add    bl,dl
  4192ad:	(bad)  
  4192ae:	push   ebx
  4192af:	stos   BYTE PTR es:[edi],al
  4192b0:	cmp    edx,DWORD PTR [ebx-0x4dca72bf]
  4192b6:	jb     0x419304
  4192b8:	cmp    DWORD PTR [edi+0x56bb0956],ecx
  4192be:	dec    esi
  4192bf:	inc    esi
  4192c0:	and    dl,al
  4192c2:	pop    edx
  4192c3:	cmp    BYTE PTR [esi],dh
  4192c5:	(bad)  
  4192c6:	addr16 push esi
  4192c8:	pop    es
  4192c9:	shl    DWORD PTR [ebp+0x3b],0xf3
  4192cd:	xchg   ebx,eax
  4192ce:	addr16 dec edi
  4192d0:	cmpxchg BYTE PTR [ebp+0x3b],ah
  4192d4:	rcl    BYTE PTR [esi-0x3f2deac1],1
  4192da:	gs or  eax,0x3945a3e6
  4192e0:	cmp    BYTE PTR [edi-0x3e10ebbd],dl
  4192e6:	inc    eax
  4192e7:	add    dl,ah
  4192e9:	outs   dx,BYTE PTR ds:[esi]
  4192ea:	cmp    BYTE PTR es:[esi+0x6f7472],ch
  4192f1:	jle    0x419368
  4192f3:	jae    0x4192ec
  4192f5:	xchg   DWORD PTR [eax+0x61],ebp
  4192f8:	dec    edx
  4192f9:	jbe    0x419342
  4192fb:	inc    ebx
  4192fc:	mov    ds:0x3c6c6987,al
  419301:	xor    DWORD PTR [eax+eax*1-0x66],0x2c6f6a9f
  419309:	sub    DWORD PTR [edx+0x53],0x4556a18d
	...
  41931c:	mov    ah,BYTE PTR [ebx-0x5fcc8b8d]
  419322:	push   edx
  419323:	push   eax
  419324:	push   cs
  419325:	jbe    0x419368
  419327:	ins    BYTE PTR es:[edi],dx
  419328:	imul   eax,DWORD PTR [edi+edx*2+0x37a34d6c],0x45765350
  419333:	jne    0x4192b7
  419335:	jl     0x419377
  419337:	push   esp
  419338:	pop    esi
  419339:	inc    edx
  41933a:	inc    edi
  41933b:	jb     0x4193b6
  41933d:	popa   
  41933e:	pop    edx
  41933f:	inc    edi
  419340:	push   0xffffff87
  419342:	fs popa 
  419344:	dec    edx
  419345:	je     0x41938c
  419347:	inc    ecx
  419348:	push   ds
  419349:	sahf   
  41934a:	pop    edx
  41934b:	inc    ebx
  41934c:	xor    ebx,DWORD PTR [ebx+0x63]
  41934f:	inc    esi
  419350:	add    ch,BYTE PTR [edi+0x26]
  419353:	dec    esp
  419354:	daa    
  419355:	pop    ebx
  419356:	arpl   WORD PTR [eax],ax
  419358:	fisub  DWORD PTR [ebx-0x62bc8b8d]
  41935e:	push   edx
  41935f:	push   eax
  419360:	sahf   
  419361:	jne    0x4193d8
  419363:	ins    DWORD PTR es:[edi],dx
  419364:	enter  0x577d,0x74
  419368:	mov    ?,WORD PTR [edx+0x69]
  41936b:	not    WORD PTR [edi+0x11]
  41936f:	pop    edi
  419370:	add    eax,0x1346465f
  419375:	imul   edx,DWORD PTR ds:0x32843168,0x5c
  41937c:	and    al,0x4c
  41937e:	ss ins DWORD PTR es:[edi],dx
	...
  41938c:	shr    DWORD PTR [edi],1
  41938e:	adc    bl,BYTE PTR [edi-0x1b]
  419391:	es aaa 
  419393:	inc    esi
  419394:	retf   
  419395:	sub    dl,BYTE PTR [esi]
  419397:	push   0x32f3b9
  41939c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41939d:	hlt    
  41939e:	and    BYTE PTR [eax+ecx*8+0x2a],dh
  4193a2:	adc    eax,0x26fd9b63
  4193a7:	pop    edi
  4193a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4193a9:	and    eax,DWORD PTR [ecx+0x58]
  4193ac:	(bad)  
  4193ad:	out    0xce,eax
  4193af:	jmp    FWORD PTR [edi-0x698bea33]
  4193b5:	out    0x26,eax
  4193b7:	arpl   WORD PTR [ebp-0x608bdbf9],ax
  4193bd:	sti    
  4193be:	and    esi,DWORD PTR [edi+ecx*4+0x4b]
  4193c2:	adc    ebx,DWORD PTR [edi-0x7d]
  4193c5:	rol    DWORD PTR [edx],cl
  4193c7:	inc    edi
  4193c8:	popa   
  4193c9:	mov    ecx,0xb65b5f0f
  4193ce:	jecxz  0x41941f
  4193d0:	push   esi
  4193d1:	xchg   esi,eax
  4193d2:	sub    al,BYTE PTR [eax]
  4193d4:	xor    ebp,DWORD PTR [ebx-0x62c6a0ea]
  4193da:	cs fs push edx
  4193dd:	cwde   
  4193de:	add    bl,BYTE PTR [esp-0x6d]
  4193e2:	push   ss
  4193e3:	arpl   WORD PTR [esp+eiz*2+0x26],ax
  4193e7:	pop    edi
  4193e8:	sub    ecx,DWORD PTR [edx+0x2f]
  4193eb:	dec    edi
  4193ec:	and    ah,BYTE PTR [ebx+0x691f]
	...
  4193fa:	add    BYTE PTR [eax],al
  4193fc:	shl    DWORD PTR [edx+0x9],1
  4193ff:	and    eax,0x4c396323
  419404:	sbb    BYTE PTR [eax-0x45fad4e7],dh
  41940a:	mov    bh,0x1f
  41940c:	and    BYTE PTR [edi-0x38cec813],ch
  419412:	push   cs
  419413:	pop    ss
  419414:	fistp  WORD PTR [ebp+edx*1-0x129034cc]
  41941b:	aaa    
  41941c:	mov    ecx,0xcf16cec6
  419421:	pushf  
  419422:	lds    esi,FWORD PTR [ebx]
  419424:	mov    bl,0x6e
  419426:	in     eax,dx
  419427:	aaa    
  419428:	mov    cl,0xc9
  41942a:	mov    ecx,0xd1c99d20
  41942f:	daa    
  419430:	cwde   
  419431:	bound  ebx,QWORD PTR [ecx-0x355167ea]
  419437:	sub    al,cl
  419439:	(bad)  
  41943a:	into   
  41943b:	and    dl,BYTE PTR [eax+esi*4-0x3973e431]
  419442:	in     eax,dx
  419443:	aaa    
  419444:	test   DWORD PTR [ebp-0x5166df74],edi
  41944a:	pushf  
  41944b:	and    BYTE PTR [ebp-0x79ea7554],al
  419451:	test   BYTE PTR [ebp-0x6e9c9cd8],al
  419457:	and    DWORD PTR [eax-0x39],edx
  41945a:	sbb    BYTE PTR ds:0x2551c758,0x0
	...
  419469:	add    BYTE PTR [eax],al
  41946b:	add    BYTE PTR [ecx],cl
  41946d:	mov    ebx,0x8ff7284a
  419472:	inc    eax
  419473:	and    al,BYTE PTR [ebx-0x54]
  419476:	dec    esi
  419477:	push   ss
  419478:	push   esp
  419479:	xchg   edi,eax
  41947a:	daa    
  41947b:	sub    eax,0x2d23be4b
  419480:	and    eax,edi
  419482:	push   es
  419483:	dec    eax
  419484:	repz xchg ecx,eax
  419486:	addr16 inc edi
  419488:	pop    es
  419489:	scas   al,BYTE PTR es:[edi]
  41948a:	gs sbb edx,esi
  41948d:	xchg   esi,eax
  41948e:	inc    eax
  41948f:	adc    bh,bl
  419491:	mov    edi,0xc6df005c
  419496:	gs leave 
  419498:	cmp    edi,eax
  41949a:	ins    DWORD PTR es:[edi],dx
  41949b:	or     al,0xcd
  41949d:	scas   al,BYTE PTR es:[edi]
  41949e:	push   es
  41949f:	xor    BYTE PTR ds:0x1f0872b2,bl
  4194a5:	(bad)  
  4194a6:	push   edi
  4194a7:	and    eax,0xb106b112
  4194ac:	or     eax,0x7e972b2
  4194b1:	mov    dl,0x61
  4194b3:	fcomi  st,st(4)
  4194b5:	xchg   edx,eax
  4194b6:	gs fucompp 
  4194b9:	bound  edx,QWORD PTR [esi-0x2a]
  4194bc:	loop   0x41946c
  4194be:	push   es
  4194bf:	fwait
  4194c0:	xlat   BYTE PTR ds:[ebx]
  4194c1:	(bad)  
  4194c2:	addr16 mov ebp,0xc04282d7
  4194c8:	or     ah,BYTE PTR [ebx+0x53]
  4194cb:	mov    WORD PTR [edx],es
  4194cd:	lods   eax,DWORD PTR ds:[esi]
  4194ce:	popa   
  4194cf:	fwait
	...
  4194dc:	adc    al,0x8f
  4194de:	jge    0x419479
  4194e0:	xlat   BYTE PTR ds:[ebx]
  4194e1:	bound  edx,QWORD PTR [ebx-0x7c]
  4194e4:	jmp    0x679b:0xe7b61ac
  4194eb:	jp     0x4194ed
  4194ed:	arpl   WORD PTR [ebx-0x74],dx
  4194f0:	add    bh,BYTE PTR [ecx-0x6a31849f]
  4194f6:	jae    0x419544
  4194f8:	add    DWORD PTR [ebx+0x53],esp
  4194fb:	inc    esp
  4194fc:	jmp    0xdd9cf6b9
  419501:	mov    ds:0x62ea5a65,al
  419506:	push   ebx
  419507:	add    BYTE PTR [ebx],ch
  419509:	pop    ecx
  41950a:	jo     0x419571
  41950c:	in     al,dx
  41950d:	cmp    al,0x47
  41950f:	outs   dx,DWORD PTR ds:[esi]
  419510:	in     al,dx
  419511:	push   edx
  419512:	push   es
  419513:	push   eax
  419514:	das    
  419515:	push   ebx
  419516:	outs   dx,BYTE PTR ds:[esi]
  419517:	add    ch,bl
  419519:	push   ecx
  41951a:	je     0x419592
  41951c:	sti    
  41951d:	pop    eax
  41951e:	push   edx
  41951f:	jns    0x41950f
  419521:	push   ecx
  419522:	push   es
  419523:	dec    esp
  419524:	out    dx,eax
  419525:	push   edi
  419526:	jb     0x419548
  419528:	fst    QWORD PTR [ecx+0x74]
  41952b:	jbe    0x419528
  41952d:	pop    eax
  41952e:	es dec eax
  419530:	icebp  
  419531:	push   edi
  419532:	jb     0x419534
  419534:	add    al,BYTE PTR [esi+0x77ee7475]
  41953a:	arpl   WORD PTR [edx+0x28],si
  41953d:	push   ecx
  41953e:	je     0x419560
	...
  41954c:	mov    edx,DWORD PTR [edi+0x63]
  41954f:	jb     0x41959f
  419551:	stos   BYTE PTR es:[edi],al
  419552:	push   edi
  419553:	jae    0x4195cf
  419555:	inc    esi
  419556:	push   esi
  419557:	gs ins BYTE PTR es:[edi],dx
  419559:	push   esp
  41955a:	arpl   WORD PTR [edx-0x2],si
  41955d:	jbe    0x4195b6
  41955f:	jae    0x4195be
  419561:	dec    dx
  419563:	popa   
  419564:	jge    0x4195c8
  419566:	es push ebx
  419568:	jnp    0x4195c2
  41956a:	jo     0x4195d1
  41956c:	ins    BYTE PTR es:[edi],dx
  41956d:	inc    esi
  41956e:	inc    edi
  41956f:	outs   dx,DWORD PTR ds:[esi]
  419570:	pop    esp
  419571:	bound  eax,QWORD PTR [esi]
  419573:	dec    esp
  419574:	outs   dx,DWORD PTR ds:[esi]
  419575:	push   edi
  419576:	jb     0x419598
  419578:	lea    edx,[eax+0x74]
  41957b:	jbe    0x4195f8
  41957d:	push   edi
  41957e:	es push eax
  419580:	outs   dx,DWORD PTR ds:[esi]
  419581:	popa   
  419582:	outs   dx,BYTE PTR ds:[esi]
  419583:	add    BYTE PTR [edx],ah
  419585:	xchg   BYTE PTR [ebp+0x74],dh
  419588:	(bad)  
  419589:	ja     0x4195ee
  41958b:	jb     0x419584
  41958d:	xchg   ecx,eax
  41958e:	pop    ss
  41958f:	jb     0x4195a8
  419591:	js     0x4195ae
  419593:	jo     0x4195e7
  419595:	cmp    al,0x45
  419597:	push   esp
  419598:	inc    edi
  419599:	pop    esp
  41959a:	dec    esp
  41959b:	pop    edi
  41959c:	and    DWORD PTR [ebx+0x712b5f25],esp
  4195a2:	adc    BYTE PTR [eax],al
  4195a4:	xor    DWORD PTR [eax+0x32],esi
  4195a7:	and    BYTE PTR [ecx+eiz*2],dh
  4195aa:	pop    ds
  4195ab:	imul   edx,DWORD PTR [esi],0x6a
  4195ae:	arpl   WORD PTR es:[eax],ax
	...
  4195b9:	add    BYTE PTR [eax],al
  4195bb:	add    BYTE PTR ds:0x774253c,al
  4195c1:	pop    eax
  4195c2:	sub    esi,DWORD PTR [ecx-0x15]
  4195c5:	and    DWORD PTR [edi],eax
  4195c7:	js     0x4195ac
  4195c9:	cmp    ebp,DWORD PTR [edi]
  4195cb:	inc    edx
  4195cc:	jmp    0x10eb:0xe3631f2f
  4195d3:	ins    DWORD PTR es:[edi],dx
  4195d4:	loopne 0x4195ff
  4195d6:	jecxz  0x419628
  4195d8:	fsub   DWORD PTR [ecx]
  4195da:	pop    es
  4195db:	jne    0x4195b3
  4195dd:	or     eax,0x20090018
  4195e2:	and    al,0x74
  4195e4:	mul    DWORD PTR [ecx+0x20]
  4195e7:	jo     0x41958d
  4195e9:	cmp    esi,DWORD PTR [edx]
  4195eb:	ins    DWORD PTR es:[edi],dx
  4195ec:	cdq    
  4195ed:	not    DWORD PTR ds:0x2edea55f
  4195f3:	inc    edx
  4195f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4195f5:	or     DWORD PTR [edi],esp
  4195f7:	push   eax
  4195f8:	stos   DWORD PTR es:[edi],eax
  4195f9:	std    
  4195fa:	pop    es
  4195fb:	ins    BYTE PTR es:[edi],dx
  4195fc:	xchg   ebx,eax
  4195fd:	out    0x6,al
  4195ff:	and    BYTE PTR [edi+0x596d2ead],ah
  419605:	sbb    al,BYTE PTR [ebp+0x54]
  419608:	inc    edi
  419609:	(bad)  
  41960a:	aas    
  41960b:	pop    edi
  41960c:	dec    esi
  41960d:	mov    al,0x3
  41960f:	push   ecx
  419610:	dec    eax
  419611:	arpl   WORD PTR [edi+0x10],ax
  419614:	dec    edx
  419615:	ret    0x215b
  419618:	sub    esp,DWORD PTR [ebp-0x39acd7a6]
  41961e:	push   ecx
  41961f:	xor    al,0x0
	...
  419629:	add    BYTE PTR [eax],al
  41962b:	add    BYTE PTR [ebp-0x40],al
  41962e:	push   eax
  41962f:	push   ds
  419630:	xlat   BYTE PTR ds:[ebx]
  419631:	xchg   ebx,eax
  419632:	dec    eax
  419633:	push   ds
  419634:	and    edi,DWORD PTR [eax-0x70ebedb2]
  41963a:	sub    edx,DWORD PTR [ecx]
  41963c:	or     edi,DWORD PTR [edi-0x4ad8eff6]
  419642:	or     BYTE PTR [edi],ah
  419644:	adc    DWORD PTR [ebx-0x7cd8cfd9],eax
  41964a:	sub    al,0x28
  41964c:	adc    dh,al
  41964e:	movups xmm2,xmm3
  419651:	popf   
  419652:	push   cs
  419653:	sub    eax,0x271c62d9
  419658:	fnstenv [esi-0x3a1adb10]
  41965e:	rol    DWORD PTR [ecx-0x59],0xa8
  419662:	mov    cl,0x33
  419664:	stos   DWORD PTR es:[edi],eax
  419665:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419666:	fisub  DWORD PTR [edi]
  419668:	rol    ebp,cl
  41966a:	shl    ebx,1
  41966c:	test   al,0xb4
  41966e:	shl    BYTE PTR [esi],1
  419670:	cdq    
  419671:	sbb    BYTE PTR [edi-0x5f7138d1],0x13
  419678:	stos   DWORD PTR es:[edi],eax
  419679:	mov    ecx,0x62a625b8
  41967e:	mov    esp,0x90b69926
  419683:	and    al,0x85
  419685:	lds    esi,FWORD PTR [ecx+0x79be8441]
  41968b:	and    BYTE PTR [ebx+0x267b92],al
	...
  419699:	add    BYTE PTR [eax],al
  41969b:	add    BYTE PTR [edx-0x37],ah
  41969e:	int    0x32
  4196a0:	pop    edx
  4196a1:	leave  
  4196a2:	push   es
  4196a3:	jge    0x419696
  4196a5:	(bad)  
  4196a6:	je     0x41962c
  4196a8:	and    BYTE PTR [ebp-0x3be0aa8f],ah
  4196ae:	jb     0x4196e9
  4196b0:	in     eax,0xbd
  4196b2:	addr16 dec edi
  4196b4:	(bad)  [ebp-0x5d2cc6ae]
  4196ba:	push   0x50
  4196bc:	(bad)  
  4196bd:	shl    BYTE PTR [edx+0x1d],0x30
  4196c1:	mov    bl,0x72
  4196c3:	inc    eax
  4196c4:	fadd   st,st(0)
  4196c6:	jae    0x4196b1
  4196c8:	in     eax,0xbd
  4196ca:	pusha  
  4196cb:	sbb    eax,0x4749000
  4196d0:	iret   
  4196d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4196d2:	push   esi
  4196d3:	das    
  4196d4:	(bad)  
  4196d5:	xchg   edx,eax
  4196d6:	push   es
  4196d7:	sbb    eax,0x1a72b1d2
  4196dc:	push   ss
  4196dd:	mov    dl,0x73
  4196df:	adc    BYTE PTR [eax],dl
  4196e1:	rol    DWORD PTR [eax+0x0],0xf
  4196e5:	les    eax,FWORD PTR [esi]
  4196e7:	sbb    cl,BYTE PTR [edx]
  4196e9:	mov    bh,0x61
  4196eb:	ficom  DWORD PTR [eax]
  4196ed:	enter  0xe974,0xbb
  4196f1:	shl    BYTE PTR [ebx-0x23],0x1b
  4196f5:	mov    edi,0xb50ba56a
  4196fa:	xor    eax,0x69b71ae9
  4196ff:	int    0x0
	...
  419709:	add    BYTE PTR [eax],al
  41970b:	add    ah,dh
  41970d:	mov    ss,WORD PTR [ebx-0x3c]
  419710:	(bad)  [edx+esi*2+0x692c8a7]
  419717:	scas   eax,DWORD PTR es:[edi]
  419718:	fstp   TBYTE PTR [eax-0x49246499]
  41971e:	popa   
  41971f:	call   0x9af4:0x9565c31a
  419726:	ins    DWORD PTR es:[edi],dx
  419727:	add    BYTE PTR [ebp+0x5e],ch
  41972a:	imul   esi,DWORD PTR [edx+0x77],0x62616348
  419731:	bound  edx,QWORD PTR [edi+0x64]
  419734:	jb     0x41978a
  419736:	fs imul ebp,eax,0xffffff82
  41973a:	push   edi
  41973b:	je     0x41971b
  41973d:	push   ecx
  41973e:	jae    0x4197a9
  419740:	sub    eax,0x2f64287c
  419745:	push   ebx
  419746:	push   es
  419747:	pop    esp
  419748:	adc    bl,BYTE PTR [esi+0x74]
  41974b:	bound  edi,QWORD PTR [ecx]
  41974d:	ins    DWORD PTR es:[edi],dx
  41974e:	push   edx
  41974f:	push   eax
  419750:	mov    ?,WORD PTR [ebx+0x69]
  419753:	data16 loop 0x4197b5
  419756:	push   edi
  419757:	jb     0x41975c
  419759:	imul   edx,DWORD PTR [edx+0x75],0xffffffec
  41975d:	sub    BYTE PTR [ecx+0x46],0xc2
  419761:	jbe    0x419769
  419763:	imul   edi,DWORD PTR [eax+0x53],0x7b0a6172
  41976a:	jbe    0x4197cd
  41976c:	bound  edi,QWORD PTR [edx+0x6]
  41976f:	push   ebx
	...
  41977c:	stc    
  41977d:	dec    esp
  41977e:	jb     0x4197f7
  419780:	out    dx,eax
  419781:	push   eax
  419782:	arpl   WORD PTR [ebp+ecx*4-0x79],bx
  419786:	jb     0x4197e9
  419788:	mov    dh,BYTE PTR [eax+0x40]
  41978b:	inc    esi
  41978c:	xor    BYTE PTR [edx+0x6],0x43
  419790:	sbb    al,0x4d
  419792:	bound  esp,QWORD PTR [ebp+0x48]
  419795:	pop    esi
  419796:	pop    edi
  419797:	popa   
  419798:	cmp    dh,BYTE PTR [ebx+0x57]
  41979b:	ins    BYTE PTR es:[edi],dx
  41979c:	bound  esp,QWORD PTR [edx+0x45]
  41979f:	jb     0x4197d4
  4197a1:	dec    esi
  4197a2:	arpl   WORD PTR [esi+0x72],bp
  4197a5:	jns    0x4197fe
  4197a7:	ins    BYTE PTR es:[edi],dx
  4197a8:	pop    ebp
  4197a9:	jp     0x41980e
  4197ab:	arpl   di,si
  4197ad:	loopne 0x4197b1
  4197af:	push   ecx
  4197b0:	mov    ch,ah
  4197b2:	push   es
  4197b3:	jne    0x41980b
  4197b5:	stos   BYTE PTR es:[edi],al
  4197b6:	sbb    BYTE PTR [esp+eax*2-0x23],bl
  4197ba:	push   es
  4197bb:	pop    edi
  4197bc:	inc    ebx
  4197bd:	(bad)  
  4197be:	cmp    BYTE PTR [esi+0x43],al
  4197c1:	int3   
  4197c2:	cs dec ebp
  4197c4:	inc    edi
  4197c5:	nop
  4197c6:	sub    ebp,DWORD PTR [ebp+0x59]
  4197c9:	mov    DWORD PTR [edx],eax
  4197cb:	push   eax
  4197cc:	push   esi
  4197cd:	mov    DWORD PTR ds:0x268a4875,edx
  4197d3:	add    BYTE PTR [edx+0x69],cl
  4197d6:	pop    ss
  4197d7:	jb     0x419812
  4197d9:	fwait
  4197da:	pop    ds
  4197db:	arpl   di,si
  4197dd:	and    DWORD PTR [ecx],0x71
	...
  4197ec:	and    edi,DWORD PTR [ebx+0x26]
  4197ef:	jb     0x4197f5
  4197f1:	cmp    al,0x35
  4197f3:	arpl   WORD PTR [edx],bx
  4197f5:	pop    ebp
  4197f6:	push   ss
  4197f7:	arpl   WORD PTR [ebx],di
  4197f9:	arpl   WORD PTR [eax+eax*1],dx
  4197fc:	daa    
  4197fd:	sub    eax,0x73f77415
  419802:	and    DWORD PTR [ecx-0x1d],esi
  419805:	jge    0x41982a
  419807:	imul   ebx,edx,0x3b
  41980a:	xor    ebp,DWORD PTR [ebp-0x1b]
  41980d:	aaa    
  41980e:	add    edx,DWORD PTR [ebx-0x3c]
  419811:	push   ds
  419812:	adc    eax,0x181ed66e
  419817:	add    BYTE PTR [edi-0x3f8ee9e6],ah
  41981d:	in     al,dx
  41981e:	adc    al,0x64
  419820:	div    ebx
  419822:	and    DWORD PTR [ecx-0x5d],esi
  419825:	pop    es
  419826:	sub    al,0x72
  419828:	mov    cl,0x1a
  41982a:	and    BYTE PTR [ebx-0x9],ah
  41982d:	enter  0x6621,0x8b
  419831:	bound  ebx,QWORD PTR [eax-0x46387ade]
  419837:	inc    eax
  419838:	xchg   edx,eax
  419839:	les    eax,FWORD PTR [edi-0x6d5e6be2]
  41983f:	adc    edx,DWORD PTR [edi]
  419841:	nop
  419842:	nop
  419843:	sbb    eax,0x118eb463
  419848:	push   esp
  419849:	(bad)  
  41984a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41984b:	and    eax,0x257bc663
	...
  41985c:	push   esp
  41985d:	mov    bh,0x41
  41985f:	xor    al,0x45
  419861:	mov    esp,0xc6531d3f
  419866:	pop    esp
  419867:	add    al,0x26
  419869:	mov    esp,0xc22a183f
  41986e:	cmp    ebp,DWORD PTR [ecx]
  419870:	dec    ebx
  419871:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419872:	adc    DWORD PTR [edx+ecx*2],esi
  419875:	ret    0x293b
  419878:	cmp    esp,DWORD PTR [eax-0x5acbc9e8]
  41987e:	cmp    DWORD PTR [ebx+ebp*1],esi
  419881:	nop
  419882:	push   ss
  419883:	sbb    BYTE PTR [eax+esi*4],dl
  419886:	in     eax,dx
  419887:	cmp    ecx,DWORD PTR [edx]
  419889:	mov    al,0x11
  41988b:	add    al,0xc4
  41988d:	scas   eax,DWORD PTR es:[edi]
  41988e:	or     dl,BYTE PTR [esi]
  419890:	not    DWORD PTR [edx+0x62eb1608]
  419896:	sbb    eax,0xf192f73b
  41989b:	sbb    esp,DWORD PTR [ebp-0x40c9439e]
  4198a1:	(bad)  
  4198a2:	fst    QWORD PTR ds:0x1fc6c4d2
  4198a8:	aam    0xaf
  4198aa:	test   DWORD PTR [ebx],0x2fedbe9c
  4198b0:	mov    cl,0x96
  4198b2:	popf   
  4198b3:	jecxz  0x41986a
  4198b5:	stos   BYTE PTR es:[edi],al
  4198b6:	push   es
  4198b7:	mov    ecx,0xc474bdf8
  4198bc:	jmp    0x0:0x965362
	...
  4198cb:	add    dh,bl
  4198cd:	mov    dh,0x6f
  4198cf:	mov    dl,ch
  4198d1:	mov    edi,0x92c0af5a
  4198d6:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  4198d8:	cld    
  4198d9:	mov    dl,0x6a
  4198db:	xchg   esi,eax
  4198dc:	add    al,al
  4198de:	je     0x41987d
  4198e0:	cs xchg edi,eax
  4198e2:	push   esi
  4198e3:	leave  
  4198e4:	das    
  4198e5:	stos   DWORD PTR es:[edi],eax
  4198e6:	jbe    0x419965
  4198e8:	adc    eax,0x75b61b1
  4198ed:	xchg   esi,eax
  4198ee:	addr16 pop ebx
  4198f0:	loopne 0x4198a3
  4198f2:	jbe    0x41993c
  4198f4:	adc    al,al
  4198f6:	pop    edx
  4198f7:	sbb    al,0x3d
  4198f9:	mov    ds:0xbed45652,al
  4198fe:	inc    esp
  4198ff:	dec    eax
  419900:	or     DWORD PTR [eax+0x34],edi
  419903:	sti    
  419904:	shr    BYTE PTR [ebx],0x45
  419907:	xor    al,0xef
  419909:	mov    dh,0x67
  41990b:	pop    ss
  41990c:	loopne 0x419970
  41990e:	push   ebx
  41990f:	push   cs
  419910:	int    0xb6
  419912:	outs   dx,DWORD PTR ds:[esi]
  419913:	or     cl,ah
  419915:	mov    edi,0x932f275a
  41991a:	es sub al,0xfb
  41991d:	mov    dl,0x6a
  41991f:	push   cs
  419920:	or     eax,eax
  419922:	je     0x419939
  419924:	and    esi,DWORD PTR [ecx-0x410df899]
  41992a:	popa   
  41992b:	(bad)  
  41992d:	xchg   edx,eax
  41992e:	fiadd  DWORD PTR gs:[eax]
	...
  419939:	add    BYTE PTR [eax],al
  41993b:	add    cl,ch
  41993d:	mov    ch,0x67
  41993f:	fist   DWORD PTR [eax]
  419941:	arpl   WORD PTR [esi-0x38],dx
  419944:	or     DWORD PTR [edx+0x5541006f],esi
  41994a:	bound  edx,QWORD PTR [edi+esi*1+0x4f]
  41994e:	arpl   WORD PTR [eax],ax
  419950:	push   esi
  419951:	xor    BYTE PTR [ebp+0x74],0x1e
  419955:	imul   ebp,DWORD PTR [ecx+0x67],0x67
  419959:	add    DWORD PTR [esi],0x72557150
  41995f:	add    BYTE PTR [edi-0x7f],dl
  419962:	pop    edi
  419963:	je     0x4199dc
  419965:	jg     0x4199d1
  419967:	push   eax
  419968:	jg     0x4199bc
  41996a:	outs   dx,BYTE PTR ds:[esi]
  41996b:	add    BYTE PTR [eax+0x77537652],bl
  419971:	push   edx
  419972:	arpl   WORD PTR [esi],bp
  419974:	inc    esi
  419975:	sub    DWORD PTR [edx+0x0],0x32
  419979:	popf   
  41997a:	je     0x4199e5
  41997c:	cmp    DWORD PTR [esi+0x5edd6572],eax
  419982:	sub    BYTE PTR [ecx-0x10],ch
  419985:	dec    ebp
  419986:	push   es
  419987:	pop    esp
  419988:	or     BYTE PTR [esi+0x48374468],al
  41998e:	arpl   WORD PTR [ebp+ecx*8-0x7d],bx
  419992:	push   0x5a7c3766
  419997:	push   ebx
  419998:	sti    
  419999:	dec    edi
  41999a:	jne    0x419a05
  41999c:	icebp  
  41999d:	test   BYTE PTR [ebp+0x0],dh
	...
  4199ac:	ret    0x636f
  4199af:	jae    0x4199be
  4199b1:	dec    esi
  4199b2:	imul   ebp,DWORD PTR [esi+0x6d],0xf86f5566
  4199b9:	dec    edx
  4199ba:	jno    0x419a1d
  4199bc:	pop    esp
  4199bd:	sbb    DWORD PTR [edx+0x56],0x794284ff
  4199c4:	and    eax,0x3b535a81
  4199c9:	jg     0x419a3e
  4199cb:	jb     0x4199c4
  4199cd:	push   ss
  4199ce:	dec    ebp
  4199cf:	pop    eax
  4199d0:	idiv   esp
  4199d2:	and    eax,0x2e12916e
  4199d7:	and    bh,al
  4199d9:	sbb    cl,BYTE PTR [edi]
  4199db:	push   0x7416c6f7
  4199e0:	test   DWORD PTR [edx],ebx
  4199e2:	dec    ebp
  4199e3:	pop    eax
  4199e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4199e5:	cmp    esp,DWORD PTR [edi]
  4199e7:	jno    0x419977
  4199e9:	iret   
  4199ea:	pop    ds
  4199eb:	jno    0x4199b6
  4199ed:	rcl    DWORD PTR [edi],cl
  4199ef:	ins    BYTE PTR es:[edi],dx
  4199f0:	div    edi
  4199f2:	dec    esp
  4199f3:	push   esp
  4199f4:	inc    edi
  4199f5:	into   
  4199f6:	(bad)  
  4199f8:	dec    edi
  4199f9:	cmp    al,0x31
  4199fb:	jae    0x419a61
  4199fd:	in     al,0x31
  4199ff:	addr16 dec ebx
  419a01:	(bad)  
  419a03:	ja     0x419a5f
  419a05:	nop
  419a06:	add    dl,BYTE PTR [ecx+0x5a]
  419a09:	mov    ds,WORD PTR [ebx+eiz*2]
  419a0c:	inc    ebp
  419a0d:	cmp    al,0x30
  419a0f:	jno    0x419a11
	...
  419a19:	add    BYTE PTR [eax],al
  419a1b:	add    BYTE PTR [edx],bl
  419a1d:	mov    fs,WORD PTR [edi+ebx*2]
  419a20:	sbb    dl,BYTE PTR [edi+0x6d165002]
  419a26:	adc    DWORD PTR [ebp+0x8],esi
  419a29:	outs   dx,BYTE PTR ds:[esi]
  419a2a:	add    BYTE PTR cs:[ecx],bh
  419a2d:	jo     0x419a41
  419a2f:	push   eax
  419a30:	sbb    BYTE PTR [esi+0x1e],cl
  419a33:	add    BYTE PTR [ecx+ebx*2],ah
  419a36:	sub    al,0x74
  419a38:	add    BYTE PTR [ebx+0x10],bl
  419a3b:	arpl   bx,dx
  419a3d:	jl     0x419a4f
  419a3f:	ja     0x419a13
  419a41:	sub    eax,0x5dda5527
  419a46:	xor    DWORD PTR [edi-0x1d],esp
  419a49:	push   esi
  419a4a:	xor    dh,BYTE PTR [ebx-0x2b]
  419a4d:	daa    
  419a4e:	sbb    al,0x71
  419a50:	fbld   TBYTE PTR [edx-0x36]
  419a53:	adc    eax,0x1aab86f7
  419a58:	ret    
  419a59:	popf   
  419a5a:	(bad)  
  419a5b:	and    DWORD PTR [edx+ebp*4-0x516fda13],edx
  419a62:	aam    0x1a
  419a64:	xchg   ecx,eax
  419a65:	mov    edi,0xb594e1c5
  419a6a:	in     eax,dx
  419a6b:	cmp    esp,DWORD PTR [edx-0x57de4e4b]
  419a71:	mov    bh,0x8a
  419a73:	add    esp,DWORD PTR [ebp+esi*4-0x3c76ea7e]
  419a7a:	and    BYTE PTR [esi],0xf7
  419a7d:	xchg   edx,eax
  419a7e:	mov    ss,WORD PTR [eax+eax*1]
	...
  419a89:	add    BYTE PTR [eax],al
  419a8b:	add    BYTE PTR [esi-0x50],ah
  419a8e:	nop
  419a8f:	adc    eax,0x209d635b
  419a94:	gs scas eax,DWORD PTR es:[edi]
  419a96:	in     eax,dx
  419a97:	xor    al,0x62
  419a99:	shl    DWORD PTR [ecx+0x18],0x28
  419a9d:	mov    ch,0x4a
  419a9f:	xor    BYTE PTR [ebx+ebp*4],dh
  419aa2:	pop    ebp
  419aa3:	and    eax,0x1d5b9f49
  419aa8:	sub    DWORD PTR [esi-0x4bebccd7],edi
  419aae:	cmp    al,0x1d
  419ab0:	adc    bh,BYTE PTR [ecx-0x61c4fbc4]
  419ab6:	xor    eax,0x21b93014
  419abb:	adc    dl,BYTE PTR [eax]
  419abd:	mov    cl,0xa
  419abf:	add    al,0x23
  419ac1:	mov    edi,0xbe011d1b
  419ac6:	sbb    al,0xde
  419ac8:	fidiv  WORD PTR [ebx-0x3e271e13]
  419ace:	cld    
  419acf:	adc    ch,dl
  419ad1:	mov    bh,0xfb
  419ad3:	daa    
  419ad4:	adc    eax,0x54b30683
  419ad9:	add    BYTE PTR [esi],0xcb
  419adc:	sub    BYTE PTR [eax],ch
  419ade:	push   esp
  419adf:	(bad)  
  419ae0:	sbb    ch,BYTE PTR [edi-0x3c193791]
  419ae6:	pop    edx
  419ae7:	lods   al,BYTE PTR ds:[esi]
  419ae8:	cld    
  419ae9:	mov    dl,0x65
  419aeb:	mov    edi,0xbf6db4b0
	...
  419afc:	iret   
  419afd:	bound  eax,QWORD PTR [ecx-0x3f]
  419b00:	add    al,0x88
  419b02:	push   0x70bfe6ad
  419b07:	(bad)  
  419b08:	fstp   DWORD PTR [edx+0x62cf9467]
  419b0e:	push   ebx
  419b0f:	test   dh,ah
  419b11:	mov    al,0x61
  419b13:	fwait
  419b14:	hlt    
  419b15:	xchg   ebx,eax
  419b16:	jae    0x419a9c
  419b18:	push   es
  419b19:	cdq    
  419b1a:	gs xchg esp,eax
  419b1c:	packsswb mm2,QWORD PTR [esi-0x78]
  419b20:	add    eax,0xe6866fb2
  419b25:	mov    esi,0x88048e06
  419b2a:	jae    0x419b86
  419b2c:	call   0xf3870fe6
  419b31:	sahf   
  419b32:	ins    DWORD PTR es:[edi],dx
  419b33:	pop    ebx
  419b34:	faddp  st(1),st
  419b36:	jb     0x419b76
  419b38:	add    eax,0x1a06b0
  419b3d:	shl    DWORD PTR [edx+0x36],0xd2
  419b41:	mov    ah,0x61
  419b43:	adc    eax,0x94ea1d1
  419b48:	les    esi,FWORD PTR [ebp-0x7817e2a0]
  419b4e:	je     0x419b54
  419b50:	(bad)  
  419b51:	mov    eax,ds:0xb204086a
  419b56:	ins    DWORD PTR es:[edi],dx
  419b57:	or     dh,BYTE PTR [ecx+0x1a00568e]
  419b5d:	mov    eax,ds:0x5052
	...
  419b6a:	add    BYTE PTR [eax],al
  419b6c:	je     0x45950ad7
  419b72:	jb     0x419be7
  419b74:	pop    esi
  419b75:	popf   
  419b76:	jb     0x419be8
  419b78:	jge    0x419bf4
  419b7a:	je     0x419bf2
  419b7c:	xor    edx,DWORD PTR [ecx+0x6]
  419b7f:	inc    esi
  419b80:	push   edx
  419b81:	push   ebx
  419b82:	push   ebx
  419b83:	jae    0x419bb8
  419b85:	push   ecx
  419b86:	dec    eax
  419b87:	popa   
  419b88:	dec    ebx
  419b89:	jp     0x419b91
  419b8b:	inc    esi
  419b8c:	bound  edx,QWORD PTR [ebx+0x56]
  419b8f:	popa   
  419b90:	dec    ebp
  419b91:	push   esp
  419b92:	jno    0x419c03
  419b94:	dec    esp
  419b95:	jg     0x419b9d
  419b97:	pop    edi
  419b98:	push   eax
  419b99:	dec    edi
  419b9a:	jbe    0x419bec
  419b9c:	outs   dx,DWORD PTR ds:[esi]
  419b9d:	push   esp
  419b9e:	jne    0x419c17
  419ba0:	jns    0x419bf6
  419ba2:	bound  eax,QWORD PTR [eax]
  419ba4:	nop
  419ba5:	dec    esi
  419ba6:	jbe    0x419bec
  419ba8:	xchg   DWORD PTR [ebx+eiz*2+0x63],edx
  419bac:	bound  eax,QWORD PTR [ebp+0x74]
  419baf:	jns    0x419b8f
  419bb1:	jno    0x419bfc
  419bb3:	inc    esi
  419bb4:	bound  ebp,QWORD PTR [ebp+0x37]
  419bb7:	push   edx
  419bb8:	adc    esi,DWORD PTR [ebx+0x48]
  419bbb:	inc    ebx
  419bbc:	push   es
  419bbd:	aas    
  419bbe:	push   esi
  419bbf:	outs   dx,DWORD PTR ds:[esi]
  419bc0:	inc    eax
  419bc1:	dec    ebx
  419bc2:	jno    0x419c25
  419bc4:	dec    esp
  419bc5:	jle    0x419c21
  419bc7:	inc    esi
  419bc8:	dec    edx
  419bc9:	dec    edx
  419bca:	push   0x65a1fa67
  419bcf:	arpl   WORD PTR [eax],ax
	...
  419bd9:	add    BYTE PTR [eax],al
  419bdb:	add    BYTE PTR [ecx],bh
  419bdd:	dec    esi
  419bde:	push   0x555ecd74
  419be3:	outs   dx,DWORD PTR ds:[esi]
  419be4:	lock dec edx
  419be6:	jno    0x419c49
  419be8:	fdivr  QWORD PTR [ebp+0x5a]
  419beb:	inc    esi
  419bec:	mul    DWORD PTR [edi+0x32]
  419bef:	inc    ecx
  419bf0:	(bad)  [edx+0x1f]
  419bf3:	outs   dx,BYTE PTR ds:[esi]
  419bf4:	jmp    0x419c75
  419bf6:	xor    eax,0x155ee367
  419bfb:	add    BYTE PTR [esp+ebx*2+0x5ac07420],ah
  419c02:	adc    al,0x63
  419c04:	mov    ds:0xc36619e8,eax
  419c09:	and    ebx,ecx
  419c0b:	ins    BYTE PTR es:[edi],dx
  419c0c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419c0d:	adc    al,0x27
  419c0f:	inc    esi
  419c10:	ret    
  419c11:	jmp    0x419c58
  419c13:	ins    BYTE PTR es:[edi],dx
  419c14:	mov    ss,WORD PTR [esi]
  419c16:	sbb    DWORD PTR [ebx+edi*4-0x38],esi
  419c1a:	sbb    esi,DWORD PTR [edx+ebx*4-0x18]
  419c1e:	add    ch,BYTE PTR [esi]
  419c20:	cwde   
  419c21:	repz and eax,0x16ccd100
  419c27:	ins    BYTE PTR es:[edi],dx
  419c28:	neg    ebp
  419c2a:	push   cs
  419c2b:	jo     0x419c90
  419c2d:	fist   DWORD PTR ds:0x16a51974
  419c33:	fs idiv edi
  419c36:	inc    ecx
  419c37:	push   eax
  419c38:	inc    esp
  419c39:	aad    0x20
  419c3b:	je     0x419c85
  419c3d:	fist   DWORD PTR [ebx+eiz*2]
	...
  419c4c:	sub    eax,DWORD PTR [eax]
  419c4e:	sbb    al,0x72
  419c50:	pop    edx
  419c51:	cdq    
  419c52:	push   ds
  419c53:	ins    DWORD PTR es:[edi],dx
  419c54:	inc    ebp
  419c55:	ret    
  419c56:	loop   0x419ca4
  419c58:	daa    
  419c59:	xchg   DWORD PTR ds:0x1a694b00,edx
  419c5f:	pop    edi
  419c60:	and    eax,0x12512e97
  419c65:	jo     0x419c85
  419c67:	and    DWORD PTR [di+0x2e15],edx
  419c6c:	adc    al,0x99
  419c6e:	adc    eax,0x3c632300
  419c73:	sbb    al,0x18
  419c75:	mov    cl,0x2
  419c77:	sub    dh,al
  419c79:	mov    edi,0xb4d01819
  419c7e:	add    BYTE PTR [ecx],dl
  419c80:	ret    0x2073
  419c83:	aam    0xbb
  419c85:	outs   dx,DWORD PTR ds:[esi]
  419c86:	(bad)  
  419c87:	and    dh,dl
  419c89:	mov    cl,0xed
  419c8b:	das    
  419c8c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419c8d:	mov    edx,0xbed4120e
  419c92:	mov    esp,0xd6aec326
  419c97:	sbb    eax,0x10ffb19a
  419c9c:	cwde   
  419c9d:	mov    dh,0xc6
  419c9f:	pop    ss
  419ca0:	xchg   esp,eax
  419ca1:	bound  esp,QWORD PTR [ecx-0x443c70d0]
  419ca7:	es fwait
  419ca9:	xchg   ecx,eax
  419caa:	retf   0x8317
  419cad:	mov    ebx,0x24b7
	...
  419cba:	add    BYTE PTR [eax],al
  419cbc:	xchg   BYTE PTR [ebp-0x7a38d322],al
  419cc2:	rcr    ch,cl
  419cc4:	addr16 mov dl,0x81
  419cc7:	sbb    ah,BYTE PTR [ebx-0x42]
  419cca:	in     eax,dx
  419ccb:	das    
  419ccc:	ss mov ah,0x87
  419ccf:	and    eax,0x16acbe54
  419cd4:	inc    edi
  419cd5:	sbb    DWORD PTR [esp+ebx*1+0x2270af51],0x45
  419cdd:	mov    esi,0xc25417ed
  419ce2:	pop    ebp
  419ce3:	and    ch,BYTE PTR [ebx]
  419ce5:	mov    bl,0xed
  419ce7:	adc    BYTE PTR [ecx],bl
  419ce9:	mov    bh,0x42
  419ceb:	and    eax,0xc4a7527
  419cf0:	adc    al,0x63
  419cf2:	cmp    al,0x1d
  419cf4:	or     edi,DWORD PTR [esi-0x3f52c5fa]
  419cfa:	gs xor eax,0x1d6db1fb
  419d00:	(bad)  
  419d01:	mov    cl,0x28
  419d03:	adc    BYTE PTR ds:0x2f3506bc,cl
  419d09:	shl    BYTE PTR [ebp+0x19],0x24
  419d0d:	test   BYTE PTR [esp+ecx*1+0xf],dh
  419d11:	xchg   edi,eax
  419d12:	popa   
  419d13:	or     bl,ch
  419d15:	pushf  
  419d16:	push   edx
  419d17:	sbb    ebx,esi
  419d19:	xchg   ecx,eax
  419d1a:	inc    edi
  419d1b:	daa    
  419d1c:	pop    es
  419d1d:	mov    es,WORD PTR [ebp-0x45]
	...
  419d2c:	mov    bh,0x86
  419d2e:	dec    edx
  419d2f:	(bad)  
  419d30:	(bad)  [edx-0x3ffd37b1]
  419d36:	push   es
  419d37:	mov    al,ds:0xc872b1fe
  419d3c:	add    BYTE PTR [edi-0x44ff37aa],dh
  419d42:	push   es
  419d43:	lods   eax,DWORD PTR ds:[esi]
  419d44:	shr    DWORD PTR [esi-0x4f1c5a9b],cl
  419d4a:	push   es
  419d4b:	mov    ecx,0x9673b1d3
  419d50:	or     eax,0x2ce962b1
  419d55:	mov    dh,0x73
  419d57:	xchg   ebp,eax
  419d58:	push   ds
  419d59:	test   BYTE PTR [ecx-0x74],ch
  419d5c:	hlt    
  419d5d:	(bad)  
  419d5e:	jae    0x419ce4
  419d60:	jmp    0x5463:0x17846594
  419d67:	test   bh,bl
  419d69:	mov    ch,0x72
  419d6b:	dec    esp
  419d6c:	aaa    
  419d6d:	mov    esp,0xaed84474
  419d72:	addr16 pop ebx
  419d74:	cli    
  419d75:	bound  edx,QWORD PTR [esi+0x3e]
  419d78:	or     DWORD PTR [edi+0x49db0048],ebp
  419d7e:	fs gs int3 
  419d81:	pop    esi
  419d82:	inc    eax
  419d83:	push   ebx
  419d84:	out    dx,al
  419d85:	dec    esp
  419d86:	imul   esi,DWORD PTR [ecx+eax*8+0x7b],0x6c8e6c69
  419d8e:	imul   esp,DWORD PTR [esi+0x0],0x0
  419d95:	add    BYTE PTR [eax],al
  419d97:	add    BYTE PTR [eax],al
  419d99:	add    BYTE PTR [eax],al
  419d9b:	add    BYTE PTR [edx],cl
  419d9d:	push   eax
  419d9e:	push   edi
  419d9f:	jb     0x419d9c
  419da1:	jp     0x419dee
  419da3:	popa   
  419da4:	cld    
  419da5:	push   edx
  419da6:	pop    edi
  419da7:	outs   dx,BYTE PTR ds:[esi]
  419da8:	outs   dx,DWORD PTR cs:[esi]
  419daa:	je     0x419e15
  419dac:	in     eax,0x4c
  419dae:	outs   dx,DWORD PTR ds:[esi]
  419daf:	ins    BYTE PTR es:[edi],dx
  419db0:	pop    esi
  419db1:	jnp    0x419de8
  419db3:	xor    cl,BYTE PTR [esi+eax*2]
  419db6:	jb     0x419dfe
  419db8:	sbb    cl,BYTE PTR [edi+0x28]
  419dbb:	imul   eax,DWORD PTR [eax+0x46],0x6c5a4e06
  419dc2:	pop    edi
  419dc3:	je     0x419e00
  419dc5:	dec    esp
  419dc6:	sub    BYTE PTR [ecx+0x40],ch
  419dc9:	inc    esi
  419dca:	push   es
  419dcb:	pop    esp
  419dcc:	pusha  
  419dcd:	xor    BYTE PTR [edx+0x44],0x4c
  419dd1:	inc    esi
  419dd2:	jo     0x419e39
  419dd4:	push   cs
  419dd5:	outs   dx,DWORD PTR ds:[esi]
  419dd6:	push   edi
  419dd7:	jae    0x419e36
  419dd9:	jo     0x419e44
  419ddb:	jb     0x419e57
  419ddd:	push   bx
  419ddf:	jb     0x419e53
  419de1:	push   bx
  419de3:	jae    0x419e60
  419de5:	js     0x419e2f
  419de7:	popa   
  419de8:	add    DWORD PTR [ebx+0x6],0x52
  419dec:	cmp    DWORD PTR [ebp+0x72],0x63787744
  419df3:	arpl   WORD PTR [edx+0x7d],cx
  419df6:	je     0x419e71
  419df8:	into   
  419df9:	push   esi
  419dfa:	imul   esi,DWORD PTR [edx+0x4a],0x6f5567
	...
  419e09:	add    BYTE PTR [eax],al
  419e0b:	add    bh,dh
  419e0d:	mov    cl,0x16
  419e0f:	jne    0x419e27
  419e11:	mov    esi,0xb9445c17
  419e16:	pop    es
  419e17:	je     0x419e38
  419e19:	ins    BYTE PTR es:[edi],dx
  419e1a:	xor    BYTE PTR [edi+0x1],ah
  419e1d:	scas   eax,DWORD PTR es:[edi]
  419e1e:	adc    BYTE PTR [eax],ah
  419e20:	sub    esp,DWORD PTR [edi+0x79096821]
  419e26:	push   ds
  419e27:	ins    DWORD PTR es:[edi],dx
  419e28:	fdiv   DWORD PTR [edx+0x17]
  419e2b:	jno    0x419df8
  419e2d:	pusha  
  419e2e:	pop    ss
  419e2f:	bound  edi,QWORD PTR [ebx-0x2d89e483]
  419e35:	inc    edi
  419e36:	inc    ecx
  419e37:	ins    DWORD PTR es:[edi],dx
  419e38:	loope  0x419eab
  419e3a:	pop    ss
  419e3b:	popa   
  419e3c:	ret    
  419e3d:	bound  ebx,QWORD PTR ds:0x320bc46e
  419e43:	arpl   bp,ax
  419e45:	inc    ecx
  419e46:	sbb    BYTE PTR [edx-0x35],dh
  419e49:	add    dl,BYTE PTR [ebx]
  419e4b:	arpl   di,si
  419e4d:	shl    DWORD PTR [esi],1
  419e4f:	push   eax
  419e50:	xlat   BYTE PTR ds:[ebx]
  419e51:	int3   
  419e52:	cmp    eax,0x3dfdc34e
  419e57:	dec    esp
  419e58:	test   ecx,0xc8b45026
  419e5e:	cmp    al,0x0
  419e60:	rcr    ebx,1
  419e62:	adc    BYTE PTR [esi-0x9],ah
  419e65:	daa    
  419e66:	xor    esi,DWORD PTR [edx+0x60]
  419e69:	jmp    0x8102:0xfd526c1b
	...
  419e7c:	bound  esi,QWORD PTR [eax-0x3]
  419e7f:	lea    esp,[ebx+esi*2+0x20a0711b]
  419e86:	sbb    esi,DWORD PTR [ebx+eax*2-0x64]
  419e8a:	leave  
  419e8b:	sub    al,0x10
  419e8d:	or     al,0x1b
  419e8f:	je     0x419ed4
  419e91:	arpl   WORD PTR [ebp+0x15],bx
  419e94:	in     eax,dx
  419e95:	push   ecx
  419e96:	or     BYTE PTR [ecx+edx*1],al
  419e99:	xchg   edi,eax
  419e9a:	pop    ebp
  419e9b:	into   
  419e9c:	rcl    DWORD PTR [ecx-0x13],cl
  419e9f:	sbb    BYTE PTR [edi],ah
  419ea1:	mov    BYTE PTR [ebx],bh
  419ea3:	and    esi,edi
  419ea5:	cdq    
  419ea6:	dec    esi
  419ea7:	sbb    dl,BYTE PTR [ebx]
  419ea9:	push   ecx
  419eaa:	dec    ecx
  419eab:	and    ecx,DWORD PTR [ebx]
  419ead:	arpl   WORD PTR [eax],cx
  419eaf:	xor    eax,0x1119890a
  419eb4:	rcl    BYTE PTR [edx+eax*1+0xa92ba28],1
  419ebb:	push   ss
  419ebc:	rol    BYTE PTR [edx+0x3c],0x19
  419ec0:	rcl    DWORD PTR [esi-0x783add08],1
  419ec6:	in     eax,dx
  419ec7:	aaa    
  419ec8:	test   al,0x95
  419eca:	stc    
  419ecb:	jecxz  0x419e81
  419ecd:	mov    edi,ebx
  419ecf:	push   ds
  419ed0:	(bad)  
  419ed1:	xchg   esi,eax
  419ed2:	rcl    BYTE PTR ds:0x37ed55a8,1
  419ed8:	enter  0xd995,0xe3
  419edc:	mov    ecx,0xfdc90
	...
  419ee9:	add    BYTE PTR [eax],al
  419eeb:	add    BYTE PTR [eax-0x3f1c2e72],bh
  419ef1:	xor    DWORD PTR [ecx-0x424e08e5],0x1e
  419ef8:	test   DWORD PTR [ebx-0x505cc409],eax
  419efe:	mov    cl,0x27
  419f00:	mov    ax,WORD PTR [edx-0x7f40a4e9]
  419f07:	adc    edx,DWORD PTR [ecx+edx*4-0x57]
  419f0b:	and    al,0x4a
  419f0d:	mov    ss,WORD PTR [edx-0x12789ede]
  419f13:	adc    BYTE PTR [eax-0x6c],dl
  419f16:	push   es
  419f17:	mov    WORD PTR [esi],ss
  419f19:	xchg   edi,eax
  419f1a:	jbe    0x419f96
  419f1c:	loop   0x419eb6
  419f1e:	jae    0x419f37
  419f20:	aad    0x87
  419f22:	push   0x635fd0e9
  419f27:	dec    esp
  419f28:	xor    eax,0xe5e952a8
  419f2d:	lea    esp,[eax+0x3d]
  419f30:	add    al,al
  419f32:	je     0x419f78
  419f34:	fistp  WORD PTR [edi+0x63]
  419f37:	dec    esp
  419f38:	xor    eax,0xbfe952a8
  419f3d:	mov    ah,0x51
  419f3f:	jmp    0x35824d69
  419f44:	sbb    BYTE PTR [eax+0x54],ah
  419f47:	sub    al,0xf
  419f49:	mov    ds:0x9204086a,al
  419f4e:	popa   
  419f4f:	cli    
	...
  419f5c:	sbb    BYTE PTR [edi-0x50e80683],dh
  419f62:	ins    DWORD PTR es:[edi],dx
  419f63:	or     ecx,DWORD PTR [edi]
  419f65:	call   0xaa34:0xa6222b43
  419f6c:	inc    esp
  419f6d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419f6e:	sub    DWORD PTR [ecx],esp
  419f70:	inc    ebx
  419f71:	pop    ecx
  419f72:	xor    al,BYTE PTR [edi+eax*2]
  419f75:	popa   
  419f76:	inc    ebp
  419f77:	stos   BYTE PTR es:[edi],al
  419f78:	aas    
  419f79:	mov    ds:0x4d27af43,al
  419f7e:	xor    bh,al
  419f80:	mov    bl,0x58
  419f82:	xor    ch,BYTE PTR [esi+eiz*1+0x29f64057]
  419f89:	push   edi
  419f8a:	jns    0x419f75
  419f8c:	and    eax,0x19b540ae
  419f91:	pusha  
  419f92:	push   esp
  419f93:	lods   al,BYTE PTR ds:[esi]
  419f94:	sbb    BYTE PTR [edx-0x6dfa7796],ah
  419f9a:	popa   
  419f9b:	add    BYTE PTR [ebp+0x48],cl
  419f9e:	push   edx
  419f9f:	jns    0x419fef
  419fa1:	inc    ebx
  419fa2:	dec    edx
  419fa3:	imul   ebp,DWORD PTR [edi+eax*2+0x7d],0x33a69339
  419fab:	xor    eax,0x2d303513
  419fb0:	shl    DWORD PTR ds:0x32fb3235,cl
  419fb6:	xor    dh,BYTE PTR ds:0x43453a01
  419fbc:	xchg   ecx,eax
  419fbd:	cs sub al,0x45
	...
  419fcc:	sub    BYTE PTR [ebx],0x35
  419fcf:	xor    eax,0x37272ed0
  419fd4:	jge    0x41a007
  419fd6:	inc    esi
  419fd7:	jge    0x41a037
  419fd9:	jo     0x41a03a
  419fdb:	jae    0x419fd0
  419fdd:	xor    BYTE PTR [edx+0x70],0xfd
  419fe1:	je     0x41a053
  419fe3:	jae    0x419f7d
  419fe5:	jle    0x41a04f
  419fe7:	imul   ebx,DWORD PTR [esi+0x70],0x80f3735f
  419fee:	jb     0x41a060
  419ff0:	cmp    BYTE PTR [esi+0x68],bh
  419ff3:	imul   ecx,DWORD PTR [esi+0x5d],0x78705052
  419ffa:	outs   dx,DWORD PTR ds:[esi]
  419ffb:	popa   
  419ffc:	xor    DWORD PTR [edx+0x74],eax
  419fff:	xor    BYTE PTR cs:[edi+0x76],ch
  41a003:	add    BYTE PTR [eax+0x4f],dl
  41a006:	push   esi
  41a007:	push   esi
  41a008:	sub    DWORD PTR [esi+0x57],ebp
  41a00b:	xor    esi,DWORD PTR [bx+di+0x28]
  41a00f:	jno    0x41a03e
  41a011:	arpl   WORD PTR [edx+0x52],bx
  41a014:	ss jle 0x41a07f
  41a017:	outs   dx,DWORD PTR ds:[esi]
  41a018:	lods   eax,DWORD PTR ds:[esi]
  41a019:	jne    0x41a07b
  41a01b:	je     0x419fd5
  41a01d:	inc    ecx
  41a01e:	imul   ebp,DWORD PTR [ebp-0x9],0x6471110b
  41a025:	cmp    ecx,edx
  41a027:	arpl   WORD PTR [ebx-0x8],sp
  41a02a:	add    cl,BYTE PTR [esi+0x24]
  41a02d:	stc    
  41a02e:	pop    ds
  41a02f:	inc    edi
	...
  41a03c:	push   ecx
  41a03d:	jecxz  0x41a045
  41a03f:	add    BYTE PTR [ecx],ch
  41a041:	stc    
  41a042:	xor    ebx,DWORD PTR [ebp+0x44]
  41a045:	mov    ah,0x7
  41a047:	je     0x41a05c
  41a049:	lods   eax,DWORD PTR ds:[esi]
  41a04a:	or     DWORD PTR [esi-0x9],ebp
  41a04d:	inc    ebp
  41a04e:	xor    eax,0x15ab3551
  41a053:	arpl   cx,cx
  41a055:	pop    ds
  41a056:	and    al,BYTE PTR [edx+edx*1-0x57]
  41a05a:	adc    DWORD PTR [edx+ebx*1+0x4a],esp
  41a05e:	pop    es
  41a05f:	adc    WORD PTR [edi+0x4ec40014],sp
  41a066:	inc    ebp
  41a067:	inc    edi
  41a068:	ret    
  41a069:	inc    esi
  41a06a:	das    
  41a06b:	pop    ebp
  41a06c:	mov    ecx,0xae631779
  41a071:	ja     0x41a08a
  41a073:	imul   esi,edi,0x7b
  41a076:	cmp    eax,0x397d062f
  41a07b:	arpl   bx,cx
  41a07d:	inc    edx
  41a07e:	adc    BYTE PTR [edx+edx*8+0x19],dh
  41a082:	adc    DWORD PTR [edi-0x5d],ebx
  41a085:	rcl    BYTE PTR [edi],1
  41a087:	ja     0x41a04d
  41a089:	das    
  41a08a:	adc    dh,BYTE PTR [edi+esi*8-0x25]
  41a08e:	cmp    eax,0x43cce62f
  41a093:	jae    0x41a020
  41a095:	xor    ebx,DWORD PTR [eax]
  41a097:	outs   dx,BYTE PTR ds:[esi]
  41a098:	xor    DWORD PTR [edx],0x26
  41a09b:	pop    edi
  41a09c:	mov    ebp,DWORD PTR [esi]
  41a09e:	add    edx,DWORD PTR [eax+0x0]
	...
  41a0a9:	add    BYTE PTR [eax],al
  41a0ab:	add    BYTE PTR [edx+ebx*1+0x633b50d4],ch
  41a0b2:	mov    ebx,0x8c883324
  41a0b7:	adc    DWORD PTR [eax-0x6d],ebp
  41a0ba:	cdq    
  41a0bb:	add    eax,DWORD PTR [edi-0x56]
  41a0be:	(bad)  
  41a0c0:	xor    esp,DWORD PTR [ebp-0x4dabe185]
  41a0c6:	mov    DWORD PTR [ebx+ecx*2],edx
  41a0c9:	arpl   bp,bp
  41a0cb:	add    esi,edi
  41a0cd:	(bad)  
  41a0ce:	in     eax,dx
  41a0cf:	add    esi,edi
  41a0d1:	(bad)  
  41a0d2:	in     eax,dx
  41a0d3:	add    esi,edi
  41a0d5:	(bad)  
  41a0d6:	in     eax,dx
  41a0d7:	add    esi,edi
  41a0d9:	(bad)  
  41a0da:	in     eax,dx
  41a0db:	add    esi,edi
  41a0dd:	(bad)  
  41a0de:	in     eax,dx
  41a0df:	add    esi,edi
  41a0e1:	(bad)  
  41a0e2:	in     eax,dx
  41a0e3:	add    esi,edi
  41a0e5:	(bad)  
  41a0e6:	in     eax,dx
  41a0e7:	add    esi,edi
  41a0e9:	(bad)  
  41a0ea:	in     eax,dx
  41a0eb:	adc    BYTE PTR [eax],cl
  41a0ed:	pop    DWORD PTR [esi+0x10]
  41a0f0:	aam    0x51
  41a0f2:	iret   
  41a0f3:	pop    ds
  41a0f4:	fisttp DWORD PTR [esi-0x712fef13]
  41a0fa:	push   es
  41a0fb:	adc    ah,dl
  41a0fd:	push   ecx
  41a0fe:	sub    BYTE PTR ds:0x40f87c7,dl
  41a104:	(bad)  
  41a105:	xchg   ebx,eax
  41a106:	or     DWORD PTR [ebx],ebx
  41a108:	retf   
  41a109:	xchg   DWORD PTR [esp+0x10f88ed6],edi
	...
  41a11c:	xchg   esp,eax
  41a11d:	(bad)  
  41a11e:	fcom   QWORD PTR [edx]
  41a120:	fwait
  41a121:	mov    edx,ecx
  41a123:	push   ds
  41a124:	out    0xbd,al
  41a126:	fst    QWORD PTR [ecx]
  41a128:	xchg   esp,eax
  41a129:	xchg   edx,eax
  41a12a:	into   
  41a12b:	adc    DWORD PTR [edx+eiz*2-0x7464ed44],edx
  41a132:	mov    cl,0x1e
  41a134:	(bad)  
  41a135:	mov    ebp,0x81e8ba06
  41a13a:	jbe    0x41a125
  41a13c:	pop    es
  41a13d:	mov    WORD PTR [edx-0x70],gs
  41a140:	clc    
  41a141:	jg     0x41a176
  41a143:	mov    esi,0x9c6a8e17
  41a148:	add    DWORD PTR [ebp-0x690274a9],ecx
  41a14e:	popa   
  41a14f:	jp     0x41a145
  41a151:	xchg   ecx,eax
  41a152:	jne    0x41a0e1
  41a154:	fst    QWORD PTR [esi-0x7dec459f]
  41a15a:	addr16 jge 0x41a15e
  41a15d:	mov    BYTE PTR [eax+0x46],ch
  41a160:	xchg   ecx,eax
  41a161:	mov    BYTE PTR [edi+0x4b],ah
  41a164:	sti    
  41a165:	bound  ebp,QWORD PTR [ecx+0x46]
  41a168:	cdq    
  41a169:	xchg   ebx,eax
  41a16a:	jne    0x41a1a9
  41a16c:	mov    ds:0xc6fa6190,al
  41a171:	xchg   BYTE PTR [edx+0x4d],ch
  41a174:	sti    
  41a175:	xchg   ecx,eax
  41a176:	jne    0x41a1bd
  41a178:	mov    dl,BYTE PTR [eax-0x70aa059f]
  41a17e:	jbe    0x41a18c
	...
  41a18c:	gs sbb al,0x74
  41a18f:	sbb    BYTE PTR [edi-0x7b],ah
  41a192:	jb     0x41a1a0
  41a194:	and    BYTE PTR [esi-0x6cba029d],bh
  41a19a:	popa   
  41a19b:	jmp    0x10ac2ee1
  41a1a0:	aas    
  41a1a1:	xor    DWORD PTR [ebx],0x61924316
  41a1a7:	stc    
  41a1a8:	sbb    edx,DWORD PTR [edx-0x72de169f]
  41a1ae:	push   0xffffffd0
  41a1b0:	sub    BYTE PTR [ecx-0x6fde49cd],al
  41a1b6:	popa   
  41a1b7:	fxtract 
  41a1b9:	xchg   ecx,eax
  41a1ba:	jne    0x41a1bc
  41a1bc:	and    cl,BYTE PTR [edi]
  41a1be:	jae    0x41a225
  41a1c0:	std    
  41a1c1:	add    BYTE PTR [esi+0x6f],ah
  41a1c4:	xor    bl,BYTE PTR [ebx]
  41a1c6:	ins    BYTE PTR es:[edi],dx
  41a1c7:	outs   dx,BYTE PTR ds:[esi]
  41a1c8:	add    DWORD PTR ds:0x147b7470,0xb7f72f7
  41a1d2:	pusha  
  41a1d3:	je     0x41a240
  41a1d5:	push   esp
  41a1d6:	pop    ecx
  41a1d7:	arpl   WORD PTR [ecx+0xc],dx
  41a1da:	je     0x41a249
  41a1dc:	pusha  
  41a1dd:	add    BYTE PTR [ebp+0x6c],ah
  41a1e0:	jno    0x41a1e7
  41a1e2:	idiv   edi
  41a1e4:	into   
  41a1e5:	pop    edi
  41a1e6:	push   es
  41a1e7:	add    BYTE PTR [esi-0x61fff9a1],bl
  41a1ed:	pop    edi
  41a1ee:	push   es
	...
  41a1fb:	add    BYTE PTR [esi-0x71fff9a1],cl
  41a201:	pop    edi
  41a202:	push   es
  41a203:	add    BYTE PTR [esi-0x61fff9a1],bl
  41a209:	pop    edi
  41a20a:	push   es
  41a20b:	add    BYTE PTR [esi-0x41fff9a1],cl
  41a211:	adc    al,0x6a
  41a213:	data16 mov bh,0x12
  41a216:	fs jae 0x41a259
  41a219:	push   cs
  41a21a:	imul   ebp,DWORD PTR [ecx+0x4e],0xe86f752f
  41a221:	or     eax,0x2e5e656b
  41a226:	jbe    0x41a27a
  41a228:	sti    
  41a229:	adc    bl,BYTE PTR [eax+0x74]
  41a22c:	out    0x18,eax
  41a22e:	fs add dh,bl
  41a231:	add    eax,0x2f1e6873
  41a236:	pop    eax
  41a237:	je     0x41a27f
  41a239:	xor    ebp,DWORD PTR [edx+0x45]
  41a23c:	push   ss
  41a23d:	or     dh,bh
  41a23f:	outs   dx,DWORD PTR ds:[esi]
  41a240:	div    DWORD PTR [edi]
  41a242:	out    dx,al
  41a243:	test   BYTE PTR gs:[ebx],bl
  41a246:	jmp    0xea1a99bb
  41a24b:	fs xchg ecx,eax
  41a24d:	sub    al,0xf5
  41a24f:	jo     0x41a21a
  41a251:	fdiv   st,st(1)
  41a253:	imul   ebx,DWORD PTR [esi-0x30],0xffffffed
  41a257:	jmp    DWORD PTR [ebp-0xd]
  41a25a:	jmp    0x41a2c9
  41a25c:	push   eax
  41a25d:	jmp    0x0:0x2def
	...
  41a26c:	arpl   sp,si
  41a26e:	out    dx,al
  41a26f:	inc    DWORD PTR [ebp-0x1d]
  41a272:	jmp    0x41a2e1
  41a274:	pop    eax
  41a275:	repnz out dx,eax
  41a277:	xor    DWORD PTR [ecx],edx
  41a279:	nop
  41a27a:	sti    
  41a27b:	jae    0x41a274
  41a27d:	pushf  
  41a27e:	jmp    0xe470:0xf5992164
  41a285:	jno    0x41a285
  41a287:	ja     0x41a2b4
  41a289:	or     al,0x22
  41a28b:	xor    dl,BYTE PTR [esp+ecx*1]
  41a28e:	and    dh,BYTE PTR [edx]
  41a290:	sbb    ecx,DWORD PTR [edx+eiz*1]
  41a293:	xor    dl,BYTE PTR [edx]
  41a295:	or     al,0xd2
  41a297:	inc    edx
  41a298:	xor    edi,DWORD PTR [edi]
  41a29a:	rcl    DWORD PTR [ebx-0x29],0xa3
  41a29e:	cmc    
  41a29f:	jo     0x41a28c
  41a2a1:	pop    ecx
  41a2a2:	jecxz  0x41a30e
  41a2a4:	shr    BYTE PTR [edi],cl
  41a2a6:	and    esp,DWORD PTR [ebx-0x2f]
  41a2a9:	ins    BYTE PTR es:[edi],dx
  41a2aa:	lock jbe 0x41a294
  41a2ad:	ja     0x41a28e
  41a2af:	arpl   WORD PTR [edx-0x268e2084],bp
  41a2b5:	push   0xffffffe7
  41a2b7:	bound  edx,QWORD PTR [ebx]
  41a2b9:	sub    al,0xe0
  41a2bb:	ins    DWORD PTR es:[edi],dx
  41a2bc:	aam    0x1d
  41a2be:	cld    
  41a2bf:	outs   dx,DWORD PTR ds:[esi]
  41a2c0:	stos   DWORD PTR es:[edi],eax
  41a2c1:	pop    esi
  41a2c2:	out    dx,al
  41a2c3:	dec    edi
  41a2c4:	xchg   esi,eax
  41a2c5:	(bad)  
  41a2c6:	fdivr  st(4),st
  41a2c8:	stos   DWORD PTR es:[edi],eax
  41a2c9:	mov    ebx,ebx
  41a2cb:	out    0xf8,eax
  41a2cd:	mov    al,ds:0xd0bb
	...
  41a2da:	add    BYTE PTR [eax],al
  41a2dc:	mov    ebp,0x8ef0ba42
  41a2e1:	mov    ecx,0x8b9bf0d1
  41a2e6:	(bad)  
  41a2e7:	hlt    
  41a2e8:	clc    
  41a2e9:	lahf   
  41a2ea:	(bad)  
  41a2eb:	cmc    
  41a2ec:	push   ebp
  41a2ed:	cmp    DWORD PTR [eax-0x4d421705],0x898c5ef0
  41a2f7:	out    dx,eax
  41a2f8:	cmp    DWORD PTR [edi-0x7fb91559],esi
  41a2fe:	jg     0x41a2f0
  41a300:	inc    eax
  41a301:	mov    bh,0xed
  41a303:	aam    0x53
  41a305:	xor    DWORD PTR [ecx-0x8],0xdf8a9519
  41a30c:	cmp    eax,0x1cea738a
  41a311:	xchg   DWORD PTR [esi+0x4],ecx
  41a314:	int3   
  41a315:	inc    edi
  41a316:	or     al,BYTE PTR [ecx+edx*1]
  41a319:	(bad)  
  41a31a:	pop    ebp
  41a31b:	ds loop 0x41a367
  41a31e:	in     eax,dx
  41a31f:	jmp    0x41a325
  41a321:	(bad)  
  41a322:	cmp    eax,0xed49d23e
  41a327:	jmp    0x41a32d
  41a329:	(bad)  
  41a32a:	cmp    eax,0xf84a2ef5
  41a32f:	add    edx,ecx
  41a331:	mov    ds,WORD PTR ds:0x1680f732
  41a337:	not    ch
  41a339:	mov    al,ds:0x8bc7d439
  41a33e:	adc    edi,esp
	...
  41a34c:	(bad)  
  41a34d:	dec    eax
  41a34e:	or     ebx,esp
  41a350:	les    esp,FWORD PTR [edx+0x1c]
  41a353:	out    0x99,eax
  41a355:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a356:	push   es
  41a357:	push   es
  41a358:	and    eax,0xf4f0618a
  41a35d:	mov    dh,0x49
  41a35f:	(bad)  
  41a360:	and    al,BYTE PTR [eax-0x42ea3296]
  41a366:	push   ebx
  41a367:	int3   
  41a368:	adc    eax,0x1bbf67ac
  41a36d:	test   BYTE PTR [ebp-0x5b],bh
  41a370:	hlt    
  41a371:	mov    al,ds:0x8a13ce6a
  41a376:	push   es
  41a377:	xchg   ebp,eax
  41a378:	mov    esi,0xdbca678c
  41a37d:	mov    esp,0x8fe79b44
  41a382:	jae    0x41a308
  41a384:	loop   0x41a342
  41a386:	push   es
  41a387:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a388:	(bad)  
  41a389:	call   0xa506:0xb9d87d6d
  41a390:	mov    cl,0x87
  41a392:	jl     0x41a324
  41a394:	enter  0x658c,0x95
  41a398:	les    edx,FWORD PTR [edx-0x73627899]
  41a39e:	popa   
  41a39f:	pop    edx
  41a3a0:	xchg   edi,eax
  41a3a1:	sbb    BYTE PTR [esi+ecx*2-0x6f],dl
  41a3a5:	xchg   esp,eax
  41a3a6:	outs   dx,DWORD PTR ds:[esi]
  41a3a7:	dec    eax
  41a3a8:	test   DWORD PTR [ebp-0x7a61e2a6],eax
  41a3ae:	arpl   WORD PTR [ecx+0x0],dx
	...
  41a3b9:	add    BYTE PTR [eax],al
  41a3bb:	add    BYTE PTR [ecx-0x4c16a94c],bh
  41a3c1:	mov    BYTE PTR [esi+0x2d],dh
  41a3c4:	bound  edx,QWORD PTR [edx-0x7ca7e2fa]
  41a3ca:	gs adc eax,0xe974812f
  41a3d0:	push   esi
  41a3d1:	xchg   DWORD PTR [edi+0x2],esp
  41a3d4:	inc    esi
  41a3d5:	mov    ecx,0x7f190274
  41a3da:	add    BYTE PTR gs:[edx+0x64],al
  41a3de:	push   ebp
  41a3df:	imul   eax,DWORD PTR [edx+0xb],0x8006e40
  41a3e6:	sub    DWORD PTR [ecx-0x30],edx
  41a3e9:	test   DWORD PTR cs:[esi+0x32],0x50006907
  41a3f1:	push   DWORD PTR [eax+0x6f]
  41a3f4:	sub    al,0x7
  41a3f6:	jae    0x41a45d
  41a3f8:	sub    eax,0x42616246
  41a3fd:	fs push ecx
  41a3ff:	imul   ebp,DWORD PTR [eax],0xde50531e
  41a405:	adc    al,0x60
  41a407:	je     0x41a3bc
  41a409:	adc    al,0x29
  41a40b:	fs ins BYTE PTR es:[edi],dx
  41a40d:	arpl   WORD PTR [ebp+0x4c],ax
  41a410:	popf   
  41a411:	es inc ebx
  41a413:	pop    esp
  41a414:	gs dec esi
  41a416:	daa    
  41a417:	inc    ebx
  41a418:	scas   eax,DWORD PTR es:[edi]
  41a419:	pop    ds
  41a41a:	xor    dh,BYTE PTR [edi+edi*2]
  41a41d:	push   edx
  41a41e:	aaa    
  41a41f:	cmp    DWORD PTR [eax],eax
	...
  41a429:	add    BYTE PTR [eax],al
  41a42b:	add    BYTE PTR [ebx+0x6f312c21],al
  41a431:	push   DWORD PTR [ebp*1+0x302f1e66]
  41a438:	or     ecx,DWORD PTR [edi+0x36]
  41a43b:	cmp    dh,bh
  41a43d:	sbb    eax,0x54ed4243
  41a442:	inc    eax
  41a443:	inc    esi
  41a444:	loop   0x41a4a7
  41a446:	pop    edx
  41a447:	dec    ecx
  41a448:	sub    BYTE PTR [edi],ch
  41a44a:	jne    0x41a4bb
  41a44c:	sub    eax,0x30726434
  41a451:	or     dh,BYTE PTR [ebp+0x33]
  41a454:	ins    BYTE PTR es:[edi],dx
  41a455:	arpl   WORD PTR [ebp+0x65],si
  41a458:	cld    
  41a459:	adc    BYTE PTR [edx+esi*2-0x3],ah
  41a45d:	dec    eax
  41a45e:	jle    0x41a4cd
  41a460:	neg    DWORD PTR [ebp+0x2]
  41a463:	pop    esp
  41a464:	mov    cl,0x4d
  41a466:	rol    BYTE PTR [edx+ebx*8+0x15],cl
  41a46a:	out    dx,eax
  41a46b:	(bad)  
  41a46c:	lds    ecx,FWORD PTR [ecx]
  41a46e:	into   
  41a46f:	push   eax
  41a470:	retf   
  41a471:	gs in  al,0x31
  41a474:	fstp   DWORD PTR [ebp-0x1f]
  41a477:	jae    0x41a470
  41a479:	fidivr DWORD PTR [esi+0x292aa35e]
  41a47f:	fs xchg esi,eax
  41a481:	xor    eax,0x3cb25c03
  41a486:	out    dx,eax
  41a487:	jo     0x41a419
  41a489:	daa    
  41a48a:	out    dx,eax
  41a48b:	pop    ebx
  41a48c:	mov    dh,0xc5
  41a48e:	rcl    BYTE PTR [ebx+0x0],0x0
	...
  41a49a:	add    BYTE PTR [eax],al
  41a49c:	inc    edi
  41a49d:	or     al,0xca
  41a49f:	ins    DWORD PTR es:[edi],dx
  41a4a0:	arpl   WORD PTR [edi],bx
  41a4a2:	cmc    
  41a4a3:	ins    DWORD PTR es:[edi],dx
  41a4a4:	pop    edx
  41a4a5:	clc    
  41a4a6:	and    al,BYTE PTR [ebx+0x5f]
  41a4a9:	cld    
  41a4aa:	out    0x6c,al
  41a4ac:	inc    ebp
  41a4ad:	out    0xf4,eax
  41a4af:	jmp    DWORD PTR [ecx]
  41a4b1:	jecxz  0x41a49b
  41a4b3:	push   cx
  41a4b5:	out    0xee,eax
  41a4b7:	inc    eax
  41a4b8:	push   esi
  41a4b9:	jmp    0x9a7607a8
  41a4be:	out    dx,al
  41a4bf:	arpl   WORD PTR [edx],dx
  41a4c1:	xchg   esi,eax
  41a4c2:	out    dx,eax
  41a4c3:	pushw  ss
  41a4c5:	mov    al,0xf5
  41a4c7:	jmp    FWORD PTR [ebx]
  41a4c9:	pop    ecx
  41a4ca:	and    al,BYTE PTR [edi+0x3a]
  41a4cd:	ins    BYTE PTR es:[edi],dx
  41a4ce:	rcl    BYTE PTR [ebx+0x27],0x6c
  41a4d2:	rcr    BYTE PTR [esi+0x4],cl
  41a4d5:	pop    ecx
  41a4d6:	icebp  
  41a4d7:	ins    BYTE PTR es:[edi],dx
  41a4d8:	add    eax,0xb4fff5a0
  41a4dd:	jnp    0x41a4a2
  41a4df:	dec    edi
  41a4e0:	mov    esi,0xb7002311
  41a4e5:	bound  esi,QWORD PTR [ebx]
  41a4e7:	xor    eax,0x4d62ff1b
  41a4ec:	add    dh,dl
  41a4ee:	adc    DWORD PTR [ebx*4+0x52c60663],eax
  41a4f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a4f6:	xor    esi,DWORD PTR ds:0x4d42fefb
  41a4fc:	add    dh,dl
  41a4fe:	icebp  
  41a4ff:	add    eax,DWORD PTR [eax]
	...
  41a509:	add    BYTE PTR [eax],al
  41a50b:	add    BYTE PTR [ebp+0x63],bl
  41a50e:	push   es
  41a50f:	(bad)  
  41a510:	adc    ah,BYTE PTR [ecx-0x124cb4d]
  41a516:	mov    ds:0xd1d6004d,al
  41a51b:	add    ebx,DWORD PTR [ebp+0x63]
  41a51e:	mov    ch,0x12
  41a521:	push   esi
  41a522:	in     eax,dx
  41a523:	add    esi,edi
  41a525:	aas    
  41a526:	std    
  41a527:	xor    DWORD PTR [edi+0x63],ecx
  41a52a:	pushf  
  41a52b:	in     al,dx
  41a52c:	push   edx
  41a52d:	(bad)  
  41a52e:	mov    al,0xe2
  41a530:	data16 add cl,0xce
  41a534:	push   ecx
  41a535:	sbb    BYTE PTR [ebx-0x7879b814],0xf7
  41a53c:	sub    al,0xac
  41a53e:	ja     0x41a537
  41a540:	push   ebp
  41a541:	xchg   ecx,eax
  41a542:	(bad)  
  41a543:	out    0x44,al
  41a545:	inc    ebx
  41a546:	mov    ds:0x808720fb,al
  41a54b:	icebp  
  41a54c:	adc    eax,0x12ca8991
  41a551:	(bad)
  41a555:	mov    WORD PTR [edi],ds
  41a557:	in     eax,dx
  41a558:	push   es
  41a559:	mov    BYTE PTR [eax+eiz*8+0x27],bl
  41a55d:	(bad)  
  41a55e:	cmp    dl,dh
  41a560:	and    DWORD PTR [esi+0x4a],edi
  41a563:	xor    dh,bh
  41a565:	(bad)  
  41a566:	in     eax,dx
  41a567:	add    esi,edi
  41a569:	add    DWORD PTR [esi],0xffffffe9
  41a56c:	push   esi
  41a56d:	adc    eax,0xe962
	...
  41a57a:	add    BYTE PTR [eax],al
  41a57c:	arpl   WORD PTR es:[esi],di
  41a57f:	jmp    0xe97f08a6
  41a584:	pop    edx
  41a585:	adc    eax,0x630de92a
  41a58a:	fs jmp 0xe9710898
  41a590:	or     DWORD PTR [ebx+0x32],esp
  41a593:	jmp    0xe9a4baaf
  41a598:	in     eax,dx
  41a599:	bound  ebp,QWORD PTR [ecx]
  41a59b:	jmp    0xe975bab5
  41a5a0:	loope  0x41a604
  41a5a2:	ds jmp 0xe9a50889
  41a5a8:	(bad)  
  41a5a9:	bound  esi,QWORD PTR [ecx+ebp*8]
  41a5ac:	mov    ebp,0xc0e93662
  41a5b1:	bound  esp,QWORD PTR [edx-0x17]
  41a5b4:	(bad)  
  41a5b5:	adc    al,0x66
  41a5b7:	jmp    0xe9a208df
  41a5bc:	sub    esp,DWORD PTR [ebx+0x6]
  41a5bf:	jmp    0x9ba5236d
  41a5c4:	jecxz  0x41a559
  41a5c6:	addr16 pop eax
  41a5c9:	mov    bh,0x4f
  41a5cb:	adc    dl,0x9d
  41a5ce:	push   0x2cb7c08c
  41a5d3:	jmp    0xb3b83672
  41a5d8:	fild   DWORD PTR [ebp+0x6]
  41a5db:	call   0x0:0x5e727e93
	...
  41a5ea:	add    BYTE PTR [eax],al
  41a5ec:	xchg   edx,eax
  41a5ed:	xchg   edx,eax
  41a5ee:	popa   
  41a5ef:	cmp    eax,0x4b6780ba
  41a5f4:	xchg   esi,eax
  41a5f5:	mov    eax,0x898e3e43
  41a5fa:	add    BYTE PTR [bx+si],ah
  41a5fd:	pop    edi
  41a5fe:	push   ebp
  41a5ff:	imul   ebp,DWORD PTR [edx],0x2c655602
  41a605:	adc    DWORD PTR [edx+esi*2+0x1d],esp
  41a609:	pop    edi
  41a60a:	push   ebp
  41a60b:	imul   edi,edx,0xec655601
  41a611:	adc    BYTE PTR [edx+esi*2+0x3e],ah
  41a615:	inc    ebx
  41a616:	bound  ebx,QWORD PTR [esi+edx*1+0x8]
  41a61a:	jbe    0x41a690
  41a61c:	dec    esi
  41a61d:	sub    eax,0x2bfb7460
  41a622:	fs jb  0x41a64d
  41a625:	add    esi,DWORD PTR [ebp+0x20]
  41a628:	cmp    esi,DWORD PTR [ebx+ebx*2]
  41a62b:	push   edi
  41a62c:	sub    edi,esi
  41a62e:	push   ebx
  41a62f:	jb     0x41a673
  41a631:	pusha  
  41a632:	push   ebp
  41a633:	imul   ebp,DWORD PTR [edx],0x1c655603
  41a639:	adc    ah,BYTE PTR [edx+esi*2-0x12]
  41a63d:	inc    ecx
  41a63e:	bound  ebx,QWORD PTR [esp+ecx*4+0x2]
  41a642:	ins    BYTE PTR es:[edi],dx
  41a643:	outs   dx,DWORD PTR ds:[esi]
  41a644:	stos   BYTE PTR es:[edi],al
  41a645:	add    dl,BYTE PTR [edi]
  41a647:	inc    esp
  41a648:	mov    bh,0xd
  41a64a:	arpl   WORD PTR fs:[edx+0x8],di
  41a64e:	jne    0x41a6c9
	...
  41a65c:	fisubr WORD PTR [eax+eiz*2]
  41a65f:	je     0x41a6dc
  41a661:	sub    al,0x64
  41a663:	jb     0x41a6cd
  41a665:	add    dh,BYTE PTR [ebp+0x20]
  41a668:	stos   DWORD PTR es:[edi],eax
  41a669:	xor    ebp,DWORD PTR [edx*2+0x75032d]
  41a670:	lea    eax,[esi]
  41a672:	jae    0x41a6d9
  41a674:	jge    0x41a678
  41a676:	jne    0x41a6ee
  41a678:	sub    ecx,DWORD PTR ds:0x4a3a2517
  41a67e:	push   ebx
  41a67f:	jae    0x41a678
  41a681:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a682:	lock pop ds
  41a684:	daa    
  41a685:	dec    ebp
  41a686:	add    ah,BYTE PTR [ebx]
  41a688:	add    al,0x3e
  41a68a:	(bad)  
  41a68b:	(bad)  
  41a68c:	out    dx,al
  41a68d:	test   al,0xea
  41a68f:	pop    esi
  41a690:	ficomp WORD PTR [ebx+0x4dce5102]
  41a696:	in     eax,0x50
  41a698:	shl    BYTE PTR [edi-0xc],cl
  41a69b:	(bad)  
  41a69c:	lds    ebp,FWORD PTR [ecx]
  41a69e:	es fs stos DWORD PTR es:[edi],eax
  41a6a1:	pop    eax
  41a6a2:	les    edx,FWORD PTR [ebx-0x59]
  41a6a5:	or     DWORD PTR [edi-0x4e9349e],esi
  41a6ab:	bound  edi,QWORD PTR [ecx-0x5a002d93]
  41a6b1:	(bad)  
  41a6b2:	mul    BYTE PTR [edx-0x5c]
  41a6b5:	sar    edx,cl
  41a6b7:	push   0xffffff8b
  41a6b9:	or     esp,edx
  41a6bb:	bound  edx,QWORD PTR [ebp+0x5ec669]
	...
  41a6c9:	add    BYTE PTR [eax],al
  41a6cb:	add    BYTE PTR [ebx-0x6fb3fcd6],al
  41a6d1:	sbb    al,0xea
  41a6d3:	ins    DWORD PTR es:[edi],dx
  41a6d4:	xlat   BYTE PTR ds:[ebx]
  41a6d5:	(bad)
  41a6d8:	push   esi
  41a6d9:	cld    
  41a6da:	iret   
  41a6db:	dec    esi
  41a6dc:	cmp    esp,DWORD PTR [ebx]
  41a6de:	out    0x62,eax
  41a6e0:	pop    ss
  41a6e1:	sub    ch,ah
  41a6e3:	jno    0x41a72f
  41a6e5:	(bad)  
  41a6e7:	pop    ds
  41a6e8:	add    al,0xfc
  41a6ea:	out    0x5e,al
  41a6ec:	push   ebp
  41a6ed:	call   0xfc5aa6d7
  41a6f2:	sub    DWORD PTR [eax],eax
  41a6f4:	pop    ss
  41a6f5:	cld    
  41a6f6:	mov    edi,0xc6ed414c
  41a6fb:	push   ecx
  41a6fc:	ss ret 
  41a6fe:	int3   
  41a6ff:	push   ebx
  41a700:	imul   ebx
  41a702:	rol    BYTE PTR [esi+0x2a],1
  41a705:	arpl   WORD PTR [esi],bp
  41a707:	(bad)  
  41a708:	sub    DWORD PTR [ebx+0x32],esp
  41a70b:	retf   0xb431
  41a70e:	cmp    bh,BYTE PTR [edi-0x40da5a80]
  41a714:	aaa    
  41a715:	sahf   
  41a716:	in     eax,dx
  41a717:	rol    ebx,0xb4
  41a71a:	and    cl,bl
  41a71c:	mov    bl,0xa0
  41a71e:	in     eax,dx
  41a71f:	add    edx,ebx
  41a721:	add    DWORD PTR [eax-0x15],0xe8ed95ca
  41a728:	(bad)  
  41a729:	jnp    0x41a72b
  41a72b:	jmp    0x41a707
  41a72d:	mov    cl,0x1a
  41a72f:	test   BYTE PTR [eax],0x0
	...
  41a73a:	add    BYTE PTR [eax],al
  41a73c:	int3   
  41a73d:	bound  ebx,QWORD PTR ds:0xf895c7e3
  41a743:	call   0xf25a2dee
  41a748:	leave  
  41a749:	jle    0x41a745
  41a74b:	fisub  WORD PTR [eax]
  41a74d:	xchg   edi,eax
  41a74e:	cld    
  41a74f:	fisub  WORD PTR [esi-0x6a193180]
  41a755:	mov    cl,0xcf
  41a757:	loop   0x41a6f5
  41a759:	xchg   edi,eax
  41a75a:	retf   0x9903
  41a75d:	xchg   esi,eax
  41a75e:	fnstsw WORD PTR ds:0xebed41ca
  41a764:	fs xchg edi,eax
  41a766:	mov    ebp,0xed421a3d
  41a76b:	jmp    0x41a7d1
  41a76d:	xchg   edi,eax
  41a76e:	mov    ebp,0xd0421ef4
  41a773:	add    esi,DWORD PTR [ebx]
  41a775:	stos   BYTE PTR es:[edi],al
  41a776:	mov    al,ch
  41a778:	push   ebx
  41a779:	jg     0x41a705
  41a77b:	xlat   BYTE PTR ds:[ebx]
  41a77c:	aaa    
  41a77d:	jnp    0x41a71a
  41a77f:	call   0xd82f2fd1
  41a784:	aaa    
  41a785:	jnp    0x41a802
  41a787:	call   0x7c4823a9
  41a78c:	cdq    
  41a78d:	adc    DWORD PTR [ebx-0x56],ebx
  41a790:	mov    WORD PTR [ebx-0x5e4fab99],ss
  41a796:	push   0x54
  41a798:	adc    BYTE PTR [ecx],0x54
  41a79b:	inc    esi
  41a79c:	xchg   ebp,eax
  41a79d:	xchg   ebp,eax
  41a79e:	outs   dx,DWORD PTR ds:[esi]
  41a79f:	dec    eax
	...
  41a7ac:	add    DWORD PTR [edx+ebx*2+0x6793632a],0x6aa1484c
  41a7b7:	cmp    al,0x6a
  41a7b9:	adc    DWORD PTR [esi+0x3f],ecx
  41a7bc:	bound  edx,QWORD PTR [ebp-0x51a0ea9b]
  41a7c2:	inc    edx
  41a7c3:	adc    BYTE PTR [ecx+0x11],al
  41a7c6:	pop    ebx
  41a7c7:	sub    ecx,DWORD PTR [ecx+0x7e]
  41a7ca:	imul   eax,DWORD PTR [eax],0x25067c48
  41a7d0:	cmp    eax,0x21116388
  41a7d5:	jle    0x41a840
  41a7d7:	or     al,0xfb
  41a7d9:	scas   al,BYTE PTR es:[edi]
  41a7da:	inc    ebx
  41a7db:	(bad)  
  41a7dc:	adc    DWORD PTR [esi+0x62],edi
  41a7df:	(bad)  
  41a7e0:	hlt    
  41a7e1:	scas   al,BYTE PTR es:[edi]
  41a7e2:	push   esp
  41a7e3:	into   
  41a7e4:	adc    edi,DWORD PTR [edx+0x49]
  41a7e7:	int3   
  41a7e8:	sbb    BYTE PTR [ebp-0x622e5dfa],dl
  41a7ee:	popa   
  41a7ef:	aad    0xd1
  41a7f1:	jg     0x41a85b
  41a7f3:	jmp    0xa46b43b8
  41a7f8:	sar    DWORD PTR [ecx+eiz*2-0x42],0xce
  41a7fd:	adc    BYTE PTR [ebx-0x47],bl
  41a800:	retf   0x607f
  41a803:	nop
  41a804:	rol    BYTE PTR [ebp-0x7f7e168d],1
  41a80a:	ins    DWORD PTR es:[edi],dx
  41a80b:	mov    dh,ah
  41a80d:	scas   al,BYTE PTR es:[edi]
  41a80e:	inc    ecx
	...
  41a81b:	add    BYTE PTR [esi],ch
  41a81d:	std    
  41a81e:	gs pop esp
  41a820:	push   ebx
  41a821:	adc    al,0x60
  41a823:	arpl   WORD PTR [esi+0x70617337],cx
  41a829:	add    ch,BYTE PTR [esi+eax*2]
  41a82c:	shl    BYTE PTR [esi],cl
  41a82e:	div    DWORD PTR [edx+0x27]
  41a831:	adc    esp,DWORD PTR [ebx+esi*2-0x8]
  41a835:	std    
  41a836:	push   0x56388e69
  41a83b:	imul   esi,DWORD PTR [edx],0xa007602
  41a841:	and    DWORD PTR [eax+0x73],esp
  41a844:	mov    bh,0x3
  41a846:	push   0x6d
  41a848:	out    dx,al
  41a849:	sbb    DWORD PTR [esp+eiz*2-0x19],esp
  41a84d:	add    eax,0x12f02df7
  41a852:	addr16 add ch,bh
  41a855:	data16 arpl WORD PTR [eax],ax
  41a858:	loop   0x41a8c0
  41a85a:	jb     0x41a85c
  41a85c:	pop    es
  41a85d:	addr16 push 0x7566f100
  41a863:	add    BYTE PTR [esi],cl
  41a865:	fs pop edx
  41a867:	inc    edi
  41a868:	sbb    cl,BYTE PTR [ecx]
  41a86a:	gs popa 
  41a86c:	sub    al,BYTE PTR [edx+eax*2+0x6f]
  41a870:	and    DWORD PTR [esi],eax
  41a872:	imul   ebp,DWORD PTR [edi+0x2f],0x30
  41a876:	fs jb  0x41a887
  41a879:	xor    eax,0x11bf2e4c
  41a87e:	pushw  0x0
	...
  41a88a:	add    BYTE PTR [eax],al
  41a88c:	fmulp  st(5),st
  41a88e:	je     0x41a8f5
  41a890:	popf   
  41a891:	sti    
  41a892:	inc    eax
  41a893:	push   esp
  41a894:	jle    0x41a8f9
  41a896:	sub    BYTE PTR [ebx-0x75],dl
  41a899:	int    0xf6
  41a89b:	inc    ecx
  41a89c:	jp     0x41a8a4
  41a89e:	jge    0x41a905
  41a8a0:	idiv   DWORD PTR [edi-0x1308901a]
  41a8a6:	jmp    0xd779c31e
  41a8ab:	pop    esi
  41a8ac:	and    edi,edx
  41a8ae:	mov    esi,0xd38e245e
  41a8b3:	pop    esi
  41a8b4:	and    al,0x8d
  41a8b6:	call   0x2dfae27
  41a8bb:	dec    esp
  41a8bc:	push   ss
  41a8bd:	lods   eax,DWORD PTR ds:[esi]
  41a8be:	idiv   BYTE PTR [esi]
  41a8c0:	sbb    ebx,DWORD PTR [esi-0x52fb9d0c]
  41a8c6:	add    cl,BYTE PTR [esi+edx*8+0x4c]
  41a8ca:	not    BYTE PTR [edx-0x1c]
  41a8cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a8ce:	hlt    
  41a8cf:	jmp    FWORD PTR [edx+ebx*4+0x50c773f3]
  41a8d6:	hlt    
  41a8d7:	jae    0x41a8d0
  41a8d9:	dec    esp
  41a8da:	fbld   TBYTE PTR [ebp-0x3d]
  41a8dd:	js     0x41a8c0
  41a8df:	jno    0x41a8bb
  41a8e1:	push   ebp
  41a8e2:	mov    eax,0xea6cd66b
  41a8e7:	dec    edi
  41a8e8:	call   0xe15d:0xb55beb5a
  41a8ef:	jns    0x41a8f1
	...
  41a8f9:	add    BYTE PTR [eax],al
  41a8fb:	add    BYTE PTR [edx-0x449009c1],bl
  41a901:	ins    BYTE PTR es:[edi],dx
  41a902:	in     eax,0x73
  41a904:	mov    esi,DWORD PTR [edx]
  41a906:	loope  0x41a96c
  41a908:	test   cl,bh
  41a90a:	into   
  41a90b:	inc    ecx
  41a90c:	xchg   ebx,eax
  41a90d:	sbb    bh,ch
  41a90f:	bound  esi,QWORD PTR [ecx+0x22fff335]
  41a915:	push   ds
  41a916:	repz imul esi,edi,0xffffffc5
  41a91a:	(bad)  
  41a91b:	dec    edi
  41a91c:	or     al,0x61
  41a91e:	and    BYTE PTR [esi+ecx*2-0x32],cl
  41a922:	jmp    0x41a97f
  41a924:	inc    esp
  41a925:	arpl   WORD PTR [ebp-0x4680a320],dx
  41a92b:	out    0x50,al
  41a92d:	mov    BYTE PTR [edi-0x29],bh
  41a930:	push   edi
  41a931:	jle    0x41a9ad
  41a933:	call   0x3cb2689
  41a938:	xor    bh,BYTE PTR [esi-0x61]
  41a93b:	iret   
  41a93c:	xor    BYTE PTR [ebx-0x54],ah
  41a93f:	out    0xa,al
  41a941:	jge    0x41a8c5
  41a943:	loop   0x41a949
  41a945:	jl     0x41a997
  41a947:	out    0x7,al
  41a949:	cmp    eax,0x6304fc51
  41a94e:	sbb    al,0xc0
  41a950:	int    0xa4
  41a952:	xor    esp,edx
  41a954:	jo     0x41a8e7
  41a956:	push   esi
  41a957:	lock aad 0x91
  41a95a:	pop    es
  41a95b:	jmp    0x41a92f
  41a95d:	jnp    0x41a94c
  41a95f:	xlat   BYTE PTR ds:[ebx]
	...
  41a96c:	daa    
  41a96d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a96e:	cli    
  41a96f:	mov    ebp,0xd7edb2a4
  41a974:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a975:	jnp    0x41a988
  41a977:	fbstp  TBYTE PTR [edi+eax*4+0x7cd3eb1c]
  41a97e:	add    dh,dl
  41a980:	xor    BYTE PTR [ecx-0x4a3b41d0],dh
  41a986:	shl    BYTE PTR cs:[ebp-0x4617d352],cl
  41a98d:	xchg   ecx,eax
  41a98e:	cld    
  41a98f:	fiadd  WORD PTR [edi-0x67054652]
  41a995:	xchg   DWORD PTR [ecx-0x2b516916],ebp
  41a99b:	mov    ebp,0x311152c1
  41a9a0:	ss dec ebx
  41a9a2:	add    eax,0x9f553127
  41a9a7:	xor    DWORD PTR [esp+edx*2],ecx
  41a9aa:	push   es
  41a9ab:	stc    
  41a9ac:	and    eax,0x7a8294e
  41a9b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a9b2:	cmp    eax,0x364b04d4
  41a9b7:	fld    DWORD PTR [esi]
  41a9b9:	mov    eax,ds:0x5608af34
  41a9be:	inc    eax
  41a9bf:	stos   DWORD PTR es:[edi],eax
  41a9c0:	test   eax,0xe6d735a9
  41a9c5:	scas   al,BYTE PTR es:[edi]
  41a9c6:	ss popf 
  41a9c8:	xchg   ebx,eax
  41a9c9:	test   BYTE PTR [eax-0x46],ch
  41a9cc:	out    0x62,al
  41a9ce:	inc    ecx
  41a9cf:	mov    BYTE PTR [eax],al
	...
  41a9d9:	add    BYTE PTR [eax],al
  41a9db:	add    BYTE PTR [edi-0x5cc2bf6c],al
  41a9e1:	or     eax,0x91a02f5b
  41a9e6:	push   ebx
  41a9e7:	dec    eax
  41a9e8:	test   DWORD PTR [eax+ebp*2+0x7e3cfb46],ebp
  41a9ef:	dec    edi
  41a9f0:	arpl   WORD PTR ds:0x7d573b29,cx
  41a9f6:	push   es
  41a9f7:	sbb    eax,0x1a49b398
  41a9fc:	and    eax,0xf4d327b7
  41aa01:	xchg   edx,eax
  41aa02:	sbb    al,BYTE PTR gs:[esi-0x6a]
  41aa06:	sbb    edx,DWORD PTR [bx+0x6d]
  41aa0a:	xor    eax,ebx
  41aa0c:	out    dx,al
  41aa0d:	cmp    BYTE PTR [ecx+ebp*8],0x19
  41aa11:	xchg   edx,eax
  41aa12:	popa   
  41aa13:	sti    
  41aa14:	sbb    ch,BYTE PTR [ecx+ebp*2+0x3c93dd0c]
  41aa1b:	jmp    0xd5ac3a52
  41aa20:	aam    0xad
  41aa22:	(bad)  
  41aa23:	lds    eax,FWORD PTR [esi]
  41aa25:	xor    BYTE PTR [ebx-0x26],0xbe
  41aa29:	xchg   ebx,eax
  41aa2a:	cmp    al,0xe9
  41aa2c:	sbb    ah,BYTE PTR [ebx+0x52]
  41aa2f:	add    BYTE PTR [ebx+0x7c534c32],bl
  41aa35:	push   ds
  41aa36:	sub    al,BYTE PTR [eax]
  41aa38:	mov    BYTE PTR [edi+eax*2],bl
  41aa3b:	and    BYTE PTR [eax+0x7],dh
  41aa3e:	jb     0x41aa40
	...
  41aa4c:	cwde   
  41aa4d:	sbb    al,0x47
  41aa4f:	dec    esi
  41aa50:	jno    0x41aa51
  41aa52:	div    BYTE PTR [edx+0x77]
  41aa55:	cld    
  41aa56:	arpl   WORD PTR [ebx+0x70],si
  41aa59:	or     BYTE PTR [esp+ebp*2-0x62],ch
  41aa5d:	xor    ecx,DWORD PTR [edx+0x46]
  41aa60:	mov    bl,BYTE PTR [edi]
  41aa62:	cmp    BYTE PTR [edx+0x4b],dl
  41aa65:	xor    al,0x55
  41aa67:	outs   dx,DWORD PTR ds:[esi]
  41aa68:	jl     0x41aa71
  41aa6a:	sub    al,0x46
  41aa6c:	retf   0x1736
  41aa6f:	xor    esi,eax
  41aa71:	inc    edi
  41aa72:	pop    edx
  41aa73:	push   ebx
  41aa74:	sub    eax,0xca706015
  41aa79:	adc    esi,edi
  41aa7b:	push   edx
  41aa7c:	and    DWORD PTR [ecx],ebx
  41aa7e:	push   ebx
  41aa7f:	push   edi
  41aa80:	sysexit 
  41aa82:	inc    esp
  41aa83:	pop    esp
  41aa84:	cld    
  41aa85:	jmp    DWORD PTR [edi+ebp*2+0x53]
  41aa89:	sbb    dl,BYTE PTR [ebx+0x50]
  41aa8c:	ds push ebp
  41aa8e:	sub    BYTE PTR [edi],dh
  41aa90:	add    bl,BYTE PTR [ecx]
  41aa92:	push   ebx
  41aa93:	push   eax
  41aa94:	std    
  41aa95:	stc    
  41aa96:	je     0x41ab0e
  41aa98:	sti    
  41aa99:	adc    al,0x76
  41aa9b:	add    al,bl
  41aa9d:	sub    al,BYTE PTR [edi+0x20]
  41aaa0:	int    0xff
  41aaa2:	jae    0x41ab12
  41aaa4:	sbb    ah,BYTE PTR [eax+0x40]
  41aaa7:	push   esp
  41aaa8:	out    dx,al
  41aaa9:	inc    esi
  41aaaa:	inc    eax
  41aaab:	imul   esp,DWORD PTR [edx],0x6423fb
	...
  41aab9:	add    BYTE PTR [eax],al
  41aabb:	add    BYTE PTR [esi],cl
  41aabd:	xor    BYTE PTR [eax+0x73],bl
  41aac0:	imul   DWORD PTR [eax]
  41aac2:	cld    
  41aac3:	ins    BYTE PTR es:[edi],dx
  41aac4:	gs add edx,DWORD PTR es:[ecx+0x52]
  41aac9:	enter  0x62fc,0x65
  41aacd:	mov    esp,0xfa526ae1
  41aad2:	fnsave [eax+0x5a]
  41aad5:	enter  0x43b9,0xf7
  41aad9:	shl    ah,cl
  41aadb:	dec    bx
  41aadd:	repz loope 0x41ab4b
  41aae0:	xor    esp,ebx
  41aae2:	lock bound edx,QWORD PTR [esi+esi*8]
  41aae6:	jecxz  0x41ab59
  41aae8:	cs cli 
  41aaea:	shr    BYTE PTR [ebp+eiz*1-0x6a],cl
  41aaee:	lds    esi,FWORD PTR [edx+0xa]
  41aaf1:	fsubr  st,st(5)
  41aaf3:	jno    0x41aaec
  41aaf5:	call   0x9f431ce7
  41aafa:	lock push ebx
  41aafc:	(bad)  
  41aafd:	test   eax,0xf9e8ffed
  41ab02:	add    al,BYTE PTR [eax]
  41ab04:	cwde   
  41ab05:	mov    eax,ds:0x9edeffc1
  41ab0a:	xchg   ecx,eax
  41ab0b:	jnp    0x41ab83
  41ab0d:	inc    esp
  41ab0e:	(bad)  
  41ab0f:	sub    al,0xa1
  41ab11:	repnz or esp,DWORD PTR [eax+0x6650264f]
  41ab18:	mov    edx,0x113202a2
  41ab1d:	aaa    
  41ab1e:	and    eax,0x32
	...
  41ab2b:	add    dh,bh
  41ab2d:	and    esi,DWORD PTR [eax]
  41ab2f:	xor    eax,0x5f929f7
  41ab34:	push   DWORD PTR [eax]
  41ab36:	or     eax,0xc06fbff
  41ab3b:	add    esp,esi
  41ab3d:	stc    
  41ab3e:	iret   
  41ab3f:	ins    BYTE PTR es:[edi],dx
  41ab40:	cdq    
  41ab41:	adc    eax,0x62855efc
  41ab46:	retf   0xaccf
  41ab49:	jns    0x41ab12
  41ab4b:	in     al,0x87
  41ab4d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ab4e:	mov    ecx,0xc6b64cd3
  41ab53:	not    DWORD PTR [ebp+0x43]
  41ab56:	mov    dl,0xe4
  41ab58:	push   edx
  41ab59:	test   al,al
  41ab5b:	call   0xe2e70ec6
  41ab60:	inc    edi
  41ab61:	(bad)  
  41ab62:	in     eax,dx
  41ab63:	fadd   DWORD PTR [edi-0x80]
  41ab66:	fwait
  41ab67:	add    esp,DWORD PTR [edi]
  41ab69:	test   BYTE PTR [esi+esi*8-0xa7f6548],bl
  41ab70:	and    al,0x63
  41ab72:	mov    ebx,0x797a1de8
  41ab77:	call   0xf5d84a7c
  41ab7c:	cwde   
  41ab7d:	scas   al,BYTE PTR es:[edi]
  41ab7e:	lods   al,BYTE PTR ds:[esi]
  41ab7f:	in     al,dx
  41ab80:	push   ss
  41ab81:	cmp    BYTE PTR [ebx-0x19],0x5
  41ab85:	xchg   BYTE PTR [esp+eax*1-0x2f],dl
  41ab89:	jle    0x41abdd
  41ab8b:	in     eax,0xf
  41ab8d:	arpl   WORD PTR [edx-0xb],bx
	...
  41ab9c:	aad    0x94
  41ab9e:	mul    esp
  41aba0:	fstp   TBYTE PTR [eax+0x47]
  41aba3:	fcmovnu st,st(3)
  41aba5:	(bad)  
  41aba6:	stc    
  41aba7:	hlt    
  41aba8:	aad    0x8e
  41abaa:	cmp    ebx,ebx
  41abac:	loop   0x41ab2f
  41abae:	or     eax,0xa77a9e2
  41abb3:	das    
  41abb4:	adc    eax,0xc103cb63
  41abb9:	add    DWORD PTR [ecx],0xfffffff7
  41abbc:	xchg   ebp,eax
  41abbd:	inc    edi
  41abbe:	retf   
  41abbf:	add    eax,esi
  41abc1:	jns    0x41abca
  41abc3:	clc    
  41abc4:	stos   DWORD PTR es:[edi],eax
  41abc5:	cmp    ebx,0xffffffe6
  41abc8:	mov    esp,0x300006b5
  41abcd:	ja     0x41ac37
  41abcf:	adc    eax,0xc86e9614
  41abd4:	and    DWORD PTR [esi-0x49df2baa],ebp
  41abda:	pop    ebp
  41abdb:	mov    ch,0xcb
  41abdd:	test   BYTE PTR [ebx-0x26],dh
  41abe0:	int    0x76
  41abe2:	push   0x679af4ba
  41abe7:	mov    edx,0xc46597e0
  41abec:	(bad)  [ecx]
  41abee:	push   edx
  41abef:	mov    edx,0x884893d1
  41abf4:	mov    eax,ds:0xd5b90684
  41abf9:	xchg   edx,eax
  41abfa:	jae    0x41ab9a
  41abfc:	xchg   edi,eax
  41abfd:	xchg   ebx,eax
  41abfe:	(bad)  
  41abff:	jmp    0x41ac04
	...
  41ac0c:	les    esi,FWORD PTR [esi+0x74]
  41ac0f:	jge    0x41abc7
  41ac11:	xchg   esp,eax
  41ac12:	imul   ecx,DWORD PTR [ebx-0x62f96c6f],0x80699399
  41ac1c:	xchg   esi,eax
  41ac1d:	test   al,0x6a
  41ac1f:	cmp    eax,0xe961798c
  41ac24:	mov    dh,0x79
  41ac26:	jbe    0x41ac57
  41ac28:	dec    edi
  41ac29:	cdq    
  41ac2a:	sub    BYTE PTR [ecx+0x48],dl
  41ac2d:	jge    0x41ac35
  41ac2f:	and    eax,0x44727635
  41ac34:	arpl   WORD PTR [eax+0x62f20262],bp
  41ac3a:	push   ebx
  41ac3b:	ds pop ebp
  41ac3d:	xchg   ebp,eax
  41ac3e:	outs   dx,DWORD PTR ds:[esi]
  41ac3f:	or     BYTE PTR [ecx-0x7c],cl
  41ac42:	pop    edx
  41ac43:	sub    dl,BYTE PTR [esi+0x7f]
  41ac46:	pusha  
  41ac47:	or     al,0x18
  41ac49:	mov    ds:0xb3d31971,al
  41ac4e:	addr16 add al,dh
  41ac51:	or     dh,BYTE PTR [edx+0x61]
  41ac54:	sbb    al,0x0
  41ac56:	test   DWORD PTR [ebp-0xe],0xf364172e
  41ac5d:	(bad)  
  41ac5f:	imul   ebp,DWORD PTR [eax],0x29697304
  41ac65:	add    edx,DWORD PTR [edi]
  41ac67:	jae    0x41ac2c
  41ac69:	push   cs
  41ac6a:	jno    0x41acd1
  41ac6c:	int3   
  41ac6d:	fs inc eax
  41ac6f:	push   esp
	...
  41ac7c:	jle    0x41acc2
  41ac7e:	bound  esp,QWORD PTR [ebp-0x63]
  41ac81:	adc    BYTE PTR [eax+0x6e],ah
  41ac84:	mov    edi,0x886f6010
  41ac89:	inc    esp
  41ac8a:	jae    0x41acff
  41ac8c:	jae    0x41ac9c
  41ac8e:	test   DWORD PTR [ebp-0x7e],0x83641734
  41ac95:	(bad)  
  41ac97:	imul   ebp,DWORD PTR [eax],0x89697305
  41ac9d:	add    dl,BYTE PTR [edi]
  41ac9f:	jo     0x41ad10
  41aca1:	pcmpeqd mm6,QWORD PTR [edi+0x79]
  41aca5:	push   cs
  41aca6:	arpl   WORD PTR [eax],ax
  41aca8:	push   eax
  41aca9:	xor    BYTE PTR [edi+0x20],al
  41acac:	xor    bh,dl
  41acae:	jne    0x41ad24
  41acb0:	daa    
  41acb1:	sub    DWORD PTR [eax+0x74],ebx
  41acb4:	mov    bh,0x27
  41acb6:	imul   esp,DWORD PTR [eax],0x747527ce
  41acbc:	dec    esi
  41acbd:	push   ds
  41acbe:	push   ebx
  41acbf:	push   eax
  41acc0:	out    dx,al
  41acc1:	cli    
  41acc2:	arpl   WORD PTR [ebx+0x12],si
  41acc5:	imul   esp,DWORD PTR es:[ecx+0x2],0x2e6e6a26
  41accd:	add    eax,0x2ef7458
  41acd2:	push   0x67
  41acd4:	idiv   ecx
  41acd6:	rcl    BYTE PTR [ebx-0x39],0x19
  41acda:	repz jno 0x41ac6d
  41acdd:	push   edi
  41acde:	fldcw  WORD PTR [ebx+0x0]
	...
  41ace9:	add    BYTE PTR [eax],al
  41aceb:	add    BYTE PTR [edx-0x54b9fcf4],dl
  41acf1:	imul   edx,ebx,0xd7059267
  41acf7:	call   FWORD PTR [edx-0x708f0cdb]
  41acfd:	push   ds
  41acfe:	xlat   BYTE PTR ds:[ebx]
  41acff:	imul   esp,DWORD PTR [ecx],0x18
  41ad02:	hlt    
  41ad03:	test   sp,0x65d7
  41ad08:	imul   ecx,ecx,0xffffffe1
  41ad0b:	jno    0x41ad5f
  41ad0d:	out    0xc5,al
  41ad0f:	ds and al,0x5f
  41ad12:	shr    DWORD PTR [ecx+edx*2-0x32],cl
  41ad16:	mov    BYTE PTR [ebp+0x2b],0xca
  41ad1a:	mov    ecx,0xc6d9516d
  41ad1f:	push   eax
  41ad20:	sbb    ah,dh
  41ad22:	std    
  41ad23:	outs   dx,DWORD PTR ds:[esi]
  41ad24:	idiv   DWORD PTR [ebp-0x49e98c1f]
  41ad2a:	fnstenv [ecx-0x9]
  41ad2d:	in     eax,0xc0
  41ad2f:	push   ebx
  41ad30:	daa    
  41ad31:	ret    
  41ad32:	fsub   DWORD PTR [ebp+0x18]
  41ad35:	cli    
  41ad36:	shl    DWORD PTR [edx+0x5],cl
  41ad39:	test   al,0xed
  41ad3b:	jno    0x41ad68
  41ad3d:	mov    bl,0xf3
  41ad3f:	jae    0x41ad62
  41ad41:	mov    dl,0xe5
  41ad43:	imul   esi,edi,0x67
  41ad46:	in     eax,dx
  41ad47:	ja     0x41ad33
  41ad49:	dec    esp
  41ad4a:	shl    BYTE PTR [esi-0x35],0x9e
  41ad4e:	add    ah,BYTE PTR [esi+0x0]
	...
  41ad59:	add    BYTE PTR [eax],al
  41ad5b:	add    bl,cl
  41ad5d:	dec    ecx
  41ad5e:	repz retw 
  41ad61:	sahf   
  41ad62:	sbb    BYTE PTR [edi-0x2f],ah
  41ad65:	bound  edx,QWORD PTR [esi]
  41ad67:	add    al,0xb1
  41ad69:	sbb    DWORD PTR [eax+edi*8],0xde008ec7
  41ad70:	xchg   ebp,eax
  41ad71:	inc    edx
  41ad72:	sub    esi,edx
  41ad74:	xchg   ebx,eax
  41ad75:	(bad)  
  41ad76:	cld    
  41ad77:	call   0xd8611022
  41ad7c:	rcl    BYTE PTR [esi+0x3884f306],0x1
  41ad83:	loop   0x41ad85
  41ad85:	stos   DWORD PTR es:[edi],eax
  41ad86:	mov    dl,0xe4
  41ad88:	mov    BYTE PTR [esi-0x3e],dh
  41ad8b:	shl    BYTE PTR [eax+edx*4-0x37],cl
  41ad8f:	fcomp  QWORD PTR [ebx-0x59]
  41ad92:	lods   al,BYTE PTR ds:[esi]
  41ad93:	(bad)  [esi+0x76]
  41ad96:	shr    al,cl
  41ad98:	sub    BYTE PTR [edi-0x4e],dh
  41ad9b:	repnz shl BYTE PTR [ecx-0x71bb1a40],1
  41ada2:	into   
  41ada3:	icebp  
  41ada4:	push   ebp
  41ada5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ada6:	scas   eax,DWORD PTR es:[edi]
  41ada7:	fcom   QWORD PTR [edi+0x76]
  41adaa:	int    0xc0
  41adac:	push   ecx
  41adad:	jp     0x41ad7c
  41adaf:	ret    0x781b
  41adb2:	popf   
  41adb3:	clc    
  41adb4:	and    al,0x7c
  41adb6:	(bad)  
  41adb7:	out    0x3c,al
  41adb9:	scas   al,BYTE PTR es:[edi]
  41adba:	xchg   esi,eax
  41adbb:	(bad)  [esi]
  41adbd:	jl     0x41ae3c
  41adbf:	iret   
	...
  41adcc:	xor    ch,BYTE PTR [edi+0x7626039d]
  41add2:	inc    edi
  41add3:	clc    
  41add4:	add    eax,DWORD PTR [ebx+ebx*2+0x4694cce7]
  41addb:	loope  0x41adb8
  41addd:	inc    edx
  41adde:	sbb    ah,bl
  41ade0:	iret   
  41ade1:	inc    edx
  41ade2:	sub    al,0xdd
  41ade4:	int    0x92
  41ade6:	xor    bh,al
  41ade8:	fnstenv [esi+eax*1+0x4e]
  41adec:	daa    
  41aded:	scas   eax,DWORD PTR es:[edi]
  41adee:	ins    DWORD PTR es:[edi],dx
  41adef:	aas    
  41adf0:	sub    eax,0x1845767d
  41adf5:	xchg   esp,eax
  41adf6:	jno    0x41ae35
  41adf8:	dec    ebp
  41adf9:	ja     0x41ae5f
  41adfb:	sbb    dh,bl
  41adfd:	mov    bl,0x6d
  41adff:	adc    eax,0xfa520618
  41ae04:	adc    DWORD PTR [ebp+ecx*2+0x608afb25],edx
  41ae0b:	add    eax,0xe9737f14
  41ae10:	and    al,0x77
  41ae12:	je     0x41adf1
  41ae14:	hlt    
  41ae15:	pushf  
  41ae16:	addr16 int 0xd8
  41ae19:	xor    BYTE PTR [ecx+ebp*8+0xa],0x90
  41ae1e:	ins    BYTE PTR es:[edi],dx
  41ae1f:	(bad)  
  41ae20:	hlt    
  41ae21:	(bad)  
  41ae22:	ins    DWORD PTR es:[edi],dx
  41ae23:	xlat   BYTE PTR ds:[ebx]
  41ae24:	ror    DWORD PTR [ebp+0x40fb0b39],1
  41ae2a:	daa    
  41ae2b:	div    esp
  41ae2d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ae2e:	pop    ebp
  41ae2f:	enter  0x0,0x0
	...
  41ae3b:	add    BYTE PTR [edx-0xb5e9e7f],ah
  41ae41:	cdq    
  41ae42:	jge    0x41ae0d
  41ae44:	mov    edx,0xa4e956b1
  41ae49:	xchg   ebx,eax
  41ae4a:	sbb    DWORD PTR [bx+di+0x7282],0xffffffd7
  41ae50:	mov    ebp,0xf2e96d77
  41ae55:	mov    ch,BYTE PTR [ecx-0x7b]
  41ae58:	hlt    
  41ae59:	mov    ebp,DWORD PTR [edi]
  41ae5b:	mov    ch,0xba
  41ae5d:	lahf   
  41ae5e:	xor    eax,0x2952c61e
  41ae63:	sub    esp,DWORD PTR [ebx*4-0x60d0fbcc]
  41ae6a:	adc    DWORD PTR ds:[eax],eax
  41ae6d:	dec    esi
  41ae6e:	xor    al,0x0
  41ae70:	pop    eax
  41ae71:	and    ebp,DWORD PTR [ecx+esi*1]
  41ae74:	dec    ebx
  41ae75:	dec    edi
  41ae76:	ds inc esi
  41ae78:	pop    ds
  41ae79:	push   ds
  41ae7a:	xor    DWORD PTR [ecx],esi
  41ae7c:	sbb    ah,BYTE PTR [ecx]
  41ae7e:	xor    bh,BYTE PTR [ebp+0x4e]
  41ae81:	(bad)  
  41ae82:	imul   esi,DWORD PTR [esi-0x1],0x3050531c
  41ae89:	std    
  41ae8a:	fs add dl,dl
  41ae8d:	leave  
  41ae8e:	dec    eax
  41ae8f:	push   ebx
  41ae90:	add    ebp,edi
  41ae92:	jb     0x41af0b
  41ae94:	call   DWORD PTR [eax]
  41ae96:	fs pop esp
  41ae98:	shl    BYTE PTR [edi],1
  41ae9a:	jno    0x41aefd
  41ae9c:	fsubr  DWORD PTR [edx]
  41ae9e:	inc    edi
	...
  41aeab:	add    al,ah
  41aead:	daa    
  41aeae:	fs popa 
  41aeb0:	mov    ebp,0xb0756a03
  41aeb5:	or     al,0xf7
  41aeb7:	push   edx
  41aeb8:	scas   eax,DWORD PTR es:[edi]
  41aeb9:	and    al,0x73
  41aebb:	add    dh,cl
  41aebd:	pusha  
  41aebe:	push   es
  41aebf:	add    dh,bl
  41aec1:	pusha  
  41aec2:	push   es
  41aec3:	add    al,al
  41aec5:	pusha  
  41aec6:	cmp    ch,BYTE PTR [edi]
  41aec8:	into   
  41aec9:	xor    al,0x56
  41aecb:	dec    edi
  41aecc:	jle    0x41af21
  41aece:	pop    ecx
  41aecf:	push   eax
  41aed0:	jg     0x41aee5
  41aed2:	jbe    0x41af4b
  41aed4:	jno    0x41aee8
  41aed6:	arpl   WORD PTR [edx],si
  41aed8:	mov    ?,WORD PTR [edx*2+0x5a307a4d]
  41aedf:	push   eax
  41aee0:	jg     0x41aef5
  41aee2:	jbe    0x41af5b
  41aee4:	jno    0x41aef8
  41aee6:	arpl   WORD PTR [edx],si
  41aee8:	mov    ?,WORD PTR [edi+edi*1]
  41aeeb:	dec    ebp
  41aeec:	iret   
  41aeed:	cs pop edx
  41aeef:	push   eax
  41aef0:	mov    edi,0xf777760b
  41aef5:	pushf  
  41aef6:	lock arpl WORD PTR ds:0xc3481efa,sp
  41aefd:	ror    BYTE PTR gs:[edx-0x2a],cl
  41af01:	mov    dl,0xde
  41af03:	pop    esp
  41af04:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41af05:	call   0x63f0:0x44c870ef
  41af0c:	add    eax,0x5c02fa
	...
  41af19:	add    BYTE PTR [eax],al
  41af1b:	add    dl,al
  41af1d:	jb     0x41aefe
  41af1f:	jno    0x41aeb9
  41af21:	push   0x35ab65db
  41af26:	shl    DWORD PTR [esi-0x77],cl
  41af29:	push   ebp
  41af2a:	(bad)  [esp+eax*4+0x19]
  41af2e:	scas   eax,DWORD PTR es:[edi]
  41af2f:	adc    WORD PTR [esi+0x22],0x964b
  41af35:	(bad)  
  41af36:	fdivp  st(7),st
  41af38:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41af39:	sub    al,0xe5
  41af3b:	jae    0x41afa5
  41af3d:	sbb    esi,ecx
  41af3f:	bound  ecx,QWORD PTR [ebx-0x41]
  41af42:	fldenv [eax+0x65]
  41af45:	(bad)
  41af48:	push   ecx
  41af49:	(bad)  
  41af4a:	mov    esi,0xd7145e54
  41af4f:	ins    BYTE PTR es:[edi],dx
  41af50:	inc    eax
  41af51:	leave  
  41af52:	and    cl,BYTE PTR [esi+ecx*2-0x34]
  41af56:	in     eax,0x1f
  41af58:	sub    bl,bl
  41af5a:	fldcw  WORD PTR [ebx-0x9]
  41af5d:	lds    edi,FWORD PTR [ebp-0x2417eb9a]
  41af63:	jo     0x41af75
  41af65:	fsubr  st(6),st
  41af67:	pop    ebx
  41af68:	inc    eax
  41af69:	repz fsub QWORD PTR [ebx+0x20]
  41af6d:	(bad)  
  41af6e:	lock pop ds
  41af70:	cmp    bl,bl
  41af72:	fldcw  WORD PTR [ebx-0x9]
  41af75:	call   0x63451555
  41af7a:	pop    eax
  41af7b:	in     eax,0xe6
  41af7d:	jge    0x41afb8
  41af7f:	mov    ecx,0x0
	...
  41af8c:	sar    DWORD PTR [edi+0x5b],1
  41af8f:	(bad)  
  41af91:	jae    0x41afd2
  41af93:	lock mov esp,0xd4da56ab
  41af99:	jae    0x41afcb
  41af9b:	imul   eax
  41af9d:	xchg   ebp,eax
  41af9e:	dec    esi
  41af9f:	(bad)  
  41afa1:	bound  ebx,QWORD PTR [ebx+ebx*8]
  41afa4:	ror    BYTE PTR [esi+0x7da6e518],cl
  41afaa:	cmp    esi,edx
  41afac:	xchg   ecx,eax
  41afad:	jne    0x41afdd
  41afaf:	mul    BYTE PTR [edi+ecx*4-0x591939d7]
  41afb6:	sbb    al,0xe1
  41afb8:	test   BYTE PTR [esi-0x706c25ea],cl
  41afbe:	in     eax,dx
  41afbf:	mov    edi,0xc00e8ea1
  41afc4:	xchg   ecx,eax
  41afc5:	nop
  41afc6:	in     eax,dx
  41afc7:	mov    edi,0xbfce7751
  41afcc:	push   ecx
  41afcd:	jne    0x41af7a
  41afcf:	in     al,0x4f
  41afd1:	arpl   WORD PTR [edx-0x3470ae1c],bx
  41afd7:	fimul  DWORD PTR [eax+0x51]
  41afda:	(bad)  
  41afdb:	fst    DWORD PTR [ecx+0x63]
  41afde:	pushf  
  41afdf:	ficomp DWORD PTR [edx+0x77]
  41afe2:	mov    al,0xe4
  41afe4:	inc    esi
  41afe5:	mov    cl,al
  41afe7:	shl    DWORD PTR [ebx],cl
  41afe9:	xchg   BYTE PTR [eax-0x6383b9dd],cl
  41afef:	out    dx,eax
	...
  41affc:	adc    eax,0x30239c90
  41b001:	xchg   ecx,eax
  41b002:	mov    WORD PTR [ebx],es
  41b004:	daa    
  41b005:	test   BYTE PTR [ecx-0x25],dh
  41b008:	mov    BYTE PTR [esi-0x7c6266fa],bl
  41b00e:	addr16 call 0x5048:0x4c72738b
  41b016:	ins    DWORD PTR es:[edi],dx
  41b017:	dec    edi
  41b018:	dec    esp
  41b019:	add    al,BYTE PTR [edi+0x5b]
  41b01c:	xchg   DWORD PTR ds:[eax+ecx*2+0x40],esi
  41b021:	add    al,BYTE PTR [ebx+0x48]
  41b024:	inc    edi
  41b025:	mov    eax,ds:0x8a474856
  41b02a:	push   es
  41b02b:	dec    eax
  41b02c:	pop    edx
  41b02d:	and    DWORD PTR [edi+0x34],0x1d
  41b031:	jbe    0x41b0a6
  41b033:	xlat   BYTE PTR ds:[ebx]
  41b034:	dec    ebp
  41b035:	nop
  41b036:	ins    DWORD PTR es:[edi],dx
  41b037:	jmp    0xaa9626c
  41b03c:	lea    esp,ds:[ebp+0x0]
  41b040:	aas    
  41b041:	add    dl,BYTE PTR [esi+edx*1+0x15]
  41b045:	jbe    0x41b0b6
  41b047:	or     BYTE PTR [ecx],al
  41b049:	test   DWORD PTR [edx+0x20],ebx
  41b04c:	sbb    eax,0x17047483
  41b051:	mov    DWORD PTR [ecx-0x38],ecx
  41b054:	int    0x8d
  41b056:	push   es
  41b057:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b058:	shl    DWORD PTR [eax-0x7a4a3a93],0x62
  41b05f:	fild   DWORD PTR [eax]
	...
  41b069:	add    BYTE PTR [eax],al
  41b06b:	add    BYTE PTR [ecx-0x3f168c8e],bh
  41b071:	test   BYTE PTR [ebx-0x2f],ah
  41b074:	scas   al,BYTE PTR es:[edi]
  41b075:	mov    gs,WORD PTR [edx-0x3a]
  41b078:	xlat   BYTE PTR ds:[ebx]
  41b079:	js     0x41b081
  41b07b:	cdq    
  41b07c:	lahf   
  41b07d:	xchg   ecx,eax
  41b07e:	push   ebx
  41b07f:	mov    WORD PTR [edx-0xb649e89],gs
  41b085:	xchg   edx,eax
  41b086:	addr16 cdq 
  41b088:	les    ecx,FWORD PTR [esi-0x6d0b6a8c]
  41b08e:	add    BYTE PTR ds:0x6625,cl
  41b093:	arpl   WORD PTR [ecx+0x10],di
  41b096:	imul   esi,DWORD PTR [esi+ecx*4+0x15],0x45e706a
  41b09e:	jbe    0x41b113
  41b0a0:	rcr    DWORD PTR [ebx],1
  41b0a2:	jne    0x41b108
  41b0a4:	pop    esi
  41b0a5:	push   ss
  41b0a6:	ins    BYTE PTR es:[edi],dx
  41b0a7:	je     0x41b067
  41b0a9:	pop    ss
  41b0aa:	fs jb  0x41b06d
  41b0ad:	and    DWORD PTR [ebp+0x0],esi
  41b0b0:	in     eax,dx
  41b0b1:	sbb    DWORD PTR [ebx+0x70],esi
  41b0b4:	out    dx,al
  41b0b5:	sbb    esi,DWORD PTR [ebp+0x74]
  41b0b8:	dec    esi
  41b0b9:	push   ss
  41b0ba:	ins    BYTE PTR es:[edi],dx
  41b0bb:	je     0x41b0bb
  41b0bd:	and    eax,0x12096366
  41b0c2:	imul   esi,DWORD PTR [esi+ebx*1+0x16],0x16fe746c
  41b0ca:	pop    eax
  41b0cb:	jae    0x41b0ca
  41b0cd:	repz imul esi,DWORD PTR [edx+0x0],0x0
  41b0d5:	add    BYTE PTR [eax],al
  41b0d7:	add    BYTE PTR [eax],al
  41b0d9:	add    BYTE PTR [eax],al
  41b0db:	add    BYTE PTR [edx],al
  41b0dd:	addr16 push edi
  41b0df:	arpl   bp,di
  41b0e1:	sbb    esi,DWORD PTR [esi+ebp*2+0x2]
  41b0e5:	pop    ebx
  41b0e6:	gs data16 icebp 
  41b0e9:	push   di
  41b0eb:	arpl   WORD PTR [ebp-0x3d918be5],di
  41b0f1:	pop    edx
  41b0f2:	gs mov ax,0x5a64
  41b0f7:	inc    edx
  41b0f8:	scas   eax,DWORD PTR es:[edi]
  41b0f9:	adc    BYTE PTR [ecx+eiz*2-0x59],cl
  41b0fd:	sbb    bh,dh
  41b0ff:	pop    ebx
  41b100:	bound  ebx,QWORD PTR [esp+eiz*2]
  41b103:	and    BYTE PTR [ebp+eax*1+0x17ce2173],cl
  41b10a:	push   0x66
  41b10c:	xchg   edx,eax
  41b10d:	repz push edi
  41b10f:	jb     0x41b184
  41b111:	sub    BYTE PTR [ebp+0x49],dl
  41b114:	idiv   DWORD PTR [ebp-0x18f0ac42]
  41b11a:	and    al,BYTE PTR [edx+0x16]
  41b11d:	jle    0x41b143
  41b11f:	add    BYTE PTR [ecx+esi*8],ah
  41b122:	in     al,0x73
  41b124:	or     bl,ch
  41b126:	lock bound ebx,QWORD PTR [ebx]
  41b129:	fdivr  QWORD PTR [ebx-0x25c22cad]
  41b12f:	bound  edx,QWORD PTR [edi]
  41b131:	dec    esp
  41b132:	loope  0x41b1a7
  41b134:	push   ss
  41b135:	ss aad 0x70
  41b138:	rcr    BYTE PTR [ebx-0x5124e00d],cl
  41b13e:	repnz ins BYTE PTR es:[edi],dx
	...
  41b14c:	ret    
  41b14d:	or     eax,ecx
  41b14f:	ins    BYTE PTR es:[edi],dx
  41b150:	lds    esp,FWORD PTR [ecx+ebx*8-0x39962f93]
  41b157:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  41b159:	outs   dx,BYTE PTR ds:[esi]
  41b15a:	jecxz  0x41b1cf
  41b15c:	cwde   
  41b15d:	pop    ebx
  41b15e:	jmp    0xcf9d6262
  41b163:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  41b165:	push   0xffffffdd
  41b167:	inc    ebx
  41b168:	sahf   
  41b169:	sti    
  41b16a:	add    al,BYTE PTR [ecx-0x68]
  41b16d:	not    al
  41b16f:	jae    0x41b168
  41b171:	dec    ebp
  41b172:	in     eax,0x65
  41b174:	xchg   esi,eax
  41b175:	test   dh,0x73
  41b178:	test   ebp,0x6d1771d9
  41b17e:	and    eax,0xbdbcf764
  41b183:	push   ebx
  41b184:	inc    edi
  41b185:	push   0xffffffc5
  41b187:	push   0x56
  41b189:	adc    ecx,edi
  41b18b:	pop    ds
  41b18c:	ss xlat BYTE PTR es:[ebx]
  41b18f:	jno    0x41b1eb
  41b191:	mov    ebp,0xdf25fff3
  41b196:	(bad)  
  41b197:	dec    edi
  41b198:	xlat   BYTE PTR ds:[ebx]
  41b199:	bound  edi,QWORD PTR [eax+eiz*8-0xe7d86da]
  41b1a0:	mov    al,ds:0xe7d3a0af
  41b1a5:	inc    edx
  41b1a6:	mov    esp,0x8a7906e0
  41b1ab:	icebp  
  41b1ac:	mov    BYTE PTR [edi+0xd3a8],ch
	...
  41b1ba:	add    BYTE PTR [eax],al
  41b1bc:	mov    DWORD PTR [edx-0x66],0xcd7515f2
  41b1c3:	mov    ch,0xd1
  41b1c5:	lea    ecx,[edx+0x4]
  41b1c8:	(bad)  
  41b1c9:	lods   eax,DWORD PTR ds:[esi]
  41b1ca:	xor    esp,edx
  41b1cc:	add    BYTE PTR [esi+0x42e6e15c],dl
  41b1d2:	pop    ss
  41b1d3:	in     eax,0xdd
  41b1d5:	test   ebp,ebp
  41b1d7:	mov    ch,0xba
  41b1d9:	xchg   esi,eax
  41b1da:	sbb    eax,0x4e8db424
  41b1df:	(bad)  
  41b1e1:	inc    edx
  41b1e2:	cs loopne 0x41b179
  41b1e5:	je     0x41b1f1
  41b1e7:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b1e9:	bound  esp,QWORD PTR [edi]
  41b1eb:	mov    dh,0xc4
  41b1ed:	xchg   edx,eax
  41b1ee:	int    0xd0
  41b1f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b1f1:	test   DWORD PTR [ebx],ebx
  41b1f3:	and    al,0xc1
  41b1f5:	adc    DWORD PTR [edx],0x27ad08e1
  41b1fb:	shl    BYTE PTR [eax-0x791ee3be],1
  41b201:	js     0x41b205
  41b203:	repnz lock stos DWORD PTR es:[edi],eax
  41b206:	mov    dl,0xc4
  41b208:	cmp    BYTE PTR [ebx-0x44],al
  41b20b:	loopne 0x41b273
  41b20d:	jne    0x41b1d9
  41b20f:	icebp  
  41b210:	fsubr  DWORD PTR [ebx+0x4340c49a]
  41b216:	call   0x21b6:0xd7155f2
  41b21d:	nop
  41b21e:	push   es
  41b21f:	int3   
	...
  41b22c:	hlt    
  41b22d:	mov    eax,ds:0x8ad3c869
  41b232:	push   es
  41b233:	mov    cl,0xb8
  41b235:	xchg   edx,eax
  41b236:	push   esi
  41b237:	leave  
  41b238:	(bad)  
  41b239:	jae    0x41b29c
  41b23b:	fwait
  41b23c:	hlt    
  41b23d:	stos   BYTE PTR es:[edi],al
  41b23e:	push   edx
  41b23f:	mov    ch,0xa4
  41b241:	pop    esi
  41b242:	push   ebx
  41b243:	mov    WORD PTR [esi-0x2b849e88],es
  41b249:	xchg   ecx,eax
  41b24a:	push   esp
  41b24b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b24c:	hlt    
  41b24d:	xchg   edx,eax
  41b24e:	inc    edi
  41b24f:	cdq    
  41b250:	and    eax,0x485a5143
  41b255:	je     0x41b25d
  41b257:	xor    BYTE PTR [eax+0x2809563d],ch
  41b25d:	jae    0x41b2c0
  41b25f:	pop    ebx
  41b260:	sti    
  41b261:	stos   BYTE PTR es:[edi],al
  41b262:	push   edx
  41b263:	sbb    eax,0x5065a923
  41b268:	pop    ds
  41b269:	pop    esi
  41b26a:	push   ecx
  41b26b:	cmp    bl,BYTE PTR [eax]
  41b26d:	je     0x41b295
  41b26f:	pop    ds
  41b270:	adc    al,0x89
  41b272:	popa   
  41b273:	jmp    0x399444e4
  41b278:	push   0xd3056d9d
  41b27d:	xchg   ebx,eax
  41b27e:	popa   
  41b27f:	sbb    esp,DWORD PTR [ecx]
  41b281:	xor    DWORD PTR [ecx+ebp*8+0x27],0xdb1952a9
  41b289:	xchg   ecx,eax
  41b28a:	jae    0x41b298
  41b28c:	add    eax,0x19f6fe
	...
  41b299:	add    BYTE PTR [eax],al
  41b29b:	add    BYTE PTR [edx-0x3cf6cc53],ch
  41b2a1:	mov    ?,WORD PTR [ebp+edx*8-0xc]
  41b2a5:	xchg   ebx,eax
  41b2a6:	dec    ecx
  41b2a7:	mov    ebp,0xbe565dc4
  41b2ac:	(bad)  
  41b2ad:	jno    0x41b2b5
  41b2af:	add    BYTE PTR [edi-0x11afc84c],al
  41b2b5:	push   ss
  41b2b6:	push   0x72
  41b2b8:	jp     0x41b31b
  41b2ba:	push   es
  41b2bb:	push   eax
  41b2bc:	xchg   ecx,eax
  41b2bd:	adc    DWORD PTR [esi],esi
  41b2bf:	and    BYTE PTR [esi+0x0],ch
  41b2c2:	jbe    0x41b337
  41b2c4:	mov    DWORD PTR [esi],edx
  41b2c6:	jne    0x41b32c
  41b2c8:	mov    esp,0x5f4d3f61
  41b2cd:	adc    DWORD PTR [edi],edx
  41b2cf:	push   eax
  41b2d0:	jg     0x41b2c4
  41b2d2:	jne    0x41b34b
  41b2d4:	jno    0x41b2c9
  41b2d6:	bound  esi,QWORD PTR [edx]
  41b2d8:	mov    ?,WORD PTR [edi+0x418e5448]
  41b2de:	push   esi
  41b2df:	popa   
  41b2e0:	int    0xf3
  41b2e2:	jno    0x41b353
  41b2e4:	mov    esp,0x16003502
  41b2e9:	adc    edx,DWORD PTR [ebx+0x50]
  41b2ec:	repz add DWORD PTR [eax+0x6c],esp
  41b2f0:	(bad)  
  41b2f1:	push   ss
  41b2f2:	pop    eax
  41b2f3:	jae    0x41b2f2
  41b2f5:	punpckhdq mm6,QWORD PTR [edx-0x56]
  41b2f9:	xor    BYTE PTR [esi],al
  41b2fb:	push   ebx
  41b2fc:	adc    edx,DWORD PTR [ebx]
  41b2fe:	inc    edi
  41b2ff:	and    BYTE PTR [eax],al
	...
  41b309:	add    BYTE PTR [eax],al
  41b30b:	add    dh,ch
  41b30d:	add    DWORD PTR [esi+0x73],esi
  41b310:	or     DWORD PTR [eax],ebx
  41b312:	jne    0x41b378
  41b314:	cmp    al,0x61
  41b316:	push   es
  41b317:	push   eax
  41b318:	icebp  
  41b319:	push   ss
  41b31a:	ss and dh,ch
  41b31d:	add    DWORD PTR [esi+0x73],esi
  41b320:	or     DWORD PTR [esi],edx
  41b322:	jne    0x41b388
  41b324:	push   cs
  41b325:	mov    eax,0x470e414b
  41b32a:	push   esi
  41b32b:	popa   
  41b32c:	int    0xf3
  41b32e:	jno    0x41b39f
  41b330:	mov    esp,0xf74df71c
  41b335:	ret    
  41b336:	(bad)  
  41b337:	dec    edi
  41b338:	pop    ss
  41b339:	mov    edx,0xbd4470e3
  41b33e:	shl    DWORD PTR [ecx+0x5b],1
  41b341:	or     bh,BYTE PTR [ebx+0x22da2353]
  41b347:	push   eax
  41b348:	push   ss
  41b349:	mov    ecx,0xd81874f5
  41b34e:	(bad)  
  41b34f:	inc    DWORD PTR [ebp-0x31]
  41b352:	(bad)  
  41b353:	dec    edi
  41b354:	xlat   BYTE PTR ds:[ebx]
  41b355:	mov    ecx,0xd50470e3
  41b35a:	shl    DWORD PTR [ecx+0x13],1
  41b35d:	or     al,BYTE PTR [ebx]
  41b35f:	push   ecx
  41b360:	adc    ah,ah
  41b362:	out    0x74,al
  41b364:	push   ss
  41b365:	js     0x41b33f
  41b367:	pop    ebx
  41b368:	ret    0xe5e2
  41b36b:	jno    0x41b345
  41b36d:	cwde   
  41b36e:	repz add BYTE PTR gs:[eax],al
	...
  41b37a:	add    BYTE PTR [eax],al
  41b37c:	jmp    0x41b3bb
  41b37e:	leave  
  41b37f:	ins    DWORD PTR es:[edi],dx
  41b380:	jecxz  0x41b330
  41b382:	shr    BYTE PTR [ebp-0x26],1
  41b385:	xchg   ebp,eax
  41b386:	and    bh,BYTE PTR [edi]
  41b388:	aam    0xa8
  41b38a:	repz jb 0x41b35e
  41b38d:	xor    eax,0xa3d64b22
  41b392:	loope  0x41b3f8
  41b394:	call   0xf368:0x943ec637
  41b39b:	jb     0x41b32e
  41b39d:	push   ebp
  41b39e:	iret   
  41b39f:	jmp    FWORD PTR [edi-0x74921293]
  41b3a5:	(bad)  
  41b3a6:	fisub  WORD PTR [esi-0x6e]
  41b3a9:	clc    
  41b3aa:	add    dl,BYTE PTR [ecx-0x70]
  41b3ad:	arpl   si,bx
  41b3af:	je     0x41b347
  41b3b1:	imul   ebp
  41b3b3:	pop    ebx
  41b3b4:	inc    edx
  41b3b5:	arpl   di,bx
  41b3b7:	jno    0x41b411
  41b3b9:	arpl   sp,bx
  41b3bb:	repnz pop edx
  41b3bd:	ja     0x41b378
  41b3bf:	rcl    BYTE PTR [edx-0x7b],cl
  41b3c2:	(bad)  
  41b3c3:	out    0x55,al
  41b3c5:	lahf   
  41b3c6:	cwde   
  41b3c7:	fadd   DWORD PTR [edi+ecx*4-0x30]
  41b3cb:	repnz dec edi
  41b3cd:	lahf   
  41b3ce:	test   al,0xd0
  41b3d0:	xor    DWORD PTR [ebx-0x52],eax
  41b3d3:	out    0x17,al
  41b3d5:	mov    WORD PTR [edx-0x4dbcdb0f],?
  41b3db:	in     al,0x12
  41b3dd:	add    BYTE PTR [eax+0xe8],0x0
	...
  41b3ec:	es lahf 
  41b3ee:	scas   al,BYTE PTR es:[edi]
  41b3ef:	out    0x17,al
  41b3f1:	mov    WORD PTR [edx-0x128ffb0f],ss
  41b3f7:	mov    dh,0x13
  41b3f9:	test   DWORD PTR [ecx-0x26],esi
  41b3fc:	sbb    DWORD PTR [ecx-0x76],esi
  41b3ff:	mov    edi,0xd58c89bd
  41b404:	fld    TBYTE PTR [edi+0x50]
  41b407:	jmp    0x86ca:0xed309ee4
  41b40e:	inc    eax
  41b40f:	fcmovnb st,st(7)
  41b411:	inc    edx
  41b412:	pop    ss
  41b413:	mov    eax,0xd63a9fac
  41b418:	mov    BYTE PTR [ebp-0x7a5d27b9],0x3b
  41b41f:	xlat   BYTE PTR ds:[ebx]
  41b420:	cdq    
  41b421:	mov    esi,DWORD PTR [edi]
  41b423:	rol    bl,0x89
  41b426:	psubsb mm2,QWORD PTR [ebx-0x53dbe38d]
  41b42d:	test   DWORD PTR [edi+edx*8],ebx
  41b430:	mov    cl,0x83
  41b432:	push   es
  41b433:	repnz xchg ebx,eax
  41b435:	inc    edx
  41b436:	sbb    al,0xd9
  41b438:	xchg   esi,eax
  41b439:	outs   dx,DWORD PTR ds:[esi]
  41b43a:	push   es
  41b43b:	xlat   BYTE PTR ds:[ebx]
  41b43c:	test   BYTE PTR [ebp-0x5548fbfa],al
  41b442:	je     0x41b442
  41b444:	fiadd  WORD PTR [ecx-0x61363396]
  41b44a:	dec    ecx
  41b44b:	rcl    cl,1
  41b44d:	je     0x41b4b6
  41b44f:	fiadd  DWORD PTR [eax]
	...
  41b459:	add    BYTE PTR [eax],al
  41b45b:	add    ch,al
  41b45d:	xor    BYTE PTR [edx+0x9],0xa4
  41b461:	jne    0x41b4d5
  41b463:	aad    0xc5
  41b465:	xchg   DWORD PTR [ebx+0x9],ebp
  41b468:	stos   BYTE PTR es:[edi],al
  41b469:	mov    BYTE PTR [edx-0x34],dh
  41b46c:	retf   0x6188
  41b46f:	mov    ch,0xd4
  41b471:	xchg   ebx,eax
  41b472:	popa   
  41b473:	popf   
  41b474:	enter  0x6881,0x86
  41b478:	sar    edx,0x53
  41b47b:	xchg   BYTE PTR [esi-0x5d77908a],bl
  41b481:	test   DWORD PTR [edx-0x4c],ebx
  41b484:	xchg   ebx,eax
  41b485:	xor    DWORD PTR [esi+ecx*4-0x5f],0xffffff87
  41b48a:	pusha  
  41b48b:	jge    0x41b43d
  41b48d:	(bad)  
  41b48e:	ins    DWORD PTR es:[edi],dx
  41b48f:	jg     0x41b4e1
  41b491:	xchg   DWORD PTR [edi+0x5a],ebp
  41b494:	sbb    ebp,DWORD PTR [ecx+0x75323d52]
  41b49a:	je     0x41b4f7
  41b49c:	pop    eax
  41b49d:	mov    BYTE PTR [edx+0x37],dh
  41b4a0:	push   eax
  41b4a1:	je     0x41b516
  41b4a3:	push   eax
  41b4a4:	inc    esi
  41b4a5:	mov    BYTE PTR [edx+0x16],bl
  41b4a8:	dec    esp
  41b4a9:	mov    BYTE PTR [edx+0x46],ah
  41b4ac:	dec    esi
  41b4ad:	jae    0x41b4d5
  41b4af:	sbb    al,0x10
  41b4b1:	jae    0x41b526
  41b4b3:	or     BYTE PTR [esi],cl
  41b4b5:	sub    DWORD PTR [eax+0x6],0xb7193d3
  41b4bc:	sub    dh,BYTE PTR [ecx+0x73]
  41b4bf:	adc    eax,0x0
	...
  41b4cc:	adc    BYTE PTR [ebp+0x10de005a],cl
  41b4d2:	push   0x66
  41b4d4:	out    0xf2,eax
  41b4d6:	arpl   WORD PTR [ebx+0xa],si
  41b4d9:	adc    al,0x74
  41b4db:	je     0x41b4c7
  41b4dd:	repnz imul ebp,DWORD PTR [ebx-0x32],0xc26669ae
  41b4e5:	sbb    bl,BYTE PTR [eax+0x72]
  41b4e8:	ret    
  41b4e9:	mov    ecx,0xfbd694b
  41b4ee:	push   0x73
  41b4f0:	test   eax,0x875c730b
  41b4f5:	repz jb 0x41b55d
  41b4f8:	ins    BYTE PTR es:[edi],dx
  41b4f9:	repz arpl WORD PTR [esi+edi*8+0x25],si
  41b4fe:	data16 arpl WORD PTR [ecx-0x518b96f0],cx
  41b505:	sub    BYTE PTR [eax+0x6e],bl
  41b508:	jg     0x41b514
  41b50a:	fs jb  0x41b4ab
  41b50d:	adc    dh,BYTE PTR [esp+esi*2+0x6a]
  41b511:	repnz imul ebp,DWORD PTR [ebx-0x72],0x7d6337b9
  41b519:	bnd jae 0x41b58a
  41b51c:	loop   0x41b52c
  41b51e:	imul   DWORD PTR [eax-0x4e]
  41b521:	add    DWORD PTR [ecx+0x74],ebp
  41b524:	(bad)  
  41b525:	or     al,0x60
  41b527:	arpl   WORD PTR [edi+0x86f601a],di
  41b52d:	pop    edi
  41b52e:	pop    edi
  41b52f:	add    BYTE PTR fs:[eax],al
	...
  41b53a:	add    BYTE PTR [eax],al
  41b53c:	mov    bl,0xf4
  41b53e:	jb     0x41b5a9
  41b540:	add    bl,BYTE PTR [esi]
  41b542:	ins    BYTE PTR es:[edi],dx
  41b543:	addr16 in al,dx
  41b545:	pop    esi
  41b546:	pop    edi
  41b547:	outs   dx,BYTE PTR ds:[esi]
  41b548:	mov    bl,0x1a
  41b54a:	outs   dx,WORD PTR ds:[esi]
  41b54c:	or     ecx,DWORD PTR [edx]
  41b54e:	pop    ss
  41b54f:	jae    0x41b544
  41b551:	adc    BYTE PTR [ecx+0x65],dh
  41b554:	neg    DWORD PTR [ebp+0x22]
  41b557:	jo     0x41b4ef
  41b559:	pop    esp
  41b55a:	shl    DWORD PTR [eax+edx*4-0x3],1
  41b55e:	fidiv  WORD PTR [eax-0x9]
  41b561:	push   0x616373cf
  41b566:	cmc    
  41b567:	push   0x60e16b17
  41b56c:	push   eax
  41b56d:	pop    ss
  41b56e:	cmc    
  41b56f:	jae    0x41b588
  41b571:	daa    
  41b572:	in     al,0x6d
  41b574:	push   esi
  41b575:	sub    eax,esp
  41b577:	jno    0x41b590
  41b579:	sbb    ah,ah
  41b57b:	jo     0x41b5c1
  41b57d:	mov    ecx,0xbd5371f5
  41b582:	add    ah,BYTE PTR [edi+0x1b]
  41b585:	daa    
  41b586:	cmc    
  41b587:	jae    0x41b5a7
  41b589:	scas   al,BYTE PTR es:[edi]
  41b58a:	jmp    0x41b5ee
  41b58c:	and    al,0xa
  41b58e:	fisub  DWORD PTR [edx]
  41b590:	out    0x1,eax
  41b592:	mov    ebx,0xf19da2a
  41b597:	pop    eax
  41b598:	ficomp DWORD PTR [esi]
  41b59a:	adc    esi,DWORD PTR [edi+ebx*1]
  41b59d:	mov    eax,cr6
	...
  41b5ac:	(bad)
  41b5af:	xor    BYTE PTR ds:0x272327d2,ah
  41b5b5:	mov    esp,0x5c2722ba
  41b5ba:	mov    edx,0xba5c2722
  41b5bf:	and    al,BYTE PTR [edi]
  41b5c1:	pop    esp
  41b5c2:	mov    edx,0xba5c0722
  41b5c7:	and    al,BYTE PTR [edi]
  41b5c9:	cld    
  41b5ca:	mov    edx,0xea4df77a
  41b5cf:	jb     0x41b572
  41b5d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b5d2:	in     eax,dx
  41b5d3:	jno    0x41b56a
  41b5d5:	mov    ds:0x62f763d4,al
  41b5da:	inc    ecx
  41b5db:	mov    eax,0xe8076d90
  41b5e0:	xchg   ebp,eax
  41b5e1:	je     0x41b5ee
  41b5e3:	in     eax,dx
  41b5e4:	xchg   BYTE PTR [esi-0x13],bh
  41b5e7:	sbb    eax,0x35eda2bb
  41b5ec:	scas   eax,DWORD PTR es:[edi]
  41b5ed:	mov    ds:0xa33d71ed,al
  41b5f2:	in     eax,dx
  41b5f3:	(bad)  
  41b5f4:	cmp    DWORD PTR [ebx-0x5cbaf813],esp
  41b5fa:	in     eax,dx
  41b5fb:	sub    eax,0xfeda343
  41b600:	sub    BYTE PTR [ebx-0x5cd2fb13],ah
  41b606:	in     eax,dx
  41b607:	or     bl,BYTE PTR [esi]
  41b609:	mov    ds:0xa31b89ed,eax
  41b60e:	in     eax,dx
  41b60f:	enter  0x0,0x0
	...
  41b61b:	add    BYTE PTR [ebp-0x5d],cl
  41b61e:	in     eax,dx
  41b61f:	(bad)
  41b623:	adc    BYTE PTR ds:0x137eeda3,dl
  41b629:	mov    ds:0xa31bb5ed,eax
  41b62e:	in     eax,dx
  41b62f:	adc    ah,BYTE PTR fs:[ebx-0x5ce70013]
  41b636:	in     eax,dx
  41b637:	jne    0x41b648
  41b639:	mov    ds:0xa2d9f9ed,eax
  41b63e:	in     eax,dx
  41b63f:	add    dh,bl
  41b641:	mov    ds:0xa2cfcded,al
  41b646:	in     eax,dx
  41b647:	inc    ebx
  41b648:	leave  
  41b649:	mov    ds:0xa2e07bed,al
  41b64e:	in     eax,dx
  41b64f:	inc    edx
  41b650:	(bad)  
  41b651:	mov    ds:0xa2cb9eed,al
  41b656:	in     eax,dx
  41b657:	(bad)  
  41b658:	les    esp,FWORD PTR [edx-0x5d566f13]
  41b65e:	push   es
  41b65f:	jmp    0xe98830ef
  41b664:	pop    esi
  41b665:	jnp    0x41b6ad
  41b667:	jmp    0xe9882cc1
  41b66c:	std    
  41b66d:	jnp    0x41b6b5
  41b66f:	jmp    0xe9882cbe
  41b674:	pop    ecx
  41b675:	jne    0x41b6bd
  41b677:	jmp    0xe9879f93
  41b67c:	sub    edx,0x45
  41b67f:	jmp    0x41b684
	...
  41b68c:	stos   DWORD PTR es:[edi],eax
  41b68d:	call   0xdc049fd7
  41b692:	inc    ebp
  41b693:	jmp    0xe9878d87
  41b698:	ins    DWORD PTR es:[edi],dx
  41b699:	xlat   BYTE PTR ds:[ebx]
  41b69a:	inc    ebp
  41b69b:	jmp    0xe9879056
  41b6a0:	xor    ebx,edx
  41b6a2:	inc    ebp
  41b6a3:	jmp    0xe9878f2c
  41b6a8:	lock aam 0x45
  41b6ab:	jmp    0xe9878e7a
  41b6b0:	inc    eax
  41b6b1:	fadd   DWORD PTR [ebp-0x17]
  41b6b4:	(bad)  
  41b6b5:	(bad)  
  41b6b6:	inc    ebp
  41b6b7:	jmp    0xe98779c7
  41b6bc:	(bad)
  41b6bf:	jmp    0xe9877b9b
  41b6c4:	mov    cl,al
  41b6c6:	inc    ebp
  41b6c7:	jmp    0xe9876e9f
  41b6cc:	push   ds
  41b6cd:	and    eax,DWORD PTR [esi-0x17]
  41b6d0:	popf   
  41b6d1:	mov    dh,0x45
  41b6d3:	jmp    0xe987d9aa
  41b6d8:	dec    ebx
  41b6d9:	mov    ch,0x45
  41b6db:	jmp    0xe9876c1c
  41b6e0:	sbb    eax,0x4e0045b5
  41b6e5:	cmp    al,0xb7
  41b6e7:	inc    eax
  41b6e8:	push   ds
  41b6e9:	iret   
  41b6ea:	ret    
  41b6eb:	inc    eax
  41b6ec:	push   ds
  41b6ed:	and    esi,eax
  41b6ef:	inc    eax
	...
  41b6fc:	push   cs
  41b6fd:	sti    
  41b6fe:	ret    
  41b6ff:	inc    eax
  41b700:	push   cs
  41b701:	outs   dx,BYTE PTR ds:[esi]
  41b702:	ret    
  41b703:	inc    eax
  41b704:	push   ds
  41b705:	xor    bl,al
  41b707:	inc    eax
  41b708:	push   ds
  41b709:	sub    cl,al
  41b70b:	inc    eax
  41b70c:	push   cs
  41b70d:	int    0xc0
  41b70f:	inc    eax
  41b710:	push   cs
  41b711:	repz mov esi,0xcdddde40
  41b717:	inc    eax
  41b718:	fidiv  WORD PTR [esi-0x41]
  41b71b:	inc    eax
  41b71c:	into   
  41b71d:	clc    
  41b71e:	int3   
  41b71f:	inc    eax
  41b720:	into   
  41b721:	lahf   
  41b722:	retf   
  41b723:	inc    eax
  41b724:	fdivp  st(2),st
  41b726:	enter  0xde40,0xdc
  41b72a:	mov    BYTE PTR [eax-0x32],0x88
  41b72e:	mov    DWORD PTR [eax-0x32],0x9e40d3a0
  41b735:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b736:	rol    DWORD PTR [eax-0x62],1
  41b739:	push   0xb38e40dc
  41b73e:	fadd   QWORD PTR [eax-0x72]
  41b741:	lahf   
  41b742:	fiadd  DWORD PTR [eax-0x62]
  41b745:	data16 fild DWORD PTR [eax-0x62]
  41b749:	in     al,0xda
  41b74b:	inc    eax
  41b74c:	mov    ss,WORD PTR [ebp+0x1b8e40db]
  41b752:	fld    DWORD PTR [eax+0x5e]
  41b755:	cdq    
  41b756:	fadd   DWORD PTR [eax+0x5e]
  41b759:	or     eax,0x834e40e5
  41b75e:	in     al,0x40
	...
  41b76c:	dec    esi
  41b76d:	repnz in eax,0x40
  41b770:	pop    esi
  41b771:	cwde   
  41b772:	in     eax,0x40
  41b774:	test   DWORD PTR [ebx],0xbb7e42d
  41b77a:	inc    ecx
  41b77b:	out    0xb7,al
  41b77d:	or     edx,DWORD PTR [edi-0x1a]
  41b780:	mov    bh,0xb
  41b782:	adc    eax,0xe90bb7e5
  41b787:	out    0xb7,al
  41b789:	or     edi,DWORD PTR [esp+ebp*8]
  41b78c:	mov    bh,0xb
  41b78e:	cdq    
  41b78f:	out    dx,al
  41b790:	mov    bh,0xb
  41b792:	out    dx,al
  41b793:	repnz mov bh,0xb
  41b796:	int    0xf5
  41b798:	mov    bh,0xb
  41b79a:	add    eax,DWORD PTR [eax]
  41b79c:	test   DWORD PTR [ebx],0x9f70003
  41b7a2:	add    eax,DWORD PTR [eax]
  41b7a4:	test   DWORD PTR [ecx],0x9f70003
  41b7aa:	add    eax,DWORD PTR [eax]
  41b7ac:	test   DWORD PTR [ecx],0x1f5e6bc6
  41b7b2:	jmp    0xe403cf2a
  41b7b7:	jo     0x41b808
  41b7b9:	or     dh,BYTE PTR [esi-0x5029c9ad]
  41b7bf:	push   eax
  41b7c0:	loop   0x41b774
  41b7c2:	(bad)  
  41b7c3:	dec    edi
  41b7c4:	cmp    al,bl
  41b7c6:	scas   al,BYTE PTR es:[edi]
  41b7c7:	sub    dh,BYTE PTR [eax]
  41b7c9:	rol    DWORD PTR [edx],0x23
  41b7cc:	adc    ecx,DWORD PTR [eax+eiz*8]
  41b7cf:	ja     0x41b7d1
	...
  41b7d9:	add    BYTE PTR [eax],al
  41b7db:	add    BYTE PTR [edx],bl
  41b7dd:	or     ah,BYTE PTR [eax]
  41b7df:	xor    ch,al
  41b7e1:	mov    cl,0x2
  41b7e3:	je     0x41b7ea
  41b7e5:	iret   
  41b7e6:	(bad)  
  41b7e8:	and    eax,0xe36bdfd2
  41b7ed:	mov    esi,0x76d462da
  41b7f2:	iret   
  41b7f3:	bound  esi,QWORD PTR [esi-0x2b9e1bf7]
  41b7f9:	bound  ecx,QWORD PTR [ecx+0x2a]
  41b7fc:	aad    0x81
  41b7fe:	push   ecx
  41b7ff:	add    al,0xf0
  41b801:	imul   esp,edx,0xe668ec0d
  41b807:	and    edi,ebp
  41b809:	mov    DWORD PTR [ebx-0x11],edx
  41b80c:	adc    BYTE PTR [esi-0xd],ah
  41b80f:	and    edx,DWORD PTR [ebx-0x7dbbe83]
  41b815:	cmp    eax,0x65d723fe
  41b81a:	repz or al,0x98
  41b81d:	jl     0x41b7ec
  41b81f:	or     al,0xf0
  41b821:	inc    edx
  41b822:	or     bl,ah
  41b824:	cdq    
  41b825:	outs   dx,DWORD PTR ds:[esi]
  41b826:	adc    DWORD PTR [eax+esi*8],esp
  41b829:	inc    edx
  41b82a:	int    0x23
  41b82c:	adc    al,0x32
  41b82e:	int    0x23
  41b830:	lock inc edx
  41b832:	int    0xe2
  41b834:	push   ebx
  41b835:	outs   dx,DWORD PTR ds:[esi]
  41b836:	clc    
  41b837:	and    esi,eax
  41b839:	gs or  eax,0xea885eed
  41b83f:	or     eax,0x0
	...
  41b84c:	pop    ss
  41b84d:	jg     0x41b819
  41b84f:	out    0xe0,eax
  41b851:	imul   ecx,DWORD PTR ds:0xd331424,0xd42d704
  41b85b:	and    al,0xd5
  41b85d:	cmp    eax,0x42d725bc
  41b862:	or     eax,0x8a8b2604
  41b867:	out    0x1c,eax
  41b869:	xor    bl,bl
  41b86b:	sub    DWORD PTR [ebx],edx
  41b86d:	xchg   DWORD PTR [ecx-0x129d08fd],eax
  41b873:	add    esi,edi
  41b875:	(bad)  
  41b876:	in     eax,dx
  41b877:	add    esi,edi
  41b879:	(bad)  
  41b87a:	in     eax,dx
  41b87b:	add    esi,edi
  41b87d:	bound  eax,QWORD PTR [esi]
  41b87f:	jmp    0xe9481b78
  41b884:	hlt    
  41b885:	bound  eax,QWORD PTR [esi]
  41b887:	jmp    0xe9481b80
  41b88c:	hlt    
  41b88d:	bound  eax,QWORD PTR [esi]
  41b88f:	jmp    0xe9481b88
  41b894:	hlt    
  41b895:	bound  eax,QWORD PTR [esi]
  41b897:	jmp    0xe9481b90
  41b89c:	hlt    
  41b89d:	bound  eax,QWORD PTR [esi]
  41b89f:	jmp    0xe9481b98
  41b8a4:	hlt    
  41b8a5:	bound  eax,QWORD PTR [esi]
  41b8a7:	jmp    0xe9481ba0
  41b8ac:	hlt    
  41b8ad:	bound  eax,QWORD PTR [esi]
  41b8af:	jmp    0x41b8b4
	...
  41b8bc:	hlt    
  41b8bd:	bound  eax,QWORD PTR [esi]
  41b8bf:	jmp    0xe9481bb8
  41b8c4:	hlt    
  41b8c5:	bound  eax,QWORD PTR [esi]
  41b8c7:	jmp    0xe9481bc0
  41b8cc:	hlt    
  41b8cd:	bound  eax,QWORD PTR [esi]
  41b8cf:	jmp    0xe9481bc8
  41b8d4:	hlt    
  41b8d5:	bound  eax,QWORD PTR [esi]
  41b8d7:	jmp    0xe9481bd0
  41b8dc:	hlt    
  41b8dd:	bound  eax,QWORD PTR [esi]
  41b8df:	jmp    0xe9481bd8
  41b8e4:	hlt    
  41b8e5:	bound  eax,QWORD PTR [esi]
  41b8e7:	jmp    0xe9481be0
  41b8ec:	hlt    
  41b8ed:	bound  eax,QWORD PTR [esi]
  41b8ef:	jmp    0xe9481be8
  41b8f4:	hlt    
  41b8f5:	bound  eax,QWORD PTR [esi]
  41b8f7:	jmp    0xe9481bf0
  41b8fc:	hlt    
  41b8fd:	bound  eax,QWORD PTR [esi]
  41b8ff:	jmp    0x481bf8
  41b904:	pop    esi
  41b905:	pushw  es
  41b907:	add    BYTE PTR [esi+0x66],bl
  41b90a:	push   es
  41b90b:	add    BYTE PTR [esi+0x66],cl
  41b90e:	push   es
  41b90f:	add    BYTE PTR [esi+0x66],cl
  41b912:	push   es
  41b913:	add    BYTE PTR [esi+0x66],bl
  41b916:	push   es
  41b917:	add    BYTE PTR [esi+0x66],bl
  41b91a:	push   es
  41b91b:	add    BYTE PTR [esi+0x66],cl
  41b91e:	push   es
	...
  41b92b:	add    BYTE PTR [esi+0x66],cl
  41b92e:	push   es
  41b92f:	add    BYTE PTR [esi],bl
  41b931:	pushw  es
  41b933:	add    BYTE PTR [esi],bl
  41b935:	pushw  es
  41b937:	add    BYTE PTR [esi],cl
  41b939:	pushw  es
  41b93b:	add    BYTE PTR [esi],cl
  41b93d:	pushw  es
  41b93f:	add    BYTE PTR [esi],bl
  41b941:	pushw  es
  41b943:	add    BYTE PTR [esi],bl
  41b945:	pushw  es
  41b947:	add    BYTE PTR [esi],cl
  41b949:	pushw  es
  41b94b:	add    BYTE PTR [esi],cl
  41b94d:	pushw  es
  41b94f:	add    dh,bl
  41b951:	gs push es
  41b953:	add    dh,bl
  41b955:	gs push es
  41b957:	add    dh,cl
  41b959:	gs push es
  41b95b:	add    dh,cl
  41b95d:	gs push es
  41b95f:	add    dh,bl
  41b961:	gs push es
  41b963:	add    dh,bl
  41b965:	gs push es
  41b967:	add    dh,cl
  41b969:	gs push es
  41b96b:	add    dh,cl
  41b96d:	gs push es
  41b96f:	add    BYTE PTR [esi-0x61fff99b],bl
  41b975:	gs push es
  41b977:	add    BYTE PTR [esi-0x71fff99b],cl
  41b97d:	gs push es
  41b97f:	add    BYTE PTR [esi-0x61fff99b],bl
  41b985:	gs push es
  41b987:	add    bh,dh
  41b989:	sti    
  41b98a:	add    al,BYTE PTR [eax]
  41b98c:	idiv   ebx
  41b98e:	add    al,BYTE PTR [eax]
	...
  41b99c:	idiv   ebx
  41b99e:	add    al,BYTE PTR [eax]
  41b9a0:	idiv   ebx
  41b9a2:	add    al,BYTE PTR [eax]
  41b9a4:	idiv   ebx
  41b9a6:	add    al,BYTE PTR [eax]
  41b9a8:	idiv   ebx
  41b9aa:	add    al,BYTE PTR [eax]
  41b9ac:	idiv   ebx
  41b9ae:	add    al,BYTE PTR [eax]
  41b9b0:	idiv   ebx
  41b9b2:	add    al,BYTE PTR [eax]
  41b9b4:	idiv   ebx
  41b9b6:	add    al,BYTE PTR [eax]
  41b9b8:	idiv   ebx
  41b9ba:	add    al,BYTE PTR [eax]
  41b9bc:	idiv   ebx
  41b9be:	add    al,BYTE PTR [eax]
  41b9c0:	idiv   ebx
  41b9c2:	add    al,BYTE PTR [eax]
  41b9c4:	idiv   ebx
  41b9c6:	add    al,BYTE PTR [eax]
  41b9c8:	idiv   ebx
  41b9ca:	add    al,BYTE PTR [eax]
  41b9cc:	idiv   ebx
  41b9ce:	add    al,BYTE PTR [eax]
  41b9d0:	idiv   ebx
  41b9d2:	add    al,BYTE PTR [eax]
  41b9d4:	idiv   ebx
  41b9d6:	add    al,BYTE PTR [eax]
  41b9d8:	idiv   ebx
  41b9da:	add    al,BYTE PTR [eax]
  41b9dc:	idiv   ecx
  41b9de:	add    al,BYTE PTR [eax]
  41b9e0:	idiv   ecx
  41b9e2:	add    al,BYTE PTR [eax]
  41b9e4:	idiv   ecx
  41b9e6:	add    al,BYTE PTR [eax]
  41b9e8:	idiv   ecx
  41b9ea:	add    al,BYTE PTR [eax]
  41b9ec:	idiv   ecx
  41b9ee:	add    al,BYTE PTR [eax]
  41b9f0:	idiv   ecx
  41b9f2:	add    al,BYTE PTR [eax]
  41b9f4:	idiv   ecx
  41b9f6:	add    al,BYTE PTR [eax]
  41b9f8:	idiv   ecx
  41b9fa:	add    al,BYTE PTR [eax]
  41b9fc:	idiv   ecx
  41b9fe:	add    al,BYTE PTR [eax]
	...
  41ba0c:	idiv   ecx
  41ba0e:	add    al,BYTE PTR [eax]
  41ba10:	idiv   ecx
  41ba12:	add    al,BYTE PTR [eax]
  41ba14:	idiv   ecx
  41ba16:	add    al,BYTE PTR [eax]
  41ba18:	mul    DWORD PTR [edx-0x13]
  41ba1b:	add    esi,edi
  41ba1d:	(bad)  
  41ba1e:	in     eax,dx
  41ba1f:	add    esi,edi
  41ba21:	(bad)  
  41ba22:	in     eax,dx
  41ba23:	add    esi,edi
  41ba25:	(bad)  
  41ba26:	out    dx,al
  41ba27:	and    al,0xb4
  41ba29:	xchg   DWORD PTR [esi-0x54],esi
  41ba2c:	cmp    al,0x0
  41ba2e:	div    DWORD PTR [esi]
  41ba30:	popf   
  41ba31:	retf   
  41ba32:	jbe    0x41b9e3
  41ba34:	es push ebx
  41ba36:	data16 lods al,BYTE PTR ds:[esi]
  41ba38:	cmp    al,0x0
  41ba3a:	out    dx,al
  41ba3b:	and    dh,BYTE PTR [edi+eax*4+0x62b7046d]
  41ba42:	or     eax,0xe562e704
  41ba47:	add    edi,ebx
  41ba49:	(bad)  
  41ba4a:	jmp    0x41ba4f
  41ba4c:	sub    al,dh
  41ba4e:	in     al,dx
  41ba4f:	add    esi,DWORD PTR [edi+0x63]
  41ba52:	in     eax,dx
  41ba53:	add    esi,DWORD PTR [edi-0x28fc129e]
  41ba59:	(bad)  
  41ba5a:	in     eax,dx
  41ba5b:	add    esp,edi
  41ba5d:	(bad)  
  41ba5e:	in     eax,dx
  41ba5f:	add    ebp,edi
  41ba61:	(bad)  
  41ba62:	in     eax,dx
  41ba63:	add    esi,ebx
  41ba65:	(bad)  
  41ba66:	in     eax,dx
  41ba67:	add    esi,ebp
  41ba69:	(bad)  
  41ba6a:	in     eax,dx
  41ba6b:	add    ebp,eax
  41ba6d:	out    dx,eax
  41ba6e:	in     al,dx
  41ba6f:	add    DWORD PTR [eax],0x0
	...
  41ba7a:	add    BYTE PTR [eax],al
  41ba7c:	mul    DWORD PTR [edx-0x13]
  41ba7f:	ret    
  41ba80:	fsubr  st,st(7)
  41ba82:	in     al,dx
  41ba83:	and    esi,edi
  41ba85:	(bad)  
  41ba86:	in     eax,dx
  41ba87:	repz enter 0xecef,0xb
  41ba8c:	mul    DWORD PTR [edx-0x13]
  41ba8f:	(bad)  
  41ba90:	mov    eax,0xf701ecef
  41ba95:	(bad)  
  41ba96:	in     eax,dx
  41ba97:	add    al,0xf7
  41ba99:	bound  ebp,QWORD PTR [ebp+0x4]
  41ba9c:	mul    DWORD PTR [edx+0x6]
  41ba9f:	test   eax,0x90662f4
  41baa4:	sti    
  41baa5:	bound  eax,QWORD PTR [esi]
  41baa7:	stc    
  41baa8:	hlt    
  41baa9:	bound  eax,QWORD PTR [esi]
  41baab:	icebp  
  41baac:	hlt    
  41baad:	bound  eax,QWORD PTR [esi]
  41baaf:	in     eax,dx
  41bab0:	hlt    
  41bab1:	bound  eax,QWORD PTR [esi]
  41bab3:	jmp    0x41baa9
  41bab5:	bound  eax,QWORD PTR [esi]
  41bab7:	call   0xc1481db0
  41babc:	add    al,0x3b
  41babe:	shl    DWORD PTR es:[edi+eiz*2+0x6],1
  41bac3:	mov    al,0xeb
  41bac5:	inc    edi
  41bac6:	and    eax,0x5684200
  41bacb:	and    esp,ebp
  41bacd:	cmp    al,0x24
  41bacf:	repz inc esi
  41bad1:	pop    ecx
  41bad2:	add    al,0x12
  41bad4:	add    al,0x3a
  41bad6:	and    eax,DWORD PTR [edi]
  41bad8:	stc    
  41bad9:	inc    eax
  41bada:	and    bh,bl
  41badc:	adc    bl,BYTE PTR [ebp+0x0]
  41badf:	hlt    
	...
  41baec:	pop    es
  41baed:	cmp    al,0x21
  41baef:	int3   
  41baf0:	pop    es
  41baf1:	pop    esp
  41baf2:	add    ebp,esp
  41baf4:	clc    
  41baf5:	ds and bh,ch
  41baf8:	adc    BYTE PTR [ebx+0x2],bl
  41bafb:	repnz add eax,0xf6e8035a
  41bb01:	data16 add cl,dh
  41bb04:	(bad)  
  41bb05:	pop    esi
  41bb06:	or     dh,ch
  41bb08:	jmp    0x41bb5d
  41bb0a:	adc    esi,ebx
  41bb0c:	fisttp DWORD PTR [ebx+0x1a]
  41bb0f:	fadd   st(4),st
  41bb11:	pop    esp
  41bb12:	psubsw mm1,mm0
  41bb15:	fs sbb ebp,edi
  41bb18:	not    DWORD PTR [esi+0xd]
  41bb1b:	inc    esi
  41bb1d:	pop    ebx
  41bb1e:	add    esi,eax
  41bb20:	mov    cl,0x5f
  41bb22:	add    BYTE PTR [eax],al
  41bb24:	xchg   esp,eax
  41bb25:	icebp  
  41bb26:	or     al,BYTE PTR [ecx]
  41bb28:	push   es
  41bb29:	push   edx
  41bb2a:	sbb    BYTE PTR [eax+esi*8],ah
  41bb2d:	pop    esp
  41bb2e:	sbb    esp,DWORD PTR [edi]
  41bb30:	mov    WORD PTR [esi+0x26],es
  41bb33:	das    
  41bb34:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bb35:	push   edx
  41bb36:	and    BYTE PTR [edi],dh
  41bb38:	scas   eax,DWORD PTR es:[edi]
  41bb39:	pop    esi
  41bb3a:	sub    ebp,DWORD PTR [ecx]
  41bb3c:	lahf   
  41bb3d:	inc    ecx
  41bb3e:	sbb    bl,BYTE PTR [edi]
  41bb40:	pop    esi
  41bb41:	out    dx,al
  41bb42:	test   DWORD PTR [eax],0x6625e
  41bb48:	dec    esi
  41bb49:	(bad)  
  41bb4a:	idiv   edi
  41bb4c:	dec    edx
  41bb4d:	out    dx,al
  41bb4e:	test   DWORD PTR [eax],0x0
	...
  41bb5c:	pop    edx
  41bb5d:	(bad)  
  41bb5e:	test   DWORD PTR [eax],0xfff7ee5a
  41bb64:	pop    edx
  41bb65:	bound  eax,QWORD PTR [esi]
  41bb67:	add    BYTE PTR [esi+0x62],cl
  41bb6a:	idiv   edi
  41bb6c:	push   ds
  41bb6d:	out    dx,al
  41bb6e:	idiv   bh
  41bb70:	push   ds
  41bb71:	out    dx,al
  41bb72:	test   DWORD PTR [eax],0xf7ee1a
  41bb78:	push   cs
  41bb79:	out    dx,al
  41bb7a:	idiv   bh
  41bb7c:	sbb    ch,dh
  41bb7e:	test   BYTE PTR [eax],0x1a
  41bb81:	(bad)  
  41bb82:	test   DWORD PTR [eax],0x106620e
  41bb88:	or     ah,BYTE PTR [edx+0x6]
  41bb8b:	add    dl,bl
  41bb8d:	in     eax,dx
  41bb8e:	idiv   bh
  41bb90:	fsubp  st(5),st
  41bb92:	test   BYTE PTR [eax],0xce
  41bb95:	in     eax,dx
  41bb96:	test   BYTE PTR [eax],0xce
  41bb99:	in     eax,dx
  41bb9a:	idiv   edi
  41bb9c:	fsubp  st(5),st
  41bb9e:	idiv   edi
  41bba0:	fisub  WORD PTR [ecx-0x9]
  41bba3:	add    dh,cl
  41bba5:	popa   
  41bba6:	test   DWORD PTR [eax],0xfff6fff7
  41bbac:	test   DWORD PTR [edi],0xffa8ff03
  41bbb2:	add    al,BYTE PTR [eax]
  41bbb4:	test   BYTE PTR [edi],0x3
  41bbb7:	add    dh,dh
  41bbb9:	inc    DWORD PTR [edx]
  41bbbb:	call   DWORD PTR [eax+0x2fb]
	...
  41bbc9:	add    BYTE PTR [eax],al
  41bbcb:	add    bh,dh
  41bbcd:	push   esi
  41bbcf:	inc    DWORD PTR [eax+0x78fef707]
  41bbd5:	sti    
  41bbd6:	add    al,BYTE PTR [eax]
  41bbd8:	idiv   bl
  41bbda:	add    bh,bh
  41bbdc:	push   0xf7fef6ff
  41bbe1:	pop    es
  41bbe2:	add    eax,DWORD PTR [eax]
  41bbe4:	idiv   ebx
  41bbe6:	add    bh,bh
  41bbe8:	idiv   ebx
  41bbea:	idiv   dh
  41bbec:	idiv   ebx
  41bbee:	add    al,BYTE PTR [eax]
  41bbf0:	idiv   bl
  41bbf2:	add    al,BYTE PTR [eax]
  41bbf4:	idiv   bl
  41bbf6:	idiv   bh
  41bbf8:	xor    BYTE PTR [edi],al
  41bbfa:	add    edi,edi
  41bbfc:	idiv   ebx
  41bbfe:	add    bh,bh
  41bc00:	and    bl,bh
  41bc02:	idiv   dh
  41bc04:	sbb    bh,bh
  41bc06:	add    al,BYTE PTR [eax]
  41bc08:	idiv   bl
  41bc0a:	idiv   bh
  41bc0c:	or     bh,bh
  41bc0e:	add    al,BYTE PTR [eax]
  41bc10:	test   DWORD PTR [edi],0xfff7fff7
  41bc16:	idiv   dh
  41bc18:	lock push es
  41bc1a:	idiv   esi
  41bc1c:	idiv   ebp
  41bc1e:	add    bh,bh
  41bc20:	loopne 0x41bc1c
  41bc22:	add    bh,bh
  41bc24:	idiv   ebp
  41bc26:	idiv   bh
  41bc28:	test   DWORD PTR ds:0x62f60003,0xffe9
	...
  41bc3a:	add    BYTE PTR [eax],al
  41bc3c:	shr    ah,0xe0
  41bc3f:	(bad)  
  41bc40:	mov    ecx,0xb1ffecec
  41bc45:	arpl   cx,sp
  41bc47:	jmp    FWORD PTR [eax-0x5f001314]
  41bc4d:	arpl   bp,bp
  41bc4f:	call   FWORD PTR [eax-0x8fc129d]
  41bc55:	(bad)  
  41bc57:	add    ecx,DWORD PTR [eax-0x7e001314]
  41bc5d:	in     al,dx
  41bc5e:	in     al,dx
  41bc5f:	add    esi,edi
  41bc61:	(bad)  
  41bc62:	jmp    0xcda52c6a
  41bc67:	add    DWORD PTR [edi],0xffffffe3
  41bc6a:	in     al,dx
  41bc6b:	xor    edi,0xffffffe2
  41bc6e:	in     al,dx
  41bc6f:	xor    edi,0x62
  41bc72:	int    0x83
  41bc74:	out    0x62,eax
  41bc76:	in     eax,dx
  41bc77:	add    esp,edi
  41bc79:	bound  ecx,QWORD PTR ds:0xd62f704
  41bc7f:	add    al,0xe7
  41bc81:	loop   0x41bc8f
  41bc83:	test   bh,dh
  41bc85:	loop   0x41bc93
  41bc87:	add    al,0xf7
  41bc89:	loop   0x41bc97
  41bc8b:	test   BYTE PTR [edi],al
  41bc8d:	jecxz  0x41bc7b
  41bc8f:	add    DWORD PTR [edi],0xffffffe3
  41bc92:	in     al,dx
  41bc93:	add    esi,edi
  41bc95:	loop   0x41bc83
  41bc97:	xor    edi,0xffffffe2
  41bc9a:	in     al,dx
  41bc9b:	add    esp,edi
  41bc9d:	(bad)  
  41bc9e:	int    0x3
	...
  41bcac:	mul    DWORD PTR [edx-0x33]
  41bcaf:	add    eax,DWORD PTR [edi]
  41bcb1:	jecxz  0x41bc9f
  41bcb3:	add    DWORD PTR [edi],0x63
  41bcb6:	int    0x3
  41bcb8:	pop    es
  41bcb9:	arpl   bp,cx
  41bcbb:	xor    edi,0xffffffe2
  41bcbe:	add    eax,0x662f4e9
  41bcc3:	jmp    0xe9c81fbc
  41bcc8:	je     0x41bd2c
  41bcca:	push   es
  41bccb:	or     DWORD PTR [ebx+0x52],esi
  41bcce:	push   es
  41bccf:	jmp    0x9c80fc8
  41bcd4:	repz push edx
  41bcd6:	push   es
  41bcd7:	or     ebx,edi
  41bcd9:	bound  eax,QWORD PTR [esi+0x662f4e9]
  41bcdf:	jmp    0x9480f58
  41bce4:	jae    0x41bd48
  41bce6:	push   es
  41bce7:	jmp    0xe9c80f60
  41bcec:	hlt    
  41bced:	push   edx
  41bcee:	xchg   cl,cl
  41bcf0:	je     0x41bd54
  41bcf2:	push   es
  41bcf3:	jmp    0xc9481fec
  41bcf8:	je     0x41bd4c
  41bcfa:	push   es
  41bcfb:	leave  
  41bcfc:	hlt    
  41bcfd:	push   edx
  41bcfe:	xchg   cl,ch
  41bd00:	hlt    
  41bd01:	push   edx
  41bd02:	push   es
  41bd03:	leave  
  41bd04:	je     0x41bd68
  41bd06:	xchg   cl,ch
  41bd08:	hlt    
  41bd09:	push   edx
  41bd0a:	xchg   cl,ch
  41bd0c:	je     0x41bd60
  41bd0e:	xchg   cl,ch
	...
  41bd1c:	je     0x41bd80
  41bd1e:	push   es
  41bd1f:	jmp    0xe9c81018
  41bd24:	je     0x41bd88
  41bd26:	xchg   BYTE PTR [ecx],cl
  41bd28:	repz bound eax,QWORD PTR [esi]
  41bd2b:	or     DWORD PTR [ebx+0x52],edi
  41bd2e:	xchg   BYTE PTR [ecx],cl
  41bd30:	jae    0x41bd84
  41bd32:	push   es
  41bd33:	leave  
  41bd34:	hlt    
  41bd35:	bound  eax,QWORD PTR [esi]
  41bd37:	jmp    0xe9481fb0
  41bd3c:	hlt    
  41bd3d:	bound  eax,QWORD PTR [esi+0x66374c9]
  41bd43:	add    dh,cl
  41bd45:	out    0x15,al
  41bd47:	or     dh,0x66
  41bd4a:	push   ss
  41bd4b:	add    BYTE PTR [esi-0x417ff99a],bh
  41bd51:	pushw  ss
  41bd53:	add    dh,ch
  41bd55:	fiadd  WORD PTR ds:0x65eee80
  41bd5b:	cmp    dh,0x5e
  41bd5e:	push   ss
  41bd5f:	add    BYTE PTR [esi-0x71ffea1a],bl
  41bd65:	pushw  es
  41bd67:	add    BYTE PTR [esi-0x17ffa1a],cl
  41bd6d:	fiadd  WORD PTR ds:0x6669e00
  41bd73:	sub    BYTE PTR [esi-0x517fe99a],0xe6
  41bd7a:	adc    eax,0x15e65e80
	...
  41bd8b:	add    BYTE PTR [esi+0x60],dl
  41bd8e:	push   es
  41bd8f:	add    BYTE PTR [esi+0x60],cl
  41bd92:	add    al,0x8
  41bd94:	dec    esi
  41bd95:	pushw  es
  41bd97:	add    BYTE PTR [esi+0x66],dl
  41bd9a:	add    al,0x8
  41bd9c:	pop    esi
  41bd9d:	pusha  
  41bd9e:	push   es
  41bd9f:	or     BYTE PTR [esi+0x66],cl
  41bda2:	push   es
  41bda3:	add    BYTE PTR [esi+0x60],al
  41bda6:	add    al,0x0
  41bda8:	push   ds
  41bda9:	pusha  
  41bdaa:	push   es
  41bdab:	or     BYTE PTR [esi],dl
  41bdad:	data16 add al,0x0
  41bdb0:	es pushw es
  41bdb3:	or     BYTE PTR [esi],ah
  41bdb5:	pushw  es
  41bdb7:	or     BYTE PTR [esi],bl
  41bdb9:	data16 add al,0x0
  41bdbc:	push   ss
  41bdbd:	pusha  
  41bdbe:	add    al,0x8
  41bdc0:	push   es
  41bdc1:	data16 add al,0x0
  41bdc4:	push   cs
  41bdc5:	data16 add al,0x8
  41bdc8:	test   DWORD PTR [ebx],0xfbf70001
  41bdce:	add    al,BYTE PTR [eax]
  41bdd0:	out    dx,eax
  41bdd1:	repz add al,BYTE PTR [eax]
  41bdd4:	idiv   ebx
  41bdd6:	add    BYTE PTR [edx],al
  41bdd8:	(bad)  
  41bdd9:	sti    
  41bdda:	add    BYTE PTR [eax],al
  41bddc:	idiv   ebx
  41bdde:	add    BYTE PTR [edx],al
  41bde0:	idiv   ebx
  41bde2:	add    al,BYTE PTR [edx]
  41bde4:	out    dx,eax
  41bde5:	repz add al,BYTE PTR [edx]
  41bde8:	inc    DWORD PTR [ebx]
  41bdea:	add    DWORD PTR [edx],eax
  41bdec:	test   DWORD PTR [ebx],0x1
	...
  41bdfa:	add    BYTE PTR [eax],al
  41bdfc:	out    dx,eax
  41bdfd:	sti    
  41bdfe:	add    BYTE PTR [edx],al
  41be00:	idiv   ebx
  41be02:	add    al,BYTE PTR [edx]
  41be04:	test   DWORD PTR [ebx],0x3ff0001
  41be0a:	add    eax,DWORD PTR [eax]
  41be0c:	div    ebx
  41be0e:	add    BYTE PTR [edx],al
  41be10:	out    dx,eax
  41be11:	sti    
  41be12:	add    BYTE PTR [eax],al
  41be14:	idiv   ebx
  41be16:	add    al,BYTE PTR [eax]
  41be18:	(bad)  
  41be19:	sti    
  41be1a:	add    BYTE PTR [edx],al
  41be1c:	out    dx,eax
  41be1d:	sti    
  41be1e:	add    al,BYTE PTR [eax]
  41be20:	out    dx,eax
  41be21:	repz add al,BYTE PTR [edx]
  41be24:	test   DWORD PTR [ebx],0xfbf70001
  41be2a:	add    al,BYTE PTR [edx]
  41be2c:	idiv   ebx
  41be2e:	add    BYTE PTR [edx],al
  41be30:	out    dx,eax
  41be31:	sti    
  41be32:	add    BYTE PTR [eax],al
  41be34:	(bad)  
  41be35:	sti    
  41be36:	add    al,BYTE PTR [eax]
  41be38:	idiv   ebx
  41be3a:	add    BYTE PTR [eax],al
  41be3c:	div    ebx
  41be3e:	add    al,BYTE PTR [edx]
  41be40:	div    ebx
  41be42:	add    BYTE PTR [edx],al
  41be44:	(bad)  
  41be45:	sti    
  41be46:	add    BYTE PTR [eax],al
  41be48:	inc    DWORD PTR [ebx]
  41be4a:	add    eax,DWORD PTR [eax]
  41be4c:	out    dx,eax
  41be4d:	(bad)  
  41be4e:	in     eax,dx
  41be4f:	add    eax,0x3ed62f7
  41be54:	mul    DWORD PTR [edx-0x1b]
  41be57:	add    esi,ebp
  41be59:	pop    edx
  41be5a:	in     eax,0x5
  41be5c:	neg    DWORD PTR [edx-0x13]
  41be5f:	add    eax,DWORD PTR [eax]
	...
  41be69:	add    BYTE PTR [eax],al
  41be6b:	add    ch,dh
  41be6d:	(bad)  
  41be6e:	in     eax,dx
  41be6f:	add    esi,edi
  41be71:	pop    edx
  41be72:	in     eax,0x5
  41be74:	cmc    
  41be75:	pop    edx
  41be76:	in     eax,0x3
  41be78:	mul    DWORD PTR [edx-0xb]
  41be7b:	add    eax,0x5ed62f5
  41be80:	cmc    
  41be81:	(bad)  
  41be82:	in     eax,0x3
  41be84:	neg    DWORD PTR [edx-0x13]
  41be87:	add    esi,ebp
  41be89:	pop    edx
  41be8a:	cmc    
  41be8b:	add    eax,0x5f55af7
  41be90:	mul    DWORD PTR [edx-0x13]
  41be93:	add    esi,ebp
  41be95:	pop    edx
  41be96:	in     eax,0x5
  41be98:	cmc    
  41be99:	(bad)  
  41be9a:	cmc    
  41be9b:	add    esi,edi
  41be9d:	(bad)  
  41be9e:	cmc    
  41be9f:	add    esi,ebp
  41bea1:	pop    edx
  41bea2:	in     eax,dx
  41bea3:	add    eax,0x23ee62f5
  41bea8:	ja     0x41bf0d
  41beaa:	outs   dx,BYTE PTR ds:[esi]
  41beab:	and    esi,edi
  41bead:	bound  ebp,QWORD PTR [esi+0x23]
  41beb0:	mul    DWORD PTR [edx+0x6d]
  41beb3:	add    esi,edi
  41beb5:	bound  ebp,QWORD PTR [ebp+0x23]
  41beb8:	ja     0x41bf1d
  41beba:	outs   dx,BYTE PTR ds:[esi]
  41bebb:	add    al,0x77
  41bebd:	arpl   si,bp
  41bebf:	add    esi,DWORD PTR [edi+0x63]
  41bec2:	out    dx,al
  41bec3:	and    esi,edi
  41bec5:	(bad)  
  41bec6:	in     eax,dx
  41bec7:	add    esi,edi
  41bec9:	(bad)  
  41beca:	in     eax,dx
  41becb:	and    esi,DWORD PTR [edi+0x63]
  41bece:	in     eax,dx
  41becf:	and    eax,DWORD PTR [eax]
	...
  41bed9:	add    BYTE PTR [eax],al
  41bedb:	add    BYTE PTR [edi+0x63],dh
  41bede:	push   es
  41bedf:	push   0x6805e2d3
  41bee4:	sti    
  41bee5:	bound  eax,QWORD PTR [esi]
  41bee7:	jmp    0x694821e0
  41beec:	sti    
  41beed:	loop   0x41bef4
  41beef:	call   0xe847a1e8
  41bef4:	hlt    
  41bef5:	bound  eax,QWORD PTR [esi]
  41bef7:	jmp    0xe9482210
  41befc:	hlt    
  41befd:	loop   0x41bf04
  41beff:	call   0x6947a218
  41bf04:	sti    
  41bf05:	bound  eax,QWORD PTR [esi]
  41bf07:	jmp    0xe847a200
  41bf0c:	aam    0x62
  41bf0e:	push   es
  41bf0f:	imul   edx,ebx,0xfb680662
  41bf15:	loop   0x41bf1c
  41bf17:	call   0x69482210
  41bf1c:	(bad)  [edx+0x6]
  41bf1f:	imul   esi,ebx,0xd4e905e2
  41bf25:	bound  eax,QWORD PTR [esi]
  41bf27:	imul   edx,ebx,0x1b6805e2
  41bf2d:	jecxz  0x41bf34
  41bf2f:	push   0x690662f3
  41bf34:	sti    
  41bf35:	loop   0x41bf3c
  41bf37:	call   0xe947a230
  41bf3c:	adc    al,0xe3
  41bf3e:	add    eax,0x68
	...
  41bf4b:	add    BYTE PTR [ebx],dl
  41bf4d:	jecxz  0x41bf54
  41bf4f:	push   0xe90662fb
  41bf54:	hlt    
  41bf55:	bound  eax,QWORD PTR [esi]
  41bf57:	jmp    0xe9482250
  41bf5c:	aam    0xe2
  41bf5e:	add    eax,0x662d469
  41bf63:	add    BYTE PTR [esi-0x60ff799d],cl
  41bf69:	arpl   WORD PTR [esi+0x6631f00],ax
  41bf6f:	add    BYTE PTR [edi],cl
  41bf71:	inc    ebx
  41bf72:	xchg   BYTE PTR [eax],al
  41bf74:	pop    DWORD PTR [ebx+0x6]
  41bf77:	add    BYTE PTR [edi+0x42],bl
  41bf7a:	push   es
  41bf7b:	add    BYTE PTR [esi+0x62],bl
  41bf7e:	push   es
  41bf7f:	add    BYTE PTR [edi+0x42],cl
  41bf82:	xchg   BYTE PTR [eax],al
  41bf84:	dec    edi
  41bf85:	bound  eax,QWORD PTR [esi]
  41bf87:	add    bh,bl
  41bf89:	bound  eax,QWORD PTR [esi]
  41bf8b:	add    dh,bl
  41bf8d:	inc    edx
  41bf8e:	push   es
  41bf8f:	add    bh,cl
  41bf91:	bound  eax,QWORD PTR [esi+0x642cf00]
  41bf97:	add    BYTE PTR [esi],bl
  41bf99:	inc    edx
  41bf9a:	xchg   BYTE PTR [eax],al
  41bf9c:	pop    ds
  41bf9d:	bound  eax,QWORD PTR [esi+0x6428f00]
  41bfa3:	add    BYTE PTR [esi],cl
  41bfa5:	inc    edx
  41bfa6:	push   es
  41bfa7:	add    BYTE PTR [esi-0x60ff799e],bl
  41bfad:	inc    edx
  41bfae:	xchg   BYTE PTR [eax],al
	...
  41bfbc:	push   cs
  41bfbd:	bound  eax,QWORD PTR [esi]
  41bfbf:	add    BYTE PTR [esi+0x5e008662],cl
  41bfc5:	inc    edx
  41bfc6:	push   es
  41bfc7:	add    dh,bl
  41bfc9:	inc    ecx
  41bfca:	xchg   BYTE PTR [eax],al
  41bfcc:	dec    esi
  41bfcd:	pop    edi
  41bfce:	push   es
  41bfcf:	add    BYTE PTR [esi+0x5f],cl
  41bfd2:	push   cs
  41bfd3:	add    bl,BYTE PTR [esi+0x62]
  41bfd6:	push   cs
  41bfd7:	add    bl,BYTE PTR [esi+0x5f]
  41bfda:	push   es
  41bfdb:	inc    edx
  41bfdc:	dec    esi
  41bfdd:	bound  ecx,QWORD PTR [esi]
  41bfdf:	add    BYTE PTR [esi+0x61],cl
  41bfe2:	push   es
  41bfe3:	add    BYTE PTR [esi],bl
  41bfe5:	bound  eax,QWORD PTR [esi]
  41bfe7:	inc    eax
  41bfe8:	idiv   ebx
  41bfea:	add    cl,BYTE PTR [eax]
  41bfec:	cmc    
  41bfed:	sti    
  41bfee:	add    ecx,DWORD PTR [eax]
  41bff0:	mov    bh,0xfb
  41bff2:	add    cl,BYTE PTR [eax]
  41bff4:	idiv   ebx
  41bff6:	add    eax,DWORD PTR [eax]
  41bff8:	cmc    
  41bff9:	sti    
  41bffa:	add    ecx,DWORD PTR [eax]
  41bffc:	mov    bh,0xfb
  41bffe:	add    eax,DWORD PTR [eax]
  41c000:	mov    ch,0xfb
  41c002:	add    cl,BYTE PTR [eax]
  41c004:	xor    eax,0xf70803fc
  41c009:	sti    
  41c00a:	add    al,BYTE PTR [eax]
  41c00c:	aaa    
  41c00d:	cld    
  41c00e:	add    al,BYTE PTR [eax]
  41c010:	cmc    
  41c011:	sti    
  41c012:	add    cl,BYTE PTR [eax]
  41c014:	aaa    
  41c015:	cld    
  41c016:	add    cl,BYTE PTR [eax]
  41c018:	aaa    
  41c019:	cld    
  41c01a:	add    al,BYTE PTR [eax]
  41c01c:	idiv   ebx
  41c01e:	add    eax,DWORD PTR [eax]
	...
  41c02c:	aaa    
  41c02d:	cld    
  41c02e:	add    ecx,DWORD PTR [eax]
  41c030:	xor    eax,0x350803fc
  41c035:	cld    
  41c036:	add    eax,DWORD PTR [eax]
  41c038:	cmc    
  41c039:	sti    
  41c03a:	add    cl,BYTE PTR [eax]
  41c03c:	xor    eax,0x370003fc
  41c041:	cld    
  41c042:	add    al,BYTE PTR [eax]
  41c044:	idiv   ebx
  41c046:	add    al,BYTE PTR [eax]
  41c048:	xor    eax,0xf50803fc
  41c04d:	sti    
  41c04e:	add    al,BYTE PTR [eax]
  41c050:	cmc    
  41c051:	sti    
  41c052:	add    al,BYTE PTR [eax]
  41c054:	mov    ch,0xfb
  41c056:	add    ecx,DWORD PTR [eax]
  41c058:	idiv   ebx
  41c05a:	add    cl,BYTE PTR [eax]
  41c05c:	idiv   ebx
  41c05e:	add    eax,DWORD PTR [eax]
  41c060:	mov    ch,0xfb
  41c062:	add    eax,DWORD PTR [eax]
  41c064:	idiv   ebx
  41c066:	add    al,BYTE PTR [eax]
  41c068:	cmc    
  41c069:	sti    
  41c06a:	add    al,BYTE PTR [eax]
  41c06c:	mov    bh,0x62
  41c06e:	in     eax,dx
  41c06f:	add    edi,edi
  41c071:	pusha  
  41c072:	in     eax,dx
  41c073:	add    dh,bh
  41c075:	mov    al,ds:0xa2ef02ed
  41c07a:	in     eax,dx
  41c07b:	add    dh,bh
  41c07d:	pusha  
  41c07e:	in     eax,dx
  41c07f:	add    esi,edi
  41c081:	mov    ds:0xa0ff03ed,al
  41c086:	in     eax,dx
  41c087:	add    ch,bh
  41c089:	pusha  
  41c08a:	in     eax,dx
  41c08b:	add    ch,bh
  41c08d:	mov    ds:0x2ed,al
	...
  41c09a:	add    BYTE PTR [eax],al
  41c09c:	mul    DWORD PTR [edx-0x13]
  41c09f:	add    esi,edi
  41c0a1:	pusha  
  41c0a2:	in     eax,dx
  41c0a3:	add    ebp,edi
  41c0a5:	mov    al,ds:0xa0ef02ed
  41c0aa:	in     eax,dx
  41c0ab:	add    bh,bh
  41c0ad:	(bad)  
  41c0ae:	in     eax,dx
  41c0af:	add    esi,edi
  41c0b1:	mov    al,ds:0xa0ef02ed
  41c0b6:	in     eax,dx
  41c0b7:	add    ebp,edi
  41c0b9:	pusha  
  41c0ba:	in     eax,dx
  41c0bb:	add    esi,edi
  41c0bd:	(bad)  
  41c0be:	in     eax,dx
  41c0bf:	add    edi,edi
  41c0c1:	mov    ds:0xa0f703ed,al
  41c0c6:	in     eax,dx
  41c0c7:	add    ch,bh
  41c0c9:	(bad)  
  41c0ca:	in     eax,dx
  41c0cb:	add    dh,bh
  41c0cd:	pusha  
  41c0ce:	in     eax,dx
  41c0cf:	add    dh,bh
  41c0d1:	mov    ds:0x62ef03ed,al
  41c0d6:	in     eax,dx
  41c0d7:	add    esi,edi
  41c0d9:	(bad)  
  41c0da:	in     eax,dx
  41c0db:	add    edi,edi
  41c0dd:	mov    ds:0x60ff02ed,al
  41c0e2:	in     eax,dx
  41c0e3:	add    dh,bh
  41c0e5:	mov    ds:0x42f703fd,al
  41c0ea:	in     eax,dx
  41c0eb:	add    esi,DWORD PTR [edi+0x48c3ed42]
  41c0f1:	in     al,0x5
  41c0f3:	fnstenv [esp]
  41c0f6:	es jmp 0xf96863f0
  41c0fc:	hlt    
  41c0fd:	bound  eax,QWORD PTR [esi]
  41c0ff:	stc    
	...
  41c10c:	xor    al,0x24
  41c10e:	es jmp 0xe9486408
  41c114:	xor    al,0xe4
  41c116:	push   ss
  41c117:	fnstenv [esp]
  41c11a:	push   es
  41c11b:	jmp    0xd9486414
  41c120:	hlt    
  41c121:	bound  esp,QWORD PTR [esi]
  41c123:	fxtract 
  41c125:	mov    ds:0xe3b4e906,al
  41c12a:	push   ss
  41c12b:	jmp    0xf9682424
  41c130:	mov    ah,0xe3
  41c132:	imul   cl
  41c134:	hlt    
  41c135:	bound  eax,QWORD PTR [esi]
  41c137:	fxtract 
  41c139:	mov    ds:0xe3b4d906,al
  41c13e:	push   ss
  41c13f:	jmp    0xea38a4f8
  41c144:	mov    ah,0x23
  41c146:	push   es
  41c147:	stc    
  41c148:	mov    ah,0xe3
  41c14a:	push   ss
  41c14b:	stc    
  41c14c:	hlt    
  41c14d:	bound  eax,QWORD PTR [esi]
  41c14f:	stc    
  41c150:	hlt    
  41c151:	mov    ds:0xa2f4f926,al
  41c156:	es jmp 0xd9482450
  41c15c:	mov    ah,0x23
  41c15e:	push   es
  41c15f:	jmp    0xd967e518
  41c164:	mov    ah,0xe3
  41c166:	imul   cl
  41c168:	xor    al,0x23
  41c16a:	push   es
  41c16b:	jmp    0xe967e4a4
	...
  41c17c:	hlt    
  41c17d:	bound  esp,QWORD PTR [esi]
  41c17f:	jmp    0x58a4b8
  41c184:	cs pop edi
  41c186:	push   es
  41c187:	add    BYTE PTR [esi],ch
  41c189:	pop    edi
  41c18a:	inc    esi
  41c18b:	and    BYTE PTR [esi+0x1f],cl
  41c18e:	aaa    
  41c18f:	add    BYTE PTR [esi],bl
  41c191:	pop    ds
  41c192:	aaa    
  41c193:	and    BYTE PTR [esi],bl
  41c195:	pop    edi
  41c196:	inc    esi
  41c197:	add    BYTE PTR [esi],ch
  41c199:	pop    ds
  41c19a:	idiv   edi
  41c19c:	push   ds
  41c19d:	pop    edi
  41c19e:	push   es
  41c19f:	and    BYTE PTR [esi],cl
  41c1a1:	pop    edi
  41c1a2:	inc    esi
  41c1a3:	add    BYTE PTR [esi],bl
  41c1a5:	pop    ds
  41c1a6:	neg    DWORD PTR [edi]
  41c1a8:	push   ds
  41c1a9:	pop    edi
  41c1aa:	push   es
  41c1ab:	and    BYTE PTR [esi],bl
  41c1ad:	pop    ds
  41c1ae:	idiv   edi
  41c1b0:	push   ds
  41c1b1:	pop    edi
  41c1b2:	push   es
  41c1b3:	and    dh,ch
  41c1b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c1b6:	ss and dh,bl
  41c1b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c1ba:	ss add dh,cl
  41c1bd:	inc    si
  41c1bf:	and    dh,bl
  41c1c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c1c2:	ss add dh,bl
  41c1c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c1c6:	ss and dh,bl
  41c1c9:	pushw  es
  41c1cb:	add    BYTE PTR [esi-0x61dfb99a],bl
  41c1d1:	pushw  es
  41c1d3:	add    BYTE PTR [esi-0x6100095a],bl
  41c1d9:	inc    si
  41c1db:	and    BYTE PTR [esi+0x36a6],bl
	...
  41c1e9:	add    BYTE PTR [eax],al
  41c1eb:	add    BYTE PTR [esi-0x5100095a],cl
  41c1f1:	inc    si
  41c1f3:	add    BYTE PTR [esi-0x71e0095a],ch
  41c1f9:	pushw  es
  41c1fb:	add    BYTE PTR [esi+0x5e2036a6],cl
  41c201:	pushw  es
  41c203:	and    BYTE PTR [esi+0x66],ch
  41c206:	inc    esi
  41c207:	add    bh,dh
  41c209:	fcmovnb st,st(2)
  41c20b:	(bad)  
  41c20c:	clc    
  41c20d:	retf   
  41c20e:	add    ah,BYTE PTR [eax]
  41c210:	test   ebp,0xcdf32002
  41c216:	cli    
  41c217:	push   esp
  41c219:	retf   
  41c21a:	add    al,BYTE PTR [eax]
  41c21c:	test   ebx,0xce30fffa
  41c222:	cli    
  41c223:	push   esp
  41c225:	int    0xfa
  41c227:	pop    ds
  41c228:	test   ebx,0xcdf31ffa
  41c22e:	cli    
  41c22f:	pop    ds
  41c230:	sti    
  41c231:	retf   
  41c232:	add    ah,BYTE PTR [eax]
  41c234:	test   ebx,0xcdf70002
  41c23a:	add    al,BYTE PTR [eax]
  41c23c:	repz int 0x2
  41c23f:	add    bh,dh
  41c241:	retf   
  41c242:	add    al,BYTE PTR [eax]
  41c244:	repz int 0x2
  41c247:	and    bl,bh
  41c249:	int    0xfa
  41c24b:	(bad)  
  41c24c:	fmul   st,st(3)
  41c24e:	cli    
  41c24f:	inc    DWORD PTR [eax]
	...
  41c259:	add    BYTE PTR [eax],al
  41c25b:	add    ah,dh
  41c25d:	int    0xfa
  41c25f:	pop    ds
  41c260:	test   ebp,0xcbf72002
  41c266:	cli    
  41c267:	push   esp
  41c269:	int    0x2
  41c26b:	add    bl,bh
  41c26d:	retf   
  41c26e:	add    ah,BYTE PTR [eax]
  41c270:	repz retf 
  41c272:	cli    
  41c273:	pop    ds
  41c274:	sti    
  41c275:	int    0x2
  41c277:	and    bh,dh
  41c279:	retf   
  41c27a:	add    ah,BYTE PTR [eax]
  41c27c:	sti    
  41c27d:	retf   
  41c27e:	cli    
  41c27f:	dec    DWORD PTR [eax-0x7f000533]
  41c285:	int    0xfa
  41c287:	pop    ds
  41c288:	repz retf 
  41c28a:	cli    
  41c28b:	pop    ds
  41c28c:	mul    DWORD PTR [edx-0x15]
  41c28f:	add    esi,edi
  41c291:	(bad)  
  41c292:	in     eax,dx
  41c293:	add    esi,edi
  41c295:	in     ax,dx
  41c297:	sti    
  41c298:	clc    
  41c299:	(bad)  
  41c29a:	in     eax,dx
  41c29b:	add    esi,edi
  41c29d:	in     ax,dx
  41c29f:	sti    
  41c2a0:	call   0x1745b007
  41c2a5:	arpl   bx,bp
  41c2a7:	sti    
  41c2a8:	cmp    BYTE PTR [ebp-0x15],ah
  41c2ab:	sti    
  41c2ac:	xor    BYTE PTR [ebp-0x15],ah
  41c2af:	add    edx,edi
  41c2b1:	data16 jmp 0x41c2b7
  41c2b4:	xlat   BYTE PTR ds:[ebx]
  41c2b5:	data16 jmp 0x41c2bb
  41c2b8:	mul    DWORD PTR [edx-0x15]
  41c2bb:	add    edx,edi
  41c2bd:	(bad)  
  41c2be:	in     eax,dx
  41c2bf:	add    eax,DWORD PTR [eax]
	...
  41c2c9:	add    BYTE PTR [eax],al
  41c2cb:	add    bh,dh
  41c2cd:	in     ax,dx
  41c2cf:	sti    
  41c2d0:	add    BYTE PTR [ebp-0x13],ah
  41c2d3:	add    edx,edi
  41c2d5:	(bad)  
  41c2d6:	in     eax,dx
  41c2d7:	sti    
  41c2d8:	adc    BYTE PTR [edi-0x15],ah
  41c2db:	sti    
  41c2dc:	call   0x13dadc1
  41c2e1:	arpl   bp,bp
  41c2e3:	sti    
  41c2e4:	clc    
  41c2e5:	data16 jmp 0x41c2e3
  41c2e8:	shl    al,1
  41c2ea:	jmp    0xe0fb:0xeb66f703
  41c2f1:	in     ax,dx
  41c2f3:	add    edx,DWORD PTR [edi]
  41c2f5:	addr16 in eax,dx
  41c2f7:	sti    
  41c2f8:	adc    BYTE PTR [ebx-0x13],ah
  41c2fb:	add    esi,edi
  41c2fd:	(bad)  
  41c2fe:	jmp    0x41c303
  41c300:	mul    DWORD PTR [edx-0x15]
  41c303:	sti    
  41c304:	clc    
  41c305:	in     ax,dx
  41c307:	add    esi,edi
  41c309:	(bad)  
  41c30a:	jmp    0x41c307
  41c30c:	call   0xd745b073
  41c311:	pushw  es
  41c313:	jmp    0xec38a394
  41c318:	hlt    
  41c319:	bound  eax,QWORD PTR [edx]
  41c31b:	jmp    0xe944a38c
  41c320:	pop    esp
  41c321:	loopne 0x41c319
  41c323:	jmp    0x41c319
  41c325:	add    BYTE PTR [esi],0xa9
  41c328:	inc    esp
  41c329:	loopne 0x41c331
  41c32b:	jmp    0xea38a374
	...
  41c33c:	hlt    
  41c33d:	pushw  es
  41c33f:	test   eax,0xe9166444
  41c344:	hlt    
  41c345:	bound  edx,QWORD PTR [esi]
  41c347:	sub    DWORD PTR [ebx],esp
  41c349:	loopne 0x41c351
  41c34b:	sub    ebx,edi
  41c34d:	bound  eax,QWORD PTR [esi]
  41c34f:	jmp    0x29582648
  41c354:	sti    
  41c355:	pushw  es
  41c357:	jmp    0x29582a50
  41c35c:	or     esp,DWORD PTR [esi+edx*1-0x17]
  41c360:	add    al,0x64
  41c362:	push   es
  41c363:	jmp    0x2958274c
  41c368:	jecxz  0x41c3cd
  41c36a:	push   es
  41c36b:	jmp    0x2a38a354
  41c370:	repz bound eax,QWORD PTR [esi]
  41c373:	jmp    0x29582a6c
  41c378:	repz bound edx,QWORD PTR [esi]
  41c37b:	jmp    0x2948a344
  41c380:	ret    
  41c381:	fcomip st,st(6)
  41c383:	jmp    0xa948272c
  41c388:	hlt    
  41c389:	pushw  es
  41c38b:	test   eax,0xe91666f4
  41c390:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c391:	arpl   WORD PTR [esi],dx
  41c393:	test   eax,0xf6df84
  41c398:	sahf   
  41c399:	arpl   WORD PTR [esi],ax
  41c39b:	add    BYTE PTR [esi+0x663],cl
	...
  41c3a9:	add    BYTE PTR [eax],al
  41c3ab:	add    BYTE PTR [esi+0x63],cl
  41c3ae:	add    dl,BYTE PTR [eax]
  41c3b0:	sahf   
  41c3b1:	arpl   WORD PTR [esi],ax
  41c3b3:	adc    BYTE PTR [esi-0x2d],bl
  41c3b6:	test   BYTE PTR [edi],0x8e
  41c3b9:	rol    DWORD PTR [edx],cl
  41c3bb:	add    BYTE PTR [esi+0x63],cl
  41c3be:	add    al,BYTE PTR [eax]
  41c3c0:	sahf   
  41c3c1:	rol    DWORD PTR [edx],cl
  41c3c3:	add    BYTE PTR [esi+0x63],bl
  41c3c6:	add    al,BYTE PTR [eax]
  41c3c8:	dec    esi
  41c3c9:	rol    DWORD PTR [edx],cl
  41c3cb:	adc    BYTE PTR [esi-0x2d],cl
  41c3ce:	idiv   bh
  41c3d0:	pop    esi
  41c3d1:	arpl   WORD PTR [esi],ax
  41c3d3:	add    dh,bl
  41c3d5:	data16 add dl,BYTE PTR [eax]
  41c3d8:	push   cs
  41c3d9:	shl    esi,cl
  41c3db:	dec    esi
  41c3dd:	(bad)  
  41c3de:	add    al,BYTE PTR [eax]
  41c3e0:	push   ds
  41c3e1:	shl    esi,cl
  41c3e3:	pmaxub mm4,QWORD PTR [esi+0x6]
  41c3e7:	add    dh,cl
  41c3e9:	pushw  es
  41c3eb:	adc    BYTE PTR [esi],cl
  41c3ed:	arpl   WORD PTR [edx],ax
  41c3ef:	adc    BYTE PTR [esi],bl
  41c3f1:	add    dl,BYTE PTR [bx+si]
  41c3f4:	fisub  WORD PTR [edx+0x6]
  41c3f7:	adc    dh,cl
  41c3f9:	bound  eax,QWORD PTR [edx]
  41c3fb:	add    BYTE PTR [esi],cl
  41c3fd:	xlat   BYTE PTR ds:[ebx]
  41c3fe:	test   BYTE PTR [edi],0xde
  41c401:	bound  eax,QWORD PTR [esi]
  41c403:	add    BYTE PTR [esi],bl
  41c405:	xlat   BYTE PTR ds:[ebx]
  41c406:	add    dl,BYTE PTR [eax]
  41c408:	push   cs
  41c409:	add    al,BYTE PTR [bx+si]
  41c40c:	push   cs
  41c40d:	addr16 push es
  41c40f:	adc    BYTE PTR [eax],al
	...
  41c419:	add    BYTE PTR [eax],al
  41c41b:	add    BYTE PTR [esi-0x61effd9e],bl
  41c421:	shl    dh,cl
  41c423:	cmovle edx,edx
  41c426:	test   BYTE PTR [edi],0xf7
  41c429:	retf   
  41c42a:	add    al,BYTE PTR [eax]
  41c42c:	test   DWORD PTR [ebx],0xcbe703f3
  41c432:	repnz add esi,edi
  41c435:	retf   
  41c436:	repnz add esi,edi
  41c439:	or     esi,ebx
  41c43b:	push   DWORD PTR [eax+0xc]
  41c43e:	repz jmp FWORD PTR [eax+0xc]
  41c442:	add    eax,DWORD PTR [edi+esi*8]
  41c445:	retf   
  41c446:	add    al,BYTE PTR [eax]
  41c448:	pop    es
  41c449:	int3   
  41c44a:	repnz add esp,edi
  41c44d:	jg     0x41c40f
  41c44f:	dec    BYTE PTR [eax-0x34]
  41c452:	add    al,BYTE PTR [eax]
  41c454:	test   ebx,0x4ff70002
  41c45a:	jns    0x41c45b
  41c45c:	xor    al,dh
  41c45e:	cmp    edi,0xff81ec28
  41c464:	and    ah,cl
  41c466:	add    al,BYTE PTR [eax]
  41c468:	test   ebx,0xc5f70002
  41c46e:	jns    0x41c46f
  41c470:	or     ah,bl
  41c472:	test   bh,bh
  41c474:	add    BYTE PTR [eax-0x7e],ah
  41c477:	(bad)  
  41c478:	clc    
  41c479:	retf   
  41c47a:	add    al,BYTE PTR [eax]
  41c47c:	test   ebx,0x2
	...
  41c48a:	add    BYTE PTR [eax],al
  41c48c:	mul    DWORD PTR [edi+0x79]
  41c48f:	jmp    eax
  41c491:	pop    DWORD PTR [edi+edi*8-0x7df028]
  41c498:	ror    bl,1
  41c49a:	add    al,BYTE PTR [eax]
  41c49c:	test   ebx,0xebf70002
  41c4a2:	js     0x41c4a3
  41c4a4:	mov    eax,0xb0ff847f
  41c4a9:	push   edi
  41c4aa:	cmp    bh,0xa8
  41c4ad:	(bad)  
  41c4ae:	in     eax,dx
  41c4af:	add    esi,edi
  41c4b1:	(bad)  
  41c4b2:	in     eax,dx
  41c4b3:	add    esi,edi
  41c4b5:	bound  ecx,QWORD PTR [edi+0x7d]
  41c4b8:	nop
  41c4b9:	frstor [eax-0x7e]
  41c4bc:	mov    ch,bl
  41c4be:	inc    eax
  41c4bf:	test   BYTE PTR [eax-0x8fc1323],al
  41c4c5:	(bad)  
  41c4c6:	in     eax,dx
  41c4c7:	add    esi,edi
  41c4c9:	(bad)  
  41c4cb:	jnp    0x41c535
  41c4cd:	fnsave [eax-0x7e]
  41c4d0:	pusha  
  41c4d1:	(bad)  
  41c4d3:	sbb    BYTE PTR [eax-0x23],0xec
  41c4d7:	add    esi,edi
  41c4d9:	(bad)  
  41c4da:	in     eax,dx
  41c4db:	add    esi,edi
  41c4dd:	bound  esp,QWORD PTR [edi+0x7c]
  41c4e0:	inc    eax
  41c4e1:	frstor [edx+eax*4+0x38]
  41c4e5:	(bad)  
  41c4e7:	xor    BYTE PTR [eax],0xdd
  41c4ea:	in     al,dx
  41c4eb:	add    esi,edi
  41c4ed:	(bad)  
  41c4ee:	in     eax,dx
  41c4ef:	add    eax,DWORD PTR [eax]
	...
  41c4f9:	add    BYTE PTR [eax],al
  41c4fb:	add    bh,dh
  41c4fd:	(bad)  
  41c4fe:	fistp  QWORD PTR [edx+0x18]
  41c501:	fstp   QWORD PTR [eax+0x3cdd1081]
  41c507:	or     DWORD PTR [eax],0xffffffdd
  41c50a:	in     al,dx
  41c50b:	add    esi,edi
  41c50d:	(bad)  
  41c50e:	in     eax,dx
  41c50f:	add    esi,edi
  41c511:	(bad)  
  41c513:	jp     0x41c505
  41c515:	fmul   st(4),st
  41c517:	sub    eax,0xf703ecdc
  41c51d:	(bad)  
  41c51e:	in     eax,dx
  41c51f:	add    esi,edi
  41c521:	(bad)  
  41c522:	in     eax,dx
  41c523:	add    esi,edi
  41c525:	(bad)  
  41c526:	in     eax,dx
  41c527:	add    esi,edi
  41c529:	(bad)  
  41c52a:	in     eax,dx
  41c52b:	add    esi,edi
  41c52d:	bound  ecx,QWORD PTR [ecx+0x5dcb881]
  41c533:	jae    0x41c5ab
  41c535:	fdivr  st(6),st
  41c537:	out    0x77,eax
  41c539:	fdivr  st(6),st
  41c53b:	std    
  41c53c:	ja     0x41c51a
  41c53e:	test   BYTE PTR [ecx],0x76
  41c541:	fdivr  st(6),st
  41c543:	add    eax,0x13f6dc76
  41c548:	jbe    0x41c526
  41c54a:	div    BYTE PTR [ebx-0x68092389]
  41c550:	ja     0x41c52e
  41c552:	test   ch,0x77
  41c555:	fdivr  st(6),st
  41c557:	mov    ecx,0xa5f6dc77
  41c55c:	ja     0x41c53a
  41c55e:	idiv   BYTE PTR [ebx+0x0]
	...
  41c569:	add    BYTE PTR [eax],al
  41c56b:	add    BYTE PTR [edi-0x24],dh
  41c56e:	test   BYTE PTR [edi+0x77],0xdc
  41c572:	test   BYTE PTR [ebp+0x77],0xdc
  41c576:	neg    BYTE PTR [ebx]
  41c578:	ja     0x41c556
  41c57a:	test   BYTE PTR [ebx],0x77
  41c57d:	fdivr  st(6),st
  41c57f:	std    
  41c580:	mov    al,0xdb
  41c582:	mul    ch
  41c584:	test   al,0xdb
  41c586:	idiv   bh
  41c588:	js     0x41c566
  41c58a:	test   BYTE PTR [edi],0x6f
  41c58d:	fdivr  st(6),st
  41c58f:	adc    edi,DWORD PTR [edi-0x24]
  41c592:	mul    BYTE PTR [ecx]
  41c594:	jg     0x41c572
  41c596:	mul    BYTE PTR ds:0x3bf6dc6f
  41c59c:	outs   dx,DWORD PTR ds:[esi]
  41c59d:	fdivr  st(6),st
  41c59f:	imul   edi,DWORD PTR [edi-0x25],0xfffffff6
  41c5a3:	pop    edi
  41c5a4:	jg     0x41c581
  41c5a6:	not    BYTE PTR [ebx+0x6f]
  41c5a9:	fcomi  st,st(6)
  41c5ab:	pop    ebp
  41c5ac:	outs   dx,DWORD PTR ds:[esi]
  41c5ad:	fcomi  st,st(6)
  41c5af:	mov    ds:0xb3f6db7f,eax
  41c5b4:	jg     0x41c591
  41c5b6:	test   BYTE PTR [eax],0x6a
  41c5b9:	jmp    0xfff6:0xea76fff6
  41c5c0:	xchg   esi,eax
  41c5c1:	jmp    0xfff6:0xeac2fff6
  41c5c8:	push   es
  41c5c9:	jmp    0xfff6:0xe9d6fff6
	...
  41c5dc:	push   esp
  41c5dd:	jmp    0xfff6:0xea44fff6
  41c5e4:	cmp    al,0xea
  41c5e6:	idiv   bh
  41c5e8:	or     dl,ch
  41c5ea:	idiv   bh
  41c5ec:	sub    cl,0xf6
  41c5ef:	call   DWORD PTR [esi]
  41c5f1:	jmp    0xfff6:0xe9eefff6
  41c5f8:	push   ss
  41c5f9:	jmp    0xfff6:0xe962fff6
  41c600:	inc    esp
  41c601:	jmp    0xe966c5fc
  41c606:	idiv   bh
  41c608:	jl     0x41c5f3
  41c60a:	idiv   bh
  41c60c:	push   esi
  41c60d:	jmp    0xe9c8c608
  41c612:	idiv   bh
  41c614:	mov    al,0xe8
  41c616:	idiv   bh
  41c618:	push   cs
  41c619:	pop    edi
  41c61a:	push   es
  41c61b:	add    BYTE PTR [ecx+ebp*8-0x168b000a],cl
  41c622:	idiv   bh
  41c624:	dec    esp
  41c625:	jmp    0xe99ec620
  41c62a:	idiv   bh
  41c62c:	mov    esp,0xa0fff6ec
  41c631:	in     al,dx
  41c632:	idiv   bh
  41c634:	into   
  41c635:	pushw  es
  41c637:	add    dh,bl
  41c639:	in     eax,dx
  41c63a:	idiv   bh
  41c63c:	test   ebx,0x2
	...
  41c64a:	add    BYTE PTR [eax],al
  41c64c:	mul    DWORD PTR [ebx-0x5b3f0075]
  41c652:	mov    edi,edi
  41c654:	mov    eax,0xb0ff8b88
  41c659:	jbe    0x41c5e6
  41c65b:	jmp    FWORD PTR [eax-0x5f00749c]
  41c661:	les    ecx,FWORD PTR [ebx-0x73ab6701]
  41c667:	call   DWORD PTR [eax-0x770073aa]
  41c66d:	out    0x8b,al
  41c66f:	inc    DWORD PTR [eax+0x78ff8c8c]
  41c675:	jl     0x41c603
  41c677:	push   DWORD PTR [eax-0x34]
  41c67a:	add    al,BYTE PTR [eax]
  41c67c:	neg    DWORD PTR [ecx-0x339f0074]
  41c682:	add    al,BYTE PTR [eax]
  41c684:	not    ebp
  41c686:	mov    bh,bh
  41c688:	push   eax
  41c689:	ror    BYTE PTR [edx+0x2cc48ff],cl
  41c68f:	add    bh,dh
  41c691:	or     ecx,DWORD PTR [ebx-0x74f7c701]
  41c697:	push   DWORD PTR [eax]
  41c699:	hlt    
  41c69a:	mov    bh,bh
  41c69c:	sub    al,ah
  41c69e:	mov    bh,bh
  41c6a0:	and    BYTE PTR [edx],dh
  41c6a2:	mov    bh,bh
  41c6a4:	sbb    BYTE PTR [esi-0x76],al
  41c6a7:	call   DWORD PTR [eax]
  41c6a9:	int3   
  41c6aa:	add    al,BYTE PTR [eax]
  41c6ac:	neg    DWORD PTR [ebp-0x76]
  41c6af:	inc    DWORD PTR [eax]
	...
  41c6bd:	inc    edx
  41c6be:	mov    bh,bh
  41c6c0:	clc    
  41c6c1:	jmp    0x5432c64f
  41c6c6:	mov    bh,bh
  41c6c8:	call   0xe14150da
  41c6cd:	bound  edi,QWORD PTR [ebp-0x3b262774]
  41c6d3:	mov    eax,ss
  41c6d5:	(bad)  [edx-0x7d263774]
  41c6db:	mov    eax,es
  41c6dd:	fld    DWORD PTR [esp+ecx*4+0x3ecd9b8]
  41c6e4:	mul    DWORD PTR [edx-0x25]
  41c6e7:	mov    ch,BYTE PTR [eax-0x5f754127]
  41c6ed:	fldlg2 
  41c6ef:	add    esi,edi
  41c6f1:	bound  ecx,QWORD PTR [ecx-0x7a]
  41c6f4:	nop
  41c6f5:	fst    DWORD PTR [edx-0x7a]
  41c6f8:	mov    cl,bl
  41c6fa:	fiadd  WORD PTR [eax+eax*4+0x7884d8d9]
  41c701:	(bad)  [eax*4-0x7aff2690]
  41c708:	push   0x6084f2d9
  41c70d:	fnstenv [edx-0x5126a77c]
  41c713:	test   BYTE PTR [eax-0x27],dl
  41c716:	mov    BYTE PTR [eax+ecx*2+0x40849cd9],al
  41c71d:	fld    DWORD PTR [eax+0x84]
	...
  41c72b:	add    BYTE PTR [eax],bh
  41c72d:	fstp   DWORD PTR [edx-0x7b]
  41c730:	xor    cl,bl
  41c732:	test   DWORD PTR ds:[eax],ebp
  41c735:	fldcw  WORD PTR [eax]
  41c737:	test   DWORD PTR [eax],esp
  41c739:	fnstcw WORD PTR [edx-0x3526e77c]
  41c73f:	test   BYTE PTR [eax],dl
  41c741:	(bad)  
  41c743:	test   BYTE PTR [eax],cl
  41c745:	fchs   
  41c747:	xchg   DWORD PTR [eax],eax
  41c749:	(bad)  
  41c74b:	xchg   eax,edi
  41c74d:	fdivr  st,st(6)
  41c74f:	xchg   eax,esi
  41c751:	fadd   DWORD PTR ds:0xf6d870f3
  41c757:	and    DWORD PTR [edi-0x28],ebp
  41c75a:	test   BYTE PTR [ebp+0x6f],0xd8
  41c75e:	neg    BYTE PTR [ebx]
  41c760:	jg     0x41c73a
  41c762:	imul   BYTE PTR [ebx+0x70]
  41c765:	fdiv   st,st(6)
  41c767:	pop    edi
  41c768:	js     0x41c742
  41c76a:	not    BYTE PTR [ebx+0x70]
  41c76d:	fdiv   st,st(6)
  41c76f:	cmp    eax,0xa3f6d878
  41c774:	jo     0x41c74e
  41c776:	not    BYTE PTR [ebx+0x55f6d878]
  41c77c:	jo     0x41c756
  41c77e:	mul    BYTE PTR [ecx+0x78]
  41c781:	fdiv   st,st(6)
  41c783:	loope  0x41c7f6
  41c785:	fdiv   st,st(6)
  41c787:	cmc    
  41c788:	jns    0x41c762
  41c78a:	not    BYTE PTR [ecx]
  41c78c:	jo     0x41c766
  41c78e:	test   BYTE PTR [ecx],0x0
	...
  41c799:	add    BYTE PTR [eax],al
  41c79b:	add    BYTE PTR [eax-0x28],bh
  41c79e:	mul    BYTE PTR [ebx-0x6c09278f]
  41c7a4:	jns    0x41c77e
  41c7a6:	neg    BYTE PTR [ebx+0x6ff6d871]
  41c7ac:	jns    0x41c786
  41c7ae:	test   BYTE PTR [edi+0x71],0xd8
  41c7b2:	mul    BYTE PTR [ecx]
  41c7b4:	jns    0x41c78e
  41c7b6:	test   BYTE PTR [ecx],0x71
  41c7b9:	fdiv   st,st(6)
  41c7bb:	add    DWORD PTR [ecx-0x28],edi
  41c7be:	imul   ch
  41c7c0:	jle    0x41c79a
  41c7c2:	not    bl
  41c7c4:	outs   dx,BYTE PTR ds:[esi]
  41c7c5:	fdiv   st,st(6)
  41c7c7:	adc    esi,DWORD PTR [ecx-0x28]
  41c7ca:	neg    BYTE PTR [ebx]
  41c7cc:	jns    0x41c7a6
  41c7ce:	mul    BYTE PTR [ecx]
  41c7d0:	jno    0x41c7aa
  41c7d2:	div    BYTE PTR [ecx]
  41c7d4:	jns    0x41c7ae
  41c7d6:	test   BYTE PTR [eax],0xa8
  41c7d9:	loopne 0x41c7d1
  41c7db:	(bad)  
  41c7dc:	fisub  WORD PTR [ebx+0x6]
  41c7df:	add    BYTE PTR [ecx+eiz*8-0xa],cl
  41c7e3:	push   DWORD PTR [eax+eiz*8-0xa]
  41c7e7:	dec    DWORD PTR [eax+eiz*8-0x1f73000a]
  41c7ee:	idiv   bh
  41c7f0:	jl     0x41c7d2
  41c7f2:	idiv   bh
  41c7f4:	push   0xcefff6e0
  41c7f9:	arpl   WORD PTR [esi],ax
  41c7fb:	add    dh,cl
  41c7fd:	loopne 0x41c7f5
  41c7ff:	inc    DWORD PTR [eax]
	...
  41c809:	add    BYTE PTR [eax],al
  41c80b:	add    BYTE PTR [esi-0x49fff99d],bl
  41c811:	loopne 0x41c809
  41c813:	call   esi
  41c815:	fcomip st,st(6)
  41c817:	jmp    DWORD PTR [edx-0x20]
  41c81a:	idiv   bh
  41c81c:	inc    esp
  41c81d:	loopne 0x41c815
  41c81f:	push   DWORD PTR [esi-0x49000920]
  41c825:	loopne 0x41c81d
  41c827:	jmp    esi
  41c829:	fcomip st,st(6)
  41c82b:	inc    esp
  41c82d:	fcomip st,st(6)
  41c82f:	push   DWORD PTR [edi+ebx*8-0xa]
  41c833:	dec    DWORD PTR [esi]
  41c835:	loopne 0x41c82d
  41c837:	dec    DWORD PTR [esi]
  41c839:	loopne 0x41c831
  41c83b:	call   FWORD PTR [esi+0x63]
  41c83e:	push   es
  41c83f:	add    BYTE PTR [eax-0x20],al
  41c842:	idiv   bh
  41c844:	dec    esi
  41c845:	arpl   WORD PTR [esi],ax
  41c847:	add    BYTE PTR [ebx+ebp*8],ah
  41c84a:	idiv   bh
  41c84c:	inc    eax
  41c84d:	jmp    0x41c845
  41c84f:	dec    DWORD PTR [esi]
  41c851:	arpl   WORD PTR [esi],ax
  41c853:	add    dh,cl
  41c855:	out    0xf6,al
  41c857:	jmp    edx
  41c859:	out    0xf6,al
  41c85b:	push   edi
  41c85d:	xchg   ecx,eax
  41c85e:	mov    bh,bh
  41c860:	add    BYTE PTR ds:0x2ef8ff8a,bl
  41c866:	mov    bh,bh
  41c868:	lock and cl,BYTE PTR [edx+0x2cce8ff]
	...
  41c87b:	add    bh,dh
  41c87d:	cmp    DWORD PTR [ebx-0x75212701],ecx
  41c883:	call   eax
  41c885:	es mov edi,edi
  41c888:	enter  0x8b34,0xff
  41c88c:	ror    BYTE PTR [edx],0x8b
  41c88f:	(bad)  
  41c890:	mov    eax,0xb0ff8afc
  41c895:	add    al,0x8b
  41c897:	jmp    FWORD PTR [eax-0x5f007516]
  41c89d:	loop   0x41c829
  41c89f:	call   FWORD PTR [eax-0x6f0074bc]
  41c8a5:	int3   
  41c8a6:	add    al,BYTE PTR [eax]
  41c8a8:	neg    ecx
  41c8aa:	mov    edi,edi
  41c8ac:	sbb    BYTE PTR [esi-0x77],0xff
  41c8b0:	js     0x41c87e
  41c8b2:	add    al,BYTE PTR [eax]
  41c8b4:	not    esi
  41c8b6:	add    al,BYTE PTR [ecx-0x1b]
  41c8b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c8ba:	mov    eax,ds:0xa9fdda73
  41c8bf:	imul   edx,edx,0xa
  41c8c2:	add    edi,DWORD PTR [edi]
  41c8c4:	cmc    
  41c8c5:	sbb    DWORD PTR [esi-0x55fa2ca2],ebp
  41c8cb:	imul   ebx,edx,0xffffffcb
  41c8ce:	add    ah,BYTE PTR [ecx]
  41c8d0:	test   DWORD PTR [eax],0xdea46ca7
  41c8d6:	retf   0x995e
  41c8d9:	out    0xa6,eax
  41c8db:	(bad)  
  41c8dc:	not    eax
  41c8de:	add    eax,0x55
	...
  41c8eb:	add    BYTE PTR [ebp-0x6a47a99e],ah
  41c8f1:	sbb    al,0x56
  41c8f3:	mov    al,0x95
  41c8f5:	(bad)  
  41c8f7:	add    BYTE PTR [ebx-0x734daeaf],dl
  41c8fd:	aas    
  41c8fe:	dec    edi
  41c8ff:	ret    
  41c900:	lock aad 0x7c
  41c903:	add    esi,DWORD PTR [edx]
  41c905:	inc    edi
  41c906:	inc    eax
  41c907:	mov    ds:0xad194741,al
  41c90c:	push   edi
  41c90d:	dec    edx
  41c90e:	in     eax,dx
  41c90f:	add    ecx,DWORD PTR [edx+0x5bb02063]
  41c915:	inc    ecx
  41c916:	push   cs
  41c917:	mov    al,0x25
  41c919:	inc    ebp
  41c91a:	stc    
  41c91b:	lods   al,BYTE PTR ds:[esi]
  41c91c:	push   edi
  41c91d:	dec    edx
  41c91e:	in     eax,dx
  41c91f:	add    ebp,DWORD PTR [ebx+0x17ad2963]
  41c925:	inc    esp
  41c926:	add    esi,eax
  41c928:	es inc eax
  41c92a:	add    al,BYTE PTR [edi+eiz*4]
  41c92d:	arpl   WORD PTR [ecx-0x36bbe854],si
  41c933:	ret    0x471c
  41c936:	shl    BYTE PTR [eax+0xf5d580],0xb
  41c93d:	push   edx
  41c93e:	mov    ecx,0xc652d7b1
  41c943:	ret    0xd568
  41c946:	fild   DWORD PTR [eax]
  41c948:	rcl    DWORD PTR [ecx-0x4f],cl
  41c94b:	mov    cl,0xd7
  41c94d:	inc    ebx
  41c94e:	cdq    
  41c94f:	ret    0x0
	...
  41c95a:	add    BYTE PTR [eax],al
  41c95c:	push   eax
  41c95d:	aad    0xef
  41c95f:	add    dh,BYTE PTR [edx-0x263a66c1]
  41c965:	inc    esi
  41c966:	add    dl,0xc4
  41c969:	dec    esi
  41c96a:	jnp    0x41c916
  41c96c:	xchg   esi,eax
  41c96d:	dec    edi
  41c96e:	jno    0x41c916
  41c970:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c971:	and    eax,DWORD PTR [esi]
  41c973:	jmp    0xa447c36c
  41c978:	pop    esp
  41c979:	inc    ebp
  41c97a:	gs push edi
  41c97c:	pop    edi
  41c97d:	and    BYTE PTR [eax+0x57],ch
  41c980:	pop    esp
  41c981:	push   ebx
  41c982:	addr16 inc edi
  41c984:	push   eax
  41c985:	inc    eax
  41c986:	push   0x74512655
  41c98b:	push   eax
  41c98c:	mov    eax,ds:0xf328733f
  41c991:	jbe    0x41c998
  41c993:	cs cwde 
  41c995:	push   eax
  41c996:	inc    eax
  41c997:	inc    eax
  41c998:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c999:	inc    ecx
  41c99a:	push   ebx
  41c99b:	adc    BYTE PTR [ebp-0xb20f9bf],cl
  41c9a1:	and    DWORD PTR [esp+ecx*1-0x6c],esi
  41c9a5:	push   eax
  41c9a6:	popa   
  41c9a7:	daa    
  41c9a8:	mov    WORD PTR [eax+0x61],cs
  41c9ab:	xor    al,0x54
  41c9ad:	inc    esp
  41c9ae:	jbe    0x41c9c0
  41c9b0:	pop    ecx
  41c9b1:	aas    
  41c9b2:	inc    ebp
  41c9b3:	jmp    0x1c462cac
  41c9b8:	push   esp
  41c9b9:	inc    esp
  41c9ba:	push   eax
  41c9bb:	rcr    BYTE PTR [ecx+0x4f],1
  41c9be:	inc    edi
  41c9bf:	mov    DWORD PTR [eax],0x0
  41c9c5:	add    BYTE PTR [eax],al
  41c9c7:	add    BYTE PTR [eax],al
  41c9c9:	add    BYTE PTR [eax],al
  41c9cb:	add    BYTE PTR [edx-0xb3395c3],dh
  41c9d1:	mov    cl,0x3
  41c9d3:	mov    ah,0x4a
  41c9d5:	dec    ecx
  41c9d6:	gs mov ecx,0xb6613d4a
  41c9dc:	cmp    edi,DWORD PTR [esi]
  41c9de:	inc    eax
  41c9df:	rcl    BYTE PTR [eax-0xabcf9bf],0x26
  41c9e6:	mov    BYTE PTR [bx+si+0x6d28],bl
  41c9eb:	mov    eax,DWORD PTR [esi+0x35907435]
  41c9f1:	aam    0xf6
  41c9f3:	mov    edx,0x611df5
  41c9f8:	mov    dl,0xaf
  41c9fa:	je     0x41ca6b
  41c9fc:	jge    0x41c99f
  41c9fe:	bound  esp,QWORD PTR [esp+ebx*4-0x4]
  41ca02:	jne    0x41ca77
  41ca04:	push   cs
  41ca05:	pusha  
  41ca06:	add    BYTE PTR [ecx],0xe1
  41ca09:	add    DWORD PTR [ebx+0x54],esi
  41ca0c:	mov    bl,0x9
  41ca0e:	addr16 push eax
  41ca10:	scas   eax,DWORD PTR es:[edi]
  41ca11:	adc    bl,BYTE PTR [edi+0x41]
  41ca14:	push   cs
  41ca15:	pusha  
  41ca16:	xor    eax,DWORD PTR [eax]
  41ca18:	sbb    eax,0x2261640d
  41ca1d:	add    al,BYTE PTR [ebx+0x69]
  41ca20:	sbb    al,0x2
  41ca22:	data16 je 0x41ca3e
  41ca25:	or     eax,0x5fde4170
  41ca2a:	pop    edi
  41ca2b:	add    BYTE PTR [edx],dl
  41ca2d:	add    ch,BYTE PTR [ebx+0x65]
	...
  41ca3c:	loop   0x41ca3f
  41ca3e:	inc    ecx
  41ca3f:	imul   edi,DWORD PTR [edx-0x61ffc7fe],0xa265415e
  41ca49:	pushf  
  41ca4a:	jae    0x41cabe
  41ca4c:	pushf  
  41ca4d:	add    ch,BYTE PTR [ecx+0x74]
  41ca50:	dec    BYTE PTR [edx+ebp*2]
  41ca53:	arpl   bx,ax
  41ca55:	or     al,0x76
  41ca57:	add    BYTE PTR [esi],ch
  41ca59:	pop    ebp
  41ca5a:	push   ecx
  41ca5b:	imul   esi,DWORD PTR [edx-0x5097b9fe],0xab6f530d
  41ca65:	adc    ch,BYTE PTR [ebx+0x74]
  41ca68:	inc    edi
  41ca69:	popf   
  41ca6a:	outs   dx,DWORD PTR ds:[esi]
  41ca6b:	je     0x41caa0
  41ca6d:	pop    edi
  41ca6e:	add    DWORD PTR cs:[ecx+0x7f4c7302],edx
  41ca75:	or     al,0x73
  41ca77:	inc    ebp
  41ca78:	ins    BYTE PTR es:[edi],dx
  41ca79:	or     eax,0xc9f7726a
  41ca7e:	add    dl,BYTE PTR [ebx]
  41ca80:	hlt    
  41ca81:	push   ebp
  41ca82:	mov    al,0x73
  41ca84:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ca85:	call   0xc9f83a37
  41ca8a:	add    dl,BYTE PTR [edi-0x9]
  41ca8d:	or     BYTE PTR [ecx-0x59b2699e],dh
  41ca93:	push   ebx
  41ca94:	mov    al,ds:0x9267ae2c
  41ca99:	and    eax,0x98c530b2
  41ca9e:	lods   al,BYTE PTR ds:[esi]
  41ca9f:	pop    esi
	...
  41caac:	xchg   DWORD PTR [eax],edi
  41caae:	stos   BYTE PTR es:[edi],al
  41caaf:	ins    BYTE PTR es:[edi],dx
  41cab0:	imul   edi,DWORD PTR [edx+eax*1-0x4f940add],0x6c
  41cab8:	push   esp
  41cab9:	pop    ds
  41caba:	scas   eax,DWORD PTR es:[edi]
  41cabb:	jo     0x41cae1
  41cabd:	into   
  41cabe:	les    esp,FWORD PTR [esi+0x45]
  41cac1:	ins    DWORD PTR es:[edi],dx
  41cac2:	mov    dh,0xff
  41cac4:	enter  0x64,0x4d
  41cac8:	inc    edi
  41cac9:	pop    edi
  41caca:	lods   al,BYTE PTR ds:[esi]
  41cacb:	dec    edi
  41cacc:	inc    ebp
  41cacd:	rcr    DWORD PTR [edi+0x2cd2462],1
  41cad3:	and    eax,0x6cb06bf5
  41cad8:	adc    al,0x5f
  41cada:	scas   eax,DWORD PTR es:[edi]
  41cadb:	jo     0x41cac1
  41cadd:	or     eax,0xb00f62cd
  41cae2:	add    ch,BYTE PTR [edi+0x6daa09f7]
  41cae8:	sbb    eax,DWORD PTR [edx]
  41caea:	stos   BYTE PTR es:[edi],al
  41caeb:	jno    0x41caf1
  41caed:	mov    eax,0x9ee366c4
  41caf2:	sar    edi,0x68
  41caf5:	mov    ecx,0xfe46bff
  41cafa:	mov    cl,0x60
  41cafc:	retf   0xaa0b
  41caff:	mul    DWORD PTR ds:[edx+0x63]
  41cb03:	add    esi,DWORD PTR [ecx-0x4d6078c5]
  41cb09:	inc    edi
  41cb0a:	xchg   ebp,eax
  41cb0b:	scas   eax,DWORD PTR es:[edi]
  41cb0c:	mov    dl,0x3b
  41cb0e:	jns    0x41cab0
	...
  41cb1c:	icebp  
  41cb1d:	bound  edx,QWORD PTR [edx+0x3]
  41cb20:	mov    cl,0x3b
  41cb22:	xchg   DWORD PTR [edi-0x497fc149],ebx
  41cb28:	xchg   ebp,eax
  41cb29:	bound  esi,QWORD PTR [ecx+0x5947ba04]
  41cb2f:	(bad)  
  41cb30:	fwait
  41cb31:	inc    esi
  41cb32:	push   edx
  41cb33:	test   al,0x95
  41cb35:	sbb    cl,BYTE PTR [esi-0x56]
  41cb38:	xchg   esp,eax
  41cb39:	ds inc edx
  41cb3b:	ret    
  41cb3c:	lock rcl DWORD PTR [esi+0x3],1
  41cb40:	xor    cl,BYTE PTR [eax+0x31]
  41cb43:	rcl    BYTE PTR [ebp+0x55],cl
  41cb46:	cmp    al,0xab
  41cb48:	dec    ebx
  41cb49:	inc    ecx
  41cb4a:	and    bh,BYTE PTR [ecx+edx*1+0x3202d363]
  41cb51:	dec    eax
  41cb52:	adc    eax,ecx
  41cb54:	push   ebx
  41cb55:	inc    esi
  41cb56:	push   cs
  41cb57:	test   al,0x55
  41cb59:	sbb    al,0xf7
  41cb5b:	mov    eax,ds:0x3ed2423
  41cb60:	and    esp,DWORD PTR [eax+eiz*1-0x61]
  41cb64:	and    al,0x36
  41cb66:	div    BYTE PTR [esp+0x22cafa48]
  41cb6d:	dec    ecx
  41cb6e:	rol    BYTE PTR [ebx],1
  41cb70:	push   edi
  41cb71:	arpl   WORD PTR [eax-0x39c5fb62],sp
  41cb77:	test   eax,0xb4d04214
  41cb7c:	mov    ah,0x3b
  41cb7e:	mov    ebx,0x9e
	...
  41cb8b:	add    bh,dl
  41cb8d:	push   esi
  41cb8e:	enter  0xe9b5,0x23
  41cb92:	push   es
  41cb93:	jmp    0xa646eb8c
  41cb98:	jno    0x41cbef
  41cb9a:	push   esi
  41cb9b:	fwait
  41cb9c:	popf   
  41cb9d:	push   edi
  41cb9e:	gs xchg ebp,eax
  41cba0:	popa   
  41cba1:	and    DWORD PTR [esi+eax*4-0x6a],esi
  41cba5:	dec    eax
  41cba6:	push   0xffffff84
  41cba8:	dec    ebx
  41cba9:	push   ebp
  41cbaa:	je     0x41cb3c
  41cbac:	pop    esi
  41cbad:	inc    esi
  41cbae:	inc    ebp
  41cbaf:	jmp    0x9a4618a8
  41cbb4:	jns    0x41cc0b
  41cbb6:	inc    ebx
  41cbb7:	je     0x41cc03
  41cbb9:	push   ebx
  41cbba:	popa   
  41cbbb:	push   edi
  41cbbc:	inc    edi
  41cbbd:	and    eax,0x42605b6d
  41cbc2:	jb     0x41cc0a
  41cbc4:	inc    ecx
  41cbc5:	pop    eax
  41cbc6:	inc    ebp
  41cbc7:	jmp    0x2e46eac0
  41cbcc:	mov    BYTE PTR [esi+edx*2+0x3b],dl
  41cbd0:	mov    WORD PTR [esi+0x65],ss
  41cbd3:	cmp    eax,0x3e742078
  41cbd8:	xchg   ebp,eax
  41cbd9:	dec    ecx
  41cbda:	push   0xc
  41cbdc:	mov    ds:0x8c156345,al
  41cbe1:	aas    
  41cbe2:	push   0x613d9427
  41cbe7:	sbb    dh,BYTE PTR [eax+edx*8+0x25f430f6]
  41cbee:	popa   
  41cbef:	cmc    
	...
  41cbfc:	les    edx,FWORD PTR [edx+0x6d]
  41cbff:	call   DWORD PTR [ebp+0x54]
  41cc02:	popa   
  41cc03:	sbb    DWORD PTR [ecx+0x3f],ecx
  41cc06:	pusha  
  41cc07:	rcl    BYTE PTR [eax+0x45],1
  41cc0a:	dec    ebp
  41cc0b:	iret   
  41cc0c:	push   eax
  41cc0d:	xchg   ecx,eax
  41cc0e:	push   es
  41cc0f:	push   edi
  41cc10:	hlt    
  41cc11:	and    eax,0x553bd561
  41cc16:	je     0x41cc18
  41cc18:	lods   al,BYTE PTR ds:[esi]
  41cc19:	icebp  
  41cc1a:	push   0x74fd9a74
  41cc1f:	gs sub eax,0x87726a00
  41cc25:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cc26:	idiv   bh
  41cc28:	lock gs push 0x73
  41cc2c:	push   0x16
  41cc2e:	imul   esp,DWORD PTR [ebp+0x70],0xffffffb3
  41cc32:	idiv   bh
  41cc34:	push   ebx
  41cc35:	dec    bx
  41cc37:	jne    0x41cbbb
  41cc39:	add    BYTE PTR [eax+0x42],ah
  41cc3c:	ja     0x41cc3e
  41cc3e:	fs push esp
  41cc40:	jno    0x41cbf5
  41cc42:	pop    edi
  41cc43:	fs jnp 0x41cbed
  41cc46:	pop    esi
  41cc47:	popa   
  41cc48:	lods   al,BYTE PTR ds:[esi]
  41cc49:	mov    ax,WORD PTR [ecx]
  41cc4c:	fld    DWORD PTR [ecx]
  41cc4e:	jae    0x41cca4
  41cc50:	mov    bh,0x3
  41cc52:	outs   dx,BYTE PTR ds:[esi]
  41cc53:	inc    ebx
  41cc54:	xor    DWORD PTR [edx],edx
  41cc56:	imul   esi,DWORD PTR [esi+ebx*8+0x63],0xfafd02bd
  41cc5e:	arpl   WORD PTR [ebp+0x0],sp
	...
  41cc69:	add    BYTE PTR [eax],al
  41cc6b:	add    BYTE PTR [esi],bl
  41cc6d:	addr16 xor al,0x1
  41cc70:	sbb    DWORD PTR [edx],eax
  41cc72:	jae    0x41ccc1
  41cc74:	loope  0x41cc78
  41cc76:	je     0x41cce4
  41cc78:	sti    
  41cc79:	adc    BYTE PTR [eax+0x6c],ah
  41cc7c:	jmp    0x41cc26
  41cc7e:	push   edi
  41cc7f:	ins    DWORD PTR es:[edi],dx
  41cc80:	sti    
  41cc81:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cc82:	idiv   bh
  41cc84:	jns    0x41cceb
  41cc86:	dec    edx
  41cc87:	inc    ebx
  41cc88:	rol    DWORD PTR ds:0x119a5367,cl
  41cc8e:	pusha  
  41cc8f:	outs   dx,BYTE PTR ds:[esi]
  41cc90:	stc    
  41cc91:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cc92:	idiv   bh
  41cc94:	jne    0x41ccfc
  41cc96:	inc    ebx
  41cc97:	js     0x41cc40
  41cc99:	inc    DWORD PTR [esi+0x72]
  41cc9c:	imul   DWORD PTR [eax-0x531b9d5d]
  41cca2:	add    ch,BYTE PTR [edi+0x73a5ecf5]
  41cca8:	retf   0xaa9f
  41ccab:	pop    esi
  41ccac:	leave  
  41ccad:	popf   
  41ccae:	sahf   
  41ccaf:	(bad)  
  41ccb0:	fild   DWORD PTR [esi]
  41ccb2:	mov    ebx,0xa6e9d260
  41ccb7:	data16 rcr bh,1
  41ccba:	mov    eax,0xa5edcb66
  41ccbf:	jno    0x41ccb8
  41ccc1:	in     al,0xa5
  41ccc3:	jno    0x41cc5e
  41ccc5:	ficomp WORD PTR [esi-0x69601ad0]
  41cccb:	imul   ecx,DWORD PTR [ebx+0x8902b9],0x0
	...
  41ccda:	add    BYTE PTR [eax],al
  41ccdc:	idiv   esp
  41ccde:	mov    ah,0x62
  41cce0:	xchg   esi,eax
  41cce1:	sub    eax,0x2b8b50a5
  41cce6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cce7:	pop    esi
  41cce8:	mov    cl,BYTE PTR [eax-0x6fc7b860]
  41ccee:	lahf   
  41ccef:	popa   
  41ccf0:	push   esi
  41ccf1:	cmp    BYTE PTR [edx],al
  41ccf3:	xchg   ebp,eax
  41ccf4:	test   DWORD PTR [ebp+eiz*4-0x5182d08d],0xae1b556c
  41ccff:	inc    ebp
  41cd00:	inc    ebp
  41cd01:	jne    0x41ccb0
  41cd03:	push   eax
  41cd04:	dec    ebx
  41cd05:	push   0xffffffa5
  41cd07:	pop    esi
  41cd08:	dec    edx
  41cd09:	mov    esp,0x78f70e02
  41cd0e:	lahf   
  41cd0f:	inc    eax
  41cd10:	and    eax,0x1a73a15f
  41cd15:	test   DWORD PTR [ebp+0x2bc1366],esi
  41cd1b:	pusha  
  41cd1c:	idiv   DWORD PTR [eax-0x61]
  41cd1f:	push   ebx
  41cd20:	push   ss
  41cd21:	arpl   sp,bx
  41cd23:	stos   BYTE PTR es:[edi],al
  41cd24:	sub    eax,0x6bdca48
  41cd29:	dec    eax
  41cd2a:	retf   0x203
  41cd2d:	arpl   WORD PTR [esi+eiz*4-0x5b35af49],bp
  41cd34:	in     al,0x47
  41cd36:	mov    dh,0xa5
  41cd38:	out    0x56,eax
  41cd3a:	into   
  41cd3b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cd3c:	xlat   BYTE PTR ds:[ebx]
  41cd3d:	inc    edi
  41cd3e:	in     eax,dx
  41cd3f:	add    eax,DWORD PTR [eax]
	...
  41cd49:	add    BYTE PTR [eax],al
  41cd4b:	add    BYTE PTR [esi+0x63],al
  41cd4e:	mov    al,0xa7
  41cd50:	aad    0x1b
  41cd52:	xchg   DWORD PTR [esp+eax*8-0x665871c5],ebp
  41cd59:	dec    eax
  41cd5a:	add    BYTE PTR [ebx],0x9a
  41cd5d:	ds mov dh,dl
  41cd60:	out    0x7c,al
  41cd62:	and    DWORD PTR [edi+0x172628c],0xb17d518a
  41cd6c:	xchg   ecx,eax
  41cd6d:	cmp    al,0x59
  41cd6f:	sahf   
  41cd70:	shl    DWORD PTR [edx+0x52],0xb1
  41cd74:	xchg   ebp,eax
  41cd75:	push   eax
  41cd76:	sbb    al,0xf2
  41cd78:	and    al,BYTE PTR [edi+0x39]
  41cd7b:	test   al,0xe8
  41cd7d:	int    0x9c
  41cd7f:	add    eax,DWORD PTR [ebp+0x48]
  41cd82:	inc    eax
  41cd83:	lds    ecx,FWORD PTR [eax+0x48]
  41cd86:	aas    
  41cd87:	leave  
  41cd88:	push   ebp
  41cd89:	dec    esp
  41cd8a:	and    bh,BYTE PTR [ecx+ecx*1+0x2503c363]
  41cd91:	dec    eax
  41cd92:	add    bl,dl
  41cd94:	inc    ebp
  41cd95:	dec    eax
  41cd96:	sbb    edi,DWORD PTR [ebx-0x5106bbb6]
  41cd9c:	adc    eax,0xa0c30528
  41cda1:	int    0x2f
  41cda3:	add    eax,DWORD PTR [ebp+0x48]
  41cda6:	push   es
  41cda7:	push   cs
  41cda8:	mov    dh,0x39
  41cdaa:	addr16 cli 
  41cdac:	imul   ebx,DWORD PTR [edx],0xe061
	...
  41cdba:	add    BYTE PTR [eax],al
  41cdbc:	hlt    
  41cdbd:	lahf   
  41cdbe:	add    al,0xbb
  41cdc0:	pop    ecx
  41cdc1:	inc    esi
  41cdc2:	inc    edi
  41cdc3:	fst    DWORD PTR [ecx-0x523bb4c1]
  41cdc9:	mov    WORD PTR [esi],es
  41cdcb:	sub    eax,0xc66130f4
  41cdd0:	cdq    
  41cdd1:	aas    
  41cdd2:	jno    0x41cd98
  41cdd4:	aas    
  41cdd5:	inc    eax
  41cdd6:	jge    0x41cd7c
  41cdd8:	mov    WORD PTR [esi+eax*1+0x6130f463],cs
  41cddf:	xchg   BYTE PTR [edi],dh
  41cde1:	push   ebx
  41cde2:	popa   
  41cde3:	mov    BYTE PTR [eax+0x40],ah
  41cde6:	dec    ebx
  41cde7:	test   BYTE PTR [ebp-0x74],ch
  41cdea:	push   es
  41cdeb:	push   cs
  41cdec:	hlt    
  41cded:	xor    BYTE PTR [ecx-0x7a],ah
  41cdf0:	inc    edi
  41cdf1:	inc    eax
  41cdf2:	jb     0x41cd93
  41cdf4:	push   ebp
  41cdf5:	cmp    DWORD PTR [ecx-0x7c],esi
  41cdf8:	dec    ecx
  41cdf9:	push   ebp
  41cdfa:	inc    ebp
  41cdfb:	jmp    0x304747f4
  41ce00:	inc    esi
  41ce01:	xor    DWORD PTR [ecx+0x51],esp
  41ce04:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ce05:	xor    DWORD PTR [eax+0x40],ebp
  41ce08:	xchg   esi,eax
  41ce09:	aas    
  41ce0a:	bound  ecx,QWORD PTR [ebx+edi*8-0x64]
  41ce0e:	add    al,0x1b
  41ce10:	js     0x41ce59
  41ce12:	inc    edi
  41ce13:	cmp    DWORD PTR [eax+0x3e],esi
  41ce16:	inc    ebx
  41ce17:	xor    al,0x85
  41ce19:	push   edx
  41ce1a:	popa   
  41ce1b:	pop    ss
  41ce1c:	xchg   DWORD PTR [ecx],esi
  41ce1e:	jae    0x41ce24
	...
  41ce2c:	test   esp,ecx
  41ce2e:	imul   BYTE PTR [esi+0x66130f5]
  41ce34:	push   0xb00713e
  41ce39:	popf   
  41ce3a:	push   edi
  41ce3b:	ins    BYTE PTR es:[edi],dx
  41ce3c:	mov    ds:0xa50037ed,eax
  41ce41:	popa   
  41ce42:	inc    ecx
  41ce43:	sbb    BYTE PTR gs:[ebp-0x59639a8b],0x57
  41ce4b:	ins    DWORD PTR es:[edi],dx
  41ce4c:	mov    bl,0xa1
  41ce4e:	idiv   bh
  41ce50:	aas    
  41ce51:	in     al,dx
  41ce52:	jo     0x41ceb5
  41ce54:	dec    esi
  41ce55:	stc    
  41ce56:	xor    eax,0x6b030832
  41ce5b:	ins    BYTE PTR es:[edi],dx
  41ce5c:	dec    esi
  41ce5d:	pusha  
  41ce5e:	iret   
  41ce5f:	add    BYTE PTR [ebp-0x8],ch
  41ce62:	arpl   WORD PTR [edx+ecx*4+0xd],bp
  41ce66:	outs   dx,DWORD PTR ds:[esi]
  41ce67:	gs ins DWORD PTR es:[edi],dx
  41ce69:	std    
  41ce6a:	jb     0x41ced1
  41ce6c:	(bad)  
  41ce6d:	pusha  
  41ce6e:	jne    0x41ced8
  41ce70:	add    DWORD PTR [ebx+ebp*2],0x33
  41ce74:	dec    esp
  41ce75:	(bad)  
  41ce76:	bound  ebp,QWORD PTR [edx+ecx*4+0x60]
  41ce7a:	outs   dx,DWORD PTR ds:[esi]
  41ce7b:	add    BYTE PTR [edi+0x6],ah
  41ce7e:	jae    0x41cee5
  41ce80:	mov    WORD PTR ds:0x125d7464,es
  41ce86:	pop    eax
  41ce87:	arpl   WORD PTR [ebp-0x30938b57],sp
  41ce8d:	data16 jge 0x41ce90
	...
  41ce9c:	pop    ss
  41ce9d:	add    DWORD PTR [ebx+0x65],esi
  41cea0:	dec    esp
  41cea1:	add    DWORD PTR [esp+esi*2+0xd],esp
  41cea5:	adc    eax,0xfa226164
  41ceaa:	push   ebx
  41ceab:	jb     0x41cee7
  41cead:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ceae:	idiv   bh
  41ceb0:	add    esi,ebp
  41ceb2:	push   0x72f9e869
  41ceb7:	repnz add ch,BYTE PTR cs:[ebx+0x0]
  41cebc:	test   esi,0x68235101
  41cec2:	iret   
  41cec3:	jae    0x41ceea
  41cec5:	xchg   ebx,eax
  41cec6:	sar    edi,0x98
  41cec9:	mov    ecx,0xc80b5101
  41cece:	rol    BYTE PTR [eax+0x1f],1
  41ced1:	enter  0x3eb9,0xf7
  41ced5:	int    0x1
  41ced7:	push   ecx
  41ced8:	add    ebp,DWORD PTR [eax-0x5c419332]
  41cede:	scas   al,BYTE PTR es:[edi]
  41cedf:	imul   DWORD PTR ds:[ebp+0x7eb5101]
  41cee6:	shl    BYTE PTR [ebx-0x1b],1
  41cee9:	cli    
  41ceea:	add    ch,dl
  41ceec:	imul   eax
  41ceee:	scas   al,BYTE PTR es:[edi]
  41ceef:	jno    0x41cea5
  41cef1:	push   cs
  41cef2:	mov    bl,0x4d
  41cef4:	scas   al,BYTE PTR es:[edi]
  41cef5:	cli    
  41cef6:	add    cl,BYTE PTR [esi]
  41cef8:	test   BYTE PTR [eax],0xaf
  41cefb:	jno    0x41cec1
  41cefd:	in     eax,dx
  41cefe:	mov    al,0x46
	...
  41cf0c:	sar    BYTE PTR [ecx-0xa708efe],0xbb
  41cf13:	pop    esi
  41cf14:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cf15:	repnz in al,0x63
  41cf18:	mov    ds:0xf73602e5,eax
  41cf1d:	loop   0x41cec3
  41cf1f:	bound  ecx,QWORD PTR [ebx-0x6c9c5edc]
  41cf25:	daa    
  41cf26:	add    ch,BYTE PTR [edx]
  41cf28:	neg    DWORD PTR [eax]
  41cf2a:	lods   eax,DWORD PTR ds:[esi]
  41cf2b:	jae    0x41cf8c
  41cf2d:	mov    DWORD PTR [edi-0x5bdcaa8d],ebp
  41cf33:	pop    esi
  41cf34:	dec    edx
  41cf35:	pop    ds
  41cf36:	add    al,BYTE PTR [edi-0x9]
  41cf39:	mov    WORD PTR [ebx-0x41e0a3a0],fs
  41cf3f:	inc    eax
  41cf41:	arpl   ax,cx
  41cf43:	add    edx,DWORD PTR [esi+0x3a]
  41cf46:	pop    es
  41cf47:	mov    ds:0x4194615,al
  41cf4c:	shl    DWORD PTR [edx+0xc],1
  41cf4f:	mov    al,ds:0xb70a5613
  41cf54:	or     eax,DWORD PTR [esi+0x14]
  41cf57:	test   eax,0x4296304
  41cf5c:	push   es
  41cf5d:	inc    eax
  41cf5e:	mul    DWORD PTR [edi+0x3abca80]
  41cf64:	push   es
  41cf65:	inc    eax
  41cf66:	leave  
  41cf67:	test   al,0xd7
  41cf69:	dec    esi
  41cf6a:	in     eax,dx
  41cf6b:	add    ebp,DWORD PTR [ecx]
  41cf6d:	arpl   bx,bx
  41cf6f:	test   al,0x0
	...
  41cf79:	add    BYTE PTR [eax],al
  41cf7b:	add    bh,dl
  41cf7d:	push   eax
  41cf7e:	in     eax,dx
  41cf7f:	add    esi,DWORD PTR [edx-0x3b57439e]
  41cf85:	push   ebp
  41cf86:	shl    BYTE PTR [esi-0x4842c621],0x40
  41cf8d:	retf   0x3cd
  41cf90:	mov    ds:0xa4d6ae35,al
  41cf95:	inc    ebx
  41cf96:	fwait
  41cf97:	mov    bh,0xa5
  41cf99:	push   edx
  41cf9a:	in     eax,dx
  41cf9b:	add    ebp,DWORD PTR [edx-0x70596fab]
  41cfa1:	xchg   ebp,eax
  41cfa2:	mov    ebx,0x813694e1
  41cfa7:	add    edi,DWORD PTR [edx+eiz*2+0x3ea1a299]
  41cfae:	cmp    dh,BYTE PTR [ebp-0x49c2ab6b]
  41cfb4:	arpl   WORD PTR [ecx+0x46],ax
  41cfb7:	mov    al,ds:0x3ed2455
  41cfbc:	inc    eax
  41cfbd:	arpl   WORD PTR [edx],bx
  41cfbf:	mov    ds:0xa84e3a4c,al
  41cfc4:	and    eax,0x814c0656
  41cfc9:	sbb    DWORD PTR [esi+edi*1-0x73],esi
  41cfcd:	inc    eax
  41cfce:	push   0xc
  41cfd0:	repz push ebp
  41cfd2:	jae    0x41cfd8
  41cfd4:	imul   eax,DWORD PTR [eax+ebp*2+0x1f],0xfd6a4595
  41cfdc:	hlt    
  41cfdd:	bound  eax,QWORD PTR [esi]
  41cfdf:	jmp    0x41cfe4
	...
  41cfec:	hlt    
  41cfed:	bound  eax,QWORD PTR [esi]
  41cfef:	jmp    0xe94832e8
  41cff4:	hlt    
  41cff5:	bound  eax,QWORD PTR [esi]
  41cff7:	jmp    0xe94832f0
  41cffc:	hlt    
  41cffd:	bound  eax,QWORD PTR [esi]
  41cfff:	jmp    0xe94832f8
  41d004:	hlt    
  41d005:	bound  eax,QWORD PTR [esi]
  41d007:	jmp    0xe9483300
  41d00c:	hlt    
  41d00d:	bound  eax,QWORD PTR [esi]
  41d00f:	jmp    0xe9483308
  41d014:	hlt    
  41d015:	bound  eax,QWORD PTR [esi]
  41d017:	jmp    0xe9483310
  41d01c:	hlt    
  41d01d:	bound  eax,QWORD PTR [esi]
  41d01f:	jmp    0xe9483318
  41d024:	hlt    
  41d025:	bound  eax,QWORD PTR [esi]
  41d027:	jmp    0xe9483320
  41d02c:	hlt    
  41d02d:	bound  eax,QWORD PTR [esi]
  41d02f:	jmp    0xe9483328
  41d034:	hlt    
  41d035:	bound  eax,QWORD PTR [esi]
  41d037:	jmp    0xe9483330
  41d03c:	hlt    
  41d03d:	bound  eax,QWORD PTR [esi]
  41d03f:	jmp    0xe9483338
  41d044:	hlt    
  41d045:	bound  eax,QWORD PTR [esi]
  41d047:	jmp    0x483340
  41d04c:	into   
  41d04d:	fs push es
	...
  41d05b:	add    dh,bl
  41d05d:	fs push es
  41d05f:	add    dh,bl
  41d061:	fs push es
  41d063:	add    dh,cl
  41d065:	fs push es
  41d067:	add    dh,cl
  41d069:	fs push es
  41d06b:	add    BYTE PTR [esi-0x61fff99c],bl
  41d071:	fs push es
  41d073:	add    BYTE PTR [esi-0x71fff99c],cl
  41d079:	fs push es
  41d07b:	add    BYTE PTR [esi-0x61fff99c],bl
  41d081:	fs push es
  41d083:	add    BYTE PTR [esi-0x71fff99c],cl
  41d089:	fs push es
  41d08b:	add    BYTE PTR [esi+0x64],bl
  41d08e:	push   es
  41d08f:	add    BYTE PTR [esi+0x64],bl
  41d092:	push   es
  41d093:	add    BYTE PTR [esi+0x64],cl
  41d096:	push   es
  41d097:	add    BYTE PTR [esi+0x64],cl
  41d09a:	push   es
  41d09b:	add    BYTE PTR [esi+0x64],bl
  41d09e:	push   es
  41d09f:	add    BYTE PTR [esi+0x64],bl
  41d0a2:	push   es
  41d0a3:	add    BYTE PTR [esi+0x64],cl
  41d0a6:	push   es
  41d0a7:	add    BYTE PTR [esi+0x64],cl
  41d0aa:	push   es
  41d0ab:	add    BYTE PTR [esi],bl
  41d0ad:	fs push es
  41d0af:	add    dl,al
  41d0b1:	fucomi st,st(1)
  41d0b3:	push   ecx
  41d0b4:	ins    BYTE PTR es:[edi],dx
  41d0b5:	push   ds
  41d0b6:	push   cs
  41d0b7:	mov    ch,bh
  41d0b9:	fimul  DWORD PTR [eax-0x1]
  41d0bc:	jl     0x41d07c
  41d0be:	pop    eax
  41d0bf:	ret    
	...
  41d0cc:	mov    ds:0xa951e9db,al
  41d0d1:	das    
  41d0d2:	xor    ecx,ecx
  41d0d4:	xchg   ebx,eax
  41d0d5:	(bad)  [eax+esi*1+0x7c]
  41d0d9:	push   eax
  41d0da:	or     cl,BYTE PTR [ebx+0x468b6761]
  41d0e0:	out    dx,eax
  41d0e1:	fld    DWORD PTR [eax-0x4]
  41d0e4:	ins    BYTE PTR es:[edi],dx
  41d0e5:	dec    eax
  41d0e6:	mov    ecx,DWORD PTR es:[ecx]
  41d0e9:	jecxz  0x41d121
  41d0eb:	imul   eax,DWORD PTR [ebx+0x60],0xffffff86
  41d0ef:	aas    
  41d0f0:	sub    al,0x4f
  41d0f2:	add    al,0xeb
  41d0f4:	into   
  41d0f5:	daa    
  41d0f6:	pop    eax
  41d0f7:	mov    ebx,DWORD PTR [edx+0x42ccc325]
  41d0fd:	fsub   st(1),st
  41d0ff:	adc    DWORD PTR [ebx-0x10ba7482],0xffffffd9
  41d106:	inc    eax
  41d107:	loopne 0x41d185
  41d109:	adc    eax,0xc3228be6
  41d10e:	add    dl,BYTE PTR [ecx-0x3d]
  41d111:	fst    DWORD PTR [eax-0x1c]
  41d114:	ins    BYTE PTR es:[edi],dx
  41d115:	sbb    eax,0x4abf8be2
  41d11a:	add    ecx,DWORD PTR [ebp-0x1]
  41d11d:	(bad)  [eax-0x8]
  41d120:	ins    BYTE PTR es:[edi],dx
  41d121:	sub    eax,0x7eb58bfe
  41d126:	add    eax,DWORD PTR [ebp-0x1]
  41d129:	fld    DWORD PTR [eax-0x18]
  41d12c:	jl     0x41d143
  41d12e:	dec    BYTE PTR [ebx+0x0]
	...
  41d13c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d13d:	add    BYTE PTR [ebx],0x55
  41d140:	out    dx,eax
  41d141:	fst    DWORD PTR [eax-0x10]
  41d144:	jl     0x41d163
  41d146:	dec    BYTE PTR [ebx+0x4d0366bf]
  41d14c:	out    dx,eax
  41d14d:	(bad)  [eax-0x4]
  41d150:	xor    BYTE PTR ds:0x62f700f2,bl
  41d156:	push   es
  41d157:	jmp    0x41d157
  41d159:	fist   DWORD PTR [eax-0xc]
  41d15c:	je     0x41d102
  41d15e:	add    al,0x89
  41d160:	mov    ds:0xef458ace,al
  41d165:	fimul  DWORD PTR [eax-0xc]
  41d168:	sub    al,0x1b
  41d16a:	push   ds
  41d16b:	jae    0x41d19c
  41d16d:	ficom  DWORD PTR [eax-0x10]
  41d170:	ins    BYTE PTR es:[edi],dx
  41d171:	popa   
  41d172:	add    eax,DWORD PTR [ebp-0x1]
  41d175:	fild   DWORD PTR [eax-0x24]
  41d178:	pop    ebp
  41d179:	push   ebp
  41d17a:	outs   dx,BYTE PTR ds:[esi]
  41d17b:	lods   al,BYTE PTR ds:[esi]
  41d17c:	cmc    
  41d17d:	and    al,BYTE PTR [esi]
  41d17f:	mov    ebp,DWORD PTR [edx]
  41d181:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d182:	push   esp
  41d183:	call   0x4835cf
  41d188:	je     0x41d129
  41d18a:	or     DWORD PTR [ebp-0x74e4af49],eax
  41d190:	inc    edx
  41d191:	iret   
  41d192:	mov    al,BYTE PTR [ebp-0x61]
  41d195:	push   esi
  41d196:	scas   eax,DWORD PTR es:[edi]
  41d197:	or     al,0x27
  41d199:	fmul   QWORD PTR [eax-0x14]
  41d19c:	ins    BYTE PTR es:[edi],dx
  41d19d:	xor    dl,ch
  41d19f:	mov    eax,DWORD PTR [eax]
	...
  41d1a9:	add    BYTE PTR [eax],al
  41d1ab:	add    BYTE PTR [edx],dh
  41d1ad:	(bad)  
  41d1ae:	mov    al,BYTE PTR [edi+eax*4]
  41d1b1:	bound  eax,QWORD PTR [ecx+0x8]
  41d1b4:	pop    esp
  41d1b5:	pop    eax
  41d1b6:	mov    ecx,DWORD PTR [ebp+0x67]
  41d1b9:	loop   0x41d17f
  41d1bb:	add    al,0x6e
  41d1bd:	sbb    dh,dh
  41d1bf:	jmp    0x41d15c
  41d1c1:	xchg   edx,eax
  41d1c2:	(bad)  
  41d1c3:	mov    edx,DWORD PTR [edx+0x28]
  41d1c6:	ret    
  41d1c7:	int3   
  41d1c8:	xor    edx,DWORD PTR [edi-0x68d43337]
  41d1ce:	leave  
  41d1cf:	int3   
  41d1d0:	inc    ebx
  41d1d1:	xchg   edi,eax
  41d1d2:	leave  
  41d1d3:	int3   
  41d1d4:	ret    0xe9d9
  41d1d7:	adc    DWORD PTR [ebx],0x6b
  41d1da:	out    dx,al
  41d1db:	add    eax,0x89f6c618
  41d1e0:	mov    edx,0x1f458aba
  41d1e5:	xor    ebp,esi
  41d1e7:	sub    DWORD PTR [eax],eax
  41d1e9:	(bad)  
  41d1ea:	test   BYTE PTR [ebx-0xb5ca0cd],0x68
  41d1f1:	and    al,0x6
  41d1f3:	push   0x4660ab
  41d1f8:	ins    BYTE PTR es:[edi],dx
  41d1f9:	pop    ss
  41d1fa:	out    dx,al
  41d1fb:	push   ecx
  41d1fc:	fsubr  DWORD PTR [edi-0xe]
  41d1ff:	ja     0x41d237
  41d201:	arpl   WORD PTR [ebx+0x62440f8],sp
  41d207:	push   0xfffffff7
  41d209:	cmp    BYTE PTR [esi],al
  41d20b:	push   0x4660ab
	...
  41d21c:	mov    al,0x6f
  41d21e:	(bad)  
  41d21f:	ja     0x41d257
  41d221:	arpl   WORD PTR [ebp+0x409d8f45],cx
  41d227:	cld    
  41d228:	mul    DWORD PTR [edx+0x6]
  41d22b:	add    BYTE PTR [ebx+ebx*2-0x1e74aa75],bl
  41d232:	ret    
  41d233:	add    DWORD PTR [esi+0x2f],ebp
  41d236:	cli    
  41d237:	cmp    edx,0xffffffc6
  41d23a:	or     eax,0x40da1673
  41d23f:	cld    
  41d240:	jl     0x41d298
  41d242:	or     DWORD PTR [ebp+esi*8+0x6c510622],0x5052ee2f
  41d24d:	outs   dx,DWORD PTR ds:[esi]
  41d24e:	bnd ja 0x41d207
  41d251:	bound  ecx,QWORD PTR [ebx+0x1db434d]
  41d257:	lea    eax,[ebx+0x4d]
  41d25a:	inc    ebp
  41d25b:	add    BYTE PTR [edx+esi*4],bl
  41d25e:	mov    ah,ch
  41d260:	retf   0xc9a1
  41d263:	int3   
  41d264:	xor    edx,DWORD PTR [esi-0x69d43337]
  41d26a:	leave  
  41d26b:	int3   
  41d26c:	inc    ebx
  41d26d:	xchg   esi,eax
  41d26e:	leave  
  41d26f:	int3   
  41d270:	mov    ds:0xa7a1e9d9,al
  41d275:	dec    edx
  41d276:	inc    ebp
  41d277:	add    BYTE PTR [ecx+0x7c3045d9],bh
  41d27d:	push   ss
  41d27e:	push   cs
  41d27f:	add    BYTE PTR ds:[eax],al
	...
  41d28a:	add    BYTE PTR [eax],al
  41d28c:	jle    0x41d2a9
  41d28e:	push   cs
  41d28f:	pop    ebp
  41d290:	mov    ah,0x97
  41d292:	leave  
  41d293:	int3   
  41d294:	stos   DWORD PTR es:[edi],eax
  41d295:	xchg   edi,eax
  41d296:	leave  
  41d297:	int3   
  41d298:	ret    
  41d299:	xchg   edi,eax
  41d29a:	leave  
  41d29b:	int3   
  41d29c:	and    bl,al
  41d29e:	jmp    0x56990d2e
  41d2a3:	mov    ebp,DWORD PTR [edx]
  41d2a5:	pop    ebx
  41d2a6:	push   ebp
  41d2a7:	dec    DWORD PTR [edx]
  41d2a9:	iret   
  41d2aa:	outs   dx,BYTE PTR ds:[esi]
  41d2ab:	inc    ecx
  41d2ac:	mul    DWORD PTR ds:0x97b3ccc3
  41d2b2:	leave  
  41d2b3:	int3   
  41d2b4:	stos   DWORD PTR es:[edi],eax
  41d2b5:	xchg   edi,eax
  41d2b6:	leave  
  41d2b7:	int3   
  41d2b8:	ret    
  41d2b9:	xchg   edi,eax
  41d2ba:	leave  
  41d2bb:	int3   
  41d2bc:	and    bl,al
  41d2be:	jmp    0x6c9d6646
  41d2c3:	add    BYTE PTR ds:0xf5dc6e63,cl
  41d2c9:	and    al,BYTE PTR [esi]
  41d2cb:	inc    DWORD PTR [edx]
  41d2cd:	retf   
  41d2ce:	outs   dx,BYTE PTR ds:[esi]
  41d2cf:	inc    ecx
  41d2d0:	neg    ecx
  41d2d2:	inc    eax
  41d2d3:	clc    
  41d2d4:	iret   
  41d2d5:	mov    edx,0xd7f74003
  41d2da:	inc    eax
  41d2db:	clc    
  41d2dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d2dd:	mov    edx,0xc440ffbb
  41d2e2:	add    ah,0xef
  41d2e5:	fld    DWORD PTR [eax-0x4]
  41d2e8:	jl     0x41d300
  41d2ea:	push   ss
  41d2eb:	push   ecx
  41d2ec:	jl     0x41d31c
  41d2ee:	or     dl,BYTE PTR [edx+0x0]
	...
  41d2f9:	add    BYTE PTR [eax],al
  41d2fb:	add    BYTE PTR [esi+ebx*1+0xe],ch
  41d2ff:	push   eax
  41d300:	sbb    BYTE PTR [esi],ch
  41d302:	cli    
  41d303:	mov    ebx,DWORD PTR [edx]
  41d305:	es ret 
  41d307:	int3   
  41d308:	mov    ds:0x3851e9d7,al
  41d30d:	push   ds
  41d30e:	cli    
  41d30f:	add    bh,dh
  41d311:	bound  eax,QWORD PTR [esi]
  41d313:	jmp    0x41d313
  41d315:	xlat   BYTE PTR ds:[ebx]
  41d316:	inc    eax
  41d317:	cld    
  41d318:	je     0x41d2bc
  41d31a:	add    al,0x89
  41d31c:	cmp    al,bh
  41d31e:	mov    cl,BYTE PTR [ebp-0x25]
  41d321:	xchg   DWORD PTR [ecx+0x10],ecx
  41d324:	inc    esp
  41d325:	mov    edx,DWORD PTR fs:[ebp-0x1]
  41d329:	pop    edi
  41d32a:	push   ecx
  41d32b:	cld    
  41d32c:	lock or al,0x4
  41d32f:	mov    ebp,DWORD PTR [edx]
  41d331:	push   edi
  41d332:	add    ecx,DWORD PTR [ebp-0x4d]
  41d335:	push   ebx
  41d336:	mov    al,0x11
  41d338:	in     al,dx
  41d339:	mov    al,ds:0x615f0771
  41d33e:	push   es
  41d33f:	add    bh,dh
  41d341:	mov    bh,0x1
  41d343:	jmp    0x41d2ec
  41d345:	pop    esi
  41d347:	mov    edx,DWORD PTR [edx-0x4c333cdb]
  41d34d:	xchg   esi,eax
  41d34e:	leave  
  41d34f:	int3   
  41d350:	stos   DWORD PTR es:[edi],eax
  41d351:	xchg   esi,eax
  41d352:	leave  
  41d353:	int3   
  41d354:	inc    ebx
  41d355:	xchg   esi,eax
  41d356:	leave  
  41d357:	int3   
  41d358:	ret    0xe9d7
  41d35b:	mov    ecx,0x662ff
	...
  41d36c:	rcl    edi,cl
  41d36e:	or     al,0x89
  41d370:	add    dh,BYTE PTR [ebx]
  41d372:	jle    0x41d3b5
  41d374:	mul    DWORD PTR ds:0x9633ccc3
  41d37a:	leave  
  41d37b:	int3   
  41d37c:	sub    edx,DWORD PTR [esi-0x69bc3337]
  41d382:	leave  
  41d383:	int3   
  41d384:	ret    0xe9d7
  41d387:	adc    DWORD PTR [ebx],0x72
  41d38a:	mov    eax,DWORD PTR [ebp-0x11]
  41d38d:	fistp  QWORD PTR [ebp+0x4]
  41d390:	not    DWORD PTR [ebx-0x7e]
  41d393:	mov    bh,dh
  41d395:	bound  eax,QWORD PTR [esi]
  41d397:	mov    esi,DWORD PTR [edx-0xcae74a6]
  41d39d:	fucomip st,st(3)
  41d39f:	or     dh,al
  41d3a1:	int    0x8c
  41d3a3:	push   ebp
  41d3a4:	jecxz  0x41d394
  41d3a6:	inc    eax
  41d3a7:	or     BYTE PTR [ebx+eiz*4+0xd],dh
  41d3ab:	mov    DWORD PTR [edx],esi
  41d3ad:	mov    bl,0xbe
  41d3af:	inc    ebp
  41d3b0:	shl    DWORD PTR [ebx+0x6],cl
  41d3b3:	add    bh,dh
  41d3b5:	int    0xc
  41d3b7:	mov    esi,DWORD PTR [edx]
  41d3b9:	mov    edi,0xebf6c182
  41d3be:	dec    eax
  41d3bf:	cld    
  41d3c0:	jl     0x41d3da
  41d3c2:	cli    
  41d3c3:	cmp    eax,DWORD PTR [edx-0x49]
  41d3c6:	jb     0x41d40e
  41d3c8:	ins    BYTE PTR es:[edi],dx
  41d3c9:	sub    dl,bh
  41d3cb:	mov    ebp,DWORD PTR [edx]
  41d3cd:	mov    bl,0x6
  41d3cf:	mov    bh,0x0
	...
  41d3d9:	add    BYTE PTR [eax],al
  41d3db:	add    bl,ch
  41d3dd:	and    eax,ebp
  41d3df:	cli    
  41d3e0:	sti    
  41d3e1:	in     eax,0xfb
  41d3e3:	add    ecx,DWORD PTR [edx]
  41d3e5:	jne    0x41d372
  41d3e7:	inc    ebp
  41d3e8:	jnp    0x41d3d8
  41d3ea:	dec    eax
  41d3eb:	lock add dl,bh
  41d3ee:	adc    DWORD PTR [ecx+0x76],eax
  41d3f1:	(bad)
  41d3f4:	mul    DWORD PTR [edx-0x73]
  41d3f7:	push   ebp
  41d3f8:	pop    edi
  41d3f9:	out    dx,al
  41d3fa:	inc    eax
  41d3fb:	or     BYTE PTR [eax+esi*1+0xa],bh
  41d3ff:	add    edi,edi
  41d401:	in     eax,dx
  41d402:	push   eax
  41d403:	clc    
  41d404:	ins    BYTE PTR es:[edi],dx
  41d405:	addr16 adc eax,0x8b52b203
  41d40b:	dec    ebp
  41d40c:	(bad)  
  41d40d:	in     eax,dx
  41d40e:	push   eax
  41d40f:	or     al,0xf4
  41d411:	push   ebx
  41d412:	mov    ecx,DWORD PTR [ebp+0x1f]
  41d415:	in     al,dx
  41d416:	add    DWORD PTR [edx],ecx
  41d418:	or     al,0xc
  41d41a:	mov    edx,DWORD PTR [ebp-0x1]
  41d41d:	in     eax,dx
  41d41e:	inc    eax
  41d41f:	or     ah,dh
  41d421:	and    al,0x2
  41d423:	mov    DWORD PTR [edx-0x7941296],edi
  41d429:	shl    esi,0x8b
  41d42c:	ficomp DWORD PTR [edi]
  41d42e:	ret    
  41d42f:	int3   
  41d430:	inc    edx
  41d431:	out    dx,al
  41d432:	jmp    0x8bc8a7ba
  41d437:	inc    ebp
  41d438:	out    dx,eax
  41d439:	jmp    0x41d47b
  41d43b:	in     al,0x7c
  41d43d:	das    
  41d43e:	loop   0x41d3cb
	...
  41d44c:	and    al,bh
  41d44e:	add    dl,BYTE PTR [ecx+0x3]
  41d451:	in     al,dx
  41d452:	push   eax
  41d453:	call   0x8c2ffbc4
  41d458:	jg     0x41d43c
  41d45a:	add    eax,0x48ebf700
  41d45f:	lock je 0x41d4a1
  41d462:	test   BYTE PTR [eax],0xe8
  41d465:	out    0xfa,al
  41d467:	add    bh,dh
  41d469:	bound  ecx,QWORD PTR [ebx+0x5165ff55]
  41d46f:	lock outs dx,BYTE PTR ds:[esi]
  41d471:	pop    ss
  41d472:	out    0x8b,al
  41d474:	xor    al,bl
  41d476:	cmp    BYTE PTR [eax+0x7],0x63
  41d47a:	pop    es
  41d47b:	test   BYTE PTR [edx+0x62],dl
  41d47e:	push   es
  41d47f:	add    ch,cl
  41d481:	bound  ebp,QWORD PTR [eax+eax*1+0x6c]
  41d485:	das    
  41d486:	out    0x8b,al
  41d488:	stos   BYTE PTR es:[edi],al
  41d489:	push   0x3
  41d48b:	push   ecx
  41d48c:	sti    
  41d48d:	adc    al,0xf7
  41d48f:	adc    eax,0x45393f
  41d494:	outs   dx,BYTE PTR ds:[esi]
  41d495:	daa    
  41d496:	cli    
  41d497:	mov    edi,DWORD PTR [edx-0x8c77d3e]
  41d49d:	ss sbb eax,0x8ac2b28b
  41d4a3:	push   ebp
  41d4a4:	out    dx,eax
  41d4a5:	gs adc eax,0x8aceaa89
  41d4ab:	inc    ebp
  41d4ac:	pop    ss
  41d4ad:	in     eax,dx
  41d4ae:	dec    eax
  41d4af:	or     BYTE PTR [eax],al
	...
  41d4b9:	add    BYTE PTR [eax],al
  41d4bb:	add    ah,dh
  41d4bd:	sub    dl,BYTE PTR [esi]
  41d4bf:	mov    DWORD PTR [edx+0x7c17eab6],ebp
  41d4c5:	push   ss
  41d4c6:	out    0x8b,al
  41d4c8:	xor    ch,BYTE PTR [ebx+0x3]
  41d4cb:	inc    edx
  41d4cc:	pop    es
  41d4cd:	jmp    0x8be6:0x2e6cf440
  41d4d4:	sub    ch,BYTE PTR [ebx+0x3]
  41d4d7:	adc    DWORD PTR [esi+0x16],edi
  41d4da:	jmp    0xf700:0x5bb3ac7
  41d4e1:	bound  ecx,QWORD PTR [ebx+0x7de49745]
  41d4e7:	adc    bh,dh
  41d4e9:	ss pop es
  41d4eb:	mov    esi,DWORD PTR [edx]
  41d4ed:	ret    
  41d4ee:	cmp    BYTE PTR [ecx],0xf7
  41d4f1:	ss inc esi
  41d4f4:	cmp    bh,BYTE PTR [ebx+0x62f70004]
  41d4fa:	mov    edx,DWORD PTR [ebp-0x75]
  41d4fd:	in     al,0x3b
  41d4ff:	add    BYTE PTR [ebx],al
  41d501:	inc    edx
  41d502:	mov    eax,DWORD PTR [ebp+0x6b]
  41d505:	in     al,dx
  41d506:	or     eax,0x6635681
  41d50b:	add    BYTE PTR [edi+0x37],dh
  41d50e:	sbb    cl,BYTE PTR [ebx+0x28ab6c2]
  41d514:	sbb    al,al
  41d516:	idiv   bh
  41d518:	enter  0x8b12,0x4d
  41d51c:	inc    ebx
  41d51d:	adc    ch,dh
  41d51f:	mov    ch,0x0
	...
  41d529:	add    BYTE PTR [eax],al
  41d52b:	add    BYTE PTR [edx],bh
  41d52d:	shl    dh,0x83
  41d530:	cmp    ebp,DWORD PTR [ebx-0x73]
  41d533:	inc    ebp
  41d534:	dec    ebx
  41d535:	int3   
  41d536:	sbb    DWORD PTR [ebx+0x28ab6ca],ecx
  41d53c:	ins    BYTE PTR es:[edi],dx
  41d53d:	cs push cs
  41d53f:	lea    ebp,[ebx+0x7c52046a]
  41d545:	es cli 
  41d547:	push   eax
  41d548:	psubusb mm7,mm0
  41d54b:	(bad)  
  41d54c:	clc    
  41d54d:	jecxz  0x41d510
  41d54f:	or     BYTE PTR [esi+0x25],bh
  41d552:	fimul  DWORD PTR [ebx+0x558ab73a]
  41d558:	ret    
  41d559:	jmp    0xb7746072
  41d55e:	add    al,0xfb
  41d561:	jmp    0x2dbec9a6
  41d566:	jmp    0xcb4d:0x8d66b683
  41d56d:	retf   
  41d56e:	mov    cs,WORD PTR [ebx-0x3d7d3cb6]
  41d574:	add    ebp,edx
  41d576:	push   eax
  41d577:	loopne 0x41d507
  41d579:	jo     0x41d572
  41d57b:	call   FWORD PTR [eax-0x4ba21f15]
  41d581:	scas   al,BYTE PTR es:[edi]
  41d582:	leave  
  41d583:	int3   
  41d584:	and    ch,ah
  41d586:	jmp    0x6eac690e
  41d58b:	lock cmc 
  41d58d:	and    al,BYTE PTR [esi]
  41d58f:	inc    DWORD PTR [eax]
	...
  41d599:	add    BYTE PTR [eax],al
  41d59b:	add    BYTE PTR [edx],cl
  41d59d:	arpl   WORD PTR [esi+0x41],di
  41d5a0:	imul   ecx
  41d5a2:	inc    eax
  41d5a3:	clc    
  41d5a4:	iret   
  41d5a5:	mov    esi,0xebf74003
  41d5aa:	inc    eax
  41d5ab:	clc    
  41d5ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d5ad:	retf   0xfd37
  41d5b0:	dec    eax
  41d5b1:	mov    edi,0xe9efc482
  41d5b6:	inc    eax
  41d5b7:	cld    
  41d5b8:	ins    BYTE PTR es:[edi],dx
  41d5b9:	sub    eax,0x157c5116
  41d5be:	or     dl,BYTE PTR [edx+0x7c]
  41d5c1:	and    eax,0x1520500e
  41d5c6:	cli    
  41d5c7:	mov    edx,DWORD PTR [edx]
  41d5c9:	sbb    eax,0xae43ccc3
  41d5ce:	leave  
  41d5cf:	int3   
  41d5d0:	mov    ds:0xa3a1e9eb,al
  41d5d5:	cmp    al,BYTE PTR [ebp+0x0]
  41d5d8:	xor    DWORD PTR [edx+0x6e],esp
  41d5db:	mov    ecx,DWORD PTR [edx]
  41d5dd:	pop    ss
  41d5de:	jle    0x41d621
  41d5e0:	imul   ebx
  41d5e2:	push   ebp
  41d5e3:	add    DWORD PTR [ebp-0xdaf725e],esp
  41d5e9:	pop    ds
  41d5ea:	ret    
  41d5eb:	int3   
  41d5ec:	ret    
  41d5ed:	scas   eax,DWORD PTR es:[edi]
  41d5ee:	leave  
  41d5ef:	int3   
  41d5f0:	and    ch,dl
  41d5f2:	jmp    0xa5b1a97a
  41d5f7:	push   eax
  41d5f8:	aas    
  41d5f9:	and    al,0x6
  41d5fb:	mov    eax,ebp
  41d5fd:	jb     0x41d5cc
  41d5ff:	add    BYTE PTR ds:[eax],al
	...
  41d60a:	add    BYTE PTR [eax],al
  41d60c:	jl     0x41d631
  41d60e:	ss mov eax,ebp
  41d611:	jmp    0x8b0a:0x2b6c3ed3
  41d618:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d619:	in     al,dx
  41d61a:	dec    eax
  41d61b:	hlt    
  41d61c:	jl     0x41d646
  41d61e:	repnz mov ebp,DWORD PTR [edi]
  41d621:	outs   dx,DWORD PTR ds:[esi]
  41d622:	lea    ecx,[ebp+0x7f]
  41d625:	jmp    0xb8fa:0x187ef850
  41d62c:	mul    BYTE PTR [edx+0x6]
  41d62f:	add    BYTE PTR [edx-0x5d],bh
  41d632:	jno    0x41d678
  41d634:	je     0x41d676
  41d636:	inc    BYTE PTR [eax]
  41d638:	retf   0x3366
  41d63b:	rcr    BYTE PTR [edi+edi*2-0x75],0x4d
  41d640:	aas    
  41d641:	jmp    0x750e:0x17fc1854
  41d648:	push   cs
  41d649:	jmp    0x890a:0x307cf840
  41d650:	scas   eax,DWORD PTR es:[edi]
  41d651:	pop    esi
  41d652:	mov    edx,DWORD PTR [ebp+0x1f]
  41d655:	jmp    0xb81e:0x217e1040
  41d65c:	mul    BYTE PTR [edx+0x6]
  41d65f:	add    BYTE PTR [ebx+ebx*2],cl
  41d662:	mov    ecx,DWORD PTR [ebp-0x1]
  41d665:	jmp    0xbb8c5f7e
  41d66a:	mov    al,BYTE PTR [ebp-0x11]
  41d66d:	jns    0x41d6b0
  41d66f:	cld    
	...
  41d67c:	push   0x67
  41d67e:	xor    eax,eax
  41d680:	int3   
  41d681:	data16 jmp 0x41d637
  41d684:	add    al,0xa3
  41d686:	mov    ah,ch
  41d688:	sub    ah,BYTE PTR [edx-0x514c3337]
  41d68e:	leave  
  41d68f:	int3   
  41d690:	stos   DWORD PTR es:[edi],eax
  41d691:	scas   al,BYTE PTR es:[edi]
  41d692:	leave  
  41d693:	int3   
  41d694:	ret    
  41d695:	scas   al,BYTE PTR es:[edi]
  41d696:	leave  
  41d697:	int3   
  41d698:	inc    edx
  41d699:	jmp    0x45bf:0x5a9383e9
  41d6a0:	lahf   
  41d6a1:	bound  esi,QWORD PTR [esi]
  41d6a3:	add    bh,dh
  41d6a5:	dec    edx
  41d6a6:	add    al,BYTE PTR [ebx]
  41d6a8:	aaa    
  41d6a9:	arpl   WORD PTR [ebp+0x623ff3c],sp
  41d6af:	push   eax
  41d6b0:	(bad)  
  41d6b1:	adc    edx,edi
  41d6b3:	push   DWORD PTR [eax-0x1f]
  41d6b6:	ror    DWORD PTR [eax],0x7e
  41d6b9:	daa    
  41d6ba:	repnz push 0xffffffb7
  41d6bd:	jmp    0xea08cf0a
  41d6c2:	adc    BYTE PTR [edi+ecx*8],bl
  41d6c5:	and    eax,DWORD PTR [esi]
  41d6c7:	mov    esi,DWORD PTR [ebp-0x895a9ee]
  41d6cd:	mov    ebp,0x5694f450
  41d6d2:	jle    0x41d715
  41d6d4:	mul    ecx
  41d6d6:	cmp    BYTE PTR [edi+ebp*4],dl
  41d6d9:	and    eax,DWORD PTR [esi]
  41d6db:	add    BYTE PTR [edx+0x2be65],ch
	...
  41d6e9:	add    BYTE PTR [eax],al
  41d6eb:	add    bh,dh
  41d6ed:	bound  eax,QWORD PTR [esi]
  41d6ef:	jmp    0x41d68e
  41d6f1:	jmp    0x2336d6fe
  41d6f6:	push   es
  41d6f7:	mov    DWORD PTR [edx-0x7fff924e],esi
  41d6fd:	arpl   WORD PTR [esi],ax
  41d6ff:	push   0x4660f7
  41d704:	jl     0x41d75c
  41d706:	adc    bh,BYTE PTR [eax+0x36]
  41d709:	arpl   WORD PTR [ebp+0x660f7c2],ax
  41d70f:	add    BYTE PTR ds:0xc8fe97cb,ah
  41d715:	mov    esp,0xfaf3c482
  41d71a:	add    eax,0x29633702
  41d71f:	add    ch,dh
  41d721:	bound  eax,QWORD PTR [esi]
  41d723:	mov    edi,edx
  41d725:	push   esi
  41d726:	jle    0x41d769
  41d728:	test   DWORD PTR [edi+0x26ea89ce],0xe7f7417e
  41d732:	adc    BYTE PTR [edi+ecx*1+0x22],al
  41d736:	push   es
  41d737:	push   edx
  41d738:	push   esi
  41d739:	push   edi
  41d73a:	jle    0x41d77d
  41d73c:	not    DWORD PTR [edx]
  41d73e:	mov    ecx,DWORD PTR [ebp+0x67]
  41d741:	adc    ch,dh
  41d743:	popf   
  41d744:	imul   edi,DWORD PTR [esi+esi*8-0x7490c47d],0x15
  41d74c:	add    edi,DWORD PTR [ebx]
  41d74e:	inc    ebp
	...
  41d75b:	add    ah,dh
  41d75d:	adc    eax,0xcaa2890e
  41d762:	mov    dl,BYTE PTR [ebp+0x4f]
  41d765:	mov    esp,0x1e528be3
  41d76a:	ret    
  41d76b:	int3   
  41d76c:	inc    ebx
  41d76d:	scas   eax,DWORD PTR es:[edi]
  41d76e:	leave  
  41d76f:	int3   
  41d770:	ret    0xe9e7
  41d773:	mov    edi,DWORD PTR [edx-0x14bac496]
  41d779:	das    
  41d77a:	dec    DWORD PTR [edx+0x5eb6aba]
  41d780:	sbb    al,0x60
  41d782:	mov    eax,DWORD PTR [ebp-0xd]
  41d785:	sbb    eax,0xaf2bccc3
  41d78a:	leave  
  41d78b:	int3   
  41d78c:	ret    
  41d78d:	scas   al,BYTE PTR es:[edi]
  41d78e:	leave  
  41d78f:	int3   
  41d790:	inc    edx
  41d791:	call   0x8f155b7f
  41d796:	mov    edi,0x9662db45
  41d79b:	add    edi,esi
  41d79d:	out    0x40,eax
  41d79f:	or     BYTE PTR [esi+0x25],bh
  41d7a2:	fimul  WORD PTR [ebx+0x558a9b32]
  41d7a8:	out    dx,eax
  41d7a9:	pop    edi
  41d7aa:	push   ebp
  41d7ab:	cmp    al,0x7e
  41d7ad:	adc    eax,0xc3328be6
  41d7b2:	push   es
  41d7b3:	mov    bh,0x2f
  41d7b5:	push   edi
  41d7b6:	mov    edx,DWORD PTR [ebp-0x69]
  41d7b9:	in     eax,dx
  41d7ba:	inc    ecx
  41d7bb:	or     ch,bh
  41d7bd:	jmp    0x42c002
	...
  41d7ca:	add    BYTE PTR [eax],al
  41d7cc:	pop    ds
  41d7cd:	push   edi
  41d7ce:	add    eax,DWORD PTR [eax-0x9]
  41d7d1:	out    0x8,eax
  41d7d3:	cmp    al,0xff
  41d7d5:	and    DWORD PTR [esi],eax
  41d7d7:	push   ecx
  41d7d8:	pop    edi
  41d7d9:	sub    edi,ebx
  41d7db:	jmp    FWORD PTR [eax-0x21]
  41d7de:	ror    DWORD PTR [eax],0x6e
  41d7e1:	and    eax,0x4ab76af6
  41d7e6:	push   es
  41d7e7:	xor    bh,dh
  41d7e9:	bound  ebp,QWORD PTR [esi+0x0]
  41d7ec:	addr16 popa 
  41d7ee:	push   es
  41d7ef:	push   0xfffffff7
  41d7f1:	mov    ebx,0x256ef050
  41d7f6:	loop   0x41d783
  41d7f8:	retf   0x8ac2
  41d7fb:	inc    edx
  41d7fc:	ret    
  41d7fd:	adc    cl,BYTE PTR [ebx-0x74ee10b3]
  41d803:	push   ebp
  41d804:	adc    edx,DWORD PTR [eax]
  41d806:	out    dx,al
  41d807:	rcl    DWORD PTR [edx],0xbb
  41d80a:	test   BYTE PTR [ebx+0x45bf6e33],0xb
  41d811:	bound  eax,QWORD PTR [esi]
  41d813:	add    bh,dh
  41d815:	(bad)  
  41d816:	or     al,0x8b
  41d818:	cmp    ch,BYTE PTR [edi-0x14093f7e]
  41d81e:	inc    eax
  41d81f:	hlt    
  41d820:	ins    BYTE PTR es:[edi],dx
  41d821:	sub    dh,ah
  41d823:	push   fs
  41d825:	adc    al,0x0
  41d827:	cmp    DWORD PTR [edx],ebp
  41d829:	scas   eax,DWORD PTR es:[edi]
  41d82a:	jb     0x41d885
  41d82c:	jl     0x41d84e
  41d82e:	out    dx,al
  41d82f:	add    DWORD PTR [eax],0x0
	...
  41d83a:	add    BYTE PTR [eax],al
  41d83c:	aas    
  41d83d:	dec    edi
  41d83e:	push   es
  41d83f:	je     0x41d873
  41d841:	out    dx,al
  41d842:	dec    eax
  41d843:	call   0x5814bc
  41d848:	and    esi,DWORD PTR [edi-0x75]
  41d84b:	push   ebp
  41d84c:	(bad)  
  41d84d:	out    dx,al
  41d84e:	inc    ebx
  41d84f:	adc    BYTE PTR [eax+ebp*1-0x1a],ch
  41d853:	mov    esp,DWORD PTR [esi]
  41d855:	ja     0x41d7e0
  41d857:	inc    esp
  41d858:	out    0xb9,eax
  41d85a:	mov    cl,BYTE PTR [ebp-0x69]
  41d85d:	jbe    0x41d833
  41d85f:	test   DWORD PTR [esi],0x57558b77
  41d865:	push   0xffffffa7
  41d867:	inc    edx
  41d868:	sub    edx,DWORD PTR [ebx]
  41d86a:	mov    eax,DWORD PTR [ebp+0x4f]
  41d86d:	out    dx,al
  41d86e:	dec    eax
  41d86f:	or     ah,dh
  41d871:	sub    dl,BYTE PTR [edx]
  41d873:	push   ecx
  41d874:	jl     0x41d886
  41d876:	out    dx,al
  41d877:	mov    esi,DWORD PTR [edx-0xcbdfd42]
  41d87d:	adc    ch,dh
  41d87f:	push   ebp
  41d880:	cmp    bh,BYTE PTR [edx+0x673b83f6]
  41d886:	mov    ecx,DWORD PTR [ebp+0x1f]
  41d889:	out    0xc4,al
  41d88b:	sub    BYTE PTR [esi+0x28],ch
  41d88e:	out    dx,al
  41d88f:	jmp    0x41d816
  41d891:	out    dx,al
  41d892:	push   eax
  41d893:	in     al,0xa5
  41d895:	retf   0xfc07
  41d898:	or     BYTE PTR [edx+0x4afbc482],bh
  41d89e:	and    al,BYTE PTR [ebx]
	...
  41d8ac:	mov    bh,0x62
  41d8ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d8af:	cmp    al,0x6f
  41d8b1:	and    al,0x6
  41d8b3:	push   eax
  41d8b4:	fucomip st,st(5)
  41d8b6:	sti    
  41d8b7:	jmp    eax
  41d8b9:	in     eax,0xc1
  41d8bb:	or     BYTE PTR [esi+0x1f],ch
  41d8be:	fiadd  DWORD PTR [ebx+0x417e7b12]
  41d8c4:	mul    DWORD PTR [edx+0x71]
  41d8c7:	or     ch,BYTE PTR [edi+eiz*2+0x36]
  41d8cb:	js     0x41d903
  41d8cd:	arpl   WORD PTR [ebp-0x1],dx
  41d8d0:	dec    edx
  41d8d1:	xchg   edi,eax
  41d8d2:	cmp    BYTE PTR ds:0x453aef,0xf7
  41d8d9:	das    
  41d8da:	sbb    ch,BYTE PTR [edx+0x37]
  41d8dd:	dec    ebx
  41d8de:	push   es
  41d8df:	xor    bh,dh
  41d8e1:	bound  ecx,QWORD PTR [ebx-0x74eb74ab]
  41d8e7:	inc    ebp
  41d8e8:	xchg   edi,eax
  41d8e9:	in     eax,dx
  41d8ea:	dec    ebp
  41d8eb:	xor    al,0x26
  41d8ed:	mov    edx,0x4e94f050
  41d8f2:	jle    0x41d935
  41d8f4:	test   ebp,0x4ab76a10
  41d8fa:	push   es
  41d8fb:	xor    bh,dh
  41d8fd:	bound  ecx,QWORD PTR [ebx+0x6c145355]
  41d903:	add    BYTE PTR [eax+0xf],cl
  41d906:	mul    BYTE PTR [ebx+0x453aeb]
  41d90c:	je     0x41d985
  41d90e:	adc    bh,BYTE PTR [eax+0x0]
	...
  41d919:	add    BYTE PTR [eax],al
  41d91b:	add    BYTE PTR [esi+0x2750662],dh
  41d921:	dec    ebp
  41d922:	inc    esi
  41d923:	push   0x672f7
  41d928:	ins    BYTE PTR es:[edi],dx
  41d929:	pop    ds
  41d92a:	cli    
  41d92b:	push   eax
  41d92c:	popf   
  41d92d:	(bad)  
  41d92e:	not    DWORD PTR [ebp+0x7]
  41d931:	add    eax,0x62b67812
  41d936:	mov    ecx,DWORD PTR [ebp+0x13]
  41d939:	jmp    0x41d983
  41d93b:	fdivr  DWORD PTR [esi+ecx*1-0x22]
  41d93f:	mov    esi,DWORD PTR [edx]
  41d941:	fwait
  41d942:	add    al,BYTE PTR [edx+0x23]
  41d945:	jmp    0x51fa:0x266ce040
  41d94c:	jl     0x41d95c
  41d94e:	loop   0x41d9a2
  41d950:	xchg   esi,eax
  41d951:	dec    edi
  41d952:	jle    0x41d995
  41d954:	not    DWORD PTR [edx]
  41d956:	out    dx,al
  41d957:	xchg   ebp,eax
  41d958:	mov    ebx,0xbb83f6b8
  41d95d:	mov    ecx,DWORD PTR [di-0x69]
  41d961:	in     al,0xbc
  41d963:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d964:	mul    DWORD PTR [edx+0x6]
  41d967:	add    BYTE PTR [ebx],ah
  41d969:	jge    0x41d8f6
  41d96b:	push   ebp
  41d96c:	xchg   edi,eax
  41d96d:	in     al,dx
  41d96e:	inc    eax
  41d96f:	fdiv   st,st(4)
  41d971:	in     al,0xa5
  41d973:	add    bh,dh
  41d975:	bound  ecx,QWORD PTR [ebp+0x48ec8b45]
  41d97b:	loopne 0x41d9f9
  41d97d:	dec    esi
  41d97e:	adc    bh,BYTE PTR [eax+0x0]
	...
  41d989:	add    BYTE PTR [eax],al
  41d98b:	add    BYTE PTR [esi+0x2b512b62],dh
  41d991:	jmp    0xa106:0x21df4410
  41d998:	mov    ebx,0xa700453a
  41d99d:	jmp    0x41d9a7
  41d99f:	adc    al,0xbf
  41d9a1:	and    DWORD PTR [esi],eax
  41d9a3:	push   ecx
  41d9a4:	ins    BYTE PTR es:[edi],dx
  41d9a5:	push   cs
  41d9a6:	jmp    0x28ff:0xfc381f52
  41d9ad:	in     al,0xc1
  41d9af:	or     al,0x6c
  41d9b1:	push   ds
  41d9b2:	out    0x8b,al
  41d9b4:	jmp    0x4e63:0xf7417e4e
  41d9bb:	sub    BYTE PTR [esi+0x66],bh
  41d9be:	push   edx
  41d9bf:	js     0x41d977
  41d9c1:	bound  eax,QWORD PTR [ebx+0x453abf3d]
  41d9c7:	add    bh,dh
  41d9c9:	sub    eax,0x4f028b29
  41d9ce:	jle    0x41da11
  41d9d0:	not    DWORD PTR [eiz*4+0x6225f54]
  41d9d7:	push   eax
  41d9d8:	jl     0x41da3f
  41d9da:	ss js  0x41da13
  41d9dd:	arpl   WORD PTR [ebp-0x18],dx
  41d9e0:	aas    
  41d9e1:	mov    bh,0xf6
  41d9e3:	push   DWORD PTR [esi+ebx*4+0x9]
  41d9e7:	mov    ecx,DWORD PTR [edx]
  41d9e9:	dec    edi
  41d9ea:	jle    0x41da2d
  41d9ec:	not    DWORD PTR [esi+ebp*8]
  41d9ef:	dec    ecx
	...
  41d9fc:	sahf   
  41d9fd:	mov    bh,0xf6
  41d9ff:	xor    DWORD PTR [ebx+0x1f61eb5e],0x6f
  41da06:	add    eax,DWORD PTR [eax-0x9]
  41da09:	add    DWORD PTR [edx],edi
  41da0b:	js     0x41da43
  41da0d:	arpl   WORD PTR [esi-0x18],dx
  41da10:	and    edi,DWORD PTR [edx-0x618b000a]
  41da16:	or     eax,0x8a8eb289
  41da1b:	or     eax,0x453b0b
  41da20:	(bad)  
  41da21:	jmp    0x41da73
  41da23:	loopne 0x41d9bb
  41da25:	dec    esi
  41da26:	jle    0x41da69
  41da28:	mul    DWORD PTR [ebx+0x44]
  41da2b:	sub    BYTE PTR [edi-0x40cff715],ah
  41da31:	and    DWORD PTR [esi],eax
  41da33:	push   ecx
  41da34:	pop    ds
  41da35:	xchg   edx,edi
  41da37:	jmp    FWORD PTR [eax]
  41da39:	jecxz  0x41d9fc
  41da3b:	or     al,0x6c
  41da3d:	dec    ebp
  41da3e:	ss js  0x41d9f7
  41da41:	bound  eax,QWORD PTR [ebp+0x52d67c2]
  41da47:	add    BYTE PTR [esi+0x4d],bh
  41da4a:	pop    edx
  41da4b:	js     0x41da03
  41da4d:	bound  ecx,QWORD PTR [ecx+0x6c11ff45]
  41da53:	inc    eax
  41da54:	pop    ebp
  41da55:	pop    ebp
  41da56:	mov    ecx,DWORD PTR ds:0x453b4b
  41da5c:	inc    esi
  41da5d:	mov    dh,0x50
  41da5f:	aam    0x0
	...
  41da69:	add    BYTE PTR [eax],al
  41da6b:	add    bh,cl
  41da6d:	ret    0xfffa
  41da70:	sar    bl,1
  41da72:	add    al,0x0
  41da74:	mul    DWORD PTR [edx-0x75]
  41da77:	in     eax,0x22
  41da79:	mov    eax,ds:0xa7ab0001
  41da7e:	leave  
  41da7f:	int3   
  41da80:	ret    
  41da81:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41da82:	leave  
  41da83:	int3   
  41da84:	inc    edx
  41da85:	jmp    0x408b:0x6b3a8be9
  41da8c:	fwait
  41da8d:	sbb    bl,al
  41da8f:	int3   
  41da90:	ret    
  41da91:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41da92:	leave  
  41da93:	int3   
  41da94:	and    ch,dl
  41da96:	jmp    0x8b5003ee
  41da9b:	cmp    eax,0x453ad7
  41daa0:	jl     0x41dafa
  41daa2:	sub    bh,BYTE PTR [eax-0x4a]
  41daa5:	bound  ecx,QWORD PTR [ebx+0x453aff35]
  41daab:	add    BYTE PTR [eax+0x345d5b14],bh
  41dab1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dab2:	leave  
  41dab3:	int3   
  41dab4:	mov    ds:0xcf51e9e9,al
  41dab9:	push   ds
  41daba:	add    eax,DWORD PTR [eax-0x9]
  41dabd:	add    edi,DWORD PTR [edx]
  41dabf:	js     0x41da77
  41dac1:	bound  edx,QWORD PTR [esi-0x18]
  41dac4:	pop    ebx
  41dac5:	mov    ebx,0x9f74fff6
  41daca:	or     eax,0x8ab6b289
  41dacf:	dec    ebp
	...
  41dadc:	call   DWORD PTR [ebx]
  41dade:	ins    BYTE PTR es:[edi],dx
  41dadf:	add    BYTE PTR [eax+edx*2+0x5e],bh
  41dae3:	js     0x41da9b
  41dae5:	bound  edx,QWORD PTR [edi+edi*8-0x5e]
  41dae9:	mov    dh,0x8a
  41daeb:	in     eax,0x52
  41daed:	mov    ds:0xea42ccc9,al
  41daf2:	jmp    0xbfc0ae7a
  41daf7:	inc    ebp
  41daf8:	fbld   TBYTE PTR [edx+0x6]
  41dafb:	add    bh,dh
  41dafd:	popf   
  41dafe:	inc    eax
  41daff:	fmul   QWORD PTR [edi+0x63]
  41db02:	push   es
  41db03:	add    BYTE PTR [eax-0x8fe0de1],bh
  41db09:	bound  eax,QWORD PTR [esi]
  41db0b:	(bad)  
  41db0c:	cmp    dh,BYTE PTR [edi+0x62f70005]
  41db12:	mov    edi,0x6629b45
  41db17:	add    bh,dh
  41db19:	jmp    0x67bfe366
  41db1e:	ss js  0x41db57
  41db21:	arpl   si,bp
  41db23:	test   eax,0xa1f6b588
  41db28:	(bad)  
  41db29:	cmp    al,BYTE PTR [ebp+0x0]
  41db2c:	sbb    dh,BYTE PTR [esi+0x2ef700f6]
  41db32:	or     al,bh
  41db34:	cli    
  41db35:	jp     0x41dbb5
  41db37:	inc    ecx
  41db38:	mul    DWORD PTR [edx+0x6]
  41db3b:	add    bh,dh
  41db3d:	leave  
  41db3e:	or     eax,edi
	...
  41db4c:	bnd jp 0x41dbcd
  41db4f:	inc    ecx
  41db50:	mul    DWORD PTR [ebx+0x6]
  41db53:	add    bh,dh
  41db55:	loope  0x41db8f
  41db57:	xor    BYTE PTR [edi-0x5dfff9dd],ch
  41db5d:	push   0x3adf05bf
  41db62:	inc    ebp
  41db63:	add    bh,dh
  41db65:	bound  eax,QWORD PTR [esi]
  41db67:	add    BYTE PTR [edi+esi*2+0x3e],dh
  41db6b:	js     0x41db23
  41db6d:	bound  eax,QWORD PTR [esi]
  41db6f:	jne    0x41db63
  41db71:	dec    eax
  41db72:	push   es
  41db73:	jmp    edx
  41db75:	bound  edi,QWORD PTR [esi+0x41]
  41db78:	idiv   edi
  41db7a:	xor    eax,0x8b633678
  41db7f:	or     eax,0x453b27
  41db84:	outs   dx,BYTE PTR ds:[esi]
  41db85:	es out dx,al
  41db87:	mov    ebp,edx
  41db89:	jb     0x41dc09
  41db8b:	inc    ecx
  41db8c:	mul    edi
  41db8e:	inc    eax
  41db8f:	call   0x897bfc88
  41db94:	xor    cl,bl
  41db96:	mov    cl,BYTE PTR [ebp-0x61]
  41db99:	jmp    0x6806:0x222f1c08
  41dba0:	inc    edi
  41dba1:	pusha  
  41dba2:	inc    esi
  41dba3:	add    BYTE PTR [eax+0x3678064e],bl
  41dba9:	arpl   WORD PTR [ebx+0x6220f3c],sp
  41dbaf:	mov    DWORD PTR [eax],0x0
  41dbb5:	add    BYTE PTR [eax],al
  41dbb7:	add    BYTE PTR [eax],al
  41dbb9:	add    BYTE PTR [eax],al
  41dbbb:	add    dl,bh
  41dbbd:	es jle 0x41dc01
  41dbc0:	imul   DWORD PTR ds:0x4af74003
  41dbc6:	add    si,WORD PTR [edi+0x23158b62]
  41dbcd:	cmp    eax,DWORD PTR [ebp+0x0]
  41dbd0:	(bad)
  41dbd3:	not    DWORD PTR [eax-0x4c]
  41dbd6:	add    ah,0xff
  41dbd9:	dec    DWORD PTR [ebp+0x78]
  41dbdc:	mov    dh,0x62
  41dbde:	not    DWORD PTR ds:0x453aaf
  41dbe4:	push   esp
  41dbe5:	sbb    edi,DWORD PTR [esi+0x41]
  41dbe8:	test   DWORD PTR [ecx],0x62b6784a
  41dbee:	push   esi
  41dbef:	call   0x389157
  41dbf4:	je     0x41db95
  41dbf6:	add    DWORD PTR [ecx+0x4d8ab2b2],ecx
  41dbfc:	pop    es
  41dbfd:	adc    ch,dh
  41dbff:	aad    0xf9
  41dc01:	mov    bl,0xf6
  41dc03:	cmp    DWORD PTR [ebx+0x6f34a35e],0x22
  41dc0a:	push   es
  41dc0b:	mov    ecx,DWORD PTR [edx-0x4d]
  41dc0e:	push   ebx
  41dc0f:	push   0xfffffff7
  41dc11:	add    DWORD PTR [edx],esi
  41dc13:	js     0x41dc4b
  41dc15:	arpl   WORD PTR [esi-0x18],dx
  41dc18:	imul   ebp,DWORD PTR [ebx-0x618b000a],0x9
  41dc1f:	mov    eax,DWORD PTR [eax]
	...
  41dc29:	add    BYTE PTR [eax],al
  41dc2b:	add    BYTE PTR [edx],ch
  41dc2d:	mov    bl,0x8c
  41dc2f:	dec    ebp
  41dc30:	xchg   edi,eax
  41dc31:	out    0x50,eax
  41dc33:	cld    
  41dc34:	in     al,dx
  41dc35:	or     eax,0xe83d73f6
  41dc3a:	inc    eax
  41dc3b:	loopne 0x41dc84
  41dc3d:	call   0xcb68b88a
  41dc42:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dc43:	sti    
  41dc44:	mov    BYTE PTR [ebx-0x103b7e],dh
  41dc4a:	inc    ebp
  41dc4b:	js     0x41dc83
  41dc4d:	arpl   WORD PTR [ebx+0x453ab715],cx
  41dc53:	add    ch,al
  41dc55:	add    DWORD PTR [edx+0x78],ecx
  41dc58:	mov    dh,0x62
  41dc5a:	add    eax,DWORD PTR [ebp+0x53]
  41dc5d:	adc    cl,BYTE PTR [ebx+0x453b0b0d]
  41dc63:	add    ah,dh
  41dc65:	and    eax,0x8b4f51fa
  41dc6a:	cld    
  41dc6b:	(bad)  
  41dc6c:	cmp    bh,bl
  41dc6e:	ror    DWORD PTR [esp+edi*2],0xd
  41dc72:	repnz add eax,edx
  41dc75:	xchg   esi,eax
  41dc76:	add    dl,BYTE PTR [ebp+0x1b]
  41dc79:	jmp    0x1daec0ce
  41dc7e:	cli    
  41dc7f:	add    edi,DWORD PTR [edx+0xb458c96]
  41dc85:	out    0x48,eax
  41dc87:	loopne 0x41dc55
  41dc89:	gs inc esi
  41dc8b:	js     0x41dc43
  41dc8d:	bound  ecx,QWORD PTR [ebp+0x4d]
	...
  41dc9b:	add    bh,dl
  41dc9d:	mov    esi,0xab32c797
  41dca2:	add    eax,0xeb62f700
  41dca7:	or     DWORD PTR [eax+ebx*1-0x2],ebp
  41dcab:	xor    DWORD PTR [ebp-0x30aa7299],0xffffffde
  41dcb2:	inc    eax
  41dcb3:	clc    
  41dcb4:	cld    
  41dcb5:	daa    
  41dcb6:	div    BYTE PTR [ebx-0x1]
  41dcb9:	fisttp QWORD PTR [eax]
  41dcbb:	xor    al,0x2f
  41dcbd:	and    al,0x6
  41dcbf:	add    edi,DWORD PTR [edx]
  41dcc1:	stos   DWORD PTR es:[edi],eax
  41dcc2:	mov    dl,BYTE PTR [ecx]
  41dcc4:	hlt    
  41dcc5:	pop    ss
  41dcc6:	(bad)  
  41dcc7:	mov    eax,ds:0x452ae3
  41dccc:	hlt    
  41dccd:	daa    
  41dcce:	dec    BYTE PTR [ecx-0x7b72219]
  41dcd4:	jbe    0x41dc7a
  41dcd6:	in     al,dx
  41dcd7:	add    esi,edi
  41dcd9:	bound  ecx,QWORD PTR [ebx+0x452b2b15]
  41dcdf:	add    ah,dh
  41dce1:	pop    ss
  41dce2:	(bad)  
  41dce3:	xor    ebp,ebp
  41dce5:	add    esi,DWORD PTR [edx]
  41dce7:	js     0x41dc9f
  41dce9:	bound  eax,QWORD PTR [ebx]
  41dceb:	inc    ebp
  41dcec:	dec    edi
  41dced:	fmul   QWORD PTR ds:0x28dc80eb
  41dcf3:	and    al,0xbf
  41dcf5:	and    eax,DWORD PTR [esi]
  41dcf7:	mov    edx,edi
  41dcf9:	cmp    BYTE PTR [esi+0x41],0xf7
  41dcfd:	jne    0x41dccc
  41dcff:	mov    DWORD PTR [eax],eax
	...
  41dd09:	add    BYTE PTR [eax],al
  41dd0b:	add    dl,ah
  41dd0d:	dec    edx
  41dd0e:	jle    0x41dd51
  41dd10:	div    DWORD PTR [ebp-0x33]
  41dd13:	mov    edx,edi
  41dd15:	jle    0x41dd95
  41dd17:	inc    ecx
  41dd18:	idiv   DWORD PTR [edx-0x4df708b9]
  41dd1e:	mov    BYTE PTR ds:0x453a50,cl
  41dd24:	outs   dx,BYTE PTR ds:[esi]
  41dd25:	and    dh,bh
  41dd27:	mov    ecx,0x4664f7
  41dd2c:	jbe    0x41dce9
  41dd2e:	add    eax,0x8b62f702
  41dd33:	push   ebp
  41dd34:	fistp  QWORD PTR [ebp-0x2b]
  41dd37:	mov    edx,ebp
  41dd39:	jp     0x41ddb9
  41dd3b:	inc    ecx
  41dd3c:	test   DWORD PTR [ebx],0x6336782e
  41dd42:	push   esi
  41dd43:	call   0x388a3b
  41dd48:	je     0x41dcf0
  41dd4a:	add    DWORD PTR [ebx+0x417e76fa],ecx
  41dd50:	not    DWORD PTR [ebx]
  41dd52:	out    dx,al
  41dd53:	aad    0x9d
  41dd55:	mov    cl,0xf6
  41dd57:	test   DWORD PTR [edi-0x48ccfdc9],esi
  41dd5d:	mov    ebp,0x86da8b2b
  41dd62:	jle    0x41dda5
  41dd64:	mul    ebp
  41dd66:	rol    DWORD PTR [esp+esi*2],0x6f
  41dd6a:	ds js  0x41dd23
  41dd6d:	bound  eax,QWORD PTR [esi]
  41dd6f:	je     0x41dd71
	...
  41dd79:	add    BYTE PTR [eax],al
  41dd7b:	add    dh,ch
  41dd7d:	add    edx,DWORD PTR [edx]
  41dd7f:	js     0x41dd37
  41dd81:	bound  ecx,QWORD PTR [ebp-0x1198e4bc]
  41dd87:	pop    ebp
  41dd88:	dec    edx
  41dd89:	mov    cl,0xf6
  41dd8b:	mov    ebp,edx
  41dd8d:	push   ss
  41dd8e:	jle    0x41ddd1
  41dd90:	not    DWORD PTR [ebx+eax*8]
  41dd93:	xor    esi,DWORD PTR [edi]
  41dd95:	fucom  st(0)
  41dd97:	pop    ebp
  41dd98:	xor    al,0x9e
  41dd9a:	leave  
  41dd9b:	int3   
  41dd9c:	mul    DWORD PTR [edx+0x6]
  41dd9f:	add    bh,dh
  41dda1:	bound  eax,QWORD PTR [esi]
  41dda3:	add    bh,dh
  41dda5:	bound  eax,QWORD PTR [esi]
  41dda7:	add    bh,dh
  41dda9:	bound  eax,QWORD PTR [esi]
  41ddab:	add    bh,dh
  41ddad:	bound  eax,QWORD PTR [esi]
  41ddaf:	add    bh,dh
  41ddb1:	bound  eax,QWORD PTR [esi]
  41ddb3:	add    bh,dh
  41ddb5:	bound  eax,QWORD PTR [esi]
  41ddb7:	add    bh,dh
  41ddb9:	bound  eax,QWORD PTR [esi]
  41ddbb:	add    bh,dh
  41ddbd:	bound  eax,QWORD PTR [esi]
  41ddbf:	add    bh,dh
  41ddc1:	bound  eax,QWORD PTR [esi]
  41ddc3:	add    bh,dh
  41ddc5:	bound  eax,QWORD PTR [esi]
  41ddc7:	add    bh,dh
  41ddc9:	bound  eax,QWORD PTR [esi]
  41ddcb:	add    bh,dh
  41ddcd:	bound  eax,QWORD PTR [esi]
  41ddcf:	add    bh,dh
  41ddd1:	bound  eax,QWORD PTR [esi]
  41ddd3:	add    bh,dh
  41ddd5:	bound  eax,QWORD PTR [esi]
  41ddd7:	add    bh,dh
  41ddd9:	bound  eax,QWORD PTR [esi]
  41dddb:	add    bh,dh
  41dddd:	bound  eax,QWORD PTR [esi]
	...
  41ddeb:	add    bh,dh
  41dded:	bound  eax,QWORD PTR [esi]
  41ddef:	add    bh,dh
  41ddf1:	bound  eax,QWORD PTR [esi]
  41ddf3:	add    bh,dh
  41ddf5:	bound  eax,QWORD PTR [esi]
  41ddf7:	add    bh,dh
  41ddf9:	bound  eax,QWORD PTR [esi]
  41ddfb:	add    bh,dh
  41ddfd:	bound  eax,QWORD PTR [esi]
  41ddff:	add    bh,dh
  41de01:	bound  eax,QWORD PTR [esi]
  41de03:	add    bh,dh
  41de05:	bound  eax,QWORD PTR [esi]
  41de07:	add    bh,dh
  41de09:	bound  eax,QWORD PTR [esi]
  41de0b:	add    bh,dh
  41de0d:	bound  eax,QWORD PTR [esi]
  41de0f:	add    bh,dh
  41de11:	bound  eax,QWORD PTR [esi]
  41de13:	add    bh,dh
  41de15:	bound  eax,QWORD PTR [esi]
  41de17:	add    bh,dh
  41de19:	bound  eax,QWORD PTR [esi]
  41de1b:	add    bh,dh
  41de1d:	bound  eax,QWORD PTR [esi]
  41de1f:	add    bh,dh
  41de21:	bound  eax,QWORD PTR [esi]
  41de23:	add    bh,dh
  41de25:	bound  eax,QWORD PTR [esi]
  41de27:	add    bh,dh
  41de29:	bound  eax,QWORD PTR [esi]
  41de2b:	add    bh,dh
  41de2d:	bound  eax,QWORD PTR [esi]
  41de2f:	add    bh,dh
  41de31:	bound  eax,QWORD PTR [esi]
  41de33:	add    bh,dh
  41de35:	bound  eax,QWORD PTR [esi]
  41de37:	add    bh,dh
  41de39:	bound  eax,QWORD PTR [esi]
  41de3b:	add    bh,dh
  41de3d:	bound  eax,QWORD PTR [esi]
  41de3f:	add    bh,dh
  41de41:	bound  eax,QWORD PTR [esi]
  41de43:	add    bh,dh
  41de45:	bound  eax,QWORD PTR [esi]
  41de47:	add    bh,dh
  41de49:	bound  eax,QWORD PTR [esi]
  41de4b:	add    bh,dh
  41de4d:	bound  eax,QWORD PTR [esi]
	...
  41de5b:	add    bh,dh
  41de5d:	bound  eax,QWORD PTR [esi]
  41de5f:	add    bh,dh
  41de61:	bound  eax,QWORD PTR [esi]
  41de63:	add    bh,dh
  41de65:	bound  eax,QWORD PTR [esi]
  41de67:	add    bh,dh
  41de69:	bound  eax,QWORD PTR [esi]
  41de6b:	add    bh,dh
  41de6d:	bound  eax,QWORD PTR [esi]
  41de6f:	add    bh,dh
  41de71:	bound  eax,QWORD PTR [esi]
  41de73:	add    bh,dh
  41de75:	bound  eax,QWORD PTR [esi]
  41de77:	add    bh,dh
  41de79:	bound  eax,QWORD PTR [esi]
  41de7b:	add    bh,dh
  41de7d:	bound  eax,QWORD PTR [esi]
  41de7f:	add    bh,dh
  41de81:	bound  eax,QWORD PTR [esi]
  41de83:	add    bh,dh
  41de85:	bound  eax,QWORD PTR [esi]
  41de87:	add    bh,dh
  41de89:	bound  eax,QWORD PTR [esi]
  41de8b:	add    bh,dh
  41de8d:	bound  eax,QWORD PTR [esi]
  41de8f:	add    bh,dh
  41de91:	bound  eax,QWORD PTR [esi]
  41de93:	add    bh,dh
  41de95:	bound  eax,QWORD PTR [esi]
  41de97:	add    bh,dh
  41de99:	bound  eax,QWORD PTR [esi]
  41de9b:	add    bh,dh
  41de9d:	bound  eax,QWORD PTR [esi]
  41de9f:	add    bh,dh
  41dea1:	bound  eax,QWORD PTR [esi]
  41dea3:	add    bh,dh
  41dea5:	bound  eax,QWORD PTR [esi]
  41dea7:	add    bh,dh
  41dea9:	bound  eax,QWORD PTR [esi]
  41deab:	add    bh,dh
  41dead:	bound  eax,QWORD PTR [esi]
  41deaf:	add    bh,dh
  41deb1:	bound  eax,QWORD PTR [esi]
  41deb3:	add    bh,dh
  41deb5:	bound  eax,QWORD PTR [esi]
  41deb7:	add    bh,dh
  41deb9:	bound  eax,QWORD PTR [esi]
  41debb:	add    bh,dh
  41debd:	bound  eax,QWORD PTR [esi]
	...
  41decb:	add    bh,bh
  41decd:	and    eax,0x424430
  41ded2:	jmp    DWORD PTR ds:0x424434
  41ded8:	jmp    DWORD PTR ds:0x424438
  41dede:	jmp    DWORD PTR ds:0x42443c
  41dee4:	jmp    DWORD PTR ds:0x424440
  41deea:	jmp    DWORD PTR ds:0x424444
  41def0:	jmp    DWORD PTR ds:0x424448
  41def6:	jmp    DWORD PTR ds:0x42444c
  41defc:	jmp    DWORD PTR ds:0x424450
  41df02:	jmp    DWORD PTR ds:0x424454
  41df08:	jmp    DWORD PTR ds:0x424458
  41df0e:	jmp    DWORD PTR ds:0x42445c
  41df14:	jmp    DWORD PTR ds:0x424460
  41df1a:	jmp    DWORD PTR ds:0x424464
  41df20:	jmp    DWORD PTR ds:0x424468
  41df26:	jmp    DWORD PTR ds:0x42446c
  41df2c:	jmp    DWORD PTR ds:0x424470
  41df32:	jmp    DWORD PTR ds:0x424474
  41df38:	jmp    DWORD PTR ds:0x424478
  41df3e:	jmp    DWORD PTR ds:0x42447c
  41df44:	jmp    DWORD PTR ds:0x424480
  41df4a:	jmp    DWORD PTR ds:0x424484
  41df50:	jmp    DWORD PTR ds:0x424488
  41df56:	jmp    DWORD PTR ds:0x42448c
  41df5c:	jmp    DWORD PTR ds:0x424490
  41df62:	jmp    DWORD PTR ds:0x424494
  41df68:	jmp    DWORD PTR ds:0x424498
  41df6e:	jmp    DWORD PTR ds:0x42449c
  41df74:	jmp    DWORD PTR ds:0x4244a0
  41df7a:	jmp    DWORD PTR ds:0x4244a4
  41df80:	jmp    DWORD PTR ds:0x4244a8
  41df86:	jmp    DWORD PTR ds:0x4244ac
  41df8c:	jmp    DWORD PTR ds:0x4244b0
  41df92:	jmp    DWORD PTR ds:0x4244b4
  41df98:	jmp    DWORD PTR ds:0x4244b8
  41df9e:	jmp    DWORD PTR ds:0x4244bc
  41dfa4:	jmp    DWORD PTR ds:0x4244c0
  41dfaa:	jmp    DWORD PTR ds:0x4244c4
  41dfb0:	jmp    DWORD PTR ds:0x4244c8
  41dfb6:	jmp    DWORD PTR ds:0x4244cc
  41dfbc:	jmp    DWORD PTR ds:0x4244d0
  41dfc2:	jmp    DWORD PTR ds:0x4244d4
  41dfc8:	jmp    DWORD PTR ds:0x4244d8
  41dfce:	jmp    DWORD PTR ds:0x4244dc
  41dfd4:	jmp    DWORD PTR ds:0x4244e0
  41dfda:	jmp    DWORD PTR ds:0x4244e4
  41dfe0:	jmp    DWORD PTR ds:0x4244e8
  41dfe6:	jmp    DWORD PTR ds:0x4244ec
  41dfec:	jmp    DWORD PTR ds:0x4244f0
  41dff2:	jmp    DWORD PTR ds:0x4244f4
  41dff8:	jmp    DWORD PTR ds:0x4244f8
  41dffe:	jmp    DWORD PTR ds:0x4244fc
  41e004:	jmp    DWORD PTR ds:0x424500
  41e00a:	jmp    DWORD PTR ds:0x424504
  41e010:	jmp    DWORD PTR ds:0x424508
  41e016:	jmp    DWORD PTR ds:0x42450c
  41e01c:	jmp    DWORD PTR ds:0x424510
  41e022:	jmp    DWORD PTR ds:0x424514
  41e028:	jmp    DWORD PTR ds:0x424518
  41e02e:	jmp    DWORD PTR ds:0x42451c
  41e034:	jmp    DWORD PTR ds:0x424520
  41e03a:	jmp    DWORD PTR ds:0x424524
  41e040:	jmp    DWORD PTR ds:0x424528
  41e046:	jmp    DWORD PTR ds:0x42452c
  41e04c:	jmp    DWORD PTR ds:0x424530
  41e052:	jmp    DWORD PTR ds:0x424534
  41e058:	jmp    DWORD PTR ds:0x424538
  41e05e:	jmp    DWORD PTR ds:0x42453c
  41e064:	jmp    DWORD PTR ds:0x424540
  41e06a:	jmp    DWORD PTR ds:0x424544
  41e070:	jmp    DWORD PTR ds:0x424548
  41e076:	jmp    DWORD PTR ds:0x42454c
  41e07c:	jmp    DWORD PTR ds:0x424550
  41e082:	jmp    DWORD PTR ds:0x424554
  41e088:	jmp    DWORD PTR ds:0x424558
  41e08e:	jmp    DWORD PTR ds:0x42455c
  41e094:	jmp    DWORD PTR ds:0x424560
  41e09a:	jmp    DWORD PTR ds:0x424564
  41e0a0:	jmp    DWORD PTR ds:0x424568
  41e0a6:	jmp    DWORD PTR ds:0x42456c
  41e0ac:	jmp    DWORD PTR ds:0x424570
  41e0b2:	jmp    DWORD PTR ds:0x424574
  41e0b8:	jmp    DWORD PTR ds:0x424578
  41e0be:	jmp    DWORD PTR ds:0x42457c
  41e0c4:	jmp    DWORD PTR ds:0x424580
  41e0ca:	jmp    DWORD PTR ds:0x424584
  41e0d0:	jmp    DWORD PTR ds:0x424588
  41e0d6:	jmp    DWORD PTR ds:0x42458c
  41e0dc:	jmp    DWORD PTR ds:0x424590
  41e0e2:	jmp    DWORD PTR ds:0x424594
  41e0e8:	jmp    DWORD PTR ds:0x424598
  41e0ee:	jmp    DWORD PTR ds:0x42459c
  41e0f4:	jmp    DWORD PTR ds:0x4245a0
  41e0fa:	jmp    DWORD PTR ds:0x4245a4
  41e100:	jmp    DWORD PTR ds:0x4245a8
  41e106:	jmp    DWORD PTR ds:0x4245ac
  41e10c:	jmp    DWORD PTR ds:0x4245b0
  41e112:	jmp    DWORD PTR ds:0x4245b4
  41e118:	jmp    DWORD PTR ds:0x4245b8
  41e11e:	jmp    DWORD PTR ds:0x4245bc
  41e124:	jmp    DWORD PTR ds:0x4245c0
  41e12a:	jmp    DWORD PTR ds:0x4245c4
  41e130:	jmp    DWORD PTR ds:0x4245cc
  41e136:	jmp    DWORD PTR ds:0x4245d0
  41e13c:	jmp    DWORD PTR ds:0x4245d4
  41e142:	jmp    DWORD PTR ds:0x4245d8
  41e148:	jmp    DWORD PTR ds:0x4245dc
  41e14e:	jmp    DWORD PTR ds:0x4245e0
  41e154:	jmp    DWORD PTR ds:0x4245e4
  41e15a:	jmp    DWORD PTR ds:0x4245e8
  41e160:	jmp    DWORD PTR ds:0x4245ec
  41e166:	jmp    DWORD PTR ds:0x4245f0
  41e16c:	jmp    DWORD PTR ds:0x4245f4
  41e172:	jmp    DWORD PTR ds:0x4245f8
  41e178:	jmp    DWORD PTR ds:0x4245fc
  41e17e:	jmp    DWORD PTR ds:0x424600
  41e184:	jmp    DWORD PTR ds:0x424604
  41e18a:	jmp    DWORD PTR ds:0x424608
  41e190:	jmp    DWORD PTR ds:0x42460c
  41e196:	jmp    DWORD PTR ds:0x424610
  41e19c:	jmp    DWORD PTR ds:0x424614
  41e1a2:	jmp    DWORD PTR ds:0x424618
  41e1a8:	jmp    DWORD PTR ds:0x42461c
  41e1ae:	jmp    DWORD PTR ds:0x424620
  41e1b4:	jmp    DWORD PTR ds:0x424624
  41e1ba:	jmp    DWORD PTR ds:0x424628
  41e1c0:	jmp    DWORD PTR ds:0x42462c
  41e1c6:	jmp    DWORD PTR ds:0x424630
  41e1cc:	jmp    DWORD PTR ds:0x424634
  41e1d2:	jmp    DWORD PTR ds:0x424638
  41e1d8:	jmp    DWORD PTR ds:0x42463c
  41e1de:	jmp    DWORD PTR ds:0x424640
  41e1e4:	jmp    DWORD PTR ds:0x424644
  41e1ea:	jmp    DWORD PTR ds:0x424648
  41e1f0:	jmp    DWORD PTR ds:0x42464c
  41e1f6:	jmp    DWORD PTR ds:0x424650
  41e1fc:	jmp    DWORD PTR ds:0x424654
  41e202:	jmp    DWORD PTR ds:0x424658
  41e208:	jmp    DWORD PTR ds:0x42465c
  41e20e:	jmp    DWORD PTR ds:0x424660
  41e214:	jmp    DWORD PTR ds:0x424664
  41e21a:	jmp    DWORD PTR ds:0x424668
  41e220:	jmp    DWORD PTR ds:0x42466c
  41e226:	jmp    DWORD PTR ds:0x424670
  41e22c:	jmp    DWORD PTR ds:0x424674
  41e232:	jmp    DWORD PTR ds:0x424678
  41e238:	jmp    DWORD PTR ds:0x42467c
  41e23e:	jmp    DWORD PTR ds:0x424680
  41e244:	jmp    DWORD PTR ds:0x424684
  41e24a:	jmp    DWORD PTR ds:0x424688
  41e250:	jmp    DWORD PTR ds:0x42468c
  41e256:	jmp    DWORD PTR ds:0x424690
  41e25c:	jmp    DWORD PTR ds:0x424694
  41e262:	jmp    DWORD PTR ds:0x424698
  41e268:	jmp    DWORD PTR ds:0x42469c
  41e26e:	jmp    DWORD PTR ds:0x4246a0
  41e274:	jmp    DWORD PTR ds:0x4246a4
  41e27a:	jmp    DWORD PTR ds:0x4246a8
  41e280:	jmp    DWORD PTR ds:0x4246ac
  41e286:	jmp    DWORD PTR ds:0x4246b0
  41e28c:	jmp    DWORD PTR ds:0x4246b4
  41e292:	jmp    DWORD PTR ds:0x4246b8
  41e298:	jmp    DWORD PTR ds:0x4246bc
  41e29e:	jmp    DWORD PTR ds:0x4246c0
  41e2a4:	jmp    DWORD PTR ds:0x4246c4
  41e2aa:	jmp    DWORD PTR ds:0x4246c8
  41e2b0:	jmp    DWORD PTR ds:0x4246cc
  41e2b6:	jmp    DWORD PTR ds:0x4246d0
  41e2bc:	jmp    DWORD PTR ds:0x4246d4
  41e2c2:	jmp    DWORD PTR ds:0x4246d8
  41e2c8:	jmp    DWORD PTR ds:0x4246dc
  41e2ce:	jmp    DWORD PTR ds:0x4246e0
  41e2d4:	jmp    DWORD PTR ds:0x4246e4
  41e2da:	jmp    DWORD PTR ds:0x4246e8
  41e2e0:	jmp    DWORD PTR ds:0x4246ec
  41e2e6:	jmp    DWORD PTR ds:0x4246f0
  41e2ec:	jmp    DWORD PTR ds:0x4246f4
  41e2f2:	jmp    DWORD PTR ds:0x4246f8
  41e2f8:	jmp    DWORD PTR ds:0x4246fc
  41e2fe:	jmp    DWORD PTR ds:0x424700
  41e304:	jmp    DWORD PTR ds:0x424704
  41e30a:	jmp    DWORD PTR ds:0x424708
  41e310:	jmp    DWORD PTR ds:0x42470c
  41e316:	jmp    DWORD PTR ds:0x424710
  41e31c:	jmp    DWORD PTR ds:0x424714
  41e322:	jmp    DWORD PTR ds:0x424718
  41e328:	jmp    DWORD PTR ds:0x42471c
  41e32e:	jmp    DWORD PTR ds:0x424720
  41e334:	jmp    DWORD PTR ds:0x424724
  41e33a:	jmp    DWORD PTR ds:0x424728
  41e340:	jmp    DWORD PTR ds:0x42472c
  41e346:	jmp    DWORD PTR ds:0x424730
  41e34c:	jmp    DWORD PTR ds:0x424734
  41e352:	jmp    DWORD PTR ds:0x424738
  41e358:	jmp    DWORD PTR ds:0x42473c
  41e35e:	jmp    DWORD PTR ds:0x424740
  41e364:	jmp    DWORD PTR ds:0x424744
  41e36a:	jmp    DWORD PTR ds:0x424748
  41e370:	jmp    DWORD PTR ds:0x42474c
  41e376:	jmp    DWORD PTR ds:0x424754
  41e37c:	jmp    DWORD PTR ds:0x424758
  41e382:	jmp    DWORD PTR ds:0x42475c
  41e388:	jmp    DWORD PTR ds:0x424760
  41e38e:	jmp    DWORD PTR ds:0x424764
  41e394:	jmp    DWORD PTR ds:0x424768
  41e39a:	jmp    DWORD PTR ds:0x42476c
  41e3a0:	jmp    DWORD PTR ds:0x424770
  41e3a6:	jmp    DWORD PTR ds:0x424774
  41e3ac:	jmp    DWORD PTR ds:0x424778
  41e3b2:	jmp    DWORD PTR ds:0x42477c
  41e3b8:	jmp    DWORD PTR ds:0x424780
  41e3be:	jmp    DWORD PTR ds:0x424784
  41e3c4:	jmp    DWORD PTR ds:0x424788
  41e3ca:	jmp    DWORD PTR ds:0x42478c
  41e3d0:	jmp    DWORD PTR ds:0x424790
  41e3d6:	jmp    DWORD PTR ds:0x424794
  41e3dc:	jmp    DWORD PTR ds:0x424798
  41e3e2:	jmp    DWORD PTR ds:0x42479c
  41e3e8:	jmp    DWORD PTR ds:0x4247a0
  41e3ee:	jmp    DWORD PTR ds:0x4247a8
  41e3f4:	jmp    DWORD PTR ds:0x4247b0
  41e3fa:	jmp    DWORD PTR ds:0x4247b4
  41e400:	jmp    DWORD PTR ds:0x4247b8
  41e406:	jmp    DWORD PTR ds:0x4247bc
  41e40c:	jmp    DWORD PTR ds:0x4247c0
  41e412:	jmp    DWORD PTR ds:0x4247c4
  41e418:	jmp    DWORD PTR ds:0x4247c8
  41e41e:	jmp    DWORD PTR ds:0x4247cc
  41e424:	jmp    DWORD PTR ds:0x4247d0
  41e42a:	jmp    DWORD PTR ds:0x4247d4
  41e430:	jmp    DWORD PTR ds:0x4247d8
  41e436:	jmp    DWORD PTR ds:0x4247dc
  41e43c:	jmp    DWORD PTR ds:0x4247e0
  41e442:	jmp    DWORD PTR ds:0x4247e4
  41e448:	jmp    DWORD PTR ds:0x4247e8
  41e44e:	jmp    DWORD PTR ds:0x4247ec
  41e454:	jmp    DWORD PTR ds:0x4247f0
  41e45a:	jmp    DWORD PTR ds:0x4247f4
  41e460:	jmp    DWORD PTR ds:0x4247f8
  41e466:	jmp    DWORD PTR ds:0x4247fc
  41e46c:	jmp    DWORD PTR ds:0x424800
  41e472:	jmp    DWORD PTR ds:0x424804
  41e478:	jmp    DWORD PTR ds:0x424808
  41e47e:	jmp    DWORD PTR ds:0x42480c
  41e484:	jmp    DWORD PTR ds:0x424810
  41e48a:	jmp    DWORD PTR ds:0x424814
  41e490:	jmp    DWORD PTR ds:0x424818
  41e496:	jmp    DWORD PTR ds:0x42481c
  41e49c:	jmp    DWORD PTR ds:0x424820
  41e4a2:	jmp    DWORD PTR ds:0x424824
  41e4a8:	jmp    DWORD PTR ds:0x424828
  41e4ae:	jmp    DWORD PTR ds:0x42482c
  41e4b4:	jmp    DWORD PTR ds:0x424830
  41e4ba:	jmp    DWORD PTR ds:0x424834
  41e4c0:	jmp    DWORD PTR ds:0x424838
  41e4c6:	jmp    DWORD PTR ds:0x42483c
  41e4cc:	jmp    DWORD PTR ds:0x424840
  41e4d2:	jmp    DWORD PTR ds:0x424844
  41e4d8:	jmp    DWORD PTR ds:0x424848
  41e4de:	jmp    DWORD PTR ds:0x42484c
  41e4e4:	jmp    DWORD PTR ds:0x424850
  41e4ea:	jmp    DWORD PTR ds:0x424854
  41e4f0:	jmp    DWORD PTR ds:0x424858
  41e4f6:	jmp    DWORD PTR ds:0x42485c
  41e4fc:	jmp    DWORD PTR ds:0x424860
  41e502:	jmp    DWORD PTR ds:0x424864
  41e508:	jmp    DWORD PTR ds:0x424868
  41e50e:	jmp    DWORD PTR ds:0x42486c
  41e514:	jmp    DWORD PTR ds:0x424870
  41e51a:	jmp    DWORD PTR ds:0x424874
  41e520:	jmp    DWORD PTR ds:0x424878
  41e526:	jmp    DWORD PTR ds:0x42487c
  41e52c:	jmp    DWORD PTR ds:0x424880
  41e532:	jmp    DWORD PTR ds:0x424884
  41e538:	jmp    DWORD PTR ds:0x424888
  41e53e:	jmp    DWORD PTR ds:0x424890
  41e544:	jmp    DWORD PTR ds:0x424894
  41e54a:	jmp    DWORD PTR ds:0x424898
  41e550:	jmp    DWORD PTR ds:0x42489c
  41e556:	jmp    DWORD PTR ds:0x4248a0
  41e55c:	jmp    DWORD PTR ds:0x4248a4
  41e562:	jmp    DWORD PTR ds:0x4248a8
  41e568:	jmp    DWORD PTR ds:0x4248ac
  41e56e:	jmp    DWORD PTR ds:0x4248b0
  41e574:	jmp    DWORD PTR ds:0x4248b4
  41e57a:	jmp    DWORD PTR ds:0x4248b8
  41e580:	jmp    DWORD PTR ds:0x4248bc
