
93d9763499bb156028c263cd96af6a5c01bcb39113eeb8181c0bab298bf4cdd4.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x38
  401006:	mov    eax,0x5a3fc9e
  40100b:	movzx  ecx,BYTE PTR ds:0x42fd0d
  401012:	mov    DWORD PTR [ebp-0x20],eax
  401015:	mov    ecx,DWORD PTR [ebp-0x20]
  401018:	mov    DWORD PTR [ebp-0x24],0x4ec5
  40101f:	mov    DWORD PTR ds:0x42fd09,0x6cee
  401029:	cmp    ecx,eax
  40102b:	mov    DWORD PTR ds:0x42e11c,0x6120
  401035:	jne    0x402968
  40103b:	or     ecx,0x42d0
  401041:	mov    ax,WORD PTR [ebp-0x24]
  401045:	adc    DWORD PTR ds:0x42fcf1,edx
  40104b:	push   esi
  40104c:	and    DWORD PTR ds:0x42fcd9,0x0
  401056:	jmp    0x401068
  40105b:	mov    ecx,DWORD PTR ds:0x42fcd9
  401061:	inc    ecx
  401062:	mov    DWORD PTR ds:0x42fcd9,ecx
  401068:	cmp    DWORD PTR ds:0x42fcd9,0x1a
  40106f:	jae    0x4010b5
  401075:	cmp    DWORD PTR ds:0x42fcd9,0xf
  40107c:	jne    0x401090
  401082:	push   0x23a3
  401087:	push   DWORD PTR [ebp-0x10]
  40108a:	call   DWORD PTR ds:0x42e527
  401090:	cmp    DWORD PTR ds:0x42fcd9,0xe
  401097:	jne    0x4010aa
  40109d:	mov    ecx,DWORD PTR ds:0x42fcd9
  4010a3:	inc    ecx
  4010a4:	mov    DWORD PTR ds:0x42fcd9,ecx
  4010aa:	jmp    0x40105b
  4010af:	add    DWORD PTR ds:0x42e124,edx
  4010b5:	mov    ecx,0x8a3e
  4010ba:	xor    ax,cx
  4010bd:	sub    ecx,DWORD PTR ds:0x42e70b
  4010c3:	mov    ecx,DWORD PTR [ebp+0x8]
  4010c6:	mov    DWORD PTR ds:0x42e6fb,0x11
  4010d0:	cmp    DWORD PTR ds:0x42e6fb,0x0
  4010d7:	je     0x4011ef
  4010dd:	cmp    DWORD PTR ds:0x42e6fb,0x8
  4010e4:	jne    0x401100
  4010ea:	push   0x42e128
  4010ef:	push   DWORD PTR [ebp-0x10]
  4010f2:	push   0x671d
  4010f7:	push   DWORD PTR [ebp-0x20]
  4010fa:	call   DWORD PTR ds:0x42e2cf
  401100:	cmp    DWORD PTR ds:0x42e6fb,0x9
  401107:	jne    0x40111c
  40110d:	xor    esi,esi
  40110f:	xor    esi,DWORD PTR ds:0x42e6fb
  401115:	dec    esi
  401116:	mov    DWORD PTR ds:0x42e6fb,esi
  40111c:	mov    esi,DWORD PTR ds:0x42e6fb
  401122:	dec    esi
  401123:	mov    DWORD PTR ds:0x42e6fb,esi
  401129:	jmp    0x4010d0
  40112e:	and    DWORD PTR ds:0x42e11c,0x0
  401138:	mov    esi,DWORD PTR ds:0x42e11c
  40113e:	inc    esi
  40113f:	mov    DWORD PTR ds:0x42e11c,esi
  401145:	cmp    DWORD PTR ds:0x42e11c,0xd
  40114c:	jne    0x401160
  401152:	push   0x3999
  401157:	push   DWORD PTR [ebp-0x20]
  40115a:	call   DWORD PTR ds:0x42e52b
  401160:	cmp    DWORD PTR ds:0x42e11c,0xc
  401167:	jne    0x40117c
  40116d:	xor    esi,esi
  40116f:	add    esi,DWORD PTR ds:0x42e11c
  401175:	inc    esi
  401176:	mov    DWORD PTR ds:0x42e11c,esi
  40117c:	cmp    DWORD PTR ds:0x42e11c,0x15
  401183:	jb     0x401138
  401189:	mov    DWORD PTR ds:0x42e134,0x1a
  401193:	cmp    DWORD PTR ds:0x42e134,0x0
  40119a:	je     0x4011ef
  4011a0:	cmp    DWORD PTR ds:0x42e134,0x25
  4011a7:	jne    0x4011d5
  4011ad:	push   0x42fd7a
  4011b2:	push   DWORD PTR [ebp-0x20]
  4011b5:	push   0x4679
  4011ba:	push   0x42fd82
  4011bf:	push   0x17d1
  4011c4:	push   0x42e227
  4011c9:	push   DWORD PTR [ebp-0x14]
  4011cc:	push   DWORD PTR [ebp-0x18]
  4011cf:	call   DWORD PTR ds:0x42e44b
  4011d5:	xor    esi,esi
  4011d7:	or     esi,DWORD PTR ds:0x42e134
  4011dd:	dec    esi
  4011de:	mov    DWORD PTR ds:0x42e134,esi
  4011e4:	jmp    0x401193
  4011e9:	add    DWORD PTR ds:0x42e6fb,ecx
  4011ef:	push   edi
  4011f0:	xor    esi,esi
  4011f2:	or     esi,DWORD PTR ds:0x42fd05
  4011f8:	adc    esi,DWORD PTR ds:0x42fd09
  4011fe:	mov    DWORD PTR ds:0x42fd05,esi
  401204:	mov    edi,0x3b04
  401209:	add    ax,di
  40120c:	mov    DWORD PTR ds:0x42e703,0x17
  401216:	cmp    DWORD PTR ds:0x42e703,0x0
  40121d:	je     0x401257
  401223:	cmp    DWORD PTR ds:0x42e703,0x26
  40122a:	jne    0x401243
  401230:	push   DWORD PTR [ebp-0x10]
  401233:	push   0x42e1c6
  401238:	push   0x42e17d
  40123d:	call   DWORD PTR ds:0x42e52f
  401243:	xor    esi,esi
  401245:	or     esi,DWORD PTR ds:0x42e703
  40124b:	dec    esi
  40124c:	mov    DWORD PTR ds:0x42e703,esi
  401252:	jmp    0x401216
  401257:	movzx  eax,ax
  40125a:	not    eax
  40125c:	and    eax,DWORD PTR [ecx]
  40125e:	mov    ecx,DWORD PTR [ebp+0x8]
  401261:	mov    DWORD PTR ds:0x42fd7e,0x12
  40126b:	cmp    DWORD PTR ds:0x42fd7e,0x0
  401272:	je     0x4012b2
  401278:	cmp    DWORD PTR ds:0x42fd7e,0x22
  40127f:	jne    0x4012a0
  401285:	push   0x42e227
  40128a:	push   0x7fee
  40128f:	push   DWORD PTR [ebp-0x28]
  401292:	push   DWORD PTR [ebp-0x24]
  401295:	push   0x4b6b
  40129a:	call   DWORD PTR ds:0x42e533
  4012a0:	mov    esi,DWORD PTR ds:0x42fd7e
  4012a6:	dec    esi
  4012a7:	mov    DWORD PTR ds:0x42fd7e,esi
  4012ad:	jmp    0x40126b
  4012b2:	mov    DWORD PTR [ecx],eax
  4012b4:	mov    ecx,0x7510855
  4012b9:	mov    esi,0x32729c
  4012be:	push   ebx
  4012bf:	mov    ax,WORD PTR [ebp-0x24]
  4012c3:	movzx  eax,ax
  4012c6:	mov    DWORD PTR [ebp-0x38],eax
  4012c9:	mov    eax,DWORD PTR [ebp+0x8]
  4012cc:	mov    DWORD PTR [ebp-0x28],eax
  4012cf:	mov    DWORD PTR [ebp-0x8],0xf89c8530
  4012d6:	mov    DWORD PTR [ebp-0x14],0xf89c8531
  4012dd:	mov    eax,0x9577
  4012e2:	jmp    0x4014ff
  4012e7:	sbb    BYTE PTR [edx-0x68cdf8d6],0xb1
  4012ee:	cdq    
  4012ef:	js     0x401291
  4012f1:	mov    ah,0x66
  4012f3:	add    DWORD PTR [ecx],edi
  4012f5:	aam    0x1c
  4012f7:	jo     0x401369
  4012f9:	jo     0x40136b
  4012fb:	jo     0x40137b
  4012fd:	jo     0x40136f
  4012ff:	rcl    bh,0x3d
  401302:	aad    0x39
  401304:	ror    edi,cl
  401306:	rol    edx,1
  401308:	pop    es
  401309:	push   es
  40130a:	add    eax,DWORD PTR [eax]
  40130c:	mov    al,0x2
  40130e:	rdpmc  
  401310:	cmpps  xmm3,XMMWORD PTR [edx],0xc7
  401314:	adc    bl,BYTE PTR [edi]
  401316:	mov    ecx,0xddb7025a
  40131b:	add    bh,ch
  40131d:	mov    ebp,0x8003c8db
  401322:	sbb    BYTE PTR [eax+0x1541a4f6],dh
  401328:	lods   eax,DWORD PTR ds:[esi]
  401329:	sar    BYTE PTR [eax+0x6fee581f],1
  40132f:	or     edx,DWORD PTR [ecx]
  401331:	sahf   
  401332:	jp     0x4012fc
  401334:	inc    edx
  401335:	lods   al,BYTE PTR ds:[esi]
  401336:	push   ebx
  401337:	sub    eax,0xad3ec6d1
  40133c:	mov    WORD PTR [ebx-0x3b],?
  40133f:	stos   DWORD PTR es:[edi],eax
  401340:	js     0x401308
  401342:	rol    DWORD PTR [ecx+0x3992c8f9],cl
  401348:	jmp    0x40137c
  40134a:	mov    ebp,ecx
  40134c:	dec    edi
  40134d:	fcomp  DWORD PTR [eax-0x656800bf]
  401353:	pop    es
  401354:	test   eax,0xed4dbddc
  401359:	sub    BYTE PTR [ebp+0x23],dl
  40135c:	mov    ah,0xec
  40135e:	pusha  
  40135f:	nop
  401360:	mov    esi,0x94c3117b
  401365:	and    esi,edx
  401367:	jmp    0x4013b9
  401369:	(bad)  
  40136a:	out    0xba,al
  40136c:	repnz in al,dx
  40136e:	xchg   esp,eax
  40136f:	xor    edi,ecx
  401371:	jbe    0x4013d8
  401373:	xlat   BYTE PTR ds:[ebx]
  401374:	and    cl,ch
  401376:	add    al,0xd9
  401378:	adc    DWORD PTR [ecx-0x68],edx
  40137b:	xor    eax,0x7a616f03
  401380:	or     dh,BYTE PTR [ecx]
  401382:	fld    QWORD PTR [eax+0x7f752a56]
  401388:	xor    BYTE PTR [edi+0xba8db0c],cl
  40138e:	pop    ebx
  40138f:	push   ebp
  401390:	(bad)  
  401392:	or     ebx,edx
  401394:	pop    esi
  401395:	fstp   DWORD PTR [ecx]
  401397:	jno    0x401329
  401399:	mov    eax,0x2b15374b
  40139e:	ja     0x4013c9
  4013a0:	sbb    al,0xd3
  4013a2:	xor    BYTE PTR [edi-0x16],cl
  4013a5:	into   
  4013a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4013a7:	push   cs
  4013a8:	inc    ecx
  4013a9:	in     eax,dx
  4013aa:	jne    0x40138f
  4013ac:	sub    al,0x5c
  4013ae:	jns    0x4013c1
  4013b0:	shl    DWORD PTR [esi],cl
  4013b2:	je     0x401346
  4013b4:	xor    eax,DWORD PTR [esi]
  4013b6:	out    0x5a,eax
  4013b8:	ret    0xb50b
  4013bb:	iret   
  4013bc:	fnstenv [edx+0x40]
  4013bf:	in     al,0x70
  4013c1:	or     al,0x98
  4013c3:	fidiv  DWORD PTR [ecx+0x34]
  4013c6:	(bad)  
  4013c8:	fnstcw WORD PTR [eax+edi*2+0x1c]
  4013cc:	mov    eax,0xe02fd4
  4013d1:	bound  ecx,QWORD PTR [esi]
  4013d3:	fcomp  st(1)
  4013d5:	xor    DWORD PTR [edx-0x589491bb],edi
  4013db:	fmul   st,st(2)
  4013dd:	add    ebx,eax
  4013df:	test   al,0xbc
  4013e1:	sub    edi,DWORD PTR [esp+eax*4]
  4013e4:	cmp    dh,BYTE PTR [eax-0x65]
  4013e7:	sbb    DWORD PTR [edx+0x785c6c17],edi
  4013ed:	iret   
  4013ee:	(bad)  
  4013f0:	lea    ecx,[ebx+0x2bba4e01]
  4013f6:	ins    BYTE PTR es:[edi],dx
  4013f7:	shr    BYTE PTR [edi-0x5e2bb8f3],cl
  4013fd:	sub    BYTE PTR [esi+0x2f],0x47
  401401:	inc    edi
  401402:	jmp    0xe785:0xd77452de
  401409:	ror    DWORD PTR [edi+0x1a529142],cl
  40140f:	cs adc BYTE PTR cs:[ecx+esi*8-0x49],cl
  401415:	adc    bl,BYTE PTR [ecx-0x30]
  401418:	fs dec edx
  40141a:	and    BYTE PTR [ebp-0x29],ch
  40141d:	js     0x401436
  40141f:	mov    eax,ds:0xb06069fc
  401424:	push   ebx
  401425:	xchg   ecx,eax
  401426:	ja     0x4013af
  401428:	shl    BYTE PTR [esi+0x32f8ad81],cl
  40142e:	pop    ds
  40142f:	jne    0x40143e
  401431:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401432:	adc    DWORD PTR [edx+0x40],esp
  401435:	inc    eax
  401436:	push   eax
  401437:	jae    0x401450
  401439:	(bad)
  40143d:	inc    edi
  40143e:	pop    esi
  40143f:	add    esp,DWORD PTR [edx]
  401441:	inc    ecx
  401442:	ins    BYTE PTR es:[edi],dx
  401443:	scas   eax,DWORD PTR es:[edi]
  401444:	out    0xdd,eax
  401446:	push   edx
  401447:	loopne 0x40145f
  401449:	dec    eax
  40144a:	dec    ebx
  40144b:	test   al,dl
  40144d:	jb     0x40146c
  40144f:	mov    al,ds:0xc0c945fa
  401454:	inc    edx
  401455:	mov    ebp,ecx
  401457:	leave  
  401458:	ja     0x401445
  40145a:	imul   edx,DWORD PTR [edx+0x3f],0xcc4f9fef
  401461:	jl     0x4014d2
  401463:	sbb    eax,0x3017e41
  401468:	push   ecx
  401469:	nop
  40146a:	or     DWORD PTR [ecx-0x2e5fc0ac],esi
  401470:	xor    DWORD PTR [edx],ecx
  401472:	ret    0xdff6
  401475:	int    0x60
  401477:	cwd    
  401479:	or     DWORD PTR [esi-0x45425db9],edi
  40147f:	stos   DWORD PTR es:[edi],eax
  401480:	adc    edi,0x2f
  401483:	gs mov al,0x6e
  401486:	mov    ds:0x5cd42e97,al
  40148b:	inc    ebx
  40148c:	stc    
  40148d:	sar    BYTE PTR [eax+0x65c17015],1
  401493:	or     DWORD PTR [ebp-0x2b],edx
  401496:	clc    
  401497:	add    dh,ch
  401499:	push   ecx
  40149a:	mov    dl,0x5
  40149c:	mov    al,0x3
  40149e:	add    al,0x3d
  4014a0:	cmp    BYTE PTR [ecx],dl
  4014a2:	test   bl,bh
  4014a4:	das    
  4014a5:	das    
  4014a6:	add    dh,dh
  4014a8:	jnp    0x40144d
  4014aa:	jnp    0x401486
  4014ac:	mov    ds:0xbb71d000,eax
  4014b1:	mov    al,ds:0xf77568b7
  4014b6:	xchg   DWORD PTR ds:0x8bb89515,ebx
  4014bc:	in     eax,0xc3
  4014be:	(bad)  
  4014bf:	test   eax,0x8885bd9d
  4014c4:	fnstenv [eax]
  4014c6:	mov    ds:0xfc9da77e,eax
  4014cb:	xor    al,0xbc
  4014cd:	je     0x4014d7
  4014cf:	out    0xcc,al
  4014d1:	jb     0x401484
  4014d3:	mov    dh,BYTE PTR [edx+0x4d2556e6]
  4014d9:	and    bh,bl
  4014db:	ss inc eax
  4014dd:	push   ebx
  4014de:	cmp    ecx,DWORD PTR [eax+0x6ac3474]
  4014e4:	or     dl,BYTE PTR [ebx-0x77973b59]
  4014ea:	jmp    0x802a:0xa04f
  4014f0:	cdq    
  4014f1:	outs   dx,DWORD PTR ds:[esi]
  4014f2:	inc    esi
  4014f3:	xor    eax,0xc816bf94
  4014f8:	xchg   edi,eax
  4014f9:	iret   
  4014fa:	xchg   BYTE PTR [ebx+0x4e],dl
  4014fd:	add    BYTE PTR [ebp-0x3ba769a],0xe9
  401504:	sbb    BYTE PTR [edx],al
  401506:	add    BYTE PTR [eax],al
  401508:	clc    
  401509:	icebp  
  40150a:	mov    esp,0xb8b16984
  40150f:	icebp  
  401510:	ficomp DWORD PTR [edx+0x26391fed]
  401516:	xchg   ecx,eax
  401517:	ss jo  0x401598
  40151a:	jo     0x40158c
  40151c:	jo     0x40159c
  40151e:	jo     0x401590
  401520:	jbe    0x401501
  401522:	ins    BYTE PTR es:[edi],dx
  401523:	cmp    eax,0x7c584298
  401528:	mov    eax,0x8026682c
  40152d:	xchg   BYTE PTR [esi],bh
  40152f:	mul    BYTE PTR [eax]
  401531:	mov    eax,DWORD PTR [esi+0x78]
  401534:	and    eax,DWORD PTR [ecx+0x51ce1fb5]
  40153a:	and    DWORD PTR [esi+0x7d],0x6a7ef60b
  401541:	xor    dl,cl
  401543:	dec    eax
  401544:	and    al,0x47
  401546:	add    dl,BYTE PTR [eax+0x14c0d301]
  40154c:	sub    DWORD PTR [edi+0x55],ebx
  40154f:	cld    
  401550:	inc    esi
  401551:	mov    ds:0x3c69de23,al
  401556:	adc    eax,0x89229230
  40155b:	ins    DWORD PTR es:[edi],dx
  40155c:	in     al,0xa1
  40155e:	sub    ch,al
  401560:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401561:	ss and eax,0xff8ce58
  401567:	mov    dl,0x7d
  401569:	out    dx,eax
  40156a:	fsub   DWORD PTR [eax+ebp*1+0x74a0af97]
  401571:	cdq    
  401572:	test   al,0x8d
  401574:	inc    edx
  401575:	iret   
  401576:	leave  
  401577:	scas   al,BYTE PTR es:[edi]
  401578:	das    
  401579:	sbb    ah,BYTE PTR [ecx]
  40157b:	sti    
  40157c:	xor    BYTE PTR [ebp+0x52f8f645],bl
  401582:	es es dec edi
  401585:	stc    
  401586:	mov    ds:0x57674f2b,eax
  40158b:	xor    al,0x15
  40158d:	shl    BYTE PTR [ebp+0x4a],1
  401590:	jge    0x3feba430
  401596:	imul   esi,DWORD PTR [edi+0x7d],0x20
  40159a:	sbb    al,BYTE PTR [ebx+ebx*8+0x6f]
  40159e:	jg     0x4015c4
  4015a0:	fs int3 
  4015a2:	retf   
  4015a3:	pop    ecx
  4015a4:	fidiv  DWORD PTR [ebp+edi*4-0x11]
  4015a8:	stos   DWORD PTR es:[edi],eax
  4015a9:	mov    esp,0x352b2e90
  4015ae:	xor    ch,BYTE PTR [ebp-0x72]
  4015b1:	das    
  4015b2:	(bad)  
  4015b3:	hlt    
  4015b4:	jae    0x4015c6
  4015b6:	dec    esi
  4015b7:	jae    0x40160e
  4015b9:	and    edx,DWORD PTR [ebx-0x7d]
  4015bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4015bd:	fwait
  4015be:	arpl   WORD PTR [edx+0x481aa76a],si
  4015c4:	xor    eax,DWORD PTR [edi-0x7]
  4015c7:	scas   al,BYTE PTR es:[edi]
  4015c8:	addr16 pop ecx
  4015ca:	loop   0x401560
  4015cc:	sub    BYTE PTR [eax+0x1f],dl
  4015cf:	stos   DWORD PTR es:[edi],eax
  4015d0:	push   ecx
  4015d1:	jle    0x4015f1
  4015d3:	outs   dx,BYTE PTR ds:[esi]
  4015d4:	jmp    0x346:0xf24d0709
  4015db:	adc    ebp,DWORD PTR [eax-0x2c]
  4015de:	out    0xb,al
  4015e0:	sar    DWORD PTR [esi+0x0],0x4f
  4015e4:	lods   al,BYTE PTR ds:[esi]
  4015e5:	xor    eax,0x14c191de
  4015ea:	dec    esp
  4015eb:	or     ch,BYTE PTR [esi+edi*1+0x1fcf5ed5]
  4015f2:	fisttp DWORD PTR [ecx-0x15]
  4015f5:	and    eax,0x3fde807c
  4015fa:	adc    eax,0x572d2e43
  4015ff:	loopne 0x4015f8
  401601:	mov    ebp,DWORD PTR es:[ebx-0x53]
  401605:	rcl    BYTE PTR [edi],1
  401607:	ret    0x8212
  40160a:	imul   ebx,DWORD PTR [esi+0x12ab552c],0xffffff97
  401611:	inc    edx
  401612:	add    al,0x3d
  401614:	inc    ecx
  401615:	add    al,0xdd
  401617:	in     al,dx
  401618:	mov    edx,0xafac93ba
  40161d:	es add eax,ecx
  401620:	out    dx,al
  401621:	pushf  
  401622:	push   ebx
  401623:	xlat   BYTE PTR ds:[ebx]
  401624:	add    al,0xe5
  401626:	pop    edx
  401627:	(bad)  [ebp-0x434dab97]
  40162d:	push   0xffffff87
  40162f:	outs   dx,DWORD PTR ds:[esi]
  401630:	adc    DWORD PTR [edx],eax
  401632:	inc    ecx
  401633:	mov    eax,ds:0x14777316
  401638:	xchg   esp,eax
  401639:	shl    esp,cl
  40163b:	sub    eax,DWORD PTR [ebx]
  40163d:	ret    
  40163e:	mov    eax,0xdf6247aa
  401643:	mov    ?,edx
  401645:	push   eax
  401646:	xchg   esi,eax
  401647:	pop    edi
  401648:	sar    ah,0x4d
  40164b:	push   ebx
  40164c:	retf   0x8db2
  40164f:	cli    
  401650:	lahf   
  401651:	jbe    0x4016af
  401653:	les    ecx,FWORD PTR [edi]
  401655:	out    0x88,al
  401657:	push   ss
  401658:	out    0x8a,eax
  40165a:	jb     0x401652
  40165c:	fnstcw WORD PTR [edi+esi*4-0x22]
  401660:	mov    ebx,0xc7ef38c9
  401665:	and    esp,DWORD PTR [ebx]
  401667:	mov    ah,BYTE PTR [eax-0x244f689c]
  40166d:	(bad)  
  40166e:	lahf   
  40166f:	nop
  401670:	jg     0x4016a8
  401672:	xor    eax,0x59e56b49
  401677:	call   0xe615:0x9fb7e75e
  40167e:	or     DWORD PTR [eax+edx*4+0x290be3ec],esp
  401685:	jmp    0x4016a9
  401687:	push   es
  401688:	icebp  
  401689:	cs pop ebx
  40168b:	mov    dh,0x43
  40168d:	popf   
  40168e:	leave  
  40168f:	loop   0x401664
  401691:	inc    ebp
  401692:	xchg   edx,eax
  401693:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401694:	xlat   BYTE PTR ds:[ebx]
  401695:	loope  0x401617
  401697:	push   edi
  401698:	mov    eax,eax
  40169a:	ret    
  40169b:	push   ss
  40169c:	mov    al,ds:0xc5e993b1
  4016a1:	inc    ecx
  4016a2:	jmp    0x4016ef
  4016a4:	pop    eax
  4016a5:	or     eax,0xade704fb
  4016aa:	sbb    DWORD PTR [eax],0xe
  4016ad:	pop    edi
  4016ae:	mov    ebx,0x86ba8ae9
  4016b3:	mov    WORD PTR [esi-0x57df3caf],ds
  4016b9:	loop   0x4016b1
  4016bb:	out    0x4e,al
  4016bd:	clc    
  4016be:	cmp    al,BYTE PTR [ebp-0x6e]
  4016c1:	(bad)  
  4016c2:	pop    ds
  4016c3:	jmp    0xbe1ab08a
  4016c8:	pop    ds
  4016c9:	sub    cl,al
  4016cb:	sbb    ah,0xae
  4016ce:	pop    ebx
  4016cf:	(bad)  
  4016d0:	mov    ch,0x28
  4016d2:	cld    
  4016d3:	pop    ebp
  4016d4:	mov    edi,0xea629e50
  4016d9:	sti    
  4016da:	aad    0x8a
  4016dc:	cmp    ecx,DWORD PTR [edx]
  4016de:	cs push ds
  4016e0:	pop    ds
  4016e1:	sahf   
  4016e2:	inc    edi
  4016e3:	mov    eax,DWORD PTR [esi]
  4016e5:	xchg   esp,eax
  4016e6:	adc    eax,0x5b4532cf
  4016eb:	fild   DWORD PTR [ecx+0x2a]
  4016ee:	adc    eax,0xebaa1821
  4016f3:	cmp    ecx,DWORD PTR [ecx-0x5413bf1c]
  4016f9:	scas   eax,DWORD PTR es:[edi]
  4016fa:	sub    ax,WORD PTR [edi]
  4016fd:	push   cs
  4016fe:	xchg   ebx,eax
  4016ff:	adc    DWORD PTR [eax-0x7d],esi
  401702:	fimul  WORD PTR [edi]
  401704:	(bad)  
  401706:	xchg   edi,eax
  401707:	lahf   
  401708:	mov    bh,ah
  40170a:	cmp    eax,ebx
  40170c:	std    
  40170d:	sbb    al,0xfa
  40170f:	xor    edi,DWORD PTR [esi+0x7e2e987e]
  401715:	fs push edi
  401717:	pop    esi
  401718:	in     eax,dx
  401719:	(bad)  
  40171a:	hlt    
  40171b:	xor    bh,bl
  40171d:	loop   0x401765
  40171f:	mov    dl,0x8d
  401721:	inc    ebp
  401722:	ror    BYTE PTR [ecx+0x458bcc45],1
  401728:	fmul   DWORD PTR [ecx+0x458dd445]
  40172e:	call   0x42301c
  401733:	add    BYTE PTR [ebp-0x31],cl
  401736:	lods   eax,DWORD PTR ds:[esi]
  401737:	dec    ebx
  401738:	lods   eax,DWORD PTR ds:[esi]
  401739:	imul   ebp,DWORD PTR [ecx-0x37],0x8e1037e1
  401740:	daa    
  401741:	inc    ecx
  401742:	pop    eax
  401743:	cld    
  401744:	jo     0x4017c2
  401746:	jo     0x4017b8
  401748:	jo     0x4017c8
  40174a:	jo     0x4017bc
  40174c:	mov    bl,0x8e
  40174e:	sub    al,0x3b
  401750:	(bad)  
  401751:	lods   eax,DWORD PTR ds:[esi]
  401752:	dec    ecx
  401753:	mov    ds:0x7d29c650,al
  401758:	fiadd  WORD PTR [ecx-0x5aadd705]
  40175e:	(bad)  
  40175f:	loopne 0x4017b3
  401761:	xchg   esi,eax
  401762:	mov    eax,ds:0x764b1ac3
  401767:	xlat   BYTE PTR ds:[ebx]
  401768:	jmp    0xcea44b11
  40176d:	jns    0x4017a8
  40176f:	sub    ch,bh
  401771:	xor    eax,0x64d98d61
  401776:	xor    al,0xfc
  401778:	not    BYTE PTR [edx+0x56]
  40177b:	push   es
  40177c:	std    
  40177d:	adc    eax,0x6d94078e
  401782:	mov    dl,0x62
  401784:	jae    0x4017a7
  401786:	xchg   esp,eax
  401787:	pop    edx
  401788:	mov    ch,0x6c
  40178a:	cmp    eax,DWORD PTR [eax+0x58]
  40178d:	outs   dx,BYTE PTR ds:[esi]
  40178e:	out    0x4d,al
  401790:	pop    esp
  401791:	jmp    0xfcf69a27
  401796:	jns    0x4017ac
  401798:	jecxz  0x4017e9
  40179a:	jne    0x40177f
  40179c:	xchg   ecx,eax
  40179d:	xchg   edi,eax
  40179e:	pop    ecx
  40179f:	xor    BYTE PTR [esi-0x26],ah
  4017a2:	(bad)  
  4017a3:	ins    DWORD PTR es:[edi],dx
  4017a4:	or     BYTE PTR fs:[edi-0x11ae1d90],0x80
  4017ac:	pop    ds
  4017ad:	stos   BYTE PTR es:[edi],al
  4017ae:	outs   dx,DWORD PTR ds:[esi]
  4017af:	(bad)  
  4017b0:	std    
  4017b1:	jmp    0xba1a:0xbf8a37d3
  4017b8:	mov    bl,0xb1
  4017ba:	xchg   esp,eax
  4017bb:	rcl    DWORD PTR [esi+0x75],cl
  4017be:	call   0x14be:0x7a843fe1
  4017c5:	jp     0x401751
  4017c7:	jnp    0x401843
  4017c9:	xlat   BYTE PTR ds:[ebx]
  4017ca:	adc    BYTE PTR [edx],ah
  4017cc:	lods   al,BYTE PTR ds:[esi]
  4017cd:	push   eax
  4017cf:	ja     0x40181e
  4017d1:	sbb    al,0x1b
  4017d3:	pop    esp
  4017d4:	pop    ebx
  4017d5:	push   0x8a509cd0
  4017da:	std    
  4017db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4017dc:	adc    dl,ch
  4017de:	in     al,dx
  4017df:	xor    eax,0x6d4f0e4f
  4017e4:	fsubr  QWORD PTR [esi]
  4017e6:	cmp    eax,0x20300699
  4017eb:	pop    ebx
  4017ec:	jmp    0xaabfd9a3
  4017f1:	(bad)  
  4017f2:	ss jne 0x401779
  4017f5:	(bad)  
  4017f6:	cmp    al,0xb9
  4017f8:	pop    es
  4017f9:	js     0x4017b6
  4017fb:	mov    ds:0x68072321,al
  401800:	and    DWORD PTR [edx-0x54],esp
  401803:	pop    es
  401804:	mov    ah,0xee
  401806:	shr    BYTE PTR [eax+0xf],1
  401809:	add    BYTE PTR [ebx-0x39],0xc9
  40180d:	pop    ss
  40180e:	inc    eax
  40180f:	in     eax,dx
  401810:	(bad)  
  401811:	mov    dl,0x5b
  401813:	rcr    BYTE PTR [edi+0x7470134f],1
  401819:	arpl   WORD PTR [ebx-0x3c8da2a2],si
  40181f:	test   eax,0x314ea65c
  401824:	jmp    0x5d3c:0x3ba09839
  40182b:	dec    ebp
  40182c:	push   0x36
  40182e:	xor    eax,0x4eee82c3
  401833:	lds    ebx,FWORD PTR ds:0xf8eb5796
  401839:	into   
  40183a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40183b:	mov    cl,0x25
  40183d:	ret    
  40183e:	push   0x1
  401840:	in     al,0x7e
  401842:	or     ebx,eax
  401844:	push   0xb960f35e
  401849:	xchg   BYTE PTR [ebp+0x36],bl
  40184c:	pushf  
  40184d:	(bad)  
  40184e:	mov    cl,0x24
  401850:	mov    eax,ds:0xcf50abe2
  401855:	jg     0x401858
  401857:	das    
  401858:	sti    
  401859:	jb     0x401837
  40185b:	repz adc eax,0xd406267
  401861:	dec    ecx
  401862:	addr16 add al,0x65
  401865:	ins    BYTE PTR es:[edi],dx
  401866:	mov    ecx,0x38e69cd8
  40186b:	rcl    BYTE PTR [ebp-0x59a3127d],cl
  401871:	xlat   BYTE PTR ds:[ebx]
  401872:	or     al,0xb9
  401874:	mov    dl,0x46
  401876:	pop    ecx
  401877:	das    
  401878:	cld    
  401879:	outs   dx,BYTE PTR ds:[esi]
  40187a:	mov    ds:0x5a94efee,al
  40187f:	jge    0x4018df
  401881:	out    dx,al
  401882:	lods   eax,DWORD PTR ds:[esi]
  401883:	pop    DWORD PTR [ebx]
  401885:	(bad)  
  401886:	and    al,0x85
  401888:	stc    
  401889:	mov    esi,0x45f4c08c
  40188e:	jns    0x40184c
  401890:	int3   
  401891:	push   ds
  401892:	cli    
  401893:	call   0xdb8e:0xf29ca80e
  40189a:	inc    edi
  40189b:	cwde   
  40189c:	in     eax,0x69
  40189e:	xor    eax,0xd3d3587d
  4018a3:	cmp    al,BYTE PTR [edi-0x55]
  4018a6:	dec    edi
  4018a7:	and    ebp,ebp
  4018a9:	xchg   esi,eax
  4018aa:	mov    bh,0x94
  4018ac:	xchg   ebp,eax
  4018ad:	xchg   esp,eax
  4018ae:	and    ebp,DWORD PTR [edi-0x3a]
  4018b1:	nop
  4018b2:	push   ebp
  4018b3:	test   al,0x9c
  4018b5:	inc    ecx
  4018b6:	sbb    edi,DWORD PTR [esi+0x69be7367]
  4018bc:	ret    0x91bd
  4018bf:	xlat   BYTE PTR ds:[ebx]
  4018c0:	add    al,cl
  4018c2:	ffreep st(1)
  4018c4:	xchg   ebp,eax
  4018c5:	stc    
  4018c6:	arpl   WORD PTR [edi],dx
  4018c8:	cs aaa 
  4018ca:	or     ebx,DWORD PTR [eax-0x53]
  4018cd:	xchg   BYTE PTR [ebx],bh
  4018cf:	fadd   QWORD PTR [ebx+0x72bf5874]
  4018d5:	xchg   ebp,eax
  4018d6:	test   BYTE PTR [ecx],0x3f
  4018d9:	push   esp
  4018da:	test   DWORD PTR [esi+0x1b35cd5c],edx
  4018e0:	push   edi
  4018e1:	fstp   DWORD PTR [ebp-0x1e7e5545]
  4018e7:	in     ax,0x2b
  4018ea:	es dec ebx
  4018ec:	add    esp,DWORD PTR [ecx-0x11ad4f8f]
  4018f2:	sbb    BYTE PTR [edx+0x27],bh
  4018f5:	mov    al,BYTE PTR [esi+0x2c3be4de]
  4018fb:	and    dl,BYTE PTR ds:0x5ad91240
  401901:	sbb    eax,0x520cf2d3
  401906:	stos   DWORD PTR es:[edi],eax
  401907:	jno    0x40188e
  401909:	push   es
  40190a:	shl    bp,1
  40190d:	out    dx,al
  40190e:	and    eax,0xad61dd3e
  401913:	rcr    BYTE PTR [esi+0x2f],cl
  401916:	in     al,dx
  401917:	jp     0x401956
  401919:	inc    esp
  40191a:	inc    ecx
  40191b:	jle    0x4018b4
  40191d:	mov    esp,0x19c20041
  401922:	push   0x42
  401924:	lods   al,BYTE PTR ds:[esi]
  401925:	outs   dx,DWORD PTR ds:[esi]
  401926:	clc    
  401927:	fstp   DWORD PTR ds:0x97af6e0
  40192d:	out    dx,al
  40192e:	dec    edx
  40192f:	sbb    dh,dh
  401931:	mov    ebx,0x6e0b1f8a
  401936:	in     eax,0x38
  401938:	pop    esp
  401939:	sbb    ebx,ebx
  40193b:	inc    ecx
  40193c:	std    
  40193d:	dec    ecx
  40193e:	stos   DWORD PTR es:[edi],eax
  40193f:	cmp    dh,al
  401941:	iret   
  401942:	xor    al,0x2c
  401944:	sub    BYTE PTR [edi-0x49],ah
  401947:	xor    edi,DWORD PTR [edi+0x33]
  40194a:	aad    0x14
  40194c:	mov    DWORD PTR [ebp-0x1c],eax
  40194f:	mov    eax,DWORD PTR [ebp-0x1c]
  401952:	mov    DWORD PTR [eax],0xf89f2da9
  401958:	mov    eax,DWORD PTR [ebp-0x14]
  40195b:	mov    ebx,DWORD PTR [ebp-0x8]
  40195e:	xor    eax,ecx
  401960:	xor    ebx,ecx
  401962:	xor    edx,edx
  401964:	add    eax,esi
  401966:	add    ebx,esi
  401968:	div    ebx
  40196a:	mov    edx,DWORD PTR [ebp-0x2c]
  40196d:	cmp    eax,DWORD PTR [edx]
  40196f:	je     0x40271e
  401975:	mov    DWORD PTR [ebp-0xc],0x705fd8f
  40197c:	lea    eax,[ebp-0xc]
  40197f:	mov    DWORD PTR [ebp-0x10],eax
  401982:	jmp    0x401b9f
  401987:	int3   
  401988:	sub    eax,0xbde9be20
  40198d:	push   0xffffffa9
  40198f:	mov    ebp,0x987bf628
  401994:	pusha  
  401995:	sub    BYTE PTR [edi+0x70707a70],ah
  40199b:	jo     0x401a1b
  40199d:	jo     0x401a0f
  40199f:	jle    0x401a01
  4019a1:	dec    ebx
  4019a2:	push   cs
  4019a3:	add    al,0xeb
  4019a5:	cwde   
  4019a6:	repz popf 
  4019a8:	add    BYTE PTR [esi-0x3],dh
  4019ab:	sub    al,0x40
  4019ad:	pop    esi
  4019ae:	es push ebx
  4019b0:	mov    esi,0xb8b2be0e
  4019b5:	mov    eax,ds:0x9389b4c4
  4019ba:	sbb    eax,0xf54d41ce
  4019bf:	test   ah,ch
  4019c1:	lods   al,BYTE PTR ds:[esi]
  4019c2:	push   ecx
  4019c3:	pop    edx
  4019c4:	mov    ch,0xaa
  4019c6:	dec    ebx
  4019c7:	mov    dh,0x32
  4019c9:	les    ecx,FWORD PTR [esi]
  4019cb:	daa    
  4019cc:	test   eax,0xdb767448
  4019d1:	out    0x7d,eax
  4019d3:	push   edi
  4019d4:	jbe    0x401966
  4019d6:	outs   dx,BYTE PTR ds:[esi]
  4019d7:	xchg   esp,eax
  4019d8:	popf   
  4019d9:	cwde   
  4019da:	inc    edx
  4019db:	cmp    ebx,DWORD PTR [eax]
  4019dd:	mov    dl,0x9a
  4019df:	imul   eax,DWORD PTR [ebx],0xffffffa4
  4019e2:	inc    eax
  4019e3:	stos   DWORD PTR es:[edi],eax
  4019e4:	leave  
  4019e5:	pop    edi
  4019e6:	cs clc 
  4019e8:	adc    DWORD PTR [ecx],esi
  4019ea:	xchg   ebx,eax
  4019eb:	mov    al,0xf1
  4019ed:	push   ds
  4019ee:	dec    esp
  4019ef:	out    0x80,al
  4019f1:	rcr    BYTE PTR [esi],cl
  4019f3:	rcl    BYTE PTR [ecx],cl
  4019f5:	adc    ecx,DWORD PTR ds:0x3d66ffc1
  4019fb:	push   0xffffffec
  4019fd:	mov    ebp,DWORD PTR [ebx-0x1957c4f7]
  401a03:	cli    
  401a04:	inc    esp
  401a05:	lds    edi,FWORD PTR [edx]
  401a07:	jge    0x401997
  401a09:	mov    dl,0xa0
  401a0b:	repz xlat BYTE PTR ds:[ebx]
  401a0d:	cmp    DWORD PTR [edi+0x4629001],ebx
  401a13:	add    dl,BYTE PTR [edi-0x5696b90b]
  401a19:	cmp    BYTE PTR [edx+0x7e],al
  401a1c:	ins    DWORD PTR es:[edi],dx
  401a1d:	mov    bh,0x3c
  401a1f:	retf   
  401a20:	lea    ebx,[ebp+0x111cff73]
  401a26:	inc    esi
  401a27:	mov    edx,0x5d342fab
  401a2c:	jns    0x401a37
  401a2e:	lock sbb BYTE PTR [eax-0x6fd8df83],ah
  401a35:	push   es
  401a36:	xchg   ebx,eax
  401a37:	ret    
  401a38:	enter  0x7311,0xf
  401a3c:	xchg   edx,eax
  401a3d:	inc    ebx
  401a3e:	push   ecx
  401a3f:	dec    edx
  401a40:	clc    
  401a41:	dec    ebp
  401a42:	jp     0x401a97
  401a44:	push   esp
  401a45:	jecxz  0x401a06
  401a47:	mov    bl,0xe5
  401a49:	add    dh,bl
  401a4b:	mov    edi,edi
  401a4d:	mov    edi,ss
  401a4f:	pushf  
  401a50:	(bad)  
  401a51:	ins    DWORD PTR es:[edi],dx
  401a52:	mov    bh,0x6f
  401a54:	mov    bh,0x5f
  401a56:	stos   BYTE PTR es:[edi],al
  401a57:	and    dh,BYTE PTR [edi+0x14]
  401a5a:	stc    
  401a5b:	lds    esp,FWORD PTR [edi-0x5e7172a6]
  401a61:	loopne 0x401a55
  401a63:	fimul  WORD PTR [eax]
  401a65:	cmp    esi,DWORD PTR [ebx]
  401a67:	rcl    BYTE PTR [edx],cl
  401a69:	loope  0x401a15
  401a6b:	sbb    DWORD PTR [ecx+0xff0adc5],0x76542d2
  401a75:	call   0x98b2:0xeabd696b
  401a7c:	sahf   
  401a7d:	aaa    
  401a7e:	dec    edi
  401a7f:	add    eax,0xd6ec9344
  401a84:	jno    0x401aac
  401a86:	lock sar BYTE PTR [edx],0xbc
  401a8a:	push   cs
  401a8b:	iret   
  401a8c:	es xchg esp,eax
  401a8e:	icebp  
  401a8f:	iret   
  401a90:	cwde   
  401a91:	bound  esp,QWORD PTR [esi+0x478907aa]
  401a97:	jp     0x401adf
  401a99:	mov    al,0x9e
  401a9b:	mov    ebx,0x4ad9e835
  401aa0:	pop    edx
  401aa1:	xchg   BYTE PTR [edx+0x5a],dl
  401aa4:	inc    edi
  401aa5:	push   esi
  401aa6:	out    0xb1,al
  401aa8:	sbb    BYTE PTR [edx-0x68b2c073],0x6e
  401aaf:	lahf   
  401ab0:	ret    0xaf5f
  401ab3:	pusha  
  401ab4:	adc    bh,BYTE PTR [edx-0x5e]
  401ab7:	repnz mov ds:0x8efeb038,eax
  401abd:	cmp    al,0xfe
  401abf:	mov    ds:0xe4d1ae40,eax
  401ac4:	idiv   BYTE PTR [ecx-0x7a]
  401ac7:	popa   
  401ac8:	or     eax,0xe3fa6533
  401acd:	call   0xe14c:0xb5751232
  401ad4:	(bad)  
  401ad5:	repnz push ebx
  401ad7:	inc    ebx
  401ad8:	inc    edx
  401ad9:	ins    BYTE PTR es:[edi],dx
  401ada:	(bad)  
  401adb:	fmul   st(3),st
  401add:	(bad)  
  401ade:	pop    ds
  401adf:	repnz aad 0xd
  401ae2:	(bad)  
  401ae3:	loope  0x401ac2
  401ae5:	xchg   ah,dl
  401ae7:	inc    esp
  401ae8:	push   0xffffffb5
  401aea:	clc    
  401aeb:	rcr    ebp,cl
  401aed:	scas   eax,DWORD PTR es:[edi]
  401aee:	pop    esp
  401aef:	sub    ch,ah
  401af1:	push   0xfffffff8
  401af3:	xor    ecx,DWORD PTR [eax-0x66df9f69]
  401af9:	sub    cl,BYTE PTR [edi-0x68]
  401afc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401afd:	sbb    edx,edi
  401aff:	out    0xf2,al
  401b01:	mov    ah,0xf7
  401b03:	popa   
  401b04:	ja     0x401af2
  401b06:	fcmovu st,st(3)
  401b08:	add    DWORD PTR [eax+0x3b],edi
  401b0b:	sub    esp,DWORD PTR [edx-0x1a]
  401b0e:	inc    ebp
  401b0f:	(bad)  
  401b10:	sub    al,0x3f
  401b12:	adc    eax,0x42ecf7d
  401b17:	sub    eax,DWORD PTR [esp+eiz*4-0x26]
  401b1b:	out    dx,eax
  401b1c:	popa   
  401b1d:	ror    ebx,0x1d
  401b20:	fsubr  DWORD PTR [edx+0x53]
  401b23:	cli    
  401b24:	sbb    al,0x30
  401b26:	jle    0x401b54
  401b28:	xchg   esp,eax
  401b29:	loop   0x401b05
  401b2b:	mov    BYTE PTR [ebx],cl
  401b2d:	fyl2x  
  401b2f:	dec    esp
  401b30:	jno    0x401ba7
  401b32:	ret    
  401b33:	push   ebx
  401b34:	test   DWORD PTR [ebp-0x6e],ebx
  401b37:	sbb    edi,ecx
  401b39:	jbe    0x401b22
  401b3b:	stc    
  401b3c:	loopne 0x401b3e
  401b3e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401b3f:	mov    bl,0x2c
  401b41:	sbb    dh,bl
  401b43:	pop    ebp
  401b44:	out    dx,eax
  401b45:	in     al,0xaa
  401b47:	add    DWORD PTR [ebx+0x29],0x13
  401b4b:	call   0x7eba:0x2772b21a
  401b52:	or     eax,0x661d9d4e
  401b57:	lahf   
  401b58:	jno    0x401ade
  401b5a:	aaa    
  401b5b:	fdiv   DWORD PTR [ebp+0x637f6041]
  401b61:	(bad)  
  401b62:	or     DWORD PTR [esp+edx*4+0x1b],0xcd287564
  401b6a:	lods   al,BYTE PTR ds:[esi]
  401b6b:	jmp    0x401b8d
  401b6d:	dec    ebp
  401b6e:	pop    ebx
  401b6f:	lods   al,BYTE PTR ds:[esi]
  401b70:	sbb    al,0x2d
  401b72:	push   es
  401b73:	push   cs
  401b74:	pop    es
  401b75:	and    al,0x7d
  401b77:	push   ss
  401b78:	stos   BYTE PTR es:[edi],al
  401b79:	shl    edi,1
  401b7b:	enter  0x819d,0x15
  401b7f:	aad    0x95
  401b81:	adc    eax,0x2078e050
  401b86:	jno    0x401bb7
  401b88:	cdq    
  401b89:	test   eax,0x5125b192
  401b8e:	mov    esi,0x145d6cd3
  401b93:	xor    al,0x2f
  401b95:	jmp    0xebe7:0xed0d06fe
  401b9c:	sub    BYTE PTR [ecx+ecx*1-0x75],ah
  401ba0:	inc    ebp
  401ba1:	lock mov edx,DWORD PTR [eax]
  401ba4:	imul   edx,edx,0xf89ea9ec
  401baa:	mov    DWORD PTR [eax],edx
  401bac:	mov    eax,DWORD PTR [ebp-0xc]
  401baf:	cmp    eax,0x742b26d4
  401bb4:	je     0x401bc8
  401bba:	mov    eax,DWORD PTR [ebp-0x1c]
  401bbd:	or     DWORD PTR [eax],0x60751c9c
  401bc3:	jmp    0x40272d
  401bc8:	mov    eax,DWORD PTR [ebp-0xc]
  401bcb:	jmp    0x401de8
  401bd0:	popa   
  401bd1:	ja     0x401bca
  401bd3:	add    esi,ecx
  401bd5:	xor    DWORD PTR [ecx+0x75],0xffffffde
  401bd9:	adc    al,0xb4
  401bdb:	mov    ah,BYTE PTR [edi-0x60]
  401bde:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401bdf:	shl    DWORD PTR [eax+0x78],0x70
  401be3:	jo     0x401c55
  401be5:	jle    0x401c57
  401be7:	jo     0x401bfd
  401be9:	xor    edi,esp
  401beb:	ss pop edx
  401bed:	xchg   ecx,eax
  401bee:	(bad)  
  401bef:	rcr    DWORD PTR [eax],cl
  401bf1:	repnz xchg esp,eax
  401bf3:	cmp    eax,0xd4cc65d
  401bf8:	pop    ss
  401bf9:	adc    ebx,esp
  401bfb:	xor    ch,ch
  401bfd:	nop
  401bfe:	or     BYTE PTR [ebp+0x71d4efdc],ah
  401c04:	outs   dx,BYTE PTR ds:[esi]
  401c05:	add    ch,BYTE PTR ss:[ecx]
  401c08:	pop    edx
  401c09:	cld    
  401c0a:	mul    BYTE PTR [ebp+0x41]
  401c0d:	aas    
  401c0e:	mov    eax,ds:0x2677eedc
  401c13:	bound  esi,QWORD PTR [ebp+0x49d88ffd]
  401c19:	imul   eax,eax,0xffffffe0
  401c1c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401c1d:	ins    BYTE PTR es:[edi],dx
  401c1e:	pop    esi
  401c1f:	imul   edi,DWORD PTR [edx],0x34564d62
  401c25:	jae    0x401bdc
  401c27:	cld    
  401c28:	push   ebp
  401c29:	call   DWORD PTR [ecx+0x53]
  401c2c:	xchg   edi,eax
  401c2d:	mov    ds:0xb67c9a38,eax
  401c32:	ret    
  401c33:	fbstp  TBYTE PTR [ebp-0x1e]
  401c36:	fsubr  QWORD PTR [ecx]
  401c38:	(bad)  
  401c39:	in     eax,0x4d
  401c3b:	dec    edi
  401c3c:	ins    DWORD PTR es:[edi],dx
  401c3d:	leave  
  401c3e:	push   ebx
  401c3f:	add    eax,0x936af847
  401c44:	inc    edi
  401c45:	jno    0x401ca9
  401c47:	out    0x33,al
  401c49:	jge    0x401be4
  401c4b:	cmc    
  401c4c:	pushf  
  401c4d:	mov    eax,ds:0x38ca4cd
  401c52:	lea    eax,ds:0xf4b80985
  401c58:	xchg   ebp,eax
  401c59:	mov    ah,0xd
  401c5b:	in     al,0x1d
  401c5d:	sbb    al,0x1d
  401c5f:	out    0x49,al
  401c61:	repz sbb al,0x61
  401c64:	sub    bl,BYTE PTR [ebx-0x24]
  401c67:	lods   al,BYTE PTR ds:[esi]
  401c68:	retf   
  401c69:	mov    cl,0x90
  401c6b:	dec    ecx
  401c6c:	jo     0x401bfe
  401c6e:	jo     0x401c09
  401c70:	nop
  401c71:	xor    DWORD PTR [ecx+ebp*4-0x17eece33],ecx
  401c78:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401c79:	cmc    
  401c7a:	int3   
  401c7b:	jo     0x401c9e
  401c7d:	cmp    DWORD PTR [esp+esi*4-0x1a6f57e4],eax
  401c84:	or     al,0x6
  401c86:	div    DWORD PTR [ebp-0x32]
  401c89:	in     eax,0xb3
  401c8b:	adc    esi,DWORD PTR [ebx]
  401c8d:	retf   0x5028
  401c90:	cmp    ebx,eax
  401c92:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401c93:	jg     0x401c42
  401c95:	push   ecx
  401c96:	push   ebx
  401c97:	mov    al,ds:0xafc67910
  401c9c:	outs   dx,DWORD PTR ds:[esi]
  401c9d:	test   al,0x44
  401c9f:	cmp    esp,ebp
  401ca1:	jp     0x401ca5
  401ca3:	sar    cl,cl
  401ca5:	rcr    DWORD PTR [edx],cl
  401ca7:	popa   
  401ca8:	imul   edx,ecx,0x33af99a6
  401cae:	clc    
  401caf:	adc    esp,DWORD PTR [ebp+0x20623ea8]
  401cb5:	pop    ss
  401cb6:	lock clc 
  401cb8:	push   ebx
  401cb9:	add    esi,edx
  401cbb:	aas    
  401cbc:	or     eax,0xda85098b
  401cc1:	jmp    FWORD PTR [esi]
  401cc3:	xchg   edi,eax
  401cc4:	push   eax
  401cc5:	sub    bl,BYTE PTR [edx+0xa00d231]
  401ccb:	repnz sti 
  401ccd:	cmp    eax,0x8653b904
  401cd2:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401cd4:	add    eax,0x4a0c493e
  401cd9:	sbb    BYTE PTR [eax+0x7a],dh
  401cdc:	adc    DWORD PTR [ebx-0x557df549],ecx
  401ce2:	ret    0x8cac
  401ce5:	cs fs aam 0x38
  401ce9:	in     al,0xb5
  401ceb:	nop
  401cec:	out    dx,eax
  401ced:	pop    ecx
  401cee:	dec    ebp
  401cef:	mov    ebx,DWORD PTR [esi+0x5a]
  401cf2:	jb     0x401cba
  401cf4:	xchg   ebx,eax
  401cf5:	(bad)  
  401cf6:	push   esi
  401cf7:	xor    bl,BYTE PTR [esi+0x9]
  401cfa:	rcr    DWORD PTR [eax+0x2],cl
  401cfd:	mov    eax,DWORD PTR [edi]
  401cff:	(bad)  [eax]
  401d01:	ror    BYTE PTR [edx],1
  401d03:	imul   ecx,edi,0x7c8a9159
  401d09:	loopne 0x401cec
  401d0b:	inc    edi
  401d0c:	dec    ebp
  401d0d:	(bad)  
  401d0e:	out    0xd7,al
  401d10:	aaa    
  401d11:	xor    DWORD PTR [eax-0xbd21c9c],ecx
  401d17:	inc    ebx
  401d18:	rcl    esi,0x91
  401d1b:	inc    ecx
  401d1c:	mov    BYTE PTR [ebx+edi*8-0x3ebf205b],ch
  401d23:	je     0x401ce6
  401d25:	ficom  WORD PTR [esi+0x65]
  401d28:	mov    ss,WORD PTR [eax+0x50]
  401d2b:	xchg   edi,eax
  401d2c:	mov    edi,0x529bae97
  401d31:	stos   DWORD PTR es:[edi],eax
  401d32:	cmp    edi,0xdf590f10
  401d38:	xor    bl,dl
  401d3a:	mov    esi,DWORD PTR cs:0x4418299d
  401d41:	fdiv   QWORD PTR [ecx+edx*4-0x1bd3ac4d]
  401d48:	or     al,0xe8
  401d4a:	in     al,dx
  401d4b:	test   BYTE PTR [edx+0x34],bl
  401d4e:	xor    bh,BYTE PTR [ebx-0x57]
  401d51:	cmc    
  401d52:	popa   
  401d53:	pop    es
  401d54:	popf   
  401d55:	push   edi
  401d56:	push   edx
  401d57:	jns    0x401d4f
  401d59:	and    al,0x6c
  401d5b:	sbb    BYTE PTR [edx+eax*1+0x4b0aba46],dh
  401d62:	div    BYTE PTR [eax-0x35a4e727]
  401d68:	iret   
  401d69:	je     0x401d60
  401d6b:	test   eax,0xeb8007b3
  401d70:	pop    edx
  401d71:	push   ecx
  401d72:	dec    esp
  401d73:	cmp    esp,esp
  401d75:	jle    0x401de4
  401d77:	pop    es
  401d78:	sub    ebx,edi
  401d7a:	mov    ebx,0xdbe3ad08
  401d7f:	sub    DWORD PTR [esi-0x7e],ebp
  401d82:	fucomi st,st(1)
  401d84:	ret    0x647c
  401d87:	shl    BYTE PTR [ebp+0x4c],0x0
  401d8b:	cld    
  401d8c:	aam    0x2a
  401d8e:	aas    
  401d8f:	sahf   
  401d90:	in     eax,0x90
  401d92:	(bad)  
  401d93:	jle    0x401d1d
  401d95:	jg     0x401da1
  401d97:	fsubr  DWORD PTR [esi+0x2e7472d4]
  401d9d:	xor    eax,0x343121b2
  401da2:	xchg   BYTE PTR [eax-0x20f4f516],ch
  401da8:	sub    al,0xac
  401daa:	or     DWORD PTR [edi-0x2e],ebp
  401dad:	jo     0x401e27
  401daf:	ins    BYTE PTR es:[edi],dx
  401db0:	sub    BYTE PTR [ebx-0x7037253f],bh
  401db6:	adc    bl,BYTE PTR [ebx]
  401db8:	pop    edi
  401db9:	push   cs
  401dba:	dec    edi
  401dbb:	outs   dx,DWORD PTR ds:[esi]
  401dbc:	mov    ds:0x90230b15,eax
  401dc1:	jo     0x401dea
  401dc3:	lds    edi,FWORD PTR [ecx+0x2415ce4e]
  401dc9:	dec    esi
  401dca:	leave  
  401dcb:	js     0x401e49
  401dcd:	(bad)  [edi-0x1f]
  401dd0:	xchg   edx,eax
  401dd1:	xchg   ecx,eax
  401dd2:	mov    esp,0x32d5d1d1
  401dd7:	sbb    eax,0x3e9d6c2d
  401ddc:	sar    BYTE PTR fs:[ebx],0x77
  401de0:	mov    DWORD PTR [ebx+eiz*1+0x48],eax
  401de4:	push   es
  401de5:	xchg   esi,eax
  401de6:	pop    ecx
  401de7:	test   DWORD PTR [ebx],0x7d3de845
  401ded:	push   esp
  401dee:	retf   0xf6c
  401df1:	test   BYTE PTR [esi],cl
  401df3:	add    BYTE PTR [eax],al
  401df5:	add    BYTE PTR [ebx+0x2081f045],cl
  401dfb:	cdq    
  401dfc:	sbb    al,0x75
  401dfe:	add    cl,ch
  401e00:	sub    DWORD PTR [ecx],ecx
  401e02:	add    BYTE PTR [eax],al
  401e04:	mov    eax,DWORD PTR [ebp-0xc]
  401e07:	mov    edx,DWORD PTR [ebp-0x18]
  401e0a:	or     eax,edx
  401e0c:	cmp    eax,0xfcbf2ffd
  401e11:	je     0x401e25
  401e17:	mov    eax,DWORD PTR [ebp-0x10]
  401e1a:	xor    DWORD PTR [eax],0x2650fa8f
  401e20:	jmp    0x40272d
  401e25:	mov    ax,WORD PTR [ebp-0x4]
  401e29:	mov    edx,0x8a3e
  401e2e:	xor    ax,dx
  401e31:	jmp    0x40204e
  401e36:	cld    
  401e37:	test   BYTE PTR [edx+0x3d],ch
  401e3a:	jb     0x401e31
  401e3c:	stos   DWORD PTR es:[edi],eax
  401e3d:	inc    ecx
  401e3e:	inc    eax
  401e3f:	(bad)  
  401e40:	cmp    BYTE PTR [edi+edx*1-0x65],dl
  401e44:	cmp    dl,BYTE PTR [esi+0x70]
  401e47:	push   es
  401e48:	jo     0x401eba
  401e4a:	jo     0x401eca
  401e4c:	jo     0x401ebe
  401e4e:	test   al,0xad
  401e50:	shl    BYTE PTR [eiz*8-0x631d0380],1
  401e57:	xchg   esi,eax
  401e58:	or     esp,DWORD PTR [edx+0x5cc60855]
  401e5e:	pop    edi
  401e5f:	pop    ss
  401e60:	lds    ebx,FWORD PTR [edi+0x54bb2115]
  401e66:	jo     0x401e53
  401e68:	enter  0xab7e,0x36
  401e6c:	hlt    
  401e6d:	mov    edi,DWORD PTR [eax]
  401e6f:	jbe    0x401e43
  401e71:	pop    eax
  401e72:	sbb    esi,DWORD PTR [ebp-0x37]
  401e75:	push   di
  401e77:	mov    ebx,0xa3faa777
  401e7c:	dec    esp
  401e7d:	push   esp
  401e7e:	jno    0x401e7f
  401e80:	add    al,0xbd
  401e82:	es adc edx,edi
  401e85:	lods   eax,DWORD PTR ds:[esi]
  401e86:	gs push 0x25
  401e89:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401e8a:	adc    BYTE PTR [ecx],al
  401e8c:	mov    esi,0x257d9a98
  401e91:	jg     0x401e2e
  401e93:	xchg   ebx,eax
  401e94:	and    BYTE PTR [ebp+0x60c86a53],0x5c
  401e9b:	dec    edi
  401e9c:	cmp    eax,0x6a30af66
  401ea1:	call   0xb74e:0x964011f1
  401ea8:	jmp    0x7f425e0d
  401ead:	not    edi
  401eaf:	(bad)  
  401eb0:	out    dx,eax
  401eb1:	sbb    BYTE PTR [esi-0x12b650d3],cl
  401eb7:	adc    BYTE PTR [edi],dh
  401eb9:	adc    BYTE PTR [eax],ch
  401ebb:	int    0xb9
  401ebd:	or     eax,0xd88db07c
  401ec2:	ja     0x401ece
  401ec4:	in     eax,dx
  401ec5:	stc    
  401ec6:	pop    ds
  401ec7:	clc    
  401ec8:	shl    DWORD PTR [esi+eax*8+0x786edad4],1
  401ecf:	sbb    eax,0xd531add3
  401ed4:	xchg   ebx,eax
  401ed5:	pop    eax
  401ed6:	bound  esi,QWORD PTR [ebx-0x3004c3dd]
  401edc:	mov    bl,dl
  401ede:	push   cs
  401edf:	adc    BYTE PTR [edi],dh
  401ee1:	ds in  al,0xa8
  401ee4:	pop    esi
  401ee5:	clc    
  401ee6:	test   al,0xe1
  401ee8:	out    0xa4,eax
  401eea:	sub    DWORD PTR [edx-0x3dbdf4d9],edx
  401ef0:	pop    eax
  401ef1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401ef2:	mov    bh,0xc9
  401ef4:	xchg   edx,eax
  401ef5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401ef6:	sbb    ebp,0xcfda09a6
  401efc:	out    0x84,al
  401efe:	jl     0x401eda
  401f00:	fisubr WORD PTR [ebp+0x2b1b0fe2]
  401f06:	xchg   BYTE PTR [edx],cl
  401f08:	enter  0x4e3b,0xda
  401f0c:	dec    ecx
  401f0d:	test   al,0xc6
  401f0f:	call   FWORD PTR [ecx-0x6d]
  401f12:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401f13:	jo     0x401f81
  401f15:	test   eax,0x4474facf
  401f1a:	dec    esi
  401f1b:	fcom   QWORD PTR [edi-0x490a26d0]
  401f21:	scas   al,BYTE PTR es:[edi]
  401f22:	pop    es
  401f23:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401f24:	xchg   ebp,eax
  401f25:	test   eax,0x170265f2
  401f2a:	iret   
  401f2b:	sbb    cl,BYTE PTR ss:[esi]
  401f2e:	iret   
  401f2f:	adc    al,BYTE PTR [eax]
  401f31:	out    0xb,eax
  401f33:	adc    bl,BYTE PTR [eax]
  401f35:	dec    edi
  401f36:	mov    WORD PTR ss:[edi],fs
  401f39:	cmp    eax,0x1dc5aad0
  401f3e:	jmp    0x130d:0xb0b30aae
  401f45:	sbb    al,0x15
  401f47:	lods   eax,DWORD PTR ds:[esi]
  401f48:	mov    edi,0xb99abbd9
  401f4d:	es cdq 
  401f4f:	pop    es
  401f50:	cwde   
  401f51:	(bad)  
  401f52:	mov    al,0x26
  401f54:	test   DWORD PTR [esi-0x5],ecx
  401f57:	pop    esi
  401f58:	mov    ecx,ebp
  401f5a:	jb     0x401f58
  401f5c:	(bad)  
  401f5d:	bound  edx,QWORD PTR [edi-0x4162c3e8]
  401f63:	loop   0x401f72
  401f65:	bound  edx,QWORD PTR [edx]
  401f67:	aaa    
  401f68:	cmp    eax,0x564c1aa7
  401f6d:	inc    ebp
  401f6e:	push   0xffffffd3
  401f70:	nop
  401f71:	sub    al,ch
  401f73:	push   0xbcde9b66
  401f78:	ds call 0xbf81:0x6bc6a4f1
  401f80:	xor    ch,BYTE PTR [ebp-0x4a]
  401f83:	pop    eax
  401f84:	xor    al,BYTE PTR [edx+0x9]
  401f87:	pop    ebp
  401f88:	cmp    DWORD PTR [ebx+0xa],eax
  401f8b:	dec    ebx
  401f8c:	xchg   BYTE PTR [ecx-0x31a2654],al
  401f92:	inc    esp
  401f93:	out    dx,eax
  401f94:	add    BYTE PTR [edx+0x16],0x73
  401f98:	dec    ebp
  401f99:	sbb    ebp,DWORD PTR [edx+0x1a]
  401f9c:	dec    ebp
  401f9d:	xchg   esi,eax
  401f9e:	stos   DWORD PTR es:[edi],eax
  401f9f:	fld    DWORD PTR [esi-0x66]
  401fa2:	mov    DWORD PTR ds:0xb5f2fa01,eax
  401fa8:	xor    cx,bp
  401fab:	iret   
  401fac:	mov    al,0xca
  401fae:	jbe    0x402012
  401fb0:	pop    ebp
  401fb1:	mov    al,0x90
  401fb3:	cmp    BYTE PTR [edx-0x5b],ch
  401fb6:	pop    esp
  401fb7:	dec    edi
  401fb8:	xchg   ebp,eax
  401fb9:	js     0x40201b
  401fbb:	stos   BYTE PTR es:[edi],al
  401fbc:	mov    ecx,0x2b7b1217
  401fc1:	pop    es
  401fc2:	popf   
  401fc3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401fc4:	mov    ebp,0x805b25ca
  401fc9:	xor    edx,DWORD PTR [ebx+0x69f1a2a6]
  401fcf:	test   BYTE PTR [edi-0x7c],dl
  401fd2:	(bad)  
  401fd3:	ror    DWORD PTR ds:0xf0f602fb,1
  401fd9:	push   DWORD PTR [edi-0x60427d6c]
  401fdf:	out    dx,eax
  401fe0:	xchg   ecx,eax
  401fe1:	mov    bh,0x17
  401fe3:	in     eax,dx
  401fe4:	leave  
  401fe5:	sub    BYTE PTR [ebp-0x4f3afb69],0xbd
  401fec:	(bad)  
  401fed:	and    DWORD PTR [ecx-0x2d649313],esi
  401ff3:	mov    edi,0xda61d60b
  401ff8:	mov    esp,0x4441adc3
  401ffd:	jg     0x401fa0
  401fff:	xchg   ebp,eax
  402000:	clc    
  402001:	test   BYTE PTR [edx-0x9],dl
  402004:	leave  
  402005:	pop    esi
  402006:	ret    
  402007:	jno    0x402031
  402009:	mov    edx,0x5213128
  40200e:	mov    BYTE PTR [ecx-0x22165246],ah
  402014:	pop    esi
  402015:	dec    edi
  402016:	and    eax,DWORD PTR [ebp-0x2e]
  402019:	and    bl,BYTE PTR [edi-0x55]
  40201c:	mov    DWORD PTR [ebp-0x3c5f0f1d],eax
  402022:	pop    eax
  402023:	and    DWORD PTR ds:0x691e4eec,0x897f63cb
  40202d:	aam    0xaa
  40202f:	pop    ebp
  402030:	das    
  402031:	sbb    dh,dh
  402033:	lea    edx,[esi+0x55]
  402036:	jne    0x402027
  402038:	sub    al,0xa6
  40203a:	fidiv  WORD PTR [ebp-0x42450e08]
  402040:	(bad)  
  402042:	ins    DWORD PTR es:[edi],dx
  402043:	popf   
  402044:	cs mov bh,0xb3
  402047:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402048:	ret    
  402049:	aaa    
  40204a:	push   ds
  40204b:	xor    al,bh
  40204d:	out    0x8b,al
  40204f:	push   ebp
  402050:	fmul   DWORD PTR [ebx-0x38fc99ee]
  402056:	cmp    ax,WORD PTR [edx]
  402059:	jmp    0x402276
  40205e:	ret    0x801a
  402061:	gs push 0xfb99f171
  402067:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402068:	ins    BYTE PTR es:[edi],dx
  402069:	or     BYTE PTR [edi+0x7086144e],0x4
  402070:	jo     0x4020e2
  402072:	jo     0x4020f2
  402074:	jo     0x4020e6
  402076:	lods   eax,DWORD PTR ds:[esi]
  402077:	les    ebx,FWORD PTR [edi+0x76]
  40207a:	fstp   QWORD PTR [esi+0x4d]
  40207d:	ja     0x4020c2
  40207f:	lahf   
  402080:	jne    0x40208c
  402082:	or     edi,ecx
  402084:	ret    
  402085:	outs   dx,BYTE PTR ds:[esi]
  402086:	hlt    
  402087:	push   esp
  402088:	lea    ebx,[edi+0x1c88f648]
  40208e:	gs mov dh,0x86
  402091:	sar    DWORD PTR [edi],cl
  402093:	and    DWORD PTR cs:[ebx-0x62],esp
  402097:	inc    esi
  402098:	rcl    BYTE PTR [eax+0x63],1
  40209b:	adc    bl,BYTE PTR [eax]
  40209d:	jbe    0x402095
  40209f:	sbb    esp,DWORD PTR [ebp+0x7b5fb41c]
  4020a5:	xchg   edx,eax
  4020a6:	jecxz  0x402089
  4020a8:	adc    cl,BYTE PTR [ebp+esi*8-0x31]
  4020ac:	cmp    DWORD PTR [edx],eax
  4020ae:	fld    DWORD PTR ds:0x96fbfac6
  4020b4:	jno    0x4020d1
  4020b6:	les    ebp,FWORD PTR [ecx]
  4020b8:	cmc    
  4020b9:	lahf   
  4020ba:	test   eax,0xc980d002
  4020bf:	mov    al,ds:0x23e2707d
  4020c5:	rcr    DWORD PTR [eax-0x407dc7a5],1
  4020cb:	cmp    BYTE PTR [ebp-0x4d11b541],ch
  4020d1:	and    ecx,DWORD PTR [eax+edx*8]
  4020d4:	fcos   
  4020d6:	push   ecx
  4020d7:	or     BYTE PTR ds:0xde98ddf7,bh
  4020dd:	sbb    eax,0x953fb1a2
  4020e2:	adc    al,0xfa
  4020e4:	in     al,0x62
  4020e6:	mov    bl,0x4d
  4020e8:	in     eax,dx
  4020e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4020ea:	pop    ds
  4020eb:	mov    bl,0x71
  4020ed:	push   eax
  4020ee:	push   eax
  4020ef:	inc    eax
  4020f0:	xor    al,0x40
  4020f2:	js     0x402134
  4020f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4020f5:	push   esp
  4020f6:	dec    esi
  4020f7:	addr16 push esp
  4020f9:	repnz mov esi,fs
  4020fc:	mov    cl,0x2c
  4020fe:	scas   eax,DWORD PTR es:[edi]
  4020ff:	xor    ecx,DWORD PTR [edi]
  402101:	push   esp
  402102:	jp     0x4020c4
  402104:	mov    ecx,0x336e8a52
  402109:	in     al,dx
  40210a:	dec    edi
  40210b:	or     al,0x9e
  40210d:	ds out 0x0,eax
  402110:	(bad)
  402113:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402114:	jle    0x4020e9
  402116:	in     al,dx
  402117:	idiv   BYTE PTR ss:[eax-0x57ed15c]
  40211e:	addr16 in eax,0xb5
  402121:	adc    edi,DWORD PTR [ecx+0x43bb0196]
  402127:	xor    BYTE PTR cs:[esi],bh
  40212a:	inc    ebp
  40212b:	push   esp
  40212c:	mov    ds:0xc9594fa0,eax
  402131:	scas   al,BYTE PTR es:[edi]
  402132:	push   ecx
  402133:	sbb    ecx,0x9cc9372b
  402139:	aam    0x5f
  40213b:	pushf  
  40213c:	dec    eax
  40213d:	jmp    0x4021bd
  40213f:	jb     0x402190
  402141:	popf   
  402142:	mov    bl,0x27
  402144:	mov    esp,esi
  402146:	pop    ss
  402147:	repz iret 
  402149:	imul   eax,DWORD PTR [esi+0x72],0x5f4c0ab5
  402150:	inc    eax
  402151:	loop   0x40212a
  402153:	dec    edx
  402154:	aaa    
  402155:	ins    DWORD PTR es:[edi],dx
  402156:	(bad)
  40215a:	sub    eax,0x1bb8df71
  40215f:	mov    eax,0x872a9a17
  402164:	int3   
  402165:	popa   
  402166:	pop    eax
  402167:	in     al,0x79
  402169:	push   ss
  40216a:	cdq    
  40216b:	jmp    0x4af5bb82
  402170:	mov    eax,DWORD PTR [ebp-0x74]
  402173:	inc    ebp
  402174:	sub    al,0x11
  402176:	ja     0x402182
  402178:	jne    0x4021d7
  40217a:	jle    0x40210c
  40217c:	adc    DWORD PTR [ebp-0xfb7cdef],ecx
  402182:	mov    DWORD PTR [esi],ebp
  402184:	or     al,0xaa
  402186:	imul   edx,DWORD PTR [edi],0xffffffb5
  402189:	sub    ebp,esi
  40218b:	cmp    BYTE PTR [edx-0x5c],bh
  40218e:	and    al,0xfe
  402190:	leave  
  402191:	jo     0x4021cf
  402193:	outs   dx,BYTE PTR ds:[esi]
  402194:	in     al,dx
  402195:	pop    esi
  402196:	cwde   
  402197:	stos   DWORD PTR es:[edi],eax
  402198:	mov    edx,0x77410c8f
  40219d:	aam    0x2d
  40219f:	sub    eax,0x8e689474
  4021a4:	clc    
  4021a5:	push   ecx
  4021a6:	pop    ecx
  4021a7:	daa    
  4021a8:	mov    ch,0xec
  4021aa:	cmp    dl,BYTE PTR [edx-0x4f78b88]
  4021b0:	add    ch,BYTE PTR [ecx+0x3396143f]
  4021b6:	dec    ebp
  4021b7:	push   edi
  4021b8:	and    eax,DWORD PTR [ecx-0x712b42fa]
  4021be:	aam    0x62
  4021c0:	dec    DWORD PTR ds:0x64da46b
  4021c6:	fcmovnb st,st(5)
  4021c8:	mov    dh,0x33
  4021ca:	sub    eax,0x85c65dd1
  4021cf:	loop   0x4021b9
  4021d1:	sub    ah,ch
  4021d3:	sub    bl,cl
  4021d5:	lea    edi,[esi-0x6e6b4b86]
  4021db:	arpl   WORD PTR [ebx],di
  4021dd:	push   ebx
  4021de:	fisub  WORD PTR [ebp+0x15]
  4021e1:	push   ecx
  4021e2:	(bad)  
  4021e3:	out    dx,al
  4021e4:	pop    ss
  4021e5:	in     eax,0x62
  4021e7:	lea    esp,[esi-0x11]
  4021ea:	mov    esp,DWORD PTR [edi+0xf]
  4021ed:	gs mov edi,0x6ec0ed36
  4021f3:	fidivr DWORD PTR [ecx-0x4b]
  4021f6:	in     eax,dx
  4021f7:	jge    0x4021b3
  4021f9:	cld    
  4021fa:	inc    esp
  4021fb:	loop   0x402249
  4021fd:	mov    dl,0xa7
  4021ff:	into   
  402200:	fiadd  WORD PTR [ebx-0x20828c78]
  402206:	mov    ecx,0x99df50a2
  40220b:	aam    0xb5
  40220d:	adc    ebp,ebx
  40220f:	pop    ds
  402210:	xor    BYTE PTR [edx+0x14],dh
  402213:	ret    0xc9e5
  402216:	in     al,dx
  402217:	sub    dh,BYTE PTR [esi-0x2dfefe03]
  40221d:	mov    DWORD PTR [ecx-0x16],edx
  402220:	add    edx,DWORD PTR [edx]
  402222:	xor    bh,BYTE PTR [esp+eax*1]
  402225:	pop    ss
  402226:	and    DWORD PTR [edx],edi
  402228:	mov    eax,0x6b02b5a4
  40222d:	jg     0x4021cd
  40222f:	add    BYTE PTR [eax+eiz*4],ah
  402232:	mov    ah,0xa5
  402234:	push   eax
  402235:	out    dx,al
  402236:	mov    DWORD PTR [ebx],ecx
  402238:	sbb    eax,0xd684db55
  40223d:	shl    DWORD PTR [ebx],1
  40223f:	xchg   ebx,eax
  402240:	and    al,0x93
  402242:	dec    ecx
  402243:	int    0x71
  402245:	mov    dx,0x641c
  402249:	les    edi,FWORD PTR [ecx+eiz*1+0x16]
  40224d:	push   ebp
  40224e:	push   eax
  40224f:	leave  
  402250:	or     cl,0x8c
  402253:	jbe    0x402219
  402255:	xor    DWORD PTR [eax-0x1b1e8267],eax
  40225b:	int    0x87
  40225d:	aad    0x1c
  40225f:	popa   
  402260:	push   eax
  402261:	jo     0x4022dd
  402263:	sub    ah,bh
  402265:	pusha  
  402266:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402267:	lahf   
  402268:	adc    DWORD PTR [esi],0xab059ea6
  40226e:	cld    
  40226f:	std    
  402270:	popa   
  402271:	mov    ebp,0x93cd24bc
  402276:	je     0x4026fd
  40227c:	mov    eax,DWORD PTR [ebp-0x14]
  40227f:	xor    eax,ecx
  402281:	add    eax,esi
  402283:	mov    DWORD PTR [ebp-0x30],eax
  402286:	mov    eax,DWORD PTR [ebp-0x34]
  402289:	jmp    0x4024a6
  40228e:	jp     0x40222b
  402290:	sbb    al,0xe8
  402292:	cdq    
  402293:	ja     0x402267
  402295:	jno    0x40227a
  402297:	sbb    al,0x20
  402299:	sub    edx,ebx
  40229b:	adc    al,BYTE PTR [ebp+0x70027028]
  4022a1:	jo     0x402313
  4022a3:	jle    0x402315
  4022a5:	jo     0x4022a4
  4022a7:	(bad)
  4022ab:	or     esi,DWORD PTR ds:0xab5d8431
  4022b1:	retf   
  4022b2:	loope  0x4022ee
  4022b4:	es cmp eax,0x195bc2e7
  4022ba:	dec    DWORD PTR [ebp+0x24]
  4022bd:	push   ebp
  4022be:	dec    edx
  4022bf:	ret    
  4022c0:	hlt    
  4022c1:	stos   DWORD PTR es:[edi],eax
  4022c2:	enter  0xd2e9,0x7e
  4022c6:	cmp    eax,0xf4cd48a2
  4022cb:	add    al,0x32
  4022cd:	mov    DWORD PTR [ebx+0x27451d0a],eax
  4022d3:	es dec ebx
  4022d5:	sar    DWORD PTR [ebx],0xe1
  4022d8:	ds sbb al,0x21
  4022db:	dec    ebp
  4022dc:	mov    esp,0xd2f9154c
  4022e1:	je     0x402351
  4022e3:	sahf   
  4022e4:	xchg   edx,edi
  4022e6:	cs nop
  4022e8:	addr16 add eax,ecx
  4022eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4022ec:	stc    
  4022ed:	xchg   edx,eax
  4022ee:	pusha  
  4022ef:	test   eax,0xe47a8ec8
  4022f4:	xchg   esp,eax
  4022f6:	xor    DWORD PTR [ebp-0x6a129809],ecx
  4022fc:	xor    ecx,ebx
  4022fe:	pop    esi
  4022ff:	ret    
  402300:	lahf   
  402301:	retf   
  402302:	push   es
  402303:	jmp    0x25935d3
  402308:	or     ecx,DWORD PTR [edx+0x49]
  40230b:	mov    cl,0xf9
  40230d:	jbe    0x40235d
  40230f:	aas    
  402310:	jns    0x402382
  402312:	imul   eax,DWORD PTR [ebx+0x7da766aa],0x5e
  402319:	jb     0x4022af
  40231b:	push   ss
  40231c:	mov    al,0x86
  40231e:	lahf   
  40231f:	enter  0xfa8f,0xa5
  402323:	fs jo  0x402329
  402326:	push   ds
  402327:	pop    ss
  402328:	(bad)  
  402329:	pusha  
  40232a:	and    dl,dl
  40232c:	sub    al,0xa9
  40232e:	inc    edx
  40232f:	iret   
  402330:	inc    dh
  402332:	jp     0x402382
  402334:	push   ss
  402335:	mov    esi,0xab754b3b
  40233a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40233b:	add    ebx,ebp
  40233d:	inc    eax
  40233e:	cld    
  40233f:	xor    edx,0xfe45e9db
  402345:	loop   0x40236f
  402347:	push   edi
  402348:	mov    BYTE PTR [ebp-0x19],0x14
  40234c:	xor    DWORD PTR [ecx-0x125bfa18],0x9cc07275
  402356:	nop
  402357:	pop    ebp
  402358:	daa    
  402359:	hlt    
  40235a:	pushf  
  40235b:	xchg   edi,eax
  40235c:	mov    ecx,0x2acce5fd
  402361:	push   cs
  402362:	data16 stos BYTE PTR es:[edi],al
  402364:	out    dx,eax
  402365:	mov    ecx,DWORD PTR [ebx+edx*1-0x394c46ef]
  40236c:	call   0x9330:0x806a6c9b
  402373:	mov    bl,0x78
  402375:	push   ecx
  402376:	xchg   ebx,eax
  402377:	xor    ch,BYTE PTR [esi-0x731113d1]
  40237d:	es imul ebx,edi,0x12
  402381:	mov    ebx,0x9d8877d1
  402386:	sub    al,BYTE PTR [ebx+0x2f]
  402389:	lock mov ds:0x6ea4c55f,eax
  40238f:	dec    edx
  402390:	push   ebx
  402391:	xchg   ebx,eax
  402392:	aad    0x2b
  402394:	out    dx,eax
  402395:	mov    ds:0x720c4ff1,al
  40239a:	mov    ah,0x89
  40239c:	mov    ch,0x2c
  40239e:	fstp   DWORD PTR [esi-0x4d92f641]
  4023a4:	and    edi,ebx
  4023a6:	sub    al,0x17
  4023a8:	mov    esp,0xeebe626f
  4023ad:	mov    eax,0x79dde0b5
  4023b2:	loopne 0x4023f1
  4023b4:	dec    esp
  4023b5:	mov    ebx,0xa22d35cf
  4023ba:	ror    ebx,0x5d
  4023bd:	cwde   
  4023be:	or     bh,cl
  4023c0:	daa    
  4023c1:	imul   eax,DWORD PTR [eax-0xd],0x1f1ef66b
  4023c8:	xchg   esp,eax
  4023c9:	jmp    0x7754:0x7c6c8a0
  4023d0:	arpl   WORD PTR [eax+ebp*2+0x5],ax
  4023d4:	add    BYTE PTR [esi],bl
  4023d6:	imul   edx,DWORD PTR [ecx+eiz*2+0x1c3a5100],0x4510490d
  4023e1:	rol    bl,0x56
  4023e4:	sub    esp,ecx
  4023e6:	pop    es
  4023e7:	xlat   BYTE PTR ds:[ebx]
  4023e8:	test   ah,dl
  4023ea:	push   ecx
  4023eb:	sub    al,0x5
  4023ed:	inc    edx
  4023ee:	call   0x227d55b
  4023f3:	jnp    0x402448
  4023f5:	xchg   BYTE PTR [ebp-0x2412c0e7],dl
  4023fb:	mov    BYTE PTR [ebx],0xcf
  4023fe:	jo     0x402441
  402400:	in     al,dx
  402401:	aam    0x7b
  402403:	mov    ecx,0x1d0104c9
  402408:	stos   BYTE PTR es:[edi],al
  402409:	dec    edx
  40240a:	sti    
  40240b:	pop    ebp
  40240c:	iret   
  40240d:	jne    0x40239b
  40240f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402410:	call   0x22610f8e
  402415:	xchg   esp,eax
  402416:	adc    al,0x6f
  402418:	sbb    DWORD PTR ds:0xdcd2c510,ebx
  40241e:	les    edi,FWORD PTR [ebx]
  402420:	out    0x5a,eax
  402422:	ss daa 
  402424:	inc    edi
  402425:	mov    edx,0xefb4202e
  40242a:	cmc    
  40242b:	xchg   ebp,eax
  40242c:	aas    
  40242d:	cmp    DWORD PTR [ebx+0xbb0f04],ebp
  402433:	cli    
  402434:	in     al,dx
  402435:	or     eax,0xb4c7d7e
  40243a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40243b:	test   DWORD PTR [ebp-0x78b5496c],ecx
  402441:	ins    BYTE PTR es:[edi],dx
  402442:	ss mov ebp,0x692bd75e
  402448:	pop    esp
  402449:	pop    edx
  40244a:	daa    
  40244b:	xchg   edi,eax
  40244d:	int3   
  40244e:	ret    
  40244f:	or     edi,ebp
  402451:	call   0x5de5:0x3b7e11ff
  402458:	(bad)  
  402459:	outs   dx,BYTE PTR ds:[esi]
  40245a:	push   0x7dc7053f
  40245f:	jbe    0x4023fc
  402461:	mov    ds:0x2a68b6e7,al
  402466:	xor    esp,DWORD PTR [ecx]
  402468:	in     eax,0xe1
  40246a:	fidivr DWORD PTR [ecx-0x5a1f084d]
  402470:	jo     0x4024e1
  402472:	sbb    DWORD PTR [esi-0x5f],esp
  402475:	or     al,0xfa
  402477:	mov    ebx,0x9e349887
  40247c:	mov    dh,0x6f
  40247e:	add    ah,BYTE PTR [esi]
  402480:	mov    edx,ecx
  402482:	or     eax,DWORD PTR [ecx-0x56]
  402485:	test   BYTE PTR [eax+ebp*8-0x6c],ch
  402489:	sbb    cl,BYTE PTR [edx-0x7e]
  40248c:	xor    DWORD PTR [esi+ecx*2],eax
  40248f:	loopne 0x4024e0
  402491:	push   cs
  402492:	mov    al,0x51
  402494:	mov    edi,edx
  402496:	add    al,BYTE PTR [eax]
  402498:	ja     0x402482
  40249a:	jmp    0xbb44:0xe63b0724
  4024a1:	sub    esp,esp
  4024a3:	lods   eax,DWORD PTR ds:[esi]
  4024a4:	mov    edi,0x558b66ea
  4024a9:	enter  0x3ebb,0x8a
  4024ad:	add    BYTE PTR [eax],al
  4024af:	xor    dx,bx
  4024b2:	mov    ebx,DWORD PTR [ebp-0x8]
  4024b5:	add    dx,di
  4024b8:	movzx  edx,dx
  4024bb:	xor    ebx,ecx
  4024bd:	lea    edx,[edx+ebx*1+0x32729c]
  4024c4:	add    DWORD PTR [eax],edx
  4024c6:	mov    eax,DWORD PTR [ebp-0x2c]
  4024c9:	mov    edx,DWORD PTR [ebp-0x8]
  4024cc:	mov    ebx,DWORD PTR [ebp-0x30]
  4024cf:	xor    edx,ecx
  4024d1:	add    edx,esi
  4024d3:	imul   edx,ebx
  4024d6:	sub    DWORD PTR [eax],edx
  4024d8:	mov    eax,DWORD PTR [ebp-0x14]
  4024db:	jmp    0x402730
  4024e0:	jmp    0x4026fd
  4024e5:	and    DWORD PTR [edi+edi*4+0x31714d76],esi
  4024ec:	jae    0x40250e
  4024ee:	xor    BYTE PTR [ecx+0x48975637],cl
  4024f4:	pop    ss
  4024f5:	jo     0x4024f7
  4024f7:	jo     0x402569
  4024f9:	jo     0x402579
  4024fb:	jo     0x40256d
  4024fd:	sbb    DWORD PTR [edx+edi*1],ebx
  402500:	cmp    DWORD PTR [ecx],edx
  402502:	lock arpl WORD PTR [ebx-0x22eeeebf],si
  402509:	pop    ds
  40250a:	fisub  WORD PTR [ecx]
  40250c:	jno    0x402506
  40250e:	bound  ecx,QWORD PTR [ebx]
  402510:	arpl   dx,di
  402512:	dec    edx
  402513:	sahf   
  402514:	loope  0x402532
  402516:	xchg   dh,bh
  402518:	push   eax
  402519:	call   0xb753a096
  40251e:	mov    eax,ds:0xe62dd0d6
  402523:	adc    al,0x5c
  402525:	xchg   esp,eax
  402526:	or     BYTE PTR [eax+0x1a328e2a],dh
  40252c:	push   0xffffffb4
  40252e:	inc    edi
  40252f:	fcom   DWORD PTR cs:0xc1ec33db
  402536:	and    DWORD PTR [esi+0x7fec8718],edi
  40253c:	xor    BYTE PTR [edx-0x23],al
  40253f:	push   ecx
  402540:	pop    ecx
  402541:	in     al,dx
  402542:	jne    0x402502
  402544:	in     eax,dx
  402545:	pop    eax
  402546:	jmp    DWORD PTR [esi+eax*4-0x22a073f6]
  40254d:	dec    ebp
  40254e:	dec    edi
  40254f:	jno    0x402576
  402551:	sbb    ch,BYTE PTR es:[eax]
  402554:	inc    eax
  402555:	leave  
  402556:	loopne 0x402502
  402558:	add    ch,al
  40255a:	xlat   BYTE PTR ds:[ebx]
  40255b:	shr    DWORD PTR [edi],0x26
  40255e:	adc    al,0x4a
  402560:	daa    
  402561:	mov    cl,BYTE PTR [esi+eiz*2]
  402564:	scas   eax,DWORD PTR es:[edi]
  402565:	pushf  
  402566:	fwait
  402567:	out    0x16,al
  402569:	dec    esi
  40256a:	mov    ebx,esp
  40256c:	push   edi
  40256d:	sti    
  40256e:	mov    dh,0x17
  402570:	pop    esi
  402571:	pop    edx
  402572:	xor    al,0xa6
  402574:	js     0x40257d
  402576:	push   es
  402577:	jp     0x40259c
  402579:	ret    0x962e
  40257c:	jmp    0xe82e:0xb6707ea1
  402583:	fs dec ebp
  402585:	push   ecx
  402586:	(bad)  
  402587:	loopne 0x40256e
  402589:	adc    DWORD PTR [edx+0x3b],eax
  40258c:	loope  0x40250e
  40258e:	mov    ds:0xea7422cd,al
  402593:	arpl   cx,ax
  402595:	xor    DWORD PTR ds:0x66918b3e,eax
  40259b:	or     ch,BYTE PTR [ebp-0x38ea9199]
  4025a1:	push   ebp
  4025a2:	fs retf 0xa625
  4025a6:	sub    edx,eax
  4025a8:	xchg   BYTE PTR [ebp+0x7d],dl
  4025ab:	(bad)  
  4025ac:	in     eax,dx
  4025ad:	sti    
  4025ae:	loope  0x402602
  4025b0:	setne  dh
  4025b3:	cmp    DWORD PTR [edx-0x73e1052f],edi
  4025b9:	rcl    DWORD PTR [esi],0xf8
  4025bc:	dec    ebp
  4025bd:	leave  
  4025be:	sbb    DWORD PTR [ebx+0x2c625b3d],edx
  4025c4:	ss mov edi,0x7026be5f
  4025ca:	stc    
  4025cb:	xor    eax,0xafe56ecb
  4025d0:	(bad)  
  4025d1:	imul   edi,esi,0x5aa066d8
  4025d7:	xchg   ebx,eax
  4025d8:	adc    ecx,edi
  4025da:	jle    0x4025fa
  4025dc:	aas    
  4025dd:	sub    al,0x13
  4025df:	sbb    DWORD PTR [edx+edx*1+0x4e],ecx
  4025e3:	adc    eax,0x1ea373b2
  4025e8:	pop    esp
  4025e9:	mov    ch,0x3c
  4025eb:	popa   
  4025ec:	push   edx
  4025ed:	xchg   BYTE PTR [ebx-0x57cab77b],bl
  4025f3:	inc    ecx
  4025f4:	cmp    ecx,DWORD PTR [ecx-0x5f56aaad]
  4025fa:	mov    eax,ds:0xaeda71aa
  4025ff:	fs sbb al,0x3e
  402602:	dec    eax
  402603:	sbb    cl,BYTE PTR [ebp+0x51]
  402606:	(bad)  
  402607:	push   0x7931d4ca
  40260c:	sbb    al,0xfb
  40260e:	pop    ds
  40260f:	por    mm2,QWORD PTR [ebp-0xa60701c]
  402616:	scas   eax,DWORD PTR es:[edi]
  402617:	xchg   ecx,eax
  402618:	test   eax,0x2b6b5e08
  40261d:	inc    edi
  40261e:	sahf   
  40261f:	cld    
  402620:	int3   
  402621:	mov    eax,ds:0xa8196787
  402626:	mov    ah,0x2d
  402628:	or     DWORD PTR [eax+0x33ee45e1],edx
  40262e:	xor    eax,0xff6041bb
  402633:	mov    eax,0xda07fb7b
  402638:	lods   eax,DWORD PTR ds:[esi]
  402639:	mov    eax,0x623a1f2f
  40263e:	daa    
  40263f:	xchg   BYTE PTR [ecx],dh
  402641:	add    ebp,DWORD PTR [eax]
  402643:	add    DWORD PTR [ecx],0x44
  402646:	cmc    
  402647:	mov    ebp,0xf62db9ac
  40264c:	jb     0x4025f8
  40264e:	push   esp
  40264f:	dec    esi
  402650:	xchg   ecx,eax
  402651:	cmp    DWORD PTR [esi-0x4f],ebx
  402654:	adc    edi,DWORD PTR [ecx]
  402656:	lock push edx
  402658:	fcom   QWORD PTR [edx-0x4f]
  40265b:	scas   al,BYTE PTR es:[edi]
  40265c:	xor    edi,esi
  40265e:	das    
  40265f:	test   al,0x10
  402661:	xchg   esp,eax
  402662:	mov    eax,ds:0xcf26d34a
  402667:	fucomip st,st(6)
  402669:	cmp    esi,DWORD PTR [ebp+0x1d0bd8c0]
  40266f:	xor    ah,BYTE PTR [ebx*1-0x2bcc9851]
  402676:	dec    eax
  402677:	rcl    BYTE PTR [ebp-0x35],cl
  40267a:	dec    esp
  40267b:	push   0x17
  40267d:	out    dx,al
  40267e:	ds or  al,0xf9
  402681:	std    
  402682:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402683:	mov    WORD PTR [ebp-0x6a],?
  402686:	inc    ebx
  402687:	lods   al,BYTE PTR ds:[esi]
  402688:	(bad)  
  402689:	in     eax,0x90
  40268b:	rol    BYTE PTR [esp+eax*2+0x26],1
  40268f:	push   cs
  402690:	(bad)  
  402691:	fadd   st,st(0)
  402693:	test   DWORD PTR [ebx+0x7ae1e526],0xcb642ca1
  40269d:	xor    al,BYTE PTR [eax-0xe]
  4026a0:	(bad)  
  4026a1:	cmc    
  4026a2:	stos   DWORD PTR es:[edi],eax
  4026a3:	jno    0x402631
  4026a5:	xor    DWORD PTR [esi],edx
  4026a7:	fwait
  4026a8:	imul   esp,ebp,0xcff7cf93
  4026ae:	out    dx,eax
  4026af:	jo     0x40263d
  4026b1:	push   edx
  4026b2:	mov    edi,0x1f49bd59
  4026b7:	addr16 mov dl,0xd2
  4026ba:	xchg   edi,eax
  4026bb:	add    al,0x8c
  4026bd:	cmp    eax,0x95b345d3
  4026c2:	mov    ebx,0xeba04ea2
  4026c7:	xchg   edx,eax
  4026c8:	mov    al,0xe
  4026ca:	cdq    
  4026cb:	stc    
  4026cc:	jne    0x40272e
  4026ce:	repnz aaa 
  4026d0:	lds    ebp,FWORD PTR ds:0xd2b9e781
  4026d6:	jl     0x402698
  4026d8:	add    BYTE PTR [eax-0x6d],0x25
  4026dc:	fisttp QWORD PTR ds:0x3f4e8a9
  4026e2:	retf   0x6d75
  4026e5:	jae    0x402755
  4026e7:	aaa    
  4026e8:	das    
  4026e9:	mov    ecx,0x14a9465d
  4026ee:	in     eax,dx
  4026ef:	adc    DWORD PTR [ebx-0xb],edi
  4026f2:	inc    edi
  4026f3:	mov    ah,BYTE PTR [ebx+ebx*1-0x2185f54]
  4026fa:	cmp    ebp,DWORD PTR [eax-0x51]
  4026fd:	mov    eax,DWORD PTR [ebp-0xc]
  402700:	mov    edx,DWORD PTR [ebp-0x18]
  402703:	xor    eax,edx
  402705:	cmp    eax,0x8cb40b7d
  40270a:	je     0x40272d
  402710:	mov    eax,DWORD PTR [ebp-0x10]
  402713:	add    DWORD PTR [eax],0x7403501
  402719:	jmp    0x40272d
  40271e:	mov    eax,DWORD PTR [ebp-0x1c]
  402721:	cmp    DWORD PTR [eax],0xf89f2da9
  402727:	jne    0x402748
  40272d:	mov    eax,DWORD PTR [ebp-0x8]
  402730:	xor    eax,ecx
  402732:	add    eax,esi
  402734:	test   eax,eax
  402736:	jne    0x402748
  40273c:	xor    DWORD PTR [ebp-0x20],0xe149ebe
  402743:	jmp    0x4012bf
  402748:	pop    ebx
  402749:	pop    edi
  40274a:	jmp    0x402967
  40274f:	cs dec edi
  402751:	add    dl,bl
  402753:	popa   
  402754:	push   ecx
  402755:	in     eax,dx
  402756:	jno    0x4026ea
  402758:	imul   ebx,DWORD PTR [ecx+esi*8],0x784b8af0
  40275f:	jo     0x40276f
  402761:	jo     0x4027d3
  402763:	jo     0x4027e3
  402765:	jo     0x4027d7
  402767:	adc    ah,al
  402769:	pushf  
  40276a:	(bad)
  40276d:	inc    ebx
  40276e:	fadd   DWORD PTR [eax-0x339640c4]
  402774:	lds    ecx,FWORD PTR [edx-0x27]
  402777:	rcr    BYTE PTR [ecx-0x229b6476],0xb
  40277e:	ins    DWORD PTR es:[edi],dx
  40277f:	cmp    DWORD PTR [edi+0x7e23134e],0x57
  402786:	push   ecx
  402787:	rcr    DWORD PTR [esi],1
  402789:	dec    esp
  40278a:	out    dx,eax
  40278b:	xchg   esi,eax
  40278c:	cmc    
  40278d:	adc    eax,0xa1f40e0
  402792:	xchg   ecx,eax
  402793:	(bad)  
  402794:	cmp    ecx,DWORD PTR [eax]
  402796:	inc    esi
  402797:	mov    WORD PTR [ebx+eax*2],ds
  40279a:	icebp  
  40279b:	(bad)  
  40279c:	mov    edi,0xe0d24a57
  4027a1:	cmp    dh,cl
  4027a3:	int    0xbc
  4027a5:	test   DWORD PTR [ecx+0x423b7c81],0xe75ac0df
  4027af:	loope  0x4027f2
  4027b1:	jno    0x4027fb
  4027b3:	cld    
  4027b4:	ret    0xbf39
  4027b7:	or     al,0xc1
  4027b9:	hlt    
  4027ba:	aaa    
  4027bb:	ins    BYTE PTR es:[edi],dx
  4027bc:	icebp  
  4027bd:	dec    eax
  4027be:	push   0x5aa14407
  4027c3:	cmc    
  4027c4:	push   es
  4027c5:	mov    ecx,0x2f77678
  4027ca:	mov    eax,ds:0xbd33f4d0
  4027cf:	pusha  
  4027d0:	jmp    0x8846232a
  4027d5:	ret    0xe077
  4027d8:	mov    edi,0x417d9f79
  4027dd:	mov    dh,BYTE PTR [esi+ebp*2]
  4027e0:	cdq    
  4027e1:	mov    DWORD PTR [esi],eax
  4027e3:	push   0xd
  4027e5:	inc    ebp
  4027e6:	out    dx,al
  4027e7:	add    al,bh
  4027e9:	cmp    ebx,ebx
  4027eb:	outs   dx,DWORD PTR ds:[esi]
  4027ec:	xor    esi,DWORD PTR [ebx-0x2d51e37d]
  4027f2:	(bad)  
  4027f3:	stc    
  4027f4:	(bad)  
  4027f5:	sbb    esp,DWORD PTR ds:0x2c6b59f3
  4027fb:	sub    bl,al
  4027fd:	sub    eax,0xc0f3027b
  402802:	push   0x1d
  402804:	(bad)  
  402805:	cmp    BYTE PTR [ebx],bh
  402807:	retf   0x3967
  40280a:	mov    fs,WORD PTR [edx+0x15]
  40280d:	sti    
  40280e:	ds fcomi st,st(6)
  402811:	xchg   ebx,eax
  402812:	out    0x6f,eax
  402814:	imul   ecx,DWORD PTR [edx-0x61],0x80cbb8c5
  40281b:	sub    ecx,ecx
  40281d:	sub    bh,BYTE PTR ds:0xf106d1a2
  402823:	mov    bh,0xdf
  402825:	addr16 std 
  402827:	shr    eax,0x2
  40282a:	dec    ebp
  40282b:	ins    BYTE PTR es:[edi],dx
  40282c:	les    edi,FWORD PTR [esp+ecx*1]
  40282f:	jle    0x4028ae
  402831:	loopne 0x40285d
  402833:	push   0xfbbc539
  402838:	add    ebp,0x8ec3ae8c
  40283e:	ds push edx
  402840:	inc    edi
  402841:	out    dx,eax
  402842:	outs   dx,DWORD PTR ds:[esi]
  402843:	jge    0x4027fc
  402845:	push   cs
  402846:	jns    0x402832
  402848:	test   al,0x3e
  40284a:	(bad)  
  40284b:	and    esp,DWORD PTR [esi-0x27]
  40284e:	and    al,0x8c
  402850:	adc    edi,DWORD PTR [ebp-0x51]
  402853:	sti    
  402854:	push   edi
  402855:	(bad)  
  402856:	push   eax
  402857:	loope  0x4027f7
  402859:	jp     0x40284d
  40285b:	sahf   
  40285c:	inc    edi
  40285d:	and    dl,BYTE PTR [ecx+edx*8+0x1296d53b]
  402864:	jb     0x4028bd
  402866:	(bad)  
  402867:	or     BYTE PTR [esi+0x6f63908e],ch
  40286d:	add    edx,DWORD PTR [ebx+0xa]
  402870:	sub    DWORD PTR [edx+edi*4+0x72],edi
  402874:	pop    ds
  402875:	(bad)  
  402876:	ss loope 0x40288b
  402879:	test   DWORD PTR [esi+0x54a01f3c],0x8151863c
  402883:	mov    esi,0xbc08a1f7
  402888:	in     al,0x14
  40288a:	pop    eax
  40288b:	dec    ecx
  40288c:	hlt    
  40288d:	test   DWORD PTR [ecx],ebx
  40288f:	push   esp
  402890:	ss test eax,0x98feb637
  402896:	or     dh,dh
  402898:	pop    es
  402899:	xor    esp,ebx
  40289b:	fisttp QWORD PTR [ebp+0x171a8e7]
  4028a1:	(bad)  
  4028a2:	cld    
  4028a3:	cs xchg esi,eax
  4028a5:	js     0x4028c8
  4028a7:	sbb    al,0xb2
  4028a9:	fidivr DWORD PTR [ebx-0x16]
  4028ac:	std    
  4028ad:	xor    esi,DWORD PTR [ebp-0x3dbc3b60]
  4028b3:	sar    BYTE PTR [edx-0x1a],1
  4028b6:	and    al,0x96
  4028b8:	fiadd  DWORD PTR [edx-0x2f3d2cc6]
  4028be:	loopne 0x4028dd
  4028c0:	push   eax
  4028c1:	lods   eax,DWORD PTR ds:[esi]
  4028c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4028c3:	xchg   ebp,eax
  4028c4:	rcr    DWORD PTR [ebx-0x5a],1
  4028c7:	add    al,0xbb
  4028c9:	adc    ebp,DWORD PTR [esi]
  4028cb:	mov    al,0xf6
  4028cd:	inc    ebx
  4028ce:	sbb    edx,DWORD PTR [edx]
  4028d0:	shl    BYTE PTR [eax+eiz*2+0xe8d221c],1
  4028d7:	push   0xc716f331
  4028dc:	ds mov bh,0x4d
  4028df:	jle    0x4028be
  4028e1:	dec    esp
  4028e2:	hlt    
  4028e3:	pop    es
  4028e4:	mov    ds:0xdea095d4,eax
  4028e9:	xchg   edx,eax
  4028ea:	(bad)  
  4028ec:	dec    eax
  4028ed:	and    al,0x28
  4028ef:	and    esi,DWORD PTR [ebx+edx*8]
  4028f2:	mov    bh,0x3c
  4028f4:	mov    esi,DWORD PTR [esi+0x38aaa95c]
  4028fa:	int    0xc7
  4028fc:	repnz xor BYTE PTR [edi+0x27],dl
  402900:	mov    cl,BYTE PTR [edi-0x402647b7]
  402906:	in     eax,dx
  402907:	pop    eax
  402908:	xor    DWORD PTR [edi+0x158bd7e8],eax
  40290e:	jnp    0x402933
  402910:	(bad)  
  402911:	mov    ch,0xd7
  402913:	pop    esp
  402914:	xchg   BYTE PTR [ecx],bh
  402916:	jle    0x40291a
  402918:	sub    DWORD PTR [eax-0xd487ee3],esi
  40291e:	add    eax,esi
  402920:	scas   eax,DWORD PTR es:[edi]
  402921:	ret    
  402922:	mov    eax,ds:0x33c5f8db
  402927:	push   edi
  402928:	jae    0x40294d
  40292a:	sahf   
  40292b:	ins    BYTE PTR es:[edi],dx
  40292c:	jmp    0xbdfa:0x287cc61c
  402933:	sub    dh,BYTE PTR [edi]
  402935:	jns    0x402965
  402937:	addr16 cmp eax,0xa9f662d8
  40293d:	xchg   ebp,eax
  40293e:	jnp    0x402961
  402940:	xchg   DWORD PTR [ebp+0x152cc102],ebx
  402946:	cwde   
  402947:	mov    ch,0xf6
  402949:	loope  0x40293f
  40294b:	push   eax
  40294c:	dec    esi
  40294d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40294e:	sub    al,0x2a
  402950:	sti    
  402951:	mov    bl,0x9a
  402953:	enter  0xaa2c,0x79
  402957:	sub    cl,ch
  402959:	fldcw  WORD PTR [ebp-0x77]
  40295c:	int3   
  40295d:	push   esp
  40295e:	cdq    
  40295f:	inc    edx
  402960:	add    DWORD PTR [ecx+ebx*8-0x7316b4b6],ecx
  402967:	pop    esi
  402968:	leave  
  402969:	ret    0x4
  40296c:	push   ebp
  40296d:	mov    ebp,esp
  40296f:	sub    esp,0x28
  402972:	leave  
  402973:	ret    0x10
  402976:	push   ebp
  402977:	mov    ebp,esp
  402979:	push   ecx
  40297a:	or     eax,DWORD PTR ds:0x42fcdd
  402980:	push   ecx
  402981:	movzx  edx,WORD PTR ds:0x42e6ef
  402988:	sbb    DWORD PTR ds:0x42e713,edx
  40298e:	mov    eax,0xf89c8531
  402993:	mov    DWORD PTR ds:0x42fce9,0x1a
  40299d:	cmp    DWORD PTR ds:0x42fce9,0x0
  4029a4:	je     0x402a39
  4029aa:	cmp    DWORD PTR ds:0x42fce9,0x24
  4029b1:	jne    0x4029cc
  4029b7:	push   0x42e12c
  4029bc:	push   0x42e703
  4029c1:	push   0x59d6
  4029c6:	call   DWORD PTR ds:0x42e44f
  4029cc:	mov    edx,DWORD PTR ds:0x42fce9
  4029d2:	dec    edx
  4029d3:	mov    DWORD PTR ds:0x42fce9,edx
  4029d9:	jmp    0x40299d
  4029de:	mov    DWORD PTR ds:0x42e6ff,0x19
  4029e8:	cmp    DWORD PTR ds:0x42e6ff,0x0
  4029ef:	je     0x402a39
  4029f5:	cmp    DWORD PTR ds:0x42e6ff,0x4
  4029fc:	jne    0x402a0d
  402a02:	push   0x5bc5
  402a07:	call   DWORD PTR ds:0x42e2d3
  402a0d:	cmp    DWORD PTR ds:0x42e6ff,0x5
  402a14:	jne    0x402a27
  402a1a:	mov    edx,DWORD PTR ds:0x42e6ff
  402a20:	dec    edx
  402a21:	mov    DWORD PTR ds:0x42e6ff,edx
  402a27:	mov    edx,DWORD PTR ds:0x42e6ff
  402a2d:	dec    edx
  402a2e:	mov    DWORD PTR ds:0x42e6ff,edx
  402a34:	jmp    0x4029e8
  402a39:	mov    DWORD PTR [ebp-0x8],eax
  402a3c:	mov    DWORD PTR [ebp-0x4],0xf89c8530
  402a43:	mov    edx,DWORD PTR [ebp-0x8]
  402a46:	mov    ecx,DWORD PTR ds:0x42fdae
  402a4c:	mov    ecx,DWORD PTR [ecx]
  402a4e:	xor    DWORD PTR ds:0x42fcd5,ecx
  402a54:	push   esi
  402a55:	mov    ecx,0x7510855
  402a5a:	or     DWORD PTR ds:0x42fd0d,ebx
  402a60:	xor    edx,ecx
  402a62:	sbb    esi,0x5361
  402a68:	mov    esi,0x32729c
  402a6d:	sbb    DWORD PTR ds:0x42e128,0x657d
  402a77:	push   edi
  402a78:	and    DWORD PTR ds:0x42e128,0x0
  402a82:	jmp    0x402a94
  402a87:	mov    edi,DWORD PTR ds:0x42e128
  402a8d:	inc    edi
  402a8e:	mov    DWORD PTR ds:0x42e128,edi
  402a94:	cmp    DWORD PTR ds:0x42e128,0x10
  402a9b:	jae    0x402abe
  402aa1:	cmp    DWORD PTR ds:0x42e128,0x11
  402aa8:	jne    0x402ab9
  402aae:	push   0x42e141
  402ab3:	call   DWORD PTR ds:0x42e453
  402ab9:	jmp    0x402a87
  402abe:	mov    edi,DWORD PTR [ebp+0x10]
  402ac1:	add    edx,esi
  402ac3:	cmp    edi,edx
  402ac5:	je     0x4036ba
  402acb:	mov    edx,DWORD PTR [ebp-0x8]
  402ace:	mov    eax,DWORD PTR [ebp-0x4]
  402ad1:	xor    eax,ecx
  402ad3:	mov    edi,0xffcd8d64
  402ad8:	sub    edi,eax
  402ada:	add    edi,DWORD PTR [ebp+0x10]
  402add:	xor    edx,ecx
  402adf:	jmp    0x402dbe
  402ae4:	imul   ebx,DWORD PTR [edx],0xffffff8f
  402ae7:	cmp    BYTE PTR [ebp+0x71],cl
  402aea:	jae    0x402a9d
  402aec:	jl     0x402b40
  402aee:	dec    esi
  402aef:	mov    esp,0xba30e012
  402af4:	jo     0x402b02
  402af6:	jo     0x402b68
  402af8:	mov    esi,0x7070707e
  402afd:	pop    edx
  402afe:	sar    edx,cl
  402b00:	inc    esi
  402b01:	bound  esi,QWORD PTR [esi-0x30]
  402b04:	sahf   
  402b05:	push   esi
  402b06:	repnz push edi
  402b08:	mov    DWORD PTR [esi-0x60cb373e],edx
  402b0e:	jno    0x402abe
  402b10:	push   ds
  402b11:	jg     0x402ac9
  402b13:	sbb    eax,0x19e12bfd
  402b18:	xor    edi,DWORD PTR [eax-0xaf64044]
  402b1e:	pop    ds
  402b1f:	imul   eax,ecx,0x2d
  402b22:	cdq    
  402b23:	fs hlt 
  402b25:	inc    eax
  402b26:	mov    DWORD PTR [ebx+ecx*8-0x1b],ebx
  402b2a:	imul   esi,esp,0x1e57202d
  402b30:	jns    0x402ac2
  402b32:	jge    0x402b41
  402b34:	js     0x402ac1
  402b36:	adc    DWORD PTR [edx-0xb752235],edi
  402b3c:	inc    eax
  402b3d:	inc    esp
  402b3e:	mov    ds:0x374ba8da,al
  402b43:	fs xor eax,0xfa959916
  402b49:	cmovno ebx,DWORD PTR [esi]
  402b4c:	js     0x402b50
  402b4e:	or     ch,BYTE PTR [esi]
  402b50:	pop    eax
  402b51:	push   edi
  402b52:	(bad)  
  402b53:	push   ecx
  402b54:	(bad)  
  402b55:	retf   0x5f3
  402b58:	push   es
  402b59:	xchg   edx,eax
  402b5a:	fst    QWORD PTR [eax+0x6a885d2]
  402b60:	ror    DWORD PTR [ecx+0x175d14ea],0x29
  402b67:	cmp    BYTE PTR [esi+0x26],0xff
  402b6b:	(bad)  
  402b6d:	sti    
  402b6e:	in     eax,0x74
  402b70:	xchg   ebx,eax
  402b71:	xor    eax,esi
  402b73:	xor    cl,0x5b
  402b76:	and    BYTE PTR [ebx+0xa75f568],bh
  402b7c:	jns    0x402bde
  402b7e:	xor    al,0xeb
  402b80:	lods   al,BYTE PTR ds:[esi]
  402b81:	cmc    
  402b82:	cli    
  402b83:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402b84:	pop    esp
  402b85:	push   esp
  402b86:	cmc    
  402b87:	jns    0x402be1
  402b89:	push   cs
  402b8a:	and    BYTE PTR [ebx+0xb],0x11
  402b8e:	out    dx,eax
  402b8f:	inc    esp
  402b90:	int3   
  402b91:	je     0x402b75
  402b93:	outs   dx,BYTE PTR ds:[esi]
  402b94:	fidivr DWORD PTR [eax-0x64]
  402b97:	add    al,0xcf
  402b99:	jo     0x402b27
  402b9b:	adc    al,0xe4
  402b9d:	(bad)  
  402b9f:	pop    edx
  402ba0:	mov    cl,bh
  402ba2:	sub    DWORD PTR [ecx],edx
  402ba4:	mov    dh,0x6f
  402ba6:	sbb    cl,BYTE PTR [ecx+0xf]
  402ba9:	xchg   BYTE PTR [esi+0x32],dh
  402bac:	daa    
  402bad:	and    ecx,esi
  402baf:	nop
  402bb0:	adc    dh,bl
  402bb2:	arpl   bx,cx
  402bb4:	shl    ch,0x37
  402bb7:	jmp    0x402c1a
  402bb9:	mov    ebx,0x64d44b7e
  402bbe:	pusha  
  402bbf:	in     eax,dx
  402bc0:	inc    esi
  402bc1:	push   ecx
  402bc2:	outs   dx,DWORD PTR ds:[esi]
  402bc3:	mov    bh,0x3
  402bc5:	dec    eax
  402bc6:	iret   
  402bc7:	or     DWORD PTR [edi],esi
  402bc9:	push   0x66
  402bcb:	(bad)  
  402bcc:	sbb    BYTE PTR [ecx],dh
  402bce:	add    dh,BYTE PTR [edi+0x3a]
  402bd1:	rcr    BYTE PTR [eax+esi*4],0x42
  402bd5:	adc    eax,0xda4e2e9
  402bda:	push   ds
  402bdb:	cmp    al,0x5f
  402bdd:	repnz lea esp,fs:[ebp-0xa]
  402be2:	xor    bl,BYTE PTR [edx+0x67154a48]
  402be8:	xlat   BYTE PTR ds:[ebx]
  402be9:	ds in  al,dx
  402beb:	mov    esi,0x46503c77
  402bf0:	dec    edi
  402bf1:	shl    DWORD PTR [ebp-0x54],0xec
  402bf5:	(bad)  
  402bf7:	mov    esi,0xd3e3c293
  402bfc:	call   0x91f75a0
  402c01:	shr    DWORD PTR ds:0xd8af809d,cl
  402c07:	pop    ebp
  402c08:	jns    0x402bde
  402c0a:	push   esp
  402c0b:	inc    ebx
  402c0c:	mov    ah,0x42
  402c0e:	leave  
  402c0f:	cdq    
  402c10:	out    0x97,al
  402c12:	loopne 0x402c88
  402c14:	cs (bad) 
  402c16:	jge    0x402c38
  402c18:	fs in  eax,0x65
  402c1b:	jns    0x402c02
  402c1d:	sub    dl,BYTE PTR [ecx]
  402c1f:	xor    eax,0x7eadef67
  402c24:	mov    ebx,0x54c2b7c3
  402c29:	hlt    
  402c2a:	(bad)  
  402c2b:	adc    ah,ah
  402c2d:	repnz dec ebp
  402c2f:	add    al,BYTE PTR [ecx+0x34]
  402c32:	add    dl,BYTE PTR [eax-0x65]
  402c35:	pop    ds
  402c36:	jmp    0x75e55727
  402c3b:	call   0x4e01:0x9495bf56
  402c42:	mov    esp,0xd2811478
  402c47:	pop    edx
  402c48:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402c49:	sti    
  402c4a:	pop    es
  402c4b:	call   0x6f9a6741
  402c50:	xchg   ebp,eax
  402c51:	in     al,dx
  402c52:	pop    esi
  402c53:	pushf  
  402c54:	gs inc esp
  402c56:	nop
  402c57:	out    0x5f,al
  402c59:	fbstp  TBYTE PTR [eax]
  402c5b:	ss (bad) 
  402c5d:	sar    DWORD PTR [eax+eiz*1+0x7914e563],1
  402c64:	inc    DWORD PTR [edx+0x7ceb90c2]
  402c6a:	ins    DWORD PTR es:[edi],dx
  402c6b:	inc    eax
  402c6c:	xor    edi,ebp
  402c6e:	push   esp
  402c6f:	add    al,0xc8
  402c71:	retf   
  402c72:	popf   
  402c73:	jb     0x402cd3
  402c75:	call   0xf7f1:0x42a70ab5
  402c7c:	push   eax
  402c7d:	jns    0x402caf
  402c7f:	lock xor al,0xb
  402c82:	mov    ebx,0x24a723e9
  402c87:	imul   edi,DWORD PTR [edx],0xffffffbd
  402c8a:	in     al,0xef
  402c8c:	xchg   esi,eax
  402c8d:	fimul  DWORD PTR [esi+0x58e28b48]
  402c93:	mov    edi,0xb6212b09
  402c98:	mov    ?,WORD PTR [edi]
  402c9a:	fsub   QWORD PTR [ebx-0x32e1a03d]
  402ca0:	dec    ebx
  402ca1:	push   esi
  402ca2:	fwait
  402ca3:	pop    ebp
  402ca4:	(bad)  
  402ca5:	sub    edi,ebx
  402ca7:	pop    ecx
  402ca8:	mov    ebp,0xf61e72dd
  402cad:	fs jno 0x402d0c
  402cb0:	(bad)  
  402cb1:	cli    
  402cb2:	leave  
  402cb3:	repnz adc cl,BYTE PTR [esi+0x38fcf970]
  402cba:	aas    
  402cbb:	(bad)  
  402cbc:	ja     0x402c99
  402cbe:	je     0x402d24
  402cc0:	fsubr  DWORD PTR [edx-0x23]
  402cc3:	clc    
  402cc4:	add    dh,bl
  402cc6:	and    DWORD PTR [esi-0x23],0x1ac86e7d
  402ccd:	ins    BYTE PTR es:[edi],dx
  402cce:	sub    eax,0xc98f02ab
  402cd3:	stos   BYTE PTR es:[edi],al
  402cd4:	ror    ch,cl
  402cd6:	sbb    BYTE PTR [ebx+edx*8],0xe6
  402cda:	sbb    eax,0xbdc13db5
  402cdf:	pop    ecx
  402ce0:	jp     0x402cd7
  402ce2:	mov    ds:0x94360268,al
  402ce7:	jmp    0xcebd:0x49dd55b4
  402cee:	enter  0x8ff,0xe0
  402cf2:	inc    ebx
  402cf3:	cmc    
  402cf4:	ss (bad) 
  402cf6:	push   eax
  402cf7:	jle    0x402d5f
  402cf9:	int    0x52
  402cfb:	fld    TBYTE PTR [eax]
  402cfd:	mov    edi,0x66961e80
  402d02:	iret   
  402d03:	pop    es
  402d04:	js     0x402d66
  402d06:	inc    ecx
  402d07:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402d08:	lods   al,BYTE PTR ds:[esi]
  402d09:	sub    eax,0x9cfecaf3
  402d0e:	xor    DWORD PTR [edi],ebp
  402d10:	out    0x30,eax
  402d12:	loopne 0x402caf
  402d14:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402d15:	stos   BYTE PTR es:[edi],al
  402d16:	or     esi,ecx
  402d18:	jp     0x402d35
  402d1a:	mov    DWORD PTR [ebp+0x1bf41f55],edi
  402d20:	je     0x402ce6
  402d22:	mov    bh,0x66
  402d24:	loopne 0x402d4c
  402d26:	cmp    eax,0x8e632990
  402d2b:	dec    ecx
  402d2c:	mov    dh,0x1d
  402d2e:	loopne 0x402cb2
  402d30:	and    edx,ebp
  402d32:	(bad)  
  402d33:	cmp    al,BYTE PTR [esi]
  402d35:	jbe    0x402cee
  402d37:	fsub   DWORD PTR [esp+ebp*1]
  402d3a:	jo     0x402d77
  402d3c:	xor    BYTE PTR [edx+ecx*2],al
  402d3f:	xor    al,0xfd
  402d41:	adc    ecx,ebx
  402d43:	xchg   esi,eax
  402d44:	call   0x5f21:0x22185792
  402d4b:	repz dec edx
  402d4d:	adc    al,0xe7
  402d4f:	mov    ebx,0xa29114e9
  402d54:	mov    bl,0xe5
  402d56:	push   edi
  402d57:	and    DWORD PTR [esi+0x347a6670],edi
  402d5d:	mov    BYTE PTR [ecx+0x34],bl
  402d60:	lahf   
  402d61:	test   BYTE PTR [edx],0x78
  402d64:	clc    
  402d65:	xchg   ebp,eax
  402d66:	test   BYTE PTR [edx],al
  402d68:	dec    edi
  402d69:	sti    
  402d6a:	push   0x3367a7a6
  402d6f:	ud2    
  402d71:	(bad)  
  402d73:	fmul   QWORD PTR [ebp+0x28]
  402d76:	add    al,0xda
  402d78:	scas   eax,DWORD PTR es:[edi]
  402d79:	sbb    ecx,DWORD PTR [edx+0xfd5143b]
  402d7f:	imul   edx,DWORD PTR [esi],0x75ca3649
  402d85:	adc    eax,0xd42efe72
  402d8a:	mov    dl,0x86
  402d8c:	pop    eax
  402d8d:	loopne 0x402ddf
  402d8f:	stc    
  402d90:	push   eax
  402d91:	in     al,dx
  402d92:	or     ecx,DWORD PTR [eax+0x31b51d51]
  402d98:	xchg   ecx,eax
  402d99:	rol    BYTE PTR [esp+eiz*4+0x2f],0xd7
  402d9e:	(bad)  
  402d9f:	ja     0x402dff
  402da1:	and    dh,dl
  402da3:	ja     0x402d75
  402da5:	jmp    FWORD PTR [ecx+0x81f56bc]
  402dab:	and    bl,BYTE PTR [ecx]
  402dad:	sub    eax,DWORD PTR [ecx+0x3dff21d4]
  402db3:	push   ss
  402db4:	ins    BYTE PTR es:[edi],dx
  402db5:	jp     0x402d9c
  402db7:	adc    eax,0xfb8124e7
  402dbc:	loop   0x402e36
  402dbe:	add    edx,esi
  402dc0:	cmp    edx,edi
  402dc2:	ja     0x4036b5
  402dc8:	push   ebx
  402dc9:	jmp    0x4030b2
  402dce:	jmp    0x4030ad
  402dd3:	mov    ecx,0xe1afe4fc
  402dd8:	ja     0x402e2b
  402dda:	push   0xffffffa6
  402ddc:	aas    
  402ddd:	xchg   ebp,eax
  402dde:	out    dx,eax
  402ddf:	sar    BYTE PTR [ecx+ebp*1],cl
  402de2:	(bad)  
  402de3:	mov    esi,0xbe70700a
  402de8:	jle    0x402e5a
  402dea:	jo     0x402dd8
  402dec:	jle    0x402e3e
  402dee:	mov    dl,0xe
  402df0:	sbb    BYTE PTR [eax],dl
  402df2:	cli    
  402df3:	mov    edi,ecx
  402df5:	data16 mov al,ah
  402df8:	xchg   DWORD PTR [edi+0x570af428],edx
  402dfe:	or     al,0x3b
  402e00:	xchg   edx,eax
  402e01:	(bad)  [edx-0x7dbdd897]
  402e07:	repnz dec esp
  402e09:	pop    ebp
  402e0a:	shr    cl,1
  402e0c:	and    esi,DWORD PTR [ebx]
  402e0e:	jmp    0x402da3
  402e10:	sub    bl,BYTE PTR [eax-0x12001a5c]
  402e16:	repnz mov bh,0x86
  402e19:	xchg   esi,eax
  402e1a:	es xchg ebp,eax
  402e1c:	icebp  
  402e1d:	push   ebp
  402e1e:	mov    ecx,0x9210aad6
  402e23:	out    dx,eax
  402e24:	jl     0x402e7a
  402e26:	sbb    DWORD PTR [edx+0x2b],esi
  402e29:	pop    edi
  402e2a:	mov    ebx,0x4250ea0f
  402e2f:	imul   esi,DWORD PTR [esi-0x9bb8676],0xf7ec44c3
  402e39:	lds    esi,FWORD PTR [esi-0x48]
  402e3c:	add    eax,0xd8d720fb
  402e41:	leave  
  402e42:	or     eax,0x733e5af7
  402e47:	and    eax,0x7c626219
  402e4c:	jmp    0x67926960
  402e51:	inc    ebx
  402e52:	jae    0x402df1
  402e54:	xchg   ebx,eax
  402e55:	test   al,0xeb
  402e57:	push   0xffffffbc
  402e59:	fcom   DWORD PTR [eax]
  402e5b:	pushf  
  402e5c:	scas   al,BYTE PTR es:[edi]
  402e5d:	adc    DWORD PTR [eax],ecx
  402e5f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402e60:	(bad)  
  402e61:	(bad)  
  402e62:	ror    DWORD PTR [edi],cl
  402e64:	and    BYTE PTR [edi+0x6],0x93
  402e68:	inc    edx
  402e69:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402e6b:	outs   dx,BYTE PTR ds:[esi]
  402e6c:	xchg   DWORD PTR [esi-0x42d3ca3d],esi
  402e72:	jo     0x402e7d
  402e74:	push   0xd9b29db2
  402e79:	ds (bad) 
  402e7b:	pop    eax
  402e7c:	ficomp WORD PTR [ecx+0x6e]
  402e7f:	hlt    
  402e80:	cmc    
  402e81:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402e82:	adc    al,0x6d
  402e84:	or     esp,DWORD PTR [ecx-0x7d]
  402e87:	inc    ecx
  402e88:	pop    es
  402e89:	mov    dl,0x81
  402e8b:	mov    esi,0x2089ce24
  402e90:	(bad)  
  402e91:	out    0x0,eax
  402e93:	(bad)  
  402e94:	lds    ebp,FWORD PTR [edx]
  402e96:	jle    0x402eed
  402e98:	aam    0xe7
  402e9a:	sti    
  402e9b:	cmp    dl,bl
  402e9d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402e9e:	imul   esp,edi,0x93d444ea
  402ea4:	ret    
  402ea5:	out    dx,al
  402ea6:	push   ebx
  402ea7:	icebp  
  402ea8:	mov    esi,0x3c85c5c9
  402ead:	ins    DWORD PTR es:[edi],dx
  402eae:	mov    ecx,0x1b906074
  402eb3:	jb     0xffc8
  402eb8:	sbb    al,0xa9
  402eba:	dec    esp
  402ebb:	push   ss
  402ebc:	add    eax,0x8b6e66bc
  402ec1:	stos   BYTE PTR es:[edi],al
  402ec2:	jnp    0x402ee2
  402ec4:	push   esi
  402ec5:	pcmpeqw mm3,QWORD PTR cs:[ecx]
  402ec9:	inc    eax
  402eca:	jmp    0xc8726ff2
  402ecf:	sahf   
  402ed0:	in     al,dx
  402ed1:	dec    esi
  402ed2:	std    
  402ed3:	cs pop ebp
  402ed5:	arpl   WORD PTR [ecx+0x73],di
  402ed8:	popf   
  402ed9:	(bad)  
  402eda:	mov    ds:0xab85c31f,eax
  402edf:	lods   eax,DWORD PTR ds:[esi]
  402ee0:	sub    al,0x4a
  402ee2:	repz sbb bl,0xc5
  402ee6:	je     0x402ef0
  402ee8:	pop    esp
  402ee9:	data16 fisttp WORD PTR [edx]
  402eec:	retf   0x91cf
  402eef:	inc    ebx
  402ef0:	sbb    BYTE PTR [ebx+0x2d247023],bh
  402ef6:	inc    eax
  402ef7:	adc    BYTE PTR ss:[edx],bl
  402efa:	and    BYTE PTR [ebx+0x50],al
  402efd:	out    dx,eax
  402efe:	fmul   st,st(4)
  402f00:	stos   DWORD PTR es:[edi],eax
  402f01:	cmp    al,0xd8
  402f03:	jno    0x402f0e
  402f05:	sbb    al,BYTE PTR [eax-0x35bf5ef3]
  402f0b:	enterw 0x8062,0x56
  402f10:	or     cl,BYTE PTR [esi]
  402f12:	dec    ebx
  402f13:	mov    BYTE PTR [ebp-0x15f0c0b],cl
  402f19:	dec    edx
  402f1a:	push   eax
  402f1b:	fidivr DWORD PTR [ecx-0x5d]
  402f1e:	push   edx
  402f1f:	ret    0x7ccf
  402f22:	cdq    
  402f23:	jmp    0x5a417137
  402f28:	scas   al,BYTE PTR es:[edi]
  402f29:	or     al,BYTE PTR [eax+0x3f]
  402f2c:	adc    eax,0x46c57977
  402f31:	je     0x402f11
  402f33:	pusha  
  402f34:	jmp    0xa07b9aa6
  402f39:	cwde   
  402f3a:	sbb    ch,BYTE PTR [edx+0x5c431c06]
  402f40:	test   eax,0xd2ae6a1c
  402f45:	imul   ecx,DWORD PTR [ebx+edx*2-0x5d],0xa3df6758
  402f4d:	outs   dx,BYTE PTR ds:[esi]
  402f4e:	xchg   ebx,eax
  402f4f:	sbb    eax,0x8f10c6a9
  402f54:	mov    ds:0x2c1021ac,al
  402f59:	jmp    0x402f80
  402f5b:	sbb    eax,0x4cd8de0d
  402f60:	xchg   DWORD PTR [esi],esi
  402f62:	adc    edi,DWORD PTR [esi+0x7544a123]
  402f68:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402f69:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402f6a:	or     al,0x5
  402f6c:	xchg   ebp,eax
  402f6d:	not    BYTE PTR [esp+eiz*4]
  402f70:	xor    edi,DWORD PTR [edi+0x66fccdee]
  402f76:	xchg   ebp,eax
  402f77:	push   ecx
  402f78:	bound  esi,QWORD PTR [esi+esi*4+0x3c]
  402f7c:	jo     0x402f17
  402f7e:	sub    cl,BYTE PTR [ebp+0x6fc767c2]
  402f84:	xor    al,0x16
  402f86:	lods   al,BYTE PTR ds:[esi]
  402f87:	or     al,0xaf
  402f89:	xchg   esi,eax
  402f8a:	cmp    edx,DWORD PTR [esi]
  402f8c:	inc    edx
  402f8d:	and    al,0xf7
  402f8f:	loop   0x402f98
  402f91:	dec    esi
  402f92:	inc    ecx
  402f93:	sbb    DWORD PTR [ebx],0xffffffff
  402f96:	call   0x63e:0x9294f249
  402f9d:	and    al,0x24
  402f9f:	push   0x554616d0
  402fa4:	adc    eax,0x407bef50
  402fa9:	inc    edi
  402fab:	nop
  402fac:	repz scas al,BYTE PTR es:[edi]
  402fae:	les    ecx,FWORD PTR [edi-0x12af78fc]
  402fb4:	popf   
  402fb5:	ds cwde 
  402fb7:	std    
  402fb8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402fb9:	pushf  
  402fba:	mov    al,ds:0x48e5cb38
  402fbf:	dec    edx
  402fc0:	cwde   
  402fc1:	cmp    DWORD PTR [edi],ebx
  402fc3:	mov    eax,ds:0x48106527
  402fc8:	jns    0x403008
  402fca:	out    dx,eax
  402fcb:	aaa    
  402fcc:	iret   
  402fcd:	jno    0x402fdc
  402fcf:	pop    edi
  402fd0:	pop    ds
  402fd1:	push   cs
  402fd2:	add    eax,0x41e0a76d
  402fd7:	imul   eax,DWORD PTR [ecx+ecx*4+0x37f07efa],0xeecfbcab
  402fe2:	cmp    BYTE PTR ds:0xcf9c5baf,dl
  402fe8:	std    
  402fe9:	popf   
  402fea:	mov    dh,0xdb
  402fec:	xor    DWORD PTR [ecx-0x2672be4f],esp
  402ff2:	sub    DWORD PTR [ecx-0x5f],esp
  402ff5:	mov    bl,0x5
  402ff7:	push   ds
  402ff8:	or     al,BYTE PTR [edx-0x5e]
  402ffb:	sbb    eax,0x320294fd
  403000:	xchg   BYTE PTR [edi],dh
  403002:	xchg   ecx,eax
  403003:	push   ebx
  403004:	(bad)  
  403005:	mov    ecx,0x945ac08
  40300a:	sbb    ch,BYTE PTR [edx]
  40300c:	sbb    DWORD PTR [esi+0x34],esi
  40300f:	leave  
  403010:	enter  0x6240,0xee
  403014:	ins    DWORD PTR es:[edi],dx
  403015:	xchg   esp,eax
  403016:	fcom   QWORD PTR [edi+0x62]
  403019:	mov    ebp,0xe89fa132
  40301e:	retf   
  40301f:	loopne 0x402fbb
  403021:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403022:	popa   
  403023:	shl    DWORD PTR [ebx+0xa],0xf5
  403027:	enter  0x75c2,0xc8
  40302b:	aad    0x90
  40302d:	xor    al,0x94
  40302f:	(bad)  
  403030:	mov    edi,DWORD PTR [esi]
  403032:	jae    0x403065
  403034:	inc    edi
  403035:	pop    ebp
  403036:	outs   dx,DWORD PTR ds:[esi]
  403037:	je     0x402fda
  403039:	lods   eax,DWORD PTR ds:[esi]
  40303a:	in     al,0xcf
  40303c:	push   edi
  40303d:	fadd   st(1),st
  40303f:	and    al,0xda
  403041:	or     al,0x62
  403043:	jae    0x4030c3
  403045:	jp     0x4030ae
  403047:	push   ebp
  403048:	mov    ebx,0x27838dc6
  40304d:	jle    0x402fef
  40304f:	idiv   BYTE PTR [edi+0x23]
  403052:	call   0x4b363862
  403057:	inc    eax
  403058:	data16 test BYTE PTR [ecx-0xe3afda1],dh
  40305f:	push   eax
  403060:	push   eax
  403061:	xor    BYTE PTR [esi+0x607413dc],al
  403067:	pop    edx
  403068:	add    DWORD PTR [edx],0x6db4acc6
  40306e:	pop    esp
  40306f:	stos   BYTE PTR es:[edi],al
  403070:	sbb    al,0x60
  403072:	push   ebp
  403073:	xor    eax,0xf13410c5
  403078:	add    BYTE PTR [ecx],0xc1
  40307b:	shl    DWORD PTR [esp+ebp*2-0x44fbb72a],0x2e
  403083:	adc    al,0xc5
  403085:	(bad)  
  403086:	pop    ds
  403087:	push   0x42
  403089:	repz sbb al,dl
  40308c:	cmp    eax,0xe882f90d
  403091:	push   eax
  403092:	cdq    
  403093:	int3   
  403094:	clc    
  403095:	add    DWORD PTR [esi+0x482e8dd3],ebp
  40309b:	fs push ecx
  40309d:	push   eax
  40309e:	nop
  40309f:	jge    0x4030dc
  4030a1:	jo     0x4030b1
  4030a3:	outs   dx,BYTE PTR ds:[esi]
  4030a4:	xchg   edi,eax
  4030a5:	sub    al,BYTE PTR [ebp-0x37f2db98]
  4030ab:	mov    ds:0x729cbe20,eax
  4030b0:	xor    al,BYTE PTR [eax]
  4030b2:	mov    eax,DWORD PTR [ebp-0x8]
  4030b5:	mov    edi,DWORD PTR [ebp-0x4]
  4030b8:	xor    edi,ecx
  4030ba:	add    edi,esi
  4030bc:	jmp    0x40339b
  4030c1:	fist   DWORD PTR [ecx+0x4b76cc16]
  4030c7:	loope  0x40307a
  4030c9:	lds    edx,FWORD PTR [esi-0x42]
  4030cc:	add    al,0x46
  4030ce:	(bad)  
  4030cf:	pop    esi
  4030d0:	jb     0x4030ce
  4030d2:	pop    ss
  4030d3:	jo     0x403145
  4030d5:	mov    esi,0x8c70707e
  4030da:	xchg   BYTE PTR [ebp+0x17a9b096],dl
  4030e0:	adc    al,0x1e
  4030e2:	and    eax,DWORD PTR [esi-0x6c]
  4030e5:	fiadd  WORD PTR [edx]
  4030e7:	adc    BYTE PTR [esi],0x63
  4030ea:	lock loopne 0x40308d
  4030ed:	repz ret 
  4030ef:	sub    dl,BYTE PTR fs:[ecx]
  4030f2:	mov    eax,0xa668876d
  4030f7:	iret   
  4030f8:	and    eax,0x9f1ec41e
  4030fd:	out    0x40,eax
  4030ff:	lock add ebp,DWORD PTR [edx]
  403102:	int3   
  403103:	push   eax
  403104:	adc    al,BYTE PTR [edi+0x2d]
  403107:	cmovne esp,DWORD PTR ds:0x97f97ad3
  40310e:	cmc    
  40310f:	js     0x40314f
  403111:	fdivr  st(7),st
  403113:	push   edx
  403114:	rcr    WORD PTR [edi],0xf4
  403118:	retf   0x8bf
  40311b:	pop    DWORD PTR [esi+eiz*1+0x1a25fcf7]
  403122:	sar    DWORD PTR [ecx],0xe4
  403125:	inc    eax
  403126:	outs   dx,DWORD PTR ds:[esi]
  403127:	dec    ebp
  403128:	sub    ax,WORD PTR [esi+edx*2+0x1a4a87c2]
  403130:	(bad)
  403133:	idiv   BYTE PTR [ecx]
  403135:	iret   
  403136:	(bad)  
  403137:	xchg   esp,eax
  403138:	xchg   ecx,eax
  403139:	add    DWORD PTR [ecx+0x1e9fe66a],ebp
  40313f:	fwait
  403140:	(bad)  
  403141:	js     0x40319c
  403143:	shl    BYTE PTR [eax],1
  403145:	dec    DWORD PTR [edi+ebx*4+0x5]
  403149:	inc    esi
  40314a:	xchg   esp,eax
  40314b:	lea    ebx,[ebx]
  40314d:	cmp    BYTE PTR [eax],0x4e
  403150:	scas   al,BYTE PTR es:[edi]
  403151:	xchg   edx,eax
  403152:	popa   
  403153:	xchg   ebx,eax
  403154:	sbb    DWORD PTR [eax+esi*2+0x43],edx
  403158:	(bad)  
  403159:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40315a:	cmp    al,0x6
  40315c:	dec    ebp
  40315d:	ficomp WORD PTR [esi-0x47f5042a]
  403163:	sub    eax,0xe7acdfba
  403168:	test   eax,0x5c05222c
  40316d:	std    
  40316e:	mov    edi,0x5aa78139
  403173:	scas   al,BYTE PTR es:[edi]
  403174:	xchg   edi,eax
  403175:	pop    esp
  403176:	(bad)  
  403177:	mov    eax,0x9d1f6bb6
  40317c:	xchg   ebx,eax
  40317d:	scas   eax,DWORD PTR es:[edi]
  40317e:	and    eax,0xc89a127f
  403183:	imul   esi,DWORD PTR [ebx],0xfffffffd
  403186:	xchg   ebp,eax
  403187:	or     eax,0x953116a6
  40318c:	cld    
  40318d:	pop    edx
  40318e:	jl     0x403145
  403190:	sub    bl,0x57
  403193:	hlt    
  403194:	dec    esi
  403195:	sbb    al,bl
  403197:	pusha  
  403198:	or     ebx,edi
  40319a:	es retf 0xe7c7
  40319e:	(bad)  
  40319f:	leave  
  4031a0:	push   ebx
  4031a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4031a2:	(bad)  
  4031a3:	cld    
  4031a4:	jbe    0x403147
  4031a6:	or     DWORD PTR [esi-0x1a3cc500],0xffffff88
  4031ad:	out    0x77,eax
  4031af:	daa    
  4031b0:	pushf  
  4031b1:	repz mul BYTE PTR [ebx]
  4031b4:	hlt    
  4031b5:	add    al,0x8a
  4031b7:	jo     0x403198
  4031b9:	sar    BYTE PTR [ecx],1
  4031bb:	test   al,0x2c
  4031bd:	sub    DWORD PTR [ecx+0x7a],0xffffffda
  4031c1:	shl    DWORD PTR [esi-0x13efaf8e],1
  4031c7:	push   ebp
  4031c8:	mov    eax,0xdc75ae0
  4031cd:	mov    edx,0x64398af0
  4031d2:	sub    al,0x2c
  4031d4:	cs cmp ax,0x3f1b
  4031d9:	shl    DWORD PTR [ecx],1
  4031db:	ds out 0x70,al
  4031de:	fstp   TBYTE PTR [ebx]
  4031e0:	int    0xa7
  4031e2:	xchg   ebx,eax
  4031e3:	call   0x77e0:0x3333f1bc
  4031ea:	mov    ecx,0xf66b05ed
  4031ef:	rcr    dl,1
  4031f1:	(bad)  
  4031f2:	xor    DWORD PTR [ebx-0x5c0589c3],edi
  4031f8:	outs   dx,DWORD PTR ds:[esi]
  4031f9:	retf   0x7b63
  4031fc:	add    eax,0x53894b08
  403201:	sbb    DWORD PTR [esi+0x74],0xfffffff3
  403205:	jg     0x403268
  403207:	jo     0x40327c
  403209:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40320a:	inc    eax
  40320b:	jnp    0x4031a8
  40320d:	xchg   BYTE PTR [edi-0x466c73a3],ch
  403213:	lods   al,BYTE PTR ds:[esi]
  403214:	lods   al,BYTE PTR ds:[esi]
  403215:	lds    edi,FWORD PTR [edi+0x29]
  403218:	in     al,dx
  403219:	and    BYTE PTR [esi+0x3f71b2db],al
  40321f:	sub    BYTE PTR [ecx-0x4c],al
  403222:	pusha  
  403223:	pop    edx
  403224:	mov    ebp,0x4d8acc77
  403229:	test   eax,0x26091f50
  40322e:	or     eax,0x9ed40c34
  403233:	and    esp,eax
  403235:	jbe    0x403220
  403237:	fcom   st(7)
  403239:	add    DWORD PTR [eax-0x5],ebp
  40323c:	or     ebp,edx
  40323e:	dec    ebp
  40323f:	aam    0xfd
  403241:	stos   BYTE PTR es:[edi],al
  403242:	gs jecxz 0x403248
  403245:	int3   
  403246:	push   es
  403247:	and    bl,0x9d
  40324a:	xchg   edi,eax
  40324b:	retf   
  40324c:	xor    esp,ecx
  40324e:	and    eax,0xa0d72a3e
  403253:	sub    bh,BYTE PTR [ebp-0x63]
  403256:	xchg   DWORD PTR [esi-0x3d59f6c8],ecx
  40325c:	arpl   WORD PTR [edx+0x5],di
  40325f:	lea    esp,[edi+0x75348cf3]
  403265:	not    BYTE PTR [ebp-0x51717309]
  40326b:	ss add eax,0xf0e411c8
  403271:	jnp    0x403284
  403273:	jg     0x4032da
  403275:	repnz test al,0x64
  403278:	fld    DWORD PTR [ebx+0x62]
  40327b:	fs dec ebx
  40327d:	jp     0x40324d
  40327f:	test   al,0x7
  403281:	pop    ecx
  403282:	mov    al,ds:0xe89f32ae
  403287:	and    eax,0x91c8a6f9
  40328c:	and    ah,bh
  40328e:	adc    ah,BYTE PTR [esi]
  403290:	outs   dx,BYTE PTR es:[esi]
  403292:	not    BYTE PTR [ebx+ebx*4+0x38d8c76c]
  403299:	cli    
  40329a:	shl    DWORD PTR [eax-0xa],0xa1
  40329e:	inc    eax
  40329f:	je     0x40331d
  4032a1:	mov    ds:0x578be26a,al
  4032a6:	mov    DWORD PTR [esp+ecx*4],edx
  4032a9:	fimul  WORD PTR [ecx]
  4032ab:	outs   dx,DWORD PTR ds:[esi]
  4032ac:	pop    ebx
  4032ad:	out    dx,al
  4032ae:	sbb    ah,dh
  4032b0:	or     eax,0x505ed85f
  4032b5:	xor    DWORD PTR [esp+ebx*1],edi
  4032b8:	pop    ecx
  4032b9:	stc    
  4032ba:	sub    BYTE PTR [ebp-0x41eeeb78],bl
  4032c0:	idiv   BYTE PTR [ebp+0x6c9022ec]
  4032c6:	sti    
  4032c7:	push   ds
  4032c8:	pop    edx
  4032c9:	jge    0x403336
  4032cb:	popf   
  4032cc:	xlat   BYTE PTR ds:[ebx]
  4032cd:	stc    
  4032ce:	and    al,0xa4
  4032d0:	pushf  
  4032d1:	out    0xf0,al
  4032d3:	or     DWORD PTR [ebx],esp
  4032d5:	add    eax,DWORD PTR ds:0x98025a0c
  4032db:	clc    
  4032dc:	mov    dl,BYTE PTR [eax]
  4032de:	das    
  4032df:	mov    al,0x7b
  4032e1:	stc    
  4032e2:	lods   eax,DWORD PTR ds:[esi]
  4032e3:	jo     0x40332a
  4032e5:	fs pop esi
  4032e7:	inc    edx
  4032e8:	lods   al,BYTE PTR ds:[esi]
  4032e9:	mov    ch,BYTE PTR [eax+0x29]
  4032ec:	dec    ebx
  4032ed:	test   ax,0x6ecc
  4032f1:	in     eax,dx
  4032f2:	(bad)  
  4032f3:	in     al,dx
  4032f4:	or     ebp,DWORD PTR [ecx]
  4032f6:	outs   dx,DWORD PTR ds:[esi]
  4032f7:	loopne 0x403350
  4032f9:	jne    0x4032af
  4032fb:	cmp    DWORD PTR ds:0x1a0b9c6c,esp
  403301:	pop    es
  403302:	loopne 0x40337a
  403304:	or     eax,DWORD PTR [edx]
  403306:	cdq    
  403307:	int    0x32
  403309:	inc    ebx
  40330a:	adc    DWORD PTR [edx+edi*4-0x2a0eaec4],edi
  403311:	jmp    0x336b:0x5f56d7d
  403318:	fisttp DWORD PTR [eax]
  40331a:	inc    ecx
  40331b:	pop    esp
  40331c:	inc    ebx
  40331d:	push   edx
  40331e:	in     al,dx
  40331f:	pop    ss
  403320:	cmp    BYTE PTR [eax-0x2c],0xde
  403324:	scas   al,BYTE PTR es:[edi]
  403325:	push   ebp
  403326:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403327:	xchg   ebx,eax
  403328:	ins    BYTE PTR es:[edi],dx
  403329:	rcl    BYTE PTR [ebp-0x679278a2],0xe8
  403330:	mov    ebx,0x6d6faac6
  403335:	in     al,0xd0
  403337:	test   DWORD PTR [edi-0x5e],eax
  40333a:	ja     0x403317
  40333c:	test   eax,0x96f7f995
  403341:	test   eax,0x77813163
  403346:	fcomp  DWORD PTR [edi]
  403348:	adc    ah,al
  40334a:	stos   DWORD PTR es:[edi],eax
  40334b:	(bad)  [ecx]
  40334d:	xor    BYTE PTR [edx],cl
  40334f:	xchg   ebp,eax
  403350:	pop    es
  403351:	sqrtps xmm1,XMMWORD PTR [eax]
  403354:	inc    edx
  403355:	push   eax
  403356:	pop    ebx
  403357:	ss jle 0x403367
  40335a:	jnp    0x4033bf
  40335c:	sbb    eax,0xe4cf6971
  403361:	jae    0x4032f7
  403363:	aad    0x68
  403365:	cmp    ah,dl
  403367:	(bad)  
  403368:	pop    edx
  403369:	loope  0x403378
  40336b:	add    eax,0x315a8d5e
  403370:	mov    BYTE PTR [eax],ah
  403372:	repz mov esi,0xb6e555ad
  403378:	pop    esp
  403379:	push   esi
  40337a:	ss ss pop edi
  40337d:	inc    edx
  40337e:	ds push edi
  403380:	sbb    ch,BYTE PTR [eax+0x7af7d0ea]
  403386:	adc    BYTE PTR [eax-0x6619e2a5],bh
  40338c:	fbld   TBYTE PTR [ecx-0x18578be7]
  403392:	add    bl,BYTE PTR [edi+edx*4+0x39e62611]
  403399:	cld    
  40339a:	jmp    0xf48a92a
  40339f:	scas   eax,DWORD PTR es:[edi]
  4033a0:	cli    
  4033a1:	mov    ebx,DWORD PTR [ebp+0xc]
  4033a4:	xor    eax,ecx
  4033a6:	add    eax,edx
  4033a8:	jmp    0x403687
  4033ad:	jecxz  0x4033d3
  4033af:	fcom   DWORD PTR [edx]
  4033b1:	out    0xd2,eax
  4033b3:	icebp  
  4033b4:	icebp  
  4033b5:	pop    es
  4033b6:	xchg   edx,eax
  4033b7:	aaa    
  4033b8:	aas    
  4033b9:	js     0x4033c2
  4033bb:	mov    bh,0x3a
  4033be:	adc    al,0x70
  4033c0:	jo     0x403380
  4033c2:	jle    0x403434
  4033c4:	jo     0x403360
  4033c6:	jmp    0x403430
  4033c8:	jecxz  0x403432
  4033ca:	dec    edx
  4033cb:	stos   BYTE PTR es:[edi],al
  4033cc:	jno    0x40343b
  4033ce:	enter  0x8c1c,0x9
  4033d2:	in     eax,dx
  4033d3:	jle    0x403429
  4033d5:	cmp    eax,0x7c17db49
  4033da:	push   ecx
  4033db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4033dc:	loopne 0x4033b9
  4033de:	scas   al,BYTE PTR es:[edi]
  4033df:	lea    edx,[edx+0x27]
  4033e2:	and    al,0x67
  4033e4:	mov    cs,WORD PTR [eax+0x1d03af86]
  4033ea:	or     BYTE PTR [ebx+0x5617d769],dh
  4033f0:	es jg  0x403431
  4033f3:	pop    ecx
  4033f4:	sub    al,0x2d
  4033f6:	or     esp,DWORD PTR [esi-0x53b14eb2]
  4033fc:	(bad)  
  4033fd:	pushf  
  4033fe:	popf   
  4033ff:	xchg   ebp,eax
  403400:	stc    
  403401:	shl    BYTE PTR [ecx],cl
  403403:	inc    edi
  403404:	sub    edi,DWORD PTR [eax+eax*8+0x6c6d36e6]
  40340b:	inc    edx
  40340c:	sub    BYTE PTR [ebx+0x419c301d],al
  403412:	mul    DWORD PTR [esi]
  403414:	fstp   QWORD PTR [ecx+0x20]
  403417:	outs   dx,DWORD PTR ds:[esi]
  403418:	sbb    eax,ecx
  40341a:	ficom  DWORD PTR [ebp-0x75cee182]
  403420:	cmc    
  403421:	dec    ebp
  403422:	push   cs
  403423:	push   eax
  403424:	enter  0x5ed4,0xef
  403428:	push   ebx
  403429:	cmp    dl,dl
  40342b:	ins    BYTE PTR es:[edi],dx
  40342c:	shr    BYTE PTR [esi],cl
  40342e:	inc    ebx
  40342f:	outs   dx,DWORD PTR ds:[esi]
  403430:	imul   cl
  403432:	sahf   
  403433:	sbb    esi,eax
  403435:	test   eax,0x54df8813
  40343a:	sub    BYTE PTR [ecx+ecx*4],bh
  40343d:	or     DWORD PTR [esi-0xf31c10a],ecx
  403443:	cdq    
  403444:	mov    ebp,0x44cb50b2
  403449:	imul   edx,DWORD PTR [esi-0x24],0x88c81e4d
  403450:	mov    ch,0xe3
  403452:	pop    ebx
  403453:	lods   eax,DWORD PTR ds:[esi]
  403454:	or     al,0x5f
  403456:	sahf   
  403457:	push   ebx
  403458:	mov    edx,0xbc6eac89
  40345d:	clc    
  40345e:	in     al,dx
  40345f:	(bad)  
  403460:	sbb    eax,0xbd24fbf8
  403465:	sub    ax,sp
  403468:	cli    
  403469:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40346a:	shl    DWORD PTR [esi+0x684fdc1e],0xed
  403471:	pop    esi
  403472:	cs pop es
  403474:	bound  eax,QWORD PTR [edi-0x6a21b1f8]
  40347a:	mov    ebx,0x4b4ac3b7
  40347f:	xor    BYTE PTR [ebp-0x69],dh
  403482:	sti    
  403483:	dec    ebx
  403484:	sbb    al,0x5e
  403486:	jmp    0xe817f158
  40348b:	popf   
  40348c:	add    ch,BYTE PTR [ebp+0x1dfef4fa]
  403492:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403493:	cld    
  403494:	cmp    BYTE PTR [ecx],dl
  403496:	ror    dh,1
  403498:	push   esp
  403499:	mov    edi,0x32a26aa3
  40349e:	jmp    0x2db:0x3b2849e9
  4034a5:	jo     0x403526
  4034a7:	or     eax,0x823ba7ff
  4034ac:	test   bh,cl
  4034ae:	addr16 mov bh,0x51
  4034b1:	and    BYTE PTR ds:0xb1e20e79,dl
  4034b7:	dec    eax
  4034b8:	jne    0x40343b
  4034ba:	or     eax,0x654b289c
  4034bf:	mov    eax,ds:0xf165f330
  4034c4:	bound  esp,QWORD PTR [esp+eax*4+0x2a]
  4034c8:	or     ebp,DWORD PTR [esi-0x38]
  4034cb:	iret   
  4034cc:	in     eax,dx
  4034cd:	out    0x5f,eax
  4034cf:	cwde   
  4034d0:	adc    al,0xa6
  4034d2:	in     al,0xc1
  4034d4:	cs jl  0x403476
  4034d7:	jae    0x4034dd
  4034d9:	pop    ds
  4034da:	xor    BYTE PTR [esi-0x51],bh
  4034dd:	cs jae 0x4034d5
  4034e0:	mov    ebx,0xcb2bee18
  4034e5:	shr    DWORD PTR [ecx+0x3e],1
  4034e8:	sti    
  4034e9:	stc    
  4034ea:	dec    edx
  4034eb:	push   eax
  4034ec:	ds push cs
  4034ee:	cmp    dh,BYTE PTR [edi-0x7a]
  4034f1:	loope  0x40355f
  4034f3:	jge    0x4034ce
  4034f5:	or     BYTE PTR [edx-0x29],bl
  4034f8:	adc    eax,0xfe15c7f6
  4034fd:	(bad)  
  4034fe:	lock out dx,eax
  403500:	stc    
  403501:	arpl   WORD PTR [edi-0xacdee05],ax
  403507:	dec    edx
  403508:	aam    0xdd
  40350a:	or     DWORD PTR [ecx+0x19fd6773],edi
  403510:	mov    al,0xf2
  403512:	inc    ecx
  403513:	adc    eax,0x19cd3509
  403518:	call   0xc12a:0xf81fefe6
  40351f:	and    al,0x30
  403521:	sahf   
  403522:	retf   0x38cf
  403525:	leave  
  403526:	outs   dx,BYTE PTR ds:[esi]
  403527:	retf   0x3dd6
  40352a:	aaa    
  40352b:	fadd   DWORD PTR [ebp+0x3f]
  40352e:	icebp  
  40352f:	jb     0x403535
  403531:	scas   eax,DWORD PTR es:[edi]
  403532:	mov    edx,0x7341c365
  403537:	(bad)  
  403539:	in     eax,0xc6
  40353b:	test   BYTE PTR [esp+eax*8],ah
  40353e:	or     ecx,DWORD PTR [edx+0x67ae3b9e]
  403544:	imul   ebp,DWORD PTR [edx+0x1601c05a],0xffffffb0
  40354b:	cmp    eax,0xb2493e34
  403550:	sbb    edi,DWORD PTR ds:[eax+0xd]
  403554:	xor    BYTE PTR ds:0x65698459,bl
  40355a:	jmp    0x4034fa
  40355c:	and    BYTE PTR [edi],ch
  40355e:	js     0x4034f1
  403560:	in     eax,dx
  403561:	and    DWORD PTR [ebp-0x3f871f07],edi
  403567:	xor    eax,0x80852a7f
  40356c:	adc    al,0x7a
  40356e:	push   es
  40356f:	addr16 pop eax
  403571:	(bad)  
  403573:	add    ah,BYTE PTR [eax-0x60e0161f]
  403579:	inc    edi
  40357a:	ret    0xf7a9
  40357d:	(bad)  
  40357e:	sti    
  40357f:	aas    
  403580:	imul   edx,DWORD PTR ds:0xd798e4a3,0xfffffffb
  403587:	adc    eax,DWORD PTR [edx+0x12]
  40358a:	ret    
  40358b:	nop
  40358c:	and    DWORD PTR [ebx],esi
  40358e:	jmp    0x57cc7215
  403593:	ins    BYTE PTR es:[edi],dx
  403594:	into   
  403595:	cwde   
  403596:	inc    eax
  403597:	daa    
  403598:	or     DWORD PTR [edi+0x43280bf8],0xffffffc7
  40359f:	outs   dx,BYTE PTR ds:[esi]
  4035a0:	das    
  4035a1:	dec    ebp
  4035a2:	jge    0x403608
  4035a4:	mov    dh,0x6f
  4035a6:	in     al,dx
  4035a7:	mov    bl,0x37
  4035a9:	ret    0xb5a4
  4035ac:	pop    esp
  4035ad:	lock mov DWORD PTR [ebx+0x79c36f7b],edx
  4035b4:	mov    DWORD PTR [esi+ebp*8-0x52d91c57],esi
  4035bb:	in     eax,dx
  4035bc:	cld    
  4035bd:	stos   DWORD PTR es:[edi],eax
  4035be:	dec    edx
  4035bf:	xchg   dh,dh
  4035c1:	sub    edi,DWORD PTR [ecx-0xd]
  4035c4:	adc    al,0x2c
  4035c6:	mov    ds:0x76f00a7e,al
  4035cb:	lahf   
  4035cc:	sahf   
  4035cd:	sbb    BYTE PTR [eax-0x7e],0x0
  4035d1:	or     ecx,DWORD PTR [esi]
  4035d3:	stc    
  4035d4:	adc    al,0x9a
  4035d6:	xchg   ebx,eax
  4035d7:	cmp    al,0x4b
  4035d9:	sub    ch,BYTE PTR [esi]
  4035db:	loopne 0x4035f3
  4035dd:	push   ss
  4035de:	fdivr  DWORD PTR [edi]
  4035e0:	mov    ah,0x37
  4035e2:	mov    ds:0x4e75ee27,al
  4035e7:	sbb    ch,BYTE PTR [ebx-0x34]
  4035ea:	ss jns 0x403656
  4035ed:	pop    ebp
  4035ee:	in     al,dx
  4035ef:	fild   WORD PTR [esi]
  4035f1:	sbb    edi,DWORD PTR [ebx+0x41eb6a8a]
  4035f7:	push   esi
  4035f8:	das    
  4035f9:	or     al,0xca
  4035fb:	pop    ebx
  4035fc:	push   ebp
  4035fd:	push   eax
  4035fe:	into   
  4035ff:	jnp    0x40363e
  403601:	sub    eax,0xaa74d5ec
  403606:	jbe    0x403621
  403608:	rcl    BYTE PTR [edx],cl
  40360a:	push   ebx
  40360b:	mov    dh,0xce
  40360d:	loopne 0x403594
  40360f:	std    
  403610:	fs jae 0x40365b
  403613:	mul    BYTE PTR [edx-0x6141606d]
  403619:	xor    al,0x0
  40361b:	jecxz  0x403615
  40361d:	imul   ebx,esi,0x8c45fe6e
  403623:	sbb    al,0x5a
  403625:	inc    edx
  403626:	ss and BYTE PTR ds:[ebx+0x49],cl
  40362b:	sbb    edx,esp
  40362d:	jmp    0x4035f9
  40362f:	sbb    BYTE PTR ds:0xd1cf77fb,dh
  403635:	jl     0x40360b
  403637:	push   0xffffff98
  403639:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40363a:	std    
  40363b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40363c:	inc    eax
  40363d:	mov    dh,0x84
  40363f:	addr16 fs or bl,bh
  403643:	outs   dx,DWORD PTR ds:[esi]
  403644:	adc    BYTE PTR [edx+0x7b0e6302],dh
  40364a:	push   es
  40364b:	or     al,0x2d
  40364d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40364e:	ja     0x4036bd
  403650:	fmul   DWORD PTR [esi-0x5c]
  403653:	and    eax,0x9c30e672
  403658:	aad    0xd6
  40365a:	fnstenv [ebp-0x5c]
  40365d:	pop    ss
  40365e:	adc    eax,0xa779ed23
  403663:	mov    DWORD PTR [eax-0x1b],esi
  403666:	fimul  WORD PTR [esi*1-0x4295ebbb]
  40366d:	iret   
  40366e:	adc    DWORD PTR [eax+0x76],eax
  403671:	ss aas 
  403673:	mov    BYTE PTR [ecx-0x61],ch
  403676:	jno    0x403660
  403678:	jno    0x40369b
  40367a:	or     BYTE PTR [ebp-0x5bc8239],bh
  403680:	xchg   ecx,eax
  403681:	xor    BYTE PTR [edi],bl
  403683:	sbb    eax,0x8a7d774c
  403688:	test   BYTE PTR [ebx],al
  40368a:	pushf  
  40368b:	jb     0x4036bf
  40368d:	add    BYTE PTR [eax+0x458b3704],cl
  403693:	cld    
  403694:	xor    eax,ecx
  403696:	lea    edx,[edx+eax*1+0x32729c]
  40369d:	mov    eax,DWORD PTR [ebp-0x4]
  4036a0:	xor    eax,ecx
  4036a2:	mov    esi,0xffcd8d64
  4036a7:	sub    esi,eax
  4036a9:	add    esi,DWORD PTR [ebp+0x10]
  4036ac:	cmp    edx,esi
  4036ae:	jbe    0x4030ad
  4036b4:	pop    ebx
  4036b5:	mov    eax,0xf89c8530
  4036ba:	pop    edi
  4036bb:	pop    esi
  4036bc:	leave  
  4036bd:	ret    0xc
  4036c0:	push   ebp
  4036c1:	mov    ebp,esp
  4036c3:	sub    esp,0x58
  4036c6:	mov    DWORD PTR ds:0x42fced,0x17
  4036d0:	cmp    DWORD PTR ds:0x42fced,0x0
  4036d7:	je     0x40372c
  4036dd:	cmp    DWORD PTR ds:0x42fced,0x7
  4036e4:	jne    0x4036fc
  4036ea:	push   0x0
  4036ec:	push   0x25f8
  4036f1:	push   0x8523
  4036f6:	call   DWORD PTR ds:0x42e2d7
  4036fc:	cmp    DWORD PTR ds:0x42fced,0x8
  403703:	jne    0x403717
  403709:	xor    eax,eax
  40370b:	or     eax,DWORD PTR ds:0x42fced
  403711:	dec    eax
  403712:	mov    ds:0x42fced,eax
  403717:	mov    eax,ds:0x42fced
  40371c:	dec    eax
  40371d:	mov    ds:0x42fced,eax
  403722:	jmp    0x4036d0
  403727:	adc    eax,0xdf
  40372c:	mov    ecx,DWORD PTR [ebp+0x8]
  40372f:	add    DWORD PTR ds:0x42e6f3,0x693e
  403739:	mov    eax,0x8a3e
  40373e:	adc    DWORD PTR ds:0x42e6f7,0x5ea2
  403748:	xor    ax,WORD PTR [ecx+0x20]
  40374c:	adc    DWORD PTR ds:0x42fd0d,ecx
  403752:	mov    ecx,0x3b04
  403757:	and    DWORD PTR ds:0x42e713,0x42e11c
  403761:	add    ax,cx
  403764:	mov    DWORD PTR ds:0x42fd7a,0x1b71
  40376e:	movzx  eax,ax
  403771:	mov    DWORD PTR [ebp-0xc],eax
  403774:	or     DWORD PTR ds:0x42e124,0x7677
  40377e:	mov    BYTE PTR [ebp-0x1],0x7f
  403782:	not    ecx
  403784:	lea    eax,[ebp-0x1]
  403787:	mov    DWORD PTR [ebp-0x10],eax
  40378a:	or     DWORD PTR ds:0x42e70f,ecx
  403790:	jmp    0x403af0
  403795:	out    0x52,eax
  403797:	out    0x78,al
  403799:	jno    0x40374f
  40379b:	in     eax,0x71
  40379d:	or     BYTE PTR [edx+0x68],bl
  4037a0:	and    DWORD PTR [ecx],esp
  4037a2:	mov    DWORD PTR [esi+0x70117872],edx
  4037a8:	jo     0x4037e7
  4037aa:	jge    0x40381c
  4037ac:	jo     0x40378b
  4037ae:	fdivr  st,st(2)
  4037b0:	dec    esp
  4037b1:	and    DWORD PTR ds:0xb9d2b00e,0xe
  4037b8:	push   ecx
  4037b9:	fistp  WORD PTR [eax+0x61]
  4037bc:	aad    0xfe
  4037be:	ficomp WORD PTR [edi-0x312435a1]
  4037c4:	ret    0x6eb
  4037c7:	pminub mm7,mm3
  4037ca:	repnz into 
  4037cc:	push   edx
  4037cd:	push   cs
  4037ce:	sbb    edi,DWORD PTR [edi+0x50]
  4037d1:	mov    bh,0xae
  4037d3:	inc    ecx
  4037d4:	xchg   DWORD PTR [edx+0x7e],edx
  4037d7:	lods   eax,DWORD PTR ds:[esi]
  4037d8:	idiv   BYTE PTR [edi]
  4037da:	mov    eax,0x701239b1
  4037df:	pop    esi
  4037e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4037e1:	jle    0x4037aa
  4037e3:	inc    ecx
  4037e4:	iret   
  4037e5:	inc    ebx
  4037e6:	and    ebp,DWORD PTR [esi]
  4037e8:	or     BYTE PTR [ebp+0x5f9c0aca],dl
  4037ee:	pop    ebp
  4037f0:	push   ebx
  4037f1:	lea    edx,[eax+esi*4+0x1c]
  4037f5:	arpl   sp,di
  4037f7:	and    eax,0x3b59bb15
  4037fc:	mov    esp,0x9e5740d0
  403801:	ins    DWORD PTR es:[edi],dx
  403802:	mov    dl,0x54
  403804:	cmp    edi,DWORD PTR [ebp-0x4c22da08]
  40380a:	sbb    esi,esp
  40380c:	das    
  40380d:	hlt    
  40380e:	or     DWORD PTR [esi-0xa0b59c5],ecx
  403814:	repnz sbb bh,BYTE PTR [esi+0x1c5518ca]
  40381b:	pop    eax
  40381c:	xchg   esp,eax
  40381d:	dec    ecx
  40381e:	(bad)  
  40381f:	mov    eax,0x37c1878d
  403824:	dec    ecx
  403825:	daa    
  403826:	hlt    
  403827:	xor    al,BYTE PTR [edx-0x65bdfe17]
  40382d:	std    
  40382e:	imul   esi,DWORD PTR [eax+eax*2-0x60],0xffffffc7
  403833:	xchg   ebx,eax
  403834:	adc    cl,BYTE PTR [esi+0xa]
  403837:	cmp    al,0x70
  403839:	std    
  40383a:	adc    DWORD PTR [esi],ebx
  40383c:	mov    ds:0xbf15dd81,eax
  403841:	in     al,dx
  403842:	mov    ah,BYTE PTR [esp+ebx*8-0x6f]
  403846:	js     0x4037e0
  403848:	add    bl,al
  40384a:	jl     0x40383f
  40384c:	sar    BYTE PTR [esi-0x48f74709],cl
  403852:	dec    esi
  403853:	mov    edi,0x98988c68
  403858:	xchg   ecx,eax
  403859:	dec    edx
  40385a:	pop    ebp
  40385b:	dec    eax
  40385c:	add    DWORD PTR [edx-0x2a],ecx
  40385f:	retf   
  403860:	push   eax
  403861:	iret   
  403862:	cmp    BYTE PTR [ebp+0xe],al
  403865:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403866:	dec    esp
  403867:	(bad)  
  403868:	sub    BYTE PTR fs:[ebx-0x5],0x8f
  40386d:	js     0x4037f4
  40386f:	iret   
  403870:	test   al,0x61
  403872:	outs   dx,DWORD PTR ds:[esi]
  403873:	test   al,0xd4
  403875:	mov    esi,0x23406177
  40387b:	pop    ecx
  40387c:	or     eax,DWORD PTR [ecx-0x53]
  40387f:	mov    ds:0xe2b3711b,eax
  403884:	arpl   WORD PTR [esi-0x7],bp
  403887:	outs   dx,BYTE PTR ds:[esi]
  403888:	inc    esp
  403889:	(bad)  
  40388b:	sub    edx,esi
  40388d:	fisttp WORD PTR [ebp+0x7a]
  403890:	rcl    BYTE PTR [esp+eiz*2],0xe
  403894:	stos   DWORD PTR es:[edi],eax
  403895:	jmp    0xf0d8:0x40d50d34
  40389c:	inc    ecx
  40389d:	ins    DWORD PTR es:[edi],dx
  40389e:	lock loope 0x40388a
  4038a1:	dec    esi
  4038a2:	dec    ecx
  4038a3:	lahf   
  4038a4:	and    edi,DWORD PTR [esi+edi*4+0x5b]
  4038a8:	ja     0x403875
  4038aa:	dec    ebx
  4038ab:	stc    
  4038ac:	adc    al,0xb4
  4038ae:	push   es
  4038af:	fld    QWORD PTR [ebp-0x51]
  4038b3:	pop    ecx
  4038b4:	or     BYTE PTR [ebx],bl
  4038b6:	jmp    FWORD PTR [ebx+ebx*8+0x5d109e7e]
  4038bd:	pop    esp
  4038be:	mov    al,ds:0x9422ec00
  4038c3:	popf   
  4038c4:	in     al,0x4d
  4038c6:	(bad)  
  4038c7:	pop    esp
  4038c8:	xchg   ch,ch
  4038ca:	mov    ebx,0xe3653b34
  4038cf:	jl     0x40393d
  4038d1:	sbb    esi,0x32
  4038d4:	test   esi,0x27b69295
  4038da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4038db:	mov    ebp,0x2d183798
  4038e0:	add    al,0x5e
  4038e2:	sbb    BYTE PTR [eax-0xd],ch
  4038e5:	je     0x40388c
  4038e7:	ins    DWORD PTR es:[edi],dx
  4038e8:	shl    DWORD PTR [edx],0x3b
  4038eb:	sub    dh,BYTE PTR [esi+0x62ca6c14]
  4038f1:	mov    edi,0x25d62256
  4038f6:	imul   edx,DWORD PTR [edi],0x35456a1
  4038fc:	jmp    0xdfe6dc6c
  403901:	mov    dh,0xd3
  403903:	cdq    
  403904:	rcl    DWORD PTR [edi],1
  403906:	ja     0x4038e6
  403908:	add    BYTE PTR [edi],0xe8
  40390b:	int3   
  40390c:	loop   0x4038d9
  40390e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40390f:	add    ah,BYTE PTR [edi-0x79126bd8]
  403915:	pop    edx
  403916:	mov    WORD PTR [edi+0x7492a6a],ds
  40391c:	sub    BYTE PTR [edi],bh
  40391e:	lea    ebp,ds:0xb773b039
  403924:	inc    ebx
  403925:	gs int 0xa
  403928:	mov    al,0xfe
  40392a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40392b:	adc    eax,0x809fecbe
  403930:	sar    eax,cl
  403932:	pop    ds
  403933:	test   BYTE PTR [esi],bl
  403935:	push   0x14
  403937:	jge    0x403939
  403939:	or     ebp,DWORD PTR [ebx]
  40393b:	call   FWORD PTR ds:0x47843f7a
  403941:	fwait
  403942:	test   DWORD PTR ds:0x47b7f2e7,ebx
  403948:	int3   
  403949:	fnsave [esi+0x3f]
  40394c:	pop    ebx
  40394d:	fcmovne st,st(3)
  40394f:	cmp    eax,0xc6ee216a
  403954:	std    
  403955:	adc    DWORD PTR [ebx+0x17ca843],ebx
  40395b:	jle    0x4039ba
  40395d:	call   0xb1a8:0x21a648da
  403964:	or     BYTE PTR ds:[ecx-0x20269995],dh
  40396b:	xlat   BYTE PTR ds:[ebx]
  40396c:	loope  0x4039a3
  40396e:	lock stos BYTE PTR es:[edi],al
  403970:	mov    ch,0x51
  403972:	jp     0x4039b5
  403974:	xor    eax,0xf727ca47
  403979:	jmp    0xf5d50b73
  40397e:	in     eax,0x2d
  403980:	mov    bl,0x35
  403982:	push   ds
  403983:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403984:	adc    DWORD PTR [edx-0x6a],0xbec768d4
  40398b:	cmp    BYTE PTR [ecx],0xd5
  40398e:	mov    esi,0x5db659b2
  403993:	fist   WORD PTR [esi+0x4d1fa8c3]
  403999:	cli    
  40399a:	or     ecx,DWORD PTR [ebp-0x5f]
  40399d:	mov    ds:0x6dae22b3,al
  4039a2:	xchg   ch,al
  4039a4:	sti    
  4039a5:	pop    ecx
  4039a6:	(bad)  
  4039a7:	mov    edi,0xf784ae75
  4039ac:	inc    esi
  4039ad:	lock (bad) 
  4039af:	fsub   QWORD PTR [edi-0x38]
  4039b2:	push   esp
  4039b3:	cmp    eax,0xc88b2e4a
  4039b8:	jbe    0x40398b
  4039ba:	stos   BYTE PTR es:[edi],al
  4039bb:	aaa    
  4039bc:	retf   0xf61c
  4039bf:	push   ebx
  4039c0:	mov    al,0x6c
  4039c2:	mov    ds:0x2dfcf818,eax
  4039c7:	fild   DWORD PTR [esi+0x70ee7175]
  4039cd:	adc    BYTE PTR [ebx+0x1428bcbc],dl
  4039d3:	dec    ecx
  4039d4:	or     DWORD PTR [ecx+0x2d0ec2d1],esi
  4039da:	jne    0x4039f0
  4039dc:	test   al,0x43
  4039de:	sahf   
  4039df:	repz std 
  4039e1:	scas   al,BYTE PTR es:[edi]
  4039e2:	adc    dh,BYTE PTR [ecx+0x2dde0ca0]
  4039e8:	stos   DWORD PTR es:[edi],eax
  4039e9:	(bad)  
  4039ea:	in     eax,dx
  4039eb:	add    eax,0x33f9d56e
  4039f0:	xor    BYTE PTR [esi],dh
  4039f2:	dec    eax
  4039f3:	inc    edi
  4039f4:	in     al,0xd6
  4039f6:	adc    ah,BYTE PTR [esi-0x21]
  4039f9:	fwait
  4039fa:	stos   BYTE PTR es:[edi],al
  4039fb:	dec    ecx
  4039fc:	stos   DWORD PTR es:[edi],eax
  4039fd:	xchg   esi,eax
  4039fe:	pushf  
  4039ff:	fnstcw WORD PTR [edi+0x3d55697d]
  403a05:	pop    ebp
  403a06:	pop    edx
  403a07:	test   ch,bh
  403a09:	add    cl,0xfa
  403a0c:	popa   
  403a0d:	clc    
  403a0e:	fld    DWORD PTR [ebx-0x6f]
  403a11:	and    al,0x79
  403a13:	outs   dx,DWORD PTR ds:[esi]
  403a14:	outs   dx,DWORD PTR ds:[esi]
  403a15:	mov    ds:0x28f87e55,eax
  403a1a:	xor    DWORD PTR [edx-0x12fce104],esi
  403a20:	adc    dl,ch
  403a22:	push   cs
  403a23:	mov    ds:0x8198883b,eax
  403a28:	mov    BYTE PTR [esi-0x30d4049e],al
  403a2e:	js     0x403a71
  403a30:	mov    ecx,0xf2ec8df9
  403a35:	loop   0x403a21
  403a37:	es push ss
  403a39:	gs stos BYTE PTR es:[edi],al
  403a3b:	shl    BYTE PTR [edi-0x18],1
  403a3e:	std    
  403a3f:	test   DWORD PTR [ebp+eax*1-0x1e],edi
  403a43:	cs push edi
  403a45:	jbe    0x403a3a
  403a47:	iret   
  403a48:	sbb    al,0xb1
  403a4a:	fldcw  WORD PTR [edi-0xc2cef14]
  403a50:	daa    
  403a51:	mov    edx,0x2b642697
  403a56:	mov    cl,0xb1
  403a58:	mov    esp,0x99f7e103
  403a5d:	fadd   DWORD PTR [eax+0x20]
  403a60:	jae    0x403a45
  403a62:	mov    BYTE PTR [ebx+edi*4],cl
  403a65:	sar    BYTE PTR [eax+ecx*8+0x6f2a0161],cl
  403a6c:	pop    es
  403a6d:	lds    ebx,FWORD PTR [edx+0x72]
  403a70:	dec    edx
  403a71:	xchg   ebx,eax
  403a72:	in     eax,dx
  403a73:	js     0x403a74
  403a75:	int3   
  403a76:	xor    BYTE PTR [ebp-0x6d974efe],bl
  403a7c:	inc    esp
  403a7d:	fsubp  st(0),st
  403a7f:	lods   al,BYTE PTR ds:[esi]
  403a80:	xor    ecx,ebp
  403a82:	scas   al,BYTE PTR es:[edi]
  403a83:	hlt    
  403a84:	test   eax,0xf4cd9087
  403a89:	push   es
  403a8a:	push   edx
  403a8b:	adc    eax,0xd17e565b
  403a90:	imul   eax,DWORD PTR [esi-0x631c9b38],0x29ed42e4
  403a9a:	mov    ebx,0x87071910
  403a9f:	rcr    DWORD PTR [ebp-0x2a6cf139],cl
  403aa5:	jo     0x403b07
  403aa7:	into   
  403aa8:	adc    bh,BYTE PTR [edx]
  403aaa:	lock cmp DWORD PTR [ebp+0x1a],ebx
  403aae:	jbe    0x403b00
  403ab0:	mov    ebx,0xb87c560
  403ab5:	adc    BYTE PTR [edx+0x21],0xd3
  403ab9:	or     esp,0x3e
  403abc:	lds    ecx,FWORD PTR [eax]
  403abe:	mov    WORD PTR [ecx],es
  403ac0:	mov    BYTE PTR [esi+eiz*1-0x1b030fe8],bh
  403ac7:	lods   eax,DWORD PTR ds:[esi]
  403ac8:	mov    al,ds:0x47b81d7e
  403acd:	nop
  403ace:	cmovp  ebx,DWORD PTR [edi+esi*8+0x5bf4b2eb]
  403ad6:	mov    bl,0x7e
  403ad8:	adc    al,0xaf
  403ada:	iret   
  403adb:	mul    BYTE PTR [ecx+0x2f]
  403ade:	call   0x8498:0xcd6811af
  403ae5:	or     ah,BYTE PTR [esi]
  403ae7:	adc    DWORD PTR [eax],ecx
  403ae9:	mov    ebp,0xc94b64b6
  403aee:	add    BYTE PTR [ecx-0x76],bh
  403af1:	inc    ebp
  403af2:	dec    DWORD PTR [edi]
  403af4:	mov    bh,0xd
  403af6:	jmp    0x403ade
  403af8:	inc    edx
  403af9:	add    BYTE PTR [ecx],dl
  403afb:	or     eax,0x42fd76
  403b00:	mov    ecx,DWORD PTR [ebp-0x10]
  403b03:	sub    DWORD PTR ds:0x42e124,0x77ef
  403b0d:	xor    al,0x47
  403b0f:	sub    al,0x37
  403b11:	and    DWORD PTR ds:0x42fcfd,0x33b1
  403b1b:	mov    BYTE PTR [ecx],al
  403b1d:	neg    DWORD PTR ds:0x42fcf5
  403b23:	mov    DWORD PTR [ebp-0x8],0xf89c8531
  403b2a:	jmp    0x403e8a
  403b2f:	fist   WORD PTR [esi+0x1]
  403b32:	cdq    
  403b33:	mov    cl,0x69
  403b35:	addr16 push edx
  403b37:	push   esi
  403b38:	and    DWORD PTR [ecx-0x3b62b69],esi
  403b3e:	xor    ebp,eax
  403b40:	push   ds
  403b41:	jo     0x403bb3
  403b43:	cmp    eax,0x8670707d
  403b48:	sahf   
  403b49:	mov    bl,0x4c
  403b4b:	lods   al,BYTE PTR ds:[esi]
  403b4c:	sbb    al,0x95
  403b4e:	xchg   BYTE PTR [eax-0x1c],al
  403b51:	arpl   WORD PTR [edx+0x35a790f6],ax
  403b57:	push   ds
  403b58:	pop    ecx
  403b59:	mov    gs,WORD PTR [eax+0x1dea8865]
  403b5f:	push   eax
  403b60:	es cmp al,0xa3
  403b63:	jo     0x403b01
  403b65:	pop    ds
  403b66:	jecxz  0x403ba0
  403b68:	stos   BYTE PTR es:[edi],al
  403b69:	sbb    bh,bl
  403b6b:	adc    ah,ah
  403b6d:	mov    ebp,0xea0f30c7
  403b72:	inc    eax
  403b73:	imul   edi,ebp,0xab324597
  403b79:	pop    esp
  403b7a:	xchg   eax,esi
  403b7c:	aas    
  403b7d:	cmp    eax,0xbe17ae65
  403b82:	mov    bl,0x8
  403b84:	pop    ebx
  403b85:	mov    bh,0x20
  403b87:	cld    
  403b88:	daa    
  403b89:	and    al,0xf9
  403b8b:	mov    ch,0xeb
  403b8d:	icebp  
  403b8e:	ja     0x403bdd
  403b90:	int    0xe1
  403b92:	jge    0x403bb2
  403b94:	mov    dl,0x40
  403b96:	vcmpps xmm2,xmm7,XMMWORD PTR [ebp+0xb31a2b1],0xb4
  403b9f:	mov    DWORD PTR [eax],ebp
  403ba1:	adc    bh,0x28
  403ba4:	jmp    0x403bc6
  403ba6:	jo     0x403bae
  403ba8:	xor    ch,bl
  403baa:	sbb    DWORD PTR [esi+ecx*1-0x151178c3],esi
  403bb1:	not    DWORD PTR [edx]
  403bb3:	out    dx,eax
  403bb4:	dec    edx
  403bb5:	or     DWORD PTR [ecx],edx
  403bb7:	jmp    0x93735994
  403bbc:	dec    esp
  403bbd:	call   0xfc48adf3
  403bc2:	imul   eax,DWORD PTR [ebp-0xe1c551d],0xfefb25af
  403bcc:	adc    cl,bh
  403bce:	icebp  
  403bcf:	xor    al,0x18
  403bd1:	mov    esi,0xa90ee0ec
  403bd6:	jae    0x403b6a
  403bd8:	bound  edi,QWORD PTR [ecx]
  403bda:	cwde   
  403bdb:	pop    ebp
  403bdc:	add    bl,BYTE PTR [eax+0x5f]
  403bdf:	add    BYTE PTR [ebx+0x1202879],bl
  403be5:	dec    esi
  403be6:	das    
  403be7:	xor    al,0x86
  403be9:	add    ecx,DWORD PTR [ecx+0x1e5af628]
  403bef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403bf0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403bf1:	jmp    0x8d1f:0xdac0b5d0
  403bf8:	(bad)  
  403bf9:	adc    BYTE PTR [ebx-0x60b86346],cl
  403bff:	ret    
  403c00:	imul   esi,DWORD PTR [ecx-0x6e8df48f],0x58
  403c07:	bound  ecx,QWORD PTR [edi]
  403c09:	icebp  
  403c0a:	xor    dh,bh
  403c0c:	pop    es
  403c0d:	test   DWORD PTR [eax+eiz*2+0x704b871c],ebx
  403c14:	cwde   
  403c15:	into   
  403c16:	aad    0x46
  403c18:	mov    BYTE PTR [edx+ebp*1+0x21],al
  403c1c:	add    DWORD PTR [eax+0x46ca3454],0x514bc018
  403c26:	ss xchg ecx,eax
  403c28:	dec    edi
  403c29:	loope  0x403bce
  403c2b:	idiv   ch
  403c2d:	sub    al,0x81
  403c2f:	pushf  
  403c30:	xchg   ebp,eax
  403c31:	mov    eax,ds:0xc60b45f6
  403c36:	mov    edi,0xf3bb1668
  403c3b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403c3c:	outs   dx,DWORD PTR cs:[esi]
  403c3e:	xchg   ebp,ebx
  403c40:	fdivr  QWORD PTR [edx-0x1]
  403c43:	call   0xc8b7:0x431ed6ab
  403c4a:	das    
  403c4b:	xor    esp,DWORD PTR [edx+0x1fd79f56]
  403c51:	imul   eax,DWORD PTR [edx],0xffffffb1
  403c54:	rol    DWORD PTR ds:0xb57c468c,1
  403c5a:	ret    
  403c5b:	sbb    bh,0x12
  403c5e:	fimul  WORD PTR [esi+0x5a52219a]
  403c64:	adc    DWORD PTR [eax-0x1b],eax
  403c67:	sub    al,0xab
  403c69:	fist   WORD PTR [ecx+0x6d]
  403c6c:	push   ebp
  403c6d:	jmp    0xe858:0xb2263a31
  403c74:	jp     0x403c6f
  403c76:	xlat   BYTE PTR ds:[ebx]
  403c77:	xchg   edx,eax
  403c78:	ins    DWORD PTR es:[edi],dx
  403c79:	ror    BYTE PTR [eax-0x4fd69dbf],1
  403c7f:	inc    edx
  403c80:	mov    ecx,esi
  403c82:	call   0x6e2a:0x365dc86e
  403c89:	mov    esi,0xd780ce56
  403c8e:	push   ss
  403c8f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403c90:	pop    edx
  403c91:	cmp    ch,BYTE PTR [ecx]
  403c93:	or     edx,esp
  403c95:	xor    dl,0x69
  403c98:	jne    0x403cf1
  403c9a:	pop    ecx
  403c9b:	fild   WORD PTR [ebx+0x5f]
  403c9e:	cmp    BYTE PTR [ebp-0xd],ch
  403ca1:	jmp    0x53b0:0x7ace9b1b
  403ca8:	xor    cl,bh
  403caa:	jg     0x403c48
  403cac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403cad:	js     0x403d1a
  403caf:	in     al,dx
  403cb0:	call   DWORD PTR [ecx]
  403cb2:	push   0x6ea75ad3
  403cb7:	scas   eax,DWORD PTR es:[edi]
  403cb8:	retf   0x29ec
  403cbb:	inc    edx
  403cbc:	pop    ebp
  403cbd:	not    ebp
  403cbf:	jo     0x403d28
  403cc1:	mov    BYTE PTR [esi-0x6d5ca09c],al
  403cc7:	rol    DWORD PTR [edi+0x18],0x73
  403ccb:	pushf  
  403ccc:	std    
  403ccd:	push   esi
  403cce:	iret   
  403ccf:	inc    esp
  403cd0:	add    esp,ebp
  403cd2:	(bad)  
  403cd3:	repz hlt 
  403cd5:	xchg   edx,eax
  403cd6:	stos   BYTE PTR es:[edi],al
  403cd7:	pop    ebp
  403cd8:	pop    ss
  403cd9:	mov    eax,0x663f5df1
  403cde:	mov    ebx,DWORD PTR [ebp+0x7decb2fa]
  403ce4:	ins    BYTE PTR es:[edi],dx
  403ce5:	popa   
  403ce6:	js     0x403d1e
  403ce8:	adc    edx,ebx
  403cea:	push   esi
  403ceb:	or     BYTE PTR [esi],ch
  403ced:	or     DWORD PTR [ebp-0x1b72b738],esi
  403cf3:	fistp  QWORD PTR [eax-0x60]
  403cf6:	ret    0xc936
  403cf9:	add    bh,dl
  403cfb:	adc    BYTE PTR [edx-0x31],dh
  403cfe:	scas   eax,DWORD PTR es:[edi]
  403cff:	xor    bh,BYTE PTR [edi-0x34]
  403d02:	aad    0x6a
  403d04:	sub    BYTE PTR [esi-0x36dd362d],bh
  403d0a:	mov    BYTE PTR [eax-0x214c4304],bh
  403d10:	mov    ecx,0x91fe82b2
  403d15:	into   
  403d16:	push   ebp
  403d17:	sbb    DWORD PTR [ecx+0x79],ebx
  403d1a:	in     eax,0x5b
  403d1c:	fsub   DWORD PTR [edx-0x4ebc51aa]
  403d22:	jne    0x403d20
  403d24:	hlt    
  403d25:	jns    0x403d06
  403d27:	in     eax,0x3f
  403d29:	mov    edx,0x9cacb4ea
  403d2e:	retf   0xcf3c
  403d31:	xlat   BYTE PTR ds:[ebx]
  403d32:	sbb    eax,0x43903856
  403d37:	and    DWORD PTR [edi-0x16],0xe6c72cb1
  403d3e:	dec    ebp
  403d3f:	sahf   
  403d40:	jo     0x403d66
  403d42:	mov    ebx,0x960aa6e2
  403d47:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403d48:	leave  
  403d49:	cmp    DWORD PTR [esi+edi*8+0x55c0fbd9],eax
  403d50:	adc    al,BYTE PTR [ebx]
  403d52:	adc    eax,0x1545aac3
  403d57:	sub    dl,cl
  403d59:	pop    ss
  403d5a:	clc    
  403d5b:	jb     0x403d6a
  403d5d:	and    BYTE PTR [edi+0x1df32e8e],dh
  403d63:	push   0xd510bb2e
  403d68:	mov    dh,0x87
  403d6a:	jmp    0x1ad0936
  403d6f:	mov    ebx,0x8e13092c
  403d74:	adc    al,0x9d
  403d76:	sbb    al,BYTE PTR [ebx]
  403d78:	stos   BYTE PTR es:[edi],al
  403d79:	ins    BYTE PTR es:[edi],dx
  403d7a:	mov    al,0x88
  403d7c:	and    edx,DWORD PTR [edi-0x22]
  403d7f:	fcmovnb st,st(2)
  403d81:	sbb    BYTE PTR [ebx],bh
  403d83:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403d84:	loope  0x403d3a
  403d86:	hlt    
  403d87:	or     eax,0x77aa8ecd
  403d8c:	dec    eax
  403d8d:	dec    ch
  403d8f:	rcr    eax,cl
  403d91:	ja     0x403dc7
  403d93:	lea    edx,[ecx+0x35fb4628]
  403d99:	and    BYTE PTR [edi-0x50],dh
  403d9c:	mov    edx,0x1a8a0956
  403da1:	je     0x403d70
  403da3:	cdq    
  403da4:	clc    
  403da5:	ins    DWORD PTR es:[edi],dx
  403da6:	pop    ds
  403da7:	sbb    al,0xbb
  403da9:	inc    esi
  403daa:	and    DWORD PTR [ebx+0x9],edi
  403dad:	xor    DWORD PTR [ebp+0x7883fb96],ebx
  403db3:	setae  BYTE PTR [esi]
  403db6:	(bad)  
  403db7:	cmc    
  403db8:	cli    
  403db9:	inc    edi
  403dba:	fnsave [ecx]
  403dbc:	jns    0x403e0e
  403dbe:	scas   eax,DWORD PTR es:[edi]
  403dbf:	mov    esi,0xcf290de7
  403dc4:	inc    ecx
  403dc5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403dc6:	mov    bh,0x28
  403dc8:	mov    dl,BYTE PTR ds:0x2c501f19
  403dce:	xchg   edi,eax
  403dcf:	adc    BYTE PTR [edx],0xaa
  403dd2:	inc    edx
  403dd3:	push   ebx
  403dd4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403dd5:	test   DWORD PTR [edx],esi
  403dd7:	pop    ss
  403dd8:	dec    edx
  403dd9:	mov    al,0x6b
  403ddb:	mov    ebp,0x7ee0592a
  403de0:	pop    edx
  403de1:	jno    0x403dfb
  403de3:	ss jae 0x403e58
  403de6:	or     al,0x2
  403de8:	test   DWORD PTR [eax],edx
  403dea:	pop    ss
  403deb:	shl    BYTE PTR ds:0xfd42617d,cl
  403df1:	add    al,BYTE PTR [ebx+0x55]
  403df4:	adc    al,BYTE PTR [ecx+0x78]
  403df7:	aam    0x6f
  403df9:	jo     0x403e2b
  403dfb:	sbb    DWORD PTR [edi+0x76],ebx
  403dfe:	pop    esi
  403dff:	push   cs
  403e00:	test   cl,0x88
  403e03:	out    dx,eax
  403e04:	add    al,0xb1
  403e06:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403e07:	aas    
  403e08:	mov    ds:0xd5a58684,eax
  403e0d:	push   0xfffffff9
  403e0f:	and    DWORD PTR [eax+ecx*1],esp
  403e12:	idiv   BYTE PTR [edx]
  403e14:	jnp    0x403dbf
  403e16:	mov    ebx,0x82f0d7e1
  403e1b:	sbb    edi,DWORD PTR [edi+ebx*1+0x6b]
  403e1f:	mov    ds:0x3eceaac0,al
  403e24:	sbb    BYTE PTR [ebx],ah
  403e26:	retf   
  403e27:	xchg   ecx,eax
  403e28:	test   DWORD PTR [ebx+ebx*4],edi
  403e2b:	jecxz  0x403df5
  403e2d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403e2e:	cdq    
  403e2f:	test   al,0x9f
  403e31:	sahf   
  403e32:	jo     0x403e89
  403e34:	xlat   BYTE PTR ds:[ebx]
  403e35:	jg     0x403e70
  403e37:	or     DWORD PTR [esi-0x6bd5922f],esp
  403e3d:	retf   
  403e3e:	pop    ebp
  403e3f:	push   ebx
  403e40:	jne    0x403e07
  403e42:	daa    
  403e43:	shl    BYTE PTR [eax-0x5a],0xeb
  403e47:	shl    BYTE PTR ds:0x9dfc0f65,cl
  403e4d:	call   DWORD PTR [edi+0x5a]
  403e50:	pop    ebx
  403e51:	es xchg esp,eax
  403e53:	jns    0x403e56
  403e55:	fnstcw WORD PTR [esi]
  403e57:	inc    edi
  403e58:	leave  
  403e59:	lods   al,BYTE PTR ds:[esi]
  403e5a:	popa   
  403e5b:	pop    edi
  403e5c:	cs push ds
  403e5e:	inc    eax
  403e5f:	cmp    al,0xd0
  403e61:	or     eax,0xcf5fb240
  403e66:	pop    ss
  403e67:	pop    esp
  403e68:	and    BYTE PTR [eax],0xff
  403e6b:	stos   DWORD PTR es:[edi],eax
  403e6c:	stos   BYTE PTR es:[edi],al
  403e6d:	jge    0x403eaf
  403e6f:	add    eax,0x46eecbc8
  403e74:	sub    cl,cl
  403e76:	outs   dx,BYTE PTR ds:[esi]
  403e77:	xor    DWORD PTR [edx+ecx*4-0x27],edx
  403e7b:	js     0x403ee3
  403e7d:	add    ah,bl
  403e7f:	loopne 0x403e4d
  403e81:	das    
  403e82:	jecxz  0x403e99
  403e84:	retf   
  403e85:	or     al,0xfa
  403e87:	mov    ebp,0x45c7b633
  403e8c:	lock xor BYTE PTR [ebp+0x458bf89c],al
  403e93:	clc    
  403e94:	mov    ecx,0x7510855
  403e99:	push   esi
  403e9a:	xor    eax,ecx
  403e9c:	mov    esi,DWORD PTR ds:0x42e11c
  403ea2:	adc    DWORD PTR ds:0x42e70f,esi
  403ea8:	mov    esi,0x32729c
  403ead:	add    eax,esi
  403eaf:	mov    DWORD PTR ds:0x42fd72,0x1a92
  403eb9:	jmp    0x40423a
  403ebe:	mov    dl,BYTE PTR [ebp-0x1]
  403ec1:	mov    DWORD PTR ds:0x42fd05,0x5bb3
  403ecb:	mov    BYTE PTR [ebp+eax*1-0x58],dl
  403ecf:	mov    DWORD PTR ds:0x42e6ef,0x7752
  403ed9:	jmp    0x404239
  403ede:	jge    0x403ed6
  403ee0:	retf   0xf1c4
  403ee3:	in     al,0x15
  403ee5:	icebp  
  403ee6:	ss mov esp,0x59b31c35
  403eec:	outs   dx,DWORD PTR ds:[esi]
  403eed:	cmp    DWORD PTR [edx+0x3d70701b],eax
  403ef3:	jge    0x403f65
  403ef5:	jo     0x403f31
  403ef7:	test   eax,0xc1cf0f9c
  403efc:	dec    esp
  403efd:	xor    eax,0x27894e17
  403f02:	sbb    al,0xf6
  403f04:	mov    eax,ds:0x87d31762
  403f09:	push   ds
  403f0a:	xchg   esp,eax
  403f0b:	scas   al,BYTE PTR es:[edi]
  403f0c:	test   BYTE PTR [esi+eax*1+0x27d27a0d],cl
  403f13:	cld    
  403f14:	jb     0x403ea4
  403f16:	fild   QWORD PTR [ebx-0xb6f5fb6]
  403f1c:	mov    edi,0x736a3648
  403f21:	call   0x6cb2:0xca3ecd22
  403f28:	cmp    ah,BYTE PTR [edx-0x44f58697]
  403f2e:	lock shl dl,1
  403f31:	je     0x403ebe
  403f33:	dec    ecx
  403f34:	das    
  403f35:	cwde   
  403f36:	adc    al,0xd8
  403f38:	pop    edx
  403f39:	or     al,0xc6
  403f3b:	adc    al,0x5f
  403f3d:	shr    DWORD PTR fs:[eax+eiz*4+0x23d3a4ea],cl
  403f45:	jne    0x403f08
  403f47:	cli    
  403f48:	adc    BYTE PTR [edi],ch
  403f4a:	xchg   ecx,eax
  403f4b:	lods   al,BYTE PTR ds:[esi]
  403f4c:	mov    ecx,0x133377fe
  403f51:	push   edi
  403f52:	in     eax,0x42
  403f54:	stos   DWORD PTR es:[edi],eax
  403f55:	jbe    0x403fad
  403f57:	sub    ecx,DWORD PTR ss:[esi+0x65]
  403f5b:	and    cl,bh
  403f5d:	jb     0x403fc2
  403f5f:	push   0xffffffbf
  403f61:	imul   edi,DWORD PTR [edx-0x36],0x7b
  403f65:	gs jo  0x403f31
  403f68:	retf   
  403f69:	iret   
  403f6a:	int    0x48
  403f6c:	stos   DWORD PTR es:[edi],eax
  403f6d:	cmp    DWORD PTR [eax-0x17781e6a],esi
  403f73:	fcmovnb st,st(2)
  403f75:	xor    al,0xf5
  403f77:	fisttp WORD PTR [ebp-0x10884d5f]
  403f7d:	outs   dx,BYTE PTR ds:[esi]
  403f7e:	jno    0x403f68
  403f80:	inc    ebp
  403f81:	shl    BYTE PTR [edx-0x7],1
  403f84:	mov    eax,0xc2386dda
  403f89:	jae    0x403ff7
  403f8b:	in     eax,0x1e
  403f8d:	data16 jno 0x403f72
  403f90:	and    al,BYTE PTR ds:0x9d864973
  403f96:	cli    
  403f97:	jb     0x403fa1
  403f99:	shr    ebp,1
  403f9b:	adc    BYTE PTR [esi],0x74
  403f9e:	dec    DWORD PTR [edi+0x39]
  403fa1:	and    dh,bl
  403fa3:	and    BYTE PTR [edi-0x42b2ad4],dl
  403fa9:	(bad)  
  403faa:	mov    dl,0xfc
  403fac:	(bad)  [edi-0x294b220e]
  403fb2:	iret   
  403fb3:	inc    edi
  403fb4:	sub    BYTE PTR [ebx],bl
  403fb6:	jno    0x403f60
  403fb8:	mov    dh,0x25
  403fba:	sar    BYTE PTR [edx-0x6d85c3f0],1
  403fc0:	nop
  403fc1:	mov    ebx,0xbeb55995
  403fc6:	xlat   BYTE PTR ds:[ebx]
  403fc7:	ret    
  403fc8:	lahf   
  403fc9:	das    
  403fca:	mov    ds,WORD PTR [esp+ebx*4-0x44]
  403fce:	call   0x18aa4b02
  403fd3:	mov    bl,BYTE PTR ds:0x713b4ab3
  403fd9:	sub    BYTE PTR [edi],cl
  403fdb:	fcomp  QWORD PTR [eax-0x51b11da8]
  403fe1:	loope  0x403f8e
  403fe3:	lods   eax,DWORD PTR ds:[esi]
  403fe4:	inc    edx
  403fe5:	sub    ecx,DWORD PTR [esi]
  403fe7:	jmp    0x40400b
  403fe9:	or     dl,BYTE PTR [ecx+eiz*1+0x68]
  403fed:	ins    DWORD PTR es:[edi],dx
  403fee:	mov    BYTE PTR [ebp-0x7d098826],ch
  403ff4:	add    eax,0x533dd49a
  403ff9:	mov    dl,0xbf
  403ffb:	or     edi,DWORD PTR [ebx+0x3e51b40c]
  404001:	outs   dx,DWORD PTR ds:[esi]
  404002:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404003:	fwait
  404004:	pop    eax
  404005:	sbb    eax,0x67007486
  40400a:	and    ecx,esp
  40400c:	retf   0x250b
  40400f:	ficomp DWORD PTR [edx]
  404011:	mov    ch,0xe4
  404013:	daa    
  404014:	(bad)  
  404015:	cld    
  404016:	arpl   bp,sp
  404018:	mov    BYTE PTR [ebx-0x33],0x44
  40401c:	test   eax,edx
  40401e:	sbb    DWORD PTR [edx+0x60],esi
  404021:	fldcw  WORD PTR [ecx+ebp*8+0xa]
  404025:	fdiv   DWORD PTR [edx-0x5d]
  404028:	jns    0x404055
  40402a:	psadbw mm4,mm4
  40402d:	paddsb mm4,QWORD PTR [edi]
  404030:	sub    BYTE PTR [ebp-0x13c8aa6a],cl
  404036:	call   0xdafc49d3
  40403b:	in     al,0x84
  40403d:	scas   al,BYTE PTR es:[edi]
  40403e:	add    bl,bh
  404040:	mov    ah,0x80
  404042:	into   
  404043:	xor    al,0x38
  404045:	aam    0x25
  404047:	dec    eax
  404048:	test   eax,0xea5e6954
  40404d:	adc    eax,0x9caa371f
  404052:	pop    edx
  404053:	xchg   ch,cl
  404055:	loopne 0x4040c0
  404057:	add    eax,0xc455f13a
  40405c:	sbb    edx,edx
  40405e:	ss mov cl,0x7b
  404061:	(bad)  
  404062:	or     dl,ch
  404064:	rcl    DWORD PTR [eax],0xec
  404067:	dec    eax
  404068:	pop    ecx
  404069:	fwait
  40406a:	and    eax,0xeb405d41
  40406f:	sub    edx,edi
  404071:	mov    al,ds:0x1fba7a29
  404076:	inc    BYTE PTR [ecx-0x1]
  404079:	sbb    edi,DWORD PTR [ebp-0x23]
  40407c:	pop    esi
  40407d:	clc    
  40407e:	push   0x29
  404080:	je     0x4040f8
  404082:	ret    0x6ca0
  404085:	mov    ebx,0xb58d767f
  40408a:	jg     0x404029
  40408c:	adc    esp,ebp
  40408e:	repz xchg ecx,eax
  404090:	push   ebx
  404091:	fdivr  DWORD PTR ds:0xa9bf76cc
  404097:	pushf  
  404098:	cmp    BYTE PTR [ecx],bh
  40409a:	pop    esp
  40409b:	ret    
  40409c:	stc    
  40409d:	rcl    BYTE PTR [esi-0x49a30825],1
  4040a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4040a4:	and    al,0xfb
  4040a6:	and    ch,al
  4040a8:	mov    eax,0x583a6e99
  4040ad:	mul    DWORD PTR [ecx]
  4040af:	pop    edx
  4040b0:	jns    0x4040ec
  4040b2:	inc    ebx
  4040b3:	(bad)  
  4040b5:	mov    al,ds:0x247c4225
  4040ba:	mov    esp,0x5539d931
  4040bf:	pop    esi
  4040c0:	sar    eax,1
  4040c2:	sub    ebx,DWORD PTR [ebp+0x425aa8b5]
  4040c8:	test   eax,0x4ab9d246
  4040cd:	mov    WORD PTR [esi-0x23],?
  4040d0:	adc    ch,BYTE PTR [eax+0x3a03243e]
  4040d6:	ret    
  4040d7:	mov    ds:0x4eaa51cf,eax
  4040dc:	or     al,0x3d
  4040de:	xor    bh,BYTE PTR [edi-0x56]
  4040e1:	jp     0x4040ef
  4040e3:	cmp    bh,ah
  4040e5:	mov    edx,DWORD PTR [ebp+0x3c7a2146]
  4040eb:	jbe    0x4040aa
  4040ed:	test   DWORD PTR [ebx+0xd30f476],ebp
  4040f3:	and    eax,0x7a06423
  4040f8:	pop    ecx
  4040f9:	ret    
  4040fa:	cmp    ebp,DWORD PTR [ecx-0x3c]
  4040fd:	cmp    ah,BYTE PTR [esi]
  4040ff:	js     0x404141
  404101:	rcr    DWORD PTR [edi+0x7574299f],1
  404107:	mov    ah,0x90
  404109:	lds    ecx,FWORD PTR [edx]
  40410b:	push   ebx
  40410c:	xor    BYTE PTR [ebx+0x22],0x96
  404110:	(bad)  
  404111:	pusha  
  404112:	add    dh,BYTE PTR [ecx+0x6a]
  404115:	aam    0xb
  404117:	mov    eax,edx
  404119:	mov    eax,ds:0xda8f1826
  40411e:	aam    0xcb
  404120:	pushf  
  404121:	test   al,0x2f
  404123:	shl    edx,0x7b
  404126:	jmp    0x45da:0x560a6911
  40412d:	or     DWORD PTR [eax],esp
  40412f:	je     0x40417b
  404131:	add    eax,0x85ef7f09
  404136:	lods   al,BYTE PTR ds:[esi]
  404137:	pop    ecx
  404138:	fld    QWORD PTR [ebp-0x56c61e6a]
  40413e:	jl     0x40414d
  404140:	lods   al,BYTE PTR ds:[esi]
  404141:	or     al,0xdf
  404143:	cmp    al,0xc5
  404145:	ret    0x9655
  404148:	jo     0x404198
  40414a:	xchg   cl,dh
  40414c:	mov    al,0xf7
  40414e:	stos   BYTE PTR es:[edi],al
  40414f:	aas    
  404150:	and    DWORD PTR [edi],ebx
  404152:	fistp  WORD PTR [ebx+0x240c727]
  404158:	bound  esi,QWORD PTR [edi+0x53]
  40415b:	clc    
  40415c:	inc    ebx
  40415d:	xchg   BYTE PTR [esi-0x2d80bd9e],cl
  404163:	js     0x404135
  404165:	and    ch,ah
  404167:	call   0x9766:0x22a59cd3
  40416e:	and    eax,0x2c475881
  404173:	ins    DWORD PTR es:[edi],dx
  404174:	fucomi st,st(7)
  404176:	retf   
  404177:	outs   dx,BYTE PTR ds:[esi]
  404178:	xor    bl,ch
  40417a:	fwait
  40417b:	jae    0x4041be
  40417d:	add    al,0x66
  40417f:	mov    al,ds:0xd68c4aa2
  404184:	mov    gs,WORD PTR [ecx-0x5a]
  404187:	and    ch,BYTE PTR [esi+0x2a0c378d]
  40418d:	mov    bh,0x40
  40418f:	(bad)  
  404190:	icebp  
  404191:	sti    
  404192:	out    dx,al
  404193:	pop    edi
  404194:	push   cs
  404195:	stc    
  404196:	jge    0x40411e
  404198:	cs cli 
  40419a:	push   cs
  40419b:	xor    esp,DWORD PTR [esp+edi*1-0x5da29020]
  4041a2:	mov    al,BYTE PTR [ebx+0x4b]
  4041a5:	mov    eax,DWORD PTR [esi-0x541b2047]
  4041ab:	(bad)  
  4041ac:	enter  0x9b17,0xd9
  4041b0:	mov    ds:0xdc2a6125,al
  4041b5:	jecxz  0x404190
  4041b7:	xchg   dh,ch
  4041b9:	mov    ebx,0x7c2f689a
  4041be:	out    0x4c,eax
  4041c0:	mov    dl,BYTE PTR ds:0x93fbb108
  4041c6:	std    
  4041c7:	pop    es
  4041c8:	test   BYTE PTR [eax-0x295fbc76],ah
  4041ce:	jl     0x404161
  4041d0:	xor    bl,dh
  4041d2:	cs xchg ecx,eax
  4041d4:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  4041d6:	jmp    0x404171
  4041d8:	mov    DWORD PTR [edx],esi
  4041da:	cdq    
  4041db:	repz mov ds:0xfcf92918,al
  4041e1:	pop    ebp
  4041e2:	jne    0x4041d0
  4041e4:	ret    0x8be4
  4041e7:	xor    eax,0x91764e64
  4041ec:	dec    esp
  4041ed:	mov    dl,0xb5
  4041ef:	adc    DWORD PTR [edi+0x442ae5d7],ecx
  4041f5:	adc    edi,eax
  4041f7:	cdq    
  4041f8:	out    dx,eax
  4041f9:	enter  0x7ee4,0xe0
  4041fd:	sub    eax,0xfa8f44dd
  404202:	iret   
  404203:	inc    edi
  404204:	mov    DWORD PTR [edi-0x796c6a83],ebp
  40420a:	daa    
  40420b:	dec    ebp
  40420c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40420d:	pop    edi
  40420e:	or     DWORD PTR [eax+0x4d963751],edi
  404214:	pushf  
  404215:	add    dh,bh
  404217:	cmp    dl,BYTE PTR [ebp-0x2cb6fbf4]
  40421d:	pop    es
  40421e:	mov    bh,dl
  404220:	(bad)  
  404221:	frstor ds:0x8ba49528
  404227:	popf   
  404228:	in     eax,0x3
  40422a:	cmp    eax,0x7bc9d804
  40422f:	fsubr  QWORD PTR [esi-0x439b133a]
  404235:	sti    
  404236:	cdq    
  404237:	add    esi,eax
  404239:	inc    eax
  40423a:	cmp    eax,0x40
  40423d:	mov    DWORD PTR ds:0x42fd6e,0x793d
  404247:	jmp    0x4045a7
  40424c:	leave  
  40424d:	daa    
  40424e:	rcl    BYTE PTR [esi],1
  404250:	repnz aad 0xf1
  404253:	jecxz  0x404232
  404255:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404256:	dec    ebp
  404257:	comiss xmm5,DWORD PTR [esp+edi*8+0x70184f68]
  40425f:	jo     0x40429e
  404261:	jge    0x4042d3
  404263:	jo     0x404202
  404265:	add    bl,BYTE PTR [edi]
  404267:	(bad)  
  404268:	lods   al,BYTE PTR ds:[esi]
  404269:	fwait
  40426a:	and    eax,0x55b03a3e
  40426f:	test   eax,0x1970e979
  404274:	mov    al,0x4e
  404276:	sbb    ecx,DWORD PTR [esi]
  404278:	sbb    esp,edx
  40427a:	sahf   
  40427b:	xchg   esi,eax
  40427c:	mov    ecx,0x4b65daa9
  404281:	out    0x8f,eax
  404283:	out    0x10,eax
  404285:	inc    eax
  404286:	xor    cl,BYTE PTR [edx+0x52]
  404289:	out    dx,eax
  40428a:	fst    QWORD PTR gs:[ecx+ebp*4-0x52]
  40428f:	mov    bl,0x15
  404291:	cmp    edx,DWORD PTR [ecx]
  404293:	std    
  404294:	cdq    
  404295:	leave  
  404296:	push   ds
  404297:	adc    dh,bh
  404299:	fldcw  WORD PTR [ebx-0x70]
  40429c:	mov    al,0x44
  40429e:	xlat   BYTE PTR ds:[ebx]
  40429f:	int3   
  4042a0:	pop    ebp
  4042a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4042a2:	scas   al,BYTE PTR es:[edi]
  4042a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4042a4:	and    al,0x7f
  4042a6:	cld    
  4042a7:	aam    0xbf
  4042a9:	dec    ebp
  4042aa:	adc    dl,dh
  4042ac:	jne    0x404329
  4042ae:	shl    BYTE PTR [edi-0x7b25491e],0xc4
  4042b5:	ins    DWORD PTR es:[edi],dx
  4042b6:	ret    0xa4c8
  4042b9:	mov    eax,ds:0x102b8271
  4042be:	pop    ebx
  4042bf:	lock pop eax
  4042c1:	fidiv  WORD PTR [ebp+edi*4+0x5d]
  4042c5:	loope  0x40427b
  4042c7:	aad    0x8c
  4042c9:	xor    ebx,edi
  4042cb:	or     DWORD PTR ds:0xdf90448b,eax
  4042d1:	xchg   ecx,eax
  4042d2:	inc    eax
  4042d3:	add    DWORD PTR [ebp-0x6d],eax
  4042d6:	rcl    dl,1
  4042d8:	mov    edx,0xc4be08fa
  4042dd:	(bad)  
  4042df:	and    esi,edi
  4042e1:	(bad)  
  4042e2:	rcl    DWORD PTR [edi],cl
  4042e4:	jp     0x4042c3
  4042e6:	iret   
  4042e7:	dec    edx
  4042e8:	fwait
  4042e9:	or     ebx,DWORD PTR [ebx-0x6945cbbd]
  4042ef:	and    DWORD PTR [edi+0x2],edi
  4042f2:	js     0x40436b
  4042f4:	jmp    0xd3a822
  4042f9:	push   edx
  4042fa:	inc    DWORD PTR [edi]
  4042fc:	(bad)  
  4042fd:	sub    eax,0xdb0cca6
  404302:	xor    esi,0x5
  404305:	ja     0x4042ad
  404307:	sub    BYTE PTR [ecx-0xb],bl
  40430a:	stc    
  40430b:	push   cs
  40430c:	add    eax,0x9ac6d8a7
  404311:	bound  ecx,QWORD PTR [ebx]
  404313:	sbb    al,0x4c
  404315:	xor    al,0xc2
  404317:	shl    BYTE PTR [eax-0x5bb78c02],1
  40431d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40431e:	sbb    al,0xf5
  404320:	fdivr  st(4),st
  404322:	lods   al,BYTE PTR ds:[si]
  404324:	out    0xf6,al
  404326:	or     al,0x9
  404328:	and    al,0x94
  40432a:	(bad)  
  40432b:	jl     0x4043a5
  40432d:	nop
  40432e:	cmc    
  40432f:	jle    0x40438b
  404331:	ret    
  404332:	push   0x6ee28ae8
  404337:	inc    ebx
  404338:	(bad)  
  404339:	shr    DWORD PTR [ecx-0x17b90e7a],1
  40433f:	(bad)  
  404340:	xor    ecx,DWORD PTR [edi+eiz*2]
  404343:	mov    ecx,DWORD PTR [edi+edx*1-0x79]
  404347:	sbb    ebp,DWORD PTR [ecx+0x694618e3]
  40434d:	fidiv  WORD PTR [edi+0x11]
  404350:	inc    esi
  404351:	cli    
  404352:	stos   BYTE PTR es:[edi],al
  404353:	enter  0x7af,0x19
  404357:	mov    bh,0xc4
  404359:	mov    bl,0xf2
  40435b:	or     BYTE PTR [ecx],ch
  40435d:	fnstenv [ecx-0x7e3f5a37]
  404363:	dec    esi
  404364:	ret    
  404365:	add    eax,0xf5513fdd
  40436a:	push   0xd85dcca7
  40436f:	xchg   esi,eax
  404370:	popa   
  404371:	jge    0x404398
  404373:	mov    BYTE PTR [eax],ah
  404375:	jne    0x404304
  404377:	pop    esi
  404378:	sti    
  404379:	push   ecx
  40437a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40437b:	sbb    DWORD PTR [ecx+0x23],edx
  40437e:	test   DWORD PTR [edx],edx
  404380:	xchg   ecx,eax
  404381:	sbb    al,0x46
  404383:	icebp  
  404384:	mov    ebx,0xa9064eb
  404389:	xor    eax,0x563edda5
  40438e:	dec    ebp
  40438f:	push   ds
  404390:	pop    ss
  404391:	and    esi,ebx
  404393:	jne    0x40433f
  404395:	adc    ch,BYTE PTR [ebx]
  404397:	pusha  
  404398:	sub    ebx,DWORD PTR [edi+esi*4]
  40439b:	jmp    0x404321
  40439d:	mov    al,0xfc
  40439f:	loopne 0x4043a0
  4043a1:	push   esp
  4043a2:	dec    eax
  4043a3:	pop    ss
  4043a4:	fiadd  WORD PTR [ebx-0x28]
  4043a7:	out    dx,eax
  4043a8:	mov    ?,WORD PTR [eax+0x73]
  4043ab:	ret    
  4043ac:	mov    ebp,0x36ac3a88
  4043b1:	cmp    cl,BYTE PTR [esi]
  4043b3:	xchg   esi,eax
  4043b4:	mov    edx,DWORD PTR [edx+0x0]
  4043b7:	call   0xdf23:0x325d3ab2
  4043be:	out    0x15,eax
  4043c0:	jae    0x404367
  4043c2:	rol    esp,0xfb
  4043c5:	push   ebp
  4043c6:	iret   
  4043c7:	addr16 aaa 
  4043c9:	xchg   edi,eax
  4043ca:	fwait
  4043cb:	mov    al,ds:0x17896f0b
  4043d0:	mov    al,0x66
  4043d2:	jg     0x404423
  4043d4:	mov    bl,0x43
  4043d6:	cmc    
  4043d7:	pop    esp
  4043d8:	mov    edx,DWORD PTR [ebp+0x91742ec]
  4043de:	xchg   edi,eax
  4043df:	jmp    0x38cf:0x25b5f60e
  4043e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4043e7:	sbb    edi,DWORD PTR [ebx]
  4043e9:	mov    ebp,0x6599bf
  4043ee:	neg    ebx
  4043f0:	iret   
  4043f1:	imul   eax,DWORD PTR [ecx-0x72],0xbea16b33
  4043f8:	in     al,0x72
  4043fa:	aam    0xe8
  4043fc:	push   ebp
  4043fd:	stos   DWORD PTR es:[edi],eax
  4043fe:	jle    0x40443e
  404400:	add    BYTE PTR [ebp+0x48e820b8],ch
  404406:	aas    
  404407:	imul   ecx,esi,0xfea2fdd6
  40440d:	push   0x69
  40440f:	int3   
  404410:	int    0x37
  404412:	fbld   TBYTE PTR [esi]
  404414:	mov    dl,0xb
  404416:	and    al,0x91
  404418:	out    0xc4,eax
  40441a:	push   edx
  40441b:	sbb    al,0x4
  40441d:	test   bh,ah
  40441f:	mov    al,ds:0x1acdb1da
  404424:	pop    edi
  404425:	pop    ds
  404426:	das    
  404427:	fsubr  st(7),st
  404429:	jp     0x404445
  40442b:	sub    esi,esp
  40442d:	sub    DWORD PTR [eax-0xb88b54d],0xffffff82
  404434:	pop    ds
  404435:	dec    eax
  404436:	and    al,0x20
  404438:	mov    edx,DWORD PTR [esi-0x1c]
  40443b:	popa   
  40443c:	(bad)  
  40443d:	fmul   QWORD PTR [edi-0x7e]
  404440:	js     0x4043e7
  404442:	adc    edx,DWORD PTR [edi-0x2f]
  404445:	jg     0x40442d
  404447:	inc    esi
  404448:	ret    
  404449:	pop    ebx
  40444a:	fild   WORD PTR [eax]
  40444c:	add    DWORD PTR [edx+eax*4+0x63ed857f],edi
  404453:	out    dx,al
  404454:	sub    BYTE PTR [ecx],0xe4
  404457:	ja     0x4044a5
  404459:	les    ebp,FWORD PTR [eax+ecx*1-0x58]
  40445d:	test   BYTE PTR [edi],cl
  40445f:	jns    0x4044c5
  404461:	dec    edx
  404462:	cld    
  404463:	jmp    0x78055254
  404468:	and    al,0xed
  40446a:	or     BYTE PTR ds:0x834a337a,bl
  404470:	jb     0x40443c
  404472:	ja     0x4044e8
  404474:	mov    ebx,0xa16429e8
  404479:	(bad)  
  40447a:	push   DWORD PTR [esi-0x6cf5a3fd]
  404480:	push   ebx
  404481:	push   cs
  404482:	ret    0x85ff
  404485:	nop
  404486:	sub    eax,DWORD PTR [eax-0x6a]
  404489:	stos   DWORD PTR es:[edi],eax
  40448a:	lock lods al,BYTE PTR ds:[esi]
  40448c:	cmp    bl,cl
  40448e:	cmp    BYTE PTR [ebx+0x43d51bf8],ah
  404494:	shl    BYTE PTR [esp+edx*8+0x50832758],cl
  40449b:	jmp    0xea0fa8b7
  4044a0:	call   0xc85a3546
  4044a5:	jg     0x404427
  4044a7:	and    al,0xbf
  4044a9:	popf   
  4044aa:	aaa    
  4044ab:	stos   BYTE PTR es:[edi],al
  4044ac:	fwait
  4044ad:	mov    ah,0xca
  4044af:	adc    al,0x5b
  4044b1:	jg     0x4044fc
  4044b3:	xchg   edi,eax
  4044b4:	or     BYTE PTR [esp+ebx*8-0x7f],0x6e
  4044b9:	mov    ds:0x6efca356,eax
  4044be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4044bf:	or     edx,DWORD PTR [esi]
  4044c1:	and    edx,DWORD PTR [ebp+0x66]
  4044c4:	dec    esp
  4044c5:	bound  esi,QWORD PTR [ecx+0x10]
  4044c8:	pop    esp
  4044c9:	fisub  DWORD PTR [edx]
  4044cb:	int3   
  4044cc:	sub    eax,0x1104146b
  4044d1:	jne    0x404537
  4044d3:	leave  
  4044d4:	sub    DWORD PTR [ebx+0x29],esi
  4044d7:	xchg   ecx,eax
  4044d8:	fwait
  4044d9:	cdq    
  4044da:	or     cl,BYTE PTR [ecx+0xa]
  4044dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4044de:	dec    ecx
  4044df:	out    0x70,al
  4044e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4044e2:	sbb    al,0x25
  4044e4:	inc    edx
  4044e5:	rcl    DWORD PTR [ebx],0xee
  4044e8:	mov    ds:0x3218f5d1,al
  4044ed:	inc    esi
  4044ee:	call   0xb3e8441f
  4044f3:	cmc    
  4044f4:	sub    ch,BYTE PTR [ecx+0x7]
  4044f7:	jecxz  0x40448d
  4044f9:	adc    BYTE PTR [bx+si-0x6543],bh
  4044fe:	xchg   edx,eax
  4044ff:	dec    ebx
  404500:	cmp    BYTE PTR [ebp+0x7684a0fc],0xc9
  404507:	mov    bl,0xdb
  404509:	sub    al,0x33
  40450b:	dec    esi
  40450c:	rol    DWORD PTR [esi+ebp*4],1
  40450f:	xchg   edi,eax
  404510:	and    BYTE PTR [esi-0x31],0x33
  404514:	in     eax,dx
  404515:	pop    es
  404516:	mov    edx,0xa9da94a0
  40451b:	mov    ecx,0x7bde5b42
  404520:	push   ebp
  404521:	stos   DWORD PTR es:[edi],eax
  404522:	jecxz  0x4044ca
  404524:	scas   al,BYTE PTR es:[edi]
  404525:	cmc    
  404526:	test   al,0x1a
  404528:	push   esp
  404529:	lds    ecx,FWORD PTR [edi]
  40452b:	call   FWORD PTR [edx+0x18]
  40452e:	aam    0xb2
  404530:	cs sbb eax,0x7582d0f
  404536:	cmp    eax,0xe335e115
  40453b:	sahf   
  40453c:	xor    DWORD PTR [ecx],eax
  40453e:	in     al,dx
  40453f:	sbb    eax,0x1be0ca3c
  404544:	fs dec edi
  404546:	sub    cl,BYTE PTR [ebx-0x19befe22]
  40454c:	mov    ebp,0x65aba061
  404551:	or     bh,BYTE PTR [ecx-0x66]
  404554:	(bad)  
  404555:	cli    
  404556:	xchg   edi,eax
  404557:	fld    DWORD PTR [ecx+0x28]
  40455a:	xchg   ebp,eax
  40455b:	sub    eax,DWORD PTR [edx+eax*4]
  40455e:	cli    
  40455f:	and    dh,BYTE PTR [ebx]
  404561:	shl    DWORD PTR [ecx],cl
  404563:	cs jmp 0x4045b4
  404566:	pushf  
  404567:	rcl    DWORD PTR [esi],0xa3
  40456a:	and    DWORD PTR [edx+0x6af81060],ebp
  404570:	int3   
  404571:	pop    esi
  404572:	jmp    0xb8dd8a7c
  404577:	pop    edi
  404578:	mov    edi,0xf3d1bfdd
  40457d:	jbe    0x404524
  40457f:	or     DWORD PTR [esi],ecx
  404581:	call   0x62b3d38f
  404586:	cs jo  0x404588
  404589:	pop    ss
  40458a:	js     0x40457c
  40458c:	and    ecx,DWORD PTR [esi+0x47]
  40458f:	xchg   DWORD PTR ds:0xed08293d,ebp
  404595:	arpl   WORD PTR [ebx+ebx*4-0xd],bx
  404599:	push   edx
  40459a:	(bad)  
  40459b:	cmp    al,0xac
  40459d:	mov    dl,dh
  40459f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4045a0:	jno    0x404618
  4045a2:	jp     0x4045ed
  4045a4:	add    edx,edx
  4045a6:	mov    ebx,0xf911820f
  4045ab:	(bad)  
  4045ac:	jmp    DWORD PTR [ecx]
  4045ae:	adc    eax,0x42fd82
  4045b3:	mov    edx,DWORD PTR [ebp-0x8]
  4045b6:	jmp    0x404916
  4045bb:	push   ss
  4045bc:	jge    0x404620
  4045be:	add    BYTE PTR [ecx+0x73],dh
  4045c1:	jb     0x4045c8
  4045c3:	inc    edi
  4045c4:	sbb    ch,BYTE PTR [ecx+edx*2]
  4045c7:	add    al,0x74
  4045c9:	mov    DWORD PTR [ebx+0xc],edi
  4045cc:	and    al,0x70
  4045ce:	jo     0x40460d
  4045d0:	jge    0x404642
  4045d2:	jo     0x4045e1
  4045d4:	mov    eax,ds:0x6439f9
  4045d9:	mov    edi,DWORD PTR [edi]
  4045db:	out    0xa7,eax
  4045dd:	les    edx,FWORD PTR [edi-0x56b2a3f9]
  4045e3:	jp     0x4045cc
  4045e5:	mov    ebp,0xda25fe5f
  4045ea:	mov    ds:0xe20efc7e,eax
  4045ef:	sbb    al,0x98
  4045f1:	jnp    0x404601
  4045f3:	push   eax
  4045f4:	or     ecx,DWORD PTR [edx+0x38900a05]
  4045fa:	dec    edx
  4045fb:	xor    BYTE PTR [ecx],ah
  4045fd:	sbb    DWORD PTR [ecx],edi
  4045ff:	out    0x26,eax
  404601:	(bad)  
  404603:	sti    
  404604:	mov    bl,0x5f
  404606:	icebp  
  404607:	popf   
  404608:	pop    ecx
  404609:	mov    dl,0xe
  40460b:	xor    cl,BYTE PTR [edi]
  40460d:	xor    BYTE PTR [ebp+0x0],dh
  404610:	sti    
  404611:	mov    edi,0x7f4c3a89
  404616:	out    0xa7,al
  404618:	out    0x92,al
  40461a:	xor    eax,0x4d81c983
  40461f:	fyl2x  
  404621:	xchg   esp,eax
  404622:	sub    edx,DWORD PTR [esi+edi*1]
  404625:	inc    edx
  404626:	sub    eax,0xe71c7429
  40462b:	push   edi
  40462c:	ins    DWORD PTR es:[edi],dx
  40462d:	ret    0x137
  404630:	in     eax,dx
  404631:	dec    ecx
  404632:	jbe    0x40462d
  404634:	and    ch,BYTE PTR [ecx+edx*8]
  404637:	xlat   BYTE PTR ds:[ebx]
  404638:	push   esp
  404639:	lods   al,BYTE PTR ds:[esi]
  40463a:	dec    edx
  40463b:	ds test al,0xa6
  40463e:	mov    ah,BYTE PTR [bx]
  404641:	mov    DWORD PTR ds:0x8d690c5,ecx
  404647:	popf   
  404648:	pop    edx
  404649:	sti    
  40464a:	dec    esp
  40464b:	leave  
  40464c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40464d:	repnz adc al,0x60
  404650:	sbb    esp,edx
  404652:	(bad)  
  404653:	(bad)  
  404654:	ficomp WORD PTR [edx+0x6df02544]
  40465a:	inc    ebp
  40465b:	xchg   esp,eax
  40465c:	ror    ch,cl
  40465e:	or     esp,DWORD PTR [ebx]
  404660:	lds    edx,FWORD PTR [bx-0x24dd]
  404665:	je     0x404683
  404667:	jmp    0x4663ebff
  40466c:	rol    DWORD PTR [ebx+0x39],cl
  40466f:	ins    DWORD PTR es:[edi],dx
  404670:	retf   0x296
  404673:	sub    BYTE PTR [edx],dh
  404675:	fnstsw WORD PTR [esi-0x95acc46]
  40467b:	xor    al,0x8a
  40467d:	mov    bl,0x87
  40467f:	pusha  
  404680:	mov    ah,0xcb
  404682:	mov    dl,0xe2
  404684:	jo     0x4046d6
  404686:	mov    edi,0x44dca948
  40468b:	xor    ebp,DWORD PTR [eax+0x93a55b4]
  404691:	add    BYTE PTR [ebx],bl
  404693:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404694:	sub    BYTE PTR [ecx-0x16],bh
  404697:	and    dl,BYTE PTR [ebp+0x5f1f97b6]
  40469d:	jl     0x404678
  40469f:	or     al,0xeb
  4046a1:	in     al,dx
  4046a2:	pusha  
  4046a3:	icebp  
  4046a4:	sahf   
  4046a5:	and    edi,ecx
  4046a7:	and    ebp,DWORD PTR [edx-0x110550f]
  4046ad:	mov    esp,0x8e592362
  4046b2:	pop    ss
  4046b3:	pop    ebx
  4046b4:	aas    
  4046b5:	retf   
  4046b6:	and    DWORD PTR [edi-0x4a],esp
  4046b9:	loope  0x4046a3
  4046bb:	test   DWORD PTR [edx],ebp
  4046bd:	jp     0x404685
  4046bf:	push   ebx
  4046c0:	mov    al,0x35
  4046c2:	imul   esi,DWORD PTR [eax+0x559c26d2],0x3a
  4046c9:	daa    
  4046ca:	ror    ebp,1
  4046cc:	push   esp
  4046cd:	jne    0x404678
  4046cf:	mov    esp,edx
  4046d1:	add    dl,BYTE PTR [ebx]
  4046d3:	adc    eax,0x177f2269
  4046d8:	scas   al,BYTE PTR es:[edi]
  4046d9:	jg     0x40465c
  4046db:	(bad)  
  4046dc:	add    BYTE PTR ds:[ebx-0x1eb12c65],0xc7
  4046e4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4046e5:	and    DWORD PTR [eax],esp
  4046e7:	pop    ebp
  4046e8:	xor    BYTE PTR [eax],ch
  4046ea:	dec    ebx
  4046eb:	or     esp,esi
  4046ed:	imul   esp,ebx,0xb6a3a73a
  4046f3:	xchg   esp,eax
  4046f4:	and    BYTE PTR [edx-0x297a3484],bl
  4046fa:	push   edx
  4046fb:	pop    edx
  4046fc:	stc    
  4046fd:	sub    DWORD PTR [ecx+0x6b],0x71
  404701:	push   es
  404702:	inc    esp
  404703:	pop    esp
  404704:	inc    edi
  404705:	sbb    edx,edi
  404707:	sbb    BYTE PTR [edx-0x63030481],bh
  40470d:	xchg   ebp,eax
  40470e:	pop    ebx
  40470f:	sub    bh,ch
  404711:	lods   eax,DWORD PTR ds:[esi]
  404712:	jns    0x4046c9
  404714:	cmp    DWORD PTR [ebp-0x304e3a43],0x8106861e
  40471e:	mov    ds:0x982db89c,al
  404723:	dec    bx
  404725:	aas    
  404726:	dec    ebx
  404727:	pop    ebp
  404728:	hlt    
  404729:	pop    eax
  40472a:	ret    
  40472b:	adc    DWORD PTR [edi-0x75d7eb1e],edi
  404731:	int    0x7
  404733:	adc    eax,0xefcadda5
  404738:	xor    ebx,edx
  40473a:	mov    DWORD PTR [ebx+0x2cf76111],eax
  404740:	bound  ebx,QWORD PTR [ebp+esi*1+0x3280076b]
  404747:	add    eax,0x857a4cec
  40474c:	dec    edi
  40474d:	pop    ecx
  40474e:	ror    BYTE PTR [edi+ebx*1-0x5f],0xb9
  404753:	pusha  
  404754:	mov    al,0x67
  404756:	nop
  404757:	jmp    FWORD PTR [ebx+0x5862beb9]
  40475d:	cwd    
  40475f:	mov    ds:0xbff4e1fd,al
  404764:	add    DWORD PTR [di+0x8b5],esp
  404769:	jp     0x4046ee
  40476b:	stos   BYTE PTR es:[edi],al
  40476c:	out    dx,al
  40476d:	xchg   ebp,eax
  40476e:	enter  0x2255,0x6
  404772:	out    dx,eax
  404773:	stos   DWORD PTR es:[edi],eax
  404774:	add    edi,esi
  404776:	addr16 jns 0x40477d
  404779:	ror    DWORD PTR [edx],0xbf
  40477c:	out    dx,al
  40477d:	ja     0x40477b
  40477f:	adc    DWORD PTR [edx],eax
  404781:	mov    esp,0xee2aa8e1
  404786:	shl    DWORD PTR [esi],1
  404788:	mov    dh,0xef
  40478a:	addr16 push cs
  40478c:	dec    esi
  40478d:	into   
  40478e:	jnp    0x4047f7
  404790:	into   
  404791:	fwait
  404792:	xor    al,0x79
  404794:	shr    edx,cl
  404796:	int3   
  404797:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404798:	nop
  404799:	mov    eax,ds:0xfd0b324
  40479e:	adc    ebx,DWORD PTR [esi]
  4047a0:	icebp  
  4047a1:	mov    al,ss:0xc8bc4616
  4047a7:	mov    esp,0x1d75dc62
  4047ac:	add    ebp,DWORD PTR [edx+0x556b3865]
  4047b2:	or     ebp,edi
  4047b4:	inc    ebx
  4047b5:	xchg   esi,eax
  4047b6:	xor    ecx,edi
  4047b8:	mov    ebx,0xe09d7e90
  4047bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4047be:	cdq    
  4047bf:	test   al,0x62
  4047c1:	mov    dl,0x4d
  4047c3:	push   edi
  4047c4:	mov    eax,0x1f00cefb
  4047c9:	in     al,dx
  4047ca:	fcomp  QWORD PTR [esp+ebp*4]
  4047cd:	xor    BYTE PTR [ecx-0xe81b2],0x4a
  4047d4:	shl    ebx,0xe0
  4047d7:	popf   
  4047d8:	stc    
  4047d9:	cli    
  4047da:	dec    esp
  4047db:	xchg   ebp,eax
  4047dc:	jnp    0x4047a7
  4047de:	jg     0x404813
  4047e0:	adc    al,0x53
  4047e2:	arpl   ax,dx
  4047e4:	add    al,0x81
  4047e6:	ds retf 
  4047e8:	push   edx
  4047e9:	pop    esi
  4047ea:	icebp  
  4047eb:	pop    ecx
  4047ec:	sbb    eax,0x51070f40
  4047f1:	outs   dx,DWORD PTR ds:[esi]
  4047f2:	mov    ebp,0xb2fe05a1
  4047f7:	xor    esi,eax
  4047f9:	cli    
  4047fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4047fb:	call   FWORD PTR [esi+eax*2]
  4047fe:	mov    eax,0xb8fa52d8
  404803:	lds    edx,FWORD PTR [eax-0x7e]
  404806:	or     eax,DWORD PTR [ecx]
  404808:	push   ebp
  404809:	icebp  
  40480a:	aad    0x84
  40480c:	test   BYTE PTR [ebx+0x48],bh
  40480f:	mov    esp,0x9cd53ff8
  404814:	dec    esi
  404815:	jge    0x404876
  404817:	and    bh,ah
  404819:	jp     0x4047ff
  40481b:	mov    ecx,ecx
  40481d:	mov    esi,0xef07ac05
  404822:	mov    ds,WORD PTR [edi+ebp*4-0xb]
  404826:	pop    edx
  404827:	bound  eax,QWORD PTR [edx+0x72c03630]
  40482d:	retf   0x3794
  404830:	sahf   
  404831:	mov    edi,ebx
  404833:	popa   
  404834:	adc    al,0x7
  404836:	(bad)  
  404837:	push   ecx
  404838:	pop    ecx
  404839:	xchg   edi,eax
  40483a:	call   0x915b:0x6a2448c2
  404841:	xor    al,0xf
  404843:	mov    ah,BYTE PTR [edi]
  404845:	add    DWORD PTR [edx+0x2f],esi
  404848:	mov    eax,0x99bffe25
  40484d:	mov    ds:0x9c463572,eax
  404852:	mov    edx,0x3f4fdd17
  404857:	dec    eax
  404858:	nop
  404859:	sub    al,0x7
  40485b:	(bad)  
  40485d:	test   BYTE PTR [eax],0x59
  404860:	add    BYTE PTR [ecx],bh
  404862:	add    BYTE PTR [ebx-0x37],dh
  404865:	mov    bh,0x42
  404867:	pop    edx
  404868:	mov    edx,0xf92272ae
  40486d:	jge    0x4048de
  40486f:	mov    edi,0xefa3c2f2
  404874:	xchg   BYTE PTR [ebp-0x34],bl
  404877:	loope  0x4048b6
  404879:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40487a:	das    
  40487b:	jge    0x404874
  40487d:	jecxz  0x404835
  40487f:	mov    ah,0x25
  404881:	xchg   DWORD PTR [eax],edx
  404883:	call   0x291c:0x6a997682
  40488a:	mov    dl,0x7d
  40488c:	out    0x8a,eax
  40488e:	popf   
  40488f:	xor    bl,BYTE PTR [edx-0x62]
  404892:	jecxz  0x40483e
  404894:	cmp    eax,0xc595dec1
  404899:	js     0x4048b3
  40489b:	xor    eax,0x58f45223
  4048a0:	pop    ds
  4048a1:	in     eax,dx
  4048a2:	iret   
  4048a3:	lahf   
  4048a4:	mov    ecx,0xcb60dbc4
  4048a9:	in     eax,0xc3
  4048ab:	or     ebx,DWORD PTR [edi]
  4048ad:	mov    eax,0xdd2fc8a
  4048b2:	inc    ebx
  4048b3:	daa    
  4048b4:	test   DWORD PTR [edi],esi
  4048b6:	repnz cmp bh,dh
  4048b9:	add    eax,0xd2fec495
  4048be:	adc    al,0x96
  4048c0:	fnclex 
  4048c2:	cmp    ch,BYTE PTR [edi]
  4048c4:	aad    0x24
  4048c6:	mov    edi,0xc14e6eb1
  4048cb:	jae    0x404878
  4048cd:	scas   al,BYTE PTR es:[edi]
  4048ce:	cld    
  4048cf:	in     al,dx
  4048d0:	jb     0x40486d
  4048d2:	xchg   ebx,eax
  4048d3:	inc    edx
  4048d4:	jp     0x404918
  4048d6:	xor    DWORD PTR [eax+0x7a147851],0xfffffff0
  4048dd:	xchg   esi,eax
  4048de:	mov    ebp,0x53a47668
  4048e3:	jmp    FWORD PTR cs:[esi-0x47]
  4048e7:	mov    BYTE PTR [ebp-0x67],bl
  4048ea:	sub    al,0x2
  4048ec:	fs push ds
  4048ee:	les    ebx,FWORD PTR [ecx-0x7aea9c48]
  4048f4:	stc    
  4048f5:	sub    eax,0x503d7330
  4048fa:	dec    esi
  4048fb:	jmp    0x40496b
  4048fd:	in     al,dx
  4048fe:	icebp  
  4048ff:	cmc    
  404900:	addr16 push ebx
  404902:	push   ebx
  404903:	jg     0x404906
  404905:	mov    edx,0xfc5a26f3
  40490a:	cmc    
  40490b:	jno    0x404916
  40490d:	jecxz  0x404942
  40490f:	dec    eax
  404910:	cld    
  404911:	mov    edi,0x8569ff39
  404916:	mov    eax,DWORD PTR [ebp-0xc]
  404919:	xor    edx,ecx
  40491b:	add    edx,esi
  40491d:	cmp    edx,eax
  40491f:	mov    DWORD PTR ds:0x42e11c,0x6f80
  404929:	je     0x405095
  40492f:	add    DWORD PTR ds:0x42e124,ecx
  404935:	push   ebx
  404936:	adc    DWORD PTR ds:0x42e6ff,ecx
  40493c:	push   edi
  40493d:	mov    edi,DWORD PTR [ebp+0x8]
  404940:	mov    eax,0x8a3e
  404945:	and    DWORD PTR ds:0x42e134,0x5964
  40494f:	xor    ax,WORD PTR [edi+edx*4+0x2]
  404954:	mov    edi,0x3b04
  404959:	add    ax,di
  40495c:	add    DWORD PTR ds:0x42fd05,0x42e134
  404966:	movzx  eax,ax
  404969:	and    DWORD PTR ds:0x42fd7a,0x42fcf9
  404973:	mov    DWORD PTR [ebp-0x14],eax
  404976:	sbb    DWORD PTR ds:0x42fd7e,0xc63
  404980:	mov    eax,DWORD PTR [ebp+0x8]
  404983:	add    DWORD PTR ds:0x42e703,0x6bf6
  40498d:	movzx  eax,WORD PTR [eax+edx*4]
  404991:	sbb    DWORD PTR ds:0x42fd82,0x42fd7e
  40499b:	xor    eax,0x8a3e
  4049a0:	add    DWORD PTR ds:0x42e707,0x26eb
  4049aa:	jmp    0x404d0a
  4049af:	fdiv   QWORD PTR [esi]
  4049b1:	dec    esp
  4049b2:	rsqrtps xmm6,XMMWORD PTR [ecx+0x5b]
  4049b6:	icebp  
  4049b7:	inc    eax
  4049b8:	sub    esp,DWORD PTR [ebp-0x15]
  4049bb:	int    0x9e
  4049bd:	mov    ecx,0x7021c98b
  4049c2:	jo     0x404a01
  4049c4:	jge    0x404a36
  4049c6:	jo     0x4049c3
  4049c8:	dec    ebp
  4049c9:	push   DWORD PTR ds:0x872c34a2
  4049cf:	push   cs
  4049d0:	cdq    
  4049d1:	mov    ebx,0x98a9bcf9
  4049d6:	xor    BYTE PTR [esi+edi*8+0x9],ah
  4049da:	pop    eax
  4049db:	adc    bl,cl
  4049dd:	push   ebp
  4049de:	adc    al,0x22
  4049e0:	adc    eax,edx
  4049e2:	push   ss
  4049e3:	sub    ebx,0x4e825fce
  4049e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4049ea:	scas   eax,DWORD PTR es:[edi]
  4049eb:	test   BYTE PTR [esi+0x54b6fe70],al
  4049f1:	inc    eax
  4049f2:	retf   
  4049f3:	cmp    al,0xee
  4049f5:	std    
  4049f6:	add    esi,0x2a
  4049f9:	or     DWORD PTR [edx-0x37],ebx
  4049fc:	add    DWORD PTR [ebp-0xf],esi
  4049ff:	mov    fs,WORD PTR [ebp-0x50dedfd5]
  404a05:	jge    0x404a73
  404a07:	arpl   WORD PTR [ebx-0x1ae70729],ax
  404a0d:	mov    ?,WORD PTR es:[esi]
  404a10:	repnz push 0xaee1ba9
  404a16:	push   edi
  404a17:	test   eax,esi
  404a19:	xor    eax,0x82155811
  404a1e:	mov    ebx,0xf18ed3ed
  404a23:	sub    DWORD PTR [ecx],edi
  404a25:	push   edi
  404a26:	mov    dh,0x8a
  404a28:	jg     0x4049fa
  404a2a:	mov    eax,DWORD PTR [esi-0x5d]
  404a2d:	push   ebp
  404a2e:	xchg   ebx,eax
  404a2f:	xchg   esp,eax
  404a30:	pop    eax
  404a31:	out    0xee,al
  404a33:	fs stos DWORD PTR es:[edi],eax
  404a35:	mov    al,ds:0x827801e2
  404a3a:	mov    cl,0xff
  404a3c:	xchg   esp,eax
  404a3d:	mov    ds,WORD PTR [ebp+0x35]
  404a40:	test   BYTE PTR [ebp+0x38],ah
  404a43:	mov    ebp,0xf8472ec
  404a48:	sbb    BYTE PTR [eax+0x19],bl
  404a4b:	fst    QWORD PTR [edi+0x26]
  404a4e:	xor    edx,DWORD PTR [esi-0x181ea163]
  404a54:	loop   0x404a48
  404a56:	mov    dh,0xf7
  404a58:	addr16 fucomip st,st(1)
  404a5b:	pop    eax
  404a5c:	sbb    esi,DWORD PTR [ebx+ebx*2-0x55]
  404a60:	xchg   DWORD PTR [ebx+ecx*8+0x7a],esp
  404a64:	clc    
  404a65:	sub    al,0x37
  404a67:	xchg   esi,eax
  404a68:	push   eax
  404a69:	(bad)  
  404a6a:	arpl   WORD PTR [esi],ax
  404a6c:	sbb    ah,dh
  404a6e:	jmp    0x12551f78
  404a73:	dec    eax
  404a74:	sbb    bh,BYTE PTR ds:0x286f69f5
  404a7a:	and    dl,al
  404a7c:	ret    0x71d9
  404a7f:	loop   0x404acf
  404a81:	retf   
  404a82:	ds nop
  404a84:	daa    
  404a85:	jne    0x404afd
  404a87:	adc    eax,edi
  404a89:	adc    edi,esp
  404a8b:	aad    0x23
  404a8d:	ins    BYTE PTR es:[edi],dx
  404a8e:	jne    0x404a55
  404a90:	sub    BYTE PTR [ecx],0x8b
  404a93:	mov    al,ds:0xeb6b2b37
  404a98:	test   ch,dh
  404a9a:	sbb    edx,DWORD PTR [eax+0x47]
  404a9d:	and    dh,BYTE PTR [eax]
  404a9f:	jo     0x404b1d
  404aa1:	push   esi
  404aa2:	sub    eax,0x4837a58f
  404aa7:	jbe    0x404a5e
  404aa9:	xchg   ecx,eax
  404aaa:	xchg   esi,eax
  404aab:	mov    ebx,0xcbe3d866
  404ab0:	adc    BYTE PTR [edx],dl
  404ab2:	and    al,0xc0
  404ab4:	pop    es
  404ab5:	in     al,0xdc
  404ab7:	pop    ds
  404ab8:	mov    BYTE PTR ds:0x4308a13,ah
  404abe:	popf   
  404abf:	cmc    
  404ac0:	shl    BYTE PTR [esi-0x502ea1e7],1
  404ac6:	out    0x96,al
  404ac8:	addr16 xchg edi,eax
  404aca:	js     0x404a66
  404acc:	test   BYTE PTR [ebx-0x3433f884],cl
  404ad2:	dec    edi
  404ad3:	ret    0xec80
  404ad6:	pusha  
  404ad7:	popf   
  404ad8:	jmp    0xbce972b
  404add:	(bad)  
  404ade:	pop    ds
  404adf:	push   ecx
  404ae0:	and    eax,0x3fe20d8f
  404ae5:	cwde   
  404ae6:	je     0x404b59
  404ae8:	fwait
  404ae9:	mov    edx,0x5c3b4d7f
  404aee:	dec    edx
  404aef:	cmp    dh,dh
  404af1:	mov    esi,0xe30dd848
  404af7:	cmp    al,0x99
  404af9:	aas    
  404afa:	scas   eax,DWORD PTR es:[edi]
  404afb:	push   edi
  404afc:	ficomp DWORD PTR [ebp-0x1a13611a]
  404b02:	out    0x52,eax
  404b04:	test   ecx,eax
  404b06:	add    eax,0x5d2a2b83
  404b0b:	dec    esp
  404b0c:	pop    edi
  404b0d:	jno    0x404b40
  404b0f:	mov    ch,0xf9
  404b11:	xor    al,0x43
  404b13:	popa   
  404b14:	xlat   BYTE PTR ds:[ebx]
  404b15:	push   ecx
  404b16:	sbb    al,0x9e
  404b18:	add    BYTE PTR [esi+0x4a61054b],0x30
  404b1f:	loopne 0x404aa8
  404b21:	jp     0x404b18
  404b23:	cmp    al,0x9d
  404b25:	dec    eax
  404b26:	xor    BYTE PTR [edi-0x31],ch
  404b29:	push   ss
  404b2a:	aad    0xe7
  404b2c:	inc    edx
  404b2d:	sub    al,0x8d
  404b2f:	xlat   BYTE PTR ds:[ebx]
  404b30:	xor    al,0x78
  404b32:	mov    al,0x5b
  404b34:	not    DWORD PTR [ebp-0x27ea6cce]
  404b3a:	fsub   QWORD PTR [edx+edx*4]
  404b3d:	(bad)  
  404b3e:	pop    ss
  404b3f:	loope  0x404afc
  404b41:	aaa    
  404b42:	adc    BYTE PTR [edx+0x56],bl
  404b45:	xor    edi,DWORD PTR [esi+ebx*2+0x133e5d29]
  404b4c:	sbb    al,0xd4
  404b4e:	jns    0x404b86
  404b50:	jo     0x404af1
  404b52:	test   edx,ebp
  404b54:	jp     0x404b07
  404b56:	fcmovu st,st(7)
  404b58:	in     al,dx
  404b59:	int3   
  404b5a:	das    
  404b5b:	push   ebx
  404b5c:	sbb    al,BYTE PTR [ebp-0x1c982e10]
  404b62:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404b63:	push   ds
  404b64:	or     eax,0x6af0cdc7
  404b69:	jae    0x404bac
  404b6b:	mov    esp,0xd212ac7
  404b70:	jp     0x404bb1
  404b72:	xor    al,0x60
  404b74:	dec    eax
  404b75:	(bad)  
  404b77:	dec    DWORD PTR [esi-0x4c]
  404b7a:	jp     0x404bdf
  404b7c:	test   BYTE PTR [esi+eax*4],bl
  404b7f:	pop    ss
  404b80:	sub    eax,0x56291aa9
  404b85:	xor    ah,BYTE PTR [edi-0x65a18ee3]
  404b8b:	je     0x404b59
  404b8d:	imul   esi,esi,0x7c8b833a
  404b93:	loopne 0x404b2d
  404b95:	scas   eax,DWORD PTR es:[edi]
  404b96:	and    DWORD PTR [edx+0x742c53a1],eax
  404b9c:	(bad)  
  404b9e:	shr    BYTE PTR [eax],1
  404ba0:	mov    edx,0x9326d633
  404ba5:	hlt    
  404ba6:	scas   al,BYTE PTR es:[edi]
  404ba7:	xchg   edx,eax
  404ba8:	dec    edi
  404ba9:	sub    al,0x49
  404bab:	inc    ebp
  404bac:	push   0xffffffe7
  404bae:	xor    BYTE PTR [edi-0x49e8a6f6],0xc4
  404bb5:	call   FWORD PTR [edx+0x7]
  404bb8:	mov    BYTE PTR [ebx-0x7f],dl
  404bbb:	rcr    BYTE PTR [ecx],1
  404bbd:	pusha  
  404bbe:	(bad)  
  404bbf:	and    al,0x66
  404bc1:	push   ss
  404bc2:	daa    
  404bc3:	sub    al,0x67
  404bc5:	stos   DWORD PTR es:[edi],eax
  404bc6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404bc7:	sub    DWORD PTR [ebp-0x39e6cb31],0xacd87d0d
  404bd1:	mov    ah,0x5f
  404bd3:	mov    esi,0xccce9584
  404bd8:	dec    eax
  404bd9:	lods   eax,DWORD PTR ds:[esi]
  404bda:	sbb    dh,dl
  404bdc:	cmp    al,ch
  404bde:	je     0x404b71
  404be0:	sub    al,0x78
  404be2:	cmp    dl,BYTE PTR [esi-0x59]
  404be5:	sar    BYTE PTR [eax+0x17],0xad
  404be9:	mov    BYTE PTR ds:0x25cb9294,al
  404bef:	xor    BYTE PTR [edx],bh
  404bf1:	mov    ch,0x76
  404bf3:	out    dx,al
  404bf4:	sbb    ebp,DWORD PTR [edx-0x2a3a3ba3]
  404bfa:	icebp  
  404bfb:	cwde   
  404bfc:	mov    al,BYTE PTR [edx+0x6e]
  404bff:	sbb    BYTE PTR [ebx-0x615f3bc1],al
  404c05:	inc    ecx
  404c06:	(bad)  
  404c07:	or     eax,ebx
  404c09:	inc    esp
  404c0a:	sahf   
  404c0b:	or     eax,0x620f1a2b
  404c10:	sbb    bl,BYTE PTR [ebx+0x5d]
  404c13:	(bad)  
  404c14:	xor    esp,DWORD PTR [edx-0x76d6130e]
  404c1a:	mov    ?,WORD PTR [eax+0xebaecde]
  404c20:	pop    esp
  404c21:	push   esi
  404c22:	push   edx
  404c23:	add    al,0xc2
  404c25:	in     al,0x7e
  404c27:	mov    edi,edi
  404c29:	(bad)  
  404c2a:	pop    ss
  404c2b:	retf   
  404c2c:	popa   
  404c2d:	mov    cl,0x8
  404c2f:	out    dx,al
  404c30:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404c31:	inc    ebx
  404c32:	adc    eax,0x809aded5
  404c37:	je     0x404bd3
  404c39:	pushf  
  404c3a:	mov    ebp,0x2cd4fb2f
  404c3f:	sbb    eax,0xf14800bf
  404c44:	mov    dl,0xe9
  404c46:	jmp    0xf5c3:0x9f88ad67
  404c4d:	sahf   
  404c4e:	sti    
  404c4f:	in     eax,dx
  404c50:	pushf  
  404c51:	(bad)  
  404c52:	sub    eax,DWORD PTR [ecx]
  404c54:	sbb    eax,0x96a6a72e
  404c59:	sbb    DWORD PTR [ebx],ecx
  404c5b:	sub    edi,DWORD PTR [esi-0x76]
  404c5e:	femms  
  404c60:	mov    bh,0x37
  404c62:	clc    
  404c63:	adc    ebx,ebp
  404c65:	jp     0x404cde
  404c67:	mov    ds:0x57b482db,eax
  404c6c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404c6d:	test   eax,0x5f024be7
  404c72:	xor    al,0xc7
  404c74:	mov    eax,0x441462
  404c79:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404c7a:	ret    
  404c7b:	sbb    eax,0x58401299
  404c80:	es ins DWORD PTR es:[edi],dx
  404c82:	xchg   ebx,eax
  404c83:	lea    ecx,[eax+ebp*4]
  404c86:	ss jp  0x404c09
  404c89:	jl     0x404c46
  404c8b:	(bad)  
  404c8c:	call   0x99de2448
  404c91:	mov    edi,DWORD PTR [ebx+0x58999b45]
  404c97:	imul   eax,DWORD PTR [ebx-0x5e108f1f],0xffffffb6
  404c9e:	or     DWORD PTR [ebp+edx*4-0xf],ebp
  404ca2:	sbb    esp,DWORD PTR [esi-0x64837165]
  404ca8:	xor    al,0xe3
  404caa:	mov    esp,0x704ae4c9
  404caf:	into   
  404cb0:	rol    BYTE PTR [esi+0x75],1
  404cb3:	add    ch,dl
  404cb5:	xor    BYTE PTR [ebx-0x55],dl
  404cb8:	cmp    ebp,edx
  404cba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404cbb:	adc    DWORD PTR ds:0x1ea6856b,edi
  404cc1:	or     BYTE PTR [edi+0x1c],0xe0
  404cc5:	jo     0x404c70
  404cc7:	sahf   
  404cc8:	and    bh,BYTE PTR [edi-0x26fe7fad]
  404cce:	fldcw  WORD PTR [edx+0x1bbfc0e3]
  404cd4:	mov    dl,0x2c
  404cd6:	jae    0x404c6b
  404cd8:	xchg   ebx,eax
  404cd9:	adc    eax,0x19a7bd14
  404cde:	xchg   ebp,eax
  404cdf:	jbe    0x404c92
  404ce1:	sbb    al,BYTE PTR [ecx]
  404ce3:	sahf   
  404ce4:	push   ecx
  404ce5:	dec    edi
  404ce6:	out    dx,eax
  404ce7:	jmp    0x831e8b0c
  404cec:	xor    al,0x66
  404cee:	daa    
  404cef:	aam    0xcd
  404cf1:	cmp    BYTE PTR [edi-0x24],0xd1
  404cf5:	and    eax,0x2e138162
  404cfa:	scas   eax,DWORD PTR es:[edi]
  404cfb:	jecxz  0x404cd5
  404cfd:	bound  esi,QWORD PTR [ebp+0x7c]
  404d00:	iret   
  404d01:	lods   eax,DWORD PTR ds:[esi]
  404d02:	sub    ecx,DWORD PTR [edx+0x296aca72]
  404d08:	mov    dl,0xda
  404d0a:	add    eax,edi
  404d0c:	mov    DWORD PTR ds:0x42e6ff,0xe58
  404d16:	mov    edi,DWORD PTR [ebp-0x14]
  404d19:	mov    DWORD PTR ds:0x42e6eb,0x3918
  404d23:	mov    BYTE PTR [ebp+edi*1-0x58],al
  404d27:	jmp    0x405087
  404d2c:	or     DWORD PTR [ebp-0x1d],esi
  404d2f:	daa    
  404d30:	arpl   WORD PTR [ecx+0x5bcd71c9],si
  404d36:	fisttp QWORD PTR [eax+0x31]
  404d39:	icebp  
  404d3a:	imul   edx,DWORD PTR [esi-0x6a],0x2e
  404d3e:	jo     0x404db0
  404d40:	cmp    eax,0x1570707d
  404d45:	stos   DWORD PTR es:[edi],eax
  404d46:	and    al,cl
  404d48:	cmp    ah,dl
  404d4a:	pop    es
  404d4b:	xchg   edx,eax
  404d4c:	jno    0x404ce1
  404d4e:	cmp    al,0xb7
  404d50:	inc    ebp
  404d51:	je     0x404dbf
  404d53:	jmp    0xf1176694
  404d58:	int    0xc1
  404d5a:	scas   al,BYTE PTR es:[edi]
  404d5b:	jecxz  0x404d70
  404d5d:	pushf  
  404d5e:	loope  0x404dd5
  404d60:	popf   
  404d61:	adc    eax,0x12f2c09d
  404d66:	adc    ecx,DWORD PTR [eax+0xc]
  404d69:	jg     0x404dad
  404d6b:	outs   dx,DWORD PTR ds:[esi]
  404d6c:	add    cl,0xda
  404d6f:	push   ecx
  404d70:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404d71:	pop    ss
  404d72:	in     al,0xe
  404d74:	pop    esi
  404d75:	jp     0x404daa
  404d77:	dec    edx
  404d78:	jmp    0xe802451b
  404d7d:	sub    BYTE PTR [edx+0x6e9889ba],bl
  404d83:	mov    bl,0x5c
  404d85:	jp     0x404d8a
  404d87:	ins    BYTE PTR es:[edi],dx
  404d88:	jae    0x404d1f
  404d8a:	shl    edi,0xb1
  404d8d:	les    eax,FWORD PTR [esi+ebx*2]
  404d90:	cmp    dh,dl
  404d92:	out    0xbb,al
  404d94:	push   ds
  404d95:	push   0xa400b7b
  404d9a:	jne    0x404dbb
  404d9c:	jo     0x404d4e
  404d9e:	mov    cs,esi
  404da0:	jnp    0x404d3c
  404da2:	int3   
  404da3:	push   ebp
  404da4:	and    eax,0xa66df721
  404da9:	jg     0x404e18
  404dab:	cld    
  404dac:	jg     0x404df0
  404dae:	push   ds
  404daf:	xor    eax,0xce4a10c3
  404db4:	js     0x404dd6
  404db6:	sbb    al,0x7
  404db8:	pop    ebx
  404db9:	xchg   ebp,eax
  404dba:	cs ins BYTE PTR es:[edi],dx
  404dbc:	push   0x8b2877ba
  404dc1:	ja     0x404e21
  404dc3:	cmp    DWORD PTR [edx],eax
  404dc5:	rcr    BYTE PTR [ebp-0x65],0x30
  404dc9:	call   0xe037c4c8
  404dce:	sbb    bh,BYTE PTR [ebx-0x5b1e6d76]
  404dd4:	sbb    ebx,DWORD PTR ds:0xbaa0d62d
  404dda:	into   
  404ddb:	xchg   edi,eax
  404ddc:	icebp  
  404ddd:	sub    al,0x19
  404ddf:	ins    DWORD PTR es:[edi],dx
  404de0:	out    dx,eax
  404de1:	jmp    FWORD PTR [esi+0x72]
  404de4:	push   cs
  404de5:	sbb    eax,0x97324a4
  404dea:	mov    edx,0x34803997
  404def:	into   
  404df0:	jb     0x404df6
  404df2:	cmp    ah,BYTE PTR [edx+0x5decb6a8]
  404df8:	ins    DWORD PTR es:[edi],dx
  404df9:	(bad)  
  404dfa:	in     al,0xbc
  404dfc:	inc    BYTE PTR [ecx]
  404dfe:	inc    esp
  404dff:	mov    ds:0xd47702e,al
  404e04:	imul   edx,DWORD PTR [edx-0x72],0x44
  404e08:	pop    ds
  404e09:	or     al,0x2a
  404e0b:	jae    0x404e79
  404e0d:	rep lods al,BYTE PTR ds:[esi]
  404e0f:	adc    dh,BYTE PTR [esi-0x4dbd892b]
  404e15:	aam    0xcf
  404e17:	sub    cl,cl
  404e19:	mov    ebp,DWORD PTR [ecx+0x46]
  404e1c:	push   cs
  404e1d:	cmp    eax,ebx
  404e1f:	inc    ecx
  404e20:	or     eax,DWORD PTR [ebp+esi*4-0x732258bb]
  404e27:	inc    eax
  404e28:	xchg   edi,eax
  404e29:	scas   eax,DWORD PTR es:[edi]
  404e2a:	cmp    ch,ch
  404e2c:	hlt    
  404e2d:	dec    edi
  404e2e:	push   esi
  404e2f:	ror    DWORD PTR [ecx],0x3a
  404e32:	pop    edi
  404e33:	xlat   BYTE PTR ds:[ebx]
  404e34:	cmc    
  404e35:	jb     0x404e7e
  404e37:	loop   0x404e61
  404e39:	mov    ebp,0x90752a37
  404e3e:	sub    BYTE PTR [edx+0x4e],bl
  404e41:	mov    ch,0x7e
  404e43:	cld    
  404e44:	jb     0x404e35
  404e46:	inc    ecx
  404e47:	sar    DWORD PTR [eax],1
  404e49:	popa   
  404e4a:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  404e4c:	jmp    0xa416:0x55d66bc
  404e53:	rol    dh,0x3d
  404e56:	push   esi
  404e57:	push   0xffffff80
  404e59:	lods   al,BYTE PTR ds:[esi]
  404e5a:	leave  
  404e5b:	cmc    
  404e5c:	lahf   
  404e5d:	leave  
  404e5e:	test   BYTE PTR [ebx+0x63],ah
  404e61:	jmp    0x5d6e:0xc5531114
  404e68:	xor    bl,BYTE PTR [edi]
  404e6a:	and    al,0xaa
  404e6c:	sub    ebp,DWORD PTR [ebp-0x1a]
  404e6f:	retf   0x1c6e
  404e72:	sbb    esp,DWORD PTR [eax+0x5bddadc0]
  404e78:	push   ss
  404e79:	pop    esp
  404e7a:	leave  
  404e7b:	test   dh,dh
  404e7d:	loopne 0x404e53
  404e7f:	add    al,0x53
  404e81:	imul   ecx,DWORD PTR [edx+0x2b],0x5
  404e85:	js     0x404e63
  404e87:	sub    DWORD PTR [ecx+0x30],eax
  404e8a:	call   0xbedc:0x23097f3c
  404e91:	add    ebx,eax
  404e93:	pop    ecx
  404e94:	jns    0x404e8c
  404e96:	fwait
  404e97:	rol    BYTE PTR [eax-0x1e38766],1
  404e9d:	inc    edx
  404e9e:	push   ecx
  404e9f:	pusha  
  404ea0:	retf   0xa2be
  404ea3:	sbb    al,0xbc
  404ea5:	cmp    al,0x9a
  404ea7:	popf   
  404ea8:	pop    ebp
  404ea9:	inc    ebp
  404eaa:	mov    dl,0xa6
  404eac:	add    bl,BYTE PTR [edx-0x3116248c]
  404eb2:	push   edx
  404eb3:	push   0xffffff95
  404eb5:	pop    esp
  404eb6:	sub    bh,BYTE PTR [edi-0x4]
  404eb9:	ror    BYTE PTR [eax-0x4f7ec7bd],0xf7
  404ec0:	add    BYTE PTR [esi],0xe6
  404ec3:	pop    ebp
  404ec4:	xchg   ecx,eax
  404ec5:	dec    ebp
  404ec6:	jb     0x404ed3
  404ec8:	sbb    BYTE PTR [eax+0x18],bl
  404ecb:	aad    0xe0
  404ecd:	rol    BYTE PTR [ecx-0x6ed221f],0x88
  404ed4:	sbb    cl,dh
  404ed6:	(bad)  
  404ed7:	fistp  QWORD PTR [edx+0x40]
  404eda:	xchg   edx,eax
  404edb:	test   DWORD PTR [esi+0x77],edi
  404ede:	sar    DWORD PTR [edi],cl
  404ee0:	lods   al,BYTE PTR ds:[esi]
  404ee1:	cmp    eax,0x96d1b485
  404ee6:	dec    ecx
  404ee7:	jo     0x404e9a
  404ee9:	push   ds
  404eea:	fs mov ah,0xeb
  404eed:	scas   eax,DWORD PTR es:[edi]
  404eee:	cmp    edx,esi
  404ef0:	xchg   esi,eax
  404ef1:	test   al,0x25
  404ef3:	test   DWORD PTR [edx],eax
  404ef5:	inc    edx
  404ef6:	test   BYTE PTR [esi-0x41],dh
  404ef9:	pusha  
  404efa:	add    esi,DWORD PTR [ecx]
  404efc:	rcr    BYTE PTR [edi+0x6],0x1d
  404f00:	popa   
  404f01:	xchg   edi,eax
  404f02:	dec    edi
  404f03:	imul   ebx,eax,0x4f
  404f06:	rol    BYTE PTR [ebx],1
  404f08:	test   BYTE PTR [ebx+0x5749404c],0x6c
  404f0f:	jns    0x404f2b
  404f11:	bswap  esp
  404f13:	cmp    eax,0x634a3ce8
  404f18:	push   ebp
  404f19:	loope  0x404eb9
  404f1b:	ins    DWORD PTR es:[edi],dx
  404f1c:	sbb    DWORD PTR [ecx+0x70e37249],ebp
  404f22:	add    bl,BYTE PTR [edi+0x38927c6c]
  404f28:	(bad)  
  404f29:	inc    edi
  404f2a:	lahf   
  404f2b:	ror    BYTE PTR [edi],0xd
  404f2e:	stos   BYTE PTR es:[edi],al
  404f2f:	xchg   esp,eax
  404f30:	dec    esp
  404f31:	adc    BYTE PTR [esp+ebx*2-0x7d794532],bh
  404f38:	dec    ebx
  404f39:	jmp    0x1a2bba17
  404f3e:	mov    esi,0x588012f7
  404f43:	sub    al,0x38
  404f45:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404f46:	nop
  404f47:	test   BYTE PTR [ecx-0x2f],dl
  404f4a:	xor    eax,DWORD PTR [ecx+eax*4-0x1c]
  404f4e:	(bad)  
  404f4f:	clc    
  404f50:	xor    ah,ch
  404f52:	xor    DWORD PTR [eax-0x32],esi
  404f55:	sahf   
  404f56:	lods   eax,DWORD PTR ds:[esi]
  404f57:	les    edx,FWORD PTR [edx]
  404f59:	add    eax,0x76d94056
  404f5e:	fidiv  WORD PTR [eax+0x37]
  404f61:	mov    bh,dl
  404f63:	push   cs
  404f64:	push   0x46
  404f66:	mov    BYTE PTR [edi+0x2dd1baa0],0x3c
  404f6d:	leave  
  404f6e:	mov    esp,0xfa357c74
  404f73:	jg     0x404f91
  404f75:	scas   eax,DWORD PTR es:[edi]
  404f76:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404f77:	cwde   
  404f78:	leave  
  404f79:	hlt    
  404f7a:	test   al,0x27
  404f7c:	mov    esp,0x18b3f91e
  404f81:	add    eax,0xe8e10e00
  404f86:	sbb    eax,0xb279a75c
  404f8b:	into   
  404f8c:	das    
  404f8d:	mov    cl,0xc6
  404f8f:	push   cs
  404f90:	shl    BYTE PTR [ebx],1
  404f92:	shr    BYTE PTR ds:0x327e23b,cl
  404f98:	or     cl,dl
  404f9a:	and    ebx,ecx
  404f9c:	imul   ebx,DWORD PTR [ecx],0xffffffbf
  404f9f:	push   ebx
  404fa0:	out    0x4f,al
  404fa2:	mov    edx,0x63deadc8
  404fa7:	retf   
  404fa8:	xor    dl,BYTE PTR [edx]
  404faa:	mov    esp,0x930751d1
  404faf:	fidiv  DWORD PTR [ebx+0x6ddb177b]
  404fb5:	pop    edi
  404fb6:	loopne 0x404fc8
  404fb8:	lds    ecx,FWORD PTR ss:[ecx]
  404fbb:	jmp    0x404fef
  404fbd:	and    cl,dl
  404fbf:	xchg   ebx,eax
  404fc0:	jmp    0xe750c214
  404fc5:	test   eax,0xeaa879c5
  404fca:	mov    ss,WORD PTR [edx]
  404fcc:	mov    cs,WORD PTR es:[ebp+0x16492e94]
  404fd3:	mov    cl,0x60
  404fd5:	cmp    eax,0x93abff5a
  404fda:	sub    eax,0x8119d125
  404fdf:	dec    esi
  404fe0:	sti    
  404fe1:	jle    0x404f6a
  404fe3:	mov    dl,0xd9
  404fe5:	mov    BYTE PTR [edx-0x6ae8e608],0x50
  404fec:	dec    esp
  404fed:	loop   0x404f72
  404fef:	lds    edx,FWORD PTR [edx]
  404ff1:	pop    esi
  404ff2:	and    al,0x78
  404ff4:	lock mov es,eax
  404ff7:	cmp    BYTE PTR [ecx-0x33],bh
  404ffa:	jp     0x9528a0cc
  405000:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405001:	stc    
  405002:	call   0xbd4d4308
  405007:	push   ebp
  405008:	jp     0x405017
  40500a:	and    eax,0x4cf3a113
  40500f:	jl     0x404fb2
  405011:	pop    edi
  405012:	add    edx,edx
  405014:	inc    eax
  405015:	inc    ebp
  405016:	or     BYTE PTR [esi],dl
  405018:	repnz mov eax,0x64f782be
  40501e:	push   esp
  40501f:	jae    0x404ff0
  405021:	sbb    al,0xf3
  405023:	mov    ecx,0x1408e060
  405028:	inc    ebx
  405029:	push   ds
  40502a:	fwait
  40502b:	nop
  40502c:	test   edi,ecx
  40502e:	fst    DWORD PTR [eax+ebp*2-0x33]
  405032:	fcomp  DWORD PTR [eax+0x77]
  405035:	or     al,0xad
  405037:	or     ecx,0xa31e9b0c
  40503d:	pop    eax
  40503e:	std    
  40503f:	test   BYTE PTR [ebp-0x60d5133f],bl
  405045:	pop    es
  405046:	mov    al,ds:0xb43586c9
  40504b:	ins    BYTE PTR es:[edi],dx
  40504c:	sbb    DWORD PTR [ebx-0x45],0x95996d6f
  405053:	mov    ebx,0xa2aae5a0
  405058:	fucom  st(4)
  40505a:	push   esp
  40505b:	add    BYTE PTR [esi+0x13],bh
  40505e:	lea    ebx,[ebx-0x3e152398]
  405064:	pop    edx
  405065:	sbb    eax,0xd33eff4a
  40506a:	inc    ecx
  40506b:	call   0xf0f9:0x4aea7562
  405072:	aad    0xa4
  405074:	pop    edi
  405075:	mov    esp,0x77889feb
  40507a:	ret    
  40507b:	mov    ah,al
  40507d:	mov    cl,0xfb
  40507f:	inc    edi
  405080:	and    ebx,DWORD PTR [edx+0x4a]
  405083:	sub    al,0xa2
  405085:	int3   
  405086:	jbe    0x405013
  405088:	inc    ebp
  405089:	hlt    
  40508a:	inc    edx
  40508b:	cmp    edx,eax
  40508d:	jne    0x40493d
  405093:	pop    edi
  405094:	pop    ebx
  405095:	mov    eax,DWORD PTR [ebp-0x8]
  405098:	mov    edx,DWORD PTR [ebp+0x10]
  40509b:	xor    eax,ecx
  40509d:	add    eax,esi
  40509f:	mov    DWORD PTR [edx],eax
  4050a1:	mov    eax,DWORD PTR [ebp-0x8]
  4050a4:	xor    eax,ecx
  4050a6:	add    eax,esi
  4050a8:	mov    DWORD PTR [ebp+0x8],eax
  4050ab:	mov    eax,DWORD PTR [ebp+0x8]
  4050ae:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  4050b2:	mov    dl,BYTE PTR [ebp-0x1]
  4050b5:	cmp    al,dl
  4050b7:	je     0x4050fa
  4050bd:	mov    eax,DWORD PTR [ebp+0x8]
  4050c0:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  4050c4:	mov    edx,DWORD PTR [ebp+0xc]
  4050c7:	cmp    al,BYTE PTR [edx]
  4050c9:	jne    0x405480
  4050cf:	mov    eax,DWORD PTR [ebp-0x8]
  4050d2:	mov    edx,DWORD PTR [ebp+0xc]
  4050d5:	movsx  edx,BYTE PTR [edx]
  4050d8:	xor    eax,ecx
  4050da:	add    eax,esi
  4050dc:	cmp    edx,eax
  4050de:	je     0x405114
  4050e4:	mov    DWORD PTR [ebp-0x18],0x705fd8f
  4050eb:	lea    eax,[ebp-0x18]
  4050ee:	mov    DWORD PTR [ebp-0x14],eax
  4050f1:	mov    eax,DWORD PTR [ebp-0x14]
  4050f4:	add    DWORD PTR [eax],0x705fa8f
  4050fa:	mov    eax,DWORD PTR [ebp-0x10]
  4050fd:	mov    edx,DWORD PTR [ebp+0x8]
  405100:	xor    eax,ecx
  405102:	lea    eax,[eax+edx*1+0x32729c]
  405109:	mov    DWORD PTR [ebp+0x8],eax
  40510c:	inc    DWORD PTR [ebp+0xc]
  40510f:	jmp    0x4050ab
  405114:	mov    eax,DWORD PTR [ebp-0x10]
  405117:	xor    eax,ecx
  405119:	mov    ecx,DWORD PTR [ebp+0x10]
  40511c:	add    eax,esi
  40511e:	mov    DWORD PTR [ecx],eax
  405120:	jmp    0x405480
  405125:	xchg   edi,eax
  405126:	rol    DWORD PTR ds:0xb5744198,1
  40512c:	icebp  
  40512d:	lods   al,BYTE PTR ds:[esi]
  40512e:	add    al,0x98
  405130:	rol    esi,0xce
  405133:	cmp    BYTE PTR [edi+0x53],ch
  405136:	sub    esi,DWORD PTR [eax+0x70]
  405139:	cmp    eax,0xe770707d
  40513e:	lea    edi,[edx]
  405140:	jno    0x41853a77
  405146:	add    DWORD PTR [ebx+0x20d6805c],0x133f3b7d
  405150:	xchg   BYTE PTR [ecx+0x59],ch
  405153:	jge    0x4050f0
  405155:	inc    ecx
  405156:	mov    al,ds:0x24f30abb
  40515b:	or     al,0xfb
  40515d:	xchg   esi,eax
  40515e:	prefetcht2 BYTE PTR es:[ebx]
  405162:	bnd jns 0x405158
  405165:	inc    ecx
  405166:	mov    BYTE PTR gs:[eax-0xb6f9bec],dh
  40516d:	std    
  40516e:	loopne 0x405150
  405170:	fld    DWORD PTR [ebx+ebx*4-0x19]
  405174:	in     al,dx
  405175:	inc    ecx
  405176:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405177:	in     al,0x3
  405179:	or     al,0x17
  40517b:	mov    ch,0x34
  40517d:	cwde   
  40517e:	fwait
  40517f:	push   0xd4b9d604
  405184:	in     al,dx
  405185:	lods   eax,DWORD PTR ds:[esi]
  405186:	add    cl,BYTE PTR [edi+0x7a]
  405189:	hlt    
  40518a:	out    0xbf,al
  40518c:	pusha  
  40518d:	inc    esi
  40518e:	mov    eax,0x9517d4d9
  405193:	call   FWORD PTR [edi-0x6b]
  405196:	fs retf 
  405198:	test   eax,0x2cc30b13
  40519d:	rcr    DWORD PTR [esi+eiz*8-0x49b2de43],0x5b
  4051a5:	fxam   
  4051a7:	ret    
  4051a8:	fisubr WORD PTR [edi-0x1c]
  4051ab:	and    BYTE PTR [edx],ch
  4051ad:	fisttp QWORD PTR [ecx]
  4051af:	out    dx,al
  4051b0:	mov    al,ds:0x1efac755
  4051b5:	loope  0x4051d0
  4051b7:	sub    al,0x3b
  4051b9:	sti    
  4051ba:	xchg   DWORD PTR [edx],esp
  4051bc:	call   0x70f82269
  4051c1:	lock mov dh,0x5a
  4051c4:	leave  
  4051c5:	jbe    0x405161
  4051c7:	aad    0x7f
  4051c9:	in     eax,dx
  4051ca:	in     eax,dx
  4051cb:	in     eax,dx
  4051cc:	(bad)  
  4051cd:	popa   
  4051ce:	lods   al,BYTE PTR ds:[esi]
  4051cf:	not    ah
  4051d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4051d2:	(bad)  
  4051d3:	sar    BYTE PTR [ebp+0x3ea6fb61],1
  4051d9:	mov    eax,0xf2aeb92c
  4051de:	sbb    DWORD PTR [esp+ebx*1-0x5f36ef2a],edx
  4051e5:	aaa    
  4051e6:	xor    BYTE PTR [eax+esi*4+0x2fa23298],bh
  4051ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4051ee:	and    al,0x65
  4051f0:	sahf   
  4051f1:	xor    ebx,DWORD PTR [ecx-0x18f217c2]
  4051f7:	shl    BYTE PTR [ebp-0x2f5b020f],1
  4051fd:	ficom  WORD PTR [edi]
  4051ff:	outs   dx,BYTE PTR ds:[esi]
  405200:	sbb    ecx,ebx
  405202:	fsubr  DWORD PTR [edi+0x31506a66]
  405208:	cmp    edi,DWORD PTR [ebx-0x67a3a37b]
  40520e:	leave  
  40520f:	mov    ebp,0x384235bc
  405214:	repnz xchg ebp,eax
  405216:	or     DWORD PTR ds:0xb631fba,ebx
  40521c:	and    ecx,esi
  40521e:	push   eax
  40521f:	sub    ebx,ebx
  405221:	push   ecx
  405222:	xchg   edx,eax
  405223:	sub    dl,al
  405225:	sti    
  405226:	dec    edi
  405227:	stos   DWORD PTR es:[edi],eax
  405228:	cdq    
  405229:	shl    dl,cl
  40522b:	out    dx,eax
  40522c:	sbb    ch,bl
  40522e:	sub    al,BYTE PTR [edx+0x6791b812]
  405234:	xchg   ecx,eax
  405235:	cdq    
  405236:	aam    0xa
  405238:	(bad)
  40523b:	test   al,0xef
  40523d:	dec    ebp
  40523e:	fldenv [edi]
  405240:	xor    DWORD PTR [ebp-0x3c],0x8931f4f1
  405247:	pop    esi
  405248:	mov    bl,0xd7
  40524a:	cli    
  40524b:	add    dh,BYTE PTR [esi]
  40524d:	(bad)  
  40524e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40524f:	std    
  405250:	pop    ebx
  405251:	test   eax,0x406c7661
  405256:	es pusha 
  405258:	rol    DWORD PTR [eax],cl
  40525a:	mov    dl,0xb3
  40525c:	sbb    al,0x8
  40525e:	rcr    BYTE PTR [edx-0x3b],1
  405261:	sub    ch,BYTE PTR [ebx-0x35b48435]
  405267:	shr    DWORD PTR [esi-0x5e],1
  40526a:	adc    ch,BYTE PTR [ebx]
  40526c:	sub    al,0x58
  40526e:	es dec eax
  405270:	outs   dx,BYTE PTR ds:[esi]
  405271:	inc    eax
  405272:	mov    esp,DWORD PTR [ecx+0x1a8310dd]
  405278:	jl     0x405212
  40527a:	adc    eax,0xe32de4a4
  40527f:	daa    
  405280:	dec    edx
  405281:	sbb    edi,DWORD PTR [ebx-0x7e]
  405284:	push   edx
  405285:	mov    WORD PTR ss:[ecx+0x75],cs
  405289:	fcomp  QWORD PTR [ecx+0x4a]
  40528c:	bnd jns 0x405291
  40528f:	pop    es
  405290:	div    DWORD PTR [edi-0x45bbfa54]
  405296:	push   ebp
  405297:	xor    DWORD PTR [eax],ebp
  405299:	mov    ebp,0xbd360e7e
  40529e:	test   eax,0x34f98e93
  4052a3:	sbb    ebp,DWORD PTR [ebp+ebx*1-0x72c6dee4]
  4052aa:	(bad)  
  4052ab:	repz cmp dh,BYTE PTR [edx-0x38f6f522]
  4052b2:	shl    BYTE PTR [ebx-0x23],cl
  4052b5:	shr    DWORD PTR [ecx],0x51
  4052b8:	jmp    0x85f3:0xf024c566
  4052bf:	call   0xd71b:0x6debf2c5
  4052c6:	mov    esp,0xe6c3ab49
  4052cb:	mov    ecx,0x5b7b6caf
  4052d0:	in     eax,0x5e
  4052d2:	pushf  
  4052d3:	ja     0x405346
  4052d5:	cs call 0x96ae8566
  4052db:	jbe    0x405339
  4052dd:	xchg   edi,eax
  4052de:	jae    0x4052aa
  4052e0:	mov    edi,0x3c79a20a
  4052e5:	repnz retf 0x5ab5
  4052e9:	pop    esp
  4052ea:	fsubr  QWORD PTR [edx]
  4052ec:	test   eax,0x82dee180
  4052f1:	and    DWORD PTR [edx],ebx
  4052f3:	inc    edi
  4052f4:	bound  edx,QWORD PTR [eax-0x120c2eb4]
  4052fa:	cs popa 
  4052fc:	fldenv [eax+0x78dc40a3]
  405302:	(bad)  
  405304:	add    DWORD PTR [edi-0x51583698],edx
  40530a:	xor    edi,esi
  40530c:	in     al,0xa3
  40530e:	jecxz  0x405337
  405310:	inc    eax
  405311:	std    
  405312:	out    dx,eax
  405313:	xchg   ebx,eax
  405314:	pop    ss
  405315:	daa    
  405316:	stos   BYTE PTR es:[edi],al
  405317:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405318:	dec    esp
  405319:	in     eax,dx
  40531a:	mov    ch,0x12
  40531c:	push   esi
  40531d:	ficom  WORD PTR [edx]
  40531f:	jbe    0x4052b6
  405321:	jnp    0x405373
  405323:	imul   eax,DWORD PTR ds:0x9a2869f1,0xffffff96
  40532a:	mov    ds:0x563ad86a,al
  40532f:	or     ecx,DWORD PTR [ebx-0x6edbf8cc]
  405335:	ja     0x40539c
  405337:	rep ins BYTE PTR es:[edi],dx
  405339:	xchg   esi,eax
  40533a:	fs es lahf 
  40533d:	in     al,dx
  40533e:	lds    esi,FWORD PTR [ecx-0x18]
  405341:	mov    ds:0x8aef122f,al
  405346:	lock sahf 
  405348:	hlt    
  405349:	xlat   BYTE PTR ds:[ebx]
  40534a:	arpl   bp,cx
  40534c:	out    0xf1,eax
  40534e:	clc    
  40534f:	sti    
  405350:	sbb    BYTE PTR [esi-0x39f900ad],dh
  405356:	aam    0xd2
  405358:	leave  
  405359:	xor    al,BYTE PTR [ebp+0x7134cb]
  40535f:	add    al,0x2c
  405361:	into   
  405362:	sbb    eax,0xbeefa90e
  405367:	ret    
  405368:	js     0x405386
  40536a:	pop    ebp
  40536b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40536d:	dec    ebp
  40536e:	mov    ds:0xd62df6f5,eax
  405373:	xor    eax,0x83b7f53d
  405378:	call   0x6156c047
  40537d:	pop    ecx
  40537e:	repnz cmp DWORD PTR [eax],ebx
  405381:	call   0xdf32998a
  405386:	mov    esp,0xd4f5d9b3
  40538b:	aaa    
  40538c:	mov    bh,0x43
  40538e:	xchg   edx,eax
  40538f:	push   esi
  405390:	hlt    
  405391:	rcr    BYTE PTR es:[esi],0xcc
  405395:	fnstcw WORD PTR [eax+eax*2-0x3ece96e]
  40539c:	imul   esi,edi,0xffffffd1
  40539f:	pop    eax
  4053a0:	dec    eax
  4053a1:	dec    esp
  4053a2:	lahf   
  4053a3:	cwde   
  4053a4:	xor    eax,0xee0a6b9f
  4053a9:	cmp    DWORD PTR [esi+0x2],esi
  4053ac:	out    0x8b,al
  4053ae:	sub    ebx,DWORD PTR [esi+0x3b]
  4053b1:	int    0x5b
  4053b3:	fdivr  QWORD PTR [ecx]
  4053b5:	ret    
  4053b6:	dec    esp
  4053b7:	xchg   esi,eax
  4053b8:	pusha  
  4053b9:	sbb    esp,DWORD PTR [edx+0xb]
  4053bc:	adc    BYTE PTR [edx],0x2e
  4053bf:	cs jb  0x405382
  4053c2:	jmp    0xe0a88c38
  4053c7:	jl     0x4053c0
  4053c9:	iret   
  4053ca:	mov    ebx,esi
  4053cc:	or     al,0xd4
  4053ce:	dec    edx
  4053cf:	in     al,0x2e
  4053d1:	popa   
  4053d2:	(bad)  
  4053d3:	test   al,0x3b
  4053d5:	clc    
  4053d6:	cmp    eax,0x2eeed241
  4053db:	adc    BYTE PTR [ecx-0x75],dl
  4053de:	jp     0x40542f
  4053e0:	pushf  
  4053e1:	mov    bh,0x39
  4053e3:	push   ebp
  4053e4:	jg     0x405435
  4053e6:	dec    eax
  4053e7:	add    BYTE PTR [edx],cl
  4053e9:	pop    ebx
  4053ea:	int    0x6b
  4053ec:	jae    0x405448
  4053ee:	add    DWORD PTR [ebx],ebp
  4053f0:	test   al,0x70
  4053f2:	ret    0x5d86
  4053f5:	jge    0x4053a7
  4053f7:	sahf   
  4053f8:	jae    0x405381
  4053fa:	call   DWORD PTR [esp+ecx*2-0x60d25f61]
  405401:	repz (bad) 
  405403:	push   cs
  405404:	scas   eax,DWORD PTR es:[edi]
  405405:	mov    ebx,0x605a7dc2
  40540a:	push   esi
  40540b:	popa   
  40540c:	push   cs
  40540d:	mov    cl,0x89
  40540f:	mov    ds:0xbbcf4822,al
  405414:	aad    0xbd
  405416:	jle    0x40542d
  405418:	sar    DWORD PTR [eax+0x76],1
  40541b:	push   DWORD PTR [eax]
  40541d:	mov    eax,0xfcaae410
  405422:	(bad)  
  405424:	adc    al,BYTE PTR [edx-0xc4cc247]
  40542a:	hlt    
  40542b:	push   ecx
  40542c:	push   ecx
  40542d:	lahf   
  40542e:	in     eax,dx
  40542f:	leave  
  405430:	arpl   bx,sp
  405432:	pop    ecx
  405433:	push   ebx
  405434:	inc    eax
  405435:	retf   
  405436:	outs   dx,BYTE PTR ds:[esi]
  405437:	addr16 mov eax,ds:0xc438
  40543b:	jne    0x4053ce
  40543d:	pop    esp
  40543e:	in     eax,0x52
  405440:	push   0xffffffde
  405442:	push   ebx
  405443:	enter  0x1849,0x1f
  405447:	mov    DWORD PTR [ecx+ebp*4],esi
  40544a:	push   0x5e28e92
  40544f:	fimul  DWORD PTR [eax+0x30ae0123]
  405455:	mov    ah,0x4b
  405457:	retf   0x3634
  40545a:	xchg   esi,eax
  40545b:	out    0x95,al
  40545d:	xor    al,0x4b
  40545f:	lahf   
  405460:	or     DWORD PTR [edi],eax
  405462:	sbb    ecx,DWORD PTR [edi-0x4f]
  405465:	sahf   
  405466:	into   
  405467:	push   0x7209cc4d
  40546c:	das    
  40546d:	inc    ecx
  40546e:	inc    esp
  40546f:	mov    ds,WORD PTR [ebx-0x2e]
  405472:	jmp    0x1dad853c
  405477:	and    DWORD PTR [eax+0x47],esp
  40547a:	add    DWORD PTR [esi-0x11],edi
  40547d:	push   eax
  40547e:	pop    ebx
  40547f:	test   DWORD PTR [esi-0x37],ebx
  405482:	ret    0xc
  405485:	push   ebp
  405486:	mov    ebp,esp
  405488:	push   ecx
  405489:	mov    edx,DWORD PTR ds:0x42e784
  40548f:	mov    edx,DWORD PTR [edx]
  405491:	sbb    DWORD PTR ds:0x42e6eb,edx
  405497:	jmp    0x40576a
  40549c:	pop    ecx
  40549d:	scas   al,BYTE PTR es:[edi]
  40549e:	sbb    BYTE PTR [ebx-0xd],al
  4054a1:	push   ecx
  4054a2:	pop    ecx
  4054a3:	mov    dh,0xd4
  4054a5:	(bad)
  4054a8:	adc    DWORD PTR [edi+0x44],ecx
  4054ab:	jg     0x4054bd
  4054ad:	aaa    
  4054ae:	jo     0x405520
  4054b0:	stos   BYTE PTR es:[edi],al
  4054b1:	jle    0x405523
  4054b3:	jo     0x405474
  4054b5:	enter  0x5216,0x4f
  4054b9:	sbb    eax,0xed6c19d4
  4054be:	mov    cl,0x19
  4054c0:	xor    BYTE PTR [edx+0x74b04b7d],dl
  4054c6:	(bad)  
  4054c7:	pop    ebx
  4054c8:	push   cs
  4054c9:	jnp    0x405509
  4054cb:	pop    ecx
  4054cc:	push   es
  4054cd:	mov    dl,0xf9
  4054cf:	mov    al,0x5c
  4054d1:	retf   
  4054d2:	jno    0x405483
  4054d4:	pop    ss
  4054d5:	(bad)  
  4054d6:	adc    eax,0x92a48368
  4054db:	jmp    0x405495
  4054dd:	in     eax,0x84
  4054df:	push   ecx
  4054e0:	cvtpi2ps xmm6,QWORD PTR [edx]
  4054e3:	adc    BYTE PTR [ebp+0x24016f7e],0xb6
  4054ea:	jns    0x405563
  4054ec:	pop    es
  4054ed:	stos   DWORD PTR es:[edi],eax
  4054ee:	or     edx,DWORD PTR [esi]
  4054f0:	cmp    cl,BYTE PTR [ebp-0x2f]
  4054f3:	add    DWORD PTR [esp+esi*2],0x608852ea
  4054fa:	sbb    ebp,DWORD PTR [ebp+0x37]
  4054fd:	fist   WORD PTR [eax-0x43]
  405500:	pop    ebp
  405501:	leave  
  405502:	test   BYTE PTR [ecx+0x567371c8],bl
  405508:	xchg   esp,eax
  405509:	repnz mov ah,0xf6
  40550c:	cs inc ecx
  40550e:	inc    edx
  40550f:	xor    eax,0x22ff6d3a
  405514:	dec    eax
  405515:	cmp    BYTE PTR [ecx],dl
  405517:	sbb    DWORD PTR [ebx],eax
  405519:	gs addr16 popa 
  40551c:	imul   ebx,DWORD PTR [eax+0x5a0b69f8],0x717fa869
  405526:	ins    DWORD PTR es:[edi],dx
  405527:	xor    ch,BYTE PTR [esi-0x1dd02f4b]
  40552d:	sbb    cl,BYTE PTR [ecx+ebp*8-0x4ebd11b4]
  405534:	mov    WORD PTR [esi-0x38],ds
  405537:	mov    al,ds:0x8e6bdba2
  40553c:	add    al,0x59
  40553e:	daa    
  40553f:	xor    edx,ebp
  405541:	popa   
  405542:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405543:	out    0xcb,al
  405545:	fimul  DWORD PTR [eax-0x2a]
  405548:	hlt    
  405549:	push   ebx
  40554a:	clc    
  40554b:	add    DWORD PTR [ecx+edi*8],edx
  40554e:	jg     0x405548
  405550:	xchg   ebp,eax
  405551:	pop    ebp
  405552:	in     eax,0x1
  405554:	pop    ebp
  405555:	call   0x154f68b3
  40555a:	fisttp QWORD PTR [ebx-0x79]
  40555d:	inc    edi
  40555e:	mov    dh,0xfa
  405560:	sbb    eax,0x8ad2f7e2
  405565:	lahf   
  405566:	cmp    eax,0xf2a38fe4
  40556b:	dec    ecx
  40556c:	and    al,0x96
  40556e:	call   0x7b31b57c
  405573:	sub    ah,dl
  405575:	jnp    0x405524
  405577:	push   ecx
  405578:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  40557a:	xlat   BYTE PTR ds:[ebx]
  40557b:	or     BYTE PTR [esi-0x12feb1b4],0x90
  405582:	leave  
  405583:	inc    ebx
  405584:	dec    edi
  405585:	push   ebp
  405586:	dec    eax
  405587:	out    dx,eax
  405588:	sbb    bl,0xc
  40558b:	int3   
  40558c:	scas   eax,DWORD PTR es:[edi]
  40558d:	jns    0x405594
  40558f:	(bad)  
  405591:	rol    BYTE PTR [edi+0x3e],1
  405594:	in     eax,dx
  405595:	mov    ebx,DWORD PTR [ebp-0x7a]
  405598:	div    BYTE PTR [edi]
  40559a:	(bad)  
  40559b:	mov    esp,0xcd943009
  4055a0:	jecxz  0x40559b
  4055a2:	aas    
  4055a3:	xor    ecx,esp
  4055a5:	jmp    0x4055b3
  4055a7:	mov    ebx,DWORD PTR [edx+0x7acfc75e]
  4055ad:	xor    edi,DWORD PTR [ecx]
  4055af:	add    edx,edi
  4055b1:	out    dx,al
  4055b2:	and    ch,BYTE PTR [ecx+0x792fe973]
  4055b8:	push   ebx
  4055b9:	jmp    0x5614:0x9d1d9b6a
  4055c0:	sbb    al,0x5a
  4055c2:	(bad)  
  4055c4:	test   eax,0xd964de5c
  4055c9:	sub    al,0x43
  4055cb:	adc    esp,DWORD PTR [esi-0x60]
  4055ce:	xor    eax,0x47c9372b
  4055d3:	stc    
  4055d4:	adc    eax,0x4069523a
  4055d9:	cmp    cl,BYTE PTR [ecx+0x1d]
  4055dc:	push   0xcf15e8ea
  4055e1:	inc    esi
  4055e2:	loope  0x4055cb
  4055e4:	sub    DWORD PTR [ebx-0x202eee0],ebp
  4055ea:	scas   eax,DWORD PTR es:[edi]
  4055eb:	xor    BYTE PTR [edx+ebx*1+0x6f],bl
  4055ef:	jl     0x40560d
  4055f1:	jg     0x405577
  4055f3:	lock and esi,ebp
  4055f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4055f7:	pop    edx
  4055f8:	mov    al,ds:0x551977e2
  4055fd:	bnd jg 0x405637
  405600:	push   cs
  405601:	add    DWORD PTR fs:[eax+0x184aaaa],esi
  405608:	sbb    edx,DWORD PTR [eax-0x7e]
  40560b:	loop   0x40566a
  40560d:	std    
  40560e:	xchg   ecx,eax
  40560f:	xor    DWORD PTR [edx+eiz*4+0x51],0x22a628c6
  405617:	fcmovnb st,st(6)
  405619:	sub    al,0xe9
  40561b:	pop    esp
  40561c:	or     BYTE PTR [ebx-0x7b9abb9a],al
  405622:	sahf   
  405623:	xor    BYTE PTR [edx-0xa4bd673],al
  405629:	nop
  40562a:	test   eax,0xbcbf16af
  40562f:	daa    
  405630:	ins    BYTE PTR es:[edi],dx
  405631:	mov    DWORD PTR [ebx+0x3d2a4d6a],0xb1ec1fb3
  40563b:	sub    DWORD PTR [edx],0xfbd72699
  405641:	mov    ch,0x2d
  405643:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405644:	into   
  405645:	sbb    eax,0x23279a71
  40564a:	fs pusha 
  40564c:	cmp    BYTE PTR [ecx-0x3f34f8f3],ah
  405652:	loopne 0x405657
  405654:	mov    WORD PTR [esi-0x7f],?
  405657:	pop    edi
  405658:	shl    ch,0xc2
  40565b:	repz inc ecx
  40565d:	lea    edi,[ebp-0x43]
  405660:	(bad)  
  405661:	cmp    esp,ecx
  405663:	(bad)  
  405664:	mov    esp,0x2a449bbb
  405669:	mov    bh,0xfb
  40566b:	hlt    
  40566c:	dec    esi
  40566d:	adc    DWORD PTR [edx-0x1d],ebx
  405670:	ss dec edi
  405672:	mov    ebp,0x9b1a2030
  405677:	mov    eax,ds:0x27644a85
  40567c:	inc    ebp
  40567d:	mov    bh,0xde
  40567f:	addr16 int3 
  405681:	shl    DWORD PTR [edi],cl
  405683:	not    BYTE PTR [eax]
  405685:	mov    esp,0x1144ca68
  40568a:	test   DWORD PTR [esi+0x2a3a2d99],esp
  405690:	loope  0x4056f5
  405692:	jne    0x405629
  405694:	jbe    0x4056e7
  405696:	cmp    DWORD PTR [edx+0x413ffe84],ebx
  40569c:	in     eax,0x5c
  40569e:	adc    DWORD PTR [edi+ecx*1],ebx
  4056a1:	push   ecx
  4056a2:	lods   al,BYTE PTR ds:[esi]
  4056a3:	xchg   BYTE PTR [ebx-0x6f632d28],dh
  4056a9:	mov    ebx,0x434f98d6
  4056ae:	shr    DWORD PTR [esi+0x11],cl
  4056b1:	jg     0x405676
  4056b3:	xchg   edx,eax
  4056b4:	in     eax,dx
  4056b5:	pop    ecx
  4056b6:	mov    eax,edx
  4056b8:	ins    BYTE PTR es:[edi],dx
  4056b9:	mov    ds:0xed405b4b,eax
  4056be:	call   0xb0da:0xce9d
  4056c4:	jb     0x4056fe
  4056c6:	call   0x5e65a63a
  4056cb:	mov    esp,0x3d4727dd
  4056d0:	pop    ebp
  4056d1:	dec    eax
  4056d2:	xchg   esi,eax
  4056d3:	mov    bl,0x86
  4056d5:	lahf   
  4056d6:	in     al,dx
  4056d7:	mov    dh,dh
  4056d9:	sub    DWORD PTR [edi+0x6],ebp
  4056dc:	sbb    DWORD PTR [eax-0x7bd4bcbd],0xee25ed45
  4056e6:	(bad)
  4056ea:	adc    al,0xb8
  4056ec:	cmp    eax,edi
  4056ee:	es or  eax,0x17ec0421
  4056f4:	push   es
  4056f5:	sub    eax,0xbc656f2
  4056fa:	push   ecx
  4056fb:	rep outs dx,BYTE PTR ds:[esi]
  4056fd:	lods   al,BYTE PTR ds:[esi]
  4056fe:	(bad)
  405701:	rcl    bl,cl
  405703:	mov    al,0x10
  405705:	(bad)  
  405706:	in     eax,dx
  405707:	mov    ch,0xf2
  405709:	and    BYTE PTR [ebx+0x4377fa62],bh
  40570f:	inc    edi
  405710:	jmp    0x5769:0x71565752
  405717:	mov    ds:0x6124ca9c,al
  40571c:	retf   0xb022
  40571f:	test   eax,0x5feba4da
  405724:	out    dx,eax
  405725:	sbb    ecx,esp
  405727:	cmp    DWORD PTR [edx],edx
  405729:	jl     0x405703
  40572b:	jmp    0x3c68:0x666273
  405732:	jmp    0xf660399e
  405737:	mov    bl,0x55
  405739:	mov    WORD PTR [ecx-0x781e93d4],ss
  40573f:	push   edi
  405740:	loop   0x40579a
  405742:	pop    ebp
  405743:	pop    ebp
  405744:	lahf   
  405745:	test   BYTE PTR [eax],0xcb
  405748:	add    eax,0xa569644a
  40574d:	xor    cl,dh
  40574f:	mov    BYTE PTR [edi],0x69
  405752:	or     BYTE PTR [eax+0x72665d3c],cl
  405758:	int3   
  405759:	mov    esp,0xd0a994a8
  40575e:	sub    esp,ecx
  405760:	xchg   DWORD PTR [ecx],ecx
  405762:	adc    DWORD PTR [ebp+0x20],0x884dc01c
  405769:	xor    dl,BYTE PTR [ecx+0xf]
  40576c:	mov    bh,0x5
  40576e:	xchg   ch,bh
  405770:	inc    edx
  405771:	add    BYTE PTR [ebx],ah
  405773:	add    eax,0x42fd7a
  405778:	mov    ds:0x42fd86,eax
  40577d:	jmp    0x405a50
  405782:	ja     0x4057cf
  405784:	and    eax,0x717221b4
  405789:	dec    ebx
  40578a:	xchg   DWORD PTR [edx+0x4ee091be],eax
  405790:	dec    eax
  405791:	mov    al,0x4a
  405793:	xor    eax,0x7eaa7070
  405798:	jo     0x40580a
  40579a:	or     DWORD PTR [edi],edi
  40579c:	and    bl,dh
  40579e:	dec    edx
  40579f:	mov    eax,0x7dfd9691
  4057a4:	pop    ecx
  4057a5:	push   ds
  4057a6:	jp     0x405823
  4057a8:	ds mov dh,0x5c
  4057ab:	dec    ebp
  4057ac:	lds    ecx,FWORD PTR [eax]
  4057ae:	or     dh,BYTE PTR [ebx]
  4057b0:	jge    0x405771
  4057b2:	dec    edi
  4057b3:	je     0x4057ec
  4057b5:	call   0xdc4585b
  4057ba:	jbe    0x40579e
  4057bc:	push   ebx
  4057bd:	test   eax,0xbc4c69a2
  4057c2:	adc    bh,bh
  4057c4:	mov    eax,0xda27d63
  4057c9:	mov    dl,0x1d
  4057cb:	pusha  
  4057cc:	ins    BYTE PTR es:[edi],dx
  4057cd:	fist   WORD PTR [ebp-0x68]
  4057d0:	mov    ecx,0x1b5c63cf
  4057d5:	lock mov esp,0xce841b87
  4057db:	xchg   ecx,eax
  4057dc:	(bad)  
  4057dd:	popa   
  4057de:	cmp    al,0x2a
  4057e0:	jb     0x405809
  4057e2:	sbb    di,WORD PTR [esi-0x1e]
  4057e6:	ins    BYTE PTR es:[edi],dx
  4057e7:	push   esi
  4057e8:	mov    ebp,0xfcee5fa8
  4057ed:	lds    ebp,FWORD PTR [esi+0x3afb6900]
  4057f3:	pop    edi
  4057f4:	iret   
  4057f5:	add    al,0x42
  4057f7:	scas   eax,DWORD PTR es:[edi]
  4057f8:	jmp    0x23b9:0x3ea8343
  4057ff:	push   ecx
  405800:	cmp    edx,edi
  405802:	cli    
  405803:	rcr    esp,0x39
  405806:	inc    eax
  405807:	mov    WORD PTR [ecx],gs
  405809:	shld   DWORD PTR [ecx+0x22],ebx,0xf8
  40580e:	add    esi,edi
  405810:	loope  0x4057f4
  405812:	mov    cl,0xce
  405814:	not    DWORD PTR [edx+eiz*8+0x6c]
  405818:	out    dx,eax
  405819:	loope  0x405846
  40581b:	std    
  40581c:	xor    esp,DWORD PTR [ebx+0x61]
  40581f:	(bad)
  405824:	mov    esi,0xb035e967
  405829:	cmp    BYTE PTR [ebx-0x37],ah
  40582c:	pop    esi
  40582d:	mov    eax,DWORD PTR [edx]
  40582f:	stc    
  405830:	shr    DWORD PTR [ebp+0x2715d73a],1
  405836:	mov    esi,0x5319728e
  40583b:	lods   eax,DWORD PTR ds:[esi]
  40583c:	xor    al,0xdd
  40583e:	xor    al,0xa9
  405840:	(bad)  
  405841:	call   0xf42182cc
  405846:	mov    dl,0xb9
  405848:	xchg   esp,eax
  405849:	jae    0x40582b
  40584b:	out    dx,eax
  40584c:	sti    
  40584d:	xor    dh,BYTE PTR [esi]
  40584f:	mov    esp,0x29d9524
  405854:	pop    DWORD PTR [esi+edi*4+0x6a]
  405858:	xchg   BYTE PTR [esi],ah
  40585a:	jmp    0x4057ff
  40585c:	mov    eax,0x14ef5df2
  405861:	or     al,dh
  405863:	xor    edx,0xffffffa0
  405866:	jo     0x4058a7
  405868:	sub    BYTE PTR [esi+0x1b0b4d28],cl
  40586e:	cli    
  40586f:	and    ebx,0xffffffb3
  405872:	push   edi
  405873:	mov    cl,0x75
  405875:	pop    es
  405876:	into   
  405877:	aam    0xcd
  405879:	std    
  40587a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40587b:	in     eax,dx
  40587c:	data16 xor BYTE PTR [edx+0x66],ah
  405880:	mov    bl,0x1f
  405882:	and    eax,0x1a4ddcba
  405887:	jecxz  0x405906
  405889:	hlt    
  40588a:	xor    al,0xd5
  40588c:	push   ss
  40588d:	jb     0x4058fb
  40588f:	xor    dh,BYTE PTR [eax+ebp*8-0x63]
  405893:	mov    ecx,DWORD PTR [ecx-0x26e153ae]
  405899:	cld    
  40589a:	push   esi
  40589b:	add    DWORD PTR [esi-0x48],esp
  40589e:	add    eax,0xb4a55fca
  4058a3:	test   al,0x7e
  4058a5:	sti    
  4058a6:	adc    BYTE PTR [ecx-0x2b],ah
  4058a9:	repnz int 0xb9
  4058ac:	or     dl,0x75
  4058af:	and    al,0xaa
  4058b1:	mov    al,0xcf
  4058b3:	test   DWORD PTR [ecx],0x46d40d8c
  4058b9:	inc    esp
  4058ba:	lea    esi,[edi]
  4058bc:	dec    esi
  4058bd:	jo     0x405846
  4058bf:	(bad)  
  4058c0:	(bad)  
  4058c2:	popf   
  4058c3:	push   edi
  4058c4:	cmp    bh,BYTE PTR [edx-0x5c]
  4058c7:	or     eax,0x7530b4f
  4058cc:	xchg   DWORD PTR [edx],ecx
  4058ce:	sub    edx,0x68c2c59d
  4058d4:	imul   esi,DWORD PTR [ebx],0x135310a0
  4058da:	xchg   edx,eax
  4058db:	data16 (bad) 
  4058dd:	mov    esi,0x55aa54d5
  4058e2:	adc    esp,esi
  4058e4:	nop
  4058e5:	aaa    
  4058e6:	in     al,dx
  4058e7:	push   esi
  4058e8:	arpl   WORD PTR [ecx+ecx*2],si
  4058eb:	imul   dx,WORD PTR [esi-0x1c4241e1],0x73
  4058f3:	cs repnz mov edi,?
  4058f7:	retf   
  4058f8:	jmp    0xbe92e3fa
  4058fd:	retf   
  4058fe:	xor    edx,DWORD PTR [esi]
  405900:	cdq    
  405901:	fs es aam 0x46
  405905:	ins    BYTE PTR es:[edi],dx
  405906:	or     eax,0x3ccf1945
  40590b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40590c:	mov    al,0x7b
  40590e:	lock ja 0x405921
  405911:	test   al,0x31
  405913:	add    al,0xd8
  405915:	inc    eax
  405916:	ror    ah,0xb5
  405919:	aaa    
  40591a:	mov    ch,0x8
  40591c:	in     eax,0xa5
  40591e:	nop
  40591f:	ficom  DWORD PTR [edx-0x126bcf7c]
  405925:	mov    ah,0x32
  405927:	and    ebx,0xffffffa6
  40592a:	jl     0x40591e
  40592c:	pop    esp
  40592d:	cmp    al,0x6e
  40592f:	inc    ebx
  405930:	mov    bl,0xd7
  405933:	pop    edi
  405934:	dec    edi
  405935:	je     0x40593c
  405937:	sub    BYTE PTR [ecx+ebx*1],bl
  40593a:	dec    edx
  40593b:	or     eax,0xba16d8f4
  405940:	daa    
  405941:	add    DWORD PTR [eax+0x15],ecx
  405944:	test   DWORD PTR [edx-0x5fe6ef1a],esi
  40594a:	push   ebp
  40594b:	add    DWORD PTR [edx],0x46
  40594e:	push   cs
  40594f:	push   ds
  405950:	imul   ecx,DWORD PTR [ebx-0x680ab8cb],0xbb83559f
  40595a:	cld    
  40595b:	popf   
  40595c:	lods   al,BYTE PTR ds:[esi]
  40595d:	push   esp
  40595e:	fcom   DWORD PTR [esi+ebp*2-0x49]
  405962:	sti    
  405963:	out    dx,al
  405964:	div    esi
  405966:	inc    ebx
  405967:	dec    ebx
  405968:	add    BYTE PTR [ecx+0x59],al
  40596b:	jbe    0x4059c4
  40596d:	cli    
  40596e:	mul    BYTE PTR [ecx]
  405970:	lahf   
  405971:	(bad)  
  405972:	sub    ecx,eax
  405974:	aas    
  405975:	xor    ebp,ebx
  405977:	jnp    0x4059dd
  405979:	test   DWORD PTR [edi+0x6aa8e6d5],edi
  40597f:	loopne 0x4059f1
  405981:	ja     0x405945
  405983:	pop    ds
  405984:	push   edi
  405985:	xor    al,0xd3
  405987:	xor    al,bl
  405989:	adc    DWORD PTR [eax-0x5d88a852],edi
  40598f:	cmp    ebp,DWORD PTR [edx-0x3d2b0d10]
  405995:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405996:	lods   al,BYTE PTR ds:[esi]
  405997:	or     eax,0x229d45e6
  40599c:	outs   dx,BYTE PTR ds:[esi]
  40599d:	iret   
  40599e:	jge    0x4059cb
  4059a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4059a1:	pop    eax
  4059a2:	fwait
  4059a3:	in     al,dx
  4059a4:	out    dx,al
  4059a5:	call   0x7976:0x9eeb52dc
  4059ac:	jle    0x4059f2
  4059ae:	mov    bl,0x94
  4059b0:	loop   0x405964
  4059b2:	xor    DWORD PTR ds:0xadba30e3,esp
  4059b8:	prefetchw BYTE PTR [eax+edx*8-0xd]
  4059bd:	test   BYTE PTR [eax],al
  4059bf:	mov    ds,WORD PTR ds:0x7945dcf6
  4059c5:	stos   BYTE PTR es:[edi],al
  4059c6:	(bad)  
  4059c7:	in     eax,dx
  4059c8:	fs jmp 0xec46cd05
  4059ce:	cli    
  4059cf:	mov    al,0x69
  4059d1:	gs jg  0x4059a1
  4059d4:	dec    edi
  4059d5:	xor    edx,DWORD PTR [esi]
  4059d7:	or     ecx,DWORD PTR [edx]
  4059d9:	mov    bh,0x17
  4059db:	add    DWORD PTR [ebx],0xffffffea
  4059de:	in     al,dx
  4059df:	imul   ecx,edx,0x3
  4059e2:	or     al,ah
  4059e4:	pop    esp
  4059e5:	outs   dx,BYTE PTR ds:[esi]
  4059e6:	rcr    DWORD PTR [edx],0x8c
  4059e9:	inc    edi
  4059ea:	and    dh,ch
  4059ec:	push   ebp
  4059ed:	out    dx,al
  4059ee:	inc    ecx
  4059ef:	add    al,BYTE PTR ds:0xec098da2
  4059f5:	repz scas eax,DWORD PTR es:[edi]
  4059f7:	std    
  4059f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4059f9:	rcr    DWORD PTR [ebp+0x31],cl
  4059fc:	or     eax,0x77806756
  405a01:	in     al,dx
  405a02:	jmp    0x405984
  405a04:	jne    0x405a48
  405a06:	sbb    ah,BYTE PTR [eax+ebp*1-0x78d4322a]
  405a0d:	sbb    al,0x9b
  405a0f:	mov    eax,ds:0xb70641e3
  405a14:	clc    
  405a15:	pop    ebp
  405a16:	int    0x89
  405a18:	jp     0x405a77
  405a1a:	inc    esi
  405a1b:	into   
  405a1c:	cwde   
  405a1d:	out    dx,al
  405a1e:	adc    DWORD PTR [edi],eax
  405a20:	pop    ebx
  405a21:	out    0x50,eax
  405a23:	(bad)  
  405a24:	aad    0xd0
  405a26:	push   esi
  405a27:	in     eax,0xae
  405a29:	push   ebp
  405a2a:	sbb    cl,BYTE PTR [ebx+0x76]
  405a2d:	outs   dx,BYTE PTR ds:[esi]
  405a2e:	enter  0x80ab,0xe9
  405a32:	imul   ecx,DWORD PTR [ecx+0x5d576339],0xffffffd0
  405a39:	(bad)  
  405a3a:	in     eax,0x3d
  405a3c:	int3   
  405a3d:	outs   dx,BYTE PTR ds:[esi]
  405a3e:	cmp    BYTE PTR [ebx],dh
  405a40:	(bad)  [edx+0x13]
  405a43:	jge    0x405a91
  405a45:	dec    edi
  405a46:	repnz add DWORD PTR [ebx+0x5e],ebx
  405a4a:	mov    ecx,0x83824adc
  405a4f:	fld    st(7)
  405a51:	inc    ebp
  405a52:	clc    
  405a53:	xor    DWORD PTR [ebp-0x1d7e0764],eax
  405a59:	jnp    0x405ad4
  405a5b:	add    BYTE PTR [eax],al
  405a5d:	mov    DWORD PTR [ebp-0x4],0xf89c8530
  405a64:	and    edx,edx
  405a66:	mov    eax,DWORD PTR [ebp-0x4]
  405a69:	sbb    ecx,DWORD PTR ds:0x42fd05
  405a6f:	push   esi
  405a70:	mov    esi,DWORD PTR [ebp-0x8]
  405a73:	and    DWORD PTR ds:0x42fcf1,0x0
  405a7d:	jmp    0x405a8f
  405a82:	mov    edx,DWORD PTR ds:0x42fcf1
  405a88:	inc    edx
  405a89:	mov    DWORD PTR ds:0x42fcf1,edx
  405a8f:	cmp    DWORD PTR ds:0x42fcf1,0x17
  405a96:	jae    0x405b0b
  405a9c:	cmp    DWORD PTR ds:0x42fcf1,0x1d
  405aa3:	jne    0x405ab5
  405aa9:	push   DWORD PTR [ebp-0x24]
  405aac:	push   DWORD PTR [ebp-0x20]
  405aaf:	call   DWORD PTR ds:0x42e2db
  405ab5:	jmp    0x405a82
  405aba:	mov    DWORD PTR ds:0x42fcd9,0x14
  405ac4:	cmp    DWORD PTR ds:0x42fcd9,0x0
  405acb:	je     0x405b0b
  405ad1:	cmp    DWORD PTR ds:0x42fcd9,0x16
  405ad8:	jne    0x405af7
  405ade:	push   DWORD PTR [ebp-0x14]
  405ae1:	push   0x2e3f
  405ae6:	push   DWORD PTR [ebp-0x18]
  405ae9:	push   DWORD PTR [ebp-0x18]
  405aec:	push   0x8cdb
  405af1:	call   DWORD PTR ds:0x42e537
  405af7:	xor    edx,edx
  405af9:	xor    edx,DWORD PTR ds:0x42fcd9
  405aff:	dec    edx
  405b00:	mov    DWORD PTR ds:0x42fcd9,edx
  405b06:	jmp    0x405ac4
  405b0b:	mov    edx,0x7510855
  405b10:	add    DWORD PTR ds:0x42fcd1,edi
  405b16:	xor    eax,edx
  405b18:	and    DWORD PTR ds:0x42e6f7,ebx
  405b1e:	xor    esi,edx
  405b20:	mov    ecx,0x32729c
  405b25:	add    esi,ecx
  405b27:	add    eax,ecx
  405b29:	imul   eax,esi
  405b2c:	mov    esi,DWORD PTR [ebp+0xc]
  405b2f:	cmp    esi,eax
  405b31:	jne    0x405b4d
  405b37:	mov    eax,DWORD PTR [ebp-0x4]
  405b3a:	mov    esi,DWORD PTR [ebp-0x8]
  405b3d:	xor    eax,edx
  405b3f:	xor    esi,edx
  405b41:	add    eax,ecx
  405b43:	add    esi,ecx
  405b45:	imul   eax,esi
  405b48:	jmp    0x405e5b
  405b4d:	mov    eax,DWORD PTR [ebp+0xc]
  405b50:	mov    eax,DWORD PTR [eax+0x78]
  405b53:	mov    DWORD PTR [ebp+0xc],eax
  405b56:	mov    eax,DWORD PTR [ebp-0x4]
  405b59:	mov    esi,DWORD PTR [ebp-0x8]
  405b5c:	xor    eax,edx
  405b5e:	xor    esi,edx
  405b60:	add    eax,ecx
  405b62:	add    esi,ecx
  405b64:	imul   eax,esi
  405b67:	mov    esi,DWORD PTR [ebp+0xc]
  405b6a:	cmp    esi,eax
  405b6c:	mov    eax,DWORD PTR [ebp-0x4]
  405b6f:	je     0x405b3a
  405b75:	jmp    0x405e48
  405b7a:	xchg   DWORD PTR [ebx-0xdac0d75],edi
  405b80:	imul   esi,DWORD PTR gs:[eax+0x3],0xfa52624d
  405b88:	xchg   ebx,eax
  405b89:	mov    ds:0x70703284,al
  405b8e:	stos   BYTE PTR es:[edi],al
  405b8f:	jle    0x405c01
  405b91:	jo     0x405be9
  405b93:	nop
  405b94:	(bad)  
  405b95:	pusha  
  405b96:	and    cl,BYTE PTR [eax]
  405b98:	jmp    0x405bf8
  405b9a:	cmp    al,0x65
  405b9c:	inc    esp
  405b9d:	push   ebx
  405b9e:	popa   
  405b9f:	daa    
  405ba0:	jno    0x405b27
  405ba2:	push   ss
  405ba3:	push   edi
  405ba4:	(bad)  
  405ba6:	fcomip st,st(4)
  405ba8:	pusha  
  405ba9:	cmp    eax,DWORD PTR [ecx+ebp*8+0x70]
  405bad:	add    BYTE PTR [ecx-0x6b85afd],ah
  405bb3:	sbb    eax,0xade9e743
  405bb8:	xor    al,0xdd
  405bba:	pop    es
  405bbb:	and    al,0xc
  405bbd:	fisub  DWORD PTR [ecx+esi*8+0x3a413d4e]
  405bc4:	jbe    0x405bda
  405bc6:	mov    ds:0xe59a5fff,al
  405bcb:	add    cl,ah
  405bcd:	in     eax,0x45
  405bcf:	hlt    
  405bd0:	dec    esp
  405bd1:	sar    ah,cl
  405bd3:	mov    eax,0x8496769e
  405bd8:	push   0x4d085a61
  405bdd:	mov    eax,0xe78f6e8b
  405be2:	rol    esi,cl
  405be4:	daa    
  405be5:	(bad)  
  405be6:	enter  0x42bd,0x14
  405bea:	out    0x34,eax
  405bec:	pop    eax
  405bed:	fmul   DWORD PTR cs:[ebx]
  405bf0:	es inc ebp
  405bf2:	mov    bl,BYTE PTR [esi-0x57235017]
  405bf8:	icebp  
  405bf9:	dec    edi
  405bfa:	leave  
  405bfb:	xor    esi,DWORD PTR [edi-0x59caeb8]
  405c01:	out    dx,eax
  405c02:	pop    ecx
  405c03:	mov    cl,0x35
  405c05:	push   edi
  405c06:	jne    0x405c79
  405c08:	ins    BYTE PTR es:[edi],dx
  405c09:	iret   
  405c0a:	jp     0x405bf1
  405c0c:	xchg   ebx,eax
  405c0d:	(bad)  
  405c0e:	fimul  DWORD PTR [edx+0x27eee165]
  405c14:	push   ss
  405c15:	retf   
  405c16:	xor    DWORD PTR [ecx+0x59],0xad07e687
  405c1d:	inc    ebx
  405c1e:	es jge 0x405c2d
  405c21:	or     BYTE PTR [edx+0x2a],al
  405c24:	xchg   ebx,eax
  405c25:	mov    bl,BYTE PTR [ebx-0x4732d67d]
  405c2b:	std    
  405c2c:	mov    edx,esp
  405c2e:	adc    ecx,DWORD PTR [edx]
  405c30:	push   di
  405c32:	cdq    
  405c33:	int    0xd
  405c35:	lods   eax,DWORD PTR ds:[esi]
  405c36:	ror    dl,0x84
  405c39:	test   DWORD PTR [esp+eiz*4],edx
  405c3c:	in     al,0xb1
  405c3e:	ja     0x405cb8
  405c40:	mov    ds:0x29bd90fe,eax
  405c45:	(bad)  [ebx]
  405c47:	xor    BYTE PTR [edi],al
  405c49:	cwde   
  405c4a:	xor    DWORD PTR [ebp+0x627e570b],esi
  405c50:	fstp   TBYTE PTR [esi-0x20bdf456]
  405c56:	mov    cl,0xdd
  405c58:	pop    ss
  405c59:	pop    esp
  405c5a:	rol    DWORD PTR [esi],0xeb
  405c5d:	mov    ds:0xe919b639,eax
  405c62:	mov    ds:0xe93fbd34,eax
  405c67:	or     DWORD PTR [esi+ebx*1-0x1e],ecx
  405c6b:	cmc    
  405c6c:	jge    0x405c98
  405c6e:	enter  0xe618,0x4
  405c72:	clc    
  405c73:	push   ecx
  405c74:	imul   edi,DWORD PTR [ebp+0x5],0x7f276bd9
  405c7b:	jmp    0x7d73626f
  405c80:	and    al,0x15
  405c82:	sar    esi,0x89
  405c85:	or     al,0x3f
  405c87:	jo     0x405ca1
  405c89:	ret    0x5333
  405c8c:	or     eax,0xc257da1e
  405c91:	push   cs
  405c92:	and    dl,BYTE PTR [edx+0x373a1f59]
  405c98:	out    0xdd,al
  405c9a:	dec    ecx
  405c9b:	push   0xfffffff7
  405c9d:	imul   ebp,DWORD PTR [edx-0x71fd7f70],0xfffffffb
  405ca4:	sahf   
  405ca5:	sbb    edi,DWORD PTR [ecx-0x7a02982]
  405cab:	out    0x69,eax
  405cad:	(bad)  
  405cae:	sbb    ecx,esi
  405cb0:	arpl   WORD PTR [eax-0x46],si
  405cb3:	xchg   DWORD PTR [ebx-0xd],eax
  405cb6:	xor    BYTE PTR [eax+0xa],cl
  405cb9:	jns    0x405d2e
  405cbb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405cbc:	pop    ds
  405cbd:	ins    DWORD PTR es:[edi],dx
  405cbe:	sbb    BYTE PTR [ecx-0x4],bl
  405cc1:	or     ebx,edi
  405cc3:	xchg   eax,ebx
  405cc5:	jg     0x405d30
  405cc7:	pop    ss
  405cc8:	adc    al,0x6f
  405cca:	dec    edx
  405ccb:	popf   
  405ccc:	retf   
  405ccd:	jae    0x405d3e
  405ccf:	sbb    ebx,esp
  405cd1:	fisubr WORD PTR [edi-0x1a]
  405cd4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405cd5:	loopne 0x405cce
  405cd7:	add    BYTE PTR [ebx],bh
  405cd9:	test   eax,0x2662e373
  405cde:	cmp    edx,esi
  405ce0:	inc    eax
  405ce1:	jo     0x405ce3
  405ce3:	adc    al,0xf4
  405ce5:	stos   DWORD PTR es:[edi],eax
  405ce6:	adc    al,ah
  405ce8:	lds    esp,FWORD PTR [edi+0x7c319546]
  405cee:	in     al,dx
  405cef:	fsubr  st,st(7)
  405cf1:	add    edx,DWORD PTR [ecx+eax*4]
  405cf4:	xchg   esp,eax
  405cf5:	xor    DWORD PTR [eax-0x5c],edi
  405cf8:	imul   ebp,DWORD PTR ds:0xb92fb660,0x6b95d364
  405d02:	popf   
  405d03:	fadd   QWORD PTR [ebx+ebp*1-0x2c]
  405d07:	in     al,0x8b
  405d09:	mov    bh,0xb3
  405d0b:	add    BYTE PTR [edi+0x7eace107],al
  405d11:	test   al,0xb
  405d13:	fisttp WORD PTR [esi-0x1baf1119]
  405d19:	mov    ch,bl
  405d1b:	loop   0x405d8f
  405d1d:	dec    ebx
  405d1e:	repnz cmp BYTE PTR [ebx-0x66],0x63
  405d23:	sbb    BYTE PTR [edx-0x49],dl
  405d26:	push   0x7cfd0f69
  405d2b:	je     0x405d05
  405d2d:	out    dx,al
  405d2e:	sbb    BYTE PTR [edi-0x8],bh
  405d31:	jmp    0x49c7f695
  405d36:	scas   al,BYTE PTR es:[edi]
  405d37:	add    ecx,esi
  405d39:	jo     0x405cea
  405d3b:	pushf  
  405d3c:	mov    ecx,?
  405d3e:	jbe    0x405d70
  405d40:	dec    eax
  405d41:	or     DWORD PTR [eax],esp
  405d43:	test   al,0xb8
  405d45:	sub    eax,0x863b23f5
  405d4a:	pop    esp
  405d4b:	inc    ecx
  405d4c:	sub    al,0x8c
  405d4e:	xor    BYTE PTR [ebp+eax*4+0x3c],al
  405d52:	xchg   edx,eax
  405d53:	push   ecx
  405d54:	repnz sub bh,BYTE PTR [edx+ebp*2+0x28]
  405d59:	inc    edi
  405d5a:	(bad)  [edi+eiz*2]
  405d5d:	mov    cs:0xeeddefdd,al
  405d63:	mov    ch,0xcf
  405d65:	adc    ebp,0xffffff94
  405d68:	jg     0x405db5
  405d6a:	js     0x405dd7
  405d6c:	push   ds
  405d6d:	out    0x89,eax
  405d6f:	ins    BYTE PTR es:[edi],dx
  405d70:	int3   
  405d71:	ins    DWORD PTR es:[edi],dx
  405d72:	xchg   ecx,eax
  405d73:	in     al,0xee
  405d75:	call   0xa0140967
  405d7a:	imul   esp,DWORD PTR gs:[esi+0x2d126b35],0x83ef5b37
  405d85:	xchg   ebx,eax
  405d86:	pop    esi
  405d88:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405d89:	test   BYTE PTR [ecx+ebp*2],0x5d
  405d8d:	xor    eax,0x28365aec
  405d92:	and    bl,bl
  405d94:	dec    eax
  405d95:	shl    DWORD PTR [eax+0x6de1479],1
  405d9b:	outs   dx,BYTE PTR ds:[esi]
  405d9c:	sbb    esp,DWORD PTR [ecx+0x9]
  405d9f:	loopne 0x405dd1
  405da1:	repz mov dh,0x37
  405da4:	fidivr WORD PTR [esi+0x18e29f73]
  405daa:	pop    esp
  405dab:	les    edx,FWORD PTR [ebp-0x37b04ae7]
  405db1:	sar    bh,cl
  405db3:	xor    ah,BYTE PTR [ecx+0xd2751f8]
  405db9:	shl    DWORD PTR [eax-0x56],0x49
  405dbd:	hlt    
  405dbe:	test   bl,0x67
  405dc1:	cmc    
  405dc2:	mov    ebp,0x21231b73
  405dc7:	lds    eax,FWORD PTR [esi-0x39]
  405dca:	xor    BYTE PTR [edi-0x3b64e2ec],dl
  405dd0:	push   esp
  405dd1:	push   ecx
  405dd2:	inc    esp
  405dd3:	jmp    0x8cfc:0xfbaa6876
  405dda:	cli    
  405ddb:	pop    eax
  405ddc:	ret    
  405ddd:	inc    eax
  405dde:	aad    0x1e
  405de0:	push   0x56bf0ef
  405de5:	mov    esp,0x459d20df
  405dea:	and    BYTE PTR [ebx],0x53
  405ded:	(bad)  
  405dee:	mov    dl,0xe3
  405df0:	inc    ecx
  405df1:	mov    DWORD PTR [esi],edx
  405df3:	test   DWORD PTR [ecx-0x1bec6d2f],edx
  405df9:	loope  0x405da9
  405dfb:	int    0x86
  405dfd:	xchg   BYTE PTR [edx+ecx*4+0x40],bh
  405e01:	mov    edi,ds
  405e03:	enter  0x1967,0x98
  405e07:	inc    esi
  405e08:	mov    edi,0xab626a51
  405e0d:	jp     0x405dde
  405e0f:	mov    ebp,0xc589062
  405e14:	and    ebp,esp
  405e16:	inc    esp
  405e17:	xor    BYTE PTR [esi],ah
  405e19:	jp     0x405e5c
  405e1b:	push   esi
  405e1c:	leave  
  405e1d:	jo     0x405dcb
  405e1f:	ins    BYTE PTR es:[edi],dx
  405e20:	dec    ebx
  405e21:	pop    esi
  405e22:	lock xchg esi,eax
  405e24:	cmp    BYTE PTR [eax+0x67f6a58e],ah
  405e2a:	dec    edx
  405e2b:	into   
  405e2c:	aaa    
  405e2d:	pop    esp
  405e2e:	cmp    ebx,DWORD PTR [ecx-0x5d]
  405e31:	jg     0x405e1e
  405e33:	mov    ecx,0x89fd7d04
  405e38:	shl    BYTE PTR [edx],0x5b
  405e3b:	or     al,0x3f
  405e3d:	add    eax,0xe69bd97d
  405e42:	shr    DWORD PTR [ebp-0xf],0x8e
  405e46:	test   BYTE PTR [edi-0x3efc3dcd],dh
  405e4c:	mov    ecx,DWORD PTR [ebp+0xc]
  405e4f:	imul   eax,ecx
  405e52:	add    eax,DWORD PTR [ebp+0x8]
  405e55:	mov    DWORD PTR [ebp+0xc],eax
  405e58:	mov    eax,DWORD PTR [ebp+0xc]
  405e5b:	pop    esi
  405e5c:	leave  
  405e5d:	ret    0x8
  405e60:	push   ebp
  405e61:	mov    ebp,esp
  405e63:	push   ecx
  405e64:	add    DWORD PTR ds:0x42e70f,0x1508
  405e6e:	mov    DWORD PTR [ebp-0x4],0xf89c853d
  405e75:	mov    eax,DWORD PTR [ebp-0x4]
  405e78:	mov    edx,DWORD PTR [ebp+0x10]
  405e7b:	adc    DWORD PTR ds:0x42e6ef,0x4006
  405e85:	mov    ecx,0x7510855
  405e8a:	xor    DWORD PTR ds:0x42fd01,0x260
  405e94:	xor    eax,ecx
  405e96:	jmp    0x40605c
  405e9b:	fidiv  DWORD PTR [edx+0x7b]
  405e9e:	jle    0x405e33
  405ea0:	jne    0x405e7b
  405ea2:	jb     0x405e2d
  405ea4:	(bad)  
  405ea5:	(bad)  
  405ea6:	sub    al,0x39
  405ea8:	and    esi,DWORD PTR [esi+edx*2+0x3e]
  405eac:	aas    
  405ead:	jo     0x405f1f
  405eaf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405eb0:	jg     0x405f22
  405eb2:	jo     0x405e3b
  405eb4:	mov    eax,0x4f5fd7eb
  405eb9:	mov    cl,0xed
  405ebb:	fsubr  QWORD PTR [esi+edx*8+0x216fbdfb]
  405ec2:	pop    es
  405ec3:	sti    
  405ec4:	jo     0x405ed3
  405ec6:	ins    DWORD PTR es:[edi],dx
  405ec7:	add    DWORD PTR [ebx-0x1e133c96],eax
  405ecd:	xor    DWORD PTR [ebx],edx
  405ecf:	jmp    0xe1173f5d
  405ed4:	repz imul esi,DWORD PTR [edx],0x968e549a
  405edb:	pushf  
  405edc:	push   bp
  405ede:	pushf  
  405edf:	sti    
  405ee0:	pusha  
  405ee1:	das    
  405ee2:	call   0x9ce9:0x457cf9f6
  405ee9:	fisttp WORD PTR [ebx-0x10d5db72]
  405eef:	sub    BYTE PTR [edx+0x6b],al
  405ef2:	push   esp
  405ef3:	pushf  
  405ef4:	mov    DWORD PTR [eax+edi*8+0x7a307642],0x4ce0a7a8
  405eff:	in     al,0xc8
  405f01:	mov    ch,0xc8
  405f03:	jp     0x405f4e
  405f05:	call   0x9d1f:0xbd4b7768
  405f0c:	mov    ebx,0x11a6574f
  405f11:	pusha  
  405f12:	imul   edi,esi,0xefecfa05
  405f18:	or     BYTE PTR [esi-0x65],0x63
  405f1c:	lods   al,BYTE PTR ds:[esi]
  405f1d:	pop    ebx
  405f1e:	cdq    
  405f1f:	lods   al,BYTE PTR ds:[esi]
  405f20:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405f21:	retf   0x1762
  405f24:	xchg   BYTE PTR [ebx+0x2b],ah
  405f27:	mov    dh,0x11
  405f29:	pop    esi
  405f2a:	les    esp,FWORD PTR [edx+0x54afb42d]
  405f30:	in     al,0x8a
  405f32:	shr    DWORD PTR [ebp-0x513f92bd],0x63
  405f39:	pop    edx
  405f3a:	fldenv [esi+0x46]
  405f3d:	es daa 
  405f3f:	inc    ebp
  405f40:	jl     0x405ef6
  405f42:	pop    edi
  405f43:	ins    DWORD PTR es:[edi],dx
  405f44:	and    al,0xc
  405f46:	push   cs
  405f47:	call   0x3e79:0x643f7cd8
  405f4e:	out    dx,al
  405f4f:	stos   BYTE PTR es:[edi],al
  405f50:	add    DWORD PTR [ebx+eax*4+0xb5087da],eax
  405f57:	in     al,dx
  405f58:	dec    esi
  405f59:	repnz dec esi
  405f5b:	or     eax,0x4e06a99
  405f60:	sar    DWORD PTR [ebp+eiz*1-0x2e],0xf6
  405f65:	pop    esp
  405f66:	and    cl,BYTE PTR [edi]
  405f68:	(bad)  
  405f69:	fadd   DWORD PTR [edx+0x1a36338d]
  405f6f:	cdq    
  405f70:	adc    BYTE PTR [ecx-0x115b3251],al
  405f76:	aas    
  405f77:	add    ah,BYTE PTR ds:0x6b096dd8
  405f7d:	out    0xfb,al
  405f7f:	xchg   BYTE PTR [esi],dh
  405f81:	or     eax,0x771527c9
  405f86:	mov    esi,0x22c016c7
  405f8b:	into   
  405f8c:	in     al,dx
  405f8d:	(bad)  
  405f8e:	sbb    al,0xaf
  405f90:	mov    ebx,0x7ef71d95
  405f95:	dec    eax
  405f96:	cmp    eax,ebp
  405f98:	inc    ebp
  405f99:	xchg   edx,eax
  405f9a:	rol    BYTE PTR [eax],1
  405f9c:	retf   
  405f9d:	das    
  405f9e:	sbb    BYTE PTR [ecx-0x7c],0x0
  405fa2:	jne    0x405f54
  405fa4:	pushf  
  405fa5:	and    BYTE PTR ds:0x49b3db66,dl
  405fab:	lods   eax,DWORD PTR ds:[esi]
  405fac:	sahf   
  405fad:	cmp    edi,ebp
  405faf:	sub    esi,DWORD PTR [eax-0x40]
  405fb2:	int3   
  405fb3:	in     al,dx
  405fb4:	leave  
  405fb5:	hlt    
  405fb6:	fimul  DWORD PTR [edx-0x608aacb8]
  405fbc:	xor    eax,0x4c5071af
  405fc1:	retf   0xc585
  405fc4:	inc    esi
  405fc5:	leave  
  405fc6:	dec    ecx
  405fc7:	lock retf 
  405fc9:	int    0x20
  405fcb:	gs in  al,dx
  405fcd:	jmp    0x7eb25e6b
  405fd2:	bound  ebp,QWORD PTR [edi+0x475c87d1]
  405fd8:	(bad)  
  405fd9:	jo     0x405f64
  405fdb:	add    edx,esp
  405fdd:	rcr    dl,cl
  405fdf:	xchg   edx,eax
  405fe0:	fsub   DWORD PTR [esp+edx*2]
  405fe3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405fe4:	add    DWORD PTR [ebp-0x47eb4669],ebp
  405fea:	sahf   
  405feb:	cdq    
  405fec:	test   BYTE PTR [ebx],al
  405fee:	mov    ch,0x23
  405ff0:	mov    ebp,0x73716f40
  405ff5:	adc    cl,ah
  405ff7:	mov    ds:0x8e99eed6,al
  405ffc:	dec    edi
  405ffd:	cmp    ecx,DWORD PTR [esi-0x54]
  406000:	dec    edx
  406001:	xor    bh,BYTE PTR [ebp-0x9]
  406004:	(bad)  
  406005:	mov    ds:0xe3cb66b9,al
  40600a:	xor    al,0x5
  40600c:	test   BYTE PTR [ebp-0x60],cl
  40600f:	lods   al,BYTE PTR ds:[esi]
  406010:	imul   esi,DWORD PTR [edx],0x1b7a937a
  406016:	scas   al,BYTE PTR es:[edi]
  406017:	cld    
  406018:	sbb    DWORD PTR [ebx-0x712584d2],esi
  40601e:	inc    eax
  40601f:	mov    ah,0xe1
  406021:	push   ecx
  406022:	sar    DWORD PTR [ecx+edx*4],1
  406025:	retf   0x4142
  406028:	mov    DWORD PTR [edi],ebx
  40602a:	cmp    al,BYTE PTR [ecx-0x33]
  40602d:	sbb    ch,BYTE PTR [ebp+0x27]
  406030:	jb     0x40604a
  406032:	fcom   DWORD PTR [ecx-0x7f]
  406035:	mov    al,0x94
  406037:	and    BYTE PTR [ecx],0xab
  40603a:	add    BYTE PTR [ebp-0x21],ah
  40603d:	clc    
  40603e:	mov    ecx,0x7aabc838
  406043:	jl     0x406048
  406045:	cwde   
  406046:	inc    ebx
  406047:	ret    
  406048:	(bad)  
  406049:	adc    dh,BYTE PTR [esi-0x45]
  40604c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40604d:	retf   
  40604e:	push   es
  40604f:	push   ebx
  406050:	or     al,0x32
  406052:	xchg   edx,eax
  406054:	cdq    
  406055:	out    0xcb,eax
  406057:	outs   dx,DWORD PTR ds:[esi]
  406058:	pop    eax
  406059:	into   
  40605a:	call   0x32:0x729c054d
  406061:	or     DWORD PTR ds:0x42fd86,0xae4
  40606b:	mov    DWORD PTR [edx],eax
  40606d:	mov    eax,DWORD PTR [ebp+0xc]
  406070:	xor    eax,ecx
  406072:	push   esi
  406073:	sbb    edx,DWORD PTR ds:0x42e118
  406079:	mov    esi,DWORD PTR [ebp+0x10]
  40607c:	or     DWORD PTR ds:0x42fd76,edx
  406082:	mov    edx,0x32729c
  406087:	sbb    DWORD PTR ds:0x42fcf1,0x42e11c
  406091:	add    eax,edx
  406093:	adc    DWORD PTR ds:0x42fcd1,0x42e6fb
  40609d:	mov    DWORD PTR [esi+0x4],eax
  4060a0:	sbb    eax,0x6979
  4060a5:	mov    eax,DWORD PTR [ebp+0x14]
  4060a8:	adc    DWORD PTR ds:0x42fd82,0x2335
  4060b2:	mov    esi,DWORD PTR [ebp+0x10]
  4060b5:	sub    DWORD PTR ds:0x42fcd5,0x1c02
  4060bf:	mov    DWORD PTR [esi+0x8],eax
  4060c2:	or     eax,DWORD PTR ds:0x42fd05
  4060c8:	jmp    0x40628e
  4060cd:	out    dx,al
  4060ce:	hlt    
  4060cf:	arpl   WORD PTR [edx],dx
  4060d1:	popa   
  4060d2:	xchg   ecx,eax
  4060d3:	ins    DWORD PTR es:[edi],dx
  4060d4:	hlt    
  4060d5:	(bad)  
  4060d6:	pop    esp
  4060d7:	xor    eax,0xc047ef96
  4060dc:	and    BYTE PTR [ebp+0x3e],0x70
  4060e0:	jo     0x406089
  4060e2:	jg     0x406154
  4060e4:	jo     0x4060cf
  4060e6:	mov    ah,BYTE PTR [edx+0x11a75140]
  4060ec:	adc    edi,0xac69bc4c
  4060f2:	lahf   
  4060f3:	jecxz  0x4060f3
  4060f5:	add    ch,ah
  4060f7:	mov    fs,WORD PTR [ebp+edi*1+0x56]
  4060fb:	(bad)  
  4060fc:	retf   
  4060fd:	mov    ch,0xfb
  4060ff:	js     0x4060de
  406101:	adc    BYTE PTR [edx+0x48],bl
  406104:	jg     0x406166
  406106:	sub    eax,0xb76e5338
  40610b:	(bad)  
  40610c:	rcl    BYTE PTR [edx],0xf0
  40610f:	ja     0x4060e7
  406111:	cmp    al,0xfe
  406113:	add    ebp,DWORD PTR [ecx-0x147b48ee]
  406119:	inc    ebp
  40611b:	daa    
  40611c:	mov    ebx,0x7a656d5f
  406121:	pop    esi
  406122:	push   ebx
  406123:	repz in al,0xe6
  406126:	popa   
  406127:	leave  
  406128:	fcmovnb st,st(5)
  40612a:	or     BYTE PTR [esi],bh
  40612c:	sar    DWORD PTR [edi],cl
  40612e:	sbb    ah,BYTE PTR [esp+edi*4]
  406131:	ds jo  0x4061ab
  406134:	mov    eax,ds:0x12dd5219
  406139:	loopne 0x406142
  40613b:	or     DWORD PTR [edx-0x1d],0x4c
  40613f:	dec    edx
  406140:	fs mov dl,0xc
  406143:	fdivrp st(1),st
  406145:	ficomp DWORD PTR [ebp-0x72]
  406148:	mov    eax,ds:0x5a17d6cd
  40614d:	sub    DWORD PTR [edi+eiz*1],eax
  406150:	retf   
  406151:	pop    es
  406152:	in     eax,dx
  406153:	mov    ah,0xa
  406155:	push   0xabdce90d
  40615a:	mov    bl,0x1c
  40615c:	aaa    
  40615d:	(bad)  
  40615e:	clc    
  40615f:	aad    0xf2
  406161:	inc    ebx
  406162:	pop    ebx
  406163:	and    eax,eax
  406165:	and    al,0x37
  406167:	push   DWORD PTR [edx]
  406169:	ret    0x1212
  40616c:	in     eax,0x25
  40616e:	test   eax,0x779e9087
  406173:	cmp    DWORD PTR cs:[eax+0x6b2011e7],esp
  40617a:	jle    0x4061db
  40617c:	imul   esi,DWORD PTR [ebx+0x7f4d1622],0xdae3c173
  406186:	push   esi
  406187:	mov    BYTE PTR [ebx+0x62],ah
  40618a:	dec    esp
  40618b:	pushf  
  40618c:	jbe    0x406119
  40618e:	into   
  40618f:	xor    al,0x24
  406191:	pop    ebp
  406192:	adc    DWORD PTR [esi+0x33c15ff9],0xffffffc6
  406199:	xchg   ebp,eax
  40619a:	inc    esi
  40619b:	xchg   ebp,eax
  40619c:	into   
  40619d:	dec    ebx
  40619e:	mov    al,0xb0
  4061a0:	inc    eax
  4061a1:	jmp    0x4061c7
  4061a3:	inc    eax
  4061a4:	jg     0x406222
  4061a6:	sbb    eax,DWORD PTR ds:0xbd081e29
  4061ac:	pop    es
  4061ad:	fst    QWORD PTR [eax]
  4061af:	push   cs
  4061b0:	sahf   
  4061b1:	retf   0x9722
  4061b4:	cmp    eax,0xa1ae4f7e
  4061b9:	push   eax
  4061ba:	cmp    eax,0x428bd986
  4061bf:	lods   al,BYTE PTR ds:[esi]
  4061c0:	xor    ebp,DWORD PTR [ebp+0x448bfcd0]
  4061c6:	and    al,0xe7
  4061c8:	jg     0x4061c6
  4061ca:	push   esi
  4061cb:	mov    edx,0x948f1220
  4061d0:	fisubr DWORD PTR [edi+eiz*8-0x273f6d59]
  4061d7:	jno    0x40616f
  4061d9:	push   ss
  4061da:	pusha  
  4061db:	je     0x40616a
  4061dd:	fst    QWORD PTR [edx+eiz*2-0x7f]
  4061e1:	shl    edi,cl
  4061e3:	repnz adc ebp,ebx
  4061e6:	jmp    0xc456:0x6e0748de
  4061ed:	fcmovb st,st(5)
  4061ef:	ret    0x6b67
  4061f2:	ja     0x406219
  4061f4:	add    eax,0x1acdafc7
  4061f9:	mov    ebp,fs
  4061fb:	or     al,0xf
  4061fd:	aam    0xd6
  4061ff:	scas   al,BYTE PTR es:[edi]
  406200:	adc    bl,BYTE PTR [edx+0xaf22d9e]
  406206:	sbb    al,0xa8
  406208:	lds    ebx,FWORD PTR ds:0x63c96c14
  40620e:	mov    bh,0x26
  406210:	cmp    eax,0xb67da830
  406215:	mov    WORD PTR [ebp+0x42],es
  406218:	push   esp
  406219:	stos   DWORD PTR es:[edi],eax
  40621a:	inc    esp
  40621b:	out    0x8f,eax
  40621d:	add    BYTE PTR [edx],ah
  40621f:	(bad)  
  406220:	int    0xf3
  406222:	cmp    DWORD PTR [eax+eax*1+0xf],edx
  406226:	xor    al,dl
  406228:	lods   al,BYTE PTR ds:[si]
  40622a:	jmp    0x40621d
  40622c:	mov    ebx,0x87114fa5
  406231:	inc    ecx
  406232:	jnp    0x4061e7
  406234:	icebp  
  406235:	jo     0x4061c4
  406237:	xchg   ebp,eax
  406238:	xor    eax,0xb078376f
  40623d:	les    esp,FWORD PTR [eax]
  40623f:	or     ecx,eax
  406241:	ds jge 0x40628f
  406244:	fsubr  DWORD PTR [eax-0x3e]
  406247:	or     eax,0x9758c290
  40624c:	xor    DWORD PTR [edi],ebp
  40624e:	popf   
  40624f:	mov    ebp,ss
  406251:	xchg   ebp,eax
  406252:	sub    al,0x2b
  406254:	xor    BYTE PTR ds:0x1f5f5c45,bh
  40625a:	cmp    bl,BYTE PTR [edx]
  40625c:	popf   
  40625d:	cmp    DWORD PTR [ebx-0x17],esp
  406260:	shl    BYTE PTR [ebx-0x4],1
  406263:	(bad)  
  406264:	push   0x7d5ed7ba
  406269:	jnp    0x4061ed
  40626b:	pushf  
  40626c:	mov    ch,dl
  40626e:	mov    ah,0x6d
  406270:	ret    
  406271:	sbb    ch,dl
  406273:	mov    eax,0x89b331fd
  406278:	xor    al,0xbf
  40627a:	sub    DWORD PTR [edi+0x1f1a0fb8],ebx
  406280:	int3   
  406281:	xor    dl,ah
  406283:	pop    ds
  406284:	sbb    al,0xcb
  406286:	mov    bl,0x1c
  406288:	jo     0x4062dc
  40628a:	xchg   esp,eax
  40628b:	sbb    eax,DWORD PTR cs:[esi]
  40628e:	mov    eax,DWORD PTR [ebp+0x18]
  406291:	mov    esi,DWORD PTR [ebp+0x10]
  406294:	sub    DWORD PTR ds:0x42fd09,0x42fd86
  40629e:	mov    DWORD PTR [esi+0xc],eax
  4062a1:	or     DWORD PTR ds:0x42e6f3,ecx
  4062a7:	mov    eax,DWORD PTR [ebp+0x1c]
  4062aa:	mov    DWORD PTR ds:0x42fd72,0x1e
  4062b4:	cmp    DWORD PTR ds:0x42fd72,0x0
  4062bb:	je     0x40630e
  4062c1:	cmp    DWORD PTR ds:0x42fd72,0x7
  4062c8:	jne    0x4062e2
  4062ce:	push   0x4403
  4062d3:	push   DWORD PTR [ebp-0x10]
  4062d6:	push   DWORD PTR [ebp-0x24]
  4062d9:	push   DWORD PTR [ebp-0x10]
  4062dc:	call   DWORD PTR ds:0x42e53b
  4062e2:	cmp    DWORD PTR ds:0x42fd72,0x8
  4062e9:	jne    0x4062fc
  4062ef:	mov    esi,DWORD PTR ds:0x42fd72
  4062f5:	dec    esi
  4062f6:	mov    DWORD PTR ds:0x42fd72,esi
  4062fc:	mov    esi,DWORD PTR ds:0x42fd72
  406302:	dec    esi
  406303:	mov    DWORD PTR ds:0x42fd72,esi
  406309:	jmp    0x4062b4
  40630e:	mov    esi,DWORD PTR [ebp+0x10]
  406311:	mov    DWORD PTR [esi+0x10],eax
  406314:	mov    eax,eax
  406316:	mov    eax,DWORD PTR [ebp+0x8]
  406319:	xor    eax,ecx
  40631b:	add    eax,edx
  40631d:	jmp    0x4064e3
  406322:	jge    0x4063a3
  406324:	gs cli 
  406326:	gs (bad) 
  406329:	sti    
  40632a:	ret    
  40632b:	pusha  
  40632c:	jo     0x4062dd
  40632e:	mov    ebx,DWORD PTR [ebx+0x3c8cd8fb]
  406334:	jo     0x4063a6
  406336:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406337:	jg     0x4063a9
  406339:	jo     0x406372
  40633b:	cmp    DWORD PTR [ebx+0x6d],0xef5192e3
  406342:	retf   0xd225
  406345:	(bad)  
  406346:	imul   edx,edx,0xffffffdf
  406349:	or     eax,0xafb6b6cf
  40634e:	mov    al,ds:0xad8d212c
  406353:	xchg   esi,eax
  406354:	sub    DWORD PTR [edi-0x4e],0xb3b92e3d
  40635b:	push   ebx
  40635c:	cld    
  40635d:	mov    bl,0x2f
  40635f:	or     ebp,DWORD PTR [ecx-0x7753b4d]
  406365:	aam    0x2d
  406367:	imul   ecx,DWORD PTR ds:0xc6c2e7e0,0x89d2eb48
  406371:	push   0x32
  406373:	loopne 0x406334
  406375:	inc    ebx
  406376:	in     al,dx
  406377:	add    ecx,DWORD PTR [edi+0x238c81e9]
  40637d:	jb     0x4063c5
  40637f:	leave  
  406380:	jnp    0x4063fa
  406382:	jo     0x4063bf
  406384:	push   bp
  406386:	pop    esp
  406387:	mov    DWORD PTR [ecx-0x53],eax
  40638a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40638b:	sub    DWORD PTR [edi-0x73468afd],0x49
  406392:	lds    ebx,FWORD PTR [edx+0x19]
  406395:	jbe    0x406386
  406397:	mov    edx,fs
  406399:	push   esi
  40639a:	lock cmp eax,0xef7abcbb
  4063a0:	nop
  4063a1:	fnstsw WORD PTR [ebx]
  4063a3:	icebp  
  4063a4:	es pop eax
  4063a6:	sub    esi,DWORD PTR [edi]
  4063a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4063a9:	les    esi,FWORD PTR [edx]
  4063ab:	cld    
  4063ac:	leave  
  4063ad:	mov    ebp,0x532c3d3e
  4063b2:	jmp    0x3401:0xe461e1c5
  4063b9:	xchg   BYTE PTR [esi-0x6844fd63],bl
  4063bf:	lods   al,BYTE PTR ds:[esi]
  4063c0:	stc    
  4063c1:	push   ss
  4063c2:	ins    DWORD PTR es:[edi],dx
  4063c3:	cli    
  4063c4:	mov    al,ds:0xc24a5d87
  4063c9:	repz div edx
  4063cc:	adc    ch,cl
  4063ce:	into   
  4063cf:	mov    WORD PTR [edx+0x6f54efe0],?
  4063d5:	push   edx
  4063d6:	out    0x68,al
  4063d8:	(bad)  
  4063da:	sub    eax,0x9d16b434
  4063df:	in     al,dx
  4063e0:	popa   
  4063e1:	(bad)  
  4063e2:	fild   DWORD PTR [ebp-0xc]
  4063e5:	repz mov esi,0xe9980b96
  4063eb:	cdq    
  4063ec:	test   ah,ch
  4063ee:	push   edi
  4063ef:	push   ebx
  4063f0:	xor    BYTE PTR [esi],al
  4063f2:	adc    esp,edi
  4063f4:	imul   esi,eax,0x48
  4063f7:	fisttp WORD PTR [esi+0x4b]
  4063fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4063fb:	fmul   st(4),st
  4063fd:	es sbb al,bh
  406400:	or     DWORD PTR [ebx+edx*2],ebx
  406403:	popa   
  406404:	mov    edx,0xfb68f03c
  406409:	inc    edi
  40640a:	sbb    BYTE PTR [ebx],bl
  40640c:	add    DWORD PTR [esi-0x2000f98],0x2e
  406413:	push   eax
  406414:	inc    ebx
  406415:	jge    0x4063e1
  406417:	dec    edx
  406418:	fimul  DWORD PTR [ebp+0x16]
  40641b:	jp     0x40647b
  40641d:	and    BYTE PTR [ebx],dl
  40641f:	fwait
  406420:	xchg   ebp,eax
  406421:	xor    al,0x4b
  406423:	xchg   edi,esp
  406425:	arpl   WORD PTR [eax],dx
  406427:	mov    esp,0x47c6cfaa
  40642c:	pop    ebx
  40642d:	in     eax,0x1e
  40642f:	fmul   QWORD PTR [edx+0x5e]
  406432:	test   DWORD PTR [ebp+0x4b172c45],ecx
  406438:	pop    ecx
  406439:	or     bh,BYTE PTR [ecx+0x6]
  40643c:	inc    edi
  40643d:	xor    DWORD PTR [ecx-0x23],ecx
  406440:	test   DWORD PTR [edx],esp
  406442:	xor    bl,BYTE PTR [ecx-0xb8fd17d]
  406448:	inc    esi
  406449:	stos   BYTE PTR es:[edi],al
  40644a:	adc    al,0xfa
  40644c:	ja     0x406401
  40644e:	mov    dh,0x29
  406450:	(bad)  
  406451:	ins    BYTE PTR es:[edi],dx
  406452:	pop    ebp
  406453:	add    esi,DWORD PTR [ecx]
  406455:	jl     0x40645d
  406457:	xlat   BYTE PTR ds:[ebx]
  406458:	cld    
  406459:	dec    esi
  40645a:	add    eax,0xfe26c92b
  40645f:	pusha  
  406460:	neg    BYTE PTR ds:0x540bc189
  406466:	and    DWORD PTR [eax+0xdd590a9],ebp
  40646c:	mov    ds:0xeee0c856,eax
  406471:	pop    ds
  406472:	inc    esp
  406473:	cmp    al,0xd7
  406475:	std    
  406476:	mov    ah,BYTE PTR [esi+0x4]
  406479:	or     ah,BYTE PTR [esi+edx*2+0x57]
  40647d:	push   ss
  40647e:	jge    0x406443
  406480:	push   ecx
  406481:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406482:	push   ss
  406483:	icebp  
  406484:	shr    DWORD PTR [ebp-0x7682265c],cl
  40648a:	ds jno 0x406498
  40648d:	xor    esi,ecx
  40648f:	cmp    BYTE PTR [ecx+0x43e4cfe7],cl
  406495:	aad    0xd6
  406497:	sahf   
  406498:	add    BYTE PTR [ebx+0x3be8e1c7],cl
  40649e:	mov    ebp,0xb7744a73
  4064a3:	out    dx,al
  4064a4:	jb     0x4064c8
  4064a6:	pop    ebx
  4064a7:	test   DWORD PTR [ecx],ebp
  4064a9:	xchg   BYTE PTR [edx],ah
  4064ab:	cmp    bl,BYTE PTR [ebx+0x6]
  4064ae:	daa    
  4064af:	(bad)  
  4064b0:	jae    0x406501
  4064b2:	out    dx,eax
  4064b3:	adc    ch,ch
  4064b5:	or     BYTE PTR [esi-0x7404d6ac],0xd7
  4064bc:	push   DWORD PTR [ebp+edx*4+0x6226d62]
  4064c3:	and    ah,0x1a
  4064c6:	fimul  WORD PTR [ecx+0x73e937db]
  4064cc:	cmp    ch,BYTE PTR [eax]
  4064ce:	ins    DWORD PTR es:[edi],dx
  4064cf:	xchg   edi,eax
  4064d0:	xor    al,0xf
  4064d2:	test   al,0xa8
  4064d4:	in     al,0x29
  4064d6:	imul   esp,ebx,0xa0cf8b18
  4064dc:	fwait
  4064dd:	sub    al,0xad
  4064df:	cmp    bh,cl
  4064e1:	les    ebx,FWORD PTR [ecx]
  4064e3:	pop    esi
  4064e4:	leave  
  4064e5:	ret    0x18
  4064e8:	push   ebp
  4064e9:	mov    ebp,esp
  4064eb:	mov    eax,DWORD PTR [ebp+0xc]
  4064ee:	xor    edx,edx
  4064f0:	mov    ecx,0x7264fca9
  4064f5:	div    ecx
  4064f7:	mov    ecx,DWORD PTR [ebp+0x10]
  4064fa:	and    ecx,eax
  4064fc:	or     ecx,0x81161d8f
  406502:	mov    eax,ecx
  406504:	pop    ebp
  406505:	ret    0x18
  406508:	push   ebp
  406509:	mov    ebp,esp
  40650b:	push   ecx
  40650c:	adc    DWORD PTR ds:0x42fd76,edi
  406512:	mov    DWORD PTR [ebp-0x4],0xf89c853d
  406519:	mov    eax,DWORD PTR [ebp-0x4]
  40651c:	sbb    ecx,DWORD PTR ds:0x42fcf9
  406522:	mov    edx,DWORD PTR [ebp+0x10]
  406525:	mov    ecx,0x7510855
  40652a:	xor    eax,ecx
  40652c:	add    eax,0x32729c
  406531:	mov    DWORD PTR [edx],eax
  406533:	sub    DWORD PTR ds:0x42fd72,edi
  406539:	mov    eax,DWORD PTR [ebp+0x14]
  40653c:	sub    DWORD PTR ds:0x42fd72,ecx
  406542:	mov    edx,DWORD PTR [ebp+0x10]
  406545:	and    DWORD PTR ds:0x42fcd9,0x42e6fb
  40654f:	mov    DWORD PTR [edx+0x4],eax
  406552:	mov    eax,DWORD PTR [ebp+0x18]
  406555:	jmp    0x4067e0
  40655a:	mov    ss,edx
  40655c:	jg     0x40659a
  40655e:	inc    ebx
  40655f:	ror    DWORD PTR [ecx+0x52],1
  406562:	jae    0x4065d2
  406564:	pop    edx
  406565:	dec    ecx
  406566:	push   eax
  406567:	fistp  WORD PTR [edx+0x703a330f]
  40656d:	jo     0x406551
  40656f:	jle    0x4065e1
  406571:	jo     0x406534
  406573:	popf   
  406574:	repz jmp 0x3dbd:0x5511a931
  40657c:	vpsrad ymm7,ymm3,XMMWORD PTR gs:[edi-0x6c963335]
  406585:	inc    esp
  406586:	or     eax,0xfce4fb92
  40658b:	mov    edi,0x77c19c7f
  406590:	push   ecx
  406591:	and    BYTE PTR [esi+0x28],bh
  406594:	xchg   BYTE PTR [edx+edx*2],bh
  406597:	mov    bh,0xd6
  406599:	gs retf 0x14c0
  40659d:	mov    bh,0x45
  40659f:	fdiv   DWORD PTR [ecx]
  4065a1:	and    dh,al
  4065a3:	loope  0x4065c0
  4065a5:	mov    BYTE PTR [edx],bh
  4065a7:	aam    0x63
  4065a9:	repz xor DWORD PTR [ebp-0x1a],ebx
  4065ad:	lods   eax,DWORD PTR ds:[esi]
  4065ae:	xchg   esp,eax
  4065af:	fsub   DWORD PTR [ecx+eax*4-0x94d93c7]
  4065b6:	shl    ah,cl
  4065b8:	push   esi
  4065b9:	push   edi
  4065ba:	aam    0x30
  4065bc:	(bad)  
  4065bd:	xchg   ebx,eax
  4065be:	pop    edx
  4065bf:	jmp    0xb2b0:0x4b6b1fe1
  4065c6:	push   esi
  4065c7:	cdq    
  4065c8:	fbld   TBYTE PTR [eax-0x10]
  4065cb:	jb     0x4065bb
  4065cd:	cmp    edi,DWORD PTR [eax]
  4065cf:	cdq    
  4065d0:	adc    esp,DWORD PTR [esi+eiz*2]
  4065d3:	shl    BYTE PTR [ecx+ebp*8+0x5f],1
  4065d7:	pusha  
  4065d8:	(bad)  
  4065d9:	adc    BYTE PTR [eax+0x6d],al
  4065dc:	jge    0x4065f2
  4065de:	retf   0xca43
  4065e1:	in     al,dx
  4065e2:	je     0x4065b7
  4065e4:	xor    eax,0x34ec604f
  4065e9:	(bad)  
  4065eb:	sub    DWORD PTR [esi+0xa],ebp
  4065ee:	pop    ecx
  4065ef:	mov    ebp,0x73c6dee9
  4065f4:	inc    ecx
  4065f5:	push   ebx
  4065f6:	ret    0x7e82
  4065f9:	ins    BYTE PTR es:[edi],dx
  4065fa:	or     DWORD PTR [ebx+ebp*4+0x7e],ecx
  4065fe:	imul   ebx,DWORD PTR [eax+0x7b],0x9008e483
  406605:	outs   dx,BYTE PTR ds:[esi]
  406606:	shl    DWORD PTR [edi-0x4fe75080],1
  40660c:	adc    eax,0xa345c955
  406611:	xor    BYTE PTR [edx-0x232fa1e6],al
  406617:	and    al,0xdf
  406619:	pop    eax
  40661a:	push   edi
  40661b:	daa    
  40661c:	(bad)  
  40661d:	jecxz  0x4065dd
  40661f:	adc    esi,DWORD PTR [ebx+0x4abda678]
  406625:	jbe    0x40661f
  406627:	sub    dl,ch
  406629:	in     eax,dx
  40662a:	mov    ah,0x58
  40662c:	add    eax,0xc991d1ce
  406631:	pushf  
  406632:	mov    ebp,0x214b425c
  406637:	jge    0x40662e
  406639:	das    
  40663a:	cmp    DWORD PTR [ebx],0x6a
  40663d:	jle    0x406697
  40663f:	sti    
  406640:	neg    dh
  406642:	nop
  406643:	lea    ecx,[esi]
  406645:	push   ss
  406646:	sbb    al,0x16
  406648:	jae    0x4066c1
  40664a:	and    eax,0x2a600a5
  40664f:	bound  ebp,QWORD PTR [edi+0x4]
  406652:	pop    ds
  406653:	in     al,dx
  406654:	(bad)  
  406655:	cld    
  406656:	mov    bl,0x73
  406658:	xchg   ebx,eax
  406659:	jl     0x406615
  40665b:	mov    cl,0x38
  40665d:	mov    ebx,0x15c131d8
  406662:	mov    ah,0xc1
  406664:	dec    ecx
  406665:	test   DWORD PTR [edi-0x62e92328],edi
  40666b:	in     eax,dx
  40666c:	outs   dx,DWORD PTR ds:[esi]
  40666d:	lahf   
  40666e:	mov    eax,0xcdc11d94
  406673:	imul   ebx,DWORD PTR [esi-0x1eeeb29a],0xcc5d729
  40667d:	imul   ebp,edi,0xd3d2690d
  406683:	dec    esi
  406684:	mov    al,ds:0xb3a7497c
  406689:	scas   eax,DWORD PTR es:[edi]
  40668a:	(bad)  
  40668c:	push   ebp
  40668d:	arpl   WORD PTR [ecx+0x40],dx
  406690:	lea    ebx,[ecx+0x71]
  406693:	jmp    0x406675
  406695:	mov    WORD PTR [eax],ss
  406697:	sbb    dl,BYTE PTR [eax]
  406699:	xor    bh,al
  40669b:	ret    0xa70f
  40669e:	push   cs
  40669f:	ins    BYTE PTR es:[edi],dx
  4066a0:	mov    dh,0x4b
  4066a2:	mov    dh,0x65
  4066a4:	in     eax,0xd6
  4066a6:	push   edx
  4066a7:	sar    cl,cl
  4066a9:	sub    eax,0xedd9dd60
  4066ae:	pop    esi
  4066af:	xor    al,0x4b
  4066b1:	imul   ebx,DWORD PTR [eax],0x6c704428
  4066b7:	jbe    0x4066c9
  4066b9:	rol    BYTE PTR [esi-0x60],0x5b
  4066bd:	jecxz  0x406694
  4066bf:	cmc    
  4066c0:	retf   0x99c8
  4066c3:	sbb    DWORD PTR [edi-0xdbf676f],ebp
  4066c9:	inc    esi
  4066ca:	mov    edi,0x7a67d9af
  4066cf:	test   eax,0x506d8660
  4066d4:	enter  0x4438,0x9d
  4066d8:	add    al,0xe9
  4066da:	shl    BYTE PTR [ebx-0x4f66cb4b],0xb3
  4066e1:	repz ja 0x406688
  4066e4:	lds    eax,FWORD PTR fs:[ebx-0x2f606ee5]
  4066eb:	lock sahf 
  4066ed:	push   cs
  4066ee:	adc    BYTE PTR [ebx],dl
  4066f0:	mov    dl,BYTE PTR [ecx-0x80]
  4066f3:	mov    WORD PTR [edx-0x79b9b9d8],cs
  4066f9:	(bad)  
  4066fb:	sub    eax,0x50ff171
  406700:	shr    ebp,0x17
  406703:	xor    DWORD PTR [esi+0x4e],esi
  406706:	out    dx,al
  406707:	adc    BYTE PTR [ecx+eiz*1+0x24c3634e],ch
  40670e:	lock js 0x40672e
  406711:	push   fs
  406713:	shl    DWORD PTR [ecx+esi*2],1
  406716:	or     BYTE PTR [esi-0x66],ah
  406719:	sbb    BYTE PTR [eax],ch
  40671b:	add    al,0x52
  40671d:	enter  0xbc87,0xdc
  406721:	mov    ebp,0x6ba1b1ed
  406726:	nop
  406727:	adc    eax,0x97a76e47
  40672c:	and    al,0x2b
  40672e:	addr16 sti 
  406730:	(bad)  
  406731:	pop    eax
  406732:	add    DWORD PTR [ebp+0x6476dfb3],esi
  406738:	push   0xd
  40673a:	(bad)  
  40673b:	jb     0x40672c
  40673d:	jmp    0xc9191815
  406742:	dec    esi
  406743:	push   cs
  406744:	adc    al,0x8b
  406746:	lods   eax,DWORD PTR ds:[esi]
  406747:	ret    0x2c40
  40674a:	in     eax,0xc
  40674c:	cmp    DWORD PTR [ebx-0x3994eac6],ecx
  406752:	popa   
  406753:	hlt    
  406754:	inc    eax
  406755:	aam    0xd7
  406757:	ja     0x406711
  406759:	cmp    eax,0xb16698ad
  40675e:	jns    0x4066f0
  406760:	(bad)  
  406761:	repz out 0x20,eax
  406764:	aad    0x6
  406766:	jno    0x40671a
  406768:	fcom   QWORD PTR [edi-0x6cb0c2df]
  40676e:	scas   al,BYTE PTR es:[edi]
  40676f:	je     0x4067d0
  406771:	btr    DWORD PTR [ecx],eax
  406774:	sbb    eax,0x5d27b91a
  406779:	push   ecx
  40677a:	adc    BYTE PTR [ebx-0x6c],bh
  40677d:	dec    esp
  40677e:	and    DWORD PTR [ecx],ecx
  406780:	push   cs
  406781:	iret   
  406782:	push   0x685ab940
  406787:	mov    dl,0x66
  406789:	shl    BYTE PTR [ecx-0xadbd6e6],cl
  40678f:	jne    0x406762
  406791:	jmp    0x406733
  406793:	(bad)  
  406794:	mov    esi,0xfe32ec98
  406799:	mov    ch,dh
  40679b:	repnz inc edx
  40679d:	fmul   st(3),st
  40679f:	cld    
  4067a0:	sub    ebx,eax
  4067a2:	outs   dx,DWORD PTR ds:[esi]
  4067a3:	rcr    bh,1
  4067a5:	cmp    al,0xc0
  4067a7:	mov    ecx,0x3a8e3a45
  4067ac:	dec    ebp
  4067ad:	mov    eax,ds:0x74ab866
  4067b2:	shl    DWORD PTR [edi+0x2aa33d6e],cl
  4067b8:	and    eax,0x4d92a886
  4067bd:	mov    edi,0x5a0955bb
  4067c2:	or     DWORD PTR [ecx-0x51],edi
  4067c5:	mov    bl,0xc4
  4067c7:	mov    eax,eax
  4067c9:	jne    0x4067a3
  4067cb:	xchg   DWORD PTR [edx],esi
  4067cd:	sbb    DWORD PTR [ebp-0x577e4bee],ecx
  4067d3:	imul   di,WORD PTR [esi],0xffb8
  4067d7:	jb     0x406847
  4067d9:	cwde   
  4067da:	dec    ecx
  4067db:	mov    ecx,0x85a6c7c5
  4067e0:	mov    edx,DWORD PTR [ebp+0x10]
  4067e3:	mov    DWORD PTR [edx+0x8],eax
  4067e6:	xor    eax,edx
  4067e8:	mov    eax,DWORD PTR [ebp+0x1c]
  4067eb:	mov    edx,DWORD PTR [ebp+0x10]
  4067ee:	adc    DWORD PTR ds:0x42fcd5,0x1a3e
  4067f8:	mov    DWORD PTR [edx+0xc],eax
  4067fb:	mov    eax,DWORD PTR [ebp+0x20]
  4067fe:	or     DWORD PTR ds:0x42e120,0x7513
  406808:	mov    edx,DWORD PTR [ebp+0x10]
  40680b:	sub    DWORD PTR ds:0x42e6fb,0x76c6
  406815:	mov    DWORD PTR [edx+0x10],eax
  406818:	and    DWORD PTR ds:0x42fce5,0x42e713
  406822:	mov    eax,eax
  406824:	mov    eax,DWORD PTR [ebp+0x14]
  406827:	test   eax,eax
  406829:	mov    eax,DWORD PTR [ebp+0x8]
  40682c:	jne    0x406ac0
  406832:	mov    eax,DWORD PTR [ebp+0xc]
  406835:	jmp    0x406ac0
  40683a:	sub    DWORD PTR ds:0x49e98909,edi
  406840:	test   eax,0xf5555d5d
  406845:	pushf  
  406846:	push   esi
  406847:	xchg   ah,al
  406849:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40684b:	cmp    BYTE PTR [eax+0x70],dh
  40684e:	loop   0x4068ce
  406850:	jo     0x4068c2
  406852:	call   0xeb154bdf
  406857:	rcr    dl,cl
  406859:	pop    ds
  40685a:	fimul  DWORD PTR ds:0xec19de4a
  406860:	fstp   TBYTE PTR [ecx-0x60d5fe92]
  406866:	popa   
  406867:	sbb    al,0xcc
  406869:	xchg   ecx,eax
  40686a:	inc    ebp
  40686b:	xor    al,0xa6
  40686d:	fnstenv [ebp+esi*4-0x87742c5]
  406874:	xor    dl,0x54
  406877:	or     eax,0x97b7c609
  40687c:	jnp    0x406871
  40687e:	pop    edi
  40687f:	jp     0x406874
  406881:	push   edi
  406882:	jg     0x40683d
  406884:	jo     0x4068f5
  406886:	bound  esp,QWORD PTR [edx]
  406888:	mov    ebx,0x8cb402f1
  40688d:	in     eax,0xe0
  40688f:	in     al,dx
  406890:	repnz pushf 
  406892:	cmc    
  406893:	cmp    al,0xc8
  406895:	and    bl,0xd
  406898:	stc    
  406899:	aaa    
  40689a:	das    
  40689b:	loopne 0x40683c
  40689d:	push   edx
  40689e:	sub    DWORD PTR [eax],0xffffffa7
  4068a1:	and    ecx,DWORD PTR ds:0xc6fc7d37
  4068a7:	hlt    
  4068a8:	mov    DWORD PTR [eax+esi*1-0x17519fbd],esp
  4068af:	cdq    
  4068b0:	retf   
  4068b1:	push   ecx
  4068b2:	ss push es
  4068b4:	mov    edi,0x73b776bd
  4068b9:	xor    ecx,DWORD PTR [eax+eax*4+0x38]
  4068bd:	pop    eax
  4068be:	or     edi,edx
  4068c0:	aad    0x9
  4068c2:	inc    esi
  4068c3:	neg    DWORD PTR [ecx]
  4068c5:	mov    ebx,0x5b2f32f3
  4068ca:	mov    ecx,0x22164e7e
  4068cf:	retf   
  4068d0:	lock push ecx
  4068d2:	sub    edi,DWORD PTR [ecx+0x8a5ce67]
  4068d8:	fist   DWORD PTR [edx+0x2ec20b52]
  4068de:	outs   dx,DWORD PTR ds:[esi]
  4068df:	test   DWORD PTR [esi],0x46fd5b6a
  4068e5:	and    BYTE PTR [ebx],ch
  4068e7:	inc    eax
  4068e8:	cmp    esp,eax
  4068ea:	mov    edx,0x3e435a8e
  4068ef:	mov    eax,ds:0xa25232ae
  4068f4:	cmp    ah,BYTE PTR [ecx+0x12]
  4068f7:	imul   esi,ebp,0xffffffc9
  4068fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4068fb:	(bad)  
  4068fc:	call   0x9c959f0e
  406901:	mov    WORD PTR [ecx],ss
  406903:	or     al,0xfe
  406905:	push   ebp
  406906:	inc    esi
  406907:	xchg   edx,eax
  406908:	push   ecx
  406909:	stos   DWORD PTR es:[edi],eax
  40690a:	fcmovu st,st(3)
  40690c:	mov    al,0xa3
  40690e:	pop    edx
  40690f:	and    DWORD PTR [esi],edi
  406911:	test   eax,0xd7944474
  406916:	out    dx,eax
  406917:	adc    esi,esp
  406919:	jns    0x4068c8
  40691b:	mov    ch,0xf
  40691d:	xchg   ebx,eax
  40691e:	or     eax,0x7312be60
  406923:	das    
  406924:	inc    ebx
  406925:	pop    esi
  406926:	pop    esp
  406927:	mov    dh,0x15
  406929:	sbb    DWORD PTR [eax+eiz*8+0x0],0x5b
  40692e:	pop    ebp
  40692f:	in     al,0x20
  406931:	add    edx,eax
  406933:	bswap  ebp
  406935:	sbb    BYTE PTR [ecx],0xbc
  406938:	test   DWORD PTR [edi],esi
  40693a:	das    
  40693b:	in     eax,0x14
  40693d:	retf   
  40693e:	ffreep st(3)
  406940:	in     al,0x76
  406942:	and    ebp,ecx
  406944:	xor    eax,edx
  406946:	mov    ebp,0xbcb6f99f
  40694b:	inc    edi
  40694c:	mov    eax,0x8f2173b4
  406951:	dec    eax
  406952:	sub    ebx,DWORD PTR ds:0xf3b3d9f4
  406958:	jo     0x406973
  40695a:	icebp  
  40695b:	push   0xffffffa4
  40695d:	mul    BYTE PTR [edi]
  40695f:	mov    bh,0x8
  406961:	push   gs
  406963:	aaa    
  406964:	cld    
  406965:	cmp    bl,dl
  406967:	push   esp
  406968:	xchg   BYTE PTR [ebx+0x3d6cff78],dl
  40696e:	pop    ss
  40696f:	lea    ecx,[ebp+0xe748cd4]
  406975:	cmp    eax,0xf56c48b5
  40697a:	scas   eax,DWORD PTR es:[edi]
  40697b:	jae    0x406947
  40697d:	sar    ch,0xe0
  406980:	sti    
  406981:	adc    al,0x12
  406983:	ret    0x4719
  406986:	sub    bh,BYTE PTR [esi+0x71]
  406989:	xchg   esp,esp
  40698b:	jle    0x4069f1
  40698d:	adc    eax,0x8ddfa4b9
  406992:	fisttp WORD PTR [eax]
  406994:	pusha  
  406995:	(bad)  
  406996:	imul   ebx,DWORD PTR [edi+eax*8],0xffffffac
  40699a:	jge    0x40692b
  40699c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40699d:	xchg   ebx,eax
  40699e:	sbb    esp,DWORD PTR [ecx]
  4069a0:	out    dx,eax
  4069a1:	jae    0x40694f
  4069a3:	test   eax,0x5a28701e
  4069a8:	test   al,0xd3
  4069ab:	add    DWORD PTR [ecx+0x5],ebp
  4069ae:	and    al,BYTE PTR [ebp+edi*2-0x78]
  4069b2:	mov    cl,0x77
  4069b4:	sub    BYTE PTR [esi],0xb6
  4069b7:	shr    edi,1
  4069b9:	sbb    BYTE PTR [ebp+0x2e],cl
  4069bc:	sub    esi,edi
  4069be:	jmp    0xb0eb29d5
  4069c3:	scas   eax,DWORD PTR es:[edi]
  4069c4:	jmp    0x40696f
  4069c6:	pop    edx
  4069c7:	lahf   
  4069c8:	sbb    al,0xf4
  4069ca:	sti    
  4069cb:	jae    0x4069fc
  4069cd:	inc    ebp
  4069ce:	das    
  4069cf:	(bad)  
  4069d0:	jle    0x406a08
  4069d2:	(bad)  
  4069d3:	mov    eax,0xde5dc68f
  4069d8:	xor    ebp,DWORD PTR [esi+0x3c]
  4069db:	mov    al,0x9a
  4069dd:	sbb    BYTE PTR [ecx+0x730296cc],cl
  4069e3:	ja     0x406976
  4069e5:	call   0x416078d
  4069ea:	call   0x5fae:0xf81286e
  4069f1:	mov    dx,0x8027
  4069f5:	fst    DWORD PTR [edi]
  4069f7:	jae    0x406a44
  4069f9:	enter  0xf8a,0xc9
  4069fd:	add    eax,0xaad0a6b0
  406a02:	imul   BYTE PTR [edi-0x4c]
  406a05:	aas    
  406a06:	mov    esi,0x9da4650b
  406a0b:	jo     0x406a41
  406a0d:	test   eax,0x8ecc8a0d
  406a12:	mov    bh,0x13
  406a14:	idiv   WORD PTR ds:0x91cb05ba
  406a1b:	push   esi
  406a1c:	xchg   esi,eax
  406a1d:	in     eax,0x37
  406a1f:	xchg   esp,eax
  406a20:	arpl   ax,bx
  406a22:	jbe    0x406a42
  406a24:	div    BYTE PTR [eax]
  406a26:	enter  0x745f,0xd2
  406a2a:	mov    bl,0x58
  406a2c:	mov    eax,ds:0x708c40f1
  406a31:	jb     0x406a33
  406a33:	xchg   DWORD PTR [esi-0x6],ecx
  406a36:	and    DWORD PTR [eax-0x2273c195],0xffffff86
  406a3d:	mov    ah,0x42
  406a3f:	bound  edi,QWORD PTR [eax]
  406a41:	add    BYTE PTR [ebx],0xb
  406a44:	into   
  406a45:	clc    
  406a46:	pop    ss
  406a47:	xor    eax,0xae8b57f6
  406a4c:	pop    ecx
  406a4d:	aas    
  406a4e:	pop    ds
  406a4f:	mov    bl,0x11
  406a51:	jnp    0x406a00
  406a53:	pop    edi
  406a54:	js     0x406a89
  406a56:	pop    esp
  406a57:	mov    bh,0xf4
  406a59:	out    0xdf,al
  406a5b:	fs jle 0x406a36
  406a5e:	jecxz  0x406a44
  406a60:	repz adc ah,0xe3
  406a64:	pop    ecx
  406a65:	jge    0x406ace
  406a67:	ins    BYTE PTR es:[edi],dx
  406a68:	add    bl,dl
  406a6a:	cli    
  406a6b:	and    al,0x3e
  406a6d:	outs   dx,DWORD PTR ds:[esi]
  406a6e:	out    0x9d,al
  406a70:	jmp    0xa4ba:0xda369fd8
  406a77:	add    DWORD PTR [ecx],0xffffffa2
  406a7a:	popf   
  406a7b:	idiv   esi
  406a7d:	inc    ebp
  406a7e:	jno    0x406a07
  406a80:	adc    bl,dl
  406a82:	push   DWORD PTR [ebx-0x5f]
  406a85:	std    
  406a86:	loop   0x406a17
  406a88:	int    0x41
  406a8a:	lock pop edx
  406a8c:	stos   DWORD PTR es:[edi],eax
  406a8d:	dec    edi
  406a8e:	out    dx,eax
  406a8f:	jg     0x406a3e
  406a91:	iret   
  406a92:	dec    ebx
  406a93:	das    
  406a94:	rcpps  xmm3,XMMWORD PTR [ecx]
  406a97:	adc    al,0x4c
  406a99:	xor    eax,0xb5c8f6c9
  406a9e:	inc    edx
  406a9f:	lea    edx,[esi+0x2d8708ac]
  406aa5:	in     al,0x1b
  406aa7:	cmp    dh,BYTE PTR [edi+0xc]
  406aaa:	inc    ebp
  406aac:	data16 outs dx,BYTE PTR ds:[esi]
  406aae:	inc    edi
  406aaf:	inc    ebp
  406ab0:	mov    bh,0x41
  406ab2:	dec    edi
  406ab3:	and    DWORD PTR [esi],esp
  406ab5:	nop
  406ab6:	pop    esp
  406ab7:	xchg   esi,eax
  406ab8:	mov    WORD PTR [ecx+0x7f5cb9cc],?
  406abe:	and    esi,esi
  406ac0:	xor    eax,ecx
  406ac2:	add    eax,0x32729c
  406ac7:	leave  
  406ac8:	ret    0x1c
  406acb:	push   ebp
  406acc:	mov    ebp,esp
  406ace:	sub    esp,0x78
  406ad1:	mov    eax,ds:0x41b1a8
  406ad6:	mov    DWORD PTR [ebp-0x10],eax
  406ad9:	mov    eax,ds:0x41b2b4
  406ade:	sub    DWORD PTR ds:0x42e6fb,0x487f
  406ae8:	mov    DWORD PTR [ebp-0x30],eax
  406aeb:	xor    DWORD PTR ds:0x42fd01,0x6d44
  406af5:	mov    DWORD PTR [ebp-0xc],0xf89c8531
  406afc:	inc    DWORD PTR ds:0x42fcd9
  406b02:	mov    DWORD PTR [ebp-0x14],0xf89c8530
  406b09:	sub    DWORD PTR ds:0x42e6ef,0x7e8e
  406b13:	mov    eax,DWORD PTR [ebp-0xc]
  406b16:	push   ebx
  406b17:	push   esi
  406b18:	push   edi
  406b19:	movzx  esi,WORD PTR ds:0x42fcd9
  406b20:	and    esi,DWORD PTR ds:0x42e128
  406b26:	mov    DWORD PTR ds:0x42fcd9,esi
  406b2c:	mov    esi,0x7510855
  406b31:	mov    DWORD PTR ds:0x42e6f3,0x1a
  406b3b:	cmp    DWORD PTR ds:0x42e6f3,0x0
  406b42:	je     0x406c66
  406b48:	cmp    DWORD PTR ds:0x42e6f3,0x27
  406b4f:	jne    0x406b61
  406b55:	push   DWORD PTR [ebp-0xc]
  406b58:	push   DWORD PTR [ebp-0x24]
  406b5b:	call   DWORD PTR ds:0x42e2df
  406b61:	mov    edi,DWORD PTR ds:0x42e6f3
  406b67:	dec    edi
  406b68:	mov    DWORD PTR ds:0x42e6f3,edi
  406b6e:	jmp    0x406b3b
  406b73:	mov    DWORD PTR ds:0x42fcf1,0x10
  406b7d:	cmp    DWORD PTR ds:0x42fcf1,0x0
  406b84:	je     0x406c66
  406b8a:	cmp    DWORD PTR ds:0x42fcf1,0x1c
  406b91:	jne    0x406bad
  406b97:	push   DWORD PTR [ebp-0x10]
  406b9a:	push   0x42fcfd
  406b9f:	push   0x29f4
  406ba4:	push   DWORD PTR [ebp-0x14]
  406ba7:	call   DWORD PTR ds:0x42e53f
  406bad:	mov    edi,DWORD PTR ds:0x42fcf1
  406bb3:	dec    edi
  406bb4:	mov    DWORD PTR ds:0x42fcf1,edi
  406bba:	jmp    0x406b7d
  406bbf:	and    DWORD PTR ds:0x42fce5,0x0
  406bc9:	jmp    0x406bdb
  406bce:	mov    edi,DWORD PTR ds:0x42fce5
  406bd4:	inc    edi
  406bd5:	mov    DWORD PTR ds:0x42fce5,edi
  406bdb:	cmp    DWORD PTR ds:0x42fce5,0x15
  406be2:	jae    0x406c66
  406be8:	cmp    DWORD PTR ds:0x42fce5,0x1e
  406bef:	jne    0x406c06
  406bf5:	push   DWORD PTR [ebp-0xc]
  406bf8:	push   0x42fced
  406bfd:	push   DWORD PTR [ebp-0x10]
  406c00:	call   DWORD PTR ds:0x42e45b
  406c06:	jmp    0x406bce
  406c0b:	and    DWORD PTR ds:0x42fd76,0x0
  406c15:	mov    edi,DWORD PTR ds:0x42fd76
  406c1b:	inc    edi
  406c1c:	mov    DWORD PTR ds:0x42fd76,edi
  406c22:	cmp    DWORD PTR ds:0x42fd76,0x5
  406c29:	jne    0x406c3f
  406c2f:	push   0x42e707
  406c34:	push   0x42e1a4
  406c39:	call   DWORD PTR ds:0x42e543
  406c3f:	cmp    DWORD PTR ds:0x42fd76,0x4
  406c46:	jne    0x406c59
  406c4c:	mov    edi,DWORD PTR ds:0x42fd76
  406c52:	inc    edi
  406c53:	mov    DWORD PTR ds:0x42fd76,edi
  406c59:	cmp    DWORD PTR ds:0x42fd76,0x1b
  406c60:	jb     0x406c15
  406c66:	xor    eax,esi
  406c68:	sub    DWORD PTR ds:0x42e713,ecx
  406c6e:	mov    edi,0x32729c
  406c73:	add    eax,edi
  406c75:	xor    DWORD PTR ds:0x42e70b,0x42fd76
  406c7f:	mov    DWORD PTR [ebp-0x20],eax
  406c82:	mov    DWORD PTR [ebp-0x28],0xf89cb531
  406c89:	jmp    0x406fd6
  406c8e:	inc    ecx
  406c8f:	jae    0x406d0b
  406c91:	pop    ebp
  406c92:	sub    dh,BYTE PTR [ebp+0x61]
  406c95:	jae    0x406ce4
  406c97:	and    ebp,DWORD PTR [eax]
  406c99:	mov    bh,0x22
  406c9b:	mov    cl,0x88
  406c9d:	jne    0x406cb6
  406c9f:	lds    esi,FWORD PTR [eax+0x70]
  406ca2:	and    BYTE PTR [ebp+0x70],bh
  406ca5:	jo     0x406cd1
  406ca7:	push   ss
  406ca8:	lock aam 0xe7
  406cab:	cmp    edx,ebx
  406cad:	hlt    
  406cae:	gs mov bh,0x8a
  406cb1:	fwait
  406cb2:	test   BYTE PTR [eax+0x59],ch
  406cb5:	imul   esi,DWORD PTR [edi+eax*1-0x3b],0x7bd16f78
  406cbd:	cld    
  406cbe:	push   edi
  406cbf:	out    dx,al
  406cc0:	in     eax,0x3d
  406cc2:	das    
  406cc3:	ds in  eax,0x83
  406cc6:	das    
  406cc7:	call   0x89521b00
  406ccc:	es loopne 0x406cb0
  406ccf:	fs (bad) 
  406cd1:	fnsave [edx+ebx*8-0x55]
  406cd5:	sub    ecx,ebx
  406cd7:	js     0x406cdf
  406cd9:	imul   edx,DWORD PTR [edx+edx*4],0xb
  406cdd:	call   FWORD PTR [ebp+0x5dcc56a8]
  406ce3:	sbb    edi,DWORD PTR [ecx-0x32dd560e]
  406ce9:	in     al,dx
  406cea:	fcomp  DWORD PTR [ebx-0x43]
  406ced:	add    BYTE PTR [edi+0x1a822f9],dl
  406cf3:	loopne 0x406d00
  406cf5:	fdiv   QWORD PTR [edi+0x36c4dee]
  406cfb:	retf   0xd42b
  406cfe:	call   0x553d:0xf5ed630d
  406d05:	test   al,0xd6
  406d07:	or     edx,edx
  406d09:	lock or eax,0x1e6118b3
  406d0f:	fnstenv [ebp+0x393d1b79]
  406d15:	push   esp
  406d16:	ror    BYTE PTR [ebx-0x5333727a],cl
  406d1c:	mov    al,BYTE PTR [ebp-0x74a2d1d6]
  406d22:	jle    0x406d9d
  406d24:	inc    edi
  406d25:	je     0x406cdb
  406d27:	xchg   esp,eax
  406d28:	cmc    
  406d29:	sub    cl,BYTE PTR [esp+edx*2-0x7e]
  406d2d:	stc    
  406d2e:	or     DWORD PTR [ebx],esp
  406d30:	jmp    DWORD PTR [eax+0xe]
  406d33:	dec    esi
  406d34:	out    0xcd,al
  406d36:	sar    DWORD PTR [ebx-0x7e],cl
  406d39:	pop    eax
  406d3a:	imul   ebp,DWORD PTR [eax+0x42],0x51c4768d
  406d41:	adc    al,0xc
  406d43:	ss in  eax,dx
  406d45:	js     0x406d81
  406d47:	adc    eax,0xbd7d93ef
  406d4c:	pop    esi
  406d4d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406d4e:	xchg   esp,eax
  406d4f:	add    ecx,esp
  406d51:	test   al,0x62
  406d53:	pusha  
  406d54:	lock int3 
  406d56:	shr    DWORD PTR [edx+0xe],1
  406d59:	pop    ds
  406d5a:	aad    0xad
  406d5c:	mov    esp,DWORD PTR [ecx-0x1b]
  406d5f:	ret    
  406d60:	pop    eax
  406d61:	outs   dx,DWORD PTR ds:[esi]
  406d62:	sub    BYTE PTR [edi],ah
  406d64:	in     eax,0x65
  406d66:	mov    ds:0x9a2e59ea,eax
  406d6b:	cmp    DWORD PTR [esi],esp
  406d6d:	inc    di
  406d6f:	mov    eax,ds:0xa9647156
  406d74:	in     al,dx
  406d75:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406d76:	adc    DWORD PTR [esi+0x2568963f],esi
  406d7c:	loopne 0x406d74
  406d7e:	push   0xffffffb1
  406d80:	inc    ebp
  406d81:	add    eax,ecx
  406d83:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406d84:	xor    DWORD PTR [ebx+ebp*1-0x33],ebx
  406d88:	jl     0x406d0b
  406d8a:	test   eax,0x1b350419
  406d8f:	lahf   
  406d90:	outs   dx,DWORD PTR ds:[esi]
  406d91:	mov    cl,0xa9
  406d93:	inc    esi
  406d94:	xor    BYTE PTR [ebx+ebp*1+0x5342e17c],ch
  406d9b:	sti    
  406d9c:	or     al,0x10
  406d9e:	test   DWORD PTR [ebx+0x54],ebp
  406da1:	cmp    bl,BYTE PTR [edx+0x6ddbde76]
  406da7:	push   es
  406da8:	mov    bh,0xb3
  406daa:	cs gs jb 0x406dcd
  406dae:	pushf  
  406daf:	pop    esp
  406db0:	adc    DWORD PTR [edi-0x601945ed],0xffffffd0
  406db7:	(bad)  
  406db8:	bound  ebx,QWORD PTR [edi-0x19]
  406dbb:	pusha  
  406dbc:	cmp    ebx,edx
  406dbe:	jno    0x406dcd
  406dc0:	icebp  
  406dc1:	jle    0x406dde
  406dc3:	scas   al,BYTE PTR es:[edi]
  406dc4:	in     eax,dx
  406dc5:	in     eax,dx
  406dc6:	push   0xfffffff6
  406dc8:	add    al,BYTE PTR [ebx-0x64]
  406dcb:	iret   
  406dcc:	sbb    edi,DWORD PTR ds:0x51c736a6
  406dd2:	cmp    dl,BYTE PTR [ebp+esi*1-0xf55c520]
  406dd9:	lea    esp,[ecx-0x6d]
  406ddc:	and    esi,esi
  406dde:	pop    eax
  406ddf:	push   ecx
  406de0:	dec    ecx
  406de1:	and    DWORD PTR [ebp-0x34a6ed97],0xffffff81
  406de8:	repnz xchg ebp,eax
  406dea:	dec    ebp
  406deb:	adc    al,0xa6
  406ded:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406dee:	sub    DWORD PTR [ebp-0x62],edi
  406df1:	xchg   edx,eax
  406df2:	jge    0x406e65
  406df4:	adc    eax,0xedae111f
  406df9:	cmp    al,0xab
  406dfb:	xchg   edi,eax
  406dfc:	push   esp
  406dfd:	pushf  
  406dfe:	xor    bl,BYTE PTR [ebx-0x74]
  406e01:	sti    
  406e02:	jmp    0xa585dcfc
  406e07:	sub    al,0x78
  406e09:	call   0x6039:0x9dd92f36
  406e10:	dec    ebp
  406e11:	mov    al,0x98
  406e13:	add    edx,edi
  406e15:	cmp    eax,0x56b437db
  406e1a:	xchg   DWORD PTR [esi],esi
  406e1c:	inc    eax
  406e1d:	push   ebp
  406e1e:	fwait
  406e1f:	mov    dh,0xd8
  406e21:	aad    0x68
  406e23:	not    BYTE PTR [ebx+0xc12e281]
  406e29:	sbb    BYTE PTR [edx],cl
  406e2b:	xchg   esi,eax
  406e2c:	or     eax,0xac678e59
  406e31:	pop    eax
  406e32:	xchg   edx,eax
  406e33:	xchg   BYTE PTR [ebx+0x7a54f2ad],bh
  406e39:	inc    ecx
  406e3a:	mov    cl,0x4f
  406e3c:	call   0x3623:0x4515b013
  406e43:	xor    al,0xcc
  406e45:	dec    ecx
  406e46:	dec    edx
  406e47:	ja     0x406e3e
  406e49:	call   0xe475c6b7
  406e4e:	add    DWORD PTR [ebp-0x55],edx
  406e51:	sub    BYTE PTR [edx+0x4e],dh
  406e54:	mov    edi,0x8c8e1dde
  406e59:	adc    DWORD PTR [ebx+edi*2+0x53707dc1],esi
  406e60:	lods   al,BYTE PTR ds:[esi]
  406e61:	ret    
  406e62:	or     eax,0x1ee0a22e
  406e67:	cdq    
  406e68:	push   esp
  406e69:	xchg   esp,eax
  406e6a:	xor    eax,0xfd8f91f3
  406e6f:	dec    edi
  406e70:	out    dx,al
  406e71:	mov    DWORD PTR [bx+0x3d],ecx
  406e75:	es pop ebx
  406e77:	jge    0x406ef2
  406e79:	stc    
  406e7a:	call   0x3175:0x31068e5a
  406e81:	loopne 0x406ef8
  406e83:	call   DWORD PTR ds:0xb381bf2
  406e89:	xchg   edx,eax
  406e8a:	push   ss
  406e8b:	and    ecx,esp
  406e8d:	stos   DWORD PTR es:[edi],eax
  406e8e:	stos   DWORD PTR es:[edi],eax
  406e8f:	xchg   ecx,eax
  406e90:	leave  
  406e91:	xchg   ebx,eax
  406e92:	jne    0x406ebd
  406e94:	mov    dl,0x41
  406e96:	jb     0x406e18
  406e98:	retf   0x809e
  406e9b:	lahf   
  406e9c:	repnz and DWORD PTR [ecx-0x552c45b1],ebp
  406ea3:	outs   dx,BYTE PTR ds:[esi]
  406ea4:	dec    esi
  406ea5:	je     0x406ed4
  406ea7:	xchg   BYTE PTR [eax],ah
  406ea9:	dec    edx
  406eaa:	xor    bl,BYTE PTR [ebx-0x42]
  406ead:	pop    esp
  406eae:	xor    BYTE PTR [ebp-0x697e39fa],al
  406eb4:	add    al,0x72
  406eb6:	rcr    DWORD PTR [eax-0x55],0x21
  406eba:	scas   eax,DWORD PTR es:[edi]
  406ebb:	(bad)  
  406ebc:	push   ss
  406ebd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406ebe:	loopne 0x406f11
  406ec0:	pop    esp
  406ec1:	add    al,0x18
  406ec3:	daa    
  406ec4:	xor    al,0xd0
  406ec6:	mov    BYTE PTR [ebx+edi*2],al
  406ec9:	in     eax,dx
  406eca:	push   esp
  406ecb:	mov    dl,BYTE PTR [edx]
  406ecd:	test   BYTE PTR [edx],ch
  406ecf:	arpl   WORD PTR [edi-0x74d26623],si
  406ed5:	(bad)  
  406ed6:	mov    esp,0x784ed980
  406edb:	and    al,0x7f
  406edd:	pop    es
  406ede:	jmp    0x406e78
  406ee0:	div    BYTE PTR [ebx]
  406ee2:	xor    DWORD PTR [ecx],ecx
  406ee4:	xlat   BYTE PTR ds:[ebx]
  406ee5:	sub    ch,BYTE PTR [esi+0x4b41891]
  406eeb:	jae    0x406e98
  406eed:	or     BYTE PTR [edi+0x14],al
  406ef0:	add    BYTE PTR [ebp-0x77],ah
  406ef3:	pop    esi
  406ef4:	or     dl,BYTE PTR [ebx]
  406ef6:	jnp    0x406e89
  406ef8:	rcl    BYTE PTR [ecx],0x43
  406efb:	add    ah,BYTE PTR [esi]
  406efd:	div    DWORD PTR [edi-0x222ffb86]
  406f03:	fiadd  WORD PTR [eax+0x61]
  406f06:	mov    edi,0x6ea09e4e
  406f0b:	push   edx
  406f0c:	sbb    bh,BYTE PTR [ebp-0x3a9ee430]
  406f12:	(bad)  
  406f13:	jo     0x406ea1
  406f15:	sar    DWORD PTR [ecx-0x4a],cl
  406f18:	sahf   
  406f19:	adc    DWORD PTR [esi+eiz*4-0x40],edi
  406f1d:	and    DWORD PTR [ebx-0x16e183c9],edx
  406f23:	jbe    0x406eb1
  406f25:	and    ecx,DWORD PTR [edi+0x5307561d]
  406f2b:	stos   BYTE PTR es:[edi],al
  406f2c:	cwde   
  406f2d:	aaa    
  406f2e:	mov    esi,edx
  406f30:	test   al,0xfd
  406f32:	mov    ?,edi
  406f34:	xchg   esp,eax
  406f35:	inc    esi
  406f36:	arpl   si,di
  406f38:	cli    
  406f39:	call   0xd760:0xbc94c656
  406f40:	mov    ebx,0x44934e7b
  406f45:	push   ds
  406f46:	scas   al,BYTE PTR es:[edi]
  406f47:	pop    eax
  406f48:	lahf   
  406f49:	inc    esi
  406f4a:	mov    WORD PTR [eax+edx*8+0x12],?
  406f4e:	shr    DWORD PTR [eax],0xf6
  406f51:	std    
  406f52:	retf   0x3ac4
  406f55:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406f56:	adc    bl,ah
  406f58:	and    BYTE PTR [edi-0x69129526],ah
  406f5e:	sti    
  406f5f:	and    al,0x59
  406f61:	pop    ebx
  406f62:	aas    
  406f63:	retf   
  406f64:	dec    eax
  406f65:	arpl   WORD PTR [edx],bp
  406f67:	(bad)  
  406f69:	(bad)  
  406f6b:	adc    esp,eax
  406f6d:	adc    DWORD PTR [eax],ebx
  406f6f:	mov    al,0x9c
  406f71:	push   esi
  406f72:	(bad)  
  406f74:	mov    ds:0x7004cc48,eax
  406f79:	mov    dh,0xdd
  406f7b:	std    
  406f7c:	mov    dh,0xfc
  406f7e:	push   ds
  406f7f:	or     BYTE PTR [eax],dl
  406f81:	test   al,0x8c
  406f83:	jp     0x406f31
  406f85:	ins    DWORD PTR es:[edi],dx
  406f86:	out    dx,eax
  406f87:	add    bl,ch
  406f89:	mov    dl,ah
  406f8b:	mov    ebp,0x44244232
  406f90:	in     al,0xe4
  406f92:	xchg   DWORD PTR [esi+0x2d4bd361],ebp
  406f98:	stos   DWORD PTR es:[edi],eax
  406f99:	(bad)  
  406f9b:	shl    DWORD PTR [edi+0xe],cl
  406f9e:	imul   esp,DWORD PTR [ecx],0x9ee681a2
  406fa4:	fmul   st(5),st
  406fa6:	lock sub ax,0x5b17
  406fab:	pushf  
  406fac:	stos   DWORD PTR es:[edi],eax
  406fad:	push   ss
  406fae:	xchg   esi,eax
  406faf:	mov    ch,0xa6
  406fb1:	add    al,BYTE PTR [eax-0x3c4599d6]
  406fb7:	push   ecx
  406fb8:	std    
  406fb9:	jmp    0x54f27fb9
  406fbe:	enter  0xb319,0x5f
  406fc2:	daa    
  406fc3:	cmp    dl,BYTE PTR [edi-0x72]
  406fc6:	lahf   
  406fc7:	dec    edx
  406fc8:	add    edi,eax
  406fca:	dec    ecx
  406fcb:	mov    al,ds:0x529b547d
  406fd0:	and    al,0x6d
  406fd2:	(bad)  
  406fd3:	or     BYTE PTR [eax-0x33ba38f3],dl
  406fd9:	xor    DWORD PTR ds:0x1581f89f,eax
  406fdf:	jb     0x406fde
  406fe1:	inc    edx
  406fe2:	add    BYTE PTR [ebx],cl
  406fe4:	out    0x42,eax
  406fe6:	add    bh,al
  406fe8:	inc    ebp
  406fe9:	aam    0xf1
  406feb:	test   DWORD PTR [eax+edi*8-0x2e23ba39],ebx
  406ff2:	test   DWORD PTR [eax+edi*8+0xac05],ebx
  406ff9:	add    cl,ch
  406ffb:	dec    eax
  406ffc:	add    eax,DWORD PTR [eax]
  406ffe:	add    BYTE PTR [esi*2+0x5a51bed1],bl
  407005:	mov    bl,0x71
  407007:	lahf   
  407008:	popa   
  407009:	sti    
  40700a:	arpl   di,ax
  40700c:	aad    0x57
  40700e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40700f:	mov    edx,0x7d207070
  407015:	jo     0x407087
  407017:	ficomp DWORD PTR [ecx+0x2771169c]
  40701d:	inc    eax
  40701e:	adc    esi,DWORD PTR [ebp-0x6c]
  407021:	daa    
  407022:	sbb    al,0x1d
  407024:	aas    
  407025:	sub    BYTE PTR [eax-0x3d],ah
  407028:	or     edi,edx
  40702a:	js     0x406fac
  40702c:	xchg   ebx,eax
  40702d:	frstor [eax-0x40]
  407030:	jl     0x40705a
  407032:	mov    al,0x8a
  407034:	(bad)  
  407036:	dec    ebx
  407037:	mov    BYTE PTR [ebp+esi*2-0x1d],0xc2
  40703c:	pop    esi
  40703d:	aas    
  40703e:	cld    
  40703f:	or     BYTE PTR [ebx-0x26a303d4],ch
  407045:	sub    BYTE PTR [ebx-0x2d89be98],0x7b
  40704c:	mov    eax,0xf27cd975
  407051:	repz mov edi,0x388293e7
  407057:	outs   dx,BYTE PTR ds:[esi]
  407058:	mov    edx,0x2bfd528d
  40705d:	cmp    cl,BYTE PTR [edi+esi*1]
  407060:	xchg   DWORD PTR [ebx+0x14],eax
  407063:	pop    ebp
  407064:	std    
  407065:	xor    ecx,ebp
  407067:	fld    TBYTE PTR [esi-0x76fc2ec3]
  40706d:	cwde   
  40706e:	not    DWORD PTR [ecx+0x354cbef3]
  407074:	mov    esp,0x1d5ce50b
  407079:	jmp    0x5c10dac8
  40707e:	in     eax,0xfb
  407080:	sbb    al,0x79
  407082:	or     edx,ebx
  407084:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407085:	sahf   
  407086:	ins    DWORD PTR es:[edi],dx
  407087:	cld    
  407088:	aam    0x17
  40708a:	adc    ch,BYTE PTR [eax+ebp*1+0x12]
  40708e:	and    BYTE PTR [ecx-0x7dd593de],al
  407094:	mov    ah,0x86
  407096:	cmp    al,0x15
  407098:	cdq    
  407099:	xlat   BYTE PTR ds:[ebx]
  40709a:	mov    cl,0x7d
  40709c:	fsub   QWORD PTR [esi-0x1b5cad67]
  4070a2:	addr16 mov ebx,0x64fb3fb3
  4070a8:	shr    DWORD PTR [edi-0x37],1
  4070ab:	dec    esp
  4070ac:	adc    ah,cl
  4070ae:	pop    esp
  4070af:	sub    bh,BYTE PTR [edi+0x48]
  4070b2:	ret    0x7714
  4070b5:	or     al,0x19
  4070b8:	dec    ecx
  4070b9:	fisub  WORD PTR [ecx]
  4070bb:	int3   
  4070bc:	mov    ecx,0x69a3140f
  4070c1:	inc    esi
  4070c2:	push   ecx
  4070c3:	(bad)  
  4070c4:	pop    edx
  4070c5:	mov    al,dl
  4070c7:	inc    ebx
  4070c8:	in     eax,0xba
  4070ca:	int    0x64
  4070cc:	pop    ecx
  4070cd:	lods   eax,DWORD PTR ds:[esi]
  4070ce:	add    BYTE PTR [edi],bh
  4070d0:	xor    eax,0x34c7a42a
  4070d5:	cmp    BYTE PTR [ebx-0x3c],bl
  4070d8:	pushf  
  4070d9:	cmp    bh,bl
  4070db:	mov    ebp,0xd689ccd2
  4070e0:	ss mov dl,0xaf
  4070e3:	lock jnp 0x40714d
  4070e6:	loopne 0x407071
  4070e8:	pop    esp
  4070e9:	jmp    0x4070be
  4070eb:	push   ss
  4070ec:	cmp    BYTE PTR [eax-0x14],0x9b
  4070f0:	neg    DWORD PTR [edi+0x6c]
  4070f3:	out    0x3e,al
  4070f5:	repnz scas eax,DWORD PTR es:[edi]
  4070f7:	jne    0x407110
  4070f9:	scas   al,BYTE PTR es:[edi]
  4070fa:	and    DWORD PTR [ebp-0x76],ecx
  4070fd:	adc    ecx,ebx
  4070ff:	adc    dh,0x30
  407102:	inc    eax
  407103:	and    al,0x85
  407105:	in     al,dx
  407106:	dec    edi
  407107:	dec    edx
  407108:	in     eax,0xb0
  40710a:	fnstsw WORD PTR [eax]
  40710c:	fcomp  DWORD PTR [ebp-0x250ed614]
  407112:	xor    ch,bl
  407114:	jle    0x40715e
  407116:	into   
  407117:	out    dx,al
  407118:	mov    bh,0xe6
  40711a:	jmp    0xe18ca980
  40711f:	lods   eax,DWORD PTR ds:[esi]
  407120:	stc    
  407121:	clc    
  407122:	mov    bh,BYTE PTR [ebp*1+0x30577474]
  407129:	xor    esp,edi
  40712b:	jecxz  0x40712b
  40712d:	dec    eax
  40712e:	pop    edx
  40712f:	jle    0x407105
  407131:	push   ss
  407132:	je     0x4070c9
  407134:	pop    ds
  407135:	aaa    
  407136:	inc    eax
  407137:	cdq    
  407138:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407139:	xor    eax,DWORD PTR [esi-0x2b]
  40713c:	push   ecx
  40713d:	std    
  40713e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40713f:	in     eax,0xa5
  407141:	adc    ch,dh
  407143:	cmp    al,BYTE PTR [ecx-0x7cb23252]
  407149:	in     al,0x70
  40714b:	pop    eax
  40714c:	imul   ebx,DWORD PTR [edx-0x6d098025],0xffffffbf
  407153:	jp     0x40718e
  407155:	xor    DWORD PTR [ebx+0x40fb2784],0xfdbb3bd8
  40715f:	dec    esi
  407160:	mov    al,ds:0x9351a1dd
  407165:	ret    0x56f9
  407168:	inc    eax
  407169:	sahf   
  40716a:	mov    esp,0x59c808e
  40716f:	shr    BYTE PTR [ecx+edi*8+0x28376eb3],0xd8
  407177:	pop    esi
  407178:	add    al,0xbb
  40717a:	out    dx,al
  40717b:	adc    bl,BYTE PTR [ebx-0x5e]
  40717e:	sbb    BYTE PTR [edx-0x3f],0x96
  407182:	cmp    esp,DWORD PTR [edx-0x66]
  407185:	mov    ah,0x4e
  407187:	fistp  QWORD PTR [esi-0x31d343c6]
  40718d:	and    dh,BYTE PTR [edx-0x29e25b6b]
  407193:	adc    BYTE PTR [eax-0xf],al
  407196:	(bad)  
  407197:	pop    ebx
  407198:	adc    ch,BYTE PTR [ecx+ecx*8-0x77]
  40719c:	mov    al,ds:0x64dc264
  4071a1:	mov    ecx,0x15f0b1c1
  4071a6:	mov    esp,0xc232ee7f
  4071ab:	outs   dx,BYTE PTR ds:[esi]
  4071ac:	jecxz  0x4071b4
  4071ae:	and    eax,0x9ce96e8d
  4071b3:	or     dl,bh
  4071b5:	jae    0x40720e
  4071b7:	inc    edx
  4071b8:	fwait
  4071b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4071ba:	leave  
  4071bb:	xchg   edi,eax
  4071bc:	and    dh,ch
  4071be:	in     eax,0xb0
  4071c0:	hlt    
  4071c1:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  4071c3:	jp     0x4071a8
  4071c5:	dec    ecx
  4071c6:	das    
  4071c7:	mov    eax,DWORD PTR [edx-0x4c749620]
  4071cd:	or     eax,0x89ae3650
  4071d2:	dec    ecx
  4071d3:	data16 or BYTE PTR [eax],ah
  4071d6:	and    DWORD PTR [edx],eax
  4071d8:	mov    ah,0xe7
  4071da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4071db:	mov    edx,0xdeaf8e39
  4071e0:	mov    ebp,0xd9589989
  4071e5:	fsubr  QWORD PTR [edx-0x18]
  4071e8:	add    al,0xe7
  4071ea:	adc    esi,DWORD PTR [edi+0x4ea6726d]
  4071f0:	call   0xb7d87547
  4071f5:	addr16 cs add eax,0xa0d84d27
  4071fc:	xor    al,0xdf
  4071fe:	push   ecx
  4071ff:	mov    ?,WORD PTR [ebp+ecx*1-0x5e]
  407203:	loop   0x40720b
  407205:	inc    edx
  407206:	cs push ebp
  407208:	xor    al,bl
  40720a:	mov    edi,ds
  40720c:	jge    0x4071dd
  40720e:	jb     0x4071a1
  407210:	icebp  
  407211:	xchg   esp,edx
  407213:	pop    ebp
  407214:	cs dec eax
  407216:	or     al,BYTE PTR [ecx-0x1c581ee3]
  40721c:	add    ch,cl
  40721e:	xor    eax,0xb9c01cb
  407223:	xor    BYTE PTR [ebx+ebp*8],al
  407226:	adc    ebp,DWORD PTR [ecx+0x6b56d710]
  40722c:	rol    BYTE PTR [edi+edi*8-0x64270bd2],1
  407233:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407234:	inc    ecx
  407235:	popf   
  407236:	dec    edi
  407237:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407238:	or     DWORD PTR [ebx+0x30],ebp
  40723b:	bound  ecx,QWORD PTR [ecx-0x6c]
  40723e:	lea    edi,[esi]
  407240:	or     edx,ebp
  407242:	dec    ecx
  407243:	sub    dh,al
  407245:	sbb    eax,0x7d87f9c1
  40724a:	fisttp WORD PTR [ecx]
  40724c:	mov    dl,0x7f
  40724e:	mov    esp,eax
  407250:	getsec 
  407252:	add    BYTE PTR [edi-0x33],bl
  407255:	das    
  407256:	lods   eax,DWORD PTR ds:[esi]
  407257:	int3   
  407258:	xor    eax,0x29734480
  40725d:	jo     0x4072d7
  40725f:	addr16 jl 0x407202
  407262:	mov    ebx,DWORD PTR [edi-0x114e83ec]
  407268:	ret    0xdd5f
  40726b:	lods   eax,DWORD PTR ds:[esi]
  40726c:	test   al,0x5a
  40726e:	lahf   
  40726f:	into   
  407270:	mov    bh,0x5f
  407272:	jmp    0xcd3e91a6
  407277:	cld    
  407278:	pusha  
  407279:	dec    eax
  40727a:	loop   0x4072cb
  40727c:	arpl   WORD PTR ds:0x3f1fcd25,sp
  407282:	popa   
  407283:	addr16 pop edx
  407285:	and    al,0x26
  407287:	xlat   BYTE PTR ds:[ebx]
  407288:	jmp    FWORD PTR [ebx-0x6959745b]
  40728e:	xchg   edi,eax
  40728f:	cmp    DWORD PTR [edx+0x4feb4854],eax
  407295:	pop    ebx
  407296:	test   eax,0x2364f71a
  40729b:	mov    edx,0xe90f9c12
  4072a0:	pushf  
  4072a1:	add    al,0x5e
  4072a3:	leave  
  4072a4:	dec    edi
  4072a5:	or     cl,BYTE PTR [eax+eax*4-0x1c]
  4072a9:	outs   dx,BYTE PTR ds:[esi]
  4072aa:	jle    0x407239
  4072ac:	test   eax,0x22117cae
  4072b1:	loope  0x4072e6
  4072b3:	fst    DWORD PTR [ebp+0x35]
  4072b6:	and    BYTE PTR [bx+si+0x33],dh
  4072ba:	lods   al,BYTE PTR ds:[esi]
  4072bb:	inc    edx
  4072bc:	fisubr WORD PTR [edi]
  4072be:	lods   al,BYTE PTR ds:[esi]
  4072bf:	mov    eax,ds:0x5d8b100a
  4072c4:	mov    ebx,0x149c1e7d
  4072c9:	jb     0x40729f
  4072cb:	mov    eax,ds:0xf0a76ad
  4072d0:	push   ebx
  4072d1:	mov    edi,0xe0f86cce
  4072d6:	sbb    BYTE PTR [ebp-0x7],al
  4072d9:	jno    0x4072cc
  4072db:	cmp    DWORD PTR [esp+eax*4],0x948dcae0
  4072e2:	int    0x44
  4072e4:	mov    DWORD PTR [ebx+0x4c],esp
  4072e7:	ja     0x407333
  4072e9:	in     al,dx
  4072ea:	pop    esi
  4072eb:	xor    BYTE PTR [eax-0x3b],ch
  4072ee:	adc    esp,ebx
  4072f0:	ins    DWORD PTR es:[edi],dx
  4072f1:	js     0x407276
  4072f3:	test   BYTE PTR [ebp+0xe],ch
  4072f6:	pop    ecx
  4072f7:	jnp    0x40730a
  4072f9:	xchg   esi,eax
  4072fa:	jno    0x40732f
  4072fc:	je     0x4072bf
  4072fe:	iret   
  4072ff:	mov    edx,0x34c367c4
  407304:	push   esi
  407305:	gs mov edi,0x46097004
  40730b:	mov    al,0x33
  40730d:	and    eax,0xfb1664b9
  407312:	fadd   DWORD PTR [eax+0x1a1413ca]
  407318:	pop    es
  407319:	mov    ebp,0xa8b81f2c
  40731e:	cdq    
  40731f:	sar    BYTE PTR [edx],0x51
  407322:	mov    ebp,0xedf43b04
  407327:	lock pop ebx
  407329:	lea    ebp,[esi+0x7d]
  40732c:	adc    eax,0xe1a83ab5
  407331:	adc    DWORD PTR ds:0x5ed81629,esi
  407337:	cwde   
  407338:	mov    ecx,0x768ae923
  40733d:	(bad)  [edi-0x6f]
  407340:	or     al,0x7
  407342:	js     0x407340
  407344:	call   0x45cc65d9
  407349:	hlt    
  40734a:	add    DWORD PTR ds:0x42fcd1,0x42e703
  407354:	xor    eax,esi
  407356:	add    DWORD PTR ds:0x42fcfd,0x57f6
  407360:	add    eax,edi
  407362:	xor    DWORD PTR ds:0x42e70f,0x2a11
  40736c:	mov    DWORD PTR [ebp-0x18],eax
  40736f:	mov    DWORD PTR [ebp-0x1c],0xf89c853c
  407376:	mov    BYTE PTR [ebp-0x1],0x67
  40737a:	and    DWORD PTR ds:0x42fcfd,0x0
  407384:	mov    eax,ds:0x42fcfd
  407389:	inc    eax
  40738a:	mov    ds:0x42fcfd,eax
  40738f:	cmp    DWORD PTR ds:0x42fcfd,0xe
  407396:	jne    0x4073a2
  40739c:	call   DWORD PTR ds:0x42e45f
  4073a2:	cmp    DWORD PTR ds:0x42fcfd,0xd
  4073a9:	jne    0x4073ba
  4073af:	mov    eax,ds:0x42fcfd
  4073b4:	inc    eax
  4073b5:	mov    ds:0x42fcfd,eax
  4073ba:	cmp    DWORD PTR ds:0x42fcfd,0x1d
  4073c1:	jb     0x407384
  4073c7:	mov    eax,DWORD PTR [ebp-0xc]
  4073ca:	xor    eax,esi
  4073cc:	and    DWORD PTR ds:0x42e128,0xdb
  4073d6:	add    eax,edi
  4073d8:	or     DWORD PTR ds:0x42e707,0x71a5
  4073e2:	mov    DWORD PTR [ebp-0x18],eax
  4073e5:	adc    eax,0x7137
  4073ea:	jmp    0x407737
  4073ef:	or     DWORD PTR ds:[edi],eax
  4073f2:	(bad)  
  4073f3:	rcl    edx,cl
  4073f5:	cmp    DWORD PTR [ecx],edx
  4073f7:	pop    ecx
  4073f8:	jns    0x4073c5
  4073fa:	popa   
  4073fb:	add    BYTE PTR [eax],ch
  4073fd:	hlt    
  4073fe:	mov    edx,0x7070cff7
  407403:	and    BYTE PTR [ebp+0x70],bh
  407406:	jo     0x40743b
  407408:	ror    DWORD PTR [ebp-0x38],0xcc
  40740c:	jmp    0x6b48b325
  407411:	vpcomud xmm4,xmm7,XMMWORD PTR [ecx],0xfb
  407417:	scas   eax,DWORD PTR es:[edi]
  407418:	pop    eax
  407419:	mov    bl,BYTE PTR [eax+0x34]
  40741c:	and    ebx,edi
  40741e:	rol    eax,1
  407420:	shl    edx,0x65
  407423:	dec    BYTE PTR [ebx]
  407425:	inc    esi
  407426:	add    BYTE PTR [eax+0x67c9fd2e],0xe1
  40742d:	cmp    edi,esp
  40742f:	movups XMMWORD PTR ss:[eax+0x40249a84],xmm4
  407437:	adc    DWORD PTR [edx],edi
  407439:	dec    edx
  40743a:	data16 loop 0x407402
  40743d:	mov    WORD PTR [ebx+eiz*2-0x4598dfeb],es
  407444:	mov    ds:0xbd380582,al
  407449:	xchg   esi,eax
  40744a:	inc    eax
  40744b:	add    BYTE PTR [edx],dl
  40744d:	ficomp DWORD PTR [edi]
  40744f:	xor    bh,BYTE PTR [edx+0x3c]
  407452:	jle    0x407495
  407454:	mov    dl,BYTE PTR [edi+0xb]
  407457:	mov    ch,0xa5
  407459:	mov    cl,0xb5
  40745b:	mov    bh,0x3f
  40745d:	sub    BYTE PTR ds:0x7ef13749,dh
  407463:	(bad)  
  407464:	mov    ds:0xe492b9df,eax
  407469:	in     eax,dx
  40746a:	xchg   edx,eax
  40746b:	aad    0xe2
  40746d:	data16 sub bl,BYTE PTR [ecx-0x29]
  407471:	repnz push edi
  407473:	addr16 pop esi
  407475:	pop    ebp
  407476:	jb     0x40741a
  407478:	fcmovnbe st,st(3)
  40747a:	imul   edi,DWORD PTR [eax],0xd4cb053
  407480:	and    al,ah
  407482:	xchg   edi,eax
  407483:	mov    edi,ebx
  407485:	xchg   esp,eax
  407486:	fld    DWORD PTR [esi+0x1]
  407489:	inc    ebx
  40748a:	sub    DWORD PTR [ebx-0x7c],eax
  40748d:	outs   dx,BYTE PTR ds:[esi]
  40748e:	xlat   BYTE PTR ds:[ebx]
  40748f:	push   0x74ad99be
  407494:	cmp    DWORD PTR [edx+0x55e20ab],esp
  40749a:	setge  al
  40749d:	push   esp
  40749e:	jns    0x4074ad
  4074a0:	test   ah,bh
  4074a2:	mov    ds,WORD PTR [edi+0x7f]
  4074a5:	into   
  4074a6:	dec    esi
  4074a7:	inc    ebp
  4074a8:	sub    DWORD PTR [eax+esi*2+0x2e],eax
  4074ac:	add    al,0xa7
  4074ae:	push   ecx
  4074af:	lods   al,BYTE PTR ds:[esi]
  4074b0:	pop    edi
  4074b1:	add    DWORD PTR [eax+0xd],0x615fc0a6
  4074b8:	jnp    0x40747c
  4074ba:	sub    al,0x76
  4074bc:	dec    ecx
  4074bd:	mov    edi,0x91c44a2d
  4074c2:	into   
  4074c3:	fiadd  DWORD PTR [eax]
  4074c5:	jl     0x407452
  4074c7:	lods   al,BYTE PTR ds:[esi]
  4074c8:	cmp    DWORD PTR [esi],edi
  4074ca:	aam    0x72
  4074cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4074cd:	cmp    cl,BYTE PTR [ecx]
  4074cf:	fisttp QWORD PTR [edx]
  4074d1:	rcl    bl,1
  4074d3:	and    al,0x1
  4074d5:	add    eax,0xccdc540f
  4074da:	xlat   BYTE PTR ds:[ebx]
  4074db:	js     0x407498
  4074dd:	pop    es
  4074de:	mov    eax,0x3b718717
  4074e3:	sbb    cl,BYTE PTR [edi-0x785bb1d3]
  4074e9:	cmp    DWORD PTR [ebp-0x26ade8fe],ecx
  4074ef:	pop    esi
  4074f0:	cmp    ebx,DWORD PTR [ebx-0x5e]
  4074f3:	(bad)  
  4074f4:	(bad)  
  4074f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4074f6:	pop    esp
  4074f7:	mov    bl,BYTE PTR [ecx-0x30393ad9]
  4074fd:	push   ss
  4074fe:	gs push edx
  407500:	rcl    DWORD PTR [edx],cl
  407502:	xchg   esi,eax
  407503:	stos   DWORD PTR es:[edi],eax
  407504:	inc    esi
  407505:	jecxz  0x4074ed
  407507:	mov    esp,0x93be57f8
  40750c:	sti    
  40750d:	pop    es
  40750e:	sub    al,0x8c
  407510:	ins    BYTE PTR es:[edi],dx
  407511:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407512:	fldenv [esi+0x4d30cec]
  407518:	mov    bl,0x95
  40751a:	mov    ch,0xf3
  40751c:	push   esi
  40751d:	sub    cl,ah
  40751f:	sbb    ebx,ebx
  407521:	sub    al,0x4
  407523:	cli    
  407524:	push   ebp
  407525:	adc    esi,edi
  407527:	paddusb mm6,QWORD PTR fs:[ebx]
  40752b:	popa   
  40752c:	sbb    al,0x63
  40752e:	push   ebp
  40752f:	adc    al,0x48
  407531:	xchg   ebx,eax
  407532:	cmp    BYTE PTR [eax+eax*2+0x3c04d4d3],ah
  407539:	pop    ebp
  40753a:	pop    edx
  40753b:	pop    ecx
  40753c:	sub    DWORD PTR [ebx+0x76934925],edi
  407542:	call   0x40be3824
  407547:	shl    BYTE PTR [ebp-0x44461b94],cl
  40754d:	stos   DWORD PTR es:[edi],eax
  40754e:	mov    DWORD PTR [ecx+0x77],ecx
  407551:	and    ebx,ebp
  407553:	cmc    
  407554:	lods   eax,DWORD PTR ds:[esi]
  407555:	adc    eax,0x92bc860d
  40755a:	cmp    al,0xb5
  40755c:	clc    
  40755d:	out    dx,al
  40755e:	inc    esp
  40755f:	xchg   edi,eax
  407560:	mov    ch,0x67
  407562:	mov    ch,0x9a
  407564:	cmp    ebx,ecx
  407566:	shl    DWORD PTR [ecx+ecx*1-0xb],0x6a
  40756b:	pop    ss
  40756c:	ficom  DWORD PTR [edx]
  40756e:	cmovnp esi,DWORD PTR [ebx-0x1a]
  407572:	sub    BYTE PTR [esi-0x3d],ch
  407575:	xchg   ebp,eax
  407576:	push   ss
  407577:	push   ebp
  407578:	rcpps  xmm1,xmm2
  40757b:	leave  
  40757c:	jge    0x407554
  40757e:	mov    ebx,0x353450e8
  407583:	or     edx,DWORD PTR [esi-0x59a61faf]
  407589:	ret    0x4265
  40758c:	jnp    0x407566
  40758e:	dec    esi
  40758f:	je     0x407559
  407591:	or     cl,dh
  407593:	clc    
  407594:	adc    dh,BYTE PTR [esi+0x76]
  407597:	push   ss
  407598:	mov    esi,0xe1aea189
  40759d:	dec    edx
  40759e:	push   es
  40759f:	fist   WORD PTR ds:0x3a604d58
  4075a5:	arpl   WORD PTR [ebx],bp
  4075a7:	ins    BYTE PTR es:[edi],dx
  4075a8:	cmp    BYTE PTR [ebx+0x48],dh
  4075ab:	cli    
  4075ac:	pop    ebp
  4075ad:	mov    DWORD PTR [esi],0xc10204c6
  4075b3:	int    0xd9
  4075b5:	sub    eax,0x3885cef2
  4075ba:	pushf  
  4075bb:	paddsw mm3,QWORD PTR [esi+0x9]
  4075bf:	sti    
  4075c0:	dec    ebx
  4075c1:	hlt    
  4075c2:	push   cs
  4075c3:	stc    
  4075c4:	sti    
  4075c5:	bswap  edi
  4075c7:	aad    0xc1
  4075c9:	cmp    ebx,eax
  4075cb:	xor    DWORD PTR [edi+0x66e7c443],0xc13553f4
  4075d5:	(bad)  
  4075d6:	pusha  
  4075d7:	out    0x19,eax
  4075d9:	aas    
  4075da:	mov    ebp,DWORD PTR [ecx+0x790f1dac]
  4075e0:	cmp    ecx,DWORD PTR [edi-0x41]
  4075e3:	push   ebp
  4075e4:	sub    ebp,DWORD PTR [ecx+0x66]
  4075e7:	fcomi  st,st(3)
  4075e9:	or     al,0x86
  4075eb:	retf   0x663b
  4075ee:	inc    edx
  4075ef:	jmp    0x40760d
  4075f1:	push   ebx
  4075f2:	call   0xdb55:0x616dc5a1
  4075f9:	mov    bh,0x82
  4075fb:	(bad)  
  4075fc:	repnz mov ebp,0x881f08bb
  407602:	ins    DWORD PTR es:[edi],dx
  407603:	fstp   TBYTE PTR cs:[edi-0x5cb4ea61]
  40760a:	dec    BYTE PTR [eax]
  40760c:	test   BYTE PTR [ebx-0x1],dl
  40760f:	cmp    BYTE PTR [ecx+eiz*8],ch
  407612:	std    
  407613:	push   es
  407614:	adc    DWORD PTR [edi+0x5bddb643],ebp
  40761a:	push   ss
  40761b:	cli    
  40761c:	mov    ds:0xe02e4299,eax
  407621:	mov    cl,0xbc
  407623:	xchg   esi,eax
  407624:	sti    
  407625:	and    al,0xa6
  407627:	(bad)  
  407629:	pop    eax
  40762a:	xchg   BYTE PTR [eax+0x42874105],al
  407630:	into   
  407631:	and    al,0xb5
  407633:	out    dx,al
  407634:	inc    edx
  407635:	dec    ecx
  407636:	aas    
  407637:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407638:	cmp    dl,0xb7
  40763b:	sbb    al,0xc2
  40763d:	cld    
  40763e:	or     BYTE PTR [edi-0x3bb66c83],ch
  407644:	(bad)  
  407645:	loop   0x40768b
  407647:	pop    ds
  407648:	out    dx,al
  407649:	test   eax,0xed75be82
  40764e:	inc    ebx
  40764f:	xlat   BYTE PTR ds:[ebx]
  407650:	sbb    bl,ah
  407652:	and    cl,bh
  407654:	cs add al,0xdb
  407657:	jbe    0x4075d9
  407659:	dec    eax
  40765a:	xchg   ebp,eax
  40765b:	inc    esi
  40765c:	mov    edx,0xd023dd27
  407661:	fisubr DWORD PTR [ebx+0x6fadf69d]
  407667:	sub    al,0xc8
  407669:	loop   0x407624
  40766b:	push   ebx
  40766c:	(bad)  
  40766d:	jmp    0x3e3d:0xf92a0688
  407674:	out    dx,al
  407675:	enter  0x8c30,0x3f
  407679:	lahf   
  40767a:	mov    esi,0x36616e38
  40767f:	jle    0x407697
  407681:	push   edx
  407682:	xor    bl,BYTE PTR [ecx-0x5]
  407685:	pop    es
  407686:	mov    BYTE PTR [ecx-0x22],bl
  407689:	scas   al,BYTE PTR es:[edi]
  40768a:	cmc    
  40768b:	lds    edi,FWORD PTR [ecx]
  40768d:	(bad)  
  40768e:	iret   
  40768f:	popa   
  407690:	and    ah,BYTE PTR [ecx-0x18]
  407693:	lea    eax,[edx+0x427119a0]
  407699:	jg     0x40768c
  40769b:	out    dx,al
  40769c:	dec    esi
  40769d:	call   0x7894:0xf9ff826f
  4076a4:	aaa    
  4076a5:	ja     0x4076a2
  4076a7:	push   0x65
  4076a9:	hlt    
  4076aa:	cdq    
  4076ab:	jae    0x40769b
  4076ad:	shr    BYTE PTR [eax-0x63],cl
  4076b0:	stos   BYTE PTR es:[edi],al
  4076b1:	ror    DWORD PTR [eax+edi*8],cl
  4076b4:	and    edx,ebx
  4076b6:	and    al,0xe1
  4076b8:	rol    DWORD PTR [edi+0xd],0x5b
  4076bc:	shr    DWORD PTR [ebx+edi*4],1
  4076bf:	mov    WORD PTR [ebx-0x3c86316],?
  4076c5:	mov    cl,0x8d
  4076c7:	popf   
  4076c8:	xor    DWORD PTR [ebx+0x48],esp
  4076cb:	add    bl,al
  4076cd:	outs   dx,BYTE PTR ds:[esi]
  4076ce:	ds add eax,0xee155f27
  4076d4:	mov    esi,0xde1175d
  4076d9:	and    DWORD PTR [esi],eax
  4076db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4076dc:	mov    BYTE PTR [eax-0x72862825],bl
  4076e2:	mov    al,0x9d
  4076e4:	sbb    eax,0x886456ea
  4076e9:	enter  0x95b4,0x4b
  4076ed:	rcl    BYTE PTR [eax+0x2d884926],cl
  4076f3:	fisub  WORD PTR ds:0x52317cb2
  4076f9:	xchg   edi,eax
  4076fa:	(bad)  ds:[esp+edx*8]
  4076fe:	pop    esi
  4076ff:	inc    eax
  407700:	adc    eax,0xa6af6cc1
  407705:	sub    esi,ecx
  407707:	mul    ch
  407709:	daa    
  40770a:	mov    bh,0x76
  40770c:	xchg   ebx,eax
  40770d:	aas    
  40770e:	or     edi,DWORD PTR [esi]
  407710:	mov    eax,esi
  407712:	jne    0x40775c
  407714:	sub    al,0x9e
  407716:	ins    DWORD PTR es:[edi],dx
  407717:	jnp    0x4076e8
  407719:	mov    ecx,0x3bddd9f2
  40771e:	in     eax,0x92
  407720:	rcl    bh,0x54
  407723:	xor    al,0x67
  407725:	pop    esp
  407726:	clc    
  407727:	jb     0x40778f
  407729:	xor    al,0xca
  40772b:	xor    DWORD PTR [edi+ebx*8-0x65],eax
  40772f:	js     0x40777e
  407731:	push   eax
  407732:	mov    ah,0x4e
  407734:	sub    BYTE PTR ds:0xdc458bc3,ch
  40773a:	xor    eax,esi
  40773c:	add    eax,edi
  40773e:	adc    DWORD PTR ds:0x42e11c,0x42fd09
  407748:	push   eax
  407749:	inc    eax
  40774a:	mov    eax,DWORD PTR [ebp-0x28]
  40774d:	sbb    DWORD PTR ds:0x42fcd1,0x6777
  407757:	xor    eax,esi
  407759:	add    eax,edi
  40775b:	push   eax
  40775c:	mov    eax,DWORD PTR [ebp-0x1c]
  40775f:	or     DWORD PTR ds:0x42e6ef,0x4a3f
  407769:	xor    eax,esi
  40776b:	add    DWORD PTR ds:0x42fcf1,0x266c
  407775:	add    eax,edi
  407777:	xor    DWORD PTR ds:0x42e70f,0x42e6eb
  407781:	push   eax
  407782:	lea    eax,[ebp-0x78]
  407785:	push   eax
  407786:	add    DWORD PTR ds:0x42e6ff,0x5eb6
  407790:	push   DWORD PTR [ebp-0xc]
  407793:	adc    DWORD PTR ds:0x42e703,0x2bbb
  40779d:	push   DWORD PTR [ebp-0x14]
  4077a0:	call   0x405e60
  4077a5:	adc    DWORD PTR ds:0x42fce5,0x42fd6e
  4077af:	test   eax,eax
  4077b1:	je     0x407e83
  4077b7:	lea    eax,[ebp-0x78]
  4077ba:	sbb    DWORD PTR ds:0x42fd82,0x6660
  4077c4:	push   eax
  4077c5:	mov    eax,DWORD PTR [ebp-0x14]
  4077c8:	jmp    0x407b15
  4077cd:	xlat   BYTE PTR ds:[ebx]
  4077ce:	and    BYTE PTR [eax+eiz*8+0x73],ch
  4077d2:	ins    BYTE PTR es:[edi],dx
  4077d3:	push   ebx
  4077d4:	aaa    
  4077d5:	pop    edx
  4077d6:	push   ecx
  4077d7:	push   ebx
  4077d8:	sahf   
  4077d9:	xchg   esi,eax
  4077da:	mov    edx,0xcca78599
  4077df:	jo     0x407851
  4077e1:	and    BYTE PTR [ebp+0x70],bh
  4077e4:	jo     0x40779c
  4077e6:	jp     0x407825
  4077e8:	loope  0x4077cf
  4077ea:	in     eax,dx
  4077eb:	jmp    0x9a0f:0x1eb11e6f
  4077f2:	int3   
  4077f3:	and    BYTE PTR [edx-0x29ae81b3],ch
  4077f9:	lods   eax,DWORD PTR ds:[esi]
  4077fa:	int    0xf8
  4077fc:	lods   eax,DWORD PTR ds:[esi]
  4077fd:	sub    ebp,DWORD PTR [esi]
  4077ff:	jmp    0xdf76:0xd7f96594
  407806:	aaa    
  407807:	leave  
  407808:	xor    esi,DWORD PTR [edx-0x5a]
  40780b:	cmp    ch,BYTE PTR [ebx+0x7197a52]
  407811:	pop    es
  407812:	shl    BYTE PTR [edi-0x61],0xbd
  407816:	xacquire xchg DWORD PTR [ebx+0x39],esp
  40781a:	pop    ebp
  40781b:	mov    ebx,0xb63232db
  407820:	dec    edx
  407821:	ins    BYTE PTR es:[edi],dx
  407822:	adc    eax,0xd6f7b510
  407827:	or     cl,BYTE PTR [esp+ecx*8]
  40782a:	cld    
  40782b:	sbb    dl,BYTE PTR [edx-0x66]
  40782e:	push   ebp
  40782f:	fmul   QWORD PTR [edx]
  407831:	loope  0x4077e2
  407833:	fdiv   QWORD PTR [ebp+ecx*8+0x59c1aab9]
  40783a:	loopne 0x407801
  40783c:	mov    esp,0xedf1e887
  407841:	fsub   st(6),st
  407843:	jge    0x40784d
  407845:	pop    ecx
  407846:	inc    ecx
  407847:	jne    0x407801
  407849:	dec    edx
  40784a:	sbb    DWORD PTR [ebx],ebx
  40784c:	push   0x5
  40784e:	shl    DWORD PTR [esi-0x5106b88],0xf6
  407855:	cmp    BYTE PTR [ecx],ch
  407857:	sbb    al,0x18
  407859:	sbb    BYTE PTR [edi],bh
  40785b:	lock gs add al,0x60
  40785f:	jo     0x4078ba
  407861:	pop    ds
  407862:	cmp    DWORD PTR [ebx+0x3a],esi
  407865:	xchg   esp,eax
  407866:	dec    ebx
  407867:	push   cs
  407868:	retf   
  407869:	sub    eax,0x39594a9e
  40786e:	(bad)  
  40786f:	loope  0x40781d
  407871:	ins    BYTE PTR es:[edi],dx
  407872:	push   cs
  407873:	loop   0x4078f2
  407875:	fadd   st,st(0)
  407877:	pop    eax
  407878:	out    dx,eax
  407879:	test   DWORD PTR [edi+0x7d],0xd211a09c
  407880:	imul   ecx,ebx,0x75b63ab9
  407886:	mov    esp,0xc82e2724
  40788b:	dec    eax
  40788c:	mov    BYTE PTR [ecx-0x6b8bd1c6],cl
  407892:	loopne 0x40790e
  407894:	inc    ebp
  407895:	lds    eax,FWORD PTR [edi]
  407897:	mov    ebp,0xc70b89c9
  40789c:	fnstcw WORD PTR [edi+0x492c223b]
  4078a2:	push   0x6c
  4078a4:	or     al,0xdb
  4078a6:	nop
  4078a7:	mov    BYTE PTR [ecx],dh
  4078a9:	mov    al,0x49
  4078ab:	dec    ecx
  4078ac:	mov    cl,0x53
  4078ae:	jno    0x407913
  4078b0:	(bad)  
  4078b1:	mov    ecx,0x92746e38
  4078b6:	adc    eax,0x532163cb
  4078bb:	inc    eax
  4078bc:	xor    eax,0x8bf3b809
  4078c1:	push   ecx
  4078c2:	sti    
  4078c3:	(bad)  
  4078c7:	mov    ebx,0x59e88b35
  4078cc:	iret   
  4078cd:	arpl   WORD PTR [ebp+esi*2+0x46c9dbc6],bx
  4078d4:	or     eax,0x6c07c079
  4078d9:	xor    ebp,DWORD PTR [eax-0x1593ffdc]
  4078df:	xchg   BYTE PTR [ebx-0x40],cl
  4078e2:	out    dx,al
  4078e3:	out    0x58,al
  4078e5:	inc    esp
  4078e6:	and    BYTE PTR [edi+eax*4-0x6a],dl
  4078ea:	sbb    DWORD PTR [edi+0x7a],eax
  4078ed:	sbb    ah,BYTE PTR [ebx-0x5924b46e]
  4078f3:	into   
  4078f4:	jnp    0x407933
  4078f6:	inc    ecx
  4078f7:	stos   DWORD PTR es:[edi],eax
  4078f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4078f9:	test   BYTE PTR [esi],bl
  4078fb:	adc    DWORD PTR [ebp+esi*1+0x388698dd],ecx
  407902:	push   0x23
  407904:	(bad)  
  407905:	(bad)  
  407907:	mov    DWORD PTR [ecx],ecx
  407909:	test   eax,0x2f2235e1
  40790e:	pop    DWORD PTR [eax]
  407910:	pop    esp
  407911:	mov    edi,DWORD PTR [esi+0x6f]
  407914:	fs sti 
  407916:	mov    ds,WORD PTR [ecx+0x44]
  407919:	repnz sub al,0x82
  40791c:	out    dx,al
  40791d:	push   cs
  40791e:	stc    
  40791f:	ror    DWORD PTR ds:0xa7edceb6,0x47
  407926:	and    al,BYTE PTR [ebx*2+0x5deef5db]
  40792d:	retf   0x9790
  407930:	push   ebp
  407931:	mov    ds:0xd6d8531e,eax
  407936:	push   esp
  407937:	fcmovu st,st(2)
  407939:	push   0x53ac2816
  40793e:	mov    ebp,0xb58ea3d6
  407943:	pop    ecx
  407944:	dec    edx
  407945:	in     al,dx
  407946:	add    BYTE PTR [eax],0x30
  407949:	iret   
  40794a:	mov    ah,0x6b
  40794c:	(bad)  
  40794f:	ss ins DWORD PTR es:[edi],dx
  407951:	push   es
  407952:	(bad)  
  407953:	adc    al,0x7b
  407955:	loop   0x4078e8
  407957:	add    DWORD PTR [ecx],ecx
  407959:	stc    
  40795a:	lods   eax,DWORD PTR ds:[esi]
  40795b:	popa   
  40795c:	call   0x4c76d895
  407961:	test   DWORD PTR [edx+0x52],esi
  407964:	xor    BYTE PTR [ecx-0x66],al
  407967:	retf   0xd415
  40796a:	sbb    BYTE PTR [ebp+0x9ccf488],al
  407970:	shr    DWORD PTR [ebx-0x5b],1
  407973:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407974:	jg     0x407968
  407976:	and    al,0x9f
  407978:	test   eax,0x8dcdbf1e
  40797d:	call   0xa365:0xccf1dd95
  407984:	xor    BYTE PTR [edx+0x75a0f415],al
  40798a:	or     BYTE PTR [edx-0x40146760],dh
  407990:	repz call 0x3e16:0x8e88d27f
  407998:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407999:	inc    eax
  40799a:	mov    esi,ebp
  40799c:	out    dx,eax
  40799d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40799e:	mov    eax,cs
  4079a0:	jnp    0x407977
  4079a2:	push   ebx
  4079a3:	mov    ebp,0xb852f334
  4079a8:	pushf  
  4079a9:	mov    ds:0x6be98914,eax
  4079ae:	ins    DWORD PTR es:[edi],dx
  4079af:	mov    ebx,DWORD PTR [esi]
  4079b1:	pusha  
  4079b2:	rcl    DWORD PTR [edx-0x4b],0x27
  4079b6:	push   edi
  4079b7:	jge    0x40798d
  4079b9:	int    0x1e
  4079bb:	aad    0xd5
  4079bd:	mov    ebx,0x9c7a0b5f
  4079c2:	fadd   st,st(3)
  4079c4:	sbb    al,0xed
  4079c6:	cli    
  4079c7:	neg    edi
  4079c9:	cmp    edx,eax
  4079cb:	js     0x4079df
  4079cd:	mov    bh,0xfe
  4079cf:	mov    esi,0x8af45e09
  4079d4:	int    0x85
  4079d6:	fs mov esi,0xfd86727d
  4079dc:	xchg   ebx,eax
  4079dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4079de:	(bad)  
  4079df:	int3   
  4079e0:	bound  esi,QWORD PTR [eax]
  4079e2:	icebp  
  4079e3:	imul   ebp,DWORD PTR [ebp-0x6],0x5d405791
  4079ea:	xor    DWORD PTR [eax+0x17],eax
  4079ed:	jmp    0x7127f386
  4079f2:	int3   
  4079f3:	or     dh,BYTE PTR [ebx-0x6a]
  4079f6:	mov    bh,ch
  4079f8:	fisub  WORD PTR [ebx]
  4079fa:	test   BYTE PTR [edi+0x1c773b63],0x8
  407a01:	and    ah,BYTE PTR [eax+0x4]
  407a04:	pusha  
  407a05:	inc    edi
  407a06:	addr16 test al,0x8b
  407a09:	(bad)  [edi+eiz*8+0x6b8a5443]
  407a10:	aas    
  407a11:	fldcw  WORD PTR [edx+0x2]
  407a14:	xor    edi,edx
  407a16:	inc    ebx
  407a17:	dec    esi
  407a18:	mov    ebp,ecx
  407a1a:	xchg   ebp,eax
  407a1b:	jo     0x407a8c
  407a1d:	push   edi
  407a1e:	pushf  
  407a1f:	(bad)  
  407a20:	lock (bad) 
  407a22:	retf   0x49b
  407a25:	adc    esi,ecx
  407a27:	outs   dx,BYTE PTR ds:[esi]
  407a28:	jl     0x4079ab
  407a2a:	sub    BYTE PTR [ebx-0x3b8a06b9],0x82
  407a31:	mov    cl,0x9c
  407a33:	jle    0x407a2b
  407a35:	popf   
  407a36:	popa   
  407a37:	jecxz  0x407ab2
  407a39:	push   esi
  407a3a:	(bad)  
  407a3b:	inc    edx
  407a3c:	fdivr  DWORD PTR [edi]
  407a3e:	icebp  
  407a3f:	pop    esi
  407a40:	jb     0x407a07
  407a42:	out    dx,al
  407a43:	push   ss
  407a44:	jp     0x407a9d
  407a46:	xchg   esi,eax
  407a47:	jg     0x407a56
  407a49:	pop    edx
  407a4a:	dec    esi
  407a4b:	mov    eax,ds:0xd92a974e
  407a50:	add    ecx,DWORD PTR [ecx-0x3d]
  407a53:	stc    
  407a54:	mov    ah,0x52
  407a56:	rol    DWORD PTR [ebx],0x5
  407a59:	out    dx,eax
  407a5a:	mov    cl,0xf6
  407a5c:	sbb    ch,cl
  407a5e:	dec    edx
  407a5f:	add    eax,0x62c0ec0d
  407a64:	stc    
  407a65:	push   cs
  407a66:	imul   ebx,DWORD PTR [eax-0x47],0xffffffe8
  407a6a:	push   esp
  407a6b:	mov    ds:0x57334cb1,eax
  407a70:	int3   
  407a71:	xchg   ebx,eax
  407a72:	adc    al,0x1c
  407a74:	pop    ss
  407a75:	jns    0x407a39
  407a77:	or     al,0xc4
  407a79:	repz sub BYTE PTR [edx-0x44e261b1],al
  407a80:	pop    ebx
  407a81:	outs   dx,DWORD PTR ds:[esi]
  407a82:	sub    cl,BYTE PTR [eax-0x45]
  407a85:	in     al,0x9b
  407a87:	jmp    0x407a7a
  407a89:	test   al,0x39
  407a8b:	retf   0x512f
  407a8e:	sub    BYTE PTR [esi+edi*1],cl
  407a91:	into   
  407a92:	or     BYTE PTR [edi+0x79d71042],dh
  407a98:	nop
  407a99:	push   ebp
  407a9a:	sbb    BYTE PTR [esi+0x51],bh
  407a9d:	jno    0x407a48
  407a9f:	cmp    al,0x3
  407aa1:	inc    eax
  407aa2:	scas   eax,DWORD PTR es:[edi]
  407aa3:	dec    DWORD PTR [ebx-0x57]
  407aa6:	ds dec ebp
  407aa8:	(bad)  
  407aac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407aad:	neg    DWORD PTR [ebp-0x6f345688]
  407ab3:	add    al,0x29
  407ab5:	mov    ebx,0x4e8e5f51
  407aba:	mov    BYTE PTR [edi],dh
  407abc:	adc    al,0xc0
  407abe:	fisttp WORD PTR [ecx-0x232cd3]
  407ac4:	dec    ecx
  407ac5:	adc    BYTE PTR [edx],bh
  407ac7:	dec    edx
  407ac8:	xchg   ecx,eax
  407ac9:	push   ebx
  407aca:	ret    0x3821
  407acd:	mov    ebx,0x88c818c0
  407ad2:	push   edx
  407ad3:	lds    ecx,FWORD PTR [ebp-0x5673fef0]
  407ad9:	or     al,0x56
  407adb:	xchg   edi,eax
  407adc:	push   ebp
  407add:	aaa    
  407ade:	das    
  407adf:	add    ecx,DWORD PTR [ebx+0x4a]
  407ae2:	daa    
  407ae3:	mov    cs,WORD PTR [ebp-0x6a7a6a39]
  407ae9:	faddp  st(7),st
  407aeb:	fldenv [eax]
  407aed:	xchg   ebx,eax
  407aee:	mov    BYTE PTR [edx+ebx*1-0x4f],cl
  407af2:	fiadd  WORD PTR [esi-0x44]
  407af5:	mov    dl,0x71
  407af7:	pop    esp
  407af8:	or     BYTE PTR [esi],0xbe
  407afb:	enter  0xa737,0xab
  407aff:	jle    0x407b10
  407b01:	or     ch,BYTE PTR [edi]
  407b03:	jbe    0x407b3f
  407b05:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407b06:	mov    bh,0x6e
  407b08:	mov    DWORD PTR [esi+0x54],esp
  407b0b:	loop   0x407b0d
  407b0d:	clc    
  407b0e:	sbb    cl,BYTE PTR [edi]
  407b10:	psrlw  mm7,QWORD PTR [ecx+esi*8+0x3c633b6]
  407b18:	(bad)  
  407b19:	push   eax
  407b1a:	mov    eax,DWORD PTR [ebp-0x10]
  407b1d:	add    eax,0xaa
  407b22:	push   eax
  407b23:	mov    eax,DWORD PTR [ebp-0x10]
  407b26:	mov    eax,DWORD PTR [eax+0x198]
  407b2c:	push   DWORD PTR [eax]
  407b2e:	jmp    0x407e7b
  407b33:	sahf   
  407b34:	das    
  407b35:	or     ah,BYTE PTR [edi]
  407b37:	mov    DWORD PTR [ecx],esp
  407b39:	mov    cl,0xb5
  407b3b:	pop    es
  407b3c:	mov    BYTE PTR [ebx],bl
  407b3e:	(bad)  
  407b3f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407b40:	and    eax,ecx
  407b42:	and    edx,DWORD PTR [edi-0x37]
  407b45:	jo     0x407bb7
  407b47:	and    BYTE PTR [ebp+0x70],bh
  407b4a:	jo     0x407af2
  407b4c:	cli    
  407b4d:	xor    eax,0x7b743e7
  407b52:	inc    ecx
  407b53:	xor    eax,DWORD PTR [esi+0x64]
  407b56:	pop    esi
  407b57:	mov    ?,WORD PTR ds:[esi-0xdb8cf23]
  407b5e:	icebp  
  407b5f:	mov    BYTE PTR [eax+0x16],dh
  407b62:	int3   
  407b63:	cmp    eax,ebp
  407b65:	(bad)  
  407b66:	int3   
  407b67:	jge    0x407bb4
  407b69:	xchg   DWORD PTR [ebp-0x72d00990],ecx
  407b6f:	je     0x407b86
  407b71:	xchg   ebp,eax
  407b72:	fdiv   QWORD PTR [edx]
  407b74:	mov    WORD PTR [ebx],ds
  407b76:	mov    eax,0xd6eb372f
  407b7b:	out    dx,al
  407b7c:	pop    edx
  407b7d:	lods   al,BYTE PTR ds:[esi]
  407b7e:	ins    DWORD PTR es:[edi],dx
  407b7f:	pop    esi
  407b80:	pop    ecx
  407b82:	sub    dh,dh
  407b84:	fnsave [ecx+0x60d60fd3]
  407b8a:	xor    dl,BYTE PTR [edi+0x33]
  407b8d:	pop    edi
  407b8e:	xchg   ecx,eax
  407b8f:	scas   al,BYTE PTR es:[edi]
  407b90:	in     al,dx
  407b91:	xchg   edx,eax
  407b92:	loop   0x407ba6
  407b94:	mov    eax,ds:0x4aa03c43
  407b99:	jae    0x407b9c
  407b9b:	pop    ss
  407b9c:	fistp  QWORD PTR [edx+0x75]
  407b9f:	ror    DWORD PTR [ebp-0x3872e49c],1
  407ba5:	aaa    
  407ba6:	imul   ebp,DWORD PTR [edx-0x49],0xffffffe0
  407baa:	in     al,0x0
  407bac:	add    edx,DWORD PTR [ebp-0x62]
  407baf:	addr16 in eax,dx
  407bb1:	or     DWORD PTR [ebx+0x11666206],eax
  407bb7:	cld    
  407bb8:	jle    0x407c39
  407bba:	fidivr DWORD PTR ds:0x221ee42f
  407bc0:	int3   
  407bc1:	push   edi
  407bc2:	inc    ecx
  407bc3:	mov    WORD PTR [ebx+esi*4-0x5679d771],cs
  407bca:	mov    ch,0x5c
  407bcc:	cmp    al,0xfe
  407bce:	imul   edi,DWORD PTR [ecx+0x665d8f56],0xffffffeb
  407bd5:	xor    DWORD PTR [eax+ebp*8+0x4bf974f4],ecx
  407bdc:	popa   
  407bdd:	inc    ecx
  407bde:	hlt    
  407bdf:	adc    al,0xc4
  407be1:	lea    ebp,[eax+eax*2+0x11b298e1]
  407be8:	xlat   BYTE PTR ds:[ebx]
  407be9:	adc    eax,DWORD PTR [eax-0x61d63d70]
  407bef:	sar    BYTE PTR [eax-0x57],0x32
  407bf3:	and    esi,DWORD PTR [esi]
  407bf5:	xlat   BYTE PTR ds:[ebx]
  407bf6:	xchg   ebp,eax
  407bf7:	sbb    BYTE PTR [ebp+0x72],dl
  407bfa:	aad    0x42
  407bfc:	mov    ebp,0xabbc04a8
  407c01:	dec    ecx
  407c02:	dec    BYTE PTR [ebx+0x3]
  407c05:	out    0xad,al
  407c07:	loope  0x407c21
  407c09:	out    dx,al
  407c0a:	adc    DWORD PTR [ebp-0xf],ecx
  407c0d:	fld    QWORD PTR [ebp-0x44]
  407c10:	mov    cl,0xa
  407c12:	les    edi,FWORD PTR [esi+0x19]
  407c15:	and    BYTE PTR [ebp+0x17],bh
  407c18:	add    dl,cl
  407c1a:	inc    ecx
  407c1b:	push   0x7994736d
  407c20:	call   0x2c8da900
  407c25:	out    dx,al
  407c26:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407c27:	cmp    DWORD PTR [eax],ecx
  407c29:	mov    bl,0xb
  407c2b:	xchg   ebx,eax
  407c2c:	mov    ch,0x4a
  407c2e:	lea    edx,[edx]
  407c30:	stos   DWORD PTR es:[edi],eax
  407c31:	mov    dl,0x12
  407c33:	scas   al,BYTE PTR es:[edi]
  407c34:	stos   BYTE PTR es:[edi],al
  407c35:	lds    ecx,FWORD PTR [ecx+0x21c8135]
  407c3b:	std    
  407c3c:	cwde   
  407c3d:	repnz icebp 
  407c3f:	cmp    esp,ecx
  407c41:	popa   
  407c42:	inc    ebp
  407c43:	pop    ecx
  407c44:	daa    
  407c45:	sbb    ecx,DWORD PTR [ebp-0x58]
  407c48:	addr16 dec edi
  407c4a:	push   edi
  407c4b:	pop    ebp
  407c4c:	test   DWORD PTR [ecx],eax
  407c4e:	nop
  407c4f:	(bad)  
  407c50:	sbb    eax,DWORD PTR ds:0xfaf23d26
  407c56:	je     0x407cd6
  407c58:	fiadd  DWORD PTR [eax+0x7cab2a03]
  407c5e:	inc    edx
  407c5f:	(bad)  
  407c61:	sbb    ebp,0x9e414396
  407c67:	jmp    0x407ccb
  407c69:	push   0xa7b522c9
  407c6e:	adc    eax,0xafd2152e
  407c73:	jl     0x407cc9
  407c75:	test   BYTE PTR [eax],dl
  407c77:	push   esp
  407c78:	out    0x2c,al
  407c7a:	mov    ecx,0x1cffe09c
  407c7f:	xchg   ebx,eax
  407c80:	mov    ds:0x18d7bbce,eax
  407c85:	std    
  407c86:	xor    al,0xc6
  407c88:	cmp    edi,edx
  407c8a:	outs   dx,BYTE PTR ds:[esi]
  407c8b:	cmp    bl,dh
  407c8d:	mov    al,ds:0x8426935e
  407c92:	mov    eax,0xa20c2b91
  407c97:	mov    BYTE PTR [ebp-0x2147f30c],bh
  407c9d:	loopne 0x407c93
  407c9f:	jae    0x407c4a
  407ca1:	popf   
  407ca2:	dec    esi
  407ca3:	hlt    
  407ca4:	inc    edi
  407ca5:	outs   dx,DWORD PTR ds:[esi]
  407ca6:	pop    ds
  407ca7:	out    dx,eax
  407ca8:	mov    WORD PTR [eax],?
  407caa:	dec    eax
  407cab:	fbld   TBYTE PTR [ebx+0x67]
  407cae:	stos   DWORD PTR es:[edi],eax
  407caf:	pop    esp
  407cb0:	enter  0x75b8,0x20
  407cb4:	clc    
  407cb5:	mov    DWORD PTR ds:0xc69289a3,ebx
  407cbb:	push   0xac6fbc54
  407cc0:	into   
  407cc1:	(bad)
  407cc4:	sbb    edi,DWORD PTR [ecx-0x1889977b]
  407cca:	inc    eax
  407ccb:	out    0x6e,eax
  407ccd:	inc    esi
  407cce:	xor    bh,BYTE PTR [edi-0x5cb19045]
  407cd4:	mov    eax,0xe2dba088
  407cd9:	mov    dl,0xff
  407cdb:	out    0x82,al
  407cdd:	cld    
  407cde:	loope  0x407d22
  407ce0:	jo     0x407d32
  407ce2:	or     al,0x37
  407ce4:	jmp    0xe64c8ab4
  407ce9:	in     eax,0x24
  407ceb:	test   DWORD PTR [ebx-0x62],esi
  407cee:	push   eax
  407cef:	xchg   DWORD PTR [edi],eax
  407cf1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407cf2:	jmp    0xa55f2a8b
  407cf7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407cf8:	out    dx,eax
  407cf9:	pop    ebx
  407cfa:	ret    0x633c
  407cfd:	jo     0x407d36
  407cff:	adc    eax,0xc018a267
  407d04:	add    DWORD PTR [edi-0x2b682a51],0x8b74d42a
  407d0e:	lahf   
  407d0f:	cmp    ebp,ebx
  407d11:	adc    DWORD PTR [edx+esi*2+0x779fe297],ebx
  407d18:	ret    0x3ce2
  407d1b:	shl    BYTE PTR [ecx+0xc3ff9ea],cl
  407d21:	sar    BYTE PTR [edx+0xe5f08a6],0xb4
  407d28:	std    
  407d29:	push   ecx
  407d2a:	mov    ch,BYTE PTR [ebx+0x4d]
  407d2d:	pop    edx
  407d2e:	and    DWORD PTR [esi*8+0x51c24bc1],esp
  407d35:	xchg   edi,eax
  407d36:	sub    DWORD PTR [ebx],esp
  407d38:	jae    0x407db7
  407d3a:	add    eax,0x5a5c00c4
  407d3f:	xchg   esp,eax
  407d40:	inc    edx
  407d41:	out    dx,eax
  407d42:	addr16 mov dl,0xca
  407d45:	in     al,dx
  407d46:	leave  
  407d47:	test   DWORD PTR [ebx+0x949fbaf],ecx
  407d4d:	je     0x407d8e
  407d4f:	inc    esi
  407d50:	jne    0x407d78
  407d52:	jmp    0x407d52
  407d54:	cdq    
  407d55:	bound  edx,QWORD PTR [ebx]
  407d57:	or     al,0xc9
  407d59:	mov    bl,0x32
  407d5b:	shl    BYTE PTR [eax-0x6d],1
  407d5e:	mov    cl,0x6b
  407d60:	jne    0x407d13
  407d62:	mov    dl,0xaf
  407d64:	add    al,0xa4
  407d66:	in     eax,0x3
  407d68:	int    0x65
  407d6a:	mov    dl,0xae
  407d6c:	(bad)  
  407d6d:	adc    ebp,esp
  407d6f:	adc    edi,DWORD PTR [eax+0x66]
  407d72:	mov    ebp,0xd886c1a
  407d77:	stos   DWORD PTR es:[edi],eax
  407d78:	push   eax
  407d79:	xchg   DWORD PTR [esi-0xa],ebx
  407d7c:	mov    cl,0x9
  407d7e:	lock loopne 0x407ddd
  407d81:	fsub   QWORD PTR [edx]
  407d83:	fnstsw WORD PTR [bx+si-0x588]
  407d88:	mov    cl,0xdc
  407d8a:	push   ebp
  407d8b:	hlt    
  407d8c:	gs jmp 0x407d3c
  407d8f:	enter  0x7236,0xc9
  407d93:	sub    esi,esp
  407d95:	(bad)  
  407d96:	shr    BYTE PTR [edi-0x1],1
  407d99:	mov    ecx,0xc9eaa2c5
  407d9e:	add    ecx,ebp
  407da0:	xchg   bh,bl
  407da2:	cld    
  407da3:	popf   
  407da4:	cmc    
  407da5:	push   esi
  407da6:	in     al,0x20
  407da8:	sub    al,0x97
  407daa:	leave  
  407dab:	push   0xaae60e56
  407db0:	and    al,0xa7
  407db3:	push   0x86eb4fd2
  407db8:	leave  
  407db9:	rcl    bl,cl
  407dbb:	fstp   DWORD PTR [eax-0x749ff36a]
  407dc1:	aam    0xd
  407dc3:	fbld   TBYTE PTR [edi-0x18]
  407dc6:	add    eax,0xc403966d
  407dcb:	or     eax,0xcf03c6f3
  407dd0:	jno    0x407d6c
  407dd2:	fwait
  407dd3:	jns    0x407dc4
  407dd5:	push   cs
  407dd6:	push   esp
  407dd7:	cld    
  407dd8:	push   es
  407dd9:	add    edx,edx
  407ddb:	xchg   edx,eax
  407ddc:	adc    al,0x22
  407dde:	cmp    dl,BYTE PTR [esp+esi*4-0x13]
  407de2:	(bad)  [esi]
  407de4:	loope  0x407e2b
  407de6:	fisttp QWORD PTR [ecx]
  407de8:	xchg   BYTE PTR [ebp-0x59],cl
  407deb:	sub    eax,0xe6e19ec3
  407df0:	or     DWORD PTR [esi+ecx*8-0x21dc20be],esi
  407df7:	cmp    eax,0x9c4bcea5
  407dfc:	mov    eax,0xe83aa332
  407e01:	cld    
  407e02:	push   esi
  407e03:	sub    BYTE PTR [edi],0x1e
  407e06:	adc    BYTE PTR [eax-0x5a38bf5b],0xb9
  407e0d:	add    DWORD PTR [eax-0x25cd5dad],esp
  407e13:	call   0x97be:0xff679e38
  407e1a:	outs   dx,BYTE PTR ds:[esi]
  407e1b:	xchg   edi,esi
  407e1d:	or     dl,dh
  407e1f:	jnp    0x407dd7
  407e21:	fld1   
  407e23:	fist   WORD PTR [ecx]
  407e25:	xlat   BYTE PTR ds:[ebx]
  407e26:	das    
  407e27:	outs   dx,BYTE PTR ds:[esi]
  407e28:	pusha  
  407e29:	sbb    al,0x57
  407e2b:	jmp    0x143f:0x1400a897
  407e32:	inc    esp
  407e33:	ret    
  407e34:	mov    bl,BYTE PTR [ecx-0x6]
  407e37:	mov    eax,0xd7256eb9
  407e3c:	outs   dx,DWORD PTR ds:[esi]
  407e3d:	push   edx
  407e3e:	loopne 0x407e4e
  407e40:	pushf  
  407e41:	xor    eax,0xe1123266
  407e46:	pop    ecx
  407e47:	xchg   edi,eax
  407e48:	mov    al,0x8e
  407e4a:	cli    
  407e4b:	mov    fs,WORD PTR [ebp+0x7789eb13]
  407e51:	push   ebp
  407e52:	xor    ebx,edx
  407e54:	adc    al,0xf9
  407e56:	das    
  407e57:	popf   
  407e58:	or     DWORD PTR [edx-0x1],0xeeccc67e
  407e5f:	cli    
  407e60:	push   0x34
  407e62:	shr    BYTE PTR ds:0xe0ea9800,0xef
  407e69:	sbb    al,0x1d
  407e6b:	pop    ebx
  407e6c:	dec    eax
  407e6d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407e6e:	push   ss
  407e6f:	mov    ah,0x63
  407e71:	cld    
  407e72:	div    ebx
  407e74:	ins    BYTE PTR es:[edi],dx
  407e75:	into   
  407e76:	mov    dh,0x4c
  407e78:	jbe    0x407eb5
  407e7a:	pop    eax
  407e7b:	call   0x4120bb
  407e80:	mov    DWORD PTR [ebp-0x8],eax
  407e83:	cmp    DWORD PTR [ebp-0x8],0x0
  407e87:	jmp    0x4081d4
  407e8c:	in     eax,0xe6
  407e8e:	outs   dx,DWORD PTR ds:[esi]
  407e8f:	pop    ebp
  407e90:	outs   dx,DWORD PTR ds:[esi]
  407e91:	jne    0x407e88
  407e93:	data16 hlt 
  407e95:	test   ebx,eax
  407e97:	pushf  
  407e98:	cld    
  407e99:	cmc    
  407e9a:	jno    0x407ee0
  407e9c:	pop    es
  407e9d:	aad    0x70
  407e9f:	jo     0x407ec1
  407ea1:	jge    0x407f13
  407ea3:	jo     0x407ecc
  407ea5:	ja     0x407ec4
  407ea7:	mov    ecx,0x45dee552
  407eac:	inc    esi
  407ead:	mov    ebp,0x6926d801
  407eb2:	add    dh,BYTE PTR [eax+edx*1+0x4d4ebc29]
  407eb9:	les    edi,FWORD PTR [eax+0x7d93bf86]
  407ebf:	ror    DWORD PTR [ebp+0x5c6f33bf],0x3f
  407ec6:	bndstx [ebp-0x1f6ea741],(bad)
  407ecd:	pop    es
  407ece:	xchg   edi,eax
  407ecf:	js     0x407ec0
  407ed1:	aad    0xcf
  407ed3:	jg     0x407ef8
  407ed5:	or     edx,DWORD PTR [esi+0x18]
  407ed8:	out    0x6d,eax
  407eda:	mov    bh,0x6c
  407edc:	aad    0x55
  407ede:	inc    esp
  407edf:	mov    WORD PTR ss:[bx+di-0x7c],ss
  407ee4:	stc    
  407ee5:	add    al,0x84
  407ee7:	mov    esp,0xaf2b36a4
  407eec:	iret   
  407eed:	xcrypt-ofb (bad)
  407eee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407eef:	scas   eax,DWORD PTR es:[edi]
  407ef0:	push   ebx
  407ef1:	dec    esp
  407ef2:	adc    esi,ecx
  407ef4:	xchg   esp,eax
  407ef5:	shr    BYTE PTR [edx+0x4d],1
  407ef8:	jo     0x407f00
  407efa:	mov    DWORD PTR [eax],ebx
  407efc:	jmp    0x407f3c
  407efe:	ja     0x407f5f
  407f00:	lds    edx,FWORD PTR [edi-0x6b930a11]
  407f06:	mov    ecx,0x7b73a8b2
  407f0b:	int    0xb4
  407f0d:	mov    dh,0x7d
  407f0f:	cli    
  407f10:	test   BYTE PTR [edx-0x1155a7cf],cl
  407f16:	xor    cl,BYTE PTR [ebx+0x568b4f57]
  407f1c:	in     al,dx
  407f1d:	arpl   WORD PTR [esi-0x5db9fe8b],si
  407f23:	adc    ebp,DWORD PTR [esi+0x46]
  407f26:	inc    esi
  407f27:	or     DWORD PTR [eax],esi
  407f29:	test   eax,0xbcef6dbf
  407f2e:	cmp    BYTE PTR [edi],dh
  407f30:	jmp    0x407f41
  407f32:	dec    edi
  407f33:	frstor [eax+0x38277b1c]
  407f39:	mov    ds:0x33f4bd22,al
  407f3e:	adc    dh,BYTE PTR [ecx+0x5fb54732]
  407f44:	(bad)  
  407f45:	out    dx,al
  407f46:	pop    esp
  407f47:	iret   
  407f48:	mov    ds:0x72a18c12,eax
  407f4d:	nop
  407f4e:	xor    eax,0xf05d6050
  407f53:	sub    al,0x94
  407f55:	sbb    BYTE PTR [ebx],bh
  407f57:	dec    ecx
  407f58:	stos   BYTE PTR es:[edi],al
  407f59:	xor    al,0xbe
  407f5b:	ins    BYTE PTR es:[edi],dx
  407f5c:	or     dl,al
  407f5e:	mov    dl,0xe4
  407f60:	adc    eax,DWORD PTR [edx+ebx*8+0x2b5a07f0]
  407f67:	mov    WORD PTR [ecx+0x79c08ec5],ds
  407f6d:	iret   
  407f6e:	mov    fs,WORD PTR ds:0x93f97cc9
  407f74:	push   0xffffffb4
  407f76:	fcomp  QWORD PTR [ecx]
  407f78:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407f79:	push   ebx
  407f7a:	jne    0x407f26
  407f7c:	jle    0x407f1e
  407f7e:	sbb    DWORD PTR [ecx+0x1dc46e1b],0xffffffd5
  407f85:	mov    dl,cl
  407f87:	sbb    al,0xcd
  407f89:	sub    edx,edi
  407f8b:	mov    dh,0x45
  407f8d:	pop    es
  407f8e:	mov    ds:0x676c7137,al
  407f93:	out    dx,eax
  407f94:	cs popf 
  407f96:	inc    ebx
  407f97:	xor    DWORD PTR gs:[ebx-0x2036ddd5],esp
  407f9e:	mov    edx,0x5b1ebe50
  407fa3:	jp     0x408020
  407fa5:	cld    
  407fa6:	sar    bl,1
  407fa8:	mov    dl,0xfb
  407faa:	or     cl,BYTE PTR [ebp+eiz*2+0x21]
  407fae:	fbld   TBYTE PTR [ebx-0x78]
  407fb1:	fbld   TBYTE PTR [ecx]
  407fb3:	rol    ah,1
  407fb5:	pop    esi
  407fb6:	push   edi
  407fb7:	or     al,0x7b
  407fb9:	inc    ecx
  407fba:	add    eax,0x6d65f703
  407fbf:	int    0x4e
  407fc1:	adc    eax,0xd344ed1d
  407fc6:	popf   
  407fc7:	or     DWORD PTR [ebp-0x4ce4d93a],0x7f
  407fce:	cmp    esi,DWORD PTR [edx+esi*4+0x5b64df0f]
  407fd5:	xchg   ebp,eax
  407fd6:	adc    cl,ah
  407fd8:	hlt    
  407fd9:	push   cs
  407fda:	pop    edx
  407fdb:	loope  0x40801a
  407fdd:	mov    fs,WORD PTR [edx-0x5a]
  407fe0:	mov    dl,BYTE PTR [esi+ecx*2-0x7f]
  407fe4:	inc    edx
  407fe5:	pop    ss
  407fe6:	(bad)  
  407fe7:	stos   DWORD PTR es:[edi],eax
  407fe8:	imul   esi,DWORD PTR [edx+esi*4],0xe3c6b5fc
  407fef:	sub    DWORD PTR [ebp+0x5bf2926d],ecx
  407ff5:	in     eax,0x18
  407ff7:	nop
  407ff8:	mov    ebp,0xff9a695
  407ffd:	mov    ah,0xe5
  407fff:	adc    DWORD PTR [ebx],ebp
  408001:	xor    DWORD PTR ds:0x8b33e3d7,esi
  408007:	or     BYTE PTR [edi+0x37ec1309],al
  40800d:	dec    esi
  40800e:	pusha  
  40800f:	lods   al,BYTE PTR ds:[esi]
  408010:	fsub   DWORD PTR [ebx-0x653a2ca4]
  408016:	les    ebx,FWORD PTR [esi]
  408018:	pop    ebp
  408019:	retf   0xb281
  40801c:	sub    cl,BYTE PTR [ecx+eax*8-0x5da96575]
  408023:	stos   DWORD PTR es:[edi],eax
  408024:	jp     0x408082
  408026:	jge    0x407faf
  408028:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408029:	dec    eax
  40802a:	out    0x52,al
  40802c:	(bad)  
  40802d:	rcr    BYTE PTR [ebp-0x34],0xea
  408031:	mov    edx,0x7b49b21a
  408036:	pop    eax
  408037:	fnstenv [edx-0xb]
  40803a:	inc    edi
  40803b:	out    0xa,al
  40803d:	cli    
  40803e:	dec    edi
  40803f:	adc    DWORD PTR [esi-0x4],eax
  408042:	cmp    DWORD PTR [esi-0x69860731],0x79b4ac2d
  40804c:	mov    ecx,0x57a33bc3
  408051:	out    0xef,eax
  408053:	and    eax,0xf45a7c3d
  408058:	pushf  
  408059:	sbb    eax,0xe11aefb7
  40805e:	dec    esi
  40805f:	ficom  WORD PTR [eax]
  408061:	outs   dx,BYTE PTR ds:[esi]
  408062:	jno    0x4080ae
  408064:	bswap  eax
  408066:	pop    ds
  408067:	int3   
  408068:	xor    esi,ebx
  40806a:	int    0x3f
  40806c:	retf   
  40806d:	ins    DWORD PTR es:[edi],dx
  40806e:	into   
  40806f:	jg     0x408014
  408071:	sbb    eax,0xaba22bd8
  408076:	xor    bl,BYTE PTR [esi+eax*2+0x2d007772]
  40807d:	mov    BYTE PTR [esi+edx*8+0x77],ch
  408081:	add    ebx,ebp
  408083:	and    al,0x4
  408085:	dec    eax
  408086:	push   edx
  408087:	mov    ds:0xa85dfe27,eax
  40808c:	stos   BYTE PTR es:[edi],al
  40808d:	jge    0x4080e1
  40808f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408090:	sahf   
  408091:	nop
  408092:	cwde   
  408093:	fstp   QWORD PTR [esi+0x59]
  408096:	push   edi
  408097:	xor    eax,0x1e29ef43
  40809c:	mov    ds:0xb9b31b9b,eax
  4080a1:	int3   
  4080a2:	test   DWORD PTR [edx+edi*2],ebp
  4080a5:	imul   edi,ebx,0xffffffb2
  4080a8:	das    
  4080a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4080aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4080ab:	push   cs
  4080ac:	fadd   QWORD PTR [esi+0x132acaa0]
  4080b2:	sbb    DWORD PTR [ebx+0x7b],0x3b
  4080b6:	iret   
  4080b7:	in     al,0xf7
  4080b9:	sbb    ch,BYTE PTR [ebp+0x61]
  4080bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4080bd:	int3   
  4080be:	addr16 push eax
  4080c0:	in     eax,0x28
  4080c2:	pusha  
  4080c3:	adc    BYTE PTR [edi-0x3ac2fb8a],0xb7
  4080ca:	jg     0x408146
  4080cc:	cwde   
  4080cd:	push   cs
  4080ce:	dec    esi
  4080cf:	xlat   BYTE PTR ds:[ebx]
  4080d0:	push   ebx
  4080d1:	scas   eax,DWORD PTR es:[edi]
  4080d2:	inc    edi
  4080d3:	sub    edi,ebx
  4080d5:	xchg   ecx,eax
  4080d6:	fisttp WORD PTR [esi+ebp*4-0x56f79eec]
  4080dd:	or     BYTE PTR [edx+0xb3870c2],0x7c
  4080e4:	or     edi,DWORD PTR [ebp+0x1a2a4bd8]
  4080ea:	stc    
  4080eb:	std    
  4080ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4080ed:	inc    ebp
  4080ee:	adc    DWORD PTR es:[ecx-0x3f6d8f82],esp
  4080f5:	xor    al,0x3f
  4080f7:	ss cmp eax,0xfefc875c
  4080fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4080fe:	mov    ah,BYTE PTR [ebx+0x73]
  408101:	mov    bl,0xde
  408103:	icebp  
  408104:	push   esp
  408105:	into   
  408106:	nop
  408107:	mov    ah,BYTE PTR [ebx-0x75daf2b3]
  40810d:	imul   edi,DWORD PTR [ebx+0x2b0ad940],0x63
  408114:	and    eax,0xef730e94
  408119:	aam    0xef
  40811b:	cmp    BYTE PTR [eax],dh
  40811d:	lock jne 0x4080ac
  408120:	aam    0x88
  408122:	arpl   WORD PTR [eax+0x3513d59e],ax
  408128:	js     0x4080bf
  40812a:	cs inc ebx
  40812c:	pop    edi
  40812d:	pop    edi
  40812e:	sar    DWORD PTR [ebx],cl
  408130:	mov    edx,0xe46964d6
  408135:	daa    
  408136:	sbb    al,0x24
  408138:	mov    bl,0xb3
  40813a:	jbe    0x408188
  40813c:	mov    ebp,0xe72362d5
  408141:	sti    
  408142:	or     dl,cl
  408144:	adc    al,0xce
  408146:	cmp    al,0x4d
  408148:	xchg   edx,eax
  408149:	sbb    BYTE PTR [esi-0xb],ah
  40814c:	loopne 0x408112
  40814e:	stos   BYTE PTR es:[edi],al
  40814f:	push   ebp
  408150:	js     0x4080d7
  408152:	jl     0x4080e3
  408154:	mul    BYTE PTR [edx-0x24]
  408157:	push   eax
  408158:	test   al,0x22
  40815a:	and    ecx,ecx
  40815c:	xor    esp,DWORD PTR [esi]
  40815e:	inc    esi
  40815f:	adc    dh,BYTE PTR [ecx+0x44237f98]
  408165:	push   esp
  408166:	out    0x3a,eax
  408168:	pop    ebp
  408169:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40816a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40816b:	adc    eax,DWORD PTR [esi]
  40816d:	mov    bh,0xf6
  40816f:	arpl   WORD PTR [ecx+0x32],bp
  408172:	mov    eax,0x278792e
  408177:	mov    al,ds:0xc8d2fbfb
  40817c:	(bad)  
  40817d:	pop    edi
  40817e:	aad    0xf8
  408180:	shl    BYTE PTR [edx],cl
  408182:	or     eax,0x9329c7d
  408187:	mov    eax,ds:0x573cdd04
  40818c:	adc    dl,dh
  40818e:	or     DWORD PTR [edx-0x61],ebx
  408191:	data16 mov dl,0xff
  408194:	jge    0x408168
  408196:	xchg   esp,eax
  408197:	int3   
  408198:	(bad)  
  408199:	clc    
  40819a:	ret    
  40819b:	lds    esi,FWORD PTR [edx+eax*1+0x1a]
  40819f:	mov    ecx,0x43ae0e33
  4081a4:	ins    DWORD PTR es:[edi],dx
  4081a5:	and    al,0xb2
  4081a7:	enter  0xa033,0xfc
  4081ab:	shl    BYTE PTR [esi-0x55097e31],cl
  4081b1:	mov    ebp,DWORD PTR [edx]
  4081b3:	inc    eax
  4081b4:	adc    ecx,DWORD PTR [esi+0x70aebe94]
  4081ba:	sub    al,0x63
  4081bc:	xchg   ecx,ecx
  4081be:	inc    edi
  4081bf:	cmp    bh,BYTE PTR [ecx]
  4081c1:	lds    eax,FWORD PTR [ecx-0x26]
  4081c4:	add    al,0x42
  4081c6:	adc    ch,BYTE PTR [edi]
  4081c8:	push   es
  4081c9:	out    0xa2,al
  4081cb:	inc    esp
  4081cc:	xchg   ch,dl
  4081ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4081cf:	mov    bh,0x19
  4081d1:	test   BYTE PTR [edx-0x2f],dl
  4081d4:	lea    eax,[ebp+0x4]
  4081d7:	mov    DWORD PTR [ebp-0x20],eax
  4081da:	je     0x40966c
  4081e0:	lea    eax,[ebp-0x18]
  4081e3:	push   eax
  4081e4:	mov    eax,DWORD PTR [ebp-0x2c]
  4081e7:	xor    eax,esi
  4081e9:	add    eax,edi
  4081eb:	push   eax
  4081ec:	mov    eax,DWORD PTR [ebp-0x1c]
  4081ef:	xor    eax,esi
  4081f1:	add    eax,edi
  4081f3:	push   eax
  4081f4:	push   DWORD PTR [ebp-0x8]
  4081f7:	lea    eax,[ebp-0x78]
  4081fa:	push   eax
  4081fb:	push   DWORD PTR [ebp-0xc]
  4081fe:	push   DWORD PTR [ebp-0x14]
  408201:	call   0x406508
  408206:	test   eax,eax
  408208:	je     0x408233
  40820e:	lea    eax,[ebp-0x78]
  408211:	push   eax
  408212:	mov    eax,DWORD PTR [ebp-0x14]
  408215:	xor    eax,esi
  408217:	add    eax,edi
  408219:	push   eax
  40821a:	mov    eax,DWORD PTR [ebp-0x10]
  40821d:	add    eax,0xee
  408222:	push   eax
  408223:	mov    eax,DWORD PTR [ebp-0x10]
  408226:	mov    eax,DWORD PTR [eax+0x198]
  40822c:	push   DWORD PTR [eax]
  40822e:	call   0x4120bb
  408233:	mov    ecx,DWORD PTR [ebp-0x1c]
  408236:	xor    ecx,esi
  408238:	mov    eax,0xffcd8d64
  40823d:	sub    eax,ecx
  40823f:	sub    eax,DWORD PTR [ebp-0x8]
  408242:	mov    ecx,DWORD PTR [ebp-0x30]
  408245:	add    ecx,eax
  408247:	mov    eax,DWORD PTR [ebp-0x8]
  40824a:	mov    DWORD PTR [eax+0x1],ecx
  40824d:	mov    al,BYTE PTR [ebp-0x1]
  408250:	mov    ecx,DWORD PTR [ebp-0x8]
  408253:	xor    al,0x47
  408255:	sub    al,0x37
  408257:	jmp    0x4085a4
  40825c:	ja     0x408201
  40825e:	mov    ecx,0x7175496f
  408263:	mov    ds:0xd6da6ce9,eax
  408268:	mov    ds:0x37e78d7c,al
  40826d:	shl    BYTE PTR [eax+0x70],cl
  408270:	and    BYTE PTR [ebp+0x70],bh
  408273:	jo     0x4082d1
  408275:	jo     0x408271
  408277:	or     BYTE PTR [ebx-0x59144b44],0xc1
  40827e:	js     0x40825f
  408280:	sbb    edi,DWORD PTR [ecx]
  408282:	into   
  408283:	les    ebp,FWORD PTR [edx-0x65]
  408286:	cmp    DWORD PTR [edi+0x2bd95a4],edx
  40828c:	xor    al,0x8c
  40828e:	sbb    eax,0x1df9b2d7
  408293:	sbb    eax,0x55b5c19f
  408298:	push   es
  408299:	mov    esp,0x22b662cb
  40829e:	cwde   
  40829f:	dec    edi
  4082a0:	inc    edi
  4082a1:	fwait
  4082a2:	dec    ebp
  4082a3:	jb     0x408246
  4082a5:	cmp    DWORD PTR [edi],edi
  4082a7:	shl    DWORD PTR [ebx],cl
  4082a9:	out    dx,eax
  4082aa:	mov    edi,0x4a265f88
  4082af:	pop    esi
  4082b0:	pop    esp
  4082b1:	imul   edi,ecx,0x4
  4082b4:	sub    bh,BYTE PTR [eax]
  4082b6:	sbb    eax,DWORD PTR [eiz*8+0x44a10d2c]
  4082bd:	clc    
  4082be:	jp     0x40831d
  4082c0:	jno    0x4082b9
  4082c2:	adc    eax,0xb75edb56
  4082c7:	icebp  
  4082c8:	outs   dx,BYTE PTR ds:[esi]
  4082c9:	ret    0xffd3
  4082cc:	pop    esp
  4082cd:	xchg   esi,eax
  4082ce:	int    0x85
  4082d0:	shl    esi,0xca
  4082d3:	jge    0x4082e1
  4082d5:	in     al,dx
  4082d6:	mov    BYTE PTR gs:[edi+0x22],bh
  4082da:	out    0x4c,al
  4082dc:	test   eax,0xdba8a07d
  4082e1:	mov    ebp,0x7f769582
  4082e6:	and    al,BYTE PTR [ecx+ecx*1]
  4082e9:	add    dl,BYTE PTR [ebp+0x65]
  4082ec:	test   al,0x20
  4082ee:	pop    edx
  4082ef:	mov    ebp,0x679d8e12
  4082f4:	cmp    BYTE PTR [edi-0x6f],al
  4082f7:	aaa    
  4082f8:	pop    eax
  4082f9:	pop    es
  4082fa:	mul    al
  4082fc:	and    BYTE PTR [ebp-0x37],bh
  4082ff:	xor    eax,0x131d96cd
  408304:	cmp    al,0xc2
  408306:	cmp    DWORD PTR [edi+0x47],ebx
  408309:	ficom  WORD PTR [eax]
  40830b:	dec    ebp
  40830c:	in     al,0x7f
  40830e:	(bad)  [ecx-0x31]
  408311:	push   ebp
  408312:	(bad)  
  408314:	xor    edi,ecx
  408316:	fcmovnb st,st(0)
  408318:	daa    
  408319:	sub    DWORD PTR [edi-0x15f16e9d],ebp
  40831f:	std    
  408320:	imul   edx,DWORD PTR [ecx],0xffffffe7
  408323:	or     BYTE PTR [edx-0x77],bl
  408326:	fst    QWORD PTR [ebp+0xa]
  408329:	iret   
  40832a:	push   esp
  40832b:	mov    ch,0x98
  40832d:	push   ebx
  40832e:	push   0x4e
  408330:	adc    DWORD PTR [esi-0x68],edx
  408333:	xor    eax,0x302973b1
  408338:	sahf   
  408339:	test   al,0x57
  40833b:	jge    0x40838e
  40833d:	mov    BYTE PTR [edx],bh
  40833f:	std    
  408340:	int3   
  408341:	pop    esp
  408342:	or     eax,eax
  408344:	mov    esi,DWORD PTR [eax-0x7c7942d5]
  40834a:	jp     0x40839e
  40834c:	xchg   esi,eax
  40834d:	pop    eax
  40834e:	push   ss
  40834f:	adc    edi,ebx
  408351:	fs push eax
  408353:	xchg   ecx,eax
  408354:	(bad)  
  408355:	push   cs
  408356:	out    dx,al
  408357:	loope  0x4082f5
  408359:	mov    edi,0xd6fe978b
  40835e:	push   ss
  40835f:	je     0x4083aa
  408361:	jmp    0x408361
  408363:	and    al,0xd0
  408365:	ficomp WORD PTR [edi+0x6538c0de]
  40836b:	lahf   
  40836c:	nop
  40836d:	inc    edx
  40836e:	cld    
  40836f:	jns    0x4082f2
  408371:	mov    dl,0x73
  408373:	xlat   BYTE PTR ds:[ebx]
  408374:	lahf   
  408375:	(bad)  
  408376:	scas   al,BYTE PTR es:[edi]
  408377:	loopne 0x408339
  408379:	(bad)  
  40837a:	loopne 0x408335
  40837c:	pop    ebx
  40837d:	jg     0x4083dc
  40837f:	std    
  408380:	(bad)  
  408381:	div    DWORD PTR [ecx+0x71]
  408384:	jmp    0xbcd8:0x13721e6e
  40838b:	ja     0x408341
  40838d:	ficomp DWORD PTR [ebx+0x7a]
  408390:	sub    BYTE PTR [eax],dh
  408392:	xchg   ah,dl
  408394:	(bad)  
  408395:	jns    0x40840c
  408397:	popf   
  408398:	sti    
  408399:	dec    ecx
  40839a:	push   0x64
  40839c:	out    0xd5,al
  40839e:	cs out dx,eax
  4083a0:	fcmovnu st,st(2)
  4083a2:	hlt    
  4083a3:	push   ebp
  4083a4:	dec    BYTE PTR [eax+eax*4+0x44]
  4083a8:	mov    al,0x92
  4083aa:	push   0xf0b1144e
  4083af:	mov    ecx,0x83f5d617
  4083b4:	imul   esp,esi,0x94e5ca5a
  4083ba:	hlt    
  4083bb:	inc    edi
  4083bc:	out    dx,al
  4083bd:	jge    0x40836b
  4083bf:	xchg   ecx,eax
  4083c0:	mov    ecx,0x5e8f6836
  4083c5:	sbb    edi,ebp
  4083c7:	or     eax,0xbac0c4a5
  4083cc:	sbb    DWORD PTR [eax+ecx*8+0x5926e3d5],eax
  4083d3:	push   0xffffffd6
  4083d5:	bound  edx,QWORD PTR [ecx+0xa]
  4083d8:	inc    ebp
  4083d9:	fwait
  4083da:	int3   
  4083db:	in     eax,0x49
  4083dd:	ds cdq 
  4083df:	dec    ecx
  4083e0:	adc    al,0xa9
  4083e2:	dec    edx
  4083e3:	in     al,0x81
  4083e5:	rcl    BYTE PTR [ebp-0x20994452],1
  4083eb:	sahf   
  4083ec:	adc    DWORD PTR [esi],0xcc3c1c4c
  4083f2:	and    esi,edx
  4083f4:	mov    bl,0x23
  4083f6:	into   
  4083f7:	enter  0x3b0a,0xd9
  4083fb:	in     al,0x5f
  4083fd:	jbe    0x4083fd
  4083ff:	jbe    0x4083b8
  408401:	out    dx,eax
  408402:	fwait
  408403:	push   es
  408404:	mov    edi,0xaecac15b
  408409:	pop    ds
  40840a:	imul   ebx
  40840c:	mov    ds:0x3040cbc2,eax
  408411:	sbb    esi,ebp
  408413:	or     DWORD PTR [ebx+0x1ea66b0a],eax
  408419:	lds    edi,FWORD PTR [eax+eax*4-0xa]
  40841d:	push   ds
  40841e:	ss aas 
  408420:	xchg   ebp,eax
  408421:	in     al,0xd9
  408423:	and    eax,0x4998fab4
  408428:	push   edi
  408429:	int    0x49
  40842b:	push   es
  40842c:	div    BYTE PTR [ebx-0x14ef366d]
  408432:	push   eax
  408433:	stos   BYTE PTR es:[edi],al
  408434:	mov    ebp,0x6f65dc7e
  408439:	repnz or esp,edx
  40843c:	pop    edi
  40843d:	mov    edx,DWORD PTR [ebp-0x61d3c1a9]
  408443:	out    dx,eax
  408444:	mov    al,BYTE PTR [ebx-0x7ed5fd99]
  40844a:	dec    esp
  40844b:	loopne 0x40843a
  40844d:	adc    BYTE PTR [ebx-0x42],cl
  408450:	sub    ebx,edx
  408452:	or     ah,BYTE PTR [esi-0x45]
  408455:	pusha  
  408456:	sub    eax,0xacef548f
  40845c:	dec    esp
  40845d:	imul   ebx,DWORD PTR fs:[ebx+eiz*8+0xabf48f4],0xfffffff2
  408466:	add    BYTE PTR [ebx+0x785d4301],dh
  40846c:	adc    al,0xef
  40846e:	(bad)  [esi-0x5a85e124]
  408474:	mov    esp,DWORD PTR [ebp-0x3c]
  408477:	inc    ecx
  408478:	xchg   BYTE PTR [esi],ch
  40847a:	mov    ds:0xb509bad1,al
  40847f:	adc    al,0xe6
  408481:	adc    edx,esp
  408483:	loope  0x408446
  408485:	and    cl,BYTE PTR [ebx+ebp*4]
  408488:	xchg   esi,eax
  408489:	or     BYTE PTR [ebx-0x3f],0xd4
  40848d:	inc    ebp
  40848e:	jno    0x4084f7
  408490:	jg     0x408452
  408492:	sar    DWORD PTR [ebp+0xf87cd7a],0xc6
  408499:	adc    esp,eax
  40849b:	call   0x421ffa5
  4084a0:	add    al,0x9e
  4084a2:	xchg   ecx,eax
  4084a3:	xchg   ebp,eax
  4084a4:	(bad)  
  4084a5:	rcl    BYTE PTR [ecx+0x24],1
  4084a8:	fidivr DWORD PTR [ebx]
  4084aa:	out    dx,eax
  4084ab:	loop   0x40847f
  4084ad:	icebp  
  4084ae:	ja     0x408465
  4084b0:	inc    esp
  4084b1:	ss inc eax
  4084b3:	stc    
  4084b4:	mov    al,ds:0xc3f377e6
  4084b9:	cmp    dh,BYTE PTR [ebx+0x59]
  4084bc:	retf   
  4084bd:	cdq    
  4084be:	enter  0x9b6a,0xf
  4084c2:	enter  0xb14a,0x31
  4084c6:	nop
  4084c7:	push   ebp
  4084c8:	and    al,0xb2
  4084ca:	icebp  
  4084cb:	addr16 cld 
  4084cd:	jmp    0x3122df13
  4084d2:	mov    dh,0x80
  4084d4:	lds    edi,FWORD PTR [esp+eiz*4+0x14e167aa]
  4084db:	mov    ecx,0xdeed5775
  4084e0:	jb     0x4084a6
  4084e2:	(bad)  
  4084e3:	div    al
  4084e5:	add    ebp,DWORD PTR [edx]
  4084e7:	xchg   al,al
  4084e9:	and    bl,dl
  4084eb:	in     eax,dx
  4084ec:	clc    
  4084ed:	ins    BYTE PTR es:[edi],dx
  4084ee:	jns    0x4084b4
  4084f0:	mov    dl,0xb3
  4084f2:	aaa    
  4084f3:	push   ds
  4084f4:	mov    dl,ah
  4084f6:	fiadd  DWORD PTR [edi+0x72]
  4084f9:	hlt    
  4084fa:	aaa    
  4084fb:	(bad)  
  4084fc:	retf   
  4084fd:	dec    ebx
  4084fe:	out    dx,eax
  4084ff:	aas    
  408500:	shl    BYTE PTR [esi+ebp*8+0x53],1
  408504:	sahf   
  408505:	jne    0x4084e6
  408507:	sub    BYTE PTR [ebx],ch
  408509:	sub    eax,DWORD PTR [ebp-0x3c]
  40850c:	jns    0x408490
  40850e:	rol    WORD PTR [ebx+ebp*2+0x4bc2027d],1
  408516:	push   ebx
  408517:	mov    cl,0xa9
  408519:	idiv   BYTE PTR [ecx-0x65]
  40851c:	jb     0x4084a5
  40851e:	jle    0x408598
  408520:	pop    ecx
  408521:	aaa    
  408522:	dec    esi
  408523:	call   0x722c6d68
  408528:	cmp    DWORD PTR [ecx-0x23758b55],edi
  40852e:	add    ecx,0x4690d376
  408534:	xor    DWORD PTR [ebx-0x167310c4],edi
  40853a:	fsubp  st(6),st
  40853c:	xor    DWORD PTR [ebx-0x13],0xffffffac
  408540:	xchg   esp,eax
  408541:	dec    ebx
  408542:	(bad)  
  408543:	jmp    0x886e:0x92dead1c
  40854a:	mov    al,ds:0xca505e65
  40854f:	je     0x40854c
  408551:	nop
  408552:	jns    0x4084de
  408554:	push   eax
  408555:	test   eax,0x925a66a0
  40855a:	sbb    al,0x9a
  40855c:	mov    cl,0x8d
  40855e:	cmp    eax,0xeb1e593b
  408563:	xchg   DWORD PTR [edx+0x1ca0e7f5],edx
  408569:	call   0x1b6a:0xf7dfe8fa
  408570:	outs   dx,DWORD PTR ds:[esi]
  408571:	sub    al,0xc6
  408573:	mov    ss,eax
  408575:	(bad)  
  408576:	js     0x4084fd
  408578:	cmc    
  408579:	add    DWORD PTR [edx+0x496614ad],edi
  40857f:	out    dx,eax
  408580:	(bad)  
  408581:	lods   al,BYTE PTR ds:[esi]
  408582:	fild   WORD PTR [edi+0x1e]
  408585:	rcr    DWORD PTR [eax+0x5a09a222],1
  40858b:	es push ebp
  40858d:	sti    
  40858e:	out    0x64,al
  408590:	add    DWORD PTR [esi],edx
  408592:	sbb    ebp,0xffffffe3
  408595:	jb     0x408604
  408597:	sbb    eax,0xc27d0371
  40859c:	sar    DWORD PTR ds:[eax+0x28d2e5b2],0x44
  4085a4:	mov    BYTE PTR [ecx],al
  4085a6:	jmp    0x4088f3
  4085ab:	inc    edi
  4085ac:	cli    
  4085ad:	fisttp DWORD PTR [edx+0x517569e1]
  4085b3:	jp     0x40858b
  4085b5:	xchg   ecx,eax
  4085b6:	mov    edx,0xf71ddfa5
  4085bb:	out    0xdf,eax
  4085bd:	jo     0x40862f
  4085bf:	and    BYTE PTR [ebp+0x70],bh
  4085c2:	jo     0x408592
  4085c4:	call   0x821c:0x5af15a40
  4085cb:	divps  xmm2,XMMWORD PTR [ecx-0xe]
  4085cf:	adc    ecx,0x541d5d1b
  4085d5:	jnp    0x4085f9
  4085d7:	inc    ebp
  4085d8:	outs   dx,DWORD PTR ds:[esi]
  4085d9:	dec    eax
  4085da:	xor    al,bl
  4085dc:	in     eax,dx
  4085dd:	sub    ebx,DWORD PTR [edx]
  4085df:	in     eax,dx
  4085e0:	mov    cl,0x64
  4085e2:	aas    
  4085e3:	ret    
  4085e4:	jge    0x4085b4
  4085e6:	out    0x40,eax
  4085e8:	lock ret 0x8e5e
  4085ec:	dec    ebx
  4085ed:	sbb    eax,0x59a7c497
  4085f2:	ror    BYTE PTR [ebp-0x3d],0xa9
  4085f6:	out    0x99,al
  4085f8:	push   0xffffffbd
  4085fa:	je     0x40865b
  4085fc:	mov    cl,0x8c
  4085fe:	dec    eax
  4085ff:	dec    eax
  408600:	mov    ebp,0xe4c333b9
  408605:	fs loop 0x4085ea
  408608:	leave  
  408609:	cwde   
  40860a:	jbe    0x408658
  40860c:	sbb    esp,esi
  40860e:	lods   eax,DWORD PTR ds:[esi]
  40860f:	loope  0x40862f
  408611:	test   eax,0x1e17d1c5
  408616:	add    ah,ch
  408618:	(bad)  
  408619:	jle    0x40866d
  40861b:	shl    esp,cl
  40861d:	cdq    
  40861e:	push   0x68693c92
  408623:	sub    BYTE PTR [edx],ah
  408625:	out    dx,eax
  408626:	outs   dx,DWORD PTR ds:[esi]
  408627:	jno    0x408654
  408629:	jbe    0x40861c
  40862b:	inc    eax
  40862c:	ret    
  40862d:	nop
  40862e:	mov    edx,0xc5e244a7
  408633:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408634:	(bad)  
  408636:	dec    eax
  408637:	mov    ebp,0xb4efdd57
  40863c:	dec    eax
  40863d:	push   edx
  40863e:	mov    ch,0xee
  408640:	lock jecxz 0x4086a5
  408643:	add    DWORD PTR [eax],ecx
  408645:	jecxz  0x408644
  408647:	push   esi
  408648:	test   eax,0x16f688a8
  40864d:	add    ebx,eax
  40864f:	sahf   
  408650:	lods   al,BYTE PTR ds:[esi]
  408651:	pop    eax
  408652:	xor    bl,bl
  408654:	inc    edx
  408655:	and    BYTE PTR [ecx],0xcb
  408658:	stc    
  408659:	push   ds
  40865a:	sbb    BYTE PTR [ecx],cl
  40865c:	jo     0x408661
  40865e:	adc    ch,bh
  408660:	xor    ebp,edi
  408662:	jns    0x4085e4
  408664:	pop    ebx
  408665:	stc    
  408666:	aam    0x71
  408668:	mov    ds:0xc0070276,al
  40866d:	mov    cl,0x4e
  40866f:	mov    ds,WORD PTR [ebp-0x6c61e46e]
  408675:	shr    BYTE PTR [ebp-0x18ce5887],1
  40867b:	ret    0x83c0
  40867e:	fwait
  40867f:	pushf  
  408680:	out    0x14,eax
  408682:	mov    al,ds:0xd90c442f
  408687:	mov    DWORD PTR [edx+0x5f334a69],edx
  40868d:	mov    BYTE PTR [eax+0x28],al
  408690:	jge    0x4086f0
  408692:	dec    edi
  408693:	call   0x9f4a4ae2
  408698:	jnp    0x408685
  40869a:	mov    al,ds:0x879203f0
  40869f:	sub    al,0x71
  4086a1:	xor    al,0xbf
  4086a3:	ret    0xe5be
  4086a6:	xchg   edi,eax
  4086a7:	jnp    0x4086e1
  4086a9:	call   0xfa91fc8c
  4086ae:	repnz out dx,eax
  4086b0:	clc    
  4086b1:	cmc    
  4086b2:	jno    0x40864b
  4086b4:	ss (bad) 
  4086b6:	cmp    ch,cl
  4086b8:	or     edi,0xe09a061e
  4086be:	jp     0x40864f
  4086c0:	mov    bl,0x5a
  4086c2:	mov    cl,0xa
  4086c4:	in     al,0x11
  4086c6:	neg    DWORD PTR [ebx+0x5c255660]
  4086cc:	hlt    
  4086cd:	add    DWORD PTR [ecx],esp
  4086cf:	add    eax,0x8235b95a
  4086d4:	dec    BYTE PTR [edx-0x7f]
  4086d7:	mov    ah,BYTE PTR [eax]
  4086d9:	ins    BYTE PTR es:[edi],dx
  4086da:	cmp    ah,BYTE PTR [eax+0x4a11216b]
  4086e0:	jmp    0xcf218eb3
  4086e5:	push   eax
  4086e6:	shl    esp,1
  4086e8:	xchg   ecx,eax
  4086e9:	int3   
  4086ea:	sbb    bl,0xda
  4086ed:	or     ecx,esi
  4086ef:	xchg   edx,eax
  4086f0:	mov    bh,0xac
  4086f2:	mov    eax,0xea18eccf
  4086f7:	aam    0xe9
  4086f9:	xlat   BYTE PTR ds:[ebx]
  4086fa:	inc    esi
  4086fb:	fdivr  DWORD PTR [ebx+0x1082e117]
  408701:	fisttp DWORD PTR [esi-0x43]
  408704:	mov    DWORD PTR [ecx-0x2857d870],esp
  40870a:	dec    esp
  40870b:	sub    DWORD PTR [ecx],edx
  40870d:	je     0x4086ed
  40870f:	and    bl,BYTE PTR fs:[ebp+0x77]
  408713:	mov    al,ds:0xdcead5d1
  408718:	push   cs
  408719:	mov    bl,0xc3
  40871b:	pop    edx
  40871c:	push   edi
  40871d:	adc    al,0x57
  40871f:	xchg   DWORD PTR ds:0x1bcfa40e,esp
  408725:	ret    
  408726:	sbb    BYTE PTR [edi-0x31bc8cc3],al
  40872c:	xchg   dl,dh
  40872e:	xchg   ebx,eax
  40872f:	pop    ds
  408730:	pop    esp
  408731:	jne    0x408753
  408733:	pop    esi
  408734:	(bad)  
  408735:	dec    eax
  408736:	arpl   WORD PTR [eax],bx
  408738:	ror    DWORD PTR [eax+0x68c2673a],cl
  40873e:	mov    eax,0x2589d361
  408743:	aad    0xb8
  408745:	je     0x408716
  408747:	dec    edi
  408748:	pop    ebp
  408749:	mov    ebx,0xba84805d
  40874e:	in     eax,dx
  40874f:	sti    
  408750:	jg     0x4087b1
  408752:	stc    
  408753:	cli    
  408754:	outs   dx,BYTE PTR ds:[esi]
  408755:	xchg   ecx,eax
  408756:	(bad)  
  408757:	shl    DWORD PTR [esi+edx*8-0x1251783c],cl
  40875e:	aaa    
  40875f:	sbb    eax,0xab458670
  408764:	repnz and ecx,ecx
  408767:	jmp    0x99b8:0x77959ccb
  40876e:	mov    esi,0x20d7efc
  408773:	stc    
  408774:	stos   BYTE PTR es:[edi],al
  408775:	adc    al,0xf6
  408777:	pop    esi
  408778:	rcr    bh,cl
  40877a:	or     BYTE PTR [esi],cl
  40877c:	cmp    edx,eax
  40877e:	popa   
  40877f:	mov    edx,0x21803d8e
  408784:	ja     0x4087bf
  408786:	mov    bh,0xcb
  408788:	sbb    DWORD PTR [edx+0x38bde1c3],esi
  40878e:	popf   
  40878f:	adc    dl,BYTE PTR [eax-0x6d]
  408792:	mov    ds:0x772e0604,al
  408797:	call   0x397722e8
  40879c:	xchg   esp,eax
  40879d:	(bad)  
  40879e:	mov    al,ds:0xbaac435c
  4087a3:	adc    eax,DWORD PTR [ecx+ebp*1+0x755b776c]
  4087aa:	add    al,0x9b
  4087ac:	rcl    DWORD PTR [esi+0x1c34ddb1],1
  4087b2:	daa    
  4087b3:	pop    es
  4087b4:	mov    al,ds:0x2b8d9162
  4087b9:	call   0xd576:0x938c597f
  4087c0:	test   DWORD PTR [esi+ecx*2+0x8],edx
  4087c4:	jne    0x40879e
  4087c6:	mov    cl,BYTE PTR [edx-0x1f1e48b9]
  4087cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4087cd:	add    BYTE PTR [ecx+0x584f288b],dl
  4087d3:	mov    ds:0xcb6fb7c5,eax
  4087d8:	lods   al,BYTE PTR ds:[esi]
  4087d9:	inc    ah
  4087db:	lock cmp BYTE PTR [eax],bl
  4087de:	mov    dl,0x14
  4087e0:	mov    ebx,0xc94b2fb5
  4087e5:	adc    esp,DWORD PTR [edx-0x73]
  4087e8:	inc    esp
  4087e9:	sub    al,0x9
  4087eb:	repz js 0x408838
  4087ee:	in     al,0xfb
  4087f0:	adc    edx,esi
  4087f2:	mov    ds:0x4d4521c0,eax
  4087f7:	aas    
  4087f8:	mov    ch,dh
  4087fa:	sub    eax,0x81292ef4
  4087ff:	sbb    eax,DWORD PTR [edi+0x90786b7]
  408805:	mov    BYTE PTR [ebp+0x71187a44],bh
  40880b:	fld    DWORD PTR [esi-0x56]
  40880e:	xor    dl,BYTE PTR [ebp-0x6589973f]
  408814:	adc    dl,BYTE PTR [ecx]
  408816:	outs   dx,DWORD PTR ds:[esi]
  408817:	pop    ss
  408818:	loope  0x408839
  40881a:	in     al,0x39
  40881c:	out    dx,al
  40881d:	jae    0x4087ee
  40881f:	push   cs
  408820:	call   0xa8b577eb
  408825:	jb     0x408814
  408827:	dec    edi
  408828:	ret    0xf8ff
  40882b:	sub    BYTE PTR [edx+0x394aeb93],cl
  408831:	or     ebx,DWORD PTR ss:[esi+0x63b2818]
  408838:	rcr    DWORD PTR [edi-0x26da275b],1
  40883e:	addr16 xchg esp,eax
  408840:	mov    bl,0x4c
  408842:	lahf   
  408843:	xor    al,0x1a
  408845:	outs   dx,BYTE PTR ds:[esi]
  408846:	add    edi,eax
  408848:	sbb    BYTE PTR [ebx+edx*2-0x39355f09],0x27
  408850:	push   ds
  408851:	aad    0x9a
  408853:	cmc    
  408854:	cdq    
  408855:	mov    esp,0x1f52c2cf
  40885a:	aaa    
  40885b:	mov    ah,0x83
  40885d:	mov    ecx,0x6b836023
  408862:	or     al,0xc0
  408864:	pop    ds
  408865:	test   BYTE PTR [eax],ch
  408867:	or     BYTE PTR [esi+0x30],0xb6
  40886b:	mov    cl,0x4b
  40886d:	push   eax
  40886e:	popf   
  40886f:	lahf   
  408870:	push   cs
  408871:	and    edi,DWORD PTR [edx+0x2b1f201e]
  408877:	in     al,0xf3
  408879:	sub    BYTE PTR [edx+0x34],0x72
  40887d:	add    DWORD PTR [ebx+0x50],esp
  408880:	mov    WORD PTR [ecx-0x1f],ds
  408883:	jmp    0xb9f7:0xa4972cb6
  40888a:	push   ebp
  40888b:	daa    
  40888c:	not    ebx
  40888e:	scas   al,BYTE PTR es:[edi]
  40888f:	gs dec ebx
  408891:	iret   
  408892:	stos   BYTE PTR es:[edi],al
  408893:	loope  0x4088e1
  408895:	add    BYTE PTR [esi-0x7a],bh
  408898:	xor    edi,DWORD PTR [esi-0x1c27c1ea]
  40889e:	sub    al,cl
  4088a0:	lea    esp,[edx+edi*4]
  4088a3:	lea    ebp,[ebx]
  4088a5:	or     BYTE PTR [eax-0x52],al
  4088a8:	pop    ss
  4088a9:	cmp    esi,DWORD PTR ds:0xcfbb3ca1
  4088af:	cld    
  4088b0:	das    
  4088b1:	fmul   QWORD PTR ds:0xcfa36327
  4088b7:	xor    eax,0x4939b6b8
  4088bc:	or     edx,edi
  4088be:	dec    eax
  4088bf:	pop    es
  4088c0:	xchg   ebp,eax
  4088c1:	in     eax,0x37
  4088c3:	(bad)  
  4088c4:	daa    
  4088c5:	and    eax,0x7be83249
  4088ca:	out    0x4d,al
  4088cc:	arpl   WORD PTR ds:0x50649d49,di
  4088d2:	rcr    DWORD PTR [ebp+edi*1-0x4c4c4f91],1
  4088d9:	cmp    ch,cl
  4088db:	enter  0x8bd,0x3d
  4088df:	and    esp,DWORD PTR [bp+di]
  4088e2:	push   ecx
  4088e3:	loop   0x408924
  4088e5:	sub    ecx,DWORD PTR [edi-0x472c3511]
  4088eb:	xor    eax,0xee66ab5f
  4088f0:	scas   eax,DWORD PTR es:[edi]
  4088f1:	cmp    al,0x55
  4088f3:	lea    eax,[ebp-0x8]
  4088f6:	inc    BYTE PTR [eax]
  4088f8:	inc    eax
  4088f9:	push   eax
  4088fa:	jmp    0x408c47
  4088ff:	mov    al,0x3c
  408901:	fwait
  408902:	xchg   ebx,eax
  408903:	fwait
  408904:	jae    0x40896e
  408906:	rol    DWORD PTR [ebp+0x5f435cff],cl
  40890c:	jge    0x4088e8
  40890e:	lds    edx,FWORD PTR [edi+0x207070dc]
  408914:	jge    0x408986
  408916:	jo     0x40891e
  408918:	ins    BYTE PTR es:[edi],dx
  408919:	sbb    DWORD PTR [edi],0x7c
  40891c:	sbb    al,0x5a
  40891e:	mul    DWORD PTR [eax+0x50]
  408921:	inc    edi
  408922:	and    DWORD PTR [ebx+0x5d9c6af3],0xbecad74
  40892c:	jbe    0x408980
  40892e:	shl    esp,1
  408930:	sti    
  408931:	push   esi
  408932:	adc    BYTE PTR [edx+0x2b],al
  408935:	and    DWORD PTR [edi-0x44],edx
  408938:	xor    esi,DWORD PTR [eax-0x2e]
  40893b:	xchg   BYTE PTR [eax],dl
  40893d:	loop   0x4088c5
  40893f:	in     eax,0x6b
  408941:	inc    esi
  408942:	mov    ebx,0x2261b8b
  408947:	(bad)  
  408948:	fcomp  DWORD PTR [edx+0x69]
  40894b:	mov    ah,0xaa
  40894d:	cmp    al,0xbd
  40894f:	in     al,dx
  408950:	(bad)  
  408951:	cmp    BYTE PTR [eax-0x1f0a678b],al
  408957:	ror    BYTE PTR [edx+ebp*2+0x2247ea05],0x31
  40895f:	jb     0x408969
  408961:	sub    al,0x88
  408963:	sub    DWORD PTR [edi-0xfdcb433],ecx
  408969:	mov    ss,esi
  40896b:	add    al,ah
  40896d:	(bad)  
  40896e:	daa    
  40896f:	adc    ebp,edx
  408971:	xor    BYTE PTR [eax+0x19],bh
  408974:	xor    al,0x93
  408976:	fcmovb st,st(5)
  408978:	and    BYTE PTR [edx-0x599707cf],dl
  40897e:	aas    
  40897f:	in     eax,dx
  408980:	inc    eax
  408981:	or     ecx,DWORD PTR ds:0x22860681
  408987:	cs cmp dh,dl
  40898a:	jmp    0x408954
  40898c:	mov    ebx,0x96f6c5ee
  408991:	mov    ds:0xe4773dc9,al
  408996:	cs mov edi,0xbe8f359e
  40899c:	std    
  40899d:	repnz push 0x5cc5a804
  4089a3:	dec    edi
  4089a4:	mov    WORD PTR [ebx-0x59f80c3c],?
  4089aa:	test   BYTE PTR [esi+esi*4],0xe3
  4089ae:	xor    BYTE PTR [ebx+eax*2+0x52],0x10
  4089b3:	pop    ds
  4089b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4089b5:	inc    ebx
  4089b6:	push   eax
  4089b7:	(bad)  
  4089b8:	xor    eax,0x915abb8e
  4089bd:	lea    esp,[eax-0x15]
  4089c0:	sub    bl,ch
  4089c2:	mov    cs,WORD PTR [edx]
  4089c4:	test   edi,ecx
  4089c6:	(bad)  
  4089c7:	rcr    DWORD PTR [eax],cl
  4089c9:	and    BYTE PTR [ebx+0x4ffe312d],bh
  4089cf:	lods   al,BYTE PTR ds:[esi]
  4089d0:	xchg   ecx,eax
  4089d1:	xchg   esp,eax
  4089d2:	pop    ecx
  4089d3:	out    0x9e,eax
  4089d5:	call   ecx
  4089d7:	jle    0x408a47
  4089d9:	gs xchg ecx,eax
  4089db:	push   esi
  4089dc:	das    
  4089dd:	mov    esi,0x405cad47
  4089e2:	sbb    ecx,eax
  4089e4:	stc    
  4089e5:	scas   eax,DWORD PTR es:[edi]
  4089e6:	mov    esi,0x355d7acb
  4089eb:	mov    ah,0x7d
  4089ed:	or     al,0x63
  4089ef:	ins    DWORD PTR es:[edi],dx
  4089f0:	in     al,0xbe
  4089f2:	call   DWORD PTR [edi+0x4]
  4089f5:	or     eax,0xf10b9a33
  4089fa:	icebp  
  4089fb:	icebp  
  4089fc:	push   ss
  4089fd:	sub    al,0x72
  4089ff:	(bad)  
  408a00:	mov    ah,0xf3
  408a02:	mov    ds:0x8f5022d7,al
  408a07:	pop    edx
  408a08:	imul   edi,DWORD PTR [ebx-0x34b70c56],0x77849f2
  408a12:	cwde   
  408a13:	iret   
  408a14:	cmc    
  408a15:	dec    ebp
  408a16:	mov    al,ds:0xeb8246b1
  408a1b:	or     al,0x1d
  408a1d:	out    dx,al
  408a1e:	lahf   
  408a1f:	test   al,0x7e
  408a21:	shr    BYTE PTR [edx],1
  408a23:	jl     0x4089ca
  408a25:	mov    dl,0x39
  408a27:	and    al,0xc8
  408a29:	jno    0x408a2f
  408a2b:	mov    ah,0xe0
  408a2d:	sub    DWORD PTR [eax+0x4ec1178e],ecx
  408a33:	test   eax,ecx
  408a35:	fcmove st,st(2)
  408a37:	jno    0x4089e1
  408a39:	dec    ebp
  408a3a:	inc    ebp
  408a3b:	xor    cl,ah
  408a3d:	(bad)  
  408a3e:	xlat   BYTE PTR ds:[ebx]
  408a3f:	iret   
  408a40:	mov    WORD PTR [ebx],?
  408a42:	jp     0x408a40
  408a44:	(bad)  
  408a45:	imul   eax,DWORD PTR [esi+eiz*1+0x69],0xe
  408a4a:	and    DWORD PTR [ebp+esi*8+0x2cd7de6c],eax
  408a51:	pushf  
  408a52:	std    
  408a53:	jae    0x408aba
  408a55:	pop    edx
  408a56:	mov    ds:0x68ccdc7d,eax
  408a5b:	add    BYTE PTR [esi-0x5e69209],cl
  408a61:	stos   BYTE PTR es:[edi],al
  408a62:	and    eax,0x99a2e6f0
  408a67:	nop
  408a68:	xor    BYTE PTR [eax],bh
  408a6a:	inc    ebx
  408a6b:	imul   esp,edx,0xa43cf6ac
  408a71:	sub    DWORD PTR [edi+0x29b5ec10],esi
  408a77:	xor    al,0x38
  408a79:	call   0x11aafa99
  408a7e:	hlt    
  408a7f:	mov    esi,0x3d1d514e
  408a84:	ret    0x6c14
  408a87:	fld    DWORD PTR [ecx+ebx*4-0x23]
  408a8b:	mov    ch,0x24
  408a8d:	mov    ds:0x963933b5,al
  408a92:	sub    eax,0xa5d4ffb2
  408a97:	push   edi
  408a98:	adc    al,0xef
  408a9a:	fbld   TBYTE PTR [esp+eax*1]
  408a9d:	in     al,dx
  408a9e:	jge    0x408ac7
  408aa0:	mov    bh,cl
  408aa2:	sub    edi,DWORD PTR [ebx+0x6e02fa94]
  408aa8:	cmp    DWORD PTR [eax+0x789a3446],ebx
  408aae:	test   eax,0x79ce0eea
  408ab3:	inc    esp
  408ab4:	mov    eax,0x853a296c
  408ab9:	adc    eax,0x3fb9d1f7
  408abe:	xor    al,0x28
  408ac0:	stos   DWORD PTR es:[edi],eax
  408ac1:	in     eax,0xe1
  408ac3:	mov    esi,0x88f6eb3f
  408ac8:	(bad)  
  408ac9:	jnp    0x408aa8
  408acb:	xlat   BYTE PTR ds:[ebx]
  408acc:	clc    
  408acd:	sar    BYTE PTR [edx+0x27],cl
  408ad0:	sbb    al,0x66
  408ad2:	push   esi
  408ad3:	fisttp QWORD PTR [ebx-0x72]
  408ad6:	les    ebx,FWORD PTR [edx+0x4cc83dcc]
  408adc:	js     0x408a95
  408ade:	cmp    al,0xc3
  408ae0:	ins    DWORD PTR es:[edi],dx
  408ae1:	cmp    al,0xdc
  408ae3:	add    bl,BYTE PTR [edx+eiz*2]
  408ae6:	les    ebp,FWORD PTR ds:0xa9c76260
  408aec:	sub    ebp,esp
  408aee:	xlat   BYTE PTR ds:[ebx]
  408aef:	add    edi,edx
  408af1:	push   0x2b8d4aea
  408af6:	out    0x4d,al
  408af8:	xchg   esi,eax
  408af9:	add    esp,DWORD PTR [esi-0x4145d8ec]
  408aff:	add    DWORD PTR [eax+0x73f25ded],esi
  408b05:	jmp    0x5065e7f1
  408b0a:	sbb    esp,DWORD PTR [edi-0x29]
  408b0d:	repnz push ebx
  408b0f:	in     eax,0x28
  408b11:	sbb    ebx,DWORD PTR [ebp-0x25]
  408b14:	stos   BYTE PTR es:[edi],al
  408b15:	inc    eax
  408b16:	sbb    ah,BYTE PTR [ecx]
  408b18:	xchg   ebx,eax
  408b19:	push   ss
  408b1a:	add    edi,DWORD PTR [esi]
  408b1c:	scas   eax,DWORD PTR es:[edi]
  408b1d:	or     DWORD PTR [edi],ebp
  408b1f:	jbe    0x408afa
  408b21:	mov    bl,0x9a
  408b23:	add    eax,0x9d83d98a
  408b28:	cli    
  408b29:	shl    DWORD PTR [eax+0x53bd9932],cl
  408b2f:	inc    ebx
  408b30:	jnp    0x408b9a
  408b32:	jp     0x408b2f
  408b34:	cmp    al,0xec
  408b36:	pop    ecx
  408b37:	cld    
  408b38:	adc    DWORD PTR [edx],ecx
  408b3a:	push   edi
  408b3b:	xchg   edx,ecx
  408b3d:	and    ch,bl
  408b3f:	or     DWORD PTR [ebx],ecx
  408b41:	mov    bh,0x8b
  408b43:	fwait
  408b44:	push   ebp
  408b45:	sahf   
  408b46:	test   DWORD PTR [ebx-0x6142451d],0x30c9d4b7
  408b50:	inc    edi
  408b51:	or     al,0x3a
  408b53:	fsub   QWORD PTR [eax]
  408b55:	test   DWORD PTR [ebp+ebx*4+0x4],ebp
  408b59:	adc    al,0x21
  408b5b:	inc    eax
  408b5c:	push   ebp
  408b5d:	mov    DWORD PTR [eax+0x63],ebx
  408b60:	mov    ds:0x68d78546,eax
  408b65:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408b66:	mov    dh,BYTE PTR [edi-0x48c9373f]
  408b6c:	mov    edi,0x590854b2
  408b71:	std    
  408b72:	cs cmp bl,cl
  408b75:	add    bl,BYTE PTR [esi-0x50]
  408b78:	aaa    
  408b79:	out    0xf1,al
  408b7b:	push   esp
  408b7c:	outs   dx,DWORD PTR ds:[esi]
  408b7d:	mov    ebp,0xb91af2c8
  408b82:	ins    BYTE PTR es:[edi],dx
  408b83:	vmload 
  408b86:	icebp  
  408b87:	adc    BYTE PTR [edi-0x56],cl
  408b8a:	jo     0x408bbf
  408b8c:	push   cs
  408b8d:	sub    edx,DWORD PTR [ebp+0x55]
  408b90:	xchg   ebp,eax
  408b91:	sbb    eax,0xa1e56042
  408b96:	in     al,0x28
  408b98:	in     al,dx
  408b99:	sub    cl,BYTE PTR [eax]
  408b9b:	std    
  408b9c:	retf   0x4158
  408b9f:	adc    al,0xb4
  408ba1:	mov    edx,0xd366319e
  408ba6:	bnd jnp 0x408ba5
  408ba9:	add    dh,bl
  408bab:	aad    0x73
  408bad:	add    cl,BYTE PTR ds:0xadfd832f
  408bb3:	lods   eax,DWORD PTR ds:[esi]
  408bb4:	adc    ch,BYTE PTR [ebp+0x7263a406]
  408bba:	add    ecx,DWORD PTR ds:0x61a70c08
  408bc0:	imul   edx,ecx,0xfffffff6
  408bc3:	sbb    DWORD PTR [ebx-0x39],edx
  408bc6:	lods   eax,DWORD PTR ds:[esi]
  408bc7:	mov    edi,0x79cc5180
  408bcc:	in     eax,0x6d
  408bce:	fbstp  TBYTE PTR ds:0xbf6bdd5a
  408bd4:	stos   BYTE PTR es:[edi],al
  408bd5:	xchg   edx,eax
  408bd6:	repz rcr ebx,cl
  408bd9:	mov    eax,ds:0xdb74e693
  408bde:	dec    dh
  408be0:	and    eax,0xd0c8d4f6
  408be5:	stc    
  408be6:	sbb    eax,0xbaa92da7
  408beb:	cmp    al,0x6c
  408bed:	std    
  408bee:	adc    al,0x76
  408bf0:	dec    edx
  408bf1:	add    ch,BYTE PTR [ebx]
  408bf3:	or     bh,BYTE PTR [esi+eiz*8+0x76490041]
  408bfa:	cdq    
  408bfb:	fidiv  WORD PTR [esi]
  408bfd:	xchg   ebx,eax
  408bfe:	(bad)  
  408bff:	int    0x1d
  408c01:	xchg   ebx,eax
  408c02:	(bad)  
  408c03:	or     al,BYTE PTR [ebx+0x13080a50]
  408c09:	mov    ebx,0x604cff6e
  408c0e:	popf   
  408c0f:	fmulp  st(6),st
  408c11:	jns    0x408bbd
  408c13:	popa   
  408c14:	jp     0x408be3
  408c16:	enter  0x169e,0xb5
  408c1a:	push   ds
  408c1b:	xor    bh,cl
  408c1d:	inc    eax
  408c1e:	mov    cs,WORD PTR [edx]
  408c20:	call   0x27f854c6
  408c25:	out    0x99,eax
  408c27:	sbb    dl,BYTE PTR [ebx+0x26]
  408c2a:	iret   
  408c2b:	shl    DWORD PTR [edx-0x38c46b6e],0x86
  408c32:	cs add eax,esi
  408c35:	adc    edi,edi
  408c37:	mov    ch,0x24
  408c39:	(bad)  
  408c3a:	cmp    bh,BYTE PTR [ebp+0x48]
  408c3d:	cmp    al,0x99
  408c3f:	adc    ch,BYTE PTR [edi-0x70]
  408c42:	push   ecx
  408c43:	jp     0x408c3b
  408c45:	jp     0x408bf6
  408c47:	pop    ecx
  408c48:	dec    ecx
  408c49:	xchg   ecx,edx
  408c4b:	dec    BYTE PTR [edx]
  408c4d:	push   DWORD PTR [ebp-0x10]
  408c50:	mov    eax,ds:0x41b264
  408c55:	mov    eax,DWORD PTR [eax]
  408c57:	push   DWORD PTR [eax]
  408c59:	lea    eax,ds:0x41b280
  408c5f:	jmp    0x408fac
  408c64:	mov    ebx,0x93838448
  408c69:	push   ebx
  408c6a:	mov    ebx,0x78da0248
  408c6f:	bound  ecx,QWORD PTR [ecx+0x47a6f78c]
  408c75:	fnstenv [eax+0x70]
  408c78:	and    BYTE PTR [ebp+0x70],bh
  408c7b:	jo     0x408c36
  408c7d:	das    
  408c7e:	lea    ebx,[edx+ebx*8+0x76]
  408c82:	(bad)  
  408c83:	jg     0x408c18
  408c85:	loopne 0x408c42
  408c87:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408c88:	(bad)  
  408c8a:	(bad)  
  408c8b:	pop    ss
  408c8c:	into   
  408c8d:	xchg   ebx,eax
  408c8e:	push   ds
  408c8f:	or     bh,ah
  408c91:	(bad)  
  408c92:	aad    0x46
  408c94:	in     eax,dx
  408c95:	adc    al,0x67
  408c97:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408c98:	sti    
  408c99:	ins    DWORD PTR es:[edi],dx
  408c9a:	sub    ecx,DWORD PTR [edx+ebp*4]
  408c9d:	and    BYTE PTR [edi],0x22
  408ca0:	cld    
  408ca1:	inc    edx
  408ca2:	push   ebp
  408ca3:	push   eax
  408ca4:	hlt    
  408ca5:	sbb    al,0x51
  408ca7:	mov    ds:0xaaae2625,eax
  408cac:	neg    DWORD PTR es:[ecx]
  408caf:	adc    ch,bl
  408cb1:	xchg   ebx,eax
  408cb2:	jnp    0x408c93
  408cb4:	mov    esi,0xa094479c
  408cb9:	into   
  408cba:	xor    DWORD PTR [edx],eax
  408cbc:	int3   
  408cbd:	or     eax,0x69b9f451
  408cc2:	adc    al,0x6a
  408cc4:	in     al,0xcc
  408cc6:	stos   DWORD PTR es:[edi],eax
  408cc7:	fcomp  QWORD PTR [esi-0x7b]
  408cca:	loope  0x408c78
  408ccc:	test   DWORD PTR [edx-0x2cc1c3c3],0x1dd2466
  408cd6:	lock fstp TBYTE PTR [esi-0x7bb70747]
  408cdd:	je     0x408c8b
  408cdf:	push   ss
  408ce0:	sub    al,0x2c
  408ce2:	addr16 clc 
  408ce4:	(bad)  [ecx-0x1e]
  408ce7:	inc    esp
  408ce8:	in     al,0xf5
  408cea:	xchg   esi,eax
  408ceb:	dec    ebx
  408cec:	cmp    BYTE PTR [edx+0x59e4f819],dh
  408cf2:	or     dh,BYTE PTR [ebp+0x57d51410]
  408cf8:	jecxz  0x408d09
  408cfa:	dec    ecx
  408cfb:	and    DWORD PTR [edi+0x26],esi
  408cfe:	mov    cl,0xcc
  408d00:	xchg   edi,eax
  408d01:	mov    cl,0x52
  408d03:	test   BYTE PTR [esi+0x78],bl
  408d06:	jbe    0x408ca1
  408d08:	dec    ecx
  408d09:	dec    ebp
  408d0a:	inc    esp
  408d0b:	inc    edi
  408d0c:	cli    
  408d0d:	fist   DWORD PTR [edx+0x2e]
  408d10:	into   
  408d11:	sub    BYTE PTR [ecx+0x39809616],ah
  408d17:	ror    DWORD PTR [ebp-0x24],1
  408d1a:	pop    ebx
  408d1b:	(bad)  
  408d1c:	cli    
  408d1d:	bound  eax,QWORD PTR [edx+0x5b]
  408d20:	sar    BYTE PTR [edi+esi*4+0x27],1
  408d24:	aam    0x47
  408d26:	pop    edi
  408d27:	add    ebp,esi
  408d29:	ret    
  408d2a:	jnp    0x408d84
  408d2c:	push   edx
  408d2d:	(bad)
  408d31:	lods   eax,DWORD PTR ds:[esi]
  408d32:	test   al,0x1b
  408d34:	adc    ch,BYTE PTR [eax+0x2998d93d]
  408d3a:	ret    0x8c4d
  408d3d:	and    BYTE PTR [ecx],dh
  408d3f:	arpl   WORD PTR [edi+ebp*2],cx
  408d42:	push   ebp
  408d43:	cmp    ebx,ebp
  408d45:	push   ecx
  408d46:	cmp    al,ah
  408d48:	xor    dl,ch
  408d4a:	mov    ah,0x55
  408d4c:	mov    edi,0x5101cd12
  408d51:	loopne 0x408d2c
  408d53:	(bad)  
  408d54:	mov    al,ds:0xd607051f
  408d59:	xor    ah,BYTE PTR [edx+0x19]
  408d5c:	mov    esp,0x832a268d
  408d61:	and    al,0x40
  408d63:	dec    ecx
  408d64:	or     al,BYTE PTR [edx-0x2b]
  408d67:	xchg   edx,eax
  408d68:	ficom  WORD PTR [ebp+0x6a]
  408d6b:	sub    DWORD PTR [edx+0x32df8d3c],eax
  408d71:	xchg   edi,eax
  408d72:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408d73:	or     esi,esp
  408d75:	jge    0x408d78
  408d77:	xor    al,0xd0
  408d79:	pop    ss
  408d7a:	mov    al,ds:0x7b546a4a
  408d7f:	repz (bad) 
  408d81:	leave  
  408d82:	add    BYTE PTR cs:[esi-0x1a],bl
  408d86:	cli    
  408d87:	sub    dh,ch
  408d89:	dec    BYTE PTR [esi+ebx*4-0x46]
  408d8d:	add    DWORD PTR [edi+0x3b],esi
  408d90:	out    0x76,eax
  408d92:	fxch   st(3)
  408d94:	add    DWORD PTR [edx+0x5d],ebp
  408d97:	mov    DWORD PTR [edi],esp
  408d99:	adc    al,0x12
  408d9b:	jmp    0x127eaa79
  408da0:	loope  0x408d61
  408da2:	xchg   edi,eax
  408da3:	jg     0x408e00
  408da5:	mov    ds:0x95d42a22,eax
  408daa:	fsub   QWORD PTR [ecx]
  408dac:	ds and al,bh
  408daf:	lods   al,BYTE PTR ds:[esi]
  408db0:	mov    esi,0x157d686b
  408db5:	dec    esp
  408db6:	xchg   bh,al
  408db8:	test   DWORD PTR [esi+0x4d],ebp
  408dbb:	pop    esi
  408dbc:	mov    ds:0xecbe9178,al
  408dc1:	out    dx,al
  408dc2:	cmp    dl,dl
  408dc4:	popa   
  408dc5:	popa   
  408dc6:	fstp   DWORD PTR [eax]
  408dc8:	fs push esp
  408dca:	imul   eax,DWORD PTR [ecx+ebp*8-0x1d],0xffffffd4
  408dcf:	mov    edx,0x4adde6a4
  408dd4:	sbb    al,0x9b
  408dd6:	test   DWORD PTR [edi-0x47],ebx
  408dd9:	xor    eax,0xacd0bee3
  408dde:	(bad)  
  408de0:	in     eax,0x9d
  408de2:	inc    esi
  408de3:	xor    al,0x6e
  408de5:	daa    
  408de6:	push   0x9d1b104e
  408deb:	sbb    DWORD PTR [ebp-0x7a8ab576],edi
  408df1:	sub    DWORD PTR [eax+0x753bea16],esi
  408df7:	inc    esp
  408df8:	lds    ebp,FWORD PTR [ecx+0x3a]
  408dfb:	xchg   edi,eax
  408dfc:	pop    esi
  408dfd:	das    
  408dfe:	je     0x408dcf
  408e00:	mov    esi,0x9e0f31ab
  408e05:	loopne 0x408e24
  408e07:	scas   al,BYTE PTR es:[edi]
  408e08:	adc    dl,BYTE PTR [eax-0x43]
  408e0b:	fs retf 0x818b
  408e0f:	xlat   BYTE PTR ds:[ebx]
  408e10:	fbld   TBYTE PTR [esi-0x7aa2c6e3]
  408e16:	mov    ds:0xac3dc265,al
  408e1b:	sbb    eax,0x66f82c6e
  408e20:	daa    
  408e21:	sbb    BYTE PTR [esi+edi*1+0x4a3e9a43],0x72
  408e29:	mov    dl,0xca
  408e2b:	es popf 
  408e2d:	ret    
  408e2e:	dec    esp
  408e2f:	adc    eax,DWORD PTR ds:0xea886754
  408e35:	out    dx,al
  408e36:	cmp    eax,ebx
  408e38:	inc    esp
  408e39:	call   FWORD PTR [ebx+0x2f2df519]
  408e3f:	inc    esp
  408e40:	in     al,0xbb
  408e42:	(bad)  
  408e44:	mov    dh,0xa5
  408e46:	sti    
  408e47:	std    
  408e48:	xchg   ebp,eax
  408e49:	test   DWORD PTR ds:0xd6b77dd4,0xb07be7d3
  408e53:	mov    ah,0x99
  408e55:	clc    
  408e56:	jl     0x408e07
  408e58:	ss (bad) 
  408e5b:	adc    al,0xac
  408e5d:	mov    bl,0x38
  408e5f:	push   ecx
  408e60:	fcom   QWORD PTR [ebp-0x18]
  408e63:	int3   
  408e64:	repnz xchg edx,eax
  408e66:	sub    BYTE PTR [esi-0x5b4751ef],bh
  408e6c:	fwait
  408e6d:	les    esp,FWORD PTR [eax]
  408e6f:	(bad)  
  408e71:	sbb    cl,ch
  408e73:	rcl    DWORD PTR [ebx+eax*2],0xd
  408e77:	jp     0x408e4b
  408e79:	push   ss
  408e7a:	inc    esi
  408e7b:	push   0x3a4ed0ca
  408e80:	sahf   
  408e81:	or     bl,BYTE PTR [edi]
  408e83:	das    
  408e84:	xor    ebp,DWORD PTR [ecx-0x6aba15b]
  408e8a:	pop    esp
  408e8b:	xchg   BYTE PTR [edi+0x31],dl
  408e8e:	mov    ds:0x6fb1d73a,eax
  408e93:	xchg   esi,eax
  408e94:	lahf   
  408e95:	jmp    0xe1f9:0xa593e72a
  408e9c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408e9d:	call   0x6a51:0xcba6c87a
  408ea4:	aaa    
  408ea5:	xchg   ebx,eax
  408ea6:	xchg   edi,eax
  408ea7:	sbb    ecx,DWORD PTR [eax+0x146de9e6]
  408ead:	pop    edi
  408eae:	ss cmp esi,0xf7e252fa
  408eb5:	enter  0x799f,0x10
  408eb9:	test   BYTE PTR [ebp+ebx*4-0x2749f559],0xee
  408ec1:	loope  0x408e9d
  408ec3:	ja     0x408e77
  408ec5:	add    DWORD PTR ds:0xb2cfc80c,0xa5764833
  408ecf:	in     eax,dx
  408ed0:	cmp    DWORD PTR [edx-0x7e062aba],eax
  408ed6:	push   esp
  408ed7:	rcr    DWORD PTR [ebx],1
  408ed9:	add    ah,BYTE PTR [edi]
  408edb:	test   DWORD PTR [eax+0x337544ff],ebx
  408ee1:	nop
  408ee2:	cmp    cl,BYTE PTR [ecx-0x65]
  408ee5:	clc    
  408ee6:	dec    edx
  408ee7:	leave  
  408ee8:	loop   0x408f02
  408eea:	mov    edi,0xf796267a
  408eef:	jle    0x408e96
  408ef1:	popa   
  408ef2:	(bad)  
  408ef3:	push   esp
  408ef4:	test   eax,0x9056aa6e
  408ef9:	xchg   edi,eax
  408efa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408efb:	dec    ecx
  408efc:	push   ecx
  408efd:	inc    ebx
  408efe:	xor    BYTE PTR [edx-0x24],ah
  408f01:	and    dh,BYTE PTR [edi+0x4161be6b]
  408f07:	push   ds
  408f08:	retfw  
  408f0a:	jecxz  0x408e96
  408f0c:	frstor [ecx+ebp*4]
  408f0f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408f10:	aam    0x8c
  408f12:	int    0xa3
  408f14:	pop    ds
  408f15:	repnz or ebx,DWORD PTR [ebx+0x3d]
  408f19:	pop    ebp
  408f1a:	jnp    0x408edd
  408f1c:	add    al,0x97
  408f1e:	or     ebx,DWORD PTR [ebp+0x1e72f2f7]
  408f24:	repnz cmc 
  408f26:	rol    DWORD PTR [ebx+0x6c],0x77
  408f2a:	sbb    ecx,DWORD PTR [eax+0x4bfaf01e]
  408f30:	mov    eax,ds:0xf7177873
  408f35:	mov    esi,0x94737eab
  408f3a:	mov    bh,0xef
  408f3c:	pop    edi
  408f3d:	xchg   BYTE PTR [ebx+0x579af190],bh
  408f43:	shr    DWORD PTR [esi-0x12182d51],0xff
  408f4a:	call   0xc242:0xcd63a19a
  408f51:	jg     0x408f46
  408f53:	lds    esp,FWORD PTR [esi]
  408f55:	or     eax,0x28cd44cb
  408f5a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408f5b:	pop    ebx
  408f5c:	jp     0x408f79
  408f5e:	ins    BYTE PTR es:[edi],dx
  408f5f:	xor    BYTE PTR [edi-0x531e63fb],0x32
  408f66:	xor    al,0x20
  408f68:	iret   
  408f69:	jp     0x408ef2
  408f6b:	dec    bh
  408f6d:	sbb    DWORD PTR [ecx*8-0x127d0efb],0xaf6046a3
  408f78:	adc    bh,0x1f
  408f7b:	das    
  408f7c:	xchg   bh,bh
  408f7e:	pop    ecx
  408f7f:	cmp    BYTE PTR [eax+ebx*1-0xd7d0879],dh
  408f86:	lods   al,BYTE PTR ds:[esi]
  408f87:	cmp    BYTE PTR ds:0xc4f43539,cl
  408f8d:	dec    edi
  408f8e:	daa    
  408f8f:	into   
  408f90:	xlat   BYTE PTR ds:[ebx]
  408f91:	add    cl,0xa6
  408f94:	scas   al,BYTE PTR es:[edi]
  408f95:	jl     0x408f73
  408f97:	jecxz  0x408fff
  408f99:	out    dx,al
  408f9a:	jo     0x408f6c
  408f9c:	iret   
  408f9d:	(bad)  
  408f9f:	pop    edx
  408fa0:	jb     0x409009
  408fa2:	js     0x408fd8
  408fa4:	dec    ebp
  408fa5:	push   edx
  408fa6:	jne    0x408fe4
  408fa8:	int3   
  408fa9:	outs   dx,BYTE PTR ds:[esi]
  408faa:	out    0xaa,eax
  408fac:	push   DWORD PTR [eax]
  408fae:	lea    eax,ds:0x41b02c
  408fb4:	jmp    0x409301
  408fb9:	add    al,0x7c
  408fbb:	out    0xcb,eax
  408fbd:	out    0xf3,eax
  408fbf:	xor    al,0xd3
  408fc1:	call   0x231937f3
  408fc6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408fc7:	repnz cmp al,0x77
  408fca:	out    0x70,al
  408fcc:	jo     0x408fee
  408fce:	jge    0x409040
  408fd0:	jo     0x408f62
  408fd2:	and    al,0xd9
  408fd4:	ds out dx,al
  408fd6:	pop    ss
  408fd7:	sahf   
  408fd8:	iret   
  408fd9:	and    al,0xfd
  408fdb:	bswap  ecx
  408fdd:	xchg   DWORD PTR [edx],ebp
  408fdf:	jmp    0x409044
  408fe1:	aad    0x21
  408fe3:	retf   
  408fe4:	xor    BYTE PTR [edx+0xc71df81],ah
  408fea:	inc    esi
  408feb:	mov    bl,0xeb
  408fed:	hlt    
  408fee:	out    0xc,eax
  408ff0:	sbb    esi,ebp
  408ff2:	xor    DWORD PTR [edx],0x60
  408ff5:	fistp  DWORD PTR [ebx+0x73]
  408ff8:	push   esp
  408ff9:	mov    ds:0x563801af,al
  408ffe:	ins    DWORD PTR es:[edi],dx
  408fff:	inc    esp
  409000:	push   es
  409001:	shl    DWORD PTR [edi-0x7],1
  409004:	push   0xa2f3b6c7
  409009:	cli    
  40900a:	adc    DWORD PTR [ebx-0x134a4707],ebp
  409010:	xchg   ebp,eax
  409011:	xchg   edx,eax
  409012:	shl    BYTE PTR cs:[edi+0x25606c7e],0xf9
  40901a:	repz jmp 0x1193:0xfe99e00c
  409022:	jmp    0xa4d:0x2e451601
  409029:	mov    al,ds:0xb180d6eb
  40902e:	inc    esp
  40902f:	sahf   
  409030:	cli    
  409031:	test   DWORD PTR fs:[esi+0x604cd173],ecx
  409038:	in     eax,dx
  409039:	or     BYTE PTR ds:0xa0f56ac4,bl
  40903f:	dec    eax
  409040:	mov    ds:0xfe956c5b,al
  409045:	jecxz  0x409037
  409047:	push   ds
  409048:	or     bl,BYTE PTR [edx]
  40904a:	dec    edx
  40904b:	mov    edx,?
  40904d:	or     DWORD PTR [eax],ecx
  40904f:	sbb    esi,DWORD PTR [esi]
  409051:	jecxz  0x4090c9
  409053:	inc    ecx
  409054:	or     eax,ebx
  409056:	or     al,0xf9
  409058:	mov    ebp,0x3fee74e7
  40905d:	push   eax
  40905e:	ret    0x6df9
  409061:	outs   dx,DWORD PTR ds:[esi]
  409062:	inc    esi
  409063:	iret   
  409064:	mov    edi,0xcb5e0dc
  409069:	jnp    0x409001
  40906b:	imul   DWORD PTR [edi]
  40906d:	jmp    0x409036
  40906f:	push   DWORD PTR [ebp-0x716ccbcd]
  409075:	and    al,0x85
  409077:	js     0x40906f
  409079:	(bad)  
  40907a:	call   0x54:0xa0371a60
  409081:	sbb    eax,0x5248f86e
  409086:	(bad)  
  409087:	out    0x67,eax
  409089:	das    
  40908a:	cs jle 0x4090b6
  40908d:	lds    edi,FWORD PTR ds:0x8455bfb
  409093:	sub    BYTE PTR [ebp-0x5a],ah
  409096:	or     BYTE PTR [esi-0xdf5722a],0xc6
  40909d:	push   ebx
  40909e:	test   eax,eax
  4090a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4090a1:	out    0x1e,al
  4090a3:	icebp  
  4090a4:	mov    eax,ds:0x54035b7f
  4090a9:	or     BYTE PTR ds:0x11dcb66c,bh
  4090af:	adc    DWORD PTR [esi],ebx
  4090b1:	ss iret 
  4090b3:	pop    eax
  4090b4:	sub    BYTE PTR [ebp+0x4c28ae33],dl
  4090ba:	inc    edx
  4090bb:	adc    BYTE PTR [ecx],dh
  4090bd:	fwait
  4090be:	jae    0x4090a5
  4090c0:	bound  esi,QWORD PTR [esi+ecx*2+0x4]
  4090c4:	inc    esp
  4090c5:	fsub   DWORD PTR [edx+0x366b15c]
  4090cb:	std    
  4090cc:	adc    BYTE PTR [edx+0x24],al
  4090cf:	mov    esi,0xfe4da6d7
  4090d4:	mov    al,0xbd
  4090d6:	push   ss
  4090d7:	pop    edi
  4090d8:	sti    
  4090d9:	std    
  4090da:	cmp    DWORD PTR [ecx-0x2cd2f729],eax
  4090e0:	sar    DWORD PTR [eax-0x3e81f0f5],1
  4090e6:	dec    edi
  4090e7:	pop    ss
  4090e8:	bnd jb 0x409168
  4090eb:	pushw  es
  4090ed:	jb     0x409072
  4090ef:	(bad)  
  4090f0:	mov    edi,DWORD PTR [edi+esi*1]
  4090f3:	push   0x3b2eb4d3
  4090f8:	fdivr  QWORD PTR [ebx-0x4893cc67]
  4090fe:	mov    eax,ds:0x650a4c89
  409103:	shl    bh,1
  409105:	adc    BYTE PTR [esi],ch
  409107:	add    al,0x64
  409109:	stos   BYTE PTR es:[edi],al
  40910a:	(bad)  [edx]
  40910c:	inc    DWORD PTR [eax]
  40910e:	mov    ss,WORD PTR [ecx+0x3]
  409111:	adc    eax,0x385d9ed
  409116:	clc    
  409117:	dec    eax
  409118:	lods   al,BYTE PTR ds:[esi]
  409119:	jns    0x40917f
  40911b:	clc    
  40911c:	jbe    0x4090cc
  40911e:	test   al,bh
  409120:	ins    DWORD PTR es:[edi],dx
  409121:	cli    
  409122:	jg     0x409129
  409124:	jl     0x409185
  409126:	jge    0x4090c6
  409128:	retf   
  409129:	and    al,0x52
  40912b:	dec    ecx
  40912c:	in     eax,dx
  40912d:	sub    BYTE PTR [eax+0x43],dl
  409130:	loop   0x4090ed
  409132:	push   ecx
  409133:	imul   eax,edx,0xffffffc6
  409136:	call   0xad350e1
  40913b:	add    al,0x6e
  40913d:	test   BYTE PTR [edi+0x267c2432],0xf0
  409144:	jae    0x40913e
  409146:	sbb    dl,dh
  409148:	sub    BYTE PTR [eax-0x69],ch
  40914b:	loop   0x409107
  40914d:	sbb    edi,DWORD PTR [edx-0x52]
  409150:	cwde   
  409151:	inc    esi
  409152:	cmp    DWORD PTR [edx+edx*8-0x53768211],esp
  409159:	xor    edx,DWORD PTR [ebp-0x58]
  40915c:	push   ebp
  40915d:	pop    ebp
  40915e:	jne    0x4091b4
  409160:	jns    0x40914a
  409162:	cmp    eax,0x590b4936
  409167:	sar    BYTE PTR [esi+0x2b5faca5],cl
  40916d:	loop   0x4091b0
  40916f:	loopne 0x409102
  409171:	gs test eax,0x6485010d
  409177:	sub    ah,BYTE PTR [edx+ebx*8+0x9]
  40917b:	rol    dl,cl
  40917d:	test   BYTE PTR [eax+esi*8],cl
  409180:	dec    ebp
  409181:	test   eax,0x40d714ce
  409186:	add    al,0x29
  409188:	and    eax,0xb6e202d1
  40918d:	jmp    0x24aa:0xa634a17a
  409194:	sub    DWORD PTR [esi],ebp
  409196:	mov    ah,0xee
  409198:	ins    DWORD PTR es:[edi],dx
  409199:	outs   dx,DWORD PTR ds:[esi]
  40919a:	fmul   DWORD PTR [eax-0x3a3f46b]
  4091a0:	lea    ebx,[eax-0x47]
  4091a3:	jb     0x4091da
  4091a5:	xor    al,0x32
  4091a8:	mov    eax,ds:0x6c0529f3
  4091ad:	mov    bl,0xa8
  4091af:	stc    
  4091b0:	bound  esp,QWORD PTR [ecx]
  4091b2:	cli    
  4091b3:	dec    ebp
  4091b4:	lods   al,BYTE PTR ds:[esi]
  4091b5:	int    0x36
  4091b7:	cmp    al,0x4c
  4091b9:	inc    ebp
  4091ba:	mov    BYTE PTR [esi-0x45],0x7a
  4091be:	cwde   
  4091bf:	dec    edx
  4091c0:	lahf   
  4091c1:	(bad)  
  4091c2:	loope  0x409230
  4091c4:	add    BYTE PTR [ebx],ch
  4091c6:	push   eax
  4091c7:	xchg   BYTE PTR [ecx+0x2ac03628],ah
  4091cd:	addr16 push ebp
  4091cf:	aas    
  4091d0:	jl     0x4091b4
  4091d2:	cmp    edi,DWORD PTR [ecx+0x574d495d]
  4091d8:	lock pop ecx
  4091da:	jb     0x4091e9
  4091dc:	or     ch,BYTE PTR [ecx-0x23544670]
  4091e2:	or     ah,ch
  4091e4:	(bad)  
  4091e5:	std    
  4091e6:	sbb    al,0xb2
  4091e8:	fnsave [ebp-0x5db6e94c]
  4091ee:	sbb    DWORD PTR [esi-0x62],esp
  4091f1:	push   0x86c903a
  4091f6:	sbb    edi,DWORD PTR [esi-0x2a93f5d2]
  4091fc:	icebp  
  4091fd:	cmp    bh,BYTE PTR [eax-0x71]
  409200:	into   
  409201:	and    BYTE PTR [edi-0x506b46b3],bh
  409207:	cmp    DWORD PTR [ebp-0xff8cc48],eax
  40920d:	(bad)  
  40920e:	dec    edx
  40920f:	and    DWORD PTR [edx+esi*8],0x67b1eb8d
  409216:	xor    DWORD PTR [ebx+ecx*4+0x25],0x43af4466
  40921e:	jl     0x4091bb
  409220:	xchg   ecx,eax
  409221:	aam    0x9a
  409223:	outs   dx,DWORD PTR ds:[esi]
  409224:	ret    
  409225:	repz pop ds
  409227:	(bad)  
  409229:	jmp    0xcdcc9278
  40922e:	fldenv [ecx+ebp*2+0x19]
  409232:	jmp    0x4946a98
  409237:	mov    ah,0x67
  409239:	ds fcmovnu st,st(1)
  40923c:	loop   0x409252
  40923e:	adc    BYTE PTR [ecx+0x52],0xce
  409242:	lahf   
  409243:	mov    ds:0x25a231,eax
  409248:	sbb    esp,0x43e0487e
  40924e:	xor    eax,0xf8910c92
  409253:	or     BYTE PTR [ebp-0x36],ah
  409256:	imul   BYTE PTR [edi-0x67]
  409259:	xor    DWORD PTR [ecx],0x38
  40925c:	sbb    al,0x59
  40925e:	jns    0x409212
  409260:	pop    esp
  409261:	mov    ch,0x3
  409263:	inc    ecx
  409264:	jo     0x40929d
  409266:	mov    al,ds:0x31252637
  40926b:	mov    ds:0xb31a77c,al
  409270:	mov    cl,0x1a
  409272:	xchg   esi,eax
  409273:	mov    cl,0xdc
  409275:	adc    eax,DWORD PTR [ecx-0x57]
  409278:	ins    BYTE PTR es:[edi],dx
  409279:	mov    gs,WORD PTR [ebp+0x2b]
  40927c:	out    0xb5,al
  40927e:	push   0x891e0c09
  409283:	jecxz  0x409208
  409285:	pop    ss
  409286:	fidivr DWORD PTR [ecx]
  409288:	xor    BYTE PTR ds:0xab5eba59,cl
  40928e:	rcr    DWORD PTR [ebp+edi*8+0x2a838eb7],cl
  409295:	mov    ds:0x69be760b,al
  40929a:	pop    es
  40929b:	es mov esi,0x914f5396
  4092a1:	js     0x40924a
  4092a3:	jns    0x409301
  4092a5:	jne    0x409241
  4092a7:	arpl   WORD PTR [eax],si
  4092a9:	inc    ebp
  4092aa:	in     al,dx
  4092ab:	fsqrt  
  4092ad:	xor    ebx,DWORD PTR gs:[ebx-0x2d]
  4092b1:	data16 (bad) 
  4092b4:	mov    ds:0x6be9195e,al
  4092b9:	push   esp
  4092ba:	fs mov bh,0xf6
  4092bd:	mov    ebp,0x73790ebd
  4092c2:	and    dh,dl
  4092c4:	pop    es
  4092c5:	cmp    BYTE PTR [ecx+0x2fe56939],cl
  4092cb:	xor    ecx,DWORD PTR [ecx+0x5b]
  4092ce:	adc    DWORD PTR [ebp-0x404f854],ebp
  4092d4:	ret    0xa06d
  4092d7:	inc    ecx
  4092d8:	jnp    0x40929d
  4092da:	ficomp DWORD PTR [ebx]
  4092dc:	nop
  4092dd:	push   0x6c
  4092df:	jbe    0x409270
  4092e1:	xchg   ecx,eax
  4092e2:	cwde   
  4092e3:	push   es
  4092e4:	xchg   BYTE PTR [esi+0x10],cl
  4092e7:	push   0x36
  4092e9:	dec    esp
  4092ea:	jge    0x409350
  4092ec:	aas    
  4092ed:	bnd jo 0x409279
  4092f0:	xor    al,0x52
  4092f2:	bnd js 0x409324
  4092f5:	js     0x409294
  4092f7:	jge    0x409376
  4092f9:	inc    ebp
  4092fa:	cmp    al,0x60
  4092fc:	jle    0x4092cb
  4092fe:	jo     0x4092b7
  409300:	std    
  409301:	push   DWORD PTR [eax]
  409303:	lea    eax,ds:0x41b260
  409309:	push   DWORD PTR [eax]
  40930b:	lea    eax,ds:0x41b344
  409311:	push   DWORD PTR [eax]
  409313:	xchg   ebx,edx
  409315:	inc    ebx
  409316:	inc    ebx
  409317:	sub    ebx,0x3
  40931a:	push   ebx
  40931b:	pop    eax
  40931c:	jmp    0x409669
  409321:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409322:	jnp    0x409329
  409324:	or     DWORD PTR [ecx+0x52b3b211],esp
  40932a:	lahf   
  40932b:	jo     0x4092ae
  40932d:	dec    esi
  40932e:	cmp    DWORD PTR [ecx+0x70e22707],0x707d2070
  409338:	jo     0x409312
  40933a:	out    0xfc,eax
  40933c:	mov    al,ds:0xcc781fc3
  409341:	shl    ebp,0x7d
  409344:	cmp    esi,DWORD PTR [esi-0x48]
  409347:	cld    
  409348:	pop    ds
  409349:	outs   dx,BYTE PTR ds:[esi]
  40934a:	clc    
  40934b:	das    
  40934c:	cmp    al,0x3a
  40934e:	and    DWORD PTR [ebp+0x5675bc9e],edi
  409354:	shr    dh,cl
  409356:	lahf   
  409357:	dec    edi
  409358:	std    
  409359:	jne    0x4092e3
  40935b:	js     0x409387
  40935d:	mov    eax,ds:0x820e07cf
  409362:	cmp    edx,ebp
  409364:	pop    es
  409365:	jl     0x40936c
  409367:	sbb    esi,eax
  409369:	jne    0x409341
  40936b:	pop    es
  40936c:	mov    edi,ss
  40936e:	pop    ecx
  40936f:	mov    DWORD PTR [esp+ebp*4],edx
  409372:	imul   esi,DWORD PTR [edi-0x4d7fc0e8],0x4deea907
  40937c:	adc    eax,DWORD PTR ss:[edi]
  40937f:	cdq    
  409380:	push   ds
  409381:	icebp  
  409382:	xlat   BYTE PTR ds:[ebx]
  409383:	mov    dh,0x3c
  409385:	cmp    eax,0xa0b44a70
  40938a:	mov    ecx,0xc99be194
  40938f:	int    0xe0
  409391:	inc    esi
  409392:	inc    esp
  409393:	inc    esp
  409394:	cs out dx,al
  409396:	xchg   ebp,eax
  409397:	xchg   esi,eax
  409398:	or     eax,0x84592cf8
  40939d:	out    0xe3,al
  40939f:	push   ecx
  4093a0:	or     eax,0xf7fbb6f5
  4093a5:	sub    al,0x20
  4093a7:	aaa    
  4093a8:	(bad)  
  4093a9:	ins    BYTE PTR es:[edi],dx
  4093aa:	inc    edi
  4093ab:	cmp    BYTE PTR [edx+ecx*4-0x3e],bh
  4093af:	out    dx,eax
  4093b0:	jmp    0x829f3720
  4093b5:	cs jg  0x40939e
  4093b8:	fisubr WORD PTR [edx]
  4093ba:	fwait
  4093bb:	pop    edx
  4093bc:	es clc 
  4093be:	daa    
  4093bf:	cs cdq 
  4093c1:	ror    BYTE PTR [eax+ecx*2],0x55
  4093c5:	dec    eax
  4093c6:	xchg   esp,eax
  4093c8:	pushf  
  4093c9:	mov    ch,0xc0
  4093cb:	push   ecx
  4093cc:	and    bh,dl
  4093ce:	mov    ebx,0xa9c4119b
  4093d3:	ret    0xc685
  4093d6:	shl    BYTE PTR ds:0xbccf561a,cl
  4093dc:	xor    al,dl
  4093de:	stc    
  4093df:	pop    esp
  4093e0:	(bad)  [eax+edx*2]
  4093e3:	mov    ch,0x8a
  4093e5:	inc    edx
  4093e6:	imul   esi,DWORD PTR [ebx-0x21],0x470d25b5
  4093ed:	loop   0x409467
  4093ef:	sbb    ebp,DWORD PTR [edi-0x2d]
  4093f2:	jecxz  0x4093a4
  4093f4:	leave  
  4093f5:	and    DWORD PTR [esi-0xa50fcf9],edx
  4093fb:	(bad)  
  4093fc:	(bad)  
  4093fd:	pop    eax
  4093fe:	cmp    BYTE PTR [edx+eiz*4+0x76],dh
  409402:	add    BYTE PTR [ecx+0x68840da3],al
  409408:	(bad)  
  40940a:	(bad)  
  40940b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40940c:	shr    BYTE PTR [eax],1
  40940e:	jg     0x4093e8
  409410:	adc    eax,0x391aac70
  409415:	or     esp,edi
  409417:	jnp    0x409406
  409419:	aaa    
  40941a:	and    eax,0xc7223551
  40941f:	add    eax,0x6ab0fd1a
  409424:	add    dh,BYTE PTR [ebx]
  409426:	hlt    
  409427:	jne    0x4093ca
  409429:	fldenv [edi+0x201552b6]
  40942f:	nop
  409430:	dec    ebx
  409431:	xor    bl,cl
  409433:	xor    al,0x6e
  409435:	sub    ebp,DWORD PTR [esi]
  409437:	mov    bl,0x7e
  409439:	into   
  40943a:	mov    al,0x8
  40943c:	inc    ebx
  40943d:	loop   0x409432
  40943f:	nop
  409440:	sub    BYTE PTR [esi+edi*4-0x2b],0x2f
  409445:	fiadd  DWORD PTR [eax-0x1fba6e9]
  40944b:	das    
  40944c:	test   BYTE PTR [edx-0x37348a44],dl
  409452:	push   ecx
  409453:	add    bl,dh
  409455:	jno    0x409452
  409457:	(bad)  
  409458:	call   edx
  40945a:	push   ebx
  40945b:	jo     0x40948a
  40945d:	sub    esp,DWORD PTR [ecx+0x3b]
  409460:	retf   
  409461:	adc    BYTE PTR [ebx],cl
  409463:	pushf  
  409464:	shl    BYTE PTR [ecx],1
  409466:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409467:	mov    ebp,0x35f59bfe
  40946c:	and    al,BYTE PTR [eax+0x5bff5d1f]
  409472:	outs   dx,DWORD PTR ds:[esi]
  409473:	lds    edx,FWORD PTR [edx+esi*8-0x4c]
  409477:	shl    DWORD PTR [edx+0x58c603b1],cl
  40947d:	jae    0x409492
  40947f:	mov    esi,0xa086eea8
  409484:	cmp    BYTE PTR [esi+0x6c9ba2ab],cl
  40948a:	sti    
  40948b:	jne    0x40948f
  40948d:	ret    
  40948e:	mov    eax,0x6cbdc926
  409493:	jnp    0x409423
  409495:	cmc    
  409496:	and    eax,0x658f0ad4
  40949b:	xchg   edx,eax
  40949c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40949d:	push   ecx
  40949e:	hlt    
  40949f:	adc    BYTE PTR [ebx-0x2bba9e2d],bl
  4094a5:	or     BYTE PTR [eax],ch
  4094a7:	cld    
  4094a8:	sbb    BYTE PTR [ebx],bl
  4094aa:	das    
  4094ab:	mov    ds:0x1c0ef4f8,al
  4094b0:	dec    ebp
  4094b1:	lahf   
  4094b2:	fistp  DWORD PTR [ebx+0x297d9b2]
  4094b8:	clc    
  4094b9:	xor    DWORD PTR [ebx],esp
  4094bb:	in     eax,0x90
  4094bd:	aas    
  4094be:	mov    ch,0xe8
  4094c0:	xor    DWORD PTR [esi-0x13],ebx
  4094c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4094c4:	ja     0x40953e
  4094c6:	jb     0x40949f
  4094c8:	inc    ebx
  4094c9:	popa   
  4094ca:	dec    ebx
  4094cb:	mov    ecx,0x60a95ae6
  4094d0:	and    DWORD PTR [eax-0x1b],eax
  4094d3:	and    edi,ebx
  4094d5:	loopne 0x409496
  4094d7:	xlat   BYTE PTR ds:[ebx]
  4094d8:	repz xchg edi,eax
  4094da:	jmp    0xc83d4f3
  4094df:	in     eax,dx
  4094e0:	aaa    
  4094e1:	test   BYTE PTR [ecx],ah
  4094e3:	daa    
  4094e4:	jae    0x4094da
  4094e6:	xor    DWORD PTR [esi+0x55],edx
  4094e9:	jae    0x4094a9
  4094eb:	inc    esi
  4094ec:	inc    esp
  4094ed:	pusha  
  4094ee:	icebp  
  4094ef:	ds cmc 
  4094f1:	inc    edx
  4094f2:	inc    esi
  4094f3:	test   DWORD PTR [ecx],esi
  4094f5:	xor    al,0xd3
  4094f7:	push   esp
  4094f8:	or     dl,bl
  4094fa:	dec    eax
  4094fb:	push   ebp
  4094fc:	pop    esp
  4094fd:	ins    BYTE PTR es:[edi],dx
  4094fe:	test   DWORD PTR [edx+0x76cbde],esi
  409504:	pusha  
  409505:	mov    dh,BYTE PTR [edx-0x5cfcb4f8]
  40950b:	lea    ebx,[esi-0x6e]
  40950e:	push   ss
  40950f:	and    al,0xe6
  409511:	test   eax,0x87d3c4d
  409516:	clc    
  409517:	cmp    eax,0x3826bbe1
  40951c:	leave  
  40951d:	pop    eax
  40951e:	dec    ebx
  40951f:	pop    edx
  409520:	in     al,0xd3
  409522:	jne    0x4094a5
  409524:	ds (bad) 
  409526:	jmp    DWORD PTR [edx]
  409528:	xor    cl,BYTE PTR [ebp-0x6b]
  40952b:	int3   
  40952c:	shl    bh,1
  40952e:	sbb    DWORD PTR [ebp+0x4c73b7da],edx
  409534:	test   eax,0x4713f779
  409539:	mov    dh,0xfb
  40953b:	cmc    
  40953c:	jne    0x4094f0
  40953e:	in     al,0xfa
  409540:	dec    esp
  409541:	test   DWORD PTR [edi+eiz*1+0x77],0x1efb72f8
  409549:	sbb    ah,BYTE PTR [esi+0x5d]
  40954c:	shl    BYTE PTR ds:0x242cf49e,1
  409552:	adc    BYTE PTR [esi],dh
  409554:	and    dl,dl
  409556:	mov    DWORD PTR [edx+0x79],esp
  409559:	test   al,0x4d
  40955b:	nop
  40955c:	inc    edi
  40955d:	(bad)  
  40955e:	sbb    bl,BYTE PTR ds:0xde61ddb2
  409564:	aas    
  409565:	pop    ds
  409566:	xchg   esi,eax
  409567:	pop    esp
  409568:	mov    WORD PTR [edx-0x64858a5f],?
  40956e:	cmp    esp,DWORD PTR [eax-0x31]
  409571:	push   0x5b52d8a8
  409576:	fldcw  WORD PTR [esi-0x33]
  409579:	aas    
  40957a:	mov    edx,0x7dcb2da6
  40957f:	pop    ebp
  409580:	aaa    
  409581:	(bad)  
  409582:	aaa    
  409583:	xor    ecx,DWORD PTR [ecx-0xece95ca]
  409589:	jne    0x40952c
  40958b:	in     eax,0x75
  40958d:	push   edi
  40958e:	xchg   DWORD PTR [edi],esp
  409590:	aaa    
  409591:	mov    esi,0xdfe66004
  409596:	repz ret 0xa669
  40959a:	mov    dl,BYTE PTR [eax-0x53cfc930]
  4095a0:	jmp    0xdfe7b8ee
  4095a5:	mov    eax,0x1eb39350
  4095aa:	sbb    eax,0xd8ad8690
  4095af:	push   esi
  4095b0:	add    cl,bl
  4095b2:	inc    edx
  4095b3:	retf   0xf2fc
  4095b6:	mov    dh,0x33
  4095b8:	push   esp
  4095b9:	test   eax,0x44e42235
  4095be:	sbb    DWORD PTR [ebp+eiz*2+0x1a],ebp
  4095c2:	getsec 
  4095c4:	jno    0x409609
  4095c6:	pop    ebp
  4095c7:	out    dx,eax
  4095c8:	lock push 0xffffff9d
  4095cb:	xor    eax,0x50d93e73
  4095d0:	xor    eax,0xf9b17d69
  4095d5:	dec    esi
  4095d6:	and    edx,DWORD PTR [eax+edi*4]
  4095d9:	bound  edi,QWORD PTR [ebx]
  4095db:	test   eax,0x496e6e89
  4095e0:	aam    0xce
  4095e2:	or     ah,dh
  4095e4:	jb     0x4095fd
  4095e6:	dec    esi
  4095e7:	jbe    0x4095a4
  4095e9:	sbb    al,0x70
  4095eb:	pop    es
  4095ec:	dec    edx
  4095ed:	mov    ds:0x45488f70,al
  4095f2:	push   ebp
  4095f3:	and    DWORD PTR [ebp+0x6a],ebp
  4095f6:	mov    dh,0xf8
  4095f8:	add    eax,0xc1563251
  4095fd:	(bad)  
  4095fe:	(bad)
  409601:	nop
  409602:	(bad)  
  409603:	mov    ds:0xdf824850,eax
  409608:	sub    al,0x8f
  40960a:	xlat   BYTE PTR ds:[ebx]
  40960b:	daa    
  40960c:	test   dh,bh
  40960e:	xor    ch,BYTE PTR [edi]
  409610:	lahf   
  409611:	mov    esp,0x98f2fb42
  409616:	neg    DWORD PTR [edi+0x3d]
  409619:	jecxz  0x40963a
  40961b:	in     eax,0x6b
  40961d:	frstor [esi]
  40961f:	xor    DWORD PTR [ecx-0x7b],esi
  409622:	loope  0x409607
  409624:	add    BYTE PTR [edx+0x49a2216d],0x3e
  40962b:	repz (bad) 
  40962d:	aad    0x6e
  40962f:	into   
  409630:	push   edi
  409631:	mov    al,0xb4
  409633:	and    eax,0x65c4d29f
  409638:	in     eax,0x2
  40963a:	scas   al,BYTE PTR es:[edi]
  40963b:	stos   BYTE PTR es:[edi],al
  40963c:	adc    BYTE PTR [eax],dh
  40963e:	pushf  
  40963f:	cmp    eax,0x9fa7267f
  409644:	data16 add al,0x4c
  409647:	dec    eax
  409648:	fwait
  409649:	inc    esi
  40964a:	dec    edx
  40964b:	cli    
  40964c:	cld    
  40964d:	je     0x4096b3
  40964f:	xor    edx,edx
  409651:	fxch   st(7)
  409653:	fcomp  QWORD PTR [esp+esi*1+0x29c7f0dc]
  40965a:	fisub  DWORD PTR [eax+0x2eac781e]
  409660:	scas   eax,DWORD PTR es:[edi]
  409661:	mov    esi,0x1bff0e05
  409666:	jo     0x40962b
  409668:	push   cs
  409669:	call   DWORD PTR [eax+0x1]
  40966c:	mov    eax,DWORD PTR [ebp-0x20]
  40966f:	mov    ecx,DWORD PTR ds:0x41b224
  409675:	jmp    0x4099c2
  40967a:	out    dx,eax
  40967b:	mov    ebx,0xd169d149
  409680:	ja     0x4096e3
  409682:	add    BYTE PTR [edi+0x44],bh
  409685:	xchg   DWORD PTR [ebx-0x5a],edx
  409688:	dec    ebx
  409689:	mov    edi,edx
  40968b:	out    dx,eax
  40968c:	jo     0x4096fe
  40968e:	and    BYTE PTR [ebp+0x70],bh
  409691:	jo     0x409632
  409693:	shl    BYTE PTR [edx],cl
  409695:	out    0x59,eax
  409697:	sub    DWORD PTR [ecx+0x45cd7829],eax
  40969d:	pop    ecx
  40969e:	loop   0x409639
  4096a0:	xchg   edi,eax
  4096a1:	push   0xffffffd9
  4096a3:	out    dx,eax
  4096a4:	xchg   ebp,eax
  4096a5:	ficom  DWORD PTR [edx]
  4096a7:	push   ebp
  4096a8:	(bad)  
  4096a9:	jnp    0x40968e
  4096ab:	xchg   esi,eax
  4096ac:	xchg   si,ax
  4096ae:	imul   ecx,esi,0xd046a8c8
  4096b4:	adc    eax,0xcea04df4
  4096b9:	test   ebx,esp
  4096bb:	fwait
  4096bc:	cli    
  4096bd:	dec    esp
  4096be:	jge    0x409716
  4096c0:	int    0x7a
  4096c2:	sti    
  4096c3:	pop    ecx
  4096c4:	pop    edx
  4096c5:	aaa    
  4096c6:	imul   edi,eax,0xf24b60aa
  4096cc:	pop    cx
  4096ce:	sub    edx,DWORD PTR [edi+0x4b]
  4096d1:	scas   al,BYTE PTR es:[edi]
  4096d2:	pop    ds
  4096d3:	push   ecx
  4096d4:	lea    esi,[ecx]
  4096d6:	adc    BYTE PTR [esi-0x80],dl
  4096d9:	les    edx,FWORD PTR [ebp-0x39]
  4096dc:	test   eax,0x3a972fcf
  4096e1:	lahf   
  4096e2:	into   
  4096e3:	call   DWORD PTR ds:0xdbc4fb44
  4096e9:	pop    edi
  4096ea:	lods   eax,DWORD PTR ds:[esi]
  4096eb:	mov    al,0xea
  4096ed:	inc    esp
  4096ee:	rcr    DWORD PTR [edi-0x37],cl
  4096f1:	pop    esp
  4096f2:	test   al,0x61
  4096f4:	xor    ecx,DWORD PTR [ebx+0x1e]
  4096f7:	dec    ebp
  4096f8:	push   es
  4096f9:	ss add eax,0x399c7e9
  4096ff:	pop    ds
  409700:	mov    al,ds:0xe2a6f602
  409705:	adc    eax,0xfa62f80
  40970a:	sti    
  40970b:	and    DWORD PTR [eax+0x7efe2182],ecx
  409711:	jmp    0x63231fa7
  409716:	dec    esi
  409717:	add    al,al
  409719:	int3   
  40971a:	retf   
  40971b:	add    al,0xcf
  40971d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40971e:	outs   dx,BYTE PTR ds:[esi]
  40971f:	jbe    0x409720
  409721:	mov    edi,0x213b1427
  409726:	cmc    
  409727:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409728:	mov    ebx,0xf27255b
  40972d:	add    cl,dl
  40972f:	cmp    BYTE PTR [ebx],bh
  409731:	ins    DWORD PTR es:[edi],dx
  409732:	(bad)  
  409733:	sbb    BYTE PTR [eax],bh
  409735:	xchg   ch,bh
  409737:	and    dh,ch
  409739:	inc    esp
  40973a:	push   edx
  40973b:	cmp    cl,BYTE PTR ds:0xc8edd54f
  409741:	lds    esp,FWORD PTR [ecx+eax*8+0x2c]
  409745:	in     eax,0x45
  409747:	lods   eax,DWORD PTR ds:[esi]
  409748:	push   0x1b3e4db1
  40974d:	sbb    eax,0xbcf528ab
  409752:	cmp    DWORD PTR ds:0xc7e51b4a,esp
  409758:	jmp    0xbce098ed
  40975d:	xchg   esp,eax
  40975e:	ja     0x409703
  409760:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409761:	gs mov dl,0x96
  409764:	jmp    FWORD PTR cs:[esi]
  409767:	ins    DWORD PTR es:[edi],dx
  409768:	cs retf 
  40976a:	lds    ecx,FWORD PTR [ebx]
  40976c:	cli    
  40976d:	dec    eax
  40976e:	lea    eax,[ebx]
  409770:	jae    0x4097cd
  409772:	jp     0x4097ec
  409774:	lds    esi,FWORD PTR [ebp+0x58]
  409777:	push   0xffffffa4
  409779:	daa    
  40977a:	(bad)
  40977e:	outs   dx,DWORD PTR ds:[esi]
  40977f:	mov    ch,0x1b
  409781:	into   
  409782:	add    BYTE PTR [ebx],0xb3
  409785:	push   eax
  409786:	ror    DWORD PTR [esi+edx*8-0x45f4d4e1],1
  40978d:	push   eax
  40978e:	push   ss
  40978f:	outs   dx,BYTE PTR ds:[esi]
  409790:	test   eax,0x2050756e
  409795:	lock push edi
  409797:	add    ebx,DWORD PTR [ecx+0x205f4af1]
  40979d:	xor    al,0xfe
  40979f:	xchg   esi,eax
  4097a0:	fistp  DWORD PTR [eax-0x29]
  4097a3:	sbb    ebp,esp
  4097a5:	or     eax,0x4be23679
  4097aa:	sti    
  4097ab:	cmc    
  4097ac:	pop    ss
  4097ad:	sbb    esp,esp
  4097af:	repz aam 0xd2
  4097b2:	add    dh,BYTE PTR [edx]
  4097b4:	adc    eax,0x10692c01
  4097b9:	sbb    edx,DWORD PTR [eax-0x6a49680d]
  4097bf:	xchg   esi,eax
  4097c0:	call   0xfdcc:0x1815ff79
  4097c7:	xchg   DWORD PTR [bp+si-0x62],ebx
  4097cb:	push   ebx
  4097cc:	(bad)  
  4097cd:	jge    0x4097bc
  4097cf:	test   eax,0x4c57d25f
  4097d4:	mov    al,0x87
  4097d6:	cmp    eax,0xece2250b
  4097db:	enter  0x3fca,0x55
  4097df:	mov    al,ds:0x523545ad
  4097e4:	(bad)  
  4097e5:	int    0x7b
  4097e7:	jmp    0xfea09152
  4097ec:	cmp    eax,0x9f856be9
  4097f1:	mov    ds:0xec04f7c4,eax
  4097f6:	aaa    
  4097f7:	mov    DWORD PTR [edx-0x3b],0x6fb4ba1a
  4097fe:	popf   
  4097ff:	pop    ds
  409800:	pop    ds
  409801:	in     eax,dx
  409802:	in     al,dx
  409803:	xor    DWORD PTR [ecx],0x41
  409806:	mov    dh,0x65
  409808:	adc    eax,0xfa802efd
  40980d:	mov    esp,0x4333de63
  409812:	xor    esp,ebp
  409814:	mov    edx,0xb25f20be
  409819:	sub    bl,dh
  40981b:	cli    
  40981c:	mov    ebx,0xaa60d4a0
  409821:	les    esp,FWORD PTR [edi-0x70]
  409824:	inc    esp
  409825:	(bad)  
  409827:	adc    DWORD PTR [ecx-0x6d64f1d3],edi
  40982d:	mov    ah,0x6a
  40982f:	mov    ds:0xfe319b4,al
  409834:	xor    eax,0xac0f762d
  409839:	cwde   
  40983a:	dec    edi
  40983b:	lock add cl,dh
  40983e:	(bad)  
  40983f:	pop    ebx
  409840:	mov    dh,0x7d
  409842:	mov    al,ds:0x660029a5
  409847:	jge    0x4097ea
  409849:	xchg   edx,eax
  40984a:	inc    ecx
  40984b:	dec    esi
  40984c:	adc    al,BYTE PTR ds:0xd718ec
  409852:	fwait
  409853:	lock push ds
  409855:	dec    edi
  409856:	call   FWORD PTR [ecx-0x2]
  409859:	and    al,0x5d
  40985b:	xchg   esi,eax
  40985c:	in     eax,0x7f
  40985e:	ds lds edi,FWORD PTR ds:[ecx]
  409862:	fisub  WORD PTR [edi]
  409864:	cmc    
  409865:	jno    0x40987a
  409867:	pushf  
  409868:	pop    ecx
  409869:	vhsubps ymm3,ymm2,YMMWORD PTR [ecx+0x32]
  40986e:	sbb    DWORD PTR [esi],esi
  409870:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409871:	cmp    eax,0xd1ddafeb
  409876:	push   ss
  409877:	jmp    0xc75c:0xab4a8b86
  40987e:	(bad)  
  40987f:	dec    edi
  409880:	call   0x3402:0xaeca4a49
  409887:	or     edx,ebx
  409889:	inc    esp
  40988a:	xchg   BYTE PTR [esi+edi*1+0x18d3a08c],dh
  409891:	lock pop ds
  409893:	loopne 0x409828
  409895:	in     eax,0x73
  409897:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409898:	pushf  
  409899:	mov    ebx,0xe5ce7799
  40989e:	in     eax,dx
  40989f:	fstp   TBYTE PTR [esp+ecx*1]
  4098a2:	mov    ebx,0x55beab3b
  4098a7:	add    DWORD PTR ds:0xf50cc366,0x400fce39
  4098b1:	jp     0x4098fd
  4098b3:	pushf  
  4098b4:	mov    ah,0x28
  4098b6:	fist   WORD PTR [edi+0x7e]
  4098b9:	inc    edx
  4098ba:	and    dl,BYTE PTR [esi]
  4098bc:	lods   eax,DWORD PTR ds:[esi]
  4098bd:	fistp  QWORD PTR [eax+0x4b]
  4098c0:	ds pop ebp
  4098c2:	scas   al,BYTE PTR es:[edi]
  4098c3:	cmc    
  4098c4:	jae    0x4098d9
  4098c6:	out    dx,eax
  4098c7:	add    edi,DWORD PTR [edx]
  4098c9:	pop    ds
  4098ca:	into   
  4098cb:	lea    ecx,[esi]
  4098cd:	leave  
  4098ce:	mov    al,0x8a
  4098d0:	inc    ch
  4098d2:	pusha  
  4098d3:	test   cl,0xe1
  4098d6:	mov    edi,0x805fc59c
  4098db:	xchg   edi,eax
  4098dc:	pop    es
  4098dd:	or     al,0x9e
  4098df:	ins    DWORD PTR es:[edi],dx
  4098e0:	std    
  4098e1:	jmp    0x4098cb
  4098e3:	jns    0x409904
  4098e5:	adc    dh,BYTE PTR [edi-0x35833a74]
  4098eb:	mov    cl,0x35
  4098ed:	and    BYTE PTR ss:[eax+0x6],cl
  4098f1:	stos   DWORD PTR es:[edi],eax
  4098f2:	cmp    DWORD PTR [ebp+esi*2+0x9],0x3e74dd04
  4098fa:	sahf   
  4098fb:	and    al,0x9b
  4098fd:	mov    ch,0xe7
  4098ff:	mov    al,0xed
  409901:	inc    eax
  409902:	stos   BYTE PTR es:[edi],al
  409903:	dec    ecx
  409904:	data16 xchg BYTE PTR es:[ebp-0x50129c78],cl
  40990c:	(bad)  
  40990d:	xchg   esp,eax
  40990e:	xchg   esi,eax
  40990f:	stos   DWORD PTR es:[edi],eax
  409910:	dec    ebp
  409911:	lea    ebx,[eax-0x4db97a8]
  409917:	adc    eax,0x481ebfbb
  40991c:	add    bh,BYTE PTR [ebx+ebx*2]
  40991f:	int3   
  409920:	arpl   WORD PTR [edx],sp
  409922:	inc    edi
  409923:	imul   esp,DWORD PTR [edx-0x44800e60],0xfb8fa5ac
  40992d:	mov    ah,0xc8
  40992f:	out    dx,al
  409930:	jmp    0xbe8a:0x31b0e4a0
  409937:	cmp    bh,BYTE PTR [eax]
  409939:	inc    ebp
  40993a:	int    0x71
  40993c:	cmp    BYTE PTR [ebp-0x57],0xb4
  409940:	outs   dx,DWORD PTR ds:[esi]
  409941:	loop   0x40992b
  409943:	mov    al,0x6a
  409945:	clc    
  409946:	pop    ebx
  409947:	ja     0x40991e
  409949:	daa    
  40994a:	xchg   esi,eax
  40994b:	sahf   
  40994c:	or     bh,ch
  40994e:	rcl    DWORD PTR [edx+0x2e],0x4f
  409952:	in     eax,dx
  409953:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409954:	sub    edi,DWORD PTR [edx-0x3d]
  409957:	cwde   
  409958:	or     al,BYTE PTR [edx+eax*2]
  40995b:	ret    
  40995c:	pop    ecx
  40995d:	cld    
  40995e:	(bad)  
  40995f:	cmc    
  409960:	loop   0x409955
  409962:	ins    DWORD PTR es:[edi],dx
  409963:	inc    eax
  409964:	and    DWORD PTR [edi+0x9098e17],ebx
  40996a:	add    dh,BYTE PTR [esi-0x51]
  40996d:	sbb    eax,0x3d81c831
  409972:	and    BYTE PTR [ebx-0x43e753d],dl
  409978:	fdivp  st(1),st
  40997a:	or     eax,0x11f24e47
  40997f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409980:	jmp    0x40993a
  409982:	cmovge esp,DWORD PTR [edx+0x505b6f4]
  409989:	rep lods al,BYTE PTR ds:[esi]
  40998b:	and    DWORD PTR [ebp+0x2fd4fa15],0xffffffc0
  409992:	daa    
  409993:	inc    ecx
  409994:	xchg   ebp,eax
  409995:	popa   
  409996:	aad    0x87
  409998:	mov    edx,0xd3766aa3
  40999d:	mov    ah,BYTE PTR ds:0x54905f07
  4099a3:	shl    BYTE PTR [ecx+0x7c],cl
  4099a6:	mov    ah,0x49
  4099a8:	(bad)  
  4099a9:	call   0x5af9:0xc339ed5f
  4099b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4099b1:	jp     0x4099e6
  4099b3:	(bad)  
  4099b4:	or     al,0xb2
  4099b6:	mov    eax,0x383ab3c
  4099bb:	lods   eax,DWORD PTR ds:[esi]
  4099bc:	mov    ebp,0xf058c2d7
  4099c1:	sti    
  4099c2:	add    DWORD PTR [eax],ecx
  4099c4:	pop    edi
  4099c5:	pop    esi
  4099c6:	pop    ebx
  4099c7:	leave  
  4099c8:	ret    
  4099c9:	push   ebp
  4099ca:	mov    ebp,esp
  4099cc:	sub    esp,0x44
  4099cf:	push   edi
  4099d0:	sub    DWORD PTR ds:0x42fd8a,0x50c
  4099da:	mov    eax,DWORD PTR [ebp+0xc]
  4099dd:	sbb    DWORD PTR ds:0x42e11c,edx
  4099e3:	mov    DWORD PTR [ebp-0x10],eax
  4099e6:	mov    eax,ds:0x42e297
  4099eb:	mov    edi,DWORD PTR ds:0x42e2a7
  4099f1:	sub    eax,edi
  4099f3:	imul   eax,DWORD PTR [eax+edi*1]
  4099f7:	mov    eax,DWORD PTR [ebp+0x8]
  4099fa:	mov    DWORD PTR [ebp+0x8],0xf89c8531
  409a01:	neg    edx
  409a03:	mov    DWORD PTR [ebp-0x20],0xf89c8530
  409a0a:	mov    edi,DWORD PTR ds:0x42e79c
  409a10:	mov    edi,DWORD PTR [edi]
  409a12:	or     DWORD PTR ds:0x42e124,edi
  409a18:	mov    edx,DWORD PTR [ebp+0x8]
  409a1b:	add    edi,0x5c8e
  409a21:	mov    DWORD PTR [ebp-0x40],eax
  409a24:	adc    DWORD PTR ds:0x42fcf9,0x342b
  409a2e:	mov    eax,0x7510855
  409a33:	xor    edi,ecx
  409a35:	xor    edx,eax
  409a37:	mov    edi,DWORD PTR ds:0x42e11c
  409a3d:	sbb    DWORD PTR ds:0x42e6eb,edi
  409a43:	mov    ecx,0x32729c
  409a48:	jmp    0x409e06
  409a4d:	arpl   WORD PTR [edx-0x6f],si
  409a50:	cmc    
  409a51:	xchg   ecx,eax
  409a52:	cmc    
  409a53:	arpl   WORD PTR [edx-0x1f],si
  409a56:	pop    ebp
  409a57:	das    
  409a58:	mul    DWORD PTR [eax-0x78aeb535]
  409a5e:	in     al,dx
  409a5f:	jo     0x409ad1
  409a61:	lahf   
  409a62:	jge    0x409ad4
  409a64:	jo     0x409a46
  409a66:	jno    0x409a20
  409a68:	aad    0x95
  409a6a:	das    
  409a6b:	leave  
  409a6c:	imul   ecx,DWORD PTR [edx-0x2c43683d],0xe042eab4
  409a76:	or     bl,BYTE PTR [edx]
  409a78:	pop    esp
  409a79:	mov    ch,BYTE PTR [esi]
  409a7b:	xchg   DWORD PTR [esi+0x3c6b4dbe],eax
  409a81:	mov    esi,0x5ebb7999
  409a86:	or     ebp,esi
  409a88:	in     al,0x46
  409a8a:	xchg   esp,eax
  409a8b:	aam    0xa3
  409a8d:	retf   0x33c1
  409a90:	sub    eax,0x9416f333
  409a95:	xchg   ebp,eax
  409a96:	sar    BYTE PTR [ebx],cl
  409a98:	mov    es,esp
  409a9a:	out    0x3e,eax
  409a9c:	add    BYTE PTR [esi],dh
  409a9e:	pop    ds
  409a9f:	pop    esp
  409aa0:	lods   eax,DWORD PTR ds:[esi]
  409aa1:	popf   
  409aa2:	jmp    0x3101c62e
  409aa7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409aa8:	add    al,0xd5
  409aaa:	inc    ecx
  409aab:	jge    0x409a9d
  409aad:	aaa    
  409aae:	pusha  
  409aaf:	fistp  QWORD PTR [eax+0x49d36fda]
  409ab5:	dec    esi
  409ab6:	add    eax,0x27588625
  409abb:	sahf   
  409abc:	sub    BYTE PTR cs:[edi+ebx*1+0xe],0x10
  409ac2:	ja     0x409a51
  409ac4:	mov    al,0x9e
  409ac6:	test   dl,bl
  409ac8:	pop    di
  409aca:	mov    bh,0x74
  409acc:	xchg   edi,eax
  409acd:	int3   
  409ace:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409acf:	add    al,0xa
  409ad1:	dec    BYTE PTR [ebx]
  409ad3:	imul   al
  409ad5:	div    DWORD PTR [ecx]
  409ad7:	push   ss
  409ad8:	aam    0x3d
  409ada:	dec    esp
  409adb:	ja     0x409acd
  409add:	mov    ds,edi
  409adf:	icebp  
  409ae0:	dec    ebx
  409ae1:	inc    ebp
  409ae2:	(bad)  
  409ae3:	out    0x1d,al
  409ae5:	gs ds mov cl,0x11
  409ae9:	nop
  409aea:	daa    
  409aeb:	jp     0x409b03
  409aed:	sub    ch,BYTE PTR [edx-0x5f680204]
  409af3:	int3   
  409af4:	test   eax,0xd37d5e0b
  409af9:	lods   eax,DWORD PTR ds:[esi]
  409afa:	fbstp  TBYTE PTR [ebp+0x2e08f36c]
  409b00:	push   ecx
  409b01:	or     eax,0x7f530a8a
  409b06:	sahf   
  409b07:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409b08:	pop    ebp
  409b09:	sbb    ebp,ebx
  409b0b:	inc    ebp
  409b0c:	fistp  WORD PTR [ebx-0x7516af52]
  409b12:	sahf   
  409b13:	jecxz  0x409b7b
  409b15:	jg     0x409ac0
  409b17:	cmc    
  409b18:	xor    eax,0x543669d7
  409b1d:	inc    esi
  409b1e:	stos   BYTE PTR es:[edi],al
  409b1f:	cmp    edx,DWORD PTR [ecx-0x1bbedfb]
  409b25:	adc    esi,DWORD PTR [bp+di+0x0]
  409b29:	enter  0xd128,0x95
  409b2d:	test   BYTE PTR [ecx+ebp*4-0x622c0c14],dl
  409b34:	push   es
  409b35:	js     0x409b8f
  409b37:	scas   eax,DWORD PTR es:[edi]
  409b38:	jo     0x409af4
  409b3a:	fmul   st,st(3)
  409b3c:	stos   BYTE PTR es:[edi],al
  409b3d:	and    ebx,esi
  409b3f:	(bad)
  409b42:	xchg   esp,eax
  409b43:	bound  edi,QWORD PTR [ecx+0x7b]
  409b46:	arpl   WORD PTR [edi+0x4e0e227],ax
  409b4c:	and    DWORD PTR [ecx],eax
  409b4e:	clc    
  409b4f:	lea    esi,[ebx]
  409b51:	xchg   esi,eax
  409b52:	pop    ecx
  409b53:	inc    edi
  409b54:	cmp    eax,0x4c4219e5
  409b59:	dec    edx
  409b5a:	and    al,0xd2
  409b5c:	dec    ebp
  409b5d:	loopne 0x409b62
  409b5f:	or     WORD PTR [ecx+0x38c5cffe],cx
  409b66:	add    al,0x5b
  409b68:	pop    es
  409b69:	and    eax,DWORD PTR [edi-0x67e6e885]
  409b6f:	add    eax,0x9d6ddb7d
  409b74:	lock ror BYTE PTR [esi],1
  409b77:	cmp    al,0x69
  409b79:	mov    bl,0xac
  409b7b:	inc    edi
  409b7c:	in     eax,dx
  409b7d:	adc    bl,ah
  409b7f:	mov    dl,BYTE PTR [ecx+0x2e]
  409b82:	int3   
  409b83:	or     al,bh
  409b85:	jg     0x409c04
  409b87:	retf   0xf0e
  409b8a:	xor    DWORD PTR [ecx+0xdda16e2],0xffffffd2
  409b91:	sar    cl,1
  409b93:	aad    0xf
  409b95:	cmp    al,0x8d
  409b97:	mov    fs,WORD PTR [ebp+0x17d741e0]
  409b9d:	jmp    DWORD PTR [ecx-0x13dbc47a]
  409ba3:	popf   
  409ba4:	sub    DWORD PTR [ecx-0x1c767d7a],esp
  409baa:	iret   
  409bab:	jle    0x409bfd
  409bad:	loope  0x409bf9
  409baf:	in     al,dx
  409bb0:	outs   dx,DWORD PTR ds:[esi]
  409bb1:	push   esp
  409bb2:	jnp    0x409b66
  409bb4:	xchg   ecx,eax
  409bb5:	in     eax,0xf3
  409bb7:	adc    cl,ch
  409bb9:	shr    BYTE PTR [ecx-0x6a],1
  409bbc:	mov    dl,0x75
  409bbe:	test   al,0x53
  409bc0:	mov    cl,0x6
  409bc2:	ds push ss
  409bc4:	std    
  409bc5:	sbb    al,0xe9
  409bc7:	pop    ecx
  409bc8:	fisub  WORD PTR [esp+edx*4+0x5f8c4335]
  409bcf:	shl    BYTE PTR [ebx+0x297f1b93],0xe8
  409bd6:	shr    bl,1
  409bd8:	fldcw  WORD PTR [edi]
  409bda:	mov    esi,0x53bfa727
  409bdf:	xor    eax,0x70c27721
  409be4:	cmc    
  409be5:	add    BYTE PTR [ecx-0x3471782],ch
  409beb:	imul   DWORD PTR [edx]
  409bed:	mov    eax,ds:0xc3aef61b
  409bf2:	es or  al,0x66
  409bf5:	aam    0x56
  409bf7:	sbb    eax,0xfee96512
  409bfc:	xchg   ecx,eax
  409bfd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409bfe:	lds    ebp,FWORD PTR [ebx-0x2b482d25]
  409c04:	shl    DWORD PTR [ebp-0x78],cl
  409c07:	mov    ah,0xfe
  409c09:	or     edx,DWORD PTR [ebx-0x4e]
  409c0c:	mov    dh,0x50
  409c0e:	xor    BYTE PTR [ebx],0xa6
  409c11:	push   eax
  409c12:	ja     0x409c4a
  409c14:	sbb    al,0xc8
  409c16:	mov    bh,0x3d
  409c18:	mov    ss,WORD PTR [eax-0x779c45de]
  409c1e:	sub    edx,DWORD PTR [edi]
  409c20:	dec    edx
  409c21:	cmp    esi,ebp
  409c23:	adc    BYTE PTR [ebx+eax*2-0x38b00ec5],dh
  409c2a:	imul   edx,esp,0xa
  409c2d:	add    eax,0xa8c8ee7e
  409c32:	pop    es
  409c33:	lahf   
  409c34:	dec    ecx
  409c35:	cmp    ebp,DWORD PTR [eax+eiz*1+0x23b765ca]
  409c3c:	cli    
  409c3d:	aas    
  409c3e:	add    DWORD PTR [edx+0x6457ddce],edi
  409c44:	sti    
  409c45:	cmc    
  409c46:	jno    0x409c1b
  409c48:	sbb    al,0x7c
  409c4a:	push   0xffffffe4
  409c4c:	mov    bh,BYTE PTR [ecx+0x9]
  409c4f:	push   0xfffffff5
  409c51:	adc    al,0x15
  409c53:	imul   esp,DWORD PTR ds:0x7c3a229f,0x457e704c
  409c5d:	add    ch,BYTE PTR [ecx+0x5d9ad53f]
  409c63:	sbb    eax,DWORD PTR [ebx+0x5a]
  409c66:	xor    eax,0xecb64dba
  409c6b:	(bad)  
  409c6c:	out    dx,eax
  409c6d:	mov    ah,0x3a
  409c6f:	adc    edx,edi
  409c71:	mov    DWORD PTR [esi+ecx*2+0x725f1c38],ebp
  409c78:	stc    
  409c79:	mov    WORD PTR [ecx+0x1e17b6bb],fs
  409c7f:	mov    ch,0x24
  409c81:	test   al,0x6a
  409c83:	add    al,0xaf
  409c85:	aad    0x75
  409c87:	adc    eax,0x1740fa3c
  409c8c:	loope  0x409d07
  409c8e:	rcr    BYTE PTR [eax+eiz*2-0x65ab5f62],0x1e
  409c96:	mov    cl,bl
  409c98:	arpl   bx,sp
  409c9a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409c9b:	cmp    dl,BYTE PTR [eax]
  409c9d:	dec    edi
  409c9e:	mov    ebp,esp
  409ca0:	out    dx,al
  409ca1:	add    DWORD PTR [edx+ebp*1],0x79
  409ca5:	xchg   ecx,eax
  409ca6:	stos   DWORD PTR es:[edi],eax
  409ca7:	push   ds
  409ca8:	sub    eax,0xbae52bbd
  409cad:	dec    edx
  409cae:	jnp    0x409ce1
  409cb0:	sbb    BYTE PTR [ecx+0x47],0x3a
  409cb4:	cli    
  409cb5:	jne    0x409c51
  409cb7:	sub    DWORD PTR [ecx],ecx
  409cb9:	mov    eax,ds:0x20d327cc
  409cbe:	leave  
  409cbf:	rcl    DWORD PTR [ebp+0x3cd8ac5f],0x9e
  409cc6:	jne    0x409c8f
  409cc8:	lahf   
  409cc9:	fwait
  409cca:	lahf   
  409ccb:	popf   
  409ccc:	loope  0x409d17
  409cce:	icebp  
  409ccf:	xchg   esi,eax
  409cd0:	(bad)  [ecx-0x71fcfe0]
  409cd6:	mov    ah,0x17
  409cd8:	daa    
  409cd9:	popf   
  409cda:	jecxz  0x409cbc
  409cdc:	popf   
  409cdd:	xor    ecx,esp
  409cdf:	loop   0x409cf3
  409ce1:	fst    DWORD PTR [ecx-0x26c07872]
  409ce7:	sub    eax,0xccf90f2
  409cec:	dec    edx
  409ced:	push   es
  409cee:	imul   eax,DWORD PTR [edi+eiz*2],0x12734151
  409cf5:	mov    BYTE PTR [ecx-0x75a6548f],bh
  409cfb:	cmp    dh,bh
  409cfd:	out    dx,al
  409cfe:	adc    eax,0xfe1d5b3f
  409d03:	pop    ecx
  409d04:	les    edi,FWORD PTR [eax]
  409d06:	pop    ebx
  409d07:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409d08:	fstp   DWORD PTR [edi-0x78b84d91]
  409d0e:	lds    esi,FWORD PTR [ecx+0xc]
  409d11:	push   eax
  409d12:	imul   esi,esi,0x1f
  409d15:	sub    ebx,ecx
  409d17:	push   esi
  409d18:	add    DWORD PTR [edi+0x58],esp
  409d1b:	or     eax,0xa19da969
  409d20:	repz cmp DWORD PTR [edi],esi
  409d23:	push   ds
  409d24:	jmp    0x823a8a29
  409d29:	xor    DWORD PTR [ebp+0x78],ebp
  409d2c:	or     DWORD PTR [ebx-0xe],esi
  409d2f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409d30:	shl    DWORD PTR gs:[ecx+0x6d750c6f],0x6f
  409d38:	dec    eax
  409d39:	lock out dx,al
  409d3b:	call   DWORD PTR [edi+ecx*2]
  409d3e:	or     bl,0x9f
  409d41:	xchg   BYTE PTR [ebp+0x5f],al
  409d44:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409d45:	pop    ebx
  409d46:	aam    0x9e
  409d48:	pop    ds
  409d49:	pop    eax
  409d4a:	xchg   bh,bh
  409d4c:	sbb    esi,ebx
  409d4e:	ret    0x28fc
  409d51:	retf   
  409d52:	loop   0x409d5c
  409d54:	das    
  409d55:	outs   dx,DWORD PTR ds:[esi]
  409d56:	mov    eax,ds:0x965c964a
  409d5b:	lock test al,bh
  409d5e:	test   eax,0xb8bdf160
  409d64:	mov    ch,0x2b
  409d66:	ret    0x4345
  409d69:	into   
  409d6a:	adc    esp,ebp
  409d6c:	mov    fs,WORD PTR [edi+0x35236994]
  409d72:	sbb    ebp,edx
  409d74:	ror    DWORD PTR [edx],0xc5
  409d77:	clc    
  409d78:	cmp    BYTE PTR [ebx-0x71],bh
  409d7b:	mov    bl,BYTE PTR [ecx]
  409d7d:	xchg   esi,eax
  409d7e:	xor    eax,0xe4ac49c8
  409d83:	aaa    
  409d84:	(bad)  
  409d85:	stc    
  409d86:	hlt    
  409d87:	add    edx,0x78
  409d8a:	adc    BYTE PTR [edi+0x49],ah
  409d8d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409d8e:	loop   0x409dbd
  409d90:	sti    
  409d91:	push   DWORD PTR [ebx+0xc4992dd]
  409d97:	sbb    DWORD PTR [ebx+0x266c00bc],esp
  409d9d:	pop    ecx
  409d9e:	int    0x71
  409da0:	xor    cl,BYTE PTR [ecx+0x676c90e]
  409da6:	xlat   BYTE PTR ds:[ebx]
  409da7:	data16 and BYTE PTR [ebp+0x5df24dc5],dl
  409dae:	xchg   esp,eax
  409daf:	push   0x364b4c5f
  409db4:	mov    ebp,0xcae1638e
  409db9:	dec    ebp
  409dba:	fld    DWORD PTR [eax]
  409dbc:	adc    DWORD PTR [ecx],ecx
  409dbe:	xchg   ah,dh
  409dc0:	outs   dx,BYTE PTR ds:[esi]
  409dc1:	call   0x6c27cf40
  409dc6:	stos   DWORD PTR es:[edi],eax
  409dc7:	jno    0x409d5a
  409dc9:	jecxz  0x409dcf
  409dcb:	lds    eax,FWORD PTR [ecx+0x5]
  409dce:	fldenv [esi-0x4c481292]
  409dd4:	xchg   ebx,eax
  409dd5:	sbb    ah,BYTE PTR [esi+edi*1-0x14]
  409dd9:	icebp  
  409dda:	jp     0x409e41
  409ddc:	imul   edx,DWORD PTR [edx-0x1be570e8],0x5f3e37be
  409de6:	inc    ecx
  409de7:	rol    BYTE PTR [esi-0x1c732e11],cl
  409ded:	repz mov ds:0x143f2940,eax
  409df3:	aas    
  409df4:	or     al,0x81
  409df6:	dec    edx
  409df7:	add    esp,DWORD PTR [ebx+edx*8]
  409dfa:	sbb    al,0x63
  409dfc:	in     al,dx
  409dfd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409dfe:	jb     0x409da1
  409e00:	cs (bad) 
  409e02:	pop    ebp
  409e03:	outs   dx,DWORD PTR ds:[esi]
  409e04:	push   ecx
  409e05:	push   0xd31d103
  409e0a:	mov    bh,ch
  409e0c:	inc    edx
  409e0d:	add    BYTE PTR [ecx+0x558bf855],cl
  409e13:	or     BYTE PTR [ebx],ah
  409e15:	cmp    eax,0x42fcf9
  409e1a:	xor    edx,eax
  409e1c:	adc    edi,DWORD PTR ds:0x42e124
  409e22:	add    edx,ecx
  409e24:	mov    DWORD PTR ds:0x42fd82,0x18
  409e2e:	cmp    DWORD PTR ds:0x42fd82,0x0
  409e35:	je     0x409e63
  409e3b:	cmp    DWORD PTR ds:0x42fd82,0x1a
  409e42:	jne    0x409e51
  409e48:	push   DWORD PTR [ebp-0xc]
  409e4b:	call   DWORD PTR ds:0x42e2e3
  409e51:	mov    edi,DWORD PTR ds:0x42fd82
  409e57:	dec    edi
  409e58:	mov    DWORD PTR ds:0x42fd82,edi
  409e5e:	jmp    0x409e2e
  409e63:	mov    DWORD PTR [ebp+0xc],edx
  409e66:	adc    DWORD PTR ds:0x42e703,0x3e25
  409e70:	jmp    0x40a22e
  409e75:	xlat   BYTE PTR ds:[ebx]
  409e76:	mov    edi,0x699269fa
  409e7b:	mul    DWORD PTR [ecx-0x79]
  409e7e:	mov    dh,0xc4
  409e80:	(bad)  
  409e81:	mov    ds:0x26dd3328,eax
  409e86:	call   0x7de00efb
  409e8b:	jo     0x409efd
  409e8d:	sbb    al,0xc8
  409e8f:	add    edi,ebx
  409e91:	sbb    eax,0xfd2ff0fc
  409e96:	pop    eax
  409e97:	jp     0x409e55
  409e99:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409e9a:	sbb    bh,dl
  409e9c:	push   esp
  409e9d:	jg     0x409e63
  409e9f:	sahf   
  409ea0:	out    dx,al
  409ea1:	int3   
  409ea2:	push   es
  409ea3:	push   ecx
  409ea4:	pop    ebx
  409ea5:	ret    0x9add
  409ea8:	stos   DWORD PTR es:[edi],eax
  409ea9:	and    eax,0x12244485
  409eae:	mov    BYTE PTR [eax-0x637d73db],cl
  409eb4:	fidiv  DWORD PTR [ebp*2-0x1307bd45]
  409ebb:	inc    ebp
  409ebc:	and    cl,dh
  409ebe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409ebf:	(bad)  
  409ec0:	dec    esp
  409ec1:	sahf   
  409ec2:	cwde   
  409ec3:	jnp    0x409ebc
  409ec5:	cld    
  409ec6:	xor    al,0x70
  409ec8:	in     eax,dx
  409ec9:	(bad)
  409ecc:	fadd   QWORD PTR [eax+0x10]
  409ecf:	neg    BYTE PTR [ecx-0x7cad232d]
  409ed5:	mov    BYTE PTR [eax+0x10639a02],dl
  409edb:	mov    ebp,0xf7bee37d
  409ee0:	or     esi,DWORD PTR [ebx-0x384f907b]
  409ee6:	pop    ecx
  409ee7:	push   ebp
  409ee8:	pop    DWORD PTR [esi+0x17]
  409eeb:	mov    esi,0xf26f95d0
  409ef0:	mov    ?,WORD PTR [ecx+0x3339822e]
  409ef6:	add    ch,bl
  409ef8:	icebp  
  409ef9:	fdiv   DWORD PTR [ebx-0x44]
  409efc:	dec    eax
  409efd:	stos   BYTE PTR es:[edi],al
  409efe:	add    ebx,edi
  409f00:	cmp    edx,eax
  409f02:	inc    al
  409f04:	xchg   ecx,eax
  409f05:	ins    BYTE PTR es:[edi],dx
  409f06:	sub    BYTE PTR [ebx+0x1],al
  409f09:	sbb    ebx,0xffffffe2
  409f0c:	or     eax,0xdbd0223e
  409f11:	xor    esi,ebp
  409f13:	cmp    ecx,ebx
  409f15:	test   eax,0xd6fd170a
  409f1a:	pop    eax
  409f1b:	mov    DWORD PTR [edx-0x72],ebx
  409f1e:	dec    edi
  409f1f:	or     esi,DWORD PTR [esi]
  409f21:	out    dx,al
  409f22:	add    ch,ah
  409f24:	dec    edx
  409f25:	pop    edi
  409f26:	add    esp,DWORD PTR [eax+ebx*2-0x1e2c91d4]
  409f2d:	fwait
  409f2e:	cmp    al,0xe8
  409f30:	into   
  409f31:	cmp    eax,DWORD PTR [ebx]
  409f33:	sbb    eax,0x25a0d906
  409f38:	test   BYTE PTR [edx-0x19],cl
  409f3b:	and    ah,BYTE PTR [edx+esi*4+0x6b]
  409f3f:	out    dx,eax
  409f40:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409f41:	retf   
  409f42:	sbb    eax,0x500a5ac8
  409f47:	shr    DWORD PTR [ecx-0x2daaa742],0x6
  409f4e:	xchg   ebp,eax
  409f4f:	popf   
  409f50:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409f51:	addr16 aas 
  409f53:	mov    bl,0xaf
  409f55:	xchg   edi,eax
  409f56:	lods   al,BYTE PTR ds:[esi]
  409f57:	xlat   BYTE PTR ds:[ebx]
  409f58:	push   eax
  409f59:	sar    BYTE PTR [ecx+ebx*1],1
  409f5c:	xchg   BYTE PTR [ebx-0x4bdc3828],cl
  409f62:	jl     0x409fd4
  409f64:	hlt    
  409f65:	enter  0x6334,0x43
  409f69:	push   esi
  409f6a:	xor    DWORD PTR [eax-0x7c605828],eax
  409f70:	xor    al,0x97
  409f72:	scas   al,BYTE PTR es:[edi]
  409f73:	bound  eax,QWORD PTR [ebx-0xd7def85]
  409f79:	jle    0x409fba
  409f7b:	jno    0x409f07
  409f7d:	les    esp,FWORD PTR [ebx-0x41]
  409f80:	call   0x13e8:0x470f269a
  409f87:	jmp    0xff9c:0x6d0cd8f6
  409f8e:	test   eax,0x4f536836
  409f93:	fisttp WORD PTR [esi-0x44]
  409f96:	sub    bh,cl
  409f98:	mov    DWORD PTR [ebx],edx
  409f9a:	fild   WORD PTR [ebx+ecx*1-0x48]
  409f9e:	sub    BYTE PTR [eax+0x1897876c],bl
  409fa4:	push   cs
  409fa5:	aad    0xbf
  409fa7:	test   DWORD PTR [ebx+0x5ee01cdb],ecx
  409fad:	add    eax,0xd4be664d
  409fb2:	push   cs
  409fb3:	sub    eax,0xa130f362
  409fb8:	lods   al,BYTE PTR ds:[esi]
  409fb9:	nop
  409fba:	cli    
  409fbb:	cmp    ah,BYTE PTR [ebp+0xbb2be04]
  409fc1:	hlt    
  409fc2:	jle    0x40a015
  409fc4:	xlat   BYTE PTR ds:[ebx]
  409fc5:	rcr    BYTE PTR [ebx],1
  409fc7:	call   0xb98f:0x199bd245
  409fce:	or     edi,DWORD PTR [edx-0x15eb8bdc]
  409fd4:	pop    ds
  409fd5:	mov    gs,WORD PTR [edi]
  409fd7:	mov    ds:0xce761b23,al
  409fdc:	pop    ecx
  409fdd:	push   ss
  409fde:	sub    al,0x58
  409fe0:	jg     0x40a00f
  409fe2:	mov    ah,0x25
  409fe4:	mov    dh,0xd0
  409fe6:	adc    al,0x97
  409fe8:	inc    ebp
  409fe9:	add    al,0x9d
  409feb:	in     al,dx
  409fec:	xchg   BYTE PTR [edi+ebx*2],dl
  409fef:	sub    al,0x6d
  409ff1:	push   ds
  409ff2:	or     BYTE PTR [ecx+ecx*1+0x6f],0x5f
  409ff7:	iret   
  409ff8:	aad    0x22
  409ffa:	retf   
  409ffb:	and    edi,esp
  409ffd:	mov    dl,0xd2
  409fff:	mov    ebp,0xd2ff4ef2
  40a004:	sbb    BYTE PTR [esi],0x68
  40a007:	inc    ecx
  40a008:	and    ah,BYTE PTR [edi-0x6ac273c6]
  40a00e:	dec    ebp
  40a00f:	inc    ebp
  40a010:	cmp    BYTE PTR ds:0x574a257b,0x9b
  40a017:	ficomp WORD PTR es:[esp+ebp*8+0x445c862f]
  40a01f:	jns    0x409fe1
  40a021:	push   ecx
  40a022:	fs push edi
  40a024:	inc    esi
  40a025:	dec    ebp
  40a026:	rol    BYTE PTR [esi-0x3102f966],1
  40a02c:	or     DWORD PTR [edx+0x58fed777],ebp
  40a032:	imul   esp,DWORD PTR [edx],0x71184afd
  40a038:	add    eax,0x143f0bad
  40a03d:	pop    sp
  40a03f:	fwait
  40a040:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a041:	pushf  
  40a042:	cmp    BYTE PTR [ebx+0x47ef71],ah
  40a048:	pop    edx
  40a049:	movq   mm1,QWORD PTR [ebx]
  40a04c:	call   0x60eb:0xe66d047c
  40a053:	test   DWORD PTR [ecx+0x47cfc981],ebp
  40a059:	cmp    al,0xfb
  40a05b:	jae    0x40a0b6
  40a05d:	pop    edx
  40a05e:	pop    ebp
  40a05f:	repnz pop eax
  40a061:	das    
  40a062:	(bad)  
  40a063:	lahf   
  40a064:	cmc    
  40a065:	in     eax,dx
  40a066:	xchg   edi,eax
  40a067:	or     eax,ecx
  40a069:	mov    ah,0x45
  40a06b:	push   es
  40a06c:	cmp    eax,0xc919ff4d
  40a071:	mov    BYTE PTR [edi],dh
  40a073:	mov    ch,0x35
  40a075:	loope  0x40a07b
  40a077:	mov    edi,edi
  40a079:	mov    cl,0x70
  40a07b:	adc    ebx,DWORD PTR [ebx-0x8]
  40a07e:	and    cl,BYTE PTR ds:0x316ab0f4
  40a084:	(bad)  
  40a085:	or     BYTE PTR [eax+0x1b37f6c],al
  40a08b:	push   0xf60bfd95
  40a090:	mov    WORD PTR [edi+ecx*1+0x727700b4],?
  40a097:	xchg   DWORD PTR [ecx-0x5c],edi
  40a09a:	fisub  WORD PTR [ecx-0x7aacf996]
  40a0a0:	ficomp WORD PTR ds:0x5af12fb1
  40a0a6:	mov    dh,0x2f
  40a0a8:	arpl   WORD PTR [edi-0xae6936e],dx
  40a0ae:	push   es
  40a0af:	jmp    0xf1d20562
  40a0b4:	(bad)  
  40a0b5:	(bad)  
  40a0b6:	jae    0x40a0db
  40a0b8:	add    bl,0x85
  40a0bb:	xor    eax,edi
  40a0bd:	jne    0x40a127
  40a0bf:	jae    0x40a115
  40a0c1:	dec    ecx
  40a0c2:	in     eax,0xdd
  40a0c4:	aam    0xe9
  40a0c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a0c7:	popa   
  40a0c8:	sub    al,0x6
  40a0ca:	mov    BYTE PTR [edx+0x5a],ch
  40a0cd:	and    esi,DWORD PTR [esi+0x481030fd]
  40a0d3:	pop    ds
  40a0d4:	cmp    ebp,DWORD PTR [ecx-0x3bf04bee]
  40a0da:	iret   
  40a0db:	sbb    eax,DWORD PTR [esi+0x584e1223]
  40a0e1:	mov    ah,0x15
  40a0e3:	cwde   
  40a0e4:	jno    0x40a0df
  40a0e6:	mov    eax,ds:0x4ac6570f
  40a0eb:	jg     0x40a0be
  40a0ed:	push   ebx
  40a0ee:	sub    ch,ch
  40a0f0:	xlat   BYTE PTR ds:[ebx]
  40a0f1:	push   ecx
  40a0f2:	lds    ebx,FWORD PTR [edx+0x7c]
  40a0f5:	aam    0xc3
  40a0f7:	mov    ds,WORD PTR [esi]
  40a0f9:	(bad)  
  40a0fb:	jecxz  0x40a172
  40a0fd:	shl    DWORD PTR [esi-0x35],0xcd
  40a101:	fbstp  TBYTE PTR [eax+0x1c]
  40a104:	or     BYTE PTR [edx],ah
  40a106:	cvttps2pi mm6,xmm2
  40a109:	pop    esp
  40a10a:	out    0x4f,eax
  40a10c:	push   esi
  40a10d:	mov    ecx,0xd43d744d
  40a112:	sub    al,0x7
  40a114:	shl    BYTE PTR [edi+0x44],1
  40a117:	push   0x9fd2a022
  40a11c:	inc    ebp
  40a11d:	or     al,0x65
  40a11f:	mov    edx,0xb723d8c8
  40a124:	sbb    ebx,DWORD PTR [eax-0x27]
  40a127:	fiadd  DWORD PTR [esi+0x53]
  40a12a:	stos   DWORD PTR es:[edi],eax
  40a12b:	test   al,0xd6
  40a12d:	inc    ecx
  40a12e:	lock adc bl,cl
  40a131:	inc    ebp
  40a132:	mov    esp,?
  40a134:	icebp  
  40a135:	mov    eax,0x8e0e2879
  40a13a:	in     eax,0x4c
  40a13c:	in     eax,0xf2
  40a13e:	cdq    
  40a13f:	push   edi
  40a140:	cld    
  40a141:	adc    DWORD PTR [eax+ebp*8],edx
  40a144:	or     al,ch
  40a146:	pusha  
  40a147:	sub    ecx,esi
  40a149:	popf   
  40a14a:	div    BYTE PTR [edi+0x50]
  40a14d:	cmp    ecx,0x41
  40a150:	cmp    al,0x32
  40a152:	jns    0x40a15f
  40a154:	shl    edi,1
  40a156:	pop    es
  40a157:	lds    ebx,FWORD PTR [edi]
  40a159:	or     eax,0xec8125f0
  40a15e:	jle    0x40a10b
  40a160:	dec    ebx
  40a161:	or     al,BYTE PTR [ecx]
  40a163:	ror    al,cl
  40a165:	xchg   ebp,eax
  40a166:	mov    al,ds:0x9ba76ba5
  40a16b:	pusha  
  40a16c:	jo     0x40a0f0
  40a16e:	or     BYTE PTR [edi],cl
  40a170:	push   ss
  40a171:	mov    bl,0xe2
  40a173:	sbb    eax,0x5eda65d9
  40a178:	stos   BYTE PTR es:[edi],al
  40a179:	into   
  40a17a:	adc    al,BYTE PTR [esi+0x49aaf103]
  40a180:	jmp    0x6eb5:0x4f0aefdd
  40a187:	mov    edx,0x55120430
  40a18c:	or     DWORD PTR [eax+ecx*1-0x26318597],esi
  40a193:	dec    esi
  40a194:	aaa    
  40a195:	shr    DWORD PTR [eax-0x1],cl
  40a198:	mov    esi,DWORD PTR [ebp-0x231e120d]
  40a19e:	lods   eax,DWORD PTR ds:[esi]
  40a19f:	sbb    DWORD PTR [esp+ecx*2-0x4d],0xd7cb36d0
  40a1a7:	xchg   ebx,eax
  40a1a8:	fs sub eax,0x7968b02f
  40a1ae:	pop    esi
  40a1af:	cld    
  40a1b0:	jle    0x40a15a
  40a1b2:	lods   al,BYTE PTR ds:[esi]
  40a1b3:	jae    0x40a148
  40a1b5:	ror    DWORD PTR [edx-0x324e041d],1
  40a1bb:	xchg   edx,eax
  40a1bc:	mov    bh,0x91
  40a1be:	test   al,0xe4
  40a1c0:	and    BYTE PTR [esp+edi*1],dl
  40a1c3:	or     eax,DWORD PTR [edi]
  40a1c5:	pop    esi
  40a1c6:	pusha  
  40a1c7:	jmp    0x40a1fd
  40a1c9:	fld    TBYTE PTR [eax-0x7869d1e5]
  40a1cf:	ins    BYTE PTR es:[edi],dx
  40a1d0:	jns    0x40a1e8
  40a1d2:	sbb    DWORD PTR [edi],esi
  40a1d4:	mov    bl,0x7d
  40a1d6:	mov    BYTE PTR [ecx+0x10aedbea],dl
  40a1dc:	aaa    
  40a1dd:	mov    ebp,0xf5c2efb3
  40a1e2:	sti    
  40a1e3:	je     0x40a221
  40a1e5:	lods   al,BYTE PTR ds:[esi]
  40a1e6:	loope  0x40a1ad
  40a1e8:	sbb    al,0x4d
  40a1ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a1eb:	push   ebx
  40a1ec:	cmc    
  40a1ed:	data16 mov fs,WORD PTR [ebx+edx*4]
  40a1f1:	jmp    0x2f0e:0xf3d2101e
  40a1f8:	fdivr  DWORD PTR [ebx-0x5d]
  40a1fb:	retf   0xb57d
  40a1fe:	rcr    BYTE PTR [ebx+eax*1+0x70b4ab89],0x3b
  40a206:	out    dx,eax
  40a207:	out    0x18,al
  40a209:	add    dl,BYTE PTR [ecx+0xaf2e5ab]
  40a20f:	cmp    ecx,ecx
  40a211:	inc    ebx
  40a212:	(bad)  
  40a213:	hlt    
  40a214:	lds    edx,FWORD PTR [edi+0xe]
  40a217:	mov    ecx,0xbd793ad
  40a21c:	dec    eax
  40a21d:	push   cs
  40a21e:	(bad)  
  40a21f:	arpl   WORD PTR [esp+edx*2-0x29e43ba5],di
  40a226:	out    dx,eax
  40a227:	in     eax,0xfb
  40a229:	fld    DWORD PTR [ebx]
  40a22b:	pushf  
  40a22c:	repnz mov DWORD PTR ds:[ebp-0x4],0xf89c85d1
  40a235:	mov    DWORD PTR [ebp-0x28],0xf89c8533
  40a23c:	adc    edx,edx
  40a23e:	mov    DWORD PTR [ebp-0x2c],0xf89c8532
  40a245:	and    DWORD PTR ds:0x42fced,0x0
  40a24f:	jmp    0x40a263
  40a254:	xor    edx,edx
  40a256:	or     edx,DWORD PTR ds:0x42fced
  40a25c:	inc    edx
  40a25d:	mov    DWORD PTR ds:0x42fced,edx
  40a263:	cmp    DWORD PTR ds:0x42fced,0x10
  40a26a:	jae    0x40a2a2
  40a270:	cmp    DWORD PTR ds:0x42fced,0x14
  40a277:	jne    0x40a297
  40a27d:	push   0x83c5
  40a282:	push   0x5a78
  40a287:	push   0x49ef
  40a28c:	push   0x22e4
  40a291:	call   DWORD PTR ds:0x42e2e7
  40a297:	jmp    0x40a254
  40a29c:	add    DWORD PTR ds:0x42e128,edx
  40a2a2:	mov    DWORD PTR [ebp-0x30],0xf89c853d
  40a2a9:	and    DWORD PTR ds:0x42e70f,0x7d59
  40a2b3:	jmp    0x40a671
  40a2b8:	into   
  40a2b9:	iret   
  40a2ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a2bb:	cmp    esp,DWORD PTR [ebp+0x7cc97171]
  40a2c1:	sbb    bl,BYTE PTR [edi+0x2b]
  40a2c4:	leave  
  40a2c5:	mov    al,ds:0xf5454b95
  40a2ca:	jo     0x40a33c
  40a2cc:	lahf   
  40a2cd:	jge    0x40a33f
  40a2cf:	jo     0x40a302
  40a2d1:	and    DWORD PTR ds:0x44a3e727,ebx
  40a2d7:	das    
  40a2d8:	and    ecx,edx
  40a2da:	mov    ch,cl
  40a2dc:	and    ebp,DWORD PTR [ecx-0x492baa59]
  40a2e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a2e3:	xchg   ebp,eax
  40a2e4:	int    0x41
  40a2e6:	dec    ebp
  40a2e7:	jb     0x40a35a
  40a2e9:	cli    
  40a2ea:	jecxz  0x40a314
  40a2ec:	sub    al,0xf9
  40a2ee:	mov    esi,0x7e3c4bf5
  40a2f3:	shl    esi,cl
  40a2f5:	pop    ebx
  40a2f6:	out    dx,al
  40a2f7:	and    edx,DWORD PTR [ebx+0x2a8318d9]
  40a2fd:	(bad)  
  40a2fe:	sahf   
  40a2ff:	in     al,0x1
  40a301:	arpl   si,dx
  40a303:	inc    edx
  40a304:	sbb    eax,0x415caf8a
  40a309:	or     DWORD PTR [edi],esp
  40a30b:	dec    esp
  40a30c:	aaa    
  40a30d:	dec    eax
  40a30e:	ins    BYTE PTR es:[edi],dx
  40a30f:	lods   al,BYTE PTR ds:[esi]
  40a310:	retf   0xd1c0
  40a313:	sub    DWORD PTR [eax],ecx
  40a315:	test   al,0xdc
  40a317:	mov    DWORD PTR [ebp+eiz*1-0x14],esi
  40a31b:	fwait
  40a31c:	push   esi
  40a31d:	data16 (bad) 
  40a31f:	sub    eax,0x37f66f87
  40a324:	sbb    al,BYTE PTR [eax-0x401e48ae]
  40a32a:	das    
  40a32b:	sub    al,0xdf
  40a32d:	outs   dx,DWORD PTR ds:[esi]
  40a32e:	mov    esi,0xefd610b9
  40a333:	lods   eax,DWORD PTR ds:[esi]
  40a334:	loope  0x40a2e0
  40a336:	out    0x69,al
  40a338:	sub    ch,BYTE PTR [ebx]
  40a33a:	fiadd  WORD PTR ds:0xc978bd56
  40a340:	add    DWORD PTR [esi+0x15],esi
  40a343:	dec    edx
  40a344:	enter  0x5c80,0x80
  40a348:	hlt    
  40a349:	sar    DWORD PTR [edi],1
  40a34b:	out    0xfb,eax
  40a34d:	sub    edx,ebp
  40a34f:	out    0x5f,al
  40a351:	outs   dx,DWORD PTR ds:[esi]
  40a352:	mov    ebx,0x22c4aa04
  40a357:	xor    BYTE PTR [ecx-0x43e4af61],al
  40a35d:	retf   0x51f5
  40a360:	or     BYTE PTR [ecx],0x19
  40a363:	iret   
  40a364:	jmp    0x40a359
  40a366:	or     BYTE PTR [edi-0x20],ch
  40a369:	xchg   ebp,eax
  40a36a:	xchg   edx,eax
  40a36b:	mov    si,0x4d82
  40a36f:	jl     0x40a3ec
  40a371:	sub    eax,0xf2a6c843
  40a376:	push   edi
  40a377:	push   edi
  40a378:	xor    al,0x38
  40a37a:	push   edi
  40a37b:	lods   al,BYTE PTR ds:[esi]
  40a37c:	push   0xffffffca
  40a37e:	lods   eax,DWORD PTR ds:[esi]
  40a37f:	push   es
  40a380:	or     eax,0xc15d8c29
  40a385:	aaa    
  40a386:	repz hlt 
  40a388:	adc    eax,0x2512eb3e
  40a38d:	out    0xbd,al
  40a38f:	xlat   BYTE PTR ds:[ebx]
  40a391:	dec    edi
  40a392:	aas    
  40a393:	test   DWORD PTR [edi-0x7f],ebx
  40a396:	mov    al,ds:0xe98d469a
  40a39b:	pop    edx
  40a39c:	push   0x723164cf
  40a3a1:	sub    BYTE PTR [edi+0x7a43022e],cl
  40a3a7:	mov    BYTE PTR [edx-0x65],ah
  40a3aa:	retf   0x4360
  40a3ad:	or     DWORD PTR [esi],ebp
  40a3af:	lahf   
  40a3b0:	les    esi,FWORD PTR [ebx+0x6f]
  40a3b3:	dec    esp
  40a3b4:	xchg   edx,eax
  40a3b5:	cmc    
  40a3b6:	add    bl,BYTE PTR [eax+eax*1+0x45ef6be7]
  40a3bd:	push   edi
  40a3be:	mov    ebp,edx
  40a3c0:	xor    ebx,edi
  40a3c2:	push   ecx
  40a3c3:	scas   al,BYTE PTR es:[edi]
  40a3c4:	icebp  
  40a3c5:	test   DWORD PTR [ecx-0x5d9bbc54],esp
  40a3cb:	ja     0x40a37e
  40a3cd:	in     al,0x8b
  40a3cf:	in     eax,0x9d
  40a3d1:	cld    
  40a3d2:	xor    al,BYTE PTR [ebp-0x7f]
  40a3d5:	xchg   ebp,eax
  40a3d6:	es jb  0x40a3ab
  40a3d9:	mov    ebx,0x87ce8543
  40a3de:	out    dx,eax
  40a3df:	sahf   
  40a3e0:	mov    ah,0xbd
  40a3e2:	and    bh,BYTE PTR [ebp+0x5dd19762]
  40a3e8:	test   eax,0x2da8fe28
  40a3ed:	dec    ebx
  40a3ee:	lods   al,BYTE PTR ds:[esi]
  40a3ef:	fst    DWORD PTR [ebx+0x14]
  40a3f2:	mov    cl,dl
  40a3f4:	pop    ds
  40a3f5:	sub    ah,ch
  40a3f7:	add    DWORD PTR [esi-0x66ffc9b6],ecx
  40a3fd:	add    edx,DWORD PTR [eax]
  40a3ff:	dec    esp
  40a400:	add    BYTE PTR [edi],dh
  40a402:	lea    edx,[edi-0x47]
  40a405:	mov    cl,BYTE PTR [esi-0x4237ac96]
  40a40b:	pusha  
  40a40c:	xchg   esi,eax
  40a40d:	jno    0x40a44e
  40a40f:	cmp    eax,0x2fed30eb
  40a414:	in     eax,dx
  40a415:	fnsave [edi]
  40a417:	out    0xb4,al
  40a419:	imul   ebx,DWORD PTR fs:[esi-0x58],0x40
  40a41e:	cs repz retf 0x2ff9
  40a423:	(bad)  
  40a425:	adc    dl,BYTE PTR [edi-0x6]
  40a428:	fdiv   QWORD PTR [edi+0x4cf78cee]
  40a42e:	sub    eax,0x23008860
  40a433:	adc    al,0x7e
  40a435:	add    al,BYTE PTR [eax-0x65]
  40a438:	cmp    edi,DWORD PTR [ecx+0x5d]
  40a43b:	xchg   BYTE PTR [ecx+0x5438ca96],bh
  40a441:	pop    ebp
  40a442:	je     0x40a47a
  40a444:	jecxz  0x40a4c2
  40a446:	gs cmp al,0x22
  40a449:	mov    edx,0x9e2eaa54
  40a44e:	push   ebp
  40a44f:	ret    
  40a450:	or     edi,DWORD PTR [eax]
  40a452:	add    bl,bh
  40a454:	add    esp,DWORD PTR [ecx]
  40a456:	jne    0x40a489
  40a458:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a459:	and    BYTE PTR [esi-0x6d],dl
  40a45c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a45d:	(bad)  
  40a45f:	pop    ecx
  40a460:	jle    0x40a48a
  40a462:	repnz push edx
  40a464:	mov    DWORD PTR [edi],eax
  40a466:	push   0x92380868
  40a46b:	icebp  
  40a46c:	jecxz  0x40a46e
  40a46e:	cmp    bl,dl
  40a470:	jecxz  0x40a4c5
  40a472:	pop    edx
  40a473:	mov    ch,0x8a
  40a475:	(bad)  
  40a476:	cmp    ebx,esi
  40a478:	mov    dl,BYTE PTR [edx+0x773f757]
  40a47e:	cmp    al,0x24
  40a480:	xor    BYTE PTR [edx],ch
  40a482:	das    
  40a483:	test   DWORD PTR [edi+0xf38f0bf],ebp
  40a489:	or     DWORD PTR [ebp+ecx*2-0x7f],edx
  40a48d:	add    DWORD PTR [edi-0x44],ebp
  40a490:	test   eax,0x54e9485c
  40a495:	bound  esi,QWORD PTR [ebx-0x101808b9]
  40a49b:	xor    BYTE PTR [ecx],0xc2
  40a49e:	add    bl,BYTE PTR [esi-0x25]
  40a4a1:	in     al,dx
  40a4a2:	cmp    al,BYTE PTR [esi-0x67611511]
  40a4a8:	sar    DWORD PTR [ebp+0x1e],0xc6
  40a4ac:	fidiv  WORD PTR ss:[eax]
  40a4af:	(bad)  [edi-0x13]
  40a4b2:	adc    eax,0x9e1f027b
  40a4b7:	stos   DWORD PTR es:[edi],eax
  40a4b8:	mov    esi,0xb7d35a8
  40a4bd:	cld    
  40a4be:	in     al,0x1b
  40a4c0:	retf   0x2afd
  40a4c3:	push   esp
  40a4c4:	pusha  
  40a4c5:	bound  ebp,QWORD PTR [edi-0x6e]
  40a4c8:	mov    ch,0xce
  40a4ca:	sti    
  40a4cb:	sbb    DWORD PTR [edx],ecx
  40a4cd:	pop    es
  40a4ce:	push   0xb34400a5
  40a4d3:	pop    edi
  40a4d4:	ins    DWORD PTR es:[edi],dx
  40a4d5:	sbb    ecx,DWORD PTR [ebp+ebx*8+0x2a]
  40a4d9:	(bad)  
  40a4da:	adc    BYTE PTR [edx],bh
  40a4dc:	dec    ebx
  40a4dd:	mov    al,0x3b
  40a4df:	js     0x40a47b
  40a4e1:	mov    bl,BYTE PTR [eax-0x2eb3b9ae]
  40a4e7:	inc    esp
  40a4e8:	mov    eax,0xc9e5187d
  40a4ed:	shl    BYTE PTR [ebx-0x37],cl
  40a4f0:	xchg   esp,eax
  40a4f1:	xchg   esp,eax
  40a4f2:	cmp    BYTE PTR [edi+esi*2],bl
  40a4f5:	xchg   ebx,eax
  40a4f6:	aaa    
  40a4f7:	pop    esp
  40a4f8:	(bad)  
  40a4f9:	adc    BYTE PTR [ecx+0x771d142c],ah
  40a4ff:	in     eax,dx
  40a500:	mov    esp,0xf8b5e9e
  40a505:	pop    edx
  40a506:	fidivr WORD PTR [edi+eiz*4]
  40a509:	cli    
  40a50a:	loopne 0x40a572
  40a50c:	clc    
  40a50d:	mov    bl,BYTE PTR [eax+0x47]
  40a510:	add    ebp,esi
  40a512:	ins    BYTE PTR es:[edi],dx
  40a513:	pushf  
  40a514:	jge    0x40a4c3
  40a516:	fst    st(1)
  40a518:	scas   al,BYTE PTR es:[edi]
  40a519:	test   BYTE PTR [edx-0x2f0a459],ch
  40a51f:	cmp    esi,ebp
  40a521:	loop   0x40a51e
  40a523:	retf   
  40a524:	out    0xe0,eax
  40a526:	mov    BYTE PTR [esi],cl
  40a528:	adc    DWORD PTR [ecx],esi
  40a52a:	imul   edx,DWORD PTR [edx],0xc3ab894e
  40a530:	fsubr  DWORD PTR [edi-0x3b85fe6b]
  40a536:	in     eax,dx
  40a537:	pop    ss
  40a538:	cmp    bl,cl
  40a53a:	ss test eax,0xdf5427e3
  40a540:	adc    BYTE PTR [esi],dh
  40a542:	xchg   ebx,eax
  40a543:	and    eax,0xcc5e9562
  40a548:	dec    eax
  40a549:	xchg   esp,eax
  40a54a:	or     ecx,DWORD PTR [ecx-0x47a89ebc]
  40a550:	push   0x58
  40a552:	xlat   BYTE PTR ds:[ebx]
  40a553:	jge    0x40a5c3
  40a555:	lock into 
  40a557:	(bad)  
  40a558:	xor    eax,0xc7b9fd7b
  40a55d:	push   edi
  40a55e:	add    DWORD PTR [ebx-0x707759ed],ebx
  40a564:	out    0x27,eax
  40a566:	(bad)  [ebx]
  40a568:	imul   ebp,DWORD PTR [edi-0x63],0xe8a071a6
  40a56f:	fs in  al,dx
  40a571:	rol    DWORD PTR [edx+0x7],1
  40a574:	push   cs
  40a575:	repnz out 0x99,eax
  40a578:	lods   eax,DWORD PTR ds:[esi]
  40a579:	(bad)  
  40a57b:	fstp   DWORD PTR [ecx]
  40a57d:	aaa    
  40a57e:	push   ecx
  40a57f:	inc    ebx
  40a580:	fsubr  DWORD PTR [eax+eax*8]
  40a583:	xor    dh,bh
  40a585:	outs   dx,DWORD PTR ds:[esi]
  40a586:	out    dx,al
  40a587:	stc    
  40a588:	push   DWORD PTR [edi-0x26]
  40a58b:	or     al,0x68
  40a58d:	xor    eax,0x77a48619
  40a592:	jne    0x40a55a
  40a594:	mov    eax,0x94531d31
  40a599:	pop    edi
  40a59a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a59b:	and    DWORD PTR [edx],ecx
  40a59d:	add    al,0xf6
  40a59f:	bound  ecx,QWORD PTR [eax+0xf6ab3cb]
  40a5a5:	lock or bl,ch
  40a5a8:	lods   al,BYTE PTR ds:[esi]
  40a5a9:	jg     0x40a557
  40a5ab:	pop    ds
  40a5ac:	mov    cl,0xa1
  40a5ae:	mov    ah,0x60
  40a5b0:	pop    ds
  40a5b1:	ss xchg ecx,eax
  40a5b3:	xchg   DWORD PTR ss:[edi-0x10],edi
  40a5b7:	mov    BYTE PTR [ecx],0xeb
  40a5ba:	ret    0x9223
  40a5bd:	cli    
  40a5be:	inc    ebx
  40a5bf:	dec    ebx
  40a5c0:	pop    ebp
  40a5c1:	call   0xa734:0x727e01bd
  40a5c8:	(bad)  
  40a5c9:	into   
  40a5ca:	push   ebp
  40a5cb:	mov    ecx,0x7b8b7a6d
  40a5d0:	mov    al,0x1
  40a5d2:	jb     0x81c95088
  40a5d8:	lods   al,BYTE PTR ds:[esi]
  40a5d9:	fbstp  TBYTE PTR [ecx-0x7f]
  40a5dc:	jo     0x40a58d
  40a5de:	outs   dx,DWORD PTR ds:[esi]
  40a5df:	icebp  
  40a5e0:	mov    DWORD PTR [ecx+edi*2],ebp
  40a5e3:	adc    ecx,esp
  40a5e5:	rcl    DWORD PTR [eax*4+0x2337bd3c],1
  40a5ec:	shr    DWORD PTR [ecx-0x549b65ef],1
  40a5f2:	cmp    eax,DWORD PTR [esi]
  40a5f4:	ja     0x40a61a
  40a5f6:	xor    bh,BYTE PTR [edx]
  40a5f8:	pop    eax
  40a5f9:	out    0x1,eax
  40a5fb:	cld    
  40a5fc:	adc    eax,0xcd13ba27
  40a601:	mov    eax,0x88b9f4f8
  40a606:	and    ecx,DWORD PTR [ebx+ebx*1+0x7b]
  40a60a:	dec    edx
  40a60b:	jne    0x40a5a1
  40a60d:	out    0x90,al
  40a60f:	xor    ah,dh
  40a611:	jp     0x40a5ce
  40a613:	scas   al,BYTE PTR es:[edi]
  40a614:	mov    al,0x84
  40a616:	imul   edx,DWORD PTR [ebp+0x65],0xffffffd5
  40a61a:	aad    0x12
  40a61c:	mov    eax,ds:0xeab489d2
  40a621:	mov    ds:0xbd6b59a9,al
  40a626:	push   ds
  40a627:	mul    DWORD PTR [ecx+0x4c83658]
  40a62d:	int    0x3a
  40a62f:	imul   esi,edx,0xffffffc1
  40a632:	ins    BYTE PTR es:[edi],dx
  40a633:	xor    eax,0x3b3c7ed
  40a638:	pushf  
  40a639:	mov    BYTE PTR [edi-0x99356f3],bl
  40a63f:	pusha  
  40a640:	push   ss
  40a641:	repz mov esi,0xfafb5817
  40a647:	jmp    FWORD PTR [ebp+0x1b5cad98]
  40a64d:	fucom  st(5)
  40a64f:	retf   
  40a650:	or     BYTE PTR [eax+esi*4-0xe],cl
  40a654:	repnz fdiv QWORD PTR [ebx+0x8]
  40a658:	adc    ebx,DWORD PTR [esi+0x15a0793]
  40a65e:	cmp    al,0x72
  40a660:	xchg   DWORD PTR [si],ecx
  40a663:	lods   eax,DWORD PTR ds:[esi]
  40a664:	sbb    eax,0x5474130d
  40a669:	adc    BYTE PTR [edx+0x62],dh
  40a66c:	push   bp
  40a66e:	pop    ss
  40a66f:	loope  0x40a65d
  40a671:	mov    DWORD PTR [ebp-0x34],0xf89c853c
  40a678:	mov    DWORD PTR [ebp-0x38],0xf89c853f
  40a67f:	and    DWORD PTR ds:0x42e6ef,0x0
  40a689:	xor    edx,edx
  40a68b:	or     edx,DWORD PTR ds:0x42e6ef
  40a691:	inc    edx
  40a692:	mov    DWORD PTR ds:0x42e6ef,edx
  40a698:	cmp    DWORD PTR ds:0x42e6ef,0xf
  40a69f:	jne    0x40a6c6
  40a6a5:	push   DWORD PTR [ebp-0x28]
  40a6a8:	push   DWORD PTR [ebp-0x10]
  40a6ab:	push   0x42e6f7
  40a6b0:	push   DWORD PTR [ebp-0x14]
  40a6b3:	push   DWORD PTR [ebp-0x18]
  40a6b6:	push   0x89bc
  40a6bb:	push   0x39f6
  40a6c0:	call   DWORD PTR ds:0x42e2eb
  40a6c6:	cmp    DWORD PTR ds:0x42e6ef,0xe
  40a6cd:	jne    0x40a6e0
  40a6d3:	mov    edx,DWORD PTR ds:0x42e6ef
  40a6d9:	inc    edx
  40a6da:	mov    DWORD PTR ds:0x42e6ef,edx
  40a6e0:	cmp    DWORD PTR ds:0x42e6ef,0x1c
  40a6e7:	jb     0x40a689
  40a6ed:	and    DWORD PTR ds:0x42fcdd,0x0
  40a6f7:	jmp    0x40a709
  40a6fc:	mov    edx,DWORD PTR ds:0x42fcdd
  40a702:	inc    edx
  40a703:	mov    DWORD PTR ds:0x42fcdd,edx
  40a709:	cmp    DWORD PTR ds:0x42fcdd,0x13
  40a710:	jae    0x40a766
  40a716:	cmp    DWORD PTR ds:0x42fcdd,0xb
  40a71d:	jne    0x40a733
  40a723:	push   0x42e26d
  40a728:	push   0x42e25b
  40a72d:	call   DWORD PTR ds:0x42e547
  40a733:	cmp    DWORD PTR ds:0x42fcdd,0xa
  40a73a:	jne    0x40a74f
  40a740:	xor    edx,edx
  40a742:	add    edx,DWORD PTR ds:0x42fcdd
  40a748:	inc    edx
  40a749:	mov    DWORD PTR ds:0x42fcdd,edx
  40a74f:	jmp    0x40a6fc
  40a754:	mov    edi,DWORD PTR ds:0x42e134
  40a75a:	xor    edi,DWORD PTR ds:0x42e713
  40a760:	mov    DWORD PTR ds:0x42e134,edi
  40a766:	mov    DWORD PTR [ebp-0x3c],0xf89c853e
  40a76d:	adc    DWORD PTR ds:0x42e713,edx
  40a773:	mov    edx,DWORD PTR [ebp+0x8]
  40a776:	xor    edx,eax
  40a778:	sub    edi,DWORD PTR ds:0x42fcd1
  40a77e:	mov    edi,DWORD PTR [ebp-0x10]
  40a781:	add    edx,ecx
  40a783:	mov    DWORD PTR ds:0x42fce5,0x29c7
  40a78d:	cmp    edi,edx
  40a78f:	mov    DWORD PTR ds:0x42e713,0x10c5
  40a799:	je     0x40d88b
  40a79f:	mov    DWORD PTR ds:0x42fcf9,0x41c2
  40a7a9:	push   ebx
  40a7aa:	mov    DWORD PTR ds:0x42fd09,0x2602
  40a7b4:	jmp    0x40d4a8
  40a7b9:	mov    edx,DWORD PTR [ebp-0x8]
  40a7bc:	mov    DWORD PTR ds:0x42e130,0x1c
  40a7c6:	cmp    DWORD PTR ds:0x42e130,0x0
  40a7cd:	je     0x40a824
  40a7d3:	cmp    DWORD PTR ds:0x42e130,0x7
  40a7da:	jne    0x40a7f8
  40a7e0:	push   DWORD PTR [ebp-0x10]
  40a7e3:	push   0x42e1e7
  40a7e8:	push   0x42e23d
  40a7ed:	push   0x42e23d
  40a7f2:	call   DWORD PTR ds:0x42e2ef
  40a7f8:	cmp    DWORD PTR ds:0x42e130,0x8
  40a7ff:	jne    0x40a812
  40a805:	mov    edi,DWORD PTR ds:0x42e130
  40a80b:	dec    edi
  40a80c:	mov    DWORD PTR ds:0x42e130,edi
  40a812:	mov    edi,DWORD PTR ds:0x42e130
  40a818:	dec    edi
  40a819:	mov    DWORD PTR ds:0x42e130,edi
  40a81f:	jmp    0x40a7c6
  40a824:	mov    edi,DWORD PTR [ebp-0x10]
  40a827:	xor    DWORD PTR ds:0x42e12c,0x3333
  40a831:	sub    edi,edx
  40a833:	mov    edx,DWORD PTR ds:0x42fd6e
  40a839:	add    DWORD PTR ds:0x42e707,edx
  40a83f:	mov    edx,DWORD PTR [ebp-0x4]
  40a842:	jmp    0x40ac00
  40a847:	addr16 sub al,0x5e
  40a84a:	xchg   esi,eax
  40a84b:	jno    0x40a89f
  40a84d:	ja     0x40a838
  40a84f:	dec    eax
  40a850:	(bad)  
  40a851:	in     al,dx
  40a852:	std    
  40a853:	outs   dx,DWORD PTR ds:[esi]
  40a854:	shl    DWORD PTR [edi+0xd],cl
  40a857:	in     al,0xf1
  40a859:	jo     0x40a8cb
  40a85b:	lahf   
  40a85c:	jge    0x40a8ce
  40a85e:	jo     0x40a820
  40a860:	push   es
  40a861:	jg     0x40a8bc
  40a863:	jl     0x40a7ff
  40a865:	jmp    0x40a88b
  40a867:	retf   
  40a868:	inc    eax
  40a869:	sub    ch,BYTE PTR [esi]
  40a86b:	xor    edx,eax
  40a86d:	xchg   ebx,eax
  40a86e:	mov    ah,0x7
  40a870:	push   es
  40a871:	push   ebx
  40a872:	sbb    BYTE PTR [edx],0x8e
  40a875:	add    eax,DWORD PTR [esi]
  40a877:	adc    DWORD PTR ds:0xcd53c31c,ecx
  40a87d:	sar    BYTE PTR [ecx-0x372750b6],0xea
  40a884:	and    DWORD PTR [edx],ebx
  40a886:	mov    bh,0xf0
  40a888:	(bad)  
  40a889:	mov    al,ds:0x53a87b56
  40a88e:	mov    cs,edi
  40a890:	mov    bl,0x1e
  40a892:	cmp    ah,ch
  40a894:	pop    ss
  40a895:	fwait
  40a896:	sahf   
  40a897:	adc    eax,0x9c89e050
  40a89c:	bnd jno 0x40a8c4
  40a89f:	sbb    eax,0x7fff1b00
  40a8a4:	cmp    BYTE PTR [ebp-0x3d],dh
  40a8a7:	ins    DWORD PTR es:[edi],dx
  40a8a8:	adc    dl,bh
  40a8aa:	pop    ds
  40a8ab:	loope  0x40a921
  40a8ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a8ae:	lods   al,BYTE PTR ds:[esi]
  40a8af:	mov    BYTE PTR [edi],al
  40a8b1:	xchg   DWORD PTR [esi],edx
  40a8b3:	pop    esi
  40a8b4:	pop    edi
  40a8b5:	std    
  40a8b6:	mov    ch,BYTE PTR [eax]
  40a8b8:	sub    esp,DWORD PTR [ebx-0x3ff2ba8c]
  40a8be:	xor    bh,bl
  40a8c0:	cmp    DWORD PTR [ebx+0x44a2c52a],ecx
  40a8c6:	rcr    BYTE PTR [di],cl
  40a8c9:	push   ebx
  40a8ca:	sub    ebx,esp
  40a8cc:	mov    eax,ds:0xb937f6fe
  40a8d1:	inc    ecx
  40a8d2:	xchg   esp,eax
  40a8d3:	fstp   st(6)
  40a8d5:	lods   al,BYTE PTR cs:[esi]
  40a8d7:	jge    0x40a8dc
  40a8d9:	or     BYTE PTR [ebx+0x350e4bd8],ah
  40a8df:	push   ebx
  40a8e0:	or     ebx,esi
  40a8e2:	lds    esp,FWORD PTR [edx]
  40a8e4:	cli    
  40a8e5:	or     ebp,esi
  40a8e7:	(bad)  
  40a8e8:	cmp    al,0xac
  40a8ea:	and    BYTE PTR [edx],cl
  40a8ec:	cmp    dh,0x43
  40a8ef:	xor    DWORD PTR [edx-0x7b],edx
  40a8f2:	in     al,dx
  40a8f3:	popa   
  40a8f4:	push   0xffffffc7
  40a8f6:	jle    0x40a902
  40a8f8:	cmp    ebx,ecx
  40a8fa:	mov    edi,0xb8423efe
  40a8ff:	pushf  
  40a900:	sub    DWORD PTR [edi-0x64ca9087],esp
  40a906:	sub    ebp,DWORD PTR [eax]
  40a908:	je     0x40a915
  40a90a:	repnz push edi
  40a90c:	arpl   WORD PTR [esi],sp
  40a90e:	add    BYTE PTR [edi+edx*8-0x2a5070ce],0x1f
  40a916:	out    0xbb,al
  40a918:	xchg   esp,eax
  40a919:	push   es
  40a91a:	pop    eax
  40a91b:	xchg   dh,dh
  40a91d:	arpl   WORD PTR [eax],bx
  40a91f:	dec    esp
  40a920:	add    esp,0xf360c7c
  40a926:	xchg   ebx,eax
  40a927:	or     BYTE PTR ds:0x99ded0e2,al
  40a92d:	into   
  40a92e:	push   edi
  40a92f:	push   ds
  40a930:	fcmovnbe st,st(6)
  40a932:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a933:	ror    DWORD PTR [eax+0x47],1
  40a936:	xchg   ebx,eax
  40a937:	out    0x6,eax
  40a939:	jl     0x40a8f2
  40a93b:	push   edi
  40a93c:	xor    al,0xff
  40a93e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a93f:	xchg   esi,eax
  40a940:	imul   ebx,esp,0xccdc7c07
  40a946:	fwait
  40a947:	jne    0x40a9ae
  40a949:	mov    ebp,0x458ea78c
  40a94e:	pop    ecx
  40a94f:	or     al,0xce
  40a951:	xlat   BYTE PTR ds:[ebx]
  40a952:	ins    BYTE PTR es:[edi],dx
  40a953:	jl     0x40a967
  40a955:	addr16 mov ebp,0x4c485edf
  40a95b:	outs   dx,DWORD PTR ds:[esi]
  40a95c:	push   cs
  40a95d:	lock jle 0x40a962
  40a960:	aam    0x99
  40a962:	xlat   BYTE PTR ds:[ebx]
  40a963:	add    BYTE PTR ds:0x80d4af7e,al
  40a969:	pop    ss
  40a96a:	mov    ch,0x36
  40a96c:	xchg   ebp,eax
  40a96d:	pusha  
  40a96e:	ds inc eax
  40a970:	(bad)
  40a974:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a975:	dec    esp
  40a976:	mov    ds:0xd405cd1e,eax
  40a97b:	jnp    0x40a96d
  40a97d:	and    eax,0x95e42aa7
  40a982:	and    dl,BYTE PTR [ebx-0x6c]
  40a985:	int    0x71
  40a987:	std    
  40a988:	inc    eax
  40a989:	mov    eax,0x87f61cbe
  40a98e:	ins    BYTE PTR es:[edi],dx
  40a98f:	loopne 0x40a9e6
  40a991:	pop    DWORD PTR [edx+0x1f3d4270]
  40a997:	xchg   esi,eax
  40a998:	pusha  
  40a999:	mov    edx,0x48f62a0a
  40a99e:	mov    WORD PTR [edi-0x4a9c3811],?
  40a9a4:	inc    eax
  40a9a5:	xchg   edi,eax
  40a9a6:	pop    ecx
  40a9a7:	or     eax,0xb9d755b5
  40a9ac:	xchg   ebp,eax
  40a9ad:	ss pop ds
  40a9af:	in     eax,0x47
  40a9b1:	or     esi,esi
  40a9b3:	enter  0x521b,0x9f
  40a9b7:	aad    0x97
  40a9b9:	sbb    DWORD PTR [edi+0x5c],0x4a
  40a9bd:	push   DWORD PTR [esi-0x7d]
  40a9c0:	(bad)  
  40a9c1:	jmp    DWORD PTR [edx+ebp*8]
  40a9c4:	div    BYTE PTR [eax-0x616eca9f]
  40a9ca:	jle    0x40a985
  40a9cc:	in     al,dx
  40a9cd:	mov    dh,0x1f
  40a9cf:	pushf  
  40a9d0:	leave  
  40a9d1:	dec    esi
  40a9d2:	(bad)  
  40a9d3:	jne    0x40a9c6
  40a9d5:	add    BYTE PTR [edx],ch
  40a9d7:	push   eax
  40a9d8:	dec    ecx
  40a9d9:	mov    esp,0x2e6c3c2d
  40a9de:	cmp    eax,0x6e0109de
  40a9e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a9e4:	neg    DWORD PTR [ebx-0x60]
  40a9e7:	out    0x3e,al
  40a9e9:	jle    0x40aa15
  40a9eb:	sbb    ecx,0x6
  40a9ee:	mov    ds:0x30a15d73,eax
  40a9f3:	std    
  40a9f4:	inc    eax
  40a9f5:	add    eax,ebx
  40a9f7:	mov    al,0x96
  40a9f9:	push   ebp
  40a9fa:	retf   0x9ee
  40a9fd:	mov    ebx,0xa4400385
  40aa02:	add    edi,edi
  40aa04:	or     ebx,ecx
  40aa06:	outs   dx,BYTE PTR ds:[esi]
  40aa07:	xor    edi,ebp
  40aa09:	xor    eax,0x8d0cd834
  40aa0e:	shl    BYTE PTR [ecx],1
  40aa10:	cmp    al,0x55
  40aa12:	cli    
  40aa13:	push   0x5d
  40aa15:	ja     0x40aa4d
  40aa17:	mov    eax,0xcdc0b339
  40aa1c:	fadd   DWORD PTR es:[ebx-0x4b]
  40aa20:	lea    esp,[ebx+esi*8]
  40aa23:	leave  
  40aa24:	(bad)  
  40aa25:	lea    ebp,[ecx-0x29]
  40aa28:	push   cs
  40aa29:	add    edi,DWORD PTR [ebx]
  40aa2b:	dec    edx
  40aa2c:	mov    BYTE PTR [ebp-0x35],bl
  40aa2f:	dec    ebp
  40aa30:	scas   eax,DWORD PTR es:[edi]
  40aa31:	cwde   
  40aa32:	sbb    al,cl
  40aa34:	rcl    DWORD PTR [ecx-0x68],cl
  40aa37:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aa38:	add    eax,0x761484bc
  40aa3d:	jns    0x40aa1b
  40aa3f:	nop
  40aa40:	test   al,0xb9
  40aa42:	retf   0x48d5
  40aa45:	(bad)  
  40aa46:	mov    esi,0x7272fd90
  40aa4b:	add    cl,BYTE PTR [ebp-0x5a]
  40aa4e:	add    DWORD PTR [esi+0x40],eax
  40aa51:	jb     0x40a9fc
  40aa53:	int3   
  40aa54:	fstp   TBYTE PTR [ebp+0x9]
  40aa57:	inc    ebx
  40aa58:	or     BYTE PTR [edx+0x3b],bl
  40aa5b:	shr    DWORD PTR [esi+0x41976f31],cl
  40aa61:	xchg   esi,eax
  40aa62:	loop   0x40aab3
  40aa64:	aad    0x62
  40aa66:	retf   0x7dfa
  40aa69:	aad    0x92
  40aa6b:	mov    bh,BYTE PTR [ebp-0x71]
  40aa6e:	imul   edx,DWORD PTR [eax+eax*2],0x3f5d13a9
  40aa75:	cdq    
  40aa76:	js     0x40aa0d
  40aa78:	and    eax,0x4c8c558b
  40aa7d:	xchg   esi,eax
  40aa7e:	jmp    0x869527aa
  40aa83:	cwde   
  40aa84:	leave  
  40aa85:	push   ebx
  40aa86:	dec    ebp
  40aa87:	dec    BYTE PTR [eax+0x6f42d52b]
  40aa8d:	xchg   ecx,eax
  40aa8e:	aad    0x11
  40aa90:	xor    al,0xad
  40aa92:	loope  0x40aa43
  40aa94:	jo     0x40aa48
  40aa96:	lahf   
  40aa97:	lahf   
  40aa98:	mov    eax,ds:0x17c5151b
  40aa9d:	and    eax,0xdacf9e39
  40aaa2:	ins    DWORD PTR es:[edi],dx
  40aaa3:	push   edi
  40aaa4:	(bad)  
  40aaa6:	jmp    0xf170:0x1a94ecb8
  40aaad:	cmp    eax,0xca82b3d3
  40aab2:	sahf   
  40aab3:	push   esi
  40aab4:	ds inc ecx
  40aab6:	ins    BYTE PTR es:[edi],dx
  40aab7:	jle    0x40aa5a
  40aab9:	push   esi
  40aaba:	int    0x45
  40aabc:	pushf  
  40aabd:	and    ebp,DWORD PTR [ecx+0x10]
  40aac0:	(bad)  
  40aac1:	sbb    ah,BYTE PTR [esi]
  40aac3:	ins    DWORD PTR es:[edi],dx
  40aac4:	mov    ebx,DWORD PTR [eax+0x1b]
  40aac7:	ins    BYTE PTR es:[edi],dx
  40aac8:	adc    ebx,DWORD PTR [edi-0x2764a46b]
  40aace:	loope  0x40ab14
  40aad0:	ss inc edx
  40aad2:	inc    edx
  40aad3:	mov    eax,ds:0x645360c3
  40aad8:	add    dl,bh
  40aada:	dec    ebp
  40aadb:	jmp    FWORD PTR [ebx+0x6]
  40aade:	or     ch,dh
  40aae0:	jp     0x40ab5f
  40aae2:	jp     0x40ab3e
  40aae4:	inc    ecx
  40aae5:	pop    ds
  40aae6:	push   ebx
  40aae7:	out    dx,al
  40aae8:	push   eax
  40aae9:	xor    BYTE PTR [edx-0x5ba4762e],bh
  40aaef:	dec    BYTE PTR [ecx]
  40aaf1:	jo     0x40aac5
  40aaf3:	rol    esi,0x1c
  40aaf6:	push   ebx
  40aaf7:	sbb    esp,edx
  40aaf9:	loopne 0x40ab17
  40aafb:	jge    0x40aaf0
  40aafd:	jl     0x40ab44
  40aaff:	push   ecx
  40ab00:	or     BYTE PTR [ebp-0x28c7b609],dh
  40ab06:	ffree  st(6)
  40ab08:	mov    dl,0xe8
  40ab0a:	outs   dx,BYTE PTR ds:[esi]
  40ab0b:	or     bh,al
  40ab0d:	adc    DWORD PTR [eax],ecx
  40ab0f:	(bad)  
  40ab10:	and    ecx,DWORD PTR [ebx-0x10]
  40ab13:	(bad)  
  40ab14:	loopne 0x40ab16
  40ab16:	jae    0x40aacf
  40ab18:	mov    DWORD PTR [ebx],edx
  40ab1a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ab1b:	mov    dh,BYTE PTR [ebx+ebx*8]
  40ab1e:	jl     0x40ab4f
  40ab20:	sub    al,0xc
  40ab22:	dec    ebp
  40ab23:	adc    al,0xef
  40ab25:	jbe    0x40ab91
  40ab27:	sbb    DWORD PTR [ebp+0x9af9fff],esp
  40ab2d:	imul   edx,ecx,0xb3faed46
  40ab33:	adc    BYTE PTR [ecx+ebx*8],ah
  40ab36:	mov    al,ds:0x458471fb
  40ab3b:	dec    ecx
  40ab3c:	and    al,0x99
  40ab3e:	pop    edx
  40ab3f:	lods   al,BYTE PTR ds:[esi]
  40ab40:	fmulp  st(7),st
  40ab42:	out    0xaf,eax
  40ab44:	clc    
  40ab45:	cmc    
  40ab46:	sbb    DWORD PTR [edi],esi
  40ab48:	loopne 0x40aba1
  40ab4a:	mov    bh,0x62
  40ab4c:	imul   edi,edi,0xffffffa1
  40ab4f:	dec    edx
  40ab50:	mov    ch,0xc7
  40ab52:	push   DWORD PTR [eax]
  40ab54:	xchg   esi,eax
  40ab55:	or     eax,0x329ce2b5
  40ab5a:	push   esp
  40ab5b:	xchg   ecx,eax
  40ab5c:	cs ss sbb al,0xf8
  40ab60:	ins    BYTE PTR es:[edi],dx
  40ab61:	and    al,0x7
  40ab63:	pop    edi
  40ab64:	shr    BYTE PTR [eax],0x76
  40ab67:	(bad)  
  40ab68:	retf   
  40ab69:	sub    esi,DWORD PTR [ecx+0x3081bbdb]
  40ab6f:	data16 (bad) 
  40ab71:	push   0x76
  40ab73:	ret    
  40ab74:	mov    DWORD PTR [edx],edx
  40ab76:	sbb    BYTE PTR [edx-0x472951a4],0x1e
  40ab7d:	jno    0x40abc2
  40ab7f:	popf   
  40ab80:	das    
  40ab81:	in     eax,dx
  40ab82:	popf   
  40ab83:	sar    BYTE PTR [edi],cl
  40ab85:	push   0xffffff86
  40ab87:	pushf  
  40ab88:	in     al,0x90
  40ab8a:	in     eax,0xb4
  40ab8c:	lods   al,BYTE PTR ds:[esi]
  40ab8d:	out    dx,eax
  40ab8e:	lods   eax,DWORD PTR ds:[esi]
  40ab8f:	mov    DWORD PTR [edi+ebp*1+0x1ecd06ca],edi
  40ab96:	xor    cl,BYTE PTR [ebx+0x7f1329f7]
  40ab9c:	mov    eax,ds:0xaa19c9fe
  40aba1:	cmp    al,0xf7
  40aba3:	mov    al,ds:0xad4f457f
  40aba8:	inc    esp
  40aba9:	pop    ss
  40abaa:	rcl    BYTE PTR [edx-0x394c39b5],cl
  40abb0:	lods   al,BYTE PTR ds:[esi]
  40abb1:	ret    0x51d9
  40abb4:	lods   eax,DWORD PTR ds:[esi]
  40abb5:	mov    bh,0x8c
  40abb7:	into   
  40abb8:	out    dx,al
  40abb9:	or     ebx,DWORD PTR [edx+0x7]
  40abbc:	add    al,0x57
  40abbe:	pop    ss
  40abbf:	push   ecx
  40abc0:	jnp    0x40aba0
  40abc2:	pop    ebp
  40abc3:	fcomp  st(3)
  40abc5:	xchg   edi,eax
  40abc6:	jno    0x40abc9
  40abc8:	and    ecx,DWORD PTR [eax-0x7fe7be09]
  40abce:	sbb    BYTE PTR [eax-0x16a2ad8b],bl
  40abd4:	adc    BYTE PTR [ecx-0x5f],bl
  40abd7:	mov    edi,ebx
  40abd9:	inc    ebx
  40abda:	rol    BYTE PTR [esi-0x345a2dc],1
  40abe0:	xchg   BYTE PTR [edx+ebx*2],cl
  40abe3:	test   eax,0x31a5b93e
  40abe8:	cmp    ebp,ebp
  40abea:	aas    
  40abeb:	cs jno 0x40ac30
  40abee:	pop    esi
  40abef:	neg    BYTE PTR fs:[ecx+0x49dea948]
  40abf6:	lea    edx,[ebx+0x59d7e81f]
  40abfc:	bswap  esp
  40abfe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40abff:	les    esi,FWORD PTR [ebx]
  40ac01:	rol    BYTE PTR [ecx+0x42fcf535],1
  40ac07:	add    BYTE PTR [edi],cl
  40ac09:	out    0x42,eax
  40ac0b:	add    BYTE PTR [ebx],al
  40ac0d:	rol    edi,1
  40ac0f:	add    eax,0x42e703
  40ac14:	fwait
  40ac15:	sbb    BYTE PTR [eax],al
  40ac17:	add    BYTE PTR [ebx],bh
  40ac19:	cli    
  40ac1a:	mov    DWORD PTR ds:0x42fcdd,0x36a4
  40ac24:	jb     0x40d88a
  40ac2a:	mov    edx,DWORD PTR [ebp-0x28]
  40ac2d:	sbb    DWORD PTR ds:0x42fd7e,ebx
  40ac33:	mov    edi,DWORD PTR [ebp-0x4]
  40ac36:	xor    edx,eax
  40ac38:	sub    DWORD PTR ds:0x42fcf5,edx
  40ac3e:	xor    edi,eax
  40ac40:	mov    DWORD PTR ds:0x42e6f7,0x1f
  40ac4a:	cmp    DWORD PTR ds:0x42e6f7,0x0
  40ac51:	je     0x40acfa
  40ac57:	cmp    DWORD PTR ds:0x42e6f7,0x2e
  40ac5e:	jne    0x40ac7d
  40ac64:	push   DWORD PTR [ebp-0xc]
  40ac67:	push   0x42e23d
  40ac6c:	push   DWORD PTR [ebp-0x24]
  40ac6f:	push   0x691a
  40ac74:	push   DWORD PTR [ebp-0x10]
  40ac77:	call   DWORD PTR ds:0x42e2f3
  40ac7d:	mov    ebx,DWORD PTR ds:0x42e6f7
  40ac83:	dec    ebx
  40ac84:	mov    DWORD PTR ds:0x42e6f7,ebx
  40ac8a:	jmp    0x40ac4a
  40ac8f:	and    DWORD PTR ds:0x42e128,0x0
  40ac99:	jmp    0x40acad
  40ac9e:	xor    ebx,ebx
  40aca0:	or     ebx,DWORD PTR ds:0x42e128
  40aca6:	inc    ebx
  40aca7:	mov    DWORD PTR ds:0x42e128,ebx
  40acad:	cmp    DWORD PTR ds:0x42e128,0x1a
  40acb4:	jae    0x40acfa
  40acba:	cmp    DWORD PTR ds:0x42e128,0xc
  40acc1:	jne    0x40acd5
  40acc7:	push   0x2dd0
  40accc:	push   DWORD PTR [ebp-0x14]
  40accf:	call   DWORD PTR ds:0x42e2f7
  40acd5:	cmp    DWORD PTR ds:0x42e128,0xb
  40acdc:	jne    0x40acef
  40ace2:	mov    ebx,DWORD PTR ds:0x42e128
  40ace8:	inc    ebx
  40ace9:	mov    DWORD PTR ds:0x42e128,ebx
  40acef:	jmp    0x40ac9e
  40acf4:	adc    ebx,0x2885
  40acfa:	add    edi,ecx
  40acfc:	sbb    ebx,0x5c75
  40ad02:	add    edx,ecx
  40ad04:	imul   edx,edi
  40ad07:	sub    ebx,DWORD PTR ds:0x42e134
  40ad0d:	mov    edi,DWORD PTR [ebp-0x8]
  40ad10:	mov    DWORD PTR ds:0x42fce1,0x13
  40ad1a:	cmp    DWORD PTR ds:0x42fce1,0x0
  40ad21:	je     0x40ad54
  40ad27:	cmp    DWORD PTR ds:0x42fce1,0x14
  40ad2e:	jne    0x40ad42
  40ad34:	push   DWORD PTR [ebp-0x28]
  40ad37:	push   0x42fd01
  40ad3c:	call   DWORD PTR ds:0x42e54b
  40ad42:	mov    ebx,DWORD PTR ds:0x42fce1
  40ad48:	dec    ebx
  40ad49:	mov    DWORD PTR ds:0x42fce1,ebx
  40ad4f:	jmp    0x40ad1a
  40ad54:	mov    ebx,DWORD PTR [ebp-0x10]
  40ad57:	sub    ebx,edi
  40ad59:	cmp    ebx,edx
  40ad5b:	ja     0x40ad6d
  40ad61:	mov    edx,DWORD PTR [ebp-0x4]
  40ad64:	xor    edx,eax
  40ad66:	add    edx,ecx
  40ad68:	jmp    0x40c0fc
  40ad6d:	mov    edx,DWORD PTR [ebp-0x2c]
  40ad70:	mov    edi,DWORD PTR [ebp-0x4]
  40ad73:	xor    edx,eax
  40ad75:	xor    edi,eax
  40ad77:	add    edi,ecx
  40ad79:	add    edx,ecx
  40ad7b:	imul   edx,edi
  40ad7e:	mov    edi,DWORD PTR [ebp-0x8]
  40ad81:	mov    ebx,DWORD PTR [ebp-0x10]
  40ad84:	sub    ebx,edi
  40ad86:	cmp    ebx,edx
  40ad88:	ja     0x40ad96
  40ad8e:	mov    edx,DWORD PTR [ebp-0x28]
  40ad91:	jmp    0x40c0ee
  40ad96:	mov    edx,DWORD PTR [ebp-0x30]
  40ad99:	mov    edi,DWORD PTR [ebp-0x4]
  40ad9c:	xor    edx,eax
  40ad9e:	xor    edi,eax
  40ada0:	add    edi,ecx
  40ada2:	jmp    0x40b160
  40ada7:	xor    BYTE PTR [eax+eiz*4],bl
  40adaa:	mov    bh,0x6c
  40adac:	mov    bl,0xc7
  40adae:	jae    0x40ae09
  40adb0:	jg     0x40ad82
  40adb2:	ja     0x40ada5
  40adb4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40adb5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40adb6:	aas    
  40adb7:	add    edi,ebp
  40adb9:	jo     0x40ae2b
  40adbb:	lahf   
  40adbc:	jge    0x40ae2e
  40adbe:	jo     0x40adca
  40adc0:	call   0xea5a94a9
  40adc5:	mov    cl,ch
  40adc7:	mov    al,dl
  40adc9:	lods   eax,DWORD PTR ds:[esi]
  40adca:	cmp    eax,0x906452d3
  40adcf:	cmp    DWORD PTR [edx],ecx
  40add1:	leave  
  40add2:	sub    eax,0x96b03b03
  40add7:	cli    
  40add8:	neg    BYTE PTR [esi]
  40adda:	mov    DWORD PTR [esi],edx
  40addc:	push   esp
  40addd:	sbb    dl,dh
  40addf:	sbb    dh,BYTE PTR [edi-0xb]
  40ade2:	lods   al,BYTE PTR ds:[esi]
  40ade3:	inc    esp
  40ade4:	out    0x96,al
  40ade6:	fmul   st(6),st
  40ade8:	jmp    FWORD PTR [esi-0x30]
  40adeb:	or     ch,BYTE PTR [edi-0x41]
  40adee:	xchg   ebx,eax
  40adef:	clc    
  40adf0:	ror    DWORD PTR [esi-0x1adbb9f2],1
  40adf6:	ds xchg edx,eax
  40adf8:	push   esp
  40adf9:	out    0xd1,al
  40adfb:	daa    
  40adfc:	loop   0x40adb7
  40adfe:	xor    ebx,edx
  40ae00:	pop    ss
  40ae01:	imul   eax,DWORD PTR [esi],0x77
  40ae04:	jb     0x40ad9b
  40ae06:	repnz sub al,0x45
  40ae09:	adc    DWORD PTR [ecx+0x29],0xffffff97
  40ae0d:	dec    edi
  40ae0e:	push   esp
  40ae0f:	rcr    DWORD PTR [ebp+0x6a],cl
  40ae12:	pop    DWORD PTR [ebx+0x31ccb362]
  40ae18:	repz repz rcr eax,cl
  40ae1c:	jo     0x40adf2
  40ae1e:	jae    0x40ae8b
  40ae20:	pop    edi
  40ae21:	shl    DWORD PTR [edi+ebx*8],1
  40ae24:	repnz (bad)
  40ae28:	push   es
  40ae29:	cmp    BYTE PTR [ebx-0x59],al
  40ae2c:	pop    ebp
  40ae2d:	iret   
  40ae2e:	pop    ecx
  40ae2f:	inc    ebx
  40ae30:	and    al,0xb2
  40ae32:	xchg   dl,ch
  40ae34:	mov    cs,WORD PTR [esi-0x67be2d9c]
  40ae3a:	arpl   WORD PTR [edi+0x610a2cec],di
  40ae40:	into   
  40ae41:	imul   edx,edi,0x59
  40ae44:	jle    0x40aded
  40ae46:	mov    ds:0xbe38a745,al
  40ae4b:	mov    ebp,0x5287ce9f
  40ae50:	mov    cl,0x94
  40ae52:	daa    
  40ae53:	lock das 
  40ae55:	dec    ebx
  40ae56:	cdq    
  40ae57:	pop    DWORD PTR [ebp+0x125d948c]
  40ae5d:	xor    al,0x48
  40ae60:	cli    
  40ae61:	lods   eax,DWORD PTR ds:[esi]
  40ae62:	ret    
  40ae63:	pushf  
  40ae64:	or     al,0x43
  40ae66:	and    eax,DWORD PTR fs:[esi+0x521fa7f3]
  40ae6d:	popa   
  40ae6e:	push   0x90faa389
  40ae73:	into   
  40ae74:	jmp    FWORD PTR [ebx-0x512516e5]
  40ae7a:	push   ebp
  40ae7b:	dec    esp
  40ae7c:	jo     0x40ae08
  40ae7e:	test   ah,cl
  40ae80:	xchg   ebp,eax
  40ae81:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ae82:	adc    eax,eax
  40ae84:	pop    edx
  40ae85:	mov    bh,BYTE PTR [eax+0x71881b82]
  40ae8b:	stos   BYTE PTR es:[edi],al
  40ae8c:	and    DWORD PTR [edx+0x7e6a8315],0x73c22c70
  40ae96:	inc    ebp
  40ae97:	cmp    al,0x97
  40ae99:	div    ch
  40ae9b:	scas   al,BYTE PTR es:[edi]
  40ae9c:	jo     0x40ae1f
  40ae9e:	pop    edx
  40ae9f:	pop    ecx
  40aea0:	push   ecx
  40aea1:	sbb    eax,0xe27a5479
  40aea6:	push   cs
  40aea7:	jmp    0x40aedb
  40aea9:	into   
  40aeaa:	push   ebx
  40aeab:	mov    edi,0x7d2f841a
  40aeb0:	gs pop esi
  40aeb2:	xor    al,0x1
  40aeb4:	and    eax,0x622604ec
  40aeb9:	mov    edi,0xfef95e32
  40aebe:	xor    BYTE PTR [edx-0x10a208c4],ah
  40aec4:	out    dx,eax
  40aec5:	scas   al,BYTE PTR es:[edi]
  40aec6:	dec    edx
  40aec7:	mov    esi,0xde7626b1
  40aecc:	sbb    eax,0x5e064458
  40aed1:	xor    ch,BYTE PTR [edx+esi*8]
  40aed4:	xchg   ebp,eax
  40aed5:	dec    eax
  40aed6:	idiv   BYTE PTR [edi+0x6adbd3ad]
  40aedc:	rcr    BYTE PTR ds:0xe9133ea8,1
  40aee2:	cli    
  40aee3:	sbb    al,0x4c
  40aee5:	out    0x39,eax
  40aee7:	in     eax,0x63
  40aee9:	dec    eax
  40aeea:	adc    eax,0x1a4ef73d
  40aeef:	dec    ebx
  40aef0:	aam    0xe3
  40aef2:	mov    ah,ah
  40aef4:	add    bh,BYTE PTR [esi+0x76]
  40aef7:	push   esp
  40aef8:	mov    ch,0xe9
  40aefa:	or     DWORD PTR [ebx+0x4f],edi
  40aefd:	pop    ds
  40aefe:	ins    DWORD PTR es:[edi],dx
  40aeff:	lea    edi,ds:0x2f62f020
  40af05:	xchg   esp,esp
  40af07:	pop    eax
  40af08:	xlat   BYTE PTR ds:[ebx]
  40af09:	mov    bh,0x7f
  40af0b:	call   0x54c1:0xaa3f0254
  40af12:	jmp    FWORD PTR [ebp-0x53b00aca]
  40af18:	mov    ebp,0xc2ad47a8
  40af1d:	xor    DWORD PTR [edx-0xb],0xfffffff0
  40af21:	jmp    0x17a1:0x44ab57d0
  40af28:	push   esp
  40af29:	jbe    0x40af62
  40af2b:	push   cs
  40af2c:	(bad)  
  40af2d:	or     BYTE PTR [esi-0x20],ah
  40af30:	and    eax,0x46cdaf2
  40af35:	pop    esi
  40af36:	loope  0x40af0e
  40af38:	js     0x40af77
  40af3a:	sub    dh,cl
  40af3c:	fisttp QWORD PTR [edx-0x7beaabe4]
  40af42:	(bad)  
  40af43:	fistp  DWORD PTR [edi+0x2799600a]
  40af49:	mov    esi,0x9697c274
  40af4e:	bound  eax,QWORD PTR [eax]
  40af50:	push   esp
  40af51:	mov    eax,0xd0d8155
  40af56:	fimul  DWORD PTR [esi+0x4ba7cb48]
  40af5c:	ins    BYTE PTR es:[edi],dx
  40af5d:	ja     0x40afae
  40af5f:	je     0x40afba
  40af61:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40af62:	sahf   
  40af63:	int    0xea
  40af65:	pushf  
  40af66:	mov    bh,0x38
  40af68:	sahf   
  40af69:	lods   al,BYTE PTR ds:[esi]
  40af6a:	jg     0x40af90
  40af6c:	fidiv  WORD PTR [esi-0x459223a3]
  40af72:	xor    BYTE PTR [ebp+0x34],cl
  40af75:	jp     0x40af03
  40af77:	cwde   
  40af78:	pop    esp
  40af79:	ja     0x40af98
  40af7b:	shl    DWORD PTR [edx+0x4d],cl
  40af7e:	call   0x9ad9a933
  40af83:	inc    ebp
  40af84:	out    dx,al
  40af85:	cmp    eax,0x5e443841
  40af8a:	xor    eax,DWORD PTR [eax+0x14]
  40af8d:	xchg   edi,eax
  40af8e:	jmp    0xa7b3:0x1b022663
  40af95:	jge    0x40af67
  40af97:	sub    BYTE PTR [eax-0x19a8785f],bh
  40af9d:	fsubr  DWORD PTR [ebx]
  40af9f:	adc    dh,BYTE PTR [ebx-0x3a]
  40afa2:	shl    BYTE PTR [ebp-0x63],0x54
  40afa6:	xlat   BYTE PTR fs:[ebx]
  40afa8:	sbb    ch,al
  40afaa:	loopne 0x40af42
  40afac:	pop    ds
  40afad:	shl    BYTE PTR [ebx-0x5e],cl
  40afb0:	xchg   DWORD PTR ds:0xdadbf1d4,edx
  40afb6:	aaa    
  40afb7:	cmp    al,0x45
  40afb9:	daa    
  40afba:	add    al,0x6d
  40afbc:	aam    0x30
  40afbe:	and    eax,0x2d4b9dd2
  40afc3:	sbb    DWORD PTR [esi+0x140620d],ebx
  40afc9:	es xchg esp,eax
  40afcb:	pop    edi
  40afcc:	mov    ah,0x38
  40afce:	rcr    esi,cl
  40afd0:	stc    
  40afd1:	or     BYTE PTR [edx],ah
  40afd3:	xchg   ebx,eax
  40afd4:	jmp    0xdf03:0x61995e0b
  40afdb:	mov    esi,DWORD PTR [edi-0x76]
  40afde:	mov    DWORD PTR [ebp+0x3c839658],0xe8dc5732
  40afe8:	cs fcmovnbe st,st(2)
  40afeb:	sbb    ch,BYTE PTR [esi+esi*4]
  40afee:	xchg   edi,eax
  40afef:	int    0x83
  40aff1:	adc    bh,BYTE PTR [ebx-0x56]
  40aff4:	xor    esp,eax
  40aff6:	in     eax,dx
  40aff7:	lods   al,BYTE PTR ds:[esi]
  40aff8:	(bad)  
  40aff9:	push   edi
  40affa:	pop    DWORD PTR [edx+esi*8+0x764e29b7]
  40b001:	sbb    ah,BYTE PTR [ebx]
  40b003:	mov    ebx,0x3cf4e8ea
  40b008:	loop   0x40afdc
  40b00a:	shl    BYTE PTR [edi-0x46b79650],cl
  40b010:	cmp    DWORD PTR ss:[ebp+0x16f05866],esp
  40b017:	pop    esp
  40b018:	in     al,dx
  40b019:	adc    al,0x82
  40b01b:	sahf   
  40b01c:	jge    0x40b092
  40b01e:	dec    ebp
  40b01f:	mov    edi,0x3141bf35
  40b024:	dec    ebx
  40b025:	and    eax,0xf0fea4cb
  40b02a:	dec    eax
  40b02b:	sbb    al,0x7
  40b02d:	mov    eax,0xc76e56ce
  40b032:	add    DWORD PTR [edi+edi*4],0xeb1d6724
  40b039:	inc    esi
  40b03a:	and    BYTE PTR [edx-0x19fd7c00],dh
  40b040:	push   ecx
  40b041:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b042:	or     BYTE PTR [esi+0x3],dh
  40b045:	adc    al,BYTE PTR [bx+si-0x7c]
  40b049:	aam    0x1a
  40b04b:	jns    0x40b0a6
  40b04d:	mov    ebx,0x446c39c0
  40b052:	mov    ds:0x2c8d416a,al
  40b057:	inc    esi
  40b058:	push   esp
  40b059:	pop    edx
  40b05a:	xor    ecx,DWORD PTR [edx-0x69]
  40b05d:	mov    ch,0xac
  40b05f:	pushf  
  40b060:	mov    al,ds:0xd1ca62b0
  40b065:	adc    DWORD PTR [edx-0x7423446a],edx
  40b06b:	mov    ebx,0x2344081f
  40b070:	sub    ebp,ecx
  40b072:	or     eax,0xd60c5c15
  40b077:	cdq    
  40b078:	cmp    esi,0x10627648
  40b07e:	push   esi
  40b07f:	adc    ebp,DWORD PTR [ecx+0x14]
  40b082:	inc    ecx
  40b083:	mov    bh,0x46
  40b085:	jp     0x40b0a2
  40b087:	or     DWORD PTR [ecx+0x6d],eax
  40b08a:	add    eax,0x98f4578b
  40b08f:	push   es
  40b090:	add    DWORD PTR [eax-0x3f032321],ebp
  40b096:	int3   
  40b097:	push   0xfffffffc
  40b099:	or     al,0xed
  40b09b:	xchg   esp,eax
  40b09c:	xor    al,0xf8
  40b09e:	pop    esp
  40b09f:	pop    ebx
  40b0a0:	or     al,0x8b
  40b0a2:	pop    esi
  40b0a3:	adc    esi,DWORD PTR [edx]
  40b0a5:	push   0x52
  40b0a7:	or     ebx,DWORD PTR [eax+0x55]
  40b0aa:	pop    ecx
  40b0ab:	inc    esi
  40b0ac:	aam    0x8f
  40b0ae:	loope  0x40b087
  40b0b0:	aad    0x96
  40b0b2:	dec    ecx
  40b0b3:	xchg   esp,eax
  40b0b4:	mov    eax,esp
  40b0b6:	fsubp  st(3),st
  40b0b8:	xchg   ebp,eax
  40b0b9:	mov    esp,0x2ed28135
  40b0be:	or     BYTE PTR [ecx-0x4c],ah
  40b0c1:	mov    BYTE PTR [ebx+0x427d461],bl
  40b0c7:	xchg   DWORD PTR [ecx],esi
  40b0c9:	in     al,dx
  40b0ca:	mov    BYTE PTR [eax+0x2f],cl
  40b0cd:	inc    ecx
  40b0ce:	or     dl,BYTE PTR [edi+0x54]
  40b0d1:	fcomp  DWORD PTR [ebp+0x47]
  40b0d4:	and    DWORD PTR [esi-0x78],0x4fc1334a
  40b0db:	mov    bh,0x49
  40b0dd:	test   DWORD PTR [edi+ebx*4-0x56],esp
  40b0e1:	cmp    BYTE PTR [edx],ah
  40b0e3:	rep ins BYTE PTR es:[edi],dx
  40b0e5:	sub    al,bl
  40b0e7:	std    
  40b0e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b0e9:	cmp    al,0xc9
  40b0eb:	aam    0xa5
  40b0ed:	adc    eax,0x8adfa4e2
  40b0f2:	pcmpgtb mm3,QWORD PTR [ebp+0x3d]
  40b0f6:	fcmovnbe st,st(6)
  40b0f8:	push   esp
  40b0f9:	mov    esi,0xd14385e5
  40b0fe:	xor    eax,0x6768deae
  40b103:	stos   DWORD PTR es:[edi],eax
  40b104:	push   eax
  40b105:	fs push ebx
  40b107:	test   DWORD PTR [edx],0xe476ddaa
  40b10d:	xchg   edx,eax
  40b10e:	pop    ebx
  40b10f:	bound  edx,QWORD PTR ds:0xdc3ff6a3
  40b115:	pop    ebx
  40b116:	inc    esi
  40b117:	adc    DWORD PTR ds:[eax-0x1b],0xfffffff9
  40b11c:	cmp    al,0xc5
  40b11e:	inc    ebp
  40b11f:	test   DWORD PTR [ebx-0x417b4c00],eax
  40b125:	mov    ah,0x24
  40b127:	sub    eax,0xdce938ee
  40b12c:	sti    
  40b12d:	xlat   BYTE PTR ds:[ebx]
  40b12e:	aaa    
  40b12f:	and    esp,edx
  40b131:	test   al,0x34
  40b133:	mov    esp,0xb3b656e9
  40b138:	popf   
  40b139:	sbb    DWORD PTR [eax+0xe71c687],esp
  40b13f:	jns    0x40b131
  40b141:	xor    bl,BYTE PTR [ebx]
  40b143:	xor    al,0x88
  40b145:	test   esi,ecx
  40b147:	mov    DWORD PTR [ecx+esi*8-0x4a],edi
  40b14b:	xor    DWORD PTR [esi-0x1a476ee6],0x7c9a6f77
  40b155:	inc    ecx
  40b156:	add    eax,0x937c7f3c
  40b15b:	ds or  eax,0x38b94ef
  40b161:	shr    ecx,1
  40b163:	mov    ecx,0xd2000003
  40b168:	jne    0x40b1a1
  40b16a:	sub    esi,DWORD PTR [ebx-0x188a2d97]
  40b170:	retf   0xa792
  40b173:	ja     0x40b1de
  40b175:	and    DWORD PTR [ecx],ebp
  40b177:	mov    ds:0x9f7070fa,al
  40b17c:	jge    0x40b1ee
  40b17e:	jo     0x40b13b
  40b180:	cmp    BYTE PTR [edi],0xd1
  40b183:	push   esp
  40b184:	mov    dl,0x51
  40b186:	out    dx,al
  40b187:	popf   
  40b188:	mov    ds:0x8d77752b,eax
  40b18d:	dec    edi
  40b18e:	sti    
  40b18f:	nop
  40b190:	push   ecx
  40b191:	fisubr DWORD PTR [ecx]
  40b193:	pop    esp
  40b194:	mov    ds:0xff2e4c35,al
  40b199:	shr    DWORD PTR [esi+edx*1],0xf0
  40b19d:	fsubr  QWORD PTR [esp+esi*2+0x8]
  40b1a1:	mov    esi,0x566ba613
  40b1a6:	dec    esi
  40b1a7:	iret   
  40b1a8:	stos   BYTE PTR es:[edi],al
  40b1a9:	dec    edi
  40b1aa:	idiv   eax
  40b1ac:	mov    bl,0x1
  40b1ae:	mov    esp,0x29ff0b5e
  40b1b3:	mov    cl,0x91
  40b1b5:	int3   
  40b1b6:	test   DWORD PTR [eax+ecx*8+0x370e3c5f],ebp
  40b1bd:	sub    dh,BYTE PTR [ebx]
  40b1bf:	in     al,0xcf
  40b1c1:	jle    0x40b154
  40b1c3:	mov    ch,0xee
  40b1c5:	pop    ebp
  40b1c6:	xchg   ecx,eax
  40b1c7:	add    eax,0x48b70247
  40b1cc:	lahf   
  40b1cd:	dec    esi
  40b1ce:	(bad)  
  40b1cf:	jl     0x40b15f
  40b1d1:	jle    0x40b154
  40b1d3:	sub    cl,dh
  40b1d5:	cmp    DWORD PTR [ecx],ebp
  40b1d7:	mov    BYTE PTR [ecx+0x5d],ah
  40b1da:	div    BYTE PTR [edx-0x62db3dc2]
  40b1e0:	mov    eax,ds:0xb7365532
  40b1e5:	stos   DWORD PTR es:[edi],eax
  40b1e6:	add    eax,0x773c9844
  40b1eb:	adc    bh,bl
  40b1ed:	lods   al,BYTE PTR ds:[esi]
  40b1ee:	pop    es
  40b1ef:	ds jecxz 0x40b1f7
  40b1f2:	mov    dh,0xc9
  40b1f4:	xchg   BYTE PTR [ecx+0x49dc2079],dh
  40b1fa:	je     0x40b275
  40b1fc:	enter  0xd144,0xfc
  40b200:	sbb    cl,BYTE PTR [esi-0x18]
  40b203:	(bad)  
  40b204:	mov    ds:0x4b6c7378,al
  40b209:	mov    al,ds:0x47e4ef4a
  40b20e:	aad    0xa2
  40b210:	sbb    al,0x89
  40b212:	cmp    eax,0xe9458d5d
  40b217:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b218:	outs   dx,BYTE PTR ds:[esi]
  40b219:	xchg   ecx,eax
  40b21a:	mov    ecx,DWORD PTR [eax-0x47]
  40b21d:	test   ebp,eax
  40b21f:	xchg   bh,ah
  40b221:	pop    ds
  40b222:	inc    ebx
  40b223:	call   0x8cb3d610
  40b228:	les    eax,FWORD PTR [edx-0x7516f7ba]
  40b22e:	add    al,0xb1
  40b230:	add    al,0x5d
  40b232:	xor    dl,dl
  40b234:	pop    eax
  40b235:	inc    esi
  40b236:	mov    WORD PTR [ecx+0xec61e5c],cs
  40b23c:	ret    0x3351
  40b23f:	scas   al,BYTE PTR es:[edi]
  40b240:	or     cl,ah
  40b242:	sub    eax,0x2d2c20b8
  40b247:	aam    0x6d
  40b249:	dec    edi
  40b24a:	clc    
  40b24b:	push   cs
  40b24c:	js     0x40b1e6
  40b24e:	adc    DWORD PTR [ebx-0x7c849d82],ecx
  40b254:	dec    eax
  40b255:	jl     0x40b2d4
  40b257:	fcomp  QWORD PTR [ebp-0x580af850]
  40b25d:	lds    esi,FWORD PTR [eax+0x19a1075b]
  40b263:	fcmovu st,st(0)
  40b265:	cdq    
  40b266:	aas    
  40b267:	xchg   edi,eax
  40b268:	push   edx
  40b269:	lahf   
  40b26a:	add    BYTE PTR [edx+0x17ebc84e],dh
  40b270:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b271:	mov    al,ds:0x3a14d9fe
  40b276:	push   ecx
  40b277:	(bad)  
  40b278:	ror    eax,1
  40b27a:	xchg   edx,eax
  40b27b:	jmp    0xecef:0x4c834485
  40b282:	ror    BYTE PTR [edx-0x7c],1
  40b285:	imul   esi,DWORD PTR [edi],0xe
  40b288:	daa    
  40b289:	push   0xffffff80
  40b28b:	aas    
  40b28c:	xor    eax,ecx
  40b28e:	stc    
  40b28f:	adc    BYTE PTR [edx],dl
  40b291:	icebp  
  40b292:	adc    al,BYTE PTR [ecx-0x6cf8405]
  40b298:	sub    eax,0x8fd6a7cf
  40b29d:	adc    eax,0x3d9b8b82
  40b2a2:	adc    eax,0xe85fb79e
  40b2a7:	mov    bh,BYTE PTR [esi+edi*4-0xf0039ae]
  40b2ae:	icebp  
  40b2af:	xlat   BYTE PTR ds:[ebx]
  40b2b0:	jmp    0xd884:0x78e7770d
  40b2b7:	sti    
  40b2b8:	retf   0xca51
  40b2bb:	or     al,0xcf
  40b2bd:	pop    eax
  40b2be:	and    eax,0x93c6f22a
  40b2c3:	or     al,0x68
  40b2c5:	das    
  40b2c6:	das    
  40b2c7:	outs   dx,DWORD PTR ds:[esi]
  40b2c8:	mov    dh,0x60
  40b2ca:	fnstcw WORD PTR [esi+0x47bd03ad]
  40b2d0:	out    0xca,al
  40b2d2:	and    esi,DWORD PTR [ebx]
  40b2d4:	push   es
  40b2d5:	push   es
  40b2d6:	dec    edx
  40b2d7:	retf   
  40b2d8:	(bad)  [esi]
  40b2da:	pop    ebp
  40b2db:	inc    esp
  40b2dc:	(bad)  
  40b2dd:	jne    0x40b2d5
  40b2df:	lds    edi,FWORD PTR fs:[edx-0x33e28cd8]
  40b2e6:	inc    ecx
  40b2e7:	loop   0x40b2dc
  40b2e9:	imul   ecx,ebp,0x69
  40b2ec:	into   
  40b2ed:	xchg   esi,eax
  40b2ee:	sbb    ebx,0x5d
  40b2f1:	ja     0x40b30e
  40b2f3:	in     eax,dx
  40b2f4:	sbb    eax,0x16502b3f
  40b2f9:	in     eax,0xe9
  40b2fb:	push   ecx
  40b2fc:	pop    ds
  40b2fd:	or     DWORD PTR [edi-0x38],edi
  40b300:	pushf  
  40b301:	call   0xeee7d83a
  40b306:	xchg   ebp,eax
  40b307:	retf   
  40b308:	adc    eax,0x8228ba9f
  40b30d:	scas   al,BYTE PTR es:[edi]
  40b30e:	xor    BYTE PTR [edi+eax*4+0x11303ae3],ah
  40b315:	fucomp st(1)
  40b317:	sub    eax,0x5f9e6021
  40b31c:	and    DWORD PTR [ecx+ebx*4-0x3d6094a3],eax
  40b323:	cmc    
  40b324:	gs in  eax,0x7e
  40b327:	sub    dh,BYTE PTR [eax+eiz*1-0x48]
  40b32b:	jge    0x40b2c2
  40b32d:	cwde   
  40b32e:	int    0x25
  40b330:	(bad)
  40b333:	cld    
  40b334:	or     al,0xea
  40b336:	in     al,dx
  40b337:	and    DWORD PTR [ecx-0x5e],edx
  40b33a:	rol    BYTE PTR [esi+0x7c],1
  40b33d:	cmp    al,0xbb
  40b33f:	xchg   esp,eax
  40b340:	loopne 0x40b3b5
  40b342:	push   eax
  40b343:	adc    esp,ebp
  40b345:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b346:	fwait
  40b347:	dec    edx
  40b348:	push   ebp
  40b349:	jle    0x40b304
  40b34b:	ds sub al,0x2
  40b34e:	scas   al,BYTE PTR es:[edi]
  40b34f:	add    al,0x19
  40b351:	adc    eax,0xc83346bc
  40b356:	jp     0x40b3b9
  40b358:	cmp    ebx,DWORD PTR [edi+0x7d429726]
  40b35e:	push   eax
  40b35f:	imul   edi,DWORD PTR [eax+esi*8-0x4d176bdd],0x33af35e6
  40b36a:	and    bh,BYTE PTR [eax]
  40b36c:	sbb    DWORD PTR [ecx-0x3b],esp
  40b36f:	pop    edx
  40b370:	daa    
  40b371:	dec    ebp
  40b372:	gs iret 
  40b374:	mov    ds:0x7191aa9c,eax
  40b379:	in     eax,0xe6
  40b37b:	xor    ecx,DWORD PTR [edx-0x5968e0fc]
  40b381:	cwde   
  40b382:	push   ecx
  40b383:	test   cl,cl
  40b385:	xor    esi,DWORD PTR [edx-0x17]
  40b388:	jg     0x40b36c
  40b38a:	inc    ebx
  40b38b:	stos   DWORD PTR es:[edi],eax
  40b38c:	cmp    esi,ebx
  40b38e:	std    
  40b38f:	push   ecx
  40b390:	jnp    0x40b3a9
  40b392:	add    DWORD PTR [ebx-0x7],0xcc0036d4
  40b399:	sub    BYTE PTR [ecx+0x44],dh
  40b39c:	shl    BYTE PTR [esi-0x21f02fdd],1
  40b3a2:	push   ecx
  40b3a3:	mov    eax,ds:0x6ec8c13c
  40b3a8:	and    al,BYTE PTR [ecx]
  40b3aa:	pusha  
  40b3ab:	(bad)  
  40b3ac:	mov    dl,ah
  40b3ae:	or     BYTE PTR [ebp+0x1557d6f8],ch
  40b3b4:	stos   BYTE PTR es:[edi],al
  40b3b5:	ret    
  40b3b6:	in     al,0x45
  40b3b8:	cmp    eax,0x6a7b4658
  40b3bd:	lock mov eax,ds:0xcf79e366
  40b3c3:	nop
  40b3c4:	(bad)  
  40b3c5:	fdiv   QWORD PTR [eax-0x6f]
  40b3c8:	pop    ds
  40b3c9:	jle    0x40b422
  40b3cb:	cmc    
  40b3cc:	arpl   WORD PTR [edi+edx*8+0x2d46ee0a],di
  40b3d3:	(bad)  
  40b3d4:	pop    ecx
  40b3d5:	dec    edx
  40b3d6:	mov    eax,0x9e4632
  40b3db:	cmp    esp,DWORD PTR [ebx]
  40b3dd:	leave  
  40b3de:	pop    ds
  40b3df:	mov    bh,0x80
  40b3e1:	mov    bh,0x75
  40b3e3:	adc    BYTE PTR [esi],dl
  40b3e5:	nop
  40b3e6:	inc    esp
  40b3e7:	retf   
  40b3e8:	repz enter 0xd177,0x89
  40b3ed:	dec    eax
  40b3ee:	hlt    
  40b3ef:	dec    edi
  40b3f0:	push   esp
  40b3f1:	push   edx
  40b3f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b3f3:	shl    BYTE PTR [ebp+ecx*8-0x49],1
  40b3f7:	add    DWORD PTR [ecx+0x24],edx
  40b3fa:	or     al,0xcc
  40b3fc:	ins    DWORD PTR es:[edi],dx
  40b3fd:	(bad)  
  40b3fe:	clc    
  40b3ff:	fiadd  WORD PTR [ebx]
  40b401:	push   ds
  40b402:	xchg   ebp,eax
  40b403:	adc    DWORD PTR [edx],ebx
  40b405:	test   DWORD PTR [edi],0xec694cce
  40b40b:	mov    bl,0xfc
  40b40d:	(bad)  
  40b40e:	mov    edx,0xb2799389
  40b413:	add    eax,0x8ec1e205
  40b418:	dec    ebx
  40b419:	or     bl,0x6b
  40b41c:	out    dx,eax
  40b41d:	push   ebp
  40b41e:	icebp  
  40b41f:	sar    DWORD PTR [edx-0x2164a367],0x45
  40b426:	inc    ebp
  40b427:	nop
  40b428:	std    
  40b429:	ins    BYTE PTR es:[edi],dx
  40b42a:	adc    BYTE PTR [ebp-0x2c378a19],0xfd
  40b431:	retf   
  40b432:	push   edi
  40b433:	fidivr WORD PTR [esi]
  40b435:	jmp    0x40b3c9
  40b437:	xchg   esp,eax
  40b438:	scas   al,BYTE PTR es:[edi]
  40b439:	shl    DWORD PTR [ebx],cl
  40b43b:	xchg   esi,eax
  40b43c:	xchg   edx,eax
  40b43d:	dec    esi
  40b43e:	retf   0x7484
  40b441:	retf   
  40b442:	lods   al,BYTE PTR ds:[esi]
  40b443:	add    ah,BYTE PTR [esi-0x7b191378]
  40b449:	or     al,0x75
  40b44b:	mov    ch,0xe8
  40b44d:	out    0x2e,eax
  40b44f:	icebp  
  40b450:	mov    eax,0x981fd55d
  40b455:	sbb    eax,0x4758caf9
  40b45a:	mov    esi,0x2b9f1a83
  40b45f:	test   edi,edx
  40b461:	cmp    al,0xa3
  40b463:	mov    esp,0xba5784c3
  40b468:	pop    esp
  40b469:	loope  0x40b4e3
  40b46b:	ror    BYTE PTR [esi],1
  40b46d:	call   DWORD PTR [edx+0x4]
  40b470:	add    DWORD PTR [edx],ebp
  40b472:	or     DWORD PTR [ebx+0x670b8388],ecx
  40b478:	pop    ss
  40b479:	pusha  
  40b47a:	sub    DWORD PTR [esi+0x14],eax
  40b47d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b47e:	push   ss
  40b47f:	cmp    esp,0x50
  40b482:	out    dx,al
  40b483:	mov    ds:0x8482d284,eax
  40b488:	sahf   
  40b489:	jecxz  0x40b4d1
  40b48b:	imul   esi,ebp,0xffffff9b
  40b48e:	xchg   esp,edx
  40b490:	jo     0x40b4a0
  40b492:	hlt    
  40b493:	scas   al,BYTE PTR es:[edi]
  40b494:	dec    ebp
  40b495:	outs   dx,BYTE PTR ds:[esi]
  40b496:	iret   
  40b497:	cmp    eax,0xd1d19d23
  40b49c:	dec    esi
  40b49d:	adc    al,0xd8
  40b49f:	pop    edi
  40b4a0:	shl    BYTE PTR [ebx+0x34],1
  40b4a3:	sub    al,0x5e
  40b4a5:	inc    ebp
  40b4a6:	or     DWORD PTR [ebx+0x40c4049b],0xffffffe8
  40b4ad:	loope  0x40b475
  40b4af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b4b0:	test   DWORD PTR [edi+0x64],esp
  40b4b3:	imul   ecx,edi,0x7b
  40b4b6:	xor    al,0xc0
  40b4b8:	cmc    
  40b4b9:	add    DWORD PTR [ebx-0x53a4383e],esp
  40b4bf:	cmp    eax,0xbddd8de5
  40b4c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b4c5:	aam    0x29
  40b4c7:	push   0x4f
  40b4c9:	fcmovu st,st(2)
  40b4cb:	fst    QWORD PTR ds:0xae656aee
  40b4d1:	jecxz  0x40b4ba
  40b4d3:	xor    cl,al
  40b4d5:	xor    al,0xc3
  40b4d7:	xor    ah,ch
  40b4d9:	mov    eax,ds:0xcf8f690c
  40b4de:	and    eax,0x9fc51eec
  40b4e3:	mov    cl,0x93
  40b4e5:	push   edi
  40b4e6:	hlt    
  40b4e7:	pop    esi
  40b4e8:	push   edi
  40b4e9:	pop    ebx
  40b4ea:	popf   
  40b4eb:	and    al,0xdf
  40b4ed:	push   ebp
  40b4ee:	inc    esp
  40b4ef:	sbb    ebp,edx
  40b4f1:	jno    0x40b4d0
  40b4f3:	add    BYTE PTR [edx-0x48],dl
  40b4f6:	adc    DWORD PTR [edi-0x7],edx
  40b4f9:	cwde   
  40b4fa:	pop    ebx
  40b4fb:	push   DWORD PTR [esi+0x62]
  40b4fe:	jb     0x40b531
  40b500:	xlat   BYTE PTR ds:[ebx]
  40b501:	popa   
  40b502:	cmp    BYTE PTR [edi+ebx*4-0x773fb803],cl
  40b509:	mov    bh,0x68
  40b50c:	fwait
  40b50d:	mov    BYTE PTR [edi+0x3],al
  40b510:	icebp  
  40b511:	push   esp
  40b512:	inc    eax
  40b513:	test   DWORD PTR [ebp-0x6f],ebp
  40b516:	sub    DWORD PTR [eax+0x4b156dd7],esp
  40b51c:	or     al,0x49
  40b51e:	mov    dh,0xe8
  40b520:	imul   edx,edi
  40b523:	mov    edi,DWORD PTR [ebp-0x8]
  40b526:	mov    ebx,DWORD PTR [ebp-0x10]
  40b529:	sub    ebx,edi
  40b52b:	cmp    ebx,edx
  40b52d:	ja     0x40b53b
  40b533:	mov    edx,DWORD PTR [ebp-0x2c]
  40b536:	jmp    0x40c0ee
  40b53b:	mov    edx,DWORD PTR [ebp-0x34]
  40b53e:	jmp    0x40b8fc
  40b543:	cmp    eax,0x7178931c
  40b548:	mov    bh,0x49
  40b54a:	loope  0x40b546
  40b54c:	loop   0x40b5b2
  40b54e:	pop    edx
  40b54f:	loope  0x40b533
  40b551:	mov    dl,0x1
  40b553:	rol    DWORD PTR [esi+0x7d9f7070],0x70
  40b55a:	jo     0x40b552
  40b55c:	jns    0x40b576
  40b55e:	mov    DWORD PTR [edx+esi*8+0x5184dc8d],eax
  40b565:	test   BYTE PTR [eax+0x45],dl
  40b568:	out    dx,eax
  40b569:	jge    0x40b5db
  40b56b:	imul   edx,DWORD PTR [ebp-0x18],0x172e9882
  40b572:	or     cl,BYTE PTR [edx]
  40b574:	xchg   esi,eax
  40b575:	jbe    0x40b570
  40b577:	(bad)  
  40b578:	jecxz  0x40b5e3
  40b57a:	arpl   WORD PTR gs:[edx],di
  40b57d:	push   ds
  40b57e:	jb     0x40b5d9
  40b580:	fwait
  40b581:	or     ebp,DWORD PTR [edi]
  40b583:	dec    esp
  40b584:	call   0x6feb:0xd851b30b
  40b58b:	enter  0x39e1,0x38
  40b58f:	adc    eax,0xde107af0
  40b594:	call   0x4328:0x4c4c5ae2
  40b59b:	popf   
  40b59c:	dec    ah
  40b59e:	or     eax,0x59328110
  40b5a3:	out    0xf0,eax
  40b5a5:	or     al,0xbf
  40b5a7:	pop    esp
  40b5a8:	ficom  DWORD PTR [edi+0x4d]
  40b5ab:	les    eax,FWORD PTR [ecx]
  40b5ad:	aaa    
  40b5ae:	adc    BYTE PTR [eax],ch
  40b5b0:	ds inc eax
  40b5b2:	push   ebx
  40b5b3:	ds repz xchg ebx,eax
  40b5b6:	(bad)  
  40b5b7:	mov    edi,DWORD PTR [ecx+0x9]
  40b5ba:	mov    dl,0xa0
  40b5bc:	and    eax,0x90d3098d
  40b5c1:	test   BYTE PTR [edx-0x21],dh
  40b5c4:	adc    eax,0x24a89dc3
  40b5c9:	sub    eax,0x45d2b7be
  40b5ce:	ficom  DWORD PTR [edx+esi*2+0x44ee184a]
  40b5d5:	lods   al,BYTE PTR ds:[esi]
  40b5d6:	into   
  40b5d7:	retf   0x5641
  40b5da:	add    al,0x5a
  40b5dc:	push   ebp
  40b5dd:	outs   dx,DWORD PTR ds:[esi]
  40b5de:	sub    al,0x41
  40b5e0:	push   cs
  40b5e1:	mov    esp,0xff92bb32
  40b5e6:	daa    
  40b5e7:	hlt    
  40b5e8:	push   0x80109b43
  40b5ed:	xor    al,0xf2
  40b5ef:	into   
  40b5f0:	addr16 push edi
  40b5f2:	sbb    DWORD PTR [ebx+0x5201bd57],edx
  40b5f8:	push   eax
  40b5f9:	and    DWORD PTR [ebx+0x23],ebx
  40b5fc:	or     eax,ebx
  40b5fe:	rcl    DWORD PTR [edi-0x44],1
  40b601:	xor    eax,0x2dfa86c9
  40b606:	ret    
  40b607:	inc    DWORD PTR [ebp-0x6d372291]
  40b60d:	inc    ebp
  40b60e:	pop    ebp
  40b60f:	sbb    esi,edx
  40b611:	sbb    BYTE PTR [ecx+0x3b],ah
  40b614:	pop    edx
  40b615:	mov    cl,0x33
  40b617:	inc    edi
  40b618:	popa   
  40b619:	pop    es
  40b61a:	out    0xa8,al
  40b61c:	mov    al,0x0
  40b61e:	xor    DWORD PTR [edi],esp
  40b620:	retf   
  40b621:	jb     0x40b603
  40b623:	xchg   ebx,eax
  40b624:	pop    edi
  40b626:	cld    
  40b627:	mov    edx,0x6d75055f
  40b62c:	(bad)  
  40b62e:	mov    ebp,0xea82a474
  40b633:	iret   
  40b634:	ins    BYTE PTR es:[edi],dx
  40b635:	into   
  40b636:	xor    BYTE PTR ds:0x39baceed,bl
  40b63c:	imul   eax,ebx,0xffffff99
  40b63f:	push   es
  40b640:	xlat   BYTE PTR ds:[ebx]
  40b641:	mov    ch,0x8b
  40b643:	add    eax,esp
  40b645:	jg     0x40b6a4
  40b647:	pop    ss
  40b648:	jl     0x40b62d
  40b64a:	dec    ebp
  40b64b:	dec    ebp
  40b64c:	mov    ?,WORD PTR [eax+0x5a59b65b]
  40b652:	lahf   
  40b653:	mov    eax,0xab0d7652
  40b658:	popf   
  40b659:	call   DWORD PTR [edx]
  40b65b:	into   
  40b65c:	call   0xd424:0x5b95ccc7
  40b663:	or     BYTE PTR [ecx+0x1c],0xf5
  40b667:	or     DWORD PTR [ebx-0x4a],0x151a6808
  40b66e:	repz neg BYTE PTR [eax+esi*2-0x1befa475]
  40b676:	xor    cl,bl
  40b678:	adc    eax,0x7f48a500
  40b67d:	xchg   ebx,eax
  40b67e:	in     eax,dx
  40b67f:	sbb    BYTE PTR [ebx+0xe],bh
  40b682:	imul   esi,DWORD PTR [eax+0x446d8634],0x3d083139
  40b68c:	and    al,0xed
  40b68e:	mov    bh,0x7f
  40b690:	dec    eax
  40b691:	jne    0x40b6eb
  40b693:	lea    ebx,[eax-0x6f3f1549]
  40b699:	ss xchg BYTE PTR ds:[ebx],dh
  40b69d:	cmp    al,0xa5
  40b69f:	lea    ebx,[ebx+ebx*2]
  40b6a2:	scas   eax,DWORD PTR es:[edi]
  40b6a3:	push   ecx
  40b6a4:	test   eax,0xab0e5137
  40b6a9:	and    DWORD PTR ds:0x5c748ef4,ebx
  40b6af:	movaps xmm2,xmm1
  40b6b2:	call   0x46fc76b0
  40b6b7:	mov    ah,0xea
  40b6b9:	xor    DWORD PTR [ecx],0x79b5be9
  40b6bf:	(bad)  
  40b6c0:	in     al,0x39
  40b6c2:	dec    ebp
  40b6c3:	pop    es
  40b6c4:	popf   
  40b6c5:	lahf   
  40b6c6:	jbe    0x40b727
  40b6c8:	fmul   DWORD PTR [esi+0x1c]
  40b6cb:	hlt    
  40b6cc:	cmp    al,0x21
  40b6ce:	repz xor eax,DWORD PTR [edi-0x62f7ea46]
  40b6d5:	ins    DWORD PTR es:[edi],dx
  40b6d6:	cmc    
  40b6d7:	dec    edx
  40b6d8:	sbb    al,BYTE PTR [ebx+0x4e1a82af]
  40b6de:	adc    ebp,DWORD PTR [esi]
  40b6e0:	push   0x5a
  40b6e2:	push   0x3e
  40b6e4:	xor    edx,DWORD PTR [ecx+0x73]
  40b6e7:	lds    eax,FWORD PTR [ebp+ebp*2+0x11]
  40b6eb:	add    eax,0xaa5171ba
  40b6f0:	mov    ebx,0x3402579
  40b6f5:	or     al,0xe
  40b6f7:	mov    ebx,edi
  40b6f9:	mov    ebp,0x6d0cd482
  40b6fe:	std    
  40b6ff:	imul   edi,DWORD PTR [edi-0x50d0fb49],0x76495343
  40b709:	shl    DWORD PTR ss:[eax],1
  40b70c:	arpl   WORD PTR [edi-0x6d394580],dx
  40b712:	jge    0x40b6df
  40b714:	lods   eax,DWORD PTR ds:[esi]
  40b715:	repz dec edi
  40b717:	cld    
  40b718:	push   ebp
  40b719:	call   FWORD PTR [edx-0x1cf5b255]
  40b71f:	jecxz  0x40b78b
  40b721:	ss stc 
  40b723:	add    eax,DWORD PTR [eax+0x63]
  40b726:	sbb    eax,0xa33d9161
  40b72b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b72c:	mov    bh,0x1d
  40b72e:	mov    esp,0xba7fe67e
  40b733:	js     0x40b75b
  40b735:	and    esi,DWORD PTR [esp+ebx*2]
  40b738:	mov    ch,0xe
  40b73a:	and    esi,edi
  40b73c:	xchg   DWORD PTR [esi+0x10],esi
  40b73f:	aaa    
  40b740:	pop    eax
  40b741:	sub    BYTE PTR [edx-0x209cc529],dh
  40b747:	into   
  40b748:	adc    BYTE PTR [esi+0x44],dh
  40b74b:	jnp    0x40b6eb
  40b74d:	outs   dx,BYTE PTR ss:[esi]
  40b74f:	adc    BYTE PTR [esi],0xe9
  40b752:	cdq    
  40b753:	mov    esp,DWORD PTR [edi-0x51c724f9]
  40b759:	inc    esi
  40b75a:	mov    bl,BYTE PTR [ecx-0x2b]
  40b75d:	int3   
  40b75e:	adc    BYTE PTR [ecx],0x8e
  40b761:	xchg   ecx,eax
  40b762:	jae    0x40b767
  40b764:	daa    
  40b765:	into   
  40b766:	inc    eax
  40b767:	imul   esp,DWORD PTR [ebx+0xf66bdc9],0x21
  40b76e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b76f:	shr    DWORD PTR [eax+0x1f],cl
  40b772:	ins    DWORD PTR es:[edi],dx
  40b773:	xchg   esp,eax
  40b775:	outs   dx,DWORD PTR ds:[esi]
  40b776:	mov    ebp,0xe7edeb76
  40b77b:	retf   
  40b77c:	scas   eax,DWORD PTR es:[edi]
  40b77d:	call   0x93a0008
  40b782:	test   BYTE PTR [eax+ebp*2-0xd1da1cb],bl
  40b789:	sti    
  40b78a:	test   al,0x52
  40b78c:	mov    bl,0x8d
  40b78e:	push   ds
  40b78f:	clc    
  40b790:	div    BYTE PTR ds:0x9068ed33
  40b796:	xor    al,0x9f
  40b798:	leave  
  40b799:	xchg   ebp,eax
  40b79a:	or     ebp,edx
  40b79c:	jno    0x40b7f1
  40b79e:	ret    
  40b79f:	fist   DWORD PTR [esi+0x1b]
  40b7a2:	sub    DWORD PTR [ebp+0x2a],ebp
  40b7a5:	shl    BYTE PTR [eax+edx*2-0x573abfcb],1
  40b7ac:	sub    DWORD PTR [ebp+0x739cf7e3],0xb0f61ace
  40b7b6:	push   es
  40b7b7:	add    BYTE PTR [eax],bl
  40b7b9:	inc    DWORD PTR [edx+0x25]
  40b7bc:	and    dl,dh
  40b7be:	pop    ebx
  40b7bf:	mov    ch,0xcb
  40b7c1:	or     esi,edx
  40b7c3:	ins    BYTE PTR es:[edi],dx
  40b7c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b7c5:	rcr    BYTE PTR [eax+ecx*8],cl
  40b7c8:	stos   BYTE PTR es:[edi],al
  40b7c9:	or     BYTE PTR [edi-0x27],bl
  40b7cc:	gs ja  0x40b7c4
  40b7cf:	ss out 0xe5,al
  40b7d2:	dec    esi
  40b7d3:	std    
  40b7d4:	repz arpl WORD PTR [ebp+0x80c227a],cx
  40b7db:	fldcw  WORD PTR [edi-0x20]
  40b7de:	dec    ecx
  40b7df:	adc    ebx,edi
  40b7e1:	mov    ?,WORD PTR [ebp+0x59]
  40b7e4:	jbe    0x40b7ca
  40b7e6:	mov    es,WORD PTR [eax+esi*8]
  40b7e9:	push   ebp
  40b7ea:	jae    0x40b792
  40b7ec:	mov    al,0xd9
  40b7ee:	pop    es
  40b7ef:	(bad)  
  40b7f1:	pop    ebp
  40b7f2:	xlat   BYTE PTR ds:[ebx]
  40b7f3:	lock rcr DWORD PTR [edi-0x2af5e9f6],1
  40b7fa:	sub    dl,0x82
  40b7fd:	ficom  DWORD PTR [edx+ebp*8-0x25c230f5]
  40b804:	pushf  
  40b805:	push   0xe13c1d68
  40b80a:	or     eax,DWORD PTR [ecx]
  40b80c:	popa   
  40b80d:	lahf   
  40b80e:	xchg   ecx,eax
  40b80f:	bound  ecx,QWORD PTR [edi]
  40b811:	push   cs
  40b812:	outs   dx,DWORD PTR ds:[esi]
  40b813:	or     edx,DWORD PTR [ebx]
  40b815:	push   ebp
  40b816:	(bad)  
  40b818:	inc    eax
  40b819:	ins    DWORD PTR es:[edi],dx
  40b81a:	push   ss
  40b81b:	int3   
  40b81c:	pop    edx
  40b81d:	adc    ecx,esp
  40b81f:	ja     0x40b7e4
  40b821:	not    BYTE PTR [esp+ebx*1+0x763a7cea]
  40b828:	aaa    
  40b829:	mov    edx,0x3047dd4f
  40b82e:	mov    ebp,0xb6c9940f
  40b833:	aam    0x44
  40b835:	dec    esi
  40b836:	add    DWORD PTR [ebp+eax*8-0x3fc949d7],edx
  40b83d:	xor    dl,BYTE PTR [esi+0x41]
  40b840:	bndstx [edx+edi*8],(bad)
  40b844:	aas    
  40b845:	or     edi,DWORD PTR [edx+0x7bb4dee9]
  40b84b:	int    0xa7
  40b84d:	fadd   QWORD PTR [ebx+0x70]
  40b850:	mov    bl,0x5b
  40b852:	es mov dh,0xb0
  40b855:	xor    DWORD PTR [esp+ecx*1+0x2a1b51cb],esi
  40b85c:	add    esi,DWORD PTR [ebx+0x1f]
  40b85f:	call   0xad4b:0xa8291847
  40b866:	mov    DWORD PTR [eax+0x24fded1d],edx
  40b86c:	push   esp
  40b86d:	or     ebp,DWORD PTR ss:[ebp+0x19]
  40b871:	je     0x40b894
  40b873:	aam    0x25
  40b875:	dec    edx
  40b876:	in     eax,0xa6
  40b878:	ror    BYTE PTR [eax-0x60],1
  40b87b:	fwait
  40b87c:	cs mov cl,0xdd
  40b87f:	iret   
  40b880:	sbb    esi,esi
  40b882:	cli    
  40b883:	call   0x7ab87bc0
  40b888:	push   ecx
  40b889:	push   ecx
  40b88a:	xchg   esp,eax
  40b88b:	dec    ecx
  40b88c:	adc    BYTE PTR [eax-0x21],cl
  40b88f:	or     DWORD PTR [ecx-0x4b],edx
  40b892:	je     0x40b823
  40b894:	xchg   DWORD PTR [edi],esp
  40b896:	push   esp
  40b897:	pop    edi
  40b898:	or     edx,DWORD PTR [esi]
  40b89a:	jle    0x40b89d
  40b89c:	out    0xc0,al
  40b89e:	arpl   WORD PTR [esi+esi*2+0x153e5614],ax
  40b8a5:	sahf   
  40b8a6:	pop    ebp
  40b8a7:	(bad)  
  40b8a8:	sub    eax,DWORD PTR [edi]
  40b8aa:	(bad)  
  40b8ac:	je     0x40b8ea
  40b8ae:	lock stc 
  40b8b0:	cmp    eax,0x39f3bd13
  40b8b5:	add    ah,ch
  40b8b7:	push   edx
  40b8b8:	sbb    bl,0x4e
  40b8bb:	ret    0xa5c2
  40b8be:	jae    0x40b8ad
  40b8c0:	jmp    0xe53fdefb
  40b8c5:	jns    0x40b945
  40b8c7:	mov    bh,0x1
  40b8c9:	push   ebx
  40b8ca:	in     al,dx
  40b8cb:	(bad)  
  40b8cc:	add    DWORD PTR [ecx+0x41265c95],ebp
  40b8d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b8d3:	je     0x40b8a2
  40b8d5:	push   esp
  40b8d6:	std    
  40b8d7:	sahf   
  40b8d8:	(bad)  
  40b8d9:	sub    al,0x62
  40b8db:	inc    ebp
  40b8dc:	ret    0xdefd
  40b8df:	ds call 0x16a1a5e9
  40b8e5:	cmp    al,dl
  40b8e7:	rol    BYTE PTR ss:[ecx+0xd9e73df],cl
  40b8ee:	add    BYTE PTR es:[ebp-0x7a6c0350],dl
  40b8f5:	inc    ecx
  40b8f6:	adc    al,0xc8
  40b8f8:	adc    al,0xf4
  40b8fa:	mov    eax,0xfc7d8b35
  40b8ff:	xor    edx,eax
  40b901:	xor    edi,eax
  40b903:	add    edi,ecx
  40b905:	add    edx,ecx
  40b907:	imul   edx,edi
  40b90a:	mov    edi,DWORD PTR [ebp-0x8]
  40b90d:	mov    ebx,DWORD PTR [ebp-0x10]
  40b910:	sub    ebx,edi
  40b912:	cmp    ebx,edx
  40b914:	ja     0x40b922
  40b91a:	mov    edx,DWORD PTR [ebp-0x30]
  40b91d:	jmp    0x40c0ee
  40b922:	mov    edx,DWORD PTR [ebp-0x38]
  40b925:	mov    edi,DWORD PTR [ebp-0x4]
  40b928:	xor    edx,eax
  40b92a:	xor    edi,eax
  40b92c:	add    edi,ecx
  40b92e:	add    edx,ecx
  40b930:	imul   edx,edi
  40b933:	mov    edi,DWORD PTR [ebp-0x8]
  40b936:	jmp    0x40bcf4
  40b93b:	xchg   ebp,eax
  40b93c:	fcomi  st,st(6)
  40b93e:	push   esi
  40b93f:	jb     0x40b992
  40b941:	mov    ch,0xdb
  40b943:	shl    BYTE PTR [ebx-0x4d6b9905],cl
  40b949:	jbe    0x40b933
  40b94b:	pusha  
  40b94c:	xor    DWORD PTR [eax+0x70],0xffffff9f
  40b950:	jge    0x40b9c2
  40b952:	jo     0x40b955
  40b954:	into   
  40b955:	cmp    BYTE PTR [eax],0x5
  40b958:	xchg   bh,ch
  40b95a:	daa    
  40b95b:	fimul  DWORD PTR [ebx-0x35f8657a]
  40b961:	dec    ecx
  40b962:	dec    edx
  40b963:	pop    edi
  40b964:	jmp    0x3629c3f1
  40b969:	shr    BYTE PTR [esi+0x1adefe96],1
  40b96f:	jae    0x40b99c
  40b971:	scas   eax,DWORD PTR es:[edi]
  40b972:	sub    DWORD PTR [di-0x7ae],esp
  40b977:	ins    DWORD PTR es:[edi],dx
  40b978:	cmp    DWORD PTR [edi-0x54],edx
  40b97b:	test   al,0x74
  40b97d:	retf   0x5630
  40b980:	retf   
  40b981:	mov    ah,0xff
  40b983:	dec    ebp
  40b984:	inc    esi
  40b985:	inc    ebx
  40b986:	(bad)  
  40b987:	int    0x6d
  40b989:	pop    ss
  40b98a:	rcl    BYTE PTR [esi],0x2a
  40b98d:	lods   al,BYTE PTR ds:[esi]
  40b98e:	outs   dx,DWORD PTR ds:[esi]
  40b98f:	push   edi
  40b990:	mov    eax,0x47a0cec5
  40b995:	or     ecx,0x395c675e
  40b99b:	sub    cl,BYTE PTR [esi-0x1a]
  40b99e:	sar    BYTE PTR [eax],cl
  40b9a0:	pop    ebp
  40b9a1:	inc    edi
  40b9a2:	lock lods al,BYTE PTR ds:[esi]
  40b9a4:	dec    edx
  40b9a5:	call   0xcaac:0x27e49af8
  40b9ac:	jae    0x40b981
  40b9ae:	jmp    0x3d6e0822
  40b9b3:	pusha  
  40b9b4:	stos   DWORD PTR es:[edi],eax
  40b9b5:	adc    cl,BYTE PTR [ebx+edi*8]
  40b9b8:	push   cs
  40b9b9:	or     eax,eax
  40b9bb:	mov    esp,edi
  40b9bd:	dec    esi
  40b9be:	mov    dh,0x20
  40b9c0:	sbb    edi,DWORD PTR [esi-0x3a]
  40b9c3:	pop    esp
  40b9c4:	lds    eax,FWORD PTR [ecx+0xa]
  40b9c7:	sbb    eax,0xf2387df8
  40b9cc:	fwait
  40b9cd:	loope  0x40b983
  40b9cf:	int    0x8b
  40b9d1:	sbb    al,0x99
  40b9d3:	xchg   ebp,eax
  40b9d4:	xlat   BYTE PTR ds:[ebx]
  40b9d5:	pop    esi
  40b9d6:	mov    edi,0xfebbcea4
  40b9db:	mov    BYTE PTR ds:0x4a1a4348,ch
  40b9e1:	lahf   
  40b9e2:	pop    edi
  40b9e3:	push   ss
  40b9e4:	pop    eax
  40b9e5:	imul   BYTE PTR [ecx-0x6b]
  40b9e8:	out    0xda,al
  40b9ea:	cwde   
  40b9eb:	clc    
  40b9ec:	test   al,0x35
  40b9ee:	or     DWORD PTR [ebp+0x74],edx
  40b9f1:	or     edx,DWORD PTR [ebx-0x1b]
  40b9f4:	add    BYTE PTR [edi+0x48],dl
  40b9f7:	fwait
  40b9f8:	into   
  40b9f9:	sar    DWORD PTR [ecx+0x7f],1
  40b9fc:	mov    ebx,gs
  40b9fe:	popa   
  40b9ff:	pop    ss
  40ba00:	jmp    0x6cdd:0x99fc128a
  40ba07:	stos   BYTE PTR es:[edi],al
  40ba08:	mov    ah,0x70
  40ba0a:	or     edi,DWORD PTR [ebp-0x6ddea4b6]
  40ba10:	je     0x40b9cd
  40ba12:	pop    ss
  40ba13:	cmp    al,0xb8
  40ba15:	repnz mov al,ds:0x2647f96f
  40ba1b:	cmp    DWORD PTR [eax+0x7c62270b],esi
  40ba21:	xchg   esp,eax
  40ba22:	jg     0x40ba60
  40ba24:	in     al,0x57
  40ba26:	ror    cl,1
  40ba28:	push   ebx
  40ba29:	addr16 jbe 0x40b9bf
  40ba2c:	cmc    
  40ba2d:	fisubr WORD PTR [ebp+0x50]
  40ba30:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ba31:	pushf  
  40ba32:	fs nop
  40ba34:	bound  eax,QWORD PTR [eax-0x49ac4a32]
  40ba3a:	cdq    
  40ba3b:	sub    ebp,esp
  40ba3d:	div    BYTE PTR cs:[eax+0x3b]
  40ba41:	jle    0x40b9f8
  40ba43:	icebp  
  40ba44:	icebp  
  40ba45:	(bad)  
  40ba46:	mov    ds:0x4bbf1b12,eax
  40ba4b:	aam    0x6
  40ba4d:	cmp    al,0xca
  40ba4f:	xor    bh,BYTE PTR [eax+0x5e]
  40ba52:	pop    ss
  40ba53:	(bad)  
  40ba54:	mov    ah,0xf0
  40ba56:	mov    eax,0xc74e223
  40ba5b:	mov    edi,0xef069a8c
  40ba60:	ror    DWORD PTR [esi-0x19],0xc7
  40ba64:	sbb    bl,bl
  40ba66:	sbb    ecx,DWORD PTR [ebx+0x73abc16b]
  40ba6c:	push   0xffffff8c
  40ba6e:	xchg   ecx,eax
  40ba6f:	and    BYTE PTR [esi-0x1b749c1f],dh
  40ba75:	jne    0x40ba85
  40ba77:	xlat   BYTE PTR ds:[ebx]
  40ba78:	mov    esi,0x8eb7b557
  40ba7d:	adc    edx,DWORD PTR [ebx-0x3537f3bb]
  40ba83:	in     eax,dx
  40ba84:	fidivr WORD PTR [ebx+0x2]
  40ba87:	mov    esp,0x2473739d
  40ba8c:	or     al,ch
  40ba8e:	sub    al,0xaa
  40ba90:	xor    al,0x26
  40ba92:	out    0x8a,eax
  40ba94:	jl     0x40bae2
  40ba96:	and    eax,0xadca9771
  40ba9b:	out    0x1e,eax
  40ba9d:	bound  esi,QWORD PTR [ebx+0x6a]
  40baa0:	adc    BYTE PTR [edx+0x76],cl
  40baa3:	pop    ds
  40baa4:	xchg   ebp,eax
  40baa5:	adc    al,BYTE PTR [edx]
  40baa7:	test   al,0xc4
  40baa9:	push   eax
  40baaa:	jno    0x40bac6
  40baac:	add    DWORD PTR [edx],ecx
  40baae:	fs hlt 
  40bab0:	call   0x42bc:0xbff8a725
  40bab7:	daa    
  40bab8:	mov    ecx,esp
  40baba:	xor    bp,WORD PTR [ecx]
  40babd:	or     eax,DWORD PTR [edi]
  40babf:	xchg   ecx,eax
  40bac0:	loop   0x40ba4b
  40bac2:	adc    DWORD PTR [edi-0x1b],edi
  40bac5:	inc    esi
  40bac6:	dec    eax
  40bac7:	inc    eax
  40bac8:	call   0x3bd0:0x582798ec
  40bacf:	xchg   BYTE PTR [ecx],bh
  40bad1:	ss (bad) 
  40bad4:	dec    ebp
  40bad5:	test   BYTE PTR [ebp+0x44],bl
  40bad8:	in     al,0xf
  40bada:	(bad)  
  40badc:	popa   
  40badd:	pop    ecx
  40bade:	mov    ebx,0x954b8c91
  40bae3:	popf   
  40bae4:	and    al,0xbf
  40bae6:	lock jb 0x40bb59
  40bae9:	inc    esi
  40baea:	sbb    esp,eax
  40baec:	dec    edx
  40baed:	sub    eax,0x1416c014
  40baf2:	adc    BYTE PTR [ecx-0x334767c0],0x96
  40baf9:	pop    esi
  40bafa:	cwde   
  40bafb:	push   ss
  40bafc:	rol    DWORD PTR [ecx],cl
  40bafe:	adc    ecx,ebp
  40bb00:	mov    bl,0xd4
  40bb02:	or     ebp,DWORD PTR [esi-0x72]
  40bb05:	push   esi
  40bb06:	retf   
  40bb07:	inc    esi
  40bb08:	jg     0x40bb04
  40bb0a:	and    DWORD PTR [esi+0x25],edx
  40bb0d:	daa    
  40bb0e:	fwait
  40bb0f:	aaa    
  40bb10:	mov    ebp,0x66b6dc9
  40bb15:	add    al,0x94
  40bb17:	adc    eax,0xf93432e4
  40bb1c:	scas   eax,DWORD PTR es:[edi]
  40bb1d:	or     BYTE PTR [edx+ecx*4],al
  40bb20:	xor    ch,BYTE PTR [esp+eax*4-0x14]
  40bb24:	add    al,0x5
  40bb26:	pop    eax
  40bb27:	scas   eax,DWORD PTR es:[edi]
  40bb28:	int3   
  40bb29:	stc    
  40bb2a:	push   edx
  40bb2b:	fs ins DWORD PTR es:[edi],dx
  40bb2d:	mov    ecx,eax
  40bb2f:	out    0x3c,al
  40bb31:	nop
  40bb32:	mov    al,ds:0x8802ae3e
  40bb37:	js     0x40bb40
  40bb39:	test   eax,0x40a51454
  40bb3e:	pop    ds
  40bb3f:	adc    ebx,DWORD PTR [ebx]
  40bb41:	in     al,0x20
  40bb43:	nop
  40bb44:	cmp    bl,BYTE PTR [edx]
  40bb46:	xchg   ecx,eax
  40bb47:	xchg   BYTE PTR [ecx+edx*4+0x8f1605],bl
  40bb4e:	loop   0x40baff
  40bb50:	int3   
  40bb51:	and    cl,0x3d
  40bb54:	data16 jns 0x40bb9e
  40bb57:	arpl   WORD PTR [eax+0x7988ab27],cx
  40bb5d:	out    dx,eax
  40bb5e:	dec    esp
  40bb5f:	data16 jo 0x40bb5f
  40bb62:	jno    0x40bba8
  40bb64:	imul   ebp,esi,0x75
  40bb67:	test   al,0x4c
  40bb69:	ret    
  40bb6a:	into   
  40bb6b:	fbstp  TBYTE PTR [edx+edx*1-0x35]
  40bb6f:	out    0x3a,eax
  40bb71:	and    cl,dh
  40bb73:	mov    ah,0x1f
  40bb75:	mov    cl,0x4
  40bb77:	gs jb  0x40bb59
  40bb7a:	adc    cl,BYTE PTR [ecx-0x2e1c033]
  40bb80:	rcr    BYTE PTR [edi+0x26],0xf3
  40bb84:	sbb    cl,BYTE PTR [ecx]
  40bb86:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bb87:	add    al,0x79
  40bb89:	xor    ebx,0x59
  40bb8c:	ret    0x41d6
  40bb8f:	(bad)  
  40bb90:	jae    0x40bb37
  40bb92:	jnp    0x40bb92
  40bb94:	stos   BYTE PTR es:[edi],al
  40bb95:	and    DWORD PTR [edx],ebx
  40bb97:	and    ch,BYTE PTR [ebx-0x3a]
  40bb9a:	js     0x40bb5b
  40bb9c:	jbe    0x40bc02
  40bb9e:	retf   
  40bb9f:	inc    edi
  40bba0:	push   ecx
  40bba1:	add    al,0x83
  40bba3:	or     dh,0xee
  40bba6:	mov    esp,DWORD PTR [ebx]
  40bba8:	adc    eax,DWORD PTR [eax-0x2c]
  40bbab:	out    dx,eax
  40bbac:	test   dl,0xdb
  40bbaf:	xor    DWORD PTR [esi-0x72ce0124],ebx
  40bbb5:	pop    ebx
  40bbb6:	enter  0xd064,0xe9
  40bbba:	jp     0x40bc2f
  40bbbc:	inc    edi
  40bbbd:	mov    al,0xe6
  40bbbf:	daa    
  40bbc0:	outs   dx,BYTE PTR ds:[esi]
  40bbc1:	cli    
  40bbc2:	stos   BYTE PTR es:[edi],al
  40bbc3:	repnz bound ecx,QWORD PTR [si]
  40bbc7:	or     esi,ecx
  40bbc9:	or     DWORD PTR [edx-0x4dce224e],esp
  40bbcf:	pop    ds
  40bbd0:	aaa    
  40bbd1:	mov    cl,0x9e
  40bbd3:	rol    DWORD PTR [ebp-0x29e15715],0xf3
  40bbda:	adc    BYTE PTR [edi+0x5f9937fa],dh
  40bbe0:	add    ebx,DWORD PTR [edx+0x463dc9f4]
  40bbe6:	fstp   QWORD PTR [ebp+0x55]
  40bbe9:	inc    esp
  40bbea:	jo     0x40bbfd
  40bbec:	dec    esp
  40bbed:	in     al,0xc
  40bbef:	iret   
  40bbf0:	pop    ds
  40bbf1:	adc    al,0x85
  40bbf3:	push   esp
  40bbf4:	je     0x40bc19
  40bbf6:	and    BYTE PTR [ecx-0x57305dd],al
  40bbfc:	rol    BYTE PTR [esi],0x29
  40bbff:	xlat   BYTE PTR ds:[ebx]
  40bc00:	enter  0x76b6,0xb3
  40bc04:	lods   eax,DWORD PTR ds:[esi]
  40bc05:	ret    
  40bc06:	cdq    
  40bc07:	gs scas eax,DWORD PTR es:[edi]
  40bc09:	loope  0x40bbd9
  40bc0b:	pushf  
  40bc0c:	xchg   ebp,eax
  40bc0d:	data16 mov gs,WORD PTR [edi-0x1661c05]
  40bc14:	xchg   ebx,eax
  40bc15:	mov    edi,DWORD PTR [edi-0x3f]
  40bc18:	jns    0x40bbec
  40bc1a:	sub    ecx,DWORD PTR [ebp-0x6152b139]
  40bc20:	stos   BYTE PTR es:[edi],al
  40bc21:	mov    eax,0xc62505fd
  40bc26:	pop    edi
  40bc27:	add    dl,BYTE PTR [eax]
  40bc29:	xchg   esi,eax
  40bc2a:	js     0x40bc7e
  40bc2c:	sub    eax,0x8a0704e8
  40bc31:	fsub   st(7),st
  40bc33:	fadd   QWORD PTR [edi+0x0]
  40bc36:	mov    eax,ss:0xf9e005d8
  40bc3c:	loope  0x40bc77
  40bc3e:	lods   al,BYTE PTR ds:[esi]
  40bc3f:	and    esi,DWORD PTR [edx+0x26c5f818]
  40bc45:	fwait
  40bc46:	popf   
  40bc47:	dec    esi
  40bc48:	xor    DWORD PTR [ebx+0x0],ebx
  40bc4b:	and    esi,ebx
  40bc4d:	stos   BYTE PTR es:[edi],al
  40bc4e:	jne    0x40bc76
  40bc50:	pop    ss
  40bc51:	add    DWORD PTR cs:[ebp-0xd],edx
  40bc55:	pop    ebx
  40bc56:	aas    
  40bc57:	jne    0x40bc3d
  40bc59:	ins    DWORD PTR es:[edi],dx
  40bc5a:	sub    eax,0x7a164623
  40bc5f:	cli    
  40bc60:	retf   0xce0
  40bc63:	xchg   DWORD PTR [ecx],edi
  40bc65:	and    eax,0xe93453cb
  40bc6a:	xchg   ebp,eax
  40bc6b:	inc    ebx
  40bc6c:	dec    eax
  40bc6d:	ror    DWORD PTR [ebp-0x27b1afda],0x6f
  40bc74:	neg    DWORD PTR [ebx+0x49]
  40bc77:	int3   
  40bc78:	jbe    0x40bc57
  40bc7a:	jns    0x40bccd
  40bc7c:	jp     0x40bc0e
  40bc7e:	loop   0x40bccb
  40bc80:	mov    esp,0xb4bd307a
  40bc85:	(bad)  
  40bc86:	push   edx
  40bc87:	push   cs
  40bc88:	inc    esi
  40bc89:	addr16 pop ebx
  40bc8b:	jmp    0xf370:0xe02dbda0
  40bc92:	xchg   ecx,eax
  40bc93:	inc    edx
  40bc94:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bc95:	(bad)  
  40bc97:	lahf   
  40bc98:	push   eax
  40bc99:	xor    BYTE PTR [esp+0x3c74437a],0x7e
  40bca1:	pop    esi
  40bca2:	jle    0x40bcc9
  40bca4:	pop    edi
  40bca5:	push   edi
  40bca6:	aam    0x4d
  40bca8:	fwait
  40bca9:	jg     0x40bc86
  40bcab:	scas   eax,DWORD PTR es:[edi]
  40bcac:	std    
  40bcad:	cli    
  40bcae:	or     al,0x5a
  40bcb0:	lahf   
  40bcb1:	mov    WORD PTR [edx+0x9435f4a],?
  40bcb7:	xchg   ecx,eax
  40bcb8:	test   eax,0xb88c9f08
  40bcbd:	push   es
  40bcbe:	je     0x40bc5f
  40bcc0:	or     BYTE PTR [edx+0x51],bh
  40bcc3:	or     ch,BYTE PTR [esi+0x1d31adc6]
  40bcc9:	and    DWORD PTR [ebp-0xd],ecx
  40bccc:	and    edx,DWORD PTR [edx+0x2d6c5fd8]
  40bcd2:	shl    DWORD PTR [ebp+0x7c7d5fde],0xc6
  40bcd9:	inc    esi
  40bcda:	(bad)  
  40bcdb:	out    0x7f,al
  40bcdd:	ja     0x40bd41
  40bcdf:	xchg   esp,eax
  40bce0:	mov    bl,0x78
  40bce2:	fiadd  WORD PTR [ebx]
  40bce4:	leave  
  40bce5:	imul   ebp,DWORD PTR [eax+0x6fddccf9],0x31
  40bcec:	ins    DWORD PTR es:[edi],dx
  40bced:	inc    esi
  40bcee:	popf   
  40bcef:	sub    DWORD PTR [edx],0xffffff86
  40bcf2:	xchg   edi,eax
  40bcf3:	push   eax
  40bcf4:	mov    ebx,DWORD PTR [ebp-0x10]
  40bcf7:	sub    ebx,edi
  40bcf9:	cmp    ebx,edx
  40bcfb:	ja     0x40bd09
  40bd01:	mov    edx,DWORD PTR [ebp-0x34]
  40bd04:	jmp    0x40c0ee
  40bd09:	mov    edx,DWORD PTR [ebp-0x3c]
  40bd0c:	mov    edi,DWORD PTR [ebp-0x4]
  40bd0f:	xor    edx,eax
  40bd11:	xor    edi,eax
  40bd13:	add    edx,ecx
  40bd15:	add    edi,ecx
  40bd17:	imul   edx,edi
  40bd1a:	mov    edi,DWORD PTR [ebp-0x8]
  40bd1d:	mov    ebx,DWORD PTR [ebp-0x10]
  40bd20:	sub    ebx,edi
  40bd22:	cmp    ebx,edx
  40bd24:	mov    edx,DWORD PTR [ebp-0x38]
  40bd27:	jbe    0x40c0ee
  40bd2d:	jmp    0x40c0eb
  40bd32:	xchg   edx,eax
  40bd33:	dec    edx
  40bd34:	inc    edx
  40bd35:	inc    esp
  40bd36:	inc    edx
  40bd37:	push   esp
  40bd38:	xchg   edx,eax
  40bd39:	dec    edx
  40bd3a:	fdiv   DWORD PTR [edx+edi*8]
  40bd3d:	adc    dh,BYTE PTR [edi+0x30]
  40bd40:	add    cl,BYTE PTR ds:0x70708f8f
  40bd46:	lahf   
  40bd47:	jge    0x40bdb9
  40bd49:	jo     0x40bce0
  40bd4b:	xor    eax,0x32c806b
  40bd50:	push   esp
  40bd51:	lock call 0x208f:0x7850cca9
  40bd59:	sbb    BYTE PTR [ebp-0x25f12a72],dh
  40bd5f:	mov    bl,0xc0
  40bd61:	xor    eax,0xb9bc9413
  40bd66:	add    dh,ch
  40bd68:	push   es
  40bd69:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bd6a:	pop    edx
  40bd6b:	mov    dl,0xb5
  40bd6d:	shl    DWORD PTR [edi],cl
  40bd6f:	sti    
  40bd70:	retf   
  40bd71:	lds    ebp,FWORD PTR [eax]
  40bd73:	xor    DWORD PTR [eax-0x66],0xffffffc5
  40bd77:	cmp    eax,0x80d1bfad
  40bd7c:	xchg   esi,eax
  40bd7d:	sub    eax,DWORD PTR [edx+0x19]
  40bd80:	add    bh,ah
  40bd82:	mov    dh,0x1
  40bd84:	jmp    0xef473444
  40bd89:	retf   0x8b19
  40bd8c:	lods   eax,DWORD PTR ds:[esi]
  40bd8d:	scas   al,BYTE PTR es:[edi]
  40bd8e:	adc    eax,0x52944171
  40bd93:	(bad)  
  40bd94:	lods   eax,DWORD PTR ds:[esi]
  40bd95:	adc    ch,BYTE PTR [ebx]
  40bd97:	or     dh,al
  40bd99:	xchg   BYTE PTR [ebp+0x3a],bl
  40bd9c:	sub    al,0x62
  40bd9e:	shl    bl,cl
  40bda0:	dec    ebp
  40bda1:	icebp  
  40bda2:	out    dx,eax
  40bda3:	test   eax,0x35f8cfed
  40bda8:	in     eax,dx
  40bda9:	gs sub ch,dh
  40bdac:	cs pop esp
  40bdae:	xor    DWORD PTR [ebp-0x29],edx
  40bdb1:	xchg   ebx,eax
  40bdb2:	lds    ecx,FWORD PTR [esp+ebp*2-0x3d]
  40bdb6:	push   edi
  40bdb7:	dec    DWORD PTR [ebx+0x304a12a2]
  40bdbd:	inc    ecx
  40bdbe:	call   0x7bae3adb
  40bdc3:	sbb    bh,BYTE PTR [ebx-0x6d3fdf07]
  40bdc9:	pop    esi
  40bdca:	mov    ecx,0xac24ee57
  40bdcf:	loop   0x40be1a
  40bdd1:	fs adc eax,0xdbff1c6a
  40bdd7:	ror    ecx,1
  40bdd9:	leave  
  40bdda:	es jo  0x40bdf6
  40bddd:	mov    bl,0x40
  40bddf:	jae    0x40be1d
  40bde1:	into   
  40bde2:	out    0x27,al
  40bde4:	mov    eax,ds:0xe91d0ba6
  40bde9:	push   ss
  40bdea:	das    
  40bdeb:	loope  0x40be0e
  40bded:	sbb    BYTE PTR [ecx+0x61],cl
  40bdf0:	int    0xe2
  40bdf2:	sub    DWORD PTR [edi-0x4fb59019],eax
  40bdf8:	push   ebp
  40bdf9:	jne    0x40bdf3
  40bdfb:	jbe    0x40bdaf
  40bdfd:	in     al,dx
  40bdfe:	test   eax,0xcdc4d550
  40be03:	and    eax,DWORD PTR [esi+0x7c6ffd52]
  40be09:	add    ebx,0xb35de64f
  40be0f:	pop    ds
  40be10:	push   cs
  40be11:	xchg   ecx,eax
  40be12:	cmp    al,0x50
  40be14:	pop    eax
  40be15:	imul   edi,DWORD PTR [esi+0x72],0x8cf63d00
  40be1c:	adc    eax,0x5146027a
  40be21:	call   0x666896fd
  40be26:	mov    BYTE PTR [edx],ah
  40be28:	xor    al,0x6f
  40be2a:	sar    BYTE PTR [ebx-0x19],cl
  40be2d:	sti    
  40be2e:	cmp    DWORD PTR [edi+ecx*8],0xf730c27b
  40be35:	cmp    ah,BYTE PTR [edi+0x77eab99]
  40be3b:	stos   DWORD PTR es:[edi],eax
  40be3c:	ins    BYTE PTR es:[edi],dx
  40be3d:	sahf   
  40be3e:	jae    0x40bde5
  40be40:	jno    0x40be68
  40be42:	or     eax,0x9d3cacfa
  40be47:	sub    al,0x1
  40be49:	jecxz  0x40be63
  40be4b:	bound  ebx,QWORD PTR [ecx+0x30]
  40be4e:	cmp    al,0xde
  40be50:	test   BYTE PTR [eax],cl
  40be52:	dec    ecx
  40be53:	mov    DWORD PTR [edx+0x35],esi
  40be56:	rol    DWORD PTR [eax],cl
  40be58:	mov    dh,0x67
  40be5a:	mov    ebp,0x28485a34
  40be5f:	pop    ebx
  40be60:	add    esp,DWORD PTR [ebp-0x1e]
  40be63:	push   ebp
  40be64:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40be65:	loopne 0x40be8e
  40be67:	push   esi
  40be68:	popf   
  40be69:	das    
  40be6a:	sbb    cl,BYTE PTR [edi-0x57ca09c1]
  40be70:	sbb    eax,0x6c14d86d
  40be75:	mov    DWORD PTR [ebp-0x1e],esi
  40be78:	in     eax,0x75
  40be7a:	jmp    0x94f9:0x7445868f
  40be81:	or     eax,0xe3270d8d
  40be86:	push   0x9131c469
  40be8b:	sbb    DWORD PTR [eax-0x42773c21],esp
  40be91:	cwde   
  40be92:	and    BYTE PTR gs:[ebx-0x4e],bh
  40be96:	pop    ecx
  40be97:	jb     0x40be8a
  40be99:	dec    edi
  40be9a:	adc    al,0xb1
  40be9c:	sub    bh,BYTE PTR cs:[ebp-0x4ae6cd00]
  40bea3:	pop    edx
  40bea4:	test   DWORD PTR [edx],edi
  40bea6:	push   eax
  40bea7:	cli    
  40bea8:	adc    DWORD PTR [ebx-0x4021cc40],ebp
  40beae:	sbb    ecx,DWORD PTR [eax]
  40beb0:	shl    BYTE PTR [edx+0x4c6e5801],0x67
  40beb7:	loopne 0x40be53
  40beb9:	ror    DWORD PTR [esi-0x440af4d6],1
  40bebf:	scas   eax,DWORD PTR es:[edi]
  40bec0:	je     0x40be89
  40bec2:	inc    ebp
  40bec3:	cli    
  40bec4:	mov    ds:0xcb126be,al
  40bec9:	jmp    0x40bf17
  40becb:	jle    0x40bf22
  40becd:	hlt    
  40bece:	fcom   DWORD PTR [ebx+0x70ceffd5]
  40bed4:	stos   DWORD PTR es:[edi],eax
  40bed5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bed6:	and    BYTE PTR [eax+0x2f0d072a],ah
  40bedc:	lds    edi,FWORD PTR [edi+0x35]
  40bedf:	ret    0x87a5
  40bee2:	ins    DWORD PTR es:[edi],dx
  40bee3:	adc    DWORD PTR [ebp+0x47],ebp
  40bee6:	in     eax,0x1a
  40bee8:	mov    BYTE PTR [edi+0x1d],dh
  40beeb:	pop    ebp
  40beec:	ins    BYTE PTR es:[edi],dx
  40beed:	pushf  
  40beee:	inc    esp
  40beef:	mov    gs,ecx
  40bef1:	xor    dl,al
  40bef3:	test   al,0x1f
  40bef5:	sub    ecx,DWORD PTR [ebp-0x45e74c78]
  40befb:	(bad)  
  40befc:	mov    cl,0x5
  40befe:	test   al,0x23
  40bf00:	dec    ebp
  40bf01:	in     eax,dx
  40bf02:	out    0xf7,al
  40bf04:	push   cs
  40bf05:	inc    esp
  40bf06:	dec    ebx
  40bf07:	neg    DWORD PTR [esi+0x3b272b61]
  40bf0d:	add    al,0xc5
  40bf0f:	mov    bh,BYTE PTR [edi-0x60]
  40bf12:	das    
  40bf13:	(bad)  
  40bf14:	pushf  
  40bf15:	out    dx,eax
  40bf16:	fdiv   st,st(6)
  40bf18:	rcr    DWORD PTR [esi-0x7c],cl
  40bf1b:	cmp    BYTE PTR [ebx+0x22],bl
  40bf1e:	and    ebx,ecx
  40bf20:	hlt    
  40bf21:	into   
  40bf22:	loop   0x40bf54
  40bf24:	nop
  40bf25:	jae    0x40bf51
  40bf27:	mov    al,ds:0x37cd666d
  40bf2c:	sub    BYTE PTR [eax+edx*4-0x2fa1a2c2],bl
  40bf33:	add    eax,0x421c1507
  40bf38:	lods   al,BYTE PTR ds:[esi]
  40bf39:	xor    DWORD PTR [esi],ecx
  40bf3b:	test   DWORD PTR [edi+0x1177970a],esi
  40bf41:	dec    ebx
  40bf42:	mov    ds:0x4c542357,eax
  40bf47:	push   edx
  40bf48:	test   eax,0x3ee0e324
  40bf4d:	xchg   BYTE PTR [edi],bl
  40bf4f:	mov    cl,0x75
  40bf51:	push   edi
  40bf52:	es in  eax,0x9e
  40bf55:	or     cl,bh
  40bf57:	loope  0x40bf1f
  40bf59:	jne    0x40bf61
  40bf5b:	jmp    0x6451:0x40f4a0e9
  40bf62:	pop    eax
  40bf63:	out    dx,eax
  40bf64:	xchg   edi,eax
  40bf65:	mov    ss,WORD PTR [esi]
  40bf67:	nop
  40bf68:	popw   ds
  40bf6a:	sub    ch,BYTE PTR [eax-0x23]
  40bf6d:	or     al,0xbf
  40bf6f:	dec    ecx
  40bf70:	test   al,0x9e
  40bf72:	in     al,dx
  40bf73:	cli    
  40bf74:	add    BYTE PTR [edi+0x68],cl
  40bf77:	outs   dx,DWORD PTR ds:[esi]
  40bf78:	ds call 0x385b:0x88571a00
  40bf80:	inc    edi
  40bf81:	test   DWORD PTR [ebx+eiz*1-0x576a56d3],ebx
  40bf88:	mov    ch,0x76
  40bf8a:	fisubr WORD PTR [edi+edx*1+0x41]
  40bf8e:	loop   0x40bfd8
  40bf90:	push   ebp
  40bf91:	dec    ebp
  40bf92:	leave  
  40bf93:	sar    BYTE PTR [ebx],cl
  40bf95:	fsubr  QWORD PTR [esi]
  40bf97:	ss and edx,esi
  40bf9a:	mov    eax,edx
  40bf9c:	cmp    BYTE PTR [edx],ah
  40bf9e:	push   edx
  40bf9f:	repnz shl DWORD PTR [ebp-0x3a],cl
  40bfa3:	jne    0x40c003
  40bfa5:	aaa    
  40bfa6:	les    ebp,FWORD PTR [edx]
  40bfa8:	std    
  40bfa9:	les    esi,FWORD PTR [edx+0x963681f]
  40bfaf:	sbb    DWORD PTR [ecx+0x6b8001ad],edi
  40bfb5:	xchg   edi,eax
  40bfb6:	mov    al,0xd1
  40bfb8:	jbe    0x40c037
  40bfba:	mov    ebp,0xc22200c7
  40bfbf:	fcmovb st,st(5)
  40bfc1:	aad    0xaa
  40bfc3:	dec    eax
  40bfc4:	loopne 0x40bf91
  40bfc6:	cli    
  40bfc7:	jbe    0x40bfc1
  40bfc9:	push   esp
  40bfca:	jbe    0x40bfc9
  40bfcc:	in     eax,0xb5
  40bfce:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  40bfd0:	push   ebp
  40bfd1:	jbe    0x40c018
  40bfd3:	int3   
  40bfd4:	(bad)
  40bfd8:	call   0xa8f0db48
  40bfdd:	int3   
  40bfde:	jae    0x40c031
  40bfe0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bfe1:	mov    ds:0xd523a847,eax
  40bfe6:	iret   
  40bfe7:	faddp  st(6),st
  40bfe9:	cmp    ebx,esi
  40bfeb:	jmp    0x40bff6
  40bfed:	or     dh,0xdf
  40bff0:	sub    al,0xae
  40bff2:	mov    edx,0xb0850ace
  40bff7:	sbb    eax,0x3b6e9bf9
  40bffc:	stos   DWORD PTR es:[edi],eax
  40bffd:	pop    esp
  40bffe:	mov    al,0xcb
  40c000:	aam    0x5
  40c002:	outs   dx,BYTE PTR ds:[esi]
  40c003:	cmp    al,0x5a
  40c005:	shr    BYTE PTR [edx],0x12
  40c008:	out    0xec,eax
  40c00a:	inc    edx
  40c00b:	inc    edi
  40c00c:	nop
  40c00d:	xchg   BYTE PTR [edi],ch
  40c00f:	icebp  
  40c010:	sahf   
  40c011:	push   esp
  40c012:	imul   edi,eax,0x5a2062da
  40c018:	add    eax,DWORD PTR [edi+0x8]
  40c01b:	mov    ss,WORD PTR [edx]
  40c01d:	mov    eax,0x4375a65c
  40c022:	sbb    al,0x6
  40c024:	xchg   esp,eax
  40c025:	jno    0x40c082
  40c027:	add    DWORD PTR [edi],edi
  40c029:	push   edx
  40c02a:	pop    edx
  40c02b:	call   0xce531614
  40c030:	stos   DWORD PTR es:[edi],eax
  40c031:	and    eax,0xf6641009
  40c036:	xchg   edi,eax
  40c037:	xor    DWORD PTR [edx+0x56],esi
  40c03a:	(bad)  
  40c03b:	aad    0x1e
  40c03d:	pop    es
  40c03e:	xchg   ecx,eax
  40c03f:	sbb    eax,0x47c5fc2c
  40c044:	out    dx,al
  40c045:	test   eax,0x6a5391c7
  40c04a:	pop    ss
  40c04b:	and    bh,ah
  40c04d:	loope  0x40c052
  40c04f:	int    0x7e
  40c051:	nop
  40c052:	aad    0xe2
  40c054:	(bad)  
  40c055:	push   edi
  40c056:	sti    
  40c057:	test   BYTE PTR [eax-0x6c],0xfe
  40c05b:	ja     0x40c069
  40c05d:	xchg   ebp,eax
  40c05e:	inc    BYTE PTR [ebp-0x51]
  40c061:	mov    bl,0x8c
  40c063:	int3   
  40c064:	ins    DWORD PTR es:[edi],dx
  40c065:	and    bl,cl
  40c067:	in     al,0x5a
  40c069:	or     ebp,DWORD PTR ds:0x4990b43c
  40c06f:	in     eax,dx
  40c070:	mov    edx,0x5de1f3b7
  40c075:	or     BYTE PTR [ebp+ecx*4+0x657ccd47],bl
  40c07c:	add    eax,0xf61d8028
  40c081:	xor    DWORD PTR [esi],eax
  40c083:	sbb    eax,0x85ec86bd
  40c088:	add    dh,bl
  40c08a:	popf   
  40c08b:	call   0xe1548c85
  40c090:	jmp    0x40c0f6
  40c092:	rol    DWORD PTR [edx],0xf3
  40c095:	mov    BYTE PTR [ecx+0x3e],bl
  40c098:	jb     0x40c0a0
  40c09a:	cmp    cl,BYTE PTR [ebx+0x9fb346]
  40c0a0:	lock or bh,BYTE PTR [ecx]
  40c0a3:	mul    DWORD PTR [ebx+0x6]
  40c0a6:	cmp    eax,0x19566348
  40c0ab:	jno    0x40c05e
  40c0ad:	jmp    0xc5295c66
  40c0b2:	xor    eax,0x69653242
  40c0b7:	bound  esp,QWORD PTR [edi+0x1c]
  40c0ba:	mov    bh,0xcd
  40c0bc:	mov    al,BYTE PTR [eax+0x4b4c5e71]
  40c0c2:	jne    0x40c0f8
  40c0c4:	rol    DWORD PTR [esi+0x32],cl
  40c0c7:	adc    al,0x4f
  40c0c9:	std    
  40c0ca:	ins    DWORD PTR es:[edi],dx
  40c0cb:	cmp    eax,0xd3478b7d
  40c0d0:	lods   eax,DWORD PTR ds:[esi]
  40c0d1:	xchg   esi,eax
  40c0d2:	jne    0x40c11d
  40c0d4:	sbb    BYTE PTR [edx-0x65],0xc2
  40c0d8:	mov    bh,0xe6
  40c0da:	mov    bl,0x44
  40c0dc:	retf   0x1907
  40c0df:	xchg   edi,eax
  40c0e0:	stos   DWORD PTR es:[edi],eax
  40c0e1:	sbb    BYTE PTR [edi-0x4],0x4
  40c0e5:	iret   
  40c0e6:	(bad)  
  40c0e7:	in     al,0xf4
  40c0e9:	pop    ebp
  40c0ea:	push   edi
  40c0eb:	mov    edx,DWORD PTR [ebp-0x3c]
  40c0ee:	mov    edi,DWORD PTR [ebp-0x4]
  40c0f1:	xor    edi,eax
  40c0f3:	xor    edx,eax
  40c0f5:	add    edi,ecx
  40c0f7:	add    edx,ecx
  40c0f9:	imul   edx,edi
  40c0fc:	mov    DWORD PTR [ebp+0xc],edx
  40c0ff:	mov    edx,DWORD PTR [ebp+0xc]
  40c102:	mov    DWORD PTR [ebp-0x24],edx
  40c105:	mov    edx,DWORD PTR [ebp-0x8]
  40c108:	add    edx,DWORD PTR [ebp-0x40]
  40c10b:	mov    DWORD PTR [ebp-0x18],0xf89c8531
  40c112:	mov    DWORD PTR [ebp-0x1c],edx
  40c115:	mov    DWORD PTR [ebp-0xc],0xf89c8530
  40c11c:	mov    DWORD PTR [ebp-0x44],0xf89c8533
  40c123:	mov    edx,DWORD PTR [ebp-0x18]
  40c126:	xor    edx,eax
  40c128:	add    edx,ecx
  40c12a:	jmp    0x40ccd1
  40c12f:	mov    edx,DWORD PTR [ebp-0x18]
  40c132:	jmp    0x40c4f0
  40c137:	call   0x9a62:0x428402d0
  40c13e:	out    0xb8,al
  40c140:	ds mov bx,bp
  40c144:	daa    
  40c145:	aad    0x2e
  40c147:	mov    esi,DWORD PTR cs:[eax+0x70]
  40c14b:	lahf   
  40c14c:	jge    0x40c1be
  40c14e:	jo     0x40c164
  40c150:	pop    ds
  40c151:	pop    edi
  40c152:	std    
  40c153:	xchg   esp,eax
  40c154:	mov    edi,0xee19cee6
  40c159:	mov    ch,0x67
  40c15b:	std    
  40c15c:	mov    ecx,0xc323f986
  40c161:	mov    BYTE PTR [esp+edi*2],bh
  40c164:	pushf  
  40c165:	(bad)
  40c169:	sbb    al,0x16
  40c16b:	shl    ah,1
  40c16d:	jns    0x40c176
  40c16f:	in     eax,dx
  40c170:	cs dec esp
  40c172:	cmp    BYTE PTR [edx],ch
  40c174:	adc    dl,BYTE PTR [edx]
  40c176:	adc    al,0xf2
  40c178:	cs sbb eax,0xc75b5354
  40c17e:	ja     0x40c14e
  40c180:	or     eax,0xa4e04664
  40c185:	jmp    0xcabff631
  40c18a:	cdq    
  40c18b:	pop    esp
  40c18c:	pop    es
  40c18d:	repz cld 
  40c18f:	sahf   
  40c190:	jp     0x40c1a4
  40c192:	outs   dx,DWORD PTR ds:[esi]
  40c193:	push   eax
  40c194:	jmp    0x9bf0:0x605bee0d
  40c19b:	scas   al,BYTE PTR es:[edi]
  40c19c:	xchg   ecx,eax
  40c19d:	cld    
  40c19e:	out    dx,al
  40c19f:	fstp   QWORD PTR [edx+edi*4-0x33]
  40c1a3:	cmp    BYTE PTR [edx+0x18],dh
  40c1a6:	mov    bh,0xb4
  40c1a8:	(bad)  
  40c1a9:	in     al,dx
  40c1aa:	in     al,0x6a
  40c1ac:	fsubrp st(4),st
  40c1ae:	call   0x2dc565c8
  40c1b3:	xchg   ebx,eax
  40c1b4:	aad    0x58
  40c1b6:	mov    WORD PTR [esi+edx*2],es
  40c1b9:	jmp    0x613cf159
  40c1be:	fcomp  DWORD PTR [ebx+0x4de81137]
  40c1c4:	jnp    0x40c166
  40c1c6:	jle    0x40c1f4
  40c1c8:	adc    BYTE PTR [esi+0x77b73b7e],dl
  40c1ce:	ins    BYTE PTR es:[edi],dx
  40c1cf:	lahf   
  40c1d0:	mov    esp,0x966b75ff
  40c1d5:	sub    al,0x93
  40c1d7:	out    dx,al
  40c1d8:	ficomp WORD PTR [eax]
  40c1da:	leave  
  40c1db:	and    DWORD PTR [eax],ebx
  40c1dd:	mov    BYTE PTR [esi-0x40],dh
  40c1e0:	int    0x9e
  40c1e2:	inc    eax
  40c1e3:	outs   dx,DWORD PTR ds:[esi]
  40c1e4:	sbb    ecx,DWORD PTR [ebx]
  40c1e6:	jns    0x40c192
  40c1e8:	fs loop 0x40c227
  40c1eb:	sbb    DWORD PTR [edx+0x634d8bdf],esp
  40c1f1:	es mov ecx,0x397a36a3
  40c1f7:	jb     0x40c26f
  40c1f9:	and    eax,0x58a0f81d
  40c1fe:	rcl    BYTE PTR [eax-0x2f8a91c1],0x60
  40c205:	ret    
  40c206:	push   0xffffffa3
  40c208:	hlt    
  40c209:	stos   BYTE PTR es:[edi],al
  40c20a:	out    dx,eax
  40c20b:	xor    DWORD PTR [ecx+0x2e8cd2a3],edi
  40c211:	push   0x6
  40c213:	jecxz  0x40c25e
  40c215:	pop    ebx
  40c216:	sbb    ch,BYTE PTR [ecx+0x33897ed9]
  40c21c:	cwde   
  40c21d:	rcl    BYTE PTR [edi-0x6ba2ba85],cl
  40c223:	mov    ds:0x47e5382c,eax
  40c228:	or     eax,DWORD PTR [ebx-0x6feb1686]
  40c22e:	adc    eax,0x71169a7
  40c233:	in     eax,0x3d
  40c235:	xchg   ebp,eax
  40c236:	imul   eax,DWORD PTR [eax+0x31f62db8],0x5da6a2fd
  40c240:	mov    cs,ebp
  40c242:	pusha  
  40c243:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c244:	sub    al,0x3c
  40c246:	mov    ah,0x11
  40c248:	jmp    0x2427:0x77da0370
  40c24f:	add    eax,0xc741198f
  40c254:	sub    BYTE PTR [edx*4-0x15772f48],ch
  40c25b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c25c:	xchg   edi,eax
  40c25d:	adc    DWORD PTR [edi+0x533dc98b],edi
  40c263:	or     BYTE PTR [edx-0x1b21a330],dl
  40c269:	ins    BYTE PTR es:[edi],dx
  40c26a:	std    
  40c26b:	mov    al,ch
  40c26d:	jnp    0x40c21c
  40c26f:	pop    esi
  40c270:	int    0x6a
  40c272:	and    al,0xcb
  40c274:	add    BYTE PTR [eax],dl
  40c276:	repz adc BYTE PTR [edi-0x28f2e1e3],0xd
  40c27e:	inc    ecx
  40c27f:	(bad)  
  40c280:	js     0x40c2dc
  40c282:	and    eax,0x2165f38c
  40c287:	in     al,dx
  40c288:	mov    esp,DWORD PTR ds:0x9ff3e71b
  40c28e:	adc    al,0x29
  40c290:	out    dx,eax
  40c291:	mov    ecx,0xd6723d35
  40c296:	mov    eax,0xa720fccd
  40c29b:	movntq QWORD PTR ds:0x8b557826,mm4
  40c2a2:	pop    edi
  40c2a3:	or     eax,0x9daeee85
  40c2a8:	(bad)  
  40c2a9:	xchg   esp,eax
  40c2aa:	out    dx,al
  40c2ab:	push   esi
  40c2ac:	lods   al,BYTE PTR ds:[esi]
  40c2ad:	sti    
  40c2ae:	dec    ecx
  40c2af:	ins    BYTE PTR es:[edi],dx
  40c2b0:	mov    ah,0xb1
  40c2b2:	stos   BYTE PTR es:[edi],al
  40c2b3:	push   cs
  40c2b4:	sub    al,0x6d
  40c2b6:	add    BYTE PTR [edx+ebx*1+0x2f25a1af],ah
  40c2bd:	jne    0x40c2b7
  40c2bf:	pop    ebx
  40c2c0:	inc    eax
  40c2c1:	ret    
  40c2c2:	pop    es
  40c2c3:	push   es
  40c2c4:	icebp  
  40c2c5:	jge    0x40c264
  40c2c7:	les    esi,FWORD PTR [ebp-0x32]
  40c2ca:	adc    ebp,DWORD PTR [ebx-0x32]
  40c2cd:	pop    ebx
  40c2ce:	lods   al,BYTE PTR ds:[esi]
  40c2cf:	stos   BYTE PTR es:[edi],al
  40c2d0:	sub    al,0x4f
  40c2d2:	push   edx
  40c2d3:	je     0x40c327
  40c2d5:	mov    esi,0x9b180449
  40c2da:	push   edx
  40c2db:	cwde   
  40c2dc:	push   edx
  40c2dd:	fisttp WORD PTR gs:[bx]
  40c2e1:	mov    esp,0xbfeafcc3
  40c2e6:	and    esi,DWORD PTR [edi-0x24]
  40c2e9:	aaa    
  40c2ea:	cmp    ebp,DWORD PTR [esi]
  40c2ec:	or     dh,BYTE PTR ds:0xe75b74aa
  40c2f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c2f3:	adc    cl,bh
  40c2f5:	mov    BYTE PTR ds:0x1168f71c,ah
  40c2fb:	std    
  40c2fc:	scas   al,BYTE PTR es:[edi]
  40c2fd:	rcr    DWORD PTR [esi+0x37],cl
  40c300:	retf   
  40c301:	pop    esp
  40c302:	sbb    ebx,ecx
  40c304:	cld    
  40c305:	aaa    
  40c306:	pop    esi
  40c307:	icebp  
  40c308:	repz mov edi,0xf82908b3
  40c30e:	test   eax,0x9dc9b915
  40c313:	jne    0x40c2e7
  40c315:	mov    edi,0x943b50a
  40c31a:	daa    
  40c31b:	out    dx,ax
  40c31d:	ret    0xb02f
  40c320:	xor    bh,BYTE PTR [ecx+0x42564a66]
  40c326:	cmp    BYTE PTR [eax+0x23],0xbb
  40c32a:	mov    ecx,0x20fc7a95
  40c32f:	push   ds
  40c330:	xor    al,0x96
  40c332:	push   0x97163c21
  40c337:	loopne 0x40c2d6
  40c339:	dec    ebp
  40c33a:	add    eax,eax
  40c33c:	dec    ebx
  40c33d:	arpl   ax,bp
  40c33f:	dec    esp
  40c340:	push   edx
  40c341:	dec    ebx
  40c342:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c343:	imul   esp,DWORD PTR fs:[ecx],0x2a
  40c347:	inc    esp
  40c348:	jb     0x40c307
  40c34a:	lea    esp,[edx-0x2f7b45bc]
  40c350:	dec    edx
  40c351:	rol    bh,cl
  40c353:	push   eax
  40c354:	dec    eax
  40c355:	lahf   
  40c356:	cwde   
  40c357:	and    al,dl
  40c359:	push   ebx
  40c35a:	push   eax
  40c35b:	lods   eax,DWORD PTR cs:[esi]
  40c35d:	ja     0x40c36b
  40c35f:	gs mov ecx,0x5e604247
  40c365:	(bad)
  40c369:	pop    es
  40c36a:	aam    0xc1
  40c36c:	pop    eax
  40c36d:	dec    edx
  40c36e:	in     al,0xee
  40c370:	fadd   QWORD PTR [ecx+0x45]
  40c373:	sub    edx,DWORD PTR [ebx-0x42f339f8]
  40c379:	aaa    
  40c37a:	mov    bh,0x74
  40c37c:	and    eax,0x2b8fca57
  40c381:	add    eax,0x1cd16247
  40c386:	(bad)  
  40c387:	in     al,0x51
  40c389:	or     BYTE PTR [ecx-0x2de936],dl
  40c38f:	sub    DWORD PTR [edi+ebp*2-0x4b],0xf41efa13
  40c397:	add    DWORD PTR [ecx],edi
  40c399:	mov    ch,0x94
  40c39b:	mov    bl,0x5c
  40c39d:	mov    BYTE PTR [esi],ah
  40c39f:	inc    esp
  40c3a0:	jp     0x40c374
  40c3a2:	sbb    ch,BYTE PTR [ebx+0x3acf4a50]
  40c3a8:	popa   
  40c3a9:	gs dec ebp
  40c3ab:	fs retf 0x576a
  40c3af:	out    0x76,al
  40c3b1:	xchg   ecx,eax
  40c3b2:	cmp    bh,bl
  40c3b4:	xor    edx,DWORD PTR [ebx-0x1e8ea4bf]
  40c3ba:	inc    eax
  40c3bb:	mov    ch,0x83
  40c3bd:	adc    eax,0x794ab567
  40c3c2:	ds aaa 
  40c3c4:	inc    esp
  40c3c5:	jne    0x40c3b2
  40c3c7:	pop    ebp
  40c3c8:	js     0x40c43b
  40c3ca:	push   ebx
  40c3cb:	rcl    ebx,1
  40c3cd:	push   ebp
  40c3ce:	ficomp DWORD PTR [ebp-0x76]
  40c3d1:	stc    
  40c3d2:	xchg   esi,eax
  40c3d3:	dec    ebx
  40c3d4:	and    al,0x8a
  40c3d6:	cmp    DWORD PTR [edi+eiz*4],eax
  40c3d9:	mov    ecx,0x957d4517
  40c3de:	fwait
  40c3df:	add    DWORD PTR [edi+0x6d2333b5],eax
  40c3e5:	xchg   bh,ch
  40c3e7:	outs   dx,BYTE PTR ds:[esi]
  40c3e8:	jecxz  0x40c36c
  40c3ea:	jns    0x40c3a9
  40c3ec:	ds jnp 0x40c43b
  40c3ef:	or     BYTE PTR ds:[ebp+0x37],ah
  40c3f3:	sbb    cl,bl
  40c3f5:	jne    0x40c3f5
  40c3f7:	jg     0x40c414
  40c3f9:	pop    esi
  40c3fa:	clc    
  40c3fb:	jne    0x40c3ba
  40c3fd:	adc    esi,DWORD PTR [eax-0x5]
  40c400:	mov    edx,0x4e065f71
  40c405:	(bad)  [ebp+0x64f0ce6e]
  40c40b:	adc    BYTE PTR [eax],dl
  40c40d:	out    dx,eax
  40c40e:	mov    cl,BYTE PTR [ecx+esi*1+0x3a]
  40c412:	repnz popa 
  40c414:	(bad)  
  40c415:	fcom   QWORD PTR [ebx+0x19]
  40c418:	jae    0x40c481
  40c41a:	clc    
  40c41b:	or     al,0xc9
  40c41d:	(bad)  
  40c41f:	and    eax,0xa10c9fb1
  40c424:	push   esi
  40c425:	sbb    edx,DWORD PTR [ecx+0x3861fc71]
  40c42b:	test   BYTE PTR [edx+0x4087ccdf],cl
  40c431:	mov    eax,0x7d7626b7
  40c436:	test   DWORD PTR [ebx-0xe8c9f0a],edi
  40c43c:	lds    ebx,FWORD PTR ds:0x70c0f39a
  40c442:	jb     0x40c4b7
  40c444:	mov    ah,0x4e
  40c446:	cmp    esi,edx
  40c448:	mov    cl,0x5e
  40c44a:	sbb    eax,0x680a4465
  40c44f:	cmp    BYTE PTR [esi+0x613948c1],dl
  40c455:	pop    ss
  40c456:	sti    
  40c457:	inc    ebx
  40c458:	or     ebp,DWORD PTR [edi+0x70]
  40c45b:	std    
  40c45c:	fs imul edx,esi,0xffffffe7
  40c460:	and    al,0x47
  40c462:	cmp    BYTE PTR [eax+esi*1+0xfd1b282],bl
  40c469:	jnp    0x40c40c
  40c46b:	enter  0xf9b9,0xfc
  40c46f:	and    bl,BYTE PTR [ebx-0x3548114e]
  40c475:	jae    0x40c40c
  40c477:	pop    ss
  40c478:	or     ah,BYTE PTR [edx]
  40c47a:	xor    al,0xe5
  40c47c:	sub    esi,DWORD PTR [ecx-0x653e3f0f]
  40c482:	or     al,0x14
  40c484:	mov    ch,0x25
  40c486:	dec    ecx
  40c487:	daa    
  40c488:	adc    eax,0x95daf1a3
  40c48d:	and    dl,BYTE PTR [edx+edi*4-0x80]
  40c491:	fldlg2 
  40c493:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c494:	push   0x44b09edc
  40c499:	push   ecx
  40c49a:	clc    
  40c49b:	sbb    DWORD PTR [esi+ebp*2+0x3b],ecx
  40c49f:	lds    ecx,FWORD PTR [ecx+0x29]
  40c4a2:	and    eax,0x3e3d122b
  40c4a7:	or     eax,0x43b5be0e
  40c4ac:	add    eax,0xe2002dad
  40c4b1:	mov    bh,0xa7
  40c4b3:	js     0x40c526
  40c4b5:	lods   al,BYTE PTR ds:[esi]
  40c4b6:	push   edx
  40c4b7:	fild   QWORD PTR [edi+0x7be1b410]
  40c4bd:	data16 adc bl,BYTE PTR [esi-0x27172c0d]
  40c4c4:	or     eax,0xda3aec1a
  40c4c9:	mov    ds:0x4cc0c364,eax
  40c4ce:	jge    0x40c498
  40c4d0:	stos   DWORD PTR es:[edi],eax
  40c4d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c4d2:	lds    esi,FWORD PTR [ebx]
  40c4d4:	and    edi,DWORD PTR [edx]
  40c4d6:	dec    edx
  40c4d7:	ins    DWORD PTR es:[edi],dx
  40c4d8:	jo     0x40c4dd
  40c4da:	adc    esi,ebx
  40c4dc:	aas    
  40c4dd:	lods   al,BYTE PTR ds:[esi]
  40c4de:	int    0x4b
  40c4e0:	ja     0x40c485
  40c4e2:	ins    DWORD PTR es:[edi],dx
  40c4e3:	loope  0x40c46b
  40c4e5:	call   0x9db9:0xff3aad37
  40c4ec:	xor    BYTE PTR [ebx+eax*4],dl
  40c4ef:	dec    ecx
  40c4f0:	xor    edx,eax
  40c4f2:	add    edx,DWORD PTR [ebp-0x14]
  40c4f5:	mov    edi,DWORD PTR [ebp-0x1c]
  40c4f8:	mov    dl,BYTE PTR [edx+edi*1+0x32729c]
  40c4ff:	mov    BYTE PTR [ebp+0xf],dl
  40c502:	mov    edx,DWORD PTR [ebp-0xc]
  40c505:	xor    edx,eax
  40c507:	add    edx,DWORD PTR [ebp-0x14]
  40c50a:	mov    edi,DWORD PTR [ebp-0x1c]
  40c50d:	mov    dl,BYTE PTR [edx+edi*1+0x32729c]
  40c514:	mov    BYTE PTR [ebp+0xb],dl
  40c517:	mov    dl,BYTE PTR [ebp+0xf]
  40c51a:	mov    edi,DWORD PTR [ebp-0xc]
  40c51d:	xor    edi,eax
  40c51f:	add    edi,DWORD PTR [ebp-0x14]
  40c522:	mov    ebx,DWORD PTR [ebp-0x1c]
  40c525:	mov    BYTE PTR [edi+ebx*1+0x32729c],dl
  40c52c:	mov    dl,BYTE PTR [ebp+0xb]
  40c52f:	jmp    0x40c8ed
  40c534:	xchg   esp,eax
  40c535:	dec    ebp
  40c536:	push   es
  40c537:	adc    ecx,eax
  40c539:	push   ecx
  40c53a:	xchg   ebx,eax
  40c53b:	dec    ebp
  40c53c:	lock sbb cl,cl
  40c53f:	pop    edx
  40c540:	push   es
  40c541:	sti    
  40c542:	push   0xffffffb1
  40c544:	dec    ebp
  40c545:	mov    BYTE PTR [eax+0x70],dh
  40c548:	lahf   
  40c549:	jge    0x40c5bb
  40c54b:	jo     0x40c54e
  40c54d:	das    
  40c54e:	jnp    0x40c51d
  40c550:	pop    edx
  40c551:	mov    bl,0xf1
  40c553:	mov    edx,0x3d4935d8
  40c558:	mov    ah,0x0
  40c55a:	adc    eax,0x2e92a97d
  40c55f:	lahf   
  40c560:	mov    esp,0xd3d46a10
  40c565:	out    0xf3,eax
  40c567:	rep lods eax,DWORD PTR ds:[esi]
  40c569:	stos   DWORD PTR es:[edi],eax
  40c56a:	xchg   ebx,eax
  40c56b:	and    DWORD PTR [ebx],esi
  40c56d:	mov    ah,0x62
  40c56f:	jle    0x40c5a0
  40c571:	jl     0x40c504
  40c573:	adc    edi,DWORD PTR [eax-0x6e9ea124]
  40c579:	aaa    
  40c57a:	je     0x40c587
  40c57c:	jo     0x40c524
  40c57e:	test   eax,0x723d56e2
  40c583:	xchg   ebx,eax
  40c584:	inc    ecx
  40c585:	push   edi
  40c586:	(bad)  
  40c587:	pop    ecx
  40c588:	cmp    al,0xc2
  40c58a:	pop    ss
  40c58b:	mov    ds:0xc11cd800,eax
  40c590:	adc    BYTE PTR [esi+ebx*1-0x2b5c84a9],ah
  40c597:	jle    0x40c581
  40c599:	mov    BYTE PTR [ecx-0x544d6091],bh
  40c59f:	xchg   DWORD PTR [ebp-0x10],eax
  40c5a2:	ret    
  40c5a3:	xor    eax,0xdd92fa29
  40c5a8:	cmp    al,0xe8
  40c5aa:	adc    DWORD PTR [ebx+0x7377ae00],ebx
  40c5b0:	pop    esp
  40c5b1:	(bad)  
  40c5b2:	sub    DWORD PTR [ecx+0x7e],esp
  40c5b5:	ror    esp,0xf3
  40c5b8:	and    ebp,eax
  40c5ba:	fst    QWORD PTR [ecx]
  40c5bc:	daa    
  40c5bd:	enter  0xd41f,0x1b
  40c5c1:	lock in al,0x78
  40c5c4:	push   0x7f
  40c5c6:	test   eax,0x49f05dd9
  40c5cb:	popf   
  40c5cc:	or     eax,0xe608c1b6
  40c5d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c5d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c5d3:	lahf   
  40c5d4:	dec    esp
  40c5d5:	add    BYTE PTR [ebx+0x3f260577],ah
  40c5db:	es aam 0xa
  40c5de:	mov    bh,BYTE PTR [ecx+0x69f56d9a]
  40c5e4:	fadd   DWORD PTR [edi]
  40c5e6:	div    DWORD PTR fs:[eax+0x2a4ba794]
  40c5ed:	lods   eax,DWORD PTR ds:[esi]
  40c5ee:	mov    al,0x37
  40c5f0:	xchg   ebp,eax
  40c5f1:	enter  0x4501,0x97
  40c5f5:	push   ds
  40c5f6:	ret    
  40c5f7:	pop    ebx
  40c5f8:	push   ebp
  40c5f9:	imul   esp,edi,0x1c182d74
  40c5ff:	xlat   BYTE PTR fs:[ebx]
  40c601:	loop   0x40c5ec
  40c603:	rol    BYTE PTR [eax-0xb1c93eb],1
  40c609:	xor    DWORD PTR [edx+0x45],ebx
  40c60c:	add    ebx,esp
  40c60e:	mov    esi,0xfb26a610
  40c613:	xlat   BYTE PTR ds:[ebx]
  40c614:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c615:	sbb    eax,0xb677e7d2
  40c61a:	cld    
  40c61b:	add    DWORD PTR [ebx+0x6d],edx
  40c61e:	iret   
  40c61f:	dec    ebp
  40c620:	fnsave [esi]
  40c622:	jge    0x40c5e0
  40c624:	push   edx
  40c625:	fsub   DWORD PTR [ebp-0x7dabf90c]
  40c62b:	aad    0xca
  40c62d:	fisttp QWORD PTR [ecx]
  40c62f:	inc    edi
  40c630:	mov    ch,BYTE PTR [edx+0x13]
  40c633:	pop    edx
  40c634:	pop    esi
  40c635:	jp     0x40c6ad
  40c637:	cwde   
  40c638:	addr16 fwait
  40c63a:	iret   
  40c63b:	daa    
  40c63c:	xchg   al,cl
  40c63e:	(bad)  
  40c63f:	xor    eax,0xbd2fef0
  40c644:	fwait
  40c645:	inc    ebp
  40c646:	adc    al,0x7a
  40c648:	adc    eax,0x12c1eaa2
  40c64d:	(bad)  
  40c64e:	jmp    0x997c:0x2b0b0f86
  40c655:	xchg   dl,ah
  40c657:	inc    eax
  40c658:	in     al,dx
  40c659:	inc    esp
  40c65a:	stos   BYTE PTR es:[edi],al
  40c65b:	in     eax,dx
  40c65c:	sub    eax,0x2a169662
  40c661:	pop    edi
  40c662:	mov    ebp,0xc3d47dee
  40c667:	mov    eax,ss
  40c669:	jl     0x40c69f
  40c66b:	xchg   edi,eax
  40c66c:	mov    bl,0x9f
  40c66e:	push   cs
  40c66f:	mov    BYTE PTR [eax-0x24a252a3],al
  40c675:	cmp    DWORD PTR [ebp+eax*8+0x51189a96],edi
  40c67c:	lds    edi,FWORD PTR [eax+ebx*1]
  40c67f:	iret   
  40c680:	mov    esi,0x4ea72209
  40c685:	fnstsw WORD PTR [ebp+0x3fc76220]
  40c68b:	sbb    BYTE PTR [esi+0x7e39aabc],ah
  40c691:	cli    
  40c692:	cmp    DWORD PTR [edi-0x4dde4abc],eax
  40c698:	rcr    BYTE PTR [ebx-0x4fd370af],cl
  40c69e:	dec    esp
  40c69f:	jbe    0x40c663
  40c6a1:	sub    esp,DWORD PTR [ebx-0x15278615]
  40c6a7:	mov    edi,eax
  40c6a9:	xor    esi,eax
  40c6ab:	push   0x8a2fbca1
  40c6b0:	push   esp
  40c6b1:	call   0x63256fb
  40c6b6:	push   edx
  40c6b7:	cmp    DWORD PTR [eax+0x7307a3d9],ebx
  40c6bd:	add    BYTE PTR [esi],ch
  40c6bf:	stc    
  40c6c0:	in     al,dx
  40c6c1:	je     0x40c711
  40c6c3:	or     eax,0x99b3f36b
  40c6c8:	mov    ebx,0x4fa74b54
  40c6cd:	adc    al,0x1b
  40c6cf:	jecxz  0x40c6df
  40c6d1:	retf   0x3c57
  40c6d4:	sub    al,0xd4
  40c6d6:	push   ss
  40c6d7:	out    0x77,al
  40c6d9:	test   eax,0xa4393b7e
  40c6de:	push   esi
  40c6df:	mov    ebp,0xa187b647
  40c6e4:	dec    esi
  40c6e5:	add    al,0x87
  40c6e7:	mov    ds:0x37a4e8b4,eax
  40c6ec:	cwde   
  40c6ed:	push   ebx
  40c6ee:	ins    DWORD PTR es:[edi],dx
  40c6ef:	and    BYTE PTR [edx-0x66a532f6],bl
  40c6f5:	in     eax,dx
  40c6f6:	push   edx
  40c6f7:	jmp    0x40c6fd
  40c6f9:	lahf   
  40c6fa:	jo     0x40c72a
  40c6fc:	add    al,0xa7
  40c6fe:	xor    al,0xe4
  40c700:	and    eax,esi
  40c702:	and    BYTE PTR ds:[edx-0x77],bh
  40c706:	cmp    al,0xe0
  40c708:	or     ax,0x131f
  40c70c:	dec    esp
  40c70d:	pop    edi
  40c70e:	add    edx,ecx
  40c710:	mov    fs,ebx
  40c712:	loop   0x40c726
  40c714:	lods   al,BYTE PTR ds:[esi]
  40c715:	push   cs
  40c716:	fstp   QWORD PTR ds:0xbcf67502
  40c71c:	mov    DWORD PTR [edi+edi*4-0x5b],ebx
  40c720:	sub    BYTE PTR [eax],al
  40c722:	out    0x41,al
  40c724:	cmp    al,0x8a
  40c726:	shl    ah,cl
  40c728:	push   ecx
  40c729:	sub    eax,0x2bac13e7
  40c72e:	ja     0x40c700
  40c730:	jp     0x40c6bc
  40c732:	into   
  40c733:	push   ecx
  40c734:	sub    al,0x60
  40c736:	pop    ecx
  40c737:	shl    ebx,0xab
  40c73a:	jecxz  0x40c750
  40c73c:	dec    edx
  40c73d:	mov    ds:0x564a45e,eax
  40c742:	or     ebp,DWORD PTR [esi]
  40c744:	jmp    0x1888a3e4
  40c749:	sbb    dh,BYTE PTR [ebp-0x51]
  40c74c:	aam    0xa0
  40c74e:	jo     0x40c7bf
  40c750:	aaa    
  40c751:	hlt    
  40c752:	rcr    dh,0xf9
  40c755:	sbb    BYTE PTR [esi-0x23],ah
  40c758:	add    ecx,ebx
  40c75a:	dec    ecx
  40c75b:	push   ecx
  40c75c:	cmp    eax,0x1ef35553
  40c761:	stos   BYTE PTR es:[edi],al
  40c762:	fwait
  40c763:	in     eax,dx
  40c764:	jnp    0x40c722
  40c766:	imul   ebx,DWORD PTR ds:0xe8a6991d,0xcd53dec5
  40c770:	int3   
  40c771:	ret    
  40c772:	cmp    edx,DWORD PTR [edx]
  40c774:	aas    
  40c775:	ror    DWORD PTR [ecx+0x61],cl
  40c778:	cmp    esp,DWORD PTR [esi]
  40c77a:	es and ah,dh
  40c77d:	xor    esp,ebx
  40c77f:	aad    0xb7
  40c781:	pop    esi
  40c782:	rol    ebx,cl
  40c784:	das    
  40c785:	push   ss
  40c786:	and    cl,ah
  40c788:	cmp    cl,BYTE PTR [ecx-0x59]
  40c78b:	xchg   esi,eax
  40c78c:	xor    DWORD PTR [ebx-0x2cfe56b5],ecx
  40c792:	pop    ebp
  40c793:	mov    eax,DWORD PTR [esi+edi*2]
  40c796:	and    bh,dh
  40c798:	push   ecx
  40c799:	aam    0xc9
  40c79b:	inc    eax
  40c79c:	icebp  
  40c79d:	bound  edi,QWORD PTR [ecx-0xc]
  40c7a0:	out    0xac,eax
  40c7a2:	(bad)  [esi+0x6426f7df]
  40c7a8:	xchg   ecx,eax
  40c7a9:	jl     0x40c813
  40c7ab:	lods   eax,DWORD PTR ds:[esi]
  40c7ac:	ss mov cl,0xb0
  40c7af:	(bad)  
  40c7b0:	push   ss
  40c7b1:	pop    edi
  40c7b2:	sar    DWORD PTR [eax+0xc105927],0x1f
  40c7b9:	add    eax,0x3a063716
  40c7be:	mov    WORD PTR [ebp+0x9],cs
  40c7c1:	sub    al,BYTE PTR [ecx-0x47]
  40c7c4:	enter  0xba2e,0x91
  40c7c8:	int    0x2a
  40c7ca:	sub    BYTE PTR [ebx+edi*2-0x26],dh
  40c7ce:	cmp    DWORD PTR [ecx-0x2cdc34f7],esp
  40c7d4:	pop    ds
  40c7d5:	ins    DWORD PTR es:[edi],dx
  40c7d6:	ror    DWORD PTR [edi+esi*8+0x1ccfa0c6],1
  40c7dd:	dec    esp
  40c7de:	push   ss
  40c7df:	adc    dl,0xd0
  40c7e2:	xchg   esi,eax
  40c7e3:	inc    eax
  40c7e4:	and    DWORD PTR [esi],0xe861f2bc
  40c7ea:	pop    es
  40c7eb:	fs inc esp
  40c7ed:	aaa    
  40c7ee:	inc    edx
  40c7ef:	test   al,0xa0
  40c7f1:	mov    BYTE PTR [esi],dl
  40c7f3:	pop    edx
  40c7f4:	fld    QWORD PTR [ecx-0x3c]
  40c7f7:	jp     0x40c79e
  40c7f9:	mov    ah,cl
  40c7fb:	mov    esp,0xdc0019a7
  40c800:	lahf   
  40c801:	dec    edx
  40c802:	(bad)  
  40c803:	adc    DWORD PTR [ebx+0x48],ecx
  40c806:	out    dx,al
  40c807:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c808:	clc    
  40c809:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c80a:	mov    edx,0x7a2eab02
  40c80f:	sti    
  40c810:	adc    DWORD PTR [edx-0x56d7684c],esi
  40c816:	stos   DWORD PTR es:[edi],eax
  40c817:	lods   al,BYTE PTR ds:[esi]
  40c818:	mov    bh,0xbb
  40c81a:	pop    ss
  40c81b:	mov    edx,0xdfadc4ef
  40c820:	push   ds
  40c821:	add    ah,al
  40c823:	xchg   edx,eax
  40c824:	dec    esi
  40c825:	or     al,0x61
  40c827:	das    
  40c828:	inc    esi
  40c829:	adc    al,ah
  40c82b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c82c:	outs   dx,DWORD PTR ds:[esi]
  40c82d:	or     BYTE PTR [esi],ah
  40c82f:	push   ecx
  40c830:	aad    0x9f
  40c832:	mov    DWORD PTR [edx+0x7f0d75ba],eax
  40c838:	xchg   BYTE PTR [ecx+eax*4-0x3a],dh
  40c83c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c83d:	cmp    BYTE PTR [ebp-0x1],dl
  40c840:	xor    esp,ebx
  40c842:	dec    esp
  40c843:	and    eax,0x5491f454
  40c848:	out    0x94,eax
  40c84a:	neg    DWORD PTR [ebx-0x18]
  40c84d:	mov    cl,0xf8
  40c84f:	jg     0x40c7f7
  40c851:	push   eax
  40c852:	mov    ebx,0x590c091b
  40c857:	fnstsw WORD PTR [eax+esi*8]
  40c85a:	js     0xf8c8e0ef
  40c860:	xor    ebp,DWORD PTR [edx+esi*8]
  40c863:	sub    al,0x8
  40c865:	jmp    DWORD PTR [eax+esi*2+0x9adff85]
  40c86c:	loop   0x40c892
  40c86e:	push   0x287442fc
  40c873:	push   ds
  40c874:	xchg   ecx,eax
  40c875:	int3   
  40c876:	in     al,dx
  40c877:	sub    eax,0x92a6ba9e
  40c87c:	sub    eax,esp
  40c87e:	hlt    
  40c87f:	push   ss
  40c880:	or     BYTE PTR [ebp-0x47],bl
  40c883:	xchg   ebp,eax
  40c884:	lea    ebx,[ebp+0x1a8a492b]
  40c88a:	popf   
  40c88b:	inc    esp
  40c88c:	add    ebp,DWORD PTR [ecx-0x118b8ad2]
  40c892:	aad    0xe9
  40c894:	int3   
  40c895:	xchg   ebp,eax
  40c896:	pop    ss
  40c897:	push   ebx
  40c898:	pop    ds
  40c899:	xchg   ebp,eax
  40c89a:	mov    ?,WORD PTR [edi-0x68]
  40c89d:	sub    bh,BYTE PTR [ecx]
  40c89f:	cs in  eax,0x92
  40c8a2:	pop    edi
  40c8a3:	inc    esi
  40c8a4:	pushf  
  40c8a5:	jmp    FWORD PTR [ecx]
  40c8a7:	mov    ch,0xd0
  40c8a9:	inc    ebp
  40c8aa:	lahf   
  40c8ab:	sbb    DWORD PTR [ecx],edx
  40c8ad:	xchg   edx,eax
  40c8ae:	in     al,0xf7
  40c8b0:	enter  0x2dde,0x6
  40c8b4:	pusha  
  40c8b5:	fst    QWORD PTR [ecx]
  40c8b7:	xor    esp,edx
  40c8b9:	pop    ebp
  40c8ba:	jno    0x40c87b
  40c8bc:	leave  
  40c8bd:	sar    bh,0x79
  40c8c0:	mov    eax,0xe3247b32
  40c8c5:	mov    cl,0xda
  40c8c7:	inc    eax
  40c8c8:	inc    ecx
  40c8c9:	mov    ds:0x11dc959d,eax
  40c8ce:	fbstp  TBYTE PTR [esi]
  40c8d0:	sahf   
  40c8d1:	dec    esp
  40c8d2:	cmp    BYTE PTR [eax-0x73],0x44
  40c8d6:	push   esi
  40c8d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c8d8:	dec    edi
  40c8d9:	mov    ebx,0xf19b87f4
  40c8de:	sti    
  40c8df:	mov    bh,0x29
  40c8e1:	mov    esp,0xd0fb497
  40c8e6:	pop    ebx
  40c8e7:	dec    edx
  40c8e8:	add    eax,0x71a225ac
  40c8ed:	mov    edi,DWORD PTR [ebp-0x18]
  40c8f0:	xor    edi,eax
  40c8f2:	add    edi,DWORD PTR [ebp-0x14]
  40c8f5:	mov    ebx,DWORD PTR [ebp-0x1c]
  40c8f8:	mov    BYTE PTR [edi+ebx*1+0x32729c],dl
  40c8ff:	mov    edx,DWORD PTR [ebp-0x44]
  40c902:	mov    edi,DWORD PTR [ebp-0xc]
  40c905:	xor    edx,eax
  40c907:	jmp    0x40ccc5
  40c90c:	sbb    al,0xba
  40c90e:	pop    edx
  40c90f:	pop    edx
  40c910:	pop    edx
  40c911:	pop    edx
  40c912:	sbb    al,0xba
  40c914:	adc    edi,DWORD PTR [edi+edi*1-0x3]
  40c918:	ret    
  40c919:	pop    ss
  40c91a:	stc    
  40c91b:	scas   al,BYTE PTR es:[edi]
  40c91c:	in     al,dx
  40c91d:	xchg   esp,eax
  40c91e:	jo     0x40c990
  40c920:	lahf   
  40c921:	jge    0x40c993
  40c923:	jo     0x40c987
  40c925:	xchg   edx,eax
  40c926:	ret    0x2f89
  40c929:	cmp    bh,BYTE PTR [ebp+0x52]
  40c92c:	imul   ecx,esp,0x36
  40c92f:	js     0x40c96b
  40c931:	dec    esi
  40c932:	jle    0x40c985
  40c934:	jns    0x40c8ba
  40c936:	loope  0x40c98e
  40c938:	sub    al,0xa2
  40c93a:	adc    DWORD PTR [ebx-0x23],0xffffffbd
  40c93e:	push   edx
  40c93f:	aad    0xde
  40c941:	or     edi,DWORD PTR [ebx-0x7f53d28e]
  40c947:	test   DWORD PTR [esi-0x50],edi
  40c94a:	push   eax
  40c94b:	leave  
  40c94c:	add    eax,0x978b5dcf
  40c951:	inc    edx
  40c952:	stos   BYTE PTR es:[edi],al
  40c953:	pop    esi
  40c954:	ins    DWORD PTR es:[edi],dx
  40c955:	jmp    0x40c977
  40c957:	stc    
  40c958:	push   ebx
  40c959:	pop    esp
  40c95a:	mov    eax,0x15a180db
  40c95f:	push   ebx
  40c960:	mov    ch,0x51
  40c962:	xor    DWORD PTR [ebp*4-0x36fb1aed],ebx
  40c969:	scas   al,BYTE PTR es:[edi]
  40c96a:	dec    ebx
  40c96b:	push   cs
  40c96c:	mov    ah,0x91
  40c96e:	inc    ecx
  40c96f:	ins    BYTE PTR es:[edi],dx
  40c970:	sahf   
  40c971:	cwde   
  40c972:	cmp    ebp,DWORD PTR fs:[eax+0x7bbd4678]
  40c979:	test   DWORD PTR [ebx],0xddb805e8
  40c97f:	add    BYTE PTR [edi-0x7543f0f3],bl
  40c985:	cmp    al,0x28
  40c987:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c988:	stos   BYTE PTR es:[edi],al
  40c989:	add    al,0xe3
  40c98b:	or     al,0x53
  40c98d:	sub    ebp,DWORD PTR [esi+0x20]
  40c990:	sbb    al,0x98
  40c992:	xchg   edx,eax
  40c993:	stc    
  40c994:	(bad)  
  40c995:	nop
  40c996:	and    al,0x77
  40c998:	mov    esi,0xf72bf283
  40c99d:	adc    al,0x9f
  40c99f:	scas   al,BYTE PTR es:[edi]
  40c9a0:	cwde   
  40c9a1:	cmc    
  40c9a2:	pushf  
  40c9a3:	dec    ecx
  40c9a4:	cmp    BYTE PTR [esi-0x7f9b4d],dh
  40c9aa:	xchg   esp,eax
  40c9ab:	ficomp WORD PTR [esi]
  40c9ad:	pop    ebx
  40c9ae:	mov    DWORD PTR [edx-0x5c],eax
  40c9b1:	push   DWORD PTR [ecx-0x30]
  40c9b4:	into   
  40c9b5:	dec    edi
  40c9b6:	sub    esp,ecx
  40c9b8:	add    esi,ebx
  40c9ba:	out    dx,eax
  40c9bb:	mov    dl,0xff
  40c9bd:	sub    dl,BYTE PTR [ebp-0x692c1505]
  40c9c3:	and    eax,0xa924893d
  40c9c8:	sbb    bl,BYTE PTR ds:0xfce8a4d1
  40c9ce:	aad    0x66
  40c9d0:	imul   edx,DWORD PTR [ebx+0x6d],0x40
  40c9d4:	push   ds
  40c9d5:	pushf  
  40c9d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c9d7:	mov    eax,ds:0xb593587a
  40c9dc:	jb     0x40c9c9
  40c9de:	push   cs
  40c9df:	push   eax
  40c9e0:	adc    al,0xcf
  40c9e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c9e3:	adc    DWORD PTR [esi-0x7b],eax
  40c9e6:	mov    ebp,0x1f7937f4
  40c9eb:	xor    al,0xbc
  40c9ed:	sub    dl,0x53
  40c9f0:	sbb    ah,BYTE PTR [edx]
  40c9f2:	jge    0x40c983
  40c9f4:	pushf  
  40c9f5:	sub    edi,DWORD PTR [edx-0x4ebcc362]
  40c9fb:	sub    ebp,DWORD PTR [edx+0x53]
  40c9fe:	(bad)  [ebx+edi*4-0x3320ebbe]
  40ca05:	mov    bh,0xcd
  40ca07:	shr    BYTE PTR [ecx-0x67069787],1
  40ca0d:	stc    
  40ca0e:	push   0xe57ed82a
  40ca13:	imul   eax,DWORD PTR [ebp+ebp*1-0x532c4db5],0x46
  40ca1b:	ret    0x8c23
  40ca1e:	ss stc 
  40ca20:	add    al,0xa5
  40ca22:	(bad)  
  40ca25:	xor    BYTE PTR [esi+0x14ec674e],dl
  40ca2b:	stc    
  40ca2c:	pop    ds
  40ca2d:	mov    dh,0x9b
  40ca2f:	enter  0x9f6c,0x7e
  40ca33:	xchg   ecx,eax
  40ca34:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ca35:	sub    DWORD PTR [ecx+0xd9d45d9],0xff54be69
  40ca3f:	inc    edi
  40ca40:	adc    eax,0x834685a2
  40ca45:	jnp    0x40ca8c
  40ca47:	ja     0x40ca20
  40ca49:	stos   DWORD PTR es:[edi],eax
  40ca4a:	stos   BYTE PTR es:[edi],al
  40ca4b:	fdivr  st(3),st
  40ca4d:	jmp    0xc8f3:0x8442f1
  40ca54:	aam    0x55
  40ca56:	dec    edx
  40ca57:	outs   dx,BYTE PTR gs:[esi]
  40ca59:	mov    dl,0xbc
  40ca5b:	sbb    eax,0x88c2d6d7
  40ca60:	jo     0x40c9fc
  40ca62:	mov    ecx,0x468a855d
  40ca67:	(bad)  
  40ca69:	int3   
  40ca6a:	adc    cl,bh
  40ca6c:	inc    ecx
  40ca6d:	lahf   
  40ca6e:	sub    BYTE PTR [eax+edx*8+0x31],dh
  40ca72:	loopne 0x40ca79
  40ca74:	cld    
  40ca75:	int    0x5a
  40ca77:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ca78:	lods   al,BYTE PTR ds:[esi]
  40ca79:	scas   eax,DWORD PTR es:[edi]
  40ca7a:	in     al,0xd0
  40ca7c:	mov    eax,0x722673b2
  40ca81:	sub    bh,BYTE PTR [ebp-0x1995750a]
  40ca87:	pop    ebx
  40ca88:	dec    BYTE PTR [edi+0x731b3396]
  40ca8e:	fwait
  40ca8f:	push   ecx
  40ca90:	scas   al,BYTE PTR es:[edi]
  40ca91:	adc    DWORD PTR [edx],0x69
  40ca94:	xchg   ebp,eax
  40ca95:	js     0x40caff
  40ca97:	jmp    0x82544f9a
  40ca9c:	jb     0x40caad
  40ca9e:	in     al,dx
  40ca9f:	ss in  eax,dx
  40caa1:	jbe    0x40cab5
  40caa3:	ja     0x40ca6b
  40caa5:	mov    ebx,0xb51de3c5
  40caaa:	rol    ecx,0x9c
  40caad:	or     edi,DWORD PTR [eiz*1+0x339e9ddd]
  40cab4:	cmp    DWORD PTR [ecx-0xa],eax
  40cab7:	inc    ecx
  40cab8:	add    edx,edi
  40caba:	(bad)
  40cabe:	sbb    cl,BYTE PTR [esi+0x44]
  40cac1:	loopne 0x40ca8d
  40cac3:	jge    0x40cb03
  40cac5:	pop    esi
  40cac6:	sbb    dh,dh
  40cac8:	rcl    BYTE PTR [ecx],0x38
  40cacb:	imul   ebx,DWORD PTR [ebx+0x641e05c7],0xffffffae
  40cad2:	push   esp
  40cad3:	(bad)  
  40cad4:	adc    eax,0xf0817823
  40cad9:	jg     0x40ca63
  40cadb:	sbb    eax,0x6a922eb5
  40cae0:	mov    esi,0x55c3dc55
  40cae5:	cwde   
  40cae6:	add    DWORD PTR [ebx+edi*4],0xb7725c0a
  40caed:	and    BYTE PTR [ebx+esi*4],0x33
  40caf1:	fldcw  WORD PTR [edx]
  40caf3:	dec    ecx
  40caf4:	adc    ah,BYTE PTR ds:0xd7e582d6
  40cafa:	test   ch,al
  40cafc:	push   ebp
  40cafd:	adc    eax,0x9bf9ef0
  40cb02:	jns    0x40cb24
  40cb04:	js     0x40ca94
  40cb06:	dec    ecx
  40cb07:	xchg   esp,eax
  40cb08:	outs   dx,BYTE PTR ds:[esi]
  40cb09:	inc    ecx
  40cb0a:	lds    esi,FWORD PTR [esi+0x1]
  40cb0d:	clc    
  40cb0e:	int3   
  40cb0f:	jns    0x40cb02
  40cb11:	imul   esp,DWORD PTR [edx-0x7948151a],0x5afc0cfb
  40cb1b:	jae    0x40caaa
  40cb1d:	imul   edi,DWORD PTR [eax],0xffffffe9
  40cb20:	fistp  WORD PTR [esi+0x14]
  40cb23:	js     0x40caba
  40cb25:	arpl   cx,bp
  40cb27:	into   
  40cb28:	loopne 0x40cb9e
  40cb2a:	mov    cl,0x97
  40cb2c:	pop    ebx
  40cb2d:	iret   
  40cb2e:	dec    edi
  40cb2f:	sbb    DWORD PTR [esi],esp
  40cb31:	add    dh,bl
  40cb33:	adc    al,0xab
  40cb35:	in     eax,dx
  40cb36:	(bad)  
  40cb37:	mov    ebx,0xed57c5e5
  40cb3c:	repz jae 0x40caf4
  40cb3f:	push   ss
  40cb40:	xor    BYTE PTR [ebx+0x66],ch
  40cb43:	push   es
  40cb44:	lock fwait
  40cb46:	sub    al,0xb9
  40cb48:	jb     0x40cb85
  40cb4a:	push   es
  40cb4b:	retf   
  40cb4c:	inc    ecx
  40cb4d:	mov    esi,0x589a71bd
  40cb52:	fdivr  st,st(7)
  40cb54:	out    dx,eax
  40cb55:	pop    ebx
  40cb56:	sub    BYTE PTR [ebx],ch
  40cb58:	dec    eax
  40cb59:	daa    
  40cb5a:	pop    esp
  40cb5b:	xor    ch,BYTE PTR [ecx]
  40cb5d:	mov    edi,0x3220d309
  40cb62:	mov    cl,0xe7
  40cb64:	packsswb mm6,QWORD PTR [edi-0x18]
  40cb68:	dec    edi
  40cb69:	mov    dl,0x5d
  40cb6b:	or     DWORD PTR [eax-0x6d98b4c0],edx
  40cb71:	std    
  40cb72:	xchg   esi,eax
  40cb73:	jo     0x40cbca
  40cb75:	xchg   ebp,eax
  40cb76:	jl     0x40cb35
  40cb78:	sti    
  40cb79:	and    DWORD PTR [edi-0x64],ebp
  40cb7c:	pop    esi
  40cb7d:	push   esi
  40cb7e:	ret    
  40cb7f:	and    cl,BYTE PTR [ebx+0xb]
  40cb82:	repnz enter 0xa1f3,0x55
  40cb87:	adc    DWORD PTR [ebx+0x70a3227e],0x36
  40cb8e:	and    dl,dh
  40cb90:	mov    ebp,es
  40cb92:	mov    cl,0xe1
  40cb94:	xor    eax,0x8c5dc207
  40cb99:	test   eax,0x1ac7c849
  40cb9e:	dec    ecx
  40cb9f:	repz add eax,0xd750a179
  40cba5:	pop    edx
  40cba6:	dec    edx
  40cba7:	jb     0x40cbc2
  40cba9:	push   ecx
  40cbaa:	in     al,dx
  40cbab:	lock fstp DWORD PTR [esi]
  40cbae:	out    dx,al
  40cbaf:	xor    DWORD PTR [eax-0x62],esi
  40cbb2:	mov    cl,0x7d
  40cbb4:	dec    ebx
  40cbb5:	add    eax,0xaa3b5c2a
  40cbba:	sbb    dh,BYTE PTR [ebx+0x7c75e20d]
  40cbc0:	push   edx
  40cbc1:	jo     0x40cbea
  40cbc3:	xor    eax,0x7afe282b
  40cbc8:	es jno 0x40cb6a
  40cbcb:	mov    edx,0x88b16060
  40cbd0:	sub    ah,BYTE PTR [edx]
  40cbd2:	add    al,0x1f
  40cbd4:	pop    ss
  40cbd5:	test   DWORD PTR [edi-0x51ea88f],0xefcb6211
  40cbdf:	and    BYTE PTR [esi+0x5c08138a],cl
  40cbe5:	daa    
  40cbe6:	mov    al,0x74
  40cbe8:	pusha  
  40cbe9:	cdq    
  40cbea:	je     0x40cb83
  40cbec:	xor    al,0x81
  40cbee:	sub    al,BYTE PTR [ebx+0x21f60c36]
  40cbf4:	ins    DWORD PTR es:[edi],dx
  40cbf5:	add    DWORD PTR [eax+0x543e5247],0xffffffee
  40cbfc:	cmovs  esp,DWORD PTR [ebp+0x55]
  40cc00:	adc    eax,0x50854de9
  40cc05:	sbb    al,0xc
  40cc07:	ret    0x6637
  40cc0a:	push   esi
  40cc0b:	add    DWORD PTR [edi-0x2d],esi
  40cc0e:	or     al,0xf7
  40cc10:	sub    eax,0xea5da897
  40cc15:	loope  0x40cc81
  40cc17:	push   ds
  40cc18:	pop    ebp
  40cc19:	jg     0x40cc78
  40cc1b:	fdiv   DWORD PTR ds:0x306dd98
  40cc21:	push   edi
  40cc22:	adc    eax,0xdfb6cb1a
  40cc27:	enter  0x1ba4,0xe1
  40cc2b:	xor    eax,0x34968367
  40cc30:	or     eax,0x48159fdc
  40cc35:	add    BYTE PTR [ebx+0x6e],0x13
  40cc39:	add    al,0xe9
  40cc3b:	xchg   ebp,eax
  40cc3c:	je     0x40cbc5
  40cc3e:	or     al,0x66
  40cc40:	imul   edi,DWORD PTR [edi-0x75],0xffffffc6
  40cc44:	sbb    al,BYTE PTR [esi-0x7e624818]
  40cc4a:	lds    esp,FWORD PTR [esi+0x5c]
  40cc4d:	xor    BYTE PTR [edi-0x61],al
  40cc50:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cc51:	cdq    
  40cc52:	sbb    eax,0x363969ea
  40cc57:	lahf   
  40cc58:	stos   BYTE PTR es:[edi],al
  40cc59:	and    al,0x7f
  40cc5b:	fadd   DWORD PTR [ebx+0x54]
  40cc5e:	add    al,0xb9
  40cc60:	clc    
  40cc61:	add    eax,0x763773ca
  40cc66:	outs   dx,DWORD PTR ds:[esi]
  40cc67:	test   al,0xed
  40cc69:	xchg   DWORD PTR [ebp-0x1e],ebx
  40cc6c:	dec    ebp
  40cc6d:	mov    bh,0x4b
  40cc6f:	xchg   DWORD PTR [esi+0x7c],edx
  40cc72:	pushf  
  40cc73:	retf   
  40cc74:	imul   ebp,DWORD PTR [eax-0x29a4e7e2],0x1e5264a9
  40cc7e:	pusha  
  40cc7f:	les    ebp,FWORD PTR [esi+0x69]
  40cc82:	pop    ebp
  40cc83:	sbb    bl,0x87
  40cc86:	cmc    
  40cc87:	and    dl,al
  40cc89:	fild   DWORD PTR [esi+0x6c]
  40cc8c:	push   eax
  40cc8d:	jb     0x40cc53
  40cc8f:	xor    al,0xd
  40cc91:	jo     0x40cc2d
  40cc93:	in     al,dx
  40cc94:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cc95:	imul   esp,DWORD PTR [ebx+0x58],0x92f9c5f2
  40cc9c:	lea    edi,[edi+0x3ab85ee2]
  40cca2:	mov    edi,0x23bf24e6
  40cca7:	sbb    edx,DWORD PTR [ebp+0x31fb11a8]
  40ccad:	jg     0x40cc73
  40ccaf:	les    edi,FWORD PTR [ecx+0x5bc37ee2]
  40ccb5:	inc    esp
  40ccb6:	jge    0x40cd21
  40ccb8:	adc    BYTE PTR [edx-0x4c],cl
  40ccbb:	mov    ah,0x63
  40ccbd:	inc    edx
  40ccbe:	xchg   esp,eax
  40ccbf:	sbb    eax,0x429a63fa
  40ccc4:	clc    
  40ccc5:	xor    edi,eax
  40ccc7:	add    edx,ecx
  40ccc9:	add    edi,ecx
  40cccb:	imul   edx,edi
  40ccce:	add    edx,DWORD PTR [ebp-0x14]
  40ccd1:	mov    DWORD PTR [ebp-0x14],edx
  40ccd4:	mov    edx,DWORD PTR [ebp-0xc]
  40ccd7:	mov    edi,DWORD PTR [ebp-0x24]
  40ccda:	xor    edx,eax
  40ccdc:	add    edx,ecx
  40ccde:	imul   edx,edi
  40cce1:	mov    edi,DWORD PTR [ebp-0xc]
  40cce4:	xor    edi,eax
  40cce6:	sub    edx,edi
  40cce8:	mov    edi,DWORD PTR [ebp-0xc]
  40cceb:	mov    ebx,DWORD PTR [ebp-0x14]
  40ccee:	xor    edi,eax
  40ccf0:	add    edi,ecx
  40ccf2:	imul   edi,ebx
  40ccf5:	mov    ebx,DWORD PTR [ebp-0x18]
  40ccf8:	xor    ebx,eax
  40ccfa:	sub    edx,ecx
  40ccfc:	lea    edi,[edi+ebx*1+0x32729c]
  40cd03:	cmp    edi,edx
  40cd05:	jmp    0x40d0c3
  40cd0a:	mov    eax,0xf165d76a
  40cd0f:	popa   
  40cd10:	jbe    0x40cd7b
  40cd12:	(bad)  
  40cd14:	xchg   ebx,eax
  40cd15:	sub    DWORD PTR [ebp+0xbd6f42c],0xffffff90
  40cd1c:	jo     0x40cd8e
  40cd1e:	lahf   
  40cd1f:	jge    0x40cd91
  40cd21:	jo     0x40cca6
  40cd23:	lods   eax,DWORD PTR ds:[esi]
  40cd24:	rcl    dh,1
  40cd26:	mov    bl,0xd8
  40cd28:	imul   esi,DWORD PTR [edi],0xffffffdc
  40cd2b:	and    DWORD PTR [ecx],eax
  40cd2d:	push   cs
  40cd2e:	jne    0x40ccd9
  40cd30:	int3   
  40cd31:	xchg   esp,eax
  40cd32:	fs sub dl,cl
  40cd35:	(bad)  
  40cd36:	cmp    BYTE PTR [edi+edx*2-0x2792ba0c],ch
  40cd3d:	adc    DWORD PTR [ecx],esi
  40cd3f:	outs   dx,DWORD PTR ds:[esi]
  40cd40:	cmp    bh,ah
  40cd42:	push   esi
  40cd43:	or     al,BYTE PTR [ebx-0x5bf73ec2]
  40cd49:	ret    
  40cd4a:	push   eax
  40cd4b:	push   es
  40cd4c:	mov    ebp,0xb8419f60
  40cd51:	inc    esp
  40cd52:	push   ecx
  40cd53:	into   
  40cd54:	jl     0x40cd05
  40cd56:	cli    
  40cd57:	pop    eax
  40cd58:	add    eax,0xb284df4
  40cd5d:	and    BYTE PTR [esi],bl
  40cd5f:	aaa    
  40cd60:	adc    DWORD PTR [ecx+0x4d],0x6d
  40cd64:	stc    
  40cd65:	lock ror BYTE PTR [ecx],0x21
  40cd69:	mov    ecx,0xf10d0b89
  40cd6e:	sti    
  40cd6f:	xor    al,0x16
  40cd71:	ret    0x1385
  40cd74:	cwde   
  40cd75:	sbb    esp,edx
  40cd77:	mov    eax,0x702973d
  40cd7c:	fs js  0x40cdf0
  40cd7f:	and    al,0x53
  40cd81:	test   eax,0x4cf5c519
  40cd86:	out    0xb3,al
  40cd88:	mov    cl,0x77
  40cd8a:	ins    BYTE PTR es:[edi],dx
  40cd8b:	fmul   DWORD PTR [ecx+0x10d934fd]
  40cd91:	dec    ebx
  40cd92:	in     al,dx
  40cd93:	sub    al,0x88
  40cd95:	jp     0x40cd64
  40cd97:	adc    dh,0xca
  40cd9a:	aaa    
  40cd9b:	stos   DWORD PTR es:[edi],eax
  40cd9c:	or     al,0xc0
  40cd9e:	mov    dh,0xc5
  40cda0:	jge    0x40cdfb
  40cda2:	or     al,0xd4
  40cda4:	or     al,BYTE PTR [edi-0x767c3799]
  40cdaa:	jg     0x40cd88
  40cdac:	lahf   
  40cdad:	jnp    0x40ce10
  40cdaf:	lahf   
  40cdb0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cdb1:	and    dl,ah
  40cdb3:	xor    DWORD PTR [ebp+0x54],0xffffffd3
  40cdb7:	in     al,0xe2
  40cdb9:	push   ss
  40cdba:	adc    ebp,DWORD PTR [eax-0xafcf5b1]
  40cdc0:	dec    eax
  40cdc1:	mov    al,ds:0xe5e1de67
  40cdc6:	(bad)  
  40cdc7:	jae    0x40cd50
  40cdc9:	xor    ebp,DWORD PTR [edx]
  40cdcb:	popf   
  40cdcc:	cmp    ecx,DWORD PTR [esi+0x4e085fb4]
  40cdd2:	adc    DWORD PTR [ebx+0x3d],edi
  40cdd5:	inc    esi
  40cdd6:	mov    ecx,0xc644ec21
  40cddb:	xlat   BYTE PTR ds:[ebx]
  40cddc:	xor    al,BYTE PTR [edx+ecx*2]
  40cddf:	add    cl,BYTE PTR [eax]
  40cde1:	adc    DWORD PTR [edi+0x3f],esi
  40cde4:	jle    0x40cdc7
  40cde6:	leave  
  40cde7:	(bad)  
  40cde8:	popf   
  40cde9:	call   0xa3a5:0x10ec427c
  40cdf0:	shl    DWORD PTR [ebx],1
  40cdf2:	repnz and eax,0xbd933b46
  40cdf8:	vcvtsd2ss xmm7,xmm1,xmm3
  40cdfc:	repz mov al,ds:0xd290d81a
  40ce02:	mov    WORD PTR [eax-0x45ff754a],cs
  40ce08:	push   0x9c162212
  40ce0d:	cmp    cl,dh
  40ce0f:	out    0xc2,eax
  40ce11:	mov    ecx,0x2448f6d0
  40ce16:	js     0x40ce3b
  40ce18:	pushf  
  40ce19:	add    al,0x37
  40ce1b:	push   0x77b511af
  40ce20:	push   edx
  40ce21:	mov    ah,0x93
  40ce23:	sub    al,cl
  40ce25:	sub    eax,0x68605a46
  40ce2a:	jecxz  0x40ce29
  40ce2c:	(bad)  
  40ce2d:	xchg   edx,eax
  40ce2e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ce2f:	inc    ebx
  40ce30:	loope  0x40ce44
  40ce32:	lods   al,BYTE PTR ds:[esi]
  40ce33:	in     al,0xee
  40ce35:	xor    al,0xbc
  40ce37:	cld    
  40ce38:	gs pop ds
  40ce3a:	mov    bh,0xe5
  40ce3c:	ins    BYTE PTR es:[edi],dx
  40ce3d:	lods   al,BYTE PTR ds:[esi]
  40ce3e:	iret   
  40ce3f:	mov    esi,0x2164c2e4
  40ce44:	pop    ebp
  40ce45:	add    al,0x46
  40ce47:	jle    0x40cdea
  40ce49:	dec    esp
  40ce4a:	adc    DWORD PTR [ebp+0x65],ebx
  40ce4d:	mov    ss:0x8bab193a,eax
  40ce53:	or     eax,0x182e4b43
  40ce58:	enter  0x789e,0x6
  40ce5c:	stos   DWORD PTR es:[edi],eax
  40ce5d:	pop    ebp
  40ce5e:	ins    BYTE PTR es:[edi],dx
  40ce5f:	push   esi
  40ce60:	repnz fdiv QWORD PTR [ecx]
  40ce63:	pop    ebx
  40ce64:	pusha  
  40ce65:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ce66:	push   ecx
  40ce67:	sub    ecx,DWORD PTR [eax-0x14]
  40ce6a:	jg     0x40ce55
  40ce6c:	and    eax,0xaac16c2a
  40ce71:	hlt    
  40ce72:	mov    ?,WORD PTR [edi]
  40ce74:	mov    al,ds:0xe6427386
  40ce79:	shl    BYTE PTR [edx+0x23],0x17
  40ce7d:	out    0x8c,al
  40ce7f:	(bad)  
  40ce80:	push   edx
  40ce81:	mov    ?,WORD PTR [edx+0x4820b3fb]
  40ce87:	test   al,0x73
  40ce89:	shl    bh,cl
  40ce8b:	mov    ch,0x84
  40ce8d:	mov    ecx,0x4b0e6e65
  40ce92:	pop    ds
  40ce93:	sub    BYTE PTR [eax+0x7c04a3ec],al
  40ce99:	jmp    0x1742f0f6
  40ce9e:	jmp    0xc86f:0xfd7b0ff5
  40cea5:	es ins BYTE PTR es:[edi],dx
  40cea7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cea8:	fwait
  40cea9:	pop    edx
  40ceaa:	lock retf 0xf932
  40ceae:	(bad)  
  40ceaf:	xchg   ebx,eax
  40ceb0:	push   edi
  40ceb1:	repnz push edi
  40ceb3:	mov    ds:0x5537f960,al
  40ceb8:	test   esi,ecx
  40ceba:	jg     0x40cee0
  40cebc:	adc    eax,0xf6e2d42
  40cec1:	ss jno 0x40cf30
  40cec4:	icebp  
  40cec5:	lock out dx,eax
  40cec7:	xor    al,0xa1
  40cec9:	jo     0x40ce73
  40cecb:	rcr    DWORD PTR [ebx-0x36ccd20a],1
  40ced1:	push   edi
  40ced2:	test   BYTE PTR [edx+0x1516fe6a],dh
  40ced8:	push   ebp
  40ced9:	dec    esp
  40ceda:	fist   DWORD PTR [eax+edx*8]
  40cedd:	mov    edi,0xd7c52048
  40cee2:	sub    DWORD PTR [edx+0x10533d04],eax
  40cee8:	je     0x40cf69
  40ceea:	mov    esp,DWORD PTR [ebp-0x45]
  40ceed:	dec    esp
  40ceee:	test   BYTE PTR [edi-0x39aa4e2d],0x6f
  40cef5:	cmp    eax,0x86eab290
  40cefa:	pushf  
  40cefb:	sbb    al,0xb8
  40cefd:	sub    BYTE PTR [edx+0x5d],dl
  40cf00:	mov    ebx,0xa2d0c36e
  40cf05:	dec    ebp
  40cf06:	push   eax
  40cf07:	jp     0x40cf62
  40cf09:	jp     0x40ceac
  40cf0b:	and    cl,BYTE PTR [ecx]
  40cf0d:	sub    eax,0xf757d2fc
  40cf12:	stos   DWORD PTR es:[edi],eax
  40cf13:	cmp    al,0xac
  40cf15:	pop    edi
  40cf16:	cwde   
  40cf17:	aas    
  40cf18:	mov    ah,0xf5
  40cf1a:	mov    ebx,DWORD PTR [edx+0x24]
  40cf1d:	(bad)  
  40cf1e:	jno    0x40cf45
  40cf20:	mov    BYTE PTR [edx+eax*2+0xd],ah
  40cf24:	dec    esp
  40cf25:	jno    0x40ced9
  40cf27:	cmc    
  40cf28:	xor    BYTE PTR [ecx+esi*4-0x1d],bl
  40cf2c:	push   ecx
  40cf2d:	push   0xffffff84
  40cf2f:	ins    DWORD PTR es:[edi],dx
  40cf30:	les    ebp,FWORD PTR [ecx-0x7b62d60d]
  40cf36:	dec    edi
  40cf37:	lea    esp,[ebx+eax*4-0x5a]
  40cf3b:	leave  
  40cf3c:	std    
  40cf3d:	push   edx
  40cf3e:	mov    edx,0x266b9e80
  40cf43:	cmp    DWORD PTR [edi-0x47],edx
  40cf46:	retf   
  40cf47:	clc    
  40cf48:	nop
  40cf49:	push   ecx
  40cf4a:	jmp    0xdff9:0x92a4c14a
  40cf51:	dec    esp
  40cf52:	jl     0x40cfb5
  40cf54:	sub    DWORD PTR [edx-0x57beb459],eax
  40cf5a:	pop    ebp
  40cf5b:	xor    edi,DWORD PTR [esp+edx*8]
  40cf5e:	stos   DWORD PTR es:[edi],eax
  40cf5f:	jnp    0x40cf11
  40cf61:	adc    edi,esi
  40cf63:	pop    ecx
  40cf64:	push   cs
  40cf65:	pop    esi
  40cf66:	mov    WORD PTR [edx-0x411293d9],ds
  40cf6c:	push   ebx
  40cf6d:	hlt    
  40cf6e:	sti    
  40cf6f:	rcr    BYTE PTR [eax+ecx*1],1
  40cf72:	inc    edx
  40cf73:	or     eax,0xf0378140
  40cf78:	inc    edx
  40cf79:	repz imul ebp,DWORD PTR [ecx+0xb],0x91a262d9
  40cf81:	or     edx,edi
  40cf83:	jmp    0x2fae:0xccac8a16
  40cf8a:	push   ds
  40cf8b:	fsubr  QWORD PTR [ebp+eax*4+0x3d5440bf]
  40cf92:	or     al,0xc5
  40cf94:	xchg   ebp,eax
  40cf95:	cs jmp 0x40cf2f
  40cf98:	dec    esi
  40cf99:	test   eax,0xe0f2ab01
  40cf9e:	xor    DWORD PTR [eax-0x31c60189],edx
  40cfa4:	enter  0xeac6,0xa8
  40cfa8:	push   edx
  40cfa9:	fcmovbe st,st(3)
  40cfab:	dec    ebx
  40cfac:	fsub   QWORD PTR [edx+0x7066c67a]
  40cfb2:	call   0x6e40:0x370f5e27
  40cfb9:	les    esi,FWORD PTR [edi-0x62ffbeed]
  40cfbf:	lds    edx,FWORD PTR [ebx+0x4717a34f]
  40cfc5:	ja     0x40cfdd
  40cfc7:	cmp    ebp,ebp
  40cfc9:	and    ch,BYTE PTR [eax]
  40cfcb:	jo     0x40cfa6
  40cfcd:	mov    bl,0xb3
  40cfcf:	nop
  40cfd0:	add    eax,0xa9b87583
  40cfd5:	(bad)  
  40cfd6:	mov    BYTE PTR [edx-0x21],bh
  40cfd9:	into   
  40cfda:	pop    esi
  40cfdb:	jmp    0xefbe:0x135d3a52
  40cfe2:	and    bh,al
  40cfe4:	mov    cs,WORD PTR [esi+0x4df0ea09]
  40cfea:	aam    0x1a
  40cfec:	sti    
  40cfed:	sub    al,0x64
  40cfef:	in     eax,0x55
  40cff1:	outs   dx,DWORD PTR ds:[esi]
  40cff2:	shl    esp,0xaf
  40cff5:	mov    dh,0x43
  40cff7:	enter  0x2192,0x3a
  40cffb:	xor    BYTE PTR [ebp+eax*1-0x504b11d6],bl
  40d002:	outs   dx,DWORD PTR es:[esi]
  40d004:	pop    esi
  40d005:	mov    cl,0x39
  40d007:	cmp    ah,BYTE PTR [esi+ebp*1-0x1866a258]
  40d00e:	(bad)  
  40d00f:	repnz cmp eax,0x16d412e6
  40d015:	out    0xc5,al
  40d017:	int    0xd6
  40d019:	stos   BYTE PTR es:[edi],al
  40d01a:	aaa    
  40d01b:	popa   
  40d01c:	mov    eax,0xf379821a
  40d021:	stos   BYTE PTR es:[edi],al
  40d022:	not    DWORD PTR [edi+0x62]
  40d025:	mov    bh,0xde
  40d027:	push   esp
  40d028:	or     eax,0x432db39b
  40d02d:	jno    0x40cfc8
  40d02f:	pop    ds
  40d030:	sub    al,0x3f
  40d032:	or     BYTE PTR [edi],dh
  40d034:	(bad)  
  40d035:	in     eax,dx
  40d036:	jae    0x40d09e
  40d038:	fcos   
  40d03a:	into   
  40d03b:	mov    edi,0x538df5e7
  40d040:	or     eax,0xef202da1
  40d045:	dec    edi
  40d046:	push   ebx
  40d047:	jo     0x40d058
  40d049:	or     edx,DWORD PTR [ebx-0x1c]
  40d04c:	push   ss
  40d04d:	xchg   DWORD PTR [edi+edi*1+0x4f],edx
  40d051:	xchg   ecx,eax
  40d052:	cmp    DWORD PTR [ecx-0x5e1e5a54],ebp
  40d058:	scas   al,BYTE PTR es:[edi]
  40d059:	add    BYTE PTR [ecx+0x1a1b2415],ch
  40d05f:	add    al,0x2e
  40d061:	(bad)  
  40d062:	mov    al,0x8
  40d064:	inc    ecx
  40d065:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d066:	cmp    BYTE PTR [edx],bl
  40d068:	in     al,0x4
  40d06a:	(bad)  
  40d06b:	jno    0x40d068
  40d06d:	sub    BYTE PTR [edi],bh
  40d06f:	out    0xab,al
  40d071:	(bad)  
  40d072:	jg     0x40d0e4
  40d074:	jbe    0x40d0b5
  40d076:	bound  esi,QWORD PTR [esi-0x4f1281b1]
  40d07c:	test   BYTE PTR [ebp+0x4ce0a7af],0x97
  40d083:	xchg   esi,eax
  40d084:	test   DWORD PTR [edx+0x46a1cd5],edi
  40d08a:	cmp    DWORD PTR [ebp+0x760b06d7],edi
  40d090:	cmp    al,0x39
  40d092:	icebp  
  40d093:	push   ebx
  40d094:	lea    ebp,[edi]
  40d096:	jae    0x40d023
  40d098:	(bad)  
  40d09a:	and    BYTE PTR [eax],0xb3
  40d09d:	jbe    0x40d034
  40d09f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d0a0:	sti    
  40d0a1:	dec    edx
  40d0a2:	mul    DWORD PTR [eax+esi*2+0x6f913e96]
  40d0a9:	dec    ecx
  40d0aa:	cmp    bh,BYTE PTR ds:[edx+0x10921121]
  40d0b1:	scas   al,BYTE PTR es:[edi]
  40d0b2:	mov    ah,0xe3
  40d0b4:	mov    eax,0xfd4d61f1
  40d0b9:	test   BYTE PTR [eax],bl
  40d0bb:	xor    eax,0x3ed5a308
  40d0c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d0c1:	xor    al,0x1
  40d0c3:	jbe    0x40c12f
  40d0c9:	mov    edx,DWORD PTR [ebp-0xc]
  40d0cc:	mov    edi,DWORD PTR [ebp-0x24]
  40d0cf:	xor    edx,eax
  40d0d1:	add    edx,ecx
  40d0d3:	imul   edx,edi
  40d0d6:	mov    edi,DWORD PTR [ebp-0x18]
  40d0d9:	xor    edi,eax
  40d0db:	add    edx,edi
  40d0dd:	jmp    0x40d49b
  40d0e2:	xor    ah,BYTE PTR [edi+ecx*8]
  40d0e5:	out    0xcd,al
  40d0e7:	icebp  
  40d0e8:	xor    esp,esi
  40d0ea:	cmp    al,0x59
  40d0ec:	lods   al,BYTE PTR ds:[esi]
  40d0ed:	les    esi,FWORD PTR [ebp-0x13]
  40d0f0:	sbb    eax,0x709daaed
  40d0f5:	jo     0x40d096
  40d0f7:	jge    0x40d169
  40d0f9:	jo     0x40d119
  40d0fb:	xchg   edi,eax
  40d0fc:	mov    esp,0x68a98745
  40d101:	shl    DWORD PTR [esi+eax*1],0x84
  40d105:	and    DWORD PTR [esi-0x65720bdd],esi
  40d10b:	jne    0x40d17f
  40d10d:	aad    0xaa
  40d10f:	xchg   edx,eax
  40d110:	in     eax,0x61
  40d112:	test   DWORD PTR [ebp-0x19b4abe9],0xb82038ac
  40d11c:	shl    BYTE PTR [edi+ebp*1+0x10],cl
  40d120:	mov    eax,ds:0xb7aeb810
  40d125:	fucomip st,st(7)
  40d127:	in     eax,dx
  40d128:	cmc    
  40d129:	retf   0xf6f1
  40d12c:	(bad)
  40d130:	pop    ds
  40d131:	mov    bh,0xad
  40d133:	aam    0x8c
  40d135:	pop    ss
  40d136:	adc    ch,bl
  40d138:	add    eax,DWORD PTR [ebp-0x7d]
  40d13b:	add    edx,eax
  40d13d:	sub    eax,0x2439780a
  40d142:	aam    0x10
  40d144:	jp     0x40d0c6
  40d146:	inc    edx
  40d147:	pop    esp
  40d148:	call   FWORD PTR [ecx+edi*2-0x65e0e8]
  40d14f:	lods   eax,DWORD PTR ds:[esi]
  40d150:	repz pop esi
  40d152:	ret    0xb170
  40d155:	dec    ebx
  40d156:	or     esi,DWORD PTR [ebp+0x7f]
  40d159:	mov    ch,0x4a
  40d15b:	cld    
  40d15c:	lea    edx,[esi+0x2748d875]
  40d162:	pop    ds
  40d163:	popa   
  40d164:	pushf  
  40d165:	cdq    
  40d166:	push   0xffffffa4
  40d168:	shr    BYTE PTR [eax-0xe],cl
  40d16b:	or     ecx,eax
  40d16d:	stos   BYTE PTR es:[edi],al
  40d16e:	scas   al,BYTE PTR es:[edi]
  40d16f:	cmp    eax,DWORD PTR [ebx-0x79f3a351]
  40d175:	mov    eax,0xae0ce2d6
  40d17a:	xlat   BYTE PTR ds:[ebx]
  40d17b:	inc    ebx
  40d17c:	mov    edi,0xf215d845
  40d181:	ret    0xa26c
  40d184:	idiv   ebx
  40d186:	sbb    al,bh
  40d188:	mov    ds:0x8382483a,eax
  40d18d:	sub    DWORD PTR [eax+ebx*1+0x2c1fb9ec],edx
  40d194:	es xchg ecx,eax
  40d196:	mov    esp,0x432849c4
  40d19b:	xchg   edi,eax
  40d19c:	mov    ds:0x8837cec0,eax
  40d1a1:	jg     0x40d1a4
  40d1a3:	adc    esp,DWORD PTR [edx-0x6be1876c]
  40d1a9:	cmp    esi,ecx
  40d1ab:	inc    ebx
  40d1ac:	or     DWORD PTR [eax-0xc],ebp
  40d1af:	test   ah,dl
  40d1b1:	call   0x4505:0xa6e83250
  40d1b8:	xchg   DWORD PTR ds:0xd261b81b,esp
  40d1be:	push   cs
  40d1bf:	imul   edx,DWORD PTR [ecx-0x5c],0x8282e3b
  40d1c6:	jmp    0xc3d203ba
  40d1cb:	and    esp,DWORD PTR [edx+0x27902b78]
  40d1d1:	out    0x9c,eax
  40d1d3:	sbb    eax,0x8f51227a
  40d1d8:	(bad)  
  40d1d9:	rcr    dh,0xa3
  40d1dc:	push   edi
  40d1dd:	inc    edx
  40d1de:	or     ebp,DWORD PTR [esi+0xcc881c]
  40d1e4:	jecxz  0x40d1f2
  40d1e6:	test   DWORD PTR [edx+ecx*4],esi
  40d1e9:	jne    0x40d21c
  40d1eb:	sbb    ebx,edi
  40d1ed:	cld    
  40d1ee:	and    al,0xa5
  40d1f0:	dec    ebp
  40d1f1:	sbb    eax,0x89371fd1
  40d1f6:	mov    DWORD PTR [ebx],ebp
  40d1f8:	(bad)  
  40d1f9:	and    eax,0xaea1a386
  40d1fe:	imul   ecx,edx,0x75
  40d201:	inc    esi
  40d202:	fisub  WORD PTR [edx-0x7a326cd6]
  40d208:	imul   esp,DWORD PTR [edi-0x4e4647d],0x16
  40d20f:	push   0x5a
  40d211:	jecxz  0x40d218
  40d213:	jg     0x40d237
  40d215:	push   esi
  40d216:	jp     0x40d1e2
  40d218:	mov    ch,0xa3
  40d21a:	jecxz  0x40d1f4
  40d21c:	test   eax,0x9deaa08e
  40d221:	mov    al,ds:0xc16ffb67
  40d226:	add    BYTE PTR [ebp+0x44],0xf7
  40d22a:	vmread DWORD PTR [ebx-0x7588ba10],ebp
  40d231:	mov    esi,0xc53111fd
  40d236:	out    0xcd,eax
  40d238:	cmp    ch,al
  40d23a:	xchg   ebx,eax
  40d23b:	inc    edx
  40d23c:	push   cs
  40d23d:	push   0xffffffd4
  40d23f:	mov    dl,0xdb
  40d241:	xlat   BYTE PTR ds:[ebx]
  40d242:	imul   edi,DWORD PTR [esi-0x6b20df5d],0x35a2aeab
  40d24c:	fwait
  40d24d:	inc    esp
  40d24e:	es scas eax,DWORD PTR es:[edi]
  40d250:	leave  
  40d251:	fisubr DWORD PTR [ebx+0x4a]
  40d254:	or     bh,ah
  40d256:	mov    BYTE PTR [ecx],0x6a
  40d259:	mov    ss,WORD PTR [esi]
  40d25b:	icebp  
  40d25c:	hlt    
  40d25d:	inc    ebx
  40d25e:	inc    BYTE PTR [eax-0x4e289d99]
  40d264:	or     eax,0x89de1872
  40d269:	adc    eax,0x855dad8f
  40d26e:	and    eax,0x9823897d
  40d273:	(bad)  
  40d274:	push   edi
  40d275:	xor    ah,bh
  40d277:	dec    ebx
  40d278:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d279:	repnz mov esp,esi
  40d27c:	push   ecx
  40d27d:	or     eax,0x78cf6ff6
  40d282:	add    ecx,DWORD PTR [edi]
  40d284:	push   cs
  40d285:	cmp    DWORD PTR [esp+edi*2+0x1994b],eax
  40d28c:	cmc    
  40d28d:	rol    DWORD PTR [esp+edx*1+0x57d974b6],cl
  40d294:	arpl   WORD PTR [eax+0x64],dx
  40d297:	xchg   eax,esi
  40d299:	test   BYTE PTR ds:0x86dd4fec,al
  40d29f:	cmp    cl,al
  40d2a1:	enter  0xa44d,0x74
  40d2a5:	push   eax
  40d2a6:	push   0x0
  40d2a8:	pop    ss
  40d2a9:	jp     0x40d231
  40d2ab:	jmp    0x40d328
  40d2ad:	push   edx
  40d2ae:	test   al,0x4a
  40d2b0:	inc    edi
  40d2b1:	adc    eax,esp
  40d2b3:	mov    bh,0x35
  40d2b5:	mov    ebp,0xb568056c
  40d2ba:	mov    bh,0xb4
  40d2bc:	nop
  40d2bd:	dec    ebp
  40d2be:	imul   ecx,DWORD PTR [eax-0xb45f05a],0x781c4b41
  40d2c8:	test   eax,0x1427fb7c
  40d2cd:	jl     0x40d2b1
  40d2cf:	ret    
  40d2d0:	inc    di
  40d2d2:	xchg   DWORD PTR [esi],ebp
  40d2d4:	add    al,0xbb
  40d2d6:	dec    ebp
  40d2d7:	pop    ss
  40d2d8:	jnp    0x40d2b9
  40d2da:	jmp    0x40d322
  40d2dc:	pop    eax
  40d2dd:	call   0x9356:0xf86057f2
  40d2e4:	adc    ch,BYTE PTR [esp+edi*1]
  40d2e7:	pop    ebx
  40d2e8:	sbb    bh,cl
  40d2ea:	neg    DWORD PTR ds:0x1347a484
  40d2f0:	popa   
  40d2f1:	scas   al,BYTE PTR es:[edi]
  40d2f2:	push   eax
  40d2f3:	add    DWORD PTR [esi+eiz*2],ebp
  40d2f6:	and    al,0xbb
  40d2f8:	mov    ebx,0x28e153aa
  40d2fd:	lock mov ebp,0xe489b9cd
  40d303:	jbe    0x40d2d2
  40d305:	or     al,0x6b
  40d307:	popf   
  40d308:	or     eax,0xee4f14da
  40d30d:	pop    es
  40d30e:	stos   DWORD PTR es:[edi],eax
  40d30f:	call   0x68c4:0xcf0fc431
  40d316:	add    BYTE PTR [esi],dl
  40d318:	test   BYTE PTR [ebx+edi*4-0x1d],ah
  40d31c:	mov    edi,0xa96611ed
  40d321:	mov    ah,0x99
  40d323:	cwde   
  40d324:	mov    ebx,0x4612c709
  40d329:	push   edi
  40d32a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d32b:	ins    BYTE PTR es:[edi],dx
  40d32c:	shr    BYTE PTR [eax+0x4c],cl
  40d32f:	in     al,0x76
  40d331:	fcomp  QWORD PTR [edx]
  40d333:	lds    esi,FWORD PTR [ebx]
  40d335:	pop    esi
  40d336:	fstp   TBYTE PTR [esi+eax*4+0x44]
  40d33a:	add    al,0x98
  40d33c:	out    dx,eax
  40d33d:	lods   al,BYTE PTR ds:[esi]
  40d33e:	hlt    
  40d33f:	out    0x74,eax
  40d341:	cdq    
  40d342:	cmc    
  40d343:	repz mov ah,0x74
  40d346:	jp     0x40d34f
  40d348:	inc    esp
  40d349:	je     0x40d391
  40d34b:	(bad)
  40d34e:	rol    ah,1
  40d350:	sbb    eax,0xc895513d
  40d355:	stos   BYTE PTR es:[edi],al
  40d356:	add    eax,0x71151cf1
  40d35b:	pusha  
  40d35c:	outs   dx,DWORD PTR ds:[esi]
  40d35d:	fwait
  40d35e:	jb     0x40d3cd
  40d360:	mov    ah,0x3d
  40d362:	xlat   BYTE PTR ds:[ebx]
  40d363:	jmp    0xb73d:0x20a72cce
  40d36a:	cli    
  40d36b:	call   DWORD PTR [esi+edx*1+0x79cfaa63]
  40d372:	push   ecx
  40d373:	and    DWORD PTR [ebx-0x3f],edi
  40d376:	nop
  40d377:	add    al,0xa
  40d379:	das    
  40d37a:	inc    esp
  40d37b:	adc    eax,0x7c56e08
  40d380:	test   DWORD PTR [edi-0x6],eax
  40d383:	mov    ah,0x0
  40d385:	scas   al,BYTE PTR es:[edi]
  40d386:	inc    esp
  40d387:	mov    edx,0xcf74e5b8
  40d38d:	add    cl,dl
  40d38f:	mov    bh,0x7
  40d391:	jno    0x40d38f
  40d393:	xchg   ecx,eax
  40d394:	mov    ebx,0x98344346
  40d399:	stc    
  40d39a:	cmp    al,0xee
  40d39c:	push   eax
  40d39d:	adc    eax,0x74039e25
  40d3a2:	jne    0x40d414
  40d3a4:	push   ss
  40d3a5:	jnp    0x40d3b2
  40d3a7:	mov    al,ds:0x8fed60e4
  40d3ac:	inc    eax
  40d3ad:	lds    ebx,FWORD PTR [eax+0x69]
  40d3b0:	ret    0x8c2f
  40d3b3:	adc    ah,0x65
  40d3b6:	int3   
  40d3b7:	adc    eax,0xcbc31573
  40d3bc:	movups xmm7,XMMWORD PTR ds:0x32cd1a4d
  40d3c3:	sub    al,BYTE PTR [esi]
  40d3c5:	fwait
  40d3c6:	into   
  40d3c7:	and    ecx,DWORD PTR [ebx-0x7541823e]
  40d3cd:	aad    0x27
  40d3cf:	push   ds
  40d3d0:	ret    
  40d3d1:	imul   BYTE PTR [esi-0x992b10b]
  40d3d7:	cmp    DWORD PTR [edi+ecx*4-0x7e],ebx
  40d3db:	inc    ebx
  40d3dc:	push   cs
  40d3dd:	nop
  40d3de:	mov    ds:0x87d9ca47,eax
  40d3e3:	push   esp
  40d3e4:	fdiv   QWORD PTR [esi+0x435f032f]
  40d3ea:	imul   ebx,ebx,0x1
  40d3ed:	fsub   QWORD PTR [ebp+0x14e7b560]
  40d3f3:	jae    0x40d389
  40d3f5:	jb     0x40d3c2
  40d3f7:	pusha  
  40d3f8:	xchg   edx,eax
  40d3f9:	jg     0x40d3dc
  40d3fb:	dec    ebx
  40d3fc:	dec    ecx
  40d3fd:	dec    eax
  40d3fe:	gs inc ecx
  40d400:	inc    ebx
  40d401:	in     eax,dx
  40d402:	aad    0x4c
  40d404:	es jmp 0xa71fc137
  40d40a:	pop    edi
  40d40b:	and    DWORD PTR [ebp-0x248059fe],eax
  40d411:	and    BYTE PTR [eax+0x5a10c1b1],ah
  40d417:	or     bl,BYTE PTR [edx+0x3e]
  40d41a:	(bad)  
  40d41b:	ins    DWORD PTR es:[edi],dx
  40d41c:	mov    edi,0x9003e488
  40d421:	popa   
  40d422:	out    dx,eax
  40d423:	out    0x3a,al
  40d425:	loopne 0x40d488
  40d427:	(bad)  
  40d428:	jmp    0xe71e:0x161a9088
  40d42f:	cs cmps DWORD PTR fs:[esi],DWORD PTR es:[edi]
  40d432:	mov    esi,0x75ae105c
  40d437:	shl    DWORD PTR [eax-0x5],cl
  40d43a:	daa    
  40d43b:	sahf   
  40d43c:	mov    eax,0xe37b725a
  40d441:	in     eax,dx
  40d442:	mov    ecx,0x7ead30bf
  40d447:	add    dl,BYTE PTR [esi]
  40d449:	adc    DWORD PTR [esi-0x1a],0xfb9c2f8c
  40d450:	into   
  40d451:	lahf   
  40d452:	xchg   DWORD PTR [edi-0x633193dd],edx
  40d458:	out    0x43,al
  40d45a:	ss dec ecx
  40d45c:	xor    ebx,DWORD PTR [ecx-0x4d]
  40d45f:	pushf  
  40d460:	sub    DWORD PTR [ecx],0x3f
  40d463:	dec    esi
  40d464:	js     0x40d4a8
  40d466:	fnsave [ecx]
  40d468:	cdq    
  40d469:	int3   
  40d46a:	jo     0x40d4d0
  40d46c:	mov    eax,DWORD PTR [ecx]
  40d46e:	push   edi
  40d46f:	ds sahf 
  40d471:	mov    dl,dl
  40d473:	ss inc BYTE PTR cs:[ecx]
  40d477:	sbb    BYTE PTR [eax-0x73c0c0f1],0xb2
  40d47e:	ret    
  40d47f:	fsubrp st(7),st
  40d481:	call   DWORD PTR [esi+0x3b]
  40d484:	sub    al,0xb6
  40d486:	shl    BYTE PTR [ecx-0x47],1
  40d489:	pop    ebp
  40d48a:	add    BYTE PTR [ebx],cl
  40d48c:	arpl   WORD PTR [edx],sp
  40d48e:	dec    eax
  40d48f:	xor    al,0x70
  40d491:	xor    al,0x56
  40d493:	ror    edx,1
  40d495:	cmc    
  40d496:	mov    ebp,edi
  40d498:	iret   
  40d499:	pop    ebx
  40d49a:	out    dx,eax
  40d49b:	mov    edi,DWORD PTR [ebp-0x8]
  40d49e:	lea    edx,[edx+edi*1+0x32729c]
  40d4a5:	mov    DWORD PTR [ebp-0x8],edx
  40d4a8:	mov    edx,DWORD PTR [ebp-0x20]
  40d4ab:	xor    edx,eax
  40d4ad:	mov    edi,0xffcd8d64
  40d4b2:	sub    edi,edx
  40d4b4:	jmp    0x40d872
  40d4b9:	out    dx,al
  40d4ba:	inc    ebx
  40d4bb:	push   0x4e
  40d4bd:	jno    0x40d534
  40d4bf:	jmp    0xa8d3:0xb81a1d63
  40d4c6:	sub    al,BYTE PTR [esi]
  40d4c8:	mov    edx,0x707099c9
  40d4cd:	lahf   
  40d4ce:	jge    0x40d540
  40d4d0:	jo     0x40d4b9
  40d4d2:	sub    eax,0x711b3bef
  40d4d7:	fsubr  DWORD PTR ds:0x1251c86b
  40d4dd:	sub    al,0x90
  40d4df:	dec    edx
  40d4e0:	int    0xaf
  40d4e2:	pop    ds
  40d4e3:	out    dx,eax
  40d4e4:	lock xchg ecx,eax
  40d4e6:	mov    ecx,DWORD PTR [eax-0x34]
  40d4e9:	mov    eax,0x715bf10b
  40d4ee:	inc    ebp
  40d4ef:	pop    ds
  40d4f0:	imul   edx,DWORD PTR [ebx],0xbd031ab1
  40d4f6:	lock mov ah,bh
  40d4f9:	imul   esi,DWORD PTR [esi],0x40
  40d4fc:	sub    DWORD PTR [edi-0x5c],edx
  40d4ff:	pop    esi
  40d500:	sbb    ebx,esp
  40d502:	jo     0x40d574
  40d504:	shl    ecx,0xe0
  40d507:	mov    BYTE PTR [edi],ch
  40d509:	gs and esi,0x30ccb1f9
  40d510:	fwait
  40d511:	jp     0x40d4df
  40d513:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d514:	ss scas al,BYTE PTR es:[edi]
  40d516:	dec    edx
  40d517:	jmp    0x40d514
  40d519:	into   
  40d51a:	in     eax,0x16
  40d51c:	mov    esp,0xeb85071d
  40d521:	dec    edx
  40d522:	xchg   edx,eax
  40d523:	sbb    BYTE PTR [ebx-0x54a3a7c],0x61
  40d52a:	jne    0x40d56f
  40d52c:	pop    edi
  40d52d:	push   edx
  40d52e:	xchg   ecx,eax
  40d52f:	jne    0x40d533
  40d531:	cld    
  40d532:	mov    gs,ebp
  40d534:	mov    esp,0x256d3e9a
  40d539:	xor    eax,0x3ad64d5c
  40d53e:	inc    edx
  40d53f:	pusha  
  40d540:	lds    ebx,FWORD PTR [ebx]
  40d542:	test   eax,0xa62e74cd
  40d547:	lods   eax,DWORD PTR ds:[esi]
  40d548:	jmp    0x40d5bf
  40d54a:	xor    dl,BYTE PTR [ebp+0x758e7b21]
  40d550:	or     al,0xc0
  40d552:	out    0x47,al
  40d554:	rcr    DWORD PTR [eax+0x3b],0x8f
  40d558:	into   
  40d559:	pop    ebx
  40d55a:	sub    DWORD PTR [edx-0x4b],edi
  40d55d:	mov    ah,0x23
  40d55f:	(bad)  
  40d560:	or     ecx,esi
  40d562:	push   ebp
  40d563:	(bad)
  40d566:	xor    BYTE PTR ds:0xc02e0955,0x3f
  40d56d:	dec    esp
  40d56e:	or     dh,BYTE PTR [edx-0x12]
  40d571:	add    ebp,edi
  40d573:	sbb    DWORD PTR [ecx],ebp
  40d575:	in     eax,dx
  40d576:	dec    ebx
  40d577:	adc    BYTE PTR [esi],dh
  40d579:	ds loopne 0x40d553
  40d57c:	pop    esp
  40d57d:	mov    eax,0x4f552cc
  40d582:	rol    edx,0xf8
  40d585:	or     ch,dl
  40d587:	sbb    cl,BYTE PTR ds:0x8679477e
  40d58d:	cdq    
  40d58e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d58f:	fchs   
  40d591:	mov    eax,0x1427844
  40d596:	lds    esp,FWORD PTR [ecx]
  40d598:	cs ret 
  40d59a:	xor    BYTE PTR [eax-0x22],ch
  40d59d:	sub    bl,BYTE PTR [ebp+0x33ca186f]
  40d5a3:	fist   WORD PTR [esp+eax*1+0x40]
  40d5a7:	push   ebx
  40d5a8:	out    dx,eax
  40d5a9:	xchg   esp,eax
  40d5aa:	sbb    DWORD PTR [eax+edi*8-0xf],esi
  40d5ae:	pusha  
  40d5af:	add    eax,0x4e61780
  40d5b4:	sub    dh,dh
  40d5b6:	cmp    dl,al
  40d5b8:	inc    edi
  40d5b9:	scas   al,BYTE PTR es:[edi]
  40d5ba:	xchg   ebp,eax
  40d5bb:	mov    ds:0x485edf81,al
  40d5c0:	push   edi
  40d5c1:	ficom  DWORD PTR [ebp+0x7d]
  40d5c4:	loopne 0x40d54e
  40d5c6:	push   ds
  40d5c7:	xchg   esp,eax
  40d5c8:	and    eax,0x980fc5f6
  40d5cd:	push   cs
  40d5ce:	int    0x1a
  40d5d0:	test   DWORD PTR [ebp+0x16f2f056],0x6870bc49
  40d5da:	(bad)  
  40d5db:	ja     0x40d650
  40d5dd:	cmp    cl,BYTE PTR [ecx+0x3350db32]
  40d5e3:	pop    esp
  40d5e4:	or     bl,BYTE PTR [edi]
  40d5e6:	or     DWORD PTR [eax+0x59],eax
  40d5e9:	pop    ss
  40d5ea:	imul   esp,ecx,0x2b
  40d5ed:	in     eax,0xf5
  40d5ef:	xadd   BYTE PTR [edx],cl
  40d5f2:	cmp    ch,BYTE PTR [edx+esi*4]
  40d5f5:	mov    ds:0x5ceeb795,eax
  40d5fa:	repz jg 0x40d664
  40d5fd:	push   ebp
  40d5fe:	jmp    0x196b:0x78e557c8
  40d605:	jp     0x40d5a2
  40d607:	addr16 mov al,0x46
  40d60a:	mov    esp,0xc8c8ea39
  40d60f:	loopne 0x40d5a5
  40d611:	push   ecx
  40d612:	inc    ebx
  40d613:	stos   DWORD PTR es:[edi],eax
  40d614:	lods   al,BYTE PTR ds:[esi]
  40d615:	daa    
  40d616:	sub    eax,0xec2d718a
  40d61b:	int    0x17
  40d61d:	popf   
  40d61e:	aaa    
  40d61f:	or     ah,BYTE PTR [ebx+0x3363d5f3]
  40d625:	ja     0x40d5de
  40d627:	mov    BYTE PTR [edi+0x75f9af31],ch
  40d62d:	scas   eax,DWORD PTR es:[edi]
  40d62e:	xchg   ebx,eax
  40d62f:	xchg   esp,eax
  40d630:	retf   
  40d631:	loop   0x40d657
  40d633:	and    al,0x9b
  40d635:	dec    ebx
  40d636:	das    
  40d637:	inc    eax
  40d638:	out    dx,al
  40d639:	ret    0x9f68
  40d63c:	and    edx,esi
  40d63e:	add    BYTE PTR [ebp-0x2f],al
  40d641:	lods   eax,DWORD PTR ds:[esi]
  40d642:	lock pop ss
  40d644:	enter  0x5025,0x3c
  40d648:	inc    ebx
  40d649:	push   edx
  40d64a:	add    al,BYTE PTR [eax]
  40d64c:	xchg   DWORD PTR [eax-0x602e89e8],ebp
  40d652:	mov    ?,WORD PTR [edx+0x3c45cc32]
  40d658:	push   ecx
  40d659:	sbb    dl,BYTE PTR [ecx]
  40d65b:	inc    ebp
  40d65c:	push   esi
  40d65d:	mov    BYTE PTR [edi-0x48],al
  40d660:	or     al,0xe1
  40d662:	rcl    ebp,1
  40d664:	mov    ebx,0xc85bde1a
  40d669:	call   0xbe8:0x7691365d
  40d670:	sbb    ch,al
  40d672:	mul    DWORD PTR [edi+0x5b568f96]
  40d678:	fdiv   DWORD PTR [ebp-0x6]
  40d67b:	scas   eax,DWORD PTR es:[edi]
  40d67c:	aaa    
  40d67d:	mov    cl,0xdf
  40d67f:	xchg   edi,eax
  40d680:	fnstsw WORD PTR [eax+0x6af1dbab]
  40d686:	and    edx,ebp
  40d688:	cmp    eax,0xd9ffc150
  40d68d:	call   0x8bb65921
  40d692:	scas   al,BYTE PTR es:[edi]
  40d693:	push   si
  40d695:	loop   0x40d6f7
  40d697:	imul   esp,DWORD PTR [edx-0x2],0x4b47b5ba
  40d69e:	mov    eax,0xddd67a13
  40d6a3:	push   cs
  40d6a4:	ins    DWORD PTR es:[edi],dx
  40d6a5:	add    cl,BYTE PTR [edx+0x6560dea7]
  40d6ab:	mov    ch,0xb9
  40d6ad:	add    BYTE PTR ds:0x5fd25c9,al
  40d6b3:	scas   al,BYTE PTR es:[edi]
  40d6b4:	cld    
  40d6b5:	mov    DWORD PTR [edi-0x21b5a85a],esp
  40d6bb:	addr16 out dx,al
  40d6bd:	sar    eax,cl
  40d6bf:	xchg   ebp,eax
  40d6c0:	jno    0x40d70d
  40d6c2:	pop    edi
  40d6c3:	in     eax,0xcf
  40d6c5:	jns    0x40d6a1
  40d6c7:	jo     0x40d680
  40d6c9:	sbb    bh,bl
  40d6cb:	push   esp
  40d6cc:	dec    edx
  40d6cd:	push   ebp
  40d6ce:	pop    ebp
  40d6cf:	add    al,0x35
  40d6d1:	push   cs
  40d6d2:	push   ds
  40d6d3:	pop    es
  40d6d4:	jmp    0x829b11e5
  40d6d9:	dec    ebp
  40d6da:	ret    0x156b
  40d6dd:	fisttp QWORD PTR [ebp+0x7d]
  40d6e0:	or     BYTE PTR [esi-0x5db6c02e],al
  40d6e6:	test   eax,0x5d22c3fa
  40d6eb:	fimul  DWORD PTR [ecx+eiz*1]
  40d6ee:	arpl   dx,di
  40d6f0:	and    edx,DWORD PTR [edi-0x1a]
  40d6f3:	mov    bl,0x3f
  40d6f5:	outs   dx,DWORD PTR ds:[esi]
  40d6f6:	idiv   BYTE PTR [edx]
  40d6f8:	cmpps  xmm1,xmm0,0x1b
  40d6fc:	adc    DWORD PTR [edx-0x4a3bd252],0x70d0690f
  40d706:	nop
  40d707:	imul   ecx,DWORD PTR [esi-0xd],0x6894bd52
  40d70e:	mul    BYTE PTR [eax-0x23]
  40d711:	sub    DWORD PTR [edx+0x32],ebp
  40d714:	xchg   ecx,eax
  40d715:	mov    eax,ds:0x3b62ede1
  40d71a:	jp     0x40d75b
  40d71c:	mov    dh,0xf5
  40d71e:	aad    0x72
  40d720:	stos   DWORD PTR es:[edi],eax
  40d721:	sbb    edi,DWORD PTR [eax]
  40d723:	dec    eax
  40d724:	or     esi,ebx
  40d726:	mov    WORD PTR [edi+0x7e77fd6a],?
  40d72c:	lods   al,BYTE PTR ds:[esi]
  40d72d:	pusha  
  40d72e:	xor    BYTE PTR [edx],ch
  40d730:	les    edx,FWORD PTR [ebx+ebx*8-0x47]
  40d734:	daa    
  40d735:	xchg   edx,eax
  40d736:	rol    BYTE PTR [ecx+0x535f95ba],1
  40d73c:	repnz cmp BYTE PTR [ecx],dl
  40d73f:	xchg   ebp,eax
  40d740:	stos   DWORD PTR es:[edi],eax
  40d741:	cmc    
  40d742:	pop    ecx
  40d743:	data16 das 
  40d745:	out    0xb3,eax
  40d747:	sbb    edx,DWORD PTR [esi+ebx*8+0x245742c9]
  40d74e:	jbe    0x40d754
  40d750:	push   ecx
  40d751:	cdq    
  40d752:	leave  
  40d753:	pop    ds
  40d754:	sub    eax,edi
  40d756:	iret   
  40d757:	outs   dx,BYTE PTR ds:[esi]
  40d758:	stos   DWORD PTR es:[edi],eax
  40d759:	and    eax,0x3e706f22
  40d75e:	call   0xdb991a9f
  40d763:	xchg   ebx,eax
  40d764:	outs   dx,BYTE PTR ds:[esi]
  40d765:	sbb    BYTE PTR [ebx+0x38],0xb8
  40d769:	xor    cl,BYTE PTR [ebx-0x64]
  40d76c:	mov    bh,0x35
  40d76e:	cmp    esi,DWORD PTR [edi+0x4abda929]
  40d774:	jns    0x40d754
  40d776:	add    BYTE PTR [edi-0x6b],al
  40d779:	push   esp
  40d77a:	jmp    0x5b3b:0x95b2270d
  40d781:	cld    
  40d782:	(bad)  
  40d783:	and    al,BYTE PTR [edi]
  40d785:	in     eax,dx
  40d786:	xchg   edi,eax
  40d787:	or     ebx,DWORD PTR [edx-0x110ea82d]
  40d78d:	xor    BYTE PTR [esi],al
  40d78f:	jmp    0x26e5:0x4831b922
  40d796:	or     al,0x33
  40d798:	fs ret 0x229f
  40d79c:	jg     0x40d787
  40d79e:	jns    0x40d7c5
  40d7a0:	scas   eax,DWORD PTR es:[edi]
  40d7a1:	pop    ds
  40d7a2:	xor    ch,cl
  40d7a4:	(bad)  
  40d7a5:	lahf   
  40d7a6:	jge    0x40d7fa
  40d7a8:	add    al,bh
  40d7aa:	pop    ss
  40d7ab:	adc    dl,BYTE PTR [ecx-0x14]
  40d7ae:	stos   DWORD PTR es:[edi],eax
  40d7af:	fsub   st(5),st
  40d7b1:	nop
  40d7b2:	cmp    DWORD PTR [edx-0xd97b64],ebx
  40d7b8:	dec    ebp
  40d7b9:	xchg   ecx,eax
  40d7ba:	lea    ecx,[edi]
  40d7bc:	xor    al,0xad
  40d7be:	or     dl,BYTE PTR [ebx-0x6636d88b]
  40d7c4:	mov    DWORD PTR [eax-0x29],esi
  40d7c7:	sub    bh,BYTE PTR [esi+0x5c]
  40d7ca:	rcl    BYTE PTR [eax-0x49fd1850],1
  40d7d0:	jmp    0x210de72a
  40d7d5:	push   ebp
  40d7d6:	push   esi
  40d7d7:	push   edi
  40d7d8:	test   DWORD PTR [eax],edx
  40d7da:	sahf   
  40d7db:	lods   eax,DWORD PTR ds:[esi]
  40d7dc:	add    ecx,DWORD PTR [esi+eax*8]
  40d7df:	mov    dl,0x91
  40d7e1:	call   DWORD PTR [ebx-0x2f]
  40d7e4:	ror    DWORD PTR [esi+0x471ceaab],0xf7
  40d7eb:	lock ss mov ch,0xd7
  40d7ef:	xor    al,0x5d
  40d7f1:	and    eax,0xc4bedcbd
  40d7f6:	xchg   edi,eax
  40d7f7:	pop    ds
  40d7f8:	jno    0x40d7ba
  40d7fa:	xchg   dx,ax
  40d7fc:	xchg   BYTE PTR [eax+0x75],bh
  40d7ff:	clc    
  40d800:	cmp    BYTE PTR [edi-0x71],bl
  40d803:	aad    0x70
  40d805:	div    DWORD PTR [edx]
  40d807:	pop    edx
  40d808:	push   ds
  40d809:	loop   0x40d7f9
  40d80b:	iret   
  40d80c:	(bad)  
  40d80d:	xlat   BYTE PTR ds:[ebx]
  40d80e:	loope  0x40d876
  40d810:	sub    DWORD PTR [ebx+eax*1-0x6],edi
  40d814:	adc    DWORD PTR [esi+ebp*2],ebp
  40d817:	sbb    ch,BYTE PTR [esi+0x64]
  40d81a:	jmp    0xe575c68
  40d81f:	push   esp
  40d820:	cli    
  40d821:	fldlg2 
  40d823:	test   BYTE PTR ds:0x496cc628,ah
  40d829:	pushf  
  40d82a:	mov    ecx,0xe6fda870
  40d82f:	push   0x9
  40d831:	jmp    0x40d88d
  40d833:	ins    BYTE PTR es:[edi],dx
  40d834:	inc    ebp
  40d835:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d836:	inc    edx
  40d837:	jmp    0x40d7dd
  40d839:	xchg   edx,eax
  40d83a:	push   ds
  40d83b:	popa   
  40d83c:	out    0x6a,al
  40d83e:	xor    ah,0x3f
  40d841:	xchg   edx,eax
  40d842:	cwde   
  40d843:	pop    esi
  40d844:	loop   0x40d7e0
  40d846:	add    eax,eax
  40d848:	sbb    eax,0xa147137f
  40d84d:	dec    eax
  40d84e:	hlt    
  40d84f:	cmc    
  40d850:	scas   al,BYTE PTR es:[edi]
  40d851:	adc    eax,0xd26d30dd
  40d856:	xchg   edx,eax
  40d857:	pop    es
  40d858:	mov    edi,0x45defec9
  40d85d:	retf   0xacb2
  40d860:	jmp    0x40d8b6
  40d862:	dec    edi
  40d863:	enter  0x4d1b,0x8b
  40d867:	xchg   edi,eax
  40d868:	in     eax,0xbf
  40d86a:	outs   dx,DWORD PTR ds:[esi]
  40d86b:	test   al,0xee
  40d86d:	mov    al,0xd9
  40d86f:	loopne 0x40d8d8
  40d871:	push   esi
  40d872:	add    edi,DWORD PTR [ebp-0x10]
  40d875:	mov    edx,DWORD PTR [ebp-0x20]
  40d878:	mov    ebx,DWORD PTR [ebp-0x8]
  40d87b:	xor    edx,eax
  40d87d:	add    edx,ecx
  40d87f:	imul   edx,ebx
  40d882:	cmp    edx,edi
  40d884:	jbe    0x40a7b9
  40d88a:	pop    ebx
  40d88b:	pop    edi
  40d88c:	leave  
  40d88d:	ret    0x8
  40d890:	push   ebp
  40d891:	mov    ebp,esp
  40d893:	sub    esp,0x70
  40d896:	or     DWORD PTR ds:0x42fce9,0x42e11c
  40d8a0:	push   0x41b2bc
  40d8a5:	sbb    DWORD PTR ds:0x42fd76,0x42fcf1
  40d8af:	call   DWORD PTR ds:0x42e497
  40d8b5:	and    DWORD PTR ds:0x42fcfd,0x42fd82
  40d8bf:	test   ax,ax
  40d8c2:	jne    0x40d8d9
  40d8c8:	xor    eax,eax
  40d8ca:	mov    DWORD PTR ds:0x42e134,0x1bc4
  40d8d4:	jmp    0x40e0cc
  40d8d9:	adc    DWORD PTR ds:0x42e124,0x42fce9
  40d8e3:	push   0x41b2d4
  40d8e8:	call   DWORD PTR ds:0x42e50f
  40d8ee:	sbb    DWORD PTR ds:0x42e6fb,0x42fd72
  40d8f8:	test   ax,ax
  40d8fb:	mov    DWORD PTR ds:0x42fcf5,0x74f8
  40d905:	je     0x40d8c8
  40d90b:	call   DWORD PTR ds:0x42e457
  40d911:	cdq    
  40d912:	mov    DWORD PTR ds:0x42fd05,0x1251
  40d91c:	cmp    eax,0x45767589
  40d921:	jne    0x40d98c
  40d927:	mov    DWORD PTR ds:0x42fd76,0x294f
  40d931:	cmp    edx,0x87676567
  40d937:	jne    0x40d98c
  40d93d:	push   0x0
  40d93f:	push   0x0
  40d941:	adc    DWORD PTR ds:0x42e124,0x42e6f7
  40d94b:	push   0x9879874
  40d950:	push   0x45
  40d952:	push   0x1
  40d954:	push   0x545
  40d959:	push   0x87686787
  40d95e:	xor    DWORD PTR ds:0x42fd6e,0x75b9
  40d968:	push   0x9879877
  40d96d:	or     DWORD PTR ds:0x42fced,0x42e118
  40d977:	call   DWORD PTR ds:0x42e49f
  40d97d:	mov    DWORD PTR ds:0x42e11c,0x1611
  40d987:	jmp    0x40e0cc
  40d98c:	push   0x41b2e0
  40d991:	call   DWORD PTR ds:0x42e38f
  40d997:	test   eax,eax
  40d999:	je     0x40d9cd
  40d99f:	sbb    DWORD PTR ds:0x42fd01,0x42e134
  40d9a9:	push   0x41b314
  40d9ae:	and    DWORD PTR ds:0x42fced,0x2b9d
  40d9b8:	call   DWORD PTR ds:0x42e2fb
  40d9be:	mov    DWORD PTR ds:0x42fd8a,0x47ee
  40d9c8:	jmp    0x40e0cc
  40d9cd:	push   ebx
  40d9ce:	mov    ebx,0xf89c8531
  40d9d3:	add    DWORD PTR ds:0x42e118,ebx
  40d9d9:	mov    DWORD PTR [ebp-0x8],ebx
  40d9dc:	and    DWORD PTR ds:0x42fcf5,0x0
  40d9e6:	mov    ecx,DWORD PTR ds:0x42fcf5
  40d9ec:	inc    ecx
  40d9ed:	mov    DWORD PTR ds:0x42fcf5,ecx
  40d9f3:	cmp    DWORD PTR ds:0x42fcf5,0xf
  40d9fa:	jne    0x40da20
  40da00:	push   0x1990
  40da05:	push   0x7f06
  40da0a:	push   0x857e
  40da0f:	push   DWORD PTR [ebp-0x28]
  40da12:	push   0x42e18d
  40da17:	push   DWORD PTR [ebp-0x10]
  40da1a:	call   DWORD PTR ds:0x42e54f
  40da20:	cmp    DWORD PTR ds:0x42fcf5,0xe
  40da27:	jne    0x40da3a
  40da2d:	mov    ecx,DWORD PTR ds:0x42fcf5
  40da33:	inc    ecx
  40da34:	mov    DWORD PTR ds:0x42fcf5,ecx
  40da3a:	cmp    DWORD PTR ds:0x42fcf5,0x1d
  40da41:	jb     0x40d9e6
  40da47:	add    DWORD PTR ds:0x42e703,0x406c
  40da51:	mov    DWORD PTR [ebp-0x4],0xf89c8530
  40da58:	lea    eax,[ebp-0x18]
  40da5b:	adc    DWORD PTR ds:0x42e6f3,ecx
  40da61:	mov    DWORD PTR [ebp-0x14],eax
  40da64:	adc    DWORD PTR ds:0x42fcd1,0x42e11c
  40da6e:	lea    eax,[ebp-0x1c]
  40da71:	mov    DWORD PTR ds:0x42fd05,0x1a
  40da7b:	cmp    DWORD PTR ds:0x42fd05,0x0
  40da82:	je     0x40dbc3
  40da88:	cmp    DWORD PTR ds:0x42fd05,0x1c
  40da8f:	jne    0x40daa1
  40da95:	push   DWORD PTR [ebp-0x1c]
  40da98:	push   DWORD PTR [ebp-0x14]
  40da9b:	call   DWORD PTR ds:0x42e553
  40daa1:	xor    ecx,ecx
  40daa3:	add    ecx,DWORD PTR ds:0x42fd05
  40daa9:	dec    ecx
  40daaa:	mov    DWORD PTR ds:0x42fd05,ecx
  40dab0:	jmp    0x40da7b
  40dab5:	mov    DWORD PTR ds:0x42e707,0x1d
  40dabf:	cmp    DWORD PTR ds:0x42e707,0x0
  40dac6:	je     0x40dbc3
  40dacc:	cmp    DWORD PTR ds:0x42e707,0xf
  40dad3:	jne    0x40dae4
  40dad9:	push   0x1303
  40dade:	call   DWORD PTR ds:0x42e463
  40dae4:	cmp    DWORD PTR ds:0x42e707,0x10
  40daeb:	jne    0x40dafe
  40daf1:	mov    ecx,DWORD PTR ds:0x42e707
  40daf7:	dec    ecx
  40daf8:	mov    DWORD PTR ds:0x42e707,ecx
  40dafe:	mov    ecx,DWORD PTR ds:0x42e707
  40db04:	dec    ecx
  40db05:	mov    DWORD PTR ds:0x42e707,ecx
  40db0b:	jmp    0x40dabf
  40db10:	mov    DWORD PTR ds:0x42e6ff,0x14
  40db1a:	cmp    DWORD PTR ds:0x42e6ff,0x0
  40db21:	je     0x40dbc3
  40db27:	cmp    DWORD PTR ds:0x42e6ff,0x2
  40db2e:	jne    0x40db41
  40db34:	push   0x1
  40db36:	push   0x279d
  40db3b:	call   DWORD PTR ds:0x42e557
  40db41:	cmp    DWORD PTR ds:0x42e6ff,0x3
  40db48:	jne    0x40db5b
  40db4e:	mov    ecx,DWORD PTR ds:0x42e6ff
  40db54:	dec    ecx
  40db55:	mov    DWORD PTR ds:0x42e6ff,ecx
  40db5b:	mov    ecx,DWORD PTR ds:0x42e6ff
  40db61:	dec    ecx
  40db62:	mov    DWORD PTR ds:0x42e6ff,ecx
  40db68:	jmp    0x40db1a
  40db6d:	mov    DWORD PTR ds:0x42fd76,0x1a
  40db77:	cmp    DWORD PTR ds:0x42fd76,0x0
  40db7e:	je     0x40dbc3
  40db84:	cmp    DWORD PTR ds:0x42fd76,0x6
  40db8b:	jne    0x40db97
  40db91:	call   DWORD PTR ds:0x42e55b
  40db97:	cmp    DWORD PTR ds:0x42fd76,0x7
  40db9e:	jne    0x40dbb1
  40dba4:	mov    ecx,DWORD PTR ds:0x42fd76
  40dbaa:	dec    ecx
  40dbab:	mov    DWORD PTR ds:0x42fd76,ecx
  40dbb1:	mov    ecx,DWORD PTR ds:0x42fd76
  40dbb7:	dec    ecx
  40dbb8:	mov    DWORD PTR ds:0x42fd76,ecx
  40dbbe:	jmp    0x40db77
  40dbc3:	mov    DWORD PTR [ebp-0xc],eax
  40dbc6:	or     ecx,eax
  40dbc8:	mov    eax,ds:0x41b1a8
  40dbcd:	or     DWORD PTR ds:0x42e707,edx
  40dbd3:	mov    eax,DWORD PTR [eax+0x1c8]
  40dbd9:	or     DWORD PTR ds:0x42e713,edx
  40dbdf:	mov    eax,DWORD PTR [eax]
  40dbe1:	mov    ecx,DWORD PTR [ebp-0xc]
  40dbe4:	push   esi
  40dbe5:	mov    esi,0x7510855
  40dbea:	sub    DWORD PTR ds:0x42fd7e,0x662
  40dbf4:	xor    eax,esi
  40dbf6:	push   edi
  40dbf7:	and    DWORD PTR ds:0x42fce5,0x0
  40dc01:	jmp    0x40dc13
  40dc06:	mov    edi,DWORD PTR ds:0x42fce5
  40dc0c:	inc    edi
  40dc0d:	mov    DWORD PTR ds:0x42fce5,edi
  40dc13:	cmp    DWORD PTR ds:0x42fce5,0x1d
  40dc1a:	jae    0x40dc4a
  40dc20:	cmp    DWORD PTR ds:0x42fce5,0x2b
  40dc27:	jne    0x40dc45
  40dc2d:	push   0x3dd1
  40dc32:	push   DWORD PTR [ebp-0x24]
  40dc35:	push   0x2bbe
  40dc3a:	push   0x75d2
  40dc3f:	call   DWORD PTR ds:0x42e467
  40dc45:	jmp    0x40dc06
  40dc4a:	mov    edi,0x32729c
  40dc4f:	add    eax,edi
  40dc51:	mov    DWORD PTR [ecx],eax
  40dc53:	mov    DWORD PTR ds:0x42e128,edx
  40dc59:	mov    eax,ds:0x41b418
  40dc5e:	mov    DWORD PTR ds:0x42fd01,0x477b
  40dc68:	cmp    eax,0x23c13046
  40dc6d:	mov    eax,DWORD PTR [ebp-0x4]
  40dc70:	mov    DWORD PTR ds:0x42fd09,0x45bc
  40dc7a:	je     0x40dd06
  40dc80:	mov    DWORD PTR ds:0x42e6f7,0x1c
  40dc8a:	cmp    DWORD PTR ds:0x42e6f7,0x0
  40dc91:	je     0x40dcd6
  40dc97:	cmp    DWORD PTR ds:0x42e6f7,0xa
  40dc9e:	jne    0x40dcaa
  40dca4:	call   DWORD PTR ds:0x42e46b
  40dcaa:	cmp    DWORD PTR ds:0x42e6f7,0xb
  40dcb1:	jne    0x40dcc4
  40dcb7:	mov    ecx,DWORD PTR ds:0x42e6f7
  40dcbd:	dec    ecx
  40dcbe:	mov    DWORD PTR ds:0x42e6f7,ecx
  40dcc4:	mov    ecx,DWORD PTR ds:0x42e6f7
  40dcca:	dec    ecx
  40dccb:	mov    DWORD PTR ds:0x42e6f7,ecx
  40dcd1:	jmp    0x40dc8a
  40dcd6:	mov    ecx,DWORD PTR [ebp-0x8]
  40dcd9:	sbb    DWORD PTR ds:0x42fd82,0x42e12c
  40dce3:	xor    eax,esi
  40dce5:	and    DWORD PTR ds:0x42fd82,0x42e124
  40dcef:	add    eax,edi
  40dcf1:	imul   eax,ecx
  40dcf4:	mov    DWORD PTR [ebp-0x8],eax
  40dcf7:	mov    DWORD PTR ds:0x42fcd1,0x365a
  40dd01:	jmp    0x40ddd3
  40dd06:	sbb    DWORD PTR ds:0x42e118,edx
  40dd0c:	xor    eax,esi
  40dd0e:	add    eax,edi
  40dd10:	and    DWORD PTR ds:0x42fd72,0x0
  40dd1a:	jmp    0x40dd2c
  40dd1f:	mov    ecx,DWORD PTR ds:0x42fd72
  40dd25:	inc    ecx
  40dd26:	mov    DWORD PTR ds:0x42fd72,ecx
  40dd2c:	cmp    DWORD PTR ds:0x42fd72,0x12
  40dd33:	jae    0x40dd6e
  40dd39:	cmp    DWORD PTR ds:0x42fd72,0x6
  40dd40:	jne    0x40dd4f
  40dd46:	push   DWORD PTR [ebp-0x24]
  40dd49:	call   DWORD PTR ds:0x42e46f
  40dd4f:	cmp    DWORD PTR ds:0x42fd72,0x5
  40dd56:	jne    0x40dd69
  40dd5c:	mov    ecx,DWORD PTR ds:0x42fd72
  40dd62:	inc    ecx
  40dd63:	mov    DWORD PTR ds:0x42fd72,ecx
  40dd69:	jmp    0x40dd1f
  40dd6e:	mov    ds:0x41b2b8,eax
  40dd73:	mov    eax,DWORD PTR [ebp-0x8]
  40dd76:	or     DWORD PTR ds:0x42fd0d,edx
  40dd7c:	xor    eax,esi
  40dd7e:	sub    DWORD PTR ds:0x42e130,edx
  40dd84:	add    eax,edi
  40dd86:	mov    ds:0x41b418,eax
  40dd8b:	mov    eax,DWORD PTR [ebp-0x4]
  40dd8e:	mov    ecx,DWORD PTR ds:0x41b2b8
  40dd94:	xor    eax,esi
  40dd96:	add    eax,edi
  40dd98:	mov    DWORD PTR ds:0x42fd09,0x3e5c
  40dda2:	cmp    ecx,eax
  40dda4:	jne    0x40ddd3
  40ddaa:	sub    DWORD PTR ds:0x42fd86,0x42fcfd
  40ddb4:	push   DWORD PTR [ebp-0x4]
  40ddb7:	and    DWORD PTR ds:0x42e6f3,0x4c1c
  40ddc1:	push   DWORD PTR [ebp-0x8]
  40ddc4:	adc    DWORD PTR ds:0x42e6ff,0x42fd8a
  40ddce:	call   0x40e0d0
  40ddd3:	mov    eax,ds:0x41b1a8
  40ddd8:	sbb    edx,DWORD PTR ds:0x42e6eb
  40ddde:	mov    eax,DWORD PTR [eax+0x18c]
  40dde4:	and    DWORD PTR ds:0x42fce5,0x0
  40ddee:	mov    edx,DWORD PTR ds:0x42fce5
  40ddf4:	inc    edx
  40ddf5:	mov    DWORD PTR ds:0x42fce5,edx
  40ddfb:	cmp    DWORD PTR ds:0x42fce5,0x18
  40de02:	jne    0x40de18
  40de08:	push   0x42fd09
  40de0d:	push   0x42e26d
  40de12:	call   DWORD PTR ds:0x42e473
  40de18:	cmp    DWORD PTR ds:0x42fce5,0x13
  40de1f:	jb     0x40ddee
  40de25:	mov    ecx,DWORD PTR ds:0x42fd21
  40de2b:	mov    ecx,DWORD PTR [ecx]
  40de2d:	or     DWORD PTR ds:0x42fcfd,ecx
  40de33:	mov    eax,DWORD PTR [eax]
  40de35:	mov    DWORD PTR ds:0x42fcf5,0x11
  40de3f:	cmp    DWORD PTR ds:0x42fcf5,0x0
  40de46:	je     0x40de77
  40de4c:	cmp    DWORD PTR ds:0x42fcf5,0x19
  40de53:	jne    0x40de65
  40de59:	push   DWORD PTR [ebp-0xc]
  40de5c:	push   DWORD PTR [ebp-0x10]
  40de5f:	call   DWORD PTR ds:0x42e55f
  40de65:	mov    edx,DWORD PTR ds:0x42fcf5
  40de6b:	dec    edx
  40de6c:	mov    DWORD PTR ds:0x42fcf5,edx
  40de72:	jmp    0x40de3f
  40de77:	mov    DWORD PTR [ebp-0x20],eax
  40de7a:	mov    eax,0xf89c853d
  40de7f:	mov    DWORD PTR [ebp-0x24],eax
  40de82:	mov    DWORD PTR [ebp-0x24],eax
  40de85:	mov    DWORD PTR [ebp-0x24],eax
  40de88:	mov    DWORD PTR [ebp-0xc],ebx
  40de8b:	mov    DWORD PTR [ebp-0x24],eax
  40de8e:	mov    DWORD PTR [ebp-0x24],0xf89c8539
  40de95:	mov    ebx,DWORD PTR [ebp-0x8]
  40de98:	mov    ecx,DWORD PTR [ebp-0x4]
  40de9b:	mov    edx,DWORD PTR [ebp-0x4]
  40de9e:	xor    edx,esi
  40dea0:	xor    ecx,esi
  40dea2:	add    ecx,edx
  40dea4:	mov    edx,DWORD PTR [ebp-0x4]
  40dea7:	xor    ebx,esi
  40dea9:	xor    edx,esi
  40deab:	add    ebx,edi
  40dead:	lea    ecx,[ecx+edx*1+0x9757d4]
  40deb4:	cmp    ebx,ecx
  40deb6:	ja     0x40df17
  40debc:	mov    eax,DWORD PTR [ebp-0x4]
  40debf:	xor    eax,esi
  40dec1:	lea    eax,[eax+ebx*1+0x32729c]
  40dec8:	push   eax
  40dec9:	mov    eax,DWORD PTR [ebp-0xc]
  40decc:	xor    eax,esi
  40dece:	lea    eax,[ebp+eax*1+0x3272a4]
  40ded5:	push   eax
  40ded6:	mov    eax,ds:0x41b1a8
  40dedb:	push   DWORD PTR [eax+0x1bc]
  40dee1:	call   0x402976
  40dee6:	mov    eax,DWORD PTR [ebp-0x4]
  40dee9:	xor    eax,esi
  40deeb:	lea    ebx,[ebx+eax*1+0x32729c]
  40def2:	mov    eax,DWORD PTR [ebp-0x4]
  40def5:	mov    ecx,DWORD PTR [ebp-0x4]
  40def8:	xor    ecx,esi
  40defa:	xor    eax,esi
  40defc:	add    eax,ecx
  40defe:	mov    ecx,DWORD PTR [ebp-0x4]
  40df01:	xor    ecx,esi
  40df03:	lea    eax,[eax+ecx*1+0x9757d4]
  40df0a:	cmp    ebx,eax
  40df0c:	jbe    0x40debc
  40df12:	mov    eax,0xf89c853d
  40df17:	mov    ecx,DWORD PTR [ebp+0xc]
  40df1a:	mov    DWORD PTR ds:0x41b02c,ecx
  40df20:	mov    ecx,DWORD PTR [ebp+0x10]
  40df23:	mov    DWORD PTR ds:0x41b280,ecx
  40df29:	mov    ecx,DWORD PTR ds:0x41b02c
  40df2f:	mov    edx,DWORD PTR [ebp-0x14]
  40df32:	sub    ecx,edi
  40df34:	xor    ecx,esi
  40df36:	mov    DWORD PTR [edx],ecx
  40df38:	mov    ecx,DWORD PTR [ebp-0x18]
  40df3b:	cmp    ecx,0xf89c8530
  40df41:	je     0x40df9e
  40df47:	mov    ecx,DWORD PTR [ebp-0x8]
  40df4a:	mov    edx,DWORD PTR [ebp-0x1c]
  40df4d:	xor    ecx,esi
  40df4f:	add    ecx,edi
  40df51:	cmp    ecx,edx
  40df53:	je     0x40df9e
  40df59:	mov    eax,ds:0x41b1a8
  40df5e:	mov    eax,DWORD PTR [eax+0x194]
  40df64:	mov    ecx,DWORD PTR [eax]
  40df66:	mov    eax,DWORD PTR [ecx+0x3c]
  40df69:	push   DWORD PTR ds:0x41b280
  40df6f:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  40df73:	push   DWORD PTR ds:0x41b02c
  40df79:	add    eax,ecx
  40df7b:	mov    ecx,DWORD PTR ds:0x41b1a8
  40df81:	mov    ecx,DWORD PTR [ecx+0x194]
  40df87:	push   DWORD PTR [ecx]
  40df89:	call   eax
  40df8b:	mov    ecx,DWORD PTR ds:0x41b1a8
  40df91:	mov    ecx,DWORD PTR [ecx+0x1cc]
  40df97:	mov    DWORD PTR [ecx],eax
  40df99:	jmp    0x40e0ae
  40df9e:	mov    ecx,DWORD PTR [ebp-0x8]
  40dfa1:	mov    edx,DWORD PTR [ebp-0x20]
  40dfa4:	xor    ecx,esi
  40dfa6:	add    ecx,edi
  40dfa8:	cmp    ecx,edx
  40dfaa:	jne    0x40e091
  40dfb0:	mov    ecx,DWORD PTR [ebp-0x8]
  40dfb3:	xor    ecx,esi
  40dfb5:	add    ecx,edi
  40dfb7:	mov    DWORD PTR ds:0x41b22c,ecx
  40dfbd:	mov    ecx,DWORD PTR [ebp-0x8]
  40dfc0:	xor    ecx,esi
  40dfc2:	add    ecx,edi
  40dfc4:	mov    DWORD PTR ds:0x41b224,ecx
  40dfca:	mov    ecx,DWORD PTR [ebp-0x4]
  40dfcd:	mov    DWORD PTR [ebp-0xc],ecx
  40dfd0:	mov    ecx,DWORD PTR [ebp-0x8]
  40dfd3:	mov    DWORD PTR [ebp+0xc],ecx
  40dfd6:	mov    ecx,DWORD PTR [ebp+0xc]
  40dfd9:	xor    ecx,esi
  40dfdb:	add    ecx,edi
  40dfdd:	mov    DWORD PTR [ebp+0xc],ecx
  40dfe0:	mov    ecx,DWORD PTR ds:0x41b028
  40dfe6:	mov    ecx,DWORD PTR [ecx]
  40dfe8:	mov    DWORD PTR [ebp+0xc],ecx
  40dfeb:	mov    ecx,DWORD PTR ds:0x41b230
  40dff1:	mov    ecx,DWORD PTR [ecx]
  40dff3:	mov    DWORD PTR [ebp-0x14],ecx
  40dff6:	mov    DWORD PTR [ebp+0x10],0xf89c8731
  40dffd:	mov    ecx,DWORD PTR [ebp+0x10]
  40e000:	xor    ecx,esi
  40e002:	add    ecx,edi
  40e004:	mov    DWORD PTR [ebp+0x10],ecx
  40e007:	mov    ecx,DWORD PTR ds:0x41b1a8
  40e00d:	mov    DWORD PTR [ebp+0x10],ecx
  40e010:	mov    ecx,DWORD PTR [ebp+0xc]
  40e013:	mov    DWORD PTR [ebp+0xc],ecx
  40e016:	mov    ecx,DWORD PTR [ebp+0xc]
  40e019:	push   0x4
  40e01b:	pop    edx
  40e01c:	sub    edx,ecx
  40e01e:	add    edx,DWORD PTR [ebp-0x14]
  40e021:	mov    DWORD PTR [ebp-0x24],0xf89c85f1
  40e028:	mov    DWORD PTR [ebp+0x10],edx
  40e02b:	mov    DWORD PTR [ebp-0x70],eax
  40e02e:	mov    eax,DWORD PTR [ebp+0xc]
  40e031:	mov    DWORD PTR [ebp-0x6c],eax
  40e034:	mov    eax,DWORD PTR [ebp+0x10]
  40e037:	mov    DWORD PTR [ebp-0x68],eax
  40e03a:	mov    eax,DWORD PTR [ebp-0x24]
  40e03d:	xor    eax,esi
  40e03f:	add    eax,edi
  40e041:	mov    DWORD PTR [ebp-0x64],eax
  40e044:	lea    eax,[ebp-0x2c]
  40e047:	mov    DWORD PTR [ebp-0x60],eax
  40e04a:	mov    eax,DWORD PTR [ebp-0x70]
  40e04d:	xor    eax,esi
  40e04f:	add    eax,edi
  40e051:	mov    DWORD PTR [ebp-0x70],eax
  40e054:	lea    eax,[ebp-0x70]
  40e057:	push   eax
  40e058:	mov    eax,DWORD PTR [ebp-0xc]
  40e05b:	xor    eax,esi
  40e05d:	add    eax,edi
  40e05f:	push   eax
  40e060:	mov    eax,ds:0x41b1c8
  40e065:	push   0x41b11e
  40e06a:	push   DWORD PTR [eax]
  40e06c:	call   0x4120bb
  40e071:	xor    esi,esi
  40e073:	mov    eax,DWORD PTR [ebp+0x10]
  40e076:	sub    eax,esi
  40e078:	push   eax
  40e079:	mov    eax,DWORD PTR [ebp+0xc]
  40e07c:	add    eax,esi
  40e07e:	push   eax
  40e07f:	call   0x4099c9
  40e084:	inc    esi
  40e085:	cmp    esi,0x52
  40e088:	jb     0x40e073
  40e08e:	mov    eax,DWORD PTR [ebp-0xc]
  40e091:	call   0x406acb
  40e096:	lea    eax,[ebp+0x4]
  40e099:	mov    DWORD PTR [ebp-0x28],eax
  40e09c:	mov    eax,DWORD PTR [ebp-0x10]
  40e09f:	mov    eax,DWORD PTR [ebp-0x4]
  40e0a2:	push   DWORD PTR [ebp-0x8]
  40e0a5:	lea    eax,[ebp-0x28]
  40e0a8:	push   eax
  40e0a9:	call   0x410b90
  40e0ae:	mov    eax,ds:0x41b1a8
  40e0b3:	push   0x4
  40e0b5:	add    eax,0x1cc
  40e0ba:	push   eax
  40e0bb:	lea    eax,[ebp-0x10]
  40e0be:	push   eax
  40e0bf:	call   0x402976
  40e0c4:	mov    eax,DWORD PTR [ebp-0x10]
  40e0c7:	mov    eax,DWORD PTR [eax]
  40e0c9:	pop    edi
  40e0ca:	pop    esi
  40e0cb:	pop    ebx
  40e0cc:	leave  
  40e0cd:	ret    0xc
  40e0d0:	push   ebp
  40e0d1:	mov    ebp,esp
  40e0d3:	sub    esp,0x24
  40e0d6:	mov    eax,ds:0x41b1a8
  40e0db:	mov    eax,DWORD PTR [eax+0x198]
  40e0e1:	mov    DWORD PTR [ebp-0x8],eax
  40e0e4:	adc    ecx,eax
  40e0e6:	mov    eax,DWORD PTR [ebp+0x8]
  40e0e9:	mov    ecx,DWORD PTR [ebp-0x8]
  40e0ec:	xor    DWORD PTR ds:0x42fce9,0x42fcd5
  40e0f6:	push   ebx
  40e0f7:	push   esi
  40e0f8:	mov    esi,0x7510855
  40e0fd:	xor    eax,esi
  40e0ff:	not    ebx
  40e101:	push   edi
  40e102:	mov    edi,0x32729c
  40e107:	add    eax,edi
  40e109:	sbb    ebx,DWORD PTR ds:0x42fce9
  40e10f:	jmp    0x40e279
  40e114:	sub    dl,0xce
  40e117:	gs push 0x61
  40e11a:	mov    bh,0xf1
  40e11c:	fstp   DWORD PTR [ecx-0x27932fbc]
  40e122:	into   
  40e123:	das    
  40e124:	push   0xc37070a6
  40e129:	jg     0x40e19b
  40e12b:	jo     0x40e10c
  40e12d:	inc    edx
  40e12e:	pop    ecx
  40e12f:	call   0x27cf518b
  40e134:	mov    bh,0xc8
  40e136:	(bad)  
  40e137:	jg     0x40e0bb
  40e139:	jnp    0x40e137
  40e13b:	mov    esp,0xa8b768fd
  40e140:	repnz mov eax,0xf40667fb
  40e146:	or     DWORD PTR [eax],esi
  40e148:	xchg   edx,eax
  40e149:	push   ebx
  40e14a:	add    DWORD PTR [esi+0x2b6ad25f],ecx
  40e150:	test   al,0x16
  40e152:	repnz dec DWORD PTR [ebx+ecx*2]
  40e156:	push   esp
  40e157:	stos   DWORD PTR es:[edi],eax
  40e158:	or     bh,ch
  40e15a:	cmp    dh,0xeb
  40e15d:	adc    bh,bl
  40e15f:	xlat   BYTE PTR ds:[ebx]
  40e160:	sbb    eax,0xe66ec3b4
  40e165:	in     eax,dx
  40e166:	adc    al,0x45
  40e168:	test   DWORD PTR [ebx+0x4c10f0ab],ecx
  40e16e:	test   eax,0x5f1aa59b
  40e173:	and    BYTE PTR [esi-0x3c],0xb2
  40e177:	dec    esi
  40e178:	push   edi
  40e179:	mov    esi,0x5ebf727a
  40e17e:	push   edx
  40e17f:	pushf  
  40e180:	leave  
  40e181:	xchg   edx,eax
  40e182:	mov    ds:0x60ad6f4c,eax
  40e187:	dec    ebp
  40e188:	test   al,0xa3
  40e18a:	scas   al,BYTE PTR es:[edi]
  40e18b:	pop    ss
  40e18c:	jg     0x40e1fe
  40e18e:	cld    
  40e18f:	push   eax
  40e190:	jle    0x40e1f6
  40e192:	fsub   DWORD PTR [esi-0x77]
  40e195:	jmp    0x11ae8652
  40e19a:	sbb    cl,BYTE PTR [edx*1+0x18c44dc1]
  40e1a1:	inc    esi
  40e1a2:	aad    0xd7
  40e1a4:	fstp   TBYTE PTR [ecx]
  40e1a6:	(bad)  
  40e1a8:	xchg   BYTE PTR [ecx+0xd23c994],bl
  40e1ae:	push   0x403e044
  40e1b3:	xchg   esp,eax
  40e1b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e1b5:	mov    dl,0x41
  40e1b7:	inc    esp
  40e1b8:	cwde   
  40e1b9:	add    al,0x9e
  40e1bb:	inc    ebp
  40e1bc:	in     eax,0xc9
  40e1be:	jl     0x40e1dc
  40e1c0:	ds inc eax
  40e1c2:	pop    esi
  40e1c3:	nop
  40e1c4:	lock or BYTE PTR [ecx+edx*8],0xe8
  40e1c9:	mov    ebp,DWORD PTR [edi]
  40e1cb:	push   ecx
  40e1cc:	pop    es
  40e1cd:	in     al,dx
  40e1ce:	adc    al,0x82
  40e1d0:	or     esp,DWORD PTR [ebx-0x15]
  40e1d3:	inc    edi
  40e1d4:	popf   
  40e1d5:	and    BYTE PTR [ecx+esi*8-0x4c],cl
  40e1d9:	fwait
  40e1da:	add    esp,esp
  40e1dc:	sub    BYTE PTR [ecx+0x1e3e218c],ah
  40e1e2:	test   DWORD PTR [eax+0xd],esp
  40e1e5:	push   ecx
  40e1e6:	dec    eax
  40e1e7:	rol    esi,0x92
  40e1ea:	bound  eax,QWORD PTR [eax-0x29]
  40e1ed:	nop
  40e1ee:	call   0x465d:0x28d6bcc5
  40e1f5:	out    dx,eax
  40e1f6:	call   0x2047:0xfb2412a0
  40e1fd:	cld    
  40e1fe:	jnp    0x40e219
  40e200:	js     0x40e248
  40e202:	mov    dh,0xdf
  40e204:	dec    esi
  40e205:	repz adc esi,DWORD PTR [ecx+ebp*4+0x1a7f063c]
  40e20d:	fdivr  DWORD PTR [eax+0x4795c3b6]
  40e213:	call   0x5c3e:0x8ad0a5dc
  40e21a:	test   al,0x49
  40e21c:	cmc    
  40e21d:	imul   ebp,DWORD PTR [edi+edi*1-0x6f23b3c8],0x9e8dcb9
  40e228:	mov    ebp,DWORD PTR [edx]
  40e22a:	loop   0x40e237
  40e22c:	loope  0x40e278
  40e22e:	pop    esi
  40e22f:	nop
  40e230:	add    al,bh
  40e232:	or     al,0x4f
  40e234:	push   ds
  40e235:	ret    
  40e236:	and    cl,BYTE PTR [ecx-0x73e7aa2]
  40e23c:	dec    edx
  40e23d:	cmp    BYTE PTR [esi-0x5aa09b3d],0x2a
  40e244:	mov    al,0x83
  40e246:	dec    esi
  40e247:	mov    al,0xe6
  40e249:	lds    ebp,FWORD PTR [ebx+0x0]
  40e24c:	jae    0x40e262
  40e24e:	mov    ebx,0xefc7af6a
  40e253:	leave  
  40e254:	and    DWORD PTR [ebx-0x32],ebp
  40e257:	jb     0x40e1f4
  40e259:	jbe    0x40e214
  40e25b:	retf   
  40e25c:	out    0x31,al
  40e25e:	repnz (bad) 
  40e260:	dec    ebx
  40e261:	repnz pusha 
  40e263:	pop    es
  40e264:	repnz inc eax
  40e266:	jge    0x40e233
  40e268:	cdq    
  40e269:	retf   0x1cff
  40e26c:	jmp    0x761a:0x4618e60b
  40e273:	sub    eax,0x8dfefa5e
  40e278:	lock mov DWORD PTR [ecx],eax
  40e27b:	lea    eax,[ebp-0x4]
  40e27e:	and    DWORD PTR ds:0x42fcfd,0x0
  40e288:	mov    ecx,DWORD PTR ds:0x42fcfd
  40e28e:	inc    ecx
  40e28f:	mov    DWORD PTR ds:0x42fcfd,ecx
  40e295:	cmp    DWORD PTR ds:0x42fcfd,0x8
  40e29c:	jne    0x40e2b0
  40e2a2:	push   DWORD PTR [ebp-0x14]
  40e2a5:	push   0x5961
  40e2aa:	call   DWORD PTR ds:0x42e563
  40e2b0:	cmp    DWORD PTR ds:0x42fcfd,0x7
  40e2b7:	jne    0x40e2ca
  40e2bd:	mov    ecx,DWORD PTR ds:0x42fcfd
  40e2c3:	inc    ecx
  40e2c4:	mov    DWORD PTR ds:0x42fcfd,ecx
  40e2ca:	cmp    DWORD PTR ds:0x42fcfd,0x15
  40e2d1:	jb     0x40e288
  40e2d7:	and    DWORD PTR ds:0x42fd6e,0x0
  40e2e1:	jmp    0x40e2f3
  40e2e6:	mov    ecx,DWORD PTR ds:0x42fd6e
  40e2ec:	inc    ecx
  40e2ed:	mov    DWORD PTR ds:0x42fd6e,ecx
  40e2f3:	cmp    DWORD PTR ds:0x42fd6e,0x1b
  40e2fa:	jae    0x40e34c
  40e300:	cmp    DWORD PTR ds:0x42fd6e,0x9
  40e307:	jne    0x40e31b
  40e30d:	push   DWORD PTR [ebp-0x28]
  40e310:	push   0x42fd01
  40e315:	call   DWORD PTR ds:0x42e477
  40e31b:	cmp    DWORD PTR ds:0x42fd6e,0x8
  40e322:	jne    0x40e335
  40e328:	mov    ecx,DWORD PTR ds:0x42fd6e
  40e32e:	inc    ecx
  40e32f:	mov    DWORD PTR ds:0x42fd6e,ecx
  40e335:	jmp    0x40e2e6
  40e33a:	mov    ebx,DWORD PTR ds:0x42e794
  40e340:	mov    ecx,DWORD PTR ds:0x42e79c
  40e346:	sub    ebx,ecx
  40e348:	imul   ebx,DWORD PTR [ebx+ecx*1]
  40e34c:	mov    DWORD PTR [ebp-0x10],eax
  40e34f:	sub    ecx,ebx
  40e351:	mov    eax,DWORD PTR [ebp+0x8]
  40e354:	and    ebx,ecx
  40e356:	mov    ecx,DWORD PTR [ebp-0x10]
  40e359:	sbb    DWORD PTR ds:0x42fd72,ecx
  40e35f:	xor    eax,esi
  40e361:	add    eax,edi
  40e363:	mov    DWORD PTR [ecx],eax
  40e365:	jmp    0x40e4cf
  40e36a:	icebp  
  40e36b:	ja     0x40e334
  40e36d:	pop    ds
  40e36e:	inc    ecx
  40e36f:	scas   eax,DWORD PTR es:[edi]
  40e370:	icebp  
  40e371:	jno    0x40e314
  40e373:	push   edi
  40e374:	inc    eax
  40e375:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e376:	aad    0x30
  40e378:	jle    0x40e36b
  40e37a:	cmp    esp,DWORD PTR [eax+esi*2+0x707fc370]
  40e381:	jo     0x40e380
  40e383:	sub    DWORD PTR [ebx],eax
  40e385:	fld    DWORD PTR [edx-0x232f857]
  40e38b:	ss pop ecx
  40e38d:	arpl   WORD PTR [esi+0xf571577],bp
  40e393:	jb     0x40e31a
  40e395:	std    
  40e396:	or     BYTE PTR [esi+0x5a],0x3f
  40e39a:	dec    edx
  40e39b:	scas   al,BYTE PTR es:[edi]
  40e39c:	rcr    cl,0xb2
  40e39f:	pop    edx
  40e3a0:	sbb    bl,BYTE PTR [eax+ecx*4]
  40e3a3:	push   esi
  40e3a4:	sub    DWORD PTR [edx-0x3cfa633d],0xffffffd0
  40e3ab:	test   bl,al
  40e3ad:	xor    DWORD PTR [eax],eax
  40e3af:	fucomip st,st(7)
  40e3b1:	dec    esi
  40e3b2:	test   al,0x53
  40e3b4:	rcr    DWORD PTR [ebx+0x13],1
  40e3b7:	test   cl,bl
  40e3b9:	iret   
  40e3ba:	mov    ?,WORD PTR [ebx]
  40e3bc:	mov    ecx,0x82e8f76a
  40e3c1:	sub    cl,dl
  40e3c3:	pop    ss
  40e3c4:	push   ds
  40e3c5:	mov    bl,0x92
  40e3c7:	xor    eax,esi
  40e3c9:	add    esi,ecx
  40e3cb:	das    
  40e3cc:	test   BYTE PTR [edx-0x3c],dl
  40e3cf:	pushf  
  40e3d0:	jne    0x40e3ba
  40e3d2:	repnz mov bh,0x43
  40e3d5:	outs   dx,DWORD PTR ds:[esi]
  40e3d6:	stc    
  40e3d7:	fwait
  40e3d8:	in     al,dx
  40e3d9:	test   eax,0x269bad68
  40e3de:	rcr    BYTE PTR [ebp+0x11871c6e],0x9c
  40e3e5:	mov    BYTE PTR [ebx],bl
  40e3e7:	aam    0xc9
  40e3e9:	mov    al,ds:0x279fad21
  40e3ee:	push   ss
  40e3ef:	cdq    
  40e3f0:	jmp    0xd007:0xed703e9
  40e3f7:	int    0xb1
  40e3f9:	jo     0x40e3f6
  40e3fb:	mov    edx,DWORD PTR es:[edi]
  40e3fe:	cmp    BYTE PTR [ebp-0x504074f9],dh
  40e404:	clc    
  40e405:	cmp    bl,BYTE PTR es:[edi-0x7c52b3d9]
  40e40c:	sbb    esi,esp
  40e40e:	mov    ds:0x27a3cea3,eax
  40e413:	sub    BYTE PTR [esi],dh
  40e415:	push   edx
  40e416:	mov    ds:0xbbd7a79d,eax
  40e41b:	mov    dh,0xfa
  40e41d:	data16 jg 0x40e437
  40e420:	and    bl,0x0
  40e423:	ret    0x8712
  40e426:	test   eax,0xf4106c2
  40e42b:	pusha  
  40e42c:	mov    edx,0x5217d43a
  40e431:	jle    0x40e458
  40e433:	adc    BYTE PTR [edx+esi*1],ch
  40e436:	push   edi
  40e437:	daa    
  40e438:	xchg   ebp,eax
  40e439:	cwde   
  40e43a:	add    eax,0xa2132091
  40e43f:	and    ch,ch
  40e441:	addr16 inc edx
  40e443:	fcomip st,st(7)
  40e445:	enter  0x5cd1,0xaa
  40e449:	scas   eax,DWORD PTR es:[edi]
  40e44a:	popf   
  40e44b:	ja     0x40e48b
  40e44d:	in     eax,dx
  40e44e:	enter  0xce45,0x87
  40e452:	sub    BYTE PTR [edx+0x14],dl
  40e455:	jle    0x40e4a6
  40e457:	and    eax,0xaa96efcc
  40e45c:	lods   al,BYTE PTR ds:[esi]
  40e45d:	into   
  40e45e:	sbb    DWORD PTR [edi-0x56],esp
  40e461:	lods   eax,DWORD PTR ds:[esi]
  40e462:	cwde   
  40e463:	mov    ebp,0x569fb2ac
  40e468:	fnstcw WORD PTR [ebx]
  40e46a:	push   eax
  40e46b:	lods   eax,DWORD PTR ds:[esi]
  40e46c:	test   BYTE PTR [esp+esi*1+0x56381a6e],al
  40e473:	xor    BYTE PTR [eax-0xc],bh
  40e476:	out    0xb6,eax
  40e478:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e479:	sbb    al,0x43
  40e47b:	fcomi  st,st(0)
  40e47d:	in     al,dx
  40e47e:	bound  edx,QWORD PTR ds:0xfe6a12f1
  40e484:	scas   eax,DWORD PTR es:[edi]
  40e485:	adc    dl,0xa1
  40e488:	xor    al,BYTE PTR [esi]
  40e48a:	nop
  40e48b:	(bad)  
  40e48c:	retf   0x90f3
  40e48f:	lock in al,0x63
  40e492:	add    eax,0xf0cc1e57
  40e497:	mov    eax,DWORD PTR [eax+0x67]
  40e49a:	addr16 out 0xcd,eax
  40e49d:	shr    DWORD PTR [eax-0x5bd8847b],1
  40e4a3:	mov    dh,0xc5
  40e4a5:	test   eax,0x6c28c7fd
  40e4aa:	gs sub al,0x28
  40e4ad:	mov    ch,0x3e
  40e4af:	mov    ecx,0xdd04317a
  40e4b4:	push   eax
  40e4b5:	icebp  
  40e4b6:	cmc    
  40e4b7:	rcr    BYTE PTR [ecx-0x517fbe28],1
  40e4bd:	ins    BYTE PTR es:[edi],dx
  40e4be:	shl    DWORD PTR [eax],1
  40e4c0:	in     eax,dx
  40e4c1:	adc    al,0xe5
  40e4c3:	jbe    0x40e503
  40e4c5:	jle    0x40e485
  40e4c7:	out    dx,al
  40e4c8:	mov    dl,0xcc
  40e4ca:	jl     0x40e4ce
  40e4cc:	jl     0x40e497
  40e4ce:	add    edi,eax
  40e4d0:	inc    ebp
  40e4d1:	call   0xf8dd6a07
  40e4d6:	and    ebx,0x399a
  40e4dc:	lea    eax,[ebp-0x18]
  40e4df:	mov    DWORD PTR [ebp-0x24],eax
  40e4e2:	jmp    0x40e64c
  40e4e7:	ror    DWORD PTR [eax+edi*4+0x61f15519],0x74
  40e4ef:	sbb    al,BYTE PTR ds:0x565f740f
  40e4f5:	cmp    esi,DWORD PTR [edi-0x72]
  40e4f8:	mov    ds:0x7fc37070,eax
  40e4fd:	jo     0x40e56f
  40e4ff:	push   0x8
  40e501:	outs   dx,BYTE PTR ds:[esi]
  40e502:	retf   
  40e503:	cld    
  40e504:	inc    ebx
  40e505:	pop    esp
  40e506:	mov    ebx,0x9eba60fc
  40e50b:	pop    esi
  40e50c:	pusha  
  40e50d:	cmp    DWORD PTR [ebx],0x5a
  40e510:	idiv   DWORD PTR [ecx]
  40e512:	jno    0x40e53b
  40e514:	adc    BYTE PTR [ecx+0x64],dl
  40e517:	cmp    edx,0xbc7d5cb1
  40e51d:	jge    0x40e574
  40e51f:	push   ebp
  40e520:	fimul  WORD PTR [ebx]
  40e522:	jmp    0x40e4c3
  40e524:	es mov ebx,0x55a233f4
  40e52a:	sbb    ch,cl
  40e52c:	mov    ch,0x40
  40e52e:	ret    
  40e52f:	push   0x7f
  40e531:	xor    esi,DWORD PTR [ebp+0x3c60b878]
  40e537:	dec    ecx
  40e538:	je     0x40e51f
  40e53a:	(bad)  
  40e53b:	iret   
  40e53c:	retf   
  40e53d:	pop    esp
  40e53e:	push   es
  40e53f:	stos   BYTE PTR es:[edi],al
  40e540:	jns    0x40e4d7
  40e542:	ja     0x40e4e9
  40e544:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e545:	mov    al,0x8c
  40e547:	cs push ss
  40e549:	ret    0xe076
  40e54c:	jne    0x40e5b1
  40e54e:	sub    BYTE PTR [ecx-0xf175e70],dh
  40e554:	scas   eax,DWORD PTR es:[edi]
  40e555:	fst    DWORD PTR [ebp-0x38a88874]
  40e55b:	dec    esi
  40e55c:	fcom   DWORD PTR [eax+edx*8-0x7a]
  40e560:	push   0x3f775509
  40e565:	lahf   
  40e566:	outs   dx,DWORD PTR ds:[esi]
  40e567:	imul   edi,DWORD PTR [ebp+0x69],0xb
  40e56b:	int    0x71
  40e56d:	mov    eax,ds:0x5b3385ae
  40e572:	mov    ebp,0x8ff7112f
  40e577:	test   al,0x9b
  40e579:	pop    esi
  40e57a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e57b:	sbb    bh,0xfb
  40e57e:	adc    eax,0x8e9121e5
  40e583:	icebp  
  40e584:	stos   DWORD PTR es:[edi],eax
  40e585:	dec    edi
  40e586:	jg     0x40e5b8
  40e588:	cmc    
  40e589:	outs   dx,DWORD PTR ds:[esi]
  40e58a:	push   es
  40e58b:	ins    DWORD PTR es:[edi],dx
  40e58c:	ja     0x40e542
  40e58e:	jmp    0x3de70323
  40e593:	test   BYTE PTR [eax+0x6824dd2f],0x8
  40e59a:	push   edi
  40e59b:	jmp    FWORD PTR [ecx+0x78]
  40e59e:	popa   
  40e59f:	aad    0x88
  40e5a1:	imul   ebp,DWORD PTR [eax],0xc0983b82
  40e5a7:	enter  0x33c4,0x4d
  40e5ab:	jnp    0x40e5a1
  40e5ad:	sub    al,0xe5
  40e5af:	xchg   ebx,eax
  40e5b0:	sbb    edx,ebp
  40e5b2:	call   0x705e:0x82ba35f1
  40e5b9:	lods   eax,DWORD PTR ds:[esi]
  40e5ba:	imul   esi,DWORD PTR [eax],0x5a13ad2a
  40e5c0:	xor    ebx,DWORD PTR [edi]
  40e5c2:	pop    ecx
  40e5c3:	cli    
  40e5c4:	call   0x657c:0xabb33f2d
  40e5cb:	pop    esp
  40e5cc:	aas    
  40e5cd:	inc    esp
  40e5ce:	or     ebx,0xcd705927
  40e5d4:	cmp    bh,BYTE PTR [edi+0x25b1fd]
  40e5da:	(bad)  
  40e5dc:	scas   eax,DWORD PTR es:[edi]
  40e5dd:	test   DWORD PTR [ecx],0x86912606
  40e5e3:	(bad)  
  40e5e5:	fwait
  40e5e6:	out    dx,al
  40e5e7:	jnp    0x40e634
  40e5e9:	xchg   esp,eax
  40e5ea:	mov    ds:0xa017993c,al
  40e5ef:	xlat   BYTE PTR ds:[ebx]
  40e5f0:	pop    eax
  40e5f1:	iret   
  40e5f2:	(bad)  
  40e5f3:	test   BYTE PTR fs:[ebx-0x20afe1d5],bh
  40e5fa:	cld    
  40e5fb:	ins    DWORD PTR es:[edi],dx
  40e5fc:	lods   eax,DWORD PTR ds:[esi]
  40e5fd:	test   DWORD PTR [eax],ebx
  40e5ff:	(bad)  [esi]
  40e601:	idiv   DWORD PTR [ebx]
  40e603:	sub    al,al
  40e605:	sbb    BYTE PTR [ecx-0x49],al
  40e608:	addr16 nop ecx
  40e60c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e60d:	sbb    BYTE PTR [esi],dh
  40e60f:	nop
  40e610:	nop
  40e611:	cwde   
  40e612:	xchg   esp,eax
  40e613:	fistp  DWORD PTR [ebx+ebp*2]
  40e616:	mov    BYTE PTR [esi-0x9de50d7],bl
  40e61c:	mov    ebp,0x90da5d80
  40e621:	sahf   
  40e622:	add    al,0x50
  40e625:	cwde   
  40e626:	(bad)  
  40e627:	cwde   
  40e628:	inc    ebp
  40e629:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e62a:	xor    eax,0x3675b4e2
  40e62f:	dec    ebp
  40e630:	sbb    al,0xd8
  40e632:	and    al,0x20
  40e634:	es and al,0x6e
  40e637:	test   esp,eax
  40e639:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e63a:	and    al,0x88
  40e63c:	std    
  40e63d:	stos   BYTE PTR es:[edi],al
  40e63e:	dec    esi
  40e63f:	mov    cs,WORD PTR [edi+esi*4+0x64]
  40e643:	call   0xfd153bc5
  40e648:	jb     0x40e671
  40e64a:	mov    ecx,0xe8458b96
  40e64f:	and    DWORD PTR ds:0x42fd7a,0x0
  40e659:	jmp    0x40e66b
  40e65e:	mov    ebx,DWORD PTR ds:0x42fd7a
  40e664:	inc    ebx
  40e665:	mov    DWORD PTR ds:0x42fd7a,ebx
  40e66b:	cmp    DWORD PTR ds:0x42fd7a,0x1e
  40e672:	jae    0x40e697
  40e678:	cmp    DWORD PTR ds:0x42fd7a,0x24
  40e67f:	jne    0x40e690
  40e685:	push   0x1cae
  40e68a:	call   DWORD PTR ds:0x42e47b
  40e690:	jmp    0x40e65e
  40e695:	neg    ebx
  40e697:	mov    ecx,DWORD PTR [ebp-0x24]
  40e69a:	add    ebx,0x74bf
  40e6a0:	xor    eax,esi
  40e6a2:	add    eax,edi
  40e6a4:	sub    DWORD PTR ds:0x42e11c,edx
  40e6aa:	mov    DWORD PTR [ecx],eax
  40e6ac:	mov    eax,ds:0x41b27c
  40e6b1:	adc    DWORD PTR ds:0x42fd01,ebx
  40e6b7:	mov    ebx,0x8e12febe
  40e6bc:	mov    DWORD PTR [ebp-0xc],ebx
  40e6bf:	adc    DWORD PTR ds:0x42fcd9,0x7944
  40e6c9:	jmp    0x40e833
  40e6ce:	cmp    dl,bl
  40e6d0:	in     al,dx
  40e6d1:	fcomi  st,st(1)
  40e6d3:	jecxz  0x40e69e
  40e6d5:	icebp  
  40e6d6:	xor    al,0x3a
  40e6d8:	iret   
  40e6d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e6da:	mov    eax,0x51214fa5
  40e6df:	mov    ds:0x7fc37070,al
  40e6e4:	jo     0x40e756
  40e6e6:	cdq    
  40e6e7:	jbe    0x40e6cf
  40e6e9:	popf   
  40e6ea:	sub    ah,BYTE PTR [eax]
  40e6ec:	addr16 push 0xffffff93
  40e6ef:	xchg   ebp,eax
  40e6f0:	sbb    eax,0xf8d62930
  40e6f5:	inc    esi
  40e6f6:	pmaxsw mm0,mm6
  40e6f9:	xor    esp,edi
  40e6fb:	in     eax,0x53
  40e6fd:	out    dx,al
  40e6fe:	jl     0x40e6f5
  40e700:	enter  0xfc1,0x15
  40e704:	lods   al,BYTE PTR ds:[esi]
  40e705:	scas   al,BYTE PTR es:[edi]
  40e706:	jg     0x40e705
  40e708:	xor    BYTE PTR [ecx-0x6b0c543c],ch
  40e70e:	jg     0x40e75b
  40e710:	cmp    edx,DWORD PTR [edx+0x62]
  40e713:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e714:	push   ecx
  40e715:	adc    eax,eax
  40e717:	pushf  
  40e718:	ror    bh,1
  40e71a:	mov    ah,0xef
  40e71c:	outs   dx,BYTE PTR ds:[esi]
  40e71d:	add    DWORD PTR [ebp+0x32],eax
  40e720:	test   DWORD PTR [esi+edx*8],esp
  40e723:	pop    ebp
  40e724:	cwde   
  40e725:	ds push edx
  40e727:	ret    
  40e728:	mov    cl,0x14
  40e72a:	gs mov ecx,0x6f437412
  40e730:	gs pop esp
  40e732:	jge    0x40e793
  40e734:	mov    edi,0x152a76ba
  40e739:	fwait
  40e73a:	rep outs dx,BYTE PTR ds:[esi]
  40e73c:	pop    edi
  40e73d:	lahf   
  40e73e:	push   ds
  40e73f:	clc    
  40e740:	sbb    eax,0xe5f81abe
  40e745:	push   edx
  40e746:	push   es
  40e747:	or     eax,0xabdd0eed
  40e74c:	aad    0x5d
  40e74e:	clc    
  40e74f:	sbb    DWORD PTR [esi+0x1f],esi
  40e752:	jns    0x40e7b8
  40e754:	int    0x1d
  40e756:	or     dl,BYTE PTR [ecx*2-0x1b2cf88]
  40e75d:	xor    BYTE PTR [edi],cl
  40e75f:	mov    eax,0xafa28243
  40e764:	hlt    
  40e765:	mov    eax,0x7d732320
  40e76a:	jno    0x40e78b
  40e76c:	daa    
  40e76d:	int3   
  40e76e:	stos   BYTE PTR es:[edi],al
  40e76f:	ss fwait
  40e771:	ins    BYTE PTR es:[edi],dx
  40e772:	sti    
  40e773:	sub    al,0x2a
  40e775:	sbb    BYTE PTR [edx-0x7798cbcd],ch
  40e77b:	add    ecx,DWORD PTR [ecx-0x20a52cd2]
  40e781:	fdivp  st(6),st
  40e783:	dec    eax
  40e784:	push   ebx
  40e785:	pushf  
  40e786:	dec    esi
  40e787:	outs   dx,BYTE PTR ds:[esi]
  40e788:	shr    eax,0x12
  40e78b:	daa    
  40e78c:	or     eax,0x3986228f
  40e791:	inc    edx
  40e792:	xchg   BYTE PTR [edx+0x74],ah
  40e795:	sbb    al,0x18
  40e797:	cmp    edx,DWORD PTR [ebx]
  40e799:	or     bh,ah
  40e79b:	ja     0x40e81c
  40e79d:	loop   0x40e72f
  40e79f:	test   DWORD PTR [edx+0x20],ecx
  40e7a2:	sub    edx,DWORD PTR [eax]
  40e7a4:	jne    0x40e7e8
  40e7a6:	fwait
  40e7a7:	stos   BYTE PTR es:[edi],al
  40e7a8:	jns    0x40e7a6
  40e7aa:	in     al,0x7
  40e7ac:	or     al,0x5b
  40e7ae:	iret   
  40e7af:	pop    ds
  40e7b0:	loopne 0x40e745
  40e7b2:	outs   dx,BYTE PTR ds:[esi]
  40e7b3:	inc    esi
  40e7b4:	sub    bh,BYTE PTR [edi+eax*8+0x69]
  40e7b8:	cdq    
  40e7b9:	sbb    eax,0x5021f630
  40e7be:	jge    0x40e7f2
  40e7c0:	lea    eax,[ecx]
  40e7c2:	push   cs
  40e7c3:	adc    eax,0xb037a958
  40e7c8:	mov    edi,0xd15a6578
  40e7cd:	push   0xf
  40e7cf:	xchg   ebp,eax
  40e7d0:	xchg   ebp,eax
  40e7d1:	data16 mov ch,0x91
  40e7d4:	push   ecx
  40e7d5:	mov    eax,ds:0x2c1da1b4
  40e7da:	push   esp
  40e7db:	sub    eax,0x610957a
  40e7e0:	je     0x40e7d2
  40e7e2:	push   es
  40e7e3:	inc    eax
  40e7e4:	dec    ebp
  40e7e5:	in     eax,0xb1
  40e7e7:	out    0xf3,eax
  40e7e9:	fcmovu st,st(1)
  40e7eb:	cmp    al,0x71
  40e7ed:	test   ebp,ebx
  40e7ef:	sar    DWORD PTR [edi-0x7db6ff64],1
  40e7f5:	pop    edi
  40e7f6:	push   eax
  40e7f7:	cli    
  40e7f8:	fwait
  40e7f9:	pop    ebx
  40e7fa:	mov    al,BYTE PTR [esi]
  40e7fc:	xor    eax,0xd4f0aae9
  40e801:	fmul   DWORD PTR [esi+0xc11f3ad]
  40e807:	int3   
  40e808:	dec    esi
  40e809:	xchg   BYTE PTR [esi],dl
  40e80b:	dec    edx
  40e80c:	inc    edi
  40e80d:	jbe    0x40e7ac
  40e80f:	sbb    DWORD PTR [esi-0x51d5cd4a],ecx
  40e815:	ins    DWORD PTR es:[edi],dx
  40e816:	ret    0x6866
  40e819:	fist   WORD PTR [edi]
  40e81b:	jmp    0x9968:0xd4075936
  40e822:	mov    ch,0x8
  40e824:	push   ds
  40e825:	daa    
  40e826:	xor    al,0x70
  40e828:	dec    esi
  40e829:	sar    BYTE PTR [edi+0x17d4838e],0x46
  40e830:	out    dx,al
  40e831:	mov    cl,0x1d
  40e833:	mov    eax,DWORD PTR [eax]
  40e835:	adc    DWORD PTR ds:0x42fce9,0x5067
  40e83f:	mov    cx,WORD PTR [ebp-0x4]
  40e843:	xor    DWORD PTR ds:0x42fd0d,0x42fd7e
  40e84d:	movzx  ecx,cx
  40e850:	add    ecx,DWORD PTR [eax]
  40e852:	neg    eax
  40e854:	mov    DWORD PTR [ebp-0x14],0xf89c853d
  40e85b:	sbb    eax,0x5a1e
  40e860:	mov    DWORD PTR [ebp-0x1c],ecx
  40e863:	mov    eax,DWORD PTR [ebp+0x8]
  40e866:	sbb    ecx,DWORD PTR ds:0x42fce1
  40e86c:	mov    ecx,DWORD PTR [ebp-0x8]
  40e86f:	xor    DWORD PTR ds:0x42e11c,0x42e6ef
  40e879:	xor    eax,esi
  40e87b:	and    DWORD PTR ds:0x42e70b,0x57ad
  40e885:	add    eax,edi
  40e887:	cmp    DWORD PTR [ecx],eax
  40e889:	jne    0x40efe4
  40e88f:	and    DWORD PTR ds:0x42fcd1,0x0
  40e899:	jmp    0x40e8ab
  40e89e:	mov    ecx,DWORD PTR ds:0x42fcd1
  40e8a4:	inc    ecx
  40e8a5:	mov    DWORD PTR ds:0x42fcd1,ecx
  40e8ab:	cmp    DWORD PTR ds:0x42fcd1,0x11
  40e8b2:	jae    0x40e8fe
  40e8b8:	cmp    DWORD PTR ds:0x42fcd1,0x8
  40e8bf:	jne    0x40e8d0
  40e8c5:	push   0x42e1e7
  40e8ca:	call   DWORD PTR ds:0x42e47f
  40e8d0:	cmp    DWORD PTR ds:0x42fcd1,0x7
  40e8d7:	jne    0x40e8ec
  40e8dd:	xor    ecx,ecx
  40e8df:	add    ecx,DWORD PTR ds:0x42fcd1
  40e8e5:	inc    ecx
  40e8e6:	mov    DWORD PTR ds:0x42fcd1,ecx
  40e8ec:	jmp    0x40e89e
  40e8f1:	movzx  ecx,BYTE PTR ds:0x42fd8a
  40e8f8:	adc    DWORD PTR ds:0x42e6ff,ecx
  40e8fe:	mov    eax,DWORD PTR [ebp+0x8]
  40e901:	xor    DWORD PTR ds:0x42e6f7,0x70e3
  40e90b:	mov    ecx,DWORD PTR [ebp-0x1c]
  40e90e:	and    DWORD PTR ds:0x42e6fb,0x42e6ef
  40e918:	xor    eax,esi
  40e91a:	not    DWORD PTR ds:0x42fd01
  40e920:	add    eax,edi
  40e922:	mov    DWORD PTR ds:0x42fd0d,0x37d2
  40e92c:	cmp    DWORD PTR [ecx],eax
  40e92e:	mov    DWORD PTR ds:0x42e70b,0x263d
  40e938:	jmp    0x40eaa2
  40e93d:	(bad)  
  40e93e:	(bad)  
  40e93f:	fistp  DWORD PTR [ebx+0x65445961]
  40e945:	shl    BYTE PTR [edi-0x39],0x63
  40e949:	xchg   ebp,eax
  40e94a:	push   ecx
  40e94b:	or     al,0x9e
  40e94d:	and    al,0xa0
  40e94f:	jo     0x40e9c1
  40e951:	ret    
  40e952:	jg     0x40e9c4
  40e954:	jo     0x40e906
  40e956:	push   ecx
  40e957:	fs xor eax,0xb24b4348
  40e95d:	ja     0x40e943
  40e95f:	cld    
  40e960:	jle    0x40e983
  40e962:	add    bl,ah
  40e964:	cmp    BYTE PTR [ecx],dl
  40e966:	xchg   esp,eax
  40e967:	jle    0x40e934
  40e969:	cld    
  40e96a:	push   esp
  40e96b:	mov    bh,0x3c
  40e96d:	mov    dl,0x84
  40e96f:	(bad)  
  40e970:	cwde   
  40e971:	mov    ebx,0x12c39c52
  40e976:	js     0x40e9b4
  40e978:	push   ebx
  40e979:	imul   edi,ecx,0xadee0f1a
  40e97f:	push   esp
  40e980:	fdivr  QWORD PTR [ecx+0x4d]
  40e983:	out    0x37,al
  40e985:	mov    dh,0xb8
  40e987:	mov    al,0xa0
  40e989:	push   ebx
  40e98a:	mov    al,ds:0x9a89fb56
  40e98f:	repnz sub al,0x38
  40e992:	and    eax,0xa9362477
  40e997:	jp     0x40e96f
  40e999:	outs   dx,BYTE PTR ds:[esi]
  40e99a:	cld    
  40e99b:	xchg   esp,eax
  40e99c:	dec    edx
  40e99d:	push   ebp
  40e99e:	xchg   DWORD PTR [eax+0x15],edi
  40e9a1:	pop    ecx
  40e9a2:	mov    bh,0x43
  40e9a4:	add    edx,DWORD PTR [edi]
  40e9a6:	ja     0x40e951
  40e9a8:	xchg   ebp,eax
  40e9a9:	sbb    bl,BYTE PTR ds:0x3749eec0
  40e9af:	imul   eax,DWORD PTR [esi],0xe6a4fa31
  40e9b5:	cmp    edi,esi
  40e9b7:	mov    edx,0x8a779c18
  40e9bc:	pop    es
  40e9bd:	mov    edx,0x6d60e57a
  40e9c2:	clc    
  40e9c3:	ja     0x40ea2c
  40e9c5:	push   ebp
  40e9c6:	je     0x40ea1a
  40e9c8:	jae    0x40e970
  40e9ca:	adc    cl,BYTE PTR ds:[ecx+0x67dc1cd6]
  40e9d1:	and    BYTE PTR [eax],ch
  40e9d3:	(bad)  [ecx-0x12]
  40e9d6:	jle    0x40e9de
  40e9d8:	mov    cl,0x8b
  40e9da:	xor    bh,al
  40e9dc:	mov    ds:0x9c50a6af,eax
  40e9e1:	cli    
  40e9e2:	add    DWORD PTR [ebx],0x4f1fc94e
  40e9e8:	std    
  40e9e9:	mov    edi,0xe540c4d4
  40e9ee:	fisubr WORD PTR [eax-0x5a73b223]
  40e9f4:	and    ch,BYTE PTR [ecx-0x23dd45d4]
  40e9fa:	xor    al,0xa3
  40e9fc:	in     eax,0x3b
  40e9fe:	clc    
  40e9ff:	ins    BYTE PTR es:[edi],dx
  40ea00:	je     0x40e9c6
  40ea02:	lock cli 
  40ea04:	add    esi,DWORD PTR [ebx+0x30]
  40ea07:	fwait
  40ea08:	es jae 0x40e9b8
  40ea0b:	jb     0x40ea73
  40ea0d:	add    DWORD PTR [esi+eiz*2],0xe
  40ea11:	sbb    bl,BYTE PTR [ecx+0x21]
  40ea14:	inc    ebp
  40ea15:	adc    dh,bh
  40ea17:	lods   al,BYTE PTR ds:[esi]
  40ea18:	outs   dx,DWORD PTR ds:[esi]
  40ea19:	ds xchg ecx,eax
  40ea1b:	pop    edx
  40ea1c:	(bad)  
  40ea1d:	aam    0x84
  40ea1f:	jmp    0x40ea74
  40ea21:	in     eax,0xe5
  40ea23:	adc    eax,0x19b557f8
  40ea28:	(bad)  
  40ea29:	fild   WORD PTR [edx+0x5346fcdf]
  40ea2f:	push   ebp
  40ea30:	js     0x40ea84
  40ea32:	sbb    DWORD PTR [edi+edx*4-0x2c],ecx
  40ea36:	gs pop ebp
  40ea38:	push   ebx
  40ea39:	push   eax
  40ea3a:	or     bh,BYTE PTR [edi+0x68fb3869]
  40ea40:	int    0xbb
  40ea42:	add    DWORD PTR [edx+0x34c4dff0],esp
  40ea48:	mov    eax,0x35f56d9
  40ea4d:	adc    eax,DWORD PTR [edx-0x70]
  40ea50:	fldenv [esi]
  40ea52:	mov    bl,0x17
  40ea54:	test   eax,0xd997b724
  40ea59:	bound  esp,QWORD PTR [esi+0x47]
  40ea5c:	or     esp,DWORD PTR [esi+ebx*2-0x72]
  40ea60:	call   0xa0c8:0xffabb277
  40ea67:	icebp  
  40ea68:	inc    ebp
  40ea69:	inc    ebp
  40ea6a:	mov    ch,0x85
  40ea6c:	call   0x9d99:0xb153f8e1
  40ea73:	je     0x40eab3
  40ea75:	test   DWORD PTR [ecx],eax
  40ea77:	sub    BYTE PTR [ecx-0x7a],bl
  40ea7a:	dec    eax
  40ea7b:	arpl   ax,cx
  40ea7d:	stc    
  40ea7e:	outs   dx,BYTE PTR ds:[esi]
  40ea7f:	push   cs
  40ea80:	jge    0x40ea19
  40ea82:	jecxz  0x40ea79
  40ea84:	stc    
  40ea85:	jbe    0x40eaf8
  40ea87:	jb     0x40ead6
  40ea89:	vandnps xmm2,xmm1,xmm7
  40ea8d:	out    dx,al
  40ea8e:	xchg   DWORD PTR [eax],esp
  40ea90:	jge    0x40ead1
  40ea92:	pop    ebx
  40ea93:	mov    ebx,0x37f03c35
  40ea98:	lods   al,BYTE PTR ds:[esi]
  40ea99:	dec    edx
  40ea9a:	pop    edi
  40ea9b:	jne    0x40ea75
  40ea9d:	mov    ch,0x81
  40ea9f:	and    ebp,DWORD PTR [ebp-0x66]
  40eaa2:	jne    0x40eb4e
  40eaa8:	add    ecx,edx
  40eaaa:	mov    eax,DWORD PTR [ebp+0x8]
  40eaad:	sbb    ecx,0x443c
  40eab3:	mov    ecx,DWORD PTR [ebp-0x10]
  40eab6:	adc    edx,DWORD PTR ds:0x42fce5
  40eabc:	xor    eax,esi
  40eabe:	add    eax,edi
  40eac0:	mov    DWORD PTR [ecx],eax
  40eac2:	sbb    ecx,0x77dc
  40eac8:	mov    eax,DWORD PTR [ebp-0x10]
  40eacb:	adc    ecx,0x4d7b
  40ead1:	mov    ecx,DWORD PTR [ebp-0x14]
  40ead4:	mov    DWORD PTR ds:0x42e128,0x11
  40eade:	cmp    DWORD PTR ds:0x42e128,0x0
  40eae5:	je     0x40eb43
  40eaeb:	cmp    DWORD PTR ds:0x42e128,0x2
  40eaf2:	jne    0x40eb15
  40eaf8:	push   0x42e130
  40eafd:	push   0x42e16f
  40eb02:	push   0x1c20
  40eb07:	push   DWORD PTR [ebp-0x10]
  40eb0a:	push   0x848e
  40eb0f:	call   DWORD PTR ds:0x42e30f
  40eb15:	cmp    DWORD PTR ds:0x42e128,0x3
  40eb1c:	jne    0x40eb31
  40eb22:	xor    edx,edx
  40eb24:	or     edx,DWORD PTR ds:0x42e128
  40eb2a:	dec    edx
  40eb2b:	mov    DWORD PTR ds:0x42e128,edx
  40eb31:	mov    edx,DWORD PTR ds:0x42e128
  40eb37:	dec    edx
  40eb38:	mov    DWORD PTR ds:0x42e128,edx
  40eb3e:	jmp    0x40eade
  40eb43:	xor    ecx,esi
  40eb45:	mov    edx,0xffcd8d64
  40eb4a:	sub    edx,ecx
  40eb4c:	add    DWORD PTR [eax],edx
  40eb4e:	mov    eax,ds:0x41b27c
  40eb53:	mov    eax,DWORD PTR [eax]
  40eb55:	mov    cx,WORD PTR [ebp-0x4]
  40eb59:	movzx  ecx,cx
  40eb5c:	add    ecx,DWORD PTR [eax]
  40eb5e:	mov    DWORD PTR [ebp-0x1c],ecx
  40eb61:	mov    eax,DWORD PTR [ebp+0xc]
  40eb64:	mov    ecx,DWORD PTR [ebp+0xc]
  40eb67:	xor    eax,esi
  40eb69:	lea    eax,[eax+eax*1+0x32729c]
  40eb70:	xor    ecx,esi
  40eb72:	sub    ecx,eax
  40eb74:	mov    ax,WORD PTR [ebp-0x4]
  40eb78:	movzx  eax,ax
  40eb7b:	jmp    0x40ece5
  40eb80:	or     BYTE PTR [edi],dl
  40eb82:	shr    BYTE PTR [edx-0x31],0x71
  40eb86:	mov    dl,0x71
  40eb88:	inc    eax
  40eb89:	(bad)  
  40eb8a:	pop    esp
  40eb8b:	mov    ch,0x65
  40eb8d:	inc    esp
  40eb8e:	ins    BYTE PTR es:[edi],dx
  40eb8f:	jmp    0x70b19b8b
  40eb94:	ret    
  40eb95:	jg     0x40ec07
  40eb97:	jo     0x40eb72
  40eb99:	repnz cmp ah,bh
  40eb9c:	rcl    BYTE PTR [esi],0x3
  40eb9f:	dec    edi
  40eba0:	mov    al,0xa8
  40eba2:	cld    
  40eba3:	and    esp,DWORD PTR [ecx+0x6a]
  40eba6:	pop    ecx
  40eba7:	fmulp  st(0),st
  40eba9:	xchg   BYTE PTR [eax+0x1a5ac59b],bh
  40ebaf:	inc    esp
  40ebb1:	cmp    esi,DWORD PTR [edi-0x42]
  40ebb4:	push   edx
  40ebb5:	rcl    BYTE PTR [ecx+0x1f6c2270],0xf9
  40ebbc:	add    DWORD PTR [ebx+0x2f],edi
  40ebbf:	pop    ebx
  40ebc0:	bound  eax,QWORD PTR [ecx-0x56]
  40ebc3:	inc    eax
  40ebc4:	mov    esi,0x3a6f845c
  40ebc9:	pop    esp
  40ebca:	push   ecx
  40ebcb:	popf   
  40ebcc:	and    eax,0x6e9a197b
  40ebd1:	mov    ch,0xd7
  40ebd3:	icebp  
  40ebd4:	cld    
  40ebd5:	cmp    bl,dl
  40ebd7:	and    dl,BYTE PTR [ebp+0x3fc4de78]
  40ebdd:	pop    edi
  40ebde:	and    al,0x8b
  40ebe0:	jno    0x40ec50
  40ebe2:	int3   
  40ebe3:	cld    
  40ebe4:	add    BYTE PTR [esi+0x1d9856e4],bl
  40ebea:	cld    
  40ebeb:	call   0x9b17:0xaf175234
  40ebf2:	sub    DWORD PTR [esp+edx*2],ebp
  40ebf5:	push   eax
  40ebf6:	int3   
  40ebf7:	adc    BYTE PTR [edi-0x7b],ah
  40ebfa:	mov    eax,DWORD PTR [ecx+0x645a716e]
  40ec00:	dec    ebx
  40ec01:	jle    0x40ec66
  40ec03:	adc    esp,DWORD PTR [ebx]
  40ec05:	sahf   
  40ec06:	mov    ah,0x86
  40ec08:	push   0xffffffa9
  40ec0a:	xor    al,0xed
  40ec0c:	pusha  
  40ec0d:	push   0x531695e0
  40ec12:	mov    dh,ch
  40ec14:	call   0x4474:0x58c3887f
  40ec1b:	(bad)  
  40ec1c:	stos   BYTE PTR es:[edi],al
  40ec1d:	push   ebx
  40ec1e:	pusha  
  40ec1f:	jecxz  0x40ec38
  40ec21:	or     BYTE PTR [esi],cl
  40ec23:	aam    0xf7
  40ec25:	shr    BYTE PTR [ebp+0xa],cl
  40ec28:	xchg   edi,eax
  40ec29:	fmul   QWORD PTR [ebx-0x197726e9]
  40ec2f:	pop    esi
  40ec30:	shr    DWORD PTR [ecx],0x3e
  40ec33:	mov    dl,0x59
  40ec35:	shr    DWORD PTR [esi],cl
  40ec37:	pushf  
  40ec38:	jnp    0x40ec6f
  40ec3a:	cmp    dh,bl
  40ec3c:	mov    ah,0x7a
  40ec3e:	adc    DWORD PTR [eax-0x37],ecx
  40ec41:	dec    ebp
  40ec42:	daa    
  40ec43:	shl    dh,1
  40ec45:	jmp    0x40ec3b
  40ec47:	pop    es
  40ec48:	lock pop ebp
  40ec4a:	mov    dh,0x71
  40ec4c:	ret    0x1146
  40ec4f:	aam    0x59
  40ec51:	jae    0x40ec03
  40ec53:	dec    ecx
  40ec54:	and    eax,0x87c33cfd
  40ec59:	jg     0x40ec57
  40ec5b:	and    ebx,edx
  40ec5d:	or     DWORD PTR [ecx+ebx*1-0x27],0x497494e2
  40ec65:	mov    dh,0xdb
  40ec67:	hlt    
  40ec68:	push   edx
  40ec69:	mov    dl,0x1d
  40ec6b:	push   cs
  40ec6c:	ss dec ebp
  40ec6e:	or     eax,0x76d1d798
  40ec73:	inc    esi
  40ec74:	shl    DWORD PTR [eax-0x3d],1
  40ec77:	xor    dl,dl
  40ec79:	int3   
  40ec7a:	jmp    0x36802295
  40ec7f:	xlat   BYTE PTR ds:[ebx]
  40ec80:	ins    BYTE PTR es:[edi],dx
  40ec81:	clc    
  40ec82:	pop    esi
  40ec83:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ec84:	stos   DWORD PTR es:[edi],eax
  40ec85:	cmp    BYTE PTR [edi-0x35],cl
  40ec88:	test   al,0x28
  40ec8a:	sub    ecx,eax
  40ec8c:	jbe    0x40ec3a
  40ec8e:	ds in  al,0xb9
  40ec91:	pop    esi
  40ec92:	cld    
  40ec93:	call   FWORD PTR [eax+eiz*4-0x35]
  40ec97:	pop    eax
  40ec98:	jmp    0x40ec89
  40ec9a:	stos   DWORD PTR es:[edi],eax
  40ec9b:	popf   
  40ec9c:	leave  
  40ec9d:	mov    ecx,DWORD PTR [ebp+0x5b]
  40eca0:	out    dx,eax
  40eca1:	vunpckhps ymm1,ymm0,ymm4
  40eca6:	imul   ebx,eax,0x7e0eab9c
  40ecac:	and    dl,BYTE PTR [edx+0x48ac9e66]
  40ecb2:	push   eax
  40ecb3:	fistp  DWORD PTR [edi]
  40ecb5:	jb     0x40ece2
  40ecb7:	dec    eax
  40ecb8:	aaa    
  40ecb9:	loop   0x40ecf8
  40ecbb:	out    0xbb,al
  40ecbd:	popa   
  40ecbe:	or     DWORD PTR [ecx],0xccbb95d8
  40ecc4:	push   0x5a
  40ecc6:	push   eax
  40ecc7:	out    dx,eax
  40ecc8:	leave  
  40ecc9:	xchg   ebx,eax
  40ecca:	xchg   ebx,eax
  40eccb:	outs   dx,BYTE PTR ds:[esi]
  40eccc:	xchg   edx,eax
  40eccd:	cmp    al,0x3
  40eccf:	sahf   
  40ecd0:	inc    ebx
  40ecd1:	sub    DWORD PTR [edi-0x18d83dcd],ebp
  40ecd7:	js     0x40ecec
  40ecd9:	and    esi,DWORD PTR [esi+0x18a6e999]
  40ecdf:	sbb    BYTE PTR [edx-0x18],cl
  40ece2:	data16 ficomp WORD PTR [ebx+edi*1]
  40ece6:	ror    DWORD PTR [ebx-0x48f013bb],0x4d
  40eced:	cld    
  40ecee:	jmp    0x40ee58
  40ecf3:	movntps XMMWORD PTR [edi+edi*8+0x64],xmm4
  40ecf8:	push   edi
  40ecf9:	rep stos DWORD PTR es:[edi],eax
  40ecfb:	mov    dh,0x81
  40ecfd:	push   ebx
  40ecfe:	jle    0x40ecfe
  40ed00:	inc    esi
  40ed01:	(bad)  
  40ed02:	jnp    0x40ecbe
  40ed04:	scas   al,BYTE PTR es:[edi]
  40ed05:	jo     0x40ed77
  40ed07:	ret    
  40ed08:	jg     0x40ed7a
  40ed0a:	jo     0x40ed41
  40ed0c:	test   al,0x84
  40ed0e:	push   eax
  40ed0f:	mov    ecx,0x1144f401
  40ed14:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ed15:	cli    
  40ed16:	popa   
  40ed17:	mov    ecx,0x26a720c6
  40ed1c:	and    eax,0x1d50da9
  40ed21:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ed22:	lods   al,BYTE PTR ds:[esi]
  40ed23:	push   ebx
  40ed24:	mov    WORD PTR [edx+0x163cd71a],gs
  40ed2a:	cmp    al,0x5e
  40ed2c:	nop
  40ed2d:	push   ebx
  40ed2e:	xchg   edi,eax
  40ed2f:	push   cs
  40ed30:	inc    esp
  40ed31:	aaa    
  40ed32:	cld    
  40ed33:	in     eax,0x2f
  40ed35:	push   cs
  40ed36:	(bad)  
  40ed37:	mov    ebx,0xc701a116
  40ed3c:	add    DWORD PTR [edi-0x1d],esp
  40ed3f:	outs   dx,BYTE PTR ds:[esi]
  40ed40:	inc    ebx
  40ed41:	xchg   BYTE PTR [ebx+0x270995fb],al
  40ed47:	pop    ebp
  40ed48:	(bad)  
  40ed49:	add    ch,BYTE PTR [edx+0x383774c1]
  40ed4f:	mov    ebx,0x513bb4f5
  40ed54:	cmp    BYTE PTR [edi+0x55],ch
  40ed57:	mov    dl,0xdf
  40ed59:	add    al,0xf3
  40ed5b:	jp     0x40ed45
  40ed5d:	repz imul eax,DWORD PTR [edi+0x1],0x62
  40ed62:	aas    
  40ed63:	rol    DWORD PTR [esi],cl
  40ed65:	icebp  
  40ed66:	inc    edx
  40ed67:	idiv   DWORD PTR [edx]
  40ed69:	dec    ebx
  40ed6a:	xchg   ebp,eax
  40ed6b:	cmp    al,0x9e
  40ed6d:	sub    al,bl
  40ed6f:	pop    edx
  40ed70:	jb     0x40ecf5
  40ed72:	inc    ebp
  40ed73:	scas   al,BYTE PTR es:[edi]
  40ed74:	fs aad 0x0
  40ed77:	nop
  40ed78:	fdiv   QWORD PTR [esi+0x1e9a8bb0]
  40ed7e:	xor    al,0xa2
  40ed80:	add    eax,0x7b91af52
  40ed85:	or     BYTE PTR [edx],0x10
  40ed88:	jns    0x40ed22
  40ed8a:	bound  esi,QWORD PTR [ebx]
  40ed8c:	retf   
  40ed8d:	gs inc ebp
  40ed8f:	jp     0x40eda9
  40ed91:	cmp    esp,edi
  40ed93:	mov    eax,ds:0xf8ed4b23
  40ed98:	jmp    0xa53298cd
  40ed9d:	jmp    0x6db8c356
  40eda2:	and    BYTE PTR [ecx-0x4bb4e6e7],dh
  40eda8:	out    dx,eax
  40eda9:	imul   edx,DWORD PTR [ebx],0x58
  40edac:	and    DWORD PTR [edi+ecx*2-0x4],ecx
  40edb0:	adc    cl,BYTE PTR [edx+0x2c]
  40edb3:	or     eax,0x9c1496e8
  40edb8:	cmp    BYTE PTR [esi+0x2f],bl
  40edbb:	jge    0x40ee01
  40edbd:	dec    esp
  40edbe:	xchg   edi,eax
  40edbf:	pop    edi
  40edc0:	shr    bh,1
  40edc2:	xor    DWORD PTR [ecx+0x34],edx
  40edc5:	push   0xbc35d9b1
  40edca:	pop    edx
  40edcb:	arpl   ax,sp
  40edcd:	pop    edi
  40edce:	repz or ebp,esi
  40edd1:	add    esp,DWORD PTR [edi]
  40edd3:	pusha  
  40edd4:	aaa    
  40edd5:	cmp    eax,0xa6da7844
  40edda:	inc    ebp
  40eddb:	inc    ecx
  40eddc:	sbb    bh,BYTE PTR [ebp+0x20e599fe]
  40ede2:	ret    0x392f
  40ede5:	cmc    
  40ede6:	adc    eax,0xae3be709
  40edeb:	popf   
  40edec:	test   eax,0x8760f2c0
  40edf1:	push   ebx
  40edf2:	icebp  
  40edf3:	add    DWORD PTR [ecx-0x28],esp
  40edf6:	fisttp DWORD PTR [edi+ecx*1]
  40edf9:	call   0xd4c0c809
  40edfe:	xchg   edi,eax
  40edff:	les    ecx,FWORD PTR [eax-0x748368c7]
  40ee05:	adc    BYTE PTR [edi-0x60],dl
  40ee08:	xchg   ecx,eax
  40ee09:	mov    dl,0xd3
  40ee0b:	imul   ecx,DWORD PTR [eax-0x1b4451e2],0xffffffd7
  40ee12:	xchg   DWORD PTR [edx+0x6b8aa04d],eax
  40ee18:	dec    esi
  40ee19:	xor    edi,ebp
  40ee1b:	ds retf 
  40ee1d:	sti    
  40ee1e:	imul   esp,DWORD PTR [esi-0x3384ff65],0x6d
  40ee25:	stc    
  40ee26:	inc    ebx
  40ee27:	ror    cl,cl
  40ee29:	(bad)  
  40ee2a:	mov    ebp,0x5a5c2727
  40ee2f:	xor    edi,DWORD PTR fs:[eax-0x2ff76c22]
  40ee36:	(bad)
  40ee3a:	imul   ebx,DWORD PTR [edx-0x51],0x40
  40ee3e:	sbb    eax,edx
  40ee40:	mov    edx,DWORD PTR [edx+ebp*8]
  40ee43:	mov    DWORD PTR [edi+0x73],ebx
  40ee46:	mov    esp,0xb33e98ea
  40ee4b:	inc    edi
  40ee4c:	sbb    esp,ebp
  40ee4e:	xlat   BYTE PTR ds:[ebx]
  40ee4f:	fdiv   QWORD PTR [edi-0x19ee5808]
  40ee55:	(bad)  
  40ee56:	pop    ebp
  40ee57:	outs   dx,BYTE PTR ds:[esi]
  40ee58:	jg     0x40efd7
  40ee5e:	xor    eax,esi
  40ee60:	sub    ecx,eax
  40ee62:	sub    ecx,edi
  40ee64:	mov    WORD PTR [ebp-0x4],cx
  40ee68:	jmp    0x40efe4
  40ee6d:	jmp    0x40efd7
  40ee72:	int3   
  40ee73:	push   ebp
  40ee74:	(bad)  
  40ee75:	icebp  
  40ee76:	xchg   ecx,eax
  40ee77:	icebp  
  40ee78:	je     0x40eeef
  40ee7a:	in     al,0x65
  40ee7c:	pop    edx
  40ee7d:	mov    cl,0x3f
  40ee7f:	icebp  
  40ee80:	xor    DWORD PTR [edx],edi
  40ee82:	or     eax,0xc37070ac
  40ee87:	jg     0x40eef9
  40ee89:	jo     0x40eeff
  40ee8b:	xor    BYTE PTR [ecx],dl
  40ee8d:	repnz scas al,BYTE PTR es:[edi]
  40ee8f:	pop    eax
  40ee90:	popa   
  40ee91:	cmp    BYTE PTR [edi],ah
  40ee93:	jbe    0x40ee6b
  40ee95:	mov    BYTE PTR [esi],dh
  40ee97:	retf   
  40ee98:	mov    eax,0x3c66f34a
  40ee9d:	xor    ebp,0x57
  40eea0:	mov    bh,0x69
  40eea2:	jns    0x40ee41
  40eea4:	and    BYTE PTR [edx+0x4b],bh
  40eea7:	bnd ret 0x70fe
  40eeab:	fwait
  40eeac:	push   edi
  40eead:	adc    esp,0x79
  40eeb0:	pop    ss
  40eeb1:	pop    ebp
  40eeb2:	(bad)  
  40eeb4:	cmp    eax,0xfa3c7ad8
  40eeb9:	add    dh,ch
  40eebb:	sahf   
  40eebc:	push   esp
  40eebd:	pop    ds
  40eebe:	fndisi(8087 only) 
  40eec0:	sbb    al,0xe8
  40eec2:	addr16 ror esi,0xab
  40eec6:	mov    dl,0xf7
  40eec8:	retf   0xbc6
  40eecb:	mov    bl,0x48
  40eecd:	mov    BYTE PTR [edx+eiz*2-0x2c0aaeea],al
  40eed4:	sbb    BYTE PTR [edx+esi*1+0x79],cl
  40eed8:	add    al,0x3b
  40eeda:	daa    
  40eedb:	mov    dh,0x9b
  40eedd:	inc    esp
  40eede:	cmp    edx,DWORD PTR [ebx+ebp*8]
  40eee1:	(bad)  
  40eee3:	xchg   ebx,eax
  40eee4:	sbb    edx,esi
  40eee6:	in     eax,0x0
  40eee8:	jge    0x40ef3f
  40eeea:	test   BYTE PTR [ecx-0x3a389473],bl
  40eef0:	and    BYTE PTR [esi+0x73b52cdd],bl
  40eef6:	ds mov esi,0x7dcadb9a
  40eefc:	push   ss
  40eefd:	loopne 0x40ef54
  40eeff:	into   
  40ef00:	dec    edi
  40ef01:	xchg   ebp,eax
  40ef02:	xchg   edx,eax
  40ef03:	jno    0x40ef30
  40ef05:	mov    eax,0xf8983e96
  40ef0a:	add    eax,0xca780d06
  40ef0f:	daa    
  40ef10:	mov    ecx,0x17c94ed0
  40ef15:	push   ds
  40ef16:	or     BYTE PTR [ebp+0x361c6ffd],bh
  40ef1c:	pop    es
  40ef1d:	adc    cl,BYTE PTR [edi+0x6a]
  40ef20:	pop    edi
  40ef21:	mov    esi,0x765b33e4
  40ef26:	not    BYTE PTR [ebp+0x44dc1a31]
  40ef2c:	std    
  40ef2d:	call   0xe10ef1ba
  40ef32:	loope  0x40ef0a
  40ef34:	inc    esp
  40ef35:	adc    eax,0x2d973bc8
  40ef3a:	scas   eax,DWORD PTR es:[edi]
  40ef3b:	sub    DWORD PTR [ecx],ecx
  40ef3d:	jb     0x40ef95
  40ef3f:	mov    al,BYTE PTR [edi+0x26]
  40ef42:	dec    edx
  40ef43:	or     eax,DWORD PTR [ebx-0x5e]
  40ef46:	icebp  
  40ef47:	les    ecx,FWORD PTR [eax*1+0x767c1539]
  40ef4e:	sar    ebx,1
  40ef50:	aaa    
  40ef51:	in     eax,0xb2
  40ef53:	data16 shr BYTE PTR [ecx-0x42],cl
  40ef57:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ef58:	lea    esp,[edx+0x8dbf965]
  40ef5e:	sar    DWORD PTR [edi+0x61],0x63
  40ef62:	outs   dx,DWORD PTR ds:[esi]
  40ef63:	push   cs
  40ef64:	mov    DWORD PTR [eax-0x56],edi
  40ef67:	sbb    BYTE PTR [eax-0x4c],bh
  40ef6a:	bound  ebx,QWORD PTR [ebx-0x7bd2219b]
  40ef70:	call   0x970d5bf2
  40ef75:	mov    esp,DWORD PTR [eax]
  40ef77:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ef78:	int    0x37
  40ef7a:	add    BYTE PTR [eax+esi*4-0x49818d1d],cl
  40ef81:	ds jecxz 0x40ef8f
  40ef84:	inc    edx
  40ef85:	in     eax,0x6e
  40ef87:	push   edi
  40ef88:	sbb    bl,0x59
  40ef8b:	loope  0x40ef54
  40ef8d:	xor    eax,0xc51ca63e
  40ef92:	out    0xf1,al
  40ef94:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ef95:	jo     0x40efef
  40ef97:	push   cs
  40ef98:	sub    BYTE PTR [ebp+0x2c],ah
  40ef9b:	sbb    BYTE PTR [esi-0x5d],0xb4
  40ef9f:	xor    dl,BYTE PTR [ecx+0x67]
  40efa2:	or     ecx,DWORD PTR [ebx-0x73d4222e]
  40efa8:	cmc    
  40efa9:	inc    eax
  40efaa:	lods   al,BYTE PTR ds:[esi]
  40efab:	es inc ebx
  40efad:	jnp    0x40ef85
  40efaf:	retf   0xb45
  40efb2:	fcmove st,st(0)
  40efb4:	stos   DWORD PTR es:[edi],eax
  40efb5:	fwait
  40efb6:	mul    BYTE PTR [edi-0x254185c6]
  40efbc:	cmp    bl,BYTE PTR [edi]
  40efbe:	xchg   edi,eax
  40efbf:	ja     0x40efd3
  40efc1:	jp     0x40f000
  40efc3:	dec    esi
  40efc4:	jp     0x40f014
  40efc6:	pop    ebx
  40efc7:	bound  ebp,QWORD PTR [ecx+0x36226ce8]
  40efcd:	add    eax,0xc0d7418e
  40efd2:	test   eax,0x20a55872
  40efd7:	xor    eax,esi
  40efd9:	lea    eax,[eax+ecx*1+0x32729c]
  40efe0:	mov    WORD PTR [ebp-0x4],ax
  40efe4:	mov    eax,DWORD PTR [ebp-0xc]
  40efe7:	cmp    eax,ebx
  40efe9:	jmp    0x40f153
  40efee:	mov    cs,WORD PTR [ebx]
  40eff0:	enter  0x51c7,0xc3
  40eff4:	lea    edx,[ecx+0x2a]
  40eff7:	leave  
  40eff8:	inc    esi
  40eff9:	inc    ebx
  40effa:	jmpw   0x5421
  40effe:	shr    BYTE PTR [ebx+0x7fc37070],1
  40f004:	jo     0x40f076
  40f006:	fsubp  st(7),st
  40f008:	(bad)  
  40f009:	das    
  40f00a:	sbb    al,0x22
  40f00c:	mov    ecx,0xfb4b543e
  40f011:	sbb    eax,0x2ee12f1e
  40f016:	cmp    al,BYTE PTR [ecx-0x4b16e791]
  40f01c:	cli    
  40f01d:	jecxz  0x40f07f
  40f01f:	shl    DWORD PTR [ecx-0x6a99abc5],1
  40f025:	mov    ebp,0x5f13ecb7
  40f02a:	icebp  
  40f02b:	(bad)  
  40f02c:	in     al,0x35
  40f02e:	ja     0x40efbb
  40f030:	jge    0x40f021
  40f032:	mov    dl,0x0
  40f034:	call   0x3de4:0x84fb879c
  40f03b:	(bad)  
  40f03c:	(bad)  
  40f03d:	sbb    eax,ebp
  40f03f:	popa   
  40f040:	mov    edx,0xcaf252ae
  40f045:	js     0x40f040
  40f047:	sub    ebp,ebx
  40f049:	popa   
  40f04a:	stos   BYTE PTR es:[edi],al
  40f04b:	test   edx,0x31cf4508
  40f051:	loop   0x40f081
  40f053:	push   esp
  40f054:	aad    0xde
  40f056:	and    BYTE PTR [edx-0x7c4dad5b],0x37
  40f05d:	aad    0x18
  40f05f:	or     eax,0xc8e249b2
  40f064:	mov    DWORD PTR [ebx-0x2f57e0d3],edi
  40f06a:	add    DWORD PTR [esi+0x63208c9b],ecx
  40f070:	outs   dx,DWORD PTR ds:[esi]
  40f071:	sub    dh,BYTE PTR [ebp+0x3618e4d7]
  40f077:	dec    eax
  40f078:	pop    esp
  40f079:	dec    esp
  40f07a:	scas   al,BYTE PTR es:[edi]
  40f07b:	les    esi,FWORD PTR [esi+0x53]
  40f07e:	ja     0x40f0f5
  40f080:	mov    edi,0x8f3d6008
  40f085:	stc    
  40f086:	icebp  
  40f087:	pushf  
  40f088:	ffree  st(5)
  40f08a:	jmp    0x62b7:0x60cee755
  40f091:	test   eax,0x7715c85c
  40f096:	sub    cl,BYTE PTR [ebx+0x62340ce]
  40f09c:	cwde   
  40f09d:	or     eax,0x6af2784c
  40f0a2:	cld    
  40f0a3:	arpl   WORD PTR [ebx+0x65566373],bx
  40f0a9:	jns    0x40f0df
  40f0ab:	faddp  st(0),st
  40f0ad:	pop    ebp
  40f0ae:	jle    0x40f0b0
  40f0b0:	and    BYTE PTR [ecx],dh
  40f0b2:	neg    DWORD PTR [ecx+0x39]
  40f0b5:	(bad)  
  40f0b6:	jmp    DWORD PTR [ebp-0x1006fdd7]
  40f0bc:	in     al,0xa6
  40f0be:	mov    al,ds:0xa0b9e5b
  40f0c3:	(bad)  
  40f0c4:	sahf   
  40f0c5:	cwde   
  40f0c6:	fisttp WORD PTR [esi+edi*8]
  40f0c9:	mov    esp,0xc29fea9b
  40f0ce:	jmp    0x6a22:0x416f2655
  40f0d5:	sbb    esp,esp
  40f0d7:	das    
  40f0d8:	out    dx,eax
  40f0d9:	jo     0x40f10b
  40f0db:	mov    BYTE PTR [esi],dh
  40f0dd:	xor    DWORD PTR [eax-0x55b23d65],edx
  40f0e3:	es sbb eax,0x148ab341
  40f0e9:	retf   
  40f0ea:	mov    ?,eax
  40f0ec:	or     al,0x1e
  40f0ee:	dec    ecx
  40f0ef:	inc    esp
  40f0f0:	push   esp
  40f0f1:	push   esp
  40f0f2:	inc    esi
  40f0f3:	xchg   DWORD PTR [ebp-0x4c],ecx
  40f0f6:	mov    ch,0xa2
  40f0f8:	ror    BYTE PTR [ecx+0x557e58de],cl
  40f0fe:	(bad)  
  40f0ff:	add    eax,0x5ef9a4e6
  40f104:	scas   al,BYTE PTR es:[edi]
  40f105:	jbe    0x40f0f1
  40f107:	or     eax,0x966fd3e4
  40f10c:	inc    edx
  40f10d:	stos   DWORD PTR es:[edi],eax
  40f10e:	mov    edi,0x9b621f07
  40f113:	or     al,0xbd
  40f115:	xor    eax,edx
  40f117:	es pushf 
  40f119:	cdq    
  40f11a:	retf   
  40f11b:	(bad)  
  40f11c:	int3   
  40f11d:	mov    edi,0x9f37498e
  40f122:	das    
  40f123:	sub    BYTE PTR ds:0x7f4a956a,dl
  40f129:	fldcw  WORD PTR ds:0x3ff8d98a
  40f12f:	sub    bl,BYTE PTR [ecx+ecx*4]
  40f132:	fwait
  40f133:	jp     0x40f10a
  40f135:	nop
  40f136:	xor    ebp,DWORD PTR [edx]
  40f138:	cmp    eax,0x8b488f06
  40f13d:	ss call 0x6d3c883a
  40f143:	mov    ecx,0x47ac2323
  40f148:	push   0x34
  40f14a:	xlat   BYTE PTR ds:[ebx]
  40f14b:	test   al,0x6a
  40f14d:	retf   
  40f14e:	ss data16 sahf 
  40f151:	js     0x40f0e2
  40f153:	je     0x40f2d1
  40f159:	mov    eax,DWORD PTR [ebp-0x8]
  40f15c:	jmp    0x40f2c6
  40f161:	lods   eax,DWORD PTR ds:[esi]
  40f162:	ret    0xcc29
  40f165:	jno    0x40f15a
  40f167:	ins    DWORD PTR es:[edi],dx
  40f168:	popa   
  40f169:	fdivr  DWORD PTR [ecx]
  40f16b:	xchg   ecx,eax
  40f16c:	test   DWORD PTR [ebp+0x1f],ebx
  40f16f:	in     al,0xd5
  40f171:	mov    ds:0xc37070aa,eax
  40f176:	jg     0x40f1e8
  40f178:	jo     0x40f163
  40f17a:	jp     0x40f127
  40f17c:	aam    0x95
  40f17e:	in     eax,dx
  40f17f:	(bad)
  40f182:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f183:	add    ebx,DWORD PTR [si]
  40f186:	mov    esi,0xa2b8eaec
  40f18b:	rcl    DWORD PTR [eax+0x30],1
  40f18e:	adc    edi,DWORD PTR [edx+0x5bdd9f60]
  40f194:	out    0x2a,eax
  40f196:	mov    dl,0xe3
  40f198:	dec    ebx
  40f199:	call   FWORD PTR [edx-0x20]
  40f19c:	jmp    0xe02c:0x47424898
  40f1a3:	(bad)  
  40f1a4:	sbb    al,0x4
  40f1a6:	mov    ch,0x8f
  40f1a8:	outs   dx,BYTE PTR ds:[esi]
  40f1a9:	pusha  
  40f1aa:	inc    esi
  40f1ab:	xor    BYTE PTR [eax],cl
  40f1ad:	mov    eax,ds:0x3d60e8bd
  40f1b2:	pop    esp
  40f1b3:	add    al,0x36
  40f1b5:	xchg   edi,eax
  40f1b6:	or     DWORD PTR [edi+ebx*4+0x7a],esi
  40f1ba:	mov    DWORD PTR [edx+ebp*1],edx
  40f1bd:	or     eax,0xb06aa54d
  40f1c2:	add    eax,0xb672652e
  40f1c7:	dec    ebx
  40f1c8:	mov    dh,0x29
  40f1ca:	and    bl,al
  40f1cc:	imul   ebx,DWORD PTR [ecx-0x49ab52ad],0x59a0bc97
  40f1d6:	dec    ecx
  40f1d7:	pop    ebp
  40f1d8:	dec    eax
  40f1d9:	mov    bh,0xf4
  40f1db:	repnz mov eax,ds:0x7a8cc49d
  40f1e1:	inc    edx
  40f1e2:	mov    ah,0xbe
  40f1e4:	dec    edi
  40f1e5:	loope  0x40f1e1
  40f1e7:	xchg   esp,eax
  40f1e8:	xrelease mov BYTE PTR fs:[ecx],bl
  40f1ec:	cs mov edx,0xd419bc68
  40f1f2:	jns    0x40f20d
  40f1f4:	xchg   ebx,eax
  40f1f5:	outs   dx,BYTE PTR ds:[esi]
  40f1f6:	scas   eax,DWORD PTR es:[edi]
  40f1f7:	push   edx
  40f1f8:	or     al,0xb5
  40f1fa:	(bad)  
  40f1fb:	mov    ebp,0xe7544fde
  40f200:	jne    0x40f1d1
  40f202:	push   0xfdc4af8d
  40f207:	daa    
  40f208:	gs mov ebx,0x3a1437e6
  40f20e:	adc    cl,BYTE PTR [ecx-0x65d1580]
  40f214:	pop    ss
  40f215:	ds (bad) 
  40f217:	test   al,0x61
  40f219:	leave  
  40f21a:	retf   0x178c
  40f21d:	xchg   DWORD PTR [esp+edx*1],ecx
  40f220:	sbb    BYTE PTR [edx],dh
  40f222:	cmc    
  40f223:	jb     0x40f1ad
  40f225:	mov    esi,0x5b6565a1
  40f22a:	sar    BYTE PTR [ebx],cl
  40f22c:	pop    edi
  40f22d:	(bad)  
  40f22e:	in     al,0xfa
  40f230:	xchg   ebp,eax
  40f231:	and    DWORD PTR [edx-0xa],0xa259c5d
  40f238:	pushf  
  40f239:	in     al,0xde
  40f23b:	std    
  40f23c:	nop
  40f23d:	sub    esp,DWORD PTR [edi-0x59]
  40f240:	mov    esp,0xe9c2afff
  40f245:	cmp    BYTE PTR [ebx+ebx*2],bh
  40f248:	imul   DWORD PTR [edi+0x6c]
  40f24b:	mov    eax,ds:0x9c1698c6
  40f250:	idiv   BYTE PTR [ebx+0x7f4b5da0]
  40f256:	outs   dx,DWORD PTR ds:[esi]
  40f257:	mov    al,0xe1
  40f259:	or     BYTE PTR [edi],bh
  40f25b:	pop    es
  40f25c:	jl     0x40f260
  40f25e:	push   0x7155570d
  40f263:	dec    edi
  40f264:	retf   
  40f265:	stc    
  40f266:	frstor [ecx-0x40982a68]
  40f26c:	mov    edi,0xb12a3b2b
  40f271:	adc    edx,DWORD PTR [esi]
  40f273:	mov    ds:0x54b25060,eax
  40f278:	mov    ebp,0xab6fc05b
  40f27d:	cmp    al,0x57
  40f27f:	cs inc ebp
  40f281:	mov    cl,0x8d
  40f283:	adc    al,0xef
  40f285:	mov    al,ds:0x89aa51c4
  40f28a:	fisttp QWORD PTR [ebx-0x5f21375e]
  40f290:	test   BYTE PTR [edi],cl
  40f292:	push   ss
  40f293:	jae    0x40f27e
  40f295:	stos   BYTE PTR es:[edi],al
  40f296:	stos   BYTE PTR es:[edi],al
  40f297:	xchg   BYTE PTR [ebp-0x23],ch
  40f29a:	mov    dl,0x45
  40f29c:	lahf   
  40f29d:	icebp  
  40f29e:	push   edx
  40f29f:	mov    dh,0xe
  40f2a1:	pop    esi
  40f2a2:	xor    edx,DWORD PTR [ebx+0x56]
  40f2a5:	aas    
  40f2a6:	xor    eax,0x7c559fa
  40f2ab:	inc    esp
  40f2ac:	fdiv   st,st(3)
  40f2ae:	loop   0x40f24c
  40f2b0:	inc    esp
  40f2b1:	inc    ebp
  40f2b2:	in     al,dx
  40f2b3:	xchg   esi,eax
  40f2b4:	mov    esp,0x947a9557
  40f2b9:	in     al,dx
  40f2ba:	addr16 mov edx,ebx
  40f2bd:	or     eax,0x642478f9
  40f2c2:	push   edi
  40f2c3:	imul   esp,DWORD PTR [ecx-0x65],0x1e8900c7
  40f2ca:	xor    al,0x60
  40f2cc:	jmp    0x40f7b6
  40f2d1:	mov    eax,DWORD PTR [ebp+0x8]
  40f2d4:	mov    ecx,DWORD PTR [ebp-0x8]
  40f2d7:	xor    eax,esi
  40f2d9:	add    eax,edi
  40f2db:	cmp    DWORD PTR [ecx],eax
  40f2dd:	je     0x40f79e
  40f2e3:	mov    ecx,DWORD PTR [ebp-0x18]
  40f2e6:	jmp    0x40f450
  40f2eb:	dec    ebx
  40f2ec:	int3   
  40f2ed:	cmp    esi,ecx
  40f2ef:	mov    ecx,0x99494bcd
  40f2f4:	add    dh,ch
  40f2f6:	rcr    bl,1
  40f2f8:	cmp    ax,WORD PTR [ecx]
  40f2fb:	jbe    0x40f2a6
  40f2fd:	jo     0x40f36f
  40f2ff:	ret    
  40f300:	jg     0x40f372
  40f302:	jo     0x40f312
  40f304:	in     eax,0x8a
  40f306:	adc    eax,0x9d7aa643
  40f30b:	shr    BYTE PTR [ecx-0x3874f290],cl
  40f311:	pop    ecx
  40f312:	adc    eax,0xece4701c
  40f317:	loop   0x40f2bc
  40f319:	pop    edi
  40f31a:	adc    ebx,edi
  40f31c:	sub    ecx,DWORD PTR [esi]
  40f31e:	scas   eax,DWORD PTR es:[edi]
  40f31f:	js     0x40f329
  40f321:	push   es
  40f322:	adc    dl,BYTE PTR [ebp+0x31]
  40f325:	mov    edx,0xc1a28c44
  40f32a:	and    bl,cl
  40f32c:	popa   
  40f32d:	stos   DWORD PTR es:[edi],eax
  40f32e:	sar    BYTE PTR [edx],cl
  40f330:	add    dl,BYTE PTR [ebx-0x53168e1e]
  40f336:	neg    al
  40f338:	and    bl,dh
  40f33a:	inc    esp
  40f33b:	je     0x40f3a8
  40f33d:	jle    0x40f3be
  40f33f:	lods   eax,DWORD PTR ds:[esi]
  40f340:	inc    edi
  40f341:	stos   BYTE PTR es:[edi],al
  40f342:	in     al,dx
  40f343:	push   edi
  40f344:	jmp    0xc1414d62
  40f349:	out    0x30,al
  40f34b:	pop    esi
  40f34c:	je     0x40f3b5
  40f34e:	pop    eax
  40f34f:	jecxz  0x40f38f
  40f351:	ja     0x40f2fb
  40f353:	(bad)  
  40f354:	mov    edi,0x1bf4d5c1
  40f359:	loop   0x40f3bb
  40f35b:	cmp    eax,0xbeb2a4d4
  40f360:	jle    0x40f36b
  40f362:	jmp    0x784e:0xf7dde84e
  40f369:	mov    bh,ch
  40f36b:	ins    BYTE PTR es:[edi],dx
  40f36c:	mov    edx,0xb2cf17b6
  40f371:	xor    esi,DWORD PTR [edx-0x1a9a50fb]
  40f377:	push   0xf01c556b
  40f37c:	adc    ah,0x49
  40f37f:	mov    bl,0x6f
  40f381:	xor    esi,DWORD PTR [eax-0x66d72c4e]
  40f387:	dec    edi
  40f388:	or     dl,BYTE PTR [edx+0x2d]
  40f38b:	popf   
  40f38c:	mov    bl,0xf
  40f38e:	inc    ecx
  40f38f:	ret    0x56b6
  40f392:	cmc    
  40f393:	xchg   DWORD PTR [edx-0x52],ebp
  40f396:	add    DWORD PTR [ecx+0x7c3d59d7],edx
  40f39c:	popa   
  40f39d:	cmp    esp,ecx
  40f39f:	test   al,0x64
  40f3a1:	push   0x93c83435
  40f3a6:	dec    ebp
  40f3a7:	out    dx,al
  40f3a8:	inc    ebx
  40f3a9:	call   0xb63d:0x4c9806b1
  40f3b0:	adc    ah,BYTE PTR [edx+0x71]
  40f3b3:	adc    eax,0xaa259936
  40f3b8:	leave  
  40f3b9:	(bad)  
  40f3ba:	fst    QWORD PTR [edx]
  40f3bc:	stos   DWORD PTR es:[edi],eax
  40f3bd:	xchg   DWORD PTR ds:0x13f2f0e9,edi
  40f3c3:	dec    edx
  40f3c4:	js     0x40f378
  40f3c6:	aad    0xcb
  40f3c8:	call   esi
  40f3ca:	mov    ebp,0x7004b39
  40f3cf:	mov    ds:0x28cb82e0,al
  40f3d4:	pop    ecx
  40f3d5:	mov    dl,0xcf
  40f3d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f3d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f3d9:	ret    
  40f3da:	shl    BYTE PTR [ebp+0x34c02e5c],cl
  40f3e0:	cmp    ah,cl
  40f3e2:	imul   ebp,DWORD PTR [ebx],0x35
  40f3e5:	or     al,ch
  40f3e7:	fs add eax,0xbd2dc380
  40f3ed:	js     0x40f3d1
  40f3ef:	outs   dx,DWORD PTR ds:[esi]
  40f3f0:	arpl   WORD PTR [eax-0x163a8ee3],cx
  40f3f6:	adc    eax,0xefb898c
  40f3fb:	add    ecx,DWORD PTR [ebx-0xf]
  40f3fe:	adc    DWORD PTR [ecx-0x1d],ebp
  40f401:	loop   0x40f413
  40f403:	xchg   ebp,eax
  40f404:	cmc    
  40f405:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f406:	sbb    al,0xff
  40f408:	(bad)  
  40f409:	sub    al,0x69
  40f40b:	imul   ebx,DWORD PTR [ebx+0x4c043123],0x71530e75
  40f415:	test   BYTE PTR [ebp+0x7],0x4c
  40f419:	pop    ebx
  40f41a:	iret   
  40f41b:	xor    esi,DWORD PTR [edi+0x53]
  40f41e:	jnp    0x40f435
  40f420:	in     eax,0x8b
  40f422:	jbe    0x40f419
  40f424:	push   ecx
  40f425:	pushf  
  40f426:	ss ins BYTE PTR es:[edi],dx
  40f428:	sub    bl,dh
  40f42a:	push   edx
  40f42b:	add    DWORD PTR [eax],ebp
  40f42d:	loopne 0x40f449
  40f42f:	popa   
  40f430:	mov    edx,0x43d48c87
  40f435:	mov    ebx,0x78f093da
  40f43a:	jle    0x40f40d
  40f43c:	scas   al,BYTE PTR es:[edi]
  40f43d:	ror    ebx,0x7
  40f440:	ss jne 0x40f40a
  40f443:	sub    ebp,DWORD PTR [eax-0x1]
  40f446:	xor    al,0xa0
  40f448:	jno    0x40f44d
  40f44a:	daa    
  40f44b:	sbb    eax,DWORD PTR [esp+edx*8+0x458b3618]
  40f452:	clc    
  40f453:	jmp    0x40f5bd
  40f458:	inc    eax
  40f459:	gs ror ch,cl
  40f45c:	icebp  
  40f45d:	imul   edx,DWORD PTR [ebx+0x65],0x2966c4cb
  40f464:	lea    eax,[ebp-0x48c62eb5]
  40f46a:	jo     0x40f4dc
  40f46c:	ret    
  40f46d:	jg     0x40f4df
  40f46f:	jo     0x40f42a
  40f471:	push   eax
  40f472:	dec    esp
  40f473:	in     al,0x54
  40f475:	cmp    edi,esp
  40f477:	aas    
  40f478:	jo     0x40f454
  40f47a:	jnp    0x40f484
  40f47c:	xor    al,0x6
  40f47e:	jo     0x40f416
  40f480:	jbe    0x40f4c1
  40f482:	mov    dh,0xc0
  40f484:	cld    
  40f485:	mov    ah,0xd2
  40f487:	add    dl,BYTE PTR [eax]
  40f489:	in     eax,0xac
  40f48b:	imul   edx,DWORD PTR [eax],0xfffffff0
  40f48e:	fdivr  st,st(0)
  40f490:	mov    al,0x1c
  40f492:	and    eax,0x7a6bc8b7
  40f497:	add    ecx,DWORD PTR [ecx+0x16]
  40f49a:	push   cs
  40f49b:	push   cs
  40f49c:	mov    edi,DWORD PTR [ecx-0x7d]
  40f49f:	jne    0x40f47e
  40f4a1:	enter  0x13de,0x5e
  40f4a5:	xchg   ecx,eax
  40f4a6:	adc    eax,0x6b27962c
  40f4ab:	pop    edi
  40f4ac:	jb     0x40f42f
  40f4ae:	dec    ebp
  40f4af:	or     dl,BYTE PTR [edx+0x4d]
  40f4b2:	outs   dx,BYTE PTR ds:[esi]
  40f4b3:	inc    ecx
  40f4b4:	lds    edx,FWORD PTR [edx-0x80]
  40f4b7:	fild   WORD PTR cs:[edi-0x6b25b202]
  40f4be:	ins    DWORD PTR es:[edi],dx
  40f4bf:	jno    0x40f4da
  40f4c1:	cmp    BYTE PTR [ebx+eiz*2+0x7],ah
  40f4c5:	mov    ebp,0x70c11b11
  40f4ca:	cwde   
  40f4cb:	mov    ebx,0xc8d2245e
  40f4d0:	mov    al,0x19
  40f4d2:	test   BYTE PTR [edi+0xf93c404],dl
  40f4d8:	lea    edx,[ecx-0x333aa7bd]
  40f4de:	vpmadcsswd ymm8,ymm6,ymm2,YMMWORD PTR [edx-0x152536cc]
  40f4e8:	push   0xffffffb0
  40f4ea:	and    eax,DWORD PTR [ebx-0x3a]
  40f4ed:	dec    edx
  40f4ee:	adc    ebx,ebp
  40f4f0:	ror    BYTE PTR [ecx],1
  40f4f2:	ins    BYTE PTR es:[edi],dx
  40f4f3:	xchg   edi,eax
  40f4f4:	xchg   ecx,eax
  40f4f5:	mov    BYTE PTR [edx-0xc],bl
  40f4f8:	fisttp DWORD PTR [ecx+eax*4-0x699b1f1c]
  40f4ff:	xchg   ebp,eax
  40f500:	and    al,0x41
  40f502:	in     al,dx
  40f503:	or     BYTE PTR [esi],cl
  40f505:	inc    ecx
  40f506:	clc    
  40f507:	ins    BYTE PTR es:[edi],dx
  40f508:	push   edx
  40f509:	mov    al,0x9e
  40f50b:	popf   
  40f50c:	or     DWORD PTR [eax-0x6cffc466],0x9c83c190
  40f516:	(bad)  
  40f517:	sub    esi,DWORD PTR [ebp+0x7d]
  40f51a:	ret    
  40f51b:	push   cs
  40f51c:	imul   ebp,DWORD PTR [ebx+0x16],0xfffffff9
  40f520:	inc    eax
  40f521:	cwde   
  40f522:	aad    0x29
  40f524:	stos   BYTE PTR es:[edi],al
  40f525:	xchg   ebp,eax
  40f526:	mov    BYTE PTR [eax+0x7b9ed6d5],0xe3
  40f52d:	mov    ch,0x8
  40f52f:	mov    edx,0xc55b4555
  40f534:	out    dx,al
  40f535:	xchg   BYTE PTR ds:0x5da32d3c,dl
  40f53b:	clc    
  40f53c:	push   ecx
  40f53d:	mov    ah,0x78
  40f53f:	pusha  
  40f540:	add    DWORD PTR [edx-0x4],eax
  40f543:	addr16 inc ecx
  40f545:	(bad)  
  40f546:	dec    ecx
  40f547:	push   ecx
  40f548:	outs   dx,DWORD PTR ds:[esi]
  40f549:	push   esp
  40f54a:	aam    0xc6
  40f54c:	scas   al,BYTE PTR es:[edi]
  40f54d:	sub    al,0xb7
  40f54f:	xchg   BYTE PTR [ecx+0x30],al
  40f552:	std    
  40f553:	test   bh,dl
  40f555:	iret   
  40f556:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f558:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f559:	jmp    0x40f56f
  40f55b:	repnz pushf 
  40f55d:	adc    eax,0x1c87f185
  40f562:	cmp    dh,BYTE PTR [edi+ebx*4-0x5fd5f690]
  40f569:	ds (bad) 
  40f56b:	mov    bh,0x11
  40f56d:	xor    ebp,ecx
  40f56f:	sub    ebp,DWORD PTR cs:[esi+0x20]
  40f573:	loope  0x40f557
  40f575:	dec    edi
  40f576:	jne    0x40f51f
  40f578:	cli    
  40f579:	pop    edi
  40f57a:	mov    BYTE PTR [edx-0x80],cl
  40f57d:	push   ds
  40f57e:	and    BYTE PTR [ecx],0x58
  40f581:	push   es
  40f582:	jno    0x40f54a
  40f584:	cld    
  40f585:	jmp    0x5a1323fe
  40f58a:	hlt    
  40f58b:	dec    ecx
  40f58c:	int3   
  40f58d:	cli    
  40f58e:	xor    al,0xa7
  40f590:	jo     0x40f555
  40f592:	mov    ss,WORD PTR [eax]
  40f594:	ror    esp,1
  40f596:	or     eax,0x3381f624
  40f59b:	jnp    0x40f571
  40f59d:	test   DWORD PTR [eax-0x1a],esi
  40f5a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f5a1:	ins    DWORD PTR es:[edi],dx
  40f5a2:	ss pushf 
  40f5a4:	add    BYTE PTR [edi-0x41b1d525],0xe4
  40f5ab:	pop    esp
  40f5ac:	mov    DWORD PTR [edx-0x37804d58],ecx
  40f5b2:	push   0x264f7ce1
  40f5b7:	xor    dl,BYTE PTR [edx]
  40f5b9:	(bad)
  40f5bc:	jmp    0x8d3c:0x408b008b
  40f5c3:	or     al,0xcd
  40f5c5:	js     0x40f5c7
  40f5c7:	add    BYTE PTR [eax],al
  40f5c9:	add    eax,ecx
  40f5cb:	mov    ecx,DWORD PTR [ebp-0x8]
  40f5ce:	mov    ecx,DWORD PTR [ecx]
  40f5d0:	mov    eax,DWORD PTR [eax+ecx*1]
  40f5d3:	mov    DWORD PTR [ebp-0x20],eax
  40f5d6:	mov    eax,DWORD PTR [ebp+0x8]
  40f5d9:	xor    eax,esi
  40f5db:	add    eax,edi
  40f5dd:	mov    DWORD PTR [ebp-0x24],eax
  40f5e0:	mov    eax,DWORD PTR [ebp+0x8]
  40f5e3:	mov    ecx,DWORD PTR [ebp-0x20]
  40f5e6:	xor    eax,esi
  40f5e8:	add    eax,edi
  40f5ea:	cmp    ecx,eax
  40f5ec:	je     0x40f7b6
  40f5f2:	jmp    0x40f75c
  40f5f7:	pop    ebx
  40f5f8:	out    dx,al
  40f5f9:	dec    ebp
  40f5fa:	mov    bl,0x49
  40f5fc:	mov    bl,0x61
  40f5fe:	test   BYTE PTR [edx+0xc],0x5a
  40f602:	dec    ebx
  40f603:	mov    bh,0x6e
  40f605:	sti    
  40f606:	ja     0x40f594
  40f608:	mov    dh,0x70
  40f60a:	jo     0x40f5cf
  40f60c:	jg     0x40f67e
  40f60e:	jo     0x40f5d1
  40f610:	mov    dh,0x16
  40f612:	dec    esi
  40f613:	daa    
  40f614:	in     al,dx
  40f615:	cli    
  40f616:	inc    eax
  40f617:	sub    al,0xb5
  40f619:	and    al,0x7c
  40f61b:	cmp    ebp,DWORD PTR [eax-0x7ebd0f8e]
  40f621:	mov    ?,WORD PTR [esi+0x451beaff]
  40f627:	jge    0x40f60c
  40f629:	test   eax,0x635ce2f1
  40f62e:	dec    ebp
  40f62f:	cmc    
  40f630:	push   ebp
  40f631:	mov    esp,0x8f9ffa41
  40f636:	sub    BYTE PTR [ebx-0x7b],ch
  40f639:	pop    edx
  40f63a:	sub    ebp,DWORD PTR [ebx+0x8]
  40f63d:	inc    edi
  40f63e:	shl    BYTE PTR [ebp+0x2b],cl
  40f641:	jno    0x40f620
  40f643:	jg     0x40f64a
  40f645:	ins    BYTE PTR es:[edi],dx
  40f646:	push   0x4b
  40f648:	sub    eax,0x29a25fbc
  40f64d:	(bad)  
  40f64e:	jmp    0x40f63c
  40f650:	dec    eax
  40f651:	mov    ah,0xdf
  40f653:	push   ebx
  40f654:	and    cl,cl
  40f656:	scas   al,BYTE PTR es:[edi]
  40f657:	xor    al,0xfb
  40f659:	iret   
  40f65a:	nop
  40f65b:	jbe    0x40f6cb
  40f65d:	mov    bl,BYTE PTR ss:[eax]
  40f660:	add    eax,0x76ca1db8
  40f665:	dec    eax
  40f666:	fnstenv [ebx+0x40d908c3]
  40f66c:	xchg   esp,eax
  40f66d:	pop    esi
  40f66e:	cmp    bl,BYTE PTR [ecx+0x40]
  40f671:	mov    ecx,0xe60ede9d
  40f676:	out    0x5b,eax
  40f678:	ss mov edi,0xb46deecc
  40f67e:	mov    dh,0xfb
  40f680:	ins    DWORD PTR es:[edi],dx
  40f681:	and    DWORD PTR [edx-0x2b],eax
  40f684:	loope  0x40f6c7
  40f686:	add    DWORD PTR [ebx],0x653587b2
  40f68c:	mov    dl,0x78
  40f68e:	mov    ds:0x51b0252e,al
  40f693:	outs   dx,BYTE PTR ds:[esi]
  40f694:	jmp    FWORD PTR ds:0xbd0460db
  40f69a:	jbe    0x40f6ff
  40f69c:	jmp    0x1039:0xeac360e8
  40f6a3:	or     al,0xa6
  40f6a5:	sbb    DWORD PTR [ebp-0x1f912507],edi
  40f6ab:	xor    DWORD PTR [edi+0x75405d9],0x14
  40f6b2:	lods   eax,DWORD PTR ds:[esi]
  40f6b3:	sbb    eax,0xcde1fc8f
  40f6b8:	xor    eax,0x500831a4
  40f6bd:	adc    DWORD PTR [eax],0x1
  40f6c0:	call   0x8b79:0xd2e0d398
  40f6c7:	stc    
  40f6c8:	ja     0x40f6d2
  40f6ca:	push   es
  40f6cb:	push   eax
  40f6cc:	pop    ebx
  40f6cd:	mov    esp,0xb162d1c5
  40f6d2:	fs inc ebp
  40f6d4:	xlat   BYTE PTR ds:[ebx]
  40f6d5:	mov    dl,0x54
  40f6d7:	xor    eax,0x7424a26b
  40f6dc:	cmp    eax,0xda876ac2
  40f6e1:	popf   
  40f6e2:	or     BYTE PTR [ebp+eiz*1-0x3375cf6e],dl
  40f6e9:	sub    al,0x9
  40f6eb:	jp     0x40f69f
  40f6ed:	es pusha 
  40f6ef:	jbe    0x40f729
  40f6f1:	inc    edx
  40f6f2:	push   esi
  40f6f3:	push   ecx
  40f6f4:	nop
  40f6f5:	aad    0x66
  40f6f7:	dec    esp
  40f6f8:	and    dh,BYTE PTR [ecx]
  40f6fa:	dec    esp
  40f6fb:	cmp    ch,BYTE PTR [ebx-0x22]
  40f6fe:	add    bh,al
  40f700:	retf   0xf887
  40f703:	dec    ebx
  40f704:	outs   dx,DWORD PTR ds:[esi]
  40f705:	gs inc edx
  40f707:	inc    edx
  40f708:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f709:	or     al,0xdd
  40f70b:	outs   dx,DWORD PTR ds:[esi]
  40f70c:	cmp    eax,0x9cd6e6bf
  40f711:	adc    dl,BYTE PTR ds:[esi-0x27]
  40f715:	mov    DWORD PTR [ebp*2-0x514eb087],ebx
  40f71c:	add    al,0xc8
  40f71e:	and    ch,bh
  40f720:	or     DWORD PTR [ebx*1-0x16acb4a],esi
  40f727:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f728:	pop    esp
  40f729:	dec    eax
  40f72a:	dec    ebp
  40f72b:	leave  
  40f72c:	jle    0x40f6c4
  40f72e:	mov    al,ds:0xa2fa34ef
  40f733:	inc    ecx
  40f734:	fwait
  40f735:	mov    edx,0xaabd4df
  40f73a:	loop   0x40f797
  40f73c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f73d:	inc    esi
  40f73e:	dec    esp
  40f73f:	sahf   
  40f740:	cmp    bl,cl
  40f742:	jnp    0x40f76e
  40f744:	push   cs
  40f745:	cmp    ecx,DWORD PTR [eax+ebx*2-0x3294cd5e]
  40f74c:	(bad)  
  40f74d:	mov    edx,0x5341a08d
  40f752:	stos   BYTE PTR es:[edi],al
  40f753:	(bad)  
  40f754:	stc    
  40f755:	fs cwde 
  40f757:	mov    esp,0x5645c2aa
  40f75c:	mov    eax,DWORD PTR [ebp-0x8]
  40f75f:	mov    ecx,DWORD PTR [ebp-0x20]
  40f762:	add    ecx,DWORD PTR [eax]
  40f764:	mov    DWORD PTR [ebp-0x24],ecx
  40f767:	mov    eax,DWORD PTR [ebp-0x24]
  40f76a:	mov    ecx,DWORD PTR [ebp-0x8]
  40f76d:	mov    eax,DWORD PTR [eax+0xc]
  40f770:	mov    ecx,DWORD PTR [ecx]
  40f772:	mov    al,BYTE PTR [eax+ecx*1]
  40f775:	add    al,0x37
  40f777:	xor    al,0x47
  40f779:	cmp    al,0xc5
  40f77b:	je     0x40f792
  40f781:	mov    eax,DWORD PTR [ebp+0x8]
  40f784:	mov    ecx,DWORD PTR [ebp-0x8]
  40f787:	xor    eax,esi
  40f789:	add    eax,edi
  40f78b:	mov    DWORD PTR [ecx],eax
  40f78d:	jmp    0x40f7b6
  40f792:	xor    DWORD PTR [ebp-0xc],0x5fd8f
  40f799:	jmp    0x40f7b6
  40f79e:	mov    eax,DWORD PTR [ebp-0x8]
  40f7a1:	mov    ecx,DWORD PTR [ebp-0x1c]
  40f7a4:	mov    ecx,DWORD PTR [ecx]
  40f7a6:	mov    DWORD PTR [eax],ecx
  40f7a8:	mov    eax,DWORD PTR [ebp+0xc]
  40f7ab:	mov    eax,DWORD PTR [ebp+0x8]
  40f7ae:	push   DWORD PTR [ebp-0x8]
  40f7b1:	call   0x401000
  40f7b6:	mov    eax,DWORD PTR [ebp-0xc]
  40f7b9:	cmp    eax,ebx
  40f7bb:	je     0x40e863
  40f7c1:	mov    eax,DWORD PTR [ebp-0x8]
  40f7c4:	mov    eax,DWORD PTR [eax]
  40f7c6:	pop    edi
  40f7c7:	pop    esi
  40f7c8:	pop    ebx
  40f7c9:	leave  
  40f7ca:	ret    0x8
  40f7cd:	push   ebp
  40f7ce:	mov    ebp,esp
  40f7d0:	jmp    0x40fb9a
  40f7d5:	ds cmp al,0x79
  40f7d8:	adc    BYTE PTR [ecx-0x23],bh
  40f7db:	(bad)  
  40f7dd:	dec    ebp
  40f7de:	xor    eax,0xf4a946f3
  40f7e3:	pop    esi
  40f7e4:	or     bl,BYTE PTR [edi-0x4b]
  40f7e7:	jo     0x40f859
  40f7e9:	mov    ds:0x9e70707d,eax
  40f7ee:	inc    edx
  40f7ef:	xor    al,0xa9
  40f7f1:	jmp    0xf0446497
  40f7f6:	sbb    ebp,DWORD PTR [edx]
  40f7f8:	aad    0x70
  40f7fa:	fwait
  40f7fb:	jmp    0x1d49:0x9373b889
  40f802:	fidiv  WORD PTR [edi-0x6162fa38]
  40f808:	imul   esp,esi,0x146086f7
  40f80e:	enter  0x5216,0xb5
  40f812:	gs in  eax,dx
  40f814:	push   edi
  40f815:	std    
  40f816:	out    dx,al
  40f817:	jne    0x40f7c9
  40f819:	jo     0x40f878
  40f81b:	pusha  
  40f81c:	inc    eax
  40f81d:	mov    cs,WORD PTR [ecx-0x7d]
  40f820:	fsubr  DWORD PTR [ecx]
  40f822:	xchg   ecx,eax
  40f823:	or     DWORD PTR [eax],ecx
  40f825:	push   ebx
  40f826:	aad    0xc
  40f828:	inc    ebx
  40f829:	mov    bl,0x15
  40f82b:	xchg   DWORD PTR [esi-0x16],eax
  40f82e:	xchg   esi,eax
  40f82f:	fistp  DWORD PTR [ecx]
  40f831:	adc    eax,0x8a5f958a
  40f836:	outs   dx,BYTE PTR ds:[esi]
  40f837:	out    dx,eax
  40f838:	cmp    DWORD PTR [edi-0x6343c675],eax
  40f83e:	cld    
  40f83f:	or     al,0x71
  40f841:	mov    ds:0xdb7e2341,al
  40f846:	jl     0x40f8af
  40f848:	mov    bl,0x1
  40f84a:	sbb    ecx,DWORD PTR [edx+0x186bd6ed]
  40f850:	je     0x40f845
  40f852:	leave  
  40f853:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f854:	imul   edx,ebx,0xffffffe2
  40f857:	xor    BYTE PTR [ecx],ch
  40f859:	in     al,dx
  40f85a:	scas   al,BYTE PTR es:[edi]
  40f85b:	xor    al,0x92
  40f85d:	hlt    
  40f85e:	jle    0x40f7f5
  40f860:	cs push es
  40f862:	es mov edx,0x8c84a176
  40f868:	hlt    
  40f869:	lods   al,BYTE PTR ds:[esi]
  40f86a:	repz mov esi,0x1fc5284c
  40f870:	xchg   edx,eax
  40f871:	or     edx,DWORD PTR [eax]
  40f873:	repnz sbb eax,0xf40b9b67
  40f879:	loopne 0x40f872
  40f87b:	stc    
  40f87c:	lds    edi,FWORD PTR [edx-0x64138144]
  40f882:	sub    al,0xb8
  40f884:	dec    eax
  40f885:	inc    esp
  40f886:	inc    ebp
  40f887:	xchg   esi,eax
  40f888:	sbb    esi,DWORD PTR [edx-0x26]
  40f88b:	into   
  40f88c:	pop    es
  40f88d:	hlt    
  40f88e:	pop    edi
  40f88f:	xlat   BYTE PTR ss:[ebx]
  40f891:	aam    0xeb
  40f893:	sub    esi,eax
  40f895:	lahf   
  40f896:	mov    esi,0xbde99d34
  40f89b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f89c:	xchg   esp,ebx
  40f89e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f89f:	inc    eax
  40f8a0:	out    0x3,al
  40f8a2:	jo     0x40f8c0
  40f8a4:	and    ch,al
  40f8a6:	xlat   BYTE PTR ds:[ebx]
  40f8a7:	add    BYTE PTR [ebx+0x386a8c97],ch
  40f8ad:	xor    ah,BYTE PTR [esi]
  40f8af:	lods   eax,DWORD PTR ds:[esi]
  40f8b0:	push   edx
  40f8b1:	add    BYTE PTR [ecx],dh
  40f8b3:	sbb    BYTE PTR [eax+0x42a27c05],dh
  40f8b9:	or     BYTE PTR [eax+0x7824ae3],0x87
  40f8c0:	pop    ecx
  40f8c1:	leave  
  40f8c2:	and    edi,DWORD PTR [edi+edx*8+0x13900856]
  40f8c9:	cld    
  40f8ca:	xchg   BYTE PTR [esi],cl
  40f8cc:	sub    esp,DWORD PTR [ebx-0x67faefab]
  40f8d2:	ins    BYTE PTR es:[edi],dx
  40f8d3:	jge    0x40f917
  40f8d5:	ficomp DWORD PTR [edi]
  40f8d7:	fs mov dh,0xa9
  40f8da:	lods   al,BYTE PTR ds:[esi]
  40f8db:	and    esp,edi
  40f8dd:	mul    DWORD PTR [ecx]
  40f8df:	xor    eax,esi
  40f8e1:	lods   al,BYTE PTR ds:[esi]
  40f8e2:	int3   
  40f8e3:	sub    edi,esi
  40f8e5:	xchg   ebx,eax
  40f8e6:	jecxz  0x40f8a7
  40f8e8:	inc    ebp
  40f8e9:	mov    dh,0xa5
  40f8eb:	push   es
  40f8ec:	into   
  40f8ed:	and    al,0x3
  40f8ef:	push   ds
  40f8f0:	leave  
  40f8f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f8f2:	mov    edi,0xa754087
  40f8f7:	and    al,0xba
  40f8f9:	cmp    DWORD PTR [ebp-0x38af174a],ebp
  40f8ff:	sbb    ebp,DWORD PTR [ecx+0x39c5deca]
  40f905:	cmp    bl,BYTE PTR [eax+0x119a731e]
  40f90b:	fst    QWORD PTR cs:[esi]
  40f90e:	sbb    bl,BYTE PTR [edi-0x55]
  40f911:	pop    esp
  40f912:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f913:	mov    fs,esp
  40f915:	loop   0x40f92e
  40f917:	mov    ebx,0x6d0a76ae
  40f91c:	ficomp WORD PTR [eax+0x45d91f5d]
  40f922:	scas   al,BYTE PTR es:[edi]
  40f923:	add    eax,0x83c82106
  40f928:	fstp   TBYTE PTR [esi-0xec1bb3e]
  40f92e:	cmc    
  40f92f:	fcom   QWORD PTR [ebp+0x61ec0718]
  40f935:	mov    ds:0x7316b8b4,al
  40f93a:	pop    ecx
  40f93b:	xchg   ebx,eax
  40f93c:	out    0x56,eax
  40f93e:	push   es
  40f93f:	jo     0x40f920
  40f941:	jb     0x40f932
  40f943:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f944:	les    edi,FWORD PTR [ebp-0x1a]
  40f947:	ret    0xcf2f
  40f94a:	in     eax,0x4f
  40f94c:	push   eax
  40f94d:	aas    
  40f94e:	daa    
  40f94f:	or     BYTE PTR ds:0x70290331,0x8b
  40f956:	leave  
  40f957:	xchg   esi,eax
  40f958:	out    0x7e,eax
  40f95a:	(bad)  
  40f95b:	stc    
  40f95c:	jns    0x40f9ce
  40f95e:	(bad)  
  40f95f:	xchg   edx,eax
  40f960:	out    0x90,al
  40f962:	jmp    0x40f964
  40f964:	push   ecx
  40f965:	push   ebp
  40f966:	pushf  
  40f967:	adc    eax,0xbc68f52
  40f96c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f96d:	jp     0x40f931
  40f96f:	pop    esp
  40f970:	shl    BYTE PTR [eax],cl
  40f972:	shl    DWORD PTR [esi-0x6b],0x9d
  40f976:	push   edi
  40f977:	fisttp DWORD PTR [esp+eiz*2]
  40f97a:	fsub   QWORD PTR [esp+eiz*8]
  40f97d:	es push edx
  40f97f:	xchg   ebp,eax
  40f980:	jae    0x40f973
  40f982:	inc    ecx
  40f983:	data16 out dx,al
  40f985:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f986:	or     esp,edi
  40f988:	popf   
  40f989:	adc    dh,BYTE PTR [eax-0x61589e6]
  40f98f:	arpl   ax,dx
  40f991:	pop    esp
  40f992:	adc    al,0x98
  40f994:	pop    ebp
  40f995:	or     edx,ebx
  40f997:	xchg   edi,eax
  40f998:	jmp    0x84fa3a1d
  40f99d:	jmp    FWORD PTR ss:[edi]
  40f9a0:	xor    al,0x8f
  40f9a2:	stos   DWORD PTR es:[edi],eax
  40f9a3:	xchg   edi,eax
  40f9a4:	sbb    DWORD PTR [esi+0x1e],edi
  40f9a7:	mov    BYTE PTR [edi-0x4ae44d41],ch
  40f9ad:	nop
  40f9ae:	inc    edi
  40f9af:	cmp    esp,ebx
  40f9b1:	mov    dl,0xb8
  40f9b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f9b4:	xor    DWORD PTR [edx+0x222685ed],esi
  40f9ba:	add    al,0x80
  40f9bc:	mov    ds:0x12938bee,al
  40f9c1:	and    bl,BYTE PTR [ebp-0x5e]
  40f9c4:	xor    cl,BYTE PTR [ebx+edi*8+0x11af28ff]
  40f9cb:	mov    bh,0x9d
  40f9cd:	mov    dl,0x97
  40f9cf:	add    dh,BYTE PTR es:[esi-0x4e]
  40f9d3:	shl    BYTE PTR [ebx-0x4dcf5f4d],cl
  40f9d9:	inc    edx
  40f9da:	ins    BYTE PTR es:[edi],dx
  40f9db:	stos   BYTE PTR es:[edi],al
  40f9dc:	inc    ebx
  40f9dd:	out    0xe6,eax
  40f9df:	push   ebp
  40f9e0:	aas    
  40f9e1:	das    
  40f9e2:	out    0xb9,al
  40f9e4:	cmp    al,0xef
  40f9e6:	test   eax,0x266934e2
  40f9eb:	imul   esi,DWORD PTR [esi+0x37],0x2df4ac00
  40f9f2:	inc    edi
  40f9f3:	push   es
  40f9f4:	mov    cl,0x67
  40f9f6:	aas    
  40f9f7:	adc    BYTE PTR [edx-0x630493fc],bl
  40f9fd:	sar    BYTE PTR [ebx+0x57],1
  40fa00:	(bad)  
  40fa01:	jne    0x40f9ac
  40fa03:	repnz xchg ebp,eax
  40fa05:	push   esp
  40fa06:	jb     0x40fa01
  40fa08:	std    
  40fa09:	rdpmc  
  40fa0b:	xor    edx,DWORD PTR [edi]
  40fa0d:	loope  0x40fa43
  40fa0f:	adc    dh,0xab
  40fa12:	(bad)  [edx-0x6f27647]
  40fa18:	in     al,0x2a
  40fa1a:	fs sbb edx,ecx
  40fa1d:	xlat   BYTE PTR ds:[ebx]
  40fa1e:	ins    DWORD PTR es:[edi],dx
  40fa1f:	es mul ecx
  40fa22:	mov    ds:0x68d69ecb,al
  40fa27:	stos   DWORD PTR es:[edi],eax
  40fa28:	sub    cl,BYTE PTR [ecx+0x2e]
  40fa2b:	(bad)  
  40fa2c:	hlt    
  40fa2d:	xor    dh,BYTE PTR [ebx]
  40fa2f:	addr16 fs pusha 
  40fa32:	add    DWORD PTR ds:0x3a7794e4,0x5a
  40fa39:	xchg   ebp,eax
  40fa3a:	sbb    al,0xd4
  40fa3c:	into   
  40fa3d:	aad    0x6b
  40fa3f:	sar    BYTE PTR [ebp+0x67],1
  40fa42:	int    0x30
  40fa44:	adc    BYTE PTR [ebp-0x1e49c61c],0x3c
  40fa4b:	test   BYTE PTR [ecx+ebx*4+0xb],cl
  40fa4f:	cmp    dl,al
  40fa51:	das    
  40fa52:	dec    esi
  40fa53:	bound  esp,QWORD PTR [edi-0x57]
  40fa56:	push   ss
  40fa57:	mov    edx,0xa4f09b07
  40fa5c:	xor    dl,BYTE PTR [ebp+0x6e]
  40fa5f:	add    dl,dl
  40fa61:	test   ebp,0x1da2d097
  40fa67:	pop    edi
  40fa68:	cmp    al,0x66
  40fa6a:	and    BYTE PTR gs:[ecx],0x1
  40fa6e:	add    DWORD PTR [eax-0x21],ebx
  40fa71:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fa72:	pop    ss
  40fa73:	loop   0x40fa99
  40fa75:	push   ss
  40fa76:	push   ds
  40fa77:	and    eax,0x12bfc61e
  40fa7c:	jmp    0x2baeeded
  40fa81:	mov    ecx,?
  40fa83:	xor    edx,DWORD PTR [eax-0x1f]
  40fa86:	sub    ebx,edi
  40fa88:	cmp    al,0x20
  40fa8a:	add    edx,DWORD PTR [ecx+ecx*1]
  40fa8d:	fucom  st(3)
  40fa8f:	cmp    al,0x14
  40fa91:	pop    edx
  40fa92:	jl     0x40fa14
  40fa94:	inc    esi
  40fa95:	mov    dh,0xeb
  40fa97:	cmp    al,0x93
  40fa99:	sbb    DWORD PTR ds:0xf18100,0xbf3c1741
  40faa3:	mov    BYTE PTR [ebx-0x17],bh
  40faa6:	sbb    edi,DWORD PTR [ebx-0xdacb9d4]
  40faac:	pop    edi
  40faad:	adc    BYTE PTR [eax+0x70],ah
  40fab0:	add    BYTE PTR [edx],dl
  40fab2:	adc    eax,0x1a3719ab
  40fab7:	mov    eax,0x7e68c7b9
  40fabc:	cmp    esp,DWORD PTR [edx]
  40fabe:	cli    
  40fabf:	ret    
  40fac0:	in     al,dx
  40fac1:	(bad)  
  40fac2:	jmp    0xd832:0x6aa0c7b4
  40fac9:	dec    edi
  40faca:	push   ecx
  40facb:	mov    ebp,0xb64c7d1a
  40fad0:	ins    DWORD PTR es:[edi],dx
  40fad1:	lahf   
  40fad2:	mov    al,0xbc
  40fad4:	xchg   esi,eax
  40fad5:	and    dl,BYTE PTR [eax+0x33831dac]
  40fadb:	repz rol DWORD PTR [bp+si],0x97
  40fae0:	add    al,0x37
  40fae2:	push   0x8b088270
  40fae7:	das    
  40fae8:	call   0xe7408122
  40faed:	xor    bh,BYTE PTR [edx+ecx*2+0x2ff81eb2]
  40faf4:	sub    BYTE PTR [eax+eiz*8+0x3f],0x63
  40faf9:	and    ebx,DWORD PTR [edx]
  40fafb:	adc    ch,BYTE PTR [ebx]
  40fafd:	pop    edx
  40fafe:	add    esp,0x830da217
  40fb04:	test   eax,0x11b60c25
  40fb09:	xchg   BYTE PTR [edx],bl
  40fb0b:	and    ebx,0xa3c4672a
  40fb11:	fadd   QWORD PTR [esi]
  40fb13:	xor    eax,0xde35aa86
  40fb18:	es mov bh,0xc3
  40fb1b:	dec    edx
  40fb1c:	aad    0x36
  40fb1e:	xor    eax,0x92af832d
  40fb23:	jp     0x40fb7c
  40fb25:	jnp    0x40fba5
  40fb27:	dec    ebp
  40fb28:	mov    edx,esp
  40fb2a:	mul    BYTE PTR [ebx+0x542f4fb5]
  40fb30:	sbb    esp,esi
  40fb32:	adc    eax,0x1ffc7bbd
  40fb37:	loopne 0x40fb5e
  40fb39:	retf   0x1428
  40fb3c:	push   0xfffffffd
  40fb3e:	test   DWORD PTR [edx],esi
  40fb40:	mov    cl,0x26
  40fb42:	push   edi
  40fb43:	mov    WORD PTR [edi-0x52],ds
  40fb46:	nop
  40fb47:	loopne 0x40fae4
  40fb49:	xchg   ebp,esi
  40fb4b:	mov    DWORD PTR [edx-0x271f5613],esi
  40fb51:	xlat   BYTE PTR ds:[ebx]
  40fb52:	add    ecx,ebx
  40fb54:	hlt    
  40fb55:	push   ecx
  40fb56:	je     0x40fb85
  40fb58:	xchg   BYTE PTR [esi],dl
  40fb5a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fb5b:	das    
  40fb5c:	lds    esi,FWORD PTR [ebx+0x3e]
  40fb5f:	mov    ebx,0x53b66372
  40fb64:	shl    dh,0x46
  40fb67:	loop   0x40fb88
  40fb69:	pop    ebx
  40fb6a:	dec    ebp
  40fb6b:	popa   
  40fb6c:	in     al,dx
  40fb6d:	inc    ebx
  40fb6e:	cmp    edx,esp
  40fb70:	sbb    BYTE PTR [edi],0xf1
  40fb73:	add    eax,0x211cecbd
  40fb78:	cld    
  40fb79:	in     eax,0xc1
  40fb7b:	hlt    
  40fb7c:	push   0x5f
  40fb7e:	jns    0x40fb08
  40fb80:	mov    bl,0x86
  40fb82:	mov    dl,0xc5
  40fb84:	mov    ecx,0x166cc984
  40fb89:	cmp    ch,BYTE PTR [eax-0x27]
  40fb8c:	enter  0xf72a,0x35
  40fb90:	cli    
  40fb91:	add    al,0x2e
  40fb93:	jne    0x40fb8f
  40fb95:	ret    0x4f84
  40fb98:	cmp    eax,0x1df75133
  40fb9d:	and    al,0xe1
  40fb9f:	inc    edx
  40fba0:	add    cl,ch
  40fba2:	lds    eax,FWORD PTR [ebx]
  40fba4:	add    BYTE PTR [eax],al
  40fba6:	mov    ebp,ecx
  40fba8:	cli    
  40fba9:	xor    DWORD PTR [edx-0x648a4e8f],edi
  40fbaf:	test   BYTE PTR [ebp-0x51],0x85
  40fbb3:	or     DWORD PTR [ecx],edi
  40fbb5:	aad    0x82
  40fbb7:	mov    cl,0x70
  40fbb9:	jo     0x40fb5e
  40fbbb:	jge    0x40fc2d
  40fbbd:	jo     0x40fbeb
  40fbbf:	jge    0x40fc3d
  40fbc1:	ds mov dl,0x76
  40fbc4:	pop    edx
  40fbc5:	jns    0x40fbae
  40fbc7:	clc    
  40fbc8:	mov    BYTE PTR [eax],cl
  40fbca:	dec    edx
  40fbcb:	xor    BYTE PTR [ecx],ch
  40fbcd:	push   es
  40fbce:	pop    ss
  40fbcf:	mov    dh,0xf6
  40fbd1:	das    
  40fbd2:	enter  0xf469,0xf5
  40fbd6:	rol    DWORD PTR ds:0x273cf792,1
  40fbdc:	jnp    0x40fc2d
  40fbde:	dec    ebp
  40fbdf:	pop    ds
  40fbe0:	cmp    BYTE PTR [ebx+eax*4+0x30],bh
  40fbe4:	call   0x66d763b1
  40fbe9:	sbb    DWORD PTR [ebp-0x551e32ff],esp
  40fbef:	cmp    eax,DWORD PTR [ebp+0x73]
  40fbf2:	jmp    0x40fc21
  40fbf4:	inc    ebp
  40fbf5:	push   edi
  40fbf6:	cmp    al,0x2c
  40fbf8:	jge    0x40fbfe
  40fbfa:	xlat   BYTE PTR ds:[ebx]
  40fbfb:	xor    DWORD PTR [ebp+0xcc5f9bf],ecx
  40fc01:	in     eax,dx
  40fc02:	cdq    
  40fc03:	push   edi
  40fc04:	inc    edi
  40fc05:	mov    ecx,0xdd10a9a7
  40fc0a:	xlat   BYTE PTR ds:[ebx]
  40fc0b:	mov    al,ds:0xf6c18eaa
  40fc10:	xchg   ebx,eax
  40fc11:	fnstcw WORD PTR [esi-0x60be9310]
  40fc17:	mov    ebp,0x2b643052
  40fc1c:	ficom  WORD PTR [ebp+0x5a5f8a5f]
  40fc22:	mov    ah,0x9c
  40fc24:	js     0x40fc92
  40fc26:	aas    
  40fc27:	sub    al,0x80
  40fc29:	(bad)  
  40fc2b:	fsub   DWORD PTR [edx-0x42]
  40fc2e:	fcomp  DWORD PTR [ecx+0xe]
  40fc31:	mov    bh,0x5a
  40fc33:	fadd   QWORD PTR gs:[eax]
  40fc36:	mov    ds:0xe33ad01c,eax
  40fc3b:	imul   ecx,DWORD PTR [ebp-0x77],0xe7da479c
  40fc42:	cmp    edx,DWORD PTR [ebx+0x24]
  40fc45:	sbb    eax,0x94210e29
  40fc4a:	and    BYTE PTR [eax],0x3a
  40fc4d:	sub    al,0x11
  40fc4f:	sub    DWORD PTR [esi+0x48],0x9ba56c7b
  40fc56:	mov    bl,dl
  40fc58:	mov    dl,0xf8
  40fc5a:	add    cl,BYTE PTR [edx+0x373867fc]
  40fc60:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fc61:	into   
  40fc62:	outs   dx,DWORD PTR ds:[esi]
  40fc63:	ins    DWORD PTR es:[edi],dx
  40fc64:	fs cmc 
  40fc66:	fld    TBYTE PTR [eax]
  40fc68:	dec    esp
  40fc69:	aad    0x4
  40fc6b:	jae    0x40fbfb
  40fc6d:	das    
  40fc6e:	xchg   esi,eax
  40fc6f:	test   dl,bh
  40fc71:	in     eax,dx
  40fc72:	jge    0x40fc20
  40fc74:	(bad)  
  40fc75:	mov    ecx,0x14bac4c6
  40fc7a:	(bad)
  40fc7e:	sbb    edx,DWORD PTR [ebp+0x7ea2afe3]
  40fc84:	mov    ds:0xca235b1f,eax
  40fc89:	add    edi,esi
  40fc8b:	sub    cl,0x78
  40fc8e:	push   ss
  40fc8f:	ins    BYTE PTR es:[edi],dx
  40fc90:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fc92:	xor    eax,0x2831bd7b
  40fc97:	jne    0x40fc9f
  40fc99:	mov    dl,0x6f
  40fc9b:	out    0x2b,al
  40fc9d:	clc    
  40fc9e:	pop    esp
  40fc9f:	test   DWORD PTR [edx+0x5846e0a9],ebp
  40fca5:	cs cmp al,0x3f
  40fca8:	(bad)  
  40fca9:	popf   
  40fcaa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fcab:	jl     0x40fce0
  40fcad:	dec    eax
  40fcae:	(bad)  
  40fcaf:	adc    DWORD PTR [esi+0x5ecc6af8],edi
  40fcb5:	outs   dx,BYTE PTR ds:[esi]
  40fcb6:	retf   
  40fcb7:	jle    0x40fcd2
  40fcb9:	ds stos BYTE PTR es:[edi],al
  40fcbb:	sbb    dh,BYTE PTR [ebx]
  40fcbd:	cmp    ch,BYTE PTR [esi]
  40fcbf:	fisub  WORD PTR [edx]
  40fcc1:	ins    BYTE PTR es:[edi],dx
  40fcc2:	sub    BYTE PTR [ebx+0x27],dh
  40fcc5:	sbb    eax,0xd5b7afe6
  40fcca:	dec    ebx
  40fccb:	adc    eax,DWORD PTR [eax-0x528251c2]
  40fcd1:	fs ja  0x40fcf6
  40fcd4:	sti    
  40fcd5:	sbb    dh,BYTE PTR [esi-0x67]
  40fcd8:	or     dh,bh
  40fcda:	(bad)  
  40fcdb:	loopne 0x40fcf1
  40fcdd:	cmp    dl,BYTE PTR [ecx+0x5b529f67]
  40fce3:	cli    
  40fce4:	je     0x40fccb
  40fce6:	and    eax,DWORD PTR [edi+0x6b]
  40fce9:	dec    edi
  40fcea:	sbb    eax,0x17380a18
  40fcef:	and    ebp,DWORD PTR [ebx+0x5b]
  40fcf2:	mov    dh,0xe8
  40fcf4:	icebp  
  40fcf5:	aaa    
  40fcf6:	jl     0x40fcfb
  40fcf8:	xchg   ebp,eax
  40fcf9:	xchg   esi,eax
  40fcfa:	fild   QWORD PTR [edx-0x46663f28]
  40fd00:	lock popa 
  40fd02:	jno    0x40fd3a
  40fd04:	mov    ebp,0xa801fd41
  40fd09:	test   al,0xc4
  40fd0b:	dec    ebx
  40fd0c:	std    
  40fd0d:	add    cl,BYTE PTR [ebp-0x4a596cad]
  40fd13:	add    al,0x54
  40fd15:	sbb    ch,BYTE PTR [esi+ecx*8]
  40fd18:	inc    ecx
  40fd19:	call   0x7c349db0
  40fd1e:	lock mov ebx,0x2cfc870c
  40fd24:	and    eax,0xf8f557b0
  40fd29:	sub    DWORD PTR [ebx],esi
  40fd2b:	pop    ecx
  40fd2c:	loopne 0x40fd48
  40fd2e:	in     eax,dx
  40fd2f:	lods   eax,DWORD PTR ds:[esi]
  40fd30:	std    
  40fd31:	adc    eax,0xb7301aec
  40fd36:	mov    cl,0x5c
  40fd38:	ret    
  40fd39:	push   esi
  40fd3a:	inc    eax
  40fd3b:	aaa    
  40fd3c:	mov    al,0xd6
  40fd3e:	mov    fs,WORD PTR [ebp+edx*1-0x105a8592]
  40fd45:	push   esi
  40fd46:	mov    edi,0xfc95d6ed
  40fd4b:	push   ds
  40fd4c:	aam    0x5d
  40fd4e:	popa   
  40fd4f:	mov    al,ds:0x281bcf98
  40fd54:	das    
  40fd55:	mov    ds:0xb1086092,eax
  40fd5a:	push   ss
  40fd5b:	jne    0x40fd13
  40fd5d:	mov    ?,WORD PTR ds:0x4307d2ff
  40fd63:	xchg   DWORD PTR [esi+ebx*8+0x74],ebp
  40fd67:	dec    ecx
  40fd68:	push   edi
  40fd69:	mov    al,0x13
  40fd6b:	cmp    WORD PTR [ebp-0x54b982a9],si
  40fd72:	sub    DWORD PTR [edi],esi
  40fd74:	call   0xe32a5d5d
  40fd79:	dec    eax
  40fd7a:	jb     0x40fd8a
  40fd7c:	fldenv [ecx]
  40fd7e:	call   0x22c4:0x11609629
  40fd85:	or     DWORD PTR [esi+0x6359a0c],edi
  40fd8b:	add    BYTE PTR [esi+eiz*8],ch
  40fd8e:	add    BYTE PTR [edx-0x50],0x5c
  40fd92:	jle    0x40fd6d
  40fd94:	push   edx
  40fd95:	add    eax,0xaeaa07e1
  40fd9a:	mov    ah,0xa2
  40fd9c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fd9d:	and    dh,BYTE PTR [esi]
  40fd9f:	mov    ebp,0x79dab63
  40fda4:	cwde   
  40fda5:	mov    ch,al
  40fda7:	imul   eax,DWORD PTR [ebp-0x78],0x0
  40fdab:	inc    edx
  40fdac:	dec    esi
  40fdad:	jmp    0x40fde3
  40fdaf:	mov    ebp,0x8f9c9696
  40fdb4:	pop    esp
  40fdb5:	shl    DWORD PTR [edi-0x47],0x74
  40fdb9:	fimul  WORD PTR [edx]
  40fdbb:	test   al,0xe0
  40fdbd:	pusha  
  40fdbe:	mov    WORD PTR [ebp+0x56],?
  40fdc1:	dec    ecx
  40fdc2:	out    0x29,eax
  40fdc4:	add    BYTE PTR [ebx+0x5a],cl
  40fdc7:	push   cs
  40fdc8:	mov    eax,0xd0359a38
  40fdcd:	lods   al,BYTE PTR ds:[esi]
  40fdce:	mov    bh,0xb2
  40fdd0:	pop    ds
  40fdd1:	xor    eax,0xeaa22a86
  40fdd6:	mov    eax,ds:0x8a5eaf97
  40fddb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fddc:	cld    
  40fddd:	imul   eax,DWORD PTR [esi+0x2904700b],0x41
  40fde4:	mov    ebx,eax
  40fde6:	and    BYTE PTR [edi-0x2e],ch
  40fde9:	int3   
  40fdea:	mov    ch,0xdc
  40fdec:	ins    BYTE PTR es:[edi],dx
  40fded:	aad    0x8c
  40fdef:	mov    ecx,0x39d26824
  40fdf4:	adc    eax,0x7dec8eeb
  40fdf9:	cmp    BYTE PTR [edx+edx*4-0x30a64e77],bh
  40fe00:	dec    esi
  40fe01:	sub    al,0x40
  40fe03:	ins    DWORD PTR es:[edi],dx
  40fe04:	xchg   ebp,eax
  40fe05:	fwait
  40fe06:	and    DWORD PTR [eax-0x3231d48a],ebx
  40fe0c:	adc    BYTE PTR [ebx],cl
  40fe0e:	lock int 0xfb
  40fe11:	aam    0xba
  40fe13:	cli    
  40fe14:	adc    esp,DWORD PTR [edi-0x41]
  40fe17:	mov    ds:0x806c796a,eax
  40fe1c:	daa    
  40fe1d:	out    dx,eax
  40fe1e:	and    BYTE PTR [edi+0x72c8d0d0],al
  40fe24:	pop    ss
  40fe25:	sar    BYTE PTR [ebp-0xd680682],1
  40fe2b:	test   BYTE PTR [edx],ch
  40fe2d:	cdq    
  40fe2e:	mov    ah,0xa4
  40fe30:	cmp    eax,0xcacba701
  40fe35:	jnp    0x40fde4
  40fe37:	(bad)  
  40fe38:	out    dx,al
  40fe39:	cmp    BYTE PTR [edi],dh
  40fe3b:	pusha  
  40fe3c:	lds    ebp,FWORD PTR [edx+0x4e]
  40fe3f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fe40:	stos   DWORD PTR es:[edi],eax
  40fe41:	enter  0x663e,0xb8
  40fe45:	ret    0x1934
  40fe48:	xchg   ebp,eax
  40fe49:	push   esi
  40fe4a:	mov    eax,0x89bbc741
  40fe4f:	xchg   ecx,eax
  40fe50:	push   esp
  40fe51:	(bad)  
  40fe53:	out    0x79,eax
  40fe55:	cld    
  40fe56:	hlt    
  40fe57:	sub    eax,0xbb865a3
  40fe5c:	push   ebp
  40fe5d:	cmp    ch,cl
  40fe5f:	pusha  
  40fe60:	test   al,0x57
  40fe62:	pusha  
  40fe63:	mov    edx,0xb4a59230
  40fe68:	jae    0x40fea0
  40fe6a:	fist   DWORD PTR [esi+0x779a750d]
  40fe70:	pop    edx
  40fe71:	mov    edi,0xb02eee89
  40fe76:	cmp    eax,0x6dedb29d
  40fe7b:	fdivp  st(3),st
  40fe7d:	and    ah,BYTE PTR [ecx+0x390fc421]
  40fe83:	das    
  40fe84:	adc    ebp,edx
  40fe86:	sbb    DWORD PTR [ebp-0x3a],eax
  40fe89:	fs mov cl,0xb
  40fe8c:	push   edi
  40fe8d:	int3   
  40fe8e:	sbb    ah,dl
  40fe90:	xchg   edi,eax
  40fe91:	cmp    al,0x11
  40fe93:	sub    DWORD PTR [edi-0x4c],edi
  40fe96:	lods   al,BYTE PTR ds:[esi]
  40fe97:	ja     0x40fe88
  40fe99:	fs sbb al,0xbc
  40fe9c:	out    0x23,eax
  40fe9e:	ja     0x40fed5
  40fea0:	pop    edx
  40fea1:	in     al,dx
  40fea2:	imul   edi,DWORD PTR [esi+eax*2-0x29],0x2a
  40fea7:	rcl    DWORD PTR ds:[esi-0x4c86eff3],1
  40feae:	xchg   ebp,eax
  40feaf:	xchg   esi,eax
  40feb0:	loopne 0x40fe36
  40feb2:	xor    DWORD PTR [edx+0x77],ebp
  40feb5:	(bad)  
  40feb6:	xchg   ecx,eax
  40feb7:	ror    BYTE PTR [ebp+0x7],0x98
  40febb:	or     ch,0xdc
  40febe:	sub    dl,bl
  40fec0:	or     al,0x47
  40fec2:	dec    ebx
  40fec3:	outs   dx,DWORD PTR ds:[esi]
  40fec4:	jb     0x40fee5
  40fec6:	or     eax,0xea6e1b63
  40fecb:	jge    0x40fe9d
  40fecd:	ror    DWORD PTR [esi+0xa],0x2b
  40fed1:	enter  0xc9a5,0xe4
  40fed5:	daa    
  40fed6:	test   al,bl
  40fed8:	mov    al,0xb1
  40feda:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fedb:	hlt    
  40fedc:	sub    BYTE PTR [eax+ebx*1],dh
  40fedf:	push   ebx
  40fee0:	pop    ss
  40fee1:	cmp    eax,0x8d5577b2
  40fee6:	mov    dl,al
  40fee8:	xor    esi,DWORD PTR [ebp+0x1d]
  40feeb:	cmp    eax,0x786d30db
  40fef0:	mov    ds:0x80d496ae,al
  40fef5:	call   0xf0558b0b
  40fefa:	dec    edi
  40fefb:	fchs   
  40fefd:	sbb    eax,0x56cfd108
  40ff02:	inc    esi
  40ff03:	cli    
  40ff04:	cmc    
  40ff05:	out    0x9,al
  40ff07:	(bad)  
  40ff09:	cmc    
  40ff0a:	xchg   ecx,eax
  40ff0b:	mov    ecx,0x7b83064f
  40ff10:	sti    
  40ff11:	rol    DWORD PTR [esi+edi*2],1
  40ff14:	lds    eax,FWORD PTR [edx+0x41]
  40ff17:	adc    esp,DWORD PTR [esi-0x1e7158c5]
  40ff1d:	rol    BYTE PTR [edx],0x5d
  40ff20:	in     al,dx
  40ff21:	aas    
  40ff22:	mov    DWORD PTR [ebx*4+0x5e2d2ff5],ebx
  40ff29:	lds    esi,FWORD PTR [esi+0x52a4744b]
  40ff2f:	(bad)  
  40ff30:	int    0x44
  40ff32:	call   0xf45d7271
  40ff37:	cmp    edx,DWORD PTR [ebx-0x1a36c8fd]
  40ff3d:	cld    
  40ff3e:	jmp    0xa8f06d32
  40ff43:	(bad)  
  40ff45:	xchg   esp,eax
  40ff46:	les    ebx,FWORD PTR [eax]
  40ff48:	push   edi
  40ff49:	jno    0x40ffa0
  40ff4b:	or     ecx,DWORD PTR [ebx+esi*1]
  40ff4e:	sub    DWORD PTR [esp+eiz*8-0x17],ecx
  40ff52:	jg     0x40ffa8
  40ff54:	push   0x43
  40ff56:	cmp    eax,0x32d8f690
  40ff5b:	inc    edx
  40ff5c:	rcr    BYTE PTR [ebx+0x2c249c73],1
  40ff62:	and    al,0xc3
  40ff64:	or     BYTE PTR [edi],ah
  40ff66:	mov    cl,0x45
  40ff68:	xchg   ebp,eax
  40ff69:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ff6a:	xchg   bh,al
  40ff6c:	inc    ebp
  40ff6d:	cld    
  40ff6e:	xor    DWORD PTR [ebp+0x458bf89c],eax
  40ff74:	or     BYTE PTR [edx+0x3405c700],cl
  40ff7a:	loope  0x40ffbe
  40ff7c:	add    BYTE PTR [edx],bh
  40ff7e:	cmp    al,BYTE PTR [eax]
  40ff80:	add    BYTE PTR [edi+esi*1],al
  40ff83:	xor    DWORD PTR ds:0x42e6f7,0x42fd7e
  40ff8d:	xor    al,0x47
  40ff8f:	mov    DWORD PTR ds:0x42fcd1,0x1793
  40ff99:	cmp    al,0xc3
  40ff9b:	jne    0x410b7f
  40ffa1:	mov    eax,DWORD PTR [ebp+0x8]
  40ffa4:	mov    edx,DWORD PTR ds:0x42fd76
  40ffaa:	and    edx,DWORD PTR ds:0x42e6fb
  40ffb0:	mov    DWORD PTR ds:0x42fd76,edx
  40ffb6:	mov    ecx,DWORD PTR [ebp+0x8]
  40ffb9:	mov    DWORD PTR ds:0x42e703,0x1299
  40ffc3:	add    ecx,DWORD PTR [eax+0x3c]
  40ffc6:	mov    edx,0x7510855
  40ffcb:	jmp    0x410395
  40ffd0:	fcmovnbe st,st(4)
  40ffd2:	aam    0xc8
  40ffd4:	repz enter 0xf3db,0x5c
  40ffd9:	push   edx
  40ffda:	jae    0x40fff5
  40ffdc:	jb     0x41003d
  40ffde:	bound  ebx,QWORD PTR [edx+0x35]
  40ffe1:	mov    ebp,0x7da37070
  40ffe6:	jo     0x410058
  40ffe8:	mov    edi,0x907fd6d8
  40ffed:	jmp    DWORD PTR [eax+0x4b181bc8]
  40fff3:	gs mov cl,0x50
  40fff6:	psubsw mm2,QWORD PTR [esi-0x59]
  40fffa:	sbb    BYTE PTR [ecx-0x24],ah
  40fffd:	and    eax,0x5a76eddb
  410002:	mov    ch,0x5d
  410004:	fdiv   QWORD PTR [edx]
  410006:	out    0xa6,al
  410008:	or     DWORD PTR [edi],0xb
  41000b:	arpl   WORD PTR [edi+0x692f509f],dx
  410011:	pop    ds
  410012:	(bad)  
  410013:	sub    eax,0xcb211f89
  410018:	pushf  
  410019:	nop
  41001a:	sub    al,BYTE PTR [esi-0x196c952e]
  410020:	xchg   DWORD PTR [eax-0x5],ebx
  410023:	mov    cl,0xcc
  410025:	(bad)  
  410026:	mov    esp,0xe3de653f
  41002b:	xchg   esi,eax
  41002c:	repz bswap esi
  41002f:	mov    ah,0x52
  410031:	(bad)  
  410032:	xchg   ecx,eax
  410033:	rcr    DWORD PTR [ecx-0x4ee2077],0xfa
  41003a:	mov    bl,0x4b
  41003c:	xchg   esi,eax
  41003d:	dec    esi
  41003e:	loopne 0x410031
  410040:	add    eax,0x17d4891f
  410045:	mov    ah,0x44
  410047:	sar    BYTE PTR [esi+esi*8],cl
  41004a:	push   ebx
  41004b:	fnstcw WORD PTR [edi+ecx*8+0x28d44a7]
  410052:	pop    es
  410053:	lods   eax,DWORD PTR ds:[esi]
  410054:	jle    0x410084
  410056:	pop    ebx
  410057:	sub    ebx,DWORD PTR [edx-0x1d5c8a2c]
  41005d:	or     ebx,DWORD PTR [edi+0x488f72a6]
  410063:	js     0x410069
  410065:	pop    edi
  410066:	lea    esp,[edi+ecx*4-0x34]
  41006a:	cmp    al,0x77
  41006c:	imul   esp,DWORD PTR [ebx+0x192f90dd],0x1dce4300
  410076:	push   cs
  410077:	adc    eax,0x8b22c69
  41007c:	(bad)  
  41007d:	adc    al,0xcb
  41007f:	in     al,0x95
  410081:	pop    eax
  410082:	iret   
  410083:	hlt    
  410084:	pop    edi
  410085:	daa    
  410086:	mov    ah,0xcc
  410088:	es repnz mov ecx,0x6811f6a9
  41008f:	mov    bh,0xa7
  410091:	adc    ch,BYTE PTR [edx-0x730b5dd]
  410097:	rol    WORD PTR [esi],0x91
  41009b:	ret    0x9c9e
  41009e:	or     al,0x54
  4100a0:	cmp    eax,0xb44a85fd
  4100a5:	leave  
  4100a6:	cmp    eax,0xcb76d325
  4100ab:	lods   al,BYTE PTR ds:[esi]
  4100ac:	int3   
  4100ad:	in     eax,dx
  4100ae:	iret   
  4100af:	and    BYTE PTR [edx],0xc0
  4100b2:	clc    
  4100b3:	mov    DWORD PTR [edx],ebx
  4100b5:	call   0x30881ea5
  4100ba:	daa    
  4100bb:	popf   
  4100bc:	jmp    0x410127
  4100be:	jmp    0x42a4:0x83402401
  4100c5:	add    eax,0xef651a65
  4100ca:	mov    edi,0x97cdf825
  4100cf:	xchg   esp,eax
  4100d0:	loopne 0x4100c0
  4100d2:	push   0x2d1b4d3
  4100d7:	mov    eax,0xfe561a19
  4100dc:	mov    dh,0x34
  4100de:	test   eax,0x72bad50a
  4100e3:	jecxz  0x410087
  4100e5:	bound  ebp,QWORD PTR [esi-0x12e9ea7b]
  4100eb:	and    BYTE PTR [eax],bh
  4100ed:	jbe    0x4100cf
  4100ef:	mov    ds:0xe26a1bb8,al
  4100f4:	jo     0x41010f
  4100f6:	mov    esp,0x61725645
  4100fb:	(bad)  
  4100fc:	dec    ebx
  4100fd:	inc    ebp
  4100fe:	aad    0x65
  410100:	or     dh,BYTE PTR [ebx]
  410102:	lods   eax,DWORD PTR ds:[esi]
  410103:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410104:	cmp    eax,0x93f95e02
  410109:	cmp    dh,bh
  41010b:	mov    al,0x3b
  41010d:	fnstenv [eax]
  41010f:	out    dx,eax
  410110:	test   bl,dl
  410112:	mov    fs,WORD PTR [eax]
  410114:	mov    ds:0x15b2462e,eax
  410119:	out    0x4e,eax
  41011b:	inc    eax
  41011c:	push   ds
  41011d:	test   eax,0x4c1671f4
  410122:	push   ebx
  410123:	xor    al,0xd7
  410125:	je     0x410159
  410127:	popa   
  410128:	(bad)  
  41012a:	out    0x1c,eax
  41012c:	int3   
  41012d:	outs   dx,DWORD PTR ds:[esi]
  41012e:	jo     0x41010b
  410130:	inc    esp
  410131:	dec    edi
  410132:	add    DWORD PTR [ebp+0x60],esp
  410135:	mov    bh,dl
  410137:	mov    dl,al
  410139:	mov    ch,BYTE PTR [edi+0x3326c983]
  41013f:	jae    0x410132
  410141:	cmc    
  410142:	sub    edi,DWORD PTR [edi-0x2e]
  410145:	sub    eax,ebp
  410147:	and    al,0xd7
  410149:	fldenv [eax+0x5]
  41014c:	icebp  
  41014d:	ja     0x4101c1
  41014f:	mov    BYTE PTR [esi-0xf4a151a],ah
  410155:	in     al,dx
  410156:	pop    ebx
  410157:	das    
  410158:	shr    DWORD PTR [ebx-0x1],1
  41015b:	cmp    ecx,DWORD PTR [eax-0x41]
  41015e:	sar    DWORD PTR [edx],cl
  410160:	sbb    al,0x33
  410162:	rcr    edi,0x5a
  410165:	ins    DWORD PTR es:[edi],dx
  410166:	sub    DWORD PTR [ebp-0x72bbc5fb],eax
  41016c:	lods   al,BYTE PTR ds:[esi]
  41016d:	or     ah,dl
  41016f:	pop    ss
  410170:	idiv   BYTE PTR [ecx-0x42]
  410173:	loopne 0x4101e3
  410175:	je     0x410119
  410177:	loopne 0x410150
  410179:	push   eax
  41017a:	stos   BYTE PTR es:[edi],al
  41017b:	fwait
  41017c:	or     eax,0x5e3d6b58
  410181:	xor    eax,0xb583b875
  410186:	xchg   ebx,eax
  410187:	ds aad 0xd0
  41018a:	call   0x4bbe269
  41018f:	dec    ecx
  410190:	scas   al,BYTE PTR es:[edi]
  410191:	jmp    0x65dd:0x15521ada
  410198:	arpl   WORD PTR [ebx+0xf],sp
  41019b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41019c:	inc    ebx
  41019d:	fldcw  WORD PTR [ebp+0xe]
  4101a0:	xor    edx,DWORD PTR [edi-0x2d]
  4101a3:	stos   BYTE PTR es:[edi],al
  4101a4:	mov    ebp,0x3834a2eb
  4101a9:	mov    esi,DWORD PTR [ebx-0x111dd2fb]
  4101af:	leave  
  4101b0:	fldenv [esi-0x57a715ae]
  4101b6:	and    DWORD PTR [esi-0x5f161ae5],0x1d
  4101bd:	js     0x41023a
  4101bf:	ret    0x9eed
  4101c2:	adc    eax,DWORD PTR [ebp+0x56c125da]
  4101c8:	pushf  
  4101c9:	lods   al,BYTE PTR ds:[esi]
  4101ca:	add    eax,DWORD PTR [esi-0xa3a872c]
  4101d0:	pusha  
  4101d1:	mov    edi,0x5c133552
  4101d6:	sahf   
  4101d7:	push   esi
  4101d8:	dec    ecx
  4101d9:	dec    ebx
  4101da:	sbb    ebp,DWORD PTR [ebp+0x36]
  4101dd:	xor    al,0x6e
  4101df:	ffree  st(7)
  4101e1:	sub    ebx,DWORD PTR [ecx+0x1e1df715]
  4101e7:	pop    eax
  4101e8:	add    ebx,DWORD PTR [esi]
  4101ea:	xor    al,0x34
  4101ec:	call   0xa4fe960c
  4101f1:	dec    eax
  4101f2:	mov    al,0x52
  4101f4:	enter  0x488e,0xa6
  4101f8:	push   edx
  4101f9:	imul   ecx,eax,0xbc4cb2d1
  4101ff:	push   es
  410200:	hlt    
  410201:	jb     0x41024f
  410203:	pop    edi
  410204:	and    ecx,eax
  410206:	outs   dx,DWORD PTR ds:[esi]
  410207:	adc    al,0x87
  410209:	jnp    0x4101f3
  41020b:	mov    ebp,0xdb322d33
  410210:	mov    ds:0xfeb34cc2,eax
  410215:	jbe    0x410279
  410217:	imul   ecx,DWORD PTR [esi],0xffffffc8
  41021a:	test   DWORD PTR [edx],ebx
  41021c:	and    BYTE PTR [ebx+0x398550a3],ah
  410222:	loop   0x410273
  410224:	test   al,0x9a
  410226:	fisub  WORD PTR [edx+0x4b28a053]
  41022c:	in     eax,dx
  41022d:	mov    cl,BYTE PTR [ebp+0x3d]
  410230:	or     DWORD PTR [ebp+0x50],0xa797a091
  410237:	xchg   ecx,eax
  410238:	push   ebp
  410239:	rol    DWORD PTR [eax-0x43],cl
  41023c:	loopne 0x41025c
  41023e:	test   cl,ah
  410240:	add    DWORD PTR [eax-0x6257df83],ebx
  410246:	repnz nop
  410248:	hlt    
  410249:	sub    DWORD PTR [ebp+0x469575bf],edx
  41024f:	retf   0x148
  410252:	fbld   TBYTE PTR [ecx+0x1c]
  410255:	xor    BYTE PTR [edx*2-0x601e89c0],al
  41025c:	jp     0x4102c5
  41025e:	lock fwait
  410260:	add    BYTE PTR [edi+0x55],cl
  410263:	and    edx,ebp
  410265:	out    0xb6,al
  410267:	and    dl,BYTE PTR [eax]
  410269:	aas    
  41026a:	bound  eax,QWORD PTR [eax+edx*4-0x5f]
  41026e:	cmp    esi,DWORD PTR ds:0x66e70a06
  410274:	hlt    
  410275:	std    
  410276:	jbe    0x41023d
  410278:	cmp    BYTE PTR [esi+0x225dc512],dh
  41027e:	jno    0x410288
  410280:	es inc esi
  410282:	xchg   edi,eax
  410283:	adc    al,0x2e
  410285:	or     al,0x88
  410287:	leave  
  410288:	int3   
  410289:	(bad)  
  41028a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41028b:	mov    esi,0xf1d068f2
  410290:	arpl   WORD PTR [esi],bp
  410292:	pop    ecx
  410293:	aaa    
  410294:	xor    DWORD PTR [eiz*8+0x6b03e194],ebp
  41029b:	das    
  41029c:	rol    BYTE PTR [edx+0x12],cl
  41029f:	pushf  
  4102a0:	dec    eax
  4102a1:	cld    
  4102a2:	cmp    BYTE PTR [esi+0x6e],bh
  4102a5:	into   
  4102a6:	aas    
  4102a7:	push   0xffffffcb
  4102a9:	shl    edi,cl
  4102ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4102ac:	aaa    
  4102ad:	push   edi
  4102ae:	adc    edx,eax
  4102b0:	and    ecx,DWORD PTR [ecx+0x39]
  4102b3:	xchg   ecx,eax
  4102b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4102b5:	jg     0x410290
  4102b7:	jmp    0x5be3:0x45b75747
  4102be:	sub    edi,DWORD PTR [esi]
  4102c0:	inc    esi
  4102c1:	cli    
  4102c2:	je     0x410319
  4102c4:	stc    
  4102c5:	ror    BYTE PTR [edi],1
  4102c7:	cdq    
  4102c8:	dec    ebp
  4102c9:	mov    bh,0x51
  4102cb:	mov    ebx,0xfabb4e64
  4102d0:	aad    0xee
  4102d2:	fild   QWORD PTR [ecx+eax*2-0x5c]
  4102d6:	jg     0x410350
  4102d8:	ins    BYTE PTR es:[edi],dx
  4102d9:	pop    ss
  4102da:	daa    
  4102db:	js     0x4102d9
  4102dd:	iret   
  4102de:	cmp    BYTE PTR [ebp+0xbf86c8f],bl
  4102e4:	add    ah,0xa5
  4102e7:	rcr    BYTE PTR [edi+eiz*4-0x5c],cl
  4102eb:	js     0x41036c
  4102ed:	jne    0x410350
  4102ef:	adc    al,0xaa
  4102f1:	not    ch
  4102f3:	pop    es
  4102f4:	cld    
  4102f5:	outs   dx,DWORD PTR ds:[esi]
  4102f6:	push   edi
  4102f7:	inc    eax
  4102f8:	sahf   
  4102f9:	pop    ecx
  4102fa:	dec    ebp
  4102fb:	lea    eax,[eax]
  4102fd:	shr    DWORD PTR [esi+0x7f377cc0],0x75
  410304:	adc    bh,bh
  410306:	fs jmp 0x66582ac4
  41030c:	sbb    eax,0x318c4fe
  410311:	aas    
  410312:	add    DWORD PTR [esi-0x2b80cd8a],edi
  410318:	in     al,dx
  410319:	loopne 0x41036c
  41031b:	sub    al,0x15
  41031d:	sbb    bl,BYTE PTR [esi+0x20c898b5]
  410323:	fidiv  DWORD PTR [eax+0x53]
  410326:	outs   dx,DWORD PTR ds:[esi]
  410327:	cmc    
  410328:	mov    ebx,DWORD PTR [ebx-0x6a2d29b]
  41032e:	inc    ecx
  41032f:	pop    ds
  410330:	mov    dh,0x1a
  410332:	adc    DWORD PTR [ebp+0x22],ebx
  410335:	call   0xd8f3:0x2d719ee6
  41033c:	pop    ebp
  41033d:	inc    edx
  41033e:	lahf   
  41033f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410340:	jno    0x410366
  410342:	jmp    0x4102d5
  410344:	test   DWORD PTR [ebx+0x7c0aa02d],ecx
  41034a:	in     al,0x74
  41034c:	in     eax,0xe1
  41034e:	jae    0x410349
  410350:	cmp    esp,DWORD PTR [edi-0x49337478]
  410356:	push   cs
  410357:	or     al,0x23
  410359:	push   edx
  41035a:	add    DWORD PTR [ebx-0xa],eax
  41035d:	push   ebp
  41035e:	sahf   
  41035f:	pop    eax
  410360:	mov    ds:0x9ec56b89,eax
  410365:	mov    ebx,0x9cc57676
  41036a:	in     eax,dx
  41036b:	enter  0xd68d,0x6d
  41036f:	repnz dec ebp
  410371:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410372:	shr    BYTE PTR [esi],0x9b
  410375:	mov    edi,0x197db3cd
  41037a:	inc    ebx
  41037b:	push   ecx
  41037c:	push   0x578d5cde
  410381:	cmp    eax,0xf90f9aa4
  410386:	jne    0x41031d
  410388:	test   BYTE PTR [eax+0x4c43e718],0x3c
  41038f:	les    ebx,FWORD PTR [edx-0x3a6ac486]
  410395:	mov    DWORD PTR [ebp+0x8],ecx
  410398:	add    eax,0x2082
  41039d:	mov    eax,DWORD PTR [ebp-0x4]
  4103a0:	mov    ecx,DWORD PTR ds:0x42fd05
  4103a6:	add    ecx,DWORD PTR ds:0x42fd09
  4103ac:	mov    DWORD PTR ds:0x42fd05,ecx
  4103b2:	xor    eax,edx
  4103b4:	sub    DWORD PTR ds:0x42e11c,ebx
  4103ba:	push   esi
  4103bb:	sbb    ecx,ecx
  4103bd:	jmp    0x410787
  4103c2:	lods   al,BYTE PTR ds:[esi]
  4103c3:	das    
  4103c4:	mov    ds:0xaa91a114,al
  4103c9:	mov    bh,0x91
  4103cb:	call   0x4601:0x4a5dbab6
  4103d2:	pop    eax
  4103d3:	mov    edx,0x7da37070
  4103d8:	jo     0x41044a
  4103da:	pop    ss
  4103db:	loopne 0x4103f6
  4103dd:	(bad)  
  4103de:	adc    BYTE PTR [ebx],cl
  4103e0:	sub    BYTE PTR [esi+0x12],ch
  4103e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4103e4:	pop    edi
  4103e5:	mov    ds:0x48358705,al
  4103ea:	jbe    0x4103a0
  4103ec:	into   
  4103ed:	push   0xa5d2ccfb
  4103f2:	and    BYTE PTR [ebp+0x21],bh
  4103f5:	jmp    0x4103a5
  4103f7:	inc    esp
  4103f8:	pushf  
  4103f9:	outs   dx,DWORD PTR ds:[esi]
  4103fa:	out    dx,al
  4103fb:	fadd   QWORD PTR [ebx+0x4f]
  4103fe:	shl    DWORD PTR [ebx],cl
  410400:	popf   
  410401:	fwait
  410402:	test   eax,0x18c0831e
  410407:	int    0xd1
  410409:	add    BYTE PTR [ebx+0x2b4bf917],al
  41040f:	inc    esi
  410410:	stos   DWORD PTR es:[edi],eax
  410411:	test   al,0x20
  410413:	and    BYTE PTR [ebp-0x301bf4b],al
  410419:	in     eax,dx
  41041a:	iret   
  41041b:	jmp    0xf30f7a5a
  410420:	fsubr  st(6),st
  410422:	data16 fwait
  410424:	test   ch,al
  410426:	stos   BYTE PTR es:[edi],al
  410427:	fidivr WORD PTR [esi+eax*1]
  41042a:	jle    0x41048f
  41042c:	es loope 0x410475
  41042f:	rcr    DWORD PTR [esi+0x619d0e64],cl
  410435:	or     dl,BYTE PTR [ebp+0x18f54cd6]
  41043b:	dec    edx
  41043c:	sub    eax,0xa61d6ebc
  410441:	xchg   edi,eax
  410442:	add    eax,0xf086abfe
  410447:	stc    
  410448:	dec    esp
  410449:	cmp    edi,DWORD PTR [ecx]
  41044b:	dec    ebp
  41044c:	popf   
  41044d:	ficomp WORD PTR [edx-0x7e9eb45f]
  410453:	mov    ecx,0xa0d49a45
  410458:	mov    ds,WORD PTR ds:0xeac5cd10
  41045e:	in     eax,0x67
  410460:	scas   al,BYTE PTR es:[edi]
  410461:	jmp    0x10d0ec27
  410466:	ja     0x410402
  410468:	sti    
  410469:	inc    ebx
  41046a:	fnstenv [edi+0x22da071f]
  410470:	pop    es
  410471:	add    ebx,DWORD PTR [ebp-0x1310b0af]
  410477:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410478:	adc    al,0x1a
  41047a:	outs   dx,BYTE PTR ds:[esi]
  41047b:	repz call DWORD PTR [edx+0x6b8d695e]
  410482:	arpl   WORD PTR [ebx+ebx*2-0xe],di
  410486:	call   0x2756:0xadd8fbd1
  41048d:	shl    ecx,0x71
  410490:	dec    edx
  410491:	stos   BYTE PTR es:[edi],al
  410492:	aad    0x21
  410494:	mov    ch,dl
  410496:	mov    bl,0xcc
  410498:	test   eax,0x78ad90b0
  41049d:	enter  0xa7a0,0x18
  4104a1:	cmp    edx,DWORD PTR [ecx]
  4104a3:	sub    eax,0xb283caa2
  4104a8:	(bad)  
  4104a9:	fistp  DWORD PTR [esp+edi*4-0x7b]
  4104ad:	mov    dh,0x98
  4104af:	jne    0x410495
  4104b1:	(bad)  
  4104b2:	ss pop edi
  4104b4:	aam    0xc4
  4104b6:	xor    dl,bl
  4104b8:	imul   edi,DWORD PTR [ecx],0x9de3ed5d
  4104be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4104bf:	test   al,0x92
  4104c1:	xchg   ebp,eax
  4104c2:	cdq    
  4104c3:	adc    al,0x26
  4104c5:	xchg   edx,eax
  4104c6:	pop    ss
  4104c7:	xor    cl,cl
  4104c9:	inc    eax
  4104ca:	retf   0x3350
  4104cd:	pop    ds
  4104ce:	sbb    edi,esi
  4104d0:	pop    es
  4104d1:	xchg   ecx,eax
  4104d2:	sub    BYTE PTR [edx-0x129b2c32],0x90
  4104d9:	aaa    
  4104da:	mov    bh,al
  4104dc:	pop    esp
  4104dd:	cli    
  4104de:	je     0x410556
  4104e0:	cmp    esi,DWORD PTR [eax]
  4104e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4104e3:	pop    esp
  4104e4:	(bad)  
  4104e5:	xor    bh,cl
  4104e7:	test   BYTE PTR [edi],dl
  4104e9:	imul   ebx,eax,0x7dfaa40e
  4104ef:	inc    ebx
  4104f0:	xor    esi,DWORD PTR [ecx+0x53]
  4104f3:	jmp    0xa8c285fd
  4104f8:	scas   eax,DWORD PTR es:[edi]
  4104f9:	inc    edi
  4104fa:	mov    ds:0x7ed8e792,al
  4104ff:	adc    bl,BYTE PTR [ebx+edx*8+0x179a74a]
  410506:	jb     0x4104af
  410508:	imul   edi,DWORD PTR [ecx+edi*2],0x59721050
  41050f:	nop
  410510:	sub    eax,0x4a4b8f13
  410515:	inc    esi
  410516:	push   ecx
  410517:	jmp    0x410541
  410519:	adc    al,0xbc
  41051b:	sub    eax,0xa95b028e
  410520:	scas   eax,DWORD PTR es:[edi]
  410521:	loop   0x410509
  410523:	push   esp
  410524:	sti    
  410525:	xor    DWORD PTR [esi-0x293fde62],eax
  41052b:	push   0x46d62fb
  410530:	stos   DWORD PTR es:[edi],eax
  410531:	add    DWORD PTR [edi-0x7702f477],esp
  410537:	lods   al,BYTE PTR ds:[esi]
  410538:	ds pop ebx
  41053a:	clc    
  41053b:	call   0xd5db:0xba943cc7
  410542:	add    DWORD PTR [edx],edx
  410544:	mov    eax,0xc6888bea
  410549:	call   0xd70b3b95
  41054e:	inc    esp
  41054f:	sbb    edi,esi
  410551:	push   esp
  410552:	fnstsw WORD PTR [ebp-0x6e6bf0e3]
  410558:	push   esi
  410559:	mov    cs,WORD PTR [ecx-0x17]
  41055c:	cmp    ebp,eax
  41055e:	mov    edi,0xf8418d1
  410563:	out    0x9d,al
  410565:	icebp  
  410566:	xchg   ecx,eax
  410567:	push   0xffffffa1
  410569:	in     al,dx
  41056a:	xchg   edx,eax
  41056b:	push   es
  41056c:	jge    0x410510
  41056e:	cdq    
  41056f:	adc    eax,0x911100f4
  410574:	ja     0x41056d
  410576:	mov    esi,cs
  410578:	push   es
  410579:	and    esp,DWORD PTR [edi-0x4d]
  41057c:	fwait
  41057d:	outs   dx,DWORD PTR ds:[esi]
  41057e:	xchg   esi,eax
  41057f:	std    
  410580:	mov    ah,0x7
  410582:	jno    0x41058b
  410584:	jecxz  0x410605
  410586:	shr    DWORD PTR [esi-0x22],0xee
  41058a:	xchg   edx,eax
  41058b:	in     al,dx
  41058c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41058d:	pop    ebp
  41058e:	cs test al,0x41
  410591:	pop    ecx
  410592:	enter  0x951e,0xa8
  410596:	add    al,0x3
  410598:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410599:	mov    edx,ss
  41059b:	push   eax
  41059c:	aas    
  41059d:	lds    esp,FWORD PTR [edx]
  41059f:	push   ebp
  4105a0:	pop    ebp
  4105a1:	xor    DWORD PTR [ebp+0x8],ebx
  4105a4:	mov    BYTE PTR [esi+ebp*4+0x79d84d8f],bh
  4105ab:	rol    DWORD PTR [eax-0x7d],1
  4105ae:	fwait
  4105af:	test   DWORD PTR [ebx],edi
  4105b1:	(bad)  
  4105b2:	fld    DWORD PTR [esi-0x25]
  4105b5:	cli    
  4105b6:	iret   
  4105b7:	lods   al,BYTE PTR ds:[esi]
  4105b8:	int    0x19
  4105ba:	push   ecx
  4105bb:	or     DWORD PTR [ecx+0x70a2a4e5],ebx
  4105c1:	clc    
  4105c2:	popf   
  4105c3:	nop
  4105c4:	daa    
  4105c5:	popa   
  4105c6:	cmp    al,0x38
  4105c8:	pushf  
  4105c9:	fs in  eax,0x2
  4105cc:	cmp    ch,BYTE PTR [ebx-0xad30d57]
  4105d2:	inc    esi
  4105d3:	fisubr DWORD PTR [bx+si-0x2e7f]
  4105d8:	or     ebp,DWORD PTR [ecx+ebx*4+0x5a]
  4105dc:	sub    ch,bh
  4105de:	add    al,0x65
  4105e0:	push   0x1156a21c
  4105e5:	xor    ebp,esi
  4105e7:	xchg   esi,eax
  4105e8:	mov    ebp,DWORD PTR [eax+0x6b]
  4105eb:	arpl   WORD PTR [esi+edi*1],dx
  4105ee:	sbb    al,BYTE PTR [ebp+0x26dd1a19]
  4105f4:	inc    ecx
  4105f5:	dec    ecx
  4105f6:	jae    0x41062a
  4105f8:	call   0x5e84aec2
  4105fd:	and    BYTE PTR [ebx-0x76],dh
  410600:	or     dl,BYTE PTR [ebp-0x18]
  410603:	xchg   DWORD PTR [eax-0x50],esp
  410606:	xchg   ebx,eax
  410607:	xchg   DWORD PTR [edi],esi
  410609:	ins    BYTE PTR es:[edi],dx
  41060a:	pop    eax
  41060b:	fld    DWORD PTR [ebx]
  41060d:	dec    esi
  41060e:	pop    es
  41060f:	dec    edi
  410610:	imul   edx,eax,0x93977257
  410616:	in     eax,dx
  410617:	push   esi
  410618:	dec    esi
  410619:	inc    esi
  41061a:	test   al,0x3b
  41061c:	xor    eax,0xa6f129a7
  410621:	mov    eax,fs
  410623:	scas   al,BYTE PTR es:[edi]
  410624:	into   
  410625:	sbb    DWORD PTR [eax-0x6e],0xffffffae
  410629:	(bad)  
  41062a:	shl    BYTE PTR ds:0x3e718fcd,0x65
  410631:	push   ds
  410632:	mov    ah,0x86
  410634:	ins    DWORD PTR es:[edi],dx
  410635:	add    bh,bh
  410637:	jl     0x410626
  410639:	fld    QWORD PTR [edi+ebp*1-0x6853f27e]
  410640:	(bad)  
  410641:	fdivp  st(5),st
  410643:	mov    BYTE PTR [ecx-0x20049049],dl
  410649:	popa   
  41064a:	add    BYTE PTR [edi],dl
  41064c:	lods   al,BYTE PTR ds:[esi]
  41064d:	mov    dh,0xfd
  41064f:	out    dx,al
  410650:	scas   al,BYTE PTR es:[edi]
  410651:	xchg   esi,eax
  410652:	pop    es
  410653:	(bad)  
  410654:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410655:	aas    
  410656:	and    eax,0xaa66f41d
  41065b:	stos   BYTE PTR es:[edi],al
  41065c:	push   es
  41065d:	add    BYTE PTR gs:[ebx],dh
  410660:	jmp    0x67d7:0x71bb030b
  410667:	fisubr WORD PTR [eax-0x23271b5d]
  41066d:	daa    
  41066e:	xor    BYTE PTR [ecx+0x487aa186],al
  410674:	out    0x49,al
  410676:	(bad)  
  410677:	xchg   ebp,eax
  410678:	mov    dl,0x8f
  41067a:	fidiv  DWORD PTR gs:[ecx]
  41067d:	lahf   
  41067e:	dec    ecx
  41067f:	dec    edx
  410680:	stos   DWORD PTR es:[edi],eax
  410681:	shr    BYTE PTR [eax+ebp*2],0xa
  410685:	xchg   esi,eax
  410686:	add    DWORD PTR [ecx],0xffffff8d
  410689:	das    
  41068a:	out    dx,eax
  41068b:	stos   DWORD PTR es:[edi],eax
  41068c:	sahf   
  41068d:	xchg   edi,eax
  41068e:	loopne 0x4106ff
  410690:	pop    esi
  410691:	sbb    eax,0xc730114e
  410696:	test   BYTE PTR [ecx+0x35dbd35b],cl
  41069c:	pop    ds
  41069d:	das    
  41069e:	inc    edx
  41069f:	xor    DWORD PTR [ebx-0x45],esp
  4106a2:	xor    DWORD PTR [eax+0x59ff5259],ecx
  4106a8:	ret    0xe38d
  4106ab:	jl     0x4106f4
  4106ad:	jle    0x410728
  4106af:	inc    BYTE PTR [ecx-0x84e2043]
  4106b5:	hlt    
  4106b6:	(bad)  
  4106b7:	xor    eax,0x7c449bc3
  4106bc:	mov    esp,0x37e24da7
  4106c1:	push   ds
  4106c2:	xchg   BYTE PTR [edi],ch
  4106c4:	adc    eax,0xdb8b15a4
  4106c9:	xor    esi,DWORD PTR [ecx]
  4106cb:	loop   0x410714
  4106cd:	scas   al,BYTE PTR es:[edi]
  4106ce:	fstp   DWORD PTR [eax+0x33c45fcb]
  4106d4:	fisttp DWORD PTR [ebx]
  4106d6:	push   0x66
  4106d8:	cmc    
  4106d9:	lods   eax,DWORD PTR ds:[esi]
  4106da:	(bad)  
  4106db:	cmp    DWORD PTR [edi+0x4],ebp
  4106de:	inc    esp
  4106df:	icebp  
  4106e0:	mov    esp,0x933e4f9e
  4106e5:	ret    0x3728
  4106e8:	sub    dh,BYTE PTR ds:0x5a1ad879
  4106ee:	mov    esp,0xec362cf2
  4106f3:	aas    
  4106f4:	push   es
  4106f5:	pop    edi
  4106f6:	mov    ch,0xc5
  4106f8:	cmc    
  4106f9:	ins    BYTE PTR es:[edi],dx
  4106fa:	arpl   WORD PTR [edx-0x4e],cx
  4106fd:	shr    DWORD PTR [esp+esi*8+0x134bbf8a],1
  410704:	fstp   QWORD PTR [ecx]
  410706:	add    ecx,DWORD PTR [edi+0x1302386e]
  41070c:	fcom   QWORD PTR [eax+eiz*2]
  41070f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410710:	sub    ebx,DWORD PTR [esi+0x6f]
  410713:	inc    edi
  410714:	out    0xb4,al
  410716:	ret    
  410717:	stos   DWORD PTR es:[edi],eax
  410718:	loopne 0x410719
  41071a:	fcomp  DWORD PTR [esi-0x74]
  41071d:	popf   
  41071e:	clc    
  41071f:	out    dx,al
  410720:	xor    ebp,esi
  410722:	sbb    eax,0x58e5968e
  410727:	ror    DWORD PTR [eax+0x4e15776a],1
  41072d:	pop    ebx
  41072e:	cmp    al,0x5b
  410730:	cmp    eax,0x3f70a6af
  410735:	mov    WORD PTR [ebx+0x77],gs
  410738:	sub    bh,BYTE PTR [edi]
  41073a:	push   ebp
  41073b:	enter  0x28e9,0x55
  41073f:	jg     0x410707
  410741:	lods   al,BYTE PTR ds:[esi]
  410742:	adc    esi,esi
  410744:	dec    ebx
  410745:	and    DWORD PTR [ecx+0x7c777883],edi
  41074b:	mov    bh,0x23
  41074d:	dec    esp
  41074e:	imul   edi,DWORD PTR [edx-0x5508f3b],0xffffffcf
  410755:	mov    eax,ds:0x1d2c1cd4
  41075a:	das    
  41075b:	inc    ebx
  41075c:	pusha  
  41075d:	int    0xf3
  41075f:	xchg   edi,eax
  410760:	add    BYTE PTR [ebp-0x1e],cl
  410763:	pop    ebx
  410764:	enter  0xbb28,0xfd
  410768:	(bad)
  41076b:	shl    BYTE PTR ds:0x971f2960,1
  410771:	jns    0x410716
  410773:	sbb    eax,DWORD PTR [edi+0x70]
  410776:	fadd   DWORD PTR [edi-0x33421485]
  41077c:	dec    esp
  41077d:	test   BYTE PTR [eax+0x5563cf26],bl
  410783:	mov    bh,dl
  410785:	push   esi
  410786:	cdq    
  410787:	mov    esi,DWORD PTR [ebp+0x8]
  41078a:	sbb    ecx,0x2f26
  410790:	mov    ecx,0x32729c
  410795:	add    eax,ecx
  410797:	jmp    0x410b61
  41079c:	outs   dx,DWORD PTR ds:[esi]
  41079d:	mov    ebp,ds
  41079f:	or     al,0xd9
  4107a1:	imul   ebp,DWORD PTR [ecx+0x6b],0x19f67ea1
  4107a8:	lods   eax,DWORD PTR ds:[esi]
  4107a9:	jne    0x410771
  4107ab:	pop    ds
  4107ac:	mov    eax,DWORD PTR [esi+0x70]
  4107af:	jo     0x410754
  4107b1:	jge    0x410823
  4107b3:	jo     0x4107f1
  4107b5:	pushf  
  4107b6:	mov    DWORD PTR [esi+0x55d4a854],ebx
  4107bc:	jg     0x4107f7
  4107be:	outs   dx,BYTE PTR ds:[esi]
  4107bf:	fwait
  4107c0:	in     al,dx
  4107c1:	jo     0x4107a3
  4107c3:	mov    WORD PTR [eax],?
  4107c5:	rol    bl,cl
  4107c7:	push   ecx
  4107c8:	mov    bh,0xe5
  4107ca:	iret   
  4107cb:	std    
  4107cc:	jbe    0x410757
  4107ce:	aas    
  4107cf:	sub    DWORD PTR [ecx],ecx
  4107d1:	mov    al,ds:0x1a75d6fe
  4107d6:	jmp    0x8c7cf92b
  4107db:	xor    esi,ecx
  4107dd:	mov    bl,0xe5
  4107df:	push   0xffffff95
  4107e1:	ds aaa 
  4107e3:	aad    0x87
  4107e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4107e6:	or     al,0x56
  4107e8:	loop   0x41077c
  4107ea:	cmp    DWORD PTR [ebp-0x7b],eax
  4107ed:	mov    cl,0x1
  4107ef:	xlat   BYTE PTR ds:[ebx]
  4107f0:	jmp    0xa46bd937
  4107f5:	sub    DWORD PTR [ebx+0x9],esp
  4107f8:	neg    cl
  4107fa:	cmp    edi,esi
  4107fc:	and    esi,ebp
  4107fe:	out    0x4d,eax
  410800:	jmp    0xb3929e94
  410805:	or     ah,dh
  410807:	imul   ebx,DWORD PTR [esi+0x78],0xffffffb3
  41080b:	jecxz  0x410801
  41080d:	dec    ecx
  41080e:	int3   
  41080f:	inc    edx
  410810:	dec    eax
  410811:	fidiv  WORD PTR [edi]
  410813:	int    0xc2
  410815:	(bad)  
  410816:	dec    esi
  410817:	test   eax,0xe0fb4db5
  41081c:	iret   
  41081d:	xchg   ebp,eax
  41081e:	or     ch,BYTE PTR [edx+ebp*8-0x1fa23a4e]
  410825:	mov    ds:0xf3b5f58f,al
  41082a:	push   0x2f
  41082c:	mov    ds:0x8c52bd77,eax
  410831:	xor    eax,0x624b90ab
  410836:	xor    bl,ah
  410838:	sti    
  410839:	pop    ss
  41083a:	ror    DWORD PTR [eax-0x6a],cl
  41083d:	mov    ah,BYTE PTR [ecx-0x53]
  410840:	sbb    BYTE PTR [eax],al
  410842:	int3   
  410843:	dec    edi
  410844:	and    al,0xdf
  410846:	pusha  
  410847:	ss inc edx
  410849:	je     0x410804
  41084b:	xlat   BYTE PTR ds:[ebx]
  41084c:	fucom  st(3)
  41084e:	pop    esi
  41084f:	test   bh,al
  410851:	and    edi,DWORD PTR [edi+0x2cac7d45]
  410857:	ins    DWORD PTR es:[edi],dx
  410858:	fmulp  st(0),st
  41085a:	adc    DWORD PTR [ebx-0x43eb2956],eax
  410860:	dec    ebp
  410861:	dec    edi
  410862:	add    eax,0x24078866
  410867:	(bad)  
  410868:	rcl    esp,cl
  41086a:	addr16 sub esp,esi
  41086d:	jo     0x410856
  41086f:	add    bh,bl
  410871:	dec    esp
  410872:	xchg   esp,eax
  410873:	or     al,0x26
  410875:	pop    esi
  410876:	mov    cl,0x7f
  410878:	popa   
  410879:	hlt    
  41087a:	out    0x37,al
  41087c:	hlt    
  41087d:	sub    al,0x2e
  41087f:	xor    DWORD PTR [ebx],ebp
  410881:	xchg   BYTE PTR [ebx],bl
  410883:	cs xor al,al
  410886:	gs cmp al,0x67
  410889:	mov    eax,0xc465f234
  41088e:	inc    eax
  41088f:	int    0xbe
  410891:	test   DWORD PTR [esi-0x60],ebx
  410894:	xor    eax,DWORD PTR [edi]
  410896:	repnz mov cl,0x39
  410899:	leave  
  41089a:	les    ebp,FWORD PTR [eax+0x2426782a]
  4108a0:	adc    BYTE PTR [esi+eiz*2-0x31bf4810],0x90
  4108a8:	xor    DWORD PTR [eax-0x42],edi
  4108ab:	mov    dh,0xc0
  4108ad:	sbb    DWORD PTR [esi+eiz*4],0xbf05607f
  4108b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4108b5:	add    ah,bh
  4108b7:	push   es
  4108b8:	push   ss
  4108b9:	in     al,dx
  4108ba:	jl     0x4108de
  4108bc:	outs   dx,BYTE PTR ds:[esi]
  4108bd:	mov    ecx,0xb4cdf66a
  4108c2:	ins    BYTE PTR es:[edi],dx
  4108c3:	gs (bad) 
  4108c5:	push   0xffffffea
  4108c7:	aad    0x6f
  4108c9:	or     DWORD PTR [ebp+eax*1+0x37dca303],esp
  4108d0:	rol    eax,1
  4108d2:	add    BYTE PTR [edx-0x53d28c6f],al
  4108d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4108d9:	int    0x66
  4108db:	dec    edx
  4108dc:	cld    
  4108dd:	iret   
  4108de:	sub    ebx,edi
  4108e0:	enter  0xfae0,0xf5
  4108e4:	mov    DWORD PTR [ebx+0x58843524],eax
  4108ea:	scas   eax,DWORD PTR es:[edi]
  4108eb:	jns    0x410918
  4108ed:	mov    ch,0xf3
  4108ef:	dec    ecx
  4108f0:	loopne 0x410945
  4108f2:	mov    dh,ah
  4108f4:	xchg   BYTE PTR [eax],ch
  4108f6:	inc    ecx
  4108f7:	and    DWORD PTR [ecx],eax
  4108f9:	inc    edx
  4108fa:	push   ebx
  4108fb:	or     dl,dh
  4108fd:	retf   
  4108fe:	cmp    esp,DWORD PTR [ecx-0xb]
  410901:	ret    0xb9a3
  410904:	call   0x739abd63
  410909:	push   edi
  41090a:	sub    edx,ecx
  41090c:	xchg   edx,eax
  41090d:	or     BYTE PTR ds:0x1f641c01,0x12
  410914:	jno    0x4108d3
  410916:	shl    dh,0x38
  410919:	xor    eax,0x8bd5c215
  41091e:	and    dl,al
  410920:	ins    DWORD PTR es:[edi],dx
  410921:	lock inc edx
  410923:	and    al,BYTE PTR [edx+0x1d096306]
  410929:	comiss xmm0,DWORD PTR [ebx+esi*8+0x48]
  41092e:	xchg   esi,eax
  41092f:	jle    0x4109ac
  410931:	push   edi
  410932:	(bad)  
  410933:	fsubr  DWORD PTR [edx+0x23]
  410936:	scas   eax,DWORD PTR es:[edi]
  410937:	fistp  QWORD PTR [edx*8-0x3ff4c7b9]
  41093e:	cmp    BYTE PTR [ecx-0x4f1d6c20],0x65
  410945:	rcr    DWORD PTR [ebx+edi*8-0x472c350b],cl
  41094c:	mov    WORD PTR [ebp+0x6d7799f6],?
  410952:	sahf   
  410953:	mov    cl,0x6e
  410955:	adc    edi,esi
  410957:	mov    edi,0xbfa0b251
  41095c:	ret    
  41095d:	enter  0xee0a,0xa
  410961:	rol    BYTE PTR [ebp+0x694cccb8],cl
  410967:	fcomp  DWORD PTR [eax-0x68]
  41096a:	add    ecx,DWORD PTR [esi+0x3f]
  41096d:	cwde   
  41096e:	push   ss
  41096f:	add    BYTE PTR [ecx],dh
  410971:	aam    0x4c
  410973:	sbb    al,0x20
  410975:	sub    al,0xad
  410977:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410978:	ins    DWORD PTR es:[edi],dx
  410979:	mov    ecx,0x660a21e7
  41097e:	push   esp
  41097f:	arpl   WORD PTR [ebx],bx
  410981:	mov    ch,0xdc
  410983:	cmp    al,0x90
  410985:	push   ss
  410986:	jmp    0xb46:0xcd3cb4f6
  41098d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41098e:	mov    cr6,edx
  410991:	add    BYTE PTR [ebp+0x36],dh
  410994:	mov    dh,bh
  410996:	jns    0x41099e
  410998:	jmp    0xb4df83ab
  41099d:	jo     0x410988
  41099f:	mov    bl,0x93
  4109a1:	in     al,0x40
  4109a3:	pop    ds
  4109a4:	call   0xe93e:0x56930a2
  4109ab:	loopne 0x410a13
  4109ad:	pop    ecx
  4109ae:	imul   ecx,DWORD PTR [ebx],0xfffffff1
  4109b1:	fs gs inc ebx
  4109b4:	cmp    DWORD PTR [ebx],edi
  4109b6:	xor    al,0xde
  4109b8:	sti    
  4109b9:	mov    WORD PTR [edx-0x43],ss
  4109bc:	stos   DWORD PTR es:[edi],eax
  4109bd:	and    al,0x9d
  4109bf:	mov    bh,0x54
  4109c1:	jg     0x410953
  4109c3:	jno    0x4109c2
  4109c5:	out    dx,al
  4109c6:	(bad)  
  4109c7:	sahf   
  4109c8:	mov    ds:0x898d64c2,eax
  4109cd:	hlt    
  4109ce:	mov    ecx,0xef6a6c44
  4109d3:	enter  0x6cbf,0x8e
  4109d7:	mov    esi,0x1246ac70
  4109dc:	std    
  4109dd:	cmp    edx,esi
  4109df:	add    eax,0x1ec11a1c
  4109e4:	aas    
  4109e5:	xor    BYTE PTR [eax-0x1d],ah
  4109e8:	jns    0x4109fa
  4109ea:	add    ch,bh
  4109ec:	test   BYTE PTR [edi],ch
  4109ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4109ef:	shl    DWORD PTR [ecx+0x44],cl
  4109f2:	mov    dl,0xc5
  4109f4:	mov    ebx,0x25e4a1fb
  4109f9:	cmc    
  4109fa:	(bad)  
  4109fb:	jl     0x410a53
  4109fd:	imul   esi,DWORD PTR [edx],0x46
  410a00:	lods   eax,DWORD PTR ds:[esi]
  410a01:	jns    0x4109a4
  410a03:	mov    DWORD PTR ss:[edx+0x4daddbcd],edi
  410a0a:	push   edi
  410a0b:	clc    
  410a0c:	dec    ecx
  410a0d:	pop    ss
  410a0e:	sub    BYTE PTR [ecx+0x79a05fe1],cl
  410a14:	pop    edx
  410a15:	jo     0x410a45
  410a17:	cmp    DWORD PTR [edi],eax
  410a19:	addr16 mov bh,0xa5
  410a1c:	dec    esp
  410a1d:	pop    es
  410a1e:	ss jg  0x4109be
  410a21:	js     0x4109ef
  410a23:	das    
  410a24:	data16 cmc 
  410a26:	fild   QWORD PTR [eax]
  410a28:	retf   
  410a29:	xchg   esi,eax
  410a2a:	xor    al,0xff
  410a2c:	pop    ebx
  410a2d:	hlt    
  410a2e:	jp     0x410a1d
  410a30:	out    0x7c,al
  410a32:	jl     0x410a8e
  410a34:	or     dh,bl
  410a36:	or     al,0xb8
  410a38:	sbb    ch,dh
  410a3a:	and    BYTE PTR [ebx+esi*2+0x27],dl
  410a3e:	fdivr  QWORD PTR [esi-0x43]
  410a41:	push   ebp
  410a42:	mov    al,0xc5
  410a44:	xor    al,0xcd
  410a46:	mov    bl,0xda
  410a48:	mov    edx,0x879fcba8
  410a4d:	xor    BYTE PTR [ecx-0x60],dl
  410a50:	pusha  
  410a51:	adc    dh,BYTE PTR [eax+edx*1-0x34b3ae61]
  410a58:	dec    esi
  410a59:	scas   al,BYTE PTR es:[edi]
  410a5a:	leave  
  410a5b:	and    ebx,DWORD PTR [ebx]
  410a5d:	mov    esi,0xff63114f
  410a62:	adc    dh,BYTE PTR [ebx+0x2c257a7c]
  410a68:	fnstcw WORD PTR [edx]
  410a6a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410a6b:	pop    edi
  410a6c:	xchg   esi,eax
  410a6d:	sti    
  410a6e:	mov    ?,WORD PTR [ecx+0x0]
  410a71:	cmp    al,0xde
  410a73:	xor    DWORD PTR ss:[esi+esi*2+0x5962cbde],ebp
  410a7b:	push   0x2b
  410a7d:	or     ebx,DWORD PTR [esi]
  410a7f:	jno    0x410a2e
  410a81:	jne    0x410a37
  410a83:	js     0x410a9c
  410a85:	pop    ecx
  410a86:	fnsetpm(287 only) 
  410a88:	sbb    esi,edi
  410a8a:	fsub   DWORD PTR [esi-0x39]
  410a8d:	push   esp
  410a8e:	cmp    eax,0xae8b19d6
  410a93:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410a94:	add    al,0x55
  410a96:	sub    al,0x4f
  410a98:	nop
  410a99:	int    0x0
  410a9b:	test   eax,0x7eb6e6d8
  410aa0:	retf   
  410aa1:	in     eax,dx
  410aa2:	xchg   esi,eax
  410aa3:	dec    eax
  410aa4:	xchg   BYTE PTR [ecx],bl
  410aa6:	dec    ecx
  410aa7:	mov    eax,0xaae9c8a3
  410aac:	cmp    ch,BYTE PTR [ecx+0x7b]
  410aaf:	cli    
  410ab0:	stos   BYTE PTR es:[edi],al
  410ab1:	or     eax,0x1db5c184
  410ab6:	sbb    ecx,DWORD PTR [ebx-0x5a]
  410ab9:	int3   
  410aba:	or     eax,0xfb0d3924
  410abf:	ret    0x54b5
  410ac2:	jecxz  0x410aa5
  410ac4:	inc    edi
  410ac5:	xchg   BYTE PTR [ebx+0x1c777830],dh
  410acb:	sub    ch,BYTE PTR [ebx-0x704ae318]
  410ad1:	mov    cl,0x4a
  410ad3:	sub    al,0xac
  410ad5:	stos   DWORD PTR es:[edi],eax
  410ad6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410ad7:	pop    ebx
  410ad8:	pusha  
  410ad9:	clc    
  410ada:	jnp    0x410a8e
  410adc:	mov    ds:0xaca87983,al
  410ae1:	xchg   ecx,eax
  410ae2:	ror    BYTE PTR [edx],cl
  410ae4:	mov    es,WORD PTR [esi]
  410ae6:	out    dx,al
  410ae7:	jne    0x410a94
  410ae9:	dec    ebp
  410aea:	inc    ecx
  410aeb:	mov    eax,ds:0xe6674b0
  410af0:	sbb    ch,BYTE PTR [ebp+0x68]
  410af3:	or     ebx,DWORD PTR ds:0xd7fc27e0
  410af9:	call   FWORD PTR [esi+edi*4-0x6d03566d]
  410b00:	int    0xcc
  410b02:	mov    dh,0xf0
  410b04:	loope  0x410b18
  410b06:	xchg   edi,eax
  410b07:	mov    dh,ah
  410b09:	and    DWORD PTR ds:0x2b8d1742,ebx
  410b0f:	xor    al,0x6d
  410b11:	enter  0x145b,0xbe
  410b15:	or     eax,0x16712ec9
  410b1a:	js     0x410b62
  410b1c:	sbb    bl,dh
  410b1e:	sbb    DWORD PTR [ecx],0x3dc5dfd3
  410b24:	test   DWORD PTR [esi+0x1afc3dee],ebp
  410b2a:	sahf   
  410b2b:	pop    es
  410b2c:	mov    edx,0x554e73d3
  410b31:	mov    ?,WORD PTR [ebx+0x3db8f1c3]
  410b37:	sahf   
  410b38:	pop    es
  410b39:	cli    
  410b3a:	lods   eax,DWORD PTR ds:[esi]
  410b3b:	xlat   BYTE PTR ds:[ebx]
  410b3c:	js     0x410b4f
  410b3e:	mov    cs,WORD PTR [edx+0x13]
  410b41:	sub    al,0x74
  410b43:	sub    eax,0x38ad8f05
  410b48:	idiv   DWORD PTR [edx]
  410b4a:	(bad)  
  410b4b:	jp     0x410b7c
  410b4d:	mov    dl,0xd
  410b4f:	in     al,0xef
  410b51:	cmp    BYTE PTR [ebp+0x70],bh
  410b54:	outs   dx,DWORD PTR ds:[esi]
  410b55:	mov    eax,ds:0x76e3d579
  410b5a:	xchg   ebp,eax
  410b5b:	aaa    
  410b5c:	fs and al,0x1d
  410b5f:	mov    ecx,0x54463992
  410b64:	pop    esi
  410b65:	je     0x410b73
  410b6b:	mov    eax,DWORD PTR [ebp+0x8]
  410b6e:	jmp    0x410b8c
  410b73:	mov    eax,DWORD PTR [ebp-0x4]
  410b76:	xor    eax,edx
  410b78:	add    eax,ecx
  410b7a:	jmp    0x410b8c
  410b7f:	mov    eax,DWORD PTR [ebp-0x4]
  410b82:	xor    eax,0x7510855
  410b87:	add    eax,0x32729c
  410b8c:	leave  
  410b8d:	ret    0x4
  410b90:	push   ebp
  410b91:	mov    ebp,esp
  410b93:	jmp    0x410f98
  410b98:	outs   dx,DWORD PTR ds:[esi]
  410b99:	mov    WORD PTR ds:0x7191e994,cs
  410b9f:	jae    0x410bc2
  410ba1:	dec    esi
  410ba2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410ba3:	repz sbb cl,BYTE PTR [edx+0x24]
  410ba7:	inc    edx
  410ba8:	ds inc edx
  410baa:	jo     0x410c1c
  410bac:	pop    eax
  410bad:	jge    0x410c1f
  410baf:	jo     0x410b65
  410bb1:	mov    ebx,0x9eb74300
  410bb6:	into   
  410bb7:	outs   dx,DWORD PTR ds:[esi]
  410bb8:	push   ebp
  410bb9:	mov    al,0x2d
  410bbb:	jae    0x410c2c
  410bbd:	retf   
  410bbe:	test   al,0xc
  410bc0:	loope  0x410c01
  410bc2:	xchg   edx,eax
  410bc3:	push   ss
  410bc4:	and    DWORD PTR [edx+0x297a0c71],ebx
  410bca:	mov    edi,DWORD PTR [ebx-0xd]
  410bcd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410bce:	mov    bl,0x57
  410bd0:	loope  0x410bdf
  410bd2:	add    BYTE PTR [ebx+0x15],bh
  410bd5:	stos   DWORD PTR es:[edi],eax
  410bd6:	lock leave 
  410bd8:	sbb    eax,0xae8e375a
  410bdd:	repnz cld 
  410bdf:	sub    esi,DWORD PTR [ebp-0x2522ac4a]
  410be5:	cmp    DWORD PTR [edx+0x21],0x27249cf
  410bec:	xor    al,0xa0
  410bee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410bef:	sub    al,dh
  410bf1:	inc    eax
  410bf2:	mov    ebx,0x5fb9d5a8
  410bf7:	fisub  WORD PTR [edi+0x3b]
  410bfa:	inc    edx
  410bfb:	add    al,0x50
  410bfd:	mov    ah,0x37
  410bff:	addr16 ja 0x410c39
  410c02:	adc    cl,BYTE PTR [ecx+0x2695929]
  410c08:	mov    ch,0x3f
  410c0a:	jle    0x410bad
  410c0c:	jae    0x410c25
  410c0e:	int    0x9a
  410c10:	sbb    al,0xe4
  410c12:	push   ebx
  410c13:	xchg   ebp,eax
  410c14:	test   DWORD PTR gs:[ebx],ecx
  410c17:	mov    bh,0xed
  410c19:	lods   eax,DWORD PTR ds:[esi]
  410c1a:	add    al,0x34
  410c1c:	sbb    DWORD PTR [edi+ebx*8-0x4c07845e],esi
  410c23:	add    al,0x55
  410c25:	pushf  
  410c26:	mov    ebx,0xd2de08df
  410c2b:	xor    al,0x22
  410c2d:	xor    eax,0x3d17a8f1
  410c33:	xchg   ebx,eax
  410c34:	and    bh,BYTE PTR [ecx-0x135018cd]
  410c3a:	xchg   BYTE PTR [edx+0x5c],bh
  410c3d:	shr    BYTE PTR [ebx],1
  410c3f:	inc    eax
  410c40:	or     BYTE PTR [eax-0x16],cl
  410c43:	pushf  
  410c44:	adc    eax,0x1cb9a75c
  410c49:	inc    esi
  410c4a:	fadd   QWORD PTR [ecx-0x21f518b]
  410c50:	std    
  410c51:	push   ecx
  410c52:	push   ds
  410c53:	retf   0xfe2a
  410c56:	jmp    DWORD PTR [edi+ebp*2+0x65]
  410c5a:	call   0x69d23cae
  410c5f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410c60:	es push es
  410c62:	xchg   esp,eax
  410c63:	adc    esi,ebx
  410c65:	push   esi
  410c66:	mov    DWORD PTR ds:0x2ee0a699,edi
  410c6c:	mov    ecx,0xd4bf2811
  410c71:	mov    ah,0x8d
  410c73:	or     al,0x61
  410c75:	adc    al,0xed
  410c77:	mov    al,ds:0xfac5323c
  410c7c:	push   esi
  410c7d:	ret    
  410c7e:	mov    esp,0x7dd04c5f
  410c83:	push   edx
  410c84:	xor    al,0x31
  410c86:	xchg   ecx,eax
  410c87:	fst    DWORD PTR [edi]
  410c89:	cli    
  410c8a:	push   es
  410c8b:	loop   0x410c89
  410c8d:	mov    edx,0x9d493dac
  410c92:	mov    BYTE PTR [ecx],ah
  410c94:	daa    
  410c95:	gs popf 
  410c97:	adc    BYTE PTR [edi+ecx*2-0x72],ah
  410c9b:	cmp    BYTE PTR [ebx],bl
  410c9d:	mov    cl,0x55
  410c9f:	mov    dh,0x3b
  410ca1:	lea    edi,[edi-0x51]
  410ca4:	cli    
  410ca5:	jbe    0x410cca
  410ca7:	sub    al,0xdb
  410ca9:	lahf   
  410caa:	adc    al,0xbe
  410cac:	out    dx,eax
  410cad:	inc    ebx
  410cae:	xor    BYTE PTR [esi],ah
  410cb0:	adc    esp,ebx
  410cb2:	aad    0xf3
  410cb4:	fs xchg esi,eax
  410cb6:	loopne 0x410d11
  410cb8:	adc    al,BYTE PTR [eax+ebx*4+0x73]
  410cbc:	xchg   BYTE PTR [edi+0xb2f8312],dh
  410cc2:	int3   
  410cc3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410cc4:	jp     0x410c5f
  410cc6:	push   ebx
  410cc7:	popfw  
  410cc9:	jmp    0x410d45
  410ccb:	xchg   cl,cl
  410ccd:	push   cs
  410cce:	stc    
  410ccf:	push   ebx
  410cd0:	inc    ecx
  410cd1:	jecxz  0x410c92
  410cd3:	xchg   ecx,eax
  410cd4:	xchg   esp,eax
  410cd5:	push   ss
  410cd6:	push   0xc66a4844
  410cdb:	gs retf 
  410cdd:	jno    0x410ce8
  410cdf:	pusha  
  410ce0:	lahf   
  410ce1:	cdq    
  410ce2:	icebp  
  410ce3:	dec    esp
  410ce4:	and    DWORD PTR ds:0x54b97c66,0xffffffe7
  410ceb:	jno    0x410d4b
  410ced:	(bad)
  410cf0:	sub    DWORD PTR [eax-0x47],ebx
  410cf3:	lock xchg ebp,eax
  410cf5:	test   ecx,0x6b9b73a6
  410cfb:	xchg   DWORD PTR [eax],esi
  410cfd:	jb     0x410d73
  410cff:	xor    DWORD PTR [eax-0xfc67fe3],ecx
  410d05:	sbb    BYTE PTR [ebx+0x959fca8],ah
  410d0b:	mov    ds:0x974f26b4,al
  410d10:	mov    al,BYTE PTR [ecx-0x7d7cecab]
  410d16:	sub    DWORD PTR [ebx+0x15],ebp
  410d19:	xchg   DWORD PTR [edx+eiz*2],edx
  410d1c:	addr16 ds retf 0x32cb
  410d21:	xor    cl,BYTE PTR [ebx+0x44972a33]
  410d27:	addr16 mov esi,0xb340d0ba
  410d2d:	sub    BYTE PTR [esi+0x3f7f1daa],dh
  410d33:	pusha  
  410d34:	dec    ecx
  410d35:	in     al,dx
  410d36:	int    0xbd
  410d38:	mov    edx,0x3d078d4d
  410d3d:	fldenv [edx-0x46bddee1]
  410d43:	cdq    
  410d44:	mov    ds:0x778957e,al
  410d4a:	mov    al,ds:0xc40c4f3b
  410d4f:	mov    dl,0xcc
  410d51:	mov    eax,DWORD PTR cs:[edx-0x72]
  410d55:	data16 jne 0x410d4e
  410d58:	adc    eax,0xab52e6d
  410d5d:	ja     0x410d1a
  410d5f:	daa    
  410d60:	pop    ss
  410d61:	sbb    BYTE PTR [ebx-0x3a3d8159],bh
  410d67:	out    dx,al
  410d68:	neg    DWORD PTR [edi-0x5b0c90d6]
  410d6e:	sbb    al,ch
  410d70:	idiv   DWORD PTR [ebx+0x7a]
  410d73:	aas    
  410d74:	dec    ebp
  410d75:	outs   dx,BYTE PTR ds:[esi]
  410d76:	es jb  0x410d03
  410d79:	jle    0x410dcf
  410d7b:	stos   DWORD PTR es:[edi],eax
  410d7c:	loopne 0x410d46
  410d7e:	and    ebx,ecx
  410d80:	inc    ebx
  410d81:	das    
  410d82:	sub    dl,BYTE PTR [eax+0x4d]
  410d85:	shl    BYTE PTR [eax+0x60919925],1
  410d8b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410d8c:	sub    ebx,eax
  410d8e:	jg     0x410d46
  410d90:	ficom  WORD PTR [ebx+0x75]
  410d93:	push   0x22e781b4
  410d98:	sti    
  410d99:	ss pop esp
  410d9b:	mov    ecx,0x8d06e73e
  410da0:	add    DWORD PTR [ecx],edi
  410da2:	push   0x601b25fe
  410da7:	push   ds
  410da8:	jno    0x410d95
  410daa:	mov    esp,0x87cd7bec
  410daf:	dec    edi
  410db0:	test   al,0x59
  410db2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410db3:	cmp    bl,al
  410db5:	aam    0x58
  410db7:	out    0xf0,eax
  410db9:	mov    dh,0x78
  410dbb:	ins    BYTE PTR es:[edi],dx
  410dbc:	es fdivp st(0),st
  410dbf:	test   BYTE PTR [edi-0x2b8166b0],ch
  410dc5:	xchg   edi,eax
  410dc6:	adc    eax,0x18f97cc6
  410dcb:	push   0x54
  410dcd:	cld    
  410dce:	cdq    
  410dcf:	jl     0x410e13
  410dd1:	jecxz  0x410de2
  410dd3:	out    0xba,al
  410dd5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410dd6:	test   DWORD PTR [esi+0x35bc2738],esp
  410ddc:	aad    0xe8
  410dde:	retf   0xe163
  410de1:	adc    BYTE PTR [ecx],0xc7
  410de4:	lock pop edi
  410de6:	lea    esi,[edx+0x41]
  410de9:	in     al,0xcf
  410deb:	jecxz  0x410dd6
  410ded:	dec    eax
  410dee:	mov    al,0x83
  410df0:	or     ebx,DWORD PTR [eax-0x22]
  410df3:	dec    eax
  410df4:	rcr    DWORD PTR [ebx-0x5a55b8bf],0x6
  410dfb:	mov    cl,0xa4
  410dfd:	pop    ecx
  410dfe:	in     eax,dx
  410dff:	inc    ebp
  410e00:	aam    0xb9
  410e02:	pop    ss
  410e03:	int    0x44
  410e05:	push   0x5b
  410e07:	adc    eax,0x79105787
  410e0c:	fwait
  410e0d:	stos   BYTE PTR es:[edi],al
  410e0e:	mov    DWORD PTR [eax+ebp*1+0x27edaed5],ecx
  410e15:	fxch   st(7)
  410e17:	add    dl,BYTE PTR [edx]
  410e19:	inc    edx
  410e1a:	outs   dx,BYTE PTR ds:[esi]
  410e1b:	lea    ecx,[edx+0xb]
  410e1e:	cmp    al,0xff
  410e20:	jmp    0x3969252d
  410e25:	jmp    0x410dff
  410e27:	jmp    0xbb02:0xa0c0e490
  410e2e:	fwait
  410e2f:	adc    DWORD PTR [edi+eax*1+0x3145d567],esi
  410e36:	imul   edx,ecx,0xc9fc2e09
  410e3c:	push   cs
  410e3d:	mov    ah,0xc7
  410e3f:	cmc    
  410e40:	div    dh
  410e42:	push   cs
  410e43:	imul   esp,edx,0x4c
  410e46:	clc    
  410e47:	push   ebx
  410e48:	xchg   DWORD PTR [edx+0x1],eax
  410e4b:	ret    
  410e4c:	shl    dh,cl
  410e4e:	lea    ebx,ds:0x6326ffc2
  410e54:	scas   al,BYTE PTR es:[edi]
  410e55:	pushf  
  410e56:	mov    ebx,0x87488df3
  410e5b:	aad    0xe8
  410e5d:	loope  0x410e50
  410e5f:	repnz bound ebx,QWORD PTR [ebx-0x17f579b4]
  410e66:	adc    BYTE PTR [edx],ah
  410e68:	xchg   edi,eax
  410e69:	mov    al,0x73
  410e6b:	loope  0x410e6a
  410e6d:	(bad)  
  410e6e:	cdq    
  410e6f:	hlt    
  410e70:	jmp    0x309b9510
  410e75:	retf   
  410e76:	xchg   esp,eax
  410e77:	push   ebp
  410e78:	outs   dx,BYTE PTR ds:[esi]
  410e79:	pop    esp
  410e7a:	pusha  
  410e7b:	xchg   al,al
  410e7d:	mov    ds:0xd64268d9,al
  410e82:	add    edx,DWORD PTR [esi+0x61]
  410e85:	(bad)  
  410e86:	scas   al,BYTE PTR es:[edi]
  410e87:	xchg   ebx,eax
  410e88:	lds    esp,FWORD PTR [edi-0x58]
  410e8b:	popa   
  410e8c:	xor    BYTE PTR [ebx-0x69],0x1d
  410e90:	push   edi
  410e91:	(bad)  
  410e92:	not    bl
  410e94:	jb     0x410e7f
  410e96:	lahf   
  410e97:	lods   al,BYTE PTR ds:[esi]
  410e98:	mov    al,ds:0xaad69c52
  410e9d:	daa    
  410e9e:	ins    BYTE PTR es:[edi],dx
  410e9f:	pushf  
  410ea0:	or     ebx,DWORD PTR [edi-0x21]
  410ea3:	jecxz  0x410f18
  410ea5:	shl    eax,cl
  410ea7:	or     DWORD PTR [esi+0x59],ebx
  410eaa:	dec    esp
  410eab:	jnp    0x410f2c
  410ead:	fsubr  st,st(7)
  410eaf:	push   ecx
  410eb0:	and    ebp,DWORD PTR [esi-0x48]
  410eb3:	out    dx,al
  410eb4:	aad    0xc6
  410eb6:	int    0xfc
  410eb8:	sahf   
  410eb9:	mov    cl,0xa1
  410ebb:	(bad)  
  410ebc:	mov    esp,0x9047d90b
  410ec1:	mov    dl,BYTE PTR [ebp-0x2d]
  410ec4:	pop    ebp
  410ec5:	cmc    
  410ec6:	mov    cl,0x48
  410ec8:	call   0x976b:0xc8f95abe
  410ecf:	adc    eax,0x7be3de32
  410ed4:	icebp  
  410ed5:	jmp    0xbe9593d8
  410eda:	mov    bl,0xaf
  410edc:	stos   BYTE PTR es:[edi],al
  410edd:	mov    ebp,0xeaa3c724
  410ee2:	sub    DWORD PTR [edi],eax
  410ee4:	cli    
  410ee5:	pop    ebp
  410ee6:	mov    esi,0x585af269
  410eeb:	or     ah,bl
  410eed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410eee:	dec    esi
  410eef:	add    eax,0xcda50ac
  410ef4:	push   edx
  410ef5:	mov    bh,0x30
  410ef7:	add    al,0x42
  410ef9:	jbe    0x410ea6
  410efb:	fwait
  410efc:	dec    edi
  410efd:	fdivr  DWORD PTR [ebp+0x40]
  410f00:	fs pushf 
  410f02:	leave  
  410f03:	sbb    BYTE PTR [ebx+0x42a53c55],al
  410f09:	fwait
  410f0a:	xor    al,0x4a
  410f0c:	xchg   edx,eax
  410f0d:	mov    bh,BYTE PTR [edi-0x22]
  410f10:	jg     0x410f8e
  410f12:	aad    0xed
  410f14:	into   
  410f15:	pop    ds
  410f16:	cs xor eax,0x8f9796a5
  410f1c:	cmp    al,0xae
  410f1e:	cmc    
  410f1f:	mov    eax,0x57d7f4f5
  410f24:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410f25:	push   esp
  410f26:	arpl   dx,sp
  410f28:	iret   
  410f29:	xor    dl,ah
  410f2b:	xor    bl,BYTE PTR [edx+0x4e350ed1]
  410f31:	add    al,0xe3
  410f33:	ins    DWORD PTR es:[edi],dx
  410f34:	jno    0x410f7b
  410f36:	add    WORD PTR [esi],ax
  410f39:	mov    esp,0x8b4e3dfa
  410f3e:	retf   0x8548
  410f41:	into   
  410f42:	mov    DWORD PTR [eax-0x53bcc909],esi
  410f48:	loop   0x410eea
  410f4a:	dec    ebx
  410f4b:	mov    ebx,0x29d269ba
  410f50:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410f51:	data16 out 0x8,al
  410f54:	push   ds
  410f55:	loop   0x410ef0
  410f57:	bound  ecx,QWORD PTR [eax]
  410f59:	pop    ebx
  410f5a:	pushf  
  410f5b:	xchg   edi,eax
  410f5c:	not    DWORD PTR [esi-0x22c38915]
  410f62:	fsub   DWORD PTR [ecx+0x57e06666]
  410f68:	sbb    DWORD PTR [ecx+0x43],edx
  410f6b:	mov    ch,al
  410f6d:	xor    DWORD PTR [esp+esi*8-0x16f17609],0xdee924f7
  410f78:	cmp    eax,0xc2004354
  410f7d:	push   es
  410f7e:	out    0x82,al
  410f80:	adc    edx,0x4f44d07c
  410f86:	es cmp dl,ch
  410f89:	sahf   
  410f8a:	(bad)  
  410f8c:	pusha  
  410f8d:	fs pop edi
  410f8f:	movzx  ecx,BYTE PTR [ebx+edx*8-0xeb7d6e4]
  410f97:	pop    eax
  410f98:	mov    eax,ds:0x41b22c
  410f9d:	mov    edx,0x32729c
  410fa2:	sub    eax,edx
  410fa4:	adc    DWORD PTR ds:0x42fd6e,ebx
  410faa:	mov    ecx,0x7510855
  410faf:	push   esi
  410fb0:	mov    esi,DWORD PTR [ebp+0xc]
  410fb3:	xor    eax,ecx
  410fb5:	mov    DWORD PTR ds:0x42e11c,0x4b31
  410fbf:	jmp    0x4113c4
  410fc4:	xchg   edx,eax
  410fc5:	shl    DWORD PTR [edi+eiz*8+0x71516771],cl
  410fcc:	push   ebp
  410fcd:	paddsw mm6,QWORD PTR [eax+0x483fd2ab]
  410fd4:	es dec esi
  410fd6:	jo     0x411048
  410fd8:	pop    eax
  410fd9:	jge    0x41104b
  410fdb:	jo     0x410fa7
  410fdd:	std    
  410fde:	hlt    
  410fdf:	sub    eax,0x899650cf
  410fe4:	sub    DWORD PTR [ecx+0x11f09a58],0x2e53e962
  410fee:	xchg   edi,eax
  410fef:	inc    edx
  410ff0:	std    
  410ff1:	not    DWORD PTR [edi]
  410ff3:	adc    eax,0x47cf4fc0
  410ff8:	inc    edi
  410ff9:	fsub   DWORD PTR [ebp+eax*2+0xc]
  410ffd:	imul   ebp,DWORD PTR [edi-0x74],0x88de1856
  411004:	cmp    al,0x1a
  411006:	cmp    DWORD PTR [ecx+0x6b9da3d],ebp
  41100c:	test   eax,0xd0f7ce8
  411011:	mov    ss,esp
  411013:	push   ebp
  411014:	repz dec edx
  411016:	xor    al,0xc3
  411018:	pop    eax
  411019:	push   edx
  41101a:	jne    0x410fcc
  41101c:	push   ecx
  41101d:	cdq    
  41101e:	xlat   BYTE PTR ds:[ebx]
  41101f:	pop    ss
  411020:	shld   DWORD PTR fs:[esi-0x743a70d0],edi,0x1f
  411029:	push   0x17859698
  41102e:	mov    ebp,0x7643132
  411033:	mov    bh,BYTE PTR [esi-0x71]
  411036:	pusha  
  411037:	mov    edx,0x508b46d6
  41103c:	sbb    al,BYTE PTR [ebx]
  41103e:	call   0xeeb:0x3f88f5d3
  411045:	fisub  DWORD PTR [eax+0x258b4d0f]
  41104b:	push   ebp
  41104c:	inc    ebp
  41104d:	scas   al,BYTE PTR es:[edi]
  41104e:	data16 fabs 
  411051:	fstp   DWORD PTR [esi-0x20c4929f]
  411057:	jnp    0x41103e
  411059:	(bad)  
  41105a:	in     eax,dx
  41105b:	aam    0x6c
  41105d:	pop    ss
  41105e:	fstp   TBYTE PTR [esi]
  411060:	or     eax,0x89be2c63
  411065:	jne    0x41104a
  411067:	dec    ecx
  411068:	cmc    
  411069:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41106a:	stos   BYTE PTR es:[edi],al
  41106b:	dec    ebx
  41106c:	mov    ch,0x4c
  41106e:	lods   eax,DWORD PTR ds:[esi]
  41106f:	mov    bl,0x5f
  411071:	xor    ch,dh
  411073:	xchg   DWORD PTR [eax],edx
  411075:	out    dx,eax
  411076:	in     al,0x3e
  411078:	out    dx,al
  411079:	xor    al,0xd1
  41107b:	fisttp DWORD PTR ds:0x145aa62f
  411081:	pop    esi
  411082:	aad    0x9d
  411084:	dec    ebp
  411085:	jecxz  0x4110bd
  411087:	push   0xc790d83f
  41108c:	arpl   WORD PTR [esi+ebp*2],bx
  41108f:	int    0x3f
  411091:	dec    ecx
  411092:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411093:	mov    BYTE PTR [edx+0x2c],dl
  411096:	xor    DWORD PTR [ebx],0xffffffcb
  411099:	jecxz  0x411032
  41109b:	cmp    eax,0xddc6c7bc
  4110a0:	push   ds
  4110a1:	je     0x4110ac
  4110a3:	mov    dl,0x80
  4110a5:	add    eax,0x35d8972d
  4110aa:	add    al,0xfc
  4110ac:	fs ret 
  4110ae:	pop    eax
  4110af:	inc    ebp
  4110b0:	(bad)  
  4110b1:	(bad)  
  4110b2:	loopne 0x4110b8
  4110b4:	xor    esi,ebx
  4110b6:	loopne 0x411086
  4110b8:	push   eax
  4110b9:	fsub   st(4),st
  4110bb:	js     0x41106a
  4110bd:	sub    eax,0x293d2934
  4110c2:	mov    ecx,0xc4ef56fe
  4110c7:	xor    BYTE PTR [ebp+0x54],ch
  4110ca:	push   ecx
  4110cb:	cld    
  4110cc:	xor    dl,0xd6
  4110cf:	dec    esp
  4110d0:	push   esp
  4110d1:	or     al,0x9e
  4110d3:	das    
  4110d4:	jae    0x411155
  4110d6:	push   edi
  4110d7:	inc    esi
  4110d8:	jae    0x41112f
  4110da:	mov    WORD PTR [edx],ds
  4110dc:	jge    0x4110dc
  4110de:	inc    edi
  4110df:	cwde   
  4110e0:	or     ebp,esp
  4110e2:	jle    0x411148
  4110e4:	push   edi
  4110e5:	in     al,dx
  4110e6:	xchg   edi,eax
  4110e7:	and    al,0xdb
  4110e9:	je     0x411133
  4110eb:	fnstcw WORD PTR [ecx-0x58]
  4110ee:	push   0xffffffe1
  4110f0:	mov    bh,BYTE PTR [ebx]
  4110f2:	mov    ch,0x25
  4110f4:	scas   eax,DWORD PTR es:[edi]
  4110f5:	and    al,0xf9
  4110f7:	pop    esp
  4110f8:	gs dec esi
  4110fa:	fisttp DWORD PTR [ebp-0x35]
  4110fd:	push   si
  4110ff:	sbb    al,ah
  411101:	scas   eax,DWORD PTR es:[edi]
  411102:	lea    ebp,[ecx+0x4d47305]
  411108:	fcom   QWORD PTR [edi+0x50b7aacb]
  41110e:	sbb    ch,BYTE PTR [ecx-0x7e]
  411111:	add    eax,0x54a35fbb
  411116:	dec    esi
  411117:	adc    DWORD PTR [edi+0x29],ecx
  41111a:	xor    eax,ebp
  41111c:	ds pop esp
  41111e:	shl    BYTE PTR [eax-0x72],1
  411121:	add    DWORD PTR [ebx],ebp
  411123:	sti    
  411124:	sbb    al,BYTE PTR [eax-0x6a]
  411127:	mov    BYTE PTR [esi-0x64],cl
  41112a:	in     eax,dx
  41112b:	jae    0x411129
  41112d:	pop    ss
  41112e:	sub    eax,0x15512745
  411133:	jge    0x4110ea
  411135:	outs   dx,DWORD PTR ds:[esi]
  411136:	inc    esp
  411137:	sbb    DWORD PTR [ecx],ecx
  411139:	int3   
  41113a:	(bad)
  41113e:	retf   0x188
  411141:	pop    esp
  411142:	outs   dx,DWORD PTR ds:[esi]
  411143:	add    cl,BYTE PTR [esi-0x1a27552b]
  411149:	jge    0x4110ee
  41114b:	sub    BYTE PTR [eax-0x71c7fd90],ch
  411151:	jns    0x4111b4
  411153:	cmp    ebp,ebx
  411155:	pop    ebx
  411156:	inc    ecx
  411157:	sbb    DWORD PTR [edx-0x26],esp
  41115a:	xchg   edx,eax
  41115b:	xor    BYTE PTR [esi],bl
  41115d:	dec    esi
  41115e:	out    dx,eax
  41115f:	inc    ecx
  411160:	int    0xcb
  411162:	sahf   
  411163:	cmp    eax,0xf048ea31
  411168:	(bad)  
  41116a:	cmp    DWORD PTR [ebp+0x8],ecx
  41116d:	and    eax,0x1d7dafc4
  411172:	jb     0x4111ec
  411174:	sub    ecx,ebp
  411176:	call   0xeeba5070
  41117b:	and    al,0x98
  41117d:	arpl   WORD PTR ds:0x84ad6041,ax
  411183:	and    al,0xc5
  411185:	aam    0xab
  411187:	xor    ch,dh
  411189:	call   0xf0a2d619
  41118e:	ss test al,0xe8
  411191:	mov    ebp,0xe8f5f237
  411196:	mov    fs,WORD PTR [edi]
  411198:	pushf  
  411199:	xchg   DWORD PTR [eax+0x78],edi
  41119c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41119d:	mov    esp,0x92b2a9b1
  4111a2:	hlt    
  4111a3:	icebp  
  4111a4:	xor    al,0x71
  4111a6:	or     eax,0x6042f06a
  4111ab:	xchg   ebp,eax
  4111ac:	test   al,0x9c
  4111ae:	cs sbb esi,eax
  4111b1:	div    BYTE PTR [ebx-0x2a]
  4111b4:	xor    eax,0x9de5878
  4111b9:	mov    dl,0x92
  4111bb:	(bad)  
  4111bc:	stos   BYTE PTR es:[edi],al
  4111bd:	les    esp,FWORD PTR [edx]
  4111bf:	mov    eax,0xc7957a5d
  4111c4:	mov    bl,ch
  4111c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4111c7:	ins    DWORD PTR es:[edi],dx
  4111c8:	cmp    BYTE PTR [bx+di-0x13c],cl
  4111cd:	cmp    bh,bh
  4111cf:	jp     0x41120b
  4111d1:	sub    cl,al
  4111d3:	pop    ds
  4111d4:	adc    esp,ebp
  4111d6:	call   0x2c19:0x26db28ba
  4111dd:	es pop edx
  4111e0:	jmp    0xd237:0x7d372ef6
  4111e7:	cld    
  4111e8:	sbb    BYTE PTR [eax-0x9],dl
  4111eb:	(bad)  
  4111ec:	jns    0x411248
  4111ee:	(bad)  
  4111ef:	xchg   edx,eax
  4111f0:	(bad)
  4111f4:	xlat   BYTE PTR ds:[ebx]
  4111f5:	push   edx
  4111f6:	mov    ebx,esi
  4111f8:	pop    es
  4111f9:	or     ah,ch
  4111fb:	xchg   esp,eax
  4111fc:	hlt    
  4111fd:	scas   al,BYTE PTR es:[edi]
  4111fe:	mov    al,0x3a
  411200:	fistp  QWORD PTR [edi]
  411202:	xor    al,0xbf
  411204:	push   edi
  411205:	push   edi
  411206:	imul   edi,DWORD PTR [edx-0x1a],0x8b0f161c
  41120d:	adc    al,0x3e
  41120f:	aad    0x2b
  411211:	ret    0xdf4
  411214:	or     dh,bl
  411216:	les    edx,FWORD PTR ds:0x58fca6ad
  41121c:	(bad)
  41121f:	stc    
  411220:	test   DWORD PTR [ecx-0x22],ebp
  411223:	pusha  
  411224:	fcomp  DWORD PTR [esi+0x14]
  411227:	mov    al,0xca
  411229:	mov    dl,0x9a
  41122b:	push   es
  41122c:	add    eax,0x58f1eaef
  411231:	push   ds
  411232:	imul   BYTE PTR [ecx-0x6f8246a8]
  411238:	mov    al,ds:0x1911d25c
  41123d:	or     edx,DWORD PTR [ebp+0x64]
  411240:	imul   esi,DWORD PTR [esi+0x1e32c6c],0x1c
  411247:	mov    ebx,0x49e24568
  41124c:	fs push dx
  41124f:	jl     0x411283
  411251:	cmp    DWORD PTR [eax],ebp
  411253:	jns    0x411293
  411255:	mov    cl,0xbf
  411257:	push   edi
  411258:	mov    ebx,0x4decdaac
  41125d:	push   ecx
  41125e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41125f:	(bad)  
  411260:	out    0x76,eax
  411262:	cdq    
  411263:	jns    0x41125b
  411265:	arpl   WORD PTR [esi+0x44],sp
  411268:	mov    BYTE PTR [esi+eax*4+0x5c],al
  41126c:	xchg   BYTE PTR [ebp+0x5c28d2c2],al
  411272:	mov    esi,0x6ea65f7b
  411277:	xor    al,0x40
  411279:	repnz mov al,0xb0
  41127c:	sbb    al,0xae
  41127e:	jg     0x4112be
  411280:	lahf   
  411281:	outs   dx,DWORD PTR ds:[esi]
  411282:	mov    bl,0x80
  411284:	or     cl,BYTE PTR [edi]
  411286:	pop    edi
  411287:	add    BYTE PTR [ecx-0x49],dh
  41128a:	test   DWORD PTR [esi+0x7833c85],eax
  411290:	ror    DWORD PTR [eax-0x3d],1
  411293:	hlt    
  411294:	mov    esi,ecx
  411296:	or     dh,ah
  411298:	mov    ah,0xd8
  41129a:	mov    dl,BYTE PTR [esi+0x27]
  41129d:	cli    
  41129e:	mov    ah,0x97
  4112a0:	gs sahf 
  4112a2:	jg     0x4112a9
  4112a4:	imul   ebx,DWORD PTR [ebx+0x282cd40d],0xd29a0d65
  4112ae:	mov    eax,ds:0x9399aade
  4112b3:	in     al,0x87
  4112b5:	mov    edi,0x9dd6bd7e
  4112ba:	lods   eax,DWORD PTR ds:[esi]
  4112bb:	mov    ebp,0x229085cc
  4112c0:	push   ebp
  4112c1:	mov    eax,ds:0x651b3111
  4112c6:	push   es
  4112c7:	or     DWORD PTR [ebp+0x4],edx
  4112ca:	pop    ebp
  4112cb:	mov    cl,0x1b
  4112cd:	jo     0x411309
  4112cf:	iret   
  4112d0:	jecxz  0x411265
  4112d2:	add    al,0x8d
  4112d4:	bound  ebx,QWORD PTR [edi-0x66]
  4112d7:	add    dh,cl
  4112d9:	das    
  4112da:	ds pushf 
  4112dc:	sub    edx,DWORD PTR [ebp+0x55]
  4112df:	pop    ebx
  4112e0:	(bad)  
  4112e1:	sbb    al,0x49
  4112e3:	jge    0x41133c
  4112e5:	into   
  4112e6:	aas    
  4112e7:	arpl   WORD PTR ds:0xdda9241c,ax
  4112ed:	(bad)  
  4112ee:	pop    ecx
  4112ef:	mov    ecx,0x8dc20d60
  4112f4:	arpl   WORD PTR [edx-0x64],si
  4112f7:	lea    edx,[edx+0x2f]
  4112fa:	icebp  
  4112fb:	or     BYTE PTR [ecx+0x47],dh
  4112fe:	ins    BYTE PTR es:[edi],dx
  4112ff:	jns    0x411341
  411301:	fmul   st(1),st
  411303:	fcomp  QWORD PTR [ebx+0x50]
  411306:	int3   
  411307:	push   cs
  411308:	mov    dh,0xdc
  41130a:	sar    BYTE PTR [ecx-0x6ee5441e],1
  411310:	jns    0x411355
  411312:	xor    BYTE PTR [ecx-0x24],dl
  411315:	outs   dx,BYTE PTR ds:[esi]
  411316:	sbb    esi,DWORD PTR [edi+0x1a]
  411319:	cld    
  41131a:	fwait
  41131b:	push   eax
  41131c:	in     al,dx
  41131d:	iret   
  41131e:	mov    ebx,0x3ccc756e
  411323:	xlat   BYTE PTR ds:[ebx]
  411324:	in     al,dx
  411325:	cli    
  411326:	sub    edx,edi
  411328:	(bad)  
  411329:	scas   eax,DWORD PTR es:[edi]
  41132a:	lahf   
  41132b:	xlat   BYTE PTR ds:[ebx]
  41132c:	loopne 0x411367
  41132e:	add    edx,DWORD PTR [edi+eax*1+0x444ea0a6]
  411335:	mov    edi,0x480d1c69
  41133a:	mov    bl,0x87
  41133c:	leave  
  41133d:	push   cs
  41133e:	lock cdq 
  411340:	pop    ebp
  411341:	imul   esi,DWORD PTR gs:[ebx+ebp*8+0x5507c494],0xcce94983
  41134d:	dec    ebp
  41134e:	in     al,dx
  41134f:	pop    ecx
  411350:	fist   WORD PTR [eax-0x3c]
  411353:	add    DWORD PTR [eax-0x5b450b67],0xffffffbe
  41135a:	xchg   edi,eax
  41135b:	mov    ch,0xa0
  41135d:	dec    ebx
  41135e:	ins    BYTE PTR es:[edi],dx
  41135f:	xchg   BYTE PTR [eax+0x6d],dh
  411362:	push   0xe8ffc4a1
  411367:	mov    edi,es
  411369:	out    0xe3,eax
  41136b:	daa    
  41136c:	jmp    0xb97c:0x774e1099
  411373:	gs xchg esp,eax
  411375:	mov    ah,0x1c
  411377:	inc    esi
  411378:	pushf  
  411379:	mov    dl,0xa6
  41137b:	icebp  
  41137c:	mov    ebp,0xa753fbe2
  411381:	adc    dl,BYTE PTR [si+0x47]
  411385:	int3   
  411386:	adc    bh,BYTE PTR ds:0x10654149
  41138c:	ins    DWORD PTR es:[edi],dx
  41138d:	mov    ebx,0x2d19864a
  411392:	ins    BYTE PTR es:[edi],dx
  411393:	dec    ebx
  411394:	test   BYTE PTR [eax+0x64bfa293],ah
  41139a:	mov    eax,0x5cac602
  41139f:	cmp    ah,BYTE PTR [edx]
  4113a1:	fadd   QWORD PTR [edi+0x5671fa09]
  4113a7:	sar    BYTE PTR [eax-0x70ca19d9],cl
  4113ad:	adc    BYTE PTR ds:0x79ac6a7c,0xad
  4113b4:	xor    bh,BYTE PTR [ecx-0x2a]
  4113b7:	pop    eax
  4113b8:	lods   al,BYTE PTR ds:[esi]
  4113b9:	ret    0x1428
  4113bc:	mov    cl,0x8
  4113be:	rcl    dh,cl
  4113c0:	add    DWORD PTR [eax-0x39c49341],edi
  4113c6:	mov    DWORD PTR ds:0x42fcf1,0x78e4
  4113d0:	je     0x411c9a
  4113d6:	mov    eax,ds:0x41b224
  4113db:	and    DWORD PTR ds:0x42fd7a,0x0
  4113e5:	mov    esi,DWORD PTR ds:0x42fd7a
  4113eb:	inc    esi
  4113ec:	mov    DWORD PTR ds:0x42fd7a,esi
  4113f2:	cmp    DWORD PTR ds:0x42fd7a,0x8
  4113f9:	jne    0x41140f
  4113ff:	push   0x42e1e7
  411404:	push   0x42e26d
  411409:	call   DWORD PTR ds:0x42e567
  41140f:	cmp    DWORD PTR ds:0x42fd7a,0x7
  411416:	jne    0x411429
  41141c:	mov    esi,DWORD PTR ds:0x42fd7a
  411422:	inc    esi
  411423:	mov    DWORD PTR ds:0x42fd7a,esi
  411429:	cmp    DWORD PTR ds:0x42fd7a,0x13
  411430:	jb     0x4113e5
  411436:	jmp    0x41183b
  41143b:	and    cl,al
  41143d:	leave  
  41143e:	adc    ch,cl
  411440:	adc    ecx,esp
  411442:	call   0xcb53bead
  411447:	add    al,0xac
  411449:	cmp    BYTE PTR [eax],bh
  41144b:	push   cs
  41144c:	dec    edx
  41144d:	jo     0x4114bf
  41144f:	pop    eax
  411450:	jge    0x4114c2
  411452:	jo     0x41143c
  411454:	leave  
  411455:	push   0xffffff82
  411457:	lea    eax,[esi]
  411459:	hlt    
  41145a:	or     ebx,0xf7a60b06
  411460:	adc    BYTE PTR [edi+esi*4+0x56ae97b],ah
  411467:	mov    edi,0x1c91db2d
  41146c:	pminsw mm5,QWORD PTR [esi+0x3d]
  411470:	jle    0x4114e1
  411472:	dec    BYTE PTR [edi+0x18]
  411475:	(bad)  
  411476:	fdivr  QWORD PTR [eax]
  411478:	or     eax,0x9ed6a81e
  41147d:	fs int3 
  41147f:	dec    edx
  411480:	clc    
  411481:	xchg   edx,eax
  411482:	cmp    bh,0xbe
  411485:	(bad)  [eax+0x699d183c]
  41148b:	dec    eax
  41148c:	cmp    eax,0x1b62e9f9
  411491:	inc    edi
  411492:	push   es
  411493:	call   0x25c5e49
  411498:	retf   
  411499:	pop    ss
  41149a:	je     0x41150b
  41149c:	pusha  
  41149d:	fs sti 
  41149f:	xchg   ebx,eax
  4114a0:	sbb    esp,DWORD PTR [edi+0x9]
  4114a3:	sub    DWORD PTR [ebp+edi*8-0x280f5c4e],0xffffff8d
  4114ab:	aad    0xe9
  4114ad:	mov    DWORD PTR [ebp+0x5d5e8c9],edi
  4114b3:	stos   BYTE PTR es:[edi],al
  4114b4:	and    eax,0x349fb565
  4114b9:	and    eax,0xe3356547
  4114be:	xchg   ebp,eax
  4114bf:	xchg   DWORD PTR [eax],ebx
  4114c1:	call   0xee6d40eb
  4114c6:	pop    ebx
  4114c7:	dec    ebx
  4114c8:	test   al,0x86
  4114ca:	das    
  4114cb:	push   esi
  4114cc:	pop    ebp
  4114cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4114ce:	pop    ds
  4114cf:	loop   0x41146c
  4114d1:	jp     0x41150e
  4114d3:	sub    al,0xd2
  4114d5:	enter  0x5635,0x11
  4114d9:	(bad)  
  4114da:	xchg   edi,eax
  4114db:	push   cs
  4114dc:	jmp    0x411549
  4114de:	jecxz  0x411500
  4114e0:	dec    DWORD PTR [edx-0x37]
  4114e3:	jnp    0x4114d1
  4114e5:	loopne 0x41151a
  4114e7:	push   ecx
  4114e8:	jle    0x411551
  4114ea:	mov    BYTE PTR [esi+0x7d],dh
  4114ed:	jge    0x4114d3
  4114ef:	and    ecx,DWORD PTR [ebx]
  4114f1:	push   esi
  4114f2:	jbe    0x4114d1
  4114f4:	push   ss
  4114f5:	jmp    0x3ec5:0xaaf79465
  4114fc:	loop   0x4114dc
  4114fe:	fwait
  4114ff:	xchg   DWORD PTR [esi+ebx*4],ebx
  411502:	inc    esi
  411503:	pop    ds
  411504:	es xchg BYTE PTR es:[ebp+ecx*1+0x2a514459],dl
  41150d:	repz push ss
  41150f:	mov    cl,0x3a
  411511:	dec    ebx
  411512:	inc    ebx
  411513:	or     DWORD PTR [edi],esi
  411515:	aas    
  411516:	xchg   edi,esi
  411518:	cmp    edi,esp
  41151a:	ror    BYTE PTR [edx],1
  41151c:	dec    eax
  41151d:	mov    cl,0x3d
  41151f:	adc    al,0x4a
  411521:	(bad)  
  411522:	out    0xb6,eax
  411524:	out    dx,al
  411525:	xchg   esi,eax
  411526:	in     eax,0xa9
  411528:	jmp    DWORD PTR [edx+eax*2-0x6b]
  41152c:	shr    BYTE PTR [edi-0x45d5f055],cl
  411532:	test   DWORD PTR [esi+0x56],0xfb5a9b06
  411539:	sbb    BYTE PTR [esi-0x50a9dcdf],0xb9
  411540:	ins    DWORD PTR es:[edi],dx
  411541:	enter  0x7903,0x7f
  411545:	out    dx,al
  411546:	or     dh,0x47
  411549:	xor    BYTE PTR [edi+ebx*1-0x636cc588],dh
  411550:	das    
  411551:	aas    
  411552:	or     al,0xec
  411554:	mov    ah,0xc3
  411556:	add    BYTE PTR [edi-0x14e464a4],cl
  41155c:	mov    ah,0x22
  41155e:	cld    
  41155f:	sub    bl,BYTE PTR [esi+eax*2-0xd2d4066]
  411566:	inc    esp
  411567:	in     eax,0xdd
  411569:	dec    ecx
  41156a:	int    0x77
  41156c:	xchg   esp,eax
  41156d:	cmovbe esp,ebp
  411570:	nop
  411571:	repnz icebp 
  411573:	outs   dx,DWORD PTR ds:[esi]
  411574:	leave  
  411575:	lahf   
  411576:	push   ebp
  411577:	sub    eax,0xc56f69a7
  41157c:	mov    esi,0x5ab6c7a0
  411581:	mov    DWORD PTR [edx],edi
  411583:	pusha  
  411584:	jmp    0x4115b4
  411586:	cwde   
  411587:	rcl    BYTE PTR [eax+0xc743c2a],cl
  41158d:	lds    edx,FWORD PTR fs:[edx-0x2e]
  411591:	(bad)  
  411592:	les    esi,FWORD PTR [esi]
  411594:	mov    ch,0x6d
  411596:	popa   
  411597:	xor    eax,esp
  411599:	stos   BYTE PTR es:[edi],al
  41159a:	mov    dh,0xf4
  41159c:	daa    
  41159d:	stos   BYTE PTR es:[edi],al
  41159e:	cmp    esp,ecx
  4115a0:	and    ebx,DWORD PTR [bp+si+0x9]
  4115a4:	aaa    
  4115a5:	sar    DWORD PTR [eax-0x1e],1
  4115a8:	or     ebp,DWORD PTR [edi]
  4115aa:	inc    edx
  4115ab:	and    al,0x73
  4115ad:	sbb    al,0xe0
  4115af:	cmp    al,0x79
  4115b1:	or     BYTE PTR [ecx+edx*4+0x1e],0xec
  4115b6:	mov    ebx,ecx
  4115b8:	add    DWORD PTR [edi-0x6f],edi
  4115bb:	xor    bl,BYTE PTR [edx+0x33]
  4115be:	mov    eax,0xb50927f5
  4115c3:	dec    ebx
  4115c4:	xor    edi,DWORD PTR [esi+0x4674b32e]
  4115ca:	push   ebx
  4115cb:	sbb    eax,0x63fc7946
  4115d0:	xor    cl,BYTE PTR [ebx-0x5f]
  4115d3:	jne    0x41162d
  4115d5:	sub    al,0xd7
  4115d7:	in     al,dx
  4115d8:	inc    esp
  4115d9:	mov    cl,bl
  4115db:	mov    edi,0x238cd86e
  4115e0:	jnp    0x4115e9
  4115e2:	iret   
  4115e3:	or     ebx,esi
  4115e5:	jo     0x411619
  4115e7:	mov    ds:0xf935ed3a,eax
  4115ec:	xchg   ecx,eax
  4115ed:	sbb    eax,0x8f3f8222
  4115f2:	jno    0x4115fa
  4115f4:	add    eax,0x532ab07b
  4115f9:	or     DWORD PTR [ebx-0x9dcef18],eax
  4115ff:	mov    ds:0x671b6e9a,al
  411604:	mov    ah,0xd7
  411606:	js     0x4115df
  411608:	ss test al,0xd6
  41160b:	js     0x4115e0
  41160d:	inc    esi
  41160e:	loop   0x41166f
  411610:	fdivr  QWORD PTR [ecx+0x6b]
  411613:	scas   eax,DWORD PTR es:[edi]
  411614:	add    eax,0x13f27ebf
  411619:	lahf   
  41161a:	loopne 0x411651
  41161c:	mov    ebp,0xab3a1b56
  411621:	shr    BYTE PTR [ebp+0x660334c5],0x89
  411628:	sbb    ebp,DWORD PTR [edi]
  41162a:	inc    ebx
  41162b:	(bad)  
  41162c:	inc    edx
  41162d:	push   edi
  41162e:	xlat   BYTE PTR ds:[ebx]
  41162f:	call   0x4c25516a
  411634:	mov    DWORD PTR [ecx],esi
  411636:	fisttp WORD PTR cs:[ecx+0x2cea299a]
  41163d:	pop    eax
  41163e:	not    BYTE PTR [edi-0x7f7a44fc]
  411644:	fidivr DWORD PTR [ebx+0x5266f5b7]
  41164a:	fmul   DWORD PTR [esi-0x16]
  41164d:	(bad)  
  411650:	xchg   ebp,eax
  411651:	xor    BYTE PTR [edx-0x69],bh
  411654:	out    dx,al
  411655:	push   ds
  411656:	mov    bh,0x3
  411658:	jge    0x411647
  41165a:	packsswb mm0,mm1
  41165d:	fcmovne st,st(0)
  41165f:	xor    al,0xeb
  411661:	pop    edi
  411662:	jp     0x4116a2
  411664:	pop    ecx
  411665:	(bad)  
  411666:	int    0x9c
  411668:	in     al,dx
  411669:	mov    al,0xde
  41166b:	xchg   esp,eax
  41166c:	rcr    DWORD PTR [esi],0x32
  41166f:	or     esp,esi
  411671:	lahf   
  411672:	mov    edi,0x88794e80
  411677:	pop    ds
  411678:	xor    DWORD PTR [eax+0x69],ebp
  41167b:	dec    ebp
  41167c:	jae    0x4116f9
  41167e:	loope  0x4116a8
  411680:	ins    BYTE PTR es:[edi],dx
  411681:	and    BYTE PTR [edi],bh
  411683:	add    BYTE PTR [ebp-0x661e1f29],0xc7
  41168a:	popa   
  41168b:	arpl   WORD PTR [ebx],di
  41168d:	mov    WORD PTR [ecx*8-0x51a4e74d],gs
  411694:	daa    
  411695:	sti    
  411696:	dec    ebp
  411697:	cwde   
  411698:	jmp    0xb5cc:0x1d2ce380
  41169f:	in     eax,dx
  4116a0:	mov    ebp,0x107e1b49
  4116a5:	add    eax,0x41ecc049
  4116aa:	lock out dx,al
  4116ac:	xchg   eax,esi
  4116ae:	inc    eax
  4116af:	mov    edi,0x1ff8b170
  4116b4:	jecxz  0x411714
  4116b6:	mov    eax,0x3b356b26
  4116bb:	div    BYTE PTR [ecx+0x13]
  4116be:	jne    0x41172f
  4116c0:	dec    edx
  4116c1:	jge    0x411724
  4116c3:	sub    edi,0xfebb9ecf
  4116c9:	(bad)  [eax+0x1f]
  4116cc:	jo     0x411710
  4116ce:	int    0x6c
  4116d0:	stos   DWORD PTR es:[edi],eax
  4116d1:	pushf  
  4116d2:	push   ebp
  4116d3:	or     al,0xa0
  4116d5:	add    al,0x22
  4116d7:	push   edx
  4116d8:	retf   
  4116d9:	jno    0x411756
  4116db:	(bad)  
  4116dc:	addr16 xor al,0x53
  4116df:	xchg   esi,eax
  4116e0:	mov    ebx,0x38aa692
  4116e5:	jnp    0x411761
  4116e7:	je     0x411695
  4116e9:	mov    ds:0x1bb2b928,eax
  4116ee:	(bad)  
  4116ef:	fcom   QWORD PTR [edx]
  4116f1:	sbb    DWORD PTR [eax-0x76d6d113],0x9e7d183e
  4116fb:	or     DWORD PTR [esi],ebx
  4116fd:	mov    ebx,0xb98124cc
  411702:	or     esp,ebp
  411704:	rcl    DWORD PTR ds:0xfa7b0426,0x24
  41170b:	leave  
  41170c:	pop    edi
  41170d:	js     0x411700
  41170f:	mov    ds:0xa3bd80a4,eax
  411714:	test   DWORD PTR [ebx-0x7],esp
  411717:	je     0x4116df
  411719:	lods   al,BYTE PTR ds:[esi]
  41171a:	cdq    
  41171b:	pop    ecx
  41171c:	shr    BYTE PTR [edi],1
  41171e:	iret   
  41171f:	stos   BYTE PTR es:[edi],al
  411720:	aam    0x20
  411722:	pop    es
  411723:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411724:	pushf  
  411725:	jge    0x4116b6
  411727:	pushf  
  411728:	cdq    
  411729:	and    eax,0x30cc3351
  41172e:	cdq    
  41172f:	add    DWORD PTR [edx-0x18],edx
  411732:	sub    eax,0x97914170
  411737:	cmp    eax,edi
  411739:	ds adc al,0x90
  41173c:	jl     0x4117ac
  41173e:	lds    eax,FWORD PTR [ebx]
  411740:	loope  0x411769
  411742:	mov    bx,0x988d
  411746:	lea    edi,[ecx+0x6f]
  411749:	jp     0x41170b
  41174b:	mov    ebp,0xe670c107
  411750:	(bad)  
  411751:	jl     0x411759
  411753:	push   esp
  411754:	lods   al,BYTE PTR ds:[esi]
  411755:	jne    0x411784
  411757:	xchg   BYTE PTR [edx],ch
  411759:	push   edx
  41175a:	and    DWORD PTR [ebx+0x388c4b84],0x3e
  411761:	sbb    al,0x5a
  411763:	adc    ch,dh
  411765:	mov    ah,0xe6
  411767:	sub    ebp,DWORD PTR [ecx+edi*8+0x6f7be3b0]
  41176e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41176f:	(bad)  
  411770:	lock adc esi,ebx
  411773:	xor    esp,DWORD PTR [edi+ecx*2+0x3f7b35f2]
  41177a:	pop    edx
  41177b:	ret    
  41177c:	pop    es
  41177d:	push   es
  41177e:	add    edx,DWORD PTR [ebx-0x40]
  411781:	or     bl,BYTE PTR [eax]
  411783:	daa    
  411784:	mov    ebp,0xf8582ff1
  411789:	push   ecx
  41178a:	xor    al,0xab
  41178c:	es jae 0x411710
  41178f:	or     BYTE PTR ss:[ebp+0x7aae2d5],bl
  411796:	scas   eax,DWORD PTR es:[edi]
  411797:	lds    ebp,FWORD PTR [esi]
  411799:	mov    ah,0xa
  41179b:	xor    BYTE PTR [ebx],al
  41179d:	mov    eax,ds:0xa5ca5345
  4117a2:	pop    ds
  4117a3:	nop
  4117a4:	daa    
  4117a5:	xchg   edi,eax
  4117a6:	sbb    eax,DWORD PTR [eax-0x66482bdb]
  4117ac:	and    bh,BYTE PTR [edx+0x387092c0]
  4117b2:	pushf  
  4117b3:	fldcw  WORD PTR [esi+0x28]
  4117b6:	sub    BYTE PTR [ecx+0x55a29ca8],ch
  4117bc:	mov    eax,0x638f43a0
  4117c1:	dec    esp
  4117c2:	(bad)  
  4117c5:	push   ds
  4117c6:	lods   al,BYTE PTR ds:[esi]
  4117c7:	jp     0x4117e6
  4117c9:	pop    ds
  4117ca:	fdiv   QWORD PTR [esi]
  4117cc:	xor    edx,DWORD PTR gs:[edi]
  4117cf:	mov    bh,0x48
  4117d1:	or     al,0xbc
  4117d3:	call   0xe73ea451
  4117d8:	xchg   ebp,eax
  4117d9:	xchg   ebp,eax
  4117da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4117db:	sub    ch,BYTE PTR [edi]
  4117dd:	push   esp
  4117de:	int    0x6f
  4117e0:	hlt    
  4117e1:	jnp    0x411856
  4117e3:	adc    BYTE PTR [esi-0x536f316b],bh
  4117e9:	or     ebx,DWORD PTR [ecx-0x737dd7d8]
  4117ef:	jl     0x4117ec
  4117f1:	test   al,0xce
  4117f3:	jge    0x4117a9
  4117f5:	cs jmp 0xb01061cc
  4117fb:	mov    ebx,0xa2651cf2
  411800:	xor    DWORD PTR [edx-0x13],esi
  411803:	cwde   
  411804:	fwait
  411805:	aad    0xfd
  411807:	push   0x242cc62d
  41180c:	pop    ecx
  41180d:	aas    
  41180e:	shl    BYTE PTR [ecx],0xf9
  411811:	mov    ch,0x8d
  411813:	and    esp,DWORD PTR [ecx]
  411815:	ror    dh,cl
  411817:	dec    esi
  411818:	(bad)  
  411819:	and    DWORD PTR [eax+0x2],eax
  41181c:	inc    ebp
  41181d:	lods   al,BYTE PTR ds:[esi]
  41181e:	fsubp  st(1),st
  411820:	inc    eax
  411821:	xchg   DWORD PTR [eax],edx
  411823:	adc    al,0x86
  411825:	rcr    edi,0x4c
  411828:	jno    0x411834
  41182a:	lock mov BYTE PTR [esi-0x3ffc3933],cl
  411831:	inc    DWORD PTR [esi+ecx*8-0x11]
  411835:	aaa    
  411836:	and    ah,cl
  411838:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411839:	or     al,0x78
  41183b:	mov    esi,DWORD PTR [ebp+0xc]
  41183e:	sub    eax,edx
  411840:	add    DWORD PTR ds:0x42fcf5,0x7f3f
  41184a:	xor    eax,ecx
  41184c:	mov    DWORD PTR ds:0x42fd7a,0x5771
  411856:	cmp    eax,esi
  411858:	mov    DWORD PTR ds:0x42fd76,0x752
  411862:	jne    0x411c7d
  411868:	jmp    0x411c6d
  41186d:	js     0x411844
  41186f:	stos   BYTE PTR es:[edi],al
  411870:	loopne 0x4118db
  411872:	jae    0x4118b6
  411874:	cmc    
  411875:	pop    esi
  411876:	sub    BYTE PTR [ecx-0x28503d17],dl
  41187c:	pop    eax
  41187d:	jbe    0x4118d6
  41187f:	jo     0x4118f1
  411881:	pop    eax
  411882:	jge    0x4118f4
  411884:	jo     0x4118e7
  411886:	xor    BYTE PTR [ebp+0x52],0x2f
  41188a:	cmp    cl,dh
  41188c:	and    edx,DWORD PTR [eax+0x20]
  41188f:	add    al,0x75
  411891:	data16 fst QWORD PTR [esi]
  411894:	outs   dx,DWORD PTR ds:[esi]
  411895:	inc    eax
  411896:	repz into 
  411898:	shr    ebx,0xd9
  41189b:	loope  0x4118c2
  41189d:	push   esi
  41189e:	ins    DWORD PTR es:[edi],dx
  41189f:	retf   0x9266
  4118a2:	outs   dx,BYTE PTR ds:[esi]
  4118a3:	xchg   BYTE PTR ds:0x859bebfb,bl
  4118a9:	dec    ebp
  4118aa:	mov    edx,0x30593e1d
  4118af:	jle    0x4118f7
  4118b1:	daa    
  4118b2:	inc    esp
  4118b3:	ret    
  4118b4:	jmp    0x411898
  4118b6:	jnp    0x411884
  4118b8:	mov    esi,0x432b5ae6
  4118bd:	push   ss
  4118be:	rol    DWORD PTR [ebp+0xd],0xeb
  4118c2:	js     0x4118a4
  4118c4:	stos   BYTE PTR es:[edi],al
  4118c5:	lods   al,BYTE PTR ds:[esi]
  4118c6:	vpsubsw ymm0,ymm1,ymm5
  4118ca:	call   0xf8a9:0x212dc628
  4118d1:	(bad)  
  4118d3:	in     al,0x81
  4118d5:	cwde   
  4118d6:	pop    ds
  4118d7:	enter  0xb219,0xcc
  4118db:	inc    ebp
  4118dc:	pop    esp
  4118dd:	test   al,0x91
  4118df:	in     al,dx
  4118e0:	test   ebp,ebx
  4118e2:	mov    ah,0x20
  4118e4:	lods   eax,DWORD PTR ds:[esi]
  4118e5:	ja     0x4118ff
  4118e7:	stos   BYTE PTR es:[edi],al
  4118e8:	cs repz adc al,0xd2
  4118ec:	xchg   ecx,eax
  4118ed:	xchg   edx,eax
  4118ee:	pop    ecx
  4118ef:	cmp    ah,BYTE PTR [eax]
  4118f1:	les    ebx,FWORD PTR [ebx-0xf7c0b01]
  4118f7:	repz popf 
  4118f9:	hlt    
  4118fa:	shl    BYTE PTR [ebx+esi*1+0x1de18332],1
  411901:	add    esp,DWORD PTR [edi]
  411903:	xchg   edx,eax
  411904:	xchg   esi,eax
  411905:	popf   
  411906:	fistp  DWORD PTR [eax+edi*2-0xc]
  41190a:	adc    esp,DWORD PTR [eax]
  41190c:	sub    DWORD PTR [edx+0x2b],edi
  41190f:	scas   eax,DWORD PTR es:[edi]
  411910:	or     DWORD PTR [esi+0x4912cd83],esi
  411916:	adc    dl,dl
  411918:	adc    bh,cl
  41191a:	sahf   
  41191b:	mov    bl,0x20
  41191d:	mov    ebx,0xe59ff376
  411922:	xor    BYTE PTR [eax],bl
  411924:	mov    bl,0xde
  411926:	arpl   WORD PTR [ebp+eiz*8+0x0],si
  41192a:	inc    esp
  41192b:	xor    BYTE PTR [ebx+eax*8-0x697161ad],cl
  411932:	inc    esi
  411933:	mov    cl,0x8b
  411935:	rol    BYTE PTR ds:0xfaa0e821,cl
  41193b:	das    
  41193c:	call   0xcac2dc32
  411941:	pop    eax
  411942:	in     eax,dx
  411943:	int    0xd5
  411945:	ret    
  411946:	xor    cl,dh
  411948:	cmp    esp,DWORD PTR [eiz*1+0x1df901cf]
  41194f:	push   cs
  411950:	xor    ebx,DWORD PTR [ecx+0x52]
  411953:	mov    eax,0x2223d576
  411958:	dec    esp
  411959:	icebp  
  41195a:	lods   al,BYTE PTR ds:[esi]
  41195b:	pop    esi
  41195c:	stos   DWORD PTR es:[edi],eax
  41195d:	jmp    0x41197d
  41195f:	inc    eax
  411960:	int3   
  411961:	push   cs
  411962:	div    esi
  411964:	dec    esi
  411965:	sub    BYTE PTR [ebp+0x45b2c395],ch
  41196b:	(bad)  
  41196c:	push   ebx
  41196d:	inc    BYTE PTR [ebp-0x3f21ef88]
  411973:	jg     0x4119d9
  411975:	fistp  DWORD PTR [ebp+0x6c8ce262]
  41197b:	push   edi
  41197c:	push   0x3e
  41197e:	push   ebp
  41197f:	(bad)  
  411980:	idiv   dl
  411982:	mov    ebx,0x2527b942
  411987:	cmp    esi,DWORD PTR [eax+0x19]
  41198a:	gs jnp 0x4119e3
  41198d:	pop    ecx
  41198e:	inc    ebx
  41198f:	or     ebx,DWORD PTR [ecx+0x53]
  411992:	neg    dl
  411994:	into   
  411995:	test   eax,0x55d60d2e
  41199a:	(bad)  
  41199b:	fst    st(1)
  41199d:	scas   al,BYTE PTR es:[edi]
  41199e:	or     eax,0xdf735936
  4119a3:	jae    0x411973
  4119a5:	adc    DWORD PTR [edx],edx
  4119a7:	loope  0x41193b
  4119a9:	fdiv   DWORD PTR [edx]
  4119ab:	cli    
  4119ac:	mov    al,ds:0x63ae5ae8
  4119b1:	sbb    al,0xf
  4119b3:	xor    ah,BYTE PTR [ecx]
  4119b5:	sbb    esp,DWORD PTR [edi+0x74]
  4119b8:	out    0x8,eax
  4119ba:	outs   dx,DWORD PTR ds:[esi]
  4119bb:	out    dx,eax
  4119bc:	sbb    al,0xb2
  4119be:	inc    edi
  4119bf:	outs   dx,BYTE PTR ds:[esi]
  4119c0:	iret   
  4119c1:	jl     0x4119f1
  4119c3:	xor    DWORD PTR [esi],eax
  4119c5:	or     BYTE PTR [eax+eiz*1-0x713ee8da],0xc2
  4119cd:	xchg   BYTE PTR [ebx+0x62],bh
  4119d0:	inc    eax
  4119d1:	sbb    al,0xa9
  4119d3:	sub    dh,dh
  4119d5:	dec    edx
  4119d6:	aam    0xbe
  4119d8:	(bad)  
  4119d9:	mov    eax,0x3791b76d
  4119de:	and    BYTE PTR [edx+ebx*4],ch
  4119e1:	cmc    
  4119e2:	out    dx,al
  4119e3:	fdiv   st,st(4)
  4119e5:	inc    edi
  4119e6:	sub    ecx,DWORD PTR [edi+0x1d]
  4119e9:	cwde   
  4119ea:	(bad)
  4119ed:	pop    ebx
  4119ee:	bound  edx,QWORD PTR [ebp-0x54]
  4119f1:	icebp  
  4119f2:	bound  esp,QWORD PTR [edi]
  4119f4:	adc    DWORD PTR [esi+0x4b1348d8],esp
  4119fa:	push   0x2018d5fb
  4119ff:	(bad)  
  411a00:	xchg   ebp,eax
  411a01:	dec    esp
  411a02:	sbb    BYTE PTR [ebp+0xc],bl
  411a05:	je     0x411a00
  411a07:	jo     0x411a3b
  411a09:	push   0x56
  411a0b:	cmp    al,0x8b
  411a0d:	enter  0xd655,0x75
  411a11:	fsub   QWORD PTR [esi+edi*8]
  411a14:	lock inc ebp
  411a16:	dec    ebp
  411a17:	dec    ecx
  411a18:	mov    ecx,0x98bb1dd8
  411a1d:	inc    esp
  411a1e:	push   ebx
  411a1f:	cli    
  411a20:	adc    DWORD PTR fs:[ebx-0x4e],0xffffffb0
  411a25:	add    al,0x63
  411a27:	jl     0x4119d8
  411a29:	add    bh,BYTE PTR [edi-0x26]
  411a2c:	das    
  411a2d:	push   esp
  411a2e:	leave  
  411a2f:	rcr    DWORD PTR ds:0x753c4f98,cl
  411a35:	call   0x294d:0xc16c401
  411a3c:	mov    ds:0x474837cd,eax
  411a41:	aaa    
  411a42:	push   esi
  411a43:	addr16 cs push ds
  411a46:	cmp    dh,BYTE PTR [ecx-0x77]
  411a49:	mov    al,0x17
  411a4b:	sbb    al,BYTE PTR [ecx+0x43e2a1d7]
  411a51:	and    BYTE PTR [ebx],bl
  411a53:	cmp    eax,DWORD PTR [edx-0x48dbfe73]
  411a59:	out    dx,al
  411a5a:	cmp    BYTE PTR [edi],0xbb
  411a5d:	aaa    
  411a5e:	test   eax,0xa31cc791
  411a63:	mov    ch,0xc8
  411a65:	das    
  411a66:	sbb    eax,0x86fee9e9
  411a6b:	pop    esp
  411a6c:	repz adc al,0xd7
  411a6f:	not    BYTE PTR [edx+0x5f]
  411a72:	retf   0x33b8
  411a75:	ret    0x9367
  411a78:	stos   BYTE PTR es:[edi],al
  411a79:	and    cl,BYTE PTR [edx]
  411a7b:	and    DWORD PTR [ebp+0x767a73f7],esi
  411a81:	outs   dx,BYTE PTR ds:[esi]
  411a82:	into   
  411a83:	repz pusha 
  411a85:	jge    0x411ab4
  411a87:	fs loop 0x411adc
  411a8a:	jmp    0x57cc:0x416826ff
  411a91:	addr16 xchg ebx,eax
  411a93:	xor    eax,0xf881b683
  411a98:	cmc    
  411a99:	xchg   ecx,eax
  411a9a:	scas   eax,DWORD PTR es:[edi]
  411a9b:	cmp    ecx,DWORD PTR [edx+0x5afcec37]
  411aa1:	int3   
  411aa2:	aaa    
  411aa3:	clc    
  411aa4:	repnz add al,0xb7
  411aa7:	jmp    0xeb420541
  411aac:	xlat   BYTE PTR ds:[ebx]
  411aad:	test   al,0x14
  411aaf:	popf   
  411ab0:	dec    BYTE PTR [edi-0x3fdf73c6]
  411ab6:	dec    ecx
  411ab7:	mov    BYTE PTR [esi],ah
  411ab9:	mov    bl,0xae
  411abb:	mul    DWORD PTR [ebp+0x29532670]
  411ac1:	mov    ebp,0xef72d574
  411ac6:	xchg   ebp,eax
  411ac7:	xchg   edi,eax
  411ac8:	scas   al,BYTE PTR es:[edi]
  411ac9:	sub    eax,0xb5719a06
  411ace:	out    0xd4,eax
  411ad0:	add    BYTE PTR [esi],0x4e
  411ad3:	mov    al,0x95
  411ad5:	xchg   ecx,edx
  411ad7:	iret   
  411ad8:	mov    dl,0xc3
  411ada:	xlat   BYTE PTR ds:[ebx]
  411adb:	pop    esi
  411adc:	ret    
  411add:	repnz ds pop ebx
  411ae0:	retf   
  411ae1:	bound  edi,QWORD PTR [edi+0x8]
  411ae4:	mov    DWORD PTR [ecx+0xa627198],esp
  411aea:	adc    bh,BYTE PTR ds:0x6b2acfab
  411af0:	sub    eax,0xf9607fbd
  411af5:	(bad)  
  411af6:	call   0x5a78:0xf1387d66
  411afd:	mov    ebp,0xa4775722
  411b02:	dec    edi
  411b03:	pop    ss
  411b04:	sbb    BYTE PTR [ebx-0x693d3065],bl
  411b0a:	mov    esp,0x398742b1
  411b0f:	stc    
  411b10:	inc    esi
  411b11:	mov    eax,0xf69512fc
  411b16:	imul   ebx,ecx,0x7d
  411b19:	(bad)  
  411b1a:	in     al,0x9
  411b1c:	or     ebp,DWORD PTR ds:0x6a6602f5
  411b22:	push   ebx
  411b23:	push   esp
  411b24:	inc    ecx
  411b25:	pop    es
  411b26:	lods   al,BYTE PTR ds:[esi]
  411b27:	mov    ch,0x5b
  411b29:	aaa    
  411b2a:	mov    eax,0xb662b3d2
  411b2f:	imul   DWORD PTR [ebp+0x7d17eecf]
  411b35:	js     0x411ae0
  411b37:	cmp    al,0x86
  411b39:	or     DWORD PTR [edi],0xffffffb2
  411b3c:	jge    0x411bbb
  411b3e:	xchg   ebx,eax
  411b3f:	pcmpeqd mm0,QWORD PTR [ecx+ecx*8+0x14e65c2c]
  411b47:	add    DWORD PTR [edx-0x73f9d5e5],0x7d19e833
  411b51:	jb     0x411b5c
  411b53:	enter  0x99c,0x56
  411b57:	jnp    0x411b9a
  411b59:	add    edi,edi
  411b5b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411b5c:	outs   dx,BYTE PTR ds:[esi]
  411b5d:	xor    dh,dh
  411b5f:	push   es
  411b60:	(bad)  
  411b61:	pushf  
  411b62:	mov    ecx,0x1d33214c
  411b67:	int    0xac
  411b69:	fsub   DWORD PTR ds:0x6782b2f3
  411b6f:	or     esp,DWORD PTR [esi+0x58]
  411b72:	pop    esp
  411b73:	mov    ch,BYTE PTR [edi]
  411b75:	xor    DWORD PTR [ebx],ecx
  411b77:	sbb    ch,bl
  411b79:	gs mov dl,0xff
  411b7c:	cli    
  411b7d:	add    al,0x9e
  411b7f:	dec    edx
  411b80:	or     al,BYTE PTR [edx]
  411b82:	xchg   ebx,eax
  411b83:	sub    ch,BYTE PTR [ebx+ebx*4]
  411b86:	add    BYTE PTR [ebx-0x21],ch
  411b89:	xchg   ebp,eax
  411b8a:	(bad)  
  411b8c:	fdivr  QWORD PTR [eax-0x73]
  411b8f:	xchg   ecx,eax
  411b90:	je     0x411b5b
  411b92:	xchg   edi,eax
  411b93:	ja     0x411b39
  411b95:	and    dh,cl
  411b97:	enter  0x7b58,0x9f
  411b9b:	jbe    0x411be1
  411b9d:	jle    0x411b24
  411b9f:	psrld  mm3,QWORD PTR [ebx-0x7f0db00c]
  411ba6:	cld    
  411ba7:	cmc    
  411ba8:	inc    edx
  411ba9:	jno    0x411bc3
  411bab:	test   al,0x66
  411bad:	test   eax,0x7afcbf5d
  411bb2:	or     al,0x51
  411bb4:	and    eax,0xe8a7847b
  411bb9:	mov    edx,0x4dc3f0
  411bbe:	mov    ebx,0xe0d94acc
  411bc3:	or     edx,DWORD PTR [edx-0x5d]
  411bc6:	lods   eax,DWORD PTR ds:[esi]
  411bc7:	xchg   esp,eax
  411bc8:	add    BYTE PTR [edx-0x5534fd8f],bh
  411bce:	push   esi
  411bcf:	mov    eax,0x67386bdb
  411bd4:	add    BYTE PTR [eax-0x58],cl
  411bd7:	push   eax
  411bd8:	pop    edx
  411bd9:	lods   al,BYTE PTR ds:[esi]
  411bda:	punpckhwd mm1,mm7
  411bdd:	or     al,0xe9
  411bdf:	sub    eax,0xeafa3de3
  411be4:	nop
  411be5:	mov    cl,0xc4
  411be7:	pop    es
  411be8:	pushw  0x56f2
  411bec:	jnp    0x411c56
  411bee:	(bad)  
  411bef:	int3   
  411bf0:	arpl   si,cx
  411bf2:	inc    ebx
  411bf3:	(bad)  
  411bf4:	and    dh,BYTE PTR [edi-0x30]
  411bf7:	push   ebx
  411bf8:	popf   
  411bf9:	xchg   edi,eax
  411bfa:	mov    al,ds:0x5181deb6
  411bff:	enter  0xf985,0xf9
  411c03:	loope  0x411bbe
  411c05:	pop    es
  411c06:	jle    0x411c22
  411c08:	mov    esi,0x82564a0
  411c0d:	repnz mov esi,0xb67437ca
  411c13:	cli    
  411c14:	enter  0xd940,0xa3
  411c18:	adc    al,0xf0
  411c1a:	fcom   QWORD PTR [eax-0x30]
  411c1d:	in     al,dx
  411c1e:	je     0x411c5b
  411c20:	arpl   WORD PTR [esi],ax
  411c22:	adc    al,0xd6
  411c24:	dec    ecx
  411c25:	mov    edx,0x8e3b6eaf
  411c2a:	push   cs
  411c2b:	(bad)  
  411c2c:	scas   al,BYTE PTR es:[edi]
  411c2d:	cmp    al,0xe3
  411c2f:	xor    dh,dl
  411c31:	xchg   esp,eax
  411c32:	inc    esi
  411c33:	pop    ds
  411c34:	es stc 
  411c36:	push   ebx
  411c37:	sbb    BYTE PTR [ecx],dl
  411c39:	push   cs
  411c3a:	mov    esi,0x1aa018eb
  411c3f:	test   ecx,0xfe424363
  411c45:	jno    0x411bf2
  411c47:	pop    ebp
  411c48:	inc    esp
  411c49:	mov    DWORD PTR [ebx-0xf534012],esp
  411c4f:	add    DWORD PTR [ebp+0x626b880c],ebp
  411c55:	shr    BYTE PTR [eax-0x589a6885],0xef
  411c5c:	mov    eax,ds:0x3211a53e
  411c61:	scas   eax,DWORD PTR es:[edi]
  411c62:	add    BYTE PTR [edx],ch
  411c64:	mov    eax,0xb90a6f61
  411c69:	imul   esp,DWORD PTR [edi+0x2ca17beb],0xffffffb2
  411c70:	inc    ecx
  411c71:	add    BYTE PTR [ebx],al
  411c73:	add    eax,0x41b224
  411c78:	jmp    0x411c84
  411c7d:	mov    eax,DWORD PTR [ebp+0xc]
  411c80:	xor    eax,ecx
  411c82:	add    eax,edx
  411c84:	mov    ds:0x41b224,eax
  411c89:	mov    eax,DWORD PTR [ebp+0xc]
  411c8c:	xor    eax,ecx
  411c8e:	add    eax,edx
  411c90:	mov    ds:0x41b22c,eax
  411c95:	jmp    0x4120a9
  411c9a:	mov    eax,ds:0x41b22c
  411c9f:	mov    ds:0x41b224,eax
  411ca4:	jmp    0x4120a9
  411ca9:	mov    dh,0x72
  411cab:	cwde   
  411cac:	test   al,0x64
  411cae:	jb     0x411c66
  411cb0:	jb     0x411ca3
  411cb2:	xchg   ecx,eax
  411cb3:	adc    eax,0x866b315e
  411cb8:	pop    edx
  411cb9:	pop    esi
  411cba:	push   ebx
  411cbb:	jo     0x411d2d
  411cbd:	pop    eax
  411cbe:	jge    0x411d30
  411cc0:	jo     0x411c9e
  411cc2:	mov    ecx,0xfd24f7e3
  411cc7:	xchg   ebp,eax
  411cc8:	leave  
  411cc9:	ror    BYTE PTR [ecx-0x6d],1
  411ccc:	mov    bl,0xda
  411cce:	and    eax,0x1ae5a801
  411cd3:	gs mov ebp,0xa701769f
  411cd9:	add    esi,esi
  411cdb:	sar    DWORD PTR [edx],0x4d
  411cde:	loop   0x411cb0
  411ce0:	mov    DWORD PTR [eax],ebp
  411ce2:	or     eax,0x1b3760a1
  411ce7:	mov    si,0xa922
  411ceb:	jmp    0xb765813a
  411cf0:	cmp    al,0x3d
  411cf2:	test   BYTE PTR [eax-0x67dffd95],al
  411cf8:	ficom  DWORD PTR [ebx-0x18]
  411cfb:	mov    ds:0x611f7d8e,al
  411d00:	xchg   esp,eax
  411d01:	and    BYTE PTR [esi],ch
  411d03:	ins    DWORD PTR es:[edi],dx
  411d04:	(bad)  
  411d05:	(bad)  
  411d06:	push   ebp
  411d07:	js     0x411d2c
  411d09:	xchg   edx,edi
  411d0b:	(bad)  
  411d0c:	mov    edi,0x24f0965c
  411d11:	xor    eax,0xc8b66818
  411d16:	out    dx,al
  411d17:	jae    0x411d25
  411d19:	mov    ch,0xb7
  411d1b:	das    
  411d1c:	and    ebp,DWORD PTR [ebx-0x61]
  411d1f:	mov    ds:0xf91aee7a,eax
  411d24:	jle    0x411cc4
  411d26:	sub    eax,0xa75654d8
  411d2b:	fisub  DWORD PTR [esi+0x76]
  411d2e:	imul   esi,DWORD PTR [esp+ecx*1-0x4bae40ea],0xb3280ab
  411d39:	xor    eax,0xc26e0cdd
  411d3e:	inc    ecx
  411d3f:	shl    BYTE PTR [edi],cl
  411d41:	push   esp
  411d42:	add    DWORD PTR [ebx-0x4ade90ab],edi
  411d48:	mov    bl,0x3e
  411d4a:	or     edx,DWORD PTR [eax-0x38]
  411d4d:	sbb    ah,BYTE PTR [ecx]
  411d4f:	stos   BYTE PTR es:[edi],al
  411d50:	bound  ebx,QWORD PTR [ecx+0x35]
  411d53:	out    0xf2,eax
  411d55:	push   ecx
  411d56:	mov    di,0xcb5a
  411d5a:	mov    eax,0xe05372e9
  411d5f:	popf   
  411d60:	xor    al,0xd2
  411d62:	sbb    BYTE PTR [ebx+0x3b],dl
  411d65:	xchg   esi,eax
  411d66:	es jle 0x411d89
  411d69:	ret    0x414c
  411d6c:	ficomp DWORD PTR [ebp+0x26]
  411d6f:	adc    al,0x81
  411d71:	icebp  
  411d72:	and    al,0x8c
  411d74:	ret    
  411d75:	pusha  
  411d76:	xor    al,BYTE PTR [edi]
  411d78:	adc    al,0x73
  411d7a:	cmp    ch,dh
  411d7c:	mov    al,0xaa
  411d7e:	pushf  
  411d7f:	clc    
  411d80:	pop    edx
  411d81:	xor    edi,esi
  411d83:	xchg   edi,eax
  411d84:	ror    al,1
  411d86:	sub    BYTE PTR [edx],0x31
  411d89:	cdq    
  411d8a:	and    al,ch
  411d8c:	and    ebp,0xfffffff4
  411d8f:	mov    al,0x76
  411d91:	push   esp
  411d92:	fdiv   st(1),st
  411d94:	mov    ebp,0x192a20b6
  411d99:	int    0x2e
  411d9b:	fsub   QWORD PTR [edi-0x3e37e2e9]
  411da1:	clc    
  411da2:	call   0x75d23411
  411da7:	fnstcw WORD PTR [esi]
  411da9:	push   edi
  411daa:	lds    ebx,FWORD PTR [edi+0x7bbc33e1]
  411db0:	shl    DWORD PTR [edx+0x1586ff02],0xb2
  411db7:	jnp    0x411d91
  411db9:	inc    ebx
  411dba:	(bad)  
  411dbb:	(bad)  ds:[ebp+0xe5be88a]
  411dc2:	(bad)
  411dc6:	out    dx,eax
  411dc7:	fld    TBYTE PTR [edi]
  411dc9:	shr    DWORD PTR [esi+edi*8],0x5e
  411dcd:	lock adc eax,0xba40d844
  411dd3:	push   ebp
  411dd4:	retf   
  411dd5:	stc    
  411dd6:	(bad)  
  411dd7:	sub    bh,BYTE PTR [ecx-0x51e476d]
  411ddd:	cli    
  411dde:	sub    DWORD PTR [ebx+0x5d],eax
  411de1:	dec    eax
  411de2:	cmc    
  411de3:	push   esp
  411de4:	out    0x6e,eax
  411de6:	adc    DWORD PTR [ecx],esi
  411de8:	fwait
  411de9:	cli    
  411dea:	xchg   esi,eax
  411deb:	lods   al,BYTE PTR ds:[esi]
  411dec:	dec    esp
  411ded:	call   0x8ccf4a19
  411df2:	mov    dh,ch
  411df4:	(bad)  
  411df5:	sbb    DWORD PTR [edx-0xa688730],ebx
  411dfb:	sub    edx,DWORD PTR [ecx+0x55]
  411dfe:	loope  0x411e32
  411e00:	fs (bad) 
  411e02:	cld    
  411e03:	mov    esi,0x302b53fa
  411e08:	iret   
  411e09:	repnz mov ecx,0xb79f0908
  411e0f:	push   ebx
  411e10:	sbb    dl,ah
  411e12:	repnz cmp al,cl
  411e15:	adc    al,0x4c
  411e17:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411e18:	pusha  
  411e19:	arpl   WORD PTR [edi+0x6b814462],sp
  411e1f:	inc    edx
  411e20:	xchg   ebp,eax
  411e21:	pop    esp
  411e22:	mov    ebp,0x5823e207
  411e27:	or     DWORD PTR [esi],eax
  411e29:	int    0xa8
  411e2b:	push   ecx
  411e2c:	js     0x411e7e
  411e2e:	test   al,0x88
  411e30:	push   cs
  411e31:	and    BYTE PTR [ecx],0xeb
  411e34:	or     ebx,DWORD PTR [edi]
  411e36:	and    DWORD PTR [eax],0x1a074b52
  411e3c:	ror    DWORD PTR [edi],0xb8
  411e3f:	mov    cl,0x64
  411e41:	xchg   esp,eax
  411e42:	xchg   DWORD PTR [eax+0x6ab917ac],edi
  411e48:	xor    BYTE PTR [ecx],ch
  411e4a:	imul   esp,DWORD PTR [ebx+0x1d4e4224],0x71
  411e51:	jbe    0x411e49
  411e53:	jo     0x411e31
  411e55:	ret    0x8b32
  411e58:	or     DWORD PTR [ecx],ecx
  411e5a:	pop    ecx
  411e5b:	pop    ebx
  411e5c:	lods   eax,DWORD PTR ds:[esi]
  411e5d:	and    eax,0x5b69687b
  411e62:	std    
  411e63:	add    al,0xef
  411e65:	outs   dx,DWORD PTR ds:[esi]
  411e66:	ins    BYTE PTR es:[edi],dx
  411e67:	or     DWORD PTR [eax-0xf26b8f4],edi
  411e6d:	jns    0x411e6d
  411e6f:	push   ecx
  411e70:	pusha  
  411e71:	hlt    
  411e72:	add    eax,esi
  411e74:	iret   
  411e75:	ins    DWORD PTR es:[edi],dx
  411e76:	sbb    eax,0x3cad3a56
  411e7b:	out    0x18,al
  411e7d:	adc    esp,ebx
  411e7f:	push   cx
  411e81:	push   edx
  411e82:	loopne 0x411ef7
  411e84:	mov    ah,0xbd
  411e86:	adc    DWORD PTR es:[ebp-0x3ae0d6ed],esp
  411e8d:	jg     0x411ec1
  411e8f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411e90:	add    BYTE PTR [ecx],0x7f
  411e93:	add    DWORD PTR [ecx-0x2b],edx
  411e96:	out    dx,eax
  411e97:	lods   eax,DWORD PTR ds:[esi]
  411e98:	into   
  411e99:	loopne 0x411e68
  411e9b:	add    ebp,DWORD PTR [eax+0x41]
  411e9e:	mov    bl,0x27
  411ea0:	push   esi
  411ea1:	cmp    bh,bh
  411ea3:	mov    al,0x3f
  411ea5:	and    eax,DWORD PTR [edx+0x776d7d]
  411eab:	dec    esp
  411eac:	in     al,dx
  411ead:	in     eax,dx
  411eae:	dec    edx
  411eaf:	aam    0xc1
  411eb1:	adc    edx,DWORD PTR [eax+0x711d417c]
  411eb7:	ror    BYTE PTR [eax-0x7a],0x0
  411ebb:	loopne 0x411f15
  411ebd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411ebe:	lea    ecx,[ebx+0x52]
  411ec1:	outs   dx,BYTE PTR ds:[esi]
  411ec2:	es jge 0x411e63
  411ec5:	stos   DWORD PTR es:[edi],eax
  411ec6:	xor    DWORD PTR [esi+0xbbc3d31],0xe66f29c2
  411ed0:	push   ebx
  411ed1:	push   es
  411ed2:	loope  0x411eb4
  411ed4:	xor    cl,BYTE PTR [edx]
  411ed6:	ins    BYTE PTR es:[edi],dx
  411ed7:	int3   
  411ed8:	cmp    al,0x8f
  411eda:	sub    bl,bh
  411edc:	xor    al,0x5c
  411ede:	out    0x76,eax
  411ee0:	mov    bl,0xb4
  411ee2:	(bad)  
  411ee3:	fs (bad) 
  411ee5:	out    0xae,al
  411ee7:	dec    esp
  411ee8:	dec    esi
  411ee9:	cmp    eax,0x30013972
  411eee:	fsub   DWORD PTR [edi]
  411ef0:	ficom  DWORD PTR [ecx+0x715e95e2]
  411ef6:	sub    DWORD PTR [edx+0x74],esp
  411ef9:	imul   eax,DWORD PTR [eax+0x18],0x29da5a86
  411f00:	and    DWORD PTR [ebx-0x6c],edx
  411f03:	inc    edi
  411f04:	loop   0x411eb9
  411f06:	jbe    0x411f2b
  411f08:	dec    edx
  411f09:	xor    bl,dl
  411f0b:	pop    es
  411f0c:	pop    eax
  411f0d:	cmp    al,0xb2
  411f0f:	rcr    ebp,1
  411f11:	jnp    0x411f07
  411f13:	sti    
  411f14:	or     esi,DWORD PTR [edx-0x51943a5a]
  411f1a:	mov    dl,0x76
  411f1c:	hlt    
  411f1d:	xchg   ebx,eax
  411f1e:	dec    ebx
  411f1f:	push   0x472ef05e
  411f24:	push   ebp
  411f25:	and    DWORD PTR [edi+0xc],esp
  411f28:	and    al,0xe3
  411f2a:	sbb    ebx,ebp
  411f2c:	cld    
  411f2d:	adc    esi,DWORD PTR ds:0x56ba4a08
  411f33:	aad    0x7e
  411f35:	ror    DWORD PTR [esp-0x18],cl
  411f39:	lods   eax,DWORD PTR ds:[esi]
  411f3a:	cmp    eax,0x26547aee
  411f3f:	push   0x78a738df
  411f44:	xchg   edi,eax
  411f45:	pop    ds
  411f46:	je     0x411f9d
  411f48:	std    
  411f49:	shl    DWORD PTR [esi+ecx*1-0x68bec1db],cl
  411f50:	push   edx
  411f51:	dec    eax
  411f52:	in     eax,0xac
  411f54:	adc    al,0x18
  411f56:	push   es
  411f57:	add    BYTE PTR [ecx+0x9],dl
  411f5a:	sbb    esi,ecx
  411f5c:	mov    esp,0x7c1805c2
  411f61:	xchg   esi,eax
  411f62:	aad    0xfc
  411f64:	lock push edx
  411f66:	stc    
  411f67:	scas   eax,DWORD PTR es:[edi]
  411f68:	loopne 0x411f5f
  411f6a:	sbb    eax,0x47906ee8
  411f6f:	add    eax,0xe6e2b13f
  411f74:	nop
  411f75:	push   edi
  411f76:	and    BYTE PTR [edx-0x6f],0x5d
  411f7a:	sti    
  411f7b:	call   0x4191adeb
  411f80:	cmp    eax,0xf9716a91
  411f85:	popf   
  411f86:	mov    dl,0x52
  411f88:	gs ins BYTE PTR es:[edi],dx
  411f8a:	fs (bad) 
  411f8d:	mov    ch,0xc8
  411f8f:	icebp  
  411f90:	inc    edx
  411f91:	sbb    BYTE PTR [edi],0xdd
  411f94:	das    
  411f95:	jmp    0xa1ab:0xf9a44b4c
  411f9c:	dec    ebx
  411f9d:	inc    edi
  411f9e:	icebp  
  411f9f:	popf   
  411fa0:	pop    ebp
  411fa1:	nop
  411fa2:	add    BYTE PTR [ebx],bh
  411fa4:	push   edi
  411fa5:	aad    0x5c
  411fa7:	es or  dl,bl
  411faa:	mov    ss,WORD PTR [eax+0x5f4b8e6a]
  411fb0:	and    DWORD PTR [edx+0x3c6c96b6],edx
  411fb6:	stos   DWORD PTR es:[edi],eax
  411fb7:	and    dl,BYTE PTR [eax+0x55]
  411fba:	cdq    
  411fbb:	push   edi
  411fbc:	jle    0x411fc4
  411fbe:	sub    al,0x9
  411fc0:	call   0xb8718d83
  411fc5:	xchg   ebx,eax
  411fc6:	daa    
  411fc7:	imul   eax,DWORD PTR [edx],0x15e6f069
  411fcd:	jl     0x411fb3
  411fcf:	ins    DWORD PTR es:[edi],dx
  411fd0:	jecxz  0x411fa5
  411fd2:	fstp   QWORD PTR [ebp+0x74425115]
  411fd8:	(bad)  
  411fd9:	jmp    0x411f6c
  411fdb:	xchg   ebp,eax
  411fdc:	adc    BYTE PTR [esi-0x8],dh
  411fdf:	xchg   edx,eax
  411fe0:	pop    ds
  411fe1:	test   al,0xad
  411fe3:	inc    eax
  411fe4:	stos   DWORD PTR es:[edi],eax
  411fe5:	and    al,0xc5
  411fe7:	inc    edi
  411fe8:	jp     0x411f7b
  411fea:	jbe    0x41201e
  411fec:	jns    0x411fc0
  411fee:	jg     0x411f70
  411ff0:	inc    ebp
  411ff1:	sbb    ebx,DWORD PTR [ebx+0x76d03c34]
  411ff7:	mov    cl,0x87
  411ff9:	arpl   WORD PTR [ebp-0x75],ax
  411ffc:	push   0x6cb5289a
  412001:	adc    dh,BYTE PTR [eax+0x4d]
  412004:	pop    eax
  412005:	cli    
  412006:	(bad)  
  412007:	(bad)  
  412008:	out    dx,al
  412009:	(bad)  
  41200a:	jnp    0x412072
  41200c:	mov    edx,0x12ce2378
  412011:	sbb    DWORD PTR [ebx],ecx
  412013:	call   0x9e79:0x741290c3
  41201a:	std    
  41201b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41201c:	or     bh,al
  41201e:	xchg   DWORD PTR [eax-0x269d9fef],ecx
  412024:	xchg   esp,eax
  412025:	jecxz  0x411ff7
  412027:	push   es
  412028:	mov    ah,0x8b
  41202a:	and    edx,ecx
  41202c:	or     eax,0xe1d971c8
  412031:	aaa    
  412032:	adc    BYTE PTR [eax],ah
  412034:	push   eax
  412035:	push   ebx
  412036:	jp     0x412095
  412038:	adc    BYTE PTR [edi-0x7d20ba21],cl
  41203e:	enter  0x899d,0x56
  412042:	cs sbb al,0xd4
  412045:	cdq    
  412046:	rcr    BYTE PTR [edi+0x7f58e227],cl
  41204c:	jle    0x412003
  41204e:	mov    BYTE PTR [ebx],bh
  412050:	push   ss
  412051:	sbb    eax,0x277f3f42
  412056:	jo     0x412093
  412058:	inc    esi
  412059:	xchg   DWORD PTR [ecx+0x7406e0e3],ebx
  41205f:	shl    BYTE PTR [ebx-0x69],cl
  412062:	and    ch,BYTE PTR [eax+ebx*8-0x6dbae810]
  412069:	lds    esp,FWORD PTR [ecx]
  41206b:	xor    eax,0x3073126a
  412070:	out    0x65,al
  412072:	stos   BYTE PTR es:[edi],al
  412073:	mov    ecx,DWORD PTR [edx+0x22e53606]
  412079:	inc    edi
  41207a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41207b:	or     DWORD PTR [esi+0x60],ebx
  41207e:	mov    eax,ds:0xcfec1cf3
  412083:	pushf  
  412084:	add    dh,BYTE PTR [esi+0x73931d1]
  41208a:	bound  edx,QWORD PTR [edi]
  41208c:	fwait
  41208d:	adc    bl,cl
  41208f:	fimul  WORD PTR [esi+0x7693e9fa]
  412095:	cs jnp 0x4120a8
  412098:	jl     0x412082
  41209a:	(bad)  
  41209b:	xchg   esi,eax
  41209c:	cmp    al,0xb2
  41209e:	fiadd  WORD PTR ds:0xe0ffd30d
  4120a4:	dec    eax
  4120a5:	scas   eax,DWORD PTR es:[edi]
  4120a6:	retf   0x5ca7
  4120a9:	mov    eax,DWORD PTR [ebp+0x8]
  4120ac:	mov    eax,DWORD PTR [eax]
  4120ae:	mov    ecx,DWORD PTR ds:0x41b224
  4120b4:	add    DWORD PTR [eax],ecx
  4120b6:	pop    esi
  4120b7:	pop    ebp
  4120b8:	ret    0x8
  4120bb:	push   ebp
  4120bc:	mov    ebp,esp
  4120be:	sub    esp,0x30
  4120c1:	and    ecx,DWORD PTR ds:0x42fd76
  4120c7:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  4120ce:	mov    eax,ds:0x42fcd5
  4120d3:	adc    DWORD PTR ds:0x42e6ef,eax
  4120d9:	mov    DWORD PTR [ebp-0x18],0xf89c8530
  4120e0:	sbb    DWORD PTR ds:0x42e6eb,0x6a34
  4120ea:	mov    ecx,DWORD PTR [ebp-0x4]
  4120ed:	sub    DWORD PTR ds:0x42e703,0x730a
  4120f7:	push   ebx
  4120f8:	mov    DWORD PTR ds:0x42e6fb,0x19
  412102:	cmp    DWORD PTR ds:0x42e6fb,0x0
  412109:	je     0x412140
  41210f:	cmp    DWORD PTR ds:0x42e6fb,0x1e
  412116:	jne    0x41212e
  41211c:	push   0x42fd7e
  412121:	push   0x0
  412123:	push   0x42e26d
  412128:	call   DWORD PTR ds:0x42e483
  41212e:	mov    ebx,DWORD PTR ds:0x42e6fb
  412134:	dec    ebx
  412135:	mov    DWORD PTR ds:0x42e6fb,ebx
  41213b:	jmp    0x412102
  412140:	mov    eax,0x7510855
  412145:	xor    ecx,eax
  412147:	sub    ebx,0x2eeb
  41214d:	mov    ebx,0x32729c
  412152:	sbb    DWORD PTR ds:0x42e120,0x42fd01
  41215c:	jmp    0x412440
  412161:	mov    edx,0xf222c858
  412166:	mov    dl,0x6a
  412168:	pop    eax
  412169:	dec    eax
  41216a:	xor    bh,0xa0
  41216d:	outs   dx,BYTE PTR ds:[esi]
  41216e:	ret    0xf952
  412171:	inc    esi
  412172:	pop    edi
  412173:	jo     0x4121e5
  412175:	mov    ecx,0xb070707e
  41217a:	stc    
  41217b:	pushf  
  41217c:	pop    esp
  41217d:	jns    0x412177
  41217f:	lods   eax,DWORD PTR ds:[esi]
  412180:	xor    bh,ah
  412182:	fidivr WORD PTR [ecx+0x2e]
  412185:	jge    0x412167
  412187:	ins    BYTE PTR es:[edi],dx
  412188:	xchg   ecx,eax
  412189:	mov    bl,0xf
  41218b:	aaa    
  41218c:	dec    esi
  41218d:	popf   
  41218e:	jnp    0x412204
  412190:	js     0x4121da
  412192:	xchg   DWORD PTR [edi-0x2],esi
  412195:	jl     0x412178
  412197:	xchg   ebx,eax
  412198:	leave  
  412199:	inc    esi
  41219a:	imul   esp,DWORD PTR [ecx+0x73],0xffffffe3
  41219e:	popa   
  41219f:	mov    esp,0x497d8df3
  4121a4:	dec    eax
  4121a5:	stos   DWORD PTR es:[edi],eax
  4121a6:	push   ss
  4121a7:	adc    al,0xa6
  4121a9:	add    al,0xd0
  4121ab:	stc    
  4121ac:	mov    ebx,0x542e4b0a
  4121b1:	mov    esp,0xe8940ea0
  4121b6:	sub    cl,0xe3
  4121b9:	outs   dx,BYTE PTR ds:[esi]
  4121ba:	(bad)  
  4121bb:	xchg   BYTE PTR [edx-0x51],cl
  4121be:	es (bad) 
  4121c0:	sti    
  4121c1:	cmp    al,0x20
  4121c3:	push   esp
  4121c4:	lea    ecx,[eax]
  4121c6:	xchg   edx,eax
  4121c7:	or     ah,BYTE PTR [eax+0x7f9c5e50]
  4121cd:	in     al,0x3f
  4121cf:	loop   0x4121b0
  4121d1:	(bad)  
  4121d2:	retf   
  4121d3:	mov    edx,0xa36186e2
  4121d8:	sub    ebx,DWORD PTR ds:0xde38d358
  4121de:	mov    bh,BYTE PTR [edi+ecx*4-0x2ee38c29]
  4121e5:	mov    bl,0x4d
  4121e7:	jae    0x412260
  4121e9:	(bad)  
  4121eb:	lods   eax,DWORD PTR ds:[esi]
  4121ec:	in     eax,0xf5
  4121ee:	popf   
  4121ef:	or     DWORD PTR [esi+edx*4+0x35],ebx
  4121f3:	fnstenv [ecx+0x7a2cb253]
  4121f9:	xchg   BYTE PTR [edx],al
  4121fb:	icebp  
  4121fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4121fd:	add    eax,0x11adf6d8
  412202:	sbb    ecx,DWORD PTR [ecx-0x61b82d17]
  412208:	jo     0x412239
  41220a:	mov    ds:0xf7d7508,al
  41220f:	lea    ebp,[edx-0x2d]
  412212:	ja     0x4121ae
  412214:	loope  0x412214
  412216:	mov    bh,ah
  412218:	xor    edi,ebx
  41221a:	lods   al,BYTE PTR ds:[esi]
  41221b:	aaa    
  41221c:	xchg   edi,eax
  41221d:	and    eax,0xb6e233
  412222:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412223:	inc    ebx
  412224:	mov    dl,0xa1
  412226:	push   0x4aaaf47e
  41222b:	mov    es,WORD PTR [ecx-0xe8d6619]
  412231:	push   esp
  412232:	stos   BYTE PTR es:[edi],al
  412233:	xor    esi,DWORD PTR [ecx]
  412235:	dec    ecx
  412236:	rcr    DWORD PTR [esi+0x35],1
  412239:	add    BYTE PTR [ecx-0x56],0x89
  41223d:	push   esp
  41223e:	xchg   edi,eax
  41223f:	stos   BYTE PTR es:[edi],al
  412240:	out    dx,al
  412241:	imul   esi,DWORD PTR [ecx-0x7e],0xffffffa6
  412245:	fucomi st,st(2)
  412247:	jo     0x4121ec
  412249:	ret    
  41224a:	clc    
  41224b:	mov    ebx,0xd883c9f9
  412250:	retf   0xdd10
  412253:	jge    0x41224f
  412255:	int3   
  412256:	out    dx,al
  412257:	cmp    eax,0x27134d9b
  41225c:	imul   edx,DWORD PTR ds:0x7fae2753,0x786e5058
  412266:	lods   al,BYTE PTR ds:[esi]
  412267:	lahf   
  412268:	or     BYTE PTR [edx],bh
  41226a:	dec    edi
  41226b:	call   0x432dc45c
  412270:	cld    
  412271:	jmp    0x41223b
  412273:	data16 cmc 
  412275:	out    dx,al
  412276:	or     eax,0x8775d77c
  41227b:	or     esi,DWORD PTR [eax+0x11c0364]
  412281:	stos   DWORD PTR es:[edi],eax
  412282:	sbb    al,0x2d
  412284:	jmp    0x33e77f00
  412289:	pop    esp
  41228a:	(bad)  
  41228b:	cmc    
  41228c:	(bad)  [esi-0x5e]
  41228f:	dec    edi
  412290:	repz add dh,al
  412293:	fs in  eax,dx
  412295:	add    al,0x3d
  412297:	cmp    esi,DWORD PTR [eax+edx*4]
  41229a:	clc    
  41229b:	enter  0x3d41,0xb6
  41229f:	jo     0x412258
  4122a1:	and    eax,DWORD PTR ds:0x97ec3e12
  4122a7:	pop    esi
  4122a8:	or     eax,0xc2293d58
  4122ad:	(bad)
  4122b0:	adc    BYTE PTR [ecx+0x5f],al
  4122b3:	push   eax
  4122b4:	add    ah,BYTE PTR [ebx+0x6a8df63f]
  4122ba:	ss sbb eax,0x451d3dae
  4122c0:	arpl   di,cx
  4122c2:	adc    BYTE PTR [ebx-0x542f23e5],dh
  4122c8:	repz aas 
  4122ca:	and    DWORD PTR [esi],edx
  4122cc:	imul   edi,edx,0xf1897eaf
  4122d2:	push   edx
  4122d3:	xchg   esi,eax
  4122d4:	sub    al,0xa0
  4122d6:	adc    eax,0x42e4e04d
  4122db:	and    bh,BYTE PTR ds:0x5007dce4
  4122e1:	shl    DWORD PTR [edi-0x59],cl
  4122e4:	xor    ch,dl
  4122e6:	inc    eax
  4122e7:	aam    0x6d
  4122e9:	xchg   ebx,eax
  4122ea:	nop
  4122eb:	aaa    
  4122ec:	out    dx,al
  4122ed:	mov    DWORD PTR [ebx-0x5b],ebx
  4122f0:	adc    DWORD PTR [edi],0x42
  4122f3:	pop    ecx
  4122f4:	iret   
  4122f5:	ret    
  4122f6:	call   0x890d:0xc56d545f
  4122fd:	inc    eax
  4122fe:	cmp    eax,0xc33156ab
  412303:	push   ss
  412304:	push   es
  412305:	cli    
  412306:	inc    ebp
  412307:	jns    0x41230f
  412309:	test   eax,0xf603bfbc
  41230e:	mov    ah,0xc2
  412310:	out    dx,al
  412311:	ret    0x7f1
  412314:	aaa    
  412315:	jle    0x412330
  412317:	clc    
  412318:	pop    ebx
  412319:	loop   0x4122ee
  41231b:	inc    edx
  41231c:	fbstp  TBYTE PTR [eax+0x39]
  41231f:	xchg   al,bh
  412321:	nop
  412322:	cmc    
  412323:	aam    0xa7
  412325:	jo     0x412398
  412327:	dec    ecx
  412328:	arpl   WORD PTR [ebp-0x1b],bx
  41232b:	(bad)  
  41232c:	out    0xc2,al
  41232e:	(bad)  
  41232f:	icebp  
  412330:	int    0xa0
  412332:	adc    eax,0x16c614cd
  412337:	xchg   edx,eax
  412338:	dec    edx
  412339:	jne    0x4123a6
  41233b:	scas   al,BYTE PTR es:[edi]
  41233c:	ja     0x41231a
  41233e:	push   esp
  41233f:	push   edi
  412340:	sbb    DWORD PTR [edi+0x8],esi
  412343:	inc    edx
  412344:	pop    eax
  412345:	int    0xe6
  412347:	ret    
  412348:	adc    dl,bl
  41234a:	popa   
  41234b:	push   di
  41234d:	and    al,0x6c
  41234f:	retf   0x4fd3
  412352:	sbb    al,0xc2
  412354:	ret    0xa2af
  412357:	and    dh,ch
  412359:	adc    bl,dl
  41235b:	dec    eax
  41235c:	mov    dl,0xa
  41235e:	cwde   
  41235f:	gs daa 
  412361:	and    edi,DWORD PTR [ecx-0x78175d55]
  412367:	inc    ebp
  412368:	cdq    
  412369:	adc    BYTE PTR [ebp+edx*8+0x1795f1e3],bh
  412370:	jmp    0x3590:0x7df009fc
  412377:	mov    ch,0xb2
  412379:	mov    ds:0xfdc05b7a,eax
  41237e:	repnz xchg ebx,eax
  412380:	dec    ecx
  412381:	cmp    BYTE PTR [ecx+0x49745a03],dh
  412387:	push   eax
  412388:	call   0xa7cd1308
  41238d:	lods   eax,DWORD PTR ds:[esi]
  41238e:	outs   dx,BYTE PTR ds:[esi]
  41238f:	outs   dx,DWORD PTR ds:[esi]
  412390:	inc    esp
  412391:	or     ah,dl
  412393:	jns    0x412395
  412395:	dec    edx
  412396:	inc    ebp
  412397:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412398:	cs aas 
  41239a:	adc    DWORD PTR [ebx],esi
  41239c:	add    DWORD PTR [edi+ecx*1+0x6f8569bc],0xffffff88
  4123a4:	add    BYTE PTR [edi-0x41f240f5],ch
  4123aa:	adc    esi,edx
  4123ac:	ins    BYTE PTR es:[edi],dx
  4123ad:	mov    al,ds:0xec519523
  4123b2:	dec    eax
  4123b3:	int3   
  4123b4:	sub    DWORD PTR [edx+0xf7388f2],ebp
  4123ba:	jle    0x4123b8
  4123bc:	xlat   BYTE PTR ds:[ebx]
  4123bd:	mov    edx,0xb332845c
  4123c2:	es cs jns 0x412409
  4123c6:	cli    
  4123c7:	push   ebx
  4123c8:	push   es
  4123c9:	adc    al,0xce
  4123cb:	mov    dl,0xa0
  4123cd:	shl    DWORD PTR [esp+eax*4+0x502faa4a],0xab
  4123d5:	imul   edx,edi,0x509fd04b
  4123db:	into   
  4123dc:	cmp    ch,cl
  4123de:	mov    ah,BYTE PTR [ebp+0x1a]
  4123e1:	or     dh,BYTE PTR [ebp+0x55666f18]
  4123e7:	push   0xffffffc1
  4123e9:	mov    bh,0xb
  4123eb:	mov    DWORD PTR [ecx+0x5c49941b],ecx
  4123f1:	in     eax,0x86
  4123f3:	fdivr  QWORD PTR [ebp-0x53]
  4123f6:	fsubr  DWORD PTR [ebx]
  4123f8:	and    BYTE PTR [esi],0x6c
  4123fb:	icebp  
  4123fc:	int    0x64
  4123fe:	xor    cl,BYTE PTR [esi]
  412400:	sub    BYTE PTR [ebp+0x4fd276d5],al
  412406:	dec    eax
  412407:	ins    BYTE PTR es:[edi],dx
  412408:	ror    DWORD PTR [ecx],cl
  41240a:	xchg   edi,eax
  41240b:	(bad)  
  41240c:	adc    al,0x97
  41240e:	dec    DWORD PTR [esp+ebp*1-0x1ad6f336]
  412415:	jecxz  0x4123df
  412417:	clc    
  412418:	fucomp st(7)
  41241a:	add    eax,0xcc35b539
  41241f:	lahf   
  412420:	pusha  
  412421:	adc    al,BYTE PTR [ecx+0x7ca17ecc]
  412427:	les    edx,FWORD PTR [ebx-0x3eae8ed1]
  41242d:	retf   0xe205
  412430:	idiv   DWORD PTR [edx-0x67]
  412433:	ret    0x33de
  412436:	leave  
  412437:	cs jp  0x4123f8
  41243a:	jmp    0x67314313
  41243f:	retf   0xcb03
  412442:	sub    DWORD PTR ds:0x42fcf9,0xf96
  41244c:	jmp    0x412730
  412451:	hlt    
  412452:	xor    BYTE PTR [ebx+edi*8+0x74],bl
  412456:	fwait
  412457:	repz ja 0x41244c
  41245a:	inc    ecx
  41245b:	xchg   ecx,eax
  41245c:	aaa    
  41245d:	mov    eax,0x8f0ddab5
  412462:	pop    esp
  412463:	jo     0x4124d5
  412465:	mov    ecx,0x7a70707e
  41246a:	fadd   DWORD PTR [edi-0x5f]
  41246d:	imul   esp,DWORD PTR [eax],0x11f81740
  412473:	ror    ecx,cl
  412475:	bound  esi,QWORD PTR [ecx+ebp*8+0xa46b42f]
  41247c:	ja     0x41241f
  41247e:	xor    al,0x74
  412480:	jle    0x4124b9
  412482:	mov    al,ds:0xe676ddf5
  412487:	sbb    BYTE PTR fs:[ebp+0xd],ah
  41248b:	sub    edx,DWORD PTR fs:[eax]
  41248e:	(bad)  
  41248f:	not    BYTE PTR [esi+0x9]
  412492:	rcr    DWORD PTR [edx+0x28],cl
  412495:	test   BYTE PTR [ebp+0x9c95e6d],0x17
  41249c:	jmp    0x1578:0x59d7d678
  4124a3:	jmp    0x29b39b7c
  4124a8:	mov    al,0x6c
  4124aa:	add    BYTE PTR [ebx+esi*8],dh
  4124ad:	sub    esp,DWORD PTR [edx-0x6]
  4124b0:	pop    ebx
  4124b1:	jp     0x41246d
  4124b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4124b4:	aas    
  4124b5:	pop    esi
  4124b6:	or     eax,0x6cd568ba
  4124bb:	push   ecx
  4124bc:	mov    ebp,0x6189825c
  4124c1:	xchg   edx,eax
  4124c2:	push   edi
  4124c3:	fwait
  4124c4:	das    
  4124c5:	mov    edi,db0
  4124c8:	push   edx
  4124c9:	jne    0x41252f
  4124cb:	repz mov dh,0x2
  4124ce:	adc    BYTE PTR [edi],cl
  4124d0:	pop    ds
  4124d1:	leave  
  4124d2:	mov    bh,0x8f
  4124d4:	cdq    
  4124d5:	sahf   
  4124d6:	mov    ebp,edx
  4124d8:	xor    eax,0x4ada4524
  4124dd:	push   0x129af221
  4124e2:	sti    
  4124e3:	(bad)  
  4124e4:	cmp    ch,dh
  4124e6:	cmp    eax,0xe0037dd5
  4124eb:	cld    
  4124ec:	ret    0x56a3
  4124ef:	xchg   DWORD PTR [ecx+0x6571034f],edx
  4124f5:	pop    ecx
  4124f6:	mov    eax,0xf8b179ee
  4124fb:	hlt    
  4124fc:	push   0x71685a36
  412501:	add    ch,BYTE PTR [ebx+0x61]
  412504:	ins    DWORD PTR es:[edi],dx
  412505:	or     bh,bl
  412507:	pop    es
  412508:	iret   
  412509:	call   0xfc9a416f
  41250e:	ins    DWORD PTR es:[edi],dx
  41250f:	shl    DWORD PTR [edi+0x5fc363aa],0x56
  412516:	mov    esp,0x9057faa7
  41251b:	std    
  41251c:	inc    edi
  41251d:	mov    cs,ebx
  41251f:	jecxz  0x4125a0
  412521:	cmp    esp,DWORD PTR [edi]
  412523:	jmp    FWORD PTR [esi+0xa]
  412526:	hlt    
  412527:	stos   DWORD PTR es:[edi],eax
  412528:	jl     0x41257e
  41252a:	dec    ebx
  41252b:	xchg   BYTE PTR [edi+eax*8-0x3e816436],cl
  412532:	jle    0x41259a
  412534:	xlat   BYTE PTR ds:[ebx]
  412535:	call   0x5b44394e
  41253a:	cli    
  41253b:	hlt    
  41253c:	mov    WORD PTR [edi-0x77],ds
  41253f:	imul   eax,DWORD PTR [ecx],0x4b
  412542:	dec    ebp
  412543:	sbb    al,0x64
  412545:	inc    edx
  412546:	jp     0x412552
  412548:	(bad)  
  412549:	shl    BYTE PTR [edi+0x4a3af5c2],cl
  41254f:	or     bh,BYTE PTR [edx+ebx*1+0x30]
  412553:	or     bl,BYTE PTR [edi]
  412555:	iret   
  412556:	mov    eax,ds:0x33aa1dae
  41255b:	cs loope 0x4125a2
  41255e:	adc    eax,0x6c3f61a1
  412563:	pop    edi
  412564:	rcl    DWORD PTR [edx],cl
  412566:	les    ebx,FWORD PTR [ebx-0x2db2c59b]
  41256c:	fwait
  41256d:	and    ah,BYTE PTR [ebp+0x64]
  412570:	jb     0x4125d1
  412572:	push   es
  412573:	xchg   ebx,eax
  412574:	jmp    0xb016:0x3eb81861
  41257b:	test   ah,cl
  41257d:	subps  xmm5,XMMWORD PTR [ebp-0x39bd5ac1]
  412584:	mov    eax,0x32167c3b
  412589:	mov    esp,DWORD PTR [edx-0xbc369e2]
  41258f:	clc    
  412590:	test   al,0xa8
  412592:	fidivr DWORD PTR [ecx+0x3]
  412595:	xor    eax,0x75a0415
  41259a:	int3   
  41259b:	push   ebp
  41259c:	ja     0x4125d9
  41259e:	and    ch,dh
  4125a0:	shr    BYTE PTR [ebx-0xe],0xd6
  4125a4:	cwde   
  4125a5:	adc    bh,ch
  4125a7:	in     al,dx
  4125a8:	ds iret 
  4125aa:	xor    eax,0xecdf4209
  4125af:	in     al,0x32
  4125b1:	pop    es
  4125b2:	fdivr  QWORD PTR [esi+0x21a81dc7]
  4125b8:	push   ss
  4125b9:	(bad)  
  4125ba:	idiv   DWORD PTR [edi+0x68]
  4125bd:	jb     0x41260c
  4125bf:	dec    ecx
  4125c0:	jle    0x4125e1
  4125c2:	inc    eax
  4125c3:	imul   ebx,DWORD PTR [edi+0x24],0x6dc74911
  4125ca:	ins    DWORD PTR es:[edi],dx
  4125cb:	lds    eax,FWORD PTR [ecx+0x5e]
  4125ce:	xchg   si,ax
  4125d0:	mov    cl,0x53
  4125d2:	fldlg2 
  4125d4:	mov    ch,0x81
  4125d6:	xor    al,0xc1
  4125d8:	inc    ecx
  4125d9:	sub    al,0xd5
  4125db:	cmp    al,0x70
  4125dd:	mov    ebp,0x5fadd69d
  4125e2:	(bad)  
  4125e3:	fsub   QWORD PTR [edx+0x43]
  4125e6:	nop
  4125e7:	cmp    edi,DWORD PTR [edi-0x7d34f3a8]
  4125ed:	mov    esp,0x2dc1cab3
  4125f2:	xor    al,0x71
  4125f4:	dec    edi
  4125f5:	or     al,0x47
  4125f7:	xchg   esi,eax
  4125f8:	mov    cl,0xfe
  4125fa:	sub    dh,al
  4125fc:	mov    dl,0x5c
  4125fe:	loopne 0x412664
  412600:	ins    BYTE PTR es:[edi],dx
  412601:	xlat   BYTE PTR ds:[ebx]
  412602:	mov    cl,0x24
  412604:	out    dx,al
  412605:	dec    ecx
  412606:	xchg   ebx,eax
  412607:	and    BYTE PTR [ecx-0x5f],dh
  41260a:	int3   
  41260b:	loopne 0x4125ae
  41260d:	loop   0x412601
  41260f:	(bad)  
  412611:	mov    cl,BYTE PTR [ebx]
  412613:	arpl   WORD PTR [eax+ebp*2],bp
  412616:	retf   
  412617:	(bad)  
  412618:	dec    edx
  412619:	cmp    esi,DWORD PTR [ebx+0x2aceefaf]
  41261f:	mov    edi,0xa13616c7
  412624:	sub    al,0xdf
  412626:	xor    BYTE PTR [edx],dh
  412628:	mov    dl,BYTE PTR [edi-0x4d15193d]
  41262e:	xlat   BYTE PTR ds:[ebx]
  41262f:	add    ch,cl
  412631:	mov    dh,0xc5
  412633:	inc    eax
  412634:	jns    0x4125fe
  412636:	mov    edi,0xe5a9688d
  41263b:	xlat   BYTE PTR ds:[ebx]
  41263c:	inc    esi
  41263d:	pop    esp
  41263e:	mov    al,ds:0x95ca1dee
  412643:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412644:	scas   al,BYTE PTR es:[edi]
  412645:	pop    ds
  412646:	mov    dh,0x48
  412648:	std    
  412649:	lds    edx,FWORD PTR [ebx]
  41264b:	lods   eax,DWORD PTR ds:[esi]
  41264c:	push   0x9c97a29
  412651:	inc    bp
  412653:	xor    BYTE PTR [ecx-0x3577b5ab],0xfa
  41265a:	mov    dh,0x4b
  41265c:	aam    0x86
  41265e:	cmp    bl,BYTE PTR [eax]
  412660:	icebp  
  412661:	mov    bh,ah
  412663:	call   0x7ff18f34
  412668:	cli    
  412669:	sbb    al,0x9f
  41266b:	sub    DWORD PTR [eax-0x3a7ea41d],edx
  412671:	pop    es
  412672:	aad    0x1c
  412674:	outs   dx,BYTE PTR ds:[esi]
  412675:	inc    edi
  412676:	(bad)  
  412677:	adc    cl,dl
  412679:	retf   
  41267a:	push   ecx
  41267b:	cmc    
  41267c:	inc    edi
  41267d:	ss jmp 0x4126c8
  412680:	popf   
  412681:	adc    al,0xc2
  412683:	out    0x46,al
  412685:	mov    dh,0x8
  412687:	retw   0xa414
  41268b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41268c:	fwait
  41268d:	data16 int3 
  41268f:	mov    edi,0x6478bfd6
  412694:	in     al,dx
  412695:	scas   al,BYTE PTR es:[edi]
  412696:	push   es
  412697:	sbb    esp,ebx
  412699:	imul   esp,DWORD PTR [ebp-0xd619004],0xffffffbc
  4126a0:	and    al,0x53
  4126a2:	lods   al,BYTE PTR ds:[esi]
  4126a3:	repnz add DWORD PTR [ebx],ebp
  4126a6:	jge    0x412697
  4126a8:	add    esp,DWORD PTR [esi-0x34c2684]
  4126ae:	push   DWORD PTR [esi+0x7c]
  4126b1:	retf   0xc27d
  4126b4:	xor    ecx,ebp
  4126b6:	leave  
  4126b7:	jl     0x4126d8
  4126b9:	or     ebx,DWORD PTR [ebx-0x44]
  4126bc:	sbb    ch,BYTE PTR [esi+0x60e38447]
  4126c2:	pop    ecx
  4126c3:	add    DWORD PTR [edx],ebx
  4126c5:	scas   eax,DWORD PTR es:[edi]
  4126c6:	inc    ecx
  4126c7:	jmp    0x4126d8
  4126c9:	add    eax,0x7fa6657
  4126ce:	lods   al,BYTE PTR ds:[esi]
  4126cf:	add    eax,ecx
  4126d1:	mov    es,WORD PTR [edi]
  4126d3:	ins    BYTE PTR es:[edi],dx
  4126d4:	and    al,0xd3
  4126d6:	call   0xd8f2:0x60682fe3
  4126dd:	pop    eax
  4126de:	popa   
  4126df:	sahf   
  4126e0:	pop    ecx
  4126e1:	es test al,0x81
  4126e4:	sub    bh,BYTE PTR [edi+0x140ef569]
  4126ea:	mov    ch,0x35
  4126ec:	sti    
  4126ed:	mov    dl,0x3c
  4126ef:	lods   eax,DWORD PTR ds:[esi]
  4126f0:	jns    0x412768
  4126f2:	jge    0x412715
  4126f4:	or     eax,0x1e541a92
  4126f9:	sub    BYTE PTR [ebx+ecx*1+0x43],bl
  4126fd:	lea    eax,[edx]
  4126ff:	mul    DWORD PTR [edx-0x59312e7f]
  412705:	sbb    DWORD PTR [ecx],esi
  412707:	mov    ch,0x7a
  412709:	imul   edx,esi,0x4a914794
  41270f:	je     0x412698
  412711:	push   0xffffffad
  412713:	or     BYTE PTR [edx],bl
  412715:	leave  
  412716:	inc    edx
  412717:	lea    eax,[edx-0x50291efd]
  41271d:	out    dx,eax
  41271e:	cmp    BYTE PTR [esi],bl
  412720:	cmp    bl,ah
  412722:	xchg   esp,eax
  412723:	xor    BYTE PTR [edx-0x5de8e902],ah
  412729:	es xchg ebp,eax
  41272b:	xor    BYTE PTR [edi-0x56],cl
  41272e:	push   eax
  41272f:	mov    DWORD PTR [ecx+0x2581e44d],ecx
  412735:	jbe    0x412734
  412737:	inc    edx
  412738:	add    BYTE PTR [eax],al
  41273a:	add    BYTE PTR [eax],al
  41273c:	add    cl,ch
  41273e:	sldt   WORD PTR [eax]
  412741:	add    BYTE PTR [ebx],dh
  412743:	leave  
  412744:	or     ecx,DWORD PTR ds:0x42fd76
  41274a:	inc    ecx
  41274b:	mov    DWORD PTR ds:0x42fd76,ecx
  412751:	cmp    DWORD PTR ds:0x42fd76,0x1c
  412758:	jae    0x41279b
  41275e:	cmp    DWORD PTR ds:0x42fd76,0x11
  412765:	jne    0x41277c
  41276b:	push   0x5b8f
  412770:	push   DWORD PTR [ebp-0x20]
  412773:	push   DWORD PTR [ebp-0x14]
  412776:	call   DWORD PTR ds:0x42e313
  41277c:	cmp    DWORD PTR ds:0x42fd76,0x10
  412783:	jne    0x412796
  412789:	mov    ecx,DWORD PTR ds:0x42fd76
  41278f:	inc    ecx
  412790:	mov    DWORD PTR ds:0x42fd76,ecx
  412796:	jmp    0x412742
  41279b:	mov    ecx,DWORD PTR [ebp+0x14]
  41279e:	push   esi
  41279f:	xor    DWORD PTR ds:0x42fd6e,0x1648
  4127a9:	push   edi
  4127aa:	test   ecx,ecx
  4127ac:	jmp    0x412a90
  4127b1:	mov    ds:0xc112c158,eax
  4127b6:	mov    cl,0x73
  4127b8:	jne    0x4127c0
  4127ba:	jne    0x4127b4
  4127bc:	sub    ebp,DWORD PTR [esi]
  4127be:	mov    edi,DWORD PTR [esi-0x23]
  4127c1:	enter  0x7059,0x70
  4127c5:	mov    ecx,0x2770707e
  4127ca:	stc    
  4127cb:	leave  
  4127cc:	sahf   
  4127cd:	lahf   
  4127ce:	outs   dx,DWORD PTR ds:[esi]
  4127cf:	mov    WORD PTR [ecx],cs
  4127d1:	jp     0x41276d
  4127d3:	pop    eax
  4127d4:	mov    al,0xc6
  4127d6:	stc    
  4127d7:	and    BYTE PTR [ebx+0x42e4c355],0x6e
  4127de:	jecxz  0x41279a
  4127e0:	sbb    ch,BYTE PTR [edi+0x47dfe8e9]
  4127e6:	inc    edi
  4127e7:	cmp    DWORD PTR [ebx-0x4c],edi
  4127ea:	adc    ebx,DWORD PTR [edx+0x1c33f84c]
  4127f0:	sbb    eax,DWORD PTR [edx+eiz*2+0x4d]
  4127f4:	mov    eax,ds:0xe93c7764
  4127f9:	mov    ecx,0x7201c0aa
  4127fe:	aaa    
  4127ff:	stos   BYTE PTR es:[edi],al
  412800:	mov    DWORD PTR [esi-0x43347ae7],0x41590f74
  41280a:	test   al,0x8e
  41280c:	jbe    0x4127e5
  41280e:	test   DWORD PTR [ecx+0x49096991],ecx
  412814:	add    eax,edx
  412816:	mov    ebp,0xf887cf5
  41281b:	sbb    esi,DWORD PTR [edi]
  41281d:	std    
  41281e:	cmp    eax,0xc357c7a1
  412823:	jp     0x412891
  412825:	push   esi
  412826:	inc    ebp
  412827:	fisub  DWORD PTR [ecx]
  412829:	xlat   BYTE PTR ds:[ebx]
  41282a:	lods   al,BYTE PTR ds:[esi]
  41282b:	shr    BYTE PTR [edx+ebp*1-0x10c00a22],1
  412832:	aaa    
  412833:	push   es
  412834:	mov    bl,0x27
  412836:	jno    0x412811
  412838:	add    eax,0x374983e7
  41283d:	cmp    al,0x43
  41283f:	sbb    bh,cl
  412841:	shl    eax,1
  412843:	jns    0x412844
  412845:	mov    al,ds:0x481c85d
  41284a:	int    0xd9
  41284c:	shl    DWORD PTR [ebx+0x227264e8],cl
  412852:	xchg   DWORD PTR [ecx+0x52],esi
  412855:	jge    0x4128b1
  412857:	ret    
  412858:	mov    ecx,0xa7a0c04e
  41285d:	inc    edi
  41285e:	imul   ecx,DWORD PTR [edi-0x107037f2],0xffffff80
  412865:	test   DWORD PTR [ebp+0x68],ebp
  412868:	pop    ebx
  412869:	jmp    0xddff8ece
  41286e:	mov    eax,ds:0x5dfe95a9
  412873:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412874:	stos   BYTE PTR es:[edi],al
  412875:	pop    edx
  412876:	inc    esi
  412877:	push   eax
  412878:	neg    BYTE PTR [ecx+edx*4-0xe]
  41287c:	and    al,0xfd
  41287e:	aaa    
  41287f:	pop    ss
  412880:	mov    BYTE PTR [edi],cl
  412882:	into   
  412883:	pop    eax
  412884:	dec    esi
  412885:	lods   al,BYTE PTR ds:[esi]
  412886:	mov    ch,0x40
  412888:	jno    0x4128a5
  41288a:	jae    0x4128ee
  41288c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41288d:	into   
  41288e:	xchg   esi,eax
  41288f:	rcr    DWORD PTR [edi-0x80],1
  412892:	xchg   ebp,eax
  412893:	jge    0x41281f
  412895:	xchg   eax,edi
  412897:	or     dh,0x7f
  41289a:	sahf   
  41289b:	std    
  41289c:	push   0xffffffce
  41289e:	jmp    0x501bc9b3
  4128a3:	sbb    ch,cl
  4128a5:	ins    DWORD PTR es:[edi],dx
  4128a6:	inc    esi
  4128a7:	add    esi,DWORD PTR [edi+0x4debf1b4]
  4128ad:	add    eax,0x3331b0d3
  4128b2:	or     cl,ah
  4128b4:	push   ss
  4128b5:	(bad)  
  4128b6:	lahf   
  4128b7:	cmp    DWORD PTR [ebp+esi*4-0x26],esi
  4128bb:	lahf   
  4128bc:	xchg   BYTE PTR [esi-0x40775ac8],bl
  4128c2:	pop    ds
  4128c3:	mov    BYTE PTR [ecx+ebx*1+0x6d],dl
  4128c7:	jle    0x412867
  4128c9:	ins    BYTE PTR es:[edi],dx
  4128ca:	xchg   ebp,eax
  4128cb:	xchg   ebx,eax
  4128cc:	ins    DWORD PTR es:[edi],dx
  4128cd:	jmp    0x4d6fe9d1
  4128d2:	stos   BYTE PTR es:[edi],al
  4128d3:	mov    ebx,0x8980d337
  4128d8:	inc    ecx
  4128d9:	xlat   BYTE PTR ds:[ebx]
  4128da:	jnp    0x412916
  4128dc:	cld    
  4128dd:	push   ecx
  4128de:	sbb    DWORD PTR [edx],esp
  4128e0:	addr16 sub eax,0x6dae0548
  4128e6:	call   0xa871:0xf7894af8
  4128ed:	scas   eax,DWORD PTR es:[edi]
  4128ee:	outs   dx,DWORD PTR ds:[esi]
  4128ef:	add    ebp,edi
  4128f1:	lea    edx,[ebx]
  4128f3:	fs ret 0xc3e4
  4128f7:	sub    BYTE PTR [esi-0x6d],0x71
  4128fb:	sbb    BYTE PTR [edx+edi*4],ch
  4128fe:	ins    DWORD PTR es:[edi],dx
  4128ff:	xor    esi,esp
  412901:	enter  0xb0b2,0x37
  412905:	cs jp  0x412966
  412908:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412909:	mov    DWORD PTR [ebx],0x54385cba
  41290f:	outs   dx,BYTE PTR ds:[esi]
  412910:	add    edx,ebx
  412912:	jns    0x41293b
  412914:	lds    eax,FWORD PTR [ebp+0x1]
  412917:	cmp    edi,0x37b82892
  41291d:	lea    edi,[ebx+0x24b3b32d]
  412923:	xor    DWORD PTR ds:0xae98d855,esp
  412929:	aad    0x1e
  41292b:	jbe    0x4128f5
  41292d:	jns    0x4129a0
  41292f:	(bad)  
  412930:	gs popa 
  412932:	sub    eax,0xf2a63236
  412937:	jbe    0x412928
  412939:	cmp    al,0x6b
  41293b:	(bad)  
  41293c:	hlt    
  41293d:	cwde   
  41293e:	push   edi
  41293f:	mov    dh,0x5e
  412941:	push   0xcaa8c3c1
  412946:	pop    edx
  412947:	sbb    eax,0x89cefc8a
  41294c:	xor    esi,DWORD PTR [edx+ecx*4-0x4e56ed07]
  412953:	or     DWORD PTR [ecx-0x396bb887],edx
  412959:	inc    edx
  41295a:	rcr    BYTE PTR [ebp+0x1e],0x75
  41295e:	gs jns 0x41296f
  412961:	push   es
  412962:	sub    al,0x1b
  412964:	aaa    
  412965:	dec    eax
  412966:	mov    DWORD PTR [ebp-0x34c4780c],ebp
  41296c:	pushf  
  41296d:	push   ds
  41296e:	xchg   edx,eax
  41296f:	clc    
  412970:	push   edx
  412971:	pusha  
  412972:	pop    edx
  412973:	xchg   ebx,eax
  412974:	xor    esp,DWORD PTR [edx]
  412976:	xor    BYTE PTR [ecx+0x262bec25],bl
  41297c:	cli    
  41297d:	inc    edi
  41297e:	pop    eax
  41297f:	cs lahf 
  412981:	jp     0x4129bc
  412983:	mov    bh,0x9a
  412985:	dec    ecx
  412986:	mov    bl,0xc3
  412988:	repnz pop eax
  41298a:	pop    edi
  41298b:	stc    
  41298c:	repnz push edx
  41298e:	call   FWORD PTR [ecx+0x20]
  412991:	je     0x412a08
  412993:	lods   eax,DWORD PTR ds:[esi]
  412994:	sbb    ebp,DWORD PTR [ebp+0x7a]
  412997:	jmp    0x3a1cd9ea
  41299c:	or     BYTE PTR [esp+ecx*4],bh
  41299f:	fwait
  4129a0:	and    esi,DWORD PTR [edi+0x70018fda]
  4129a6:	mov    bl,0x26
  4129a8:	dec    edi
  4129a9:	dec    ecx
  4129aa:	mov    dl,0xec
  4129ac:	sub    esp,ebx
  4129ae:	icebp  
  4129af:	cmp    al,0xc9
  4129b1:	pop    ebp
  4129b2:	pop    ecx
  4129b3:	sbb    al,BYTE PTR [eax+0x15]
  4129b6:	pop    ebx
  4129b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4129b8:	fucomp st(2)
  4129ba:	xlat   BYTE PTR ds:[ebx]
  4129bb:	adc    DWORD PTR [edi],0xee67d370
  4129c1:	int3   
  4129c2:	repz pop eax
  4129c4:	jl     0x41297c
  4129c6:	mov    bl,0x4b
  4129c8:	mov    esi,0xfbf79e80
  4129cd:	popf   
  4129ce:	loopne 0x4129a6
  4129d0:	pushw  ss
  4129d2:	sub    ebp,DWORD PTR [edi+edx*4]
  4129d5:	mov    BYTE PTR [ecx+eax*1],ah
  4129d8:	xchg   esi,eax
  4129d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4129da:	inc    esi
  4129db:	jge    0x412a48
  4129dd:	stc    
  4129de:	shl    BYTE PTR [ecx+0xf],1
  4129e1:	add    eax,0xbb28002e
  4129e6:	jae    0x4129ba
  4129e8:	xlat   BYTE PTR ds:[ebx]
  4129e9:	pop    ebx
  4129ea:	hlt    
  4129eb:	scas   eax,DWORD PTR es:[edi]
  4129ec:	ret    0xa996
  4129ef:	and    ah,dl
  4129f1:	or     eax,0x83589bbb
  4129f6:	pusha  
  4129f7:	into   
  4129f8:	mov    ecx,0xeb8d676a
  4129fd:	test   BYTE PTR [edx-0x6942a68b],dh
  412a03:	aas    
  412a04:	sub    ecx,ebx
  412a06:	shl    BYTE PTR [edi-0x3c018b13],cl
  412a0c:	add    eax,0xb45614d3
  412a11:	les    ecx,FWORD PTR [esi+0x55]
  412a14:	ss (bad) 
  412a16:	fwait
  412a17:	div    BYTE PTR [ebx+0x49]
  412a1a:	xor    esp,0xffffff93
  412a1d:	shl    dh,1
  412a1f:	mov    bh,0x31
  412a21:	cmp    al,0xbc
  412a23:	jbe    0x4129c6
  412a25:	cmp    BYTE PTR [edx],0xfe
  412a28:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412a29:	jge    0x412a97
  412a2b:	hlt    
  412a2c:	pop    ebx
  412a2d:	sbb    DWORD PTR [edx+edx*2],esi
  412a30:	arpl   WORD PTR [edi],dx
  412a32:	xor    dl,BYTE PTR [eax+eiz*1-0x62]
  412a36:	inc    edi
  412a37:	fwait
  412a38:	sub    al,0xa0
  412a3a:	add    DWORD PTR [esi],ebx
  412a3c:	push   edi
  412a3d:	ins    DWORD PTR es:[edi],dx
  412a3e:	sbb    al,0x2d
  412a40:	xchg   ebx,eax
  412a41:	lock aaa 
  412a43:	arpl   WORD PTR [edi],dx
  412a45:	mov    dh,0x25
  412a47:	add    BYTE PTR [ebx],bl
  412a49:	je     0x412a4b
  412a4b:	jecxz  0x412a46
  412a4d:	lds    edx,FWORD PTR [esi]
  412a4f:	mov    esi,0xab4b861a
  412a54:	int    0xb9
  412a56:	mov    ebx,0xd7c55bed
  412a5b:	dec    eax
  412a5c:	adc    BYTE PTR [esi],bl
  412a5e:	mov    ds:0xd2cb03b0,eax
  412a63:	iret   
  412a64:	dec    edi
  412a65:	dec    esi
  412a66:	aam    0x43
  412a68:	push   0xffffffc0
  412a6a:	push   cs
  412a6b:	dec    ecx
  412a6c:	in     eax,0x99
  412a6e:	ss cli 
  412a70:	mov    ebx,0x2769bfbc
  412a75:	inc    ecx
  412a76:	mov    ebx,0xe372969a
  412a7b:	mov    edi,0x131360a4
  412a80:	out    0xfe,al
  412a82:	mov    edx,0xc1923023
  412a87:	inc    ebp
  412a88:	sub    eax,DWORD PTR [edx]
  412a8a:	cs (bad) 
  412a8c:	sahf   
  412a8d:	int3   
  412a8e:	leave  
  412a8f:	mov    al,ds:0x10840f
  412a94:	add    BYTE PTR [eax],al
  412a96:	mov    ecx,DWORD PTR [ebp+0x14]
  412a99:	add    edi,DWORD PTR ds:0x42e120
  412a9f:	mov    ecx,DWORD PTR [ecx]
  412aa1:	or     esi,esi
  412aa3:	mov    DWORD PTR [ebp-0x1c],ecx
  412aa6:	mov    DWORD PTR ds:0x42fcf5,0x17
  412ab0:	cmp    DWORD PTR ds:0x42fcf5,0x0
  412ab7:	je     0x412b09
  412abd:	cmp    DWORD PTR ds:0x42fcf5,0x24
  412ac4:	jne    0x412af1
  412aca:	push   0x5fda
  412acf:	push   0x42de
  412ad4:	push   0x6b28
  412ad9:	push   0x4e0a
  412ade:	push   DWORD PTR [ebp-0x10]
  412ae1:	push   0x8dcd
  412ae6:	push   0x86d4
  412aeb:	call   DWORD PTR ds:0x42e317
  412af1:	mov    edi,DWORD PTR ds:0x42fcf5
  412af7:	dec    edi
  412af8:	mov    DWORD PTR ds:0x42fcf5,edi
  412afe:	jmp    0x412ab0
  412b03:	and    ecx,DWORD PTR ds:0x42e128
  412b09:	imul   edx,eax
  412b0c:	mov    ecx,0x4573
  412b11:	add    DWORD PTR ds:0x42e118,edx
  412b17:	add    edx,ecx
  412b19:	mov    esi,0x7879
  412b1e:	sub    edi,0x22a0
  412b24:	mov    edi,0x1556
  412b29:	jmp    0x412e0d
  412b2e:	retf   
  412b2f:	sbb    eax,eax
  412b31:	inc    esp
  412b32:	loopne 0x412ba7
  412b34:	push   ebx
  412b35:	mov    bl,0x1a
  412b37:	ror    BYTE PTR [edi],cl
  412b39:	ja     0x412bb0
  412b3b:	cmp    al,0xd2
  412b3d:	inc    eax
  412b3e:	adc    DWORD PTR [esi+0x70],esp
  412b41:	jo     0x412afc
  412b43:	jle    0x412bb5
  412b45:	jo     0x412b0c
  412b47:	mov    eax,DWORD PTR [edi]
  412b49:	mov    dl,0xe5
  412b4b:	mov    bh,0x3
  412b4d:	add    bl,BYTE PTR [edi]
  412b4f:	sysenter 
  412b51:	mov    WORD PTR [esi],cs
  412b53:	xchg   esp,eax
  412b54:	retf   0xee13
  412b57:	ror    DWORD PTR [eax-0x4c899e15],1
  412b5d:	dec    esi
  412b5e:	add    eax,0x3f21671d
  412b63:	pop    ecx
  412b64:	sub    BYTE PTR [edi-0x5446bb5],bl
  412b6a:	(bad)  
  412b6c:	bnd jmp 0xb2ba03be
  412b72:	das    
  412b73:	adc    bh,bl
  412b75:	xor    BYTE PTR [eax+0x24],dh
  412b78:	pop    ds
  412b79:	cmp    eax,0x8f00e82a
  412b7e:	jge    0x412b02
  412b80:	or     DWORD PTR [esi+0x30d30ec3],edx
  412b86:	aad    0xd4
  412b88:	gs xchg bp,ax
  412b8b:	mov    bh,BYTE PTR [ebp+0x53]
  412b8e:	mov    ds:0x9bebe888,eax
  412b93:	mov    dh,0x82
  412b95:	inc    eax
  412b96:	loop   0x412b59
  412b98:	rcl    BYTE PTR [esi-0x11becdeb],cl
  412b9e:	jl     0x412b47
  412ba0:	shl    BYTE PTR [edx-0x48],1
  412ba3:	jg     0x412c08
  412ba5:	cmp    bl,cl
  412ba7:	(bad)  
  412ba8:	mov    BYTE PTR [eax],bl
  412baa:	test   esp,esp
  412bac:	adc    al,0xfd
  412bae:	imul   ecx,ecx,0x5e
  412bb1:	cmp    BYTE PTR [esi-0xb85f8d4],bh
  412bb7:	fdiv   QWORD PTR [edx]
  412bb9:	arpl   WORD PTR [esi+0x64],dx
  412bbc:	jmp    0x6d16:0xa76f2e6e
  412bc3:	mov    edx,0x649a143e
  412bc8:	or     BYTE PTR [ebx-0x3c27be5a],dl
  412bce:	pushf  
  412bcf:	or     eax,edi
  412bd1:	push   ds
  412bd2:	push   ecx
  412bd3:	cmp    eax,0xa6d560d2
  412bd8:	in     al,0x5f
  412bda:	mov    ecx,0x3c0ee35b
  412bdf:	test   al,0x5
  412be1:	sbb    edx,edx
  412be3:	xchg   BYTE PTR ds:0x2b39f76d,bl
  412be9:	psubusw mm7,QWORD PTR [ebx]
  412bec:	inc    edx
  412bed:	push   esp
  412bee:	out    dx,eax
  412bef:	sahf   
  412bf0:	sahf   
  412bf1:	mov    ?,WORD PTR [eax+ebx*2+0x4da552f0]
  412bf8:	aaa    
  412bf9:	xchg   edi,eax
  412bfa:	fist   DWORD PTR [ebx-0x4b64b489]
  412c00:	sbb    eax,0x4a56cc27
  412c05:	in     eax,0xdd
  412c07:	jmp    0x412c07
  412c09:	add    al,0xe0
  412c0b:	pop    ebx
  412c0c:	jecxz  0x412c3a
  412c0e:	push   es
  412c0f:	push   ss
  412c10:	push   ebp
  412c11:	pop    ds
  412c12:	mov    esp,0x2857c525
  412c17:	inc    eax
  412c18:	test   BYTE PTR [eax+esi*1],dh
  412c1b:	adc    eax,0x1b24cf4d
  412c20:	in     eax,dx
  412c21:	popa   
  412c22:	mov    al,BYTE PTR [ebp-0x78]
  412c25:	mov    eax,0x3c34e545
  412c2a:	xchg   edi,eax
  412c2b:	xor    BYTE PTR [edx+0x60],ch
  412c2e:	das    
  412c2f:	dec    edx
  412c30:	pop    es
  412c31:	addr16 jno 0x412bca
  412c34:	out    0xb8,eax
  412c36:	test   eax,0xb15b352b
  412c3b:	idiv   BYTE PTR [ecx-0x5b]
  412c3e:	push   0xe7841ecd
  412c43:	ins    DWORD PTR es:[edi],dx
  412c44:	pop    esi
  412c45:	dec    esi
  412c46:	cmp    al,0xfc
  412c48:	bound  esp,QWORD PTR [ebp*4-0x31ae3653]
  412c4f:	or     DWORD PTR [eax+0x427f1d98],ebp
  412c55:	test   BYTE PTR [edi-0x38],bh
  412c58:	cmp    edx,DWORD PTR [edi-0xb74651e]
  412c5e:	pop    eax
  412c5f:	je     0x412c9d
  412c61:	dec    ebp
  412c62:	repz fidiv DWORD PTR [ebp-0x24]
  412c66:	jnp    0x412c22
  412c68:	sub    al,0x55
  412c6a:	call   FWORD PTR [eax-0x37853737]
  412c70:	xchg   esi,eax
  412c71:	ins    DWORD PTR es:[edi],dx
  412c72:	iret   
  412c73:	dec    esp
  412c74:	adc    dl,0x33
  412c77:	call   0x853d:0x98014d55
  412c7e:	es push edx
  412c80:	sub    dl,dh
  412c82:	(bad)  
  412c83:	sar    BYTE PTR [ebp-0x62],0xc6
  412c87:	ss pop ebp
  412c89:	ror    edi,0xce
  412c8c:	pop    ecx
  412c8d:	loope  0x412cfe
  412c8f:	lea    ebx,ds:0xa58a8dad
  412c95:	loop   0x412ce5
  412c97:	xchg   ecx,eax
  412c98:	fbld   TBYTE PTR [edi]
  412c9a:	fsubr  st,st(7)
  412c9c:	pop    ds
  412c9d:	push   edi
  412c9e:	addr16 jmp 0x412c96
  412ca1:	sahf   
  412ca2:	mov    dl,0xdb
  412ca4:	dec    ebx
  412ca5:	mov    ecx,0x70f52fb8
  412caa:	push   eax
  412cab:	mov    bh,0xad
  412cad:	dec    ecx
  412cae:	mov    esp,0xb42a23e8
  412cb3:	push   0x475ec48b
  412cb8:	out    0xb1,eax
  412cba:	or     bl,ch
  412cbc:	or     BYTE PTR ds:0xc6af9565,bh
  412cc2:	mov    ebx,0xc8fcdb7d
  412cc7:	sub    al,dl
  412cc9:	sbb    esi,DWORD PTR ss:[esi-0x6a]
  412ccd:	sub    edi,DWORD PTR ds:0x9ec4012f
  412cd3:	fs std 
  412cd5:	xchg   edx,eax
  412cd6:	xor    dl,dh
  412cd8:	pop    edi
  412cd9:	int3   
  412cda:	jmp    0xf9793743
  412cdf:	or     bh,BYTE PTR [esi-0x7ed1cfbf]
  412ce5:	int3   
  412ce6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412ce7:	dec    eax
  412ce8:	sbb    ebp,DWORD PTR [edx-0x5c0bac83]
  412cee:	and    esi,DWORD PTR [ebp+0x74]
  412cf1:	popa   
  412cf2:	jmp    0x412cc0
  412cf4:	dec    esp
  412cf5:	sub    eax,0x22dfc4c
  412cfa:	dec    esp
  412cfb:	(bad)  [edx]
  412cfd:	xchg   edx,eax
  412cfe:	push   ds
  412cff:	(bad)  
  412d00:	icebp  
  412d01:	dec    esp
  412d02:	leave  
  412d03:	push   esi
  412d04:	push   0xcc76a933
  412d09:	mov    edi,0x97cacc64
  412d0e:	int3   
  412d0f:	ror    DWORD PTR [edx-0x33],0xc6
  412d13:	xor    cl,cl
  412d15:	mov    ds:0xf959af09,eax
  412d1a:	sets   BYTE PTR ds:0x9ad814e2
  412d21:	and    esp,edi
  412d23:	sub    esi,DWORD PTR [edi+0x34677fdd]
  412d29:	dec    eax
  412d2a:	lahf   
  412d2b:	lahf   
  412d2c:	(bad)  
  412d2d:	not    DWORD PTR [ebx+0x5268b811]
  412d33:	loopne 0x412cc4
  412d35:	ss out dx,eax
  412d37:	xor    al,BYTE PTR [edx+0x38]
  412d3a:	and    BYTE PTR [esi],ah
  412d3c:	cmp    ebp,eax
  412d3e:	out    0x26,eax
  412d40:	mov    ah,0xf8
  412d42:	scas   eax,DWORD PTR es:[edi]
  412d43:	inc    esp
  412d44:	jae    0x412d48
  412d46:	and    BYTE PTR [eax+0x51],bl
  412d49:	(bad)  
  412d4a:	sahf   
  412d4b:	pop    ebp
  412d4c:	test   cl,al
  412d4e:	mov    ebp,0xdf48da76
  412d53:	dec    esp
  412d54:	xor    esi,DWORD PTR [ecx]
  412d56:	scas   al,BYTE PTR es:[edi]
  412d57:	jbe    0x412d8b
  412d59:	push   ecx
  412d5a:	sub    dh,BYTE PTR [ebx]
  412d5c:	sar    DWORD PTR [esi],0xae
  412d5f:	jge    0x412d24
  412d61:	fidiv  DWORD PTR [ecx+0x1c50066]
  412d67:	mov    bh,0x6e
  412d69:	mov    cl,0xeb
  412d6b:	test   al,0x75
  412d6d:	test   al,0xe
  412d6f:	mov    dh,0xab
  412d71:	(bad)  
  412d72:	mov    si,0x7895
  412d76:	call   0x6786:0xcc7a5252
  412d7d:	cmc    
  412d7e:	sbb    DWORD PTR [eax+0x45385ee1],esi
  412d84:	pop    es
  412d85:	clc    
  412d86:	aaa    
  412d87:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412d88:	cmp    BYTE PTR [ebx*4+0x4bb0792b],bl
  412d8f:	and    bh,bh
  412d91:	sahf   
  412d92:	inc    BYTE PTR [esi+0x3]
  412d95:	in     al,0xee
  412d97:	jbe    0x412df3
  412d99:	dec    edi
  412d9a:	aaa    
  412d9b:	xor    eax,eax
  412d9d:	(bad)  
  412d9e:	retf   0x13f3
  412da1:	and    ebp,DWORD PTR [ebp+eiz*8+0x3d6348d0]
  412da8:	enter  0x9d4e,0x9d
  412dac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412dad:	sti    
  412dae:	pop    edx
  412daf:	fmul   QWORD PTR [ebx+0x2eb24a52]
  412db5:	push   es
  412db6:	pusha  
  412db7:	push   0x3845677a
  412dbc:	xchg   DWORD PTR [edx-0x48],ebx
  412dbf:	sbb    eax,DWORD PTR [esi+0x46c2fd06]
  412dc5:	push   cs
  412dc6:	std    
  412dc7:	sub    dh,BYTE PTR [ecx]
  412dc9:	jmp    0x63a3:0xf7b6d03f
  412dd0:	mov    dh,0xaf
  412dd2:	mov    DWORD PTR [esi+0x42b0be3f],edi
  412dd8:	loop   0x412e04
  412dda:	or     eax,0xfa08ef1a
  412ddf:	outs   dx,DWORD PTR ds:[esi]
  412de0:	mov    esi,0x834fb1b0
  412de5:	jle    0x412e0c
  412de7:	mov    gs,WORD PTR [ebp-0xb]
  412dea:	sahf   
  412deb:	inc    esp
  412dec:	dec    esp
  412ded:	sti    
  412dee:	(bad)  
  412df0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412df1:	arpl   sp,cx
  412df3:	add    ebx,DWORD PTR [edi]
  412df5:	dec    esp
  412df6:	test   al,0xee
  412df8:	lock dec edi
  412dfa:	arpl   WORD PTR [ebp-0x4e],bp
  412dfd:	jns    0x412e2e
  412dff:	dec    bl
  412e01:	sahf   
  412e02:	ret    0xbd78
  412e05:	and    al,0xa8
  412e07:	jmp    0x412df4
  412e09:	lods   eax,DWORD PTR ds:[esi]
  412e0a:	push   ecx
  412e0b:	fadd   QWORD PTR [ebx+0x2581ce87]
  412e11:	sbb    al,0xe1
  412e13:	inc    edx
  412e14:	add    BYTE PTR [eax],al
  412e16:	add    BYTE PTR [eax],al
  412e18:	add    cl,ch
  412e1a:	sldt   WORD PTR [eax]
  412e1d:	add    BYTE PTR [ebx],dh
  412e1f:	leave  
  412e20:	add    ecx,DWORD PTR ds:0x42e11c
  412e26:	inc    ecx
  412e27:	mov    DWORD PTR ds:0x42e11c,ecx
  412e2d:	cmp    DWORD PTR ds:0x42e11c,0x17
  412e34:	jae    0x412e60
  412e3a:	cmp    DWORD PTR ds:0x42e11c,0x25
  412e41:	jne    0x412e55
  412e47:	push   0x286f
  412e4c:	push   DWORD PTR [ebp-0x18]
  412e4f:	call   DWORD PTR ds:0x42e487
  412e55:	jmp    0x412e1e
  412e5a:	xor    ecx,0x7ba7
  412e60:	sub    edx,edi
  412e62:	xor    esi,esi
  412e64:	jmp    0x413148
  412e69:	call   0x6aab08c6
  412e6e:	jno    0x412ee7
  412e70:	popa   
  412e71:	push   ebx
  412e72:	xchg   eax,esp
  412e74:	arpl   WORD PTR [eax],bx
  412e76:	mov    dh,0x4b
  412e78:	int3   
  412e79:	pop    edx
  412e7a:	fs jo  0x412eed
  412e7d:	mov    ecx,0xca70707e
  412e82:	xor    eax,0x32820c59
  412e87:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412e88:	dec    ebx
  412e89:	ror    dl,0xd
  412e8c:	pop    ebp
  412e8d:	and    esp,DWORD PTR [ebp-0x5]
  412e90:	xor    BYTE PTR ds:0xa80b3c95,bh
  412e96:	(bad)  [esi-0x3c]
  412e99:	imul   ecx,ebp,0xaf01a745
  412e9f:	push   edx
  412ea0:	shl    DWORD PTR [edi],0x83
  412ea3:	fs inc eax
  412ea5:	or     eax,0xcf707105
  412eaa:	add    eax,0x36148114
  412eaf:	push   di
  412eb1:	fcmovbe st,st(0)
  412eb3:	adc    ch,BYTE PTR [ebx+0x33f3782b]
  412eb9:	inc    edi
  412eba:	das    
  412ebb:	shl    BYTE PTR [ecx],cl
  412ebd:	jno    0x412f2b
  412ebf:	xchg   ah,cl
  412ec1:	cs dec edx
  412ec3:	lock cmp dl,BYTE PTR [ebx+0x48]
  412ec7:	sbb    al,0xfd
  412ec9:	mov    bl,0x6b
  412ecb:	dec    edi
  412ecc:	mov    eax,0xe0816a2c
  412ed1:	sub    al,0x92
  412ed3:	push   ecx
  412ed4:	pop    edx
  412ed5:	dec    edx
  412ed6:	mov    edx,0xc8b8224d
  412edb:	rcl    DWORD PTR [ebp+0x49f06188],cl
  412ee1:	cmp    ecx,DWORD PTR [ebx-0x3ee5b9d6]
  412ee7:	sub    BYTE PTR [esi],dl
  412ee9:	inc    eax
  412eea:	xor    ebp,esp
  412eec:	ins    BYTE PTR es:[edi],dx
  412eed:	sbb    al,0x65
  412eef:	mov    ebx,0xa3493815
  412ef4:	mov    bh,0xd3
  412ef6:	nop    DWORD PTR [ebx]
  412ef9:	or     cl,BYTE PTR [edi-0x74]
  412efc:	imul   eax,DWORD PTR [ebx+0x38],0x3c8df21
  412f03:	rcr    BYTE PTR [eax-0x4f],1
  412f06:	(bad)  
  412f08:	dec    edx
  412f09:	sbb    BYTE PTR [eax-0x1b3c209e],cl
  412f0f:	pop    ebx
  412f10:	xchg   ecx,eax
  412f11:	hlt    
  412f12:	jae    0x412eba
  412f14:	jp     0x412ec9
  412f16:	xchg   ebp,esp
  412f18:	lea    edx,[edx-0x1d45f900]
  412f1e:	stos   DWORD PTR es:[edi],eax
  412f1f:	pop    eax
  412f20:	cmp    al,0x6c
  412f22:	sub    DWORD PTR [edi+edi*8+0x31],edi
  412f26:	jnp    0x412f14
  412f28:	test   dl,bh
  412f2a:	and    BYTE PTR ds:0x7c13878b,ah
  412f30:	inc    ebp
  412f31:	cli    
  412f32:	sahf   
  412f33:	test   DWORD PTR [ecx+0xd574736],ebx
  412f39:	cmp    ecx,ebp
  412f3b:	scas   al,BYTE PTR es:[edi]
  412f3c:	inc    ebx
  412f3d:	adc    BYTE PTR [ebx+0x70],ah
  412f40:	mov    eax,0x43f0fad9
  412f45:	aaa    
  412f46:	sbb    DWORD PTR [ecx-0x1e],esi
  412f49:	sub    eax,0xeb102078
  412f4e:	and    eax,0x1d45da91
  412f53:	mov    al,0xfa
  412f55:	nop
  412f56:	outs   dx,BYTE PTR ds:[esi]
  412f57:	mov    al,ds:0x49a3436b
  412f5c:	pop    ss
  412f5d:	mov    fs,WORD PTR [ebx]
  412f5f:	sub    eax,0xa953bf1
  412f64:	add    eax,0xa5531b6c
  412f69:	push   0xffffff98
  412f6b:	int    0xc9
  412f6d:	arpl   WORD PTR [ebx+0x2ce45cdb],bx
  412f73:	(bad)  
  412f74:	aam    0xd3
  412f76:	jmp    0xdd0a:0x6be9b4de
  412f7d:	and    al,0x58
  412f7f:	sub    bh,bl
  412f81:	pushf  
  412f82:	sti    
  412f83:	push   ds
  412f84:	aad    0x4c
  412f86:	push   ecx
  412f87:	dec    ebx
  412f88:	hlt    
  412f89:	pop    ebx
  412f8a:	scas   eax,DWORD PTR es:[edi]
  412f8b:	xchg   ebp,eax
  412f8c:	push   0xa9a3536e
  412f91:	xchg   esp,eax
  412f92:	cwde   
  412f93:	ret    0x4935
  412f96:	pop    ecx
  412f97:	xor    BYTE PTR [edx-0x416061c9],ch
  412f9d:	mov    eax,0x8928ef62
  412fa2:	sbb    BYTE PTR [ebx-0x47],ah
  412fa5:	xchg   esp,eax
  412fa6:	mov    ds:0x4c74424e,al
  412fab:	mov    eax,0x4d768be1
  412fb0:	inc    esp
  412fb1:	sbb    esi,edx
  412fb3:	pop    edx
  412fb4:	ret    
  412fb5:	stos   BYTE PTR es:[edi],al
  412fb6:	icebp  
  412fb7:	fwait
  412fb8:	add    al,0x14
  412fba:	cs retf 
  412fbc:	mov    ds:0x4ebd2580,eax
  412fc1:	clc    
  412fc2:	dec    ebp
  412fc3:	stos   DWORD PTR es:[edi],eax
  412fc4:	or     al,0x6f
  412fc6:	xchg   ebp,eax
  412fc7:	adc    ecx,DWORD PTR [ecx]
  412fc9:	push   ss
  412fca:	scas   eax,DWORD PTR es:[edi]
  412fcb:	rcr    BYTE PTR [eax-0x7cc68203],cl
  412fd1:	xor    eax,0x732cc2e8
  412fd6:	fiadd  DWORD PTR [edx-0x27]
  412fd9:	pusha  
  412fda:	inc    ebx
  412fdb:	das    
  412fdc:	mov    esi,0x8892612e
  412fe1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412fe2:	fwait
  412fe3:	jnp    0x413024
  412fe5:	sub    DWORD PTR [edx],ebp
  412fe7:	fmulp  st(4),st
  412fe9:	push   es
  412fea:	(bad)  
  412fec:	aad    0x86
  412fee:	jb     0x413040
  412ff0:	add    BYTE PTR [ecx],al
  412ff2:	add    al,0x44
  412ff4:	sub    ah,BYTE PTR ds:[esi+0x6290aa2c]
  412ffb:	out    dx,eax
  412ffc:	imul   esi,DWORD PTR [esi],0xffffffde
  412fff:	push   esp
  413000:	(bad)  
  413001:	test   BYTE PTR [edx],0xf6
  413004:	test   eax,0xc7b895d9
  413009:	imul   ebx,DWORD PTR [ebx+0x2c],0xffffff91
  41300d:	stc    
  41300e:	ret    0xf15a
  413011:	dec    edi
  413012:	es push eax
  413014:	push   ecx
  413015:	mov    al,0x56
  413018:	push   cs
  413019:	imul   esi,DWORD PTR [edi+0x66],0x7f45bb29
  413020:	outs   dx,BYTE PTR ds:[esi]
  413021:	in     al,dx
  413022:	(bad)  
  413023:	std    
  413024:	std    
  413025:	push   ss
  413026:	loopne 0x412fd6
  413028:	iret   
  413029:	inc    eax
  41302a:	fist   DWORD PTR [eax]
  41302c:	adc    eax,esi
  41302e:	lock xor al,0x50
  413031:	jecxz  0x413094
  413033:	test   al,0x4a
  413035:	into   
  413036:	jb     0x412ffa
  413038:	aam    0x57
  41303a:	iret   
  41303b:	jo     0x4130ac
  41303d:	fisubr WORD PTR [ebp-0x5ab274bd]
  413043:	shr    BYTE PTR [esi-0x7d],0x1e
  413047:	ja     0x412ff1
  413049:	outs   dx,DWORD PTR ds:[esi]
  41304a:	ja     0x413075
  41304c:	dec    ecx
  41304d:	fldcw  WORD PTR ds:0xc5b3ffa9
  413053:	pop    edi
  413054:	mov    edx,ss
  413056:	jns    0x4130cf
  413058:	jecxz  0x413042
  41305a:	je     0x4130c1
  41305c:	(bad)  
  41305d:	idiv   DWORD PTR [ecx-0x1d]
  413060:	add    al,0xe7
  413062:	jp     0x4130cd
  413064:	test   eax,0x40cd6428
  413069:	icebp  
  41306a:	mov    ds:0xd0ab64ea,eax
  41306f:	mov    ecx,0x428ec5ff
  413074:	and    al,0xd6
  413076:	cwde   
  413077:	xchg   esi,eax
  413078:	or     dh,BYTE PTR [eax+eiz*8-0x1b]
  41307c:	jb     0x413048
  41307e:	(bad)  
  41307f:	adc    eax,0xde8218a5
  413084:	or     eax,0x1ad7d11d
  413089:	push   edx
  41308a:	bound  eax,QWORD PTR [ebp+esi*1-0x36]
  41308e:	push   ebp
  41308f:	popa   
  413090:	mov    cl,0xae
  413092:	mov    DWORD PTR [edi+0x2b1e492c],ebx
  413098:	pop    ebx
  413099:	mov    bl,0x78
  41309b:	lock rcr BYTE PTR [ecx-0x274f06cb],cl
  4130a2:	push   0x2f
  4130a4:	mov    WORD PTR [edi+0x14],es
  4130a7:	imul   ebp,edi,0xffffffe0
  4130aa:	xor    esi,ebx
  4130ac:	cmc    
  4130ad:	jb     0x4130d5
  4130af:	mov    dh,0x27
  4130b1:	std    
  4130b2:	es jmp 0x413060
  4130b5:	or     eax,0xf1395d0f
  4130ba:	mov    BYTE PTR ss:0xff9ab32e,ah
  4130c1:	mov    esp,0x9638bed5
  4130c6:	xor    eax,0x4a746e90
  4130cb:	mov    ds:0xd4b51360,al
  4130d0:	in     al,dx
  4130d1:	and    ah,BYTE PTR [ebx]
  4130d3:	nop
  4130d4:	dec    esi
  4130d5:	jmp    0x6803e19c
  4130da:	and    DWORD PTR [ecx-0x5bfe3bf],esi
  4130e0:	je     0x413088
  4130e2:	stos   DWORD PTR es:[edi],eax
  4130e3:	push   ebp
  4130e4:	ja     0x41315e
  4130e6:	ja     0x413167
  4130e8:	(bad)
  4130eb:	add    al,0x4a
  4130ed:	call   0x25eb:0xd76e3ab2
  4130f4:	adc    eax,0x2d1956b4
  4130f9:	mov    al,ds:0x97ad0c1c
  4130fe:	pusha  
  4130ff:	popa   
  413100:	ror    DWORD PTR [esi+ebx*4-0x62],0x30
  413105:	aam    0x40
  413107:	mov    bh,0x90
  413109:	mov    ah,0xf9
  41310b:	out    dx,eax
  41310c:	cmp    eax,0xbce5300c
  413111:	mov    edi,0x5e6f37b5
  413116:	int3   
  413117:	aas    
  413118:	pop    ds
  413119:	imul   ebx,DWORD PTR [ebp+0x57],0xde26878
  413120:	mov    ds:0x55c62b75,al
  413125:	jnp    0x41316d
  413127:	enter  0xf851,0x82
  41312b:	xchg   esp,eax
  41312c:	loopne 0x413105
  41312e:	ds aam 0x4c
  413131:	sub    eax,DWORD PTR [eax+0xc]
  413134:	and    DWORD PTR [edi-0x37f3aeb4],esp
  41313a:	ja     0x4131aa
  41313c:	out    dx,al
  41313d:	mov    ?,WORD PTR [esi+0x4239f660]
  413143:	sbb    DWORD PTR [edx+ebx*8-0x3f],esp
  413147:	sbb    DWORD PTR [ecx+0x7589d875],ecx
  41314d:	aam    0x89
  41314f:	jne    0x41313d
  413151:	adc    ecx,0x52b8
  413157:	mov    DWORD PTR [ebp-0x8],esi
  41315a:	xor    ecx,DWORD PTR ds:0x42fcf9
  413160:	mov    ecx,DWORD PTR [ebp-0x18]
  413163:	xor    ecx,eax
  413165:	adc    DWORD PTR ds:0x42e128,ebx
  41316b:	xor    edi,edi
  41316d:	jmp    0x413451
  413172:	push   0x51581534
  413177:	popa   
  413178:	jne    0x4131ae
  41317a:	add    edx,ebp
  41317c:	cmp    al,BYTE PTR [ecx]
  41317e:	xchg   BYTE PTR [esi+ebp*4+0x32],ah
  413182:	mov    ds:0xb9707061,eax
  413187:	jle    0x4131f9
  413189:	jo     0x4131f3
  41318b:	lds    esp,FWORD PTR [ebp-0x6f]
  41318e:	push   edi
  41318f:	(bad)  
  413190:	(bad)  
  413191:	jmp    0x413117
  413193:	ss out 0x8c,al
  413196:	je     0x4131c2
  413198:	icebp  
  413199:	pop    esi
  41319a:	dec    edi
  41319b:	dec    ebp
  41319c:	mov    ch,ch
  41319e:	xchg   esp,eax
  41319f:	ret    
  4131a0:	lahf   
  4131a1:	lahf   
  4131a2:	arpl   dx,ax
  4131a4:	inc    edi
  4131a5:	test   edi,esi
  4131a7:	sar    DWORD PTR [esi],1
  4131a9:	cmp    BYTE PTR [edi-0x4c],dl
  4131ac:	or     DWORD PTR ds:0x3284f06e,0xffffffda
  4131b3:	popa   
  4131b4:	call   0x5253c3ec
  4131b9:	xor    DWORD PTR [ebx],0x62
  4131bc:	cmp    dh,BYTE PTR [edx]
  4131be:	loop   0x41318c
  4131c0:	lea    ebp,[edx]
  4131c2:	lea    esp,[ecx+0x46]
  4131c5:	and    al,0xe
  4131c7:	inc    esp
  4131c8:	jmp    0x413206
  4131ca:	pop    ds
  4131cb:	inc    ecx
  4131cc:	sbb    eax,0x7f7bf490
  4131d1:	retf   0x9dad
  4131d4:	stos   BYTE PTR es:[edi],al
  4131d5:	arpl   cx,bp
  4131d7:	test   dh,0x16
  4131da:	call   0xaa4a1bed
  4131df:	and    al,0x69
  4131e1:	leave  
  4131e2:	pop    ebx
  4131e3:	and    eax,0xdb20cea4
  4131e8:	imul   esp,DWORD PTR [ebp+0x6a5c2129],0x29
  4131ef:	sbb    eax,0xa827debd
  4131f4:	sbb    bl,BYTE PTR [esi-0x38]
  4131f7:	(bad)  
  4131f8:	aas    
  4131f9:	sub    al,0x67
  4131fb:	jge    0x41326d
  4131fd:	mov    eax,0x57a5ec70
  413202:	fild   WORD PTR [edi+0x0]
  413205:	xchg   ebx,eax
  413206:	inc    esi
  413207:	vmread DWORD PTR [eax+0x6d26cf27],esi
  41320e:	and    cl,dl
  413210:	gs sahf 
  413212:	retf   
  413213:	xchg   ebx,eax
  413214:	push   esp
  413215:	adc    BYTE PTR [edi],bl
  413217:	(bad)  
  413218:	in     eax,0xba
  41321a:	dec    ebx
  41321b:	pop    ebx
  41321c:	mov    esp,0x11a0c047
  413221:	lahf   
  413222:	inc    edx
  413223:	(bad)  
  413224:	push   esp
  413225:	jle    0x413264
  413227:	scas   eax,DWORD PTR es:[edi]
  413228:	mov    ds:0x631436a5,eax
  41322d:	sbb    ah,BYTE PTR [edx+0x2e7dbd95]
  413233:	push   0xffffffd6
  413235:	jp     0x4132a3
  413237:	popf   
  413238:	dec    esi
  413239:	pop    edx
  41323a:	jg     0x4132a8
  41323c:	sbb    eax,0x94d4dc64
  413241:	out    dx,eax
  413242:	mov    ebx,0x340edd27
  413247:	enter  0x55db,0x7e
  41324b:	retf   0x2f43
  41324e:	pop    esi
  41324f:	(bad)  
  413250:	push   ebp
  413251:	fwait
  413252:	jecxz  0x413270
  413254:	es out 0xa7,eax
  413257:	or     al,0xac
  413259:	mov    esi,0xef717f1d
  41325e:	cmp    BYTE PTR [esi],dh
  413260:	int3   
  413261:	xchg   esi,eax
  413262:	pop    esp
  413263:	stc    
  413264:	jg     0x4132df
  413266:	pop    esi
  413267:	aaa    
  413268:	lds    ebp,FWORD PTR [eax+ecx*8-0x23]
  41326c:	cmp    ebx,esp
  41326e:	pop    ss
  41326f:	and    BYTE PTR [eax-0x1d],al
  413272:	and    ah,BYTE PTR [edi-0x10]
  413275:	(bad)  
  413276:	inc    esi
  413277:	ret    0x1497
  41327a:	stos   BYTE PTR es:[edi],al
  41327b:	call   0x5534ca56
  413280:	mov    dl,0x9f
  413282:	mov    eax,0x6b46a510
  413287:	sbb    eax,0xf0125946
  41328c:	push   si
  41328e:	sbb    BYTE PTR [ecx-0x475de5ed],bl
  413294:	iret   
  413295:	mov    dl,0x82
  413297:	xchg   ebp,eax
  413298:	push   edx
  413299:	ret    
  41329a:	pop    ebp
  41329b:	sub    BYTE PTR [esi-0x62],dl
  41329e:	test   al,0xaf
  4132a0:	jp     0x4132c6
  4132a2:	inc    ecx
  4132a3:	retf   
  4132a4:	cmp    ecx,esp
  4132a6:	dec    edi
  4132a7:	or     BYTE PTR [edi-0x47],bl
  4132aa:	jl     0x4132cb
  4132ac:	add    DWORD PTR [ecx-0x5e],esi
  4132af:	push   esi
  4132b0:	lock xor BYTE PTR [esi-0x3bd956de],bh
  4132b7:	cli    
  4132b8:	sar    DWORD PTR [ecx-0x74],1
  4132bb:	fcmove st,st(0)
  4132bd:	shl    BYTE PTR [ecx+0x42e258c0],1
  4132c3:	scas   al,BYTE PTR es:[edi]
  4132c4:	pop    ebx
  4132c5:	xor    dh,al
  4132c7:	repnz xor ah,BYTE PTR [esi-0x36]
  4132cb:	mov    ebp,0xca2a4167
  4132d0:	adc    al,0x92
  4132d2:	mov    dh,BYTE PTR [edx+0x2f]
  4132d5:	ss in  al,0xb5
  4132d8:	daa    
  4132d9:	xor    BYTE PTR [ebp-0x41],ch
  4132dc:	adc    BYTE PTR [ebx-0x74964676],cl
  4132e2:	mov    al,0xd6
  4132e4:	mov    bh,0xf2
  4132e6:	pop    edi
  4132e7:	repnz add BYTE PTR [edi+eax*4],ch
  4132eb:	fdiv   st(7),st
  4132ed:	ins    BYTE PTR es:[edi],dx
  4132ee:	adc    eax,0x699fc346
  4132f3:	push   eax
  4132f4:	daa    
  4132f5:	adc    edx,DWORD PTR [ecx-0x7c]
  4132f8:	or     al,BYTE PTR [edi+0x19]
  4132fb:	stos   BYTE PTR es:[edi],al
  4132fc:	adc    eax,0xd66ab551
  413301:	dec    eax
  413302:	fwait
  413303:	xchg   ebx,eax
  413304:	mov    esp,0x562bfa8b
  413309:	and    edx,ebx
  41330b:	fnstsw WORD PTR [ecx-0x63]
  41330e:	std    
  41330f:	jecxz  0x41329c
  413311:	and    eax,0xbccd7443
  413316:	emms   
  413318:	mov    dl,0x4b
  41331a:	in     al,dx
  41331b:	sbb    al,0xe7
  41331d:	jae    0x4132f6
  41331f:	cmp    BYTE PTR [ebp+0x6497e99d],ah
  413325:	fwait
  413326:	fwait
  413327:	std    
  413328:	mov    esp,0x1924636e
  41332d:	pop    ebx
  41332e:	fist   DWORD PTR [ebx+0x7b]
  413331:	xchg   esp,eax
  413332:	add    eax,0x956d66f3
  413337:	jge    0x413377
  413339:	mov    ah,0xe0
  41333b:	mov    edx,gs
  41333d:	(bad)  
  41333e:	mov    esp,DWORD PTR [ebx+edi*2]
  413341:	dec    esi
  413343:	cmp    BYTE PTR [edx],0x4c
  413346:	data16 je 0x41331e
  413349:	pop    esi
  41334a:	push   edx
  41334b:	popa   
  41334c:	mov    esp,0xf73157e2
  413351:	fstp   TBYTE PTR [edx+0x10e4969f]
  413357:	in     al,0x20
  413359:	push   ebx
  41335a:	fimul  WORD PTR [edx-0x13]
  41335d:	pop    es
  41335e:	stc    
  41335f:	es jmp 0xf4ab6027
  413365:	fst    st(7)
  413367:	in     al,0xe8
  413369:	inc    edi
  41336a:	mov    eax,ecx
  41336c:	repz or ecx,DWORD PTR [eax]
  41336f:	dec    eax
  413370:	mov    ebp,0x6494f29
  413375:	sbb    eax,0xd06bdaae
  41337a:	fucom  st(1)
  41337c:	inc    edi
  41337d:	jbe    0x4133b9
  41337f:	sti    
  413380:	fidivr DWORD PTR [eax]
  413382:	mov    esp,0x3af5933e
  413387:	test   BYTE PTR [ebp-0x2372dc3d],bl
  41338d:	jl     0x4133fc
  41338f:	iret   
  413390:	clc    
  413391:	jle    0x41337a
  413393:	out    dx,eax
  413394:	jmp    0x413331
  413396:	enter  0xeea6,0x28
  41339a:	mov    WORD PTR [esp+ecx*8+0x58897dbf],?
  4133a1:	je     0x413379
  4133a3:	jb     0x413414
  4133a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4133a6:	lods   al,BYTE PTR ds:[esi]
  4133a7:	push   0x6dd5154b
  4133ac:	mov    edi,fs
  4133ae:	mov    DWORD PTR [eax-0x2b0eed83],ecx
  4133b4:	xlat   BYTE PTR ds:[ebx]
  4133b5:	out    0x1d,eax
  4133b7:	mov    eax,ds:0x7c5cb505
  4133bc:	push   ds
  4133bd:	inc    eax
  4133be:	xchg   BYTE PTR [ebx+0x42],dh
  4133c1:	in     al,0x4f
  4133c3:	scas   eax,DWORD PTR es:[edi]
  4133c4:	mov    ah,0x7b
  4133c6:	aas    
  4133c7:	jnp    0x4133fe
  4133c9:	sub    esp,edx
  4133cb:	jg     0x413391
  4133cd:	xchg   DWORD PTR [esi],edx
  4133cf:	push   ecx
  4133d0:	sub    eax,0xd69b11cf
  4133d5:	ins    BYTE PTR es:[edi],dx
  4133d6:	shl    DWORD PTR [esp+eax*1-0x66],1
  4133da:	js     0x4133e8
  4133dc:	push   edx
  4133dd:	jo     0x4133d2
  4133df:	mov    ds:0xc1ab3dff,al
  4133e4:	mov    esi,0xd302937f
  4133e9:	sbb    ebp,DWORD PTR [ebx+0x39c93bd5]
  4133ef:	je     0x4133e5
  4133f1:	sbb    eax,0xf41dbaf8
  4133f6:	jmp    0xe6fcb0d
  4133fb:	jne    0x41344a
  4133fd:	test   eax,0xd91cdeb1
  413402:	mov    al,ds:0x7135417b
  413407:	mov    al,ds:0x30980e08
  41340c:	aas    
  41340d:	repnz or cl,BYTE PTR [edx]
  413410:	push   ss
  413411:	cmp    dl,BYTE PTR [ebp-0x18326aed]
  413417:	nop
  413418:	xchg   esi,eax
  413419:	mov    WORD PTR [ebx],?
  41341b:	mov    bh,0xb3
  41341d:	in     al,dx
  41341e:	sub    DWORD PTR [ecx+0x30],edx
  413421:	xor    BYTE PTR [edi],ah
  413423:	jle    0x4134a2
  413425:	mov    ss,eax
  413427:	js     0x413415
  413429:	out    dx,al
  41342a:	cld    
  41342b:	pop    edi
  41342c:	sbb    ebp,esi
  41342e:	push   0xfa000baa
  413433:	dec    eax
  413434:	add    edi,0xffffff87
  413437:	je     0x413445
  413439:	sahf   
  41343a:	mov    esp,0x191679ec
  41343f:	mov    esp,0x8a50ff02
  413444:	sar    BYTE PTR [ecx-0xc],1
  413447:	psubusw mm7,QWORD PTR [ebp-0x8b7d737]
  41344e:	sti    
  41344f:	mul    BYTE PTR [esi]
  413451:	add    ecx,ebx
  413453:	mov    eax,0x213e
  413458:	mov    DWORD PTR [ebp-0x20],ecx
  41345b:	mov    eax,DWORD PTR [ebp-0x20]
  41345e:	je     0x414b6a
  413464:	not    DWORD PTR ds:0x42fcf9
  41346a:	mov    eax,DWORD PTR [ebp-0x4]
  41346d:	xor    eax,0x7510855
  413472:	xor    DWORD PTR ds:0x42fcd5,0x8f6
  41347c:	add    eax,ebx
  41347e:	jmp    0x413762
  413483:	inc    edx
  413484:	mov    WORD PTR [eax],cs
  413486:	jp     0x41345e
  413488:	adc    BYTE PTR [edx+0x54],0xc3
  41348c:	mov    ss:0x69171a0f,al
  413492:	jnp    0x413480
  413494:	outs   dx,BYTE PTR ds:[esi]
  413495:	jo     0x413507
  413497:	mov    ecx,0xef70707e
  41349c:	into   
  41349d:	test   BYTE PTR [esi],ah
  41349f:	pop    eax
  4134a0:	mov    edi,0x6608b645
  4134a5:	push   cs
  4134a6:	sub    al,0x7c
  4134a8:	jno    0x413489
  4134aa:	retf   0x95f0
  4134ad:	sbb    al,0xd7
  4134af:	cmove  esp,DWORD PTR [ebx+0x3]
  4134b3:	pop    es
  4134b4:	and    BYTE PTR [edx-0x563cfcf3],ch
  4134ba:	cmp    BYTE PTR [eax],dh
  4134bc:	pop    ecx
  4134bd:	mov    ecx,0xce565dde
  4134c2:	mov    ds:0xc55807a6,eax
  4134c7:	(bad)  
  4134c8:	dec    esi
  4134c9:	dec    ecx
  4134ca:	xchg   BYTE PTR [eax],al
  4134cc:	push   es
  4134cd:	push   esi
  4134ce:	pop    esi
  4134cf:	scas   al,BYTE PTR es:[edi]
  4134d0:	in     eax,0xc5
  4134d2:	sub    ch,BYTE PTR [edi]
  4134d4:	jecxz  0x4134ff
  4134d6:	sub    bl,ah
  4134d8:	mov    dh,0x1a
  4134da:	dec    edx
  4134db:	or     edi,DWORD PTR [ebx+0x661dfd74]
  4134e1:	push   es
  4134e2:	add    BYTE PTR [edx-0x7],bh
  4134e5:	xchg   eax,ebx
  4134e7:	mov    ds:0x9ed25385,eax
  4134ec:	pcmpgtd mm2,mm5
  4134ef:	fs fadd st,st(3)
  4134f2:	out    0x95,al
  4134f4:	in     al,0xda
  4134f6:	mov    WORD PTR [ebp-0x3dfe1a84],fs
  4134fc:	mov    al,0xc7
  4134fe:	adc    esp,DWORD PTR [edi]
  413500:	pop    edx
  413501:	stc    
  413502:	leave  
  413503:	push   0x6b
  413505:	and    DWORD PTR [eax-0x73b82144],0x44df87a1
  41350f:	retf   
  413510:	xlat   BYTE PTR ds:[ebx]
  413511:	rol    cl,1
  413513:	cld    
  413514:	pop    edx
  413515:	pop    ebx
  413516:	inc    esp
  413517:	cmp    DWORD PTR ds:[edi],ebx
  41351a:	mov    ebx,0x7c9534b4
  41351f:	lea    eax,[esi+eiz*4]
  413522:	jl     0x413555
  413524:	cmp    al,0x16
  413526:	xor    ah,BYTE PTR [esi+0x395b5d17]
  41352c:	cmp    DWORD PTR [eax-0x3d],edx
  41352f:	les    ebp,FWORD PTR [ebx-0x3e]
  413532:	xchg   esp,eax
  413533:	pop    ebp
  413534:	fcmovu st,st(1)
  413536:	jmp    0x4134ba
  413538:	mov    DWORD PTR [ecx+eax*4+0x3a],edi
  41353c:	mov    fs,WORD PTR [esi+0x45]
  41353f:	adc    al,0x6f
  413541:	pop    ss
  413542:	adc    eax,0xd68f99fb
  413547:	or     eax,0x6d5323fc
  41354c:	into   
  41354d:	cdq    
  41354e:	scas   eax,DWORD PTR es:[edi]
  41354f:	jp     0x4134fc
  413551:	sbb    al,0xd3
  413553:	push   es
  413554:	iret   
  413555:	aas    
  413556:	loop   0x4135bc
  413558:	dec    eax
  413559:	jb     0x413550
  41355b:	push   ss
  41355c:	mov    cl,0xc1
  41355e:	cmp    eax,0xc59b07d9
  413563:	xchg   edx,eax
  413564:	xor    BYTE PTR [ecx-0x3a],bl
  413567:	mov    cl,0x32
  413569:	sub    edx,DWORD PTR [ebx-0x3c]
  41356c:	and    eax,0x5ae9c65c
  413571:	adc    ebx,DWORD PTR [eax+0x37]
  413574:	cmp    esp,DWORD PTR [esi+0x313f29c7]
  41357a:	into   
  41357b:	lock and DWORD PTR [edi+0x38],eax
  41357f:	mov    eax,ds:0x73c442cb
  413584:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413585:	(bad)  
  413586:	(bad)  
  413587:	ins    DWORD PTR es:[edi],dx
  413588:	sbb    al,0xb2
  41358a:	mov    al,ds:0x3b661b44
  41358f:	adc    eax,0xda7e2326
  413594:	inc    edx
  413595:	imul   ebp,DWORD PTR ds:0xeea13057,0xffffffb9
  41359c:	pop    ss
  41359d:	cdq    
  41359e:	inc    esp
  41359f:	adc    DWORD PTR [esi+0x45],eax
  4135a2:	push   ss
  4135a3:	cmp    DWORD PTR [edx],ebx
  4135a5:	lods   eax,DWORD PTR ds:[esi]
  4135a6:	push   ebx
  4135a7:	ss mov esi,0x7fc1077e
  4135ad:	shl    esp,1
  4135af:	loop   0x41357b
  4135b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4135b2:	xor    eax,0xdbcbefbe
  4135b7:	xor    eax,0x405ae381
  4135bc:	gs cmp al,0xbc
  4135bf:	xchg   esp,eax
  4135c0:	(bad)  
  4135c1:	mov    eax,ds:0x533b0caa
  4135c6:	dec    ecx
  4135c7:	and    eax,0xa97fd6d
  4135cc:	pushf  
  4135cd:	mov    edx,0x6c9f120a
  4135d2:	(bad)  
  4135d3:	cli    
  4135d4:	outs   dx,DWORD PTR ds:[esi]
  4135d5:	mov    bx,0x8176
  4135d9:	gs (bad) 
  4135db:	rol    edi,1
  4135dd:	inc    esp
  4135de:	mov    fs,WORD PTR [ebx]
  4135e0:	jl     0x413619
  4135e2:	ds or  eax,0x639a008b
  4135e9:	pop    esi
  4135ea:	dec    ecx
  4135eb:	fisttp QWORD PTR [esi-0x3da5e352]
  4135f1:	shr    DWORD PTR [eax+0x70d67fc7],0x29
  4135f8:	xchg   BYTE PTR [edi],cl
  4135fa:	jle    0x413626
  4135fc:	or     ah,al
  4135fe:	mov    ch,0xa4
  413600:	retf   0x4bfe
  413603:	femms  
  413605:	push   edi
  413606:	jg     0x4135a1
  413608:	mov    BYTE PTR [eax-0x54359dc5],ah
  41360e:	outs   dx,DWORD PTR ds:[esi]
  41360f:	dec    ecx
  413610:	inc    edi
  413611:	adc    esp,DWORD PTR [eax+0x5dc16f3d]
  413617:	cmp    BYTE PTR [ecx+0x31],bl
  41361a:	out    0xf4,eax
  41361c:	push   es
  41361d:	js     0x31c79f2e
  413623:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413624:	lea    esi,[ecx-0x79]
  413627:	ds and eax,0x5b14efff
  41362d:	scas   al,BYTE PTR es:[edi]
  41362e:	push   cs
  41362f:	stos   DWORD PTR es:[edi],eax
  413630:	shr    DWORD PTR [edx],cl
  413632:	jb     0x413691
  413634:	repnz cmp dl,cl
  413637:	arpl   WORD PTR [edi],sp
  413639:	sbb    bl,BYTE PTR [edi+0x34]
  41363c:	frstor [edx+edx*8]
  41363f:	icebp  
  413640:	ret    0x644d
  413643:	cs hlt 
  413645:	adc    DWORD PTR [ebp+0x2f9a38b4],edi
  41364b:	xchg   DWORD PTR [ecx-0x3f],ebp
  41364e:	cmc    
  41364f:	fstp   DWORD PTR [eax+0xc59bb6d]
  413655:	in     al,dx
  413656:	sbb    cl,ch
  413658:	mov    bh,0x72
  41365a:	into   
  41365b:	push   edx
  41365c:	pop    ecx
  41365d:	jo     0x4135e0
  41365f:	cdq    
  413660:	mov    bl,bl
  413662:	xor    DWORD PTR [esi-0x7b1c01be],0x1a
  413669:	cwde   
  41366a:	sbb    al,0x44
  41366c:	adc    ch,BYTE PTR [edi]
  41366e:	cdq    
  41366f:	(bad)  
  413670:	pop    edi
  413671:	fmul   DWORD PTR [edx+esi*4]
  413674:	xlat   BYTE PTR ds:[ebx]
  413675:	xchg   esi,eax
  413676:	and    DWORD PTR [esi+0x6faf6cb1],edx
  41367c:	(bad)
  41367f:	jnp    0x41367e
  413681:	das    
  413682:	jnp    0x4136e0
  413684:	out    dx,eax
  413685:	or     eax,0xf065840b
  41368a:	cmp    al,ah
  41368c:	and    BYTE PTR [eax+0x2c250b5c],bh
  413692:	jle    0x4136e1
  413694:	mov    esi,0x4350e8fc
  413699:	outs   dx,BYTE PTR ds:[esi]
  41369a:	or     dh,ah
  41369c:	jns    0x4136b6
  41369e:	sbb    ecx,DWORD PTR ds:0x74dbda8e
  4136a4:	int3   
  4136a5:	mov    DWORD PTR [edi],esp
  4136a7:	fdivp  st(0),st
  4136a9:	mov    bh,0x89
  4136ab:	xchg   edx,eax
  4136ac:	scas   al,BYTE PTR es:[edi]
  4136ad:	mov    eax,0x24bdd214
  4136b2:	push   edx
  4136b3:	mov    bh,0x5c
  4136b5:	ins    BYTE PTR es:[edi],dx
  4136b6:	xchg   BYTE PTR ds:0x50109d12,ch
  4136bc:	iret   
  4136bd:	inc    al
  4136bf:	push   esp
  4136c0:	fcom   QWORD PTR [ebx+0x6e]
  4136c3:	inc    esp
  4136c4:	out    dx,eax
  4136c5:	mov    bl,0xe5
  4136c7:	divps  xmm0,XMMWORD PTR [edx+ebx*2-0x3f]
  4136cc:	lds    edx,FWORD PTR [eax]
  4136ce:	pop    ecx
  4136cf:	push   es
  4136d0:	pop    edi
  4136d1:	(bad)
  4136d4:	dec    ecx
  4136d5:	fwait
  4136d6:	inc    esp
  4136d7:	gs into 
  4136d9:	adc    DWORD PTR [ebx],ebx
  4136db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4136dc:	in     eax,0xfa
  4136de:	mov    ecx,0xb884d49b
  4136e3:	iret   
  4136e4:	aam    0xb9
  4136e6:	imul   ecx,DWORD PTR [edx-0x1231637c],0x74a21227
  4136f0:	push   edi
  4136f1:	xor    al,BYTE PTR cs:[ebx+0x469f321b]
  4136f8:	mov    dl,0xbf
  4136fa:	pop    ebx
  4136fb:	push   eax
  4136fc:	or     DWORD PTR [ebx],ecx
  4136fe:	mov    ?,WORD PTR [ebx-0xb]
  413701:	fstp   st(2)
  413703:	aas    
  413704:	in     eax,0xe9
  413706:	lea    ecx,[ebp-0x1e]
  413709:	retf   0xe96e
  41370c:	setae  BYTE PTR [edi+0x8be6bba]
  413713:	scas   eax,DWORD PTR es:[edi]
  413714:	das    
  413715:	in     al,0x5b
  413717:	or     DWORD PTR [ecx],0xffffffd7
  41371a:	or     al,0x17
  41371c:	ss call 0x1276066c
  413722:	dec    ebx
  413723:	push   ss
  413724:	inc    edx
  413725:	ror    BYTE PTR [eax],cl
  413727:	rcl    DWORD PTR [edi+0x9],cl
  41372a:	dec    ebp
  41372b:	xor    bl,BYTE PTR [esi+0x77]
  41372e:	in     al,0xce
  413730:	ss jns 0x4137ad
  413733:	(bad)  
  413734:	mov    ebx,0xdac02d36
  413739:	xor    esi,esi
  41373b:	(bad)  
  41373c:	cdq    
  41373d:	frstor es:[esi]
  413740:	imul   esp,DWORD PTR [eax+eax*2],0x6e130e5f
  413747:	lods   eax,DWORD PTR ds:[esi]
  413748:	stos   DWORD PTR es:[edi],eax
  413749:	mov    al,0xd8
  41374b:	inc    ecx
  41374c:	not    bl
  41374e:	adc    esi,DWORD PTR [ebp-0x39]
  413751:	and    BYTE PTR [eax+0x557cb785],ah
  413757:	sub    al,0x72
  413759:	ins    BYTE PTR es:[edi],dx
  41375a:	mov    al,0x3a
  41375c:	js     0x4136fc
  41375e:	or     al,0x88
  413760:	out    dx,eax
  413761:	cmp    DWORD PTR [ebx],0xfffffff8
  413764:	jne    0x4141ef
  41376a:	push   DWORD PTR [ebp+0x8]
  41376d:	jmp    0x413a51
  413772:	and    al,0x98
  413774:	lods   al,BYTE PTR ds:[esi]
  413775:	shr    BYTE PTR [esp+edx*8-0x305f8b9c],0x9e
  41377d:	in     al,dx
  41377e:	sub    BYTE PTR [edi+0x71],bl
  413781:	xor    DWORD PTR ds:0xb970706b,esi
  413787:	jle    0x4137f9
  413789:	jo     0x4137b7
  41378b:	dec    eax
  41378c:	jmp    0xecca954a
  413791:	sbb    BYTE PTR [edi+0x3e],dl
  413794:	stos   DWORD PTR es:[edi],eax
  413795:	(bad)  
  413796:	cwde   
  413797:	ror    eax,cl
  413799:	and    edx,0x56
  41379c:	ins    BYTE PTR es:[edi],dx
  41379d:	sub    BYTE PTR [edx+0xe],0xc9
  4137a1:	aad    0x6a
  4137a3:	repz sbb eax,0x3908b883
  4137a9:	cs xor ebx,esi
  4137ac:	sub    DWORD PTR [ebx-0xeab5cca],esp
  4137b2:	aas    
  4137b3:	fs sbb dl,al
  4137b6:	jle    0x4137ab
  4137b8:	or     DWORD PTR cs:[ebx-0xd],edx
  4137bc:	lds    ebp,FWORD PTR [edx]
  4137be:	pop    edx
  4137bf:	jns    0x4137b8
  4137c1:	mov    dl,0x7b
  4137c3:	sbb    esi,DWORD PTR [edx]
  4137c5:	adc    ch,ah
  4137c7:	sub    eax,0xe6f36168
  4137cc:	add    DWORD PTR ds:0x75639b47,esp
  4137d2:	xchg   ebx,eax
  4137d3:	xor    DWORD PTR [ebp+0x11c32954],ecx
  4137d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4137da:	(bad)  
  4137db:	jge    0x4137e5
  4137dd:	xchg   esi,eax
  4137de:	ja     0x4137ee
  4137e0:	fcomp  QWORD PTR [esi]
  4137e2:	adc    BYTE PTR [eax-0x2dc1da59],cl
  4137e8:	inc    esi
  4137e9:	rol    BYTE PTR [ebp-0x28],0x7d
  4137ed:	aas    
  4137ee:	je     0x4137a0
  4137f0:	xchg   ecx,eax
  4137f1:	iret   
  4137f2:	hlt    
  4137f3:	pop    eax
  4137f4:	dec    edi
  4137f5:	cmp    eax,0x956d0221
  4137fa:	sub    eax,0x9335e33d
  4137ff:	push   ds
  413800:	cli    
  413801:	leave  
  413802:	push   eax
  413803:	push   cs
  413804:	sti    
  413805:	jmp    0x6ca0:0x43f45165
  41380c:	cmp    BYTE PTR [ecx-0x20746ebc],ch
  413812:	cmp    edi,DWORD PTR [edx+0x5991eac7]
  413818:	ret    
  413819:	popf   
  41381a:	retf   0x92ed
  41381d:	(bad)  
  41381e:	(bad)  
  41381f:	aam    0x6f
  413821:	and    ecx,esp
  413823:	(bad)  
  413824:	in     al,dx
  413825:	pop    ebx
  413826:	xchg   edx,eax
  413827:	push   edi
  413828:	dec    ecx
  413829:	cdq    
  41382a:	and    eax,0x3025b0e7
  41382f:	sbb    al,0x1a
  413831:	mov    ds:0x8d123190,eax
  413836:	scas   eax,DWORD PTR es:[edi]
  413837:	or     edi,DWORD PTR [ebx-0x31e3fd9]
  41383d:	adc    eax,0xf6c6ecbd
  413842:	xchg   edx,eax
  413843:	mov    ds:0xe48d3f27,eax
  413848:	div    BYTE PTR [edx-0x53]
  41384b:	jp     0x413860
  41384d:	xor    cl,BYTE PTR [esi]
  41384f:	mov    ebx,0x83e01e14
  413854:	loope  0x4137fb
  413856:	ror    BYTE PTR [esi+0x69bbbb29],cl
  41385c:	daa    
  41385d:	hlt    
  41385e:	lock adc DWORD PTR [ebp-0x6],ebx
  413862:	mov    ebp,0x158c6c2b
  413867:	imul   ebp,DWORD PTR ds:0x216f4109,0xd0a1db12
  413871:	fwait
  413872:	add    al,0xa9
  413874:	ins    BYTE PTR es:[edi],dx
  413875:	pop    edi
  413876:	clc    
  413877:	mov    ebx,0xc0616fa5
  41387c:	fwait
  41387d:	jl     0x413814
  41387f:	cs stc 
  413881:	in     eax,0xb
  413883:	std    
  413884:	push   ebp
  413885:	add    cl,dl
  413887:	adc    eax,0x643098a5
  41388c:	pop    eax
  41388d:	test   DWORD PTR [esp-0x2a],edi
  413891:	repnz out 0x64,al
  413894:	out    dx,eax
  413895:	mov    bh,0x47
  413897:	pop    ss
  413898:	add    eax,DWORD PTR cs:[edx+eax*2]
  41389c:	cmp    al,0x88
  41389e:	jmp    eax
  4138a0:	enter  0x7b09,0x5c
  4138a4:	test   ecx,edi
  4138a6:	call   0xb247e8f
  4138ab:	dec    esi
  4138ac:	je     0x41392a
  4138ae:	fcomp  QWORD PTR [eax+0x73c6db88]
  4138b4:	pop    ds
  4138b5:	(bad)  
  4138b6:	xor    DWORD PTR [eax-0x2dce8dad],esp
  4138bc:	and    edx,ebx
  4138be:	adc    dl,bl
  4138c0:	push   esi
  4138c1:	mov    eax,0xbd1841b9
  4138c6:	int3   
  4138c7:	je     0x41391a
  4138c9:	nop
  4138ca:	and    al,0xb5
  4138cc:	cdq    
  4138cd:	xchg   ebp,edx
  4138cf:	ja     0x413895
  4138d1:	in     al,dx
  4138d2:	xchg   edx,eax
  4138d3:	xor    dl,BYTE PTR [edx+0x28f94a17]
  4138d9:	(bad)  
  4138db:	add    eax,0x21686455
  4138e0:	push   ecx
  4138e1:	jae    0x413901
  4138e3:	call   0xe96b86c7
  4138e8:	adc    ah,bh
  4138ea:	adc    dh,BYTE PTR [esi+0x5a245148]
  4138f0:	dec    ebx
  4138f1:	shr    BYTE PTR [edi+0x1f91e35e],0xec
  4138f8:	hlt    
  4138f9:	nop
  4138fa:	or     ch,ah
  4138fc:	clc    
  4138fd:	mov    ah,0x1f
  4138ff:	inc    ebp
  413900:	or     cl,dl
  413902:	call   0xdaed:0x87266b5e
  413909:	inc    ecx
  41390a:	in     al,0x66
  41390c:	dec    esp
  41390d:	cmp    eax,0xe5856268
  413912:	xchg   bl,al
  413914:	sub    ebp,DWORD PTR [ecx+edx*8]
  413917:	jne    0x413929
  413919:	cmp    edi,esi
  41391b:	mov    ds:0xb4860e46,al
  413920:	jb     0x41394b
  413922:	daa    
  413923:	stc    
  413924:	push   esi
  413925:	shl    DWORD PTR es:[esi-0x3d819137],cl
  41392c:	sbb    al,0xf8
  41392e:	(bad)  
  41392f:	sar    DWORD PTR [esp+eax*2],1
  413932:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413933:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413934:	jecxz  0x4138ef
  413936:	jecxz  0x413924
  413938:	mul    DWORD PTR [edx]
  41393a:	inc    esp
  41393b:	je     0x4139a2
  41393d:	push   0x4871a9b
  413942:	pop    es
  413943:	test   al,0x8f
  413945:	mov    al,0x9b
  413947:	cmp    edx,edi
  413949:	sub    al,0x32
  41394b:	add    eax,0x3367cf78
  413950:	xchg   ebx,eax
  413951:	cs sub eax,0x78c8015b
  413957:	out    0x6e,al
  413959:	jp     0x4139a3
  41395b:	std    
  41395c:	loopne 0x41398d
  41395e:	retf   0xe188
  413961:	data16 jecxz 0x41396e
  413964:	sub    al,0xe
  413966:	sbb    eax,0x67
  413969:	je     0x41397b
  41396b:	(bad)  
  41396d:	fucomp st(2)
  41396f:	sbb    esi,DWORD PTR [edi+0x723f4d06]
  413975:	push   es
  413976:	sub    BYTE PTR [ecx],al
  413978:	xchg   edi,eax
  413979:	mov    ds:0x73aed2c1,al
  41397e:	gs mov dl,0xd4
  413981:	mov    BYTE PTR [ebx],al
  413983:	pop    es
  413984:	retf   
  413985:	sti    
  413986:	loop   0x4139c3
  413988:	pop    ebp
  413989:	xor    DWORD PTR [eax],0x1f
  41398c:	(bad)  
  41398e:	sub    al,0x56
  413990:	mov    eax,ds:0x91d39f78
  413995:	(bad)  
  413996:	out    0x57,al
  413998:	(bad)
  41399b:	push   es
  41399c:	js     0x413a03
  41399e:	mov    ch,0x5a
  4139a0:	clc    
  4139a1:	cli    
  4139a2:	pop    edi
  4139a3:	cmp    bl,BYTE PTR [esi]
  4139a5:	into   
  4139a6:	or     al,0x43
  4139a8:	pop    es
  4139a9:	jge    0x413a18
  4139ab:	and    DWORD PTR [ecx-0x219923d2],0x51e0adc6
  4139b5:	inc    esp
  4139b6:	xor    BYTE PTR gs:[ebx+0x16b32f46],ah
  4139bd:	mov    ebp,DWORD PTR [edi+edi*8+0x67]
  4139c1:	in     eax,0xfa
  4139c3:	cmp    eax,DWORD PTR [ebx-0x24]
  4139c6:	xchg   al,al
  4139c8:	imul   edi,DWORD PTR [esi+0x1e],0xfffffff2
  4139cc:	lods   al,BYTE PTR ds:[esi]
  4139cd:	add    eax,0xcdaa00b
  4139d2:	leave  
  4139d3:	daa    
  4139d4:	mov    bh,0x7e
  4139d6:	shr    DWORD PTR [ebx+ebp*4],0x77
  4139da:	mov    ah,0xab
  4139dc:	inc    edi
  4139dd:	aad    0xe6
  4139df:	add    eax,0xd7813af2
  4139e4:	scas   eax,DWORD PTR es:[edi]
  4139e5:	or     ebx,esi
  4139e7:	mov    esp,ebp
  4139e9:	dec    ebx
  4139ea:	and    ecx,ebx
  4139ec:	push   0xb2eccec6
  4139f1:	jp     0x413a5f
  4139f3:	jmp    0x413a52
  4139f5:	add    eax,0x35e9da64
  4139fa:	ins    DWORD PTR es:[edi],dx
  4139fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4139fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4139fd:	fcmovb st,st(4)
  4139ff:	sub    al,BYTE PTR [esi-0x343c142d]
  413a05:	mov    ebx,0x42d6cbc7
  413a0a:	outs   dx,DWORD PTR ds:[esi]
  413a0b:	fiadd  WORD PTR [ebp+0x3e]
  413a0e:	mov    dh,0xf0
  413a10:	cs sbb al,0xa1
  413a13:	loop   0x413a27
  413a15:	stos   DWORD PTR es:[edi],eax
  413a16:	dec    edi
  413a17:	and    bh,BYTE PTR [edx]
  413a19:	mov    cl,0xec
  413a1b:	and    ah,BYTE PTR [ebx]
  413a1d:	jl     0x4139d7
  413a1f:	mov    eax,0xfd69356e
  413a24:	mov    esi,0x5bdfb8c3
  413a29:	mov    ebp,0x2469ce29
  413a2e:	cmc    
  413a2f:	and    DWORD PTR [edi],edx
  413a31:	push   ebx
  413a32:	mov    bh,0xe3
  413a34:	(bad)  
  413a35:	loope  0x413a50
  413a37:	jbe    0x413a7f
  413a39:	pop    esp
  413a3a:	(bad)  
  413a3b:	or     BYTE PTR [edi-0x56],dh
  413a3e:	scas   eax,DWORD PTR es:[edi]
  413a3f:	dec    esi
  413a40:	or     DWORD PTR [ebp+0x48613ffd],0x4d
  413a47:	sbb    esp,edi
  413a49:	mov    eax,0x788fd849
  413a4e:	out    dx,al
  413a4f:	mov    eax,0xbd77e856
  413a54:	(bad)  
  413a55:	(bad)  
  413a56:	jmp    0x413d3a
  413a5b:	pop    ebx
  413a5c:	ins    DWORD PTR es:[edi],dx
  413a5d:	and    al,0xa9
  413a5f:	xor    dh,BYTE PTR [ecx+0x71]
  413a62:	ins    DWORD PTR es:[edi],dx
  413a63:	jp     0x413a20
  413a65:	or     esi,ecx
  413a67:	add    eax,0x7e175acf
  413a6c:	push   0x7eb97070
  413a71:	jo     0x413ae3
  413a73:	aaa    
  413a74:	mov    esi,0x73cfc370
  413a79:	fsub   QWORD PTR [esi]
  413a7b:	jmp    0xde6b:0x35b85959
  413a82:	mov    al,0x2
  413a84:	add    esi,ebp
  413a86:	aam    0x83
  413a88:	sub    DWORD PTR [ebp+0x1c],0xffffff81
  413a8c:	mov    eax,ds:0x75a37065
  413a91:	in     al,dx
  413a92:	sti    
  413a93:	jae    0x413a98
  413a95:	cmp    al,0x3c
  413a97:	ret    
  413a98:	xlat   BYTE PTR ds:[ebx]
  413a99:	loope  0x413a8d
  413a9b:	aad    0x22
  413a9d:	mov    al,ds:0x681a83f6
  413aa2:	xchg   esp,eax
  413aa3:	jl     0x413a3c
  413aa5:	(bad)  
  413aa6:	jmp    0x7b58fcde
  413aab:	sbb    BYTE PTR [ebx+esi*4-0x4cb3ad8d],al
  413ab2:	jle    0x413afe
  413ab4:	clc    
  413ab5:	lahf   
  413ab6:	push   es
  413ab7:	lock je 0x413ae4
  413aba:	aam    0x8e
  413abc:	js     0x413ac4
  413abe:	out    dx,al
  413abf:	nop
  413ac0:	xor    eax,0x5523cca2
  413ac5:	ret    0x1bcb
  413ac8:	sbb    ebx,ebp
  413aca:	cwde   
  413acb:	or     ch,0x44
  413ace:	out    0x97,eax
  413ad0:	repz daa 
  413ad2:	in     al,dx
  413ad3:	imul   ecx,edi,0xfc67fcb8
  413ad9:	push   edi
  413ada:	and    ebp,DWORD PTR [ecx+ebx*8+0x59]
  413ade:	fstp   DWORD PTR [ebp-0x73eb39db]
  413ae4:	arpl   WORD PTR [edi],ax
  413ae6:	mov    cl,0x2b
  413ae8:	in     al,0x73
  413aea:	inc    ebp
  413aeb:	or     al,0x25
  413aed:	int3   
  413aee:	shl    DWORD PTR [esi+0x15],cl
  413af1:	add    esi,DWORD PTR [esi+0x1f2c0b24]
  413af7:	sub    DWORD PTR [esi],0x37920bab
  413afd:	xchg   DWORD PTR [ebx-0x75],edi
  413b00:	cmp    DWORD PTR [ebx+0xa],eax
  413b03:	xor    ebp,DWORD PTR [edi-0x47e3a9e]
  413b09:	popf   
  413b0a:	fnstsw WORD PTR [ebx]
  413b0c:	xchg   esp,eax
  413b0d:	mov    bh,0x39
  413b0f:	(bad)  
  413b10:	(bad)  
  413b11:	in     al,0x92
  413b13:	jb     0x413b8b
  413b15:	(bad)  
  413b16:	push   ebp
  413b17:	iret   
  413b18:	fcom   DWORD PTR [esi-0x76cd793a]
  413b1e:	test   ebp,ebp
  413b20:	out    0x5a,eax
  413b22:	shr    DWORD PTR [ecx+0x55],cl
  413b25:	out    dx,al
  413b26:	out    dx,al
  413b27:	mov    dh,0x32
  413b29:	xchg   ebx,eax
  413b2a:	or     dh,BYTE PTR [ebx]
  413b2c:	ins    DWORD PTR es:[edi],dx
  413b2d:	in     eax,0x7c
  413b2f:	js     0x413b1c
  413b31:	jp     0x413b18
  413b33:	sbb    al,0x49
  413b35:	push   esi
  413b36:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413b37:	int3   
  413b38:	loope  0x413aca
  413b3a:	int3   
  413b3b:	stos   DWORD PTR es:[edi],eax
  413b3c:	cmc    
  413b3d:	ss push es
  413b3f:	dec    eax
  413b40:	inc    ebx
  413b41:	btr    DWORD PTR [edi-0x35],ebp
  413b45:	dec    edx
  413b46:	popf   
  413b47:	cli    
  413b48:	(bad)  
  413b49:	loope  0x413b51
  413b4b:	dec    edx
  413b4c:	call   0x105122ae
  413b51:	mov    al,0x8
  413b53:	mov    dh,BYTE PTR [edx]
  413b55:	out    0x9a,al
  413b57:	addr16 adc ch,al
  413b5a:	adc    DWORD PTR [ecx+0x3d776d74],esi
  413b60:	add    edx,DWORD PTR [esi]
  413b62:	rcl    BYTE PTR [edx],cl
  413b64:	cmp    al,0xdd
  413b66:	pop    edx
  413b67:	(bad)
  413b6b:	inc    edi
  413b6c:	and    eax,0xa1a5aba5
  413b71:	cmp    bh,BYTE PTR [esi-0x7cd6207f]
  413b77:	retf   0xfb5d
  413b7a:	jne    0x413b6c
  413b7c:	dec    eax
  413b7d:	jne    0x413bdd
  413b7f:	adc    BYTE PTR [esp+edi*2],dl
  413b82:	adc    DWORD PTR [eax-0x5b],0xffffffc5
  413b86:	mov    esp,DWORD PTR [eax]
  413b88:	loopne 0x413b1d
  413b8a:	adc    al,0xa3
  413b8c:	adc    eax,0x78214746
  413b91:	jnp    0x413b64
  413b93:	sbb    eax,0xa33b383a
  413b98:	test   DWORD PTR [eax],ebp
  413b9a:	clc    
  413b9b:	or     DWORD PTR [ebp-0x1ee7ff0d],ebx
  413ba1:	jmp    0xf7cb6a66
  413ba6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413ba7:	arpl   WORD PTR [esi+0x6ddcf6bc],ax
  413bad:	jo     0x413b92
  413baf:	pop    edi
  413bb0:	pusha  
  413bb1:	lahf   
  413bb2:	jmp    0x5682:0x29977b25
  413bb9:	popf   
  413bba:	jae    0x413b43
  413bbc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413bbd:	mov    eax,ds:0x2c9c5278
  413bc2:	xor    eax,0x7ef214c5
  413bc7:	shl    BYTE PTR [edx-0x74],cl
  413bca:	sbb    al,al
  413bcc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413bcd:	and    eax,0xb991fb4d
  413bd2:	clc    
  413bd3:	jmp    0x413b76
  413bd5:	jecxz  0x413c4a
  413bd7:	xor    eax,DWORD PTR [edi]
  413bd9:	push   eax
  413bda:	jge    0x413bca
  413bdc:	mov    BYTE PTR [edi+0x2e],dl
  413bdf:	fmulp  st(5),st
  413be1:	fadd   QWORD PTR [ecx]
  413be3:	rcr    dh,1
  413be5:	(bad)  
  413be6:	out    0xc5,eax
  413be8:	mov    ds:0xf7f437e6,al
  413bed:	scas   al,BYTE PTR es:[edi]
  413bee:	frstor [ebp-0x6b9513bc]
  413bf4:	test   DWORD PTR [edx],ebp
  413bf6:	nop
  413bf7:	push   0xffffffbc
  413bf9:	hlt    
  413bfa:	inc    ebp
  413bfb:	adc    al,0xc8
  413bfd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413bfe:	sbb    al,ch
  413c00:	fistp  WORD PTR [esi+0x3c92c2fe]
  413c06:	sub    bh,BYTE PTR [ebx]
  413c08:	fs dec ecx
  413c0a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413c0b:	in     eax,dx
  413c0c:	xor    dh,BYTE PTR [ebp-0x73e1bfac]
  413c12:	into   
  413c13:	into   
  413c14:	imul   ebx,DWORD PTR [eax-0x5b2fc18b],0xbaebaa4f
  413c1e:	lods   eax,DWORD PTR ds:[esi]
  413c1f:	xchg   ebx,eax
  413c20:	call   0xdc47:0x998a3c02
  413c27:	xchg   BYTE PTR [esi+0x5e0a0cc0],bh
  413c2d:	push   ebp
  413c2e:	and    ch,BYTE PTR [ecx+0x72b36adc]
  413c34:	and    eax,0x2172278a
  413c39:	shl    DWORD PTR [edi-0x10033bb2],1
  413c3f:	mov    bh,0xe6
  413c41:	pusha  
  413c42:	mov    bh,dh
  413c44:	dec    esp
  413c45:	retf   
  413c46:	loop   0x413c1a
  413c48:	xchg   ebx,eax
  413c49:	test   eax,0x6fc96415
  413c4e:	mov    ah,BYTE PTR [ebp+0x32]
  413c51:	bound  edi,QWORD PTR [ebx+0x6c5279e0]
  413c57:	out    dx,eax
  413c58:	add    al,0x4e
  413c5a:	adc    BYTE PTR [eax],al
  413c5c:	retf   
  413c5d:	mov    edi,0x562370b6
  413c62:	inc    edi
  413c63:	xchg   esi,eax
  413c64:	sub    dh,BYTE PTR [edi-0xd325bd1]
  413c6a:	retf   0x630
  413c6d:	inc    ebp
  413c6e:	jmp    0x81eb:0x87be0506
  413c75:	mov    bh,BYTE PTR [ebx-0x30f15c13]
  413c7b:	mov    BYTE PTR [edx-0x6ba4b486],ah
  413c81:	(bad)  
  413c82:	xchg   esp,eax
  413c83:	adc    DWORD PTR [ecx-0x1d],0x67aa3b15
  413c8a:	dec    ebx
  413c8b:	imul   ebp,DWORD PTR [edx-0x6b],0x2a
  413c8f:	dec    BYTE PTR [esi+0x1851df6b]
  413c95:	inc    esi
  413c96:	mov    eax,ds:0x9243ea1b
  413c9c:	jmp    0xcced7edb
  413ca1:	outs   dx,DWORD PTR ds:[esi]
  413ca2:	out    dx,al
  413ca3:	sbb    DWORD PTR [ecx],ecx
  413ca5:	and    BYTE PTR [esp+edi*1-0x10f70b52],bh
  413cac:	jno    0x413c84
  413cae:	repz and bl,bh
  413cb1:	inc    ebp
  413cb2:	mov    edi,0xc3f77095
  413cb7:	ror    edi,cl
  413cb9:	xchg   ebx,eax
  413cba:	ds xor eax,0x6c7b8478
  413cc0:	arpl   WORD PTR [esi-0x76],ax
  413cc3:	and    ebp,DWORD PTR [edi]
  413cc5:	imul   esi,DWORD PTR ds:[eax-0x38a20c47],0x5ad73dca
  413cd0:	cwde   
  413cd1:	sbb    ah,BYTE PTR cs:[ebp-0x50]
  413cd5:	mov    al,0x8c
  413cd7:	lahf   
  413cd8:	push   ds
  413cd9:	sub    edi,0x5
  413cdc:	xchg   edi,eax
  413cdd:	push   edi
  413cde:	cmp    BYTE PTR [ecx+0x27],cl
  413ce1:	ss jnp 0x413cf5
  413ce4:	mov    eax,ss
  413ce6:	scas   eax,DWORD PTR es:[edi]
  413ce7:	xchg   ebx,eax
  413ce8:	mov    edi,0x56ffae80
  413ced:	push   es
  413cee:	mov    edx,0xcd9eadfe
  413cf3:	cmp    ecx,esp
  413cf5:	sub    esi,DWORD PTR [eax]
  413cf7:	mov    eax,ds:0xd09fcfe0
  413cfc:	pop    esp
  413cfd:	add    DWORD PTR [ecx-0x3f4f650e],edx
  413d03:	fmul   DWORD PTR [ebp+edi*1-0x1a4aaf54]
  413d0a:	loopne 0x413d3f
  413d0c:	out    dx,eax
  413d0d:	inc    ebp
  413d0e:	push   ds
  413d0f:	lahf   
  413d10:	pop    ds
  413d11:	xchg   ebp,eax
  413d12:	jmp    0x72d9:0x79da15a1
  413d19:	push   cs
  413d1a:	sub    bl,cl
  413d1c:	inc    esi
  413d1d:	and    al,0xf6
  413d1f:	pushf  
  413d20:	inc    ecx
  413d21:	inc    edi
  413d22:	inc    edx
  413d23:	rcr    ebp,0xc3
  413d26:	lods   eax,DWORD PTR ds:[esi]
  413d27:	and    al,0xbd
  413d29:	sahf   
  413d2a:	(bad)  [edi+0x74]
  413d2d:	out    0x78,al
  413d2f:	or     al,0xe6
  413d31:	icebp  
  413d32:	neg    DWORD PTR [edi+0x47]
  413d35:	fs mov ebp,0x89256d00
  413d3b:	inc    ebp
  413d3c:	loopne 0x413cc9
  413d3e:	inc    ebp
  413d3f:	cld    
  413d40:	sub    ecx,ecx
  413d42:	mov    ecx,DWORD PTR [ebp-0x20]
  413d45:	mov    DWORD PTR ds:0x42e6ff,0x1b
  413d4f:	cmp    DWORD PTR ds:0x42e6ff,0x0
  413d56:	je     0x413dab
  413d5c:	cmp    DWORD PTR ds:0x42e6ff,0x2
  413d63:	jne    0x413d7f
  413d69:	push   DWORD PTR [ebp-0xc]
  413d6c:	push   0x52a1
  413d71:	push   0x824e
  413d76:	push   DWORD PTR [ebp-0x18]
  413d79:	call   DWORD PTR ds:0x42e56b
  413d7f:	cmp    DWORD PTR ds:0x42e6ff,0x3
  413d86:	jne    0x413d99
  413d8c:	mov    esi,DWORD PTR ds:0x42e6ff
  413d92:	dec    esi
  413d93:	mov    DWORD PTR ds:0x42e6ff,esi
  413d99:	mov    esi,DWORD PTR ds:0x42e6ff
  413d9f:	dec    esi
  413da0:	mov    DWORD PTR ds:0x42e6ff,esi
  413da6:	jmp    0x413d4f
  413dab:	mov    esi,0x7510855
  413db0:	or     DWORD PTR ds:0x42e70f,0x42fd86
  413dba:	xor    eax,esi
  413dbc:	add    eax,ebx
  413dbe:	cmp    ecx,eax
  413dc0:	mov    DWORD PTR ds:0x42e12c,0x588b
  413dca:	je     0x414b4e
  413dd0:	push   DWORD PTR [ebp-0x20]
  413dd3:	dec    DWORD PTR ds:0x42e6f7
  413dd9:	push   DWORD PTR [ebp+0x8]
  413ddc:	xor    DWORD PTR ds:0x42fcd9,0x42e120
  413de6:	call   0x405485
  413deb:	mov    DWORD PTR [ebp-0x14],eax
  413dee:	and    DWORD PTR ds:0x42e6fb,0x0
  413df8:	jmp    0x413e08
  413dfd:	mov    eax,ds:0x42e6fb
  413e02:	inc    eax
  413e03:	mov    ds:0x42e6fb,eax
  413e08:	cmp    DWORD PTR ds:0x42e6fb,0x10
  413e0f:	jae    0x413e33
  413e15:	cmp    DWORD PTR ds:0x42e6fb,0x16
  413e1c:	jne    0x413e28
  413e22:	call   DWORD PTR ds:0x42e48b
  413e28:	jmp    0x413dfd
  413e2d:	sub    DWORD PTR ds:0x42fd01,ecx
  413e33:	mov    eax,DWORD PTR [ebp-0x4]
  413e36:	or     DWORD PTR ds:0x42e6f7,edx
  413e3c:	mov    ecx,DWORD PTR [ebp-0x14]
  413e3f:	adc    DWORD PTR ds:0x42fd8a,0x2715
  413e49:	xor    eax,esi
  413e4b:	dec    DWORD PTR ds:0x42e703
  413e51:	add    eax,ebx
  413e53:	mov    DWORD PTR ds:0x42e11c,0x499a
  413e5d:	cmp    ecx,eax
  413e5f:	je     0x414b4e
  413e65:	not    eax
  413e67:	mov    eax,DWORD PTR [ebp-0x14]
  413e6a:	mov    eax,DWORD PTR [eax+0x18]
  413e6d:	mov    DWORD PTR [ebp-0x20],eax
  413e70:	xor    DWORD PTR ds:0x42e6fb,0x4f5
  413e7a:	jmp    0x41415e
  413e7f:	lods   al,BYTE PTR ds:[esi]
  413e80:	mov    WORD PTR [edx],gs
  413e82:	loopne 0x413eae
  413e84:	outs   dx,BYTE PTR ds:[esi]
  413e85:	push   0x4c
  413e87:	repz push edi
  413e89:	scas   eax,DWORD PTR es:[edi]
  413e8a:	pop    DWORD PTR [edx-0x72]
  413e8d:	or     al,0xa9
  413e8f:	inc    edi
  413e90:	jbe    0x413f02
  413e92:	jo     0x413e4d
  413e94:	jle    0x413f06
  413e96:	jo     0x413eb4
  413e98:	cld    
  413e99:	and    ch,bh
  413e9b:	push   edi
  413e9c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413e9d:	bound  ebx,QWORD PTR [ebx]
  413e9f:	fptan  
  413ea1:	and    eax,esp
  413ea3:	sbb    eax,0xe0f23502
  413ea8:	dec    ecx
  413ea9:	std    
  413eaa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413eab:	pop    esp
  413eac:	lea    edx,[eax+edx*8+0x32]
  413eb0:	std    
  413eb1:	push   0x422ba16f
  413eb6:	jge    0x413f34
  413eb8:	sbb    eax,edx
  413eba:	inc    esp
  413ebb:	mov    ebx,0x63ee05e2
  413ec0:	jns    0x413e50
  413ec2:	imul   edi,DWORD PTR ds:0x536c807e,0xd963e9ef
  413ecc:	lahf   
  413ecd:	mov    ds:0xfd1d9280,al
  413ed2:	adc    dl,BYTE PTR [edx]
  413ed4:	in     al,0x8b
  413ed6:	scas   eax,DWORD PTR es:[edi]
  413ed7:	je     0x413f49
  413ed9:	jnp    0x413e71
  413edb:	stos   DWORD PTR es:[edi],eax
  413edc:	and    al,BYTE PTR [eax-0x637f0842]
  413ee2:	sbb    ah,BYTE PTR [ecx+0x13513f2f]
  413ee8:	mov    cl,BYTE PTR [ebp+0x440df868]
  413eee:	cmp    BYTE PTR cs:[ebx+0x36bf9cd3],0x75
  413ef6:	cmp    bh,ah
  413ef8:	es jmp 0x6c457d5b
  413efe:	call   0xdfa4:0x1375e8f6
  413f05:	pop    ecx
  413f06:	cwde   
  413f07:	xor    BYTE PTR [eax+ebp*4+0x1f],0x9a
  413f0c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413f0d:	fmul   QWORD PTR [eax]
  413f0f:	cmp    BYTE PTR [edi+0x12],ah
  413f12:	xor    al,0x3
  413f14:	and    cl,BYTE PTR [edi+edi*8+0x34]
  413f18:	test   BYTE PTR [ebx+0xf],0xd8
  413f1c:	addr16 mov eax,ds:0x532f
  413f20:	(bad)  
  413f21:	pop    ebp
  413f22:	mov    cl,0xb0
  413f24:	add    BYTE PTR [esi-0x72aef494],ah
  413f2a:	mov    bl,0x26
  413f2c:	or     cl,dh
  413f2e:	sbb    ebx,DWORD PTR [ebp+0x3e]
  413f31:	jns    0x413f9a
  413f33:	loope  0x413ef7
  413f35:	mov    dh,0x89
  413f37:	hlt    
  413f38:	and    DWORD PTR [eax+0x62],esp
  413f3b:	mov    ebp,0xc6602a6e
  413f40:	shr    DWORD PTR [esi+0x51],cl
  413f43:	arpl   WORD PTR [edx+eiz*2-0x4717e93f],bx
  413f4a:	and    BYTE PTR [eax],bl
  413f4c:	je     0x413f46
  413f4e:	dec    esi
  413f4f:	fisub  DWORD PTR [ecx]
  413f51:	cmp    eax,0xda785828
  413f56:	jge    0x413fa1
  413f58:	inc    ebx
  413f59:	outs   dx,DWORD PTR ds:[esi]
  413f5a:	mov    ecx,0x2fd7a4c2
  413f5f:	je     0x413f5b
  413f61:	loop   0x413fc4
  413f63:	pop    eax
  413f64:	bound  ebx,QWORD PTR [eax]
  413f66:	stos   DWORD PTR es:[edi],eax
  413f67:	test   eax,0x6b4e64c9
  413f6c:	pop    esp
  413f6d:	xchg   ch,al
  413f6f:	sahf   
  413f70:	fbstp  TBYTE PTR fs:[esi]
  413f73:	clc    
  413f74:	nop
  413f75:	(bad)
  413f78:	push   eax
  413f79:	xchg   ebx,eax
  413f7a:	aam    0x96
  413f7c:	loop   0x413f8e
  413f7e:	scas   eax,DWORD PTR es:[edi]
  413f7f:	and    BYTE PTR [eax+edx*4-0x6299c3fb],cl
  413f86:	ffreep st(2)
  413f88:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413f89:	xchg   DWORD PTR [edi],esi
  413f8b:	std    
  413f8c:	xlat   BYTE PTR ds:[ebx]
  413f8d:	sub    edx,DWORD PTR [edx+0xff38316]
  413f93:	pop    esp
  413f94:	loope  0x413ffc
  413f96:	loop   0x413f9d
  413f98:	fimul  DWORD PTR [ecx+0x51]
  413f9b:	shl    BYTE PTR [edx],1
  413f9d:	mov    ebp,edi
  413f9f:	inc    ebx
  413fa0:	addr16 iret 
  413fa2:	bswap  esi
  413fa4:	xchg   ebx,eax
  413fa5:	push   0xffffff86
  413fa7:	in     al,0xd0
  413fa9:	inc    esp
  413faa:	mov    ch,0x9c
  413fac:	sbb    al,0x93
  413fae:	mov    ch,0x9d
  413fb0:	push   cs
  413fb1:	dec    ebx
  413fb2:	sahf   
  413fb3:	(bad)  
  413fb4:	xchg   ecx,eax
  413fb5:	xchg   edi,eax
  413fb6:	inc    ecx
  413fb7:	cs lds edx,FWORD PTR ss:[edi-0xa]
  413fbc:	or     al,0x88
  413fbe:	test   ch,0x4b
  413fc1:	retf   
  413fc2:	push   0xffffffba
  413fc4:	sub    al,0xbe
  413fc6:	and    BYTE PTR [esi-0x1e],0x5a
  413fca:	push   ebp
  413fcb:	mov    eax,0x1a2774d9
  413fd0:	xchg   edx,eax
  413fd1:	add    ecx,ebp
  413fd3:	push   ecx
  413fd4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413fd5:	push   es
  413fd6:	fisttp WORD PTR [edx+ebp*4]
  413fd9:	push   eax
  413fda:	stos   BYTE PTR es:[di],al
  413fdc:	loope  0x413fdf
  413fde:	bnd jmp 0x413f86
  413fe1:	mov    dl,0xbf
  413fe3:	adc    dh,al
  413fe5:	push   esi
  413fe6:	fmul   DWORD PTR [edx-0x14]
  413fe9:	mov    ds:0x60ab47fe,al
  413fee:	repnz sub esi,DWORD PTR [ebx-0x58]
  413ff2:	mov    esi,0x1035cc14
  413ff7:	and    eax,0x5b1f430a
  413ffc:	stos   DWORD PTR es:[edi],eax
  413ffd:	jnp    0x414011
  413fff:	fisttp QWORD PTR [esi-0x34444906]
  414005:	push   eax
  414006:	inc    edi
  414007:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414008:	add    BYTE PTR [ecx-0x39],dl
  41400b:	neg    BYTE PTR [ecx+0x1d5c6977]
  414011:	add    DWORD PTR [ebp+0x1953f227],0x3e7858d9
  41401b:	fdivrp st(0),st
  41401d:	dec    esp
  41401e:	mov    ebp,0x6d868aee
  414023:	mov    ebp,0xe051c5ae
  414028:	and    al,0xd3
  41402a:	mov    al,ds:0x84edc535
  41402f:	popa   
  414030:	adc    DWORD PTR [eax],0x1f
  414033:	fbld   TBYTE PTR [edi+0x79]
  414036:	xchg   DWORD PTR [ecx-0x5],ebp
  414039:	pop    ecx
  41403a:	push   ds
  41403b:	fiadd  DWORD PTR [ebx-0x34]
  41403e:	div    DWORD PTR [edx]
  414040:	add    eax,0x6af589d1
  414045:	icebp  
  414046:	fisttp DWORD PTR [edi]
  414048:	bound  ebp,QWORD PTR [edi]
  41404a:	gs clc 
  41404c:	inc    ebp
  41404d:	setbe  BYTE PTR [esi-0xd185e1d]
  414054:	ret    0xb090
  414057:	popa   
  414058:	add    ebx,DWORD PTR [edx+0x2d]
  41405b:	ins    BYTE PTR es:[edi],dx
  41405c:	add    BYTE PTR [edx+0x18],ch
  41405f:	(bad)
  414064:	adc    DWORD PTR [ecx],ebx
  414066:	jns    0x414035
  414068:	mov    al,ds:0xd7f7d391
  41406d:	sar    DWORD PTR [ebx+0x4],cl
  414070:	inc    esi
  414071:	ror    ecx,1
  414073:	ja     0x4140ee
  414075:	cwde   
  414076:	jmp    0x853cb17
  41407b:	or     al,0xe6
  41407d:	fldcw  WORD PTR [edx]
  41407f:	sub    dl,BYTE PTR [edi-0x66]
  414082:	cmc    
  414083:	push   cs
  414084:	das    
  414085:	imul   ebp,DWORD PTR [edi],0x3cdca73b
  41408b:	adc    eax,DWORD PTR [edx-0x70]
  41408e:	pop    ss
  41408f:	jo     0x4140fd
  414091:	xchg   edx,eax
  414092:	inc    ecx
  414093:	jle    0x41404a
  414095:	out    0xf4,eax
  414097:	jne    0x4140a1
  414099:	add    DWORD PTR [ebp+0x3f4b8d4b],ebp
  41409f:	scas   al,BYTE PTR es:[edi]
  4140a0:	pop    ss
  4140a1:	es push ss
  4140a3:	xchg   esp,eax
  4140a4:	(bad)  
  4140a5:	mov    cl,BYTE PTR [ebp+0xbe53296]
  4140ab:	mov    eax,0x954247b1
  4140b0:	jle    0x414046
  4140b2:	ds cmc 
  4140b4:	sti    
  4140b5:	xchg   edx,eax
  4140b6:	mov    eax,0xd7c422c5
  4140bb:	imul   edx,DWORD PTR [ebp+edx*4+0x41a3d684],0x490c8ddf
  4140c6:	sbb    eax,0x5bc4cf24
  4140cb:	jle    0x41408d
  4140cd:	daa    
  4140ce:	cwde   
  4140cf:	mov    ebx,0x6dd4670d
  4140d4:	inc    edx
  4140d5:	pop    ecx
  4140d6:	add    eax,0xf612e8dd
  4140db:	loopne 0x414082
  4140dd:	(bad)  
  4140de:	lock ja 0x414096
  4140e1:	inc    ebp
  4140e2:	mov    ah,0x11
  4140e4:	(bad)  
  4140e6:	shl    eax,1
  4140e8:	sub    BYTE PTR [ebp-0x48],0xd3
  4140ec:	cdq    
  4140ed:	dec    edi
  4140ee:	xor    BYTE PTR [edx+ecx*1+0x39b25d4c],0x63
  4140f6:	xor    dl,BYTE PTR [edi+0x3b]
  4140f9:	ds pop ecx
  4140fb:	push   edx
  4140fc:	es (bad) 
  4140fe:	jmp    0xceff:0x43ed97f4
  414105:	push   cs
  414106:	mov    edx,0x7d53c412
  41410b:	push   es
  41410c:	mov    bh,0x10
  41410e:	cmp    esi,DWORD PTR [ecx+esi*1-0x73]
  414112:	das    
  414113:	das    
  414114:	lds    ecx,FWORD PTR [ecx]
  414116:	sbb    BYTE PTR [edx+0x51c04c08],cl
  41411c:	and    ebp,DWORD PTR [edi]
  41411e:	jno    0x41418b
  414120:	repz aad 0x28
  414123:	jp     0x41415a
  414125:	retf   0xb454
  414128:	popa   
  414129:	sbb    ah,bh
  41412b:	add    al,0x48
  41412d:	pop    ebp
  41412f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414130:	pop    edx
  414131:	bound  ebx,QWORD PTR [ebp-0x70e488c3]
  414137:	fsub   DWORD PTR [ecx]
  414139:	(bad)  
  41413a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41413b:	push   ds
  41413c:	cmp    BYTE PTR [ecx-0x71],cl
  41413f:	push   eax
  414140:	or     edx,esi
  414142:	cwde   
  414143:	sub    BYTE PTR [ebp+esi*4-0x15],dl
  414147:	fsub   QWORD PTR [ecx+0x5195e761]
  41414d:	mov    ebp,0xb3b8f3c0
  414152:	jp     0x414136
  414154:	or     eax,0x6024b4f0
  414159:	sbb    DWORD PTR ds:0x8b3d28c5,ebx
  41415f:	inc    ebp
  414160:	in     al,dx
  414161:	and    DWORD PTR ds:0x42fcd5,0x0
  41416b:	mov    ecx,DWORD PTR ds:0x42fcd5
  414171:	inc    ecx
  414172:	mov    DWORD PTR ds:0x42fcd5,ecx
  414178:	cmp    DWORD PTR ds:0x42fcd5,0x2c
  41417f:	jne    0x41418b
  414185:	call   DWORD PTR ds:0x42e56f
  41418b:	cmp    DWORD PTR ds:0x42fcd5,0x1e
  414192:	jb     0x41416b
  414198:	mov    ecx,DWORD PTR [ebp+0x8]
  41419b:	or     DWORD PTR ds:0x42fcd9,0x46b9
  4141a5:	add    ecx,DWORD PTR [eax+0x20]
  4141a8:	mov    DWORD PTR [ebp-0x28],ecx
  4141ab:	or     eax,DWORD PTR ds:0x42e6ff
  4141b1:	mov    eax,DWORD PTR [ebp-0x14]
  4141b4:	mov    ecx,DWORD PTR ds:0x42fce9
  4141ba:	sbb    DWORD PTR ds:0x42fcd5,ecx
  4141c0:	mov    ecx,DWORD PTR [ebp+0x8]
  4141c3:	add    DWORD PTR ds:0x42fd05,0x42e713
  4141cd:	add    ecx,DWORD PTR [eax+0x24]
  4141d0:	add    DWORD PTR ds:0x42e6eb,edi
  4141d6:	mov    DWORD PTR [ebp-0x2c],ecx
  4141d9:	mov    eax,DWORD PTR [ebp-0x14]
  4141dc:	mov    ecx,DWORD PTR [ebp+0x8]
  4141df:	add    ecx,DWORD PTR [eax+0x1c]
  4141e2:	neg    eax
  4141e4:	xor    esi,esi
  4141e6:	and    DWORD PTR ds:0x42fd05,ebx
  4141ec:	mov    DWORD PTR [ebp-0x14],ecx
  4141ef:	or     DWORD PTR ds:0x42e70f,ecx
  4141f5:	mov    eax,DWORD PTR [ebp-0x28]
  4141f8:	and    DWORD PTR ds:0x42fcdd,0x0
  414202:	mov    ecx,DWORD PTR ds:0x42fcdd
  414208:	inc    ecx
  414209:	mov    DWORD PTR ds:0x42fcdd,ecx
  41420f:	cmp    DWORD PTR ds:0x42fcdd,0xc
  414216:	jne    0x41423b
  41421c:	push   DWORD PTR [ebp-0x18]
  41421f:	push   DWORD PTR [ebp-0x10]
  414222:	push   0x25b2
  414227:	push   DWORD PTR [ebp-0x10]
  41422a:	push   0x5d78
  41422f:	push   DWORD PTR [ebp-0x24]
  414232:	push   DWORD PTR [ebp-0x10]
  414235:	call   DWORD PTR ds:0x42e573
  41423b:	cmp    DWORD PTR ds:0x42fcdd,0xb
  414242:	jne    0x414257
  414248:	xor    ecx,ecx
  41424a:	add    ecx,DWORD PTR ds:0x42fcdd
  414250:	inc    ecx
  414251:	mov    DWORD PTR ds:0x42fcdd,ecx
  414257:	cmp    DWORD PTR ds:0x42fcdd,0x14
  41425e:	jb     0x414202
  414264:	mov    ecx,DWORD PTR [ebp+0x8]
  414267:	add    ecx,DWORD PTR [eax+edi*4]
  41426a:	lea    eax,[ebp-0x8]
  41426d:	mov    DWORD PTR [ebp-0x30],ecx
  414270:	push   eax
  414271:	jmp    0x414555
  414276:	add    ebx,0xffffff97
  414279:	xor    eax,0x71a17157
  41427e:	inc    edx
  41427f:	cld    
  414280:	xchg   ebx,eax
  414281:	loop   0x4142eb
  414283:	ret    
  414284:	dec    esp
  414285:	aaa    
  414286:	xor    BYTE PTR [ebx+0x70],0x70
  41428a:	mov    ecx,0x670707e
  41428f:	popa   
  414290:	popf   
  414291:	int    0xa8
  414293:	push   ebp
  414294:	adc    al,0x89
  414296:	mov    dh,0xd6
  414298:	jae    0x4142d8
  41429a:	jmp    0xfec7814d
  41429f:	(bad)  
  4142a0:	pop    esi
  4142a1:	hlt    
  4142a2:	mov    ebx,0x24c22f40
  4142a7:	out    0xf8,eax
  4142a9:	lock pop esi
  4142ab:	push   esi
  4142ac:	adc    eax,DWORD PTR [edx]
  4142ae:	call   0xbabf8ca2
  4142b3:	push   eax
  4142b4:	cwde   
  4142b5:	pop    eax
  4142b6:	mov    bh,0x26
  4142b8:	mov    al,ds:0xbd1beba6
  4142bd:	pop    edi
  4142be:	xlat   BYTE PTR ds:[ebx]
  4142bf:	cdq    
  4142c0:	leave  
  4142c1:	in     eax,dx
  4142c2:	jg     0x41428a
  4142c4:	and    eax,ebp
  4142c6:	and    ebx,esi
  4142c8:	cwde   
  4142c9:	or     DWORD PTR [edi-0x8],ebp
  4142cc:	mov    cl,0x1c
  4142ce:	push   ecx
  4142cf:	jo     0x414269
  4142d1:	mov    ch,0x46
  4142d3:	and    ch,ch
  4142d5:	dec    esp
  4142d6:	dec    edx
  4142d7:	imul   ebp,DWORD PTR [eax+edi*1],0x463b996b
  4142de:	pop    ebp
  4142df:	push   edi
  4142e0:	cmp    DWORD PTR [esi-0x54],eax
  4142e3:	bswap  ecx
  4142e5:	sbb    DWORD PTR [edi+0x48b493fb],esp
  4142eb:	lds    ebp,FWORD PTR [ecx+0x2b]
  4142ee:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4142f0:	xchg   ecx,eax
  4142f1:	fisttp QWORD PTR [esi+0x2a3b9b35]
  4142f7:	fcmovu st,st(2)
  4142f9:	add    eax,0x1bac7387
  4142fe:	hlt    
  4142ff:	xor    BYTE PTR [edx+0x5ce3c244],ch
  414305:	icebp  
  414306:	adc    ebp,ecx
  414308:	hlt    
  414309:	sub    DWORD PTR [ecx+eiz*1+0x77],ecx
  41430d:	mov    BYTE PTR [esi],ah
  41430f:	inc    esp
  414310:	(bad)  
  414311:	cmc    
  414312:	repz fiadd WORD PTR [esi+edi*2]
  414316:	cmp    ch,BYTE PTR [eax+0x48388b50]
  41431c:	dec    edx
  41431d:	add    al,0xdc
  41431f:	push   eax
  414320:	shl    DWORD PTR [edx],cl
  414322:	ja     0x414394
  414324:	push   0x750b2837
  414329:	ins    BYTE PTR es:[edi],dx
  41432a:	xchg   ecx,eax
  41432b:	mov    al,0x9f
  41432d:	int    0x85
  41432f:	js     0x414395
  414331:	(bad)  
  414332:	popf   
  414333:	sub    bh,BYTE PTR [ebx+0x67]
  414336:	jo     0x41433c
  414338:	aas    
  414339:	jbe    0x4143ac
  41433b:	das    
  41433c:	mov    ds:0x88ffb0ba,eax
  414341:	jbe    0x4142e5
  414343:	mov    ecx,0xb217129b
  414348:	sbb    al,0xc9
  41434a:	adc    BYTE PTR [esi-0x1d],ch
  41434d:	or     BYTE PTR [edi+0x67bdc045],dl
  414353:	adc    esi,DWORD PTR [ebx-0x6d594469]
  414359:	or     dl,dl
  41435b:	loop   0x414366
  41435d:	cmp    esi,DWORD PTR [ebx]
  41435f:	std    
  414360:	push   ebp
  414361:	std    
  414362:	push   ds
  414363:	pop    eax
  414364:	data16 je 0x41431e
  414367:	inc    ebx
  414368:	fnstsw WORD PTR [edi]
  41436a:	rol    edi,0xea
  41436d:	xchg   BYTE PTR [esp+ebp*8],cl
  414370:	xchg   ebp,eax
  414371:	in     al,0x56
  414373:	xchg   esi,eax
  414374:	mov    eax,ds:0x318ab30a
  414379:	add    BYTE PTR [ecx+0x762a31d4],dl
  41437f:	out    dx,al
  414380:	adc    DWORD PTR [edx+0x6eef25a4],ecx
  414386:	(bad)  
  414387:	or     DWORD PTR [ecx-0x66fe76fe],esp
  41438d:	and    DWORD PTR [ebx+eiz*8+0x72bcd2cb],esi
  414394:	addr16 dec ecx
  414396:	mov    dl,0x1c
  414398:	add    esi,DWORD PTR [esi]
  41439a:	leave  
  41439b:	dec    ebp
  41439c:	fmul   DWORD PTR [eax]
  41439e:	cwde   
  41439f:	in     al,0x7c
  4143a1:	mov    BYTE PTR [eax+0x4],bh
  4143a4:	or     al,BYTE PTR [ebx+0xb037cd3]
  4143aa:	add    DWORD PTR [esi-0x1561bd26],esi
  4143b0:	push   ebp
  4143b1:	aam    0x94
  4143b3:	mov    ds:0xc6d05e15,eax
  4143b8:	xor    eax,0x8ac4a09d
  4143bd:	bound  edi,QWORD PTR [ecx+0x6]
  4143c0:	pop    edi
  4143c1:	pop    ebp
  4143c2:	(bad)  
  4143c4:	or     ch,BYTE PTR [edi+0x6896edda]
  4143ca:	mov    al,bl
  4143cc:	shl    BYTE PTR [esi+0x16],0xf0
  4143d0:	daa    
  4143d1:	push   ds
  4143d2:	ja     0x4143b4
  4143d4:	pop    ss
  4143d5:	fstp   st(0)
  4143d7:	fst    DWORD PTR [edi]
  4143d9:	mov    gs,WORD PTR [ebp-0x6b2c105]
  4143df:	pop    edx
  4143e0:	aas    
  4143e1:	cmp    al,0x19
  4143e3:	xchg   esp,eax
  4143e4:	ror    DWORD PTR [ecx],0x63
  4143e7:	icebp  
  4143e8:	(bad)  
  4143e9:	xor    ebp,ebx
  4143eb:	lahf   
  4143ec:	pop    ds
  4143ed:	cmp    ebp,DWORD PTR [ebx]
  4143ef:	je     0x4143cf
  4143f1:	fdivr  DWORD PTR [edi]
  4143f3:	mov    esi,eax
  4143f5:	retf   
  4143f6:	pop    ecx
  4143f7:	or     DWORD PTR [ecx-0x5d087983],ebp
  4143fd:	imul   edi,eax,0x7f
  414400:	push   esp
  414401:	fbstp  TBYTE PTR [edx]
  414403:	jg     0x4143f3
  414405:	sbb    eax,0xb4d6bee3
  41440a:	jmp    0x3f76:0xeb03cd75
  414411:	sub    DWORD PTR [eax+0x71],eax
  414414:	inc    BYTE PTR [edi]
  414416:	mov    ebp,0x68e6461
  41441b:	test   edx,edi
  41441d:	dec    eax
  41441e:	mov    WORD PTR [esp+eax*8],fs
  414421:	mov    ds:0xc300f115,eax
  414426:	jb     0x414475
  414428:	int3   
  414429:	dec    ax
  41442b:	adc    DWORD PTR [ebx],ebp
  41442d:	sbb    dh,BYTE PTR [eax]
  41442f:	pop    edx
  414430:	dec    ebp
  414431:	xor    bl,BYTE PTR cs:[ecx+0x15cee33]
  414438:	fwait
  414439:	jnp    0x414456
  41443b:	adc    BYTE PTR [eax],al
  41443d:	jb     0x41443d
  41443f:	std    
  414440:	pop    ds
  414441:	call   0xac39:0x830552e3
  414448:	sbb    eax,0xd3ff4852
  41444d:	imul   ebx,DWORD PTR [ebp-0x3a3c1890],0x44d772e5
  414457:	test   eax,0xa4e6d0b1
  41445c:	adc    eax,0xd6644077
  414461:	call   0x1e1f2305
  414466:	mov    cl,0xb8
  414468:	popa   
  414469:	or     DWORD PTR [edi],0xffffff80
  41446c:	fld    st(2)
  41446e:	clc    
  41446f:	pop    eax
  414470:	pusha  
  414471:	(bad)  
  414472:	repnz or eax,0x7a2442a5
  414478:	outs   dx,DWORD PTR ds:[esi]
  414479:	mov    dh,0xca
  41447b:	ja     0x414428
  41447d:	idiv   DWORD PTR [esi]
  41447f:	jne    0x414416
  414481:	int    0xfe
  414483:	aaa    
  414484:	fstp   DWORD PTR [ecx+0x1c]
  414487:	jecxz  0x414444
  414489:	or     edi,DWORD PTR ss:[ebp+ecx*8-0x1e]
  41448e:	aaa    
  41448f:	das    
  414490:	cmp    BYTE PTR [ebx-0x1e],bl
  414493:	mov    ebp,0x3fe065fa
  414498:	outs   dx,BYTE PTR ds:[esi]
  414499:	cmp    ebx,eax
  41449b:	inc    ecx
  41449c:	mov    dh,0xd6
  41449e:	push   cs
  41449f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4144a0:	dec    ecx
  4144a1:	pop    ebx
  4144a2:	test   BYTE PTR [ecx],ah
  4144a4:	add    ebx,esp
  4144a6:	lds    eax,FWORD PTR [edx+0x77]
  4144a9:	imul   ecx,DWORD PTR [ecx-0x56ccb473],0x39
  4144b0:	lock lods eax,DWORD PTR ss:[esi]
  4144b3:	stos   DWORD PTR es:[edi],eax
  4144b4:	mov    ebp,0xa1d93ec8
  4144b9:	lods   eax,DWORD PTR ds:[esi]
  4144ba:	cmp    DWORD PTR [ebx+0x6b2cf584],esi
  4144c0:	enter  0x1101,0x55
  4144c4:	sti    
  4144c5:	imul   edx,DWORD PTR [ebx-0x47],0xffffff82
  4144c9:	xor    DWORD PTR [edx],ebx
  4144cb:	mov    ds:0x61afdbc4,eax
  4144d0:	sbb    DWORD PTR ds:0x592603e7,ebx
  4144d6:	add    BYTE PTR [edx-0x58],bh
  4144d9:	ins    BYTE PTR es:[edi],dx
  4144da:	xchg   DWORD PTR [edi+0x3fff580b],ebx
  4144e0:	add    BYTE PTR [ebp+0x27],dl
  4144e3:	mov    bl,0x62
  4144e5:	lahf   
  4144e6:	jmp    0x41448d
  4144e8:	iret   
  4144e9:	loop   0x414523
  4144eb:	cmp    eax,ebp
  4144ed:	mov    ds,WORD PTR [esp+edx*8]
  4144f0:	pop    edx
  4144f1:	out    0x7f,eax
  4144f3:	fbld   TBYTE PTR [ebx+0x34]
  4144f6:	sbb    BYTE PTR [eax+ebx*4-0x12],cl
  4144fa:	out    dx,al
  4144fb:	and    eax,0xd057e384
  414500:	xor    eax,DWORD PTR [edi+0x4e8f559f]
  414506:	popa   
  414507:	outs   dx,BYTE PTR ds:[esi]
  414508:	popa   
  414509:	(bad)  
  41450a:	adc    edi,eax
  41450c:	mov    dh,0xa8
  41450e:	xchg   edx,eax
  41450f:	mov    dh,0x8d
  414511:	repnz das 
  414513:	call   0x756dc61f
  414518:	pop    ebp
  41451a:	mov    WORD PTR [eax],ss
  41451c:	mov    ds:0xed9c735,eax
  414521:	iret   
  414522:	xchg   esi,eax
  414523:	xchg   ebp,eax
  414524:	mov    bl,0x0
  414526:	int3   
  414527:	mov    esi,0x98f7737e
  41452c:	mov    ebx,0xad022669
  414531:	add    al,0x67
  414533:	pop    ecx
  414534:	lods   al,BYTE PTR ds:[esi]
  414535:	mov    ds:0x94a65f0b,eax
  41453a:	ja     0x41457d
  41453c:	pop    eax
  41453d:	cwde   
  41453e:	lock pop ebx
  414540:	rol    DWORD PTR [edx],1
  414542:	jb     0x4145b3
  414544:	outs   dx,DWORD PTR ds:[esi]
  414545:	es mov bh,0xda
  414548:	cmp    dl,BYTE PTR [ecx+0x170dd3ea]
  41454e:	ja     0x41450a
  414550:	mov    cl,0x16
  414552:	sub    ch,dh
  414554:	cmp    bh,0x75
  414557:	sar    bh,1
  414559:	jne    0x414567
  41455b:	call   0x4036c0
  414560:	mov    eax,DWORD PTR [ebp-0x4]
  414563:	jmp    0x414847
  414568:	ret    
  414569:	sbb    al,0xfd
  41456b:	sub    BYTE PTR [ebp-0x4f],ah
  41456e:	jno    0x41455b
  414570:	pop    ebx
  414571:	or     eax,0x5731beb4
  414576:	shl    DWORD PTR [eax],0xc9
  414579:	jo     0x4145fa
  41457b:	jo     0x414536
  41457d:	jle    0x4145ef
  41457f:	jo     0x4145fc
  414581:	inc    edx
  414582:	pop    edx
  414583:	sbb    bl,bh
  414585:	sbb    DWORD PTR [ecx],eax
  414587:	mov    esp,0xaf3916cd
  41458c:	xchg   edi,eax
  41458d:	xchg   edi,eax
  41458e:	inc    eax
  41458f:	dec    ecx
  414590:	jne    0x41452a
  414592:	mov    edi,0xa17e7e34
  414597:	popa   
  414598:	jl     0x41455a
  41459a:	in     eax,dx
  41459b:	xor    eax,0x8a23706a
  4145a0:	lds    esp,FWORD PTR [esi]
  4145a2:	es ds aas 
  4145a5:	repnz lock rol BYTE PTR [edi],cl
  4145a9:	mov    DWORD PTR [ecx+0x458e0044],ecx
  4145af:	jg     0x414542
  4145b1:	inc    edx
  4145b2:	popa   
  4145b3:	mov    bh,bh
  4145b5:	dec    ecx
  4145b6:	test   edx,ebx
  4145b8:	aaa    
  4145b9:	mov    edx,ebx
  4145bb:	lods   eax,DWORD PTR ds:[esi]
  4145bc:	cmp    ch,BYTE PTR [esi]
  4145be:	mov    dl,0xd3
  4145c0:	xchg   esp,eax
  4145c1:	out    0x3d,eax
  4145c3:	inc    edx
  4145c4:	push   ebx
  4145c5:	fisubr WORD PTR [ebx+0x4afcad13]
  4145cb:	repz xchg edi,eax
  4145cd:	and    al,0x4c
  4145cf:	fist   WORD PTR [ecx+edi*4-0x356fcf3c]
  4145d6:	arpl   WORD PTR [eax+0x3490e4e7],bp
  4145dc:	dec    esi
  4145dd:	or     bh,bh
  4145df:	mov    bh,0xb0
  4145e1:	add    DWORD PTR [edi-0x39],eax
  4145e4:	ins    DWORD PTR es:[edi],dx
  4145e5:	pop    cx
  4145e7:	in     eax,dx
  4145e8:	arpl   WORD PTR [ecx],cx
  4145ea:	pop    ss
  4145eb:	out    dx,eax
  4145ec:	es mov eax,0x9dd603f0
  4145f2:	add    edi,DWORD PTR [ecx+esi*8-0x1dff7a78]
  4145f9:	xor    DWORD PTR [edx+0x51],eax
  4145fc:	sbb    DWORD PTR [ebp-0x1c502a68],edi
  414602:	sbb    eax,0x4693ff05
  414607:	in     al,dx
  414608:	mov    esi,eax
  41460a:	fisttp QWORD PTR [ebx+0x65]
  41460d:	sub    DWORD PTR [edi-0x50],esi
  414610:	push   ebp
  414611:	mov    edx,ss
  414613:	aaa    
  414614:	outs   dx,BYTE PTR ds:[esi]
  414615:	(bad)  
  414616:	cmc    
  414617:	aas    
  414618:	mov    ecx,0x47c3acef
  41461d:	mov    ecx,0x2848f69
  414622:	nop
  414623:	inc    esp
  414624:	or     DWORD PTR [eax],esi
  414626:	lods   eax,DWORD PTR ds:[esi]
  414627:	and    al,0x67
  414629:	mov    esi,0x2e44c6c1
  41462e:	pushf  
  41462f:	and    BYTE PTR [ecx-0x4eaaed4a],ah
  414635:	les    esp,FWORD PTR [edi]
  414637:	inc    ebp
  414638:	add    al,0xaf
  41463a:	add    al,0xae
  41463c:	cli    
  41463d:	arpl   WORD PTR ds:[ecx-0x6b],di
  414641:	lea    ebp,[ecx]
  414643:	repnz test DWORD PTR [ebx+edi*4+0x5f],ebx
  414648:	jo     0x414632
  41464a:	adc    esp,ebp
  41464c:	outs   dx,BYTE PTR ds:[esi]
  41464d:	mov    eax,0x7c77ed87
  414652:	xor    ah,bl
  414654:	ja     0x414628
  414656:	dec    ebx
  414657:	fcom   QWORD PTR ds:0xf1bd546c
  41465d:	adc    eax,0xced7009
  414662:	sub    eax,0xf0bc93eb
  414667:	mov    ch,0x24
  414669:	(bad)  
  41466a:	push   esi
  41466b:	jge    0x414620
  41466d:	cld    
  41466e:	dec    ebp
  41466f:	xchg   edi,eax
  414670:	xchg   esp,eax
  414671:	(bad)  
  414672:	adc    ecx,DWORD PTR [ebp+0x19]
  414675:	outs   dx,BYTE PTR ds:[esi]
  414676:	(bad)  
  414677:	(bad)  
  414678:	pop    eax
  414679:	ret    0xa675
  41467c:	aaa    
  41467d:	push   cs
  41467e:	iret   
  41467f:	dec    ebx
  414680:	fucomp st(1)
  414682:	xchg   esi,eax
  414683:	retf   0xa995
  414686:	and    bl,BYTE PTR [eax-0xc8faf3]
  41468c:	out    0x33,eax
  41468e:	lock mov ds:0x8d3d37d0,al
  414694:	ret    0xacfe
  414697:	lea    esp,[ebp+0x6f]
  41469a:	sub    eax,0xa5836c85
  41469f:	fbld   TBYTE PTR [edi]
  4146a1:	loop   0x414639
  4146a3:	pop    es
  4146a4:	test   ah,0x31
  4146a7:	and    BYTE PTR [ecx-0x79],ah
  4146aa:	cld    
  4146ab:	cld    
  4146ac:	push   esp
  4146ae:	mov    esi,0xef731f2d
  4146b3:	dec    edi
  4146b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4146b5:	push   esi
  4146b6:	mov    ebx,fs
  4146b8:	or     dl,BYTE PTR [eax+0x2bdc218f]
  4146be:	cmp    BYTE PTR [edx],al
  4146c0:	xchg   esp,eax
  4146c1:	mov    ah,0x81
  4146c3:	push   ds
  4146c4:	in     eax,dx
  4146c5:	lods   eax,DWORD PTR ds:[esi]
  4146c6:	push   ds
  4146c7:	leave  
  4146c8:	jmp    0x4146e6
  4146ca:	call   0xbb8f:0xf85966fd
  4146d1:	adc    ebx,DWORD PTR [ebp-0x3a]
  4146d4:	cld    
  4146d5:	inc    ebp
  4146d6:	dec    esp
  4146d7:	mov    ebx,0x7e1ee088
  4146dc:	loope  0x4146fd
  4146de:	lock xchg esi,eax
  4146e0:	push   eax
  4146e1:	cmp    DWORD PTR [edi-0x9],edi
  4146e4:	test   eax,0x8e14c8a
  4146e9:	adc    al,0x1
  4146eb:	retf   
  4146ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4146ed:	pop    es
  4146ee:	lds    esi,FWORD PTR [ebx+edx*4+0xa3b299f]
  4146f5:	pop    ebx
  4146f6:	outs   dx,BYTE PTR ds:[esi]
  4146f7:	xchg   edi,eax
  4146f8:	cmp    DWORD PTR [ecx-0x3c43aa79],ebp
  4146fe:	addr16 sub eax,0xccdb788d
  414704:	cmp    al,0x38
  414706:	rcr    BYTE PTR [esi],0x34
  414709:	xor    ebx,DWORD PTR [eax+0x1c418175]
  41470f:	push   ecx
  414710:	mov    bh,0x11
  414712:	std    
  414713:	out    0xda,al
  414715:	retf   
  414716:	mov    dh,0xd0
  414718:	dec    edx
  414719:	xor    esp,edi
  41471b:	mov    ch,0x59
  41471d:	adc    DWORD PTR [edi],edx
  41471f:	jbe    0x4146fd
  414721:	rcr    ebp,1
  414723:	add    ebx,DWORD PTR ds:0xfa063ccf
  414729:	hlt    
  41472a:	into   
  41472b:	add    cl,BYTE PTR [ecx]
  41472d:	mov    dh,0xe9
  41472f:	cli    
  414730:	rcl    DWORD PTR [ebx-0x3],cl
  414733:	ret    0x1f06
  414736:	xchg   esi,eax
  414737:	in     al,dx
  414738:	ds mov ebp,0x1ef66010
  41473e:	outs   dx,DWORD PTR ds:[esi]
  41473f:	xor    BYTE PTR [ebx-0x1a],0xe8
  414743:	addr16 hlt 
  414745:	xchg   edx,eax
  414746:	cmc    
  414747:	mov    al,ds:0xcc8d9833
  41474c:	jle    0x414748
  41474e:	js     0x4146d8
  414750:	xlat   BYTE PTR ds:[ebx]
  414751:	leave  
  414752:	cmp    bh,0x77
  414755:	jl     0x414797
  414757:	mov    al,0x46
  414759:	in     eax,dx
  41475a:	sbb    al,0x40
  41475c:	add    DWORD PTR [ecx],edi
  41475e:	and    edi,edx
  414760:	jge    0x4147a2
  414762:	es aad 0xb6
  414765:	or     DWORD PTR [esp+edx*8+0x176d2c9a],esp
  41476c:	arpl   WORD PTR [ecx-0x6b],bp
  41476f:	jb     0x4146f8
  414771:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414772:	psubusw mm2,QWORD PTR [esp+ebx*8-0x4]
  414777:	cli    
  414778:	xchg   edx,eax
  414779:	ins    DWORD PTR es:[edi],dx
  41477a:	cmp    DWORD PTR [esi],esp
  41477c:	xor    DWORD PTR [eax-0x6f4e6a4e],ebx
  414782:	sahf   
  414783:	add    esi,edi
  414785:	out    0x27,eax
  414787:	push   cs
  414788:	pop    ss
  414789:	xchg   esp,eax
  41478a:	and    al,0xe0
  41478c:	pop    ds
  41478d:	xor    eax,0xb80610fb
  414792:	(bad)  
  414793:	imul   edi,esi,0xffffffa3
  414796:	stc    
  414797:	and    DWORD PTR [ebx+0x273b2db8],edi
  41479d:	mov    al,ds:0xf134840b
  4147a2:	jmp    0xcf31:0x4fdec1a
  4147a9:	xchg   esi,eax
  4147aa:	mov    eax,0x1d23db81
  4147af:	test   BYTE PTR [ebp+0x4b172b46],0x5f
  4147b6:	push   ebp
  4147b7:	leave  
  4147b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4147b9:	dec    esp
  4147ba:	or     BYTE PTR [ecx+ebp*2-0x16],bl
  4147be:	arpl   WORD PTR ds:0xfbe104fd,ax
  4147c4:	retf   
  4147c5:	(bad)
  4147c8:	xchg   esp,eax
  4147c9:	jg     0x41483a
  4147cb:	shl    DWORD PTR [ecx-0x54a454e7],0x67
  4147d2:	clc    
  4147d3:	inc    esi
  4147d4:	lods   eax,DWORD PTR ds:[esi]
  4147d5:	inc    esp
  4147d6:	and    ch,BYTE PTR [esi+ebx*8-0x7cf9ab20]
  4147dd:	pop    edi
  4147de:	adc    BYTE PTR [esi+0x3867faea],bh
  4147e4:	pop    ebx
  4147e5:	ret    0x973c
  4147e8:	cmp    eax,ecx
  4147ea:	sub    DWORD PTR [edi+edx*1+0x46],0xc91c1b5b
  4147f2:	xchg   esi,eax
  4147f3:	mov    DWORD PTR fs:[ebx-0x7b9beaa2],edi
  4147fa:	push   eax
  4147fb:	push   esp
  4147fc:	int    0xe2
  4147fe:	out    dx,al
  4147ff:	or     esi,esp
  414801:	or     dh,BYTE PTR [edx]
  414803:	loope  0x4147a1
  414805:	add    edi,0x41837341
  41480b:	test   eax,0x2eb8abac
  414810:	mul    DWORD PTR [ebx+0x72]
  414813:	cld    
  414814:	out    0x1e,eax
  414816:	adc    al,0x9a
  414818:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414819:	jmp    0xf193:0xd0fdba18
  414820:	mov    bh,dl
  414822:	add    dh,0x94
  414825:	push   ebx
  414826:	data16 and bh,BYTE PTR gs:[esp+edi*8-0x26]
  41482c:	dec    esi
  41482d:	push   ds
  41482e:	xor    BYTE PTR [edi-0x47334563],cl
  414834:	sbb    al,0xaf
  414836:	add    ch,BYTE PTR [edx+0x2]
  414839:	jg     0x41487a
  41483b:	push   eax
  41483c:	paddw  mm3,mm5
  41483f:	call   0xd15a:0xb162d837
  414846:	mov    cx,WORD PTR [ebp-0x8]
  41484a:	xor    eax,0x7510855
  41484f:	jmp    0x414b33
  414854:	add    eax,0xd5abd630
  414859:	mov    cl,0x61
  41485b:	jb     0x41489c
  41485d:	jge    0x41481b
  41485f:	jge    0x4148c3
  414861:	or     esi,esp
  414863:	stos   DWORD PTR es:[edi],eax
  414864:	adc    bh,BYTE PTR [ebp+0x7f]
  414867:	jo     0x414822
  414869:	jle    0x4148db
  41486b:	jo     0x4148d8
  41486d:	add    al,0xd9
  41486f:	sbb    eax,0xdbc3436b
  414874:	out    dx,eax
  414875:	into   
  414876:	dec    esp
  414877:	jnp    0x414852
  414879:	push   cs
  41487a:	pop    ss
  41487b:	push   ss
  41487c:	push   ecx
  41487d:	cwde   
  41487e:	sbb    DWORD PTR [esi-0x4df5fb8f],esi
  414884:	pop    ebx
  414885:	inc    ebp
  414886:	or     BYTE PTR [edi+0x2c],dl
  414889:	pop    ebx
  41488a:	sbb    DWORD PTR [esi+0x4],edi
  41488d:	xor    DWORD PTR [esi+0x7810713e],ebx
  414893:	pusha  
  414894:	push   edi
  414895:	inc    eax
  414896:	outs   dx,DWORD PTR ds:[esi]
  414897:	in     eax,dx
  414898:	rol    BYTE PTR [ebx-0x1],1
  41489b:	sbb    al,BYTE PTR [ebx+0x481a6e05]
  4148a1:	pop    esp
  4148a2:	mov    cs,WORD PTR [eax+0x24]
  4148a5:	sbb    DWORD PTR [ebp+0x545d165f],esi
  4148ab:	pop    ebx
  4148ac:	jl     0x4148c2
  4148ae:	fisub  WORD PTR [ebx+eiz*4+0xeacfced]
  4148b5:	dec    eax
  4148b6:	sti    
  4148b7:	sub    BYTE PTR [edx+ebx*4+0x6e],al
  4148bb:	mov    ch,0xf4
  4148bd:	unpckhps xmm1,xmm4
  4148c0:	cmp    eax,DWORD PTR [esi]
  4148c2:	in     eax,0x17
  4148c4:	sbb    al,0x5f
  4148c6:	gs pop ds
  4148c8:	inc    esp
  4148c9:	cmp    eax,0x7c9a19b6
  4148ce:	test   eax,0x3049e55d
  4148d3:	push   ds
  4148d4:	push   ebp
  4148d5:	push   ebx
  4148d6:	sar    DWORD PTR [edx+eax*4],cl
  4148d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4148da:	sub    edi,edi
  4148dc:	bnd call 0x35666937
  4148e2:	repnz push ss
  4148e4:	dec    esp
  4148e5:	test   DWORD PTR [eax+0xc700aa4],ecx
  4148eb:	test   edx,ecx
  4148ed:	mov    dh,BYTE PTR [edi-0x6324d016]
  4148f3:	pop    edx
  4148f4:	loopne 0x4148ef
  4148f6:	ret    0x1c4f
  4148f9:	mov    edx,0xc6167dfd
  4148fe:	maskmovq mm1,(bad)
  4148ff:	test   DWORD PTR ds:0x671b14d0,0x3a766f20
  414909:	or     al,0x18
  41490b:	jg     0x4148d5
  41490d:	add    al,0xf0
  41490f:	ja     0x4148ba
  414911:	xor    eax,0x5ed0268f
  414916:	lods   eax,DWORD PTR ds:[esi]
  414917:	mov    ds:0xc4ba3d2b,al
  41491c:	fdivp  st(1),st
  41491e:	sub    al,0x39
  414920:	not    BYTE PTR [ecx+0x74]
  414923:	out    0xc7,eax
  414925:	mov    dh,al
  414927:	jno    0x414923
  414929:	or     dh,BYTE PTR [ecx]
  41492b:	mov    bl,0x89
  41492d:	inc    eax
  41492e:	sub    ch,cl
  414930:	mov    ah,0xb0
  414932:	mov    esp,eax
  414934:	fstp   TBYTE PTR [edx+0x9]
  414937:	jmp    0x414911
  414939:	push   0xf7816262
  41493e:	cmp    DWORD PTR [eax-0x17],0xffffffdb
  414942:	inc    edi
  414943:	(bad)  
  414945:	lock cmp edi,edx
  414948:	inc    edi
  414949:	mov    ?,WORD PTR ds:0x35488708
  41494f:	retf   
  414950:	push   ecx
  414951:	xor    eax,DWORD PTR [esi]
  414953:	pop    ebp
  414954:	push   es
  414955:	aam    0x5a
  414957:	rcl    BYTE PTR [ecx],cl
  414959:	clc    
  41495a:	dec    eax
  41495b:	popf   
  41495c:	repnz push ebx
  41495e:	in     eax,dx
  41495f:	dec    edx
  414960:	xlat   BYTE PTR ds:[ebx]
  414961:	aas    
  414962:	(bad)  
  414963:	sbb    eax,0xece48615
  414968:	jno    0x414923
  41496a:	xchg   esp,eax
  41496b:	cmp    BYTE PTR [ebp+0x1002161],dl
  414971:	dec    edx
  414972:	scas   al,BYTE PTR es:[edi]
  414973:	mov    eax,0xe5b46660
  414978:	dec    ecx
  414979:	cmc    
  41497a:	mov    esp,0xe450a43d
  41497f:	sbb    ebx,edi
  414981:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414982:	mov    ah,0x32
  414984:	push   ss
  414985:	test   eax,0x6a9b7afd
  41498a:	fs sbb al,0x5
  41498d:	push   edx
  41498e:	shl    DWORD PTR [edi],cl
  414990:	jmp    0x414987
  414992:	sub    al,0x11
  414994:	test   bh,al
  414996:	xlat   BYTE PTR ds:[ebx]
  414997:	mov    cl,0x5a
  414999:	call   0x4d8d:0xea51176b
  4149a0:	test   eax,0x2eb3e37d
  4149a5:	xor    al,0xf8
  4149a7:	sub    al,0x3d
  4149a9:	ins    DWORD PTR es:[edi],dx
  4149aa:	and    ah,BYTE PTR [esi-0x4d]
  4149ad:	push   ecx
  4149ae:	cmp    esp,DWORD PTR [eax+0x4221f3ee]
  4149b4:	scas   al,BYTE PTR es:[edi]
  4149b5:	sbb    edx,edi
  4149b7:	dec    esp
  4149b8:	(bad)  
  4149b9:	push   esp
  4149ba:	scas   al,BYTE PTR es:[edi]
  4149bb:	bound  edi,QWORD PTR [ebp-0x34ede36b]
  4149c1:	jnp    0x41495e
  4149c3:	add    eax,0xae2ae52
  4149c8:	jg     0x414a18
  4149ca:	test   eax,0x96fc5f2
  4149cf:	jns    0x41498c
  4149d1:	(bad)  
  4149d2:	scas   al,BYTE PTR es:[edi]
  4149d3:	push   es
  4149d4:	or     BYTE PTR [eax+0x4b],bl
  4149d7:	mov    edx,0x563e73fc
  4149dd:	push   ecx
  4149de:	jmp    0xe0e0eb3a
  4149e3:	push   ecx
  4149e4:	arpl   cx,dx
  4149e6:	retf   
  4149e7:	ror    BYTE PTR [ebp-0x7a],cl
  4149ea:	stc    
  4149eb:	sub    eax,0xe375713
  4149f0:	ja     0x414a46
  4149f2:	nop
  4149f3:	in     al,0x2
  4149f5:	dec    edi
  4149f6:	jl     0x414a5b
  4149f8:	sbb    eax,esi
  4149fa:	adc    bl,bh
  4149fc:	mov    dh,0x25
  4149fe:	or     ebp,edi
  414a00:	cmp    BYTE PTR [esi-0x77],al
  414a03:	mov    edi,0x96b6fd3d
  414a08:	dec    BYTE PTR [ebp-0x5e]
  414a0b:	rcl    WORD PTR [esi+0x3e],cl
  414a0f:	test   eax,0x6338dd13
  414a14:	xor    al,0xb7
  414a16:	mov    ecx,0x319cb480
  414a1b:	jle    0x414a3c
  414a1d:	jp     0x4149cc
  414a1f:	cld    
  414a20:	and    eax,0xd69822ba
  414a25:	mov    al,0x2a
  414a27:	adc    DWORD PTR [ebp-0x6c],ebp
  414a2a:	fsub   DWORD PTR [ebx-0xc]
  414a2d:	add    eax,0x87b7118e
  414a32:	int3   
  414a33:	add    dh,BYTE PTR [ecx+0x480ed2c3]
  414a39:	test   BYTE PTR [edx+0x1edf311],cl
  414a3f:	call   0x5773:0x70156be2
  414a46:	inc    edx
  414a47:	(bad)  
  414a48:	jo     0x414a17
  414a4a:	inc    ecx
  414a4b:	sub    dh,al
  414a4d:	xchg   edx,eax
  414a4e:	icebp  
  414a4f:	cmp    ah,ch
  414a51:	jmp    0x33a53123
  414a56:	jmp    0x414aab
  414a58:	hlt    
  414a59:	dec    edi
  414a5a:	or     BYTE PTR [esi],al
  414a5c:	addr16 mov bl,0x1e
  414a5f:	shl    DWORD PTR [eax+0x5de71911],cl
  414a65:	aad    0xf4
  414a67:	xchg   DWORD PTR [edx+ecx*4+0xcefaa92],edi
  414a6e:	push   ebx
  414a6f:	dec    ecx
  414a70:	lds    esi,FWORD PTR [ecx]
  414a72:	sub    edx,edx
  414a74:	retf   0x220a
  414a77:	push   0x628ea1f7
  414a7c:	mov    bl,0xec
  414a7e:	pop    ebx
  414a7f:	dec    edx
  414a80:	jne    0x414af1
  414a82:	dec    ecx
  414a83:	mov    ch,0xf6
  414a85:	push   0x3b
  414a87:	gs repz pop ds
  414a8a:	in     al,dx
  414a8b:	sub    al,0x8e
  414a8d:	and    bl,BYTE PTR [ebp-0x25c21b20]
  414a93:	xchg   ecx,eax
  414a94:	inc    ecx
  414a95:	pop    ss
  414a96:	bound  ecx,QWORD PTR gs:[ebx]
  414a99:	sub    eax,0x1d6f7b6c
  414a9e:	clc    
  414a9f:	push   cs
  414aa0:	jmp    0xfddb:0x68275764
  414aa7:	aas    
  414aa8:	adc    edx,edi
  414aaa:	scas   al,BYTE PTR es:[edi]
  414aab:	adc    eax,0x7ec93fe7
  414ab0:	adc    BYTE PTR [esp+edi*8+0x2be8bc7f],dh
  414ab7:	add    cl,al
  414ab9:	call   0x6aed3dd6
  414abe:	arpl   WORD PTR [ecx],bp
  414ac0:	sbb    ah,cl
  414ac2:	(bad)  
  414ac3:	pop    ebp
  414ac4:	jp     0x414a4c
  414ac6:	out    dx,eax
  414ac7:	jno    0x414abd
  414ac9:	(bad)  
  414acb:	int    0xc7
  414acd:	outs   dx,DWORD PTR ds:[esi]
  414ace:	jnp    0x414adc
  414ad0:	xor    BYTE PTR [esi],bh
  414ad2:	pop    esp
  414ad3:	xchg   edx,eax
  414ad4:	mov    bh,0xfd
  414ad6:	or     BYTE PTR [esi+eax*8],dh
  414ad9:	mov    esi,0x7c3fc87f
  414ade:	sub    WORD PTR cs:0xacca16e9,dx
  414ae6:	pop    esi
  414ae7:	les    ebp,FWORD PTR [esi+0x65d66f2]
  414aed:	xchg   edx,eax
  414aee:	jge    0x414ab3
  414af0:	lahf   
  414af1:	mov    bl,BYTE PTR [ebp-0x31a5ad9a]
  414af7:	inc    ebx
  414af8:	add    ch,BYTE PTR [esi-0x30]
  414afb:	out    dx,eax
  414afc:	es jb  0x414acc
  414aff:	add    eax,0x11d779a4
  414b04:	int3   
  414b05:	mov    edx,0x236717d2
  414b0a:	add    BYTE PTR [ebp+0x3693a8ba],cl
  414b10:	sub    DWORD PTR [esi-0x33821c0d],ebx
  414b16:	dec    ecx
  414b17:	adc    BYTE PTR ds:0x647eb1bd,0xe7
  414b1e:	mov    eax,ds:0xf51a337
  414b23:	aad    0x59
  414b25:	out    0xe9,al
  414b27:	mov    eax,ds:0x38bd046a
  414b2c:	nop
  414b2d:	mov    al,0xb2
  414b2f:	jl     0x414acb
  414b31:	js     0x414b18
  414b33:	add    eax,ebx
  414b35:	cmp    ecx,eax
  414b37:	jne    0x414b5a
  414b3d:	mov    eax,DWORD PTR [ebp-0x20]
  414b40:	inc    edi
  414b41:	cmp    edi,eax
  414b43:	jb     0x413464
  414b49:	jmp    0x414b6a
  414b4e:	mov    eax,DWORD PTR [ebp-0x4]
  414b51:	xor    eax,esi
  414b53:	add    eax,ebx
  414b55:	jmp    0x417530
  414b5a:	mov    eax,DWORD PTR [ebp-0x2c]
  414b5d:	movzx  eax,WORD PTR [eax+edi*2]
  414b61:	mov    ecx,DWORD PTR [ebp-0x14]
  414b64:	mov    eax,DWORD PTR [ecx+eax*4]
  414b67:	mov    DWORD PTR [ebp+0xc],eax
  414b6a:	mov    eax,DWORD PTR [ebp-0x4]
  414b6d:	mov    ecx,DWORD PTR [ebp-0x8]
  414b70:	xor    eax,0x7510855
  414b75:	add    eax,ebx
  414b77:	cmp    ecx,eax
  414b79:	jne    0x414b8c
  414b7f:	mov    eax,DWORD PTR [ebp-0x4]
  414b82:	xor    eax,0x7510855
  414b87:	jmp    0x414b53
  414b8c:	mov    eax,DWORD PTR [ebp+0xc]
  414b8f:	add    eax,DWORD PTR [ebp+0x8]
  414b92:	mov    DWORD PTR [ebp-0x10],eax
  414b95:	mov    eax,DWORD PTR [ebp-0x1c]
  414b98:	test   eax,eax
  414b9a:	je     0x41638a
  414ba0:	mov    DWORD PTR [ebp-0x24],esi
  414ba3:	push   0xb
  414ba5:	jmp    0x414e89
  414baa:	icebp  
  414bab:	sbb    edi,DWORD PTR [edi-0xe9daa7e]
  414bb1:	imul   edi,edx,0x25
  414bb4:	outs   dx,DWORD PTR ds:[esi]
  414bb5:	stc    
  414bb6:	retf   0x26ba
  414bb9:	xchg   edi,eax
  414bba:	pop    ebx
  414bbb:	jnp    0x414c3c
  414bbd:	jo     0x414b78
  414bbf:	jle    0x414c31
  414bc1:	jo     0x414c33
  414bc3:	push   edi
  414bc4:	push   ebp
  414bc5:	mov    BYTE PTR [edx],bh
  414bc7:	push   edx
  414bc8:	mov    edx,0xe9429fe9
  414bcd:	xchg   esi,eax
  414bce:	arpl   WORD PTR [esi],di
  414bd0:	sbb    esp,DWORD PTR [edi]
  414bd2:	data16 loope 0x414c1f
  414bd5:	sbb    al,0x33
  414bd7:	nop
  414bd8:	arpl   sp,cx
  414bda:	cmp    eax,0xc48edba2
  414bdf:	cmp    eax,0x6fa9fd3b
  414be4:	mov    cl,0x6b
  414be6:	dec    edx
  414be7:	(bad)  
  414be9:	mov    bl,0xeb
  414beb:	stc    
  414bec:	mov    bh,0xa2
  414bee:	push   0x1e845892
  414bf3:	nop
  414bf4:	(bad)  
  414bf5:	mov    ecx,0x2480b0ed
  414bfa:	xchg   esp,eax
  414bfb:	add    DWORD PTR [edi-0x16],0xffffff89
  414bff:	cli    
  414c00:	sub    al,0x14
  414c02:	shl    DWORD PTR [esi-0x18],0x88
  414c06:	test   al,0xf1
  414c08:	push   edx
  414c09:	and    eax,0x5c527aaf
  414c0e:	pop    es
  414c0f:	push   ds
  414c10:	sti    
  414c11:	cmc    
  414c12:	stos   BYTE PTR es:[edi],al
  414c13:	jl     0x414c1a
  414c15:	push   es
  414c16:	mov    edx,0x10a9f834
  414c1b:	dec    edi
  414c1c:	in     al,0xb9
  414c1e:	ret    
  414c1f:	ds sti 
  414c21:	fnstcw WORD PTR [esi+ecx*8+0x4124ff84]
  414c28:	mov    ebp,0x3bd225cc
  414c2d:	mov    cl,0x4b
  414c2f:	push   0x912574c5
  414c34:	mov    al,0x6
  414c36:	push   ecx
  414c37:	mov    bh,0x2e
  414c39:	xor    ebx,DWORD PTR [esi]
  414c3b:	sbb    eax,DWORD PTR [edx*2+0x71218511]
  414c42:	adc    BYTE PTR [edi],0x7c
  414c45:	mov    eax,0xb2ccf856
  414c4a:	jb     0x414c47
  414c4c:	imul   edi,DWORD PTR [edx+0x2cf07db5],0x74d19bab
  414c56:	mov    ebx,0xddc661c5
  414c5b:	inc    ecx
  414c5c:	or     ch,dh
  414c5e:	aas    
  414c5f:	pop    esp
  414c60:	call   0x3c3d:0x1fe14e66
  414c67:	aaa    
  414c68:	ins    DWORD PTR es:[edi],dx
  414c69:	lods   eax,DWORD PTR ds:[esi]
  414c6a:	jge    0x414ca4
  414c6c:	sbb    DWORD PTR [esi],0x18
  414c6f:	mov    ah,0x69
  414c71:	sbb    BYTE PTR [ebx+0x2c3bec31],dh
  414c77:	in     eax,dx
  414c78:	(bad)  
  414c79:	pop    ebp
  414c7a:	dec    ebp
  414c7b:	mov    ah,0xe1
  414c7d:	ins    BYTE PTR es:[edi],dx
  414c7e:	pop    ebx
  414c7f:	inc    edi
  414c80:	or     eax,ebp
  414c82:	clc    
  414c83:	inc    ebx
  414c84:	jge    0x414cc3
  414c86:	sub    bl,bh
  414c88:	ins    BYTE PTR es:[edi],dx
  414c89:	push   esp
  414c8a:	out    dx,eax
  414c8b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414c8c:	nop
  414c8d:	icebp  
  414c8e:	rol    ch,0xd7
  414c91:	xchg   ebx,eax
  414c92:	aad    0x88
  414c94:	sbb    DWORD PTR [eax],ebx
  414c96:	test   bh,bl
  414c98:	adc    DWORD PTR [ebx],0x48
  414c9b:	sub    al,bh
  414c9d:	add    dh,BYTE PTR [edi-0x295014e7]
  414ca3:	adc    BYTE PTR [esi+0x8],dh
  414ca6:	data16 sti 
  414ca8:	pop    ebx
  414ca9:	fdiv   DWORD PTR [esi]
  414cab:	mov    edi,0xbe397888
  414cb0:	iret   
  414cb1:	and    eax,0x7a1408ca
  414cb6:	mov    ah,0x96
  414cb8:	js     0x414c64
  414cba:	pop    ss
  414cbb:	outs   dx,BYTE PTR ds:[esi]
  414cbc:	cmp    BYTE PTR [esi-0x2d1dc9ad],cl
  414cc2:	sbb    ch,BYTE PTR [ecx-0x67e88c45]
  414cc8:	jne    0x414c97
  414cca:	sub    eax,0x6ce41d50
  414ccf:	(bad)  
  414cd0:	js     0x414c7e
  414cd2:	leave  
  414cd3:	jne    0x414d09
  414cd5:	sub    eax,0x6b8bc960
  414cda:	mov    ecx,eax
  414cdc:	pop    ds
  414cdd:	out    dx,eax
  414cde:	cmp    dl,al
  414ce0:	push   0xfffffffa
  414ce2:	pop    edi
  414ce3:	mov    ecx,0x52113080
  414ce8:	sbb    bh,BYTE PTR [ebp-0x616c35b8]
  414cee:	shl    DWORD PTR [esi-0x72f44474],0x10
  414cf5:	ficomp WORD PTR [ebp-0x27]
  414cf8:	hlt    
  414cf9:	dec    eax
  414cfa:	test   eax,0x4bac5d89
  414cff:	jnp    0x414cbc
  414d01:	ds jg  0x414d25
  414d04:	loope  0x414cc0
  414d06:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414d07:	dec    ebx
  414d08:	fisubr DWORD PTR [edi+eiz*1+0x1782c6a0]
  414d0f:	pmaddwd mm1,QWORD PTR [eax+0x21]
  414d13:	ins    DWORD PTR es:[edi],dx
  414d14:	cmp    edx,DWORD PTR fs:[ebx+0x2b]
  414d18:	adc    BYTE PTR [ecx+ecx*8-0x661ac7ed],bh
  414d1f:	sahf   
  414d20:	mov    ah,0xfe
  414d22:	mov    eax,ds:0x993e290a
  414d27:	fxch   st(7)
  414d29:	(bad)
  414d2d:	xchg   ebp,eax
  414d2e:	sub    BYTE PTR [esi+edx*4-0xb],ah
  414d32:	or     esp,ebx
  414d34:	int3   
  414d35:	jle    0x414d7d
  414d37:	xchg   edx,eax
  414d38:	sub    esp,DWORD PTR [eax+0x28]
  414d3b:	or     eax,0x2b3d73fe
  414d40:	(bad)  
  414d41:	xchg   esp,eax
  414d42:	dec    edi
  414d43:	fs nop
  414d45:	mov    ch,0xba
  414d47:	fcom   QWORD PTR [esi]
  414d49:	fnstenv [eax]
  414d4b:	aad    0xd4
  414d4d:	jl     0x414dbe
  414d4f:	imul   ebp,DWORD PTR [eax],0x21
  414d52:	pop    es
  414d53:	out    dx,al
  414d54:	and    eax,0x78d870bd
  414d59:	xchg   ebx,eax
  414d5a:	mov    bl,0xd7
  414d5c:	jge    0x414d85
  414d5e:	leave  
  414d5f:	push   ebx
  414d60:	aad    0x6b
  414d62:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414d63:	ins    BYTE PTR es:[edi],dx
  414d64:	or     DWORD PTR ds:0xf21baf7e,0xffffff97
  414d6b:	cdq    
  414d6c:	jae    0x414dc8
  414d6e:	push   ebx
  414d6f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414d70:	jle    0x414d58
  414d72:	pop    edi
  414d73:	mov    esp,0xaaa76e8a
  414d78:	gs in  eax,0xd1
  414d7b:	nop
  414d7c:	ret    
  414d7d:	add    DWORD PTR [edi+0x44],eax
  414d80:	int    0x35
  414d82:	in     eax,dx
  414d83:	es test eax,0xc01bdb65
  414d89:	cdq    
  414d8a:	adc    al,0xc6
  414d8c:	push   esi
  414d8d:	icebp  
  414d8e:	or     eax,0x71051ab3
  414d93:	repz (bad) 
  414d95:	mov    ebp,0x7da11a97
  414d9a:	mov    eax,0xa116a50
  414d9f:	jg     0x414dce
  414da1:	or     edx,DWORD PTR [edi]
  414da3:	popf   
  414da4:	push   ecx
  414da5:	psubb  mm7,mm5
  414da8:	sub    al,0x84
  414daa:	loopne 0x414e22
  414dac:	mov    BYTE PTR [ebx+0x165c88b],dl
  414db2:	or     al,0x1d
  414db4:	mov    ecx,DWORD PTR [edi]
  414db6:	in     al,dx
  414db7:	add    BYTE PTR [eax+0x56],0xe9
  414dbb:	dec    edx
  414dbc:	scas   eax,DWORD PTR es:[edi]
  414dbd:	ret    0x1612
  414dc0:	adc    edi,DWORD PTR [ebp+0x4897f3b2]
  414dc6:	(bad)
  414dc9:	add    BYTE PTR [esi+0x58050364],bl
  414dcf:	pop    eax
  414dd0:	add    esi,DWORD PTR [edx]
  414dd2:	adc    esp,0x540eacce
  414dd8:	add    esp,esp
  414dda:	inc    edx
  414ddb:	out    0xf,al
  414ddd:	sub    ebp,eax
  414ddf:	xchg   edi,eax
  414de0:	xchg   edx,eax
  414de1:	xchg   ebx,eax
  414de2:	dec    eax
  414de3:	jg     0x414e32
  414de5:	imul   esi,esp,0x431c423b
  414deb:	cld    
  414dec:	mov    ebp,0x5c23070e
  414df1:	mov    ebx,0x97892600
  414df6:	mov    esi,0xe3aefc6
  414dfb:	pop    ebx
  414dfc:	out    dx,al
  414dfd:	xchg   BYTE PTR [edx*4-0x2290c33a],dl
  414e04:	stos   DWORD PTR es:[edi],eax
  414e05:	(bad)  
  414e07:	or     eax,0x69391be8
  414e0c:	jo     0x414db1
  414e0e:	inc    ebp
  414e0f:	mov    edi,0x501c210b
  414e14:	jmp    0xecdf:0xcbefc7fa
  414e1b:	int    0x5f
  414e1d:	mov    edi,0xb428f31d
  414e22:	mov    edi,0x9f3c7319
  414e27:	add    eax,0xdfd4c144
  414e2c:	jl     0x414e47
  414e2e:	mov    bh,0xaa
  414e30:	mov    DWORD PTR [esi+0x4e],ecx
  414e33:	dec    edx
  414e34:	aad    0x42
  414e36:	and    ebx,DWORD PTR [eax+0x73]
  414e39:	inc    esp
  414e3a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414e3b:	lahf   
  414e3c:	sbb    al,0x95
  414e3e:	fcomp  DWORD PTR [edx+0x7a]
  414e41:	add    cl,cl
  414e43:	jl     0x414e41
  414e45:	mov    edx,0xdddd57b6
  414e4a:	je     0x414dfa
  414e4c:	(bad)  
  414e4d:	aas    
  414e4e:	imul   edx,ebx,0x67
  414e51:	or     eax,0x89e1b5da
  414e56:	jmp    FWORD PTR [ecx]
  414e58:	retf   
  414e59:	xor    edi,DWORD PTR es:[eax*1+0x307fd17]
  414e61:	mov    eax,ds:0x2f4627e8
  414e66:	pop    ebx
  414e67:	pop    ds
  414e68:	push   eax
  414e69:	sar    BYTE PTR [edx+0x66],1
  414e6c:	dec    esp
  414e6d:	add    eax,0x1fa1470d
  414e72:	xor    eax,0x4e11898d
  414e77:	sbb    esi,ecx
  414e79:	cld    
  414e7a:	fnstcw WORD PTR [eax-0x6c385662]
  414e80:	adc    esp,edx
  414e82:	xor    eax,0xcceb486d
  414e87:	int3   
  414e88:	mov    esi,0x49056a59
  414e8d:	pop    ebx
  414e8e:	xchg   ebx,ecx
  414e90:	sub    ebx,ecx
  414e92:	xchg   ebx,ecx
  414e94:	dec    ecx
  414e95:	mov    eax,DWORD PTR [ebp-0x1c]
  414e98:	imul   eax,ecx
  414e9b:	jmp    0x41517f
  414ea0:	aas    
  414ea1:	fidivr DWORD PTR [ebp-0x79]
  414ea4:	sbb    DWORD PTR [ebx+0x45],esp
  414ea7:	bound  eax,QWORD PTR [ebp+0x1d]
  414eaa:	sub    al,0x44
  414eac:	fsubrp st(1),st
  414eae:	cmc    
  414eaf:	je     0x414e55
  414eb1:	js     0x414f32
  414eb3:	jo     0x414e6e
  414eb5:	jle    0x414f27
  414eb7:	jo     0x414ed5
  414eb9:	dec    esp
  414eba:	mov    ebx,0xa6e4599c
  414ebf:	daa    
  414ec0:	test   eax,0xcac6f15d
  414ec5:	ja     0x414f33
  414ec7:	mov    eax,0xa209f07d
  414ecc:	rcr    BYTE PTR [edx+0x7bac6179],cl
  414ed2:	jle    0x414ead
  414ed4:	fimul  DWORD PTR [ebx-0x191b7360]
  414eda:	mov    ebx,0x15cd65cd
  414edf:	retf   
  414ee0:	mov    ch,0x15
  414ee2:	in     eax,0x21
  414ee4:	mov    bl,0x34
  414ee6:	xor    esp,ebx
  414ee8:	pop    edi
  414ee9:	pop    ds
  414eea:	xchg   dh,ah
  414eec:	xor    ecx,DWORD PTR [esi-0x2901ec5f]
  414ef2:	sbb    dl,BYTE PTR [ebx-0x58cc9395]
  414ef8:	es ja  0x414f49
  414efb:	ds ss leave 
  414efe:	dec    ecx
  414eff:	sbb    ch,BYTE PTR [eax-0x18439043]
  414f05:	popf   
  414f06:	push   0x5c86094c
  414f0b:	push   es
  414f0c:	cmp    ebp,ebp
  414f0e:	dec    ebp
  414f0f:	jle    0x414f27
  414f11:	adc    cl,BYTE PTR [ecx-0x6ce3b193]
  414f17:	mov    ds:0x21931b2e,eax
  414f1c:	ret    0xe590
  414f1f:	mov    eax,ds:0x1451472f
  414f24:	pushf  
  414f25:	xor    BYTE PTR [edi-0x18],0x8
  414f29:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414f2a:	add    DWORD PTR [edi],edi
  414f2c:	repnz or ah,BYTE PTR [ebx]
  414f2f:	jo     0x414fa8
  414f31:	or     BYTE PTR [esi],0x34
  414f34:	add    BYTE PTR [ebx],ch
  414f36:	outs   dx,DWORD PTR ds:[esi]
  414f37:	and    DWORD PTR [ecx+0x4596ac9d],esp
  414f3d:	pop    ss
  414f3e:	cmp    ebx,DWORD PTR [eax-0x1be5cd4]
  414f44:	push   ebp
  414f45:	pop    ss
  414f46:	dec    DWORD PTR [eax-0x377fcc26]
  414f4c:	fadd   st(0),st
  414f4e:	add    ah,BYTE PTR [edi-0x4d]
  414f51:	aas    
  414f52:	mov    al,ds:0x743eee75
  414f57:	dec    ebx
  414f58:	out    dx,eax
  414f59:	or     DWORD PTR [esi+0x2a],esi
  414f5c:	sub    al,0x33
  414f5e:	mov    ch,0x51
  414f60:	jge    0x414f0f
  414f62:	pop    ebx
  414f63:	mov    WORD PTR [ebp+0x78],?
  414f66:	rcr    DWORD PTR [eax],1
  414f68:	fiadd  DWORD PTR [esi+0x30]
  414f6b:	icebp  
  414f6c:	xchg   ebp,eax
  414f6d:	mov    edx,0xe0f2272f
  414f72:	sbb    BYTE PTR [ebp+0x41],cl
  414f75:	cmp    DWORD PTR [ebx],edi
  414f77:	shl    DWORD PTR [esi-0xb026c8f],1
  414f7d:	scas   al,BYTE PTR es:[edi]
  414f7e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414f7f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414f80:	ins    DWORD PTR es:[edi],dx
  414f81:	mov    al,ds:0x717628aa
  414f86:	mov    dh,0x1a
  414f88:	mov    DWORD PTR [edx+0x6e],esi
  414f8b:	push   esp
  414f8c:	add    esi,DWORD PTR [eax]
  414f8e:	inc    esi
  414f8f:	pop    ebp
  414f90:	pusha  
  414f91:	xor    eax,0x2e7b7c6
  414f96:	ins    BYTE PTR es:[edi],dx
  414f97:	loop   0x414f76
  414f99:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414f9a:	jmp    0x80404b3e
  414f9f:	sahf   
  414fa0:	push   ss
  414fa1:	mov    ebx,0x725c2057
  414fa6:	jno    0x414fcc
  414fa8:	cs lock dec ebp
  414fab:	jno    0x414fc3
  414fad:	retf   0x538a
  414fb0:	jmp    0x414f6b
  414fb2:	mov    bh,0x41
  414fb4:	inc    eax
  414fb5:	shr    DWORD PTR [eax+0x3],cl
  414fb8:	xchg   ebx,eax
  414fb9:	ss into 
  414fbb:	or     al,0x7b
  414fbd:	mov    ds:0x6278a750,al
  414fc2:	add    DWORD PTR [edi-0xe],edx
  414fc5:	cmp    BYTE PTR [ebx+ebp*1+0x3d6666a6],bh
  414fcc:	addr16 xchg esp,eax
  414fce:	jge    0x415040
  414fd0:	pop    ebx
  414fd1:	out    0x7e,al
  414fd3:	mov    ecx,0x4d0cf741
  414fd8:	jmp    0x414fa6
  414fda:	add    edx,DWORD PTR [ecx-0x2c]
  414fdd:	pop    ss
  414fde:	add    al,0xa2
  414fe0:	dec    ebp
  414fe1:	mov    esp,0x5e68e285
  414fe6:	pop    ebp
  414fe7:	(bad)  
  414fe8:	out    dx,al
  414fe9:	sbb    dh,bh
  414feb:	int    0x42
  414fed:	mov    edi,0x765d49b4
  414ff2:	data16 clc 
  414ff4:	popf   
  414ff5:	cmc    
  414ff6:	fcom   QWORD PTR [edi-0x1]
  414ff9:	lahf   
  414ffa:	jns    0x414fd3
  414ffc:	mov    eax,0x41bfade9
  415001:	push   0xab3862d
  415006:	stos   DWORD PTR es:[edi],eax
  415007:	jg     0x414fbf
  415009:	mov    al,0xfe
  41500b:	dec    ebx
  41500c:	loopne 0x415086
  41500e:	mov    eax,ds:0xe4e9b2ee
  415013:	fstp   QWORD PTR [eax]
  415015:	inc    ebp
  415016:	outs   dx,BYTE PTR ds:[esi]
  415017:	jge    0x41507a
  415019:	or     al,0x77
  41501b:	(bad)  
  41501c:	scas   al,BYTE PTR es:[edi]
  41501d:	std    
  41501e:	loope  0x41509f
  415020:	hlt    
  415021:	xor    dl,BYTE PTR [ebx+0x642a2ed0]
  415027:	mov    ds:0x6c494920,al
  41502c:	(bad)  
  41502d:	scas   al,BYTE PTR es:[edi]
  41502e:	add    al,0x3e
  415030:	aaa    
  415031:	xor    ebx,DWORD PTR [ecx-0x6a]
  415034:	and    DWORD PTR ds:0x857ca61a,edi
  41503a:	inc    esi
  41503b:	nop
  41503c:	and    al,0xc0
  41503e:	out    0xb,eax
  415040:	ins    DWORD PTR es:[edi],dx
  415041:	ds pop es
  415043:	xor    DWORD PTR [ecx],ebx
  415045:	sub    eax,0xac4068b6
  41504a:	inc    esp
  41504b:	adc    bl,bh
  41504d:	hlt    
  41504e:	mov    ah,0x10
  415050:	aam    0x43
  415052:	pop    es
  415053:	push   edi
  415054:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415055:	retf   0xfd07
  415058:	shr    esi,1
  41505a:	loopne 0x415049
  41505c:	push   ds
  41505d:	(bad)  
  41505e:	cs js  0x41504c
  415061:	dec    eax
  415062:	mov    ch,0xf3
  415064:	ins    BYTE PTR es:[edi],dx
  415065:	(bad)  
  415066:	xchg   esp,eax
  415067:	lods   eax,DWORD PTR ds:[esi]
  415068:	ins    BYTE PTR es:[edi],dx
  415069:	outs   dx,DWORD PTR ds:[esi]
  41506a:	mov    dh,0x76
  41506c:	fld    QWORD PTR [edi]
  41506e:	in     al,dx
  41506f:	pop    ds
  415070:	cmp    esp,ebx
  415072:	test   DWORD PTR [esi-0x5340bc6],0xb7e6906b
  41507c:	jnp    0x414fff
  41507e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41507f:	xchg   ebp,eax
  415080:	lods   eax,DWORD PTR ds:[esi]
  415081:	push   ds
  415082:	xor    ecx,ebx
  415084:	jp     0x415032
  415086:	outs   dx,BYTE PTR ds:[esi]
  415087:	imul   eax,DWORD PTR [ebx-0xfdc1905],0x70fe25ec
  415091:	bound  esi,QWORD PTR [edx+ebx*2-0x26]
  415095:	test   DWORD PTR [eax+0x40b4b3f],0x1319f95b
  41509f:	fwait
  4150a0:	lahf   
  4150a1:	ds push 0x647caf96
  4150a7:	pop    eax
  4150a8:	ja     0x41502d
  4150aa:	je     0x415034
  4150ac:	fisttp QWORD PTR [edx+edi*2+0x48]
  4150b0:	mov    ds:0x4c957791,al
  4150b5:	jmp    0x4788:0x98a00e28
  4150bc:	fnstcw WORD PTR [edi+0x52438bfd]
  4150c2:	stos   BYTE PTR es:[edi],al
  4150c3:	xchg   DWORD PTR [ecx+eax*4+0x7e25f06b],esp
  4150ca:	pop    ebx
  4150cb:	je     0x415101
  4150cd:	pusha  
  4150ce:	xor    BYTE PTR [ebp+0x1f],cl
  4150d1:	mov    dl,0xdb
  4150d3:	mov    ch,0x89
  4150d5:	out    dx,eax
  4150d6:	pushf  
  4150d7:	loope  0x4150ae
  4150d9:	fnstsw WORD PTR [edx+esi*2]
  4150dc:	cmp    eax,0x78eddda5
  4150e1:	stc    
  4150e2:	xchg   edx,eax
  4150e3:	add    ebp,eax
  4150e5:	and    dl,0xef
  4150e8:	mov    edx,0x73c48ec6
  4150ed:	lds    edi,FWORD PTR [eax]
  4150ef:	fld    TBYTE PTR ds:0x5c702b4a
  4150f5:	lock in al,0xfa
  4150f8:	xor    BYTE PTR [esi+0x75],dl
  4150fb:	pop    edx
  4150fc:	pop    edx
  4150fd:	add    al,0x49
  4150ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415100:	bound  esp,QWORD PTR ds:0x6b5eb2eb
  415106:	add    al,0xa6
  415108:	cmp    bh,BYTE PTR [ebx-0x64]
  41510b:	imul   eax,DWORD PTR [ebx-0x48155f86],0x40922d19
  415115:	pop    esi
  415116:	or     ch,ch
  415118:	push   edx
  415119:	jo     0x415126
  41511b:	out    dx,eax
  41511c:	jo     0x41512f
  41511e:	ficomp DWORD PTR [ebx]
  415120:	xor    DWORD PTR [ebp-0x6ba7a396],esp
  415126:	shr    ebx,cl
  415128:	inc    edx
  415129:	dec    edx
  41512a:	xchg   esi,eax
  41512b:	inc    ebp
  41512c:	mov    bh,0x12
  41512e:	stos   DWORD PTR es:[edi],eax
  41512f:	inc    edx
  415130:	adc    eax,0x6ea53ba5
  415135:	dec    edi
  415136:	das    
  415137:	adc    dl,BYTE PTR [eax-0x34]
  41513a:	mov    al,0xbb
  41513c:	add    DWORD PTR [esi+ebp*4-0x1d],ebx
  415140:	icebp  
  415141:	mov    ebp,ebp
  415143:	push   esp
  415144:	in     eax,dx
  415145:	cmp    BYTE PTR [bp+di],0x31
  415149:	inc    esp
  41514a:	add    DWORD PTR [edx-0x22],0x7f
  41514e:	mov    dh,0x57
  415150:	dec    ecx
  415151:	jge    0x41513b
  415153:	or     al,0xe1
  415155:	(bad)  
  415156:	jl     0x415154
  415158:	int3   
  415159:	daa    
  41515a:	jmp    0x415124
  41515c:	pop    dx
  41515e:	jnp    0x415125
  415160:	jnp    0x415195
  415162:	cwde   
  415163:	fwait
  415164:	loopne 0x4151cc
  415166:	mov    dl,BYTE PTR [edi]
  415168:	xchg   bl,dh
  41516a:	mov    cs,WORD PTR [eax]
  41516c:	xor    BYTE PTR [ecx-0x73],0x1c
  415170:	fdivr  QWORD PTR [ebp+0x41aa53c9]
  415176:	mov    ah,0xd7
  415178:	call   DWORD PTR ss:[esi+0x1852416b]
  41517f:	sub    esp,eax
  415181:	mov    DWORD PTR [ebp-0x24],esp
  415184:	mov    eax,DWORD PTR [ebp-0x4]
  415187:	mov    ecx,0x7510855
  41518c:	xor    eax,ecx
  41518e:	mov    edx,0x32729c
  415193:	jmp    0x415477
  415198:	mov    edi,0x35df28be
  41519d:	jne    0x4151f6
  41519f:	pop    esi
  4151a0:	push   ebx
  4151a2:	(bad)  
  4151a3:	fst    DWORD PTR [ebx-0xc]
  4151a6:	loop   0x4151ee
  4151a8:	in     eax,dx
  4151a9:	add    eax,0x7eb9707f
  4151ae:	jo     0x415220
  4151b0:	jp     0x4151b1
  4151b2:	(bad)  
  4151b3:	mov    ebp,edi
  4151b5:	mov    WORD PTR ds:0x23a38594,?
  4151bb:	cmc    
  4151bc:	jmp    0xfdfd:0x3648235
  4151c3:	xchg   bl,ah
  4151c5:	jmp    0x41521c
  4151c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4151c8:	xchg   BYTE PTR fs:[edx],dh
  4151cb:	aas    
  4151cc:	jmp    0xab6:0xe2c6c552
  4151d3:	(bad)  
  4151d4:	jmp    0x62d38ac4
  4151d9:	or     al,0x79
  4151db:	fld    TBYTE PTR [eax+0x2c0bc0c3]
  4151e1:	cmp    eax,0x372005a9
  4151e6:	jmp    0x6e2061bf
  4151eb:	jo     0x415180
  4151ed:	sub    DWORD PTR [ecx+0x59],ebp
  4151f0:	sar    dh,cl
  4151f2:	stc    
  4151f3:	push   edx
  4151f4:	sti    
  4151f5:	xor    eax,0xc5d2f5b9
  4151fa:	add    ah,BYTE PTR [edi]
  4151fc:	jnp    0x4151cb
  4151fe:	add    esi,DWORD PTR [esi]
  415200:	xor    al,0x87
  415202:	dec    ebx
  415203:	pop    ds
  415204:	std    
  415205:	sub    edi,DWORD PTR [ebx+0x461f8d01]
  41520b:	int    0x8c
  41520d:	jp     0x415248
  41520f:	scas   al,BYTE PTR es:[edi]
  415210:	or     esi,DWORD PTR [eax]
  415212:	int    0x8a
  415214:	sub    DWORD PTR ds:0xbb5d211d,esi
  41521a:	adc    al,ah
  41521c:	mov    gs:0x63f3f1f9,eax
  415222:	xchg   esp,eax
  415223:	lock dec ecx
  415225:	xor    eax,0xb45df24d
  41522a:	cmp    DWORD PTR [eax],ecx
  41522c:	jl     0x41524d
  41522e:	cmp    ch,BYTE PTR [ebx-0x5ce16d88]
  415234:	(bad)  
  415235:	lahf   
  415236:	(bad)  
  415238:	repnz push ecx
  41523a:	push   edx
  41523b:	mov    edi,0x1c34e53c
  415240:	loop   0x4152a8
  415242:	adc    al,0x40
  415244:	dec    ecx
  415245:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415246:	jle    0x41528a
  415248:	cmp    DWORD PTR [ebx+eiz*4],0xd9054cd2
  41524f:	fcmovne st,st(4)
  415251:	inc    ecx
  415252:	imul   ecx,DWORD PTR [edi-0x1240c8d9],0xe51745d5
  41525c:	int    0xa3
  41525e:	jns    0x41524d
  415260:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415261:	fcmovnb st,st(1)
  415263:	lds    ebx,FWORD PTR [eax]
  415265:	ins    BYTE PTR es:[edi],dx
  415266:	xchg   ebp,eax
  415267:	cmc    
  415268:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415269:	lods   eax,DWORD PTR ds:[esi]
  41526a:	cld    
  41526b:	push   edx
  41526c:	push   edi
  41526d:	cdq    
  41526e:	push   ds
  41526f:	mov    bl,0x7
  415271:	mov    al,ds:0xb86c79cd
  415276:	inc    ecx
  415277:	inc    esi
  415278:	mov    ch,0x23
  41527a:	pop    ss
  41527b:	mov    WORD PTR [ebp+0xdeb70db],cs
  415281:	add    DWORD PTR [esi-0x39],0x8d98ee86
  415288:	repnz hlt 
  41528a:	jmp    0x6684d345
  41528f:	stos   BYTE PTR es:[edi],al
  415290:	mov    ecx,0xda68d18d
  415295:	and    al,ah
  415297:	dec    ecx
  415298:	scas   eax,DWORD PTR es:[edi]
  415299:	cmc    
  41529a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41529b:	or     BYTE PTR [edx+0x589f8de0],bh
  4152a1:	or     bl,BYTE PTR [edx+0x6aea402b]
  4152a7:	inc    ecx
  4152a8:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4152aa:	dec    edi
  4152ab:	jbe    0x41524d
  4152ad:	scas   eax,DWORD PTR es:[edi]
  4152ae:	lea    edx,[eax-0x4b91451c]
  4152b4:	cs inc ebx
  4152b6:	mov    al,ds:0x8d34bf89
  4152bb:	cmp    bh,bl
  4152bd:	cmp    al,0x61
  4152bf:	(bad)  
  4152c0:	sub    ebx,esi
  4152c2:	mov    edi,0x9fccf180
  4152c7:	mov    ebp,0x9fa9866f
  4152cc:	fldcw  WORD PTR [edx]
  4152ce:	lods   eax,DWORD PTR ds:[esi]
  4152cf:	scas   eax,DWORD PTR es:[edi]
  4152d0:	mov    esp,0x9ef960bc
  4152d5:	vorps  ymm7,ymm3,ymm0
  4152d9:	and    eax,0x1980ac71
  4152de:	in     eax,0x9e
  4152e0:	jb     0x4152aa
  4152e2:	fidiv  DWORD PTR [edx-0x6ce4bf8]
  4152e8:	mov    ah,0x10
  4152ea:	mov    ebx,0xee065776
  4152ef:	call   0xae7c87f2
  4152f4:	cs push edx
  4152f6:	pop    esi
  4152f7:	jecxz  0x41531c
  4152f9:	popf   
  4152fa:	jo     0x415297
  4152fc:	pushf  
  4152fd:	sbb    al,0xba
  4152ff:	and    eax,0x2064ee5e
  415304:	add    DWORD PTR [edx-0x40],0x7b
  415308:	sbb    DWORD PTR [esi-0x1b],0x6025426b
  41530f:	dec    edx
  415310:	add    ecx,ebx
  415312:	mov    bh,0x81
  415314:	pop    edi
  415315:	cmp    al,0xdd
  415317:	adc    BYTE PTR [esi],al
  415319:	or     cl,cl
  41531b:	sbb    eax,0x2ea24bcb
  415320:	es call 0xac64f363
  415326:	add    ecx,edi
  415328:	stos   BYTE PTR es:[edi],al
  415329:	push   eax
  41532a:	cmp    eax,0xa7d1425e
  41532f:	or     esi,DWORD PTR [esi]
  415331:	stos   BYTE PTR es:[edi],al
  415332:	fwait
  415333:	(bad)  
  415334:	in     eax,0x4d
  415336:	xchg   esi,eax
  415337:	dec    edi
  415338:	mov    eax,ds:0xd021a4ef
  41533d:	cli    
  41533e:	inc    BYTE PTR [ecx]
  415340:	cmp    eax,0xa73443de
  415345:	inc    esi
  415346:	test   al,0x63
  415348:	adc    cl,cl
  41534a:	mov    cl,0x4
  41534c:	cdq    
  41534d:	inc    eax
  41534e:	add    esi,DWORD PTR [ebx]
  415350:	lods   al,BYTE PTR ds:[esi]
  415351:	push   0xc1a27a3b
  415356:	or     dh,dl
  415358:	bound  esi,QWORD PTR [ebx+esi*2]
  41535b:	xchg   esp,eax
  41535c:	pop    ebp
  41535d:	mov    eax,0x1aec77dd
  415362:	mov    cl,BYTE PTR [ebp-0x19994a67]
  415368:	push   edx
  415369:	cmp    bh,BYTE PTR [ebx-0x5e]
  41536c:	xor    eax,0xb05f844
  415371:	ja     0x415380
  415373:	loopne 0x4153c8
  415375:	sub    DWORD PTR [edi],ebp
  415377:	push   0x3c0d73ab
  41537c:	in     al,dx
  41537d:	cmp    esi,DWORD PTR [ebp-0x74]
  415380:	fcom   DWORD PTR [edi-0x23]
  415383:	pusha  
  415384:	ins    BYTE PTR es:[edi],dx
  415385:	das    
  415386:	retf   0xfa6e
  415389:	outs   dx,BYTE PTR ds:[esi]
  41538a:	adc    ch,BYTE PTR [edi+0x71eef2ef]
  415390:	out    0x7,al
  415392:	loopne 0x415352
  415394:	out    dx,eax
  415395:	xor    eax,0xc9bf4437
  41539a:	jle    0x4153b4
  41539c:	(bad)  [eax-0x8c1b12a]
  4153a2:	popa   
  4153a3:	xchg   edi,eax
  4153a4:	push   esp
  4153a5:	in     eax,0xc5
  4153a7:	cli    
  4153a8:	das    
  4153a9:	jecxz  0x41537e
  4153ab:	or     eax,0xdb836811
  4153b0:	sar    esi,cl
  4153b2:	lods   al,BYTE PTR ds:[esi]
  4153b3:	mov    bl,0xa2
  4153b5:	nop
  4153b6:	and    DWORD PTR [ecx+0x73],eax
  4153b9:	push   ds
  4153ba:	jnp    0x415391
  4153bc:	inc    esp
  4153bd:	jb     0x41536f
  4153bf:	dec    ebx
  4153c0:	push   ds
  4153c1:	or     ecx,DWORD PTR [edi]
  4153c3:	mov    cl,0xdd
  4153c5:	xchg   esi,eax
  4153c6:	sub    bh,BYTE PTR ds:0x890f2f61
  4153cc:	out    dx,eax
  4153cd:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4153cf:	jb     0x4153db
  4153d1:	adc    al,0xa1
  4153d3:	jge    0x4153a9
  4153d5:	add    eax,0xc9bb84b3
  4153da:	mov    edi,0xf60ad28
  4153df:	fld    st(5)
  4153e1:	or     al,0xe7
  4153e3:	jb     0x41540d
  4153e5:	jle    0x4153d1
  4153e7:	xor    edx,ebp
  4153e9:	mul    dl
  4153eb:	xlat   BYTE PTR ds:[ebx]
  4153ec:	or     esi,DWORD PTR ss:[edi+0x53f00176]
  4153f3:	shl    ah,1
  4153f5:	iret   
  4153f6:	(bad)  
  4153f7:	adc    al,0x8c
  4153f9:	sbb    al,0xf
  4153fb:	mov    al,ds:0x121d659e
  415400:	pop    eax
  415401:	imul   ecx,DWORD PTR [esi],0x72e7036c
  415407:	and    ch,BYTE PTR [eax-0x7b]
  41540a:	icebp  
  41540b:	or     esi,DWORD PTR [esi+0x62]
  41540e:	push   cs
  41540f:	sbb    al,0xea
  415411:	fxch   st(5)
  415413:	(bad)  
  415414:	ficomp DWORD PTR [edi-0x5c]
  415417:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415418:	in     al,0x61
  41541a:	sub    eax,0x30940e7d
  41541f:	xor    eax,0x1abcd793
  415424:	xor    BYTE PTR [ebp+0x485253ff],0x8f
  41542b:	lahf   
  41542c:	xchg   edi,eax
  41542d:	dec    ebx
  41542e:	dec    BYTE PTR [ebx+0x34]
  415431:	bound  eax,QWORD PTR [ecx+0x2d]
  415434:	inc    ecx
  415435:	cmp    cl,dh
  415437:	jmp    0x1425a248
  41543c:	or     DWORD PTR [ebx+ebx*1+0x5aaa70ff],eax
  415443:	fsub   QWORD PTR [ecx-0x16]
  415446:	sbb    esi,DWORD PTR [esi]
  415448:	lods   al,BYTE PTR ds:[esi]
  415449:	jo     0x415421
  41544b:	dec    ecx
  41544c:	repnz dec ebp
  41544e:	mov    cs,WORD PTR [ebp+0x2f]
  415451:	pop    eax
  415452:	dec    edx
  415453:	dec    ecx
  415454:	cmp    ecx,ecx
  415456:	lock pop ecx
  415458:	mov    eax,0xfbb58d66
  41545d:	pop    es
  41545e:	shr    dh,0x7f
  415461:	jmp    0x4154cf
  415463:	xchg   edi,eax
  415464:	imul   esi,DWORD PTR [edi+0x5be0e3d8],0xffffffca
  41546b:	sub    esp,edx
  41546d:	xchg   ecx,eax
  41546e:	dec    esp
  41546f:	or     eax,0x5528c393
  415474:	inc    ecx
  415475:	daa    
  415476:	les    eax,FWORD PTR [ebx]
  415478:	ret    0x4589
  41547b:	or     BYTE PTR [ebx-0x3ecc17bb],cl
  415481:	add    eax,edx
  415483:	mov    edx,DWORD PTR [ebp+0x14]
  415486:	imul   eax,DWORD PTR [edx]
  415489:	mov    edx,DWORD PTR [ebp-0x4]
  41548c:	xor    edx,ecx
  41548e:	mov    ecx,DWORD PTR [ebp+0x8]
  415491:	lea    ecx,[edx+ecx*1+0x32729c]
  415498:	cmp    ecx,eax
  41549a:	je     0x416385
  4154a0:	mov    edi,DWORD PTR [ebp-0x18]
  4154a3:	mov    eax,DWORD PTR [ebp+0x8]
  4154a6:	mov    edx,DWORD PTR [ebp+0x14]
  4154a9:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  4154ad:	mov    ecx,0x7510855
  4154b2:	xor    edx,edx
  4154b4:	xor    edi,ecx
  4154b6:	jmp    0x41579a
  4154bb:	sub    dh,cl
  4154bd:	sub    BYTE PTR [ecx+0x71b159f7],bl
  4154c3:	xchg   esi,edx
  4154c5:	push   ebx
  4154c6:	mov    ch,0x5c
  4154c8:	or     DWORD PTR [edi],0xffffffcc
  4154cb:	add    bh,BYTE PTR ss:[edi+0x70]
  4154cf:	mov    ecx,0xc670707e
  4154d4:	inc    edi
  4154d5:	xor    eax,0x6e4d688d
  4154da:	es dec esi
  4154dc:	cmc    
  4154dd:	add    eax,0xd5c57f8f
  4154e2:	xchg   edx,eax
  4154e3:	mov    ds:0x765ef13f,eax
  4154e8:	int3   
  4154e9:	ins    BYTE PTR es:[edi],dx
  4154ea:	repz fstp st(6)
  4154ed:	xchg   ebp,eax
  4154ee:	repz jg 0x4154dc
  4154f1:	inc    ecx
  4154f2:	ret    
  4154f3:	addr16 jp 0x415543
  4154f6:	mov    al,ds:0x85e9dbf0
  4154fb:	sbb    al,0x16
  4154fd:	jnp    0x4154f2
  4154ff:	ins    DWORD PTR es:[edi],dx
  415500:	(bad)  
  415501:	sbb    eax,0xfb205012
  415506:	push   0x55
  415508:	or     esi,DWORD PTR [edx-0x30]
  41550b:	in     al,dx
  41550c:	(bad)  
  41550f:	add    al,0xec
  415511:	ret    0xea96
  415514:	dec    esp
  415515:	(bad)  
  415516:	sti    
  415517:	push   edi
  415518:	enter  0xe8ec,0xab
  41551c:	cmp    eax,0xb7977563
  415521:	(bad)  
  415522:	fistp  WORD PTR [ecx+0x7b]
  415525:	ds mov eax,0x32a6402b
  41552b:	pop    edi
  41552c:	dec    ecx
  41552d:	out    dx,eax
  41552e:	dec    ecx
  41552f:	mov    al,0x73
  415531:	xchg   edi,eax
  415532:	(bad)  
  415533:	push   0x95dd61f2
  415538:	pop    es
  415539:	sub    bh,BYTE PTR [eax-0x42]
  41553c:	leave  
  41553d:	xor    edi,esp
  41553f:	mov    bh,BYTE PTR [esi+0x50b2e7]
  415545:	sub    eax,0xe2767847
  41554a:	add    al,0xfb
  41554c:	xor    BYTE PTR [ecx+0x72],bl
  41554f:	icebp  
  415550:	sub    eax,0xc2da000d
  415555:	dec    esp
  415556:	mov    esp,0x2d317948
  41555b:	adc    DWORD PTR [edx],ecx
  41555d:	cmc    
  41555e:	sub    esi,DWORD PTR [ecx+0x0]
  415561:	dec    ebx
  415562:	xchg   ecx,eax
  415563:	adc    BYTE PTR [edi+0x63850183],cl
  415569:	ret    
  41556a:	cmp    al,0xee
  41556c:	mov    DWORD PTR ds:0xc906f163,edi
  415572:	inc    edi
  415573:	arpl   di,bp
  415575:	mov    ecx,0xcd527706
  41557a:	mov    ah,dh
  41557c:	pop    eax
  41557d:	add    eax,0x522b3368
  415582:	pop    ebp
  415583:	xchg   edx,eax
  415584:	test   eax,0x37a833ad
  415589:	dec    edi
  41558a:	loope  0x4155f1
  41558c:	mov    ebp,0x744215d7
  415591:	mov    cs,WORD PTR [esi]
  415593:	popf   
  415594:	mov    ah,0x10
  415596:	je     0x41551b
  415598:	mov    cl,0x41
  41559a:	push   esp
  41559b:	jns    0x415527
  41559d:	cdq    
  41559e:	in     al,0x96
  4155a0:	in     al,dx
  4155a1:	fdiv   DWORD PTR [edx+0x73]
  4155a4:	bound  edx,QWORD PTR [eax]
  4155a6:	in     eax,0x37
  4155a8:	pop    ecx
  4155a9:	jns    0x415537
  4155ab:	xlat   BYTE PTR ds:[ebx]
  4155ac:	repz mov dh,BYTE PTR [edx-0x554b880c]
  4155b3:	ja     0x415572
  4155b5:	sbb    al,0x72
  4155b7:	mov    ebx,0x6340deab
  4155bc:	cwde   
  4155bd:	call   DWORD PTR [eax-0x5f]
  4155c0:	add    eax,0xe252a548
  4155c5:	fnstenv [esi+0x65e14100]
  4155cb:	scas   eax,DWORD PTR es:[edi]
  4155cc:	iret   
  4155cd:	sub    cl,0x6
  4155d0:	jg     0x415606
  4155d2:	push   ebp
  4155d3:	call   0x9801:0x695509b6
  4155da:	cmp    eax,0x2f0ec45e
  4155df:	fisub  DWORD PTR [esi+0x5f]
  4155e2:	frstor [edi-0xa0a60b9]
  4155e8:	and    BYTE PTR [eax-0x22],dh
  4155eb:	sbb    BYTE PTR [edx],bh
  4155ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4155ee:	sbb    ch,BYTE PTR [eax]
  4155f0:	and    al,0x4c
  4155f2:	div    DWORD PTR [ebp+0x61]
  4155f5:	mov    edx,0x6023c944
  4155fa:	inc    edx
  4155fb:	push   0xffffffd2
  4155fd:	aad    0xf4
  4155ff:	(bad)  
  415600:	pop    esp
  415601:	and    al,0xf9
  415603:	in     al,0x46
  415605:	jno    0x415611
  415607:	call   0xdf71:0x140c77e
  41560e:	xchg   edx,eax
  41560f:	xchg   esi,eax
  415610:	push   cs
  415611:	cmp    al,0xd9
  415613:	sub    eax,0xce287ff8
  415618:	cli    
  415619:	push   ecx
  41561a:	push   0xfffffff3
  41561c:	int    0x8f
  41561e:	cmp    cl,bl
  415620:	test   DWORD PTR [ebx-0x3668c86c],esp
  415626:	sbb    BYTE PTR [ecx-0x2c],cl
  415629:	adc    al,0x73
  41562b:	xor    esi,esi
  41562d:	in     eax,dx
  41562e:	sub    DWORD PTR [edi-0x38],0x2ce1881b
  415635:	inc    esp
  415636:	popf   
  415637:	jo     0x415690
  415639:	jne    0x4155c0
  41563b:	adc    BYTE PTR [ebx+0x5677542e],bl
  415641:	popf   
  415642:	sbb    al,0xb5
  415644:	and    bh,bh
  415646:	scas   eax,DWORD PTR es:[edi]
  415647:	xchg   DWORD PTR [esi+0x64],esi
  41564a:	sbb    ebp,esi
  41564c:	or     al,0x16
  41564e:	fidivr WORD PTR [edx-0x3]
  415651:	(bad)  
  415652:	and    edi,edx
  415654:	test   eax,0xc82db065
  415659:	jns    0x415644
  41565b:	cdq    
  41565c:	pushf  
  41565d:	push   ss
  41565e:	jmp    0xefebad75
  415663:	mov    esp,esp
  415665:	ss (bad) 
  415667:	(bad)  
  415669:	mov    WORD PTR [esi-0x47],ss
  41566c:	push   ebp
  41566d:	imul   esp,DWORD PTR [eax],0x7d31edf0
  415673:	outs   dx,BYTE PTR ds:[esi]
  415674:	xchg   edi,eax
  415675:	and    al,0xeb
  415677:	inc    eax
  415678:	inc    eax
  415679:	pop    eax
  41567a:	push   cs
  41567b:	mov    ds:0x571a6a99,eax
  415680:	push   ss
  415681:	xor    dh,dl
  415683:	cmp    BYTE PTR [ecx+0x734fc44],bl
  415689:	fs enter 0x19b7,0xb6
  41568e:	gs stc 
  415690:	cmp    DWORD PTR [edi],ebp
  415692:	jo     0x4156e2
  415694:	shl    BYTE PTR [eax-0x4fd37686],cl
  41569a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41569b:	ss call 0xb603:0x58190696
  4156a3:	sbb    al,0x72
  4156a5:	pop    ss
  4156a6:	stos   DWORD PTR es:[edi],eax
  4156a7:	scas   eax,DWORD PTR es:[edi]
  4156a8:	sqrtps xmm5,XMMWORD PTR [edx-0x56]
  4156ac:	scas   al,BYTE PTR es:[edi]
  4156ad:	pop    edi
  4156ae:	push   cs
  4156af:	push   esp
  4156b0:	xor    ebx,ecx
  4156b2:	shl    BYTE PTR ds:0x1866a262,0xa1
  4156b9:	push   0x2ea2850e
  4156be:	push   edi
  4156bf:	sar    DWORD PTR [ebp+ebp*2+0x22],0x23
  4156c4:	retf   
  4156c5:	in     eax,dx
  4156c6:	ins    BYTE PTR es:[edi],dx
  4156c7:	ret    
  4156c8:	sti    
  4156c9:	xchg   ecx,eax
  4156ca:	cmp    ecx,DWORD PTR [edi-0xc5fae7b]
  4156d0:	jns    0x415705
  4156d2:	push   ds
  4156d3:	ret    0x61a1
  4156d6:	sub    bl,BYTE PTR [esi-0x63751920]
  4156dc:	push   ds
  4156dd:	xchg   ebp,eax
  4156de:	xchg   esi,eax
  4156df:	stos   DWORD PTR es:[edi],eax
  4156e0:	(bad)  
  4156e1:	jmp    0x4dac:0x65d53ef3
  4156e8:	inc    esp
  4156e9:	or     eax,0xc12c9ec9
  4156ee:	or     DWORD PTR [ebp-0x39],ecx
  4156f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4156f2:	push   esp
  4156f3:	ins    BYTE PTR es:[edi],dx
  4156f4:	stos   BYTE PTR es:[edi],al
  4156f5:	outs   dx,BYTE PTR ds:[esi]
  4156f6:	jae    0x4156df
  4156f8:	sub    BYTE PTR [esi-0x5ae7f3c8],dh
  4156fe:	or     al,0xed
  415700:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415701:	iret   
  415702:	std    
  415703:	imul   ecx,DWORD PTR [edi-0x38],0x12
  415707:	aaa    
  415708:	das    
  415709:	adc    eax,0x5986fe16
  41570e:	shl    DWORD PTR [ecx],cl
  415710:	mov    al,ds:0xfc7343a6
  415715:	out    dx,eax
  415716:	popa   
  415717:	sbb    edx,DWORD PTR fs:[edi]
  41571a:	shr    BYTE PTR [edi+ebx*2],1
  41571d:	fs (bad) 
  41571f:	pop    eax
  415720:	jae    0x415777
  415722:	and    dh,BYTE PTR [eax-0x126d5326]
  415728:	rol    DWORD PTR [eax],0x1f
  41572b:	sbb    edx,esi
  41572d:	xchg   ecx,eax
  41572e:	js     0x415739
  415730:	jnp    0x41578f
  415732:	jecxz  0x415768
  415734:	xlat   BYTE PTR ds:[ebx]
  415735:	jnp    0x4157ad
  415737:	xchg   ebp,eax
  415738:	mov    ch,ch
  41573a:	daa    
  41573b:	jecxz  0x415779
  41573d:	sti    
  41573e:	inc    edi
  41573f:	add    eax,0x68821c1c
  415744:	ins    BYTE PTR es:[edi],dx
  415745:	out    dx,eax
  415746:	ins    BYTE PTR es:[edi],dx
  415747:	into   
  415748:	sbb    BYTE PTR [edi+0x34d7cb9f],ah
  41574e:	int    0x1c
  415750:	mov    ecx,0xc3955fab
  415755:	xor    DWORD PTR [ecx-0x64],ecx
  415758:	in     al,0x56
  41575a:	mov    ecx,0xd05c7524
  41575f:	aaa    
  415760:	int    0x2f
  415762:	lods   al,BYTE PTR ds:[esi]
  415763:	icebp  
  415764:	fst    QWORD PTR [ecx]
  415766:	pop    ebx
  415767:	fld    TBYTE PTR [eax+ebx*4+0x48]
  41576b:	fisub  WORD PTR [edi+esi*4+0x2a991568]
  415772:	sub    al,0x57
  415774:	addr16 jae 0x415716
  415777:	ficomp WORD PTR [ebx]
  415779:	jns    0x4157bc
  41577b:	int    0xfb
  41577d:	cs jg  0x415793
  415780:	push   esp
  415781:	mov    BYTE PTR [eax+ebx*4+0x67],ch
  415785:	or     esi,ebx
  415787:	mov    ebp,0xdce7593e
  41578c:	adc    DWORD PTR [edi-0x6d9af52a],esp
  415792:	sti    
  415793:	dec    ebp
  415794:	xchg   ebp,eax
  415795:	adc    eax,0x38d53f88
  41579a:	mov    esi,0x32729c
  41579f:	add    edi,esi
  4157a1:	div    edi
  4157a3:	mov    edx,DWORD PTR [ebp-0x4]
  4157a6:	jmp    0x415a8a
  4157ab:	adc    al,0xcd
  4157ad:	inc    esi
  4157ae:	rol    BYTE PTR [ecx+0x51],cl
  4157b1:	xchg   esp,eax
  4157b2:	int    0x7b
  4157b4:	rcl    DWORD PTR [esi],1
  4157b6:	test   BYTE PTR [edi+0x7f4dff22],bl
  4157bc:	movq   QWORD PTR [eax-0x47],mm6
  4157c0:	jle    0x415832
  4157c2:	jo     0x415830
  4157c4:	into   
  4157c5:	mov    ah,bl
  4157c7:	mov    BYTE PTR [esp+eax*8-0x58],dl
  4157cb:	test   al,0x99
  4157cd:	cmc    
  4157ce:	out    0x4c,al
  4157d0:	pushf  
  4157d1:	lds    ecx,FWORD PTR [esi]
  4157d3:	scas   eax,DWORD PTR es:[edi]
  4157d4:	das    
  4157d5:	mov    eax,0x6cd790b9
  4157da:	test   al,0xb4
  4157dc:	div    bh
  4157de:	rcr    BYTE PTR [ebx+ebx*2+0x47],cl
  4157e2:	cmp    ch,BYTE PTR [ebx]
  4157e4:	pusha  
  4157e5:	inc    ebx
  4157e6:	cmp    cl,BYTE PTR [esi-0x75b766a7]
  4157ec:	inc    ecx
  4157ed:	jmp    0x7843:0x64e10293
  4157f4:	dec    edx
  4157f5:	int3   
  4157f6:	mov    ?,WORD PTR [ebx]
  4157f8:	fidivr DWORD PTR [eax+esi*1]
  4157fb:	push   eax
  4157fc:	sti    
  4157fd:	mov    dl,0x3c
  4157ff:	hlt    
  415800:	enter  0xfeeb,0x69
  415804:	xlat   BYTE PTR ds:[ebx]
  415805:	sbb    bl,BYTE PTR [esi+0x5f]
  415808:	dec    ebx
  415809:	mov    ?,ecx
  41580b:	cmp    eax,0xfd1413c2
  415810:	(bad)  
  415811:	gs dec esp
  415813:	js     0x415804
  415815:	inc    esp
  415816:	imul   ebx,DWORD PTR [edx+0x6b5e7104],0x52
  41581d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41581e:	push   ebp
  41581f:	aaa    
  415820:	pop    esi
  415821:	pop    ds
  415822:	clc    
  415823:	push   cs
  415824:	loope  0x415813
  415826:	pop    ecx
  415827:	sub    al,0xf8
  415829:	xor    ah,cl
  41582b:	mov    esp,?
  41582d:	pushf  
  41582e:	xchg   edi,eax
  41582f:	mov    DWORD PTR [edi],esi
  415831:	loope  0x4157ed
  415833:	mov    eax,ds:0x54a3036
  415838:	dec    eax
  415839:	xchg   esi,eax
  41583a:	ins    DWORD PTR es:[edi],dx
  41583b:	xor    BYTE PTR [edi],0xb0
  41583e:	add    DWORD PTR [edx],ebp
  415840:	scas   al,BYTE PTR es:[edi]
  415841:	repz cmc 
  415843:	dec    esp
  415844:	ss daa 
  415846:	pop    eax
  415847:	and    esp,ebp
  415849:	pushf  
  41584a:	xchg   ebp,eax
  41584b:	arpl   WORD PTR [ecx-0x1],ax
  41584e:	push   es
  41584f:	mov    ah,0x5a
  415851:	adc    eax,0x5370744a
  415856:	mov    ebx,0x4cec210b
  41585b:	ret    
  41585c:	sbb    al,0xd1
  41585e:	in     al,0xdb
  415860:	in     eax,0x0
  415862:	sti    
  415863:	dec    edx
  415864:	pop    ecx
  415865:	inc    BYTE PTR ds:0xbadccec1
  41586b:	imul   ebx,ebx,0x53286bbc
  415871:	clc    
  415872:	or     al,dl
  415874:	(bad)  
  415875:	pop    ecx
  415876:	sar    BYTE PTR ds:[edx+0x2be8cf2f],1
  41587d:	inc    esp
  41587e:	jne    0x41581d
  415880:	cli    
  415881:	aaa    
  415882:	sahf   
  415883:	ins    DWORD PTR es:[edi],dx
  415884:	push   ds
  415885:	adc    al,0xd0
  415887:	or     eax,0x6c7bcbc3
  41588c:	das    
  41588d:	or     DWORD PTR [ebx+0x3c],ebx
  415890:	ins    DWORD PTR es:[edi],dx
  415891:	sbb    ah,BYTE PTR [eax+0x8]
  415894:	jg     0x4158d5
  415896:	sub    ch,al
  415898:	sub    DWORD PTR [eax+0x3f],0xb932a8d5
  41589f:	push   esi
  4158a0:	fcomp  QWORD PTR [ecx]
  4158a2:	xor    eax,0x8f222187
  4158a7:	and    eax,DWORD PTR [esi+0x6b]
  4158aa:	xor    ecx,DWORD PTR [eax-0x60]
  4158ad:	inc    esi
  4158ae:	xlat   BYTE PTR ds:[ebx]
  4158af:	add    ecx,ecx
  4158b1:	in     eax,dx
  4158b2:	rcl    esi,0x14
  4158b5:	xchg   ecx,eax
  4158b6:	jb     0x415893
  4158b8:	sbb    BYTE PTR [eax-0xf],dl
  4158bb:	cli    
  4158bc:	sub    al,0xd3
  4158be:	cld    
  4158bf:	lods   al,BYTE PTR ds:[esi]
  4158c0:	daa    
  4158c1:	xor    BYTE PTR [eax],0x57
  4158c4:	pop    ds
  4158c5:	jne    0x4158ec
  4158c7:	test   eax,0xfd357b7
  4158cc:	mov    ah,dh
  4158ce:	in     eax,0xe7
  4158d0:	mov    cs,WORD PTR ds:0xf9e04dc3
  4158d6:	cdq    
  4158d7:	scas   eax,DWORD PTR es:[edi]
  4158d8:	leave  
  4158d9:	mov    DWORD PTR [ebx],0x870cc5c7
  4158df:	cmp    ebp,DWORD PTR [edx-0x56]
  4158e2:	sar    BYTE PTR [esi],0x40
  4158e5:	das    
  4158e6:	fwait
  4158e7:	jg     0x415934
  4158e9:	jne    0x4158b9
  4158eb:	jp     0x4158cc
  4158ed:	jae    0x415886
  4158ef:	retf   
  4158f0:	sub    al,0x6
  4158f2:	std    
  4158f3:	std    
  4158f4:	sub    eax,0x38104c8f
  4158f9:	sub    BYTE PTR fs:[ebp+0x73],bl
  4158fd:	js     0x415919
  4158ff:	mov    bh,0x17
  415901:	jmp    0xe1c0:0xfddfa5cc
  415908:	mov    dh,0x70
  41590a:	pop    es
  41590b:	adc    ebp,DWORD PTR [esp+eiz*2+0x20097a87]
  415912:	sbb    DWORD PTR [edx],esp
  415914:	out    0xf1,al
  415916:	cdq    
  415917:	mov    ds:0x745f0ae8,eax
  41591c:	sub    eax,DWORD PTR [esi+0x23]
  41591f:	cmp    BYTE PTR [edx-0x1fb2058e],bh
  415925:	mov    ds,esi
  415927:	popf   
  415928:	adc    ebx,DWORD PTR [esi]
  41592a:	loop   0x41599b
  41592c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41592d:	fiadd  WORD PTR [ebx-0x5e6f2124]
  415933:	dec    ecx
  415934:	jnp    0x415946
  415936:	or     al,0xdc
  415938:	int3   
  415939:	cmp    cl,BYTE PTR [ebx]
  41593b:	(bad)  
  41593c:	psrlq  mm0,QWORD PTR [edi-0x77]
  415940:	sar    DWORD PTR [ecx-0x6ac3f6e4],cl
  415946:	in     al,0x3a
  415948:	mov    esp,0xd4ab7933
  41594d:	cmp    edx,esi
  41594f:	in     al,dx
  415950:	popf   
  415951:	mov    edi,DWORD PTR [edi]
  415953:	jmp    0x54342bd2
  415958:	inc    eax
  415959:	daa    
  41595a:	or     ecx,ebp
  41595c:	fst    DWORD PTR [ebp+0x7d]
  41595f:	dec    eax
  415960:	ror    ecx,0xb7
  415963:	mov    DWORD PTR [eax+eax*4+0x18],ebp
  415967:	sub    BYTE PTR [eax-0x16d55818],dh
  41596d:	bound  edx,QWORD PTR [ebp-0x4082258d]
  415973:	cmp    eax,0xe55f5d2a
  415978:	scas   al,BYTE PTR es:[edi]
  415979:	dec    ebx
  41597a:	mov    esi,0x4a17bfc0
  41597f:	mov    ds:0xd397d526,al
  415984:	out    dx,eax
  415985:	in     eax,dx
  415986:	popf   
  415987:	icebp  
  415988:	pop    edi
  415989:	pop    ss
  41598a:	shl    DWORD PTR [ebp-0x34],1
  41598d:	hlt    
  41598e:	adc    eax,0x5fce270c
  415993:	cmp    al,0x5c
  415995:	les    ebp,FWORD PTR [ebx-0xb]
  415998:	adc    DWORD PTR [esi+0xa],edx
  41599b:	jns    0x4159cc
  41599d:	call   0x3989:0xe09c960
  4159a4:	jne    0x4159c2
  4159a6:	mov    ecx,0x37719be8
  4159ab:	xor    ch,bl
  4159ad:	cmp    BYTE PTR [esi+0xa852f02],0xc3
  4159b4:	ror    edi,cl
  4159b6:	das    
  4159b7:	mov    ch,dl
  4159b9:	pushf  
  4159ba:	sahf   
  4159bb:	aad    0x10
  4159bd:	pop    edi
  4159be:	fidivr WORD PTR [esp+ebx*8+0x5ba4e159]
  4159c5:	in     al,dx
  4159c6:	and    bh,BYTE PTR [ebx]
  4159c8:	and    BYTE PTR [edx+0x6fa97ccf],bl
  4159ce:	lahf   
  4159cf:	xchg   ebp,eax
  4159d0:	sbb    eax,0x764a4278
  4159d5:	mov    ebx,0xcf1b3ac6
  4159da:	xchg   edi,eax
  4159db:	xor    cl,al
  4159dd:	int    0x49
  4159df:	mov    eax,0x35b158ff
  4159e4:	sub    eax,0xc45d63ee
  4159e9:	sub    al,0xe2
  4159eb:	jmp    0x47fd9ab4
  4159f0:	jno    0x4159d1
  4159f2:	dec    ecx
  4159f3:	fwait
  4159f4:	dec    ebx
  4159f5:	or     BYTE PTR [esi+0xb],ch
  4159f8:	pop    ss
  4159f9:	inc    esp
  4159fa:	out    0x7b,al
  4159fc:	jmp    0x1a3c076d
  415a01:	fmul   QWORD PTR [eax+ebp*2]
  415a04:	imul   esi,DWORD PTR [esi+0x7db67283],0x83536d56
  415a0e:	pop    eax
  415a0f:	enter  0xde5a,0xa9
  415a13:	dec    ebp
  415a14:	call   0x10cb5d8a
  415a19:	aas    
  415a1a:	inc    esi
  415a1b:	mov    dh,dl
  415a1d:	and    eax,0xf763410a
  415a22:	or     cl,bh
  415a24:	mov    esi,0x3cca7b11
  415a29:	mov    edi,0x37a6750
  415a2f:	xchg   ebx,eax
  415a30:	jl     0x415a20
  415a32:	dec    edx
  415a33:	and    eax,0xe69218f2
  415a38:	jle    0x415a8c
  415a3a:	ja     0x4159c9
  415a3c:	fidivr DWORD PTR [ebx+0x5c9601e5]
  415a42:	push   esi
  415a43:	call   0xb49d:0x2c501aca
  415a4a:	jno    0x415a4c
  415a4c:	inc    edi
  415a4d:	addr16 test al,0x76
  415a50:	lea    ebx,[edi+0x176e3a67]
  415a56:	leave  
  415a57:	sbb    BYTE PTR [edi],ch
  415a59:	xchg   ebp,eax
  415a5a:	or     eax,0x614601b8
  415a5f:	sub    dh,al
  415a61:	push   edx
  415a62:	inc    esp
  415a63:	je     0x415ac1
  415a65:	ret    
  415a66:	sar    esi,cl
  415a68:	pop    ss
  415a69:	mov    al,dh
  415a6b:	cmp    dl,BYTE PTR [edx]
  415a6d:	sbb    dl,BYTE PTR [eax-0x82e614b]
  415a73:	cdq    
  415a74:	xor    eax,0x1ba8a182
  415a79:	in     al,0x10
  415a7b:	jge    0x415a42
  415a7d:	xor    BYTE PTR ds:0xfa806feb,cl
  415a83:	mov    ds:0xde50f268,al
  415a88:	dec    ecx
  415a89:	mov    ch,0x33
  415a8b:	ror    DWORD PTR [ebp+0x729c0284],1
  415a91:	xor    al,BYTE PTR [eax]
  415a93:	jmp    0x415d77
  415a98:	sub    dl,BYTE PTR [eax-0x24]
  415a9b:	mov    esp,0x6eaabc6a
  415aa0:	popa   
  415aa1:	pop    ecx
  415aa2:	xchg   ebp,eax
  415aa3:	aas    
  415aa4:	adc    ah,BYTE PTR [eax+0x10]
  415aa7:	iret   
  415aa8:	mov    eax,0xb9707f0d
  415aad:	jle    0x415b1f
  415aaf:	jo     0x415b2b
  415ab1:	inc    edi
  415ab2:	jns    0x415a96
  415ab4:	test   esp,edx
  415ab6:	jne    0x415aef
  415ab8:	mov    al,0xb1
  415aba:	dec    edi
  415abb:	xchg   ebx,eax
  415abc:	xor    bl,BYTE PTR [edi+0x55]
  415abf:	addr16 cld 
  415ac1:	rcl    DWORD PTR [edi+edx*1+0x78b6427a],1
  415ac8:	mov    ecx,0xeae961c7
  415acd:	rcl    DWORD PTR [edi+0x2bf05314],0x11
  415ad4:	dec    ebx
  415ad5:	inc    eax
  415ad6:	cmc    
  415ad7:	xor    eax,0xbb535355
  415adc:	(bad)  
  415add:	and    dl,BYTE PTR [edi+0x9b5a3e9]
  415ae3:	pop    ebx
  415ae4:	in     al,dx
  415ae5:	jecxz  0x415b5d
  415ae7:	add    BYTE PTR [edx-0x6a1edeb0],0x87
  415aee:	fdivr  st,st(7)
  415af0:	sub    DWORD PTR [ebp+0x77e55787],0xb6068555
  415afa:	jno    0x415aee
  415afc:	push   ebp
  415afd:	pop    edi
  415afe:	adc    eax,0xbd3a1f18
  415b03:	adc    bh,BYTE PTR [edi+eiz*2+0x7607a1f2]
  415b0a:	or     esi,DWORD PTR [ebx]
  415b0c:	(bad)  
  415b0d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415b0e:	sub    eax,DWORD PTR [eax+eiz*8+0x2eb05cd3]
  415b15:	stc    
  415b16:	aaa    
  415b17:	outs   dx,BYTE PTR ds:[esi]
  415b18:	mov    cl,0xdb
  415b1a:	pop    ss
  415b1b:	mov    esp,0x832a6f9e
  415b20:	bound  ebx,QWORD PTR [ebp-0x6f]
  415b23:	stc    
  415b24:	jmp    edi
  415b26:	sub    eax,0x2aac4c97
  415b2b:	xor    al,0x73
  415b2d:	push   ecx
  415b2e:	sub    BYTE PTR [ecx],dh
  415b30:	sbb    dh,dl
  415b32:	fdivr  DWORD PTR [ebp+0x4]
  415b35:	jbe    0x415bad
  415b37:	jecxz  0x415b84
  415b39:	popa   
  415b3a:	push   0xffffff8f
  415b3c:	or     eax,0x65406e89
  415b41:	scas   al,BYTE PTR es:[edi]
  415b42:	je     0x415b90
  415b44:	fbld   TBYTE PTR [edi-0x15]
  415b47:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415b48:	icebp  
  415b49:	int    0x4d
  415b4b:	ret    
  415b4c:	cli    
  415b4d:	(bad)
  415b52:	in     eax,dx
  415b53:	retf   0x9ce3
  415b56:	jge    0x415b1c
  415b58:	sbb    BYTE PTR [ebp-0xfe03cba],dh
  415b5e:	nop
  415b5f:	addr16 and eax,0xb0642a48
  415b65:	loopne 0x415b07
  415b67:	sub    eax,0x1a3a933b
  415b6c:	inc    esp
  415b6d:	jo     0x415b0f
  415b6f:	std    
  415b70:	fsincos 
  415b72:	sbb    al,0x5a
  415b74:	or     DWORD PTR [eax+0x42],eax
  415b77:	ss sti 
  415b79:	sbb    DWORD PTR [ecx+0x4c],eax
  415b7c:	ret    
  415b7d:	sbb    ah,BYTE PTR [ecx-0x4badbf9c]
  415b83:	outs   dx,DWORD PTR ds:[esi]
  415b84:	sub    al,0xa8
  415b86:	push   esi
  415b87:	xor    ch,BYTE PTR [edx]
  415b89:	sbb    bh,bh
  415b8b:	dec    ebx
  415b8c:	mov    ch,0xd3
  415b8e:	scas   eax,DWORD PTR es:[edi]
  415b8f:	enter  0xd736,0x7c
  415b93:	mov    esp,edx
  415b95:	mov    eax,0xf2e07938
  415b9a:	inc    edi
  415b9b:	jge    0x415c02
  415b9d:	and    al,0xef
  415b9f:	push   ss
  415ba0:	iret   
  415ba1:	lds    edx,FWORD PTR [edi-0x4b]
  415ba4:	sub    DWORD PTR [esi],ecx
  415ba6:	fisub  WORD PTR [ebx]
  415ba8:	mov    ds:0xf0594eeb,eax
  415bad:	push   si
  415baf:	inc    esp
  415bb0:	jmp    0xa960:0x758d083d
  415bb7:	not    BYTE PTR [esi-0x68]
  415bba:	outs   dx,DWORD PTR ds:[esi]
  415bbb:	mov    dl,0xaf
  415bbd:	or     DWORD PTR [edx+0x5fe99794],ebx
  415bc3:	pop    edx
  415bc4:	ja     0x415c08
  415bc6:	addr16 xchg edx,eax
  415bc8:	arpl   WORD PTR [edi+0x79080872],cx
  415bce:	cwde   
  415bcf:	repnz xor al,0x18
  415bd2:	push   cs
  415bd3:	xchg   ecx,eax
  415bd4:	jno    0x415bc0
  415bd6:	sbb    ecx,DWORD PTR [ecx-0x1032754c]
  415bdc:	xor    al,0x3a
  415bde:	mov    bh,0x69
  415be0:	aad    0x1
  415be2:	xchg   edx,eax
  415be3:	imul   esp,DWORD PTR [edi-0x75],0x53
  415be7:	mov    bh,0xc0
  415be9:	repz xor BYTE PTR [esi],cl
  415bec:	bound  esp,QWORD PTR [esi+0x13]
  415bef:	cld    
  415bf0:	pop    eax
  415bf1:	sbb    ecx,esi
  415bf3:	sahf   
  415bf4:	push   0xffffffce
  415bf6:	bswap  edx
  415bf8:	leave  
  415bf9:	pop    es
  415bfa:	test   BYTE PTR [edi],0x3e
  415bfd:	adc    BYTE PTR [edx-0x492a4f41],cl
  415c03:	out    0x25,eax
  415c05:	and    edi,DWORD PTR [ecx-0x79]
  415c08:	pop    ds
  415c09:	mov    ecx,0xa0f26c39
  415c0e:	mov    ah,0x56
  415c10:	ds xchg esi,eax
  415c12:	retf   0x801a
  415c15:	stc    
  415c16:	icebp  
  415c17:	push   0xb2817926
  415c1c:	jno    0x415c09
  415c1e:	out    0x93,al
  415c20:	aas    
  415c21:	pop    edx
  415c22:	jp     0x415bdb
  415c24:	(bad)  
  415c25:	shl    DWORD PTR [ebp-0x5b],1
  415c28:	arpl   si,di
  415c2a:	mov    bh,0x3d
  415c2c:	lea    esi,[ecx-0xd1c9679]
  415c32:	mov    ds:0x543dabf6,al
  415c37:	js     0x415c72
  415c39:	lods   eax,DWORD PTR ds:[esi]
  415c3a:	gs adc eax,0x64b51bd6
  415c40:	pop    ss
  415c41:	out    dx,al
  415c42:	enter  0x378e,0x99
  415c46:	ret    
  415c47:	mov    WORD PTR [edx+esi*8+0x68412a02],es
  415c4e:	fs cmc 
  415c50:	or     esi,DWORD PTR [ecx-0x6e]
  415c53:	pop    eax
  415c54:	hlt    
  415c55:	je     0x415c48
  415c57:	out    0x9d,al
  415c59:	sbb    BYTE PTR [eax],ah
  415c5b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415c5c:	stos   DWORD PTR es:[edi],eax
  415c5d:	sbb    BYTE PTR [eax-0x5cd1773f],al
  415c63:	stc    
  415c64:	xor    eax,0x19a68867
  415c69:	xor    esi,DWORD PTR [edi+0x29a09c01]
  415c6f:	push   es
  415c70:	les    ecx,FWORD PTR [eax-0x42]
  415c73:	stc    
  415c74:	call   0x6db3:0x3d015c15
  415c7b:	cmc    
  415c7c:	adc    edi,esi
  415c7e:	xor    dh,BYTE PTR [edx]
  415c80:	retf   
  415c81:	dec    ebp
  415c82:	jb     0x415cb3
  415c84:	pop    ebp
  415c85:	outs   dx,BYTE PTR ds:[esi]
  415c86:	cmc    
  415c87:	or     esi,DWORD PTR [eax-0x69]
  415c8a:	jle    0x415c83
  415c8c:	xor    al,0x18
  415c8e:	or     BYTE PTR [ebp+0x7708a930],cl
  415c94:	aaa    
  415c95:	and    al,0x62
  415c97:	std    
  415c98:	cmp    eax,0x5026b0be
  415c9d:	cli    
  415c9e:	loope  0x415c41
  415ca0:	push   edi
  415ca1:	inc    edx
  415ca2:	inc    ebx
  415ca3:	add    BYTE PTR [eax-0xf9622f],bh
  415ca9:	pop    ecx
  415caa:	and    DWORD PTR [ecx],esp
  415cac:	mov    eax,ds:0xdb018f05
  415cb1:	xor    dh,dl
  415cb3:	or     ecx,esp
  415cb5:	mov    BYTE PTR [ebp+0x1904c76a],al
  415cbb:	sbb    eax,0xc03ced2c
  415cc0:	adc    DWORD PTR [ebx+0x6f7b1f33],edx
  415cc6:	or     dl,BYTE PTR [esi-0x5875080d]
  415ccc:	mov    bl,0x7
  415cce:	repz pop ss
  415cd0:	inc    ebp
  415cd1:	and    edi,0x45
  415cd4:	adc    dh,al
  415cd6:	mov    ah,0x31
  415cd8:	add    esp,DWORD PTR [edx-0x70]
  415cdb:	aaa    
  415cdc:	xchg   esi,eax
  415cdd:	push   edx
  415cde:	xchg   DWORD PTR [edi+0x34],edi
  415ce1:	ins    DWORD PTR es:[edi],dx
  415ce2:	call   0x53ce930c
  415ce7:	scas   eax,DWORD PTR es:[edi]
  415ce8:	dec    ecx
  415ce9:	jp     0x415cb4
  415ceb:	test   BYTE PTR [esi+0x322df68a],bl
  415cf1:	pushf  
  415cf2:	(bad)  
  415cf3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415cf4:	dec    ebp
  415cf5:	pop    esp
  415cf6:	adc    DWORD PTR [eax-0x7128f298],edx
  415cfc:	fsubr  QWORD PTR [edx]
  415cfe:	ret    0xe2f2
  415d01:	cmp    BYTE PTR [ecx+esi*8-0x34526d48],dl
  415d08:	mov    ds,WORD PTR [edx]
  415d0a:	iret   
  415d0b:	bound  ebp,QWORD PTR [esi+0x6713e244]
  415d11:	out    dx,eax
  415d12:	adc    BYTE PTR ds:0x68d5680,0x91
  415d19:	push   edi
  415d1a:	bnd jne 0x415d2c
  415d1d:	and    esi,0x3c09bffd
  415d23:	push   0xfffffff0
  415d25:	jno    0x415d62
  415d27:	scas   eax,DWORD PTR es:[edi]
  415d28:	push   ss
  415d29:	sbb    ah,bh
  415d2b:	push   ebx
  415d2c:	jae    0x415cb3
  415d2e:	aaa    
  415d2f:	out    dx,eax
  415d30:	or     ebx,DWORD PTR [ecx-0x32]
  415d33:	daa    
  415d34:	sbb    al,0x4e
  415d36:	daa    
  415d37:	shl    ebx,cl
  415d39:	rol    BYTE PTR [edi-0x64],1
  415d3c:	mov    ah,0x9c
  415d3e:	scas   al,BYTE PTR es:[edi]
  415d3f:	lds    ecx,FWORD PTR [edx]
  415d41:	jo     0x415ce0
  415d43:	out    0xb6,eax
  415d45:	cmp    BYTE PTR [eax-0x19ed959d],ah
  415d4b:	test   al,0x93
  415d4d:	loopne 0x415d1b
  415d4f:	mov    esi,0x4d7e0c66
  415d54:	(bad)  
  415d55:	mov    ch,0xcc
  415d57:	aam    0x8f
  415d59:	(bad)  
  415d5b:	sbb    eax,0xe6c538c0
  415d60:	and    BYTE PTR [eax-0x39ae414e],bl
  415d66:	ins    DWORD PTR es:[edi],dx
  415d67:	pop    ebx
  415d68:	mov    bl,0xde
  415d6a:	dec    eax
  415d6b:	pop    ebp
  415d6c:	test   BYTE PTR [eax-0x12],dh
  415d6f:	xchg   ecx,eax
  415d70:	aaa    
  415d71:	cwde   
  415d72:	adc    eax,0xa2d82280
  415d77:	mov    edx,DWORD PTR [ebp+0x8]
  415d7a:	mov    edi,DWORD PTR [ebp-0x24]
  415d7d:	mov    DWORD PTR [edi+edx*4],eax
  415d80:	mov    eax,DWORD PTR [ebp-0x18]
  415d83:	jmp    0x416067
  415d88:	dec    eax
  415d89:	fistp  QWORD PTR [edx+0x75a9712b]
  415d8f:	arpl   bx,ax
  415d91:	pop    ss
  415d92:	jp     0x415d95
  415d94:	pop    ebx
  415d95:	inc    edi
  415d96:	xor    al,BYTE PTR gs:[ecx-0x468f80f6]
  415d9d:	jle    0x415e0f
  415d9f:	jo     0x415dcc
  415da1:	ds int 0xa0
  415da4:	je     0x415dd4
  415da6:	icebp  
  415da7:	push   ecx
  415da8:	sub    BYTE PTR [ecx],0x5
  415dab:	(bad)  
  415dad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415dae:	dec    eax
  415daf:	lds    ebx,FWORD PTR [ecx-0x5611f426]
  415db5:	sbb    DWORD PTR [ecx],esp
  415db7:	adc    bh,BYTE PTR [edx-0xbc0a87a]
  415dbd:	loope  0x415da9
  415dbf:	int3   
  415dc0:	clc    
  415dc1:	leave  
  415dc2:	dec    esp
  415dc3:	fwait
  415dc4:	call   0x7d09c5a6
  415dc9:	mov    al,ds:0x27b3270e
  415dce:	repz jecxz 0x415e1d
  415dd1:	aam    0xbf
  415dd3:	dec    esp
  415dd4:	bnd je 0x415dfa
  415dd7:	dec    ebx
  415dd8:	inc    WORD PTR ss:[ecx-0x14f3965c]
  415de0:	shl    ch,0x61
  415de3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415de5:	push   ecx
  415de6:	ja     0x415df2
  415de8:	sahf   
  415de9:	mov    eax,0xbe8fc443
  415dee:	mov    edi,0xd67f2f0d
  415df3:	adc    ebx,DWORD PTR [ecx]
  415df5:	test   al,0xed
  415df7:	or     ah,BYTE PTR [edx-0x40fdc650]
  415dfd:	sbb    al,0x82
  415dff:	pop    ss
  415e00:	mov    dh,0x94
  415e02:	push   esp
  415e03:	fsubr  QWORD PTR [ebx]
  415e05:	mov    eax,ds:0x5f95d005
  415e0a:	dec    edx
  415e0b:	call   0xbb57:0x538716db
  415e12:	jne    0x415e65
  415e14:	mov    edx,0x75f818b
  415e19:	addr16 cdq 
  415e1b:	inc    eax
  415e1c:	fs je  0x415de0
  415e1f:	ret    
  415e20:	push   ebp
  415e21:	rcl    BYTE PTR [ebx],cl
  415e23:	xchg   edi,esi
  415e25:	cdq    
  415e26:	gs dec eax
  415e28:	(bad)  
  415e29:	arpl   si,bp
  415e2b:	sbb    DWORD PTR [edx],ecx
  415e2d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415e2e:	call   0xcfe21029
  415e33:	pushf  
  415e34:	scas   eax,DWORD PTR es:[di]
  415e36:	and    BYTE PTR [ebx-0x15],0xb9
  415e3a:	test   DWORD PTR [ebp+0x6a210349],edx
  415e40:	ret    
  415e41:	in     eax,dx
  415e42:	jmp    0x415e74
  415e44:	fs cli 
  415e46:	push   esp
  415e47:	idiv   BYTE PTR [ebx+ebx*1+0xd097381]
  415e4e:	shl    BYTE PTR [eax+eiz*2-0xe],cl
  415e52:	sbb    dl,BYTE PTR [edx-0x24]
  415e55:	push   ebp
  415e56:	and    ebx,DWORD PTR [ebx]
  415e58:	xor    al,0x7f
  415e5a:	pop    esp
  415e5b:	cmp    DWORD PTR [ebp-0x1e19aa43],edx
  415e61:	sub    eax,0x52d7a269
  415e66:	adc    al,0x4e
  415e68:	cld    
  415e69:	ins    DWORD PTR es:[edi],dx
  415e6a:	and    al,0xf0
  415e6c:	adc    BYTE PTR [ebp+0x5aee60f4],ah
  415e72:	push   esi
  415e73:	sbb    al,0x6e
  415e75:	sbb    al,0x21
  415e77:	jg     0x415edf
  415e79:	dec    ebx
  415e7a:	and    al,0x56
  415e7c:	add    ah,BYTE PTR [edi+0x24]
  415e7f:	daa    
  415e80:	fs (bad) 
  415e82:	mov    WORD PTR [edx],cs
  415e84:	jbe    0x415e26
  415e86:	shl    BYTE PTR [ebx],0xb3
  415e89:	jnp    0x415e89
  415e8b:	xchg   edx,eax
  415e8c:	fwait
  415e8d:	xchg   ebp,eax
  415e8e:	icebp  
  415e8f:	adc    cl,BYTE PTR [ecx+0x10]
  415e92:	loope  0x415ea5
  415e94:	stos   DWORD PTR es:[edi],eax
  415e95:	jmp    0x9e0228e1
  415e9a:	leave  
  415e9b:	xlat   BYTE PTR ds:[ebx]
  415e9c:	mov    WORD PTR [ebx],?
  415e9e:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  415ea0:	mov    ah,BYTE PTR [ecx+0x221c49fc]
  415ea6:	xchg   edx,eax
  415ea7:	push   es
  415ea8:	add    BYTE PTR [edx-0x5],cl
  415eab:	xchg   esp,eax
  415eac:	push   ebp
  415ead:	jp     0x415ebe
  415eaf:	jp     0x415eb3
  415eb1:	lods   eax,DWORD PTR ds:[esi]
  415eb2:	into   
  415eb3:	push   ebp
  415eb4:	call   0xd5ba:0x7bc761d7
  415ebb:	fs dec ecx
  415ebd:	inc    ecx
  415ebe:	data16 fcomp QWORD PTR ds:0xda988905
  415ec5:	out    dx,al
  415ec6:	push   ebp
  415ec7:	and    al,0x98
  415ec9:	jns    0x415e8a
  415ecb:	xchg   esi,eax
  415ecc:	icebp  
  415ecd:	fmul   QWORD PTR [edi+0x1fc95627]
  415ed3:	and    BYTE PTR [edx],bh
  415ed5:	sbb    dl,dl
  415ed7:	xchg   edx,edi
  415ed9:	into   
  415eda:	mov    edi,0xece45ede
  415edf:	xor    DWORD PTR [ebx-0x4a697965],eax
  415ee5:	out    0x89,eax
  415ee7:	pop    ebp
  415ee8:	xor    bl,bh
  415eea:	mov    dh,0x90
  415eec:	mov    BYTE PTR [edi],cl
  415eee:	fwait
  415eef:	test   al,0xd4
  415ef1:	jae    0x415eb1
  415ef3:	shr    BYTE PTR [ecx-0x25],1
  415ef6:	mov    eax,0xb61bc2d9
  415efb:	aaa    
  415efc:	add    DWORD PTR [ebp+0x2b102047],eax
  415f02:	mov    al,0x9e
  415f04:	mov    al,0xdc
  415f06:	cmp    DWORD PTR [ebx],0xffffffca
  415f09:	pop    ecx
  415f0a:	xor    DWORD PTR ds:0x35eac325,ecx
  415f10:	(bad)  
  415f11:	adc    ah,BYTE PTR [ebp-0x3ac2437b]
  415f17:	(bad)  
  415f1a:	xor    dl,BYTE PTR [ecx]
  415f1c:	sbb    edi,ebp
  415f1e:	mov    DWORD PTR [edx+0x2ad3ff38],ebp
  415f24:	cmp    eax,0x489c0d9d
  415f29:	and    al,0x2e
  415f2b:	fld    TBYTE PTR [edi+0xb206b23]
  415f31:	jecxz  0x415f24
  415f33:	pop    ebp
  415f34:	outs   dx,BYTE PTR ds:[esi]
  415f35:	fcomip st,st(2)
  415f37:	iret   
  415f38:	dec    esi
  415f39:	in     eax,dx
  415f3a:	(bad)  
  415f3b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415f3c:	xor    ch,BYTE PTR [edi+0x29]
  415f3f:	mov    ah,0x43
  415f41:	mov    ebp,DWORD PTR [eax]
  415f43:	mov    ah,0x6e
  415f45:	stc    
  415f46:	pop    edi
  415f47:	mov    WORD PTR [edi+0x73],fs
  415f4a:	add    BYTE PTR [ebp+0x535c5521],0x9
  415f51:	mov    edi,0xcf1c2165
  415f56:	sub    ebp,DWORD PTR [ebx-0x62]
  415f59:	div    BYTE PTR [ebp+ebp*8-0x2286b152]
  415f60:	sbb    eax,0xaf179eac
  415f65:	ret    0x8847
  415f68:	stos   BYTE PTR es:[edi],al
  415f69:	into   
  415f6a:	imul   edx,ebp,0xffffffb8
  415f6d:	cmp    DWORD PTR [ecx],eax
  415f6f:	push   cs
  415f70:	data16 setg BYTE PTR [eax+0x4f16bdaf]
  415f78:	out    0x20,eax
  415f7a:	neg    BYTE PTR [ebp-0x33b1a5a5]
  415f80:	add    dh,ch
  415f82:	loope  0x415fcb
  415f84:	push   edi
  415f85:	icebp  
  415f86:	loop   0x415f0e
  415f88:	fs das 
  415f8a:	lea    esi,[ebp+0x1f]
  415f8d:	mov    bh,0x6d
  415f8f:	inc    ecx
  415f90:	int    0xee
  415f92:	inc    edi
  415f93:	add    DWORD PTR [eax],ecx
  415f95:	popf   
  415f96:	adc    eax,0xf9acc488
  415f9b:	sbb    DWORD PTR [ebp+0x2a],edx
  415f9e:	nop
  415f9f:	push   0x6ae9edcd
  415fa4:	and    al,0x57
  415fa6:	pop    es
  415fa7:	adc    BYTE PTR ds:0x889c4390,dh
  415fad:	cmp    bl,dl
  415faf:	mov    BYTE PTR [esp+ebp*4-0x8933010],al
  415fb6:	rcr    BYTE PTR [esi],0xa
  415fb9:	pop    es
  415fba:	cmp    dl,ch
  415fbc:	in     eax,dx
  415fbd:	data16 mov ch,BYTE PTR [ecx-0x19024446]
  415fc4:	mov    BYTE PTR [eax],dl
  415fc6:	mov    ebx,0x8f8af4e
  415fcb:	adc    ebp,esi
  415fcd:	xchg   esp,eax
  415fce:	xchg   edi,eax
  415fcf:	neg    BYTE PTR [esi+ebp*2-0xc]
  415fd3:	pop    es
  415fd4:	fs addr16 (bad) 
  415fd7:	stc    
  415fd8:	not    BYTE PTR [esi]
  415fda:	inc    edi
  415fdb:	mov    bh,0x36
  415fdd:	jmp    0x416046
  415fdf:	in     al,dx
  415fe0:	and    edx,DWORD PTR [ebx-0x33a4ca8b]
  415fe6:	push   cs
  415fe7:	push   ebx
  415fe8:	not    BYTE PTR [ebx+0x2]
  415feb:	xchg   edi,eax
  415fec:	sbb    BYTE PTR [esi],0xc5
  415fef:	jno    0x415fac
  415ff1:	inc    esi
  415ff2:	lods   eax,DWORD PTR ds:[esi]
  415ff3:	or     ebx,DWORD PTR [ecx*4-0x4b3b8245]
  415ffa:	inc    edi
  415ffb:	cmp    DWORD PTR [ebp*2+0x24f700d8],0x75
  416003:	cld    
  416004:	inc    eax
  416005:	out    0x81,eax
  416007:	pop    esp
  416008:	fidiv  WORD PTR [ebx-0x5d]
  41600b:	lods   eax,DWORD PTR ds:[esi]
  41600c:	imul   DWORD PTR [ebx+0x1f]
  41600f:	jle    0x415ffe
  416011:	loopne 0x415fc2
  416013:	out    0x13,al
  416015:	repz cmp BYTE PTR [edi],ch
  416018:	(bad)  
  416019:	aad    0xcd
  41601b:	lds    edx,FWORD PTR [edx-0x26d346cc]
  416021:	test   BYTE PTR [esi],al
  416023:	(bad)  [esi+edi*2-0x76881bce]
  41602a:	adc    al,0x39
  41602c:	push   ecx
  41602d:	cs pushf 
  41602f:	fidiv  DWORD PTR [esi+0x2a]
  416032:	mov    dl,0x2a
  416034:	inc    esp
  416035:	in     al,0x34
  416037:	pop    eax
  416038:	in     al,0xcb
  41603a:	call   0x65faa760
  41603f:	js     0x415ffa
  416041:	fistp  QWORD PTR [edx-0x5c]
  416045:	xchg   esp,eax
  416046:	or     edi,DWORD PTR [ebx+0x7e504e93]
  41604c:	jp     0x4160b0
  41604e:	out    dx,eax
  41604f:	gs fmul st(4),st
  416052:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416053:	lods   al,BYTE PTR ds:[esi]
  416054:	dec    esi
  416055:	push   0x45
  416057:	mov    ds,esp
  416059:	pop    es
  41605a:	mov    eax,ds:0xa4ae0fe8
  41605f:	bound  esi,QWORD PTR [ebx]
  416061:	push   cs
  416062:	dec    esp
  416063:	cmp    al,0x9e
  416065:	sub    BYTE PTR [esi-0x75],0x55
  416069:	or     BYTE PTR [ebx],dh
  41606b:	ror    DWORD PTR [ebp+0x729c1084],0x32
  416072:	add    BYTE PTR [ecx+0x458b0845],cl
  416078:	call   0x3355b608
  41607d:	rol    DWORD PTR [ebx],0xc6
  416080:	imul   eax,DWORD PTR [edx]
  416083:	mov    edx,DWORD PTR [ebp-0x4]
  416086:	xor    edx,ecx
  416088:	jmp    0x41636c
  41608d:	adc    ecx,DWORD PTR [edx]
  41608f:	iret   
  416090:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416091:	aad    0x61
  416093:	jae    0x41603f
  416095:	jl     0x4160ed
  416097:	cs jge 0x4160e4
  41609a:	or     DWORD PTR [bx+di-0x36],edx
  41609e:	pop    ss
  41609f:	jg     0x416111
  4160a1:	mov    ecx,0x9970707e
  4160a6:	xchg   esp,eax
  4160a7:	sbb    ch,BYTE PTR [ebx]
  4160a9:	shl    BYTE PTR [esi-0x29],1
  4160ac:	jle    0x41608a
  4160ae:	iret   
  4160af:	jg     0x416128
  4160b1:	loopne 0x41605a
  4160b3:	scas   eax,DWORD PTR es:[edi]
  4160b4:	and    eax,0xeac45775
  4160b9:	mov    eax,ecx
  4160bb:	(bad)  
  4160bd:	rcr    BYTE PTR [edx+ebx*1],1
  4160c0:	nop
  4160c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4160c2:	icebp  
  4160c3:	sahf   
  4160c4:	test   eax,0x578d40ca
  4160c9:	adc    BYTE PTR [ecx-0x321e3a59],ch
  4160cf:	inc    esi
  4160d0:	inc    esi
  4160d1:	es retf 
  4160d3:	adc    BYTE PTR [edi],0x7f
  4160d6:	adc    BYTE PTR ds:0x43179cff,bl
  4160dc:	adc    al,0x6e
  4160de:	dec    edi
  4160df:	sar    DWORD PTR [edx+ebp*2-0x7ffeef81],cl
  4160e6:	test   BYTE PTR [edi+0x616e8fe7],al
  4160ec:	add    BYTE PTR [esi+0x58],dl
  4160ef:	mov    esp,0x404bc63d
  4160f4:	pop    ebx
  4160f5:	shl    BYTE PTR [edi-0x74],0xbe
  4160f9:	daa    
  4160fa:	sub    esi,DWORD PTR ds:0x47385040
  416100:	jmp    0x7a6e:0xbaa981bb
  416107:	jp     0x41614e
  416109:	inc    esi
  41610a:	das    
  41610b:	mov    al,al
  41610d:	stos   DWORD PTR es:[edi],eax
  41610e:	test   BYTE PTR [esi+0x61],0x28
  416112:	jp     0x416111
  416114:	mov    eax,0x43bdca03
  416119:	or     eax,DWORD PTR [edi-0x56e32e9e]
  41611f:	lods   al,BYTE PTR ds:[esi]
  416120:	daa    
  416121:	cmp    dh,bl
  416123:	or     DWORD PTR ds:0xe155da7,esp
  416129:	test   eax,0xc1cac90
  41612e:	inc    esp
  41612f:	pop    esp
  416130:	cmp    bh,BYTE PTR [esi-0x6eeeed27]
  416136:	shl    BYTE PTR [eax+0x2131b902],1
  41613c:	leave  
  41613d:	or     BYTE PTR [ecx+edx*8-0x62],0xb2
  416142:	in     al,0x84
  416144:	xor    DWORD PTR [ecx-0x13c5e0c3],ebx
  41614a:	loope  0x416118
  41614c:	ins    BYTE PTR es:[edi],dx
  41614d:	or     ah,BYTE PTR [ecx-0x4e64b0b7]
  416153:	jnp    0x4161c1
  416155:	in     al,dx
  416156:	rdmsr  
  416158:	ficom  DWORD PTR [esi+0x77478b55]
  41615e:	or     ebp,ecx
  416160:	stos   DWORD PTR es:[edi],eax
  416161:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416162:	dec    ecx
  416163:	pop    edi
  416164:	sahf   
  416165:	bound  ebx,QWORD PTR [eax+ebx*8+0x6d]
  416169:	xor    esp,esp
  41616b:	repnz xchg ebp,eax
  41616d:	js     0x416143
  41616f:	sar    BYTE PTR [esi*1-0x2f01068f],cl
  416176:	pop    esi
  416177:	pushf  
  416178:	popf   
  416179:	jmp    0xf1b36e27
  41617e:	ins    BYTE PTR es:[edi],dx
  41617f:	inc    edx
  416180:	fidivr DWORD PTR [ebp+0x4216bbee]
  416186:	cmc    
  416187:	dec    esi
  416188:	xchg   ebp,eax
  416189:	dec    edx
  41618a:	jo     0x4161d3
  41618c:	jge    0x4161b5
  41618e:	repnz sub ebp,DWORD PTR [esi+0x4cbd5dce]
  416195:	(bad)  [edx]
  416197:	sbb    BYTE PTR [edi],dl
  416199:	out    dx,al
  41619a:	adc    ah,BYTE PTR [ecx-0x29]
  41619d:	add    DWORD PTR [esi+0x24b5bc3d],esp
  4161a3:	stos   DWORD PTR es:[edi],eax
  4161a4:	xchg   cl,bh
  4161a6:	bound  esp,QWORD PTR [esi-0x4d1b2c42]
  4161ac:	jno    0x4161fa
  4161ae:	cmp    BYTE PTR [ebx+0x23],0x3d
  4161b2:	js     0x416156
  4161b4:	jno    0x4161b3
  4161b6:	mov    ch,0x1c
  4161b8:	scas   al,BYTE PTR es:[edi]
  4161b9:	mov    eax,DWORD PTR [edi+0x55]
  4161bc:	test   al,0x9b
  4161be:	sub    eax,0x25d75aa0
  4161c3:	test   al,0x45
  4161c5:	cmp    al,0x73
  4161c7:	sub    BYTE PTR [edi-0x5f457a90],dh
  4161cd:	clc    
  4161ce:	call   0xf310:0x71ca0eb9
  4161d5:	cmp    DWORD PTR [ecx],esp
  4161d7:	mov    DWORD PTR [ebp+0x25],ecx
  4161da:	mov    ds:0x2964f7c6,eax
  4161df:	pop    ebp
  4161e0:	mov    al,ds:0x37b37c22
  4161e5:	ins    DWORD PTR es:[edi],dx
  4161e6:	cmp    bl,dh
  4161e8:	aad    0xea
  4161ea:	adc    eax,0xcb508272
  4161ef:	loop   0x416174
  4161f1:	cmp    edx,ecx
  4161f3:	dec    ebx
  4161f4:	cdq    
  4161f5:	div    DWORD PTR [eax]
  4161f7:	idiv   edi
  4161f9:	dec    ecx
  4161fa:	pop    eax
  4161fb:	test   BYTE PTR [ebp-0x63],ah
  4161fe:	dec    edi
  4161ff:	fistp  QWORD PTR [esi+0xa]
  416202:	(bad)  
  416203:	mov    ah,0xcf
  416205:	sub    ah,BYTE PTR [eax]
  416207:	fild   WORD PTR [edx+0x50921037]
  41620d:	jae    0x416203
  41620f:	adc    BYTE PTR [edx],dh
  416211:	shl    DWORD PTR [esi+0x5c1e8049],1
  416217:	jno    0x41622b
  416219:	addr16 test eax,0x1f206aa7
  41621f:	cmp    al,0x92
  416221:	imul   ecx,DWORD PTR [esi],0x1312c5a4
  416227:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416228:	push   eax
  416229:	dec    ebp
  41622a:	or     ebx,DWORD PTR [edi-0x7c16ecbe]
  416230:	or     DWORD PTR [esi-0x24],eax
  416233:	or     eax,0x118be807
  416238:	in     al,dx
  416239:	inc    eax
  41623a:	push   ebp
  41623b:	sbb    cl,BYTE PTR [ecx+0x34]
  41623e:	add    DWORD PTR [eax+esi*2],edx
  416241:	out    dx,eax
  416242:	adc    dh,BYTE PTR [ebx-0x4f]
  416245:	mov    ecx,0x4d3630ab
  41624a:	or     DWORD PTR [eax],ebx
  41624c:	mov    esp,0xf81a83ee
  416251:	out    dx,al
  416252:	xchg   ecx,eax
  416253:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416254:	js     0x4161ef
  416256:	ds mov ah,0xc
  416259:	adc    eax,0x89b43dbe
  41625e:	mov    eax,0xc83fdda5
  416263:	out    0x37,al
  416265:	fdiv   st,st(4)
  416267:	enter  0x83ba,0x4b
  41626b:	xchg   esp,eax
  41626c:	mov    ds:0x99900d0,al
  416271:	sub    al,0x5f
  416273:	jb     0x4162bb
  416275:	cmp    al,0x1e
  416277:	dec    edi
  416278:	sbb    eax,0x9f6c1c5b
  41627d:	dec    esp
  41627e:	mov    ah,0xfd
  416280:	xchg   ecx,eax
  416281:	imul   eax,DWORD PTR [eax-0x34],0x12e0a7c5
  416288:	sub    esi,DWORD PTR [ebp+0x7f]
  41628b:	lahf   
  41628c:	and    dh,bl
  41628e:	push   ebp
  41628f:	inc    ebx
  416290:	dec    ebp
  416291:	pop    edi
  416292:	neg    DWORD PTR [ecx]
  416294:	jns    0x416281
  416296:	xchg   ebp,eax
  416297:	aas    
  416298:	fcom   QWORD PTR [ebx]
  41629a:	add    BYTE PTR [eax+0x17],ah
  41629d:	pushf  
  41629e:	pop    edi
  41629f:	pushf  
  4162a0:	push   esp
  4162a1:	and    al,0x8d
  4162a3:	je     0x4162eb
  4162a5:	mov    bl,0x26
  4162a7:	out    0x92,al
  4162a9:	dec    edx
  4162aa:	call   0xedeb98fc
  4162af:	mov    ecx,0xb6ad0c24
  4162b4:	push   edi
  4162b5:	inc    ebp
  4162b6:	mov    edi,0xb6a5e1eb
  4162bb:	mov    ecx,0x3b1d9507
  4162c0:	in     al,0x73
  4162c2:	sbb    eax,DWORD PTR [esi+0x253eb024]
  4162c8:	aaa    
  4162c9:	int    0x18
  4162cb:	add    ah,BYTE PTR [edx-0x17]
  4162ce:	fucomip st,st(5)
  4162d0:	xor    eax,0x622eb80a
  4162d5:	arpl   WORD PTR [ebp+0x7c5aef38],bx
  4162db:	stos   DWORD PTR es:[edi],eax
  4162dc:	lods   al,BYTE PTR ds:[esi]
  4162de:	(bad)  
  4162df:	adc    DWORD PTR gs:[edi+0x12],esp
  4162e3:	xchg   ecx,eax
  4162e4:	ret    0x47e0
  4162e7:	mov    edi,0xe28b613c
  4162ec:	jo     0x416277
  4162ee:	test   eax,0x7895bf59
  4162f3:	jo     0x416316
  4162f5:	sti    
  4162f6:	dec    ebx
  4162f7:	adc    eax,0xf7dd8a78
  4162fc:	cmp    al,0xd9
  4162fe:	in     eax,0x94
  416300:	mov    bl,0x94
  416302:	cld    
  416303:	lods   al,BYTE PTR ds:[esi]
  416304:	shl    BYTE PTR [edx-0x55bf04d3],0x7e
  41630b:	ds sbb ebp,eax
  41630e:	mov    dl,0x30
  416310:	dec    ebx
  416311:	mov    ah,0xe6
  416313:	lahf   
  416314:	push   esp
  416315:	jge    0x4162ea
  416317:	ja     0x416314
  416319:	ss mov ch,0xc7
  41631c:	dec    edx
  41631d:	mov    bh,0xc
  416320:	add    al,0x92
  416322:	out    0xf4,eax
  416324:	cmp    DWORD PTR [eax+0x4c5f0c01],eax
  41632a:	mov    es,edx
  41632c:	push   ebp
  41632d:	jae    0x416362
  41632f:	in     eax,dx
  416330:	aas    
  416331:	pop    ebp
  416332:	and    edx,DWORD PTR [ecx+0x467a3818]
  416338:	mov    esi,0x72ce7214
  41633d:	aad    0xed
  41633f:	(bad)  
  416341:	(bad)  
  416342:	jmp    0xd0f0:0x77b09291
  416349:	mov    ch,0xe3
  41634b:	mov    WORD PTR [ebx-0x7c],fs
  41634e:	or     al,0x4
  416350:	fst    QWORD PTR [edx+ecx*4+0x22ab4afd]
  416357:	pop    ss
  416358:	mov    al,ds:0x56c4ab5b
  41635d:	fst    DWORD PTR [edi-0xa895846]
  416363:	ret    0xf41c
  416366:	ror    BYTE PTR [esi+0x11384f9d],1
  41636c:	mov    ecx,DWORD PTR [ebp+0x8]
  41636f:	lea    ecx,[edx+ecx*1+0x32729c]
  416376:	cmp    ecx,eax
  416378:	jne    0x4154a0
  41637e:	mov    ebx,esi
  416380:	jmp    0x41638a
  416385:	mov    ebx,0x32729c
  41638a:	mov    eax,DWORD PTR [ebp-0x4]
  41638d:	xor    eax,0x7510855
  416392:	add    eax,ebx
  416394:	mov    DWORD PTR [ebp-0xc],eax
  416397:	xor    ebx,ebx
  416399:	lea    eax,[ebp-0x10]
  41639c:	add    ebx,DWORD PTR [eax]
  41639e:	call   ebx
  4163a0:	xor    ebx,ebx
  4163a2:	inc    ebx
  4163a3:	cmp    DWORD PTR [ebp+0x10],ebx
  4163a6:	je     0x416f54
  4163ac:	jmp    0x416690
  4163b1:	or     al,0x9a
  4163b3:	shl    DWORD PTR [esi],1
  4163b5:	jno    0x41642c
  4163b7:	jmp    0x41636b
  4163b9:	lds    ecx,FWORD PTR ds:0xcab0c841
  4163bf:	sbb    BYTE PTR [edi+0x707f1413],dh
  4163c5:	mov    ecx,0xc070707e
  4163ca:	fldcw  WORD PTR [esi+0x55a5bf9e]
  4163d0:	retf   
  4163d1:	loop   0x4163c6
  4163d3:	mov    es,ebp
  4163d5:	addr16 mov ch,0xf8
  4163d8:	aam    0x76
  4163da:	pop    ss
  4163db:	rcr    DWORD PTR [ecx+eiz*8-0x31],1
  4163df:	ja     0x416432
  4163e1:	(bad)  
  4163e2:	jp     0x4163e4
  4163e4:	pop    esp
  4163e5:	rcl    BYTE PTR [ecx+0x7389bfed],0x32
  4163ec:	mov    al,ds:0x73b5cfd7
  4163f1:	and    eax,0xf788e194
  4163f6:	shl    DWORD PTR [ebx+0x6a],1
  4163f9:	pop    ss
  4163fa:	dec    ebp
  4163fb:	or     al,0xdb
  4163fd:	test   BYTE PTR [ecx],ch
  4163ff:	repz mov ecx,0x6cec6b1a
  416405:	in     eax,dx
  416406:	mov    eax,0x3350d726
  41640b:	jno    0x4163d8
  41640d:	or     esp,DWORD PTR [eax-0x708e180]
  416413:	mov    ecx,0x81ddad79
  416418:	xor    eax,0xf4fcdfdf
  41641d:	push   0x61431efb
  416422:	cmp    bh,bl
  416424:	jg     0x41644e
  416426:	jbe    0x41640e
  416428:	mov    dl,0x9f
  41642a:	(bad)  
  41642b:	lods   al,BYTE PTR ds:[esi]
  41642c:	mov    edi,0x8193624
  416431:	nop
  416432:	aas    
  416433:	in     eax,0x67
  416435:	add    eax,0xe2326839
  41643a:	push   cs
  41643b:	inc    edx
  41643c:	jb     0x4164a6
  41643e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41643f:	pop    es
  416440:	or     ah,BYTE PTR [edx-0x6f6f264b]
  416446:	sbb    eax,0xace98391
  41644b:	xchg   esi,eax
  41644c:	dec    eax
  41644d:	adc    ch,0xff
  416450:	inc    eax
  416451:	xchg   ecx,eax
  416452:	into   
  416453:	pushf  
  416454:	fisttp DWORD PTR [esi+0x2aa85afa]
  41645a:	inc    esp
  41645b:	and    dl,BYTE PTR [edi]
  41645d:	ja     0x416480
  41645f:	lahf   
  416460:	call   0x22a2:0x804c6113
  416467:	pop    ds
  416468:	(bad)  
  416469:	mov    dl,0xc2
  41646b:	xchg   ecx,eax
  41646c:	outs   dx,BYTE PTR ds:[esi]
  41646d:	frstor [ecx]
  41646f:	xchg   BYTE PTR [edx-0x42d8060e],dl
  416475:	pushf  
  416476:	and    DWORD PTR gs:[eax-0x7f90b37b],ebx
  41647d:	sbb    BYTE PTR [esi+ebp*2-0x21bc8dbb],bh
  416484:	sub    BYTE PTR [esi],ch
  416486:	sub    al,0x12
  416488:	(bad)  
  416489:	pop    ebp
  41648a:	xchg   ebx,eax
  41648b:	lds    esp,FWORD PTR [ebx-0x71]
  41648e:	call   DWORD PTR [ebx-0x13]
  416491:	pop    edi
  416492:	pop    ebx
  416493:	out    0x80,al
  416495:	repnz jmp 0x6ee:0xba773d2b
  41649d:	lods   eax,DWORD PTR ds:[esi]
  41649e:	scas   eax,DWORD PTR es:[edi]
  41649f:	push   0x2c3f51ad
  4164a4:	adc    BYTE PTR [esi+0x11],bh
  4164a7:	not    BYTE PTR [edi-0x29]
  4164aa:	or     eax,DWORD PTR [eax-0x65]
  4164ad:	add    BYTE PTR [esi],ch
  4164af:	inc    edx
  4164b0:	ficomp DWORD PTR [ebx]
  4164b2:	in     al,dx
  4164b3:	test   al,0x62
  4164b5:	pop    edx
  4164b6:	sti    
  4164b7:	in     al,dx
  4164b8:	mov    fs,WORD PTR [ecx+0x3e]
  4164bb:	(bad)  
  4164bc:	cmp    BYTE PTR [ecx-0x73],dh
  4164bf:	or     eax,ebp
  4164c1:	push   ebp
  4164c2:	pop    ebx
  4164c3:	inc    ecx
  4164c4:	(bad)  
  4164c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4164c6:	mov    al,0x4b
  4164c8:	bound  edx,QWORD PTR [edx]
  4164ca:	int    0x98
  4164cc:	sti    
  4164cd:	pop    es
  4164ce:	scas   eax,DWORD PTR es:[edi]
  4164cf:	xchg   cl,cl
  4164d1:	adc    esi,DWORD PTR [esp+ecx*8-0x4ef6a269]
  4164d8:	in     al,dx
  4164d9:	outs   dx,BYTE PTR ds:[esi]
  4164da:	cdq    
  4164db:	xrelease xchg BYTE PTR [edx+0x2d48ffc6],dh
  4164e2:	scas   eax,DWORD PTR es:[edi]
  4164e3:	jne    0x416530
  4164e5:	jbe    0x4164bb
  4164e7:	xor    DWORD PTR [eax+0x3881040],esi
  4164ed:	jae    0x4164ad
  4164ef:	adc    edi,ecx
  4164f1:	mov    bh,0xd
  4164f3:	int3   
  4164f4:	clc    
  4164f5:	(bad)  
  4164f6:	adc    eax,0x7f513526
  4164fb:	daa    
  4164fc:	repz xlat BYTE PTR ds:[ebx]
  4164fe:	push   ebp
  4164ff:	xchg   DWORD PTR [eax+0x10476e3c],edx
  416505:	sbb    BYTE PTR [edi+0x2bb1f078],bh
  41650b:	fidivr WORD PTR [eax-0x64]
  41650e:	inc    ebp
  41650f:	xchg   esi,eax
  416510:	mov    dh,0x4b
  416512:	ins    DWORD PTR es:[edi],dx
  416513:	rcl    DWORD PTR [eax],0x7c
  416516:	jbe    0x416523
  416518:	sbb    eax,0xf3cfbb15
  41651d:	js     0x41650e
  41651f:	xor    ecx,eax
  416521:	mov    ch,0x3d
  416523:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416524:	sub    eax,0xa3615222
  416529:	dec    edx
  41652a:	sbb    ch,BYTE PTR [ebx+0x71d6d62c]
  416530:	sub    BYTE PTR [edi+0x4ba20603],ch
  416536:	pop    edi
  416537:	out    dx,al
  416538:	xor    BYTE PTR [edi-0x21ff5160],0x4d
  41653f:	loop   0x416575
  416541:	pop    ds
  416542:	add    cl,bh
  416544:	and    edi,esi
  416546:	call   0x22d7f516
  41654b:	into   
  41654c:	or     cl,dl
  41654e:	sub    BYTE PTR [ebx],0xe4
  416551:	dec    edi
  416552:	(bad)  
  416553:	push   cs
  416554:	retf   0x9feb
  416557:	and    DWORD PTR ds:0xe77f49f,edi
  41655d:	(bad)
  416560:	call   0xf26f:0xeb911fce
  416567:	or     esp,edi
  416569:	push   es
  41656a:	xchg   ebx,eax
  41656b:	into   
  41656c:	in     eax,0xc
  41656e:	aad    0x16
  416570:	std    
  416571:	jb     0x416584
  416573:	out    dx,eax
  416574:	inc    eax
  416575:	cmp    DWORD PTR [edx],ecx
  416577:	mov    ebx,0x22bf420
  41657c:	bound  eax,QWORD PTR [ebp+0xf1e1eb5]
  416582:	jnp    0x41656f
  416584:	ins    DWORD PTR es:[edi],dx
  416585:	mov    eax,0x60c5b3cf
  41658a:	mov    eax,ds:0x7e380045
  41658f:	int3   
  416590:	scas   eax,DWORD PTR es:[edi]
  416591:	mov    dl,BYTE PTR [ebx+0x3b]
  416594:	sbb    ch,BYTE PTR [ebx]
  416596:	shl    eax,0x8e
  416599:	dec    eax
  41659a:	push   esp
  41659b:	add    dl,BYTE PTR [edi]
  41659d:	aaa    
  41659e:	sbb    DWORD PTR [ecx-0x56],ecx
  4165a1:	sbb    eax,0x88da16ae
  4165a6:	pop    es
  4165a7:	xchg   edi,eax
  4165a8:	pusha  
  4165a9:	xor    DWORD PTR [edx-0x59],eax
  4165ac:	xchg   ebx,eax
  4165ad:	push   ss
  4165ae:	cwde   
  4165af:	arpl   WORD PTR [ebp+0x7796de7f],bp
  4165b5:	and    BYTE PTR [eax+0x30f1d2e0],0x9b
  4165bc:	inc    ebx
  4165bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4165be:	je     0x4165b9
  4165c0:	cmp    al,0xd5
  4165c2:	sub    eax,0xff98ff14
  4165c7:	call   0xef9d:0xdb08d26
  4165ce:	jno    0x416625
  4165d0:	and    ebp,eax
  4165d2:	mov    eax,ds:0x7fd37847
  4165d7:	icebp  
  4165d8:	inc    edi
  4165d9:	or     al,0x75
  4165db:	aad    0xc7
  4165dd:	jmp    0x130f:0xa8168b30
  4165e4:	fnsave [esi]
  4165e6:	rcr    DWORD PTR [ecx],cl
  4165e8:	lods   al,BYTE PTR ds:[esi]
  4165e9:	adc    DWORD PTR [esi-0x72a5c758],esp
  4165ef:	pop    esp
  4165f0:	ja     0x4165b0
  4165f2:	cmp    DWORD PTR [edi-0x7b],ecx
  4165f5:	repnz push ss
  4165f7:	push   ebp
  4165f8:	fwait
  4165f9:	xor    eax,0x1a0d5efd
  4165fe:	pop    ecx
  4165ff:	cdq    
  416600:	jle    0x4165a1
  416602:	aad    0xe3
  416604:	mov    ds:0xe5d7def6,al
  416609:	pop    ecx
  41660a:	pop    edi
  41660b:	cmp    dh,0x19
  41660e:	adc    eax,0x98aa6414
  416613:	sbb    ah,ah
  416615:	mov    bh,BYTE PTR [ebx-0x17]
  416618:	stc    
  416619:	mov    ds:0xebd1ac69,al
  41661e:	push   ecx
  41661f:	scas   eax,DWORD PTR es:[edi]
  416620:	push   cs
  416621:	imul   edi,DWORD PTR [ecx-0x1c],0xffffffea
  416625:	aas    
  416626:	inc    ebx
  416627:	(bad)  
  416629:	xchg   ecx,eax
  41662a:	leave  
  41662b:	dec    ebx
  41662c:	repz fdivr st(4),st
  41662f:	sar    bh,1
  416631:	std    
  416632:	out    dx,eax
  416633:	sub    dl,BYTE PTR [ebx]
  416635:	rcr    DWORD PTR [ecx],1
  416637:	aas    
  416638:	pop    ebp
  416639:	xor    eax,0x17340901
  41663e:	inc    edx
  41663f:	sbb    DWORD PTR [esi],esp
  416641:	push   ds
  416642:	nop
  416643:	or     eax,0xb81dbb6d
  416648:	je     0x416615
  41664a:	pusha  
  41664b:	jae    0x416613
  41664d:	adc    al,0xb4
  41664f:	adc    DWORD PTR [edx+0x73],edx
  416652:	into   
  416653:	inc    ebx
  416654:	lock nop
  416656:	mov    ch,BYTE PTR [edi+0x1]
  416659:	adc    eax,0x98e4064a
  41665e:	mov    ah,0x2b
  416660:	mov    ds:0x25680c3a,al
  416665:	mov    ds:0xfc90f354,eax
  41666a:	and    DWORD PTR [esi-0x1e],ebp
  41666d:	jmp    0x98a60b27
  416672:	outs   dx,BYTE PTR ds:[esi]
  416673:	push   cs
  416674:	jle    0x41665b
  416676:	arpl   WORD PTR [eax+0x64],bp
  416679:	in     al,0x24
  41667b:	iret   
  41667c:	add    ah,dh
  41667e:	jle    0x4166a4
  416680:	popa   
  416681:	daa    
  416682:	ret    0x4fe9
  416685:	push   es
  416686:	inc    eax
  416687:	xor    al,0x82
  416689:	and    BYTE PTR [esi-0x6a],0xb1
  41668d:	mov    eax,0x6a9239ed
  416692:	or     bl,BYTE PTR [ecx+0x6a]
  416695:	add    al,0x5b
  416697:	inc    ebx
  416698:	xchg   ebx,ecx
  41669a:	sub    ebx,ecx
  41669c:	jmp    0x416980
  4166a1:	cmc    
  4166a2:	icebp  
  4166a3:	retf   
  4166a4:	mov    ebp,0x717165cb
  4166a9:	test   BYTE PTR [ebx-0x79],dl
  4166ac:	jnp    0x4166a9
  4166ae:	fiadd  DWORD PTR [eax]
  4166b0:	popa   
  4166b1:	pop    esp
  4166b2:	adc    bh,BYTE PTR [edi+0x70]
  4166b5:	mov    ecx,0x6070707e
  4166ba:	scas   al,BYTE PTR es:[edi]
  4166bb:	lahf   
  4166bc:	inc    ebx
  4166bd:	mov    edx,0x2f1d4199
  4166c2:	das    
  4166c3:	push   edx
  4166c4:	pop    ecx
  4166c5:	jo     0x416664
  4166c7:	gs dec edx
  4166c9:	or     al,0xd4
  4166cb:	inc    esp
  4166cc:	das    
  4166cd:	mov    ebx,0x5165688
  4166d2:	xor    eax,0x71e5e6ef
  4166d7:	sahf   
  4166d8:	add    al,0x7a
  4166da:	mov    ds:0xac4190e,eax
  4166df:	sub    bl,BYTE PTR [ecx-0x60]
  4166e2:	scas   al,BYTE PTR es:[edi]
  4166e3:	xchg   ecx,eax
  4166e4:	lods   eax,DWORD PTR ds:[esi]
  4166e5:	sti    
  4166e6:	iret   
  4166e7:	push   ecx
  4166e8:	mov    ah,0x48
  4166ea:	pushf  
  4166eb:	push   ss
  4166ec:	mov    ebx,0x79e7840f
  4166f1:	das    
  4166f2:	cmp    DWORD PTR [eax],edx
  4166f4:	hlt    
  4166f5:	sub    ah,dl
  4166f7:	in     eax,0x5c
  4166f9:	into   
  4166fa:	and    esp,ecx
  4166fc:	inc    ecx
  4166fd:	jge    0x416729
  4166ff:	popf   
  416700:	and    eax,ebx
  416702:	push   cs
  416703:	push   esi
  416704:	imul   ebx,DWORD PTR [esi-0x7a08ccce],0x6f
  41670b:	mov    eax,ds:0xd4053305
  416710:	jg     0x4166cd
  416712:	(bad)  
  416713:	mov    al,0x2e
  416715:	sub    BYTE PTR [edx+eiz*8],ch
  416718:	or     DWORD PTR [edx-0x2d],esp
  41671b:	fnstenv [esi]
  41671d:	xor    eax,ecx
  41671f:	cmp    eax,0xe4cc3d1
  416724:	fld    st(2)
  416726:	repz test DWORD PTR [ecx],esp
  416729:	push   ss
  41672a:	mov    eax,0x46f9c14a
  41672f:	fild   WORD PTR [edi-0x79c85983]
  416735:	stc    
  416736:	mov    BYTE PTR [esi-0x55],0xe8
  41673a:	pop    ecx
  41673b:	mov    ebx,0x13a78e52
  416740:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416741:	pop    ebp
  416742:	out    0x63,eax
  416744:	xor    al,0x7
  416746:	mov    eax,ds:0x27ac0273
  41674b:	movaps XMMWORD PTR [ebx],xmm7
  41674e:	jle    0x41670f
  416750:	push   ebx
  416751:	push   ds
  416752:	fptan  
  416754:	or     ecx,edi
  416756:	push   cs
  416757:	push   edi
  416758:	dec    esp
  416759:	test   eax,0xbf59c119
  41675e:	mov    eax,ds:0x281471a1
  416763:	scas   al,BYTE PTR es:[edi]
  416764:	xor    BYTE PTR [ecx-0x2a],dh
  416767:	ss cmp eax,0x68405f0e
  41676d:	dec    edx
  41676e:	sti    
  41676f:	ret    0xf3de
  416772:	dec    edx
  416773:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416774:	dec    edx
  416775:	hlt    
  416776:	sub    al,0x95
  416778:	test   al,0xfc
  41677a:	dec    esp
  41677b:	push   ebp
  41677c:	pop    ss
  41677d:	mov    ebp,0x70d32389
  416782:	xchg   ebp,eax
  416783:	imul   edi,edx,0x2ae3a4e8
  416789:	rol    ebp,cl
  41678b:	xor    ch,BYTE PTR [ebx+eax*4-0x21]
  41678f:	sbb    BYTE PTR [ebx+0x3056fdb4],cl
  416795:	lahf   
  416796:	lahf   
  416797:	adc    al,0xb0
  416799:	outs   dx,DWORD PTR ds:[esi]
  41679a:	cmp    BYTE PTR [esi],cl
  41679c:	push   edi
  41679d:	cmp    cl,BYTE PTR [ebx+eax*4-0x32]
  4167a1:	dec    eax
  4167a2:	adc    eax,0x117d33b8
  4167a7:	pop    ss
  4167a8:	push   ebx
  4167a9:	icebp  
  4167aa:	dec    eax
  4167ab:	mov    ebx,0xb0108015
  4167b0:	cmc    
  4167b1:	scas   al,BYTE PTR es:[edi]
  4167b2:	ins    BYTE PTR es:[edi],dx
  4167b3:	sti    
  4167b4:	js     0x4167eb
  4167b6:	jge    0x41681a
  4167b8:	push   ss
  4167b9:	adc    DWORD PTR [edi],esp
  4167bb:	mov    WORD PTR [ecx],gs
  4167bd:	mov    esi,DWORD PTR [edx]
  4167bf:	jmp    0xa4183122
  4167c4:	stos   BYTE PTR es:[edi],al
  4167c5:	loop   0x4167f6
  4167c7:	and    eax,0x5b80f669
  4167cc:	pop    edi
  4167cd:	fimul  WORD PTR [ebx+0x267dafe4]
  4167d3:	inc    ebp
  4167d4:	jb     0x4167e8
  4167d6:	xor    ebx,edx
  4167d8:	sub    al,0x29
  4167da:	jne    0x4167af
  4167dc:	xchg   BYTE PTR [ecx],ah
  4167de:	imul   ebx,DWORD PTR [ebx+0x6],0x70
  4167e2:	ds cdq 
  4167e4:	sbb    eax,0xc1d3843a
  4167e9:	int    0x9e
  4167eb:	gs js  0x41685d
  4167ee:	stc    
  4167ef:	add    DWORD PTR [eax+0x281b0013],ecx
  4167f5:	inc    ecx
  4167f6:	call   0x57ee32c2
  4167fb:	mov    al,ds:0x8ba52e6f
  416800:	retf   
  416801:	sbb    eax,0x24455e91
  416806:	retf   
  416807:	les    esp,FWORD PTR [ebx+0x78]
  41680a:	sbb    eax,0x689fd439
  41680f:	les    esi,FWORD PTR ds:0x7d07e611
  416815:	jns    0x41679d
  416817:	sqrtps xmm7,xmm6
  41681a:	add    ah,0x4b
  41681d:	pop    esi
  41681e:	lods   eax,DWORD PTR ds:[esi]
  41681f:	call   0xc67b4c7a
  416824:	or     ebp,ecx
  416826:	xchg   esi,eax
  416827:	sbb    al,0x8a
  416829:	iret   
  41682a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41682b:	addr16 and eax,0x8384a07b
  416831:	sbb    DWORD PTR [esi],edi
  416833:	(bad)  
  416834:	int3   
  416835:	jge    0x416813
  416837:	fdiv   QWORD PTR [ebx-0xc]
  41683a:	scas   eax,DWORD PTR es:[edi]
  41683b:	push   esp
  41683c:	cmp    esi,DWORD PTR [edi+0x60c7e4d]
  416842:	retf   0xd002
  416845:	lahf   
  416846:	push   edi
  416847:	xor    eax,0x2bc22e0c
  41684c:	lahf   
  41684d:	jp     0x41685e
  41684f:	cld    
  416850:	adc    ebp,DWORD PTR [edi]
  416852:	sbb    eax,0x107cbe17
  416857:	xor    edx,DWORD PTR [eax-0x5630e45d]
  41685d:	fcmovnb st,st(3)
  41685f:	mov    ch,0xcb
  416861:	loop   0x4167f5
  416863:	into   
  416864:	sbb    eax,0x4e6a2107
  416869:	mov    ah,0x7c
  41686b:	mov    al,ds:0xf95c949a
  416870:	inc    ecx
  416871:	shr    eax,cl
  416873:	sub    DWORD PTR [ecx+0x12],ebx
  416876:	je     0x416816
  416878:	push   es
  416879:	xchg   BYTE PTR [esi-0x70],al
  41687c:	or     eax,0xf6748652
  416881:	repz inc esp
  416883:	cmp    DWORD PTR [ebp+0x7d],0x6e
  416887:	sub    eax,0x490a7f62
  41688c:	pop    edx
  41688d:	mov    eax,ds:0xa90955e8
  416892:	lods   al,BYTE PTR ds:[esi]
  416893:	inc    ebx
  416894:	cdq    
  416895:	pusha  
  416896:	out    0x11,al
  416898:	dec    eax
  416899:	mov    ebx,0x5fc7f057
  41689e:	call   0xbd49:0x4980cfcb
  4168a5:	ss aad 0x4f
  4168a8:	mov    bl,0xf8
  4168aa:	jnp    0x4168a3
  4168ac:	cld    
  4168ad:	shr    bh,cl
  4168af:	call   0x7777:0x97bc7408
  4168b6:	add    cl,ah
  4168b8:	stos   DWORD PTR es:[edi],eax
  4168b9:	adc    eax,0x16c5b3c7
  4168be:	fcom   DWORD PTR [edi-0x7c]
  4168c1:	inc    ebp
  4168c2:	adc    DWORD PTR ds:0xfa089944,eax
  4168c8:	lea    esp,[edx-0x70463e0e]
  4168ce:	mov    ch,0xc5
  4168d0:	sub    bh,BYTE PTR [ebx-0x3a3991b5]
  4168d6:	out    dx,eax
  4168d7:	jmp    ecx
  4168d9:	jnp    0x4168a0
  4168db:	loopne 0x4168bd
  4168dd:	rol    DWORD PTR [eax+0x33873980],0xbd
  4168e4:	add    ebp,DWORD PTR cs:[eax-0x24]
  4168e8:	and    edx,DWORD PTR [esi+0xba53481]
  4168ee:	shl    DWORD PTR ds:0x98392ef8,0x85
  4168f5:	adc    al,0xcc
  4168f7:	sahf   
  4168f8:	or     BYTE PTR [edi-0x3680aba1],bl
  4168fe:	jg     0x41692f
  416900:	jo     0x416976
  416902:	shl    DWORD PTR [eax+eiz*1],1
  416905:	push   esi
  416906:	shr    BYTE PTR [edx],cl
  416908:	gs into 
  41690a:	add    bh,BYTE PTR [eax+0x324e78d3]
  416910:	aas    
  416911:	mov    al,ds:0xf600476e
  416916:	jnp    0x4168aa
  416918:	retf   
  416919:	xor    al,0xb3
  41691b:	cmp    ebx,DWORD PTR [ebp+0x4a]
  41691e:	aas    
  41691f:	xlat   BYTE PTR ds:[ebx]
  416920:	push   edi
  416921:	inc    ebp
  416922:	ja     0x41691c
  416924:	das    
  416925:	mov    eax,ds:0xceb53a26
  41692a:	pop    es
  41692b:	daa    
  41692c:	jle    0x416923
  41692e:	jo     0x416922
  416930:	push   ebp
  416931:	inc    esi
  416932:	gs das 
  416934:	fs aaa 
  416936:	add    eax,0xac487a07
  41693b:	bound  ebx,QWORD PTR [edi-0x47]
  41693e:	sbb    bl,dl
  416940:	sub    DWORD PTR [ebp-0x4fdd5937],ecx
  416946:	cdq    
  416947:	gs ins BYTE PTR es:[edi],dx
  416949:	ret    0xe8ab
  41694c:	jl     0x416981
  41694e:	(bad)  
  41694f:	in     al,dx
  416950:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416951:	xchg   ebx,eax
  416952:	and    al,0xa5
  416954:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416955:	add    eax,0x2971da1e
  41695a:	mov    BYTE PTR [esi-0x1b7a9ef7],cl
  416960:	inc    edi
  416961:	je     0x4169c8
  416963:	pop    ecx
  416964:	add    al,bl
  416966:	(bad)  
  416967:	mov    ch,0x7f
  416969:	div    bh
  41696b:	fcom   DWORD PTR [ecx-0x5a]
  41696e:	and    ecx,DWORD PTR [eax+0x62be1e8e]
  416974:	push   0xffffffd5
  416976:	push   edi
  416977:	inc    esp
  416978:	adc    eax,DWORD PTR [edx+0x6b71d655]
  41697e:	adc    esp,DWORD PTR [edi]
  416980:	xchg   ebx,ecx
  416982:	jmp    0x416c66
  416987:	cmc    
  416988:	std    
  416989:	fs mov ah,0x74
  41698c:	jno    0x416983
  41698e:	mov    ecx,0x2f2f76b9
  416993:	fild   QWORD PTR [edx]
  416995:	or     eax,0x7f1fa50b
  41699a:	jo     0x416955
  41699c:	jle    0x416a0e
  41699e:	jo     0x4169fd
  4169a0:	or     DWORD PTR [eax+0x72],0x902450ed
  4169a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4169a8:	add    DWORD PTR [ebx-0x50],ebp
  4169ab:	daa    
  4169ac:	adc    DWORD PTR [edx-0x11a639bc],esp
  4169b2:	ret    0xdd51
  4169b5:	outs   dx,DWORD PTR ds:[esi]
  4169b6:	shr    BYTE PTR [edi-0x48],0xb2
  4169ba:	pop    edx
  4169bb:	mov    eax,ds:0x5d00ac34
  4169c0:	pop    esp
  4169c1:	xchg   esp,eax
  4169c2:	cdq    
  4169c3:	in     eax,0x3e
  4169c5:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  4169c7:	xor    BYTE PTR [ebp-0x727cdf72],bl
  4169cd:	xchg   ebx,eax
  4169ce:	(bad)  
  4169cf:	scas   al,BYTE PTR es:[edi]
  4169d0:	or     esi,DWORD PTR [ecx+0x7d]
  4169d3:	pusha  
  4169d4:	dec    edi
  4169d5:	dec    ebx
  4169d6:	push   ds
  4169d7:	adc    eax,0x9ad6f151
  4169dc:	aad    0x1
  4169de:	mov    BYTE PTR [eax+eax*2+0x440b7426],bh
  4169e5:	ins    DWORD PTR es:[edi],dx
  4169e6:	lahf   
  4169e7:	push   esi
  4169e8:	popf   
  4169e9:	jbe    0x416a08
  4169eb:	shl    BYTE PTR [eax+0x45],0xed
  4169ef:	add    BYTE PTR [eax-0x28],bh
  4169f2:	jbe    0x416a0c
  4169f4:	bound  edi,QWORD PTR [esi-0x5cf3027b]
  4169fa:	jb     0x416a3a
  4169fc:	and    eax,0x3712ad81
  416a01:	ss dec ecx
  416a03:	mov    esi,0x408089b8
  416a08:	adc    DWORD PTR [esi],0xbd78f3d4
  416a0e:	dec    edx
  416a0f:	data16 jb 0x416a3c
  416a12:	pusha  
  416a13:	retf   
  416a14:	mov    DWORD PTR [edx+0x69],ecx
  416a17:	mov    edx,0x68002cd6
  416a1c:	sbb    BYTE PTR [ebp-0x4314cd1],dl
  416a22:	xor    DWORD PTR [edi],ebx
  416a24:	xchg   ebp,eax
  416a25:	xchg   esp,eax
  416a26:	adc    DWORD PTR [eax+0x66],0x2042a4ae
  416a2d:	cmc    
  416a2e:	or     al,0x46
  416a30:	mov    edx,0x69137f10
  416a35:	aad    0xe5
  416a37:	sub    cl,cl
  416a39:	ss xchg ebp,eax
  416a3b:	mov    esp,0xfc06a82d
  416a40:	scas   al,BYTE PTR es:[edi]
  416a41:	rcl    BYTE PTR [edi+0x7b],0xdd
  416a45:	inc    edi
  416a46:	cmp    DWORD PTR [edx-0xc],0x35e99dce
  416a4d:	dec    eax
  416a4e:	into   
  416a4f:	and    eax,0xe0884071
  416a54:	and    DWORD PTR [eax],0x52
  416a57:	jne    0x416a7a
  416a59:	test   BYTE PTR [ecx],0xd1
  416a5c:	jbe    0x4169e6
  416a5e:	mov    ch,0x7e
  416a60:	mov    WORD PTR [esi-0x57],ds
  416a63:	jge    0x4169f3
  416a65:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416a66:	jmp    0x8784:0xf0048e8f
  416a6d:	add    ecx,esp
  416a6f:	push   ss
  416a70:	ss fwait
  416a72:	push   0x1ec5fd88
  416a77:	dec    edi
  416a78:	jle    0x416aa8
  416a7a:	mov    eax,0x405170c0
  416a7f:	lea    edx,[ebp-0x65]
  416a82:	jb     0x416b03
  416a84:	popf   
  416a85:	clc    
  416a86:	jne    0x416a1b
  416a88:	addr16 pop edi
  416a8a:	div    BYTE PTR [edx]
  416a8c:	pop    ecx
  416a8d:	rcr    DWORD PTR [edi-0x6c7a3e8a],1
  416a93:	in     al,0x0
  416a95:	or     eax,0xbfaead34
  416a9a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416a9b:	cld    
  416a9c:	mov    esp,0x10185415
  416aa1:	adc    DWORD PTR [eax-0x26b4965],esi
  416aa7:	add    ebp,edi
  416aa9:	mov    edi,0x4de95055
  416aae:	add    esp,DWORD PTR [edi-0x5f]
  416ab1:	cmp    eax,0xc24452a8
  416ab6:	jo     0x416b31
  416ab8:	xchg   ecx,eax
  416ab9:	sbb    al,0x57
  416abb:	mul    DWORD PTR [ebp-0x73038e7a]
  416ac1:	jns    0x416a67
  416ac3:	cmp    eax,0x3c6b2549
  416ac8:	push   es
  416ac9:	or     ebx,esp
  416acb:	xor    BYTE PTR [ebx+0x7f633646],al
  416ad1:	(bad)  
  416ad2:	out    0xb2,eax
  416ad4:	(bad)  
  416ad5:	rcr    ebx,cl
  416ad7:	adc    eax,0x568754b2
  416adc:	sbb    DWORD PTR [ebx-0x633d63d3],edi
  416ae2:	aam    0xfb
  416ae4:	ja     0x416aba
  416ae6:	fld    TBYTE PTR [esi]
  416ae8:	cmp    BYTE PTR ds:0xd45ca49,dh
  416aee:	mov    ch,0x63
  416af0:	xchg   BYTE PTR [eax],cl
  416af2:	call   0x630e:0xc6ab
  416af8:	arpl   WORD PTR [edi+0x45],dx
  416afb:	jns    0x416b76
  416afd:	push   edi
  416afe:	jecxz  0x416aeb
  416b00:	mov    eax,ds:0x9a4e9a6b
  416b05:	inc    esi
  416b06:	mov    ch,0x3
  416b08:	pop    ecx
  416b09:	xchg   edx,eax
  416b0a:	je     0x416b65
  416b0c:	les    esp,FWORD PTR [esi]
  416b0e:	cmp    eax,0xefbaa2c4
  416b13:	fisttp WORD PTR [ecx-0xb]
  416b16:	and    BYTE PTR [eax-0x155ec576],0x70
  416b1d:	cli    
  416b1e:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416b20:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416b21:	or     al,0x63
  416b23:	push   edx
  416b24:	adc    edi,esi
  416b26:	mov    edi,0xbc9c399e
  416b2b:	sar    BYTE PTR [esi],0x9b
  416b2e:	stos   DWORD PTR es:[edi],eax
  416b2f:	push   edi
  416b30:	xchg   ecx,esp
  416b32:	and    bh,BYTE PTR ds:0xee33c00b
  416b38:	inc    esi
  416b39:	ins    DWORD PTR es:[edi],dx
  416b3a:	leave  
  416b3b:	jae    0x416ad2
  416b3d:	xchg   DWORD PTR [eax+0x204e7562],eax
  416b43:	cmp    BYTE PTR [ebx],ch
  416b45:	and    DWORD PTR [edx+0x2a],0x8f9567ec
  416b4c:	adc    DWORD PTR [ebx+0x60],edx
  416b4f:	push   esp
  416b50:	rcl    BYTE PTR [ecx],cl
  416b52:	daa    
  416b53:	xchg   esp,eax
  416b54:	lahf   
  416b55:	test   BYTE PTR [ebx],0x10
  416b58:	cld    
  416b59:	and    edx,esp
  416b5b:	cmp    al,0xd4
  416b5d:	sbb    BYTE PTR [ebp+0x3b41bc77],0x6f
  416b64:	icebp  
  416b65:	mov    bh,0xd
  416b67:	pop    ecx
  416b68:	aam    0x42
  416b6a:	or     bh,ch
  416b6c:	xlat   BYTE PTR ds:[ebx]
  416b6d:	cmp    eax,DWORD PTR [edi+0x3387712b]
  416b73:	pop    ebp
  416b74:	(bad)  
  416b75:	ja     0x416b3a
  416b77:	push   cs
  416b78:	cld    
  416b79:	iret   
  416b7a:	loope  0x416be9
  416b7c:	popa   
  416b7d:	std    
  416b7e:	push   edx
  416b7f:	sub    ah,BYTE PTR [ebx+0x5c]
  416b82:	cmp    al,0xcf
  416b84:	or     BYTE PTR ds:0x8556695d,ah
  416b8a:	(bad)  
  416b8b:	jmp    0x9f672605
  416b90:	sahf   
  416b91:	call   0xdf14:0x745b089f
  416b98:	sub    al,0xef
  416b9a:	dec    eax
  416b9b:	xor    al,0xf
  416b9d:	ja     0x416bfc
  416b9f:	int3   
  416ba0:	inc    esp
  416ba1:	dec    edi
  416ba2:	aam    0xc0
  416ba4:	dec    edi
  416ba5:	cmp    al,0x38
  416ba7:	adc    dl,BYTE PTR [eax+eax*8+0x30f786c1]
  416bae:	int3   
  416baf:	xor    BYTE PTR [eax+0x1],ah
  416bb2:	fs jns 0x416c07
  416bb5:	or     dh,BYTE PTR [ebp-0x5d]
  416bb8:	dec    ebp
  416bb9:	call   0x4951:0xbd510f7c
  416bc0:	mov    eax,0x2544ba78
  416bc5:	mov    ebp,0x6ca5cc9
  416bca:	mov    DWORD PTR [ecx+0x7316e44b],esp
  416bd0:	icebp  
  416bd1:	sub    bl,ch
  416bd3:	mov    bl,0x70
  416bd5:	rcr    BYTE PTR ds:[ecx+0xe160cfc],0x3a
  416bdd:	repz fstp QWORD PTR [ebx]
  416be0:	add    esi,eax
  416be2:	add    al,0x9e
  416be4:	mov    al,al
  416be6:	pushf  
  416be7:	sahf   
  416be8:	mov    ss,WORD PTR [edx-0x6e]
  416beb:	in     eax,0xed
  416bed:	(bad)  
  416bee:	dec    esi
  416bef:	pop    DWORD PTR ds:0x592a7343
  416bf5:	ret    
  416bf6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416bf7:	leave  
  416bf8:	add    eax,0xc43b6af4
  416bfd:	and    BYTE PTR [esi-0x29a67439],cl
  416c03:	clc    
  416c04:	inc    ebp
  416c05:	adc    al,BYTE PTR [eax]
  416c07:	add    BYTE PTR [ebp+0x12],cl
  416c0a:	xor    BYTE PTR [esi+0x1f],dl
  416c0d:	xchg   BYTE PTR [ebx+0x71ab8220],bh
  416c13:	pop    ebp
  416c14:	xchg   edi,eax
  416c15:	rcr    BYTE PTR [ebx-0x5],1
  416c18:	stc    
  416c19:	adc    al,0xa8
  416c1b:	add    edi,edx
  416c1d:	pop    esp
  416c1e:	add    edx,eax
  416c20:	sbb    BYTE PTR [ebp-0x5be58ee9],ah
  416c26:	into   
  416c27:	loope  0x416be8
  416c29:	enter  0x5b58,0x54
  416c2d:	ins    DWORD PTR es:[edi],dx
  416c2e:	jle    0x416c7a
  416c30:	inc    ebp
  416c31:	and    DWORD PTR [ecx+0x7a],ebp
  416c34:	xchg   edx,eax
  416c35:	rcr    DWORD PTR [ebp+ebx*8-0x7a],1
  416c39:	jbe    0x416bc0
  416c3b:	sar    bh,cl
  416c3d:	out    dx,eax
  416c3e:	(bad)  
  416c3f:	cmc    
  416c40:	xor    DWORD PTR [eax+edi*2+0x4fb660f3],0x1b8c0bdc
  416c4b:	fdivr  QWORD PTR [bx+di-0x3ff3]
  416c50:	mul    eax
  416c52:	loope  0x416bec
  416c54:	xchg   ebp,edi
  416c56:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416c57:	mov    edx,0x17ae0541
  416c5c:	inc    edx
  416c5d:	jge    0x416c04
  416c5f:	xor    eax,0xa9dfe82f
  416c64:	sbb    cl,BYTE PTR [ecx+ecx*2]
  416c67:	mov    eax,DWORD PTR [ebp-0x1c]
  416c6a:	jmp    0x416f4e
  416c6f:	outs   dx,BYTE PTR ds:[esi]
  416c70:	ds push eax
  416c72:	loopne 0x416cd4
  416c74:	outs   dx,BYTE PTR ds:[esi]
  416c75:	outs   dx,BYTE PTR ds:[esi]
  416c76:	mov    esi,0xcbfa089
  416c7b:	mov    ah,dl
  416c7d:	mov    al,0x38
  416c7f:	out    dx,al
  416c80:	sbb    al,0x7f
  416c82:	jo     0x416c3d
  416c84:	jle    0x416cf6
  416c86:	jo     0x416c72
  416c88:	mov    edi,0x862cfca7
  416c8d:	cwde   
  416c8e:	stos   DWORD PTR es:[edi],eax
  416c8f:	test   al,0xc3
  416c91:	inc    edx
  416c92:	inc    esi
  416c93:	scas   al,BYTE PTR es:[edi]
  416c94:	out    0xbc,al
  416c96:	cs loop 0x416c7e
  416c99:	xor    eax,0xe8d85255
  416c9e:	mov    BYTE PTR [esi+0x173569bf],dh
  416ca4:	xor    dl,BYTE PTR [esi]
  416ca6:	es jmp 0x1789825f
  416cac:	stc    
  416cad:	push   edi
  416cae:	mov    ds:0x13db34ef,al
  416cb3:	mov    ds:0xd113bb44,al
  416cb8:	sub    DWORD PTR [edx],edx
  416cba:	add    cl,BYTE PTR [ebx]
  416cbc:	iret   
  416cbd:	push   ds
  416cbe:	mov    esp,DWORD PTR [ecx+0x4545b67c]
  416cc4:	pop    ebx
  416cc5:	mov    ah,0x54
  416cc7:	and    bh,BYTE PTR [ecx+0x2a]
  416cca:	add    al,0xae
  416ccc:	jl     0x416c51
  416cce:	int    0x30
  416cd0:	add    DWORD PTR [esi+0x5f3a3fff],edx
  416cd6:	sbb    eax,0xafd145cc
  416cdb:	xchg   edx,eax
  416cdc:	stos   DWORD PTR es:[edi],eax
  416cdd:	jg     0x416c72
  416cdf:	in     al,0x7f
  416ce1:	pusha  
  416ce2:	or     ecx,ebx
  416ce4:	hlt    
  416ce5:	xchg   DWORD PTR [edx],eax
  416ce7:	or     DWORD PTR ds:0x5067e757,edi
  416ced:	jmp    0xaabe:0xd71b22cf
  416cf4:	push   esp
  416cf5:	xor    BYTE PTR [ebp+0x57],cl
  416cf8:	xor    DWORD PTR [ebx-0xc7abe14],ebp
  416cfe:	xchg   edx,ecx
  416d00:	sbb    eax,0xbd1c3078
  416d05:	sbb    DWORD PTR [eax+eiz*2-0x8d95535],ecx
  416d0c:	xchg   ebx,eax
  416d0d:	pushf  
  416d0e:	push   0x57
  416d10:	call   0xb75670d8
  416d15:	sub    DWORD PTR [edx+0x1f1357c5],eax
  416d1b:	leave  
  416d1c:	xor    DWORD PTR [esp+ebp*4],esi
  416d1f:	fild   WORD PTR [ebx-0x46]
  416d22:	mov    ah,BYTE PTR [edi]
  416d24:	lahf   
  416d25:	and    eax,0xae918759
  416d2a:	cmc    
  416d2b:	mov    DWORD PTR ds:0xcb9f6896,ebp
  416d31:	and    bl,BYTE PTR [ecx]
  416d33:	test   BYTE PTR [ebx+0x5674bb9e],dh
  416d39:	dec    esi
  416d3a:	add    DWORD PTR [ecx],0x49
  416d3d:	mov    edi,0xdbb50216
  416d42:	cmp    DWORD PTR [edi],ebx
  416d44:	test   eax,0x8be7e941
  416d49:	lahf   
  416d4a:	pop    ecx
  416d4b:	sbb    al,0x89
  416d4d:	inc    ebp
  416d4e:	mov    ds:0x43b00c3,eax
  416d53:	xchg   BYTE PTR [edi+0x37],bl
  416d56:	xchg   esi,eax
  416d57:	sub    eax,0xbdd4c46f
  416d5c:	add    BYTE PTR [edi],al
  416d5e:	xchg   esi,eax
  416d5f:	mov    ds:0xbbb37644,al
  416d64:	ret    0x25f5
  416d67:	stos   DWORD PTR es:[edi],eax
  416d68:	xor    dh,cl
  416d6a:	gs inc eax
  416d6c:	mov    edi,0x872af72
  416d71:	mov    edi,0xb7822a5b
  416d76:	adc    BYTE PTR [ecx],bl
  416d78:	pop    ebp
  416d79:	mov    bh,0x8f
  416d7b:	jmp    0x416d7c
  416d7d:	ret    
  416d7e:	dec    ecx
  416d7f:	jae    0x416d65
  416d81:	retf   0x11bf
  416d84:	(bad)  [edi-0x7]
  416d87:	addr16 fwait
  416d89:	jg     0x416d7f
  416d8b:	call   0x40e8:0xc38146e3
  416d92:	and    dl,cl
  416d94:	dec    edx
  416d95:	cld    
  416d96:	xchg   bl,bl
  416d98:	fld    QWORD PTR [ebx-0x58]
  416d9b:	mov    ds:0x353de451,al
  416da0:	leave  
  416da1:	mov    al,0x6c
  416da3:	and    dl,ch
  416da5:	adc    ch,bl
  416da7:	cmp    eax,DWORD PTR [esp+ecx*1-0x23f6e593]
  416dae:	int3   
  416daf:	scas   al,BYTE PTR es:[edi]
  416db0:	jmp    0x518371e0
  416db5:	sub    esp,DWORD PTR [ebp+0x2953b5dc]
  416dbb:	xchg   edi,eax
  416dbc:	das    
  416dbd:	mov    WORD PTR [edx-0x48ca2487],cs
  416dc3:	push   edi
  416dc4:	in     eax,0x18
  416dc6:	push   edx
  416dc7:	fisttp QWORD PTR [ebx-0x791ad158]
  416dcd:	pop    edi
  416dce:	and    ebx,0xffffffaa
  416dd1:	xor    eax,0xfbb872c1
  416dd6:	mov    DWORD PTR [eax-0x5395f2d4],eax
  416ddc:	jo     0x416dd3
  416dde:	idiv   DWORD PTR [ebx]
  416de0:	push   0xabe105ad
  416de5:	fisttp QWORD PTR [edx]
  416de7:	dec    ebp
  416de8:	pop    ss
  416de9:	loope  0x416e02
  416deb:	jmp    0x3c843cfe
  416df0:	test   eax,0xbfd99000
  416df5:	pop    esp
  416df6:	push   esi
  416df7:	ret    
  416df8:	jne    0x416e1c
  416dfa:	repnz adc eax,0x926aaaf7
  416e00:	hlt    
  416e01:	push   cs
  416e02:	adc    DWORD PTR [eax],esi
  416e04:	test   eax,0x8155af22
  416e09:	lods   al,BYTE PTR ds:[esi]
  416e0a:	xor    al,0xa6
  416e0c:	or     edx,DWORD PTR [esi-0x27]
  416e0f:	push   0x97c65316
  416e14:	xchg   dl,bh
  416e16:	push   edi
  416e17:	sbb    DWORD PTR [ebx+edx*2+0x23],edx
  416e1b:	jae    0x416e91
  416e1d:	lea    esi,[ecx-0x45]
  416e20:	stos   DWORD PTR es:[edi],eax
  416e21:	popf   
  416e22:	inc    eax
  416e23:	in     al,dx
  416e24:	and    dl,BYTE PTR [ebx-0x2f]
  416e27:	push   0x71756144
  416e2c:	bnd jmp 0x416ddf
  416e2f:	pop    es
  416e30:	ins    DWORD PTR es:[edi],dx
  416e31:	xchg   edi,eax
  416e32:	fucomp st(0)
  416e34:	stos   DWORD PTR es:[edi],eax
  416e35:	enter  0x793b,0x65
  416e39:	(bad)  
  416e3a:	hlt    
  416e3b:	inc    ebp
  416e3c:	fiadd  WORD PTR [eax]
  416e3e:	lea    ebp,[ebx+0x3f]
  416e41:	mov    al,0xa9
  416e43:	pop    edx
  416e44:	fs retf 
  416e46:	sbb    BYTE PTR [ebx-0x14498ee0],cl
  416e4c:	adc    DWORD PTR ss:[eax-0x20],ecx
  416e50:	sub    BYTE PTR [ecx*1-0x4337c8c],al
  416e57:	lds    ebp,FWORD PTR [esi]
  416e59:	jae    0x416e0c
  416e5b:	add    ch,dh
  416e5d:	(bad)
  416e60:	arpl   WORD PTR [edi+0x72],ax
  416e63:	add    eax,0xb3bc6b92
  416e68:	iret   
  416e69:	retf   0x2315
  416e6c:	mov    cl,0x10
  416e6e:	jnp    0x416e2c
  416e70:	jmp    0x62e5:0xb3184796
  416e77:	loop   0x416e23
  416e79:	mov    ecx,0x38b789de
  416e7e:	push   ecx
  416e7f:	aas    
  416e80:	aaa    
  416e81:	inc    edx
  416e82:	cmp    eax,0x1e95db49
  416e87:	mov    bh,BYTE PTR [edi+ebp*2-0x4b]
  416e8b:	adc    BYTE PTR [ebx],ah
  416e8d:	test   eax,0x962a7208
  416e92:	and    BYTE PTR gs:[ecx*1+0x33cb826a],0x56
  416e9b:	sbb    al,0x7f
  416e9d:	add    edi,DWORD PTR [ecx+ebx*2-0x21]
  416ea1:	mov    bh,0xfe
  416ea3:	jae    0x416ec7
  416ea5:	pop    edx
  416ea6:	in     al,dx
  416ea7:	add    al,0x75
  416ea9:	push   0x7cd953d5
  416eae:	sbb    dh,BYTE PTR [eax]
  416eb0:	xchg   BYTE PTR [eiz*4+0x1eafa53e],al
  416eb7:	hlt    
  416eb8:	push   ebx
  416eb9:	sar    esi,0xec
  416ebc:	dec    esp
  416ebd:	pop    esp
  416ebe:	jmp    0x416eb9
  416ec0:	mov    esp,0x43bc4f27
  416ec5:	lods   eax,DWORD PTR ds:[esi]
  416ec6:	mov    eax,0xe15de7ab
  416ecb:	mov    edx,esp
  416ecd:	sbb    al,0xb1
  416ecf:	jecxz  0x416ea5
  416ed1:	outs   dx,DWORD PTR ds:[esi]
  416ed2:	pop    eax
  416ed3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416ed4:	cli    
  416ed5:	xchg   ebx,eax
  416ed6:	jecxz  0x416edf
  416ed8:	xor    eax,eax
  416eda:	sub    eax,0x49e5670d
  416edf:	inc    esp
  416ee1:	sub    al,BYTE PTR [edi+ecx*1-0x1cbe579c]
  416ee8:	arpl   WORD PTR [ecx+0x571faef7],ax
  416eee:	ja     0x416e9f
  416ef0:	xchg   ebp,eax
  416ef1:	test   DWORD PTR [edi-0x6182f180],esi
  416ef7:	mov    ah,BYTE PTR [edx-0x63]
  416efa:	mov    dh,0x53
  416efc:	jle    0x416f48
  416efe:	sbb    eax,0xd5aa9370
  416f03:	jl     0x416e8a
  416f05:	dec    esi
  416f06:	in     eax,dx
  416f07:	push   eax
  416f08:	dec    edi
  416f09:	adc    esp,DWORD PTR ds:0xbe69a6d2
  416f0f:	pop    ebx
  416f10:	adc    ecx,DWORD PTR ds:0x669a7f37
  416f16:	in     eax,dx
  416f17:	jbe    0x416f1b
  416f19:	ins    DWORD PTR es:[edi],dx
  416f1a:	push   ebx
  416f1b:	jns    0x416ea7
  416f1d:	pusha  
  416f1e:	sub    ebp,DWORD PTR [ecx+0x776eac03]
  416f24:	and    ah,ch
  416f26:	jge    0x416f9f
  416f28:	mov    es,WORD PTR [edi+0x52]
  416f2b:	lahf   
  416f2c:	xor    BYTE PTR [eax-0x21],bl
  416f2f:	daa    
  416f30:	aad    0xd2
  416f32:	lds    ecx,FWORD PTR [edi-0x74]
  416f35:	cmp    ebp,DWORD PTR [edi-0x45]
  416f38:	add    eax,0x2719f9dd
  416f3d:	repnz add DWORD PTR ds:0xd25aee7b,0xffffffd6
  416f45:	call   0xe9a:0x46f67a08
  416f4c:	test   al,0xb3
  416f4e:	imul   eax,ecx
  416f51:	add    esp,eax
  416f53:	xchg   edx,eax
  416f54:	push   eax
  416f55:	xor    ebx,ebx
  416f57:	mov    edx,esp
  416f59:	jmp    0x41723d
  416f5e:	cmp    al,0x58
  416f60:	push   esp
  416f61:	add    dh,BYTE PTR [edx+esi*1+0x4a]
  416f65:	data16 (bad) 
  416f68:	and    ch,cl
  416f6a:	jbe    0x416eff
  416f6c:	not    ah
  416f6e:	aaa    
  416f6f:	sbb    DWORD PTR [edi+0x70],edi
  416f72:	mov    ecx,0xb570707e
  416f77:	sar    edi,1
  416f79:	pop    ecx
  416f7a:	mov    ch,0x35
  416f7c:	ret    0x72b8
  416f7f:	imul   ecx,DWORD PTR [edi-0xe7fdf54],0x95a312d6
  416f89:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416f8a:	lods   eax,DWORD PTR ds:[esi]
  416f8b:	push   0x3a
  416f8d:	sub    ch,dh
  416f8f:	and    DWORD PTR [esi+0x14],ecx
  416f92:	lds    ecx,FWORD PTR [esi-0x2ff44b64]
  416f98:	dec    ebx
  416f99:	xchg   DWORD PTR [ecx-0x7f],ebp
  416f9c:	ret    
  416f9d:	retf   0xe4b8
  416fa0:	jb     0x416f96
  416fa2:	loopne 0x416fd5
  416fa4:	adc    BYTE PTR [eax+edx*4-0x76],ch
  416fa8:	aam    0x7f
  416faa:	popa   
  416fab:	add    DWORD PTR [ebx],0xffffffe4
  416fae:	mov    ebx,0x1143fa4
  416fb3:	sbb    dh,BYTE PTR [edx-0x52]
  416fb6:	dec    edi
  416fb7:	dec    eax
  416fb8:	aam    0xbe
  416fba:	lods   eax,DWORD PTR fs:[esi]
  416fbc:	ffreep st(7)
  416fbe:	pop    es
  416fbf:	inc    edx
  416fc0:	test   eax,0xa139c704
  416fc5:	push   eax
  416fc6:	(bad)  
  416fc7:	fadd   DWORD PTR [ebx+0x59]
  416fca:	dec    eax
  416fcb:	ds stos DWORD PTR es:[edi],eax
  416fcd:	leave  
  416fce:	dec    ebx
  416fcf:	scas   eax,DWORD PTR es:[edi]
  416fd0:	(bad)  
  416fd2:	sbb    edi,DWORD PTR [ecx-0x47]
  416fd5:	sub    ecx,DWORD PTR [esi-0x8]
  416fd8:	pop    eax
  416fd9:	pop    esi
  416fda:	ja     0x417050
  416fdc:	inc    eax
  416fdd:	shl    DWORD PTR [edi],cl
  416fdf:	mov    ds,edi
  416fe1:	pusha  
  416fe2:	clc    
  416fe3:	sar    BYTE PTR [ebx+ecx*4-0x3d],cl
  416fe7:	out    dx,al
  416fe8:	adc    ch,0xe6
  416feb:	lahf   
  416fec:	push   edx
  416fed:	mov    eax,DWORD PTR [eax-0x434d49e]
  416ff3:	in     al,dx
  416ff4:	push   eax
  416ff5:	push   cs
  416ff6:	cmp    cl,BYTE PTR [edx-0x51af2ebf]
  416ffc:	call   0xd3b54da6
  417001:	popf   
  417002:	in     al,dx
  417003:	cmp    al,0xe4
  417005:	mov    dl,0xe6
  417007:	jmp    0x1defdfc2
  41700c:	xchg   BYTE PTR ds:0x7abe8e80,cl
  417012:	jb     0x416ff0
  417014:	pop    es
  417015:	dec    eax
  417016:	cmp    BYTE PTR [ecx+0x57],dl
  417019:	int    0xef
  41701b:	fwait
  41701c:	xchg   BYTE PTR [ecx+0x76da8b4f],ch
  417022:	xlat   BYTE PTR ds:[ebx]
  417023:	jle    0x417062
  417025:	jmp    0x94707502
  41702a:	bound  esp,QWORD PTR [ecx+edx*4+0xf]
  41702e:	fsubr  st,st(0)
  417030:	sub    DWORD PTR [edx+esi*8],0xffffff85
  417034:	lahf   
  417035:	stos   DWORD PTR es:[edi],eax
  417036:	outs   dx,DWORD PTR ds:[esi]
  417037:	inc    ecx
  417038:	mov    ds:0x2980d5c6,al
  41703d:	pop    ebx
  41703e:	mov    al,ds:0xed8a06fd
  417043:	push   0xf
  417045:	lock mov cl,0x45
  417048:	inc    eax
  417049:	hlt    
  41704a:	add    eax,0xc1c4acfe
  41704f:	hlt    
  417050:	mov    WORD PTR [ebx-0x10],gs
  417053:	cwde   
  417054:	(bad)  
  417055:	repz lds edi,FWORD PTR [esi-0x30]
  417059:	or     ah,BYTE PTR [esi]
  41705b:	loope  0x416feb
  41705d:	cmp    DWORD PTR [edx+0x73],ebp
  417060:	jecxz  0x41709e
  417062:	mov    bl,0x15
  417064:	arpl   WORD PTR [eax],si
  417066:	imul   ebx,DWORD PTR [ecx+edi*1],0xffffffda
  41706a:	xchg   esi,eax
  41706b:	je     0x4170c9
  41706d:	jbe    0x416ff1
  41706f:	mov    ?,edi
  417071:	aaa    
  417072:	ds add al,0x73
  417075:	and    eax,0x84808071
  41707a:	pop    edx
  41707b:	push   ecx
  41707c:	push   ds
  41707d:	mov    al,ds:0x488942d8
  417082:	inc    esp
  417083:	and    DWORD PTR [ecx-0x17],0xfb12d835
  41708a:	inc    esi
  41708b:	pop    ebx
  41708c:	pop    ebx
  41708d:	outs   dx,BYTE PTR ds:[esi]
  41708e:	scas   eax,DWORD PTR es:[edi]
  41708f:	or     esi,DWORD PTR [esi-0x7f]
  417092:	loopne 0x4170a8
  417094:	lods   al,BYTE PTR ds:[esi]
  417095:	ficom  WORD PTR ds:0x355e3d77
  41709b:	pop    ecx
  41709c:	cwde   
  41709d:	and    dh,ah
  41709f:	xor    al,cl
  4170a1:	fwait
  4170a2:	pop    esp
  4170a3:	push   esi
  4170a4:	ficomp WORD PTR [edi-0x23]
  4170a7:	cmp    ah,ch
  4170a9:	xchg   ebx,eax
  4170aa:	cdq    
  4170ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4170ac:	jo     0x417129
  4170ae:	mov    bl,0xd9
  4170b0:	mov    ebp,0xaf6a2c74
  4170b5:	jns    0x4170ef
  4170b7:	lahf   
  4170b8:	add    al,0x81
  4170ba:	xor    ah,BYTE PTR [edi]
  4170bc:	je     0x4170a9
  4170be:	(bad)  
  4170bf:	fstp   TBYTE PTR [ebx-0x51]
  4170c2:	xor    bl,BYTE PTR [edi+0x11]
  4170c5:	or     eax,0xee7809d
  4170ca:	imul   eax,edx,0x4c
  4170cd:	pop    eax
  4170ce:	and    edi,DWORD PTR [ebx-0x60]
  4170d1:	mov    bh,0x16
  4170d3:	or     DWORD PTR ds:0x2a24c41e,ebx
  4170d9:	jb     0x4170df
  4170db:	push   ecx
  4170dc:	daa    
  4170dd:	sbb    eax,0x100d2ea6
  4170e2:	mov    dh,0xe0
  4170e4:	clc    
  4170e5:	popf   
  4170e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4170e7:	jg     0x4170e9
  4170e9:	icebp  
  4170ea:	retf   0xdaeb
  4170ed:	cmp    BYTE PTR [ebp-0x41d2cb6b],cl
  4170f3:	push   edx
  4170f4:	push   cs
  4170f5:	jmp    0x7266:0xad023255
  4170fc:	xor    ebp,DWORD PTR [eax]
  4170fe:	outs   dx,BYTE PTR ds:[esi]
  4170ff:	enter  0x8ac4,0x40
  417103:	test   al,dl
  417105:	pusha  
  417106:	out    dx,al
  417107:	pop    esp
  417108:	sbb    esi,esp
  41710a:	je     0x41710f
  41710c:	inc    esp
  41710d:	out    dx,al
  41710e:	mov    dl,0xb7
  417110:	scas   al,BYTE PTR es:[edi]
  417111:	mov    ch,0x4
  417113:	xchg   ebx,eax
  417114:	ret    0xb30d
  417117:	pop    ds
  417118:	and    eax,0xa24ba7a5
  41711d:	inc    edi
  41711e:	imul   ebx,DWORD PTR [ebx],0xfffffff0
  417121:	sar    dl,0x92
  417124:	push   esi
  417125:	pushf  
  417126:	fcom   QWORD PTR ds:[eax+0x16f688ed]
  41712d:	cwde   
  41712e:	lahf   
  41712f:	in     al,0x7f
  417131:	and    DWORD PTR ds:0x90e6e17e,edi
  417137:	sbb    DWORD PTR [edi+esi*4],ebx
  41713a:	fisubr DWORD PTR [ecx]
  41713c:	xor    DWORD PTR [esp+edx*4],esp
  41713f:	fmul   st,st(6)
  417141:	push   esp
  417142:	mov    ds:0xca4a5c0f,al
  417147:	inc    eax
  417148:	inc    eax
  417149:	ins    BYTE PTR es:[edi],dx
  41714a:	sub    eax,0x3087d57f
  41714f:	mov    DWORD PTR [ebx+ebp*8+0x76d2333d],ebx
  417156:	ret    0x205b
  417159:	sbb    edi,DWORD PTR [edi-0x37]
  41715c:	sar    DWORD PTR [ebp+0x7e],cl
  41715f:	or     BYTE PTR [edi+edx*8],ch
  417162:	xchg   ebp,eax
  417163:	sbb    al,0x50
  417165:	mov    al,ds:0xda8c08c2
  41716a:	cmp    al,0x77
  41716c:	mov    ch,0x1d
  41716e:	fstp   DWORD PTR fs:[edi+eiz*1+0xf6c0ab3]
  417176:	cmp    BYTE PTR [ebx-0x5],bh
  417179:	imul   esi,DWORD PTR [edx],0x4f168705
  41717f:	push   0xffffffeb
  417181:	fcomp  QWORD PTR [ecx-0x7d]
  417184:	jmp    0xa244:0xf0534b5
  41718b:	cli    
  41718c:	push   edi
  41718d:	push   ebx
  41718e:	imul   DWORD PTR [esi]
  417190:	xchg   ebx,eax
  417191:	and    DWORD PTR [ecx+0x39],eax
  417194:	mov    ebp,0xc91ba114
  417199:	dec    ebx
  41719a:	mov    WORD PTR [esi-0x7ab614b0],cs
  4171a0:	pop    esi
  4171a1:	push   0xdc4d77f2
  4171a6:	dec    edi
  4171a7:	push   esi
  4171a8:	mov    edx,0x9404d134
  4171ad:	mov    esp,0x876545e8
  4171b2:	mov    BYTE PTR [ebp+0x75],cl
  4171b5:	arpl   di,bp
  4171b7:	bnd jbe 0x41717c
  4171ba:	fisttp WORD PTR [ebx+0x116c7d3e]
  4171c0:	mul    DWORD PTR [ecx+0xe89f1cd]
  4171c6:	pop    ebx
  4171c7:	xor    eax,DWORD PTR [ebx+0x61]
  4171ca:	or     DWORD PTR [esi-0x70ffc6a0],edi
  4171d0:	sub    cl,dl
  4171d2:	daa    
  4171d3:	fwait
  4171d4:	inc    esp
  4171d5:	(bad)  
  4171d6:	sbb    eax,0x6a56f503
  4171db:	xor    eax,0xb201679c
  4171e0:	in     al,0xb5
  4171e2:	ins    BYTE PTR es:[edi],dx
  4171e3:	in     al,0x27
  4171e5:	sahf   
  4171e6:	jmp    0x417198
  4171e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4171e9:	popf   
  4171ea:	adc    dx,WORD PTR [ecx]
  4171ed:	pop    ebx
  4171ee:	je     0x4171a8
  4171f0:	std    
  4171f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4171f2:	mov    ecx,DWORD PTR [ebx+0x373c8d53]
  4171f8:	adc    al,0xf0
  4171fa:	in     eax,0x5d
  4171fc:	pusha  
  4171fd:	les    ebp,FWORD PTR [ebx]
  4171ff:	mov    al,0xb0
  417201:	inc    esp
  417202:	jbe    0x4171ef
  417204:	mov    ah,0x3d
  417206:	sbb    BYTE PTR fs:[esi-0x399a547c],0x7e
  41720e:	(bad)  
  41720f:	and    edi,DWORD PTR [edi]
  417211:	add    BYTE PTR [ebx-0x21754c4],dl
  417217:	or     edx,DWORD PTR ds:0x3707d4d1
  41721d:	in     eax,0x1
  41721f:	cmp    al,0x59
  417221:	sub    bh,ah
  417223:	in     eax,dx
  417224:	loop   0x417227
  417226:	sbb    bl,BYTE PTR [edi-0x53]
  417229:	std    
  41722a:	aaa    
  41722b:	adc    al,0xaa
  41722d:	enter  0xd90e,0xb
  417231:	loopne 0x417299
  417233:	retf   
  417234:	in     eax,dx
  417235:	jae    0x41720e
  417237:	push   eax
  417238:	inc    ebp
  417239:	popf   
  41723a:	xor    al,0xdf
  41723c:	std    
  41723d:	dec    edx
  41723e:	inc    ebx
  41723f:	add    ebx,DWORD PTR [edx+ebx*1]
  417242:	dec    ebx
  417243:	jmp    0x417527
  417248:	fsubrp st(0),st
  41724a:	(bad)  
  41724b:	stos   BYTE PTR es:[edi],al
  41724c:	mov    gs,WORD PTR [edx-0x16]
  41724f:	ins    BYTE PTR es:[edi],dx
  417250:	leave  
  417251:	pop    ebx
  417252:	sub    al,0x41
  417254:	xor    BYTE PTR [eax],ch
  417256:	mov    edi,ds
  417258:	jo     0x417280
  41725a:	jg     0x4172cc
  41725c:	mov    ecx,0x4c70707e
  417261:	mov    ebp,0x90ed0e26
  417266:	push   0x62e05acc
  41726b:	add    BYTE PTR [edi-0x1f],bh
  41726e:	and    al,0x81
  417270:	add    ah,BYTE PTR [ecx]
  417272:	out    0x7f,eax
  417274:	(bad)  
  417275:	lds    esi,FWORD PTR [esi+ecx*1-0x3a6e80c4]
  41727c:	inc    esp
  41727d:	add    cl,BYTE PTR [ecx+0x3c]
  417280:	bound  eax,QWORD PTR [edx+0x28]
  417283:	adc    eax,0x1a1357de
  417288:	mov    esi,0x7926b421
  41728d:	or     DWORD PTR [ebx+eiz*8],eax
  417290:	dec    esp
  417291:	popa   
  417292:	inc    ebx
  417293:	mov    eax,ds:0xd91dc44b
  417298:	shr    DWORD PTR [esi],cl
  41729a:	mov    cl,0x65
  41729c:	sub    ebp,esi
  41729e:	sbb    dl,BYTE PTR [esi+eiz*1]
  4172a1:	add    eax,0x60e2dbe
  4172a6:	ret    
  4172a7:	sti    
  4172a8:	dec    ecx
  4172a9:	dec    esi
  4172aa:	xchg   edi,eax
  4172ab:	xor    al,bl
  4172ad:	(bad)  
  4172ae:	cmp    DWORD PTR [edx-0x28],ecx
  4172b1:	push   eax
  4172b2:	pop    esi
  4172b3:	sti    
  4172b4:	into   
  4172b5:	loop   0x41729c
  4172b7:	sub    bl,BYTE PTR [ecx+0x4]
  4172ba:	nop
  4172bb:	int    0x55
  4172bd:	(bad)  
  4172be:	and    DWORD PTR [edx+ebp*1],ebp
  4172c1:	loop   0x41730c
  4172c3:	mov    ecx,0xca242133
  4172c8:	ret    
  4172c9:	add    DWORD PTR [ebp+0x6dcd458a],ecx
  4172cf:	adc    BYTE PTR [esi],0x95
  4172d2:	sub    BYTE PTR [esi+0x10],dl
  4172d5:	and    al,0x91
  4172d7:	imul   ecx,esi,0x2e0842ae
  4172dd:	adc    DWORD PTR [edx],ebp
  4172df:	push   ebx
  4172e0:	sbb    BYTE PTR [edi-0x62],0x6c
  4172e4:	addr16 aam 0x2b
  4172e7:	jecxz  0x41730c
  4172e9:	mov    eax,0xc598f8f6
  4172ee:	jl     0x41727e
  4172f0:	sub    BYTE PTR ds:0xdeb5e3b0,ch
  4172f6:	sbb    cl,bl
  4172f8:	jge    0x417315
  4172fa:	sbb    eax,0x8506619b
  4172ff:	rol    edi,cl
  417301:	mov    edx,DWORD PTR [edi-0x3]
  417304:	push   ss
  417305:	pop    esi
  417306:	ins    BYTE PTR es:[edi],dx
  417307:	mov    dl,0xa4
  417309:	xchg   eax,ebp
  41730b:	cmovp  esi,ebp
  41730e:	(bad)  
  41730f:	frndint 
  417311:	fisub  WORD PTR [ebp+ecx*4-0x7b]
  417315:	sti    
  417316:	xor    ebx,DWORD PTR [ecx+0x33]
  417319:	push   ss
  41731a:	test   ch,ah
  41731c:	dec    eax
  41731d:	mov    dl,0x6a
  41731f:	pop    esp
  417320:	cmp    cl,BYTE PTR [edx+eiz*4]
  417323:	mul    BYTE PTR [ecx]
  417325:	inc    eax
  417326:	pop    eax
  417327:	or     DWORD PTR [eax-0x41633f2c],ebp
  41732d:	jbe    0x417368
  41732f:	push   0xffb5c363
  417334:	les    ebp,FWORD PTR [eax]
  417336:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417337:	jecxz  0x41733d
  417339:	mov    ah,0x94
  41733b:	pop    edi
  41733c:	or     bh,BYTE PTR [ebp+0x3e]
  41733f:	adc    ch,bh
  417341:	sbb    al,0xbe
  417343:	jg     0x41735e
  417345:	add    ebx,ebx
  417347:	into   
  417348:	sar    DWORD PTR [esi+0x4],cl
  41734b:	dec    eax
  41734c:	and    eax,DWORD PTR [eax]
  41734e:	(bad)  
  41734f:	mov    esp,0x32a56517
  417354:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417355:	push   ecx
  417356:	mov    al,0x50
  417358:	and    ch,BYTE PTR [ebx-0x3e]
  41735b:	sahf   
  41735c:	pop    esp
  41735d:	cmp    BYTE PTR ds:0xf3ce7e25,dh
  417363:	(bad)  
  417364:	in     al,0x7e
  417366:	idiv   DWORD PTR [edx-0x11]
  417369:	and    WORD PTR [eax],ax
  41736c:	cmp    DWORD PTR [ecx],esi
  41736e:	xchg   edi,eax
  41736f:	and    dh,ch
  417371:	jmp    0x5bc4:0xb2fdb7fb
  417378:	push   0xa
  41737a:	call   DWORD PTR [ebx]
  41737c:	or     eax,DWORD PTR [eax-0xbdb9bfd]
  417382:	adc    eax,0x2e0f0e72
  417387:	xor    eax,0x46124e44
  41738c:	fnstenv [edi]
  41738e:	pop    es
  41738f:	sbb    eax,0xbf352e0
  417394:	outs   dx,DWORD PTR ds:[esi]
  417395:	xchg   edi,eax
  417396:	mov    bh,0x59
  417398:	sbb    BYTE PTR [edx-0x22],0xdc
  41739c:	pusha  
  41739d:	pop    ss
  41739e:	or     BYTE PTR [eax-0x12],cl
  4173a1:	lods   al,BYTE PTR ds:[esi]
  4173a2:	pop    ds
  4173a3:	xchg   esi,eax
  4173a4:	repnz shl esp,cl
  4173a7:	scas   al,BYTE PTR es:[edi]
  4173a8:	cmp    edi,ecx
  4173aa:	mov    edx,0xec8e6be1
  4173af:	fcmovbe st,st(6)
  4173b1:	push   esp
  4173b2:	xor    eax,0xf2d6271b
  4173b7:	xchg   edx,eax
  4173b8:	ins    DWORD PTR es:[edi],dx
  4173b9:	inc    edx
  4173ba:	movups xmm7,xmm6
  4173bd:	add    ebp,DWORD PTR [eax]
  4173bf:	sbb    eax,esi
  4173c1:	test   DWORD PTR [esi+0x364544f5],esp
  4173c7:	mov    DWORD PTR [esi+0x4],edx
  4173ca:	test   al,0xe0
  4173cc:	inc    edx
  4173cd:	arpl   WORD PTR [esi-0x72],si
  4173d0:	adc    eax,0x8ed914f5
  4173d5:	cmp    esp,DWORD PTR [ebp-0x497fc4be]
  4173db:	mov    ecx,0x43eca51f
  4173e0:	inc    esp
  4173e1:	cmp    DWORD PTR [eax],ebx
  4173e3:	sub    BYTE PTR [esi],0xd8
  4173e6:	icebp  
  4173e7:	stc    
  4173e8:	loop   0x41744a
  4173ea:	or     eax,0xe86475f3
  4173ef:	mov    eax,0xee5ef4a5
  4173f4:	aad    0xed
  4173f6:	jp     0x417433
  4173f8:	push   ebp
  4173f9:	inc    edi
  4173fa:	cld    
  4173fb:	or     eax,0xb034212f
  417400:	cmp    DWORD PTR [edi],edx
  417402:	lahf   
  417403:	in     eax,dx
  417404:	cwde   
  417405:	call   0xc3ebc4c9
  41740a:	call   0x7a40:0x8349eb24
  417411:	jo     0x4173fd
  417413:	scas   eax,DWORD PTR es:[edi]
  417414:	jnp    0x417433
  417416:	dec    edx
  417417:	xchg   ecx,eax
  417418:	jbe    0x417405
  41741a:	fwait
  41741b:	ins    BYTE PTR es:[edi],dx
  41741c:	iret   
  41741d:	in     eax,dx
  41741e:	int3   
  41741f:	xchg   esp,eax
  417420:	add    BYTE PTR [ecx+ebx*2-0x2d],dl
  417424:	sbb    esp,DWORD PTR [eax]
  417426:	push   es
  417427:	ja     0x417447
  417429:	inc    ebp
  41742a:	mov    eax,ds:0x2e4e645
  41742f:	push   edi
  417430:	mov    edx,0x7b13cb2c
  417435:	jmp    0xd2bbef97
  41743a:	push   ecx
  41743b:	sahf   
  41743c:	aad    0xf3
  41743e:	push   eax
  41743f:	mov    ebx,0xa148fd62
  417444:	mov    esi,0x1c8da0be
  417449:	sub    DWORD PTR [edx+ecx*4-0x59],esp
  41744d:	mov    DWORD PTR [edi],ebp
  41744f:	sub    eax,0x6d2d2be1
  417454:	mov    ch,0xff
  417456:	jg     0x4173f9
  417458:	mov    esi,0x5bac34de
  41745d:	mov    eax,ds:0x187119bd
  417462:	mov    bh,0xf9
  417464:	shl    ebx,0xc0
  417467:	jae    0x4174a4
  417469:	mov    ?,WORD PTR [edx+edi*8]
  41746c:	std    
  41746d:	pop    eax
  41746e:	xchg   ecx,eax
  41746f:	push   ds
  417470:	cmp    ebp,edx
  417472:	fwait
  417473:	adc    ebx,DWORD PTR [edi]
  417475:	jp     0x4174bd
  417477:	cdq    
  417478:	pop    ss
  417479:	xchg   edx,eax
  41747a:	rcl    BYTE PTR [ecx],0xb2
  41747d:	(bad)  
  41747e:	mov    ecx,DWORD PTR [esi]
  417480:	cli    
  417481:	sbb    ebx,DWORD PTR ds:0x4de9390a
  417487:	lahf   
  417488:	adc    edx,DWORD PTR [esi+0x64dd4897]
  41748e:	iret   
  41748f:	lods   al,BYTE PTR ds:[esi]
  417490:	scas   al,BYTE PTR es:[edi]
  417491:	sub    eax,0xe20e554
  417496:	rcr    BYTE PTR [ebp-0x26d229d8],0x80
  41749d:	mov    WORD PTR [ebp-0x6565852a],?
  4174a3:	retf   
  4174a4:	sbb    DWORD PTR [ecx*8-0x4158ba19],eax
  4174ab:	test   al,0xcc
  4174ad:	lock cdq 
  4174af:	stos   DWORD PTR es:[edi],eax
  4174b0:	push   edi
  4174b1:	pop    ebx
  4174b2:	push   ds
  4174b3:	repnz les ecx,FWORD PTR [ebx]
  4174b6:	daa    
  4174b7:	pop    esp
  4174b8:	and    al,0x99
  4174ba:	test   BYTE PTR [edi-0x1b825f37],ah
  4174c0:	shl    BYTE PTR [ebp-0x3216aec3],cl
  4174c6:	icebp  
  4174c7:	jp     0x4174fb
  4174c9:	jae    0x417504
  4174cb:	push   ebp
  4174cc:	cmc    
  4174cd:	adc    ch,BYTE PTR [ebx]
  4174cf:	leave  
  4174d0:	jns    0x417543
  4174d2:	(bad)  
  4174d3:	jmp    DWORD PTR [esi+0xd]
  4174d6:	push   ecx
  4174d7:	dec    edi
  4174d8:	pop    ebp
  4174d9:	xor    ch,BYTE PTR [ecx+0x24]
  4174dc:	test   eax,0x68c8f46f
  4174e2:	stc    
  4174e3:	rcr    ebx,0x3
  4174e6:	shr    BYTE PTR [eax+0xe],1
  4174e9:	pop    esp
  4174ea:	sbb    ebp,ecx
  4174ec:	mov    esi,0x32fd958a
  4174f1:	xchg   ah,dh
  4174f3:	inc    edi
  4174f4:	fidivr DWORD PTR [ebp-0x7b]
  4174f7:	pop    eax
  4174f8:	mov    ebx,DWORD PTR [ebx]
  4174fa:	mov    eax,ds:0x9c83d109
  4174ff:	pop    esp
  417500:	mov    edi,0xbc4e5ba1
  417505:	test   DWORD PTR [esi],ebx
  417507:	into   
  417508:	retf   0x2250
  41750b:	push   ds
  41750c:	fnstenv ds:0xf54a5277
  417512:	push   ebx
  417513:	mov    ebp,0xa37b9fb9
  417518:	das    
  417519:	jmp    0x41751e
  41751b:	xchg   ebp,eax
  41751c:	adc    DWORD PTR [ebx+0x7199428f],edx
  417522:	(bad)  ds:0x3390032b
  417528:	rol    BYTE PTR [ecx],cl
  41752a:	pop    ebp
  41752b:	hlt    
  41752c:	pop    ebx
  41752d:	mov    eax,DWORD PTR [ebp-0xc]
  417530:	pop    edi
  417531:	jmp    0x417815
  417536:	cld    
  417537:	pop    esi
  417538:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417539:	addr16 popa 
  41753b:	gs mov esp,0x68365a61
  417541:	mov    DWORD PTR [eax],esp
  417543:	loope  0x4175b2
  417545:	lahf   
  417546:	mov    ecx,0xb9707f24
  41754b:	jle    0x4175bd
  41754d:	jo     0x4175b5
  41754f:	fisubr DWORD PTR [esi-0x32]
  417552:	and    ah,cl
  417554:	jne    0x41759d
  417556:	cmc    
  417557:	mov    ah,0xc6
  417559:	popa   
  41755a:	or     esp,DWORD PTR [ecx]
  41755c:	dec    edx
  41755d:	cmp    al,0xea
  41755f:	dec    esp
  417560:	hlt    
  417561:	jg     0x41756b
  417563:	xchg   ebx,eax
  417564:	sub    eax,0x91f51047
  417569:	call   0x3836:0x30340d65
  417570:	lahf   
  417571:	xor    eax,DWORD PTR [eax+0xc67bb89]
  417577:	push   edi
  417578:	cdq    
  417579:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41757a:	push   edx
  41757c:	lea    esi,[ebx-0x24d0f956]
  417582:	pop    edx
  417583:	mov    edx,0xd9d6afb7
  417588:	xor    al,0xc2
  41758a:	push   ebp
  41758b:	loopne 0x41759e
  41758d:	call   0xeaf0:0x676e0e99
  417594:	mov    eax,0x3ae64efb
  417599:	es cmp eax,0x46feae7d
  41759f:	and    eax,0x8f3cba0b
  4175a4:	xchg   ebp,eax
  4175a5:	add    bl,BYTE PTR [ebp+0x12]
  4175a8:	pop    edi
  4175a9:	retf   
  4175aa:	or     esi,esi
  4175ac:	scas   al,BYTE PTR es:[edi]
  4175ad:	mov    BYTE PTR [edx+0x6c],dl
  4175b0:	stos   BYTE PTR es:[edi],al
  4175b1:	loope  0x417560
  4175b3:	xor    BYTE PTR [eax+ebp*1],al
  4175b6:	mov    DWORD PTR [edx-0x11],ebp
  4175b9:	fistp  DWORD PTR [edi-0x2594281f]
  4175bf:	pop    ecx
  4175c0:	scas   al,BYTE PTR es:[edi]
  4175c1:	mov    cl,ch
  4175c3:	stc    
  4175c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4175c5:	test   ch,dl
  4175c7:	pusha  
  4175c8:	push   ebp
  4175c9:	push   edi
  4175ca:	pushf  
  4175cb:	push   esp
  4175cc:	jne    0x417631
  4175ce:	cmp    eax,0x2f98b8c4
  4175d3:	xchg   ecx,eax
  4175d4:	inc    ebx
  4175d5:	mov    ah,ch
  4175d7:	sbb    bl,bl
  4175d9:	jo     0x417573
  4175db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4175dc:	test   eax,0x98fad0f3
  4175e1:	imul   ebp,DWORD PTR [ebx-0x7e],0x26
  4175e5:	inc    esi
  4175e6:	call   0x7146:0xeeeba1fd
  4175ed:	mov    ds:0xe64c5f15,eax
  4175f2:	in     eax,dx
  4175f3:	add    al,BYTE PTR [ebx-0x74]
  4175f6:	xchg   ebp,eax
  4175f7:	test   BYTE PTR [esi],ah
  4175f9:	in     al,0xbd
  4175fb:	jae    0x41762e
  4175fd:	dec    ecx
  4175fe:	inc    eax
  4175ff:	rcr    esp,0xf0
  417602:	jo     0x41763a
  417604:	push   esi
  417605:	je     0x417596
  417607:	xchg   BYTE PTR [edi+0x31],dl
  41760a:	push   0x2d
  41760c:	cmc    
  41760d:	xor    bl,BYTE PTR [esi+eiz*1]
  417610:	inc    ebp
  417611:	in     al,dx
  417612:	jnp    0x41765d
  417614:	arpl   WORD PTR [eax],di
  417616:	mov    esi,0x769f144f
  41761b:	xor    BYTE PTR [ecx+0x5a],dl
  41761e:	(bad)  
  41761f:	and    esp,DWORD PTR [ecx]
  417621:	or     ebx,ebp
  417623:	in     al,dx
  417624:	push   es
  417625:	sub    BYTE PTR [ecx],0xc1
  417628:	push   esp
  417629:	test   DWORD PTR [edx+0x39b221eb],edi
  41762f:	sub    eax,0xe6954105
  417634:	out    dx,eax
  417635:	fimul  DWORD PTR [esi]
  417637:	bound  ebp,QWORD PTR [esi+0x5e7b5f0d]
  41763d:	daa    
  41763e:	mov    ecx,0x28637038
  417643:	fadd   QWORD PTR [ebp+ebx*1+0xf]
  417647:	lock fs cli 
  41764a:	sbb    eax,0xda35a3e1
  41764f:	fisub  WORD PTR [edi-0x7]
  417652:	cs pop es
  417654:	xchg   esi,eax
  417655:	inc    ecx
  417656:	in     eax,0x46
  417658:	jno    0x4175da
  41765a:	out    0x2b,al
  41765c:	or     eax,DWORD PTR [edi+0xc]
  41765f:	lds    ebp,FWORD PTR [edi]
  417661:	or     bl,cl
  417663:	js     0x417652
  417665:	inc    esp
  417666:	mov    ds:0x1cccc3ff,al
  41766b:	das    
  41766c:	fcomp  st(2)
  41766e:	mov    dl,0x2b
  417670:	and    ebx,esp
  417672:	jnp    0x4175f5
  417674:	out    0xe0,eax
  417676:	jns    0x417631
  417678:	retf   
  417679:	cdq    
  41767a:	adc    DWORD PTR [esi+eax*1],ecx
  41767d:	sbb    DWORD PTR ds:0xa3cfff49,edx
  417683:	pop    ebx
  417684:	cs pushf 
  417686:	sbb    BYTE PTR [edx+0x44],dh
  417689:	jge    0x417674
  41768b:	nop
  41768c:	inc    esi
  41768d:	mov    ds:0x21d35b06,al
  417692:	mov    esp,0x7700f954
  417697:	push   edx
  417698:	push   ds
  417699:	add    BYTE PTR [esi+0x1f],dl
  41769c:	mov    cl,0x22
  41769e:	sahf   
  41769f:	ror    BYTE PTR [ebp+0x509f4569],1
  4176a5:	arpl   WORD PTR [esi],bx
  4176a7:	pop    edi
  4176a8:	lds    ebx,FWORD PTR [esi-0x26e6d623]
  4176ae:	xor    BYTE PTR [edi+0x350f0a37],bl
  4176b4:	xchg   ebx,eax
  4176b5:	sub    esp,esi
  4176b7:	(bad)  
  4176b8:	(bad)  
  4176b9:	mov    esi,0xed952a91
  4176be:	cli    
  4176bf:	jae    0x41773c
  4176c1:	shr    BYTE PTR [ecx+0x24],0x18
  4176c5:	cmp    BYTE PTR [ecx],bh
  4176c7:	mov    eax,ds:0xc089ae65
  4176cc:	dec    esi
  4176cd:	ds xchg edx,eax
  4176cf:	fild   DWORD PTR [edx-0x774151b8]
  4176d5:	std    
  4176d6:	mov    bl,0x3c
  4176d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4176d9:	pop    eax
  4176da:	push   cs
  4176db:	(bad)  
  4176dc:	jnp    0x41771f
  4176de:	add    eax,DWORD PTR [edx-0x4ef10583]
  4176e4:	adc    esi,ecx
  4176e6:	dec    edi
  4176e7:	sbb    BYTE PTR [ecx],dl
  4176e9:	dec    edi
  4176ea:	add    bl,bl
  4176ec:	addr16 call 0xb524:0x78c719bf
  4176f4:	call   0x1d20:0xfb2e179d
  4176fb:	ss xor ebx,esp
  4176fe:	mov    ds:0x947806c1,eax
  417703:	xchg   esp,eax
  417704:	push   0x1ff181a
  417709:	sub    al,0xdb
  41770b:	aaa    
  41770c:	cwde   
  41770d:	lds    edi,FWORD PTR [edi+0x19]
  417710:	dec    ecx
  417711:	sti    
  417712:	pusha  
  417713:	rcl    DWORD PTR [ebx+eax*1+0x2e0dfee1],0x37
  41771b:	lock dec ebx
  41771d:	pusha  
  41771e:	mov    edi,DWORD PTR [ebx-0x8f465cb]
  417724:	pushf  
  417725:	sub    eax,0x477e5509
  41772a:	je     0x417727
  41772c:	xchg   esi,eax
  41772d:	mov    eax,ds:0xe788f53a
  417732:	popa   
  417733:	inc    edi
  417734:	xor    BYTE PTR [esi+0x3faf15e],0x7c
  41773b:	inc    esp
  41773c:	and    eax,0xc0f02344
  417741:	(bad)  
  417742:	or     al,0xb0
  417744:	cmp    eax,0x4e9cb43
  417749:	mov    ch,0x2f
  41774b:	stos   DWORD PTR es:[edi],eax
  41774c:	out    0x62,al
  41774e:	ret    0x1325
  417751:	addr16 call 0x2f07d9ee
  417757:	mov    al,0xd8
  417759:	call   FWORD PTR [ecx]
  41775b:	lahf   
  41775c:	mov    DWORD PTR [esp+edi*2-0x516e3fc8],ebp
  417763:	lods   al,BYTE PTR ds:[esi]
  417764:	jecxz  0x417778
  417766:	add    dh,BYTE PTR [esi+0x59]
  417769:	mov    edx,0x7bd39cf1
  41776e:	adc    ebp,DWORD PTR [esi+0x52cde16]
  417774:	xchg   esi,eax
  417775:	ins    DWORD PTR es:[edi],dx
  417776:	push   ebp
  417777:	mov    dh,BYTE PTR [edx+edi*1+0x67773d32]
  41777e:	loop   0x417793
  417780:	(bad)  
  417781:	jle    0x4177f0
  417783:	jge    0x4177c7
  417785:	out    0x46,eax
  417787:	pop    esp
  417788:	inc    edx
  417789:	inc    eax
  41778a:	(bad)  
  41778b:	inc    esp
  41778c:	pushf  
  41778d:	in     eax,dx
  41778e:	inc    esi
  41778f:	nop
  417790:	shl    BYTE PTR [esi+0x5e0321ac],1
  417796:	add    ch,BYTE PTR [ebx-0x20]
  417799:	jno    0x417773
  41779b:	das    
  41779c:	sbb    dl,BYTE PTR [edi-0x1912112]
  4177a2:	cmp    BYTE PTR [ebx+eax*8-0x418cb043],bl
  4177a9:	leave  
  4177aa:	into   
  4177ab:	stos   DWORD PTR es:[edi],eax
  4177ac:	fisttp WORD PTR [esi+0x7c]
  4177af:	cdq    
  4177b0:	sub    BYTE PTR [edi+0x7257ee6a],dh
  4177b6:	adc    ecx,DWORD PTR [eax]
  4177b8:	cli    
  4177b9:	nop
  4177ba:	lds    edi,FWORD PTR [edx]
  4177bc:	push   cs
  4177bd:	je     0x4177e7
  4177bf:	cmc    
  4177c0:	js     0x4177dc
  4177c2:	and    ebp,DWORD PTR [edx+0x21]
  4177c5:	mov    esi,0x3e1c653e
  4177ca:	inc    esi
  4177cb:	js     0x4177a2
  4177cd:	jmp    0x5a8a70ec
  4177d2:	and    BYTE PTR [edx],bl
  4177d4:	mov    BYTE PTR [eax-0x52adb06e],al
  4177da:	mov    dl,0x49
  4177dc:	mov    eax,ds:0xbf12e64
  4177e1:	leave  
  4177e2:	stos   DWORD PTR es:[edi],eax
  4177e3:	cmp    eax,DWORD PTR [edi-0x7fb3ae03]
  4177e9:	nop
  4177ea:	aad    0xa7
  4177ec:	js     0x41780f
  4177ee:	and    al,BYTE PTR [edi+0x5a]
  4177f1:	add    esi,DWORD PTR [edx]
  4177f3:	add    al,0x45
  4177f5:	cmp    BYTE PTR [ebp+0x7bb3f448],dl
  4177fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4177fc:	test   DWORD PTR [esi-0x5c],esi
  4177ff:	add    ch,BYTE PTR [ebp+0x1]
  417802:	inc    ebp
  417803:	or     eax,0x43852c5a
  417808:	adc    esi,DWORD PTR [edi+esi*8-0x808c1aa]
  41780f:	dec    ecx
  417810:	mov    al,0xc7
  417812:	cmp    DWORD PTR [ebx+eiz*1+0x5e],ecx
  417816:	pop    ebx
  417817:	leave  
  417818:	ret    0x10
  41781b:	dec    ebp
  41781c:	push   ebp
  41781d:	mov    DWORD PTR [ebx-0x7e9d13f8],ecx
  417823:	mov    esp,ebp
  417825:	or     ah,dh
  417827:	dec    ebp
  417828:	add    bh,al
  41782a:	add    BYTE PTR [eax],cl
  41782c:	add    BYTE PTR [eax],al
  41782e:	mov    DWORD PTR [eax],0x40f44545
  417834:	xor    DWORD PTR [eax],eax
  417836:	test   DWORD PTR [ebx-0x34070b64],ecx
  41783c:	(bad)  
  41783d:	enter  0x4d45,0xbc
  417841:	mov    esi,DWORD PTR [eax]
  417843:	hlt    
  417844:	test   ebx,ecx
  417846:	pushf  
  417847:	enter  0x4df8,0x8b
  41784b:	mov    DWORD PTR [ebp-0x20],0x890208
  417852:	inc    ebp
  417853:	inc    ebp
  417854:	cld    
  417855:	xor    cl,BYTE PTR [ebx-0xb38b300]
  41785b:	or     BYTE PTR [ebx+0x0],dl
  41785e:	mov    ebx,0x8bd5500
  417863:	call   DWORD PTR [ecx-0x1]
  417866:	pop    es
  417867:	mov    ch,0x33
  417869:	dec    ebx
  41786b:	(bad)  
  41786c:	mov    eax,0x72009ca4
  417871:	push   DWORD PTR [edx]
  417873:	or     BYTE PTR [eax],al
  417875:	jmp    0xff89:0x75c84d03
  41787c:	dec    ebp
  41787d:	loopne 0x41784f
  41787f:	ror    BYTE PTR [ebx-0xbf5b2bb],cl
  417885:	add    BYTE PTR [ebx],dh
  417887:	mov    ecx,ebx
  417889:	hlt    
  41788a:	add    ecx,ebx
  41788c:	enter  0x899c,0x32
  417890:	dec    ebp
  417891:	add    ecx,eax
  417893:	mov    DWORD PTR [ebx-0xbb2b2f8],ecx
  417899:	or     DWORD PTR [ebx-0xb00b29c],0x0
  4178a0:	xor    ecx,ebx
  4178a2:	retf   
  4178a3:	enter  0x4d03,0xc8
  4178a7:	mov    DWORD PTR fs:[eax],ebx
  4178aa:	lea    eax,[eax]
  4178ac:	push   esp
  4178ad:	mov    edi,edi
  4178af:	fs (bad) 
  4178b1:	(bad)  
  4178b2:	dec    DWORD PTR [ebx-0x7aa8cfaa]
  4178b8:	push   0xffffffff
  4178ba:	and    bh,bh
  4178bc:	pop    ecx
  4178bd:	inc    eax
  4178be:	mov    DWORD PTR [ecx-0xb2aff8],ecx
  4178c4:	push   0xffffff8b
  4178c6:	pop    ecx
  4178c7:	cld    
  4178c8:	dec    ebp
  4178c9:	lea    ecx,[ecx+0x45ff08ff]
  4178cf:	mov    BYTE PTR [edx+0x1],cl
  4178d2:	add    BYTE PTR [eax],al
  4178d4:	mov    DWORD PTR [ebp+0x8],0x58008d
  4178db:	dec    DWORD PTR [ebp-0x77]
  4178de:	xor    esp,DWORD PTR [ebx+eax*1+0x88b8900]
  4178e5:	cld    
  4178e6:	dec    ebp
  4178e7:	jne    0x41791c
  4178e9:	lea    eax,[ebx]
  4178eb:	push   eax
  4178ec:	mov    edi,edi
  4178ee:	or     BYTE PTR [ecx+0x54a845],cl
  4178f4:	add    al,ch
  4178f6:	(bad)  
  4178f7:	sub    esp,ebp
  4178f9:	add    BYTE PTR [eax],al
  4178fb:	rol    BYTE PTR [eax],0x84
  4178fe:	inc    ebp
  4178ff:	add    dh,BYTE PTR [esi+0x0]
  417902:	add    BYTE PTR [ebp-0x73],al
  417905:	mov    ebp,DWORD PTR [esp+edx*4]
  417908:	inc    DWORD PTR [eax]
  41790a:	lea    ecx,[ebx-0x30074f4]
  417910:	call   0x428495
  417915:	add    BYTE PTR [ebp+0x0],cl
  417918:	jne    0x41795b
  41791a:	dec    DWORD PTR [ebx-0x76210314]
  417920:	dec    ebp
  417921:	add    DWORD PTR [ebp+0x0],esi
  417924:	(bad)  
  417925:	xchg   ebp,eax
  417926:	loopne 0x417927
  417928:	inc    eax
  417929:	inc    DWORD PTR [eax]
  41792b:	mov    ecx,DWORD PTR [ebp-0x4]
  41792e:	xor    edx,DWORD PTR [edx+0x7201b8]
  417934:	add    BYTE PTR [edx],dl
  417936:	enter  0x4d90,0x0
  41793a:	mov    eax,DWORD PTR [eax]
  41793c:	hlt    
  41793d:	add    al,0xa5
  41793f:	mov    al,0xff
  417941:	add    bh,bh
  417943:	add    BYTE PTR [ebx],dh
  417945:	inc    DWORD PTR [ebx]
  417947:	sbb    al,0x89
  417949:	jne    0x417923
  41794b:	mov    esp,DWORD PTR [ecx+0x4500fc]
  417951:	mov    eax,DWORD PTR [ebp-0xff0048]
  417957:	mov    DWORD PTR [eax-0x70],0xee58ed89
  41795e:	inc    DWORD PTR [ebp-0x75]
  417961:	fisttp QWORD PTR [eax+eiz*8]
  417964:	test   DWORD PTR [esi-0x1],esp
  417967:	inc    ebp
  417968:	(bad)  
  417969:	aas    
  41796a:	inc    ebp
  41796b:	(bad)  
  41796c:	lea    edi,[esp+eiz*2-0x1]
  417970:	inc    edi
  417972:	mov    DWORD PTR ds:0x8000c7a0,edi
  417978:	mov    ebp,esi
  41797a:	cld    
  41797b:	in     al,0x8d
  41797d:	inc    ebp
  41797e:	jmp    eax
  417980:	(bad)  
  417981:	fisttp WORD PTR [eax+0x8801c7]
  417987:	jecxz  0x4179ce
  417989:	out    dx,al
  41798a:	inc    DWORD PTR [ebp-0x4]
  41798d:	out    0x8d,eax
  41798f:	aas    
  417990:	inc    edi
  417992:	jmp    FWORD PTR [eax-0x78]
  417995:	inc    DWORD PTR [ecx]
  417997:	mov    DWORD PTR [eax],0xc7a83d
  41799d:	ins    BYTE PTR es:[edi],dx
  41799e:	test   edi,edi
  4179a0:	pandn  mm0,mm5
  4179a3:	aas    
  4179a4:	add    bh,al
  4179a6:	mov    esi,DWORD PTR [eax-0x4]
  4179a9:	inc    DWORD PTR [eax+0xdf01e0]
  4179af:	(bad)  
  4179b0:	or     BYTE PTR [ebp+eax*2-0x1],dh
  4179b4:	mov    ebp,ebx
  4179b6:	xchg   esp,eax
  4179b7:	fild   DWORD PTR [eax]
  4179b9:	(bad)  
  4179ba:	mov    edi,DWORD PTR [eax+0x3]
  4179bd:	(bad)  
  4179be:	cmp    al,0xe7
  4179c0:	dec    ebp
  4179c1:	leave  
  4179c2:	mov    ebp,eax
  4179c4:	fsubr  DWORD PTR [ecx]
  4179c6:	add    BYTE PTR [eax],al
  4179c8:	lea    ecx,[ebx-0x7f0003b4]
  4179ce:	push   edx
  4179cf:	add    DWORD PTR [ebp+0x0],edx
  4179d2:	mov    esi,DWORD PTR [eax]
  4179d4:	mov    WORD PTR [ebx-0x7a750000],?
  4179da:	add    esi,DWORD PTR [ebp-0x78]
  4179dd:	mov    eax,DWORD PTR [eax]
  4179df:	cld    
  4179e0:	push   0x7d
  4179e2:	dec    DWORD PTR [ebx+0xd88c]
  4179e8:	push   edx
  4179e9:	mov    edx,DWORD PTR [ecx-0x4]
  4179ec:	call   DWORD PTR [eax+0x7d01fc]
  4179f2:	mov    ebx,edx
  4179f4:	cld    
  4179f5:	add    BYTE PTR [eax+0x560150],dl
  4179fb:	test   DWORD PTR [ebp+0x75],eax
  4179fe:	in     al,0x8b
  417a00:	in     al,dx
  417a01:	cld    
  417a02:	(bad)  
  417a03:	jge    0x417999
  417a05:	mov    esp,ebx
  417a07:	fsub   st,st(7)
  417a09:	add    bh,al
  417a0b:	mov    ebx,DWORD PTR [eax-0x7a6f8f04]
  417a11:	add    edi,edi
  417a13:	add    bh,bh
  417a15:	mov    eax,0x50d800ed
  417a1a:	inc    ebp
  417a1b:	push   esi
  417a1c:	fisttp WORD PTR [ebx+0x4dc7f43f]
  417a22:	test   BYTE PTR [ebx],dh
  417a24:	fadd   DWORD PTR ds:0x4572c2
  417a2a:	jmp    0x4179ed
  417a2c:	fild   DWORD PTR [edi+eax*8-0x22ff73ff]
  417a33:	inc    esi
  417a34:	jo     0x417a36
  417a36:	test   edi,eax
  417a38:	jmp    esp
  417a3a:	inc    DWORD PTR [eax]
  417a3c:	in     eax,dx
  417a3d:	add    al,bl
  417a3f:	jne    0x4179c6
  417a41:	mov    edi,edi
  417a43:	cld    
  417a44:	inc    DWORD PTR [ebp-0x12]
  417a47:	mov    esp,esp
  417a49:	mov    ah,0x85
  417a4b:	add    bh,bh
  417a4d:	call   0x119a351
  417a52:	ret    0x858b
  417a55:	cld    
  417a56:	inc    DWORD PTR [eax+0xe301ff]
  417a5c:	out    dx,al
  417a5d:	xor    BYTE PTR [ebp-0xff00cf],al
  417a63:	mov    ebx,ebp
  417a65:	cld    
  417a66:	jo     0x4179f1
  417a68:	or     DWORD PTR [ecx],eax
  417a6a:	add    BYTE PTR [eax],al
  417a6c:	push   eax
  417a6d:	add    DWORD PTR [ebp+0x45],eax
  417a70:	mov    ecx,DWORD PTR [ebx+0xd8a8]
  417a76:	dec    DWORD PTR [ebx-0x3fda0318]
  417a7c:	add    BYTE PTR [ebp-0xbf0040],dl
  417a82:	inc    ebp
  417a83:	or     BYTE PTR [ebx-0x4faf0400],0x45
  417a8a:	add    DWORD PTR [ebx+0x459c00],ecx
  417a90:	mov    edi,edi
  417a92:	mov    eax,0xe80800ff
  417a97:	inc    ebp
  417a98:	sub    BYTE PTR [ebx-0x47000400],cl
  417a9e:	add    al,0x1
  417aa0:	rol    BYTE PTR [eax],0x1e
  417aa3:	jne    0x417aea
  417aa5:	xor    ecx,DWORD PTR [ebx-0x4f830373]
  417aab:	inc    DWORD PTR [ecx]
  417aad:	call   0x86a2b2
  417ab2:	mov    ecx,DWORD PTR [ebx-0x7fff0348]
  417ab8:	call   0x41a2be
  417abd:	xor    bh,bh
  417abf:	push   edi
  417ac0:	adc    BYTE PTR [ebx-0x747423bb],al
  417ac6:	loopne 0x417aa4
  417ac8:	ret    
  417ac9:	loopne 0x417a67
  417acb:	xor    DWORD PTR [edx],0x31
  417ace:	cmp    edi,edi
  417ad0:	bswap  esp
  417ad2:	rol    BYTE PTR gs:[eax],0x5
  417ad6:	jmp    0x12c7c20
  417adb:	mov    eax,DWORD PTR [ebp-0x4]
  417ade:	add    BYTE PTR [eax+0xff0100],bh
  417ae4:	cld    
  417ae5:	jne    0x417b64
  417ae7:	xor    ecx,DWORD PTR [ebx-0x6f6f0373]
  417aed:	push   ss
  417aee:	add    DWORD PTR [eax],eax
  417af0:	add    BYTE PTR [eax+0x7f],dl
  417af3:	inc    ebp
  417af4:	add    BYTE PTR [ebx+0x459850],cl
  417afa:	mov    edi,edi
  417afc:	test   al,0xff
  417afe:	add    BYTE PTR [eax],cl
  417b00:	inc    DWORD PTR [ebp-0x18]
  417b03:	jmp    DWORD PTR ds:0x4d7d00dc
  417b09:	adc    BYTE PTR [ebx+0x459cb9],cl
  417b0f:	mov    ecx,DWORD PTR [ecx-0x33c7404]
  417b15:	pushf  
  417b16:	mov    eax,0x30132
  417b1b:	lea    esi,[ebp+0x2c]
  417b1e:	xor    edi,edi
  417b20:	(bad)  
  417b21:	call   0x140a28e
  417b26:	call   0x135a3b6
  417b2b:	jne    0x417ab8
  417b2d:	xor    edi,esp
  417b2f:	add    eax,DWORD PTR [eax+0xc018d]
  417b35:	push   DWORD PTR [eax]
  417b37:	call   0xcaa293
  417b3c:	int3   
  417b3d:	inc    DWORD PTR [ebp-0x14]
  417b40:	mov    ecx,DWORD PTR [ebp-0x28]
  417b43:	xor    eax,DWORD PTR [eax]
  417b45:	add    ecx,DWORD PTR [ebx-0x3f8a03c5]
  417b4b:	(bad)  
  417b4c:	xchg   ebp,eax
  417b4d:	in     al,0xff
  417b4f:	add    bh,bh
  417b51:	add    BYTE PTR [ebp+0x45],dl
  417b54:	add    BYTE PTR [ebx-0x3cbaf7b0],cl
  417b5a:	mov    eax,DWORD PTR [esp+ebx*4-0xcdff64]
  417b61:	mov    edi,edi
  417b63:	or     BYTE PTR [eax],cl
  417b65:	inc    ebp
  417b66:	test   DWORD PTR gs:[eax],eax
  417b69:	je     0x417bb0
  417b6b:	mov    eax,DWORD PTR [ebx-0x3fb2f844]
  417b71:	xor    edx,DWORD PTR [eax-0x73]
  417b74:	push   ebp
  417b75:	or     BYTE PTR [ebp+0x21007572],al
  417b7b:	inc    ebp
  417b7c:	in     al,dx
  417b7d:	mov    ebp,DWORD PTR [eax]
  417b7f:	mov    esp,0x648bc345
  417b84:	fmul   st,st(5)
  417b86:	add    BYTE PTR [ebx],ch
  417b88:	mov    eax,DWORD PTR [ebx]
  417b8a:	cld    
  417b8b:	loopne 0x417b4d
  417b8d:	inc    ebp
  417b8e:	push   ebp
  417b8f:	cmp    ebp,eax
  417b91:	movaps xmm4,XMMWORD PTR [eax-0x74740100]
  417b98:	cld    
  417b99:	fadd   DWORD PTR [eax+0x3b014d]
  417b9f:	jne    0x417bd1
  417ba1:	push   0xf8898557
  417ba6:	in     al,dx
  417ba7:	jne    0x417bee
  417ba9:	lea    eax,[ebx+0x72e8dcc8]
  417baf:	das    
  417bb0:	mov    eax,DWORD PTR [eax]
  417bb2:	mov    esp,0x33eb7545
  417bb7:	mov    edi,DWORD PTR [edi+0x4572bc]
  417bbd:	xor    eax,edi
  417bbf:	adc    DWORD PTR [ebp-0xcd0064],0x8be131
  417bc9:	rcl    BYTE PTR [eax-0x40],1
  417bcc:	inc    ebp
  417bcd:	lock mov eax,DWORD PTR [esp+edi*8-0x38ff3cf9]
  417bd5:	inc    ebp
  417bd6:	xchg   ebp,eax
  417bd7:	ud0    ebp,DWORD PTR [ebx]
  417bda:	inc    DWORD PTR [eax]
  417bdc:	retf   
  417bdd:	jbe    0x417bdf
  417bdf:	mov    dl,BYTE PTR [eax-0x80]
  417be2:	push   ebp
  417be3:	pop    ds
  417be4:	mov    ecx,DWORD PTR [esp+esi*8]
  417be7:	inc    eax
  417be8:	retf   
  417be9:	inc    ebp
  417bea:	iret   
  417beb:	jb     0x417bb5
  417bed:	mov    eax,DWORD PTR [edi]
  417bef:	enter  0x4545,0x1
  417bf3:	xor    DWORD PTR [eax],eax
  417bf5:	pushf  
  417bf6:	mov    ecx,DWORD PTR [ecx+0x304df0bc]
  417bfc:	xor    ebx,DWORD PTR [ebp+ecx*4+0x72e00889]
  417c03:	dec    ebp
  417c04:	add    BYTE PTR [ebx],dh
  417c06:	inc    ebp
  417c07:	mov    DWORD PTR [ebx-0x3f631b4c],ecx
  417c0d:	xor    dl,BYTE PTR [edx]
  417c0f:	add    eax,DWORD PTR [ebp-0x77]
  417c12:	mov    eax,esp
  417c14:	fmul   DWORD PTR [ebp-0x3d]
  417c17:	xor    eax,DWORD PTR [ebx+eax*1+0x832899c]
  417c1e:	mov    DWORD PTR [ebp-0x28],eax
  417c21:	rol    DWORD PTR [ebp-0x64],1
  417c24:	xor    eax,edi
  417c26:	mov    ecx,0xff858db0
  417c2b:	clc    
  417c2c:	enter  0x4d45,0x32
  417c30:	mov    ebx,DWORD PTR [eax+ecx*1-0x795b3e39]
  417c37:	test   esi,edi
  417c39:	clc    
  417c3a:	inc    DWORD PTR [ebp+0x45]
  417c3d:	cmp    al,0x8b
  417c3f:	pushf  
  417c40:	or     bh,al
  417c42:	enter  0x16a8,0x85
  417c46:	xor    eax,edi
  417c48:	pushf  
  417c49:	inc    ebp
  417c4a:	(bad)  
  417c4b:	ds cld 
  417c4d:	pushf  
  417c4e:	inc    ebp
  417c4f:	mov    edx,DWORD PTR [eax-0x28]
  417c52:	lock push ebp
  417c54:	add    BYTE PTR [ebx],dh
  417c56:	mov    DWORD PTR [ebx],eax
  417c58:	sar    BYTE PTR [ebx],1
  417c5a:	adc    BYTE PTR [edi],cl
  417c5c:	dec    ebp
  417c5d:	adc    al,0x8b
  417c5f:	add    al,dl
  417c61:	jmp    0x1027e31
  417c66:	jb     0x417cb5
  417c68:	add    BYTE PTR [ebx-0x2e8a0ff8],cl
  417c6e:	xor    ecx,DWORD PTR [ebp+0x3b]
  417c71:	xor    ecx,DWORD PTR [edi]
  417c73:	add    ecx,DWORD PTR [ebx+edi*1+0x0]
  417c77:	(bad)  
  417c79:	clc    
  417c7a:	enter  0x8400,0x8b
  417c7e:	pop    es
  417c7f:	mov    al,0x0
  417c81:	push   ebp
  417c82:	push   cs
  417c83:	xor    ecx,eax
  417c85:	xor    esp,ecx
  417c87:	add    ebp,DWORD PTR [eax]
  417c89:	add    esi,DWORD PTR [eax]
  417c8b:	(bad)  
  417c8d:	retf   0x55c8
  417c90:	repnz mov eax,DWORD PTR [ebp-0x10]
  417c94:	(bad)  
  417c95:	cli    
  417c96:	fdivr  st,st(1)
  417c98:	test   DWORD PTR [eax+edi*8],ecx
  417c9b:	dec    ebp
  417c9c:	inc    ebp
  417c9d:	xor    edi,DWORD PTR [eax-0x7167afd]
  417ca3:	add    BYTE PTR [ebp+0x0],al
  417ca6:	mov    ecx,DWORD PTR [ebp-0x28]
  417ca9:	mov    ecx,ebx
  417cab:	clc    
  417cac:	jne    0x417c79
  417cae:	mov    esi,0xd672d3
  417cb3:	into   
  417cb4:	into   
  417cb5:	scas   eax,DWORD PTR es:[edi]
  417cb6:	dec    ebp
  417cb7:	mov    ecx,DWORD PTR [ebx-0x3482273c]
  417cbd:	sub    ecx,esi
  417cbf:	cmp    ecx,DWORD PTR [ebp+0x77]
  417cc2:	(bad)  
  417cc3:	mov    edi,eax
  417cc5:	mov    al,0x85
  417cc7:	mov    eax,edi
  417cc9:	add    BYTE PTR [ebp-0x75],al
  417ccc:	xor    esp,DWORD PTR [esp+ebx*4-0x47cc38ab]
  417cd3:	xor    eax,DWORD PTR [ebp+0x4503f803]
  417cd9:	(bad)  
  417cdb:	retf   0x559c
  417cde:	(bad)  
  417cdf:	mov    ebp,DWORD PTR [eax+esi*8-0x607057b]
  417ce6:	inc    ebp
  417ce7:	add    eax,0xeb9c4d3f
  417cec:	(bad)  
  417ced:	mov    ecx,esp
  417cef:	lods   al,BYTE PTR ds:[esi]
  417cf0:	test   DWORD PTR [ebp-0x8],edx
  417cf3:	xor    ecx,DWORD PTR [ebp+0x33]
  417cf6:	mov    eax,DWORD PTR [ebx]
  417cf8:	lock add ecx,ebx
  417cfb:	bswap  esi
  417cfd:	retf   0x55d1
  417d00:	test   BYTE PTR [ebx-0x5ff0ffe],cl
  417d06:	jmp    0x417d01
  417d08:	add    BYTE PTR ds:0xebc44d8b,al
  417d0e:	push   ebp
  417d0f:	mov    ebp,DWORD PTR [ebx]
  417d11:	test   al,0x8b
  417d13:	push   ebp
  417d14:	clc    
  417d15:	xor    ecx,ebx
  417d17:	xor    ecx,esi
  417d19:	add    edx,ecx
  417d1b:	add    eax,DWORD PTR [edx+0xca010f]
  417d21:	push   ebp
  417d22:	dec    ebp
  417d23:	mov    ecx,DWORD PTR [ebx-0x34050710]
  417d29:	stc    
  417d2a:	rol    DWORD PTR ds:0xebce4dd6,cl
  417d30:	scas   eax,DWORD PTR es:[edi]
  417d31:	mov    ecx,DWORD PTR [ebx+0x7d55c4cc]
  417d37:	xor    ebp,DWORD PTR [ebx]
  417d39:	xor    edi,DWORD PTR [ebx]
  417d3b:	add    esi,DWORD PTR [edi+0x3]
  417d3e:	mov    ecx,DWORD PTR [edi]
  417d40:	clc    
  417d41:	retf   0x55cb
  417d44:	into   
  417d45:	mov    edi,DWORD PTR [eax+esi*8-0x6740600]
  417d4c:	mov    eax,0x3376554d
  417d51:	mov    esi,DWORD PTR [ebx]
  417d53:	int3   
  417d54:	add    edx,DWORD PTR [ebp+0x3]
  417d57:	xor    ecx,DWORD PTR [edi]
  417d59:	xor    ecx,edx
  417d5b:	add    edx,DWORD PTR [ebp+0x3]
  417d5e:	mov    ecx,DWORD PTR [edi]
  417d60:	lock retf 0x4dfa
  417d64:	stc    
  417d65:	mov    ecx,DWORD PTR [eax]
  417d67:	or     BYTE PTR [ebp+0x4d],cl
  417d6a:	jmp    0x1057dfa
  417d6f:	dec    ebp
  417d70:	dec    ebp
  417d71:	(bad)  
  417d72:	mov    ebx,esp
  417d74:	clc    
  417d75:	test   ebx,ecx
  417d77:	clc    
  417d78:	ror    DWORD PTR [ebp-0x2a],cl
  417d7b:	mov    esi,ecx
  417d7d:	call   0x33ccc331
  417d82:	les    ebx,FWORD PTR [ebp+edi*2+0x3bdc2b8b]
  417d89:	retf   
  417d8a:	ja     0x417d5a
  417d8c:	mov    ebp,DWORD PTR [eax-0x48]
  417d8f:	dec    ebp
  417d90:	xor    ecx,DWORD PTR [di+0x3]
  417d94:	mov    esp,esp
  417d96:	clc    
  417d97:	push   ebp
  417d98:	retf   
  417d99:	mov    dl,bl
  417d9b:	adc    esi,edx
  417d9d:	jb     0x417d6d
  417d9f:	add    BYTE PTR [edi-0x3b7474b3],ch
  417da5:	call   0x4d6d4927
  417daa:	cmp    ecx,DWORD PTR [ebx-0x73742789]
  417db0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417db1:	pushf  
  417db2:	inc    ebp
  417db3:	xor    cl,BYTE PTR [ebp-0x78]
  417db6:	mov    edx,edi
  417db8:	clc    
  417db9:	dec    ebp
  417dba:	retf   
  417dbb:	mov    edx,ebx
  417dbd:	call   0x56105198
  417dc2:	scas   eax,DWORD PTR es:[edi]
  417dc3:	mov    ecx,DWORD PTR [ebx+0x7d8cc4d8]
  417dc9:	pushf  
  417dca:	sub    esi,DWORD PTR [edx]
  417dcc:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  417dd2:	lods   al,BYTE PTR ds:[esi]
  417dd3:	xor    esp,DWORD PTR [ebx]
  417dd5:	add    ecx,DWORD PTR [ebp-0x1c]
  417dd8:	mov    edi,DWORD PTR [ebp-0x8]
  417ddb:	mov    bl,cl
  417ddd:	cmp    dl,bl
  417ddf:	jb     0x417daf
  417de1:	add    dh,dl
  417de3:	dec    ebp
  417de4:	scas   eax,DWORD PTR es:[edi]
  417de5:	mov    ecx,DWORD PTR [ebx+0x7dcbc4e8]
  417deb:	shr    DWORD PTR [ebx],cl
  417ded:	into   
  417dee:	cmp    edx,esi
  417df0:	mov    ebp,DWORD PTR [edi-0x1bfcfc58]
  417df6:	dec    ebp
  417df7:	dec    ebp
  417df8:	mov    ecx,DWORD PTR [ebx+0x55d3e8f8]
  417dfe:	retf   
  417dff:	xor    edx,esi
  417e01:	add    ecx,esi
  417e03:	imul   ecx,edx
  417e06:	mov    DWORD PTR [ebp+0x8],edx
  417e09:	xor    ecx,DWORD PTR [ebp+0x2b]
  417e0c:	mov    DWORD PTR [ebx+0x7d4de8ec],ecx
  417e12:	add    esi,DWORD PTR [ebx]
  417e14:	mov    ah,0x3
  417e16:	inc    ebp
  417e17:	rdtsc  
  417e19:	xlat   BYTE PTR ds:[ebx]
  417e1a:	pushf  
  417e1b:	jge    0x417da6
  417e1d:	xor    ebx,eax
  417e1f:	sub    eax,DWORD PTR [ebp-0x73]
  417e22:	(bad)  
  417e23:	cmp    al,al
  417e25:	jb     0x417dac
  417e27:	add    al,bh
  417e29:	ror    DWORD PTR [ebp-0x7a],1
  417e2c:	xor    edi,edi
  417e2e:	add    edi,edi
  417e30:	jmp    0x417e7f
  417e32:	mov    ecx,DWORD PTR [ebx-0x34341324]
  417e38:	dec    ebp
  417e39:	into   
  417e3a:	mov    ebp,DWORD PTR [edi-0x23737428]
  417e40:	pushf  
  417e41:	shl    DWORD PTR [edx],cl
  417e43:	retf   0x5588
  417e46:	or     ecx,DWORD PTR [ebp+0x7233114d]
  417e4c:	add    eax,DWORD PTR [eax]
  417e4e:	in     al,0x4d
  417e50:	push   ebp
  417e51:	mov    ecx,DWORD PTR [edx+0x72cb11e0]
  417e57:	fs add ch,cl
  417e5a:	dec    ebp
  417e5b:	sub    ecx,DWORD PTR [edx+0x55f00b03]
  417e61:	dec    ebp
  417e62:	xor    ecx,DWORD PTR [ebx-0x341b3bfd]
  417e68:	jge    0x417e38
  417e6a:	mov    BYTE PTR [edi+0xf723b3a],ch
  417e70:	add    cl,dh
  417e72:	dec    ebp
  417e73:	dec    DWORD PTR [ebx-0x2c032375]
  417e79:	adc    BYTE PTR [ebp+0x1],0x8b
  417e7d:	add    al,bl
  417e7f:	jge    0x417e0d
  417e81:	push   0xffffff9c
  417e83:	push   0x8b3032
  417e88:	shl    BYTE PTR [ebp+0x55],0x6a
  417e8c:	xor    edi,edi
  417e8e:	xor    edx,DWORD PTR [ebx+eax*1]
  417e91:	inc    ebp
  417e92:	add    eax,DWORD PTR [ebp-0x7c358bf1]
  417e98:	dec    ebp
  417e99:	or     BYTE PTR [ecx+0x4dc8e483],cl
  417e9f:	jbe    0x417e2c
  417ea1:	mov    ebp,esp
  417ea3:	ror    bl,1
  417ea5:	enter  0x14ce,0xaf
  417ea9:	dec    DWORD PTR [ebx-0x2cef17f8]
  417eaf:	push   ebp
  417eb0:	retf   0x5540
  417eb3:	push   ebp
  417eb4:	mov    esi,DWORD PTR [edx-0x1c]
  417eb7:	mov    edx,ebx
  417eb9:	cld    
  417eba:	(bad)  
  417ebb:	sub    BYTE PTR [edi-0x23ff74ff],0x0
  417ec2:	sti    
  417ec3:	add    dh,cl
  417ec5:	push   0xffffff94
  417ec7:	call   FWORD PTR [eax+edx*8-0x74c4afce]
  417ece:	bswap  esp
  417ed0:	pop    esi
  417ed1:	inc    ebp
  417ed2:	dec    DWORD PTR [ecx+0x45e8c88b]
  417ed8:	push   ebp
  417ed9:	xor    esi,DWORD PTR [ebx]
  417edb:	mov    DWORD PTR [ebx],0xcac00f9c
  417ee1:	aas    
  417ee2:	push   ebp
  417ee3:	inc    ebp
  417ee4:	xor    ecx,eax
  417ee6:	add    ecx,eax
  417ee8:	mov    eax,DWORD PTR [ebx]
  417eea:	(bad)  
  417eeb:	jmp    0x417e79
  417eed:	mov    bl,BYTE PTR [ebp+eax*1-0x2f7674ce]
  417ef4:	les    edi,FWORD PTR [esi-0xeccefb3]
  417efa:	mov    edx,0xff378d80
  417eff:	mov    dh,0xd1
  417f01:	cmp    edx,DWORD PTR [ebp+0xf]
  417f04:	mov    eax,DWORD PTR [edx-0x20]
  417f07:	add    BYTE PTR [ebp-0x75],bh
  417f0a:	xor    edi,DWORD PTR [ebx+eax*1-0x307bf035]
  417f11:	pushf  
  417f12:	retf   0x8632
  417f15:	cmp    ebp,0x8
  417f18:	call   ebx
  417f1a:	inc    ebp
  417f1b:	inc    ebp
  417f1c:	mov    ecx,DWORD PTR [ebx+0x450008d8]
  417f22:	mov    esi,DWORD PTR [ecx]
  417f24:	enter  0x49c,0xc7
  417f28:	add    al,al
  417f2a:	add    bl,al
  417f2c:	(bad)  
  417f2d:	clc    
  417f2e:	enter  0x45,0x31
  417f32:	push   eax
  417f33:	pushf  
  417f34:	mov    edi,eax
  417f36:	int3   
  417f37:	or     al,al
  417f39:	test   DWORD PTR [edi],edi
  417f3b:	clc    
  417f3c:	gs inc ebp
  417f3e:	add    BYTE PTR [ebx+0x4d00fc7d],cl
  417f44:	push   ss
  417f45:	xor    ecx,DWORD PTR [ebp+0x3]
  417f48:	sub    edx,DWORD PTR [ecx-0x76]
  417f4b:	dec    ebp
  417f4c:	add    DWORD PTR [ebx+0x88d845],ecx
  417f52:	mov    esi,DWORD PTR [ebx]
  417f54:	or     BYTE PTR [ebx],al
  417f56:	cmp    edx,DWORD PTR [ecx-0x38]
  417f59:	dec    ebp
  417f5a:	out    dx,eax
  417f5b:	xor    eax,DWORD PTR [ebp+0x3]
  417f5e:	mov    edx,DWORD PTR [ecx-0x28]
  417f61:	dec    ebp
  417f62:	add    BYTE PTR [ebx],dh
  417f64:	push   0x518003
  417f69:	push   eax
  417f6a:	add    BYTE PTR [ebx-0x300748b],cl
  417f70:	sbb    BYTE PTR [ebp+0x45],cl
  417f73:	mov    ecx,DWORD PTR [ecx+0x7d00d0d8]
  417f79:	xor    ecx,DWORD PTR [ebx-0x3cae0bfd]
  417f7f:	dec    ebp
  417f80:	inc    ebp
  417f81:	xor    ecx,eax
  417f83:	add    ecx,eax
  417f85:	push   ecx
  417f86:	(bad)  
  417f87:	dec    ebp
  417f88:	mov    al,ds:0xc5e03dff
  417f8d:	retf   
  417f8e:	(bad)  
  417f8f:	into   
  417f90:	sub    bh,bh
  417f92:	dec    esp
  417f93:	adc    al,0x9c
  417f95:	inc    ebp
  417f96:	push   ebp
  417f97:	test   DWORD PTR [edi],ecx
  417f99:	unpcklps xmm0,XMMWORD PTR [ecx-0x7ab8ff80]
  417fa0:	jmp    0xc9ba8eb4
  417fa5:	add    cl,dl
  417fa7:	mov    DWORD PTR [ebp+0x8501c0],0x33454df8
  417fb1:	xor    ecx,DWORD PTR [ebp+0x728b089c]
  417fb7:	rol    BYTE PTR [eax],0x55
  417fba:	clc    
  417fbb:	fs jb  0x417fc5
  417fbe:	mov    eax,DWORD PTR [ebp-0x30]
  417fc1:	xor    al,0x40
  417fc3:	sub    al,0xc7
  417fc5:	mov    ah,ch
  417fc7:	add    DWORD PTR [ebp+0x4534f845],eax
  417fcd:	sub    al,0x86
  417fcf:	mov    BYTE PTR [edx+eax*1-0x335a39],bl
  417fd6:	mov    ch,0xff
  417fd8:	clc    
  417fd9:	add    DWORD PTR [ebp+0x60],0x3d
  417fdd:	call   FWORD PTR [eax+eax*1-0x1f7a77]
  417fe4:	inc    ebp
  417fe5:	dec    DWORD PTR [ebx-0x341ff701]
  417feb:	test   esi,ecx
  417fed:	dec    DWORD PTR [ebx-0x7f8a3301]
  417ff3:	push   eax
  417ff4:	add    DWORD PTR [ebp+0x0],eax
  417ff7:	dec    ebx
  417ff9:	or     al,0xce
  417ffb:	ror    BYTE PTR [ebx-0x34173fb0],0x4
  418002:	into   
  418003:	add    BYTE PTR [ebx-0x34ff1400],cl
  418009:	mov    esi,ecx
  41800b:	sar    bh,0x45
  41800e:	adc    al,0x8b
  418010:	clc    
  418011:	fadd   DWORD PTR [ebp+0x0]
  418014:	mov    ebp,DWORD PTR [edx+0x8]
  418017:	push   edi
  418018:	adc    BYTE PTR [eax+0x1],0x83
  41801c:	add    al,al
  41801e:	retf   
  41801f:	mov    ecx,esi
  418021:	cld    
  418022:	mov    eax,DWORD PTR [eax+0xcb01cc]
  418028:	into   
  418029:	add    BYTE PTR [ebx+0x756aec00],cl
  41802f:	jne    0x418064
  418031:	inc    DWORD PTR [ebx]
  418033:	rcl    BYTE PTR [ecx+0x50],1
  418036:	push   eax
  418037:	mov    ecx,DWORD PTR [ecx-0xbaf7f8]
  41803d:	mov    eax,DWORD PTR [eax+eiz*8-0x14ffbafd]
  418044:	sar    bh,0x84
  418047:	or     BYTE PTR [ebx],al
  418049:	push   eax
  41804a:	add    BYTE PTR [ebx+0x4532c845],cl
  418050:	pushf  
  418051:	xor    edi,eax
  418053:	pushf  
  418054:	mov    ah,0x89
  418056:	test   eax,ebp
  418058:	clc    
  418059:	inc    ebp
  41805a:	inc    ebp
  41805b:	mov    DWORD PTR [eax+eax*8],esi
  41805e:	sub    al,0x30
  418060:	mov    BYTE PTR [ebx+ecx*4+0x55d8ec89],bl
  418067:	dec    ebp
  418068:	xor    eax,DWORD PTR fs:[edi+0x3]
  41806c:	mov    ecx,DWORD PTR [ecx+0x4d55f4b4]
  418072:	xor    eax,DWORD PTR fs:[edi+0x3]
  418076:	or     DWORD PTR [ecx+0x45ff085c],0x0
  41807d:	shl    DWORD PTR [ebp-0x380064],1
  418083:	int3   
  418084:	lea    eax,[ebp+0x45fff860]
  41808a:	push   eax
  41808b:	xor    dh,BYTE PTR [ebp-0x64]
  41808e:	(bad)  
  41808f:	(bad)  
  418090:	pop    esp
  418091:	lods   al,BYTE PTR ds:[esi]
  418092:	inc    DWORD PTR [ebp+0x4508f8ff]
  418098:	mov    edi,DWORD PTR [eax+edx*8]
  41809b:	pushf  
  41809c:	jo     0x418065
  41809e:	cmp    DWORD PTR [eax-0x7a87af0],0x46
  4180a5:	inc    ebp
  4180a6:	add    BYTE PTR [esi],bh
  4180a8:	push   0x8b809c
  4180ad:	in     al,dx
  4180ae:	inc    ebp
  4180af:	push   ebp
  4180b0:	mov    esi,DWORD PTR [ebx]
  4180b2:	cld    
  4180b3:	add    eax,DWORD PTR [eax+0xf013b]
  4180b9:	adc    al,0x0
  4180bb:	add    bh,bh
  4180bd:	jmp    0xbe81da
  4180c2:	add    BYTE PTR [ebp+0x45],cl
  4180c5:	mov    ecx,DWORD PTR [ebx+0xd1d8e8]
  4180cb:	dec    ebp
  4180cc:	push   0x38033
  4180d1:	cmp    eax,DWORD PTR [eax]
  4180d3:	unpcklps xmm7,xmm0
  4180d6:	jne    0x4180d8
  4180d8:	dec    DWORD PTR [ebx+0x5545cc18]
  4180de:	mov    DWORD PTR [ebx],esi
  4180e0:	shl    BYTE PTR [ebx],1
  4180e2:	inc    ebp
  4180e3:	add    ecx,DWORD PTR [ecx+0x60fc803]
  4180e9:	retf   0x5575
  4180ec:	dec    DWORD PTR [ebx-0x5ba17e8]
  4180f2:	(bad)  
  4180f3:	stc    
  4180f4:	in     al,dx
  4180f5:	or     al,0x85
  4180f7:	dec    ebp
  4180f8:	clc    
  4180f9:	xor    eax,DWORD PTR [ebp+0x3]
  4180fc:	mov    ebp,ecx
  4180fe:	rol    BYTE PTR [eax],1
  418100:	inc    ebp
  418101:	add    BYTE PTR [eax-0x7747ab3],bh
  418107:	clc    
  418108:	inc    ebp
  418109:	retf   
  41810a:	mov    edx,ebx
  41810c:	in     al,dx
  41810d:	(bad)  
  41810e:	retf   
  41810f:	into   
  418110:	into   
  418111:	scas   eax,DWORD PTR es:[edi]
  418112:	dec    ebp
  418113:	mov    ecx,DWORD PTR [ebx-0x3482130c]
  418119:	sub    ecx,esi
  41811b:	cmp    ecx,DWORD PTR [ebp+0x77]
  41811e:	(bad)  
  41811f:	mov    edi,eax
  418121:	int3   
  418122:	test   DWORD PTR [ecx-0x74baff08],ecx
  418128:	xor    ebp,DWORD PTR [esp+ebx*4-0x57cc38ab]
  41812f:	xor    eax,DWORD PTR [ebp+0x4503f803]
  418135:	(bad)  
  418137:	retf   0x559c
  41813a:	(bad)  
  41813b:	mov    esp,DWORD PTR [eax+ebp*8-0x607057b]
  418142:	inc    ebp
  418143:	add    eax,0xeb9c4d3f
  418148:	(bad)  
  418149:	mov    esi,DWORD PTR [eax-0x7aa7a5c]
  41814f:	xor    ecx,DWORD PTR [ebp+0x33]
  418152:	mov    eax,DWORD PTR [ebx]
  418154:	call   0xce514c5c
  418159:	retf   0x55d1
  41815c:	test   BYTE PTR [ebx-0x5ff17fe],cl
  418162:	jmp    0x41815d
  418164:	add    BYTE PTR ds:0xebf44d8b,al
  41816a:	push   ebp
  41816b:	mov    ebp,DWORD PTR [ebx]
  41816d:	mov    eax,0x33f8558b
  418172:	retf   
  418173:	xor    ecx,esi
  418175:	add    edx,ecx
  418177:	add    eax,DWORD PTR [edx+0xca010f]
  41817d:	push   ebp
  41817e:	dec    ebp
  41817f:	mov    ecx,DWORD PTR [ebx-0x34050718]
  418185:	stc    
  418186:	rol    DWORD PTR ds:0xebce4dd6,cl
  41818c:	scas   eax,DWORD PTR es:[edi]
  41818d:	mov    ecx,DWORD PTR [ebx+0x7d55f4b0]
  418193:	xor    ebp,DWORD PTR [ebx]
  418195:	xor    edi,DWORD PTR [ebx]
  418197:	add    esi,DWORD PTR [edi+0x3]
  41819a:	mov    ecx,DWORD PTR [edi]
  41819c:	clc    
  41819d:	retf   0x55cb
  4181a0:	into   
  4181a1:	mov    edi,DWORD PTR [eax+ebp*8-0x6740600]
  4181a8:	test   al,0x4d
  4181aa:	push   ebp
  4181ab:	jbe    0x4181e0
  4181ad:	mov    esi,DWORD PTR [ebx]
  4181af:	mov    al,0x3
  4181b1:	push   ebp
  4181b2:	add    esi,DWORD PTR [ebx]
  4181b4:	rdpmc  
  4181b6:	retf   0x5503
  4181b9:	add    ecx,DWORD PTR [ebx-0x53517f1]
  4181bf:	dec    ebp
  4181c0:	stc    
  4181c1:	mov    ecx,DWORD PTR [eax]
  4181c3:	or     BYTE PTR [ebp+0x4d],cl
  4181c6:	jmp    0x1358256
  4181cb:	dec    ebp
  4181cc:	dec    ebp
  4181cd:	(bad)  
  4181ce:	mov    ebx,esp
  4181d0:	clc    
  4181d1:	test   ebx,ecx
  4181d3:	clc    
  4181d4:	ror    DWORD PTR [ebp-0x2a],cl
  4181d7:	mov    esi,ecx
  4181d9:	lock scas eax,DWORD PTR es:[edi]
  4181db:	inc    ebp
  4181dc:	mov    esi,DWORD PTR [ebx]
  4181de:	hlt    
  4181df:	pushf  
  4181e0:	jge    0x41816d
  4181e2:	sub    ebx,esp
  4181e4:	cmp    ecx,ebx
  4181e6:	ja     0x4181b6
  4181e8:	mov    ebp,DWORD PTR [eax-0x58]
  4181eb:	dec    ebp
  4181ec:	xor    ecx,DWORD PTR [di+0x3]
  4181f0:	mov    esp,esp
  4181f2:	clc    
  4181f3:	push   ebp
  4181f4:	retf   
  4181f5:	mov    dl,bl
  4181f7:	adc    esi,edx
  4181f9:	jb     0x4181c9
  4181fb:	add    BYTE PTR [edi-0xb7474b3],ch
  418201:	lock jge 0x4181cf
  418204:	sub    ecx,DWORD PTR [ebp+0x3b]
  418207:	mov    esi,DWORD PTR [edi-0x20]
  41820a:	mov    ecx,DWORD PTR [esp+ebp*4+0x4d32459c]
  418211:	mov    BYTE PTR [ebx-0x34b20729],cl
  418217:	mov    edx,ebx
  418219:	lock (bad) 
  41821b:	ror    esi,cl
  41821d:	push   ebp
  41821e:	scas   eax,DWORD PTR es:[edi]
  41821f:	mov    ecx,DWORD PTR [ebx+0x7d8cf4e0]
  418225:	pushf  
  418226:	sub    esi,DWORD PTR [edx]
  418228:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  41822e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41822f:	xor    esp,DWORD PTR [ebx]
  418231:	add    ecx,DWORD PTR [ebp-0x1c]
  418234:	mov    edi,DWORD PTR [ebp-0x8]
  418237:	mov    bl,cl
  418239:	cmp    dl,bl
  41823b:	jb     0x41820b
  41823d:	add    dh,dl
  41823f:	dec    ebp
  418240:	scas   eax,DWORD PTR es:[edi]
  418241:	mov    ecx,DWORD PTR [ebx+0x7dcbf4f0]
  418247:	shr    DWORD PTR [ebx],cl
  418249:	into   
  41824a:	cmp    edx,esi
  41824c:	mov    ebp,DWORD PTR [edi-0x1bfcfc48]
  418252:	dec    ebp
  418253:	dec    ebp
  418254:	mov    ecx,DWORD PTR [ebx+0x55d3f0f8]
  41825a:	retf   
  41825b:	xor    edx,esi
  41825d:	add    ecx,esi
  41825f:	imul   ecx,edx
  418262:	mov    DWORD PTR [ebp+0x8],edx
  418265:	xor    ecx,DWORD PTR [ebp+0x2b]
  418268:	mov    DWORD PTR [ebx+0x7d4df0ec],ecx
  41826e:	add    esi,DWORD PTR [ebx]
  418270:	rol    BYTE PTR [ebx],0x45
  418273:	rdtsc  
  418275:	xlat   BYTE PTR ds:[ebx]
  418276:	pushf  
  418277:	jge    0x418202
  418279:	xor    esp,eax
  41827b:	sub    eax,DWORD PTR [ebp-0x73]
  41827e:	(bad)  
  41827f:	cmp    dh,BYTE PTR [edx+esi*2-0x2e07ff7b]
  418286:	dec    ebp
  418287:	xchg   BYTE PTR [ebx],dh
  418289:	inc    DWORD PTR [ebx]
  41828b:	(bad)  
  41828c:	jmp    0x4182db
  41828e:	mov    ecx,DWORD PTR [ebx-0x34341324]
  418294:	dec    ebp
  418295:	into   
  418296:	mov    ebp,DWORD PTR [edi-0x23737420]
  41829c:	pushf  
  41829d:	shl    DWORD PTR [edx],cl
  41829f:	retf   0x5588
  4182a2:	or     ecx,DWORD PTR [ebp+0x7233114d]
  4182a8:	add    eax,DWORD PTR [eax]
  4182aa:	in     al,0x4d
  4182ac:	push   ebp
  4182ad:	mov    ecx,DWORD PTR [edx+0x72cb11d8]
  4182b3:	fs add ch,cl
  4182b6:	dec    ebp
  4182b7:	sub    ecx,DWORD PTR [edx+0x55e80b03]
  4182bd:	dec    ebp
  4182be:	xor    ecx,DWORD PTR [ebx-0x341b0bfd]
  4182c4:	jge    0x418294
  4182c6:	mov    BYTE PTR [edi+0xf723b3a],ch
  4182cc:	add    cl,dh
  4182ce:	dec    ebp
  4182cf:	dec    DWORD PTR [ebx-0x2c032301]
  4182d5:	inc    ebp
  4182d6:	push   ebp
  4182d7:	dec    DWORD PTR [ebx-0x73ff1f34]
  4182dd:	lea    ebx,[esp+edx*2+0x508bff32]
  4182e4:	mov    ah,0x45
  4182e6:	push   ebp
  4182e7:	mov    esi,DWORD PTR [ebx]
  4182e9:	les    esi,FWORD PTR [ebx]
  4182eb:	add    BYTE PTR [ebx],al
  4182ed:	inc    DWORD PTR [ebx]
  4182ef:	mov    ecx,DWORD PTR [edi]
  4182f1:	cld    
  4182f2:	retf   0x4d80
  4182f5:	add    DWORD PTR [ecx+0x4d30e400],ecx
  4182fb:	jne    0x418288
  4182fd:	(bad)  
  4182fe:	in     al,dx
  4182ff:	ror    bl,1
  418301:	scas   al,BYTE PTR es:[edi]
  418302:	into   
  418303:	add    BYTE PTR [edi-0xf2f7475],ch
  418309:	not    bl
  41830b:	adc    al,0xca
  41830d:	inc    ebp
  41830e:	push   ebp
  41830f:	mov    ecx,DWORD PTR [ebx-0x2cff1b28]
  418315:	push   0xaf80d6
  41831a:	mov    eax,DWORD PTR [eax]
  41831c:	fdiv   st(7),st
  41831e:	sti    
  41831f:	sbb    dh,cl
  418321:	pop    esi
  418322:	xchg   esp,eax
  418323:	leave  
  418324:	pushf  
  418325:	add    al,0x32
  418327:	push   ebp
  418328:	cmp    ebp,esp
  41832a:	sqrtps xmm3,XMMWORD PTR [esi+0x45]
  41832e:	dec    DWORD PTR [ecx-0x740f0375]
  418334:	push   ebp
  418335:	cld    
  418336:	xor    ecx,DWORD PTR [edi-0x76f07efd]
  41833c:	retf   0x558b
  41833f:	clc    
  418340:	xor    esi,eax
  418342:	add    esi,DWORD PTR [ebp-0x75]
  418345:	(bad)  
  418346:	hlt    
  418347:	or     cl,BYTE PTR [esi+eax*8-0x39cdf764]
  41834e:	mov    DWORD PTR [edx],ecx
  418350:	hlt    
  418351:	(bad)  
  418352:	dec    ebp
  418353:	add    dh,BYTE PTR [ebx]
  418355:	leave  
  418356:	mov    edx,0xffec8d55
  41835b:	push   ecx
  41835c:	rol    DWORD PTR [ebp+0x55],1
  41835f:	mov    DWORD PTR [ebx+0x7d55d8fc],ecx
  418365:	mov    eax,0xf8030b33
  41836a:	lar    ecx,di
  41836d:	push   ebp
  41836e:	retf   0x863b
  418371:	jne    0x418370
  418373:	mov    edi,edi
  418375:	or     BYTE PTR [ebp+0x41],dh
  418378:	mov    ebp,esp
  41837a:	cld    
  41837b:	inc    eax
  41837c:	mov    al,0x25
  41837e:	add    DWORD PTR [ecx+0x0],eax
  418381:	in     eax,dx
  418382:	test   DWORD PTR [ecx-0x1],eax
  418385:	fdiv   st(7),st
  418387:	ret    0x8b
  41838a:	cld    
  41838b:	mov    eax,DWORD PTR [eax+0x8d0151]
  418391:	clc    
  418392:	xor    BYTE PTR [ebp+0x45],al
  418395:	mov    ecx,DWORD PTR [ebx+0x8fc0fc]
  41839b:	loopne 0x41839c
  41839d:	mov    edi,edi
  41839f:	mov    ecx,eax
  4183a1:	clc    
  4183a2:	jne    0x418374
  4183a4:	call   0x8294ad
  4183a9:	and    eax,0xc6854575
  4183ae:	je     0x4183b1
  4183b0:	mov    eax,esi
  4183b2:	cld    
  4183b3:	or     DWORD PTR [eax+0x401c9],eax
  4183b9:	push   ebp
  4183ba:	add    ah,ch
  4183bc:	add    BYTE PTR [ecx+0x6a],dl
  4183bf:	inc    ebp
  4183c0:	push   esi
  4183c1:	mov    DWORD PTR [eax-0x4],edx
  4183c4:	pop    edi
  4183c5:	mov    ebx,DWORD PTR [ebx-0x4]
  4183c8:	ret    0xbe
  4183cb:	push   es
  4183cc:	mov    ecx,DWORD PTR [ecx-0x77274af]
  4183d2:	clc    
  4183d3:	lock inc ebp
  4183d5:	jne    0x41842d
  4183d7:	(bad)  
  4183d8:	jne    0x4183de
  4183da:	mov    eax,0xf841ba66
  4183df:	fadd   QWORD PTR [esi]
  4183e1:	(bad)  
  4183e2:	jne    0x418421
  4183e4:	cmp    eax,ebx
  4183e6:	pop    esi
  4183e7:	mov    ecx,DWORD PTR [eax]
  4183e9:	push   ecx
  4183ea:	inc    ecx
  4183eb:	lea    esi,[eax-0x8]
  4183ee:	inc    edx
  4183ef:	inc    ebp
  4183f0:	int    0x8b
  4183f2:	inc    edx
  4183f3:	cld    
  4183f4:	jo     0x4183b5
  4183f6:	inc    ecx
  4183f7:	xchg   edx,esp
  4183f9:	mov    ebx,eax
  4183fb:	mov    ecx,DWORD PTR [ebx-0x722fae08]
  418401:	or     edi,eax
  418403:	inc    ebp
  418404:	inc    ebp
  418405:	(bad)  
  418406:	mov    ecx,DWORD PTR [eax]
  418408:	cld    
  418409:	(bad)  
  41840a:	jmp    0x41840d
  41840c:	mov    eax,esi
  41840e:	mov    DWORD PTR ds:0x4f8c98b,eax
  418414:	rcl    BYTE PTR [esi+0xf],1
  418417:	iret   
  418418:	inc    ebp
  418419:	leave  
  41841a:	(bad)  
  41841b:	dec    DWORD PTR [ecx]
  41841d:	mov    eax,esi
  41841f:	mov    eax,DWORD PTR [edi]
  418421:	mov    dh,0xdd
  418424:	push   es
  418425:	nop
  418426:	(bad)  
  418427:	inc    DWORD PTR [ebx]
  418429:	push   esi
  41842a:	leave  
  41842b:	iret   
  41842c:	add    al,0x46
  41842e:	push   ebp
  41842f:	jmp    0xff92da20
  418434:	inc    ebp
  418435:	push   esi
  418436:	mov    DWORD PTR [esi-0x4],eax
  418439:	in     eax,dx
  41843a:	push   ebp
  41843b:	sbb    BYTE PTR [eax+0x7c6daff],bh
  418441:	add    al,BYTE PTR [edx]
  418443:	mov    edx,DWORD PTR [ebp-0x17]
  418446:	cmp    edi,esi
  418448:	jne    0x418449
  41844a:	(bad)  
  41844b:	push   esi
  41844c:	pop    es
  41844d:	push   ebp
  41844e:	mov    ebp,esp
  418450:	or     BYTE PTR [ebp+0x41],al
  418453:	add    edi,esp
  418455:	sub    BYTE PTR [eax-0x4],al
  418458:	int3   
  418459:	jne    0x41841d
  41845b:	add    DWORD PTR [eax],eax
  41845d:	sbb    al,0x8b
  41845f:	mov    edx,DWORD PTR [ecx+0x14]
  418462:	lea    edx,[edx-0x1ba7508]
  418468:	push   esi
  418469:	enter  0xd375,0xb8
  41846d:	test   DWORD PTR [esi],0x6ce0750
  418473:	enter  0xd375,0x3b
  418477:	neg    DWORD PTR [esi+0x50]
  41847a:	or     cl,dl
  41847c:	inc    edx
  41847d:	(bad)  
  41847e:	loope  0x41846c
  418480:	(bad)  
  418481:	sub    eax,DWORD PTR [ebx]
  418483:	inc    eax
  418484:	loope  0x4184d6
  418486:	add    dl,BYTE PTR [eax-0x37]
  418489:	push   edi
  41848a:	push   ebp
  41848b:	imul   ah
  41848d:	adc    DWORD PTR [ecx-0x1],0x45
  418491:	add    BYTE PTR [ecx+0x55d3fc00],cl
  418497:	lea    edi,[eax-0x7fff4ca]
  41849d:	mov    eax,0x4550402
  4184a2:	cmp    ebp,ecx
  4184a4:	jne    0x418451
  4184a6:	mov    eax,DWORD PTR ds:0x241e808
  4184ac:	in     eax,dx
  4184ad:	add    BYTE PTR [eax-0x7],al
  4184b0:	out    0x36,eax
  4184b2:	inc    ecx
  4184b3:	aas    
  4184b4:	jmp    0xcd4736
  4184b9:	lock mov edi,DWORD PTR [ebp-0x18]
  4184bd:	and    edi,edi
  4184bf:	mov    edi,edi
  4184c1:	call   0xe40f859d
  4184c6:	push   es
  4184c7:	add    al,ch
  4184c9:	ud0    edx,DWORD PTR [ebp-0x7574ff01]
  4184d0:	(bad)  
  4184d1:	hlt    
  4184d2:	add    eax,0xffd3e87d
  4184d7:	cmp    bh,0x8
  4184da:	(bad)  
  4184db:	fld    DWORD PTR [esi]
  4184dd:	out    dx,al
  4184de:	call   0xffa083e6
  4184e3:	cmp    al,0x46
  4184e5:	shl    edx,0x8
  4184e8:	(bad)  
  4184e9:	pop    es
  4184ea:	fisttp QWORD PTR [ebp+0xe577eff]
  4184f0:	push   ebx
  4184f1:	add    BYTE PTR [ebx+0x24008b56],cl
  4184f7:	add    BYTE PTR [ebp+0x50],al
  4184fa:	push   eax
  4184fb:	add    DWORD PTR [ebx+0x757d1834],ecx
  418501:	sub    edx,DWORD PTR [esi-0x24]
  418504:	jne    0x4184bc
  418506:	lods   eax,DWORD PTR ds:[esi]
  418507:	mov    edx,DWORD PTR [edx-0x34]
  41850a:	dec    esi
  41850b:	out    0x83,eax
  41850d:	into   
  41850e:	push   edi
  418510:	loopne 0x4184e0
  418512:	shr    BYTE PTR [edx+ecx*4+0x0],1
  418516:	xor    DWORD PTR [eax-0x741fff01],0xffffffd0
  41851d:	rol    DWORD PTR [edx],0x8
  418520:	mov    esp,ecx
  418522:	cmp    DWORD PTR [ebx],0xc
  418525:	mov    esi,0x5001c0
  41852a:	push   eax
  41852b:	push   cs
  41852c:	push   eax
  41852d:	(bad)  
  41852e:	sub    edx,edi
  418530:	push   esi
  418531:	adc    al,0xcb
  418533:	ins    DWORD PTR es:[edi],dx
  418534:	mov    eax,0x203e8
  418539:	add    al,ah
  41853b:	inc    esi
  41853c:	mov    al,ch
  41853e:	pop    es
  41853f:	add    DWORD PTR [eax],0x1
  418542:	add    dh,al
  418544:	add    ah,ch
  418546:	rol    DWORD PTR [edx-0xd],1
  418549:	cli    
  41854a:	push   0x4a
  41854c:	pop    ecx
  41854d:	retf   0xfe6
  418550:	add    BYTE PTR [ebx-0x4e72f41e],al
  418556:	(bad)  
  418557:	dec    BYTE PTR [ebx+0x45b1fc72]
  41855d:	(bad)  
  41855e:	sub    ebp,DWORD PTR [ebx]
  418560:	and    al,0x52
  418562:	(bad)  
  418563:	dec    edi
  418564:	inc    ebp
  418565:	shl    DWORD PTR [eax+0x24fe8c8],0x0
  41856c:	add    BYTE PTR [ebp-0x7b],dh
  41856f:	pop    eax
  418570:	add    BYTE PTR [edx+0x0],bl
  418573:	pop    edx
  418574:	dec    ebp
  418575:	jmp    DWORD PTR [ebx]
  418577:	and    al,0xec
  418579:	push   edx
  41857a:	out    0x64,eax
  41857c:	jmp    0xd3f37b81
  418581:	jmp    0x4185db
  418583:	mov    al,0xfe
  418585:	dec    BYTE PTR [ebp-0x18fd8018]
  41858b:	add    BYTE PTR [esi+ebp*1],bh
  41858e:	pop    edx
  41858f:	icebp  
  418590:	mov    eax,cs
  418592:	ins    BYTE PTR es:[edi],dx
  418593:	adc    eax,0x75510000
  418598:	mov    esi,0x70158
  41859d:	or     DWORD PTR [eax-0x74f48dfe],esi
  4185a3:	mov    edi,esp
  4185a5:	cld    
  4185a6:	jge    0x41861d
  4185a8:	(bad)  
  4185aa:	aas    
  4185ab:	and    al,0x6d
  4185ad:	adc    cl,0x1
  4185b0:	mov    eax,DWORD PTR [eax]
  4185b2:	and    ecx,DWORD PTR [ebx-0x167203fd]
  4185b8:	dec    ebp
  4185b9:	add    eax,ebp
  4185bb:	add    BYTE PTR [edx],al
  4185bd:	fadd   DWORD PTR [eax]
  4185bf:	stc    
  4185c0:	enter  0xee00,0x8b
  4185c4:	sbb    eax,0x1
  4185c7:	sbb    esi,ecx
  4185c9:	in     al,0x0
  4185cb:	in     eax,dx
  4185cc:	add    BYTE PTR [eax],al
  4185ce:	jne    0x41855b
  4185d0:	cmp    edx,esp
  4185d2:	jb     0x4185dd
  4185d4:	jmp    0x41864b
  4185d6:	mov    ecx,DWORD PTR [ebx+0x4d91d4cc]
  4185dc:	add    BYTE PTR [ebx+0x4d83d840],cl
  4185e2:	add    DWORD PTR [ebx+0x4d3bdcee],ecx
  4185e8:	jb     0x418573
  4185ea:	pop    edx
  4185eb:	fadd   QWORD PTR [ebx-0x7445faa1]
  4185f1:	or     dh,BYTE PTR [edx+0x0]
  4185f4:	inc    edx
  4185f5:	or     dl,bh
  4185f7:	xlat   BYTE PTR ds:[ebx]
  4185f8:	dec    edx
  4185f9:	push   edi
  4185fa:	add    al,0x7
  4185fc:	leave  
  4185fd:	rol    DWORD PTR [edx+eax*1],0x7
  418601:	add    ecx,ecx
  418603:	mov    edx,ecx
  418605:	int3   
  418606:	jmp    0x4185c6
  418608:	mov    al,0x0
  41860a:	(bad)  
  41860b:	jne    0x4185f5
  41860d:	mov    eax,DWORD PTR [edx]
  41860f:	call   0xc1560314
  418614:	pop    edi
  418615:	add    ebx,DWORD PTR [ecx-0x37]
  418618:	pop    ecx
  418619:	or     BYTE PTR [ecx*4-0x1445b8af],dh
  418620:	push   es
  418621:	mov    eax,DWORD PTR [eax]
  418623:	int3   
  418624:	add    ch,al
  418626:	jae    0x418610
  418628:	int    0x1
  41862a:	enter  0x3000,0x18
  41862e:	add    BYTE PTR [ebp+0x75],al
  418631:	mov    esi,DWORD PTR [eax-0x171f0134]
  418637:	push   0x2
  418639:	pop    ecx
  41863a:	add    BYTE PTR [eax],cl
  41863c:	push   ebx
  41863d:	lea    edi,[edi+eax*2]
  418640:	mov    al,0x1
  418642:	jb     0x418644
  418644:	mov    al,0x10
  418646:	push   eax
  418647:	add    al,0x75
  418649:	add    BYTE PTR [ebx],ch
  41864b:	add    ebx,esp
  41864d:	int3   
  41864e:	jne    0x418660
  418650:	movsx  edx,cl
  418653:	add    DWORD PTR [eax],eax
  418655:	add    BYTE PTR [ebp+ecx*2+0x40aa2b7d],ch
  41865c:	mov    gs,edi
  41865e:	add    BYTE PTR [eax-0x50],ch
  418661:	add    al,ch
  418663:	mov    eax,DWORD PTR [ecx]
  418665:	sub    eax,DWORD PTR [eax]
  418667:	jb     0x4186de
  418669:	add    DWORD PTR [esp+eiz*8-0x50],esi
  41866d:	jge    0x418657
  41866f:	add    al,0x1
  418671:	add    DWORD PTR [eax],0x0
  418674:	jne    0x418676
  418676:	je     0x4186bd
  418678:	mov    eax,DWORD PTR [edi]
  41867a:	ror    BYTE PTR [ebp+0x4d],1
  41867d:	or     DWORD PTR [ecx+0x4d03d004],0x3
  418684:	mov    DWORD PTR [ebx-0x1eb2372c],ecx
  41868a:	mov    DWORD PTR [ebx],ebp
  41868c:	fadd   DWORD PTR [eax+0x75]
  41868f:	inc    eax
  418690:	pop    eax
  418691:	lea    ebx,[ecx+0x4f]
  418694:	push   0xb1000003
  418699:	out    dx,eax
  41869a:	add    ebp,DWORD PTR [edx+edx*2]
  41869d:	add    BYTE PTR [ebx+ecx*4],bh
  4186a0:	mov    ch,BYTE PTR [ebx]
  4186a2:	jb     0x418716
  4186a4:	add    al,0x89
  4186a6:	push   eax
  4186a7:	call   0x8429d419
  4186ac:	add    DWORD PTR [eax+eax*1],eax
  4186af:	jae    0x4186c5
  4186b1:	icebp  
  4186b2:	inc    ebp
  4186b3:	mov    eax,DWORD PTR gs:[ecx]
  4186b6:	int3   
  4186b7:	out    dx,al
  4186b8:	loopne 0x418707
  4186ba:	sub    eax,DWORD PTR [edx]
  4186bc:	push   0xffffff83
  4186be:	pop    esi
  4186bf:	push   cs
  4186c0:	jl     0x4186db
  4186c2:	add    al,0xaf
  4186c4:	xor    eax,0x832b6d00
  4186c9:	mov    eax,DWORD PTR [edx]
  4186cb:	rcr    BYTE PTR [ebp+0x754500dc],cl
  4186d1:	ror    DWORD PTR [ebx+0x7dc8e803],1
  4186d7:	inc    ebp
  4186d8:	shr    ebx,0x3
  4186db:	or     DWORD PTR [eax],0x4
  4186de:	push   0xffffffa5
  4186e0:	pop    esi
  4186e1:	add    BYTE PTR [ecx+edx*8-0x23ff2efc],bh
  4186e8:	jmp    0x418747
  4186ea:	mov    edi,0xff0272
  4186ef:	fdivr  QWORD PTR [ebp+0x5d]
  4186f2:	push   0x4e
  4186f4:	pop    ecx
  4186f5:	call   0x41cafa
  4186fa:	mov    DWORD PTR [ebx],eax
  4186fc:	in     al,0xc8
  4186fe:	rol    BYTE PTR [ebp-0x75],0xc1
  418702:	call   0xab88e3
  418707:	pop    esi
  418708:	enter  0xceff,0x8b
  41870c:	repz mov ecx,DWORD PTR [ebp-0x34]
  418710:	xor    DWORD PTR [esi-0x57f0ff3c],0xffffffb0
  418717:	je     0x418719
  418719:	or     DWORD PTR [ebx-0x74183b24],eax
  41871f:	jne    0x418705
  418721:	jmp    0x41871c
  418723:	push   DWORD PTR [edx-0x24]
  418726:	push   0x4d
  418728:	pop    ecx
  418729:	cmp    DWORD PTR [ebp+0x2],0xffffffc1
  41872d:	jge    0x418735
  41872f:	mov    eax,eax
  418731:	sub    ebp,DWORD PTR [edx+0x24]
  418734:	pop    esi
  418735:	inc    ebp
  418736:	mov    esp,0x8b6077
  41873b:	sub    ecx,DWORD PTR [ebx+0x155e8dc]
  418741:	lods   al,BYTE PTR ds:[esi]
  418742:	add    BYTE PTR [ebx],bh
  418744:	enter  0xce73,0x49
  418748:	repz test DWORD PTR [ebp+0x7d],0xf0dc0f89
  418750:	stc    
  418751:	jge    0x4187c5
  418753:	jnp    0xdd410ab4
  418759:	call   0xc4882f
  41875e:	fadd   st(0),st
  418760:	dec    esi
  418761:	ins    BYTE PTR es:[edi],dx
  418762:	stc    
  418763:	cmp    al,0x73
  418765:	push   ebp
  418766:	mov    eax,0xf8028b
  41876b:	jne    0x41872e
  41876d:	mov    esi,ecx
  41876f:	mov    esp,DWORD PTR [ebp+0x2c]
  418772:	add    edi,DWORD PTR [ebp-0x24]
  418775:	sub    esp,eax
  418777:	and    al,0x45
  418779:	cmp    cl,BYTE PTR [ecx+0x2d5fcc5b]
  41877f:	sbb    al,0xee
  418781:	pop    esi
  418782:	call   0x8187b2
  418787:	fsubr  st,st(3)
  418789:	sti    
  41878a:	add    BYTE PTR gs:[ecx],bh
  41878d:	add    eax,esp
  41878f:	add    DWORD PTR [esi],eax
  418791:	rol    DWORD PTR [ebp+0x8],0x29
  418795:	mov    esp,eax
  418797:	clc    
  418798:	jne    0x41880f
  41879a:	mov    eax,0x8b0673
  41879f:	loopne 0x4187e6
  4187a1:	loopne 0x41872c
  4187a3:	lods   al,BYTE PTR ds:[esi]
  4187a4:	int3   
  4187a5:	inc    ebp
  4187a6:	mov    DWORD PTR gs:[eax+edi*8],eax
  4187aa:	add    al,0xc3
  4187ac:	sub    ecx,DWORD PTR [ebp+0x47]
  4187af:	(bad)  
  4187b1:	shr    BYTE PTR [ebp-0x1f],0xe8
  4187b5:	add    eax,DWORD PTR [eax]
  4187b7:	call   0x64348bc
  4187bc:	add    esi,DWORD PTR [esi-0x3b2efc83]
  4187c2:	dec    esi
  4187c3:	ins    DWORD PTR es:[edi],dx
  4187c4:	in     al,dx
  4187c5:	lea    eax,[eax]
  4187c7:	inc    ebp
  4187c8:	inc    ebp
  4187c9:	sub    ecx,DWORD PTR [ebx-0x3eba1b73]
  4187cf:	or     DWORD PTR [ebx-0x38ff0400],0x398b4573
  4187d9:	and    al,0xdc
  4187db:	ror    DWORD PTR [edx+0x24],0xf7
  4187df:	or     BYTE PTR [ebp+0x4c],dh
  4187e2:	mov    ebx,DWORD PTR [eax+ebp*1-0x64]
  4187e6:	stos   BYTE PTR es:[edi],al
  4187e7:	adc    edx,edi
  4187e9:	inc    esp
  4187ea:	add    edi,DWORD PTR [eax]
  4187ec:	jne    0x4187d1
  4187ee:	mov    DWORD PTR [eax-0x7449db04],ecx
  4187f4:	cmp    ecx,DWORD PTR [edi]
  4187f6:	sub    BYTE PTR [ebp-0x7e],dl
  4187f9:	sar    ebp,0xb
  4187fc:	jmp    FWORD PTR [edi+0x2400392a]
  418802:	sub    esi,DWORD PTR [ebx-0x73]
  418805:	mov    esp,DWORD PTR [ecx+edi*4]
  418808:	mov    ecx,DWORD PTR [eax]
  41880a:	and    BYTE PTR [eax],al
  41880c:	jne    0x4187d8
  41880e:	sub    ebp,ecx
  418810:	sbb    BYTE PTR [esi+0x32],ah
  418813:	dec    ebp
  418814:	push   ebp
  418815:	add    ecx,DWORD PTR [ebx+0x7d24fc8d]
  41881b:	ret    
  41881c:	mov    edx,ebp
  41881e:	leave  
  41881f:	sub    DWORD PTR [esi+0x24],ebx
  418822:	ret    0x2b
  418825:	pop    ax
  418827:	push   ebp
  418828:	rol    BYTE PTR [ebx],0xeb
  41882b:	add    DWORD PTR [ecx+0x6c0001],0x40
  418832:	jb     0x418889
  418834:	ret    
  418835:	in     al,dx
  418836:	jecxz  0x4187c3
  418838:	push   esi
  418839:	xchg   esp,eax
  41883a:	jne    0x41883c
  41883c:	cmp    edx,DWORD PTR [esi+0x1c]
  41883f:	jne    0x418825
  418841:	mov    eax,DWORD PTR [ebp-0x77]
  418844:	ror    DWORD PTR [ebx+0x899408],0xe0
  41884b:	mov    esi,DWORD PTR [ebp-0x75]
  41884e:	pop    esi
  41884f:	nop
  418850:	mov    eax,DWORD PTR [eax]
  418852:	les    ecx,FWORD PTR [ecx-0x6b3e744a]
  418858:	add    al,0x0
  41885a:	inc    ebp
  41885b:	mov    eax,DWORD PTR [ebx]
  41885d:	mov    ebp,ebx
  41885f:	cmp    al,0xf
  418861:	or     al,al
  418863:	inc    ebp
  418864:	inc    ebp
  418865:	xor    DWORD PTR [ebx+0x6c8bc89c],ecx
  41886b:	cld    
  41886c:	add    BYTE PTR [edi+0x556c16c0],dh
  418872:	add    BYTE PTR [ecx-0x5],dl
  418875:	add    eax,0x17200
  41887a:	sbb    al,0x85
  41887c:	dec    esp
  41887d:	je     0x4188b7
  41887f:	mov    esp,DWORD PTR [eax+ecx*8+0x20]
  418883:	add    BYTE PTR [ebx],bh
  418885:	(bad)  
  418886:	and    al,0x30
  418888:	jae    0x418826
  41888a:	mov    cl,cl
  41888c:	inc    DWORD PTR [esp]
  41888f:	push   ebp
  418890:	shr    esp,0x8
  418893:	in     al,dx
  418894:	push   esp
  418895:	add    DWORD PTR [eax],esp
  418897:	add    bl,cl
  418899:	inc    ebp
  41889a:	mov    bh,0x53
  41889c:	add    BYTE PTR [ebp-0x17],al
  41889f:	push   esi
  4188a0:	cmovne ecx,edx
  4188a3:	xor    BYTE PTR [esp+ebx*4+0x20],cl
  4188a7:	push   edi
  4188a8:	pop    ss
  4188a9:	xor    ecx,ebx
  4188ab:	pushf  
  4188ac:	add    BYTE PTR [ecx+0x452bf800],cl
  4188b2:	rcr    ecx,0x5
  4188b5:	inc    ebp
  4188b6:	add    esp,ebx
  4188b8:	add    BYTE PTR [ebp-0x40],al
  4188bb:	out    0x6c,eax
  4188bd:	inc    ebp
  4188be:	inc    eax
  4188bf:	sub    eax,0x450547c1
  4188c4:	dec    esp
  4188c5:	and    BYTE PTR cs:[ebp-0x27],al
  4188c9:	jo     0x4188f4
  4188cb:	leave  
  4188cc:	add    BYTE PTR [esi+0xc000c0],bh
  4188d2:	lea    eax,[esp-0x40]
  4188d6:	ret    
  4188d7:	mov    dh,0x8b
  4188d9:	xor    edx,DWORD PTR [ecx+0x3]
  4188dc:	mov    al,BYTE PTR [ecx+0x1]
  4188df:	sbb    BYTE PTR [eax],al
  4188e1:	stc    
  4188e2:	mov    esi,DWORD PTR [edx+0x8]
  4188e5:	(bad)  
  4188e6:	ss mov eax,0xb98ac631
  4188ec:	add    esi,eax
  4188ee:	add    BYTE PTR [edx-0x444d39f7],bh
  4188f4:	add    esi,eax
  4188f6:	add    BYTE PTR [esi+ecx*1+0x1bd82c6],bh
  4188fd:	mov    BYTE PTR [eax],0xbe
  418900:	or     BYTE PTR [ebx],dh
  418902:	dec    ecx
  418903:	lea    eax,[ebx]
  418905:	or     eax,0x18fc0fc7
  41890a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41890b:	(bad)  
  41890d:	fiadd  WORD PTR [ebp-0x78]
  418910:	jae    0xed76905f
  418916:	or     BYTE PTR [ebp+0x7],al
  418919:	in     eax,dx
  41891a:	pushf  
  41891b:	inc    ebp
  41891c:	xor    bl,al
  41891e:	pop    esi
  41891f:	inc    ebp
  418920:	shl    esp,0xc
  418923:	inc    ebp
  418924:	sub    cl,0x1
  418927:	inc    ebp
  418928:	add    bh,bl
  41892a:	add    BYTE PTR [ebp-0x7b],al
  41892d:	loopne 0x418927
  41892f:	inc    ebp
  418930:	ret    0xe7
  418933:	inc    ebp
  418934:	mov    esi,DWORD PTR [eax-0x7f]
  418937:	leave  
  418938:	and    al,0x44
  41893a:	add    BYTE PTR [eax+0x331cb68b],dh
  418940:	mov    DWORD PTR [ebx],eax
  418942:	sbb    al,0x41
  418944:	(bad)  
  418945:	sbb    al,ah
  418947:	stc    
  418948:	test   DWORD PTR [edx-0x8],esi
  41894b:	lea    edi,[edi-0x7007a98]
  418951:	mov    DWORD PTR [ebp-0x2c],edi
  418954:	(bad)  
  418955:	dec    ebp
  418956:	sar    BYTE PTR [eax+0x71c1fcc6],0xc6
  41895d:	add    edx,eax
  41895f:	(bad)  
  418960:	(bad)  
  418961:	inc    ebx
  418963:	jmp    FWORD PTR [edx-0x38]
  418966:	(bad)  
  418967:	or     al,ah
  418969:	jge    0x418931
  41896b:	mov    ebp,0x5a8533e4
  418971:	clc    
  418972:	leave  
  418973:	inc    ebp
  418974:	add    BYTE PTR [ebx+0xd8c8d],cl
  41897a:	rdpmc  
  41897c:	sbb    BYTE PTR [edi+0x7de08da],bh
  418982:	mov    BYTE PTR [ebx+eax*4-0x12c6f9ce],bl
  418989:	cmovne edx,ebx
  41898c:	jmp    0x41898e
  41898e:	inc    ebp
  41898f:	mov    ebp,ebp
  418991:	sbb    al,0x45
  418993:	mov    ebx,ebx
  418995:	add    DWORD PTR [ebp+0x0],eax
  418998:	out    dx,al
  418999:	add    DWORD PTR [ebp+0x4d],eax
  41899c:	sub    eax,0x2e80458b
  4189a1:	add    BYTE PTR [ebp-0x77],al
  4189a4:	jo     0x418a10
  4189a6:	leave  
  4189a7:	mov    DWORD PTR [esp+ecx*8-0x48],0x33e9b6d8
  4189af:	inc    ebp
  4189b0:	add    ebx,edi
  4189b2:	inc    ecx
  4189b3:	out    0x18,eax
  4189b5:	(bad)  
  4189b6:	stc    
  4189b7:	int3   
  4189b8:	jb     0x418944
  4189ba:	(bad)  
  4189bb:	xor    dh,BYTE PTR [eax-0x4ec83980]
  4189c1:	or     dh,al
  4189c3:	dec    esi
  4189c4:	mov    dl,0xf3
  4189c6:	mov    BYTE PTR [ebp-0x4d],0x89
  4189ca:	(bad)  
  4189cb:	loopne 0x418981
  4189cd:	inc    esi
  4189cf:	lea    esi,[ebp-0x49003924]
  4189d5:	push   eax
  4189d6:	mov    BYTE PTR [ebp-0x49],0x33
  4189da:	xor    eax,DWORD PTR [ebx]
  4189dc:	lea    edx,[eax+0xd]
  4189df:	inc    ebp
  4189e0:	jae    0x8c1beffe
  4189e6:	ficomp WORD PTR [eax+ecx*4]
  4189e9:	add    BYTE PTR [ebx-0x12fff7ff],0x85
  4189f0:	test   esi,edi
  4189f2:	(bad)  
  4189f3:	(bad)  
  4189f4:	inc    DWORD PTR [eax]
  4189f6:	inc    ebp
  4189f7:	add    BYTE PTR [ebx-0x10aa2bd0],cl
  4189fd:	test   DWORD PTR [ebx],edx
  4189ff:	jne    0x41898a
  418a01:	or     DWORD PTR [ebx-0xed9771],0x75703b8c
  418a0b:	jmp    0x1258a99
  418a10:	inc    ebp
  418a11:	jne    0x4189f5
  418a13:	mov    DWORD PTR [eax+eiz*8+0x331cff8b],ebx
  418a1a:	mov    BYTE PTR [ebp+0x45009c01],cl
  418a20:	shl    BYTE PTR [eax],0x55
  418a23:	push   cx
  418a25:	mov    bx,0x7245
  418a29:	gs add bh,al
  418a2c:	add    DWORD PTR [ebp+eax*4+0xd801df],ebx
  418a33:	inc    ebp
  418a34:	dec    ebp
  418a35:	into   
  418a36:	mov    esp,ebx
  418a38:	jl     0x418a01
  418a3a:	add    BYTE PTR [ecx+ecx*4+0x1ce48bdb],ah
  418a41:	inc    ebp
  418a42:	mov    edi,ebx
  418a44:	add    ebp,esp
  418a46:	add    BYTE PTR [esi+0x1],ah
  418a49:	inc    ebp
  418a4a:	or     BYTE PTR [edi],bh
  418a4c:	inc    ebp
  418a4d:	(bad)  
  418a4e:	in     eax,dx
  418a4f:	fsubr  st(4),st
  418a51:	inc    edi
  418a53:	add    dl,al
  418a55:	add    al,ah
  418a57:	call   0x86a2cc
  418a5c:	pop    esi
  418a5d:	test   DWORD PTR [eax],ecx
  418a5f:	dec    dl
  418a61:	(bad)  
  418a62:	jmp    0x414012ec
  418a67:	push   DWORD PTR [ebp-0x75]
  418a6a:	(bad)  
  418a6b:	loopne 0x418a39
  418a6d:	mov    DWORD PTR [ebp-0x74013d],0xfec0851c
  418a77:	push   eax
  418a78:	inc    DWORD PTR [ebp-0x75]
  418a7b:	mov    esp,eax
  418a7d:	cwde   
  418a7e:	mov    DWORD PTR [eax],0xff8bffc3
  418a84:	sbb    al,0x8
  418a86:	ror    BYTE PTR [ebp+0x50],0x51
  418a8a:	inc    ebp
  418a8b:	ror    BYTE PTR [ebx+0x65987d],1
  418a91:	test   edi,eax
  418a93:	add    al,0xdc
  418a95:	add    bh,bh
  418a97:	push   0x1
  418a99:	add    BYTE PTR [eax],al
  418a9b:	mov    edi,edi
  418a9d:	inc    WORD PTR [ebp+0x8]
  418aa1:	add    eax,0xd
  418aa4:	(bad)  
  418aa6:	xor    eax,0x782ec89
  418aab:	push   ecx
  418aac:	cli    
  418aad:	popw   es
  418aaf:	push   ebp
  418ab0:	xchg   BYTE PTR [ebx-0x76740800],al
  418ab6:	sbb    al,0x86
  418ab8:	test   DWORD PTR [ecx-0x2],edx
  418abb:	call   WORD PTR [ebp-0x40]
  418abf:	adc    DWORD PTR [ebp-0x5],0xffffffc7
  418ac3:	mov    eax,ebx
  418ac5:	mov    dh,BYTE PTR ds:0xc7666851
  418acb:	push   ebp
  418acc:	fsub   QWORD PTR [esi+0x0]
  418acf:	dec    ebp
  418ad0:	inc    ebp
  418ad1:	mov    edx,0xec4ec0
  418ad6:	(bad)  
  418ad7:	retf   0x89a0
  418ada:	fist   DWORD PTR [eax+0x454ae1]
  418ae0:	jmp    0xa8b5:0xc7663e8b
  418ae7:	jmp    edx
  418ae9:	(bad)  
  418aea:	in     eax,dx
  418aeb:	lock (bad) 
  418aed:	mov    DWORD PTR [esi+ebp*2-0x727a0090],ebp
  418af4:	(bad)  
  418af5:	xor    eax,0x700089ff
  418afa:	add    bh,bh
  418afc:	stos   DWORD PTR es:[edi],eax
  418afd:	data16 add BYTE PTR [ebp-0x1b0077],al
  418b04:	inc    DWORD PTR [ecx-0x73]
  418b07:	data16 fadd QWORD PTR [ebp-0xaf0001]
  418b0e:	inc    ebp
  418b0f:	shl    BYTE PTR [ebx],0x66
  418b12:	add    eax,DWORD PTR [ebp-0xba00b0]
  418b18:	add    DWORD PTR [ecx+0x44],0x66
  418b1c:	mov    eax,DWORD PTR [ebp-0x7f00e4]
  418b22:	add    DWORD PTR [ecx-0xcf8600],ecx
  418b28:	push   ebp
  418b29:	lea    dx,[ebp-0x28]
  418b30:	add    BYTE PTR [ebp-0x25],0xf
  418b34:	jge    0xff428a3b
  418b3a:	mov    ecx,0xc34fc7
  418b3f:	rol    ecx,0x89
  418b42:	mov    DWORD PTR [eax+eax*4-0x1],ebp
  418b46:	ror    BYTE PTR [ebx-0x48990775],0x55
  418b4d:	or     BYTE PTR [ebp-0x763c0a39],0xc1
  418b54:	test   BYTE PTR [ecx-0x3f997f3e],cl
  418b5a:	push   ebp
  418b5b:	mov    DWORD PTR [ebp-0x76761480],ecx
  418b61:	or     BYTE PTR [eax+0x6600c265],0x45
  418b68:	push   ebp
  418b69:	xor    DWORD PTR [ebp-0x76381e64],ecx
  418b6f:	aam    0x8c
  418b71:	test   DWORD PTR [ecx-0x3dba7108],ecx
  418b77:	cmp    eax,0xc78b9c00
  418b7c:	data16 hlt 
  418b7e:	dec    ebp
  418b7f:	test   DWORD PTR [ecx+0x454ff8],edi
  418b85:	xor    ecx,esi
  418b87:	lahf   
  418b88:	mov    DWORD PTR [ebx-0x7f00e394],ecx
  418b8e:	mov    eax,DWORD PTR [ecx]
  418b90:	data16 add BYTE PTR [ebp-0x7400bb],dh
  418b97:	sbb    al,0x71
  418b99:	dec    ebp
  418b9a:	mov    si,WORD PTR [ebp-0xff0074]
  418ba1:	mov    ecx,DWORD PTR [ecx-0x6f8d75]
  418ba7:	add    BYTE PTR [ebp-0x760fd477],cl
  418bad:	jne    0x418c23
  418baf:	test   edi,edi
  418bb1:	jne    0x418b36
  418bb3:	(bad)  
  418bb4:	sti    
  418bb5:	sbb    BYTE PTR [ecx-0x1789ab],cl
  418bbb:	cld    
  418bbc:	(bad)  
  418bbd:	jmp    DWORD PTR [ecx]
  418bbf:	inc    ebp
  418bc0:	mov    DWORD PTR [ebx+0x3ff8b78],ecx
  418bc6:	data16 cmp al,0x8d
  418bc9:	push   cs
  418bca:	inc    DWORD PTR [ebp-0x1]
  418bcd:	test   DWORD PTR [ecx-0x838c],ecx
  418bd3:	sbb    al,0x8b
  418bd5:	lock clc 
  418bd7:	push   DWORD PTR [edi-0xe39375]
  418bdd:	xor    BYTE PTR [ebx],0x1
  418be0:	add    eax,DWORD PTR [eax]
  418be2:	xor    eax,DWORD PTR [eax]
  418be4:	mov    WORD PTR [ebp-0xba003d],0x4575
  418bed:	mov    ecx,DWORD PTR [edi]
  418bef:	sbb    al,0x4d
  418bf1:	mov    DWORD PTR [ebx],esi
  418bf3:	add    DWORD PTR [ebx],eax
  418bf5:	add    BYTE PTR [ebx],dh
  418bf7:	xor    DWORD PTR [esi-0x80],esp
  418bfa:	inc    ebp
  418bfb:	add    DWORD PTR [ebx],esi
  418bfd:	add    BYTE PTR [esi+0x50],ah
  418c00:	inc    ebp
  418c01:	jmp    0x868e6c
  418c06:	add    DWORD PTR [eax+0xc70194],0xffffffec
  418c0d:	or     BYTE PTR [ebp+0x4501f845],dh
  418c13:	jmp    0xdd8f09
  418c18:	(bad)  
  418c19:	push   cs
  418c1a:	in     al,0xc9
  418c1c:	test   DWORD PTR [ebp+0x4502f8],eax
  418c22:	xor    ecx,DWORD PTR [ebp-0x64]
  418c25:	mov    eax,edi
  418c27:	mov    esp,esp
  418c29:	push   eax
  418c2a:	add    eax,0x45fff885
  418c2f:	dec    DWORD PTR [ebx+0x339445]
  418c35:	add    ecx,DWORD PTR [ecx+0x452ce889]
  418c3b:	dec    DWORD PTR [ebx-0x4e0be375]
  418c41:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418c42:	add    edi,edi
  418c44:	add    bh,bh
  418c46:	push   cs
  418c47:	xor    eax,DWORD PTR [eax+0x890103]
  418c4d:	xor    BYTE PTR [ebp-0x1],al
  418c50:	mov    DWORD PTR [ebp-0x36df38],ecx
  418c56:	push   cs
  418c57:	push   eax
  418c58:	jne    0x418c9f
  418c5a:	mov    esi,DWORD PTR [ebx]
  418c5c:	sbb    al,0x3
  418c5e:	jne    0x418cb0
  418c60:	inc    DWORD PTR [ebp-0x75]
  418c63:	add    eax,0x800f0
  418c68:	add    BYTE PTR [ebx-0x7f74e3bf],cl
  418c6e:	mov    DWORD PTR [ecx],eax
  418c70:	sbb    BYTE PTR [eax],al
  418c72:	leave  
  418c73:	test   DWORD PTR [edi-0x1],eax
  418c76:	jne    0x418c77
  418c78:	call   0xff42777d
  418c7d:	xor    BYTE PTR [ebp+0x4d],al
  418c80:	mov    edi,edi
  418c82:	enter  0x8,0x4d
  418c86:	mov    ecx,DWORD PTR [ebx-0x17fc74cd]
  418c8c:	mov    eax,DWORD PTR [eax]
  418c8e:	sbb    al,0x1
  418c90:	sbb    DWORD PTR [ebp+0x4d],eax
  418c93:	mov    DWORD PTR [ebx+0x18cc8b],ecx
  418c99:	inc    eax
  418c9a:	dec    DWORD PTR [ecx-0x27d775]
  418ca0:	add    BYTE PTR [ebx-0x38d72b01],cl
  418ca6:	xchg   ecx,eax
  418ca7:	ret    
  418ca8:	add    BYTE PTR [ebp-0x830075],al
  418cae:	add    BYTE PTR [ebp-0x75],al
  418cb1:	mov    DWORD PTR [ebp+0x8ff0430],ecx
  418cb7:	lea    edi,[edi+0x20]
  418cba:	add    bh,bh
  418cbc:	mov    edx,DWORD PTR [eax-0x7b]
  418cbf:	inc    ebp
  418cc0:	rdpmc  
  418cc2:	jne    0x418cc7
  418cc4:	add    BYTE PTR [eax-0x75],dl
  418cc7:	inc    ebp
  418cc8:	call   0x404195d2
  418ccd:	add    BYTE PTR [ecx-0xe3d775],cl
  418cd3:	or     BYTE PTR [ebx-0x38ff13ff],0x85
  418cda:	ret    
  418cdb:	inc    DWORD PTR [ebp-0xff0001]
  418ce1:	add    BYTE PTR [ebp-0x4b],al
  418ce4:	cmp    edi,0x24
  418ce7:	(bad)  
  418ce8:	push   DWORD PTR [eax]
  418cea:	add    BYTE PTR [ebp-0x39],dl
  418ced:	test   ebx,eax
  418cef:	je     0x418c76
  418cf1:	mov    edi,edi
  418cf3:	sbb    bh,bh
  418cf5:	test   DWORD PTR gs:[eax],eax
  418cf8:	(bad)  
  418cf9:	js     0x418cfa
  418cfb:	add    BYTE PTR [ebx-0x38b21fdd],cl
  418d01:	sub    eax,ebx
  418d03:	mov    ecx,DWORD PTR [ebx-0x5513e377]
  418d09:	add    eax,DWORD PTR [eax]
  418d0b:	dec    ebp
  418d0c:	push   eax
  418d0d:	mov    al,BYTE PTR [ebp+0x1]
  418d10:	mov    eax,DWORD PTR [ebp-0x68]
  418d13:	mov    eax,DWORD PTR [eax]
  418d15:	cld    
  418d16:	(bad)  
  418d17:	or     BYTE PTR [eax],ah
  418d19:	dec    ebp
  418d1a:	inc    DWORD PTR [eax+0x4]
  418d1d:	push   ecx
  418d1e:	add    BYTE PTR [edx-0x1],dh
  418d21:	mov    ecx,DWORD PTR [ecx+0x55cef83c]
  418d27:	or     DWORD PTR [ebx-0xfff3800],0x8b5545d6
  418d31:	add    ecx,DWORD PTR [ecx-0xf037477]
  418d37:	push   ecx
  418d38:	xor    BYTE PTR [ebx],al
  418d3a:	inc    ebp
  418d3b:	mov    DWORD PTR [ebx-0x7aaaafe8],ecx
  418d41:	(bad)  
  418d42:	push   eax
  418d44:	inc    DWORD PTR [eax]
  418d46:	inc    ebp
  418d47:	add    BYTE PTR [ebx],dh
  418d49:	add    BYTE PTR [ebx],0x0
  418d4c:	mov    DWORD PTR [ebx-0x150007d4],eax
  418d52:	lea    edx,[ebp-0x6c]
  418d55:	je     0x418cdc
  418d57:	(bad)  
  418d58:	dec    DWORD PTR [eax]
  418d5a:	call   DWORD PTR [ebp-0x7b]
  418d5d:	mov    edi,edi
  418d5f:	hlt    
  418d60:	call   DWORD PTR [ebp-0x75]
  418d63:	mov    esp,eax
  418d65:	cwde   
  418d66:	(bad)  
  418d67:	mov    bh,0xc3
  418d69:	mov    DWORD PTR [ebx-0x1100e39c],ecx
  418d6f:	add    DWORD PTR [eax],0x450050ff
  418d75:	mov    DWORD PTR [ebx+0x9598c8],ecx
  418d7b:	inc    edi
  418d7d:	jmp    DWORD PTR [eax]
  418d7f:	jmp    0xcd00:0x640481ff
  418d86:	mov    DWORD PTR [ebx],esi
  418d88:	and    al,0x81
  418d8a:	push   DWORD PTR [edx]
  418d8c:	call   FWORD PTR [edi+edi*8-0x3f74f78b]
  418d93:	add    esi,DWORD PTR [eax]
  418d95:	enter  0x3c45,0x83
  418d99:	add    ah,bh
  418d9b:	adc    DWORD PTR [ebx+0x768b5055],eax
  418da1:	add    ecx,DWORD PTR [ebx-0x31ba07cf]
  418da7:	mov    esi,eax
  418da9:	xor    BYTE PTR [ebp+0x45],cl
  418dac:	jmp    0x418d39
  418dae:	mov    ebx,DWORD PTR [eax]
  418db0:	in     al,dx
  418db1:	inc    ebp
  418db2:	or     al,0x2
  418db4:	dec    DWORD PTR [ebp-0x4]
  418db7:	jne    0x418e0e
  418db9:	mov    ecx,DWORD PTR [eax+0x18558be8]
  418dbf:	mov    edi,DWORD PTR [ebx]
  418dc1:	lock push eax
  418dc3:	xchg   ecx,eax
  418dc4:	jmp    0x341dbc9
  418dc9:	adc    al,0x8b
  418dcb:	inc    ebp
  418dcc:	mov    al,ds:0x8b04008b
  418dd1:	push   ebp
  418dd2:	sub    ecx,DWORD PTR [ecx-0x2d391308]
  418dd8:	push   ebp
  418dd9:	test   DWORD PTR [ebx-0x2900d701],ecx
  418ddf:	inc    ebp
  418de0:	dec    ebp
  418de1:	mov    DWORD PTR [ecx+0x45ffe424],ecx
  418de7:	mov    DWORD PTR [eax],0xe9ff0020
  418ded:	add    al,0x0
  418def:	add    BYTE PTR [eax],al
  418df1:	mov    eax,edx
  418df3:	push   eax
  418df4:	rol    DWORD PTR [ebp-0xb0077],1
  418dfa:	bound  eax,QWORD PTR [ebp+0x50]
  418dfd:	xor    ecx,DWORD PTR [ecx+0x55899803]
  418e03:	sub    al,0x89
  418e05:	push   esp
  418e07:	lea    edx,[ebp-0x6c]
  418e0a:	jne    0xffd78d22
  418e10:	inc    DWORD PTR [ebp-0x1d0001]
  418e16:	jnp    0xc7976e1c
  418e1c:	mov    eax,ebx
  418e1e:	fs mov edi,edi
  418e21:	sbb    al,0xc1
  418e23:	out    dx,al
  418e24:	or     al,0x0
  418e26:	ret    0x8d50
  418e29:	inc    ebp
  418e2a:	dec    DWORD PTR [ebx+0xfa98d7]
  418e30:	test   edi,edi
  418e32:	clc    
  418e33:	call   FWORD PTR [edi]
  418e35:	or     BYTE PTR [eax],cl
  418e37:	inc    ebp
  418e38:	dec    ebp
  418e39:	inc    DWORD PTR [ebx+0x74803114]
  418e3f:	add    DWORD PTR [ebx+0x45fc00],ecx
  418e45:	call   DWORD PTR [eax+edx*1]
  418e48:	add    ecx,DWORD PTR [ebp-0x38]
  418e4b:	push   esi
  418e4c:	adc    al,0x8
  418e4e:	mov    edx,DWORD PTR [ebp-0x14]
  418e51:	mov    ecx,DWORD PTR [ebp-0x4]
  418e54:	add    DWORD PTR [ebp-0x68],0xffffff8d
  418e58:	inc    DWORD PTR [esp+esi*8]
  418e5b:	inc    ebp
  418e5c:	stos   BYTE PTR es:[edi],al
  418e5d:	mov    edx,DWORD PTR [ebp+0x1c]
  418e60:	add    DWORD PTR [ebp-0x10],eax
  418e63:	mov    edx,DWORD PTR [ebp-0x70]
  418e66:	cmp    eax,DWORD PTR [eax]
  418e68:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418e69:	mov    eax,DWORD PTR [eax]
  418e6b:	sbb    al,0x73
  418e6d:	add    BYTE PTR [ebx],0x1
  418e70:	call   0x8971de75
  418e75:	xor    eax,ebp
  418e77:	pop    ds
  418e78:	inc    ebp
  418e79:	xor    al,BYTE PTR [ebp+0x6f760f3a]
  418e7f:	(bad)  
  418e80:	push   DWORD PTR [edi]
  418e82:	mov    ecx,DWORD PTR [ebx+0x398503f8]
  418e88:	push   DWORD PTR [ebx-0x1]
  418e8b:	mov    eax,DWORD PTR [ebp-0x740075]
  418e91:	sub    eax,DWORD PTR [eax]
  418e93:	add    eax,DWORD PTR [eax]
  418e95:	mov    DWORD PTR [ecx+0x5f],eax
  418e98:	mov    DWORD PTR [ebx+0x28],ebx
  418e9b:	ret    0xff
  418e9e:	mov    ecx,DWORD PTR [ebx+0x1cc783d4]
  418ea4:	ret    
  418ea5:	mov    eax,DWORD PTR [ebp-0x6f0075]
  418eab:	add    BYTE PTR [ebp-0x7d],al
  418eae:	mov    DWORD PTR [eax],eax
  418eb0:	xor    BYTE PTR [edi+edi*8+0x20008d01],al
  418eb7:	sar    bh,cl
  418eb9:	test   BYTE PTR [eax+0x1],dl
  418ebc:	inc    ebp
  418ebd:	add    BYTE PTR [ebx],dh
  418ebf:	test   BYTE PTR [ebx],0x84
  418ec2:	push   eax
  418ec3:	add    BYTE PTR [ebp+0x0],al
  418ec6:	add    eax,0x86
  418ecb:	add    BYTE PTR [ebx-0x7f7be340],cl
  418ed1:	add    BYTE PTR [ecx],al
  418ed3:	add    BYTE PTR [eax],al
  418ed5:	mov    esi,0x550030
  418eda:	mov    ecx,DWORD PTR [edi]
  418edc:	sbb    al,0xda
  418ede:	jne    0x418ee0
  418ee0:	mov    edi,DWORD PTR [ecx]
  418ee2:	xor    BYTE PTR [eax+eax*1],0x84
  418ee6:	add    eax,DWORD PTR [eax]
  418ee8:	cld    
  418ee9:	add    BYTE PTR [ebp-0x4f],dh
  418eec:	mov    eax,DWORD PTR [ecx]
  418eee:	cld    
  418eef:	add    BYTE PTR [ecx-0x1bff009b],cl
  418ef5:	retf   0xe45
  418ef8:	add    eax,edx
  418efa:	sbb    al,0xb7
  418efc:	dec    ebp
  418efd:	or     al,0x89
  418eff:	dec    ebp
  418f00:	sbb    al,0xf
  418f02:	inc    ebp
  418f03:	dec    eax
  418f04:	mov    eax,DWORD PTR [ebx]
  418f06:	sbb    al,0xf
  418f08:	nop
  418f09:	scas   al,BYTE PTR es:[edi]
  418f0a:	add    DWORD PTR [eax],eax
  418f0c:	add    BYTE PTR [ebp-0x7674ebbb],cl
  418f12:	mov    eax,gs
  418f14:	add    bh,bh
  418f16:	mov    edi,edi
  418f18:	cmp    DWORD PTR [edi+0x72],edx
  418f1b:	xor    DWORD PTR [ebx-0x74ee7481],ecx
  418f21:	gs cmp al,0x0
  418f24:	je     0x418efc
  418f26:	push   eax
  418f27:	sar    BYTE PTR [eax],1
  418f29:	mov    bh,0x3e
  418f2b:	push   cs
  418f2c:	cmp    DWORD PTR [edi-0x4cff3f4],esi
  418f32:	add    DWORD PTR [ecx+0x12],ebp
  418f35:	dec    edx
  418f36:	(bad)  
  418f37:	mov    eax,edx
  418f39:	in     al,dx
  418f3a:	adc    DWORD PTR [ecx],esi
  418f3c:	pop    esi
  418f3d:	inc    ecx
  418f3e:	leave  
  418f3f:	or     DWORD PTR [eax],ebx
  418f41:	gs push ebp
  418f43:	add    ah,ch
  418f45:	into   
  418f46:	in     al,dx
  418f47:	enter  0xb756,0xf0
  418f4b:	push   cs
  418f4c:	xor    DWORD PTR [edi-0x4fff3ff],0x790f2b38
  418f56:	or     cl,BYTE PTR [ecx+0x7d85fc00]
  418f5c:	jnp    0x74421464
  418f62:	test   DWORD PTR [ebx+0x1cfae40f],ecx
  418f68:	add    BYTE PTR [edi],cl
  418f6a:	mov    edi,DWORD PTR [ecx-0x78]
  418f6d:	ltr    WORD PTR [ecx-0x7b]
  418f71:	dec    DWORD PTR [edi]
  418f73:	clc    
  418f74:	out    0x45,eax
  418f76:	add    BYTE PTR [eax],cl
  418f78:	cmp    ebx,0xffffff8c
  418f7b:	jge    0x418f7d
  418f7d:	jb     0x418f8f
  418f7f:	je     0x508fff
  418f85:	pop    edx
  418f86:	push   esi
  418f87:	mov    ecx,DWORD PTR [edi]
  418f89:	in     al,dx
  418f8a:	rol    DWORD PTR [ebp+0x0],1
  418f8d:	or     DWORD PTR [ebx+0xfb8c08],0x4d
  418f94:	cmp    DWORD PTR [ecx],0xfffffff0
  418f97:	hlt    
  418f98:	mov    esp,DWORD PTR [eax+0xf034d2b]
  418f9e:	(bad)  
  418fa0:	push   eax
  418fa1:	jns    0xb841741f
  418fa7:	lock push cs
  418fa9:	ror    edx,0x3
  418fac:	test   BYTE PTR [ecx+0x5500e800],cl
  418fb2:	dec    eax
  418fb3:	rcpps  xmm4,XMMWORD PTR [ecx+0x4d]
  418fb7:	(bad)  
  418fb8:	mov    esi,0x7f33ff5f
  418fbd:	inc    eax
  418fbe:	test   DWORD PTR [edx],eax
  418fc0:	je     0x418f82
  418fc2:	mov    ecx,ecx
  418fc4:	adc    DWORD PTR [ebp-0xc],0xffffffec
  418fc8:	and    eax,DWORD PTR [eax+0xf0103]
  418fce:	jp     0x418fbc
  418fd0:	rcpps  xmm3,XMMWORD PTR [edx-0x25]
  418fd4:	add    edx,DWORD PTR [edi+0x74]
  418fd7:	sbb    BYTE PTR [ebp+0x4d001484],cl
  418fdd:	add    BYTE PTR [ebp-0x74c48bbb],al
  418fe3:	je     0x418f68
  418fe5:	cmp    eax,edi
  418fe7:	js     0x41900c
  418fe9:	add    eax,0xeb0fc003
  418fee:	jns    0x418f7b
  418ff0:	vmread DWORD PTR [ecx+0x45],ebx
  418ff4:	add    ecx,DWORD PTR [ebx+0x508d1c74]
  418ffa:	adc    al,0x8b
  418ffc:	jge    0x419012
  418ffe:	mov    edi,DWORD PTR [eax-0x4]
  419001:	add    edi,DWORD PTR [edi]
  419003:	or     bh,bh
  419005:	push   ebp
  419006:	push   es
  419007:	mov    DWORD PTR [ebp-0x4],ebx
  41900a:	add    edi,esi
  41900c:	pop    es
  41900d:	add    esi,DWORD PTR [edi-0x48ccf183]
  419013:	mov    DWORD PTR [esp+esi*8],ecx
  419016:	inc    ebp
  419017:	pop    ebp
  419018:	xor    DWORD PTR [esi-0x4],0x3b
  41901c:	add    edx,DWORD PTR [ecx+edi*1]
  41901f:	push   es
  419020:	clc    
  419021:	mov    bh,0xdb
  419023:	jp     0x418fdc
  419025:	add    cl,BYTE PTR [esi]
  419027:	div    DWORD PTR [edi+0x4d8b0c1c]
  41902d:	test   edi,edi
  41902f:	je     0x419025
  419031:	mov    eax,ecx
  419033:	or     BYTE PTR [ebx],al
  419035:	dec    BYTE PTR [ecx+0x7d3bec7d]
  41903b:	jbe    0x4190af
  41903d:	mov    ecx,DWORD PTR [ebx-0x488017f4]
  419043:	add    ecx,DWORD PTR [esi]
  419045:	cmp    DWORD PTR [edi+0x45fe0cf8],esi
  41904b:	add    eax,DWORD PTR [ebx-0x287af783]
  419051:	je     0x4190a0
  419053:	mov    DWORD PTR [ecx],edi
  419055:	mov    esi,eax
  419057:	hlt    
  419058:	or     BYTE PTR [ecx+0x7dfff4ff],0x5b
  41905f:	jb     0x419021
  419061:	jmp    0x41904e
  419063:	xor    esi,DWORD PTR [ebx]
  419065:	pop    edi
  419066:	pop    esi
  419067:	pop    ebx
  419068:	ret    
  419069:	ret    0x8b
  41906c:	mov    ecx,DWORD PTR [ebx+0x2c008390]
  419072:	xor    DWORD PTR [ecx],0xc
  419075:	pushf  
  419076:	xor    ecx,DWORD PTR [ecx+0x4539fc56]
  41907c:	wrmsr  
  41907e:	test   DWORD PTR [eax+eax*1+0xcfc8b8b],ebx
  419085:	dec    ebp
  419086:	ret    
  419087:	mov    edi,DWORD PTR [esi-0x4]
  41908a:	pop    eax
  41908b:	dec    ebp
  41908c:	jne    0x419019
  41908e:	xor    edi,esp
  419090:	inc    eax
  419091:	dec    ebp
  419092:	jbe    0x4190e7
  419094:	inc    eax
  419095:	pop    ebp
  419096:	add    edx,DWORD PTR [esi+0x8]
  419099:	push   ebp
  41909a:	dec    eax
  41909b:	push   ecx
  41909c:	mov    eax,edi
  41909e:	and    al,0xf0
  4190a0:	jo     0x41908d
  4190a2:	mov    eax,DWORD PTR [ebx]
  4190a4:	sbb    BYTE PTR [ebp+0x4d],cl
  4190a7:	mov    eax,DWORD PTR [ebx]
  4190a9:	nop
  4190aa:	or     BYTE PTR [eax],al
  4190ac:	jne    0x419105
  4190ae:	cmp    ebx,DWORD PTR [edi+esi*2-0x3cc76ce]
  4190b5:	xor    edi,edi
  4190b7:	add    edi,DWORD PTR [ebp+0x3]
  4190ba:	cmp    DWORD PTR [ecx+0xbcfe8fc],ecx
  4190c0:	js     0x419046
  4190c2:	jae    0x4190c6
  4190c4:	(bad)  
  4190c6:	xor    al,0x5d
  4190c8:	jmp    0x419055
  4190ca:	mov    ecx,DWORD PTR [ecx*4+0x33dfb1de]
  4190d1:	fdecstp 
  4190d3:	test   BYTE PTR [edi],ah
  4190d5:	add    bh,BYTE PTR [ebp+0x0]
  4190d8:	add    ebx,DWORD PTR [ebp-0x77]
  4190db:	mov    edi,eax
  4190dd:	cmp    al,0x0
  4190e0:	adc    dh,BYTE PTR [ebx]
  4190e2:	jge    0x4190e7
  4190e4:	mov    edi,DWORD PTR [ebx]
  4190e6:	jl     0x4190f7
  4190e8:	clc    
  4190e9:	dec    edi
  4190ea:	jge    0x4190ec
  4190ec:	mov    eax,DWORD PTR [ebx]
  4190ee:	jb     0x4190f8
  4190f0:	mov    ecx,DWORD PTR [ebp-0x8]
  4190f3:	mov    edi,edi
  4190f5:	xor    edx,DWORD PTR [eax]
  4190f7:	add    edi,DWORD PTR [ebx]
  4190f9:	mov    DWORD PTR [ebp-0x10],edi
  4190fc:	inc    edi
  4190fd:	pop    ebp
  4190fe:	jge    0x41913b
  419100:	cmp    esi,DWORD PTR [esp+edi*8-0x75]
  419104:	mov    edx,0xc05d87f0
  419109:	imul   ebx,DWORD PTR [esi+0x14],0xffffffc9
  41910d:	fimul  WORD PTR [eax]
  41910f:	fist   WORD PTR [ebp+0x1c]
  419112:	in     al,dx
  419113:	jne    0x419101
  419115:	mov    edi,DWORD PTR [edx-0x7a27a10]
  41911b:	imul   edx,DWORD PTR [ebp+0x14],0xffffffc7
  41911f:	fdivp  st(0),st
  419121:	fild   WORD PTR [ebp+0x4510f85c]
  419127:	test   BYTE PTR [ebx+0x4d00fc02],cl
  41912d:	inc    ebp
  41912e:	mov    ecx,DWORD PTR [ebx+0x454dfcfc]
  419134:	mov    ebp,DWORD PTR [ebx-0x4]
  419137:	adc    al,0x8b
  419139:	rcl    DWORD PTR [eax],0x48
  41913c:	mov    esi,0x7080803
  419141:	fiadd  WORD PTR [ebp+0x4d]
  419144:	(bad)  
  419145:	mov    edx,DWORD PTR [edx-0x4]
  419148:	mov    edx,DWORD PTR [ebp-0x4]
  41914b:	xor    ebx,DWORD PTR [ebx+0x330103]
  419151:	mov    DWORD PTR [edi+0x872dc],edi
  419157:	xlat   BYTE PTR ds:[ebx]
  419158:	into   
  419159:	ffreep st(6)
  41915b:	retf   0x6c7
  41915e:	iret   
  41915f:	dec    ebp
  419160:	inc    ebp
  419161:	mov    DWORD PTR [ebx],edi
  419163:	fmul   QWORD PTR [edi]
  419165:	dec    ebp
  419166:	jnp    0x41919b
  419168:	add    BYTE PTR [ebx],al
  41916a:	mov    ecx,DWORD PTR [esp+edi*8]
  41916d:	inc    ebp
  41916e:	dec    ebp
  41916f:	lea    esi,[ebx]
  419171:	add    DWORD PTR [ebx],eax
  419173:	jb     0x4191b0
  419175:	add    BYTE PTR [edi],cl
  419177:	inc    ebp
  419178:	imul   eax,edi,0x858bd800
  41917e:	cld    
  41917f:	clc    
  419180:	mov    DWORD PTR [ebp+0x0],eax
  419183:	inc    DWORD PTR [eax]
  419185:	or     al,0xde
  419187:	sbb    bh,0x1
  41918a:	retf   
  41918b:	add    BYTE PTR [eax+edx*1+0x33004d02],al
  419192:	dec    ebp
  419193:	add    ecx,DWORD PTR [ecx-0x250b2b77]
  419199:	enter  0x12de,0xdf
  41919d:	inc    ebp
  41919e:	pop    ebp
  41919f:	dec    DWORD PTR [ebx-0x257f0ff4]
  4191a5:	add    DWORD PTR [edx],edx
  4191a7:	add    BYTE PTR [ebp+0x50],dl
  4191aa:	mov    ecx,DWORD PTR [ecx+0x45d2f4fc]
  4191b0:	xor    ecx,DWORD PTR [eax-0x38c699fd]
  4191b6:	or     ah,al
  4191b8:	pop    ss
  4191b9:	cdq    
  4191ba:	push   ebp
  4191bb:	clc    
  4191bc:	mov    eax,DWORD PTR [ebp-0x4]
  4191bf:	xor    edx,edx
  4191c1:	add    esi,DWORD PTR [ebx]
  4191c3:	cmp    eax,DWORD PTR [ebx]
  4191c5:	hlt    
  4191c6:	cmp    DWORD PTR [ebx],esp
  4191c8:	or     al,BYTE PTR [ebp+0xf]
  4191cb:	mov    eax,DWORD PTR [edx]
  4191cd:	loopne 0x4191cf
  4191cf:	(bad)  
  4191d0:	mov    ecx,esi
  4191d2:	cld    
  4191d3:	pushf  
  4191d4:	pop    ebp
  4191d5:	pushf  
  4191d6:	mov    esi,DWORD PTR [edx]
  4191d8:	lock mov eax,eax
  4191db:	adc    BYTE PTR [ebx],al
  4191dd:	or     BYTE PTR [ebx+0x4d001001],0xcf
  4191e4:	xor    ebp,DWORD PTR [edi+0x50e45189]
  4191ea:	dec    ebp
  4191eb:	mov    ecx,DWORD PTR [ebx-0x31390304]
  4191f1:	(bad)  
  4191f2:	iret   
  4191f3:	inc    ebp
  4191f4:	(bad)  
  4191f5:	jne    0x419244
  4191f7:	mov    ecx,DWORD PTR [ebx+0x3c603d8]
  4191fd:	(bad)  
  4191fe:	cmp    ebx,eax
  419200:	je     0x419188
  419202:	add    edi,edi
  419204:	or     bh,bh
  419206:	dec    ebp
  419207:	inc    ebp
  419208:	mov    esi,DWORD PTR [ebx]
  41920a:	cld    
  41920b:	add    ecx,esi
  41920d:	cmp    ecx,DWORD PTR [eax-0xc]
  419210:	mov    edx,DWORD PTR [edi]
  419212:	or     BYTE PTR [ebp-0x7c],al
  419215:	mov    ebx,DWORD PTR [eax+ebp*8-0x7b7639ce]
  41921c:	or     al,0x9c
  41921e:	inc    ebp
  41921f:	xor    bh,BYTE PTR [ecx+ecx*4]
  419222:	pushf  
  419223:	call   0x5281b3
  419228:	jne    0x4191f1
  41922a:	mov    ebp,esp
  41922c:	fcomp  DWORD PTR [ebx]
  41922e:	add    BYTE PTR [ecx],al
  419230:	inc    DWORD PTR [ebp-0x75]
  419233:	(bad)  
  419234:	cld    
  419235:	add    al,0xce
  419237:	mov    ecx,edi
  419239:	cld    
  41923a:	inc    ebp
  41923b:	fidivr WORD PTR [ebx]
  41923d:	fbstp  TBYTE PTR [ebp-0x3e]
  419240:	mov    eax,DWORD PTR [eax]
  419242:	adc    BYTE PTR [ebx-0x3974038b],cl
  419248:	fadd   st,st(7)
  41924a:	add    BYTE PTR [ebp-0x1],al
  41924d:	mov    ecx,DWORD PTR [esp+edi*8]
  419250:	inc    ebp
  419251:	mov    bh,0xc7
  419254:	loopne 0x41929b
  419256:	sbb    ecx,DWORD PTR [ebx+0x4545fc7f]
  41925c:	sbb    BYTE PTR [ebx],dh
  41925e:	pushf  
  41925f:	add    ecx,DWORD PTR [ebx-0x398b03c5]
  419265:	mov    eax,edi
  419267:	cwde   
  419268:	inc    ebp
  419269:	inc    ebp
  41926a:	jne    0x4191f7
  41926c:	mov    esp,esp
  41926e:	clc    
  41926f:	add    al,0x4d
  419271:	mov    DWORD PTR [ebx],esi
  419273:	or     al,0x33
  419275:	inc    ebp
  419276:	lea    ecx,[ebx-0x398d13fd]
  41927c:	add    bh,al
  41927e:	inc    ebp
  41927f:	ror    DWORD PTR [ebx+0x45d829],0x8b
  419286:	add    ebp,esp
  419288:	shufps xmm1,xmm3,0xc7
  41928c:	(bad)  
  41928d:	jmp    0x7486cdb6
  419292:	xor    ecx,DWORD PTR [ebx+0x453bec03]
  419298:	hlt    
  419299:	mov    ecx,DWORD PTR [edi]
  41929b:	fadd   DWORD PTR [ebp+0x0]
  41929e:	xor    ecx,DWORD PTR [edi]
  4192a0:	add    ecx,ecx
  4192a2:	cmp    edi,edi
  4192a4:	pmuludq mm7,QWORD PTR [edx+0x50]
  4192a8:	(bad)  
  4192a9:	jmp    0x419236
  4192ab:	mov    edi,esp
  4192ad:	or     al,0xc6
  4192af:	inc    ebp
  4192b0:	(bad)  
  4192b1:	mov    eax,DWORD PTR [ebp+0x10]
  4192b4:	jne    0x41923f
  4192b6:	mov    eax,DWORD PTR [ecx]
  4192b8:	clc    
  4192b9:	add    BYTE PTR [ebp-0x40],cl
  4192bc:	xor    edx,DWORD PTR [eax-0x73]
  4192bf:	jne    0x4192c2
  4192c1:	push   DWORD PTR [edx+0x8]
  4192c4:	add    BYTE PTR [ebp+0x45],al
  4192c7:	mov    ebp,ecx
  4192c9:	cld    
  4192ca:	add    BYTE PTR [ebp+0x0],cl
  4192cd:	xor    eax,DWORD PTR [ebp+0x3]
  4192d0:	mov    DWORD PTR [ebx],edi
  4192d2:	adc    cl,BYTE PTR [ebx+0x110cf8c7]
  4192d8:	sub    eax,0x5d330e4d
  4192dd:	lea    esi,[ebx]
  4192df:	add    DWORD PTR [ebx],eax
  4192e1:	jb     0x4192cc
  4192e3:	add    BYTE PTR [eax],al
  4192e5:	inc    ebp
  4192e6:	add    bl,ch
  4192e8:	inc    ebp
  4192e9:	mov    esi,DWORD PTR [ebx]
  4192eb:	or     al,0x3
  4192ed:	(bad)  
  4192ee:	mov    edi,eax
  4192f0:	in     al,dx
  4192f1:	scas   eax,DWORD PTR es:[edi]
  4192f2:	inc    ebp
  4192f3:	mov    esi,DWORD PTR [ebx]
  4192f5:	in     al,0x3
  4192f7:	add    al,0x89
  4192f9:	mov    ecx,DWORD PTR [eax+edi*8]
  4192fc:	dec    ebp
  4192fd:	(bad)  
  4192fe:	mov    ebx,DWORD PTR [esp+ebx*8-0x30cd3164]
  419305:	mov    ecx,eax
  419307:	cld    
  419308:	push   es
  419309:	dec    ebp
  41930a:	add    al,0x33
  41930c:	mov    DWORD PTR [ebx],eax
  41930e:	in     al,dx
  41930f:	cmp    DWORD PTR [ebp-0x67],eax
  419312:	mov    eax,DWORD PTR [ebp-0xba0068]
  419318:	mov    edx,DWORD PTR [ebp-0x4]
  41931b:	mov    ecx,DWORD PTR [ebp-0x18]
  41931e:	xor    ecx,DWORD PTR [ebp+0x3]
  419321:	cmp    DWORD PTR [ebx],0x8b32749b
  419327:	xor    edi,esp
  419329:	jmp    0xff75907b
  41932e:	add    ecx,DWORD PTR [ebp-0x3f]
  419331:	xor    ebx,DWORD PTR [edi]
  419333:	add    eax,ecx
  419335:	cmp    ebx,DWORD PTR [eax]
  419337:	mov    ecx,DWORD PTR [ebp-0x4]
  41933a:	mov    ecx,DWORD PTR [eax]
  41933c:	adc    BYTE PTR [ebp-0x80],al
  41933f:	jmp    0x419342
  419341:	mov    eax,DWORD PTR [eax]
  419343:	cld    
  419344:	mov    bh,0xc6
  419346:	push   ecx
  419347:	(bad)  
  419348:	jne    0x4193a8
  41934a:	dec    ecx
  41934c:	or     BYTE PTR [ecx+ebx*1],cl
  41934f:	push   ebp
  419350:	inc    ebp
  419351:	in     al,dx
  419352:	add    ebp,esp
  419354:	or     bh,al
  419356:	dec    ebp
  419357:	cld    
  419358:	mov    eax,DWORD PTR [ebp+0x4500f8d8]
  41935e:	xor    DWORD PTR [eax],0x2
  419361:	pushf  
  419362:	dec    DWORD PTR [ebx+0x45510cf4]
  419368:	mov    DWORD PTR [ebx+0x5545fc0c],ecx
  41936e:	mov    edx,DWORD PTR [ecx+0xc]
  419371:	xor    eax,esi
  419373:	mov    edx,0xc172c7
  419378:	inc    ebp
  419379:	mov    esi,DWORD PTR [ebp+0x8]
  41937c:	mov    eax,edx
  41937e:	call   0x84c65a73
  419383:	add    DWORD PTR [eax+eax*1-0x7476bace],ebx
  41938a:	call   0x4db1a397
  41938f:	push   edi
  419390:	xor    esi,DWORD PTR [ebp+0x3]
  419393:	(bad)  
  419394:	pmulhuw mm0,mm1
  419397:	test   DWORD PTR [ebp-0x8],ecx
  41939a:	mov    DWORD PTR [ebp-0x67],eax
  41939d:	mov    eax,DWORD PTR [ebp-0x4]
  4193a0:	xor    edi,DWORD PTR [ebp-0x73]
  4193a3:	xor    eax,DWORD PTR [ebx]
  4193a5:	xor    esi,DWORD PTR [edx+0x3]
  4193a8:	add    BYTE PTR [ecx],bh
  4193aa:	inc    ebp
  4193ab:	(bad)  
  4193ac:	mov    edx,DWORD PTR [ebp-0x7b39fe1c]
  4193b2:	mov    DWORD PTR [eax],0x750f0004
  4193b8:	sub    ecx,DWORD PTR [ebx-0x7974f701]
  4193be:	lock add BYTE PTR [ebp+0x0],al
  4193c2:	mov    esi,DWORD PTR [ebp-0x2c]
  4193c5:	mov    ebp,edx
  4193c7:	or     al,0x72
  4193c9:	ja     0x4193cb
  4193cb:	mov    edx,esi
  4193cd:	cld    
  4193ce:	(bad)  
  4193d1:	cli    
  4193d2:	mov    esi,DWORD PTR [ebp-0x4]
  4193d5:	cmp    ecx,esi
  4193d7:	bswap  edi
  4193d9:	(bad)
  4193dd:	mov    esi,DWORD PTR [ebp-0x4]
  4193e0:	mov    esi,ecx
  4193e2:	clc    
  4193e3:	repnz add esi,DWORD PTR [ebp+0x45]
  4193e7:	push   ebx
  4193e8:	xor    eax,DWORD PTR [ebp+0x3]
  4193eb:	xor    bl,BYTE PTR [edi-0x64]
  4193ee:	pop    ebx
  4193ef:	jmp    0x4194b6
  4193f4:	mov    esi,DWORD PTR [ebp-0x7d]
  4193f7:	xor    ebp,DWORD PTR [eax]
  4193f9:	lea    eax,[ebp-0x8]
  4193fc:	xor    edx,esi
  4193fe:	pushf  
  4193ff:	out    dx,eax
  419400:	(bad)  
  419401:	neg    eax
  419403:	ins    DWORD PTR es:[edi],dx
  419404:	test   esi,edi
  419406:	clc    
  419407:	pop    esp
  419408:	inc    ebp
  419409:	or     BYTE PTR [ecx+0x450f0c7d],cl
  41940f:	xor    edi,DWORD PTR [ecx+0x70f08e6]
  419415:	add    cl,al
  419417:	jne    0x4193b5
  419419:	mov    esi,DWORD PTR [edx]
  41941b:	in     al,dx
  41941c:	push   esi
  41941d:	xor    BYTE PTR [ebp-0xe],dh
  419420:	add    edi,esi
  419422:	cmp    esi,DWORD PTR [edi+0xc21c10f]
  419428:	add    cl,bh
  41942a:	mov    edi,DWORD PTR [ebp+0x8]
  41942d:	mov    DWORD PTR [ebp-0x14],esi
  419430:	add    esi,DWORD PTR [ebp+0x3c]
  419433:	mov    ecx,DWORD PTR [ecx+0x45f10c08]
  419439:	mov    ah,0x3c
  41943b:	pushf  
  41943c:	pushf  
  41943d:	xor    cl,BYTE PTR [ebx+0x75e0e489]
  419443:	jne    0x4193d0
  419445:	mov    ecx,DWORD PTR [esp+ebp*8]
  419448:	icebp  
  419449:	icebp  
  41944a:	shl    edx,0xf2
  41944d:	(bad)  
  41944e:	mov    ah,0x16
  419450:	pop    eax
  419451:	jne    0x4193e6
  419453:	mov    ecx,DWORD PTR [edi]
  419455:	in     al,dx
  419456:	jmp    0x419449
  419458:	add    dl,dh
  41945a:	mov    edi,esi
  41945c:	or     al,0x8
  41945e:	inc    ebp
  41945f:	jne    0x419464
  419461:	mov    esp,DWORD PTR [eax-0x74c1ff24]
  419467:	ret    
  419468:	or     bh,bh
  41946a:	jge    0x419454
  41946c:	sub    ebx,DWORD PTR [edi+0x17d5d34]
  419472:	xor    edi,eax
  419474:	add    esi,DWORD PTR [ebp-0x77]
  419477:	mov    ebx,esp
  419479:	clc    
  41947a:	neg    DWORD PTR [ebp-0x7c]
  41947d:	xor    eax,DWORD PTR [eax]
  41947f:	cmp    eax,DWORD PTR [eax]
  419481:	repz jne 0x419419
  419484:	xor    eax,DWORD PTR [ecx]
  419486:	add    ebx,DWORD PTR [eax]
  419488:	mov    DWORD PTR [ebp-0x8],eax
  41948b:	mov    eax,edi
  41948d:	cld    
  41948e:	lock pop eax
  419490:	test   DWORD PTR [ebx],esi
  419492:	clc    
  419493:	add    edx,DWORD PTR [edi-0x740bff77]
  419499:	fdivp  st(4),st
  41949b:	test   ecx,esi
  41949d:	(bad)  
  41949e:	jnp    0x41949f
  4194a0:	add    ecx,DWORD PTR [ebx-0x14c4272f]
  4194a6:	jae    0x419433
  4194a8:	sub    edi,esp
  4194aa:	(bad)  
  4194ab:	shl    DWORD PTR [eax-0x3e],0x89
  4194af:	leave  
  4194b0:	call   0x81974bbd
  4194b5:	in     al,dx
  4194b6:	(bad)  
  4194b7:	in     al,dx
  4194b8:	add    bh,al
  4194ba:	mov    esp,edi
  4194bc:	in     al,dx
  4194bd:	test   DWORD PTR [ebp-0x8],edi
  4194c0:	mov    eax,DWORD PTR [ebp+0x2b]
  4194c3:	xor    BYTE PTR [ebx],al
  4194c5:	pushf  
  4194c6:	jnp    0x573090ff
  4194cc:	xor    edx,DWORD PTR [ebp-0x77]
  4194cf:	push   ecx
  4194d0:	loopne 0x419505
  4194d2:	jne    0x41948f
  4194d4:	mov    esi,DWORD PTR [edx-0x20]
  4194d7:	add    BYTE PTR [ebp-0x3d],bh
  4194da:	xor    eax,DWORD PTR [ebp-0x73]
  4194dd:	mov    edi,DWORD PTR [esi]
  4194df:	cld    
  4194e0:	jb     0x4194a8
  4194e2:	add    bl,al
  4194e4:	jne    0x41952b
  4194e6:	mov    edx,DWORD PTR [edi-0x10]
  4194e9:	jge    0x419568
  4194eb:	mov    esi,DWORD PTR [ebx]
  4194ed:	lock add ecx,DWORD PTR [ebp+0x3b]
  4194f1:	xor    esi,DWORD PTR [ebp-0x77]
  4194f4:	mov    esi,eax
  4194f6:	lock inc ebp
  4194f8:	jge    0x41952b
  4194fa:	xor    ebx,DWORD PTR [ebx+eax*1+0x75f83b8b]
  419501:	dec    ebp
  419502:	mov    esi,DWORD PTR [ebx]
  419504:	loopne 0x41948f
  419506:	jge    0x419500
  419508:	add    DWORD PTR [ebp-0x7d],eax
  41950b:	icebp  
  41950c:	add    bl,BYTE PTR [ebp+ecx*2-0x740b8a75]
  419513:	dec    ebp
  419514:	hlt    
  419515:	xor    ebx,DWORD PTR [ebp-0x77]
  419518:	mov    esi,esp
  41951a:	in     al,0x45
  41951c:	jge    0x41955b
  41951e:	mov    ebx,DWORD PTR [esp+ecx*1-0x43130e75]
  419525:	dec    ebp
  419526:	pop    esp
  419527:	xor    edx,DWORD PTR [ebx+0x3ec7389]
  41952d:	inc    ebp
  41952e:	hlt    
  41952f:	xor    DWORD PTR [ebp-0x61],esi
  419532:	mov    edi,DWORD PTR [eax+0xf19504]
  419538:	repnz mov DWORD PTR [ebp+0x20],ebx
  41953c:	cmp    eax,DWORD PTR [ebp+0xf]
  41953f:	test   DWORD PTR [edi+ecx*1-0x1],edx
  419543:	fistp  WORD PTR [ebx+0x0]
  419546:	inc    ebp
  419547:	mov    ebx,DWORD PTR [edi+0xc]
  41954a:	add    eax,eax
  41954c:	inc    ebp
  41954d:	test   BYTE PTR [ebx],dh
  41954f:	add    eax,DWORD PTR [ebx]
  419551:	add    BYTE PTR [esi+0x45],bl
  419554:	ret    0x85
  419557:	jnp    0x54421926
  41955d:	inc    bp
  41955f:	inc    ebp
  419560:	xor    DWORD PTR [ecx+0xc78a9c],edi
  419566:	fdiv   QWORD PTR [ebx]
  419568:	test   DWORD PTR [ecx+0x453bf8],edi
  41956e:	push   ebx
  41956f:	add    edi,DWORD PTR [esi+0x708088b]
  419575:	cmp    esi,eax
  419577:	setl   BYTE PTR [ecx-0x74fcffce]
  41957e:	mov    esp,edi
  419580:	call   0x33ccdad2
  419585:	or     BYTE PTR [ebx],al
  419587:	inc    ecx
  419588:	mov    DWORD PTR [ecx+0x408b0ce0],ecx
  41958e:	and    BYTE PTR [ebp-0x7074f0bb],al
  419594:	lock add cl,al
  419597:	mov    DWORD PTR [ebp-0x2c],0xf8f08581
  41959e:	mov    ch,0x45
  4195a0:	clc    
  4195a1:	xor    eax,DWORD PTR [ebp+0x3]
  4195a4:	mov    ecx,DWORD PTR [ecx+0x45c1d4f8]
  4195aa:	inc    ebp
  4195ab:	mov    eax,DWORD PTR [ecx-0x7aff0770]
  4195b1:	mov    edi,eax
  4195b3:	mov    eax,DWORD PTR [ebp+0x3c]
  4195b6:	mov    ecx,DWORD PTR [eax]
  4195b8:	hlt    
  4195b9:	inc    ebp
  4195ba:	ror    DWORD PTR [ebx+0x818c45],0xf4
  4195c1:	mov    eax,DWORD PTR [ebp+0x45e4f889]
  4195c7:	push   ebp
  4195c8:	mov    edi,DWORD PTR [ebx]
  4195ca:	in     al,dx
  4195cb:	jne    0x41958e
  4195cd:	mov    eax,DWORD PTR [ebp-0x28]
  4195d0:	add    DWORD PTR [eax],0xe8058dec
  4195d6:	clc    
  4195d7:	mov    esi,DWORD PTR [edi-0x8]
  4195da:	add    dh,dl
  4195dc:	rol    WORD PTR [ebp-0x1],cl
  4195e0:	mov    edx,DWORD PTR [eax+0x8]
  4195e3:	jne    0x4195a5
  4195e5:	inc    DWORD PTR [esp+ebx*1-0x74ffb2fd]
  4195ec:	inc    ebp
  4195ed:	push   esp
  4195ee:	test   DWORD PTR [ecx+0xf],ecx
  4195f1:	sub    edx,esp
  4195f3:	add    eax,DWORD PTR [eax]
  4195f5:	and    BYTE PTR [ebx-0x3fc4e7b0],cl
  4195fb:	add    BYTE PTR [ebx+ecx*4-0x78ffdffd],al
  419602:	mov    eax,DWORD PTR [ecx]
  419604:	and    BYTE PTR [eax],al
  419606:	adc    BYTE PTR ds:[eax],al
  419609:	inc    ebp
  41960a:	inc    cx
  41960d:	push   esp
  41960e:	add    al,0x75
  419610:	add    BYTE PTR [edx+0x66],dl
  419613:	enter  0xc1,0x4d
  419617:	mov    esp,DWORD PTR [esi+0x20]
  41961a:	add    DWORD PTR [ecx-0x7b],eax
  41961d:	add    eax,DWORD PTR [ebx]
  41961f:	str    WORD PTR [eax+0x45]
  419623:	lea    ecx,[ebx+0x45890801]
  419629:	sbb    BYTE PTR [ebx],al
  41962b:	dec    ebp
  41962c:	cmp    al,0xf
  41962e:	inc    ebp
  41962f:	push   eax
  419630:	mov    esi,DWORD PTR [ebx]
  419632:	push   eax
  419633:	add    eax,eax
  419635:	mov    DWORD PTR [esp+ecx*1-0x7bff2efd],eax
  41963c:	inc    ebp
  41963d:	add    BYTE PTR [ecx],dh
  41963f:	add    BYTE PTR [ebp+ecx*2+0x3d4338b],cl
  419646:	(bad)  
  419647:	mov    ebx,eax
  419649:	loopne 0x419690
  41964b:	dec    ebp
  41964c:	mov    ecx,DWORD PTR [edi]
  41964e:	cld    
  41964f:	push   eax
  419650:	xchg   DWORD PTR [ebx],esi
  419652:	add    DWORD PTR [ebx],ebp
  419654:	add    BYTE PTR [ebx],ch
  419656:	or     BYTE PTR [ecx],bh
  419658:	dec    ecx
  419659:	loopne 0x41965e
  41965b:	xchg   DWORD PTR [ebx-0x78ff0400],ecx
  419661:	push   ebp
  419662:	add    DWORD PTR [ebx+0x55100800],eax
  419668:	dec    ebp
  419669:	jmp    0x4195f4
  41966b:	mov    esp,DWORD PTR [eax]
  41966d:	sbb    dl,dl
  41966f:	inc    eax
  419670:	xor    ecx,DWORD PTR [ebp+0x4501ff87]
  419676:	add    BYTE PTR [ebx+0x74528555],cl
  41967c:	push   ebp
  41967d:	div    DWORD PTR [ebx]
  41967f:	and    eax,DWORD PTR [ebx]
  419681:	add    edx,DWORD PTR [edx-0x30]
  419684:	jno    0x419611
  419686:	inc    DWORD PTR [eax+eiz*1]
  419689:	inc    ebp
  41968a:	push   eax
  41968b:	push   eax
  41968c:	mov    esp,DWORD PTR [edi-0x74beff1c]
  419692:	mov    edi,esp
  419694:	push   eax
  419695:	inc    ebp
  419696:	enter  0x458b,0x8
  41969a:	push   ecx
  41969b:	(bad)  
  41969c:	call   0x10ba074
  4196a1:	pop    ss
  4196a2:	push   ebp
  4196a3:	mov    ecx,DWORD PTR [ebx+0x489408]
  4196a9:	mov    ecx,DWORD PTR [ecx+0xc458b04]
  4196af:	push   ecx
  4196b0:	jo     0x41969a
  4196b2:	inc    DWORD PTR [edi]
  4196b4:	or     BYTE PTR [eax],al
  4196b6:	call   0xcc9e00
  4196bb:	fmul   QWORD PTR [ebp+0x55]
  4196be:	mov    eax,DWORD PTR [ebx-0x313ed7c4]
  4196c4:	mov    bh,0x8c
  4196c6:	adc    al,0x9c
  4196c8:	dec    esp
  4196c9:	xor    bl,BYTE PTR [eax]
  4196cb:	mov    ecx,DWORD PTR [ebp+0xc]
  4196ce:	mov    eax,DWORD PTR [ebp-0x4]
  4196d1:	mov    esi,DWORD PTR [edi-0x3148f924]
  4196d7:	push   es
  4196d8:	retf   
  4196d9:	mov    BYTE PTR [ebp-0x30],0x3b
  4196dd:	inc    ebp
  4196de:	movntps XMMWORD PTR [eax-0x741fff77],xmm5
  4196e5:	retf   0x83fc
  4196e8:	into   
  4196e9:	dec    ebp
  4196ea:	retf   
  4196eb:	mov    ecx,DWORD PTR [ebp-0x74]
  4196ee:	mov    eax,DWORD PTR [eax]
  4196f0:	fdiv   QWORD PTR [ebx]
  4196f2:	mov    bh,0x3
  4196f4:	push   es
  4196f5:	mov    esi,ecx
  4196f7:	sbb    cl,dl
  4196f9:	dec    ebp
  4196fa:	sar    DWORD PTR [ebx],cl
  4196fc:	push   ebp
  4196fd:	jne    0x41970e
  4196ff:	mov    ecx,DWORD PTR [eax-0x74ffff28]
  419705:	lea    ebx,[eax]
  419707:	call   0xf4cb22ce
  41970c:	sbb    dh,dl
  41970e:	add    edx,ebx
  419710:	push   ebp
  419711:	mov    ecx,DWORD PTR [ebx+0x487238e4]
  419717:	push   ecx
  419718:	mov    DWORD PTR [eax-0x30],edx
  41971b:	test   DWORD PTR [edx],eax
  41971d:	xadd   esp,esi
  419720:	pop    es
  419721:	add    cl,dl
  419723:	mov    eax,ecx
  419725:	or     al,0x45
  419727:	(bad)  
  419728:	push   eax
  419729:	add    DWORD PTR [edx+0x0],eax
  41972c:	add    ecx,DWORD PTR [ecx]
  41972e:	and    dh,cl
  419730:	call   0xc5a000
  419735:	add    DWORD PTR [ebp+0x0],edx
  419738:	mov    esp,DWORD PTR [ebp+0x18]
  41973b:	add    BYTE PTR [eax+0x54],cl
  41973e:	xor    eax,DWORD PTR [eax]
  419740:	add    esp,DWORD PTR [esi+0x3b]
  419743:	inc    ebp
  419744:	je     0x4196c9
  419746:	push   ecx
  419747:	cli    
  419748:	dec    ebp
  419749:	mov    DWORD PTR [ebx],eax
  41974b:	(bad)  
  41974c:	or     al,0x5e
  41974e:	inc    eax
  41974f:	add    BYTE PTR [ebx],al
  419751:	data16 and BYTE PTR [ebp+0x50],al
  419755:	sub    DWORD PTR [ecx],0xfffffff8
  419758:	add    BYTE PTR [ebp-0x75],ah
  41975b:	add    BYTE PTR [eax],bl
  41975d:	enter  0x894d,0x8b
  419761:	int3   
  419762:	loopne 0x419726
  419764:	rol    BYTE PTR [eax],0x33
  419767:	lea    cx,[ebp+0xa]
  41976b:	data16 jb 0x4197b3
  41976e:	add    BYTE PTR [ebx+0x44890855],cl
  419774:	sbb    ah,al
  419776:	inc    ebp
  419777:	lldt   WORD PTR ds:[edx+0x66]
  41977c:	xor    ecx,DWORD PTR [eax]
  41977e:	sub    eax,DWORD PTR [ebx+ecx*4]
  419781:	add    BYTE PTR [esi+eiz*2],cl
  419784:	ror    edx,cl
  419786:	dec    ebp
  419787:	inc    ebp
  419788:	cmp    eax,DWORD PTR [ebx+0x668b0876]
  41978e:	cld    
  41978f:	or     BYTE PTR [edi+0x4501dd],dl
  419795:	(bad)  
  419796:	into   
  419797:	out    dx,al
  419798:	retf   
  419799:	(bad)  
  41979a:	dec    ebp
  41979b:	mov    al,0x8b
  41979d:	loop   0x4197bf
  41979f:	cmp    ecx,DWORD PTR [edx]
  4197a1:	inc    ebp
  4197a2:	daa    
  4197a3:	loop   0x41972c
  4197a5:	out    dx,al
  4197a6:	add    edi,eax
  4197a8:	add    BYTE PTR [eax+0x3f52e155],bh
  4197ae:	push   ebp
  4197af:	inc    ebp
  4197b0:	xor    ebx,esp
  4197b2:	add    ebp,esi
  4197b4:	push   edx
  4197b5:	push   bp
  4197b7:	inc    ebp
  4197b8:	(bad)  
  4197b9:	in     eax,dx
  4197ba:	push   esp
  4197bb:	(bad)  
  4197bc:	inc    edx
  4197be:	sbb    al,0x33
  4197c0:	ror    BYTE PTR [ebp-0x75fef27c],0x0
  4197c7:	add    BYTE PTR [ebp+0x47],0x8b
  4197cb:	jmp    0xf98b:0x100041c8
  4197d2:	xor    esi,DWORD PTR [edx+0x3]
  4197d5:	mov    ecx,DWORD PTR [edi]
  4197d7:	fmul   DWORD PTR [edx]
  4197d9:	add    BYTE PTR [eax],al
  4197db:	lea    eax,[ebx-0x4700273c]
  4197e1:	add    al,0x4f
  4197e3:	pop    DWORD PTR [eax]
  4197e5:	add    DWORD PTR [ecx-0x3faa3c00],ecx
  4197eb:	push   edx
  4197ec:	inc    WORD PTR [ebp+0x8]
  4197f0:	mov    eax,0x514f4d
  4197f5:	(bad)
  4197f9:	add    al,al
  4197fb:	xor    DWORD PTR [ebx-0x74baf730],eax
  419801:	test   DWORD PTR [esi+0x74],esp
  419804:	inc    ebp
  419805:	mov    DWORD PTR [eax+0xa4e08],edi
  41980b:	add    BYTE PTR [ecx-0x76c435bb],cl
  419811:	or     dh,cl
  419813:	or     eax,0x8b8d5045
  419818:	inc    ebp
  419819:	mov    WORD PTR [ecx+0x3b8a00],?
  41981f:	jne    0x419854
  419821:	mov    edi,DWORD PTR [edx+0x8f3b18]
  419827:	add    DWORD PTR [ebx],eax
  419829:	add    bh,bh
  41982b:	adc    DWORD PTR [eax],ecx
  41982d:	adc    DWORD PTR [ebp+0x55],edi
  419830:	push   es
  419831:	mov    ecx,DWORD PTR [ecx-0x38ff8d70]
  419837:	mov    ebp,DWORD PTR [eax+ebp*1+0x503a11dc]
  41983e:	inc    ebp
  41983f:	mov    esp,edi
  419841:	or     al,0xdc
  419843:	push   eax
  419844:	(bad)  
  419845:	jne    0x4197fb
  419847:	call   0x399138
  41984c:	inc    ebp
  41984d:	sar    BYTE PTR [edx],0x84
  419850:	out    dx,al
  419851:	add    bh,al
  419853:	add    BYTE PTR [ebp+esi*2-0x247424],bh
  41985a:	(bad)  
  41985b:	and    al,al
  41985d:	fs in  eax,dx
  41985f:	inc    DWORD PTR [ebp-0x7b]
  419862:	jo     0x419873
  419864:	leave  
  419865:	scas   al,BYTE PTR es:[edi]
  419866:	inc    esp
  419867:	add    BYTE PTR [ebx+ecx*4+0x55f20c10],ch
  41986e:	or     BYTE PTR [ebx-0x97717c9],0x83
  419875:	call   DWORD PTR [edi]
  419877:	shr    ah,0x84
  41987a:	xchg   DWORD PTR [eax],eax
  41987c:	add    DWORD PTR [eax],eax
  41987e:	add    bh,bh
  419880:	dec    ebp
  419881:	and    BYTE PTR [ecx-0x38],dl
  419884:	push   eax
  419885:	dec    DWORD PTR [ebx+0xfd885]
  41988b:	mov    BYTE PTR [ebp+0x508bac00],cl
  419891:	mov    WORD PTR [ecx+0x0],ss
  419894:	lea    ecx,[ebx+0x108b20d8]
  41989a:	mov    WORD PTR [edx],ds
  41989c:	add    BYTE PTR [edi+0xff01ff],al
  4198a2:	mov    ecx,DWORD PTR [ebp-0x28]
  4198a5:	push   ecx
  4198a6:	shl    BYTE PTR [ebp+0x3a],0x8b
  4198aa:	inc    ebp
  4198ab:	in     al,0xeb
  4198ad:	jno    0x41983a
  4198af:	push   edx
  4198b0:	mov    DWORD PTR [eax-0x28],edx
  4198b3:	mov    eax,DWORD PTR [ebp+0x20]
  4198b6:	je     0x41983f
  4198b8:	mov    eax,DWORD PTR [ecx]
  4198ba:	sbb    BYTE PTR [eax],al
  4198bc:	pop    DWORD PTR [eax]
  4198be:	add    esi,eax
  4198c0:	add    bl,al
  4198c2:	adc    DWORD PTR [edi],esi
  4198c4:	jmp    0x8bcce916
  4198c9:	sub    BYTE PTR [ebp+eax*2-0x63c4cf00],cl
  4198d0:	jne    0x41985d
  4198d2:	mov    ecx,DWORD PTR [eax]
  4198d4:	in     al,0x75
  4198d6:	pop    DWORD PTR [ecx+0x5501]
  4198dc:	push   edx
  4198dd:	inc    DWORD PTR [ebx]
  4198df:	adc    BYTE PTR [ecx+0x45721cc6],cl
  4198e5:	add    BYTE PTR [edi+0x9],dl
  4198e8:	call   DWORD PTR [esi]
  4198ea:	and    dl,al
  4198ec:	and    bh,bh
  4198ee:	inc    edi
  4198f0:	test   eax,edx
  4198f2:	sldt   ebx
  4198f5:	xor    BYTE PTR [eax],al
  4198f7:	pushf  
  4198f8:	(bad)  
  4198f9:	jmp    0x419907
  4198fb:	mov    eax,edi
  4198fd:	or     al,0x75
  4198ff:	inc    eax
  419900:	call   0x419008
  419905:	mov    eax,eax
  419907:	loopne 0x41988d
  419909:	inc    ebp
  41990a:	add    BYTE PTR [ebx+0x1451c00],cl
  419910:	mov    eax,DWORD PTR [ebp+0x20]
  419913:	add    edi,ecx
  419915:	add    BYTE PTR [eax],ch
  419917:	cmp    edi,0x18
  41991a:	test   DWORD PTR [ebp+0xf],esi
  41991d:	sbb    DWORD PTR [ecx+0x578b0020],0x20
  419924:	jne    0x419928
  419926:	call   0xffa093eb
  41992b:	leave  
  41992c:	rcr    BYTE PTR [esp+eax*4],0x55
  419930:	add    ah,ch
  419932:	add    BYTE PTR [edi-0x48fef979],dh
  419938:	add    BYTE PTR [edx*2+0x75ff3b57],dl
  41993f:	inc    esp
  419940:	mov    ebx,DWORD PTR [eax]
  419942:	fcom   st(2)
  419944:	add    BYTE PTR [edi],bl
  419946:	lea    ecx,[eax-0x18]
  419949:	(bad)  
  41994a:	push   DWORD PTR [ecx]
  41994c:	call   0xffb3e6ae
  419951:	mov    edx,DWORD PTR [eax+ecx*1-0x1]
  419955:	fstp   DWORD PTR [esi+ebx*8]
  419958:	push   ebp
  419959:	pop    ebp
  41995a:	mov    esi,DWORD PTR [edx-0x38]
  41995d:	add    DWORD PTR [eax],0x28
  419960:	mov    edi,DWORD PTR [ebx]
  419962:	xor    esi,DWORD PTR [edx+0x3]
  419965:	xor    esi,DWORD PTR [edi+ebx*2-0x75]
  419969:	pop    ebp
  41996a:	or     al,0x4
  41996c:	inc    ecx
  41996d:	push   ebp
  41996e:	(bad)  
  41996f:	in     al,dx
  419970:	or     ah,ch
  419972:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419973:	xbegin 0xffc70f69
  419979:	clc    
  41997a:	adc    al,0x45
  41997c:	div    BYTE PTR [eax]
  41997e:	or     BYTE PTR [eax+eax*1-0x7e278a39],bl
  419985:	test   DWORD PTR [eax+edi*8+0x666300],ebx
  41998c:	jno    0x4199f4
  41998e:	add    eax,DWORD PTR [ebp+0x52]
  419991:	adc    eax,0xffffffa0
  419994:	xchg   DWORD PTR [ecx+0x4800fc01],ecx
  41999a:	test   DWORD PTR [eax],eax
  41999c:	clc    
  41999d:	data16 or al,BYTE PTR [ebp+0x45]
  4199a1:	or     DWORD PTR [ebx-0x3d76d7e0],0xfffffff8
  4199a8:	rol    BYTE PTR [ebp+0x45],1
  4199ab:	mov    DWORD PTR [ebx+0x4d45e0ec],ecx
  4199b1:	mov    DWORD PTR [ecx+0x1845c7e8],ecx
  4199b7:	push   ebx
  4199b8:	add    BYTE PTR [ebp+0x0],dl
  4199bb:	push   ecx
  4199bc:	jge    0x4199f1
  4199be:	add    BYTE PTR [esi+0x4],dl
  4199c1:	jne    0x419a28
  4199c3:	mov    edx,0x457200
  4199c8:	jmp    0x41998c
  4199ca:	xor    edi,DWORD PTR [ebx]
  4199cc:	pop    edi
  4199cd:	cvtdq2ps xmm7,xmm0
  4199d0:	ret    0x0
  4199d3:	mov    ecx,DWORD PTR [ebx+0x51750ff0]
  4199d9:	xor    ecx,DWORD PTR [edi]
  4199db:	add    eax,DWORD PTR [ecx+0x3b]
  4199de:	push   ebx
  4199df:	rdpmc  
  4199e1:	out    0x8d,al
  4199e3:	add    BYTE PTR [eax],cl
  4199e5:	mov    eax,DWORD PTR [ebp-0x743e8b10]
  4199eb:	ret    0x450c
  4199ee:	sbb    al,0x8b
  4199f0:	cmp    eax,esi
  4199f2:	or     cl,al
  4199f4:	or     al,0xc2
  4199f6:	pop    eax
  4199f7:	inc    ebp
  4199f8:	add    ecx,DWORD PTR [edi]
  4199fa:	add    esi,DWORD PTR [ebp+0x39]
  4199fd:	invd   
  4199ff:	jge    0x419a0b
  419a01:	mov    eax,0x478ac0
  419a06:	cli    
  419a07:	xor    esp,ecx
  419a09:	mov    ebx,0x5b8ac0
  419a0e:	ret    0x33
  419a11:	mov    eax,0x833b8b
  419a16:	sub    BYTE PTR [ebx],al
  419a18:	inc    ebp
  419a19:	xor    ax,di
  419a1c:	pushf  
  419a1d:	inc    bh
  419a1f:	mov    esp,esp
  419a21:	hlt    
  419a22:	test   DWORD PTR [ebp-0x8],esi
  419a25:	mov    eax,DWORD PTR [ebp-0x14]
  419a28:	xor    ecx,DWORD PTR [ebx-0x76478864]
  419a2e:	dec    edi
  419a2f:	or     BYTE PTR [eax],al
  419a31:	jne    0x4199bc
  419a33:	mov    esi,esp
  419a35:	call   0x77a825fa
  419a3a:	inc    ebp
  419a3b:	mov    DWORD PTR [eax+0x9c4f0c],edi
  419a41:	add    BYTE PTR [ecx-0x3ffe0717],cl
  419a47:	add    BYTE PTR [esi+0x7d],ah
  419a4a:	inc    ebp
  419a4b:	mov    bx,WORD PTR [ebp+0x8]
  419a4f:	add    DWORD PTR [ebp+0x55],0x30c008b
  419a56:	inc    ebp
  419a57:	mov    bx,di
  419a5a:	lock test BYTE PTR [ecx+0x7000801],bh
  419a61:	jge    0x419a24
  419a63:	mov    ecx,DWORD PTR [ebx-0x630613f0]
  419a69:	cli    
  419a6a:	xor    bl,bh
  419a6c:	add    ecx,DWORD PTR [ebx-0x740ff3a9]
  419a72:	test   BYTE PTR [eax],cl
  419a74:	add    DWORD PTR [eax+eax*1-0x74ffbb00],eax
  419a7b:	cmp    ebp,eax
  419a7d:	xadd   DWORD PTR [ebp+0x66f000c2],ecx
  419a84:	test   BYTE PTR [ebp+0x1],bh
  419a87:	mov    ebx,0x458a00
  419a8c:	xor    esi,DWORD PTR [ebx]
  419a8e:	add    esp,DWORD PTR [esi-0x77]
  419a91:	pop    ebp
  419a92:	loopne 0x419afa
  419a94:	inc    ebp
  419a95:	clc    
  419a96:	xor    edi,DWORD PTR [ebx]
  419a98:	add    esi,DWORD PTR [edx-0x77]
  419a9b:	data16 fdivr QWORD PTR [ebp-0x49]
  419a9f:	mov    ebx,0xb78afc
  419aa4:	hlt    
  419aa5:	xor    edi,DWORD PTR [esi]
  419aa7:	data16 add BYTE PTR [ebp+0x66],bl
  419aab:	data16 lock clc 
  419aae:	cmp    eax,DWORD PTR ds:[eax]
  419ab1:	ja     0x419b19
  419ab3:	psubq  mm7,QWORD PTR [ebp+0x4]
  419ab7:	ltr    WORD PTR [ebp+0x66]
  419abb:	add    esi,eax
  419abd:	add    di,WORD PTR [ebp+0x2b]
  419ac1:	data16 data16 jge 0x419b42
  419ac5:	mov    ebx,0xe08a8b
  419aca:	jge    0x419aff
  419acc:	data16 data16 xor al,0x5d
  419ad0:	data16 data16 jne 0x419acc
  419ad4:	mov    edi,DWORD PTR [ebx]
  419ad6:	fdiv   QWORD PTR [edx+0x7d]
  419ad9:	data16 data16 jge 0x419b11
  419add:	mov    ebx,0x758a66
  419ae2:	mov    esi,0x667233
  419ae7:	pop    ebp
  419ae8:	or     BYTE PTR [esi+0x0],ah
  419aeb:	clc    
  419aec:	mov    edi,DWORD PTR [ebx]
  419aee:	lock ja 0x419a7c
  419af1:	(bad)  
  419af3:	jge    0x419aec
  419af5:	invd   
  419af7:	pop    ebp
  419af8:	add    BYTE PTR [ebx],al
  419afa:	(bad)  
  419afb:	cmp    di,WORD PTR [ebp+0xf]
  419aff:	data16 sbb bh,BYTE PTR [ebp+0x0]
  419b03:	mov    bx,WORD PTR [ebp-0x10]
  419b07:	pop    bp
  419b09:	fbstp  TBYTE PTR [ebx]
  419b0b:	test   DWORD PTR [ebx],eax
  419b0d:	add    BYTE PTR [ebx],bh
  419b0f:	add    BYTE PTR [esi+0x7d],ah
  419b12:	jge    0x419a9f
  419b14:	data16 in al,dx
  419b16:	pop    ebp
  419b17:	stc    
  419b18:	bsf    ecx,DWORD PTR [ebp+0x6632009c]
  419b1f:	mov    edi,ebx
  419b21:	in     al,dx
  419b22:	test   BYTE PTR [ebp+0x0],bh
  419b25:	mov    eax,DWORD PTR [eax]
  419b27:	call   0xbd3e94b7
  419b2c:	ds pushf 
  419b2e:	add    BYTE PTR [edx],dh
  419b30:	mov    bx,di
  419b33:	call   0x8b4a18c3
  419b38:	add    ebp,esp
  419b3a:	mov    bx,di
  419b3d:	jnp    0x419b65
  419b3f:	mov    DWORD PTR [ebx+0x3e7df808],ecx
  419b45:	mov    eax,DWORD PTR [eax]
  419b47:	call   0x7c3d26b2
  419b4c:	mov    ecx,DWORD PTR [ecx+0x7d030c08]
  419b52:	data16 data16 fistp WORD PTR [ebp+0xe]
  419b57:	xor    DWORD PTR [edi-0x48fff7ab],0xfb66f403
  419b61:	fisttp WORD PTR [ecx-0x7401f77b]
  419b67:	(bad)  
  419b68:	cld    
  419b69:	jne    0x419ba9
  419b6b:	xor    eax,DWORD PTR [eax]
  419b6d:	mov    esp,DWORD PTR [esi-0x10]
  419b70:	sti    
  419b71:	repnz mov ebp,DWORD PTR [edi-0xffc76f4]
  419b78:	data16 adc bl,bh
  419b7b:	push   ebp
  419b7c:	xor    ecx,DWORD PTR es:[ebx+0x3ee4f88b]
  419b83:	mov    WORD PTR [eax],es
  419b85:	pushf  
  419b86:	data16 xor bh,bl
  419b89:	mov    DWORD PTR [ebx+0x3550ce4],ecx
  419b8f:	mov    esp,DWORD PTR [esi-0x14]
  419b92:	fisttp WORD PTR [ebx-0x3748a9f2]
  419b98:	or     al,0x2b
  419b9a:	mov    bh,0xba
  419b9c:	hlt    
  419b9d:	mov    bh,bl
  419b9f:	add    BYTE PTR [ecx-0x7446f3cd],cl
  419ba5:	dec    esi
  419ba6:	or     al,0x0
  419ba8:	mov    edi,DWORD PTR [ebx]
  419baa:	or     BYTE PTR [ebp+0x3b],dh
  419bad:	mov    ecx,DWORD PTR [edi]
  419baf:	fdivr  QWORD PTR [ebx-0x7499ff83]
  419bb5:	xor    al,0xd8
  419bb7:	pop    bp
  419bb9:	lock xor esi,DWORD PTR [ebx]
  419bbc:	lea    esp,[esi+0x1f]
  419bbf:	icebp  
  419bc0:	jb     0x419bc6
  419bc2:	add    al,al
  419bc4:	jge    0x419bd2
  419bc6:	mov    eax,eax
  419bc8:	fsubr  st,st(3)
  419bca:	pop    ebp
  419bcb:	mov    esi,DWORD PTR [ebx]
  419bcd:	in     al,0x8d
  419bcf:	rcr    DWORD PTR [edi],0xc2
  419bd2:	jb     0x419c32
  419bd4:	add    cl,cl
  419bd6:	jge    0x419be4
  419bd8:	mov    edx,DWORD PTR [ebp-0x20]
  419bdb:	in     al,dx
  419bdc:	pop    ebp
  419bdd:	data16 data16 or BYTE PTR [esi+edi*4],bh
  419be2:	cmp    di,WORD PTR [ebp+0x0]
  419be6:	mov    ebp,DWORD PTR [ebx]
  419be8:	fdivr  QWORD PTR [esi+0x668a5d]
  419bee:	cmp    al,0x33
  419bf0:	mov    si,0x4e7d
  419bf4:	mov    eax,DWORD PTR [eax]
  419bf6:	lock inc ebp
  419bf8:	mov    esi,DWORD PTR [esi]
  419bfa:	or     BYTE PTR [edi+esi*8+0x8508ba],bl
  419c01:	clc    
  419c02:	(bad)  
  419c03:	cmp    edi,DWORD PTR [ebx]
  419c05:	je     0x419c16
  419c07:	push   ebx
  419c08:	loopne 0x419c19
  419c0a:	dec    ecx
  419c0c:	mov    esp,DWORD PTR [esp+eiz*8-0x33]
  419c10:	icebp  
  419c11:	mov    esi,0x703084d
  419c16:	pcmpgtd mm6,mm1
  419c19:	add    BYTE PTR [ebp+0x66],dh
  419c1c:	jmp    0x419be9
  419c1e:	mov    eax,DWORD PTR [ebx]
  419c20:	lock push ebp
  419c22:	ror    DWORD PTR [ebp-0x2972feb3],1
  419c28:	or     bh,dl
  419c2a:	jb     0x419c2a
  419c2c:	add    BYTE PTR [ebx-0x1a7487b3],cl
  419c32:	loopne 0x419c34
  419c34:	jne    0x419c3a
  419c36:	data16 add BYTE PTR [esi+eiz*2],dh
  419c3a:	mov    ecx,ebx
  419c3c:	data16 ds icebp 
  419c3f:	add    BYTE PTR [esi],bh
  419c41:	data16 add bl,cl
  419c44:	retw   0xf2
  419c48:	ret    0x66
  419c4b:	retf   
  419c4c:	enterw 0x4df1,0x19
  419c51:	pop    edi
  419c52:	jne    0x419bd5
  419c54:	mov    esi,DWORD PTR [esi]
  419c56:	call   0x77b627f7
  419c5b:	xor    ebp,DWORD PTR [ebx]
  419c5d:	lea    esp,[esi+0x48]
  419c60:	repnz in eax,0x3b
  419c63:	add    BYTE PTR [ebp-0x37],dh
  419c66:	xor    edx,DWORD PTR [ebp-0x15]
  419c69:	in     al,dx
  419c6a:	xor    edx,DWORD PTR [esi+0x40]
  419c6d:	mov    DWORD PTR [edi],0x338545fc
  419c73:	clc    
  419c74:	add    esi,DWORD PTR [ecx]
  419c76:	pop    edi
  419c77:	pushf  
  419c78:	pop    ebx
  419c79:	call   0xff429c40
  419c7e:	mov    edi,eax
  419c80:	push   ecx
  419c81:	pop    es
  419c82:	mov    esi,DWORD PTR [edi]
  419c84:	push   esi
  419c85:	inc    edi
  419c86:	add    al,0x70
  419c88:	add    BYTE PTR [ecx+0x66],ah
  419c8b:	(bad)  
  419c8c:	into   
  419c8d:	fs ds int 0x0
  419c91:	mov    ecx,0x7ce0866
  419c96:	ret    0x66
  419c99:	add    bh,al
  419c9b:	add    al,0xfc
  419c9d:	add    BYTE PTR [ebp+0x31c3f866],al
  419ca3:	ds pushf 
  419ca5:	add    BYTE PTR [esi+0x66],ah
  419ca8:	into   
  419ca9:	ret    
  419caa:	pop    ebp
  419cab:	adc    al,0x57
  419cad:	add    BYTE PTR [edi-0x723c409a],dh
  419cb3:	add    edi,edi
  419cb5:	jne    0x419d0c
  419cb7:	lea    edx,[ecx+0x1]
  419cba:	mov    ebx,0xd64ff1
  419cbf:	sar    DWORD PTR [ebx],1
  419cc1:	test   BYTE PTR [ebp+0x38],dh
  419cc4:	mov    DWORD PTR [esp+edi*8-0x76],esp
  419cc8:	push   edi
  419cc9:	xor    BYTE PTR [ebx],0x37
  419ccc:	mov    esi,ebx
  419cce:	xor    eax,DWORD PTR [eax-0x3c738f9a]
  419cd4:	cmp    BYTE PTR [ebp+0x64],al
  419cd7:	pop    ebx
  419cd8:	mov    ebx,0x9c3b36
  419cdd:	je     0x419d0a
  419cdf:	xor    edi,DWORD PTR [ebx+0x668a33]
  419ce5:	mov    WORD PTR [ebx],?
  419ce7:	cmp    BYTE PTR [ebx+0x8b4e64],bh
  419ced:	pop    edi
  419cee:	cmp    ecx,ecx
  419cf0:	jne    0x419d47
  419cf2:	mov    ebp,esp
  419cf4:	cld    
  419cf5:	push   esi
  419cf6:	pop    ebx
  419cf7:	inc    ebp
  419cf8:	stc    
  419cf9:	test   DWORD PTR ss:[eax+edi*8-0x317af642],ebx
  419d01:	clc    
  419d02:	test   dl,dl
  419d04:	cmp    bh,bh
  419d06:	fs pop si
  419d09:	or     bl,al
  419d0b:	add    al,0x8b
  419d0d:	add    BYTE PTR [ecx+0x66],dl
  419d10:	push   edi
  419d11:	retf   0x3e45
  419d14:	add    BYTE PTR ss:[esi+eiz*2-0x3d7a3542],bl
  419d1c:	clc    
  419d1d:	add    BYTE PTR [ebx+0x66],bl
  419d20:	dec    edx
  419d22:	mov    edx,DWORD PTR [edi-0x76]
  419d25:	push   edi
  419d26:	add    al,0xb7
  419d28:	xor    al,0xba
  419d2a:	cmp    al,0x8d
  419d2c:	je     0x419d2d
  419d2e:	mov    edx,DWORD PTR [ebp-0x46]
  419d31:	push   ecx
  419d32:	lea    edi,[ebx+0x554fff]
  419d38:	push   ecx
  419d39:	cmp    edx,DWORD PTR [ebx+0x75]
  419d3c:	mov    ecx,DWORD PTR [ecx+0x723bfcbb]
  419d42:	add    BYTE PTR [ebx],dh
  419d44:	sub    ecx,DWORD PTR [ebx+0x668a33bb]
  419d4a:	add    BYTE PTR [ebx+esi*1+0x4f64bb38],cl
  419d51:	mov    ebx,0x3b3b00
  419d56:	jne    0x419d83
  419d58:	mov    DWORD PTR [ebx+0x728afc],edi
  419d5e:	xor    esi,DWORD PTR [ebx]
  419d60:	mov    edi,DWORD PTR [ebx+0x8d4e33]
  419d66:	push   edi
  419d67:	cmp    esp,ebp
  419d69:	jne    0x419d6b
  419d6b:	sbb    DWORD PTR [eax],0x8085c3fc
  419d71:	clc    
  419d72:	inc    edi
  419d73:	pop    ebx
  419d74:	sti    
  419d75:	add    eax,0xeb8bc075
  419d7a:	cld    
  419d7b:	xor    edi,DWORD PTR ds:0xf8c3855e
  419d81:	mov    ecx,DWORD PTR [ecx+edx*2]
  419d84:	rol    DWORD PTR [ebp-0x37],0xf
  419d88:	mov    DWORD PTR [eax],ecx
  419d8a:	inc    edi
  419d8b:	(bad)  
  419d8c:	in     eax,0xfc
  419d8e:	add    bh,bh
  419d90:	(bad)  
  419d91:	mov    esi,0xc38a5e
  419d96:	mov    esi,DWORD PTR [ebx]
  419d98:	push   ecx
  419d99:	mov    edi,0xfc4ec7
  419d9e:	test   DWORD PTR [ebp-0x8],edx
  419da1:	xor    di,ax
  419da4:	pushf  
  419da5:	sub    ebp,eax
  419da7:	inc    ebp
  419da8:	(bad)  
  419da9:	sub    edi,edi
  419dab:	mov    DWORD PTR [ebx+0x3b03ba08],ecx
  419db1:	inc    ebp
  419db2:	add    BYTE PTR [esi+0x2b],ah
  419db5:	or     bh,BYTE PTR [edx+0xf8ac2]
  419dbb:	cmp    al,0x33
  419dbd:	mov    edi,DWORD PTR [edx+0xfc4e81]
  419dc3:	(bad)  
  419dc4:	cmp    esi,DWORD PTR [ebx]
  419dc6:	je     0x419d80
  419dc8:	push   ebx
  419dc9:	dec    esi
  419dca:	str    ecx
  419dcd:	cmp    esp,DWORD PTR [ebp+esi*2-0x33]
  419dd1:	xor    edi,DWORD PTR [edi+0x789085f]
  419dd7:	mov    edx,DWORD PTR [esp+edi*8]
  419dda:	add    cl,cl
  419ddc:	data16 add al,0xcb
  419ddf:	push   ebp
  419de0:	add    ebp,esp
  419de2:	jne    0x419dd0
  419de4:	(bad)  
  419de5:	mov    DWORD PTR [ecx],0xd685f7ec
  419deb:	clc    
  419dec:	xlat   BYTE PTR ds:[ebx]
  419ded:	inc    ebp
  419dee:	mov    esi,DWORD PTR [eax]
  419df0:	push   eax
  419df1:	pushf  
  419df2:	in     eax,0x8b
  419df4:	add    ah,ch
  419df6:	add    al,0x55
  419df8:	add    BYTE PTR [ecx+0x66],dl
  419dfb:	add    eax,0x3e72cb
  419e00:	add    BYTE PTR [ebp+0x66],al
  419e03:	(bad)  
  419e04:	retf   
  419e05:	lock ret 0x85
  419e09:	clc    
  419e0a:	inc    bp
  419e0c:	retf   
  419e0d:	cmp    eax,0xc77d9cc8
  419e12:	ss cld 
  419e14:	pushf  
  419e15:	test   DWORD PTR [edi-0x8],ebx
  419e18:	je     0x419e5f
  419e1a:	xor    esi,DWORD PTR ds:0x7020840
  419e20:	ror    BYTE PTR [ebp-0x37],0x8d
  419e24:	push   ebp
  419e25:	add    esp,ebp
  419e27:	jb     0x419db4
  419e29:	add    BYTE PTR [eax],cl
  419e2b:	dec    ebp
  419e2c:	mov    bh,0x81
  419e2e:	push   esi
  419e2f:	push   ebp
  419e30:	adc    DWORD PTR [ecx-0x3c],0x3e9cff81
  419e37:	xor    al,BYTE PTR [eax]
  419e39:	mov    edx,DWORD PTR [edi+0x10]
  419e3c:	(bad)  
  419e3d:	scas   eax,DWORD PTR es:[edi]
  419e3e:	ret    0x3b
  419e41:	jns    0x3b429b34
  419e47:	mov    esi,DWORD PTR [eax+edx*1-0x75]
  419e4b:	dec    ebp
  419e4c:	or     BYTE PTR [ebx],ch
  419e4e:	ret    0x458b
  419e51:	lock jmp 0x419e45
  419e54:	mov    ecx,DWORD PTR [eax]
  419e56:	or     BYTE PTR [edi],al
  419e58:	mov    ecx,eax
  419e5a:	xor    DWORD PTR [edx+0x2],0x0
  419e5e:	mov    bh,0xc1
  419e60:	adc    BYTE PTR [eax],dh
  419e62:	iret   
  419e63:	inc    ebp
  419e64:	mov    DWORD PTR [ebx],0x4dfff8c4
  419e6a:	inc    BYTE PTR [ebx]
  419e6c:	ret    0xf8
  419e6f:	adc    DWORD PTR [esi+0x10],esp
  419e72:	clc    
  419e73:	dec    ecx
  419e74:	fisttp WORD PTR [ecx+0x456604c0]
  419e7a:	add    dh,BYTE PTR ds:0x75e0845
  419e80:	ret    0x4d
  419e83:	lea    ecx,[ebx+0x18728301]
  419e89:	add    BYTE PTR [ebp+0x45],al
  419e8c:	xor    ecx,ebp
  419e8e:	pushf  
  419e8f:	add    bh,al
  419e91:	add    al,ch
  419e93:	inc    ebp
  419e94:	test   DWORD PTR [ebx-0x3eba0708],ecx
  419e9a:	xor    eax,0x781084d
  419e9f:	push   ebp
  419ea0:	pushf  
  419ea1:	push   ecx
  419ea2:	xor    al,BYTE PTR [ecx+0x32f89c89]
  419ea8:	inc    ebp
  419ea9:	cmp    edi,DWORD PTR [ecx]
  419eab:	jbe    0x419e49
  419ead:	mov    eax,edi
  419eaf:	or     ah,dh
  419eb1:	inc    ebp
  419eb2:	test   DWORD PTR [ebx+0x4d450cf8],ecx
  419eb8:	xor    ecx,DWORD PTR [ebx-0x74747664]
  419ebe:	in     al,dx
  419ebf:	hlt    
  419ec0:	push   ebp
  419ec1:	push   ebp
  419ec2:	push   ecx
  419ec3:	push   ecx
  419ec4:	mov    ecx,DWORD PTR [ebx-0x7b7b0708]
  419eca:	pushf  
  419ecb:	pushf  
  419ecc:	xor    dh,BYTE PTR [edx]
  419ece:	mov    ecx,DWORD PTR [ecx+0x5bf1f8e8]
  419ed4:	or     BYTE PTR [ebp+0x7],al
  419ed7:	mov    eax,ecx
  419ed9:	clc    
  419eda:	jb     0x419e9d
  419edc:	add    BYTE PTR [ebp+0x55],cl
  419edf:	or     DWORD PTR [edi],0xc251d155
  419ee5:	add    DWORD PTR [ebx+0x32009c],0x8b76453b
  419eef:	mov    edi,eax
  419ef1:	or     cl,al
  419ef3:	inc    ebp
  419ef4:	dec    ebp
  419ef5:	mov    eax,DWORD PTR [ecx+0x514d550c]
  419efb:	or     WORD PTR [ecx],0x899c
  419f00:	xor    cl,BYTE PTR [ebx+0x5576fc3b]
  419f06:	mov    edx,DWORD PTR [ecx+0x8]
  419f09:	mov    eax,DWORD PTR [ebp-0x8]
  419f0c:	mov    eax,DWORD PTR [esp+ecx*1-0x74cdb264]
  419f13:	mov    DWORD PTR [ecx+0x4178bf8],ecx
  419f19:	inc    ebp
  419f1a:	dec    eax
  419f1b:	add    ecx,DWORD PTR [ebx+0x554df0f8]
  419f21:	add    edx,DWORD PTR [ecx-0x8]
  419f24:	mov    ecx,DWORD PTR [ecx]
  419f26:	clc    
  419f27:	or     BYTE PTR [ebp+eax*2+0x4532409c],al
  419f2e:	mov    ecx,ebp
  419f30:	clc    
  419f31:	(bad)  
  419f32:	popf   
  419f33:	inc    DWORD PTR [eax]
  419f35:	ret    0x8b
  419f38:	adc    BYTE PTR [ebx-0x38d4aeb3],cl
  419f3e:	mov    edi,esp
  419f40:	hlt    
  419f41:	test   ecx,esi
  419f43:	clc    
  419f44:	or     BYTE PTR [ebp+0x7],al
  419f47:	xor    cl,al
  419f49:	pushf  
  419f4a:	jb     0x419f7f
  419f4c:	add    BYTE PTR [eax-0x3f],al
  419f4f:	inc    eax
  419f50:	daa    
  419f51:	inc    ebp
  419f52:	inc    ebp
  419f53:	xor    eax,0x7f80803
  419f58:	dec    ebp
  419f59:	pushf  
  419f5a:	add    esi,DWORD PTR [edx]
  419f5c:	clc    
  419f5d:	cmp    DWORD PTR [ecx],ecx
  419f5f:	or     al,0x8
  419f61:	add    al,BYTE PTR [ebp+0x2c]
  419f64:	xor    eax,0x7350845
  419f69:	or     BYTE PTR [ebp+0x7],cl
  419f6c:	lea    ebx,[ecx+eax*1+0x8b7232]
  419f73:	or     al,0x45
  419f75:	enter  0x4deb,0x8b
  419f79:	mov    edx,DWORD PTR [eax]
  419f7b:	cld    
  419f7c:	dec    ebp
  419f7d:	push   ebp
  419f7e:	sub    edx,DWORD PTR [ecx-0x75]
  419f81:	add    eax,0xf172fc
  419f86:	or     BYTE PTR [ebp+0x7],cl
  419f89:	add    eax,ecx
  419f8b:	or     al,0x72
  419f8d:	add    DWORD PTR [eax],eax
  419f8f:	mov    ebx,0x29c2c1
  419f94:	inc    ebp
  419f95:	mov    eax,DWORD PTR [ebx]
  419f97:	cmp    eax,0x3004d1c
  419f9d:	xbegin 0x66c72b97
  419fa3:	clc    
  419fa4:	or     BYTE PTR [ebp+0x45],al
  419fa7:	xor    BYTE PTR ds:0x78b089c,dh
  419fad:	adc    BYTE PTR [ebp+0x45],cl
  419fb0:	lea    eax,[ebp+0x33727501]
  419fb6:	add    cl,ch
  419fb8:	inc    ebp
  419fb9:	add    bl,ch
  419fbb:	add    BYTE PTR [ebx+0x45850845],cl
  419fc1:	je     0x419f4e
  419fc3:	push   ebx
  419fc4:	or     al,0x85
  419fc6:	dec    ebp
  419fc7:	std    
  419fc8:	mov    bh,bh
  419fca:	mov    BYTE PTR [ebp-0x75],al
  419fcd:	mov    edi,eax
  419fcf:	or     al,0x89
  419fd1:	inc    ebp
  419fd2:	clc    
  419fd3:	mov    esp,esp
  419fd5:	hlt    
  419fd6:	call   DWORD PTR [edi-0x37]
  419fd9:	push   ebp
  419fda:	or     al,0x51
  419fdc:	push   ebp
  419fdd:	xor    ebp,esp
  419fdf:	mov    esi,0x457251
  419fe4:	xor    esi,eax
  419fe6:	pushf  
  419fe7:	inc    ebp
  419fe8:	(bad)  
  419fe9:	mov    edi,eax
  419feb:	or     al,0x85
  419fed:	add    al,bh
  419fef:	inc    eax
  419ff1:	mov    esi,DWORD PTR [ebx+ecx*4-0x75]
  419ff5:	or     ah,bh
  419ff7:	inc    eax
  419ff8:	push   ebp
  419ff9:	jmp    0x41a04c
  419ffb:	mov    eax,DWORD PTR ds:0xe8720c
  41a001:	mov    DWORD PTR [ebp-0x8],eax
  41a004:	jne    0x41a04b
  41a006:	jmp    0x419f93
  41a008:	mov    ebp,DWORD PTR [eax]
  41a00a:	clc    
  41a00b:	retf   0xff55
  41a00e:	push   ecx
  41a00f:	mov    DWORD PTR ds:0x757210,eax
  41a015:	mov    ecx,DWORD PTR [ebp-0x4]
  41a018:	sub    esp,DWORD PTR [ebx-0x77]
  41a01b:	dec    DWORD PTR [eax*4-0x74ca8abb]
  41a022:	or     ah,bh
  41a024:	pop    es
  41a025:	ds pushf 
  41a027:	push   DWORD PTR [edx]
  41a029:	mov    ecx,DWORD PTR [ebx+0x4dc708f0]
  41a02f:	(bad)  
  41a030:	mov    bh,bh
  41a032:	jmp    0x41a020
  41a034:	leave  
  41a035:	jne    0x41a03f
  41a037:	call   0x2e9991
  41a03c:	in     al,dx
  41a03d:	dec    ebp
  41a03e:	add    dh,BYTE PTR [ebx]
  41a040:	add    BYTE PTR [ebx],al
  41a042:	inc    ebp
  41a043:	cmp    esi,DWORD PTR [ecx]
  41a045:	je     0x419fe3
  41a047:	mov    eax,edi
  41a049:	or     al,0xf0
  41a04b:	add    BYTE PTR [ebp+0x458bf845],al
  41a051:	or     BYTE PTR [ebx-0x3f7cf7b3],cl
  41a057:	adc    al,0x7
  41a059:	enter  0x9fc0,0xa5
  41a05d:	rol    BYTE PTR [eax],0x5e
  41a060:	mov    ecx,ecx
  41a062:	or     al,0xc
  41a064:	ror    BYTE PTR [ebx+0x408df8f2],0xe4
  41a06b:	jmp    0x41a06c
  41a06d:	push   ebp
  41a06e:	mov    esp,ebp
  41a070:	cld    
  41a071:	inc    ebp
  41a072:	inc    ebp
  41a073:	or     DWORD PTR [ecx+0x457dec10],0x0
  41a07a:	push   esi
  41a07b:	push   esi
  41a07c:	mov    edi,0x7af080f
  41a081:	add    bh,al
  41a083:	test   DWORD PTR [edi+ecx*1+0x3a732],ebx
  41a08a:	mov    DWORD PTR [edi],ecx
  41a08c:	adc    BYTE PTR [eax+0x45],al
  41a08f:	mov    ebp,eax
  41a091:	mov    ebp,edi
  41a093:	lock call edx
  41a096:	fcom   DWORD PTR [ebp+0x45]
  41a099:	mov    eax,0x148a8b
  41a09e:	push   ecx
  41a09f:	enter  0xc145,0x83
  41a0a3:	cmp    ecx,DWORD PTR [eax]
  41a0a5:	add    BYTE PTR [ebp+0x4d],al
  41a0a8:	mov    eax,DWORD PTR [ebx+0x3340fcf8]
  41a0ae:	call   0xffa19c1d
  41a0b3:	cmp    eax,DWORD PTR [ebp-0xc]
  41a0b6:	jmp    DWORD PTR [eax+edx*1-0x4e]
  41a0ba:	push   ebp
  41a0bb:	(bad)  
  41a0bc:	call   0x329ec0
  41a0c1:	mov    bh,0xdb
  41a0c3:	cld    
  41a0c4:	or     BYTE PTR [ebp+0x45],bl
  41a0c7:	(bad)  
  41a0c8:	call   0xff7b9d58
  41a0cd:	add    al,BYTE PTR [ebp+0x37]
  41a0d0:	xor    esi,DWORD PTR [edi+0x4e50bf03]
  41a0d6:	jne    0x41a0d8
  41a0d8:	(bad)  
  41a0d9:	cmp    edi,esp
  41a0db:	jne    0x41a10e
  41a0dd:	mov    edi,edi
  41a0df:	or     BYTE PTR [ebx-0x307f0b49],cl
  41a0e5:	pop    ds
  41a0e6:	into   
  41a0e7:	je     0x41a0aa
  41a0e9:	mov    ebx,DWORD PTR [esi]
  41a0eb:	or     BYTE PTR [ebp-0x49],al
  41a0ee:	mov    esp,DWORD PTR [esi-0x77]
  41a0f1:	mov    esi,0x4451f0c
  41a0f6:	mov    eax,DWORD PTR [eax]
  41a0f8:	or     al,0x66
  41a0fa:	sar    bl,0x3b
  41a0fd:	xor    esi,DWORD PTR [ebp+0x66]
  41a100:	xor    ecx,edi
  41a102:	pop    edi
  41a103:	adc    bl,BYTE PTR [ebx+0x70]
  41a106:	ret    0xff
  41a109:	cld    
  41a10a:	inc    ebp
  41a10b:	mov    ecx,DWORD PTR [ebx-0xec6e70c]
  41a111:	cld    
  41a112:	mov    ebp,DWORD PTR [ebx+ecx*4-0x13baf3fa]
  41a119:	push   0xffffff83
  41a11b:	pop    edi
  41a11c:	or     BYTE PTR [ebp+0x53],dh
  41a11f:	xorps  xmm1,xmm2
  41a122:	test   BYTE PTR [eax+eax*1],bh
  41a125:	add    BYTE PTR [eax],al
  41a127:	adc    eax,eax
  41a129:	add    DWORD PTR [eax+esi*2-0xff7b00],0xffffffb7
  41a131:	jmp    DWORD PTR [eax]
  41a133:	ror    al,0x5e
  41a136:	inc    ebp
  41a137:	leave  
  41a138:	xor    ecx,DWORD PTR [eax]
  41a13a:	and    DWORD PTR [ebx-0x3ec10708],ecx
  41a140:	add    ah,al
  41a142:	xor    edi,edi
  41a144:	xor    DWORD PTR [ebx],0x66003304
  41a14a:	mov    DWORD PTR [ebp-0xc],ecx
  41a14d:	pcmpgtw mm0,mm0
  41a150:	add    dl,ah
  41a152:	leave  
  41a153:	mov    edi,DWORD PTR [esi-0x7d]
  41a156:	push   ax
  41a158:	dec    ebp
  41a159:	mov    esi,DWORD PTR [ebx-0x75]
  41a15c:	lea    ebp,[eax-0x7c00ff04]
  41a162:	xor    eax,DWORD PTR [eax]
  41a164:	sysret 
  41a166:	dec    ebp
  41a167:	ror    BYTE PTR [ebx+0xc000c30],0x6a
  41a16e:	push   WORD PTR [ecx+0x8]
  41a172:	jne    0x41a135
  41a174:	ud0    ecx,DWORD PTR [ecx]
  41a177:	mov    eax,edx
  41a179:	lods   al,BYTE PTR ds:[esi]
  41a17a:	add    BYTE PTR [eax],al
  41a17c:	data16 (bad) 
  41a17e:	iret   
  41a17f:	and    cl,BYTE PTR [eax*2+0x440f8d5d]
  41a186:	cli    
  41a187:	inc    ebp
  41a188:	cmp    al,0x8d
  41a18a:	add    BYTE PTR [esi+0x2d],ah
  41a18d:	inc    ebp
  41a18e:	pop    ebp
  41a18f:	lea    ecx,[edi]
  41a191:	mov    dl,bh
  41a193:	add    BYTE PTR [edi],cl
  41a195:	mov    DWORD PTR [eax+eax*8],edi
  41a198:	mov    ebx,0x3b87
  41a19d:	add    BYTE PTR [ebx],ch
  41a19f:	inc    ebp
  41a1a0:	data16 (bad) 
  41a1a2:	clc    
  41a1a3:	int3   
  41a1a4:	cmp    eax,DWORD PTR [eax]
  41a1a6:	je     0x41a131
  41a1a8:	push   0xffffffc8
  41a1aa:	pop    edi
  41a1ab:	xchg   DWORD PTR [ebp+0x0],eax
  41a1ae:	data16 add BYTE PTR [ebp+0x45],cl
  41a1b2:	lea    cx,[ebp+0x10]
  41a1b6:	jb     0x41a1b8
  41a1b8:	jmp    0x41a143
  41a1ba:	call   eax
  41a1bc:	clc    
  41a1bd:	xchg   DWORD PTR [edi+0x1],edi
  41a1c0:	mov    eax,DWORD PTR [eax]
  41a1c2:	or     BYTE PTR [ebp-0x49],al
  41a1c5:	lea    eax,[eax+0x74003154]
  41a1cb:	push   edi
  41a1cc:	inc    edx
  41a1cd:	jge    0x41a1ce
  41a1cf:	mov    DWORD PTR [edi],ecx
  41a1d1:	fdiv   DWORD PTR [edi-0x6]
  41a1d4:	inc    DWORD PTR [eax]
  41a1d6:	xor    edx,DWORD PTR [eax+0x5f]
  41a1d9:	xchg   DWORD PTR [ebx+0x1],ebx
  41a1dc:	ret    0x0
  41a1df:	xor    BYTE PTR [ebp-0x51],cl
  41a1e2:	cmp    edi,0xf0ff89fc
  41a1e8:	data16 ror al,0x84
  41a1ec:	rol    BYTE PTR [eax],0x3b
  41a1ef:	add    al,dh
  41a1f1:	dec    eax
  41a1f2:	xchg   esp,eax
  41a1f3:	push   ebx
  41a1f4:	jmp    0x41a181
  41a1f6:	push   ebp
  41a1f7:	add    esp,ebp
  41a1f9:	add    ebp,esp
  41a1fb:	mov    edx,DWORD PTR [edi+0x24]
  41a1fe:	clc    
  41a1ff:	dec    esi
  41a200:	xchg   DWORD PTR [ebx+0x5e002001],ecx
  41a206:	cmp    BYTE PTR [ebx],al
  41a208:	jne    0x41a193
  41a20a:	xor    esp,eax
  41a20c:	jmp    0x44a38f
  41a211:	add    ebp,DWORD PTR [ecx+ecx*4]
  41a214:	jne    0x41a20a
  41a216:	call   0xffcb9f70
  41a21b:	clc    
  41a21c:	xchg   edi,eax
  41a21d:	sti    
  41a21e:	add    DWORD PTR [ebx],eax
  41a220:	add    BYTE PTR [ebp+0x47],bl
  41a223:	xor    ecx,DWORD PTR [ecx+0x47e8b489]
  41a229:	pop    ebp
  41a22a:	mov    DWORD PTR [esi-0x48],esi
  41a22d:	jmp    0x41a276
  41a22f:	mov    ecx,DWORD PTR [ecx-0x7882431c]
  41a235:	(bad)  
  41a237:	cmp    al,0x0
  41a239:	cmp    eax,DWORD PTR [ebp+0x18]
  41a23c:	lea    ebx,[ebp-0x56]
  41a23f:	jle    0x41a241
  41a241:	jae    0x41a1cc
  41a243:	mov    eax,esp
  41a245:	call   0xb900:0x8b005587
  41a24c:	inc    ebp
  41a24d:	push   ebp
  41a24e:	lea    ecx,[ebp-0x27ff4f12]
  41a254:	mov    eax,edi
  41a256:	int3   
  41a257:	push   ebp
  41a258:	xchg   edi,eax
  41a25a:	add    esp,ebp
  41a25c:	add    BYTE PTR [eax],al
  41a25e:	inc    ebp
  41a25f:	add    BYTE PTR [ebp+0x8b3255],cl
  41a265:	cld    
  41a266:	mov    DWORD PTR [edx],edi
  41a268:	aam    0x75
  41a26a:	xchg   DWORD PTR [ebx+0x3400dc01],ecx
  41a270:	mov    DWORD PTR [ebx-0x50],edx
  41a273:	test   BYTE PTR [ebp-0x1],0xe8
  41a277:	mov    eax,DWORD PTR [eax]
  41a279:	hlt    
  41a27a:	add    al,al
  41a27c:	mov    eax,DWORD PTR ds:0x890045a8
  41a282:	dec    DWORD PTR [ebx+0x45fdf0e8]
  41a288:	inc    DWORD PTR [eax*2+0xf75854d]
  41a28f:	mov    ebp,DWORD PTR [ebp-0x7476ff18]
  41a295:	call   0x7297ffd6
  41a29a:	je     0x41a2fa
  41a29c:	js     0x41a2fd
  41a29e:	lock ret 0x7e
  41a2a2:	mov    ecx,DWORD PTR [ebx+0x8568b1c]
  41a2a8:	mov    edi,edi
  41a2aa:	sbb    al,bl
  41a2ac:	clc    
  41a2ad:	add    BYTE PTR [ebp-0x73],bh
  41a2b0:	mov    ebx,DWORD PTR [eax-0x7437ffec]
  41a2b6:	ror    BYTE PTR [eax],1
  41a2b8:	dec    ebp
  41a2b9:	xchg   ebp,eax
  41a2ba:	mov    edi,edi
  41a2bc:	in     al,0x8b
  41a2be:	jge    0x41a249
  41a2c0:	cmp    ecx,DWORD PTR [ebx+0x39893377]
  41a2c6:	clc    
  41a2c7:	pop    esi
  41a2c8:	fist   DWORD PTR [ebp+0x5d398b5d]
  41a2ce:	clc    
  41a2cf:	add    al,0x6e
  41a2d1:	mov    eax,DWORD PTR [ebx]
  41a2d3:	mov    BYTE PTR [ebp+0x0],dl
  41a2d6:	mov    edx,DWORD PTR [ebx-0x20]
  41a2d9:	adc    esi,DWORD PTR [edi+0x5e005f3e]
  41a2df:	add    eax,0x3b3b73
  41a2e4:	adc    al,0x89
  41a2e6:	pop    eax
  41a2e7:	sbb    DWORD PTR [edx+eax*1],0xffffff8b
  41a2eb:	ret    0xf08
  41a2ee:	cmp    al,0x2
  41a2f0:	mov    edx,eax
  41a2f2:	cld    
  41a2f3:	add    BYTE PTR [ebp+0x66],dl
  41a2f6:	add    eax,ebx
  41a2f8:	add    esp,eax
  41a2fa:	sub    eax,eax
  41a2fc:	or     BYTE PTR [ecx-0x77f474bb],cl
  41a302:	add    BYTE PTR [eax],al
  41a304:	mov    DWORD PTR [ebx-0x24],ebx
  41a307:	push   edi
  41a308:	push   ebp
  41a309:	clc    
  41a30a:	add    DWORD PTR [esi+0x1b0100],0x45
  41a311:	out    0xff,eax
  41a313:	add    edx,DWORD PTR [eax]
  41a315:	jmp    0x41a2ff
  41a317:	cmp    ch,0x47
  41a31a:	(bad)  
  41a31b:	jmp    0x40c72b6d
  41a320:	je     0x41a2ac
  41a322:	mov    eax,DWORD PTR [eax-0x10c78f04]
  41a328:	inc    ebp
  41a329:	add    BYTE PTR [ebx-0x770375],al
  41a32f:	add    ah,ch
  41a331:	add    edx,esp
  41a333:	pop    edi
  41a334:	pop    ebp
  41a335:	push   ebp
  41a336:	inc    ebx
  41a337:	in     al,dx
  41a338:	pop    ebp
  41a339:	in     al,dx
  41a33a:	cmp    edx,DWORD PTR [edi-0x8]
  41a33d:	xor    DWORD PTR [esp+ebx*4-0x173676a5],edx
  41a344:	add    al,0x47
  41a346:	push   ebp
  41a347:	mov    esp,ebp
  41a349:	in     al,0x45
  41a34b:	dec    ebp
  41a34c:	push   esi
  41a34d:	test   DWORD PTR [eax+0xfb010f],esi
  41a353:	add    BYTE PTR [eax+0xc018b],dh
  41a359:	leave  
  41a35a:	inc    ebp
  41a35b:	test   al,ch
  41a35d:	add    dh,bh
  41a35f:	add    bh,bh
  41a361:	dec    ebp
  41a362:	push   cs
  41a363:	mov    DWORD PTR [ecx],eax
  41a365:	hlt    
  41a366:	push   es
  41a367:	dec    ebp
  41a368:	leave  
  41a369:	mov    DWORD PTR [eax],ecx
  41a36b:	clc    
  41a36c:	cmovge eax,ecx
  41a36f:	mov    ecx,0x85c2f0
  41a375:	clc    
  41a376:	pop    DWORD PTR [ebp+0x1]
  41a379:	push   ebx
  41a37a:	add    BYTE PTR [ebp-0x15],bh
  41a37d:	push   esi
  41a37e:	xor    eax,0x898a45
  41a383:	cld    
  41a384:	add    al,0x45
  41a386:	add    BYTE PTR [ebx],dh
  41a388:	pushfw 
  41a38a:	add    DWORD PTR [esi+0x78308c1],edi
  41a390:	add    ah,BYTE PTR [edi+esi*4-0x33]
  41a394:	mov    ebx,0xc4e8b
  41a399:	(bad)  
  41a39a:	cmp    ecx,ebx
  41a39c:	jne    0x41a366
  41a39e:	xor    ecx,DWORD PTR [ebp+0x66]
  41a3a1:	jmp    0xc8a3a7
  41a3a6:	add    DWORD PTR [ebp+0x0],eax
  41a3a9:	mov    eax,ebx
  41a3ab:	or     al,0x8b
  41a3ad:	(bad)  
  41a3ae:	mov    ecx,esi
  41a3b0:	mov    BYTE PTR [eax+eax*1+0x664c138],cl
  41a3b7:	mov    eax,edi
  41a3b9:	or     BYTE PTR [edx],cl
  41a3bb:	shl    cl,cl
  41a3bd:	icebp  
  41a3be:	add    BYTE PTR [ebp+0x37],0x8b
  41a3c2:	or     BYTE PTR [edx+eax*2],cl
  41a3c5:	(bad)  
  41a3c6:	or     cl,dh
  41a3c8:	stc    
  41a3c9:	shl    DWORD PTR [ebp-0x30],0xc6
  41a3cd:	xor    al,0x0
  41a3cf:	inc    ebp
  41a3d0:	xchg   BYTE PTR [ebx],al
  41a3d2:	add    esp,edi
  41a3d4:	add    BYTE PTR [ebp-0x39],cl
  41a3d7:	mov    al,bl
  41a3d9:	test   DWORD PTR [ebx+0x1c348375],ecx
  41a3df:	sub    al,0xbf
  41a3e1:	jmp    0x41a368
  41a3e3:	mov    edi,eax
  41a3e5:	lock jge 0x41a3d9
  41a3e8:	lea    esi,[edx-0x74bad501]
  41a3ee:	mov    ebp,esp
  41a3f0:	or     cl,dh
  41a3f2:	leave  
  41a3f3:	add    al,BYTE PTR [eax+eax*4-0x37ff9c00]
  41a3fa:	dec    ebp
  41a3fb:	dec    ebp
  41a3fc:	test   DWORD PTR [ebx],eax
  41a3fe:	paddb  mm6,mm0
  41a401:	add    DWORD PTR [eax],eax
  41a403:	dec    ebp
  41a404:	mov    ecx,DWORD PTR [ebx-0x63b217f0]
  41a40a:	mov    esi,DWORD PTR [edx]
  41a40c:	or     al,0x2b
  41a40e:	dec    ebp
  41a40f:	xor    ecx,DWORD PTR [ebx+0x4575083b]
  41a415:	mov    esp,esi
  41a417:	adc    BYTE PTR [ebp+edx*2+0x33ec3389],bl
  41a41e:	mov    DWORD PTR [ebx],ebp
  41a420:	call   0xc752d50
  41a425:	mov    DWORD PTR [ebp+0x10],ecx
  41a428:	(bad)  
  41a429:	push   0x8b85ff10
  41a42e:	clc    
  41a42f:	or     al,0x55
  41a431:	(bad)  
  41a432:	push   ecx
  41a433:	retf   
  41a434:	mov    ebx,0xff4d8dc8
  41a439:	mov    DWORD PTR [ebp+0x8],eax
  41a43c:	xor    eax,DWORD PTR [ebp-0x75]
  41a43f:	cmp    ebp,DWORD PTR [ebx]
  41a441:	lsl    ebx,WORD PTR [edi-0x8]
  41a445:	call   DWORD PTR [ebx-0x741bff75]
  41a44b:	(bad)  
  41a44c:	or     al,0x5b
  41a44e:	dec    ebp
  41a44f:	or     BYTE PTR [ebx],dh
  41a451:	inc    ebp
  41a452:	xor    esi,DWORD PTR ds:0x708088d
  41a458:	in     eax,0x9c
  41a45a:	add    BYTE PTR [edx],dh
  41a45c:	inc    ebp
  41a45d:	pop    edi
  41a45e:	xor    eax,edx
  41a460:	test   DWORD PTR [eax],0x83108b8b
  41a466:	dec    ebp
  41a467:	adc    al,0x33
  41a469:	inc    ebp
  41a46a:	xor    esi,DWORD PTR [ecx]
  41a46c:	sub    ebx,DWORD PTR [ebx+edi*1-0x74038a39]
  41a473:	test   DWORD PTR [eax],ecx
  41a475:	clc    
  41a476:	inc    ebp
  41a477:	add    ecx,DWORD PTR [ebx+0xc7f445]
  41a47d:	hlt    
  41a47e:	leave  
  41a47f:	test   DWORD PTR [esi],eax
  41a481:	clc    
  41a482:	inc    edi
  41a483:	push   edi
  41a484:	aaa    
  41a485:	inc    ebp
  41a486:	pop    ss
  41a487:	ror    DWORD PTR [ebp-0x29],1
  41a48a:	or     BYTE PTR [ebx+0x4d64fc55],0xd1
  41a491:	mov    eax,0x780084d
  41a496:	push   ebp
  41a497:	clc    
  41a498:	ret    0xe99c
  41a49b:	xor    dl,dl
  41a49d:	xor    ecx,DWORD PTR [ebx+0x4d030803]
  41a4a3:	js     0x88830a2
  41a4a9:	dec    ebp
  41a4aa:	push   ebp
  41a4ab:	mov    edi,DWORD PTR [eax+0xc872fc]
  41a4b1:	lock enter 0xceca,0xf2
  41a4b6:	retf   0x18ce
  41a4b9:	jne    0x41a508
  41a4bb:	mov    ecx,DWORD PTR [ebx-0x31eaf304]
  41a4c1:	enter  0xf0d6,0xca
  41a4c5:	retf   0xf2c8
  41a4c8:	into   
  41a4c9:	out    dx,al
  41a4ca:	dec    ebp
  41a4cb:	dec    ebp
  41a4cc:	jmp    0xff45a404
  41a4d1:	xor    eax,DWORD PTR [ebp-0x15]
  41a4d4:	xor    esi,DWORD PTR [ebx]
  41a4d6:	mov    esi,DWORD PTR [ebx]
  41a4d8:	sub    eax,DWORD PTR [ebx]
  41a4da:	add    eax,DWORD PTR [ebx]
  41a4dc:	or     bl,dl
  41a4de:	dec    ebp
  41a4df:	mov    DWORD PTR [ebx-0x38b2ef08],ecx
  41a4e5:	xor    eax,DWORD PTR [ebp-0xf00073]
  41a4eb:	jb     0x41a532
  41a4ed:	add    BYTE PTR [ebx],dh
  41a4ef:	dec    ebp
  41a4f0:	pop    esi
  41a4f1:	mov    ebp,ebx
  41a4f3:	cld    
  41a4f4:	mov    esi,eax
  41a4f6:	call   0x520ffac3
  41a4fb:	stc    
  41a4fc:	add    eax,0x4572aa
  41a501:	pop    edi
  41a502:	leave  
  41a503:	add    ecx,DWORD PTR [eax*2-0x3c13a1ab]
  41a50a:	in     al,dx
  41a50b:	mov    eax,edi
  41a50d:	xor    eax,0xf8008520
  41a513:	mov    DWORD PTR [ebp-0x14],0xf89c8530
  41a51a:	mov    eax,DWORD PTR [ebp-0x77]
  41a51d:	xor    al,bh
  41a51f:	pushf  
  41a520:	inc    ebp
  41a521:	(bad)  
  41a522:	cmp    eax,ebp
  41a524:	pushf  
  41a525:	xchg   BYTE PTR [esi-0x8],dl
  41a528:	mov    edi,0x8518e4ec
  41a52e:	jmp    0xf056:0x8b457df8
  41a535:	push   ebp
  41a536:	push   ebp
  41a537:	push   ecx
  41a538:	push   ecx
  41a539:	push   edi
  41a53a:	xor    eax,esi
  41a53c:	mov    edx,0x32729c
  41a541:	add    ecx,eax
  41a543:	mov    edx,edi
  41a545:	clc    
  41a546:	retf   0xaf45
  41a549:	cmp    ebx,ebp
  41a54b:	pushf  
  41a54c:	mov    eax,edi
  41a54e:	clc    
  41a54f:	cld    
  41a550:	jne    0x41a56a
  41a552:	xor    ebp,edx
  41a554:	xor    eax,DWORD PTR [ebp+0x3]
  41a557:	or     BYTE PTR [ebx],al
  41a559:	add    BYTE PTR [ebp-0x7747475],al
  41a55f:	hlt    
  41a560:	dec    ebp
  41a561:	dec    ebp
  41a562:	je     0x41a597
  41a564:	xor    esi,DWORD PTR [ebx]
  41a566:	xor    eax,DWORD PTR [ebx]
  41a568:	add    eax,DWORD PTR [ebx]
  41a56a:	add    ecx,DWORD PTR [edi]
  41a56c:	rol    ecx,cl
  41a56e:	mov    esi,DWORD PTR [ecx]
  41a570:	in     al,dx
  41a571:	inc    ebp
  41a572:	enter  0xca2b,0x33
  41a576:	icebp  
  41a577:	mov    DWORD PTR [edx],ecx
  41a579:	clc    
  41a57a:	lock pop ebp
  41a57c:	enter  0xf2e8,0xfe
  41a580:	retf   0xeeff
  41a583:	inc    ebp
  41a584:	jne    0x41a511
  41a586:	mov    edi,eax
  41a588:	cld    
  41a589:	dec    ebp
  41a58a:	enter  0xbc89,0x8d
  41a58e:	pushf  
  41a58f:	sti    
  41a590:	xor    bh,bh
  41a592:	mov    eax,DWORD PTR [ebp-0xc]
  41a595:	mov    esi,DWORD PTR [ebp-0x4]
  41a598:	xor    eax,esi
  41a59a:	xor    eax,DWORD PTR [ebx+ebp*1+0x76323b9c]
  41a5a1:	mov    DWORD PTR [ebx-0x76ba0704],ecx
  41a5a7:	mov    ecx,DWORD PTR [ebx-0x3631070c]
  41a5ad:	(bad)  
  41a5ae:	push   ebp
  41a5af:	shr    esp,0x4d
  41a5b2:	in     al,dx
  41a5b3:	cmp    eax,DWORD PTR [esi+esi*2]
  41a5b6:	add    BYTE PTR [ebx-0x39ce1bbb],cl
  41a5bc:	pushf  
  41a5bd:	mov    edi,0x85c7f445
  41a5c3:	call   0xf8872cc0
  41a5c8:	xor    ebx,ebx
  41a5ca:	pushf  
  41a5cb:	popa   
  41a5cc:	push   ebx
  41a5cd:	dec    ebp
  41a5ce:	inc    ebp
  41a5cf:	mov    esi,DWORD PTR [esi]
  41a5d1:	clc    
  41a5d2:	pushf  
  41a5d3:	into   
  41a5d4:	mov    ecx,edi
  41a5d6:	in     al,dx
  41a5d7:	call   0x8b49eb9a
  41a5dc:	pop    es
  41a5dd:	or     BYTE PTR [ebx],dh
  41a5df:	or     BYTE PTR [edi+0x8a724d],bh
  41a5e5:	or     eax,edi
  41a5e7:	push   ebp
  41a5e8:	inc    ebp
  41a5e9:	cmpxchg8b (bad)
  41a5ea:	(bad)  
  41a5eb:	leave  
  41a5ec:	loopne 0x41a5b8
  41a5ee:	test   DWORD PTR [ebp-0x8],ecx
  41a5f1:	mov    eax,DWORD PTR [ebp-0x18]
  41a5f4:	rcl    DWORD PTR [ebp-0x29],1
  41a5f7:	xor    eax,edi
  41a5f9:	add    esi,eax
  41a5fb:	and    eax,DWORD PTR [eax]
  41a5fd:	mov    eax,DWORD PTR [eax]
  41a5ff:	(bad)  
  41a600:	leave  
  41a601:	sti    
  41a602:	inc    ebp
  41a603:	dec    DWORD PTR [ebx-0x39cc13ab]
  41a609:	mov    esi,ecx
  41a60b:	clc    
  41a60c:	(bad)  
  41a60d:	dec    ebp
  41a60e:	iret   
  41a60f:	xor    ebp,DWORD PTR [edi-0x74f71473]
  41a615:	jb     0x41a613
  41a617:	add    bh,al
  41a619:	inc    ebp
  41a61a:	(bad)  
  41a61b:	mov    eax,DWORD PTR [ebp-0xc]
  41a61e:	(bad)  
  41a61f:	xabort 0x64
  41a622:	loopne 0x41a5f1
  41a624:	jmp    FWORD PTR [ebx]
  41a626:	mov    DWORD PTR [ebx],eax
  41a628:	clc    
  41a629:	lock inc ebp
  41a62b:	dec    ebp
  41a62c:	mov    ecx,DWORD PTR [ebx+0x4d84ecfc]
  41a632:	loopne 0x41a667
  41a634:	inc    DWORD PTR [ebx]
  41a636:	mov    edi,DWORD PTR [ebx]
  41a638:	hlt    
  41a639:	jne    0x41a688
  41a63b:	mov    esi,DWORD PTR [ebx]
  41a63d:	in     al,0x8d
  41a63f:	dec    ebp
  41a640:	or     BYTE PTR [ebx],dh
  41a642:	jb     0x41a647
  41a644:	add    BYTE PTR [edi+0x45],bl
  41a647:	xor    ecx,DWORD PTR [ebx+0x4dc2e85b]
  41a64d:	add    BYTE PTR [ebx],dh
  41a64f:	mov    esi,DWORD PTR [ebx]
  41a651:	sub    DWORD PTR [ebx],0x6c
  41a654:	mov    eax,DWORD PTR [ebp-0x4]
  41a657:	xor    eax,ecx
  41a659:	pushf  
  41a65a:	mov    ecx,0x338545ba
  41a65f:	clc    
  41a660:	add    edx,DWORD PTR [ebp-0x77]
  41a663:	mov    edi,eax
  41a665:	adc    al,0x45
  41a667:	inc    ebp
  41a668:	mov    ebx,DWORD PTR ss:[esp+edx*1+0x1eb808b]
  41a670:	mov    eax,DWORD PTR [eax]
  41a672:	loopne 0x41a6c1
  41a674:	inc    ebp
  41a675:	mov    esi,DWORD PTR [ebx]
  41a677:	mov    eax,DWORD PTR [ebx]
  41a679:	nop
  41a67a:	rol    DWORD PTR [eax],cl
  41a67c:	mov    DWORD PTR [ebx+0x3c4503fc],ecx
  41a682:	mov    cl,BYTE PTR [ecx+0x450bf888]
  41a688:	dec    ebp
  41a689:	push   esi
  41a68a:	mov    edi,DWORD PTR [edi+0x7b608f8]
  41a690:	xor    eax,edi
  41a692:	mov    DWORD PTR [eax+ecx*1-0x74fcb2ce],ebx
  41a699:	mov    DWORD PTR [eax],ecx
  41a69b:	in     al,dx
  41a69c:	into   
  41a69d:	inc    ebp
  41a69e:	iret   
  41a69f:	xor    ecx,edx
  41a6a1:	add    ecx,DWORD PTR [ecx+ecx*4+0x45fff4e0]
  41a6a8:	mov    ecx,DWORD PTR [ebx-0x1735af04]
  41a6ae:	dec    ebp
  41a6af:	mov    DWORD PTR [ebx-0x31ba0b2c],ecx
  41a6b5:	mov    eax,DWORD PTR [eax+edi*1+0x48324d9c]
  41a6bc:	mov    DWORD PTR [ecx+0x8],eax
  41a6bf:	mov    eax,DWORD PTR [ebp-0x8]
  41a6c2:	xor    ebx,DWORD PTR [eax]
  41a6c4:	mov    ecx,0xff8b8d40
  41a6c9:	clc    
  41a6ca:	enter  0x4d49,0x48
  41a6ce:	mov    eax,edx
  41a6d0:	lock enter 0x4545,0x8b
  41a6d5:	mov    esi,eax
  41a6d7:	cmp    dh,al
  41a6d9:	rol    edi,0x3
  41a6dc:	enter  0x9140,0x89
  41a6e0:	inc    ebp
  41a6e1:	adc    al,0x8b
  41a6e3:	inc    ebp
  41a6e4:	clc    
  41a6e5:	xor    eax,esi
  41a6e7:	add    eax,edi
  41a6e9:	mov    DWORD PTR [esi-0x24],ebx
  41a6ec:	rol    DWORD PTR [ebp-0x37],0x33
  41a6f0:	add    al,0x3
  41a6f2:	push   ebp
  41a6f3:	mov    esp,ebp
  41a6f5:	fsubr  st,st(4)
  41a6f7:	inc    ebp
  41a6f8:	(bad)  
  41a6f9:	mov    edi,esp
  41a6fb:	adc    BYTE PTR [ebp+0x30c3f8c7],al
  41a701:	add    DWORD PTR [ebp+edx*2-0x27173877],ebx
  41a708:	inc    ebp
  41a709:	test   DWORD PTR [ecx+0x454514f8],ecx
  41a70f:	xor    cl,BYTE PTR [ebx+0xc7909c]
  41a715:	fmul   DWORD PTR [ebx+0xf81485]
  41a71b:	test   DWORD PTR [ecx+0x8b0100],ecx
  41a721:	cld    
  41a722:	or     edi,eax
  41a724:	dec    eax
  41a725:	ret    
  41a726:	push   ebx
  41a727:	inc    ebp
  41a728:	dec    ebp
  41a729:	mov    ecx,DWORD PTR [ebx+0x5745fc14]
  41a72f:	mov    DWORD PTR [ebp-0x14],edx
  41a732:	push   ecx
  41a733:	jne    0x41a768
  41a735:	mov    edi,DWORD PTR [ebx+0x4d720c]
  41a73b:	call   0xff879903
  41a740:	mov    eax,DWORD PTR [ebp-0x4]
  41a743:	mov    edi,0x4585c3d8
  41a749:	clc    
  41a74a:	mov    eax,DWORD PTR [ebp-0x8]
  41a74d:	xor    eax,DWORD PTR [eax+0x3]
  41a750:	adc    DWORD PTR [eax+0xc],0x45
  41a754:	inc    ebp
  41a755:	push   eax
  41a756:	mov    ebx,ebp
  41a758:	clc    
  41a759:	inc    DWORD PTR [eax-0x75]
  41a75c:	mov    esi,eax
  41a75e:	clc    
  41a75f:	rol    BYTE PTR [ebp+0x4545544e],0x33
  41a766:	je     0x41a76b
  41a768:	mov    edx,DWORD PTR [eax+0x38]
  41a76b:	jne    0x41a7ba
  41a76d:	lea    ecx,[ebx-0x817ab44]
  41a773:	mul    BYTE PTR [ebx]
  41a775:	dec    DWORD PTR [ebx+0x4089f845]
  41a77b:	fadd   DWORD PTR [ebx]
  41a77d:	inc    ebp
  41a77e:	jmp    0x41a70b
  41a780:	mov    ecx,DWORD PTR [esp+edx*2]
  41a783:	rol    DWORD PTR [ebp+0x45],0x8b
  41a787:	mov    edi,esp
  41a789:	lock (bad) 
  41a78b:	dec    ebp
  41a78c:	ret    
  41a78d:	mov    eax,DWORD PTR [ebp+0x10]
  41a790:	mov    eax,DWORD PTR [ecx-0x4]
  41a793:	mov    eax,edi
  41a795:	fadd   st,st(3)
  41a797:	enter  0x1645,0x8b
  41a79b:	inc    ebp
  41a79c:	cld    
  41a79d:	mov    ecx,DWORD PTR [ebp+0xc]
  41a7a0:	xor    ecx,DWORD PTR [ebp+0x3]
  41a7a3:	add    ecx,DWORD PTR [ecx-0x27b276f8]
  41a7a9:	sub    eax,DWORD PTR [ebp-0x17]
  41a7ac:	xor    eax,DWORD PTR [edx]
  41a7ae:	pushf  
  41a7af:	add    bh,al
  41a7b1:	or     al,0xd8
  41a7b3:	jne    0x41a73a
  41a7b5:	(bad)  
  41a7b6:	clc    
  41a7b7:	mov    al,0x45
  41a7b9:	call   0xffde9dfb
  41a7be:	jmp    0xddaaf4
  41a7c3:	mov    DWORD PTR [ebp-0x30],eax
  41a7c6:	xor    eax,DWORD PTR [ebp+0x3]
  41a7c9:	xor    BYTE PTR [ecx+0x45c7f49c],cl
  41a7cf:	enter  0x8503,0xc
  41a7d3:	clc    
  41a7d4:	inc    ebp
  41a7d5:	inc    ebp
  41a7d6:	push   DWORD PTR [edx]
  41a7d8:	in     al,dx
  41a7d9:	pushf  
  41a7da:	jne    0x41a769
  41a7dc:	mov    edx,eax
  41a7de:	clc    
  41a7df:	dec    ebp
  41a7e0:	out    dx,eax
  41a7e1:	(bad)  
  41a7e2:	dec    esp
  41a7e4:	mov    DWORD PTR [ebp-0x10],ecx
  41a7e7:	lea    eax,[ebp-0x38]
  41a7ea:	cmp    DWORD PTR [ebp-0x64],ecx
  41a7ed:	lea    ecx,[ebx-0x38b2273c]
  41a7f3:	mov    eax,ebx
  41a7f5:	cld    
  41a7f6:	(bad)  
  41a7f7:	iret   
  41a7f8:	mov    esp,0xf74de8cb
  41a7fd:	jmp    0x86aa01
  41a802:	test   DWORD PTR [ebx],esi
  41a804:	je     0x41a7a2
  41a806:	mov    ecx,DWORD PTR [edi]
  41a808:	fdivr  st,st(6)
  41a80a:	mov    DWORD PTR [eax],0xe8ff8bc3
  41a810:	lock iret 
  41a812:	inc    ebp
  41a813:	lock push eax
  41a815:	retf   
  41a816:	imul   ecx,DWORD PTR [ebp-0x1],0xecd88b8b
  41a81d:	test   DWORD PTR [ebp-0x7c],0x32d89c8b
  41a824:	dec    ebp
  41a825:	mov    DWORD PTR [ebx],ebp
  41a827:	fmul   DWORD PTR [ecx+0x458bd845]
  41a82d:	fmul   DWORD PTR [ebx+0x40c3f0c7]
  41a833:	enter  0x1303,0xc
  41a837:	inc    ebp
  41a838:	dec    ebp
  41a839:	xor    edi,DWORD PTR [ebx]
  41a83b:	add    esi,DWORD PTR [edx+0x50]
  41a83e:	mov    ecx,DWORD PTR [eax+esi*8]
  41a841:	inc    ebp
  41a842:	inc    eax
  41a843:	push   eax
  41a844:	mov    ebp,esp
  41a846:	lock inc DWORD PTR [ecx-0x75]
  41a84a:	mov    esp,esp
  41a84c:	fadd   DWORD PTR [eax]
  41a84e:	rol    edi,0xee
  41a851:	test   BYTE PTR [eax],al
  41a853:	dec    esp
  41a854:	push   0x32
  41a856:	dec    DWORD PTR [ebx-0x30ba0314]
  41a85c:	push   eax
  41a85d:	mov    dh,0x21
  41a85f:	add    edi,edi
  41a861:	cmp    edi,DWORD PTR [eax-0x7877af1]
  41a867:	add    BYTE PTR [ebp-0x75],al
  41a86a:	(bad)  
  41a86b:	loopne 0x41a839
  41a86d:	add    BYTE PTR [ebp+0x4584f8c7],al
  41a873:	dec    esp
  41a874:	xor    esi,DWORD PTR [edx]
  41a876:	pushf  
  41a877:	mov    eax,edi
  41a879:	cld    
  41a87a:	(bad)  
  41a87b:	iret   
  41a87c:	test   DWORD PTR [esi+0x3b4d03f8],esi
  41a882:	mov    DWORD PTR [edi],ecx
  41a884:	in     al,0x58
  41a886:	dec    ebp
  41a887:	add    BYTE PTR [ecx+0x4df0e08b],cl
  41a88d:	add    BYTE PTR [ecx+0x4d84f0c7],cl
  41a893:	dec    esp
  41a894:	mov    DWORD PTR [edx],esi
  41a896:	fmul   QWORD PTR [ebx-0x30cc03b3]
  41a89c:	add    esi,DWORD PTR [esi+0x3bd80389]
  41a8a2:	test   DWORD PTR [edi],0x3d3800
  41a8a8:	test   DWORD PTR [ebx+0x84dcf8],ecx
  41a8ae:	add    edi,eax
  41a8b0:	add    BYTE PTR [ebp+ecx*2-0x74cdccb4],al
  41a8b7:	mov    eax,DWORD PTR [ebx]
  41a8b9:	cld    
  41a8ba:	mov    edi,ecx
  41a8bc:	hlt    
  41a8bd:	mov    dh,0x45
  41a8bf:	add    esi,DWORD PTR [ebx]
  41a8c1:	cmp    ecx,DWORD PTR [ebp+0x7218300f]
  41a8c7:	add    BYTE PTR [eax],al
  41a8c9:	mov    eax,DWORD PTR [ebp-0x20]
  41a8cc:	mov    eax,DWORD PTR [eax]
  41a8ce:	call   0x33c5f69a
  41a8d3:	dec    esp
  41a8d4:	add    esi,DWORD PTR [edx]
  41a8d6:	cmp    ecx,DWORD PTR [ebx+0x98be475]
  41a8dc:	cld    
  41a8dd:	iret   
  41a8de:	(bad)  
  41a8df:	mov    ebx,es
  41a8e1:	dec    esp
  41a8e2:	push   0x32
  41a8e4:	lea    esi,[edx]
  41a8e6:	mov    al,0x8b
  41a8e8:	call   0xff4ba3dd
  41a8ed:	iret   
  41a8ee:	inc    ebp
  41a8ef:	mov    WORD PTR [ebx-0x75cdccb4],cs
  41a8f5:	or     al,BYTE PTR ds:0xe4728b
  41a8fb:	or     DWORD PTR [ebp-0x31],ecx
  41a8fe:	xor    ecx,DWORD PTR [edi+ecx*1-0x34cd3fb0]
  41a905:	cmp    al,cl
  41a907:	je     0x41aae1
  41a90d:	mov    eax,DWORD PTR [ebp-0x10]
  41a910:	mov    eax,DWORD PTR [eax]
  41a912:	xor    eax,edi
  41a914:	mov    al,BYTE PTR [ebp+eax*1+0x32724c]
  41a91b:	mov    ecx,DWORD PTR [ebp-0x20]
  41a91e:	xor    ecx,DWORD PTR [ecx]
  41a920:	bswap  edi
  41a922:	ror    BYTE PTR [ebx+ecx*8-0x7bcd3eb4],0x32
  41a92a:	add    DWORD PTR [ebx+0x945dc00],ecx
  41a930:	mov    ecx,edi
  41a932:	xor    ecx,DWORD PTR [edx+ecx*4+0x7232054c]
  41a939:	or     al,BYTE PTR [eax]
  41a93b:	mov    ecx,DWORD PTR [ebp-0x20]
  41a93e:	xor    ecx,DWORD PTR [ecx]
  41a940:	bswap  edi
  41a942:	ror    BYTE PTR [ebx+ecx*8-0x7bcd3eb0],0x3a
  41a94a:	add    DWORD PTR [edi],ecx
  41a94c:	add    BYTE PTR [eax-0x7474ffbb],dl
  41a952:	xor    ebx,esp
  41a954:	mov    al,BYTE PTR [eax]
  41a956:	add    eax,0x8472c7
  41a95b:	dec    esp
  41a95c:	dec    ebp
  41a95d:	xor    dh,BYTE PTR [ebx]
  41a95f:	mov    ecx,DWORD PTR [edi]
  41a961:	lock ror BYTE PTR [ecx],0xcb
  41a965:	iret   
  41a966:	ror    DWORD PTR [esp+eax*4+0x32014c],0x32
  41a96e:	inc    ebp
  41a96f:	mov    ecx,DWORD PTR [ebx-0x75f6cc1c]
  41a975:	iret   
  41a976:	add    eax,0x4c728c
  41a97b:	xor    cl,BYTE PTR [ebp+0xa]
  41a97e:	mov    ecx,DWORD PTR [ebx+0x98af033]
  41a984:	or     eax,0x8c72cf
  41a989:	push   eax
  41a98a:	shl    DWORD PTR [edx],0x4d
  41a98d:	cmp    cl,BYTE PTR [ebx-0x7574cc8b]
  41a993:	fmul   QWORD PTR ds:0xc77200
  41a999:	test   cl,al
  41a99b:	dec    esp
  41a99c:	dec    ebp
  41a99d:	xor    cl,BYTE PTR [ebx-0x751bcc75]
  41a9a3:	or     DWORD PTR ds:0x8c72cf,ecx
  41a9a9:	dec    esp
  41a9aa:	enter  0x8532,0x32
  41a9ae:	add    BYTE PTR [ebx+0x945e000],cl
  41a9b4:	mov    ecx,edi
  41a9b6:	xor    ecx,DWORD PTR [edx+ecx*4+0x7232054c]
  41a9bd:	or     al,BYTE PTR [eax]
  41a9bf:	mov    ecx,DWORD PTR [ebp-0x24]
  41a9c2:	mov    ecx,DWORD PTR [ecx]
  41a9c4:	xor    ecx,edi
  41a9c6:	mov    cl,BYTE PTR [ebp+ecx*1+0x327250]
  41a9cd:	cmp    al,cl
  41a9cf:	jne    0x41aa1e
  41a9d1:	lea    ecx,[ebx-0x7517cc50]
  41a9d7:	sti    
  41a9d8:	or     eax,0x4d72ff
  41a9dd:	cmp    eax,ecx
  41a9df:	je     0x41aa2e
  41a9e1:	mov    ecx,DWORD PTR [ebx-0x7538cc04]
  41a9e7:	ret    
  41a9e8:	or     eax,0x8b7245
  41a9ed:	call   0x84c771ba
  41a9f2:	add    BYTE PTR [eax+eax*1-0x74ccbace],bl
  41a9f9:	mov    esi,DWORD PTR [ebx]
  41a9fb:	cld    
  41a9fc:	mov    dl,BYTE PTR [ebp+0x5]
  41a9ff:	xor    esi,DWORD PTR [edx+0x3]
  41aa02:	add    BYTE PTR [ebx],bh
  41aa04:	dec    ebp
  41aa05:	jnp    0x8b40de02
  41aa0b:	mov    ecx,DWORD PTR ds:0x4d72fc
  41aa11:	xor    eax,ecx
  41aa13:	add    ecx,DWORD PTR [ebp+0x3b]
  41aa16:	mov    esi,DWORD PTR [ebp+0x33]
  41aa19:	mov    ecx,DWORD PTR [edx+0x724d0de8]
  41aa1f:	xor    eax,DWORD PTR [eax]
  41aa21:	(bad)  
  41aa22:	ror    DWORD PTR [eax],0x4d
  41aa25:	jb     0x41a9b2
  41aa27:	add    BYTE PTR [ebx],dh
  41aa29:	ja     0x41a9b5
  41aa2b:	sbb    BYTE PTR ds:0x8d7275,cl
  41aa31:	cwde   
  41aa32:	enter  0x50e8,0xf3
  41aa36:	inc    ebp
  41aa37:	dec    DWORD PTR [ebx-0x7574ccbb]
  41aa3d:	fadd   DWORD PTR ds:0xc372c7
  41aa43:	ror    DWORD PTR [ebp+0x13],0x8b
  41aa47:	inc    ebp
  41aa48:	xor    esi,DWORD PTR [ebx]
  41aa4a:	mov    al,BYTE PTR [ebx]
  41aa4c:	or     eax,0x187250
  41aa51:	inc    ebp
  41aa52:	rcl    DWORD PTR [eax+0x4d],0xdc
  41aa56:	mov    edi,edi
  41aa58:	xor    ecx,DWORD PTR [ebx-0x3ff21376]
  41aa5e:	jb     0x41a9e9
  41aa60:	add    ah,bl
  41aa62:	shl    DWORD PTR [ebp+0x4d],0xff
  41aa66:	mov    ebx,esp
  41aa68:	xor    eax,DWORD PTR [ebp-0x76]
  41aa6b:	add    ecx,DWORD PTR ds:0xe87208
  41aa71:	repz enter 0x10ff,0x45
  41aa76:	inc    ebp
  41aa77:	mov    edx,DWORD PTR [eax-0x28]
  41aa7a:	xor    bh,al
  41aa7c:	inc    ebx
  41aa7e:	mov    eax,ecx
  41aa80:	mov    eax,0xa00c111
  41aa85:	jne    0x41aacc
  41aa87:	mov    esi,DWORD PTR [ebx]
  41aa89:	test   al,0x3
  41aa8b:	inc    ebp
  41aa8c:	mov    DWORD PTR [eax-0xc],edx
  41aa8f:	mov    ds:0x8b33ff45,al
  41aa94:	lea    edx,[eax]
  41aa96:	xor    BYTE PTR [ebp+0x72],cl
  41aa99:	add    DWORD PTR [eax],eax
  41aa9b:	mov    eax,edi
  41aa9d:	lods   al,BYTE PTR ds:[esi]
  41aa9e:	dec    ebp
  41aa9f:	inc    ebp
  41aaa0:	mov    ecx,DWORD PTR [ecx+0x45cf14f4]
  41aaa6:	retf   
  41aaa7:	mov    edx,ecx
  41aaa9:	adc    al,0x84
  41aaab:	(bad)  
  41aaac:	std    
  41aaad:	ret    
  41aaae:	jmp    FWORD PTR [edi-0x37474bb]
  41aab4:	hlt    
  41aab5:	push   ebp
  41aab6:	(bad)  
  41aab7:	xor    eax,ebx
  41aab9:	(bad)  
  41aaba:	enter  0x1111,0x72
  41aabe:	inc    ebp
  41aabf:	add    BYTE PTR [ebx-0x387deb3f],cl
  41aac5:	cld    
  41aac6:	test   bh,bh
  41aac8:	pushf  
  41aac9:	inc    ebp
  41aaca:	xor    bl,BYTE PTR [edi-0x15]
  41aacd:	pop    ebx
  41aace:	push   0xffffffc2
  41aad0:	inc    DWORD PTR [eax]
  41aad2:	in     al,dx
  41aad3:	mov    eax,DWORD PTR [ebp+0x51]
  41aad6:	push   eax
  41aad7:	inc    ebp
  41aad8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aad9:	mov    edi,edi
  41aadb:	or     BYTE PTR [ebx+0x4d80fc16],cl
  41aae1:	add    DWORD PTR [ebx],esi
  41aae3:	add    BYTE PTR [ebx],al
  41aae5:	add    BYTE PTR [ebx],bh
  41aae7:	icebp  
  41aae8:	je     0x41aaf2
  41aaea:	mov    eax,DWORD PTR [edi]
  41aaec:	cld    
  41aaed:	rol    edi,0x72
  41aaf0:	ret    
  41aaf1:	add    BYTE PTR [edx-0x2f],ch
  41aaf4:	lea    edx,[eax]
  41aaf6:	cwde   
  41aaf7:	jne    0x41aae1
  41aaf9:	(bad)  
  41aafa:	clc    
  41aafb:	or     al,0xff
  41aafd:	inc    DWORD PTR [ebp-0x18]
  41ab00:	cmp    ebx,0x18
  41ab03:	inc    DWORD PTR [ebp+0x6]
  41ab06:	call   FWORD PTR [ebp-0x54]
  41ab09:	or     al,0x75
  41ab0b:	push   ebp
  41ab0c:	mov    ebp,esp
  41ab0e:	test   al,0x53
  41ab10:	inc    ebp
  41ab11:	mov    edx,DWORD PTR [eax-0x75]
  41ab14:	imul   ecx,DWORD PTR [eax],0xffffffff
  41ab17:	dec    ebp
  41ab18:	mov    edx,DWORD PTR [edi-0x4]
  41ab1b:	push   ebp
  41ab1c:	dec    ebp
  41ab1d:	push   ecx
  41ab1e:	xor    esi,DWORD PTR [ebx]
  41ab20:	add    edi,DWORD PTR [edi+0x74723b]
  41ab26:	push   0xffffffc7
  41ab28:	inc    DWORD PTR [ecx]
  41ab2a:	lods   al,BYTE PTR ds:[esi]
  41ab2b:	inc    ebp
  41ab2c:	inc    ebp
  41ab2d:	mov    eax,DWORD PTR [ebx]
  41ab2f:	xchg   esp,eax
  41ab30:	or     BYTE PTR [eax],al
  41ab32:	call   0xffcda3c2
  41ab37:	adc    al,0x45
  41ab39:	or     BYTE PTR [ebx+0x800ac01],0x0
  41ab40:	inc    ebp
  41ab41:	inc    ecx
  41ab42:	add    ecx,DWORD PTR [ebx-0x76baebec]
  41ab48:	mov    eax,DWORD PTR [ecx]
  41ab4a:	call   0x338af84f
  41ab4f:	push   0x3
  41ab51:	push   0xc1300f
  41ab56:	dec    ebp
  41ab57:	jo     0x41aae4
  41ab59:	push   0xffffffd4
  41ab5b:	dec    edi
  41ab5d:	mov    DWORD PTR [ebx+ecx*4-0x3ccdf764],ecx
  41ab64:	cmp    eax,edi
  41ab66:	cmovne edx,DWORD PTR [edi-0x75]
  41ab6a:	call   DWORD PTR [eax]
  41ab6c:	mov    eax,DWORD PTR [ebp+0x8]
  41ab6f:	call   FWORD PTR [esi+0x14]
  41ab72:	leave  
  41ab73:	inc    ebp
  41ab74:	adc    BYTE PTR [eax+0x55],dl
  41ab77:	jne    0x41ab65
  41ab79:	call   0xff52ab09
  41ab7e:	dec    ebp
  41ab7f:	inc    ebp
  41ab80:	mov    ecx,DWORD PTR [ebx+0x390338b]
  41ab86:	add    BYTE PTR [ebx],bh
  41ab88:	mov    esi,DWORD PTR [ecx+eax*4-0x75]
  41ab8c:	push   ebp
  41ab8d:	or     al,0x51
  41ab8f:	dec    ebp
  41ab90:	xor    DWORD PTR [ebx],0xf32039c
  41ab96:	cmp    eax,DWORD PTR [ebp+0x74]
  41ab99:	mov    edi,edi
  41ab9b:	pop    edi
  41ab9c:	adc    BYTE PTR [ebx+0x75],bl
  41ab9f:	ret    0x50
  41aba2:	mov    ecx,DWORD PTR ss:[edx-0x7d]
  41aba6:	(bad)  
  41aba7:	clc    
  41aba8:	mov    esp,ebp
  41abaa:	pop    ecx
  41abab:	mov    ecx,0xf80085c2
  41abb0:	mov    ecx,DWORD PTR [ecx+edx*2]
  41abb3:	push   esi
  41abb4:	push   esi
  41abb5:	(bad)  
  41abb6:	lock inc DWORD PTR [ebp+0x44]
  41abba:	mov    edx,DWORD PTR [eax]
  41abbc:	adc    BYTE PTR [ebx+edi*4+0x8],bh
  41abc0:	or     BYTE PTR [ebp+0x7],dl
  41abc3:	push   ecx
  41abc4:	ret    
  41abc5:	xor    ebx,DWORD PTR [esi+edi*4+0x37232]
  41abcc:	mov    esi,edi
  41abce:	mov    edi,DWORD PTR [esp+edx*1+0xc]
  41abd2:	cmp    BYTE PTR [ebp+0x1],0x89
  41abd6:	add    BYTE PTR [eax+ecx*1],ah
  41abd9:	cmp    DWORD PTR [ebp+0x10],eax
  41abdc:	mov    edx,DWORD PTR [esi]
  41abde:	xchg   esp,eax
  41abdf:	dec    esp
  41abe0:	add    BYTE PTR [eax],dl
  41abe2:	mov    ecx,edx
  41abe4:	add    edx,DWORD PTR [esp+edi*1+0x8]
  41abe8:	dec    ebp
  41abe9:	into   
  41abea:	mov    ebp,DWORD PTR [edi+0x240089d8]
  41abf0:	mov    edx,DWORD PTR [eax+0x14]
  41abf3:	das    
  41abf4:	add    al,0x45
  41abf6:	add    BYTE PTR [ebp+0x0],dh
  41abf9:	mov    edi,edi
  41abfb:	and    al,0x50
  41abfd:	mov    eax,DWORD PTR [eax]
  41abff:	and    al,0xd1
  41ac01:	xor    eax,DWORD PTR [esi]
  41ac03:	lea    eax,[ebp+0x8]
  41ac06:	xor    esi,DWORD PTR [edx+0x3]
  41ac09:	add    BYTE PTR [ecx+0x4510fc44],cl
  41ac0f:	xor    ecx,DWORD PTR [ebx+0x75eb0c9c]
  41ac15:	or     DWORD PTR [ebp-0x7a03f0],0x541608f8
  41ac1f:	xor    bh,bh
  41ac21:	pushf  
  41ac22:	mov    edi,edi
  41ac24:	or     BYTE PTR [esi+ecx*1],cl
  41ac27:	jne    0x41abec
  41ac29:	call   0xaabf5
  41ac2e:	adc    BYTE PTR [ebp+eax*2+0xc],al
  41ac32:	mov    ebx,DWORD PTR [eax]
  41ac34:	adc    BYTE PTR [ebx+eax*8+0x14],dh
  41ac38:	mov    DWORD PTR [edi+ebp*4-0x73],0x750110fc
  41ac40:	pop    esi
  41ac41:	dec    ecx
  41ac43:	and    al,0x10
  41ac45:	call   DWORD PTR [ebp+0x24]
  41ac48:	in     al,dx
  41ac49:	call   0xffc5ab32
  41ac4e:	adc    BYTE PTR [ecx+esi*1+0xc],al
  41ac52:	pushf  
  41ac53:	pop    esi
  41ac54:	mov    ebp,esp
  41ac56:	and    al,0xc2
  41ac58:	push   edi
  41ac59:	add    BYTE PTR [ecx+0x33],al
  41ac5c:	mov    DWORD PTR [ebp+0x24],esi
  41ac5f:	test   DWORD PTR [ebx-0x45f7db8b],ecx
  41ac65:	dec    DWORD PTR [eax]
  41ac67:	and    al,0x7
  41ac69:	(bad)  
  41ac6a:	cli    
  41ac6b:	and    al,0x9c
  41ac6d:	or     BYTE PTR [edx],dh
  41ac6f:	sbb    BYTE PTR [ebx],al
  41ac71:	adc    al,0x89
  41ac73:	jmp    DWORD PTR [esp]
  41ac76:	mov    ecx,DWORD PTR [ebx+0x1c7c0c0c]
  41ac7c:	adc    al,0x8
  41ac7e:	dec    ebp
  41ac7f:	adc    BYTE PTR [ebp-0x7c],dh
  41ac82:	mov    esi,DWORD PTR [edx]
  41ac84:	and    al,0x24
  41ac86:	xor    eax,DWORD PTR [ebp-0x63dbf175]
  41ac8c:	add    edi,eax
  41ac8e:	pcmpeqb mm1,mm2
  41ac91:	jmp    0x41acdf
  41ac93:	dec    DWORD PTR [eax]
  41ac95:	je     0x41ac82
  41ac97:	mov    edi,DWORD PTR [ecx]
  41ac99:	pop    ebp
  41ac9a:	adc    BYTE PTR [esp+ecx*2-0x3e],al
  41ac9e:	pushf  
  41ac9f:	mov    DWORD PTR [eax-0x8],ebp
  41aca2:	jge    0x41ad0c
  41aca4:	dec    DWORD PTR [ecx+0x5fbf7424]
